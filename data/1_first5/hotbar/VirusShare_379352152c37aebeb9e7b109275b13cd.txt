divb
in
mov
mov
sub
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
adc
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
and
inc
cld
add
jmp
test
jne
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
icebp
jg
xor
cmpsb
icebp
mov
mov
call
pushl
mov
pusha
xor
adcb
data16
inc
add
mov
mov
andl
adc
mov
push
sub
mov
hlt
cs
ja
sbb
fcomps
adc
xchg
mov
lock
dec
or
loopne
or
mov
mov
or
or
pop
cmpsl
push
push
push
and
mov
int
sbb
push
call
sub
add
dec
add
pop
pop
pop
arpl
call
inc
mov
out
xchg
into
adc
xchg
pop
add
inc
scas
push
dec
testb
orl
jbe
ret
ja
scas
dec
push
mov
sbb
xchg
sbb
loope
xor
push
xchg
mov
inc
cmp
xchg
pop
lcall
das
and
add
dec
adc
xlat
fsubr
stos
out
dec
add
and
add
push
js
xor
or
cmp
ljmp
fadd
jae
in
scas
cltd
push
pop
pop
push
jno
pop
jmp
mov
or
push
push
sbb
outsb
or
sub
add
xlat
mov
cmp
push
mov
push
jne
jp
aaa
ja
inc
pop
bound
das
pop
ficoml
push
mov
cmp
add
or
sbb
push
clc
jge
insl
cmp
lcall
mov
xor
mov
pop
ret
push
inc
lock
jae
scas
mov
int
inc
sub
popl
mov
inc
clc
sub
enter
push
pop
adc
mov
ss
push
sbb
orb
jl
jne
pop
adc
out
loopne
inc
test
adc
or
inc
clc
jg
mov
adc
adc
ret
mov
rcrb
adc
pop
outsl
pop
xchg
sbb
pushf
sbb
mov
sub
push
mov
sar
jg
std
jg
lea
push
cmp
ja
adc
sbb
add
push
fndisi(8087
std
add
scas
and
sub
jo
push
add
push
sarb
or
ret
icebp
cld
push
push
std
mov
jle
mov
cmpl
or
add
lock
shr
sub
xor
incb
inc
jle
add
pop
cltd
jge
enter
cmc
int3
ja
mov
aam
cmp
rclb
push
pop
push
fidivrs
add
push
jne
in
cli
or
inc
test
jmp
mov
push
jbe
idivl
mov
call
jb
add
inc
add
inc
add
dec
sar
lea
push
add
push
push
lea
fildl
ficoml
xor
dec
int3
pop
hlt
into
mov
aam
add
cmp
fdivrs
cmpsl
xlat
ja
stc
mov
cld
fsubrs
fisubrs
stos
mov
mov
popa
dec
lods
or
test
jle
cmp
mov
cmp
call
mov
rcrb
inc
icebp
pop
mov
ja
mov
push
mov
outsb
xor
adc
jmp
jo
pop
fucomp
loope
mov
push
mov
sub
pop
mov
dec
pop
sub
lock
es
pop
lcall
hlt
adcb
addb
repz
pop
and
mov
jl
cmp
push
dec
adc
daa
cmp
scas
cmp
push
sar
fsubr
dec
jnp
push
adc
cmp
jle
mov
imul
out
aam
cmpl
je
push
push
or
pop
or
and
cmp
or
pop
lret
ja
xchg
stos
add
add
jb,pt
pop
xchg
in
add
xchg
pop
leave
je
outsl
jg
fcoms
jnp
ljmp
out
cmp
aas
lods
sbb
fcoml
push
push
rcrb
ja
mov
adc
or
cmpsb
pop
test
cld
pop
xchg
out
cmp
jo
inc
sub
decb
lock
mov
int
mov
mov
pop
pop
or
cmp
sub
outsl
das
xor
jno
cmp
jne
push
push
push
push
les
jl
cmc
jecxz
mov
mov
mov
pop
push
test
or
pop
pop
pop
pop
dec
and
pop
lret
mov
sub
or
mov
imul
sub
repz
jo
into
dec
out
out
push
add
fiadds
mov
stc
mov
mov
cwtl
iret
jle
mov
test
in
pusha
push
mov
out
mov
in
fistl
cmp
js
mov
pop
mov
lahf
test
mov
rcr
orl
jnp
in
xchg
sbb
push
das
fidivrs
je
push
aas
pop
dec
push
orl
sbb
rep
pusha
add
inc
inc
fmuls
movsl
movsb
jns
scas
lea
pop
push
xor
imul
xchg
pop
push
in
fsubl
push
jg
and
mov
shl
adc
dec
inc
push
dec
mov
or
push
add
push
lret
loopne
mov
sub
loop
loope
mov
pop
mov
adc
push
loopne
das
mov
push
movsb
adc
xor
cmp
cmp
aad
roll
adc
dec
or
jne
jno
xor
sbb
push
mov
scas
mov
adc
stos
or
push
leave
jb
cmp
inc
arpl
and
jbe
pop
or
sbb
adc
out
fcom
fcmovb
lret
cmp
in
out
pusha
mov
or
sbb
fcos
push
arpl
cs
jne
dec
jo
mov
dec
push
or
fsubl
jge
xchg
iret
jmp
jno
add
jbe
and
mov
push
adc
or
push
xor
add
push
pop
sub
test
sub
cmp
mov
mov
push
jo
shrl
xchg
sbb
fs
jno
ret
lea
std
out
out
push
dec
adc
xor
pop
push
push
rorb
mov
andb
or
dec
lods
add
in
pop
mov
pop
test
sbb
insb
popf
js
xchg
call
in
fs
jo
jo
ror
pop
loop
mov
clc
push
push
mov
mov
sub
adc
pop
mov
xor
xchg
inc
and
mov
add
sti
pop
scas
jecxz
data16
andl
lock
xchg
stos
sbb
adc
cli
push
push
push
or
pop
xor
mov
jnp,pn
pop
or
inc
mov
daa
xchg
add
jg
clc
pop
mov
mov
dec
and
test
or
push
or
sub
mov
mov
push
js
or
adc
popa
add
loope
cmp
adc
in
dec
mov
in
add
je
and
sbb
inc
inc
pop
bts
xlat
andb
push
in
std
loope
cmpb
lea
xor
push
cmp
in
orl
test
jno
push
clc
scas
jle
bound
xor
das
push
sub
jge
mull
pusha
pop
dec
sub
adc
pushf
xchg
cwtl
mov
push
jg
iret
or
decl
adc
lahf
or
add
test
add
cwtl
fs
sbb
and
popa
jns
sbb
pop
cmp
sarb
xchg
ret
pop
jnp
adcb
ja
test
fsubr
push
lock
aas
pop
mov
mov
jns
or
sbb
mov
mov
push
pop
test
cmovo
les
dec
sub
or
sbb
sbb
loopne
dec
mov
rcll
or
sbb
mov
or
push
xor
push
add
rcrl
out
pop
pushf
sub
aas
push
and
inc
pop
xor
and
jo
ret
and
mov
jns
mov
mov
je
scas
adc
aad
xor
fstp
xchg
pop
mov
insl
push
push
out
cmc
jle
sbb
cs
mov
ret
push
cwtl
and
loope
insl
clc
push
push
stos
inc
pop
jge
dec
or
mov
xchg
sbb
std
sbb
pop
sahf
out
sbb
dec
jmp
cmp
add
movsb
mov
or
les
mov
shrb
call
add
jne
loopne
jle
fimull
mov
xchg
jne
push
mulb
push
insb
and
js
sahf
xlat
call
sub
shl
push
jns
test
popa
jp
dec
add
jg
popa
fcoml
mov
sarb
push
mov
in
mov
cmp
sub
loopne
test
pop
xlat
loopne
popa
add
call
mov
idivb
in
mov
xlat
mov
out
cmp
loopne
lret
mov
pop
inc
xchg
adc
imul
mov
lret
xor
popa
mov
movsb
dec
aam
jge
stc
ss
mov
hlt
mov
out
add
lock
inc
loopne
xorb
mov
push
repz
fildl
int
in
lcall
or
jle
sbb
and
call
or
mov
ljmp
xor
lock
pop
js
inc
pusha
je
in
je
popf
ss
mov
sbb
rolb
add
addr16
cmpsl
lods
xor
test
push
fistl
lds
mov
push
push
sbb
stos
adc
neg
sbb
pop
les
sbb
std
inc
je
push
stos
enter
and
xchg
out
lret
dec
mov
es
mov
jb
and
cmp
mov
mov
mov
dec
and
inc
test
push
xor
add
iret
cmc
lock
or
lods
lods
add
in
mov
push
mov
into
cmp
ljmp
daa
arpl
and
pcmpeqb
jge
jmp
mov
sub
in
mov
ss
xor
sub
cmp
outsb
mov
hlt
fcoml
aas
jbe
out
jne
jo
jge
out
sti
enter
shlb
subb
mov
adc
dec
or
mov
enter
rclb
icebp
lea
fcomps
or
xchg
xchg
ret
les
jb
pushf
push
pushf
pushf
sahf
inc
cs
mov
mov
fs
mov
int3
enter
sbb
int3
leave
jae
in
and
sbb
mov
dec
enter
ret
sbb
dec
inc
rol
dec
leave
jae
mov
je
subl
adc
and
mov
jmp
sbb
pop
dec
xor
leave
xchg
mov
push
scas
arpl
dec
jmp
dec
inc
sub
jle
or
scas
das
and
push
pusha
adc
mov
mov
pop
mov
xchg
movl
pop
and
mov
inc
pusha
adc
or
dec
and
in
or
sbb
in
xchg
add
fsubs
mov
pop
insl
sub
mov
and
sbb
add
dec
sahf
mov
ds
push
mov
pop
mov
add
pop
cmp
out
in
sbbb
notl
test
and
imul
lret
adc
fnstsw
adcl
push
dec
punpckhwd
aaa
adc
dec
lahf
xor
sti
daa
orl
test
clc
lds
jb
jb
mov
xchg
test
and
push
pop
je
sub
mov
and
mov
xorl
add
je
add
popl
inc
andl
mov
sbb
fdivrl
in
cmpl
and
in
adc
mov
fcmovne
pop
and
push
pop
push
jmp
popa
mov
ret
push
or
shll
xor
roll
adc
or
adc
xor
pop
movsb
xchg
das
in
clc
fcoms
xchg
sbb
adc
inc
imul
mov
jl
mov
pop
dec
push
nop
or
add
jecxz
and
pusha
mov
fildl
mov
mov
or
and
pop
scas
adc
sbb
aad
insb
inc
adc
lret
jge
ret
movsw
jno
shll
inc
sbb
jne
fsub
sbb
repnz
into
adc
cmc
aaa
mov
adc
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
add
and
mov
mov
and
sub
push
xor
iret
sarb
sbb
mov
fistpl
inc
ret
out
jne
pop
mov
inc
test
push
enter
cmp
sbb
mov
sbb
xchg
and
popf
dec
sbb
mov
nop
add
push
dec
jo
push
sahf
les
sbb
fbld
pushf
pop
bndstx
fstps
or
in
loopne
dec
fs
testl
scas
xor
add
add
rclb
cmp
loopne
inc
add
subb
daa
loopne
xchg
inc
xor
mov
cmp
pushf
hlt
push
in
xchg
and
mov
mov
add
sti
adc
ffree
or
add
mov
xor
cmp
xor
xchg
add
aas
and
fstpt
sbb
mov
hlt
je
push
push
pop
in
mov
sbb
test
shlb
pusha
lock
inc
xchg
sub
mov
cld
cli
adc
and
xor
xorb
test
addb
sahf
sub
mov
mov
incb
cmp
mov
les
incl
and
push
and
sub
into
bound
loop
and
add
addl
xlat
popf
shll
or
and
out
jae
cmp
mulb
je
jo
sub
mov
add
inc
mov
movsb
xor
jg
sub
clc
sbb
test
fisubl
fwait
cmp
scas
sub
pop
inc
fiadds
sub
sub
dec
cmpsb
push
jl
push
push
test
jno
cmpsl
mov
ret
inc
lret
ret
test
popa
dec
aad
lret
or
mov
add
js
mov
hlt
inc
pop
rcrb
clc
push
insb
stos
out
add
xor
add
arpl
pop
pusha
insb
adc
push
lods
sub
and
aaa
sub
stos
mov
mov
aas
loope
leave
pop
mov
and
inc
cmp
test
cmp
lret
push
lods
add
sbb
mov
insl
xchg
inc
jg
push
add
mov
jl
mov
mov
dec
cmp
dec
sbb
sbb
lahf
mov
cld
mov
cmp
mov
push
jae
or
sub
and
and
int3
sub
mov
mov
mov
in
sub
sub
xchg
dec
mov
cmpl
imull
das
mov
aam
pop
xchg
cmp
mov
pushl
jnp
pop
popa
lret
fildl
xor
sbb
std
cmp
sbb
cmc
fiadds
jmp
mov
loopne
mov
jbe
cmp
and
fs
push
mulb
add
sbb
leave
nop
je
pop
mov
or
sbb
sbb
cmp
xor
push
sbb
cltd
sbb
sub
insb
mov
push
inc
push
and
xor
iret
sub
cmp
nop
dec
or
sub
mov
and
adc
jmp
ror
js
js
jl
in
shll
pushf
dec
sub
test
stos
push
or
add
fwait
push
dec
and
jl
or
rorb
adc
or
cmp
sbb
mov
pop
outsb
sbb
push
sbb
dec
loope
and
pop
addb
xor
ja
mov
je
adcb
push
jo
and
cmpsl
insb
into
mov
pop
pop
adc
popf
pop
cmpl
push
push
jl
push
aaa
add
dec
adc
cmp
fildl
popa
aas
sub
push
test
sti
add
lock
sub
lods
mov
xor
or
push
arpl
test
orb
adc
sbb
xor
adc
push
mov
test
mov
xchg
or
mov
add
ret
inc
or
mov
stos
add
sbb
out
popf
add
adc
mov
subb
out
jne
test
ja
mov
xchg
in
iret
adc
loop
fsubrl
mov
pop
popf
call
cmp
add
mov
push
cmp
lock
adc
jns
cmp
adc
add
ds
push
clc
in
into
cmc
mov
jno
mov
in
sbb
rcl
push
das
inc
lds
inc
out
pushf
mov
pusha
movsl
adc
and
mov
or
jo
and
cmp
jne
or
je
sub
cmpb
mov
xlat
sbb
es
cltd
xor
adc
sbbb
inc
mov
mov
pop
jbe
mov
call
out
jo
cmpsl
mov
jne
or
xchg
cmp
cmp
inc
sti
jbe
add
adc
pop
xorb
call
mov
add
repz
je
add
subb
dec
roll
push
cld
sub
loop
out
inc
lock
out
push
je
push
inc
or
lods
loope
jo
mov
sub
lds
inc
sub
bound
test
es
dec
fsubrp
xor
mov
imul
testb
push
scas
fdivl
add
or
enter
add
int3
add
mov
or
out
fisubrl
fs
test
sub
sub
and
cli
sub
in
mov
test
lock
jge
mov
sub
jmp
jge
imul
push
mov
mov
int
or
mov
adc
sub
imul
push
adc
or
aam
xor
les
arpl
call
test
lahf
mov
je
mov
or
push
mov
xor
inc
mov
inc
pop
lock
jle
mov
cmp
sbb
add
jl
sarl
ret
popf
mov
out
mov
adc
pop
add
or
pop
add
jmp
mov
aad
jnp
add
pop
clc
pop
shlb
cmp
mov
mov
add
icebp
push
push
mov
stos
enter
lock
push
fwait
push
add
add
cmp
push
lock
fcomps
push
mov
jle
cmp
sbb
std
push
dec
repnz
push
in
pop
lea
or
hlt
loopne,pt
in
xchg
loopnew
xor
loope
sub
add
pop
mov
push
push
loopne
notb
in
inc
xlat
in
pop
cmpsb
cmpsl
pop
stos
mov
xor
add
andl
or
insl
mov
mov
call
add
outsl
test
dec
test
push
pop
ljmp
das
sti
sarb
add
or
inc
cmp
in
dec
in
shlb
add
xor
lods
mov
test
or
adc
call
push
psrad
jo
gs
dec
jg
lret
test
jmp
loopne
sub
lods
pop
cld
loopne
subb
mov
mov
dec
fadd
jb
push
xchg
call
push
test
push
and
sbb
inc
fimuls
push
push
and
xchg
loopne
push
stc
adc
mov
popa
inc
xor
xchg
xor
push
xchg
dec
or
or
add
faddl
mov
ficoml
push
movsl
fnstsw
mov
les
scas
sbb
jno
flds
mov
inc
mov
and
mov
loope
mov
mov
or
lods
rcr
jp
push
mov
jbe
pop
addl
fnsave
iret
std
add
mov
and
test
pop
call
push
inc
loop
in
dec
mov
loope
rcrl
mov
pusha
sub
mov
push
mov
add
test
je
mov
pop
or
jge
and
dec
push
cmovns
jp
loopne
adc
add
nop
dec
sub
lahf
shr
pushf
pop
sti
jno
adc
pop
hlt
loopne
in
enter
mov
setns
push
dec
mov
cmp
es
int3
add
inc
sbb
and
repnz
faddl
in
loopne
add
mov
ss
xor
inc
mov
pushl
call
loop
fadd
cmp
aaa
movsl
sti
adc
mov
push
adc
push
ret
push
push
inc
push
and
pop
mov
pop
inc
jns
jno
arpl
jle
movb
arpl
add
mov
add
push
pop
fsubrs
insl
sbb
test
xor
pop
or
mov
push
mov
xor
or
js
jmp
enter
adc
sahf
inc
push
push
mov
mov
js
jg
mov
mov
jmp
add
stos
enter
pop
jp
leave
jae
sbb
sbb
sbb
jp
mov
add
repnz
enter
icebp
pop
aad
imul
imul
lea
cmp
outsb
sub
sub
cmpl
scas
insb
add
sbb
aas
adc
pop
dec
ret
push
pop
and
std
jmp
mov
push
add
pop
inc
sbb
mov
ja
roll
add
or
adc
jg
or
mov
and
lock
mov
lea
sbbb
cmp
jae
mov
incl
xor
inc
idivb
movsb
jp
xor
ds
call
div
lea
pop
jb
cmpl
mov
push
add
in
sub
and
scas
pop
clc
add
loopne
push
inc
je
push
cmp
jg
int3
movb
icebp
lret
ret
cmp
mov
divb
insb
mov
nop
add
mov
sub
xor
int3
add
das
jp
lea
movsb
adc
push
push
loop
cs
sbb
pusha
push
adc
pop
inc
xor
push
pop
sub
inc
add
mov
mov
mov
push
fsubl
insb
sub
inc
and
dec
and
jbe
xorb
and
pop
inc
mov
xchg
xchg
clc
repnz
cmpsl
popa
es
je
test
js
cltd
testb
sbb
or
cmp
clc
or
push
dec
jmp
cmpl
dec
add
push
inc
inc
adc
add
inc
clc
sbb
push
test
mov
fwait
mov
push
lock
arpl
mov
lock
mov
jns
mulb
js
jns
push
mov
insb
mov
cmp
clc
ret
cmc
ret
mov
mov
les
pushl
adc
sub
xor
xor
mov
push
xchg
dec
mov
push
mov
jbe
insb
mov
mov
hlt
pop
mov
fimull
sbb
cmpsb
lds
mov
scas
test
jo
inc
scas
in
jbe
inc
sbbb
and
pop
fdivr
rep
sti
loopne
mov
lret
cmp
mov
pop
sbb
mov
dec
or
add
or
add
pop
and
push
loopne,pt
cmp
pop
pop
mov
pop
rcl
addr16
xchg
jl
insb
adc
or
dec
std
mov
je
push
pop
cli
cli
and
adc
jmp
jbe
int
movsl
test
pop
ja
mov
sbb
jbe
sub
add
adc
cmc
inc
adc
jg
mov
je
imul
cmp
dec
add
xchg
xor
inc
cmp
in
aaa
fs
push
push
push
and
sbb
cmp
movsl
adc
push
sbb
jl
lods
sub
or
adcb
out
xchg
cmc
ret
push
pop
adc
mov
pop
ds
popa
insl
adc
xchg
or
movsl
jge
push
popf
mov
movsb
pop
test
sti
and
push
in
or
push
push
cmp
js,pt
jo
mov
jp
mov
lods
ss
out
cmp
mov
mov
lea
sbb
mov
loop
cmp
adc
jmp
inc
roll
nop
ljmp
push
mov
inc
lret
jmp
fldl
jmp
adc
and
mov
inc
subl
shl
pusha
adc
jns
sar
jge
hlt
int
cmp
jne
loopne
and
je
sbb
movq
mov
add
ficoms
fadds
xchg
inc
or
fs
mov
addb
xchg
loopne
aam
push
stos
add
outsl
add
push
push
pop
xor
or
popa
dec
xchg
in
or
add
test
inc
flds
inc
pop
adc
ds
inc
add
movsb
inc
insl
inc
je
hlt
call
hlt
sub
sar
insb
cmpb
xor
lcall
je
clc
or
popa
shrl
dec
sub
mov
xchg
xchg
or
add
insb
cld
cmp
lea
jbe
fidivl
or
push
push
test
push
cs
dec
daa
mov
adc
push
inc
out
mov
mov
push
adc
inc
cmpsb
sub
push
movl
xchg
aaa
dec
add
imul
add
lods
daa
push
fsubl
gs
es
inc
add
mov
adc
adc
adc
shll
stc
add
dec
dec
mov
lock
dec
or
sbb
fcom
adc
scas
mov
pusha
negl
push
das
push
hlt
sbb
roll
adc
cmp
jno
lods
insb
lods
jo
arpl
and
pop
sub
mov
inc
jo
sub
fdivs
xor
dec
mov
jl
sub
fistl
nop
iret
cmp
push
xor
adcl
and
xchg
aad
dec
pop
pusha
adc
js
dec
mov
xchg
sbb
or
xlat
xchg
call
dec
mov
adcl
and
in
test
dec
test
cmp
call
fs
cmp
inc
push
push
dec
push
repnz
rorb
pop
inc
ficompl
imul
cmp
adcb
inc
aad
xchg
clc
mov
mov
push
fsub
in
xor
dec
pop
mov
cmp
rcl
mov
add
leave
adc
mov
leave
adcl
roll
enter
sbbb
in
push
dec
repz
sbb
inc
or
pop
jo
test
jge
and
pop
stos
push
test
lret
dec
push
push
sbb
into
rcrb
cs
inc
push
sbb
mov
fldl
shr
and
and
dec
sahf
shll
in
sub
movsl
stos
jns
jg
cwtl
push
inc
push
sahf
out
push
ja
jmp
and
push
add
mov
push
clc
loope
lret
inc
mov
jns
fs
and
add
iret
stos
add
in
test
xlat
mov
add
and
jmp
xchg
cmp
cmp
hlt
mov
dec
test
inc
adc
rorb
inc
mov
add
or
and
jb
add
data16
mov
or
sbb
out
fsubr
mov
loop
inc
and
sub
lods
sbb
jge
ret
and
sarl
push
lea
ret
pop
daa
lret
enter
adc
pop
mov
cs
or
cmp
sub
or
inc
scas
inc
sbb
cmp
and
lock
jge
shl
inc
push
scas
sub
pop
pop
shll
lea
icebp
inc
push
mov
and
ja
dec
cmpsl
push
cmp
adc
sbb
and
stc
adc
cmp
popf
cmpl
inc
pop
sbb
push
cmp
mov
fldt
shrl
pop
negl
mov
cmp
clc
adc
sarb
roll
jle
push
loop
stos
mov
push
pop
mov
addl
sub
out
bound
add
jbe
outsl
xadd
cmp
jmp
cmp
ja
xchg
icebp
cmp
pop
xor
jne
sub
sbb
push
pop
dec
je
mov
je
sub
test
test
dec
ss
sti
pop
push
in
dec
sub
adc
mov
shll
jo
aaa
push
pusha
leave
jmp
sbb
testl
fistl
decl
jmp
push
add
push
mov
xor
push
jmp
push
rolb
fsub
mov
sti
divl
cmp
fcomps
xchg
or
pop
push
mov
xorl
dec
imul
mov
shlb
and
push
lock
wbinvd
insb
push
xor
push
push
daa
pop
imul
or
pop
mov
rcr
jbe
lds
pop
or
sbb
inc
cmpl
jmp
cmp
je
cmp
shrl
dec
mov
sbb
leave
adc
in
jle
dec
cli
mov
sbb
fstpl
push
int
imulb
sub
sbb
jnp
in
xchg
and
jmp
and
jmp
data16
sub
dec
xchg
sbb
or
bound
mov
shr
sahf
cmpsl
stc
cmp
xor
outsw
pop
popf
out
or
and
mov
push
fcomi
and
pushw
and
mov
sbb
shrl
push
inc
sbb
fstl
lea
jbe
lahf
mov
add
sub
xchg
out
lahf
rorb
fmuls
xchg
int
push
bound
sbb
mov
push
js
out
push
or
xchg
xchg
pop
and
movsl
cld
jge
jno
aas
mov
push
dec
push
mov
pop
push
lea
push
imul
push
push
add
push
lea
jecxz
test
cmp
inc
repnz
cmpsb
add
dec
mov
enter
lahf
or
sbb
lea
dec
ljmp
xor
cld
rol
pop
aam
into
or
sahf
add
addb
xchg
faddp
xchg
outsl
jle
sbb
sbb
push
je
xchg
sub
stos
pop
rcl
pop
push
push
add
jl
inc
xor
add
popf
push
pop
clc
mov
stos
in
test
jmp
into
or
add
in
and
dec
adc
dec
movsl
adc
push
aas
push
push
jbe
jne
movl
pushf
xchg
mov
jle
adc
test
xchg
and
pop
push
iret
sub
mov
sub
xor
push
sbb
push
cmp
adc
cmp
dec
dec
rcl
pcmpeqw
push
add
popa
pusha
orb
pop
push
adc
xorb
ret
pop
or
xchg
dec
push
push
and
jo
popf
mov
sub
repz
in
and
mov
inc
in
or
in
add
xchg
mov
out
call
cmp
mov
lea
mulb
lods
clc
into
push
mov
mov
sbb
push
push
loopne
push
cmp
lock
pushf
movsl
gs
jl
sbb
sbb
leave
or
mov
addb
sbb
add
repz
ret
imul
insl
jno
jecxz
sub
outsl
push
loopne
mov
aam
mov
fsubrl
in
ds
jne
int3
push
out
jecxz
xchg
add
pop
je
xchg
fcoml
add
jbe
pop
les
xchg
fcmovnu
shlb
loopne
add
pop
xchg
sbb
std
ret
fcoml
pop
or
rorb
add
mov
add
cmp
jne
push
stc
adc
sub
xor
pop
fadds
jo
xor
or
mov
lea
push
loopne
add
mov
adc
mov
mov
enter
pop
js
sbb
cmp
jne
call
push
or
ror
and
adc
xchg
imul
jne
in
or
mov
out
shrb
les
fisubrl
ficomps
dec
lock
div
push
push
pop
scas
dec
je
dec
push
push
adc
lea
and
jge
fidivs
inc
dec
sub
or
in
dec
jmp
sub
icebp
push
sub
in
fstpt
in
jmp
mov
add
mov
inc
adc
mov
cmp
repz
dec
jl
mov
adc
push
cs
cmp
fildll
stos
out
mov
mov
and
fcoms
aam
sub
and
fistps
xor
lock
dec
dec
add
mov
mov
push
sbb
in
sbb
fwait
cmpsb
imul
jl
adcb
movsl
jne
push
idivb
xlat
inc
insb
pop
in
insl
mov
or
xor
ret
je
rorb
leave
and
jbe
loope
push
push
in
sahf
sub
out
aaa
adc
pushf
hlt
mov
lods
ja
push
aaa
test
push
into
pusha
repnz
mov
mov
push
lods
or
scas
xor
jnp
and
push
in
call
mov
in
or
jp
stos
aas
xor
testb
jo
loopne
les
xor
cmp
shl
xchg
in
pop
loopne
test
dec
add
idivl
movsl
fwait
pop
or
jge
add
rclb
xlat
inc
lcall
subl
fdivs
cmp
outsl
fcoml
mov
ret
scas
push
and
inc
dec
ffree
adc
xor
rcll
clc
jp
ret
inc
cmp
sub
cmp
je
cmp
mov
into
jbe
sbb
jmp
jno
push
adc
pop
loope
xchg
lods
add
xchg
shll
dec
leave
jo
in
inc
pop
mov
imul
es
xor
adc
push
jne
movb
jmp
cmp
adc
icebp
pop
repz
xchg
movsl
fldz
xor
and
mov
mov
jo
movb
sub
mov
shlb
cmc
test
test
jge
push
mov
sub
xor
rorb
test
and
lahf
add
jl
fimull
popf
sub
mov
pop
sti
int3
xor
sbb
mov
lods
dec
sbb
es
push
mov
leave
push
jns
ficomps
push
mov
mov
cmp
iret
push
mov
pop
sub
push
push
mov
pop
adc
or
imulb
filds
repz
fs
xor
add
add
mov
cld
int3
ja
xor
pop
cmp
loopne
xchg
xchg
clc
movsl
mov
push
lea
sbb
or
pop
or
or
add
push
dec
pop
xchg
inc
clc
or
mov
cmpsl
gs
int3
push
push
lret
jl
xchg
addb
sahf
daa
push
jbe
xor
xchg
or
lods
icebp
bound
push
jge
mov
or
rcrb
test
outsb
mov
xorb
cmp
xchg
fwait
imul
or
cmp
mov
pop
push
out
push
mov
push
push
aaa
setge
movsl
mov
dec
cmpb
add
jb
cltd
insl
dec
inc
xchg
mov
popf
cmp
add
pop
scas
lods
mov
fs
les
ss
in
ds
test
lea
sbb
insb
adc
mov
pop
cli
dec
adc
fcomps
roll
cli
add
cltd
xor
or
xor
test
mov
xchg
nop
roll
out
add
xchg
xlat
push
sbb
lea
sub
loopne
cmpb
xor
clc
jecxz
cmp
cmp
push
and
jbe
adc
mov
cli
mov
jmp
push
push
mov
adc
mov
sbb
and
repz
cmc
dec
mov
bound
mov
inc
in
xchg
sbb
xchg
or
push
icebp
pusha
mov
add
cmp
xor
push
call
xchg
adc
pop
push
popa
dec
gs
push
sbb
sub
pusha
in
rcll
and
sbb
inc
xlat
sbb
daa
sbb
jo
out
push
je
arpl
nop
push
sbb
mov
dec
pop
mov
cwtl
dec
mov
sub
sbb
mov
clc
pop
loope
pop
jl
mov
cltd
mov
lea
push
jecxz
mov
dec
adc
sbb
jbe
movsb
lcall
or
mov
cmp
jge
mov
push
idiv
push
mov
push
push
adc
ret
xor
idiv
cmp
add
enter
inc
mov
test
fstpt
mov
rcrb
or
mov
sbb
ret
cmp
shlb
or
aad
and
adc
movsl
in
pop
add
or
out
repnz
push
pop
add
aam
sub
sub
xor
sbb
insl
ja
idivl
add
in
and
push
fwait
daa
pusha
ucomiss
test
jg
xlat
mov
jl
movl
incb
test
mov
lahf
xor
sub
in
sbb
fiadds
aas
dec
lea
enter
out
xor
xchg
sub
cmp
imul
or
out
insb
mov
ja
xchg
shl
fildl
mov
test
jns
faddl
scas
add
xor
xor
mov
fdivrp
mov
je
inc
dec
sub
mov
mov
fdivs
std
mov
pop
add
les
js
jbe
xchg
pop
jl
jmp
into
push
mov
and
or
fidivl
jmp
push
xchg
movl
push
pop
mov
pop
jne
pop
pop
movb
push
pop
jle
add
outsb
mov
push
or
xchg
insb
push
and
add
sbb
rorl
lret
mov
cld
lock
jg
inc
aam
clc
lea
or
adc
gs
xchg
push
gs
bound
fstps
add
inc
dec
xchg
jne
sahf
stos
mov
out
xchg
shll
push
pop
pop
cvtpi2ps
mov
ret
cmp
aad
sub
and
push
mov
adc
and
cltd
add
push
cltd
push
push
sub
repnz
or
push
mov
or
inc
fnstenv
int
adc
rcrl
iret
addr16
xor
and
cmp
xor
push
sti
mov
call
movsb
xchg
jmp
test
push
sti
sub
dec
mov
push
add
add
mov
xchg
push
inc
xchg
lea
push
mov
push
or
mov
in
dec
and
mov
push
lods
das
add
hlt
inc
dec
shll
or
jge
mov
push
or
add
adc
ljmp
andl
pop
adc
sub
stos
shl
xor
pusha
orl
push
loop
add
cmp
in
xchg
pop
push
mov
sub
leave
sub
push
lret
inc
jb
sbb
shlb
je
lret
in
inc
pop
push
sbb
orb
int3
out
pop
pop
punpckhdq
mov
xor
jo
movnti
gs
or
mov
cli
and
movsb
mov
cmp
in
xchg
sbb
aaa
and
mov
pop
mov
and
mov
xor
xchg
or
adc
inc
mov
or
and
cmp
icebp
inc
dec
push
add
push
lock
lcall
clc
setb
test
push
add
or
mov
sub
cmp
jle
xor
call
xor
dec
adc
data16
push
lea
push
mov
sub
jno
push
mov
je
push
loope
cmp
sbb
pop
lcall
insl
or
sbb
mov
and
jo
jl
dec
mov
and
mov
sub
mov
hlt
test
imul
push
je
mov
jecxz
mov
loopne
add
xor
jg
shrl
inc
into
xlat
das
add
shlb
jp
pop
mov
flds
mov
mov
pop
loopne
clc
jg
add
jne
sub
pop
jmp
lods
test
sbb
int
mov
xchg
out
mov
sub
pusha
sbb
add
fwait
cwtl
idiv
daa
jmp
push
adc
push
lar
or
xchg
ret
shl
sahf
add
pop
sti
hlt
lds
and
push
hlt
xor
addr16
pop
pop
lock
or
add
add
inc
xor
sbb
pop
dec
inc
xor
lea
xchg
sub
push
or
loopw
or
jmp
push
mov
sbb
mov
inc
add
pusha
das
fdivl
push
xor
cmpb
jb
and
sahf
xchg
call
jmp
in
pop
add
sbb
sub
xchg
add
jecxz
mov
clc
pop
push
in
push
mov
fcom
addr16
repnz
dec
xchg
daa
cmp
xor
mov
insb
aam
hlt
je
or
cli
or
aaa
pushl
dec
loopne
jo
xchg
add
pop
out
cmp
ror
popf
sbb
xchg
xorb
sbbl
ffree
sbb
stos
test
add
mov
in
cmpsl
push
call
mov
pop
pop
pop
rorb
adc
xor
mov
inc
in
outsb
pop
pop
adc
push
sbb
pop
push
and
test
push
fs
das
sbb
inc
sbb
push
add
addr16
push
in
push
or
and
sub
or
cmp
insl
fldt
popa
push
push
push
notb
mov
mov
push
adc
add
xor
mov
insb
add
and
mov
insl
lahf
adc
mov
add
mov
mov
dec
stos
mov
add
in
test
jmp
and
mov
nop
adc
negl
jne
mov
ss
push
push
sbb
xchg
pop
pushl
dec
ret
pop
cmp
lret
jmp
xlat
int
andl
dec
cmp
mov
xor
xor
sbb
and
test
je
and
jae
repnz
fcomps
dec
mov
jmp
dec
mov
pop
mov
jmp
imul
and
mov
push
jae
dec
add
xor
inc
pusha
inc
xor
rcl
xchg
shlb
lcall
fmulp
js
cmp
jge
mov
mov
mov
cmp
add
sbbb
cmp
jle
cmpsl
jne
add
pushl
inc
mov
push
adc
std
fsubr
sarb
sub
fcomps
mov
cs
loopne
sbb
xchg
mov
and
mov
sbb
aam
inc
xor
add
dec
mov
cmp
in
mov
add
jo
sub
inc
sete
insb
dec
clc
adc
loope
and
je
sbb
or
push
and
stos
push
or
test
les
inc
loopne
enter
out
mov
mov
adcl
pop
enter
mov
inc
push
and
ret
orb
test
movsl
cmp
add
sbb
arpl
or
pop
int3
mov
icebp
add
pop
pop
push
sbb
test
pop
enter
das
pop
stos
es
push
dec
add
cmp
xorl
xchg
movb
jno
adcb
pop
mov
adc
aad
or
std
rorl
mov
bound
xor
mov
popf
or
fsts
ss
jecxz
mov
push
jae
cmpsl
cmp
bound
sbb
push
or
pushf
lret
mov
fs
add
or
add
pop
mov
out
push
mov
jne
enter
mov
sbb
sbb
cmpl
jl
inc
loop
jno
in
adc
add
adcb
sbb
repnz
call
cwtl
sbb
lock
and
in
sbb
sbb
sub
arpl
andl
xchg
je
movsl
adc
add
xor
xchg
shl
lcall
add
xchg
sti
orb
jle
jge
adc
mov
insb
lds
shlb
cmpl
push
inc
xchg
je
jno
push
jno
xchg
or
sub
xchg
aam
sbb
push
aaa
lcall
push
add
sub
push
aas
or
and
sbb
stos
adc
ds
mov
jmp
xchg
cmp
xor
lds
test
hlt
dec
call
push
hlt
add
xchg
lock
pop
pop
shlb
pushf
adc
lods
incl
orl
js
pop
mov
je
add
xchg
lock
lret
das
mov
pop
clc
lock
or
test
aaa
sahf
add
dec
pop
jg
jge
cmp
jmp
rcrl
mov
add
sub
add
push
push
add
push
jne
cs
mov
dec
jp
shll
pusha
adc
sahf
mov
add
mov
push
pop
ss
xchg
lea
inc
add
pushf
fiadds
cld
test
xorb
fstpt
ja
or
jg
mov
cmpsb
add
pop
push
pop
dec
jb
sub
inc
push
aaa
pop
sub
jle
xor
sub
lods
js
cmp
and
xchg
jno
sbb
adc
pop
leave
sub
mov
ljmp
mov
cmp
sarb
or
jle,pn
cmpl
push
scas
adc
push
outsb
pusha
push
push
gs
jmp
mov
cmp
mov
push
sbb
jb
push
bound
push
push
cmp
or
pop
pop
push
push
pushw
inc
cs
jo
add
jo
pop
mov
add
xchg
and
mov
sbb
cwtl
inc
xchg
mov
push
push
faddp
mov
or
shlb
lock
callw
push
stos
xor
inc
stc
nop
into
mov
daa
enter
mull
mov
inc
clc
jbe
mov
movsl
int3
ret
add
push
sbb
inc
cld
mov
cmpl
sub
jge
lea
mov
fldln2
loop
sub
mov
pop
adc
push
rolb
cmp
jle
icebp
mov
add
andl
mov
add
adc
pop
xchg
mov
sub
push
ds
pushf
addr16
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
xchg
sub
mov
xor
cmp
xor
xor
call
push
les
cmp
clc
cmp
in
add
cmp
insb
out
das
xchg
mov
cmpb
cmp
jge
fsub
pop
test
mov
ljmp
shr
xchg
das
jno
inc
jp
fsubr
add
xchg
shlb
cmp
xchg
xor
outsb
loop
cmc
inc
add
sbb
pusha
mov
jmp
mov
aam
das
shll
adc
pop
movsb
out
add
mov
pop
test
daa
sahf
lock
jmp
fcmovbe
aad
enter
add
adc
push
cmpb
rol
add
sbb
int
sbb
mov
pop
jns
test
shl
ret
fidivs
adc
dec
mov
ret
imul
and
mov
ret
inc
lods
xchg
int3
xchg
adc
fimull
adc
fists
enter
mov
push
jnp
mov
cltd
lods
add
add
add
add
cltd
dec
imul
rorb
add
stos
bound
jbe
addl
out
xchg
push
rorl
mov
mov
dec
push
inc
sub
movl
leave
cltd
sub
mov
lahf
cmc
in
imul
adc
pop
in
sub
add
or
pop
adc
add
ds
add
push
es
add
add
sbb
inc
test
dec
std
and
push
push
xchg
mov
or
jmp
lock
flds
dec
sbb
fstps
push
mov
ret
rclb
mov
adc
inc
or
clc
sbb
sbb
sub
rolb
add
outsb
pusha
push
je
mov
mov
mov
pop
push
movb
out
xor
test
sbb
mov
cmpsl
aas
js
test
je
cmc
mov
add
loopne
add
aad
mov
out
leave
test
jno
or
sbb
pop
dec
inc
int3
rorb
stc
adc
lcall
sbbl
and
and
das
js
push
add
mov
xchg
push
stc
mov
lea
or
push
imul
adc
sbb
or
mov
test
je
xor
jmp
cmpsb
popa
andb
out
or
addb
push
dec
or
mov
and
sbb
inc
jbe
cli
cmpsb
int3
mov
add
loope
xchg
fwait
jns
sbbb
dec
cmpl
outsb
lods
and
popf
push
mov
fmuls
jnp
dec
xchg
loopne
sub
dec
xor
jnp
jnp
scas
mov
add
fmull
lea
mov
push
push
push
mov
nop
jne
mov
push
push
cmpsl
movsb
add
push
jne
test
ret
ds
and
jo
call
push
pop
jb
sti
in
mov
mov
inc
movl
cmp
stos
mov
mov
or
add
stos
mov
inc
popa
repz
jne
loop
inc
inc
sub
imul
xor
test
jmp
dec
hlt
addl
push
xchg
add
or
xorl
nop
xor
jl
push
rorb
adc
enter
fiadds
pop
in
or
xor
pop
dec
cmp
mov
incl
and
add
pop
test
dec
mov
xor
push
push
mov
ds
pop
mov
pop
xchg
inc
push
pop
repz
mov
mov
mov
jle
xor
add
and
pop
mov
loope
fisubs
mov
mov
mov
ljmp
cmp
imul
xor
xchg
ret
adc
cwtl
icebp
adc
mov
test
push
or
roll
rorl
adc
testb
add
loope
push
aam
testb
push
mov
ljmp
xor
stc
add
test
scas
push
arpl
pop
data16
sub
rolb
pop
adc
jae
loopne
inc
mov
cmp
bnd
subb
loopne
pushf
mov
sub
cmp
in
add
push
imul
test
ds
adc
xchg
mov
stos
pop
add
mov
les
pusha
icebp
pusha
pop
mov
sbb
push
scas
mov
add
add
lea
lea
or
lea
push
mov
lahf
roll
es
in
incb
add
fisttpll
aaa
mov
cmp
js
shrb
mov
xchg
mov
or
pop
and
push
into
ja
sub
cli
insl
sub
xchg
dec
roll
les
ret
stos
mov
add
shll
les
cwtl
dec
or
sarb
test
in
xchg
pushf
lea
adc
mov
jbe
mov
cld
mov
lret
push
add
or
xchg
inc
out
test
ss
jb
sbb
rcl
notl
mov
xchg
mov
add
jmp
ss
dec
loopne
enter
mov
sbb
and
lock
es
add
repz
mov
fcom
enter
push
outsl
xlat
pop
data16
pop
in
and
dec
inc
add
xor
sahf
rolb
fmuls
and
aas
inc
lret
add
push
loopne
movsl
push
xor
xchg
add
fldl
jmp
gs
cmp
pop
fiadds
fmull
shr
lea
ret
mov
jno
jns
adc
add
add
xchg
pushf
pop
xorb
xor
loopne
test
cmp
dec
or
mov
dec
call
pop
or
imul
test
add
xchg
push
jae
xchg
dec
rclb
pop
ret
leave
iret
add
xor
mov
xor
orb
pop
cmp
ss
push
lds
lods
inc
js
jbe
push
fnstcw
mov
adc
fs
xchg
sbb
pop
ret
xchg
sub
xor
pop
and
popf
push
add
out
xlat
mov
int3
fneni(8087
push
mov
pop
pusha
cmpl
adc
add
mov
xchg
inc
xchg
and
push
ja
inc
movl
maxps
fnstenv
loope
pop
call
sub
adc
and
adc
xor
sbb
daa
cmpsb
clc
add
out
inc
and
xchg
or
int
idivl
sbb
jno
je
push
ror
or
pop
pop
cmpsl
and
push
inc
mov
xor
mov
movsb
push
and
sti
jmp
push
dec
push
iret
sub
popa
push
dec
dec
push
xchg
jp
sub
push
adc
sbb
ret
xor
jmp
or
rol
mov
xor
jno
cld
jg
cmc
cmpl
push
push
pop
cmp
je
push
mov
mov
movsb
jno
add
aam
sub
add
fs
into
rcrb
lcall
sbb
cmp
jl
test
lea
adc
cmp
and
xor
sbb
aam
and
adcb
xchg
mov
mov
push
add
xor
xchg
and
dec
mov
pop
sub
ss
jne
sbb
in
xor
sub
and
in
insl
push
lcall
mov
in
jge
sub
pop
call
push
cmp
ss
push
cs
aam
jo
outsb
push
daa
das
jb
std
xlat
test
xor
mov
mov
sub
adc
adc
mov
insl
into
rcl
dec
sahf
int3
xor
dec
or
sqrtps
fsubrl
mov
xor
sub
fsubl
fcoml
inc
dec
fdivrp
shlb
push
out
mov
sarb
lcall
out
je
shr
xchg
imul
push
xor
jmp
fadds
clc
ret
add
inc
popa
xor
loope
int3
test
pop
loope
mov
pop
pop
dec
loope
inc
mov
sub
or
add
pop
rorb
adc
test
adc
add
sub
sbb
push
leave
mov
xor
mov
push
addl
inc
dec
pushf
les
push
adc
lea
pop
and
fadds
incl
out
incl
push
or
js
jl
push
rolb
push
jl
push
cwtl
lock
xchg
or
stos
bound
xchg
pop
xor
push
leave
or
push
add
lret
fwait
je
mov
pop
pop
push
mov
push
mov
jecxz
outsl
add
aaa
pop
adc
add
fistl
cmp
jbe
pop
lock
mov
jnp
pop
dec
sub
cmp
ret
ja
xchg
popf
cli
fisttpl
es
xchg
movb
dec
adc
int3
pusha
pop
fs
lods
pop
lret
xchg
pop
push
xor
jl
xchg
int3
push
push
cs
push
repz
add
and
sub
pushw
sub
add
lcall
cmpsl
add
inc
dec
inc
add
enter
xorl
push
pop
test
nop
mov
ret
push
scas
loope
or
shll
cmp
push
mov
mov
or
rolb
dec
mov
shr
cmp
ret
movb
incb
push
ds
mov
mov
mov
lcall
jns
cmpl
add
dec
lret
loop
sar
mov
jns
outsl
push
fistpll
mov
cld
push
dec
hlt
sub
push
sarl
or
jno
and
push
and
roll
xor
xchg
mov
ret
sub
jo
cmp
fmuls
cli
sub
rorb
or
nop
iret
clc
inc
mov
cmp
ja
add
inc
ret
jb
add
mov
ret
dec
stos
into
outsl
pusha
leave
xor
test
or
clc
pusha
push
mov
out
or
cmpsb
mov
inc
bound
mov
xor
mov
bound
mov
scas
mov
rol
repnz
std
sbb
movzwl
mov
or
cld
push
int3
push
aad
pusha
hlt
inc
inc
and
in
movsl
loop
cltd
cmp
or
dec
or
xchg
add
test
js
adc
sbb
ficomps
ret
iret
xlat
arpl
nop
jbe
push
cwtl
faddp
inc
xorb
or
ljmp
cwtl
sbb
and
insl
add
or
pop
lods
repnz
addb
push
sbb
add
insb
cmpb
popf
out
push
jmp
jge
jns
les
mov
loopne
xchg
dec
loope
clc
je
mov
ljmp
push
loop
mov
sti
lea
push
lea
push
inc
push
cmc
add
out
push
cmovb
imul
xchg
mov
cmpsb
addr16
lcall
fisttpl
push
push
lret
cmp
jl
mov
int3
xor
inc
mov
add
sub
push
jle
negl
cmp
jne
push
jno
push
mov
add
push
lea
push
xchg
out
sub
cmp
je
sub
xor
push
mov
pushf
out
ss
fbstp
movl
dec
push
fstps
sti
mov
inc
es
lock
adc
fidivl
mov
mov
lahf
enter
in
xor
push
in
sub
lea
out
push
push
or
in
out
orl
xchg
hlt
sub
es
xchg
je
insl
adc
push
xchg
clc
lea
call
sub
cmp
fld
pop
mov
xchg
stos
and
add
adc
xorb
or
and
cmp
xor
imul
sbb
push
sti
pusha
add
pop
fwait
or
add
xor
clc
daa
test
divl
add
cmp
or
mov
ljmp
jne
and
pop
fistpl
test
and
incb
out
sub
je,pt
sbb
jbe
push
mov
popf
ret
mov
cmp
mov
mov
add
jbe
xchg
inc
mov
push
dec
clc
test
outsl
add
inc
or
pop
pushl
scas
mov
mov
je
mov
jecxz
lahf
scas
add
in
push
push
lcall
test
mov
jmp
and
nop
xor
lcall
push
mov
rclb
xorl
jb
add
imul
xor
stos
iret
pop
scas
cwtl
lods
stos
fstps
jae
adc
sub
sub
test
add
ja
lds
mov
jo
orb
push
leave
clc
dec
lcall
cmp
je
xor
mov
mul
seto
adcb
or
push
pusha
lea
jmp
roll
mov
fcompl
lock
push
push
xor
and
push
mov
sbb
icebp
inc
or
mov
in
inc
sub
xor
inc
sbb
popa
inc
add
pop
cmp
ret
push
sub
inc
or
cmp
inc
sbb
adc
jl
pusha
cmpsl
sbb
and
data16
cs
xor
je
or
fs
dec
pop
dec
test
fisubrl
mov
mov
xchg
clc
int3
mov
or
cmp
push
sbb
shr
push
imul
adc
add
nop
inc
inc
push
scas
inc
or
in
dec
mov
cmpsl
jg
cmp
push
loope
sbb
cmp
je
sbbb
mov
mov
jle
lock
inc
or
fs
cmp
jne
ds
inc
mov
pop
cmp
add
xchg
mov
sub
add
fimull
sub
test
test
push
lock
jmp
addl
movsb
xchg
or
jmp
mov
inc
jno
cmp
push
inc
xor
test
inc
add
insb
scas
cmp
mov
pop
push
sbb
cmp
mov
sub
jg
sti
jne
and
jl
pop
and
lcall
dec
sub
push
inc
jmp
fildll
mov
test
xlat
push
jae
mov
lcall
xor
cli
pop
or
pop
shlb
or
movsl
mov
sbb
or
clc
push
mov
push
jne
pushf
fsub
fmuls
and
dec
or
or
cmp
jbe
and
ja
hlt
orb
jecxz
inc
in
fbstp
dec
mov
inc
shl
jmp
push
jle
pop
adc
mov
pop
sub
rcll
fistpl
mov
pop
jae
dec
or
rolb
add
add
repnz
lahf
sbb
adc
inc
or
pusha
or
push
or
std
jmp
or
mov
xchg
inc
sbb
jg
bound
test
pop
call
sub
out
mov
or
cmpsb
ljmp
sub
fwait
or
or
nop
clc
mov
and
jno
test
inc
out
ljmp
jge
xor
add
inc
aad
push
push
repz
or
clc
sub
lea
push
mov
jl
cmpsl
test
sahf
ret
add
stos
xor
mov
push
xor
sti
cmp
lahf
xchg
push
push
adc
pusha
shlb
cli
negb
jae
sub
push
adc
inc
push
jl
pop
imul
adc
into
jbe
sub
jnp
push
clc
push
push
cmc
sbb
std
js
push
push
sub
repz
mov
mov
push
test
int
popa
pusha
push
jp
add
addl
mov
jmp
mul
into
adc
loopne
in
mov
mov
cmp
jbe
fimull
add
xor
add
mov
cmpb
pop
out
jne
test
sbb
push
mov
pushf
mov
add
mov
int
mov
xor
cwtl
add
pushf
fdivl
and
push
dec
aam
push
loop
je
test
insl
les
xor
adc
fisubs
call
add
roll
xchg
aaa
mov
cltd
xchg
pushf
in
mov
addb
mov
rcll
xchg
movsl
int3
jnp
xchg
or
jnp
fcmovbe
shl
dec
push
jne
cmp
test
cltd
xchg
or
or
adc
push
push
or
dec
lock
add
push
pop
mov
movb
inc
cmp
xchg
sub
or
jg
add
pop
inc
adc
notb
in
int3
insb
mov
mov
cmp
sub
fs
mov
mov
jmp
or
inc
push
imul
out
push
push
mov
dec
js
jl
xor
pop
push
push
addl
add
mov
fstps
inc
xchg
adc
push
add
add
push
adc
pop
and
mov
push
or
in
decl
push
or
xchg
ficoml
mov
je
jo
jb
and
mov
in
dec
lahf
or
sub
jb
sub
into
movsb
cwtl
lods
sub
inc
push
in
leave
ret
push
mov
addr16
repnz
push
push
jb
or
test
in
or
dec
test
js
add
push
pusha
test
sub
or
lahf
sarb
je
orl
push
fmul
test
dec
rcll
sub
movsl
or
push
mov
and
mov
sbb
test
sub
jg
pop
jnp
mov
bound
leave
test
push
push
addb
add
sbb
adc
mov
popf
dec
fisttpl
add
cmpsl
cmp
or
lds
add
cmpsl
pushf
cmp
sbb
cmp
insl
push
nop
xor
outsb
arpl
dec
add
shr
xor
and
arpl
cld
lea
dec
inc
rorb
mov
rol
pop
xlat
shl
push
add
sub
int
mov
sbb
adc
shlb
and
sub
and
mov
sbb
cmp
sbb
xchg
mov
adcb
push
cmp
ret
adcb
jne
inc
aaa
sub
ret
pop
repz
adc
imul
add
loopne
imul
adc
mov
mov
xchg
and
xchg
js
orb
push
fcompl
sbb
and
lret
and
push
fiaddl
mov
lea
lods
pop
dec
fcom
dec
out
sub
mov
rorl
xchg
inc
es
leave
cmp
rorl
ror
rcrl
enter
mov
adc
jo
xlat
push
xlat
jno
or
push
dec
xor
js
mov
push
cmp
in
loopne
add
cmp
add
sbb
inc
sbb
popa
cmp
lock
mov
les
dec
jo
mov
xor
js
fsts
mov
jmp
fisubrl
aaa
push
sahf
js
push
lods
orl
fxch
add
lock
movsl
or
enter
pop
jo
repnz
popf
add
lea
push
cmpsl
pop
iret
cltd
adc
cmp
xchg
insl
ss
inc
or
mov
incb
pop
cmp
jns
jns
rolb
push
push
dec
and
inc
or
cltd
push
data16
and
fnsave
sub
pop
and
mov
mov
add
loopne
bswap
rol
mov
push
push
lcall
add
xchg
inc
pop
pop
push
in
push
push
cmp
or
xchg
and
pushf
sbb
nop
nop
sbb
sbb
cmpsb
push
sbb
in
stc
addr16
or
fsub
xor
and
mov
add
pop
pop
push
js
fisttpl
inc
inc
test
inc
xor
mov
lcall
xchg
pop
aad
in
dec
and
enter
and
movsb
aaa
xor
daa
inc
or
cmpsl
and
test
dec
add
ret
cmp
shlb
adc
dec
loope
mov
test
fs
cld
jmp
mov
sbb
pop
mov
mov
mov
cmp
push
test
and
nop
lock
hlt
clc
pusha
fnsave
dec
adc
sbb
inc
pop
add
inc
inc
sbb
sbb
pushf
push
or
and
mov
push
inc
jecxz
mov
jl
ret
sbb
mov
mov
add
xor
sub
jns
gs
scas
and
push
sbb
mov
sbb
sbb
and
call
js
mov
mov
rcrb
jns
cmp
dec
sar
js
dec
dec
lea
idivb
cmc
mov
sub
and
cmp
mov
jne
push
insl
negb
jp
jne
adc
jg
popf
scas
push
paddd
add
push
addr16
sahf
push
and
cmp
ss
loop
push
xchg
data16
or
push
add
nop
mov
inc
hlt
dec
ja
and
inc
inc
push
mov
shlb
dec
stos
scas
xchg
popa
out
xor
mov
sub
pop
test
insb
mov
cmp
loope
jo
inc
insb
hlt
clc
or
ret
cmpb
mov
movb
add
mov
inc
jo
pusha
inc
pop
rol
mov
or
inc
inc
push
les
bound
push
fldenv
orb
lock
loope
test
sahf
dec
cmp
arpl
in
in
sahf
shl
mov
in
and
xchg
jo
adc
adc
orl
ret
and
mov
cmp
push
pushf
in
fisubl
adc
push
lods
fwait
test
push
insl
popf
push
mov
sub
adc
repnz
xchg
add
pop
push
out
and
mov
les
aam
subl
adc
mov
push
lea
shlb
pop
jg
mov
jnp
jl
cmp
movsl
sbb
aam
test
and
sbb
shlb
mov
fmull
push
stos
clc
popf
mov
out
inc
jnp
jl
test
popa
jne
lea
cwtl
mov
nop
into
dec
sti
ss
and
addb
enter
push
jg
add
or
lods
push
je
push
and
mov
rcrb
test
imulb
nop
jnp
push
xlat
cmp
cld
sti
sbb
jnp
add
xchg
push
pop
movhps
lods
sub
frstor
mov
add
push
mov
and
das
dec
xor
and
test
xchg
mov
lea
fcompl
xor
sub
add
stc
and
mov
sbb
lods
push
mov
adc
or
dec
mov
into
cmp
mov
cltd
mov
xlat
push
movb
pushf
fldl
xchg
outsl
jge
dec
dec
pop
shlb
stos
mov
jno
and
xor
add
xor
mov
adc
fdivs
test
dec
movsl
mov
jg
jmp
xor
mov
cmpb
loope
addl
loopne
shlb
push
inc
sub
orl
push
push
ret
jp
insb
and
enter
imulb
or
roll
inc
pop
cmp
lcall
jne
lock
push
lahf
dec
add
inc
cmp
adc
or
out
xchg
push
dec
dec
xor
dec
insb
movsb
aas
test
and
lods
sti
loopne
and
push
adcb
stos
jb
testb
cmp
js
cmpsb
dec
in
mov
andl
sub
inc
lds
cmp
lods
movsl
or
mov
jmp
jl
cmp
cmp
out
icebp
fsubs
adc
lods
gs
and
inc
cmp
test
sbb
cmp
jae
sbbb
rol
push
insl
cs
aam
test
nop
xchg
out
shlb
mov
add
pop
into
xadd
cmp
movsb
jmp
add
movsb
pop
pop
leave
mov
xchg
xchg
and
add
test
sub
je
dec
fadd
sbb
xchg
loopne
rclb
dec
insb
push
push
rcl
jmp
mov
insb
mov
punpcklbw
xor
rorl
cmp
push
test
fmull
inc
xchg
cmp
jno
push
sub
aas
in
sbbb
insl
lds
test
aam
cmp
adc
pop
push
xchg
outsb
daa
adc
sbb
add
clc
xchg
pusha
push
jmp
and
shrb
adc
cld
lahf
push
addb
leave
orb
sbbl
cmp
sub
sbb
adc
mov
mov
mov
cmpsb
xorb
ror
and
les
or
mov
call
fsubl
dec
xor
daa
rorb
sub
xchg
ljmp
cmp
insb
je
inc
cmp
dec
les
loopne
pop
aam
repz
push
cmpsl
inc
cmpsb
fistps
out
xor
push
xlat
sbb
fcompl
dec
rolb
mov
adc
xchg
xchg
and
dec
xor
jp
push
jmp
fwait
test
adc
sbb
js
inc
mov
lods
mov
add
mov
jecxz
in
dec
add
inc
add
add
push
ret
pop
repnz
sbb
xlat
inc
es
nop
pop
and
shll
clc
divb
xchg
jecxz
pop
fisttpll
pushl
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
imul
cltd
int3
push
and
and
fimuls
mov
cmp
pop
inc
jmp
hlt
lds
int3
push
daa
enter
mov
sbb
adc
sub
movsl
mov
push
cmp
xlat
xchg
jp
mov
cmp
lret
icebp
gs
jbe
jo
cmp
mov
cmc
lods
xorb
mov
sub
loope
or
incb
inc
inc
xchg
and
loop
fdivl
mov
fs
repz
cmp
testb
lods
call
and
test
push
mov
inc
inc
add
cwtl
xor
ja
fbstp
add
mov
and
add
ret
out
sbbb
cmp
clc
call
cmpl
aam
lds
ret
mov
aas
test
in
pop
sbb
rolb
sahf
jmp
sti
pushf
mov
ja
out
push
scas
sub
popf
jb
sbb
mov
or
cwtl
rorb
push
movl
add
inc
inc
adc
cmp
aaa
jmp
lcall
popf
adc
inc
mov
dec
daa
push
add
adc
jge
lds
jns
and
add
pusha
pop
ret
pop
mov
call
ja
jmp
test
sbb
aad
inc
xor
out
pop
int3
jecxz
aad
adc
mov
adc
mov
aaa
xor
dec
push
je
dec
jne
dec
cmp
pop
adc
clc
adc
push
loope,pn
insb
and
cmc
lahf
lock
adc
sarl
leave
aam
mov
jb
insl
and
pop
scas
sbb
lock
cmp
je
mov
jl
mov
sbb
mov
xchg
jge
movsb
xchg
les
in
fistpl
sub
popf
dec
movl
fsubl
xor
xchg
cmpl
lea
cli
jb
lea
or
and
adc
sbb
outsb
mov
jmp
lea
add
das
add
push
cmp
jnp
popa
cmp
adc
bound
imul
mov
push
pop
xlat
pop
enter
jge
fistl
xchg
mov
adcl
mov
and
jmp
xchg
jno
inc
enter
sbb
jl
mov
pop
pop
and
cmp
testb
daa
ret
not
add
adc
ds
je
lock
mov
inc
sub
adc
xor
nop
mov
or
inc
cmp
es
lock
or
mov
sub
inc
lea
push
push
enter
jo
popa
int
lds
daa
cmp
dec
loop
xor
scas
adc
dec
sbb
push
movsb
lock
push
inc
aaa
push
xchg
into
push
aas
bound
xchg
shr
and
push
je
cmp
sbb
js
shll
or
adc
andl
push
add
adc
jne
inc
jmp
jmp
mov
adc
call
jmp
add
out
or
inc
jmp
push
jo
xor
rorl
pop
negb
incl
add
rolb
mov
inc
bound
cmp
iret
mov
ljmp
test
jle
bound
push
and
into
fnstcw
adc
xchg
loop
sbb
sbb
aaa
movsb
cmp
lret
scas
addb
dec
call
mov
push
ficoml
xchg
jbe
les
or
sbb
mov
xor
mov
movl
ret
sbbb
and
mov
mov
inc
add
or
inc
mov
cwtl
sbb
sahf
rcll
dec
pop
js
lcall
push
mov
pop
popa
and
addb
lahf
sbb
push
dec
mov
push
and
mov
nop
sbb
out
es
and
cmp
jge
adc
mov
or
cmp
adc
fdivrs
insl
and
xchg
test
inc
pop
sti
nop
out
out
add
inc
jno
lods
inc
ret
and
xor
pop
xor
sub
popf
pop
mov
or
cmp
test
enter
adc
xor
pop
mov
lea
jnp
push
mov
or
pusha
sbb
ret
sub
add
sahf
lret
sub
lds
lock
js
mov
or
mov
xchg
outsl
popf
mov
inc
les
js
cmp
inc
movb
sbb
fucom
out
mov
mov
adc
std
test
add
mov
ljmp
sar
xchg
rolb
or
push
xchg
cmpsb
mov
sub
lods
or
mov
dec
push
fdivrl
push
test
or
ret
call
fs
lcall
cli
lret
imul
cmp
inc
pusha
sub
je
cmpl
xor
lret
xchg
cmpsb
xchg
mov
jae,pn
xchg
movsl
std
int3
xchg
aas
shlb
push
shr
push
pusha
repnz
push
add
push
pusha
adc
push
sbb
aam
inc
dec
in
pusha
cmpsl
cmp
lods
jmp
jmp
xor
pop
adc
pushf
sub
xor
inc
fistpl
pushf
in
push
mov
loopne
test
push
lods
call
subl
cmp
sbb
test
test
sbb
in
mov
add
dec
je
mov
into
icebp
ja
sbb
add
incl
inc
sub
jns
push
cmp
cs
jecxz
cltd
adc
lret
pop
movsl
je
aam
dec
and
dec
mov
movsb
scas
inc
or
cwtl
add
int3
rcrb
sbb
pop
push
cmp
mov
iret
lea
xorb
pop
sub
sti
adcb
lea
cli
sbb
push
sbb
cld
pop
adc
xchg
aaa
sub
lods
loope
add
xchg
mov
pushf
xlat
mov
cmp
pop
cmpsb
insl
dec
mov
bound
daa
leave
or
adcl
mov
test
xor
adc
test
xorl
in
push
mov
or
pop
or
push
out
cmp
pop
sbb
or
aas
and
rcl
cwtl
stos
ds
pop
popa
scas
adc
push
or
pop
jmp
icebp
inc
jne
sub
push
in
insb
xchg
hlt
adc
push
aas
push
fists
and
fs
movsl
lods
cli
insb
cmp
mov
mov
loopne
push
or
add
aas
stos
jge
call
sti
xchg
lea
inc
add
fstps
add
mov
xchg
cmp
jmp
push
stc
add
cltd
or
cmp
cmp
and
ja
xor
test
inc
dec
xor
mov
lds
sbb
add
dec
cmp
mov
fists
or
sbb
addr16
sbb
and
push
pop
jns
mov
sbb
je
rcll
mov
cmpl
inc
addl
rclb
and
insl
dec
xchg
xor
pop
or
xor
pop
cmp
movsl
pop
dec
pop
loopne
sub
push
lock
fwait
jns
enter
adc
push
adc
xor
or
xchg
mov
in
inc
sti
pop
add
xor
push
pop
std
aas
movl
test
loop
or
inc
push
xchg
sar
dec
sbb
aam
shll
mov
movsl
test
sbb
mov
sbb
push
imul
jb
pop
push
sub
insl
cmp
inc
shrb
orb
push
mov
mov
dec
sbb
loope
adc
add
cmp
jge
cld
pusha
mov
adcb
es
sub
xor
int
pop
mov
or
aaa
sub
push
stc
mov
loop
xchg
cmp
fbstp
adcl
jo
cmp
xchg
mov
xchg
mov
subl
mov
cmp
inc
pop
out
lret
xor
xchg
pop
dec
es
das
adc
add
mov
dec
xor
xor
xorb
sbb
inc
mov
mov
xor
and
data16
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
js
mov
lret
cmp
loop
cwtl
movsb
xchg
cwtl
outsl
jne
lea
hlt
xchg
cmp
mov
push
or
pushf
xor
inc
inc
idiv
xor
mov
adc
pop
xchg
dec
pop
outsl
mov
ja
pop
sub
and
leave
sub
test
icebp
sub
sahf
push
pushf
jl
addl
jbe
mov
pop
sub
shrl
or
pop
add
lret
push
pushf
fidivs
adc
cmp
or
bound
repnz
and
jle
rcl
or
imul
clc
xchg
sbb
adc
jecxz
adc
cmc
jbe
clc
pop
and
adc
lea
push
cmp
push
sub
lahf
enter
adc
loopne
or
dec
clc
pop
or
add
or
fldl
inc
pop
mov
fbld
fdivs
testl
shrl
ret
mov
xchg
inc
ficompl
xor
push
lea
lret
loop
lea
jnp
or
pop
or
dec
pop
rcll
sahf
cli
clc
scas
jecxz
test
mov
rcl
adc
xchg
test
cmp
or
fsts
inc
mov
ds
pop
xlat
not
imul
cwtl
cmp
iret
xor
cmp
push
popf
xchg
mov
dec
or
jecxz
shr
add
add
jo
xor
shlb
lea
mov
add
daa
ret
push
scas
and
mov
pop
or
dec
jbe
jl
into
jmp
adc
jne
push
testl
cltd
cwtl
and
adc
pop
nop
rcrb
in
fadds
push
xchg
ret
hlt
popf
aad
jmp
ret
cmp
xchg
add
scas
xorl
mov
xlat
rolb
mov
xchg
adc
xchg
sbbl
mov
sub
mov
push
pop
jge
sub
lods
aas
lea
and
add
cmp
pop
out
daa
popa
ss
adc
xchg
and
mov
adc
test
hlt
cmp
and
jno
repnz
imul
xor
popa
or
dec
ljmp
mov
mov
inc
cmp
inc
push
sbb
stos
shrb
sbb
mov
push
cmp
xor
lds
cmpsl
hlt
fcmovb
pusha
mov
and
pusha
cmp
ret
mov
aas
inc
out
into
popf
sbb
jnp
mov
leave
ror
pop
fmulp
inc
xor
pop
cmp
enter
aaa
and
xchg
mov
inc
push
xchg
add
je
and
xchg
in
scas
jge
iret
andb
fs
andl
push
jne
jge
jb
inc
and
cmp
mov
pop
xorl
pop
leave
adc
push
xchg
daa
push
pop
mov
sub
daa
sub
mov
sbb
pop
and
sub
cmp
les
mov
out
xchg
and
sub
sub
nop
cmp
imul
sbb
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
js
and
pop
xor
add
ss
sbb
inc
mov
addl
loopne
pop
xor
and
mov
cs
mov
and
les
adc
and
jge
and
mov
lcall
inc
or
push
loop
pusha
lea
fnstcw
and
lcall
dec
dec
xor
add
xchg
xor
add
mov
loopne
adc
out
adc
sub
hlt
mov
cmp
or
jle
xlat
sbb
sbb
loope
hlt
in
repz
out
or
aam
pop
addb
stc
inc
and
dec
and
or
xorl
fdivrl
in
lret
add
lock
ljmp
xor
push
shl
popf
add
cmpl
test
ljmp
das
dec
aad
sbb
in
pop
mov
push
add
inc
add
into
fmull
dec
sbb
shll
mov
in
mov
pop
adc
xchg
xor
jne
jne
ret
inc
and
push
add
jmp
fiaddl
aaa
lock
out
mov
cmpl
push
hlt
dec
sub
mov
add
and
or
aaa
mov
mov
pop
adc
add
sub
inc
ljmp
fwait
rorb
es
stos
stos
dec
rcrb
adc
or
sub
cmp
push
int3
cld
sbb
sub
daa
jne
fucomip
or
lock
or
mov
add
movsl
jne
cmpl
inc
xlat
adc
xor
inc
lock
cld
xchg
push
rolb
je
pop
in
fbld
add
mov
dec
or
movsb
rol
push
sbb
add
stc
inc
add
dec
add
ja
xchg
pop
push
je
and
int3
in
out
pusha
pop
pop
call
sub
or
test
inc
imulb
cmp
rcrb
imul
cmp
out
fmull
and
or
in
lods
lcall
xor
or
add
pop
in
fsubr
and
enter
les
imul
mov
xor
mov
test
cmp
pop
sarl
adc
add
add
popa
push
jl
pop
cmp
push
jae
mov
push
xor
xchg
aas
jecxz
dec
nop
push
pushl
and
pop
pop
cmp
je
pop
jns
lahf
add
orb
dec
inc
repz
push
lods
fwait
dec
nop
shlb
out
clts
repnz
sbbb
inc
xchg
cmp
or
das
xor
pop
sub
sbb
ret
and
sbb
inc
jne
push
test
or
mov
sarb
dec
mov
jne
test
add
add
aaa
adc
js
movsb
cltd
clc
popa
dec
push
push
and
xor
xchg
push
arpl
sbb
inc
and
sbb
lock
lods
mov
and
mov
xchg
jae
roll
scas
addl
jns
mov
imul
aad
and
dec
notl
cmpsb
xchg
dec
ret
xchg
and
mov
mov
out
test
sbb
inc
lock
xor
pop
cwtl
jge
jae
jle
out
xor
and
adc
pop
les
lea
or
mov
mov
push
icebp
sub
dec
mov
mov
mov
cmp
dec
in
or
ret
cmpsb
lret
xor
add
jecxz
dec
or
cmpl
inc
push
pop
lcall
mov
sub
dec
jno
aaa
xor
mov
mov
pop
fists
add
jmp
sub
popa
xchg
xchg
mov
inc
sbb
mov
or
add
and
in
add
movsb
inc
stos
mov
out
pop
dec
clc
jae
and
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
cwtl
mov
cltd
femms
xchg
movsb
mov
cmp
inc
sbb
sub
loope
pusha
sbb
adc
push
adc
mov
jbe
or
stc
jge
xor
insb
jge
sub
sub
or
adcl
sti
sahf
mov
sub
or
push
sbb
cmp
inc
pop
loop
push
dec
fsubr
cmp
jle
cld
sub
cmp
jge
mov
into
sbb
pop
shlb
and
loopne
ret
sub
pop
fisubs
rcrb
paddq
jmp
xchg
ror
loopne
fchs
jle
xor
call
inc
or
cltd
add
xor
sbb
jmp
stc
subb
pop
push
fcompl
push
jmp
push
mov
stc
clc
or
bnd
and
subb
dec
dec
sub
jmp
cs
xor
push
int
pop
push
pop
jno
xor
jle
push
inc
xchg
loopne
sub
adc
adc
pop
jmp
mov
es
mov
and
sbb
pop
add
add
add
fcomip
or
cmp
push
or
mov
lock
aad
adc
out
mov
mov
add
add
push
jnp
jb
jb
xor
or
add
rcrl
aaa
push
fwait
cmp
sub
jo
or
xor
dec
jo
loop
mull
rorl
sarl
in
push
iret
fisttpll
or
push
add
shlb
pop
add
rorb
adcb
pop
andl
or
cmp
and
mov
out
jns
xor
cmp
or
dec
jmp
and
inc
fcomps
ja
cmpsl
and
aad
cmp
inc
xorb
inc
js
test
adc
mov
fadds
shll
push
pop
and
mov
mov
add
push
sarb
xor
inc
movl
xor
mov
adc
aas
or
icebp
and
lahf
leave
add
cmp
call
ret
movsl
inc
inc
pop
cltd
nop
push
mov
add
push
xor
adc
mov
mov
aas
push
loope
pop
pop
dec
fs
dec
ret
sub
mov
movlps
mov
inc
bound
cmpsl
mov
sti
add
stos
insl
xorb
push
inc
lds
inc
sub
lret
lahf
inc
inc
test
adc
and
dec
sbb
or
cmp
iret
lret
and
xchg
adc
fistps
stos
xor
mov
cmp
loop
mov
sbb
dec
mov
incb
dec
pop
xor
push
cmp
mull
nop
enter
pop
pop
push
push
xor
inc
movsl
mov
lock
popa
movsl
mov
xchg
inc
sbb
shll
mov
clc
stos
incl
aaa
imul
mov
cmp
push
out
adc
icebp
add
sbb
pop
pusha
dec
fsts
push
dec
cmp
adc
movsl
xor
add
jbe
dec
mov
adc
sbb
mov
imul
rol
int
int
xchg
pop
dec
pop
push
sub
xor
sbb
inc
test
cmp
dec
and
es
in
test
mov
sbb
and
mov
sbb
mov
push
add
rorb
shr
mov
sbb
clc
adc
jg
dec
add
sbb
xor
loopne
rolb
jne
cmp
sarb
cmp
mov
mov
add
sbb
add
js
xor
hlt
lahf
push
cmp
jge
and
mov
sub
clc
xor
xchg
add
mov
out
add
aad
insl
push
mov
add
lods
or
repz
mov
push
lock
push
orb
addb
sbb
xor
mov
lahf
and
push
xor
ljmp
mov
mov
data16
push
inc
add
add
je
or
sub
adc
inc
jae
cltd
fiadds
dec
mov
xchg
adc
insb
xor
addr16
add
adc
or
push
and
sub
dec
xor
add
test
cs
stos
ficoms
add
and
ret
adc
add
push
je
cli
sub
pop
ja
cli
adc
andb
ja
jb
mov
popa
push
jo
pushf
inc
jae
idivb
in
inc
inc
push
mov
add
out
push
lcall
icebp
rorb
mov
dec
jmp
fimuls
push
push
add
popa
pop
push
pop
aaa
aaa
push
jno
fisubl
insb
jo
fwait
icebp
movsl
andl
mov
je
int
rorb
mov
mov
xchg
or
push
movl
cwtl
or
push
insl
or
fxam
aas
subl
mov
cmp
or
mov
shrb
push
inc
movb
mov
and
sbb
pop
aam
push
sbb
cli
addl
and
or
sbb
in
fdiv
add
jnp
movl
fwait
gs
push
fsubrs
movsl
cmp
xlat
mov
cmp
adc
cmpsb
lock
cmpsb
insb
jo
mov
add
sbbb
sahf
sbb
sbb
call
cvttps2pi
mov
push
adc
dec
movsb
sbb
add
sbb
loopne
nop
sbb
jp
push
in
addl
in
pusha
rcr
cmpsl
stc
mov
call
sbb
xor
sbb
sbb
sbb
jecxz
mov
shlb
call
mov
jns
cmpb
js
rep
mov
das
add
mov
sbb
pop
bnd
push
jo
mov
roll
je
mov
dec
pusha
leave
add
mov
lea
add
add
popa
mov
js
push
mov
sbb
mov
test
iret
jecxz
xor
mov
add
enter
rcrl
cmpl
sub
adc
movb
fiaddl
add
cld
inc
push
pop
add
push
cld
or
mov
push
fisttpl
and
popf
dec
lds
fisubrl
je
or
lahf
sub
sbb
adc
mov
push
in
cmp
or
pushl
sub
xchg
hlt
or
aas
jno
push
xor
xchg
imul
jne
test
daa
sahf
push
les
insl
mov
jno
lret
ljmp
fimuls
mov
cmp
test
out
jno
or
cmpsb
push
mov
sbb
popf
xchg
lds
inc
lods
dec
jmp
and
dec
sub
cmc
pop
sarb
dec
jo
adc
mov
cmp
dec
mov
mov
push
daa
dec
ret
ret
adc
incl
inc
inc
nop
sub
ret
push
cmp
orl
movsbw
inc
mov
rorb
jne
lret
jbe
je
or
je
adc
fwait
js
adcb
adc
xor
bound
inc
push
fsincos
mov
hlt
push
inc
out
cmpsl
insl
pusha
clc
sbb
inc
data16
cmp
ds
rolb
adc
aas
jl
in
daa
cmp
sbb
in
adc
or
fs
mov
lock
vmovshdup
movsl
mov
pusha
fs
dec
push
pop
and
pop
push
test
daa
sbb
mov
and
imul
sub
lea
add
add
jbe
cmp
dec
jbe
or
das
fwait
out
repnz
ret
mov
xor
or
and
clc
repnz
cmp
mov
imul
aam
push
or
pop
mov
push
cmovns
inc
popf
notb
out
sub
icebp
lock
jmp
and
repnz
xchg
icebp
sbb
or
rorl
repz
fs
jecxz
xor
scas
push
push
and
push
sbb
cmc
rcr
xchg
loop
xchg
jbe
cmp
mov
movsb
movsl
pop
loopne
xor
aaa
push
push
sub
cmpsl
or
das
ret
xchg
mov
mov
lock
mov
push
cmpsl
inc
xchg
jns
cmp
xchg
mov
push
cltd
mov
sbb
push
cmpsb
sbb
into
jo
mov
mov
mov
or
sti
and
adc
test
jne
push
loope
add
testb
mulb
ret
or
xchg
cmp
mov
ds
js
dec
and
cmp
inc
outsl
test
scas
les
loope
adc
fimull
mov
and
pop
or
xchg
adc
mov
push
jb
out
mov
mov
jae
icebp
xor
cmpsb
or
xchg
push
cs
clc
cmp
test
lea
add
or
push
pop
add
xor
jae
inc
mov
inc
aam
in
mov
mov
or
ror
dec
or
in
cmp
mov
mov
sbbb
mov
cmp
mov
mov
add
movl
cmp
pop
mov
loope
or
mov
decl
sbbl
add
clc
andb
addr16
adcb
pop
push
clc
add
aas
nop
in
test
cmp
adc
pop
mov
insb
and
sub
xchg
adc
cmpsl
push
stc
or
inc
xor
jne
or
mov
inc
sub
inc
sub
test
data16
gs
push
inc
dec
add
push
movl
shlb
adc
adc
int3
shlb
ds
mov
aam
xchg
rolb
decb
add
push
mov
and
int
insb
push
push
ja
xor
sbb
mov
jge
mov
push
outsl
add
sub
cld
bound
in
jne
movsl
add
movsl
shll
das
insb
out
or
ss
movsl
sbb
inc
nop
pop
add
dec
call
dec
mov
sbb
stc
hlt
inc
inc
ret
sub
sub
mov
push
lods
fwait
aam
clc
sub
xchg
stc
pop
adc
pop
sar
push
add
push
push
push
push
pop
cwtl
jl
cmpb
int
ret
mov
sbb
and
cmp
mov
jg
cmp
jne
mov
inc
ret
inc
push
jne
inc
push
xchg
mov
adc
pusha
xchg
and
sbb
push
and
add
and
test
scas
lock
dec
sub
push
fsubl
add
dec
push
xchg
nop
pop
mov
pop
mov
jo
into
mov
nop
pop
jmp
and
inc
inc
jmp
addl
sub
add
xchg
js
cmp
xor
pushf
lahf
pushf
jmp
popf
add
mov
inc
cwtl
lcall
lods
popf
movsb
cmpsl
adc
call
pop
add
imul
push
test
mov
addb
mov
call
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
inc
cwtl
fsts
sbb
jle
mov
jle
sbb
jnp
and
add
sub
dec
sbb
adc
addr16
and
cmp
push
push
leave
mov
mov
add
add
jno
push
gs
and
pop
fildl
add
sub
shlb
enter
aad
mov
sbb
push
pop
inc
sbb
adc
shlb
jo
jo
push
mov
jns
xchg
mov
sbb
adcb
clc
sbb
sub
push
sarl
push
push
rcrl
adc
outsb
adc
pop
jns
xchg
mov
incb
and
mov
sub
jb
cmp
in
push
cmp
lcall
adc
adc
mov
shlb
jo
or
jnp
add
jl
mov
push
pop
loop
push
hlt
inc
push
xchg
adc
fwait
clc
dec
mov
inc
loop
cmp
add
loopne
shll
mov
xor
jg
sahf
inc
push
cs
add
mov
outsb
maxps
icebp
xor
push
push
mov
cld
push
and
push
jns
add
adc
dec
jp
or
imul
das
addr16
mov
shl
sub
xchg
mov
sar
les
popf
outsb
cmp
out
and
std
jle
std
and
gs
pop
pop
sbb
cmpsb
cmpsl
and
dec
mov
dec
add
int3
and
adc
jecxz
sbb
push
cmp
adc
push
jle
push
mov
jno
in
fstpl
pop
fcompl
dec
add
sbbl
cmpsl
insl
add
inc
rolb
cmpl
cld
or
pop
int3
je
in
int3
pop
push
adc
adc
adc
loop
int
lret
and
dec
pop
je
push
xchg
or
jl
roll
add
ret
push
xchg
dec
inc
push
sub
jns
daa
push
push
out
dec
mov
cmpsl
mov
cmp
cmpsl
adc
sbb
adc
mov
bound
mov
inc
sub
popa
test
dec
test
sbb
add
pop
pop
mov
xor
cmp
aas
rcll
cmpsl
mov
fsubs
rorb
lret
xor
daa
pushf
icebp
inc
push
xchg
in
xlat
sub
xlat
ljmp
dec
mov
push
cmp
into
pop
mov
push
gs
lahf
adc
dec
jno
push
rcll
pop
inc
sbb
cmp
loopne
cmp
mov
pop
push
loopne
or
lea
lret
or
test
shll
mov
rolb
fisttps
fs
mov
add
dec
pop
mov
inc
pop
push
mov
mov
inc
inc
imul
mov
mov
fdivrs
jle
add
cmpw
sbb
cmpb
mov
or
sbb
push
pop
add
jg
sub
ss
push
pop
mov
add
sar
push
cli
push
sbb
push
je
out
mov
mov
jns
mov
push
jns
cmp
pop
loopne
add
mov
and
popa
lock
jl
int
pop
sahf
loope
mov
pop
pusha
jne
dec
dec
push
add
add
sub
jp
sub
jmp
jnp
fistpl
popf
paddw
lcall
dec
movzwl
cmpl
push
adc
or
movzbl
ret
sub
adc
roll
nop
or
mov
sbb
add
leave
adc
fcmovb
adc
scas
xlat
js
jo
push
sbb
lods
sub
in
in
out
and
dec
adc
push
push
test
xor
adc
push
add
mov
cs
inc
adc
mov
cmpsb
add
jo
bound
test
cld
push
dec
xchg
add
enter
cltd
dec
pop
push
pop
xchg
dec
aad
mov
jo
jns
pop
andl
pusha
and
and
lea
mov
sub
mov
les
pop
adc
sbb
enter
loop
and
and
movsb
movhps
fsubrl
add
and
jo
test
movl
stc
or
rolb
outsl
shlb
adc
mov
jo
sub
movsl
push
mov
or
adc
nop
xorb
stc
adc
pop
dec
aas
add
inc
pushf
faddp
fisubrs
inc
inc
pop
mov
xor
xorb
nop
inc
pop
lock
mov
les
ss
je
add
or
xor
mov
popa
imul
inc
iret
mov
repnz
pop
cmpsb
ds
push
mov
call
mov
in
add
mov
ret
dec
or
jmp
sub
mov
enter
pusha
sbb
and
sbb
ret
mov
mov
mov
popf
and
fdivl
adc
cli
adc
xchg
dec
push
enter
push
add
mov
sbb
inc
add
dec
or
dec
add
pop
test
pop
jmp
push
pop
pop
mov
push
cmpl
pop
je
or
js
in
sub
push
arpl
dec
xchg
push
in
sub
movsb
lahf
mov
sbb
xchg
les
fdivl
adc
stos
das
fbld
mov
mov
or
hlt
jl
push
movsb
push
leave
pop
or
hlt
add
ljmp
adc
mov
loop
xor
dec
pop
jne
pop
loope
pop
test
loop
cltd
xchg
sbb
andl
insb
adc
push
hlt
and
mov
scas
push
bound
mov
aas
andl
lcall
fldl
je
test
idiv
pushl
es
bnd
loopne
cld
sbb
icebp
in
pop
sbb
hlt
sub
xchg
jne
sbb
mov
andb
inc
sbb
cmp
fdivp
jge
sbb
psubw
or
mov
push
incl
jbe
cs
int3
lock
adc
and
loopne
xlat
xor
leave
inc
rcl
lahf
in
inc
lahf
adc
ds
and
add
clc
xchg
inc
test
cmpsl
jbe
dec
hlt
xor
lea
dec
xor
push
sub
xchg
imul
add
jae
sub
stos
sbb
xor
push
inc
or
test
cwtl
dec
lea
jmp
push
push
das
add
pop
xor
aam
testl
pop
xor
and
dec
fistps
sub
inc
sti
pop
xlat
test
sbb
fimull
push
inc
push
mov
call
test
fistl
adc
dec
jno
test
inc
add
js
mov
ss
xchg
out
out
and
dec
inc
mov
daa
add
fidivl
inc
push
or
mov
nop
sbb
mov
out
pop
stos
pop
aaa
adc
or
jo
fldl
cmp
pop
pop
test
inc
sbbl
dec
xchg
inc
dec
sub
ret
icebp
push
or
push
adc
js
pop
popa
adc
cmp
sbb
inc
xchg
ss
jmp
push
sub
out
jl
add
mov
popa
jns
in
dec
inc
inc
dec
jb
or
orb
test
scas
nop
mov
and
repz
and
jne
push
call
sbb
imul
mov
sbb
mov
test
outsb
inc
sub
out
fdivs
inc
xor
fsubp
mov
test
push
ret
pop
dec
push
mov
dec
push
xor
setbe
pop
pop
movsb
xor
loopne
ret
jae
mov
adc
jae
loopne
loopne
sub
aam
push
je
add
adc
or
in
ss
push
cmpsl
lock
popl
push
jns
femms
rorb
addl
jecxz
subl
dec
push
push
or
enter
add
pusha
and
mov
or
mov
imul
adc
inc
and
xchg
test
in
xchg
add
call
shl
filds
addb
add
loopne
push
mov
mov
xchg
or
or
jnp
jecxz
dec
shr
dec
lret
mov
xor
adc
aad
push
add
sbb
nop
cs
rolb
das
sbb
pop
add
movsb
jns
push
inc
lahf
xchg
xchg
adc
int3
cs
or
xor
or
stos
ja
xor
enter
icebp
lahf
jmp
mov
sbb
arpl
xchg
cmpsb
and
js
mov
cltd
cmp
fists
clc
mov
lock
add
jae
push
lock
je
push
aad
out
ret
pushf
hlt
mov
push
xor
push
cltd
push
jle
mov
mov
hlt
mov
test
iret
mov
rclb
mov
or
push
xor
xor
push
push
push
push
rorl
and
lea
cmp
pusha
aam
js
inc
fucom
sbb
lahf
and
mov
push
je
push
push
lods
mov
sbb
cmp
jmp
push
jg
lods
xor
repz
cmp
out
pop
std
push
inc
mov
push
mov
pop
cld
push
scas
and
out
cld
pop
sub
sbb
and
add
mov
jle
addr16
push
and
js
jl
scas
clc
xor
sbb
xor
and
jmp
cmp
jne
inc
xchg
shll
cmp
sub
mov
clc
and
outsl
inc
or
into
cwtl
mov
pop
pop
test
mov
push
mov
and
push
repnz
xor
incb
adc
or
xor
or
jmp
repnz
or
imul
inc
repnz
daa
test
adc
cmp
fcoml
dec
or
or
shl
outsl
inc
jns
fadds
fcomps
xchg
mov
outsl
add
adc
inc
cmp
mov
ja
mov
mov
inc
pusha
xor
sbbl
pop
sub
cmp
and
mov
adc
mov
inc
add
cmpsl
movsl
rorb
dec
sub
cmpsl
lcall
dec
jne
jg
inc
loop
in
mov
push
adc
inc
or
cmp
or
stc
mov
adc
adc
lahf
cmp
xor
stos
mov
xchg
mov
sbb
and
add
and
mov
mov
rorb
stos
fptan
fnstcw
lahf
sub
jo
flds
aaa
addr16
or
xor
pop
pop
dec
inc
loope
and
ret
push
nop
pop
pop
xor
xchg
insb
pusha
cmp
sub
std
test
mov
sbb
dec
fadds
pop
sbb
out
pop
adc
or
mov
add
enter
xor
add
xchg
test
pop
inc
ljmp
sbb
test
push
in
mov
adc
jno
pushf
lea
mov
or
add
or
mov
inc
push
and
mov
xchg
and
inc
loopne
push
mov
sbb
rcrl
loopne
outsl
or
subb
and
jae
sbbl
push
push
or
sbb
mov
xor
push
mov
mov
frstor
loope
or
sub
jns
and
mov
cltd
pop
dec
out
xor
pop
mov
ret
dec
mov
mov
and
les
add
sahf
xchg
add
clc
or
and
sbb
add
sarl
cmp
pusha
inc
out
sub
pop
bound
xor
cmp
push
inc
js
and
xorb
popf
add
or
or
lds
les
nop
test
and
or
add
nop
shlb
in
negb
pushf
xchg
aas
or
dec
add
adc
jg
or
or
adc
or
adc
movsl
mov
mov
adc
leave
push
inc
mov
addr16
pop
inc
addr16
ret
shrb
mov
and
jne
inc
insb
sbb
add
js
popf
and
sbb
xlat
shll
mov
cwtl
mov
push
xchg
xchg
fprem
imull
mulb
lret
sbb
rorl
sbb
fistps
or
pop
mov
pop
sub
jmp
jmp
data16
dec
pop
cmp
push
dec
cmp
xor
imul
jno
jae
mov
outsb
ljmp
push
xchg
ds
mov
sti
sub
andl
sbb
add
pusha
xor
and
insl
sbb
inc
or
dec
lock
and
test
add
pcmpeqd
or
and
fsubrs
scas
push
and
scas
push
es
jns
pop
or
push
aad
or
dec
jae
add
scas
nop
jp
xchg
jp
popf
cld
ror
mov
sub
xchg
cmp
add
in
js
jle
xchg
jns
push
dec
enter
dec
xorl
adc
xchg
addl
dec
data16
es
mov
or
daa
aas
imul
test
jmp
mov
push
insl
idivl
add
andl
jb
or
adc
or
enter
xor
loop
push
or
std
stc
and
rcrl
movsl
add
xchg
sub
rorl
dec
mov
insb
test
sbb
insl
pushf
xchg
nop
mov
sub
clc
sub
push
push
fdivrl
mov
adc
xor
das
popa
mov
daa
add
test
or
stos
xor
roll
cld
add
adc
aaa
add
mov
mov
cmp
push
test
pusha
or
xor
call
aad
adc
or
lret
dec
push
sub
stos
hlt
lock
mov
mov
cmp
add
push
int
push
and
int
leave
and
pop
add
test
jo
add
and
movb
push
pop
dec
lcall
and
movsb
add
mov
xor
sbb
loope
outsb
sub
cmc
in
and
aaa
pop
adc
push
pop
popl
add
setnp
sbb
sahf
sub
inc
and
xor
je
sbb
add
dec
mov
fs
aaa
push
sbb
add
xchg
xor
add
push
dec
inc
addr16
add
xlat
push
out
or
lahf
imul
adc
xor
xor
iret
cmp
ss
les
or
les
rcll
and
add
movzwl
add
andb
push
pop
pop
sbb
and
sub
nop
push
filds
inc
sbb
sub
sub
inc
or
xor
out
or
shlb
sbb
pusha
mov
adc
jnp
adc
inc
daa
push
ret
jne
xor
push
insb
push
jnp
or
jo
push
fiaddl
fcmovnu
add
cmp
loopw
fldt
into
loope
push
nop
mov
inc
inc
es
dec
xor
add
adc
ljmp
xor
dec
push
or
mov
pusha
sub
movsl
loope
fsubs
xor
or
mov
dec
outsl
test
sub
rorl
inc
or
sbb
mov
and
adc
add
repnz
xchg
loopne
push
cmpsb
lret
jnp
int3
sbb
pop
lcall
test
and
add
fmull
xor
in
inc
ret
adc
and
dec
popa
sbb
mov
sahf
arpl
or
mov
jno
push
mov
ds
mov
adc
scas
xor
scas
lcall
pop
loopne
add
mov
xlat
jmp
sub
sbb
mov
or
adc
xor
les
pop
jae
imul
into
pop
or
fdivrs
aam
dec
mov
jae
repnz
aad
filds
out
or
sbb
xor
outsl
push
icebp
bound
adc
add
and
in
jp
sbb
push
outsl
dec
iret
sti
mov
pop
mov
adc
mov
stos
xchg
adc
jno
mov
rcll
add
fcoms
dec
pusha
movsl
imul
sub
inc
inc
loop
dec
xor
outsb
in
scas
jns
das
icebp
push
pusha
sbb
pop
sbb
mov
shll
adc
push
and
and
lock
dec
dec
ds
xor
jno
gs
push
sbb
add
in
inc
outsl
push
pop
dec
cmp
pop
push
inc
scas
and
clc
and
aaa
mov
aaa
or
pushf
fisubrs
jnp
sub
sbb
insb
dec
adc
adc
sbb
push
xchg
mov
popf
cs
sbb
jns
cmp
shrb
inc
jge
push
xchg
rorb
push
push
mov
mov
push
xor
pminsw
shl
or
inc
sub
ss
push
ja
mov
shl
fs
movsl
or
adc
stos
and
or
lock
sbb
cli
add
mov
ds
adc
ret
push
or
adcb
and
repz
adc
sbb
icebp
leave
inc
sbb
mov
mov
test
push
push
mov
ja
mov
loope
es
push
mov
dec
sub
out
gs
and
cs
pop
sub
push
sub
sbbb
cli
add
jl
fistps
aaa
and
and
push
fldcw
push
aam
outsb
aas
jmp
push
lds
in
insl
push
fnsave
sbb
cmp
sbb
adc
arpl
ret
push
aas
jmp
movsb
imul
leave
push
cmc
add
and
cs
pushf
add
adc
adc
dec
dec
test
pop
sub
das
and
outsb
andl
mov
mov
add
popa
xchg
add
test
dec
test
repz
ljmp
test
sbb
mov
or
mov
push
add
cmp
adc
push
sbb
ja
sbb
xor
adc
hlt
ret
mov
scas
dec
xchg
movsb
out
xchg
inc
lahf
movl
xor
cld
dec
leave
inc
rclb
push
es
push
adc
dec
xchg
add
or
inc
mov
mov
or
sbb
mov
sbb
test
in
add
pop
and
cmpsb
in
lea
xor
adc
dec
iret
pop
pop
and
fucomi
sbb
adc
sbb
pusha
sbb
loop
and
call
pop
mov
and
or
cmp
daa
cmp
add
div
mov
sbb
xor
or
dec
fisttpll
cmp
insb
test
cvttps2pi
mov
or
int
and
pop
or
insl
sbb
add
popa
push
mov
int
adc
test
jo
or
shlb
pop
js
dec
or
lods
add
into
push
push
add
ss
imul
or
jnp
fcoms
xchg
adc
psubw
cmp
xor
pop
and
outsl
movsb
lea
inc
push
jle
jne
imul
or
cwtl
outsb
cmc
push
adc
add
add
mov
rol
mov
mov
pop
pop
inc
lock
test
xchg
rolb
xchg
push
adc
jne
sbb
cld
in
fcmove
push
shlb
mov
cmp
cmpsb
out
and
add
pop
sahf
test
insb
jle
decl
inc
inc
ret
addl
lret
and
mov
xor
imul
faddl
mov
lods
cmpsl
insl
push
aam
or
xchg
or
pop
mov
jne
js
add
push
pop
push
push
jb
dec
inc
mov
ret
adc
and
and
lret
flds
shlb
inc
sbbb
adc
push
iret
aad
mov
pop
dec
addr16
push
jecxz
lret
repnz
mov
jecxz
pushw
mov
pop
subb
daa
push
xor
and
mov
or
xchg
jo
dec
or
mov
jge
icebp
jmp
add
imul
stos
orb
and
push
orl
or
and
and
dec
rclb
les
jge
pop
push
mov
and
inc
aaa
cmp
enter
sti
and
pop
xor
iret
push
sub
lea
rorb
add
mov
jge
add
xor
ja
pop
add
push
or
jbe
cs
hlt
mov
movl
xor
sub
outsb
push
outsb
push
inc
inc
mov
push
or
adc
jecxz
xchg
outsb
xchg
xchg
outsb
adc
mov
adc
fcoml
fcom
imul
ret
movsl
lret
dec
or
out
adc
xchg
mov
xchg
fisubs
cmp
inc
cmpsl
mov
add
outsl
or
sbb
fisubs
mov
out
adc
push
and
rcrl
add
add
lods
push
push
test
sub
outsb
dec
push
xor
xchg
mov
add
pop
or
pop
mov
lock
mov
pop
arpl
stos
stos
add
push
popf
in
add
jmp
in
js
pusha
pop
call
add
jae
call
sub
cs
in
adc
jne
outsl
jns
bound
inc
sbb
cmpsl
mov
popa
or
mov
leave
pop
shrl
test
adc
inc
lahf
mov
mov
rcrl
cmp
call
loope
inc
push
adc
movsl
mov
inc
movl
sti
push
cmpsl
test
inc
adc
fldz
and
pop
imul
sbb
es
and
sub
test
xor
cmp
cmp
inc
enter
push
xchg
mov
dec
fstps
mov
mov
lcall
inc
xlat
xor
adc
add
adc
sub
test
xorb
inc
rcrb
and
nop
cmpsb
sarb
pop
fmuls
and
mov
aam
pushf
mov
inc
loopne
lea
fsubs
mov
inc
cwtl
stos
imul
adc
push
fwait
pop
mov
ds
rorl
aaa
jno
pop
inc
add
add
jle
cmp
aaa
lea
fyl2x
aaa
mov
xchg
dec
and
adc
fildll
push
cmp
push
cmp
jle
cmp
jp
push
cmp
loopne
ja
cmp
cmp
mov
mov
push
add
inc
jmp
gs
std
or
data16
pop
add
mov
and
or
fwait
inc
or
fs
pop
idiv
call
pop
test
xchg
ds
xor
adc
ss
adc
or
mov
add
jns
jnp
mov
sarb
inc
int
sbbb
mov
fnstenv
push
shlb
outsb
push
push
xchg
lock
aad
and
mov
mov
push
out
xlat
xor
scas
sub
cmp
mov
dec
sbb
and
movsl
or
adc
and
adc
dec
sub
roll
rcr
popa
cs
int
cmpsb
sub
mov
dec
fcompl
sahf
shl
push
and
addr16
or
push
movsb
ror
push
es
insl
iret
and
dec
es
mov
es
mov
adc
xchg
xchg
imul
loopne
les
movaps
addb
rol
or
add
add
in
sbb
rorb
mov
push
cmp
xchg
popf
cmp
pushf
jl
outsl
dec
adc
mov
dec
es
mov
movsl
adc
fldt
cmp
xchg
add
push
insb
in
push
push
data16
push
inc
dec
or
adc
in
adcb
and
fs
sbb
xchg
inc
dec
xchg
mov
sub
int
xchg
test
imul
and
inc
sub
sub
sub
sbbl
xor
fisttpl
sbb
sub
adc
pop
add
sub
lods
pop
and
or
sbb
inc
sub
mov
push
cmp
sbb
mov
sbb
rcl
pop
popa
mov
mov
cmpsb
add
test
ret
inc
fwait
mov
insl
xchg
inc
inc
sbb
stc
add
and
adc
pusha
int
leave
outsb
and
sbb
pop
sub
fstpl
mov
push
lea
adc
cltd
sub
or
push
test
ret
lds
in
push
push
or
mov
and
push
sub
mov
xchg
sbb
push
mov
xor
cmp
mov
and
adc
movsl
cltd
inc
sbb
jns
xchg
leave
inc
add
sbb
mov
mov
loopne
aas
pop
add
orb
stos
pusha
mov
lods
or
insb
lea
xchg
or
loopne
fs
stos
rorb
clc
les
mov
add
or
in
mov
add
sbb
fwait
loope
and
or
add
and
loopne
ret
and
sbb
push
mov
mov
mov
nop
inc
sbb
cmpsl
add
mov
je
and
or
bound
sbbl
mov
shlb
dec
and
add
xchg
mov
dec
pop
jmp
mov
mov
mov
pusha
xchg
lock
aam
mov
pop
xor
add
cmpsl
in
pop
jp
inc
inc
outsl
inc
push
pop
xor
inc
push
mov
mov
pop
pusha
mov
dec
aaa
lock
fadd
mov
push
xchg
fistl
adc
or
leave
adc
adc
icebp
clc
xchg
add
push
add
xor
dec
cmp
outsb
sbb
mov
jo
mov
in
pop
outsl
cmp
xorb
jp
sbb
popa
xor
push
jecxz
push
addr16
rcrb
ret
ja
and
int3
inc
hlt
cmp
sbb
mov
xchg
or
and
std
test
and
dec
insl
xorl
testb
flds
adc
stos
dec
jae
outsb
push
push
inc
lock
hlt
lret
xchg
pop
adc
pop
jb
add
insb
pop
sbb
push
popa
mov
jne
fstpt
cld
lea
mov
dec
push
ret
popa
xchg
mov
lds
shl
push
add
xlat
cmp
fildl
mov
inc
and
mov
rorb
add
es
pop
push
rcrl
or
add
cwtl
jmp
sbbl
mov
sub
cmp
mov
imul
popa
push
arpl
mov
and
pop
push
adcb
pop
mov
add
mov
or
notl
enter
adc
push
push
sbb
mov
lcall
or
es
leave
add
gs
addr16
xor
and
shl
add
or
jbe
adc
adc
mov
jl
push
push
dec
adc
daa
xchg
cmp
mov
aam
cmp
pop
fcomps
inc
push
mov
lahf
push
mov
xor
jbe
aaa
je
mov
pop
mov
shl
mov
pop
dec
add
xor
sub
outsb
or
dec
sub
jge
mov
xchg
xlat
fldl
das
ficomps
fnstsw
test
je
sbb
add
push
mov
mov
fldl
push
sbb
dec
or
inc
sbb
and
jle
lahf
mov
test
lods
lods
mov
jl
cmp
mov
jo
jge
mov
xor
and
loope
fsubrp
dec
jbe
js
or
push
dec
pop
pop
pop
push
pop
or
mov
push
andl
inc
lods
ds
divb
mov
inc
cmp
inc
dec
enter
cmc
scas
sub
daa
dec
dec
call
mov
test
ss
add
je
mov
pusha
dec
sarl
jge
sbb
add
mov
out
fidivs
fisttps
pusha
outsb
and
pop
call
loop
insl
fisubrs
mov
lret
pop
dec
cmp
mov
idivl
loopne
xor
ja
push
mov
jno
sarb
pop
call
and
iret
mov
adc
pop
push
mov
xor
push
ret
pop
xchg
sahf
dec
dec
andl
adc
push
mov
mov
pushf
fld
jnp
stc
mov
arpl
lods
lret
lea
lcall
push
jae
mov
rcr
icebp
bound
stos
xor
shld
add
mov
jb
ja
lea
ss
push
and
push
push
mov
leave
je
call
cmpsl
mov
or
push
mov
add
add
in
cltd
rorl
or
or
cli
test
lods
arpl
test
add
pop
pop
cmp
xchg
lcall
shll
test
sbb
ss
dec
push
mov
cltd
scas
shlb
adc
test
mulb
out
ja
push
adc
add
xor
addb
call
insl
loope
jle
inc
cmpw
jne
mov
cmc
out
inc
cld
cmp
dec
push
push
jns
inc
push
jl
mov
add
popl
sti
jg
stc
std
mov
or
add
out
retw
xlat
inc
or
push
push
push
push
mov
xlat
push
push
sub
ret
mov
adc
and
add
aas
loopne
cmp
or
ss
xchg
add
rorb
fsubl
mov
adc
push
fdivl
ds
mov
adc
add
or
ret
mov
adc
xchg
mov
add
push
adc
push
int
sub
pusha
roll
mov
dec
mov
scas
iret
jns
pop
push
pop
or
pop
inc
add
pop
loopne
ret
push
shll
mov
scas
in
pop
rcrl
add
movsb
mov
pop
fisttps
push
nop
push
adc
fisubl
mov
lret
loopne
sarb
sarb
dec
xlat
adc
std
ds
mov
cmp
xor
xor
pop
dec
dec
xor
inc
pop
mov
adc
sub
push
iret
iret
sub
mov
gs
mov
add
pop
test
lcall
fildl
sub
rclb
push
mov
sarb
xchg
rol
movsl
dec
inc
and
jns
adc
xchg
lods
je
dec
add
lds
shlb
daa
lods
or
xor
enter
cmp
add
lods
and
sbb
add
sbb
fldt
jb
mov
fbld
or
or
add
clc
add
lods
aaa
loope
fcoml
into
ss
mov
add
xchg
lods
and
lret
adc
sbb
sbb
out
xchg
adc
adcl
xor
xchg
lock
ds
outsb
pop
sbb
scas
mov
sub
inc
adc
dec
and
add
stos
cltd
addr16
xorb
in
push
push
fdivs
add
call
outsb
dec
add
and
and
inc
or
fs
jp
adc
sub
mov
cltd
dec
xchg
jnp
adc
int3
xchg
push
xchg
xchg
jno
add
popa
and
mov
insl
faddl
xor
orl
hlt
adc
cs
ja
xor
sub
xor
and
jno
jnp
mov
outsl
adc
enter
ss
test
in
jle
loopne
jg
rclb
inc
jg
cmc
sti
sub
sub
je
sub
dec
adc
xor
sbb
sbb
dec
jne
push
lods
dec
push
sub
scas
pop
xchg
adc
jmp
push
push
dec
adc
sub
adc
pop
push
test
push
repnz
dec
push
sub
cmp
pop
jmp
in
rcr
cmp
xor
push
pop
pop
jno
pusha
mov
mov
jmp
push
out
pop
mov
movsl
push
das
mov
scas
push
and
push
adc
pop
pushf
xchg
mov
testb
pop
addr16
mov
jbe
sub
jle
push
or
adc
or
flds
xchg
push
iret
mov
andl
dec
jmp
push
daa
mov
sbb
and
dec
sbb
pop
inc
pop
and
inc
lcall
clc
push
sub
inc
pop
in
push
in
nop
push
rorl
mov
push
pop
and
repnz
push
in
push
pop
push
jl
jnp
addr16
xor
rclb
add
add
sbb
testl
mov
ret
mov
or
mov
and
mov
push
aam
loop
in
in
mov
aas
sbb
insl
sbb
cmp
out
pop
lahf
les
ljmp
add
xor
and
push
sahf
out
sahf
mov
jns
out
ror
fsubrp
repz
out
and
xor
iret
repz
dec
push
pop
push
repz
xchg
pushf
cmpsb
mov
cmp
repz
out
ds
lock
add
adc
jo
jns
and
inc
cmp
xchg
lods
pop
add
sub
aad
xchg
jnp
mov
pop
push
push
in
loopne
adc
popf
nop
adc
sub
movsb
push
mov
mov
jo
lea
test
sbb
fsubs
shll
aas
inc
cmp
ret
or
std
mov
out
fwait
jmp
jl
mov
mov
mov
fwait
and
inc
mov
push
mov
into
jmp
inc
push
and
jmp
ss
jle
push
mov
sbb
mov
lds
mov
jmp
mov
faddl
adc
pop
mov
jmp
ret
pusha
sbb
cmp
mov
js
jge
lret
call
lds
popa
cmpsl
mov
loope
es
add
dec
push
les
xor
push
addb
idivl
sbb
js
movsl
shr
cmp
dec
and
inc
fsubl
add
push
push
rorb
jb
mov
xchg
cmp
movsb
leave
cmpsl
jg
lcall
or
dec
add
shlb
or
mov
cmp
dec
dec
jbe
pop
push
gs
popa
add
sub
clc
or
mov
imul
push
xor
mov
dec
sub
test
sub
andb
rcll
shrb
dec
xor
and
ret
adc
xchg
decl
mov
pop
and
mov
hlt
inc
iret
cmp
mov
adc
test
lods
sbb
out
cmp
xlat
pop
js
cmp
inc
int
test
sub
inc
bound
adc
jo
mov
push
sub
pop
xlat
sbb
dec
mov
push
inc
test
adcl
push
push
les
jp
xor
fwait
or
or
xchg
mov
popl
mov
aaa
fistpl
xchg
fwait
je
mov
jl
dec
daa
je
in
int3
sub
int3
enter
std
orb
add
rcrl
sub
shlb
push
div
push
xchg
cmp
mov
and
push
xor
insl
push
mov
test
negl
gs
sub
insl
push
les
push
and
imul
mov
test
bound
in
call
enter
dec
rcll
push
dec
cmp
xor
jle
cmp
cwtl
stc
xor
mov
mov
mov
xor
das
mov
jo,pn
adc
and
test
movsb
orb
outsb
mov
cmpsb
add
cmc
jg
ss
outsb
push
mov
mov
jp
js
dec
int3
jl
mov
xchg
adc
cmp
xchg
add
aaa
lret
sbb
sbb
mov
xlat
movsb
sar
orb
mov
icebp
orl
mov
or
or
bnd
add
cs
jb
call
fisubs
rcrb
jb
sbb
sbb
sbb
nop
dec
pop
mov
dec
push
cltd
fs
sbb
in
mov
push
into
push
rclb
adc
sub
or
sbb
sbb
pop
aam
movsb
xor
sub
sbbl
mov
pop
fsubl
jge
adc
cmp
mov
inc
sbbl
pop
fisttps
mov
icebp
xchg
push
cmp
cmp
xor
lock
cld
adc
inc
out
or
popf
mov
roll
xchg
call
cmp
jle
movsb
fmul
fnstsw
js
or
int3
cmp
inc
mov
cmpsb
jle
and
movsb
aas
push
adc
mov
mov
aas
jbe
and
ds
mov
inc
in
aaa
xchg
add
nop
nop
ljmp
or
mov
outsb
inc
ja
cmp
repnz
push
sbb
das
xor
ret
push
je
push
into
add
add
sub
xchg
jle
imul
loope
pop
dec
imul
lahf
outsb
lcall
dec
pop
loop
inc
adc
push
add
pop
pop
lock
or
xor
pop
jo
jmp
push
sub
ljmp
mov
popa
test
fcomp
lds
push
xchg
xchg
out
and
rcrb
out
dec
dec
add
cmp
adcb
push
cli
xchg
cld
mov
xor
sti
jle
push
jp
in
mov
das
nop
mov
movsb
push
aas
ja
adc
test
push
sbb
dec
loope
out
ret
push
adc
nop
ret
push
es
jge
fcmovnbe
les
call
push
stc
and
add
jl
mov
in
fisttps
push
mov
inc
ret
cmp
sbb
nop
xor
mov
mov
dec
iret
mov
stos
add
push
loop
adc
push
xor
repnz
jo
js
add
dec
pop
iret
popw
xchg
push
js
pushf
xchg
xorb
sbb
xorb
fidivl
push
sbb
ror
jns
jns
paddusb
and
pop
lret
adc
ret
lret
mov
and
xchg
mov
daa
andb
adc
shl
adc
enter
or
push
mov
push
pop
xchg
push
or
int3
push
je
outsb
pop
mov
sbb
push
data16
push
rcrb
jl
or
enter
or
mov
push
sarb
test
adc
pop
push
insb
loop
mov
aaa
and
imul
inc
sbb
dec
sbb
inc
and
mov
dec
sbb
icebp
adc
pop
cmp
inc
sbb
rorl
out
or
mov
push
shlb
adc
data16
xor
adc
and
movsb
nop
sub
nop
add
nop
test
cwtl
jno
enter
mov
loop
nop
std
or
cmpsl
inc
sub
dec
xor
or
xchg
xor
shlb
pop
fs
xchg
ret
push
pushf
in
call
movsl
or
arpl
adc
inc
lcall
add
repnz
add
push
out
filds
cmp
xchg
jno
xchg
add
inc
mov
cmpsb
mov
mov
add
lock
repz
add
adc
jne
subb
xor
faddl
ljmp
push
repnz
repnz
int3
push
repz
xchg
call
push
or
add
push
jp
out
xchg
xchg
push
or
fsubrs
rclb
dec
movsl
xor
xchg
addb
in
dec
test
mov
fimull
push
das
imul
inc
test
aaa
inc
push
mov
pop
xchg
rorl
xchg
stos
and
mov
test
and
addr16
xor
xchg
adc
in
popa
and
das
adc
popa
loope
shlb
cmc
pop
inc
pop
outsl
scas
inc
add
enter
insb
push
push
loopne
mov
shr
jne
push
sbb
nop
lods
mov
jecxz
mov
sbb
mov
out
in
lods
sbb
movsb
mov
mov
mov
pop
jmp
mov
sbb
mov
push
nop
fistl
pop
and
push
cwtl
and
pop
push
xchg
lcall
jo
and
or
push
and
das
mov
pop
dec
xchg
lods
mov
scas
cmc
rolb
rolb
and
lret
mulb
enter
scas
add
rolb
je
xlat
loope
jo
imul
add
arpl
es
cmp
sub
xchg
fdivl
jmp
shl
pop
fcmovb
andl
mov
jo
pop
and
inc
cmp
sbb
jno
sbb
sbb
stos
out
int3
enter
xchg
push
sbb
sbbl
adc
pop
ret
leave
xorl
nop
or
adc
dec
jmp
dec
sub
mov
loopne,pn
inc
test
aas
add
push
enter
mov
xor
mov
xchg
out
push
clc
pop
sbb
dec
cs
xor
or
lcall
pop
add
xchg
add
inc
loop
xor
fwait
addl
and
clc
cmp
inc
bound
iret
daa
lea
ja
aam
cmp
out
cmp
ss
mov
add
test
test
or
jo
sbb
and
add
or
xor
dec
sahf
jo
movsb
and
mov
mov
jnp
cmp
das
hlt
sub
sub
in
pop
push
loop
push
in
jmp
xor
fnstcw
in
or
aad
stos
add
sti
or
jp
cmp
adc
mov
jbe
inc
jl
js
push
add
inc
cmp
cmp
movsl
jae
and
negb
mov
inc
je
push
push
imul
push
lret
inc
push
insl
ja
insb
movaps
jb
mov
lret
icebp
jg
lahf
fcomps
pop
pop
je
push
addl
inc
sub
lea
add
mov
aam
xor
pop
cmp
push
push
sbb
xlat
jbe
xchg
add
xchg
cmp
jne
inc
push
add
inc
ret
jl
sub
inc
jmp
ret
mov
insb
test
push
or
iret
jne
and
test
test
enter
testb
jae
inc
add
nop
cmp
push
ljmp
je
mov
dec
shll
mov
pop
aad
dec
ret
mov
pop
jns
inc
and
push
test
push
mov
popa
insl
shlb
rolb
xchg
pop
es
dec
ja
ret
addb
add
sarl
pusha
mov
into
sbb
and
xor
lods
dec
or
daa
stc
imul
mov
lcall
push
orl
daa
dec
mov
in
adc
mov
daa
pop
dec
push
pusha
rorb
clc
xchg
adc
ss
inc
sbb
sbb
sbb
daa
sbb
or
add
sbb
xchg
pop
dec
or
faddp
in
loop
in
test
add
add
jmp
add
sbbl
add
xor
cmpb
xchg
add
or
pop
imul
and
rolb
sub
sahf
jmp
cmp
int
in
and
jg
je
cmp
or
and
filds
pushl
movsbl
shr
mov
add
out
jp
adcl
add
pop
adc
xor
in
jb
stos
push
mov
pop
pop
or
jo
bound
mov
mov
faddl
aam
sub
add
pop
fcmovnb
adc
xor
pop
pushf
or
js
add
lock
pop
mov
push
push
xor
or
mov
adc
push
roll
mov
xchg
add
inc
xchg
mov
cmp
je
dec
and
aam
and
fldcw
inc
add
lds
imul
into
stos
cmpsb
dec
pop
mov
mov
pop
and
pushf
ret
shr
mov
call
pop
inc
out
lret
fwait
pop
add
jmp
pop
je
sbb
mov
daa
sub
addl
and
and
aas
jns
mov
scas
xchg
sarb
adc
pop
scas
mov
repnz
sub
jns
jbe
dec
push
mov
add
mov
lea
rol
out
xchg
nop
dec
dec
xchg
dec
test
and
add
xor
inc
and
pushf
es
sbb
mov
sub
push
sbb
add
inc
xchg
jge
bound
fmuls
mov
sub
add
add
sbb
test
sti
mov
xor
xchg
sbb
repz
loop
lods
sbb
sbb
loop
sbb
inc
cld
shrb
mov
pop
loopne
pop
pusha
dec
dec
stc
pop
jne
add
cmp
sub
jne
out
imul
aam
in
popa
mov
cld
loop
cmp
test
cmp
sub
pop
enter
fistps
sbb
fs
mov
jmp
movsb
arpl
stos
stos
aad
adc
or
jl
mov
shlb
addb
nopl
mov
and
rcr
test
daa
in
inc
fcmovb
or
or
and
pop
sbb
inc
sbb
pop
or
fmul
dec
xor
mov
adc
mov
mov
stc
sbb
lock
enter
sbb
lods
aam
lea
mov
inc
and
rolb
ret
in
je
sub
in
sbb
mov
pusha
and
sub
pop
add
sub
pop
ficoml
adc
fdivrs
sahf
cmp
lret
shrb
add
data16
jne
pusha
mov
jmp
rorb
lock
nop
add
test
ljmp
cmp
mov
aam
xor
mov
shll
cmp
loopne
inc
pop
insb
mov
push
sub
push
hlt
jo
xor
nop
inc
push
cmp
je
push
les
xor
iret
ljmp
test
enter
adc
shl
les
mov
jbe
inc
inc
rcrl
xchg
add
leave
add
bound
cltd
add
lds
jecxz
jb
test
sbb
push
push
bound
or
test
in
ret
in
movsl
xchg
and
sti
inc
ljmp
push
hlt
push
push
jg
cmp
je
inc
xchg
cmp
jl
pop
sbb
js
cltd
jle
pop
add
mov
jecxz
push
mov
int3
lods
iret
insl
fwait
push
faddl
and
push
mov
bound
fdivrl
sti
faddl
pop
sub
or
or
push
filds
lret
xor
js
loope
xor
insb
adc
fsubl
push
loop
sbb
push
lea
std
jo
int
cmp
inc
jne
sub
div
in
pop
arpl
mov
add
fcoms
xchg
mov
push
daa
and
loope
sbbb
fdivs
les
or
imul
mov
jmp
pop
cmpsl
fst
mov
rorb
les
or
or
lods
bnd
shlb
lret
clc
inc
das
je
aad
xchg
mov
fisttpll
or
test
mov
inc
enter
sahf
fsubrl
hlt
xchg
cs
in
mov
cmp
sti
jne
es
sub
cmp
sti
xchg
fdivrs
mov
sbb
or
add
or
int
fcmovnbe
xor
add
or
ret
inc
mov
call
lea
pop
imul
push
addr16
sbb
data16
call
xchg
mov
or
out
test
dec
lret
sub
incl
ss
or
cli
pop
enter
xchg
push
cmp
stos
add
ja
mov
pop
aam
or
jle
test
outsl
pop
fmuls
pusha
stos
mov
les
xchg
or
inc
add
inc
or
or
dec
jle
cmp
push
cmp
sbb
jle
mov
sbb
push
ficompl
add
mov
les
pop
pop
mov
ret
pop
ret
ret
or
pop
js
or
push
sbb
movsl
add
je
xor
or
fldl
daa
mov
add
stc
insl
fcomi
inc
data16
cmp
adc
jne
jns
daa
bnd
adc
hlt
jne
or
out
divb
or
push
mov
mov
xor
cwtl
pusha
sbb
js
pop
insb
in
adc
mov
insb
and
push
lea
movl
pop
mov
dec
dec
in
outsb
in
and
popf
stos
inc
in
fstl
mov
inc
out
lea
repnz
lea
sahf
mov
inc
pop
lea
dec
mov
adc
nop
shrb
cmp
test
mov
add
iret
mov
sub
addl
mov
jnp
pop
dec
mov
test
rcl
int3
jne
enter
push
xor
and
xchg
imul
xor
adc
xchg
popf
or
sti
pop
fdivs
fstl
mov
sub
fcom
loopne
rorb
lea
jb
adc
mov
add
and
jl
lea
stos
movsl
cmpsl
in
fiadds
lahf
push
ss
mov
xchg
inc
sbb
cmovne
fmull
lret
add
push
xchg
fdivrs
xor
insl
mov
sbb
push
dec
pop
imul
pop
orl
in
fidivs
pusha
cpuid
or
test
mov
cmp
xchg
fs
push
fwait
add
jne
mov
into
xor
fistps
jae
dec
ficoml
mov
sti
push
je
add
icebp
mov
sub
scas
fisubrs
dec
push
xchg
inc
or
mov
xchg
dec
jg
and
adc
data16
fcomps
fstpt
add
shlb
imull
call
or
sarb
dec
ja
int3
or
into
inc
subl
pop
pop
and
loop,pn
jbe
xor
xchg
jecxz
enter
add
add
pusha
dec
dec
vmwrite
addr16
aam
pusha
and
ret
or
fs
push
or
enter
jns
xor
mov
or
pop
cmpsb
mov
mov
dec
dec
jb
cmp
pop
push
cltd
mov
mov
and
cmpb
mov
or
sbb
cmp
test
rcrl
jnp
cmp
mov
insl
cmp
mov
jnp
fimull
les
cmp
mov
mov
sbb
jnp
fwait
mov
add
clc
mov
enter
dec
test
hlt
dec
mov
and
cmp
push
xchg
pusha
sbb
jecxz
or
push
dec
jmp
add
mov
mov
ret
sub
xor
xor
inc
adc
movsl
stos
inc
in
xor
setbe
adcl
cmp
rclb
test
nop
or
adc
adc
sbb
sbb
pop
hlt
in
inc
adc
sti
sti
sub
adc
lds
lods
pushf
sbb
sub
sub
cmp
and
pop
xor
adc
repz
dec
xor
leave
sbb
adc
jno
adc
dec
movb
or
out
and
cwtl
nop
data16
mov
xor
lods
inc
push
dec
push
sub
and
movsl
es
xchg
inc
daa
and
pop
inc
inc
mov
xor
cmp
sbbb
nop
nop
iret
dec
push
adc
gs
add
jae
mov
push
jb
imul
test
popa
leave
inc
dec
shrl
adc
arpl
mov
in
and
test
add
add
pop
orl
pop
jg
mov
rolb
pop
add
mov
or
mov
insl
loop
mov
pop
pop
outsb
test
xor
and
cld
and
dec
js
jg
mov
or
mov
lea
in
aam
add
xchg
inc
sbb
faddl
loopne
les
int3
sbb
push
jne
xor
movsb
mov
mov
jne
movsb
pop
adc
mov
test
mov
sub
dec
inc
cmp
stc
clc
inc
dec
xor
aas
add
rol
fildll
mov
mov
sub
push
les
adc
call
sahf
pop
xchg
idivb
jmp
or
pop
push
or
mov
pop
out
jno
and
test
mov
cmp
inc
dec
mov
es
adc
lea
jge
jecxz
mov
push
je
in
push
lock
jb
aaa
fmull
inc
std
mov
sarl
and
je
add
sbb
xor
dec
orl
sbb
jne
push
call
push
sub
pop
scas
dec
inc
adc
add
add
adc
mov
sub
mov
stc
and
xorl
xchg
fadd
js
imul
inc
call
push
pop
mov
enter
fs
add
aad
cs
cmp
dec
sbb
lods
xlat
push
jne
pop
cmp
inc
hlt
scas
es
fwait
lods
std
push
jne
mov
ljmp
and
or
xor
xchg
mov
mov
adc
jnp
add
aaa
xor
sbbb
and
call
xorl
add
imul
mov
sbb
push
shll
test
push
mov
or
clc
test
int
js
cld
xchg
out
mov
adc
and
inc
rolb
stos
rcrb
inc
repz
add
loopne,pn
popa
insl
sub
mov
mov
add
mov
enter
and
inc
jecxz
mov
cmp
fcompl
sub
mov
stos
loopne
mov
mov
sbb
pop
je
das
call
jmp
out
je
push
and
incb
dec
mov
push
pop
add
inc
xor
mov
lret
and
repnz
jne
sbb
and
nop
sbb
out
add
and
or
cmp
sub
mov
xor
mov
je
sbb
pop
mov
mov
push
lahf
or
movsl
xor
int
sbb
xor
or
movsl
jg
xor
or
xor
dec
pusha
inc
imul
inc
test
adc
mov
cmp
add
jo
int3
sbb
push
add
sub
rol
addb
xorl
xchg
push
mov
xchg
push
aas
lret
mov
and
mov
aas
mov
mov
fldl
sti
aam
pop
lock
ret
mov
dec
sbb
lea
and
adcb
mov
je
movsl
test
ja
or
pop
test
jg
fidivs
leave
cmp
je
pop
idivb
dec
or
sahf
xor
add
sbb
cli
adc
mov
loop
ljmp
ds
nop
bound
add
jne
cld
add
movsbl
sbb
inc
mov
imul
rorb
in
add
sbb
pop
jmp
enter
aad
das
add
lea
and
dec
inc
add
jg
add
or
jecxz
or
add
inc
cmp
jl
ljmp
sbbl
and
add
shll
call
lods
cmp
sub
clc
xor
shlb
shl
mov
aas
loope
add
or
adc
pop
xchg
loopne
or
jne
xchg
shlb
inc
inc
or
jae
cld
aam
pop
call
aam
add
es
mov
xchg
or
jmp
ret
xchg
inc
rorb
adc
jne
add
sbbl
and
lcall
imul
cmpb
jl
push
jle
sbb
add
mov
lock
cli
js
inc
mov
pop
incl
add
dec
jne
mov
inc
arpl
or
shl
sbb
jl
out
add
or
inc
add
adc
pop
rclb
bound
call
stos
and
or
orb
lock
adc
fstp
pop
push
inc
in
cmpsl
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
fwait
jg
sbb
push
repnz
nop
xchg
xchg
loope
icebp
dec
xchg
repnz
push
or
stos
sub
and
xchg
xchg
lret
hlt
add
nop
je
add
sub
mov
imul
stc
pop
push
jmp
fucom
push
cltd
test
imul
push
fsubl
cltd
xchg
out
fcomps
lods
jmp
outsb
pop
mov
pop
add
jmp
push
rolb
push
xor
inc
push
push
jecxz
jp
add
push
nop
into
orl
push
sub
gs
add
add
lock
js
inc
xor
dec
sbb
stos
push
xchg
cmp
adc
call
in
push
popa
add
out
cltd
scas
test
clc
gs
mov
fsubrl
xchg
in
bound
cmp
and
mov
push
mov
mov
add
icebp
and
hlt
dec
ret
or
push
je
cmp
cmp
lcall
xorb
cmp
xchg
je
andb
or
in
mov
cli
adc
adc
mov
jecxz
pop
mov
mov
adc
pop
xchg
adc
hlt
cwtl
popf
outsb
push
xchg
cmc
adc
das
push
movsl
or
popa
cli
shlb
ja
dec
push
sbb
cli
push
inc
daa
mov
shl
dec
dec
in
sbb
dec
mov
sbb
loope
adc
add
mov
sub
rclb
jge
popa
inc
mov
lret
fiaddl
fiaddl
test
shll
adc
aam
or
pop
shrl
cs
arpl
jl
mov
jae
pop
ficoml
pop
aam
inc
mov
scas
dec
mov
push
push
add
imul
or
aaa
mov
call
int
add
push
and
rolb
jae
arpl
cmp
xchg
add
int3
int3
adc
xor
adc
inc
add
sti
jne
clc
cmp
push
pop
cmp
roll
dec
loopne
test
dec
shl
je
sbb
inc
leave
adc
cmpsl
call
out
das
xchg
adc
subl
add
cmp
adc
and
shrb
pusha
mov
adc
and
inc
xchg
nop
inc
in
pop
cmp
mov
stos
or
inc
mov
and
add
test
fdivrs
sub
aam
cmc
dec
dec
gs
clc
bound
shll
cwtl
loopne
push
stos
mov
fdivrl
pop
jge
sub
xchg
adcl
sub
push
daa
movsbl
shl
or
add
ss
std
sub
mov
add
mov
pop
push
sub
pop
cli
mov
test
sbb
lret
movb
and
movsb
pusha
lcall
rolb
fsubrs
add
shlb
cmp
add
lcall
pop
push
xor
dec
push
roll
repz
scas
adc
addb
mov
icebp
sahf
stc
mov
sub
inc
aas
cld
les
lock
xor
and
lods
pop
lock
sbbb
loop
xor
je
or
add
add
call
jl
sub
sbb
in
adc
jecxz
lret
inc
inc
mov
loopne
hlt
or
test
jnp
pop
fisubl
add
pushl
mov
xchg
mov
pop
test
clc
pop
mov
xorb
orl
clc
das
js
lods
push
fisubrl
xorb
inc
or
add
aad
and
cmc
hlt
mov
pop
or
mov
imulb
clc
add
mov
add
movzbl
mov
inc
mov
mov
or
aam
scas
dec
clc
cmpl
clc
sub
pop
sub
push
icebp
mov
push
incb
mov
add
imul
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
popa
pop
icebp
mov
cmp
jne
pop
test
aas
sahf
stc
mov
xchg
push
outsb
push
scas
and
adc
pushl
cmp
inc
or
jne
add
jmp
gs
or
inc
push
mov
test
enter
imul
movsb
jb
or
in
test
or
push
mov
jo
xor
sub
ret
adc
mov
js
inc
lret
cmp
testb
dec
fbstp
xor
cmp
push
cmp
and
lods
mov
fs
in
scas
push
imul
or
or
cmp
xor
popf
cmc
test
dec
mov
roll
lahf
xor
and
adc
add
pop
pop
or
mov
sub
mov
xchg
push
xor
cmp
dec
daa
or
lret
push
xor
mov
hlt
test
jmp
clc
int
push
jns
add
sbb
rclb
pushf
dec
mov
adc
add
test
ss
cmc
push
jg
dec
cmp
cmp
jbe
cmp
jbe
mov
sbb
ret
nop
mov
lret
inc
jle
add
rep
leave
or
insl
mov
int3
dec
jmp
xor
mov
gs
add
inc
dec
xor
enter
fldt
or
jmp
adcl
fildll
daa
push
fldcw
insl
test
push
push
push
cmp
xor
rcll
push
sti
rcrb
push
mov
sbb
test
pop
ret
mov
xor
pop
addb
scas
fsts
cwtl
test
mov
mov
mov
add
inc
popa
adc
call
mov
shrb
je
insl
cmp
lea
loop
dec
sub
jbe
push
xchg
mov
movsl
sub
xor
mov
mov
mov
or
add
dec
push
in
mov
sbb
in
into
lods
jnp
sbb
imul
push
jne
loope
mov
xchg
fcomps
cmpsl
lock
xchg
add
add
dec
and
movsl
sub
loopne
cmp
pop
add
push
mov
mov
xchg
data16
push
adc
cs
cmp
sbb
and
jp
pusha
pop
loope
add
add
and
or
sub
mov
jecxz
jbe
xchg
cmpl
int3
mov
mov
xlat
loopne
out
test
or
and
push
jle
lcall
fidivl
and
adc
xlat
mov
add
rcll
push
or
out
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
pop
movsb
pop
mov
sti
dec
lods
or
sarb
dec
cmpl
jl
rorb
stos
jle
add
inc
pop
mov
or
scas
add
push
aam
or
js
jl
xchg
rclb
rcrb
or
inc
imul
out
aad
clc
lods
out
fdivl
mov
je
aad
sub
daa
mov
mov
gs
sbb
jbe
xor
mov
push
lret
maxps
aam
add
mov
and
add
lea
push
push
push
out
shlb
pop
testl
xchg
and
enter
test
mov
jge
cmp
push
mov
add
cmp
pop
fdivl
nop
add
adc
inc
add
sub
push
insb
jnp
mov
sub
cmpsl
shlb
cmp
insl
ret
pop
je
add
and
outsb
adc
dec
ja
leave
imul
pusha
aam
popf
mov
lahf
or
stos
sub
xchg
pop
cwtl
or
push
scas
or
pushf
lea
cs
lea
pop
out
test
push
inc
insb
xchg
je
int3
or
jmp
arpl
xor
cmp
inc
jmp
loopne
incl
inc
dec
mov
loope
subb
aad
push
pushl
fwait
enter
lret
out
jmp
push
pop
shrl
adc
or
dec
mov
loope
ljmp
pop
pop
push
push
push
xchg
stos
inc
add
pop
cmp
out
xchg
mov
jo
pusha
ret
lahf
imul
cmpsb
into
lods
shlb
add
sub
pop
sub
idivl
sub
cmp
pop
push
sbb
inc
xchg
in
out
outsb
sub
add
and
fldcw
repnz
negl
push
mov
bound
xor
in
out
daa
sbb
pop
clc
jne
mov
or
mov
gs
notb
jp
xor
inc
pop
leave
or
inc
mov
mov
cld
out
shll
mov
mov
xor
cmp
rcl
cwtl
outsb
mov
mov
lods
pop
push
sbb
adc
sbb
fs
push
call
cmp
sbb
and
jmp
add
add
pushf
jbe
outsb
jg
inc
pushf
mov
out
mov
mov
les
xchg
aad
or
cmp
jae
mov
jmp
add
pop
icebp
mov
dec
jbe
or
cmp
sub
mov
xlat
xchg
outsl
pushf
cs
add
mov
hlt
mov
mov
fisttpl
push
jbe
adc
adc
xchg
test
xor
inc
lret
mov
ret
and
xor
cmp
lahf
inc
cmp
mov
xor
popa
mov
int
mov
xor
add
xchg
cmp
pop
add
cwtl
test
jb
into
xor
jo
inc
add
xchg
or
or
xchg
jge
out
test
shlb
xor
fildll
enter
push
push
jo
sbb
cmp
sbb
sub
mov
add
or
push
call
dec
mov
or
pushf
sbb
jo
sbb
inc
lcall
xchg
sbb
call
das
sub
scas
mov
imul
lea
push
or
adc
mov
or
inc
push
sub
sub
sahf
add
cmpsb
dec
xor
xchg
push
movsl
mov
or
jae
and
sbb
stos
and
sub
dec
ss
or
es
dec
shrb
xchg
lcall
lcall
add
int3
mov
sub
or
test
dec
inc
rclb
sub
cwtl
and
arpl
and
jne
jg
push
je
dec
repz
movsb
cmp
or
sahf
movsb
add
loopne
mov
daa
push
or
pop
and
loope
jo
jnp
mov
pop
jmp
rcr
sub
adc
xor
jne
or
pusha
cmc
adc
test
pushf
sub
mov
dec
cmp
mov
mov
push
add
popf
lret
enter
push
sub
sub
cwtl
loope
pop
push
mov
fimuls
dec
jnp
push
and
mov
jno
ja
movhps
mov
in
ret
push
dec
imul
push
push
inc
push
mov
pop
in
frstor
sub
push
ret
sub
pop
adc
adc
pop
ja
fcomip
rol
gs
aas
cs
mov
or
mov
or
push
sbb
sub
ret
and
arpl
fdivs
add
int3
add
mov
ja
push
xor
or
mov
call
popa
addl
pop
fsubrl
mov
and
fsubrl
push
shrb
inc
loopne
mov
jmp
dec
inc
mov
sub
xchg
loopne
mov
xchg
repnz
clc
popf
insl
sub
mov
cwtl
stos
add
orb
mov
mov
lea
iret
push
dec
and
stos
xchg
lock
jl
cmp
pop
push
dec
mov
push
stos
rolb
adc
inc
pop
and
movsl
xor
add
out
sub
adc
popf
pop
fld
inc
push
push
mov
xor
cmp
inc
mov
pushf
cmp
sbb
inc
aaa
popa
pusha
es
push
ret
push
push
push
fisubrl
push
add
push
sbb
mov
lock
mov
cmpsl
insl
pop
push
push
pop
push
inc
adc
inc
inc
stc
hlt
iret
arpl
je
sub
loop
fisubrs
xorl
mov
mov
mov
fldt
dec
filds
or
mov
cmp
addr16
je
cmp
jne
mov
sbb
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
mov
sub
inc
adc
je
testl
or
shlb
incl
xchg
push
lea
loope
cmp
je
sub
daa
popa
sti
add
or
xchg
inc
insl
and
push
test
pop
mov
add
mov
clc
mov
cmp
je
gs
out
aam
mov
in
push
adc
adc
add
inc
jmp
loop
cmp
hlt
add
push
cld
out
les
inc
xchg
cmp
add
notb
hlt
cmpb
inc
pop
and
jg
cli
mov
xchg
and
mov
fdivs
add
xchg
sub
add
out
jo
push
xor
rorl
shlb
mov
add
xor
or
cmp
dec
inc
push
pushf
fucomi
arpl
and
jg
test
mov
cmp
mov
mov
aam
data16
je
ss
out
inc
add
jae
movl
insb
out
sub
pop
shl
add
jmp
pushf
aas
cmpsb
hlt
or
insb
sti
and
cmpsb
and
or
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
or
sub
pop
and
sbb
sub
ret
mov
push
add
or
int3
push
pop
aad
add
lret
int3
inc
jg
mov
add
in
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
cwtl
inc
test
push
inc
jbe
lea
cmp
jbe
push
hlt
popf
loopne
pop
pop
arpl
pop
add
fiaddl
test
jne
pop
xchg
add
roll
add
test
cmp
push
adc
xor
adc
movb
inc
sahf
jns
mov
push
sub
or
dec
orl
adc
incl
data16
mov
inc
and
xchg
or
xchg
adc
mov
je
mov
mov
adc
enter
jae
add
sbb
rol
cwtl
scas
dec
inc
push
lcall
jbe
clc
push
rolb
pop
mov
adcb
adc
int3
mov
popa
adc
sbb
out
mov
xchg
mov
push
push
rcrl
leave
xchg
inc
add
dec
mov
mov
js
test
add
sti
dec
inc
mov
mov
clc
dec
push
inc
sahf
mov
imul
cmp
lock
test
xchg
and
pushf
pushf
sahf
mov
xlat
fadds
jg,pn
mov
fistpll
addl
scas
lret
push
xor
jo
sarb
cld
int
xor
cmpsl
adc
jecxz
or
into
pop
sarb
fsts
cmp
mov
and
les
popa
and
push
mov
push
xchg
xchg
inc
loope
mov
jns
pop
lea
cmpsb
jecxz
mov
push
add
jne
xchg
imul
pop
or
jecxz
push
andl
popa
fcmove
jae
nop
shll
mov
mov
imul
cwtl
sub
ret
dec
dec
jnp
add
and
push
pop
push
movl
fisttps
pushl
push
sub
insb
jo
jbe
add
push
insb
cli
jle
push
add
inc
xchg
push
mov
push
xchg
adc
mov
and
adc
add
hlt
outsb
xchg
push
and
add
js
pop
shrl
add
leave
popf
int
add
push
adc
xorl
add
outsb
je
pushl
or
mov
and
call
addb
jo
cmp
cmpsb
cmpl
push
add
lods
mov
das
pop
psubd
jnp
jne
lea
jb
int
addb
or
popf
dec
sub
adc
dec
jae
negl
fbld
jbe
sbb
mov
gs
xor
sti
inc
inc
fwait
cmp
inc
ficoml
loope
xchg
push
nop
push
mov
cmp
out
xorl
mov
push
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
movsb
cmp
jp
cltd
push
xlat
fsts
or
push
decl
cmp
xchg
or
sub
fdivrs
add
scas
insl
push
mov
das
aam
jl
add
pusha
xchg
stc
push
sbb
inc
push
adcb
stc
loop
or
add
sahf
mov
jb
aaa
les
add
push
mov
leave
add
pop
lods
xor
cmpsl
les
mov
js
add
pop
xchg
push
adc
push
and
push
ret
or
sti
pusha
or
js
jb
push
mov
orl
insb
jbe
push
adcl
jbe
je
outsb
mov
les
out
jecxz
hlt
cmp
push
and
sbb
xchg
test
inc
stos
loopne
push
push
or
push
ljmp
and
mov
push
adc
arpl
sti
sub
and
mov
inc
push
push
popf
test
repnz
xchg
addl
dec
xchg
and
mov
jb
xchg
and
mov
lcall
pop
insb
mov
frstor
cmpsb
sbb
or
xchg
or
pusha
pop
xchg
fs
in
mov
xchg
push
fs
cmc
call
adc
movb
imul
dec
or
ja
out
int3
rorb
enter
je
xchg
push
push
leave
cmp
clc
add
and
dec
add
mov
mov
push
or
sbb
jne
xchg
ds
cwtl
cmpl
dec
push
pusha
cmp
jo
jnp
add
lret
shrb
mov
aad
outsb
xor
insl
jnp
push
mov
das
movl
loopne
push
clc
push
fcmove
cmpl
rcr
jp
fmul
jge
andl
aas
sub
inc
sbb
cs
fs
xchg
fcmovu
sbbb
or
xchg
dec
push
or
mov
je
fstps
cmp
pop
xchg
mov
push
add
inc
mov
or
jne
lahf
jge
fstpl
adc
cmp
sbb
sbb
add
jno
sub
pop
arpl
iret
push
addl
dec
cmp
cmp
cs
push
adc
mov
ja
add
ret
cmp
mov
fistpl
dec
cmc
xchg
jne
mov
mov
or
icebp
cmpsl
lods
ds
je
jno
xchg
fsubs
mov
mov
xlat
push
aas
je
cmp
pusha
sub
sbb
aam
scas
and
lea
inc
pop
test
push
pop
call
test
clc
push
test
jbe
in
in
xor
xchg
outsl
idivl
pop
jne
jmp
sbb
sbb
add
sub
mov
mov
sbb
mov
xor
cli
push
add
jmp
jnp
jae
outsb
mov
sbb
xchg
and
in
add
stc
mov
mov
sti
shlb
repz
sbb
sub
imul
adc
int
sub
fdivl
jg
add
jle
sbb
mov
push
inc
test
cltd
xchg
mov
sub
decb
adc
jns
add
cmpl
rolb
pop
xchg
rorb
in
xchg
dec
jae
sbb
pop
push
mov
push
mov
add
inc
decb
mov
and
fwait
lods
or
ret
add
cmp
inc
lahf
les
push
rclb
fcomip
add
cld
std
push
mov
rolb
adc
push
sbb
les
add
mov
mov
xchg
sub
mov
push
jno
sbb
xchg
lret
in
push
push
pop
pop
pop
jb
pop
cs
pusha
pusha
fs
and
or
sbb
or
xchg
jae
sub
xor
mov
add
inc
aad
add
lods
push
fs
js
cld
or
fcomp
mov
push
xlat
dec
push
sub
cmpsb
add
lea
jmp
push
shll
lret
mov
sbb
aad
nop
imul
xchg
push
or
inc
adc
push
cmpsb
xchg
addr16
adc
mov
outsb
bound
cltd
mov
fdivs
insb
or
or
jne
ljmp
les
leave
and
hlt
sub
call
loopne
scas
sbb
ljmp
fistpl
std
add
cli
jp
push
pop
jmp
rcl
js
shr
mov
je
into
std
pop
imul
sti
and
add
or
or
xchg
dec
enter
or
out
inc
cwtl
push
fwait
sbb
fstpt
das
stos
and
fadds
xor
push
mov
mov
rcll
sti
es
sti
sarb
sbb
pop
push
mov
mov
mov
mov
enter
dec
test
pop
xchg
sbb
push
pop
or
ffree
mov
dec
aam
jno
in
and
push
daa
aaa
add
dec
add
dec
add
ss
outsl
add
in
gs
jne
sbb
call
inc
sub
add
adc
adc
lret
je
mov
test
nop
mov
fwait
sbb
and
pop
sbb
pop
mov
mov
mov
add
pop
mov
and
mov
sbb
andb
mov
inc
mov
movsb
sbb
jbe
push
adc
ds
loope
inc
jne
ss
adc
xor
xor
pop
lock
call
mov
shl
pop
lock
cmp
fadds
or
mov
sub
sbb
jo
mov
adc
sbb
sbb
mov
je
or
daa
push
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
add
incl
mov
je
cmp
cmpsb
pop
adcl
adc
hlt
ret
sub
iret
xor
adc
mov
xor
hlt
sub
ds
or
mov
jne
hlt
cmpsl
inc
pushl
cmp
je
divb
push
sbb
sbb
jle
or
add
dec
in
data16
popf
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
xor
add
mov
hlt
cmp
ljmp
inc
in
pop
enter
cltd
mov
jb
les
leave
and
or
mov
jecxz
mov
jmp
popa
das
std
icebp
clc
outsl
mov
and
cmp
xor
add
xorb
push
fdiv
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
mov
loopne
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
ss
cmp
adc
inc
ret
mov
out
adc
mov
adc
scas
xchg
push
add
cld
jns
add
push
daa
jg
lahf
add
xlat
mov
call
movsl
lret
test
call
adc
mov
sub
sbb
inc
cs
lock
in
cmp
es
jb
fsub
push
adc
js
lods
popf
pop
sbb
push
cmp
clc
pop
push
test
pusha
rorb
je
adc
repnz
or
mov
fidivrl
int3
cli
sahf
dec
ret
clc
jmp
sub
pop
mov
lock
loope
push
das
in
sbb
jo
nop
mov
add
dec
push
xor
movl
in
adc
imul
jg
xor
xchg
push
jmp
mov
mov
clc
hlt
insb
pop
in
sbb
inc
pop
push
xchg
dec
push
orb
mov
inc
xor
xor
or
mov
add
adcl
call
push
sbb
addb
jg
jbe
push
aas
in
paddb
shr
mov
add
in
mov
dec
in
rcl
test
cmpsl
repnz
shlb
hlt
outsl
aam
pop
sahf
lret
fsub
fmull
ss
sub
push
push
int3
test
push
lods
out
in
adc
imul
lock
aam
ds
std
mov
dec
out
mov
icebp
sahf
mov
nop
rcrl
push
push
push
mov
xlat
mov
mov
mov
test
and
mov
and
mov
test
das
dec
sbb
cmp
jl
jmp
pop
add
mov
inc
mov
cmp
and
sbb
add
mov
movsb
push
and
lds
mov
mov
notl
addr16
mov
movl
push
or
stos
xchg
into
cmp
pusha
sbb
dec
jb
sbb
pop
add
xor
pop
sbb
daa
icebp
sbb
and
or
rep
int
lret
sbb
int3
mov
add
lock
push
inc
inc
push
loop
inc
push
loopne
inc
push
xor
push
sarb
mov
inc
ds
lret
rcr
test
push
push
xor
ret
ja
mov
jmp
push
inc
add
outsb
dec
into
adc
push
or
pop
pop
dec
jmp
je
int3
or
mov
or
jl
and
sbb
mov
and
push
sbb
and
sub
out
add
test
add
data16
sbb
lea
lea
push
rorb
cld
inc
inc
dec
add
mov
inc
push
nop
lcallw
cld
inc
push
inc
add
sbb
jnp
pop
std
xlat
mov
or
jae
mov
or
popa
pop
leave
sub
std
mov
clc
pop
mov
cmp
js
test
fstps
or
fs
adc
add
fdivs
cmp
mov
mov
out
inc
or
jmp
push
add
mov
push
mov
sub
test
repnz
rclb
lsl
test
jge
cwtl
jle
xchg
mov
daa
or
nop
push
add
push
cmp
cmp
out
iret
jo
pusha
mov
aad
fisttps
cmp
adc
iret
add
push
mov
pop
ja
cmpsl
inc
out
xor
movb
cltd
jo
push
xchg
jno
jo
in
jge
je
insb
inc
cmp
movsb
ljmp
push
dec
and
les
int
add
shlb
sti
shll
pop
iret
mov
mov
lds
stos
dec
xor
fiaddl
xlat
jp
dec
fsubp
and
aam
bound
ret
cmp
xorb
dec
out
adc
sub
or
or
jecxz
pop
sub
or
push
inc
mov
xchg
loopne
mov
in
xor
scas
sub
ja
test
lds
out
sbb
dec
ret
or
rolb
dec
mov
xchg
fmuls
push
cmpsl
mov
fsubrs
shrb
or
loop
nop
add
push
or
mov
jle
push
xchg
addr16
xchg
xlat
loopne
add
hlt
push
jo
push
repnz
fdivl
mov
outsl
adcb
dec
xchg
or
adc
sub
iret
pop
stos
xor
lcall
test
add
popa
adc
jl
dec
or
dec
sahf
dec
testb
pop
int3
cli
incl
adc
jbe
sahf
adc
mov
inc
lcall
adc
or
adc
inc
pop
inc
sbb
push
sub
mov
pop
movsb
iret
add
pop
inc
sub
mov
cld
rcrl
inc
adc
ret
add
jno
iret
mov
dec
dec
xor
push
adc
enter
imul
push
xor
cmp
das
mov
and
pop
test
lods
ds
lock
lahf
inc
sbb
mov
add
ljmp
arpl
add
cmp
inc
xor
mov
lcall
lock
movsl
cmp
push
push
mov
cmp
cmpsb
movsb
fmull
mov
gs
inc
insb
mov
push
stc
sbb
xchg
stos
sub
ret
cmp
sbb
arpl
loope
mov
ret
mov
cmp
leave
adc
fiaddl
sbb
and
and
outsl
or
popf
ss
fdivrs
inc
data16
or
mov
mov
stos
or
lea
dec
movsb
xorb
sub
sub
shrl
jge
pop
shlb
jge
add
hlt
xchg
push
adc
jne
pop
leave
mov
inc
fstpl
jo
xchg
and
aas
pop
cmp
push
lds
and
test
adc
dec
jnp
push
mov
cmp
cmc
jecxz
dec
or
loop
cmpsb
dec
and
inc
sbb
popf
adc
fldenv
add
subb
rorl
fs
loope
js
xchg
rcr
aam
adc
and
add
pop
or
and
push
inc
mov
mov
cmp
fimull
or
adc
push
and
add
jns
sub
sbb
test
ss
movsl
or
or
dec
mov
incl
loope
fwait
mov
rclb
xchg
repnz
jnp
inc
cmp
rorb
push
inc
lcall
or
and
sahf
push
mov
cmp
xchg
nop
jbe
sbb
imulb
test
jge
push
sub
int
ja
dec
aam
mov
and
push
pusha
adc
ljmp
sahf
xchg
je
jge
inc
in
push
push
rclb
mov
and
push
mov
rorb
ffree
out
insb
pushf
mov
mov
inc
aaa
sbb
mov
subl
adc
push
lahf
add
push
jge
adc
sbb
sbb
testl
cmp
cmp
aaa
xor
lea
or
dec
arpl
dec
rcl
or
iret
cwtl
mov
loopne
jo
add
int3
cmpl
or
adc
and
xchg
test
adc
or
shll
adc
jne
sbb
and
mov
jo
mov
dec
mov
and
call
inc
mov
xor
mov
or
mov
inc
lods
add
dec
lods
sbb
dec
inc
lock
xchg
dec
push
int
push
push
adc
cmp
xor
in
adc
mov
push
roll
cltd
jmp
sbb
test
jb
xor
or
and
pop
push
in
rclb
lcall
xchg
insb
or
pop
jmp
adc
fdivs
stc
and
shlb
adc
jae
daa
add
outsl
push
divl
xchg
mov
cmp
jo
mov
add
sub
clc
sahf
adc
cltd
inc
xor
cmp
adc
jbe
inc
jbe
adc
lahf
mov
dec
cli
jmp
mov
clc
push
testl
add
push
or
loopne
xchg
mov
enter
push
add
pop
push
xor
sub
idivl
pop
jbe,pn
fdivl
ret
xchg
flds
xor
loopne
lock
pop
je
mov
jo
and
mov
and
jbe
out
cmp
orl
mov
mov
adc
cmp
push
fsubr
adc
cld
dec
je
mov
adc
xchg
or
xchg
lods
push
xor
js
andb
cs
mov
cs
dec
cmp
inc
and
add
daa
addl
insb
mov
add
add
jmp
pusha
imul
mov
dec
mov
lock
cmp
and
rorl
test
call
cmp
jmp
mov
mov
dec
fdivl
mov
dec
add
inc
sahf
test
push
imul
pop
sub
adc
bound
pop
push
jo
jno
mov
lret
cltd
cltd
push
or
push
xchg
and
repz
imul
clc
inc
fistpl
mulb
pushf
mov
pusha
loopne
stos
jle
adc
pushf
mov
inc
dec
icebp
mov
bound
ljmp
test
lock
cmpsb
popa
cwtl
icebp
and
cld
pop
mov
test
xchg
mov
and
inc
and
jne
mov
jmp
cmp
sbb
push
add
and
mov
lahf
or
and
jmp
sub
js
mov
cld
in
inc
pop
or
sub
cmp
add
rcrb
jbe
sub
add
mov
icebp
das
movsb
push
pop
mov
add
or
dec
jnp
inc
pop
std
cmpl
sarb
stos
cmp
jb
jnp
inc
lods
dec
dec
dec
out
or
fwait
jae
push
rorl
das
push
xchg
cwtl
mov
dec
mov
or
dec
inc
jp
cmp
pop
push
sub
lret
sbb
xchg
fdivp
subb
dec
xlat
ds
jne
dec
add
hlt
sub
add
out
xor
cwtl
dec
add
sbb
add
mov
ret
push
mov
xchg
test
adc
jo
inc
or
rolb
or
xor
out
and
push
movhps
outsl
or
jne
ret
insl
cmp
je
push
sub
push
adc
xchg
pop
adc
mov
imul
push
imul
movsl
adc
and
xor
outsl
leave
adc
xor
fcomps
movsl
xchg
roll
in
fildl
enter
loope
ja
imulb
jp
pop
add
mov
nop
sar
lods
cld
ljmp
add
shll
sub
mov
testb
fwait
cli
fs
jne
das
cld
imull
xchg
inc
xchg
into
clc
mov
mov
popl
mov
push
ficoms
dec
in
pusha
xchg
add
js
rclb
jge
sbb
or
sahf
xor
pusha
push
xlat
arpl
out
dec
inc
add
mov
xor
imul
int
ud1
adc
in
pop
enter
adc
mov
adc
gs
dec
adc
adc
adc
adc
mov
and
mov
jmp
push
add
inc
pop
out
cmp
or
cmp
lods
gs
cmp
or
test
lret
rcrb
loop
iret
jmp
pop
and
and
xchg
jo
add
rorl
lret
adc
mov
cmpb
mov
mov
in
sbb
xor
or
jl
inc
and
das
jmp
cmp
pusha
sti
std
add
ja
bound
cwtl
iret
adc
test
sub
roll
mov
pusha
es
pop
lock
mov
fdivs
mov
xchg
movsb
stc
mov
sahf
xchg
pop
push
test
cmp
dec
adc
in
jmp
fimull
movsl
out
das
lret
leave
mov
dec
mov
cli
push
add
xor
add
dec
jo
fimuls
mov
xor
xor
mov
jne
ja
jle
cmp
test
xchg
mov
inc
pushl
jb
dec
rclb
incb
lret
pushf
out
add
inc
aas
cmpsl
lea
aas
iret
dec
mov
xor
and
test
je
and
pop
jl
xchg
test
pop
aad
mov
add
xchg
mov
mov
push
rep
aam
mov
and
mov
cmp
scas
push
pushf
cs
dec
imul
loop
test
jmp
xor
dec
cmp
orb
mov
adc
push
test
sbb
sahf
cmpb
dec
sbb
add
rolb
and
xlat
pop
cmp
sbb
jne
dec
stc
mov
inc
test
call
inc
mov
mov
push
hlt
lahf
fldenv
or
mov
jmp
mov
cld
push
or
out
jge
xor
cmp
into
or
popf
cmc
add
pop
add
ja
and
xchg
xor
jp
out
or
sbb
xchg
js
dec
push
je
push
cmp
push
inc
cmp
jae
lds
loope
repnz
add
push
out
das
cs
idivb
sub
icebp
xchg
adc
into
notb
out
pop
ds
jmp
pop
insl
cmp
dec
and
sahf
lock
addl
add
adc
call
adc
sti
push
pop
add
loop
xor
ret
repz
mov
fwait
push
mov
mov
add
mov
pop
adc
dec
mov
int3
out
cli
and
ret
es
loope
test
push
and
jne
out
xchg
and
fs
iret
adc
push
pop
pop
movsl
cs
sub
aad
mov
lea
pop
cmp
push
shlb
add
les
pop
push
jno
mov
sbb
add
xchg
popf
xor
push
gs
adc
jne
test
jne
push
mov
repz
inc
dec
sub
sbb
pop
add
or
jbe
add
or
lahf
repnz
sub
popa
lea
lock
sub
pop
addb
jno,pn
adc
add
mov
ja
push
jg
jb
add
jb
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
imul
popf
add
scas
or
and
mov
rorl
xor
cmp
jmp
or
lock
stc
enter
sbb
jl
cwtl
and
add
fcmovnbe
xchg
bound
stc
dec
xchg
mov
sub
sub
shll
add
mov
scas
push
in
push
adc
mov
push
adc
push
std
xor
push
pushf
std
add
inc
push
pop
daa
negb
xor
and
mov
imul
push
mov
xchg
mov
adc
mov
push
mov
push
cmc
test
mov
and
pop
lock
mov
mov
mov
and
inc
fimull
push
dec
in
mov
mov
imul
mov
call
repnz
pop
dec
mov
cli
ret
push
add
mov
adc
push
lods
add
sub
int3
andl
lea
fdivs
movsl
inc
mov
outsb
mov
adc
cmp
adc
out
daa
push
and
and
dec
or
mov
mov
pop
outsl
cmpsb
jecxz
daa
pushf
mov
sub
xchg
dec
dec
or
lea
add
adc
mov
cmpsb
dec
into
mov
jns
sub
fs
dec
inc
into
insb
rorl
cmp
push
imul
lock
add
adc
push
xlat
test
test
pop
lcall
inc
xor
and
ret
jne
or
add
cmpsb
stos
cmpl
dec
adc
lock
loope
inc
cmp
add
xor
xor
dec
scas
pop
sub
mov
lods
sbb
dec
dec
fildl
rolb
pop
add
ret
dec
push
jecxz
sbb
inc
add
add
jae
xor
add
cld
and
add
rcll
lahf
pop
or
popf
fs
jmp
add
test
pop
inc
push
jb
aam
cmp
adc
sbb
loop
adc
int
adc
or
xchg
sub
or
fidivrs
dec
je
dec
out
or
outsl
cmp
rep
lea
jecxz
and
loopne
push
dec
pop
or
cltd
imul
mov
in
decl
mov
icebp
fadd
jae
lea
jmp
cmpl
push
ljmp
jbe
mov
imull
push
lock
inc
push
lcall
loopne
and
mov
rcrb
pushf
cltd
dec
sbb
pop
arpl
rorb
mov
pop
dec
in
andl
dec
imul
jne
mov
icebp
into
iret
or
pop
or
or
pop
popf
jp
add
imul
push
push
sub
push
ja
scas
adc
xlat
mov
pusha
add
cmp
test
jo
xchg
roll
lock
sub
jb
mov
mov
adc
xor
mov
rclb
pusha
adc
loopne
mov
js
loop
movhps
sub
add
ja
push
cmpsb
xchg
push
nop
movb
je
bound
sahf
arpl
xchg
add
mov
push
subl
in
daa
aam
adc
sub
and
mov
mov
sub
cmp
ffreep
in
push
sti
push
push
push
or
js
std
jecxz
and
push
je
mov
imul
jg
sub
imul
sbb
jo
push
andb
mov
and
jbe
stc
xchg
nop
out
xchg
in
inc
outsb
or
mov
xor
hlt
push
test
or
rorl
pop
dec
jo
push
test
roll
call
sbb
cld
push
lea
fs
pop
inc
flds
imul
daa
push
inc
and
lea
and
and
imul
pop
or
xchg
mov
add
nop
or
nop
nop
add
adcb
je
push
add
mov
addr16
popf
movsb
xor
add
lds
in
pop
pushl
push
pop
stos
pop
lea
iret
adc
adc
in
sub
jmp
dec
paddusw
invd
or
orb
das
mov
ret
mov
push
pop
mov
xor
lahf
sbb
jo
fcomps
out
push
cmp
scas
roll
or
pop
jecxz
jnp
cmp
push
loop
mov
push
cmp
data16
jbe
pop
dec
push
or
cmp
int
fisttpll
cld
je
test
dec
aaa
jnp
pop
int3
clc
jne
mov
push
test
cmp
mov
add
aaa
sub
clc
pusha
push
adc
stos
es
add
es
cld
rorl
xchg
mov
hlt
sbb
jb
or
pop
mov
pop
pop
pusha
xor
add
add
call
sub
rolb
inc
sbb
mov
clc
or
hlt
jne
push
js
lock
fistl
cld
loopne
fnstenv
loopne
push
push
mov
xor
loopne
push
data16
repz
add
mov
or
sub
in
out
or
ja
cld
insl
or
push
cmp
sub
cmovne
sub
lahf
das
xchg
and
pop
mov
mov
pop
cmp
lret
in
pusha
push
sub
mov
sarb
jnp
hlt
neg
sbb
and
bnd
idivb
pusha
movzwl
push
adc
xchg
les
outsl
popf
push
stos
scas
mov
fidivl
adc
popf
insb
xor
add
jo
clc
adc
daa
mov
fistpl
add
popf
aad
loope
ror
adc
clc
idiv
lea
rolb
jne
cmp
jbe
or
jne
push
xchg
mov
std
sbb
jnp
pop
inc
das
es
push
add
cmp
loopne
sub
scas
mov
addb
jp
jmp
inc
fadds
jl
add
and
pusha
shl
popa
out
jns
pop
setb
jbe
sbb
das
lea
add
in
enter
adc
mov
out
pop
inc
stos
xor
sbb
ljmp
jl
cmp
jo
adc
push
xorb
or
test
sbb
cmpb
rcr
cmc
das
jne
movsb
les
into
sbb
xchg
xchg
pop
dec
outsl
js
pop
add
mov
add
out
inc
jecxz
imul
or
xchg
sub
fdivs
sub
clc
xchg
test
aad
and
sub
ffree
xchg
or
dec
inc
push
dec
xor
add
adc
add
inc
adc
inc
sbb
imul
and
sub
jle
add
data16
hlt
push
or
test
movq
mov
lret
xor
add
adc
fistpl
or
pop
sbb
lock
add
pop
dec
add
cmp
popf
inc
add
shll
push
and
adc
xor
dec
in
scas
xchg
mov
ss
or
sbb
pop
outsl
nop
lock
jle
inc
cmovs
popf
or
movsl
clc
roll
xor
insb
or
aam
or
cmp
daa
insb
aam
push
js
ljmp
andb
sahf
push
cmpsl
es
test
pop
mov
inc
jg
xor
or
cmpl
loopne
jmp
lret
push
mov
fs
mov
xor
or
xor
ffreep
fdivr
pop
test
push
repz
and
add
adc
cld
shlb
aam
popf
enter
adc
cmp
xor
mov
or
adc
xchg
fcmovbe
jo
jne
and
cmp
inc
cmp
jae
cmp
and
mov
addl
adc
cmp
pusha
jae
addl
add
xor
xchg
test
cmp
mov
cltd
mov
cmp
or
insb
pop
sahf
jb
push
jae
in
mov
push
inc
mov
push
lcall
hlt
xchg
or
int3
add
xor
mov
ss
cmp
ss
mov
out
cs
or
sbb
jno
xlat
xor
dec
xchg
mov
add
outsb
push
pop
jg
outsb
mov
std
push
push
popa
mov
test
push
sarb
pop
dec
push
add
xor
mov
popf
pop
mov
loopne
ret
and
xor
sbb
pop
adc
jmp
addr16
mov
cltd
cmp
nop
addr16
je
jmp
push
xchg
loopne
scas
mov
fstps
out
pop
loopne
adc
cmp
cmp
sub
je
dec
add
in
dec
loopne
xchg
movsl
fsubl
cmp
mov
sbb
jge
mov
jecxz
dec
call
icebp
pop
inc
packsswb
test
mov
fdivl
or
ja
shrl
dec
ret
and
xchg
repnz
xlat
lods
push
fcmovbe
add
loopne
push
je
mov
cmpl
call
adc
cmp
xchg
push
sub
and
adc
adc
xchg
inc
loop
adc
xchg
and
jo
pop
push
push
leave
rcll
push
and
mov
mov
xchg
insl
je
mov
mov
push
inc
mov
dec
sub
addr16
xor
in
mov
jno
mov
add
push
xlat
jb
dec
aam
lcall
add
and
cwtl
or
cmp
push
or
xor
mov
cs
xchg
cmc
push
movl
fistpll
pop
and
mov
mov
push
jge
or
in
jmp
lea
mov
pushf
or
fdivrs
cmp
inc
jle
push
push
icebp
scas
loopne
add
in
sub
or
ret
mov
and
push
push
pop
roll
fisttps
aad
cmp
rclb
mov
push
or
xchg
rcrl
sub
sti
jb
mov
int3
mov
sub
or
adc
push
jb
pop
cltd
cli
fcomps
or
pop
jo
into
mov
test
sbb
jno
mov
pushf
xor
je
sbb
push
xor
sub
cmp
cltd
and
or
je
dec
adc
mov
jae
lea
or
ja
cmpb
jne
fidivl
cld
out
or
lea
mov
push
incl
jb
jae
stc
push
xor
iret
mov
mov
lea
out
xchg
or
sbb
push
cmpsb
out
push
dec
or
mov
iret
lea
jp
sbb
push
jae
aam
mov
stc
jae
leave
jmp
push
inc
sub
xchg
mov
int3
dec
nop
fnstcw
jbe
inc
push
xchg
push
mov
push
adc
add
orl
fisttps
mov
sbb
add
push
pop
cmpsb
pop
push
sbb
push
mov
adc
push
add
mov
je
mov
mov
shlb
mov
jae
dec
adc
push
adc
mov
adc
sub
inc
mov
push
das
dec
and
filds
sub
adc
inc
xor
lock
push
sysret
loope
rdmsr
push
lea
cmp
jle
mov
aaa
lcall
inc
cli
push
ja
hlt
outsb
cmp
adc
fisttps
imul
nop
and
or
jo
roll
fsub
add
outsb
inc
inc
add
xor
push
insb
xor
gs
dec
fdivrl
dec
pop
lahf
imul
inc
add
jl
imul
aad
push
je
lea
dec
or
mov
mov
cmpl
in
add
adc
pop
movsl
pop
ret
inc
das
aas
xor
cltd
adcb
and
data16
sbb
pusha
ljmp
addl
subb
jns
adc
nop
sub
sub
jmp
push
inc
mov
dec
add
pop
jmp
les
orl
or
idiv
incl
cmpb
xchg
int3
es
jmp
inc
sbb
xor
xchg
stc
nop
inc
and
pushl
sbb
inc
jl
lahf
cmp
mov
mov
mov
dec
es
daa
bnd
mov
mov
mov
data16
js
dec
ret
push
dec
mov
lea
push
sub
sbb
inc
push
loop
pusha
mov
xchg
jmp
ja
jbe
pop
ret
inc
xor
jo
push
ret
or
xchg
loop
cmc
loopne
sahf
loopne
adc
insb
les
adc
ja
fdivl
cmpb
xor
fnstenv
jmp
push
repnz
out
lcall
pop
mov
cmp
test
jns
test
sbbl
lcall
fdivs
sub
sub
jmp
push
inc
jp
movsb
sti
sub
in
mov
sbb
sub
add
test
outsl
or
cmc
dec
in
adc
lea
dec
shrb
jae
cmpsb
adc
push
push
xchg
pop
ja
aam
scas
popa
and
ret
mov
xchg
lret
or
std
lods
test
clc
repz
cmp
xor
psraw
test
arpl
push
xchg
cwtl
sbb
jno
push
cmp
push
jnp
iret
push
inc
xchg
or
out
jmp
push
inc
add
jbe
notb
inc
cmp
and
popl
or
mov
or
addr16
dec
cmp
loope
jae
xchg
cmp
pop
fdivrl
add
add
mov
mov
cmp
jb
push
inc
mov
sbb
ds
inc
or
js
pop
pop
loope
cmp
mov
cmp
sub
shr
sahf
push
inc
or
add
nop
pop
sbb
jbe
ret
nop
pop
cmpl
mov
xor
pushf
mov
push
aad
or
push
lahf
call
sahf
jmp
repnz
std
jno
dec
adc
or
pushw
mov
adc
mov
xchg
jnp
gs
movsl
arpl
addr16
cmpsb
imul
aam
xor
imul
push
sahf
xlat
xchg
scas
lock
or
minps
enter
movsb
push
xchg
inc
or
adcb
adcl
pop
adc
inc
dec
adc
and
add
push
mov
xor
or
xchg
jmp
insb
add
sbb
jmp
out
xor
jge
sub
sub
and
add
or
mov
faddl
jl
dec
pop
imul
push
mov
arpl
add
or
mov
xchg
shlb
cmp
or
pop
ret
lods
mov
cmpl
iret
sbb
pushl
sbb
or
push
mov
jo
adcl
ret
daa
and
mov
push
loopne
sub
jl
inc
imul
pop
adc
or
xchg
jg
jg
lea
push
add
adc
xor
sarb
out
cmp
jl
aas
fisubrl
je
dec
pushl
jbe
adc
push
mov
iret
subb
jne
inc
test
push
imul
cwtl
mov
and
add
add
or
mov
daa
aam
dec
dec
sub
cmp
add
lret
enter
xor
dec
mov
xchg
loopne
sbb
std
add
popa
sbb
add
pop
pop
sbb
lret
sub
add
sbb
sbb
xor
sbb
xor
roll
mov
stc
or
or
inc
xorb
sub
push
dec
push
int
pop
sub
test
xchg
push
push
jmp
xchg
mov
push
push
mov
int3
out
jnp
pop
push
xchg
adc
and
inc
pop
mov
xchg
add
or
lock
jne
or
pusha
jne
cltd
lea
and
cltd
je
xchg
andb
add
gs
mov
cli
inc
cltd
and
and
rorl
pop
insl
inc
push
sti
dec
adc
inc
mov
and
sub
push
mov
sub
scas
xor
jecxz
fimuls
cmpl
sbb
xchg
je
mov
ret
push
xchg
andb
or
cmp
inc
call
out
add
fwait
push
pop
push
cmp
adc
mov
cli
sarl
adc
leave
push
aam
xchg
test
xchg
loop
dec
adc
xor
filds
push
or
int
adc
mov
pop
sbb
js
push
push
xchg
aad
pop
or
test
push
orl
lret
jmp
jo
cmp
aaa
pushf
and
and
pop
fwait
ret
mov
mulb
adc
push
push
out
push
mov
sbb
jne
cmp
nop
adc
pop
fmulp
sbb
clc
scas
test
mov
add
add
or
or
or
push
jo
pusha
sub
xchg
pop
push
pop
js
test
push
mov
xchg
dec
scas
imul
or
call
ljmp
popa
cmp
add
adc
push
test
in
adc
in
gs
sub
push
test
sub
rorb
mov
cs
sbb
add
jmp
nop
and
push
shrb
mov
lock
jno
je
jo
and
fcmovnb
jb
cmp
add
cli
push
push
pusha
or
add
add
mov
mov
inc
or
in
or
pusha
movsl
xchg
rorb
ljmp
int
shlb
sub
gs
lods
les
xor
push
mov
add
add
pop
push
push
stos
xor
loopne
lea
pop
sbb
add
cmpsb
mov
negl
or
dec
mov
inc
add
or
push
xor
pop
sub
push
mov
in
in
pop
or
movsl
aaa
jp
jnp
stos
or
mov
and
cwtl
bound
inc
jp
daa
loopne
jmp
jge
mov
ret
push
stc
add
je
mov
scas
sbb
repz
ret
push
cld
sbb
cmp
push
adc
cld
into
fwait
sbbl
lock
orb
dec
clc
loopne
mov
sbb
outsb
pusha
inc
xchg
pop
and
cmp
add
cmp
clc
shlb
loopne
jne
mov
sub
pop
sbb
and
clc
popa
enter
push
lret
stos
mov
sbb
shrb
or
push
and
add
sbb
das
adc
add
pop
cmp
mov
idivl
inc
adc
mov
out
jecxz
nop
mov
inc
subl
pop
popf
jns
into
sbb
gs
xchg
outsl
push
mov
sbb
fisubrs
mov
and
daa
cmp
jg
push
mov
dec
inc
and
pop
sbbl
or
push
je
dec
add
inc
or
mov
dec
sub
jo
into
mov
shl
xchg
cmc
inc
cmp
jle
cmp
out
bound
int
nop
stos
dec
insl
dec
sub
stos
push
pop
push
cmpsl
push
dec
push
cmp
lock
xor
pop
out
inc
cs
push
jnp
mov
adc
dec
pop
enter
shrb
ss
mov
push
mov
add
in
loope
rcrl
and
orl
xor
div
xor
xor
das
imul
add
pushf
das
outsl
push
xor
add
dec
inc
lods
adc
pop
mov
jl
mov
leave
cs
inc
cmp
es
and
aas
lea
or
or
ss
aaa
stos
sub
dec
dec
jns
adc
jmp
iret
push
shrb
mov
adc
adc
shlb
sub
inc
add
jmp
mov
add
add
inc
je
mov
fmul
push
in
xor
fmuls
add
cmp
inc
inc
dec
ret
andb
adc
mov
cli
setb
rcll
rolb
int
in
xlat
sub
sahf
adc
push
js
je
les
aam
push
adc
imul
mov
or
ret
dec
dec
sub
dec
and
jb
sub
add
adc
and
outsb
gs
mov
and
enter
mov
mov
enter
jne
loopne
pop
jno
into
inc
push
xor
ret
lcall
pop
mov
pushl
sub
js
ljmp
or
push
dec
jo
loope
into
shll
dec
or
add
jno
xorl
in
mov
je
mov
mov
cmc
movsb
pop
roll
jb
andl
aaa
dec
xchg
mov
xchg
inc
adc
dec
sbb
add
sbb
dec
dec
sbb
pop
sub
icebp
shl
pop
pushf
push
fsub
xlat
adc
mov
popf
sti
add
test
movb
add
pop
rcll
mov
loope
fisubs
hlt
or
mov
rcrb
sbb
divb
shlb
cmp
es
jno
add
sti
movsl
stc
or
or
pop
mov
jp
jne
or
jne
pop
push
std
dec
push
icebp
pushl
cmp
add
fdivrs
arpl
test
fists
add
test
mov
sbb
add
sbb
add
push
lret
fdivr
ds
sbb
or
xchg
or
test
repnz
cld
notb
popa
js
or
inc
add
cmpsl
scas
dec
add
xchg
rorb
or
push
xchg
push
test
jno
stos
mov
push
into
xor
sarb
sub
mulb
adc
fisttpll
push
push
push
cmp
pop
int3
mov
mov
pop
lea
push
or
and
mov
and
push
sbb
sbb
addr16
mov
dec
scas
lcall
inc
test
testb
fbstp
jb
dec
lock
jg
push
push
pushf
sub
mov
push
lcall
mov
dec
pop
mov
push
ja
or
jmp
test
inc
mov
sbb
mov
mov
push
inc
mov
jns
loop
or
xor
jno
pop
and
push
sar
rclb
xor
andb
andl
mov
xor
dec
cmpsb
cli
rolb
push
jne
dec
cli
out
fldt
insl
jne
sub
sbb
jne
sarb
lcall
push
lcall
or
sbb
dec
out
and
cmp
scas
add
scas
aaa
sbb
add
lods
jg
jmp
mov
pop
ficompl
jo
push
or
cwtl
adc
cmp
je
add
push
or
add
ds
fadds
lods
aam
pop
test
addl
add
add
push
jno
add
xchg
cmp
btl
cmp
enter
push
push
cmp
sbb
cmp
cmp
jl
mov
mov
xor
insb
cmpsl
fidivs
rorb
fidivs
pop
sbb
out
push
sbb
push
cmc
push
jno
ja
ljmp
xchg
dec
and
sbb
push
iret
sbbb
outsl
fsubl
sbb
sub
push
aaa
jecxz
out
stc
mov
mov
jne
hlt
or
lea
loope
mov
insl
insl
mov
mov
xor
mov
push
mov
add
sahf
jge
mov
pop
dec
dec
or
add
and
or
loopne
jge
inc
and
add
sar
cmp
adc
add
outsb
pop
clc
add
add
daa
sbb
outsb
dec
in
mov
or
add
mov
out
sub
js
dec
nop
movsb
push
movb
inc
dec
add
pop
mov
mov
push
add
adc
dec
shlb
xor
imul
cmp
push
pusha
shll
je
rcrb
or
push
and
out
xchg
xchg
pusha
pop
andl
jo
stos
add
mov
dec
int3
shll
xchg
inc
mov
shll
push
movl
inc
gs
scas
test
cmpsl
insb
aad
nop
in
jle
ficompl
xchg
sbb
sbb
or
xchg
jae
in
test
js
or
xorb
or
insb
push
or
push
cmp
adc
idivb
cmp
jmp
movb
sub
xchg
movsb
and
cmpsb
push
inc
call
dec
mov
cs
or
add
sbb
mov
inc
adc
mov
pop
push
pop
cmp
lods
mov
addps
cmpb
push
jecxz
add
adcl
mov
jne
mov
aaa
enter
sbb
pop
das
lea
and
add
push
push
adc
add
pop
js
inc
sbb
loopne
adc
movl
pop
dec
sarb
es
mov
mov
push
std
les
mov
adc
negl
aam
jle
repz
push
sbb
cs
adc
fwait
push
push
dec
and
sub
adc
push
int3
inc
ficompl
test
and
cmpsl
dec
pop
and
fisubl
adc
push
je
dec
ja
xor
dec
xor
das
outsl
mov
sub
addl
jne
sub
pusha
orl
dec
adc
imul
pop
out
inc
push
or
xchg
mov
xchg
popf
loopne
mov
mov
mov
cmc
dec
mov
stc
fnsave
push
add
sar
lds
add
xchg
pushf
mov
xor
jg
sbb
enter
clc
and
sarb
inc
xchg
les
fisttps
nop
mov
add
push
stc
push
jne
mov
sub
sub
js
mov
cmp
mov
data16
cmp
je
xor
imulb
xorl
xor
lahf
jo
jo
lret
hlt
cld
lods
pop
push
inc
loope
je
mov
rorl
cmc
add
or
into
js
mov
testb
fcmovu
test
sbb
add
add
push
sbb
and
fbld
into
dec
dec
pop
and
jle
push
push
inc
cmp
push
mov
push
popf
lock
adc
rclb
jmp
cmp
cmp
addr16
int3
add
mov
sbb
adc
rolb
jb
dec
ds
pop
aas
adc
or
jl
or
xorb
or
je
xor
sti
insl
sbb
pop
adc
int
and
mov
pop
outsl
adc
jp
inc
je
sub
enter
and
lock
xchg
mov
xchg
jp
mov
add
jb
sbb
cmp
aaa
adc
lea
xchg
decb
add
pushl
loopne
and
sbb
jno
orb
jecxz
fstl
lock
js
mov
das
inc
lock
lea
mul
and
or
pushf
add
je
mov
push
or
sub
fs
push
sbb
pusha
pusha
insb
insb
faddl
scas
les
movsb
xor
dec
loopne
cmp
mov
icebp
test
testl
je
cmp
je
popf
sbb
add
or
nop
push
lods
add
hlt
js
mov
cmp
lea
mov
hlt
sti
push
shrb
mov
inc
and
jo
push
jne
loope
and
dec
roll
push
movsb
subl
adc
jnp
lock
xchg
or
lock
lock
mov
mov
add
test
push
push
jo
cmp
push
sbb
xrelease
push
je
shrd
and
fistpll
in
push
mov
lret
add
push
and
ss
cmp
push
lock
sub
xor
cmp
xor
jne
mov
or
cmc
jecxz
and
pop
mov
sbb
push
test
or
or
inc
loop
not
cwtl
push
addl
pop
pop
mov
sbb
adc
cmp
jbe
add
push
adcb
mov
xchg
sbbl
and
in
insb
outsb
jno
adc
push
test
popa
mov
cmpsb
cmp
jnp
mov
ret
inc
add
xor
in
mov
std
aas
jne
outsb
mov
lock
sub
fstpt
stos
or
sub
pushf
cwtl
fidivrs
or
sub
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
out
pop
xor
lcall
rclb
push
or
stos
cmpsb
dec
sbbb
lock
pushf
pop
fcoms
and
cs
xor
imul
add
dec
popa
sbb
add
fs
pop
jb
nop
jno
sub
fimuls
pop
cmp
sbb
sbb
inc
stos
fdivl
in
lock
inc
jp
in
or
sbb
inc
adc
pop
sub
add
jns
pusha
cs
fstl
fdivs
dec
mov
jbe
ljmp
inc
int
ret
jge
int3
mov
jg
sbb
stos
push
test
add
cmp
inc
pop
jbe
and
push
sbb
mov
mov
mov
shlb
mov
pop
out
ss
test
out
jmp
repz
xor
xchg
push
sub
lret
rcrb
xor
cmp
adc
xor
test
and
mov
pop
cmp
adcb
mov
gs
and
movsb
push
inc
sub
pop
loope
lock
or
in
sub
fadds
cmp
adc
faddp
mov
mov
mov
cmpl
pop
jp
arpl
cmp
dec
dec
sbb
push
or
pop
aam
mov
cld
add
sub
xchg
js
push
xor
pop
movsb
popa
pusha
and
stos
lcall
xor
xor
dec
fdivl
arpl
mov
movsl
add
outsb
test
int3
jl
mov
mov
sbb
and
sbb
sbb
push
adc
adc
or
outsl
sbb
cmp
imul
push
lock
out
add
push
or
pop
or
fucomi
sub
or
push
cmpsb
sbb
pusha
aaa
cmp
lds
sbb
sbb
cmp
repnz
lcall
sub
repz
ficoml
and
daa
ja
movsl
jns
push
roll
je
or
outsl
movsl
aas
and
push
cmpsl
pop
inc
adc
insl
lea
cmc
add
pop
cmp
xchg
jo
sub
cmc
push
and
nop
sub
push
fisubs
or
xlat
sub
mov
adc
movsl
and
cmp
inc
jnp
mov
push
or
sub
aas
adc
fsubl
sub
fisubrl
sbb
or
pop
mov
add
rorb
jg
adc
inc
iret
sbb
push
lret
adc
lcall
jo
or
iret
repz
mov
cmp
push
cs
stos
dec
xchg
dec
jnp
out
lods
jo
or
xchg
add
idivl
sbb
mov
push
cs
pop
or
pop
shrl
push
and
adc
leave
loopne
cltd
arpl
adcb
cmp
or
or
push
mov
push
pop
jb
xor
filds
adc
mov
call
ret
mov
sahf
push
mov
rolb
mov
jnp
xor
pop
pop
ret
int3
cmpsl
out
dec
pop
sbb
test
push
xor
push
or
add
push
jbe
shlb
and
xchg
push
mov
mov
sub
sbb
pop
pop
scas
loope
add
test
mov
sbb
xchg
jnp
sbb
insl
sub
add
or
cmp
testl
add
sub
pop
xor
add
loopne
loope
mov
fwait
xchg
cmp
add
cltd
push
loope
dec
adc
add
xor
int
loop
mov
push
iret
push
push
test
xor
xor
lret
shrb
pushf
iret
leave
or
jmp
in
outsb
jnp
cmp
cmpsb
orl
insl
testb
pop
movb
xor
lahf
sub
jl
inc
in
add
lock
ss
dec
arpl
imul
mov
aaa
push
lods
stc
inc
cmc
js
sbb
xchg
gs
mov
sbb
clc
jnp
pop
mov
pop
add
push
subb
pop
fmull
ret
push
inc
push
shrl
cmc
mov
xor
xor
or
pop
pop
mov
inc
negb
rcll
add
mov
jl
andl
adc
mov
adc
ret
mov
jb
fs
popf
adc
bound
and
xchg
les
jecxz
mov
dec
xor
pop
jo
cli
and
jo
sbb
adc
insb
movl
add
ljmp
movsl
jbe
inc
cmpsl
fbstp
out
mov
and
or
jno
jl
adc
pop
adc
and
xchg
in
adc
sarb
push
scas
pop
add
jl
add
test
and
push
jl
add
sbb
je
push
mov
sub
addb
pop
push
sbb
jmp
and
ljmp
mov
push
lds
push
xor
inc
add
fcoms
rorb
arpl
add
push
mov
jp
sub
aam
enter
lock
adc
or
or
jle
inc
cmp
jmp
loopne
cmp
cmp
add
inc
mov
inc
sbb
hlt
call
mov
cmp
cmp
xor
and
xor
push
sti
jmp
rcr
lret
jl
inc
push
add
or
add
ss
sbb
mov
cmp
mov
lock
inc
mov
leave
pop
adc
push
cmpsb
divb
mov
sahf
pusha
int
cmpsl
sub
mov
pusha
repnz
mov
aas
add
xor
xchg
in
add
inc
push
mov
cmp
popa
add
fldcw
movsl
sarl
aaa
lods
in
in
add
add
or
jle
aam
xchg
ret
movsl
push
cmp
fstpl
or
or
imul
imul
adc
mov
adc
or
or
push
fnstcw
es
sub
xchg
repnz
mov
insl
xchg
sub
rcrl
xchg
cmp
nop
inc
mov
ret
out
loop
cltd
inc
neg
adc
enter
pop
daa
in
xchg
jo
out
or
mov
add
jmp
es
xlat
dec
fimull
push
pop
push
pop
or
inc
push
push
inc
inc
cwtl
imul
jge
push
add
sub
push
les
push
in
addl
stos
push
ret
push
lret
inc
out
mov
dec
push
and
loope
roll
arpl
pop
jecxz,pn
cmpsb
imul
aad
push
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
fidivrl
inc
pop
dec
fimull
aas
or
sub
dec
inc
sbb
js
and
imul
push
movsb
mov
add
pop
mov
push
andl
lock
push
pop
outsb
movsl
sbb
call
sub
ss
adc
mov
arpl
clc
push
gs
mov
rclb
sbb
hlt
and
xor
jbe
arpl
cli
cmp
mov
push
push
jb
movsl
or
outsl
push
inc
inc
dec
out
xchg
outsl
push
or
jae
leave
add
xchg
sub
jmp
dec
orb
hlt
lahf
inc
cmc
dec
cmp
dec
shr
or
int3
aas
je
xor
push
xor
add
push
add
jo
mov
mov
adc
sbb
adc
push
dec
iret
push
cmp
adc
sahf
movb
push
decb
push
mov
cmp
icebp
ret
out
jnp
pop
mov
xor
add
and
jns
fists
mov
mov
inc
inc
push
push
xor
add
test
and
cmpsl
or
adc
lret
jbe
outsb
add
cmpl
int3
and
add
sti
adc
push
pop
pop
inc
bound
mov
sbb
sti
sarb
xor
shr
inc
add
call
mov
dec
adc
cmp
out
out
add
push
push
sbb
or
mov
xchg
pop
sbb
adc
sub
inc
jmp
push
dec
add
es
sarb
jmp
push
cmp
jge
sbb
xchg
ss
mov
es
in
add
gs
sbb
sub
push
arpl
pop
adc
add
loop
fsubrs
jns
hlt
sbb
pop
cli
repz
dec
push
mov
sbb
add
jle
icebp
xchg
ret
insb
leave
inc
adc
sti
xor
jno
pusha
and
aam
dec
js
push
sbb
push
xor
andb
pop
jge
rcrb
inc
js
push
scas
adc
loopne
xor
rcrb
jmp
xor
add
push
out
adc
mov
and
xchg
push
insb
insb
dec
mov
orl
inc
lds
lcall
cmp
cmp
mov
inc
xor
adc
inc
lahf
add
je
xchg
mov
cmp
dec
jg
loopne
add
ss
cwtl
adc
or
push
fbstp
push
push
ds
lcall
mov
mov
lea
clc
icebp
jecxz
pop
lock
push
cmp
movb
orl
cmp
add
push
int
sub
pop
push
iret
or
jne
repz
cmp
push
repz
jb
push
popa
jo
sbb
sbb
mov
sub
jne
test
jo
add
dec
sbb
test
das
push
fwait
inc
cmp
push
or
shl
push
jno
out
adc
icebp
and
cwtl
pop
cmp
rcrl
inc
cmpsl
push
mov
jecxz
sub
sti
xor
cmp
inc
mov
inc
adc
stos
push
push
scas
notb
push
mov
push
xor
dec
int3
ljmp
andl
xchg
dec
adc
push
push
adc
and
mov
add
pop
bound
push
lock
fwait
test
mov
xor
mov
inc
dec
mov
pusha
push
dec
pop
inc
and
xor
jbe
xchg
in
adc
in
insb
aad
fs
test
pop
cmp
xchg
xchg
ficoml
fs
lock
loope
xor
call
jl
jp
je
pop
dec
enter
es
clc
call
dec
mov
test
dec
or
sbb
push
imul
pop
or
pusha
mov
std
ret
loop
sub
or
dec
adc
or
sub
push
inc
cmpb
lret
addl
mov
sbb
push
loopne
and
xchg
mov
jl
xor
add
les
jmp
mov
testl
push
fmulp
push
jle
xor
or
sbb
xor
rcr
jne
dec
shll
nop
push
int
cmpsb
add
loope
or
adc
sbb
sub
jno
xchg
add
and
test
and
jo
push
mov
push
movl
pop
pop
push
push
sbb
rcrl
rorb
push
xor
inc
inc
and
cmp
cmp
mov
cmp
adc
mov
imul
add
cmp
sarb
andl
insb
loopne
adc
lret
push
add
inc
xor
adc
orl
mov
xchg
in
addb
sub
cwtl
add
sbb
inc
dec
adc
cmp
sbb
add
lret
mov
xchg
mov
and
aad
loop
pop
rcll
pop
in
andl
aas
mov
sub
rcll
sti
jb
add
test
addr16
add
sarl
in
mov
mov
in
daa
mov
jno
mov
rorb
xor
or
jle
inc
arpl
jl
insb
int
push
or
lea
sbb
dec
rcl
nop
push
mov
lods
or
or
les
add
je
outsb
daa
and
lahf
cmp
inc
shl
stos
adc
lret
sub
mov
mov
inc
js
aaa
pop
les
lods
leave
repnz
xchg
or
jno
and
lods
push
andl
testb
dec
pop
cmp
ja
je
or
or
in
sub
sub
sub
adc
daa
rclb
orb
or
cmp
cmpl
movsb
xchg
jo
sub
js
jne
sahf
imul
sbb
jnp
es
jmp
sbbl
adc
adc
push
xor
inc
mov
sub
inc
add
or
mov
add
cmp
xchg
jo
dec
add
movsb
call
clc
cmp
adc
push
lea
and
adc
inc
daa
mov
loop
shrb
add
and
add
inc
xor
or
pop
pop
cmp
cmp
push
xor
fsubs
jle
jbe
lods
test
mov
push
adcb
leave
aam
or
je
push
das
dec
or
lcall
mov
aam
outsb
cmpb
adc
pop
dec
je
sub
subl
out
or
push
adc
push
inc
outsb
fldt
in
lds
add
lock
mov
adc
fisubl
add
jp
ds
cmc
xor
xchg
stc
insl
inc
test
or
divl
pop
shlb
cmp
push
jnp
push
and
push
dec
and
xor
cmp
and
mov
fs
pusha
aaa
push
shr
inc
inc
lds
lret
loopne
inc
pop
popf
adc
cmp
mov
dec
or
ret
out
xchg
clc
repz
push
sti
clc
inc
inc
adc
xchg
hlt
push
or
push
mov
or
popf
movsb
xchg
bound
lock
pop
cmp
xor
outsb
push
sub
and
mov
les
pop
xchg
jp
push
or
in
ret
fsubrs
lcall
xchg
dec
cmpsl
inc
add
adc
add
les
inc
xchg
xor
dec
mov
cmpl
jl
enter
cmp
leave
inc
push
inc
add
add
add
add
pop
inc
xchg
xchg
or
dec
fsubr
adc
nop
sub
jl
mov
push
addl
cmp
sub
popa
pop
cmp
js
cmp
cmp
mov
cmp
fcoml
fsubrp
push
xor
jno
cmpb
movsb
cmp
fsubs
push
test
add
mov
outsl
test
bound
and
jle
ds
jl
mov
aaa
aas
adcb
and
lret
push
sub
js
aam
xor
adc
jo
loope
inc
mov
push
xchg
dec
adc
loope
push
pop
inc
sbb
mov
add
sbb
orl
insl
shrb
bound
adc
fcmove
repz
adc
push
cmp
pop
sbb
and
sub
hlt
and
xor
inc
xchg
movsb
xor
mov
cwtl
pop
jle
jnp
cs
push
push
sub
dec
loop
pop
mov
push
push
and
mov
jb
data16
push
daa
and
push
xor
in
or
jb
lret
pop
inc
aaa
and
rcr
jge
sub
call
mov
or
or
lahf
mov
data16
pusha
adc
mov
loopne
push
fstpl
push
jb
sub
and
sub
jg
adc
test
outsl
sti
pop
lea
mov
ss
push
lret
mov
adc
add
adc
and
dec
repnz
or
xchg
insb
or
data16
pop
adc
sbb
rcrb
test
pop
xor
push
sub
icebp
add
cmp
imul
cwtl
cmp
outsl
inc
xor
repnz
inc
push
jbe
fnstenv
xor
daa
int3
xor
push
stos
aad
jbe
imul
mov
ret
or
adc
or
adc
cmpsl
popf
jp
loope
pop
in
inc
jp
push
mov
nop
movsb
loop
mov
inc
leave
push
mov
rcl
add
dec
jo
xchg
inc
lock
cwtl
repz
push
js
or
xchg
push
sub
sub
fsts
scas
add
cwtl
repz
inc
outsb
int
lcall
push
aaa
in
mov
xor
xor
inc
bound
inc
sbb
mov
jl
jb
mov
adc
mov
and
add
rorb
xor
mov
or
push
cmp
sbb
sbb
mov
add
das
call
sbb
mov
loope
inc
bound
push
mov
mov
adcl
or
imul
add
and
lret
and
je
add
out
and
lock
jle
enter
scas
or
sub
js
cmp
xor
mov
inc
jne
add
add
cmp
xchg
xchg
sbbl
out
inc
jbe
lahf
add
sar
enter
push
push
pop
mov
adc
cmp
or
push
mov
push
cli
xor
xor
jge
dec
inc
movsb
scas
or
mov
mov
and
jg
lahf
test
cmp
mov
add
enter
pop
lock
jne
xor
adc
les
in
insl
fists
pop
adc
jmp
push
xor
test
jne
lea
test
mov
sarl
sbb
and
mov
jno
add
cmp
cwtl
dec
shrl
sti
mov
sti
fimuls
outsl
sarb
sbb
xchg
push
sbb
movsl
rolb
pushf
std
test
ret
shlb
adc
xlat
dec
dec
pop
iret
inc
xor
lea
and
pusha
jne
sub
dec
cmp
push
cltd
pusha
xor
jb
push
stos
add
in
jnp
imul
in
sub
movsb
xchg
inc
sbb
add
ret
adc
pusha
popa
and
testb
jno
sub
adc
add
into
jle
cld
dec
sbb
cmpsl
add
mov
in
loope
pusha
adc
jbe
mov
shl
add
lcall
sub
lods
and
sbb
mov
dec
loope
xchg
fsub
mov
aam
xchg
jnp
xchg
push
sub
add
xor
fs
mov
outsl
cmc
and
push
ret
xchg
out
call
or
cmp
push
sbb
xchg
mov
lock
or
clts
xor
and
xor
test
out
pop
mov
int
in
jne
leave
outsb
addr16
cmp
adc
mov
repz
lock
arpl
test
jecxz
dec
cmpsl
arpl
jmp
dec
or
adc
jg
cmp
adc
jge
in
push
xchg
add
test
test
or
push
dec
or
add
and
repnz
or
push
shlb
loopne
jmp
je
sbb
je
cmp
je
ret
add
adc
push
adc
scas
mov
dec
mov
pop
push
mov
lar
dec
add
add
and
cmc
mov
and
jmp
repnz
pop
je
add
inc
cmp
add
mov
mov
mov
inc
sti
fadds
cmc
sbb
fisubs
cld
lods
inc
cmpsl
xchg
sbbl
inc
arpl
lods
adc
and
push
mov
add
add
mov
sbb
add
and
xor
inc
and
sbb
push
cmpb
and
mov
inc
push
add
sub
and
xor
dec
cmp
sub
inc
adc
orl
daa
pop
jg
adc
push
cld
dec
or
shrb
add
or
shl
jb
in
adc
stos
cltd
push
and
and
cmp
outsl
addl
sbb
adc
or
testl
test
ss
scas
sbb
js
inc
ror
pop
push
data16
add
jmp
xchg
nop
adc
in
jne
xchg
xchg
jge
vmwrite
scas
xor
cld
jp
xchg
push
add
push
push
adc
and
sub
jae
cwtl
sbb
sbb
xor
or
enter
jp
or
les
addr16
sbb
inc
cmpsl
jp
fs
jne
dec
rcrl
ret
xlat
gs
inc
adc
jnp
cwtl
std
adc
insl
push
arpl
pop
orb
push
insl
push
int3
fwait
les
enter
sub
lea
imul
shrl
push
xor
cmpsl
stc
fisubs
push
in
pop
outsl
pop
les
jno
xchg
lret
test
or
rorb
dec
sub
jne
push
fucomp
inc
inc
mov
add
pop
adc
pop
mov
js
or
sbb
into
mov
adc
and
mov
push
jno
pop
push
sub
cs
out
push
loope
daa
mov
jbe
daa
and
movsl
add
aas
mov
push
sbb
push
or
jb
sbb
sbb
orb
in
xchg
or
push
mov
movsb
push
loope
outsb
jmp
sbb
push
cld
add
adc
push
sbb
fmull
pop
call
add
sbb
inc
lds
dec
je
cltd
push
stc
mov
fdivl
data16
in
add
das
cwtl
icebp
mov
jae
imul
call
test
dec
movd
testb
xlat
cmp
sbb
loopne
adc
xchg
push
mov
jge
sub
pop
dec
loopne
loopne
xchg
in
add
xor
push
in
xchg
loopne
loop
icebp
xchg
jl
sbb
mov
mov
incl
jne
cmc
add
pop
and
xchg
sub
bound
clc
popf
std
ljmp
sbb
repnz
sbb
popf
add
sub
adc
inc
jg
jne
pusha
adc
push
int3
cmpsb
jne
lods
add
jae
call
xor
mov
loopne
jno
imul
imul
in
sbb
sub
stos
cmp
test
or
add
pop
dec
push
mov
add
push
loopne
jae
mov
pop
add
mov
rol
mov
xchg
ss
daa
insl
cmp
adc
mov
into
or
xchg
shrl
pop
add
xchg
mov
xchg
mov
add
imull
pop
addl
mov
sbb
push
push
add
or
push
jb
add
lods
jbe
and
leave
jae
daa
imul
inc
test
add
push
fistps
or
aas
xchg
add
clc
jne
sbb
and
movsb
xorl
pop
xor
sub
ficoml
out
dec
or
jg
pusha
movsb
es
pop
push
mov
push
aaa
jmp
loope
mov
or
add
nop
jg
scas
cmpb
outsl
jge
jne
rcr
out
pop
or
jl
or
jns
push
xchg
dec
and
push
and
nop
or
xor
fsub
pop
outsl
adc
fsubr
or
cmpb
jbe,pt
sbb
divl
jno
ror
test
push
inc
jg
enter
jns
sub
insl
loop
cmp
adc
xor
sub
lret
jns
inc
mov
sub
jge
xchg
xchg
xor
cmpsl
jo
sar
jmp
mov
sub
jmp
cwtl
enter
xor
or
add
and
adc
loop
cltd
mov
lds
and
cmpsb
mov
lods
add
jae
cmpsl
test
dec
pop
xchg
rclb
pop
scas
or
or
xor
orl
add
pop
enter
add
dec
lock
xchg
push
jg
jp
push
xor
es
shrl
mov
push
pop
outsb
add
aad
mov
cmp
nop
pop
xor
jbe
shll
push
leave
push
xor
pop
or
push
or
cmp
xchg
lods
orb
cmp
jno
pop
add
dec
jno
adc
inc
lock
mov
xor
dec
dec
pop
lods
sbb
popa
leave
dec
jge
mov
adc
push
dec
orl
mov
adcb
cwtl
sub
stc
add
test
push
insl
sbb
xchg
data16
jo
lahf
mov
out
dec
cmp
push
cmp
and
sbb
push
pop
pop
jmp
add
sub
pop
and
in
xor
mulb
push
loopne
and
or
pop
mov
push
lea
cmpsl
fs
pop
push
sbb
pusha
nop
push
push
lret
adc
xchg
sbb
test
pop
fildl
fs
repnz
mov
xor
lock
dec
shlb
push
jb
pop
xor
xchg
std
aaa
mov
ja
push
pop
inc
movsl
add
adc
mov
push
mov
in
xchg
mov
adc
fld
ja
aas
mov
cmp
fdivs
andl
or
inc
test
emms
mov
imul
les
add
mov
lcall
xchg
push
mov
push
inc
loop
inc
mov
mov
jbe
test
jb
pop
aaa
mov
sub
data16
xchg
outsl
dec
sbb
and
sarb
push
insb
cmpsl
and
jle
imul
lcall
add
jecxz
sub
icebp
push
sbbb
and
ret
iret
add
orl
cmpb
push
jmp
mov
add
fs
and
pusha
adc
dec
mov
adc
push
and
enter
push
add
jo
jmp
push
lea
mov
imul
pop
sbb
sbb
adc
xchg
push
and
sub
sbb
cmp
sbb
adc
nop
and
or
cmp
adc
loopne
jecxz
cs
lahf
push
imul
repnz
rcrb
inc
mov
fstps
sbb
dec
fidivl
push
dec
stos
sub
lock
sbb
lock
and
in
das
and
cmp
sub
rorb
dec
add
xchg
jo
jmp
in
push
sub
fisubs
sub
or
mov
push
mov
sub
inc
sbbl
nop
insb
pop
xor
add
pop
sub
imul
jo
push
add
ret
dec
faddl
mov
cmpsb
add
sub
and
sbbb
pop
stos
insb
push
push
adc
ds
sub
inc
push
sahf
jle
rep
mov
mov
mov
push
mov
aaa
xor
add
ret
xchg
sbb
dec
and
enter
or
xor
sbb
jns
mov
arpl
push
pushl
lock
sub
and
clc
ja
or
pop
sub
push
hlt
jp
xorl
ds
dec
sbb
pop
jnp
mov
call
outsb
roll
add
mov
add
fiaddl
or
and
mov
push
mov
inc
or
dec
pop
push
pi2fd
add
inc
dec
or
cwtl
xchg
les
push
add
mov
adc
inc
add
push
call
pop
movsb
fiaddl
repz
cmp
ja
pop
xchg
in
outsb
rclb
imul
lcall
cs
mov
dec
fcoml
pop
cld
sub
pop
roll
pushf
inc
pop
add
fdivl
scas
or
ret
sub
lea
aam
or
fisttpl
push
cmp
xor
or
jo
cltd
mov
mov
lock
pop
shll
test
daa
leave
nop
sbb
sub
inc
call
mov
sbb
loope
or
push
addl
cmp
rolb
mov
mov
xor
inc
push
inc
imul
push
dec
sti
jl
test
jg
cmp
faddp
fbld
mov
sbb
test
mov
push
popl
adc
push
mov
icebp
outsl
jle
dec
add
jmp
xchg
mov
cmp
push
imul
mov
rcll
push
in
xor
push
out
adc
cli
inc
movsl
ja
addr16
fdivrs
inc
or
xchg
mov
pop
push
mov
nop
xor
cmp
xchg
popf
pop
pop
inc
hlt
inc
lcall
insb
popf
jl
and
mov
roll
push
jg
movl
cmpl
movl
cmp
and
incl
add
and
sub
add
xor
adcl
push
and
mov
xor
pushf
push
mov
nop
andb
pop
jg
mov
xchg
xlat
mov
rol
sub
mov
adc
pop
sub
lds
inc
push
pop
jne
in
addl
iret
inc
adc
xchg
inc
sbb
sbb
clc
add
loope,pn
str
sub
add
push
or
push
hlt
push
or
mov
call
xor
movsb
mov
add
shlb
inc
sbb
push
pop
push
and
fbld
les
cmp
icebp
inc
shll
mov
or
push
mov
cwtl
mov
push
outsl
inc
inc
inc
xor
jle
dec
sub
cmpsl
jne
adc
or
push
cli
fsubs
push
xor
push
sbb
xor
je
pop
adc
daa
mov
xchg
sub
rcll
or
mov
push
sti
rep
cmpsl
lods
mov
lcall
mov
jmp
sub
jae
add
loope
shlb
add
inc
sbb
push
mov
add
mov
orl
push
inc
push
push
out
int3
sahf
mov
cmpsb
xlat
push
and
push
mov
lods
movsl
scas
xchg
mov
dec
adc
mov
data16
loopne
push
rorb
inc
test
ss
adc
push
fadd
pusha
aas
mov
mov
mov
insb
xor
sbbb
adc
js
push
xor
adc
pop
inc
call
outsb
push
lret
sub
pop
adc
loope
out
xor
addb
or
xchg
mov
push
iret
call
fninit
das
xor
sbb
shlb
pop
jg
and
pop
adc
push
push
jns
test
dec
aaa
arpl
call
and
je
add
and
mov
test
fs
push
push
hlt
pop
push
data16
lock
push
mov
mov
dec
push
push
add
inc
push
jmp
cmp
adc
incl
jbe
test
popa
sub
cmp
cmp
xlat
mov
and
jae
adc
sub
sub
cmp
add
les
push
or
sbb
pop
pop
or
xor
cmp
mov
loopne
mov
push
pusha
push
pusha
iret
bound
adc
push
daa
adc
sub
imul
and
lock
push
cmp
dec
rolb
gs
sbb
or
push
sbb
xchg
add
pop
xor
lea
lea
xchg
sbb
push
pop
movsb
lcall
adc
xorl
dec
add
cmp
inc
pop
nop
sbbb
adc
mov
adc
xchg
testb
mov
lret
pop
or
loopne
and
xchg
lock
scas
inc
sub
and
ror
arpl
lock
adcl
dec
adc
popl
pusha
jbe
cmp
xorb
cmpsl
jno
add
je
dec
xchg
push
pop
add
cmp
push
clc
add
add
and
testb
xor
ret
cmp
add
bound
xchg
mov
and
sub
pop
sbb
stos
jecxz
in
mov
push
push
jb
fwait
add
push
or
jae
shl
ja
scas
ret
cmp
or
ret
sahf
ja
test
lods
lods
pop
push
mov
mov
in
or
daa
or
cmp
push
cmp
jmp
cmp
dec
test
or
or
insb
xor
ret
push
push
cmpsb
ret
adc
pusha
xor
pop
add
js
fistpll
stos
cmpb
subb
notb
je
push
add
xor
insb
and
cmc
sbb
and
lcall
push
mov
sub
jle
movl
sub
das
icebp
outsb
mov
test
add
lock
cmp
arpl
inc
pop
enter
xor
adc
andb
inc
stos
cli
inc
jmp
dec
ss
mov
out
rorl
jne
sub
outsb
sar
data16
push
mov
push
push
jae
push
mov
movsb
call
jae
ror
repz
push
dec
hlt
push
pop
or
jae
xorb
add
and
outsb
lret
ret
mov
rol
icebp
out
add
xacquire
add
or
sub
inc
sub
xor
lret
adc
mov
mov
push
cmp
mov
sarb
dec
sarb
jp
jge
ljmp
stos
inc
ja
add
inc
addl
nop
mov
rcrb
xchg
stos
cwtl
icebp
xchg
xchg
cmpsb
xchg
xor
jg
mov
lret
jb
insb
rol
fwait
cmpb
pop
in
jno
fsts
sbb
sbb
or
push
push
jmp
or
cmp
stc
push
cmp
add
test
loopne
inc
push
jmp
lahf
sbb
enter
adc
mov
and
enter
adc
or
pop
fwait
dec
loopne
addr16
outsb
fildl
jmp
cmp
pop
fwait
fwait
pop
adc
and
adc
mov
push
xor
call
fs
scas
repnz
or
or
xchg
xchg
xor
jecxz
sbb
insb
mov
add
xor
dec
sbb
push
fisubs
call
add
adc
rclb
bound
mov
and
movsb
adc
ss
sbb
cmpsb
or
int3
xor
push
mov
and
and
inc
aas
and
add
jl
movsb
add
in
and
in
cmp
and
and
add
pushf
add
jbe
sub
in
cmp
daa
inc
sub
in
cmp
adc
aas
or
js
cmp
pop
push
pop
enter
xor
sub
sti
fsts
xor
or
mov
lock
xor
mov
mov
jae
sbb
lea
leave
fldl
movsb
test
cld
or
insb
cmp
in
pusha
adc
xor
in
jbe
negl
or
ljmp
fistps
or
add
sbb
daa
mov
sbb
sbb
dec
fcoml
push
and
pop
mov
xchg
lock
fdivs
adc
push
insb
jns
sbb
mov
sbb
fsubr
mov
test
jge
lods
xchg
push
test
dec
fstpl
jnp
dec
sub
sarb
cmpb
lds
dec
xlat
inc
mov
cmpsl
jns
in
loop
fimuls
enter
jle
sub
loopne
mov
aam
mov
jo
push
mov
cmp
test
pop
inc
mov
sub
cmp
add
and
add
hlt
mov
sub
hlt
push
pushf
adc
cmp
mov
cmp
mov
cmp
or
xchg
sbb
jno
adc
mov
push
mov
pop
mov
mov
inc
fcomps
or
movsl
inc
push
fwait
pop
int
sub
test
lock
inc
jp
out
fadds
orb
lods
adc
fimull
push
pop
or
sar
cmp
bsf
loopne
and
fs
cmp
bound
push
int
mov
add
ja
add
dec
sbb
pushf
ja
add
push
mov
nop
or
sbb
sub
lea
shll
pop
loope
gs
pop
aas
xchg
mov
adc
add
xchg
jo
add
adc
xor
inc
jbe
mov
add
jbe
pop
sbb
cmp
inc
push
jns
pop
inc
sbb
dec
inc
idivl
inc
push
or
push
lcall
adc
ja
insb
add
mov
or
or
xchg
dec
popl
xchg
es
cwtl
and
adcl
push
xor
and
rcrl
stc
and
or
cmpsl
jne
mov
pop
xorl
pusha
mov
xchg
inc
mov
in
jecxz
je
ret
ret
cmp
mov
mov
cmc
insb
mov
sbb
imul
clc
lock
dec
sbb
adc
adc
movsb
ret
jb
int
fildl
jl
aam
jno
mov
or
mov
stos
or
lret
mov
aam
out
add
mov
dec
push
fwait
stc
es
mov
outsl
pop
in
ret
fwait
and
mov
in
and
push
xchg
mov
je
call
inc
or
sub
jmp
push
aam
sbb
cwtl
xor
popa
inc
and
shlb
push
pop
mov
jmp
lock
jge
dec
push
xlat
inc
adc
pop
inc
dec
fistl
adc
ret
cli
aam
xchg
stos
sarb
fcomp
cmpsl
addb
jg
stos
xor
mov
mov
loopne
xlat
xchg
mov
push
pop
sub
cmp
pop
pop
or
test
xchg
cmpb
jb
or
notb
pop
dec
push
mov
jl
mov
adc
add
push
jbe
jmp
stos
sbb
cmc
xchg
jae
jne
lret
push
dec
lock
imul
ret
or
rcrl
or
and
or
scas
adc
adc
cmpl
jo
mov
shl
xor
call
push
add
movsb
mov
add
addb
in
xchg
push
pop
rolb
daa
imul
push
xchg
out
leave
shrb
add
loopne
fmuls
in
mov
adc
lea
and
cmp
mov
pop
push
push
inc
bnd
or
jno
jnp
mov
imul
lods
arpl
push
insl
and
mov
sub
je
jle
inc
ret
jb
xchg
xorl
mov
jae
add
inc
pushf
popa
sar
rclb
int3
push
inc
clc
inc
sbb
pop
push
clc
mov
and
popf
fwait
sbb
movsb
loop
and
cmp
inc
xchg
aam
xchg
es
lods
sub
inc
mov
push
add
jae
sub
dec
test
imul
pusha
imul
pop
pushl
pop
or
lock
push
je
loopne
ljmp
or
mov
cld
push
pop
movsb
rol
int
loopne
imul
and
jge
pop
pusha
and
sahf
mov
in
insb
and
ss
dec
movsl
fadds
mov
xchg
xor
mov
mov
dec
push
lods
and
push
xchg
pushf
shrb
xor
and
cmp
xchg
pop
shll
mov
test
inc
shrb
inc
inc
or
scas
test
xor
lret
popf
es
mov
inc
mov
fmuls
sub
and
out
or
xchg
shlb
out
loopne
or
jg
shrb
xor
negl
mov
enter
out
loopne
push
test
in
add
cmc
nop
in
sbb
pop
insl
dec
cmp
pop
es
jbe
mov
xchg
sub
xchg
and
les
mov
sub
rolb
pop
push
sub
jbe
pusha
pop
mov
ljmp
inc
negl
lods
inc
stos
add
stc
push
jno
ret
ds
xor
gs
idivb
das
and
les
xchg
mov
sub
adc
mov
jo
sub
arpl
mov
add
pop
pop
adc
ljmp
mov
sbb
adc
pop
xchg
je
mov
loope
xchg
lds
push
push
adc
adc
mov
add
add
xchg
stos
inc
push
push
lahf
pop
lret
mov
sub
mov
call
push
lock
mov
pushf
adc
mov
mov
and
call
mov
repz
adc
scas
pop
push
js
adc
mov
mov
sbb
jge
or
sbb
or
insb
push
adc
nop
cmc
mov
movsl
dec
dec
es
test
push
or
xchg
xchg
jbe
cmp
mov
jmp
jo
fisttpl
mov
imul
insb
dec
cmpsb
inc
in
or
rclb
mov
pop
movsb
push
push
mov
adc
add
dec
sbb
mov
cmp
shl
mov
shr
pop
dec
mov
add
call
push
enter
shlb
jecxz
repnz
xchg
mov
lock
sbb
adc
mov
inc
bound
ss
repz
mov
sbb
cli
mov
lock
mov
mov
popa
cmp
and
and
dec
popa
in
pop
adc
xor
orl
clc
cmc
push
push
incb
pop
xor
xchg
xchg
out
lds
or
sub
xchg
testl
push
or
imul
mov
add
test
sbb
push
or
push
sub
pop
or
js
push
sub
lret
and
pop
arpl
mov
out
in
les
jecxz
mov
icebp
or
mov
stos
test
add
pop
mov
aad
inc
push
lret
dec
mov
dec
jmp
or
ljmp
xor
hlt
mov
mov
ss
movsb
movsl
cmp
or
xor
enter
or
rolb
jo
ja
sarl
imul
mov
or
stc
nop
mov
nop
test
mov
adc
je
jno
inc
fsubrs
test
xlat
add
pop
and
pop
sub
fmull
xchg
scas
and
xchg
lea
cs
pushf
in
jge
or
or
cld
enter
mov
inc
popf
or
xchg
mov
movntq
scas
fdivrl
or
cmp
lea
cmp
popf
mov
dec
ret
pop
mov
nop
hlt
enter
rclb
insb
out
mov
or
addr16
inc
in
xchg
sahf
mov
mov
xlat
fidivl
mov
mov
cs
test
or
in
mov
addr16
movsb
cwtl
jge
mov
push
js
mov
or
lea
call
dec
mov
ret
pop
cmp
mov
test
jmp
outsl
push
xor
mov
inc
jmp
adc
dec
add
inc
push
pop
mov
jg
lahf
xor
int
mov
testb
idivb
mov
and
mov
xorb
test
push
mov
test
out
ds
or
into
cld
fwait
xchg
mov
cmp
stos
in
into
test
fnstenv
xor
stos
and
pop
cmp
or
mov
jne
js
rclb
andl
rol
cli
fistpll
aam
rclb
cmp
jns
lods
mov
sbb
add
popf
pop
call
and
pop
nop
push
add
lods
add
mov
fldl
pop
adc
xchg
add
adc
and
pop
popf
loop
xlat
mov
repz
adc
sbb
nopl
inc
je
rcrl
xchg
ret
push
movsl
dec
lock
adc
dec
aad
test
repnz
mov
bound
lock
popl
andl
sub
out
mov
push
stos
inc
dec
jmp
jns
fcmovnb
test
and
daa
or
in
sbb
std
xor
push
stos
es
add
loope
ds
push
adc
xchg
cmp
lea
mov
or
dec
or
and
clc
mov
test
push
out
dec
sarb
mov
adc
cmp
mov
incl
push
sub
mov
sub
jl
lcall
or
cmp
adc
stos
pop
pop
xchg
push
movsb
or
pop
mov
lock
int3
sbb
mov
lods
adc
sub
jge
adc
paddusb
nop
sub
cmp
cmp
fsts
out
and
stos
cmp
push
and
dec
rcr
mov
dec
rcl
hlt
es
xchg
jne
jle
and
push
pop
mov
mov
call
sub
cs
sub
add
mov
call
mov
les
or
push
pop
add
xor
add
sarb
push
adc
add
or
mov
pop
add
xchg
lock
add
lea
add
mov
or
std
push
or
inc
mov
ret
decb
fwait
test
jo
js
test
lods
fisubs
lret
loope
sub
es
inc
outsb
lock
es
loopne
in
rol
adc
xchg
cmpsb
movsl
and
xchg
stc
je
add
push
movsl
loope
dec
inc
or
mov
or
and
cmp
jp
hlt
inc
stos
inc
aas
mov
mov
or
inc
jbe
pop
push
lods
test
movaps
xchg
push
xchg
lock
les
mov
adc
je
addw
push
jmp
cmp
mov
ja
sbb
aaa
xor
cmp
jg
outsb
adc
loopne
mov
fiaddl
outsb
add
push
jge
out
push
inc
adc
jle
xchg
out
lock
push
or
jp
outsb
scas
adc
and
pop
bound
mov
das
pop
lock
xor
inc
sbb
push
lock
nop
jmp
divb
and
jge
cmpsb
dec
cmp
mov
shlb
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
add
xor
dec
add
iretw
add
ret
and
clc
nop
and
push
or
or
aam
les
mov
dec
les
adc
gs
mov
mov
cwtl
int3
sub
sahf
adc
jbe
je
leave
nop
mov
cmpsb
outsb
rcr
aaa
mov
push
popa
xor
push
es
or
hlt
ret
mov
pop
sahf
inc
sbb
lahf
add
xchg
mov
cmp
inc
rcrb
movsb
aam
adc
push
mov
inc
adc
lea
push
push
sysenter
mov
adc
lret
loopne
hlt
xchg
mov
fldt
sub
mov
dec
add
sbb
add
sbb
decl
pop
push
cltd
sub
sbb
movsb
pop
rclb
stos
jp
or
xor
push
in
stos
subb
push
sbb
adc
add
jne
jbe
push
pusha
and
push
ficoml
cmp
xchg
sbb
int
loopne
adc
push
fs
adc
test
or
or
in
in
rcrb
addr16
xchg
mov
movsl
movsl
adc
lret
add
sub
pusha
xor
inc
sbb
aad
inc
and
xor
push
dec
cmp
add
adc
mov
xor
je
iret
add
add
mov
adcb
add
das
inc
pop
daa
nop
or
loop
add
mov
cmp
outsl
mov
pop
add
test
gs
jle
inc
inc
ljmp
mov
pop
push
and
pop
outsl
push
adc
mov
test
sub
add
mov
sbb
sub
sub
out
and
push
mov
xchg
push
ljmp
test
adc
insb
mov
loopne
push
cmp
pop
add
push
imul
push
fwait
push
mov
ret
ljmp
xchg
dec
and
push
jo
adc
push
cmpsl
fistpl
test
les
push
adcl
pushl
subl
test
pop
hlt
push
into
cmp
daa
arpl
and
lock
rclb
add
test
pop
aaa
jp
inc
jne
pop
jno
inc
xor
mov
je
cltd
test
sbb
das
sbb
pop
cmp
das
das
loop
imul
loop
sub
xor
ret
js
jle
lahf
pop
popf
sub
mov
add
or
xlat
push
and
cwtl
sub
inc
mov
add
jp
push
sub
adc
sub
push
xlat
mov
inc
dec
imul
loop
nop
ret
mov
mov
notl
ret
jne
cmp
or
xor
cmp
out
dec
or
es
or
sarl
add
xor
mov
mov
stos
nop
movsb
movsl
add
adc
mov
xor
loop
xchg
xor
or
add
test
push
push
scas
sbb
loope
mov
not
sub
add
idivb
and
cmp
lock
cmc
call
add
aaa
jmp
add
sahf
push
mov
and
stos
adc
and
mov
loopne
inc
inc
stos
and
inc
jbe
jl
sbb
leave
mov
or
or
add
arpl
inc
mov
mov
sbb
in
jp
fcmovu
dec
arpl
aam
pop
adc
sbb
inc
sub
dec
movsb
mov
test
iret
and
pusha
mov
call
push
pop
adc
lret
pop
or
dec
in
movsl
inc
rolb
add
adc
dec
enter
shll
push
and
pop
das
ljmp
pusha
mov
push
pop
jg
add
add
mov
ret
mov
pop
jecxz
or
push
sub
loopne
mov
jecxz
jp
mov
lea
call
aaa
adc
mov
add
scas
gs
dec
les
stos
add
cmp
inc
adc
imul
aas
daa
ljmp
xchg
sbb
lea
pusha
fdiv
pop
jmp
mov
in
repnz
add
xchg
add
fidivl
jno
mov
xor
adc
repnz
test
push
inc
std
mov
je
mov
vphsubwd
cs
add
or
dec
pop
lods
mov
sbb
je
push
sbb
popf
in
push
jbe
fcmovb
lret
push
int3
inc
mov
fistps
daa
test
adc
push
push
clc
mov
loope
enter
add
pop
repz
cmp
pusha
xor
mov
add
pop
sub
xchg
test
lods
pop
jge
xor
hlt
dec
loopne
in
push
add
cmp
add
fnsave
push
jb
or
jmp
insl
add
mov
pusha
pop
push
je
xor
dec
add
sub
inc
notl
aas
inc
lods
add
je
movsb
or
in
je
faddl
push
adc
push
aam
in
push
inc
or
lock
xor
sbbl
es
femms
cltd
mov
pop
in
sbb
bsf
mov
and
adc
lahf
adc
adc
pop
outsl
insl
aam
rcl
fadds
aam
or
mov
push
push
mov
js
cmp
add
lahf
mov
fxch
cmp
mov
repz
pop
out
aam
pop
psllw
adc
mull
xchg
fcoms
push
jb
push
mov
mov
adc
repnz
sbb
xchg
mov
aam
adc
fsubrs
mov
push
xchg
dec
sub
popf
jge
xchg
or
xor
shlb
lret
mov
aam
push
int3
mov
and
cmp
aam
fldt
movsb
xchg
cmp
icebp
sbb
jne
cmpsl
movl
sbbl
add
cmp
jns
jo
bound
or
add
js,pt
lret
dec
push
push
xor
roll
fldl
lret
and
pop
and
std
mov
jnp
inc
cmp
mov
ret
lret
bnd
push
lea
dec
outsb
push
cwtl
mov
popa
mov
mov
cld
pop
je
insl
push
pusha
cld
push
arpl
sub
int
pop
mov
xchg
mov
hlt
int3
xchg
or
mov
inc
jle
popf
or
sbb
pop
notb
test
repz
aam
test
xor
rcll
inc
and
xchg
loopne
int
into
push
mov
adc
xor
inc
pop
dec
outsb
or
pop
nop
int
or
in
faddl
into
push
sti
xor
add
xor
aad
ret
or
jne
inc
adc
ljmp
mov
lret
push
add
lds
jmp
pop
clc
dec
jl
jb
fadds
mov
sahf
les
enter
test
orb
push
pop
push
fs
cmp
lcall
pushl
adc
add
inc
fisttpl
cmovae
inc
xchg
xchg
mov
push
dec
nop
lock
or
lret
lret
lret
movsb
sub
inc
mov
mov
lret
lret
lret
lret
mov
mov
shr
fcompl
enter
inc
add
cmp
mov
sub
xor
in
sbb
dec
sbb
push
lock
pop
jp
dec
loope
pop
int3
add
mov
mov
mov
mov
sti
movl
stos
pushl
push
cmpsl
mov
adc
sbb
mov
test
push
cwtl
or
cmp
jne
add
xchg
dec
test
mov
xchg
jl
rolb
inc
inc
push
testb
clc
popf
add
dec
es
js
inc
nop
add
sub
adc
push
mov
add
cwtl
sub
call
dec
and
shll
inc
inc
fwait
xor
push
in
adc
arpl
sbb
push
lods
ret
shlb
add
or
hlt
lods
cmp
sbb
outsl
inc
mov
jne
push
mov
repz
mov
sahf
push
popa
sbbl
jmp
push
xchg
lock
mov
sbb
and
xchg
pop
and
push
add
sbb
or
bound
lret
push
inc
mov
or
inc
lret
lods
jecxz
mov
mov
xchg
loopne
or
adcb
pop
stos
push
mov
sbb
movsb
jnp
xchg
bound
jae
lret
mov
mov
adc
mov
mov
std
mov
les
subl
pop
jl
mov
test
jo
in
pop
mov
mov
pop
add
lds
mov
dec
jmp
inc
popa
push
sbb
adc
hlt
pop
enter
dec
dec
test
lods
nop
inc
cmpl
bound
cmp
adc
imul
jae
gs
jmp
push
push
adc
fsubrs
jmp
shll
shlb
mov
mov
pop
mov
into
rclb
les
mov
or
adc
sub
sub
inc
rcrb
push
sbb
jno
jnp
ja
bound
adc
adc
mov
mov
insb
ljmp
and
fistl
and
mov
sbb
mov
jns
push
movsb
adc
add
push
jo
adc
and
roll
jnp
jb
ret
flds
jecxz
jne
es
push
lret
les
mov
nop
sub
pop
pop
in
fisttpl
pop
call
pop
loopne
mov
js
sbb
sbb
addl
or
sahf
loope
pop
mov
mov
adc
ret
sub
cmpsl
mov
ljmp
repz
into
xor
cwtl
add
push
mov
movsl
jne
add
jne
orl
jp
and
mov
xor
jg
xor
push
cmp
xchg
incl
sub
test
dec
push
inc
push
ret
mov
testl
jg
ds
dec
les
in
xor
push
dec
xchg
push
push
inc
xor
stc
inc
and
lcall
lods
sub
and
add
int3
dec
push
jle
sbb
push
sar
shll
mov
or
add
sbb
repz
sbb
adc
enter
add
cmc
lock
xor
test
pop
xlat
shrb
push
movsl
push
push
movsl
pop
sar
fcmovnu
inc
hlt
fstl
fcomp
pushl
addl
fldl
pop
jo
fsubr
pop
faddp
andl
sbb
test
fdivrl
in
adc
mov
leave
das
jo
mov
mov
xchg
pop
pop
adc
lods
sub
dec
or
mov
mov
push
xor
loope
outsb
push
sub
cmp
ljmp
mov
mov
jl
add
ficomps
lods
lea
test
fcomp
mov
or
orl
jl
add
mov
mov
inc
dec
arpl
jo
xchg
pcmpeqb
fldt
std
ljmp
sahf
cmp
dec
mov
int3
dec
or
xor
jae
push
sub
sarl
pop
fldcw
jp
mov
es
in
sub
pop
add
sub
xor
add
mov
into
enter
jg
dec
mov
cmp
jge
sbb
imul
xchg
sub
lods
orb
push
js
and
pop
add
bound
inc
inc
inc
jle
mov
mov
ljmp
pop
mov
cmpsl
dec
js
mov
mov
adc
or
push
test
jne
push
push
adc
add
mov
mov
pop
lea
mov
or
ror
inc
add
jb
in
popl
or
jns
mov
mov
push
sbb
cmpsl
adc
das
mov
mov
mov
or
mov
mov
mov
xor
sub
aad
or
lea
sub
push
lods
es
inc
in
loopne
jmp
ljmp
adc
jge
pop
stos
mov
cmp
dec
loopne
pop
decl
inc
adc
test
ret
push
arpl
inc
das
nop
leave
js
or
je
ret
cld
jae
and
xorl
xor
or
call
xchg
xchg
jno
inc
aad
aad
fadd
adc
lock
arpl
test
push
adc
ss
hlt
loope
mov
dec
and
and
pop
in
cmp
pop
jmp
lods
cwtl
shlb
cmp
mov
add
ds
hlt
aaa
pop
xchg
push
fwait
push
push
sysexit
xchg
add
hlt
xor
subb
out
mov
ljmp
and
sbb
pop
imul
mov
add
sahf
push
int3
push
lret
loopne
mov
jl
rorb
scas
flds
add
xchg
loope
scas
mov
loope
xor
push
cs
daa
add
and
ret
mov
je
inc
add
jno
movsl
loopne
push
cltd
bound
dec
mov
subl
and
pop
shlb
sub
dec
mov
add
push
dec
dec
inc
out
shl
adc
mov
or
push
add
pop
mov
pop
xor
sbb
and
icebp
scas
outsb
sbb
lock
xchg
push
sbb
xchg
mov
sahf
mov
push
lret
clc
loop
push
push
inc
push
mov
test
and
pop
outsb
clc
hlt
xchg
cs
mov
repz
gs
adcl
hlt
mov
adc
ret
shrb
or
aad
dec
and
pop
aam
shll
leave
sub
add
xchg
dec
in
or
enter
adc
sub
push
inc
adc
xor
mov
cmp
rcrb
xchg
inc
and
dec
enter
add
push
adc
push
fidivl
push
cmp
in
inc
dec
hlt
xchg
pop
fisttpll
push
or
in
out
and
pop
inc
mov
xchg
movsb
jb
dec
das
cwtl
mov
cmp
movsl
fstp
xor
ret
mov
add
lret
or
add
int3
mov
pop
mov
xor
xor
cli
and
add
ret
xor
sbbl
mov
or
ljmp
fistpll
sub
dec
jnp
leave
adc
rclb
popf
pop
test
faddl
xor
or
inc
sub
rorl
lods
clc
jg
cmp
daa
add
daa
push
cltd
add
add
call
lsl
stc
cli
aam
and
in
cmp
fldcw
sub
and
sub
jle
aam
mov
mov
jl
outsl
sbb
xlat
xor
loopne
shll
insb
and
mov
stc
or
call
adc
data16
add
and
orl
sbb
mov
test
pop
cmpl
fisubl
mov
push
mulb
int3
mov
out
jbe
jne
xor
xor
mov
stos
xor
push
pavgb
fcomps
and
sbb
iret
sub
push
or
dec
add
mov
xor
xchg
dec
push
cmp
imul
sub
sub
cmpsb
je
hlt
pop
pop
adc
mov
inc
sub
fsubrl
mov
cmp
inc
sbb
ss
popf
or
xor
push
imulb
cmp
pop
jne
imull
pop
adc
sub
add
dec
xchg
adc
jo
rcl
ljmp
push
push
ds
pushf
cmpl
je
adc
popf
arpl
pop
or
stos
xchg
inc
movsl
scas
jg
jns
pushf
jae
sbb
cmp
push
in
cmp
orb
push
push
shll
xchg
aas
xor
addb
ret
or
or
xchg
lock
loop
dec
nop
inc
cld
jmp
movsl
sub
pop
add
push
cmp
outsb
and
mov
xor
lock
jno
mov
push
stos
and
repz
in
jl
test
mov
leave
lock
adc
rolb
call
lds
push
mov
shrb
cld
lahf
loop
mov
lret
mov
sub
in
mov
pop
fsubrs
aam
pop
sarl
sub
push
loopne
pushf
je
jae
and
add
inc
les
and
in
lock
lret
cmp
test
aam
gs
xchg
or
aaa
ja
popa
jo
faddl
insb
push
test
clc
cmp
jne
lcall
addl
fstpl
fiadds
lret
xor
dec
mov
push
xchg
xor
jns
or
add
test
movsb
std
or
add
cmp
add
cmp
add
and
ret
ret
or
dec
inc
jno
mov
and
aas
rorl
imul
loopnew
rolb
aam
leave
loopne
in
ret
push
inc
dec
fwait
sbb
jns
add
add
jb
push
les
dec
sahf
lret
or
testl
add
sbb
dec
cmp
or
call
shlb
pop
hlt
aam
aaa
add
ret
out
jl
inc
and
or
mov
and
test
and
imul
push
pop
scas
data16
pop
push
xchg
push
cmpsl
lea
push
sub
stc
cmc
bound
push
pushf
inc
pop
push
je
fld
dec
ficoms
dec
fsubrs
push
cmp
mov
adc
xchg
cltd
jne
mov
repz
add
dec
rorl
lahf
jp
and
sbb
inc
and
clc
stos
mov
sbb
cmp
jge
add
jge
sub
adcl
scas
pop
mov
loopne
in
call
pop
pop
or
fmulp
cmc
sbb
xor
cmp
out
jecxz
xchg
fdivl
in
and
push
popa
leave
int
dec
add
add
and
ret
mov
lret
mov
pop
lret
movsb
and
mov
sbb
mov
mov
ret
ljmp
dec
dec
scas
shll
divb
cmc
in
jmp
je
rcrl
ret
arpl
cmp
aad
in
leave
push
into
sub
outsb
daa
sbb
xchg
sarb
lret
push
cli
pop
dec
add
dec
jl
ret
xchg
mov
jmp
push
mov
inc
mov
cs
inc
push
cmpsl
jp
mov
xor
or
jo
je
outsb
pop
mov
sub
ret
add
mov
push
sbb
inc
mov
jge
mov
lods
ret
shrl
push
xor
cmpsl
out
jae
cmp
push
inc
sub
xor
cmp
repz
pop
inc
xor
add
rclb
aaa
push
lcall
jo
xor
pop
ret
add
int3
adc
inc
sub
push
adc
lret
mov
adc
sub
adc
loope
inc
fistpll
add
ljmp
jl
pop
inc
jmp
pop
dec
jmp
sahf
inc
inc
cmp
mov
mov
mov
xchg
fadds
fidivrl
adc
mov
mov
addl
sbb
xchg
jge
loop
mov
fidivs
out
add
and
clc
or
xor
cmpb
and
inc
lea
pop
mov
cmp
fwait
cwtl
add
test
inc
pop
add
mov
add
sub
cmp
inc
inc
dec
push
int
sub
xor
sub
jnp
rorb
lahf
rcr
inc
dec
negb
cmp
xchg
jl
pop
adc
sbb
inc
andl
inc
mov
or
xchg
shl
fwait
sub
pop
lea
rcll
jl
pusha
leave
add
gs
nop
mov
orl
adc
adc
adc
rclb
mov
sarl
adc
xorb
inc
xor
fisubrs
add
aas
orb
sbb
jmp
push
sbb
cmp
xor
enter
push
xor
push
loop
adc
cmp
push
js
clc
inc
sbb
or
jb
hlt
lock
xor
in
loopne
nop
pop
cli
std
sub
xchg
lret
push
or
cmp
push
push
xchg
or
push
arpl
dec
sbb
xchg
cmp
sahf
adc
sbbb
sub
or
xchg
add
leave
movsl
test
push
and
or
dec
iret
cmp
push
cmpsb
mov
test
xchg
outsb
stos
loop
ja
sub
adc
call
or
jae
dec
ret
cmpsl
push
adc
and
inc
ss
cltd
lods
push
test
jle
jo
addl
das
and
sar
add
cmp
ja
jecxz
xchg
or
cmc
mov
xchg
mov
adc
addr16
push
push
inc
fnop
add
pop
add
sbb
lret
add
imul
inc
mov
adc
pop
pop
pusha
addl
popa
xor
ss
adc
jo
push
push
loopne
ja
jb
or
push
pop
or
push
rolb
push
cltd
mov
lea
iret
bound
adc
nop
fsts
and
lcall
inc
orl
or
push
incl
cmp
jl
xor
lret
into
cmp
jns
fiaddl
fcom
dec
pop
inc
inc
cmp
pop
out
mov
xor
cmpb
es
xchg
into
jl
shrl
adc
push
pop
enterw
cld
xchg
rcl
jge
sbb
std
dec
cld
mov
push
pop
je
push
mov
cmp
adc
fiadds
jl
jmp
or
xor
jge
aam
mov
inc
and
cmp
jns
pop
sbb
cs
push
jmp
push
sbb
data16
je
sub
dec
sbb
jl
int
stos
xor
rcrl
mov
mov
stos
les
dec
adc
sub
push
jge
lret
xor
and
lea
rorl
cs
push
jno
sub
outsb
add
push
add
test
push
inc
hlt
push
mov
pop
push
sbb
outsl
add
xor
ret
or
stc
inc
pop
push
sbbl
jne
fisubl
je
lods
pop
push
ss
adc
lods
add
test
add
or
or
add
fs
stos
inc
xchg
pushl
adc
lods
or
push
jmp
aaa
push
mov
push
ret
dec
stos
mov
inc
test
pusha
cmp
das
adc
addb
inc
loopne
orl
jnp
mov
adc
test
mov
mov
adc
lret
push
sub
bnd
mov
mov
xor
xchg
icebp
adc
jle
hlt
mov
bound
and
imul
cmpl
in
loop
mov
xchg
or
pop
inc
test
out
popa
out
sbb
adc
push
insb
dec
fdivrs
xor
or
push
jo
sbb
data16
jnp
mov
mov
rcrb
insb
data16
or
inc
xor
push
cmp
aam
inc
loope
data16
jne
adc
jmp
popf
pusha
ja
mov
xor
movsl
popf
sti
xchg
mov
inc
mov
ja
mov
mov
ret
and
pop
sbb
mov
adc
sub
aaa
cmc
adc
pusha
and
and
mov
dec
lea
pop
fsubr
mov
divb
jmp
lret
add
insl
fcomp
dec
sbb
mov
jmp
adc
subb
xchg
cmp
inc
shrb
jne
push
jmp
cmp
or
push
and
push
insl
xlat
bound
sbb
jp
mov
ret
mov
andb
and
inc
lods
xor
enter
and
mov
add
fcoml
sub
rcrb
cmpl
cwtl
sub
test
jl
mov
jmp
ss
sbb
icebp
and
xrelease
mov
shrb
movl
xchg
cmp
or
outsb
push
dec
cmp
shlb
inc
sahf
dec
test
xchg
mov
add
das
jge
or
jns
call
add
push
inc
fwait
add
jne
scas
push
xchg
adc
xchg
andb
xor
fistl
push
cmp
adc
ljmp
adc
mov
mov
fisttpll
mov
fs
cwtl
mov
stos
ficomps
or
push
dec
xchg
mov
pop
or
mov
jp
adc
mov
mov
fiaddl
pushl
fucomip
orb
adc
dec
dec
mov
push
jp
adc
push
and
test
pop
push
inc
dec
push
aas
mov
das
call
push
adc
mov
push
imul
ret
xchg
push
lock
mov
mov
and
xor
and
lret
push
adcb
addr16
outsl
inc
enter
jl
jle
sarl
fwait
mov
add
outsl
fcomps
dec
cwtl
mov
mov
popf
loopne
jl
adc
push
in
adc
or
add
popa
pusha
sub
add
inc
add
insl
mov
cmp
popa
jmp
pop
push
mov
jecxz
ja
adc
and
adc
push
outsl
lahf
add
push
xchg
inc
loopne
adc
xchg
les
add
jbe
ret
mov
ficompl
outsb
imul
sbb
fidivrl
out
fldl2t
adc
sbb
sbb
mov
popa
cmp
add
push
or
jecxz
inc
pop
clc
clc
popa
insl
bound
loope
push
out
push
gs
ds
icebp
sub
ror
add
pop
jge
xor
pop
or
shrl
inc
in
sub
or
jg
cmpl
sbb
popf
shrb
push
sub
push
pop
outsl
ja
cmpsl
and
pop
add
jl
movl
divb
imul
ds
lahf
sub
pop
repz
mov
and
and
ds
nop
in
adc
adc
jne
sub
fnstsw
lods
jmp
xor
movl
jno
and
inc
js
cmp
jl
push
push
push
mov
add
add
sbbl
push
add
push
xchg
or
dec
loope
loope
adc
in
arpl
stos
cli
lea
test
pop
outsl
pusha
rol
test
mov
push
in
pop
xchg
mov
inc
xchg
inc
mov
or
or
add
pop
fs
adc
lcall
inc
ret
add
aas
sub
shlb
mov
inc
xchg
inc
or
lahf
push
repnz
mov
loopne
inc
pusha
adc
and
xchg
jno
pop
push
loopne
adc
pop
jnp
cmpsl
sbb
jb
push
push
pop
push
cltd
movsb
xor
xor
add
pop
inc
xchg
fcmovnb
fsubrl
cltd
dec
nop
xchg
xchg
jo
rorb
mov
and
dec
or
nop
inc
fucomp
sub
dec
repnz
imul
icebp
rorb
or
cmp
into
push
and
fwait
sub
out
pop
add
inc
adc
aas
push
mov
ret
inc
lds
fildl
das
xor
pop
pop
and
in
lcall
dec
std
in
mov
popf
pop
jo
fisubrs
ss
lea
jmp
scas
mov
int3
jmp
nop
adc
out
add
leave
xchg
cmp
enter
add
nop
sub
adc
mov
xchg
lods
sub
mov
dec
es
dec
sbb
dec
sahf
push
adc
icebp
shl
fsubs
mov
test
xchg
test
imul
sub
adc
push
loopne
rcl
add
aas
pusha
push
push
enter
xor
or
jb
add
or
push
inc
pop
aam
adc
sub
jb
or
mov
insl
xchg
rclb
jl
push
mov
jg
dec
js
subb
mov
push
cli
pop
jb
cmp
xor
adc
stc
cmp
cmp
mov
std
mov
in
js
arpl
lock
loopne
inc
adc
nop
stos
pop
push
xor
sub
jl,pt
loopne
adc
push
add
add
sbb
popf
push
jb
adc
call
ret
repz
add
inc
or
inc
pusha
pushf
or
sbb
push
cwtl
adc
adc
xchg
sub
cld
mov
and
lock
mov
jb
mov
mov
adc
add
sbb
jmp
push
cli
ljmp
lock
jae
addb
in
add
mov
and
je
or
cmp
add
es
add
popf
sbb
xchg
in
lds
mov
xor
xchg
adc
in
inc
xchg
test
ret
daa
ret
mov
pop
pop
ja
push
sub
xorl
lods
adc
rorb
push
sub
cmp
stos
cmp
jns
pusha
rorb
imul
mov
inc
loope
inc
loope
ficoms
push
in
mov
loopne
push
lea
inc
dec
xor
push
in
pop
or
or
and
add
cltd
xchg
mov
mov
je
pushf
cmp
scas
add
xchg
jne
push
pop
scas
fsubrs
xchg
xchg
and
lret
mov
jo
dec
sub
mov
int3
ja
or
test
fdivr
jno
cmp
fsubrl
jecxz
mov
mov
push
cli
xor
inc
int
data16
testb
imul
add
rclb
mov
jb
outsb
mov
ret
out
xchg
out
xchg
in
push
sub
dec
int
jno
or
lods
loopne
cmp
xchg
jbe
lods
pop
movsl
jecxz
fsubs
test
sub
xor
jb
xchg
mov
or
cmp
mov
cmp
rolb
lahf
imul
and
xlat
add
popa
inc
rcrb
lods
mov
daa
xor
push
pop
add
scas
mov
ja
or
das
push
push
xor
lret
stos
or
jl
add
mov
mov
pop
push
rorl
adc
mov
pop
fidivl
inc
mov
xchg
pushf
sti
mov
ljmp
add
and
test
jnp
je
mov
jle
add
mov
outsl
test
xchg
ja
insl
and
loope
sub
add
add
and
add
loopne
rcrl
test
mov
hlt
xchg
bound
sub
or
push
push
xchg
mov
adc
adc
out
leave
call
test
test
xchg
hlt
imul
or
mov
dec
aas
push
and
add
mov
pop
pop
call
and
loopne
and
mov
push
mov
push
enter
cmp
push
jo
divl
orl
or
push
lods
shl
push
mov
jo
loop
push
mov
and
inc
mov
in
movzwl
cmp
sbb
add
pop
fstl
sahf
cmp
mov
and
icebp
pop
mov
or
jl
xchg
pop
gs
test
arpl
cmp
mov
iret
mov
or
push
xchg
jnp
adc
aam
sub
sbb
adc
jae
ja
call
add
add
mov
push
jp
push
pushf
sbb
push
rolb
movb
fimuls
cmpb
push
fs
rcl
enter
dec
int3
inc
cmp
adc
mov
mov
das
pop
bnd
mov
inc
or
call
test
xor
lret
fnstenv
popa
fwait
clc
sbb
sbb
adc
je
or
cmp
std
out
mov
xor
mov
shr
mov
xchg
mov
mov
jbe
divl
push
addb
fsubrp
or
lret
adcb
popl
rcrb
jg
push
das
inc
jne
push
xchg
mov
or
push
jbe
dec
movsbl
sub
xlat
sub
adc
adc
and
pop
pop
repnz
paddb
push
mov
sub
sbb
sub
adc
dec
dec
call
push
xchg
sbb
jb
or
shrb
mov
and
xor
cmpsl
add
jo
in
sub
pusha
jl
push
or
mov
inc
add
scas
cwtl
xor
sub
sbb
sub
adcl
std
cmp
je
inc
push
cvttps2pi
or
pop
in
push
or
sbbb
and
mov
adc
test
aad
sub
lcall
pop
cli
adc
push
cmpsb
sarb
cli
add
hlt
add
cmp
inc
pop
inc
imul
loop
or
xchg
lret
addb
inc
lods
jbe
push
mov
std
imul
repz
push
add
cmp
cmp
add
push
cmp
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
dec
fcmovu
fcompl
jmp
and
or
mov
and
pop
hlt
inc
clts
ss
inc
repz
xor
inc
jecxz
lods
push
adc
rcrl
insb
xor
add
mov
cmp
test
cmp
repz
into
rcr
repz
loop
in
icebp
idiv
repz
cmp
or
adc
repz
sbb
and
sub
cmp
cmp
inc
aas
sti
scas
xor
fadds
add
and
or
or
push
push
sti
decl
adc
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
mov
sbb
fdivr
pop
push
lahf
popa
inc
fcomps
dec
inc
xor
xor
xlat
aam
sub
xchg
and
inc
adc
pop
dec
sti
jo
fnstcw
inc
add
divl
or
add
push
add
or
jo
out
daa
xor
pop
add
and
jnp
push
or
mov
cmpsb
ficoml
fwait
xorb
xchg
test
and
mov
or
push
sub
cmp
sbb
pop
add
jns
push
pushf
daa
pushf
sub
js
mov
enter
sub
cmp
sbb
movsl
icebp
arpl
lods
sbb
mov
jb
ds
mov
mov
cmp
sub
sub
xor
data16
popa
or
sbb
daa
sbb
add
test
add
fwait
lahf
and
gs
fcoml
es
inc
push
mov
pop
sub
cmp
sub
inc
out
shlb
imul
and
jmp
decl
in
inc
jge
sub
xlat
push
inc
fidivrl
sbb
xor
mov
adc
mov
sub
lea
and
ss
mov
sbb
or
push
movb
icebp
aas
mov
mov
ret
movl
mov
sbb
insl
add
cmp
sahf
aas
or
inc
lods
jmp
add
add
data16
add
ret
ficompl
sub
ds
add
incl
daa
lea
imul
cmp
ja
in
or
fmull
fmuls
dec
imul
add
inc
or
or
xor
pop
jmp
jo
push
fs
adc
add
sbb
push
push
ret
push
xorb
cs
cmp
add
pop
mov
mov
and
out
mov
add
push
jmp
cli
inc
pop
or
test
stos
xchg
icebp
ss
sbb
mov
insl
jg
popf
nop
mov
loope
clc
xor
les
mov
and
lock
enter
adc
adc
xchg
lea
push
cmp
ljmp
movl
loop
mov
push
adc
and
outsl
roll
lret
out
push
pop
arpl
enter
mov
dec
dec
mov
mov
sbb
mov
cmp
and
pop
cltd
and
enter
mov
cmp
xchg
add
sbb
add
and
mov
pop
pop
add
xchg
sbb
push
xchg
push
inc
jnp
add
jmp
sbb
pop
xchg
hlt
fidivrl
cmp
jl,pn
or
sbb
test
sbb
pop
lods
pop
adc
lock
add
cli
es
lea
cmp
ret
add
jg
and
or
js
mov
inc
insb
xor
rolb
pushf
push
push
jge
mov
aad
or
xor
cmpb
pop
idivl
mov
cmp
jl
dec
ficompl
mov
je
jae
test
pusha
and
mov
pushf
cwtl
sbb
and
movzbl
inc
pushf
orl
bound
testl
xor
pop
push
adc
jmp
mov
pop
andl
inc
push
pop
push
inc
jecxz
addl
jl
loopne
mov
mov
or
mov
lods
add
inc
mov
inc
outsl
xor
add
lahf
cltd
fidivl
xchg
lock
jmp
nop
jbe
cwtl
test
adc
icebp
fwait
and
cmpsb
mov
cmp
dec
or
dec
inc
in
xor
inc
mov
mov
or
add
enter
mov
es
and
add
pop
repz
pop
pop
lea
push
sbb
or
adc
mov
mov
dec
xor
mov
adc
and
jmp
jae
xchg
jo
cmp
sbb
sarl
add
insl
stos
mov
adc
gs
cmp
roll
and
out
xchg
nop
rorb
leave
or
nop
fs
sub
mov
fbld
pop
dec
pushf
rolb
rcl
or
scas
inc
add
push
jg
add
divl
scas
push
sbb
inc
add
nop
pop
enter
xor
xor
js
cmc
and
push
cmpb
add
and
dec
sbb
push
ljmp
ret
adc
filds
pop
lock
jmp
push
bound
pop
pop
mov
jno
pop
insl
push
lahf
insl
xor
pop
clc
je
cmp
push
bound
shll
sbb
cmp
loope
aam
arpl
test
fs
push
sbb
push
mov
and
pop
or
sub
mov
lods
sbb
dec
insb
mov
or
inc
push
mov
inc
insl
push
jle
jmp
imull
pop
dec
jle
or
inc
push
push
xchg
mov
jg
sub
fbld
enter
fisttpl
daa
or
push
les
xchg
adc
lret
xchg
loopne
cld
mov
je
ss
xor
and
mov
or
sbb
jbe
xchg
rcrb
xor
dec
sarb
adc
es
cmp
scas
shll
nop
sbb
add
out
rorb
rorb
sub
daa
inc
fcompl
rclb
dec
add
jnp
out
test
sbb
cmp
into
inc
in
pop
dec
push
nop
pop
sub
stc
jge
push
inc
sub
adc
pusha
insb
or
inc
popa
xor
dec
cmc
cs
call
inc
push
sub
adc
xor
fbstp
cmpsl
mov
mov
push
cld
cmpsb
lock
pop
cmpsb
sahf
or
in
arpl
inc
fisttpl
cmp
and
mov
add
dec
les
xlat
sbb
shrb
xchg
or
push
icebp
mov
addl
xor
lea
in
mov
sahf
cmp
shll
inc
pop
inc
scas
popa
shlb
in
nop
jl
pushf
adc
stc
push
add
ret
sbb
ret
add
icebp
rorl
mov
dec
int
cmpsl
jno
adc
add
cmp
xor
push
loopne
push
mov
call
jns
fwait
jae
test
pop
push
jmp
fwait
cld
cmpl
pushf
xchg
mov
adc
mov
loop
aam
jne
pop
or
mov
test
pop
adc
cli
sbb
enter
push
push
xchg
daa
js
sbb
jmp
lods
je
inc
mov
push
hlt
pop
and
and
add
dec
nop
add
in
je
lea
pusha
jo
ror
xor
mov
xor
fdivs
inc
push
inc
fstp
or
js
push
adc
push
lods
dec
sub
pusha
lods
inc
aam
ljmp
sub
mov
adc
sub
loope
mov
or
fnstsw
negl
pop
ss
fisubl
mov
pop
or
ds
push
or
cmp
push
andl
rolb
mov
clc
pop
enter
cmpsl
test
cmp
cmpb
andl
lock
xchg
inc
dec
pop
dec
enter
jmp
mov
or
repnz
push
stc
xchg
inc
pusha
movsb
mov
ds
lcall
mov
dec
pop
imul
sub
stos
mov
xchg
rcl
pop
pop
enter
sub
lock
push
xor
lods
pop
sbb
mov
insb
sbbl
idivb
je
sti
arpl
dec
enter
push
lea
cmp
shl
xor
in
pop
es
add
pusha
adc
mov
and
jo
adc
imul
cmp
sbb
sub
sub
fwait
lds
cltd
and
jg
mov
xor
leave
inc
hlt
js
fsubrs
push
mov
and
addr16
inc
inc
jb
popa
sub
pusha
adc
xor
das
push
jb
cmpsb
mov
popf
and
enter
adc
push
enter
xor
pop
insb
iret
inc
and
test
add
or
insb
hlt
mov
sbb
mov
push
and
and
andl
pop
sbb
cmp
sbb
push
push
dec
adc
cmp
imul
add
pop
fcmovne
mov
movb
lock
xchg
and
rcll
cltd
pop
movsl
out
sbb
outsl
mov
jo
repz
leave
add
pop
je
adc
push
adc
fiadds
stos
iret
lea
push
insb
mov
or
jne
push
inc
enter
daa
mov
inc
scas
mov
ret
adc
repnz
fildl
daa
popa
adc
test
lods
lods
test
ss
mov
xor
fmuls
sbb
int
cmp
jne
and
in
cmpb
mov
mov
jl
fcoml
pusha
decl
inc
sbb
xor
or
push
push
aaa
mov
aaa
inc
mov
mov
xchg
dec
rcr
addr16
lock
jge
mov
or
add
out
dec
and
or
dec
int3
subb
sub
pop
pop
add
or
adc
adc
mull
jnp
loopne
inc
fstpl
inc
mov
bound
push
or
xor
cs
push
dec
ficoms
into
dec
or
adc
or
addr16
pop
test
xor
xchg
in
mov
xchg
repnz
mov
test
xchg
add
add
loope
and
add
mov
mov
xor
mov
je
andb
or
test
repnz
push
cmp
mov
lock
inc
pusha
cmp
inc
cmp
aam
mov
mov
les
pop
adc
mov
inc
rorb
insb
adc
daa
dec
je
cmp
imul
sub
push
cmp
jge
mov
or
inc
inc
inc
mov
add
xchg
and
mov
in
pop
sub
push
or
sahf
bound
loopne
shlb
in
and
lock
das
das
hlt
clc
clc
cld
mov
rcrb
or
add
cs
add
jb
push
inc
add
add
add
xor
push
and
fwait
idivb
xor
dec
je
add
adc
cmp
dec
pop
push
mov
shr
sbb
loopne
lret
lcall
adc
outsb
xchg
adc
scas
lcall
dec
or
pusha
sbb
adc
jnp
test
adcl
je
dec
je
sub
add
out
loop
movb
adc
mov
sub
inc
add
jmp
sub
icebp
ljmp
xchg
movsb
add
push
add
jne
push
rcrl
sbb
adc
mov
arpl
roll
xor
lock
jo
inc
inc
loop
xor
inc
cmpb
inc
xor
sbb
gs
cltd
idiv
inc
inc
imul
inc
pop
mov
push
mov
lock
mov
and
or
daa
je
cmpsb
loopne
popa
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
cmp
je
dec
dec
pop
jbe
push
fidivrl
jmp
daa
pop
out
and
pop
adc
jo
daa
fmuls
inc
aad
xor
repnz
cld
insl
addr16
jae
add
inc
fwait
mov
jp
dec
mov
pop
jne
decb
aaa
cld
jbe
inc
movsl
adc
cmp
je
cmp
pop
cmp
je
es
incl
cmp
inc
jne
mov
sub
or
adc
add
inc
rcl
arpl
pop
mov
jb
mov
nop
cmp
add
jg
popa
cmp
jne
push
add
sub
arpl
mov
jne
mov
cmp
push
jg
loope
push
push
rorl
nop
aas
loop
fisttpl
sub
jmp
push
jl
or
jg
movsl
std
adc
jmp
popa
data16
jae
push
jmp
inc
jl
inc
jg
aaa
movsb
fucomp
mov
shl
dec
mov
sub
mov
inc
addr16
mov
mov
into
les
outsl
adc
test
xor
decl
and
inc
cltd
clc
xor
test
arpl
loop
and
mov
pop
or
push
xlat
loopne
xor
adc
mov
sub
aaa
sub
dec
xchg
xchg
push
push
inc
orl
pusha
mov
jg
sub
in
cli
popa
fs
imul
mov
mov
rcll
push
inc
cmpb
ret
lcall
push
sarl
sub
incb
inc
and
imul
arpl
pop
cmp
push
xor
fsubs
cmp
cmpb
mov
faddl
ficoml
cmp
push
mov
inc
inc
out
jmp
xor
lea
and
xchg
loopne
sub
xchg
test
pop
xor
hlt
pop
xor
sarb
adc
push
cmp
dec
subb
fcoms
add
mov
out
cli
push
cmp
je
add
add
adc
xor
and
mov
mov
push
clc
inc
sub
lret
inc
pop
je
js
jecxz
add
jne
mov
mov
cld
push
cltd
flds
jmp
pop
push
sub
or
pop
mov
gs
shr
pop
adc
je
movsl
xor
push
and
or
sahf
sbb
lods
jp
ret
or
iret
adc
psraw
lock
loope
jge
popa
out
pop
imul
aaa
adc
cmc
dec
dec
clc
andl
sub
shr
add
dec
int3
push
push
sbb
push
add
mov
inc
in
mov
push
lock
sub
adc
jne
movaps
xor
ljmp
pusha
jns
lods
pop
push
add
repz
and
mov
subl
xor
inc
pusha
or
inc
adc
sub
cmp
and
mov
xchg
cltd
cmp
lea
and
xchg
or
sbb
jne
stc
stos
fisttps
add
push
adc
inc
aaa
mov
imul
jmp
rolb
mov
shlb
push
add
pop
les
ss
mov
adc
call
shll
imul
and
aam
adc
addb
or
ret
pop
push
vpandn
aas
mov
movb
mov
addl
xor
add
incl
cmp
loope
je
imul
inc
loop
pushf
cmp
inc
add
or
ja
xchg
call
or
ret
test
pop
stc
cmp
inc
test
xchg
sbb
mov
pusha
xchg
jnp
cmp
push
mov
mov
dec
xor
addr16
or
push
aaa
repnz
imul
daa
mov
pop
enter
outsl
and
and
cmp
mov
ret
or
movb
jbe
call
dec
sbb
push
or
add
inc
cmpsb
lods
jg
inc
push
cmpb
jne
popa
or
mov
sbb
cmp
mull
dec
movsl
add
sbb
pop
rcrl
push
fsts
in
je
clc
sub
mov
push
and
sub
adc
mov
adc
mov
mov
sar
inc
inc
or
mov
or
test
cli
jns
lock
mov
or
add
incb
aaa
out
fs
mov
fisttps
fiaddl
cmp
jecxz
sahf
mov
popl
pop
repnz
push
loopne
or
fimull
loopnew
les
mov
mov
push
addb
rorl
sub
or
jnp
in
out
and
or
push
mov
mov
add
scas
jnp
dec
or
push
ret
push
sbb
in
dec
test
inc
test
cltd
inc
es
test
push
bound
pop
sub
and
add
cs
mov
je
inc
add
sbb
pop
xchg
subb
dec
scas
add
data16
pop
pop
aaa
les
daa
movsl
xor
inc
mov
fisttps
sbb
cmp
xor
pop
lock
scas
push
shrl
add
adc
and
xlat
add
cmp
js
lret
push
jo
fimuls
push
jl
or
mov
lock
jno
push
push
mov
in
add
xchg
pop
test
add
lret
call
inc
push
jecxz
xchg
cli
xchg
sar
nop
and
inc
stos
mov
loop
inc
push
sub
push
addr16
pop
inc
cmc
add
mov
or
and
add
pop
pop
mov
jmp
cltd
sbb
jge
insl
test
fwait
pusha
popa
push
leave
cmp
sahf
sub
lods
bound
xchg
jle
xchg
push
jae
out
xchg
dec
js
pop
xor
lea
mov
inc
xor
cmp
jb
sbb
aas
push
dec
pushl
mov
mov
inc
cmp
push
fadd
je
ret
test
sbb
ret
sbb
push
or
aaa
lock
add
add
sbb
sub
movl
lret
mov
ljmp
mov
pop
aas
push
mov
cwtl
pop
dec
jne
jge
mov
je
cmp
not
mov
xchg
stos
jne
jbe
cmpsb
cmp
or
add
cmp
mov
dec
pop
adc
jle
inc
push
lahf
push
inc
pop
xor
mov
mov
xchg
rolb
call
push
ret
jo
mov
adc
mov
and
add
dec
and
je
inc
rcrb
cmp
add
sti
fnstenv
add
or
push
mov
fldenv
in
mov
pop
add
sub
mov
push
cmp
adc
jns
cmp
into
das
sti
mov
arpl
mov
cmpsb
inc
stc
cmp
jo
inc
cmpsl
mov
ja
daa
jne
xor
jo
adc
and
sbb
inc
jmp
push
lea
lods
xchg
mov
jmp
xor
push
mov
inc
add
in
fimull
aam
shlb
adc
mov
daa
inc
jne
inc
pop
xchg
ljmp
pop
pusha
mov
addr16
fmull
ds
dec
aaa
jo
sub
shl
sbb
adc
or
in
clc
sbb
push
in
stos
push
dec
scas
lock
cli
jne
sti
dec
adc
adc
pusha
sub
sti
cmc
inc
mov
dec
mov
loopne
mov
jecxz
cmp
je
pop
movsb
push
sub
nop
dec
rcll
or
into
xor
push
mov
and
sbb
and
rolb
movsb
cmp
jge
dec
pop
mov
je
mov
or
push
xor
mov
xchg
mov
inc
sub
xchg
inc
xor
cmp
sbb
push
int
xchg
and
xor
aaa
mov
pop
in
movl
add
push
pop
push
in
mov
xchg
outsb
jo
pop
clc
add
arpl
or
inc
adc
xchg
rolb
add
enter
movb
or
loopne
or
mov
mov
idivb
dec
sbb
mov
push
add
jl
movsb
jmp
addb
cmp
pop
add
and
loope
fs
in
insl
push
xor
pusha
das
shr
sbb
cmpsl
jmp
push
popf
add
jl
lds
test
fsubrl
rolb
push
or
mov
jl
mov
adc
jo
inc
xor
orb
daa
sub
aam
add
shll
adc
leave
and
inc
or
rorb
dec
pop
jge
xchg
jl
add
push
sbb
notb
outsb
push
lret
pop
orl
fsub
adc
aam
loopne
in
or
push
test
or
add
dec
pop
rorb
sti
cli
aam
mov
mov
pop
hlt
cmp
fadds
insl
adc
xchg
in
shll
je
scas
mov
test
lods
dec
or
push
fwait
push
push
pop
or
into
lds
push
cmp
sub
mov
jl
data16
add
mov
movb
ss
push
insl
sahf
aam
add
inc
sub
adc
inc
cmpb
or
adc
sbb
mov
dec
xor
sarl
js
mov
test
cld
dec
xchg
mov
xor
jmp
fiaddl
or
jbe
out
call
inc
or
jp
adc
cmp
lea
addb
inc
and
sbb
mov
cwtl
out
xchg
fsubrs
jns
pusha
cmp
notb
inc
mov
push
ret
pop
and
outsl
jae
add
test
sbb
cmp
pusha
cmp
stos
or
lahf
jb
adcb
in
xorb
jno
mov
repnz
xchg
lcall
lds
push
mov
insb
aam
adc
mov
sarb
inc
adc
or
push
push
jne
mov
adc
adc
push
mov
sbb
aam
mov
xchg
clc
insl
push
daa
and
js
ljmp
push
movl
lahf
jo
push
sti
xchg
inc
sahf
outsl
or
or
push
lock
popf
sub
or
sbb
int
cmc
dec
in
adc
mov
ja
cmp
and
repz
call
or
sbb
jns
mov
inc
or
push
ret
shl
push
dec
sub
punpckhbw
mov
sub
adc
push
and
mov
js
or
xchg
or
dec
mov
mov
sbb
xor
xlat
jo
xor
pop
mov
cmp
rcll
sbb
inc
sub
adc
into
imul
out
cmp
dec
aad
ret
jl
or
lds
and
inc
pop
mov
sbb
cmpl
or
inc
jne
pop
push
jae
mov
pop
cwtl
mov
icebp
pop
jg
jo
rcrb
inc
xorb
dec
jae
xor
push
or
mov
xor
pop
imul
jmp
lea
fdivrp
dec
daa
inc
mov
mov
mov
jmp
dec
and
xchg
or
add
cmpl
test
lds
pusha
sbb
adc
and
pusha
sbb
movsl
push
mov
or
sub
loopne
out
pop
and
std
test
adc
ud2
js
jo
mov
js
or
inc
sub
push
and
sbb
mov
sbbb
outsl
and
jl,pt
jp
pop
jmp
sarb
or
mov
pushw
adc
xor
adc
pop
mov
mov
movsl
push
inc
js
jmp
out
jae
cmp
pop
mov
jecxz
mov
jmp
aaa
or
and
adc
add
stos
push
test
xchg
adc
aaa
cmp
dec
jmp
mov
rorb
cmp
or
shr
rep
adc
data16
xor
mov
lret
adc
fs
jb
pop
jo
sbb
enter
pop
and
add
pop
mov
inc
stc
addb
mov
in
push
sbb
jne
and
sbb
test
cmp
ja
jg
pushf
dec
testb
data16
push
adc
mov
jl
dec
inc
imul
je
pusha
dec
jnp
lods
lcall
cmp
add
je
shrb
and
call
sbb
outsl
daa
aad
mov
lock
push
jmp
xor
jne
sarb
lds
add
push
pushf
rorb
pop
pop
xlat
pop
js
in
leave
aam
pop
scas
or
aam
in
mov
ficoml
fsubp
add
and
cmpl
and
insl
loopne
push
faddl
outsb
add
fadd
pop
sti
shlb
popf
loope
cmpsb
in
popa
add
subb
rorb
sbb
sub
pop
mov
push
xchg
adcb
cmpsl
adc
pop
jo
mov
adc
pop
xor
pusha
inc
mov
xor
pop
adc
or
adc
pop
jle
or
push
jle
cmp
dec
pop
call
inc
popa
loopne
inc
cs
xchg
fisttps
aas
xor
inc
das
add
loopne
enter
sbb
sarb
movhpd
ret
or
cmp
mov
sub
cmpsb
rcrb
add
sub
jmp
loop
outsb
movsb
pop
in
mov
fiadds
sub
push
push
ja
add
xor
aad
xchg
sub
fwait
pop
push
ljmp
testl
jmp
jecxz
sub
inc
loope
cmp
arpl
mov
xor
inc
shrb
insb
inc
cld
sbb
cmpb
sbbl
fadds
jne
aam
loopne
sub
push
aam
dec
xchg
ret
dec
adc
bound
ret
mov
popf
fwait
aam
comiss
ds
cmp
sub
je
pop
sub
das
sar
xor
in
ficoms
jbe
mov
fiaddl
push
push
mov
sbb
xchg
adc
push
mov
push
push
ljmp
ss
pop
ret
ret
call
or
xchg
sub
ret
mull
test
test
push
pop
dec
add
cmp
jle
pop
dec
pop
imul
popa
dec
fs
shlb
leave
pop
or
sub
mov
mov
or
dec
enter
testl
push
jmp
es
adc
lods
inc
cmp
xchg
pop
in
and
cmp
mov
lock
lret
push
addr16
add
rolb
pop
push
test
lret
movl
xor
ret
sub
xchg
push
movb
sbb
cli
pop
inc
lock
mov
jbe
sub
dec
adcb
sbbb
cmp
ljmp
fwait
jno
dec
insb
pop
clc
and
push
cmp
jecxz
hlt
xchg
jo
jp
mov
cmp
sbb
scas
xchg
jno
loop
lcall
subl
enter
xchg
pop
shrb
mov
push
add
push
movl
das
mov
mov
arpl
mov
or
jb
data16
sub
mov
dec
mov
xchg
mov
add
or
xchg
sbb
or
dec
shll
jbe
inc
sbb
xor
jne
push
scas
and
pusha
mov
cwtl
mov
bound
lret
jne
push
sub
in
js
cmp
jmp
imulb
jns,pn
jle
push
xor
pop
div
pushf
inc
les
inc
or
mov
ljmp
js
xchg
push
sub
fdivp
xchg
push
adc
cmp
mov
test
adc
fiaddl
call
cmp
sbb
adc
xchg
push
adc
add
jo
and
cmp
das
movb
sbb
shrb
sbbl
jne
or
pop
pop
pop
fprem
cmpsl
mov
dec
mov
cmp
shrl
ret
jo
sbb
adc
fbstp
sbb
sub
jne
bound
shll
adcl
cmpsl
lret
fisubrl
stos
lcall
aam
icebp
ud2
dec
ds
shrb
pop
cmp
pop
xchg
inc
push
cld
mov
add
mov
jno
or
scas
pop
and
outsb
pushl
sub
and
sbbb
jge
sub
fnstcw
pushf
add
and
clc
jg
fs
std
sti
mov
test
movd
movaps
fldt
enter
shlb
jle
xor
jmp
rcl
lret
je
cmp
mov
pop
jge
repz
or
jg
dec
xor
xlat
mov
xchg
ret
adc
jnp
mov
adc
and
aam
ret
or
js
inc
fisubl
and
lahf
pop
iret
outsb
fisubrs
ret
mov
lock
mov
mov
mov
mov
fldl
sbb
sbb
inc
pop
inc
inc
jno
xor
mov
lods
dec
mov
push
lret
and
fsubl
dec
pusha
movsl
lock
mov
add
fcoms
sub
lds
jb
adc
aaa
push
mov
push
sub
adc
add
or
inc
sub
icebp
clc
inc
or
ja
mov
cmpsb
xchg
pop
loopne
mov
je
cmp
je
cmpb
ds
repnz
adcb
pushf
mov
inc
inc
and
fmul
adc
adc
push
or
mov
arpl
ret
push
dec
pop
andl
ljmp
push
jge
lock
push
cmp
add
add
dec
mov
inc
xchg
dec
cmpsl
or
and
test
xor
daa
js
in
or
xor
xor
mov
mov
xor
jo
sbb
lcall
inc
in
outsl
push
mov
adc
jge
jns,pn
and
pop
addr16
jno
add
add
inc
push
jne
xchg
mov
addr16
ficompl
and
out
adc
sbb
mov
xchg
movb
loope
arpl
pushf
pop
addr16
lods
in
or
adc
popa
xchg
xor
dec
outsb
dec
cmp
push
dec
sarl
rclb
shlb
idivb
mov
xor
mov
jnp
je
jp
leave
xlat
xchg
pushf
cwtl
or
in
popfw
mov
xchg
dec
pop
and
sub
pop
ja
pop
inc
outsb
pop
cmp
jmp
lds
pop
mov
bswap
out
testb
sbb
mov
jne
orl
jecxz
sbb
mov
loop
add
cltd
xchg
add
mov
adc
and
add
or
or
rol
inc
cmp
xchg
push
and
mov
cmp
int3
shl
icebp
and
out
in
movsb
aas
mov
out
repz
add
adcb
out
dec
xchg
inc
sub
sahf
gs
faddl
or
push
dec
gs
ljmp
pop
sub
cmp
shlb
aas
mov
add
xor
push
add
fldcw
mov
je
and
add
inc
add
lock
popl
cmp
jns
cmp
lahf
cwtl
adc
dec
xor
add
pop
shr
arpl
pop
enter
loop
icebp
mov
dec
repz
rcl
mov
mov
pop
sub
adc
aaa
or
cwtl
mov
mov
movsb
pop
inc
inc
or
sub
hlt
xchg
lock
mov
jne
jne
lock
insl
cmp
aad
jo
lea
lock
dec
jne
out
or
xchg
aaa
jmp
and
ret
mov
sbb
mov
cmp
icebp
cmpb
shl
or
cmp
jne
dec
jmp
pushfw
or
repnz
xor
je
std
mov
jne
inc
aaa
push
lds
mov
push
loope
enter
cmp
cmp
pop
leave
mov
xor
push
push
add
and
and
bound
jbe
cmp
or
inc
imul
cmp
add
adc
lods
test
test
ja
pop
xchg
aad
lret
adc
fidivs
sub
push
add
push
pop
shrl
or
mov
sub
rolb
fsubs
ja
or
add
dec
xchg
clc
mov
adc
ret
movsl
add
push
mov
push
mov
sti
pop
pusha
push
dec
inc
fwait
cmc
mov
imull
cmp
xor
mov
xor
cmpsb
arpl
jecxz
sbb
cmp
imul
pop
ret
enter
and
repz
xchg
lahf
fdivrs
or
cmp
mov
add
lcall
mov
cmp
fwait
in
lods
jb
and
dec
sbb
and
shrl
jno
dec
sbb
push
inc
sub
cs
push
cmp
mov
adc
fildl
dec
push
cmc
xchg
jmp
mov
cmpsb
cli
aaa
pop
les
fstpt
adc
add
lea
cmp
or
sbb
jmp
sub
cmp
mov
aam
adc
or
add
ret
xchg
mov
hlt
sbb
jo
jno
cltd
cmp
sub
add
ds
jle
push
xor
pop
add
pop
inc
icebp
push
xor
popa
mov
adc
nop
pop
dec
pop
add
adc
xor
mov
lock
cmpl
mov
sbb
cmpl
or
insl
add
mov
adc
popf
pop
xchg
xor
stc
lods
pop
mov
sbb
cmp
mov
xchg
dec
imul
xor
test
lcall
outsl
test
mov
and
mov
jo
adc
adc
rcl
push
or
dec
xchg
jp
add
fiaddl
les
dec
push
dec
lahf
xchg
dec
mov
push
sbb
xchg
sub
repnz
cmp
jne
ss
negl
or
cs
or
xchg
xchg
add
push
outsb
pop
loopne
les
mov
cmp
xchg
push
aas
push
fwait
in
push
xchg
scas
test
stos
fcmovb
bound
out
push
jnp
inc
mov
jl
loopne
cmp
and
xlat
fs
push
push
lods
lods
js
push
ljmp
add
sub
add
fsubrp
push
push
sub
fisttps
ss
push
js
data16
in
js
or
pop
addr16
sbb
xor
outsl
xor
je
pop
pop
gs
adc
pop
sbb
pop
icebp
or
shl
cli
push
ret
push
scas
push
orl
clc
jle
push
or
or
jbe
lea
adc
sbb
jp
or
and
enter
roll
sbb
iret
dec
inc
pusha
cld
jb
push
clc
jbe
add
push
addr16
cmpsl
and
test
adc
cmp
fwait
jmp
mov
mov
cmp
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
mov
add
adc
cmpsb
mov
pop
fistl
or
int
xor
hlt
test
cld
pop
icebp
in
jecxz
loope,pt
xor
add
and
faddp
mov
sub
pusha
mov
fnstcw
xor
push
xor
cmp
icebp
or
mov
js
hlt
pop
lods
pushf
adc
out
push
mov
sbb
leave
loopne
adc
add
inc
adc
js
adc
inc
or
ror
or
sahf
out
mov
inc
sbb
test
shl
push
mov
inc
sub
push
call
cmp
loopne
test
pop
pop
mov
cmp
jmp
inc
das
xor
ret
fsts
push
rcrl
adc
fstpl
push
inc
rolb
sbb
mov
add
test
repnz
loop
cmp
add
dec
jne
jmp
movsl
aam
lcall
add
daa
push
dec
es
jne
mov
cmc
xor
sahf
xchg
inc
push
add
mov
pop
xor
enter
jge
push
sub
mov
mov
js
jno
inc
mov
test
outsb
into
aam
gs
adc
add
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
loopne
pop
fcom
or
scas
test
inc
incl
dec
or
adc
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
mov
call
or
out
or
dec
jl
pusha
add
cmp
push
mov
mov
outsb
add
jb
jae
daa
cmpl
in
shlb
loope
repnz
and
xchg
jbe
cmp
jns
je
inc
mov
cmp
js
inc
lret
lea
adc
subb
add
inc
xor
in
sbb
adc
inc
push
nop
andl
orl
adc
pop
pop
movsl
je
adc
inc
loopne
xchg
push
and
andl
jp
push
sbb
sbb
ficoml
test
push
sub
xor
or
mov
inc
ficoml
xchg
add
dec
fs
pop
add
xlat
xchg
insl
out
jne
clc
mov
je
mov
mov
jg
xor
cmp
jg
add
mov
or
mov
jnp
sub
jo
mov
sbb
sub
push
push
push
jp
jbe
push
adc
jnp
jo
in
push
jae
out
or
sbbb
cmp
inc
and
loopne
ja
jb
lea
outsb
jno
sbb
jmp
jno
nop
decl
std
jmp
inc
jo
add
loopne
arpl
addl
lock
dec
cld
xchg
sub
sub
cmp
call
sub
add
mov
mov
xchg
ficoms
xchg
add
gs
push
addl
rcr
loopne
xchg
shlb
adc
adc
inc
mov
in
mov
bound
ret
dec
xchg
es
xor
ljmp
or
jbe
or
jo
nop
sbb
push
pop
fdivs
fisttps
pop
fdivr
ja
fmuls
lock
and
sub
roll
add
push
add
stos
xchg
xor
push
mov
add
call
add
push
xor
lahf
inc
int
push
add
and
adc
dec
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
repnz
js
incb
mov
inc
je
mov
sti
outsl
dec
mov
stc
sbb
or
add
jmp
or
add
jl
mov
inc
inc
push
add
je
out
or
push
scas
mov
pop
mov
cmp
mov
inc
cmp
jb
pop
jbe
add
jae
and
stos
clc
cld
dec
leave
jl
add
adc
fidivrl
ret
lea
and
subb
inc
or
fdiv
mov
test
or
inc
and
sub
mov
mov
push
adc
decb
xor
xor
add
and
pushl
iret
xor
jo
and
or
xorl
add
mov
outsb
out
jne
adc
test
data16
out
cmp
je
test
je
cmp
movsb
out
and
fdivrl
aam
xchg
pop
addr16
outsb
or
inc
lret
cld
aaa
sbb
loopne
xor
lock
inc
jl
mov
xchg
xor
lock
lock
dec
mov
outsb
push
ror
jl
and
lret
push
mov
loopne
out
mov
add
sub
inc
rolb
cmc
inc
jmp
jo
xchg
xor
inc
fistpl
outsl
jns
pop
inc
jmp
cmp
sbb
jmp
adc
jne
adc
mov
xor
stos
pop
inc
mov
jg
mov
adc
mov
cmp
je
cmp
and
or
adc
add
jne
mov
fmuls
fmuls
xor
mov
aam
sahf
adc
add
loop
je
lret
xor
cmp
dec
cld
push
add
xchg
testb
sub
push
mov
jmp
loopne
or
les
or
sub
xor
push
add
add
dec
add
and
sarb
fs
push
rclb
shl
push
push
mov
mov
sbb
xor
adc
bound
fidivl
xor
inc
sub
das
cmp
stos
cmp
push
insb
adc
add
outsb
movsb
or
dec
jp
xor
adc
or
les
jle
xor
jne
mov
out
dec
jg
pop
lock
mov
inc
mov
dec
jne
adc
push
inc
loope
add
push
in
add
pop
and
pop
js
sbbb
sub
xlat
rcl
xchg
lds
push
xor
add
xor
addl
rcrl
ret
inc
daa
cmp
dec
or
scas
sbb
nop
dec
mov
add
pop
insb
sbb
xchg
nop
add
sub
loopne
jne
add
pop
push
push
xchg
lods
aaa
or
dec
lea
loope
push
adc
mov
inc
jb
lea
push
adc
jbe
sub
test
mov
loopne
and
push
pop
cmp
cmp
sub
adc
lcall
mov
mov
inc
scas
and
or
rorl
mov
dec
inc
jl
mov
and
or
popa
jne
or
testl
pop
or
in
jmp
mov
pop
lret
dec
xchg
test
test
iret
and
jg
sbb
stos
in
sub
test
in
icebp
add
sub
or
pop
ret
xor
push
mov
push
add
cld
add
mov
add
es
add
mov
or
adc
stos
push
push
mov
pop
jp
inc
jb
outsb
clc
pusha
hlt
inc
push
in
xor
inc
jecxz
cltd
scas
nop
leave
inc
sub
pop
lret
pop
test
add
or
mul
in
sub
mov
mov
inc
mov
inc
sar
add
mov
mov
mov
adc
rolb
cmp
pop
rcrl
daa
frstor
fiaddl
out
inc
rcrb
cmp
adc
shrb
adc
or
push
into
and
add
jmp
xor
stos
add
sahf
dec
jle
mov
in
mov
pop
sbb
jne
ja
cmovg
mov
jp
pop
or
dec
push
js
jne
pusha
mov
subb
call
roll
pushf
sub
jb
out
dec
dec
jbe
sbb
rorb
inc
jae
jo
adc
adc
clc
push
dec
loopne
in
lret
adc
add
sbb
insb
push
sub
dec
add
pop
addl
decl
cmp
icebp
jne
pop
xor
fiadds
mov
jbe
lods
cltd
pop
idiv
lea
push
mov
mov
aad
loopne
in
enter
xchg
stos
push
push
mov
pusha
adc
rorl
into
xchg
xor
xor
sub
push
mov
ficoml
add
jbe
loopne
dec
cs
imul
cwtl
push
pop
push
ret
inc
pop
aam
and
mov
out
sbb
mov
sub
dec
mov
addb
adc
adc
push
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
pop
or
dec
clc
notb
testb
ja
cs
and
xchg
loopne
mov
lock
shrb
test
push
add
mov
call
xchg
or
push
push
sub
test
lock
in
mov
adc
and
lods
add
addl
hlt
mov
sbb
cmp
mov
cmp
push
hlt
addb
sbb
ret
adc
mov
fcoml
sahf
test
idiv
adc
dec
loope
outsb
clc
fs
cmpsl
add
sbb
adc
adc
sub
jo
mov
pop
call
xor
jo
jmp
dec
je
fimuls
or
pop
push
dec
push
or
insl
push
mov
add
in
jmp
sub
push
push
in
mov
mov
sbb
mov
push
push
les
lea
test
orb
pop
adc
fistl
mov
popw
js
push
xchg
push
fimull
push
push
cmp
push
jne
mov
addr16
add
push
dec
es
xchg
dec
xor
inc
jne
push
jns
fs
jnp
cmp
push
dec
mov
jbe
and
test
movsb
dec
lret
enter
cmovp
insb
dec
or
pushf
into
mov
pusha
mov
mov
push
addl
rcll
iret
or
js
jbe
xchg
pop
xchg
push
leave
add
ja
out
jns
pop
rorb
add
dec
push
test
push
jmp
xor
sub
dec
pop
push
pop
mov
inc
scas
adc
sub
or
mov
jecxz
imul
sbbb
add
pop
daa
mov
jmp
cmp
jae
jne
sbbb
sub
adc
aaa
sub
xor
lock
mov
push
add
int3
inc
sub
mov
fmuls
pop
loop
pop
lea
add
sub
push
sbb
nop
mov
sub
shr
rclb
pop
call
insb
xchg
xchg
rcr
test
adc
test
jns
sbb
dec
jo
popa
shll
out
jp
in
clc
mov
pop
mov
mov
adc
pusha
pop
scas
lods
xor
xchg
cli
or
lea
in
data16
xor
nop
xchg
jo
addr16
ss
cwtl
push
pop
int
add
mov
xor
or
pushl
cs
sub
push
pop
inc
adcl
push
and
adc
fldcw
pop
sub
in
cmc
dec
mov
mov
cmp
push
roll
stos
mov
or
sbb
loopne
xor
xlat
mov
cmp
lret
push
push
add
mov
add
dec
jmp
inc
lods
sti
push
or
movsl
stos
sbb
adc
cli
insl
or
fdivs
jge
lock
xchg
icebp
ret
cmp
jl
inc
movsl
jae
dec
inc
and
pop
xchg
pop
and
add
inc
push
cmp
adc
stc
xchg
clc
push
mov
stc
sbb
test
mov
mov
cmc
fsubrs
imul
add
mov
jge
lret
loopne
inc
sub
pop
adc
and
pop
rorl
cmp
pop
je
ret
add
adc
cmp
ja
les
mov
jmp
dec
or
fiaddl
cmp
mov
xor
add
out
ja
add
push
mov
push
js
push
sarb
movb
ftst
lahf
push
lock
jb
insl
ljmp
mov
cwtl
push
push
mov
inc
push
mov
sbb
and
jg
add
add
add
mov
pop
fdivrs
mov
lret
inc
dec
inc
lret
cmpsb
xorb
stos
and
inc
push
addl
loopne
lods
fistpll
rclb
out
jge
rclb
xor
pushl
lea
pop
loop
inc
aaa
jb
xchg
mov
sahf
jp,pn
jl
sbb
cwtl
movsb
enter
pusha
adc
mov
push
inc
pop
dec
cmp
xchg
and
jb
hlt
mov
fisubl
out
pop
add
or
xchg
sbb
mov
inc
and
adc
int
dec
mov
movsb
xor
addb
mov
popa
stos
sub
leave
push
jne
sbb
loope
popa
mov
fs
ret
sub
jo
bound
loopne
in
call
xchg
and
dec
pop
pop
mov
ret
xchg
pop
testb
loopne
and
or
pop
xchg
imulb
or
mov
and
sbb
pusha
stc
and
adc
jmp
orb
mov
mov
inc
add
test
in
push
jno
inc
loopne
jnp
or
out
adc
mov
or
rcr
jbe
mov
rorl
jl
call
popf
and
cmp
push
lock
jne
push
cmc
pop
xor
movsb
jmp
pop
xchg
and
mov
scas
push
xor
leave
shll
xchg
cmp
xlat
repnz
jle
push
lock
shlb
cmp
sub
inc
sub
xor
clc
ja
or
add
loop
mov
push
into
je
in
fdivrl
jne
cmpl
mov
pop
cmp
inc
enter
jp
or
pop
les
in
popa
fsubs
pop
mov
and
pop
dec
push
mov
adc
mov
or
mov
pop
mov
mov
and
push
jae
and
push
leave
pop
and
sbb
xlat
dec
push
sarl
incl
add
cmp
movsb
cmp
jb
sbb
nop
lea
lock
pop
fiadds
and
es
pop
pop
jne
rorb
shrb
sar
test
call
insb
sahf
loop
lods
or
rep
jmp
inc
rclb
cmp
dec
or
outsl
fdivrp
fidivs
push
in
nop
je
mov
pusha
jl
shll
pop
lcall
add
add
imul
dec
push
dec
add
nop
dec
pop
push
dec
add
lcall
cmp
repz
xor
sub
sbb
mov
add
inc
mov
out
cs
in
call
jns
out
lock
hlt
clc
movsb
jo
clc
cld
loopne
call
jp
sbb
jns
cmp
push
or
test
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
in
jno
mov
adc
pushf
xchg
daa
in
xchg
xchg
xchg
stc
sub
jo
nop
add
inc
cmp
or
dec
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
sbb
out
gs
sahf
out
mov
mov
shl
out
enter
aaa
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
cld
test
and
adc
jb
icebp
xchg
xor
push
add
pop
andl
inc
ja
cmp
fisttps
insb
aam
call
sbb
cmp
sbb
cmp
inc
call
jg
or
push
or
je
mov
fs
inc
aad
jp
mov
or
jne
pop
fistpl
js
xor
add
cmp
pop
push
add
push
xchg
add
inc
and
jne
xchg
test
adc
sar
xchg
cltd
shll
ss
mov
fsubs
cmp
mov
mov
jne
out
dec
jns
shlb
push
ficompl
movsb
push
nop
movl
cmp
inc
sbb
push
stos
xchg
xor
fucomp
push
push
clc
or
jmp
testb
movsl
fstps
je
jle
cmc
loop
push
fstl
sub
dec
sub
loopne
xchg
bound
push
inc
sbb
or
inc
shlb
ds
shll
inc
lock
out
mov
pop
cmc
or
addr16
jns
icebp
fs
in
jnp
arpl
or
pcmpgtb
jmp
lods
push
shll
call
popa
xchg
mov
push
add
add
mov
daa
mov
call
cmp
out
pop
rcrb
push
js
and
lock
jae
sbb
push
inc
xor
ret
daa
pop
call
mov
or
mov
jb
sub
push
inc
inc
mov
xchg
jb
jp
pop
std
movb
jmp
mov
jmp
pop
push
ret
std
add
lahf
loopne
add
push
push
test
mov
push
mov
mov
int3
clc
mov
insb
dec
test
add
fdiv
or
inc
repnz
cwtl
or
xor
or
adc
dec
sbb
mov
inc
add
cmp
cs
nop
cmp
dec
push
jecxz,pn
xchg
add
lcall
call
je
sub
pop
cld
jmp
sahf
outsb
rcr
add
or
idivb
sbb
stos
mov
dec
ljmp
jmp
inc
xchg
sub
gs
je
mull
xor
mov
out
in
sbb
pusha
sub
repz
popl
mov
sahf
mov
fnstsw
adc
xchg
movl
fstl
es
cli
xorb
pushf
out
sbb
sub
adc
dec
dec
enter
adcb
jecxz
pushf
es
cmpsl
sub
push
ret
aam
xor
mov
fdivs
mov
xchg
xlat
mov
add
into
xchg
add
andl
testb
into
push
dec
sbb
sub
mov
xor
xlat
arpl
std
fcoml
loope
lods
mov
mov
or
in
popf
enter
shlb
lods
mov
mov
lock
push
push
fbld
mov
xor
push
adc
pushf
adc
das
and
pop
in
or
aam
xchg
loope
lea
jne
and
xchg
cld
mov
pop
pop
cmc
mov
push
mov
mov
loope
inc
sbb
push
adc
enter
hlt
push
lahf
add
sbb
and
mov
push
lods
pop
sub
jg
das
dec
loope
lods
cmpsb
jb
test
daa
inc
push
sbb
call
push
pop
sbb
sub
data16
pusha
sbb
xor
test
xchg
cmp
mov
stos
add
adc
jbe
push
inc
call
or
jne
push
push
add
pop
inc
push
shr
into
sbb
mov
ss
in
and
jbe
xor
ljmp
ds
mov
dec
cmp
or
mov
adc
in
clc
mov
jmp
ljmp
lret
stc
roll
adc
ror
insl
adc
sbb
addr16
shrl
in
and
leave
mov
and
outsl
xchg
or
push
xchg
daa
push
mov
ret
loopne
dec
jmp
popa
mov
push
das
push
cmp
jae
nop
bound
addl
daa
add
add
push
jmp
or
in
adc
movsb
outsl
dec
orl
aas
cmpl
jne
push
cmp
movsb
dec
mov
fstpt
das
nop
fisttpll
test
pusha
pop
pop
push
jmp
lds
xchg
xchg
fldl
mov
mov
aam
mov
or
cmp
and
cmp
js
in
lret
dec
dec
shlb
lret
xor
xchg
std
lods
jl
call
loopne
cmp
std
mov
push
add
cmpl
xor
sti
bound
lea
pop
pop
ja
xor
test
adc
add
mov
test
xor
sar
pop
ss
lods
movsb
xchg
xchg
inc
add
jecxz
sub
jo
lea
mov
rcr
clc
loopne
pusha
jne
lret
dec
or
je
adc
lcall
cmp
adc
or
notb
add
cmpl
or
sar
and
add
mov
adc
cs
sti
test
mov
pop
aas
clc
arpl
imul
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
ss
push
sbb
ss
insl
or
pop
loope
aaa
test
ds
jo
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
sbbl
movsl
push
incl
imul
jae
cs
sub
js
push
lcall
roll
lret
mov
popf
mov
xor
call
pop
cmp
xchg
mov
das
add
sbb
clc
adc
push
sbb
sub
adc
int3
jnp
push
or
add
in
ret
mov
loope
inc
adcl
cmp
shlb
xor
adc
push
jge
push
arpl
loopne
inc
imull
xor
in
xor
int
outsl
sub
jne
das
loope
jno
mov
add
ret
push
or
dec
and
in
imul
dec
imul
nop
cltd
clc
sub
in
add
mov
fmull
mov
cmp
shll
add
push
insl
cmp
ret
subl
out
int3
mov
push
cmp
sub
sarl
or
or
mov
sub
repnz
push
addb
cmp
pushf
push
inc
scas
pushf
test
push
divl
test
test
or
adc
ffreep
loope
mov
fucomi
jg
orl
pop
mov
jo
aaa
inc
lods
xlat
mov
inc
arpl
dec
mov
dec
dec
inc
mov
xor
ret
movswl
lea
mov
jns
push
sbb
pop
loope
push
lret
orl
add
inc
mov
or
add
addr16
pop
xor
jmp
or
sub
ss
insl
arpl
fsubrs
fwait
push
adc
je
xor
cs
gs
fcomp
imul
dec
xchg
dec
andl
jb
dec
cwtl
sub
lds
mov
or
shl
add
shlb
adc
jb
out
xchg
not
jne
movsb
addr16
mov
jmp
cmp
jl
cmp
jle
popa
mov
cmp
mov
pop
push
xchg
lea
and
add
nop
std
subl
push
push
ljmp
cmp
lahf
mov
inc
cld
adc
inc
jp
mov
stos
js
push
xchg
sub
inc
sbb
ljmp
rorb
repz
subb
pop
jne
popf
push
push
inc
scas
xor
adc
sbb
inc
push
cld
and
inc
cmpb
jne
xor
cltd
push
rolb
cli
addl
hlt
sub
and
jae
pusha
cld
or
pop
setl
inc
daa
insl
inc
sub
add
test
arpl
sbb
test
imul
test
push
into
xor
mov
call
mov
adc
lock
mov
dec
mov
and
cld
mov
lea
and
ss
sbb
pop
jl
push
enter
mov
shll
fidivrl
sub
xor
pop
test
xchg
or
sbb
movl
mov
mov
shlb
int
mov
addr16
mov
jbe
sbb
pusha
add
mov
xor
jl
cltd
push
cmp
xor
sbb
clc
repnz
sahf
mov
mov
mov
inc
push
dec
sub
imul
and
cmp
shl
cmc
push
mov
inc
jmp
xchg
mov
rorb
jmp
dec
ljmp
push
repnz
sar
ret
cmp
pop
aaa
or
jecxz
inc
sub
add
sub
jns
cmp
and
push
cmp
and
decl
pusha
inc
fsubrs
and
aas
dec
xor
pop
rol
add
xchg
inc
imul
jne
pop
dec
push
test
pop
fwait
adc
xor
inc
aam
adc
or
insb
jle
aam
sub
jmp
jmp
sub
xor
gs
sub
lret
aas
add
lcall
cmp
mov
pop
int
fldenv
pop
sub
xor
outsb
push
pusha
adcb
jne
movsl
add
les
jmp
clc
daa
pop
mov
mov
cmp
lret
cli
movsb
adc
addl
xchg
xor
jge
or
testl
mov
mov
inc
add
cmp
repz
xchg
ss
xor
ffreep
xchg
mov
sarb
push
push
orb
pop
in
adc
xor
fistps
add
movsl
cwtl
sbb
mov
sahf
out
fisubs
jl
rolb
xchg
clc
mov
jmp
xchg
scas
mov
fistps
xor
stos
out
fbld
add
jo
xchg
push
mov
push
rclb
fistps
adc
push
and
xor
jns
inc
push
mov
ficomps
or
adc
add
cwtl
mov
push
mov
lea
dec
mov
adc
mov
scas
mov
add
dec
jecxz
rcll
adc
mov
lret
pop
adc
int3
sbb
inc
lods
repnz
adc
push
cmpsb
mov
mov
andl
les
addr16
lret
lahf
dec
hlt
popa
repnz
jg
dec
mov
xchg
jmp
dec
jp
push
dec
add
cmp
in
add
loope
arpl
jecxz
lahf
mov
jo
das
rcrb
inc
push
mov
jp
push
lds
jns
inc
or
jno
mov
or
inc
xchg
test
pop
jnp
jb
pop
adc
xchg
push
js
mov
adc
rorl
lock
fwait
sub
or
and
or
mov
adcl
js
rclb
add
or
mov
adc
push
gs
mov
add
out
lret
push
xchg
push
ret
aam
movsb
sub
jge
testb
xor
mov
lahf
sti
sbb
pushl
insl
and
lahf
xchg
test
jp
add
push
mov
stos
mov
stos
hlt
fdivrl
inc
clts
addl
fneni(8087
insb
movups
jmp
inc
xor
leave
lret
loopne
loopne
loopne
das
jecxz
ror
cmp
pop
loope
sub
jmp
and
idivb
dec
test
pop
xor
mov
jnp
sub
cs
flds
push
pop
sbb
add
lret
clc
imul
cld
mov
and
or
cmp
inc
and
add
test
or
cld
add
push
popl
jbe
cmpsb
xor
adc
call
mov
imull
imul
jne
nop
nop
sbb
ss
rorb
push
adc
jmp
add
mov
rolb
or
push
push
lea
mov
dec
add
mov
pusha
jg
pop
push
outsl
jo
or
xor
addl
cmp
sub
lea
into
rcr
mov
sar
inc
sub
sahf
fists
rcll
mov
lret
push
or
xor
movsl
pushl
in
xchg
push
fmull
ja
sub
push
add
pop
je
push
jge
push
inc
popf
lods
pop
repnz
je
inc
or
mov
mov
inc
cmp
loope
call
mov
sti
leave
jo
push
add
nop
mov
xor
xchg
sbb
repnz
repnz
push
sub
ret
push
mov
sub
call
icebp
pop
adcl
pop
inc
push
mov
inc
js
push
inc
rolb
xor
push
nop
jmp
lret
pop
jl
and
jle
xchg
mov
or
pop
mov
insb
int3
mov
push
mov
shrb
cmp
nop
fs
loop
dec
pusha
inc
mov
sub
insb
xchg
xor
mov
roll
push
mov
inc
je
jg
and
subl
dec
push
leave
mov
adc
xchg
shrl
xor
mov
adc
xabort
push
cmp
cmp
lcall
pop
push
push
add
mulb
sbb
dec
sbb
push
cld
mov
or
sti
sbbb
xchg
or
fs
dec
xchg
mov
inc
cmp
insb
mov
out
call
mov
or
sahf
or
and
dec
adc
adcl
loopne
jmp
cmp
loopne
adc
pop
sbb
and
call
mov
fcoms
adc
or
and
and
pop
xchg
mov
je
sbb
mov
rcl
sub
call
add
sub
test
jae
mov
out
jbe
repnz
adc
dec
movsb
xchg
sbb
dec
sub
shr
insb
push
lock
push
test
orl
push
pop
inc
mov
adc
or
jo
insl
les
push
arpl
dec
movsl
lcall
dec
movsl
fdivl
adc
xchg
pop
es
outsl
mov
out
mov
lock
movzwl
add
cs
pop
or
les
jb
enter
cmp
add
add
popf
jo
dec
jge
xorb
mov
or
jecxz
ja
xchg
jle
mov
mov
cmp
aaa
clc
test
nop
jle
push
mov
mov
or
loope
push
inc
pop
ja
stc
xchg
push
popf
mov
add
or
outsb
inc
hlt
pause
dec
xor
ret
mov
add
clc
push
cltd
mov
or
es
lea
mov
mov
or
xchg
movl
xor
fcoml
leave
orl
outsl
dec
rclb
mov
mov
mov
rcr
cmp
add
jne
jbe
or
scas
pop
adc
and
idivb
jnp
adc
fcompl
mov
add
xor
cmp
imul
sarb
cmp
das
es
push
imul
xor
dec
shll
in
xor
dec
movsl
data16
pop
enter
mov
lea
enter
jns
xchg
sbb
int
bound
lcall
enter
subl
xor
test
mov
test
test
faddp
push
mov
or
call
push
cs
int3
andb
or
dec
mov
inc
adc
mov
cmp
adc
cmp
leave
leave
mov
add
mov
iret
insl
and
xor
add
fildll
mov
cli
sbb
leave
inc
inc
push
in
mov
adc
pop
push
add
inc
clc
mov
push
mov
stc
pop
mov
inc
adc
dec
sahf
lret
call
and
xchg
mov
cltd
add
or
cmp
cmp
push
lcall
add
pop
mov
lret
lods
enter
lret
addr16
xchg
call
call
and
add
sub
fmuls
mov
data16
push
sbb
enter
jb
fcompl
jae
in
lcall
popa
addr16
enter
das
xchg
mov
addl
orb
and
add
add
in
xor
and
addr16
in
ret
sbb
xchg
add
jbe
addr16
adc
clc
daa
pop
lods
aas
call
jae
sub
loopne
pushf
addb
rolw
fadds
cmc
fcomip
xchg
xor
dec
in
call
mov
push
sbb
add
jnp
or
inc
lods
or
jecxz
or
dec
sarb
or
jbe
adc
cli
push
repnz
mov
loop
lret
mov
sub
test
mov
roll
xchg
ret
xlat
insl
mov
add
movsb
mov
or
cmp
mov
imul
cs
popa
xlat
jp
sti
jo
mov
or
xchg
cmp
shrb
dec
add
add
mov
nop
adc
cmc
popl
addr16
lds
mov
push
add
dec
rclb
ss
scas
push
fildll
repnz
add
or
cmp
and
dec
sarb
sbb
adc
in
popa
xor
xchg
xchg
sbb
sbb
ror
pop
push
fldt
ret
xchg
sbb
jp
push
add
add
bnd
into
mov
or
fisttps
movsb
je
lahf
xor
fs
or
cmp
add
push
dec
rcll
imul
xchg
movsb
sbb
cs
and
decl
dec
lret
add
adc
roll
add
divl
std
pop
sub
mov
mov
inc
stc
mov
in
sbb
jns
adc
dec
xor
sbb
cwtl
arpl
pop
cli
add
sub
loop
sarb
imul
and
hlt
mov
xor
dec
add
pop
dec
popf
out
and
mov
add
test
ficomps
push
sub
fcoms
or
inc
add
ja,pn
mov
int3
jbe
loopne
ficoms
push
dec
pop
out
push
mov
iret
lods
in
sub
addr16
cmp
push
push
imul
fsubl
leave
jbe
pop
lret
dec
push
sbb
lods
jmp
and
xchg
dec
insl
cmp
push
sbb
pushf
adc
mov
xchg
jle
lahf
ja
jnp
push
xchg
or
fsubr
jg
rorb
sbb
mov
xor
sbb
and
les
add
adc
sbb
add
clc
mov
mov
pop
jb
insb
les
mov
xchg
mov
adc
mov
std
push
stos
inc
add
fdivrs
xor
pop
mov
icebp
xor
out
mov
mov
mov
mov
cmpsb
repz
insb
rcll
rcrl
adc
adc
xchg
sbb
out
and
jne
movl
inc
cmp
cmp
std
jne
mov
rcrl
push
xor
add
jmp
pop
pop
add
mov
mov
add
adc
outsl
inc
sahf
push
push
pusha
punpckhbw
mov
dec
addl
mov
lcall
jae
cmpb
jb
or
enter
jmp
test
shlb
and
shlb
pop
adc
rolb
jnp
loope
push
cmp
or
push
call
clc
mov
jne
xor
roll
lds
cmp
leave
inc
imul
imul
loopne
mov
jnp
sbb
enter
prefetch
jmp
loopne
subb
push
adc
lcall
test
fcmovb
add
jo
prefetch
or
jge
add
jb
mov
arpl
sub
push
pop
or
je
jp
xor
and
push
lods
call
repz
dec
adc
add
adc
idivb
jbe
sbb
leave
or
inc
dec
jne
orb
push
or
cltd
add
lock
addr16
jnp
data16
jmp
cmp
fldl
adc
jmp
lcall
and
xchg
push
mov
mov
or
cmp
adc
and
pop
inc
mov
cmc
xchg
fistl
mov
and
sbb
pop
jno
pop
pop
lds
lods
pop
popf
mov
cmpsb
push
cmp
jle
mov
cmp
inc
jo
insb
ljmp
add
push
aad
mov
and
sub
faddl
mov
or
xor
lock
add
out
filds
mov
jmp
xor
or
mov
mov
add
push
pusha
sbb
sub
out
imul
jne
pop
shll
ljmp
xchg
xor
xor
xor
and
sub
lahf
lods
jbe
add
inc
icebp
push
dec
cmc
fildl
rcrb
and
test
add
das
lret
push
mov
dec
push
sbb
mov
test
adc
lea
or
cmpl
xor
adc
aaa
cmpl
ret
sbb
dec
addb
movsl
sub
call
xor
pop
sub
sub
dec
add
test
loopne
test
je
cmp
call
arpl
pop
add
mov
lods
pushl
imul
inc
mov
into
int3
adc
mov
movsb
jnp
jno
inc
inc
sbb
enter
sub
add
mov
rclb
rorb
cmp
cwtl
and
add
daa
sbb
pminsw
xor
mov
lea
jg
pop
movsb
xchg
sbb
or
pop
cld
js
bound
mov
add
add
adc
mov
adc
inc
mov
hlt
push
adc
shrb
mov
fcomps
push
addr16
pop
leave
daa
push
ror
or
loope
mov
pop
add
or
out
or
lock
jle
push
loope
add
scas
or
aas
sbb
sti
pop
lcall
sub
jb
jo
pushf
jge
or
add
test
lods
or
mov
into
mov
sub
inc
test
lret
mov
sbb
push
push
push
ja
ret
xor
iret
dec
adc
push
scas
push
push
add
lock
sub
inc
cmp
push
push
pop
xor
inc
jge
lods
and
xchg
jo
stos
popf
lods
xchg
jecxz
or
add
loope
xor
or
jno
lcall
std
mov
shlb
push
bound
out
adc
sbb
pushf
adc
add
popa
faddp
and
or
cltd
shl
pop
dec
rcr
movb
lea
xor
push
push
ds
add
dec
push
sub
inc
mov
adc
xor
flds
or
jnp
not
call
icebp
mov
adc
pop
inc
inc
push
mov
mov
das
add
insb
loopne
sub
xor
sbbl
loop
sbb
pop
cmp
adc
jle
sbb
pop
cwtl
dec
adc
jecxz
inc
bound
dec
pushf
movsl
lock
dec
pop
push
jbe
and
pop
cmp
out
jle
or
jmp
nop
mov
mov
mov
jg
cmp
adcl
ror
shlb
sahf
lcall
dec
loop
xchg
mov
mov
pop
jo
movsb
cmp
cmpl
leave
test
push
adc
cmp
and
fsubr
hlt
cmp
add
sti
push
xchg
mov
ja
pop
mov
xor
jae
add
cltd
aad
popf
mov
and
jl
xor
in
nop
inc
pop
fistpl
mov
jl
scas
hlt
fstpl
jge
arpl
stos
inc
jne
pop
inc
inc
push
cmp
or
roll
pop
add
pop
mov
dec
xor
adc
adc
clc
jne
push
fisttps
xlat
add
rorb
push
js
bound
popf
lods
ja
or
mov
or
lods
or
cmp
dec
add
cmpsb
movsl
fs
mov
xchg
fsubs
sub
lsl
sbb
fsubrs
loopne
or
ss
mov
sbb
jle
dec
bound
test
add
mov
test
xchg
adc
outsl
adc
lcall
push
dec
and
not
and
or
leave
adc
fisttpll
dec
mov
push
clc
push
loope
add
add
dec
mov
dec
clc
mov
xorl
inc
jge
push
cmpsb
mov
xchg
into
data16
xor
jecxz
test
mov
in
fcoml
add
je
mov
mov
push
or
test
jno
imul
and
sbb
dec
add
rcrl
test
adc
in
dec
and
fldl
or
imul
nop
mov
jp
enter
sub
jno
xchg
pop
in
add
mov
insl
jo
mov
inc
sbb
icebp
jo
into
cs
push
into
das
add
pop
mov
or
sbb
dec
add
and
stc
insl
add
sbb
adc
xor
sub
mov
lock
ret
loopne
ja
push
xchg
jno
pusha
or
ljmp
mov
loopne
faddl
test
xor
xor
negl
add
mov
imul
mov
orb
mov
jl
dec
cmpl
add
fmull
fstl
mov
lock
push
hlt
xchg
jne
and
push
push
lea
xor
jns
stos
into
nop
push
dec
pop
push
outsb
int
jns
ja
push
out
ficoms
ds
cmp
lods
push
lea
ret
push
pop
pop
stos
sbbl
pusha
insb
imul
mov
into
push
mov
mov
fnstenv
jne
inc
add
inc
pop
cmpsb
sub
cmp
push
inc
imul
add
int3
je
push
cltd
cs
inc
lock
add
push
jmp
mov
cmp
clc
mov
jg
ficompl
jmp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
test
test
call
test
cmpsl
and
sub
js
and
dec
and
add
or
outsb
cmp
rcrb
and
cld
jb
jbe
mov
and
xor
push
out
int3
mov
je
jmp
es
sub
ret
xchg
adc
std
cld
add
jo
pop
or
mov
loopne
add
ficompl
outsl
mov
mov
jl
xor
gs
jle
sub
ret
or
aas
pop
adc
ds
fs
jle
jg
lock
and
mov
sbb
inc
mov
jmp
bound
dec
or
mov
arpl
add
inc
inc
xchg
aam
jns
sub
stos
and
add
push
mov
mov
adc
jne
or
in
addb
sahf
push
xor
xchg
aaa
push
or
in
mov
fadds
pop
cs
call
dec
mov
pop
mov
lods
std
mov
loop
jne
cmpsl
pop
shrb
popf
mov
movsl
call
add
movsl
sub
mov
mov
movsl
mov
dec
lea
rclb
ret
jno
ret
aam
cmp
jp
imul
cmp
xrelease
fldl
cmp
repnz
das
daa
xchg
mov
clc
mov
lods
inc
movsl
loop
xchg
mov
fistpll
inc
mul
jl
mov
sbb
dec
dec
jne
or
pop
cs
pop
add
orl
xor
push
in
add
cld
arpl
lea
mov
loop
popa
mov
or
and
fs
mov
lods
es
rorb
out
call
mov
or
inc
mov
sub
lahf
in
lds
dec
aas
insb
jne
inc
sub
pop
scas
pop
rcl
pop
and
push
add
jg
insb
repnz
ja
cmp
inc
xor
mov
mov
push
cmp
push
movsl
test
loope
fld
imul
leave
mov
push
xchg
dec
mov
xchg
rolb
cmp
mov
or
jp
loopne
popa
xchg
loopne
mov
dec
test
scas
enter
jecxz
clc
fs
movsb
pop
movsl
int
lods
sti
jo
sahf
add
pop
push
or
mov
mov
dec
pushf
ror
nop
cmc
push
inc
lea
js
xor
inc
mov
dec
mov
dec
push
insl
cld
sub
jge
pop
imull
insl
cwtl
add
dec
jnp
push
test
xor
cwtl
xchg
stc
mov
jo
push
pop
push
jmp
add
add
push
popa
inc
mov
mov
mov
add
sub
lods
rcl
xlat
loopne
mov
out
cmpb
lds
mov
cld
icebp
push
jmp
mov
pop
sti
movsb
jge
pop
enter
mov
subb
jno
xchg
or
or
ret
sbb
xor
aas
push
addb
pop
push
xor
notb
adc
iret
push
sahf
cmp
inc
hlt
add
xor
dec
mov
lcall
std
and
orb
mov
insl
fidivs
xlat
adc
adc
leave
xchg
lds
sti
cltd
push
out
inc
mov
or
add
xor
cmp
mov
mov
push
cmp
cld
jno
aas
adc
pusha
rcl
cmp
hlt
or
fsubl
sarb
mov
in
test
sub
repnz
mov
xor
mov
xor
int
jno
neg
sub
pushf
shlb
sub
call
sub
test
das
cmpb
mov
daa
cmpsl
lahf
rcl
daa
daa
out
es
or
daa
clc
call
mov
lds
pop
mov
cld
test
daa
jo
inc
adc
nop
icebp
add
mov
data16
bswap
jae
mov
sub
and
adc
xchg
dec
and
mov
gs
ja
adc
in
inc
and
lods
arpl
and
imul
cmp
test
jg
pop
inc
repz
mov
sbb
sub
lds
mov
or
pop
push
sub
add
jmp
push
nop
testl
mov
inc
push
adc
cmc
shll
cmp
cmp
aas
lds
push
sub
cwtl
cltd
hlt
popa
sbb
jmp
test
sbb
mov
sub
jg
int3
cmp
adc
jne
lds
jmp
and
mov
sbb
adc
mov
mov
inc
pop
out
mov
lods
sub
das
divb
pop
jmp
fwait
mov
mov
dec
lahf
fstpt
addl
sbb
mov
je
and
hlt
lock
push
mov
xor
mov
arpl
push
jmp
jp
and
or
imul
shr
int
and
dec
imul
pop
push
dec
sub
push
and
pop
pop
js
nop
and
adc
pop
mov
push
pop
mov
mov
and
xchg
in
sub
inc
jecxz
mov
movsl
nop
lret
inc
mov
inc
pop
inc
fldcw
xor
jecxz
add
mov
adc
jo
or
add
adc
lock
les
icebp
iret
scas
cmp
jne
or
pusha
or
aam
sub
mov
xor
add
leave
inc
movsb
mov
and
cmp
inc
lods
or
dec
push
pop
xor
fs
inc
out
shlb
lahf
mov
pop
inc
repz
clc
lea
enter
fldenv
int3
ds
mov
loope
cmp
popf
popa
mov
je
jno
sbb
arpl
mov
outsl
pop
sbb
aaa
xchg
add
add
and
mov
or
mov
pusha
fs
das
les
movsl
cmp
fnstsw
mov
in
mov
mov
scas
outsb
jno
dec
ss
outsb
jno
adc
sbb
mov
outsb
rorl
enter
in
aad
sbb
enter
aaa
add
test
jae
test
ror
adc
inc
push
cmp
ja
nop
pushf
dec
push
sbbl
xchg
andl
mov
xor
movsl
xchg
pop
fnstsw
cmc
int3
inc
leave
enter
xchg
in
enter
rorb
jne
jae
dec
mov
leave
mov
in
inc
repnz
fsubrs
pop
mov
ja
enter
outsl
and
mov
inc
clc
mov
xchg
or
mov
nop
xorl
mov
mov
adc
sbb
lret
mov
push
or
add
sbb
cltd
mov
jne
inc
dec
aas
leave
jne
sbb
mov
imul
push
imul
dec
lods
lods
jo
add
lods
minps
cmp
adc
jns
in
adc
mov
repz
push
lret
dec
test
add
or
dec
inc
js
inc
or
pop
imul
lock
mov
lret
outsb
fs
push
push
mov
movsb
je
cmp
or
sub
and
mov
adc
pushf
inc
or
pop
pop
adc
ss
or
or
inc
rol
inc
and
and
mov
sbb
mov
pop
pop
or
or
icebp
sti
jl
or
iret
push
jmp
rclb
mov
jge
add
lret
outsb
scas
jmp
jnp
inc
mov
cwtl
pop
sti
dec
mov
adc
rcrl
mov
mov
jg
rcrb
inc
testb
or
andl
test
out
lock
mov
mov
fisttps
dec
jmp
mov
test
jne
xchg
rolb
and
xor
cmc
into
inc
sub
sbb
push
in
loopne
loopne
push
add
nop
mov
sub
sarl
sbb
imul
add
jle
ja
pop
roll
and
push
push
dec
or
rcll
mov
sub
stos
mov
jecxz
pop
add
or
bts
jmp
xor
push
dec
cli
cs
mov
xor
dec
mov
mov
add
iret
lock
ret
jne
cmpl
jne
mov
cmp
je
cmp
and
jo
pop
cmp
lock
movsb
jmp
pop
fsubs
in
adc
cmpsl
push
dec
pop
push
cmp
inc
stos
rcll
rclb
std
frstor
mov
out
add
xor
leave
mov
lahf
sbb
ffree
mov
fcmovnb
adc
mulb
add
push
es
mov
mov
add
jle
and
andl
or
nop
fldl
stc
mov
fs
stc
rcrl
cmp
xchg
inc
scas
outsb
cmp
xchg
push
push
mov
lea
in
and
imul
push
cmp
mov
mov
mov
sub
jmp
pusha
push
subl
fsubrl
mov
movsl
test
lea
or
push
mov
sub
sbb
and
mov
jmp
inc
sub
addb
out
push
loopne
imul
fistl
adc
sbb
cmp
data16
inc
pop
lods
int3
inc
iret
ret
lods
out
lcall
scas
fcomp
sbb
mov
lods
adc
xchg
jmp
outsl
mov
ret
jbe
add
adc
and
pusha
mov
xor
jnp
dec
mov
lea
pop
add
incl
test
adc
lea
sti
pop
pop
movsb
movsl
scas
fistpl
jmp
enter
or
mov
fiadds
xchg
enter
mov
push
add
mov
xor
mov
addr16
push
push
stos
add
pop
pop
and
inc
imul
lock
gs
in
lock
cld
enter
or
jne
dec
mov
dec
and
rcrb
neg
xor
or
push
add
call
adc
data16
jp
add
inc
cs
je
ret
rolb
insl
mov
and
and
mov
in
cmp
push
movsb
ljmp
pop
int
mov
mov
mov
sbb
adcl
jl
push
push
popa
idivb
test
les
push
aas
adc
and
dec
xor
ds
and
test
adc
push
inc
std
push
or
fldt
xor
push
pop
cmp
add
out
popa
or
pop
clc
or
or
int3
fld
scas
jno
add
pusha
sbb
push
mov
insb
and
xor
add
jae
cli
shlb
es
int
xlat
mov
jnp
orl
andl
pop
mov
mov
les
or
jno
ret
adc
into
add
push
je
cltd
hlt
mov
lods
cli
clc
push
sub
lea
push
flds
out
pop
rorl
inc
add
outsl
rcrl
call
add
and
int
dec
push
mov
movb
ss
xchg
daa
dec
or
mov
lock
mov
adc
out
jg
movb
xor
dec
fildll
add
int
mov
push
or
mov
inc
call
push
add
shll
aam
ret
mov
fdivrl
sbb
fs
scas
push
sbb
or
add
inc
add
xor
movlps
add
andb
push
xor
aas
cmp
or
mov
and
into
sub
shll
test
lds
cmp
jmp
bnd
mov
aas
pop
push
cmpl
xchg
or
aam
or
cmp
pop
jmp
sar
shl
add
fs
mov
and
mov
adc
pop
sub
lcall
andb
dec
adc
dec
mov
test
addl
or
orb
jmp
mov
dec
push
pop
jmp
lea
inc
sub
push
push
or
cmp
ds
aaa
mov
or
mov
jne
out
pop
mov
add
or
mov
push
mov
movl
cmp
add
cs
add
push
sbb
and
aad
test
cmp
push
outsb
addb
sbb
dec
xchg
xchg
adc
ja
or
pop
add
sbb
out
mov
stos
enter
not
mov
out
jmp
je
dec
stc
cld
and
add
sbb
repnz
cmp
dec
ss
cmpb
jne
xchg
cld
dec
mov
test
adc
pop
mov
or
adc
or
mov
lret
nop
xor
adc
push
mov
jae
adc
and
jno
std
sbb
mov
lret
xchg
pusha
push
sbb
idivb
sub
push
lock
leave
in
psrad
or
sub
lea
xchg
inc
es
daa
pop
mov
movsl
out
add
fistl
jle
mov
shll
arpl
das
inc
xchg
xchg
das
es
pop
push
push
push
jb
pop
sbb
addr16
add
orl
adc
jbe
loopne
daa
jg
xor
jmp
mov
mov
test
add
sahf
pushf
and
xchg
out
or
push
mov
xor
cmp
sub
in
cmp
inc
adc
jns
inc
enter
mov
jl
add
loop
pushf
and
inc
sbb
pop
cmp
mov
sbb
add
or
jmp
mov
xor
xchg
mov
add
xor
push
clc
stc
jno
movups
or
push
xlat
jmp
daa
push
or
sbb
iret
sbb
push
lock
and
rolb
lods
push
dec
push
and
or
jb
mov
mov
adc
mov
adc
sbb
ds
dec
dec
out
cmpl
mov
add
xchg
xor
cmpl
leave
add
cmp
sbb
aam
andb
cmp
rolb
not
inc
mov
hlt
jge
inc
push
sbb
cmp
jne
adc
nop
or
cli
fistl
xchg
and
inc
loopne
sbb
push
orl
pusha
and
sbb
sub
fs
xchg
stos
inc
out
aas
sahf
xchg
outsb
mov
hlt
jmp
mov
adc
scas
hlt
in
out
mov
shl
xchg
notl
in
or
mov
mov
cmovg
test
fsubs
pop
pusha
popa
and
insb
mov
jno
jno
adc
jp
jle
jns
test
ss
ja
in
or
shlb
shlb
jmp
testl
mov
mov
clc
lock
jb
add
inc
pusha
lods
and
or
push
test
jo
dec
mov
sbb
push
dec
pop
and
js
cmc
outsb
adc
pop
lea
adc
inc
inc
lds
jmp
aad
add
adc
fsubr
insl
jmp
cmp
pop
enter
aaa
loope
mov
jl
enter
rcrl
add
ret
inc
mov
test
jmp
pop
push
xor
or
shlb
xchg
sub
or
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
push
fincstp
repz
dec
clc
std
std
mov
pop
jb
cmp
or
cmp
or
repz
push
in
xor
and
adc
push
inc
mov
sub
hlt
lret
je
cwtl
fxch
pop
pop
lods
rcl
sbb
mov
sbb
sbb
loope
je
cmp
xchg
ds
cli
jbe
inc
add
idivl
inc
out
dec
daa
insl
fadds
cmpb
sti
sarl
mov
cwtl
jbe
sti
mov
xor
add
inc
loopne
dec
xor
fidivs
mov
cmpsl
dec
add
jmp
xchg
push
aam
pop
dec
rclb
mov
dec
popf
in
jl
mov
mov
mov
add
and
idiv
les
or
push
inc
lcall
adc
dec
and
das
push
push
stos
and
jbe
mov
push
dec
mov
add
sarb
into
jmp
insl
or
adc
pop
movsl
jmp
push
push
sbb
nop
lods
sbb
movsl
push
clc
sbb
fisttpl
dec
and
lods
pop
mov
andb
jnp
add
jmp
or
sbb
imul
xchg
xchg
stos
mov
lret
jmp
popa
sbb
add
sbb
int
adcl
adc
xchg
pushf
arpl
pop
mov
add
pop
lds
imul
pop
inc
cmp
mov
adcl
rcrl
es
adc
or
dec
inc
decb
dec
or
sub
adc
test
lock
out
add
hlt
xor
add
rcr
and
lock
clc
out
lock
xlat
xchg
fidivl
add
add
loopne
pop
fldl
out
mov
sbb
jae
scas
rcrb
cmp
jl
lret
iret
lods
fadds
fwait
cld
insl
or
loope
in
mov
mov
mov
mov
adc
iret
pop
pop
xchg
mov
jbe
les
test
dec
je
mov
lods
sub
cmp
mov
xor
addr16
jmp
mov
pop
push
dec
push
mov
outsb
pushl
lods
lods
aaa
rolb
stos
or
sbb
pusha
inc
inc
icebp
add
add
add
aam
push
adc
imul
sbb
ja
dec
fcompl
mov
sarb
or
cli
sbb
cmp
data16
add
push
fistpl
fmuls
scas
push
inc
add
fs
out
add
push
fidivs
test
mov
jmp
adc
outsl
push
in
cmp
mov
cmp
or
and
dec
movsl
ffree
push
adc
test
mov
and
lds
fldenv
aaa
cli
mov
fdivr
push
mov
movb
inc
adc
hlt
sub
mov
cmp
xor
pusha
sbb
fsubrs
ret
add
cmp
jg
inc
jmp
cli
fstpl
rolb
cmp
cmp
add
push
nop
outsb
cmp
cmpsb
push
mov
cmp
adc
lret
cmp
in
push
pop
jnp
je
dec
sahf
push
cmp
shll
add
adc
xor
arpl
push
or
and
jbe
insb
jne
push
adc
scas
rcr
and
add
xor
fmull
loopne
adc
inc
ljmp
jg
ljmp
and
dec
adc
repz
or
pop
xor
iret
out
push
jg
outsl
inc
or
jbe
aas
lahf
out
jge
jo
addr16
jg
jg
jo
outsl
enter
cmp
dec
jne
inc
push
int3
sub
dec
in
loopne
sbb
imul
lea
lea
inc
out
enter
cwtl
add
fwait
mov
rolb
add
dec
mov
adc
enter
mov
add
inc
inc
push
negl
cmc
or
jl
mov
push
mov
cmp
lret
ret
inc
push
mov
shr
dec
mov
or
imul
popa
gs
lds
inc
adc
xorps
cmp
jge
mov
push
add
mov
loopne
push
and
and
ja
mov
and
sbb
ret
jne
mov
out
pop
cli
cltd
fdivr
and
pop
inc
mov
pop
stos
cmp
ret
add
dec
in
ljmp
and
shl
sbb
clc
or
pop
nop
add
sbb
aam
jnp
inc
js
fwait
into
pop
add
sysenter
push
lock
pop
add
mov
push
inc
addr16
and
popf
or
adc
in
dec
clc
orl
and
rclb
dec
add
jge
adc
xorb
lahf
or
dec
pop
inc
lcall
gs
pop
shll
fistps
cmp
or
sub
rclb
push
pop
ja
mov
out
inc
adc
adc
push
pop
dec
pop
xchg
mov
lods
rolb
mov
leave
add
loop
push
adc
fiadds
push
push
and
jg
into
std
or
and
or
xor
mov
add
je
xchg
cli
adc
lea
lea
or
mov
jnp
adc
ds
jbe
sub
and
inc
mov
mov
or
mov
jle
es
fiadds
xlat
mov
push
dec
mov
clc
inc
add
mov
add
adc
pop
inc
cmp
mov
mov
arpl
jno
add
jno
push
push
rolb
ljmp
jp
pop
pop
add
and
push
shrl
sbb
cmp
xlat
lock
push
push
push
ds
out
add
add
sub
adc
or
cwtl
or
jl
lcall
add
pusha
rclb
daa
add
add
dec
xchg
cmp
sbb
lock
jne
push
jnp
mov
push
hlt
or
add
inc
pop
loope
aas
scas
push
xor
add
add
mov
and
inc
pop
xchg
dec
or
andl
ja
scas
je
out
andl
out
data16
es
or
mov
xorb
or
push
test
addb
testb
xor
push
push
pop
scas
sbb
test
mov
dec
and
mov
jmp
cmc
inc
lock
out
lret
lcall
add
mov
xor
cmp
and
cld
das
xor
xor
sbb
adc
icebp
arpl
mov
push
inc
sub
mov
cmp
out
lods
jae
adcb
jmp
dec
jge
and
add
inc
mov
or
add
push
lea
push
nop
stc
sbb
push
inc
mov
test
das
fs
pop
add
flds
movsb
or
push
add
push
test
dec
outsl
cmp
inc
fsubr
xor
jmp
int
addr16
ss
popf
pushl
leave
cwtl
ret
movsb
push
lahf
cmp
inc
push
push
dec
sub
nop
sub
sub
jl
mov
mov
push
shrl
push
mov
xor
rcrl
or
push
cmpl
xchg
cmp
clc
lahf
mov
loope
cmp
mov
cmp
inc
rcll
js
or
jle
jmp
push
mov
cs
sbb
ja
pusha
dec
jecxz
icebp
scas
dec
iret
dec
ja
ljmp
test
add
mov
push
cmp
clc
add
nop
leave
push
sub
cmp
adc
and
push
incb
fstps
jp
movsb
andl
jmp
mov
mov
popf
add
xor
sub
and
sub
jle
movl
add
jmp
xchg
jmp
dec
push
in
jbe
lcall
jg
cmp
mov
fstpl
lock
jo
bound
push
mov
or
mov
adc
mov
mov
xchg
outsb
divl
nop
add
jne
dec
dec
jae
and
sbb
ret
fldenv
fs
mov
dec
lea
bound
pop
push
sub
movsl
mov
orl
mov
frstor
stos
mov
daa
pop
stc
sub
cmp
mov
add
sub
mov
icebp
ds
mov
push
jge
add
ja
inc
nop
mov
sub
icebp
iret
mov
jo
ud0
cmp
add
testl
pusha
and
lret
jmp
or
dec
or
iret
pop
sarl
inc
repnz
les
jl
lea
cmp
or
jecxz
push
push
xor
or
pop
xor
push
fdiv
dec
mov
add
cwtl
les
hlt
insl
pop
mov
push
jne
or
ljmp
rcr
cs
jge
int
sub
add
mov
rorl
sbb
test
lock
es
adc
shlb
mov
pop
aam
outsb
call
xor
sub
xor
jne
loopne
cmc
or
or
in
fsubrp
lods
sarl
add
or
or
pushf
imul
add
jb
cmp
pop
sbb
mov
lea
enter
jp
push
mov
or
sbb
lcall
jne
mov
roll
push
mov
stos
sub
xlat
jae
cmpsb
adc
pop
mov
push
or
call
mov
mov
loopne
push
pop
xor
inc
int3
adc
movsb
lock
bound
insb
out
imul
inc
jne
mov
or
cmp
sbb
pop
es
and
inc
xchg
pop
and
jp
xchg
nop
or
and
cld
sub
xchg
test
push
pushf
jp
insl
cmp
add
test
mov
jo
in
push
clc
and
ret
xor
add
jb
xchg
or
push
add
jmpw
cmpl
insl
mov
scas
add
inc
jge
data16
sbb
sti
jg
add
lret
jle
or
add
mov
cli
jmp
shr
mov
add
or
shr
aas
or
push
andb
mov
jg
or
adc
inc
mov
xchg
and
add
in
sti
mov
shrl
shl
shr
or
mov
mov
dec
mov
jne
outsb
mov
mov
aam
flds
mov
ja
push
cmp
stos
or
shrb
cmp
rcr
ficoml
mov
dec
lock
ljmp
jmp
or
push
lods
push
jnp
mov
popa
icebp
inc
xor
mov
mov
mov
loope
adc
dec
int3
int3
jmp
adc
or
daa
mov
dec
pop
lret
into
jmp
lods
dec
sarl
rcll
dec
and
les
les
add
sbb
imul
jne
push
lret
xchg
jmp
sub
cmpl
add
adc
or
mov
les
dec
lods
mov
mov
inc
in
pop
mov
mov
push
icebp
repz
rcl
inc
jmp
add
iret
repz
pop
nop
movsb
std
call
lcall
jno,pn
adc
rcll
or
jne
testb
pop
or
add
mov
sbb
add
clc
addr16
cmpsb
mov
add
jg
sbb
push
aaa
cmpb
fldl
pop
adc
inc
dec
push
ljmp
int3
pop
in
xor
or
mov
push
test
mov
pop
pop
sub
inc
popa
mov
add
jb
dec
or
sub
add
rolb
rcl
repz
mov
mov
mov
andb
insl
imul
sub
xor
ret
dec
sub
mov
loopne
loop
call
pop
icebp
add
and
pop
xor
sbbb
mov
aas
js
shll
pxor
in
movsb
inc
sbb
inc
jne
rcrb
jg
pop
je
fstl
push
jecxz
add
inc
adc
and
push
sub
out
inc
inc
push
xchg
jle
inc
jo
mov
rcl
aaa
sqrtps
testb
pop
jae
or
xor
mov
push
xor
fisubrl
cli
sbb
add
mov
add
sbb
cli
pop
pop
or
sub
into
cs
push
mov
bound
add
cli
shll
jns
jmp
add
test
ds
add
out
xor
pusha
jecxz
mov
or
rcrb
popl
fmull
xlat
jmp
xor
sub
cld
push
or
cmp
add
adc
movl
or
cli
push
andb
push
inc
fs
into
sub
jecxz
cmp
and
arpl
mov
mov
aas
rorb
jo
mov
out
lock
loope
mov
ret
out
xlat
lret
loopne
xchg
push
loopne
sbb
jmp
gs
in
insb
pop
fisttps
rcll
and
mov
pushf
out
inc
ljmp
mov
in
ds
cmp
test
push
mov
inc
add
leave
sar
mov
std
cmpsb
mov
add
rcrl
dec
adc
ja
push
inc
sbb
or
cmp
mov
cli
lock
popf
sub
xor
add
pop
cmpsl
sub
pop
ret
pusha
popa
add
insb
or
aam
enter
inc
and
push
inc
call
adc
xor
pop
pusha
cmp
ret
push
cmpb
push
push
jnp
adc
fs
ret
push
push
sub
rorl
xchg
ficomps
mov
inc
mov
adc
pop
sar
mov
fsubl
popa
pusha
adc
or
decl
xor
push
hlt
mov
andl
lea
icebp
dec
cmp
push
imul
pop
jns
out
lret
add
aad
enter
enter
and
addl
sub
inc
jmp
or
adc
sbb
mov
pop
push
pop
sbbl
inc
mov
mov
lods
jnp
pop
les
dec
dec
cmp
enterw
inc
jmp
inc
or
sbb
test
loopne
fs
add
fisubl
cmp
rcll
cmpsb
int
push
faddp
fidivl
mov
jno
or
push
add
mov
sbb
mov
jne
or
add
push
cmp
js
js
rcr
add
imul
cli
hlt
ficoms
jmp
push
and
xor
add
loop
dec
je
loop
pop
dec
sub
sbb
sahf
xor
xchg
jp
fisttps
cmp
lock
mov
inc
mov
sbb
insb
mov
cmp
bound
shl
icebp
popa
and
mov
std
xchg
jl
add
dec
xor
jae
mov
dec
lock
jne
shufps
jne
or
addl
das
shl
dec
xchg
lock
and
jae
adc
inc
fisttpll
scas
frstor
call
daa
ret
sub
dec
push
sub
sub
add
int
add
pop
jbe
xor
push
fs
pop
jns
dec
lock
clc
adc
fiadds
into
jg
sbb
mov
sbb
mov
sub
add
test
sub
and
test
mov
imul
popa
add
push
stos
fimuls
push
lea
mov
stc
loopne
sbb
cmp
jmp
nop
mov
test
jns
push
shrb
cmp
mov
or
xchg
and
mov
scas
sbb
inc
test
fiadds
dec
push
adcl
xchg
add
xor
mov
push
jo
lret
jmp
inc
mov
or
pop
and
adc
das
movl
movsb
mov
adc
ja
cmp
ja
cmp
mov
insb
adc
mov
negb
add
lods
mov
mov
fidivrs
shll
cwtl
inc
je
xor
imul
or
in
adc
or
jmp
js
jecxz
and
nop
jecxz
btr
push
and
xchg
stos
lock
and
xorb
movups
or
inc
rorb
pop
sbb
jmp
sbb
xor
int3
ret
mov
adc
add
and
nop
out
or
les
or
rorl
loope
inc
add
sbb
stos
pop
xchg
ljmp
mov
in
fs
mov
pop
enter
pop
pushf
push
je
mov
pop
lcall
ret
mov
and
cmp
int
insl
mov
lahf
sbb
adcb
and
scas
sbbl
adc
xor
jmp
xor
sbb
outsb
add
cmpb
or
jbe
inc
mov
jmp
test
push
push
call
inc
cmp
shrb
add
js
xor
jmp
insb
cwtl
mov
es
mov
add
mov
add
inc
sbb
gs
ljmp
jb
jl
sub
mov
add
xchg
in
adc
sub
adc
icebp
xchg
mov
cli
adc
push
rolb
insl
loope
in
pop
shl
dec
push
mov
xor
lcall
lret
xor
imul
lods
add
jo
add
add
rolb
pop
rclb
push
js
push
movsl
pop
pop
jg
inc
mov
and
pop
add
xchg
inc
sbbb
xchg
data16
inc
push
jbe
mov
push
sub
sbb
hlt
add
jb
sub
inc
mov
add
jl
cmp
mov
nop
loope
shl
mov
pop
sarb
enter
mov
adc
fadds
sbb
push
push
and
rcrl
push
ret
imul
popa
aam
push
mov
fs
jo
xchg
jle
loop
push
inc
or
fbld
jl
push
pop
cwtl
sub
add
out
mov
notl
pushl
add
xor
popa
in
xor
les
inc
inc
mov
xor
scas
ja
lock
std
sub
adc
pop
sbb
sbb
sub
sbb
movhps
jne
sbb
pop
imul
or
and
add
lea
add
push
push
mov
jne
pop
xor
outsl
ss
les
arpl
jp
test
cmp
mov
push
cmp
imul
cmp
rorb
inc
or
imul
dec
or
xlat
xor
cmp
pushl
mov
pop
pusha
jecxz
ljmp
jg
loopne
test
add
ror
neg
clc
into
or
jne
push
clc
push
lock
add
lcall
mov
inc
mov
fs
sbbb
jp
sub
push
nop
hlt
and
mov
dec
je
mov
jmp
mov
push
mov
rclb
jl
mov
pusha
dec
pop
push
jno
pop
mov
or
loopne
fnstsw
inc
lret
insl
insl
sbb
pop
int
in
add
lahf
outsl
xchg
sahf
cld
or
and
adc
rorb
xlat
ss
inc
pusha
jne,pn
sbb
fnstsw
movl
pushf
shl
lcall
cmp
push
pop
in
jge
mov
mov
and
lods
adc
fsubr
fst
push
mov
cmp
pop
add
outsb
sbb
jmp
cwtl
cmp
add
inc
and
sub
xchg
daa
push
adc
fs
xor
jmp
inc
pop
cmp
or
sbb
xor
icebp
jnp
inc
cmp
roll
sbb
xor
dec
sbb
dec
add
ret
insb
ret
dec
bound
fs
cmp
sbb
inc
sbb
jecxz
sub
stc
jb
je
test
or
sub
and
gs
pop
push
andb
or
out
and
clc
pop
inc
sbb
mov
add
adc
mov
jl
cs
in
mov
inc
and
mov
outsb
pop
repz
sarl
sti
nop
adcl
shl
lcall
cmp
push
into
loope
mov
lock
add
pop
mov
adc
cli
inc
loop
jge
pushf
or
addr16
xchg
out
mov
outsl
inc
dec
jg
xor
adc
popf
inc
or
cmp
xor
mov
pop
insb
xchg
push
sub
mov
fistpll
push
das
or
cltd
jb
or
mov
pop
gs
inc
cmp
xor
sarb
push
nop
sub
sbb
add
mov
cld
add
mov
sub
xchg
fdivrs
orl
and
sbb
cmp
mov
in
fisttpl
cwtl
xor
mov
cmp
lahf
daa
testl
cmp
or
fistpl
sub
add
popa
fnsave
mov
loopne
add
jne
pop
push
sar
out
shl
or
xor
and
stos
aas
xor
xor
add
pushf
jle
add
mov
test
sbb
push
xor
xorl
sbb
sbb
jns
and
sbb
fistpll
cld
dec
jg
cmp
call
jno
call
sbb
imul
xor
mov
mov
in
mov
and
adc
mov
inc
sub
push
xor
mov
and
jne
movsl
imul
nop
or
push
xor
arpl
movsl
pushf
pushf
pushf
mov
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
cmp
inc
inc
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
inc
or
jl
sbb
and
mov
test
xor
xor
pushf
mov
jns
mov
xchg
enter
xchg
dec
sarb
cltd
fs
in
cltd
fs
call
fs
dec
hlt
clc
cld
cmp
and
add
add
add
or
adc
sbb
xchg
dec
es
and
sub
es
xor
dec
cmpsb
pusha
xchg
cmp
gs
xchg
dec
cmp
push
dec
xor
and
pop
pusha
sbb
pop
pushl
add
fs
pushf
nop
test
aas
add
je
movsb
cltd
or
mov
mov
xor
xchg
mov
shll
dec
or
adc
subb
cltd
adc
sbb
sbb
and
movsb
cltd
nop
nop
and
cmp
cmp
lods
imul
inc
mov
inc
lcall
mov
mov
insb
or
push
sbbb
mov
dec
push
jo
cltd
dec
and
xchg
aam
ret
filds
dec
xchg
movsb
rorl
call
mov
push
add
mov
in
imul
or
aas
xchg
in
cmp
or
pop
js
es
sub
add
popa
movsb
push
test
and
in
or
add
or
sbb
into
pop
add
push
repnz
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
jge
outsl
mov
or
and
add
or
sbb
adc
cmp
xlat
je
add
ret
shll
and
inc
andl
ret
or
int3
mov
call
add
std
lods
shrl
adc
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
xchg
jmp
cld
jmp
or
pop
and
and
jge
aaa
jge
inc
mov
mov
mov
fstps
aas
pusha
mov
pusha
loope
pop
sub
xchg
add
movsb
xor
inc
jecxz
dec
sub
adc
fnstsw
pusha
push
sbb
pop
cmp
mov
je
das
sbb
lock
or
repnz
adc
sti
add
adc
scas
cmp
out
test
fisttps
popa
xor
dec
or
pop
das
stos
or
sub
mov
jmp
push
and
mov
or
scas
rcrb
testl
in
add
jb
imul
xor
push
and
or
pop
or
flds
fldcw
jmp
fisttpll
orl
inc
dec
mov
adc
sbb
xchg
sub
jmp
and
pop
cmp
aaa
adc
inc
jo
ret
xor
test
inc
mov
xor
or
hlt
pop
dec
jmp
aaa
sbb
out
jecxz
adc
add
gs
mov
std
rorb
sub
sub
jmp
sub
daa
pop
jp
push
or
outsb
dec
rorb
fldcw
dec
repz
into
adc
mov
imulb
mov
jnp
addr16
mov
les
add
outsb
mov
cli
call
cmp
les
lods
pop
repz
mov
dec
inc
in
inc
rcll
cli
repnz
aam
mov
dec
pop
mov
xchg
test
lcall
insl
in
adc
pop
orl
loopne
shll
push
push
clc
and
push
pop
push
push
and
add
clc
adc
cmpsb
xchg
mov
mov
stos
or
or
cld
scas
mov
jle
push
add
popa
inc
lcall
mov
cmpsb
lret
loope
popa
mov
insb
icebp
aad
and
test
push
adc
add
mov
rorb
lea
outsl
ret
call
mov
push
je
out
sbb
mov
dec
sarl
lods
call
pop
hlt
dec
mov
cmp
add
dec
loop
ficompl
pop
mov
movl
mov
or
add
fstpl
popa
fists
xor
jmp
jno
mov
inc
and
ret
ficoms
loopne
add
xor
push
or
ret
mov
out
mov
jo
and
les
cmp
dec
loopne
fcoml
xchg
ss
lock
mov
add
loope
rol
aas
pushl
dec
mov
cmp
cmp
push
jbe
push
das
adc
inc
push
fcompl
pop
arpl
dec
mov
jne
lods
mov
pusha
jge
jl
andl
adcb
add
add
dec
jo
jne
je
xchg
pop
fwait
xor
mov
xlat
mov
cld
add
push
loope
xchg
push
sub
xor
pop
int
mov
or
mov
pop
lret
lock
or
sti
js
mov
imul
decb
mov
add
fsubs
into
pop
add
mov
int
adc
sbb
test
leave
pusha
or
cmc
or
out
fld
fucomp
sub
lock
fnstcw
out
mov
push
lahf
lods
push
xor
test
lods
push
dec
pop
and
mov
push
das
cmc
sbb
shll
push
or
fwait
cmpsb
in
xchg
push
or
push
or
push
out
lods
pop
les
push
push
sti
inc
push
or
push
and
es
sub
and
adc
scas
mov
sahf
push
dec
ljmp
mov
fnstsw
movswl
sbb
lret
sbb
loop
push
inc
subb
lret
or
rorb
data16
outsl
popa
aas
or
insl
or
push
mov
sbbb
or
sub
add
push
aam
test
fsubs
nop
lods
mov
outsb
fwait
sbb
add
and
pop
mov
fdivp
jle
jo
je
movsb
fldpi
xor
xor
pop
mov
pushf
je
lret
dec
sbb
adcb
scas
xsaveopt
dec
or
mov
mov
ret
loope
inc
inc
andl
movsl
pop
mov
and
jno
iret
mov
push
or
clc
or
mov
or
xor
mov
jnp
jo
push
icebp
add
sbb
inc
jb
cmp
xorl
mov
cmpsb
push
jbe
mov
xor
add
xor
jno
repz
ja
rolb
test
cld
sub
add
ror
pop
inc
add
cmp
pop
sbb
mov
cmpsb
jne
add
adc
out
inc
js
jo
jne
adc
into
ljmp
je
adc
mov
mov
mov
push
lahf
or
sti
jbe
sub
test
lock
xor
xchg
or
or
xchg
mov
push
add
add
fnstenv
hlt
or
fcmovnb
adc
pop
xor
cmp
sub
test
in
inc
es
or
push
push
push
cmpsb
insl
test
push
or
dec
add
adc
jmp
aas
sub
ljmp
cmp
cld
push
push
daa
mul
pop
test
in
push
or
jbe
jl
sbb
sbb
stos
stos
jp
pop
pop
rcl
and
xorl
pop
cmp
hlt
dec
push
add
aad
pop
add
popa
pop
pop
adc
adcl
xor
or
inc
lea
pop
mov
lret
scas
rolb
xor
adc
call
loop
rcrb
push
inc
jmp
cmpl
mov
pop
repz
pop
pop
pop
and
ss
out
mov
out
mov
inc
adc
iret
sbb
out
mov
mov
adc
or
or
cmp
xlat
add
sbb
dec
cmp
test
test
and
std
dec
decb
add
jns
fsubrl
push
xchg
sarb
push
and
push
or
mov
fdivrl
lea
sub
push
cmpl
add
and
stos
inc
pop
or
idivl
add
mov
stos
inc
or
test
or
xor
cmp
rorl
ss
mov
iret
sarl
mov
shl
sub
sub
negl
dec
inc
notb
popf
jb
mov
and
pop
ds
push
or
cs
aam
out
leave
stos
or
xor
out
sbbb
pop
les
into
push
sbb
mov
xorb
dec
jns
dec
cs
dec
lea
inc
jno
push
push
rcr
inc
add
sbb
test
mov
stos
adc
dec
int3
loopne
push
out
or
inc
rcrl
dec
xor
add
orl
lods
fsubr
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shlb
sub
lock
aas
mov
mov
pop
xchg
dec
mov
and
jae
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
dec
add
jl
stos
iret
and
jbe
jecxz
mov
and
and
jge
lcall
jge
dec
and
inc
xchg
push
mov
shll
enter
shlb
or
ficoml
add
dec
xor
pop
lock
push
aam
cwtl
cmp
lcall
jmp
nop
lock
mov
repz
mov
add
push
mov
inc
cmp
dec
scas
or
adc
cmpsl
add
mov
rolb
push
les
add
sub
dec
cmp
sbb
sbb
jno
in
dec
adc
shrb
je
add
xchg
shll
outsb
loope
or
stos
inc
mov
icebp
cmp
mov
mov
ja
divb
lods
jge
pop
push
inc
mov
mov
rorl
lods
fadd
inc
insb
repz
sub
out
xchg
orb
imul
jg
adc
inc
cs
or
incl
or
or
out
mov
dec
cmpb
je
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
push
add
add
lea
fistpll
cmp
push
arpl
xchg
sub
call
into
sti
add
dec
nop
dec
add
adc
sub
rorb
sub
xor
inc
add
xchg
mov
jne
andb
icebp
jbe
inc
push
add
adc
cltd
fdivrs
xchg
adc
push
test
push
sub
jne
xlat
imul
stos
hlt
sub
or
add
pop
jno
push
ffreep
push
frstor
je
push
rorb
or
sbb
sub
test
add
mov
popf
andb
clc
outsb
fiadds
shlb
lea
jle,pn
mov
and
outsb
pushf
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
rcll
sub
add
and
adc
lea
cmpsl
mov
test
push
mov
dec
cld
outsb
add
dec
jns
neg
movb
fs
cltd
push
roll
fwait
mov
or
add
add
and
rolb
je
xchg
bound
mov
rorb
push
push
inc
add
mov
add
push
xor
mov
or
adc
inc
inc
jp
sbb
pusha
sub
push
mov
and
sar
jmp
add
or
fwait
xchg
in
xchg
sub
adc
adc
rclb
cmp
ret
xor
mov
sub
jo
push
aam
sbb
and
outsl
outsl
inc
sub
push
jmp
xor
mov
pop
cmpsl
mov
add
jg
leave
pop
es
push
fadd
sub
sbb
xor
add
jl
cld
movsb
sub
jge
adc
and
jb
mov
les
sbb
jbe
cmp
testl
pop
test
enter
sub
xchg
sahf
dec
xor
pop
ljmp
push
lret
cltd
add
sub
cmp
imul
xchg
incb
pop
dec
loope
sbb
fcoml
in
ret
mov
enter
mov
jle
cmp
xor
inc
xor
dec
and
add
mov
loope
adc
push
js
into
mov
jg
dec
and
add
insb
movb
or
pop
shrb
cmp
enter
fadds
inc
inc
popf
neg
sbb
subl
push
and
push
pop
mov
nop
ret
push
adc
mov
xor
xor
js
ljmp
inc
xor
in
call
jmp
inc
xor
mov
jb
sub
xlat
push
add
sysexit
shll
fisubs
push
or
xorb
nop
mov
add
dec
inc
adc
and
lods
mov
inc
and
ret
sub
lods
lea
js
xor
movsl
pop
ss
jbe
fs
das
cmc
insl
cld
add
hlt
shrd
sbb
sub
dec
cmp
or
test
push
movsl
sub
xor
cli
ss
data16
inc
and
xor
mov
mov
sub
inc
add
pushf
jp
test
or
rorl
rclb
leave
dec
xor
add
fisubl
mov
shl
sbb
ficoms
push
and
imul
sbb
js
jg
mov
or
xlat
jns
cmp
or
shl
fimull
das
cmp
sarl
push
outsl
pop
clc
push
shll
addr16
pusha
add
push
lock
cmc
pop
adc
test
jl
jg
mov
loopne
dec
inc
dec
and
pop
pop
or
or
jo
pop
xchg
sbb
sub
pop
imul
fs
in
add
scas
push
and
mov
xor
sbb
cmp
sbb
and
adc
pusha
fcompl
inc
add
aas
mov
movl
add
jle
add
inc
add
push
sbb
push
call
jmp
lock
sahf
fwait
movsb
and
bound
xchg
adc
neg
call
rclb
or
ret
aaa
push
xor
pop
push
lods
push
js
inc
mov
push
mov
push
pop
add
add
movsl
mov
fdivs
sub
add
and
jbe
add
lret
add
rorl
mov
push
sbb
stos
cmp
xor
and
inc
push
sub
sbbb
jne
mov
nop
push
es
dec
or
out
inc
mov
aam
dec
sub
pop
adcl
enter
or
push
push
push
inc
orl
out
and
adc
adc
sub
xchg
inc
or
and
mov
push
add
cmp
cmp
sbb
lea
inc
sbb
clc
gs
or
pop
add
xor
jne
cmpsl
ss
in
imul
popa
je
inc
je
sti
lds
dec
sbb
sub
add
sbb
mov
inc
mov
xor
into
jb
cmpsb
push
rorb
clc
adc
sti
rorl
add
pop
rcrl
sbb
mov
lock
ret
adc
js
cmp
mov
inc
mov
inc
mov
imul
sub
insb
add
mov
cmp
cmp
adc
jnp
cmp
nopl
xor
inc
jp
sarl
fcomi
jmp
add
popa
sub
and
fstl
loopne
cmp
jp
push
mov
xchg
cmp
mov
adc
je
cmp
icebp
add
arpl
fwait
sub
cmp
bound
sub
or
loopne
mov
lea
push
push
add
and
lock
mov
fcomps
nop
roll
push
mov
and
dec
cld
jg
push
rcrl
sub
and
leave
adc
data16
jl
cs
push
lods
push
push
push
adc
pop
cltd
xchg
cli
movsl
filds
mov
xchg
aam
fidivrs
push
fcmovne
je
push
cmp
dec
test
or
mov
ljmp
push
pop
inc
mov
lock
adc
pusha
jmp
insl
mov
sub
pop
cmpl
or
test
cmp
mov
dec
push
mov
dec
je
or
mov
dec
push
xor
or
mov
pop
sub
rorb
dec
scas
lea
or
in
scas
nop
icebp
nop
outsb
xchg
pop
jb
pop
inc
cmc
andl
pop
sub
add
lret
cltd
je
dec
je
dec
push
push
jmp
or
jmp
dec
push
sub
push
xor
orl
pop
adc
push
xchg
out
lcall
jno
ret
enter
js
adc
sbb
data16
int3
or
outsl
arpl
addl
add
sbb
xchg
leave
sbb
lock
push
push
sbb
je
adc
jne
adc
aas
and
cmp
je
dec
outsl
xor
inc
mov
or
mov
incl
sbb
mov
jbe
or
call
add
adc
das
and
sbb
inc
mov
adc
sub
xor
inc
pusha
sub
and
add
nop
xor
sbb
mov
pop
and
mov
or
pop
dec
rcrb
imul
repnz
sahf
add
and
dec
mov
rcll
xchg
or
or
push
outsl
inc
xor
or
jge
shr
add
or
lods
cmp
pop
add
shr
or
mov
push
push
adc
cmp
add
shr
lret
add
mov
notb
mov
inc
or
add
mov
or
mov
fdivrl
pop
cmp
in
outsb
imul
inc
jbe
add
jl
in
bound
cmp
or
dec
jo
shlb
pusha
inc
imul
add
loopne
inc
fisttpl
cmp
push
mov
inc
adcb
xor
lret
push
jns
into
clc
xorb
jl
add
rolb
jbe
sbb
xor
nop
xchg
inc
test
mov
cltd
cli
out
mov
and
xchg
xor
jp
mov
rcrb
lock
cli
ficomps
adc
xor
push
xchg
mov
fmuls
pop
mov
sub
cmpsl
std
sbb
jne
mov
sbb
stos
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
add
lock
mov
and
sbb
in
inc
adc
dec
jmp
sbb
push
daa
mov
loope
or
fisttpll
loopne
xor
push
sbb
or
out
or
jmp
sbb
addl
lret
shll
sbb
test
dec
jo
les
jecxz
inc
in
adc
adc
out
sub
sbb
out
xchg
dec
add
mov
or
mov
sbb
inc
and
jo
add
roll
push
jge
pop
shlb
sub
shr
pop
adc
add
push
inc
lea
pop
push
pushf
pop
lea
push
outsb
add
sub
sub
cmp
outsl
xor
dec
fs
mov
jb
nop
out
sbb
push
test
or
imul
sub
sbb
nop
repnz
bound
out
add
xchg
cs
add
pop
je
add
push
xor
xchg
sub
fists
jno
fsubrl
or
inc
loop
push
sbbl
mov
sub
push
insb
jge
jo
sub
push
add
adc
pop
call
push
ds
ss
inc
fidivl
pusha
push
ljmp
arpl
cmp
test
lret
pop
add
out
cmp
insl
sub
call
in
mov
and
xor
rolb
rorb
inc
cmp
aam
dec
loope
pop
sbb
ss
adc
mov
cmp
es
fcoml
xor
push
pushl
cmpb
je
adc
pusha
push
insl
pop
push
incl
adc
push
jmp
adc
setne
pop
push
push
and
in
jmp
push
push
mov
add
imul
mov
ds
mov
inc
and
pusha
adc
dec
dec
clc
cmp
sub
inc
or
jne
mov
pop
int
adc
inc
adcb
cmpsl
dec
add
mov
popa
call
ds
rorb
push
cltd
pusha
dec
mov
fprem
out
roll
fistps
ljmp
test
je
mov
iret
and
roll
adc
cmc
call
cmp
ds
or
mov
mov
imul
pop
sahf
jne
add
insb
movsw
sti
lea
cmp
or
pushf
or
mov
jl
or
lret
mov
and
add
and
add
mov
add
push
clc
daa
add
adc
clc
xlat
push
neg
neg
sbb
sub
mov
sbb
add
cltd
add
sbb
xchg
adc
sbb
push
push
inc
and
fldcw
xchg
cmpsb
xchg
xchg
fcomi
sbb
mov
xchg
inc
adc
sbb
and
shlb
push
mov
dec
jns
js
mov
daa
pop
pop
pop
mov
int3
xchg
orb
adc
ret
adc
and
shr
sub
adc
push
idiv
and
maskmovq
testl
cld
lock
je
pushf
xor
add
enter
les
addr16
insl
ffree
jnp
or
add
insl
fildll
jae
adc
and
adc
enter
shrb
push
shrb
aad
inc
cmp
jbe
push
lds
aas
cmpb
jp
hlt
adc
and
push
push
shlb
or
push
daa
pop
push
test
inc
xor
adc
inc
cmp
push
loopne
paddusb
add
pop
add
pop
test
jo
cli
test
nop
add
rclb
ljmp
divl
inc
ss
xorb
nop
aaa
dec
push
xor
jnp
ficoml
rolb
jns
cmp
es
leave
jne
mov
add
pop
sbb
ljmp
pop
mov
lea
enter
and
cmp
test
or
inc
popa
decl
add
xchg
mov
and
mov
mov
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
mulb
loopne
or
xor
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovnu
mov
sti
aas
scas
orb
inc
add
inc
pop
inc
mov
pusha
call
mov
mov
xorb
rolb
lock
test
fwait
ds
movw
jb
add
lcall
xchg
loop
ja
adc
pop
mov
dec
testb
sbb
popa
pop
in
mov
ret
cmp
mov
inc
jb
add
jmp
mov
push
and
sbb
sbb
or
push
add
add
add
cmp
mov
xchg
ficoms
imul
call
incl
dec
inc
imul
lea
sar
inc
das
jmp
lret
cmc
data16
mov
xchg
pop
imul
cwtl
ja
shlb
loopne
mov
cwtl
inc
addl
push
sub
lcall
addr16
mov
push
add
jl
xchg
fstpl
add
decl
jle
xor
test
mov
add
lcall
lods
xlat
mov
test
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
cmp
xchg
data16
ja
les
pop
jp
loopne
xor
out
testl
std
insb
xor
inc
or
cmp
shll
mov
lea
pop
in
add
xor
adc
or
inc
mov
dec
lock
push
lea
mov
scas
dec
pop
xchg
push
push
or
push
or
cs
movsb
mov
jns
je
cmp
lods
shll
inc
in
pusha
bound
mov
mov
mov
repnz
dec
shll
rol
add
sbb
clc
sarl
test
sbb
mov
shll
jbe
push
mov
add
shr
or
and
out
mov
clc
rorb
sbb
push
lret
jae
mov
inc
push
xchg
mov
addb
jle
insb
int3
shrl
loope
shr
or
mov
cli
jmp
xor
cli
push
movsb
mov
push
sti
lock
jb
fdivr
dec
and
lret
xchg
cmpsb
repnz
add
sahf
lret
cli
div
jmp
popa
add
mov
push
imul
adc
add
call
xchg
adc
and
mov
call
fimull
dec
mov
cmpsb
mov
shrl
fldenv
enter
jg
inc
add
push
or
mov
imul
inc
mov
lock
push
add
outsb
dec
pop
fdivl
repnz
pushw
sbb
loop
ss
jge
mov
test
sbb
inc
or
push
jne
dec
in
aam
daa
adc
push
dec
in
push
push
or
outsb
das
and
jno
shlb
fdivrs
aam
add
int3
jbe
dec
xor
nop
and
jo
mov
add
pop
or
test
and
or
fmull
call
mov
and
mov
mov
test
mov
mov
sbb
add
or
popf
clc
adc
adc
adc
jg
or
and
and
add
xchg
lret
out
or
cltd
add
mov
inc
cs
add
jb
or
cmp
jne
jne
adcl
pusha
or
nop
sbb
lret
mov
jp
or
add
sbb
ret
fs
sub
mov
jle
jo
sbb
movb
push
cmc
pushl
xor
cmp
jle
push
pop
outsb
call
add
adc
and
or
pop
adc
roll
rcrb
popf
sbb
pop
inc
rcrl
lcall
frstor
jecxz
and
imul
call
imul
call
push
loopnew
fsubs
pop
imul
add
and
mov
push
in
cmpl
addr16
add
aaa
push
sar
sub
xor
stos
les
enter
in
mov
imul
xabort
mov
sbb
in
inc
dec
enter
sahf
push
mov
lods
mov
and
dec
int3
addl
aas
call
jge
xor
add
add
into
or
mov
adc
addb
je
js
xor
sbb
mov
sub
cmp
jge
andb
cmpb
or
add
dec
cmp
clc
pushf
inc
dec
add
add
fadds
dec
les
adc
shl
mov
jp
adc
out
jmp
divb
int
or
push
sbb
in
jbe
ret
call
loop
add
push
mov
fs
test
mov
in
adc
add
add
in
dec
push
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
mov
inc
loop
movsb
adc
lods
or
or
mov
xchg
add
pop
jne
or
pop
xchg
cltd
adc
je,pt
push
in
inc
xor
ret
sbb
adc
mov
mov
xor
push
imul
and
test
inc
pop
mov
mov
iret
movsb
repnz
lret
into
pusha
inc
pusha
popa
pusha
and
sub
and
pop
pop
test
cmpsb
js
pop
cmpps
test
mov
mov
or
test
push
pop
add
sbb
inc
lcall
or
or
fsubl
add
pop
jo
inc
je
or
pusha
das
rol
push
je
pop
aaa
jecxz
lret
pop
or
shll
pop
sub
pop
xchg
jl
mov
jne
and
mov
clc
ret
test
add
shlb
ret
cli
push
lock
scas
popa
sbb
dec
inc
pushf
cmp
add
loop
clc
mov
test
push
andl
or
push
scas
or
adc
orl
mov
test
xchg
ss
add
xchg
rcrb
mov
loopne
pop
add
adc
inc
sub
inc
lock
imul
adc
or
movsb
sbb
adc
xchg
jb
into
mov
mov
sahf
pop
out
sbb
push
inc
jg
into
jnp
dec
dec
into
into
mov
out
fsubrp
sub
pop
sub
push
pop
nop
ss
out
icebp
pop
sahf
pop
mov
aam
push
shlb
imul
sbb
stos
cmp
or
push
fs
adc
lcall
test
out
adc
loope
jo
add
movsb
es
icebp
sub
stos
arpl
idivb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
addl
mov
mov
lret
es
lret
rcrl
push
xor
rcl
pop
mov
clc
xor
fabs
dec
pop
add
or
sub
or
bound
add
xchg
add
scas
inc
sbb
inc
lock
mov
fcomps
sarl
and
jl
inc
cmpsb
mov
add
push
add
cltd
cmp
mov
enter
cmp
jo,pn
inc
sbb
xchg
repz
xor
adc
sbb
adcb
popf
and
je
dec
sub
dec
loop
jb
out
cmp
je
mov
pop
sub
hlt
mov
cmp
jb
push
test
add
lret
dec
sub
jmp
inc
push
stc
push
push
xchg
cwtl
sub
aam
insb
or
imul
gs
lock
or
push
mov
inc
ret
imul
fwait
repz
nop
mov
movl
adc
dec
cs
faddl
and
push
aam
loopne
cmp
add
inc
pop
mov
aad
inc
je
inc
insl
mov
pop
and
sbb
add
ss
in
add
fmul
sub
mov
pop
adc
mov
xchg
out
xor
shrl
adc
and
movsl
mov
jmp
imul
aad
outsb
inc
jo
cs
xlat
test
and
mov
push
xlat
or
ret
hlt
cmp
push
sbb
addb
mov
popa
sar
into
push
adc
pop
jmp
cmp
lock
jno
sahf
mov
loopne
pushf
dec
mov
cli
mov
push
lret
xchg
xchg
ret
jl
or
les
lds
out
or
push
loope
aaa
movsl
push
and
xchg
std
pop
xchg
ret
mov
hlt
add
push
call
adc
ret
add
adc
push
xorl
mov
pop
adc
add
enter
inc
sub
mov
incb
mov
and
sbb
lds
dec
in
aad
dec
repz
clc
cli
sti
mov
insb
inc
jne
je
mov
jg
xor
sbb
sti
inc
adc
shrb
sub
add
enter
lods
push
mov
add
enter
shll
js
inc
cmpsl
push
insw
cmpsl
add
pop
nop
lea
mov
jle
out
mov
loopne
jmp
dec
adc
mov
fs
pop
inc
xchg
int
movsb
ss
subl
push
js
mov
or
sbb
adc
inc
push
sbb
dec
sbb
xchg
aam
leave
inc
insl
push
add
lods
bndstx
xlat
push
xor
push
lods
adc
aas
mov
sub
add
sbb
sub
add
inc
xchg
and
mov
xchg
fimull
push
pcmpeqb
jg
or
scas
sbb
sbb
cmpsl
dec
insb
xchg
push
and
mov
push
ret
xor
dec
les
cs
int3
or
and
cs
aas
and
sbb
in
repnz
add
icebp
cmpl
pop
mov
lea
add
pop
pop
pop
rcr
dec
push
icebp
pop
sbb
or
inc
loope
popa
subl
lret
mov
test
test
movsb
fcompl
rol
push
rorb
sub
iret
or
sbb
dec
xorb
rcll
push
ficoms
movsb
mov
je
jmp
test
popa
push
clc
xor
imul
leave
push
pusha
enter
push
rorb
xlat
mov
movsb
test
and
push
inc
jmp
adc
sub
inc
mov
insl
call
test
in
mov
push
sar
in
adc
pop
xor
sbb
push
pop
push
and
and
outsl
dec
push
cwtl
pop
sub
sbb
push
rcll
stos
es
add
mov
cmpsl
call
lahf
mov
pop
cwtl
or
xorl
jle
push
shlb
dec
or
and
gs
inc
sbb
and
jo
sti
xor
int3
adc
add
adc
inc
push
shlb
int3
jmp
adc
sbb
xchg
add
or
insl
cld
mov
loopne
call
pop
xchg
loopne
mov
sbb
push
push
in
push
push
push
xchg
clc
pop
mov
adc
ret
dec
mov
inc
add
inc
adc
push
inc
cmp
sbb
mov
add
lret
or
mov
cwtl
mov
or
or
push
sbb
mov
dec
dec
or
into
inc
inc
xchg
enter
xor
leave
into
adc
adc
inc
xchg
sub
cmp
and
cmp
leave
mov
sbb
add
mov
aad
mov
fwait
mov
xor
cmpsb
pop
push
movsl
add
sbb
sbb
and
push
xchg
lods
outsb
insl
clc
pop
adcb
sub
fisubs
hlt
incl
cld
dec
add
push
sub
sbb
pop
sub
cwtl
mov
imul
or
push
inc
sbb
fisttps
xor
out
add
ret
std
test
inc
and
aas
xchg
or
jo
jmp
push
ret
repnz
adc
testb
das
adc
jge
fisubs
and
sub
sub
jae
xchg
push
jo
arpl
imul
ficoml
in
jnp
inc
les
mov
jmp
jb
daa
mov
xlat
jg
nop
dec
inc
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
fadd
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
jp
or
mov
popl
stos
movsl
imul
push
add
repnz
dec
test
cwtl
mov
cmp
adc
lock
xchg
or
icebp
xchg
sarl
sbb
jmp
sbb
loopne
gs
call
sub
into
lock
fadds
aad
insb
mov
mov
jl
je
pop
add
jl
repnz
add
xchg
inc
adc
mov
add
cmp
pop
pop
sahf
orb
or
jp
rorl
push
arpl
xchg
adc
sub
cmp
testb
testb
repnz
insl
outsb
imul
test
or
fs
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
repz
xchg
and
nop
xor
decl
cmpsl
aas
push
jge
dec
cmpl
or
mov
imul
or
cmp
ja
adc
lods
xor
push
add
rorl
mov
sarl
pushl
mov
in
sbb
jl
xorl
xchg
mov
jb
rcrl
or
mov
ret
and
xor
and
adc
and
and
inc
xchg
mov
or
jo
lea
adc
inc
xchg
sub
or
inc
jbe
xchg
sbb
lds
jne
sbb
or
cs
sbb
dec
inc
in
xor
inc
add
les
pop
sbb
stos
test
push
add
add
ja
ret
or
stc
jg
inc
ljmp
pop
add
sbb
adc
push
rcrb
pop
mov
jle
fwait
xchg
and
push
dec
je
inc
push
add
fildl
xor
or
jg
aad
insl
pusha
gs
fs
pop
jl
mulb
adc
push
repnz
adc
xchg
or
cmp
rolb
and
dec
push
lea
ljmp
or
cld
or
or
inc
add
scas
adc
or
dec
lret
outsb
lret
adc
fsubrs
out
pop
shl
aaa
loope
fcoms
scas
inc
dec
push
movb
xchg
cltd
or
push
push
inc
dec
cmpxchg
xchg
outsl
andb
sbb
mov
test
cmpl
sub
ljmp
sbb
push
sbb
dec
sbb
sub
or
push
dec
rorb
lock
mov
es
inc
cmp
push
xor
cmpsb
jmp
and
push
pop
pop
lock
outsb
fcomps
pop
mov
mov
shrb
rep
stos
ds
cmpl
ret
mov
movsl
and
sub
mov
loope
mov
fisttpl
sbb
ret
mov
dec
shrl
nop
aaa
in
push
pop
nop
dec
mov
daa
cmp
adc
or
inc
adc
test
aam
mov
shll
mov
and
or
sbb
pop
adc
lcall
loope
xchg
ret
je
push
es
es
jo
in
js
push
sbbb
pop
jbe
in
je
sbbb
pop
mov
addb
cmpsb
mov
xchg
mov
ss
jmp
cmp
fisubl
sbb
je
xchg
je
mov
mov
sbb
jmp
inc
xor
shrl
sbb
pop
xchg
mov
add
or
sbb
xor
add
popa
dec
ret
and
mov
mov
mov
xor
adc
outsl
loope
xchg
adc
cmp
gs
lahf
cmp
je
dec
jne
push
pop
mov
fcoms
inc
in
add
jmp
xor
inc
xor
adc
adcl
std
pop
movsb
xor
sub
mov
les
pushl
lds
sbbb
enter
leave
leave
cli
inc
cs
arpl
add
inc
mov
push
repz
mov
or
lret
scas
daa
loopew
inc
sbb
mov
loope
in
sub
and
test
rcrl
lahf
in
xchg
lea
subb
inc
hlt
push
cli
push
jb
mov
or
inc
andb
inc
inc
dec
or
sbb
jl
addb
sbb
loopne
std
dec
or
cmpb
sub
add
and
add
xchg
and
jne
jnp
add
cmp
int3
cwtl
fcmovb
mov
lret
pop
pop
mov
pop
sbb
push
push
mov
add
dec
or
push
push
inc
insb
jl
enter
mov
cmp
ret
pop
pop
loop
mov
and
pop
push
xor
pop
fsts
adc
sbb
adc
pop
sbb
ror
mov
jecxz
rorl
stc
push
mov
inc
push
mov
loopne
shlb
and
or
ss
rcll
mov
mov
fwait
cmp
inc
jne
xor
push
imul
jle
sahf
dec
add
pop
ret
sub
jp
add
sbb
scas
adc
dec
cwtl
add
mov
int3
mov
xchg
jo
push
int3
adc
xor
jg
add
fwait
addb
jbe
fdivr
pop
scas
and
adc
push
sub
lock
xchg
dec
hlt
adc
pop
cld
sub
fstpt
lea
add
and
mov
mov
and
mov
fdivrl
jmp
jbe
adc
add
dec
jg
adc
orl
jg
jmp
adc
shrb
ss
or
roll
loopne
call
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
lahf
push
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
out
mov
cmpsl
adc
ss
inc
lret
adc
pop
or
cmp
insb
and
mov
xor
addr16
test
mov
int3
xor
mov
ret
enter
je
cmp
icebp
call
mov
and
cmp
jb
testb
xchg
movb
testb
cmp
inc
dec
loopne
xchg
ret
jge
sbb
dec
dec
push
jmp
inc
ss
and
jb
je
cmp
jmp
sub
sub
pop
adc
daa
pop
imul
test
push
mov
adc
shr
jmp
das
push
imull
push
xor
arpl
add
inc
push
mov
and
dec
mov
cmp
shlb
pop
es
and
pop
jmp
nop
cmc
jmp
repnz
push
inc
pop
pop
dec
enter
push
iret
lods
aas
fadds
nop
sub
mov
mov
sub
andl
or
dec
push
push
and
sbb
jne
test
push
in
sbb
mov
push
or
inc
in
mov
add
and
enter
mov
jb
jae
jne
add
adc
add
add
test
mov
mov
sarb
pop
enter
daa
fldz
mov
xor
xchg
jp
rclb
push
push
sbb
mov
aas
inc
shlb
fidivl
fdivs
dec
push
mov
and
jnp
test
pop
and
inc
xchg
lock
fxch
ffreep
mov
mov
fildll
roll
rcl
cmp
jmp
cwtl
imul
and
icebp
aaa
popa
loop
insb
xchg
rolb
ret
insb
pop
bnd
cmp
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
mov
shl
in
pusha
xchg
inc
and
mov
mov
nop
mov
jmp
lea
mov
sarl
repnz
xor
add
dec
lods
es
jg
out
xor
dec
rcrb
inc
sub
add
adc
adc
or
movb
negb
xchg
xor
pop
int
jns
in
pop
cld
inc
sub
jo
pusha
xor
add
or
in
adc
fstl
fsubr
add
fsubrs
dec
add
xchg
call
imul
in
sub
and
lock
enter
fmul
or
dec
fwait
pop
cld
mov
push
sahf
add
shr
inc
inc
lds
mov
imul
nop
test
ret
pop
js
or
ficoml
movsl
arpl
roll
mov
rcll
or
inc
pop
and
test
in
mov
and
add
fmuls
dec
in
aas
cmp
dec
pusha
leave
inc
or
int
sbb
lock
loopne
add
repnz
jmp
jmp
mov
xor
jnp
dec
mov
or
inc
dec
mov
inc
adc
mov
mov
es
mov
adc
jbe
lock
push
cwtl
popa
or
pop
jb
dec
les
bound
pop
xor
jne
pop
sub
mov
pusha
stc
lea
adc
lods
sbb
mov
xchg
or
in
into
shll
leave
mov
in
mov
push
jns
mov
sbb
fsubrl
shrl
int3
or
enter
pop
out
je
inc
pop
out
fsubr
inc
push
roll
mov
movsb
in
inc
fisubl
xchg
jae
test
sbb
or
push
xchg
pop
in
push
dec
outsb
unpcklps
cmc
jle
xor
mov
leave
imull
das
cld
outsl
dec
push
jno
pusha
and
dec
xor
xchg
dec
xor
jo
js
fcoms
sbb
in
call
push
push
adc
std
jge
mov
adc
mov
in
mov
push
cmpl
lock
scas
sbb
sti
gs
and
push
icebp
enter
xchg
inc
iret
cmp
jne
cmp
sub
adc
into
push
jno
xchg
cltd
and
ret
sbb
adc
xor
sub
pop
cwtl
ja
imull
popa
js
lods
sbb
cmpsl
cmp
cmp
mov
cli
add
in
cmp
in
push
icebp
add
push
addb
imul
orb
lahf
int3
xor
pop
bound
dec
ss
adc
mov
aam
test
push
inc
ss
add
and
inc
jmp
ret
push
xchg
mov
fwait
in
lock
mov
or
dec
sub
hlt
push
push
roll
lods
hlt
sbbb
in
cmc
mov
pusha
mov
ja
and
sbb
or
pop
dec
mov
sub
pop
insl
pop
inc
push
adc
in
add
popa
dec
lock
jmp
sbb
inc
jb
fsubr
jne
push
ss
xchg
test
xlat
mov
sbb
cld
cltd
cmp
imul
cmp
xor
fdivs
out
sub
dec
outsb
cmp
xchg
mov
adc
jae
sti
or
pop
xor
in
enter
sbbl
cmp
aam
aas
jne
xor
inc
cmp
push
es
mov
and
sub
pusha
xlat
and
or
or
xchg
scas
xchg
roll
dec
mov
pop
nop
push
lock
add
add
imul
cmpsl
push
or
sub
lahf
rcll
adc
xor
push
cli
mov
add
pusha
cmp
dec
fdivr
dec
fisubs
lock
stos
adc
push
inc
mov
inc
dec
dec
nop
mov
push
loopne
es
ret
add
add
pop
or
inc
or
push
lea
arpl
inc
xor
jne
test
push
cmp
or
popf
dec
insl
mov
jo
inc
pop
test
scas
or
leave
jno
lods
sti
xchg
in
sbb
shrb
inc
add
in
push
or
or
dec
mov
ja
or
sbb
pusha
cld
add
jns
dec
mov
mov
sub
popf
loopne
movl
sbb
call
inc
std
das
nop
add
sub
std
and
icebp
movsb
dec
sub
mov
jg
movsl
xor
test
cmpsl
out
je
sar
das
cwtl
cmp
sbb
in
or
loopne
inc
cld
fwait
dec
loopne
sbb
and
add
cmp
nop
add
xlat
sbb
push
xor
and
nop
sub
pop
xchg
nop
push
leave
add
sbb
pop
and
inc
mov
cmpl
int3
or
push
pusha
mov
sbb
sbb
and
sti
sbb
xor
shll
incl
jmp
jne
ret
test
inc
sbb
sar
sbb
inc
xor
jo
lea
push
dec
in
setno
ljmp
add
cmp
lock
movsb
enter
sub
or
in
shrl
add
inc
push
lds
aam
xchg
sbb
jb
and
leave
and
and
lock
inc
mov
add
in
cmp
dec
gs
orb
xor
dec
xchg
test
mov
in
out
mov
enter
or
mov
add
pop
lea
mov
lock
mov
fs
mov
lea
rcll
jb
int
fwait
push
and
adc
adc
jo
sub
lret
add
popf
es
pop
mov
add
push
sbb
negl
in
sbb
cmpsb
xchg
add
xor
or
fs
mov
les
adc
mov
jo
mov
sbb
or
xchg
add
sub
rcrl
rolb
mov
test
loope
sbb
iret
mov
lea
mov
rclb
adc
add
enter
push
cld
in
xchg
and
add
insb
pop
clc
fcmovnb
call
sbb
aam
mov
push
fs
add
dec
enter
mov
dec
movsb
addb
mov
lds
comiss
pop
cmp
pop
hlt
push
push
push
adc
mov
call
psubsb
sti
dec
jb
daa
push
pop
jno
insb
test
in
adcb
adc
pop
subb
inc
lds
adc
mov
insl
in
sbb
cmp
dec
jne
call
inc
pop
pop
js
sbb
jecxz
fwait
jno
pop
in
gs
lock
and
dec
sub
pusha
fiaddl
loopne
pop
pop
adc
pusha
or
lods
js
push
bound
nop
mov
mov
jb
enter
les
or
pop
or
or
and
cmp
daa
jo
mov
fisttpl
adc
aaa
pusha
fldt
or
stos
icebp
xchg
outsl
nopl
les
jne
jge
push
pop
cmp
jecxz
jge
cmp
ja
inc
in
sbb
loopne
lds
xor
loopne
add
lods
enter
or
ret
push
enter
lds
outsb
pusha
jb
or
sbb
loopw
pop
inc
fmuls
dec
je
inc
std
iret
pusha
or
lea
fwait
in
int
xchg
movsb
and
shlb
or
scas
or
adc
xor
push
in
inc
or
or
mov
inc
or
andb
push
jno
push
mov
popf
cmp
lods
xchg
insb
push
in
nop
test
stos
dec
cmp
mov
cmp
aam
pop
or
stc
xchg
sub
sbb
or
es
jne
or
xchg
movsl
push
xorl
mov
sub
add
call
adc
les
sub
xchg
pop
xchg
fcmovne
pinsrw
or
dec
or
sub
test
inc
int3
fst
bts
insl
stos
pop
aam
enter
subb
mov
mov
pushf
jl
jae
adc
sub
lret
mov
or
adc
mov
dec
fisubl
pop
inc
les
push
nop
popa
dec
mov
add
jb
push
imul
xchg
std
cwtl
pop
outsb
adc
popf
sbb
jno
xlat
push
insb
arpl
xlat
inc
or
sbb
es
mov
mov
sbb
cwtl
xchg
xchg
fsub
aam
pop
fildl
enter
aam
shlb
adc
ret
pusha
jns
jns
fwait
pusha
add
fdivrs
ja
or
adc
aam
jne
shlb
cs
add
aas
fmul
push
daa
dec
movsb
adc
aas
sbb
stc
mov
adc
insb
or
loopne
fs
test
call
cmc
xchg
lea
and
shl
jbe
mov
out
sbb
es
xchg
nop
pushf
enter
mov
xor
ja
inc
adc
aad
mov
xchg
sub
and
jl
push
popa
ret
dec
ss
scas
cmp
fldt
mov
int
int
imul
shll
mov
sbb
and
out
fisubl
aaa
movsb
fdivr
or
sbb
inc
es
or
mov
pop
lret
adc
outsl
in
in
mov
test
sbbl
aam
imul
mov
lret
nop
mov
adc
cmpsb
mov
add
sub
pop
ja
sbb
push
add
mov
sbb
stos
adc
mov
inc
push
push
insb
imul
mov
push
das
sub
repnz
adc
or
dec
arpl
sbb
or
xor
lods
add
cmp
nop
push
and
sarl
adc
dec
repnz
jb
mov
lahf
test
adcl
cmp
sbb
mov
adc
jbe
push
lea
fdivr
notb
cmp
mov
insl
xor
das
mov
push
dec
xchg
int
inc
rcrb
sub
jnp
stos
dec
js
dec
enter
gs
xor
xchg
inc
pop
xchg
sbb
test
leave
mov
rorl
out
mov
sub
pop
aaa
dec
lock
adc
or
rcl
nop
popa
pop
call
arpl
adc
fldt
sub
pop
sub
and
sbbl
or
inc
es
or
aad
sbb
or
shl
mov
mov
xchg
cmc
add
mov
je
faddl
xor
jl
xor
cmp
adcl
cltd
loopne
call
add
notl
addr16
push
and
push
cmpsl
push
dec
add
je
test
test
sub
insb
lods
and
leave
sbb
int3
sub
int3
adc
jae
inc
fcomps
push
jb
cmp
ret
aam
rolb
sub
rclb
fwait
jmp
dec
call
scas
in
loopne
sbb
insl
mov
inc
jne
cmpsl
nop
dec
or
mov
popf
inc
call
inc
or
and
and
call
jno
sti
xor
and
out
sbb
xchg
shlb
add
orl
enter
xor
jns
mov
cltd
push
push
insl
pop
lods
dec
cmp
rclb
rolb
or
mov
enter
gs
les
in
enter
mov
mov
lret
les
rcrb
adc
divl
in
inc
and
int3
and
pop
fcoms
test
out
stos
jno
fsubl
and
add
leave
je
test
mov
cwtl
in
adc
pop
lea
and
or
bound
inc
andb
aad
movsb
add
adc
daa
sbb
movups
test
push
or
fwait
sub
iret
adc
adc
sarl
adc
jns
cmp
pop
inc
sub
fisttpl
cmpsb
adc
sub
push
push
sub
sub
loopne,pn
gs
inc
pop
adc
js
mov
or
xchg
xchg
scas
dec
mov
fmull
pop
mov
das
mov
cwtl
xor
lods
test
enter
icebp
and
mov
addr16
add
pusha
inc
lret
push
fsubrs
xor
jge
cwtl
mov
js
popf
cwtl
fs
data16
mov
enter
nop
push
pop
popa
and
imull
dec
mov
or
mov
orl
mov
xchg
fiaddl
and
inc
int3
jge
sbb
push
movsl
sub
mov
or
jecxz
movsl
mov
mov
js
popf
adc
add
insl
and
sub
mov
and
mov
dec
pop
jl
fs
pop
jnp
inc
das
ret
nop
mov
in
adcb
orb
sub
psubsb
jge
mov
lods
test
cltd
mov
sub
lods
cmpsl
push
inc
push
in
push
and
and
lods
scas
loop
add
push
lods
in
or
int3
cs
mov
pop
mov
pop
loop
xchg
test
and
add
enter
lods
test
pop
and
lret
push
jne
add
hlt
sub
fsub
inc
mov
test
push
das
sub
jno
xchg
jl
inc
mov
cmp
call
jbe
xlat
enter
loop
mov
sub
sub
sbb
movsl
push
xor
test
mov
loopne
jb
enter
push
movsl
inc
jno
aam
mov
or
xor
das
mov
inc
in
pop
xor
mov
test
xchg
push
dec
sbb
mov
inc
xorl
xor
ret
sbb
pop
pushl
clc
loope
xchg
mov
loopne
mov
rorl
aad
fs
mull
add
negl
imul
inc
in
insb
adc
fs
push
insl
pop
mov
push
pusha
cltd
fs
imul
cmp
xchg
dec
es
sbb
inc
dec
es
cmp
ljmp
pop
add
or
cli
pop
xor
das
xchg
jmp
sub
push
dec
cmpsb
jne
fwait
inc
cmp
lds
inc
das
xchg
daa
ret
ja
adc
inc
or
inc
orl
ss
dec
and
mov
add
or
ss
or
or
xor
std
aam
sbb
mov
aaa
jnp
jp
dec
scas
pop
aaa
xlat
imul
in
notb
ret
xor
jno
or
std
xchg
les
cmpsb
andb
adc
inc
in
adc
xor
jns
test
dec
fiaddl
cmp
je
mov
or
pop
insb
dec
call
cmp
add
xchg
lock
sbb
and
sbb
mov
xor
movsl
push
sbb
ret
cmp
add
adcl
xchg
test
les
enter
dec
test
int3
dec
test
les
rol
pusha
pop
rcl
iret
aam
and
sub
iret
cmp
imul
xor
pop
adc
dec
xor
sbb
push
xor
decl
rorb
arpl
adc
adc
mov
jg
cmp
inc
rclb
call
or
jne
sub
fcompl
rol
xor
add
and
add
pop
test
je
inc
pop
add
loopne
sub
cmp
test
push
hlt
ja
mov
mov
dec
and
testl
push
pop
dec
mov
cs
aam
xchg
lock
jnp
or
ljmp
and
popa
dec
mov
or
test
dec
inc
pop
xchg
test
aas
xor
inc
test
mov
adc
shlb
jmp
and
xchg
push
lock
jno
mov
ret
ja
add
imul
test
aas
mov
and
in
xor
lods
mov
jb
cwtl
and
cwtl
jbe
inc
push
movsl
adc
inc
movsl
ljmp
inc
in
rorb
or
mov
notl
in
enter
aaa
imul
add
test
sub
xor
sbb
ret
scas
insl
in
pop
addr16
inc
sub
outsl
mov
jne
insl
and
xchg
orl
cwtl
mov
mov
in
aad
mov
je
adc
xor
adc
jo
inc
inc
cltd
stos
pop
mov
test
aam
and
push
dec
push
loopne
xchg
adc
mov
inc
inc
sbb
in
ja
or
mov
xchg
inc
inc
lods
push
shl
stos
mov
icebp
rolb
stos
mov
fistpl
jg
leave
xor
inc
cmp
sub
xor
adc
add
loop
mov
out
pop
xchg
inc
add
or
xchg
inc
aam
mov
or
cs
or
leave
mov
aam
loopne
fsubr
in
dec
mov
fildll
imul
mov
jecxz
loopne
jg
xchg
test
and
pushf
test
push
enter
dec
cmp
push
sbb
xor
nop
cmp
ss
pop
adc
mov
inc
call
imul
popa
and
push
arpl
inc
lods
dec
jne
cmpsb
pop
jge
push
mov
jmp
ud1
sbbb
loopne
scas
insl
push
xor
pop
xchg
fs
push
movsb
sbb
js
sbb
nop
mov
nop
arpl
test
cmp
fwait
mov
sbb
in
add
enter
insb
lods
insl
sbb
mov
outsb
aaa
mov
shrd
movsb
inc
ror
insl
xchg
xchg
pushf
pop
xchg
bswap
leave
leave
leave
leave
enter
xchg
xchg
fcmovne
test
lds
xchg
orb
jo
leave
add
aam
or
fsubs
xchg
mov
xchg
push
lcall
icebp
in
mov
stos
dec
mov
lret
add
mov
dec
jns
cmp
sbb
push
push
jl
movsb
mov
frstor
mov
add
adc
in
adcl
mov
push
loope
sub
mov
imul
lock
sbb
jecxz
dec
ja
and
or
push
nop
rcll
pop
pop
pop
enter
aam
adc
and
aam
imul
jmp
jae
movb
bound
lods
es
jo
lock
mov
movsb
in
mov
mov
inc
mov
in
mov
nop
xchg
sub
add
pop
rcl
adcb
mov
add
sbb
loope
ret
sbb
push
mov
jae
lods
das
call
popa
jge
insb
stos
dec
sarl
mov
or
in
iret
call
pusha
sbb
cmp
rolb
dec
adc
leave
and
dec
sbb
and
dec
xor
imull
imul
push
repz
sbb
jecxz
or
adc
test
aam
dec
jl
leave
pop
sub
mov
push
mov
cmp
xor
xchg
insl
mov
pop
scas
or
push
lds
pop
cmpsb
sbb
insl
dec
or
xchg
dec
mov
arpl
jecxz
mov
leave
xchg
xor
lds
inc
mov
xor
stc
dec
fcom
add
btr
adc
insl
aas
outsl
fsubs
dec
sub
arpl
sub
jnp
mov
stc
les
std
shlb
sbb
push
push
pop
xor
pusha
int3
xchg
or
push
ss
pop
mov
dec
cltd
test
mov
sbb
fs
push
sbb
sbb
pop
test
rolb
pusha
xor
pushf
dec
mov
mov
and
rclb
rclb
fmul
stc
pop
andb
in
test
jecxz
nop
inc
push
cmp
add
jo
adc
xor
or
sub
int3
aas
or
rorb
inc
scas
aas
mov
pushf
or
test
movsb
fisubl
pop
sub
push
or
leave
or
rolb
stos
sub
xchg
orl
xchg
pop
fwait
movsb
adc
mov
sub
add
add
loopne
adcb
shrl
sub
stos
test
scas
add
insb
mov
and
rcl
das
sbb
dec
push
mov
movsb
xchg
ds
fadd
mov
out
pop
inc
dec
mov
push
nop
push
or
push
mov
std
jo
mov
xor
mov
je
jo
push
jmp
mov
bnd
ret
cmp
aas
pusha
pop
dec
xor
xchg
add
insl
push
lret
or
sub
repnz
imul
and
adc
insl
hlt
cltd
inc
subb
movsl
in
loop
repz
insl
mov
mov
or
sti
leave
and
add
fists
adc
add
leave
and
sub
mov
push
mov
movsb
les
bound
pop
clc
mov
jbe
scas
cltd
push
fwait
jo
add
icebp
sar
xor
or
or
lds
clc
icebp
inc
pop
inc
and
adc
bound
in
ret
int3
rorb
enter
rcrl
mov
sbb
adc
mov
aad
sbb
fsts
add
sub
add
nop
repnz
mov
call
lcall
pop
insl
inc
or
lds
lods
sub
cmp
inc
imul
in
and
rep
test
mov
or
mov
scas
push
std
loopne
rcr
pop
sbb
add
dec
roll
sbb
aas
xchg
xchg
adc
pop
mov
test
cmp
bnd
sub
cmp
xchg
inc
push
inc
cmp
xor
shl
mov
and
or
xor
xor
push
movsb
jne
jmp
stos
inc
dec
insb
imul
or
add
jno
push
inc
mov
ljmp
pop
inc
or
inc
int
call
or
mov
push
test
pop
mov
adc
jne
arpl
es
mov
pop
mov
xor
add
sbb
and
lods
notl
loopne
pop
dec
or
xchg
popa
adc
add
dec
sahf
jg
insb
imull
in
pop
and
xchg
sub
ficoml
cltd
adc
in
adcb
inc
sub
sub
dec
sbb
arpl
add
cmp
or
inc
xor
inc
pusha
and
fildl
icebp
gs
or
or
popa
jno
adc
xchg
lods
jne
mov
outsl
fdivrs
ret
xor
std
orl
add
pop
push
xchg
mov
daa
fwait
hlt
leave
sbb
or
dec
imul
push
insl
in
nop
pop
enter
mov
sub
sbb
inc
pop
mov
fstpl
sbb
cli
inc
adc
jno
lcall
and
dec
test
adc
rep
imul
orl
cwtl
lds
test
or
mov
sbb
and
cmpsb
fwait
ret
inc
add
movb
sbb
sub
or
icebp
sbbb
cmp
dec
or
xchg
cmp
push
nop
cmp
shlb
lds
xchg
sbb
lods
out
mov
adc
cmp
fs
lea
add
int3
xchg
pop
sub
loope
stc
cmp
mov
sbb
mov
or
into
int
stc
sbb
fisubrl
pushf
je
lcall
loopne
sbb
mov
inc
cmpsb
xchg
sub
cwtl
mov
xchg
adc
orl
test
ret
scas
insl
ret
inc
add
adc
pusha
push
push
ret
leave
fstl
sub
stos
loopne
mov
test
lds
xchg
adc
cltd
fs
test
mov
push
sbb
shl
movsb
mov
nop
rcll
call
dec
mov
ret
pop
xor
rorl
push
sub
and
add
jg
call
xchg
mov
pop
inc
or
add
in
push
adc
shrb
xchg
cmpsb
jle
jnp
fnsave
mov
rorb
scas
mov
cltd
push
arpl
loopne
jns,pt
in
hlt
xor
jb
jae
xor
push
or
rcrb
imul
jmp
cmpsl
sub
in
inc
jnp
pop
jb
call
in
in
fists
leave
andl
push
dec
and
add
jge
pusha
neg
cld
adc
add
mov
add
and
push
mov
es
push
and
mov
dec
jmp
lea
cmp
in
and
out
sbb
xchg
int
add
shrl
mov
sub
fs
sbb
aam
dec
push
fs
push
mov
repnz
sbb
push
pop
push
adc
mov
push
mov
pushf
adc
push
lcall
gs
push
or
scas
int
xchg
and
jno
pop
pop
adc
rcll
adc
fists
cmp
jmp
adcb
or
push
push
arpl
lcall
clc
or
pop
jns
out
inc
push
jno
cmpsl
sbb
jecxz
add
andb
mov
fmuls
cmp
inc
aas
or
push
int
enter
lea
add
idiv
incl
or
jnp
mov
add
adc
mov
rcll
xchg
adc
cld
clc
push
or
cmp
rclb
cmpl
test
add
nop
cmp
mov
add
into
pop
adc
test
xor
cmp
pop
push
xchg
stos
jge
cmpsl
stc
sub
or
test
jb
xchg
sbb
aas
rdpmc
add
pxor
jnp
add
pop
sub
outsl
fwait
inc
jns
push
bound
and
insb
outsl
arpl
imul
pop
sub
cld
jb
sub
popa
arpl
jne
fisttpll
outsb
je
add
add
push
insl
adc
push
and
push
inc
outsl
jb
fstpt
je
jb
gs
add
or
outsl
jle
mov
add
add
add
jne
les
ja
neg
inc
and
jb
dec
push
add
add
cmp
add
add
or
push
es
add
inc
xor
fisubrs
add
aas
push
add
fidivl
push
pop
dec
add
sub
jnp
in
add
xchg
je
je
and
xor
das
dec
fisttpl
fs
fcomip
daa
cmpsw
insl
push
push
or
mov
jns
push
jne
popf
pop
in
sahf
imul
divb
xor
insb
jp
out
fisttpl
out
outsl
or
mov
outsb
dec
fldt
gs
bound
and
outsl
jmp
jo
mov
out
xor
stos
insl
sub
pusha
nop
loopne
push
imul
idivl
jb
jne
inc
push
data16
xchg
out
sbb
insb
jp
sub
mov
lcall
ret
or
lahf
popa
push
jno
pop
pop
outsb
inc
arpl
loopne
fildl
jae
daa
dec
jbe
mov
xor
ret
jge
outsb
bound
jnp
sbb
fimuls
arpl
mov
xor
bound
lds
filds
push
das
or
jbe
xor
fidivrl
sub
adc
cs
js
shll
ret
bound
test
gs
popa
rorl
push
outsl
xchg
mov
aaa
jg
add
fbstp
fisttps
jne
xor
xchg
jb
jne
pop
rorl
inc
jnp
and
bnd
mov
sbb
sub
cmp
cmpsb
ljmp
outsl
pusha
or
iret
arpl
sbb
push
mov
xlat
cs
subl
je
lret
imul
arpl
mov
imul
shll
jnp
mov
stos
rdtsc
cmpsl
outsl
add
cld
pop
sub
loope
bound
mov
stos
jnp
mov
pop
insl
lret
je
scas
loope
test
mov
fcomp
mov
push
pop
scas
popw
pop
inc
cmp
push
sub
push
addb
mov
int3
addr16
add
out
sbb
push
add
push
and
repz
inc
inc
orb
sub
out
shlb
adc
adc
push
iret
repz
sbb
clc
sahf
out
lcall
cmp
push
pop
xor
lahf
stc
mov
fdiv
js
jns
xchg
jo
jnp
iret
push
cld
loop
jns
inc
lcall
pusha
dec
aaa
lods
lock
add
mov
jp
dec
mov
movb
push
sbb
fwait
sbb
mov
add
pop
mov
clc
cmp
imul
mov
ds
mov
rorl
push
negb
cmp
dec
sti
mov
push
xor
mov
and
jns
frstpm(287
mov
das
and
pop
mov
ljmp
jbe
sbb
inc
ljmp
addr16
in
xlat
div
jns
aas
dec
inc
faddp
pusha
mov
in
jne
xor
daa
outsl
loopne
insl
test
pop
rorl
mov
pop
pop
arpl
iret
jns
cmpsl
mov
insl
out
out
and
arpl
scas
jne
lods
pop
jp
jae
push
in
fisttpl
and
sub
pop
in
cmpsb
pop
sbb
ds
fcmovnb
mov
neg
iret
mov
and
sbb
jle
cmp
cmp
add
dec
outsl
rcrl
and
jns
add
das
das
jns
std
loop
ficoml
push
inc
inc
arpl
bound
dec
outsl
jbe
add
pop
dec
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
cli
lds
xchg
inc
jo
imul
test
outsb
adc
cmp
pushf
cmpsl
xchg
popl
fistps
popa
je
jb
xor
mov
jae
push
gs
mov
sahf
mov
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
icebp
lcall
jnp
test
ja
mov
jae
push
xchg
out
adc
popa
insb
jne
inc
xchg
test
inc
mov
or
jg
aas
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
cmpsl
push
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
sbb
and
push
push
pop
pop
pop
pop
pop
ret
ljmp
xchg
pusha
popa
bound
gs
imul
jo
add
jbe
js
jp
jl
jle
dec
inc
cmp
pop
loopne
pop
mov
mov
dec
rorb
ljmp
idiv
cld
sti
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
inc
clc
jp
xorl
outsl
sbb
or
pushw
outsl
das
xor
mov
std
push
add
jo
xor
mov
js
addl
je
pop
dec
pop
sbb
jl
mov
out
ret
ret
sub
int3
adc
pop
movsl
jge
adc
add
add
add
add
ret
pop
and
push
pop
push
add
xor
lahf
sbb
and
add
pusha
push
int
js
or
cmp
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
in
js
mov
int
push
pop
icebp
push
outsb
imul
jo
xchg
mov
add
pop
and
sbb
addl
out
xchg
add
lea
cs
nop
xchg
mov
xchg
mov
inc
fisubs
or
inc
flds
mov
lret
hlt
push
cli
mov
pop
lods
mov
enter
add
jmp
jp
sbb
cmp
push
rcl
pop
sbb
push
inc
sub
or
rdtsc
ss
js
dec
dec
inc
dec
inc
adc
mov
mov
notl
fs
add
adcl
cs
jae
sub
dec
dec
bound
je
outsb
data16
push
jbe
inc
fcomi
ss
out
je
xor
push
mov
jne
daa
pop
lea
repnz
addr16
outsl
js
push
xchg
cs
ljmp
insl
jo
jo
and
and
pop
pop
xchg
shlb
aaa
insb
les
dec
imul
or
inc
mov
les
cmp
dec
inc
jb
jns
daa
jnp
fdivs
push
jns
mov
clc
push
pop
pusha
je
and
arpl
je
or
addr16
xorl
fsubrl
push
jbe
mov
jo
or
jb
and
xor
mov
fwait
xchg
pusha
inc
jbe
push
push
sbb
imulb
push
add
and
xor
pop
jbe
popl
inc
imul
jp
cmp
push
orb
lds
mov
push
inc
daa
mov
test
pusha
lock
mov
shll
outsb
mov
lods
jbe
adc
cmp
sub
pusha
insb
call
inc
hlt
clc
addr16
subl
js
mov
mov
mov
mov
inc
xor
jbe
push
push
push
push
dec
testl
dec
mov
xlat
dec
push
lods
lea
stos
popa
fisttps
pop
mov
insl
ds
or
jb
push
imul
call
push
lds
jg
sbb
jae
inc
in
rorl
push
xor
add
je
inc
adc
mov
subl
stos
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
out
push
sub
es
dec
cmp
mov
jle
lahf
cmpsl
fnsave
add
add
sub
pop
or
sbb
das
xchg
inc
or
aaa
sahf
sbb
cmp
ds
pop
pop
jne
rol
in
stos
addr16
push
jbe
scas
loopne
popf
sbb
jo
ss
gs
imul
mov
dec
cwtl
inc
cmpb
sahf
inc
pop
xchg
mov
inc
jo
sub
sbb
jl
out
sub
repz
push
inc
add
sub
add
mov
lock
sti
sahf
out
das
enter
pop
push
mov
jns
mov
lods
test
fdivp
cmp
cwtl
xchg
nop
mov
iret
push
outsb
cmpb
xchg
sahf
idivl
je
jo
push
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
sahf
out
cmp
push
sub
adc
xor
out
add
or
enter
iret
test
push
out
ds
pusha
jns
out
push
dec
inc
xor
repz
out
cld
or
shlb
mov
or
or
out
sahf
int3
test
push
xor
jg
out
mov
push
lock
mov
mov
xchg
inc
mov
and
and
mov
add
addl
add
ljmp
xchg
dec
leave
stos
push
add
cmp
add
add
xor
push
mov
adc
or
fcomps
inc
in
pop
ret
insl
sbb
das
jle
cmp
inc
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
ljmp
mov
mov
mov
mov
mov
mov
ret
enter
dec
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
movsl
push
test
and
adc
loope
test
test
call
loop
and
lock
popa
and
or
mov
je
inc
fimuls
dec
pop
shlb
outsb
push
xor
aam
jg
add
fidivl
js
cmp
outsl
dec
arpl
inc
insb
fs
sbb
mov
je
xor
outsl
lods
mov
push
femms
loopne
lahf
pushf
pcmpgtw
xor
push
inc
adc
xlat
add
push
xor
push
dec
inc
dec
jl
xchg
aad
dec
lret
das
push
shrl
mov
adc
adc
filds
inc
call
rclb
mov
in
xchg
idivb
jnp
inc
loop
mov
ds
pop
adc
call
or
cli
jb
jge
arpl
pop
in
dec
scas
jp
jno
in
fstl
nop
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
addr16
leave
or
insb
mov
out
leave
ljmp
add
loopne
dec
test
shrl
leave
hlt
std
aas
jl
adc
xchg
dec
add
scas
lods
dec
lock
xor
adc
fistps
into
or
icebp
pop
pop
repnz
fistpl
sub
lret
es
sbb
add
outsl
aad
mov
pop
pop
inc
out
sbb
adc
inc
xchg
cmpsb
or
sub
jo
cld
into
mov
mov
mov
das
outsl
mov
push
mov
fadds
dec
xchg
je
fbld
pop
and
ret
mov
pop
fidivrs
or
es
jae
rclb
add
mov
xorb
scas
push
or
mov
arpl
bound
jg
rcll
cmp
test
sti
or
ja
popa
daa
sti
je
test
and
je
sub
jmp
movl
mov
or
push
xchg
lret
xchg
loop
in
mov
push
or
cs
jb
add
mull
sub
scas
lahf
ja
dec
mov
aaa
cmpsb
outsl
add
pop
jae
in
jae,pt
insl
jle
or
push
fisubs
cmpsl
mov
inc
sub
lock
fadds
lahf
arpl
aaa
lock
adc
push
pop
jno
fbstp
out
sub
fisubs
push
push
ret
jg
fildl
mov
fcoms
cmp
xchg
stos
add
add
sub
jl
lret
jg
out
or
xor
sbb
jo
push
pop
jns
outsb
xlat
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
nop
push
add
imull
sbb
cmp
pop
add
cmpsb
fbstp
mov
imul
insl
pop
arpl
addr16
push
xlat
je
jo,pn
imul
sbb
mov
mov
rclb
inc
divl
mov
sbb
cmp
sbb
sub
xor
rorl
subl
lock
dec
dec
outsl
adc
loopne
sti
aas
mov
cmp
jp
cmpsb
aad
mov
pop
add
xor
jo
mov
repnz
mov
js
es
inc
addr16
xlat
in
imul
data16
popf
pop
sti
mov
mov
arpl
daa
pop
arpl
ds
and
and
and
and
hlt
aam
arpl
les
rorb
add
js
jo
cmpsb
lcall
je
in
add
pop
mov
jnp
add
dec
adc
arpl
adcl
inc
fwait
inc
mov
subb
fbstp
push
pop
aaa
jns
and
js
jno
add
jo
add
test
push
sahf
pop
aaa
sbb
ja
mov
aaa
cs
ret
repnz
repnz
jae
xchg
adc
arpl
cmp
inc
cmp
xor
cmovnp
dec
loope
hlt
andb
xor
pop
daa
decb
or
add
cmp
je
jae
sub
xchg
mov
jnp
hlt
jae
push
adc
aaa
sub
add
or
or
xor
dec
xlat
roll
push
xchg
cli
push
movl
inc
or
sub
cmpsb
push
shr
lcall
je
mov
jne
xor
add
dec
out
dec
adc
fists
inc
out
repz
aaa
divb
pop
adc
jno
dec
imul
pop
loopne
loope
ljmp
jb
push
addl
shll
outsb
or
loopne
mov
add
sahf
push
lret
das
pop
or
sti
dec
and
fidivrs
jb
push
cmp
pop
pusha
fsubl
mov
adc
aas
rorb
add
push
sti
aaa
addr16
cs
ja
adc
mov
push
ret
ja
adc
dec
xchg
jg
fnsave
pop
out
inc
push
inc
idivl
imul
mov
cmpsb
divb
insb
ja
push
inc
inc
sbb
aad
add
aas
imul
inc
ss
mov
outsb
and
inc
mov
pop
je
pop
pop
scas
clc
je
pand
insb
pop
pop
mov
mov
xchg
pop
scas
inc
bound
je
insl
shll
mov
ja
mov
int3
xchg
inc
arpl
pop
aas
xor
add
xor
inc
inc
outsb
filds
mov
mov
inc
jl
jl
adc
lock
fistps
mov
ljmp
popa
sbb
testb
jae
lret
fsubrp
and
addr16
bound
pop
inc
repnz
cs
outsl
lock
ret
mov
jl,pn
mov
mov
jns
jae
jo
jl
push
rcr
sbb
jl
xor
adc
sbb
jmp
es
aaa
mov
add
ja
push
cmpsl
jnp
outsb
mov
jecxz
and
arpl
cmp
cmp
loop
and
fsubl
xchg
cmpsl
jnp
sub
outsl
lret
jl
jo
mov
cmp
lock
or
lea
push
iret
sarl
stos
add
fs
dec
pop
ds
iret
imul
push
lods
xor
add
jl
mov
inc
or
xor
cmp
mov
adc
es
mov
addr16
add
imul
xlat
adc
test
push
rol
sbb
sar
rcr
les
daa
ret
daa
orl
hlt
sub
jns
mov
iret
mov
das
dec
mov
sbb
das
cmpsl
pop
push
pop
scas
subl
pop
xchg
xchg
adc
scas
fbld
push
pop
jg
jb
mov
jecxz
bound
data16
push
push
insb
inc
shrl
aas
test
mov
popa
aas
xchg
and
xlat
aaa
dec
popa
lock
comiss
jge
xlat
mov
andps
push
push
add
xchg
mov
shrl
test
inc
push
dec
mov
pop
push
das
sbb
lcall
sbb
inc
add
je
mov
mov
push
push
retw
je
push
push
int
cmp
aad
fsubl
fisubl
push
sub
push
es
adc
jbe
leave
imul
inc
out
inc
ds
mov
cmp
mov
push
aaa
pop
inc
ljmp
jbe
orl
pop
mov
cmp
mov
je
bound
or
inc
push
adc
movsb
jae
out
dec
sti
mov
push
jp
sahf
out
out
pop
xchg
inc
outsl
jg
push
sahf
out
lret
mov
mov
push
cmp
pop
mov
add
decl
rorb
pop
jae
data16
popa
pop
jo
jns
rcrb
shlb
xor
push
jecxz
cmpl
push
mov
xorl
mov
xchg
add
mov
or
aas
addr16
and
pop
ja
add
push
and
loop
arpl
push
gs
insl
pusha
push
popa
jne
or
mov
imul
bound
xor
mov
xchg
sub
and
mov
outsb
aad
push
cmp
repz
leave
clc
cld
jns
cmpsl
stc
and
push
jl
repz
out
or
sub
fdivp
cmp
insl
mov
test
popa
mov
pop
xor
xor
cmp
lock
gs
je
cmp
scas
sub
push
jo
jb
mov
jae
cmp
ss
movzbl
and
and
mov
jae
imul
pop
adc
addb
pop
clc
push
data16
outsb
je
ss
fidivl
das
cmp
imul
dec
outsw
sub
ja
in
lods
ret
imul
fsubl
jae
movsl
or
push
fisttpl
aas
push
mov
subl
pop
andb
mov
ss
push
sub
ja
inc
add
dec
push
mov
lods
das
js
inc
pop
lock
pop
inc
sub
sbb
inc
sbb
mov
pop
adc
or
imul
push
add
mov
and
adc
mov
pushf
adc
sahf
addr16
jb
repz
xor
pushf
mov
push
dec
adc
add
fisttpll
jge
cli
outsb
call
or
addr16
or
scas
inc
sbb
and
stos
aaa
mov
iret
mov
xor
and
mov
loop,pn
fs
and
jo
and
ja
push
sub
mov
out
aaa
or
fisubl
popl
data16
dec
push
add
dec
sbb
sub
add
mov
outsl
mov
lods
fmuls
sar
lret
les
sub
xchg
loop
addr16
hlt
dec
imul
dec
adc
add
dec
stos
or
dec
outsl
sti
ja
or
xchg
sub
mov
jae
xchg
pop
dec
inc
mov
sub
shll
mov
xchg
push
xlat
fistps
mov
dec
and
add
add
jl
sub
imul
ja
ja
iret
gs
imul
jp
repnz
mov
data16
add
lea
ljmp
das
lods
xchg
mov
clc
lahf
mov
and
jo
outsl
jb
fs
gs
scas
data16
call
scas
cwtl
xor
dec
inc
push
jo
mov
test
lahf
or
jbe
xchg
test
pop
stos
mov
cmpsl
cmp
add
lods
inc
ja
imul
pop
add
add
adcb
iret
data16
insl
pop
push
inc
add
adcl
mov
aas
push
cmp
dec
outsl
pop
add
inc
cmp
stos
adc
mov
dec
dec
sti
scas
add
add
das
ja
pop
sub
pop
cmp
andl
mov
sbb
add
inc
data16
pop
inc
jnp
jge
test
imull
sbbl
das
rcll
jb
pop
jno
cs
jns
sub
cmp
insl
jo
fwait
mov
pop
aaa
jns
xchg
sbb
push
dec
dec
out
xlat
arpl
push
sub
sbb
roll
outsl
xchg
hlt
lods
adc
mov
mov
shlb
sub
push
mov
or
push
and
dec
aaa
xor
sub
jo
mov
push
inc
test
stos
cs
and
sub
fsubrl
pop
sbb
inc
scas
pop
movsl
icebp
inc
push
inc
fisubs
sbb
dec
cmc
ljmp
insb
mov
nop
sbb
pop
sbb
mov
mov
pop
repz
or
push
rcrl
adcl
xlat
inc
push
imul
sbb
shlb
roll
pop
fsubrs
orl
inc
adc
jmp
xchg
mov
pop
xchg
mull
arpl
or
inc
jmp
lock
xor
mov
push
mov
sub
jecxz
fbstp
mov
ret
jnp
lahf
mov
arpl
arpl
push
popa
jo
xor
pop
jmp
inc
xchg
push
insb
out
rcll
rep
jmp
push
lds
arpl
pop
mov
xchg
jns
dec
outsl
out
or
push
add
out
stos
push
dec
xchg
jbe
add
pop
add
fsubs
cmp
push
pop
xchg
push
inc
bnd
push
mov
xchg
mov
roll
loope
pop
das
ss
xor
add
or
test
lahf
cmpsl
xchg
stos
xor
je
lahf
sbb
add
xor
pusha
xlat
aaa
xor
pop
es
jp
add
cmp
mov
add
popa
mov
xlat
push
andb
push
mov
scas
pop
pop
adc
shl
leave
cmpsb
add
mov
subl
lcall
or
add
jno
or
incl
stos
push
or
add
cmovg
popf
ret
or
lock
or
arpl
imul
jbe
xchg
xor
mov
mov
outsb
pusha
into
ds
faddp
cmp
push
xor
sub
aaa
xor
divl
dec
push
inc
mov
mov
mov
mov
imul
add
mov
and
jo
inc
sbb
mov
xchg
daa
lea
add
addr16
sub
lcall
xchg
xchg
add
mov
sti
push
mov
cmp
lods
divl
inc
mov
es
xchg
push
aaa
dec
cmp
or
cmp
and
aaa
or
dec
lahf
or
xchg
push
mov
pop
fildl
movsb
daa
scas
aaa
call
sbb
sub
xorl
mov
lsl
bound
je
jae
add
add
xchg
cmp
or
popa
jb
xor
fiadds
inc
punpckhdq
loope
aaa
inc
pop
push
mov
push
push
mov
and
cmpsb
das
pop
minps
filds
adc
push
jmp
outsb
testb
push
add
or
dec
push
rorl
push
pop
sbb
divl
cmc
ljmp
mov
pop
mov
iret
jp
jge
push
cmp
fwait
jecxz
add
mov
cmp
inc
mov
xchg
sbb
incl
iret
cmp
outsb
add
out
jp
xchg
das
xor
inc
lods
orl
cmpsl
xlat
adc
pop
sbb
and
sbb
jns
andl
out
cli
dec
push
cltd
or
xchg
dec
pop
cmp
and
dec
push
js
addb
pop
aam
pusha
add
out
or
sbb
clc
pop
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
add
shrb
ret
sub
shrb
cmpsl
fldcw
pop
adc
insb
sbbl
pop
sbb
data16
dec
str
mov
fwait
add
inc
stc
das
incl
xor
sub
std
inc
sbb
cmpsb
xor
mov
jl
nop
sti
orl
int
mov
pop
or
repz
iret
repz
adc
out
dec
xor
iret
mov
jne
and
mov
push
inc
lret
popa
adc
xchg
and
addr16
add
and
inc
push
or
testl
xor
pusha
mov
or
cli
imul
cmp
arpl
sub
or
aad
sbb
stos
outsl
jne
je
js
repnz
jae
sbb
cwtl
scas
jne
lods
push
jg
ret
or
bound
mov
add
das
pop
or
adc
aaa
pop
xor
out
jecxz
sbb
mov
mov
adc
mov
fucomip
scas
sbb
xlat
cmp
xor
xchg
fiaddl
push
adc
xlat
fwait
xor
dec
scas
aas
insb
add
mov
mov
inc
scas
push
sbb
stos
and
pusha
les
fidivrl
aam
xlat
das
sbb
bound
stos
push
pop
shrb
and
aaa
insb
rorb
ret
pusha
shlb
cmp
jb
push
add
scas
pop
add
loop
jnp
inc
test
daa
stos
and
pop
addr16
xor
fs
loop
loope
imul
outsb
sbb
mov
jle
xchg
sahf
scas
imul
jp
add
orb
aaa
dec
out
mov
mov
mov
pop
outsb
daa
out
push
mov
fisubs
iret
bound
pusha
xlat
sub
pop
push
lods
mov
maxps
shrl
jle
push
mov
inc
fnstcw
or
mov
insb
sbb
cmpsb
xchg
push
int3
mov
mov
and
loopne
in
cltd
dec
nop
cmp
push
leave
stos
in
mov
pop
dec
hlt
mov
movsb
push
add
xchg
mov
xchg
push
leave
push
or
cmpsb
fs
leave
push
repnz
pop
and
stos
in
and
mov
pop
and
sub
mov
dec
and
mov
in
jb
inc
lock
scas
xchg
test
xchg
mov
xchg
push
leave
dec
clc
scas
movsb
repnz
and
pop
sub
pop
or
fs
xchg
dec
and
inc
push
and
push
adc
pop
dec
and
subb
push
movl
xor
aam
cmp
adc
xor
inc
add
xor
ret
ret
test
push
fiaddl
xor
push
add
push
ja
or
inc
ds
in
iret
dec
jg
sbb
das
inc
mov
xchg
xor
mov
pop
dec
test
sub
jae
mov
aaa
mov
mov
pop
arpl
pop
fisubrl
fimull
flds
mov
push
fisttpl
mov
fidivrl
inc
inc
aaa
addl
pusha
dec
packuswb
sbbl
insl
xor
inc
xlat
shlb
inc
mov
mulb
xor
add
arpl
push
pop
sbbl
lcall
mov
lods
xchg
sbb
lods
test
scas
inc
push
mov
sbb
sub
pop
add
pop
sbbb
adc
pop
mov
and
push
push
mov
and
sub
fwait
xorl
push
ret
ljmp
das
xor
shl
push
or
aaa
outsl
or
outsl
scas
fsubs
push
add
push
dec
sbb
lcall
and
ljmp
xlat
cmp
add
idiv
adc
jmp
dec
mov
xlat
mov
mov
xor
ja
mov
push
mov
inc
inc
fisubl
retw
pop
iret
push
outsl
push
mov
dec
add
cmpb
jl
or
push
pop
movsl
jmp
pop
inc
addr16
fidivrl
call
sti
xchg
jmp
and
jp
in
xchg
mov
mov
ret
popa
xor
mov
and
pop
lods
mov
jmp
pop
mov
fsubs
mov
add
mov
xchg
dec
push
sbb
add
fwait
ljmp
popl
add
outsb
jmp
jecxz
cmp
dec
xor
addr16
addr16
bound
gs
push
sbb
rorb
insl
je
arpl
sbb
adcb
stc
cmp
mov
lret
scas
lds
jae
mov
xor
push
cmpsl
add
fidivs
les
in
ss
add
cmp
popa
jae
js
mov
dec
js
xor
pop
sub
add
fwait
mov
mov
pusha
add
xor
and
mov
push
dec
sub
and
add
loop
test
jne
adc
push
inc
sahf
out
sahf
and
xorl
sub
add
je
jle
imul
stos
mov
mulb
lock
xchg
jg
pop
dec
sub
pop
lds
mov
out
bndldx
cs
bound
adc
adc
pop
and
push
inc
fwait
adc
mov
imul
xchg
shrb
fisttps
jecxz
lcall
xchg
iret
inc
mov
shlb
pop
push
jo
push
adc
mov
mov
movb
push
adc
into
cmp
mov
mov
subb
out
roll
dec
movzbl
add
rol
cmpsb
add
cmp
adc
pop
and
or
rcl
jns
mov
push
push
sub
cmp
fiadds
out
pop
mov
adc
outsl
fbld
aad
push
mov
jnp
push
mov
xchg
pop
or
inc
xchg
and
out
imul
xor
das
xchg
dec
js,pn
adcl
push
add
mov
loop
push
jg
shlb
jae
and
xor
js
rolb
pop
pusha
xchg
push
lahf
aam
push
xorl
ljmp
bound
out
jb
cs
cmp
jnp
movsl
inc
xor
out
es
add
fisubrs
arpl
push
addl
xchg
xchg
out
mov
mov
jns
xor
mov
fs
dec
or
loopne
jnp
into
xor
pop
jecxz
pop
fimuls
shlb
jmp
mov
repnz
or
xor
cmc
adc
cmp
out
dec
xchg
xchg
jbe
dec
or
ja
jnp
inc
push
lret
ss
pop
pop
in
fimull
dec
mov
bound
xor
loop
incb
inc
xor
ja
mov
outsb
outsb
add
loope
cmp
push
xchg
ja
retw
pop
jae
out
mov
fidivs
fidivrs
xor
lcall
out
adc
inc
mov
inc
addl
dec
daa
jbe
lret
rolb
push
mov
mov
inc
shl
push
mov
inc
pop
pop
mov
push
es
fdivrl
pop
push
push
xor
dec
fdivrp
lock
pop
dec
es
das
xor
sbb
inc
fbld
data16
sti
mov
push
sysexit
mov
cs
sbb
ret
dec
sahf
push
outsl
push
xlat
ds
push
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
push
jp
ljmp
jp
dec
jg
push
jl
sahf
dec
das
xor
lock
js
das
pop
outsl
pop
outsl
xchg
xorl
xor
xor
orb
outsl
outsl
mov
xor
and
and
inc
sbb
pop
iret
clc
xor
pop
imul
xor
jp
movsb
shll
push
or
mov
movsl
movsb
push
mov
and
test
and
daa
loope
inc
inc
insl
pop
loopne
jle
xor
jnp
dec
das
add
fistpl
sbb
xlat
out
sub
clc
xorb
mov
adc
xchg
test
mov
pop
inc
imul
or
and
mov
mov
or
dec
sbb
shlb
or
aaa
mov
adc
bound
mov
push
arpl
inc
push
dec
lods
add
xor
shll
test
lods
fnstcw
pop
inc
push
pop
jl
jle
daa
fisubl
add
sub
lahf
inc
sbb
into
mov
imul
or
xor
inc
mov
mov
outsb
mov
mov
daa
mov
sbb
addr16
fiaddl
das
push
in
mov
pop
xor
jmp
push
dec
inc
insl
cld
sub
ds
outsl
popa
fs
outsl
je
outsl
jecxz
cwtl
iret
xor
mov
fwait
mov
ljmp
sub
cmpsl
addr16
dec
mov
xor
push
addr16
fstl
sti
or
inc
mov
add
cli
sub
inc
fs
addr16
arpl
pop
pop
sbb
push
sbb
push
into
rolb
pop
stos
scas
sbb
faddp
adc
addr16
xchg
pop
fdivl
xchg
pop
lret
and
mov
push
xchg
cmp
adc
cs
ds
repz
push
inc
add
aaa
imul
dec
sti
fnstsw
cmp
jo
arpl
incb
sbb
xor
jae
pop
xor
dec
lds
out
punpckhbw
mov
push
popl
adc
pop
repz
fs
out
je
test
outsl
stos
push
mov
ja
mov
outsb
xchg
xor
rcrb
xchg
and
int3
fwait
loopne
das
push
sub
and
sub
or
outsl
ret
push
clc
andl
jmp
pusha
mov
ret
mov
sub
pop
push
test
addr16
add
das
jecxz
sub
mov
sub
sbb
sub
addr16
or
push
mov
cmp
stos
in
dec
mov
and
push
popa
les
ljmp
mov
jl
mov
movsb
pusha
add
repz
inc
daa
dec
repz
dec
or
xchg
xlat
jno
pop
dec
xchg
and
and
cmp
popl
icebp
sbb
adc
lahf
scas
adc
jmp
daa
jns
xor
sub
rcr
in
add
outsb
dec
arpl
jae
lret
lcall
arpl
xlat
outsl
cmp
imul
das
repz
outsl
cmpsl
xchg
or
aaa
sub
cmp
mov
mov
call
jb
push
ds
adcb
adc
jle
add
mov
inc
add
add
das
add
data16
cmp
sub
testb
lock
aam
push
lahf
sub
or
ret
pushf
pop
add
sub
idivb
mov
leave
data16
push
adc
xchg
pop
cld
ret
cmpsb
jle
and
adc
inc
ja
mov
nopl
and
mov
mov
push
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
fs
sbb
in
or
xchg
xor
aaa
sahf
xchg
pop
jmp
outsb
insl
xor
and
mov
rolb
daa
test
add
inc
xchg
shrb
mov
push
scas
mov
push
dec
imul
hlt
js
mov
sub
negb
sub
das
mov
pop
dec
sahf
xchg
out
xor
cmp
je
fs
in
push
dec
inc
inc
outsl
ficomps
add
or
xor
rcrb
pop
inc
push
icebp
adc
dec
jae
shr
pop
shrb
mov
daa
jge
scas
pop
jnp
popf
xor
xchg
roll
xor
cmp
shr
mov
or
sub
jo
mov
push
push
inc
xor
inc
addr16
arpl
cmpsb
jp
mov
dec
scas
bound
sbb
push
inc
cmc
add
sub
xchg
imul
outsl
jne
cmp
popa
outsb
imul
cs
aaa
mov
pop
adc
xor
cmovb
mov
mov
lods
and
pop
cs
test
outsl
pop
aam
sub
dec
imul
orl
scas
testl
mov
push
dec
dec
xor
das
dec
mov
xchg
outsb
mov
gs
inc
dec
daa
mov
loope
mov
shll
aas
pop
jne
fdivrs
mov
cmp
xchg
or
xchg
add
addb
push
and
out
add
fildl
repz
jb
popa
cmp
pop
pop
pop
dec
gs
push
jnp
repz
add
mov
cmpb
shll
push
les
xor
mov
jbe
outsl
cmc
xchg
dec
xor
push
sti
outsl
orb
xor
rolb
cmpsb
xor
stos
mov
fcom
cs
jle
xchg
pop
cmp
xor
xchg
pop
adc
notl
clc
xor
ds
mov
lahf
mull
xor
pop
mov
mov
mov
insb
addr16
mov
xchg
scas
mov
mov
xchg
dec
fisttpl
in
mov
pop
fimull
ds
mov
push
push
add
inc
in
push
addl
jle
addr16
pop
lahf
mov
cs
cmpb
push
push
outsl
xor
or
mov
mov
rolb
scas
inc
and
pop
insb
pop
pop
int3
into
scas
adc
addl
dec
addb
push
orl
push
xor
loop
lea
sub
cld
cmpsb
in
insb
sub
push
fsubp
push
mov
jns,pt
iret
shll
xlat
pop
aas
es
repz
out
fcomps
xchg
scas
inc
arpl
clc
push
ret
push
add
jne
les
fdivp
dec
jecxz
push
das
push
aaa
cmpsl
stc
mov
mov
roll
or
sti
ficomps
push
outsl
pop
cmp
fildl
inc
push
pop
push
cmp
repz
jg
fxtract
mov
pop
push
jo
mov
nop
idivb
iret
mov
xchg
ds
popa
xchg
xchg
mov
outsb
sbb
xlat
pushf
push
cmp
sarl
xchg
push
add
mov
in
jae
jns
pop
daa
push
iret
jbe
jg
pop
ds
cmp
and
cmp
shll
pusha
mov
inc
and
cltd
cmp
jle
out
jns
iret
dec
inc
lds
sbb
imul
mov
iret
rep
int
and
mov
inc
push
push
daa
inc
lock
sarl
sahf
in
cmpsl
push
cmp
jg
jns
int
sub
dec
inc
jo
jl
out
out
dec
sub
repz
dec
ja
lret
cmc
daa
iret
repz
dec
jl
cmpsb
rcr
sti
sahf
out
sbb
push
je
sahf
out
mov
inc
sbb
ja
vphaddubw
mov
dec
sbb
scas
sub
idivl
xchg
mov
xor
rcrb
in
int
ljmp
adc
push
mov
xor
adc
mov
mov
mov
jmp
mov
loopne
mov
xchg
and
mov
and
pop
lds
mov
ds
adc
mov
cmp
iret
ds
or
sbb
pop
adc
add
or
movsl
out
pop
push
sbb
movsb
dec
sbb
sbb
sbb
push
mov
clc
mov
daa
cld
and
xlat
ja
outsb
outsb
jp
stc
sahf
js
xor
push
js
xor
imul
fldcw
cmp
and
les
sbb
push
cmp
push
push
dec
imul
push
dec
mov
pop
inc
jo
dec
or
dec
mov
inc
outsl
adc
push
popa
je
sub
xor
stos
or
js
or
inc
mov
fnstenv
shrb
out
pop
push
ficoml
sub
pop
ljmp
add
jb
aam
pusha
xor
sbb
xchg
addr16
inc
ljmp
sbb
sub
dec
mov
and
push
sbb
adc
pop
adc
or
loopne
aam
ljmp
mov
jo
push
jo
imul
dec
dec
jno
loop
popl
mov
insl
xchg
lret
sub
sbb
in
xchg
dec
pop
imul
dec
cmpsl
ret
pop
xchg
jb
xchg
into
push
loop
xor
jp
mov
sub
xor
fisttps
ret
add
sbb
mov
mov
ljmp
push
bound
dec
fbstp
inc
fs
jo
xor
adc
or
mov
imul
jnp
cmp
add
push
jl
lea
dec
nop
mov
push
filds
and
rcr
addr16
and
adc
mov
mov
push
loope
pop
arpl
lea
cs
dec
adc
add
mov
ds
inc
mov
push
loopne
iret
scas
addb
inc
inc
pushl
aaa
fildll
outsb
xor
inc
out
dec
or
add
inc
xlat
imul
jp
push
pop
push
scas
push
fmull
addr16
xor
fisttps
test
jae
fs
adc
cmp
das
mov
rorl
sti
jmp
ja
movsl
insl
dec
inc
push
das
addl
adc
add
sub
mull
sub
loopne
pop
insb
and
push
pop
pop
push
sahf
daa
data16
jnp
outsl
aaa
imul
jne
inc
add
out
pop
pop
pop
xchg
das
testl
xchg
roll
addr16
adc
shrb
pop
sbb
scas
mov
insl
mov
mov
xchg
inc
mov
lahf
dec
push
dec
or
jecxz
sub
add
cmp
push
add
loope
lret
cmc
arpl
push
mov
add
loopne
das
add
bound
scas
mov
add
dec
push
xor
xor
fidivrl
mov
xor
sbb
dec
adc
jg
sub
dec
push
xor
mov
add
ficoml
add
imulb
xor
push
dec
sub
sub
imull
pop
mov
lret
inc
and
and
scas
or
mov
dec
ret
sbb
pop
out
inc
push
inc
repnz
xlat
sbb
cmp
dec
jne
mov
push
popl
pop
or
push
lods
sbbl
mov
sahf
inc
cli
dec
inc
jbe
mov
inc
aaa
push
mov
and
bound
push
lock
push
xchg
rolb
mov
push
pop
lahf
inc
dec
jne
mov
cmovg
mov
add
cmpsl
push
aas
outsl
adc
pop
sub
testl
pop
pop
inc
jmp
mov
push
scas
jns
sub
js
aaa
aas
data16
pop
loope
daa
push
xchg
repnz
xchg
ja
adc
and
or
aad
or
cmp
insb
je
aaa
shr
or
ds
jo
jae
es
mov
outsl
xor
push
lahf
add
cmp
jmp
inc
dec
mov
pop
sub
fdivrs
out
jo
push
jne
or
add
mov
jg
ret
pop
outsl
das
mov
mov
dec
jae
mov
sbb
mov
cmp
sbb
sti
mov
push
inc
and
adc
imul
pop
add
pop
gs
inc
inc
popa
mov
ret
add
mov
scas
testl
out
stos
pusha
and
outsb
loope
sbb
bound
cmp
inc
jnp
push
dec
sbb
sub
pop
adc
test
adc
out
mov
push
jmp
jo
push
pop
mov
inc
jb
dec
cmpsl
pop
stos
add
xor
push
inc
push
push
add
adc
emms
or
sub
push
aam
jns
jb
sbb
or
iret
pop
mov
test
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
rorb
enter
cwtl
jno
inc
push
fiadds
hlt
inc
push
lods
adc
xchg
out
sub
ds
or
push
pop
add
xor
inc
repnz
fildll
dec
push
xchg
add
pop
inc
roll
pop
inc
shrb
sub
movl
add
add
or
fdivrl
push
lahf
incl
and
jne
jnp
and
pop
ficompl
xor
das
ds
das
addl
or
mov
or
daa
daa
daa
push
and
pushw
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
es
js
insb
cwtl
outsl
shr
outsb
sbb
push
and
fisubl
sbbb
les
or
sbb
outsl
imul
or
pop
bswap
ds
push
data16
mov
dec
aaa
lock
mov
flds
sbb
inc
add
popa
es
aas
mov
push
push
cmp
orl
out
push
ror
das
lahf
pop
adc
ss
add
fmuls
sub
mov
lahf
arpl
push
dec
sti
push
fisubs
push
mov
scas
push
push
mov
xor
in
fldl
jg
push
push
mov
dec
adc
in
xor
xchg
es
push
mov
or
addr16
jno
jecxz
cmpsl
push
daa
fstps
mov
push
fidivl
das
pop
pop
and
push
push
dec
cmp
repnz
jno
and
paddsb
push
mov
jnp
outsl
push
jb
add
push
pop
adc
outsl
arpl
sbb
insb
cmc
popa
mov
clc
and
bound
cli
push
jno
int3
push
es
insb
jns
mov
cmp
and
xchg
and
fld
loopne
popa
stos
and
or
in
cs
and
xor
and
push
jno
inc
js
or
and
inc
dec
inc
fisubs
adc
add
jne
push
mov
insl
outsl
fs
gs
jo
jns
iret
push
and
test
pop
outsl
insl
jne
loop
push
inc
fistpl
xchg
int3
add
or
addr16
cmp
pop
insb
lret
out
push
inc
je
and
inc
bound
aaa
inc
insb
xchg
mov
lahf
jbe
pop
fdivrs
inc
popa
imul
xchg
aaa
xor
sub
outsl
jo
push
push
adc
sub
das
insl
stos
inc
pop
mov
mov
or
inc
xadd
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
bswap
and
outsb
pop
pop
pavgb
aas
inc
dec
mov
inc
xor
movsl
call
bound
xchg
das
pop
aaa
jbe
sbb
insb
mov
push
test
xorb
mov
addr16
dec
mov
mov
les
rolb
in
das
sarl
outsl
pop
iret
xchg
jbe
js
mov
add
xorl
movsb
outsb
in
dec
enter
push
xchg
insb
and
daa
outsl
inc
mov
lods
movsl
test
xchg
cmp
shlb
sahf
idivl
movsb
aam
int3
in
movsl
fisubs
fbld
adc
sub
add
or
out
add
notl
daa
mov
fldt
movsb
ja
outsb
leave
xchg
cmp
mov
cwtl
outsl
add
fstl
fsubr
call
add
in
pop
sahf
sub
int3
cmpsb
pop
jns
cmp
cmpsb
pop
daa
add
push
push
mov
xchg
pop
jae
iret
test
mov
add
movsb
jge
repnz
push
cmpsb
or
lock
cwtl
popf
xchg
out
xchg
dec
pop
add
mov
lods
cmp
aas
adc
hlt
ds
test
loopne
xor
or
mov
nop
int
cmpsl
sbb
sub
aas
mov
addr16
fiadds
cmpsl
daa
je
adcb
add
mov
mov
mov
test
mov
aas
ja
push
jns
xchg
test
adc
add
sti
push
mov
fadds
test
xchg
ret
pusha
inc
je
mov
scas
rcl
les
stc
push
dec
dec
loopne
int3
mov
in
not
loopne
fiadds
xor
add
adc
jo
shl
push
and
or
test
or
sbbl
push
mov
pop
mov
in
mov
pop
enter
clc
pop
stos
packssdw
fs
push
fidivl
and
push
dec
stos
xchg
andb
outsl
dec
les
daa
mov
bound
sti
pop
dec
adcl
xchg
bound
enter
cld
pushl
outsb
in
or
scas
add
iret
les
pop
pusha
inc
stos
push
pop
mov
int
daa
aas
mull
mov
mov
push
cmp
push
fdivrl
add
and
fsubr
pop
and
repnz
rcr
nop
iret
test
sub
cmp
insl
orl
jae
int
lahf
and
jl
sbb
pop
enter
jl
and
test
fdivl
pop
enter
outsl
inc
ds
jl
lods
sub
cmp
add
jl
sahf
or
lahf
test
jl
nop
or
inc
test
xor
add
push
push
and
mov
add
mov
adc
fisubs
push
xor
nop
mov
cld
dec
repz
pop
jg
sub
pop
je
scas
mov
xor
cmpsl
fs
mov
enter
and
enter
jge
adc
or
lcall
xor
jl
lods
sub
jg
pop
enter
pusha
jo
mov
mov
sahf
or
mov
or
inc
sahf
fadd
fmull
fnstcw
mov
mov
mov
push
nop
addr16
jg
cmp
dec
enter
orb
cmp
jb
pop
push
test
aam
jae
pop
enter
mov
das
adc
and
lahf
stos
fimull
ja
nop
out
sahf
mov
in
mov
sahf
or
mov
mov
movsb
adc
and
add
adc
cs
iret
test
push
fs
ja
push
xchg
mov
movsb
push
mov
jmp
push
add
jae
call
pop
insb
push
cwtl
cmpsl
call
sarb
dec
push
pusha
mov
push
insb
push
shlb
int
scas
cmpsb
nop
mov
cs
iret
test
xor
hlt
or
cmpsb
cmpsb
mov
xor
pop
pop
cmp
mov
pop
mov
out
lahf
or
ja
xchg
mov
push
lods
mov
xchg
inc
nop
out
pop
mov
mov
aas
cmpsl
nop
int
mov
mov
test
push
mov
push
cmpsl
repnz
push
jg
dec
test
repnz
xchg
test
dec
iret
test
sbb
stc
mov
clc
mov
and
dec
add
es
mov
push
dec
mov
mov
pop
pop
and
loopne
mov
mov
pushf
mov
push
add
loopne
jg
inc
lcall
lahf
insb
inc
mov
lcall
cmp
inc
sub
inc
adc
pop
push
inc
and
cmpsl
push
mov
inc
and
xorl
xor
jae
in
mov
ds
jb
inc
sarb
and
lahf
mov
sub
adc
push
fadds
mov
jb
jg
push
mov
mov
push
loopne
inc
ja
adc
jl
xor
mov
pop
ljmp
bound
insb
fiaddl
inc
ja
nop
out
inc
mov
sarb
sub
mov
insl
inc
mov
cmp
pop
ja
lock
mov
pusha
push
je
les
lods
sub
and
movsb
mov
dec
mov
lahf
push
fadds
add
sbb
das
push
inc
adc
mov
mov
push
addb
enter
lods
cwtl
mov
clc
mov
repnz
pop
jg
fsubr
and
pop
cld
lahf
faddl
ss
fidivl
add
mov
push
pusha
mov
rclb
cmpsl
xor
addr16
inc
scas
dec
add
mov
mov
jb
loopne
xor
inc
push
push
lahf
jl
jl
or
test
enter
nop
mov
pop
adc
and
repnz
loopne
aam
sbb
ja
sahf
mov
dec
enter
push
inc
mov
mov
lahf
ja
xor
in
nop
jo
nop
xor
or
jb
jne
rclb
pop
pop
aad
outsl
aas
or
cltd
mov
clc
in
fsub
lods
inc
mov
imul
lods
addr16
enter
clc
mov
adc
shl
rolb
jae
iret
lds
and
iret
lock
call
pop
aas
sbb
decl
mov
dec
mov
inc
iret
hlt
movsl
jae
cs
rol
push
loopne
enter
rorb
call
loopne
daa
in
test
fdivrl
daa
aam
dec
enter
sbb
sub
insb
push
cmp
add
xchg
push
sar
adc
scas
xlat
pop
push
sbb
mov
push
cwtl
ret
xor
cmp
adc
iret
mov
pop
lock
ja
mov
sub
pop
fimull
outsl
pop
pop
add
push
aam
out
fs
pop
push
xlat
data16
xchg
sbb
xchg
pop
lods
sbb
daa
ret
pusha
stos
mov
orb
or
add
jns
ja
daa
call
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
xchg
adc
scas
push
enter
xor
out
push
fadd
jl
rcrb
lcall
shlb
inc
push
jge
iret
adc
leave
movsb
mov
sahf
enter
jge
ror
enter
dec
repz
mov
cld
loopne
pushf
out
ds
pop
test
ja
and
jg,pn
push
es
xchg
leave
inc
insb
lds
add
jo
lahf
xlat
inc
fldcw
dec
js
inc
ss
repnz
movsb
add
cmp
mov
mov
add
dec
jb
jge
addr16
shl
pop
xlat
inc
mov
push
jg
dec
xchg
add
pop
mov
dec
xchg
xchg
dec
dec
pop
in
in
dec
outsl
and
enter
inc
push
mov
inc
dec
push
pusha
push
insb
dec
popa
sub
xchg
outsl
add
or
mov
mov
rcr
insb
sub
stos
lds
mov
mov
loopne
or
movsb
push
insb
enter
dec
xchg
mov
outsl
out
or
xor
std
or
xor
or
cmpsb
aaa
out
and
lcall
insb
push
xor
sbb
add
xchg
sbb
outsb
out
adc
test
pop
sub
pop
repnz
rcr
outsl
fcomip
dec
cs
outsl
push
push
das
fs
shll
xchg
mov
aam
or
add
sarl
lret
fwait
mov
xchg
lods
push
in
push
xchg
or
roll
pusha
pop
scas
fmul
jg
bound
and
lret
ja
add
dec
xchg
sub
pop
sub
jl
push
mov
movsl
jge
lret
fildll
dec
scas
fs
and
and
ret
xlat
push
lock
and
sbb
push
sub
pop
scas
add
push
outsl
xor
mov
dec
cwtl
cmpsl
add
test
xchg
in
addb
inc
pslld
js
add
shrl
adc
outsl
adc
mov
sbb
sub
addr16
pop
leave
add
ss
mov
lahf
aaa
cmc
cmp
mov
data16
jl
test
sub
or
lock
in
adcb
xchg
and
push
je
xchg
int
xchg
testb
sbb
or
out
mov
xor
dec
mul
dec
ficoms
jbe
sub
pop
mov
nop
outsl
push
push
outsl
pop
xor
push
jg
roll
dec
xchg
daa
cmpsl
jge
mov
push
and
cmp
int
rcrl
or
call
cmpsl
push
int3
mov
enter
in
sub
mov
shl
push
addb
lods
iret
push
xlat
sbb
push
sbb
xchg
dec
lods
fs
sbb
or
daa
add
xlat
xlat
or
dec
push
rorb
cmpsl
in
roll
push
hlt
ret
dec
adc
or
insb
rclb
jl
add
sarb
mov
outsl
and
ss
repz
leave
add
add
pop
pop
and
scas
xor
mov
loopne
shll
mov
push
sbb
pop
dec
adc
mov
and
lods
outsl
add
jo
dec
ret
cmpsl
lock
shrb
imul
inc
sarb
jbe
xor
scas
in
pop
test
add
jg
addr16
add
pop
jb
in
cld
or
dec
mov
push
enter
idivb
insb
push
xor
das
outsl
mov
sub
add
or
adc
mov
roll
clc
inc
ds
enter
clc
push
xor
add
sbb
push
xchg
fs
sub
iret
dec
xchg
add
iret
jbe
cmp
lahf
or
scas
in
scas
add
add
cld
push
je
aad
cmp
rorl
and
push
js
or
repz
cs
push
jl
test
mov
inc
aas
add
add
or
fdivl
and
movb
lcall
dec
xchg
outsl
add
or
dec
outsl
pusha
sub
xor
inc
sub
movsl
testl
dec
inc
sub
add
mov
push
xlat
pop
adc
push
lock
outsl
out
add
leave
mov
add
add
adc
inc
or
adc
aam
out
nop
sub
add
adc
scas
or
addr16
fdivrs
icebp
add
ds
aas
addr16
daa
stos
mov
ffreep
mov
mov
fsubs
gs
je
test
push
mov
push
dec
divl
mov
fcoms
call
adc
mov
or
push
and
aaa
je
bnd
ja
nop
push
pusha
pop
enter
nop
push
pop
enter
mov
repnz
enter
popf
fiaddl
jae
add
and
decl
cmp
out
push
xor
insb
mov
jp
push
push
mov
cmpsl
stc
cmp
sbbb
out
sahf
imul
pusha
andl
stc
aaa
outsl
pop
xchg
out
sbb
jnp
out
lcall
xchg
jge
stc
sahf
mov
push
mov
xor
pop
push
sbb
and
ja
mov
repz
jns
jns
jbe
shr
ja
repz
ds
jg
sar
int
imul
add
and
iret
repz
pop
xchg
hlt
jns
cmpsl
stc
and
jb
mov
push
jnp
stos
fistps
repz
jge
pop
jl
out
xchg
imul
loop
jg
sahf
ja
out
sti
cmp
xchg
push
fwait
mov
dec
repz
pop
addl
xor
cmpsl
stc
or
cmp
out
sbb
push
test
cmc
pop
xchg
add
out
lcall
stc
cmpsl
stc
cmp
xor
test
adc
aaa
int
jns
jb
icebp
sub
mov
rcll
lea
lea
jbe
pop
mov
out
mov
add
cmp
repz
into
test
jns
out
rorb
xchg
push
pushf
fdivr
cmp
repz
xchg
cmp
lahf
cmpsl
ja
test
stc
cmp
repz
cwtl
repz
cmpsl
cmp
out
cltd
cmpsl
stc
cmp
sbbl
sarl
mov
fwait
push
add
cmpsl
stc
cmp
cmp
jge
ja
push
xchg
loope
sahf
incb
int
data16
mov
sub
push
test
andb
sbb
movsb
jl
out
xor
sti
movsl
jns
iret
sarl
pop
cmpsb
inc
jge
xor
out
jmp
cmpsl
dec
jl
jns
iret
iret
and
sahf
out
dec
cmpsb
or
cmpsl
lret
repz
sub
dec
repz
cmp
jl
out
inc
jo
cmp
insb
xchg
shrb
mov
repz
out
adc
iret
repz
lfs
xchg
int
imul
xor
cmpsl
stc
push
mov
out
dec
mov
repz
mov
cmp
repz
mov
mov
int3
cmp
jns
ljmp
repz
out
clc
dec
mov
sahf
out
rolb
rcl
iret
sarl
ret
aaa
push
std
lahf
data16
mov
lret
lret
mov
cwtl
int3
pop
rolb
adc
dec
mov
insb
jmp
fcom
rcl
insb
ficoml
mov
jbe
int
adc
out
add
outsl
int3
nop
rorb
cmp
push
aas
aam
pop
dec
push
cmp
sbb
aam
and
inc
je
cmp
or
lods
loopne
ja
push
out
or
inc
pop
aaa
jb
inc
fs
and
popf
dec
mov
inc
repnz
shlb
cltd
nop
adc
pop
jae
cmp
dec
enter
fcomps
xor
cmp
outsl
dec
mov
in
jae
decl
lahf
aas
arpl
jg
xor
pushf
mov
out
stos
inc
pop
repz
cmpsb
lods
jns
imul
jecxz
push
jo
cli
jecxz
mov
pop
pop
outsl
out
out
dec
je
push
sbb
setb
cmp
and
inc
and
insl
nop
inc
fwait
add
unpcklps
pop
xchg
push
aas
and
push
and
xor
xor
xlat
pop
jb
in
ja
ss
fldt
in
push
inc
daa
push
cli
lods
adc
pop
cmp
mov
incb
sub
jbe
daa
pop
push
add
jbe
xor
pop
movsb
dec
lods
in
shll
adc
push
inc
jo
in
jo
xor
cmp
test
rcrb
cmp
test
in
in
sub
mov
jo
pop
aas
cmpsl
pop
mov
pop
sub
push
popa
push
and
into
sahf
mov
pop
paddusb
scas
inc
dec
push
bnd
sbb
loopne
add
ficoms
xor
xor
xchg
lret
iret
les
hlt
sbb
jo
push
mov
dec
jbe
inc
arpl
insb
add
xlat
mov
dec
mov
cwtl
push
mov
fstpl
push
dec
leave
lods
out
sub
inc
addr16
leave
mov
ja
mull
cmp
cmp
out
sbb
mov
insl
pusha
ja
mov
insl
fistps
imul
add
aad
xor
in
add
loop
repnz
or
or
cwtl
les
mov
les
popf
push
outsb
push
xchg
pop
in
xchg
xlat
es
jnp
adc
inc
repnz
sahf
lahf
cmp
outsl
imul
addr16
in
dec
xor
pop
inc
ret
out
dec
mov
xchg
scas
pushf
dec
adc
mov
xchg
and
outsl
pop
outsl
sub
jbe
xor
notl
fbstp
stos
loopne
outsl
jne
cmp
faddl
jg
scas
jbe
inc
jo
adcl
pop
mov
sbb
daa
fs
fists
mov
enter
in
add
mov
pop
lds
sub
leave
mov
inc
ja
jmp
xchg
je
pop
push
mov
cltd
fs
mov
push
out
mov
pop
dec
push
or
repz
aaa
pop
sbbl
inc
in
pushf
or
clc
cmpsb
inc
in
es
xor
in
mov
in
mov
xchg
mov
dec
xchg
mov
into
pop
or
adc
addr16
pushf
pushf
pop
add
ds
dec
daa
xchg
in
data16
push
in
add
iret
fwait
mov
pop
xchg
in
pop
jl
movsb
rorl
movsb
jg
inc
push
xchg
in
mov
rcr
adc
push
jb
enter
push
jb
jb
jb
leave
inc
fwait
cmp
inc
dec
fnstsw
leave
push
pop
push
add
imul
push
addb
in
in
xchg
pushf
movsb
and
aam
mov
fbld
cmp
fucomi
mull
jg
mov
and
sub
sub
mov
xor
jae
jae
jae
out
and
add
jns
ja
jg
or
sahf
xchg
or
mov
mov
jbe
add
nopl
add
jg
dec
and
add
add
pop
and
out
lock
inc
aas
jo
inc
movsb
lock
lock
mov
orl
dec
cld
in
or
inc
jg
jb
adc
je
inc
mov
je
jo
enter
je
jne
jne
and
int3
dec
or
cmp
out
sbb
jb
jne
jne
pop
outsl
xchg
push
push
test
fistpll
sbb
or
daa
sub
lods
jne
mov
pop
inc
push
test
dec
pushf
mov
jmp
repnz
push
jbe
push
daa
es
repz
push
add
add
add
aaa
cmpsl
mov
popw
add
sbb
pop
pusha
repz
xchg
iret
or
repz
mov
pop
insl
xchg
jbe
inc
push
scas
mov
movsb
cmp
aaa
das
cmp
or
and
dec
and
ja
ja
pop
adc
cmp
out
ja
jns
iret
mov
jo
push
cltd
out
push
daa
cwtl
outsl
insl
dec
push
push
dec
mov
scas
cmp
pushf
mov
lock
xchg
xlat
cmc
pop
leave
mov
lcall
cmp
xchg
push
xchg
outsb
xchg
push
repnz
daa
fmul
pop
adc
xlat
pop
ja
daa
and
sub
jg
js
inc
jb
scas
adc
pusha
xchg
pop
mov
xchg
push
das
push
lds
xchg
testb
mov
jmp
xchg
mulb
mov
or
lret
rcrl
fimuls
dec
dec
outsb
out
stc
insb
mov
sahf
pop
cld
inc
pop
jns
rcll
fwait
add
mov
jo
cmp
negl
xor
leave
stos
inc
pop
mov
enter
mov
iret
mov
dec
leave
xchg
andl
adc
pop
mov
clc
jne
jg
subl
popf
mov
mov
in
add
ljmp
loopne
add
jp
pushf
stos
and
jp
adc
fldt
dec
popw
dec
xchg
xlat
bound
push
and
inc
xchg
stc
add
dec
dec
test
in
scas
fmuls
test
push
jb
pop
leave
cmp
jp
out
jp
lea
stc
jp
jnp
push
add
out
sahf
sbb
in
cmp
out
push
ja
outsl
add
inc
jb
cli
test
inc
mov
xor
xchg
push
cs
outsl
add
enter
cli
jnp
pop
jl
jl
mulb
jns
sti
cmp
mov
or
pop
subps
pop
pop
leave
repz
pop
push
shlb
cmpsl
fwait
addr16
cld
in
and
pop
add
jge
inc
jb
leave
add
mov
inc
jb
push
fdivl
fisubl
jle
std
mov
dec
cmp
les
mov
shrl
pushf
push
adc
enter
dec
pop
hlt
adc
cmp
fdivs
push
addr16
mov
adc
mov
inc
xor
ja
cmp
xchg
xchg
dec
cs
lods
lock
test
flds
iret
mov
stos
inc
pop
add
xor
sbbl
inc
decl
daa
cmp
cmpb
jne
ret
push
aas
add
mov
ja
test
jg
push
sbb
iret
nop
hlt
jg
xor
lock
scas
inc
cmpsb
data16
aas
loope
dec
movsb
mov
push
scas
pop
popa
out
or
xlat
fldenv
or
pushf
xchg
push
cld
aas
add
push
mov
outsl
push
jns
out
pop
cvtpi2ps
out
cmp
out
orl
enter
cmp
jg
leave
add
in
adc
adc
pop
js
daa
das
je
loope
mov
push
test
jb
jb
shrd
jo
fisubrl
out
lock
pop
or
xchg
adc
ds
mov
add
push
ja
into
lret
jg
push
loope
lcall
je,pt
leave
mov
cwtl
add
out
test
dec
mov
shrb
lahf
filds
ss
xchg
orl
sub
mull
ja
cmp
add
push
pop
orb
out
cmpsl
mov
push
add
cmpsl
das
mov
add
in
daa
or
fucom
call
leave
dec
mov
test
test
add
pop
insl
adc
xlat
push
scas
jne
test
push
seta
shll
mov
jb
fucomp
add
adc
aaa
add
lcall
inc
ja
pusha
xlat
cs
iret
jl
add
cmp
sub
pop
fistps
daa
aam
cmp
inc
aas
xchg
sub
out
sub
add
dec
and
xchg
daa
fnstsw
ja
mov
aam
fdivl
mov
in
pop
hlt
iret
mov
ret
lods
cld
cmpsl
push
push
les
outsb
frstor
sub
pop
push
into
hlt
in
add
xchg
push
mov
sbb
inc
sahf
cmpsl
cmp
mov
jns
mov
fmull
push
das
lock
add
mov
jns
xchg
testl
push
xor
adc
adc
cmp
jle
push
mov
add
and
cmp
push
in
orb
icebp
mov
pushf
or
adc
sbb
or
sub
or
mov
outsl
mov
mov
sub
jns
jg
add
dec
push
pushf
cmp
or
or
jbe
fwait
ret
xlat
into
fnstenv
mov
or
leave
mov
ss
push
in
cmp
pop
push
mov
pop
mov
popa
inc
imul
xchg
inc
mov
inc
lea
add
mov
or
lea
test
fistps
xor
push
daa
xchg
neg
mov
mov
add
js
int3
in
or
dec
insl
pusha
mov
mov
cmpsl
mov
inc
ja
jne
pop
mov
out
push
lock
push
outsl
mov
jl
inc
rcrb
xchg
leave
repz
xchg
push
add
outsb
mov
jno
jns
add
rcrb
mov
push
iret
outsl
in
push
clc
jg
mov
push
add
cmp
and
cs
add
cmp
iret
dec
mov
in
inc
roll
addr16
pop
int
inc
addr16
cmp
leave
add
aaa
negl
or
xchg
dec
and
mov
lea
pop
lea
outsb
and
lea
add
mov
les
pushf
into
rep
push
pop
mov
add
xchg
lret
fadds
out
and
jo
fdivrp
or
daa
cmp
mov
mov
inc
jb
pop
nop
push
addr16
jb
jge
add
clc
in
popf
pop
ja
in
iret
hlt
inc
shr
out
xchg
cmovns
push
daa
xor
push
pusha
push
movsb
out
mov
pop
xor
scas
fsubrl
inc
inc
iret
mov
or
leave
sub
adc
mov
add
cmp
jmp
adc
add
daa
iret
jae
or
cmp
cmp
jae
inc
dec
or
or
pop
push
popa
imul
jno
adc
repnz
adc
cltd
loopne
cltd
mov
into
mov
mov
push
add
nop
das
pop
xchg
or
inc
adc
inc
mov
cmpsl
push
cmp
inc
xchg
mov
iret
mov
mov
xchg
mov
xchg
add
add
xor
mov
push
pop
push
push
push
sub
sahf
je
int3
aam
call
mov
pushl
jae
push
and
sub
pushf
mov
insl
xor
and
insb
daa
ja
add
pop
and
jl
jns
dec
test
push
mov
fnstsw
jns
or
ljmp
cmovle
outsl
test
dec
sbb
adc
fcoms
cmp
aas
pop
xchg
out
add
and
testl
jp
loopne
adc
adc
jns
and
adc
cmp
inc
mov
lahf
adc
out
inc
das
and
adc
adc
adc
mov
and
repnz
add
out
adc
out
xchg
xchg
addr16
sbb
add
sahf
push
enter
jbe
cmp
cmpsl
xchg
out
dec
xchg
push
pop
popa
maskmovq
notl
incb
neg
mov
call
inc
adc
pop
and
mov
cmp
dec
dec
mov
pop
and
ss
inc
sahf
pop
jb
rorb
cld
dec
cmp
decb
iret
fwait
lea
inc
repz
iret
fs
mov
icebp
cmp
orb
or
insb
cs
push
rcll
pandn
std
or
sbb
add
sahf
out
pop
inc
or
add
or
out
jl
inc
ss
xchg
or
adc
out
add
dec
push
stc
add
jbe
inc
add
cmpsl
mov
mov
nop
or
sbb
lock
jb
xchg
mov
jae
inc
jb
sbb
and
xchg
lahf
cmp
ljmp
add
insb
add
jbe
sbb
jl
daa
daa
mov
mov
push
pusha
mov
jbe
mov
addr16
adc
xlat
ja
addr16
sbb
idiv
xchg
cwtl
jno
mov
cmp
add
xor
lcall
inc
dec
addr16
pop
out
push
jo
andb
outsb
fnsave
xchg
push
outsl
sahf
pop
cmpsb
push
add
in
jns
push
lock
faddl
inc
ds
cltd
pop
pop
cltd
movsb
fldt
push
outsl
daa
rdmsr
das
ltr
push
pop
cmp
or
addr16
or
push
cltd
or
sub
push
pop
xor
jnp
aaa
mov
push
sbb
inc
enter
ds
fimull
xchg
insb
scas
pop
and
jl
xchg
pushf
xchg
pop
rcrl
jb
in
cli
ja
fwait
cmp
sbb
repz
pop
dec
add
rcr
push
pop
packuswb
sahf
or
push
xlat
or
xlat
sbb
lods
push
mov
shl
fwait
ljmp
ljmp
out
std
cmpsl
push
in
fwait
dec
jb
or
and
jb
xor
ja
jae
jb
xchg
pop
je
cmpsb
pop
ja
jae
das
mov
mov
sahf
add
sbb
jmp
and
and
fildl
push
push
push
fistpll
mov
jg
pushf
pushf
out
cmpsb
addr16
push
add
inc
repnz
xlat
fidivl
inc
loope
popf
call
inc
repnz
xor
pop
je
jae
test
subps
fs
daa
daa
insb
lea
in
enter
pop
and
leave
rolb
sahf
enter
ja
add
lods
push
adc
dec
in
in
cmpsl
push
imul
andl
lods
mov
jns
daa
ret
mov
sub
cmc
sahf
jmp
mov
mov
sub
fstpt
out
dec
pop
psllq
movsb
add
cs
or
jns
iret
or
push
or
mov
femms
cltd
cmovo
rcll
mov
stos
pop
sub
leave
jae
pslld
add
jns
xchg
daa
add
jo
cmp
das
mov
xchg
addl
pop
movhps
loop
mov
ror
faddl
lods
cmp
iret
add
icebp
lahf
stc
cvtdq2ps
inc
loope
mov
orb
sahf
pop
mov
lds
decl
iret
cmp
push
add
outsl
popf
xchg
push
mov
add
sbb
addr16
add
cmp
in
add
pop
in
mov
mov
test
mov
mov
pavgw
es
fisttpll
repz
sti
lsl
pusha
repnz
add
mov
pop
leave
pop
mov
lock
dec
push
pop
arpl
push
aas
paddd
pop
sub
movsb
lods
pop
les
int3
inc
and
in
out
cmpsl
idiv
pop
movsb
nop
js
cmpsb
scas
cwtl
xchg
movsb
mov
push
dec
or
sarb
pop
sahf
fwait
movsl
into
mov
add
cwtl
add
lds
or
ja
shrb
push
lods
fisttpl
add
repz
iret
movsb
xchg
xchg
scas
lea
push
movsl
mov
or
scas
lock
pop
punpcklwd
xchg
jl
cltd
xlat
xchg
add
jbe
xchg
pushf
shld
andb
xlat
outsl
popf
cmp
jbe
movntq
add
mul
inc
cmp
cmpsb
montmul
mov
cltd
addr16
xor
cmp
mov
pop
gs
outsl
jne
popf
pop
and
add
cwtl
mov
push
mov
lods
push
jp
jb
fninit
cmpsb
icebp
mov
cmpsl
testl
cmpsl
cmpsl
ja
sub
inc
cmpsl
jmp
inc
cmp
outsl
add
add
jno
leave
xchg
lahf
xchg
jg
sahf
xlat
fisttpll
jg
push
add
pushf
cmp
push
movswl
pop
or
or
push
lock
cmp
cmova
xchg
jl
test
loope
leave
leave
mov
mov
divb
ret
shrl
test
loope
hlt
das
test
sub
inc
xchg
jg
jg
test
iret
repz
add
imul
add
test
xchg
test
jb
popf
pushf
pminsw
repnz
lar
inc
mov
stos
popf
sub
adc
sub
pop
stos
cmp
jae
jle
mov
cmp
mov
add
lahf
das
pmulhuw
dec
pop
stos
mov
or
repz
sahf
out
or
loope
or
out
push
sti
or
jns
and
lahf
stos
outsl
inc
push
adc
inc
pop
mov
fs
sbb
xchg
stos
pop
addr16
sarl
sub
jns
and
mov
push
iret
pmaddwd
pop
xchg
lods
and
xchg
mov
popl
jns
dec
jg
ja
push
add
jne
pop
jmp
clts
push
imul
jns
jae
jnp
jns
in
in
mov
xchg
mov
push
cmp
lods
outsl
int
mov
lea
fidivrs
nop
mov
push
add
sub
sbb
xor
lods
das
push
or
inc
lahf
xor
popf
out
das
inc
pop
or
daa
inc
pop
in
mov
subl
lcall
mov
fbstp
jbe
mov
das
cwtl
or
lods
ljmp
add
add
out
out
pop
push
pop
push
add
and
jns
and
add
xor
jb
jb
arpl
dec
sahf
xchg
outsb
sgdtl
jnp
shrb
dec
mov
loope
xor
xor
leave
leave
inc
ljmp
flds
scas
adc
scas
test
dec
and
cmp
xchg
xor
push
jae
test
xchg
jae
ja
setnp
fwait
inc
add
outsb
pop
leave
fdivrl
popf
xchg
pop
into
fimuls
pop
fisttpll
dec
out
scas
not
or
push
outsb
and
mov
imul
push
inc
incl
lock
mov
les
inc
add
jmp
mov
inc
adc
inc
add
ss
mov
add
xchg
pusha
mov
mov
stos
mov
leave
insl
aad
mov
bndstx
mov
dec
pop
es
nopl
jns
ja
inc
push
push
or
in
sahf
out
or
jle
jns
out
or
out
sahf
rsm
adc
out
adc
adc
adc
jns
out
adc
repz
pop
add
sbb
fucom
jns
and
sbb
daa
daa
daa
daa
push
adc
daa
daa
adc
adc
adc
daa
daa
push
or
scas
sub
xor
ja
sbb
push
dec
xor
add
outsb
inc
lea
pop
xor
sub
daa
insb
imul
mov
lahf
mov
popf
xchg
test
xchg
pop
andl
iret
inc
scas
or
xor
adc
xchg
xor
je
cmp
icebp
cld
or
fnstsw
jbe
sub
xor
pop
lods
jl
add
loop
daa
pop
mov
aas
ja
mov
xchg
mov
jns
stos
push
add
pop
xchg
mov
push
lret
or
leave
inc
bnd
inc
fwait
inc
pushl
sub
mov
dec
sarb
and
faddl
iret
stos
call
out
mov
cmp
ja
cmp
enter
mov
sbb
inc
fwait
mov
xchg
imul
lcall
jbe
push
add
xor
leave
xchg
daa
daa
mov
mov
mov
out
push
add
add
cmpsl
lea
std
push
push
into
or
mov
xchg
int
aas
or
cmp
sbb
and
dec
mov
pop
mov
mov
xchg
jg
imul
sub
out
push
iret
repz
sahf
or
or
stos
push
mov
aas
adc
out
mov
adc
or
fsubp
out
xor
cmp
xchg
mov
das
sbb
shlb
jns
add
cmp
mov
ja
add
call
testb
adc
push
daa
pop
xor
dec
imul
jae
mov
mov
pop
push
fbstp
sbb
or
ret
mov
sbb
sub
sbb
repnz
das
adc
dec
pop
sbb
or
pop
iret
out
or
mov
xchg
push
push
mov
adcb
jl
daa
mov
outsl
jp
add
jb
xchg
lods
mov
pmulhuw
int
add
mov
lock
add
xor
inc
shlb
sub
outsl
cmp
jo
push
mov
incl
leave
inc
mov
mov
les
inc
cmp
pop
cmp
aas
xchg
jo
pop
sbb
sub
mov
pop
mov
pop
jb
and
cmp
push
roll
ds
cmpsl
pop
or
jo
daa
nop
push
and
test
out
leave
in
fs
bswap
aam
or
cmpsl
in
ds
pop
ja
xchg
mov
pop
repz
add
lahf
xor
push
pushf
fdivrl
pop
add
sub
dec
or
mov
cmpsb
cvtdq2ps
push
arpl
stc
cmp
xchg
push
jmp
mov
sbb
cmc
mov
cmpsb
push
mov
mov
push
pop
bsf
sbb
pop
push
jg
push
add
mov
repnz
push
decl
jb
jb
jl
mov
mov
sub
lahf
mov
dec
inc
mov
in
inc
xlat
xor
scas
sbb
cmpsl
jmp
sub
xor
inc
jo
cmp
push
push
outsl
bound
jle
insl
mov
jns
insl
repnz
es
cmp
pop
lock
pextrw
mov
cmpsb
rcrb
add
sbb
sbb
or
jb
mov
test
add
pop
scas
xor
push
push
mov
or
pop
cs
push
imul
dec
sub
popf
nop
adcl
cmpsb
dec
inc
daa
sub
popf
xchg
xlat
out
or
or
dec
xlat
or
dec
jbe
jns
push
lcall
mov
inc
cmpsl
leave
in
xchg
fimuls
out
xchg
push
lock
gs
aas
push
outsl
adc
mov
and
outsb
daa
jo
mov
dec
test
jmp
leave
leave
inc
lock
inc
and
ljmp
fstpl
cmp
inc
outsl
outsb
sbb
outsl
jmp
repz
ja
add
xchg
outsb
repnz
add
daa
daa
daa
mov
pop
add
add
iret
repz
or
out
fwait
adc
pop
push
mov
sub
cmp
mov
push
push
incl
adc
loope
xchg
shll
bnd
in
rcrl
push
dec
cmp
iret
jae
or
or
outsb
rorl
movsb
fidivrl
xchg
sar
pop
pop
loop
mov
pop
les
int3
aas
aam
sbb
xchg
jno
cmp
popf
fwait
pop
cmp
insl
push
mov
in
pop
in
pop
jns
in
lds
pop
hlt
paddb
outsb
add
in
out
adc
or
push
adc
adc
dec
pop
push
jns
xchg
xchg
pop
fs
sbb
pop
aaa
nopl
jl
pop
popf
cmp
in
mov
pushf
jns
xchg
out
and
out
fucom
mov
sub
sub
sub
sub
sahf
out
in
in
cs
rcr
xchg
out
cld
add
ret
cmp
fnstcw
adc
ret
push
in
orl
addr16
pop
push
push
pop
hlt
dec
pop
jne
cmp
dec
int3
ds
push
cwtl
add
es
ret
leave
lret
xchg
add
pop
ret
sub
mov
xlat
xchg
ret
fcmovne
inc
dec
xchg
or
cmc
xchg
add
into
loopne
mov
fbstp
in
sbb
and
pop
btsl
pop
sysret
jbe
insb
movsb
into
inc
les
pop
das
pop
rcr
bound
lret
lret
lret
jg
test
mov
mov
lret
enter
loop
enter
out
cld
les
lds
lds
repz
sub
repz
repz
repz
pop
push
and
push
and
jg
repz
xrelease
repz
daa
stos
sub
cmp
sarl
ficomps
outsl
mov
out
out
lahf
stc
mov
cmp
repz
push
and
and
cmp
repz
sub
xor
iret
repz
cmp
inc
sbb
iret
repz
sbb
repz
repz
insb
adc
cmp
jg
mov
xchg
or
mov
repnz
mov
inc
xor
cmp
stc
add
xor
repnz
mov
cmp
push
pop
or
or
repz
or
or
or
cmp
orb
adc
sahf
adc
iret
repz
adc
cmp
rclb
fstpl
out
bswap
repz
sbb
sbb
or
repz
sbb
iret
repz
cmp
inc
dec
jnp
push
dec
pop
outsl
push
sahf
aaa
cmp
jnp
iret
or
mov
sbb
pop
mov
iret
fwait
cmp
mov
push
adc
adc
cmp
repz
adc
adc
iret
repz
pmulhuw
in
or
cmp
cld
or
add
iret
repz
or
or
or
pop
cmp
jecxz
sub
es
repz
cmp
jecxz
in
pop
das
addr16
outsl
leave
ss
mov
mov
outsl
pop
mov
movsl
nopl
iret
sti
jno
lods
push
add
fildl
lahf
int
dec
aaa
mov
fisttpll
in
in
pmaddwd
jb
ret
adc
or
out
adc
daa
pop
das
leave
repz
pushf
aaa
inc
sbb
insb
push
loop
lret
rorb
and
jns
lret
lcall
push
daa
stos
push
add
popf
cmp
mov
mov
daa
mov
fninit
por
sti
xchg
xchg
xchg
daa
add
or
iret
repz
sbb
and
adc
in
in
daa
inc
push
adc
setae
das
outsl
ja
xchg
xchg
xchg
jg
xchg
xchg
out
sahf
lahf
sbb
and
sahf
shlb
enter
push
cmp
fwait
dec
out
pop
iret
fs
repz
add
push
int3
push
repz
cmp
push
push
add
mov
cmovo
or
dec
sahf
outsb
push
pop
push
push
repnz
dec
jo
adc
lock
orb
nop
int3
scas
push
inc
aaa
push
rcl
push
scas
mov
repnz
sbb
jg
add
fmul
sahf
xchg
out
scas
add
stc
push
out
lea
bndldx
iret
cmp
and
or
iret
repz
cmp
daa
iret
repz
pop
adc
fcmovne
rep
setne
adc
stos
bswap
repz
mov
rcrl
sbb
jae
cmp
loop
in
clc
fimuls
add
push
pop
push
sbb
in
dec
and
das
cmp
jns
sahf
and
and
out
daa
jno
ja
xchg
popf
test
sahf
cmp
repz
dec
and
adc
iret
out
mov
push
add
push
sub
xor
cmp
mov
or
out
lahf
mov
arpl
insl
daa
daa
iret
cmp
or
xchg
xchg
lahf
cmpsl
scas
out
repnz
mov
pop
in
dec
sahf
push
iret
xlat
sbb
xchg
out
fisttpll
sbb
out
out
in
repz
sbb
iret
jnp
loope
xchg
and
inc
pmulhuw
in
cmp
dec
push
into
lock
pop
data16
rorb
rolb
and
rorb
dec
cmpsb
xchg
iret
or
push
mov
enter
insb
dec
int
add
out
decb
iret
rcrl
ror
push
or
mov
aas
prefetch
dec
add
pop
bound
shl
frstor
sarl
adc
out
sahf
cltd
adc
mov
mov
bswap
sahf
sarb
stos
push
sbb
out
push
mov
in
xchg
out
fisttps
and
in
loope
in
in
negl
sarl
rcrl
pop
dec
iret
paddq
loope
in
mov
jg
sub
sub
sahf
jnp
push
sub
push
sub
out
sahf
out
cmp
inc
xor
xor
gs
iret
sbb
into
jo
jnp
mov
push
lcall
push
iret
repz
lahf
sarl
dec
push
cmp
cmp
dec
addr16
jge
fsubrl
cmp
inc
iret
repz
test
inc
jae
popf
cmp
fldt
out
icebp
adcb
rcl
push
add
or
dec
xchg
sahf
dec
call
push
stos
adc
xchg
inc
clc
outsl
and
aam
bswap
sub
pop
in
aam
add
data16
cmp
mov
push
jle
mov
jns
ja
push
or
out
mov
out
sahf
out
por
clc
aaa
jnp
test
pop
add
adc
pop
sbb
sahf
adc
adc
cmp
dec
pop
sbb
push
daa
iret
jae
ja
sbb
rep
xcrypt-ctr
cmpsl
push
and
xchg
xchg
enter
pop
es
cmc
and
xor
decl
repnz
sub
pop
jg
daa
mov
dec
ja
fs
add
cmp
in
jp
jns
fcmovne
test
xchg
out
mov
mov
pop
ds
fst
call
loopne
orb
adc
push
jns
in
adc
unpckhps
sub
jns
out
aaa
pop
inc
sbb
repz
sbb
outsb
in
in
daa
jns
sbb
mov
lcall
insl
jns
mov
mov
repz
shrl
daa
fsubrl
out
fidivrs
movlps
add
jns
sub
fbstp
cmp
mov
fmuls
fdiv
cmp
sbb
add
cmp
add
add
mov
mov
push
inc
dec
sub
daa
pop
psllw
fs
fldz
clc
add
xchg
sbb
fldenv
in
in
push
push
das
cmp
addr16
or
out
jb
jge
pushf
cmp
adc
push
or
iret
repz
adc
mov
out
sahf
mov
in
inc
mov
sbb
add
push
repz
repz
sbb
sbb
sbb
xor
ds
dec
repz
leave
pop
arpl
outsb
and
repz
jns
test
fistpl
mov
pop
enter
add
sbb
pop
inc
push
sub
jo
repz
pusha
xchg
fisttpl
iret
or
iret
add
out
push
add
pushf
pushf
cmp
cmp
iret
repz
push
or
insb
or
sub
cmp
or
jmp
repz
or
es
push
adc
out
cmp
rcll
fsubrp
push
adc
testb
outsl
or
pop
sbb
dec
sahf
out
and
das
cmp
inc
fmull
lahf
mov
cwtl
pop
js
mov
pop
add
fmull
xchg
pushf
push
test
je
out
mov
or
ja
leave
sarl
or
loope
cmp
repz
or
daa
out
cltd
mov
movlps
pop
pop
daa
iret
dec
movsl
sahf
mov
outsl
aas
inc
fstp
pop
sbb
sahf
out
sbb
gs
cmp
in
js
push
sbbb
lock
mov
nop
and
fucom
push
repnz
mov
rcr
in
ss
fst
pop
loop
out
fisttpll
fnstsw
ficoms
repz
dec
sbb
es
or
repnz
iret
or
or
out
sahf
outsb
femms
pop
punpckhbw
in
sahf
adc
jle
mov
dec
sahf
adc
jns
leave
dec
femms
sbb
mov
out
sahf
out
sbb
sbb
leave
repz
sahf
sbb
stc
dec
gs
loope
fistpll
fildll
fdivp
cmp
and
cmp
in
in
es
push
subps
and
lock
inc
jb
test
movntq
je
into
cmc
nop
popa
fs
inc
test
ja
cwtl
stos
pop
mov
mov
outsl
ret
fstpt
inc
jecxz
dec
das
or
jb
rclb
loopne
loopne
cld
cs
mov
loopne
pop
vmwrite
dec
add
or
dec
sahf
out
or
jo,pt
loopne,pt
test
jbe
pop
loope
in
fwait
jmp
add
mov
jns
push
push
gs
jo
jnp
in
dec
xchg
xchg
pushf
cs
leave
repz
sbb
xor
add
out
repnz
out
push
and
cmp
repz
jae
es
daa
gs
es
sub
es
das
popf
cmp
jae
jnp
xchg
push
das
pushf
xor
dec
pop
xor
mov
mov
enter
fimuls
fiadds
popf
roll
sbb
aas
and
or
iret
cmp
cmp
cmp
jle
aas
push
pop
loope
ja
scas
jae
ljmp
scas
fstl
insl
dec
andps
jg
insb
outsb
daa
iret
mov
orb
fmull
movsl
or
popf
cmp
shrl
fimuls
jmp
sahf
adc
adc
or
ja
mov
and
das
sub
in
sahf
pop
inc
sbb
setle
jno
mov
iret
jae
jns
lahf
rsm
and
and
daa
daa
iret
and
sub
jns
out
sub
sub
mov
scas
das
shrb
cmp
lret
das
loope
xor
sbb
cmp
divl
add
push
fsubrl
out
xor
jae
jle
pushf
pushf
pushf
mov
rorb
dec
in
cmpsb
xchg
iret
inc
dec
fs
pop
add
jb
or
pop
out
add
mov
pop
push
pop
arpl
add
push
jge
mov
out
ja
pop
xor
cmpsl
out
scas
mov
mov
in
out
sbb
fadds
pop
mov
or
lahf
inc
mov
or
inc
push
nopl
lock
loope
daa
inc
pop
jo
add
in
xchg
push
add
stos
lahf
add
add
mov
xchg
jecxz
push
or
nop
xlat
add
lock
aam
imulb
inc
push
mov
push
iret
dec
pop
dec
inc
add
or
inc
dec
or
outsb
add
aaa
testl
ja
and
cmpsb
push
add
cmp
jae
push
add
pushf
cmp
pop
or
or
in
sub
or
add
fistl
daa
ja
das
xchg
xchg
fcmovne
and
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
xor
data16
rol
iret
jo
sbb
fadds
adc
and
adc
or
mov
je
les
arpl
sbb
in
mov
or
andb
jb,pt
cmpsb
fisttps
mov
cld
inc
jle
xchg
shll
pop
rorb
inc
mov
inc
or
lcall
in
sbb
in
call
out
ja
mov
ficompl
push
pop
fisubrl
xor
mov
xchg
rcr
fsubp
stc
jb
jle
clc
or
in
jl
repz
jae
push
je
insb
push
fs
push
dec
inc
xor
iret
repz
and
adc
cmp
repz
add
out
sahf
out
add
hlt
lock
int3
add
push
mov
out
test
xchg
mov
je
push
or
iret
jmp
scas
add
cmp
repz
repz
sbb
cld
add
repz
in
fadd
mov
cwtl
cmp
repz
mov
sahf
imull
pusha
pop
push
dec
xchg
out
sahf
inc
xor
add
sahf
out
clc
add
movsb
jns
fucom
nop
loopne
out
jl
push
push
inc
inc
add
ret
cmpl
add
lahf
xor
rclb
pop
adc
cmpsb
div
nop
cwtl
pop
mov
add
mov
adc
sbb
push
or
push
add
or
jmp
mov
cwtl
xchg
in
add
jae
xorb
icebp
call
push
mov
push
inc
jg
lcall
dec
add
inc
loopne
sgdtl
push
push
sbb
jg
push
pusha
add
rcll
add
rcrb
leave
add
subl
push
testl
das
outsl
jno
aam
iret
xchg
cmp
mov
pop
cs
inc
inc
dec
loopne
pop
movsb
fdivs
jg
insb
pop
in
pop
jne
add
out
rorb
mov
out
xchg
es
enter
push
sbb
iret
cmp
add
out
sahf
out
sbb
inc
and
iret
repz
push
clc
add
idivl
add
cmp
repz
mov
mov
out
iret
repz
or
adc
repz
sbb
push
adc
or
out
or
aas
push
out
pop
imul
push
and
and
and
and
sarb
subl
pop
outsb
ret
popa
ret
imul
mov
xchg
cld
in
lock
subb
inc
cmp
out
or
outsb
xorl
fistl
cmp
pop
js
negl
repz
xor
repz
add
push
pop
ja
lock
xchg
mov
bnd
add
lock
dec
in
mov
aas
pop
mov
xchg
cmp
add
or
stc
nop
movmskps
mov
adc
enter
mov
leave
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
test
test
ljmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
divb
leave
fwait
xchg
and
jb
mov
int3
add
aas
jno
or
mov
pop
fs
decl
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
incl
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
in
call
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
pop
dec
std
sarl
addb
call
or
mov
jecxz
cmpsb
jg
inc
push
inc
inc
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
mov
xchg
mov
and
push
inc
mov
mov
add
in
inc
inc
je
inc
inc
push
dec
mov
mull
inc
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
add
insb
cmp
popa
mov
call
mov
outsb
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
lods
pusha
sub
outsl
sahf
pop
insb
mov
aas
dec
insb
imul
push
add
cmp
iret
xor
pop
ficoml
int3
add
aas
push
inc
dec
push
rclb
pusha
testb
jb
push
mov
inc
inc
test
imul
inc
gs
gs
fmuls
adc
inc
inc
push
inc
arpl
or
mov
subl
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
inc
xor
pop
out
xorb
push
sub
push
inc
pusha
mov
dec
cmpsb
das
pop
inc
orb
add
aas
xor
add
dec
mov
andl
daa
daa
adc
sti
jbe
jae
imul
xor
inc
jg
testb
inc
jns
dec
lahf
int
sbb
push
push
les
push
cmp
cmc
jbe
insl
data16
jns
andb
mov
data16
mov
out
dec
push
mov
mov
dec
dec
in
bound
jbe
adc
lods
push
dec
test
push
mov
and
xor
int
cmpsb
dec
and
mov
jg
mov
arpl
inc
or
push
sbb
rol
push
xchg
sbbl
ret
add
add
stos
sbb
push
lock
idivl
cli
dec
sub
mov
jo
mov
sbb
push
out
addr16
push
push
test
push
mull
rol
inc
push
push
imul
add
outsl
lds
ret
push
jb
lds
sbb
ret
xlat
push
push
jp
lock
push
xor
jg
push
adc
push
xacquire
or
aad
lods
ficoms
arpl
push
push
mov
push
sub
popa
fimuls
pop
jg
sub
sbb
bound
inc
mov
pop
mov
cmp
mov
data16
test
pop
add
mov
ja
adc
pop
ja
shll
lret
fs
test
adc
mov
nop
fcomps
push
mov
andb
lahf
insb
aam
psllw
push
push
push
mov
lret
scas
pop
push
push
xlat
dec
lahf
subb
inc
dec
add
push
mov
and
dec
pop
add
mov
push
jg
cmp
sbbb
jo
pop
push
iret
aas
call
into
add
lahf
add
push
mov
sbb
cmp
out
insl
jmp
dec
dec
fbld
dec
in
andl
mov
sub
arpl
dec
outsl
add
imul
mov
jo
gs
cmp
js
loopne
push
imul
dec
outsl
or
aad
scas
ss
lea
les
fcmovbe
insl
pop
and
outsb
sbb
das
xlat
pop
insl
mov
sub
cmpsb
push
or
mov
repz
cmpsl
stc
cmp
inc
and
aam
mov
pusha
fdivrs
ja
pop
sbb
add
sub
out
ds
push
and
cmpsl
add
daa
lahf
xchg
xor
ja
popa
push
out
mov
decl
cltd
sbb
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
call
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
mov
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
decl
pop
cwtl
or
adc
stos
sbb
jmp
nop
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
fildll
mov
js
stc
lret
xchg
sbb
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
jmp
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
sbb
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
dec
or
inc
movsl
fisttps
xchg
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
incl
or
xchg
shlb
add
inc
push
imul
xorb
ljmp
cli
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
incl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
dec
shlb
sbb
ret
es
pushf
mov
insl
add
jmp
test
jb
push
mov
dec
mov
loop
sub
or
lcall
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
jg
dec
push
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
jmp
or
adc
sahf
gs
clc
sar
imul
push
js
or
decl
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
call
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
xchg
jmp
add
push
sub
mov
or
sbb
pop
aam
pop
push
out
add
adc
pusha
push
push
pop
pop
mov
mov
out
roll
pop
jbe
jne
ja
insl
jg
push
imul
insb
imul
xchg
lahf
pop
inc
jbe
push
jns
arpl
arpl
cmp
add
push
inc
insl
mov
pop
inc
jne
sub
mov
outsl
insl
addr16
pop
mov
xchg
fildl
lret
dec
sub
jb
outsl
push
jbe
in
mov
cmovns
clc
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
movsb
popa
push
inc
jbe
pop
sbb
adc
mov
push
dec
inc
ret
not
xor
inc
or
xchg
and
jne
int3
dec
xor
shll
mov
add
mov
lcall
arpl
cmp
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
dec
fldl
xchg
insb
popa
jns
pop
nop
cmp
insb
jno
adc
fadd
xchg
cmp
je
add
outsl
adc
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
stc
add
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
icebp
dec
popa
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
push
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jno
jo
das
inc
and
sbb
mov
seto
dec
dec
insb
or
cs
test
add
inc
push
bound
adc
xor
ret
test
ja
pop
adc
cmp
jno
popf
xor
mov
shrb
sbb
jns
adc
dec
cld
cmpsb
xchg
cld
fcom
pop
xchg
loopne
dec
scas
imul
divb
pop
and
mov
push
xchg
outsl
and
sahf
aas
shll
pop
es
outsl
aaa
movsl
aaa
mov
sbb
loop
aaa
push
dec
pushf
and
add
rolb
inc
lds
pop
inc
and
mov
add
sbb
pusha
test
push
push
rcrb
cmp
dec
xor
ret
dec
adc
dec
mov
nop
xlat
stos
inc
mov
pop
test
out
clc
or
pop
mov
int
mov
add
sbbb
add
cwtl
outsb
outsl
je
or
add
and
mov
insl
mov
or
cmpsb
dec
shrd
sbb
loop
popa
incl
lea
lahf
jg
cld
bswap
mov
out
ud0
jmp
in
out
out
repnz
in
push
pusha
ljmp
lret
cli
add
mov
cld
push
imul
addb
add
dec
out
in
imul
or
or
insb
daa
aam
cmp
dec
int
sub
add
orl
mov
add
sbb
add
xor
lcall
mov
push
mov
pop
push
add
subb
or
add
mov
pusha
push
add
pop
add
pop
sbb
adc
cmp
out
add
lods
add
push
sbb
loopne
jb
mulb
inc
push
repnz
lret
sar
inc
cs
mov
insl
dec
mov
or
rcrb
dec
adc
out
add
out
cltd
and
dec
addb
repnz
push
inc
sbb
xor
cmp
push
flds
adc
jmp
add
das
push
inc
jle
or
rorb
sbb
mov
lret
or
dec
jne
jno
pusha
jecxz
and
xchg
xchg
jae
xchg
mov
ret
xchg
test
mov
jbe
dec
xchg
clc
in
sbb
cs
mov
cld
pop
js
dec
fucomi
gs
add
mov
hlt
ja
jne
jmp
mov
jmp
sbb
int3
pop
lods
jg
call
test
popa
cli
fnstcw
push
inc
rorb
loope
pusha
je
dec
sti
mov
and
mov
cld
movsb
in
mov
mov
sub
or
lret
les
sahf
hlt
jl
les
shrb
sbb
inc
push
inc
dec
aam
add
mov
jecxz
fnstenv
scas
popa
jnp
sahf
dec
add
adc
lret
jnp
scas
popf
add
rcll
sbb
mov
mov
or
rcll
mov
adc
dec
sbb
movsb
lds
xchg
cmp
jbe
mov
repz
mov
xchg
adc
pop
cmp
cwtl
inc
movsb
inc
add
nop
sbb
dec
sub
jo
mov
mov
mov
jmp
out
and
mov
add
movsl
mov
loopne
pusha
mov
pop
xor
add
dec
pop
adc
outsb
insl
cmp
mov
movsl
pushf
and
aad
or
outsl
cmp
xor
push
inc
imul
add
adc
fs
pop
cmp
pop
mov
sti
and
outsb
pop
sbb
mov
cmp
in
add
jne
push
imul
adc
fdivs
mov
push
lock
or
shr
inc
add
insl
mov
movsl
adc
sub
and
cld
add
mov
imul
fmul
fs
enter
ficoms
push
push
pop
push
cmpsl
mov
in
push
leave
push
or
dec
loop
pop
mov
cmp
pop
add
out
mov
imul
xor
or
pusha
leave
and
ret
xchg
sbb
mov
in
add
dec
pop
push
ret
jmp
rorb
inc
sahf
nop
sbb
aad
stos
pop
cltd
test
lea
mov
and
dec
lret
push
add
sub
es
inc
das
lods
sbb
aam
je
inc
test
movb
test
sbb
add
push
mov
jnp
jae
aam
lea
outsb
out
or
lds
fcomi
loope
das
add
adcl
arpl
mov
imul
adc
push
cmp
insl
movsb
loopne
in
add
and
rcll
pushf
or
test
add
repnz
jne
movsb
cmp
sub
push
roll
cmp
mulb
mov
movsw
dec
hlt
add
lcall
sbb
push
ss
inc
adc
jae
aas
in
mov
adc
xchg
popf
mov
fcoml
and
adc
sub
and
jmp
mov
push
js
inc
pop
je
call
push
push
adcb
sub
push
mov
lahf
sub
adc
xor
inc
mov
mov
fcoml
xor
and
or
roll
mov
sbb
sbb
lcall
jno
sbb
jp
das
fwait
jp
push
lea
push
mov
jp
push
or
jecxz
add
inc
or
push
lock
mov
pop
xchg
sbb
test
ja
pop
mov
rolb
aas
or
call
ret
or
cmpl
dec
mov
pop
aad
mov
jo
xor
in
pop
pop
pop
pop
call
movsb
mov
push
test
sahf
add
in
add
mov
adcl
and
dec
enter
add
cwtl
lret
xor
test
adc
sub
jecxz
mov
sbb
xchg
sub
push
push
jmp
mov
push
dec
call
jle
pop
push
call
jle
or
call
cmpsl
pop
ss
dec
xchg
lea
and
mov
dec
xor
inc
loopne
xchg
cld
nop
xabort
mov
sbb
jmp
outsb
push
shrl
add
xorb
mov
mov
fmuls
pop
pop
out
add
sub
or
mov
sub
or
test
out
ja
pop
mov
xchg
xchg
idivl
mov
mov
call
in
dec
dec
mov
sbb
inc
cmpsb
test
dec
or
or
sub
jo
add
mov
cs
rcl
inc
adc
in
sbb
popf
out
mov
fcompl
dec
leave
out
in
shl
or
hlt
dec
scas
popf
dec
ficoml
rol
hlt
sbb
inc
push
xor
clc
lock
or
in
mov
es
ret
fcoms
or
mov
push
push
jecxz
lcall
sti
in
or
out
les
cwtl
js
sub
jbe
pop
ret
aas
mov
rorb
pop
lds
mov
pop
lahf
mov
dec
fdivrs
mov
gs
mov
aaa
adc
incl
das
mov
sub
arpl
mov
movsl
push
cld
push
hlt
push
pusha
cmp
lret
cmp
xchg
cld
push
fistps
adc
push
adc
pop
loop
or
popa
push
jo
jbe
and
add
push
pop
ds
add
lock
sbb
xor
cmc
ds
inc
add
or
frstor
add
ds
sbb
pop
mov
aaa
sbb
xchg
push
jnp
sbb
loop
fdivr
adc
push
sbb
repnz
cltd
insl
sti
xor
xchg
push
push
push
dec
adc
loopne
add
jno
inc
pop
pop
xchg
cmpsb
mov
pusha
push
int3
call
mov
push
dec
cltd
adc
cs
inc
push
out
je
cmp
pop
mov
jnp
jne
andb
add
jl
adcl
stc
and
jge
xchg
cmp
ret
xchg
xor
test
mov
mov
inc
cmp
cmp
xchg
test
in
push
adc
dec
push
adc
out
outsb
lcall
test
add
mov
and
pop
mov
lods
mov
add
fisubs
rcrb
fildl
or
cmp
lcall
loop
ljmp
mulb
mov
ltr
xlat
call
out
hlt
fdivrp
xor
mov
sahf
pushf
xor
pop
loop
lea
cmp
es
cmp
decb
clc
and
psubsw
push
sub
pop
dec
mov
cmp
lret
aas
xor
call
or
mov
int3
or
jno
loop
pop
movsl
in
push
adc
and
rcrb
push
adc
pop
adc
rcrb
xlat
add
lea
test
lcall
jl
mov
rep
loope
mov
movsb
push
ret
push
mov
sub
fucomp
test
ss
rcll
jnp
mov
dec
sarl
sbb
mov
dec
xchg
push
ficompl
inc
mull
mov
pusha
js
dec
jl
rolb
add
xchg
mov
test
sbb
loope
xchg
push
jb
je
ljmp
ljmp
rcrb
je
pusha
dec
xchg
mov
adc
je
cmpb
adc
je
mov
adc
scas
sbb
call
loopne
fistpl
or
push
subl
repnz
mov
jb
adc
xchg
pushf
push
or
in
imul
rcl
sahf
mov
fiaddl
mov
lret
sbb
mov
push
loopne
pop
jp
scas
pop
cmpsl
cmp
ss
aas
js
out
xchg
in
repz
mov
sbb
sub
adc
negb
push
adc
push
push
or
insb
or
and
mov
dec
adc
push
inc
or
cwtl
push
push
xchg
sbb
sahf
loopne
push
call
and
cmp
jle
jmp
mov
mov
pushl
stos
fidivs
push
gs
pop
mov
loopne
dec
in
sub
push
push
add
or
or
jmp
and
xchg
cmp
inc
fisubrs
dec
sub
push
mov
divl
push
pop
loope
and
dec
add
lret
and
in
enter
push
pushf
add
jno
test
test
jp
and
push
insb
cmp
adc
adc
xor
mov
and
into
or
or
stos
xor
fsub
adc
sbb
jmp
mov
and
cmp
cmpsb
sbb
pop
movsb
ret
cltd
je
inc
mov
testl
mov
in
mov
mov
shl
aam
xchg
in
in
mov
sarl
ret
mov
lcall
mov
cmpb
push
imul
and
xor
mov
push
loopne
cmpsl
adc
xchg
int3
pop
aas
push
fists
xchg
jp
ret
sbb
lock
jecxz
pop
mov
jne
ja
sbb
lods
push
cmp
adc
fidivrs
bound
inc
xor
push
ds
cmp
mov
dec
mov
out
scas
mov
xor
jmp
movb
mov
fcomp
inc
test
mov
enter
mov
sbb
rolb
inc
push
fdivs
daa
pop
popa
sbb
test
aad
mov
dec
xlat
push
push
xor
das
mov
jecxz
repz
cs
mov
mov
pop
mov
jb
fs
jns
in
cwtl
add
lret
sub
adc
or
pop
shrb
rorb
int3
xchg
adc
and
add
xchg
loop
mov
push
jne
jl
sbb
sbb
call
mov
jne
cld
jb
add
add
mov
inc
xor
mov
in
jne
adcb
adc
scas
jns
mov
lea
or
sahf
icebp
aam
jnp
or
gs
ljmp
push
icebp
xor
pop
cli
ret
call
test
mov
mov
aam
lock
es
dec
jp
mov
into
mov
ss
inc
and
cli
xchg
mov
or
in
inc
xchg
popa
inc
lock
add
pop
and
je
or
sbb
pop
je
mov
adcb
leave
ret
cmp
adc
or
loopne
inc
xor
xor
orl
mov
sbb
push
jmp
mov
fs
push
ret
jp
call
xor
xchg
jle
add
inc
push
cld
lcall
mov
pop
jmp
rcrl
cld
adc
ja
sbbl
mov
lds
push
lock
pop
mov
sbb
mov
les
mov
hlt
lods
jbe
inc
pop
pop
subl
pop
inc
push
arpl
fiadds
xor
inc
pop
cmp
or
outsl
popf
fldenv
mov
cmp
fldt
jne
push
loopne
ja
cmc
push
orl
push
xchg
adcb
push
add
add
in
ret
adc
dec
insl
je
sub
xor
ja
xchg
lock
or
shr
pushl
and
out
cmp
xor
stos
std
std
in
scas
adc
xor
inc
inc
cld
cmp
mov
push
or
cmp
cmp
call
fiaddl
mov
jns
inc
aas
jmp
mov
dec
xor
sub
testb
pop
dec
inc
sub
dec
mov
adc
pop
push
jno
push
in
inc
pop
dec
insb
bound
adc
std
adc
scas
adc
ds
fs
cmp
scas
xchg
sbb
scas
outsb
and
jbe
test
add
pop
add
mov
loopne
add
mov
and
add
and
push
or
add
push
mov
xor
sbb
cmpsl
jae
sub
subl
push
pop
fistps
loopne
add
int
mov
and
sub
sub
in
ret
dec
cmp
les
xor
loopne
lock
mov
jae
shll
or
inc
and
loopne
aam
inc
xor
mov
std
add
cmp
cmp
fmull
cmp
push
orl
mov
or
mov
sub
add
fwait
xor
jecxz
push
mov
push
dec
pushf
cmpsl
fld1
cmp
loope
jo
stc
sub
inc
jbe
dec
dec
ss
lea
dec
or
xchg
sbb
inc
adc
dec
xchg
xchg
sarb
add
or
enter
imul
adc
jmp
fsubl
insb
and
xor
add
in
adc
adc
inc
or
jle
fidivs
push
mov
cwtl
adc
sarb
int3
fnstsw
popl
mov
cmp
shrl
insl
adc
xor
cmp
add
pop
sub
adc
sub
ds
dec
mov
push
adc
cwtl
push
adc
sbb
sbb
dec
or
data16
pop
sbb
call
enter
mov
shlb
jl
pop
jne
mov
jmp
or
shll
xor
or
or
or
pop
pop
roll
jae
fwait
and
add
lods
xor
shrl
push
cmp
push
mov
xor
mov
out
test
inc
inc
push
add
call
scas
sbb
out
pop
loope
sbbb
xchg
ljmp
fisttps
push
call
mov
iret
mov
cmp
ss
mov
fldl
call
nop
in
rolb
dec
mov
cs
cmp
mov
mov
push
add
push
mov
lea
sbb
pop
adc
fldt
or
or
fnstenv
push
jbe
dec
cli
mov
jne
mov
subb
push
push
and
std
pop
sbb
xorl
lock
cwtl
sbb
push
in
pop
ret
or
test
push
mov
jae
hlt
pushf
cli
adc
popf
fadd
and
xor
pushf
loop
push
getsec
adc
pop
je
and
sub
imul
cs
fwait
add
xchg
test
mov
mov
mov
loope
mov
adc
or
paddb
and
jmp
push
mov
cmp
mov
daa
lods
sub
cmpb
mov
cmp
mov
push
lds
lods
sbb
push
shl
inc
adc
inc
pop
push
and
aad
loopne
sti
push
adc
nop
imul
dec
jle
ljmp
push
xor
push
in
pop
xchg
push
test
xor
push
sub
pop
push
mov
fs
and
pop
inc
clc
jno
xorb
aad
pop
loop
xchg
aam
xor
mov
jge
int
push
sbb
aam
in
lds
add
push
clc
icebp
fsubrl
call
insl
stos
loopne
sub
cltd
pop
or
push
push
popf
lahf
fcoms
pop
add
add
je
mov
lds
push
push
sub
in
orb
cmp
or
push
enter
mov
sbb
push
in
in
or
popf
imul
rcll
xchg
mov
cmp
mulb
mov
jmp
adcb
arpl
movl
aas
jmp
fucom
cwtl
ss
das
mov
or
lock
dec
push
hlt
shrb
gs
mov
mov
ss
sub
cli
jns
and
cmp
inc
add
mov
or
mov
je
std
mov
jmp
adc
and
add
inc
cmc
add
add
pop
sub
icebp
and
cmpb
push
dec
sbb
push
jl
sub
mov
pop
mov
lea
call
mov
jmp
push
imul
pop
addr16
sbb
jmp
sbb
in
xor
sbb
sbb
jne
into
mov
jae
cmp
jmp
cmpb
cmp
jne
push
loopne
mov
mov
or
je
int3
jecxz
in
cltd
dec
decb
icebp
pushf
fwait
mov
jmp
orb
nop
xor
add
pop
outsb
jp
sarl
icebp
call
inc
das
lds
cmp
mov
and
in
xchg
cld
push
pmullw
push
js
lods
dec
repz
mov
je
sbb
jp
lret
nop
lret
inc
lods
scas
or
jl
aad
lock
js
negb
mov
push
dec
xor
out
dec
mov
fxtract
jmp
cmp
jne
push
popa
or
je
xchg
fisubrl
test
push
xchg
add
cs
adc
add
popa
sbb
fdivr
or
jp
rorb
xchg
jne
add
push
call
fstpt
and
movsb
jmp
js
jns
sbb
sbb
test
pop
jne
dec
or
dec
push
call
je
pop
add
cmp
decb
or
adc
mov
inc
xchg
push
add
jmp
and
mov
call
push
or
pop
fcompl
test
call
push
add
add
push
sbb
add
jo
jecxz
roll
cwtl
or
call
pushf
or
cmp
test
loope
das
push
test
add
xor
stos
push
inc
loopne
cmpsl
mov
mov
mov
inc
mov
sub
andl
mov
cld
add
lock
push
dec
lea
je
mov
pop
mov
orb
lods
mov
jbe
test
aas
mov
fisttpll
lea
dec
popa
push
and
sub
decl
or
inc
inc
adcl
add
je
scas
insl
loop
aam
nop
cli
mov
mov
xor
add
mov
jge
xlat
lea
incl
nop
sbb
sub
sahf
shr
testb
and
adc
add
mov
push
test
xor
pop
adc
in
or
and
ja
in
rorb
inc
adc
inc
xor
inc
pop
rorb
adc
xchg
sarb
fwait
jae
out
add
xchg
cli
or
push
add
call
pop
mov
xchg
pop
jge
gs
in
sub
dec
add
push
and
cld
push
call
xchg
pop
sub
das
dec
aam
sbb
rclb
dec
or
stos
inc
je
push
cmp
cmp
aas
or
push
dec
pop
out
dec
inc
mov
xor
nop
dec
aas
enter
cmp
inc
insb
sbb
arpl
jno
xor
inc
mov
rol
sub
mov
insl
mov
stos
fdivrs
insl
mov
inc
les
and
fcmovnb
dec
mov
pusha
cmp
mov
ss
pushf
mov
push
adc
movb
les
adc
arpl
pop
lea
mov
xor
push
and
mov
and
lods
mov
mov
adc
sarb
mov
cli
pop
jno
inc
negb
pusha
push
nop
and
fs
fcmovb
mov
xchg
std
pop
js
cli
or
or
jp
jle
sti
push
dec
add
pop
lahf
mov
cmp
xorl
jmp
cmp
mov
aam
inc
adc
out
insb
data16
call
and
pop
dec
adc
and
inc
pop
int3
pop
fs
jbe
mov
add
mov
imul
sahf
ss
cmp
or
or
add
jge
lods
pop
psubsb
add
call
insl
scas
scas
pop
jmp
push
xchg
or
cld
xchg
pushl
jp
mov
lret
inc
inc
cmpsl
xchg
sbb
xchg
loope
mov
inc
lcall
cmpsl
loopne
addr16
cmp
in
clc
loopne
pop
push
into
cmp
xor
dec
dec
jmp
sub
inc
jmp
dec
test
sbb
adc
pop
xchg
scas
ret
push
es
xlat
repnz
rorl
insb
or
adc
cmpl
lock
lcall
enter
push
sbb
or
pop
mov
push
and
inc
fiadds
call
dec
incb
cmp
es
cmpsb
add
ja
sub
movsl
push
and
mov
repz
arpl
adc
or
add
sbb
cltd
dec
push
push
es
and
gs
movb
pop
ss
mov
dec
push
xchg
pop
inc
push
or
in
ficomps
dec
xorb
mov
ljmp
sbb
js
xchg
adc
int3
xor
dec
fcmovb
pushl
push
imull
int
sbb
push
scas
enter
test
push
push
addb
or
adc
inc
push
sbb
push
xchg
pop
adc
pop
aaa
movl
cmp
movsl
add
les
int3
lcall
adc
mov
mov
push
inc
jbe
es
xchg
pop
rolb
sbb
call
rcrl
add
dec
and
pop
test
cmpsb
and
les
pop
adc
mov
das
and
cmp
xor
and
and
dec
and
dec
ss
mov
add
dec
sub
test
dec
and
lret
mov
lods
lret
call
adc
xor
daa
cmp
adc
cmp
lods
daa
xchg
xchg
dec
rcr
insb
andb
cs
pusha
mov
sbb
je
mov
imul
je
daa
movsl
cmp
dec
daa
out
ficomps
push
sub
sbb
sarb
adc
add
mov
jmp
jns
je
sbb
lds
inc
out
dec
sbb
out
repz
or
inc
in
nop
add
and
rcl
jns
dec
daa
loopne
mov
rcl
and
int
mov
or
push
mov
call
enter
add
imul
out
cld
or
push
adc
mov
loopne
daa
int3
add
orl
xor
stos
add
sub
decl
inc
fisubs
lods
pop
and
insb
push
mov
adc
dec
xchg
jle
pushf
push
pop
jmp
cmp
je
xlat
lods
dec
scas
xor
sub
cs
inc
cmpsb
jle
setg
lea
push
jbe
xor
push
pop
add
add
in
add
nop
rclb
pop
mov
jo,pt
cmp
je
lea
xchg
add
mov
in
add
nop
addr16
gs
pop
out
rcrb
or
or
and
scas
in
mov
and
or
bsf
cmp
xchg
or
ror
xchg
or
mov
push
push
jb
cmp
rdmsr
stos
mov
pop
adc
in
sahf
xchg
or
adc
and
adc
add
add
and
cs
adc
adc
push
adc
pop
leave
push
inc
pop
pop
pop
lcall
out
scas
in
sbb
mov
mov
sbb
inc
scas
mov
mov
sbb
je
push
sbb
out
arpl
jo
xor
xchg
out
xchg
sbb
and
fwait
inc
negb
pop
jne
add
push
cli
ret
sub
dec
add
fidivrl
addb
iret
cmp
xchg
add
and
lods
pop
sbb
cwtl
fisubs
fists
in
imul
rcl
mov
adc
in
in
cmp
xchg
mov
cmp
mov
and
in
sub
call
adc
ja
addr16
fsubrp
cmp
cmp
xchg
ljmp
pop
sub
push
or
fisubl
dec
in
in
in
xchg
aad
mov
in
cmp
mov
pop
and
out
xchg
out
or
movsb
mov
lock
push
sbb
xchg
dec
icebp
cmp
adc
jnp
or
adc
repz
sahf
cmp
imul
in
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
add
negl
gs
stos
pusha
nop
cmpsb
clc
clc
clc
or
aas
stc
stc
and
mov
add
fwait
lret
sti
fdivrp
cld
cld
je
aaa
mov
insl
cld
push
push
nop
shlb
mov
repnz
sbb
fwait
and
mov
jmp
outsl
xor
sbb
sub
jb
movsb
iret
xor
and
push
imul
cmp
adc
jecxz
mov
cld
in
in
mov
cmp
pop
cmp
inc
or
out
or
call
leave
sti
adc
xor
or
push
push
jmp
daa
in
in
repnz
cmp
or
scas
ss
out
out
xchg
mov
test
cmp
add
or
push
imul
pop
nop
stos
xchg
push
cli
stc
adc
imul
mov
pop
push
and
clc
cltd
jb
and
stc
sbb
xor
sti
sti
xchg
aaa
jb
sti
xchg
or
cmp
scas
jbe
mov
int3
pop
adc
or
cmc
inc
dec
mov
shl
stos
cmp
mov
loop
scas
ss
loop
shll
push
and
test
inc
clc
and
dec
dec
add
or
out
out
fdiv
nop
mov
mov
jns
testl
ljmp
jmp
testl
or
hlt
imul
out
xchg
pop
push
lret
or
mul
scas
andb
or
insl
repnz
xchg
inc
repz
in
repnz
or
dec
push
cmp
out
div
push
ja
scas
testb
mov
push
mov
push
stos
xchg
cmp
lcall
das
test
adc
cmc
loope
cmc
add
push
and
hlt
or
xlat
inc
pushw
data16
jns
lods
lock
push
jo
push
lods
or
mov
je
add
mov
jb
out
loope
loope
jp
jns
xor
pushf
pusha
pop
repnz
mov
hlt
roll
repnz
repz
repz
mov
inc
mov
or
xchg
repz
andb
pop
repnz
sbb
cltd
or
in
jmp
jb
mov
and
mov
jne
jp
test
cmp
icebp
icebp
jno
scas
out
xchg
pop
adc
repnz
repnz
icebp
cmc
cmc
dec
dec
push
arpl
and
mov
lock
jb
mov
cwtl
icebp
or
out
stc
mov
dec
icebp
xor
mov
adc
or
push
jmp
mov
test
push
sahf
push
jp
jmp
in
mov
push
sub
fildll
push
inc
insb
loope
push
sti
jp
inc
cmp
cmp
xchg
cmp
mov
adc
mov
rol
btc
fiaddl
jne
stc
xor
sarl
dec
add
movsb
xchg
dec
add
sahf
and
inc
ss
movsb
sti
inc
xchg
shr
and
outsl
xor
add
int3
dec
mov
popa
mov
nop
push
jns
adc
aaa
ss
out
or
push
add
dec
repz
jecxz
iret
shrl
dec
mov
int
sti
cmp
in
push
push
aad
in
xchg
idivl
jnp
gs
dec
outsb
or
sub
and
movb
inc
jb
sar
push
dec
sbb
into
and
xchg
push
decb
lea
inc
cmp
and
sub
pop
test
pop
imul
xchg
adc
lods
jle
movsb
inc
pop
sub
jg
out
popa
iret
fists
push
addb
inc
and
push
sbb
movb
push
lock
push
ja
lock
sbb
sub
push
add
xor
pop
mov
or
pusha
pop
push
shlb
call
add
incb
inc
adc
in
jmp
xchg
pop
xlat
inc
dec
and
xor
jb
xor
and
push
repnz
mov
clc
adc
dec
mov
pop
xor
sbb
adc
jmp
adc
sbb
jmp
push
xchg
lret
cwtl
divb
dec
movsl
and
mov
and
mov
sub
xor
mov
push
ss
inc
inc
inc
or
adc
hlt
psubsw
dec
fwait
rcll
sbbl
jnp
mov
add
xorl
shr
inc
add
mov
add
and
add
loope
loope
add
xchg
add
inc
jb
xlat
add
mov
sbb
sbb
and
roll
dec
xor
popa
push
and
sub
and
outsb
sbb
mov
fwait
inc
nop
out
adc
scas
pusha
adc
inc
dec
pop
call
inc
pusha
and
test
add
push
xor
out
data16
inc
out
inc
sbb
and
or
in
mov
pop
inc
movsb
das
add
dec
je
rorb
adc
xor
add
cmpsb
push
shll
clc
add
or
movsb
push
pop
mov
xchg
andb
mov
pop
sbb
mov
subl
mov
iret
cmpsl
jmp
je
sub
add
xlat
loop
ret
and
sub
sti
inc
nop
int3
cmp
les
loop
stc
stc
push
sbbl
in
xor
fcomps
and
xchg
push
stc
or
je
in
adc
stc
fsubs
int
pop
add
mov
or
test
dec
lcall
je
stc
outsl
and
and
and
aaa
sar
xor
or
push
stc
add
xchg
pop
push
push
and
es
out
pusha
and
or
stc
aam
and
lds
stc
fldl
aaa
test
jnp
andl
pop
and
nop
stc
andl
push
imul
inc
in
in
clc
cmp
sub
shll
cld
addb
out
and
cmpsb
test
rep
mov
push
orb
adc
pop
mov
stc
andl
movsl
adc
adc
subl
stc
cmp
shll
dec
stc
cmc
add
lock
in
jmp
mov
inc
loop
insb
pop
fs
push
xchg
sub
stc
and
xorb
push
stc
in
mov
cmp
sbb
adc
stc
andl
mov
andb
fldl
and
inc
cmp
inc
int3
rolb
std
push
push
mov
push
stc
rclb
sub
xor
stc
pop
outsb
push
push
movsb
stc
test
popf
cmc
dec
add
and
cltd
push
or
mov
push
imul
mov
xor
inc
scas
mov
mov
sbb
enter
adc
nop
fdivr
imul
nop
into
movsl
fwait
lock
adc
jb
movsl
cmp
add
imull
or
xor
ds
loope
push
inc
pop
div
or
imulb
iret
dec
add
imul
out
fimull
pusha
push
cmp
xor
shlb
scas
popa
shlb
je
sub
lods
rclb
add
rclb
dec
orl
outsl
inc
adc
aaa
add
cmp
xor
andl
into
dec
outsl
aaa
cmc
dec
pop
vorps
adc
rorb
sub
or
jb
daa
or
shl
and
pop
adc
and
and
adc
cwtl
mov
sub
int
xor
into
and
mov
jmp
jl
sub
lods
mov
push
pause
cmp
int3
xchg
sbb
mov
sbb
rorb
call
shlb
test
and
jmp
sbb
dec
dec
repz
clc
xor
cmp
nop
adc
mov
rorb
call
je
mov
inc
mov
push
sbb
cmp
xor
enter
sbb
mov
cmp
push
loope
into
xchg
mov
orl
sbb
sbb
addl
je
jae
mov
pop
pop
inc
pop
mov
cmp
pop
mov
mov
xor
push
mov
add
mov
push
insb
mov
add
mov
or
mov
sbb
sub
inc
leave
loopne
fs
in
push
test
sbb
xor
shrb
and
sbb
push
sbb
xor
mov
nop
imul
push
sbb
ss
mov
rclb
sub
je
ljmp
roll
xor
cmp
xor
rorb
inc
mov
sbb
mov
sbb
roll
or
sbb
and
fcom
nop
push
push
mov
push
cmp
idivl
mov
aas
push
bndldx
fmull
or
or
dec
mov
je
cmp
push
sbb
mov
xor
out
imul
mov
cmp
daa
mov
pop
nop
rcrl
test
insb
xchg
push
sbb
enter
call
mov
rolb
sbb
mov
enter
pusha
and
mov
mov
jo
sbb
mov
inc
or
push
add
xor
push
sbb
cmp
aam
add
cs
into
mov
dec
cmp
mov
inc
sbb
mov
das
sbb
push
mov
sub
cmp
jmp
pop
or
and
adc
jecxz
mov
xlat
inc
inc
mov
push
aam
push
sbb
hlt
nop
mov
orb
inc
inc
aaa
imul
add
je
mov
nop
aad
aad
out
ret
call
push
sbb
jge
jae
mov
out
push
loopne
test
pop
or
push
call
xchg
or
int
jl
cmp
ss
lcall
pop
pop
or
and
mov
xor
or
call
add
mov
push
inc
inc
lret
jo
inc
imul
pop
mov
pop
imul
mov
aam
out
je
cs
xchg
cmp
adc
lret
dec
movsl
jne
push
out
mov
xchg
mov
shl
stos
cmp
pop
jo
xchg
and
sbb
pop
in
mov
or
cmp
ret
imul
rol
jmp
jp
out
dec
push
add
dec
pop
inc
push
pop
or
je
addl
push
and
std
mov
inc
jecxz
mov
and
mov
xor
rorb
jg
mov
xor
sub
dec
jae
sbb
xor
enter
cmp
inc
enter
push
pop
dec
xchg
into
loop
dec
pop
cmp
sbb
pop
lcall
call
adc
sbb
or
popa
jo
jo
mov
cmp
daa
adc
xchg
push
faddl
sub
insb
std
rolb
leave
in
cs
loope
jge
aaa
imul
and
aaa
popf
aaa
dec
pop
aam
xor
daa
icebp
mov
repz
adc
in
pop
out
lods
mov
inc
xlat
or
add
push
mov
jnp
and
dec
pop
ret
fucomi
adcl
push
mov
sbb
cmp
popf
xorl
ret
mov
jmp
inc
inc
gs
hlt
sbb
gs
test
test
andl
enter
addr16
testl
ret
subb
loopne
enter
pop
rcll
sarb
push
shll
shll
inc
jnp
nop
inc
push
outsl
add
xlat
mov
sbb
mov
enter
mov
sub
dec
mov
movsl
sub
adc
rolb
jo
pushf
or
xchg
popf
lcall
pop
xchg
pop
xchg
and
mov
xchg
xchg
xchg
pop
add
dec
and
xchg
and
orb
fists
mov
dec
jle
push
cltd
imul
jg
add
push
xchg
je
sbb
push
mov
dec
jge
jg
adc
pop
cmpsl
push
jae
mov
push
dec
jb
jg
inc
push
mov
leave
push
adc
movsl
loope
or
call
pop
fnop
inc
mov
adcb
jnp
add
pop
pusha
in
cli
stc
dec
xchg
sub
mov
fnstenv
loope
inc
ret
jg
pop
sbb
ret
mov
jp
xchg
jo
test
cmp
ret
sub
mov
xchg
es
and
movsb
ret
add
add
rcrl
push
jl
add
xchg
add
sbb
hlt
out
or
je
sbb
enter
inc
cmp
lret
add
notb
and
insb
dec
mov
lcall
stos
ljmp
dec
or
sub
adc
rol
push
adc
dec
sbb
call
je
and
pop
call
fimuls
call
mov
and
cmp
or
push
cwtl
inc
cmp
mov
and
sub
in
pop
es
push
inc
xchg
ret
testb
mov
jno
push
and
push
rol
mov
push
dec
popa
or
or
out
fcmovne
nop
out
mov
inc
sub
xchg
add
or
and
lret
mov
xchg
fs
push
fs
xor
out
inc
xor
loopne
add
inc
movl
jmp
dec
fs
push
mov
imul
xbegin
shll
mov
xchg
loop
mov
dec
call
fnsave
mov
pop
mov
dec
adc
dec
dec
aad
xchg
adc
pusha
es
and
push
mov
inc
pusha
mov
faddl
es
pop
pop
stos
mov
and
inc
or
adc
cmp
loop
aad
mov
and
xor
mov
inc
push
jmp
ja
push
roll
aad
xchg
rcrb
cmpsb
aad
dec
enter
inc
inc
pop
and
cmp
popa
rcl
das
push
test
daa
es
push
mov
pop
adc
out
shll
outsb
jae
lea
jle
xchg
orb
cmp
adc
add
into
je
push
loop
call
movsb
add
popa
xchg
jmp
incl
jl
je
les
movb
hlt
movsb
xchg
lea
cmp
lock
rorl
aam
or
test
jo
mov
cmp
adcl
pusha
repz
inc
dec
addl
movsb
or
mov
jns
push
cmp
xor
nop
push
fcompl
sub
repz
sub
adc
push
pusha
arpl
shrb
xor
dec
adc
jne
out
es
or
sub
add
or
es
push
fs
fwait
add
repnz
push
cld
mov
nop
inc
and
fiadds
jmp
incl
mov
xchg
outsb
mov
inc
mov
xor
push
inc
call
setl
inc
mov
daa
insl
sub
push
call
add
fsubl
xor
test
or
outsb
or
jne
add
dec
jge
movb
outsl
pop
xor
add
add
cmp
inc
jmp
lock
dec
jmp
xor
push
addb
shr
dec
int3
inc
jmp
inc
inc
inc
pop
je
pop
adc
adc
add
or
cwtl
cmp
or
orl
mov
add
push
mov
xorb
sets
add
je
rcrl
pop
and
cmp
leave
or
push
mov
jbe
fcmovne
call
xor
inc
jmp
fidivs
add
adc
push
retw
cli
enter
mov
cwtl
cli
and
das
dec
enter
in
sbb
push
mov
add
loop
pusha
popa
push
mov
dec
adcl
inc
insl
push
mov
cld
sarl
test
xlat
push
adc
hlt
and
daa
add
fsubs
inc
pop
jb
mov
lret
fisubrs
sti
and
push
push
or
inc
jecxz
popa
inc
cmpsl
cwtl
pop
movsb
into
roll
dec
call
ja
jo
in
cmp
xor
push
test
stos
adc
push
add
ret
push
adc
jb
dec
lahf
gs
xlat
adc
fnstenv
xor
lret
sub
hlt
dec
es
test
adc
jbe
mov
out
cmp
pop
jne
jno
dec
mov
stos
dec
enter
inc
push
and
dec
sbb
and
je
sbb
out
rcrb
arpl
loopne
xlat
mov
and
pop
and
filds
cmc
add
and
or
xor
lea
xchg
in
popa
pop
dec
xchg
cmp
cmp
sbb
test
ret
pusha
dec
or
jge
mov
dec
jp
lock
pop
mov
dec
lock
push
adc
dec
cmp
lret
lret
xchg
xchg
inc
inc
pusha
stos
push
xchg
les
xor
gs
movl
sub
mov
cmp
inc
xchg
outsl
sbb
adc
pop
in
into
jp
imul
hlt
mov
cmp
nop
popf
push
sbb
xlat
cmc
fists
in
mov
xlat
sbb
rol
push
push
sbb
rolb
sbb
sbb
outsb
mov
xor
xchg
jmp
inc
divl
int3
pop
xchg
push
xchg
push
xchg
test
jmp
insb
fwait
fs
jmp
push
mov
jmp
repz
xchg
jnp
xor
loop
mov
mov
je
or
or
loopne
mov
or
mull
push
mov
fldl
jns
xor
and
jns
jae
aaa
shrl
std
xchg
mov
jmp
inc
jns
mov
fstpl
jns
xchg
cli
sahf
fs
repnz
ror
xchg
pshufw
push
inc
jmp
inc
outsb
pop
aad
sarb
js
jmp
sti
and
push
je
jmp
pop
xchg
mov
mov
sbb
inc
add
jmp
add
mov
pop
movsb
or
xchg
or
jmp
push
dec
lods
sub
mov
mov
bound
jmp
cs
pop
ss
xchg
jmp
mov
or
scas
loopne
into
cwtd
xor
jnp
sbb
adc
sbb
jmp
pusha
movsb
xchg
nop
sbb
or
sbb
sbb
sbb
sbb
jmp
nop
adc
jo
dec
pop
ss
jmp
push
sbb
arpl
push
shll
jmp
lret
xchg
cmp
jb
loopne
and
push
cli
mov
add
mov
dec
cmpps
jbe
je
pop
ss
pop
ss
enter
sub
add
and
sub
ss
ds
hlt
call
leave
pop
out
mov
call
dec
call
or
fldl
inc
sbb
adc
in
xchg
mov
in
pusha
push
iret
les
cmpsl
pop
loopne
inc
lea
je
push
mov
and
mov
jmp
adc
mov
mov
push
sbb
adcb
nop
or
dec
call
dec
adc
inc
cs
add
cld
jo
dec
daa
mov
push
call
add
sbb
stos
scas
or
or
jo
add
sub
testl
loope
mov
sub
es
xor
bound
fs
jns
adc
push
and
sub
mov
into
xchg
sub
push
std
fstl
mov
pushf
es
movsl
mov
and
adc
std
dec
xchg
xchg
shr
lods
dec
movsb
xchg
mov
addr16
mov
jl
ss
dec
imulb
pop
sbb
mov
xor
repnz
push
mov
and
movsb
outsl
pop
push
mov
movl
iret
dec
pop
and
addr16
mov
loopne
add
aam
mov
insb
jmp
sub
fimull
ja
mov
aam
pop
lret
shr
push
mov
xlat
test
push
les
hlt
scas
iret
xchg
and
lds
mov
inc
sub
mov
inc
data16
lds
pop
enter
lds
lds
test
cmp
and
lds
mov
adcb
push
lds
mov
pusha
aad
fmull
and
or
mov
xor
mov
add
add
rcll
mov
popf
jp
movsb
int
adc
mov
call
nop
jmp
ret
ljmp
mov
pop
xor
and
and
scas
and
add
int
sub
ss
nop
bound
mov
les
fs
data16
mov
adc
mov
std
xor
ds
lds
and
lds
lds
and
hlt
push
and
and
push
lds
in
jp
les
je
cs
lds
or
xor
mov
movsb
xor
inc
lds
lds
lds
mov
lds
push
push
inc
jmp
adc
or
or
popl
bound
push
inc
sub
lds
push
and
or
push
or
mov
inc
adc
xor
lds
mov
xor
mov
inc
and
adc
and
lds
lds
vshufps
adc
jmp
mov
sbb
lahf
push
mov
cmpsl
or
xchg
sbb
mov
fldl
adc
sbb
addr16
or
call
sub
xchg
mov
out
fmull
imul
mov
aam
cmp
or
test
lods
pop
test
outsb
bound
sbb
out
mov
cmp
iret
lds
adc
or
ficomps
and
mov
mov
in
popl
lds
pusha
lds
mov
inc
sbb
lock
adc
daa
dec
lret
add
sbbl
popa
call
and
pop
scas
insb
ret
or
xchg
or
push
sbb
pop
fildl
xor
scas
test
sub
sbbb
pop
pop
or
pop
mov
mov
or
or
js
pop
and
cmp
pop
cmp
arpl
xchg
pop
jge
inc
push
nop
cmp
ret
nop
adc
pop
mov
pop
cwtl
add
xor
sub
xor
gs
call
aad
hlt
lods
pop
loope
inc
negb
jge
xchg
add
fiaddl
pop
adc
ret
xor
and
and
pop
jae
add
or
mov
or
push
fwait
addb
mull
call
push
inc
jnp
jns
pop
sbbl
dec
jae
lahf
sbb
inc
cmpsl
or
xchg
inc
inc
jnp
adc
addb
sbb
in
adc
jnp
mov
sbb
dec
enter
xchg
jnp
nop
nop
lds
call
push
jnp
nop
push
fwait
jle
jnp
nop
dec
adc
fs
push
push
adc
cmp
add
mov
inc
mov
or
adc
add
jp
fstpt
hlt
mov
mov
andl
or
push
cwtl
and
or
jb
add
imul
cmp
lret
push
push
sarl
sbbb
lods
jle
push
rcll
loopne
nop
mov
mov
sahf
adc
xor
enter
nop
add
inc
dec
inc
rsqrtps
cmpsb
mov
sbb
mov
sbb
cmp
xor
cmp
push
xor
jl
aad
fs
xchg
cmp
xchg
push
mov
pop
and
push
jecxz
dec
test
jecxz
and
xchg
testl
adc
jecxz
mov
pop
mov
imul
pop
out
cmp
in
mov
les
and
xchg
push
dec
sbb
enter
lock
and
or
sarb
nop
test
mov
adc
mov
xor
daa
mov
push
dec
mov
test
pusha
cmp
dec
call
and
mov
adc
and
sti
adc
test
add
add
push
or
out
and
call
pop
in
outsl
nop
test
adc
push
add
or
push
mov
test
adc
out
and
gs
aad
je
and
sbb
lds
mov
mov
stos
sub
and
add
mov
mov
xor
pop
ss
out
call
push
or
inc
stc
imul
call
adc
das
stos
out
scas
pusha
shlb
call
lret
xchg
das
jg
and
adc
call
mov
call
lock
call
adc
pop
cmp
fdivrs
int
inc
call
mov
lret
pop
shll
call
repnz
call
fs
lret
xchg
das
pop
insb
call
je
gs
repz
call
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
pushf
and
xchg
adc
aam
lahf
and
insb
and
mov
xor
sahf
inc
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
add
ljmp
out
shrb
or
or
or
pop
xchg
mov
jae
mov
and
mov
aam
jae
push
nop
adc
mov
adc
cmp
cmp
leave
lret
mov
fsubrl
stc
pop
mov
jne
mov
pop
clc
lea
cmc
xchg
loop
test
cmp
shlb
in
outsb
test
mov
add
inc
stc
add
nop
push
xor
loopne
int
push
xorb
fmul
lods
subb
or
mov
push
dec
dec
cli
or
push
mov
adc
popa
sbb
dec
jbe
add
rcrb
mov
inc
mov
pop
xor
jae
sbb
rcrl
xchg
das
inc
mov
movsb
mov
shlb
call
test
out
loop
adc
adc
adc
mov
dec
test
sti
sbb
xor
mov
xchg
and
test
push
push
mov
nop
inc
mov
pop
and
lcall
sbb
or
pusha
xor
rcrl
es
ret
stc
mov
inc
adc
mov
and
sub
push
pop
push
or
sbb
jno
cwtl
pusha
xor
nop
sbb
lcall
adc
and
lcall
xor
or
adc
repz
jmp
and
add
movsb
push
orl
or
cwtl
pusha
jmp
imul
inc
and
test
xor
push
iret
shlb
lahf
jne
movsl
inc
xor
lds
lahf
and
outsb
rorl
sbb
sbb
inc
sbb
in
inc
mov
mov
das
pop
lahf
push
ja
roll
xor
mov
stos
out
push
push
in
xchg
cmp
jmp
sub
inc
lahf
daa
sub
cmp
pushf
movsb
je
cmp
xchg
dec
dec
inc
sbb
xchg
or
add
pushf
xchg
lods
pushf
in
dec
push
xchg
fwait
and
sub
mov
daa
sub
lds
xchg
jo
push
call
dec
dec
xchg
mov
sub
dec
ffreep
xchg
inc
hlt
sub
xorb
push
pushf
movsb
xchg
or
cmpsl
xor
aas
inc
cmp
aaa
pushf
xchg
cmp
popf
movsb
hlt
call
ja
sub
xor
xchg
adc
dec
xchg
add
push
cmpsl
xchg
xchg
xchg
call
leave
cmpb
jp
shlb
push
xchg
je
rcrb
push
push
adc
cmp
xchg
cwtl
addl
shlb
mov
ret
dec
dec
xchg
and
in
ja
shlb
and
test
sbb
fwait
shlb
movsb
xor
int3
pop
lcall
or
test
stos
rorl
movsl
jnp
pop
or
adc
sti
call
pushf
cmpb
out
mov
jnp
jmp
adc
xchg
and
mov
jnp
and
inc
jnp
mov
lods
xor
inc
movsl
jnp
js
jmp
adc
jnp
subb
gs
lods
inc
scas
cwtl
xchg
shll
adc
xchg
inc
test
nop
xchg
inc
dec
mov
ja
and
out
dec
sahf
adc
enter
pop
insl
xor
cwtl
jmp
adc
xor
andb
add
add
mov
and
jmp
pop
pusha
lcall
push
push
adc
shl
imul
mov
mov
or
inc
inc
jp
imul
test
adc
xchg
or
imul
or
adc
jge
or
gs
mov
popl
in
les
and
pop
add
jnp
dec
aam
call
lea
dec
xchg
stos
xor
sarb
and
jg
sub
mov
mov
sbb
into
inc
bound
roll
ja
loope
pop
ror
ja
cmpsb
mov
sbb
sub
mov
popa
pop
sub
inc
sbb
push
pop
inc
cmp
sbb
add
pop
nop
cmp
ja
pusha
inc
imul
jmp
ja
or
add
sub
mov
jbe
fs
xchg
mov
sbb
add
je
push
add
or
jmp
arpl
and
ja
push
daa
add
ds
sbb
mov
mov
mov
rcr
inc
mov
sbb
roll
inc
daa
rorl
add
or
adc
call
and
mov
sbb
pushf
js
mov
je
add
call
push
icebp
sbb
inc
pop
and
or
das
inc
jp
andb
add
adc
jle
cs
daa
loopne
sarb
sbb
mov
and
je
daa
fwait
inc
jp
add
adc
mov
daa
lea
daa
inc
nop
push
inc
pop
daa
dec
xor
orb
das
xor
daa
or
xchg
mov
pop
daa
adc
xchg
ret
add
dec
jno
daa
and
push
push
pop
pop
scas
push
add
pop
rolb
fs
pop
cmp
pop
sahf
cmp
loop
add
mov
cmpl
dec
jmp
xchg
adc
rclb
push
movsb
and
nop
mov
pop
dec
add
nop
pop
dec
mov
add
pop
pop
shll
pop
inc
pusha
pop
sbb
addl
pop
pop
pop
mov
add
pop
dec
les
cli
push
pop
or
into
and
xchg
mov
inc
adc
mov
fnstcw
mov
push
out
cmp
add
inc
jmp
mov
sbb
sahf
jg
push
mov
or
sub
push
xor
test
cli
and
xor
xor
pop
mov
and
xor
leave
shlb
outsb
imul
mov
and
or
lods
mov
xor
mov
mov
xor
fwait
and
out
dec
xor
leave
nop
lret
xor
adc
leave
nop
roll
xor
lahf
and
mov
xchg
mov
lahf
pop
xor
shl
fdivl
push
add
dec
out
addr16
adc
stos
inc
stos
inc
aam
sbbb
adc
add
xchg
jmp
hlt
sbb
mov
sbb
fwait
nop
mov
mov
sub
jns
iret
sbb
arpl
push
lds
mov
or
pop
je
push
call
pop
pop
and
mov
push
fwait
out
pop
sub
sahf
pop
fstl
fwait
dec
dec
ja
or
pop
fwait
inc
loope
xchg
js
push
out
movsl
hlt
mov
xchg
sbb
xchg
adc
sub
mov
push
imul
add
mov
sbb
push
shlb
inc
ss
sub
jae
imul
roll
jb
test
stos
imul
movsb
arpl
fwait
repz
or
push
adc
divb
repnz
xlat
fwait
push
jnp
cltd
imul
add
dec
out
pop
bound
jb
adc
xchg
fwait
mov
enter
adc
jb
inc
dec
jae
insl
adc
or
xor
mov
pop
cmp
lock
adc
inc
call
sti
mov
in
xchg
adc
adc
popf
pusha
xlat
ret
inc
inc
push
sub
icebp
in
push
add
mov
nop
inc
mov
nop
inc
mov
xchg
sbb
inc
movsb
repz
mov
lret
inc
mov
push
inc
add
repz
add
and
adc
in
or
mov
int
mov
mov
dec
mov
cmp
cltd
inc
mov
add
inc
cmpsl
add
adc
inc
cmp
adcl
mov
mov
nop
inc
jmp
dec
inc
jl
mov
daa
jmp
es
or
or
or
mov
adc
fwait
dec
sub
out
and
add
iret
repz
or
sbb
ret
cmp
repz
jbe
push
imul
or
sbb
sahf
out
push
mov
pushf
pop
push
lods
idivl
repz
mov
inc
jge
repz
push
nop
movsb
push
out
sahf
cmpsl
push
xchg
jl
push
inc
jns
negl
push
push
sahf
out
sbb
repnz
iret
repz
fmulp
mov
ja
jnp
ret
into
sbb
incb
add
sarl
es
loop
sbb
iret
aam
mov
out
ds
sbb
pushf
scas
xor
out
lret
or
and
cmp
repz
pop
data16
repz
test
jnp
repz
in
decb
ss
or
iret
inc
push
shr
xor
mov
push
sahf
mov
daa
rcr
negl
clc
adc
sub
cmp
aaa
iret
repz
push
push
cmp
adc
repz
push
jbe
int
ljmp
jle
cwtl
cmpsl
insl
xorb
das
out
iret
dec
test
dec
jecxz
adc
xchg
adc
idivb
jbe
push
scas
test
xchg
mov
insb
iret
cmpsb
loope
adc
mov
pop
push
jo
sbb
aam
jne
pop
mov
dec
sub
sub
and
or
dec
push
dec
ja
jb
lret
mov
les
pusha
outsl
push
push
ja
xchg
sub
xchg
push
dec
cmp
es
mov
push
js
pop
leave
aad
xor
xor
insb
xchg
or
mov
ss
xor
add
fisubs
add
pop
push
mov
add
ret
push
xor
sahf
ja
jnp
push
dec
cmp
xchg
or
rorb
das
fwait
and
jns
imul
mov
jae
dec
adc
iret
inc
pop
mov
pop
imul
add
and
cmp
or
and
sbb
xchg
add
loop
add
sbb
or
cs
outsl
out
sub
data16
es
push
pop
clc
fsubp
cmp
mov
jg
mov
sbb
and
ret
je
push
sbb
das
test
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
and
xor
or
pop
inc
rolb
dec
jns
cmp
mov
dec
inc
jae
push
dec
imul
add
mov
test
jb
outsb
je
sbb
jle
pop
inc
js
add
mov
jnp
inc
xor
sub
sub
sub
filds
sub
xor
xor
jge
xor
sti
mov
inc
xor
xor
ss
xor
cmp
fdivl
cmp
inc
xchg
xor
clc
inc
inc
xor
mov
or
testl
icebp
and
cwtl
jne
test
data16
or
cs
sbb
cmp
push
xor
fdivrp
aaa
fmuls
inc
inc
push
and
inc
aaa
adc
xor
inc
inc
and
nopl
roll
jl
push
arpl
xor
jle
scas
sahf
inc
push
inc
push
dec
and
cmp
ss
add
fistpl
and
dec
dec
pushf
dec
sbb
dec
add
dec
mov
orl
push
push
fadds
imul
pop
adc
jae
inc
push
outsl
jle
out
inc
out
adc
push
sub
out
fnstcw
push
mov
fs
mov
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
or
dec
das
dec
xchg
add
jnp
insb
adc
je
test
and
jo
outsl
push
outsl
ret
xchg
xor
imul
movsb
inc
je
push
arpl
jno
mov
imul
cmp
add
mov
cmpsl
enter
xchg
add
lds
std
pusha
jne
ss
mov
subb
out
mov
pop
inc
arpl
loop
roll
data16
ret
adc
mov
mov
dec
loopne
mov
xor
or
pop
cmovb
push
add
dec
add
enter
add
js
xor
xchg
dec
mov
jp
or
stos
inc
out
xchg
xchg
jmp
push
and
dec
inc
mov
inc
jnp
inc
push
imul
imul
ret
mov
js
daa
scas
pop
cmp
dec
fs
imul
push
mov
popa
fs
jo
push
fiaddl
rolb
push
xchg
ret
dec
movsb
jmp
and
fwait
outsl
push
pop
arpl
add
jmp
inc
cs
push
push
push
add
ja
dec
mov
shlb
add
outsb
outsl
push
popa
imul
inc
outsb
popa
ds
mov
push
push
sbb
fsubl
mov
mov
pop
add
and
pop
add
inc
inc
daa
inc
xchg
sub
popa
fsubl
addl
lahf
mov
mov
add
outsl
cmp
ja
jbe
adc
popa
fcomps
les
mov
cmpsl
push
add
dec
out
and
mov
mov
mov
sahf
addr16
add
orb
int
jns
or
add
mov
cmp
adc
iret
repz
xchg
adc
push
sbb
sbb
int
jns
sbb
call
idivl
push
das
push
pop
nop
cld
xchg
out
scas
and
cli
js
mov
cld
stc
jp
push
cld
sbb
jns
fdivr
mov
out
mov
sbb
dec
or
xor
push
dec
lahf
mov
and
sbb
push
push
dec
xchg
dec
sbb
adc
cmp
dec
sbb
cmp
es
test
iret
stc
int3
sub
adc
push
cld
or
jns
cmpsl
lock
int3
rol
sahf
mov
ds
xor
mov
mov
repz
cmpb
cmp
pusha
pop
mov
sahf
push
push
dec
dec
inc
inc
repz
jns
push
xor
sub
repz
sub
sbb
adc
iret
repz
or
add
jns
cmpsl
stc
cld
or
hlt
call
out
enter
int
jns
jo
xor
lock
int3
cmp
repz
mov
imul
or
push
fsub
jns
out
les
sahf
push
sub
aam
mov
cmp
inc
sbb
add
pushf
out
outsl
call
cwtl
jl
jno
inc
iret
inc
mov
xor
sti
pop
addps
scas
and
mov
adc
mov
add
sbb
dec
dec
adc
sub
adc
add
adc
inc
nop
dec
and
dec
cmp
xchg
mov
bound
sti
inc
rcrl
adcb
fisttps
push
jecxz
or
pop
subl
mov
mov
mov
out
pop
dec
push
jno
lahf
or
inc
adc
dec
arpl
movsb
mov
ja
xchg
add
cs
push
les
jecxz
and
pop
adc
xorw
and
and
and
mov
jg
js
shrb
mov
pushf
andb
rolb
mov
clc
ret
jns
mov
and
add
lock
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
push
or
mov
add
and
pop
jne
pop
sub
push
sbb
lods
jmp
jne
imul
xchg
pop
dec
adc
xchg
ds
imul
bound
pop
jb
pop
push
or
ljmp
bound
and
inc
push
push
sub
insb
das
inc
push
repnz
add
cmpsl
ja
lahf
add
rorb
cmp
jns
fsub
ds
inc
sbb
addr16
mov
mov
ret
test
xchg
mov
sub
aas
mov
das
fcoms
insb
jnp
test
mov
ss
nop
mov
push
sete
int3
push
jo
mov
jbe
mov
int3
jl
adc
fdivs
jecxz
rcr
cmp
cltd
ss
lcall
pushf
setl
lret
sbb
shl
les
mov
or
push
pop
insl
in
popf
jl
in
push
mov
lahf
jg
in
ret
call
bound
lods
xor
mov
and
and
sub
vmptrst
enter
inc
dec
mov
xchg
adc
and
iret
fcmovnbe
fcomps
jbe
in
fldt
jp
insb
adc
mov
imul
imul
adc
cltd
out
sahf
loopne
daa
lock
enter
imul
mov
jo
sbb
sub
nop
push
add
dec
imul
inc
sbb
sahf
or
imul
or
lahf
mov
jb
push
lcall
scas
pop
push
and
gs
dec
dec
add
push
adc
lods
push
push
add
push
outsl
ja
xor
mov
add
andl
push
add
push
jecxz,pn
mov
daa
movsb
and
and
add
rolb
cwtl
inc
repnz
outsb
inc
jl
pop
out
lods
push
fucomip
adc
popa
mov
and
daa
cmpl
repz
push
shll
mulb
push
in
inc
add
insl
jo
dec
les
js
pop
outsb
push
add
mov
sbb
out
insl
mov
jae
sbb
in
jne
jae
push
adc
jmp
push
push
pusha
push
cwtl
and
jb
inc
gs
addr16
out
adc
lock
cmp
push
inc
sbb
addb
add
sub
shll
add
ret
lcall
push
mov
inc
push
mov
pop
inc
dec
lods
loope
push
mov
imulb
cmp
push
jo
jb
jns
sarb
and
xor
testb
push
lods
cmpsl
xor
push
sbb
lock
imulb
push
xchg
divb
ja
inc
popa
das
mov
or
inc
and
pusha
nop
shll
inc
and
jbe
out
push
inc
imul
jge
xchg
popa
mov
testl
mov
or
dec
inc
add
add
int
jnp
push
add
subb
mov
sub
outsb
es
pop
outsb
pop
add
push
scas
xchg
leave
push
dec
scas
xchg
adc
sub
pop
test
xor
sub
sbb
xor
sbb
xor
pop
and
jge
cmp
push
adc
imul
and
push
xchg
loopne
ret
adc
sbb
xor
shrl
ret
inc
dec
test
pop
add
sarl
mov
outsl
mov
out
scas
inc
add
jo
stos
xchg
stc
add
pusha
and
xor
add
push
scas
mov
pop
mov
push
xor
dec
dec
pop
add
inc
inc
inc
jns
xchg
fs
mov
loope
lds
fistl
gs
lret
inc
push
outsl
arpl
pop
pushf
dec
xchg
push
fsubrs
roll
push
frstor
dec
xlat
or
cmp
mov
xchg
and
or
push
jbe
xor
rolb
insl
imul
jb
mov
sbb
or
adc
push
pop
cmp
mov
inc
jmp
enter
arpl
push
aaa
outsb
dec
arpl
inc
dec
pop
or
aas
inc
cmc
ret
or
pop
or
out
xor
sub
mov
sub
add
inc
jno
mov
stos
iret
add
sar
imul
dec
add
add
pop
jo
outsl
inc
pop
push
movsb
adc
mov
fs
sub
inc
addb
ds
ficompl
loopne
clc
dec
jbe
data16
pusha
push
jo
jno
cmp
mov
mov
add
scas
cmp
pop
roll
in
ret
xchg
add
push
es
or
sbb
fadds
add
sbb
arpl
fcmove
pop
imul
push
in
inc
cmpsl
add
dec
pop
notb
push
mov
imul
push
push
and
aas
mov
insb
cld
inc
jae
std
or
cmpsl
adc
add
je
popa
add
push
ja
add
xor
clc
cmp
and
ljmp
pop
imul
push
ret
cmp
insb
sbb
cltd
or
add
sub
inc
ss
pop
ret
xor
sbb
and
fbld
pop
ficoms
mov
push
popa
push
std
mov
xchg
and
xlat
push
and
inc
cwtl
aam
push
jecxz
stos
insl
loop
mov
push
loopne
jo
pop
in
aam
or
mov
push
mov
add
ficomps
insb
push
sbbb
push
jnp
ret
pusha
sbbb
ds
iret
icebp
pop
and
add
std
or
adc
jns
sub
and
mov
shll
pop
add
sbbl
cmpsl
data16
inc
cmp
inc
xor
sti
sub
insb
jns
pop
push
rclb
pusha
xchg
popa
jmp
mov
mov
mov
dec
shlb
ja
pop
inc
adc
xor
inc
inc
leave
mov
xchg
push
mov
enter
js
inc
iret
jmp
scas
sbb
lcall
clc
out
lock
out
call
out
sahf
out
mov
lods
test
iret
repz
cwtl
xchg
nop
repnz
repz
sahf
ja
push
pop
push
inc
cmp
out
sahf
xor
sbb
cld
in
or
sahf
out
out
call
ror
sarb
jns
test
mov
sahf
out
push
cmp
sub
out
sahf
and
adc
add
in
cmp
repz
in
in
int3
jnp
iret
repz
xchg
push
mov
fdivp
cmp
js
push
inc
sub
and
into
out
sbb
loopne
push
inc
test
and
and
pop
push
scas
andb
shrb
divl
mov
out
negb
jo
pmuludq
fsub
push
test
shl
scas
push
daa
add
adc
mov
aaa
xor
popf
and
imul
lret
or
rolb
inc
and
push
ss
sbb
push
dec
mov
fs
inc
dec
pop
mov
or
add
pop
xchg
pop
inc
enter
lods
pop
inc
mov
mov
xchg
mov
add
push
das
addb
mov
push
add
pop
add
in
cmp
pop
sbbb
adc
test
outsb
add
mov
in
dec
cmp
insl
xor
outsb
sub
jbe,pn
and
adc
push
ljmp
and
or
je
fadds
sbb
mov
sub
outsl
jb
imul
dec
ret
mov
stos
dec
xchg
imul
sub
mov
and
mov
insb
or
pop
pusha
inc
and
jbe
jb
jne
mov
push
and
mov
popa
insb
into
mov
dec
ret
cld
jns
sub
ss
or
and
jmp
mov
inc
add
inc
pop
pop
adc
mov
aam
add
xor
xor
lcall
xor
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jl
xchg
shll
inc
ss
ss
es
dec
aaa
push
aaa
jg
pushl
aaa
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sbb
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
decl
xor
xor
xor
xor
mov
xor
xor
cld
lcall
cld
xor
xor
out
xor
xor
xor
xor
xor
xor
lcall
sbb
xor
scas
xor
shlb
jecxz
call
jg
mov
jno
cltd
ss
ss
ss
aas
clc
call
aaa
sbb
jno
mov
aaa
loopne
add
or
lcall
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
push
adc
call
insb
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
mov
cmp
jo
test
mov
decl
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
lock
decl
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
pushl
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
clc
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
push
mov
xchg
aas
inc
aas
pop
aas
ja
pusha
pop
aas
adc
pop
push
or
cmp
pop
jg
pushl
arpl
push
xor
xor
xor
xor
xor
xor
xor
paddd
add
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
mov
aas
clc
out
in
xor
scas
clc
xor
cmp
dec
pop
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
pop
jl
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
push
pop
xchg
adc
sbb
cmp
xor
ljmp
cmp
ds
fidivrl
jmp
incl
xor
mov
ss
ss
xchg
cmp
aaa
cld
jmp
cmp
iret
cmp
mov
cmp
cmp
cmp
pop
cld
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
imul
mov
sarl
aas
in
out
out
jo
shll
xor
add
jmp
mov
paddd
xor
xor
loop
xor
xor
incl
push
xor
mov
xor
xor
scas
std
xor
cmpsb
sar
jmp
xorb
ss
add
or
aaa
and
mov
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
jg
jg
cmp
xchg
outsl
cmp
xor
pusha
cmp
mov
ljmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
ud0
sbb
cmp
cmp
cmp
mov
decl
or
cmp
cmp
cmp
cmp
cmp
repnz
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
jg
pop
cmp
mov
cltd
cmp
jp
jg
cwtl
ds
ds
decl
ds
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
aas
or
push
xor
insl
jg
push
stos
lcall
fidivl
out
mov
in
or
adc
and
sub
cmp
jb
lcall
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
scas
jno
xchg
xor
xor
xlat
aaa
loopne
xor
cmpsb
pushl
xor
xor
scas
scas
scas
pushl
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
mov
cmp
bound
scas
cmp
cmp
in
sbb
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
sbb
icebp
mov
jle
push
or
xor
cmp
bound
data16
ljmp
ljmp
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
lock
cmp
cmp
cmp
cmp
cmp
jle
mov
ljmp
and
sbb
ds
xor
xchg
aas
pop
cld
aad
push
mov
insl
xor
mov
icebp
out
clc
fidivs
xor
xor
jl
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
std
pushl
dec
or
cmp
pop
cmp
jge
mov
cmp
mov
inc
cmp
xchg
cmp
cmp
cmp
mov
and
adc
xor
cmp
fdivrs
push
aas
jne
mov
jmp
das
cmp
mov
fwait
xor
xor
subl
aas
xor
call
xor
xor
fsub
adc
es
loope
aas
cli
dec
ss
outsb
notb
ss
in
and
cmp
xchg
mov
xchg
cmp
mov
pop
push
dec
ljmp
ljmp
jo
jne
test
mov
ret
ljmp
lock
dec
cmp
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
cmp
pop
sarb
inc
cmp
cmp
mov
mov
and
push
cmpb
cmpsl
sub
ds
ds
ret
idivl
add
sbb
addr16
loope
mov
or
rol
pop
clc
mov
xor
pop
xor
xor
cmp
or
xor
xor
push
pushl
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
call
jg
mov
cmp
mov
cmp
loope
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
call
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
push
aas
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
es
adc
xor
adc
xor
pop
xchg
pushl
cmp
jne
jg
xchg
xor
xor
xor
jmp
mov
xor
ljmp
decl
xor
xor
sub
sub
nop
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
aaa
or
pop
dec
into
cmp
inc
xor
xor
adc
jl
mov
pushf
std
mov
pushl
movsb
xor
les
int3
mov
xor
xor
jg
add
int3
xor
cmp
sub
sub
xor
lcall
cmp
inc
cmp
dec
cmp
push
test
pop
loop
pop
xor
fiadds
or
jg
cmp
jl
cmpb
cmp
mov
lahf
push
mov
pop
test
fmulp
cmp
mov
cmp
cmp
jne
aad
mov
cmp
inc
lock
dec
cld
das
pop
jge
push
add
or
adc
sbb
and
incb
pop
clc
and
sub
sub
xor
cmp
inc
cmp
aas
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
ret
jo
je
jl
cmpb
push
mov
nop
jg
inc
adc
mov
aas
cld
filds
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rorb
cs
aas
fdivrs
loopne
clc
jbe
mov
or
xor
xchg
xor
xor
lcall
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
test
sub
cmp
aaa
sbb
xchg
mov
jb
inc
xor
sub
insb
dec
pusha
cmpsb
and
fimuls
xor
push
fwait
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
inc
decl
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
pop
std
call
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
lock
test
mov
nop
aaa
xchg
aaa
cwtl
into
mov
outsb
shlb
dec
mov
mov
mov
aaa
enter
pushl
int3
aaa
shlb
aam
fdivs
fcompl
in
cs
mov
xor
aaa
hlt
add
or
add
adc
adc
sbb
cmp
mov
mov
mov
pop
test
cmp
cmp
cmp
cmp
rcr
aas
sub
cmp
cmp
cmp
cmp
push
cmp
ljmp
cmp
mov
cmp
mov
mov
mov
cmp
inc
nop
and
incl
lret
popa
popa
and
sti
andnps
mov
jne
call
sahf
repnz
fbld
xchg
shufps
lock
std
std
mov
insl
es
icebp
sbbb
jmp
xchg
lahf
sub
ffreep
into
mov
movsl
test
lret
push
pop
or
xor
inc
add
pop
rcr
rolb
sub
push
sbb
pop
cmpsb
push
add
fisttps
pop
out
inc
fimuls
add
sub
mov
and
inc
filds
cmp
imul
sub
jo
outsb
jns
dec
push
and
dec
mov
sub
in
fistps
jnp
rolb
push
rcr
adc
lods
sarl
test
adc
and
shrl
inc
shll
and
push
sub
jbe
inc
out
mov
inc
push
or
or
je
inc
jmp
push
sbb
jnp
jmp
push
and
adc
add
test
push
dec
cwtl
lea
insb
fsubrl
push
pop
in
sbb
shlb
gs
sbb
dec
js
jne
push
mov
mov
jp
les
or
fistpl
add
les
mov
enter
out
loopne
adc
and
push
cmp
jo
add
xor
inc
xchg
mov
in
loope
test
leave
pushl
insb
cmp
iret
adc
jge
push
and
pop
andl
push
xchg
arpl
xchg
add
push
adc
stos
adc
ret
movsl
sbb
xlat
and
addl
mov
sbb
sbb
dec
rorl
sub
cmpsl
icebp
idiv
je
cmp
outsb
int3
and
es
dec
shl
jp
add
pushf
or
dec
mov
add
das
insb
outsb
and
cmp
std
or
jb
lea
call
sub
push
lea
insl
add
push
popf
pop
add
rcr
lahf
xchg
fildl
sbb
push
cmpsb
xchg
fs
adc
test
and
pop
decb
cmpl
push
push
mov
or
std
inc
ja
inc
lea
push
push
pop
jb
shrl
jl
insl
fsts
sbb
cmpsb
add
or
add
rolb
fcoml
mov
add
xor
xor
add
mov
sub
push
mov
mov
pop
inc
lahf
fidivs
int3
cmp
andb
call
jmp
cmp
inc
sbb
nop
js
mov
nop
push
roll
in
dec
or
mov
mov
cltd
xor
mov
aas
lcall
push
xchg
mov
cmpsb
cld
inc
jge
mov
and
push
inc
jmp
and
or
push
fucomp
mov
sti
mov
inc
add
or
mov
and
lock
movsl
imul
loop
and
clc
add
adc
movsb
out
mov
ret
pop
add
and
fmuls
push
adc
test
jl
test
push
jnp
outsl
insb
inc
and
cld
sub
sar
or
jge
xchg
cmp
rorb
xchg
xor
aaa
daa
add
push
push
mov
ja
sahf
sti
lods
pop
mov
push
aad
push
xchg
and
or
jmp
orb
out
fildl
popa
and
pop
or
and
clc
inc
sbb
add
cmp
js
lock
hlt
das
add
pop
add
xor
leave
inc
or
leave
clc
mov
or
rorb
mov
pop
add
leave
into
mov
popf
jnp
push
inc
test
sbb
and
lock
sbb
loope
pop
filds
std
or
jge
out
lret
fucomp
inc
sub
cmp
adc
mov
push
dec
push
rorb
push
mov
push
jbe
clc
push
sbb
inc
mov
xchg
mov
push
push
xor
imul
addb
rorl
dec
xor
loopne
inc
rcll
adc
xor
pop
pop
hlt
sub
pop
movsl
sub
sbb
test
sarb
push
xchg
jo
test
jl
xchg
cmpsl
or
push
adc
dec
push
cmpsl
fisttpl
aam
call
xor
loop
or
js
aaa
push
mov
cmpsl
or
mov
or
mov
pop
inc
adc
ficoms
adc
inc
or
in
cmp
shlb
clc
idiv
stc
inc
pop
rorb
jbe
enter
or
inc
cmp
adc
pusha
mov
adc
pop
mov
mov
or
popa
add
jno
sti
loopne
into
cmpsb
xchg
mov
lods
xlat
call
imul
add
mov
mov
push
outsb
filds
add
loope
adc
push
ja
std
mov
mov
and
add
mov
rorl
pop
inc
add
pop
das
dec
add
pop
push
in
divl
add
adc
sub
add
dec
dec
or
xchg
adc
inc
iret
imul
lods
es
ret
pop
adc
pop
shr
or
or
bound
add
and
lods
and
mov
dec
and
pop
int3
and
jl
cmp
aas
add
cmp
pop
adc
xor
pop
ja
andl
cmp
dec
push
add
cmp
or
test
push
xchg
movsb
push
inc
xor
sarl
inc
mov
test
enter
mov
or
mov
pop
aaa
adc
ja
sub
push
inc
add
repnz
adc
xchg
ja,pn
or
pop
ja
cvtps2pd
pmaxsw
or
push
arpl
shrb
shrl
mov
sbb
lock
stos
gs
sub
dec
ja
xor
popf
in
jne,pt
inc
xchg
ja
dec
or
pushf
fldl
ja
dec
push
inc
xchg
gs
test
xchg
mov
fstl
push
push
sbb
cmpsb
push
rcrb
push
add
or
lds
push
imul
nop
cmc
movsb
pop
ja
enter
push
xchg
ja
sbb
push
scas
xchg
xor
clc
loop
lods
ja
sub
arpl
sub
add
scas
outsb
mov
test
adc
sub
pop
xchg
cmc
ret
das
mov
add
sbb
inc
dec
pop
xor
aas
add
jno
inc
sbb
call
xchg
outsl
and
call
mov
xchg
or
jo
or
bound
dec
mov
divb
call
mov
jl
mov
fcoml
dec
mov
or
lret
xchg
in
inc
xchg
dec
or
nop
orb
cmp
jo
push
negl
pop
call
and
pop
sahf
pop
dec
xchg
in
pop
adc
lods
repz
inc
pop
jmp
pop
test
out
mov
xchg
subb
add
faddl
mov
test
adc
fiaddl
test
push
add
pop
int
in
and
and
adc
inc
add
sbb
inc
cmp
sub
mov
or
test
push
sbb
das
insl
or
popl
lea
lods
orl
test
sbb
mov
push
inc
lahf
sbb
adc
push
mov
mov
mov
or
sbb
mov
sub
xchg
pop
push
or
add
popf
xchg
sbb
ja
call
add
inc
add
and
dec
inc
mov
mov
cmp
xor
xor
add
jp
add
jns
mov
andb
rcll
fs
addl
add
mov
add
pop
leave
inc
ja
xchg
dec
ret
adc
insb
into
test
movsl
pop
jo
mov
mov
mov
mov
insb
lret
adc
xchg
lea
xchg
les
pop
xchg
pop
popf
mov
lret
and
cmp
nop
nop
push
adc
es
adc
repz
hlt
xchg
or
xchg
dec
dec
pop
sahf
out
fildl
pop
push
dec
pusha
cltd
out
inc
cmp
jl
add
int3
repz
cwtl
push
movsb
mov
xchg
add
and
outsl
ja
rcrl
inc
pop
nop
xor
push
mov
jl
add
mov
cs
xchg
loopne
mov
push
fadds
loopne
sub
iret
repz
add
push
or
loopne
xchg
int3
repz
xor
inc
pop
inc
movsb
adcb
add
cmp
fisubl
inc
dec
mov
stc
cmp
inc
xor
addb
and
and
sbb
push
enter
xchg
sbb
mov
xchg
and
jns
push
test
ret
aaa
inc
push
call
mov
mov
in
pop
pusha
hlt
push
hlt
test
scas
mov
stos
pop
push
cmpsl
ret
inc
rolb
mov
and
lcall
sub
jb
inc
sub
sub
int
sub
sub
nop
or
sub
cmpsb
imul
imul
sub
sub
adc
add
sub
sub
sub
sub
xor
mov
dec
shll
sub
sub
sub
add
imul
pop
filds
mov
or
mov
add
adc
add
aaa
inc
fstl
and
sbb
jns
fadds
enter
roll
sub
fldl
inc
inc
fistl
dec
lahf
mov
stc
push
scas
or
xor
fimull
push
lret
ret
push
jle
dec
insb
push
sahf
sbb
addr16
adc
inc
add
push
jmp
and
dec
lock
sub
or
jmp
adc
inc
sub
and
bound
push
rolb
mov
or
mov
stos
inc
cmp
add
sarb
push
inc
iret
push
pop
shl
mov
in
mov
fwait
inc
nop
adc
mov
mov
mov
cmpb
inc
mov
adc
aas
mov
inc
sahf
xchg
cmpsb
sub
test
xor
mov
or
ja
sub
cmp
cmp
add
inc
jmp
pushf
pop
nop
inc
out
add
sub
call
mov
mov
jae
out
shlb
mov
nop
jp
repnz
test
xchg
pshufw
je
cmpsl
cld
add
daa
pusha
and
pop
jge
loope
push
stos
mov
mov
mov
mov
lahf
dec
jns
pop
and
adc
add
js
daa
adc
lret
rol
inc
cmp
adc
adc
mov
cwtl
es
push
xor
or
sbb
pop
jbe
jno
jns
cmpb
dec
and
jb
sub
out
xchg
in
sbb
daa
and
fwait
es
pusha
sub
sbb
bound
inc
push
fimull
sbb
or
and
jl
mov
sahf
ljmp
icebp
sbb
sbb
jns
scas
adc
push
aam
mov
shlb
fbstp
xchg
mov
inc
mov
xchg
xchg
jmp
outsb
cmpsl
sub
push
shlb
inc
or
stos
xchg
xchg
cmp
adc
and
sbb
sub
dec
gs
adc
and
adc
mov
add
jns
lds
iret
mov
lods
lret
pop
mov
inc
lods
mov
xchg
or
aam
jne
mov
sbb
xchg
xchg
mov
adc
mov
sub
push
adc
ja
xchg
inc
xchg
fiadds
cwtl
dec
mov
jp
xchg
sarb
lret
in
mov
mov
roll
fnsave
test
int
mov
inc
mov
test
lea
push
xchg
mov
adc
test
push
xchg
xchg
mov
shlb
sub
push
cmpsl
cmp
push
nop
sub
inc
push
or
adcl
jnp
popf
testb
ret
or
inc
cmp
fwait
mov
mov
mov
mov
and
movsb
jnp
movsb
mov
sbb
aaa
jbe
mov
push
rorb
aaa
inc
jb
mov
xor
sahf
icebp
adc
jmp
and
pop
cld
push
in
daa
mov
into
or
mov
inc
mov
or
mov
inc
mov
add
mov
es
dec
fidivl
or
jmp
or
and
xor
mov
xor
cwtl
mov
pop
push
or
xchg
xchg
aam
inc
mov
mov
jmp
sub
not
mov
lea
mov
js
lcall
hlt
mov
inc
lcall
xor
inc
inc
inc
push
cmp
inc
inc
inc
inc
inc
cmp
je
inc
inc
sbb
or
stc
add
mov
or
inc
cmp
cmp
mov
mov
fwait
cwtl
and
adc
movsb
mov
and
cmp
enter
mov
shr
data16
scas
call
xor
pop
call
and
xor
jne
dec
or
sbb
bt
jo
lret
enter
rcrb
aam
scas
and
popf
sub
sbb
push
aad
jmp
mov
mov
sbb
cmp
mov
mov
adc
addr16
sub
add
add
inc
pop
fistpl
push
pop
xor
inc
cli
call
mov
mov
xor
aad
xchg
stos
inc
lahf
enter
dec
enter
dec
mov
aad
sti
pop
enter
xor
xchg
lahf
sbb
mov
inc
aaa
pusha
xchg
fisubrs
fiadds
mov
mov
frstor
mov
call
sub
pop
xchg
inc
mov
jmp
pusha
mov
cmp
fisttpll
aaa
mov
popa
add
sahf
lods
lret
call
jne
mov
push
dec
addr16
inc
loope
pop
enter
loope
pop
les
lock
mov
repz
rorb
sbb
add
dec
enter
lret
inc
inc
add
cmp
fmull
mov
push
test
jns
enter
js
pop
inc
pop
mov
add
enter
mov
nop
jp
pop
hlt
push
add
repnz
loope
and
call
inc
or
loopne
in
scas
cltd
leave
sti
loopne
out
mov
xor
xchg
or
add
xchg
push
dec
dec
xchg
mov
adc
xchg
xchg
pop
mov
inc
xchg
and
pop
push
adc
inc
stc
loopne
pop
xor
call
lea
mov
ljmp
bound
mov
push
mov
sub
dec
xor
js
mov
aas
jl
outsb
jno
pop
vmovlpd
push
stc
xor
mov
lods
mov
in
dec
push
call
xchg
inc
stc
xchg
call
mov
fldl
inc
sub
xchg
push
repnz
clc
adc
frstor
ret
pusha
sbbl
ljmp
jmp
daa
fnstsw
icebp
gs
pop
xchg
fcoml
mov
lds
rol
jmp
mov
rep
jmp
or
aaa
cmp
int
jne
repnz
ds
je
add
fildl
enter
add
ljmp
or
addr16
adc
sbb
nop
add
aas
iret
aam
mov
push
inc
adc
call
mov
repz
insb
xor
or
push
push
test
add
sbb
sub
cmc
jle
loop
adc
ret
call
push
test
loop
mov
rclb
iret
fdiv
je
or
lret
lret
jge
pop
xor
push
dec
idivl
add
js
jl
sbbb
popf
test
jl
inc
rorb
and
aam
ds
xor
and
rcrl
in
scas
lock
mov
or
rcr
mov
push
adc
fsub
jge
loop
subb
pop
or
pop
add
cmp
shll
mov
shrl
or
sbb
cli
jo
xchg
pop
lret
shll
sbb
shrl
mov
shll
mov
sbb
or
sbb
jne
add
flds
adc
inc
inc
lock
xchg
mov
xor
push
or
pop
adc
push
test
inc
pop
sub
sub
daa
pop
cmp
dec
in
xchg
loop
xor
pop
adc
pop
pop
mov
push
fcoms
jo
mov
adc
ret
and
xchg
into
pop
mov
cwtl
sbb
lret
or
mov
outsl
hlt
xchg
mov
in
ret
or
mov
xchg
adcb
rolb
push
xchg
adc
jo
xor
adc
xor
sub
or
inc
adc
mov
into
adc
add
in
aam
fldcw
aam
daa
xchg
roll
fnstcw
push
jb
pop
rcrl
cmp
fcomp
rolb
mov
mov
or
stos
mov
xlat
adc
pop
push
push
popf
pusha
add
inc
inc
add
pop
add
add
popf
lock
xor
add
cmpsl
pop
enter
inc
mov
dec
adc
das
or
adc
lcall
xchg
fcompl
jns
outsb
mov
dec
dec
adc
add
leave
int3
insb
jecxz
cmp
imul
movsl
adc
dec
xchg
xchg
outsb
stos
adc
sub
imul
or
adc
mov
adc
adc
test
call
inc
fstl
adc
adc
sub
lock
mov
bound
adcb
sub
jne
leave
push
aad
dec
sbb
ljmp
rcll
fcoml
push
lret
in
sbbb
pop
adc
cmpsb
and
ss
push
cmpsb
mov
cmp
xor
call
mov
fisubrl
mov
pop
push
dec
sarb
push
dec
mov
sub
jge
das
lcall
mov
push
add
dec
dec
out
in
aad
imul
fnsave
js
les
lds
xchg
fistl
xchg
ret
imul
in
test
and
adc
and
imul
aam
pop
xchg
cmp
aam
lret
pop
mov
inc
xor
fdiv
mov
call
sbbl
nop
push
aaa
pop
repz
mov
call
fcompl
cmp
loop
ljmp
pop
push
repnz
cli
inc
aaa
sub
mov
stos
ret
pop
adc
push
xchg
in
mov
out
mov
push
xchg
hlt
pop
push
xchg
sub
pop
rorb
mov
stos
outsl
push
data16
pop
inc
pushf
push
aaa
sub
cltd
jne
mov
pusha
mov
push
or
mov
sbbb
dec
lods
sub
or
ja
mov
pop
cmp
aaa
out
jns
adc
and
test
test
hlt
aam
pop
mov
adc
push
das
add
and
pop
cmc
sub
xorl
pop
and
daa
lea
and
sbb
xchg
pop
test
jle
add
add
rolb
xchg
pop
add
inc
out
add
fstps
xor
inc
ss
cs
lea
or
pop
lret
icebp
call
in
cmp
mov
leave
add
cmp
or
xor
mov
and
jb
jns
jns
push
bound
jns
pop
jns
mov
xor
sub
adc
or
lock
call
mov
das
das
enter
mov
das
das
das
test
mov
mov
mov
nop
sbbl
mov
enter
dec
mov
in
pop
cmp
mov
jb
sbbl
cld
mov
inc
push
out
fstpt
and
mov
nop
andl
pop
cmp
inc
cmpb
sbb
and
push
mov
nop
mov
and
mov
nop
sbbl
mov
enter
jecxz
fdivrs
cmp
mov
jb
sbbl
xchg
mov
inc
push
cmpb
and
mov
nop
cmpl
xor
inc
sbb
or
mov
int
in
clc
shll
das
inc
es
or
mov
mov
mov
cld
xchg
mov
daa
int
movsb
add
adc
mov
sbb
xor
or
and
and
int
das
and
sbb
xor
or
enter
stc
mov
and
int
xor
dec
cli
cmp
mov
cmpsb
jb
dec
adcl
addb
inc
and
dec
mov
aad
dec
inc
sub
push
rclb
mov
and
add
sbb
inc
inc
dec
movl
xor
sub
leave
sub
mov
push
popl
push
aam
shrl
jne
ret
fsts
mov
mov
fs
mov
xchg
or
pop
icebp
mov
sbb
pop
scas
adc
sub
mov
jmp
test
inc
add
mov
test
test
xorl
or
mov
mov
inc
push
pop
jb
iret
iret
xchg
int3
lcall
inc
iret
test
and
jmp
xchg
sbb
in
inc
hlt
repnz
jae
iret
adc
mov
iret
xor
push
iret
sbb
mov
iret
xchg
push
inc
mov
sbb
test
scas
push
pop
iret
mov
and
sbb
inc
xchg
fistpll
and
mov
leave
sarb
sbb
mov
rorb
enter
dec
iret
scas
inc
xchg
fsubrl
iret
pop
mov
fs
xchg
sub
int3
iret
ljmp
enter
idiv
mov
xor
jmp
arpl
fldenv
je
xchg
inc
sub
sbb
iret
sbb
mov
mov
adc
scas
push
out
iret
mov
fs
sbb
push
sbb
iret
adc
adc
inc
sbb
movsb
fcmove
mov
int3
iret
sbb
and
nop
scas
iret
shll
dec
ja
mov
dec
jnp
sub
loopne
xchg
into
push
pop
push
xorb
xor
mov
jmp
sub
in
jbe
cmp
dec
mov
add
sbb
jae
and
stos
push
inc
xchg
sbb
sub
sub
fwait
mov
in
jmp
pop
hlt
shll
fs
xor
lock
mov
fdivrs
mov
cld
mov
cwtl
adc
sub
cmpsl
dec
and
push
pop
iret
mov
pop
mov
push
into
mov
shlb
dec
pop
lock
dec
cmc
sbb
mov
insl
fdivr
xchg
hlt
mov
iret
dec
sbb
sbb
dec
aaa
adc
adc
dec
ja
iret
fldcw
loope
sbb
les
mov
add
add
addb
dec
iret
movsl
roll
xlat
inc
call
jecxz
iret
dec
sbb
pop
lods
sub
mov
and
xchg
fdivs
mov
fs
dec
xlat
and
add
cmp
sub
and
in
dec
mov
sbb
and
lret
xor
fadd
and
add
arpl
out
mov
rcl
iret
cmp
jns
adc
popa
nop
test
iret
pop
sub
sub
sbb
cmp
xor
xchg
jle
sub
std
nop
movsl
iret
arpl
push
mov
ja
enter
sub
movsl
xlat
dec
popa
push
jbe
clc
add
sbb
aam
dec
aaa
inc
test
jle
rcl
cmpsb
jg
xchg
xchg
add
sbb
mov
cmc
cmp
sbb
xor
cmp
push
push
nop
movsl
fwait
cmp
ss
imul
cmc
or
iret
shrb
pop
out
cmp
iret
dec
sbb
dec
push
push
pop
jo
iret
push
inc
push
stos
inc
xchg
iret
ljmp
cltd
sbb
movsb
xchg
lock
fs
shl
sub
iret
das
xchg
push
jne
iret
repnz
mov
loopne
xchg
cmp
pop
iret
rcrb
nop
call
add
icebp
mov
iret
adcb
aad
fdivl
iret
jne
and
mov
add
mov
sahf
iret
nop
mov
pop
int
iret
add
push
xlat
and
push
pop
jb
dec
loop
hlt
rorl
adc
inc
push
sbb
addb
mov
cs
stos
iret
pop
sbb
loopne
push
iret
pop
ret
push
pop
iret
stc
push
jo
shlb
iret
enter
nop
ret
jno
xchg
repnz
mov
push
pop
mov
iret
sub
mov
fimuls
pop
jmp
iret
addr16
clc
mov
dec
adc
ja
jb
xor
enter
pop
xchg
pop
push
or
iret
mov
cmp
jp
lret
sbb
cmp
pop
into
and
or
imul
movl
lea
cmp
pop
or
into
dec
lret
sub
and
and
scas
sub
in
lods
out
mov
mov
xor
pop
iret
cmpsb
pop
sbb
adc
jnp
or
push
iret
inc
mov
pop
iret
xchg
push
dec
mov
xorb
movsl
popf
enter
pop
add
and
jle
jmp
call
mov
fimuls
pusha
push
push
pop
outsb
mov
lcall
cmp
push
sahf
data16
cwtl
adc
repnz
lods
popf
in
mov
xor
mov
andb
sub
cltd
push
pusha
sub
jp
and
inc
pop
push
mov
mov
and
dec
stc
mov
push
xchg
jmp
out
mov
add
nop
repz
test
push
mov
sahf
out
lcall
jl
out
int3
in
decb
test
sbb
dec
pop
iret
repz
outsb
jle
cmpsb
ret
cmpsl
stc
cmp
add
sahf
out
inc
push
push
sahf
out
mov
jns
mov
ljmp
out
sahf
push
jo
xchg
mov
jno
out
aam
lock
into
repz
cld
push
adc
dec
ret
adc
call
repnz
fisubs
lea
adc
adc
push
xor
xor
sbb
cmpsl
add
mov
cltd
push
mov
lcall
fdivrs
jl
sbb
aad
outsb
cmp
fnstcw
jl
push
lea
dec
mov
mov
addb
mov
out
lcall
pusha
or
adc
rorb
jne
das
push
adc
xchg
sbb
cmp
out
add
nop
xchg
and
sub
negl
rolb
enter
lcall
cmpb
sahf
cmpsl
push
jns
jp
push
cld
pop
fwait
sarb
push
lock
or
pop
inc
xchg
jo
pop
add
cwtl
nop
fwait
ret
and
outsl
fs
xchg
jns
daa
mov
push
dec
inc
xor
jns
out
sbb
or
iret
repz
hlt
xchg
icebp
in
in
fdivrl
repz
aam
int3
enter
repz
iret
repz
test
mov
iret
repz
mov
iret
repz
je
insb
iret
repz
push
push
cmp
repz
dec
dec
inc
inc
stc
cmp
repz
and
nop
out
sahf
cmpsl
lock
sahf
pop
cmp
cld
fdivrs
nop
je
pusha
pop
repz
repz
and
adc
out
sahf
out
mov
pushf
je
jns
jge
and
push
nop
fs
int
dec
lea
push
sbb
add
mov
lahf
add
mov
or
push
lea
pop
push
dec
or
push
add
dec
add
stos
pop
xchg
push
aaa
jbe
mov
xor
push
push
add
jo
jne
rcrb
xor
mov
cmpsb
xor
es
dec
ja
xchg
adc
push
push
mov
xchg
inc
sub
xchg
sti
adc
loop
mov
fwait
into
push
jae
mov
xchg
jae
adc
push
icebp
scas
movsb
rcrl
cmp
xor
and
lret
pop
bound
insb
sarl
ret
repnz
inc
adc
sti
xor
ss
or
jne
cmp
mov
fists
dec
arpl
daa
gs
dec
loope
aad
sbb
push
ficoms
mov
daa
aas
scas
pop
les
add
sbb
clc
push
add
push
mov
inc
add
adc
dec
lahf
mull
fiaddl
jle
xor
mov
adc
lods
add
adc
add
mov
or
lea
pushf
push
daa
fimull
fs
aas
jb
nop
pop
xor
shlb
fsubrs
inc
pop
jge
dec
push
mov
xor
cmp
jo
sbb
inc
cmpsl
pop
mov
inc
aas
sbb
dec
pushf
bound
or
dec
mov
dec
pop
je
aas
jns
adc
push
int3
xchg
pop
adc
sbb
imul
mov
movsb
jg
push
dec
ret
stos
shr
daa
inc
mov
lds
cmpsl
pushf
xchg
fcmovnbe
jg
unpcklps
xchg
add
imul
adc
xchg
nop
imul
scas
xchg
xor
xchg
push
push
insl
aad
xchg
add
adc
jbe
movsl
je
mov
cmp
sti
fimuls
outsb
iret
jb
jbe,pn
btr
fldt
or
sub
and
cmc
jns
cmpsb
add
dec
cmpsb
pop
ss
add
dec
push
mov
xchg
movsb
cmpsb
shrl
push
mov
out
adcb
and
cld
addb
push
push
aas
pusha
dec
sbb
inc
pop
push
gs
jl
jl
dec
push
arpl
cmp
mov
add
outsl
and
add
sbb
pop
mov
pusha
or
pop
mov
add
mov
xor
push
add
push
lret
call
dec
iret
sub
or
inc
jmp
sbb
cmp
lea
push
sub
sbb
add
dec
push
xor
and
imul
sub
ret
inc
adc
push
orl
shll
pop
or
arpl
xchg
fcomps
xor
adc
sbb
or
sbb
rcrl
movl
and
out
xchg
pop
adc
sbb
mov
dec
arpl
repz
inc
inc
and
rcrl
xor
mov
rcrb
push
das
repz
fcomps
lds
push
ja
rorb
lea
aas
pop
sbb
rcrl
adc
sbb
in
mov
sbb
push
mov
add
loop
xchg
dec
fisttpll
mov
stos
addr16
xchg
mov
add
cwtl
push
pusha
mov
xchg
push
imul
repz
pushf
xchg
mov
je
pop
pusha
pop
pop
jns
out
push
push
dec
dec
inc
out
sahf
out
cmp
xor
out
in
sahf
sub
or
push
cld
sahf
out
lcall
jns
out
shlb
dec
mov
test
sahf
out
sahf
jl
insb
fs
dec
jmp
out
cmp
sbb
xchg
mov
push
fcom
enter
cmp
repz
mov
jns
mov
jo
push
inc
ds
repz
cmp
sub
or
xchg
jns
out
in
enter
gs
out
jo
add
dec
sbb
imul
push
clc
into
dec
popf
enter
mov
mov
add
enter
add
pop
subb
ja
inc
sub
fsubrl
xchg
cs
call
sub
frstor
enter
jo
add
outsb
ret
mov
ja
push
xchg
cs
push
inc
xor
inc
aas
fistps
mov
aas
addr16
sbb
out
push
inc
incl
and
and
add
push
adc
mov
pop
xor
xor
jecxz
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
aaa
sar
rclb
xchg
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
call
push
cmp
andb
gs
cmp
mov
cmp
pop
leave
clc
fwait
cmp
cmp
dec
cmp
xchg
cmp
mov
jg
ficoml
and
pop
ds
ds
xor
mov
aas
imul
aas
jecxz
call
aas
clc
mov
and
sub
xor
jno
push
or
push
shll
push
out
xor
push
sbb
pop
xor
xor
and
daa
xor
cmp
and
incl
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
xor
dec
xchg
mov
or
xor
incb
mov
sub
sub
xor
xor
repnz
ss
xor
xor
xor
xor
mov
push
mov
mov
mov
xor
xor
xor
dec
xor
xor
and
sub
insb
ss
xorl
outsl
xchg
icebp
test
aad
push
jp
aaa
cmp
mov
insb
cmp
leave
enter
jbe
cmp
sbb
sbb
and
and
inc
push
xchg
xor
jp
test
mov
mov
repnz
cmp
xor
sbb
dec
cmp
test
stos
push
arpl
mov
ss
dec
cmp
cmp
cmp
and
jg
inc
idivb
cmp
cmp
jecxz
xor
cmp
mov
and
out
cmp
add
pop
or
outsb
ds
cmp
dec
xchg
shl
sbb
xor
decb
xor
inc
xor
xchg
loope
push
xor
xor
jle
xor
jno
dec
sbb
dec
xor
aam
fcmovb
clc
outsl
xchg
dec
in
dec
xor
cmpsl
mov
repz
outsl
test
lret
icebp
xchg
xor
push
add
mov
scas
test
aaa
in
outsb
pop
icebp
ud0
xchg
sub
cmp
inc
js
jle
xchg
sub
mov
cmp
cmp
icebp
lock
or
pop
adc
jg
nop
inc
dec
ss
cmp
fcom
sub
idivb
xchg
mov
ret
cmp
cmp
dec
push
sbb
fisttps
insl
cmp
jnp
adcb
mov
cmp
cmp
cmp
and
or
in
jmp
out
xchg
icebp
cmp
cmp
ljmp
xchg
xchg
xor
inc
jp
filds
pop
insb
cmp
cmp
cmp
cmp
cmp
xor
jg
sub
ds
ds
ds
clc
sub
or
adc
and
dec
aas
push
aas
call
bound
outsb
xor
push
sbb
jno
test
clc
xor
jl
and
inc
daa
loop
jg
mov
mov
in
cmc
xor
xor
sar
dec
mov
xor
insl
xor
test
jno
mov
popf
xor
xchg
loope
xor
aaa
jnp
mov
mov
add
or
cmp
sbb
xor
clc
loope
cmp
xchg
cmp
gs
sub
fstpl
mov
mov
pop
cmp
cmp
inc
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
clc
cmpsb
test
ja
cmpb
icebp
ja
pop
cltd
cmp
cmp
cmp
rorl
cmp
sub
pushf
jne
loope
xchg
inc
incl
xor
lock
xor
ja
mov
pop
push
cmpsb
xor
fbstp
or
xor
pushl
cltd
xor
adc
sbb
das
ss
mov
mov
sarb
dec
pop
cmp
data16
mov
lret
cmp
cmp
cmp
data16
mov
jmp
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
cmp
stos
aas
mov
scas
pusha
add
sbb
sub
cmp
xor
test
xchg
dec
sbb
mov
fbstp
icebp
push
stos
pusha
xchg
mov
mov
outsl
cli
mov
xor
ss
aaa
test
mov
cmp
cmp
cmp
scas
or
add
pusha
sahf
ret
outsb
sbb
out
adc
outsb
jmp
loope
and
into
sub
cmp
jecxz
cmp
jnp
sbb
scas
outsb
mov
lcall
pusha
enter
or
or
adc
and
sub
mov
nop
cwtl
xor
test
mov
mov
nop
jno
mov
je
call
push
sbb
jb
mov
push
mov
pop
in
inc
inc
xchg
dec
add
popa
aad
inc
adc
stc
int3
mov
jo
js
jl
and
sub
leave
sub
jecxz
mov
xor
dec
int3
xor
sub
shl
or
leave
call
inc
adc
or
adc
scas
cmp
xor
cmp
inc
xor
jg
lea
push
xor
xor
clc
or
insb
divb
mov
nop
xor
cwtl
xor
xor
and
mov
les
rorb
xor
ret
in
inc
pop
sahf
ret
xor
lods
adc
mov
mov
nop
test
mov
loope
lock
or
inc
shlb
in
add
sbb
push
and
jno
xchg
mov
pusha
xor
push
lock
repnz
cmp
add
mov
loop
add
loopne
movsb
push
pop
dec
pop
jo
mov
xor
sbb
xor
xor
xor
xor
xor
dec
test
lretw
test
rcrb
aam
in
xor
adc
sbb
and
sub
sub
xor
dec
ss
add
loope
and
ficomps
popa
xor
xor
mov
hlt
xor
es
add
pusha
add
sbb
xor
repz
pop
jl
add
cmp
inc
xor
mov
xor
xor
or
pop
xor
xor
into
insb
sarb
ja
js
jl
xorb
mov
nop
xchg
cwtl
cmpsb
or
sbb
mov
addr16
loopne
push
incb
xchg
pushf
xor
push
mov
and
and
sbb
jo
nop
ljmp
call
add
fidivrs
sbb
fcomps
test
test
incl
cmpl
pop
pop
pop
cs
and
cmp
push
xchg
jae
sub
jmp
loope
jecxz
imul
addl
sbb
adc
mov
mov
int3
test
repz
jecxz
call
add
mov
fimull
or
mov
cmp
sti
imul
out
les
pop
xor
out
test
ljmp
mov
mov
stc
jecxz
scas
hlt
mov
mov
cmp
incl
mov
push
jmp
pop
stos
je
fwait
lods
popf
dec
in
jp
mov
mov
cwtl
add
xor
repz
adc
mov
and
lods
jp
xor
mov
daa
pop
cmpps
ljmp
scas
stc
cmp
xchg
inc
mov
xor
repz
cmp
loop
pushf
adc
outsl
incl
fcmovnbe
lods
inc
adcl
adc
sub
pop
inc
adc
jns
movsb
addr16
add
lahf
dec
sub
push
adc
lret
fsubs
jb
nop
pop
int
setge
mov
ss
rcll
lret
sbb
decl
clc
rorl
adc
lahf
arpl
xchg
mov
or
and
outsl
lcall
cld
mov
jge
je
lods
mov
jnp
and
rol
sub
inc
outsb
nop
xchg
int3
xchg
je
mov
push
iret
mov
jmp
nop
cld
scas
lea
test
sbb
inc
dec
cli
push
and
pop
test
sbb
test
jnp
shrb
pop
pop
pop
cli
mov
rcll
repnz
call
xchg
adc
movsl
mov
mov
mov
xor
push
inc
push
add
pop
stos
push
push
clc
filds
adc
inc
popa
bound
ror
scas
sbb
add
cwtl
ds
adc
ljmp
idivb
jl
xchg
cmc
mov
mov
xlat
push
mov
loop
dec
xor
or
into
ljmp
ja
shll
sbb
movsl
cmp
mov
test
test
lock
and
xchg
loop
and
mov
sub
jmp
inc
testl
mov
incl
add
add
cmp
sbbl
mov
call
leave
or
in
in
int3
outsl
cld
sarl
xchg
dec
adc
daa
stos
gs
mov
out
orb
arpl
pop
push
cmp
cwtl
mov
fisubrs
popa
jno
aaa
decl
insl
cmp
popf
mov
inc
inc
sub
test
jecxz
stos
rcl
in
dec
xor
js
cmp
leave
int3
xor
lret
adc
cltd
leave
adc
imul
jg
jmp
or
xchg
pop
out
push
xchg
addr16
sbb
add
sar
sub
mov
add
lcall
pop
push
xor
iret
pop
ret
stos
leave
xor
pop
repnz
jmp
push
aas
mov
xor
cli
push
punpckldq
add
std
icebp
ja
mov
xor
incl
inc
sbb
adc
jge
rcrl
decl
sub
pop
arpl
push
xchg
pop
inc
loop
out
cltd
and
inc
fwait
mov
mul
jns
add
pop
shrl
leave
lahf
push
and
movsb
and
cs
jg
call
clc
jne
out
aas
imul
mov
mov
call
jno
dec
dec
movsb
out
and
push
pop
jbe
or
insl
ljmp
pop
jo
scas
lcall
pop
and
jns
fmuls
hlt
push
mov
popf
sbb
inc
cli
call
or
loop
movsb
push
push
iret
push
gs
mov
test
xchg
scas
push
daa
hlt
add
sub
and
mov
sub
jmp
pushf
rorb
cmp
ja
jb
outsl
sub
or
fisubrs
nop
das
mov
ret
adc
dec
cli
dec
or
cmpsb
xchg
xchg
push
adc
js
ljmp
inc
test
lods
dec
inc
mov
sbb
cmp
arpl
and
incl
gs
je
xor
xlat
aam
aad
xor
ret
add
mov
jb
or
xor
and
pop
cwtl
cmp
loope
subb
mov
mov
rolb
repnz
insb
lods
popf
mov
lcall
repz
sub
iret
gs
fbld
inc
orl
je
fistps
in
pushl
loopne
xchg
mov
xchg
loope
adc
mov
cmp
jae
repnz
mov
inc
cmpsl
jns
mov
shlb
sbb
add
sbbb
xor
lcall
les
movsb
adc
aas
jb
dec
cld
xlat
cmp
int
or
cmc
loopne
mov
jg
std
ss
sub
in
adc
pop
push
adc
daa
leave
divl
jmp
in
pop
adc
mov
in
dec
mov
insb
inc
lds
ja
jg
fwait
ljmp
push
loopne
fs
and
test
push
lcall
stos
subl
in
outsl
or
stos
dec
or
mov
lods
clc
sub
flds
or
pop
ljmp
mov
jecxz
jmp
rorb
push
icebp
pop
sub
enter
sbb
lret
call
mov
cltd
lods
cmp
add
push
jg
pop
xor
pop
cld
decl
movsl
ret
mov
jbe
sub
xor
incl
mov
inc
jo
in
sti
lret
cmc
popa
jmp
adc
jg
dec
scas
jecxz
sbbl
out
aam
mov
jle
xchg
push
pushl
je
mov
sbb
adc
aad
pop
lret
mov
enter
mov
jl
add
mov
in
or
push
mov
sti
or
xchg
and
decl
mov
inc
fldt
cmp
ret
and
mov
or
cltd
push
pop
mov
leave
ljmp
incl
xchg
inc
push
mov
mov
inc
shll
mov
jp
hlt
jnp
jecxz
add
lahf
es
pushf
sbb
stos
or
pusha
ljmp
shlb
pop
into
dec
test
std
push
push
push
ds
mov
or
insl
test
xchg
mov
xorb
fidivrs
jnp
pop
addr16
jmp
decb
outsl
push
push
add
and
lock
fsubrs
and
pop
loopne
incl
iret
jbe
pop
add
xchg
sub
and
mov
daa
ljmp
ljmp
dec
ss
dec
sbb
ret
xor
cmp
loopne
mov
xor
push
hlt
fnstenv
mov
insl
fnstsw
dec
repz
jno
and
shlb
fcompl
mov
incl
cld
movsb
loope
pop
mov
pushf
fs
jb
mov
sbb
icebp
cli
mov
push
loopne
sbb
push
mov
popf
sbb
adc
pop
imul
shlb
mov
incl
ror
loope
push
imul
test
add
add
pop
cld
sbb
push
and
push
cmp
pop
and
jbe
push
xchg
cs
shrb
lahf
mov
sarl
lods
pushl
mov
es
lock
adc
lock
std
in
add
movsl
add
push
dec
sub
mov
or
dec
stc
jp
mov
shlb
pop
adc
pop
inc
push
nop
les
pop
adc
mov
mov
ljmp
and
ret
imul
push
rcl
cmp
inc
mov
pop
mov
jmp
fmuls
out
rcl
rcl
mov
push
mov
les
xlat
xchg
xchg
cmp
jmp
add
rorl
lahf
pop
adc
test
fidivl
out
and
cmp
incl
ljmp
fdivr
movsl
imul
inc
aaa
xchg
sub
ljmp
xor
lahf
out
fsubrl
lods
pop
xchg
jne
mov
and
call
scas
and
xchg
mov
popf
push
sbbl
in
mov
jg
fistps
sbb
sbb
es
out
or
adc
lcall
loope
in
push
mov
xchg
xor
xchg
push
ljmp
sub
or
popa
push
incl
jmp
cmp
out
and
pusha
fs
jecxz
bound
jmp
add
mov
cmpb
and
aam
pop
pushf
clc
mov
jmp
inc
sbb
xlat
mov
ds
cmpsb
inc
cs
mov
jg
movsl
or
adc
or
fstl
cmp
xchg
mov
out
cmpsb
shlb
jno
xchg
sub
movaps
xorps
cmc
lcall
dec
mov
jnp
xchg
test
popa
cmc
mov
inc
test
dec
or
clc
xlat
ljmp
inc
dec
mov
popa
inc
fcmovnu
mov
fwait
mov
imul
push
and
mov
mov
xor
arpl
cmp
decl
shll
rcr
adc
inc
sub
cvtps2pi
aam
mov
pushl
dec
mov
pop
sahf
clc
and
push
mov
test
imul
or
mov
or
or
cli
nop
loope
movsl
scas
in
lea
cmc
dec
es
int
lcall
mov
imul
jg
or
or
xor
insb
pusha
int3
or
ljmp
out
frstor
pop
fmuls
icebp
cmp
in
daa
mov
pop
nop
aad
cmp
dec
mov
or
repnz
jp
xchg
push
sbb
fcmovbe
call
test
sub
xchg
fcmovnbe
sbb
lods
ljmp
insb
jmp
dec
std
insl
inc
push
adc
cltd
rclb
and
jmp
decl
mov
aaa
movsb
shrb
pop
mov
mov
jno
mulb
dec
pushl
nop
add
jno
or
xlat
fdivrs
lock
sti
jbe
ret
pop
pop
inc
out
orb
sbb
add
gs
mov
fwait
incb
fidivrl
xlat
sub
outsl
mov
lock
jns
movsl
adc
fistpl
and
cmpb
rorl
fnstcw
sbb
je
sub
jae
mov
outsl
xchg
sbb
jbe
cmpsb
pop
xchg
dec
inc
mov
adc
xchg
sub
stc
mov
outsl
fidivl
lods
dec
sub
lcall
xor
mov
jecxz
stos
sub
cmp
in
lahf
pop
rclb
imul
ljmp
inc
pusha
lret
les
mov
push
rcrb
inc
fcomip
cmp
out
jns
pop
mov
add
mov
decb
or
cs
mov
push
mov
call
jle
lcall
outsl
mov
mov
or
nop
inc
push
pop
mov
decl
loope
or
or
std
or
cmpsb
xor
adc
nop
clc
stos
xor
push
mov
ljmp
xor
fs
cwtl
pop
imul
jmp
shlb
mov
mov
sar
or
lods
dec
dec
addr16
xchg
ljmp
adc
add
xchg
push
addr16
gs
sahf
insb
iret
bound
pop
decl
lods
shr
pushf
pop
int
pusha
pop
pop
lret
xchg
jl
cmp
mov
popf
shlb
les
lret
push
pop
mov
cli
cwtl
or
add
repz
push
es
cmp
incl
jmp
sub
dec
adc
aas
aas
mov
pop
lds
into
lahf
arpl
mov
push
scas
cmpsb
loope
inc
adc
push
stc
adc
insb
jb
or
mov
cli
ret
fcomip
cld
push
inc
cmp
adcl
iret
push
xor
mov
iret
mov
add
and
movsb
out
pop
lods
sahf
es
xor
mov
push
incb
int
push
dec
sarl
popa
out
mov
xor
out
and
ret
out
pop
enter
cmp
push
pop
insb
xchg
lock
fldcw
sbb
mov
lret
dec
arpl
xor
lahf
lret
cmc
cmp
push
adc
jge
sbb
lcall
scas
push
loop
test
push
xchg
xor
nop
xchg
subl
dec
pushl
xchg
insl
insl
call
jae
pop
xor
pop
pop
inc
mov
lcall
and
mov
mov
add
aaa
int3
push
lds
fdiv
outsb
decl
inc
jno
mov
stos
fadds
mov
pusha
aam
or
sbb
lahf
sbb
lcall
mov
inc
xchg
jp
inc
dec
nop
imul
fisubl
clc
adc
les
xor
lcall
stos
les
sub
call
sub
ficompl
adc
jnp
ja
ljmp
in
popf
sbb
cmp
sbb
xor
pop
shr
loopne
sarl
mov
mov
ljmp
cmp
mov
test
cs
sbb
cmp
aaa
leave
outsb
bound
cmp
pop
mov
cmp
mov
xchg
cmpsl
icebp
lret
mov
fstl
ret
lock
call
cmp
lret
mov
mov
es
or
icebp
out
comiss
push
cwtl
adc
sub
inc
decl
dec
outsl
std
jp
mov
popf
adc
inc
jle
xor
jns
call
dec
jmp
repnz
ja
pop
imul
mov
jecxz
inc
mov
pop
mov
jae
mov
ljmp
xor
ds
test
adc
aam
sub
jmp
imul
scas
jle
jbe
xchg
pop
in
stos
and
jnp
push
jecxz
adc
pop
sub
xor
popf
scas
mov
incl
nop
jne
mov
loop
lock
inc
mov
lods
sbb
push
mov
pop
cs
mov
dec
cmpsb
mov
mov
or
dec
insl
sahf
xor
incl
ret
mov
sarb
adc
out
push
pop
call
mov
jmp
pop
mov
push
push
cmpsb
scas
jno
xchg
orl
out
xchg
outsb
dec
aam
xchg
daa
and
decl
dec
xor
add
outsb
jb
lds
rcl
popa
dec
outsl
cli
pushl
ds
cltd
mov
outsb
pop
divl
push
in
push
movsb
or
xchg
dec
jecxz
cli
pop
in
jp
mov
fsubrl
jo
mov
or
pop
xor
adc
out
in
push
imul
inc
jmp
and
filds
clc
xor
and
repnz
aas
mov
fs
ficomps
ud0
incl
scas
test
xchg
jb
cwtl
imul
sub
aas
inc
mov
and
inc
jmp
ljmp
fisttpl
popf
xor
movsb
fwait
inc
push
pushl
add
jae
jmp
jmp
mov
pushf
out
push
adc
xchg
inc
cli
ret
mov
mulb
incl
mov
shr
push
or
pushl
jl
negl
mov
enter
jmp
mov
mov
in
insl
out
mov
lahf
jb
sub
mov
ret
imul
iret
lods
and
mov
ror
pushf
icebp
sbb
push
add
bound
rcrl
decl
mov
cmp
jb
cmpl
int3
scas
or
incl
mov
ljmp
in
mov
mov
adc
out
mov
jg
les
jmp
hlt
in
imul
pop
in
mov
shll
sub
jmp
outsl
cli
incl
stc
dec
mov
rclb
xchg
cmp
mov
mov
lcall
aad
in
test
andb
mov
repz
push
lcall
fdivrl
lea
repnz
test
mov
outsb
or
mov
fldl
jge
repz
pushl
mov
xor
or
out
ljmp
movl
ljmp
mov
mov
stos
lea
adc
jl
xchg
shl
mov
call
add
cmpsb
js
dec
push
icebp
lods
inc
push
mov
fsubl
jp
mov
pushl
je
mov
xchg
in
aam
test
loopne
cmp
cli
push
loope
stos
fwait
mov
inc
in
or
adc
icebp
lcall
push
xor
imul
data16
jbe
mov
mov
cmp
lcall
in
shll
lahf
popf
pop
dec
int3
push
push
test
inc
shll
aad
mov
cltd
add
decl
push
ljmp
add
inc
sahf
xor
cs
fcoms
scas
push
jmp
jb
inc
lret
sbb
mov
lret
jns
pop
int3
xor
sub
incl
push
cmp
mov
jle
dec
or
cmpsl
aas
cwtl
push
xor
pushl
lods
hlt
mov
cmp
ljmp
inc
call
pop
jle
sbb
int3
lods
jmp
pop
mov
sbb
or
popl
push
clc
outsl
es
xchg
mov
addr16
int
pop
xor
outsb
lock
fcoml
lcall
shlb
sub
cmp
xchg
icebp
jl
into
jo
push
dec
adcb
jmp
pop
lock
enter
and
aaa
daa
inc
xchg
pop
aas
mov
jae
mov
push
xor
repnz
shrb
or
arpl
jl
bound
or
pushl
mov
mov
xor
cltd
sub
fidivrl
iret
rcrb
ljmp
icebp
mov
cmpsl
sbb
loop
pop
cmpl
and
sti
out
rol
cmp
ds
inc
jecxz
cmp
or
pushf
xchg
fisubrs
out
clc
incl
and
cmp
push
sbb
popa
or
and
rolb
aam
jmp
cmpsb
rcll
push
mov
add
sbb
shrl
jbe
mov
pop
cmp
out
lcall
mov
xlat
test
stos
add
mov
cltd
adc
and
cld
mov
decl
in
ljmp
hlt
fcomps
sub
pop
jecxz
adc
sahf
fstpt
mov
fiaddl
iret
pop
cmpsb
mov
cmp
jg
call
jmp
testb
dec
negb
aam
push
push
sub
dec
jbe
fsubl
jmp
or
jae
mov
scas
xor
shrl
imul
sbb
jle
adc
dec
stos
scas
test
or
jmp
inc
aam
daa
mov
cmp
add
jecxz
int
into
xor
int3
hlt
inc
iret
call
int
das
mov
lcall
testb
sbb
and
xchg
xchg
into
cmp
cld
aaa
incl
hlt
inc
push
jne
jl
aad
adc
cmpsl
leave
jg
repnz
jp
rcr
mov
xchg
jmp
sub
adc
adc
sbb
les
sub
cltd
add
inc
adc
pushl
sub
mov
shll
into
pop
divb
inc
fisubl
push
sub
mov
loopne
ret
xor
std
loopne
or
imul
aam
pop
scas
call
scas
insl
je
imulb
fsubrp
stos
xchg
adc
sbb
popf
shr
frstpm(287
fcomp
mov
dec
call
sub
push
or
cld
cmp
addr16
fimuls
cmp
xchg
insb
popf
or
xchg
cmovb
ljmp
pop
aaa
andl
jle
dec
ret
sbb
push
xchg
aaa
or
outsb
in
icebp
sub
mov
movb
push
icebp
addb
insl
or
mov
inc
fnstsw
lret
cli
lcall
jbe
push
pop
inc
test
incl
push
jmp
or
fidivrl
sub
popf
xorb
cld
pop
sub
or
push
push
repz
pop
jb
in
gs
pushl
out
bound
popl
faddl
sub
sub
sahf
fbstp
sbb
dec
jnp
cmp
push
dec
jp
mov
aam
mov
les
mov
clc
inc
or
pop
fwait
call
rcrb
out
popf
jl
fwait
int
push
adc
or
out
jle
add
dec
test
inc
pop
int3
mov
pop
mov
sarl
xchg
inc
js
sar
jg
inc
jns
pop
dec
xlat
pop
or
jb
out
cmpsl
les
push
cmp
scas
mov
and
dec
insl
stos
int
scas
hlt
adc
cmp
dec
inc
lret
jb
mov
jo
dec
mov
ret
and
sub
add
dec
or
pushl
clc
mov
stos
in
in
out
enter
ret
lahf
push
imul
mov
popa
in
lcall
cmpsl
cmp
aaa
cmp
lock
dec
fcoms
in
scas
mov
push
push
sub
incl
add
scas
push
mov
scas
loop
aam
or
mov
inc
js
jae
inc
jge
ret
leave
sbb
ljmp
rol
adc
test
scas
dec
cmp
and
sbb
ficoml
mov
call
jmp
roll
mov
xchg
xlat
sbb
fs
xchg
and
decl
lock
iret
sbb
pop
adc
imul
lea
mov
movsb
nop
xor
rcll
loop
add
je
test
hlt
leave
cmp
dec
pop
sahf
mov
or
push
mov
sahf
in
pusha
sub
lcall
jbe
cmp
sub
xchg
mov
mov
jo
sbb
in
push
call
negl
dec
aas
jne
sbb
dec
mov
inc
and
popa
mov
mov
mov
popf
repz
and
dec
mov
pushl
sub
xchg
mov
xor
xchg
sarb
mov
idivb
ffreep
das
fiadds
incl
data16
or
xlat
inc
dec
shl
orl
out
fcmovb
pop
xchg
mov
mov
and
shll
push
mov
mov
lahf
lcall
pop
xchg
rcrb
loope
jge
test
pop
mov
loopne
adc
fiaddl
cli
inc
pop
sti
mov
xor
cmpl
dec
outsb
out
inc
scas
pop
fistpl
adc
lcall
mov
imulb
mov
pop
fcoml
loopne
mov
mov
int3
int3
addr16
push
insl
xchg
cld
xor
mov
cltd
xlat
bound
ljmp
call
mov
fldl
imul
ljmp
incl
cmpsl
sarl
repnz
movaps
fisubrs
xor
jle
sub
clc
decl
xor
leave
call
lds
adc
es
adc
incl
vmwrite
repz
push
xor
adc
in
iret
sahf
dec
idivb
pop
js
jmp
inc
pop
inc
xchg
xor
add
mov
arpl
inc
out
ljmp
push
std
lcall
cmpsb
dec
lret
loopne
jno,pn
mov
sarl
inc
add
xchg
stc
out
jg
decl
pop
lret
rcr
jns
icebp
lods
fnstcw
lods
test
mov
cld
sti
jno
lret
lea
pop
jecxz
ljmp
xor
enter
xor
push
and
dec
add
stos
enter
jnp
out
pop
ss
ficoms
push
popa
idivl
aam
or
test
pop
arpl
cmc
jge
push
outsb
xchg
out
lcall
jle
out
sbb
in
sbb
push
pop
fisubl
or
mov
mov
in
lahf
fisttpl
mov
jmpw
in
loopne
and
outsb
mov
or
xchg
push
sbb
nop
mov
lcall
dec
dec
lods
mov
decl
cmp
mov
inc
xor
in
xor
scas
mov
dec
cmpsl
mov
pop
dec
sti
incl
pop
shrb
outsl
mov
jae
inc
lret
inc
or
mov
daa
lods
sbb
push
add
xchg
xor
ret
movsb
or
cmp
jbe
xor
cwtl
insl
pop
pop
test
bound
cmp
sbb
dec
xchg
imul
ljmp
and
xor
and
rcrl
dec
daa
das
lret
in
mov
and
movl
test
cmpb
adc
enter
call
outsb
fcomps
idivb
test
sub
sub
push
jmp
dec
add
jl
pop
std
je
rolb
or
xor
adc
rorl
inc
cmp
push
and
sub
pushl
pushf
pop
sbb
int
sub
and
mov
pushf
xor
cmp
inc
pop
ret
adc
jmp
decl
andb
mov
add
lahf
and
or
and
mov
push
dec
sub
inc
test
sub
xorl
int
lods
rclb
mov
and
lods
inc
or
std
sbb
dec
imul
pop
sub
or
fsubl
xchg
les
int3
call
mov
js
xorl
pop
repz
inc
dec
sub
int3
lret
pop
pop
icebp
iret
scas
cli
pushl
inc
adc
cli
xchg
pop
or
and
mov
out
xlat
sbb
push
shl
ljmp
cmc
jmp
in
mov
out
cmpsb
jb
mov
lret
adcb
or
jmp
lea
push
repnz
adc
out
mov
cmp
push
cmpsl
push
imul
dec
mov
insl
xor
cmp
pop
xchg
add
gs
push
sub
lock
decl
out
enter
mov
add
loope
inc
movsb
pop
arpl
lcall
cmpl
adc
push
jmp
jmp
mov
jmp
xor
cmp
sahf
and
pop
movsl
ja
inc
out
popf
fnstenv
into
test
xor
jecxz
fisubrl
loope
aad
cs
push
xor
push
push
cmp
stos
or
sub
push
push
aad
dec
cmp
push
or
shrb
cmp
or
sbb
loopne
leave
xchg
mov
ljmp
pushl
aad
xchg
out
adc
jmp
push
ljmp
fcmovnbe
out
mov
cltd
lcall
and
hlt
mov
inc
add
test
jb
dec
and
jmp
clc
lcall
mov
fcompl
jo
lret
push
xor
dec
mov
dec
out
sti
incl
in
jmp
cld
fmuls
out
jbe
jg
js
scas
inc
bound
jmp
cmp
dec
adc
aam
mov
mov
jno
js
mov
ljmp
mov
imul
mov
cmp
cs
cmp
hlt
dec
fcompl
fimull
adc
loop
xchg
xor
and
mov
inc
dec
decl
xor
mov
push
dec
pop
rorb
mov
or
fmulp
out
movsb
mov
aas
add
fcomps
push
dec
testb
push
cmp
int
inc
stos
repz
aad
test
dec
sub
faddp
push
mov
jae
sarb
jge
adc
iret
scas
xchg
xor
jmp
cmpb
es
paddq
les
outsl
add
pushf
insb
inc
mov
bnd
call
les
cmp
icebp
in
add
cs
test
shrb
mov
hlt
mov
daa
mov
incl
pop
cmc
push
mov
bound
dec
out
cli
aaa
xchg
shll
add
outsl
inc
mov
mov
mov
jnp
add
loope
mov
pop
mov
xor
pop
cmp
shll
cwtl
icebp
decl
jnp
test
fs
insb
mov
cmpsb
inc
repz
stos
cld
jge
loope
call
mov
cmp
mov
ljmp
jge
lcall
pop
ljmp
into
in
push
movsb
test
xchg
std
out
cltd
or
cli
out
push
jecxz
xchg
sub
enter
jl
push
sbb
ret
ficomps
push
xchg
int3
xor
sbb
mov
and
pop
std
jge
leave
adc
adc
into
and
mov
and
fbld
mov
mov
aam
clc
jp
inc
mov
ds
or
ss
pushl
cmpsb
mov
test
add
test
in
pop
and
mov
sub
fldt
fistpll
lods
testb
in
ds
call
mov
push
and
fildll
stos
inc
shlw
sub
inc
gs
jnp
adc
ret
lcall
cmp
js
rcrl
mov
xchg
call
outsb
push
cs
sbb
mov
in
sahf
dec
inc
push
push
or
imull
aas
test
cmp
mov
and
xchg
fwait
ljmp
fcompl
jo
jecxz
xchg
sbb
push
adc
jp
sbb
std
insl
scas
push
clc
mov
ljmp
ja
test
jmp
repz
outsb
lea
jg
pushl
add
sub
test
loop
movsl
sub
aad
push
and
insb
test
dec
pop
test
ljmp
add
add
jg
xchg
scas
gs
mov
jl
incl
ljmp
in
pop
ficoml
mov
push
sub
std
xor
mov
aaa
sbb
rclb
sarl
push
cld
ds
inc
xor
incl
adc
or
imul
xchg
cwtl
xchg
mov
daa
sbb
jmp
mov
loopne
repz
pop
aad
xchg
lods
imul
clc
mov
cltd
ljmp
xor
lods
mov
mov
pop
insl
jge
mov
test
test
fs
call
cltd
aad
leave
js
loopne
sub
add
mov
adc
and
ret
push
ljmp
or
aad
pop
or
push
int3
mov
lods
cmp
sahf
inc
in
adc
mov
jae
dec
call
data16
xchg
adc
test
pushl
pop
scas
mov
rorb
stos
outsl
shlb
mov
mov
mov
pop
shl
dec
pop
mov
rcl
out
shll
adc
dec
js
jl
pop
popa
xchg
je
xchg
lods
test
inc
enter
pusha
jmp
xchg
mov
std
lods
mov
xchg
and
fst
pop
jle
jbe
push
sub
mov
fsub
nop
mov
stc
or
pop
leave
dec
jno
and
push
pop
adc
mov
add
cmpsl
fcom
fistps
lock
cmp
jmp
mov
fldl
sub
mov
ret
bound
mov
cmp
inc
sbb
incl
add
mov
mov
sub
cmp
mov
jmp
adc
movsl
lea
cltd
ret
xchg
pop
xchg
push
push
cmp
ljmp
adc
xchg
das
or
imul
cmp
xor
repnz
and
stos
repnz
add
into
cmp
jl
mov
xchg
lds
bound
clc
cmp
sub
ljmp
stos
pop
jnp
gs
jne
scas
mov
add
clc
fimuls
pop
inc
ja
jg
mov
xchg
dec
push
xor
insb
push
mov
nop
sub
add
pushl
fldt
nop
mov
jp
decl
mov
fisubl
cmp
push
mov
push
imul
mov
lock
mov
cmp
add
sub
insl
mov
mov
ljmp
adc
insl
sbb
pop
cld
jmp
xchg
push
test
popa
sub
sub
push
rorl
lods
ljmp
cltd
sti
cmp
jmp
xchg
push
out
ret
rolb
jg
mov
call
out
fsubrl
sub
mov
popf
mov
out
inc
rcrl
enter
outsl
inc
cwtl
pop
push
call
scas
repnz
movsl
jno
outsb
pushl
or
push
pop
add
add
test
jbe
sbb
mov
mov
and
mov
xchg
or
mov
fbld
into
inc
and
cmp
pushf
stos
mov
mov
mov
icebp
sbb
aaa
cld
call
movsl
ds
cs
call
push
insb
and
xchg
out
in
cwtl
cmpl
test
and
mov
shrl
lods
pop
dec
adc
pop
jno
or
jl
push
jb
cli
shlb
sti
dec
imul
push
sbb
iret
sub
lds
out
push
lret
or
inc
or
nop
cs
sub
push
mov
jo
nop
stc
cmp
add
lods
xchg
mov
mov
mov
pop
rcr
incl
mov
cmpsb
jge
scas
or
adc
dec
xor
jecxz
orl
incl
mov
jle
pop
mov
aam
jne
fwait
or
fists
dec
add
les
and
out
xchg
imul
pushl
add
imul
sbb
iret
aaa
jg
sbb
xchg
movups
pop
decb
inc
fisubrl
pop
mov
adc
cmp
lret
add
pop
or
sbbl
adc
push
loope
jge
xchg
int
inc
dec
sub
ficompl
adc
dec
lret
lock
mov
imul
push
add
repnz
xchg
pop
pop
pop
mov
out
cmpsb
pusha
pop
xchg
pop
shlb
scas
jg
and
ss
fstl
mov
or
push
xchg
mov
lcall
jb
pop
mov
mov
fmul
sbb
stos
mov
pop
inc
in
ds
push
and
outsl
xchg
sub
sub
xor
cmp
aas
pop
subl
push
cmp
ja
test
pusha
push
jbe
and
push
sub
je
mov
inc
inc
xchg
mov
jg
imull
icebp
test
roll
cltd
and
jle
jmp
add
ds
adc
pop
mov
lcall
mov
mov
push
jge
js
dec
pop
add
sbb
lcall
dec
lock
out
popf
jge
fidivrl
push
call
push
sub
pop
mov
jg
push
push
in
hlt
into
sub
pushl
test
cmp
test
sbb
mov
repnz
js
mov
xor
das
clc
jg
adc
fmul
cwtl
push
jne
jb
push
and
in
cmp
dec
jmp
jle
mov
pop
push
pop
out
mov
sub
lcall
icebp
push
cmp
lcall
mov
enter
xor
bnd
sub
sar
and
daa
call
and
add
xchg
xchg
xchg
int
jns
pop
in
and
pop
cltd
and
mov
or
or
push
rcl
das
aas
ret
daa
or
into
cs
ljmp
popa
dec
xchg
cmp
dec
adc
pusha
cli
pop
xchg
xor
negb
xrelease
pop
mov
pop
aad
cmpsl
xor
cs
cld
inc
mov
pop
jno
andl
sbb
insl
jmp
xchg
mov
gs
stos
in
xchg
mov
sbb
sub
cmp
dec
lret
into
xchg
xchg
fildll
mov
clc
cmpsb
push
mov
lds
decl
add
jl
fs
sbb
add
mov
mulb
jae
ja
sbb
pop
inc
pop
dec
sti
aas
insb
mov
inc
dec
ds
in
incl
lock
mov
jge
sub
dec
rolb
jge
mov
add
mov
jne
stc
data16
xlat
mov
jo
xchg
jge
int
incl
bound
jg
jl
mov
std
inc
lret
inc
aaa
pop
ja
fs
out
push
xor
iret
ret
sbb
add
jmp
ljmp
jbe
sub
aas
mov
mov
in
or
lcall
loopne
xchg
dec
pop
mov
and
mul
or
ret
cmp
pop
loopne
fsubrs
sub
test
out
clc
push
in
xlat
or
insb
or
add
bound
incl
mov
fcmovbe
pop
xorb
pop
pop
enter
gs
into
xchg
cmp
lret
scas
jg
stos
insb
mov
cmc
xchg
fstpt
jge
lock
sub
xchg
cmp
fisubrs
rcr
or
jmp
aaa
sub
jmp
jne
xchg
jl
movsb
pop
adc
cs
fistl
pop
clc
int3
pusha
sar
jmp
jne
mov
fistpl
stc
movb
mov
sub
into
pop
jg
lods
add
add
sub
movsl
inc
stos
scas
mov
movsb
test
ljmp
adc
testb
add
fdivr
loopne
andl
test
cmpsb
cmpsb
in
mov
xchg
mov
cmp
outsb
lods
cltd
push
mov
popa
in
mov
and
lret
ljmp
adc
in
in
inc
add
test
pop
in
mov
add
dec
stos
mulb
mov
mov
cmp
repz
sub
cmp
push
es
xchg
test
pop
fwait
in
movsb
outsb
push
decl
mov
xlat
cltd
xchg
adc
loop
fistpll
test
in
sbb
aas
add
subl
decl
dec
dec
lods
scas
mov
data16
push
adc
push
imul
lahf
loope
test
xor
call
xchg
xchg
adc
sarb
shll
in
cmp
or
rclb
jmp
cs
cli
loope
sub
dec
xchg
negl
cli
mov
jne
mov
dec
popf
inc
inc
je
sbb
dec
cmp
dec
fbstp
xchg
cs
mov
pushl
and
dec
popf
pusha
mov
add
mov
cmp
mov
cltd
xchg
pop
stos
pop
add
sub
stos
push
aas
xchg
jbe
in
data16
nop
cmpsl
repnz
cmpsl
gs
call
mov
mov
fidivrl
dec
dec
mov
mov
mov
mov
jg
pushl
adc
inc
cmpsb
test
jp
fbld
xchg
push
jmp
jg
jg
cwtl
das
pop
pop
push
and
mov
testb
cli
jb
xor
sbb
incl
in
pop
or
icebp
pop
loope
out
sbbb
jns
pop
and
js
icebp
mov
gs
out
fdivs
or
mov
lods
cld
sbb
adc
lcall
jno
int3
shl
push
and
hlt
out
clc
incl
jb
inc
imul
testb
adc
aas
lcall
jmp
jbe
cmc
mov
mov
or
mov
adc
outsb
dec
rcl
decl
pop
movsb
and
lcall
int
arpl
push
mov
sbb
lcall
jg
or
push
sbb
inc
scas
fdivs
fwait
repz
enter
rorl
pushl
std
mov
loope
xchg
jb
push
dec
daa
fwait
in
inc
pop
hlt
dec
xchg
aad
jge
cmp
hlt
lcall
push
add
pop
push
andb
mov
movsl
pop
dec
fnstsw
std
add
aaa
inc
test
or
jp
test
ss
fldl
sub
pop
loopne
add
inc
push
inc
adc
xchg
pop
out
mov
je
sub
sahf
inc
jg
xor
ret
pop
stos
push
rcrl
in
mov
push
push
push
sub
scas
mov
jne
dec
mov
fs
mov
cld
loope
add
decl
pushf
dec
inc
das
stc
pop
cmp
fbld
scas
test
push
lcall
lds
out
inc
push
scas
jp
pop
push
inc
inc
jno
mov
popf
aaa
call
shl
sbb
lock
popf
test
lods
push
xor
incl
mov
mov
cmpsl
lods
add
inc
movsb
mov
mov
sbb
incl
pop
sub
dec
xlat
cmp
mov
fstps
ss
das
orl
decl
dec
cltd
fldl
jmp
jl
aad
mov
mov
fbstp
xchg
jmp
mov
cld
in
pop
push
js
and
shlb
jp
jp
sub
addb
push
call
push
cmc
jle
cmp
mov
call
jns
ljmp
jmp
xor
pushl
sti
dec
ret
mov
push
adc
pop
js
jo
jl
xchg
pop
adc
testl
mov
aas
repz
sbb
push
std
incl
adc
loopne
push
ja
mov
mov
scas
push
cmp
cli
leave
mov
jg
decl
mov
shr
push
xorl
stc
out
decl
push
aaa
into
fidivrs
enter
and
imul
cld
push
aaa
mov
repz
dec
and
push
ljmp
pop
dec
push
addr16
and
hlt
rclb
inc
adc
out
clc
in
mov
imul
mov
es
hlt
or
enter
lcall
nop
cltd
xor
xchg
fsubl
outsl
push
fnsetpm(287
loopne
push
hlt
insl
cmpsb
out
loopne
or
sbb
lcall
fdivrs
jbe
insb
xor
lods
cmp
std
negl
jg
mov
push
and
es
imul
dec
mov
adc
dec
incl
ret
aas
sbb
loope
sbbb
push
les
in
cmc
cltd
outsl
cli
pop
loopne
pop
xor
inc
cmp
popa
das
in
cmpsb
loop
aas
call
in
and
sbb
or
mov
ds
cmp
add
iret
jg
inc
shll
pop
rorb
jae
push
mov
xchg
cmpb
ljmp
icebp
and
clc
jns
push
lret
mov
stos
dec
dec
inc
sbbl
sbb
repnz
insl
add
mov
mov
testl
addr16
movsl
xor
mov
xor
xchg
clc
aas
aas
push
icebp
mov
sbb
push
adc
mov
jle
pop
scas
adc
adc
jne
xor
inc
ljmp
or
dec
inc
outsl
stos
xchg
jg
ljmp
incb
aad
jle
add
sub
and
pushl
in
or
xchg
bound
jne
sbb
push
push
sahf
push
push
jp
sub
out
push
mov
dec
inc
push
mov
fists
add
push
push
insl
popa
dec
bound
test
outsl
cs
call
add
xchg
jmp
adc
jmp
dec
inc
sbb
lods
aas
in
push
jl
imul
jbe
add
jl
hlt
xor
aas
dec
push
filds
cmp
cli
outsl
push
icebp
and
ljmp
stc
lret
test
insb
mov
not
lahf
push
add
mov
aas
and
jle
pushl
sub
push
push
inc
adc
outsl
repz
das
xor
ljmp
bound
aaa
lret
xchg
push
lods
test
in
jp
xchg
ret
mov
cmp
sar
sub
inc
cmc
inc
adc
pop
out
cmp
or
add
lods
loope
add
imul
aas
mov
test
lcall
cld
pop
jp
inc
addr16
fbld
and
jl
adc
lret
int
and
inc
hlt
pop
in
dec
adc
pushf
sbb
popf
or
mov
dec
jo
pop
jg
lcall
loopne
or
pop
decl
out
mov
adc
jmp
push
adc
adc
or
sub
adc
mov
cld
jmp
mov
and
push
enter
jl
ret
cmp
xor
push
addl
jmp
push
popf
fists
inc
cmp
js
jae
test
pushl
sbb
hlt
cmp
and
je
lret
adc
movsl
arpl
movsb
stc
mov
ljmp
inc
loopne
lods
out
aad
jmp
and
jl
xchg
pop
int3
stos
or
pop
dec
add
decl
mov
fcompl
adc
sbb
call
cld
pop
je
popf
adc
leave
jns
cmp
outsb
fidivl
cld
push
call
jl
mov
mov
sub
loope
sub
sbb
incl
in
xor
cmp
ja
adc
mov
in
cmc
push
dec
test
inc
mov
cmpb
test
imul
pushf
je
call
loopne
iret
dec
cmp
jecxz
pop
leave
push
lret
leave
cmc
mov
and
mov
and
jmp
gs
push
movups
sub
adc
jne
pop
dec
push
aad
cmp
mov
mov
adc
dec
arpl
push
sub
add
ljmp
mov
xor
push
add
daa
pop
stos
in
movsb
dec
adc
or
inc
cltd
jbe
mov
jmp
out
mov
movsb
push
imul
shll
sub
call
aas
ljmp
inc
cli
mov
lcall
and
adc
cmp
add
rcrb
jmp
ret
xor
adc
ficompl
xchg
das
clc
decl
jae
or
jne
add
push
shlb
sub
or
outsl
jb
lcall
jns
sbb
xor
xchg
cmp
sbb
xor
loopne
lret
push
mov
scas
mov
dec
mov
leave
or
arpl
jmp
incb
incl
rolb
loope
push
cmp
push
jl
add
rclb
lods
xor
daa
cmc
lahf
jge
dec
popf
xor
sbb
xchg
idivl
ret
push
std
fwait
decb
xlat
leave
ret
adc
or
or
sti
mov
daa
int3
mov
incl
sbb
mov
int3
je
add
insl
push
ja
inc
lcall
aas
std
cwtl
xchg
mov
sbb
adc
jmp
mov
jmp
jno
stos
addr16
subb
test
cmp
nop
and
pop
mov
movsl
dec
dec
gs
inc
sti
sbb
xor
add
out
xchg
jg
mov
pop
jno
mov
sbb
lea
aad
mov
jmp
mov
lahf
inc
data16
filds
and
mov
std
shrb
ficoml
adc
mov
and
call
incl
add
pop
ret
and
push
jns
sbb
pushf
ljmp
push
insb
push
cwtl
dec
out
int3
stc
cltd
dec
addr16
jns
push
lea
dec
stos
mov
mov
inc
fisttpl
mov
in
xor
push
fdivrl
pushl
xchg
lods
inc
fistl
stos
vpsubsb
adc
mov
dec
cmp
call
push
inc
test
imul
mov
jo
mov
sahf
xchg
inc
dec
jecxz
fadd
out
mov
mov
push
mov
jg
xor
test
add
sbb
cmpsl
and
mov
cmp
stc
adc
incl
fs
repz
in
lea
cli
inc
negb
pop
hlt
int3
mov
fbstp
pop
jmp
clc
inc
aam
cmp
sahf
adc
xor
cmp
mov
mov
push
xor
lds
scas
leave
push
test
mov
sub
lock
cli
adc
ret
sub
lods
call
mov
push
test
lock
dec
and
loop
sbb
int3
cli
cmpsb
pop
inc
push
jecxz
jg
push
int3
aam
jo
lds
pop
dec
dec
cli
int
and
in
sbbb
jbe
incl
lcall
cli
mov
jns
xchg
mov
sub
and
hlt
sbb
mov
test
push
jnp
mov
ja
pop
adc
sub
sub
mov
arpl
fsubrs
aaa
jnp
bound
sbb
mov
decl
loop
jne
pop
or
aaa
mov
in
testb
pop
inc
sahf
icebp
sti
aas
mov
and
decl
rcr
sbb
pushf
mov
push
inc
loopne
and
loop
push
mov
jecxz
xor
cld
decl
push
xor
scas
jg
ret
outsl
mov
mov
adc
test
fnstcw
scas
daa
popa
mov
mov
cmc
cmp
call
jo
jmp
nop
ljmp
xor
add
or
repz
incl
mov
and
pop
imul
out
lcall
sub
pop
dec
lcall
cmp
cmp
movsl
add
pop
hlt
and
or
shl
das
sar
cmpsl
xor
mov
lds
add
sub
out
push
mov
out
inc
js
jnp
loopne
xor
mov
mov
rolb
and
decl
test
cmp
cli
in
sbb
jns
rcll
sbb
xchg
mov
scas
mov
jo
imul
jbe
add
lock
adc
push
ljmp
jmp
notl
push
fisttpll
jge
mov
ficomps
push
std
cmp
push
lea
jmp
inc
sub
cmp
or
das
jae
and
mov
fiaddl
data16
mov
fdivr
outsb
fsubs
stos
sub
fcomip
pop
push
sarb
fldl
addr16
and
mov
decl
mov
in
xchg
aad
mov
mov
in
pop
loopne
lret
mov
fs
ficompl
add
dec
popa
icebp
test
jbe
mov
decl
out
popf
mov
push
arpl
pop
mov
jne
pop
leave
sbb
mov
push
ljmp
test
cli
shr
fs
dec
ret
lea
xor
lcall
sbb
lahf
push
cli
xor
pusha
mov
mov
xor
pop
xor
call
xchg
sub
adcl
push
cld
icebp
or
mov
push
aaa
push
icebp
js
stos
into
ljmp
int
add
pop
mov
repnz
cmp
rcrl
and
jo
fcomip
call
es
and
and
cmp
imul
rorl
cmpsb
es
dec
arpl
aas
lcall
addr16
xlat
out
jno
popa
push
adcl
xchg
and
ror
dec
dec
xor
icebp
call
in
dec
std
mov
repz
in
adc
pop
adc
out
add
add
in
stos
mov
loope
xor
shrl
cmp
lcall
inc
push
sub
and
pop
dec
lahf
and
outsl
js
pop
call
subb
and
nop
or
or
mov
hlt
icebp
xchg
adc
mov
xor
lods
lock
adc
jbe
lock
pop
xchg
jnp
mov
add
inc
sbb
sbb
cmpsl
dec
pop
adc
loope
stos
fadd
repz
or
jmp
mov
xchg
dec
nop
jmp
cmp
pushf
mov
mov
call
pusha
sub
sarb
inc
adc
xchg
push
dec
fsubs
pop
adc
cmpsb
add
mov
outsl
clc
jmp
fldt
dec
adc
xchg
xchg
pop
pushl
incl
notb
mov
jg
inc
fsubr
xchg
xchg
lcall
and
das
push
lds
push
fidivs
popf
push
das
test
adc
adc
xor
stos
sbb
jmp
cmp
popf
into
pop
bound
loope
call
mov
push
fs
rcrb
ror
decl
call
outsb
lea
cmp
clc
test
dec
loope
iret
std
pushl
add
jp
movsl
ds
jg
mov
jle
jl
add
pushl
mov
cs
inc
fbstp
imul
mov
xchg
rorb
test
cmp
decl
jns
pop
sahf
shrb
aad
pop
cmp
nop
pop
and
mov
sbb
lahf
jp
iret
mov
cld
push
cld
jg
icebp
scas
and
pop
insb
std
jg
stc
hlt
mov
jp
in
sbb
negb
pop
push
xchg
scas
jecxz
loop
cmp
jmp
push
inc
ud1
xor
incl
enter
imul
xor
sbb
fdivrp
ljmp
out
cs
push
dec
dec
gs
sub
ds
enter
decl
lret
pslld
lock
mov
xlat
xchg
jnp
outsb
scas
fildll
je
pushl
add
movsb
push
jle
push
sub
adc
test
inc
and
mov
shll
push
icebp
jmp
shll
lret
pop
adc
jecxz
sahf
xchg
imul
ja
rcrb
les
cli
incl
adc
rcll
rol
nop
cmpsb
inc
sbb
decl
push
push
inc
sub
xchg
inc
cmp
mov
insb
subl
mov
ret
fcomip
jmp
cmpb
mov
sub
imul
xchg
dec
insb
ljmp
je
bound
mov
cmp
mov
inc
mov
mov
lret
decl
test
xchg
mov
notb
push
popa
cs
jbe
icebp
pop
cmpl
call
push
cmp
inc
test
mov
adc
imul
scas
das
cmc
enter
add
ljmp
aaa
pop
pop
mov
pop
adc
dec
cmpsb
fists
adc
jl
psrad
mov
cmp
inc
insl
xchg
fwait
and
fildll
inc
cmpsb
inc
in
or
pop
js
daa
add
push
movsl
call
inc
sub
or
mov
out
mov
mov
jecxz
cmpl
daa
sub
call
mov
rcrb
jmp
cmpsb
inc
jns
inc
dec
push
pop
cmp
lock
out
ret
call
jmp
test
cmpsl
lret
sub
pop
xchg
pusha
sub
inc
dec
pusha
out
mov
incl
push
jb
fs
pop
int
push
shlb
mov
shll
sbb
leave
mov
pop
addr16
in
jno
add
sahf
daa
pop
insl
jg
pop
scas
in
inc
sub
mov
add
icebp
call
cli
xchg
outsl
popa
add
repz
mov
adc
mov
push
jl
mov
jp
test
dec
les
adc
xchg
dec
pop
lock
cli
mov
hlt
dec
repz
mov
out
push
stos
stc
les
xor
or
in
rcrl
dec
stos
push
cld
decl
cmpsb
stos
lret
cmp
cld
xchg
cmp
push
cmp
cmp
lcall
inc
jp
clc
or
xor
mov
mov
ret
pop
sar
jnp
dec
mov
mov
add
xor
lds
adc
push
adc
incl
sub
cmpsl
lahf
in
fwait
sub
sub
mov
add
call
loopne
fucomp
mov
pop
sub
mov
inc
or
pop
mov
es
outsl
jp
mov
add
xor
repnz
aam
ljmp
out
sbb
sub
jmp
pop
cs
jl
popa
test
sub
jo
scas
repnz
push
imul
ljmp
mull
xchg
aam
inc
adc
xchg
dec
pop
mov
test
mov
es
add
adc
test
xchg
fst
ja
sub
cltd
adc
mov
jnp
adc
aaa
sbb
sahf
pop
rcll
inc
repz
cltd
and
or
xlat
xor
jp
xor
popf
mov
pusha
test
or
pop
sub
dec
and
cmp
mov
cmp
fwait
andb
dec
or
adc
ljmp
cmpsl
xor
mov
outsl
icebp
hlt
cmp
push
mov
into
mov
sbbl
cmp
pop
push
or
mov
fistpl
xchg
and
out
dec
mov
jnp
outsb
dec
dec
jmp
mov
out
jmp
jns
in
mov
add
jo
dec
out
popa
jns
std
pushl
push
ss
cmp
iret
insl
mov
int3
push
nop
enter
mov
ljmp
ja
cmp
push
popf
stos
add
pop
int
insl
in
xor
shrb
ret
push
into
push
xchg
xchg
call
hlt
movsb
adc
sub
iret
mov
fildl
cmp
push
or
jg
addr16
faddp
add
sbb
scas
mulb
mov
jno
mov
call
rol
cmp
cs
insb
sub
push
add
lods
cmpsl
int3
push
xor
je
repnz
dec
sub
xchg
dec
push
adc
push
fiaddl
cmp
out
incl
fwait
mov
push
inc
insb
mov
test
push
call
dec
sub
xchg
arpl
enter
or
xchg
mov
mov
mov
mov
add
push
jo
pop
xor
fildl
idiv
sti
sbb
jecxz
insl
and
in
mov
and
push
and
mov
cwtl
je
into
mov
inc
sbb
aam
mov
test
sbb
std
mov
push
jl
add
add
mov
je
outsl
cmp
iret
dec
fildll
loopne
mov
imul
dec
jbe
fadds
test
dec
lods
dec
jg
das
in
mov
lret
or
sbb
dec
jl
aaa
std
or
lcall
mov
pushf
fnstsw
imul
pop
hlt
xchg
shll
fnstcw
cmc
js
in
adc
mov
xchg
popa
pusha
enter
mov
jl
inc
hlt
popf
les
pop
sar
push
dec
dec
jp
incl
adc
mov
fwait
sbb
popf
and
mov
sbb
mov
aaa
xchg
aas
mov
ljmp
cmp
outsb
fimuls
sbb
xchg
fs
iret
shl
sti
adc
xor
ljmp
arpl
aaa
or
xchg
sbb
push
sub
popf
decl
jmp
outsb
adc
aas
dec
mov
mov
lret
std
adcl
decl
cmpsl
push
push
and
pop
andl
xor
cmp
jno
mov
clc
movsl
mov
push
mov
fwait
jmp
insl
add
xlat
sar
jge
syscall
mov
iret
lods
in
add
adc
pop
adc
fs
das
and
mov
push
add
daa
pushf
arpl
xchg
xchg
repnz
cmc
sbb
mov
call
jb
mov
iret
ficoml
cmpb
cmp
or
fstpl
hlt
sar
jnp
or
jecxz
leave
sbb
jbe
in
dec
addr16
orb
mov
or
mov
push
mov
push
mov
lret
mov
push
xlat
scas
add
xchg
push
movb
and
stos
dec
aaa
cmp
mov
movsl
addb
out
xor
cli
bound
cmp
cmpsl
jmp
fnstsw
jno
decl
jecxz
xchg
and
inc
outsb
out
jo
xchg
test
pusha
shl
or
cmp
testb
clc
mov
or
shlb
lret
mov
jmp
inc
in
push
je
fdivs
inc
jecxz
xchg
daa
mov
pop
mov
pop
mov
cmc
or
ljmp
push
subb
leave
lahf
fisubs
jge
mov
mov
nop
sahf
dec
pusha
mov
and
fistpl
out
sub
sbb
mov
stos
or
dec
or
lcall
sbb
fwait
pop
sti
stos
cli
xchg
mov
mov
dec
fsubr
gs
sbb
rcrl
inc
xor
out
jne
lds
xor
js
fmuls
negb
xchg
or
incl
shlb
aad
arpl
jge
mov
outsl
mov
adc
sub
cli
cld
dec
fwait
add
and
add
repz
jp
jmp
data16
insl
aam
mov
mov
notb
mov
mov
fisubl
adc
cltd
lods
cli
cs
jmp
js
jns
mov
sbb
cs
cld
sbb
test
cld
lcall
add
sub
int3
es
cmp
arpl
leave
mov
lcall
pop
out
push
fcoml
movsl
scas
pop
adc
mov
mov
jecxz
sub
les
call
xchg
arpl
cmp
rol
popf
lods
test
push
cmp
and
sub
data16
sbb
lret
dec
pop
fs
xor
mov
dec
ljmp
stc
push
push
dec
adcb
call
cmp
loope
pushl
xor
mov
cmpsl
push
fsubrl
cmpb
add
mov
xchg
dec
mov
jge
out
aas
out
les
mov
out
test
jae
sbb
xor
iret
lahf
int3
mov
lcall
and
fs
mov
ljmp
loop
xor
cmp
int3
xchg
jno
sub
add
scas
ficoms
jns
call
ds
lea
stc
dec
cmp
add
push
sbb
mov
test
pop
jb
rolb
scas
lea
cmp
dec
hlt
push
mov
ljmp
push
push
decl
subl
dec
cmp
sub
imul
incl
pop
pusha
jl
cmp
jns
xlat
adc
clc
or
dec
imul
enter
xchg
iret
wbinvd
jge
jp
dec
sbb
lcall
or
push
adc
mov
jmp
jg
mov
lock
lret
incl
stc
pushf
das
incl
mov
xor
jns
int
sahf
cmp
in
sub
in
aad
ds
or
shlb
inc
push
aaa
jne
daa
mulb
je
test
xchg
push
push
std
aad
lea
push
and
jg
jbe
rorb
mov
mov
push
scas
jo
xchg
imul
pop
and
pop
mov
clc
popf
scas
mov
push
or
mov
loope
popa
cmp
daa
sub
sub
out
out
mov
push
xor
mov
and
pop
pop
mov
push
push
mov
call
daa
sub
sub
scas
and
mov
pop
jnp
loope
adc
or
fdivr
jg
dec
mov
negb
dec
les
mov
cli
aas
pop
adc
lcall
je
ljmp
cmpsl
mov
in
and
jl
dec
push
mov
fwait
subb
scas
lcall
or
test
fists
jne
insl
mov
cs
lret
cmp
ljmp
pop
in
cmp
mov
pop
xor
stos
adc
cmp
push
clc
mov
ds
inc
pusha
lock
shlb
xorb
dec
adc
adc
cmpsl
dec
or
push
jge
imul
cvtpi2ps
es
adc
out
add
mov
push
pop
in
enter
cld
aam
out
pushf
bound
mov
icebp
mov
bound
fcomip
add
repnz
xor
test
and
pop
sar
jbe
push
fdivrl
int
push
add
push
shrb
lock
out
xchg
pop
lcall
bound
xor
jecxz
push
cmpb
leave
cmp
fbld
and
push
cmp
daa
std
cmp
add
sti
xor
xchg
cli
mov
mov
ljmp
cmp
test
mov
push
push
subb
jl
mov
negb
add
sar
ljmp
and
sti
xchg
shll
xor
inc
iret
rclb
mov
mov
dec
out
into
mov
dec
pop
fbstp
xchg
sub
loope
cli
loop
jnp
xchg
arpl
shrb
sub
or
cmpsb
sbbb
mov
pushf
mov
inc
cmp
adc
scas
add
jo
inc
stos
xor
testb
dec
jl
add
lcall
jg
jbe
test
into
cmpsb
xchg
popf
fs
out
add
jmp
mov
test
fwait
das
jae
loope
inc
pop
cmpsb
push
pop
inc
pop
push
mov
lds
decl
je
jg
in
pop
call
lds
xchg
fstps
push
sub
lret
cmp
test
test
fstps
inc
jp
xchg
push
push
xchg
sbb
call
or
std
int
dec
in
pushl
cld
fstl
jns
arpl
ficomps
cmp
aam
ret
sbb
lcall
jnp
jno
repz
scas
das
mov
pusha
mov
mov
popf
fmuls
call
imul
adc
fwait
add
data16
pop
pop
jecxz
add
or
jge
mov
add
push
jle
push
and
sub
or
cmp
es
mov
sarl
jg
hlt
andl
jbe
call
mov
sbb
jmp
outsb
iret
bound
push
stos
push
dec
and
jmp
movsl
push
jne
lds
mov
clc
fst
outsl
fimull
xor
gs
dec
cmp
div
mov
call
popa
jo
lret
mov
fdivrl
jg
popf
pop
cmp
push
inc
sar
lcall
ljmp
out
jmp
jge
mov
repnz
adc
dec
sub
push
loop
decl
bound
push
xchg
add
inc
xor
test
and
push
nop
stos
jp
in
or
in
cwtl
lret
clc
faddl
mov
pop
inc
ss
pop
aam
xchg
arpl
int3
push
out
sub
add
or
lea
or
or
push
sub
mov
or
out
jmp
mov
in
push
xlat
out
int3
je
jg
and
push
sub
mov
adc
int
clc
ret
xor
mov
pop
cmc
incl
xlat
jge
mov
call
fsubrs
or
lret
sub
push
repnz
push
and
lcall
inc
call
notb
lea
decl
push
fstl
sbbl
clc
int
inc
inc
and
inc
je
push
sub
cwtl
out
je
lcall
aas
and
adc
enter
xchg
loopne
cwtl
jbe
sub
mov
mov
sbb
sub
push
pop
pop
fisttps
jp
rcrb
pop
in
mov
leave
lahf
and
mov
sbb
lock
and
lea
call
adcl
ficomps
bound
outsb
fisttpl
pop
bound
adc
ds
mov
movsb
ret
mov
std
imul
add
push
inc
mov
jmp
xor
cmpsb
lock
lock
inc
and
cmpsb
or
mov
js
xchg
mov
ljmp
jns
push
pop
fucomip
test
mov
push
idiv
incl
rcl
pop
or
les
pop
loope
xchg
cmpsl
lret
es
xchg
xor
scas
sbb
stos
and
sbb
dec
inc
add
sub
fidivrl
cmp
dec
out
ljmp
jle
mov
push
adc
xor
pop
dec
jne
jg
jmp
adc
cmc
nop
sbb
jmp
pop
jns
insl
cmp
inc
aaa
nop
int3
adc
testl
incl
pushl
cmpsl
outsb
and
dec
add
cmc
imul
lret
mov
scas
mov
inc
mov
cmp
push
pop
sbb
push
and
adc
mov
add
jmp
sub
jo
cmp
or
ror
sbb
adc
sbb
jg
xchg
pop
add
sub
lcall
jo
mov
insb
rorb
in
push
xlat
fbstp
pop
cld
lcall
sbb
fistpl
add
fcoml
push
xchg
and
sub
call
mov
fisttpl
push
add
pop
xchg
stos
jb
jle
or
adc
fmull
sarb
push
cmp
xchg
push
repz
and
mov
fbstp
push
mov
mov
gs
mov
daa
lahf
mov
push
jae
out
ljmp
mov
pop
xor
fmuls
jecxz
sahf
jb
pop
les
divb
int3
int3
ljmp
adc
aas
fucomip
mov
insl
imul
out
clc
ret
fsubrs
cs
inc
iret
sti
test
insb
xchg
sbb
popf
lcall
pop
loop
inc
in
add
lea
cmpsl
stc
test
mov
cltd
pop
xchg
int3
cli
mov
lock
add
ja
mov
ljmp
pop
inc
sub
mul
dec
movsb
pop
cmp
push
inc
or
rorb
popa
inc
mov
cld
inc
incl
shlb
into
mov
sbb
pop
rorl
xchg
outsl
out
push
lea
call
cs
pop
cmp
fmull
xor
nop
lock
cmc
ss
add
popf
insb
fldl
adc
pop
nop
push
cld
lahf
call
std
push
data16
ds
inc
ljmp
or
add
sahf
xor
or
dec
add
pop
push
dec
push
cmpsb
cmpsb
mov
add
cmp
push
cmpsb
cli
pusha
cmp
lcall
stos
sbbb
cmp
imul
pop
fwait
xor
insl
push
idiv
incl
inc
sarl
das
inc
dec
sbb
pop
pushf
mov
loope
jae
std
pop
rsm
ret
mov
lcall
jb
nop
bound
frstor
jle
idiv
push
push
mov
addr16
mov
inc
bound
sub
bound
sbb
sbb
mov
movsl
incl
insl
lods
lods
mov
and
div
xchg
lahf
aad
sub
fucom
mov
int
ljmp
repz
mov
ret
fs
sub
xor
lcall
cmc
pushl
jge
int
or
js
test
mov
repnz
adc
clc
ljmp
mov
mov
fstpt
mov
jmp
fs
ljmp
out
jno
sub
sbb
cld
int3
adc
or
jg
iret
cli
movsl
pop
icebp
in
out
popf
jno
nop
push
dec
imul
fbld
cmc
ret
mov
in
mov
jnp
mov
jecxz
add
mov
addr16
push
dec
mov
jl
xchg
cmp
test
xchg
addr16
lock
or
enter
jle
test
mov
pop
sub
jmp
fs
push
fcmovbe
stos
jbe
xor
jg
out
fcoms
cmp
dec
push
adc
fcmovbe
or
jae
inc
scas
sub
call
in
jbe
add
sbb
mov
adc
in
xor
jmp
or
pop
pop
fwait
test
push
xchg
cmpb
xchg
pop
push
jp
inc
repnz
mov
cmp
jae
inc
xchg
fisubs
push
cwtl
xchg
mov
pop
push
cwtl
lods
aaa
cmc
jno
cli
std
dec
mov
xchg
je
dec
stos
mov
test
dec
xor
sub
dec
inc
push
or
pop
icebp
jo
in
mov
fsubl
je
ja
xor
push
imul
decl
mov
or
adc
fwait
jle
add
mov
mov
sub
jb
mov
inc
pushl
xchg
stos
ljmp
shlb
shlb
lods
outsl
ljmp
xlat
cmp
sar
mov
pusha
sub
dec
pop
push
mov
adc
call
imul
andl
xor
pop
add
js
nop
insb
adc
jb
push
xor
incl
les
je
mov
jmp
sub
lods
inc
out
in
mov
xchg
lcall
dec
mov
add
fisttpll
sub
pop
bound
adc
inc
clc
ret
movsl
inc
decl
mov
or
dec
xor
mulb
push
or
lcall
ret
das
stos
jne
jge
xchg
in
sbbl
and
lea
inc
or
pushl
shlb
pop
inc
loop
push
ret
pushf
sahf
dec
xchg
fildl
stos
inc
mov
cmpsb
in
add
cmp
popf
call
pop
xor
arpl
sti
push
mov
adc
jno
lock
mov
in
call
scas
sbb
cmp
or
jmp
dec
addr16
xchg
adcb
dec
fwait
inc
mov
imul
inc
lret
cmp
and
xor
lea
xor
insl
mov
dec
adc
mov
lret
add
hlt
pushl
repnz
mov
idivb
scas
cmp
pop
mov
loop
push
shrl
mov
pop
mov
fbld
or
push
xor
or
mov
jp
pop
rolb
sbb
ljmp
ffree
and
fldenv
mov
lret
outsb
sub
and
andl
jmp
dec
add
xchg
stos
scas
mov
xor
rcrb
inc
mov
ja
dec
inc
xor
sub
cld
inc
dec
in
outsb
sbb
adc
sbb
mov
mov
cmp
push
inc
out
xor
xor
out
sahf
test
mov
push
dec
mov
lret
mov
ljmp
loop
sub
negb
xchg
out
stos
jnp
lods
cmp
lds
pushl
mov
add
push
fnstsw
cmpsl
es
mov
fnstenv
add
incl
sbb
aad
mov
inc
aaa
mov
fcomip
incl
stc
and
in
inc
imul
je
xchg
mov
mov
lcall
xor
sub
pusha
jo
and
pop
or
int
or
jnp
std
les
jecxz
cmp
incl
out
lods
loopne
jne
inc
fmull
dec
mov
enter
push
inc
icebp
dec
scas
mov
gs
dec
dec
adc
in
lods
xchg
or
xchg
iret
arpl
inc
inc
xchg
mov
idivl
push
stc
insl
xor
cmp
ljmp
les
jmp
jp
and
out
adc
mov
aas
out
cmpsb
aas
xchg
decl
fwait
out
in
stos
rep
rclb
xchg
pop
mov
mov
jl
in
out
cli
repz
mov
mulb
imul
sbb
lea
jmp
lods
jo
jnp
inc
mov
shrl
mov
jge
cld
mov
movsb
jle
mov
cld
mov
gs
cmp
xchg
cltd
ss
lock
addr16
adc
push
cli
pushl
scas
and
jo
inc
jns
cli
stos
or
or
mov
and
outsl
lret
push
cld
sahf
add
lock
sub
add
loopne
insb
fidivl
sub
jmp
ljmp
xor
xor
push
push
adc
fnsave
das
sbb
ljmp
ss
ljmp
rorb
cmc
sbb
adc
ljmp
or
sbb
inc
pop
cmpsb
lret
aas
add
xor
ljmp
pushl
xor
and
std
lods
aas
mov
cmp
dec
xchg
inc
je
outsl
dec
cld
pushl
or
push
inc
jbe
xlat
xchg
xor
mov
into
inc
clc
mov
cmp
mov
call
ljmp
push
std
fiaddl
cmpsl
daa
inc
lea
mov
and
lock
stos
pushl
cld
xor
popf
mov
xchg
mov
push
adc
sbb
and
mov
shll
sbb
sar
call
xchg
lret
call
push
jecxz
adc
xor
loopne
ja
xchg
mov
push
push
pop
cmp
mov
sbb
push
sub
adc
inc
jne
iret
mov
xlat
and
jns
jnp
fidivl
sub
xor
inc
inc
daa
decl
scas
mov
test
push
jecxz
mov
adc
mov
ljmp
and
iret
mov
mov
and
addl
incl
mov
jge
jae
out
lods
mov
xchg
imul
call
rclb
pop
cmpsb
jns
or
push
ss
sub
decl
sti
aaa
mov
movsb
rclb
inc
subl
or
mov
pushl
daa
mov
mov
ja
jmp
cmp
hlt
mov
push
test
addr16
adc
cmp
pop
gs
push
pop
popa
out
add
pop
jge
outsb
inc
sbb
inc
sarl
or
imul
lock
andl
pop
stos
scas
sub
sub
pop
rorb
and
cmc
mov
std
and
aad
and
dec
addr16
in
call
inc
sarl
push
popl
cmp
mov
ret
inc
mov
or
push
jl
repnz
push
inc
imul
imul
mov
pop
aas
fisttpl
rolb
out
push
mov
inc
pushf
addr16
test
aam
pushl
push
addb
xchg
nop
sub
aad
daa
and
dec
dec
in
test
lcall
mov
stos
in
mov
sti
xchg
push
mov
sbb
xor
lcall
lods
pop
fs
cld
mov
nop
sbb
push
push
mov
ret
mov
sarl
jg
stos
decl
or
fidivrs
xor
fcoms
add
incl
push
jne
and
mov
push
cld
dec
icebp
push
pop
test
inc
test
call
pop
cmp
add
pop
jle
xchg
aam
icebp
or
mov
call
sub
in
push
popl
or
sbb
pop
xor
lcall
js
add
scas
divl
fidivrl
mov
ss
mov
xor
dec
call
loope
fnstenv
add
push
push
loop
in
pop
pop
nop
pop
fstpl
insl
sahf
jmp
mov
mov
pushf
sti
and
pop
repnz
or
push
neg
sbb
call
hlt
pop
in
pop
cli
sub
jns
add
dec
cmpsb
test
xchg
mov
cli
test
and
xchg
xchg
rcl
cmp
push
dec
aas
out
fsubr
and
test
pop
mov
jg
test
cmpsl
out
xor
jp
cld
mov
minps
fcomip
pushl
jb
mov
stos
mov
repnz
sarl
into
inc
add
add
loopne
push
into
fwait
lds
lahf
outsb
adc
sarl
mov
fadd
aas
add
xchg
inc
outsl
and
mov
push
pop
push
dec
push
mov
ljmp
push
fs
ret
int
shll
xor
mov
fadds
adc
lret
cmp
repnz
jle
push
inc
mov
or
fadd
push
or
lcall
loope
pusha
inc
je
paddusb
mov
and
xor
mov
hlt
fiadds
fs
push
mov
nop
mov
repnz
repz
dec
rorl
mov
pushl
xor
loopne
sbb
push
xor
mov
mull
dec
push
adc
and
adc
call
leave
mov
out
push
lret
sub
hlt
orl
fnsave
xor
jo
call
ret
xor
fistpll
out
and
dec
sahf
sub
nop
dec
mov
in
jmp
cwtl
jne
xor
push
lock
icebp
lret
ljmp
lcall
inc
lret
xor
lods
cld
lods
pop
lock
addl
pop
inc
xchg
xor
pushl
pop
push
xor
into
xor
push
imul
jp
push
insb
add
outsl
fsubs
add
and
popf
into
inc
mov
rcrl
or
cwtl
sarb
xchg
stos
jns
inc
sbb
or
ljmp
cld
dec
cmp
jmp
xchg
movsl
leave
dec
xor
movb
sbbb
mov
decl
lea
rcll
in
out
or
sbb
xor
es
lods
dec
jmp
lcall
sub
cmp
iret
lret
fsubrs
inc
xchg
or
pushf
sbb
insl
mov
decl
rclb
xchg
pushf
pop
or
mov
adc
pop
pop
ss
shlb
fdiv
mov
xchg
inc
stos
mov
mov
and
test
lods
rolb
inc
sbb
in
pushl
jp
xchg
in
xchg
lret
sub
fstps
sti
and
scas
insb
add
clc
ljmp
cmpb
or
out
mov
xchg
pop
insb
lahf
aad
sub
jmp
dec
movsb
pushl
mov
sahf
rcr
les
mov
fwait
insl
xchg
dec
dec
daa
testl
leave
mov
sti
repz
notb
movsb
sub
mov
sarl
pop
in
fs
lock
ljmp
sub
push
push
inc
int3
insb
push
mov
pop
pushf
imul
lret
lahf
sbb
jbe
dec
jg
decb
stos
xchg
out
movsb
call
inc
test
pop
lods
js
inc
push
xor
incl
out
sbb
sbb
fsubs
ficoml
ret
push
mov
inc
jno
incl
pop
adc
push
imul
test
cmp
jecxz
or
gs
push
fidivs
jp
add
inc
jp
push
int3
mov
ret
push
cmpsl
and
dec
xlat
sub
sub
lcall
and
add
mov
incl
lea
mov
add
cltd
jns
mov
jne
sbb
lcall
out
mov
outsl
add
cmc
or
lcall
jns
popl
sbb
call
in
mov
push
mov
mov
imul
adc
dec
or
je
add
mov
jbe
or
nop
imul
lcall
cmp
data16
fisubl
imul
inc
nop
movsb
cwtl
push
dec
sbb
add
push
cmp
sub
xor
pop
popf
cmp
sbb
ljmp
sar
gs
into
mov
add
push
rorl
insb
mov
push
push
inc
andl
jae
fildl
and
imul
mov
sbb
sub
pushl
ja
mov
fiadds
popf
xchg
cli
cltd
push
imul
in
imul
call
jne
outsb
pop
in
jl
jge
scas
mov
push
adc
mov
jg
pop
mov
jmp
xor
addr16
out
popf
hlt
xchg
push
jecxz
add
or
pop
gs
xor
ret
inc
outsb
push
push
mov
inc
icebp
jg
inc
ja
cmp
test
lock
jecxz
push
jl
lcall
add
cmpsl
cs
shrl
ss
mov
ljmp
dec
jae
cwtl
push
mov
xchg
cmp
xchg
sbb
push
enter
and
call
iret
add
dec
sbb
mov
sti
sbbl
jo
cmp
mov
imul
lret
ljmp
and
and
jmp
insb
cli
push
mov
xor
incl
adc
cld
outsl
cmc
mov
imul
pop
pop
outsb
jo
push
push
outsl
jno
inc
dec
add
inc
daa
and
push
pop
hlt
xchg
xor
xchg
fimuls
test
out
jb
lahf
cmp
add
lahf
sub
push
aad
mov
sahf
in
push
test
xlat
dec
xchg
imull
jnp
pushl
cmpsl
and
mov
loop
mov
cmp
push
lock
mov
and
mov
ja
cmp
loop
inc
cmp
lds
or
inc
pop
sar
dec
ja
cmp
rcrl
aas
xchg
call
les
pop
lock
pop
mov
mov
push
decl
lods
loope
imul
cltd
fbstp
pop
sub
sti
iret
movsb
bound
fnstcw
or
xchg
sub
lcall
aas
mov
shrl
sbb
add
mov
cld
sub
mov
incl
and
and
push
in
popf
enter
mov
outsl
sub
sub
adc
cld
pushl
push
or
movsl
outsl
pop
rol
dec
mov
inc
aam
incl
push
clc
ljmp
lcall
push
sbb
imul
imul
ss
not
es
imul
xchg
repz
movsl
adc
test
addr16
ss
aam
pop
dec
movsb
sub
imul
xchg
push
aaa
lods
je
sbb
scas
lahf
dec
sub
xchg
call
sahf
mov
jbe
dec
xchg
mov
stos
test
sbb
into
xchg
jmp
fwait
pushf
lcall
lods
repz
insb
data16
pushfw
add
out
adc
cld
push
sub
stos
in
in
data16
pushl
loop
test
jae
adc
dec
fildll
mov
xor
push
in
dec
xchg
push
sub
or
lds
sub
jp
orb
sbb
call
adc
jmp
mov
cmpsb
push
enter
jbe
into
in
ljmp
or
pop
ret
cld
xchg
jnp
xchg
int3
lds
out
mov
adc
pop
out
in
inc
movsl
lods
ud0
jmp
scas
out
jl
jnp
lret
aam
cmp
adc
mov
and
dec
or
sar
decl
push
inc
mov
mov
rcr
das
stc
scas
lcall
mov
fisubrs
jg
pushl
push
add
mov
add
orb
nop
cmp
xor
jmp
jl
pusha
mov
pop
sub
mov
mov
and
jle
iret
push
jmp
fldt
insl
jmp
icebp
and
jae
mov
enter
cmp
lret
cmpsb
shrb
dec
mov
lock
aaa
lds
jp
jmp
stos
mov
xor
shr
inc
repnz
out
pusha
sbb
dec
nop
push
ds
icebp
dec
add
or
loopne
sbb
jbe
jg
repnz
ror
jo
push
add
test
sub
mov
ljmp
push
mov
sbbl
stos
add
outsb
out
loope
ljmp
out
test
call
ficompl
mov
pop
dec
cmpsb
ja
fucomp
ja
fmull
call
mov
add
lcall
fcomps
adc
out
mov
aaa
mov
sbb
push
test
xchg
enter
pushl
sbb
jb
push
and
add
and
addb
lea
call
mov
cmpsl
aad
out
jne
mov
sub
mov
adc
enter
ja
add
mov
xchg
sbb
ljmp
mov
insl
stos
stos
jb
stos
xorl
xor
ja
das
clc
in
nop
cltd
mov
imul
shl
mov
mov
ja
pop
dec
sti
cmp
cmp
pop
rol
hlt
adc
sbb
jmp
daa
and
daa
dec
in
pop
shrb
dec
orb
jo
pop
enter
push
fidivrl
xchg
xor
add
shl
mov
mov
cmp
call
and
cli
dec
push
jge
call
fdivl
mov
xchg
data16
es
out
lret
xor
sub
jl
js
popa
std
dec
test
pop
imul
jbe
xor
stos
dec
jg
pop
cmp
jmp
cmp
aam
out
mulb
out
clc
incl
cmp
mov
cwtl
mov
mov
inc
pop
out
or
cmp
lods
push
cltd
push
cmp
or
sub
pusha
ret
dec
js
push
dec
ljmp
mov
jecxz
adc
adc
data16
andb
jmp
mov
push
xor
lods
lds
leave
xor
lret
cmpsb
jns
push
test
lcall
lret
les
in
add
xor
cmpsb
mov
gs
scas
stos
add
and
fs
ss
adc
idiv
add
mov
jp
lods
pushl
fistpl
scas
jbe
xor
clc
or
call
arpl
es
xor
dec
pushl
out
sub
sub
xor
jmp
pop
lods
mov
mov
mov
idiv
int3
aaa
and
icebp
mov
push
add
pop
test
int3
mov
in
sub
lahf
clc
push
rcrl
subb
pop
sbb
sub
fwait
popa
cli
inc
ljmp
cmp
inc
sahf
out
mov
or
adc
fiaddl
inc
cmpl
call
xor
outsl
and
and
ret
xchg
gs
clc
or
dec
mov
sub
push
or
fcomip
cmp
dec
or
xchg
stos
mov
push
dec
gs
cmp
ljmp
scas
clc
xor
mov
or
mov
pop
mov
push
jp
incl
imul
sbb
imul
sbb
jb
flds
roll
pop
aaa
pop
lcall
jno
mov
repz
icebp
jmp
aaa
arpl
in
sub
psubsb
xchg
mov
mov
xor
cmpsl
hlt
mov
jb
xlat
push
cmp
not
int
jg
popa
imul
sbb
and
mov
push
ljmp
mov
mov
out
and
mov
into
add
or
lds
inc
addr16
pop
cmp
adc
sub
incl
sbb
aad
add
ficoms
sbb
out
cmpsl
dec
insl
js
mov
movb
test
and
inc
fsubrl
rcrl
lock
ret
rorb
scas
push
fcomp
cli
insl
test
lea
aaa
stos
sbb
lcall
pop
inc
pop
add
mov
push
pop
pusha
shl
jb
xchg
ret
iret
add
ljmp
xlat
push
xchg
and
in
adc
int3
mov
mov
sub
imul
cmp
pop
nop
mov
fmulp
out
or
adc
out
push
jns
xor
das
mull
cmc
sarb
push
pop
mov
nop
incl
in
add
addr16
and
fists
sbb
adc
pop
jnp
rol
out
decl
cli
sbb
jg
pusha
fstp
xor
sub
popa
push
push
jnp
mov
test
dec
lea
popa
lods
lahf
cmp
xchg
gs
notb
int3
sub
ljmp
fwait
sub
jmp
lods
bound
fsubrl
xchg
mov
shlb
ror
xchg
add
jmp
jmp
mov
add
out
xchg
cs
aaa
mull
iret
outsl
cwtl
jg
jg
pop
daa
imul
add
es
pusha
sti
imul
cmpsb
in
lcall
jmp
outsl
cld
mov
ja
incl
or
jmp
lods
lcall
sub
fnstsw
pop
stos
jge
cli
sbb
in
notl
shlb
pop
aas
fiadds
xor
sbb
jg
dec
leave
jne
pop
lea
and
andb
cmp
mov
adc
fwait
inc
sbb
mov
sar
mov
bound
movsb
mov
lcall
shlb
sbb
push
push
mov
or
rolb
hlt
decl
shll
jbe
push
scas
insb
rolb
stos
jmp
dec
jmp
add
xor
jnp
cwtl
je
stos
adc
sub
pushl
inc
add
sti
pop
push
clc
cwtl
hlt
xchg
lret
mov
dec
int3
out
mov
lret
lahf
lcall
mov
mov
add
add
mov
pushl
bnd
xor
push
pop
inc
cli
testl
shl
mov
arpl
nop
into
lahf
insl
add
ja
arpl
in
jae
sbb
nop
or
int3
mov
cmp
inc
out
sub
js
jecxz
and
mov
jb
dec
pop
hlt
mov
jmp
sbb
insb
ja
not
push
adc
les
mov
mov
ror
sub
out
dec
mov
stos
aaa
cld
xchg
sahf
mov
mov
aam
push
dec
test
pusha
add
fildl
xchg
mov
popa
ret
data16
fmul
push
mov
cmpsl
cltd
sbbb
jmp
out
mov
push
adcl
lcall
jmp
inc
add
fsubs
out
sbb
outsb
cs
or
push
std
inc
fcmovb
shll
jg
call
arpl
ds
add
jns
inc
or
arpl
xchg
or
mov
mov
testb
add
mov
cmp
nop
sub
out
inc
push
or
out
and
jne
mov
lea
jbe
out
pushf
cltd
dec
outsb
jmp
out
rclb
in
decl
mov
rol
sbbb
cmpsl
adc
into
popf
xlat
les
or
or
std
repz
mov
jno
xchg
movsb
nop
aas
fwait
ret
pop
loope
and
cli
adc
out
add
jne
icebp
xchg
shll
ret
ficomps
jb
adc
cmp
jns
and
or
or
xchg
cmp
sbbb
add
pushw
adc
jmp
mov
pop
mov
jg
jmp
ret
icebp
ret
test
adc
sub
hlt
fwait
hlt
sbb
pop
loop
pop
das
loopne
call
std
jno
jbe
mov
inc
out
mov
ficoms
jo
mov
push
jle
das
and
push
stos
jg
xchg
sub
push
xor
scas
out
sub
aaa
adc
and
jnp
rcr
or
mov
mov
adc
test
ljmp
cltd
shll
lock
push
loopne
in
or
sub
inc
outsb
fcoml
mov
jmp
mov
inc
in
addr16
inc
stos
in
into
cmp
test
push
lea
aad
call
adc
loop
pop
out
adc
sbb
jae
ss
mov
aaa
xor
imul
pop
les
add
orl
dec
clc
add
and
shll
add
pop
mov
jo
mov
jne
lret
push
xor
decl
inc
jns
jns
movsl
inc
leave
in
push
xchg
dec
out
push
sbb
inc
frstor
scas
xchg
test
jnp
stc
in
sub
mov
sbb
cs
mov
mov
lret
into
mov
cmp
mov
mov
add
test
lcall
pop
jl
inc
and
addb
pop
xchg
or
jne
lcall
mov
lahf
adc
add
lret
pop
decl
mov
test
outsl
inc
xchg
test
jecxz
or
shr
mov
cmp
popa
notb
mov
jno
dec
sti
push
xor
lret
inc
sub
incl
lret
test
cli
adc
mov
pop
adc
fwait
dec
addr16
ljmp
sub
mov
ret
fs
pop
sub
insb
loopne
and
xor
lods
aad
lahf
scas
pushl
sub
add
push
mull
inc
data16
es
movsl
cmp
iret
decl
aas
adc
test
rcl
add
mov
cmc
jns
insb
cmp
lds
dec
push
lock
out
push
out
in
fwait
mov
sbb
pop
in
inc
sbbl
mov
int3
daa
inc
or
mov
out
fcomip
push
fs
dec
ds
mov
xor
xor
outsl
push
not
mov
leave
lahf
outsb
lret
out
pop
enter
lret
call
ret
js
pop
mov
ja
jg
stc
jmp
popa
inc
iret
add
jle
jne
movsb
mov
in
xchg
fcomip
ffreep
add
adc
mov
in
push
jae
mov
mov
mov
enter
lcall
ljmp
pusha
pop
push
movd
mov
scas
aad
test
insl
ds
mov
cmp
and
ja
incl
or
imul
xor
out
lcall
into
out
dec
and
mov
sub
cmovle
xchg
cmp
xchg
addl
call
scas
loopne
test
scas
std
lods
fidivrl
pusha
adc
stos
pop
les
fcomi
jb
clc
mov
dec
mov
xchg
push
push
fistpll
out
mov
in
imul
ret
xor
int3
lods
mov
or
call
pushf
jl
cmp
jnp
loope
push
rolb
fs
xchg
out
ret
shrb
mov
stc
jne
sbb
mov
mov
pop
into
add
inc
xchg
mov
mov
stos
sbb
xor
and
mov
aam
xchg
sbb
ljmp
and
inc
inc
popa
lahf
mov
enter
push
or
ljmp
sbb
aam
fwait
sub
sub
mov
xor
cs
or
mov
mov
jnp
repz
outsl
inc
sbb
loope
mov
jecxz
xor
jmp
mov
frstor
mov
cwtl
push
adc
aas
in
cmp
popf
jg
pushl
xor
and
add
pop
jns
xor
mov
mov
mov
decl
inc
inc
pop
mov
and
mov
pop
repz
inc
js
inc
iret
mov
call
jmp
or
in
ljmp
add
sub
pusha
xor
lcall
loop
test
xchg
fildll
lods
pop
in
push
ljmp
sbb
in
sbb
mov
pop
shld
pop
adcb
jo
ljmp
ret
sub
jb
in
mov
aad
xchg
lods
add
arpl
shl
out
cmpsb
cmp
sbb
adc
mov
pop
mov
ljmp
and
mov
enter
cmp
lcall
fndisi(8087
mov
lods
leave
shr
cmp
sbb
in
adcl
in
popf
divb
iret
push
add
das
fdivrs
mov
das
mov
enterw
sbb
add
les
dec
ffree
cmovge
jmp
je
shll
out
repnz
mov
or
dec
mov
lock
inc
inc
add
incl
mov
scas
mov
sti
push
mov
pusha
add
jns
jg
lock
adc
or
xchg
dec
loop
incl
mov
and
int3
push
push
aaa
and
cmp
jecxz
xchg
pushf
sub
imul
jmp
mov
out
cmp
jg
xchg
push
sub
cmpl
pop
inc
decl
mov
enter
xchg
xchg
nop
push
lods
pop
jo
pop
cmp
in
scas
call
insb
lcall
pushl
pminub
mov
add
cs
pop
aam
das
lcall
imulb
mov
jp
les
lcall
mov
call
push
cwtl
scas
add
shl
subb
mov
lcall
ss
out
xchg
jmp
sub
mov
repnz
sub
fs
icebp
in
or
mov
lds
sahf
fbld
pop
test
mov
imull
shrb
push
xchg
add
inc
std
pushl
mov
cld
mov
dec
mov
test
js
outsl
mov
sahf
insl
dec
incl
jbe
movsb
add
aad
cmp
test
mov
sbb
push
dec
push
mov
pop
push
xor
in
xchg
mov
les
xor
mov
and
inc
lret
out
and
pop
vmovhpd
push
mov
or
push
out
pop
and
loope
shlb
call
mov
clc
pop
xchg
cmpsl
inc
fimuls
xorl
mov
call
xchg
test
dec
sbb
add
or
aad
call
addb
daa
mov
shrb
pop
ret
jmp
cmp
ds
add
or
jp
ljmp
fldl
mov
sti
jge
mov
es
inc
sahf
shrl
mov
sbb
sub
jl
call
adc
lock
fdivs
icebp
aaa
mov
decl
repz
and
cli
movsb
adc
adc
mov
sub
rolb
and
push
out
ljmp
pushf
cmp
js
mov
hlt
xor
sbb
repnz
ljmp
call
pop
mov
lcall
xchg
cld
cmpsl
push
mov
push
push
insb
jmp
movsl
fsts
faddp
fs
decl
popf
xchg
fwait
loope
mov
pop
out
lods
imul
sar
stos
mov
pop
push
adc
sahf
mov
addl
pushl
adc
cltd
sub
imulb
popf
pushf
mov
jmp
xchg
hlt
sbb
in
mov
jmp
sbb
repz
jmp
cmp
jle
mov
out
pushf
iret
popa
xor
or
call
pop
into
nop
cmp
lea
jne
ja
jnp
jno
ret
xor
jecxz
mov
and
stc
pop
cmp
repnz
mov
lahf
xor
pop
cmp
sbbb
ljmp
pop
dec
outsb
cmpsl
out
cli
sbb
push
jp
push
push
cmp
adc
mov
decl
cli
in
fidivrs
and
arpl
xor
cld
pushl
cmpsl
dec
ja
fstpl
je
jb
aas
mov
xchg
daa
sub
push
or
call
and
push
mov
movsl
and
hlt
enter
cmp
sub
aam
fs
in
jmp
and
cmpsl
pop
mov
mov
fs
inc
mov
cwtl
data16
incl
push
stos
sbb
pop
cmpsl
sub
mov
jecxz
pushf
xchg
or
out
in
je
lock
sbb
lret
jne
repz
mov
cmc
ljmp
call
jb
xor
dec
mov
addb
or
lcall
mov
daa
mov
mov
mov
inc
dec
pusha
push
fmull
incb
mov
xchg
call
ss
adc
scas
inc
xchg
sub
adc
mov
das
mov
ret
ljmp
and
sub
and
sbb
mov
mov
mov
inc
rorb
jle
dec
inc
xor
mov
insb
repz
fistl
cltd
push
test
add
cmp
jnp
pop
dec
xor
data16
into
jno
add
stos
lahf
push
lret
pushf
das
xorb
push
pop
fmulp
movsb
dec
movsl
stos
mov
ljmp
shrb
scas
das
jno
push
les
loopne
pop
repz
call
jp
enter
push
test
add
fndisi(8087
gs
jns
mov
cmp
cld
icebp
test
or
mov
ljmp
pop
outsl
push
imul
xchg
shll
or
nop
pop
add
test
pop
loopne
ljmp
push
rclb
jge
mov
pop
push
filds
hlt
ljmp
in
mov
lods
sub
pop
pop
add
jb
cmp
inc
subl
cmp
outsl
add
imul
dec
inc
ret
cmp
ds
add
ja
lret
call
movsl
jo
or
jb
adc
decl
or
cmp
push
bound
arpl
inc
push
xor
xchg
daa
bound
sahf
lcall
stos
add
push
lea
imul
cmp
push
ljmp
cli
call
fsubr
packuswb
pop
lahf
in
jo
pop
stos
mov
lcall
mov
leave
sub
lods
and
iret
mov
add
aaa
fldpi
pushf
cmp
jno
add
ljmp
sbb
mov
das
and
ja
enter
out
mov
mov
dec
cmp
mov
cmp
fdiv
and
push
mov
dec
mov
and
decl
mov
bound
in
or
ss
or
xchg
mov
cli
push
adc
movsl
jb
cli
int3
ret
inc
cli
stos
push
shr
pop
iret
and
test
decl
push
pop
fcoml
inc
push
pop
mov
mov
xor
aas
lcall
in
aaa
mov
dec
fs
mov
cmp
add
cmp
in
out
lea
xor
push
mov
jg
call
pop
sub
pop
imul
in
call
mov
es
mov
pop
scas
dec
ja
aaa
sbb
mov
rcr
xor
stos
dec
pop
xchg
inc
movsl
jecxz
dec
std
inc
cmpsb
jns
aas
mov
out
inc
inc
loope
fcmovu
pop
dec
inc
xchg
jb
and
xor
jo
test
inc
xor
decl
cmpsl
ret
pushf
inc
addr16
sub
inc
or
sbb
mov
dec
sub
and
cmc
enter
fmull
sub
mov
ljmp
aaa
and
sarl
bound
sub
cmp
call
decl
aam
ret
addr16
data16
and
dec
sub
xorl
inc
and
shlb
and
inc
jecxz
les
push
sub
cmpsb
ret
nop
add
cmp
or
shrb
add
es
mov
lock
in
fs
aas
mov
sub
push
test
incl
add
pop
mov
push
int
shrl
sbb
idiv
pushl
clc
dec
clc
pop
adc
cmpsb
leave
popf
xor
test
in
out
bound
call
scas
mov
int3
cmp
scas
dec
int3
cmp
jle
dec
adc
cltd
negb
cli
bound
inc
sbb
push
inc
out
fidivs
push
data16
pop
call
andb
mov
call
sbb
jbe
push
sub
xchg
fidivrl
mov
ret
loope
jge
repnz
xchg
push
xor
fcomip
mov
shr
js
icebp
xor
xchg
sbb
lret
lods
shrb
inc
std
in
fistpll
sahf
xor
fadds
cwtl
fnstcw
xchg
scas
pop
mov
mov
repz
cmp
mov
loop
cmc
push
out
dec
leave
cli
mov
cmp
call
pop
and
mov
cld
push
fcomps
in
add
inc
push
cmp
xchg
dec
pop
cmp
mov
jb
dec
cli
mov
lahf
aad
addb
cmp
dec
icebp
xchg
jmp
mov
out
cwtl
incl
jl
adc
and
pushf
js
or
adc
xor
cld
sub
sti
sbb
push
sub
add
pavgw
cmpsl
cmpsl
xor
std
movsb
xchg
ljmp
or
sub
xchg
add
shrb
cltd
data16
stos
pop
mov
pushl
or
mov
add
lock
icebp
dec
xor
inc
sarb
in
pusha
in
fadds
cmpsb
pop
inc
fistpl
adc
clc
and
daa
and
aas
inc
ss
cmc
mov
mov
incl
add
repnz
jle
fneni(8087
ret
mov
and
shll
lcall
jmp
jno
or
sbb
pushl
mov
push
int3
add
push
jge
fdivs
adc
ljmp
push
xchg
jge
aad
jmp
roll
les
repnz
hlt
inc
jne
push
ds
ret
sbb
test
pop
xchg
aam
mov
sub
sbb
and
sub
mov
add
mov
incl
bound
sub
xchg
imul
dec
imul
push
sub
mov
pushf
xchg
scas
mov
jmp
xchg
arpl
or
data16
push
icebp
sbb
icebp
incl
dec
dec
lock
aad
jge
andl
in
std
inc
into
cmp
jmp
add
popl
sub
mov
push
xchg
adc
mov
add
mov
mov
outsl
lea
push
test
andl
lcall
fistpll
mov
and
insb
roll
xchg
lods
cmpl
int
das
mov
mov
mov
sbb
xor
push
ja
xchg
xchg
es
mov
in
xchg
push
lahf
pop
ret
data16
add
dec
xchg
lds
out
xchg
xchg
andl
lcall
jbe
daa
and
in
leave
mov
fisttpl
adc
test
xlat
daa
ljmp
lret
add
insb
push
mov
fistpl
jp
stc
xchg
cmpsl
sub
lcall
fldcw
mov
insl
je
dec
add
lods
xchg
sub
fmull
jmp
test
cmc
inc
lock
dec
pop
xchg
xchg
push
in
mov
int
and
jg
aad
imul
dec
xor
outsl
andb
xchg
lcall
imul
inc
mov
xor
dec
outsl
adc
inc
lea
das
and
push
orb
orb
add
push
ret
mov
in
aam
gs
jno
int3
out
mov
decb
and
dec
and
inc
xchg
jg
fdivrl
lret
xchg
out
and
lcall
aam
ja
pop
imul
loope
jg
adc
testb
mov
sti
xchg
or
incl
clc
insl
sbb
in
es
mov
repnz
sahf
and
dec
add
jo
in
test
stos
test
mov
push
stos
add
adc
adc
enter
mov
mov
xchg
or
xor
je
mov
inc
mov
dec
fsub
xchg
mov
shl
or
jg
fstpl
add
pop
push
mov
fdivl
stos
pusha
cmc
divb
decl
and
sub
loope
shll
imul
std
xor
xlat
adc
sar
push
les
mov
mov
jecxz
jno
ds
in
movsb
sub
sti
mov
lods
jecxz
inc
xchg
cmc
lahf
and
fidivs
popf
push
sub
idiv
push
sub
adc
or
or
cmp
lock
es
es
mov
xchg
mov
mov
or
mov
sbb
clc
push
loop
dec
ret
call
call
jno
loop
cmc
push
sbb
and
mov
dec
stos
lods
inc
mov
cmp
ds
cmpsb
decl
insb
inc
and
shrl
adcb
mov
adc
mov
inc
cli
and
mov
jo
mov
pop
or
fucomip
jo
xchg
push
add
ljmp
into
dec
jle
divl
jge
fnstcw
jecxz
pop
out
dec
pop
jmp
push
shlb
mov
inc
imul
fbstp
or
std
push
adc
repnz
into
stos
fidivs
mov
movsl
mov
pop
mov
das
adc
aam
xor
adc
fidivs
call
push
inc
mov
push
lea
cwtl
or
cld
icebp
movl
dec
push
jge
movsl
mov
decl
xor
ficoms
mov
subb
divb
clc
loope,pt
adc
dec
subl
fs
sahf
dec
outsb
sub
ljmp
decb
jne
add
push
cmpsl
out
je
or
and
push
rcrb
push
mov
cmpl
out
dec
push
loope
stos
lahf
scas
add
incl
iret
jbe
push
and
popa
mov
movsl
inc
sbb
adc
ror
inc
sti
std
mov
cmp
int3
mov
add
fadds
cmp
je
xor
outsl
mov
jno
fisubl
pushl
or
test
and
negb
mov
push
enter
repnz
loopne
std
decl
mov
sar
aas
clc
dec
fisubrs
stc
scas
les
ljmp
mov
mov
cltd
iret
jmp
push
inc
ret
pushf
lock
sar
stos
adc
pop
arpl
pop
pop
push
xchg
adc
jmp
outsl
out
pushf
and
decb
push
mov
stos
or
pop
fs
jp
or
xor
pushl
decl
jmp
insb
or
aam
cmp
dec
iret
aam
add
inc
call
fsubr
aad
jecxz
dec
testb
and
call
push
call
jg
mov
outsl
loope
insl
fisubrl
sbb
push
mov
or
sub
mov
out
repnz
pushl
int
cli
mov
mov
cld
iret
adc
adc
cmp
insb
mov
mov
lods
out
iret
mov
icebp
ljmp
or
scas
movsb
ffree
mov
inc
scas
and
stos
lcall
iret
pop
out
xchg
imul
insl
mov
push
push
ljmp
sar
imul
push
fiadds
repnz
icebp
mov
sbb
add
incl
ds
and
mov
adc
mov
sbb
mov
cwtl
xchg
incl
cmp
das
mov
dec
ret
rcrl
fwait
pusha
or
loop
sbb
call
xor
ss
out
in
mov
call
frstor
jmp
shll
les
pushf
outsl
outsb
movsb
sti
fstps
call
fcmovnb
pop
lock
repz
xchg
lret
dec
mov
jb
ljmp
js
mov
lcall
xor
mov
jge
shrb
adc
push
aad
int3
sbb
add
call
or
ret
cmpsl
jo
lods
fs
dec
push
enter
test
shrb
push
and
and
xchg
shl
sti
jmp
push
cltd
adc
dec
pop
xor
inc
loopne
adc
incl
push
decl
mov
inc
imul
jp
and
icebp
std
call
clc
out
into
push
jno
jl
pop
testl
jle
mov
popa
aad
push
xor
inc
rolb
fbstp
test
pusha
cmc
jo
mov
adc
push
testb
jmp
jae
mov
xchg
imul
icebp
cmp
jg
decl
fidivs
cmp
push
sbb
mov
outsl
lret
push
xlat
lock
jmp
mov
shl
insl
dec
push
and
pop
mov
mov
mov
pushl
std
dec
mov
mov
jae
aas
mov
jmp
sub
imulb
aaa
stc
daa
sub
fs
mov
in
int3
fldt
std
jg
pushl
mov
adcl
sbb
cmp
iret
int
and
jle
adc
mov
pop
mov
sar
call
repnz
data16
mov
imul
push
dec
sbb
stos
mov
fcompl
mov
nop
les
fmuls
nop
dec
add
call
sbb
mov
mov
in
pop
mov
add
jmp
dec
fwait
push
jno
mov
test
push
into
shrl
js
mov
inc
xor
movsl
dec
stc
out
insl
inc
ja
mov
enter
push
sub
call
inc
daa
jne
xchg
jns
cmc
dec
into
inc
jl
pop
rolb
jp
xor
cmp
out
lret
mov
incl
scas
loope
mov
jns
outsb
mov
and
cmp
adc
inc
imul
lcall
xchg
pop
cmp
push
push
dec
sbb
add
inc
popf
push
repnz
mov
call
add
pop
pop
adc
insl
lods
inc
xor
scas
push
int
dec
pop
xor
and
pop
adc
jle
call
xor
jg
mov
xchg
inc
mov
jnp
shrl
por
inc
pop
popf
mov
fidivl
or
cld
mov
xor
push
es
test
hlt
dec
add
ljmp
cmp
mov
adc
adc
cmp
sarl
cmp
repz
mov
or
ljmp
daa
jmp
mov
cmp
jno
imul
cmp
int
in
popf
or
push
adc
adc
xor
sarb
mov
lret
repz
sub
ss
mov
xlat
add
cmp
add
push
dec
cwtl
scas
sti
sbb
mov
add
mov
test
nop
push
dec
cmp
call
cmp
out
enter
fstl
aas
adc
call
mov
lea
inc
jmp
push
movsb
imul
and
movsb
mov
sti
incl
cmp
leave
mov
rcll
sub
movsb
fildll
or
daa
and
in
cltd
sarb
decl
add
sbb
test
rcl
push
mov
call
xor
jns
shlb
mov
movsb
xor
mov
cmpsl
mov
push
mov
or
lock
push
inc
mov
pop
and
jns
popf
adc
out
and
cmpsb
mov
push
xchg
xchg
int
ljmp
cli
test
jg
mov
jecxz
xchg
fwait
lock
lds
mov
cs
decl
xor
outsl
call
ss
pop
sub
xchg
hlt
lcall
dec
roll
fsubrs
cmp
js
pop
dec
or
cmp
cld
into
inc
nop
outsl
xchg
adc
sub
mov
shlb
loope
and
aam
push
adc
dec
push
gs
les
int3
xchg
jle
mov
je
cltd
push
movsl
mov
out
inc
fildl
sbb
or
lret
jg
sti
test
inc
addl
outsb
outsb
bound
in
icebp
dec
or
incl
shlb
jg
cmc
xchg
out
mov
xchg
and
sub
cld
xor
and
push
xchg
adc
incl
in
fucomi
sbb
jno
mov
mov
pop
notb
add
fxch
cmp
mov
dec
adcl
and
out
insb
sbbb
out
sub
pop
test
gs
jmp
dec
movsb
adc
test
jmp
popa
add
xorb
mov
in
xor
mov
ja
loopne
cld
daa
es
outsb
push
and
hlt
push
inc
cld
inc
sub
xchg
mov
ror
mov
push
outsl
xchg
mov
xchg
jp
mov
fwait
cmp
and
ljmp
xor
dec
xchg
scas
cmp
push
xchg
bound
insl
sti
xor
in
in
cmp
sar
pop
loopne
sub
js
mov
push
fcomps
jl
push
jg
xchg
fisubl
push
push
jp
test
cmp
call
pushf
xor
dec
lret
ret
jae
xchg
jne
jg
call
push
add
or
and
repz
or
jg
stos
decl
outsb
xchg
pusha
xor
sti
sub
add
outsb
cmp
mov
cmpb
fcom
dec
mov
loop
pop
popa
movsl
movsb
movl
fbstp
pop
inc
mov
jbe
cmp
mov
push
flds
jne
cs
ja
push
xor
fcomi
mov
rorl
dec
es
jmp
pusha
aam
or
daa
movsl
cmpsb
ret
mov
xchg
cs
hlt
adc
mov
mov
mov
insl
push
pop
cmp
fs
add
pushf
pop
ds
inc
shll
xchg
sbb
add
jns
or
out
data16
pop
or
xchg
out
fimull
xchg
lock
incl
push
add
ret
popa
mov
test
dec
in
jnp
out
mov
imul
filds
movsl
repnz
in
xor
fbstp
xchg
pusha
inc
pop
ljmp
push
aam
cmpsl
lds
xor
js
and
push
pop
fidivs
mov
outsl
mov
add
scas
and
or
ljmp
leave
mov
insl
sub
inc
cmpsb
sub
sti
add
or
pop
das
add
pushl
mov
popf
push
mov
lock
in
sub
mov
xchg
or
outsb
push
mov
cmc
add
sbb
mov
mov
mov
lea
inc
xchg
cmp
loope
dec
outsl
pop
xor
bound
push
jl
es
ljmp
insb
fdivrl
xchg
lret
add
ret
sbb
ljmp
fiadds
push
ficompl
or
loope
push
cmpsl
push
lret
sub
sbb
mov
incb
nop
jle
xchg
arpl
jbe
adc
aaa
push
dec
in
xor
gs
lcall
es
jno
flds
in
push
aas
mov
mov
push
pop
pop
cli
call
adc
cli
adc
aaa
cmp
pop
je
pusha
lcall
lcall
roll
push
xchg
mov
lret
shrb
xorl
in
pop
add
push
mov
push
dec
inc
mov
cmpsb
push
daa
in
add
in
ljmp
rorb
lods
rcll
arpl
aaa
mov
lahf
sbb
out
aam
lahf
fcomip
mov
rclb
bound
or
ljmp
inc
mov
aaa
dec
dec
cmp
movsb
stos
es
add
xor
pop
push
call
xlat
push
fbld
jp
std
sbb
inc
int
rclb
add
insb
cld
xchg
ss
aad
and
jg
insb
and
xchg
cmp
jle
bound
int
daa
js
xchg
sbb
adc
lret
cmp
sub
push
mov
mov
jg
pop
mov
jae
scas
xlat
add
cmovle
jmp
cltd
cmpsl
test
bound
add
dec
xlat
xlat
scas
lcall
hlt
mov
push
dec
jp
jg
jg
inc
int
mov
mov
jmp
push
mov
pop
inc
mov
enter
xchg
mov
lcall
imulb
push
mov
add
fcmovbe
xchg
in
movsb
in
aad
hlt
add
subb
fdivr
decl
xorb
pop
gs
ret
test
inc
les
and
mov
dec
pop
clc
leave
insl
int3
and
mov
push
sub
faddl
jnp
mov
lods
fcompl
insb
jno
inc
pop
js
lcall
mov
jb
push
xchg
adc
jp
lea
insl
loop
xlat
into
insl
cmp
jg
mov
sbb
test
andl
xchg
ljmp
inc
add
dec
ljmp
cmp
out
popa
push
lock
call
std
into
mov
mov
xchg
jae
pusha
push
lcall
lret
mov
mov
iret
cmp
cmp
add
mov
add
clc
lods
lahf
cmp
mov
outsl
stos
sbb
incl
nop
or
frstor
cli
inc
lret
sbb
or
jmp
jl
or
adc
mov
jnp
lahf
fdivl
fwait
add
xchg
jbe
cld
mov
mov
xchg
mov
jne
push
aad
hlt
sbb
sbb
push
pop
ret
mov
sarl
xchg
adc
lcall
out
xchg
jg
or
scas
pusha
mov
nop
dec
sar
jg
add
push
adc
or
test
int
jmp
dec
rolb
shr
test
cmpsl
xor
rcll
les
sub
jg
dec
mov
push
nop
pop
xor
shrb
in
out
cvttps2pi
shlb
call
loopne
punpcklwd
repnz
scas
dec
cmp
gs
testb
rorb
call
cmp
ljmp
push
lcall
cmpsb
cmpsl
and
daa
xor
test
pushl
add
pop
jmp
pop
jl
sub
aas
iret
loopne
ljmp
push
push
cmpsl
jl
arpl
es
jbe
iret
dec
ja
adc
or
pushl
repnz
outsb
int3
push
jb
or
cmp
jnp
shrl
into
mov
mov
jmp
fcoms
fimuls
or
adc
das
and
sbb
outsl
xchg
mov
hlt
loope
dec
mov
incl
icebp
mov
movsb
pop
xlat
pop
jmp
rol
push
mov
dec
sub
xor
sub
je
xchg
movsb
adc
mov
bound
ljmp
mov
mov
xorb
sub
iret
mov
orl
jnp
mov
fldt
mov
aam
in
mov
lods
aam
les
decl
mov
jb
xchg
jg
push
sub
jo
ja
add
xor
dec
out
jp
cs
xlat
inc
repz
aam
lea
out
pop
mov
scas
sub
sar
jb
outsl
pop
popa
sarb
call
pusha
sub
add
pushl
insl
jg
cltd
fwait
sub
push
dec
adc
mov
aam
pop
inc
test
dec
or
mov
cmc
lock
ljmp
test
or
mov
iret
xor
mov
push
insb
jp
mov
push
cli
rorl
repnz
ljmp
mov
adc
push
lods
mov
lcall
fnstenv
imul
ljmp
adc
mov
lret
mov
cmp
dec
ficomps
or
cmp
rorb
shlb
mov
insl
sub
mov
cwtl
and
lock
mov
pusha
out
pop
mov
jp
mov
add
or
pop
cmc
jecxz
push
pop
shlb
imul
aaa
cld
fidivrl
lods
inc
xchg
incl
xor
or
and
xchg
xchg
aad
inc
mov
xchg
inc
ds
mov
push
xchg
pop
xchg
fidivrl
xchg
ficompl
js
lcall
cmp
lcall
lods
jno
sub
and
insb
or
addr16
rcrb
insb
mov
mov
jmp
movsl
popa
pop
iret
sbb
dec
jbe
mov
jnp
dec
scas
aam
push
sarl
pop
mov
arpl
ljmp
mov
shl
xchg
add
gs
jae
xor
sbb
mov
mov
mov
mov
in
jo
icebp
pop
dec
or
sub
adc
xor
mov
cmp
cmp
mov
loope
adc
xchg
push
test
test
jne
dec
mov
adc
mov
mov
cli
decl
das
scas
lds
inc
jo
sbb
test
add
push
dec
call
push
mov
sbb
add
in
lock
or
lcall
insb
test
sub
add
mov
push
xor
jl
fmull
jg
movsb
push
xchg
mov
inc
stos
ljmp
inc
inc
lcall
inc
insb
mov
rcr
clc
std
dec
inc
mov
ljmp
mov
mov
sub
add
jo
jg
jge
in
outsl
mov
jns
sahf
xor
ds
mov
data16
icebp
addr16
mov
inc
cmp
adc
lahf
cltd
push
mov
cmp
push
imul
add
push
push
lcall
out
int3
out
mov
mov
or
xchg
pop
aas
or
test
lcall
addr16
dec
jecxz
push
xchg
inc
sub
ljmp
nop
divb
add
xor
push
xchg
jl
ja
jl
ljmp
lret
pop
dec
jmp
loope
aam
push
jae
out
pop
jp
jb
cmp
in
popf
test
jns
cmp
push
add
jle
sar
jo
mov
outsl
das
sbb
add
mov
and
mov
ror
aam
das
loopne
jbe,pt
push
lea
addr16
sbb
call
cltd
insb
repnz
dec
lret
fadds
popf
std
lea
icebp
dec
mov
enter
test
jno
aaa
pop
xchg
mov
mov
dec
stos
xchg
cmpsb
daa
into
test
adc
inc
add
mov
loopne
fistl
cltd
mov
pop
pushl
addb
push
cmp
loop
mov
xor
lock
adc
mov
cli
mov
adc
in
ficompl
mov
mov
mov
inc
xor
ljmp
mov
data16
xchg
out
pop
inc
or
lods
sbb
ret
clc
xor
dec
jecxz
push
push
in
or
mov
ret
push
add
arpl
lahf
cwtl
cmpsb
pop
sti
jecxz
cli
in
jno
jne
int
jae
subb
pop
bnd
jg
ljmp
cmp
inc
stos
aam
dec
xchg
adcl
loop
jae
push
xchg
xchg
test
push
mov
or
rorb
xor
aas
mov
jae
fcomip
incl
xchg
jnp
inc
jno
test
xchg
cmp
dec
inc
push
cmp
xor
sahf
ss
inc
ja
iret
sub
mov
sbb
fmull
call
mov
adc
call
jo
sub
fildll
imul
jge
cmp
rcl
aas
mov
jnp
cmp
stos
and
or
xor
fwait
mov
iret
les
jle
or
and
sub
push
jmp
adc
lods
arpl
incl
cmp
pop
dec
sbb
jle
out
shrl
and
insb
sti
and
daa
sbb
movsl
cmp
shrb
inc
push
and
jecxz
or
xchg
fwait
scas
scas
jbe
dec
fildl
xchg
pop
in
shl
ret
mov
xor
cmpsb
ljmp
adc
pusha
mov
xor
add
sbb
dec
sbb
outsl
lret
inc
loop
aad
dec
inc
dec
sahf
and
jecxz
mov
scas
rorb
mov
or
call
inc
mov
cld
daa
mov
cmp
or
ret
push
iret
xchg
mov
dec
push
cmc
push
call
outsb
fs
mov
add
add
data16
jmp
into
push
aas
jne
decl
jae
inc
xor
ss
in
lahf
cmpsl
pop
ficoms
mov
lcall
cld
lcall
in
clc
dec
adc
repnz
shl
in
cmp
stc
mov
aaa
xor
jmp
xchg
cld
push
inc
in
out
xor
test
in
movsl
shll
sbbl
je
sarb
sti
sbb
mov
cmp
and
and
dec
std
add
pushl
aas
adc
dec
dec
jmp
and
adc
xor
mov
fdivr
out
xor
xor
iret
mov
add
push
pop
out
lds
popf
fdivrl
ljmp
cmp
aaa
insb
dec
sub
xchg
pop
lahf
mov
or
incl
jbe
xor
push
andl
movsb
sub
fcom
mov
lcall
xchg
mov
lods
cwtl
ficomps
shrl
and
lock
lcall
iret
sbb
rorl
jg
dec
cmp
cs
or
inc
lahf
shlb
std
dec
pop
xchg
inc
cmp
out
ret
incl
and
and
fmull
aad
dec
sti
push
ja
push
cmpsb
loope
std
stos
dec
aad
xor
movsl
lret
mov
mov
mov
inc
pop
aad
inc
push
mov
fiadds
inc
inc
insb
add
jmp
pop
loopne
adc
jno
in
jmp
add
xchg
in
lea
xor
jl
mov
fildll
out
test
lods
cltd
fwait
les
xchg
mov
cmp
lret
shrb
addl
ds
push
add
in
fcoms
adc
lods
pop
xchg
imul
or
pop
add
out
pop
icebp
incl
add
shll
test
push
les
test
pop
xchg
decl
aas
sbb
fbld
sub
jo
xor
sbb
xchg
jl
out
insl
add
sub
jmp
add
mov
push
xor
mov
adc
and
cmp
dec
js
aaa
icebp
aad
cmc
or
faddl
adc
inc
test
aam
sbb
jnp
in
test
bound
shl
call
pop
mov
test
mov
sub
lds
xor
in
cltd
dec
push
out
inc
hlt
or
push
test
mov
push
adc
out
cmpsb
fistl
jmp
rorl
ds
clc
jns
je
xchg
cltd
adc
cmp
push
xchg
xchg
mov
mov
fstps
fldl
cli
pusha
or
shrl
pushl
push
fisubrl
test
leave
adcb
inc
jns
clc
fstpt
mov
ret
test
decl
push
mov
sbb
mov
inc
sti
mov
decl
test
insl
xchg
pop
ss
rcrb
mov
mov
adc
dec
mov
decl
insb
xor
mov
mov
test
int3
insb
movsb
out
out
add
inc
leave
jo
cld
leave
out
cwtl
mov
cld
decl
push
add
pop
outsl
jbe
push
stos
xchg
push
xorb
rcrl
ret
cmp
pop
push
ret
cld
mov
xor
cli
sbb
adc
outsl
ficompl
dec
xchg
xor
mov
or
sbb
pop
mov
outsb
clc
icebp
daa
fldenv
cltd
xor
scas
push
xchg
test
push
pop
adc
mov
sar
push
pop
test
and
and
test
xor
cli
mov
jmp
ja
or
lcall
pop
fwait
in
cmpsl
xor
xchg
or
gs
decl
inc
jbe
push
mov
xor
cli
pop
ret
ds
ljmp
ljmp
ficomps
outsl
push
and
xor
add
lcall
jle
and
mov
stc
sub
cmpsb
mov
add
enter
call
es
ret
mov
pslld
in
stos
mov
lcall
adcb
add
inc
sbb
jmp
js
ret
int3
xrelease
lods
push
rcr
leave
popf
lcall
aaa
mov
insb
inc
out
inc
xor
and
hlt
or
xlat
fdivrp
jmp
pop
test
out
and
push
icebp
shll
movsl
dec
mov
mov
pop
pop
imul
pop
pop
jg
pushl
std
fdivl
mov
cld
sbb
pop
icebp
and
mov
cld
ljmp
dec
sbb
into
dec
mov
or
es
sbb
pop
mov
sahf
daa
jmp
add
mov
xor
repnz
adc
hlt
pusha
cmp
outsl
dec
sub
inc
imul
leave
ret
rorl
and
test
out
inc
xor
jne
arpl
mov
fdivp
ljmp
pop
js
out
outsl
jmp
nop
popf
mov
add
pop
mov
push
lahf
lret
lods
lock
sar
adc
decl
mov
jns
inc
mov
repnz
add
fucomip
or
cmpsb
aam
es
test
jmp
mov
shlb
cmpsl
xor
lods
imul
jge
cmp
outsl
adc
or
cmpsb
push
lahf
mov
mov
and
fbld
sbb
call
dec
inc
in
lret
push
mov
ljmp
mov
mov
lcall
nop
push
leave
sbb
xor
cmpsb
pop
jno
jmp
dec
push
push
adc
fs
xor
mov
in
leave
cli
pop
push
cli
fisubl
out
mov
loop
lock
cmp
dec
in
das
push
push
sahf
mov
sbb
xchg
push
fdivr
push
les
pop
aaa
sub
std
pop
pop
or
fs
push
and
pop
jmp
push
push
leave
andl
pushl
nop
ds
push
sbb
insl
shlb
test
sub
jb
fimuls
xor
jecxz
mov
pushf
mov
cmp
xchg
out
movsb
push
dec
out
clc
add
sub
jo
cmp
idiv
call
dec
ss
xchg
ret
jnp
loop
inc
test
ror
mov
jmp
incl
cli
ret
pop
lock
jo
dec
cmp
nop
cmc
xchg
mov
push
mov
cmpsb
fst
decl
jp
dec
push
dec
lods
enter
int3
and
xchg
xchg
jno
fwait
decl
pushf
mov
adc
pop
jbe
stc
neg
pop
xor
push
add
pop
nop
xchg
push
jnp
lret
lahf
out
inc
mov
jp
outsl
pop
inc
sbb
loop
incl
out
das
inc
sub
fs
ret
sbb
movsb
push
sub
decl
adcl
push
in
in
sub
xchg
cmp
out
pushl
and
jl
test
pop
jge
lea
pusha
mov
ds
pop
call
lcall
or
hlt
mov
add
cmp
adc
mov
mov
cld
pop
inc
pop
mov
pop
mov
lahf
jge
add
cmpb
ret
addb
pop
mull
call
lcall
orl
adc
mov
jo
lock
or
or
and
adc
push
pop
icebp
pop
mov
push
jae
ds
dec
fistpl
ljmp
std
ss
cld
xchg
movsb
and
in
stos
inc
or
lds
nop
push
aad
push
jmp
test
cli
decl
popa
jae
cwtl
pop
sahf
pop
mov
out
add
dec
btc
mov
mov
jp
sbb
push
jbe
cld
mov
test
mov
loope
mov
int
and
lds
ljmp
push
xor
test
pop
mov
arpl
out
movsb
xlat
dec
out
clc
ljmp
data16
add
int
adc
mov
pop
loope
jge
das
pop
sbb
ljmp
in
fstpt
outsl
orb
push
xchg
push
add
leave
jns
xchg
xchg
or
lods
push
push
pop
test
pop
or
shl
clc
lcall
les
xchg
or
sbb
dec
adc
hlt
ds
dec
popf
ljmp
stos
sbb
jecxz
pushf
push
repz
rcrb
es
jbe
fs
push
mov
cmp
mov
push
xchg
push
push
sub
popa
jns
xlat
shrl
push
dec
pop
cld
and
addr16
mov
lds
pop
bound
mov
pushl
dec
push
and
jle
hlt
ja
imul
cmp
inc
or
ljmp
out
inc
adc
mov
mov
addr16
mov
and
pushf
cmp
das
clc
lcall
lods
ds
fnsave
fistpll
repz
dec
push
lods
mov
lcall
sbb
jnp
mov
sub
repnz
push
fwait
in
pop
ljmp
mov
sbb
push
cltd
daa
subb
testb
cmc
jns
sbb
call
das
sbb
ljmp
es
sbb
iret
push
pop
dec
xor
pop
cli
dec
jg
hlt
mov
cmp
cmpb
xor
adc
loopne
in
stc
cmp
add
jmp
ret
cmp
dec
pop
fsqrt
jae,pn
inc
sti
sub
jg
mov
mov
repz
aad
mov
or
leave
sub
insb
fstpt
pop
pusha
decl
rcrb
test
pop
ja
mov
repnz
dec
and
cmc
cmp
adc
xor
idiv
lcall
mov
cld
cmp
mov
adc
cwtl
xor
hlt
dec
pop
test
ljmp
xor
and
int3
scas
push
sub
ret
or
imul
ljmp
sar
pushf
dec
shll
data16
jne
cmpsl
or
int3
add
and
lcall
or
inc
jno
jae
and
xchg
arpl
jb
push
jns
xlat
xor
push
js
jae
xchg
add
push
fcoml
push
xor
jg
sub
sub
call
lods
clc
mov
scas
shll
mov
repnz
popf
rcll
xor
xchg
out
or
in
fdivl
into
sub
jo
fcmovu
push
cmp
in
xor
sbb
jae
jle,pt
or
jmp
addr16
xlat
ret
mov
cmp
fdivs
mov
jle
int3
jl
push
fwait
sub
lcall
pop
fadds
cmc
gs
sub
xchg
cli
sarb
inc
int3
sbb
scas
cmp
arpl
inc
xor
daa
pop
leave
cmp
popa
cmp
sbb
incb
insl
incl
xor
mov
and
arpl
and
in
bound
mov
lcall
mov
pop
pop
imul
out
sub
add
sarb
mov
mov
int
lcall
fisubrl
test
sarl
call
push
push
cli
cmp
int3
mov
lea
aaa
fcomp
cld
xor
jmp
enter
jp
add
out
pop
xor
mov
pop
mov
jnp
loop
push
js
int
loopne
ljmp
dec
cld
xchg
jmp
scas
repnz
das
sbb
jmp
rcrb
cmp
xor
xor
mov
jg
cmp
fs
in
cmp
push
xchg
lahf
outsl
inc
das
add
cmp
cmp
fcmovu
inc
sub
shrb
insb
fs
sbb
call
and
imul
or
lcall
jmp
jecxz
inc
adc
lcall
push
sub
inc
adc
incl
mov
adc
js
jno
fs
pop
fistl
mov
mov
xlat
dec
gs
mov
int3
lds
inc
int
jb
sub
lock
sbb
pop
pop
sub
pop
rcrl
mov
sbb
popf
ret
incl
sbb
test
pop
test
mov
lds
or
inc
inc
cmp
push
jmp
movsl
push
adc
xor
and
sti
adc
in
jo
hlt
outsl
clc
mov
scas
leave
scas
jge
adc
nop
lds
jmp
push
mov
sar
xchg
aad
adc
xchg
or
sbb
call
sbb
in
data16
cld
fisttpl
mov
adc
ljmp
push
bound
mov
mov
ja
dec
cmp
dec
sti
call
inc
pop
sub
shll
pop
xor
lods
imul
jecxz
imul
jmp
dec
fwait
movsb
ret
test
dec
pop
insl
shll
xchg
mov
popa
nop
jmp
ret
into
test
insl
xchg
arpl
arpl
and
decl
scas
dec
shlb
outsl
fs
jnp
insl
mov
lea
dec
jb
mov
cmpsl
xchg
xor
das
outsb
jb
sbb
xor
sti
loope
jge
and
jl
inc
and
cmp
mov
mov
jmp
jge
lods
mov
scas
adc
dec
mov
jb
dec
and
imul
icebp
in
aaa
shl
jle
cwtl
cli
test
or
ljmp
cmp
sub
into
in
cmc
xor
xchg
mov
cmpsb
fiadds
fdivrl
or
daa
push
insl
sbb
sahf
fcoml
pop
call
lods
inc
cmp
cld
data16
mov
xchg
mov
push
adc
xchg
inc
scas
jns
cltd
lcall
push
and
sub
pop
cmp
fadds
in
mov
sahf
iret
mov
movb
lcall
and
jb
es
jp
dec
xchg
xchg
mov
ja
jle
lods
xor
je
push
cltd
orl
xchg
dec
pusha
clc
dec
add
push
jecxz
aad
or
test
rcr
dec
and
std
decl
scas
sub
xchg
movsl
cwtl
push
ljmp
movsb
das
jg
mov
jns
and
jns
test
jmp
mov
adc
pop
je,pn
lcall
roll
adc
fstps
inc
or
xor
cmp
fstpt
ljmp
lock
cmpsb
cmp
mov
test
imul
adc
xchg
mov
fsubl
test
mov
scas
cli
fsub
mov
das
cmp
call
mov
push
inc
or
jnp
imull
mov
mov
out
add
xor
lock
jmp
lds
jo
clc
mov
rclb
mov
push
pusha
dec
sub
popa
test
and
push
mov
imul
lcall
sbb
aas
or
ss
xlat
cmp
jno
cmp
rorl
xchg
and
shrl
cmp
dec
in
rcrb
jle
pusha
xchg
xor
jmp
pop
jmp
pushf
pop
cmpsb
repz
sbb
or
pop
push
inc
xor
fs
loope
incl
lods
call
cmp
jmp
add
ficoms
sbb
jmp
pop
out
xor
and
shrl
mov
jp
lock
inc
pusha
aam
mov
adc
and
mov
mov
ljmp
cmp
cmp
test
inc
pop
mov
stos
pop
shll
dec
sbb
sbb
jne
incb
add
xchg
push
sbb
add
pushf
jbe
push
jae
ljmp
mov
hlt
sub
dec
push
or
js
in
clc
aad
jno
or
lret
lock
mov
push
mov
sub
lcall
and
aaa
jnp
mov
fbld
jne
int
dec
scas
inc
sbb
inc
mov
daa
push
sub
or
les
aas
lea
fcmovnbe
inc
repnz
push
jbe
and
repz
adc
sub
insl
inc
push
jg
jbe
push
sub
pop
adc
add
sub
or
icebp
xchg
sbb
cmp
inc
and
mov
pushf
rorl
sub
subl
jg
pushl
sub
jl
in
cmp
pop
pop
cld
jle
pop
xlat
sbb
jg
jmp
push
adc
in
bound
push
ljmp
mov
or
out
fdivp
xchg
mov
jno
pop
roll
repnz
push
addr16
stos
mov
xor
incl
cli
xchg
roll
push
ja
cmc
dec
in
and
in
rcll
loop
fwait
lret
icebp
es
sub
inc
fcoml
adc
pop
inc
and
es
sub
dec
mov
mov
bound
mov
push
cmpsb
loopne
lock
jp
in
pop
jb
jbe
cmp
and
bound
pop
dec
in
popa
pop
sti
scas
mov
sbb
addl
lcall
inc
nop
xchg
gs
sbb
clc
outsl
shr
xchg
dec
stos
das
repnz
arpl
aas
fisubrs
decl
dec
enter
xlat
or
das
test
xchg
mov
jo
insb
xchg
cmp
mov
call
sbb
push
or
shll
push
loopne
mov
pop
jecxz
scas
and
cmpsb
xor
jns
in
push
jg
arpl
loop
fwait
xor
push
xchg
scas
xchg
inc
loopne
push
add
ja
mov
sub
aad
mov
inc
or
call
jnp
push
pop
ret
loop
outsb
mov
adc
lcall
jmp
push
dec
inc
jno
push
xor
jle
adc
dec
ljmp
lcall
into
inc
hlt
adc
andl
jge
adc
inc
sbb
adc
and
std
and
pop
jbe
sub
in
call
or
aad
in
negl
sub
inc
ljmp
out
notl
pop
mov
das
push
sub
outsb
sti
push
popf
out
loop
pop
mov
call
int3
push
ja
mov
and
mov
push
or
enter
test
in
push
lods
push
lcall
cmc
jecxz
cmc
je
addr16
movsb
stos
bnd
jp
jl
movsb
call
repz
push
imul
insl
aaa
mov
pop
movsb
cmp
lcall
decl
dec
test
adc
popl
lds
rorb
sbb
mov
notb
jg
add
shr
ret
mov
lea
xchg
les
daa
and
out
cli
push
cld
leave
xor
loopne
enter
icebp
or
push
outsl
pusha
add
cld
in
lea
jl
daa
aaa
sbb
adc
adc
data16
sbb
push
adc
jg
call
sbb
int3
and
sub
inc
xor
adc
insb
sbb
mov
test
adc
test
add
inc
inc
lods
or
stc
mov
in
mov
dec
jecxz
lock
add
push
cmp
pushl
push
mov
enter
jecxz
cmp
push
inc
sar
lcall
xchg
jge
xchg
pop
out
mov
mov
sbb
push
out
push
mov
mov
jg
pusha
lods
ja
push
adc
inc
mov
repz
mov
push
mov
call
cs
cmp
nop
sti
dec
sahf
xchg
in
mov
adc
scas
jle
hlt
incl
add
push
lret
adc
mov
dec
aas
pushl
sbb
incl
mov
call
in
pop
sub
dec
cmc
int3
dec
jo
jns
adc
cmp
ljmp
mov
frstor
and
add
mov
insl
rcrb
incl
pop
sbb
clc
xorl
jbe
push
sub
cmp
nop
gs
jg
idivb
rolb
mov
xchg
mov
cs
dec
imul
jae
aas
dec
inc
repz
aas
aaa
mov
shl
pop
shlb
enter
pop
and
push
outsb
push
fbld
int3
pop
inc
add
inc
mov
addl
pop
inc
ljmp
test
push
dec
jno
aad
fbstp
add
loope
cli
ret
ss
shr
dec
adc
xchg
mov
imulb
mov
mov
in
and
mov
imul
xchg
out
lds
mov
out
mov
outsl
incl
scas
popl
lahf
xor
ret
dec
insb
pop
in
test
aas
pop
mov
std
adc
repz
into
cli
push
mov
add
and
push
out
cli
fidivl
scas
shrb
lahf
mov
lock
pop
sar
aaa
ljmp
jp
and
mov
cmp
xchg
stos
push
mov
pop
sbb
mov
fmull
or
mov
shr
cmc
mov
incl
or
test
pusha
insl
decl
push
mov
jno
inc
or
inc
orl
or
push
fisubs
xchg
adc
js
xchg
cli
pop
jns
adc
mov
stos
cld
rolb
fildl
xchg
or
int3
call
repz
mov
hlt
xchg
fists
pop
ror
aas
cmpsb
jmp
out
clc
shl
add
jecxz
sub
cmpsb
decl
je
jl
mov
es
sbb
sub
mov
daa
push
sbb
les
loope
jge
or
xlat
iret
push
cs
add
lcall
gs
adc
pminsw
subb
xchg
sbb
mov
push
call
push
inc
xor
stos
and
stos
scas
add
sbb
mov
pop
jnp
xor
jmp
or
jle
mov
out
out
cmp
leave
imul
fcomip
ffree
sbb
cld
push
cld
iret
inc
mov
adc
ja
mov
xchg
cli
add
decl
lods
inc
mov
sub
push
mov
mov
pop
mov
fbld
inc
sub
inc
in
por
scas
fistl
aas
fists
or
decl
ss
mov
cmp
or
test
mov
sbb
or
and
icebp
decl
pusha
jnp
pop
sub
push
and
movsl
mov
pop
inc
push
call
dec
fadds
fldl
jo
jnp,pt
inc
out
add
adc
imul
nop
mov
jg
inc
cmp
or
mov
popf
inc
and
mov
lret
call
pop
xchg
lcall
aam
fs
es
mov
imul
sub
dec
jb
leave
pop
lea
sti
lods
popf
mov
mov
std
pop
xor
mov
clc
mov
lock
cs
ljmp
jecxz
cmp
bound
in
mov
dec
aad
and
out
pushl
rcr
movsb
js
in
jl
out
push
sbb
push
imul
notb
lcall
sub
adc
sbb
scas
stc
insl
adcl
inc
mov
ljmp
sbb
ljmp
jns
sahf
repz
popf
mov
push
pop
mov
test
dec
inc
icebp
pop
jecxz
repnz
cli
cmp
inc
ljmp
in
rcr
mov
lcall
dec
mov
aas
stc
call
cmpsl
cld
inc
sti
mov
sub
add
lcall
lahf
roll
ljmp
in
iret
int3
push
inc
add
nop
xor
cli
push
push
lock
pushf
out
or
popa
inc
cmc
mov
fisttpl
jecxz
sub
loope
cmpl
add
jle
loope
idivb
call
sbb
cli
lcall
fidivl
pop
fnsave
mov
adc
push
imul
push
das
and
xor
das
jp
cwtl
les
leave
dec
and
andb
and
mov
lcall
pop
push
ret
and
gs
cwtl
adc
fisubrl
daa
int
mov
jl
jmp
xlat
mov
xor
xlat
pop
ficoml
dec
mov
scas
jge
jg
enter
sub
aad
jmp
sub
stc
int
fwait
push
jno
outsb
xor
mov
pop
push
fdivrs
je
data16
lcall
inc
test
xchg
cmc
sbb
pop
or
inc
fcompl
cltd
mov
es
scas
push
xlat
fdivrp
pushl
mov
hlt
pop
arpl
mov
add
mov
mov
or
inc
lcall
inc
sub
xchg
sub
fsubrs
sahf
data16
leave
nop
clc
or
insl
in
pop
dec
dec
testl
adc
push
xor
ret
dec
lret
lea
decl
enter
and
mov
xor
jle
data16
adc
jg
push
xchg
outsl
sbb
xor
jno
sbb
mov
ljmp
jle
rorb
xor
js
xchg
pusha
jle
and
mov
aad
orb
mov
ljmp
aad
mov
sbb
jge
sub
jle
mov
mov
jne
int3
xchg
std
push
cltd
or
andl
cmp
enter
fwait
xchg
mov
loope
mov
lea
mov
mov
pushf
idivb
call
lcall
push
xor
jge
pop
test
cmp
insb
mov
push
movsb
cmpsl
jmp
mov
push
sarl
jmp
das
inc
clc
or
mov
fidivrs
sub
and
dec
cmpsl
jne
test
call
jle
fimull
cs
xor
int3
mov
popa
dec
jmp
mov
lcall
enter
ficoml
lods
push
fiaddl
jg
adc
push
imul
xchg
lock
sbb
xlat
scas
sar
add
in
rcrl
jne
and
aam
lods
dec
cld
jg
cmp
loope
mov
mov
cli
sub
jno
insb
ret
rolb
loope
jg
addb
xchg
cwtl
add
push
fistpl
inc
adcl
mov
lcall
sub
jbe
mov
or
xchg
mov
sub
stos
mov
popa
add
push
and
lcall
add
mull
lods
insl
add
out
imul
pop
loop
int3
mov
push
xchg
mov
add
aam
or
dec
dec
mov
mov
ja
dec
add
mov
rolb
insl
sbb
in
into
xchg
shlb
mov
or
mov
mov
daa
dec
lahf
inc
fldt
add
sub
les
imul
sbb
sti
mov
inc
test
mov
add
test
mov
jmp
xchg
sbb
ds
inc
push
jmp
cli
cmp
pop
push
jmp
fsts
push
mov
cmp
outsl
pop
lret
push
adc
cmp
mov
dec
sbb
cmc
fmulp
xor
popl
fwait
pusha
pop
adc
fbstp
dec
loopne
mov
ret
mov
jmp
jo
jmp
push
aas
xchg
xchg
xchg
inc
xor
and
incl
in
enter
outsl
pop
or
imul
arpl
mov
test
pop
ljmp
mov
pop
fstl
pop
mov
mov
cmpsl
fists
jnp
mov
pushl
add
cmp
pop
cmpsl
mov
pop
and
push
xor
or
mov
lock
movsb
mov
xchg
pop
adc
xchg
sub
jg
and
pop
lret
jge
dec
cltd
push
das
mov
popa
pushl
scas
add
mov
adc
mov
pop
mov
fistl
mov
out
cmp
movsb
sbb
push
mov
ljmp
stc
js
ljmp
adc
dec
pop
push
and
sahf
adc
int3
cli
xchg
mov
fistl
mov
and
jbe
inc
scas
divb
lahf
outsl
outsb
outsl
repnz
cwtl
add
xlat
jg
xor
mov
aam
fwait
movsl
and
and
mov
inc
loopne
mov
int3
pop
repz
outsl
push
mov
scas
in
movsl
mov
mov
xor
xchg
out
mov
decl
sbb
inc
sub
mov
mov
mov
add
inc
or
jmp
pop
pop
inc
or
mov
mov
sub
loop
pushf
incl
add
or
pushl
or
shlb
adcb
in
ja
mov
cmp
decl
pop
sub
push
lahf
mov
outsb
test
movsb
sub
jle
sub
adc
test
mov
xcrypt-ctr
cmpsl
sbb
sub
fdivl
pop
jge
dec
sahf
incl
xlat
ja
sbb
jns
adc
cmp
shrb
shlb
lret
push
aad
fucom
ds
mov
push
jl
mov
dec
in
xor
sbb
roll
or
push
into
cmp
imul
pop
xlat
jb
ljmp
shll
mov
out
mov
ds
or
fsubs
popf
cmp
cmc
scas
jl
rolb
pop
jl
stos
push
xor
scas
shrb
xor
in
scas
mov
pop
cmp
fildll
pop
push
xchg
inc
js
or
bound
xchg
cld
decl
push
iret
shl
inc
sub
pop
rolb
xlat
cmp
pop
jg
pushl
popf
iret
addr16
cmpsl
movsl
dec
sub
iret
leave
shll
or
cmp
or
cmc
add
cwtl
xchg
lock
mov
pop
or
aaa
lret
fistpll
jp
mov
jae
adc
test
call
pop
shlb
lcall
dec
mov
sbb
nop
ljmp
xchg
xor
mov
loopne
shr
out
adc
loopne
xchg
das
ficoms
sbb
mov
sar
decl
mov
dec
inc
addl
addb
dec
xor
cmc
hlt
push
xor
pop
or
ds
pop
mov
sti
scas
jge
divb
inc
or
outsl
push
mov
sub
pushl
sub
xlat
adc
mov
and
incl
jg
aam
rclb
int3
rol
push
adc
pusha
jecxz
and
aas
testl
decl
shlb
fcom
sbb
aas
jbe
cmpsb
test
jmp
rorb
out
out
or
dec
int3
mov
mov
cld
pushf
loop
fs
fisttpl
fwait
adc
or
push
or
sbb
adc
push
jge
rorl
inc
ljmp
mov
je
cmp
in
xchg
dec
dec
popf
popf
std
rorl
pushl
or
shlb
cmpl
adc
fbstp
scas
pop
imul
in
in
call
cmp
inc
mov
leave
ret
pusha
jo
shr
pop
out
jmp
push
sub
jmp
rcrl
fldl
pop
outsb
pop
addb
arpl
rcl
leave
jg
add
add
xchg
sbb
ds
lock
inc
popf
mov
mov
xor
insl
es
leave
inc
cmp
jl
push
ja
decl
adc
mov
cmpsl
sahf
inc
pop
push
inc
jns
lret
mov
cvtpi2ps
ret
daa
lcall
mov
xor
dec
sub
jg
aaa
cld
cmp
adc
icebp
dec
inc
mov
xchg
or
repz
call
and
adc
mov
add
test
pushf
pop
mov
mov
out
sbb
push
fdivrp
fcomip
mov
iret
stc
xchg
sub
push
cld
jl
mov
in
ljmp
test
lahf
mov
subl
push
mov
std
add
test
test
push
aam
jg
lfs
fucom
test
aam
and
fisttpl
fstl
jmp
mov
sar
incl
daa
jg
mov
inc
sub
cmp
adc
and
or
sti
in
adc
and
ljmp
mov
cmp
mov
dec
js
pop
rorl
and
mov
sbb
and
call
repz
mov
pop
leave
in
cld
push
push
insl
loopne
decl
add
pop
lock
mov
and
cwtl
cltd
fisubrs
push
mov
add
shll
push
mov
mov
test
fisubs
jg
push
pop
inc
xchg
in
lret
fldz
fs
adc
push
jmp
cmp
ret
mov
pop
lret
jbe
jl
pop
pop
add
pushf
mov
call
fs
fwait
hlt
sbb
sub
dec
sti
int
sbb
jle
fwait
jmp
aad
dec
cltd
inc
or
jg
sub
pushl
andl
popf
movsl
ret
sahf
pop
sub
add
pop
pop
or
inc
add
xchg
mov
push
outsb
std
out
push
xchg
lret
jl
incl
aam
push
jp
scas
shrl
xchg
xlat
cmpsb
or
int
xchg
sahf
movsl
xchg
xchg
fdivrl
push
lock
jg
sbb
mov
sub
pop
scas
mov
xor
das
xchg
pop
sub
cmpsb
jle
decl
out
or
mov
jne
scas
out
test
das
mov
and
fnop
pushl
pop
xchg
sbb
xchg
jbe
dec
fadds
pop
hlt
rcrb
outsl
sub
jo
and
ljmp
ljmp
push
and
pusha
sti
lods
jmp
stos
mov
xchg
inc
jl
pop
lcall
fcompl
xchg
push
negl
mov
scas
xor
ljmp
fs
lcall
int
mov
repnz
sti
add
cs
xchg
stos
sub
xchg
inc
sbb
push
fdivl
push
or
sbb
push
enter
decl
repnz
xchg
out
xchg
cwtl
adcl
lahf
and
xchg
push
pusha
addl
call
scas
imul
lahf
mov
pop
cmpsl
iret
add
or
nop
or
push
sub
shlb
icebp
into
adc
pushl
jl
jns
dec
mov
mov
mov
adc
push
sahf
lcall
pop
jmp
dec
jbe
daa
fildl
sahf
lea
orl
jmp
int
div
decl
mov
jg
out
jne
jae
loope
lds
call
out
push
pop
bound
in
pop
inc
xchg
popa
scas
loop,pn
xor
aad
rcll
pusha
or
mov
ljmp
push
lret
jns
test
jae
testb
ret
dec
aad
outsl
pop
push
xor
xor
incl
shrb
or
mov
xor
aad
xor
stc
pop
jg
outsb
or
xchg
inc
mov
hlt
sub
jge
or
cld
imul
jno
les
push
mov
repnz
dec
call
inc
loop
pop
clc
xchg
mov
adc
das
cltd
cbtw
cmp
push
and
decl
add
cmpsb
inc
enter
pushf
test
sbb
pop
andb
push
idivb
mov
and
mov
inc
xchg
push
jecxz
in
test
jl
mov
jmp
inc
outsl
mov
out
loope
subb
int
andb
jg
and
imul
cli
sbb
mov
mov
xchg
mov
out
sbb
cli
js
mov
les
ret
pushf
push
inc
loop
sbb
jo
addb
jp
mov
inc
cld
decl
addl
push
pushf
cltd
inc
push
insl
lahf
pop
mov
subb
pushl
add
enter
cmpl
mov
cwtl
ljmp
dec
popf
sub
sub
shll
sub
sbb
adc
or
dec
cwtl
icebp
daa
or
call
rcr
pop
shlb
out
jns
ss
add
aaa
std
pop
mov
or
add
mov
xchg
mov
push
decl
arpl
adc
jp
mov
pop
mov
push
sub
popf
in
imul
call
push
pop
lret
xor
jb
test
fdivl
jns
push
dec
add
pop
jmp
push
mov
xor
rcl
ret
stos
xor
lock
push
pop
int
clc
jbe
xor
decl
cld
bound
outsb
xchg
sub
add
pop
sub
mov
or
cmp
sub
sub
cmp
push
or
ss
sar
daa
inc
xchg
je
into
je
clc
lahf
mov
loope
jge
jge
xchg
inc
arpl
lahf
int
cld
sarl
xchg
mov
add
mov
ljmp
andl
in
cmpsl
cmp
add
push
xchg
and
insb
icebp
mov
cmp
push
mov
cmpsl
out
nop
mov
jns
jae
idiv
std
stos
fisttps
test
fdivl
sar
mov
into
lea
idivl
cwtl
jo
aam
test
jg
lcall
and
pusha
or
lods
test
mov
pop
mov
jge
test
decl
xor
paddusw
mov
int
xchg
or
push
jmp
incl
push
jo
ret
sbb
dec
daa
mov
imul
dec
loopne
loope
lcall
adc
sub
and
inc
int3
lock
iret
cmc
jg
push
inc
sahf
arpl
call
loopne
test
and
xor
xchg
iret
lahf
faddl
out
clc
and
pop
imul
movsl
fnsave
dec
mov
out
ret
or
incl
lahf
je
mov
xlat
outsb
insl
test
ret
cmpsl
add
daa
xor
inc
mov
xchg
or
ljmp
inc
std
and
mov
inc
jmp
stos
inc
inc
add
mov
inc
or
pushf
sub
insl
cli
jmp
mov
aas
call
add
cmp
cmp
decl
xorb
inc
push
inc
xchg
push
cmp
popl
std
call
lret
clc
lock
mov
std
sbb
js
sub
imul
push
mov
push
pop
xchg
mov
outsb
int3
sbb
fisubrs
incl
adc
out
ds
xchg
vpsadbw
imul
int3
mov
jmp
or
add
sbb
add
stos
mov
or
jns
addr16
xlat
out
sar
lcall
xor
cs
jae
jo
pop
lcall
jp
ret
add
adc
insl
repz
decb
aad
mov
mov
nop
pop
inc
jg
loop
push
inc
outsb
shrw
enter
rcr
dec
xchg
mov
pushl
fsubs
les
cld
mov
das
jne
cli
xchg
xchg
ud1
pop
xor
icebp
jmp
inc
movsl
mov
push
pop
test
inc
dec
lret
xor
mov
jl
or
adc
mov
out
std
jge
shl
leave
pop
add
lcall
mov
dec
dec
jge
fsts
decl
cmp
jmp
cltd
dec
mov
sub
imul
adc
pop
push
lcall
int
js
inc
xor
jb
pop
inc
ds
dec
stc
pop
fldl
sbb
iret
and
ljmp
fiaddl
mov
loopne
cmp
btr
dec
jmp
jge
dec
jmp
dec
repz
aaa
sti
shrl
xchg
sub
xchg
pushf
in
incl
out
push
push
and
lcall
lods
jb
mov
jno
jecxz
sbb
or
jo
push
js
aaa
leave
pop
cmc
lcall
mov
das
in
data16
in
push
es
dec
pop
inc
jnp
xor
inc
dec
xchg
lock
out
xor
pop
sub
dec
gs
xchg
cmp
xchg
outsl
push
repnz
je
fcompl
xchg
cmp
push
sub
adc
mov
ret
mov
adc
jmp
out
jmp
lods
inc
add
pop
push
xchg
sub
or
or
decl
adc
cmc
jp
inc
mov
data16
addb
fsubrl
pop
icebp
add
repz
negb
jg
repnz
mov
jmp
nop
or
stos
cmpsb
out
and
mov
push
imul
decl
stos
dec
dec
sarb
test
test
or
mov
cli
cmp
push
xchg
sbb
shr
cltd
adc
movsl
fidivrl
push
dec
out
lock
scas
dec
jnp
decl
mov
ja
inc
ljmp
cld
test
xor
lahf
loopne
inc
xorb
pushl
xchg
add
fiadds
pushf
cmpsb
popa
cmpl
rorb
leave
imul
daa
stos
sti
xchg
data16
loope
sub
mov
push
dec
mov
sti
pop
mov
es
ljmp
fwait
daa
sub
je
in
stos
loopne
adc
mov
fmul
sarb
mov
add
and
adc
lods
pusha
gs
adc
lret
ja
jmp
out
rcl
or
push
or
loop
pop
mov
dec
sbb
add
incl
gs
fs
imul
inc
add
test
pop
imul
shlb
pushl
jmp
lods
lea
mov
fldcw
and
mov
dec
cld
or
in
push
jno
fsts
aaa
sahf
mov
xor
and
pushl
mov
cwtl
jp
inc
out
cwtl
sub
sub
movsl
leave
adc
lock
mov
fidivs
xorl
addr16
mov
push
push
es
adc
pushl
pop
push
lods
std
xchg
sub
inc
sbb
jnp
push
lods
pop
mov
sbb
jbe
push
lods
sbb
jle
orl
xchg
fldcw
mov
test
jo
jns
add
jg
jmp
jg
jle
jnp
aaa
mov
insb
jg
and
push
loope
push
jg
jmp
adc
fmull
xchg
jmp
adc
mov
jbe
aaa
call
jge
lahf
fwait
scas
sub
stos
fs
xor
jne
jns
or
cli
jmp
dec
sbb
push
pop
xchg
cmp
dec
repz
das
mov
jmp
movsb
mov
push
sub
ljmp
adc
in
xor
outsl
mov
cld
jg
sbb
cmp
rol
test
mov
add
call
mov
sbbl
movsb
loope,pn
js
push
lahf
lods
sub
or
hlt
push
iret
cld
pushl
jnp
adc
sub
icebp
loope
and
or
push
push
or
push
lods
addl
dec
out
sti
cmpl
cmp
cmc
sahf
js
inc
popf
insb
mov
cmp
rcl
and
popf
aad
clc
jmp
xchg
push
jl
sbb
ljmp
push
dec
cli
stos
jl
stc
sahf
sar
std
mov
adc
mov
dec
stos
sub
xor
push
test
mov
fisttpl
mov
inc
cmc
movsl
sysret
cltd
pop
stos
mov
iret
xchg
fldt
movsb
fidivs
dec
jmp
scas
adc
mov
mov
xchg
jne
loopne
jl
or
ss
jl
pop
sti
cld
out
ret
add
fs
insb
ret
or
jo
fcomp
popa
sbb
into
comiss
xor
mov
pop
sbb
push
xchg
pop
add
into
lcall
addr16
call
imul
stos
lds
pushl
out
add
and
orb
push
mov
outsl
sbb
pop
leave
clc
test
pushl
cmc
add
fwait
mov
inc
int
lods
cmc
test
jp
mov
jmp
fisttps
and
into
into
pop
jmp
push
jmp
xchg
pop
cmp
mov
outsl
movsb
frstor
cmp
aad
cmp
push
push
sub
jmp
rclb
push
adc
mov
btc
test
roll
pop
pushf
mov
lcall
add
sbb
xchg
jb
jmp
test
out
jecxz
lcall
js
div
ss
push
js
mov
mov
push
pop
cmp
std
lcall
dec
mov
std
inc
xchg
lcall
mov
mov
incl
cmp
mov
inc
xchg
mov
scas
mov
xor
push
icebp
lcall
sbb
imulb
adc
cmp
outsb
push
pop
imul
mov
insb
sub
dec
dec
pop
jge
adc
test
or
xor
mov
mov
in
jns
dec
jae
xchg
mov
ja
fs
insl
mov
andb
xor
or
xor
push
outsl
dec
sarb
xchg
pop
inc
jle
sbb
imul
cmp
call
push
pushl
imul
call
call
sbb
out
pop
or
xor
push
into
dec
pop
ret
mov
add
pop
ljmp
mov
leave
out
movsl
dec
jmp
dec
pop
xor
jl
jge
enter
and
fwait
pusha
dec
call
inc
jmp
call
dec
cmc
gs
cmc
shrb
and
insl
cli
and
push
rcll
outsl
cli
js
sub
data16
lds
xchg
rcl
arpl
mov
mov
jae
jne
gs
out
mov
popf
cwtl
std
fldl
aam
das
or
call
mov
testl
fisttpl
test
adcb
decl
jg
xchg
ljmp
mov
out
and
jmp
jmp
xchg
repz
cmp
mov
into
mov
fsubrs
test
xlat
push
lds
lcall
mov
xor
or
loopne
xchg
rcrb
ljmp
pop
add
lcall
jp
fdivrp
push
lods
sbb
xor
push
jo
test
cmp
xchg
or
mov
mov
mov
sbb
cmp
mov
into
xor
outsb
fstps
ljmp
xor
xchg
ja
xor
mov
push
test
sub
sahf
mov
mov
pushl
dec
sbb
sti
sub
adc
jb
xchg
or
repz
pop
or
push
sbb
push
sub
in
lahf
arpl
jge
aaa
outsb
lret
dec
outsl
lds
fldenv
add
call
lock
cmpsl
jecxz
sub
mov
mov
sbb
dec
mov
test
out
jecxz
jmp
push
fistpl
push
fwait
and
push
std
inc
or
add
mov
mov
and
fadds
mov
mov
push
outsb
add
inc
or
and
dec
lret
jmp
lcall
sbb
mov
mov
mov
add
pushl
sarb
lcall
out
jae
enter
call
adc
pop
ja
push
pusha
clc
cli
sbb
inc
out
mov
insl
add
pushl
clc
gs
stos
xlat
pop
jo,pn
das
outsb
xchg
test
and
xlat
lock
pushl
std
call
fwait
adc
or
dec
aaa
sub
scas
adc
call
xchg
ss
mov
mov
nop
outsb
xor
jp
xor
ljmp
sar
fistpl
movsl
pop
mov
stos
cmpsl
insl
mov
push
call
lret
add
outsb
lods
cltd
mov
mov
mov
imul
fisubl
push
mov
xorl
push
sbb
add
jl
cmpsl
mov
xor
sahf
and
mov
mov
popa
xchg
mov
cvtpi2ps
ss
pop
mov
mov
lcall
cld
jno
das
sub
ja
sbb
testb
pop
out
cmpsl
inc
push
lahf
cwtl
in
decl
mov
mov
addr16
icebp
aaa
dec
push
stos
xchg
or
dec
out
out
cmpsb
mov
call
sbb
pop
int3
or
xchg
movsb
bound
repnz
pusha
add
nop
sbb
push
lahf
lods
andb
jmp
aam
cmpsb
fistpll
sub
in
push
mov
arpl
cld
cmp
dec
mov
sbb
dec
mov
pop
adc
in
dec
orb
sbb
aaa
pop
clc
jg
add
xchg
push
into
jge
push
dec
adc
incl
xchg
jg
cmc
lret
and
jns
aas
std
movsb
daa
mov
test
mov
push
push
lods
mov
in
mov
push
sub
mov
push
and
rclb
adcb
les
jle
call
cmp
jge
mov
ffreep
sbb
cmp
ret
ds
lcall
xchg
sub
inc
mov
xor
adc
jo
ss
fwait
add
lret
jmp
in
and
pop
and
inc
pop
iret
mov
enter
lods
out
add
jmp
inc
fisubl
sub
incl
out
scas
dec
outsl
test
out
add
adc
lcall
cs
sbb
push
jmp
push
or
sbb
inc
cmp
mov
pop
insl
adc
mov
fadd
stos
lods
imul
xlat
xchg
mov
pop
imul
out
dec
in
in
std
jne
jbe
ljmp
jmp
push
mov
shlb
imul
mov
lock
mov
lahf
stos
inc
mov
outsb
mov
pop
fstpt
scas
pushf
inc
xchg
cmp
xchg
gs
xor
mov
lds
movsl
cltd
gs
loopne
aaa
sbb
push
int
shrb
fists
add
stos
mov
mov
pop
cltd
test
aam
ljmp
ljmp
aad
and
iret
or
mov
pop
lock
jmp
mov
in
dec
and
fcmovbe
stc
sbb
pusha
ficomps
inc
out
mov
inc
test
cld
decl
and
xchg
pop
shrb
das
fmuls
lds
jmp
push
das
inc
clc
idivb
hlt
aaa
push
dec
jne
jle
sbb
ljmp
pop
cmpl
cmp
cmp
or
aaa
out
mov
lods
or
test
mov
incl
in
mov
cltd
pusha
leave
cmc
clc
sub
or
adc
cmp
pop
sbb
mov
aaa
test
cld
outsl
clc
or
lock
cmp
sub
mov
jmp
dec
push
push
aad
inc
push
or
pop
lretw
lcall
cmpb
ds
mov
imul
sbb
cmp
pushl
leave
mov
aaa
repz
outsl
mov
sbb
dec
adc
out
jnp
aas
xchg
add
mov
dec
dec
push
sbb
push
and
sub
mov
je
push
int
aaa
jmp
mov
lcall
mov
mov
sbb
mov
daa
cs
mov
mov
movsb
in
mov
mov
loope
mov
jp
cli
arpl
sbb
sbbb
push
popa
mov
adc
xor
mov
pushl
scas
adc
in
inc
adc
add
mov
shl
or
lahf
out
pop
test
fsts
mov
adc
lods
clc
scas
ss
pushf
shl
mov
scas
es
push
lahf
arpl
addr16
ljmp
pusha
adc
dec
cmpsl
jp
jne
sbbl
mov
sbbl
incl
adc
in
data16
and
or
adc
dec
cld
cmp
push
xchg
or
add
sub
fdivl
pop
icebp
pop
icebp
ljmp
jle
out
in
repz
sbb
outsb
adc
rcl
cmp
lcall
test
mov
mov
push
pushf
jae
mov
pushl
mov
shlb
bound
les
psrad
std
mov
ljmp
int
pop
push
int
push
cmp
lret
imul
sub
push
pop
ret
jl
incl
mov
ljmp
adc
xlat
dec
lahf
mov
das
cli
dec
or
jae
movl
jmp
orb
mov
mov
movsl
pushf
jbe
or
add
inc
and
decl
mov
pop
or
adc
nop
push
jae
or
pop
mov
idiv
pop
std
call
jo
and
or
out
and
add
je
mov
add
in
cld
cli
dec
mov
xchg
pop
lret
data16
xchg
in
jo
jnp
movsb
push
cli
or
incl
add
dec
ret
testb
lods
push
adc
arpl
int
mov
adc
mov
int
cmpb
ljmp
data16
cmp
dec
or
js
les
jg
popa
jnp
mov
mov
jecxz
in
data16
sbb
std
dec
mov
cmp
or
fcomps
ljmp
inc
cmp
aaa
jle
dec
push
sbb
in
mov
loope
bound
fstl
mov
adc
pop
shrl
adc
fwait
cltd
mov
or
ficoml
in
mov
cld
aaa
cmc
sahf
orl
lods
inc
sbb
or
incl
std
fidivl
inc
mov
xor
and
nop
jl
add
in
jl
add
mov
jmp
ss
mov
push
push
ror
inc
into
sub
cli
jge
shl
dec
jge
cmp
decl
xorb
xor
sub
sbb
push
iret
adc
add
jne
jmp
mov
int3
iret
inc
dec
es
jp
idiv
sbb
pushf
fdivs
call
dec
retw
mov
inc
inc
mov
dec
inc
dec
mov
sub
sbb
test
jp
jbe
in
mov
shrl
sub
not
add
pushf
xlat
stos
lea
imul
mov
inc
pop
add
sbb
or
mov
push
dec
dec
lods
lret
or
add
mov
pop
imul
jecxz
scas
mov
notb
insb
cmp
lcall
pop
inc
xchg
sub
rorl
sub
subl
daa
inc
add
jp
decl
shll
rcll
enter
mov
add
mov
incb
stos
aam
icebp
or
sbb
in
lcall
cs
and
mov
cwtl
in
cli
es
adc
sarb
xchg
hlt
jmp
dec
stos
mul
jne
leave
pop
test
stos
in
faddl
icebp
fs
mov
pop
pop
inc
xchg
cmp
lcall
inc
loop
push
enter
je
das
cwtl
xchg
into
cmp
pop
mov
xor
in
mov
lods
pop
xchg
rorl
adc
push
mov
cmpsl
emms
aad
lds
xchg
ds
hlt
ljmp
stos
mov
jmp
pop
jg
mov
jl
pop
lds
add
xlat
pop
sbb
fcos
out
cli
incl
lock
insl
pop
mov
dec
push
push
add
pop
lcall
xchg
inc
sub
or
pushf
lea
in
cmp
xchg
dec
mov
out
lods
jp
test
push
loop
and
sar
incl
sar
int3
cld
sub
lods
or
in
ja
adc
cltd
and
jg
bound
lret
sub
xchg
pop
sub
and
jge
pop
inc
adc
jno
sub
pusha
rcr
mov
movl
jmp
and
fistps
push
xlat
mov
and
pop
dec
aam
test
jg
test
jbe
icebp
clc
lock
incl
insl
decl
add
cld
mov
sbb
inc
repz
movq
mov
ja
cli
outsb
movsl
pop
shl
enter
cmp
add
mov
inc
test
dec
fwait
sub
jns
fs
data16
sub
jg
rorl
scas
rol
ret
mov
sbb
mov
jne
flds
loope
call
or
int
int3
movsb
imul
mov
fnsave
daa
xor
std
jg
fnsave
pusha
or
out
test
movsb
movsb
pop
gs
gs
jno
push
push
subb
mov
cmp
or
push
dec
repnz
iret
lods
lods
mov
ljmp
in
pop
mov
pop
loope
or
mov
sbb
adc
incl
adc
rorb
cs
in
xchg
bound
adc
nop
add
test
sbb
sbb
pop
jb
lcall
push
in
psadbw
aad
xor
cwtl
popf
in
daa
mov
mov
loopne
incl
and
shll
mov
sbb
jnp
mov
out
imul
ds
jecxz
fnstenv
sbb
cwtl
inc
push
stc
push
pushl
or
repz
int3
adc
cli
dec
lret
scas
mov
int3
pop
inc
bound
jg
xor
pushl
std
cld
icebp
jmp
cwtl
fcom
jecxz
into
loop,pt
lods
outsl
insl
int3
loope
es
int3
call
test
jae
add
cmpsl
rcrb
int
fisubl
mov
into
cltd
movsl
pushl
mov
or
in
hlt
or
sbb
mov
and
dec
incl
jmp
xlat
adc
mov
cmp
stos
outsb
pop
sti
add
pop
ja
sbb
dec
imul
jns
popf
xchg
and
repz
int
inc
ret
jno
stos
mov
pushl
pushf
inc
mov
inc
cld
call
in
js
popf
cmc
lods
or
pop
iret
push
pushf
std
lock
jmp
je
mov
cld
or
call
pop
adc
push
dec
cld
pop
sub
pop
icebp
jmp
mull
movsb
test
mov
xorl
movsb
shl
jmp
test
cmp
push
fldl
sbb
movsb
and
add
push
mov
fldenv
mov
jo
pop
orl
or
inc
xor
fs
jmp
hlt
enter
sub
xor
jl
outsl
push
sub
push
push
or
mov
jmp
sub
jmp
xchg
das
je
jno
mov
adc
cmp
fs
jmp
lods
push
arpl
xor
push
sbb
sbb
xor
in
inc
push
cmp
in
inc
mov
test
das
cli
jmp
test
mov
sub
fnstenv
push
xchg
inc
lods
stc
jecxz
sti
adc
loop
das
push
or
jb
mov
imul
int3
fwait
lods
mov
ficompl
cmp
roll
pusha
push
incl
rclb
inc
ss
dec
add
fs
or
sbb
mov
decl
cmp
push
dec
sub
jmp
pop
sbb
sbb
loop
xor
arpl
inc
dec
ficoms
imul
jbe
sbb
add
jle
stos
jge
push
ljmp
push
loope
dec
inc
push
and
addr16
ret
push
mov
adc
jmp
and
mov
bound
outsl
stc
or
jg
cmp
lods
xchg
add
xor
jo
fnstenv
sbb
mov
push
sbb
push
add
jge
mov
push
push
cmp
ljmp
leave
push
dec
lahf
aam
xchg
xchg
jnp
lret
ljmp
imul
jmp
lea
insb
jge
cmp
mov
pushf
popf
stc
loope
sbb
imul
and
sbb
imul
pushl
cld
ficoml
out
insl
loopne
out
dec
adc
repz
sbb
cmpsb
push
lock
sub
pop
inc
aas
mov
jge
lret
cmp
adc
jae
jg
sub
in
fldenv
test
or
fidivs
adc
clc
fists
ret
dec
fcoml
call
cmpsb
fldl
out
xchg
and
subl
fcomip
lcall
xlat
iret
std
daa
addr16
push
push
imul
pop
imull
dec
mov
inc
das
dec
mov
nop
fcmovnu
jp
lret
lahf
cmp
les
mov
jmp
rolb
test
fstps
lcall
jg
ja
je
sahf
mov
aas
shlb
je
stc
jnp
add
js
ljmp
pop
pop
addr16
rolb
add
lret
lock
repz
out
test
cmpsb
mov
movb
fimuls
add
push
inc
mov
movsl
push
push
cmp
insl
ss
test
mov
add
mov
out
mul
mov
lcall
ljmp
cld
xchg
add
push
mov
jmp
test
in
or
dec
or
test
lcall
push
adc
push
sbb
mov
mov
cmc
lahf
daa
sti
fisubs
icebp
jo
pop
lods
orb
add
sub
xor
sbb
decl
mov
and
or
xchg
push
lret
std
dec
jbe
mov
push
dec
and
jl
stos
incl
aad
jmp
push
inc
xlat
add
dec
cmc
add
inc
mov
mov
divb
xlat
xchg
pop
int
scas
push
inc
cld
test
sub
lcall
stos
cmp
jg
popf
mov
adc
pop
mov
lods
popa
sbb
jne
or
fcomip
jbe
pop
sub
lds
outsl
dec
xchg
mov
push
pushl
fdivs
push
rolb
rorb
in
arpl
decl
mov
mov
aaa
mov
adc
jg
mov
arpl
add
jns
jmp
add
daa
adc
fstl
das
shr
mov
mov
inc
mov
lahf
shr
imul
pushl
cld
enter
jnp
clc
popa
clc
std
xor
bound
jno
adc
decl
fcoms
dec
push
fs
mov
jno
int3
inc
mov
or
xchg
fdivr
es
clc
mov
add
push
pop
xchg
sub
notb
mov
sub
or
jne,pn
xchg
dec
les
andb
jg
fdivr
and
movl
cld
out
xchg
cmc
cmp
dec
lods
inc
mov
push
ja
pop
jge
jge
or
imul
fcomp
cmp
jge
pusha
je
sub
call
test
cltd
movl
push
sub
adc
iret
lret
lret
jmp
mov
mov
mov
rcrl
sub
xchg
mov
ljmp
out
jl
xor
pop
pop
mov
aam
sbb
pop
cwtl
jge
inc
fisttps
mov
shll
pop
cmp
aam
fidivrs
cmp
xor
mov
ret
jno
mov
or
je
sti
or
ret
inc
subb
cmc
std
cmc
push
push
ss
mov
cli
add
xchg
adc
lods
push
jnp
mov
loope
cmc
repnz
jl
push
decl
andb
pop
sub
and
adc
xor
call
repnz
cld
and
mov
popf
imul
dec
mov
cwtl
mov
sub
pushl
imul
jg
jl
mov
adc
jmp
cmpsl
sar
push
mov
out
fcomps
gs
test
push
xor
dec
aaa
popf
andb
and
lcall
enter
std
iret
mov
outsb
cli
stos
xchg
insl
das
aas
fs
mov
push
loopne
in
filds
xor
pop
xchg
lret
xlat
andl
and
mov
mov
pop
inc
sub
mov
sub
stos
adc
pusha
roll
mov
call
lea
hlt
inc
jecxz
xchg
arpl
adcb
inc
and
decl
jle
mov
mov
and
enter
scas
dec
push
jmp
xchg
fimull
incl
adc
dec
stos
cltd
in
pop
mov
add
cltd
hlt
xchg
inc
hlt
insb
movsl
int3
test
sub
outsb
dec
mov
push
push
out
loopne
aas
cltd
cmpsl
outsb
sbb
mov
das
add
pushf
jmp
and
push
popa
rorb
sub
stos
and
push
and
xor
jmp
test
test
inc
pop
push
stos
iret
mov
data16
push
and
pusha
mov
pushl
jne
push
scas
mov
fdiv
jno
dec
mov
push
les
sbb
decl
dec
xchg
xlat
xchg
daa
mov
dec
add
xchg
aaa
and
pop
adc
xlat
pop
int
push
cwtl
cmpb
sbb
popf
jge
call
outsl
icebp
cwtl
out
shr
mov
cli
gs
pop
lret
fwait
leave
insl
mov
out
cmp
ds
cli
cli
not
dec
jge
fists
adc
mov
mov
lods
dec
test
add
mov
and
pop
hlt
incl
dec
pop
andl
adc
ret
cmpsb
jb
jbe
sti
call
pop
mov
pop
jmp
adcb
mov
push
js
mov
decl
imul
mov
inc
shrl
sbb
dec
sub
decl
pusha
jnp
xor
and
or
icebp
adc
insl
js
cmp
adc
incl
cmpsl
dec
push
fistps
mov
push
and
aaa
ljmp
lds
ljmp
clc
aaa
inc
cli
push
imul
popf
inc
mov
movb
aaa
les
pushl
sbb
xchg
nop
cmc
cs
pop
sbb
popa
sbb
mov
int3
stos
test
js
flds
call
testb
je,pt
popa
sub
and
push
jg
jmp
cwtl
xchg
push
pop
sub
jne
mov
clc
and
dec
mov
push
lods
sbb
mov
mov
nop
lcall
sar
mov
cmp
rclb
cld
fistpl
inc
out
imul
mov
mov
fcmovnu
mov
stc
cli
inc
outsb
mov
dec
xchg
mov
shlb
or
fists
fidivs
lods
jp
lods
pusha
push
lahf
mov
mov
repz
dec
loopne
adc
les
ljmp
daa
add
jno
jb
lods
repz
pop
mov
or
xchg
xor
mov
sbb
cmp
jle
iret
mov
lock
cmp
incl
outsb
inc
scas
cltd
out
and
rol
xor
nop
inc
cmp
push
lcall
pushl
cs
xor
cmp
sbb
fsubl
jle
add
clc
in
cltd
aaa
fsub
inc
data16
in
mov
and
out
mov
aam
fldcw
push
popa
addr16
jmp
and
jmp
sbb
inc
testl
lcall
mov
psrlw
add
dec
mov
dec
or
loop
movsl
cmp
sbb
in
pushl
and
or
addr16
js
sub
mov
fsubl
cli
out
fisubs
mov
jne
cmp
loope
xchg
fistps
stos
jp
call
out
pop
push
incl
loope
xchg
jl
les
stos
rolb
dec
and
fcmove
xor
ret
sbb
ljmp
mov
mov
jp
mov
fwait
cmp
decl
das
nop
push
pushf
mov
mov
outsl
inc
or
loopne
jnp
sbb
daa
hlt
incl
stos
push
lods
popf
cmp
adc
scas
xor
mov
xor
fildll
and
flds
sbb
cmp
sti
jmp
adc
call
shl
and
push
jge
push
adc
popa
pop
lods
push
lahf
xor
stc
lcall
mov
stos
jl
in
int
cwtl
mov
xor
int
out
fldcw
addb
nop
lds
dec
pop
dec
fs
jb
js
or
jg
movsl
adc
jmp
xlat
push
shrb
add
dec
scas
xchg
scas
test
xchg
and
in
xchg
insl
jecxz
test
ljmp
sarb
mov
dec
mov
repz
push
cmpl
push
mov
mov
push
jg
lods
push
and
mov
push
xor
lcall
and
call
scas
aad
adc
je
and
add
mov
cmp
pushf
orl
pop
push
dec
call
fstpt
lret
fwait
incb
and
fs
push
jb
add
xor
dec
xchg
mov
fs
adc
decl
out
mov
leave
movsb
mov
jbe
pop
mov
xor
outsb
xor
xchg
add
push
leave
out
dec
notl
jle
icebp
rcr
pop
dec
sbb
nop
adc
sub
call
clc
mov
outsb
mov
popf
pop
in
lds
jmp
and
sbb
adc
or
xlat
adc
and
mov
ja
sahf
mov
ljmp
out
pop
mov
sbb
testb
mov
mov
std
call
or
push
xchg
bound
jb
push
cmpb
jae
mov
lcall
or
mov
jg
cwtl
pop
or
and
jmp
mov
push
mov
push
int
dec
leave
aas
inc
inc
pop
jbe
nop
lock
ret
pop
xor
lcall
fildl
push
cmc
sub
cmc
jbe
mov
xchg
imul
inc
sbb
or
cmpsl
xor
out
xchg
cld
pushl
rcll
inc
sub
cmp
pop
and
negl
rorl
ret
add
or
lret
call
aam
sti
mulb
fldenv
mov
xchg
movsl
in
push
repnz
in
xchg
cmc
push
xor
jb
in
test
mov
mov
fidivrl
scas
push
cltd
imul
pusha
mov
lret
inc
lcall
cmp
fwait
add
iret
or
outsl
flds
leave
xchg
imul
loopne
int
shrb
jmp
xor
stos
push
rol
mov
lret
xor
jno
insb
jbe
dec
push
call
and
jp
stos
loop
jns
push
pusha
popa
add
or
mov
aaa
jno
jmp
popf
outsb
std
outsb
cmp
out
mov
xor
std
adc
jo
add
ds
jae
decl
test
insb
outsb
cmp
inc
imul
mov
sti
adc
es
dec
jns,pn
das
shrb
jl
push
push
inc
push
fsubl
pushl
rcrb
bound
and
jge
cmpsl
mov
out
sbb
mov
cli
pushf
int3
xlat
ret
movsb
dec
pop
aam
das
popf
ds
mov
push
mov
and
jmp
xor
sbb
mov
adc
call
lea
out
mov
add
mov
test
jne
pop
popf
mov
adc
push
ljmp
int3
aaa
fldenv
fists
inc
std
or
jg
xlat
stos
sub
daa
push
lock
bound
push
mov
and
es
inc
adc
or
fildll
lea
test
mov
into
das
sahf
lret
adc
inc
ljmp
lcall
repnz
outsb
bound
stos
mov
inc
lods
imul
stc
out
cmpsl
pushl
pop
ja
jecxz
outsb
push
into
pop
jp
mov
test
sbb
mov
incl
push
sbb
cmpsl
jae
pop
xchg
cs
insb
inc
mov
data16
push
adc
les
jmp
pop
das
repz
xor
mov
xor
xor
cmp
and
decl
and
subb
stos
xchg
repz
mov
ror
xchg
stos
jb
out
test
rcrl
push
push
xor
and
or
test
jmp
sub
lret
mov
fidivrs
cmpsb
ss
fnstcw
sub
pushl
rcll
cmpl
and
add
xchg
mov
aad
jmp
mov
add
cltd
mov
call
fsubl
xchg
stc
jbe
jecxz
adc
cmp
bound
sub
xchg
loope
push
jecxz
ret
xor
fistps
ror
mov
inc
sbb
xchg
test
sub
cmp
call
lahf
subl
call
mov
cmpsb
inc
enter
gs
add
push
mov
jg
mov
aaa
out
push
pop
mov
jbe
out
lods
mov
jmp
jo
push
mov
test
cmp
clc
repz
jnp
sub
jmp
fs
mov
adc
clc
mov
xchg
push
imul
stos
les
adc
and
call
dec
jge
mov
lds
jns
fsubl
cs
into
sarb
sbb
pop
mov
pusha
movsl
sub
pop
pop
fstl
iret
push
sti
and
call
xchg
popf
mov
sub
in
dec
xor
fucomp
xchg
pop
or
mov
cli
call
jb
cmpsl
sub
pop
mov
enter
je
test
dec
jno
xor
add
mov
imul
out
in
mov
cmp
incl
fldenv
xchg
mov
outsb
mov
notb
insl
outsl
fadd
xchg
jmp
rcrb
lods
mov
dec
xchg
and
pop
rolb
test
aad
ljmp
push
testb
repnz
sbb
xchg
ljmp
loopne
pop
imul
mov
xchg
lcall
jb
sbb
in
mov
mov
in
repz
mov
xor
je
sbb
pop
jae
mov
decl
xchg
xchg
push
pop
dec
sbb
sbb
js
pop
insl
adc
lcall
les
test
jne
cmpsl
fstps
cmp
inc
sbb
sub
xor
mov
scas
out
mov
and
pop
mov
jmp
mov
pop
aas
xchg
jmp
cmp
push
fstps
lock
outsb
outsb
sub
nop
dec
pop
cmp
jbe
pop
test
jg
inc
in
mov
mov
mov
test
js
daa
in
add
lcall
loopne
popl
sti
arpl
sub
mul
mov
cltd
xor
mov
call
sub
sub
lcall
dec
jb
push
ret
mov
aam
inc
pop
xchg
dec
fcmovu
adc
jmp
lahf
pop
inc
cmpsb
xchg
and
orb
sti
sbb
lcall
les
add
jmp
les
pop
rcll
mov
icebp
sti
adc
hlt
and
sub
ljmp
push
xchg
jne
repz
sub
pop
out
mov
pushl
xor
cmp
mov
dec
push
lock
adc
sbb
adc
push
ret
shl
mov
push
shrb
inc
and
push
test
sarb
sub
call
jp
sub
mov
fisttpll
or
imul
mov
iret
jbe
dec
jne
sahf
push
xchg
ret
js
call
mov
lods
mov
sub
xchg
enterw
shr
jbe
push
sar
jnp
clc
jo
aad
mul
test
decl
call
jecxz
mov
inc
data16
or
fstpt
inc
icebp
inc
loope
inc
jl
ljmp
divl
jle
test
popf
and
add
cmp
iret
sbb
xor
dec
test
xorl
xlat
shrb
mov
std
mov
addr16
mov
repnz
fstps
mov
dec
lret
sti
xor
or
cltd
inc
and
gs
lret
fisubrl
test
or
dec
test
cli
mov
rcrb
push
cmp
in
inc
mov
pop
mov
inc
jmp
out
dec
mov
dec
and
lret
jmp
xchg
stos
or
push
push
insl
sbb
xor
in
imul
cmp
call
loop
ja
and
insl
in
xchg
sub
in
mov
lcall
jmp
dec
in
sbbb
in
mov
jns
lds
out
aad
add
push
incl
cmpsl
fdiv
cli
mov
popf
cli
lock
repz
ret
cmp
mov
adc
mov
push
xchg
fndisi(8087
fs
rcrl
and
jmp
inc
jmp
outsb
shld
cmpsb
sbb
aad
call
inc
cmp
test
imul
sti
loop
dec
pushf
xchg
testl
jmp
mov
out
xor
mov
lahf
call
jl
lea
fs
and
add
call
and
outsl
push
push
gs
inc
cmc
cs
lods
sti
add
fsubs
push
xor
dec
incl
fmuls
mov
mov
adc
add
or
decl
sbb
pop
dec
push
pop
push
repz
jae
mov
sbb
sub
lret
shlb
pop
ret
push
leave
cs
incl
mov
xchg
xchg
and
call
sahf
push
sub
jle
popa
loope
pushl
test
or
push
xor
leave
out
ja
dec
cli
test
jmp
mov
push
jmp
cs
push
push
adc
add
xchg
shl
dec
cmp
xchg
xchg
mulb
and
sar
daa
or
rolb
sub
pop
xchg
sti
scas
call
outsb
addr16
paddq
adc
mov
xchg
xor
cmp
fwait
mov
fisubs
and
lcall
test
jmp
xchg
push
hlt
nop
dec
out
sbb
xlat
data16
outsl
enter
cmp
pushl
mov
sbb
mov
pop
cmc
les
sub
inc
out
cli
incl
shl
cmp
out
testb
pusha
rcr
and
dec
pminub
cmp
push
and
aad
cwtl
and
call
lea
cld
xchg
aam
test
pop
jl
xchg
xchg
bound
lods
dec
sub
ret
std
xor
arpl
pushl
loope
pop
movb
ja
mov
popf
jmp
aam
push
xchg
jle
jg
mov
pop
aad
std
lods
pop
mov
bound
push
je
jae
mov
ret
outsb
cmp
lds
ljmp
test
inc
lcall
bound
or
jecxz
cld
stos
add
mov
movsl
xchg
fstl
mov
inc
sar
mov
mov
jle
es
jbe
dec
in
push
mov
jmp
sbb
fistpll
call
lods
ljmp
xacquire
lock
fidivrl
dec
jo
insl
mov
mov
lcall
and
lods
scas
call
mov
lret
icebp
adc
ljmp
out
or
jae
pop
stos
pop
sahf
push
ror
stos
xchg
cltd
dec
xchg
arpl
cmp
loope
push
adc
and
aaa
test
mov
xchg
dec
push
push
pop
or
jb
cmpsl
cmp
ds
xor
scas
jae
loop
iret
arpl
pusha
push
cmp
outsb
or
mov
pop
push
addl
loopne
stc
sahf
adc
sbbl
fwait
sarl
push
fstps
sar
je
imul
pop
dec
jle
cmp
mov
inc
decl
xchg
or
movsb
inc
xor
push
nop
or
sub
pop
lods
jl
incl
xchg
sbb
sarb
push
testb
xor
std
mov
sub
ja
out
cli
ljmp
ret
and
ret
adc
sub
repnz
js
rorl
std
pushl
jnp
pop
sarl
out
fisubl
jecxz
imul
scas
into
xchg
push
or
mov
call
sub
adc
dec
popa
xchg
fucomi
mov
lock
aas
out
aaa
dec
xchg
mov
inc
inc
scas
out
push
pop
jp
inc
sbb
decl
test
aaa
repz
imul
fisubrs
arpl
sbbb
dec
jbe
lcall
sahf
mov
inc
sahf
mov
call
roll
jnp
cltd
mov
jp
mov
scas
enter
leave
jp
mov
insb
and
push
call
fdiv
and
inc
stos
repz
inc
movsb
mov
cld
movsl
cld
dec
dec
in
and
cs
push
sar
sub
adc
rorb
cmp
mov
lods
pop
add
incl
mov
fimull
dec
and
mov
das
inc
ret
ret
loopne
mov
sar
movsb
jno
in
scas
out
push
adc
gs
dec
mov
add
lcall
xchg
notb
push
sti
inc
hlt
add
xor
int
push
fs
aam
dec
fwait
decb
dec
pop
and
fcomip
dec
adc
aas
cs
fbld
int
mov
xor
dec
popf
xor
incl
test
mov
dec
cs
xchg
xchg
mov
mov
mov
sahf
adc
push
mov
sub
sub
cwtl
adc
pop
movsl
mov
scas
push
repnz
mov
stos
call
mov
push
das
add
push
dec
pop
jb
add
loopne
insb
sbb
jl
xchg
int3
lods
jmp
lret
fldcw
pop
pop
add
movsl
cmp
mov
pop
ljmp
inc
cli
jb
push
mov
dec
pop
das
jmp
sub
and
lcall
pop
pop
inc
sbb
cmp
inc
subb
dec
or
xor
push
push
ljmp
shl
dec
ja
out
dec
xor
lret
xorl
outsl
and
in
in
mov
fsubp
dec
pusha
out
jmp
stos
adc
dec
stos
mov
add
sarl
xchg
xchg
cs
fists
lock
ret
mov
and
sbb
call
ficoms
fists
stos
inc
pop
cmp
add
fimull
out
sahf
movsb
ljmp
or
mov
movsl
lods
pop
mov
add
xor
mov
sbb
mov
dec
cli
sbb
mov
pushf
cmpsb
push
out
addl
or
ret
jb
mov
adc
pop
shll
cmp
adc
add
cmpsb
imul
mov
mov
lods
mov
cmc
shll
mov
dec
xchg
pop
push
cmp
js
xchg
insl
mov
mov
test
mov
sub
cmpsb
adc
add
ljmp
inc
pop
call
add
mov
mov
bnd
lock
idivl
mov
and
popf
xlat
mov
or
push
scas
lret
in
decb
fmul
add
jmp
mov
stos
lcall
push
hlt
mov
dec
cmpb
mov
mov
pop
push
insl
in
xor
out
push
push
aam
int
andl
decl
sub
imull
lretw
sbb
dec
and
jo
add
in
into
mov
ljmp
lcall
and
scas
fcomip
incl
clc
inc
popf
iret
mov
imul
das
iret
pop
sbb
call
clc
dec
movsb
xchg
aam
mov
pop
add
iret
shlb
push
push
mov
ffreep
inc
dec
push
fs
aas
stos
and
mov
pop
cmp
lcall
xchg
mov
jne
push
cmpsl
pop
jl
in
pop
mov
lret
add
pop
gs
iret
inc
aaa
cs
cmp
test
jl
bound
ficoms
out
or
adc
push
repz
incl
cmpsl
push
cmpsl
enter
aaa
hlt
testl
and
scas
xor
cli
decl
lods
jns
out
inc
inc
inc
pop
popa
sub
outsb
nop
stos
cmp
sti
insb
sub
in
adc
mov
nop
mov
test
sbb
dec
jo
cmpsb
lock
jmp
sti
out
adc
rcll
leave
test
stos
cli
lcall
add
or
push
sub
hlt
out
inc
inc
scas
mov
test
push
sbb
mov
jno
dec
pushf
inc
cld
ljmp
xor
push
testb
idiv
out
xchg
fs
cmp
jg
sub
jo
sub
popf
mov
push
fs
dec
or
loopne
out
std
sbb
pop
dec
roll
outsb
cltd
into
sbb
adc
and
pushl
out
xchg
repnz
cmp
outsb
pop
jno
loopne
mov
loope
outsb
ljmp
sbb
insl
mov
push
or
pusha
sti
xor
push
push
fisttpll
sti
movsb
mov
stc
mov
mov
mov
jge
shll
mov
pop
insb
sub
ficoms
mov
test
cmpsb
arpl
jl
js
pushl
fdiv
sbb
cmpsl
lcall
mov
and
je
jb
test
js
call
push
mov
and
js
cld
sbb
cld
notb
out
mov
gs
fisubs
stc
cmpsl
xchg
sub
scas
outsl
inc
cmp
push
jns
ss
incl
loopne
out
or
or
pop
stos
adc
fadds
insb
mov
xchg
push
outsb
leave
or
ud0
decl
xor
cwtl
movsl
into
mov
mov
lea
enter
movsl
sarb
call
in
pop
js
pop
popf
out
in
inc
mov
and
arpl
mov
aam
sahf
dec
pop
push
int
push
int3
repnz
out
rcr
lock
mov
jg
sbb
cli
mov
cmp
jb
sbb
add
jnp
fldt
in
jg
test
jno
push
std
push
jo
sub
sbb
sub
pop
mov
push
sbb
or
pop
das
mov
adc
sbb
add
push
push
pushl
shll
insb
mov
cli
ljmp
les
jl
sub
call
aad
inc
enter
push
mov
cmc
scas
jb
cwtl
addl
pop
xchg
ret
dec
and
jmp
xchg
inc
dec
xor
sbb
pop
add
out
or
pop
inc
mov
mov
and
loope
imul
mov
and
push
loopne
outsb
test
call
bound
filds
push
push
dec
fnsave
js
jns
mov
lds
push
push
push
add
pop
xlat
je
ds
mov
test
iret
pop
sub
lahf
fildll
nop
lcall
mov
stos
test
push
and
sahf
or
cmpsl
int
sbb
dec
iret
mov
nop
dec
lcall
lret
subl
repz
call
orb
sbb
jl
call
orl
mov
in
setp
ret
stc
add
rolb
push
aam
mov
xchg
fisubrs
sbb
int3
clc
mov
lahf
loopne
mov
lock
decl
scas
mov
jbe
jb
mov
adc
stc
loop
aam
jle
fiaddl
ret
dec
stos
decl
repnz
mov
hlt
or
mov
icebp
and
xorl
cld
decl
sbb
cltd
mov
shr
popf
inc
inc
imul
pop
mov
sub
mov
mov
roll
mov
jecxz
mov
mov
or
negb
xchg
jge
push
rcrb
and
outsl
lret
stos
mov
jmp
fistps
insl
pushf
lret
sbb
insb
or
mov
popf
mov
jg
in
dec
and
inc
xor
adc
dec
dec
mov
mov
push
repz
aaa
sub
mov
lahf
ss
out
cmpsl
mov
sub
cmp
adc
call
adc
sub
inc
mov
xor
loopne
inc
roll
ljmp
mov
cmpsl
dec
sarb
mov
push
imul
push
jg
dec
lahf
xor
adc
jecxz
shll
dec
shll
ljmp
ljmp
xchg
sbb
jno
icebp
adc
xchg
mov
push
ss
and
shl
call
push
jle
fucomi
jl
push
jl
mov
sbb
push
pop
add
adc
jg
push
dec
jbe
push
dec
dec
iret
push
popa
idivb
push
addr16
lret
jmp
jmp
push
mov
roll
dec
js
into
inc
bound
out
lret
insl
adc
push
decl
in
xor
dec
dec
mov
inc
rol
lds
lock
insl
and
shl
incl
test
popf
mov
push
dec
push
aaa
cmpsb
mov
fwait
jbe
or
xor
sbbl
pop
jmp
xor
icebp
mov
outsb
mov
sbb
fcmovu
inc
sbb
aas
movsl
gs
sub
cmp
inc
in
icebp
inc
pop
add
or
in
sbb
mov
pop
pusha
pop
call
pop
stos
imul
imul
mov
adc
mov
decl
xor
stos
lcall
mov
fsubrl
cld
sbb
je
out
data16
aaa
mov
movsb
sub
xor
cmp
pop
mov
mov
pop
and
out
insb
lods
push
and
test
sub
decl
add
add
xchg
imul
pop
push
shlb
and
xorl
loop
mov
lods
aaa
inc
out
sbb
push
cmp
jg
negb
dec
fidivrs
push
inc
loop
incl
cld
pop
mov
cmpsl
jmp
loopne
out
ss
jnp
add
call
xchg
mov
les
movsb
inc
test
sub
cmp
stos
std
nop
outsl
xchg
imul
ljmp
orl
call
dec
mov
add
push
push
sbbb
lcall
iret
inc
int
scas
in
gs
mov
aas
lock
fmuls
mov
cmp
jbe
adcb
call
and
jle
cmp
std
pop
ljmp
stos
movsl
ret
add
call
std
jbe
or
stos
loop
repnz
stc
ds
cld
sarb
mov
lcall
inc
add
mov
mov
ret
cld
in
scas
test
lcall
insl
scas
leave
mov
dec
push
add
cmp
jg
in
jmp
das
pop
inc
sub
sub
lret
shll
and
fmul
push
popa
mov
xchg
arpl
loop
xchg
faddp
pushl
int3
rcr
repz
or
xor
pushf
push
dec
fcoms
movsl
jae
cmp
dec
jno
jg
mov
lret
rolw
mov
xor
fadds
sar
fildll
mov
push
stc
js
je
jnp
xchg
inc
mov
es
lods
lds
jg
inc
xchg
inc
sbb
pushf
pusha
xchg
out
leave
in
xchg
addr16
sub
cmp
push
shrb
pop
hlt
sbb
ret
mov
xor
out
push
ljmp
mov
pushl
cmp
push
xor
sub
sarb
add
or
jl
xchg
ja
add
call
inc
dec
andl
in
lea
movb
icebp
sub
mov
icebp
insb
mov
scas
leave
test
loopne
popf
xlat
mov
data16
incl
cmp
loop
mov
or
sub
hlt
loop
aam
pop
je
add
ja
insl
xchg
sbb
mov
cmp
js
hlt
mov
imul
push
xor
cmp
bound
add
sbb
mov
popf
jecxz
mov
sahf
mov
mov
cmp
push
leave
or
mov
scas
out
push
push
mov
fldcw
sbb
sub
shll
sbb
jp
cmp
test
push
dec
and
aaa
shll
divb
xchg
mov
cmc
cmp
pop
lock
mov
push
nop
test
das
inc
call
dec
mov
cld
in
sub
inc
xchg
mov
in
xchg
push
xchg
movsl
push
xchg
cmp
inc
sti
popa
out
icebp
int
xlat
imul
mov
jmp
pop
jg
nop
or
ret
jno
es
inc
out
and
mov
pop
sar
decl
or
push
mov
cmp
cmp
scas
jp
jns
push
ds
in
outsl
inc
shrb
mov
inc
jle
fidivrl
mov
movsb
lret
outsl
mov
xchg
push
pop
imul
out
mov
test
or
fistpll
jl
pop
arpl
sbb
fsubs
push
in
push
lcall
test
xchg
dec
pusha
cmp
or
mov
rclb
call
ret
fsubrs
pop
push
adc
clc
ja
sbb
add
pusha
adc
cwtl
nop
lahf
aam
xlat
xchg
into
out
aad
xchg
and
incl
sub
push
pop
sub
daa
inc
out
clc
inc
fistl
mov
push
mov
pushl
and
cli
movsl
sbb
icebp
repz
aam
xor
mov
mov
xor
jmp
jge
jmp
inc
lahf
cmpsl
dec
jl
test
jne
movb
pop
mov
incl
incl
jmp
sar
mov
sbb
sahf
sub
clc
lcall
jbe
sub
insb
aas
add
fcmove
lcall
jmp
add
sub
add
xchg
ljmp
lahf
mov
push
xchg
sbb
ret
or
xchg
mov
pushl
or
iret
mov
xor
jecxz
in
fcoms
ja
cld
decl
movsl
adc
aad
lea
sub
jmp
stos
sub
adc
data16
pop
call
jne
sbb
cmp
daa
pusha
push
adc
sahf
mov
sub
in
push
xor
stos
dec
sbb
and
jbe
rcl
nop
mov
daa
inc
cmc
out
inc
jbe
incl
popa
cld
test
lods
xor
xlat
sbb
loopne
mov
test
dec
sahf
sbb
jmp
test
push
jp
xlat
in
or
mov
mov
jecxz
inc
xor
lahf
mov
cmp
or
add
sub
fld
ds
push
xchg
xchg
mov
sbb
jmp
lret
insl
inc
xchg
pop
ss
and
mov
out
xchg
hlt
pushl
push
sbb
xor
int
ja
pop
push
pop
test
push
cld
outsl
sub
pop
fsubrl
out
sahf
in
push
mov
mov
call
ljmp
pop
sti
cmp
fbld
repz
cwtl
enter
call
xor
ljmp
jmp
rcr
and
jne
pop
cmp
or
fistpl
sbb
sub
popf
jnp
ret
fildll
and
mov
mov
and
daa
fcompl
ffreep
sbb
add
mov
pushl
xchg
sub
negb
testl
mov
rcl
xor
sub
mov
pushf
pop
adc
int3
insl
fdivrs
cmp
les
jne
mov
cmpsl
xchg
in
and
push
cld
incl
scas
xor
push
into
jecxz
pop
cwtl
add
mov
mov
jecxz
sbb
bound
stos
lcall
dec
je
inc
bndcn
scas
and
iret
xchg
add
ja
icebp
jnp
adc
repnz
fcomi
and
mov
mov
inc
notb
ror
pop
jmp
mov
fidivrs
dec
ljmp
fimuls
jo
call
xor
pop
jg
ss
xchg
call
rorl
loopne
in
out
or
lods
aas
mov
lcall
jae
adcb
sar
aas
mov
lods
mov
in
pop
push
sbb
cmc
cmc
jge
xor
and
jmp
aad
xchg
sbb
mov
daa
hlt
imul
sub
sbb
mov
push
popf
dec
sti
push
dec
cmpsb
outsl
mov
add
inc
cli
aas
gs
jmp
pop
roll
xor
sarb
icebp
pop
pop
jb
faddl
pop
mov
sbb
jno
in
push
fiadds
inc
push
pop
insl
popf
mov
imul
cmp
inc
adc
mov
xchg
in
mov
push
outsl
and
cmp
push
cs
xchg
pop
insb
mov
fcomip
pushl
cs
stos
jp
xchg
jmp
faddl
pop
mov
mov
mov
xor
xchg
pop
mov
nop
ret
ss
push
subl
lock
sbb
cli
xchg
cmp
int3
movb
and
bsr
cmp
sbb
jl
test
out
inc
decl
sub
inc
in
into
lret
cmp
aaa
cmp
pushl
sbb
dec
xchg
imul
iret
aas
or
xor
and
ret
dec
sbb
lahf
fdivr
call
jmp
xor
addb
mov
mov
or
call
xchg
repnz
cmp
or
xchg
repz
jg
mov
push
ljmp
in
sbb
and
decl
fs
lea
sub
loopne
pusha
sbb
pop
and
cmc
into
pop
jg
incl
loop
daa
adc
popf
insl
mov
pop
imul
mov
pusha
fstpt
jp
lock
lds
push
movsl
mov
pushl
cmp
jnp
lea
and
add
mov
or
pop
mov
pop
pusha
std
mov
sub
pop
mov
or
inc
call
test
push
dec
mov
dec
mov
lret
testb
aad
jmp
movsb
int3
cmp
movsl
xor
imul
mov
pop
sub
nop
shrb
jge
lods
rorl
lods
lods
adc
sub
fs
jns
cmc
or
mov
jecxz
loop
jg
ljmp
es
dec
cmp
adc
cmp
xchg
stos
xor
cmp
pop
jecxz
ljmp
xor
push
pop
call
in
push
shlb
sbb
hlt
mov
loopne
fdivr
push
test
sub
call
int
mov
mov
push
out
mov
bound
int3
outsl
cmp
je
test
mov
xor
andb
decl
adc
aas
sbb
incl
pop
push
mov
add
sbb
sub
call
cmpsl
xor
xchg
xor
jno
out
ret
ret
je
lret
and
sbb
in
jmp
decl
into
ljmp
sarl
ja
fdivrs
mulb
add
push
xchg
enter
sub
jae
pushl
sbb
push
cltd
sub
lahf
dec
dec
cs
mov
repz
pop
sbbb
lcall
sub
jbe
jp
mov
jo
xor
decl
cmp
push
jbe
insl
in
xchg
mov
mov
jmp
jle
sbb
mov
sub
xchg
or
cwtl
sbb
lret
insb
jecxz
mov
pop
pushf
lcall
sub
loop
outsb
pusha
mov
inc
xor
shlb
sbb
adc
incl
inc
jne
jmp
jle
outsb
add
xor
insb
idivl
stos
repnz
or
shll
ljmp
jo
dec
ss
mov
ljmp
adc
test
mov
scas
xchg
inc
fs
xor
scas
xchg
adc
xchg
je
ds
ret
sub
decl
fcoml
inc
xor
and
bound
xchg
movsb
inc
std
sub
cmp
decl
jl
mov
sbb
xchg
mov
sub
into
movsl
cmpb
fisttpll
jle
scas
in
mov
lea
mov
addb
dec
outsl
dec
mov
stc
adc
cmc
mov
sahf
ljmp
in
inc
lock
lods
adc
inc
ret
das
sar
cmp
mov
or
aad
push
and
xlat
mov
ja
push
aam
jno
sbb
dec
repz
decl
or
lock
push
bound
xor
mov
pop
inc
sub
pusha
lahf
push
cmpsl
jmp
inc
mov
push
jae
lods
pop
ret
aaa
push
ljmp
shlb
cmp
xor
jp
arpl
pop
xchg
and
out
cmpsl
in
and
data16
sar
faddl
sub
xorl
insb
cwtl
daa
lret
das
test
mov
ljmp
subb
out
pushf
jno
mov
imul
lcall
mov
jnp
clc
and
mov
loop
mov
xor
test
lods
arpl
dec
jns
and
icebp
push
or
int
cmp
arpl
cmc
std
pusha
clc
mov
cwtl
nop
sub
pushl
inc
sbb
mov
mov
mov
xor
pop
jge
or
sub
shll
fcomip
mov
popa
dec
sbb
fst
and
js
addr16
nop
mov
adc
decl
jecxz
sahf
xlat
xchg
or
push
dec
sbb
and
dec
cmc
mov
mov
mov
imulb
push
push
icebp
jne
stos
pop
adc
sahf
mov
fcmovne
lahf
sub
dec
sbb
mov
and
xchg
movsb
jmp
incl
mov
outsb
je
sbb
jbe
inc
rcrl
inc
sbb
sub
in
addr16
inc
or
or
jmp
lea
or
rcl
or
sarb
xchg
flds
or
inc
add
ljmp
pop
push
hlt
mov
push
mov
nop
adc
dec
dec
xchg
mov
sub
mov
or
pop
mov
lds
in
decl
imul
in
mov
sbb
adc
mov
dec
in
mov
divl
ss
cli
xlat
imul
pop
hlt
xchg
pop
fistps
push
jecxz
or
movsb
pushl
jmp
outsl
dec
sbb
gs
adc
sub
ret
popa
pop
cmp
mov
sub
stc
in
jmp
fiaddl
dec
inc
je
idiv
aas
cld
adc
adcb
ljmp
call
lea
dec
mov
mov
mov
je
aad
lods
das
mov
dec
sub
es
iret
mov
sbb
mov
loopne
adc
test
negb
lcall
jmp
mov
adc
subb
xor
leave
xchg
scas
out
cs
stc
pop
sahf
ret
pop
jne
dec
inc
bound
pop
inc
fs
out
jns
lahf
cmp
cmp
dec
mov
stos
mov
int
xor
call
cmp
data16
xchg
inc
insl
popa
test
cld
inc
mov
in
lahf
imul
outsb
insl
lcall
dec
das
decl
and
and
jns
pcmpgtw
mov
cmp
mov
add
adc
sti
ffreep
pop
aas
push
fsubl
pop
sbb
lea
cli
adc
xchg
pop
and
add
aaa
std
push
std
push
or
push
lea
and
lods
sbb
cmpsb
rcl
jmp
data16
ret
push
fidivs
xchg
in
sub
mov
cmc
arpl
mov
rcr
imul
xchg
pop
xchg
cmp
out
pop
mov
adc
pop
cmp
dec
pop
in
dec
sbb
adcl
push
cld
fadds
call
mov
out
leave
dec
inc
push
repnz
mov
aam
push
xor
mov
and
jecxz
pop
adc
jg
mov
adc
pop
jl
bound
fimuls
call
cld
andl
add
adc
jle
pop
ficoms
std
push
das
fidivrs
or
xchg
cmp
push
rcl
in
loop
and
cltd
stos
data16
ljmp
or
in
dec
xor
mov
les
es
test
xchg
faddl
xor
sub
outsl
mov
xchg
ja
in
gs
call
dec
inc
mov
enter
inc
cmpsb
ret
iret
jno
mov
and
in
scas
scas
ja
cmp
dec
ds
xor
and
adc
sbb
sbb
sahf
cmp
stc
push
jb
sar
pushl
addr16
and
push
stos
xchg
dec
outsl
fldl
cmp
sub
adc
push
or
cltd
push
adc
insl
stos
and
mov
xchg
inc
cmp
xchg
dec
clc
add
sbb
int
popf
fs
and
pushl
xor
call
mov
adc
mov
lds
test
popa
aam
pusha
rcl
dec
repz
xor
xor
xchg
stc
incl
pop
adc
mov
inc
in
mov
and
mov
insl
mov
pushl
sahf
leave
xchg
jb
mov
int3
push
in
lea
add
jae
inc
test
cmpsb
inc
inc
cmp
call
loopne
test
out
addr16
mov
add
add
inc
pusha
pop
aam
fsubrl
jg
xor
ss
inc
xchg
cltd
jp
fisttps
enter
jmp
outsl
cld
mov
in
loop
ret
sbb
pop
mov
jg
jmp
jno
mov
inc
and
sub
repnz
jp,pn
sbb
scas
pushl
dec
or
fisttps
dec
sbb
filds
loopne
add
push
add
add
xlat
jb
mov
loop
flds
negl
in
cmpsl
inc
fucomp
cld
call
sahf
in
mov
loop
push
incl
pop
dec
int
jmp
rcrb
popf
sub
pushf
or
jle
push
push
jns
ds
mov
jo
imul
jle
testl
lods
out
out
test
push
ljmp
movsb
sahf
ret
enter
pushl
shrl
add
bound
in
jbe
pop
mov
push
sub
mov
xor
sbb
mov
push
jb
sub
decl
int3
stos
pop
push
sbb
inc
dec
xchg
shrl
das
jb
fldt
ja
adc
sbb
xlat
cmp
dec
insl
and
scas
sti
inc
jecxz
in
cmp
test
mov
xor
xchg
shrl
data16
lcall
push
pop
popf
andl
dec
sub
cld
outsl
loopne
dec
fwait
push
jmp
mov
mov
xchg
test
pop
jmp
cmp
outsl
cs
imull
pop
add
call
pop
int3
push
cmc
es
pop
inc
xchg
rorl
mov
sbb
pop
in
loopne
sbbl
pushl
xlat
push
mov
mov
subl
jb
pop
int
xchg
pop
or
ljmp
push
add
push
stos
mov
and
aaa
ss
and
jecxz
mulb
scas
mov
add
mov
rolb
mov
jo
cmpsl
push
cmpb
xor
das
clc
jns
inc
repz
testl
cld
test
mov
mov
jmp
icebp
push
ret
pop
fcoml
cli
cltd
and
insl
mov
push
lret
lcall
cld
and
dec
in
mov
push
push
pop
fiaddl
jnp
add
jl
and
in
ljmp
and
lock
and
jle
mov
mov
ror
into
or
jle
xchg
out
push
out
ljmp
xchg
sti
jae
jmp
cmp
das
adc
loopne
mov
or
in
int3
sbb
std
fstpl
decl
inc
mov
push
mov
imul
jmp
outsl
movsb
js
push
and
cmpsl
fcoml
mov
das
stos
aam
test
outsb
inc
call
decl
dec
cli
or
cmp
inc
pop
cmp
test
jp
dec
ret
test
pop
mov
jl
and
mov
jmp
dec
je
or
and
push
stos
shll
sti
xchg
lds
cmp
adcl
pusha
xchg
movsb
rcrl
rcrl
pop
pop
insl
aam
mov
push
mov
decl
std
push
add
rorl
sahf
sti
and
movsl
jp
adc
push
iret
dec
xchg
rorb
xor
push
gs
movsl
aad
jecxz
shrb
ljmp
sub
xorb
scas
adc
mov
mov
repz
dec
add
lcall
mov
stos
dec
out
lret
icebp
mov
and
and
scas
jg
loopne
aam
mov
inc
jl
and
add
nop
jb
mov
xor
xchg
jno
pop
jecxz
arpl
cld
rcl
mov
mov
push
pop
stc
lret
outsl
cmp
mov
mov
addr16
mov
stc
and
pop
loop
sub
push
inc
jp
xchg
popa
gs
push
mov
xor
lret
jg
or
xchg
mov
jmp
clc
leave
cmpsb
cmpsl
mov
mov
xlat
es
ficoml
push
shl
ret
sub
pop
sti
cmovbe
loope
lcall
outsl
notb
add
mov
xor
push
xor
cmp
call
rcrl
test
pop
mov
mov
movsl
cwtl
inc
add
lods
adc
in
jg
jmp
test
fisubrl
ds
adc
or
cmp
decl
aad
out
fdivl
enter
dec
inc
and
je
imul
sbb
pop
dec
mov
inc
mov
es
xor
push
jbe
inc
mov
ljmp
std
loop
shlb
sub
jecxz
in
mov
imul
scas
xchg
int
xor
icebp
jecxz
out
dec
in
push
test
aam
inc
xchg
inc
imul
push
loope
mov
xor
xchg
pusha
mov
pop
lret
mov
cmp
int3
test
jno
inc
loopne
jg
mov
lahf
pop
rclb
lods
jl
mov
xchg
roll
jle,pt
push
pop
mov
sub
xchg
and
lods
jae
pop
fmull
test
call
xor
jmp
test
sub
mov
xchg
out
push
mov
xor
gs
sti
pop
leave
nop
dec
cmc
js
lods
cmc
and
cmpsl
lods
sbb
adc
or
mov
mov
ljmp
sahf
lcall
mov
mov
lcall
call
test
or
nop
lock
adc
je
jnp
in
xchg
mov
and
add
ljmp
out
stc
hlt
or
pop
add
mov
sub
xchg
sub
pop
sbb
jp
test
mov
bound
mov
add
push
cmp
lds
das
cmp
inc
jg
shl
jmp
int3
adc
clc
mov
jo
mov
lret
ret
mov
call
rclb
ds
cmp
or
mov
mov
in
xchg
add
js
aas
outsl
mov
arpl
loope
mov
pushl
leave
mov
and
std
mov
les
or
jno
imul
loop
xlat
inc
loopne
push
mov
sub
mov
sbbl
popf
inc
shlb
test
into
div
pop
sbb
xchg
mov
xor
loop
ffree
lcall
leave
or
mov
mov
loopne
test
addr16
lcall
xchg
cltd
cltd
mov
aas
and
jne
in
dec
lods
vcvtps2dq
jg
add
push
dec
gs
ffreep
jecxz
sub
add
xchg
insl
xor
or
mov
shll
mov
cltd
aaa
in
lcall
inc
pop
mov
ljmp
in
fisubl
loop
push
loopne
jg
decl
cli
pusha
pop
mov
pmullw
xchg
xchg
mov
std
dec
cmp
jp
lcall
adc
icebp
pop
mov
pop
mov
pop
pop
nop
xchg
daa
dec
movsb
lcall
popa
leave
push
cmp
and
xchg
fldenv
sbb
dec
or
shrl
call
sub
ja
adc
jo
xchg
mov
repz
mov
jl
fs
jmp
cmp
std
mov
push
pop
test
das
jnp
inc
sahf
mov
decl
fs
push
push
sahf
popf
outsl
sub
pop
into
push
loop
sbb
shlb
retw
bound
scas
and
mov
sub
pop
mov
jmp
jge
mov
push
call
sbb
fsubrl
sub
into
xor
sbb
inc
sbb
mov
sub
aad
inc
jle
lods
push
push
imul
in
sar
mov
add
cmp
pop
std
mov
mov
sbb
push
xlat
int
iret
or
mov
notl
jl
mov
mov
decl
mov
push
test
pop
pop
adc
scas
xchg
pusha
je
js
xchg
rcrb
jno
inc
lods
dec
ljmp
sub
fidivrl
ret
out
mov
inc
lahf
add
jns
lea
pushl
push
cltd
dec
cmp
jo
sahf
push
cwtl
push
lds
pop
std
dec
jo
aas
movsb
test
fcmove
cmp
cmpsl
pop
call
xorb
cmp
cmp
into
xchg
mov
jb
rcrb
es
movsl
cmp
lods
test
test
push
lsl
in
out
lret
mov
jnp
mov
jbe
fisttps
push
mov
add
hlt
cmc
dec
dec
ljmp
dec
jb
int
pusha
aaa
cmp
imul
dec
and
cld
mov
or
out
inc
dec
sub
push
in
daa
sbb
les
aas
sbb
in
call
xchg
pop
or
add
push
jg
pop
in
push
pop
inc
scas
sub
inc
add
cmp
pushl
adc
dec
jae
lahf
add
fwait
into
mov
adcb
or
adc
mov
mov
dec
outsl
jo
das
mov
enter
test
xchg
add
lcall
cmp
add
sub
test
jmp
pushf
les
insl
out
js
dec
dec
out
scas
rolb
mov
jnp
sub
inc
jo
mov
das
rol
push
push
sarl
pop
and
imul
call
mov
push
dec
mov
sbb
inc
hlt
pop
add
mov
mov
dec
sub
cmp
lock
loope
ret
cmp
sbb
pop
std
orb
pop
inc
mov
mov
pop
adc
ret
cld
imul
mov
add
cmp
std
incl
stos
out
adc
cmp
and
popf
push
jno
push
dec
inc
test
xchg
inc
push
xchg
lods
mov
cli
mov
mov
addr16
or
jecxz
push
pop
movsb
aaa
pushf
rclb
lcall
movsl
addl
push
mov
sub
lret
lcall
roll
outsb
cmp
cmpl
pop
mov
or
mov
psubb
inc
sbb
xor
dec
test
je
fcompl
insb
adc
filds
mov
ljmp
stos
sbb
scas
or
mov
repnz
aaa
inc
aam
jle
jae
push
ret
call
stc
outsl
cld
inc
outsl
xor
je
mov
cld
mov
orl
decl
or
push
xlat
js
xor
jmp
je
int
stos
cmc
jmp
or
dec
xchg
mov
ficomps
cwtl
xchg
movsl
sub
outsl
cli
loop
inc
loop
xor
or
clc
fbld
int3
scas
pop
sbb
mov
iret
faddl
mov
pushl
int3
add
cmpsb
lock
in
and
movsb
cmc
dec
mov
sarl
leave
jp
ljmp
aas
lcall
mov
daa
outsl
mov
jb
rorl
pushf
test
add
cmp
out
clc
imull
int3
add
mov
ret
lock
ficompl
mov
incl
mov
cs
popl
call
shrl
stc
push
xchg
jp
xchg
imul
push
es
scas
jg
mov
pop
xor
dec
movsl
or
loope
pushl
jne
mov
and
xor
ss
mov
xlat
std
dec
inc
aad
insb
jns
hlt
pushl
gs
scas
sbb
cmp
sarb
dec
ret
mov
lret
addr16
sbb
or
incl
test
fs
mov
hlt
cli
dec
mov
xor
incl
xor
xchg
cs
jae
dec
xchg
jle
and
dec
mov
lret
cmp
decl
mulb
xlat
lea
mov
lods
in
stos
push
fmull
jmp
aam
jmp
sub
test
mov
mov
xor
mov
pop
dec
or
xchg
jecxz
shlb
out
loop
inc
pop
cmpsl
insl
outsb
fistl
call
cli
sub
mov
xlat
jnp
dec
inc
push
cmp
jp
dec
fs
xchg
je
add
loope
divb
ret
pop
pop
mov
sbb
decl
sti
mov
ljmp
xchg
cmp
add
in
inc
std
loop
and
decl
ficomps
inc
inc
faddp
jnp
dec
fldt
inc
in
daa
xchg
mov
mov
das
adc
mov
shrb
inc
out
lock
sub
stos
cltd
cmp
mov
pushl
sub
pop
jp
insb
or
dec
mov
test
in
mov
push
sub
sti
and
shrb
cmovl
out
pop
es
push
scas
and
mov
test
push
cld
out
push
pushf
sub
and
add
subb
xchg
shl
jmp
mov
cmpsb
push
jne
and
mov
ss
je
fidivs
lods
adc
sbbl
adc
xchg
pop
cmp
nop
cmpsb
cmp
test
decl
mov
pop
clc
popa
stos
jne
push
ds
adc
les
jg
mov
dec
xchg
jl
nop
in
jle
sbb
xchg
int
stc
mov
sbb
test
xchg
and
rcl
aam
cmp
ja
rolb
ret
incl
icebp
push
les
cmpsb
jns
loopne
aas
xor
scas
es
push
inc
sub
test
add
mov
insb
jnp
pop
cmp
dec
mov
sti
mov
mov
mov
adc
sti
pusha
leave
movsb
loopne
lret
sub
jge
fdivrs
lds
andb
rcr
mov
iret
inc
xor
sar
jae
pop
xchg
fimuls
and
push
jl
call
sarb
rorl
dec
mov
arpl
xchg
cs
pop
mov
gs
add
std
mov
stos
adc
xchg
mov
jne
mov
out
mov
call
sarl
dec
insl
push
repz
int
fidivl
test
sub
inc
sbb
js
adc
nop
jp
lds
dec
insb
decl
int
add
std
fs
insl
incl
testb
jnp
out
sahf
jg
ljmp
aaa
sbb
pop
inc
mov
lds
ds
add
and
out
mov
test
test
fistpl
cmp
add
inc
xchg
mov
call
push
nop
pop
xchg
add
dec
sbb
repz
inc
adc
mov
mov
shll
mov
add
jmp
mov
or
cmp
xchg
insl
pop
adc
and
call
dec
dec
outsl
or
pop
clc
sub
into
mov
push
loop
out
movsb
pop
std
and
call
mov
sbb
ds
pop
xchg
jns
lret
pusha
push
mov
sub
mov
or
subl
cmp
imul
pop
jecxz
repz
call
repz
xchg
cld
add
daa
out
out
ljmp
or
jbe
dec
sbb
sub
cmpsl
in
cmp
pop
lods
xor
xor
mov
jmp
sbb
pop
jns
xchg
xchg
adc
stos
add
mov
pushf
push
inc
dec
loop
roll
pop
xchg
inc
add
mov
cmc
push
mov
mov
fmuls
mov
xchg
decl
mov
pop
pop
jne
push
mov
push
stc
paddd
popa
or
add
incl
pop
cmp
mov
sub
into
mov
test
xor
pop
jmp
cmp
mov
int
aam
mov
push
cmpsb
or
lcall
aaa
jle
adc
mov
dec
orb
mov
push
inc
xor
subps
adc
lcall
aas
and
outsb
loop
pop
or
das
popf
adc
incl
rolb
fnstcw
pop
xchg
sti
adc
adc
fcomps
dec
sub
call
inc
inc
sbb
jb
test
inc
xor
mov
lret
nop
xchg
dec
or
mov
fimull
push
cmp
jae
stc
decl
mov
mov
inc
aaa
add
adcb
pop
out
jno
mov
and
in
mov
xor
add
adc
add
lret
mov
jns
ljmp
mov
push
fidivs
pop
mov
testb
js
push
add
test
push
sti
andw
std
addr16
dec
aaa
std
adc
call
xlat
pop
dec
loop
lret
mov
lret
adc
dec
lock
sarb
lret
cli
icebp
push
icebp
js
dec
pop
decb
out
xorb
inc
jne
push
insb
mov
push
filds
test
sbb
into
sbb
sbb
dec
shll
pop
popf
inc
out
push
push
fs
outsb
fisubl
je
and
jo
mov
negb
inc
jne
pop
cld
lcall
sub
adc
pushl
jmp
test
add
je
mov
cmpsb
icebp
adc
mov
inc
push
ljmp
pop
mov
add
dec
cmp
ret
mov
mov
pop
pop
jo
daa
mov
decl
stos
popa
iret
mov
in
stos
sub
fdivrl
mov
out
sub
cmp
ret
jl
cmpb
jg
in
leave
out
pushl
int
std
cmp
jle
inc
jmp
mov
xor
push
aas
out
pop
in
aas
cmp
nop
jbe
jg
add
dec
xchg
mov
push
fidivs
xor
test
loopne
dec
gs
jl
mov
inc
inc
pop
lret
push
incb
add
call
mov
daa
movl
dec
shll
das
add
stos
xchg
imul
jno
add
fwait
sub
inc
nop
pop
sarl
into
push
inc
dec
sarl
jne
enter
xor
shl
mov
les
scas
or
sub
ljmp
xlat
js
inc
fnstenv
ljmp
hlt
sahf
cmp
ljmp
int
std
push
push
mov
mov
cld
mov
movsb
xchg
incb
sbb
stc
dec
inc
sub
cwtl
and
mov
xor
loope
mov
lcall
xchg
int3
dec
add
xor
ret
stos
fimuls
mov
dec
cmpsl
jg
inc
jmp
fnstenv
stos
pop
cli
cmp
jno
test
sbb
shlb
jmp
sbb
movsl
adcl
cs
std
mov
lcall
cltd
pop
push
push
dec
xchg
mulb
andnps
bnd
jno
rcll
mov
push
ljmp
pop
mov
mov
pop
in
out
push
mov
loop
shlb
jno
call
rorl
pop
cld
loop
movsl
in
shll
outsb
cs
or
mov
enter
adc
call
jg
jecxz
stos
divl
nop
stos
fdivrl
je
nop
dec
enter
fs
adc
filds
fs
add
out
mov
fistpl
add
add
mov
add
pop
pop
push
or
or
or
or
or
lret
push
adc
adc
push
adc
fs
or
pop
cwtl
adc
adc
adc
add
mov
or
adc
pop
adc
pop
push
xchg
cmp
mov
and
xchg
or
ss
add
add
adc
cwtl
ret
add
enter
mov
fbstp
xor
jge
add
call
add
push
adc
pop
and
xor
inc
mov
adc
xor
sbbb
gs
sbb
cmc
inc
aad
add
andb
mov
enter
pop
adc
and
pop
and
inc
add
or
test
or
add
pushf
into
pushf
add
jmp
mov
pop
scas
cmp
adc
fwait
incl
lods
push
adc
pop
popa
jno
and
adc
mov
mov
and
push
lock
loope
icebp
or
push
or
mov
sbb
addb
loopne
scas
fiaddl
or
js
mov
sub
sar
or
jg
incl
cld
cli
and
mov
inc
jnp
test
jge
cli
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
jmp
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
icebp
call
fisubrl
in
mov
orb
int3
lcall
mov
push
jg
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fs
call
lods
scas
xchg
test
jmp
outsb
iret
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
outsl
jg
cld
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
pop
in
pushl
clc
pop
pop
mov
jmp
sbb
insl
js
jecxz
lods
mov
out
pop
jb
mov
or
lcall
inc
sbb
sub
pop
mov
jl
rorl
adc
cmpsl
loopne
jg
hlt
push
add
stc
loope
mov
shrl
andl
aas
icebp
testb
mov
decl
inc
gs
sub
jno
pop
sub
jg
scas
cld
or
incl
call
sbb
paddb
inc
mov
dec
adc
call
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
in
cmp
test
loopne
cli
adc
aaa
xchg
in
add
dec
outsl
mov
inc
adc
loope
fisttpll
out
aas
std
cli
push
push
pushl
jg
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
js,pn
stos
imul
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
add
lcall
xor
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
ljmp
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
lcall
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
cli
adc
and
lahf
aas
lahf
fnstenv
lret
mov
pop
pop
cld
aas
clc
mov
sub
mov
dec
incb
fisubrl
aas
mov
testb
mov
or
cld
inc
or
pop
jg
add
fildll
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
decl
push
std
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
rcll
fdivr
mov
sbb
mov
lods
loopne
and
clc
andl
mov
lock
or
add
mov
mov
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
cld
decl
rolb
pop
inc
jb
fistpl
adc
call
pop
in
xor
pop
pop
nop
mov
inc
sti
ljmp
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
push
lcall
dec
xor
fsubr
fistps
lds
fidivrl
jg
inc
stos
pop
add
dec
mov
sub
jge
xor
lahf
shrb
mov
push
cld
addl
pop
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
jmp
pop
test
bound
pop
outsl
das
sar
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
incl
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
in
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
fisttpl
sub
jmp
lea
jp
jnp
jecxz
out
cld
adc
inc
lds
push
pop
adc
imul
or
inc
pop
mov
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
lcall
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
lcall
test
aas
lods
add
fcomi
fists
sbb
lock
in
jmp
out
sbb
pushf
mov
clc
push
std
mov
pop
add
out
jne
or
call
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
cs
hlt
out
cmp
clc
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
sub
fidivl
xlat
rcrl
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
call
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
scas
loop
in
sbb
xchg
imul
jmp
outsl
jmp
std
loopne
add
mov
daa
jmp
faddl
mov
push
adc
outsl
dec
push
pop
add
pop
stc
push
dec
out
fstpt
pop
mov
enter
shrl
inc
dec
cld
add
add
push
sti
pop
inc
enter
add
or
mov
mov
test
and
or
in
or
adc
sub
mov
add
add
out
movsb
mov
add
mov
add
incl
mov
jae
or
push
repnz
jo
mov
jg
add
sbbb
jg
ss
enter
pop
dec
orb
push
add
and
mov
adc
pop
inc
or
sub
dec
fs
movq
loop
ss
add
nopl
dec
mov
scas
dec
fsub
test
popf
mov
stc
jno
mov
jnp
xchg
movsl
push
daa
add
cmpsb
mov
and
cmpsl
push
and
cs
push
pop
and
mov
scas
push
out
and
stos
push
and
push
test
and
imul
mov
sbb
pop
add
mov
cld
repz
mov
sbb
inc
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
incl
mov
insb
or
lret
imul
imul
imul
sub
lret
mov
jbe
fldenv
add
sub
jae
mov
xor
cmp
stos
pop
stos
mov
jbe
jb
ss
add
jo
mov
push
shll
add
outsl
lods
loopne
insl
push
shll
fidivrl
iret
outsb
or
push
ss
mov
sbb
jns
out
jge
mov
mov
xorb
ljmp
movsb
push
add
mov
jl
stc
mov
shlb
mov
lcall
add
jne
shr
data16
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
mov
push
data16
inc
ds
scas
cmp
push
push
shlb
mov
outsb
outsl
stos
aas
add
ja
fstpl
fldl
push
xlat
jne
add
ja
mov
insl
rcll
aad
push
xlat
ja
js
push
jl
sarl
jns
push
jp
jp
inc
push
fidivrl
push
insb
push
out
sarl
ja
fldl
rorl
jmp
ljmp
ficoml
xchg
sub
push
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
insb
out
cltd
cmp
cmp
pushf
cmp
popf
xchg
ds
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
movl
sbb
lock
hlt
clc
sahf
out
sahf
stc
cli
sti
cld
std
fstps
loope
inc
jo
add
mov
jae
add
dec
data16
imul
pop
cltd
int
mov
pop
add
pop
add
add
cs
mov
push
mov
mov
add
ja
inc
push
add
or
add
add
outsb
add
outsl
or
or
xlat
ds
cld
test
test
or
push
lods
sbb
add
pop
adc
rcll
adc
lods
add
fwait
pop
mov
pop
stos
femms
lods
lods
pop
insl
addr16
mov
add
scas
loopne
imulb
adc
add
lods
adc
sbb
mov
scas
scas
scas
out
in
scas
sbb
mov
mov
dec
repz
and
mov
nop
inc
and
cmpsl
and
or
xchg
mov
and
pop
and
pop
mov
inc
jo
fsubs
pop
sub
pop
sub
mov
pop
and
mov
cld
and
mov
jns
push
mov
aaa
pop
aas
cmp
subb
pop
cmp
pop
idiv
adc
inc
mov
xor
xor
fstps
push
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
add
dec
jnp
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
call
aam
sub
inc
mov
xor
push
push
popa
push
lcall
jg
jg
jno,pt
add
aas
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
lahf
cwtl
sahf
mov
pushf
fwait
lcall
aaa
loop
mov
lea
xchg
push
add
jle
je
xchg
pop
push
bound
js
imul
cmp
je
add
rorl
xchg
inc
jnp
addb
into
xchg
mov
xor
pop
pop
scas
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
xor
in
xlat
push
ja
jb
cs
xor
mov
xchg
and
push
into
pop
jbe
popf
mov
jle
and
push
mov
xchg
jge
dec
pop
jo
push
inc
mov
cmp
mov
xchg
add
push
jae
int
testb
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
std
int3
xchg
jb
bound
mov
mov
jg
jns
push
sahf
mov
insb
add
mov
into
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
mov
sti
dec
movsb
jae
add
jb
shll
outsl
adc
lcall
xlat
pushf
push
rorb
add
lcall
outsb
scas
divb
out
mov
dec
push
add
ja
sahf
jbe
in
daa
mov
fistpl
imul
stos
push
add
in
pop
jmp
add
js
mov
data16
out
test
shrl
insb
pop
outsb
push
outsl
adc
push
ds
insl
sub
sbb
jg
fiadds
or
out
data16
mov
in
adc
mov
add
test
mov
iret
sahf
mov
divb
add
jb
out
in
push
jle
sbb
or
jecxz
or
push
aad
sarb
push
fildl
adc
push
subl
sbbl
sbb
sbbl
test
jmp
faddl
in
mov
push
pop
mov
int
pop
nop
and
out
xchg
in
xchg
pusha
add
mov
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
xorb
cmp
aam
dec
xchg
push
sub
cmpsl
push
cmpsb
scas
jo
sub
sahf
mov
shrb
into
shll
lgs
int
mov
stc
insb
fiaddl
push
rcr
rcl
mov
push
aad
jle
data16
add
shr
and
push
dec
dec
and
out
je
dec
push
pop
add
xchg
test
enter
push
or
or
or
es
add
notl
pop
push
adc
push
add
add
testb
mov
sbb
add
mov
adc
or
cwtl
sbb
mov
sbb
add
push
add
and
fildll
mov
and
cs
mov
aas
and
pop
imul
aas
xor
or
aas
aas
inc
sahf
sub
cmp
cmp
and
cmp
paddsw
jbe
adcl
incl
jle
cmp
imul
ds
mov
mov
repz
aas
adc
ds
data16
out
mov
decb
test
ror
add
mov
pushl
lds
add
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
std
mov
test
test
test
mov
mov
push
dec
xor
sub
sub
sub
sub
sti
mov
ss
and
inc
mov
push
push
push
push
dec
or
call
insb
insb
pop
push
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
xor
outsl
jns
jle
addl
jo
outsb
pushf
sti
adc
push
lds
repnz
rolb
add
mov
incl
aas
sub
shr
ja
push
push
add
jmp
cli
cmc
repz
dec
xor
aas
add
mov
call
inc
add
mov
add
mov
push
mov
es
fnstsw
repnz
mov
cmpsb
gs
jecxz
pushf
add
mov
popf
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
adc
js
and
shll
push
data16
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
pop
push
adc
and
add
dec
ss
mov
das
xor
sub
sub
adc
stos
inc
lods
mov
subb
sub
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
add
outsl
bound
add
inc
pop
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
arpl
add
jg
push
push
push
decl
xchg
cwtl
sbb
jbe
adc
sub
jmp
int3
movb
sbb
sub
xchg
shrb
je
push
jmp
lods
scas
inc
cmpb
imul
addr16
inc
pop
jle
mov
inc
pop
dec
rcrb
test
pop
add
push
call
inc
pusha
sbb
pop
xor
jg
mov
lea
outsb
pop
adc
jg
incl
add
adc
jg
test
sbb
ss
pop
shlb
bound
dec
pop
rolb
lods
jg
jle
lcall
jne
fdivrp
cmpsb
ljmp
mov
stos
pop
stos
pop
pop
pop
add
notb
daa
aas
aaa
pop
stos
sub
pop
roll
jbe
aaa
add
or
add
stos
jle
pop
and
jle
push
dec
xchg
out
sarl
push
mov
mov
push
comiss
daa
push
mov
addr16
pop
push
and
out
push
inc
lea
mov
xor
or
notrack
dec
mov
adc
lea
mov
push
push
pop
or
fnstenv
add
xor
ja
push
jbe
adc
fwait
adc
push
jnp
push
jp
fnstenv
and
push
js
dec
jbe
pop
xlat
jne
mulb
pop
mov
mov
mov
push
outsb
push
daa
aam
ljmp
call
hlt
mov
dec
ljmp
in
pushf
inc
outsb
ss
cmp
call
jmp
mov
or
xchg
pop
outsb
lahf
mov
push
mov
mov
dec
pop
jbe
sahf
inc
out
inc
jbe
call
scas
cs
aas
popf
inc
push
pushf
cmp
test
pop
cmp
fwait
adc
xchg
xor
sub
mov
out
nop
sub
nop
daa
ss
cs
mov
dec
xor
xchg
incl
bound
jg
callw
pop
fnsave
xor
jmp
je
cmp
sahf
cwtl
sbb
xor
jbe
ss
inc
dec
pop
and
push
add
pop
ja
fidivrl
xchg
movb
sub
pop
ja
push
incb
aaa
mov
add
add
mov
lods
sub
push
loop
andl
or
outsl
sub
jno
add
add
or
and
les
push
adc
repz
orl
lea
lcall
imul
mov
sbb
test
push
repnz
cmp
cmp
icebp
add
subl
in
add
mov
push
test
decl
add
and
mov
daa
sub
xchg
add
push
sbb
xor
dec
cli
push
idiv
add
adcb
into
jmp
syscall
mov
sub
pop
in
incb
add
pop
filds
sbb
add
sub
and
das
pop
cld
call
push
test
pop
daa
std
out
add
ret
fldl
lcall
or
push
adc
sti
inc
popa
mov
incl
incl
bound
mov
ljmp
call
inc
popa
or
jmp
adc
sahf
sub
mov
mov
sbb
or
jmp
sbb
lcall
repnz
mov
enter
clts
add
dec
add
mov
jb
iret
jle
adc
push
int3
rolb
out
mov
call
push
movsb
test
add
decl
pop
pop
add
cwtl
sbb
incl
inc
shrb
sbb
ljmp
lret
sub
popf
mov
push
std
ficoml
dec
mov
out
adc
test
test
call
adc
and
mov
lgdtl
popa
repnz
push
call
jg
outsb
mov
incl
adc
xchg
loop
jae
mov
push
test
push
addr16
sbb
gs
in
rcll
pop
inc
movsb
mov
mov
push
pop
aaa
mov
sub
push
shll
js
mov
roll
dec
mov
ret
incl
fwait
in
es
dec
push
mov
in
in
inc
push
inc
inc
pop
outsb
arpl
pop
mov
sahf
int
sti
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
cmpsb
test
cs
dec
xor
mov
jmp
repz
outsb
xchg
outsb
shrb
es
push
das
xor
jb
imulb
push
iret
xor
xchg
insl
pop
daa
outsl
push
xchg
fs
stos
and
dec
notb
push
ljmp
inc
push
sbb
dec
pop
add
aam
movsl
pop
int
repnz
jmp
popf
cmp
aas
jmp
mov
decb
cwtl
xor
int
push
xchg
push
push
aaa
cltd
movsb
mov
push
lcall
jb
mov
xchg
es
xchg
xchg
sahf
notb
sub
lcall
xchg
mov
push
add
sbb
add
fwait
popf
es
fcmovbe
js
std
faddl
and
push
push
jnp
jp
jbe
cmp
or
jl
or
jl
push
or
ss
jge
jg
es
jbe
adc
outsl
data16
fidivrl
push
dec
push
dec
repnz
repnz
jae
pop
jg
insl
neg
jns
push
mov
jnp
jge
hlt
in
add
pop
ret
cli
int3
outsb
nop
negl
orb
mov
stc
sbbb
and
mov
adc
adc
lods
pop
pop
or
imul
cmp
jnp
lahf
dec
es
mov
stc
in
inc
and
orb
jg
and
mov
inc
and
push
sub
iret
out
mov
cli
in
mov
clc
push
idiv
jp
popa
sub
inc
sub
jg
mov
icebp
mov
mov
or
jle
daa
jno
sub
jg
mov
icebp
xorb
push
nop
cld
jg
mov
ja
loope
xchg
lahf
mov
dec
es
shll
inc
and
cmpb
jmp
mov
xchg
jg
dec
in
shrb
ja
jp
scas
orl
mov
icebp
sub
lcall
movsb
or
fsub
pop
push
push
test
sub
int3
decl
adc
fidivrl
arpl
clc
or
decl
imul
pop
or
xchg
cmp
std
mov
into
lcall
push
jns
pusha
mov
push
mov
jmp
xchg
fistps
mov
push
xchg
mov
loop
sar
mov
xchg
out
sbb
loope
and
lret
jg
out
mov
test
cmp
push
in
add
stos
testl
adcb
xlat
push
cmovno
mov
fs
add
sub
push
pop
sbb
movb
or
cmpb
add
cmp
add
push
inc
lahf
aaa
orb
lret
adc
call
sub
pop
pop
xchg
push
dec
inc
fnstenv
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
test
stos
xchg
incl
enter
add
inc
add
and
cmc
imul
push
pop
push
add
rcrb
fcomps
or
movsl
icebp
inc
push
gs
jo
sub
aas
fiaddl
sbb
add
pop
push
pop
and
add
sub
xchg
sub
jl
ret
lea
xchg
fadd
jne
popl
pusha
push
divl
dec
test
add
test
cmp
das
mov
jae
std
sbb
mov
mov
imul
push
push
or
insl
mov
stos
shrb
popl
and
jno
mov
add
push
sarb
insl
loope
aad
sbb
sbb
and
cs
add
push
inc
pop
sbb
rcrl
insl
and
adc
pop
popf
in
scas
insl
scas
push
push
popa
shlb
xor
subl
cmp
push
add
add
add
lds
insb
popa
add
sub
aad
push
pop
mov
add
inc
mov
adc
andb
or
fimuls
lcall
lahf
push
add
mov
xchg
push
scas
jo
xor
dec
push
outsl
loop
imul
popa
and
push
pop
inc
mov
dec
sub
or
fwait
ljmp
pop
pop
fdivr
mov
dec
insb
out
inc
imul
sbbl
inc
cwtl
push
movsl
sub
inc
xor
insb
jne
addr16
sub
fsts
adc
mov
addb
jno
addb
sbb
mov
arpl
push
or
jb
shl
arpl
push
add
add
cli
xor
dec
fiaddl
push
shlb
mov
jecxz
pusha
dec
aas
cmp
pop
mov
fsts
cmpsb
xor
test
push
orl
sbb
stos
es
je
push
insl
ret
cwtl
sub
fsts
mov
xor
mov
xor
fistl
sub
add
push
xorl
dec
outsl
or
das
jecxz
adc
ret
add
pop
pop
adcl
push
test
mov
xor
cmp
or
rcrl
mov
inc
je
in
adc
lcall
lods
arpl
sub
pop
mov
xchg
push
mov
sarl
mov
or
arpl
scas
out
jbe
mov
mov
xor
aad
insl
or
pushf
xor
fsubs
push
and
adc
inc
mov
mov
jns
in
mov
pop
xor
call
sbb
lods
pop
es
cmp
sbb
inc
imul
sti
pop
jge
push
cmc
shlb
test
adc
ss
jg
inc
adc
add
and
popa
adc
lcall
push
jne
inc
xchg
cmpsl
adc
xor
add
fs
insl
js
cmp
inc
arpl
dec
or
sub
mov
inc
aam
sub
jmp
xchg
loopne
add
aad
add
pop
out
xor
addl
sbb
and
test
cmc
push
inc
mov
xor
mov
add
pop
arpl
jno
fisubrs
dec
jae
or
nop
mov
inc
sbb
psubsw
sbb
push
ds
cwtl
cmp
inc
insb
cs
rcpps
js
push
jb
add
inc
jno
add
adc
outsl
dec
inc
imul
pop
mov
fstp
mov
sahf
ret
lcall
das
push
or
pop
test
inc
jb
adc
fwait
push
mov
adc
lock
mov
stc
and
jae
xchg
mov
sub
cltd
push
sarl
cwtl
imul
push
sbb
push
rclb
sarb
xchg
jb
xor
cmp
inc
pop
xor
daa
add
jnp
adc
ret
lods
and
sbb
rcr
mov
pop
and
fwait
popa
mov
inc
je
insl
dec
outsb
dec
add
stc
sbb
add
rcrl
insl
repz
xor
int3
loop
pop
add
xor
imul
lcall
or
movsb
dec
mov
lcall
or
shll
or
mov
adc
cmpsl
mov
cmp
insb
xchg
pop
and
fiaddl
mov
xchg
add
and
pop
imul
and
cltd
lock
lret
sbb
mov
stos
daa
es
cmp
imul
pusha
cmp
call
mov
push
rcrb
push
insb
jmp
test
and
sub
jecxz
inc
test
xorl
dec
lock
add
xor
jo
inc
pop
xor
in
add
cwtl
jo
sbb
jl
and
adc
dec
out
gs
add
out
insl
sbb
and
je
int3
fidivs
in
sbb
jge
dec
mov
outsl
test
pushf
xor
xor
pop
adc
imul
mov
sub
jle
outsl
mov
inc
xor
mov
pop
jo
inc
lock
sub
mov
xchg
xor
in
mov
pop
xlat
or
or
jbe
shlb
xor
ss
mov
lea
mov
adc
and
sbb
call
adc
mov
push
cmpsl
inc
ret
lods
sbb
pop
mov
test
sbb
adc
sub
add
mov
mov
jge
outsb
aad
insl
dec
inc
push
fisubl
sub
inc
push
jo
test
loope
jo
cld
addr16
sub
test
pop
push
arpl
add
aas
outsb
ficomps
jb
inc
sbb
addl
nop
js
insl
fs
mov
sbb
cwtl
dec
cwtl
add
inc
xchg
and
cmp
push
out
mov
push
xchg
cmp
daa
outsb
pop
xor
fidivl
movsb
sub
mov
push
jne
xor
js
xchg
lods
mov
xchg
jbe
test
arpl
lods
xchg
mov
and
incl
push
inc
sbb
jge
sbb
add
sub
lret
jbe
sbb
pop
push
or
arpl
jbe
xor
popf
xor
outsl
out
inc
test
push
xchg
jae
xor
pop
roll
jo
aaa
sub
sub
inc
aam
leave
add
push
sub
out
rclb
movsl
dec
dec
scas
and
sub
jg
gs
add
add
add
fsubl
addr16
in
adc
push
inc
pop
dec
jle
push
inc
inc
add
addr16
into
add
jno
lcall
mov
or
mov
push
add
jl
flds
inc
push
movsb
test
notb
and
push
ficoms
xor
nop
fidivrs
dec
push
mov
push
jb
mov
out
xchg
lods
dec
xchg
sbb
jns
push
or
outsb
andl
fsubrp
insl
jg
and
add
add
mov
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
inc
add
inc
add
