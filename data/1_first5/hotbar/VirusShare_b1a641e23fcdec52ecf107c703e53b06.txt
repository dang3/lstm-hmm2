divb
in
mov
mov
mov
inc
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
rol
jo
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
xorw
push
adc
cwtl
or
lock
fcomi
sub
dec
shlb
in
or
loope
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
mov
xor
test
or
sbb
push
lock
or
inc
scas
stos
imul
dec
out
jge
test
mov
pop
jne
aad
imul
cmpsl
jnp
cmp
data16
mov
dec
pop
push
insl
sbb
pop
cld
add
push
push
push
iret
bound
lds
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
mov
js
sti
mov
mov
xor
mov
pop
ret
arpl
ret
add
pop
roll
pop
imul
sarl
pop
pop
dec
add
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
inc
xor
adc
nop
xchg
push
jo
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
ja
mov
inc
jecxz
jns
mov
loop
pop
mov
inc
addr16
aam
sbb
sub
or
ret
andl
ret
and
mov
adcb
idivb
jmp
hlt
jg
pusha
andb
cmp
sub
mov
notb
hlt
movlhps
hlt
mov
insb
idivl
jle
mov
out
clc
adc
cmpl
je
push
cmp
cmp
jae
addl
sub
mov
or
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
inc
push
push
push
push
rclb
rcrl
mov
jmp
xchg
jmp
inc
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
stos
rcrl
add
or
pop
or
fbld
cmp
push
mov
lea
cmp
jne
push
push
mulb
clc
push
push
adcb
js
push
mov
mov
or
pusha
enter
pop
pop
rclb
iret
rcrl
push
stc
inc
fdivl
cmp
stos
xchg
out
xlat
jge
movl
mov
add
jae
iret
xchg
add
out
add
pop
fstpt
mov
add
mov
sbb
xor
mov
pop
mov
sti
push
or
cwtl
push
push
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
sbb
mov
std
stos
or
adc
je
push
adc
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
pop
mov
xchg
pop
push
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
les
inc
push
dec
pop
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
fwait
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
aaa
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
cmp
in
jne
sbb
sbb
in
jp
jecxz
jo
pop
mov
add
into
xor
jb
cmp
repnz
cmc
or
sub
test
fsub
mov
aam
jp
or
mov
mov
mov
jecxz
std
jle
mov
cmp
adc
jge
xor
jno
add
or
inc
lea
or
rcr
lcall
clc
push
or
roll
or
add
adc
or
sub
pusha
mov
cmp
mov
shlb
dec
or
push
or
ds
fisubs
scas
ljmp
or
push
mov
xlat
push
xchg
sbb
fsts
jno
cltd
sbb
icebp
stc
lcall
pushl
push
mov
out
add
jp
sub
mov
sbb
mov
ret
shrl
adc
pop
inc
xlat
add
add
pop
or
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
pop
adc
and
iret
jo
mov
rcll
inc
fmuls
ljmp
ljmp
mov
push
add
shr
mov
cli
xor
fadds
mov
xchg
jmp
adc
pusha
pushf
pop
cmc
mov
call
push
xor
cmpsl
xchg
mov
in
aaa
pushf
or
mov
jae
mov
sarb
fisttps
inc
xchg
and
aas
mov
dec
mov
cmp
js
sub
out
sbb
push
sub
or
sub
js
and
fwait
or
fcoms
cmp
popa
add
roll
in
dec
dec
lock
fldl
pushl
dec
in
loopne
out
neg
sbb
inc
inc
pop
xlat
sbbb
mov
mov
or
cmpb
fiadds
sbb
push
cltd
adc
cmpb
jbe
movsl
push
popa
negl
pop
fildll
das
pop
sahf
jmp
sbb
call
or
test
sbb
loopne
xlat
repz
lea
cmp
sbb
adc
aaa
pop
mov
push
lret
mov
push
xchg
xorl
xchg
ret
pop
adc
test
clc
mov
fstpt
aas
pop
mov
xchg
out
cld
cmp
jl
or
dec
jl
mov
push
xor
cmp
sahf
dec
inc
push
fs
or
sbbl
mov
xchg
into
scas
push
pusha
nop
mov
and
xor
sti
xor
pushf
sub
mov
xor
or
daa
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
mov
xor
sub
xchg
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
ljmp
divb
fnsave
scas
xor
mov
cmp
call
push
push
pop
inc
lods
jo
loope
add
shlb
mov
or
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
sub
sbb
xor
loopne
jno
les
mov
pop
pop
add
jne
xchg
inc
jmp
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
setno
xchg
test
out
add
enter
loopne
movl
lock
mov
mov
push
aaa
cmp
inc
xlat
or
jp
dec
adc
mov
and
shlb
bound
adc
xchg
in
push
and
push
or
ljmp
frstor
add
add
add
fldt
pop
sbbb
in
testb
xchg
in
push
sarb
pop
push
movb
stos
jo
xor
mov
and
mov
adc
jmp
stc
jle
dec
test
mov
pop
push
fldcw
push
pop
jno
idivl
je
push
fimuls
ja
and
cmp
pop
inc
je
or
test
or
xchg
mov
mov
dec
cmc
jo
sbb
imul
enter
add
out
das
lock
push
enter
lods
lods
add
in
fmull
and
or
add
inc
repz
daa
outsl
mov
js
insb
das
loopne
push
mov
dec
cmp
in
cmp
adc
sub
ljmp
sbb
fdivp
cmp
add
out
data16
xchg
jge
out
sti
lock
shlb
cmp
adc
mov
sarb
pop
adc
mov
adc
arpl
movsb
xchg
and
cmp
movsb
xchg
out
mov
adc
fwait
rol
aam
push
test
dec
inc
pushf
pushf
and
ret
mov
mov
xchg
sbb
dec
inc
xchg
xchg
hlt
inc
cmpsb
in
movsb
int3
sbb
int3
in
lret
inc
enter
mov
and
rol
push
repnz
rol
in
lret
cmp
pop
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
aas
add
testl
cwtl
arpl
pop
mov
push
sub
fstp
push
loopne
iret
and
xchg
outsb
inc
sbb
aaa
xchg
add
ret
mov
test
jo
ss
je
sbb
loop
fstp
push
jmp
cs
push
xor
sbb
or
mov
and
add
adc
add
adc
or
in
loopne
add
inc
mov
ret
jle
clc
in
mov
in
andb
je
test
lods
imul
push
push
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
ds
ds
add
cmp
or
jl
or
lea
push
leave
aad
lock
jne
fildl
xchg
pop
pop
push
jmp
push
xchg
ret
leave
xor
leave
pop
jmp
adc
adc
jle
imul
test
scas
fadds
xchg
dec
mov
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
pop
jbe
and
jl
mov
sbb
or
cwtl
fs
sub
btc
lret
adcl
in
fildl
mov
inc
test
adc
inc
adc
leave
adcb
jno
shll
sbb
jne
fidivl
es
into
adc
dec
cmc
xor
inc
adc
xchg
dec
mov
push
add
add
cmc
dec
push
inc
mov
call
inc
lret
insl
xchg
pop
push
js
dec
sbb
test
mov
mov
lock
fistpl
jne
jo
or
sbbb
inc
sbb
or
jb
push
cmpsl
scas
cmp
cltd
outsb
clc
popf
jl
in
in
loopne
cmp
pop
add
push
sahf
les
xchg
fbld
add
pop
nopl
xchg
and
popa
pop
xlat
sbb
mov
maskmovq
idivl
imul
loop
clc
add
xlat
outsl
or
je
xor
push
push
or
mov
or
iret
xchg
mov
pushw
mov
nop
or
adc
pop
dec
movsl
and
jecxz
or
scas
mov
add
clc
inc
popw
add
lods
mov
hlt
int3
or
aaa
cmp
jl
xor
and
fstpt
sbb
out
test
hlt
je
pop
sahf
loopne
push
push
pop
ljmp
test
int
inc
pusha
lock
adc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
and
push
xor
sub
push
and
js
lahf
bound
adc
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
add
push
or
jo
jmp
fsubrs
push
fdivrs
aam
stc
scas
xchg
sbb
sub
push
sbb
sub
sub
inc
imul
sub
jno
jno
or
ss
inc
stos
inc
dec
inc
lret
ret
test
lret
or
xor
mov
cmpsl
jne
mov
add
add
and
inc
pop
xor
cwtl
push
insb
stos
xor
frstor
ss
pop
insb
adc
repnz
rclb
lods
mov
jo
xchg
and
push
test
add
test
jo
mov
pop
lcall
sbb
adc
jecxz
dec
sub
adc
fcomps
lret
push
push
outsl
xchg
in
test
ficoms
or
sub
add
rclb
in
inc
jo
mov
mov
mov
push
mov
sti
sbb
sbb
mov
pop
fmull
fadds
mov
push
pop
and
or
loopne
add
add
sahf
inc
popf
cmp
or
jmp
dec
cmpsb
inc
das
sub
in
call
stos
dec
enter
mov
add
enter
popw
cs
bound
xchg
add
dec
mov
call
mov
insl
sbb
xlat
push
inc
jb
cmp
cltd
mov
std
fdivs
addl
outsl
inc
xor
pop
out
jmp
mov
in
inc
cmp
inc
mov
mulb
add
or
xchg
stc
pop
call
xor
ficoml
enter
sbb
pop
add
pop
cmp
daa
pop
cmp
cmp
jne
and
test
and
fadds
or
mov
int
or
cmp
ficomps
test
mov
jne
bound
shrb
push
bound
popf
fildl
js
mov
xorl
mov
addr16
punpcklwd
mov
ret
add
fs
jo
fwait
xchg
mov
loop
push
jo
mov
in
and
mov
adc
lods
add
push
je
nop
out
mov
jnp
adc
pop
dec
mov
jge
adc
je
cmp
jge
push
push
jp
mov
mov
add
inc
mov
mov
add
lock
sub
test
pslld
push
sub
call
sub
das
mov
shlb
xchg
adc
inc
in
mov
aas
mov
sub
jmp
cmp
or
shll
dec
enter
xor
pop
add
lock
mov
jmp
mov
stos
lock
jl
push
mov
add
xor
loopne
sub
add
es
scas
push
adc
push
mov
js
pop
lret
cmpb
push
push
movsb
adc
rolb
cmp
mov
cmp
inc
dec
jns
cld
push
or
cmp
sbb
add
mov
daa
sbb
or
movsb
loopne
mov
adc
dec
das
xchg
jbe
jle
xchg
inc
out
or
pop
or
sub
cmp
xchg
mov
add
icebp
les
cmp
pop
in
negb
jne
or
je
sub
das
add
cld
jo
in
sti
loopne
jg
popa
or
int3
cli
jo
inc
hlt
xor
and
lock
faddl
sbb
adc
pop
pop
test
mov
ret
orb
ret
rcr
out
out
jne
or
popa
cmpsl
push
out
xchg
cmp
mov
loop
test
call
call
rolb
sub
arpl
cmp
lahf
je
sub
jmp
push
sbb
rcrl
insb
inc
fsub
push
out
inc
out
test
inc
lock
push
add
xor
mov
mov
imull
cwtl
lods
loope
lds
ret
jno
inc
stos
orl
cmpsb
push
add
push
xor
push
push
or
jg
mov
cmpsb
mov
les
or
test
repnz
cmpsl
mov
rorb
rolb
sbb
fdivr
or
xor
xor
in
rorb
mov
mov
jnp
and
lock
dec
dec
je
sub
jmp
jge
cli
adc
push
inc
push
mov
jmp
lock
mov
jg
or
fwait
mov
xlat
pop
xchg
adc
push
rclb
xchg
icebp
inc
and
inc
inc
inc
insl
sbbb
mov
aad
mov
je
lock
mov
mov
xor
inc
mov
sarl
jl
lods
push
dec
cmp
adcb
push
aaa
fs
push
pavgw
jle
enter
jno
fwait
sbb
push
or
lock
jecxz
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jle
ret
scas
pop
lea
add
psubd
in
ret
sub
shlb
out
inc
cmpl
push
push
jne
aaa
or
push
jo
jnp
into
in
inc
xchg
in
jp
lock
stos
xor
cltd
mov
rcrb
test
or
sbb
or
scas
fcmovnbe
mov
insb
mov
cmp
mov
push
fistl
sbb
dec
pushf
in
inc
out
cmp
ds
inc
cmp
cmpl
jne
add
mov
cmp
jle
cmp
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pushf
loopne
mov
mov
jmp
push
pusha
mov
dec
fcomps
shll
push
sti
cwtl
test
aam
fmuls
or
loopne
or
push
mov
inc
loop
cmp
nop
or
push
addb
pop
adc
scas
fdivr
mov
cmp
cli
in
mov
jbe
mov
rorl
or
in
pop
stc
and
scas
in
lret
mov
cmp
inc
mov
scas
sbb
jno
testl
nop
inc
xchg
and
mov
fmuls
test
test
pminub
jb
sbb
lods
ret
push
push
call
and
rorl
cmpb
mov
fs
add
inc
and
addr16
mov
rcll
clc
add
mov
cwtl
lock
jo
out
mov
enter
lds
or
push
jl
add
test
je
push
pusha
mov
pop
or
mov
dec
iret
mov
add
inc
mov
adc
add
dec
push
and
pushf
int3
push
pop
xor
mov
hlt
dec
mov
adc
mov
fcmovnu
into
lods
adc
rclb
sbb
mov
das
das
das
fcoms
fsubrl
adc
mov
mov
lcall
inc
mov
pushl
call
mov
decl
shr
movzbl
push
adc
sbb
xchg
or
ret
push
ret
dec
mov
mov
cmp
in
stos
mov
cmpsl
jmp
sbb
pop
popf
cmp
ret
push
andl
test
insb
sbb
in
xchg
adc
push
gs
pop
xor
mov
sti
push
pop
jb
xor
loopne
pop
or
add
xlat
push
mov
fwait
add
xor
jmp
imul
push
add
push
push
jl
std
daa
mov
cmp
jg
mov
mov
jmp
add
gs
cmp
aaa
lds
pop
fldl
repnz
sbb
mov
inc
pop
adc
mov
mov
aas
mov
dec
jecxz
mov
or
popa
lea
xor
inc
je
aaa
outsb
sub
in
sub
sbb
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
in
add
imul
cmp
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
clc
roll
loop
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cld
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
pop
in
push
mov
mov
mov
mov
adc
mov
aad
inc
js
jb
mov
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
filds
and
add
inc
ss
mov
cbtw
scas
fdivrs
in
out
push
push
add
fdivs
mov
cli
adc
xchg
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
in
enter
and
and
xor
ret
or
bound
xchg
popa
pop
add
fwait
mov
cmp
push
xchg
in
test
bound
push
mov
popf
jge
or
sarl
mov
adc
or
stc
push
cmp
push
and
mov
ret
je
mov
fdivrs
mov
jp
mov
sbb
movsl
sbb
test
pop
movsb
push
dec
sbb
ficomps
or
cmp
mov
or
add
icebp
sbb
rolb
test
xor
adc
cmp
fiadds
test
add
mov
movsl
or
sbb
out
aam
fadd
je
push
and
xor
scas
ljmp
insl
hlt
pop
mov
jb
ficompl
and
sub
and
adc
sub
jmp
icebp
jb
clc
push
pop
sbb
fs
jne
cmp
je
add
xor
inc
cmp
jmp
push
push
push
and
and
sbb
mov
ret
shlb
dec
and
xor
imul
or
xchg
rol
ljmp
addl
test
fisubl
adc
jbe
setne
shlb
shll
test
sbb
cmpsl
ljmp
mov
js
lcall
divb
psrad
mov
jnp
stos
pop
add
pop
sub
pop
inc
mov
add
push
push
adc
mov
pushl
movsb
jp
js
push
decl
loop
cmp
or
inc
add
add
jno
or
loope
lock
lock
mov
loopne
xor
adc
jo
adc
sti
mov
lods
jo
xlat
or
xor
inc
fcmovb
dec
pusha
pop
dec
push
call
add
mov
add
adc
arpl
push
jmp
cwtl
or
adcb
push
addr16
sbb
daa
or
popl
add
add
xor
pop
inc
enter
aas
push
xchg
xchg
call
cmp
mov
sub
sar
shr
mov
mov
or
adc
jb
xchg
xchg
clc
mov
enter
jl
add
insb
cld
cmp
lea
jbe
mov
push
call
pop
push
leave
inc
adc
adc
xchg
add
add
push
js
test
movl
in
add
stos
xor
ds
add
les
xor
push
xor
inc
bound
mov
outsl
roll
pusha
or
nop
sub
xlat
jecxz
add
add
test
cmp
and
lea
sbb
adc
lock
push
aad
popf
icebp
rclb
mov
mov
sbb
sti
inc
andb
andl
or
loop
sub
dec
lret
movsl
mov
lods
pop
xor
mov
and
sub
incl
test
push
jae
sub
pushf
mov
fldt
adc
add
cwtl
add
xchg
sbb
xor
add
xlat
push
lds
dec
mov
mov
mov
call
jbe
mov
adcl
jns
mov
or
test
jno
dec
es
lret
cmp
cmp
push
jb
pop
and
adc
les
in
xchg
jno
sub
and
imul
add
mov
and
clc
mov
stos
xor
inc
mov
into
cs
xchg
cmc
add
bound
jmp
add
leave
adcl
roll
enter
sbbb
in
insb
jne
stc
dec
dec
inc
dec
popf
pushf
and
mov
cmp
lea
pop
stc
inc
mov
mov
dec
push
push
pop
cmpsb
pop
or
add
sbb
inc
jbe
nop
and
stos
pop
cli
out
mov
xchg
or
fwait
hlt
and
and
dec
mov
stos
jns
jg
cwtl
push
inc
mov
push
pop
xorl
in
and
jbe
andb
adc
lcall
das
lret
cmp
shl
pop
lods
stos
lock
mov
loopne
pusha
scas
cmp
and
leave
and
clc
cmp
enter
dec
daa
adc
enter
dec
adc
fbstp
push
lea
mov
sub
scas
imul
pop
sbb
xor
sub
or
sbb
xor
dec
cli
pop
ret
mov
dec
mov
xlat
sbb
arpl
subl
dec
push
jge
in
ss
popf
lea
sbb
leave
xchg
adc
out
out
mov
or
mov
inc
xchg
and
and
cmp
sbb
and
ret
ss
xchg
or
mov
cmpsb
push
add
push
mov
xor
test
movsl
notl
inc
push
push
lods
test
dec
xchg
ja
dec
jae
fdivrp
movups
sti
fistl
or
je
cmp
popf
push
jge
inc
pop
sbb
cmp
push
mov
in
in
shrl
pop
negl
sub
cmp
sarb
roll
jle
push
add
sbb
jb
xchg
loop
mov
mov
stos
mov
out
arpl
aam
add
jbe
outsl
xadd
aam
jmp
cmp
sub
sahf
nop
lret
in
jne
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
pop
dec
ss
inc
and
fsubr
adc
mov
sub
mov
rorb
pop
xchg
ror
cmp
adc
jecxz
jne
clc
jg
daa
pop
in
sbb
jmp
push
add
push
mov
decb
push
cmp
push
push
sbb
cmp
loopne
add
xchg
fmull
jp
fnstsw
mov
icebp
xchg
lds
sbb
or
push
sbb
loope
xchg
adc
xor
sbb
repz
push
daa
pop
jmp
and
pusha
push
jle
mov
and
adc
aas
or
mov
pop
jmp
sti
imul
cmp
je
cmp
pop
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
jnp
in
arpl
sbb
je
mov
or
xchg
scas
cmp
das
pop
bound
neg
negb
pop
push
insb
push
jg
mov
loopne
adc
sbb
loopne
les
iret
clc
push
insl
sti
lahf
xlat
inc
sbb
mov
mov
add
pushw
and
loopne
in
sub
adc
pusha
lea
shlb
inc
adc
sub
mov
or
movb
add
int3
push
push
or
xchg
xchg
pop
les
jne
xchg
push
dec
push
mov
pop
push
lea
popf
mov
mov
push
push
add
push
lea
pop
cmc
gs
cmp
dec
fidivs
add
dec
mov
sbb
stos
xor
test
cld
lea
lea
movl
xchg
test
inc
cmp
sbb
lds
adc
scas
and
sbb
call
and
and
push
aam
mov
pop
push
push
test
out
add
xchg
add
mov
test
dec
incb
cltd
dec
push
jl
nop
add
jno
jo
mov
bound
or
orb
push
je
add
sub
jle
push
clc
pop
dec
ss
push
inc
and
pop
shlb
add
and
mov
movl
into
add
pop
in
adc
or
out
push
cltd
adc
insb
inc
jl
add
outsb
or
jae
adc
adc
push
repz
lods
inc
fisttpl
out
cmp
dec
call
in
push
inc
test
inc
pop
in
sub
xor
sub
pushf
inc
push
sub
int
iret
shll
cltd
es
push
pop
sub
xor
dec
push
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cs
jl
lcall
outsb
fists
mov
ret
js
inc
gs
dec
std
shll
or
mov
pop
mov
popa
aam
push
aam
das
in
push
rcll
stos
inc
les
int3
push
das
cltd
rcrb
add
fcoml
push
dec
fildl
cmp
sbb
loopne,pn
fcomi
inc
add
rorb
sub
pop
fcompl
shlb
ret
mov
mov
add
mov
xor
adc
fnstsw
push
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
xor
pop
iret
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
faddp
outsl
pop
jmp
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
adc
xor
mov
add
or
push
mov
daa
lock
jge
cmp
dec
push
or
mov
pop
push
in
dec
jecxz
repz
fsubs
add
dec
jg
out
xchg
cmp
ss
add
les
lds
in
and
dec
shll
push
pop
mov
mov
cwtl
inc
push
cmpsb
mov
mov
sub
mov
fdivrs
push
fstps
leave
and
push
push
out
cmp
filds
mov
adc
fdivrp
sahf
test
aaa
enter
testl
dec
mov
mov
js
or
scas
xlat
push
dec
cmp
punpckhdq
xchg
or
iret
in
or
push
xor
div
pop
xchg
adc
loop
pop
pop
fldenv
neg
pop
push
sbb
mov
mov
push
inc
cs
mov
jle
cmpl
jne
pushl
ja
loopne
jnp
sbb
push
push
int
push
adc
xchg
cwtl
popf
fnstenv
cld
adc
loop
dec
dec
jns
test
dec
fisttpll
add
jmp
insl
and
int3
pop
jg
push
dec
inc
cmp
sti
je
cmp
cltd
pushf
in
pop
mov
push
sahf
pop
je
jo
jno
add
js
loopne
orl
inc
inc
lret
ja
and
and
xchg
dec
jg
add
es
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
sahf
add
lea
cs
and
sub
test
sbb
lock
jge
loop
test
and
test
data16
fimull
popf
sub
mov
mov
push
dec
or
adcb
cwtl
pop
lods
push
fsubl
push
mov
adc
fsubrl
or
pop
cmp
iret
push
adc
enter
roll
pop
jno
notb
push
test
jl
adcb
mov
add
inc
sub
cmpsl
iret
xor
addl
mov
sbb
push
push
mov
push
push
lea
and
fwait
dec
sbb
cmp
push
pop
push
xchg
mov
call
push
lret
repz
sub
daa
push
pop
sbb
mov
xor
movsb
fistl
and
jge
push
xor
jae
int
clc
test
and
mov
jmp
cmp
std
cmc
filds
inc
pusha
fmull
mov
outsb
out
push
add
mov
aaa
movsl
add
popf
pop
mov
push
stos
xchg
cltd
cli
cmp
inc
fiadds
mov
sti
popf
out
andl
scas
mov
xchg
xor
inc
negl
popa
in
sbb
push
mov
inc
push
popa
sbb
int
mov
adc
mov
sub
xor
outsb
add
call
adc
cmpsl
ss
or
xor
or
sbb
pushf
push
mov
xlat
push
adc
lea
icebp
xchg
loopne
cmpb
xor
je
push
pop
pop
sub
pop
push
or
arpl
jne
cs
fadds
push
mov
adc
iret
enter
cmp
push
insb
repz
push
roll
push
or
xchg
sbb
xchg
popa
fmuls
push
icebp
push
ret
or
push
push
xor
call
imul
jmp
sbb
cltd
sub
push
je
push
push
jecxz
and
fadd
adcl
addl
pop
fadds
insl
xor
imul
adc
xor
dec
lret
push
adc
add
jmp
cld
aas
mov
cltd
mov
lea
push
jge
mov
dec
adc
sbb
or
clc
out
mov
add
cmp
jge
mov
int3
or
idiv
push
mov
mov
mov
outsb
lea
dec
ret
xor
idiv
cs
ds
bound
sbb
test
jg
mov
sub
cli
push
out
adc
or
mov
adc
scas
mov
sbb
add
cmc
jge
add
jmp
add
lock
sti
adc
in
or
out
mov
pop
insb
arpl
sub
mov
add
mov
je
pop
sbb
mov
dec
push
into
jp
xor
jo
mov
daa
pusha
js
mov
out
sbb
dec
fs
jl
movl
adc
test
insb
sti
test
mov
lahf
xor
lahf
movsl
negl
pushf
movb
sbb
push
mov
dec
lea
sahf
jl
int3
adc
sub
cmp
or
lcall
insb
mov
mov
fildl
mov
test
jns
faddl
xor
add
xor
rorb
out
ds
mov
sub
mov
pop
cmpsb
fcomip
mov
mov
inc
les
cmp
add
push
lods
mov
cmpb
shl
je
into
clc
fidivl
jmp
push
xchg
out
add
cli
mov
aaa
pop
mov
pop
jne
pop
pop
movb
dec
loopnew
push
dec
outsb
mov
loope
leave
xchg
jp
inc
inc
pop
mov
inc
add
cmpsl
aad
xor
shlb
ljmp
clc
lea
add
and
cmpsl
je
addr16
scas
shlb
je
mov
imul
mov
pop
and
push
pop
arpl
sbb
loopne
sub
dec
out
push
pop
pop
inc
in
push
into
pop
leave
push
cwtl
xchg
pop
js
lds
pusha
mov
sub
or
mov
add
mov
push
and
cltd
add
test
xor
sbb
fcompl
cmp
int
sbb
loope
add
fdivs
pop
iret
addr16
dec
jns
and
cmp
loopne
aaa
mov
inc
jne
sti
mov
adc
mov
push
les
jmp
jecxz
lea
punpckhdq
leave
adc
loope
fldenv
rorb
loopne
cmp
push
dec
jne
mov
lea
push
mov
push
jmp
xchg
pop
pushf
or
inc
in
lea
pop
pop
and
add
or
into
imul
or
dec
or
add
inc
cmp
adc
jnp
jle
adc
andl
pop
adc
sub
mov
or
xor
or
js
jae
add
dec
stc
push
mov
adc
popa
add
pop
enter
mov
pop
leave
add
mov
lahf
cmp
fs
and
int3
pop
push
pop
sbb
stc
into
in
out
pop
popf
addb
ret
mov
jl
mov
inc
pop
inc
ds
or
repnz
inc
push
cmp
roll
das
sbb
cmpb
inc
and
mov
adc
xor
and
pop
jno
pop
dec
adc
ss
cmp
mov
scas
cwtl
pop
lret
mov
push
add
push
mov
pop
cmpb
setb
test
rorb
xor
in
adc
je
xor
dec
adc
data16
add
or
aaa
xorb
add
je
push
fstps
insl
movsb
jmp
negl
imul
incb
push
je
dec
mov
push
adc
test
xchg
hlt
push
fwait
jno
mov
sub
add
mov
add
shrl
inc
inc
scas
sbb
push
in
adcb
int
fwait
mov
jnp
add
es
mov
mov
aaa
xor
mov
push
rolb
jmp
ficompl
add
adc
push
xor
add
inc
div
rorl
jmp
test
mov
sbb
mov
push
pop
push
add
mov
add
in
dec
and
mov
adc
or
add
pop
pop
pop
pop
adc
sbb
sub
loopne
das
inc
xor
loop
lock
into
xchg
leave
or
push
jb
addb
outsl
adcb
js
add
dec
std
jl
aam
int3
js
add
enter
lahf
add
test
and
cld
sub
xor
adc
call
lods
arpl
or
insb
orb
movsl
jge
or
mov
rorb
lock
clc
pop
repnz
repnz
push
in
enter
test
sub
xor
dec
xchg
into
stos
movsl
repnz
cmp
fmuls
add
aam
and
xor
int3
add
fidivrl
add
cwtl
add
pop
shlb
pop
xor
pop
or
mov
push
push
cltd
sub
add
or
or
in
daa
fsub
mov
mov
mov
in
push
outsb
pop
inc
enter
icebp
push
push
and
push
mov
fisttpl
pop
push
jne
xchg
xor
int3
pusha
das
lcall
push
add
push
mov
or
and
ds
jno
cmp
mov
imul
sarb
push
es
jp
push
pop
lds
push
or
push
fdivrs
dec
cmpsl
jae
add
jmp
mov
mov
inc
pop
mov
mov
add
jnp
imul
and
mov
enter
arpl
add
hlt
aad
push
push
lock
push
icebp
insl
or
and
pushl
push
shrb
lret
jmp
out
mov
xor
dec
cmp
mov
sbb
jl
aas
xchg
test
mov
pop
ficompl
mov
xorb
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
lea
xor
add
xor
shlb
call
jle
sar
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
adc
test
nop
mov
aam
jne
and
sbb
push
leave
shlb
enter
cld
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
and
stos
push
or
popf
iret
adc
pop
popa
cmp
push
xor
push
sub
dec
out
mov
imul
push
pusha
add
mov
dec
pop
adcl
bnd
sbb
xchg
shl
dec
add
ret
jmp
ror
fdivrl
or
push
push
js
cmp
loopne
adcl
subb
jmp
sti
push
dec
lock
add
mov
xorl
rolb
sbb
xchg
into
push
insl
loope
arpl
mov
mov
mov
mov
call
cld
cmp
sub
push
pop
and
out
iret
ss
mov
jp
fadd
or
popf
sub
mov
cmp
daa
push
xchg
push
or
jbe
and
add
gs
jmp
mov
jae
add
fmuls
jb
ja
mov
jne
hlt
inc
mov
push
pop
pop
jo
mov
adc
clc
mov
pop
lods
sbb
fsubl
push
xchg
inc
sbb
and
int
or
in
repz
in
int3
arpl
call
mov
clc
xchg
daa
adc
or
shlb
push
mov
test
stos
and
in
dec
loopne
cmp
lock
sbb
insb
test
enter
or
pop
mov
xchg
jle
jge
sub
pop
in
adc
sbb
sub
das
insb
call
jne
cltd
or
or
mov
mov
pushf
je
jb
xchg
or
aaa
pop
xchg
loopne
loop
jne
mov
je
or
pop
jne
ficoml
clc
clc
sub
mov
or
cmp
sar
lock
push
inc
pop
dec
call
mov
adc
dec
clc
cmp
call
dec
orl
add
dec
dec
mov
pop
clc
lock
xchg
shlb
cmp
clc
lock
cmp
jmp
mov
hlt
mov
out
in
mulb
or
jbe
into
push
push
add
push
outsl
or
and
or
lock
mov
dec
jp
add
add
in
mul
pop
inc
or
mov
hlt
insl
inc
inc
in
jb
sub
fstpt
das
sub
lcall
pop
cbtw
add
nop
jl
loopne
or
call
lods
dec
sub
jmp
clc
stos
shrl
cmp
add
clc
sbb
sbb
pop
imul
mov
inc
call
push
xor
xor
xchg
jle,pn
cmpl
xor
push
outsb
pusha
pop
push
gs
jmp
mov
cmp
call
push
push
adc
xchg
test
mov
or
popw
in
jbe
pop
push
mov
push
in
sbb
mov
adc
pop
mov
sbb
mov
mov
inc
push
mov
add
xor
test
int3
ds
xor
push
push
fisttps
in
cmp
loopne
push
fs
add
xchg
mov
callw
push
orl
mov
daa
enter
idiv
and
rclb
jbe
mov
sbb
xor
add
push
jbe
insl
lods
idivl
cld
mov
add
push
sub
or
inc
adc
xchg
fldln2
loop
mov
ret
xchg
push
inc
pop
adc
push
push
cmp
ss
sub
add
mov
add
mov
sbb
or
sub
ja
out
jle
xchg
pop
pusha
push
setg
add
add
lock
lea
stc
in
pop
jbe
dec
sub
jge
sub
hlt
das
andl
push
mov
and
arpl
dec
xor
inc
jns
inc
xor
push
cmp
cmpsb
mov
mov
push
inc
dec
push
popf
xchg
fcoml
push
mov
stos
jb
aam
rolb
push
das
cmp
rorl
mov
rcll
or
mov
fadd
or
inc
add
push
or
and
push
sahf
add
lock
int3
jmp
mov
jp
loopne
mov
ja
fs
jae
xorb
fstpt
shlb
add
mov
adc
mov
mov
inc
insl
ljmp
add
aam
inc
sbb
xchg
inc
shr
and
push
mov
mov
inc
pop
mov
cmp
push
and
repz
dec
jnp
adc
ljmp
jns
lcall
add
jg
call
lods
xchg
daa
push
adc
push
xor
lea
in
lock
test
dec
cmp
lret
jle
mov
mov
jl,pn
jmp
lock
jg
cmp
cmp
jg
push
add
rolb
aaa
or
cltd
adcb
ss
mov
sbb
or
inc
sub
jge
cmpsl
xor
fnstenv
inc
cmp
cwtl
movl
xchg
and
loopne
jae
cmpsl
cmp
div
test
pop
dec
out
sbb
sarb
lea
sbb
or
ret
adc
push
cmpsl
xchg
fstpt
xchg
mov
jp
sub
sarl
out
add
dec
sbb
fstps
push
add
xor
in
xor
adc
sbb
mov
fistps
mov
sbb
inc
or
lcall
out
sbb
sub
add
push
cmp
aas
and
and
mov
push
pop
dec
mov
lahf
add
out
jo
stos
test
in
jo
inc
cwtl
adc
mov
or
lea
add
rolb
inc
lock
lea
sbb
test
call
jnp
test
push
setne
mov
cmp
int3
addb
dec
rorl
push
pop
dec
push
pop
lahf
cmp
mov
loopne
jecxz
add
sub
inc
xchg
add
insl
push
xchg
loop
faddl
test
lea
nop
inc
or
nop
inc
or
or
ret
not
roll
adc
or
xchg
pop
dec
sub
xchg
fs
pop
popa
fists
or
or
pop
add
sarb
pop
pop
in
and
mov
mov
testb
aaa
push
push
jp
push
xor
xor
inc
sub
jb
mov
add
mov
dec
dec
cmp
aad
adc
aas
rolb
mov
xchg
ljmp
fistl
xchg
push
addr16
fwait
cli
insl
xor
push
add
jb
dec
sbb
incl
ficoms
aas
sub
inc
xchg
adc
dec
js
pop
pop
xchg
outsl
cs
rol
mov
add
fldl
js
or
in
push
hlt
movb
jg
in
lea
loope
xorl
lret
ds
jecxz
pop
stc
sbb
fistps
xchg
mov
pop
sbb
test
js
dec
imul
dec
and
adc
subb
cmp
xor
and
push
push
test
pop
sarb
jne
mov
and
xchg
mov
dec
or
push
fldl
pusha
adc
xchg
adc
push
ret
jmp
or
xor
test
and
jg
xor
cmp
add
movsl
and
lods
mov
dec
mov
in
push
or
rcll
add
push
mov
mov
jle
xor
add
push
int3
mov
cmp
data16
js
in
movzwl
std
mov
pop
pop
mov
and
inc
or
imul
in
out
int3
lods
xor
adc
mov
adc
aam
add
stos
jno
test
inc
sti
push
roll
mov
dec
adc
push
mov
sbb
stos
push
and
mov
adc
dec
xor
add
test
test
cmpsl
push
arpl
pop
callw
add
outsl
mov
jae
loope
stos
mov
cmp
inc
add
cmpb
outsl
loop
movsb
fdivrs
fistps
test
sbb
fists
movsb
push
sbb
out
and
add
mov
mov
jbe
and
push
in
cmp
jae
adc
sbb
pushf
mov
lea
and
mov
add
or
pusha
ljmp
addb
mov
iret
pop
mov
mov
testl
lea
mov
xor
fdivr
xor
sub
xchg
adc
mov
shll
test
cmp
add
rcrl
adc
rcr
jae
fs
xor
sbb
add
in
in
jae
cmc
inc
pop
jnp
stc
dec
ja
mov
mov
aad
and
icebp
mov
add
inc
out
xchg
roll
std
mov
aam
push
cltd
push
loopne
xchg
dec
pop
mov
jmp
ss
dec
or
fs
dec
adc
inc
push
jecxz
popa
add
pop
ja
push
add
inc
and
cwtl
add
fisubl
mov
enter
push
cltd
fistl
mov
mov
and
adc
xchg
cmp
pop
insl
scas
movsb
push
hlt
add
loop
andl
and
or
mov
dec
pop
push
add
fsubrs
bound
call
xchg
cmpsl
pop
push
gs
lods
mov
inc
loop
mov
addl
int
dec
arpl
pusha
jns
mov
add
inc
mov
push
faddp
loopne
movl
fwait
xor
mov
and
int
repz
dec
orl
lock
ror
hlt
mov
xchg
pop
adc
movsb
add
notb
or
rclb
xor
push
loopne
xlat
add
enter
je
xchg
sub
repnz
inc
loopne
pop
cmp
ss
push
lds
sbb
iret
ret
jl
mov
clc
cmp
imul
and
add
shlb
shll
cmp
push
js
fidivrs
xchg
sti
rcr
loopne
mov
add
mov
pusha
pop
pop
add
dec
xchg
and
movl
scas
sub
loope
pop
jp
push
add
lds
and
push
adcb
pop
add
pop
divl
or
mov
cmp
test
push
or
jb
leave
pop
pop
or
mov
push
pop
push
cmp
push
push
in
inc
dec
hlt
je
adc
jmp
push
sbbl
push
cmp
sbb
pop
imul
push
push
adc
sbb
ret
xor
jmp
or
rol
mov
xor
jno
cld
jg
cmc
cmpl
push
push
pop
cmp
je
push
mov
mov
movsb
jno
add
test
ss
imul
or
scas
or
cwtl
data16
xchg
dec
adc
xchg
or
jns
push
inc
jo
and
push
mov
jecxz
push
fs
lea
adcb
add
mov
sbb
and
push
push
mov
push
xchg
mov
es
adc
mov
push
lods
add
icebp
fsubrl
mov
daa
int3
sub
jl
or
and
and
loope
push
mov
das
or
mov
in
dec
cltd
popf
sub
aas
mov
push
mov
das
xchg
std
xor
inc
jns,pn
in
pusha
adc
icebp
insl
sub
or
push
or
pop
push
into
int3
xor
rorb
mov
push
jno
push
push
push
mov
push
sub
das
out
add
shl
or
and
mov
sub
cs
orb
popf
call
adc
inc
cmp
pop
mov
mov
inc
jmp
movsb
subb
push
push
adc
adc
dec
fcomps
fldl
mov
out
aad
fldl
add
outsl
lea
cli
insl
fnstsw
leave
cmp
loop
ret
fcompl
mov
ljmp
leave
mov
jne
mov
mov
add
insl
pushf
inc
lea
xor
adc
fcomps
cmp
mov
movsl
js
pusha
loopne
or
mov
or
lock
or
cmpsl
jmp
add
les
fwait
testb
cwtl
or
leave
mov
mov
cmp
movsb
dec
pop
or
insl
add
xchg
gs
fsubs
aam
add
je
test
pop
sub
sbb
clc
add
jb
and
dec
xorl
or
imul
adc
jae
xchg
in
fisttpl
jge
cmp
scas
int3
lods
push
dec
adc
jg
or
dec
js
mov
int3
push
push
mov
cld
je
fbstp
daa
push
pushw
test
jbe
mov
inc
sub
mov
shlb
ljmp
push
inc
xor
xchg
sub
in
push
push
xlat
pusha
cmpb
pop
push
mov
mov
add
adc
bound
add
cli
add
push
outsl
xchg
lock
dec
hlt
rorb
mov
add
push
sub
mov
pop
lret
repz
mov
ljmp
in
lret
ds
inc
cld
push
sar
xchg
mov
xchg
xor
and
hlt
sub
loopne
es
or
js
push
jo
jno
pop
jb
sbb
push
push
jno
xchg
push
jbe
xchg
mov
or
push
jmp
xchg
push
das
pop
sub
sbbb
enter
and
clc
jl
cmp
ja
add
adc
inc
or
rcll
stos
into
cmp
les
insb
aas
cmp
xchg
clc
out
or
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
das
outsb
push
add
mov
cs
pop
cmc
cmp
push
movzwl
mov
sbbb
sub
push
int3
push
inc
inc
ret
push
pop
xor
mov
cltd
sub
dec
mov
push
add
sub
push
fisttps
sub
aam
sbb
fldl
mov
xorb
inc
lock
shll
nop
mov
pop
sub
inc
arpl
mov
je
or
sub
dec
push
out
pop
sbb
lods
xchg
nop
pop
add
cmpb
push
add
add
push
ret
adc
shlb
and
data16
cmp
insb
cmpb
addr16
jmp
dec
push
cmpsl
sbb
ja
push
arpl
lods
and
mov
dec
loope
clc
je
popl
clc
ds
adc
call
loopne
stc
sub
lea
push
lea
push
inc
push
dec
inc
out
repz
push
cmpsb
imul
ret
xor
lcall
aas
push
cmpsb
dec
lret
cmp
jl
cmp
mov
hlt
int3
xor
sarl
icebp
sub
push
jle
push
add
icebp
jne
mov
int3
negl
add
shrb
add
push
mov
adc
dec
arpl
test
out
lcall
cmp
je
sub
data16
mov
push
in
fstpt
xor
add
fldenv
xchg
test
adc
push
sar
icebp
push
or
pop
jmp
jns
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
arpl
fldcw
shlb
clc
fisttps
js
dec
or
in
xor
out
sub
and
insl
clc
sub
dec
xchg
fcoms
enter
xchg
or
add
dec
xchg
ret
call
pop
and
cmp
pop
ja
pop
gs
loopne
repz
xchg
and
ds
jne
les
xchg
out
lock
xchg
pop
faddl
push
sbb
stos
mov
test
adc
cmp
jl
pop
divl
or
test
add
cmp
aaa
or
xchg
ljmp
jne
fistpl
adc
lock
dec
or
test
push
bound
test
rolb
packsswb
in
mov
inc
shrl
adc
and
adc
lcall
andl
or
adc
cmp
mov
or
adcb
orb
shrl
pushf
inc
lods
mov
insb
jl
cmp
imul
sub
cmp
xchg
sub
jl
jmp
pop
xchg
sbbb
leave
add
dec
decb
data16
mov
in
fisttpll
sub
and
push
addb
or
or
fwait
dec
cmp
je
into
mov
mov
jne
fldl
pop
pop
or
loop
rclb
mov
fadds
mov
aam
pop
cmp
lods
push
stos
pop
jl
faddp
jmp
jl
ret
sbb
shlb
push
push
std
cli
jmp
mov
jno
cmp
push
inc
cmp
jae
add
push
insl
add
pop
insb
cmp
pop
pop
and
xchg
ret
cmpl
mov
fdivs
lea
js
fcmovnb
cmp
aaa
cltd
add
dec
mov
pop
cld
rorb
mov
sub
ljmp
insl
xor
jns
pop
sub
fildl
lret
mov
pop
xchg
xchg
movups
xor
jae
les
jo
jl
or
adc
inc
cmp
or
div
orl
cmp
jbe
dec
and
xchg
fsubrs
or
add
sbb
ret
hlt
insl
aad
les
push
or
dec
sub
lock
dec
sub
mov
hlt
in
test
xchg
xor
mov
cmpb
mov
lret
int
daa
lea
push
xchg
and
cltd
adc
sub
push
out
add
sbb
loopne
and
add
mov
cmp
je
shlb
sbb
and
loope
lret
pop
xchg
or
loop
mov
sti
je
mov
xchg
ret
adc
pusha
shlb
push
pop
lcall
or
xchg
xchg
testb
jl
xor
dec
rcll
mov
lahf
add
mov
sub
js
push
push
movsl
push
fisubs
dec
adc
testb
pop
push
mov
ljmp
fldenv
xor
jp
insl
popa
mov
push
in
jne
test
push
sub
jbe
xchg
sbb
neg
push
test
ret
add
and
add
js
or
out
jne
test
dec
rclb
adc
push
push
je
inc
jmp
mov
or
int
in
add
sub
pusha
mov
test
push
sbb
inc
sub
rclb
int3
and
call
lock
das
pop
sbb
aad
dec
cmpsl
movsl
xchg
ret
sbb
push
iret
mov
mov
dec
inc
outsb
test
fdivp
sub
andl
jnp
jl
add
jne
fsubs
xchg
rcrl
icebp
outsl
mov
or
adc
or
mov
mov
rclb
daa
stc
and
inc
dec
lock
add
movl
jmp
push
inc
add
mov
mov
add
movsb
movsl
roll
inc
adc
mulb
fcomps
jae
mov
cmp
sub
fs
push
cmp
lea
shrl
movsl
adc
adc
or
js
jl
xor
sbb
xor
add
stos
in
popf
xor
dec
inc
inc
inc
adc
push
add
jnp
sub
pop
jg
rcll
pop
fcompl
mov
push
pusha
aas
mov
push
or
xchg
cmp
push
mov
sub
push
je
jo
nop
inc
push
insb
push
pop
dec
in
dec
lahf
or
pop
or
nop
jmp
dec
lods
inc
idivb
leave
ret
cmp
jp
cld
loopne
mov
test
insb
or
test
push
int
test
lea
or
inc
lret
cmp
js
push
ljmp
push
std
xchg
sbb
je
orl
push
inc
mov
or
decb
movsl
sti
lea
mov
je
lret
mov
sbb
xor
jg
pop
ja
pusha
adc
cwtl
insb
xchg
add
push
xchg
push
add
xor
push
pop
gs
repnz
popf
dec
mov
rol
add
aam
sub
orl
shlb
outsb
fwait
ret
inc
push
nop
xor
rcrl
or
mov
mov
sub
stos
or
aam
adc
out
inc
xchg
cld
lea
push
rcl
and
push
shlb
pop
mov
jp
test
js
sub
ja
fcmovbe
sbb
mov
shll
or
sub
xor
add
push
jns
and
adc
movsl
sbb
push
cmp
inc
jbe
push
rcrl
ret
pop
repz
or
punpcklbw
mov
inc
repnz
mov
xlat
ljmp
xor
arpl
cld
out
cmc
inc
cmpsb
mov
sbb
inc
inc
push
xchg
or
push
lea
pop
insb
xor
mov
aas
mov
sub
push
mov
shll
in
sub
leave
lea
jg
cmp
push
adc
cltd
fldl
fmuls
mov
cld
push
dec
xor
js
ret
lea
ret
fadds
push
cmp
add
in
cmp
outsl
sbb
jae
call
xor
test
fldl
cmp
jle
sub
and
in
cmp
fnstenv
xor
in
sahf
js
push
inc
sbb
adc
dec
push
and
mov
dec
popf
add
sbb
add
lea
mov
test
iret
cltd
sbb
inc
nop
or
mov
inc
mov
loop
jg
push
jns
jns
rolb
pop
mov
dec
and
inc
or
mov
cmpsb
ficoml
ret
mov
add
icebp
and
leave
push
add
lock
test
lock
xchg
cmp
push
push
adc
iret
add
lcall
pusha
mov
push
sub
push
add
xor
aaa
daa
mov
and
popf
sbb
sbb
loopne
sub
test
xorl
popf
or
fdivr
faddp
mov
cmpb
nop
push
ret
fisttpl
pop
push
or
mov
clc
sub
rclb
aad
mov
mov
adc
stc
mov
add
dec
xor
and
std
lods
inc
rcl
jno
cmpsl
and
mov
mov
inc
iret
ret
dec
adc
into
and
mov
clc
stos
mov
jmp
push
stos
aas
adc
pop
pop
rorb
js
das
jl
outsl
cld
pushl
mov
cmpsl
mov
and
fistl
adc
add
push
push
js
lahf
mov
and
sub
inc
decb
ffree
mov
pushf
add
inc
add
push
test
push
cmp
sub
xchg
sbb
pop
fs
and
addr16
xchg
sub
adc
out
mov
xor
push
push
fildl
mov
adc
sbb
ljmp
push
aas
fwait
or
je
sub
clc
js
mov
add
mov
je
enter
xchg
cmpsl
insb
hlt
lea
and
sbb
cmp
dec
pop
mov
js
data16
jne
adc
pop
push
or
inc
cmp
add
push
imul
ror
mov
lret
and
lods
xor
sub
or
cli
mov
xor
jno
scas
sbb
and
sbbb
ret
sbb
push
les
sub
lea
xor
lods
test
jmp
add
pop
push
pusha
jo
inc
insb
pop
shll
mov
test
or
mov
pop
add
mov
outsl
imul
mov
inc
pop
adc
clc
xor
push
insl
idivb
push
cmp
jbe
inc
mov
or
std
add
xor
pop
mov
cmc
or
in
pushf
sbb
or
cmpsb
in
or
cs
sub
je
rcll
push
test
adc
insb
and
mov
nop
sahf
and
jnp
add
inc
push
pop
cmp
xchg
sub
scas
ljmp
jmp
shlb
push
xchg
ret
ss
xor
jae
jl
in
das
scas
stos
lea
push
cmp
inc
mov
test
movsb
fstl
or
sub
dec
test
inc
filds
stos
daa
jne
test
adc
jp
mov
imul
pop
ss
add
push
fucom
jae
ret
cld
outsl
mov
clc
inc
push
fwait
popf
mov
dec
or
sbb
mov
enter
pop
dec
fdivs
scas
jmp
call
test
lock
add
add
xchg
push
pop
iret
adc
adcl
test
arpl
mov
mov
and
xorl
aam
pop
shlb
dec
in
nop
and
adc
mov
ret
xor
icebp
pop
shrb
inc
push
lods
push
mov
lock
dec
shlb
xor
insl
and
sbb
fnstenv
mov
xchg
test
adc
dec
les
push
shrb
mov
xchg
enter
and
test
mov
jbe
jno
sbb
leave
xor
scas
js
inc
fdivs
test
popa
sub
test
xchg
test
and
cmpb
push
or
jb
je
mov
cmpsb
jge
sbb
or
out
jnp
orl
push
loopne
jbe
daa
or
bound
ret
inc
je
jb
push
pusha
ror
and
push
inc
pop
cmp
sahf
push
cmp
jne
lahf
movnti
cmp
add
cmp
pop
push
mov
das
or
rorb
int3
dec
sub
push
iret
adc
test
std
loopne
or
jne
cmp
push
shrb
add
and
mov
sub
lahf
cmp
insb
add
pop
mov
andl
pop
push
loop
mov
sub
add
or
sbb
cmp
into
and
aas
xor
lods
gs
cmp
pushf
adc
rorl
outsl
jle
cmp
jae
sbb
sbbb
jno
fsubr
aam
out
add
xor
pop
lea
mov
adc
pop
std
push
pop
leave
shl
loope
xchg
movsb
xor
out
add
je
pop
test
ljmp
mov
jge
cmp
dec
rclb
shrl
jecxz
dec
insb
push
push
push
cmc
repnz
mov
sub
shlb
shll
in
shlb
or
dec
xchg
mov
push
rcll
mov
movsl
jge
rorb
aam
mov
mov
mov
and
inc
adc
cwtl
flds
das
pop
xchg
sbb
loope
jmp
push
lods
stos
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
xchg
or
and
adc
jge
or
and
andl
mov
mov
cltd
adc
out
lcall
test
imul
sbb
fmull
jecxz
push
inc
dec
cmp
mov
insb
ljmp
add
fsubs
out
les
mov
jmp
sbb
fistps
jo
sub
sbb
fmull
xchg
pop
sbb
push
and
pusha
idivb
push
inc
xor
push
jmp
sub
aam
add
pusha
xor
sub
js
mov
push
in
test
add
ret
cmp
or
orl
repnz
add
push
out
jnp
adc
jns
sbb
inc
cmp
xlat
pop
and
mov
dec
int
in
lock
scas
pop
xlat
dec
call
jno
lea
lea
mov
in
and
adc
pushf
inc
dec
xchg
out
or
adc
jl
inc
jnp
xor
test
cmp
sub
or
jmp
ds
mov
test
lahf
and
cmp
push
andl
lea
sub
pushf
push
imul
push
lret
jbe
mov
or
mov
stc
add
adc
xorb
in
mov
test
std
or
or
xlat
add
paddusb
mov
aaa
js
std
dec
fildl
jp
cmp
je
lods
call
pop
pop
or
and
rcl
cs
rcll
int
add
xor
add
orl
aas
cmpb
lret
shlb
xchg
call
jg
enter
outsb
mov
nop
imul
cmpsl
jmp
mov
xchg
lcall
test
or
mov
add
or
pop
cmp
dec
xlat
scas
push
jle,pt
sub
popf
jb
sbb
movsl
mov
push
and
mov
sub
movl
push
pop
inc
inc
adc
cwtl
inc
mov
fbstp
movsl
mov
jmp
ret
fildll
je
xorl
jae
in
and
add
in
cmp
xlat
cmp
stos
out
call
scas
ja
jmp
aad
std
sahf
test
rcl
aam
aad
adc
les
add
cmp
test
fucomip
xor
dec
push
je
dec
jne
push
jmp
and
adc
sbb
push
cmc
lahf
nop
push
push
ficomps
jp
mov
xchg
add
rcl
push
stc
mov
sub
int3
pop
xorl
repz
ret
add
mov
lock
mov
sbb
mov
xchg
inc
mov
roll
pop
loopne
cld
xor
in
rcrl
xor
mov
mov
lea
adc
insl
or
or
loope
push
sbb
mov
pusha
ret
jmp
lea
cmp
cmp
jecxz,pn
daa
xchg
ss
pop
sub
je
mov
push
push
adc
add
sbb
nop
lock
mov
xchg
cld
add
mov
dec
inc
imul
sbb
popa
inc
sbb
inc
je
dec
test
mov
lock
sub
add
testb
filds
scas
xor
nop
shrl
ds
je
pop
rorb
lahf
add
jge,pn
adc
cmp
jg
popa
inc
int
xor
sub
outsb
lock
xor
mov
or
call
xor
sub
mov
or
push
test
cmpb
xchg
jno
mov
lcall
adc
sub
pop
dec
push
pop
mov
push
lods
adc
xchg
aaa
push
and
dec
or
cld
fisubrl
jmp
cmp
je
aaa
add
movsb
rcll
cmp
ret
dec
movsb
loopne
cld
shrl
mov
xchg
jmp
xor
adc
sti
movsb
and
negl
jo
lea
cmp
mov
fs
insb
bound
add
cmp
incl
inc
adc
xor
in
inc
fnstcw
xchg
iret
test
pop
and
jmp
adc
mov
sbb
dec
lret
jne
sbb
push
inc
inc
cmp
test
mov
pop
adc
pop
mov
mov
xor
inc
and
lret
mov
mov
xchg
nop
cld
dec
jo
inc
push
insl
inc
cltd
jbe
les
ds
test
int
inc
cmp
mov
and
movl
add
inc
adc
add
inc
imul
add
jle
push
pop
int
inc
xchg
mov
mov
adc
add
fs
mov
xchg
pop
sbb
pop
shr
outsl
movsb
ret
adc
mov
adc
mov
nop
sbb
and
ret
fdivrs
ja
jge
js
adc
mov
jno
inc
cmp
jl
add
not
inc
pop
loope
add
out
dec
add
jno
lods
lds
xor
addr16
and
mov
push
xchg
inc
jnp
test
mov
mov
adc
cli
and
mov
mov
xorl
or
dec
adc
test
mov
adc
mov
sub
push
or
push
add
ss
ficomps
aad
sub
mov
jae
jl
mov
inc
les
add
orl
mov
xchg
push
or
dec
jmp
popf
mov
inc
cmp
adcl
std
cmpb
je
push
sbb
add
popf
rcr
push
jae
outsb
xchg
pushf
xchg
or
push
sub
xor
sub
lods
sbb
push
ret
jbe
inc
adc
and
nop
or
sub
es
mov
bswap
imul
adc
fisubrl
add
mov
clc
fimull
xor
mov
jae
xchg
notb
lret
adc
loope
shr
push
lods
repnz
push
add
mov
adcb
xor
inc
dec
sbb
stos
roll
mov
cmp
bound
sbb
cltd
popf
pushf
in
push
sbb
cmpsb
mov
adc
subl
pop
out
addl
movb
adc
iret
dec
je
sarl
ficoms
mov
push
je
incl
ret
cmp
outsb
jns
mov
lcall
inc
dec
sub
aam
dec
and
dec
inc
or
js
xchg
sbb
sbb
pop
fldcw
loope
push
test
cld
inc
iret
lea
push
and
testl
mov
aas
jle
outsl
sub
dec
inc
sbb
aam
clc
sar
pop
adc
sub
xor
pop
sbb
xor
sub
outsl
ja
add
pushf
xlat
and
push
dec
push
pop
mov
dec
sub
xchg
cmp
cmp
bound
sbb
fs
push
jl
cmp
adc
daa
pop
std
or
mov
adc
mov
push
pop
cmp
ljmp
lock
xchg
mov
dec
cwtl
stos
jne,pt
ja
add
push
mov
sbb
outsl
inc
cmp
cmc
jns
xchg
fbstp
das
rcr
push
aas
lahf
cltd
in
filds
aas
es
fisubrl
cli
insb
cmp
and
cs
dec
dec
add
addb
pop
push
jle
ljmp
add
fstps
nop
cmp
movsb
sbb
roll
jo
outsb
xchg
cmp
stc
pop
aam
lgdtl
and
cmpsl
sbb
xchg
ss
and
dec
push
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
jecxz
outsb
inc
rcll
jecxz
pop
xchg
inc
fidivrs
push
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addl
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
psubb
in
sub
adc
push
adc
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
inc
push
xor
push
sti
push
loope
and
cmpsb
andl
xor
jl
dec
mov
add
arpl
jmp
pop
push
sub
aad
and
mov
pop
push
sbb
xlat
mov
adc
pushl
inc
fisubs
je
pop
ret
dec
or
ds
daa
insl
cmp
daa
sbb
jge
or
aaa
sub
push
inc
mov
jno
sbb
repz
pop
cltd
adcl
jo
cmp
sbb
xchg
or
subl
mov
sbb
and
out
leave
or
dec
sub
adc
sbb
adc
xor
xor
xor
je
mov
mov
loopne
fisubl
xor
and
xor
xchg
push
rorl
popf
add
adc
add
sub
add
ss
inc
aaa
test
sub
lock
and
cmp
int3
mov
xchg
adc
jno
mov
push
stos
test
cmp
mov
loopne
aaa
cwtl
xlat
sahf
sbb
dec
xchg
sub
mov
fnstsw
cwtl
and
add
movsb
outsl
jne
lea
std
icebp
movsl
cmp
mov
xor
mov
mov
pop
or
movsl
sarl
outsl
mov
pop
add
mov
and
push
cmp
or
adc
add
sbb
cmpsb
adc
jns
sub
pop
add
cmp
sub
push
lods
lods
inc
xor
mov
rorl
push
xchg
cmpsb
push
cmpsl
add
cmp
cmp
push
adc
idivl
mov
popf
daa
in
cmp
pop
inc
push
cmp
cmpsb
ds
outsb
adc
andl
xchg
fdivl
pop
pop
and
test
pop
out
jbe
cli
xchg
and
mov
jo
mov
mov
push
pop
cmpsl
pusha
xor
lock
or
add
push
inc
fldl
inc
pop
enter
mov
test
xor
xlat
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
loop
lea
xchg
testb
repz
pop
inc
xchg
stos
shll
adc
mov
shlb
fildl
negb
push
xchg
or
cwtl
dec
dec
in
ss
test
jmp
adcb
xlat
notb
lcall
iret
xor
je
dec
push
dec
or
cmp
gs
cmpsb
js
jl
aad
test
inc
je
and
or
std
popa
mov
stc
lea
aad
lock
add
cwtl
pop
inc
jo
push
inc
or
ret
sbb
iret
outsl
insl
bound
int3
add
les
imul
pop
inc
mull
mov
lret
jb
push
or
fadds
cmp
push
pop
lods
xchg
sbb
fprem1
sbb
xchg
in
divb
mov
hlt
adc
ss
cmpsl
add
adc
cmc
and
adc
aam
pop
mov
pusha
sbbl
bswap
testl
sub
pop
in
push
cmpsb
or
pop
sbbl
ss
adc
xchg
and
mov
adc
test
hlt
cs
mov
icebp
jno
and
push
xor
imul
sub
mov
sarl
fsubp
push
cmp
rorl
push
lods
xor
mov
push
xchg
push
mov
inc
das
lds
dec
add
cmpsl
push
jo
lahf
sbb
ret
mov
movb
into
popf
sbb
jnp
mov
leave
ror
pop
fbld
sbb
sbb
push
sbb
and
inc
pop
in
xor
and
lock
and
lea
mov
inc
push
iret
pop
and
mov
ss
jne
popl
mov
and
movsb
mov
and
scas
sub
cltd
subb
push
xchg
daa
mov
rorl
sub
daa
stc
ret
mov
mov
scas
mov
sub
inc
jb
sbb
je
andb
dec
xchg
in
sbb
icebp
ficompl
insb
pop
mov
push
push
repnz
push
pop
mov
push
push
xchg
jl
fcomps
inc
imul
push
ret
sub
pop
das
and
in
test
push
jae
icebp
dec
and
mov
sub
leave
mov
dec
xorl
push
add
mov
rorb
and
xor
rcl
xor
sbb
push
push
or
lcall
push
movsb
or
lea
faddl
shlb
movsb
jns
push
adc
and
sbb
sbb
dec
xor
add
add
xor
mov
out
add
inc
push
xchg
sub
sahf
push
dec
movsl
aam
pop
cmp
or
loope
or
sbb
loope
push
in
hlt
in
xchg
ss
jp
inc
xchg
test
in
cmc
mov
repz
mov
mov
dec
cmp
mov
and
cs
cmp
in
sub
lock
sbb
mov
in
pop
xchg
icebp
insl
adc
popf
lock
add
inc
mov
outsl
and
mov
rcrb
sbb
mov
sub
pop
in
sub
mov
add
inc
add
into
fcoml
inc
or
sbb
testb
adc
or
adc
outsb
xor
sub
and
stos
jo
andb
in
sbbl
cmp
je
sbb
push
hlt
dec
xchg
icebp
push
cwtl
sub
stos
scas
movsl
rorb
icebp
fwait
sbb
pop
push
pop
push
xor
fs
andb
dec
adc
mov
adc
xor
icebp
sahf
and
aam
adc
adc
les
lmsw
imul
push
push
push
icebp
or
cmp
mov
mov
testl
sbb
inc
mov
or
mov
cmp
je
inc
xlat
adc
test
lret
nop
ret
rolb
lea
je
mov
xor
add
cwtl
cmp
icebp
mov
shll
pop
int3
movsb
imul
mov
mov
cmpsb
jmp
lret
push
inc
jmp
dec
and
inc
mov
in
xor
adc
xor
fmull
or
dec
lods
push
mov
adc
push
pop
cmpsb
xchg
add
dec
aad
push
in
sub
or
les
cmp
enter
xor
je
push
mov
xlat
xchg
xorb
or
mov
mov
add
fisttpll
or
pop
pusha
outsl
fiadds
inc
fisttps
dec
jo
push
pushl
and
sbb
cmpb
ret
shlb
push
cld
push
addb
inc
ljmp
push
inc
mov
push
repnz
out
adc
xor
mov
mov
adc
repnz
es
push
pop
mov
inc
jne
push
loopne
std
pop
mov
sarb
jge
mov
or
imul
pop
add
add
aaa
add
add
and
les
push
push
sub
xchg
push
andl
and
or
movl
add
mov
adc
movsl
out
lds
xor
imull
adc
fisubrs
lea
movsb
mov
aad
adc
xchg
cmp
je
test
push
pop
push
stos
push
push
or
xchg
xor
sarb
jns
xchg
icebp
popf
dec
push
cmp
jle
add
int3
sbb
adc
loop
mov
mov
add
mov
popa
adc
add
cltd
les
in
les
and
adc
or
sahf
cli
and
add
dec
inc
inc
in
mov
movb
rorl
addl
dec
push
inc
jmp
mov
cmp
sub
sahf
bound
xor
adc
lods
inc
fs
mov
enter
les
add
add
icebp
and
jmp
sub
pusha
pop
movsl
loope
dec
inc
mov
mov
jg
sahf
sub
mov
cmp
xor
fs
push
mov
popa
ja
inc
stos
mov
or
pop
inc
sar
repnz
enter
mov
sbb
mov
mov
xchg
rcrb
mov
mov
or
femms
data16
push
xchg
or
call
adc
sub
call
movsb
sbb
add
dec
loope
pop
push
test
or
rcrb
xchg
cmc
inc
fs
dec
in
ja
jecxz
dec
fimull
or
pop
or
loope
fldl
jp
rcrl
mov
movsl
out
inc
adc
fsub
jg
adc
cmp
jle
cld
jae
inc
add
outsb
outsb
mov
sbb
daa
cmp
andb
mov
cmp
pop
mov
pop
add
add
enter
faddl
and
adc
and
pop
mov
lret
mov
sbb
jmp
xor
lock
jno
or
int3
stc
pop
add
adc
xor
sub
stc
in
fistpl
adcb
addr16
inc
ds
inc
push
inc
dec
sub
sbbl
inc
push
les
lea
pushf
gs
xor
push
loop
out
out
add
in
movups
pop
mov
xchg
lret
stc
add
sub
add
lea
mov
jo
shr
xchg
lea
movsl
push
cwtl
movl
jp
pop
add
and
sbb
sbb
dec
and
pusha
cmp
mov
int
sub
pop
or
or
rcrb
mov
movsb
dec
lret
sti
inc
cwtl
jne
push
jmp
and
call
or
lds
push
pop
or
xor
xchg
outsb
test
push
movl
cld
jno
jge
movsb
dec
andl
dec
imul
rcrl
lea
dec
iret
inc
movsl
push
mov
pusha
in
mov
dec
out
xor
pop
rcll
or
int3
mov
icebp
adc
cld
add
sbb
add
dec
aaa
adc
daa
loopne
pop
mov
cmp
sbb
jne
inc
fs
inc
sbb
add
or
and
push
xor
jns
mov
xor
and
sub
dec
cmp
fdivrs
aaa
and
in
xor
pop
test
mov
xchg
inc
inc
mov
nop
dec
push
pop
sbb
push
push
or
cmp
add
cmp
inc
lea
sahf
pop
dec
pusha
popa
inc
ja
pop
movsl
jo
sub
call
adc
or
xor
mov
add
and
lret
popl
add
xchg
xchg
add
xor
jl
std
sbb
mov
pop
icebp
test
test
sub
mov
mov
stos
mov
mov
push
aaa
scas
cmp
shll
loopne
mov
push
mov
cli
ficomps
pop
pop
push
push
xor
dec
mov
or
mov
or
dec
sub
dec
mov
data16
je
sahf
incl
sbb
dec
imul
add
add
push
faddl
pop
add
sub
icebp
inc
cmp
mov
xor
cmp
xor
push
push
movsl
xchg
push
adc
je
sub
or
or
imul
mov
lahf
xor
dec
pop
mov
sub
xchg
pop
cmc
dec
cmp
int
xor
add
and
sub
lcall
dec
bound
push
hlt
dec
sub
dec
jmp
or
mov
sbb
loop
mov
insb
cmc
xor
data16
ja
ds
mov
dec
and
mov
test
adc
js
fbld
cmp
jge
aad
xchg
or
orb
inc
pop
adc
sub
pop
invd
mov
mov
push
lea
fisubl
xchg
loope
mov
or
test
xor
push
fsubrs
push
inc
js
fcmovu
cmp
and
and
fcmovnbe
push
imul
mov
sbb
or
or
xor
or
andl
imul
int
les
adc
fiadds
xchg
push
dec
adc
leave
clc
and
mov
jmp
test
and
add
and
pop
imul
or
xchg
jae
push
push
jnp
les
dec
repnz
or
cwtl
add
add
jle
lret
and
popl
cli
push
stos
orb
add
cld
lcall
xor
add
imul
xchg
sar
das
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
cmp
icebp
movsb
sbb
dec
popa
or
xchg
ret
lods
dec
push
add
sub
push
cmpsb
mov
add
and
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
add
mov
stc
push
lcall
out
mul
and
jl
adc
sbbl
jo
out
out
xchg
subl
ret
and
xchg
out
mov
lock
call
mov
mov
cld
and
push
testl
jo
pop
lfence
addl
lea
icebp
jmp
push
cmpsl
adc
add
mov
push
mov
call
cmp
adc
mov
jo
mov
cmp
xlat
mov
cmp
dec
rcrl
lock
sbb
js
js
mov
jb
and
stos
in
xor
mov
or
cmova
out
cmpsb
lock
sub
dec
rorb
or
dec
add
rorb
inc
add
inc
jo
jbe
or
pop
xchg
push
inc
and
insb
mov
mov
mov
mov
sbb
sbb
adc
xor
pop
and
gs
mov
insl
repz
fs
add
dec
rorb
add
jae
xchg
xor
jno
sub
nop
sub
dec
cmp
dec
add
mov
clc
mov
dec
enter
fcmovbe
xchg
int
rorl
dec
jnp
mov
andb
and
sbb
cld
or
add
xchg
rcll
and
dec
add
nop
push
in
or
lods
mov
jmp
adc
test
mov
xchg
fisttpl
adc
mov
pop
rclb
push
push
rorl
iret
push
fsincos
push
loopne
sbb
sub
mov
imul
and
xchg
popf
ret
mov
nop
cltd
adc
push
dec
or
pusha
popf
adc
cmpsb
into
jo
leave
into
add
add
int3
add
or
adc
dec
cmp
pop
inc
mov
pusha
pop
push
ja
loopne
daa
xchg
xor
outsb
mov
adc
cmp
add
xchg
shl
adc
cld
mov
repnz
push
push
xor
or
lds
inc
and
xchg
and
push
jecxz
sbb
sub
adc
fnstcw
movsl
sbb
notb
mov
adc
push
adc
nop
push
stos
decl
mov
xor
sti
fldl
js
popa
add
movsbw
mov
jno
jne
lret
jbe
je
or
je
adc
fwait
sbbl
arpl
push
jae
mov
cs
cmp
sub
jnp
mov
hlt
push
inc
pop
mov
rolb
pop
dec
cmp
je
push
lret
mov
loopne
pop
js
je
lret
mov
xchg
lods
cld
adc
nop
inc
mov
pop
imul
movsl
sbb
push
xchg
sti
xor
cmpsb
mov
scas
test
jle
stc
lock
fwait
push
pop
xchg
out
cmpsb
dec
lods
repnz
cmp
xor
mov
push
rolb
adc
add
add
imul
push
xor
mov
gs
xchg
fwait
and
mov
push
sub
xchg
sbb
jns
std
lock
pop
into
gs
pop
lcall
adc
and
inc
mov
push
and
sbb
faddl
out
loop
xchg
mulb
sub
push
call
push
mov
add
test
jo
pop
in
jmp
xchg
adc
mov
ret
mov
dec
ficoml
and
hlt
and
inc
loope
add
jge
jecxz
sarl
imul
push
push
in
sub
jg
sbb
and
xor
or
xor
sbbb
pusha
and
mov
test
insb
cmc
inc
push
call
shlb
cmp
test
pop
cmp
das
push
inc
push
and
test
add
les
mov
and
ds
rcl
repz
dec
sbb
mov
aam
xor
sub
inc
push
mov
mov
lods
mov
or
adc
fcmovbe
sub
cmpsb
or
leave
daa
or
xor
mov
mov
lea
lret
dec
lcall
or
cld
cmp
out
clc
mov
adc
fmull
mov
push
pop
fsubs
pop
jae
dec
jne
push
adc
cmp
xchg
xor
in
push
push
or
daa
sub
and
mov
das
insb
movsl
and
dec
mov
sub
push
add
movl
rorl
lea
addl
xor
mov
clc
add
aas
xchg
sub
movsb
xchg
push
mov
sbb
aaa
addb
pop
les
push
mov
inc
pop
mov
inc
cmp
adc
mov
jae
jae
and
adc
adc
push
and
div
or
dec
jg
addl
mov
movl
add
cmp
test
cmp
dec
inc
pop
inc
mov
or
les
int3
shl
sbb
fs
add
sub
pop
cmp
adc
add
adc
adcb
fbstp
jo
sbb
push
sub
and
jge
fistl
mov
adc
pop
bound
xor
lods
mov
add
add
rcrl
mov
xchg
add
stos
adc
hlt
js
or
adc
push
and
cwtl
jecxz
sub
popa
aaa
dec
cmp
sub
dec
loopne
cs
clc
sub
decl
mov
add
push
push
push
inc
shlb
dec
mov
mov
pop
inc
mov
loopne
std
pop
roll
xchg
mov
push
and
cmp
inc
lret
clc
cmp
cmp
jne
mov
ret
pop
mov
xchg
lahf
int
dec
shrb
or
loope
lcall
push
sub
aaa
mov
nop
mov
das
adc
pop
add
das
mov
sub
cs
xor
cs
sbb
ds
jmp
push
sub
mov
dec
jb
js
cmp
imul
mov
xor
lcall
fidivrl
mov
add
pushf
lea
inc
add
mov
mov
lret
lods
mov
mov
xor
cmp
jle
cmp
js
rcrb
add
xor
rcll
jbe
xchg
js
cwtl
loopne
enter
adc
cmp
lcall
inc
push
rorl
mov
lods
ss
aad
dec
pop
cmp
jl
xor
pushl
xchg
push
aaa
nop
fwait
icebp
push
inc
sub
inc
out
roll
mov
inc
cmpsb
fdivs
js
pop
add
push
inc
pop
add
lock
enter
or
aaa
scas
jo
test
adc
push
xor
inc
mov
or
and
mov
dec
test
inc
mov
fwait
cmp
push
xlat
mov
leave
adc
stos
adc
mov
add
jmp
in
shll
in
mov
dec
adc
cmp
fwait
bound
stos
sti
cmp
inc
jne
inc
fdivrl
cld
clc
jo
or
jnp
add
bnd
adc
xor
roll
icebp
popf
xorb
loopne
cmp
lea
or
xchg
sbbb
ss
push
dec
pushf
xor
lods
jne
xor
push
addl
clc
jge
push
jbe
les
aaa
cmp
jle
leave
or
loop
mov
loop
pop
push
cmpsl
push
sub
mov
test
aaa
mov
cltd
jmp
push
or
dec
xchg
imul
add
mov
mov
stos
test
sbb
enter
les
insl
jne
inc
pop
aad
les
add
stos
je
jge
or
int3
mov
lods
fildll
inc
add
mov
sbb
or
add
lock
pop
xchg
pop
dec
add
sbbl
cmpsl
sub
and
adc
subl
int3
je
push
int3
pop
push
adc
add
push
loop
dec
cld
mov
push
adc
dec
cltd
je
push
xchg
push
jl
roll
add
and
inc
or
or
mov
nop
cmp
mov
inc
jbe
cmp
pop
cmp
xor
sbb
arpl
cmp
cmpsl
mov
imul
mov
and
subl
jo
dec
aas
push
add
adc
mov
ret
dec
mov
adc
cmp
lahf
popf
xchg
jp
mov
cmpsb
cmp
mov
dec
pop
or
pop
bnd
outsl
rol
jp
fst
xchg
into
add
push
lea
into
jno
push
ror
sbb
push
adc
xchg
add
loopne
cmp
andb
push
loopne
or
mov
push
test
test
sarl
push
xchg
xchg
ret
xchg
pop
adc
mov
or
fisubs
imul
add
sbb
xchg
mov
loop
out
mov
mov
mov
push
adc
leave
cmpw
sbb
cmpb
pusha
sub
push
push
cmpsb
in
mov
pop
push
idivb
add
add
sar
fadd
push
je
add
dec
test
xorb
jns
adc
pop
jns
xchg
mov
mov
mov
or
or
fimuls
inc
pop
rolb
and
mov
pusha
es
push
dec
push
xor
jl
sub
rol
jmp
and
lcall
dec
movzwl
jmp
jnp
add
pop
or
popa
enter
inc
xchg
imul
icebp
cmp
adc
les
mov
and
fistps
in
xor
outsl
sbb
xchg
add
ret
pop
push
sbb
aad
pop
sbb
cmpsl
cs
jbe
adc
rol
or
mov
add
incb
cmp
jne
jb
fs
push
push
add
call
dec
pop
push
pop
push
dec
sbb
jo
repnz
lods
inc
shl
and
in
rcll
jle
aam
lock
in
mov
les
pop
adc
sbb
loop
in
and
je
movhps
pushf
push
filds
popf
aam
jae
inc
or
or
add
addl
or
sub
fisttpll
adc
add
icebp
movsl
push
mov
and
adc
push
nop
outsb
dec
cmp
stc
add
or
sbb
cmp
fsubr
sub
mov
xor
aaa
cmpsb
push
push
or
lock
test
xchg
ret
adc
je
add
or
xor
mov
xor
mov
jns
inc
iret
mov
in
and
add
jl
push
shlb
in
add
andl
or
jo
xor
dec
or
add
adc
andl
arpl
rcrl
and
data16
dec
mov
dec
push
cmp
push
sub
cltd
ret
add
sbb
pop
lods
jb
lock
rolb
push
mov
push
pop
dec
daa
mov
pop
lock
adc
jne
jnp
das
inc
mov
and
mov
leave
andb
dec
adc
xchg
in
xchg
ret
fsubrl
cmp
push
lahf
leave
sbb
jl
rcl
pop
jne
adc
aaa
mov
inc
hlt
cs
lock
lea
push
mov
ret
out
mov
mov
mov
jne
imul
dec
movsl
ret
mov
shlb
andb
push
and
and
scas
push
pop
mov
mov
test
cmp
cmp
mov
xor
call
push
or
scas
add
xchg
clc
lcall
ja
nop
xchg
std
dec
loopne
addr16
inc
icebp
jmp
jmp
loopne
arpl
addr16
dec
cmpsb
xchg
jl
add
inc
bound
js
lock
dec
adc
ss
mov
stc
xchg
cld
push
push
mov
js
icebp
sub
inc
jle
and
push
fchs
arpl
cmpl
adc
lahf
in
sub
nop
xchg
and
in
mov
dec
jo
jecxz
dec
in
cmp
adc
and
and
adc
push
inc
punpckhwd
xor
loop
shlb
sub
sub
rclb
aaa
aas
adc
mov
pop
add
cltd
imul
sub
test
ret
pop
jbe
shlb
jo
jmp
adc
pop
jb
les
mov
sub
ljmp
pop
in
pop
or
inc
sub
cmpsl
mov
mov
push
adc
pusha
andl
and
xchg
xor
adc
inc
add
mov
fildl
add
cmp
mov
daa
add
cmpl
or
mov
adc
add
fidivrs
pop
aaa
adc
mov
out
pop
cwtl
cmp
pop
ret
mov
push
mov
dec
jle
add
dec
sub
push
or
rclb
push
adc
inc
sbb
test
sbb
inc
jmp
movsb
dec
in
sub
mov
add
fcomp
cmp
mov
dec
inc
sahf
add
inc
dec
mov
test
jae
jne
repz
and
lock
call
sbb
fcmovbe
and
sub
sbbl
test
test
pop
faddl
and
icebp
mov
inc
xchg
push
pop
cmp
jmp
mov
test
mov
test
dec
push
cli
insb
sub
lea
call
cmc
pusha
dec
and
int3
inc
ds
mov
xchg
add
loopne
loopne
pop
add
pop
jge
sti
adc
fdivl
xchg
sub
add
lea
lock
orl
dec
test
mov
push
and
into
mov
popa
pusha
sbb
inc
pop
mov
push
loopne
movsb
sbb
repz
lods
pushl
pop
movsl
aaa
add
sahf
mov
call
rcl
repz
mov
and
sub
or
jge
outsl
add
dec
adc
repz
adc
or
jmp
aam
xor
push
xor
push
sub
lock
adc
movsb
rolb
es
adc
cld
xor
pusha
jo
fnstcw
add
enter
add
fists
xchg
and
and
jno
push
arpl
or
test
add
loop
mov
jmp
add
mov
adc
add
int
sub
iret
js
adc
xor
pop
or
lea
push
push
mov
sub
add
or
les
fcoml
dec
mov
xor
pop
jae
push
lahf
mov
xor
cld
hlt
xor
and
shr
xor
adc
push
and
shrb
or
push
push
add
repz
add
cs
jb
inc
fwait
lds
and
out
pop
std
incl
mov
mov
cmp
jbe
adc
cmp
jmp
fldt
fisttpl
jg
lods
clc
repz
cmp
out
cmp
icebp
inc
pop
test
mov
add
and
pop
push
ds
push
mov
lret
mov
pusha
add
mov
dec
jo
push
xchg
sbb
xor
divl
push
addr16
js
outsb
sar
scas
clc
int3
sbb
xor
and
jmp
cmp
jne
xor
enter
sarl
fsubr
scas
jmp
ss
ret
add
or
xor
push
push
jb
cmpsl
jmp
cmp
or
aad
loopne
pushf
jne
push
push
and
cmp
js
and
mov
push
xor
seto
fwait
inc
cld
shl
or
push
mov
adc
out
fsts
sub
push
test
cmp
mov
xlat
aas
jbe
in
popa
push
sbb
shl
cmp
push
or
xor
mov
or
cmp
je
mov
xchg
cwtl
sbb
imul
mov
jp
push
lret
xor
outsl
inc
and
mov
mov
dec
addb
or
push
fadds
outsb
mov
inc
add
or
je
insb
mov
fwait
loopne
ret
jbe
inc
cmp
inc
mov
testb
stos
and
sub
dec
ror
clts
or
es
adc
adc
jne
aas
jp
repnz
adc
arpl
decb
adc
insl
mov
enter
xchg
shrb
aaa
aaa
pop
xor
test
frstor
mov
mov
test
sub
mov
leave
jae
adc
dec
xor
adc
adc
cmp
or
pop
add
mov
sub
or
outsb
sbb
repnz
cmp
loopne
xchg
mov
mov
and
push
pop
sbb
inc
dec
sbb
jae
xorl
push
and
inc
les
pusha
into
andl
dec
imul
shrl
and
adc
add
add
inc
or
lock
adc
and
xlat
movb
adc
scas
and
ret
pop
xchg
add
sbb
and
add
or
xchg
das
push
add
enter
add
or
or
ja
fisttpl
test
xlat
fiadds
sub
sub
cwtl
push
int
xchg
dec
arpl
jo
inc
push
inc
lret
lea
scas
adc
and
inc
add
scas
push
jae
jb
lods
sub
imul
and
mov
popa
add
pop
sub
push
shlb
xor
and
mov
pop
or
mov
xor
dec
enter
mov
pushf
add
daa
mov
lods
or
punpckldq
add
xchg
hlt
clc
or
pop
push
sbb
or
xor
ret
mov
arpl
push
push
dec
inc
in
movsb
xor
adc
or
test
dec
dec
mov
or
les
out
pop
mov
loop
xor
sbb
cmc
or
xchg
xor
add
sahf
push
push
inc
negb
push
adc
dec
push
lcall
or
xor
addr16
rol
add
sbb
popa
stos
nop
and
mov
push
cmp
push
stos
or
or
jle
pop
pop
sti
insl
or
or
sarl
inc
shr
push
sbb
sbb
push
ljmp
ret
cmp
adc
sbb
nop
pop
pop
add
fldt
sbb
adcb
mov
movsb
sbb
xchg
cmpb
sbb
mov
iret
add
add
sub
push
sub
pop
mov
pop
pop
cmc
push
cmpsl
pop
lea
pop
aam
adc
pop
cmpsl
cmp
iret
push
dec
fldt
cwtl
pop
inc
movsb
pop
mov
push
loope
push
jg
or
add
je
lea
sti
sub
andl
sbb
mov
add
xlat
lret
and
ret
xchg
fwait
mov
mov
dec
mov
and
loope
fildl
adcl
and
add
mov
xor
xchg
and
sbb
in
inc
je
push
es
or
mov
aad
sbb
add
xchg
inc
mov
icebp
mov
dec
dec
sub
out
ret
dec
push
stos
in
push
or
push
mov
sub
fldcw
xchg
xchg
movl
mov
lods
sub
add
cmp
dec
test
shl
in
jmp
clc
add
arpl
andl
shl
or
jb
adc
mov
gs
xor
sbbb
adc
cmp
std
gs
inc
fidivs
rorl
inc
fisttps
cmp
sbb
negb
adcb
sub
xchg
pusha
outsl
sbb
push
push
xchg
mov
mov
lea
nop
mov
lret
jne
daa
push
inc
or
inc
and
ror
adc
test
dec
and
imul
add
inc
add
push
xlat
pop
pop
or
mov
mov
aam
and
movsb
repz
rclb
andl
xchg
mov
xchg
jo
mov
or
mov
in
popa
ret
sbb
cmp
add
push
xor
inc
lcall
jo
dec
pop
push
pop
bound
out
sbb
and
sbb
mov
popa
push
pop
dec
stc
daa
pop
or
inc
adc
cmp
inc
mov
and
xor
push
call
ficomps
ret
lds
and
pop
mov
xadd
sbb
jge
push
pop
stos
push
xchg
test
dec
inc
mov
push
and
xor
push
lods
outsl
test
mov
aaa
rcll
fs
test
inc
add
sbb
lods
add
push
cmp
push
std
cwtl
pop
inc
mov
sbb
adc
adc
xor
arpl
sbb
and
es
test
rcll
test
loope
add
movzwl
add
or
sbb
insb
xor
mov
sti
and
inc
sbb
mov
or
pushl
rolb
pop
and
xchg
push
movsl
test
fdivrs
sub
daa
jne
adc
xchg
sbb
loop
sbb
or
inc
push
shlb
adc
push
loopne
cmp
insl
sbb
xchg
mov
xor
mov
pop
add
out
add
ja
xor
sub
lahf
inc
insb
insl
jg
or
xor
xlat
cltd
sarb
mov
pusha
sub
movsl
imul
rorl
out
xor
dec
push
xor
shrl
jmp
mov
add
push
mov
mov
gs
cli
add
adcb
in
cmpsb
xor
jns
es
mov
push
cmp
inc
clc
mov
sub
shll
push
jl
or
insl
pop
push
jns
adc
push
adc
add
les
outsb
inc
clc
pop
mov
ret
jno,pt
push
mov
outsl
push
jbe
pop
pop
xlat
ret
mov
mov
adc
xchg
add
mov
test
pop
jno
cmp
sub
push
outsb
xlat
or
loop
pop
das
les
pop
jae
cmp
and
pop
sub
sbb
xchg
aam
dec
mov
lods
and
ret
jae
xchg
push
cwtl
nop
aaa
test
jo
sbb
mov
inc
jo
mov
adc
nop
popa
jp
add
add
jg
adc
sbb
mov
pop
inc
pusha
push
adc
mov
andl
inc
sbb
jmp
ret
adc
mov
je
adc
scas
mov
sub
mov
enter
sub
xor
mov
icebp
push
popa
iret
push
jl
mov
sbb
and
daa
push
mov
push
inc
popa
fmull
jmp
xchg
pushf
jl
imul
jno
lods
loop
fisttps
xor
jmp
stos
mov
popa
inc
es
sbbl
fsubl
push
ss
mov
aaa
rcrl
add
xorb
loope
pop
les
mov
jle
add
daa
loop
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
dec
sbb
push
cwtl
sahf
xchg
adc
cmp
inc
push
cmp
add
xadd
push
xchg
pop
stos
and
adc
or
jmp
jne
push
jo
jo
ret
and
xchg
push
and
pop
add
mov
adc
push
add
or
mov
test
push
push
mov
ja
mov
loope
clc
push
adc
jmp
and
rolb
sub
pop
nop
or
dec
mov
add
ss
ficomps
mov
ret
cwtl
inc
fisttps
mov
mov
outsb
in
and
nop
imul
aad
scas
add
push
dec
xchg
jmp
dec
jne
push
cmp
aad
and
ret
cmp
aas
adc
in
xchg
pushf
add
adc
adc
dec
dec
test
and
xchg
out
mov
push
sbb
inc
sti
push
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
adc
addr16
xchg
popa
shrb
lods
add
add
push
sbb
and
xor
mov
inc
mov
pop
hlt
mov
test
adc
nop
int3
xchg
out
push
or
add
cmp
jno
or
loope
popa
mov
je
sbb
adc
mov
and
xchg
push
mov
adc
mov
rorl
mov
movb
jns
add
out
and
imul
test
js
xor
inc
jl
sbb
jl
jmp
adc
sub
sbb
pusha
sbb
inc
or
fcomps
sub
inc
push
test
push
adc
inc
orb
xor
sub
test
push
mov
push
or
inc
mov
jo
pop
pushf
sub
mov
movsl
out
pop
imulb
pop
ljmp
outsb
inc
cltd
iret
and
les
enter
sbb
popa
push
mov
loopne
adc
add
lock
adcl
dec
sbb
xchg
xchg
enter
push
ss
adc
lods
sub
scas
dec
adc
scas
xchg
outsl
inc
mov
es
call
sbb
xchg
stc
loope
insb
add
add
push
pop
pop
nop
loopne
stc
jne
das
pop
xchg
mov
fcomps
jmp
add
testl
lea
or
cwtl
pop
pop
jnp
jecxz
sbb
sub
adc
in
dec
fcmove
push
add
cmp
sidtl
fdiv
mov
ret
push
pop
push
jle
cmp
xchg
mov
faddl
add
lods
jle
mov
mov
movsb
mov
or
outsl
ljmp
loope
mov
je
xchg
or
add
add
add
sub
aam
push
pop
push
push
lcall
pop
lret
cmpl
cmp
lods
inc
and
push
push
push
jo
xor
sub
sbb
mov
jl
mov
xchg
dec
addr16
cltd
push
xchg
icebp
push
fsubp
jb
mov
nop
shl
push
addr16
adc
pop
adc
fwait
movsl
subb
daa
push
add
sub
pop
aaa
or
jns
mov
test
popf
push
inc
lcall
imul
call
shl
adc
orb
mov
ds
push
iret
cmp
ficoml
movsl
cmp
psubsb
outsl
mov
inc
js
test
inc
or
xor
pop
daa
inc
inc
je
enter
cld
aas
mov
iret
push
sub
lea
push
or
sub
mov
mov
daa
adc
adc
popw
jo
and
cs
mov
ret
dec
add
test
and
mov
sbbb
adc
adc
jl
sub
push
lock
sub
flds
cmp
cmpsb
or
fadd
mov
push
inc
push
lock
xchg
subl
mov
mov
push
add
aam
push
lods
fisubs
sbb
mov
call
xchg
inc
adcl
sahf
push
je
popa
adc
adc
pop
fstpl
or
std
out
ss
push
imul
push
test
dec
sbb
push
cld
xor
cmpb
ss
test
mov
imul
push
bound
pop
loopne
arpl
stos
ljmp
js
adc
cmp
sub
lcall
push
test
shr
pop
in
adc
jne
lods
push
or
dec
xchg
or
clc
mov
adcb
cmpsl
or
test
add
pop
test
enter
push
adc
dec
cmp
jb
mov
lret
fsubrs
into
incb
adc
mov
adc
pop
adc
mov
or
inc
adc
mov
mov
fldz
and
add
and
cmp
and
pop
sti
cmpsb
add
sub
pop
xor
cmp
adcb
push
xchg
mov
inc
jmp
rolb
dec
or
push
mov
pop
mov
mov
mov
adc
aam
dec
pop
push
mov
shlb
lcall
jne
cmpsb
jmp
mov
jne
fisttpll
mov
fnstenv
leave
add
add
jnp
fsubs
jo
dec
movsl
mov
subb
call
pop
call
mov
das
sbb
cmpsw
adc
out
mov
cltd
jg
adc
add
jle
push
scas
xorl
sbb
xchg
push
jg
or
and
adc
stc
in
push
cmp
push
cmp
jle
cmp
jp
push
cmp
cmp
add
jge
cmp
mov
mov
push
add
inc
jmp
adc
clc
xchg
and
movw
std
cmc
add
mov
ljmp
sahf
lahf
dec
cs
icebp
lahf
fwait
inc
or
fs
pop
idiv
call
fbld
mov
xor
adc
adc
sub
cmp
jnp
in
test
das
subb
dec
test
jno
dec
add
add
outsb
push
push
or
mov
lea
addr16
dec
sub
orl
test
pop
push
inc
cmp
sub
dec
aaa
jnp
add
dec
movsl
or
repz
adc
or
andl
or
and
pop
pop
sti
pop
int
or
stos
xchg
cmp
push
mov
jo
lods
loope
cmp
outsl
mov
movsb
addr16
add
add
pop
fs
stos
push
insl
iret
or
shrl
rorl
pop
dec
xchg
or
pop
xlat
xor
pop
pop
pop
jns
add
and
mov
insl
or
enter
and
nop
addr16
add
or
fists
push
push
rclb
mov
inc
insl
sub
or
cld
rcrl
pop
mov
and
xchg
dec
lock
movsl
adc
fcmovnu
xchg
pushf
xchg
add
push
icebp
ficoml
data16
adc
adc
sub
adcb
mov
fs
mov
inc
dec
xchg
sbb
test
adc
sbb
dec
sub
shrl
adc
popa
sub
fistpl
push
adc
popa
cli
popa
popa
push
and
sbb
adc
inc
add
shrb
sub
lods
test
loope
sbb
and
mov
and
sbb
pushf
xor
and
sbb
sbb
dec
popa
mov
pop
push
jno
pop
cmpsb
add
test
fisubl
fwait
mov
inc
sbb
stc
add
test
lods
jns
subl
jecxz
or
jnp
sub
sub
lods
fstl
adcl
ljmp
jmp
xor
or
test
or
adc
push
test
push
mov
and
shrb
lcall
sbb
xor
cmp
jo
add
adc
dec
xor
cwtl
xchg
mov
inc
leave
adc
xor
sbb
mov
imul
aas
pop
add
pusha
add
push
shll
adc
add
xchg
sbb
ret
js
adc
test
sub
jae
push
mov
push
icebp
mov
and
jge
lret
sbb
or
adc
loope
sub
push
pop
fwait
loope
dec
push
pop
popl
insb
cwtl
or
out
inc
sahf
inc
and
ret
inc
push
and
xor
sbb
xchg
sbb
and
nop
jne
fcoml
les
xchg
or
push
sub
nop
add
aaa
mov
add
les
lea
test
and
std
sbbb
pop
leave
bound
mov
test
enter
outsl
add
orb
cmpsl
cmpsl
in
push
add
dec
jmp
cmp
add
adc
mov
dec
aaa
jb
pop
pusha
lock
ljmp
leave
xchg
pop
sbb
pop
or
push
enter
icebp
and
and
in
sub
or
pminsw
insb
loop
popf
jbe
jae
in
loop
mov
test
rclb
dec
insb
leave
sub
push
add
int
xor
xor
cmc
cmpsl
and
ja
jo,pn
sbb
jbe
and
add
dec
sar
enter
lods
ja
jns
add
insl
sub
add
add
pushf
aam
push
js
lock
push
push
clc
lret
adc
adc
test
pop
adc
gs
sbb
pop
push
popa
stos
cmp
mov
test
push
sarb
stos
popa
xchg
mov
rcll
sbb
push
add
or
into
adc
pop
fistl
add
inc
xchg
dec
leave
dec
add
dec
mov
sbb
rorb
sub
jne
pusha
js
insb
add
shll
cmp
fs
in
add
pushf
stos
sub
add
cmpsb
add
jnp
test
fnstsw
add
adc
lods
popa
addl
imul
adc
shlb
dec
in
adc
add
and
notl
adc
std
mov
xor
jg
mov
push
loopne
adc
xor
jle
jle
push
jbe
std
es
ffreep
jecxz
add
roll
adc
inc
cwtl
jl
push
pop
pushl
and
dec
dec
or
cmp
movl
dec
or
int
daa
inc
ret
xchg
inc
inc
push
pop
or
icebp
xchg
push
mov
jbe
aaa
je
mov
add
push
mov
mov
xchg
sub
in
jno
loop
andb
sbb
dec
or
xchg
fmuls
jg
jno
dec
sub
add
mov
fcompl
fnstsw
test
je
sbb
add
lahf
dec
repnz
sub
outsl
xchg
jp
sbb
dec
cmp
pop
std
dec
rcr
or
mov
fstpl
mov
push
addr16
pushf
insl
movsl
test
mov
jo
and
out
fstpt
xchg
add
and
loope
fsubrp
pop
xor
dec
push
mov
mov
repz
icebp
and
push
imul
mov
ret
and
mov
xchg
dec
jb
pop
inc
pop
sbb
add
cmpsl
lods
add
lock
pop
sbb
xor
insb
fwait
and
push
mov
inc
mov
mov
sub
dec
fiadds
movsl
jge
mov
cmpsl
push
adc
shll
ljmp
leave
mov
jge
notl
je
into
mov
dec
fs
inc
pusha
pop
and
and
insl
bound
je
xor
sub
shrl
movsl
pop
add
jnp
ja
loopne
xor
push
mov
mov
and
mov
and
fwait
aaa
cmp
sbb
mov
movsb
hlt
andl
mov
mov
adc
loopne
jnp
pop
add
cmp
xor
clc
sub
xor
push
xor
rcrb
cmp
jb
sbb
leave
shld
add
pop
add
xchg
ja
lea
push
push
mov
push
push
je
movsl
mov
push
or
add
push
leave
adc
mov
push
adc
push
push
sub
cmp
in
rorl
push
or
cli
test
push
push
mov
dec
pop
pop
fmul
test
jno
ret
and
mov
mov
pop
or
jno
insb
dec
push
mov
sti
leave
shlb
push
jne
push
push
and
ja
push
fadd
xor
nop
push
lds
sbb
xorb
inc
cmpw
jne
jmp
out
adc
inc
inc
cld
cmp
outsl
inc
loope
dec
push
push
jl
mov
fildll
aas
in
popl
sti
jg
stc
std
mov
add
or
sahf
leave
out
pop
jle
push
data16
mov
jl
push
push
push
pop
push
adc
ret
popa
aas
fidivl
mov
rolb
and
dec
or
arpl
inc
push
ds
jecxz
addb
imul
adc
add
fsubs
mov
jle
add
adcl
ret
fbld
jnp
push
jo
movb
in
in
push
out
dec
pop
and
xchg
frstor
inc
syscall
in
dec
jae
push
fwait
or
cmpsl
push
pop
pop
push
pop
imul
ret
das
lea
cmp
fiaddl
aam
adc
dec
daa
test
mov
jmp
scas
push
push
or
movsb
std
xorl
push
test
gs
in
xor
nop
ljmp
mov
fstpl
pop
addr16
adc
add
lock
adc
int
fcmovu
xchg
push
orl
int3
aaa
mov
jl
mov
or
jge
je
lret
mov
dec
add
adcl
sbb
lods
cmpsb
mov
dec
xor
add
loopne
cwtl
push
xchg
imul
adc
test
outsb
jno
stc
jo
ret
pop
add
sub
mov
ja
cs
xchg
aam
icebp
xchg
pop
lahf
add
add
jno
xor
mov
aaa
mov
mov
mov
pop
mov
add
test
pop
fcoms
pop
fisttps
sub
adc
and
les
test
push
adc
fsubr
addb
cwtl
test
repnz
cmpsl
sarl
and
inc
pop
mov
pop
add
jo
ljmp
dec
or
sti
in
call
mov
sbb
xor
cs
push
add
jne
xchg
adc
pusha
call
or
push
sbb
sub
push
pop
adc
call
sub
loopne
inc
and
ss
int
pop
test
rolb
mov
xchg
es
rol
sub
push
popa
faddl
ja
sbbb
sbb
dec
ss
shll
xor
ss
ljmp
icebp
and
xor
rclb
inc
jg
je
jg
add
add
sub
dec
je
jge
mov
add
sbb
dec
jne
sahf
pushf
mov
jmp
push
jl
mov
push
xchg
or
and
jnp
cld
addb
push
stc
cmp
push
sarl
push
mov
or
push
sub
add
push
jge
lea
lahf
fstps
push
test
jnp
push
sub
push
cmp
adc
in
cwtl
mov
jb
and
push
jl
enter
loopne
jge
add
pop
push
cmp
imul
adc
and
nop
inc
push
jns
jle
cmp
push
cmp
pop
subb
add
lahf
in
inc
mov
inc
fs
inc
push
cmp
cmp
call
sbb
enter
enter
and
or
cwtl
or
mov
lods
bound
jns
out
ror
fsubrp
iret
sarl
cld
push
arpl
sbb
iret
repz
pop
bound
cmp
repz
cmp
mov
rcr
in
out
cmp
clc
add
jns
out
and
xor
dec
pushf
dec
sahf
out
pop
jo
and
test
xchg
push
aaa
xchg
xchg
pop
cmc
stos
in
xor
ljmp
jne
add
add
xor
inc
mov
mov
pop
mov
negl
nop
es
nop
adc
push
and
push
les
adc
cmpb
orl
rol
jno
rorb
imul
xchg
popa
push
popa
add
test
sti
jo
lea
loop
lret
sub
mov
call
push
pop
stc
incl
jg
popa
add
out
fcompl
xchg
test
mov
fmull
xor
ret
add
lods
pop
add
xchg
sub
add
inc
js
xor
es
add
int3
loope
mov
and
les
jl
xlat
cs
dec
test
or
lea
shll
pop
repz
mov
loope
imul
cmpb
jge
ret
pop
push
cmp
andl
push
jp
push
add
cmpsl
scas
add
fisubs
jne
cmpsl
push
in
stc
jg
inc
add
rorb
add
imul
sub
mov
xorl
push
gs
ret
or
lds
dec
imul
xchg
or
sbb
or
call
enter
adcb
shrb
pop
and
adc
ror
xor
ret
decl
push
dec
call
in
inc
cld
movb
inc
cmp
adc
push
add
jecxz
in
add
test
pop
push
adc
xchg
mov
scas
sub
inc
push
or
mov
xchg
mov
push
sbb
xchg
cmc
push
inc
dec
lock
rcll
loope
shll
push
or
lea
mov
pusha
pusha
sahf
xor
mov
out
rcll
loopne
xor
cli
pop
nop
mov
ret
xchg
je
mov
sarb
mov
mov
xchg
mov
int3
cmc
js
pop
xor
dec
add
mov
sub
cld
inc
loop
sarb
movsb
ja
cs
popf
mov
lods
and
xor
inc
jmp
push
negl
fwait
sbb
fisubs
inc
mov
and
fisubrs
sbb
push
cs
inc
mov
xchg
adc
lcall
enter
outsl
xor
xor
xchg
jbe
cs
xor
jle
fadd
xor
icebp
xor
scas
fnsave
xor
dec
jae
jae
enter
jae
jae
insb
jo,pn
jae
jae
jl
cwtl
dec
jae
jae
test
movsb
and
push
je
push
int3
sub
xlat
cmpsb
in
ja
roll
arpl
popf
pushf
sahf
sub
mov
pop
int3
jl
mov
addb
test
addl
lret
cmp
and
test
jno
pop
rolb
test
sbb
mov
incb
out
cmp
dec
or
loop
sub
xchg
js
adc
stos
push
jbe
out
push
mov
adc
adc
decb
imul
imul
gs
add
int3
pop
and
sbb
xchg
push
mov
inc
sbb
and
mov
dec
mov
lcall
xchg
xor
and
sbb
and
fistpl
movsb
adc
iret
adc
repnz
push
adc
sahf
add
xchg
inc
xlat
int
push
sbb
lods
push
fst
and
push
mov
cmp
divb
insb
ret
pop
or
cmp
inc
adcb
rcrl
xchg
cld
enter
addl
nop
imul
cld
test
cmp
rorl
sub
xchg
subb
cmpsl
cmc
sub
cmp
pop
enter
sub
xor
movsb
push
scas
pop
dec
aas
push
sbb
and
adc
lea
test
cmp
dec
inc
in
aaa
xor
lock
or
mov
add
test
daa
cmp
in
push
inc
cmp
sbb
and
inc
add
test
push
push
dec
xorl
jo
rclb
movsb
rorb
jno
inc
push
lods
movsb
xchg
adc
adc
arpl
adc
or
inc
imul
and
adc
mov
outsl
jno
jmp
push
sub
cmpsb
into
jecxz
pusha
aaa
jb
mov
ds
lea
push
pop
dec
rclb
lcall
pop
sarb
cwtl
inc
cmp
and
mov
jl
cmp
dec
xchg
lock
inc
or
cmp
push
mov
push
xchg
ss
or
outsl
pop
lret
and
test
out
insl
mov
mov
inc
add
or
pusha
pop
dec
div
push
push
rol
push
mov
push
das
or
mov
lock
pop
add
jnp
sbb
mov
aam
stc
repz
fiaddl
jo
mov
jae
cmc
xor
movsb
aaa
sbb
loopne
stc
push
movsl
and
inc
call
and
fstl
ss
or
cmp
das
xchg
xor
push
in
into
dec
or
adc
insb
enter
sbb
lea
pop
in
je
cmp
mov
icebp
jmp
add
jns
add
enter
lods
pop
jmp
test
or
nop
xchg
cmp
cmp
call
xchg
xor
rclb
faddl
adc
adc
and
add
dec
adc
xchg
pop
loope
repz
push
fdivrl
and
loopne
stos
addl
cwtl
push
lcall
test
sbb
mov
lods
xor
push
test
enter
jb
lods
sub
dec
push
mov
rcl
push
es
mov
adc
mov
dec
add
rorb
lock
pushf
mov
mov
mov
test
and
pop
rclb
orb
lcall
push
jg
sbb
sbb
movsb
pop
push
sti
cmp
les
mov
in
in
mov
push
in
push
pushf
xchg
mov
xor
test
mov
pop
or
xor
int
or
or
pop
dec
fmull
ret
es
pusha
sub
inc
ret
or
inc
add
or
sub
inc
sbb
je
adc
js
clc
or
mov
xor
add
sub
test
jns
sahf
lret
and
push
in
cltd
mov
xchg
dec
or
cmp
jb
xor
jbe
xchg
dec
xor
cld
dec
in
dec
mov
sub
xlat
jne
cmp
add
neg
jo
mov
mov
push
test
lods
add
jecxz
rcr
and
mov
fdivrl
outsl
or
aad
push
orl
adc
push
divl
lods
or
mov
cmpsl
sbb
and
rorl
pusha
or
pop
push
mov
shr
and
test
or
or
icebp
push
xor
push
mov
into
or
and
push
push
xchg
inc
adc
xorl
adc
aaa
inc
jp
xchg
adc
mov
jecxz
mov
popf
xchg
inc
xchg
cltd
cmp
fsubrl
pop
fwait
nop
mov
shrl
and
pop
sub
xchg
in
lods
xchg
inc
inc
xchg
lods
cmp
fwait
mov
sbb
fnstcw
sbb
add
fmul
jbe
sub
sbb
rcr
enter
leave
pushl
clc
push
add
or
ror
sbb
mov
xchg
cmp
xor
mov
jae
test
pusha
inc
scas
loope
dec
nop
pop
sub
movsb
and
cltd
push
sbb
sbb
sub
roll
and
pop
push
imul
adc
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subl
es
pusha
push
sub
imul
insb
or
fdivs
jmp
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
lods
addb
mov
adc
dec
in
pop
pushf
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
pop
les
iret
dec
fs
pop
sbb
mov
shll
aaa
sub
movsb
push
xor
dec
dec
lods
push
icebp
fdivrs
sbb
lds
push
flds
das
inc
push
cmp
je
repz
adc
push
fmull
pop
jecxz
or
pop
pop
sub
add
add
mov
adc
xchg
sbb
aaa
sbb
pop
and
ret
push
and
data16
fistpl
enter
sbb
ljmp
popf
fisubrl
push
cwtl
insl
or
add
add
adcb
sbb
pop
roll
xorb
inc
or
and
je
cmp
popf
and
push
add
push
stos
test
lock
clc
cmp
daa
lea
mov
cs
repnz
and
mov
cmp
inc
add
add
add
pusha
enter
aam
popf
add
std
mov
mov
test
rclb
adc
cmp
xchg
dec
lods
shr
dec
imul
pop
mov
outsb
gs
mov
pop
jg
pop
cmp
jbe
mov
mov
sub
movlps
xor
fs
add
mov
rol
add
sub
jl
faddl
mov
push
adc
inc
inc
xor
repnz
sbb
sbb
fldl
lods
adc
cmp
push
mov
inc
je
mov
push
clc
and
into
hlt
loope
push
jbe
or
dec
nop
ds
and
jb
mov
jg
dec
lret
lahf
jo
rcrl
add
test
dec
imul
sub
xor
ja
aam
jp
test
pop
cmp
add
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
cltd
xchg
jb
jl
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
pop
lods
inc
inc
repz
fmulp
inc
cmp
jae
inc
adc
cmp
and
je
mov
dec
rcll
pop
add
scas
in
ds
xlat
mov
push
mov
add
jne
or
xchg
lods
xchg
push
sbb
lock
inc
rorl
xor
push
sti
addl
popa
mov
mov
fcmovu
ret
jmp
or
pop
js
or
out
imul
mov
push
sub
aam
sbb
pop
push
lods
adc
mov
sub
add
adcl
xor
inc
test
sbb
sbb
dec
and
cmp
xchg
inc
je
xchg
pop
push
fcompl
pop
test
cmpsb
sbb
jecxz
and
lret
ret
dec
cmc
cwtl
test
cli
sahf
subb
stos
and
inc
add
push
sub
imul
push
jae
sti
jg
cmp
ds
jl
or
je
clc
mov
add
and
mov
add
ljmp
mov
add
pop
dec
add
or
or
pop
rclb
xchg
xchg
scas
xor
sub
ret
push
loop
push
lea
mov
adc
add
push
pop
and
push
mov
hlt
xor
pop
add
cmp
push
mov
dec
push
nop
pop
lahf
lock
dec
call
addl
mov
push
xor
imul
push
xor
pop
cmc
push
rorb
push
inc
sub
inc
lock
xor
inc
mov
cmp
popa
sti
or
je
dec
and
add
gs
push
ret
adc
std
dec
loopne
into
inc
insl
mov
or
call
js
or
lret
imul
add
sub
gs
cmpsl
fisubs
das
loop
mov
pop
add
test
fcomps
sbb
orb
add
xchg
nop
inc
cmpl
push
data16
ja
xchg
ficomps
testb
lret
out
mov
push
add
in
sbb
and
pushf
xchg
bound
adc
mov
mov
xchg
adc
in
in
pop
fsts
jnp
push
xchg
int3
and
and
loopne
mov
mov
in
outsb
xchg
test
lock
push
cs
inc
in
call
inc
or
into
and
ds
ds
ret
pop
lock
movsb
or
xor
xchg
out
or
and
loopne
mov
or
movsb
rorb
repnz
dec
loopne
lock
mov
sbb
shlb
push
pushf
add
bound
pop
adc
dec
dec
add
daa
adc
mov
pushf
add
in
and
inc
int
test
dec
push
dec
inc
lods
and
mov
or
repz
sti
inc
mov
or
clc
aas
cltd
xchg
inc
mov
or
dec
sub
dec
dec
inc
and
sub
xchg
sbbl
add
push
cmp
xchg
jno
dec
sbb
test
jecxz
mov
sbb
mov
mov
push
mov
sub
pushf
es
and
push
dec
or
sbb
fs
add
dec
xor
pop
cmpsl
in
or
lods
cmpsb
loope
xor
add
lock
pop
jecxz
sbb
push
xor
push
cmp
xor
sbb
lods
push
movsl
fst
add
mov
out
adc
addl
dec
dec
testl
test
into
sbb
mov
into
push
or
cmpb
in
xchg
pop
add
mov
add
inc
push
sbb
fbld
inc
cli
jp
pop
cmpl
cld
mov
or
int
mov
gs
call
aas
jg
rclb
out
mov
addb
add
loopne
inc
cltd
cmpsl
movsb
dec
adcb
dec
ret
imul
sbb
sbb
inc
imul
add
dec
adc
fs
ret
fldt
insb
idivb
pop
js
outsl
ljmp
enter
insl
pop
push
mov
mov
pop
enter
sbb
stc
test
pop
mov
cmp
es
xchg
mov
sbb
xor
sub
divl
and
mov
xlat
sub
adc
cmp
xchg
sbb
cmp
cmp
jo
jg
and
jne
lock
and
jmp
loopne
inc
imul
imul
sub
xor
adc
fimull
pop
fisttpll
test
imul
fs
push
dec
pop
cmp
inc
sub
xlat
push
mov
sub
popa
nop
mov
lods
xor
lea
arpl
cmp
je
sub
nop
inc
push
les
xor
push
ljmp
mov
adc
rcr
and
xor
les
cmp
int
xor
in
cmp
push
inc
sbb
mov
sarl
jae
jmp
mov
add
clc
dec
lret
test
or
mov
and
sbb
test
push
mov
dec
push
xor
jne
je
inc
into
cmp
imul
xchg
cmpb
add
sub
pusha
add
cmp
roll
adc
mov
or
mov
push
mov
cmpsb
and
sub
inc
cmpsb
notb
xor
or
mov
mov
xor
xor
mov
rclb
pop
push
lea
mov
dec
mov
mov
adc
in
rclb
dec
pop
mov
or
mov
adc
daa
hlt
or
mov
in
mov
xor
or
mov
xchg
call
lock
mov
fst
lock
mov
or
or
or
or
lods
jnp
lret
repnz
inc
std
xchg
mov
das
je
jge
out
cmp
mov
ret
into
fwait
pop
jnp
das
xchg
jb
mov
inc
xchg
fcoml
adc
idivl
cs
in
cmp
test
jne
es
loopne
clc
jb
mov
jne
jno
in
pusha
pop
push
mov
push
shl
ret
sbb
mov
add
dec
lea
inc
pop
fistpl
and
dec
mov
inc
xor
push
fnsave
sbbb
cmp
leave
pusha
sbb
addr16
sbb
or
mov
popa
imul
fcomps
repz
mov
adc
or
cli
sbb
jle
pop
leave
jp
push
cmp
dec
xor
jo
sbb
jle
test
leave
add
bound
or
inc
add
inc
or
lret
mov
dec
lods
imul
pop
add
xlat
add
sbb
inc
add
aaa
mov
in
test
push
xor
pop
ret
ret
pop
xchg
push
test
pop
xchg
push
enter
cmp
rclb
pop
in
daa
adc
popl
cmpsl
inc
data16
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
push
pop
xor
in
shll
inc
pop
mov
fcomp
xchg
aad
adc
cmpsl
or
push
lea
movl
jbe
inc
dec
cmp
inc
sbb
fildll
add
push
jl
mov
lea
fstpl
lea
push
lea
dec
jge
jne
push
dec
aaa
mov
nop
shrb
test
xchg
ret
lea
add
jl
jb
loope
insb
cmpsb
hlt
jl
push
sbb
leave
jle
dec
loope
xlat
adc
addr16
cmc
int3
imul
push
std
jae
out
add
xchg
fadd
jne
sbb
cmp
adc
in
cmp
add
adc
sub
fcom
loopne
sarb
loopne
data16
jb
adc
mov
add
jl
pop
js
jl
cmp
and
inc
imul
ret
xor
mov
inc
loopne
or
sbb
lea
adc
xchg
insl
mov
movsl
rolb
jg
pop
orl
dec
popa
cmp
pusha
test
dec
xor
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
enter
popa
fs
sbb
ficoml
mov
rcrb
sbb
ret
fwait
mov
mov
and
fisubrs
xchg
push
and
pop
add
or
adc
or
data16
js
mov
clc
or
add
shlb
or
fldl
rorb
int3
or
mov
or
into
inc
subl
mov
sub
sbb
filds
stos
lahf
add
dec
arpl
rcrb
and
cwtl
inc
xor
enter
loopne
movsl
jnp
push
or
cmp
jge
sub
dec
jmp
movsb
hlt
pop
imul
xchg
pushl
gs
jge
sub
sbb
or
lea
ret
add
rcrl
pushf
movsb
loope
pop
mov
aad
xchg
mov
and
in
add
push
xlat
dec
insb
xor
negl
mov
je
or
push
mov
jle
test
in
and
mov
cmpb
sbb
ds
popa
test
mov
ja
cmp
mov
call
cmpl
test
cmp
dec
das
push
hlt
mov
xchg
push
scas
mov
decl
dec
daa
cmp
pop
adc
jnp
sbb
xor
mov
cmp
sbb
and
adc
cmp
subl
and
lds
sub
xor
and
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
clc
sti
ja
and
cmp
dec
pop
movb
adc
and
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
mov
sub
jo
inc
stos
popf
inc
mov
orl
push
xor
or
mov
stos
je
insb
and
imul
mov
or
ret
iret
movsb
popf
cmp
mov
andb
popf
adc
or
mov
jo
or
sbb
adc
xchg
pop
outsb
mov
js
sub
jae
jg
je
push
outsb
inc
and
add
outsl
sub
sbb
fcompl
xor
icebp
loopne
sbb
fsubl
add
jne
lock
pop
sbb
adc
in
test
add
data16
mov
xor
sub
int
mov
push
push
push
adc
add
out
jbe
rclb
and
push
les
add
or
pop
pop
dec
cmp
jne
mov
jne
jno
adc
leave
in
in
call
mov
and
sub
mov
mov
cmpsb
adc
stos
hlt
lock
mov
sbb
jge
jecxz
push
mov
push
jb
add
or
dec
inc
push
std
xor
fsubrs
add
adc
inc
je
cmp
jo
arpl
mov
rclb
dec
rorl
ficoml
adc
add
dec
int3
mov
shlb
ja
xchg
mov
mov
pop
imul
mov
pop
xor
ja
xorl
repz
push
add
pop
sub
into
aam
rcll
xchg
shlb
push
inc
addl
bnd
and
les
cmc
je
inc
les
cs
inc
loopne
push
jne
cmp
je
pop
stos
mov
dec
imul
or
jmp
sub
popf
and
or
outsb
xchg
rcll
cld
roll
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
in
mov
test
or
test
cmp
add
ss
sbb
sub
xchg
int3
xor
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
pushl
data16
jge
and
or
clc
jle
cltd
mov
rorb
jecxz
rorb
mov
orb
mov
add
sbbb
sbb
clc
push
inc
pop
or
jecxz
adc
loope
sub
mov
push
adc
subl
pop
call
push
cltd
pop
jmp
out
je
dec
xchg
jp
enter
add
push
xor
lcall
pop
or
pop
adc
jne
dec
int3
movsb
jb
xor
out
add
repz
andb
sahf
inc
pop
repz
push
fisttps
daa
add
xchg
inc
je
mov
movsl
call
scas
push
stc
push
addb
stos
cmpsb
mov
sbb
xor
or
scas
cwtl
shlb
loopne
mov
and
sbb
addr16
adc
movsl
fcmovnbe
sub
push
dec
xor
pop
test
in
add
leave
mov
add
xor
in
xchg
shlb
imul
xchg
add
add
inc
xorl
aas
mov
or
or
in
or
aas
mul
pop
add
stos
add
test
pop
lock
ret
or
les
push
lods
daa
jno
outsb
jo
adcb
and
mov
fs
cmpsb
insl
je
movsl
ja
or
jmp
or
cmp
paddw
roll
adc
rolb
dec
clc
dec
xchg
sbb
xchg
ret
add
es
clc
insb
iret
cmpsb
mov
clc
xor
ds
ret
add
cmp
jne
jae
movsbl
sbb
lcall
xor
lahf
mov
mov
jmp
cmp
mov
ds
jmp
enter
ret
incl
aas
add
add
or
jecxz
or
add
inc
cmp
jl
inc
jecxz
jmp
jge
push
mov
dec
call
loop
add
sar
add
xlat
sub
push
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
adcl
out
xchg
xor
cmpsb
adc
pop
pop
sahf
or
jo
xchg
loopne
jp
sbb
push
aad
push
sub
test
mov
inc
jp
jbe
jmp
add
ret
or
mov
rolb
add
pop
adcb
rclb
add
data16
in
push
jmp
push
cmp
jl
cmpsb
jle
insb
aas
lods
test
mov
mov
jge
push
xchg
cli
js
inc
mov
andl
cli
movb
jne
cmp
ja
addb
rolb
or
repnz
jl
out
add
or
invlpg
adc
jns
jmp
test
pop
inc
cmp
and
adc
or
daa
jae
lret
inc
int
pop
push
lret
sub
fidivl
xor
in
push
xor
cmpsb
divb
stos
mov
iret
add
outsl
pop
sbb
nop
aaa
and
or
inc
data16
repnz
adc
negl
mov
jbe
pop
mov
and
add
nop
popa
test
xor
or
jecxz
pop
cmc
sbbb
jmp
dec
and
pushf
mov
cmp
push
push
aam
mov
mov
jns
cmp
outsb
pop
mov
enter
lock
push
inc
jb
add
push
push
jb
call
cld
add
push
push
sarb
dec
mov
lret
add
or
je
mov
js
jne
test
mov
inc
lods
add
pop
int3
pop
mov
dec
jns
lret
add
int3
jnp
sar
aaa
push
arpl
jle
rcr
test
sub
insb
mov
mov
loope
pop
push
in
or
lret
jl
push
adc
mov
iret
push
inc
dec
push
push
popf
ss
fdivl
dec
mov
lds
add
mov
mov
jge
mov
adc
dec
pop
mov
ret
jp
cmp
cli
and
scas
ret
mov
sbb
dec
pop
gs
push
popf
jo
shrb
push
ljmp
jbe
fisttps
add
and
dec
or
jbe
sbb
mov
shl
test
mov
add
int3
xchg
mov
das
pop
fstpl
lret
je
ja
or
dec
cld
inc
mov
addr16
cwtl
cmp
movsb
cmp
mov
and
imul
jno
enter
or
pop
aam
std
stos
xor
inc
mov
pop
dec
jnp
push
push
arpl
lds
jmp
mov
rcll
add
jo
lcall
pushf
mov
aaa
xchg
xchg
arpl
aaa
aad
loope
cmp
mov
mov
outsl
loop
jb
les
call
or
cmp
clc
sub
fldenv
shl
dec
pop
pop
shlb
or
lods
cmpsl
call
out
lret
test
and
andl
jle
mov
or
and
fidivrl
adc
or
popa
mov
fwait
jecxz
pop
mov
xchg
sub
ret
fs
aam
add
idivb
rclb
push
cs
fcoms
aam
rorb
xlat
andl
cmp
jl
cwtl
loopne
fdivrl
pop
adc
lods
jge
sub
cs
jo
sbb
cs
sub
daa
movsbl
or
add
ss
std
sub
mov
add
mov
daa
push
sub
pop
cli
mov
test
sbb
lret
movb
and
cmpsl
pop
or
cmp
cmp
rolb
mov
lcall
xchg
movl
adc
fsubrs
adc
push
dec
shlb
pop
ret
xchg
dec
push
roll
stos
pop
mov
mov
scas
and
popf
pop
lds
loope
incl
mov
enter
cld
les
ret
outsl
popa
hlt
icebp
xchg
xor
iret
popf
push
les
jge
dec
sbb
xor
dec
es
add
inc
add
cmpb
iret
mov
sub
rolb
inc
ja
push
inc
mov
xor
jecxz
pop
pop
mov
add
cmp
je
pusha
imull
xor
mov
mov
in
mov
mov
clc
pop
add
mov
xchg
inc
push
add
sub
inc
mov
lods
push
sbb
clc
inc
loop
inc
or
xchg
jl
or
mov
lahf
pop
dec
mov
mov
incb
cld
inc
xor
decl
mov
mov
inc
mov
mov
cmp
jl
dec
clc
addl
int
mov
leave
sarb
sub
push
icebp
or
cmpb
mov
mov
add
or
lods
lods
add
push
mov
nop
and
dec
nop
add
or
cld
push
leave
push
subl
cmova
adc
pop
jmp
mov
mov
fwait
test
fmull
into
in
mov
inc
xchg
stos
hlt
mov
insb
into
jecxz
les
pop
add
mov
xor
push
mov
xlat
add
test
lret
in
sbb
pusha
in
enter
in
adc
push
int3
shl
in
sub
inc
sbb
es
pop
adc
inc
sahf
and
inc
push
enter
fisubrs
and
ja
push
ret
push
push
lahf
lret
push
scas
and
inc
adc
push
xlat
mov
mov
mov
push
mov
dec
mov
popa
mov
xor
hlt
shll
xor
and
adc
xchg
add
add
dec
rorl
orl
or
mov
sbb
push
dec
pop
loop
cmp
jge
jmp
mov
sub
sub
mov
jns
add
je
iret
xchg
add
push
fwait
call
mov
roll
jg
mov
ret
lea
cmp
xor
push
pushl
cmp
jbe
mov
sbb
push
mov
push
lods
add
add
xchg
stos
and
leave
or
mov
push
sbb
divb
add
mov
and
push
ds
jo
cmp
ljmp
jl
pop
jne
push
fsubrs
pushf
insl
test
rcll
push
cmp
push
push
pushl
jmp
push
scas
jp
add
mov
rorb
sbb
test
pop
ret
and
mov
orl
daa
sbb
adc
test
mov
mov
cmp
sub
fcomps
mov
xchg
xchg
jns
jo
hlt
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
xchg
nop
scas
add
leave
pop
or
sub
or
loopne
aad
add
cmpsb
leave
jne
into
fnsave
roll
and
mov
ljmp
inc
lea
sub
fcomps
mov
fdivl
jb
shlb
xor
add
adc
add
lahf
subl
mov
adc
int
sub
lcall
aam
loop
mov
mov
or
add
and
insb
mov
sbb
mov
scas
push
pusha
mov
jge
dec
mov
rorl
shll
out
test
jmp
push
cmc
push
cwtl
lahf
add
enter
fnstsw
sbb
call
mov
stos
cs
xor
fnstcw
adc
ss
add
in
mov
push
mov
psrlw
push
push
adcl
or
dec
fnsave
sbb
mov
xor
scas
sbb
mov
jmp
dec
scas
scas
cmp
dec
cmpl
lods
ret
shlb
stos
jle
or
add
insb
ss
scas
add
push
aam
push
or
pusha
and
add
mov
stc
mov
shr
xchg
adc
sbb
or
rdmsr
jle
out
fdivl
mov
je
jg
mov
les
aaa
sbb
jge
dec
jbe
adc
mov
xor
scas
mov
das
add
push
and
add
out
mov
mov
fcoms
dec
fwait
movl
aaa
inc
jb
idivl
push
rcl
mov
and
cmp
adc
mov
cmp
pop
fdivl
cmp
add
leave
add
or
sub
add
and
mov
sub
xlat
or
push
pop
je
add
bound
cltd
pop
or
mov
cmp
loope
xor
popf
push
pop
mov
insb
fstl
or
jl
mov
mov
sub
jge
mov
mov
sarb
xchg
pop
fbld
fsubl
fnsave
out
int3
or
jmp
push
pop
cmp
pop
aas
gs
inc
imul
lret
mov
adc
jp
aad
xor
push
jmp
ret
inc
xchg
pop
aas
jmp
push
sbb
and
mov
loopne
aas
lret
dec
or
pop
push
push
push
rolb
mov
cmpb
fcmovne
jne
push
and
cltd
push
jmp
pop
jo
add
scas
scas
push
pushl
jge
iret
shrb
cmp
pop
sub
fdivr
sahf
add
sub
cmp
pop
push
sbb
mov
cmp
pusha
mov
mov
lcall
shrb
nop
data16
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
addr16
inc
pop
leave
sub
push
xchg
rcrl
or
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
jo
in
push
call
cmp
sbb
push
jp
jmp
add
inc
call
mov
inc
rorb
js
rcrl
xchg
enter
sub
faddl
addb
shll
jp
testb
add
or
icebp
inc
jle
or
pop
xchg
pusha
xchg
xor
add
add
out
pusha
jo
clc
popa
repz
rcrl
out
pop
jmp
xchg
jb
cmp
mov
adcl
inc
push
leave
pop
cmp
jl
in
or
xor
cmpsb
nop
lcall
xor
lret
xor
add
xchg
lret
sbb
test
sub
daa
and
and
ds
and
xor
jge
jae
inc
mov
cmp
fbstp
pop
jmp
cmp
jge
dec
sub
icebp
into
adc
nop
pop
bound
pop
sub
xchg
addr16
fidivl
adc
or
sahf
mov
push
daa
test
dec
xor
test
arpl
add
sbb
adc
and
das
pusha
loope
movaps
xchg
or
sub
push
cs
or
sbb
addb
pop
pop
mov
movsb
mov
dec
and
rolb
xor
cmp
sub
lds
bnd
add
add
or
ss
inc
adc
mov
dec
cwtl
or
pop
pop
fsubrs
mov
pop
sub
in
sub
ja
add
lods
sarb
mov
mov
add
mov
dec
jne
mov
and
lods
dec
cmp
outsb
shlb
jne
xchg
inc
nop
cld
jg
push
xor
xchg
testl
inc
imul
sub
iret
mov
daa
pop
inc
mov
xor
movsl
mov
and
jnp
mov
pop
adc
adc
inc
adc
scas
and
jne
xchg
inc
test
lret
pop
adc
push
ret
sbb
movsl
push
adc
xchg
dec
call
icebp
popa
popa
jnp
cmp
daa
icebp
lods
jb
mov
xchg
fiaddl
inc
push
jmp
dec
jnp
push
and
test
mov
inc
mov
js
xchg
imul
movsb
ret
fisubrs
shlb
cwtl
fadds
ret
dec
push
mov
mov
mov
insl
subl
cwtl
sub
iret
adc
or
jp
or
fildll
cs
inc
rorb
imul
pop
test
inc
add
aaa
popa
pop
popa
andl
xorl
add
adc
push
stc
pushl
loope
jo
push
add
ret
iret
mov
add
popa
lahf
xchg
dec
fsubrl
and
fcompl
adc
and
jmp
lods
movsb
sub
mov
jmp
add
dec
roll
fildl
lret
or
adc
mov
sub
ret
sbb
sbbb
mov
outsb
mov
lea
iret
mov
popa
rcl
div
sbb
xchg
hlt
push
pop
les
push
push
stos
or
mov
and
push
es
inc
movsl
or
pusha
ficoms
fchs
imul
inc
cmp
jb
dec
cmp
mov
inc
inc
js
xor
aaa
popa
push
ret
imulb
cwtl
enter
and
pop
mov
lcall
mov
stos
or
pop
adc
imul
mov
loopne
stc
mov
icebp
mov
negl
lret
jmp
add
mov
fistpll
scas
mov
mov
filds
or
mov
lock
addr16
je
cmp
jne
mov
sbb
add
or
push
inc
mov
jmp
dec
mov
dec
xor
push
cmpsb
push
jmp
mulb
adc
je
testl
jnp
sbb
cld
cmp
jbe
loopne
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
test
mov
cmp
cwtl
orb
clc
mov
in
inc
jo
cmp
mov
dec
sbb
add
adc
add
pushw
fadd
lods
rolb
xor
test
mov
dec
cld
inc
popf
fmuls
pop
cmp
add
sti
cmp
dec
neg
add
cmpb
bound
pop
les
clc
je
cwtl
shrl
fdivr
jb
and
insb
mov
sub
mov
out
inc
or
add
loope
xchg
push
lods
inc
cld
mov
jp
shlb
sbb
pop
mov
pop
xchg
pop
jmp
loopne
jne
inc
in
inc
stos
mov
in
xchg
mov
lds
mov
data16
je
inc
add
jae
xor
add
shrb
ror
add
shl
add
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
adcb
adc
push
das
pusha
shll
call
mov
mov
mov
mov
and
cmp
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
cmp
std
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
sbb
sub
or
and
add
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
fsubr
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
add
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
loope
shlb
inc
call
aam
inc
mov
push
fcom
ret
mov
pop
push
test
es
ret
add
scas
sbb
mov
dec
mov
test
xor
loop
pop
ret
addb
sahf
mov
pop
push
imul
adc
inc
inc
xchg
mov
jg,pn
fistpll
aas
cmp
addl
and
jbe
push
push
fs
cmp
int
cli
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
add
push
out
add
mov
and
pop
xor
out
ds
mov
das
mov
pusha
xchg
rolb
xor
ret
xor
inc
divb
push
andl
pop
data16
xor
notl
cltd
ss
push
aaa
jp
inc
adc
daa
mov
or
test
jb
in
insl
inc
sbb
iret
ret
cmp
scas
es
pop
push
movl
push
adc
dec
or
push
cld
cmc
pushl
push
lahf
test
xorb
push
add
push
ss
sub
fucomip
adc
inc
xchg
push
mov
mov
sbb
xor
mov
xchg
pop
mov
les
test
push
cmp
popf
sub
xor
add
push
add
outsb
je
pushl
cmp
pop
ja
mov
mov
cmp
outsb
fsubr
cmovnp
mov
adcl
fisubl
roll
add
lcall
pop
psubd
push
pop
fisttps
xchg
and
mov
rcrb
cmp
and
pop
push
inc
fidivl
jl
rcrb
fbld
jbe
popf
mov
das
push
cmpl
stc
gs
add
inc
inc
fwait
cmp
movsb
or
jo
imul
mov
std
xorl
push
cmc
or
mov
push
movsl
xchg
loop
lock
add
xchg
sbb
mov
clc
pop
je
test
dec
xlat
loopne
rcll
jmp
xor
dec
inc
xor
rorl
xchg
insl
bound
sub
lods
xchg
and
push
push
dec
mov
and
cld
pop
shll
ret
or
push
fdivrs
icebp
in
clc
mov
cmpsb
mov
movq
pusha
addl
cmp
sbb
inc
push
in
mov
adc
push
or
add
sahf
sbb
mov
push
aaa
pop
adc
pop
jae
clc
push
add
cmp
push
xor
xchg
add
lods
xor
xorl
fisubrs
push
ret
or
sti
pusha
jb
loopne
mov
decl
sbb
mov
daa
pushw
push
rorb
jecxz
in
mov
mov
xchg
stos
sti
cmp
out
mov
adc
inc
jo
inc
push
add
inc
js
clc
sub
cmovb
sbb
bound
mov
push
movb
push
popf
scas
in
lock
test
xchg
addl
addb
xchg
xchg
add
rcll
rcrl
sub
jle
push
or
pop
mov
loope
fstpl
xor
or
xchg
pop
xchg
jbe
test
xor
sbb
add
ss
push
adc
sbb
and
icebp
leave
repz
faddp
jne
rol
push
loopne
inc
or
push
lea
mov
sahf
push
rcrl
sub
ficomps
cmp
add
add
xchg
and
mov
add
ds
cwtl
mov
mov
dec
push
lods
or
int3
pusha
push
cmp
push
push
lret
xchg
mov
push
jne
dec
aad
ds
cli
xor
insl
jnp
das
in
jmp
cmp
das
js
lret
dec
js
cmpl
outsb
fidivrl
andl
aas
sub
push
fildl
pop
fcmovu
inc
cs
xchg
add
push
idivl
je
fstps
cmp
pop
add
push
inc
mov
or
jne
icebp
jge
fstpl
adc
cmp
sbb
sbb
and
add
jp
add
push
outsl
cmpsl
loope
mov
push
cmpl
inc
push
out
push
shl
dec
cmp
adc
push
fs
rcll
push
mov
inc
add
adc
jnp
pop
mov
pusha
fsubr
cmc
xchg
jne
mov
icebp
cmpsl
and
fnstenv
xchg
fsubs
xchg
xor
xlat
push
mov
je
cmp
push
pop
jne
aam
insb
add
cmpsl
jne
push
cmp
imul
jne
pop
call
sbb
mov
inc
lea
scas
insl
in
jl
push
mov
in
jne
jmp
sbb
mov
outsl
fdivs
adc
loope
mov
iret
and
jne
shr
cmp
pop
lea
fldl
add
je
pop
in
xchg
arpl
subl
mov
add
je
imul
repz
jmp
pusha
mov
int
sub
movsb
push
add
sbb
sub
leave
daa
pop
test
xlat
xchg
mov
repz
sub
decb
adc
cmpl
andb
popf
shlb
xchg
mov
mov
sbb
movsl
or
fs
jo
subps
or
inc
bound
ja
sbb
pop
popa
add
and
fwait
ret
push
add
test
ret
lahf
in
add
push
jle
sbb
std
push
mov
addl
loopne
repz
movsl
aas
add
fsubs
or
inc
arpl
xor
add
xchg
pop
pop
out
push
popa
xchg
sub
loopne
adcb
xchg
xlat
push
push
push
push
cs
lret
in
pop
pop
pop
pusha
adc
pop
pusha
or
cmp
pop
jo
lea
aad
push
loopne
addb
rolb
xor
mov
mov
dec
nop
pop
js
insb
fisttps
dec
and
push
leave
clc
mov
aaa
ds
push
aas
jmp
push
les
lcall
adc
push
adc
push
add
adc
in
push
or
inc
adc
add
adc
xor
push
lahf
ljmp
stos
sub
jle
insb
or
stos
nop
decl
add
daa
mov
xor
mov
je
pop
in
xorb
ljmp
or
xor
or
xchg
js
mov
lret
cli
jp
push
push
aaa
icebp
or
or
scas
stc
sub
enter
or
dec
mov
sti
and
add
and
mov
frstor
or
test
push
pop
gs
loope
jle
lods
push
and
jbe
cmc
lods
sti
sbbb
popf
lock
insb
lods
in
push
xor
sti
es
sti
jo
or
shlb
pop
movsl
cmp
mov
pop
mov
sub
dec
or
iret
adc
popa
test
sbb
ffree
ret
xor
daa
pushf
test
lret
je
xchg
in
cld
outsl
add
push
mov
je
mov
cmp
jne
sbb
add
adc
in
mov
fimull
incl
fstps
adc
adc
xchg
inc
orb
addb
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
cs
pop
dec
cs
push
mov
sub
mov
sbb
pop
add
inc
adc
js
clc
std
xchg
arpl
gs
inc
fcmove
sbb
jbe
push
adc
adc
pop
je
aam
jae
popa
add
lcall
call
add
hlt
cmpsl
lock
cmp
jne
or
call
sub
cmp
inc
enter
adc
movsl
mov
sbb
nop
iret
sti
dec
mov
je
or
daa
mov
or
int3
jae
aad
dec
aas
js
bound
and
pop
mov
adc
add
incl
cmp
sbb
inc
push
push
add
push
jne
mov
lods
sub
pushw
mov
pop
mov
subb
test
mov
imul
das
cltd
hlt
cmpsb
int
cld
sti
outsb
out
cltd
mov
pusha
je
divb
push
cli
insb
adc
imul
push
inc
add
inc
adc
jne
sbb
mov
push
clc
popa
imul
mov
push
xchg
rorl
inc
hlt
add
lock
hlt
dec
cwtl
lock
je
mov
mov
outsl
add
mov
inc
mov
je
jg
hlt
cmp
ljmp
pop
mov
enter
pop
sub
xchg
lcall
and
inc
sbb
mov
iret
mov
dec
jecxz
mov
jg
popa
or
mov
and
cmp
adc
int3
push
xorb
push
sar
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
xchg
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
addb
stc
das
je
add
sbb
ret
stos
jle
out
adc
mov
add
pusha
scas
xchg
push
add
cld
jns
add
push
aaa
xor
lock
and
mov
sbb
fsubl
fsubl
and
test
add
or
sbb
adc
sarb
lcall
adc
pop
pusha
imul
mov
dec
pop
push
test
pusha
add
mov
je
adc
leave
and
bound
adc
add
inc
out
pop
adc
clc
jmp
sub
mov
xchg
cli
push
push
push
popa
stos
sbb
and
in
inc
rol
or
xchg
add
imul
mov
adc
and
push
add
scas
cld
add
jo
jo
sub
add
sbb
sbb
mov
orb
gs
inc
xor
xor
stos
pop
pop
sbb
dec
dec
dec
jne
loopne
and
jns
sbb
in
nop
jp
jmp
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
es
ficoms
int3
jl
out
stc
xor
inc
shlb
and
add
iret
in
fcoms
neg
inc
call
and
loopne
sbb
pop
push
shlb
jnp
xor
mov
pop
jl
repz
push
pop
mov
sub
jo
sub
adc
push
pop
out
xlat
push
insb
mov
ljmp
dec
sub
fs
or
adc
cmc
daa
dec
ret
inc
mov
sar
cmp
jl
jmp
pop
orb
and
sbb
add
gs
movsb
mov
aas
mov
add
repnz
addr16
movl
sbb
sbb
push
xchg
ror
mov
jne
push
test
imul
sbb
dec
sub
jge
and
xchg
add
or
int3
add
mov
add
cmp
push
jmp
add
push
inc
xchg
lods
dec
clc
inc
push
xor
sti
call
jns
and
inc
ds
lret
push
push
xor
adc
mov
jne
jmp
testb
push
adc
in
mov
imul
push
es
add
dec
imul
or
aas
ret
pop
pusha
dec
cmpsb
or
dec
je
xchg
loope
nopl
mov
sbb
push
or
stc
xor
mov
aas
in
sbbb
fs
sbb
call
push
cmpsl
adcl
call
push
dec
mov
rolb
sbb
lods
xchg
adc
inc
call
movsb
notb
scas
add
xlat
mov
or
inc
negl
jae
sbb
popa
pop
leave
cli
imul
stc
cmp
js
fisttps
pop
push
push
js,pn
or
icebp
jle
ja
push
inc
and
adc
push
loopne
ljmp
inc
dec
cmp
in
popf
orb
xchg
aad
mov
xor
andl
pop
jge
add
jle
jne
or
pop
xchg
mov
dec
nop
push
add
cmp
outsl
call
add
xor
mov
or
xlat
movl
inc
sub
iret
jno
ja
cmpsl
mov
add
iret
add
clc
mov
repnz
dec
inc
pop
into
cmp
inc
stos
push
movsl
or
loopne
push
pusha
xchg
mov
cmp
inc
data16
xchg
nop
add
ljmp
pop
iret
mov
mov
dec
cmp
insl
mov
sbb
pop
movsl
lock
dec
loopne
ret
and
stos
or
inc
mov
fstps
andb
pop
or
fisttps
sbb
adc
mov
and
jbe
lret
repz
xor
scas
sub
sbb
xchg
or
loopne
mov
imul
push
inc
push
mov
cld
sbb
mov
and
mov
stos
test
rcrl
shrb
or
jbe
jb
pop
scas
lods
sub
stos
sub
pop
in
adcb
lock
insb
rcll
data16
gs
ds
mov
adc
cmp
cs
subl
sub
adcb
iret
or
adc
pop
adc
fs
cmp
dec
out
pop
add
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
jo
cmp
adc
jbe
push
and
jbe
jp
xlat
mov
push
pop
sbb
sbb
icebp
xchg
gs
sbb
sbb
add
mov
push
pop
cmpb
mov
and
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
or
popf
and
icebp
inc
add
aam
lock
cmp
add
mov
out
gs
push
arpl
add
cmp
lock
dec
jo
dec
movsl
cmp
jnp
push
push
ret
lock
jnp
pop
sub
loope
or
repnz
mov
faddl
push
insb
out
mov
mov
pop
pop
sbb
jns
cmp
or
or
out
adc
cmp
mov
outsb
rcrl
cmp
or
dec
jge
cmpsb
dec
in
fnstsw
outsl
aaa
xor
fs
test
adc
fsubl
rorb
xchg
bound
sbb
adc
out
call
shl
das
push
jge
add
outsb
sbb
dec
xorl
idiv
or
clc
add
push
aam
xchg
and
loopne
cld
test
pop
movl
lods
xchg
dec
adcl
movsl
dec
xchg
addl
dec
cmp
or
and
inc
sbb
push
and
mov
test
orb
inc
les
or
xchg
test
ficomps
inc
sbb
fiaddl
and
fmul
mov
jp
xchg
push
insl
call
sbb
mov
and
loopne
mov
and
sub
shl
mov
fldt
inc
jo
push
dec
cli
lcall
sbb
pop
mov
mov
inc
in
mov
add
sbb
clc
jnp
inc
cmp
inc
or
xchg
fldenv
inc
inc
or
and
sbb
jbe
jbe
negb
push
enter
push
sub
mov
aam
mov
and
push
inc
jp
int
adc
adc
aas
jae
pop
loopne
xchg
scas
push
push
adc
xchg
adcl
les
sbb
xchg
inc
movsb
test
pop
mov
fstl
mov
sbb
mov
or
sbb
sbbl
push
jnp
jo
jmp
jge
adc
je
fildll
sbb
rolb
inc
cmp
int3
push
mov
pop
pop
fwait
lods
repz
push
cmpb
push
add
push
cltd
and
call
mov
data16
lock
xchg
in
lea
push
cmpl
into
push
adc
rol
and
and
or
sahf
subb
pushf
inc
push
cmpl
jne
push
mov
sbb
and
mov
insl
test
insb
and
sbb
pop
ss
pushf
dec
pop
pop
xchg
pusha
push
mov
inc
lods
add
dec
lods
or
fcmovu
push
xor
dec
push
push
lds
sti
push
xor
cmp
test
cmpsb
xchg
dec
cltd
or
shlb
xchg
jb
adcb
or
xor
and
dec
shl
pop
sub
push
movsl
push
mov
insb
or
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
shll
jge
bound
jbe
sbb
and
adc
cmp
lcall
fildll
fcoms
data16
mov
mov
jbe
adc
sub
dec
test
jle
pop
add
clc
icebp
pop
mov
cmp
inc
loopne
outsb
mov
les
add
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
push
add
data16
xchg
je
xchg
fidivrl
shll
adc
xor
and
mov
sub
mov
mov
orl
mov
cmp
jne
cmpsb
test
or
push
sbb
fsubr
adc
adcb
or
movsb
push
dec
xchg
sbb
insl
test
je
add
mov
addl
adc
and
add
les
cli
or
add
and
dec
mov
fisubrs
push
cmp
fs
and
mov
cmpl
insb
jl
jle
iret
jmp
mov
mov
cwtl
jo
faddl
mov
sbb
add
or
cltd
sbb
inc
fwait
pop
lock
jne
popa
mov
ret
jo
pop
sub
jg
movsb
cltd
cltd
xlat
push
or
mov
lahf
xor
jmp
push
mov
lcall
push
adc
ljmp
mov
jle
sbb
fs
push
js
mov
lock
sbb
mov
lods
daa
and
mov
pop
test
lods
out
aaa
cmc
jge
movsl
in
pop
mov
xchg
jne
inc
loope
adc
popf
mov
mov
push
xchg
mov
and
push
add
in
or
sbb
ret
mov
sbb
shl
or
mov
insl
adc
sub
cmp
rclb
lock
sbb
sub
add
dec
imul
pop
or
out
add
adc
dec
xor
inc
jno
pmaxsw
sarb
aaa
cmp
jb
jnp
adc
mov
inc
push
xlat
dec
add
sahf
jbe
je
mov
xor
sub
xor
or
jp
cmp
mov
push
pop
cwtl
jmp
jae
push
js
jle
ds
xchg
push
pop
mov
sub
add
out
xor
aam
dec
add
add
inc
pop
lret
cwtl
jp
xchg
lea
cmp
mov
lret
sbb
imul
add
adc
xchg
out
mov
push
sbb
jne
int3
mov
cmp
je
push
sub
mov
adc
shr
add
lods
cmp
loop
xchg
movsl
dec
adc
push
xchg
je
test
ret
imul
xor
adc
add
mov
and
popa
pusha
adc
in
out
mov
imul
ds
mov
inc
dec
cmp
rorl
outsl
sub
js
sbb
popa
pusha
sub
aas
mov
aam
mov
enter
adc
jo
xor
pop
enter
dec
es
xor
gs
adc
adc
pop
and
mov
mov
clc
push
push
pop
sub
out
cmp
inc
xor
mov
out
and
ret
add
lods
in
or
xor
test
push
or
mov
pop
stos
fwait
inc
repnz
push
inc
sub
jo
cmp
lods
mov
cmpl
sub
test
cs
mov
mov
mov
inc
and
das
jmp
cmp
jmp
add
jle
jae
cmp
bound
mov
adc
call
add
fmuls
movsb
cmpb
adc
push
in
mov
inc
xchg
movsb
stc
mov
cmp
ljmp
fists
jnp
adc
adc
sub
jo
pushf
out
or
xchg
rorb
cli
push
add
xor
add
sbb
aaa
cmpsb
pushf
imul
jne
leave
popf
dec
adc
movb
pop
mov
addl
sbb
popf
and
sbbb
add
lret
pop
inc
ss
add
lea
sti
or
xchg
repz
push
cmpsb
icebp
pop
xchg
test
jno
jne
pusha
test
dec
fdivrs
push
mov
inc
add
call
bswap
mov
addr16
test
insb
aam
jnp
mov
and
mov
inc
or
xchg
xor
push
pushf
repz
js
int3
mov
sahf
xor
dec
cmp
adc
lea
xchg
push
mov
and
cmpb
out
add
xor
mov
push
movb
xor
pop
jne
pop
into
fisubrs
sbb
mov
mov
rorl
mov
icebp
imul
mov
jge
pop
sti
push
push
cmpl
xor
jno
loope
xor
cmp
cmp
inc
jl
cmp
jg
cmc
outsl
sbb
add
test
jmp
loop
mov
xchg
add
dec
push
je
or
movsb
push
clc
sbb
cmpsl
mov
sub
mov
sbb
insl
sbb
loopne
ficompl
jge
hlt
sbb
ret
add
popa
or
jmp
add
xor
sub
sub
sbb
ret
mov
mov
mov
jb
push
add
cltd
adc
add
push
inc
scas
push
shlb
enter
push
push
add
movl
jle
or
xlat
cmp
add
mov
push
adc
pop
dec
and
popl
jl
mov
test
and
inc
push
or
mov
addl
push
movsl
lahf
insb
cmp
jge
dec
push
mov
mov
mov
push
add
jno
jl
or
int3
jno
jecxz
pop
out
fildll
es
shrb
xor
mov
lcall
mov
lea
shrb
mov
and
addr16
icebp
inc
push
or
inc
out
loope
std
call
repnz
sbbl
jae
pop
dec
jmp
add
aaa
add
mov
inc
test
rolb
push
or
into
xor
ja
push
jg
jb
add
pushf
inc
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
or
mov
or
add
dec
or
and
mov
rorl
aas
mov
push
int
inc
jmp
stos
lock
pop
std
and
mov
inc
icebp
sbb
andb
adc
inc
dec
push
pop
inc
jmp
fimuls
sbb
psubw
mov
popa
mov
sub
sub
xchg
add
jmp
mov
std
add
ret
outsb
sub
jo
mov
push
add
dec
and
pop
imul
xchg
pop
push
cmpsb
pop
adc
sbb
or
mov
cli
rcl
cmpl
pop
cmp
pop
cmp
jge
inc
fs
push
pop
xor
or
fs
push
mov
sbb
dec
fisttps
js
inc
push
imul
rclb
orl
jmp
scas
hlt
mov
jns
pop
sbb
lods
mov
mov
adc
push
stos
add
push
loop
int3
andl
lea
lods
insl
dec
inc
mov
mov
cmp
pop
insb
or
and
outsb
dec
mov
cltd
pushf
mov
roll
sub
mov
test
jecxz
xor
shll
test
inc
pusha
lahf
in
mov
push
jns
sub
orb
rcrl
daa
mov
and
adc
inc
xchg
and
adc
add
mov
mov
ljmp
pop
clc
or
dec
cmp
lcall
and
push
xor
sub
cltd
repnz
filds
mov
or
nop
xor
dec
and
pop
jmp
or
outsb
dec
cmp
out
pop
rolb
pop
add
push
jecxz
or
pop
movsb
and
dec
bound
or
lahf
mov
sbb
movsl
add
xchg
movsl
jbe
inc
cmpsl
mov
enter
loope
rcrb
stos
push
push
fmuls
push
push
aad
scas
sub
cmp
inc
js
pusha
mov
add
xor
push
dec
cld
adc
push
imul
mov
jmp
or
push
aas
repz
fs
jmp
movsl
add
adc
ret
lret
or
ret
cmp
mov
or
insb
or
push
rol
sub
je
dec
inc
xchg
ja
xor
les
notb
test
mov
pop
imul
test
rcrb
push
mov
pushf
xor
idiv
jae
lea
jmp
cmpl
sub
shll
mov
push
and
push
test
push
pop
and
aam
scas
movsl
add
mov
jmp
sbb
inc
xchg
xor
in
mov
add
sbb
inc
add
xor
dec
xor
imul
lds
cmp
sub
cld
and
push
flds
aad
lcall
ljmp
add
lret
push
inc
loopne
mov
inc
xchg
ja
mov
push
arpl
xchg
mov
add
jb
cmp
add
inc
add
fwait
sbb
scas
loopne
ja
or
dec
lods
pusha
cmp
adc
inc
inc
xchg
pop
add
xchg
pop
bnd
xchg
cmp
jnp
lea
movsb
inc
stos
xchg
test
mov
scas
out
daa
adc
cmp
dec
jo
xchg
movsb
mov
cmpsl
roll
dec
idiv
loope
cmp
xchg
mov
mov
mov
insb
cltd
jecxz
inc
push
sub
push
icebp
jl
and
push
jno
sti
push
je
cwtl
xchg
test
inc
adc
sbb
mov
loopne
in
iret
xchg
js
cmp
stc
xchg
and
sub
or
mov
cmp
pushl
xchg
test
or
fmull
pop
mov
add
in
fs
push
popw
dec
jb
outsb
int
fimuls
jmp
xor
mov
je
cmp
stos
psadbw
pop
mov
sbb
or
mov
push
addl
mov
sti
je
and
dec
adc
add
xchg
cmc
std
enter
cmp
pop
adc
add
nop
dec
sub
pop
add
je
jp
mov
mov
push
inc
mov
dec
sbb
push
pushf
or
jae
push
xchg
sbb
push
inc
outsl
adc
jl
and
sub
dec
mov
popa
or
popa
jo
adc
xlat
subb
xor
add
in
dec
xchg
testb
adc
les
ffree
jnp
push
push
adc
pop
inc
mov
mov
cmp
dec
or
or
jo
ljmp
cmp
cld
je
test
dec
mov
jns
data16
jne
mov
test
push
push
test
cmp
dec
shrl
xchg
and
cmp
addb
stos
les
pop
mov
repnz
inc
mov
mov
dec
mov
hlt
hlt
iret
popa
in
jns
or
adc
mov
or
pop
cmp
add
add
mov
cmp
call
or
inc
sbb
add
js
jle
mov
loopne
fnstenv
fadd
inc
or
mov
lret
push
cwtl
push
in
cld
fadd
dec
inc
mov
scas
out
test
scas
xlat
or
add
ljmp
inc
inc
in
pop
ljmp
pop
lock
clc
scas
lea
fadds
pop
sahf
lret
in
pop
pusha
push
xchg
adc
or
hlt
neg
sbb
and
bnd
mov
mov
push
sub
push
adc
insb
les
add
mov
add
or
add
movsl
mov
dec
out
inc
jnp
cmp
and
lock
fstpt
cmp
ret
push
je
push
dec
xchg
cmp
mov
sar
ret
rolb
jne
cmp
jbe
or
clc
in
adc
cmpsl
ret
add
jle
xor
mov
ds
data16
test
xchg
popa
jo
call
mov
orb
jno
cld
js
xchg
or
testl
mov
jp
sbb
or
int
cmp
sub
rcrl
or
scas
jne
cmp
loope
sub
pusha
or
adc
lea
adc
dec
xchg
xchg
dec
jg
xchg
push
bsr
add
adc
sbb
xor
sub
dec
rol
jo
or
pop
adc
repz
and
jo
ss
nop
loop
mov
jnp
sbb
pop
les
out
push
test
inc
bound
jno
lret
out
push
lret
xchg
mov
in
out
cmp
cmp
adc
std
mov
push
xchg
and
cmp
dec
or
fildl
das
cmp
out
mov
inc
adc
push
int
adc
mov
push
loopne
mov
cli
jae
andl
leave
ret
mov
and
or
call
pop
or
pusha
ds
jne
inc
add
push
or
lea
incb
int3
sub
cmp
lods
std
int3
cmp
enter
sbb
in
gs
jg
xor
or
cmpl
xor
xchg
push
add
xor
push
mov
loopne
pushf
out
aad
inc
adc
sbb
push
loopne
sbb
pop
xor
xor
and
clc
mov
sub
mov
mov
xor
adc
fisttps
xlat
lret
or
popa
and
mov
movl
xchg
xchg
insb
js
idivl
fistps
inc
cmp
jae
add
dec
mov
push
cmp
or
shrl
cld
push
ret
xor
sub
out
adc
and
pop
mov
xor
cmp
mov
jae
mov
nop
xchg
mov
jo
xor
pop
or
and
addr16
nopl
dec
jp
add
and
aas
dec
lock
cmp
add
or
push
js
jl
cmc
mov
xor
mov
add
xor
cmp
xchg
push
pop
push
popf
or
or
push
mov
sub
out
jb
je
sbb
push
ret
mov
ret
mov
inc
sbb
and
popa
arpl
inc
in
mov
ds
mov
je
addr16
sbb
sbb
mov
add
push
dec
mov
and
and
fstps
cld
adc
jmp
fimuls
inc
jle
cmp
mov
movsl
fsubl
pop
imul
jge
sub
jmp
jmp
packsswb
mov
je
or
xor
rcrl
xor
leave
xor
and
fcmovnb
add
jnp
movsb
mov
cmc
add
and
roll
and
lock
cmp
mov
gs
push
and
pop
xchg
mov
mov
xchg
inc
shrb
and
pop
sub
push
lea
and
or
xchg
inc
sub
dec
xor
add
jo
gs
outsl
push
and
rcr
mov
sbb
insl
je
lret
add
push
mov
outsl
push
std
clc
mov
xor
out
ret
imul
out
push
aam
add
cmp
fdivs
fsubs
popf
sbb
fsubl
sub
cld
adc
jle
dec
mov
mov
push
or
popf
popf
test
adc
mov
roll
xor
and
push
fisttps
movsb
or
pop
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
pop
pop
in
mov
mov
mov
mov
or
or
sub
cmp
sbb
mov
in
or
xchg
xor
sti
xor
jae
jb
mov
adc
mov
sbb
mov
jp
pop
lea
filds
sahf
add
outsb
shrl
test
sbb
add
popf
pushf
mov
or
imulb
and
mov
or
sbb
pop
je
dec
adc
loopne
xchg
push
jae
lea
ja
cmpb
sbb
aas
or
or
out
js
sub
addr16
jo
jbe
pushl
pop
xchg
add
stc
fcompl
or
push
sti
mov
add
dec
pop
mov
lea
out
sbb
sbb
push
sub
pop
or
pop
sbb
je
iret
lea
jno
cltd
fs
jae
subb
push
scas
xor
jae
leave
jmp
xchg
mov
sub
dec
and
push
iret
rorb
rclb
lods
orl
add
sbb
cmpsl
xor
jge
mov
mov
dec
xchg
xchg
xor
add
mov
imul
mov
mov
dec
insb
and
mov
dec
cmp
je
mov
push
add
rcll
jae
adc
inc
mov
sub
mov
pop
das
inc
inc
lahf
orb
sub
inc
push
lods
mov
rcl
mov
or
rdmsr
cmpl
cmp
xchg
aaa
lcall
or
mov
cmp
or
pop
adc
fisttps
mov
nop
and
jo
rorl
or
fsub
add
or
add
xor
xor
ret
sbb
insb
xchg
fs
lahf
mov
nop
testb
rol
mov
mov
mov
cli
cmp
push
lea
cmpsl
adc
dec
or
gs
addl
mov
mov
repz
out
pop
gs
cmpsl
add
add
xchg
xor
inc
and
and
movsl
lock
sbb
shrb
push
add
je
jg
iret
adc
inc
sub
inc
jmp
push
xchg
or
add
pop
jmp
les
orl
dec
add
cmp
hlt
imul
jo
jmp
or
dec
pushl
and
cmpsl
add
repnz
rol
sub
mov
mov
and
adc
js
dec
jo
jge
ret
push
jae
lea
push
sub
jne
mov
sbb
ret
push
lsl
pop
stos
filds
or
dec
pop
ret
mov
push
or
dec
ss
sub
cmc
sti
xor
sbb
jge
cmp
pusha
stos
fcompl
cmpb
xor
fnstenv
inc
jmp
push
cmp
push
jb
out
cmp
sub
popa
inc
mov
mov
lea
cmp
adc
lock
dec
mov
enter
test
mov
pop
sbbl
fdivs
sub
movsb
repnz
push
sub
out
push
sti
sbb
add
add
das
lods
mov
out
insb
testb
lods
sub
sub
testb
sub
in
lock
pop
xlat
rorl
ds
shrb
aam
jne
mov
mov
popa
rorb
or
add
out
cld
push
test
test
repnz
lea
ret
push
test
js
pop
lret
popa
sbb
xor
and
in
pop
test
jmp
push
inc
or
and
mov
test
adc
cltd
push
stc
push
setne
jp
shl
cld
or
je
xor
jge
cmp
mov
cmp
lds
inc
sub
lret
ljmp
ds
mov
jo
hlt
fimull
and
push
mov
cmp
sub
sbbl
ds
or
ret
pop
xchg
fs
ss
xor
sbb
and
clc
jne
jno
imul
push
dec
or
imul
jbe
inc
add
test
add
stc
popa
imul
out
and
imul
imul
imul
mov
add
sbb
repz
movsl
pop
dec
js
pop
pop
in
movb
inc
xchg
scas
dec
xor
sbb
inc
or
push
xchg
mov
pop
mov
inc
add
add
pop
stos
mov
clc
adc
aad
mov
gs
add
inc
or
mov
pop
cmp
xchg
jmp
test
pop
jae
push
or
inc
pop
sbb
lret
pop
pop
sbb
call
out
add
add
cmp
or
xlat
xor
cmp
add
sbb
jcxz
imul
lods
mov
nop
xor
jbe
cmp
int3
loop
ret
push
pop
jns
xor
cmpl
or
mov
scas
xor
iret
sub
sub
push
add
sbb
nop
inc
dec
sbbl
fs
shlb
inc
sbb
movsl
adc
add
adc
pop
dec
xor
adc
cmc
cmp
add
add
cmpsb
loope
lret
lods
adc
sbb
jg
pop
add
push
ds
cmc
dec
pop
push
lcall
lahf
inc
mov
mov
inc
jge
inc
pop
cs
adc
inc
arpl
push
and
mov
test
outsl
insl
pop
adc
or
mov
dec
sub
fsqrt
addr16
sbb
push
test
add
fdivs
mov
dec
xor
inc
and
out
push
mov
sbb
mov
xchg
xchg
pop
sahf
xor
mov
push
mov
cmp
push
pop
xchg
pop
mov
lahf
mov
mov
mov
lods
ret
mov
and
push
dec
ja
xchg
push
mov
test
sub
push
push
mov
add
pop
push
xor
jnp
pop
pop
pop
lea
stos
push
clc
addl
adc
jne
lds
jne
push
lea
adc
dec
cwtl
cwtl
ret
ret
push
adcb
mov
icebp
test
add
or
sti
pusha
push
pop
enter
xor
mov
inc
mov
and
sub
adc
fimuls
cmpl
dec
or
adc
adc
push
out
mov
adc
mov
push
or
add
pop
pop
loope
dec
or
push
xchg
pop
mov
lcall
sbb
bound
push
les
loopne
sub
ret
push
jp
jno
in
sub
sbb
xlat
gs
mov
or
adc
and
das
xor
adc
push
lods
jnp
dec
dec
pop
addr16
push
iret
icebp
ficomps
mov
xor
sub
jne
adc
mov
jge
jmp
mov
ss
fiaddl
pushf
inc
adc
pop
fwait
cmp
xchg
cmp
mov
adc
xchg
jno
out
jo
mov
js
push
push
or
pop
pop
and
mov
fmulp
movzwl
test
ss
inc
je
test
xchg
popf
mov
push
jo
xchg
dec
rcll
pop
push
mov
repnz
xchg
sub
or
push
cmpl
push
or
orps
aad
cmp
jmp
pop
add
or
clc
push
push
rcr
insb
cmc
fidivrs
fdivrl
sub
push
rcr
fildl
adc
pop
xchg
mov
popf
add
and
jmp
fs
push
jecxz
lock
clc
loope
xchg
movsl
je
mov
loopne
dec
inc
jb
or
js
and
sbb
adc
xor
push
fstps
fadd
mov
in
pusha
rolb
lahf
pop
mov
dec
jmp
mov
arpl
into
push
and
out
call
pop
jle
mov
inc
jl
cmp
sbb
or
and
in
or
lock
pop
mov
out
aaa
cmp
push
pop
sub
aaa
dec
ja
add
out
pop
or
hlt
inc
rdpmc
leave
inc
stos
or
mov
movsb
mov
mov
jae
insl
loope
push
movsl
daa
lods
sub
outsl
mov
jp
push
mov
icebp
mov
cld
sbb
repz
clc
nop
jae
cld
mov
addr16
push
adc
cld
js
jae
pop
ret
cmp
sti
sbb
xor
pushf
and
and
or
pop
jno
out
push
fwait
int3
jne
test
loope
rcrl
pusha
jbe
jne
mov
sub
pop
fs
push
data16
clc
popa
ds
in
cmpsl
mov
sub
mov
adcb
lods
add
and
jge
mov
add
mov
mov
mov
sarl
scas
cmp
inc
adc
mov
out
pop
jecxz
and
ds
lods
sbb
inc
mov
into
sbb
gs
mov
lea
aam
xchg
mov
mov
and
sub
jg
dec
adc
sub
pushl
sbb
lock
sub
jg
sbb
push
jl
dec
add
inc
or
mov
push
cmp
mov
mov
cmpb
lock
pop
call
ss
insl
clc
scas
dec
in
dec
bound
push
cmpsl
sub
pop
push
dec
push
cmp
pop
sbb
incb
cmp
int
mov
fwait
xchg
cmc
adc
dec
pop
aad
bound
sub
mov
push
enter
into
jmp
mov
out
push
loope
rol
sub
xor
das
add
xor
scas
push
cmp
xor
xor
and
outsl
push
xor
subps
inc
pop
adc
daa
adc
jl
mov
inc
mov
imul
popl
int3
sbb
es
es
dec
mov
lea
pop
ss
adc
sub
dec
push
sarb
mov
or
add
sub
xchg
adc
shlb
inc
add
jmp
out
sbb
add
add
inc
mov
cmp
mov
sbb
in
xor
jg
pop
test
inc
mov
fsubl
xchg
xor
mov
adc
xchg
xchg
or
push
mov
inc
scas
push
cmp
push
xchg
adc
push
mov
je
outsl
adc
imul
cmp
das
sbb
add
sub
mov
push
sub
mov
adc
ljmp
in
sbb
imul
add
mov
gs
pop
insl
push
add
cs
bswap
loope
or
inc
push
xor
loopne
jp
jo
lret
cmc
or
mov
pushl
sub
enter
sbb
lret
push
dec
rclb
cs
add
rol
push
xchg
inc
in
mov
sub
mov
lahf
ja
sbb
cmp
lcall
push
xchg
push
dec
enter
mov
push
jecxz
add
pop
inc
adc
adc
add
mulb
push
lods
pop
loop
pop
adc
and
jmp
hlt
dec
mov
popf
les
xor
test
lret
adc
pop
add
movsl
rcll
jne
and
sub
and
popf
mov
or
and
stc
shlb
xor
jno
and
jne
sub
jne
mov
push
or
jne
adcl
std
jnp
xor
add
out
movsb
ljmp
repnz
lock
fists
lahf
cmp
out
add
mov
lea
and
jo
lret
or
add
clc
pop
or
stc
sbb
or
loopne
ljmp
push
cld
or
test
push
popa
inc
add
js
jecxz
daa
dec
pop
fst
pushf
mov
rorb
push
comiss
fimuls
stc
movsb
jmp
mov
jge
push
add
xor
sarb
sub
and
in
ret
ja
push
push
cmp
fidivl
xor
test
mov
adc
les
outsl
test
js
lods
or
mov
inc
push
sbb
mov
mov
loopne
dec
scas
lcall
inc
cmp
mov
cmp
or
enter
jg
push
loop
mov
call
daa
lea
pop
mov
in
rcll
enter
cmp
push
jmp
mov
dec
sub
insl
add
lret
shll
daa
mov
in
inc
mov
jns
loop
mov
rorl
add
and
and
rclb
andb
mov
cmp
xchg
rolb
inc
jne
dec
cli
or
pop
lcall
sbb
jne
add
mov
jne
push
push
je
xor
lcall
or
sbb
outsb
test
cmp
scas
jg
add
aaa
and
adc
inc
mov
pop
scas
ficoms
and
add
cmp
je
icebp
adc
or
jne
imul
int
mov
xor
fsubs
loopne
sub
and
imul
xchg
or
cli
testb
push
pop
into
fdivrl
jl
mov
rorb
xor
cmpsl
fidivs
js
out
ficoms
sbb
in
xor
arpl
cmc
push
mov
mov
fisubl
faddl
push
test
mov
mov
orb
sub
stc
insb
cld
and
adc
or
lea
jno
adc
sub
mov
jg
aam
push
mov
adc
daa
les
ds
sbb
enter
cli
inc
xchg
jge
dec
or
fwait
sbb
xor
pop
icebp
pop
sbb
cmpb
xor
add
sbb
mov
rcll
movsl
sti
loopne
stos
shrb
sarl
jb
mov
mov
add
andb
andl
dec
dec
add
imul
cmp
push
pusha
cmpsb
imul
add
or
pop
xchg
fsubr
jo
pop
rcrl
cwtl
or
push
jo
push
sti
or
mov
pop
xchg
dec
int3
xchg
shll
xor
addr16
scas
xor
mov
repnz
out
gs
add
loopne
nop
in
jle
movb
adc
mov
sbb
mov
pop
xchg
imul
fadds
sbb
sbb
push
fs
sub
sbb
idiv
add
adc
ss
inc
sub
in
push
inc
xor
dec
out
out
add
mov
push
pop
sbb
mov
icebp
pop
push
adc
push
mov
push
jo
les
mov
sbb
sub
push
sub
pop
adc
jnp
cmp
mov
xor
adcl
inc
fcoml
xchg
mov
jne
mov
push
es
dec
lea
add
xchg
add
stos
cli
xor
cmpb
or
add
add
int3
mov
cmpsb
mov
and
sbb
sarb
mov
push
ret
pushl
dec
mov
jle
push
scas
and
std
xchg
mov
xor
aam
adc
add
negl
repz
push
lahf
jl
dec
adc
dec
and
flds
sub
jl
test
add
shl
ret
or
inc
fimull
xchg
or
and
sub
add
je
das
push
xor
dec
and
das
xorl
mov
je
sub
jne
orl
fsubrp
inc
dec
adc
imul
push
pop
xor
pop
dec
test
jmp
and
xchg
add
test
outsl
pop
xlat
or
adc
das
call
sub
fldl
sar
es
push
lds
add
jle
stc
or
repnz
out
sub
out
add
imul
mov
les
mov
pop
jmp
roll
xchg
stc
push
jne
js
in
lds
mov
ds
jne
cmp
push
jl
sbb
cmp
imul
add
fwait
jl
ja
fwait
pop
inc
sub
hlt
cld
ja
xor
dec
mov
and
cli
sahf
loopne
mov
push
mulb
lock
or
jmp
sbb
int3
cwtl
jl
adc
sbb
into
dec
add
pop
push
push
inc
cmp
shlb
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
push
adc
add
add
int3
lahf
sbb
outsb
dec
dec
and
lods
aas
add
inc
dec
push
adc
push
push
pop
jns
push
and
pop
and
mov
xor
xorl
pop
xor
fstps
bound
dec
jecxz
lcall
fisubl
cmp
sbb
sub
je
in
push
mov
mov
lock
sbb
lea
xchg
sbb
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
outsb
or
les
xchg
xchg
inc
inc
lock
lock
jne
or
cmovle
mov
je
mov
or
fs
pusha
enter
insb
insb
push
push
jo
shl
xor
pop
pop
lds
test
adc
xchg
clc
cwtl
push
xchg
imul
pop
cmp
je
popf
add
orb
or
or
and
sub
out
push
loop
cmp
lea
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
insb
ljmp
popf
push
test
sbb
adcl
jp
fildll
sbb
lods
fwait
sbb
shlb
cmp
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
rclb
test
sub
sub
xor
sub
mov
sbb
inc
rorl
push
flds
pop
adcl
push
push
test
sbb
je
xchg
mov
aas
adc
pop
dec
imull
cwtl
loopne
test
pop
mov
cmp
lods
push
hlt
adc
jbe
bnd
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
xchg
outsb
jno
test
popa
loope
sti
add
inc
lcall
add
adc
std
jle
or
aas
jne
outsb
fmul
mov
add
add
stos
adc
or
or
cmp
fidivrs
ljmp
mov
lock
cmp
test
out
cmp
mov
insb
xchg
mov
push
out
inc
and
insl
pusha
mov
sub
lret
push
or
rorb
adc
pushf
fcoms
jo
mov
pop
mov
or
fdivl
add
lret
push
dec
popa
int
scas
push
fs
pop
jb
nop
xlat
sbb
mov
fs
arpl
pop
cmp
sbb
add
inc
fiaddl
and
xchg
sarl
inc
cmp
cmp
cmp
inc
cmp
add
jns
addb
cltd
ret
and
data16
movsl
scas
or
aaa
jb
sbb
mov
dec
test
cs
fnstcw
int3
mov
stos
push
js
xchg
and
test
mov
nop
shll
pushf
dec
sbb
stc
fcmovbe
movsb
sete
jmp
mov
andb
orl
lret
push
ret
dec
es
push
pop
aam
pushf
shlb
jmp
dec
in
adc
mov
cltd
push
and
or
pushf
es
loope
jns
sub
push
adc
xor
add
and
adc
jo
movsb
xor
mov
ja
lea
and
inc
push
cli
sub
ret
fwait
pop
fisubs
dec
xor
test
sub
mov
push
push
push
or
push
mov
adc
fiadds
mov
mov
sub
add
int
or
fmuls
loop
pop
mov
sbb
pushf
adc
mov
test
je
push
add
testl
pop
dec
xor
rolb
and
lcall
xor
xor
outsl
adc
dec
pusha
xor
mov
fnsave
or
sysret
sbb
add
sbb
xor
and
push
adc
out
adc
daa
rclb
popl
cmp
lock
xchg
jg
movsb
push
sbb
test
or
int
orl
xor
or
enter
jne
aaa
cmp
and
das
dec
sbb
fdivp
fsubp
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
inc
and
fimuls
cmpsb
divl
push
and
aam
in
adc
add
mov
repnz
pop
ljmp
loope
outsl
push
sub
push
aam
sub
dec
fbld
sub
inc
lcall
inc
jnp
jp
xchg
mov
or
pop
fstpt
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
add
je
cmp
test
int
rorl
sbb
push
adc
push
cmp
push
or
shll
scas
sbb
or
stos
pop
rorb
sub
andb
sar
push
fs
mov
push
cs
das
je
pop
or
pop
lea
push
and
jo
js
ss
arpl
and
xor
cmp
push
add
push
pop
jb
dec
xchg
movsl
loope
test
push
or
dec
xor
call
add
push
mov
push
push
in
add
cmpsl
lods
fs
push
xor
pop
adc
sub
jbe
ljmp
xor
sub
push
or
mov
insb
or
push
jbe
pop
hlt
test
in
xchg
push
mov
xor
adc
add
add
nop
sub
sbb
sarl
or
inc
or
push
jnp
cmpsb
in
imul
enter
ss
leave
inc
sarb
and
and
inc
push
mov
add
bswap
mov
fwait
xchg
cmp
add
mov
icebp
sub
das
dec
adc
js
adc
xor
adc
inc
iret
push
hlt
sub
push
sbb
add
loopne
ffree
std
call
and
cmpb
or
xor
notl
jle
inc
push
dec
pop
fcmovb
cmp
test
sub
inc
push
inc
in
and
sbb
sbb
and
sub
je
xor
aas
fimuls
dec
je
jmp
pushl
mov
rcr
mov
pop
add
push
orb
sub
mov
mov
notl
out
push
inc
xor
cmc
inc
and
test
lea
fwait
dec
add
mov
inc
negb
fwait
scas
sub
mov
jl
andl
mov
mov
push
or
js
out
or
fs
scas
mov
push
pop
cltd
ficoml
jge
pop
cmp
xor
pop
jo
push
cltd
jo
sbb
adc
mov
pop
sbb
ret
xor
cmp
movsl
ffreep
mov
call
nop
jo
out
je
fs
adc
sub
test
dec
sbb
testl
xlat
inc
xor
shl
push
ret
mov
dec
loopne
shl
jl
and
mov
sbb
je
rcrl
loopne
shll
lock
xor
pop
jmp
arpl
ret
inc
ljmp
mov
push
in
clc
bound
xor
inc
mov
cmpsl
fadds
cmp
stc
mov
es
or
lds
mov
xor
push
in
push
pop
lock
pop
sbb
mov
push
insl
push
sub
pop
push
ret
aas
xor
repnz
jne
lock
sub
dec
ja
imul
and
subb
testb
je
jne
cmp
jg
push
enter
or
dec
jl
loope
xor
jne
loopne
push
fistl
lret
jl
inc
inc
xor
adc
jp
clc
sbbb
push
sbb
inc
mov
leave
pop
adc
cltd
fcmovb
or
xorb
mov
leave
cmpsl
inc
add
mov
add
test
adc
xacquire
leave
inc
push
loopne
dec
add
popa
addr16
sbb
movsl
sarl
xchg
sub
or
xor
pop
push
jae
add
loopne
push
push
pop
inc
lock
icebp
arpl
scas
addl
and
es
push
test
lock
add
push
nopl
mov
addr16
lock
mov
push
xlat
repnz
mov
imul
push
xchg
out
mov
and
popa
or
call
out
neg
adc
test
test
scas
sbb
or
mov
es
mov
xlat
dec
fwait
sbb
pop
push
push
push
inc
push
aad
pop
cwtl
imul
cltd
idivl
push
or
push
or
lds
xchg
testl
fdivl
pop
ret
push
push
mov
mov
ds
mov
mov
movsb
vunpckhps
jecxz
xor
out
addr16
inc
lods
out
addl
aas
movsl
add
xchg
and
xor
xchg
outsl
push
mov
mov
xor
sbb
add
testb
repz
or
or
push
bound
aas
or
adc
or
arpl
aad
test
paddb
add
mov
adc
cmp
pop
add
pop
mov
jl
cmpsb
adc
add
pop
clc
stos
mov
and
xor
fstpl
dec
inc
adc
mov
push
mov
jns
adc
adc
cmp
pop
push
cwtl
push
add
jbe
arpl
pop
or
inc
cli
xchg
sub
test
cmpsb
sbb
push
push
outsb
mov
mov
inc
ret
call
or
jae
leave
push
pusha
mov
push
add
or
sbb
jae
orl
or
xchg
out
cwtl
dec
pusha
or
cmp
imul
cld
aas
je
sbb
insb
add
push
add
pop
rolb
add
or
adc
sbb
adc
sub
adc
add
and
push
fs
loopne
pop
jb
jne
icebp
shrb
ja
mov
pop
add
cmc
add
xchg
jg
add
mov
inc
mov
push
fs
add
cmc
add
sbb
and
in
and
and
cmp
out
ret
mov
cmp
pushf
jbe
or
cmpl
ljmp
fld
push
cmp
mov
sbb
pop
adc
xor
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
inc
adc
mov
mov
add
jno
repz
or
outsl
insl
out
insl
or
cmp
movsl
mov
loop
fs
or
hlt
sbb
pop
loopne
or
sbb
push
gs
bnd
push
push
pop
adc
add
clc
or
repnz
inc
fldl
and
les
cwtl
movsl
bswap
sbb
testb
sbb
ret
mov
push
push
aad
jns
or
or
bound
lock
push
sbb
popa
inc
test
arpl
shll
addb
lods
pop
js
mov
pushf
pop
push
lahf
imul
test
dec
adc
or
cmpsb
pop
out
mov
mov
push
test
add
inc
test
imul
test
pushl
xchg
adc
mov
or
inc
xor
sbb
inc
movsl
xor
je
loop
pop
and
imul
xchg
jne
ss
jl
adc
or
rclb
jl
pop
jae
pop
jmp
push
jnp
stos
and
or
push
pop
mov
icebp
add
lds
dec
xor
jle
add
inc
xor
addb
addr16
sbb
xchg
mov
lods
ret
sbb
pop
jbe
es
mov
push
jne
repz
sub
jo
xor
dec
cmp
or
mov
fsts
adc
dec
jnp
adc
hlt
into
sub
adc
sahf
movsl
xor
xor
push
mov
test
or
jo
xchg
push
mov
adc
cmpsl
jecxz
mov
cmp
nop
cmp
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
bound
outsb
dec
add
sbb
addb
push
sbb
and
push
test
in
and
lcall
movsb
loopne
adc
fisubl
flds
cli
xchg
clc
decl
push
sub
cmp
push
dec
testb
jbe
mov
les
push
idivl
mov
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
cmp
aas
cmp
dec
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
leave
pop
xchg
sub
insl
inc
xor
divl
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
xchg
out
ret
rorl
adc
mov
je
xchg
and
fcoms
loopne
outsb
xchg
adc
adc
add
jo
push
push
push
and
cmp
sbb
andl
into
pop
lods
jmp
pop
pop
push
push
dec
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
push
rcrb
testl
xorl
lret
lods
call
sub
mov
jbe
and
sub
mov
xchg
loope
aas
adc
imul
cmp
push
add
add
mov
imul
add
rorb
adc
pop
pop
fiadds
adc
inc
mov
mov
xchg
mov
lock
dec
jecxz
cmpsl
jae
mov
cmpsb
or
cwtl
les
add
roll
js
xor
push
lea
xor
mov
ja
xchg
sub
xchg
sub
push
push
inc
imul
or
pop
push
pop
cld
push
cltd
mov
adc
dec
inc
fdivrs
cmp
inc
shl
mov
push
clc
adc
cltd
adc
dec
xchg
cld
push
mov
push
imul
fs
in
pop
jp
cmpsb
jne
ret
outsl
mov
fstpt
and
ja
je
or
je
or
sub
sub
dec
je
das
adc
jge
lahf
add
loopne
or
add
xchg
or
jne
sbb
or
xor
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
mov
int3
lds
ret
int3
mov
mov
lcall
shll
xor
push
add
call
mov
or
cwtl
lret
es
jl
sub
popa
jl
test
adc
nop
push
insb
imul
daa
or
mov
repnz
ret
xchg
and
enter
das
add
lds
ljmp
ret
ret
clc
jecxz
push
cmpb
dec
dec
je
sub
inc
dec
sub
or
adc
adc
or
fstpt
in
mov
aaa
popf
sub
daa
or
ret
push
adc
adc
adc
xchg
dec
mov
movsb
xchg
add
insb
adc
push
outsl
dec
pusha
ret
fsts
or
xchg
xchg
push
inc
imul
test
jnp
and
movsb
pushf
and
dec
cmp
adc
jne
push
or
push
call
pop
and
movsb
inc
stos
push
sbb
sbb
push
cmp
mov
dec
or
ret
pusha
mov
ds
icebp
clc
addb
dec
aas
and
push
or
movb
sbb
push
xchg
out
pop
xor
dec
adc
aad
mov
push
jg
dec
sub
je
push
xor
jo
push
or
mov
imul
fcompl
add
les
dec
xchg
xor
dec
mov
cmpl
loop
scas
push
and
jns
pop
inc
add
add
dec
and
push
sbb
sbb
cs
jns
sub
in
inc
inc
scas
dec
in
clc
dec
mov
in
test
lret
iret
icebp
jge
mov
or
aam
sbb
push
js
inc
pop
nop
repnz
mov
cmp
and
fcoml
loope
jns
fsubrp
push
xor
cmpb
ret
cmp
xor
push
and
inc
nop
andl
out
jbe
push
es
mov
ds
mov
sub
loope
fidivrs
xor
adc
sahf
aas
pushf
roll
aam
jno
push
xchg
mov
jo
xlat
in
mov
sub
add
loope
roll
sbb
mov
push
fsubrs
jmp
int
mov
movsb
arpl
stos
std
decl
lret
repz
or
adc
push
cmp
dec
pop
repnz
sbb
adc
shll
fidivl
push
ljmp
movsb
push
jg
sahf
and
pop
adc
push
push
les
mov
divl
or
push
cltd
inc
loop
andl
data16
and
out
jne
mov
mov
pop
cs
xor
sbb
dec
ret
jge
aaa
call
lahf
ds
idivb
inc
or
pop
hlt
or
jne
jl
sbb
adcl
sbb
or
mov
inc
mov
push
sub
shll
outsl
shrl
inc
mov
je
daa
dec
sub
push
dec
loope
fisubl
mov
outsl
or
xchg
pop
fs
pop
mov
inc
cld
js
or
call
adc
push
fiadds
and
dec
lahf
rcrb
sub
xor
push
sub
or
icebp
add
and
cmpsl
push
or
add
or
mov
mov
mov
fstpl
adc
rcll
lock
or
addl
outsl
shlb
cltd
fbstp
incl
sbb
int3
cmpsl
cmc
mov
add
inc
jp
add
cmp
lods
js
mov
pop
push
inc
leave
jl
lods
dec
je
rcl
add
add
subb
jmp
or
jge
or
push
sub
dec
sahf
imul
repz
inc
xor
jp
xor
divps
mov
sbb
dec
cmp
hlt
lock
cmpsb
sub
mov
sbb
je
test
clc
add
pop
dec
inc
daa
enter
outsl
mov
sbb
xor
push
or
loope
add
mov
bound
cwtl
popa
and
mov
add
mov
mov
adcl
or
sbb
add
adc
push
sub
or
out
adc
movups
push
pop
dec
in
movsl
or
shlb
push
cmp
mov
and
jp
add
push
int3
xchg
mov
and
pcmpeqb
sti
mov
lock
sub
pop
cmp
mov
mov
sub
outsb
cmp
or
mov
or
mov
ret
xor
idivl
or
mulb
fimuls
and
adc
lahf
rcll
cmp
mov
cmp
pop
jne
sub
push
push
in
rclb
pop
xchg
fstpt
fcoms
xchg
jne
test
movsb
in
or
and
leave
jp
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
add
cs
inc
movsl
popf
popa
pusha
pop
iret
mov
sub
add
shrb
and
nop
loop
adc
je
cltd
adc
push
stos
imul
sti
cmp
shrl
in
xor
lcall
push
sub
inc
and
pusha
popa
and
testb
inc
loope
pop
jno
sub
and
into
jle
pop
into
xor
dec
add
mov
in
scas
cmpsb
test
xchg
push
scas
in
or
aam
arpl
cltd
fcoms
sbb
xchg
ret
in
adc
in
and
sub
add
imul
push
push
sbb
lock
inc
inc
popa
push
mov
fildll
ljmp
dec
ret
pop
sub
es
sub
test
or
punpckhdq
in
add
mov
mov
cmpsl
repnz
iret
pop
mov
pop
mov
loope
mov
cmp
movsl
ret
lods
repz
lock
cltd
push
dec
sub
test
cmp
mov
pop
cmp
and
xchg
enter
or
or
popa
hlt
add
push
push
enterw
pop
add
sbb
adc
aaa
test
jge
leave
nop
dec
dec
or
das
inc
and
mov
and
daa
inc
out
or
push
lock
push
adc
je
cmp
je
loopne
and
push
mov
popf
or
push
sbb
dec
mov
dec
jo
mov
dec
adc
jne
sbb
push
or
sti
and
les
mov
pop
daa
push
mov
push
fisttps
repnz
push
dec
call
pop
je
mov
pop
and
movsb
dec
and
nop
lahf
popa
mov
sahf
rolb
or
mov
jp
jp
imul
rcll
es
add
int3
add
shrb
inc
mov
mov
sti
xor
mov
jnp
cmpb
dec
je
sub
push
add
nop
push
pop
mov
decl
dec
jp
cld
rol
add
and
cmc
aaa
push
fsts
inc
lea
jmp
test
popf
std
mov
push
nop
and
fdivrl
stos
cltd
push
cs
addl
ret
andl
push
xchg
and
inc
pop
imul
xorb
out
arpl
mov
lcall
lahf
jne
es
cmp
sbb
mov
or
rorb
rorb
and
xlat
sub
add
jb
sub
dec
ja
into
outsb
xchg
inc
fnstenv
shlb
jae
js
xor
add
inc
scas
loopne
push
adc
ror
jae
dec
xor
dec
xor
pushf
cmp
xor
cmp
adc
hlt
inc
rcrb
cmp
mov
pop
inc
pop
jle
jne
dec
xor
sub
add
and
sbb
inc
dec
sti
and
dec
jmp
push
pop
xor
adc
dec
jmp
push
or
jp
add
das
imul
jns
jle
push
fisubs
iret
in
daa
jb
jae
push
pushf
mov
fdivp
push
xlat
adc
dec
push
addl
dec
clc
jg
fisttpl
call
add
outsb
out
add
inc
and
push
and
push
add
sahf
std
mov
js
or
or
aam
pop
adc
and
dec
out
mov
movsl
push
pop
pop
push
sub
adc
cmp
pop
jbe
lods
nop
or
xor
movsl
movsl
push
sbb
rcrb
sub
rclb
cwtl
jb
inc
pop
arpl
call
cmp
adc
daa
pop
loope
int3
outsb
sbb
and
es
sbb
inc
cmpsl
lea
ret
bnd
popf
jns
xor
adc
addr16
addr16
hlt
cltd
fdivl
enter
in
mov
xor
add
jle
in
push
xchg
inc
dec
pop
lcall
mov
pop
in
push
jge
testb
or
or
mov
fimull
mov
mov
lcall
mov
in
xchg
loopne
repnz
sarl
jb
ret
jbe
push
mov
jne
cmc
sbb
in
push
icebp
and
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
and
mov
or
adc
add
jecxz
push
fs
int3
push
adcb
enter
or
pop
pop
sub
aaa
add
xor
loopne
xchg
dec
mov
rcll
in
int3
add
xchg
push
add
push
lock
push
test
add
push
sub
jae
lret
mov
mov
shl
das
or
gs
cmpsl
jmp
jne
mov
sbb
and
push
or
or
add
dec
int
shl
inc
inc
jnp
int
pop
sahf
je
fmuls
xchg
adc
mov
add
leave
arpl
push
cmp
inc
sub
add
and
inc
lahf
jmp
push
jl
mov
pop
xchg
dec
or
test
pop
add
push
mov
add
cld
cmp
jne
sbb
faddl
add
je
or
add
push
scas
mov
arpl
addl
cmp
mov
insl
adcl
cwtl
pusha
call
or
or
xorl
js
inc
lahf
ja
xchg
push
fninit
call
jb
js
dec
sub
push
and
or
test
xor
inc
pop
jne
scas
fmul
in
inc
push
movsb
mov
jbe
les
lea
sbb
imul
sbb
test
in
jo
mov
les
out
subb
sbb
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
sarl
aam
and
adc
jo
and
lods
in
mov
mov
cmp
adcl
mov
pop
andb
call
loop
dec
mov
lds
and
xchg
nop
or
jno
stos
fadds
ja
mov
xchg
and
test
arpl
mov
dec
cmpsb
adc
push
sub
push
push
jb
sub
push
lods
rclb
lock
popa
mov
push
push
sbb
xorl
das
aad
pop
mov
scas
repz
aaa
andl
mov
dec
notl
jbe
shll
push
leave
add
xor
es
push
in
xchg
cmp
imul
xorb
pop
jno
ficompl
mov
adc
and
lock
xor
enter
sbb
leave
dec
pop
sar
int3
xchg
nop
mov
adc
push
orl
test
mov
adc
mov
adc
stc
add
pop
gs
mov
and
sub
inc
lcall
push
lea
add
mov
cmp
push
arpl
insb
mov
lock
pop
pop
xchg
add
insb
pop
adc
cs
inc
pusha
adc
aad
mov
add
ds
mov
and
int3
cmp
push
lea
roll
mov
push
mov
push
pusha
adc
nop
pop
fistl
xor
adc
pusha
out
sub
sub
pusha
repz
lock
repnz
adc
std
push
in
pop
aaa
aas
ja
push
pop
or
mov
imul
push
push
pop
and
out
clc
and
jne
andl
test
pop
outsl
push
or
pop
inc
arpl
shr
imul
sub
jnp
or
jae
cs
and
jb
pop
xor
sbb
std
xchg
jno
subl
fmuls
and
xchg
repnz
jle
cld
adc
or
fsubrl
fwait
sub
es
push
sub
shrb
push
iret
loopne
xor
les
cmp
push
push
loopne
inc
subb
mov
inc
push
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
es
push
mov
push
lea
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
ret
or
pusha
lods
shll
std
sbb
or
jmp
scas
mov
cmp
add
or
inc
jecxz
fimull
leave
sbb
dec
mov
std
xor
hlt
jecxz
shlb
outsl
arpl
stos
xor
imul
push
dec
stos
fcomps
imul
push
ljmp
sbb
inc
testl
outsb
shlb
dec
add
das
xlat
mov
fs
adc
and
jne
dec
lea
mov
xor
add
push
imul
test
cmp
mov
xor
mov
mov
sbb
jne
cmp
xor
or
mov
or
xor
push
adc
add
cmp
js
or
sub
aaa
decl
ret
mov
adcl
cmp
aaa
mov
aaa
and
cltd
sbb
or
xor
or
or
add
mov
sub
loopne
cld
push
pushl
and
and
hlt
pusha
mov
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
cmp
pop
and
mov
call
jns
icebp
aam
add
mov
add
xchg
xor
mov
dec
rorl
push
add
sbb
and
ret
or
pop
xchg
test
cmp
mov
push
push
lea
or
ja
fs
shlb
sub
or
mov
adc
xor
xlat
popf
mov
stos
jl
push
clc
shll
dec
call
pop
cmc
cmp
adc
data16
sub
aas
push
mov
insb
sub
fisttpl
jne
roll
jbe
sub
lea
jp
jl
ljmp
push
cmp
cmp
outsl
and
push
bnd
cmp
push
jne
imul
out
leave
nop
cmp
cmp
hlt
mov
cmp
or
inc
jg
and
sbb
lgdtl
xor
loope
dec
popf
xchg
aaa
inc
outsl
push
add
fcmovnu
inc
inc
sti
jl
test
jg
cmp
xorb
ret
mov
xchg
pop
mov
sbb
movsb
inc
clc
push
mov
cmp
negl
shr
not
sbb
sub
lods
mov
mov
test
and
es
xor
push
xchg
test
fs
ja
push
xchg
dec
addr16
and
sub
es
loop
in
das
das
sub
sub
xor
xchg
xchg
xchg
das
cmp
cmpsb
inc
and
cmp
insb
popf
xchg
pop
dec
lods
outsb
xchg
test
add
jecxz
addb
xchg
pop
mov
add
jg
or
inc
add
and
mov
sub
mov
inc
mov
and
sub
mov
outsl
xchg
jne
jmp
jecxz
push
bound
inc
xchg
xor
das
push
xor
push
mov
adc
dec
mov
outsl
sub
xchg
ficoml
sub
mov
in
sub
sarl
push
pop
jns
fsubl
sub
inc
adc
jns
jle
int
test
dec
ss
or
and
sbb
test
js
inc
sub
sbb
push
or
inc
mov
and
dec
loopne
test
dec
cmp
jnp
arpl
cmp
cmc
scas
inc
mov
adc
xor
xchg
xchg
movb
mov
or
shll
add
pusha
jl
cmp
push
incl
mov
mov
xchg
sbbb
inc
loope
dec
add
sub
dec
and
or
idivb
dec
sub
imul
call
in
sahf
mov
jge
je
pop
cmp
testl
or
aad
and
aas
test
inc
sti
rep
repnz
sub
inc
xor
or
sbb
call
sub
jae
and
and
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
fbld
jecxz
xchg
pushf
scas
jae
push
push
mov
cmpsb
xlat
push
and
push
mov
push
imul
stos
pop
loopne
adc
xchg
adc
sub
push
adc
xorl
adc
pop
popa
pop
push
pop
adc
addb
xor
mov
mov
imulb
cmpb
or
data16
iret
es
push
xor
push
test
sub
int3
xor
and
repnz
test
nop
or
adc
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
cwtl
rcrb
sub
fstl
adc
sbb
pop
subb
sub
push
data16
lock
xchg
cltd
test
inc
mov
push
or
push
push
gs
inc
jecxz
lcall
xor
pop
cs
adc
ljmp
scas
push
push
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
xchg
add
add
icebp
addl
roll
push
add
outsb
ljmp
mov
mov
jne
lcall
adc
xchg
bound
adc
rol
imul
pop
mov
loop
and
and
cmp
js
cmp
dec
ss
adc
sbb
in
adcb
adc
mov
mov
loop
push
stos
sub
add
scas
inc
dec
xchg
inc
clc
adc
ret
pop
adc
sbb
and
into
cmp
and
aad
nop
clc
add
xchg
xchg
testb
adc
push
adc
jle
jnp
rol
cmp
pusha
adc
add
dec
loope
adc
inc
out
je
lahf
or
dec
adc
cmp
shll
inc
cmp
xor
sti
xorb
test
loopne
pushf
or
sbb
outsl
dec
mov
sbb
sub
sar
faddp
popf
addb
rcrb
mov
call
mov
int
jo
and
sub
or
mov
es
xor
lods
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
inc
cli
clc
pusha
inc
popf
cs
ret
ret
and
rolb
test
add
add
mov
test
jl
pop
push
das
lret
push
ret
ljmpw
mov
push
push
cmpsl
push
add
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
aad
mov
push
aaa
int3
add
fnsave
adc
pusha
jl
sbb
xor
mov
outsl
dec
pop
or
dec
pop
test
dec
xchg
pop
xchg
adc
adc
stos
ds
jmp
dec
ss
mov
mov
dec
add
jne
sub
outsb
fwait
sbb
sar
jb
pop
cmp
jae
push
mov
jb
mov
xor
lret
sahf
xlat
arpl
jmp
dec
hlt
jae
rolb
nop
mov
jg
cmp
or
pop
repz
inc
faddl
push
icebp
inc
shrb
and
xchg
jl
daa
andl
inc
inc
arpl
mov
fsts
inc
sub
dec
mov
lds
adc
cmpsb
adc
push
fnsave
cli
and
mov
sub
push
sub
add
jne
rcrb
adc
dec
fiaddl
pop
dec
sti
movsb
add
sbb
inc
push
ljmp
enter
adc
adc
cmpb
cmp
nop
dec
es
xchg
sbb
add
push
sbb
push
sub
and
cli
mulps
add
pop
dec
jbe
popa
mov
dec
lods
cmp
sub
js
pop
sbb
call
mov
fwait
inc
sub
shll
jbe
add
xor
fcomps
iret
mov
push
sub
adcl
mov
inc
mov
hlt
ret
subl
outsl
loope
and
mov
jo
push
jmp
and
frstor
filds
mov
xchg
dec
or
or
lahf
arpl
in
inc
push
adc
sub
in
cmp
xchg
adc
addr16
insl
cmp
clc
arpl
sbb
cmp
pop
adc
and
mov
add
sbb
fcoml
or
cs
or
adc
lods
or
jmp
or
pop
mov
outsb
and
jne
push
sub
push
sbb
jne
push
adc
rcrb
add
scas
mov
xchg
rep
mov
sub
adc
inc
xchg
push
push
xor
es
dec
mov
sti
mov
xchg
push
and
lahf
and
and
push
nop
xchg
adc
inc
xor
jg
and
sbb
xchg
jo
xchg
xchg
and
test
or
das
shlb
xor
add
inc
push
in
and
xorb
pop
jne
lods
add
cmp
pop
mov
mov
jp
sbb
xor
leave
fnstsw
ret
xor
xor
or
in
pusha
mov
popa
adc
pop
add
fucomp
mov
add
pop
sbb
call
inc
or
fs
jbe
sbb
add
push
stos
mov
pop
mov
xchg
xor
inc
adc
or
adc
dec
add
mov
mov
fadds
mov
andl
adc
push
mov
sti
insl
sub
mov
lods
mov
sbb
xor
dec
dec
sti
inc
mov
xor
repz
loop
fimuls
rorl
enter
fdivl
mov
shr
aam
mov
mov
js
cmpsb
loopne
dec
insb
xor
sub
cmp
decl
sahf
je
fcomps
mov
mov
xchg
mov
mov
pop
divb
push
test
sub
cltd
ret
sub
or
test
xor
mov
test
sbb
inc
aas
rolb
jg
or
push
mov
pop
add
loop
and
fistpll
ret
and
mov
jne
pop
lock
rcrb
inc
mov
or
adc
sbb
xchg
jne
scas
or
and
jne
jp
leave
push
adc
loopne
sahf
and
cmp
lds
repz
and
pop
sub
lock
das
repnz
out
jae
and
fwait
nop
mov
jno
lock
rolb
cmpsl
xchg
insl
push
lret
push
sub
mov
jno
fdivr
xor
or
ret
cmpsb
push
add
mov
fsubrl
adc
aaa
mov
pusha
sub
or
je
mov
or
bound
popf
in
xchg
xchg
mov
push
cmp
jge
xchg
sbb
test
xor
insb
dec
sub
lds
cmp
adc
or
movsb
or
mov
notl
ret
inc
bound
mov
insb
test
dec
js
nop
lock
pop
pop
fidivs
mov
jns
sbb
push
xchg
lods
ret
sub
or
push
dec
xchg
add
and
xor
ja
jp
push
je
jmp
adc
cmp
jb
lret
add
dec
mov
adc
or
adc
aas
das
insb
mov
dec
sarl
dec
xlat
cmpb
mov
lods
test
xor
lahf
xor
xor
adc
pop
nop
mov
or
push
inc
lcall
mov
js
pusha
scas
push
pop
mov
pop
sbb
sbb
repz
aam
popf
cmp
inc
in
xchg
push
jp
call
sbb
inc
inc
jg
push
adc
pop
pusha
lcall
xchg
or
push
sbb
jnp
mov
adc
ljmp
xor
mov
inc
gs
hlt
test
push
lret
shl
pusha
mov
pop
jnp
test
loopne
adc
adc
xor
pop
inc
adc
mov
cmp
in
cli
aam
add
inc
and
push
fcomps
adcl
push
mov
icebp
into
push
inc
mov
dec
rolb
mov
or
or
xchg
cmp
mov
or
push
popa
mov
lret
mov
mov
adc
sub
in
scas
push
lock
jbe
jmp
lahf
dec
outsl
addb
pusha
or
sub
inc
or
pop
push
fs
inc
add
sbb
sbb
and
pop
test
movl
push
push
add
jo
mov
mov
push
inc
cmpsl
loopne
ret
out
test
and
adc
inc
add
push
xchg
pop
or
dec
rcr
add
std
sbbl
push
aaa
rclb
sbb
loopne
repnz
xor
sub
sub
pusha
idiv
and
xchg
pop
push
push
and
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
push
adc
fs
divl
fsts
mov
sub
dec
inc
jg
aas
push
add
ret
push
jno
inc
stos
push
shlb
or
mov
inc
and
clc
adcb
loop
adcl
test
jmp
loope
es
stc
pop
popa
push
movsl
and
mov
cltd
pop
pop
mov
pushf
dec
outsl
iret
sub
xorl
scas
xchg
add
mov
dec
pushl
test
jnp
cmp
pusha
es
xor
push
call
test
push
push
pop
inc
sbb
int
loopne
pushf
push
pop
jne
and
jb
mov
xor
out
enter
mov
bound
dec
movsl
aam
xchg
sub
push
add
mov
mov
push
xchg
adc
lods
or
pop
mov
mov
jb
or
jb
movsl
mov
mov
test
add
fldl
pop
and
xor
addl
subl
imul
or
rclb
loope
or
sub
dec
jb
testl
xchg
or
pusha
push
jl
adcl
mov
loope
out
loope
jb
cmp
add
cmp
sbb
or
inc
jno
adc
xchg
or
sti
push
movsb
jb
xor
js
mov
mov
loopne
lret
lods
jg
cmp
jbe
nop
mov
mov
out
outsl
mov
mov
icebp
ret
push
add
ret
cmp
mov
xor
inc
outsl
idivb
int3
das
and
dec
cs
ds
loopne
inc
sbb
les
xchg
sbb
rcl
sub
rcll
lods
add
arpl
or
or
sti
pusha
adc
cmc
pushf
loop
push
adc
or
fwait
lahf
jb
clc
xor
pop
mov
xchg
lds
add
mov
sbb
inc
scas
or
test
cmp
inc
lret
xchg
mov
mov
push
push
leave
push
cmp
movsl
mov
or
mov
add
pushf
mov
mov
xor
push
scas
push
lcall
pop
jne
fs
push
rorl
out
cmpsl
stos
xor
iret
mov
je
xchg
or
test
ljmp
push
andl
xchg
add
shlb
mov
dec
mov
cmp
clc
or
mov
lods
and
or
lea
cmp
rclb
enter
push
push
mov
jo
and
js
add
and
inc
fwait
mov
push
dec
push
fs
psllq
in
xor
cmp
dec
mov
add
or
es
push
clc
stos
push
add
dec
iret
push
rol
jecxz
and
in
mov
mov
and
mov
mov
adc
enter
fistl
scas
pop
cmpl
stos
xchg
nop
mov
add
lret
test
jo
sbb
inc
hlt
dec
and
sub
adc
in
pop
fwait
dec
or
adc
movsl
rcl
lods
shrl
jle
xor
xchg
fwait
cmp
cmpb
add
mov
mov
jno
pushf
stos
xlat
imul
pop
adc
pop
xchg
lahf
lea
lret
fadds
pop
cmp
inc
movsl
test
rcrb
in
adc
ss
call
add
sbb
fdivrp
xchg
xchg
inc
xor
notl
jno
or
enter
or
clc
aas
ss
inc
push
repnz
rolb
loop
mov
cmp
inc
mov
shrb
or
push
lret
rcr
bound
or
fs
sbb
shr
or
rolb
pop
faddl
jo
cmp
inc
xchg
pop
push
lcall
mov
sub
das
test
rcrb
mov
aas
push
rclb
adc
je
cmp
jne
push
pop
sub
insb
xchg
loopne
adcb
adc
test
mov
nop
push
and
xchg
xchg
cwtl
pushf
gs
lcall
and
sarl
mov
mov
rorl
mov
sub
lds
pop
test
inc
mov
sti
cs
ja
popf
mov
inc
movb
ja
movsb
rcrb
fnstcw
std
mov
into
push
dec
sbb
jmp
cmp
cmp
scas
icebp
ret
ror
fidivl
inc
xchg
jo
ret
cltd
adc
sbb
cmp
jle
dec
pop
dec
mov
les
nop
dec
adc
mov
push
test
or
lea
sbb
mov
clc
mov
enter
mov
ljmp
scas
outsl
push
pop
mov
pushf
mov
inc
mov
mov
mov
add
lods
jae
fs
insb
mov
add
inc
shrl
xor
sub
mov
xchg
push
xor
mov
push
enter
push
xor
or
ret
mov
xchg
inc
sbb
mulb
into
add
adc
cmp
stc
and
dec
cmp
add
or
and
lods
sub
or
cmp
inc
addr16
test
inc
stos
adc
xorl
add
js
pop
pop
stos
out
mov
es
cmp
push
pop
cmpsb
roll
push
push
push
jns
dec
fdivrs
cmp
push
push
repz
pop
xor
mov
mov
pop
pop
daa
inc
je
shll
add
xchg
loopne
add
jmp
lahf
mov
nop
das
inc
gs
lods
mov
jno
lock
movsl
insb
xlat
scas
icebp
push
or
xor
mov
sbb
xlat
push
dec
add
add
test
push
inc
clc
sbb
add
cmpsl
jbe
mov
push
add
test
incb
cmp
push
pop
aad
rolb
xchg
xor
push
push
mov
mov
test
xor
cmp
pop
xorb
xorb
jne
and
adc
jnp
hlt
lea
mov
jnp
sub
xor
inc
inc
adc
push
jl
int3
sub
sahf
dec
cwtl
xchg
xchg
cmp
dec
cmp
out
cmpsl
pop
sub
movsl
mov
mov
andw
lock
sub
bound
xor
add
jnp
mov
repnz
and
out
add
pop
push
mov
mov
gs
push
lods
lods
and
dec
addl
gs
sti
sub
fistl
push
mov
add
push
dec
jle
sbb
pop
fsubl
hlt
sbb
pushf
mov
rcll
lods
xlat
iret
hlt
lock
lea
inc
xor
mov
mov
cmp
cmpb
mov
clc
stc
push
cmp
loope,pn
test
cmpl
and
adc
inc
insl
and
dec
inc
lahf
push
jbe
push
idiv
lea
mov
mov
xchg
aaa
fsubl
add
jae
and
aad
call
fistpl
mov
xor
jp
mov
shlb
push
arpl
lret
ret
push
cmpsb
scas
bound
pop
pop
sub
mov
call
test
adc
jbe
or
ret
in
adc
pop
daa
dec
es
je
inc
fs
in
push
add
push
push
in
out
push
sub
and
jns
nop
cltd
pop
fdiv
push
mov
fsubrs
clc
addr16
jge
and
das
call
add
cmp
push
push
add
jne
fadd
sub
jne
dec
lods
insl
or
test
call
leave
loopne
add
inc
fcmovnb
add
test
or
mov
adcb
mov
and
mov
mov
addr16
popf
lcall
sbb
aam
lcall
test
mov
or
push
cmp
jb
or
inc
push
add
orb
jb
popf
pop
mov
push
sub
rolb
cmpsb
inc
push
dec
mov
pop
lock
fsubrl
inc
cmp
mov
mov
lock
mov
add
mov
mov
imul
bound
push
adc
dec
out
test
decb
cmpsl
ss
lods
adc
aaa
add
adc
dec
cmp
loopne
cmp
rol
adc
sbb
nop
lcall
or
sub
pop
xorl
cmp
imul
es
mov
sub
add
or
push
das
pop
jb
inc
xchg
cmp
mov
stos
xor
jp
jp
je
xchg
ljmp
je
data16
sub
xchg
pop
dec
cli
jle
call
cmp
jg
outsb
adc
int
sub
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
bound
sbb
mov
dec
pop
stos
pusha
xor
inc
xchg
fisttpl
jb
jmp
divb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
cli
iret
add
ret
xchg
pusha
movsl
push
or
cmpb
add
jae
dec
pop
or
movb
ds
jmp
pop
cmpsb
xchg
add
shll
jae
sbb
insl
pop
pop
cmp
fcomps
push
rorl
xchg
push
sbb
test
lret
mov
mov
pushf
movsl
sub
inc
sbb
andl
and
adc
push
mov
scas
add
xlat
imul
cli
sbb
push
sbb
cmp
xchg
lret
mov
xchg
les
aam
in
add
jl
fldcw
adc
add
mov
add
stos
cmp
inc
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
sbb
jmp
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
and
push
rorb
adc
rorb
int
rclb
divl
jo
cltd
rcl
inc
push
add
rolb
jo
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
jge
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
and
sbb
ret
and
pusha
add
lea
popf
xchg
nop
xlat
das
mov
or
mov
insb
lret
jecxz
test
orl
jg
test
xor
pusha
add
xchg
dec
add
jo
mov
fwait
mov
loopne
rolb
pop
xchg
into
inc
add
dec
das
movsl
inc
push
in
add
scas
mov
pop
bound
xor
pusha
imul
pop
or
mov
int3
push
push
add
push
fadd
and
dec
dec
sbb
stos
cmc
sbb
pop
dec
and
xor
lcall
sub
mov
mov
in
xor
jne
ss
jno
inc
inc
adc
je
cltd
test
mov
std
mov
dec
pop
cmp
sub
sub
inc
push
inc
jo
shlb
das
shr
sub
add
push
and
cmp
push
pop
mov
sarb
addr16
sbb
xor
and
dec
pop
dec
cmp
add
add
test
sub
push
push
push
in
cmp
push
cli
ss
and
push
push
add
in
shlb
adcb
and
add
lret
inc
mov
out
sbb
mov
call
dec
test
inc
add
test
testl
cmp
jno
xor
insl
lea
mov
push
dec
xor
loop
inc
xorb
add
shr
add
fcom
sbb
pop
clc
add
jb
not
dec
cmp
out
mov
ret
shr
cmp
xchg
cmp
jbe
add
jmp
add
pop
shlb
aaa
sub
ret
and
dec
hlt
fisttps
dec
loopne
jl
mov
cmp
cmpsl
mov
movsb
scas
or
sub
xchg
adc
js
stos
mov
cmpsl
nop
pop
dec
punpckhbw
push
jnp
sub
repnz
lods
mov
dec
popf
mov
add
ret
mov
pop
ss
out
dec
mov
add
xchg
test
je
or
fsts
dec
jo
push
add
sar
mov
int
mov
imul
rcll
imul
cltd
push
mov
jl
pushf
int
scas
dec
ss
adc
mov
les
sbb
xor
xchg
or
ljmp
jmp
or
fwait
call
jb
pop
add
mov
xor
lods
or
mov
jbe
cwtl
arpl
mov
xchg
cmovs
movsb
inc
dec
xor
shrb
jg
and
stos
clc
xlat
nop
loope
mov
jmp
xor
mov
call
add
lea
jg
loopne
xchg
scas
cmpb
add
mov
push
jns
adc
sbb
xor
jb
lea
insb
fstpl
and
or
jno
push
orl
and
mov
scas
dec
xchg
and
rorb
scas
pusha
les
repnz
xor
mov
mov
push
xor
pop
push
pop
mov
dec
xor
and
push
push
pop
mov
lods
dec
add
testl
mov
arpl
adc
divl
add
cmpl
in
pushf
or
stc
jmp
sbbb
insl
add
adc
adc
or
inc
pusha
and
loope
sub
and
sarl
je
int3
std
cmc
dec
sbb
ss
cmc
popa
jge
je
mov
sbb
pop
push
dec
or
or
or
push
add
shrd
nop
push
or
cmp
mov
movsb
scas
call
or
adc
adc
fwait
test
ljmp
lea
push
dec
xchg
dec
adc
mov
xchg
pop
mov
push
or
repz
pop
faddl
fcoms
mov
adc
daa
xchg
in
inc
add
xlat
add
push
push
les
test
imul
adc
adc
adc
fsubrs
mov
fistps
push
adc
in
add
pop
imul
or
inc
inc
inc
xor
das
aam
sub
imul
jmp
aaa
pop
and
jb
roll
fs
add
add
mov
ds
movsl
mov
movsl
jno
rclb
jmp
mov
filds
push
adc
sub
and
adc
fistl
xor
sub
cld
hlt
xor
push
pop
sub
or
stos
sbb
adc
xor
cmp
insb
mov
or
es
xor
mov
push
faddl
adc
dec
inc
push
test
and
mov
in
xor
sti
jb
je
push
scas
movsl
mov
jecxz
sub
xor
cmp
jno
push
shlb
jnp
ret
pop
adc
es
scas
sub
push
ss
movsb
movsb
repz
add
repz
mov
and
or
jo
outsl
push
add
and
xor
jnp
xchg
push
push
into
idivb
or
mov
or
add
xor
dec
ds
popa
pusha
xchg
sub
outsl
fsubrs
push
sti
push
add
or
mov
imul
ret
lcall
push
inc
and
or
mov
ret
lret
push
add
xchg
cmp
rcrl
inc
je
mov
mov
cli
dec
dec
xchg
push
aaa
push
adc
pop
out
cmp
mov
into
xor
jmp
mov
sub
pop
add
mov
push
sbb
test
outsb
mov
loopne
push
mov
test
lret
test
fistl
or
inc
xor
xor
insl
or
insl
add
in
push
mov
add
loope
popf
insl
insb
xor
adc
repnz
xor
sbb
inc
movsb
mov
loopne
dec
xor
push
testl
inc
or
xchg
lret
xor
xchg
test
arpl
or
push
inc
pop
loopne
sbb
lock
inc
das
push
cmp
push
stos
roll
rorl
ret
test
enter
cmp
fwait
mov
shlb
lea
or
ja
mov
in
mov
clc
push
push
mov
or
inc
es
jmp
mov
scas
xchg
js
adc
adc
pushf
lret
xor
es
push
sub
mov
popf
jo
sub
mov
lcall
out
rclb
inc
add
add
add
xor
sub
pop
outsl
out
add
mov
cmp
inc
sbb
xchg
adc
outsb
aam
push
jns
pop
pop
or
flds
or
xchg
xchg
pop
mov
repz
sbb
rorb
jl
or
mov
bnd
test
dec
push
dec
imul
subb
popa
sub
inc
sti
push
sbb
or
lret
in
mov
std
inc
mov
aam
jl
push
xchg
mov
mov
mov
add
bound
movsl
mov
je
push
aaa
loopne
sub
call
jno
xlat
ss
jle
push
pop
sarl
sbb
cmpsl
push
cmp
lahf
divb
dec
jbe
push
mov
jno
mov
mov
test
in
xlat
lock
jb
stos
pop
pop
xchg
xor
pop
pusha
leave
or
sbb
lret
and
jns
push
and
aaa
xor
insb
jl
jmp
push
in
fldt
jmp
add
les
adc
mov
push
inc
test
xor
js
insl
mov
jecxz
pop
mov
sbb
jl
push
mov
and
cmp
xor
mov
pusha
and
rcrl
adc
jmp
arpl
ss
or
or
inc
or
loop
inc
popa
and
and
add
pop
mov
and
lea
js
notl
inc
inc
dec
mov
mov
jo
inc
test
nop
mov
insb
mov
add
repz
xor
test
mov
inc
mov
mov
and
cli
repnz
push
dec
nop
das
or
movsb
lods
mov
mov
mov
mov
xchg
xchg
xchg
sbb
xor
dec
shlb
cmp
popf
nop
inc
pop
add
roll
cmp
ret
test
push
sbb
jns
mov
orb
in
addr16
inc
xor
clc
push
lock
add
cld
push
jecxz
xchg
sub
in
sbb
mov
shlb
mov
movl
pusha
adc
movsb
pop
gs
push
mov
xchg
jl
xchg
cmpsb
fs
jl
and
jnp
jle
push
and
js
xchg
pusha
xor
xor
xchg
jl
mov
sti
jmp
add
cli
inc
jo
mov
je
lret
dec
ret
mov
xor
les
test
xor
in
push
xor
or
push
fwait
daa
pushf
dec
sbb
rcrb
jmp
jge
je
sbb
les
xchg
and
push
mov
aad
cmp
pushl
or
push
xor
add
les
pop
call
add
pop
mov
sbb
or
bound
leave
add
sbb
inc
popf
add
sbb
push
lock
adc
push
sarl
ret
pushl
cmp
and
or
fnstsw
ret
or
cwtl
test
fildl
xor
movsl
mov
leave
mov
sbb
cmpsb
pop
out
ljmp
and
or
popf
call
mov
addr16
lock
jmp
enter
cmpsb
or
ljmp
loope
adcl
icebp
out
clc
loopne
test
cs
jge
jbe
sub
push
js
mov
xor
rorb
test
cmp
jle
imul
mov
leave
test
in
push
push
cs
pop
push
jmp
xlat
sbb
pop
inc
add
or
xchg
pop
mov
es
push
jge
dec
loopne
pop
icebp
add
mov
daa
jo
or
in
pop
sbb
hlt
push
test
jne
or
lods
je
in
mov
mov
les
adc
stc
sub
mov
xchg
scas
cltd
or
dec
mov
adc
mov
icebp
inc
mov
mov
mov
iret
xlat
lock
xor
add
xlat
inc
shlb
xchg
sbb
jg
add
sub
push
scas
mov
stos
lock
add
mov
cmp
xchg
jmp
pop
cmp
aaa
jg
adc
mov
ja
dec
push
sub
pop
add
sbb
lret
pusha
or
mov
in
add
leave
xor
sub
sahf
stos
stos
adc
push
jecxz
add
jo
lods
xor
pop
loop
mov
cmp
add
ds
cmp
adc
push
push
inc
add
xchg
sub
test
shl
ret
mov
mov
testl
add
jmp
sbb
push
push
dec
movsl
into
cmp
inc
cli
repz
jmp
adc
scas
or
pop
push
or
mov
sbb
imul
mov
sbb
cli
jmp
fldl
fs
pop
and
push
cmp
adc
sbb
incl
movsl
push
push
movsl
jmp
and
mov
push
clc
and
jmp
fcomp
fnstsw
dec
jp
fldl
pop
fsubr
pop
faddp
andl
sbb
mov
icebp
sarb
push
mov
mov
dec
or
in
mov
and
jo
imul
data16
or
arpl
add
adc
add
movl
pop
shrl
out
fdivrs
sub
jne
xor
out
fs
add
sub
sbb
iret
sub
adc
xor
push
or
pop
ss
cvtps2pi
dec
mov
add
push
mov
sbb
xor
jecxz
fsubs
aam
ret
and
xchg
xchg
insb
lds
cmp
mov
int3
dec
xor
or
lock
push
mov
dec
sub
push
lcall
mov
sub
mov
pop
add
mov
add
lock
push
jmp
mov
cmp
jge
and
add
push
xor
mov
or
add
xchg
adc
jmp
pop
lods
jmp
mov
sbb
lds
cmp
popa
popf
bnd
cwtl
imul
jg
pusha
stos
sbb
cmp
sub
mov
pop
pop
loopne
add
or
imul
push
pop
outsb
into
inc
add
xchg
add
or
jns
mov
mov
mov
dec
xchg
adc
dec
pusha
mov
or
dec
bound
pop
aam
xor
mov
mov
bound
lret
stos
mov
imul
mov
jmp
test
add
cmpsb
lock
xchg
ret
push
pop
ret
xor
cmp
cli
decl
inc
adc
or
push
cmpsl
xchg
rcrl
xchg
loopne
stc
in
sahf
dec
jmp
test
adc
jo
or
loopne
mov
call
add
sub
adcb
out
push
in
xor
pop
jle
sub
dec
jmp
in
and
pushw
and
std
nop
clc
test
jg
aaa
lds
and
xor
or
stos
mov
imul
pop
stos
xor
and
jo
jns
push
mov
adc
addb
push
or
rorb
loop
sub
pop
xor
clc
inc
insb
add
mov
and
ret
add
lcall
mov
inc
ljmp
stc
and
mov
shrl
push
ss
xor
or
mov
add
add
movsb
outsb
or
orb
mov
into
or
fstl
nop
push
xchg
unpcklps
push
add
push
dec
sub
jp
ret
mov
lds
cwtl
push
push
or
push
xor
pop
clc
jae
xorb
repz
xchg
pop
dec
pop
and
lock
xor
inc
clc
clc
mov
xchg
cs
cmp
jge
gs
inc
loope
hlt
lahf
adc
push
jb
cs
mov
jns
jg
orl
push
or
outsb
mov
data16
mov
mov
call
enter
sbb
in
push
cmp
push
jmp
jl
mov
scas
xchg
lea
push
xchg
popf
xor
cltd
cmp
lret
in
iret
add
jecxz
test
push
xchg
dec
in
mov
mov
add
imul
daa
pop
push
add
push
js
pop
push
lods
jmp
popa
fstp
adc
ret
mov
add
lret
or
add
int3
fwait
and
mov
sbb
pop
xor
cli
and
add
add
xor
sbb
pop
outsl
push
dec
mov
jbe
aam
mov
leave
push
pushf
dec
mov
push
arpl
adc
mov
adc
lods
xchg
or
mov
adc
add
test
and
xlat
ljmp
lea
jge
push
mov
sbb
pushf
or
dec
pop
dec
push
movb
mov
lock
pop
sbb
shll
cmp
pop
lret
push
lock
cmp
fcomp
adc
or
jge
lock
das
mov
pop
lods
mov
push
xor
loopne
popa
mov
rolb
ss
ljmp
mov
lret
xor
jle
add
and
mov
stos
or
jmp
cmpl
mov
xor
push
inc
fistpll
sbb
inc
mov
sub
fs
pop
push
jne
mov
jae
in
or
mov
pop
xlat
jmp
mov
es
popa
inc
sbb
push
add
test
push
push
sub
popa
sbb
adc
cmp
je
loopne
pop
rcrl
adc
xlat
push
or
inc
xchg
inc
sub
jns
inc
sub
rolb
cmp
sub
sbb
imul
pop
jne
fdivrl
cmp
ss
push
iret
sub
js
sbb
add
inc
pop
push
enter
inc
push
inc
xlat
pop
xor
adc
aam
add
sub
jne
push
push
dec
cs
mov
inc
push
xchg
mov
int
pusha
cmp
push
in
lock
add
push
inc
push
dec
adcl
movsl
jne
or
lock
lret
clc
mov
inc
ds
gs
enter
pop
or
dec
adc
andl
aam
xchg
std
and
jecxz
and
ss
jl
mov
orb
leave
lock
test
repz
arpl
xchg
icebp
push
and
sti
aas
test
daa
rcrb
dec
cmp
imul
movsl
xor
push
in
rolb
out
imul
add
les
cmp
fistl
test
sti
les
adc
in
imul
add
mov
adc
ret
fmuls
xchg
jne
lret
sbb
mov
add
andb
clc
out
cmp
jne
lcall
xorl
add
jb
enter
test
repnz
nop
lock
enter
add
push
add
movsb
jns
std
rorl
addb
cmp
inc
adc
outsb
xchg
mov
cmp
mov
pop
clc
jl
leave
jo
cmpsl
xchg
xor
shlb
sbb
rcrb
loopne
shrb
or
aam
leave
loopne
repnz
inc
push
inc
push
fwait
cmp
orb
add
mov
les
dec
gs
add
enter
add
daa
pushf
xor
sbb
or
clc
repz
lcall
aam
loope
imul
inc
ret
sub
loope
movsb
mov
aam
pop
cmpsb
and
stos
xchg
stc
inc
mov
hlt
data16
pop
ljmp
pop
push
push
test
stc
cmc
xchg
mov
out
sub
fcomps
test
nop
into
das
adc
or
sub
pusha
mov
mov
dec
xchg
movsb
mov
mov
or
jecxz
add
jp
mov
popa
and
fwait
jmp
add
push
push
add
push
hlt
jge
adcl
or
jg
or
pop
pop
pop
jo
jno
jle
pop
scas
stc
pop
or
movsl
or
cmp
in
rcl
sub
add
data16
fcompl
mov
inc
in
dec
lcall
xchg
fwait
xchg
sbb
roll
aam
ret
fdivs
mov
xchg
fsubl
add
aad
mov
sarl
and
fcoms
rcrb
mov
inc
pop
sbb
call
fmuls
add
xchg
pop
lret
insl
xchg
or
daa
sbb
nopl
add
cmp
add
mov
cmp
jmp
push
pusha
mov
in
or
es
sbb
lods
dec
jne
mov
lahf
adc
push
or
pop
and
fbstp
push
dec
je
sub
sbb
inc
fsubrl
sbb
insl
rorb
mov
xor
mov
push
xor
mov
hlt
jmp
jmp
loopne
cmp
xchg
mov
add
jne
aaa
jno
dec
add
cltd
mov
adc
pop
mov
sub
dec
jb
push
adc
dec
inc
push
push
lods
or
xchg
mov
jo
inc
je
and
mov
cli
mov
add
bound
in
xor
jne
pop
pop
inc
jmp
adc
data16
dec
inc
inc
cmp
sbb
rol
pop
push
ret
xchg
in
cmp
mov
mov
cmc
jg
pusha
jae
mov
in
inc
sbb
xchg
jge
loop
data16
out
xchg
jmp
lock
cli
and
lea
push
rclb
pop
cmp
add
sti
arpl
xor
add
aam
in
xor
mov
mov
jl
push
inc
test
dec
push
and
mov
or
dec
add
or
aam
les
fwait
pop
mov
xchg
sbb
inc
and
pop
andl
dec
xchg
dec
mov
xchg
or
pop
adc
adc
lea
js
test
loop
pusha
pop
es
sbb
or
mov
ret
sub
cs
or
or
inc
mov
into
popa
adc
add
lea
sub
xchg
out
add
mov
cmp
adc
push
xor
lock
enter
filds
sub
cmp
push
clc
rorl
hlt
lock
xchg
ss
xor
pop
jb
push
in
cli
std
and
loopne
sub
push
or
xchg
xchg
lret
or
mov
push
sbb
fdivs
sahf
adc
add
pop
xor
mov
sbb
add
les
leave
xor
or
vpaddusb
fistpll
push
add
lret
je
outsb
ljmp
push
popa
leave
pop
data16
ljmp
mov
daa
loope
xchg
and
inc
imul
push
push
inc
aaa
add
mov
jbe
dec
in
ljmp
inc
mov
sar
add
loop
xchg
add
mov
mov
push
pop
aam
add
push
push
inc
mov
sbb
stc
cmp
push
inc
or
inc
mov
add
sub
add
dec
cmc
jbe
xor
inc
mov
cltd
sub
orb
cmpsl
test
aaa
xor
inc
inc
push
add
ds
adc
add
rolb
leave
ret
lock
or
jecxz
pusha
lea
mov
adc
push
xchg
pcmpgtb
and
lcall
nop
orl
or
push
adc
pop
cmp
jl
xor
lret
into
add
dec
pushf
hlt
mov
ja
sbb
sub
dec
push
loopne
push
fiadds
push
jl
fbld
out
shrl
pop
enterw
movsb
pop
sahf
loop
shrl
push
std
jnp
sub
push
pop
je
push
mov
stc
and
adc
js
sbb
ret
jmp
sub
or
xor
and
sti
or
cltd
jo
mov
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
je
mov
dec
sub
popa
jmp
int
stos
xor
cmp
push
jne
jl
cmp
mov
pop
insb
push
dec
push
jge
lret
xor
push
jno
dec
lea
shrl
jne
loope
sub
sbb
pop
sub
cmp
ds
bound
test
ljmp
arpl
inc
xor
adc
or
adc
or
adc
push
sbb
imul
idivb
add
movb
cmpb
push
jno
es
lea
insb
adc
je
push
adc
add
fs
stos
or
lock
push
clc
mov
and
or
aad
sub
push
mov
and
movsb
icebp
test
push
mov
aad
adc
push
adc
addr16
jg
adc
aas
cwtl
das
add
jle,pn
loopne
add
cmp
mov
aam
lock
aam
pop
stc
xor
xchg
mov
aam
cmpsb
jb
cwtl
pop
pop
jg
cmp
sub
cmpl
in
lock
mov
push
scas
xchg
and
pop
xor
pusha
test
out
popa
out
xchg
lods
les
insb
dec
in
jge
dec
inc
adc
push
inc
stos
adc
jb
push
mov
or
pop
adc
or
push
xor
push
cmp
aam
push
adc
jne
mov
mov
jmp
sbb
push
add
movsl
in
faddl
scas
push
mov
cmp
adc
jae
xchg
out
dec
mov
push
adc
aaa
lock
or
add
push
js
lods
xor
pop
pop
sbb
es
je
test
lret
add
or
sub
inc
rorb
cmp
pop
in
jnp
add
arpl
inc
xchg
or
push
xor
pop
dec
push
add
test
fsubr
add
or
cld
mov
mov
add
xor
aam
pop
dec
add
jle
adc
add
push
pusha
and
push
add
addb
stos
mov
or
das
cmpsb
shl
fmuls
cmc
mov
cltd
and
lods
mov
mov
js
or
mov
mov
mov
adc
fisubl
aaa
or
decl
push
fsubrs
mov
sub
cmp
shlb
and
sbb
test
mov
jb
add
xchg
mov
daa
jge
iret
rcr
pop
scas
dec
add
shlb
test
jne
mov
mov
sbb
dec
jecxz
imul
push
lea
call
sbb
fisttpll
mov
adc
inc
stos
dec
loope
mov
sbb
pop
fwait
fs
jns
fdivs
stos
jmp
or
movsb
dec
mov
scas
or
inc
rolb
mov
push
fs
insl
xchg
test
mov
popf
sti
cwtl
or
mov
adc
stos
in
fisubrl
sub
loope
and
mov
ss
mov
rcrb
test
add
add
push
out
mov
push
sbb
ret
jne
aad
push
mov
loope
fistpl
inc
adc
or
lret
add
mov
or
rcr
das
icebp
add
iret
jge
popf
xor
in
push
sbb
mov
cmp
pop
mov
mov
stos
loopne
mov
inc
adc
or
imul
test
mov
jne
and
mov
xchg
jmp
push
add
icebp
xor
ja
push
mov
ret
jno
ret
mov
lahf
scas
ret
adc
mov
add
pop
aam
xor
add
sub
mov
lods
and
into
xchg
in
jmp
adc
pop
xchg
insb
add
inc
jle
incl
mov
or
clc
and
jecxz
lret
push
out
ret
fidivl
sub
or
enter
add
fwait
int
adc
mov
fmuls
dec
or
jg
cmpl
popf
rolb
adc
outsb
loope
mov
pop
xchg
mov
fcompl
je
imul
add
inc
add
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
jecxz
scas
ds
and
mov
jmp
mov
ljmp
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
filds
mov
lods
rclb
lods
push
insb
loop
and
arpl
mov
mov
sbb
cli
lea
inc
jp
sbb
movsb
and
xlat
sbb
mov
in
mov
mov
loope
or
xchg
hlt
mov
or
das
movsb
imul
push
push
in
jecxz
shrb
push
pop
movl
push
dec
pop
jb
insb
add
lock
cmp
shlb
rcl
jecxz
mov
inc
movsl
ret
inc
dec
add
loopne
mov
aaa
inc
pop
mov
cwtl
sub
ja
push
pop
orl
adc
fimull
scas
sti
jb
push
push
pop
orb
xchg
cwtl
mov
lds
sbb
rolb
xor
lock
mov
add
mov
jb
and
mov
add
cld
mov
inc
or
xor
mov
sub
movsb
sub
out
push
inc
orl
inc
sbb
imul
mov
lcall
xor
jbe
js
add
pop
or
and
add
mov
or
shl
sbb
xchg
sub
test
mov
outsl
or
sbb
lea
jmp
and
adc
or
inc
ret
push
push
cmp
and
push
add
mov
xchg
pop
leave
jae
arpl
ror
lds
pop
dec
push
adc
popa
and
mov
loopne
cmp
inc
gs
jecxz
mov
inc
xor
sar
sbb
in
push
or
push
lcall
pop
jns
outsb
pusha
push
push
xor
or
loopne
sbbb
adc
nop
insl
push
sub
jno
or
cltd
adc
or
pop
adc
or
sbb
dec
sub
push
les
je
xor
add
fisubl
js
and
push
lret
ret
adcl
sarl
adc
xchg
pop
or
insb
jne
daa
in
xchg
and
pop
mov
mov
pop
push
xchg
or
xchg
push
test
xor
push
mov
add
add
push
xor
enter
fsubrs
cmc
out
dec
add
imul
je
pusha
push
add
adc
js
mov
mov
mov
mov
orl
jns
sub
nop
stos
adc
clc
js
mov
and
sub
lret
or
lock
jecxz
test
arpl
mov
mov
outsl
andb
test
sahf
lock
in
push
push
lret
dec
add
dec
iret
lods
dec
loopne
xchg
das
cmpb
inc
sbb
xor
scas
mov
adc
in
mov
push
in
iret
dec
mov
call
mov
pop
push
push
jmp
push
fsubrl
add
dec
aad
movsb
cmp
stos
xchg
cmp
dec
lock
and
call
add
test
dec
mov
mov
adc
ret
push
in
push
lea
inc
push
pushf
mov
adc
cs
inc
jmp
mov
int3
adc
loopne
and
loop
dec
out
and
jb
fdivrl
or
ret
sub
mov
cmpsl
inc
mov
mov
jge
ret
add
sbb
fsubrl
push
sub
inc
inc
fistl
fdivrs
mov
jge
mov
cmp
imul
add
out
adc
ret
out
xchg
out
and
nop
cld
dec
pop
cmp
stos
lea
add
mov
mov
jbe
dec
jmp
fsubs
xchg
adc
adc
test
or
or
or
cmp
shl
cmp
rcrb
jp
sbb
jl
xchg
pop
roll
add
push
push
fcom
sbb
insb
mov
xor
sarl
pop
lods
test
bound
gs
xchg
push
or
in
mov
xchg
les
push
push
xor
or
xor
repnz
aam
mov
dec
rorb
and
xchg
inc
in
adc
ss
stos
dec
or
xor
test
mov
jmp
or
inc
jecxz
movb
cmp
cld
or
and
cmp
cld
fisubrs
outsl
test
int
or
nop
fstpt
sub
lods
push
shll
xorl
add
shrb
xchg
mov
gs
js
mov
adc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
mov
test
addr16
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
or
pop
jns
pop
std
mov
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
aas
dec
xor
push
fs
mov
enter
ss
mov
nop
mov
loopne
xor
and
jle
aam
push
sahf
lret
sbb
adc
in
adc
or
js
add
lret
dec
sbb
cmp
and
push
sbb
shlb
pop
repnz
in
and
enter
clc
push
add
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
xor
mov
in
jne
popa
and
add
cmp
cs
in
inc
iret
mov
nop
repz
loope
rol
push
sbb
mov
sbb
movsb
scas
or
sarb
or
mov
mov
sti
mov
fsubrp
or
inc
xlat
or
jmp
mov
mov
faddl
cmpsb
inc
mov
mov
movsbl
cmp
sub
stos
xor
cmp
jb
jbe
push
paddb
popf
mov
push
push
mov
or
dec
xor
cmp
mov
dec
popa
inc
dec
roll
nop
hlt
inc
pop
and
shlb
int3
dec
push
loopne
pushw
sub
sub
sbb
pop
push
ss
inc
hlt
inc
add
jle
mov
push
loope
rolb
fldcw
dec
mov
xchg
test
dec
fcoml
jl
adc
and
cmp
add
mov
fwait
sub
scas
dec
insb
sub
adc
sbb
in
pop
outsl
mov
cmp
jmp
sbb
fcomps
adc
pop
push
shlb
dec
ja
or
inc
scas
adc
sbb
add
repnz
push
cwtl
hlt
call
in
in
add
push
pop
jae
in
or
or
jnp
or
jbe
jae
jae
jmp
or
por
jae
jae
jmp
adc
pop
adc
push
adc
dec
jae
jae
adc
dec
adc
aas
pop
jmp
jae
jae
sbb
xor
jmp
sbb
es
jae
sbb
and
pop
pop
jmp
subb
jae
jmp
and
adc
adc
mov
test
ret
add
rorl
orb
out
and
test
sti
lock
jecxz
repz
repz
sti
add
or
adc
and
repz
sub
cmp
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
pop
enter
add
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
dec
add
movl
pusha
outsb
adc
icebp
jg
popf
dec
inc
orb
and
mov
mov
push
dec
sti
fstpt
xor
lret
imull
loopne
pop
mov
aam
test
in
out
add
pop
add
push
mov
push
sbbb
sbb
xor
or
cmp
lods
cmp
jb
inc
sti
or
cmp
adc
sub
dec
sub
lea
mov
fsubrl
add
lock
daa
lret
inc
test
hlt
pusha
cmp
mov
loop
shll
cmp
add
mov
insl
xchg
shll
mov
mov
jmp
xchg
pop
and
sbb
sbb
iret
mov
call
sub
loop
fcoml
cmp
mov
aam
mov
pop
mov
adc
cmp
je
dec
rclb
cmp
and
jmp
jecxz
mov
mov
dec
nop
inc
jge
mov
inc
mov
mov
add
push
push
xchg
add
xor
test
aaa
push
xchg
push
sbb
pop
push
push
adc
push
xchg
add
xor
push
mov
rol
mov
ror
push
shrl
stos
sti
shr
xor
pushf
sarl
repz
inc
jmp
incb
js
add
dec
adc
iret
or
insl
push
sub
fisttps
and
xor
add
add
div
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rolb
leave
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
mov
push
xor
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
test
add
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
mov
jl,pn
or
cmp
cmp
add
shlb
mov
test
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
push
mov
jb
mov
jge
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
aaa
dec
jle
lea
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
inc
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
add
cmp
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
rorb
xor
jo
in
enter
or
add
dec
cmp
inc
int3
push
es
lcall
add
rcrb
sub
push
scas
push
add
or
and
scas
inc
pop
or
in
aam
data16
xchg
and
sub
pushf
mov
rorl
or
push
add
lds
push
adc
fsubl
push
imul
xor
mov
int3
pop
push
mov
dec
inc
mov
inc
push
movsl
mov
add
or
imul
lods
call
and
cmp
push
mov
push
push
shrb
les
dec
xor
out
pop
add
sub
mov
testb
call
lret
jb
imul
cld
lea
mov
pop
pop
mov
pop
xor
sar
arpl
push
int
orb
loop
incl
lods
movsb
cmc
jnp
rorb
or
or
in
clc
lea
test
insl
fidivl
stos
or
sub
pop
pop
sub
loopne
lea
jmp
arpl
lea
push
sub
xchg
out
data16
mov
ljmp
pop
fimull
pop
jne
pop
and
mov
jge
inc
imul
xchg
fidivrl
aaa
jbe
or
fs
sbbl
insl
cmpl
push
jae
push
pop
rolb
fldl
rep
fimuls
mov
loopne
or
mov
push
pop
fdivp
ror
or
jl
mov
hlt
push
shr
xchg
pop
pusha
test
fistps
sub
cmpsb
pop
push
cmp
inc
pushf
call
mov
insl
jg
loopne
sbb
movb
dec
js
ret
movl
test
mov
popa
enter
cmp
jbe
lods
add
sbbl
cmp
sub
jge
mov
pop
xchg
mov
sbb
xchg
clc
push
ds
in
fildl
mov
daa
lea
imul
cmp
ja
add
mov
or
jbe
mov
stos
mov
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
cmp
mov
pusha
jbe
push
shrb
sti
rcrb
add
pop
mov
push
and
add
pop
pop
popf
and
push
mov
mov
inc
mov
shl
jno
loopne
inc
pop
stos
xchg
icebp
jecxz
popa
test
int
fstps
insl
outsb
je
fwait
push
mov
lock
pop
add
add
xchg
les
lock
insl
push
xchg
dec
in
or
add
mov
pusha
mov
xchg
xchg
pop
rcrl
fstps
sbb
add
sbb
mov
pop
xchg
jne
lretw
out
adc
jae
adc
adc
jmp
mov
xchg
pusha
mov
add
and
adc
push
cltd
mov
rorb
mov
mov
jbe
pop
movsb
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
dec
xchg
mov
add
inc
jne
rorl
cmp
adc
pop
adcl
mov
icebp
mov
loope
cmp
jl
popl
sub
pop
xor
fcom
pop
xor
std
jle
fidivrl
xor
jbe
cli
es
lea
cmp
popa
sti
inc
or
jg
and
or
js
add
sub
or
or
jne
adc
inc
push
aad
lods
das
jp
or
xor
cmpb
stos
jbe
jle
outsl
or
icebp
jl
dec
pushf
sahf
cmp
push
js
sarb
xchg
mov
mov
pusha
and
push
dec
daa
lods
test
stos
inc
ret
jae
movzbl
adc
mov
and
add
inc
js
inc
das
mov
dec
jmp
dec
adc
push
aam
fcomps
add
ss
push
mov
popl
ret
mov
les
inc
and
inc
shll
sbb
sub
xchg
jo
lods
cmp
pop
hlt
lahf
cltd
ja
mov
cmp
test
loopne
sub
mov
sub
mov
clc
push
ret
dec
and
cwtl
inc
bound
xor
xchg
mov
pop
or
add
and
add
and
add
pop
or
outsl
fs
js
jne
adc
push
fsubs
mov
cmc
mulb
psubsb
pop
push
sub
aam
mov
mov
dec
sti
bound
adc
inc
cmpsl
mov
mov
xor
push
dec
dec
sbb
pop
and
popa
xor
and
fiaddl
add
xchg
add
add
fmuls
mov
mov
roll
bound
je
outsl
out
cld
xor
add
sbb
cltd
lock
enter
mov
rolb
or
or
les
adc
mov
add
mov
incb
sbb
add
dec
sub
enter
incl
pop
popa
and
pop
fstpt
dec
and
push
lods
add
jge
push
fsubrl
pop
ja
mov
add
ljmp
push
jmp
outsl
adc
jmp
jle
push
dec
pop
jne
ret
dec
pop
pop
test
idivb
and
fsubrs
data16
sub
je
push
pop
stos
mov
pop
pop
testl
mov
fstpt
arpl
fnstenv
push
sbb
lret
and
ds
push
sub
sbb
xchg
fwait
push
or
imul
mov
sbb
sub
mov
or
aas
or
inc
push
push
ds
push
push
adc
push
aam
mov
test
add
cmp
outsb
push
ret
inc
rcrb
push
repz
out
mov
lock
inc
call
hlt
xchg
inc
dec
inc
mov
shlb
adc
sub
cmp
push
cmp
dec
leave
dec
add
mov
xor
xor
rorb
sub
dec
xorl
dec
inc
dec
cli
push
xchg
sub
push
jno
push
stc
ret
lea
ss
fwait
dec
adc
scas
unpckhps
call
jnp
pop
mov
push
imul
dec
or
test
jae
aad
daa
lods
mov
sbb
sub
sbb
scas
xor
dec
inc
dec
cmp
imul
dec
stos
mov
push
cmp
and
mov
test
cmp
sbb
cmp
adc
mov
sub
imul
xor
shll
cmp
inc
cwtl
je
pop
inc
pop
inc
inc
rorl
pop
or
imul
sub
stc
push
pop
mov
and
loope
jo
add
adc
test
iret
add
cmp
fnstenv
add
lret
shll
ret
sub
dec
mov
pop
fnsave
shrl
push
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
and
loop
cwtl
lds
xchg
movsl
sahf
les
xorl
add
push
and
jb
and
push
xchg
es
adc
sbb
sbb
mov
data16
enter
adc
shlb
mov
lock
or
fld1
sub
mov
fimull
push
hlt
ss
cmp
push
jbe
xor
xchg
dec
sub
ljmp
ret
jb
cmpsl
in
je
mov
in
add
cmpl
adc
and
dec
sbb
lods
ja
adc
dec
cmp
scas
jae
add
xor
je
clc
ja
adc
ljmp
push
test
hlt
pop
scas
stos
roll
inc
ja
push
mov
ror
sbb
xchg
xorl
call
mov
dec
inc
mov
xor
jmp
mov
wbinvd
lcall
stc
adcl
and
adc
ds
lds
mov
xor
dec
sbb
xor
or
or
cmpsb
xchg
pop
into
mov
mov
push
xor
push
arpl
mov
xlat
lods
mov
dec
dec
ds
repnz
je
sti
sub
and
arpl
fsubs
imul
and
mov
xor
lcall
mov
ss
jns
dec
jnp
mov
push
inc
and
push
push
or
add
and
and
jg
mov
fldenv
jp
lcall
mov
and
push
and
scas
jb
test
rol
xor
add
rcrl
das
pop
pop
lea
nop
adc
add
and
loop
or
dec
add
xorb
jmp
dec
rcll
imul
and
dec
loop
rolb
pushf
mov
in
cld
mov
sbb
sbb
pop
add
pop
and
xor
fcmovne
leave
sbb
xor
int3
xor
movb
dec
jno
pop
data16
inc
push
cltd
or
out
mov
out
popf
pop
shrb
js
jle
jecxz
es
or
lea
pop
popf
insb
imul
or
mov
adc
push
xchg
adc
or
mov
or
and
cmpl
jne
xchg
mov
cmp
fstl
sti
push
dec
cmp
and
mov
addr16
fldl
and
sbb
fsubr
test
and
and
les
add
das
mov
dec
pop
cmp
je
cmp
pop
sbb
dec
bound
xchg
dec
cwtl
sub
dec
inc
leave
xor
jbe
sbb
jge
xchg
popf
mov
and
xchg
cwtl
int
test
fimull
dec
pushf
popl
mov
sbb
and
jle
sub
sbb
add
test
mov
or
aam
inc
fstpl
or
fisubrl
bound
stc
or
push
mov
pop
fidivrs
xor
push
stos
stc
inc
pop
sbb
xor
ret
sub
push
repnz
fwait
arpl
lods
sbb
mov
pop
mov
stos
or
mov
sbb
enter
and
push
loop
jp
mov
insl
push
addb
cs
je
or
mov
repnz
push
inc
pusha
cmp
pop
cmp
jo
fadds
push
push
or
mov
pushf
les
adc
mov
sbbb
mov
std
push
push
rorl
je
cmp
add
fwait
inc
out
sub
push
cmp
jge
mov
pop
adc
inc
ds
inc
lock
lea
icebp
push
aam
pop
js
or
loopne
nop
clc
add
lahf
shlb
sbb
clc
clc
cld
or
and
movl
and
add
xor
lret
add
push
and
out
or
mov
je
add
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
gs
and
mov
js
lock
mov
adc
outsl
cmpsb
adc
mov
pop
push
jnp
je
push
add
loop
dec
push
and
mov
dec
mov
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
dec
xor
jnp
add
xor
add
sub
testb
xor
inc
adc
inc
jmp
sbb
lds
sbb
ret
cltd
idiv
inc
inc
imul
addb
ljmp
add
mov
xchg
add
xchg
fwait
addb
push
add
or
cmp
add
mov
cmp
or
mov
adc
push
push
cmp
cmp
cmp
je
cmpsl
inc
xchg
imul
inc
test
jmp
daa
pop
rol
inc
test
push
cmp
shlb
les
scas
inc
or
pop
inc
sub
ljmp
cmp
jae
call
lea
jmp
mov
stc
lcall
arpl
lock
adc
cmp
je
cmp
push
cmp
mov
add
into
and
jb
push
rol
or
inc
bound
mov
dec
adc
das
mov
push
mov
add
fnstcw
movaps
dec
add
popl
loopne
loop
cmp
mov
push
and
sbb
loopne
adc
sub
push
push
insb
dec
add
mov
sbb
call
jl
push
ficompl
or
jg
mov
jmp
and
jb
xor
inc
push
and
mov
in
mov
add
shl
dec
mov
sub
mov
cltd
movsb
mov
out
mov
inc
ss
jg
stc
lret
int
imul
and
adc
cli
outsb
inc
sub
loop
push
rcrl
add
mov
aad
push
es
out
mov
jle
and
add
pushl
insl
push
sarl
sub
inc
cmp
pusha
mov
jg
in
cli
popa
mov
imul
mov
inc
mov
roll
daa
mov
lcall
addr16
dec
mov
jmp
add
mov
ljmp
pop
das
outsl
xchg
inc
movsb
xor
xor
fsubs
inc
cmpb
arpl
pop
pusha
addl
filds
pop
call
out
jmp
xor
mov
les
xor
xor
mov
push
add
pop
dec
add
mov
mov
das
in
ja
pop
ucomiss
jg
push
shrb
dec
cmp
cmp
out
adc
xor
cli
and
and
fwait
mov
cmp
in
je
roll
cmpsb
pcmpeqb
or
and
mov
mov
push
clc
ja
mov
arpl
hlt
add
or
or
jne
mov
mov
sti
imul
faddl
packuswb
imul
je
xor
push
sbb
sub
or
rcrl
shr
xchg
mov
addb
adc
dec
xlat
ret
in
test
sbb
subl
and
push
mov
imul
in
int3
mov
or
dec
imul
cwtl
xchg
mov
test
mov
js
or
sbb
push
fucomip
pop
js
lock
sub
jge
jne
push
add
pop
sub
or
push
sbb
pop
imul
adc
mov
movsl
push
sbb
inc
shlb
je
jo
les
sub
sub
pop
data16
popf
popf
shrb
and
mov
rorb
adc
test
jp
pop
inc
xor
push
adc
data16
or
mov
rolb
mov
xchg
fnsave
mov
xor
mov
mov
adc
es
xchg
subb
push
mov
sbb
jl
popa
mov
push
pusha
pop
sarb
enter
daa
test
rcrb
pop
xchg
mov
push
movb
or
jo
xor
std
dec
imul
inc
incl
cmp
xadd
or
dec
cmp
leave
or
xor
imul
inc
inc
xorps
and
xor
pop
stc
sbb
adc
nop
jnp
xor
add
inc
ds
cmp
dec
ret
popa
xchg
outsb
mov
push
push
popf
mov
movl
or
push
je
lcall
sub
dec
adc
mov
lea
push
outsl
pushf
sub
or
and
inc
cwtl
jmp
jmp
push
and
loopne
inc
mov
add
cmpb
jne
mov
fincstp
mov
sub
jnp
pop
and
sbb
data16
imul
or
dec
ret
sbb
and
inc
popf
notb
add
lods
sub
lcall
mov
es
sub
dec
aad
cmp
dec
push
xchg
inc
aam
push
xchg
mov
es
push
ja
lret
rolb
cmp
inc
xor
inc
sub
pop
sbb
dec
pop
sbb
ja
int3
pusha
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
cmp
jmp
pop
push
xchg
sub
mov
lcall
xchg
divb
ret
inc
insb
je,pt
inc
add
and
loopne
xchg
shrb
mov
pop
dec
mov
inc
mov
dec
and
pop
cmp
test
cmp
or
leave
dec
out
xor
add
std
lock
clc
push
mov
adc
jbe
adc
cmp
cmp
insb
sarb
addr16
cmp
shll
aad
push
jo
lock
lock
or
sbb
das
aam
in
shlb
adc
xchg
pop
mov
js
inc
mov
loopne
inc
xor
cli
xchg
sub
add
ror
jne
arpl
inc
push
cmp
rcl
mov
addr16
lahf
and
in
pop
and
outsb
test
sbbb
mov
add
pop
inc
or
addr16
aam
imul
leave
add
fcmovb
lret
sahf
gs
sbb
mov
push
jae
cmp
and
xor
in
sbb
test
xor
call
jmp
push
dec
xor
xor
mov
adc
dec
ret
xlat
aam
and
test
sahf
popa
lea
push
push
or
add
mov
adc
hlt
sub
testl
jae
cmp
inc
ljmp
mov
mov
pop
arpl
push
xor
jne
and
lea
and
pop
mov
out
inc
rolb
arpl
rclb
or
push
dec
cld
minps
dec
add
jmp
cmp
std
lcall
push
inc
add
adcl
jg
fcoml
test
mov
dec
sbb
sub
add
sbb
pusha
js
daa
movsb
mov
pusha
and
pop
inc
movq
push
jecxz
add
cmpl
or
jmp
push
adc
mov
or
sbb
xor
xchg
mov
push
mov
ljmp
jne
fimuls
push
add
jnp
xchg
add
or
in
push
mov
add
add
sbb
cli
iret
test
out
add
xorl
fcomps
inc
stc
cmp
out
sbb
inc
fsts
sbb
or
pop
xor
or
and
movsl
add
or
add
push
bound
jg
fldenv
jns
movsl
xor
loop
inc
dec
sbb
jecxz
mov
data16
jp,pt
ror
leave
mov
pusha
sbb
fcmovne
je
mov
lods
add
enter
pop
jne
cmp
sbb
and
cltd
pop
sbb
pop
push
xchg
adc
test
mov
sbbb
push
rcl
xor
cs
pop
sahf
stos
push
lea
sbb
in
shlb
or
inc
mov
mov
cmp
ret
addr16
loope
add
xchg
mov
pop
push
loopne
jle
dec
inc
ss
dec
push
adc
cmc
in
sbb
fdivl
cmc
jno
or
dec
in
lods
invlpg
and
or
cmp
insb
into
subl
rol
pop
dec
mov
mov
lock
gs
cmp
xor
je
dec
mov
mov
push
loopne
sbb
sub
fcmovnbe
xor
xor
add
mov
sbb
lea
pusha
and
jns
in
adc
xor
pop
inc
sahf
or
xor
lock
pop
ret
push
loop
push
jp
ret
bound
mov
sub
mov
imul
push
fmuls
cmp
xchg
add
and
ss
enter
fsubs
js
test
pop
or
dec
fs
insb
repz
xchg
cmpsb
or
movsb
push
or
aaa
pop
out
mov
pop
call
mov
int
in
outsb
popf
cwtl
lock
sub
adc
xor
cmp
test
push
cli
inc
push
and
adc
sbb
adc
or
daa
movb
movl
add
or
mov
xor
and
and
enter
add
shll
adc
or
sbb
pushf
push
test
mov
xlat
pop
add
int3
xchg
pop
push
push
add
mov
sub
aam
loopne
adc
add
push
rcr
enter
push
test
or
dec
sub
fsubl
pusha
xchg
ss
cmp
call
xchg
push
fadds
fadd
and
pop
pop
js
dec
dec
sbb
or
push
arpl
inc
mov
sub
and
sub
or
std
out
mov
lds
pushf
mov
rcll
fwait
test
fbstp
sub
and
fbstp
push
xor
mov
jecxz
mov
es
cwtl
cmp
add
ss
cmpsl
dec
xor
cmpl
sbb
mov
pop
sub
and
test
jle
mov
jmp
cs
pop
sub
dec
test
jmp
inc
inc
call
or
adc
mov
fmuls
jo
inc
and
inc
xchg
imul
incb
ds
das
pop
push
ret
outsl
cltd
les
nop
jge
jecxz
pusha
mov
and
adc
jbe
jne
popa
dec
rorb
and
or
and
pop
add
leave
lds
test
fistpl
jb
bound
push
pop
nop
xchg
inc
ficompl
pusha
add
insb
jl
lea
inc
xor
push
or
popa
stos
push
lret
fistl
or
jbe
and
push
cwtl
or
ds
je
adc
movb
imul
out
jmp
adc
dec
insb
mov
movl
outsl
jo
dec
cmpl
sti
or
or
and
cmp
sub
shlb
mov
add
ja
repz
cmp
mov
fs
out
test
add
inc
or
or
dec
sub
xchg
into
js,pt
push
cli
es
pop
dec
adc
push
pop
pop
mov
adc
xchg
mov
inc
mov
sbb
inc
clc
inc
cmpsl
jo
cld
out
daa
cld
cmp
rcll
movsb
pop
and
aam
or
sbb
mov
add
and
xor
adc
loopne
mov
sbb
loopne,pt
pop
pop
into
inc
jne
pop
push
inc
add
scas
jae
mov
pop
or
sbb
or
sub
rcll
mov
out
jne,pt
xchg
xor
sub
mov
mov
jmp
mov
jecxz
lea
test
or
hlt
lret
dec
pop
dec
mov
dec
xlat
adc
fwait
pop
sbb
insb
adc
sbb
inc
xor
mov
jmp
dec
mov
add
mov
testb
jbe
and
mov
cmp
dec
loopne
ret
loopne
mov
js
push
adc
aaa
je
inc
sub
loopne
jmp
and
mov
arpl
cmpsb
mov
movsl
push
call
dec
sub
and
jl
jp
cld
or
rcrb
cmp
add
xor
push
repz
out
pop
xchg
scas
adc
pop
inc
add
jnp
cmpl
push
and
scas
jae
cmp
pop
xor
fisttpl
xchg
or
adc
orb
push
hlt
sub
fcoml
push
and
adc
pop
add
ret
gs
xchg
loopne
push
pop
mov
inc
rolb
call
or
and
cwtl
inc
shlb
mov
ss
dec
and
pop
ljmp
imul
shr
add
leave
data16
mov
dec
xor
adc
mov
and
cmp
jb
sbb
push
inc
add
fisttps
jmp
popa
adc
fcmovb
jo
pop
mov
xchg
repnz
aaa
cltd
sub
addr16
push
sbb
sti
jb
adc
sub
insb
aam
jmp
jae
cmp
ja
pop
adc
xchg
scas
shlb
cwtl
insb
pushf
loope
lret
or
sbb
lods
xchg
xor
fdivl
bound
aaa
lea
lods
movsl
and
cmp
jnp
clc
pop
loop
adc
or
cli
jmp
inc
ja
push
js
and
add
lds
mov
testb
lcall
adc
cmp
inc
movsl
mov
lock
dec
les
mov
mov
loopne
push
loopne
cmp
insl
loopne
faddl
testl
insb
gs
addr16
and
push
xchg
push
push
cwtl
subb
inc
add
add
push
adc
dec
xchg
adc
xchg
inc
mov
xor
shrl
pop
cmp
inc
dec
test
inc
push
mov
fs
repz
pusha
arpl
adc
imul
or
in
xchg
mov
fiaddl
xor
arpl
sbb
push
and
fcoms
mov
ret
or
cmp
cmpsb
add
or
andb
fcmovbe
aas
pop
cmp
add
cs
in
or
nop
shr
add
adc
sub
mov
ja
inc
jmp
es
lods
gs
les
push
and
imul
cmpsb
mov
in
daa
or
sbb
popa
inc
pop
xorl
sar
dec
ret
insl
xor
pop
jae
sbb
mov
inc
push
mov
add
mov
cld
sbb
cmpb
sub
xchg
and
in
jb
and
outsb
loopne
inc
jno
push
or
dec
xchg
subl
ret
les
popf
pop
jb
cmp
repnz
enter
sub
je
pop
add
jbe
mov
pop
out
mov
pop
in
pop
xchg
push
push
push
mov
test
int
or
push
aaa
ds
jg
cmc
xchg
cmc
pop
dec
sbb
or
mov
out
dec
lret
inc
mov
pop
mov
cmp
movsb
mov
and
stos
imul
xchg
push
and
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
sub
hlt
and
jmp
push
addb
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jl
jmp
das
js
pop
adc
lret
movl
xlat
add
inc
jae
inc
inc
or
or
push
mov
test
inc
cwtl
sbbl
push
inc
ret
daa
inc
and
inc
inc
xchg
mov
xor
test
lcall
js
or
or
or
dec
jo
test
mov
xchg
or
adc
sbb
sub
scas
lods
inc
mov
xlat
sub
sub
inc
jo
ljmp
inc
dec
out
push
and
cmp
rorb
loopne
jecxz
jno
mov
in
or
push
bound
xor
data16
xchg
xorb
push
inc
pop
andb
imul
dec
shll
mov
inc
je
cmp
jne
push
mov
out
mov
mov
lret
jne
mov
ds
cmp
push
in
js
in
dec
mov
inc
push
xor
pop
testl
inc
or
inc
sub
ljmp
xchg
jmp
lods
push
dec
or
adc
inc
popf
fidivs
cli
push
adc
popf
dec
jo
sub
or
lea
nop
add
mov
in
mov
xchg
cmpb
mov
andl
into
mov
fisubl
in
fistl
jo
orl
or
add
or
push
movsb
pop
push
adc
jecxz
and
jbe
lahf
xchg
cmp
push
shlb
adc
sub
shrl
or
fidivl
bound
sahf
add
adcl
das
pushf
data16
mov
test
dec
jle
int3
add
rcr
and
add
imul
or
or
push
cmpl
add
cmp
jb
neg
les
sbb
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
aaa
and
push
rep
mov
dec
ljmp
ret
or
insb
push
icebp
dec
inc
add
shrb
cltd
mov
outsb
mov
sbb
daa
rorl
or
ja
inc
push
push
jne
sub
rep
lea
inc
xor
test
out
mov
aaa
jle
or
add
pop
scas
adc
mov
outsb
aaa
adc
pop
push
pop
and
sbbb
stos
js
mov
fnstcw
xor
and
ljmp
fs
pusha
jmp
xlat
mov
movapd
das
mov
out
clc
jae
xor
jle
xor
cli
shlb
lret
je
cmp
jge
push
jge
repz
or
jg
ljmp
adc
jnp
mov
sub
aam
ret
or
js
je
clc
adc
sbb
fisubrs
ret
mov
lock
mov
mov
shl
pop
enter
scas
int
add
sbb
dec
sahf
repnz
sbb
mov
pushf
push
mov
leave
iret
into
mov
or
movsb
and
std
xchg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
lret
mov
lcall
xchg
rol
std
add
cwtl
sbb
rolb
and
mov
push
and
ficoml
dec
pusha
sti
push
dec
subb
add
cmpsl
adc
jg
jb
sbb
cmpsb
add
pop
std
mov
push
sub
shrb
lock
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
fiaddl
pop
jo
mov
inc
inc
into
pushf
and
loope
adc
and
or
mov
cmp
ljmp
push
gs
in
add
into
clc
jmp
mov
sbb
dec
xor
outsb
xchg
mov
dec
xor
pi2fw
add
or
in
fisttpl
leave
mov
dec
bound
adc
mov
mov
dec
dec
jo
jno
adc
xchg
adc
push
fstpl
cmpb
jns
sbbb
aad
jmp
sbb
inc
push
test
inc
aaa
icebp
mov
pushf
fsubs
push
sbb
movb
dec
cmp
sbb
pushf
pop
addr16
sbb
sbb
sbb
sub
xor
sbb
call
test
jb
rcrb
dec
iret
movl
pop
out
mov
xchg
dec
incl
push
frstor
pop
and
jp
cmp
jmp
scas
fwait
add
pand
out
pop
lods
fwait
inc
testb
or
divl
orl
fwait
jmp
push
jb
push
xor
aam
mov
lret
jle
sbb
out
int3
divl
or
scas
pusha
inc
adc
add
xchg
sub
dec
sbb
inc
int3
mov
sbb
clc
sahf
inc
mov
push
add
je
push
or
lock
sub
fdivrl
bound
inc
sub
mov
or
pushf
test
push
pop
dec
inc
mov
dec
jb
push
push
rolb
call
out
lretw
pop
add
mov
je
pop
sarb
and
ret
add
je
jae
sbb
lods
enter
dec
and
pop
out
clc
lods
push
cmp
jns
adc
pop
cmp
add
loopne
jmp
xor
loop
pop
enter
mov
mov
dec
add
rcrb
mov
loopne
movsb
adc
pop
cwtl
add
imul
paddsb
inc
scas
icebp
pop
inc
inc
mov
xor
rolb
out
jne
insl
cmp
add
aad
sbb
icebp
outsb
loop
and
cmp
imul
add
testb
je
inc
mov
cmp
or
testb
es
loope
or
cmp
jne
aaa
aam
les
jb
xor
mov
mov
jne
inc
aaa
push
lds
inc
xchg
fcomps
mov
push
loope
and
je
push
mov
fs
pop
mov
mov
inc
stos
inc
xchg
jge
mov
add
cmp
sbb
and
or
jl
cmp
and
add
pop
jne
call
movsl
test
cld
jg
push
cmp
jb
rep
jmp
cmp
xlat
dec
mov
mov
add
test
lea
sahf
sti
ficoms
or
mov
shrl
pop
sub
data16
or
lods
adc
enter
lea
dec
add
dec
cmpsb
nop
inc
xor
fiadds
mov
or
stc
cmp
repz
sbb
or
cld
gs
jmp
in
inc
in
call
sahf
in
in
lock
hlt
or
clc
cld
popa
clc
and
loopne
fs
add
sbb
jns
cmp
pop
push
fs
imul
xchg
xor
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
fsubl
push
neg
adc
mov
enter
pop
nop
lock
movups
fiaddl
jl
pop
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
xor
insl
out
mov
jns
fwait
cwtl
mov
or
push
mov
out
mov
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
xchg
lods
clc
fsubrp
or
push
add
sbb
sub
add
push
inc
pusha
mov
daa
ja
xchg
je
cltd
push
jl
sbb
stos
jae
adc
das
jmp
imul
add
je
sahf
or
jno
jg
sbb
cmp
jae
sub
stos
test
call
xor
cmp
mov
sub
push
mov
or
sbb
dec
iret
sbbb
xor
push
cltd
adc
loopne
subps
cmp
bound
and
cmp
loop
mov
pop
fists
daa
ret
xor
or
iret
adc
mov
cmp
xor
lds
inc
test
enter
cmp
mov
add
mov
cmp
fbld
pop
sub
push
sub
test
mov
jbe,pn
push
btc
mov
cmp
and
or
mov
dec
adc
cltd
pop
lret
sbb
cmp
fs
or
js
loope
pop
fisttpl
jle
inc
sbb
mov
popa
mov
sub
push
dec
push
jbe
sub
pop
mov
jle
cmp
pushf
mov
cmp
pop
push
push
cmp
add
jmp
in
mov
cmp
jne
push
adc
or
add
mov
adc
sbb
and
add
shll
cmp
clc
cmp
lods
ds
inc
test
xchg
push
push
add
inc
movsb
es
and
cs
xor
push
jne
cmp
addr16
hlt
dec
pop
pusha
inc
out
or
xor
mov
cmp
push
inc
pop
ljmp
adc
fnsave
mov
rorl
loop
mov
call
dec
and
fcoms
iret
shrb
pop
mov
adc
pop
movb
lret
loopne
xor
aas
dec
jns
xchg
xlat
pop
mov
shlb
adc
and
fbld
or
fnsave
or
loope
pop
xor
inc
fdivl
add
shll
shlb
xchg
inc
daa
lock
loope
cmp
pop
mov
lea
mov
in
xor
mov
clc
push
push
and
out
jb
add
mov
mov
enter
mov
sub
call
out
xlat
adc
add
pop
lea
sbbb
add
jg
pop
inc
shll
loopne
js
push
and
pop
ljmp
fwait
mov
jmp
push
sub
loopne
dec
inc
out
jl
inc
cmp
jecxz
pop
dec
or
popf
icebp
lds
or
pop
call
sub
mov
adc
push
cs
mov
mov
aaa
pop
sbb
add
push
xchg
or
test
inc
fcoms
sub
fnstsw
sbb
mov
or
mov
adc
sbb
jp
orl
fadds
lock
sbb
cld
jb
jae
inc
ljmp
xor
add
and
and
clc
es
add
sbb
jmp
lods
mov
jo
pop
loopne
adc
jmp
test
jp
mov
clc
cmp
xorl
ja
ret
jbe
inc
in
add
xor
add
and
pushf
pop
or
and
add
imul
pop
es
aam
test
out
pop
pop
or
mov
cmp
add
rcrb
add
or
cmpb
pop
push
rolb
mov
add
inc
xchg
cmp
add
cs
add
push
sbb
add
loopne
pusha
scas
pop
and
xchg
push
adc
hlt
or
jb
jp
push
pop
add
pusha
sbb
xchg
roll
movsl
add
sbb
add
or
insb
sbb
xor
inc
dec
push
iret
rep
fnop
inc
sbb
test
shl
mov
cmp
ret
cwtl
shll
or
mov
cld
xorb
dec
in
inc
cmovae
jno
out
shlb
enter
or
rclb
pusha
mov
inc
es
loopne
frstor
rol
mov
aam
ret
ds
iret
repnz
add
adc
or
js
daa
dec
jne
mov
xchg
jmp
ds
icebp
inc
sub
adc
dec
push
push
ret
dec
jne
mov
fadds
adc
loope
sbb
push
orb
mov
pusha
sti
enter
adc
stos
movsl
std
adc
bound
ret
rolb
cld
push
outsb
into
add
ljmp
sbb
push
cmp
jne
mov
rcr
mov
jne
es
pop
int
int
and
adc
or
mov
jne
add
jb
jmp
push
inc
incl
dec
into
repz
cmp
inc
div
sub
xor
cld
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
test
xchg
push
out
pop
mov
pop
mov
repnz
cli
adc
and
push
adc
add
inc
mov
out
dec
subb
dec
sub
and
ljmp
or
pop
inc
loopne
int
xor
or
movl
xor
and
add
and
or
inc
push
or
and
movsb
xchg
mov
pop
orl
in
or
dec
fs
gs
int3
ss
push
ret
mov
pop
add
xlat
push
mov
and
dec
jnp
and
jg
sub
mov
je
mov
rorb
cmp
jg
add
inc
sub
add
scas
cltd
les
je
decl
pinsrw
push
push
push
pushf
mov
mov
call
inc
mov
out
movsb
or
dec
fs
loope
sub
inc
dec
add
lea
pop
mov
inc
push
add
mov
fwait
jmp
inc
mov
pop
mov
mov
sub
and
pop
mov
mov
imul
or
dec
mov
add
mov
add
push
shlb
ficoms
aas
mov
push
rcrb
call
popa
xchg
out
sbb
push
mov
pushf
in
hlt
mov
or
pop
jecxz
sbb
pop
push
insb
adc
xchg
or
adc
add
sub
or
movsb
sbb
fdivs
outsl
sub
ja
add
not
and
sub
shrb
outsb
cmp
or
imull
sbb
inc
clc
sbb
cmp
xorb
mov
lahf
lock
xchg
inc
add
inc
sub
int3
cwtl
cmp
ja
jne
lcall
push
lcall
xchg
jmp
stc
and
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
jge
xchg
loope
sbb
scas
cld
fwait
jmp
mov
add
mov
inc
cmp
jb
add
jae
mov
dec
rolb
inc
mov
lods
mov
or
ret
push
jb
or
pop
testb
cld
into
shl
xlat
adc
add
jmp
lcall
jmp
fadds
outsb
outsl
andb
mov
mov
into
and
xor
dec
stc
and
xor
add
iret
xor
jo
and
ljmp
add
out
jne
or
insl
ret
inc
cld
jl
rolb
pop
ss
cmp
je
cmpsl
add
or
add
jns
adc
xchg
pop
movsb
push
imul
std
cld
sbbl
add
les
fidivl
and
out
xor
lock
js
jl
in
mov
call
inc
or
jl
and
lret
aaa
dec
xchg
adc
add
pusha
es
xor
sbb
inc
arpl
add
pop
mov
inc
jmp
cmp
mov
add
add
sub
or
and
stos
mov
adc
cmp
cld
push
xor
popf
push
in
adc
hlt
js
or
mov
adc
in
jne
int3
cmpsl
mov
add
mov
sbb
sbb
lods
adc
mov
test
push
mov
sub
mov
and
je
lret
sbb
push
incb
je
lea
push
sub
shrb
lock
or
cmp
cwtl
sub
add
and
push
mov
sbb
rclb
mov
adc
shl
cld
std
mov
sbb
adc
lds
xchg
sbb
mov
es
xorl
add
subb
jmp
adc
in
ret
push
mov
mov
scas
cmp
adc
xor
jne
test
shl
or
or
inc
mov
dec
jne
fs
add
add
rorb
adc
mov
addb
movsb
aas
es
mov
mov
add
jp
push
popa
push
inc
pop
push
movsb
adc
orl
cmp
add
add
es
dec
pop
mov
call
icebp
sbb
cmpb
adc
notl
pop
xor
adc
ljmp
jne
jbe
add
imul
jno
les
nop
mov
adc
adc
icebp
lea
push
adc
in
mov
js
pop
dec
ss
adc
repnz
enter
inc
jle
xor
mov
mov
mov
mov
imul
and
inc
je
sti
sub
push
pushf
xor
pop
adc
mov
minps
sub
jne
or
pop
fildl
jno
lds
repz
xlat
movsb
mov
mov
cmp
push
dec
inc
enter
popa
xorb
or
push
aaa
in
in
inc
stos
xchg
xchg
push
int3
mov
and
sub
dec
ja
or
out
jmp
mov
test
jbe
push
pop
cli
mov
add
cld
add
mov
jo
dec
aam
stos
push
or
pop
pop
jp
cs
cmp
nop
clc
in
inc
jb
hlt
xchg
insl
movsl
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
call
add
fdiv
dec
cmp
repnz
mov
inc
shlb
add
daa
fidivs
fcomps
push
clc
rcrb
cmp
or
out
inc
xor
gs
rcrb
cmp
adc
aam
stos
add
push
push
clc
ljmp
sbb
insb
push
dec
loop
or
add
sbb
dec
jle
mov
les
pop
jp
in
ja
btr
outsb
mov
and
push
push
xchg
pusha
dec
jns
add
adcl
dec
shrb
outsb
inc
les
jmp
movl
outsl
int
loopne
jne
dec
clc
in
push
fmull
je
push
insb
push
data16
pop
mov
cmp
pop
addl
jle
dec
xor
or
jne
pop
shrb
in
jo
pcmpeqd
hlt
push
mov
idiv
decl
mov
stos
mov
add
pop
stos
push
jne
and
popa
push
mov
pusha
add
xor
adc
rcll
xor
shrl
sub
ficoml
dec
loopne
dec
addr16
xchg
cmp
push
imul
mov
daa
xchg
mov
inc
in
push
loop
mov
in
add
mov
outsb
loop
xor
push
in
sbb
sub
jle
adc
or
repnz
sahf
out
hlt
add
or
inc
ficoms
test
mov
ret
cli
xchg
loopne
mov
int
lock
rolb
jecxz
add
call
stos
mov
fists
cmpsl
sub
mov
and
sbb
adc
xor
test
xlat
jecxz
cmp
cmp
repnz
aaa
sbb
pushf
iret
inc
adc
push
push
sbb
pop
inc
xor
idiv
adc
setge
add
subl
adc
in
sbb
dec
sbb
popa
dec
ret
hlt
call
sti
aam
jmp
dec
je
add
or
jp
cli
dec
jne
push
pop
jae
push
or
imul
insl
sbb
add
jmp
sub
push
lea
push
cltd
fdivs
or
adc
cmp
push
icebp
fbld
push
ljmp
test
adc
mov
idiv
push
add
cmp
cmp
xchg
in
push
ds
jne
push
jb
addr16
add
dec
orb
mov
por
jmp
xchg
test
adc
cmp
and
sbb
add
cmovp
pop
jns
mov
or
jo
inc
adc
imulb
add
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
jno
jae
push
mov
sub
movsl
push
mov
pmuludq
mov
loopne
sub
push
mov
push
fmuls
inc
push
adc
enter
rol
cmp
sahf
jae
sub
or
or
add
movl
sub
jl
adc
push
sbb
pop
scas
mov
loope
mov
out
jo
ss
cli
xor
lea
sub
fmuls
mov
sbb
mov
add
adc
imul
dec
fstl
ret
rcr
test
adc
clc
shrb
je
or
dec
and
sbb
shl
sti
repz
add
jle
fldl
push
pusha
ss
xor
rorb
jnp
xchg
and
dec
js
sbb
enter
addr16
sbb
loopne
xchg
push
pop
int
add
fs
mov
decl
das
scas
pushl
shl
or
push
add
lcall
pop
jbe
lcall
dec
push
pop
sub
adc
xorb
jge
hlt
cmp
push
dec
push
xor
sub
outsl
mov
jo
xrstor
into
cmp
lret
push
push
add
imul
jmp
inc
lods
push
test
pushf
movsl
stos
sbb
xorb
or
cmp
jecxz
mov
rcr
xchg
cwtl
loopne
add
push
shll
pop
push
push
mov
add
inc
cmp
sti
cmp
adc
stc
xchg
clc
push
mov
stc
mov
sub
cs
cmc
mov
notb
imul
add
sbb
jge
sub
sub
pop
adc
in
cmpsl
je
cmp
arpl
daa
das
adc
sbb
push
subb
cmp
outsb
test
jmp
dec
or
mov
cltd
pop
inc
mov
lds
adc
out
imul
inc
or
clc
sbb
rcrb
mov
xor
push
ljmp
insl
push
popf
add
adc
push
ret
shll
push
mov
and
jg
add
xchg
rol
add
stos
xor
mov
imul
mov
lret
inc
dec
mov
jo
inc
cmp
fiaddl
stos
adc
test
pushf
out
cmc
shr
adc
in
fadd
and
or
dec
cli
push
orb
pushl
lea
lret
mov
mov
mov
fs
cwtl
mov
push
push
insb
xorb
stos
xchg
cmp
cltd
xchg
jnp
mov
inc
sbb
cmp
adc
sbb
in
test
sti
ljmp
pop
movsb
adc
stc
cmpsb
mov
movsb
sbb
inc
sbb
mov
sub
outsl
in
pop
cmpsb
rolb
pop
mov
sbbb
movsb
jb
jge
call
cmp
and
les
jp
adc
imul
dec
cmp
lahf
push
and
jmp
adcb
lret
lcall
jbe
adc
insb
xchg
ficoms
subb
dec
cld
jmp
sbbb
out
mov
mov
sub
and
inc
push
je
fs
loopne
mov
sbb
add
xchg
sbbl
out
lea
cmpb
mov
dec
dec
call
or
inc
push
lock
sbb
adc
popa
daa
insl
loope
jmp
pop
xor
test
xchg
cmpb
mov
or
rcrl
repnz
sub
or
lock
fsubrl
inc
sub
jmp
in
mov
dec
mov
adc
test
jecxz
je
scas
cmp
fisttpl
cmpl
fs
cmp
jl
add
imul
popl
push
mov
inc
aad
xchg
xchg
out
dec
lret
mov
pop
mov
push
aad
mov
daa
and
add
add
lcall
add
mov
sarb
inc
jl
repnz
push
in
adc
xor
mov
mov
lods
dec
push
cmp
fldl
pushf
xchg
mov
and
iret
test
lcall
ud2
sbb
jmp
lds
clc
mov
pop
in
jb
nop
or
pusha
loop,pn
cmp
jo
xchg
push
mov
popa
mov
sub
jmp
jns
mov
push
and
xor
inc
jl
cmp
nop
jmp
mov
or
bound
pushl
movsb
cmp
ret
imul
nop
test
or
cmp
sbb
pop
sbb
cmpl
cmp
pop
inc
icebp
sbb
roll
testb
jne
pop
stc
sbb
or
xchg
mov
add
cli
pop
insb
add
mov
inc
mov
sar
testb
jne
push
sbb
fnstenv
loopne
lea
jge
mov
and
outsb
jne
daa
add
adc
stos
mov
movsb
outsl
pop
mov
test
mov
push
hlt
sbb
lods
addr16
add
sbb
popf
push
mov
cltd
or
jmp
idivb
cmpl
fbstp
dec
test
mov
xchg
pop
jns
orb
inc
mov
xchg
mov
loop
pop
pusha
adc
and
mov
ret
push
add
out
mov
data16
or
dec
testb
movb
or
subb
cmp
test
andl
inc
loopne
test
push
cmp
jo
lcall
fcom
cli
and
sbb
mov
mov
out
adc
mov
rorl
inc
and
add
lods
jo
jb
test
pop
std
movb
jmp
mov
xor
sub
std
add
fmull
rolb
push
push
push
adcb
mov
cmp
loopne
xchg
push
dec
pop
cmp
mov
mov
push
mov
or
or
repnz
ret
sbb
repnz
dec
pop
leave
adc
and
and
nop
mov
in
test
addl
cwtl
out
iret
lret
xchg
xor
mov
lret
lret
or
test
iret
sub
mov
lods
movsb
mov
test
mov
mov
movl
cmp
es
and
dec
stos
inc
sarb
mov
dec
mov
test
loopne
sbb
call
out
cmpsl
cltd
dec
sub
push
aad
pushf
fmull
xor
lock
inc
add
mov
dec
je
shlb
ss
cld
sub
shlb
sbb
jo
movsb
xchg
andl
cmp
movsb
mov
jo
pop
push
xor
in
and
loopne
fsubl
gs
fcomps
int3
das
das
mov
or
test
insl
cmp
das
movsl
shrb
mov
ret
or
pop
add
hlt
fisttps
xor
aaa
dec
cld
xor
mov
adc
adc
and
xchg
xor
insl
push
jne
adc
dec
stos
repnz
jmp
aad
iret
or
in
and
mov
pop
adc
inc
test
mov
pushl
sbb
pop
incl
sbb
int3
inc
xchg
pushf
xor
add
in
adc
movsb
jne
and
push
push
aas
popa
sub
or
dec
or
jne
jp
xchg
xchg
test
cltd
jecxz
mov
push
mov
test
jge
out
mov
mov
adc
or
mov
jbe
push
inc
fisubrs
aam
sub
lock
pusha
notl
pop
inc
jp
mov
pop
mov
pop
divl
movsb
push
push
or
dec
and
cwtl
ss
rcrb
clc
dec
cwtl
lock
push
jne
ret
cmp
and
jns
loopne
add
stc
rolb
sarl
arpl
dec
repnz
push
pop
inc
jecxz
lock
adc
and
das
push
or
push
mov
mov
cmp
inc
xorb
jmp
push
add
pusha
and
and
leave
fstpl
adc
inc
aaa
push
mov
add
sbb
cmp
mov
dec
sub
fstps
pop
mov
or
mov
hlt
fadds
aam
xchg
stc
fidivrl
mov
popf
jne
aaa
inc
cmp
or
or
inc
or
or
or
shrb
in
or
cld
or
pop
mov
sub
add
cmpl
dec
sar
add
mov
loopne
pop
ja
pop
sbb
aaa
cwtl
movsbl
fildll
fcompl
test
push
sbb
pop
sar
pop
sub
lahf
xor
or
and
and
shlb
mov
lea
mov
cs
mov
add
pusha
fisubl
lret
dec
mov
add
mov
xchg
or
ret
and
push
pop
add
jnp
mov
rcll
push
sub
or
mov
adc
cs
cmp
js
mov
adc
clc
arpl
dec
lea
sbbl
ja
movsl
mov
mov
dec
es
adc
adc
movsl
hlt
hlt
stc
and
push
or
inc
insb
push
fdivs
cmpsb
jbe
test
outsl
movaps
ds
push
mov
sub
jbe
sbb
adc
and
in
ss
js
add
jo
imul
xor
pusha
lahf
aam
movsl
nop
incl
fisubl
sbb
imul
outsl
and
xchg
out
adc
movsl
inc
pop
add
and
mov
xchg
mov
lcall
push
sbb
js
sarb
inc
je
pop
push
sti
ds
inc
test
add
xor
mov
inc
sub
or
jp
or
adc
test
lea
arpl
push
call
rorb
aad
ljmp
jnp
add
clc
ds
dec
and
in
lock
push
xchg
or
mov
in
mov
ror
sbb
add
add
adc
push
stos
mov
adc
insl
cmp
cmp
lahf
jl
xor
xor
cmc
add
jmp
pushf
sub
jecxz
cmp
loop
pop
dec
mov
and
push
cmp
movsb
test
mov
push
leave
push
add
aaa
mov
push
mov
lret
lcall
cmc
das
psraw
sti
outsl
lret
jmp
mov
inc
lods
hlt
xor
pop
dec
lods
pop
xchg
adc
dec
outsb
xor
push
stos
mov
je
pop
cmp
in
cmp
pop
ret
out
push
sbb
lcall
jo
push
sbb
and
mov
adc
jmp
mov
outsb
je
arpl
mov
sbb
jo
hlt
je,pt
xor
out
gs
test
pusha
ret
mov
xor
cmp
dec
xchg
daa
sub
adc
xchg
inc
fisttps
mov
sbb
or
and
sahf
mov
cmpsl
shl
cmpsl
add
stos
jp
fcoms
shlb
add
mov
hlt
jmp
cmp
jle
lahf
jecxz
popf
imul
test
pop
push
inc
cmpsl
repnz
sbb
in
cli
or
or
aam
lods
lock
nop
cmp
jmp
pxor
rolb
movsbl
leave
pop
dec
fbstp
popf
lea
xor
or
adc
inc
sub
add
mov
movsl
push
push
push
pushf
inc
scas
popf
mov
sbb
inc
push
push
sbb
sub
inc
jg
mov
lea
aam
mov
jae
imul
cli
mov
jo
mov
push
inc
daa
add
mov
jnp
push
insb
jle
loope
adc
imul
xor
cmp
bound
sub
scas
lock
and
jae
or
push
or
jmp
xchg
sub
cltd
fwait
sub
ficompl
sbb
pop
jl
add
jae
adc
mov
mov
adc
or
jnp
or
sbb
jge
daa
js
les
mov
or
es
ficomps
aaa
popa
lea
or
xor
std
xor
rolb
push
push
push
mov
xor
aas
repnz
sahf
cmpsl
clc
push
push
mov
jmp
sub
xchg
mov
sub
inc
cmp
daa
or
cmpb
je
nop
add
into
shlb
or
sbbb
movsb
adc
sub
mov
insb
add
mov
pop
and
sub
sar
int
sbb
fwait
add
push
mov
or
add
sub
sub
push
push
mov
adc
push
cmp
mov
mov
inc
or
sub
test
jne
jmp
or
push
and
dec
push
fmul
mov
out
xchg
add
ficoms
mov
sub
mov
pop
aam
lahf
push
fwait
lret
lods
or
sub
addr16
lret
pusha
mov
xor
mov
cmp
arpl
fildl
in
rolb
imul
shlb
fadds
stc
sbb
and
xchg
rorb
xor
add
mov
mov
cs
subb
jge
push
lock
rorl
mov
cmp
jl
mov
cmp
gs
cmp
cld
jb
mov
arpl
adc
ret
mov
sbb
popa
sbb
into
mov
add
addr16
mov
lods
jae
inc
mov
pop
rolb
mov
stc
push
jle
lret
test
nop
popa
fwait
int
imul
fisubl
lcall
xorb
or
dec
push
movsl
data16
pusha
dec
insb
add
cmp
gs
or
jo
mov
sti
cmp
or
out
mov
int3
int3
push
or
pop
ret
adc
mov
or
pop
inc
mov
push
jbe
adc
add
test
mov
jle
push
xlat
or
cmp
nop
sub
mov
push
jb
sbb
pop
in
pop
divb
add
test
xor
data16
mov
pop
jno
push
mov
xchg
xchg
sub
and
inc
and
idiv
arpl
or
dec
and
and
xor
mov
inc
add
shll
inc
add
fwait
sub
and
push
pusha
lods
scas
out
hlt
pop
dec
cmpl
cld
ret
bound
mov
pusha
add
out
inc
clc
mov
dec
call
pop
add
rorb
ret
and
cld
jge
dec
push
rolb
test
lahf
sti
push
dec
outsb
in
sbb
pushl
insl
and
out
pop
call
lahf
xchg
test
jp
add
sub
mov
ljmp
cld
push
cmpl
inc
mov
adc
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
js
xor
ljmp
imul
or
xchg
lahf
inc
mov
cwtl
mov
jl
add
pop
or
and
icebp
int
rcrb
wbinvd
and
mov
pop
inc
mov
push
jb
loope
fstl
and
xlat
add
enter
push
popl
xchg
cmc
jbe
add
call
subb
adc
pop
jno
mov
pop
pop
and
push
jo
nop
xorb
push
xor
lock
clc
push
insb
test
pop
push
fldcw
inc
jecxz
stc
movsbl
out
add
aas
xchg
mov
xor
mov
adc
mov
push
dec
xchg
es
ss
nopl
sub
push
fsubr
mov
sbb
enter
sar
sbb
adc
pop
sub
shl
sub
adc
mov
add
stc
mov
movsb
jne
int3
mov
rorl
sti
add
outsb
push
cmp
pop
push
add
movsl
icebp
mov
or
loop
fbld
jl
inc
lcall
xchg
xchg
mov
ret
sbb
push
pop
dec
add
jb
or
loop
stos
add
out
jo
push
add
mov
std
cmc
jo
xor
push
in
pop
imul
nop
lods
push
sub
adc
shll
jo
icebp
pop
add
inc
out
fnstenv
mov
inc
push
fwait
sbb
pop
xchg
sahf
pop
push
ret
fistpl
inc
lret
pop
jl
and
jle
xchg
adc
hlt
sub
pop
mov
insb
int3
push
lret
movsl
mov
imul
movsl
punpckhbw
cmp
sbb
lea
loopne
xchg
frstor
mov
mov
rclb
mov
dec
mov
lock
push
mov
and
test
ret
daa
mov
xor
jb
add
xor
cmpsb
jo
adc
iret
xor
popa
lods
pop
jbe
sbb
pop
lea
sub
sbb
adcb
jle
cld
mov
rcrb
sti
sbbb
and
jle
cld
dec
xchg
inc
mov
jo
sub
xor
js
add
push
call
add
dec
dec
ds
ror
andl
cmp
movsl
add
mov
jo
jmp
cmp
cmp
mov
cmp
add
mov
add
in
jp
push
into
pop
fidivl
addr16
and
and
inc
push
sbbl
mov
cli
lock
shrb
rcl
sub
outsb
add
and
mov
adc
or
xor
icebp
outsb
xlat
imul
adc
add
mov
or
and
add
xor
pop
out
sub
out
push
or
cmp
dec
outsb
inc
pop
adc
push
inc
sahf
or
incl
mov
sub
inc
xor
mov
shrb
call
jbe
js
mov
inc
shlb
inc
shlb
lods
xor
popf
in
lods
clc
imul
bound
sbb
sub
sub
cmpsl
push
stos
loop
fcmove
je
call
sbb
les
adc
jno,pn
sbbb
cmp
jl
bound
js
ret
sbb
pop
mov
xor
xchg
mov
test
mov
aaa
or
outsl
sub
or
aas
je
ja
stc
inc
mov
add
xor
jnp
call
dec
xor
and
shr
mov
fmul
mov
or
jbe
aas
pop
add
fdivs
lea
or
add
mov
ret
add
adc
jbe
cmp
cmp
mov
xor
lret
nop
fstpt
nop
outsl
fnstsw
push
cmp
mov
fisubrs
fistpll
insb
jne
xlat
xor
jp
or
in
pop
mov
pop
and
jg
push
mov
jno
outsb
sub
xor
cmp
cmp
inc
cmp
xor
and
xchg
xchg
out
aam
rclb
in
sbb
mov
sbb
add
xchg
outsl
xor
sbb
push
ljmp
lea
es
lods
mov
sbbb
sbb
leave
mov
sub
mov
iret
outsl
fstps
adc
stc
fcmovne
jo
dec
inc
mov
sbb
lret
nop
mov
movsl
sahf
jne
rcrl
insl
hlt
outsb
sbb
sbb
and
shrb
sbb
mov
mov
popa
adc
sbbb
pop
or
cwtl
and
fidivrs
pop
enter
outsb
and
outsb
in
popa
sbb
je
adc
sub
mov
js
sbb
call
add
jns
ljmp
out
jb
mov
cltd
xor
incb
fimuls
push
movsb
pop
loop
dec
movsl
jp
jne
sti
dec
inc
sub
sub
xor
imul
sub
test
sbb
nop
clc
add
inc
jo
dec
push
mov
negl
imul
push
popf
mov
nop
pushf
jecxz
push
negl
and
loopne
inc
nop
push
scas
idivl
inc
pop
or
jle
or
mov
cltd
pop
xlat
jg
fdiv
jnp
test
pushf
test
enter
sub
jo
or
insl
push
popf
sub
pop
call
je
xchg
outsl
gs
adc
push
inc
inc
jbe
mov
pop
aaa
mov
or
push
testb
sbb
xchg
fsub
lods
inc
push
mov
mov
pop
rcl
push
scas
cmp
dec
push
add
and
mov
mov
and
fs
add
inc
aaa
sbb
in
adc
aam
push
inc
cmpsb
loopne
jb
push
enter
adc
jo
sbb
pop
cmpsb
jmp
enter
loopne
cmpsl
inc
in
sbb
test
daa
pop
in
and
xchg
mov
sub
push
icebp
test
mov
popf
add
mov
sub
cmc
or
adc
fimull
push
lods
lahf
cli
add
cmp
inc
scas
push
cwtl
ss
pop
add
hlt
adc
das
lret
add
and
adc
and
cltd
adc
adc
lret
push
dec
lea
ror
xchg
ret
xlat
gs
in
testb
or
mov
adc
jne
pop
stos
push
loope
pop
sbb
das
mov
testl
insl
ret
cmp
shr
dec
add
test
nop
adc
enter
lods
test
shr
lds
push
mov
adc
cmp
jne
or
mov
popa
adc
or
jne
xchg
or
ret
xchg
push
stos
cmpsb
xor
rclb
enter
jo
sbb
rcrl
add
xchg
push
sbb
lods
jp
push
add
add
in
mov
rcll
mov
sub
ds
or
ja
leave
add
subb
or
lock
or
clc
pop
xor
adc
dec
clc
roll
mov
jmp
aaa
or
shl
insb
test
sbb
pop
sub
mov
mov
inc
out
push
xchg
add
sbb
in
push
cwtl
dec
sub
sbb
nop
lcall
cmpsl
call
outsl
jo
pusha
and
add
adc
hlt
mov
pop
mov
pusha
lahf
mov
cli
in
add
call
push
sub
mov
or
adc
call
mov
rcrl
dec
mov
ficoms
sahf
xchg
fdiv
push
mov
fcompl
sub
mov
lret
push
push
inc
inc
cld
pop
es
cmp
dec
and
incl
add
pop
push
orb
mov
lods
jmp
and
and
and
pop
and
or
xlat
mov
xchg
jp
push
mov
fcos
out
out
mov
cmp
and
mov
and
lea
cli
sbb
adc
cld
jmp
dec
addl
inc
push
sub
sbb
mov
dec
inc
jo
jg
or
add
dec
xchg
rorl
cmc
push
mov
inc
fdivrl
xor
shll
sbb
xstore-rng
cmpsl
inc
loope
cmp
add
nop
mov
cmp
fisubrs
pop
insb
push
cmpb
loop
mov
xchg
pop
mov
xor
nop
sti
scas
push
jne
movl
inc
iret
sbb
sarl
jne
jmp
dec
shll
add
mov
jmp
xchg
rclb
push
mov
add
imul
push
push
push
cmc
stos
push
pusha
xorl
mov
mov
rol
pop
jmp
mov
cmp
into
std
fs
ficompl
je
push
jmp
push
loop
or
dec
rorb
push
ret
imul
xor
rolb
cli
stos
jo,pt
cmp
or
push
call
inc
shlb
addr16
cwtl
sbb
pop
pop
in
rcll
leave
inc
scas
jmp
fwait
add
or
leave
xor
jo
push
aaa
jmp
mov
push
mov
ds
fs
cmpb
inc
cmp
ljmp
add
sti
roll
lret
add
xor
clc
jb
mov
imul
out
inc
and
push
in
dec
xor
adc
dec
and
and
cmp
mov
jne
mov
dec
mov
lods
cltd
frstor
sbb
jle
jnp
or
mov
outsl
leave
or
inc
dec
jne
sbb
stos
mov
jmp
scas
dec
addb
cmp
into
cs
enter
mov
insb
in
xchg
mov
out
movsb
fcomps
mov
pop
xor
jmp
cmp
stos
dec
test
sbb
out
inc
cmp
fsts
push
sub
inc
shlb
lods
addr16
pop
jge
push
add
push
ret
ret
mov
fiadds
or
push
sti
popf
cmp
cmp
inc
jo
insb
ljmp
add
pusha
shll
dec
xchg
into
xchg
fcmovnb
push
or
sbb
pop
xor
clc
add
in
idiv
jle
fmuls
call
or
decb
mov
add
sbb
cmp
inc
jo
insl
adc
pop
sbb
mov
jmp
inc
cmp
xor
cmp
enter
cmpsl
mov
gs
push
lods
cmpl
ljmp
fwait
jb
push
jg
push
and
shl
xchg
arpl
pop
jle
sbb
mov
lea
aas
stos
or
or
les
aaa
cmpl
cmp
mov
ret
adc
pop
je
add
inc
or
sub
pop
dec
cmp
inc
xor
pop
sub
adc
iret
add
adc
xor
icebp
and
sarb
jp
arpl
pop
es
sbb
pop
adc
dec
xor
mov
pop
inc
mov
not
pushf
cltd
negb
lahf
das
adc
dec
rolb
sub
fwait
xchg
insl
insl
fsubrs
ss
and
mov
outsb
mov
xlat
cmp
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jg
inc
cld
es
pop
cmp
mov
cli
sub
testl
or
sbb
rolb
mov
out
push
mov
daa
mov
cmp
sub
flds
nop
test
push
lock
jle
or
push
sbb
jo
adc
xor
imul
insb
leave
mov
pop
and
mov
jmp
pop
push
dec
jb
leave
es
add
add
push
and
test
or
jae
push
mov
inc
mov
xor
mov
mov
push
pop
xchg
movsb
push
pusha
mov
push
test
mov
jo
adcl
roll
push
mov
xor
data16
inc
push
jo
sbb
cmp
jns
or
int3
mov
js
inc
push
cs
fwait
mov
inc
xchg
inc
mov
push
push
bound
cs
mov
jb
in
push
xor
xor
imul
cmp
xchg
mov
rcrb
js
les
jbe
or
iret
test
daa
cmp
shlb
ds
push
mov
cwtl
ret
loopne
out
sbb
xor
shl
pop
sbb
and
jecxz
push
adc
mov
cwtl
push
push
or
pushf
test
enter
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
and
jle
sbb
repnz
pop
jmp
push
dec
mov
dec
mov
mov
jbe
and
pop
cmp
ret
adc
xchg
mov
or
push
push
jno
adcl
movsl
mov
or
mov
push
js
sbb
push
jns
bt
les
out
in
mov
xor
jne
or
xor
or
xchg
ds
mov
mov
mov
les
cmp
pop
fwait
cmpsb
and
subl
xchg
pop
sub
and
or
inc
pop
fndisi(8087
sub
pop
fstpl
jge
pop
and
pop
push
inc
inc
push
hlt
jne
cmp
roll
aaa
cmp
or
pop
mov
mov
movsl
nop
int3
mov
jl
mov
fisttps
add
xchg
mov
das
cmc
xchg
ret
ljmp
xor
mov
insl
add
adc
sbb
sbb
mov
aaa
jecxz
hlt
sbb
sbb
or
pop
add
inc
lsl
sbb
or
xor
sbb
aas
and
sub
pxor
push
push
add
sub
jg
inc
jmp
sahf
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
push
add
jg
adc
divb
pcmpeqb
xor
xchg
jp
xor
sbb
add
jne
ficoms
dec
adcb
inc
inc
cli
pop
pop
ret
popa
and
push
outsb
cmp
bound
add
cli
shr
add
xchg
and
push
xor
incb
lock
daa
in
mov
into
lock
xchg
cmpsb
outsb
adc
push
daa
out
adc
int
fistl
jg
loopne
push
mov
or
shll
enter
adc
or
xchg
mov
mov
or
rolb
xor
movsb
push
add
insb
cmp
pop
push
js
ljmp
add
mov
mov
sbb
push
add
movsb
sub
dec
in
dec
or
test
lods
or
pushf
xorl
jo
add
add
sub
or
faddl
or
int
pushw
call
lock
rcl
xor
jle
xor
sub
add
mov
cmp
xchg
pop
in
and
mov
enter
fadds
cs
push
fidivrs
das
and
imul
dec
add
fildl
sbb
adc
pop
in
mov
adc
pusha
push
push
lahf
sarl
pusha
pop
xor
call
rclb
movsb
cmp
and
dec
xlat
cmp
inc
stc
cmpsl
xor
adc
test
xchg
sti
mov
decl
mov
and
cmp
push
pop
ja
pop
adc
aam
js
and
fmull
fstl
mov
lock
push
adcb
sub
loop
sbb
lea
nop
popf
int3
int3
push
scas
jns
out
mov
out
sahf
out
sub
out
mul
sub
jge
mov
inc
pusha
dec
add
popa
cmp
and
int3
push
mov
push
cmp
nop
dec
jbe
lock
inc
jae
fisubrs
insb
jne
inc
pop
dec
mov
addb
call
sbb
and
inc
jle
mov
inc
push
lea
push
push
push
xchg
inc
faddl
inc
test
enter
or
dec
add
lods
repnz
sub
inc
nop
jbe
fucompp
bound
xchg
and
ret
and
push
push
test
mov
xor
jmp
es
mov
adc
cmp
cld
outsl
mov
mov
idiv
divl
adc
decl
inc
mov
sbb
mov
lea
mov
pop
xor
jne
lea
mov
shrb
mov
cmp
jne
mov
push
mov
shll
fucomip
add
loop
stos
bound
out
xor
sbb
sub
xlat
fmull
es
into
ret
and
es
sub
enter
aad
add
mov
repz
lret
outsb
in
test
mov
std
xchg
pop
enter
std
mov
hlt
inc
jp
lods
std
lret
sbb
jne
movsb
pop
hlt
and
inc
push
mov
nop
xor
add
xchg
je
mov
cmpsl
fwait
mov
rclb
dec
ret
sbb
dec
jno
sbb
leave
ret
mov
adc
cs
loope
fdivrs
mov
mov
mov
in
jnp
adc
mov
stc
add
lcall
adc
aam
addl
xor
aad
leave
mov
filds
enter
sti
loopne
xchg
push
lret
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
mov
sub
mov
push
jns
notl
xor
push
sub
adc
adc
mov
fsubl
pusha
dec
adc
or
mov
or
add
mov
cmp
inc
loopne
add
sub
pop
das
xlat
scas
aad
pop
and
push
cmpb
mov
add
or
and
cmp
inc
xor
filds
cmp
push
movsl
test
ss
lds
dec
js
pop
push
mov
gs
mov
pusha
lock
mov
imul
fiaddl
rolb
pop
inc
dec
test
in
test
inc
jl
in
sbb
mov
shld
pop
mov
daa
or
and
or
stos
push
xor
aad
adcb
push
scas
jle
out
xchg
iret
cmpsl
mov
add
les
cmp
add
xor
dec
shl
stc
mov
ret
loopne
into
incb
sub
or
dec
cmp
dec
outsb
jg
scas
add
orb
push
je
fcmovb
and
jo
aam
stc
inc
sub
lds
sub
pop
aam
jmp
mov
mov
jnp
sub
jno
je
mov
rolb
imull
or
dec
pop
add
adc
repz
sub
adc
js
xor
adc
repnz
test
jl
and
xchg
push
out
adc
jns
insb
xor
out
addr16
pusha
addl
out
sbb
dec
jo
xor
jns
dec
mov
insl
mov
inc
jns
jecxz
adc
mov
and
inc
outsb
xorb
imul
add
scas
jmp
ret
mov
push
shlb
jne
mov
int3
arpl
mov
jno
push
fnstcw
movsb
push
pop
mov
cmp
cmpsl
es
cmp
xor
test
popa
mov
int
sub
lea
aam
aaa
cwtl
mov
rcrb
mov
dec
fildl
shrb
es
sbb
in
or
sub
outsb
dec
or
test
fisttpl
test
addr16
popl
out
xor
and
aad
faddl
in
test
in
lcall
adc
fadds
neg
ret
cmpsl
or
imul
icebp
icebp
mov
jmp
das
fmull
cltd
mov
repz
mov
mov
fucomi
fldt
sub
fildl
inc
repz
cmp
in
cmpsl
xchg
fadds
sub
frstor
into
cmpb
ficoms
dec
sar
xor
aas
dec
cs
cmpxchg
popf
push
sti
mov
jmp
dec
rolb
push
cmc
shrl
push
jns
add
icebp
dec
sub
xchg
inc
xor
sub
sbb
jmp
call
jnp
dec
int3
mov
mov
sub
mov
loop
inc
sbb
fwait
mov
sbb
jno
pushl
sahf
xchg
or
adc
mov
dec
hlt
cs
jmp
mov
cmpsb
push
mov
mov
sbb
jb
mov
adc
arpl
call
in
jge
xor
sbb
mov
dec
or
sub
push
nop
inc
xorb
test
mov
and
or
popa
add
and
js
push
add
je
xor
adc
sub
mov
adc
daa
adc
ret
mov
fidivrl
xchg
lea
cmp
push
addr16
stos
add
nop
lcall
mov
leave
rolb
stc
push
shrl
jns
mov
testb
dec
addr16
lcall
adc
inc
test
add
or
iret
inc
loope
xchg
outsl
jne
or
outsb
cwtl
movsl
push
mov
sbb
lods
test
xchg
and
mov
mov
subl
aaa
cmpsb
sbb
xchg
fcoms
cmp
mov
mov
mov
mov
pop
sbb
sub
pop
out
rolb
xorps
jmp
ss
dec
xchg
xchg
mov
jmp
in
push
xor
lret
stos
pop
sub
lods
repnz
leave
lock
movsl
mov
sub
pop
add
cmp
movsl
fsubr
pop
ljmp
movsl
scas
movsl
push
mov
scas
adc
outsb
insb
out
cmpsl
into
and
jecxz
cmpsl
aad
pop
jo
dec
cmpsl
xlat
test
lret
mov
pop
and
inc
cmpsl
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
lea
push
xor
stos
xchg
movsb
repnz
push
stos
mov
mov
mov
adc
outsb
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
lods
sub
mov
mov
add
repnz
dec
es
movsl
dec
add
movsb
xlat
adc
adc
decb
cld
push
push
aam
int3
sbb
cwtl
cmpsl
mov
cwtl
lods
mov
push
enter
rcll
lods
shrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
mov
xor
test
nop
add
dec
xchg
nop
arpl
dec
adc
aaa
push
sub
push
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
popf
int3
mov
mov
sbb
lds
pop
sbb
lahf
out
xchg
jl
push
dec
stos
testb
sbb
divl
jp
mov
insb
adc
aaa
mov
or
les
or
or
xchg
lock
inc
cmp
mov
inc
sub
adc
xor
mov
out
outsb
sub
pop
xor
or
mov
into
inc
or
pop
pop
mov
xor
shrb
pusha
movb
addr16
pop
stos
push
sbb
cld
dec
add
xlat
adc
idiv
mov
test
jmp
dec
xor
aaa
push
jns
add
push
jg
mov
jnp
add
jne
sbb
dec
out
add
jno
pop
mov
lahf
mov
adc
pop
jo
or
cld
nop
in
testb
rclb
cltd
lahf
cmpsb
lock
test
mov
mov
mov
xchg
test
nop
mov
and
jne
adc
and
and
int3
push
sahf
mov
add
or
fnstcw
inc
dec
pop
adcb
jg
subl
pop
je
mov
fwait
pop
outsl
push
push
dec
adc
lock
or
pop
xor
dec
iret
ja
cmp
pop
outsl
inc
or
jbe
je
lahf
pusha
jle
cmpsb
outsl
popf
mov
iret
ja
jo
mov
ja
pop
xor
jne
jo
in
push
pop
ffreep
lea
lea
inc
out
or
push
in
rcr
inc
daa
insb
adc
sbb
insb
add
movsb
pop
mov
add
inc
inc
push
negl
decl
aas
mov
mov
lret
ret
push
div
push
mov
shr
dec
add
add
mov
adc
add
lods
sub
pop
into
andb
cmpsl
add
sbb
fimull
or
mov
push
dec
or
sarl
adc
andl
add
mov
add
or
call
stos
add
jmp
mov
push
jl
fdivs
test
mov
aaa
mov
les
sbb
aas
add
fwait
pop
jne
cmpl
jne
fdivr
fistpll
adc
and
cmp
and
cmp
bound
or
scas
sub
or
adc
xor
inc
rcl
jl
push
cmp
rol
push
mov
sahf
out
add
jl
jae
xor
sar
and
and
call
mov
add
add
inc
loopne
xor
pop
pusha
or
imul
add
fldl
mov
cmp
ljmp
mov
sub
adc
inc
andl
xchg
jle
nop
pop
subl
lret
cmp
lea
sub
xchg
scas
or
cs
mov
aam
xor
pop
mov
xchg
rolb
fs
mov
xor
pop
rcll
or
sahf
pop
cwtl
adc
adc
rclb
test
mov
or
mov
sbb
mov
sub
rcl
adc
call
inc
or
andb
push
pop
add
cwtl
sbb
je
aas
push
fucom
pop
cmp
push
dec
and
mov
xor
mov
xchg
out
movsb
inc
push
out
fadds
mov
in
fdiv
lret
into
mov
gs
jmp
outsl
mov
and
js
mov
pusha
js
hlt
sub
mov
mov
ja
and
jne
incl
dec
and
lods
data16
sbb
jmp
addr16
out
dec
adc
add
mov
fwait
adc
ret
xor
jne
lret
outsb
stos
add
xor
jne
or
push
push
orl
add
mov
inc
data16
ds
gs
cmp
ds
enter
or
jne
dec
mov
mov
and
mov
sahf
jnp
addr16
add
sub
mov
aas
movsl
adc
fisttpl
inc
cs
je
xorb
cmp
stos
jne
jnp
lock
and
inc
and
dec
cld
push
insb
ljmp
or
pop
jle
in
push
push
insl
add
aam
add
sbb
mov
push
mov
and
es
test
or
xor
mov
or
int3
push
xchg
cmpb
jo
shlb
fistpl
push
call
push
incb
jbe
xchg
lea
into
adc
cwtl
insb
pusha
fimuls
push
loopne
mov
pushl
mov
jae
lea
add
xorl
push
cmp
lock
lea
push
xchg
and
mov
shlb
popf
and
or
rorb
mov
je
fwait
hlt
mov
lods
mov
push
sub
lea
push
fsts
out
pop
lea
inc
or
push
cmpsl
out
leave
cwtl
or
gs
pushl
push
pop
push
iret
cmc
dec
push
mov
loop
lea
mov
or
mov
lock
mov
adc
out
jg
movb
xor
dec
fildll
lea
add
int
inc
inc
mov
push
in
out
push
push
imul
adc
sbb
rcrb
loopne
ret
mov
scas
xchg
jl
fidivrs
sbb
movsb
or
push
or
aas
or
add
fimuls
daa
dec
mov
scas
fiadds
add
xor
aas
roll
das
rorb
and
into
sub
into
test
cmp
jb
xor
jl
in
mov
xchg
adc
hlt
jb
sahf
xchg
ret
pop
push
cmpl
sbb
repnz
or
pop
aam
push
or
cld
aaa
cld
cmp
pop
ret
add
xor
jmp
jns
mov
and
dec
shlb
movsb
or
add
dec
sets
mov
stos
xchg
add
je
push
or
repz
outsl
xor
push
orb
jmp
mov
jmp
cmp
loop
lea
xchg
cmc
push
xchg
mov
dec
cs
aaa
xor
scas
insb
jnp
mov
mov
jne
jmp
addl
ss
or
je
push
inc
bound
dec
movl
add
add
adc
out
pop
ret
dec
sub
cmp
shrb
test
dec
cwtl
cwtl
pop
mov
sub
imul
dec
out
mov
fists
pop
test
not
mov
push
in
popa
mov
cld
xor
push
sub
adc
lock
xchg
cmpsl
sub
lock
mov
fwait
adc
and
test
dec
mov
test
adc
dec
les
cs
lock
sbb
loope
ja
mov
xor
orb
ljmp
jle
pop
ret
mov
lods
int3
jle
dec
pusha
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
sub
pop
shrb
add
dec
inc
inc
xor
xchg
es
inc
adc
fidivrl
cmp
jae
lahf
lret
adc
aas
pop
inc
dec
stc
cs
in
dec
dec
cwtl
push
adc
and
mov
pop
in
sti
inc
popa
dec
adc
jo
fnclex
lods
enter
dec
or
xor
mov
lcall
mov
pop
push
sub
adc
ret
js
cmpl
shlb
jne
daa
fiaddl
and
popa
mov
jns
pop
scas
inc
stos
add
push
nop
ret
fisubrs
inc
mov
mov
add
add
add
into
stc
movb
cwtl
add
leave
push
clc
stc
push
inc
cmp
push
lea
cmp
int3
call
enter
adc
and
push
pusha
es
scas
dec
stos
inc
popa
in
adc
cmp
jle
enter
lret
sbb
push
mov
enter
mov
bnd
inc
push
sbb
aaa
sub
pop
and
or
jbe
rcrb
add
sub
sbb
and
add
xchg
push
xchg
inc
pushf
sbb
sti
std
call
cmp
aas
add
hlt
jmp
and
push
in
out
fistpl
xlat
mov
xor
sub
inc
push
subb
or
ret
or
push
xor
test
lods
inc
and
fimuls
adc
push
lret
or
mov
dec
dec
ja
test
mov
test
or
loop
sbb
cmpsl
mov
aas
clc
add
lret
loop
pusha
lods
and
insl
add
jne
or
push
in
dec
cmp
mov
inc
outsb
adc
das
ret
lea
mov
dec
and
sub
add
push
aam
out
loopne
and
jb
sub
add
enter
add
xor
cld
jb
mov
pop
xchg
add
ret
sub
insl
add
jmp
cmpb
rcl
push
negl
ret
xchg
fcoms
or
neg
mov
lock
mull
lsl
jmp
push
pop
push
sub
inc
shr
rcr
shr
rcr
or
mov
repz
dec
pushf
pop
dec
ljmp
out
jb
cmp
or
cmp
or
xor
aas
iret
pusha
shlb
or
fisubl
push
add
lret
jne
fcomp
iret
pop
ret
adc
and
je
dec
push
jmp
jbe
inc
adc
xchg
sbb
mov
sub
cmc
inc
in
cmp
rolb
cwtl
clc
mov
hlt
jbe
xchg
or
and
lret
movb
out
xor
pop
cmp
or
xchg
call
mov
push
dec
inc
fld1
clc
add
sub
aam
hlt
and
adc
inc
mov
fists
inc
and
mov
scas
xlat
mov
pop
add
rorb
lcall
shlb
inc
stos
inc
clc
push
xor
loopne
adcb
push
push
sbb
cmp
sbb
sbb
dec
fcomps
and
adc
or
dec
push
mov
and
add
add
in
aas
fists
je
cwtl
push
push
pop
lret
xchg
xchg
sbb
add
cmp
mov
sub
inc
adc
jo
leave
out
jmp
pop
jne
test
popf
mov
xor
add
pop
inc
cmp
mov
xor
add
addl
inc
sbb
hlt
fiaddl
rcrl
mov
dec
pop
dec
and
mov
and
lods
dec
add
fs
mov
jnp
pop
or
int
xor
mov
inc
nop
test
nop
push
test
cmp
add
lods
and
jl
popa
outsb
mov
arpl
sbb
popf
sub
jb
mov
faddl
fmuls
fistps
jo
mov
pop
clc
dec
cld
popa
cs
decl
lahf
add
cwtl
push
gs
test
jne
xor
outsb
mov
and
loope
daa
xchg
inc
popa
dec
sub
push
xor
mov
and
mov
mov
cmp
mov
jo
cmp
xor
in
and
push
add
mov
or
or
dec
or
cmp
cld
or
in
mov
cmp
loop
or
add
mov
sti
fwait
sub
mov
ret
ret
outsb
outsb
sub
push
push
inc
push
loopne
lret
push
aad
aam
lods
jnp
mov
jne
mov
xchg
push
negb
jmp
adc
outsl
push
push
mov
jae
adc
ret
loope
imul
pop
xorl
dec
mov
adc
lret
push
inc
cmpsb
shr
out
gs
aam
lock
aad
mov
inc
fidivl
iret
jmp
sbb
mov
movb
imul
ja
subb
call
sub
push
lock
cmp
inc
jmp
stos
les
inc
pop
lds
cmp
imul
add
push
inc
mov
jge
aas
sbb
cmp
add
inc
jecxz
in
cwtl
push
sbb
sbb
jmp
dec
je
mov
out
inc
lock
xor
icebp
xor
or
and
add
insb
jne
push
adc
and
or
incl
mov
push
stos
into
mov
sub
enter
adc
test
inc
push
cmp
jge
inc
call
scas
mov
mov
push
and
mov
cwtl
xor
sbb
mov
sub
mull
pop
stc
xor
pop
inc
rclb
xlat
mov
add
and
jo
negb
shl
sbb
lcall
pop
sahf
jl
clc
sbb
mov
and
cmc
fadds
add
mov
mov
aad
adc
mov
aas
add
ja
mov
sub
adc
orl
bound
dec
dec
sub
and
fs
push
push
push
pop
shlb
or
dec
pop
inc
inc
pop
notb
and
arpl
xor
in
pop
cmp
or
popa
sbb
rcl
lock
jmp
xor
stc
loopne
mov
pop
adc
pop
or
sbb
lds
adc
add
push
mov
or
push
fs
or
add
push
mov
mov
cmp
sub
sbb
cmp
xor
cli
adc
lea
lea
mov
or
out
out
andl
mov
push
inc
cmp
sbb
jmp
popl
test
inc
ljmp
mov
pop
xor
jle
enter
js
shrb
add
jb
sub
clc
sarl
mov
pop
mov
pushl
add
jno
push
pop
lock
mov
push
mov
and
sbb
push
push
xor
movsl
ljmp
push
inc
cmp
ds
pusha
clc
aas
imul
sub
out
popa
push
fldt
add
sbb
mov
or
push
loope
pusha
rol
jl
popa
add
sbb
inc
pusha
xorl
add
out
inc
stos
cmpl
and
mov
inc
inc
jne
lcall
add
sub
inc
rolb
pop
or
aas
sub
mov
fadd
les
inc
pop
adc
shl
mov
mov
scas
call
outsl
andl
pushf
rorb
es
xchg
or
aam
sbb
orb
sbb
sub
sub
xor
adcl
push
sbb
dec
add
and
movd
in
loopne
mov
jmp
jg
lcall
adc
lods
subl
xchg
das
xor
push
popf
add
cmp
mov
or
push
inc
adc
sbb
test
int
ds
das
imul
xchg
xor
adc
and
inc
mov
test
mov
or
dec
xor
test
jl
xchg
inc
mov
mov
fmull
das
loop
push
adc
mov
push
jno
add
mov
adc
adc
aaa
mov
xor
ljmp
jmp
mov
cli
popf
pushl
leave
lret
aam
push
pmaddwd
cmp
cwtl
cltd
ret
jo
bound
mov
cmp
jae
in
xlat
inc
sbb
inc
mov
push
push
nop
sub
adc
dec
mov
cwtl
or
add
movsb
mov
adc
cmp
arpl
inc
cld
jl
push
lods
mov
cmp
das
push
or
push
or
fidivl
or
xchg
push
sbb
or
lea
and
pusha
or
push
mov
pop
dec
and
mov
inc
push
push
pusha
cmp
hlt
add
mov
sbb
dec
addr16
jl
incb
dec
mov
movsb
andl
jge
negl
jmp
mov
stos
popf
test
mov
and
cmp
fstps
pop
mov
testl
inc
jle
sub
cmp
xor
cmp
jmp
dec
push
in
jbe
cmp
push
sub
jae
stos
lock
dec
lock
inc
sbb
mov
jae
mov
sub
push
jmp
adc
jnp
push
sarb
jbe
imul
jbe
nop
add
jne
out
dec
or
lahf
jae
imul
sbb
pushf
sub
and
ja
sub
jnp
dec
bound
sti
xchg
lahf
and
cmp
dec
cwtl
inc
jnp
cld
pop
pop
push
and
xor
add
stc
sub
cmp
mov
mov
movsl
jbe
sub
mov
mov
stos
loopne
je
mov
xor
add
data16
loop
mov
shrb
add
in
cmp
dec
mov
jo
repnz
rcrb
mov
jecxz
fldl
inc
inc
xor
dec
or
ret
mov
dec
cmp
and
fsubs
fsubrs
xor
cmpl
jecxz
je
adc
push
push
inc
jmp
cmp
mov
pop
xor
shrb
es
mov
dec
push
or
pop
shl
jne
dec
push
lock
popl
popa
cmp
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
fadds
loopne
mov
fildl
push
fcoml
mov
outsb
ja
mov
xor
jne
adc
in
leave
pop
adc
pushf
inc
pop
popl
call
jge
xchg
push
mov
sub
pushf
imul
mov
mov
add
pusha
jge
dec
sbb
cmpb
and
mov
out
inc
add
lret
jne
sti
outsl
call
shll
roll
lods
xchg
lea
nop
inc
ficoml
jae
mov
std
mov
sbb
mov
mov
or
scas
pop
and
inc
testl
out
jne
and
xchg
and
les
out
dec
into
sbb
jne
inc
or
cmp
pushf
and
addr16
inc
fists
add
xchg
nop
int
xor
cwtl
xchg
test
push
mov
add
inc
add
push
pusha
mov
mov
push
xor
cli
sub
pop
sbb
jb
mov
rorl
xchg
push
mov
inc
ja
add
js
subl
sub
lea
jnp
sbb
sbb
sti
jg
push
add
add
aaa
sbb
sub
or
shll
shr
fadd
cmpsb
mov
shr
aas
or
push
lahf
and
mov
into
sub
xchg
jne
dec
sub
inc
mov
sub
add
into
negb
je
jl
ja
cli
shrl
shl
shr
or
mov
js
pop
call
pop
jne
outsb
mov
push
aam
notb
adc
and
fnsave
push
imulb
arpl
pop
add
xchg
add
mov
add
cld
roll
or
or
ficoml
lds
mov
pop
mov
nop
mov
dec
and
adc
int3
int3
jmp
inc
popl
test
or
daa
mov
dec
or
dec
into
jmp
lods
leave
ss
aam
divl
jno
les
pop
and
ficompl
jp
lret
push
mov
jmp
sub
loopne
sbb
add
loop
lret
loop
imul
pop
mov
inc
mov
inc
or
xchg
xchg
add
and
cmp
jl
imul
pop
inc
mov
sarl
aam
or
xchg
mov
outsb
loope
cmp
mov
push
mov
pop
incb
jne
testb
adc
sbb
mov
cmpsb
icebp
jbe
push
push
jb
add
xor
sbb
cmp
aad
add
daa
pop
cmp
sarb
push
int3
outsb
pop
ret
jo
push
xor
rorb
jbe
sub
arpl
mov
mov
fwait
ljmp
sub
or
push
pop
insl
outsl
inc
mov
jb
dec
andl
dec
in
ret
add
xor
adc
shl
or
ret
xchg
dec
aam
mov
ret
cmp
es
cld
mov
subb
inc
js
pop
pusha
xchg
adc
pop
pop
lea
pop
bound
jae
mov
add
out
mov
loop
arpl
xchg
call
test
push
pop
add
in
jnp
insb
cmp
mov
adcl
test
call
jne
sbb
call
stos
out
add
xchg
mov
push
adc
sbb
pop
inc
ds
sub
iret
jmp
sbb
adc
dec
xchg
xor
xchg
adc
push
pop
call
sbb
lds
push
pushl
cs
add
pop
enter
punpcklwd
dec
xor
push
sbb
loopne
or
push
js
std
push
and
jmp
ret
jmp
gs
mov
adc
in
pop
cmpsl
lods
sbb
cld
add
and
mov
cmp
cmp
xor
push
std
push
lcall
cmp
dec
lahf
loope
inc
loope
push
lea
sti
push
iret
add
leave
sar
mov
aas
or
sbbb
testb
sub
pop
and
adc
negl
mov
or
call
stc
xor
scas
addr16
loop
mov
imul
xchg
mov
ljmp
shll
xchg
js
inc
shll
cmp
or
xor
push
push
ds
xor
and
xor
pop
cwtl
xacquire
push
inc
loopne
nop
sti
mov
lock
add
mov
fdivl
sbb
push
add
or
push
xor
push
hlt
mov
andl
sbb
sbb
and
jae
pop
ret
pop
outsl
add
add
inc
push
pop
and
sbb
test
or
mov
xchg
movb
push
sbb
adc
mov
dec
mov
outsb
test
scas
sub
lea
or
add
fmull
loop
jns
cmp
gs
push
inc
rolb
adc
add
add
je
test
notb
mov
pop
add
jno
dec
mov
inc
mov
xor
not
mov
pop
mov
int
push
test
cmp
mov
jno
add
roll
sbb
push
cmp
stos
sub
aaa
test
jne
xor
adc
sub
mov
add
fwait
imul
push
push
jmp
sub
inc
adc
dec
pusha
dec
inc
mov
add
sub
stos
or
out
push
mov
adc
push
sbb
sarb
add
in
mov
dec
xor
mov
sbb
subb
add
xor
push
pop
and
pop
pop
ss
shll
adc
xchg
lret
jle
mov
pop
ret
fs
xor
jae
mov
ffreep
mov
cli
or
shufps
push
fldt
pop
mov
push
addl
and
sub
xchg
ds
inc
icebp
and
out
fnstenv
push
jne
cmp
or
ret
sub
sub
insb
call
add
shl
cwtl
dec
shlb
jbe
fs
pop
jns
clc
dec
sbb
into
jg
or
add
cmp
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
mov
and
jmp
enter
lods
and
push
es
andb
test
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
cmp
aam
or
jmp
inc
sbb
movsb
inc
mov
rolb
lds
pop
add
push
adc
and
and
jo
gs
pop
test
push
fistl
rorb
sbb
popf
cltd
movb
and
es
enter
adc
push
out
and
cmp
sub
adc
or
mov
in
aam
insb
cmp
add
mov
xchg
notl
pop
jne
add
xlat
pop
les
mov
dec
mov
fs
pushf
push
xchg
pop
inc
cli
mov
pop
pop
cmp
inc
and
jg
add
jns
add
inc
addb
subb
sbb
fisttpll
xor
mov
cwtl
js
cld
add
cmp
loop
inc
mov
jmp
ds
push
pcmpeqb
inc
cmp
incl
aam
and
or
les
shr
or
scas
popa
push
xchg
push
loopne
and
or
mov
add
xchg
push
ljmp
jb
vpmadcsswd
fmuls
inc
lcall
adc
adc
pop
adc
push
xchg
jo
inc
inc
mov
scas
sub
dec
icebp
add
sbb
jno
and
push
dec
xchg
push
dec
jae
mov
lret
xor
inc
push
popa
jge
mov
dec
push
add
add
pop
push
fsub
push
or
xchg
fcoms
push
pop
out
cmpsl
test
cmp
push
sar
jb
cmp
cmp
sbb
dec
sub
inc
stos
test
sbb
cmp
add
fisttpl
jmp
pop
adc
shr
clc
or
pop
shl
mov
pop
adc
mov
mov
adc
sbb
fadd
adc
rorl
andl
int
add
insb
enter
daa
sbb
xor
js
cmpl
and
or
push
pushf
jl
push
pop
cwtl
dec
xor
push
jne
push
aas
out
out
mov
xor
pop
in
pop
movl
test
push
sbb
mov
cld
add
mov
xor
jbe
fidivl
mov
jmp
push
std
push
fwait
test
jne
fadd
and
push
push
jnp
jne
add
xor
pcmpeqw
add
pop
dec
inc
imul
mov
jmp
mov
adc
insl
lea
ficoms
add
pop
cmpl
push
lcall
pushf
or
movsb
cmp
cmp
cmp
inc
icebp
imul
add
mov
or
sbb
pop
popa
faddl
sub
lock
mov
adc
fadd
or
cmpb
pop
fistpll
push
dec
and
or
jne
and
pop
sbb
push
sbb
imul
xor
sarl
push
and
rorl
mov
push
daa
fidivs
jmp
nop
sbbl
sbb
xor
lds
je
jae
mov
xchg
out
popf
or
push
mov
mov
jo
push
push
jno
inc
or
add
jnp
aas
cmp
adc
in
xchg
mov
or
fs
mov
and
rorb
jne,pn
ja
mov
sbb
inc
mov
adc
in
adc
add
pop
mov
sbb
or
stos
fdivrs
adc
dec
lds
push
icebp
push
fwait
xchg
pop
xchg
add
loopne
jmp
cwtl
or
nop
or
inc
add
sub
add
push
adc
dec
movl
and
inc
fmull
jp
loop
push
and
add
cmpl
scas
out
sub
dec
sbb
mov
ret
xor
ja
bound
mov
fs
inc
loop
jno
inc
mov
sbb
fcom
sbb
dec
test
jb
ljmp
sub
inc
stos
sub
call
add
push
inc
adc
sbb
test
or
rcrl
mov
or
adc
cs
push
in
push
cs
daa
push
xor
enter
cmpb
popa
andl
out
pop
adc
jmp
fists
ret
repz
add
adc
icebp
movsl
aam
push
ret
mov
lret
stc
push
arpl
call
push
gs
mov
negl
push
stos
cli
shlb
addb
dec
jmp
xor
pop
mov
mov
cmpsl
jo
cs
lret
cmp
or
subl
outsb
je
inc
sub
clc
ret
sbb
dec
mov
sbb
popa
loop
repnz
clc
and
mov
adc
dec
cld
and
push
pop
cmp
in
mov
jge
mov
ja
mov
or
mov
fdiv
xchg
loope
lahf
daa
inc
test
jle
and
inc
push
mov
and
adc
pop
mov
jne
stos
out
rcrl
inc
add
or
ret
cmpsb
or
push
push
add
les
xchg
cmp
or
xchg
cmp
je
into
enter
iret
and
and
pushf
inc
sbb
adc
aas
jg
cmp
decl
jg
xor
cmp
je
or
jne
jle
jp
jae
aad
in
mov
jb
lock
sbb
cmp
loope
imul
and
and
dec
ret
adc
push
or
jbe
push
xchg
or
in
gs
push
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
adcb
cmp
xchg
mov
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
push
add
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
ror
xchg
dec
enter
andb
adc
xchg
fsub
in
and
dec
call
dec
xor
hlt
clc
dec
push
cmp
cld
add
add
imul
or
adc
adc
sbb
dec
xor
and
sub
leave
and
xor
xor
gs
fiaddl
push
xchg
dec
es
push
pop
pop
shrb
fs
sbb
and
jmp
pop
mov
mov
adc
jbe
add
test
and
test
mov
stc
outsb
sbb
mov
xor
push
mov
imul
and
adc
sbb
rorb
sbb
and
int
xor
and
adc
dec
xor
mov
and
test
inc
adc
dec
dec
les
dec
scas
addb
mov
in
mov
pop
icebp
adc
inc
and
loope
lret
mov
movsb
push
push
ret
lcall
icebp
or
and
pushf
push
je
ret
rorb
and
pusha
dec
or
and
ret
clc
sbb
pop
add
xchg
ret
push
fisubs
pop
mov
lcall
ds
and
add
into
and
adc
xchg
xor
scas
orb
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
add
and
test
popa
push
ljmp
add
es
in
test
loop
loope
or
add
aam
aam
mulb
shll
fildl
or
or
and
xor
sub
icebp
addr16
add
fucomp
outsl
sbb
lock
and
mov
and
divb
jl
and
jecxz
sbb
sbb
int
add
or
dec
dec
lea
and
std
shll
sub
aaa
jge
je
std
push
sbb
add
fstps
and
jge
aas
pusha
mov
pusha
loope
pop
sub
xor
cmpsb
adc
adc
adc
cmp
ds
pusha
fldl
pop
cwtl
ljmp
pop
sub
sub
xlat
sub
push
adc
test
add
add
sub
xor
mov
dec
sbb
and
cld
into
add
das
jae
dec
jne
orl
scas
jmp
push
and
mov
stos
ficompl
notl
dec
icebp
sub
out
insb
xorb
les
icebp
lcall
and
or
lods
or
flds
push
sub
sti
fstps
jmp
fisttpll
shlb
cltd
fndisi(8087
movsl
pop
test
inc
push
hlt
adc
jbe
fildl
cmovne
sub
add
jl
mov
push
push
xchg
shll
xor
test
hlt
scas
or
and
mov
call
mov
aaa
sbb
out
mov
mov
add
lock
cmp
sub
sub
jmp
sub
cmp
loopne
sub
psubusw
jge
pusha
movsb
into
adc
xor
dec
or
sbb
sbb
mov
add
inc
and
stos
and
shrb
mov
hlt
and
jge
fstpl
or
repz
lret
add
in
inc
rorl
inc
or
repnz
xorl
mov
mov
je
aam
xchg
mov
cli
shrl
shrl
orl
pop
xchg
push
nop
loopne
or
cmp
pop
jmp
pop
cs
add
adc
js
jno
adc
mov
sbb
xor
push
pop
cwtl
out
add
popa
mov
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
repnz
and
and
add
outsl
add
out
pop
fsubs
inc
cmp
je
les
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
mov
pushf
sub
add
mov
fwait
inc
sbb
out
mov
add
sbb
xor
jp
lahf
test
jmp
jno
leave
adc
and
push
xor
fdivp
push
add
or
xor
enter
insb
ret
aad
push
add
in
sub
xchg
scas
adc
mov
or
and
sub
es
push
mov
add
or
pop
mov
shlb
fadd
push
xchg
or
sbb
mov
push
das
adc
inc
out
int3
mov
int3
arpl
arpl
jne
adc
xor
jl
rorl
rcll
cmp
cltd
les
stos
andl
jo
mov
loopne
jecxz
xchg
add
xor
sbb
dec
adc
mov
sbb
negl
add
roll
or
mov
stos
push
lret
lock
or
cltd
jge
sbb
pushl
fcmovnbe
insb
add
push
mov
xor
into
pop
out
popf
mov
cmp
sbb
add
xchg
ret
ss
mov
cli
push
mov
rcr
pop
xchg
jge
mov
out
mov
andl
xor
test
pmulhw
or
dec
das
fstps
add
aam
xchg
shll
push
or
outsl
lcall
or
push
out
mov
adc
jne
pop
je
ret
cmc
in
add
or
push
and
imul
es
sub
inc
mov
test
xchg
push
pop
dec
ljmp
adc
fnstsw
movswl
mov
test
sbb
loop
inc
fnstenv
and
ror
mov
int
xor
fdivl
xchg
fs
testb
or
push
mov
mov
fldt
fwait
ja
or
adc
sbb
ret
inc
adc
repnz
call
movsb
fldpi
imul
mov
or
adc
add
inc
pop
sti
lret
dec
sbb
xorb
scas
test
mov
cmc
mov
pop
test
pop
xchg
jb
xchg
mov
sub
jmp
and
insl
inc
add
int3
or
and
mov
sbb
jle
test
jg
daa
inc
dec
int
fadds
jo
stos
jne
push
pop
lock
mov
loopne
mov
pop
sbb
adc
addb
ja
lds
test
jne
push
mov
pushf
add
lcall
xchg
add
adc
adc
bnd
imul
and
push
sbbb
mov
cltd
xor
repz
addr16
sti
jbe
inc
mov
fsubrl
test
push
cmp
mov
or
or
loope
and
int
sub
test
and
cmp
dec
scas
scas
and
add
test
push
or
outsb
push
cli
adc
lods
sub
xor
inc
push
mov
les
inc
test
daa
mul
pop
test
out
addb
add
xlat
xor
sub
insb
lock
stos
jp
arpl
stos
pop
pop
pop
push
movsl
push
in
inc
add
jecxz
cmp
dec
mov
push
add
mov
or
adcl
scas
ret
dec
or
inc
lea
pop
sbb
push
shrl
rolb
sbb
stos
and
dec
call
loop
rolb
aas
adc
or
repz
std
and
and
mov
out
insb
lock
mov
inc
adc
iret
xchg
lea
cmp
cli
sub
cmp
jb
cmp
sbb
mov
cmp
push
add
out
mov
push
add
pop
sti
or
sub
adc
adc
cs
sarb
mov
mov
test
sbb
lea
sub
testb
add
xor
xchg
idivl
pop
or
loope
inc
daa
xchg
add
add
push
dec
xor
cmp
xorb
xor
sbb
movsb
push
loopne
mov
shl
lods
inc
cmp
mov
xor
add
mov
and
push
ds
push
or
faddp
scas
and
aam
out
sub
dec
mov
adc
pop
or
dec
xchg
push
fs
sub
loope
add
je
clc
das
adc
lahf
or
xor
pop
dec
lea
push
xor
push
xchg
rcr
inc
lods
js
hlt
cmp
and
dec
outsb
sbb
enter
dec
or
inc
rol
or
lea
cmp
pop
adc
fisttpll
cli
sbb
push
out
jmp
pop
push
push
out
inc
jp
add
icebp
popl
iret
dec
jns
cmp
xor
shl
hlt
loopne
push
mov
aas
mov
mov
fbld
lds
sbb
and
jecxz
cmp
inc
xor
xorl
add
shll
pusha
cmp
mov
cld
cmp
daa
andl
add
adc
jle
lea
shll
into
mov
and
mov
sub
mov
adc
imul
and
shl
test
loope
jecxz
mov
fnstcw
or
cmpsl
fiaddl
pop
lock
add
cwtl
cmp
sahf
push
push
es
lret
dec
clc
pop
lock
and
xor
mov
orb
cmpsb
mov
add
sub
push
push
add
push
cs
subb
andb
mov
dec
adc
sbb
cmp
sbbb
and
xor
lret
pop
dec
scas
mov
lea
shll
mov
cmp
add
outsb
xchg
add
cmpsb
fiadds
mov
js
cmp
testb
mov
rorl
enter
mov
sbb
push
jo
push
or
outsb
pop
xchg
cmp
scas
cmp
xchg
or
ss
cmp
je
dec
or
or
out
mov
dec
add
lcall
add
sbb
sbb
add
or
mov
sub
add
data16
fcompl
fistpll
push
lea
mov
adc
mov
outsb
sub
sbb
or
push
add
jmp
xor
roll
xchg
test
xchg
jbe
sub
add
adc
xchg
idivb
jno
cmpb
add
rol
sbb
fadds
add
and
movsl
or
push
jne
cmpsb
jo
fdivs
or
add
mov
loopne
rcr
ret
push
pop
sbb
sub
mov
lock
les
adc
sub
mov
mov
mov
cmpl
mov
mov
lock
pushf
add
adc
insb
pushf
cld
mov
adc
or
shlb
sbb
add
add
lods
cmc
popf
xchg
lcall
sbb
mov
or
aam
insb
jmp
cmpsb
sbb
inc
dec
sub
das
aaa
sbb
aaa
mov
fadd
inc
add
fs
push
int3
or
cltd
push
enter
rorb
or
xchg
or
add
or
xchg
lcall
pop
or
jo
inc
lea
adc
inc
mov
or
mov
cmp
pop
sub
pusha
inc
je
add
sbb
ret
jmp
xchg
jmp
cmpsl
or
insb
xchg
xchg
sub
adc
dec
ret
fstp
adc
ret
adc
shlb
push
fmul
inc
imul
aam
arpl
and
push
jmp
xorb
jno
out
in
cmp
pop
xor
add
inc
loope
xor
or
add
jl
cmp
jge
adc
mov
and
insb
jl
xor
xchg
cli
mov
add
add
lds
xchg
sahf
inc
loop
jge
adc
cld
push
and
or
dec
test
sub
fimull
andl
test
pop
sub
fdivl
pop
ret
xor
dec
cmc
adc
nop
sbb
daa
xor
jge
add
sub
push
fdiv
aas
test
enter
js
subb
fcompl
mov
push
js
sbb
das
sub
leave
and
add
insb
movb
std
or
xchg
fbld
mov
lods
inc
popf
neg
sbb
movsb
mov
and
es
pop
das
adc
jg
ret
data16
shll
add
xor
xor
dec
inc
popf
subb
lods
daa
or
and
adc
fidivrs
jmp
inc
xor
mov
jb
inc
loope
mov
sbb
cwtl
fisubs
insl
xchg
mov
ja
mov
dec
inc
mov
push
cltd
dec
or
adc
sub
push
clc
sub
rcrl
ret
add
jecxz
dec
inc
xor
sbb
pop
cmp
mov
cld
add
hlt
shrd
sbb
cltd
add
cmp
jge
sbb
clc
dec
leave
or
std
xlat
mov
mov
add
dec
jmp
mov
cld
sub
push
or
rcl
sub
lcall
xchg
insb
xor
sahf
inc
fidivrl
push
ret
mov
lock
shl
dec
push
mul
push
and
imul
sbb
js
jg
jecxz
push
jb
xor
push
into
jnp
jmp
adc
jle
neg
mov
cmp
sarl
fcmovnb
iret
xlat
push
shll
xchg
add
cwtl
jmp
in
lock
inc
adc
test
jl
jg
mov
lret
xchg
dec
inc
dec
sahf
sub
dec
pop
or
or
pushf
dec
shl
sbb
addl
fidivrs
in
orl
jo
icebp
frstor
es
cmp
dec
adc
push
loopne
add
shufps
movl
shrb
inc
sbb
loopne
cmp
jle
in
push
sbb
mov
jmp
lock
enter
xchg
jns
neg
call
lock
cmp
cli
ret
aaa
push
or
add
sbb
dec
and
pusha
push
mov
push
jo
roll
push
repnz
je
or
inc
lock
fnstenv
addb
shll
leave
adc
mov
push
sbb
outsb
cmp
inc
jmp
arpl
sbbb
jne
bound
push
cmp
nop
cmp
mov
xchg
in
push
mov
xor
sub
cmp
pusha
inc
add
leave
xor
enter
sbb
push
push
push
shll
out
dec
out
mov
jl
loopne
jge
clc
and
mov
push
stc
mov
ss
ret
add
popf
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
imul
cmpsl
imul
inc
popa
je
inc
je
repnz
mov
mov
xor
xor
pop
sub
add
lcall
movsb
sbb
jp
push
mov
or
in
dec
clc
push
popa
imul
mov
or
mov
pop
roll
add
inc
loope
ret
push
cmp
mov
push
je
dec
ret
sbb
pop
inc
test
jp
test
and
out
mov
shl
ds
push
adc
push
mov
push
pusha
jmp
jp
div
mov
push
xchg
shll
push
xor
data16
hlt
jbe
or
push
popf
cmpb
cmp
cli
jge
mov
adc
sbb
je
add
or
inc
jecxz
cmp
add
add
mov
pop
call
aam
adc
push
test
out
inc
jmp
cmc
cmp
add
fwait
push
adc
dec
inc
add
inc
ljmp
xor
push
cld
jmp
mov
sub
and
and
add
nop
pop
dec
jl
push
push
adc
dec
std
and
mov
inc
ljmp
inc
adc
push
rorb
int
je
sub
mov
movsb
push
sub
push
mov
inc
mov
adc
cltd
xor
jmp
insl
fwait
loopne
lds
sub
cmpl
pop
clc
jo
push
fsubrp
push
or
push
sbb
dec
push
mov
adc
or
push
imul
pop
add
movsb
cs
rclb
jo
cld
add
or
in
fiaddl
jb
pop
inc
cmc
andl
fildll
add
lret
cltd
je
dec
je
dec
push
push
jmp
or
jmp
or
sub
add
test
mov
xchg
orl
pop
adc
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
jecxz
data16
int3
or
add
mov
sub
sub
lods
sarb
iret
xor
loopne
sbb
sbb
adc
aas
cmp
ljmp
mov
movsl
cmpsb
sahf
mov
addl
mov
or
push
fldt
lahf
jbe
or
cld
xchg
push
sbb
gs
rclb
jnp
push
nop
mov
fidivl
into
sub
and
inc
imul
and
inc
lret
jl
mov
movsb
add
or
pop
cmpl
adcb
pop
enter
or
pop
dec
sbb
add
sahf
rcrb
push
call
in
mov
rorl
or
sbb
lret
aam
adc
out
out
clc
shr
add
or
mov
imul
pop
or
mov
push
push
adc
test
sub
xchg
mov
lret
add
mulb
or
add
pop
mov
pop
add
popf
jp
pop
cmp
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
aaa
and
pop
push
push
mov
or
and
push
and
cmp
xchg
xor
add
add
xor
and
into
clc
cmpb
lea
roll
mov
push
es
std
sub
lock
daa
and
push
or
roll
xor
pusha
cmpsb
and
xchg
or
xor
add
or
rcrb
mov
push
and
andb
loop
loop
sub
mov
jle
cli
jne
mov
sbb
inc
roll
add
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
jbe
les
jb
pop
xchg
dec
pop
mov
js
xor
flds
imul
leave
pop
inc
cmpsb
sub
sbb
push
inc
clc
out
loope
fwait
sub
loop
dec
rorl
xor
test
push
xor
add
ret
cmc
xchg
inc
push
addl
lret
sub
mov
testb
push
jo
mov
push
ret
adc
dec
daa
xor
push
cmpb
inc
add
cmp
or
or
mov
jo
outsb
cmp
ja
lods
sub
lds
popa
push
dec
sbb
add
mov
xchg
shlb
mov
and
pop
xchg
rcrb
mov
xchg
mov
pushf
outsl
fs
mov
cmp
fdivrp
lea
mov
clc
push
sbb
xor
or
push
mov
or
mov
mov
fisttps
sbb
xor
jne
add
add
and
cmp
je
add
mov
sub
movsl
loope
les
pop
subb
and
adc
sbb
fildl
ss
push
add
and
add
cmp
and
push
rorb
jmp
push
sbb
dec
mov
call
ss
adc
imul
inc
dec
sub
adc
roll
pop
aad
call
push
cmp
mov
hlt
lcall
sarb
inc
and
call
daa
movsl
jo
aam
pop
cmpsb
fwait
stos
or
mov
test
mov
pop
gs
adc
push
jmp
adc
add
cmp
je
dec
xchg
sub
xor
inc
aam
push
fstl
or
xor
ficoml
shlb
push
jns
push
movb
fwait
add
test
push
dec
orb
ds
mov
cld
inc
sub
cmpsb
pop
cmpsb
sahf
and
ljmp
jmp
jle
adc
lret
mov
mov
jnp
jmp
dec
add
ret
add
adc
rorb
push
addl
mov
pop
fprem
out
roll
leave
add
or
je
mov
iret
adc
adc
pop
or
pop
test
mov
xchg
pop
bound
adc
jne
push
and
hlt
fsubl
sti
pop
faddl
pushf
jo
subb
mov
lret
arpl
pop
sbb
rorl
jo
orb
test
lea
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
mov
mov
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
movsl
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcb
add
rorb
adc
add
sbb
rolb
inc
cmp
cmovae
or
call
popa
add
arpl
insl
and
and
adc
mull
pop
xlat
ss
scas
push
jo
add
mov
ljmp
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
and
je
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
add
mov
adcb
push
orb
dec
icebp
or
add
mov
mov
cs
cmpsb
sar
in
pop
je
adc
cli
out
mov
push
cmp
ja
add
cmp
adc
cmp
jne
shll
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
dec
or
je
adc
pusha
and
adc
sbb
dec
push
pop
dec
ljmp
add
mov
int
xor
cmp
jg
test
push
movb
jmp
mov
and
sbb
stos
iret
cmp
test
add
mov
and
mov
negb
pusha
movw
jb
rcrb
test
inc
push
lcall
test
loop
mov
in
ljmp
mov
popa
lods
sti
scas
fcmovb
outsl
test
mov
ds
push
pushf
addl
andl
push
pusha
mov
push
add
cmp
pushf
rcrb
mov
es
imul
std
rcr
call
inc
sub
lock
dec
lea
sar
dec
dec
jmp
inc
into
movswl
xchg
ss
neg
push
es
ljmp
fidivrl
cmp
sub
inc
ret
inc
call
cmp
xorl
push
jae
pop
insb
fs
add
dec
addr16
cwtl
mov
lcall
adc
mov
push
jl
pop
or
dec
ret
push
lcall
mov
adc
jae
in
mov
fcmovu
push
or
and
lea
inc
xor
xor
cmpsl
add
into
sahf
push
mov
dec
adc
les
jae
pop
and
mov
inc
call
in
ljmp
xor
cmp
jle
mov
jne
lea
or
cwtl
rolb
adc
pushf
inc
mov
push
lea
sbb
nop
pushf
test
mov
fcoml
xor
xchg
dec
push
nop
add
add
movsb
sub
or
ret
movsb
xor
inc
insl
pusha
imul
mov
or
int
jl
push
lods
and
cld
sarl
jae
jle
push
jo
adc
clc
shll
sbb
out
adc
rolb
rol
pop
or
push
loope
fldenv
cmp
rorb
sbb
push
lret
movl
mov
or
pop
outsl
and
jle
insl
test
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
hlt
mov
imul
filds
and
push
dec
repnz
add
dec
cli
cli
inc
cli
div
sub
sub
imul
and
cmp
test
outsb
dec
bound
and
push
scas
mov
or
mov
fdiv
mov
xor
and
and
ljmp
imul
enter
jb
data16
lock
xor
fmuls
add
pop
fdivl
push
fiadds
or
pushw
sbb
mov
xor
loop
out
jge
sbb
enter
fcoms
jb
inc
jne
pop
adc
lret
dec
in
push
dec
inc
push
aam
daa
adc
jne
outsb
das
cmp
inc
shlb
add
jns
cmp
sub
nop
and
dec
sub
jne
xor
sbb
shlb
dec
push
adc
cmpsb
xor
add
or
mov
sbb
fcmovu
mov
mov
insl
test
je
inc
or
mov
int3
jg
add
xchg
add
idiv
adc
xchg
adc
mov
into
or
adc
xchg
push
push
sbb
mov
out
and
jge
rcll
enter
jb
or
jecxz
jb
jmp
add
repnz
sub
fistpl
fs
movsb
in
nop
sbb
fwait
dec
push
mov
pusha
add
sub
xor
sbb
mov
sbb
add
inc
mov
dec
xchg
cmp
jle
push
pop
outsb
add
incb
sub
mov
or
xchg
lods
pop
cmp
in
xlat
leave
and
pop
cli
pop
inc
pop
rclb
xor
loop
cli
fcoms
xor
fiadds
cmp
imul
pop
mov
mov
imul
call
daa
mov
pusha
lea
push
and
stc
xor
mov
mov
or
loop
in
ficoms
out
pop
sti
je
fidivrl
add
cmp
cld
or
dec
into
or
xor
mov
test
clc
rolb
push
mov
inc
dec
enter
sahf
mov
mov
add
or
mov
sub
test
call
or
add
into
pop
add
cld
or
mov
inc
ljmp
jmp
insl
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
test
mov
call
ret
jp
jne
dec
xchg
xorb
divb
int
pop
or
out
cmp
in
filds
or
mov
lret
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
add
sub
mull
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
add
push
pop
scas
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
imul
sub
and
pop
pop
mov
xor
pop
cmpps
push
sub
prefetchw
sahf
inc
ret
or
imul
push
lock
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
pop
rolb
jnp
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
add
dec
ljmp
dec
adc
add
cmc
leave
nop
clc
mov
sbb
sub
or
add
push
push
scas
sbbl
cmpb
mov
addl
xchg
add
test
loopne
mov
xor
sarl
repnz
test
adc
lcall
scas
pop
pushf
sbb
xchg
into
mov
mov
sbb
and
sbb
xchg
xchg
out
inc
jg
into
into
xchg
mov
xchg
into
mov
ja
mov
sub
push
pop
nop
sarl
sahf
pop
mov
aam
pushf
fcoms
clc
shlb
or
sbb
stos
push
sbb
push
adcl
mov
push
lcall
test
out
adc
loope
jo
add
movsb
es
jno
fwait
stos
arpl
negb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
pop
add
mov
in
daa
xchg
jmp
inc
xor
mov
loopne
aad
out
pop
mov
adcb
jge
sub
sti
adc
fstps
xchg
mov
out
or
mov
popa
pop
enter
fsts
inc
xchg
sbb
push
pop
jbe
inc
lock
scas
add
sbb
rcrl
push
divb
in
hlt
add
mov
ljmp
fldenv
and
or
jo
push
sahf
add
repz
sbb
mov
push
insb
jno
xchg
les
xor
je
sub
sub
loope
test
mov
mov
push
roll
mov
cmp
jb
cmp
jbe
dec
and
ror
in
mov
gs
pushf
xchg
loopne
lds
mov
fisubrl
cmc
pusha
test
stos
mov
ret
or
aam
sbb
aam
gs
jle
mov
adc
gs
inc
or
mov
inc
ret
xchg
adc
pop
aam
mov
adc
sub
push
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
inc
aaa
sbb
pop
and
lock
xor
and
fmul
xor
or
push
push
rclb
push
cmpsl
push
pop
adcb
push
lret
xor
leave
rcrl
cwtl
xchg
jmp
dec
inc
push
inc
adc
aam
ljmp
mov
cmp
cs
push
inc
push
aaa
sbb
add
mov
mov
lea
mov
ret
pop
cmp
add
fsubrl
daa
fnstcw
add
xchg
inc
std
aam
pop
jmp
mov
or
mov
pop
xor
push
add
pop
les
bound
dec
sub
adc
sbb
dec
mov
lahf
stos
mov
loope
aaa
jp
or
jne
or
xor
sbb
call
or
xor
insb
ss
inc
mov
dec
push
outsl
mov
pushf
inc
inc
xor
inc
data16
pop
push
inc
cmp
jnp
dec
loope
add
and
fidivrl
sbb
xchg
sbb
dec
in
shrb
jle
mov
jno
test
sbb
cmp
enter
fadd
rorb
sti
call
push
mov
push
stos
iret
pop
popf
adc
pop
out
sub
dec
lea
stc
addl
das
add
std
mov
pop
pop
add
lock
dec
mov
sbb
shlb
mov
mov
jmp
dec
adc
add
fs
loope
pop
sbb
inc
mov
mull
outsl
jae
ja
sub
xor
or
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
mov
pushf
xor
push
mov
sub
add
inc
sbb
mov
je
shrb
sub
dec
hlt
jmp
dec
xor
add
jbe
adc
sbb
sbb
pop
jnp
jecxz
scas
adc
xor
test
jbe
aad
push
jno
test
shrl
lret
pusha
add
lods
mov
rorb
inc
jb
xor
adcb
cmp
push
or
clc
inc
and
add
sub
lea
push
sahf
sub
sti
and
js
push
fcomps
lahf
imul
pop
mov
push
and
nop
cmp
add
cmp
rolb
test
pop
xor
jmp
or
or
cmp
mov
mov
push
push
push
dec
sub
mov
jo
addr16
mov
jl
push
mov
inc
push
push
std
inc
ret
xor
sub
mov
enter
les
les
mov
decl
xchg
pop
add
and
xchg
and
cld
push
xchg
sbb
push
add
add
fadds
loope
push
sar
fsubs
sarb
or
push
and
and
xor
xchg
cmp
pop
sub
inc
arpl
shll
xchg
mov
add
orl
test
mov
adc
add
mov
add
sub
dec
push
mov
xor
roll
cltd
sub
sub
dec
sbb
fisubl
push
push
pushf
ret
es
movsb
jo
inc
mov
push
clc
rclb
lahf
mov
int3
jmp
subl
push
sbb
xchg
add
or
insl
cld
mov
loopne
rcrb
xchg
loopne
ss
or
ja
or
sbb
push
les
inc
pop
popa
adc
fistl
mov
rcrb
add
cmc
or
push
xor
data16
and
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
stos
mov
adc
jae
xor
scas
arpl
xchg
jmp
sub
jp
dec
xor
in
imul
stos
and
mov
dec
sub
outsb
insl
clc
pop
or
popf
dec
dec
inc
test
mov
addb
ret
lds
xor
or
fmulp
xor
mov
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
loopne
xchg
adc
movl
add
push
xor
sub
sbb
adc
push
shl
imul
rclb
mov
mov
icebp
inc
push
sahf
adcl
sub
cld
arpl
imul
rorl
fidivrl
out
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
sbb
mov
aam
out
push
inc
pop
xchg
cmp
out
jp
repnz
adc
test
jg
or
lock
imul
lcall
pushf
icebp
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
push
cs
inc
push
in
and
mov
cltd
jb
dec
mov
xor
inc
add
loope
icebp
push
push
cmp
push
sub
cmp
inc
pop
add
dec
jb
and
pusha
scas
lea
inc
lock
xchg
enter
push
arpl
pop
adc
jne
testb
testb
repnz
insl
outsb
sub
in
sub
push
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
repz
stc
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
mov
xor
push
int
sub
cmpl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
test
jmp
mull
in
push
adc
in
cmpsb
jo
mov
inc
xchg
cmp
std
imul
push
and
and
inc
sbb
inc
lea
xor
xchg
adc
jo
js
and
sub
mov
sub
push
jbe
lds
xchg
pushf
sbb
mov
insb
sbb
push
xchg
sub
mov
add
jl
pop
sbb
mov
test
push
add
insl
jmp
push
inc
mov
inc
lock
cmp
add
or
dec
push
fstps
mov
and
push
push
push
add
or
daa
mov
jb
or
adcl
data16
int
incl
inc
adc
pop
jl
and
stos
in
mov
call
push
mov
addr16
rcll
jae
mov
call
or
loop
stos
ss
test
repnz
inc
add
rclb
inc
inc
mov
les
fs
add
mov
mov
shr
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
nop
adc
jnp
push
lods
cmp
fildll
cltd
adc
and
cwtl
ret
cmpl
dec
pushf
pop
adc
pop
jne
jle
inc
or
sbb
mov
lret
cmp
adc
cmp
and
int3
mov
out
pop
xor
cmp
movsb
xor
cmpsl
cmpsb
jmp
and
pop
pop
push
inc
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
lcall
sbb
lods
shll
pop
push
inc
or
addr16
imul
shrl
inc
dec
pop
dec
mov
sbb
dec
or
pop
add
test
xor
inc
inc
push
pop
mov
lea
ds
xorb
ljmp
add
out
repnz
loope
mov
dec
jo
or
xchg
es
fs
dec
cmpsb
popf
and
dec
push
adc
cmpl
inc
sub
inc
pop
fwait
ljmp
cmp
xor
push
sbb
ja
popa
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
aas
sbb
testb
cmp
inc
dec
dec
punpcklbw
notl
adc
std
push
rcll
sub
cmp
mov
mov
adc
xor
leave
push
dec
je
dec
jne
push
cs
rclb
ja
fcoms
or
xor
add
add
out
inc
je
je,pn
adcl
hlt
filds
push
sub
les
aaa
mov
sbb
cmpl
or
mov
pop
icebp
push
dec
je
xchg
jns
lea
mov
xchg
out
bnd
loope
inc
sbb
pop
xor
jecxz
jmp
jmp
cltd
xchg
and
insb
in
xchg
lods
push
push
xchg
add
hlt
push
lock
jb
push
icebp
stos
push
arpl
push
subb
mov
popf
clc
push
lea
mov
inc
push
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fldl
out
insb
sub
clc
cli
dec
cmp
fcmovb
mov
lret
xchg
push
scas
or
xor
pop
sbb
push
xchg
sbb
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
mov
imul
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
inc
jbe
fs
mov
jle
jl
in
js
dec
add
xor
inc
sbb
cmp
jne
add
add
push
mov
adc
dec
dec
cmp
rolb
xchg
icebp
mov
movsl
add
sbb
je
addb
xor
jno
jbe
test
pop
lret
lock
xor
or
add
cli
and
inc
lock
or
imul
adcl
scas
jle
out
orb
fiaddl
and
mov
and
test
faddl
sbb
retw
add
dec
jg
adc
jp
fnstenv
mov
jno
adc
xchg
movsb
fdivrl
sbb
pop
ret
sbb
and
adc
or
adc
cmp
rclb
jb
or
or
cmpsl
push
lock
cmp
mov
and
divb
pop
pushf
and
xchg
xchg
jne
jae
mov
das
adc
or
inc
test
push
inc
adc
lods
bound
xorb
or
jp
cmpsl
adc
fcoms
jbe
inc
lret
push
test
outsb
stc
pop
sti
sub
add
insb
insb
and
mov
push
mov
add
rclb
ss
aas
push
adc
mov
ret
enter
je
cmp
cmp
jecxz
and
mov
testb
and
loopne
push
testb
add
pusha
or
xlat
in
test
mov
push
push
mov
cwtl
and
jb
mov
push
cmp
jle
xor
cmp
jbe
clc
push
push
or
or
push
cwtl
push
pop
js
push
inc
rcr
xchg
xchg
cmp
xor
insl
mov
cmp
test
add
push
orl
lds
push
shr
lods
test
rcrb
fstpl
pop
jmp
enter
push
sub
dec
scas
push
inc
pop
pop
pop
push
lahf
sub
sub
pusha
push
orb
lods
pushf
adc
popa
stos
ret
mov
ljmp
in
fstl
xchg
popl
xchg
ss
jp
mov
sbb
mov
inc
adc
inc
sbb
mov
add
mov
movsb
cltd
jne
add
push
in
add
mov
mov
daa
stc
pop
enter
add
xor
adc
sbb
sub
add
sub
add
mov
mov
add
test
adc
and
pop
cmp
and
fld
fldcw
xor
fildll
nop
push
xchg
pop
les
fstps
icebp
pop
packsswb
sti
rolb
mov
or
sub
das
fsubs
nop
inc
fidivrl
test
lea
sbb
lods
mov
mov
and
sub
dec
addl
test
incb
or
dec
in
jge
add
mov
xchg
inc
enter
or
or
dec
xchg
add
faddl
sbb
mov
or
insb
mov
dec
sarl
xchg
lock
dec
insb
push
cwtl
pop
adc
nop
mov
jo
aam
or
or
mov
xchg
fistl
in
add
add
pusha
xchg
daa
daa
in
dec
call
or
pusha
bound
pop
movsb
mov
mov
es
cld
inc
fmul
and
push
pop
fwait
xchg
fbstp
add
mov
or
and
cmp
jl
xchg
int3
push
xlat
clc
push
pop
rcrb
and
aad
sub
cmp
mov
xchg
sbb
push
cmp
dec
faddp
add
rcll
enter
inc
push
ret
popf
jb
arpl
add
inc
icebp
fdivs
adc
adc
in
cmc
popa
loopne
in
or
nop
adc
xor
mov
icebp
into
or
rorb
add
sbb
shrl
shll
cwtl
lods
and
mov
push
adc
dec
ret
movsb
inc
fs
inc
cmpsb
mov
adc
ljmp
xchg
sbb
adc
adc
ss
add
and
popa
or
xchg
or
mov
in
xor
pop
inc
xchg
arpl
test
lret
sbb
loopne
leave
setae
cmp
mov
dec
inc
adc
nop
in
jb
arpl
jne
jl
in
jbe
push
js
fdivl
pop
xchg
int3
sub
and
and
in
cmp
add
mov
call
rcl
mov
and
incb
dec
aam
rorb
aaa
pop
mov
pop
popa
cmp
in
shll
mov
loop
lahf
cmp
cli
std
push
jno
pusha
cltd
fs
dec
fs
es
js
add
cltd
jl
ds
xor
sbb
call
mov
adc
loopne
or
add
mov
jo
adc
cmpsb
mov
in
fdivrl
mov
icebp
lret
add
xchg
xor
ret
adc
shr
rcrb
cmp
and
jo
popf
mov
in
sti
gs
push
test
sbb
call
adc
add
imul
rolb
aad
push
stos
jne
cmp
inc
sub
xchg
int
adc
mov
test
mov
imul
mov
and
jl
stos
faddl
popa
js
lods
add
or
lock
push
push
pushf
int3
mov
mov
or
mov
sbb
add
ss
adc
mov
jl
ret
dec
insb
cltd
adc
je
enter
sub
nop
int3
aam
dec
add
inc
cmp
mov
jns
add
adc
cmpsb
shl
mov
lret
mov
pushf
popf
lock
bound
test
cld
or
aam
adc
adc
aam
enter
nop
sbb
call
or
sbb
or
inc
sub
jg
mov
dec
inc
nop
test
cwtl
inc
xchg
das
jo
or
push
fsubrl
scas
aam
push
test
lret
inc
cmp
and
imul
icebp
mov
fs
mov
and
ret
icebp
inc
addb
roll
fsubrs
sbb
int3
sbb
adc
jl
daa
icebp
pushf
iret
push
and
mov
jns,pn
es
mov
or
add
inc
fcoms
clc
cltd
pop
hlt
push
xchg
add
or
add
lret
ret
dec
add
pop
movsb
add
call
inc
rcrl
lcall
bound
sbb
fdivrl
sub
loope
adc
or
inc
mov
xor
dec
fs
lock
xchg
ret
loop
add
adc
mov
shrl
push
or
mov
test
mov
addr16
mov
and
push
cs
adc
mov
mov
scas
outsb
or
inc
sbb
std
in
popa
xor
test
or
scas
push
or
repnz
mov
ja
fbstp
sub
cwtl
and
sbb
in
and
jne
test
and
loopne
sbb
in
mov
lea
or
mov
loope
in
push
xchg
pop
and
inc
fcomp
dec
repz
push
jg,pt
movsl
sbb
imul
mov
jmp
addl
inc
xchg
in
call
mov
pop
andl
es
mov
xlat
adc
mov
adc
or
push
sbb
popa
xchg
sbb
xlat
clc
aad
movd
pop
xchg
nop
sbb
cmp
decb
inc
imul
jne
daa
in
mov
or
out
andb
loopne
or
ror
xchg
fcomp
nop
dec
push
cltd
aam
loopne
sub
cltd
loopne
fdivs
nop
rorl
les
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rclb
shll
test
sbb
addr16
jmp
mov
scas
mov
sti
in
mov
daa
jecxz
xchg
mov
pop
in
das
xchg
nop
faddl
mov
or
jb
cmp
lock
test
sub
push
fcoms
call
push
xchg
or
cmp
popf
cmp
fmull
sbb
enter
or
and
and
lock
nop
ret
inc
lock
xor
xor
sbb
mov
adc
mov
movsb
xchg
test
call
mov
aad
or
enter
xlat
mov
shrb
insl
or
pusha
dec
filds
inc
movsb
push
or
push
pop
xor
mov
xor
ror
mov
aaa
adc
imul
mov
aad
jnp
stc
scas
mov
ret
sbb
jecxz
cmp
inc
test
or
and
fwait
jbe
push
or
fmull
push
and
adc
adc
and
orb
push
adc
push
lds
and
jp
add
or
test
adc
sub
xor
xor
je
andl
mov
call
bound
in
pop
aam
fsubrs
sbb
xor
add
dec
enter
and
andb
xor
push
adc
inc
sub
imul
rcrb
mov
inc
fcom
pop
xchg
test
adc
call
jo
in
lock
jno
insb
adc
sub
sti
xor
pop
subb
lds
and
mov
add
mov
xor
test
mov
xlat
and
jbe
ret
in
push
movsb
cmp
das
add
enter
cmpleps
dec
loopne
shrb
daa
adc
scas
in
mov
push
push
mov
push
jmp
mov
loopne
or
pop
inc
cmpsb
movsl
push
mov
outsb
mov
inc
mov
dec
mov
rorl
inc
cmpsb
adc
or
mov
fistl
mov
fildl
js
mov
pushf
xor
cmp
fmull
in
jne
jge
rclb
loope
mov
sbb
rorb
faddl
mov
mov
and
fmuls
mov
xchg
push
sbb
push
inc
mov
push
shlb
pop
or
adc
xchg
or
or
or
and
mov
mov
or
pop
and
xor
mov
and
cmp
cmp
adc
nop
inc
scas
adc
or
push
in
or
jo
or
push
movl
lods
xor
in
or
push
mov
and
addb
dec
add
shlb
adc
stc
aaa
dec
and
pusha
or
inc
ss
pop
aaa
fistl
and
inc
test
cmp
call
pop
shrl
les
sub
int3
pinsrw
or
test
cmp
int3
insl
stos
mov
pop
aam
subb
enter
mov
mov
jg
cmp
in
push
mov
sub
ja
dec
xor
mov
adc
and
mov
sub
inc
insb
add
mov
pusha
xlat
mov
lods
push
inc
jbe
jmp
cmp
lea
fisttpll
dec
in
test
adcl
loopne
jmp
jb
sbb
xchg
test
insb
seta
xchg
pop
xor
cmp
insb
or
insl
stos
lea
mov
mov
int3
mov
unpcklps
aam
ret
cmp
cmpsl
or
cmp
mov
cmp
cmp
cmc
insb
or
cmp
in
pop
loop
cwtl
inc
in
cmp
xchg
cmc
pushf
fwait
mov
xor
cwtl
adc
in
and
mov
inc
adc
fmuls
lods
popf
xor
add
rolb
and
enter
jmp
adc
sub
mov
sub
inc
jno
fisttpl
jmp
mov
ja
sbb
push
and
movsb
inc
sub
fdivr
enter
and
and
shrl
fnstcw
mov
adc
in
dec
push
cmp
and
imul
mov
fnsave
mov
notl
aas
mov
dec
xor
cmp
xchg
mov
inc
les
cmp
ja
aas
mov
mov
sbb
jo
test
aas
inc
and
cmp
adc
xchg
adc
les
push
pop
mov
jmp
adc
or
cwtl
dec
mov
testl
int3
jp
xchg
push
and
xchg
mov
cmc
xchg
push
loopne
jb
adc
pop
cmp
repnz
loopne
addl
or
mov
movsl
and
dec
cmpsl
fdivr
repnz
cmp
add
mov
lahf
das
sbbb
dec
loopne
mov
cmp
cmpsb
and
or
xor
mull
test
pusha
movsl
dec
adc
and
pushf
imul
sbb
pop
out
mov
or
adc
mov
mov
xor
rcrl
inc
cwtl
fs
mov
rol
or
int3
sbb
sbb
add
mov
cmp
or
sbb
in
not
ret
pop
sbb
inc
mov
inc
test
dec
inc
in
rclb
popa
xor
insl
faddl
cmpsb
push
in
sub
mov
inc
fdivr
enter
mov
aad
mov
jo
or
pop
cmpsl
and
call
jb
pusha
addb
insl
fldcw
cmpsl
mov
xor
inc
cmpsb
ljmp
sbb
and
or
xor
jge
inc
sub
pusha
test
lods
xor
shll
cltd
notb
rclb
mov
stos
mov
enter
orb
test
gs
pop
lods
inc
xchg
adc
in
jecxz
jnp
dec
in
mov
mov
pushf
loop
xchg
movsl
les
add
ret
rorb
dec
or
xor
and
adc
jl
sbbl
enter
subb
or
inc
lea
rcl
cmpb
xchg
push
fcmovbe
shrb
sbb
mov
pop
in
int3
gs
not
inc
sub
or
sub
cltd
inc
jns
aaa
mov
daa
in
jg
aam
test
rorb
mov
inc
mov
nop
and
mov
pop
and
gs
add
mov
ja
xor
push
les
je
cmp
sbb
in
icebp
nop
dec
call
aad
mov
jle
pop
test
test
dec
orb
test
xor
aam
sbbb
dec
sub
dec
test
fadds
negl
jno
mov
adc
adc
aam
insl
xor
test
dec
mov
pusha
and
push
mov
mov
je
mov
fiaddl
mov
mov
pop
xchg
push
jne
or
sbb
lds
aas
mov
and
das
shll
lds
test
sub
in
sub
dec
gs
mov
push
add
rclb
gs
in
add
int3
or
leave
mov
lds
xchg
test
test
adc
push
push
mov
pushf
and
sub
ret
jb
fcoms
lea
sub
andb
sarb
mov
movsb
mov
mov
rclb
pop
inc
sbb
inc
push
mov
ret
pop
loope
push
cmp
mov
dec
xor
xor
adc
or
push
or
or
test
mov
mov
adc
pop
stos
cmp
dec
add
pop
andb
and
add
xchg
sbb
inc
adc
int
mov
fidivl
test
sbb
mov
orl
and
mov
dec
test
mov
jnp
fs
mov
push
or
or
mov
add
es
je
pop
mov
rcrb
test
rclb
and
mov
and
mov
lret
add
sub
aad
push
jb
decb
nop
xchg
pop
rcrb
push
mov
sbb
and
rcl
mov
jnp
and
cld
push
jge
inc
sub
fcoms
pop
push
faddl
call
or
push
push
adcb
push
jns
adcb
or
sbb
adc
lods
mov
mov
push
jg
cli
sbb
pop
fsubs
pop
adc
push
inc
inc
nop
push
lret
les
add
leave
pop
pop
cltd
push
enter
jmp
cli
filds
inc
jns
pop
call
and
jno
test
mov
xchg
popa
enter
fadds
mov
push
adc
push
fs
lea
dec
pop
icebp
loopne
jns
cs
dec
test
push
cmp
popa
aam
inc
mov
idivl
or
xor
movsl
in
mov
xchg
dec
push
fsubrs
push
sub
adc
insl
sbb
and
push
push
push
pusha
adc
leave
push
xor
and
sbb
xor
and
inc
cmp
add
xor
push
cltd
fcoms
repnz
cmp
mov
or
xchg
imul
sub
lods
adc
inc
enter
or
jle
push
movsb
test
jp
inc
or
test
cmp
pop
xor
mov
push
leave
mov
sub
mov
mov
xchg
mov
fbld
add
test
cmp
xlat
hlt
pop
xchg
and
inc
in
pop
movsl
in
notb
ret
xor
insb
mov
cmp
lcall
or
sub
aaa
inc
and
mov
pop
mov
push
mov
adc
test
pop
les
pop
imul
test
and
sti
les
pop
sub
mov
iret
ret
pop
dec
cmp
mov
mov
nop
add
fidivrs
sbb
cmpsb
mov
out
repz
cmp
add
inc
test
cltd
pop
inc
enter
mov
mov
inc
int3
int3
mov
les
rcrb
in
bound
rclb
dec
out
mov
pusha
inc
inc
adc
adcb
sub
and
test
pop
pop
adc
push
fbld
and
push
mov
and
lahf
out
cmpsb
xchg
shrb
mov
inc
dec
dec
or
pop
daa
adc
sbb
in
mov
sub
inc
fisttpl
and
add
pop
pop
je
lea
and
xor
rcrl
inc
jnp
or
pop
push
loopne
andb
push
sbb
inc
push
movsl
push
jb
arpl
adcl
addl
inc
xchg
loopne
inc
sbb
add
xchg
ja
xor
mov
sbb
test
addb
andl
mov
push
adc
cmp
mov
push
mov
pop
push
outsl
int3
jmp
push
pop
outsw
xchg
and
add
fs
mov
mov
xor
enter
std
aam
stos
imul
sti
mov
or
in
sub
lds
nop
cwtl
cwtl
and
sbb
rcll
cmp
push
in
daa
pop
push
jge
dec
xchg
js
push
xchg
movsb
adc
sub
insl
lods
lods
in
adc
movl
imul
nop
xchg
or
shll
push
mov
in
dec
and
sub
daa
mov
xchg
push
fsts
in
adc
push
add
jne
add
push
insl
and
mov
cltd
insl
lock
in
lock
scas
pusha
imul
cwtl
mov
loope
xor
or
ja
loopne
enter
mov
sbb
mov
fisttpll
movsb
cmp
mov
mov
jg
mov
adc
sub
ret
gs
imul
insb
movl
lock
insl
adc
xor
fimull
aam
dec
outsb
mov
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
shl
dec
int
sub
rorl
int
hlt
pushf
rcll
int3
jns
jo
ficoml
addl
mov
sbb
xchg
movsb
lock
jns
mov
pop
popa
add
insb
or
in
das
or
and
sbb
fcompl
nop
rorl
rorb
sub
mov
mov
mov
loopne
adc
pushl
push
xchg
sbb
adc
xor
mov
mov
and
sbb
inc
jo
aam
les
nop
add
insl
adcb
push
fs
mov
push
je
jl
push
fs
push
test
fs
inc
push
lods
insb
pushf
sbb
fs
dec
movsb
lods
push
movsb
add
inc
dec
xor
jecxz
adc
and
insb
lods
push
leave
and
dec
mov
xchg
dec
xor
pop
xchg
dec
xor
je
mov
and
mov
leave
and
mov
xchg
dec
adc
fistpl
pop
decb
rcr
insb
jmp
rol
shl
imul
adc
mov
enter
inc
inc
inc
adc
xchg
add
je
pop
cltd
sysenter
push
inc
mov
repz
leave
mov
push
xor
pusha
sub
sbb
mov
test
mov
in
inc
xchg
pushf
movsb
in
inc
push
lods
mov
mov
push
cmp
int3
aam
sbb
insb
lods
push
sub
enter
test
enter
adcb
inc
xchg
arpl
mov
lret
les
popa
and
leave
in
addb
and
cmp
pop
daa
daa
daa
mov
bswap
les
lods
movsb
pushf
xchg
pop
dec
outsb
daa
mov
test
dec
es
sbb
push
adc
in
mov
jo
mov
sti
orb
xlat
push
and
nop
push
bound
push
pop
sub
lods
inc
stos
adcb
lcall
test
cmp
push
test
fcmovnu
add
pop
in
adc
cwtl
movsb
aam
sub
sbb
ret
adc
test
andb
cwtl
sbb
mov
jno
inc
sti
jo
loop
sbb
movsb
pushf
loop
cmp
push
ja
mov
mov
pop
leave
and
in
pop
pusha
add
in
dec
jp
inc
call
movsl
push
lods
sub
icebp
movsb
jge
adc
test
mov
arpl
shl
movsb
pop
pop
in
or
pop
sarb
pop
fisubl
inc
inc
idivl
dec
adc
imul
fs
and
push
pusha
mull
add
or
push
dec
push
nop
mov
test
jns
adc
cmp
in
jae
lcall
pop
sub
mov
imul
popf
dec
inc
xor
sub
adc
cltd
push
lds
imul
pop
adc
push
insl
dec
jo
or
insl
mov
sub
ret
inc
and
sub
shlb
arpl
and
adc
fildl
nop
or
loop
rolb
fadds
int3
inc
pop
insb
aam
rcrb
orl
inc
lock
add
xor
ret
or
cmpsb
std
rolb
loopne
pop
sbb
movsb
add
sbb
dec
sub
mov
and
int3
xchg
ljmp
daa
sbb
sbb
rolb
sbb
xor
and
nop
add
fsts
orb
scas
shrb
xor
xor
stc
les
mov
mov
xor
and
xchg
jl
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
sbb
add
jne
jg
mov
adcb
repnz
repz
enter
sub
fwait
or
mov
dec
insb
mov
das
or
jl
mov
nop
movsb
xchg
movsl
mov
sbb
mov
xchg
adcb
push
mov
std
push
nop
inc
sarl
je
jo
add
sbb
or
cmp
imul
xor
fwait
sbb
in
pop
fisubl
adc
mov
sub
cmp
inc
add
add
repz
ret
sub
in
sti
shll
adc
dec
xor
add
and
push
lods
jbe
sub
push
movsb
or
in
add
sbb
mov
pop
pusha
scas
cltd
add
icebp
mov
xor
or
cltd
clc
inc
inc
push
nop
icebp
addl
inc
in
aaa
xchg
dec
int3
in
sub
popa
mov
or
xchg
or
lds
and
shll
inc
insb
adc
sbb
in
adc
das
scas
ret
sub
movsb
call
sub
pop
mov
sub
or
or
lcall
sub
push
out
pop
dec
ficompl
and
or
imul
push
sub
sbb
mov
and
or
sbb
or
repnz
inc
pop
push
test
jae
xor
mov
adc
sahf
xchg
mov
and
mov
addr16
movsb
and
xor
pop
xchg
ljmp
mov
je
popa
addb
movsl
and
or
mov
xchg
xchg
xchg
add
adc
leave
pop
jecxz
xor
insl
add
inc
movsl
dec
push
in
mov
inc
mov
dec
lea
push
and
add
add
fnstsw
or
inc
mov
notl
pop
xor
in
ret
mov
imul
add
lea
loope
sub
push
test
adc
test
push
sbb
scas
insl
xor
cltd
adc
or
pushf
sub
or
dec
popf
adc
sub
pop
mov
xorb
adc
cltd
fcmovnbe
or
js
icebp
sbb
fdivrl
mov
mov
xor
jno
mov
inc
aas
ret
xor
inc
outsb
std
xorl
adc
fdivl
xor
mov
xor
pop
subl
and
mov
insl
mov
call
lods
add
dec
mov
cmp
nop
sbb
dec
cli
mov
adc
xchg
jbe
ficoml
shlb
jl
mov
shrb
cmpsb
dec
fldt
test
je
nop
cmp
adc
popa
push
insb
or
repz
inc
mov
or
pop
push
mov
jmp
pusha
cmp
js
or
int
cmp
sbb
mov
add
jl
and
inc
push
xor
inc
adc
mov
pop
adc
je
add
shrl
mov
adc
add
inc
test
int
mov
xchg
jnp
stc
bound
xchg
lcall
imul
enter
je
sbb
xchg
mov
ds
xchg
ret
pop
nop
xlat
mov
insl
ret
sub
nop
popa
inc
add
push
nop
and
xchg
dec
test
adc
sub
inc
nop
add
and
jecxz
les
lcall
leave
mov
adc
nop
imul
jge
test
rcll
or
movsb
or
push
xchg
xchg
cmp
mov
cmove
nop
movsl
syscall
inc
push
or
roll
jb
mov
push
fcoml
data16
push
fdivl
pop
sbb
fisubrl
cmp
mov
inc
jmp
lods
mov
mov
inc
mov
cli
and
scas
cltd
lock
cld
inc
cltd
jbe
pop
sbb
pop
xor
pop
clc
sti
pop
fs
cld
in
leave
and
xchg
testl
ds
lahf
mov
jo
or
dec
dec
jb
jb
or
jge
loopne
addb
push
jle
push
sbb
inc
adcb
sbb
movb
or
cmp
fisubrl
sub
repnz
or
sbb
adc
and
dec
in
mov
movsb
add
push
and
adc
jo
sbb
mov
cmp
icebp
xchg
call
les
push
xchg
inc
sbb
xorl
mov
mov
enter
sbb
push
mov
sbb
fmuls
push
js
add
inc
adc
mov
adc
cmp
das
ret
es
or
divb
mov
mov
faddl
or
pop
mov
sub
mov
inc
inc
inc
rolb
cmp
xchg
jmp
mov
xor
jns
cmpsl
stc
mov
mov
out
out
adc
push
inc
pop
ja
std
popa
out
mov
add
push
inc
add
rol
data16
ss
dec
add
jmp
aas
jl
add
mov
push
jmp
xlat
and
push
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
push
fiaddl
idivl
out
imul
push
lea
dec
or
imul
adc
aas
push
jnp
inc
xor
fldt
pop
sub
sub
rcr
jg
popa
and
insb
outsl
arpl
imul
jb
sub
popa
arpl
jne
jb
outsb
je
add
jge
push
inc
add
push
insl
adc
in
lcall
inc
outsl
jb
js
je
jb
orl
or
outsl
jl
mov
add
add
jne
les
ja
neg
inc
and
jb
dec
push
add
add
cmp
add
add
or
pop
es
sahf
inc
xor
icebp
fiaddl
inc
push
cmp
popf
inc
loope
push
and
sbb
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
or
inc
int3
add
push
cmp
or
inc
sbbl
iret
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
mov
sbb
out
cmpsl
stc
test
sbb
push
das
push
lahf
push
imul
clc
pop
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
sbb
incl
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jnp
aas
es
cmp
cmp
add
in
jne
and
adc
add
das
das
icebp
aas
lods
rcll
addr16
push
inc
inc
arpl
bound
out
jle
dec
outsl
jbe
dec
arpl
inc
fiadds
aas
insb
jo
sub
addr16
xor
insb
xchg
pop
jg
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
mov
popl
outsb
jns
jg
addr16
popa
je
jb
sti
cltd
mov
adc
jae
jle
fsubrp
push
gs
sbb
dec
outsl
outsb
and
jae
cmp
jbe
inc
js
cmpsl
popf
aas
add
out
dec
or
pop
jnp
mov
jae
testl
inc
push
popa
insb
jne
ret
leave
inc
inc
mov
push
pop
or
lcall
daa
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
out
adc
dec
out
push
push
xor
pop
pop
jg
lea
popa
bound
gs
imul
jg
loope
jo
add
jbe
js
jp
jl
jle
popf
int3
ficoms
dec
adc
lcall
loopne
neg
test
pop
add
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
jl
js
ret
movsl
add
xorl
xchg
and
imul
out
pop
push
cmp
dec
add
dec
dec
cli
gs
xor
popa
js
ljmp
addr16
dec
pop
daa
pop
cltd
mov
outsl
ja
ret
ret
cmp
int3
adc
mov
add
push
add
add
add
xor
cmp
push
add
xor
push
sub
pop
hlt
and
add
in
mov
pusha
adc
js
or
cmp
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
add
nop
push
cmpsb
inc
jo
xchg
call
ja
and
pop
and
test
mov
xchg
cmp
pop
adc
insl
pusha
cmp
or
add
lea
in
dec
dec
mov
mov
xchg
dec
repnz
mov
sahf
or
cmpsb
adc
mov
cmp
out
ljmp
mov
enter
scas
xlat
jmp
add
sbb
cmp
dec
inc
sub
push
inc
jle
fstp
sub
ss
jmp
dec
inc
cmp
aam
adc
notl
fs
inc
sbb
jae
call
bound
je
outsb
data16
add
mov
out
je
xor
mov
test
jo
pop
lea
mov
outsl
js
push
xchg
cs
pop
leave
push
and
insl
jo
jo
and
and
shlb
aaa
insb
les
dec
imul
or
inc
mov
ficomps
cmp
dec
inc
jb
jns
daa
int
rcll
pop
and
pop
in
jns
mov
insb
and
pusha
dec
fucom
arpl
je
and
fs
pusha
fsubrl
push
jbe
clc
insl
outsl
rorl
outsb
pop
jb
and
shr
insl
xor
push
rorb
shrb
fs
insl
adc
lods
jp
pusha
xchg
or
fstps
fadd
pop
rolb
mov
cmp
push
cs
lds
cmp
or
les
fimull
pusha
push
push
fwait
push
lock
push
outsb
mov
fcomps
push
push
jae
or
dec
loopne
mov
pusha
insb
call
mov
clc
addr16
and
out
push
das
outsb
gs
mov
data16
inc
insb
and
dec
testl
cs
xor
dec
push
lods
jno
xchg
fisttps
addl
insl
jle
jb
inc
or
imul
adc
jg
sbb
fs
inc
sub
fs
xchg
das
sub
or
gs
sbb
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
loope
out
es
addr16
jle
sahf
jbe
xor
sub
add
add
jae
jl
sub
pop
or
sbb
push
sub
das
push
jb
aaa
jbe
mov
cmp
inc
and
xchg
pop
pop
jne
ret
mov
outsb
stos
addr16
push
jbe
xorb
adc
xor
gs
loope
xor
imul
push
add
cltd
hlt
dec
sbb
sahf
inc
out
imul
fs
jo
sub
inc
push
jl
out
sub
pop
cs
add
cmp
and
lahf
out
sbb
or
sub
sti
mov
push
call
sahf
out
push
aam
int3
enter
lret
dec
mov
lods
test
add
xchg
movsb
outsb
mov
mov
cmp
nop
mov
test
cmpsl
cmp
push
js
jo
jns
out
push
out
sahf
pop
push
push
dec
inc
xor
lahf
out
sub
or
sub
repz
repz
dec
out
ds
and
in
les
jo
fs
xor
out
sub
lock
repz
repz
pop
sub
xchg
repz
in
sub
push
pushf
jo
sub
repz
inc
push
and
adc
sub
pop
sub
lahf
add
in
push
and
and
lcall
pop
fmuls
addl
cmpb
mov
nop
add
add
xchg
lods
stos
push
add
andl
add
add
mov
dec
adc
add
sbb
mov
pop
faddl
jle
xchg
sub
inc
add
test
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
loope
and
mov
stos
test
and
pop
stos
add
lcall
gs
xchg
jo
je
inc
pop
shl
mov
outsb
push
xor
add
test
sub
icebp
mov
outsl
dec
arpl
ljmp
aas
sbb
jp
int3
popf
mov
or
std
cmp
push
setl
sub
shr
sahf
add
inc
adc
push
or
jg
dec
and
xor
push
dec
inc
dec
cmovns
data16
cmove
push
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
ret
aas
and
es
sbb
add
push
sub
fsubrl
ja
movsb
scas
pop
inc
outsb
out
jne
xlat
dec
loopne
jo
out
subl
or
popa
sbb
add
push
into
mov
xor
mov
mov
das
outsl
jns
lock
xchg
pop
and
dec
dec
aaa
jg
imul
mov
pop
shl
es
jae
jmp
sub
test
jae
xlat
scas
mov
dec
mov
cmpps
cmp
adc
jg
push
call
aaa
pcmpeqw
mov
mov
sti
or
jo
pop
daa
sti
lea
pop
and
je
and
jae
insb
lods
pop
call
mov
sti
jmp
xchg
loope
add
lret
xchg
loop
addr16
addb
testb
sbb
lock
mull
or
les
ja
lahf
test
mov
jae
jae
insl
loope
lock
jle
fs
mov
pusha
in
pop
cmpsl
mov
adc
or
movswl
mull
adc
fistpll
pop
out
sar
mov
mov
loope
and
xchg
insb
daa
jnp
cmpsl
lods
mov
mov
cwtl
ret
jecxz
adc
out
jo
loopne
sbb
pop
jns
rorl
jg,pn
mov
fisubs
mov
push
mull
mov
jmp
call
js
sub
popa
mov
aas
cmpsl
out
push
add
jge
ret
cmp
pop
pop
ret
gs
mov
adc
dec
jb
pop
roll
scas
xor
lahf
fiaddl
es
sti
cmp
divl
mov
daa
pop
rorb
mov
mov
outsb
xchg
inc
arpl
and
fisttpl
loope
fidivrs
xchg
gs
test
jmp
dec
dec
jp
xchg
pop
subb
bound
insb
mov
dec
sub
push
cmp
addr16
jle
mov
addr16
je
xchg
cmp
jge
mov
mov
daa
pop
arpl
movsl
sbb
rolb
gs
jne
test
call
push
ljmp
arpl
rol
mov
pop
inc
shll
inc
add
add
pusha
and
fidivrl
push
sub
ja
aad
pop
or
lret
sub
inc
sub
lods
and
inc
jne
or
and
into
or
jo
add
mov
mov
aas
pop
fmull
jb
push
adc
xorw
pop
incl
arpl
orb
mov
popa
sub
jno
jae
pushw
cmp
add
or
je
les
punpckldq
xchg
hlt
sub
out
out
add
jnp
inc
push
adc
aaa
sbb
xchg
pop
jnp
dec
fwait
test
das
push
cmp
jo
push
jecxz
scas
ljmp
sub
shll
push
cmp
dec
aas
loope,pt
push
jae
pop
daa
jne
push
out
cmp
add
dec
ret
outsl
dec
mov
mov
push
adc
hlt
mov
js
adc
push
addr16
mov
xchg
jne
rol
shl
daa
das
outsb
stos
pop
adc
shll
sub
shrb
outsb
sub
rcr
and
into
out
pop
dec
out
rol
push
fiaddl
bound
jae
jp
jnp
push
pop
mov
addr16
sti
and
fwait
push
sub
xor
mull
dec
sub
inc
jmp
lock
out
arpl
pop
adcl
outsl
jmp
bound
pop
test
pusha
inc
outsl
imul
jb
pop
fidivrl
ret
ja
es
imul
rorl
mov
scas
imul
fdiv
jge
mov
insb
xchg
scas
test
dec
add
push
imul
mov
add
ss
mov
shrl
outsb
xchg
inc
mov
lret
pop
je
mov
dec
por
insb
aas
pop
rcrl
mov
jge
inc
bound
outsl
mov
sbb
pop
sti
ja
pop
mov
mov
cmpsl
xchg
inc
arpl
andl
pop
push
aas
jl
or
testl
adc
mov
mov
inc
xchg
jl
pop
inc
les
maxps
push
dec
aas
imul
adc
sbb
mov
bound
aaa
js
push
das
add
out
push
cmp
mov
adc
scas
jbe
mov
jns
jae
pop
lea
push
adc
scas
jl
pop
js
mov
repz
loop
jmp
es
ja
add
sbb
mov
ljmp
cs
push
setg
arpl
pop
js
and
jno
cmpb
out
insb
sub
loopne
dec
outsl
lret
jl
jo
aaa
inc
hlt
loopne
cmp
mov
mov
xor
sarl
shrl
fisubrs
fs
mov
jmp
adc
xor
push
repnz
mov
repnz
icebp
js
ret
adc
xor
aas
addr16
imul
push
pop
and
call
add
push
sahf
cmp
pop
mov
fstpt
fisttps
cmpsl
mov
daa
inc
cmp
jae
in
cmp
dec
jae
arpl
push
jae
inc
inc
clc
mov
fisttps
mov
mov
icebp
push
push
pop
cli
add
jo
icebp
cmc
mov
jle
ret
incl
scas
ljmp
call
insb
inc
sub
dec
inc
or
sbb
xchg
mov
aaa
aaa
es
das
lods
in
jnp
outsl
das
sarl
cmp
js
mov
pop
mov
push
add
add
cmpsl
push
insb
xor
push
sub
push
sbb
gs
lock
pop
hlt
mov
push
xor
inc
add
in
cmp
lret
cmp
pop
cwtl
fsts
inc
dec
sub
or
push
mov
repz
dec
ds
push
jp
out
cmp
cmp
out
add
cwtl
jns
imul
repz
insl
mov
jno
mov
rcrl
push
pop
jbe
xor
out
inc
pop
mov
add
jge
lds
aas
pop
sub
sub
xchg
pop
push
mov
push
ficoms
jns
movsb
push
mov
mov
call
jnp
pop
sub
fcoml
push
sahf
out
sahf
cmp
dec
loope
out
jns
or
dec
push
outsb
loop
and
pop
mov
and
push
or
lods
test
and
inc
fisubrl
data16
xchg
mov
cmpsb
push
push
add
ss
add
cmovge
popa
nopl
push
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
mov
popa
jne
or
and
dec
xlat
mov
lahf
or
xchg
sub
push
mov
shrb
cmp
lea
pop
push
js
jl
jl
iret
repz
xlat
pop
jne
pop
jne
iret
jnp
xsha1
cmpsb
push
mov
mov
cmpsl
stc
sbb
push
cmpsl
imul
iret
xor
bound
addr16
xchg
lea
cmp
aaa
outsl
es
bound
cmp
gs
je
cmp
fwait
push
xor
ds
jo
sbb
out
jb
mov
addr16
and
inc
sbb
and
mov
arpl
arpl
xor
cmp
or
cmp
add
dec
add
and
mov
je
ss
cmp
dec
imul
sbb
jae
data16
aam
imul
lds
mov
or
mov
pop
jne
mov
fwait
push
pop
mov
pop
cmpsl
xchg
jno
dec
mov
ja
inc
stos
or
sub
add
xchg
xchg
in
scas
inc
sbbl
push
adc
pop
inc
sbb
adc
push
sbb
and
sub
aaa
cmpsl
mov
mov
pop
int
js
mov
sub
mov
xor
pop
fwait
outsb
push
sub
and
xor
jp
jnp
loopne
into
push
pop
push
xlat
mov
or
or
imul
inc
xor
mov
dec
mov
sbb
and
cmp
sub
scas
pop
aas
and
and
and
cltd
sub
jle
sbb
and
inc
or
mov
mov
mov
aas
add
xor
dec
push
stos
inc
lcall
outsl
or
movsl
push
or
aad
lods
fstps
xchg
and
andb
mov
ret
hlt
push
inc
pop
dec
jg
outsl
adc
dec
stos
sti
lods
pop
or
iret
sub
addr16
faddl
gs
aaa
scas
addb
iret
test
test
dec
les
mov
sub
xchg
pop
inc
lahf
pop
mov
mov
movl
subb
add
ret
imul
adc
out
popa
push
inc
xchg
mov
add
add
dec
orl
shrb
iret
imul
das
pusha
xor
mov
mov
inc
jp
jno
imul
add
dec
filds
xchg
and
inc
lock
jb
fs
out
and
add
sbb
jbe
jae
inc
daa
xor
ret
mov
scas
add
into
into
xchg
dec
jl
mov
imull
fistpl
mov
add
lcall
inc
fwait
mov
mov
test
in
add
jecxz
adc
jg
aam
inc
dec
aas
push
xor
dec
out
pushl
sbb
or
xchg
aas
iret
add
popa
mov
adcb
push
out
add
mov
rolb
or
test
jg
push
lods
lea
xor
sbb
ljmp
inc
pop
and
or
sub
movhps
xor
addr16
mov
js
outsl
jo
fwait
jp
add
lods
dec
dec
int
jnp
jmp
out
xchg
addr16
movsb
dec
lahf
push
push
pop
repz
dec
xchg
insl
xchg
mov
pop
js
pop
mov
xor
or
adc
iret
dec
jne
testl
ja
ljmp
cmpsl
push
cs
inc
jo
lahf
mov
cmpsb
mov
jge
or
inc
jle
icebp
fsubr
out
sub
imul
outsb
jae
sbb
stos
pop
cmpb
sbb
push
repz
xchg
push
aad
xor
fldl
insl
inc
push
imul
sbb
aad
aas
roll
xor
or
mov
aaa
sbb
sbb
pushf
movsb
lds
ret
lcall
pop
add
jo
pop
adc
push
test
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
add
rol
dec
repz
addb
popa
xchg
stos
jmp
and
fistpl
fldt
repz
mov
das
lods
xlat
cmpsl
xchg
adc
lods
xlat
mov
mov
pop
pop
sub
outsb
cmp
lds
ret
ficomps
xchg
xchg
out
cmp
and
sub
fwait
jbe
pop
or
xorl
add
lcall
pop
xchg
bound
mov
jbe
pop
dec
mov
push
inc
fstpt
mov
add
adc
dec
out
cmp
jo
sti
xor
je
push
jo
setg
xor
add
pop
cmp
jbe
cmp
ja
outsl
daa
cmp
jl
pop
ja
arpl
loope
repz
push
lods
push
pop
xlat
sbb
fildll
pop
clc
movsb
xor
xor
inc
mov
pop
adc
or
push
push
xor
adc
xor
add
out
xor
fwait
cs
pop
aad
stos
xchg
xor
xchg
fs
out
add
inc
jne
arpl
fs
cmp
imul
ss
push
jmp
add
push
cmp
faddp
cmp
mov
sarb
xor
leave
adc
imul
das
outsl
dec
dec
ret
inc
dec
add
mov
mov
imul
das
add
dec
or
adc
sub
scas
push
cmp
and
push
mov
push
movq
lcall
push
or
xor
andb
inc
and
insl
lret
cmp
jmp
jo
mov
popa
xchg
pop
and
or
adc
sti
xchg
inc
cwtl
xor
or
jecxz
loopne
loope
mov
push
cmp
add
inc
sbb
rolb
or
cmp
cs
ja
and
rorl
pushl
ret
xchg
arpl
out
pop
adc
rolb
add
fwait
je
pop
sub
xor
scas
push
cs
add
fdivs
lret
sub
sub
or
jnp
sub
inc
es
shld
jb
mov
scas
push
push
mov
add
minps
aas
push
subl
lods
pop
lahf
sbb
inc
jle
dec
mov
loopne
pop
repz
mov
pop
test
adc
push
mull
and
sarb
out
adc
dec
pop
pop
outsl
iret
cli
push
mov
pop
nop
fdivs
dec
add
sub
jnp
popa
xor
or
adc
scas
sbb
fists
cmp
out
aaa
push
addl
mov
push
sahf
out
sahf
pop
sbb
jns
out
push
andl
ffreep
mov
cltd
or
sub
fadds
int
cmpsl
push
enter
adc
or
sub
mov
adc
adc
ss
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
outsb
push
popa
xchg
add
shrb
ret
sub
fwait
int
add
das
or
adc
repz
mov
pop
sbb
insb
fistl
lret
str
mov
cwtl
or
and
das
dec
push
daa
loopne
lahf
rcrb
sti
lahf
out
insl
inc
add
push
push
jnp
insb
or
mov
or
dec
xchg
int
mov
adc
adc
cli
adc
out
ds
push
push
mov
xor
pop
jb
and
sbb
inc
out
out
mov
and
fwait
and
and
xor
xchg
testl
bound
push
dec
insb
stos
roll
mov
je
add
dec
fldt
cmp
shrl
mov
jnp
push
adc
mov
jmp
adc
or
jo
push
fists
inc
dec
jae
pop
sub
loop
or
jge
sbb
shll
ret
sbb
outsl
add
das
adc
add
imul
les
add
pop
ss
popa
jmp
mov
mov
lea
loope
imul
xchg
incl
sub
mov
lods
add
sub
fwait
dec
loop
mov
adcb
sti
out
sbb
mov
lea
cmp
iret
lahf
and
movl
lods
scas
aas
loopne
orl
or
dec
xchg
iret
mov
shrl
pop
fneni(8087
popa
push
inc
adc
adc
xlat
and
dec
sub
xchg
push
push
pop
xor
stos
or
arpl
jae
mov
push
jg
mov
outsl
aas
imul
pushf
sahf
mov
scas
sub
testl
pand
mov
inc
push
push
add
and
fs
xor
faddl
das
outsb
sbb
arpl
add
pop
dec
xchg
jg
insl
and
mov
adc
pop
cmp
sbb
jmp
mul
cmpsl
push
push
insl
arpl
shl
mov
ja
repz
roll
pop
mov
in
test
inc
mov
mov
sti
lcall
push
loope
in
int3
jecxz
and
sub
cltd
dec
pop
fsub
mov
stos
in
in
loope
jns
pop
and
stos
sub
add
pop
or
fisubs
push
repnz
fnsave
pop
and
stos
in
cltd
js
pop
and
test
sub
loopne
mov
in
push
jb
dec
xchg
inc
scas
xchg
test
inc
xor
mov
push
add
cltd
dec
pop
mov
pusha
push
leave
stos
in
mov
pop
and
stos
sub
xchg
dec
and
test
enter
scas
xchg
js
fcom
leave
push
xor
xchg
push
call
inc
sbb
je
and
pop
and
stos
add
push
popl
mov
lahf
xor
pop
xchg
adc
inc
pop
rorl
jnp
mov
insl
and
mov
sub
add
adc
inc
sbb
xor
dec
fadds
mov
das
inc
adc
xlat
inc
xor
sbb
adc
push
jmp
push
aas
pop
push
push
sub
or
dec
add
or
popa
aam
aas
dec
movsl
xchg
ss
repz
dec
inc
data16
add
or
mov
inc
aaa
mov
aas
mov
push
xchg
push
adc
xchg
mov
and
shlb
push
pop
inc
jmp
mov
push
xor
nop
push
or
ss
push
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
mov
pop
inc
and
add
movsb
daa
cmp
sub
loopne
adc
jp
les
jmp
fldt
or
sbb
pop
or
les
bound
filds
xlat
pop
xor
aaa
outsl
and
mov
addl
xor
adc
add
arpl
lahf
or
add
push
aas
lahf
mov
jmp
das
mov
sarb
pop
addr16
mov
add
and
scas
call
iret
inc
xchg
fwait
lret
daa
push
sbb
inc
inc
jl
or
out
push
pop
lahf
ret
outsl
outsl
push
push
mov
inc
hlt
add
loopne
popa
xor
and
rorb
xlat
pop
add
mov
pop
and
pop
ds
pop
sbb
add
pop
mov
push
out
or
xor
sub
sbb
mov
push
xchg
bound
jge
dec
inc
es
mov
xor
sub
sbb
inc
es
addr16
mov
adc
je
or
je
shrb
les
mov
sbb
mov
mov
add
pop
sbb
mov
es
jae
and
mov
cmpsl
pop
add
add
mov
loope
ja
imul
jnp
add
push
jbe
out
mov
xor
daa
xorl
xchg
ds
xor
cmpb
ja
rcrl
jnp
ss
mov
aaa
int3
fidivs
imul
dec
js
jae
imulb
pop
pop
daa
sbb
xchg
clc
xchg
push
adc
pop
fisttpl
roll
and
sbbb
jne
or
pop
dec
or
mov
jnp
sub
in
inc
pop
inc
push
movsl
push
cltd
push
scas
mov
push
push
pusha
ss
mov
push
call
in
outsb
xor
jnp
loope
repnz
push
ds
push
jl
aas
dec
sti
sbb
fcoml
pushf
push
add
mov
inc
inc
sub
xchg
lds
loopne
mov
jb
push
or
adcl
in
xor
imul
push
push
inc
mov
scas
xchg
insl
das
sti
scas
test
xchg
mov
pusha
loope
pop
xchg
pop
mov
and
push
iret
pop
mov
fistps
pop
mov
sub
pop
inc
mov
or
push
cmp
xor
mov
cs
pop
ljmp
xchg
mov
dec
mov
das
or
fwait
adc
movl
js
dec
and
arpl
mov
arpl
add
stos
outsl
jns
cs
pop
sub
out
fiadds
aaa
pop
movsb
adc
or
or
jo
ret
push
mov
mov
xchg
add
dec
aam
ja
xor
test
dec
sbbl
mov
lret
mov
mov
xchg
jge
mov
sbb
pop
jecxz
mov
mov
outsb
outsb
sub
shr
jmp
push
sahf
push
cs
cmp
cs
xor
insl
repnz
out
es
add
push
push
add
inc
insl
sbb
xlat
rclb
xlat
out
mov
jns
xor
jae
js
inc
mov
sub
into
xor
sbb
pop
pop
dec
pop
fidivrs
shlb
or
inc
or
add
mov
or
xor
fimuls
inc
cmp
xchg
out
mov
dec
or
inc
push
pop
mov
cmpsb
ss
push
dec
mov
loopne
push
bound
xor
xor
fisubrs
repz
cs
cmp
outsb
jb
loop
xorl
push
cmpsb
xchg
ja
retw
rolb
inc
data16
xchg
sarb
lcall
sbb
cs
fs
xor
inc
mov
cmp
xchg
dec
dec
daa
fst
out
cmp
mov
jge,pn
dec
push
out
mov
pop
pop
mov
push
es
ss
pandn
ja
pop
push
push
xor
dec
jb
xchg
jl,pt
inc
pop
dec
es
das
add
loopne
mov
fbld
data16
inc
pop
lock
xor
dec
cs
lock
inc
lock
push
outsl
push
push
cli
push
push
insl
sub
push
neg
jnp
insl
mov
inc
ja,pn
xor
lods
js
mov
push
jp
ds
fstpt
scas
jg
dec
das
ret
jnp
loopne
fisttps
jp
pop
pop
xorl
pop
outsl
dec
xor
js
push
into
xor
pop
adc
imul
test
sub
bound
ret
insl
cmp
shl
inc
stos
xor
jcxz
xor
xor
pusha
lods
movsb
mov
iret
lret
jae
jnp
ret
jnp
add
mov
xor
add
nop
das
add
push
arpl
adc
or
mov
xchg
mov
daa
adc
js
xchg
xor
cmpsb
lods
dec
les
popa
xchg
mov
mov
les
sbb
jae
arpl
nop
es
mov
mov
mov
dec
pop
lcall
pop
addl
test
fwait
das
arpl
mov
mov
pusha
aaa
stos
scas
repz
mov
inc
xchg
add
ljmp
lods
push
add
sub
sbb
mov
inc
mov
lret
and
lret
sub
xor
sbb
sbb
lahf
sbb
mov
sti
shll
mov
and
sbb
rorb
and
daa
sbb
mov
jmp
push
dec
inc
adc
mov
pop
insb
outsl
popa
fs
outsl
lods
shll
lea
sub
jbe
pop
inc
fs
sub
or
pop
sub
pop
imul
notl
js
sub
loope
jle
push
mov
pop
jmp
dec
sub
bound
sbb
gs
sbb
clc
cmc
arpl
add
pop
dec
inc
jb
data16
jmp
repz
pop
pop
aam
xchg
push
pop
outsb
jno
xor
pop
mov
cwtl
xchg
inc
cmpsl
adc
add
push
outsb
jl,pn
movsb
stc
cmp
push
jo
mov
imul
pop
pop
dec
ja
in
ja
ja
cmp
jne
jo
arpl
xor
shlb
xor
jae
pop
xor
movaps
mov
or
xchg
inc
push
sub
pop
mov
mov
cmpsb
or
cs
xor
mov
jbe
lods
or
lahf
mov
and
popf
inc
or
add
fwait
and
das
push
sub
or
rcrl
stos
lock
xlat
jmp
js
pop
fildll
mov
sub
scas
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
mov
aam
xor
call
jnp
dec
aas
jl
stos
inc
scas
addl
sbb
mov
das
mov
daa
iret
fistps
bound
or
outsb
dec
arpl
jae
faddl
int3
daa
jbe
fwait
pop
mov
testb
lcall
jmp
fisubrl
psraw
in
add
aaa
sub
push
fs
xor
movsl
mov
fnsave
sub
pusha
aad
push
pop
adc
ja
outsl
mov
push
paddusw
movsl
sbbb
shr
inc
mov
xlat
push
dec
insl
inc
aas
xchg
addr16
imul
add
imul
loop
or
inc
mov
and
pop
test
cmpsb
push
jmp
and
xchg
fsubrs
xchg
push
lds
inc
pop
les
add
add
pop
shlb
mov
mov
sbb
ljmp
mov
mov
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
fadd
addr16
dec
fsubs
sbb
insb
std
mov
dec
xchg
jecxz
in
bound
rorl
adc
adc
pop
push
and
daa
mov
xchg
push
in
or
test
pop
mov
insl
fs
push
xchg
mov
mov
inc
daa
test
push
push
and
sub
mov
xchg
movsb
loopne
xchg
mov
push
dec
repnz
mov
and
jnp
leave
jae
sub
hlt
fwait
das
mov
in
pop
aam
xchg
out
xor
cmp
movsb
dec
xchg
test
je
outsl
xorb
mov
or
fistps
push
pop
inc
mov
inc
mov
imul
dec
xchg
fmuls
cmp
scas
pop
jnp
pop
daa
je
pop
add
aam
je
jnp
cmp
ss
jge
mov
sub
adc
xchg
ljmp
adc
loopne
inc
addl
loop
cmp
jge
aad
cwtl
adc
jae
dec
add
lock
daa
dec
inc
jmp
xchg
imul
cmp
popa
outsb
imul
add
sbb
das
xchg
pop
mov
movl
pusha
daa
daa
xor
pop
push
push
mov
fdivrs
jae
shrb
test
xlat
pusha
test
mov
pop
mov
pusha
xchg
xlat
push
jo
dec
and
rcr
push
push
scas
mov
mov
cmp
or
jo
pop
bswap
or
mov
inc
xor
jne
addr16
nop
cmpsb
lea
comiss
mov
mov
jne
mov
call
dec
or
mov
xor
out
fistl
push
dec
jae
xlat
mov
outsl
push
jl
arpl
mov
sbb
inc
fisttps
scas
dec
repz
dec
scas
pop
cmpsl
push
sbb
aaa
push
roll
je
add
sbb
mov
sbb
xchg
cli
aas
push
xchg
cwtl
ss
sbb
imul
fs
fldt
imul
xchg
jle
in
repz
es
mov
into
out
xchg
js
push
imulb
push
cmp
mov
pop
dec
pop
xchg
cltd
sbb
adc
std
cltd
xorb
or
push
mov
mov
add
pop
in
xor
sub
mov
loop
imul
cmc
repz
stos
xchg
adc
data16
cs
push
test
ja
xor
sysret
inc
movd
mov
xorb
pop
cmp
fbld
sub
xor
nop
clc
aam
dec
hlt
mov
insl
repz
xchg
xchg
cmpsb
call
jo
mov
call
sahf
mov
cs
repz
cmpsl
int3
lock
inc
sahf
out
inc
inc
dec
pop
setbe
mov
mov
clc
push
inc
addb
xor
sahf
out
daa
xor
aaa
icebp
addl
push
aaa
iret
jnp
ret
mov
push
outsb
push
jle
mov
jns
xlat
clc
or
mov
or
sub
aas
push
push
push
test
mov
ds
push
xor
jns
ret
pop
push
push
and
pop
sub
clc
mov
pop
push
fistps
int
or
dec
out
jns,pn
jnp
ret
push
imul
lods
jnp
and
jbe
adcl
in
stos
dec
cmp
sti
xchg
jns
aas
pop
es
xchg
and
mov
mov
inc
sbb
leave
inc
outsl
lcall
xchg
ficoml
dec
das
jns
out
dec
imul
push
and
in
dec
repz
sahf
inc
sti
lea
jno
repz
dec
jmp
dec
iret
repz
sub
jmp
or
pop
mov
in
push
arpl
repz
xor
jns
out
ja
mov
roll
das
jmp
and
jg
dec
sbb
scas
jg
ja
sub
adc
stc
add
clc
push
iret
adc
adc
push
mov
xor
adc
mov
add
mov
pop
jb
mov
loopne
mov
dec
or
adc
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
push
test
insb
adc
cmp
test
jl
mov
cmp
rcll
std
xlat
add
mov
std
iret
or
dec
push
add
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
cmp
xor
dec
push
adc
inc
ja
pop
xchg
mov
and
lods
xchg
pop
mov
fisubrl
add
dec
jo
js
rcrb
push
push
dec
pop
inc
outsl
xor
test
je
add
adc
fadds
popl
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
jb
pusha
xor
sbb
dec
cmpsl
addb
or
jno
inc
lahf
mov
pop
sub
lods
cltd
out
movsl
adc
cmp
addr16
loop
mov
pop
sbb
cmp
syscall
mov
xchg
jo
fwait
push
jo
inc
mov
mov
xchg
xchg
bound
inc
adc
mov
mov
jecxz
xor
in
mov
fisttps
fiaddl
dec
loope
or
cmpsl
fs
js
pop
dec
pop
jb
add
rcr
pop
xor
testb
ljmp
data16
sahf
add
dec
inc
xchg
test
mov
repz
add
and
mov
push
cmp
and
outsl
dec
icebp
movsb
jae
xor
daa
add
and
fcompl
xor
and
mov
pop
cmpsl
aaa
outsl
dec
addr16
sub
dec
popl
jbe
jo
xor
pop
fucomip
or
dec
bound
outsb
push
jnp
pusha
dec
pop
dec
repz
inc
pusha
gs
sbb
insl
add
jg
adc
cmp
rol
dec
push
jb
addr16
add
scas
push
inc
sub
mov
jmp
imull
push
shlb
push
shll
add
sbb
rol
inc
pop
test
add
testl
push
add
daa
loopne
aam
mov
das
sub
sahf
adc
sub
inc
sti
push
adc
push
push
pop
mov
loopne
cmpb
addr16
arpl
mov
mov
iret
fs
or
das
push
mov
cmp
inc
cmp
sti
push
cmpb
ja
jo
pop
push
xchg
xor
pop
out
add
lret
dec
mov
mov
or
push
sub
pop
pop
dec
mov
mov
mov
out
test
daa
popw
outsl
imul
jne
aaa
xchg
add
xchg
mov
mov
das
testl
outsl
mull
insb
adc
imul
popl
add
pop
dec
add
push
fisttpl
cmp
push
loopne
inc
addl
bound
ret
fidivrs
push
jecxz
out
inc
into
inc
add
adc
push
bound
cs
lahf
imul
add
cmp
out
add
shl
sbb
push
repz
mov
roll
aad
push
dec
loopne
sahf
adc
pop
inc
add
fcmovbe
dec
mov
popa
cmpl
adcl
addl
pop
or
pop
pushf
add
push
pop
outsl
fwait
or
mov
sub
mulb
pop
addr16
mov
inc
inc
push
inc
daa
cs
sub
cmp
dec
push
pop
pop
out
or
adc
push
pop
pop
jno
add
inc
jbe
mov
inc
aaa
push
mov
pop
bound
inc
push
pop
sub
and
lret
mov
dec
lock
fbstp
add
arpl
mov
cmpsl
push
decl
jg
push
ret
and
testl
pop
pop
inc
cmp
es
inc
jns
je
pop
and
outsb
out
mov
or
xchg
lret
outsl
das
adc
and
scas
or
jbe
dec
ja
popa
insl
jo
je
out
outsl
movsb
adc
addr16
jo
jae
daa
pop
ret
pop
jno
outsl
xor
push
out
push
bound
cmp
cwtl
pusha
or
pop
pop
mov
mov
jns
je
jne
or
or
cmp
test
scas
ja
pop
insb
and
dec
jae
inc
adc
or
dec
ss
bound
mov
je
inc
dec
mov
push
inc
add
imul
arpl
sub
mov
iret
jbe
popa
sbb
retw
or
push
push
mov
testl
out
pop
stos
pusha
and
push
loop
sbb
bound
cmp
sti
movsb
push
dec
ret
jae
sub
pop
adc
test
dec
les
mov
push
jmp
jo
push
pop
xchg
push
mov
cmpsl
pop
stos
add
xor
push
xchg
push
push
add
adc
emms
or
sub
jns
jb
sbb
adc
mov
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
ret
xchg
pusha
sysret
daa
les
add
arpl
jnp
adc
push
mov
add
push
pop
decl
xchg
incl
dec
inc
dec
push
xchg
add
add
clc
and
sub
idivl
ret
jbe
add
add
pop
add
or
jb
push
addr16
add
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
jmp
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
decl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
jno
loop
cmpsl
and
dec
adc
sbb
daa
lods
fisttpll
ds
das
sbb
or
imulb
daa
daa
daa
push
and
out
in
jg
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
in
imul
or
outsb
push
add
inc
pop
imul
pop
gs
in
push
sbb
pop
aas
ds
push
sbbl
popw
push
sbb
aaa
push
cld
shrb
sbb
test
inc
mov
outsl
fisubl
or
cmp
fwait
int
push
lods
mov
inc
cmp
std
outsb
pusha
mov
fsubrp
push
pop
mov
cli
das
aas
inc
inc
xor
fistps
mov
data16
push
adc
call
sbb
std
sub
push
mov
or
cmpsl
jge
mov
push
mov
movsl
and
cmp
es
cmp
add
jecxz
or
icebp
mov
lahf
dec
pop
insb
push
adc
testl
scas
nop
xlat
mov
mov
cmp
xor
paddusw
push
xchg
jne
mov
out
push
pusha
push
dec
jb
xor
mov
out
push
imul
add
inc
clc
out
and
bound
or
push
jnp
push
es
insb
jns
mov
je
and
mov
mov
popa
stos
and
in
xchg
rolb
out
adc
lcall
and
xor
and
lock
int3
and
ret
dec
inc
mov
iret
int3
and
push
push
jle
insl
adc
insl
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rorb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
jae
inc
insb
mov
jbe
fdivrs
xchg
inc
popa
imul
jle
xor
outsl
jo
test
sahf
dec
sub
sbb
xor
mov
xchg
inc
or
inc
xadd
dec
and
sti
sbb
inc
cmovo
outsb
movswl
cmpb
aas
adc
in
nop
jo
maxps
loopne
ljmp
and
xor
mov
dec
and
mov
imul
add
mov
sbb
outsb
jnp
cwtl
pop
cmp
fsubs
aaa
iret
shlb
mov
enter
fidivs
inc
push
pop
das
inc
add
outsl
pop
iret
js
ja
outsl
insl
lods
mov
and
pop
daa
les
leave
aam
daa
outsl
fnstcw
sbb
daa
mov
inc
sub
fs
mov
mov
inc
dec
fcompl
scas
fisttps
inc
test
ficoml
add
jl
sbb
test
mov
in
add
stos
ja
add
sub
mov
or
outsl
adc
outsl
fiadds
inc
push
dec
in
leave
lds
mov
xor
cwtl
mov
add
fsubl
mov
enter
pop
in
fsubr
in
adc
inc
inc
add
test
and
mov
xor
xor
xchg
dec
outsl
sahf
or
xchg
js
jo
inc
cs
dec
js
in
nop
out
lods
mov
mov
fldt
int3
aas
jns
push
roll
clc
add
fstpt
mov
int3
push
push
pop
push
movsb
das
mov
sub
daa
outsb
xchg
lods
jne
sahf
xor
stos
sarb
addr16
leave
jae
iret
push
aam
lock
aam
mov
faddp
hlt
and
xor
inc
push
nop
fisubrl
dec
aas
ja
inc
sahf
fstps
and
ret
lds
push
dec
outsl
movsb
inc
pop
fiaddl
add
jo
adc
pop
lock
cmp
inc
daa
jle
or
mull
inc
enter
imul
push
loopne
nop
das
pop
fwait
loopne
sbb
imull
jns
les
out
and
add
je
fsubr
dec
in
adc
and
sub
push
sub
add
jo
mov
mov
daa
add
subb
mov
jns
andb
and
in
dec
enter
leave
xor
inc
mov
test
push
xchg
cld
insb
rclb
jl
scas
iret
les
pushl
popl
jbe
out
int3
testl
pop
mov
jl
or
sbb
dec
in
dec
lahf
or
rorb
enter
insb
ror
outsl
insl
xorl
enter
mov
mov
pushf
xor
es
and
or
xor
or
shlb
aaa
and
lahf
pusha
jns
mov
ja
mov
lods
mov
mov
fcoml
cld
mov
fsub
sub
xchg
sub
pop
cmp
push
shl
fsubrl
adc
push
fistpll
or
cmpsl
or
adcb
daa
frstor
nop
out
cmp
in
in
out
clc
scas
cmpsl
cmp
repnz
aam
orl
fisubs
insl
jg
mov
sahf
out
mov
nop
or
adc
jns
loopne
nop
fbstp
in
and
fistps
dec
push
xor
cmpsl
jle
or
cmpsl
and
jns
or
mov
push
cmpsl
js
cs
dec
int3
fdiv
pop
and
bnd
dec
int3
fwait
nop
iret
test
xor
or
inc
push
and
cmpsl
js
idivb
dec
mov
mov
pop
test
lahf
or
in
enter
inc
sahf
aam
enter
nop
clc
adc
and
nop
mov
xor
lahf
clc
movsb
stc
lods
ja
and
fs
jbe
jns
dec
lahf
cs
nop
fs
mov
cs
or
push
mov
js
fadd
adc
cs
jge
sub
xorps
enter
jg
test
insb
push
pop
push
cmpsl
enter
pop
loopne
pop
enter
rcr
loopne
pop
jb
lods
adc
add
push
shll
and
push
and
addr16
lods
out
cmpsl
jg
cmpsb
push
pop
enter
fldenv
and
insb
inc
cmpsl
push
insb
dec
mov
mov
enter
add
mov
or
sbb
lds
or
icebp
cltd
nop
iret
loopne
ficompl
pop
pop
mov
aas
cmpsl
jg
clc
pop
dec
repz
mov
sbbb
push
cmpsl
mov
pop
hlt
add
jb,pt
cmpsb
fs
pop
cmpsl
hlt
fwait
sub
pop
nop
dec
fstpt
pop
sahf
push
lds
aas
pop
repnz
ja
rcrb
mov
ja
lock
addr16
or
ja
mov
fiaddl
rcr
push
imul
mov
inc
jbe
dec
inc
jl
rorl
pop
imul
jbe
iret
add
js
lock
inc
or
dec
enter
fldl
push
push
movsb
insl
sbbl
sahf
outsl
dec
int3
test
addr16
lahf
push
add
int3
inc
ja
test
inc
lock
clc
add
push
lock
test
aam
shrl
ficoms
dec
in
cmp
lahf
dec
inc
dec
and
fidivs
jmp
push
pushf
fdivrp
push
orl
inc
add
mov
jo
in
and
int3
cwtl
sbb
sbb
clc
es
inc
fists
adc
lcall
int
rcr
lahf
int3
xor
adc
add
adc
pop
push
inc
rcl
mov
loopne
push
inc
jg
sarb
xor
loopne
mov
pop
push
dec
inc
ja
stc
dec
mov
pusha
fs
mov
mov
fadds
jns
lods
sub
inc
jo
or
lahf
nop
inc
inc
ds
jb
mov
subl
mov
add
daa
adc
insb
lahf
in
inc
imul
adc
lods
mov
shl
outsl
mov
cmpsl
aam
add
inc
add
inc
adc
lahf
insb
insl
adc
lahf
enter
fs
pusha
jo
jb
pop
fs
mov
iret
test
mov
pop
enter
mov
repnz
adc
pop
enter
lock
sahf
or
inc
jecxz
pusha
jle
or
in
lahf
adc
inc
sahf
or
mov
fisttpll
nop
inc
les
pop
in
jae
pop
enter
sub
in
inc
xchg
outsl
insl
push
lret
inc
outsl
aas
jns
iret
mov
lcall
lds
ror
pop
and
mov
cmp
fdivr
or
or
out
testb
inc
stc
pop
insb
shrb
inc
in
jns
or
clc
imul
add
mov
mov
aad
jl
ror
or
jmp
lock
enter
in
out
add
add
lock
out
pop
add
daa
aas
daa
mov
xor
daa
add
fcoml
mov
scas
mov
push
xlat
mov
dec
dec
repz
push
xor
or
push
push
addb
aas
call
cwtl
xchg
pushl
fiaddl
inc
pushf
ja
loope
fnsave
add
xchg
pop
repnz
dec
aam
insl
and
jg
in
xlat
popaw
adcb
xchg
mov
dec
cmp
dec
push
push
sbb
daa
aas
addr16
xor
pop
add
inc
outsl
ja
dec
daa
sbb
test
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
add
pop
mov
out
xchg
in
icebp
mov
sarl
enter
pop
es
xor
out
push
and
lock
out
mov
mov
clc
out
repz
sti
mov
ds
push
push
adc
in
movsb
mov
xor
push
je
pop
cmp
add
aad
sub
fisubs
mov
push
xchg
pushf
in
dec
aad
orl
int
sub
dec
inc
ss
fildl
xchg
cmpsl
jns
adc
nop
add
mov
nop
jnp
sbb
mov
mov
push
in
sti
fdivrp
push
inc
out
cld
inc
mov
lods
jmp
dec
xchg
ja
and
mov
and
xchg
dec
and
jbe
inc
dec
outsl
xchg
sti
or
leave
inc
sbb
push
loopne
cs
fsubr
fmuls
movsl
dec
outsl
add
and
fs
pushf
inc
jge
adc
in
lcall
dec
in
mov
inc
cmpsb
fistps
leave
cmp
lahf
clc
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
insb
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
clc
lods
push
mov
addr16
stos
int
shrl
xchg
rolb
push
dec
and
jae
dec
repz
xchg
jbe
iret
repz
in
sub
jns
xchg
mov
cmp
shrl
pop
je
out
jns
out
mov
repz
mulb
mov
stos
rcrl
pop
mov
shl
out
sarl
outsl
daa
mov
push
fsub
jns
out
xor
sti
cmpsl
stc
cmp
push
nop
insb
or
jns
pop
mov
cmp
fs
mov
iret
repz
push
jg
shl
sahf
out
ds
xchg
sub
ret
cmp
repz
es
inc
lea
cmpsl
stc
and
stc
cmp
repz
xchg
mov
sti
push
cwtl
out
sahf
cmpsl
inc
xchg
mov
jl
out
add
xchg
push
andb
iret
shll
cmc
and
lahf
out
testb
push
jge
lcall
ljmp
jns
cli
pusha
lahf
sahf
sarl
cmpsl
stc
pop
mov
repz
out
sbb
jl
out
mov
cld
sarl
movsb
imul
lret
inc
jns
jns
imul
out
push
dec
outsb
call
and
stos
cmpsl
stc
cmp
pop
cltd
aam
stos
inc
out
jl
arpl
lods
iret
sarl
fcomps
scas
push
fdiv
int
imul
lds
lcall
call
sub
ds
sarl
xchg
mov
sbb
andl
lcall
dec
in
out
testl
shlb
mov
cmp
push
mov
lahf
out
xor
sahf
cmpsl
stc
xor
and
dec
xchg
fnstsw
iret
sarl
cmp
lahf
out
inc
mov
sub
push
imul
cld
das
ret
out
out
or
pop
push
xchg
decb
lock
popf
push
out
ds
push
mov
enter
lahf
out
ds
je
repnz
repz
lret
inc
push
mov
out
int3
jle
sbb
popa
sarl
xchg
shr
iret
xchg
out
lcall
mov
repz
mov
sahf
popf
cli
jb
mov
lock
out
ds
sarl
inc
aad
push
mov
cld
aaa
lea
xlat
dec
sahf
out
cmp
mov
lcall
loop
fisubl
int
jns
fisubrl
jl
out
jmp
fsubrl
int
fdivp
sub
jne
lahf
data16
push
in
out
out
inc
jmp
fsubrp
push
in
in
push
or
xor
int
fstps
movsb
movsl
cmc
inc
testb
insb
ss
stc
pop
sti
jecxz
or
int
sbb
xchg
add
add
in
cmp
add
popf
loope
fwait
lahf
int3
nop
push
inc
cs
mov
xchg
cmpl
aas
or
dec
sub
or
mov
mov
xor
mov
daa
out
cmp
aaa
repz
and
int
inc
pop
mov
insl
repnz
es
insl
rcl
jg
adc
inc
leave
xchg
aas
test
cltd
sarb
cmp
test
xor
mov
dec
jecxz
jg
mov
dec
cmp
aas
cmovae
sbb
lds
jbe
sub
jbe
xchg
xor
ljmp
adc
aas
mov
cmp
lahf
out
cmp
mov
orl
lcall
cltd
push
inc
or
ss
and
fcomps
xor
inc
cmp
dec
jg
leave
leave
in
pop
dec
aas
in
out
mov
push
inc
pop
pop
jo
daa
and
sbb
jbe
add
in
je
push
aam
in
add
into
sub
or
movsl
mov
ffreep
jb
jns
adc
and
jbe
pusha
mov
push
lahf
mov
jb
push
sahf
xchg
ja
js
mov
mov
cmp
mov
add
push
sbb
pop
mov
inc
mov
enter
jl
es
jne
stc
add
or
cs
sbb
mov
jmp
inc
xchg
iret
fiadds
pop
inc
leave
addr16
push
mov
shlb
jno
aas
shll
leave
mov
add
hlt
jle
or
je
adc
lahf
icebp
xchg
fisttps
stc
push
ja
inc
repnz
pop
addr16
ja
xchg
fisttps
dec
cs
cmp
mov
xchg
cltd
clc
pop
or
mov
das
xchg
dec
es
or
pop
adc
daa
push
dec
sahf
flds
pop
and
push
enter
mov
and
and
in
mov
divb
push
xchg
mov
fildll
fxch
and
shll
pop
and
xchg
sbb
inc
mov
maxps
or
inc
popf
popa
ja
pusha
xchg
scas
push
dec
cmpsb
adc
jo
pop
xchg
pop
rcrb
daa
mov
add
stos
add
and
fistps
push
fimuls
sbb
sub
inc
testl
fadds
sbb
pop
xchg
mov
mov
pop
sbb
fsubl
adc
fsubrs
scas
insb
add
add
add
sbb
mov
sub
pop
insl
xchg
add
fs
push
pop
leave
and
repz
scas
cmp
mov
mov
into
aad
push
pop
mov
cmpsl
push
mov
xchg
adc
sbb
adc
addr16
mov
mov
push
dec
push
pop
in
xchg
fldt
jo
addr16
and
movsb
stos
jp
pop
daa
fcoms
addr16
popf
and
adc
lcall
pop
add
loop
adc
push
out
movsb
xor
xchg
mov
mov
add
add
mov
cmp
outsb
stos
add
out
pop
jbe
jle
add
dec
dec
dec
mov
dec
jb
sbb
rorl
fwait
dec
in
cmpsl
hlt
cld
dec
mov
add
or
adc
fldz
cs
pop
aaa
push
lea
inc
pop
dec
xorps
imul
jae
mov
mov
mov
xchg
mov
sahf
out
pushf
mov
push
add
fnstsw
fisttps
or
imul
or
or
enter
or
sbb
es
adc
fldt
pop
pusha
punpckhbw
jnp
pop
sahf
movsb
adc
mov
xchg
int
cmp
mov
dec
push
in
dec
dec
sub
mov
in
repz
add
cwtl
push
push
jb
mov
inc
enter
lock
test
cmp
sub
out
sbbl
in
xchg
and
mov
jb
loop
test
orb
nop
push
nop
sub
jo
fiadds
pop
dec
nop
out
pop
scas
mov
out
push
jns
push
sbb
daa
leave
add
pushf
pusha
incl
jne
outsl
stos
cmpsl
mov
out
pushf
ret
add
add
insb
jns
fistl
notl
jnp
pusha
pop
mov
inc
filds
pop
jns
mov
sub
stos
dec
jb
sub
addr16
push
dec
addr16
add
leave
inc
repnz
pop
roll
mov
in
mov
add
add
lahf
cmc
xchg
xchg
dec
sub
xchg
fdivr
sbb
mov
fs
decl
scas
add
js
mov
xor
rorl
pop
push
cmp
ret
xchg
incl
lea
push
lods
xchg
xchg
cmp
sbb
push
pop
iret
daa
jne
popf
xchg
rcr
daa
loop
add
push
add
pop
pop
xchg
xchg
daa
xchg
das
xchg
aaa
adc
scas
xchg
popl
sbb
xchg
xlat
sbbl
adcl
sbb
cs
ficompl
scas
lock
sbb
lcall
mov
into
fs
add
scas
cmp
mov
ja
sbb
xchg
sbb
sbb
in
mov
push
lock
cmpsb
in
enter
test
enter
push
push
fists
push
fnsave
pusha
addr16
jle
mov
and
outsb
xchg
leave
in
mov
ja
pop
jb
fisubs
dec
pop
iret
icebp
rorl
xchg
push
adc
sbb
inc
cmp
fs
pop
add
inc
enter
and
outsl
dec
scas
adc
pop
xchg
add
mov
dec
inc
push
addb
xchg
mov
mov
xchg
ficoms
push
pop
push
push
ja
in
enter
or
sbb
inc
pop
and
xchg
ds
push
jo
cmp
jp
pushl
jbe
push
scas
mov
cwtl
daa
mov
inc
iret
add
xchg
dec
dec
in
mov
xchg
into
xor
sbb
pop
rdpmc
in
outsb
jmp
cmp
faddl
mov
pushl
and
fcmovne
scas
cmpsb
add
mov
nop
push
push
cwtl
jb
orl
pop
call
fstpl
xlat
cs
imul
push
mov
mov
leave
dec
pop
pop
cltd
add
daa
pop
enter
popf
and
sarb
mov
add
jecxz
setae
out
out
cltd
pop
stc
xchg
int
fisttps
hlt
adc
mov
mul
xlat
cmpxchg
mov
push
sbb
dec
nop
inc
mov
add
ss
push
jb
inc
scas
popf
out
push
jns
es
scas
pusha
cmpb
cmp
dec
es
lcall
pushf
aas
pushf
cmp
adc
mov
es
shlb
cmpsl
outsb
sbb
xchg
cmpsl
sbb
adc
and
push
daa
sub
xchg
addr16
daa
mov
ret
inc
lret
in
fnstsw
shll
push
add
lods
jnp
out
add
bswap
sbb
jmp
popf
lahf
or
daa
popf
pop
cmpl
inc
jl
cmpsl
in
adc
sub
je
mov
or
pusha
andb
mov
jle
daa
mov
pop
xchg
push
cmpsl
xchg
xor
scas
mov
movzwl
les
rcr
mov
and
sahf
ljmp
shll
nop
cmp
inc
push
cmpsl
cmpsb
ja
testl
jb
mov
sub
outsb
and
filds
mov
popf
or
mov
xchg
iret
xor
arpl
ja
testb
adc
ljmp
lahf
jns
in
xor
cmp
inc
push
add
cmp
lahf
outsl
or
mov
add
test
cwtl
mov
cs
dec
dec
enter
or
push
aaa
daa
xchg
sti
and
sub
dec
mov
and
push
out
mov
mov
ja
xchg
sbb
xchg
mov
rorb
repnz
jb
jge
leave
leave
inc
dec
ja
mov
fwait
mov
mov
add
inc
sub
push
mov
push
sub
xor
outsb
ja
sub
mov
push
add
fcompl
xchg
cmpsl
push
fs
leave
leave
add
iret
jae
iret
fstpl
in
in
cmc
jbe
in
mov
std
pop
mov
dec
and
sahf
out
jns
inc
dec
add
in
in
dec
bound
insl
js
cmp
or
iret
mov
scas
mov
repnz
out
inc
ds
inc
icebp
mov
sbb
sbb
das
fcmovu
addr16
movsb
fbld
adc
mov
mov
xchg
dec
cmpsb
pop
dec
pushf
movsb
ljmp
or
jae
mov
xorb
lock
jg
insb
jno
xchg
movsb
movsl
das
or
cmpsl
adc
pop
or
mov
mov
cmp
or
movsl
xor
inc
jb
and
jb
ret
movsl
fiaddl
pushf
push
in
movsl
cmc
movsl
std
xchg
sbb
adc
out
add
shll
cmpsb
iret
cmpsb
xchg
cmpsb
fistps
cmc
add
xor
xor
xor
adc
xorl
outsl
js
sbb
xor
and
rol
aaa
pop
adc
daa
cmp
cmpsb
scas
cmpsb
mov
sbb
aaa
or
and
repz
outsb
add
xlat
ret
add
fisttps
push
cmpsl
decl
and
or
cmp
push
pop
lock
add
scas
mov
push
addr16
add
mov
mov
jo
ljmp
fisubs
xor
js
and
pop
test
repnz
test
or
pop
sar
mov
xor
ja
mov
mov
mov
push
add
movl
and
pop
push
and
test
mov
test
cmp
ds
test
lods
jae
pop
push
daa
iret
repz
push
xchg
or
xchg
cmp
mov
leave
imul
dec
cs
stos
call
adc
cmp
leave
and
aaa
jo
into
adc
push
daa
dec
ja
in
inc
jb
mov
sbb
iret
les
dec
stos
ss
xchg
or
out
push
testl
cmp
sub
inc
mov
pop
push
jne
mov
jle
xchg
add
setbe
mov
ror
pop
ja
ja
push
add
xchg
loope
add
jmp
daa
out
lea
or
or
adc
cmp
repz
and
jae
xor
adc
es
repz
push
adc
cmp
jmp
adc
jno
dec
and
sbb
jb
xchg
les
lods
aaa
xlat
lods
pushf
cmp
ss
mov
add
push
cmp
stc
cmp
adc
test
dec
lods
seto
orb
lcall
ret
xchg
mov
jp
scas
aaa
cmp
add
sahf
pushf
cmp
movsb
cmp
jo
pop
cmc
fcompl
jg
add
push
seto
xlat
dec
or
test
mov
fnstsw
or
das
rclb
dec
enter
pop
fs
jns
aas
mov
adc
pop
push
lahf
jp
xor
ret
add
or
sti
inc
popf
cmp
or
push
jae
pushf
fisubs
adc
dec
adc
ja
mov
and
jno
inc
or
enter
cmp
cmp
mov
pop
push
scas
sbb
sbbb
das
out
leave
leave
xor
and
iret
push
dec
cmp
or
pop
jge
jns
outsb
js
sahf
cmp
mov
clc
pop
rorb
pop
inc
popf
inc
mov
in
xchg
roll
fsub
das
push
mov
or
add
js
or
inc
cmp
out
inc
inc
sbb
add
inc
test
mov
add
scas
mov
iret
orb
nop
push
or
iret
repz
or
mov
mov
in
outsl
in
add
sbb
add
repz
add
add
repz
push
pop
arpl
iret
repz
jno
orb
or
out
inc
mov
mov
dec
cmp
int
ja
jl
mov
daa
fildll
mov
mov
jmp
cld
cmp
jbe
aas
ds
filds
mov
and
in
mov
mov
mov
cmp
sub
jl,pt
jne
and
dec
inc
push
xchg
dec
mov
outsb
call
pop
pushl
mov
incl
outsb
pop
enter
movsb
mov
fmull
xchg
mov
adc
xor
iret
mov
xchg
jl
inc
mov
jb
xor
outsb
mov
adc
out
sbb
add
mov
inc
shlb
and
jno
cmp
xchg
lahf
mov
stos
push
outsl
mov
mov
jae
ret
in
pushf
xchg
lock
mov
cmp
mov
sub
push
cmovbe
str
xchg
scas
into
outsl
push
dec
dec
mov
mov
int
loope
mov
or
inc
rolb
mov
shrb
jnp
test
dec
pop
ss
xchg
mov
insb
inc
pushf
inc
push
inc
cmovb
movsl
mov
in
inc
scas
hlt
imul
mov
xchg
daa
adc
sub
clc
add
push
mov
add
fnstsw
jmp
dec
push
out
pop
in
in
outsb
pop
arpl
jae
adc
mov
jnp
or
mov
add
push
addr16
lahf
mov
shll
jbe
mov
in
das
xchg
xor
mov
adc
in
dec
jb
mov
ja
and
shrb
in
xchg
lahf
mov
dec
dec
jb
mov
scas
mov
inc
push
les
rclb
enter
ja
mov
fildl
in
mov
ja
push
in
jns
pop
iret
push
jo
addr16
xchg
das
stos
dec
push
sahf
out
add
add
in
jns
incl
xchg
dec
jb
push
and
jae
add
dec
add
pop
jle
push
cwtl
cmp
mov
xchg
push
inc
data16
mov
outsb
mov
xchg
mov
incl
inc
pop
mov
bound
lsl
out
pop
and
cmpsl
test
xchg
popf
test
xchg
mov
pmaxsw
mov
pop
incb
leave
insl
in
mov
add
mov
cmp
push
pop
repz
cmp
cs
or
cmp
leave
jbe
push
or
outsb
femms
mov
pop
lock
leave
jnp
js
mov
repz
ds
iret
sti
add
mov
dec
adc
int3
cmp
das
movntps
mov
jg
movq
xchg
out
ja
xchg
add
xchg
mov
or
sbb
mov
fistpl
pop
push
adc
fucom
jns
push
sahf
sub
mov
call
sbb
dec
addr16
cmp
mov
xor
imul
mov
fsts
push
notb
push
mov
fcomip
pushf
cmp
sub
add
push
pop
push
pop
push
xor
mov
cs
in
and
paddsb
in
mov
cld
out
add
add
pop
fmull
dec
sbb
xlat
or
aas
push
mov
into
ret
aaa
push
pop
std
mov
push
aas
push
iret
mov
push
push
lods
in
in
mov
bsr
add
int
leave
add
add
jno
leave
clc
add
mov
clc
xchg
push
add
dec
push
iret
pop
in
outsb
frstor
popw
outsb
add
dec
sahf
out
add
mov
xlat
or
cmp
ror
rcrl
fnstenv
mov
cmpsb
fdivrs
sar
addr16
sbb
rcr
xchg
xchg
out
push
bound
out
fmull
jb
xchg
add
add
mov
mov
in
in
call
dec
outsb
xchg
push
pop
movups
dec
mov
js
and
dec
loope
push
sub
mov
iret
lods
cmp
xchg
pop
and
mov
mov
roll
jae
jb
hlt
add
mov
pop
push
daa
daa
ret
out
cltd
mov
push
test
das
mov
jne
in
jge
test
jno
out
xchg
add
iret
jnp
movsl
fiadds
lods
or
xchg
dec
jbe
or
fisttpll
sti
mov
je
and
inc
movups
in
sub
xchg
cmpsb
inc
dec
xchg
outsb
jl
mov
inc
repnz
cmp
mov
idivb
pop
ds
push
sbb
cmp
les
push
iret
repz
add
add
and
cmp
ds
jge
shrb
les
in
jbe
ror
rcl
fsubrs
psubsb
rclb
out
in
sub
sbb
jg
xchg
fcmovne
dec
push
punpcklwd
outsb
xor
jae
lds
test
lea
xchg
out
test
out
dec
dec
sahf
out
add
ftst
into
fimuls
out
cli
syscall
out
adc
in
aas
sbb
mull
or
cmp
inc
ud1
xchg
insb
sub
sub
xor
pop
jp
and
fwait
stos
cwtl
call
test
push
scas
scas
shrl
iret
add
clc
pop
push
das
out
cmp
add
or
das
push
or
cmp
movaps
inc
iret
enter
push
push
jle
adc
adc
dec
cmpsl
pushf
mov
add
mov
sahf
rol
jg
adc
subl
inc
pop
add
cmp
or
daa
cmp
xorl
jnp
cmp
push
push
add
leave
es
fildll
push
iret
ss
mov
inc
enter
xchg
dec
ss
push
add
push
ja
repz
pop
mov
ror
int
aad
pop
enter
and
mov
jb
or
adc
sbb
lgdtl
movaps
cs
shlb
leave
out
out
jo
cmp
insb
add
push
jbe
insl
and
pop
ror
in
cmpsl
imul
in
pop
sub
pop
leave
jecxz
ljmp
pop
ja
lret
cmp
outsl
inc
pop
sahf
test
fisttpll
add
push
jns
out
popw
jno
jl
jns
out
xchg
xchg
or
setle
push
mov
jecxz
jmp
push
and
das
nopl
xor
dec
into
leave
sub
cs
cmpsl
outsb
jmp
ss
clts
bswap
and
or
inc
scas
lret
xchg
out
push
add
addl
pop
inc
repnz
pop
xor
shlb
mov
icebp
add
mov
lods
pop
mov
mov
adc
int3
pop
testl
notrack
cmpb
dec
outsl
push
cmpsl
movntq
fldt
jbe
addl
push
or
testl
dec
sahf
or
sahf
push
out
psubd
add
xor
adc
push
sbb
out
sahf
out
adc
adc
sahf
push
inc
pop
push
sbb
sahf
out
sbb
jae
jb
rorb
sbb
push
adc
adc
adc
jb
jb
adc
push
or
mov
xor
cld
js
cmpsb
add
int
mov
push
mov
push
inc
and
xchg
nop
cmpsb
mov
pop
pushf
push
daa
cmp
push
loope
lahf
icebp
adc
dec
ja
idiv
dec
into
loopne
dec
into
cmpsl
adc
xlat
test
mov
hlt
mov
pushf
test
xchg
pop
out
pop
mov
pop
stc
sarb
xor
incl
xor
jns
dec
into
pop
into
pop
push
ret
ja
filds
mov
mov
cmpsb
lcall
jcxz
jp
pop
dec
push
iret
out
scas
mov
das
push
add
idivl
repz
add
and
enter
xorb
mov
mov
in
scas
adc
dec
dec
mov
pop
repnz
dec
pop
daa
repnz
cmpb
cmp
lods
addr16
call
shl
in
movsl
pushl
scas
and
pop
add
ja
pop
movsb
rorb
rcl
cmp
pop
rcrb
cli
xchg
add
xchg
sbb
ficoml
movsb
xchg
repz
dec
popa
insb
push
add
mov
xchg
push
add
cmp
push
mov
rorl
push
mov
dec
call
enter
cli
add
or
ja
enter
fistps
shlb
pop
push
pop
daa
iret
jmp
sub
xor
or
inc
jns
out
push
or
or
fucom
pop
iret
adc
push
sub
pop
sarb
add
cwtl
dec
jmp
mov
xchg
into
fildll
mov
iret
out
rclb
cmp
add
add
nop
popa
add
gs
push
popa
mov
lret
and
sub
add
shl
popf
cmp
push
add
push
add
push
push
fistps
bound
xchg
cmp
pop
push
push
or
xor
mov
cmpsl
testl
jmp
daa
jl
pop
adc
cmp
fdivrs
fmull
call
push
aad
mov
aam
push
aam
aam
in
mov
pop
stos
mov
in
fs
iret
aam
in
lods
call
inc
repnz
movsb
arpl
and
fisubl
psrlw
push
mov
pop
aad
leave
leave
inc
fwait
push
addr16
mov
leave
inc
jb
shr
xor
hlt
aad
fs
fiadds
movsl
xchg
pop
pop
push
add
sub
pop
das
jb
and
daa
push
xor
roll
gs
cmpsl
out
xor
in
pop
push
gs
outsb
pusha
subb
js
jb
inc
push
jnp
or
mov
cmpsl
lods
xchg
pushf
mov
out
scas
cmp
mov
rcrb
lods
fwait
cmp
pop
add
cmp
iret
or
repnz
sbbb
das
or
push
data16
xchg
addr16
sub
cmp
push
cmp
rcrl
popa
outsl
xchg
push
jo
mov
and
cmp
cmpsb
sbbb
xlat
in
push
jb
aas
pop
fdivrs
jne
fnsave
push
lahf
pxor
push
xchg
fucom
jns
add
clts
push
pushf
pushf
pushf
pushf
pop
push
repz
orb
or
fdivrs
cwtl
xlat
imul
mov
push
ja
mov
ficoms
ja
push
ret
jmp
subb
into
popf
fstpt
outsl
inc
scas
push
pop
dec
daa
loopne
xchg
fstps
push
aas
in
mov
fstps
invd
jnp
fwait
cmp
xchg
or
sbb
cmpsl
aas
pop
vmwrite
push
imul
pop
push
adc
add
mov
mov
mov
cs
push
dec
notb
popf
pop
decl
test
push
cmp
paddusb
mov
in
out
out
or
or
xor
pop
xchg
push
ja
add
out
dec
add
ljmp
mov
mov
adc
enter
xor
push
fldt
cmp
dec
imul
imul
test
cwtl
fsubrl
xchg
mov
leave
leave
inc
ror
hlt
mov
push
fcoml
fmull
cmp
mov
push
fsubrl
insb
fwait
test
test
inc
pop
xchg
mov
pop
push
add
imul
bswap
leave
leave
lods
add
add
add
repz
or
or
cmp
es
adc
adc
mov
fisttpll
es
int3
aam
add
dec
pop
mov
adc
jne
xchg
or
adc
ret
push
xchg
pop
push
mov
psignb
xor
push
dec
aaa
aad
jae
paddusw
fildl
pop
fisttpl
jecxz
fldt
jmp
das
repz
sti
pop
or
cmp
stc
add
fwait
mov
in
lds
push
btr
mov
out
ret
adc
adc
jns
dec
aaa
movups
or
jae
cmp
adc
pop
and
leave
jmp
iret
sbb
nopl
cmp
pop
dec
mov
repnz
and
dec
scas
fwait
cmp
jae
es
sub
cmp
repz
mov
xchg
sub
cmp
repz
sub
sub
iret
cs
mov
adc
lret
fisubrs
clc
insl
nop
sub
adc
ss
xchg
cmpl
inc
pop
shl
in
dec
fsubrl
es
pop
ja
scas
mov
push
cld
push
in
in
xchg
fistps
fbld
sub
ja
xchg
in
call
filds
nop
cwtl
cpuid
stos
and
xchg
add
xchg
or
loopne
xlat
in
out
mov
pop
cld
cmpsl
pop
repz
test
pop
add
femms
or
fcmovne
and
das
cmp
cmovg
out
or
cmp
leave
repz
adc
sahf
cmpsl
fwait
unpcklps
adc
out
fstl
call
sahf
cmc
sbb
loope
bndstx
repz
sbb
sbb
repz
inc
pop
dec
and
repz
pop
and
jne
cmp
repz
and
and
repz
cmp
enter
loope
loope
loope
inc
mov
loope
loop
push
das
mov
xor
ss
inc
loop
popf
popf
popf
pop
dec
loop
push
loop
iret
repz
popf
fistpll
aas
push
daa
mov
cmp
repz
and
cmp
repz
repz
shlb
fistpl
out
bswap
repz
sbb
sahf
out
xchg
jecxz
push
sbb
sbb
out
pop
xor
dec
out
sahf
out
dec
push
dec
pop
sahf
out
sahf
dec
push
ja
test
xlat
dec
sqrtps
pop
push
dec
outsb
fucom
jle
pop
dec
cmovp
out
dec
pop
cmpsl
pop
mov
rep
mov
das
int3
dec
xlat
push
push
loop
inc
das
call
fnstcw
xchg
outsl
in
bound
jno
sub
cmove
repz
add
jne
iret
mov
in
pop
lea
repz
lcall
repz
rorl
fsubp
rorl
in
jb
sahf
out
notb
and
rep
or
adc
push
repz
repz
iret
repz
cmp
dec
sbb
cmp
repz
sbb
ja
cmp
repz
leave
repz
xchg
and
mov
mov
mov
fnstcw
loope
jmp
jns
add
das
pop
out
femms
push
sbb
jns
out
and
adc
adc
adc
xchg
pop
loopne
dec
divps
jns
out
push
or
pop
jne
out
or
jecxz,pn
sahf
push
or
mov
ds
cmp
dec
sahf
inc
mov
fisubs
je
rep
sti
out
js
mov
add
pmaxub
mov
push
add
out
out
movd
cmp
or
sub
xor
xchg
pop
js
or
or
sahf
out
push
rcpps
pop
adc
in
in
imul
adc
cmp
mov
xchg
lahf
cmp
xchg
out
cmpsl
scas
out
sbb
in
and
cwtl
jbe
push
dec
push
adc
mov
call
rdtsc
push
add
popf
fmull
dec
push
das
pop
popa
cmp
cmp
imul
out
mov
xchg
mov
iret
adc
dec
dec
dec
dec
rcr
loopne
xor
dec
lock
xor
jns
jae
or
pop
sbb
inc
and
xor
iret
jmp
aaa
and
ja
pop
jmp
out
add
pop
daa
iret
jae
jg
add
repnz
mov
or
shr
repnz
push
adc
popf
cmp
icebp
psubw
ljmp
adc
ljmp
ljmp
iret
mov
add
add
iret
push
jne
orb
xchg
or
dec
sahf
or
scas
push
mov
pinsrw
adc
fstps
push
jmp
adc
pop
out
outsb
mov
pop
xor
cmp
sbb
sbb
dec
sahf
out
sbb
sahf
out
mov
out
jns
mov
and
dec
xlat
daa
loop
pmulhuw
clc
add
push
sbb
jns
out
cs
das
cmp
dec
icebp
inc
in
outsl
xor
jno
xlat
fnstsw
add
jns
sbbl
add
push
add
and
pop
ret
mov
jns
iret
repz
fsubrp
push
or
shl
lock
rorb
or
daa
daa
adc
and
sahf
out
repnz
pop
cmp
inc
fucom
jns
dec
sbb
sbb
jns
pop
sbb
sbb
push
and
push
leave
mov
lods
leave
leave
leave
leave
mov
iret
mov
dec
out
out
in
push
xchg
fiadds
das
add
scas
enter
cmp
pop
rdpmc
cmp
push
ds
add
dec
push
jmp
outsl
out
fistpll
cmp
repnz
mov
push
or
leave
mov
or
outsb
mov
in
sarl
lahf
jmp
jnp
pop
js
outsb
or
pop
push
push
push
lds
palignr
iret
repz
push
sub
sbb
inc
push
push
mov
in
jbe
push
pop
push
lahf
fsubrl
inc
fists
pop
jae
cmp
sub
sub
repz
fsubrl
push
sub
iret
repz
das
stos
xor
repz
lret
xor
xor
cmp
in
in
sahf
ss
aaa
cmp
lock
cmp
addr16
lahf
lock
sarb
cmp
fdivrs
jecxz
out
iret
xor
stc
scas
add
cmovae
cmp
repz
and
in
jbe
aas
dec
das
push
dec
bound
adc
popf
out
insl
add
add
add
cld
cs
test
dec
jg
es
jge
movsl
adc
mov
mov
in
icebp
mov
add
add
dec
xchg
out
sahf
push
push
out
pop
cli
dec
sahf
aaa
roll
or
fcompl
xor
repz
subss
imul
je
orl
movsb
scas
mov
iret
sbb
rorb
fucomi
insl
jbe
dec
repz
adc
or
ficomps
push
and
cs
repz
inc
dec
repz
jns
mov
repz
fldcw
in
add
pop
cmpl
sahf
outsb
repnz
add
add
testb
or
push
pop
out
in
dec
and
sub
iret
repz
or
fcmovne
repz
jno
jl
adc
es
xrelease
xchg
unpckhps
iret
repz
popf
push
test
mov
sahf
out
cmp
leave
cs
sbb
iret
cmp
ljmp
int3
adc
jns
push
and
insl
jns
out
and
sub
repz
ss
pop
inc
cs
dec
sub
sub
je
iret
sub
setp
shlb
adc
xlat
iret
int
cmc
outsl
cli
cmc
and
testb
btr
sbb
aas
sub
jg
leave
xorb
testb
inc
orl
pop
vprotq
outsb
mov
jns
xchg
xchg
xchg
mov
or
jns
out
or
or
leave
repz
prefetch
or
in
loop
imulb
add
push
testl
negl
xor
pop
repz
mov
inc
sbb
enter
sbb
or
pop
cs
cmp
repz
push
ja
xorb
iret
pop
lea
lcall
and
jns
and
fnsave
fisttpll
pop
scas
inc
sub
add
dec
add
jg
ficomps
xor
sub
aaa
mov
lahf
jg
xlat
mov
test
push
add
out
in
mov
pop
into
pop
adc
jns
cmpsb
ljmp
mov
mov
testl
push
cvttps2pi
fwait
cmp
adc
dec
sahf
ja
cmp
pop
addr16
adc
dec
jge
mov
xchg
sbb
sbb
outsb
sub
dec
push
js
hlt
pop
lods
movsl
jmp
cld
push
pop
cli
pmulhrw
cli
repnz
cli
xor
dec
sahf
outsb
wbinvd
inc
dec
ds
jns
leave
push
pop
push
or
mov
insl
js
orl
push
adc
jns
leave
xchg
fwait
push
adc
adc
stos
mov
rcrl
iret
repz
sbb
sbb
sbb
sahf
ja
cmp
jmp
loope
cmp
pop
outsb
add
or
and
adc
and
enter
sti
push
pop
pop
setle
jns
imul
addl
jle
sti
dec
mov
sahf
or
iret
shrl
lcall
femms
cmp
repz
adc
adc
mov
cmp
nop
das
cmp
cmp
adc
push
sbb
iret
repz
xor
cmp
dec
sbb
leave
repz
sbb
cmp
cmp
orb
mov
iret
repz
xchg
dec
and
leave
repz
es
fs
fdivr
pop
sub
xchg
cmc
orb
push
ret
nop
mov
fs
pop
pop
popf
pop
es
cs
std
insl
in
mov
std
jo
push
cmp
mov
out
cmpsl
leave
leave
leave
shlb
fcmovne
ret
syscall
fdivrs
out
jecxz
out
or
or
fcomip
add
syscall
or
mov
leave
repz
rsqrtps
fs
pop
adc
out
pop
jle
mov
in
sahf
out
pop
in
sbb
test
out
or
cs
jns
and
cmp
pop
and
push
and
mov
ror
repz
es
daa
loope
in
xor
jmp
scas
xchg
pop
inc
das
dec
sahf
out
or
xor
jns
ja
movhps
cs
outsb
daa
iret
cmp
dec
pop
xchg
out
js
sahf
xchg
cmp
stos
lgs
cmp
enter
incb
mov
popf
out
cmpsb
scas
into
btl
leave
repz
rolb
fucomi
das
ss
mov
or
das
push
vmwrite
out
or
or
fucomi
in
dec
das
pop
pcmpgtw
adc
iret
repz
jnp
push
adc
das
test
outsb
daa
iret
repz
loop
sahf
pushf
fcompl
in
cli
add
repnz
sbb
and
iret
in
in
and
out
popf
cmp
xchg
pop
sub
sub
dec
repz
add
pop
cmp
repz
sahf
out
inc
das
push
pop
push
xor
jae
jle
fsubrl
out
sahf
xor
out
psubd
mov
bndstx
pop
pop
mov
inc
sub
pop
inc
add
or
push
add
jnp
xchg
sbb
xlat
outsb
pop
push
fisttps
iret
push
stc
lsl
setb
jnp
add
adc
sub
jb
cmpsl
xor
xchg
push
dec
ret
sbb
and
pop
pusha
insl
loop
adc
push
cmpsl
movsb
cmpl
mov
mov
lret
mov
push
mov
push
add
jbe
xor
test
add
xchg
adcl
and
add
mov
inc
fs
shlb
fnstsw
cmp
mov
cs
inc
push
push
mov
ljmp
and
pop
inc
adc
fdivrs
cs
aaa
sub
aaa
xlat
add
das
sub
inc
jno
mov
or
out
push
or
or
or
imul
daa
in
in
pop
xchg
adc
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
and
mov
add
fwait
fadds
add
adcb
push
dec
inc
add
add
sbb
imul
jo
mov
mov
sbb
cmp
testb
add
movsb
add
xchg
pushf
cmp
movsl
sbbl
subb
mov
cmp
inc
xchg
ret
mov
mov
out
adc
or
mov
adc
push
ficompl
sub
sbb
pop
fisubrl
xor
fcomp
loopne
jb
rolb
jle
iret
xor
push
xchg
nop
cmp
repz
mov
rep
pusha
push
dec
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
lcall
hlt
in
and
jns
fwait
pop
in
faddl
aam
rcrb
movsb
mov
sarb
bnd
mov
fs
pop
push
sahf
cmpsl
cmp
dec
mov
cmp
sbb
repz
jl
and
aam
mov
mov
mov
sahf
idivl
js
jo
pusha
cmp
out
cmp
and
push
out
lcall
out
ja
mov
xchg
push
pusha
add
icebp
add
orb
add
mov
dec
lock
js
clc
ss
mov
fldenv
add
xor
std
dec
daa
aas
sbb
es
push
inc
xor
orb
jl
xchg
and
cwtl
xchg
xorb
mov
outsl
lock
call
push
mov
push
inc
jg
mov
mov
mov
and
sgdtl
push
adc
xor
es
mov
push
adc
xchg
pop
in
mov
add
fldt
or
testl
das
outsl
pop
adcl
rclb
pop
fistl
js
stc
pop
jg
js
lds
pop
out
lods
add
repnz
out
xor
out
iret
xchg
int
jns
and
and
push
repz
and
sbb
cmp
hlt
and
out
add
fcoms
push
sahf
out
sahf
aam
rorb
or
cmp
pop
inc
sbb
fdivl
cmp
push
xor
cmp
jae
push
push
and
repz
scas
push
and
adc
and
xor
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
mov
aam
adc
xor
dec
sahf
out
sti
insl
add
push
pop
ja
cmp
shl
jae
das
and
insb
dec
and
pop
les
pop
mov
pushf
in
add
or
enter
ret
mov
adc
ret
sbb
push
pop
and
jg
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
call
sbbb
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
daa
push
xor
int
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
push
lcall
sbb
adc
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
into
add
test
or
add
nop
jl
loopne
inc
xlat
xchg
shrl
inc
inc
je
inc
inc
lcall
add
push
dec
addr16
pop
and
dec
dec
inc
push
xchg
cmc
movsl
testb
aas
jg
xor
in
mov
mov
decl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
stos
adc
sub
mov
aas
sbb
insb
imul
insb
mov
cmp
sbb
icebp
push
and
pop
dec
dec
push
inc
dec
push
int3
sahf
cmpb
push
jo
jb
push
test
addb
inc
test
out
dec
inc
gs
gs
and
jle
xchg
inc
ds
adc
inc
arpl
mov
outsl
add
sub
bound
outsl
push
dec
pop
jbe
insl
mov
push
push
xchg
cmpsb
add
xchg
out
orb
push
mov
dec
mov
xchg
or
das
mov
add
push
fs
cmpsl
addb
xor
arpl
daa
jg
dec
xor
dec
jae
imul
xor
sahf
loope
mov
jns
dec
addl
lahf
push
push
les
push
mov
jmp
les
fisubrs
jb
jns
inc
inc
fimull
push
or
insl
rcl
and
inc
sbb
out
das
adc
adc
dec
dec
lds
mov
dec
bound
jbe
dec
and
xchg
push
add
cmpsb
je
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
sub
outsl
dec
dec
add
pop
mov
push
lret
push
xor
pop
mov
mov
or
inc
xchg
push
dec
push
in
pop
mov
js
cli
dec
push
or
mov
push
add
pop
insl
add
dec
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
loope
dec
mov
xchg
push
inc
arpl
push
inc
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
iret
lods
mov
data16
rorb
cmpsl
and
push
or
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
sub
daa
dec
xor
pusha
jmp
aam
fcompl
mov
inc
movsl
arpl
adc
outsl
adc
outsb
push
pop
loop
add
pop
push
jne
les
add
loopne
push
mov
xor
rcll
outsl
addr16
push
sub
push
xchg
mov
pop
les
push
jecxz
test
inc
sbb
out
cmp
lock
mov
repz
rep
push
xor
out
sahf
out
pushf
test
hlt
jge
dec
xor
les
inc
leave
repz
add
or
cmp
ds
push
and
lahf
lcall
fcompl
jne
add
ljmp
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
outsb
add
call
leave
mov
lods
jecxz
fdivs
jne
dec
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
imul
mov
mov
or
or
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
insl
or
or
mov
cmp
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
adc
inc
hlt
or
fnstenv
adc
mov
testb
bound
ficoml
gs
aam
pop
popa
mov
into
push
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
lds
inc
cld
fldcw
inc
mov
shlb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
incl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
dec
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
call
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
jmp
add
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
pushl
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
incl
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
mov
xor
mov
add
push
xlat
int
push
ficoms
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
push
dec
pop
out
add
sub
add
lods
mov
les
mov
push
xchg
outsl
inc
jne
ds
cmc
push
dec
je
push
insb
imul
xchg
pop
incl
dec
fistps
jbe
push
jns
arpl
bound
in
outsl
arpl
mov
add
sbbb
xchg
sub
pop
inc
jne
outsl
insl
addr16
lods
fldenv
xchg
fildl
lods
xor
xlat
jl
nop
jne
mov
cmc
test
cli
cmp
inc
js
inc
insl
bound
add
or
loopne
jmp
inc
inc
inc
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
icebp
xor
inc
sbb
fistl
xchg
add
ror
xchg
test
mov
rcl
dec
xor
fbld
pop
or
ss
jbe
in
popa
stos
cmp
or
inc
aas
push
pop
movsb
push
xchg
stos
popa
fs
roll
inc
push
sub
mov
dec
aaa
pop
addl
insb
popa
jns
push
add
ljmp
push
push
nop
pusha
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
ret
ljmp
sahf
bound
push
mov
inc
mov
aaa
inc
and
sbb
inc
pop
jnp
adc
or
jae
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
xchg
aad
sub
addr16
ss
add
add
or
add
push
pop
aad
ss
push
repz
pop
jo
or
lods
mov
cmp
aas
cli
adc
dec
shlb
sbb
or
xor
outsl
adc
mov
push
lcall
jo
lcall
xor
mov
aad
xlat
mov
inc
add
fists
daa
inc
jb
cmp
adc
sub
push
loope
popa
jo
lahf
xor
nop
aas
push
outsl
outsl
test
mov
in
pop
push
jno
adc
in
push
andl
xchg
add
push
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
cmpsl
xchg
push
pop
push
outsl
inc
xor
shrb
rcl
aad
inc
pusha
push
popa
jb
adc
push
addr16
push
sub
mov
mov
adc
add
das
push
pusha
xor
push
or
push
mov
push
and
aam
les
popf
xor
or
add
sub
aaa
and
or
pop
xor
stc
pop
inc
adcb
scas
pop
add
pusha
addr16
mov
testb
and
mov
ret
push
push
push
xchg
sahf
aas
movl
add
xor
rcrb
push
loop
aaa
jno
inc
je
outsb
cwtl
mov
push
inc
aaa
lds
daa
push
add
mov
mov
and
addb
pusha
loopne
mov
adc
lods
push
push
adc
add
pop
add
mov
push
clc
or
pop
mov
int
mov
pusha
adc
and
das
add
add
test
outsl
je
add
in
or
dec
push
and
cs
or
mov
cmpsb
dec
shrd
popa
incl
lea
repz
bswap
mov
out
ud0
lahf
jge
jmp
repnz
in
push
pusha
ljmp
lret
cli
cmp
sub
arpl
stc
mov
or
push
inc
es
add
dec
addr16
sti
pop
loopne
add
or
or
insb
daa
aam
push
outsb
jns
adc
adc
add
and
add
addr16
sbb
add
adc
shrb
push
test
mov
xor
adcb
pop
insb
sub
push
loop
fldenv
in
push
pusha
push
add
pop
add
lahf
or
lea
cltd
nop
ja
and
and
lods
add
or
xor
jb,pn
mulb
inc
add
es
loopne
xor
cs
mov
ss
dec
or
rcrb
dec
or
add
jo
lahf
jb
test
sbb
repz
push
inc
jl
inc
add
cmp
bound
dec
inc
stos
je
and
push
roll
jmp
add
clc
and
dec
sub
lea
pusha
test
arpl
cmp
or
mov
push
or
mov
nop
bound
jp
xchg
jg
fs
ret
dec
fmul
fstl
xchg
dec
sbb
addl
push
wrmsr
jg
and
jno
int3
fucomi
gs
imul
dec
out
jg
ja
jne
jmp
mov
jno
ja
into
jl
rcr
or
call
aam
ss
arpl
int3
loope
pop
lret
mov
add
outsb
add
mov
int
sub
or
add
hlt
jl
les
fsubl
sbb
mulb
movsb
or
es
in
clc
xchg
add
fwait
mov
cmp
add
sbb
and
imul
aad
rcll
sbb
mov
call
nop
or
inc
lea
movsl
mov
sbb
inc
xchg
data16
mov
fsubrs
cmp
jbe
mov
dec
je
xor
ficoms
pop
aad
jo
xor
or
cmp
ljmp
and
sub
adcb
xchg
mov
push
out
in
cld
xor
movsl
mov
push
rcrb
loopne
call
fsubrs
pop
outsb
hlt
dec
adc
imul
and
rorl
clc
aad
or
xor
push
inc
imul
add
adc
mov
cltd
addl
bound
sti
subb
inc
push
cmpsl
in
inc
dec
push
inc
xchg
jne
sti
add
push
xor
xor
dec
inc
adc
jae
xchg
push
mov
add
jl
lcall
add
out
mov
imul
or
scas
xor
push
adc
push
or
out
in
dec
in
push
leave
push
ja
push
cmp
inc
dec
cmp
pop
add
notb
ja
dec
or
push
popa
push
lods
pop
leave
in
iret
inc
dec
push
cmpsl
leave
push
ds
mov
cmp
je
pop
push
ret
adc
adc
rorb
and
nop
sbb
xor
lods
and
dec
fcoms
in
sub
and
sbb
push
pop
movsb
add
sub
test
push
mov
add
sbb
aam
decb
test
movb
dec
adc
or
ficomps
add
push
mov
aam
mov
mov
or
leave
xchg
out
add
pop
sbb
mov
hlt
add
and
pop
pop
adc
mov
ss
shl
adc
je
rcll
sub
lock
in
fimull
add
and
or
orb
rol
lock
cmpsl
popf
or
repnz
cmp
push
insb
mov
hlt
or
push
pop
xor
mov
mulb
mov
push
and
dec
xor
cmp
push
or
xor
adc
ficoml
or
rcr
push
dec
and
aad
loope
dec
pusha
inc
ljmp
imul
in
pop
je
call
sbb
inc
push
push
insb
fdiv
outsb
inc
ror
sub
sar
lahf
push
mov
xchg
xchg
pop
cmp
sub
mov
and
sbb
or
cmp
nop
add
jl
dec
xor
fcompl
pop
sarl
add
fsubs
push
sbb
jp
cmc
sarb
push
testl
mov
les
jbe
je
or
inc
or
loopne
or
pop
pop
jl
fisubs
push
gs
xchg
sbb
test
push
pop
cwtl
inc
ja
mov
rolb
mov
roll
xchg
ja
push
jnp
int
or
mov
loope
xor
das
scas
insl
inc
pop
call
adc
cmc
push
add
and
cmp
in
add
add
pop
repz
pop
xchg
xor
insl
and
add
cmp
push
pop
inc
push
adc
xchg
daa
sub
enter
push
push
sbb
movsb
shl
nop
jl
or
mov
out
jle
pop
mov
call
call
xchg
sub
xchg
lea
xor
mov
push
test
ret
pop
cld
rorl
and
nop
cs
sbb
jmp
in
add
push
test
lock
sarb
loope
call
add
sub
call
fnop
mov
insb
sarb
or
xchg
inc
sbb
xchg
push
sbb
dec
call
mov
pop
in
dec
push
inc
mov
je
or
push
lcall
insl
movsb
mov
mov
cs
sbb
sub
and
mov
push
or
in
shl
or
push
subb
scas
shl
xchg
push
inc
push
xor
dec
adc
clc
sbb
push
push
jg
push
or
testl
or
sahf
or
push
out
mov
lods
filds
mov
mov
notl
and
mov
insl
pop
sub
dec
xchg
sbb
adc
push
in
cmp
in
sub
lds
and
push
pop
add
bound
lret
gs
mov
je
sub
sub
inc
adc
or
insb
jmp
sbb
hlt
push
and
add
push
jns
testb
pop
loop
add
ret
nop
jo
inc
bound
dec
sti
jne
push
pop
mov
shll
sbb
lret
pop
movq
inc
sub
loope
pop
dec
shlb
xor
xor
xor
ds
sbb
pop
scas
loope
push
sbb
sbb
sbb
push
jmp
fdivr
icebp
dec
inc
xchg
xor
jb
mov
mov
daa
push
push
push
dec
fdiv
adc
lods
add
sbb
cmp
pop
pop
pusha
push
fiaddl
int3
call
cltd
inc
call
hlt
mov
in
sub
pop
insb
mov
into
idivl
mov
adc
xchg
push
xor
add
test
into
or
call
test
test
sub
sti
movsl
lahf
je
cmp
cmp
xchg
test
in
cmp
push
lea
adc
inc
jbe
push
adc
jb
add
push
and
aaa
mov
jo
pop
adc
inc
push
sub
daa
rolb
add
cmp
xchg
add
shll
repnz
xchg
inc
sbb
hlt
mov
fmul
fdivrp
xor
fdivr
mov
mov
loop
ret
lea
je
mov
out
js
decb
mov
and
jmp
sub
pop
ds
es
lret
xor
call
push
jge
mov
int3
or
mov
in
push
call
add
mov
dec
and
or
push
adc
rol
rorl
mov
pop
inc
dec
out
jne
lea
push
dec
enter
insl
jl
mov
mov
rep
xchg
mov
rep
push
or
xchg
mov
adc
mov
shll
jle
out
inc
jne
rcll
bound
rcrb
and
adc
xchg
sbb
lea
jne
dec
pop
push
push
mov
rep
push
pop
lahf
into
enter
aad
rorb
pop
xor
mov
pusha
clc
dec
mov
rolb
add
or
pop
sbb
push
jb
loope
xchg
call
lock
ljmp
insb
subl
fiaddl
xor
cmpl
sbb
je
mov
cmp
scas
sbb
mov
call
mov
or
std
mov
push
aam
xor
xchg
xchg
aad
stos
sahf
pushf
data16
imul
ljmp
dec
jnp
fiaddl
mov
gs
in
lret
push
loopne
inc
call
roll
mov
dec
sbb
stc
push
js
mov
dec
dec
popa
mov
std
sub
pop
ficoms
or
insl
movsl
lods
dec
add
push
or
add
scas
dec
adc
hlt
jno
in
push
push
rol
inc
push
xchg
sbb
adc
dec
dec
add
and
cmp
or
pop
jmp
adc
mov
pushl
push
push
and
pop
and
mov
in
push
scas
lret
pop
lcall
dec
cs
add
cmp
inc
imul
and
int3
pop
imull
in
xor
jp,pt
cmp
or
leave
xchg
std
nop
dec
in
mov
add
in
in
dec
in
enter
pop
sub
inc
or
imul
jbe
insb
cmp
push
cmp
leave
sub
mov
insb
or
adc
lods
inc
rcr
in
or
mul
jmp
mov
pop
mov
cmp
dec
add
sub
xchg
mov
mov
popl
mov
repnz
shl
aam
fsub
push
mov
jne
jle
mov
call
leave
lea
call
cmp
mov
movsb
imul
pop
lds
imul
es
cmpsl
data16
fidivrl
adc
push
fists
andl
dec
mov
pop
mov
push
inc
sbb
jne
lods
lods
push
jb
stos
push
cmp
fiadds
push
jbe
push
add
xor
shrb
add
ficompl
mov
shl
scas
xor
jmp
sbb
fdivrl
mov
push
ljmp
or
sbb
or
adc
cmp
cmp
aad
mov
mov
dec
xlat
push
push
mov
jecxz
sbb
lea
mov
push
jg
add
call
adc
jbe
lods
mov
or
and
or
loope
add
in
add
and
jle
jne
jl
jnp
sahf
icebp
push
test
jb
mov
cld
jb
add
sbb
xchg
loopne
pop
sbb
rclb
mov
cmp
subb
add
negl
scas
jns
adc
or
dec
nop
mov
test
gs
ljmp
push
add
add
cmp
loop
out
enter
sub
stos
or
adc
cli
cmp
mov
es
movsb
pop
mov
into
mov
xchg
mov
ss
inc
and
pop
cmp
sbb
incb
or
add
add
or
je
mov
into
test
loope
sub
jmp
loopne
outsb
adc
and
test
dec
mov
mov
push
mulb
test
fimull
sbb
xor
push
test
or
jmp
push
fs
loopne
mov
insl
xor
xor
aad
add
sbb
pusha
push
cld
push
mov
scas
lcall
rcrb
call
cld
adc
test
sbb
push
mov
push
mov
and
push
lock
movsb
mov
mov
xor
test
push
hlt
lods
jbe
push
jne
xor
in
mov
push
add
sub
dec
test
inc
lods
add
push
call
cltd
mov
cmp
push
mov
daa
cmp
adc
push
mov
mov
inc
mov
js
rolb
hlt
repnz
cltd
push
pop
faddp
adc
dec
inc
aas
fildl
inc
xor
xor
or
mov
add
pushl
or
jnp
cmp
inc
out
ss
sbb
ret
stos
std
std
outsl
push
xor
push
stc
xor
sbb
adc
cli
enter
jo
inc
shrl
cmp
call
sub
inc
sbb
mov
addr16
push
push
add
adc
jnp
adc
adc
pop
push
lods
lock
sub
xchg
pop
testl
std
adc
cmpsl
aas
add
push
push
ds
xor
cli
mov
iret
loopne
or
add
stos
cmp
lock
mov
in
add
mov
add
cmp
mov
add
push
outsb
mov
push
cmc
and
in
adc
jl
mov
mov
cmp
cmp
sbb
test
subl
push
add
lock
pop
add
int
or
mov
or
pop
rclb
mov
mov
scas
sti
jmp
les
xor
xchg
jmp
or
jae,pt
adc
add
sbb
sbb
or
push
push
add
xor
mov
daa
jl
lret
cmp
cmp
pop
pop
cmp
cmpsb
jne
rclb
xor
imul
xchg
jg
rcl
xor
cwtl
inc
jecxz
push
mov
pushf
enter
call
rol
jns
pop
and
add
scas
pmulhw
mov
lea
decb
mov
mov
sbb
xor
xchg
sarb
jmp
push
dec
push
mov
and
jne
xor
outsb
in
std
jmp
and
xor
mov
jb
add
in
scas
test
or
or
lea
cmp
addr16
cmpsl
insl
add
ret
cmpl
jl
sbb
sbb
adc
inc
inc
inc
sub
popl
fs
lar
sub
mov
in
rolb
mov
push
mov
in
test
dec
and
add
dec
push
ss
pop
mov
mov
cmp
pusha
add
repnz
sbb
cmp
jl
pop
jne
add
std
or
or
mov
mov
js
or
or
or
lahf
dec
or
add
xor
dec
daa
cld
adc
or
mov
push
push
mov
push
mov
loop
or
cmp
mov
call
out
fidivrl
xchg
ljmp
sbb
push
call
shll
mov
popa
push
lods
ljmp
mov
test
sbb
dec
nop
je
push
icebp
mov
dec
mov
test
movsl
mov
sub
push
mov
lea
adc
xor
insb
notl
push
shrb
outsl
fucomip
cmp
je
cmp
jbe
jmp
xchg
jne
add
or
jg
shr
adc
clc
push
and
std
pop
and
push
mov
sbb
aad
or
sbb
push
jo
daa
loopne
dec
xchg
push
push
mov
cli
adc
aaa
popf
fadd
and
xor
pushf
loop
fmull
test
inc
jmp
sbb
scas
into
or
xor
fwait
add
movsb
adc
xchg
test
xor
mov
data16
mov
and
mov
push
push
inc
mov
imulb
enter
jmp
push
push
mov
popf
in
fsubr
jo
cmpsb
clc
icebp
mov
sbb
lock
cltd
adc
pop
mov
sub
sbb
lods
stos
sbb
inc
adc
movsl
rolb
loopne
into
gs
adc
push
sub
je
es
fwait
lods
out
out
jle
test
or
dec
dec
movsl
pop
cwtl
loop
cmpsl
roll
loop
pop
jl
pop
push
lea
mov
movsl
sbbl
ljmp
xchg
aam
xor
mull
push
inc
jle
push
cmpsb
aam
aaa
dec
mov
inc
cmp
cwtl
clc
jecxz
pop
popa
fsubrl
call
lods
addb
je
lods
data16
cltd
faddl
push
xchg
fdivs
add
test
xchg
dec
je
jae
js
push
push
mov
pushf
insl
xor
fs
add
or
int
or
push
lret
add
sub
adc
push
nop
or
cmpsb
cmp
push
pop
shrl
dec
jbe
sub
pop
mulb
mov
jmp
push
data16
add
dec
xchg
mov
xchg
jmp
inc
das
mov
addps
add
std
sub
lock
dec
push
hlt
mov
rorl
add
mov
add
cmp
ss
clc
and
cmp
push
sbb
push
adc
dec
push
mov
xor
jmp
sub
andl
andl
movsl
sub
or
aaa
jo
mov
or
mov
sub
dec
or
inc
inc
or
push
ret
pop
mov
mov
iret
call
rcr
mov
sbb
mov
or
lea
jmp
sbb
in
mov
sbb
sbb
cmp
jecxz
jne
into
cmp
adc
push
inc
cmp
pop
arpl
sahf
jne
push
pop
pushf
dec
jo
and
maskmovq
divl
jecxz
decb
or
jns
outsl
addl
jmp
nop
xor
push
sahf
jae
arpl
jns
pop
mov
jmp
icebp
call
call
cmp
testb
das
and
push
adc
xchg
push
inc
ret
cwtl
cmp
movsl
add
movsb
sbb
inc
mov
mov
xchg
push
clc
push
xlat
push
push
testb
push
enter
pop
jecxz
push
dec
xor
fxtract
icebp
daa
or
sbb
jne
into
movsb
inc
or
mov
push
mov
pusha
or
xchg
add
xor
or
ret
push
lret
and
xchg
in
mov
add
push
call
in
movsb
push
push
xchg
sub
js
sbb
mov
aad
test
or
scas
adc
mov
sbbl
cmp
xchg
and
int3
jbe
sub
jg
icebp
mov
dec
mov
push
lret
pop
test
cmpb
movl
add
out
push
push
sbb
push
sbb
inc
in
fdivl
or
loop
jno
mov
cwtl
or
popf
pushf
or
cmp
mov
je
test
sbb
test
test
stos
push
inc
add
fs
inc
mov
inc
cwtl
pop
sbb
inc
mov
xchg
pop
andl
pop
ja
cmp
jg
push
dec
lea
cmp
mov
pop
mov
orb
push
jbe
test
aas
mov
icebp
mov
add
and
adc
push
decl
or
inc
rorb
incb
jne
movzbl
add
je
xchg
xorb
movsb
nop
sbb
addb
mov
pop
lea
incl
nop
sbb
cmp
scas
sub
mov
jmp
sti
dec
inc
mov
je
mov
push
xorb
cli
sub
sbb
or
and
ja
loopne
rolb
testl
pop
rorb
mov
nop
inc
add
inc
rorb
out
add
sbb
in
sbb
call
add
push
inc
push
cs
outsl
call
sub
movsl
sbb
xor
push
push
call
lret
sub
aam
lea
subb
test
dec
dec
nop
fs
pop
stos
inc
je
xor
cmp
pop
nop
fs
mov
push
pop
notl
and
pop
aas
dec
pop
mov
add
mov
fs
cmp
add
add
mov
adc
pop
inc
add
pusha
and
sub
xor
inc
popl
xor
in
push
add
out
mov
inc
add
xor
and
add
and
xorb
mov
call
add
xor
add
out
xor
xor
sbb
add
test
loopne
addb
xor
sub
fwait
mov
xor
mov
adc
rorb
dec
push
pop
adc
xor
daa
add
adc
mov
jp
jmp
adc
xchg
je
rorb
aad
dec
cmpsl
mov
and
pop
popa
pusha
cmpsb
nop
adc
dec
cmpsl
xor
xchg
jle
cmp
cli
or
or
jp
jle
jge
cmpsl
xorl
pop
call
call
mov
pusha
popa
js
dec
aam
inc
adc
ja
ss
call
and
pop
dec
adc
adc
mov
jp
jge
xchg
mov
jnp
and
inc
pop
cmp
or
test
add
mov
call
enter
movsl
push
adcb
subb
sbb
xchg
jno
std
xchg
pushl
cmp
jmp
sub
push
xchg
pop
xchg
sbb
pushf
test
adc
mov
fmull
xchg
addr16
mov
je
push
into
cmp
test
fimull
jmp
sub
inc
jmp
or
mov
and
js
jle
push
aam
fadds
push
inc
idivl
add
cmp
insb
or
adc
iret
dec
xor
sub
mov
inc
xrelease
pop
negl
and
inc
loop
jne
shlb
sub
popf
notb
adc
push
es
outsb
cwtl
and
add
loopne
cmpsb
cld
aad
es
into
idivb
mov
decl
pusha
mov
imul
push
es
les
pusha
inc
outsl
movsl
or
movb
xor
insb
outsb
iret
dec
push
dec
cld
fisubl
test
call
jo
pop
xor
lcall
sub
xchg
js
sbb
xchg
add
js
xor
sbb
es
sbb
imull
push
shll
xchg
cmpsb
sbb
dec
sbb
je
enter
rorb
divps
sbb
push
sbb
mov
push
xchg
popl
outsl
pop
aaa
scas
dec
dec
cmp
cmp
orl
push
movsl
adc
pusha
inc
pop
add
dec
enter
in
inc
and
inc
mov
inc
push
push
jbe
push
adc
pop
rcrb
loope
pusha
inc
add
inc
rcll
or
pop
int3
cmpsb
fildl
aaa
and
les
pop
jb
roll
inc
xor
xchg
and
inc
sub
je
es
ss
add
or
dec
sub
in
or
mov
lret
addr16
test
lret
call
loope
jmp
adcl
inc
or
push
inc
dec
fldlg2
push
dec
inc
fs
cs
pusha
cmp
jge
nop
push
in
nop
je
mov
outsb
inc
inc
mov
inc
dec
fisttpl
jns
out
inc
or
push
sub
sbb
mov
popf
out
add
sbb
sbb
jmp
repz
je
or
mov
dec
inc
aaa
xor
mov
inc
daa
pop
nop
add
stos
imul
inc
mov
inc
outsb
inc
jb
push
inc
out
mov
or
push
mov
out
sahf
mov
sbb
mov
inc
cmp
inc
cld
or
push
adc
sbb
outsb
inc
inc
int3
add
fwait
shlb
pop
adc
pop
push
andb
nop
adcb
adc
dec
jmp
dec
mov
add
enter
cltd
adc
dec
cmpb
pop
jmp
cmp
je
lret
xchg
mov
add
sub
or
lahf
ret
frstor
lods
lea
test
inc
sbb
add
pop
add
scas
in
in
add
add
cmpsb
mov
emms
mov
lret
add
jno
je
xchg
add
and
add
add
xchg
sub
sbb
mov
or
xchg
or
or
cld
add
or
push
mov
sahf
or
add
or
xchg
or
jb
jb
or
xchg
cmp
push
push
push
mov
rdmsr
adc
push
movsl
adc
pop
adc
adc
cmp
mov
int
push
adc
jns
stos
add
ror
mov
adc
leave
adc
cmp
push
inc
pop
pop
jns
out
and
sbb
xchg
sbb
jns
sub
mov
jns
scas
fcompl
sbb
nop
adcl
add
rep
sub
je
push
sbb
in
lds
ja
sbb
cmpsb
pop
push
push
inc
incb
enter
pop
jne
add
add
sub
mov
fwait
cmpsb
clc
add
mov
pminub
add
cmp
xchg
jp
cld
jmp
cwtl
xchg
push
in
xchg
mov
repz
in
imul
rcl
ret
test
xor
xor
out
mov
out
sub
fmulp
dec
call
adcb
pushf
and
pmaddwd
mov
ljmp
add
push
mov
or
cs
ss
in
in
xchg
aad
in
cmp
push
repnz
mov
out
enter
xchg
out
or
push
imul
lock
fmulp
aad
dec
icebp
cmp
pop
add
repnz
mov
repz
std
mov
dec
dec
hlt
hlt
imul
fidivl
std
cmc
cmc
cmp
sbb
testb
sbb
gs
clc
in
sbb
mov
and
jns
scas
in
add
sti
in
repnz
cld
cld
cld
je
fdivrp
or
nop
shlb
mov
xor
xchg
cmp
dec
sbb
jmp
mov
fisttpll
jb
sub
mov
std
lea
std
jb
pop
jmp
sbb
jecxz
jecxz
xchg
push
repnz
xor
push
xlat
aad
and
or
stos
mov
aam
push
xor
or
out
xchg
repnz
call
push
mov
cltd
and
orb
mov
in
cltd
sub
nop
mov
rclb
or
stos
xchg
stos
or
cltd
xchg
pop
leave
or
lret
add
or
jb
inc
repz
sbb
leave
add
xchg
push
cli
stc
frstpm(287
add
xchg
stc
imul
mov
in
aad
xchg
clc
cltd
jb
andb
push
stc
sbb
xor
sti
sti
sti
xchg
scas
in
pop
or
cmp
jmp
xchg
stos
pop
sub
pop
add
test
dec
or
pop
mov
xabort
xor
stos
mov
loop
stos
xchg
stos
or
loope
pop
leave
or
clc
shl
add
dec
add
or
dec
out
xchg
fdiv
out
and
test
mov
adc
or
push
xor
ljmp
jmp
idivl
inc
mov
pop
testl
xchg
in
aad
into
mul
scas
testb
or
insl
repnz
mov
repz
notb
jns
or
mov
out
div
notb
xchg
mov
sahf
fldenv
repnz
stc
jmp
adc
xchg
leave
or
sbb
add
xchg
pop
cli
hlt
or
xlat
inc
lock
popf
out
test
push
jo
adc
stos
mov
xlat
ss
clc
sti
mov
loope
push
jnp
loope
jp
setb
pop
cvtdq2ps
cmp
lret
and
pop
pop
lcall
mov
repz
push
mov
or
xchg
repz
and
insb
repz
repz
andb
mov
xchg
or
in
mov
in
repnz
andb
xchg
cmpsb
movl
push
pop
adc
and
repnz
repnz
cmpsb
jb
sbb
and
icebp
pop
dec
adc
push
cwtl
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
xchg
in
jl
ret
sub
lret
and
push
sub
ffreep
xchg
stos
test
push
inc
insb
loope
xor
scas
inc
cmp
cmp
pop
leave
add
testl
or
mov
xor
and
in
add
movsb
xchg
dec
add
jmp
jg
mov
and
icebp
filds
int3
dec
push
nop
push
dec
imul
jns
adc
aaa
or
imul
dec
adcl
jp
sub
push
jecxz
repz
repz
mov
xlat
insb
mov
sbb
push
push
aad
in
xchg
jns
repz
or
mov
adc
mov
sbb
mov
inc
out
imul
sbb
lea
inc
cmp
and
push
adc
lret
test
mov
fnsave
imul
or
mov
adc
leave
jle
jmp
push
mov
push
fists
push
orb
push
and
and
mov
push
mov
cs
ficoms
cmp
and
lock
jecxz
sbb
sub
icebp
sahf
mov
mov
or
mov
inc
call
sub
nop
and
call
adc
ret
test
pop
jmp
sbb
pop
add
push
push
and
fsubl
call
sarb
xor
jo
adc
pop
insl
adc
cmpsb
movsb
test
jmp
and
insb
pop
movb
mov
mov
xchg
in
push
push
rcrb
popf
adc
lds
push
js
pop
fldl
inc
xor
stos
adc
push
adc
or
adc
lret
add
roll
sarl
cmp
daa
mov
dec
int
jb
sub
and
mov
add
add
shr
inc
add
xor
pop
mov
jl
ds
or
nop
add
add
or
shlb
xchg
js
data16
mov
nop
movb
and
stos
add
xor
xchg
and
adc
jo
mov
adc
nop
outsb
inc
adc
push
or
adc
adc
pop
inc
pusha
push
add
or
inc
cmp
pop
cmp
test
xor
and
in
test
imul
and
xchg
cmp
xchg
mov
mov
dec
movsl
jg
inc
sub
call
inc
pop
adc
lods
ss
or
jg
sbbb
sub
cmpsl
loop
mov
adcl
call
or
and
les
stc
push
xor
xchg
pop
mov
nop
rcl
jg
jo
or
inc
mov
cmpsb
addl
sbb
mov
sti
and
test
or
popf
mov
adc
arpl
rcll
je
in
jmp
and
lcall
adc
cli
inc
jb
push
mov
push
xorb
stc
dec
mov
push
shll
mov
rep
cmp
or
or
and
dec
ja
lds
dec
inc
aaa
inc
mov
pop
jno
pop
and
nop
and
push
xchg
mov
inc
xchg
mov
movsb
dec
mov
in
in
sbb
movsb
lret
xchg
push
xor
push
out
dec
inc
and
jb
or
and
aaa
test
inc
and
dec
inc
and
inc
call
or
and
mov
mov
fbstp
and
scas
inc
sub
and
cmp
aaa
or
test
cmpl
int
cmp
cmc
add
push
jmp
mov
pop
fs
fbld
in
mov
dec
nop
mov
xchg
sub
push
gs
adc
inc
mov
mov
xorb
rorl
push
or
mov
mov
rcl
jecxz
dec
cmpsl
jg
pop
enter
jmp
rolb
jge
pop
rcrl
mov
sbb
test
jb
mov
or
xor
popf
push
push
cmp
insb
push
sarl
cmpsb
mov
xorb
dec
pusha
xorl
arpl
dec
sbbb
inc
pop
and
in
fisubl
fistpl
stc
and
or
inc
ss
xor
inc
and
inc
jle
or
mov
test
pop
cmp
xchg
lcall
push
cmp
cmc
pop
sbb
adc
or
fcompl
or
mov
fists
pop
xchg
and
hlt
jle
push
popf
movsb
push
add
decl
push
mov
adcb
mov
mov
xor
add
dec
and
in
inc
testb
sub
or
loopne
movb
mov
jb
dec
mov
aam
aam
add
daa
shrb
mov
lds
popa
fcoms
sar
shrb
nop
jb
movsl
jno
or
push
xor
jmp
movsb
sti
shr
data16
mov
bound
add
loope
and
push
subb
xchg
stos
pop
iret
dec
cmpsl
lods
fimull
sub
pusha
push
cmp
jns
xchg
in
aaa
popa
aas
ss
je
leave
out
movsl
sub
jb
mov
or
inc
cltd
add
cwtl
mov
enter
cltd
inc
adc
dec
cltd
cmp
jp
inc
xchg
and
add
dec
scas
je
sbb
fnsave
daa
dec
mov
or
cltd
xor
arpl
rclb
sbb
jb
push
inc
dec
jp
adc
add
adc
and
mov
or
pop
fucomi
mov
inc
ret
or
jmp
lcall
xchg
scas
subl
adc
loope
xchg
mov
sbb
push
mov
loopne
or
test
xor
xor
scas
test
mov
or
stos
cmpsb
and
cmpsb
mov
hlt
repz
mov
adc
cltd
loopne
mov
mov
sbb
ja
adc
aad
hlt
jne
scas
test
sub
mov
imul
js
je
sbb
mov
nop
mov
dec
or
sub
xor
je
stos
imul
lods
jle
mov
add
cs
cmpsb
mov
inc
out
mov
or
rcl
mov
mov
cmpsb
add
loopne
adc
mov
mov
popa
sub
mov
imul
push
rcl
mov
loopne
mov
add
cli
enter
mov
rorb
rorb
adc
add
les
mov
ss
push
rcl
sbb
je
mov
mov
adc
shrb
xchg
orb
rcl
imul
es
jnp
or
mov
inc
fwait
push
xor
je
orl
xchg
lcall
xor
xor
cmp
rcl
push
addl
mov
dec
or
dec
rcl
dec
aad
cmp
call
xor
scas
jbe
test
mov
imul
fwait
jno
stos
imul
sbb
pop
movsl
pop
stos
imul
push
ds
pop
jmp
daa
rcl
push
sub
inc
lods
imul
adcl
ret
push
andl
add
sub
andb
dec
push
roll
dec
aam
popa
data16
pop
cs
into
test
and
mov
push
fidivl
in
inc
inc
inc
sbb
cmpsb
das
sbb
xchg
push
cld
sbb
mov
mov
sbb
xchg
add
adc
sub
pop
push
jmp
cmp
aam
inc
mov
aaa
push
rcl
addl
subl
dec
xor
push
add
subl
jnp
inc
sub
hlt
or
or
test
push
xor
push
add
int3
sbb
lock
xor
xor
add
mov
push
mov
or
bound
scas
xchg
cmp
lods
jbe
add
in
mov
aad
je
dec
xor
xor
fcmovb
or
andl
mov
scas
adcl
jo
xor
xor
pop
mov
dec
xor
mov
pop
xorl
inc
dec
aas
sub
insl
push
cld
add
sti
lret
mov
cmp
xchg
imul
lcall
add
cmp
xchg
and
pop
nop
test
call
in
cmpl
arpl
cmp
cmp
jge
imul
adc
inc
fstl
je
push
movsb
les
je
subl
sbbl
push
dec
testl
je
mov
push
rcl
rolb
xor
movsb
inc
in
xor
aad
andl
and
xchg
xor
cmp
and
and
push
and
and
pop
dec
dec
pop
jns
cmp
pop
lcall
fcoml
call
xchg
push
popa
jo
jmp
cli
cmp
cmp
pop
adc
xchg
sub
ds
add
daa
mov
cmp
aaa
imul
and
dec
sbb
dec
inc
jns
sub
jmp
push
das
sub
pop
mov
adc
bswap
rorb
mov
out
push
mov
pop
pop
dec
in
mov
dec
pop
ret
sub
mov
inc
push
mov
inc
or
jmp
jbe
jne
lret
ret
mov
or
pushf
aaa
pop
dec
mov
addr16
popf
test
cmc
push
or
jbe
xorl
mov
mov
addr16
mov
loope
int3
add
jl
dec
inc
xlat
orb
and
dec
xorb
dec
inc
sub
out
gs
cmp
pop
xchg
add
imul
fwait
xchg
mov
loop
les
xchg
or
sbb
or
push
mov
mov
fsubrl
out
add
sbb
lods
xor
mov
or
add
mov
cs
or
je
xchg
je
mov
xchg
xchg
je
test
jae
add
push
test
xchg
adc
test
pop
ljmp
jp
fdivs
jae
popf
push
cmc
push
cwtl
xchg
inc
cmp
push
pop
or
push
sbb
leave
ret
cmpsl
dec
ret
movsl
push
push
out
or
mov
jp
call
adc
jl
shlb
aam
in
cli
pop
cmp
push
adcb
ret
mov
mov
or
mov
test
push
and
mov
jp
es
test
sub
add
stos
add
add
or
push
andb
movsb
add
je
into
jmp
subb
nop
dec
add
notb
and
adc
jl
lcall
push
popa
dec
andb
notb
sbb
jmp
or
or
pop
call
nop
je
sbb
mov
add
jmp
and
inc
mov
or
jmp
and
cwtl
dec
push
shll
je
sub
dec
add
push
inc
leave
dec
cmp
add
mov
dec
rcrb
mov
nop
je
nop
dec
mov
add
je
add
inc
sub
push
add
dec
dec
add
xor
dec
mov
fiadds
and
lahf
xchg
test
mov
dec
xor
add
dec
dec
xor
loopne
sub
dec
cmp
dec
daa
add
add
pop
dec
jmp
lods
rol
imul
imul
dec
clc
cs
call
nop
fs
rclb
call
jne
dec
mov
or
dec
popa
bound
mov
xchg
rclb
xchg
nop
and
pavgb
and
push
adc
xor
or
int
in
pop
adc
or
or
pop
inc
or
call
sahf
dec
adc
or
cltd
test
xor
adc
cwtl
adcb
adc
pop
int
jmp
adc
adc
adc
cltd
adc
cmp
rorl
andl
das
xor
adc
cmc
cmp
push
mov
jno
andl
inc
jle
push
cmp
adc
add
mov
loop
call
lahf
jle
daa
movsb
add
incl
jl
je
xor
mov
daa
and
pusha
call
movl
mov
xchg
aam
shr
xchg
pop
mov
cmp
jp
mov
adcl
pusha
addl
pop
sub
pop
push
jns
push
cmp
loopne
imul
pop
inc
sub
repz
pop
orb
call
sub
and
arpl
rolb
in
adc
push
adc
out
dec
movsb
lods
or
or
adc
cs
xchg
movsb
inc
pop
adc
ret
cmpsb
stos
repnz
cs
mov
movsl
add
xor
cmp
pop
shlb
mov
test
add
jb
hlt
movb
ret
push
inc
call
in
sub
inc
push
push
fucomp
subb
faddl
add
mov
fnstsw
cmp
or
jne
jp
pop
inc
push
movb
int3
daa
sbb
xor
sti
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
fwait
and
inc
jmp
inc
inc
inc
rolb
pop
es
add
filds
push
add
and
mov
ret
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
xchg
jp
movsbl
and
cmp
pop
addb
mov
adc
into
call
xor
lcall
je
pop
add
ds
popa
adc
push
popf
pop
pop
inc
inc
nop
lret
das
inc
imul
add
loop
pop
enter
sbb
sbb
loop
pusha
popa
jo
mov
inc
or
insb
movsl
xorl
pop
call
push
push
hlt
sub
inc
inc
shl
push
xchg
addps
jmp
pop
mov
fisubrs
jge
sub
add
push
push
or
inc
jecxz
mov
cltd
cmp
jne
and
mov
ja
cmp
shr
xor
jne
xor
outsl
scas
adc
push
add
ret
push
sar
inc
push
adc
nop
ss
call
xor
movsb
or
sbb
push
hlt
dec
mov
insl
cmp
add
cmc
inc
mov
movsl
xor
cmp
pop
push
fwait
xchg
and
inc
scas
nop
mov
dec
aaa
sbb
and
cmpsb
inc
imul
imul
add
sbb
pop
shr
add
dec
inc
adc
je
add
popa
in
pop
inc
inc
xor
add
xchg
mov
sbb
add
sahf
incb
xchg
push
ja
and
sbb
xchg
sub
mov
adc
inc
lea
lock
jmp
dec
lock
or
lea
inc
push
add
shll
mov
push
xchg
les
mov
mov
mov
jne
addl
mov
pop
sub
jno
add
xor
cwtl
movsb
cmpl
in
pop
add
xor
or
lods
test
aas
xchg
lret
sarb
sbb
dec
cmpsl
push
push
push
add
adc
imul
ret
push
sbb
mov
mov
push
rcrb
cmpsl
xor
sbb
pop
data16
rorb
test
jno
cmp
and
mov
sbb
daa
add
inc
xorl
mov
or
push
lea
cs
fcoml
lock
in
mov
jmp
dec
push
sbb
je
in
jmp
je
lea
xor
lds
mov
sbb
sub
sbb
insl
and
sub
stos
adc
push
int3
shll
sbb
and
xor
add
es
sarl
mov
add
or
push
and
push
ja
dec
aas
je
or
jmp
in
and
pop
and
inc
mov
fisttpl
inc
sbb
add
nop
sbbb
push
imul
pop
repnz
ljmp
jne
js
stos
or
inc
popf
sahf
push
adcb
pop
cmovb
inc
add
shrb
jno
stos
pop
or
scas
or
xchg
xchg
shll
push
mov
add
rclb
sub
daa
daa
mov
jno
mov
movsb
pushf
dec
or
mov
jecxz
add
xchg
ret
add
mov
subb
mov
mov
jmp
xor
es
jns
and
add
and
mov
inc
jb
ret
or
nop
nop
inc
scas
inc
loopne
sahf
push
inc
push
xor
add
push
sbb
fsubl
movl
push
ljmp
push
xor
add
mov
xchg
insl
xor
mov
insl
xor
or
or
push
sub
inc
scas
add
mov
pop
push
add
push
into
sbb
add
cmpsb
sbb
nop
popa
icebp
mov
pushf
clc
leave
cs
movsb
jns
add
mov
fistpll
sub
jno
sbb
add
add
sbb
lea
arpl
inc
sbb
fisttpll
loope
shlb
mov
push
and
nop
xchg
push
mov
inc
loopne
pusha
pushf
pop
dec
mov
cmp
pop
push
ret
sbb
lret
inc
inc
inc
movsb
mov
pusha
and
inc
pop
and
inc
ss
or
rolb
icebp
addb
mov
pop
std
fwait
pop
xchg
add
push
cmp
loopne
in
aad
sub
rorb
jns
call
dec
stos
jne
in
add
sub
jo
test
add
jo
test
cmp
test
lods
add
sti
pusha
sub
cmp
and
addl
xor
add
insl
jb
mov
lret
call
add
popf
fadds
dec
aam
or
in
dec
call
jecxz
loope
loope
mov
dec
inc
outsb
loop
push
and
dec
or
fidivs
loopne
sub
jne
cmp
push
call
push
mov
mov
cs
and
call
add
jge
adc
adc
int
outsb
hlt
xchg
outsl
test
test
jbe
cmp
into
pop
das
add
push
adc
pop
dec
inc
fcmovnb
inc
mov
mov
xlat
inc
rolb
je
call
mov
outsl
mov
dec
adc
daa
mov
add
cltd
sbb
je
sbb
test
mov
ret
ds
or
push
add
jo
pop
add
adc
movl
push
call
shlb
mov
mov
lret
lock
pop
add
mov
sub
pop
or
xor
sub
es
xor
mov
popw
cmp
sub
dec
push
sbb
pop
xchg
mov
mov
push
mov
sbb
jmp
adc
xchg
adc
mov
push
dec
push
push
sbb
dec
push
sbb
xchg
fldenv
sbb
or
push
dec
add
add
icebp
repnz
inc
fnstcw
fsubl
addr16
inc
test
push
jbe
movl
stos
dec
pop
adc
add
sbb
stos
xchg
jnp
jmp
cmp
mov
add
sbb
stos
and
stos
inc
or
mov
aam
sbb
inc
push
scas
out
add
dec
hlt
push
add
xchg
and
fs
mov
cmp
xor
mov
sbb
and
flds
mov
test
pop
fnstcw
nop
xchg
cmpsl
fldenv
flds
and
int3
fchs
enter
stos
cmp
mov
dec
mov
mov
push
popa
roll
xchg
nop
xor
xchg
adc
mov
push
call
push
mov
pop
pop
and
add
rorl
adc
rclb
mov
ret
lods
rorb
xor
test
fldcw
and
xchg
inc
push
mov
es
xor
jmp
fnstenv
call
adc
mov
mov
push
jmp
push
vpsubusw
mov
imul
jp
jno
mov
in
idivb
adc
inc
inc
inc
ja
fldenv
rcr
hlt
dec
loop
fsts
ja
inc
inc
fldcw
inc
dec
les
fnstenv
rclb
ret
test
add
fnstenv
fsts
fstps
and
or
jmp
and
adc
mov
hlt
sbb
lcall
loopne
cs
and
xchg
fsts
or
add
push
stos
adc
inc
fnstenv
add
and
flds
or
mov
dec
call
dec
enter
call
mov
adc
outsb
mov
xchg
out
test
fstps
adc
fstps
xchg
sbb
add
push
popf
ss
es
inc
jo
push
sbb
movsb
mov
dec
sub
es
int3
lds
aam
dec
call
mov
outsb
out
out
and
adc
or
jbe
or
ficomps
inc
sub
test
and
pusha
or
sbb
push
ret
adc
daa
xchg
nop
cmp
enter
or
dec
sbb
mov
mov
dec
xchg
orb
insl
pop
mov
fs
call
sub
sbb
mov
sbb
nop
dec
mov
pop
xor
xchg
mov
xorb
pop
and
cmp
jp
sub
mov
adcb
fs
sbb
xor
push
pop
xchg
mov
mov
cwtl
cmp
shlb
aad
mov
xchg
repz
inc
mov
xor
xchg
mov
fiaddl
pop
bound
jno
mov
and
xchg
push
and
jae
dec
dec
jo
mov
mov
dec
cs
aas
cmp
push
push
outsl
jns
test
pop
repnz
pop
dec
test
enter
scas
lea
je
nop
add
hlt
subb
pushf
popl
daa
or
push
jo
cmp
shlb
dec
enter
sti
mov
xchg
cmp
test
mov
or
dec
call
or
daa
or
call
addb
and
sti
inc
mov
or
cmp
loop
mov
inc
neg
lock
cld
dec
es
mov
dec
push
sub
pop
xor
rcrb
mov
xchg
jae
mov
and
in
adc
xor
jle
enter
jnp
xor
add
add
sahf
and
add
mov
jnp
leave
xchg
push
jnp
inc
dec
test
dec
ss
jnp
sbb
sbb
dec
ss
jl
lcall
jnp
or
movsl
inc
xchg
jnp
and
dec
call
or
add
sbb
mov
mov
push
xor
mov
imul
pop
int3
sub
in
mov
mov
dec
push
cwtl
nop
add
inc
push
je
inc
in
jmp
mov
mov
or
es
push
mov
fsubrl
loopne
mov
ret
mov
shrb
les
dec
mov
cmp
jne
shlb
inc
mov
sbb
shrb
ret
push
and
popa
inc
notb
dec
xchg
test
insb
add
and
adc
push
sbb
inc
bound
call
mov
in
outsl
nop
cmp
mov
mov
cwtl
shlb
sub
mov
push
mov
mov
dec
call
adc
movzbl
int3
je
adc
inc
jo
xchg
mov
xchg
inc
test
sub
or
mov
ja
ror
mov
cmp
cmpsl
rcrb
out
fstl
pop
dec
aam
or
inc
repnz
mov
or
aas
xor
unpcklps
das
push
fistps
shlb
call
xchg
das
pop
decb
and
adc
call
xor
in
clc
lret
xor
lock
call
and
mov
in
int
inc
call
mov
xchg
mov
push
call
jl
repnz
call
fs
xchg
das
pop
mov
call
js
inc
out
call
cs
jbe
pop
inc
sbb
cmp
in
mov
nop
push
cs
dec
sbb
pop
mov
out
pop
sub
fldcw
xchg
out
dec
unpckhps
ret
in
mov
int3
frstor
shlb
xchg
mov
push
fdivrs
jae
xchg
dec
in
push
push
mov
aam
cs
dec
cmp
xor
es
in
mov
push
push
cs
add
add
mov
leave
gs
loope
adc
adc
sbb
movsl
jb
pop
sbb
and
and
sub
mov
jle
test
cmp
pop
movsl
shll
inc
xchg
outsb
nop
lret
dec
xor
push
in
mov
sbb
cs
dec
or
test
dec
add
or
and
scas
dec
call
ret
imul
mov
xchg
sar
mov
call
push
pop
je
data16
daa
int
dec
js
adc
inc
mov
sbb
xor
test
and
or
mov
cmp
mov
enter
inc
test
add
lods
mov
cli
mov
xor
daa
mov
movl
aad
dec
ja
push
sbb
jmp
add
and
shlb
add
adc
jne
xchg
push
sub
inc
daa
mov
xchg
daa
loopne
add
add
fwait
inc
pop
pop
mov
mov
push
dec
aam
mov
movsl
mov
xchg
xchg
add
or
add
mov
xorb
jge
xorb
jge
push
or
aaa
and
jl
sbb
sbb
adc
sbb
and
test
inc
into
mov
adc
dec
ss
cld
insb
shr
stos
and
pop
call
gs
pop
stos
mov
mov
sbb
xchg
das
inc
push
movsb
inc
adc
popa
fsubrp
addb
pop
adc
jp
ret
push
mov
pop
bound
push
rcl
je
push
pop
xchg
adc
xchg
orb
xchg
mov
pusha
push
mov
add
or
xlat
loopne
xorl
and
adc
jmp
push
mov
rclb
pop
push
add
dec
mov
adc
xchg
add
push
nop
fstps
push
adc
xor
or
or
xchg
je
jp
mov
add
or
movsb
xor
fs
or
xchg
dec
enter
push
ret
and
xchg
inc
fisttpll
stos
mov
jp
jne
and
jne
sub
push
out
sub
sub
jne
push
jne
call
adc
sbb
or
sarl
lret
jg
lea
mov
mov
arpl
lds
dec
push
jne
jecxz
push
in
push
push
mov
fisubs
mov
cmp
fwait
mov
cmp
shl
xor
cmp
movsl
or
cltd
xchg
or
lods
pushf
xor
and
std
pop
sub
cltd
xchg
popf
mov
push
mov
ljmp
xchg
pop
mov
mov
ret
cmpb
push
pop
inc
xorb
dec
add
pop
or
sbb
push
pop
mov
xor
sub
pop
inc
das
push
mov
xor
out
xor
mov
cmpsb
hlt
cs
add
push
xor
pop
pop
call
push
shll
pop
jns
into
ror
xchg
push
push
mov
jne
xchg
fsubs
sbbl
xor
pop
and
in
pop
test
test
add
stc
sbb
jnp
jbe
test
lcall
out
lcall
fwait
xor
fwait
shrb
pop
adc
sti
call
xor
je
dec
fwait
jno
and
fwait
lods
mov
xor
pusha
and
lea
fwait
lcall
fldl
pop
dec
js
jmp
push
adc
je
lods
cmpsl
and
test
testb
pop
push
movsb
ret
add
nop
cmpsl
xchg
add
or
ret
add
or
fistps
inc
push
mov
ficoml
shll
mov
or
fistpll
sbb
push
and
xor
pop
nop
or
push
sub
fists
pop
pusha
lods
test
or
lods
loopne
add
and
mov
add
and
mov
mov
or
mulb
movsb
mov
repz
lds
dec
mov
push
add
out
mov
scas
add
pop
add
jge
inc
addr16
test
lods
and
pop
inc
lods
mov
xor
call
inc
popf
subb
pop
scas
sbb
xor
sarb
and
dec
leave
pushf
fadds
or
test
and
xchg
shrb
fstl
lret
mov
xchg
nop
cmpsb
bound
mov
xchg
mov
ret
cmpsb
popa
pop
mov
xchg
push
inc
cmp
nop
inc
mov
adc
mov
fdecstp
jl
xchg
push
lds
in
xchg
xor
enter
mov
add
fadds
inc
bound
jb
xchg
mov
je
push
or
imul
arpl
jo
ret
stc
push
js
nop
frndint
add
sbb
enter
negb
sub
cmpsb
mov
cmp
mov
rolb
xor
das
dec
movsb
or
push
and
das
adc
jo
adc
dec
inc
and
test
and
and
adc
mov
rol
mov
and
bnd
or
sbb
fstl
or
movsb
pop
add
add
sub
movsb
adc
mov
jle
and
loopne
mov
inc
fcompl
add
add
adc
jmp
or
pop
and
inc
add
jo
dec
xor
das
xor
mov
adc
xchg
inc
cmp
ret
add
out
pop
add
and
push
jne
pop
scas
push
pop
cmpsl
add
mov
push
jnp
mov
sahf
cmp
ljmp
or
dec
push
add
in
adc
jmp
cmpsl
add
inc
dec
loop
nop
mov
test
or
fs
mov
jnp
shll
add
out
cmp
cmpsl
add
adc
stc
mov
pop
cli
push
adc
and
in
push
mov
or
mov
dec
inc
jecxz
mov
aaa
daa
sub
push
out
cmp
adc
aad
dec
fadds
mov
sbb
inc
frndint
sahf
jg
sbb
mov
and
jmp
jp
inc
sub
xchg
push
push
add
push
inc
inc
cmpsl
pop
push
rcl
mov
inc
dec
xor
sbb
push
cs
mov
mov
pop
and
out
and
mov
xor
or
daa
mov
fs
mov
out
addb
inc
push
adc
push
pop
nop
roll
adc
push
lahf
ret
mov
insb
xchg
cmp
pop
fdivl
pop
dec
adc
sahf
push
inc
aam
stos
leave
aam
addb
sahf
sbb
adc
leave
roll
xchg
insb
push
add
hlt
enter
cmp
and
aaa
jg
in
push
jmp
mov
iret
jle
mov
popa
push
popf
push
test
xor
and
push
call
pop
xchg
sub
es
mov
scas
cmpsb
in
jno
pop
fstl
dec
ja
dec
xchg
or
fs
inc
loope
js
push
pop
pop
insb
movsl
hlt
add
jb
push
je
sub
aam
push
ja
cmp
jne
fistpl
adc
sbb
lcall
mov
call
test
or
test
add
mov
jb
loope
add
adc
movsb
mov
adc
mov
repz
adc
mov
jo
repnz
xlat
fwait
push
int3
xor
add
mov
dec
rdtsc
mov
mov
lea
call
mov
movsb
cmp
les
insl
adc
inc
and
sub
push
fisttpl
shl
or
xchg
and
fistpl
ret
fcomp
lcall
adc
xlat
ret
test
icebp
cmp
mov
and
or
jmp
dec
ja
push
out
adc
adc
mov
enter
mov
cmp
and
repz
mov
push
ss
and
mov
cmp
or
cmpsb
dec
mov
jb
mov
add
jo
push
out
movsb
adc
out
cmp
inc
nop
outsb
sahf
mov
push
inc
push
loope
dec
out
and
jl
and
rolb
or
or
and
mov
fwait
sbbb
or
and
add
and
xor
out
or
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
xor
lret
idivb
xchg
push
jbe
push
scas
test
mov
insb
adc
lods
or
push
imulb
add
adc
aam
out
jne
dec
sub
inc
pop
jle
sub
mov
push
icebp
mov
gs
dec
push
je
mov
or
push
outsl
push
push
lods
add
push
add
adc
sbb
push
fcoml
daa
add
xor
add
dec
pop
jae
outsl
and
push
ret
ss
imul
addr16
bound
outsl
xor
push
shr
xor
pop
mov
iret
jl
push
dec
cmp
or
das
mov
imul
add
mov
or
sub
es
inc
jnp
sub
out
andl
mov
pcmpeqd
and
bound
shrl
and
add
add
dec
sub
or
mov
add
daa
add
out
jo
xor
das
cmp
mov
or
addr16
aas
add
lock
je
aas
test
xchg
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
dec
rorb
cwtl
xchg
jb
inc
cmpsb
or
roll
sbb
pop
dec
mov
fwait
and
pop
dec
imul
mov
sbb
pop
inc
jne
outsb
je
jg
test
pop
inc
js
jbe
les
jnp
inc
xor
outsl
filds
sub
sub
sub
inc
inc
xor
xor
xor
sub
aaa
jge
xor
xor
inc
xor
xor
ss
std
xor
fs
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
sub
mov
dec
jo
add
sets
test
fnstcw
mov
cld
shll
push
fidivrs
cmp
pop
adc
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
jl,pn
rolb
arpl
push
jne
popa
xor
dec
and
cmp
ss
pushf
xor
add
lds
add
outsl
mov
dec
rcll
cmpsb
loopne
test
xchg
fsubr
scas
data16
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
cmp
repz
sub
out
cmp
aaa
mov
in
in
mov
lods
sahf
add
movd
hlt
sub
cmp
cmp
xor
inc
push
and
jg,pn
lret
cs
insb
outsl
xor
les
test
fwait
mov
je
push
push
cwtl
mov
sub
push
inc
cmp
push
xchg
sbb
fmull
pop
mov
fwait
add
mov
rcll
fldt
inc
cs
subl
idiv
inc
arpl
insb
mov
push
ss
ficoms
ret
lret
rcll
xchg
fld
cmp
and
xor
test
arpl
add
insb
popf
pusha
mov
inc
cltd
cmpsl
addl
lods
adc
jp
xchg
inc
and
stos
inc
jne
mov
out
push
and
lock
lret
jnp
pop
sub
mov
push
imul
bound
sub
daa
scas
scas
je
dec
fs
lods
popf
push
imul
push
jo
mov
adc
insl
sbb
movsl
cmpsb
add
xchg
dec
popa
movsb
jmp
pmovmskb
fwait
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
ja
fs
cmpsb
shlb
dec
fsubl
push
popa
imul
add
or
fcomps
fdivl
xor
call
mov
test
mov
xchg
adcb
nop
rclb
repnz
pop
inc
push
xorb
aas
sub
dec
aaa
xor
aaa
sbb
jbe
sbb
push
or
mov
inc
addr16
movb
xchg
pop
pop
xor
xchg
xor
inc
dec
xcrypt-cbc
cmpsl
push
cmp
fadds
repz
xor
orb
or
add
mov
das
push
adc
xchg
adc
push
sbb
enter
jnp
out
sbb
std
sbb
push
das
cmp
pop
nop
cld
and
dec
repz
cli
js
jns
stc
cmp
repz
jp
push
cld
fdivr
mov
cmpsl
xor
les
cmpsl
push
mov
stos
mov
les
popa
cwtl
out
mov
and
outsl
sub
mov
les
sub
mov
mov
repz
cmp
mov
xchg
or
push
andb
iret
sarl
or
cld
or
in
cmp
repz
les
jecxz
pushf
push
xchg
call
xor
mov
mov
jl
insb
push
sahf
pusha
pop
mov
cmpsl
cmp
repz
inc
inc
cmp
sahf
out
sahf
xor
sub
and
jns
out
sbb
adc
or
jl
out
add
cld
or
iret
repz
hlt
call
cmp
repz
nop
jo
xor
out
adc
pop
int3
mov
out
sahf
out
inc
sub
adc
repz
or
push
fcom
les
js
sub
jns
cmpsl
stc
aam
mov
aaa
ret
out
cld
add
call
pusha
and
repz
jl
cwtl
cbtw
cmp
pop
and
and
lods
fisttpl
or
inc
mov
stos
fsubl
dec
adc
lret
sub
adc
add
adc
fidivrs
pop
push
inc
dec
cmp
les
and
mulb
aad
xor
mov
xorb
push
jecxz
mov
mov
add
mov
inc
mov
adc
add
pop
sbb
dec
pop
shrl
mov
adc
pop
push
jmp
insb
mov
popf
adc
xor
cmp
sub
sub
shll
sub
and
mov
adc
dec
sbbl
call
shrb
mov
pushf
andb
rolb
ret
jns
mov
add
out
pusha
cmpsb
and
call
dec
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
push
or
mov
add
and
pop
jne
pop
sub
or
sbb
lods
jmp
jne
imul
xchg
fisttpl
or
pop
outsl
mov
and
pop
jb
pop
push
or
ljmp
bound
and
inc
push
push
and
outsb
jnp
insb
das
inc
push
repnz
add
cmpsl
ja
lahf
add
rorb
cmp
jns
fsub
ds
inc
sbb
addr16
mov
mov
ret
test
xchg
inc
sub
aas
mov
das
fcoms
insb
jnp
test
mov
ss
nop
mov
push
sete
int3
push
jo
mov
jbe
mov
int3
jl
adc
fdivs
jecxz
rcr
cmp
cltd
ss
lcall
pushf
setl
lret
sbb
shl
les
mov
or
push
pop
insl
in
popf
jl
in
push
mov
lahf
jg
in
ret
call
bound
lods
xor
mov
and
and
sub
vmptrst
enter
inc
dec
mov
xchg
adc
and
iret
fcmovnbe
fcomps
jbe
in
fldt
jp
insb
adc
mov
imul
imul
adc
cltd
out
sahf
loopne
daa
lock
enter
imul
mov
jo
sbb
sub
mov
push
sub
jecxz
imul
inc
sbb
sahf
or
imul
inc
xor
add
sub
lcall
scas
pop
push
and
and
inc
push
push
adc
lods
push
push
add
push
outsl
ja
xor
mov
add
andl
fisubrs
jecxz
mov
daa
movsb
and
and
add
rolb
cwtl
inc
repnz
outsb
inc
jl
pop
out
lods
mov
ljmp
or
and
arpl
add
cmpsl
fs
push
jb
mov
push
in
inc
add
insl
jo
dec
les
js
pop
outsb
push
add
mov
sbb
out
insl
mov
jae
sbb
in
push
push
jae
push
adc
jmp
push
push
pusha
push
or
call
test
addr16
out
adc
lock
cmp
push
inc
sbb
addb
add
sub
shll
add
ret
lcall
push
mov
inc
push
mov
pop
inc
dec
lods
loope
push
mov
imulb
cmp
push
jo
jb
jns
sarb
and
aad
inc
shll
add
lods
cmpsl
xor
push
sbb
lock
imulb
push
xchg
divb
aaa
adc
das
mov
or
inc
and
pusha
nop
shll
inc
and
jbe
cmpsl
and
inc
imul
jge
xchg
popa
mov
testl
mov
or
dec
inc
add
add
lods
gs
push
add
cmp
subb
mov
sub
outsb
es
pop
outsb
pop
add
push
scas
xchg
leave
push
dec
scas
xchg
adc
jmp
nop
pop
test
xor
sub
sbb
xor
sbb
xor
push
and
inc
cs
gs
push
adc
imul
and
push
xchg
loopne
ret
adc
sbb
xor
shrl
ret
inc
dec
test
pop
add
sarl
mov
outsl
mov
out
scas
inc
add
jo
stos
xchg
stc
add
pusha
and
xor
add
push
scas
mov
pop
mov
push
xor
dec
dec
pop
add
inc
jecxz
jns
xchg
fs
mov
loope
lds
fistl
gs
lret
inc
push
outsl
arpl
pop
cmp
xchg
push
fsubrs
roll
push
frstor
dec
xlat
or
cmp
mov
xchg
and
or
push
jbe
xor
rolb
insl
imul
jb
mov
cmpsb
outsl
cmpb
ds
jp
mov
inc
mov
das
enter
inc
arpl
lret
js
aaa
dec
inc
dec
pop
or
inc
pop
outsb
dec
aas
inc
cmc
lods
mov
ret
or
out
jnp
mov
outsb
push
stos
enter
jmp
jge
sub
jp
mov
imul
sub
jo
add
add
add
xor
adc
sbb
pop
mov
fs
push
movsb
jo
sub
jmp
data16
xchg
fimull
push
jo
jno
mov
pusha
repz
add
sub
add
add
xchg
ljmp
dec
imul
adc
push
xor
add
iret
pop
add
lret
add
xchg
into
out
pop
imulb
outsl
inc
cmpsl
add
push
mov
cs
dec
mov
push
mov
add
jns
insb
or
aas
mov
cmpsl
add
push
push
je
ja
clc
cmp
popa
add
xor
and
add
xor
and
lods
pop
cmp
cmp
into
cltd
or
ret
insb
sbb
add
inc
jae
das
sub
mov
xor
mov
and
fbld
scas
aaa
rclb
ficomps
mov
push
popa
subl
scas
std
fwait
xchg
and
or
and
inc
insl
loop
xlat
cwtl
aam
push
jecxz
jo
pop
lcall
add
add
sbb
push
or
repz
push
insb
push
add
push
call
punpcklbw
iret
jnp
sbbb
pop
and
out
jp
add
adc
xchg
mov
adc
sub
jo
mov
inc
or
add
daa
fiaddl
inc
cmp
push
mov
inc
xor
sti
fsubrl
sub
aad
cwtl
pop
addr16
pusha
jmp
pop
repz
mov
mov
inc
adc
inc
sub
pop
daa
inc
push
push
xor
dec
mov
add
and
lcall
cmp
repz
or
sahf
out
add
out
lock
out
enter
cmp
jns
mov
test
pop
mov
repz
xchg
nop
mov
jo
pusha
push
pop
sahf
out
sahf
push
inc
cmp
and
cmp
out
sbb
cld
in
lock
push
loopne
fdivrs
out
ror
sarb
cwtl
mov
sahf
out
sahf
cmp
sub
sbb
cmp
out
or
cld
in
hlt
in
repz
repz
int3
mov
in
mov
mov
js
push
jns
idivl
sub
and
or
mov
xor
test
mov
add
stos
push
push
cmp
mov
push
mov
fistl
lcall
add
out
imull
mov
shl
scas
push
nop
lods
in
add
daa
add
test
loopne
push
aaa
maskmovq
divl
shrl
pop
mov
add
filds
add
mov
mov
pop
jg
fs
inc
dec
pop
xor
add
cmpsl
mov
and
add
pop
mov
daa
mov
sub
scas
sub
iret
mov
mov
movb
addl
addb
int
mov
jo
pop
add
add
and
push
inc
xor
test
xchg
sbb
cmp
movsb
mov
lret
sub
jle
mov
jbe,pn
and
sub
lahf
xor
push
ljmp
xor
ds
je
mov
fadds
mov
xor
sub
imul
dec
pusha
inc
ret
shll
mov
jbe
sbb
cmp
inc
js
and
and
adc
or
and
and
jb
jne
ret
mov
push
es
popaw
insb
into
fwait
mov
dec
sub
stc
das
sti
jo
mov
ss
sbb
jmp
push
inc
mov
inc
add
inc
pop
pop
adc
mov
add
les
xor
sbb
bound
loopne
sbb
ljmp
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
ljmp
popf
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
call
xor
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
jg
std
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
mov
aad
fnstsw
cmp
cmp
cmp
cmp
sub
ret
add
push
aas
sbb
aas
or
xor
jmp
xor
push
xor
xor
js
popf
xor
xor
xor
cld
pushl
inc
xor
push
xor
xor
xor
xor
xor
xor
sbb
lcall
out
xor
xor
xor
xor
xor
xor
fidivl
lcall
mov
les
fnsave
out
xor
jg
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
clc
lods
aaa
mov
cmp
lcall
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
lcall
jl
cmpl
mov
cmp
push
adc
cmp
fnstcw
cli
cmp
cmp
pop
cmp
imul
cmp
cmp
mov
adc
das
jo,pt
test
mov
aas
adc
xor
inc
aas
adc
jmp
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
jl
mov
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
fcomip
call
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
xor
xor
mov
pushl
xor
xor
xor
push
aaa
push
sub
ss
clc
loop
call
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
mov
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
aas
adc
or
pop
push
or
cmp
lock
xchg
pop
xor
push
xor
xor
xor
das
add
xor
xor
xor
xor
ret
xor
xor
jmp
decl
lcall
clc
xor
xor
test
mov
mov
cmc
aas
clc
call
xor
lock
clc
xor
cmp
dec
mov
pop
lods
cmp
cmp
cmp
cmp
pop
jl
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
mov
add
add
push
lcall
das
mov
cmpb
ds
aas
jmp
pop
shlb
and
cmp
ss
ss
cld
lcall
xchg
cmp
cmp
mov
mov
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
pop
cld
scas
xchg
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
shll
aas
out
out
jo
and
xchg
xor
xor
xor
xor
decl
scas
xor
xor
xor
loop
xor
xor
xor
mov
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
sar
cli
add
or
aaa
and
aaa
dec
aaa
dec
aaa
ret
call
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
jg
jg
cmp
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
pop
jg
clc
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
orb
ud0
mov
nop
cmp
cmp
cmp
or
xchg
mov
cmp
cmp
cmp
cmp
cmp
bnd
incl
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
cmp
and
xor
cmp
pop
cmp
jg
mov
cltd
cmp
jp
jg
cwtl
ds
ds
ret
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jge
test
rclb
xor
lods
jg
push
push
sahf
xchg
les
fidivl
in
scas
add
or
adc
and
sub
cmp
jb
mov
ljmp
xor
xor
xor
xor
xor
mov
jl
cmpsl
loopne
add
xor
xor
scas
jno
xchg
xor
xor
xor
jg
aaa
cmpsb
pushl
xor
xor
mov
ret
aaa
xchg
aaa
scas
scas
scas
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
imul
out
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
stos
popa
adc
sbb
xor
lcall
push
or
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
ljmp
xchg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
mov
ljmp
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
out
stos
xor
push
ss
fiadds
cmp
aaa
mov
ret
aaa
jmp
repnz
or
std
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
cld
cmp
mov
and
cmp
cmp
outsl
cmp
push
aas
jne
mov
or
das
ss
mov
fwait
xor
xor
dec
or
scas
orb
sub
aas
xor
divl
pop
xor
call
lret
loop
ss
dec
ss
outsb
mov
xchg
movsb
ss
enter
in
and
cmp
cmp
push
loopne
aad
and
dec
ljmp
cmp
pop
push
imul
mov
jne
test
mov
ret
cmp
dec
cmp
sub
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
jg
mov
push
inc
cmp
cmp
mov
cmp
ds
cmpb
cmpsl
ds
ds
ret
testl
add
sbb
addr16
loope
sarb
xchg
xor
xor
incl
clc
pop
xor
xor
cmp
or
xor
xor
xor
xor
xor
push
pushl
int
in
xor
xorl
add
xor
ds
dec
add
ud0
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
clc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
push
loope
loope
and
sarb
cmp
cmp
adc
jbe
push
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
adc
aas
loop
out
out
pop
rclb
jmp
jl
sub
jne
adc
xor
jae
cmp
jne
jg
mov
xor
xor
xor
fdivr
xor
xor
sub
adc
loopne
decl
sbb
sbb
sub
sub
nop
cmp
mov
cmp
jecxz
or
cmp
cmp
cmp
cmp
ljmp
int
scas
xor
aaa
xchg
or
pop
into
cmp
inc
xor
xor
lcall
decb
lods
xor
lock
xor
mov
xor
xor
clc
jg
adc
int3
xor
cmp
sub
sub
xor
loop
fwait
sarb
inc
cmp
cmp
cmp
jg
or
xor
fidivs
cmp
add
or
cmp
stos
sbb
cmp
rolb
sub
cmp
mov
cmp
cmp
mov
je
cmc
aad
call
dec
cld
push
add
das
pop
jge
or
adc
sbb
and
and
sub
sub
incb
pop
fidivl
cmp
inc
cmp
cmp
jmp
push
lcall
push
cmp
ret
jl
cmpb
push
mov
nop
xchg
test
inc
cwtl
mov
sub
xor
inc
cs
fisttps
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
nop
aam
fdivrs
loopne
clc
jbe
push
or
xor
mov
xor
xor
xor
inc
xor
clc
ljmp
test
mov
nop
xor
xor
fsubl
cmp
mov
aaa
sbb
add
xor
pusha
xor
insb
cmpsb
and
fimuls
xor
ss
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
push
ss
ss
ss
ss
or
or
decl
lock
adc
adc
aaa
sbb
and
and
sub
sub
xor
call
pushl
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
mov
pop
mov
aaa
test
mov
nop
aaa
xchg
aaa
cwtl
adc
ja
mov
dec
mov
mov
test
jg
aaa
shlb
aaa
enter
shlb
aam
fdivs
fcompl
in
mov
aaa
hlt
xor
aaa
add
hlt
add
or
adc
adc
sbb
in
clc
mov
cmp
fdivrl
call
test
cmp
pop
sahf
jl
cwtl
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
or
je
jl
test
mov
cmp
movsb
cmp
mov
mov
mov
cmp
and
movsl
mov
lods
inc
inc
inc
xor
in
incb
push
movsl
movsb
fs
lret
lods
jl
div
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
stos
mov
mov
lret
aaa
ljmp
gs
push
aaa
mov
mov
jne
repnz
add
mov
xor
add
loope
or
lahf
out
inc
add
pop
leave
jns
cmpsl
out
add
push
mov
push
push
shr
sub
gs
push
addl
sub
add
sahf
mov
push
xchg
sub
sub
xchg
adcl
and
mov
cwtl
lcall
or
sub
add
mov
pop
adc
push
jmp
cmpsb
dec
out
test
add
mov
sub
notb
add
mov
lcall
sbb
xor
aas
outsb
nop
das
es
inc
or
jbe
fsts
gs
sub
push
movsb
add
or
push
mov
je
jmp
insl
stc
push
sbb
call
test
dec
imul
xchg
sbb
std
jge
lret
push
sub
je
jae
lods
nop
mov
xor
push
fs
cld
add
jl
or
mov
test
incl
jb
hlt
add
pop
and
add
fsts
or
xor
xchg
test
adc
and
repnz
jbe
call
fadds
pop
adc
add
dec
ja
pop
les
mov
fdivs
sub
mov
dec
sub
or
jp
mov
aam
loopne
jns
jmp
sbb
cmp
mov
ss
mov
mov
add
cmp
popa
leave
xorl
add
inc
ret
and
adc
xchg
vpsraw
ljmp
and
sbb
or
add
lds
loope
std
sahf
add
lret
sub
mov
and
call
shr
inc
cmp
jne
adc
and
std
sub
test
pop
jmp
push
cmp
call
mov
loopne
xor
sub
nop
ljmp
mov
dec
mov
mov
or
or
dec
addr16
mov
adc
mov
add
int
pop
push
add
dec
add
cmpsb
push
push
push
clc
pop
add
mov
inc
xorb
popa
lret
out
clc
dec
inc
loop
sbb
adc
xor
jbe,pn
adcl
sbb
cld
out
or
adc
test
mov
dec
cmp
mov
push
aas
lea
sbb
pop
clc
fstp
pusha
push
mov
and
pop
add
dec
test
xchg
test
xchg
inc
aam
xor
movsl
xchg
sbb
sahf
add
lods
and
or
ret
mov
and
mov
push
xchg
push
adc
fs
sbb
sarb
mov
sbb
or
sbb
lret
dec
stos
fimuls
mov
push
jecxz
mov
rol
pushl
test
add
insb
add
pop
addb
cli
aad
pop
pop
or
rorb
cmp
fcoms
inc
daa
test
mov
sub
jo
inc
fldt
into
adc
inc
fistl
adc
dec
rcr
and
mov
sbb
cmp
inc
imul
int3
cmp
add
dec
sarb
fildl
leave
inc
jo
daa
push
ret
mov
fistpl
cmp
jb
filds
jae
add
inc
dec
jp
pop
call
pop
das
adc
pop
inc
rcr
es
ret
enter
sub
icebp
movsb
mov
sub
cmp
les
sub
repnz
mov
inc
mov
adc
sub
mov
push
je
sbb
inc
fimull
push
mov
sbbb
lahf
jmp
dec
inc
dec
inc
flds
inc
mov
mov
test
mov
adc
jle
pop
stos
adc
cmp
gs
imul
inc
cmpsl
aas
xchg
loope
mov
dec
push
push
in
pop
or
push
lods
add
dec
inc
add
inc
sarb
add
scas
stos
add
aas
or
fs
outsl
pop
and
mov
call
or
and
dec
adc
mov
mov
cmp
push
add
out
mov
dec
and
aaa
adc
xchg
test
push
stc
dec
mov
sbb
inc
dec
or
imul
call
sbb
pop
cli
cld
mov
mov
and
and
jne
and
ss
pop
xor
jl
pop
lahf
adcb
mov
adc
mov
fmuls
mov
or
pop
sahf
fwait
dec
mov
jbe
mov
inc
and
out
aaa
and
and
leave
mov
pop
call
and
cwtl
cs
out
sub
fisttpll
fs
test
sbb
call
and
cmp
add
sub
or
push
fimuls
and
gs
fiaddl
mov
les
dec
mov
adc
or
and
fmuls
and
fwait
stc
sub
loope
sbb
and
pop
sbb
rorb
jg
sub
icebp
pop
xor
pop
mov
and
pop
mov
inc
fistps
adc
add
mov
mov
or
cmp
sub
jns
push
ficoml
or
sbb
sarb
and
push
subb
mov
cmp
dec
push
fnsave
mov
inc
cmpsl
fstl
es
add
add
test
insb
loopne
jmp
push
ret
int3
pop
outsb
cmp
movsb
addl
sahf
inc
pop
ja
mov
pop
cmp
or
fldl
ss
prefetcht0
mov
pop
cmp
ss
nop
shlb
fcomp
jo
rol
or
mov
fcmovb
push
sbb
xlat
pop
mov
and
sahf
int
sbb
cmp
mov
repnz
and
es
add
or
xchg
dec
jne
dec
mov
xchg
sahf
out
insb
fs
push
dec
add
gs
inc
repz
jmp
xchg
mov
enter
jne
sub
lret
and
roll
adc
xor
jns
ja
pop
nop
inc
push
fs
mov
mov
add
push
loopne
mov
jecxz
out
push
call
push
or
out
adc
mov
inc
cmp
inc
daa
gs
out
push
push
add
pop
out
push
cmp
sbb
stc
rolb
mov
loopne
cltd
push
enter
cltd
and
inc
into
mov
sub
sbb
cltd
mov
in
adc
sbb
dec
push
stc
adc
pop
sti
cs
jnp
mov
pop
or
leave
repz
stos
xor
jnp
cmpsl
ret
pop
lret
mov
add
sub
mov
lcall
add
xor
enter
es
xor
jb
daa
daa
imul
lcall
dec
push
sbb
daa
daa
daa
daa
and
nop
xor
sub
inc
enter
sub
xchg
cmpsb
sub
sub
xchg
sub
shll
sub
lret
dec
sub
sub
movsb
imul
cmp
mov
push
or
dec
cmp
aam
in
cmp
jne
push
pop
subl
push
addl
clc
dec
inc
cltd
push
xor
subl
cmp
sbb
pop
adc
lock
jp
or
push
fldcw
fs
dec
sbb
push
test
adc
rclb
nop
movd
addr16
lods
inc
xchg
jo
inc
push
test
sarb
lock
mov
or
adc
or
xchg
rcrl
add
addr16
hlt
jle
mov
sub
movhpd
addr16
adc
inc
inc
ja
mov
addr16
sub
inc
push
pop
shll
dec
test
cwtl
sub
add
and
push
sarb
xchg
test
xor
sbb
mov
adcb
inc
loopne
addr16
adc
nop
jmp
daa
adc
adc
ret
call
enter
enter
xchg
cltd
cmp
dec
mov
movsb
jp
repnz
mov
mov
dec
and
pop
mov
dec
inc
cltd
dec
mov
sbb
push
jno
cltd
inc
mov
xchg
mov
cltd
cwtl
pop
or
nop
clc
push
call
ds
mov
roll
xor
nop
fdivrs
inc
dec
outsl
pushf
shlb
push
xor
and
sbb
or
addl
pop
sbbb
xchg
push
sub
xchg
sub
les
add
sbb
or
sbbl
jmp
out
pusha
and
repnz
cltd
pop
ljmp
mov
int3
xor
sub
or
inc
mov
inc
aam
pop
xchg
pop
test
adc
jae
pop
ljmp
cmc
cmp
push
mov
mov
in
push
insb
jae
jmp
outsb
adc
inc
insb
push
jae
fs
mov
jae
inc
sbb
adc
mov
ss
and
arpl
fidivrl
out
dec
mov
mov
les
jae
mov
insb
push
mov
push
lds
pop
push
mov
cmp
mov
mov
pop
xchg
sbb
into
stos
mov
sbb
jno
rcrb
jo
sub
adc
and
ja
push
jne
jno
jbe
inc
insb
push
jno
in
fimuls
lods
bound
push
mov
mov
lret
add
bound
leave
inc
pop
outsb
push
mov
jno
cmp
sub
add
inc
call
test
fsubrl
push
jne
test
mov
cwtl
test
adc
inc
push
pop
or
inc
lds
jno
or
orl
sbb
jno
mov
push
cmpsl
cmp
push
xchg
nop
sub
inc
jno
xchg
pop
daa
or
adc
popf
mov
or
pop
push
inc
cmp
adc
icebp
mov
pop
mov
movsb
add
adc
fcoms
or
jg
push
inc
pop
test
cs
icebp
adc
push
hlt
and
mov
and
or
pop
add
mov
inc
mov
or
pop
and
jmp
push
push
or
les
loop
and
mov
add
das
pop
and
xor
add
pop
shl
push
ds
dec
ja
pop
mov
pop
and
sub
not
mov
ja
sub
hlt
inc
xor
movsl
hlt
pop
sbb
imul
xchg
sbb
sbb
push
sbb
sbb
pop
inc
dec
dec
rcrl
sbb
cmp
in
movsb
pop
mov
push
and
call
movsb
mov
mov
je
outsl
adc
fdivs
lds
cmp
stos
loop
xchg
rolb
cmp
inc
pop
call
dec
or
xorl
pushf
cmovbe
outsl
mov
int3
jo
nop
rorb
movsl
addb
in
cmp
cmp
push
roll
dec
into
orl
lahf
test
ss
and
jae
addr16
call
lock
lods
jl
xor
push
or
pop
fistpl
add
filds
push
jmp
pop
push
xorb
stos
mov
imul
and
add
cwtl
mov
push
dec
mov
or
cmpsl
cmpsb
int3
cmpsb
pop
je
pop
fstpl
cmpsb
dec
push
dec
ffree
loop
sub
jns
dec
push
int3
fdivl
mov
cmpsb
jle
mov
call
cmpsb
pop
inc
das
pop
push
xchg
or
ss
int3
in
cmp
pop
inc
fdivl
fdivl
mov
xchg
mov
pop
lods
lret
call
sbb
pop
jecxz
popa
rorl
push
inc
sbb
inc
or
mov
adc
and
mov
dec
push
mov
dec
lock
inc
fmull
lret
adc
pop
test
push
int3
dec
faddl
sarb
les
pop
sbb
or
add
or
bound
leave
repnz
loopne
je
or
fs
or
clc
pushf
or
push
adc
loopne
movb
loopne
sub
sbb
loopne
add
xor
inc
nop
scas
addr16
in
and
sub
rclb
add
sub
rolb
in
xchg
lcall
sub
cmp
andl
add
cltd
loopne
push
and
sub
adc
mov
les
mov
iret
push
push
mov
inc
mov
fcoml
push
adc
and
lea
mov
loopne
stc
xchg
xor
cltd
xchg
sbb
push
cld
push
push
inc
mov
mov
and
cmp
adc
popf
cmp
xchg
sets
dec
leave
sub
mov
dec
outsl
and
ljmp
mov
fdivr
or
and
popa
adc
repz
sub
fldenv
sub
out
or
ds
inc
sbb
xchg
add
nop
iret
dec
push
sub
fcompl
inc
inc
lea
inc
cmpsl
rolb
dec
add
sbb
mov
adc
sub
scas
outsl
adc
inc
adc
jns
jp
call
xor
ret
xor
mov
pop
cmp
dec
pop
jge
mov
in
cmc
stos
fcomi
sti
imul
ret
call
aaa
adc
ret
gs
cmpsl
pop
hlt
je
add
sub
pop
push
sbb
subl
sbb
mov
jns
or
add
mov
sbb
sbb
inc
push
mov
inc
or
icebp
inc
mov
or
fld
mov
cmpb
dec
push
sub
pop
jl
mov
cmp
inc
jno
add
mov
in
or
sbb
sti
pop
pushf
xchg
pop
lret
adc
or
push
inc
add
xchg
mov
arpl
mov
outsl
adc
movl
mov
xchg
mov
or
test
xchg
filds
inc
sbb
out
aam
mov
jne
filds
jno
sbb
jecxz
xchg
sub
xchg
inc
xchg
push
fsubs
add
xor
jne
es
jae
mov
mov
pop
adc
adcl
adc
imul
daa
mov
imul
mov
fdivl
mov
test
pop
xchg
sbb
shrl
ljmp
test
cmp
into
xchg
lret
add
aam
cmp
inc
cmp
mov
rcll
sub
sbb
shrl
xchg
sbb
cmp
sbb
cmc
rorb
mov
xchg
add
push
es
add
inc
push
push
rclb
pop
rcrb
adc
pop
add
sbb
dec
mov
xchg
inc
mov
xchg
xchg
jg
je
push
push
inc
jge
xchg
movsl
xchg
inc
and
mov
imul
add
fs
mov
push
ljmp
pusha
xchg
mov
fwait
es
aaa
ret
mov
pusha
inc
xchg
movsl
xchg
add
dec
shrd
int3
dec
jmp
call
xchg
mov
shlb
sub
and
icebp
add
pusha
bound
cltd
sub
lret
xor
sbb
inc
in
jnp
in
dec
add
or
sbb
push
cmpsb
test
fcoml
cmpsl
cmp
pop
adc
mov
in
ds
dec
adc
adc
mov
loope
clc
pop
jmp
add
mov
ljmp
adc
push
xorb
jb
mov
adc
pop
mov
fmulp
pop
insb
push
fprem1
shrb
pushf
loopne
mov
ss
pop
dec
mov
pop
pop
dec
inc
addl
mov
cmp
inc
fst
fdivs
inc
aas
inc
pushf
mov
push
inc
insb
push
and
sbb
inc
mov
adc
dec
sahf
in
mov
loopne
jne
adc
cmp
xor
inc
xchg
call
mulb
and
fstpt
push
cmpb
and
add
xbegin
outsb
fnsetpm(287
cmp
inc
pop
gs
push
ja
mov
inc
cmpsb
dec
fistl
cli
xorb
jns
ret
pop
and
inc
fldcw
inc
fisttpl
adc
and
fistl
xchg
orb
pop
dec
or
pop
or
je
loopne
mov
inc
fisttpl
fisttpl
or
sub
pop
sbbb
fidivrl
push
or
fldt
fcmovnu
mov
ficompl
mov
scas
jecxz
jns
adc
cmp
rcrl
fildl
fldt
call
adc
jecxz
mov
pusha
push
sub
shlb
jno
fnsave
push
out
cmpsb
fimuls
add
and
xchg
add
adc
arpl
push
jo
xor
fnstsw
mov
add
adc
inc
sub
in
iret
leave
xchg
jno
inc
sar
lock
je
mov
repnz
xchg
inc
les
shrb
sub
dec
pop
repnz
mov
adc
cld
mov
hlt
mov
fdivrl
aam
int3
mov
pop
pop
push
repnz
test
mov
xchg
mov
jns
pop
pop
pop
pop
jno
imul
push
mov
cmp
xor
sbb
and
or
mov
in
mov
pop
cmp
inc
lret
mov
sbbl
stos
mov
push
jb
mov
and
cmp
jo
gs
sbb
dec
mov
enter
cs
in
pop
cmp
mov
in
mov
cmp
dec
push
lret
mov
sbb
and
cmpsl
mov
push
jb
addl
pop
cmp
inc
gs
sbbl
inc
mov
push
jb
mov
and
cmp
or
sbbl
mov
or
test
lcall
and
inc
dec
mov
xor
or
and
inc
pop
mov
or
inc
lcall
xor
cmp
dec
push
sbb
or
repnz
sbb
cli
mov
xchg
and
and
sbb
imul
data16
cmp
inc
inc
inc
dec
lcall
imul
jl
dec
dec
movsl
adc
cmp
mov
dec
ret
lock
inc
and
add
dec
push
test
rolb
sub
add
xor
inc
and
ret
inc
loopne
int3
mov
pop
test
insb
inc
push
stc
push
repnz
mov
stc
jb
dec
mov
push
test
mov
rsm
mov
ret
inc
enter
inc
inc
pop
mov
call
and
dec
leave
inc
mov
icebp
or
or
scas
test
or
sub
sub
nop
addr16
push
rolb
mov
decl
and
imul
add
push
mov
pusha
cwtl
xchg
leave
inc
inc
sub
fs
mov
push
add
push
sub
cmp
dec
outsl
mov
js
jp
inc
push
movsl
gs
hlt
pop
outsb
dec
pop
outsl
shrl
mov
outsl
movsl
sub
or
push
adc
mov
jmp
sub
outsl
jl
stos
xchg
movsl
outsl
mov
jbe
sub
jecxz
sub
dec
push
outsl
je
sub
pop
sarl
dec
aaa
xchg
mov
push
sbb
sub
dec
gs
pop
movsl
outsl
add
sub
sub
shlb
imul
gs
sub
push
sub
mov
outsl
addr16
mov
outsl
xchg
outsb
shrl
shlb
rclb
inc
movl
cmp
jmp
enter
call
pop
xor
xchg
imul
sub
cmp
aam
gs
scas
imul
mov
and
sbb
imul
lcall
imul
sub
int3
inc
sbb
test
sub
sub
imul
in
mov
gs
sub
pop
imul
mov
sbb
jbe
ljmp
push
les
pushf
mov
lcall
mov
pushf
imul
call
jmp
imul
js
cld
fsubr
inc
pop
adc
enter
mov
cmp
push
call
sti
sub
or
out
ret
cmpsl
sub
call
lret
imul
and
ja
mov
xchg
imul
imul
notl
mov
lods
pop
sbb
dec
imul
cmp
test
lret
mov
imul
sbb
dec
pop
imul
call
cmp
push
imul
and
loopne
imul
pop
mov
movsl
aad
pop
shrl
imul
xor
pushf
imul
mov
jmp
lret
in
fadd
insl
stos
mov
rcl
sub
shrb
popf
mov
js
je
jne
sarb
imul
jnp
sbb
rcrb
mov
mov
inc
outsl
sub
notl
imul
sub
loopne
cmp
repnz
lock
sbb
push
sbb
test
dec
push
cmpsl
imul
das
sbb
sbb
xchg
add
or
cmpsb
xor
or
sbb
shrb
imul
imul
cmpsl
sub
mov
aad
or
mov
js
jns
pop
jb
imul
sbb
pushf
mov
adc
cmpsl
sub
add
fs
sub
popa
sub
imul
or
mov
xchg
sbb
jmp
inc
dec
out
cmp
lock
xor
dec
dec
pop
cmp
mov
call
push
dec
imul
imul
movsl
imul
imul
lret
loop
popf
sahf
call
dec
rcrb
cmpsl
sub
jne
loopne
and
mov
or
js
test
pop
imul
ret
lret
xor
xchg
push
push
dec
scas
ret
jno
mov
repnz
or
mov
sub
test
fs
pop
add
movsl
jmp
imul
imul
ja
push
imul
xlat
mov
ret
movsl
add
mov
dec
xchg
call
xchg
jbe
push
imul
stc
pop
ja
sub
xlat
inc
adc
sub
dec
test
aaa
loope
mov
cmp
pop
shlb
and
jmp
or
xchg
out
mov
pop
xor
pop
das
cmpsb
mov
and
push
cltd
jmp
and
mov
cmp
nop
mov
test
sub
jmp
pop
and
mov
clc
mov
lods
in
xor
jl
xchg
mov
push
push
aad
dec
ja
cmpsl
mov
push
cmpsb
inc
pop
push
and
loope
mov
xchg
add
mov
popf
dec
push
or
push
out
xchg
inc
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
enter
js
mov
dec
jnp
jo
loopne
push
testb
out
lcall
xor
out
mov
faddl
sbb
cmp
repz
inc
push
pop
iret
repz
outsb
adcb
idivl
lock
or
push
ds
repz
dec
pop
jb
mov
int3
out
push
stos
jns
out
adc
cmp
jns
out
jbe
test
jns
jge
into
call
sbb
out
sahf
out
ds
pop
insb
xor
rcrb
add
jo
imul
cmp
xor
push
lea
roll
scas
mov
mov
push
push
mov
cmp
out
dec
sbb
mov
mov
jl
add
push
clc
mov
adc
dec
mov
mov
add
lcall
clc
mov
cmp
or
add
test
adc
adc
iret
repz
push
adc
xchg
sbb
sbb
sahf
out
lcall
sahf
imul
repz
out
sahf
pop
mov
and
and
jns
out
cmpb
sbb
repz
jp
cmp
inc
adc
out
call
inc
dec
inc
pop
inc
fs
xchg
mov
outsl
mov
fs
int3
and
movsb
test
mov
push
add
repz
repz
cmp
adc
out
lcall
fstpl
ror
enter
sahf
out
mov
out
sahf
out
pushf
cwtl
xchg
nop
sahf
out
sahf
mov
jns
out
je
insb
push
out
pop
pop
push
push
sahf
out
sahf
dec
dec
inc
inc
cmp
jns
out
xor
sub
adc
xor
out
add
nop
fmul
iret
repz
test
push
out
ds
pusha
jns
out
push
dec
inc
xor
repz
out
cld
mov
shlb
mov
or
ret
out
sahf
int3
test
push
xor
jg
out
mov
push
lock
mov
test
adc
and
test
push
inc
and
stos
xchg
inc
dec
dec
adc
rolb
add
push
aaa
xor
push
push
add
sbb
ret
into
and
xor
mov
mov
adc
inc
sub
or
pop
jbe
lea
ja
add
xchg
mov
pop
das
sbb
daa
add
in
sub
and
aas
mov
add
inc
mov
daa
outsb
jnp
push
out
xlat
push
mov
inc
fsubrs
add
test
pop
mov
add
push
pop
cmpb
inc
pop
popf
data16
shll
jbe
adc
cmpsl
pushf
push
cmpsb
mov
push
in
jnp
xchg
aas
andb
shrl
mov
les
inc
pop
rorl
aaa
leave
and
and
mov
scas
inc
fisttps
sarb
inc
lahf
fcomps
dec
jle
jb
popf
push
sti
push
sbb
adc
push
push
adcb
in
cmpsl
fsubl
push
clc
push
dec
mov
pop
xchg
daa
lea
lods
cs
and
mov
movnti
imul
mov
imul
sbb
mov
and
dec
lods
clc
xchg
pop
ret
insb
pop
xor
cmp
inc
mov
loopne
stos
outsb
cs
outsb
lahf
jae
cmp
ds
outsl
gs
sub
dec
add
movsl
pop
mov
or
je
rolb
xchg
fsubl
sub
jbe
xorb
movb
scas
inc
mov
outsl
jne
jecxz
fbstp
imul
push
outsl
and
lret
push
jb
xor
les
and
and
movsl
xlat
xor
mov
lea
outsl
aas
adc
xor
fwait
mov
xor
cmpsl
stos
out
sub
xor
fwait
loopne
or
sub
mov
push
pop
sub
sbb
push
imul
xchg
cmp
or
sbb
imul
sbb
sbb
xchg
mov
sbb
mov
sub
pop
daa
xor
mov
loopne
arpl
imul
lods
cmp
mov
sbb
bound
movsb
imul
add
mov
stos
mov
xorl
push
es
leave
mov
add
ja
add
push
jno
outsl
mov
sbb
rorl
pop
add
or
xchg
jle
sahf
out
push
pushf
cwtl
xchg
nop
mov
jns
out
jl
push
mov
inc
cmp
repz
repz
sub
and
repz
and
adc
iret
jnp
fwait
xchg
hlt
xchg
in
push
in
cmp
repz
mov
cmp
repz
mov
ficoms
push
fs
push
repz
cmp
and
cmp
cmp
add
in
xchg
push
enter
cmp
repz
mov
cmp
pop
jo
pop
mov
cmp
push
adc
sahf
out
add
xchg
loopne
mov
mov
xchg
insb
pop
mov
and
outsl
xchg
add
add
pop
je
leave
or
mov
jo
push
cwtl
inc
xor
adc
test
push
adc
mov
add
ja
sub
mov
pushf
push
pop
cs
clc
mov
ds
pop
jg
pop
and
mov
pop
jbe
in
add
lcall
xchg
cs
pop
xchg
mov
inc
aas
test
popa
popa
filds
xchg
add
incl
rolb
xchg
inc
xchg
rol
popf
pusha
je
jge
fnstenv
sti
pop
insl
mov
fidivl
fbstp
lret
push
cmpsb
dec
cmp
xor
adc
pop
ss
nop
ss
sub
ss
push
fwait
clc
ljmp
clc
mov
aaa
lcall
aas
cmp
fstpt
push
cmp
xchg
popa
push
ret
stos
fwait
es
inc
xor
fidivrs
and
loop
dec
test
inc
jnp
cmpl
cmp
adc
xor
cmp
cmp
ds
or
mov
ds
ds
faddl
ljmp
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
pushl
vandnps
jbe
jnp
cmpl
movsb
aas
mov
sarl
imulb
or
testl
xor
cmp
jl
xchg
cmpsb
mov
xor
lods
adcb
sub
xor
add
aas
pusha
push
inc
xor
mov
mov
xor
xor
into
das
xor
cmp
xor
stos
xchg
mov
add
xor
inc
rorb
dec
xor
xor
jg
outsb
cmp
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
icebp
xor
xchg
ss
mov
ss
sbb
sbb
xchg
mov
clc
testb
loop
cmp
cmp
add
pop
cmp
ljmp
rcrb
or
cmp
xor
xor
cmp
fwait
fs
cmp
cmp
mov
push
pop
cmp
outsl
cmp
roll
cmp
sbb
cli
outsb
cmp
cld
fnsave
push
idivb
cmp
cmp
push
xor
pusha
dec
push
outsb
ja
add
cmp
cmp
cmp
cmp
iret
cmp
and
jmp
cld
cmp
push
ds
ds
lock
rcll
aas
cwtl
xchg
xor
xor
xor
xor
xor
jmp
sbb
push
xor
xor
xor
xor
xor
fbld
dec
xor
inc
lds
xor
xor
outsb
xor
pushl
repnz
dec
ss
bound
xorl
ss
sarb
fnsave
jecxz
icebp
icebp
push
clc
ss
ss
aaa
or
push
pop
add
out
push
xor
aaa
stos
mov
sub
adc
push
mov
dec
cmp
sbb
ja
clc
pop
cmpsb
test
mov
mov
fcoms
cmp
mov
cmp
cmp
cmp
cmp
mov
cmp
cmp
pop
push
xor
and
cmp
xchg
mov
xchg
jno
mov
cmp
jg
adcb
cmpb
xchg
cmp
cmp
cmp
cmp
aaa
mov
cmp
cmp
push
push
fs
ret
cltd
xor
insl
dec
xor
adc
aas
outsb
inc
cmpl
aas
ret
aas
iret
jecxz
xor
adc
lcall
inc
jbe
cld
decl
jg
lea
xchg
xor
xor
xor
xor
xor
xor
jo
sbb
jg
in
pop
xor
xor
push
jae
mov
or
cmp
insb
and
xor
jg
xor
or
adc
push
ss
ss
ss
xor
ljmp
out
ss
xor
xor
outsb
adc
jne
jle
or
sbb
jl
mov
in
cmp
cmp
sbb
cmp
cmp
cmp
aaa
pop
ret
or
cmp
cmp
cmp
dec
pop
mov
outsb
ret
fnstsw
fisttps
push
lea
scas
in
inc
out
faddl
or
cmp
aas
fistpl
scas
dec
adc
push
insl
adc
fistps
divb
data16
mov
aaa
mov
fbstp
jmp
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
or
call
xor
ja
mov
pushf
ss
mov
mov
adcb
into
and
push
sarl
jb
clc
lcall
inc
cmp
push
cmp
jmp
jp
mov
jmp
std
cmp
inc
ds
imul
jnp
out
ds
aas
lods
mov
jl
sbb
mov
mov
icebp
xchg
push
cld
xor
lret
out
out
sub
adc
mov
cmp
imul
inc
cmp
dec
outsl
cmp
xor
xor
xor
xor
pop
fisubrl
xchg
imulb
or
pop
xor
xor
mov
pop
aaa
arpl
gs
mov
pop
pusha
out
xor
xor
sub
mov
repnz
mov
jae
ret
popf
xor
jle
xor
daa
mov
jb
push
mov
pushf
ret
rcrl
push
mov
dec
int3
inc
fdiv
dec
sbb
cmp
movb
nop
push
int3
xchg
pop
or
sbb
insb
xor
popa
jl
je
jl
popa
or
xchg
mov
lds
stos
mov
icebp
jno
loopne
xor
shlb
xchg
xor
xor
xor
adc
adc
sbb
sbb
or
or
xor
mov
pop
xchg
inc
xor
push
xchg
pop
xchg
xor
mov
xor
insb
out
pop
or
test
mov
mov
mov
cld
xor
sbb
addr16
mov
xchg
enter
aas
adc
cmp
xor
xchg
je
js
or
cmp
xchg
jbe
xor
jp
cmpsl
jg
jbe
push
xor
outsb
jo
push
sar
bound
sarb
cmp
sbb
cmp
mov
mov
fmull
jb
pop
daa
cwtl
out
shl
add
or
adc
sbb
sub
push
insb
mov
test
xor
xor
xor
ss
lahf
mov
and
sub
pop
xor
dec
xor
xorb
xchg
sbb
inc
shrl
sbb
pop
lcall
cld
jg
fsubrl
in
call
xor
xor
inc
add
pop
add
adc
incb
xor
aam
xor
xor
xor
xor
roll
push
xor
pop
xor
mov
std
loopne
jo
je
js
jl
andb
loopne
aas
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
shlb
or
cmp
int3
fimull
movb
mov
ret
cmpsb
mov
ret
mov
jecxz
rorl
jecxz
xlat
sbbb
cwtl
add
mov
adc
mov
mov
xchg
insl
mov
and
lcall
sar
cli
mov
sbbb
gs
cmc
cmp
adc
cmp
and
xchg
int3
pusha
test
int3
daa
jmp
sbb
pop
push
test
inc
mov
add
push
jns
es
xchg
push
popa
jo
pop
or
adc
shlb
lods
rcll
pop
mov
cmp
push
jbe
jbe
mov
stos
hlt
imul
sub
ljmp
pop
mov
cmpsb
inc
lea
sarb
cwtl
push
mov
dec
push
scas
push
rcll
jmp
stos
bnd
jnp
insb
rcl
mov
lods
leave
iret
insl
pusha
ljmp
decl
int
pop
push
rcrb
xor
sti
pop
dec
pop
sub
pop
in
nop
pushl
xchg
pop
adc
clc
adcb
jecxz
loope
dec
popa
ds
loopne
adc
movsb
cmp
pop
lock
push
lock
jnp
and
popf
dec
ret
dec
insl
call
mov
ret
scas
mov
mov
or
push
in
add
popa
add
jmp
insb
sbb
test
mov
or
xchg
shrl
outsl
fs
jns
outsb
arpl
loope
nop
sbbl
nop
shlb
loop
les
mov
data16
imul
cmp
jmp
decl
pop
push
dec
push
ficomps
sbb
pop
sbb
xor
pop
push
and
call
pushl
gs
adc
and
pop
imul
dec
pusha
push
pop
pop
cwtl
add
imul
sbb
dec
in
cmp
push
and
inc
cmp
jecxz
movsb
adc
ret
jne
decl
sbb
negb
mov
xchg
insb
jmp
and
mov
jb
add
jg
mov
mov
mov
cmp
andl
cmpsl
and
cmp
call
xchg
out
test
push
idivb
jmp
mov
out
push
inc
out
xor
sub
ffreep
inc
inc
mov
popa
test
pop
pushl
rolb
jmp
xlat
lret
shrl
jp
mov
lea
ljmp
pop
ficomps
jns
cmp
out
sahf
in
jne
stc
jg
fs
mov
ret
shl
mov
mov
or
call
jmp
pop
int3
cwtl
xlat
pop
fnstcw
xor
popf
fucomip
cltd
jne
cmc
das
mov
insb
into
push
pop
pushf
add
push
pop
jl
cltd
mov
movsl
popf
icebp
sbb
sbb
shrl
cwtl
test
ljmp
or
xor
jns
mov
lcall
pop
jg
lcall
xor
and
lcall
call
xchg
sbb
cmp
nop
inc
in
adc
cmpsb
sub
push
enter
mov
incl
dec
add
outsb
or
mov
mov
hlt
jmp
dec
push
cmc
dec
cli
add
adc
jg
repz
jnp
dec
or
cmp
add
adc
adc
inc
adc
pusha
in
cmpsb
ljmp
xor
popf
xchg
incl
dec
pop
mov
scas
push
dec
xchg
bound
mov
mov
adcl
dec
std
pushl
mov
inc
sbb
mov
sti
icebp
xlat
xchg
cwtl
inc
les
out
push
je
cld
mov
sub
or
xchg
out
xchg
or
decl
sub
subl
fucomp
out
mov
ljmp
push
adc
or
popf
insb
lods
in
push
int3
das
adc
dec
test
sub
add
push
repz
inc
cmpsb
mov
fbstp
ljmp
decb
cmp
out
adc
and
jl
aas
enter
incl
repnz
clc
cmc
insb
insb
mov
test
aad
jmp
jmp
incl
sub
es
pop
mov
and
cmpb
jg
out
xchg
aam
jge
cmpsl
mov
or
fstpt
lahf
xchg
das
fidivl
pop
xor
pushl
lea
lea
adc
xor
or
sbb
push
cmpsb
and
jno
push
rol
incl
icebp
mov
add
movsb
inc
xchg
cli
outsl
cli
jg
mov
xchg
dec
push
jae
xor
clc
in
cs
movsb
lods
xchg
insb
or
cld
psubusw
sub
cmp
shlb
pushl
shll
fisubrs
int
xchg
push
inc
inc
mov
jo
stos
pusha
inc
lock
call
test
rorb
mov
adc
jne
fcoml
clc
push
fistpll
xchg
sbb
data16
test
ss
add
mov
xor
call
mov
mov
sti
ficompl
or
xor
aad
fwait
add
int
or
ljmp
jecxz
add
inc
lea
inc
repz
icebp
adc
mov
xlat
mov
mov
jae
sbb
bnd
mov
dec
jnp
aaa
jmp
mov
push
negb
hlt
lcall
in
aam
call
push
sbb
xchg
add
mov
push
ljmp
jbe
inc
jg
aas
jnp
out
or
push
es
mov
mov
es
jg
js
mov
sub
fstl
xchg
push
out
pop
sub
adc
scas
fimuls
jb
loopne
jnp
fistps
push
inc
cld
cmp
sub
cwtl
pop
bound
inc
dec
xchg
fmuls
lods
lods
mov
decl
mov
ljmp
ret
jne
jl
ljmp
fdivrp
fdivrl
and
sti
jecxz
ret
mov
mov
push
mov
fists
mov
mov
lcall
out
fdivl
mov
add
insb
adc
icebp
xorl
mov
and
mov
push
insl
call
outsb
jbe,pt
dec
cs
lock
ja
push
fisubrs
ficoms
push
sub
cltd
cmp
lahf
repnz
ror
sahf
push
popf
popf
push
mov
rorb
mov
pushf
sub
js
jl
dec
dec
incb
cmp
scas
cmp
jmp
lret
lods
ljmp
mov
push
pop
outsl
push
push
movsl
sbb
ds
addl
sub
pop
out
xor
adc
fisubrs
imul
js
call
pop
in
or
dec
xchg
or
inc
data16
jg
inc
sbb
cmp
sahf
shlb
mov
outsl
gs
and
add
mov
cmp
clc
and
cmp
call
imul
lahf
add
popa
sahf
push
out
mov
sub
sbb
jnp
inc
leave
adc
mov
jmp
cmp
push
into
pop
xchg
xchg
call
das
aad
dec
sbb
pop
fdivr
decl
fs
lds
ret
subl
adc
add
dec
scas
xchg
repz
or
jg
lods
out
daa
jne
mov
mov
lcall
jmp
mov
mov
jp
fucom
pop
cli
lcall
hlt
pop
jmp
stos
mov
mov
fcompl
imul
inc
out
fmull
enter
xlat
stc
mov
lcall
mov
pop
inc
sub
addl
rcll
popf
in
iret
inc
ljmp
xchg
mov
adc
lahf
or
cmpsb
hlt
adc
dec
sbb
incl
cld
xor
jbe
push
and
test
jp
or
lea
mov
incl
inc
or
loope
and
pusha
lahf
sbb
fs
repz
jg
push
std
fcomip
cmc
jp
ret
inc
cltd
imul
inc
mov
jmp
xchg
add
mov
mov
jp
xlat
dec
incl
sbb
sub
push
mov
mov
mov
jno
inc
mov
cli
adcl
dec
jno
push
pusha
dec
and
or
fcompl
jbe
add
scas
push
cmp
inc
jne
lock
mov
shlb
test
cmp
xlat
call
sub
xchg
incl
xchg
mov
jnp
mov
push
cmp
out
enter
jge
sub
pop
ss
cltd
ljmp
and
mov
cwtl
lods
mov
shll
add
jmp
xlat
js
sahf
ds
mov
mov
jae
jne
imul
test
scas
cli
incl
dec
and
cmc
fstpl
mov
repz
or
cmp
das
cmp
sub
xor
lahf
int
xlat
mov
jo
xchg
adcb
ja
pop
and
and
ret
es
lcall
sbb
fbstp
inc
or
shrl
pushf
rcl
into
popa
mov
iret
sbb
aaa
std
ljmp
push
pop
into
cli
mov
jbe
xor
push
cli
stc
fldenv
imul
pop
pop
stos
inc
pushf
cld
jns
and
outsb
xor
and
cmp
add
ja
fcomip
decl
jle
cmp
int
sti
add
xchg
mov
or
js
out
insb
jl
fwait
dec
fiadds
xor
mov
lret
sub
push
shlb
mov
arpl
push
inc
or
adc
fnstsw
hlt
dec
ds
adc
adc
jp
adc
jge
mov
and
in
shll
aaa
dec
out
cli
lcall
jge
loop
xor
mov
jp
mov
movsb
jmp
int3
mov
jge
cs
popa
or
shrb
sahf
aas
ljmp
inc
pusha
dec
negb
sbb
int3
pop
sti
cmp
dec
ljmp
bound
push
inc
fnstenv
push
or
mov
dec
mov
sub
lahf
push
aaa
pushl
iret
sbb
or
jb
cmpsb
dec
adc
arpl
mov
or
cltd
push
adc
jmp
or
jmp
popf
lahf
jo
pushf
cmp
push
fiaddl
push
pop
xor
mov
pop
cmpb
decl
xchg
or
insb
fdivrl
cmp
pop
loopne
orb
insl
push
sar
std
jmp
push
push
addr16
fs
sahf
aam
call
xlat
xchg
mov
stos
lcall
test
cmp
leave
incb
ja
sti
scas
pop
jo
ffreep
in
out
cmp
pop
insb
scas
std
push
sub
addr16
call
or
inc
adc
int3
push
jl
xchg
rcrl
jp
pushl
cmpsl
das
mov
adc
test
out
call
lock
jmp
ss
cli
mov
cs
dec
mov
pop
aaa
movsl
pop
lret
addr16
push
mov
iret
adc
nop
or
jle
and
dec
xchg
clc
xchg
int
ljmp
mov
inc
into
sbb
lcall
mov
hlt
sbbl
push
jmp
in
fucomip
fidivrl
or
adc
es
andl
xchg
sti
mov
sub
pop
ficoml
sti
xchg
ret
sti
sub
xchg
stc
mov
mov
cmpsb
ss
fisttps
loopne
leave
dec
jecxz
icebp
mov
fucomp
dec
out
or
inc
sub
push
cld
das
insb
orl
je
stc
jbe
lods
sbb
insl
pop
xor
mov
jg
aas
cwtl
insl
fldt
jmp
sbb
ret
pushl
in
mov
push
ret
xor
test
test
and
adc
jg
jp
test
insb
lahf
pusha
mov
stos
shl
out
stos
dec
or
shlb
inc
movhlps
mov
xchg
int3
mov
xchg
sar
xchg
jle
mov
pop
pop
add
pop
in
inc
ljmp
pop
push
dec
call
sbb
stos
fildl
in
cli
push
out
sub
shlb
fwait
lret
cmc
jmp
leave
and
ljmp
push
fstps
out
sub
xchg
insl
pop
rorl
xor
push
and
into
jg
jle
in
ljmp
pop
inc
lahf
cmpsl
fs
sbb
sub
pop
lret
mov
cmp
dec
pushl
jne
jle
lcall
movhps
scas
adcb
fcomip
lcall
mov
push
inc
jmp
ja
sub
and
pop
fildll
insb
ffree
pop
ja
jmp
call
scas
inc
rol
and
into
xor
lret
sbb
incl
and
outsb
sub
mov
int3
loope
jno
mov
inc
mov
incl
adc
imul
and
or
lcall
stos
xlat
dec
mov
lcall
stos
add
inc
mov
dec
mov
daa
dec
add
jnp
lret
dec
jl
lock
mov
pop
mov
dec
cmp
sbbl
mov
addb
xor
adcb
sbb
mov
lea
bound
call
add
push
out
ja
test
add
orl
mov
imul
dec
shl
jmp
lock
mov
call
xchg
movsb
je
mov
mov
insl
mov
out
fisubrs
cmpsb
test
sub
hlt
cwtl
daa
stos
mov
clc
scas
aaa
test
mov
rorb
mov
out
leave
lds
pop
mov
addb
stc
xchg
js
mov
mov
jbe
fists
dec
repnz
out
lret
incl
dec
add
jmp
xchg
out
push
fidivl
aad
push
imull
cmpl
push
sub
xchg
fdivp
add
inc
jp
scas
icebp
inc
pop
ljmp
decl
add
inc
mov
xlat
cld
dec
dec
sub
and
xchg
and
decl
jp
lea
xlat
test
or
ds
xchg
call
pop
jnp
jno
jno
out
loope
es
lock
jg
xchg
adc
jae
jg
scas
mov
push
in
addr16
jo
outsb
test
daa
mov
sbb
out
and
sbb
push
sti
xor
out
das
push
xchg
push
mov
pop
das
or
push
sarl
jmp
jns
lret
mov
call
and
adc
in
div
cltd
in
push
add
ljmp
dec
cmpsb
mov
rorl
dec
idivb
lds
push
or
sbb
adc
sahf
adc
inc
es
fdivr
mov
dec
or
in
mov
das
mov
out
das
mov
arpl
in
cmpsb
leave
sbb
pop
testl
mov
sub
and
cmp
aam
mov
xor
xchg
sbb
inc
mov
jmp
mov
pop
adc
cwtl
cmp
jns
mov
out
pushl
pop
and
jb
mov
adc
jae
bound
pop
and
jbe
jmp
mov
xlat
inc
push
or
and
out
call
lahf
adc
inc
mov
mov
decl
leave
dec
in
adc
xor
cmp
sub
jne
jb
andb
adc
mov
mov
and
aaa
mov
fcos
inc
cmc
test
xlat
mov
jns
cmp
nop
in
xor
loopne,pt
or
movsb
loop
test
incl
pop
mov
xchg
dec
push
push
lods
stos
jb
and
stos
push
jmp
pop
mov
incl
insl
fsubp
mov
mov
cmp
xor
mov
inc
mov
dec
pop
jge
fwait
iret
push
push
push
aas
movsl
add
cmp
dec
dec
lcall
push
adc
or
jmp
lods
adc
dec
ljmp
mov
ljmp
popaw
ret
out
iret
adc
into
push
mov
lret
cmp
sbb
ljmp
in
jns
imulb
das
xchg
stos
push
gs
dec
push
outsb
sahf
xlat
mov
inc
subl
sti
dec
and
push
fdivl
repnz
mov
in
xchg
add
pop
fcomp
xlat
adcl
xchg
call
mov
or
nopl
mov
xchg
insb
pop
test
xchg
divl
inc
es
lcall
les
outsb
xchg
js
mov
xchg
adc
aas
sbb
dec
xchg
cmc
dec
fwait
jmp
dec
dec
push
aaa
mov
enter
jmp
add
dec
cld
hlt
sahf
enter
sahf
and
cmp
fidivl
mov
or
jns
sbb
std
je
daa
push
add
lcall
push
lcall
lahf
jns
loope
cmp
adc
sbb
pop
stos
popf
dec
mov
bound
in
test
sbb
lods
xchg
data16
adc
loop
loop
and
aad
xlat
pop
jg
mov
incl
cmpb
mov
and
xor
mov
js
adc
lcall
fimuls
mov
js
mov
pop
insl
mov
arpl
xchg
ss
cld
roll
mov
popa
lret
outsb
mov
pop
lds
jae
xchg
sub
shll
push
std
iret
xor
lods
pushf
mov
cmpsl
sub
adc
mov
dec
loopne
ljmp
sti
or
mov
push
sarl
mov
push
stc
inc
aam
push
and
leave
call
aas
xchg
xor
xor
mov
push
xchg
adc
and
pop
add
jmp
mov
add
addr16
mov
or
mov
sub
out
aaa
or
ljmp
or
cmp
xchg
mov
adc
xor
dec
mov
push
sub
aad
aad
sar
data16
mov
sub
js
fistpl
and
xchg
pop
adc
jg
gs
ljmp
inc
ljmp
test
lds
pushl
pop
pop
push
push
dec
xor
lcall
inc
dec
and
sarl
lcall
addr16
and
daa
inc
loopne
jecxz
jae
mov
sub
pushf
sbb
pushl
jae
sbb
aaa
push
fs
rcl
pop
imulb
fidivrl
pushf
jl
imul
loope
stos
jmp
pop
and
int3
lcall
movsb
or
scas
push
pushl
and
lea
cltd
nop
sbb
mov
fwait
out
jg
mov
adc
and
orl
inc
xor
jnp
add
adc
jmp
dec
leave
mov
nop
mov
decl
fcomps
adc
js
jl
shrl
incl
fdivr
sbb
mov
adc
cmpsl
xchg
pop
popa
cmp
sub
push
cmp
lcall
mov
xor
fsub
jge
mov
pop
mov
scas
jmp
or
iret
dec
mov
adc
in
imul
inc
clc
pop
cltd
push
fwait
push
xchg
sahf
cmp
and
imul
incl
and
mov
push
sbb
out
push
mov
das
or
das
cmp
adc
fsubl
jmp
add
mov
cltd
xchg
jnp
fnstenv
mov
inc
loop
pop
push
cmc
dec
call
adc
loopne
ss
es
push
jmp
ljmp
adc
and
add
shl
xor
jns
mov
jbe
enter
call
icebp
jo
xchg
pop
pop
inc
les
std
push
mov
adc
push
mov
pop
mov
mov
mov
test
jnp
dec
jp
fidivrs
popa
mov
mov
loopne
repnz
dec
jmp
into
or
subl
xchg
xchg
stos
das
cmp
xor
sbb
mov
decl
xlat
sahf
pop
mov
xchg
imul
inc
or
pop
insb
mov
ljmp
pushf
dec
addr16
rclw
mov
cmc
mov
adc
sub
jge
call
in
repnz
push
out
loope
mov
sarb
add
daa
lcall
mov
jg
mov
sahf
lahf
jmp
and
lock
push
fs
xchg
lret
jmp
push
and
fwait
lods
xchg
lahf
sbb
adc
in
xchg
sbb
add
mov
mov
inc
xchg
outsb
inc
jmp
push
fcmovne
or
push
cmp
dec
pop
lahf
js
repnz
loopne
jnp
gs
sub
movsl
insb
pushl
xor
jno
dec
rclb
mov
popf
out
push
imul
inc
pop
xchg
ja
push
add
cmp
cmp
xchg
test
fimull
sbb
push
scas
mov
inc
inc
outsb
fisttpll
push
push
mov
in
mov
xchg
jb
jl
icebp
xchg
imull
mov
mov
aaa
ds
adc
aaa
xchg
mov
pop
add
mov
mov
mov
mov
sti
out
pop
int3
icebp
or
rcl
data16
jmp
clc
rdpmc
inc
mov
sbb
shlb
fiadds
hlt
mov
sbb
cmpsl
push
clc
in
cmp
testb
stos
adcl
rol
adcl
ljmp
repz
inc
adc
dec
xor
rcll
ss
fidivrl
sub
mov
scas
aas
ss
jno
cmpsl
das
cli
decl
addb
ds
xchg
cwtl
push
fiaddl
out
pop
push
jns
nop
push
mov
cli
mov
push
pop
icebp
mov
xor
push
cmpl
ds
and
into
stos
movsl
stc
ret
fnsave
jnp
ljmp
mov
jnp
movsb
fucom
aam
fmul
in
pop
or
sub
decl
loope
sbb
mov
sub
xor
push
fstps
decl
lret
sub
pop
and
je
cli
outsl
negb
aam
fldl
inc
pop
pop
pushw
xor
rcll
outsl
aam
loope
mov
dec
roll
cmp
test
sti
dec
cmpsb
jb
out
dec
or
jns
leave
cmp
cli
stos
jmp
sbb
jle
inc
fildll
and
stos
sub
rcrl
xchg
cmp
fisubl
ret
mov
ss
fld
mov
sub
lcall
xchg
fldenv
fldcw
push
js
out
inc
or
and
out
mov
mov
loope
xchg
pop
dec
jp
cmp
dec
mov
pushl
test
adc
sbb
icebp
insl
push
jp
xchg
fwait
adc
cmpb
ljmp
mov
aad
inc
aaa
pop
xchg
push
adc
lahf
push
push
lea
das
cmpsb
or
fimull
pop
ja
mov
out
xor
cmp
jmp
jl,pn
in
mov
mov
inc
mov
push
inc
cmp
ljmp
jecxz
dec
into
mov
sbb
push
test
pushl
repnz
or
dec
repnz
jbe
or
or
dec
and
jle
jle
bnd
stc
xchg
push
shr
mov
out
ficoml
mov
sub
mov
out
push
popf
aad
push
aaa
xchg
jne
incl
mov
pop
test
out
cs
xorl
cmp
sub
or
push
mov
mov
mov
mov
out
cmpsl
inc
jle
inc
rcrb
jmp
mov
outsl
leave
nop
adc
enter
lock
and
pop
add
inc
outsl
cmpsl
pop
add
call
mov
lods
jae
inc
cmp
xchg
push
aaa
mov
mov
push
mov
push
jnp
cmp
fstpt
test
shlb
xor
mov
repz
sbb
lcall
push
xchg
cmp
in
inc
jmp
jp
xchg
in
pushl
cs
jbe
sub
mov
push
mov
in
je
sbb
rclb
pop
mov
dec
cmp
add
xchg
push
jno
mov
popa
add
mov
les
jb
and
push
pop
movsl
mov
dec
iret
mov
mov
rorb
adc
in
mov
mov
ds
ret
loop
rcll
cmp
repz
mov
call
jp
ds
lret
aam
dec
and
dec
enter
into
js
or
or
in
inc
in
cmpb
loope
jmp
repz
test
lea
jb
push
int3
in
or
int3
outsl
mov
add
call
jb
cmp
mov
or
hlt
xchg
xchg
mov
out
clc
push
adc
cmc
xchg
fs
cwtl
sahf
mov
xor
cmp
pushl
pop
pop
lret
xor
sub
add
outsb
outsb
push
inc
xor
jl
dec
subb
enter
push
into
mov
clc
sbb
xlat
pop
lds
pop
data16
lcall
adc
scas
pop
and
ljmp
ret
bound
sbb
xchg
leave
ss
inc
fnstsw
int3
das
std
call
int3
leave
mov
insb
push
popf
lods
cltd
movsl
dec
adc
std
in
fwait
push
ss
pop
loop
int
lods
decl
adc
scas
shl
mov
insb
enter
shlb
mov
hlt
iret
sbbl
lcall
cwtl
jecxz
sub
add
pop
in
xor
xchg
or
sbb
fstps
mov
ss
inc
js
mov
incl
xor
fwait
aam
mov
and
pop
icebp
cld
sbbl
sbb
pop
shrb
sbb
sahf
inc
pop
icebp
xor
lock
mov
sub
vrcpps
and
aaa
icebp
inc
ficoms
mov
mov
xchg
fisubl
inc
jle
sar
add
test
inc
ret
pop
stos
ljmp
ss
or
sub
hlt
pushf
pop
add
ret
cmp
cmp
incl
aaa
fcomip
call
xchg
add
cmp
mov
mov
fsts
pop
clc
call
cli
xchg
subb
es
cmp
adc
imull
ds
dec
jle
pop
lret
fdivs
out
aam
sbb
in
xchg
xchg
xor
lahf
testl
mov
ljmp
stc
setno
jnp
sbb
xchg
cs
outsb
lret
in
lds
xor
adc
mov
or
and
aas
jo
mov
dec
mov
clc
sub
outsl
mov
ljmp
xchg
in
ret
push
or
lds
push
aam
xchg
jge
adc
ror
mov
lods
test
icebp
call
sbb
sbb
fdivrs
sbb
dec
daa
sub
dec
cmp
not
adc
push
xor
out
cli
mov
scas
cmp
test
sbb
xchg
ja
lods
mov
mov
incl
push
lods
mov
orl
pop
mov
cli
idivl
jle
mov
popf
mov
call
sahf
cltd
cmp
pop
mov
sbb
test
mov
mov
fldl
mov
push
int
mov
add
mov
jmp
ds
sub
cmp
fnsave
xor
pop
decl
cli
ss
aaa
push
jne
addr16
test
pusha
xor
bound
mov
mov
loopne
inc
cmp
xchg
stos
repz
into
subb
or
dec
sbb
and
lcall
pushf
push
es
or
shrb
adc
sub
pop
mov
or
sub
ljmp
mov
loopne
sbb
add
ljmp
lahf
sub
xor
xor
rcl
jecxz
lcall
jl
outsl
or
inc
cmp
out
mov
xchg
xchg
inc
call
sub
test
mov
fisttpl
outsb
mov
push
sub
cs
pop
fs
xor
out
mov
out
shlb
cmp
or
fcomip
ljmp
in
or
sbb
jb
add
mov
sub
aad
cmpsb
push
cld
cmp
insb
cmp
xor
pop
dec
insl
addb
iret
sub
test
sub
mov
add
lcall
jbe
mov
les
add
test
xchg
sub
mov
out
iret
mov
pop
and
or
dec
subl
jg
mov
fwait
pop
jp
jbe
sbb
aaa
mov
mov
pop
int
jl
jl
and
inc
jecxz
pop
inc
jmp
out
outsl
mov
jbe
push
cmp
loopne
int
mov
lcall
lcall
sub
icebp
fs
orl
clc
pop
mov
jl
je
adc
adc
fldl
mov
xor
jg
pop
cmp
inc
ja
xor
xor
pop
test
ljmp
lahf
pushf
mov
jmp
stc
add
add
sbb
daa
lock
pushl
js
adc
xchg
xorb
dec
int3
loopne
ljmp
int3
mov
and
call
into
mov
push
addr16
lcall
in
cmpsl
adc
movsb
repnz
push
mov
jae
cmp
aad
cmp
movl
sti
mov
adc
mov
or
mov
push
adc
lcall
sbb
mov
jnp
cmpsl
shll
pop
mov
jg
fcmovnu
scas
shl
add
incl
pop
mov
sti
arpl
sbb
dec
inc
adc
cwtl
es
jmp
decl
mov
andl
fstp
aad
mov
ret
inc
or
lcall
outsl
add
lret
icebp
mov
and
ds
jmp
int
push
mov
les
insl
lret
pop
push
fxch
les
icebp
hlt
nop
pop
push
int3
fwait
inc
xchg
lret
imul
pushf
dec
out
lea
xor
mov
ljmp
jns
mov
gs
push
sbb
pop
push
jbe
lret
je
adcb
xor
xor
adc
lahf
and
push
repnz
mov
lods
or
fdiv
add
scas
mov
decl
inc
mov
test
inc
or
mov
out
adc
repz
rorb
sbb
sub
pop
push
inc
mov
addl
ljmp
push
push
inc
out
fadd
adc
push
lahf
jp
xchg
push
jno
push
idivb
fwait
and
cmp
mov
xor
mov
insl
jecxz
aas
jb
cmc
mov
gs
hlt
int3
jle
sbb
lcall
push
sub
jbe
add
shrl
in
ret
xor
push
pop
jmp
xchg
lods
ds
push
incl
xchg
gs
loope
dec
call
das
xchg
mov
pop
cli
add
in
lret
sub
xchg
inc
cli
outsl
mov
mov
or
jb
jecxz
mov
or
xor
popa
decl
push
cld
cmp
push
and
cmpsb
and
pop
test
mov
add
repnz
xchg
ljmp
dec
cli
repnz
incl
in
cmp
in
outsb
jge
je
fwait
sub
jg
adc
jge
adc
test
rol
out
mov
dec
push
sub
cmp
jb
jmp
ljmp
jl
jmp
or
std
pop
xor
not
fucomp
arpl
incl
sub
jp
popf
mov
or
aas
flds
movsb
mov
loop
repnz
xchg
sbb
xor
out
ror
push
shrl
mov
jg
adc
pop
repnz
aas
loop
add
out
xchg
mov
call
incl
icebp
fldt
push
or
sbb
fucomi
stos
movsl
lock
clc
jns
inc
sub
jae
xchg
es
aam
jl
bound
incl
cmp
sti
mov
pop
leavew
outsb
mov
rcr
push
add
hlt
add
jne
loope
jg
cmp
in
or
push
call
popf
mov
in
lahf
dec
jnp
rolb
cmpl
je
jg
push
jp
mov
and
push
add
mov
cmp
cltd
shl
sbb
mov
mov
in
hlt
xchg
xchg
hlt
cmp
scas
xor
cld
ljmp
jp
std
insb
lcall
cmp
cmc
out
sbb
test
lcall
jnp
xchg
sbb
or
dec
cwtl
fnstenv
aaa
mov
ror
orb
mov
bound
cli
mov
pop
loop
and
in
xor
fs
nop
mov
jne
mov
sub
outsl
jae
cs
lahf
jnp
push
or
ljmp
nop
imul
jmp
push
negl
adc
scas
test
fmuls
pop
sub
cli
out
call
cmpsb
push
ror
jb
cmp
scas
adc
mov
decl
aam
mov
push
sbb
jne
xor
xor
push
loopne
test
stc
test
out
in
jb
inc
inc
fistpll
pop
xor
jl
in
adc
into
jno
lcall
xchg
jp
cmp
pop
inc
lds
push
pusha
nop
incl
ds
and
xor
sub
ror
mov
divl
cmp
not
incl
push
ljmp
movsl
jb
xchg
cmp
stos
adc
loope
cmpsb
push
lods
movsl
xchg
adc
arpl
push
in
stos
pop
push
dec
pop
mov
xchg
enter
pop
pusha
rorb
push
inc
outsb
mov
and
mov
dec
jns
rorl
scas
add
inc
dec
in
and
in
lcall
pop
repnz
sarl
stos
add
cwtl
sbb
mov
lret
cwtl
fnsave
fwait
lock
movsl
in
mov
mov
mov
mov
popf
das
lea
fdivr
decl
mov
cmpsl
fs
aas
push
cmp
jne
notb
adc
pop
xchg
call
and
dec
lock
pusha
inc
je
stos
mov
mov
jge
shlb
movsb
out
test
cwtl
or
aam
daa
outsb
mov
mov
inc
ja
rorl
daa
lods
jg
pushl
in
je
dec
push
les
add
xor
out
popa
mov
fcomip
lcall
push
push
cmp
xor
adc
punpcklqdq
push
inc
outsb
inc
stos
sub
lcall
cli
jle
into
stos
orb
mov
and
xor
incl
and
sbb
mov
lods
ja
out
jecxz
stc
lret
int
dec
mov
cli
les
fildll
ret
xlat
ljmp
and
ljmp
ja
in
sbb
sub
cvttps2pi
push
dec
mov
sar
mov
data16
pop
cmc
pop
push
mov
rorb
sti
stos
jge
xchg
ds
push
imul
xorl
push
add
sbb
xor
ljmp
sbb
mov
sub
nop
add
inc
call
sbb
push
int
loope
loop
or
mov
and
arpl
jae
clc
mov
hlt
shrb
mov
sti
pop
cltd
adc
jecxz
adc
incl
cmp
cmpsb
jl
jmp
ret
int
outsl
aaa
lock
push
adc
cltd
jno
std
sbb
shrb
nop
lock
into
mov
decl
jp
sub
or
cmp
sti
xchg
rcrb
out
cmc
dec
out
ud0
decl
jp
rcrl
cs
fidivrs
sbb
push
ljmp
mov
insb
nop
hlt
dec
adc
dec
sbb
cmp
mov
push
mov
lahf
xor
cmp
adc
adc
or
inc
clc
inc
dec
jne
push
or
outsb
sub
mov
insl
fs
jno
data16
inc
pop
lcall
xchg
cmp
and
data16
mov
adc
xor
mov
xchg
pop
push
popa
xchg
jmp
lods
cs
lcall
mov
fwait
jo
and
ror
pushl
repz
add
fstl
int
cmp
in
les
popa
fildl
clc
dec
dec
inc
sbb
cmp
cmp
scas
mov
inc
inc
jo
mov
stc
inc
repz
pushl
fsub
lahf
lret
sub
xchg
and
mov
sbb
das
mov
stos
sarl
lds
je
outsl
clc
push
shll
sbb
cmp
adc
jmp
inc
mov
lahf
adc
outsl
sar
in
bound
xor
leave
xchg
lret
daa
mov
lea
insb
push
incl
std
out
imul
call
xchg
or
cltd
cmp
mov
add
jmp
fcomip
jmp
dec
xor
loopne
sbb
sub
xorb
mov
inc
pushl
sbb
pop
xchg
mov
push
and
loope
pop
test
push
ljmp
insl
cmp
test
roll
cmp
xor
sbb
lea
jmp
ljmp
mov
daa
mov
std
adc
sbb
xlat
addr16
incl
lds
leave
push
xchg
push
pop
cmpsl
loop
in
pop
push
in
lcall
ja
ds
cmp
repnz
push
aad
sbb
xchg
and
cli
in
mov
or
ljmp
xchg
pop
xchg
or
js
shll
mov
or
sti
sbb
aad
mov
decl
jmp
sub
and
jmp
popf
fwait
add
js
mov
jg
dec
cmc
daa
and
jae
jno
outsb
fimuls
aam
xchg
mov
or
aam
xlat
pushl
popa
out
daa
call
sbb
xchg
bound
rol
push
cmc
aaa
xchg
dec
and
jo
pushl
add
outsb
popf
pop
pop
pusha
pop
add
faddp
test
mov
mov
cmpsl
inc
outsl
loopne
insl
aaa
incl
and
mov
lods
ss
mov
mov
test
sahf
aad
rorl
gs
adc
es
ret
push
repnz
mov
xchg
push
inc
mov
dec
jg
decl
dec
clc
cli
jae
xorb
jle
sbb
mov
mov
lcall
das
out
jns
mov
dec
fnstenv
scas
pop
jle
mov
ret
je
in
jmp
jne
aas
in
mov
aaa
ljmp
mov
cli
push
inc
clc
cld
sti
jp
and
inc
adc
in
out
lock
dec
nop
stos
xchg
ss
mov
dec
lcall
mov
mov
adc
inc
daa
ja
loop
xchg
and
adc
mov
out
xlat
or
in
ljmp
push
lods
test
les
jnp
movsb
push
push
test
mov
fisttpl
mov
pop
icebp
decl
inc
push
movsl
push
add
iret
repnz
fisubrl
or
mov
fcoms
push
outsb
cmp
xchg
mov
aam
push
outsb
sbb
pop
ds
inc
cs
dec
mov
in
call
inc
mov
pop
xor
fidivrs
push
in
fdivr
sub
pop
ljmp
movsb
push
add
xor
clc
mul
jmp
fistpl
inc
push
jmp
adc
dec
hlt
sbb
in
mov
loopnew
mov
jbe
int3
ss
loopne
push
cltd
lea
xchg
pop
cld
mov
scas
mov
test
fsubrl
jo
inc
loopne
stos
cmp
mov
jg
xor
test
in
sbb
rolb
xchg
dec
andl
push
cld
mov
sbb
scas
adc
add
pop
movsl
outsl
push
clc
pop
fmull
dec
push
jg
fiadds
scas
data16
js
fidivrs
adc
data16
mov
xor
cmp
je
data16
and
inc
mov
jl
repnz
into
add
push
or
call
and
pushl
xor
enter
cs
out
push
clc
stos
push
mov
fistpl
int
js
mov
movsl
fsubs
xchg
fsubrp
cmpb
lcall
and
sbb
push
push
mov
ljmp
in
jl,pn
mov
jae
scas
ret
xchg
dec
pop
cmpsb
inc
and
aaa
push
call
sbb
mov
fadd
rol
pushf
inc
pop
push
imul
jo
jecxz
mov
push
or
sub
xchg
xor
inc
mov
sbb
ljmp
fadds
into
clc
popf
scas
sti
sbb
adc
ljmp
test
in
sub
dec
jecxz
cvtps2pi
lcall
dec
pop
idiv
decl
pop
push
xor
dec
mov
loope
fcmovu
cmp
stos
and
decl
pcmpgtd
sbbb
call
lahf
mov
xchg
cld
mov
xchg
loopne
decl
int3
cld
jecxz
jle
inc
das
dec
popf
imul
push
cld
mov
inc
or
jns
mov
out
and
dec
es
and
jns
sbb
pop
out
lods
sahf
sub
outsl
jmp
adc
outsb
lcall
mov
incl
stc
jg
sub
inc
jb
arpl
imul
lcall
ss
out
call
aaa
cmp
jl
shlb
pop
ds
mov
cld
rorb
push
jo
mov
sub
test
mov
cwtl
pop
add
jmp
aad
jne
xor
mov
sub
dec
test
jg
ds
sub
jae
mov
jg
mov
push
xlat
mov
sbb
mov
and
cld
inc
cmp
mov
sbb
sub
mov
sbb
cld
mov
sahf
out
lret
mov
call
push
das
enter
out
lock
test
xchg
jg
xchg
push
fdivrp
push
mov
cld
mov
decl
ds
jae
jge
jb
hlt
sbb
dec
sarl
cmpl
icebp
sbb
jg
incl
les
dec
cmp
push
jge
mov
lock
ficompl
sbb
shll
mov
mov
loop
xor
rorl
sbb
inc
inc
shll
sti
add
call
push
addl
arpl
xor
mov
pop
mov
jecxz
push
lcall
loope
cmp
xor
jno
in
sbb
sub
cmp
imul
pop
add
inc
or
shll
fisubl
xchg
lods
xlat
aaa
into
mov
aam
pushl
shl
push
xchg
pop
ss
add
lods
push
pop
fcomi
mov
clc
or
push
push
ljmp
call
test
adc
xchg
stc
aaa
cwtl
inc
fstpt
xor
dec
jp
pop
enter
fstpl
outsl
pop
sbb
fldz
cmp
movsb
push
mov
inc
decl
jb
cltd
mov
addr16
rcll
mov
cmp
or
push
pop
flds
lock
pushl
xchg
or
mov
mov
pop
cwtl
sahf
pop
aad
fildl
mov
das
fcmovbe
xchg
add
jge
sub
sub
mov
mov
test
gs
int3
dec
push
popl
add
mov
mov
mov
push
sbb
out
cmp
push
pop
je
sti
mov
mov
cmp
dec
mov
or
jmp
sub
out
jb
push
pushf
jge
jl
jp
ds
ljmp
mov
pop
or
pop
pusha
mov
push
jnp
dec
mov
roll
jmp
sahf
xchg
mov
inc
pop
cmc
mull
jl
aas
les
mov
jg
jl
ds
inc
aad
gs
shrb
insl
mov
js
mov
dec
lea
call
xchg
fisubrl
clc
fwait
pop
sti
bound
fs
pop
cwtl
out
sub
mov
jmp
mov
cmp
scas
inc
xorb
inc
pop
dec
jb
push
dec
cmpsl
adc
jg
das
clc
sub
jl,pt
inc
imul
sbb
sbbb
incl
shl
ror
out
mov
sub
pushl
out
out
imul
sbb
fcomip
movb
fidivl
scas
cli
call
sub
test
push
jmp
jne
xchg
sbb
jno
repnz
cld
jg
into
add
out
pushf
or
jb
lock
adc
or
or
mov
adc
fidivrl
addb
decl
cmp
and
ds
sub
add
outsl
sahf
insb
cmpsl
stc
cmp
test
cmc
pushl
outsb
cs
std
push
push
jle
rcl
aad
mov
lcall
loopne
fbstp
out
jno
shrb
adc
fwait
inc
jmp
mov
mov
jae
mov
stc
imul
outsl
aas
das
cmpsl
bound
imul
insb
xchg
incl
sbb
sub
cmpb
lock
adc
sub
repnz
dec
in
cmp
in
inc
inc
and
into
int3
movsl
rolb
lods
mov
inc
pusha
inc
bound
cmp
add
cmp
arpl
icebp
enter
movsl
push
xchg
andb
outsb
fnsave
pop
fdivr
xchg
jl
or
push
stos
aas
je
cld
decl
mov
fs
aam
mov
jecxz
or
out
out
bound
cmpsb
add
in
push
cwtl
mov
pop
icebp
mov
lds
jno
add
add
mov
out
call
lods
jb
call
aam
add
cmp
lret
gs
lea
loop
ret
ret
insb
cli
fcos
incl
adc
ljmp
ljmp
and
insb
mov
and
repnz
icebp
es
ret
jg
jmp
ds
ljmp
fstl
jne
mov
test
int
jb
cmc
xchg
fmulp
mov
add
jle
call
fildll
ret
jg
pop
int
sbb
in
sub
loopne
dec
roll
iret
in
daa
enter
adcl
push
enter
jle
xchg
aaa
push
sub
mov
jg
push
pop
aaa
sub
fimull
sbb
rcl
jl
test
in
mov
mov
flds
lcall
xor
cmpsl
or
loop
es
jmp
sti
push
data16
mov
push
pop
add
imul
ljmp
mov
fdivl
out
subl
popa
inc
repz
ljmp
inc
popf
ljmp
bound
fwait
lcall
xor
pop
arpl
decl
push
add
repnz
xlat
mov
mov
jbe,pn
adc
pop
test
dec
sarb
jmp
push
loop
sbb
sub
imul
in
sbb
jmp
mov
adc
outsl
lret
jnp
iret
popa
addr16
xor
push
sub
lea
mov
dec
nop
aad
ds
mov
popf
dec
xlat
cs
jecxz
adc
sbb
mov
enter
bound
stc
pushl
add
inc
sbb
push
inc
loope
lret
xchg
jecxz
inc
shr
lcall
scas
out
mov
pushl
in
pop
movsb
and
sub
push
cmp
sbb
enter
call
push
xor
lock
xchg
cmp
push
shlb
xor
xchg
sbb
and
bound
adc
xor
jb,pn
inc
mov
nop
pop
pop
dec
xor
dec
mov
jg
test
in
filds
shl
xchg
sti
lods
push
add
fcomip
decl
adc
pop
lods
sub
jbe
outsb
jecxz
sbb
push
les
jg
ljmp
cltd
push
pop
push
jecxz
bound
addr16
lds
ljmp
out
xchg
dec
aaa
sahf
mov
adc
adc
pop
jecxz
pop
sub
xchg
xchg
push
movsl
push
lods
or
inc
loope
mov
stc
sub
or
scas
and
ljmp
rclb
mov
or
mov
jmp
jl
sub
jb
sub
pop
mov
add
xor
adc
mov
ljmp
out
mov
push
lods
push
xlat
sahf
xchg
scas
xlat
out
mov
stos
pop
or
sbb
cs
out
psubusb
sbbl
mov
add
dec
pop
jbe
rcll
push
and
cli
fcomi
ficompl
inc
repz
or
incl
daa
xchg
sbb
and
ss
bnd
incl
pop
push
cmpsl
out
lahf
std
stos
xchg
push
xor
je
lahf
orb
addr16
sub
call
push
loope
push
sbb
mov
sub
popf
or
test
test
add
aad
or
lock
roll
cwtl
jns
xchg
out
div
add
mov
aad
push
pop
mov
out
push
cmp
adc
mov
out
mov
sbb
fnsetpm(287
stos
ljmp
addr16
jae
inc
jae
loop
cmp
les
xor
jmp
lds
fldl
stos
sub
push
mov
dec
scas
pop
jl
push
ret
loop
out
cmc
and
cmc
ljmp
xor
adc
dec
rcr
jge
add
cmp
jecxz
jp
hlt
mov
mov
sub
scas
mov
insb
add
stos
xorb
jle
jg
les
movsl
push
test
ret
sahf
adc
xchg
and
mov
xchg
inc
das
insb
pushl
push
cmc
mov
sti
out
xor
js
ljmp
push
jge
sub
push
push
pop
insl
pop
adc
cltd
jmp
xchg
imul
in
out
add
mov
shlb
int3
imul
dec
adcl
outsl
decl
sar
mov
int3
rcl
arpl
jbe
mov
jmp
lods
or
lret
fistps
pop
enter
inc
mov
movsb
push
repnz
cs
jg
call
sub
mov
or
xchg
or
out
jmp
pop
lret
or
cmp
fcmovnu
jp
das
cmp
inc
sub
sti
dec
lcall
addr16
sahf
mov
xchg
sub
pop
stc
les
push
and
cmpsl
divl
iret
jmp
popf
in
cmp
pshufw
push
js
icebp
incl
andl
or
bound
push
jnp
out
mov
mov
xor
adc
jl
pop
popw
les
sbb
xor
ljmp
or
mov
pop
pop
jns
pop
fdiv
inc
xchg
sub
loopne
into
sub
or
out
jmp
sbbl
decl
std
pushf
inc
adc
ss
je
aad
enter
sarb
jo
ljmp
cli
loopne
push
pushf
jns
dec
inc
push
inc
gs
pop
fsubrs
shlb
outsb
mov
pop
xchg
push
call
faddp
or
jg
fnsave
in
add
cmp
lods
popa
btr
std
jmp
jo
xorb
out
ja
mov
inc
xchg
adc
or
jb
call
sbb
enter
add
outsb
xor
jp
sbb
or
xchg
test
jmp
dec
dec
pop
inc
xchg
das
enter
mov
jecxz
enter
out
shll
ljmp
test
out
or
mov
icebp
pop
popf
xor
xchg
inc
or
faddl
incl
jo
xchg
xor
jno
adc
cld
push
adc
int3
rcl
sar
jg
lret
sbb
or
xor
adc
and
sbbb
pop
out
lcall
das
mov
sub
out
scas
dec
and
ficoml
stc
adc
das
incl
mov
popf
mov
inc
gs
jmp
jae
call
scas
jo
jmp
mov
cltd
stos
out
inc
jb
mov
push
xchg
cmp
call
jnp
imul
ljmp
jge
ss
movsb
das
sar
scas
jg
cmc
shrb
sahf
jp
lea
aam
gs
jmp
xorb
dec
test
xchg
mov
addr16
lea
jecxz
inc
pop
leave
pop
shl
adc
mov
ficoms
cltd
fs
inc
ror
cltd
mov
pop
inc
push
jmp
push
mov
mov
sti
or
sarl
stos
iret
es
xlat
xchg
mov
int
dec
jl
fldt
cs
call
and
shlb
adc
push
ds
call
enter
xchg
xchg
lods
in
sbb
dec
xchg
clc
roll
je
dec
addr16
mov
ljmp
push
mov
and
jns
mov
xchg
push
shrl
mov
pop
insb
dec
xor
fisttpll
mov
leave
je
lcall
movb
push
loopne
cmpsl
mov
sub
movsb
cs
mov
imul
sbb
dec
jo
cmp
sbb
stos
mov
jae
inc
sub
cmc
mov
aad
popf
cltd
fwait
add
inc
mov
and
in
push
sbb
adc
icebp
in
sbb
outsl
adc
jg
or
xchg
andb
movsl
fstpt
pop
dec
jg
std
enter
mov
push
sti
mov
push
jno
sbb
aaa
mov
loope
xchg
mov
or
inc
xlat
mov
xchg
ja
sbb
jmp
aaa
outsb
inc
add
jae
and
call
or
sbb
cmp
loope
inc
and
jg
pop
mov
hlt
jmp
ja
out
pop
pop
mov
repz
in
sub
cmp
push
outsb
decl
lock
out
pushf
shrb
dec
loopne
inc
imul
addb
incl
addr16
jmp
in
loope
lea
jb
add
add
mov
in
jl
mov
pop
mov
mov
das
add
ret
lock
pop
les
jmp
xchg
in
adc
movsl
cltd
cmp
mov
in
ss
sbb
mov
lcall
lcall
dec
inc
cmp
lea
daa
sbb
loopne
lcall
fstpt
mov
iret
sub
cvttps2pi
sub
call
jge
cmc
in
jno
sub
test
mov
jg
pop
popf
outsb
push
mov
push
out
mov
jecxz
and
xchg
or
mov
ljmp
pushl
adc
cmp
ret
aad
adc
mov
dec
xchg
xlat
mov
sbb
call
hlt
cld
mov
adc
jb
adc
sub
push
jg
xor
clc
pushl
stc
jg
repz
into
test
inc
loop
sbbl
lahf
and
xchg
add
mov
ja
loope
lcall
mov
clc
mov
jmp
cmp
test
aaa
mov
adcl
loop
mov
sbb
cwtl
pop
orb
pop
in
fwait
push
jle
lahf
mov
mov
movsb
insl
sbbl
jo
int
cmp
mov
lea
insb
movsb
sub
mov
adc
pop
sbb
ret
decl
enter
lock
dec
test
mov
fdivr
nop
mov
mov
decl
jle
data16
or
pop
es
and
cmp
ds
jmp
xor
push
mov
dec
jg
das
pop
jne
sub
popa
sub
rclb
adc
add
jmp
je
rclb
ljmp
push
push
hlt
bound
mov
lcall
out
sub
mov
insl
xor
mov
inc
ret
js
jl
dec
call
lods
test
mov
push
xor
add
cli
stc
int3
pop
cmp
sbb
dec
sub
imul
test
sub
cld
in
mov
cs
bound
sub
stos
sti
xor
fistpll
lods
mov
roll
jno
ljmp
testb
sarl
movsl
leave
jbe
pop
push
inc
inc
mov
mov
push
imul
movsl
xchg
push
push
cmpsl
dec
stos
sbb
push
push
mov
sbb
shll
add
loopne
ficoms
push
ret
jns
push
xchg
hlt
ljmp
adc
or
xlat
iret
mulb
xchg
leave
popf
popa
push
mov
cmpsb
in
xchg
sti
ljmp
push
into
in
clc
xchg
cmp
in
stos
xor
subb
decl
push
imul
je
repnz
dec
adc
rcll
sub
pop
lock
xchg
clc
insb
xor
call
rcll
test
inc
push
sbb
ret
pop
push
lods
inc
xchg
iret
in
mov
inc
mov
inc
mov
jb
mov
cs
into
mov
fs
enter
or
push
xchg
mov
clc
adc
imul
pop
sti
rsqrtps
cld
push
enter
icebp
xchg
pop
in
or
out
cli
nop
jmp
mov
scas
adc
lock
std
mov
ljmp
repnz
adc
or
arpl
bound
sbb
dec
int
cwtl
and
incl
iret
mov
enter
dec
shlb
out
rcrb
and
out
ret
mov
inc
loopne
pusha
cmp
sub
pop
daa
push
cmpl
cs
ret
in
test
scas
or
lcall
aas
push
daa
adcb
ffree
xor
mov
inc
shll
call
xchg
hlt
push
pop
paddsb
lods
cmp
in
mov
pandn
lcall
add
push
inc
fsub
jmp
pop
aam
scas
outsb
adc
sub
fwait
jge
lds
jne
fisubrs
mov
push
aam
mov
je
cmp
and
js
mov
or
insl
stos
sahf
icebp
push
call
bound
decl
stos
into
and
push
lret
js
xor
adc
cmp
sahf
jnp
test
jmp
pop
movsb
inc
dec
jno
jns
xchg
inc
lcall
mov
mov
jmp
ja
cmpl
data16
call
xchg
mov
fs
loopne
imul
jg
nop
addr16
xor
mov
lcall
shll
stc
push
sbb
add
pop
mov
aaa
std
xor
sahf
mov
dec
ljmp
jbe
int
dec
call
mov
mov
fsubs
sub
jbe
gs
stos
mov
incl
lret
aad
mov
test
adcl
js
sbb
push
aaa
sar
ljmp
aaa
pop
cmpsb
sar
lock
mov
jle
jp
or
jg
ljmp
mov
dec
rorb
cs
fnsave
mov
je
fcomip
jmp
fwait
xor
movsl
mov
and
fisubl
cld
add
hlt
inc
inc
add
adc
ret
gs
lock
jle
dec
inc
cld
cmpsl
decl
jb
leave
pop
mov
dec
or
icebp
dec
lods
and
ljmp
and
movsw
inc
imul
lods
shll
fidivrl
clc
decl
or
imul
xchg
sub
mov
mov
cmp
cld
mov
mov
imul
push
or
sub
lcall
pop
xor
mov
insl
push
dec
icebp
add
push
inc
aad
data16
fadd
lahf
sub
pushl
dec
ret
es
rolb
dec
in
in
mov
dec
nop
fnstsw
dec
fmuls
repz
xor
jl
repz
and
push
fisubrl
mov
test
add
jmp
cmc
imul
out
and
in
add
pop
or
sub
inc
dec
nop
add
pushl
jp
fstpt
rcl
adc
sub
jo
repnz
sbb
mov
fstl
decl
xchg
aad
cmpsb
lret
dec
sbb
dec
jo
outsb
aas
insl
jmp
push
xchg
jg
xor
lret
or
clc
inc
roll
jno
lods
andb
and
mov
sarb
jnp
cli
cmpb
sti
rcl
sub
es
insl
xchg
adc
sahf
shrb
out
data16
incl
jmp
aas
push
aam
jne
int3
outsl
push
mov
jno
add
aad
xchg
loopne
icebp
lret
sar
ljmp
out
xlat
fbld
inc
and
push
cwtl
jmp
or
and
repnz
call
and
mov
cld
add
sbb
nop
mov
push
xchg
shll
lods
or
xorb
ficoml
aad
dec
jo
sbb
xor
add
into
push
cmp
fwait
scas
paddd
ljmp
rcr
mov
icebp
negb
mov
ficoms
push
push
fistpll
add
jmp
fsubrl
jns
xchg
rcrl
test
adc
xor
decl
push
lods
rcrb
clc
push
dec
adc
jb
ret
std
jge
decl
add
xor
mov
test
pop
ret
or
inc
or
inc
xor
popf
mov
int3
dec
mov
or
push
sub
fistpl
std
jmp
aam
add
or
lret
mov
pop
in
xchg
stos
sub
pop
xor
inc
fdivrs
leave
fstpl
lods
mov
enter
mov
mov
xchg
adc
mulb
or
pop
aaa
mov
jne
sbb
shlb
mov
cltd
mov
pop
jg
mov
lods
inc
mov
mov
adc
jg
xor
ror
into
pop
pop
dec
jno
decl
xlat
repnz
mov
xor
stc
cmpsb
or
sub
in
lcall
mov
arpl
jmp
leave
fs
std
test
out
sbb
dec
loopne
icebp
in
push
imul
dec
data16
dec
pushf
lds
cwtl
pop
addr16
cmpsb
subl
in
ficomps
test
movsl
shll
and
cmpsb
add
gs
andb
insb
cld
jg
jo
mov
and
xor
sbb
mov
movsl
mov
sbb
cmc
pushf
lret
pop
sub
loop
push
dec
sbb
or
ljmp
rcrb
mov
dec
dec
out
inc
sbb
loop
dec
pop
dec
push
inc
pushl
cld
cmp
imul
test
mov
fs
xor
mov
call
push
push
mov
lea
pop
jbe
mov
fsubrs
sbb
rcll
dec
pop
mov
call
mov
outsb
sbb
pop
jecxz
clc
mov
or
ficoml
mov
push
ds
sub
mov
incl
lods
cltd
ljmp
xchg
ror
push
xchg
lods
or
xor
cld
pushl
pop
lods
fldl2e
jmp
int3
shrl
enter
or
lahf
leave
sbb
pushl
dec
ds
and
fstpt
adc
xchg
jl
cmp
jge
push
mov
jg
popf
sbb
dec
mov
xchg
outsl
call
jmp
jecxz
js
jo
decl
lahf
push
xchg
jno
push
bound
sti
jmp
loopne
into
push
pusha
cmp
popf
sub
test
ljmp
xchg
mov
insb
pop
lock
dec
aam
ljmp
add
adc
addr16
pushf
pushfw
xchg
xlat
test
mov
xor
cmpsb
cmp
addb
adc
fwait
in
icebp
mov
and
push
imul
jno
push
mov
jl
mov
adc
in
pop
popf
cmp
ret
das
xchg
lods
lcall
sub
sahf
jbe
cld
push
andb
call
leave
pavgb
xor
mov
push
add
push
and
pusha
popa
lods
ljmp
jbe
mov
gs
jno
je
push
inc
and
hlt
addb
xchg
ljmp
jg
mov
loop
mov
jle
imul
stos
push
add
push
loop
scas
mov
call
xor
push
rclb
lcall
sti
out
cwtl
aas
int
dec
xor
ljmp
hlt
loop
adc
sub
movsl
add
loopne
mov
jb
cld
cmp
mov
popa
test
xchg
decl
daa
pop
lahf
test
xlat
jg
jno
jo
fcompl
add
add
lds
cmc
incl
ss
std
jno
dec
cmpsl
mov
dec
stos
inc
jne
enter
jmp
and
and
bound
outsb
js
shll
sub
mov
out
imul
leave
inc
push
cs
adc
rcl
dec
imul
incl
lret
dec
mov
fsubrp
fists
xor
addl
mov
or
shlb
lret
push
or
sahf
mov
cmc
sub
pop
das
sar
cmp
insl
sub
xor
imul
repz
shll
pop
cwtl
pushl
sbb
out
and
adc
clc
mov
ljmp
mov
mov
popf
shll
push
pop
loop
cld
hlt
adc
out
mov
sbb
incl
add
inc
xchg
xor
mov
or
fdiv
jbe
jb
cmp
popf
xchg
movsl
inc
jle
cmp
insb
xchg
es
lahf
and
movsb
cmpsl
setl
out
inc
js
cmpsb
test
mov
sub
fs
jne
and
imul
test
pop
in
sbbb
imul
xchg
add
js
int3
fdivr
pop
cmc
decl
xorb
adc
and
enter
dec
or
jecxz
mov
filds
xchg
mov
adc
loop
add
sbb
popa
lret
dec
pop
xlat
adc
rcr
fisubs
pushl
mov
pop
mov
sarb
mov
pop
and
add
push
int
mov
adcb
sbb
pop
and
lods
stos
xchg
sbb
movsl
pop
sub
negb
mov
sahf
into
jnp
ret
popf
loope
jae
in
clc
add
push
dec
imul
insl
mov
xor
add
mov
mov
fisubl
sub
jp
mov
sub
push
addb
mov
fwait
push
addr16
lcall
cltd
aaa
cmpsb
daa
ret
test
mov
loopne
fcoml
aad
insl
inc
sbb
ljmp
sub
cs
out
aad
cmp
xchg
mov
pop
pop
cmp
incl
mov
cli
aaa
leave
mov
jae
jecxz
mov
xor
dec
sbb
xor
inc
mov
out
dec
inc
ds
lcall
sbb
push
cmp
int3
cmpsl
scas
into
movsl
xchg
xchg
gs
decl
ret
jge
pop
or
pop
sub
js
or
and
test
call
lods
nop
rolb
fsubl
stc
push
sub
dec
repnz
shlb
jbe
sbb
dec
inc
outsl
pop
int
fstl
mov
jmp
ds
mov
jne
pushl
sub
jns
addr16
in
mov
lcall
fs
or
popa
cwtl
fsubs
mov
xor
mov
jae
cmp
int3
add
lock
fwait
dec
inc
and
insl
sbb
decl
push
ss
xchg
idivb
push
lea
test
call
js
mov
fmuls
imul
out
lds
mov
cmp
insb
adc
ficoms
ja
or
inc
add
lahf
push
fcmovb
jecxz
pushf
fbstp
xorl
mov
dec
daa
push
lret
cltd
cmp
mov
inc
fcomi
mov
mov
push
adc
inc
inc
xchg
orb
mov
cmp
xchg
dec
cld
fistpl
es
lret
push
pop
jb
pop
mov
cmp
imul
in
xor
jmp
mov
iret
movsl
sub
ret
inc
ret
sti
mov
push
ret
inc
icebp
gs
mov
xor
xchg
jae
dec
adc
fsubr
out
out
test
inc
cmp
lods
stc
int3
cmc
aas
and
jns
andb
ljmp
jg
dec
sbb
fsubl
cld
pusha
sub
pusha
hlt
and
stc
pusha
fdivrs
xor
js
in
inc
push
outsb
daa
in
add
sub
call
cmp
addl
jns
sub
lods
inc
movsb
dec
cmp
lods
dec
test
and
sub
mov
jge
jecxz
mul
sub
jmp
inc
pop
int
jno
mov
arpl
jmp
pop
jmp
ljmp
cmp
inc
insl
outsb
enter
mov
mov
fcompl
fldenv
mov
call
add
fbstp
mull
jo
cmp
jg
sub
sbb
mov
cs
push
sbb
mov
sub
xchg
repz
sbb
lret
loope
add
decl
xchg
pop
inc
xchg
rcl
fxch
mov
sub
dec
in
sbb
add
lds
mov
in
ljmp
or
es
lret
cli
mov
shl
add
jg
push
hlt
xchg
adc
sbb
sub
jnp
addr16
xor
jg
cmp
out
ret
outsl
loope
stos
adc
cmp
inc
mov
pushl
sub
in
fstl
nop
lock
add
test
sbb
mov
fmull
outsb
addr16
dec
and
pop
pop
jb
adc
loopne
test
daa
outsl
roll
dec
lods
ljmp
push
out
idivb
adc
jno
out
sbb
sbb
cmc
les
push
int3
dec
mov
mov
ret
rcrl
mov
xchg
js
sbb
mov
inc
mov
fcomip
pushl
push
icebp
push
lods
sub
stos
or
mov
nop
loop
lcall
std
jmp
fldt
shlb
insb
out
and
orb
cmp
bnd
decl
adc
lahf
jle
iret
pop
movsl
jno
mov
adc
mov
sbb
ljmp
shr
loopne
mov
xchg
mov
repz
fidivrl
xchg
mov
jg
loop
sbb
or
out
stos
cmp
mov
aas
mov
test
decl
jnp
dec
add
mov
mov
stos
arpl
cmp
fnstsw
cmp
mov
lock
aaa
sbb
fildl
dec
fists
cmpl
cwtl
into
and
stos
lcall
aas
push
inc
cmp
scas
mov
mov
inc
setno
mov
scas
in
jmp
mov
cmp
lods
sbb
or
fdivr
fbstp
int3
outsl
les
inc
mov
stc
fisttps
push
mov
mov
mov
xchg
cmp
jmp
sbbl
or
ljmp
mov
mov
in
jnp
inc
xchg
push
cmp
out
idivl
sub
ds
mov
push
fs
lret
fsubr
popf
dec
inc
cwtl
jge
xchg
dec
pop
cmc
call
inc
mov
and
inc
push
test
sbb
cmp
sbb
decl
adc
xchg
mov
push
pop
dec
lahf
xchg
out
and
or
mov
repnz
jb
inc
xor
add
stos
cld
cli
mov
mov
cmp
daa
imul
pop
jp
mov
dec
dec
sbb
mov
add
pop
out
test
push
test
add
sti
xchg
outsl
stos
mov
out
mov
scas
sub
dec
sbb
cli
iret
dec
push
sub
fmuls
aas
shl
mov
shl
push
stos
push
pop
jg
fistps
xchg
psrad
push
sbb
outsl
shrb
push
lds
mov
imul
jmp
icebp
mov
cmpl
mov
dec
aas
bound
pop
shlb
rolb
bound
sub
ficompl
mov
push
fdivp
enter
jl
push
call
movsb
add
shr
decb
lcall
adcb
repz
jge
pop
icebp
call
imul
daa
xor
mov
stos
dec
push
sbbl
lcall
sub
fcmove
push
sub
mov
data16
cs
lcall
movsb
cmp
pop
push
scas
rcrl
and
cmp
enter
mov
dec
push
xlat
jmp
mov
dec
cmp
insl
mov
jge
push
dec
pop
decl
rolb
jmp
and
push
je
popf
push
cmp
jl
xor
call
loope
jnp
mov
mov
add
fcmovbe
popf
mov
push
push
mov
sahf
jecxz
or
mov
test
xchg
dec
mov
stos
dec
or
sbbl
pop
xchg
mov
outsl
das
xchg
fxch
ret
cmpsb
mov
je
sub
push
and
hlt
in
aad
aad
mov
cmc
mov
cwtl
dec
xchg
dec
imul
lcall
mov
shl
add
sub
add
mov
subb
call
xorb
xchg
vmread
push
stc
pop
jp
pop
add
push
in
xchg
push
cmpsb
mov
push
nop
data16
sbb
jae
xor
xor
push
push
addb
push
jne
fistpl
pusha
mov
push
fwait
sbb
stos
movsb
push
sbb
mov
inc
cmp
mov
insb
pop
and
cmp
mov
push
sar
mov
pop
ret
push
mov
fcom
outsl
and
jne
daa
add
ljmp
jnp
xchg
inc
ljmp
pop
ret
stos
push
xchg
mov
jo
mov
out
xchg
sub
cmp
lahf
cmc
rcrb
jno
out
sbb
xchg
ret
mov
jmp
mov
inc
cltd
les
mov
push
or
rol
out
daa
push
xor
mov
iretw
call
adc
outsl
add
mov
sub
arpl
pop
and
pop
cmp
cmp
sti
sbb
into
sarl
add
lods
pop
int
inc
mov
push
sub
lods
ss
inc
lea
popa
gs
pop
jne
fldcw
cwtl
mov
call
cwtl
mov
jge
out
repnz
mov
dec
jnp
stos
sub
add
sub
sub
inc
cwtl
loope
shrd
and
sarb
imul
pop
decl
loopne
int
aam
inc
popl
xor
daa
pop
xor
sbb
loope
ljmp
shrb
mov
ds
cld
mov
or
loope
pop
mov
sti
push
jae
or
jp
mov
push
adc
jg
ja
das
sar
xchg
sbb
push
in
in
jp
notl
and
lcall
push
enter
or
sti
and
fwait
mov
cmp
inc
xor
xlat
jne
jmp
or
jmp
pop
xchg
jns
add
repz
jbe
mov
cld
sbb
incl
dec
movsl
cld
arpl
sub
mov
fisttpl
dec
pop
dec
fs
cli
shl
dec
jns
decl
out
sbb
xchg
adc
in
out
pop
ds
imul
lcall
lcall
pop
push
es
mov
xor
xchg
push
imul
mov
ljmp
add
cmc
fists
repz
cwtl
adc
decb
rolb
inc
or
cli
es
dec
push
cld
push
aam
rorb
pop
xchg
lock
sub
pop
ficoml
jns
fmuls
jp
dec
push
mov
jge
aaa
sti
stc
mov
xor
pushl
pop
insb
test
clc
nop
sbbb
cli
push
cmp
leave
jns
jbe
sbb
loopne
inc
cmp
shlb
popf
in
les
rorl
sbb
into
cli
in
or
add
pop
pop
jge
gs
pop
mov
dec
subl
xchg
into
xchg
add
clc
sti
inc
cltd
xchg
and
mov
test
inc
push
insl
jle
mov
mov
fsubl
dec
outsl
adc
fidivrs
sti
dec
sub
lcall
push
flds
push
aaa
dec
or
repz
cmp
dec
scas
addb
mov
or
aaa
std
jmp
data16
bound
xchg
mov
jno
mov
cmp
add
mov
or
xchg
sbb
ljmp
pop
leave
daa
cld
xchg
add
cmp
hlt
and
lahf
std
jmp
jmp
cmp
cli
jg
sbb
jp
call
mov
stos
fnstenv
pusha
cld
lods
sub
ljmp
stos
jecxz
and
pop
xor
xchg
dec
dec
pop
xor
jle
ret
jg
or
inc
xchg
std
in
or
mov
out
ljmp
add
inc
pop
jno
addl
fcomps
and
sbb
orb
ljmp
add
xchg
jns
jnp
cmp
cld
pop
lock
mov
mov
idivl
cmp
cltd
sarb
rorb
cmp
pushf
cmpsl
outsb
iret
idiv
xchg
cli
cmp
mov
lcall
aas
inc
sbb
rclb
push
inc
or
pop
adc
aam
ss
fdivrp
in
pop
xchg
lret
lret
out
ja
adc
cwtl
adc
sbb
icebp
mov
mov
sahf
dec
sbb
popa
cmp
pop
jnp
negl
ljmp
or
pop
push
in
lds
xchg
sub
adc
mov
pop
in
aas
cmp
sub
incl
hlt
jo
mov
call
movsb
xor
aad
movsl
xlat
aad
repnz
mov
decb
cld
inc
add
xchg
js
xchg
inc
fcmovnb
push
mov
sti
testb
mov
cli
fwait
out
inc
dec
ss
das
jle
sub
cmp
pop
iret
jae
jmp
inc
insl
push
sub
push
inc
mov
mov
mov
xchg
cmc
incl
dec
adc
lahf
mov
out
jmp
jmp
call
push
push
scas
adc
outsl
std
add
stos
arpl
decl
lock
jg
cmp
leave
inc
xchg
cmpb
mov
outsl
and
and
adc
pop
hlt
dec
push
pop
ret
in
ds
icebp
jbe
int
inc
in
mov
inc
out
sbb
call
in
out
clc
jns
mov
shl
adc
inc
cmp
pop
lods
aam
lea
jmp
test
scas
js
fisubrs
or
imul
test
fldl
stos
cmp
xor
mov
sbb
push
lret
pusha
dec
xor
or
cwtl
jge
outsb
inc
ss
pushw
and
test
arpl
xchg
xchg
push
xchg
or
mov
aam
and
je
out
aaa
adc
fwait
mov
repnz
mov
adc
mov
dec
pushl
bound
jge
adc
lcall
jno
lods
insl
jge
cli
and
xor
xor
mov
incl
call
xor
pop
pop
xchg
add
daa
sahf
pushf
test
mov
ljmp
mov
cmpb
shll
mov
jb
cmpsl
rep
pushl
pop
lea
cmc
popa
mov
push
push
push
mov
push
xor
stc
lahf
sbb
hlt
imul
xchg
dec
push
pop
or
ja
mov
sub
repnz
sub
call
fwait
cli
inc
clc
or
call
aas
xchg
cmp
jg
sbb
mov
ss
inc
mov
lret
test
jne
aas
es
sbb
sti
outsb
popf
push
cmp
pushf
jmp
pop
sbb
jle
xchg
and
pop
cmp
insl
push
std
loopne
outsb
adc
test
jge
fdivs
pushl
stos
shr
ja
cs
inc
leave
add
sbb
push
insb
mov
stc
dec
stc
scas
jecxz
inc
mov
sbb
mov
jno
mov
add
mov
leave
into
cmp
call
mov
pop
adc
sbb
xchg
mov
fbstp
outsb
sbb
mov
mov
sbb
xor
pop
jo
xor
push
std
mov
stos
loopne
mov
push
sbb
shlb
out
loope
pop
pushl
std
pushl
push
and
loope
fwait
adc
xchg
dec
cmpsb
adc
sub
stos
insb
call
outsl
inc
pop
out
test
pop
xchg
scas
xchg
fadd
shlb
iret
mov
divb
jmp
add
loope
cmc
or
pop
adc
fcompl
sub
mov
pushl
test
push
fwait
ss
pop
outsl
lods
mov
jo
hlt
mov
cmp
xor
push
out
add
mov
cli
adc
xor
cmc
mov
ljmp
adc
jl
outsb
aas
push
in
cmp
dec
ljmp
shlb
popa
or
inc
dec
std
mov
popl
and
fcos
add
andb
fimuls
rcr
jmp
enter
outsb
loop
inc
cmp
sub
stos
popl
mov
notl
ljmp
mov
mov
out
jl
repnz
xor
decl
fs
mov
icebp
in
and
adc
cmp
lret
jb
arpl
cs
loope
adcl
mov
jge
enter
pop
out
out
jne
push
and
cmp
jmp
insl
or
imul
cs
push
test
cmc
adc
jg
dec
roll
mov
bound
or
sti
cmpsl
call
xchg
mov
es
xor
ficompl
mov
pop
insl
aam
cmp
push
shrl
dec
mov
mov
mov
mov
lods
les
or
fistpll
inc
cli
popa
out
sub
inc
mov
movsl
das
mov
insb
xchg
jmp
test
push
lods
insb
sbb
ljmp
in
dec
scas
call
mov
or
lock
lcall
movsb
enter
mov
xchg
je
dec
dec
cmp
cmp
incl
jecxz
inc
insl
hlt
push
sub
mov
rcrb
jmpw
incl
jns
repz
call
inc
ret
sbb
outsl
out
ljmp
cli
decl
cmc
dec
pop
lods
cmp
xor
push
int3
push
jno
xor
mov
icebp
push
cmpsb
cmpsl
add
call
mov
inc
xor
xchg
xor
stos
xor
rolb
fs
ljmp
in
jbe
ss
pop
rcrl
imul
push
mov
xchg
loopne
pop
mov
ljmp
mov
cmp
loopne
fs
or
sub
movb
xchg
push
push
pushl
lret
push
pop
push
imul
sarb
xchg
pop
inc
daa
out
ljmp
mov
or
imul
cli
jl
decl
arpl
dec
and
aas
cmpsb
stos
xchg
inc
push
lea
pop
cwtl
pop
mov
and
xor
pushl
rol
test
xlat
pop
mov
les
sub
xlat
aaa
cmp
jg
in
outsb
ja
scas
mov
xchg
mov
pop
lcall
imul
xor
ljmp
aad
popf
rcr
and
fucompp
or
stos
es
test
pop
addr16
mov
lods
or
xor
jge
push
into
or
xor
iret
into
jo
jmp
pop
arpl
sub
push
fwait
cmp
pusha
fwait
mov
out
pop
cmp
or
or
rclb
adc
out
inc
xchg
mov
sub
sahf
lcall
incl
push
les
mov
rcll
sub
std
jmp
jmp
pop
cmpsl
mov
dec
insb
adc
jp
outsb
ss
xchg
int
out
fcmovb
jmp
incl
push
mov
iretw
jbe
mulb
xchg
cld
call
push
mov
xchg
xor
lods
shlb
sbb
dec
popf
pop
mov
test
xchg
sbb
insl
pusha
decl
ret
cmp
cmp
imul
scas
cld
into
inc
rclb
sbb
cmpsl
inc
pop
lret
mov
add
pushl
movsl
xchg
fldenv
xor
mov
incl
add
dec
rcr
add
mov
inc
jmp
dec
js
xlat
mov
mov
les
inc
das
jle
fbld
add
decl
dec
ret
dec
cmp
xchg
and
sarb
cmp
mov
or
jmp
pop
shrl
add
sub
jmp
dec
divl
cmpsl
fisubrl
iret
mov
xchg
or
popf
mov
cmc
lahf
or
sar
xor
cmpb
roll
daa
or
pusha
and
inc
fcomip
call
adc
fcom
enter
aam
sub
les
or
adc
daa
ret
cld
cmp
mov
fadd
push
pop
sbb
jg
cli
push
mov
movsb
mov
ljmp
outsb
les
sub
add
aad
cmp
pop
adc
dec
dec
dec
pushl
insb
sbb
dec
and
stos
daa
lea
push
rorl
jp
lock
pop
ret
fsubp
imul
in
in
js
iret
out
fidivrl
and
sub
mov
call
repnz
jmp
inc
xor
cmpsl
mov
test
int
popa
scas
mul
xor
clc
testb
cli
mov
jmp
adc
jne
in
mov
out
adc
lcall
push
insl
arpl
nop
mov
add
js
cmp
inc
call
rcrb
hlt
sahf
shrb
std
adc
incl
iret
push
mov
leave
xchg
ds
fdivrl
out
stos
subl
pop
mov
add
incl
jmp
xor
pop
inc
add
push
aad
dec
inc
jge
enter
int3
pushl
or
call
dec
inc
mov
sub
ljmp
mov
cwtl
lock
pushl
add
mov
in
mov
pop
adc
sbb
out
jno
sub
lcall
stos
imul
jl
mov
xor
scas
and
fdivrl
xlat
and
call
mov
inc
scas
and
sbb
jae
mov
sub
pop
adc
repz
pushl
out
and
add
push
and
cmpl
adc
mov
es
add
fstl
jmp
ret
sbb
or
imul
hlt
pop
addl
sub
or
pop
std
lcall
popa
int3
or
mov
cmpsl
xchg
std
pop
jbe
xor
push
mov
cmpsb
fs
decl
test
pop
outsb
or
inc
mov
mov
adc
dec
das
int
lcall
shl
mov
jp
aam
add
xor
dec
push
fimuls
xchg
inc
push
repnz
xor
or
xchg
mov
push
add
pop
adc
push
jle
adc
jne
shl
push
clc
adc
mov
out
js
jle
sbbb
inc
enter
jbe
test
mov
push
aaa
adc
cwtl
cmp
pop
insl
cmpsb
or
fistps
sub
lds
inc
call
push
mov
xor
aam
jg
decl
xchg
cmp
je
aad
loopne
mov
data16
out
aam
rcll
decl
pop
mov
pop
fisubs
fildll
lret
mov
dec
xchg
cmp
aaa
test
ret
jmp
pop
lods
lahf
sub
adc
cmpsl
out
sub
adc
inc
fs
sarl
pushl
lret
add
aam
sub
clc
jbe
std
sbb
mov
sub
test
jge
mov
movsl
in
xchg
imul
sbb
add
xlat
fcomip
mov
inc
iret
in
es
xor
arpl
jo
leave
mov
adc
fwait
add
add
xchg
dec
std
ljmp
xchg
push
push
cmp
jge
add
mov
mov
popf
push
jge
out
pushf
inc
sub
in
pushl
loope
adc
xchg
pushf
adc
or
fnclex
jae
jp
pop
cmp
incl
push
xor
pop
adc
xlat
push
and
test
inc
pop
lcall
cmp
inc
and
jb
ret
ljmp
ret
push
inc
cmpsb
mov
xchg
jmp
jecxz
outsl
and
and
clc
add
xchg
ret
idivl
clc
cmp
sbbb
add
fcom
les
adc
jg
inc
or
cmp
shll
outsl
inc
daa
out
jnp
cmpl
jmp
into
in
scas
mov
data16
sbb
jno
xor
movsb
shr
jmp
lcall
popf
ret
mov
dec
mov
out
lea
aaa
lret
cli
sub
test
cmp
fsts
es
fiadds
lret
cmp
cmpl
mov
pop
clc
and
sbb
jge
lock
jo
xchg
loope
mov
ret
test
add
into
insb
gs
inc
js
sub
dec
out
clc
call
ljmp
dec
sbb
dec
pop
sbb
out
jl
cmp
sar
dec
cli
jg
pop
les
cmp
mov
cmp
mov
out
dec
mov
mov
stos
xchg
lret
cltd
shr
std
adcb
lock
decl
out
mov
mov
pop
popf
push
test
mulb
mov
ljmp
jecxz
xchg
sub
insl
std
mov
push
testb
ja
push
test
popa
lock
decb
lret
mov
lahf
and
and
cmc
sbb
or
movntps
adc
add
sub
cmc
pushl
mov
lds
jg
aaa
mov
jmp
insb
fcompl
adc
push
pusha
dec
es
gs
incl
sbb
xor
andb
xor
mov
mov
data16
shrl
incl
in
dec
sarl
sub
xor
test
mov
jbe
in
or
and
cmp
ds
cmp
mov
mov
into
xor
dec
or
mov
outsb
pop
aad
enter
loope
xchg
or
and
mov
mull
jmp
jmp
mov
cwtl
repnz
add
std
imul
dec
mov
jbe
dec
lods
incl
pop
push
xchg
jle
xchg
pusha
and
lahf
fcoms
iret
jbe
cmp
adc
xchg
jp
xchg
jne
mov
lds
xor
das
clc
jg
not
xchg
mov
xchg
loopne
fmull
xor
orl
mov
add
pop
or
int
cmp
push
in
sbb
clc
call
cmp
xchg
lea
movsl
fcoml
adcl
push
sbb
ss
lcall
xchg
cmp
add
push
aas
push
mov
sub
adc
mov
jg
push
mov
cld
ljmp
push
hlt
out
int
inc
push
or
inc
sbbb
pop
orl
incl
idivb
aaa
sti
pop
jl
repz
fcomps
xchg
pop
packuswb
cmp
pushl
add
cwtl
imull
or
or
loope
inc
and
xor
ljmp
pushf
aas
mov
pop
lret
fsubr
xlat
xchg
out
test
std
stc
or
movsb
or
fldt
cmp
sbb
pop
jp
loop
fidivl
push
out
or
pusha
xlat
cmp
repnz
xor
ss
jg
in
inc
outsl
stos
inc
mov
mov
out
lret
lods
test
pop
jecxz
sbb
rcll
popf
sub
or
push
scas
cli
jmp
nop
bound
or
ret
add
inc
in
xchg
jbe
lret
mov
pushl
test
jmp
call
add
stos
das
and
sbb
ljmp
ljmp
cmpl
add
jge
xor
jae
das
mov
jns
arpl
hlt
decl
adc
stos
fimuls
rol
and
and
sbb
xor
lcall
hlt
xor
and
insb
cli
or
adc
pop
vmaxps
lods
rclb
jmp
mov
add
cmc
sbb
jp
mov
xor
push
decl
jae
mov
push
loop
push
fldenv
push
dec
repz
in
repnz
movsb
imul
sub
decl
cmpsb
repz
das
jns
mov
sub
dec
and
inc
test
adc
jno
std
jmp
jge
fidivl
or
jo
loopne
mov
xchg
inc
pushl
jb
push
scas
call
adc
dec
adcb
inc
sbb
or
jmp
mov
inc
xor
movsb
test
mov
sub
xchg
xor
stc
fbld
pop
fwait
aam
mov
jbe
xorl
test
ret
mov
outsb
call
std
cs
sahf
dec
fidivrl
jg
mov
cmp
pop
push
mov
lds
jg
cmp
push
xchg
xchg
jge
inc
push
icebp
ret
repz
insl
and
lea
mov
jns
push
xchg
or
adc
push
cwtl
pushf
cli
lret
mov
jmp
pop
shl
test
stc
cmp
sub
aas
lret
and
dec
inc
or
jp
shl
fidivrl
popa
cmpsl
out
mov
xor
mov
jp
call
push
cmpsb
xchg
cmp
rcll
mov
push
arpl
lock
movsb
dec
xor
push
jl
decl
mov
sbb
shll
inc
cmpsb
dec
add
xchg
in
fiaddl
test
call
bound
jmp
stos
dec
lods
pop
adc
or
loope
push
mov
push
sti
push
hlt
push
dec
cmp
fwait
lahf
adc
ds
sub
and
orb
mov
imul
cld
push
fldt
lds
popf
mov
push
sub
out
andl
call
lock
out
inc
cltd
mov
mov
ss
roll
lcall
daa
idivb
in
dec
cmp
cmp
dec
or
aas
dec
pusha
xchg
into
sbb
iret
mov
es
ljmp
add
mov
mov
addr16
loope
int
cmpsb
jmp
mov
pushf
mov
xchg
dec
lret
call
lock
movsb
decl
movsb
adc
sub
inc
jecxz
and
cs
aaa
popa
hlt
int3
or
ljmp
cltd
mov
insb
mov
cmp
gs
lods
test
xor
jmp
push
ja
mov
daa
lods
call
std
adc
fucomip
scas
cmp
call
xor
push
shlb
jle
pop
jl
or
pusha
inc
clc
xchg
inc
mov
sub
push
dec
sbb
xorb
int
test
cmp
push
hlt
xor
ret
cmp
stos
test
inc
dec
xchg
push
mov
incl
mov
dec
std
xor
in
sub
jl
jae
mov
std
mov
fcomip
lods
push
sub
cmpsl
scas
fcmovu
mov
shrl
call
cmp
jne
lret
jnp
pop
and
loop
xchg
imul
pushl
jg
cltd
rolb
out
push
lock
imulb
jnp
mov
data16
decl
pop
das
pop
pop
fcmovnb
and
pop
lret
xchg
or
xchg
test
push
or
sub
pusha
mov
lds
and
subb
stc
imul
rolb
cmp
je
pop
add
cmp
ljmp
ret
cltd
dec
fmuls
in
or
mov
xchg
jb
mov
mov
cli
fsts
out
cmp
jle
jnp
pop
mov
loop
in
in
pushl
and
addr16
mov
xor
and
mov
lock
in
sarb
sub
cwtl
jmp
sub
cmpsl
repz
das
inc
or
pushl
scas
sbb
cmp
dec
hlt
xor
out
clc
dec
imul
pop
sub
xchg
out
pop
sub
pushl
std
stos
cwtl
out
fmul
mov
cmp
dec
push
dec
outsl
fistpl
int3
xchg
and
jmp
push
jp
add
in
push
push
lret
clc
out
adc
lock
insb
pop
pop
cwtl
inc
push
and
mov
insl
bound
ljmp
lds
imul
aas
xor
jns
lcall
fstpt
movsb
daa
push
cmpb
stos
mov
leave
cmc
dec
cmp
aaa
std
xchg
jne
push
xor
sbb
dec
je
dec
mov
dec
xchg
out
cli
pushl
push
adc
cmp
pop
dec
mov
xor
or
jnp
mov
orl
xor
mov
test
std
adc
call
xchg
jmp
in
cmp
xor
mov
inc
inc
mov
pop
popa
sarl
cmpb
cli
xor
jge
notl
incb
xchg
mov
sahf
decl
decl
loopne
pop
in
ret
ljmp
rcll
out
arpl
or
ss
ljmp
sbb
sbb
add
in
mov
lret
scas
repnz
pop
lahf
addl
in
sbb
and
mov
outsl
in
ja
sti
cmp
mov
and
mov
lds
lcall
cmc
xchg
stos
in
dec
jne
fiadds
test
lea
test
fmuls
in
lock
insb
pusha
stos
filds
jns
pop
xchg
cmc
push
add
test
in
sbb
incl
jge
jae
pop
pop
fdivrl
xchg
mov
rcr
sbb
test
ljmp
fldcw
movsb
mov
mov
jle
sti
jp
pop
cmp
jnp
test
sar
pushl
add
movsb
repnz
sub
les
lods
add
scas
aaa
ret
clc
push
jg
xor
adc
ficomps
mov
imul
pop
js
sahf
jmp
push
jg
push
cmp
ds
jbe
out
je
pushf
push
repz
test
adc
sub
push
lcall
inc
stos
mov
mov
fimull
cmp
in
pop
cltd
adc
clc
sbb
lcall
fsubrp
mov
or
mov
lret
je
and
add
cwtl
test
push
add
jg
enter
mov
xor
in
icebp
inc
stos
and
movsl
sbb
movsb
mov
xchg
sub
push
xchg
es
outsl
xchg
pop
jmp
call
inc
in
xor
std
notl
sub
in
cmp
sub
das
and
jg
jg
jo
aas
pusha
mov
pop
mov
push
pop
ds
scas
xor
movsb
sti
call
idivl
test
fs
std
mov
leave
and
jl
std
sahf
out
mov
push
mov
aam
add
aam
stos
fisubs
sbb
mov
sbb
rcl
lret
adc
mov
hlt
jmp
cli
sub
shll
mov
lcall
mov
add
adc
hlt
in
lahf
aam
sbb
xchg
inc
or
or
push
and
jnp
add
jle
adc
std
xchg
inc
mov
add
int
shl
xor
cmp
or
mov
pop
in
mov
in
cli
push
out
add
fwait
test
test
jp
fsubrs
xor
imul
mov
mov
js
add
cli
add
jl
mov
insb
insb
and
dec
addr16
xchg
ret
cltd
push
decl
inc
sbb
fistl
insb
mov
leave
lcall
xchg
shlb
xor
imul
adcl
lcall
pop
test
subb
loope
movsl
jg
cmpsb
mov
in
jno
mov
push
pop
push
test
int3
or
jl
mov
nop
cmpsl
xor
lahf
scas
testl
lcall
cmpsl
test
imul
into
stc
xlat
movsbl
jmp
mov
call
mov
jg
jmp
sbb
pop
out
cltd
jecxz
daa
push
aam
mov
hlt
enter
cmpsl
scas
cli
lods
loopne
pop
sub
incl
adc
add
in
mov
adc
rcl
cmp
aad
es
decl
sbb
out
iret
icebp
jo
jo
dec
ljmp
imul
dec
popa
cmp
clc
mov
jecxz
fists
sbbl
mov
pushl
or
mov
fsubrs
in
dec
mov
adcl
jbe
jo
stos
inc
into
test
mov
test
fimull
sbb
std
nop
sub
or
mov
sbb
mov
adc
pop
in
std
out
inc
and
pop
movsl
cwtl
repz
inc
mov
jmp
or
out
repz
sbbl
sbb
pop
lcall
lcall
pop
xor
lret
pop
push
xor
jb
sub
popf
jle
sub
lcall
out
or
push
mov
jne
jno
mov
and
push
mov
addr16
in
or
xchg
cmp
mov
loopne
std
jae
pop
cmpsb
push
push
notb
add
pushl
xor
xchg
leave
dec
or
ret
shll
adc
pop
mov
dec
push
dec
hlt
dec
jg
lds
pop
pusha
ja
fisttpll
jns
and
lds
lock
filds
mov
adc
test
sbb
xor
push
fsub
jno
shrl
lods
movhps
sar
addr16
roll
mov
dec
dec
lret
mov
adc
fsubl
int3
sar
mov
stos
lret
arpl
push
mov
inc
and
ror
test
push
ds
xor
in
and
push
out
sbb
push
cmp
pop
test
lds
lcall
pop
sbb
ljmp
pop
ja
lret
mov
adcb
or
push
pushl
dec
pop
sbb
sahf
jle
fmulp
aad
out
clc
call
and
xor
xchg
mov
and
nop
mov
sbb
fisubl
xlat
decl
xor
and
in
sbb
cltd
mov
gs
sar
incl
aad
sbb
insl
sbb
std
pop
or
std
sub
js
inc
lret
cmp
imul
push
add
cld
test
and
dec
fildl
mov
decl
int
lods
dec
jno
xor
sub
int3
adc
out
xchg
mov
add
mov
ljmp
jbe
xchg
mov
and
nop
pop
arpl
dec
leave
outsb
sbb
incl
jno
arpl
sbb
sub
call
jl
mov
mov
jb
mov
jp
jg
jmp
mov
pop
adc
lcall
cwtl
jno
es
movsb
sub
xchg
mov
pushl
xchg
fwait
ret
pop
xchg
mov
xchg
cltd
cltd
int3
cmp
ljmp
scas
pop
clc
aas
mov
mov
xchg
cwtl
jo
rolb
cmpsb
fstl
fcmovbe
ja
dec
decl
xor
xor
xor
stos
test
fwait
lds
jp
mov
mov
mov
ja
decl
hlt
add
call
add
mov
in
hlt
out
ret
decl
sub
fdivrp
shlb
enter
inc
push
movsl
das
shrd
lods
insl
inc
jmp
call
add
imul
in
stos
ljmp
jbe
nop
testb
notl
lcall
xchg
loope
mov
in
aas
sbb
jmp
rolb
adc
mov
mov
sub
ljmp
shll
add
dec
in
dec
rclb
enter
ret
movsl
mov
jb
in
jle
cld
add
pop
or
stc
repz
dec
leave
in
jb
xchg
sbb
add
mov
into
scas
rolb
jns
into
xchg
roll
scas
lock
enter
adc
sub
ljmp
and
pop
adc
call
in
mov
imul
cmp
jle
dec
jp
sbb
movsb
fdivl
mov
cmpsb
not
cli
sbb
mull
push
sub
and
pushl
dec
pop
sbb
mov
xchg
in
in
sti
decl
jmp
xlat
jg
ss
sbb
sbb
loop
sbb
ljmp
mov
mov
mov
and
or
jg
jmp
ficoml
inc
hlt
mov
push
bound
or
js,pn
shrl
incl
mov
dec
add
movsb
and
xchg
mov
adc
cmc
jl
add
jmp
xchg
lret
pop
push
fincstp
xchg
jnp
sti
mov
push
lret
imul
ljmp
xor
outsl
mov
movl
les
cltd
movsl
call
push
pop
xchg
stos
ja
pop
out
es
mov
inc
xchg
cmp
jg
call
adc
repnz
movl
std
sub
leave
out
cli
dec
cmpsl
sbb
dec
out
adc
fwait
stos
scas
xchg
cmpsb
mov
negl
mov
sub
jb
and
mov
or
sbb
sbb
lods
sbb
inc
fsub
insl
in
add
add
mov
mov
or
pop
push
jae
sbb
jmp
lea
xor
sbb
imul
fadd
dec
add
iret
data16
sti
je
das
jno
in
push
mov
enter
push
mov
xchg
cli
cmp
insl
adc
hlt
add
fidivrs
fst
scas
mov
in
sub
adc
andb
leave
lcall
pop
outsl
popa
add
pop
roll
xor
jp
push
ds
out
in
jne
dec
hlt
jnp
ljmp
cli
pushl
lret
pop
fldt
jo
mov
in
repnz
in
stc
sub
ss
xchg
addl
add
ficoml
stc
mov
imul
fwait
int3
in
js
pushl
xchg
sub
out
loope
xchg
out
and
lock
js
addr16
lret
das
cmpsb
sbb
outsb
cmp
sbb
mov
or
dec
jge
pop
scas
and
stc
pop
mov
popa
gs
decl
sbbb
ss
cs
repnz
clc
sti
push
adc
mov
and
clc
stos
cmpsb
cmpsb
mov
pop
mov
imull
cmp
mov
jb
sub
pop
stos
sbb
sti
int3
lea
jl
jp
inc
fcoms
inc
fs
cmp
xchg
outsl
adc
ljmp
sbb
call
outsb
push
dec
mov
or
inc
stos
and
pop
in
pop
les
jae
faddl
std
lods
aas
leave
mov
lret
add
movsl
sbb
std
fbstp
push
pop
call
fcomps
into
sarl
bound
sub
mov
pop
mov
cmovb
inc
mov
sub
or
sub
or
in
and
pushl
pop
loop
xor
pop
push
xchg
mov
adc
outsl
aaa
repz
xchg
sbb
add
sub
push
fldl
push
aas
pop
movsl
xchg
mov
and
sbb
jno
inc
stos
out
mov
mov
jne
rcl
sar
jmp
adc
mov
push
xchg
sbb
and
insl
dec
mov
gs
ljmp
sub
sub
dec
stc
sarl
mov
add
sub
push
pop
sbb
mov
push
cli
ljmp
out
cltd
add
pop
std
fisubl
loope
in
fidivl
ljmp
lea
out
mov
and
adc
fs
fstl
mov
incl
lret
ljmp
fisttps
scas
mov
loope
inc
in
or
adc
jo
or
or
cwtl
xor
mov
fisttpll
push
mov
adc
stos
out
push
mov
aad
jl
ss
jmp
dec
cmp
dec
sar
xchg
addr16
fs
add
mov
out
jle
push
mov
push
insl
inc
cmc
repnz
cld
mov
inc
imul
fisttps
in
insl
push
jg
ljmp
loopne
gs
xor
sbb
addr16
sbbl
pop
mov
das
cltd
sar
in
and
mov
jp
pushl
cld
popf
movsb
inc
repz
in
mov
int3
lds
mov
pop
sbb
lods
cld
push
push
mov
ljmp
mov
cmpsb
insb
rorb
cmp
mov
shl
out
call
add
or
ss
and
js
xchg
sub
mov
callw
pop
sub
mov
out
sbb
mov
jb
test
ficomps
jmp
imulb
inc
enter
ret
cmp
ljmp
cwtl
hlt
ljmp
mov
inc
push
mov
test
xchg
mov
int
mov
cmp
dec
bound
push
imul
call
leave
mov
xchg
pop
adc
lcall
xor
push
cmp
pop
notb
rol
addr16
dec
cmp
lock
jle
mov
inc
mov
in
sahf
xchg
js
test
mov
push
lcall
aad
js
loopne
subb
fsubrl
and
fwait
lret
jl
or
daa
cmp
lcall
cmp
add
ljmp
xchg
ror
jl
mov
jno
add
jno
decl
stos
aas
int3
push
or
dec
rcrl
loope
sbbl
filds
xor
imul
in
sub
sub
in
dec
pusha
mov
xor
pop
test
pop
stc
inc
push
pop
repnz
mov
popf
and
push
fucomip
xchg
pop
icebp
je
push
xchg
sub
cmp
std
sub
adc
push
mov
fldt
aas
xchg
xchg
insl
stc
rcr
xchg
xchg
aas
rcrl
shr
lret
in
pushf
insb
cmp
xlat
jmp
inc
out
jnp
mov
lret
les
mov
push
pop
les
decl
ret
add
lds
xor
add
cmp
call
pop
in
out
add
sub
mov
add
pop
inc
lsl
mov
inc
jbe
lcall
sbb
adc
pushf
jbe
push
adc
mov
fidivrl
call
jne
and
loopne
lds
incl
adc
dec
bound
xor
lahf
mov
sbb
clc
mov
movsb
outsb
jb
out
mov
nop
imul
ret
ljmp
cmp
adc
je
aad
out
adc
or
sbb
je
and
gs
inc
nop
insb
or
shlb
jge
jbe
mov
and
mov
test
sbb
jl
mov
cmp
pop
mov
or
push
cmp
ljmp
fdivs
mov
xor
pop
mov
ret
stc
push
repnz
in
fidivrs
push
mov
jo
das
lock
les
aas
sub
inc
icebp
lahf
sub
popa
out
dec
outsl
enter
test
leave
ljmp
mov
loope
fcmovu
fcoml
loopne
clc
xor
mov
jnp
xchg
push
and
and
pop
cmp
sub
decl
mov
jne
popa
add
push
dec
sbb
sub
xchg
and
mov
mov
fldcw
add
test
clc
outsb
sbb
lds
dec
mov
mov
dec
popf
mov
dec
aas
repz
test
pop
mov
jge
xchg
cmp
inc
stos
fadd
int3
out
cmp
imul
fwait
inc
jge
ljmp
ja
aaa
inc
mov
add
ret
pop
xchg
ret
add
adc
jl
testl
incl
adc
adc
mov
inc
and
or
mov
orps
call
push
clc
notl
insb
dec
mulb
aas
inc
sti
ja
xor
jp
loopne
jle,pn
adc
jg
jg
cmc
pushl
and
adc
sahf
daa
ret
xor
sbb
stos
jle
and
pop
lock
out
rorl
mov
cmc
push
jb
icebp
mov
mov
push
lods
mov
mov
pop
jae
leave
out
push
nop
cmpsb
adc
or
insb
shr
pop
pushf
aad
jmp
pop
sbb
push
mov
adc
imul
fnstcw
jb
mov
push
push
dec
stc
lods
sbb
sub
test
push
subb
fldl
fidivrs
xor
lods
out
adc
push
sarb
mov
xchg
sbb
cmp
enter
test
mov
out
mov
outsl
insb
and
call
jp
adc
scas
inc
mov
inc
popa
out
loope
sete
xor
cmp
ljmp
jb
sbb
inc
jg
cmp
es
popa
fsubrp
hlt
mov
das
sbb
fucomp
push
mov
mov
aaa
or
sbb
and
fbld
jae
out
mulb
push
pop
es
add
jg
movsl
and
in
ds
in
add
int3
jl
stc
imul
fnstsw
decl
dec
popf
sbbl
xchg
pop
jecxz
inc
xchg
rclb
push
sub
aas
inc
inc
sub
adc
lcall
sbb
ret
outsb
xor
inc
dec
inc
lea
out
xor
fildll
aas
push
mov
push
loopne
dec
inc
sbb
inc
daa
adc
mov
xchg
jns
je
mov
jg
jmp
inc
addr16
jnp
andb
shll
dec
lock
aad
icebp
ljmp
sbb
pop
pop
push
lahf
adc
decl
sub
loop
decl
push
mov
insb
push
inc
pop
hlt
ljmp
lcall
mov
out
aaa
out
push
mov
mov
mov
push
fs
scas
pusha
xchg
push
dec
mov
call
cmp
decl
std
leave
mov
and
shrl
sti
adc
test
mov
test
test
jp
sbb
das
clc
lcall
fcmovu
cli
fdivrl
jmp
jmp
idivb
stos
mov
xchg
push
jb
push
ret
lahf
xchg
inc
mov
pop
aas
dec
xchg
test
push
inc
xor
and
jg
gs
jno
ds
mov
js
popf
pop
mov
jmp
mov
mov
pop
pop
xchg
lret
jle
mov
pop
sar
add
ffreep
mov
adc
push
fsubrs
cmp
mov
jae
cmp
jmp
xchg
das
adc
pop
pop
mov
dec
fstpt
lock
iret
jecxz
pop
xchg
push
xchg
jae
jae
loop
lcall
and
push
cmp
jno
push
mov
pop
inc
cmp
sub
jge
sub
call
jns
mov
repnz
mov
insl
imul
adc
ja
jbe
mov
and
xchg
mov
mull
mov
jo
adc
push
rclb
lcall
push
mov
add
adc
mov
push
sbb
int
ja
mov
ljmp
mov
aaa
xchg
fwait
jle
loope
dec
or
or
cmc
jnp
adc
lret
enter
jmp
ljmp
pop
mov
inc
inc
test
push
outsl
inc
popf
aaa
mov
daa
xchg
mov
test
mov
sbb
fstpl
rcrl
repz
jle
into
mov
das
sub
adc
mov
call
in
loop
insb
roll
mov
lret
or
ss
test
xor
cwtl
lcall
jmp
movsb
add
testb
push
lods
dec
push
cmpsl
in
jg
es
cmp
or
aas
dec
aad
divl
pop
adc
stos
mov
xchg
ja
iret
xchg
dec
fdivr
mov
jmp
dec
or
movsb
cltd
and
xchg
mov
xchg
fdivr
outsl
scas
loopne
xchg
idiv
js
mov
jmp
mov
rcll
mov
adc
push
push
cltd
jmp
add
xchg
pusha
dec
mov
fsubl
int
xor
xchg
and
mov
test
aam
push
mov
inc
rcll
out
iret
popf
ljmp
ds
and
mov
fisubs
inc
lcall
cmpsb
stos
xor
fs
cmp
push
push
out
inc
pop
outsl
mov
adc
scas
addb
push
jae
call
scas
xchg
inc
daa
imul
daa
gs
jmp
pop
nop
push
dec
incl
push
add
sbb
int
loop
int
shlb
outsl
iret
dec
jle
imul
dec
xchg
aaa
xchg
dec
and
imul
or
movsl
push
add
mov
std
aaa
cmp
add
jg
mov
aam
callw
loope
popa
jo
loopne
rclb
not
or
rcll
nop
push
in
cmpsl
mov
xchg
rclb
jne
ljmp
icebp
jmp
jns
xor
cmp
scas
mov
adc
push
fdivl
sbbl
inc
scas
addb
mov
xor
cs
jp
imul
jb
das
out
cmp
int
repnz
test
ljmp
xchg
push
pop
nop
cli
js
add
mov
lods
ss
sub
rclb
aas
mov
movsb
and
add
loop
fnsave
clc
pop
mov
mov
scas
nop
push
push
push
adc
fdivr
or
inc
xchg
cltd
mov
mov
imul
call
or
repz
push
xchg
repnz
push
or
sbb
scas
cmpsb
arpl
dec
jno
cmp
outsl
clc
jmp
int3
movsb
xchg
mov
pop
and
push
xchg
jne
push
call
and
cmp
call
fucomp
sbb
add
mov
adc
fsubrl
addr16
ja
rcll
cld
pushl
cmpsb
fidivs
out
xor
shl
push
adc
in
and
fistl
push
adc
mov
popa
loopne
push
aam
xchg
test
push
ss
outsl
out
lcall
push
mov
xor
lret
or
mov
push
add
jg
daa
cli
jg
jecxz
sub
cmp
jle
loopne
xchg
ja
push
into
ret
aas
xchg
lcall
out
mov
sbb
inc
mov
add
xor
fstps
cmp
mov
leave
pop
ss
xchg
out
mov
cmpsb
inc
pop
or
dec
jb
push
loope
xchg
and
jmp
int
adc
enter
adc
bound
sbb
pop
arpl
mov
es
push
lcall
cmp
xchg
sti
lahf
jns
loope
mov
inc
insb
insl
add
mov
and
sbb
stc
xor
pop
mov
sbb
lcall
xchg
jecxz
pusha
fwait
incl
and
fnstcw
push
jbe
mov
jmp
cmp
push
sahf
inc
addr16
scas
mulb
xlat
cmc
and
cmpsl
aas
pop
add
mov
scas
inc
mov
and
add
push
cmp
sar
sbb
cmpb
dec
les
dec
xor
stc
mov
dec
ljmp
push
sub
aas
popa
pop
or
adc
cmp
jbe
std
sahf
test
jmp
mov
jmp
xor
jnp
mov
sub
nop
and
push
jns
jg
sar
or
jbe
cwtl
mov
push
inc
and
push
dec
or
dec
stos
pop
ret
lret
fs
sarb
fmul
das
cli
pushl
inc
pop
jns
cmpsl
ret
inc
push
lea
bound
jecxz
sbb
xlat
pop
aaa
mov
out
mov
mov
call
push
or
shrb
cld
inc
jmp
add
stc
lods
movsl
or
mov
call
loope
push
pop
dec
push
aam
mov
inc
push
pop
xchg
jne
push
ret
pushl
mov
aad
push
popf
adc
mov
popa
pop
das
cmp
jmp
add
push
xchg
or
adcl
mov
xchg
scas
call
mov
popf
and
push
decl
mov
xchg
aaa
pushf
jge
jmp
es
lret
aas
cmp
mov
outsb
movsb
inc
adc
shlb
adc
mov
sbb
fidivs
or
jbe
ljmp
jo
dec
mov
lret
lcall
push
decb
les
pop
enter
mov
mov
jecxz
incl
xchg
andb
int3
jo
test
int
and
mov
les
add
out
idivl
jmp
std
xor
in
mov
loope
in
out
cmp
cmp
mov
sti
cmp
pusha
rolb
or
and
out
scas
push
ja
aaa
mov
shrb
fidivl
jmp
out
leave
mov
sbb
rorl
ljmp
cli
and
sbb
in
cmc
push
out
aaa
dec
jg
jmp
mov
jg
jmp
popf
mov
mov
ss
jnp
inc
lahf
test
pushl
push
aaa
es
mov
xchg
scas
fisttpl
fsubrs
lods
ret
pop
add
or
sahf
decl
sub
fadds
jle
jecxz
push
dec
xchg
iret
lea
std
sbb
xchg
jns
movsl
sti
mov
ljmp
shll
xchg
clc
addr16
xlat
sbb
outsl
fsubrl
decl
iret
mov
out
sbb
clc
test
bound
lcall
xchg
xor
call
mov
in
pop
pop
mov
push
mov
out
cmpsb
jbe
jmp
cwtl
mov
in
jle
cmc
rol
cmpsl
dec
dec
leave
bswap
fsubr
cmpl
addr16
cld
iret
fildl
push
stos
ss
cmp
pop
jmp
or
inc
shl
fists
jo
in
out
movsl
mov
mov
sti
xor
imul
dec
add
push
pop
decb
cmp
add
jp
aam
jp
and
ret
xorb
pop
cmp
leave
xchg
lret
pushl
jl
xchg
mov
xor
subb
mov
mov
dec
xor
cmp
sub
incl
orb
jnp
mov
mov
hlt
aam
mov
pop
cmp
dec
mov
xchg
cmpsl
std
js
cltd
test
xchg
mov
ficompl
adc
cmpsl
idivb
clc
movb
mov
jmp
test
cwtl
mov
incl
mov
ds
add
fnsave
jae
dec
fdivr
fcomip
call
mov
leave
push
jle
mov
lock
sbb
push
lock
popf
mov
lcall
add
and
icebp
xor
inc
out
inc
jmp
cmpsb
dec
std
cltd
aaa
mov
fldenv
jne
lds
cld
jmp
dec
pop
mov
lock
mov
ret
mov
mov
icebp
mov
lret
push
cmpsl
sub
frstor
fistpll
add
ljmp
sti
subb
cld
pop
jae
mov
mov
push
mov
add
mov
pop
jecxz
xor
pop
jmp
lds
mov
out
repz
call
pop
dec
and
mov
leave
pop
shll
push
mov
incl
test
fiadds
and
or
lods
ljmp
xor
decl
int3
mov
ds
mov
loop
stos
pushf
pusha
outsb
int
movsl
cli
test
jo
das
cli
decl
xchg
adc
cmp
cmpsl
xchg
or
mov
mov
pop
fists
pushl
mov
mov
and
pop
cmp
xchg
daa
data16
clc
push
cmp
jge
and
nop
push
push
fld
cld
cmp
insl
xor
fidivrs
out
shr
xchg
or
dec
sahf
test
inc
adc
sbb
sub
inc
push
push
xchg
rorb
sub
inc
or
ljmp
inc
aas
mov
inc
add
xchg
cwtl
push
leave
cmp
out
fucomp
cli
lea
and
xchg
and
dec
stos
mov
fcomip
pop
push
pop
mov
in
outsl
mov
jno
lcall
repz
xchg
jl
insb
jmp
push
lret
mov
mov
in
cli
or
mov
pop
jg
lcall
cwtl
mov
scas
and
push
xchg
dec
mov
dec
cmp
sti
dec
mov
call
imul
lcall
dec
sub
aam
mov
insb
sub
push
lcall
sbb
popa
in
xor
in
arpl
sub
pop
cmp
call
dec
sbb
push
movsl
jle
sub
int
lcall
nop
pop
cwtl
je
jb
cli
imul
xchg
xchg
andb
lods
dec
imul
lcall
and
pop
outsb
xchg
cld
sub
cmpsb
out
and
call
push
xor
mov
jmp
outsb
lods
sbb
popf
repnz
fwait
pop
push
push
ljmp
ja
and
pop
lret
cmp
mov
pop
and
jne
ror
jg
xchg
jmp
test
mulb
fildll
ret
sti
aaa
fimull
ja
cltd
aad
int
push
dec
loop
mov
std
iret
cs
incl
pop
loopne
xor
roll
imul
fldenv
mov
ret
dec
xchg
push
jne
inc
fs
scas
xor
or
jno
mov
jb
mov
jo
ret
push
xor
mov
push
ja
jmp
hlt
mov
push
jo
pop
pop
and
ret
lods
shll
call
mov
imul
mov
jo
mov
gs
xlat
mov
mov
inc
pushl
loopne
lea
xchg
stos
fcmovnb
mov
ret
push
xor
jmp
adc
sub
in
cmp
cld
pop
cmp
pop
roll
jecxz
sub
add
and
std
call
test
out
sbb
jbe
pop
push
xlat
cmp
push
sbb
fdivr
push
pop
and
outsb
adc
shl
jge
xlat
push
add
dec
outsl
xchg
int
dec
imul
fcmovbe
imul
xor
loope
outsb
jmp
insb
sbb
arpl
mov
bound
les
mov
dec
and
cmp
out
ss
dec
adc
pop
aam
xchg
ds
aaa
icebp
jb
clc
call
inc
cmpl
shlb
shrb
cmp
sbb
jg
movsl
out
sub
fwait
mov
adc
aas
jmp
repnz
ss
or
mov
sbb
fdivp
in
std
mov
add
stc
xor
dec
sar
call
xor
aas
pop
out
aas
sub
stc
and
call
in
jg
cmp
push
mov
divb
or
sbb
cmp
pop
mov
loope
sbb
fdivl
sbb
xchg
shlb
mov
pushl
or
repnz
cmpl
xchg
dec
test
inc
pushl
aam
lahf
pusha
fstps
pop
adc
mov
arpl
jg
insb
sahf
push
jmp
xor
add
decl
cltd
push
mov
and
add
pop
cmp
push
je
jg
xchg
mov
ret
mov
sbb
pop
in
data16
push
inc
xor
fucomp
arpl
pop
cld
ljmp
aam
hlt
adc
pusha
cmp
cmp
sbbb
sahf
jne
cmp
push
cwtl
scas
ss
inc
cli
sub
popf
cmovo
jg
and
sbb
out
lret
xchg
pop
inc
push
mov
sti
bound
out
mov
mov
call
enter
mov
pop
in
into
xor
mov
jae
movsb
cmc
mov
rol
insb
mov
sub
lcall
cmp
test
incb
dec
mov
sub
repnz
and
aaa
push
enter
push
cld
incl
scas
xor
add
ds
clc
pusha
pusha
and
adc
pushl
or
imul
lods
orb
scas
dec
pop
push
test
pop
popa
sbbb
or
xchg
mov
xchg
push
call
test
inc
in
into
js
fs
hlt
sbb
ss
mov
mov
cmp
cs
packsswb
xchg
mov
std
inc
test
push
xor
dec
add
ja
lcall
xlat
pusha
divb
cli
pop
push
push
adc
sbb
bnd
call
outsb
ljmp
push
push
in
jo
mov
xchg
sub
je
xchg
adc
inc
mov
cmp
dec
pop
jl
arpl
jns
adc
cwtl
sbb
jns
shll
decl
lock
or
sub
sbb
icebp
and
sbb
dec
xor
ficomps
outsb
sub
add
dec
push
sub
popf
stc
mul
fs
mov
jg
decl
adc
lods
pop
enter
inc
repnz
push
jbe
ja
mov
decl
ss
add
jbe
repnz
cmp
scas
inc
rol
push
fwait
or
inc
push
daa
outsb
mov
mov
stos
out
lcall
std
dec
cmc
in
repz
pop
mov
call
enter
loopne
arpl
sbb
insb
add
or
dec
in
jmp
sub
idivb
push
scas
in
lea
repnz
push
add
mov
jle
fcomip
incl
xor
icebp
adc
xor
xor
sub
insb
xchg
or
dec
cltd
inc
mov
jg
lds
in
ds
out
nop
pusha
cld
fwait
cs
aas
arpl
mov
mov
stos
dec
mov
jmp
lock
pop
push
sub
lret
decl
jb
sub
movsb
sub
inc
cmp
jns
cwtl
cmpsb
mov
mov
jae
inc
in
inc
push
cmp
loop
push
test
pushf
pop
mov
mov
sub
movsl
dec
cmp
scas
fisubl
ror
or
dec
fbstp
popf
dec
fisubrl
ss
xchg
add
cwtl
xor
test
test
out
incl
xor
cltd
push
push
pop
sbb
loop
into
je
imul
scas
ret
lock
jmp
pusha
imul
inc
adc
mov
aam
stos
inc
sahf
pop
outsb
pop
loopne
in
or
pop
inc
jge
jl
shlb
lahf
add
fistps
adc
js
cmp
mov
adc
popa
pop
jp
jp
cmp
lea
insl
incl
out
enter
sbb
rclb
sub
add
jg
outsl
fistpl
add
jbe
out
sub
addr16
call
inc
popa
sub
cmpsb
inc
push
and
cmpsb
daa
popa
push
stc
enter
scas
mov
leave
dec
or
repnz
imul
mov
or
daa
pop
mov
mov
icebp
movlps
fcomip
jmp
mov
lcall
mov
popl
cltd
pop
arpl
sar
lcall
sbb
cmpsb
adc
or
pop
test
xor
pushf
jp
mov
jmp
fdivl
mov
repnz
mov
add
cmc
push
je
add
xchg
cli
cli
pushl
in
out
inc
aam
mov
fistpl
rep
xchg
arpl
pop
mov
or
enter
add
add
in
cmp
jmp
dec
scas
fs
iret
pop
and
jge
incl
pop
dec
adc
or
jns
pop
push
loop
insl
movsb
xor
inc
sbb
ja
addr16
popf
jb
cmp
xchg
lcall
xchg
push
sar
ljmp
xor
jb
pop
or
jne
sub
or
jne
and
jg
movl
lea
ljmp
cli
shr
pop
cmp
fs
arpl
into
mov
xchg
ss
xchg
mov
and
aam
mov
xchg
dec
ret
jno
jge
fisttpll
inc
outsl
add
cld
add
lods
lds
lods
xchg
fcomps
lahf
daa
loopne
xchg
inc
mov
mov
mov
push
xchg
mov
cwtl
and
sbb
incl
xor
insb
cmp
popl
dec
xor
sub
pop
xor
or
xchg
ljmp
jl
ficompl
and
mul
push
sub
lcall
add
cmp
outsl
pushl
xchg
or
dec
dec
sbb
insl
xlat
sbb
mov
sar
mov
stos
stos
dec
clc
pop
mov
fsubrs
loope
push
add
outsb
xor
mov
mov
xchg
fsubrl
xchg
jns
or
arpl
sbb
dec
shrb
outsl
mov
sbb
das
fadd
incl
sub
or
int
pop
inc
xor
mov
inc
jg
test
idiv
stos
test
mov
lock
pop
pop
mov
rcr
jnp
dec
das
popa
dec
scas
call
jp
jno
inc
and
jmp
stos
adc
lret
pop
ja
fstps
add
in
fiaddl
movsb
lock
lcall
pop
dec
outsl
inc
push
xchg
pop
insl
sti
push
mov
sbb
movsl
mov
jmp
decl
jmp
insl
testl
fisttps
je
pusha
sub
incl
insb
or
fldcw
idivl
mov
and
push
inc
flds
push
xor
pushl
inc
mov
xchg
add
pop
mov
push
sahf
stos
or
cmpsb
lcall
dec
sbb
inc
gs
test
ljmp
ja
jnp
fiaddl
jge
mov
xor
lods
lahf
repz
or
shr
aas
stc
jp
inc
pop
aas
shrl
lods
cs
decl
cmp
dec
sub
cwtl
dec
pop
push
mov
test
mov
lcall
jmp
inc
dec
sti
jns
and
and
lret
sub
clc
push
arpl
push
lods
dec
mov
mov
arpl
je
or
pop
mov
jg
pop
fcoml
mov
imul
mov
xchg
xor
add
lods
andl
xlat
jb
xchg
push
sub
or
push
call
icebp
mov
fisttpll
dec
dec
adc
lret
xor
mov
and
push
adc
or
cmpl
push
call
or
pop
inc
xchg
lock
push
inc
outsb
jmp
ljmp
dec
mov
out
jle
cmp
xor
loopne
xchg
aas
pusha
repz
call
test
sub
mov
adc
pusha
mov
inc
pop
hlt
pushl
loopne
sub
imul
mov
pop
sub
jno
shrb
pushl
outsb
add
imul
mov
jnp
cwtl
gs
and
lods
pop
pop
and
or
push
sti
es
lcall
cmpsl
xchg
xchg
cli
loopne
pop
sahf
jnp
stos
test
fs
sbb
ljmp
lods
pop
sbb
fsubrs
mov
imulb
and
mov
jns
pop
and
dec
cmp
clc
lds
cmp
mov
stos
loope
fwait
pop
cmp
insb
push
or
andl
das
mov
mov
fstl
testb
outsl
fstp
jmp
dec
fs
cmpsl
in
jbe
daa
mov
mov
loop
push
aad
adc
inc
xlat
repnz
scas
mov
scas
pop
and
inc
inc
ja
call
sbb
inc
js
xor
arpl
fisubl
adc
lods
cmp
sbb
inc
xor
add
test
jns
or
in
mov
lcall
enter
scas
xor
js
pop
bound
push
and
mov
fcomip
decl
jecxz
and
push
outsb
mov
leave
cmc
hlt
xchg
push
mov
ret
movsb
push
aam
inc
das
ljmp
sbb
pop
int
and
jecxz
idivb
popf
xor
sub
and
test
lcall
or
or
xor
mov
or
inc
inc
in
and
inc
sub
sbb
call
lods
shll
jo
xor
mov
push
jno
dec
jmp
fists
hlt
mov
xor
cmp
sbb
add
dec
cmpsb
mov
mov
jb
sbb
sbb
cmp
jmp
call
push
cmp
add
lcall
cmp
imul
add
or
jge
add
cmp
ljmp
push
pop
popa
push
enter
outsb
xchg
sbb
xor
cmp
mov
jno
xchg
inc
cmp
ljmp
and
daa
adc
xor
test
subb
mov
push
push
pop
xor
add
dec
out
xor
js
rcrl
fwait
jecxz
addl
mov
sbb
popl
jmp
jle
mov
cmp
icebp
push
xchg
or
and
mov
jmp
xchg
dec
and
ss
jecxz
mov
push
int3
push
out
pop
mov
imul
ret
mov
cmpsb
or
push
inc
das
sub
jmp
jmp
inc
imull
push
inc
lea
lcall
push
call
lcall
pop
imul
dec
dec
push
push
sub
inc
xchg
mov
je
fistpll
inc
scas
les
jno
pushl
and
into
out
and
ficompl
dec
xchg
repz
inc
cmp
jno
xor
jno
pushl
lahf
jle
loopne
xchg
cmp
or
jb
pop
insb
xor
es
xor
cmp
jmp
mov
inc
sbb
aas
mov
xchg
das
cmc
add
mov
ja
inc
cld
pop
mov
lret
cmc
hlt
incl
scas
in
dec
aaa
loopne
dec
call
adc
aad
dec
jl
inc
mov
lcall
subb
cmp
pop
mov
jo
dec
subb
iret
xor
outsl
incl
adc
jg
pop
out
pushl
mov
mov
dec
pop
or
pusha
pop
daa
add
ljmp
inc
sarl
mov
rcrl
mov
inc
jno
dec
sbb
mov
fisttpl
nop
lods
js
hlt
leave
in
imul
push
jl
or
add
pop
push
loop
mov
jg
jmp
cmp
sar
out
dec
push
aam
jmp
mov
cwtl
cmpl
or
add
push
jp
rcr
mov
pop
gs
clc
ja
mov
lcall
rol
je
cld
push
cltd
dec
xchg
mov
mov
fmulp
hlt
bswap
xchg
sub
int
pushl
stos
cmp
stos
jp
mull
inc
loop
lods
lret
xchg
mov
decl
sbb
push
repz
addl
les
add
aad
push
xchg
cwtl
rcrb
ds
decl
daa
clc
gs
shll
sarl
jno
ficoms
insl
add
mov
and
mov
and
subb
scas
mov
insl
andb
incl
lret
and
hlt
mov
jnp
lahf
cli
lds
pusha
push
jg
jg
sub
test
jo
xchg
inc
cmpsl
dec
push
or
es
mov
repnz
incl
test
cmp
icebp
mov
aas
sahf
dec
push
shlb
pushf
leave
mov
dec
fcomip
push
pop
mov
dec
into
incl
cld
dec
add
subl
movsb
mulb
push
enter
mov
test
cmp
loop
add
xor
in
incl
fs
xlat
jge
imul
enter
xorb
popf
sbb
pop
call
pop
xor
inc
sub
mov
lods
sahf
inc
das
test
pusha
repnz
rcrb
dec
out
cmp
cmc
mov
lods
fildl
mov
mov
xchg
in
lods
cmpsl
rolb
or
pop
loopne
xchg
iret
cli
push
cs
inc
les
paddsb
decl
push
xor
in
repz
pop
pop
movsb
in
daa
push
hlt
scas
sub
xchg
sub
call
nop
aas
xchg
cmc
ret
cmp
pop
xor
cmc
jecxz
jbe
mull
clc
out
aaa
cmpsl
mov
pop
xchg
pusha
or
pop
pop
les
cmp
pop
pop
rolb
inc
cli
das
les
out
lahf
adc
int3
sarl
cmp
mov
std
xchg
adc
xchg
dec
bound
les
pop
das
inc
or
dec
test
cmpl
mov
fisttpll
aas
int
or
pop
ret
add
mov
dec
aad
pop
fcmovnb
cmp
push
mov
sbb
dec
add
pushl
mov
jge
sub
mov
bnd
sbb
pop
loope
xchg
jae
jmp
jg
jmp
sbb
es
or
in
dec
ret
inc
cmpsb
mov
loopne
call
inc
mov
std
add
aad
add
push
mov
call
popa
sarl
ljmp
pushf
das
jns
test
xlat
daa
les
add
inc
sbb
and
jae
jp
add
incb
daa
push
dec
adc
bound
and
and
dec
into
xchg
mov
xor
testl
xor
loope
push
xor
adc
jnp
inc
and
orl
fcoml
je
fwait
mov
mov
aam
dec
aam
das
xor
out
fcmove
imul
mov
inc
sub
je
movsb
inc
repnz
insl
mov
aad
mov
cmp
in
xchg
mov
mov
pop
push
insb
push
lods
incl
jae
inc
mov
arpl
and
outsb
mov
incl
sarb
mov
mov
adc
popf
or
push
pop
and
je
out
sub
cmp
lcall
jns
inc
fnstenv
popf
push
push
and
jne
icebp
jnp
lcall
lcall
stc
jno
fst
imull
aad
mov
sbb
xchg
sub
sbb
inc
and
pushl
dec
fcoml
jo
movsl
sub
and
decl
mov
pop
dec
jno
lods
dec
repnz
jne
lods
push
loop
call
cmp
mov
push
pop
mov
mov
dec
sub
int3
or
outsl
mov
cli
push
jp
mov
jne
add
into
cmp
out
push
inc
cmpsl
nop
mov
ret
fwait
incb
pop
in
adc
jle
push
nop
cld
mov
clc
decl
mov
dec
push
aaa
xorb
out
inc
push
pop
inc
outsl
push
mov
andl
xchg
cwtl
jge
repnz
xchg
dec
out
pop
jne
scas
daa
into
xchg
int
test
mov
call
mov
jne
shll
mov
or
lcall
pushf
adc
xchg
dec
cltd
cmp
lahf
mov
xlat
lahf
pusha
jg
xor
aad
cltd
pop
adc
fnsave
and
pop
and
xor
jle
inc
arpl
sbb
fs
inc
cmp
lret
mov
fwait
cmp
mov
jl
rolb
outsl
test
xchg
sbb
or
fcomip
jmp
and
lds
and
cli
lret
leave
decl
and
test
sub
mov
xchg
sti
mov
ss
int3
loope
push
es
pop
cmc
jnp
pop
jl
adc
icebp
jmp
ljmp
sub
pop
mov
cmp
call
adc
dec
sbb
mov
pop
sub
jecxz
mov
test
call
or
lods
frstor
je
or
cli
pusha
repz
lcall
loop
jmp
dec
adc
test
fcmovne
add
add
mulb
pop
out
xchg
push
cmpsb
jg
decl
fistl
and
js
pop
mov
fcompl
jnp
pusha
fiaddl
cmpsb
lret
fisttps
je
pushl
pop
jno
cmpsl
iret
jns
dec
out
in
sub
rol
sbb
mov
stos
test
push
std
fiadds
out
sub
jle
add
cmp
ljmp
push
imul
sub
es
jb
sbb
adc
add
mov
stos
hlt
cltd
pushl
std
shll
call
mov
inc
movsl
mov
sahf
pop
jb
mov
decl
jnp
push
mov
fcoms
sub
mov
dec
mov
xchg
add
sar
push
ds
cmc
out
mov
or
sbb
xchg
and
jbe
dec
pushf
aam
loope
xor
incl
enter
xchg
bound
iret
and
xlat
out
sbb
mov
cs
push
scas
ljmp
mov
ficoml
push
push
xchg
inc
out
jl
push
cltd
imul
mov
fistpll
les
mov
sti
lods
inc
decl
pushf
mov
aas
ret
xchg
mov
cmp
fidivrs
ret
inc
or
ljmp
inc
sahf
lea
stc
xor
lock
pop
in
sub
or
mov
fdivp
lcall
mov
or
mov
mov
and
clc
cmp
mov
mov
lea
aam
mov
push
or
mov
push
xor
adc
mov
aaa
inc
push
ljmp
inc
mov
in
je
call
push
sbb
mov
insb
sbb
hlt
pop
and
and
movaps
pushl
test
jp
push
in
xchg
jl
cmp
lea
jnp
iret
mov
adc
xchg
mov
adcl
sub
enter
lret
pop
xchg
stc
jmp
lods
and
test
inc
sti
jbe
cmp
mov
stc
jb
dec
les
sbb
xor
add
cmp
lea
inc
fimull
push
fldl
pop
and
call
nop
shrl
add
adc
ja
sti
jg
xchg
int
mov
push
pop
or
pop
ret
bound
cwtl
inc
iret
xor
and
pushl
lods
xor
ss
ret
lock
inc
mov
lahf
or
pusha
ds
sti
rcr
clc
lcall
jle
imul
mov
out
cmp
or
mov
lret
cmc
mov
xorl
adc
call
mov
bound
mov
push
push
call
out
and
lods
or
sahf
stc
jle
pushl
adc
xchg
pop
daa
jnp
xchg
sub
gs
pop
or
mov
inc
lcall
je
cltd
daa
movsl
mov
lcall
pop
sub
mov
lret
repz
ss
add
and
mov
sub
arpl
mov
xchg
mov
pushl
mul
aas
xchg
sub
or
notb
cld
aas
in
push
dec
repz
xchg
lahf
repnz
call
adc
inc
je
cmp
adc
cmc
and
jecxz
imul
imull
cli
call
and
imul
call
xor
push
lods
and
sub
data16
xchg
push
cmp
int
cmp
ja
decl
out
mov
cltd
mov
aam
push
loope
sub
or
rcrl
inc
dec
push
push
aas
fdiv
cmp
push
cmp
lds
int3
mov
sub
xchg
pop
sti
stos
cwtl
sbb
decl
call
push
sub
testl
inc
jecxz
iret
xor
call
std
xchg
push
xlat
test
je
movsl
xchg
shrl
mov
push
in
adc
cld
incl
fimull
cltd
or
mov
std
dec
adc
mov
lods
push
pushf
sub
lcall
jae
push
add
xor
into
clc
loope
decl
scas
jl
dec
fwait
mov
aas
insb
nop
xchg
pop
push
pop
ja
jg
imul
adc
stc
cmp
lcall
xchg
mov
push
inc
adc
ljmp
pop
test
xor
adc
iret
mov
lcall
pop
lock
lods
inc
mul
cmp
or
scas
out
xor
roll
add
out
fisubrs
sub
xchg
xchg
arpl
fs
mov
out
sbb
std
cltd
inc
in
fisubl
out
clc
cmp
mov
incl
mov
cmc
adc
xchg
jbe
mov
scas
repnz
int
or
ret
pop
jne
cmc
lcall
pop
jmp
mov
mov
cmp
push
xor
sub
jmp
loopne
xor
cwtl
add
mov
popf
insl
mov
and
jnp
incl
dec
out
fidivrl
mov
test
inc
mov
pop
out
dec
aas
xlat
mov
repnz
aas
jo
jmp
adc
mov
loop
mov
pop
fidivl
or
imul
sub
mov
jg
fisubrl
sbb
rcrb
dec
loop
inc
add
cmpsb
cli
jmp
incl
jno
fsubl
setle
mov
add
dec
xor
cmpsb
pop
adc
ja
fmull
loopne
mov
in
test
lcall
mov
das
sub
adc
out
push
lods
mov
lret
mov
mov
dec
sub
sbb
dec
repnz
pop
fistps
or
test
pop
cmp
aaa
lcall
jae
inc
fadds
insb
pop
aam
and
in
sub
sbb
stos
xor
test
ljmp
cs
ds
jno
sbb
or
daa
fadd
dec
push
sub
jle
mov
push
or
sub
inc
mov
push
jp
and
incl
inc
jae
mov
cmpsb
les
dec
xchg
adc
lods
ss
or
push
push
std
jg
add
pushf
lret
clc
icebp
sub
push
test
jno
sar
pop
loopne
add
mov
sti
sti
inc
test
jno
dec
enter
or
push
cld
shlb
jae
insl
aad
jnp
nop
push
pop
adc
pop
push
xchg
xchg
mov
ljmp
orb
xchg
cmpsl
addl
mov
fcmove
mov
jmp
lea
dec
push
pop
test
xor
les
ret
xchg
mov
fsubp
adc
hlt
mov
mov
push
mov
or
sbb
jp
and
mov
lcall
inc
out
mov
call
or
mov
pop
push
xor
jne
jmp
ljmp
mov
mov
fnstenv
inc
xchg
sub
cmp
inc
xchg
cwtl
lret
repz
cmp
inc
lret
sbb
add
add
das
cmp
call
jb
mov
rcl
inc
pop
pop
dec
add
lds
jl
add
pushl
into
inc
int
adc
mov
cmpsl
mov
icebp
mov
in
sbb
inc
sub
jmp
or
ret
fadds
out
mov
stos
xchg
fdiv
repz
fnstcw
mov
jge
or
dec
insb
add
out
pop
mov
daa
es
or
lock
xor
ljmp
in
xchg
mov
in
gs
pop
push
into
out
sahf
icebp
mov
mov
adc
cmp
dec
and
jnp
andl
inc
int3
inc
in
pushf
mov
in
outsl
adc
andb
and
inc
cmp
outsl
cli
pushl
mov
dec
mov
ss
xor
insb
or
stos
ficomps
jmp
pop
inc
sbb
xchg
fisttpl
aam
movsb
add
mov
mov
push
push
cwtl
pop
ficoms
out
ficomps
add
leave
dec
sub
jmp
and
test
pushf
inc
cmp
mov
mov
outsl
icebp
dec
mov
out
sahf
mov
mov
in
mov
ja
cmc
pop
lcall
push
mov
cmpsb
lea
pop
pop
add
sub
clc
jecxz
mov
iret
aad
cmp
mov
imul
bnd
push
imul
fwait
inc
lcall
dec
out
stc
push
sub
push
mov
lea
rorb
lcall
mov
add
push
mov
xor
mov
ud0
jl
or
push
dec
test
out
out
sbb
adc
xor
les
mov
lcall
hlt
out
push
imul
das
jmp
jb
or
mov
ret
inc
es
jle
fistps
push
aas
andl
adc
sub
rcl
and
cwtl
cmp
pushl
dec
adc
jnp
cmpsl
jmp
pop
xchg
sarl
adc
rol
dec
ja
mov
ficoms
testl
fadds
pop
dec
or
mov
scas
enter
pushl
inc
xor
pop
leave
popa
pop
into
stos
mov
aaa
inc
push
sub
icebp
ror
xchg
cmp
add
push
mov
inc
out
and
ss
adc
fwait
jg
mov
ss
adc
rcrb
add
lods
jb
dec
lcall
or
or
cmp
mov
out
cli
cs
jmp
pop
mov
mov
js
xchg
fmull
loope
adc
xchg
adc
pop
jecxz
cs
cli
mov
mov
mov
pop
outsl
dec
out
lock
mov
pushl
push
adcl
jnp
scas
pop
inc
iret
pusha
xchg
outsl
lods
pop
jbe
jge
cmpsb
mov
and
enter
mov
jg
lcall
cltd
in
push
decl
sub
loope
jnp
mov
mov
inc
cmp
incl
cltd
mov
adc
pushl
or
push
into
xchg
ret
ljmp
and
hlt
shll
sti
jo
enter
sub
ljmp
jle
andb
in
lods
jle
and
jmp
inc
daa
jp
call
xchg
ds
xor
stos
xchg
or
fistpll
xor
mov
adc
pushl
mov
ficoml
mov
mov
xlat
jno
add
pop
lea
mov
jg
or
mov
sub
cmp
lahf
mov
insb
es
jp
cs
jg
pushl
in
push
push
imul
incb
xchg
sbb
sti
push
ljmp
mov
inc
ja
lahf
pop
outsl
fsubrs
jns
je
ficoml
xchg
mov
pop
mov
call
mov
inc
add
out
mov
fsubr
mov
cmp
pushl
push
test
cltd
lcall
daa
imul
pop
cmpb
mov
clc
xchg
mov
jne
test
popa
cmp
pop
and
idiv
nop
mov
call
pop
fisttpll
stos
ljmp
cwtl
jns
incb
sbb
or
xchg
add
pushl
testl
aas
enter
arpl
inc
adc
cmp
cmp
sbb
cmp
hlt
mov
lock
mov
cmc
jae
sub
les
adc
decl
dec
cmpsl
mov
les
cmp
jns
dec
pushf
dec
xchg
or
shlb
cmpsl
pop
loop
add
hlt
loop
push
sbb
push
or
xchg
stos
cmp
xor
and
push
fisubrs
mov
outsb
jge
dec
mov
xor
insb
push
push
mov
fs
lock
inc
or
insb
and
addr16
into
nop
lock
mov
out
lahf
rolb
loop
nop
xchg
and
sarb
cwtl
incl
mov
cli
pop
ret
inc
jae
ss
arpl
add
fnstcw
jmp
adc
scas
cli
lcall
sti
add
test
leave
movsl
inc
flds
or
cld
sbb
jg
and
inc
jecxz
jp
sub
lock
jnp
push
xchg
addr16
mov
call
movsb
neg
pop
inc
lret
push
jp
mov
pop
outsb
sbb
outsl
adc
dec
and
je
fwait
or
enter
scas
les
mov
push
movsb
push
mov
jge
adc
pop
fistpll
pop
sbb
sbb
and
or
incl
mov
fdivs
cs
test
cmp
mov
pop
mov
sub
cli
out
sbb
ret
mov
sbb
das
cmp
movsb
push
jae
and
pop
std
mov
and
xor
and
mov
ljmp
push
mov
mov
cld
lock
imul
das
cmpsb
cmc
or
mov
xchg
xor
dec
xchg
ss
ljmp
push
mov
push
scas
xorb
int3
test
fidivrs
mov
mov
ret
pop
call
mov
out
fwait
xor
cmp
sbb
js
cmpsb
rol
push
or
pushl
lret
jne
cmp
test
lret
cmpsl
xor
inc
xor
pop
rcr
mov
or
mov
pop
idiv
jmp
fldl
or
sbb
and
cltd
cmp
adc
iret
stos
popa
adcl
sahf
mov
mov
xchg
sahf
shl
mov
js
mov
ljmp
fnstsw
cmp
test
lcall
test
cld
decl
sub
div
jb
gs
xor
je
mov
sub
xor
incl
stos
sub
ret
sub
notb
stos
dec
pop
movsl
movsb
xor
xchg
add
hlt
inc
xchg
push
lcall
sub
jmp
mov
push
inc
out
pushf
icebp
push
jl
sub
jmp
xor
pop
loope
mov
filds
jle
shll
call
dec
pop
jo
inc
dec
ss
gs
mov
cli
out
dec
daa
inc
or
ss
mov
and
or
sbb
in
aaa
scas
mov
push
sbb
jno
pop
cld
mov
je
repz
mov
mov
inc
mov
or
call
ret
test
mov
inc
pushf
inc
push
fsts
addl
decl
push
dec
add
adc
subb
scas
sub
inc
and
xor
out
mov
incl
pop
daa
pop
cmp
and
ret
incb
loope
sub
mov
incl
adc
xor
fldcw
jns
sbb
cmp
lcall
in
xor
jns
ds
mov
out
clc
scas
scas
cwtl
push
inc
repnz
xchg
push
sahf
sub
push
cmp
rcrb
sub
call
insl
aas
pop
das
push
sub
cmp
cmpsb
iret
lock
out
or
incl
cmp
xchg
and
aam
clc
sarb
push
data16
leave
jb
pusha
imul
mov
push
movsb
inc
mov
stc
inc
addr16
push
fnstcw
or
dec
inc
add
mov
rep
sub
cmp
add
dec
sub
sub
mov
ss
cmp
icebp
mov
mov
jne
mov
xor
and
out
cli
ljmp
mov
iret
xchg
ret
fwait
mov
xchg
scas
imul
ds
jbe
nop
imul
in
das
fwait
sub
in
jmp
push
lahf
add
sahf
lret
xor
adcl
push
adcl
popa
jne
insb
cltd
loopne
addb
decl
adc
movsb
mov
inc
cs
shl
pop
mov
out
bnd
scas
cli
call
loopne
call
mov
pusha
loopne
lea
hlt
jl
sub
jle
or
mov
inc
pop
or
loopne
and
arpl
cltd
aas
addr16
cmp
lds
jecxz
rorb
dec
xchg
test
inc
dec
dec
fisubrs
aad
cmpl
xchg
arpl
mov
push
dec
xor
fs
adc
or
jle
pop
adc
pop
cltd
aam
decl
xor
aam
idiv
outsl
cli
jg
or
out
push
mov
mov
call
call
fs
dec
adc
in
lcall
push
dec
adc
decl
movl
add
pushf
adc
dec
mov
sti
das
pop
hlt
popa
cmp
decl
rclb
jp
pop
incl
outsl
cwtl
lahf
not
arpl
sub
mov
adc
popa
loop
xorl
mov
push
nop
and
mov
clc
add
decl
js
int3
mov
sbb
rol
adc
scas
inc
jmp
addr16
rcll
mov
fchs
mov
call
mov
cmp
dec
sub
mov
jnp
adcl
fnstsw
pop
add
mov
ljmp
mov
lret
sbb
jle
or
sub
pop
mov
decl
mov
pop
cmp
jnp
jae
push
mov
mov
xchg
hlt
lcall
ret
mov
test
xchg
jmp
add
mov
fisubrs
decl
xchg
cmpsb
push
hlt
ljmp
jbe
add
push
jae
inc
sbb
mov
call
push
ficompl
xchg
stc
pop
and
loopne
cs
xchg
add
inc
add
sbb
addr16
pushl
sub
inc
shll
cmp
lcall
xchg
and
ret
xlat
jnp
shl
pushl
out
or
mov
sbb
mov
pop
inc
daa
mov
fsin
xlat
xor
stos
xor
incl
movsl
mov
cmpsb
jg,pt
cld
sbb
insl
sub
out
cmp
mov
cmpsb
and
addr16
mov
jp
jecxz
lock
flds
fidivrl
and
push
jl
dec
cmpsl
xor
mov
decl
inc
out
add
scas
fdivs
and
sbb
mov
je
pop
scas
sub
call
sub
jg
inc
fmull
jge
mov
dec
in
jnp
mov
fadd
and
mov
daa
xor
lods
popa
sbb
push
out
mov
push
cld
ljmp
add
pushf
call
push
push
nop
pop
mov
mov
add
repz
es
xchg
push
scas
adc
inc
rol
ljmp
sti
test
sub
test
stos
jle
loope
jg
jg
in
addb
mov
call
sahf
pop
or
mov
sbbb
shl
xorl
clc
es
scas
xchg
imul
cmpsl
popl
dec
mulb
pop
inc
sub
jg
dec
inc
jns
stos
push
and
inc
inc
jne
lea
xor
sbb
scas
ljmp
je
filds
push
sbb
mov
inc
dec
popf
xor
xchg
fimull
out
and
ljmp
ljmp
popa
xchg
out
aas
mov
incl
fildl
jno
subl
bound
dec
aas
push
stos
or
mov
imul
pop
jmp
pop
sbb
sti
mov
ret
movsb
push
jecxz
mov
cmp
loopne
cli
jb
out
les
push
arpl
pushl
add
pop
jp
and
and
out
jb
je
mov
xchg
shlb
les
mov
inc
pushl
mov
mov
push
arpl
cld
fucomi
pop
leave
test
inc
test
loope
fstpt
testb
mov
mov
daa
cmc
xorb
mov
jbe
add
aam
icebp
fldenv
pop
cmpb
xchg
cwtl
fsts
iret
ror
sbb
xor
mulb
stc
xchg
clc
jmp
scas
lods
sub
cmpsl
mov
lods
cmpsb
mov
cmp
push
test
pop
out
pushf
mov
popf
es
sbb
stc
outsw
push
out
mov
call
je
fwait
adc
int3
cmc
cmpb
xchg
rorb
or
xor
push
and
incl
outsb
xor
sbb
adc
lock
xor
pop
inc
add
sti
subb
inc
hlt
fcmove
mov
inc
int
insl
iret
ret
addr16
jecxz
mov
inc
mov
hlt
lret
iret
test
clc
cmpsb
inc
and
stc
cmp
sub
or
dec
mov
add
ljmp
shlb
xchg
xchg
dec
sub
cmp
xchg
mov
aad
cltd
add
inc
mov
lcall
ss
loop
mov
cmp
push
mov
lea
arpl
and
sub
dec
hlt
push
loopne
enter
mov
in
repnz
lret
fiadds
aam
and
inc
movsl
push
mov
shll
call
in
cmpsb
xchg
test
imul
inc
data16
lcall
cld
sbb
mul
out
ror
stc
and
iret
je
push
push
or
mov
push
push
dec
xorl
jecxz
stos
add
cmp
testl
lahf
js
faddl
scas
xchg
rcr
int
lds
jne
testb
and
jmp
jge
out
and
push
push
rcll
jo
sbb
test
sbb
scas
xacquire
mov
cli
cltd
xlat
xchg
mov
mov
div
icebp
push
fwait
sbb
in
shll
cmpsb
and
movswl
mov
cmp
jmp
inc
cmpsl
mov
sub
xor
lcall
dec
jg
jge
inc
xchg
pushf
loopne
xlat
add
ret
xchg
fstps
mov
in
pop
stc
out
add
les
push
int3
out
fadd
adc
rclb
rcrl
inc
push
sbb
incl
das
push
push
mov
mov
ja
xor
leave
and
sbb
pop
orb
rclb
dec
sti
cmp
lds
out
ljmp
les
fdivl
aas
ljmp
inc
or
test
sub
mov
int3
mov
adc
xchg
xor
dec
enter
aas
loop
cmp
loope
push
jmp
fidivrs
fcmovne
cmpsl
sti
rol
loope
out
adc
and
inc
mov
jg
xor
cmc
out
subb
stos
aam
into
cwtl
lods
xchg
punpckldq
pop
jnp
mov
and
fs
push
or
out
movsl
jge
add
and
js
sub
xchg
ds
jg
repnz
push
push
or
dec
mov
jnp
scas
mov
mov
into
testl
jbe
jae
les
lcall
mov
sbb
mov
test
jp
adc
pop
jb
lds
sbb
push
jo
xor
mov
or
ja
cmp
inc
and
xchg
and
dec
jmp
push
sub
push
jecxz
sub
sahf
int
outsb
sarl
movsl
or
push
dec
repnz
or
incl
negl
fisttpll
xor
ret
nop
xchg
cmp
cmpsb
outsl
mov
ret
or
or
cmc
push
or
cmp
push
pushl
pop
jle
mov
jns
lds
ljmp
ret
jmp
cld
imul
inc
nop
pop
adc
and
sbb
test
sbb
mov
push
test
mov
sbb
fadd
ljmp
xchg
xor
enter
clc
mov
arpl
dec
inc
das
std
pusha
out
inc
cmp
mov
sub
je
test
adc
test
pop
sti
fdivr
or
ljmp
and
daa
shlb
arpl
mov
or
jg
sbb
lret
add
jmp
ret
mov
fistl
mov
lcall
add
lods
ret
xlat
lret
xchg
jnp
xor
mov
lcall
das
mov
xchg
and
fs
inc
adc
jb
jg
jg
sysexit
or
cmp
je
insb
sbb
clc
in
mov
testl
pushl
inc
pop
hlt
stos
je
cmp
mov
pop
fldln2
js
pop
jle
inc
ja
std
scas
dec
scas
fistpl
pop
movsb
fwait
jg
iret
pusha
je
cmpsb
int3
push
or
lds
sbb
add
out
inc
sbb
aaa
inc
and
adc
mov
std
and
hlt
pushl
dec
insb
aad
pop
test
sub
mov
xor
inc
push
out
lret
fisttps
add
mov
out
mov
mov
test
xor
test
leave
mov
jmp
cmp
mov
dec
notb
mov
rcrb
clc
inc
sti
aas
push
lret
sbb
dec
jmp
jmp
cmp
lret
pop
push
mov
insb
push
pop
ret
xor
loop
jne
or
lcall
adc
imul
jl
data16
and
aad
call
mov
in
lcall
sbb
xchg
mov
clc
movsl
inc
hlt
add
int3
mov
pushl
lret
std
lods
cmc
mov
mov
outsb
out
push
aas
arpl
shrl
cmpsb
push
ljmp
rclb
insb
inc
xor
mov
jmp
fsubrs
ljmp
aam
in
push
icebp
dec
xchg
cmp
js
insl
mov
std
push
cmp
sbb
mov
data16
shll
outsb
mov
loope
cs
call
std
insb
mov
jbe
inc
adc
cmpb
xchg
sub
mov
incl
push
stc
leave
sarl
jl
mov
sub
aaa
leave
xor
jge
mov
push
lret
pushl
cwtl
xchg
mov
inc
idiv
fsubrl
into
cmp
jl
push
xchg
idivb
sar
incl
mov
mov
fdivl
jle
and
mov
add
mov
mov
cld
jnp
xchg
dec
cmpsl
in
les
adc
push
cld
pop
pusha
or
xchg
cld
mov
jnp
pushf
xchg
lret
xchg
jmp
xchg
cs
cli
lods
andb
lret
adc
jb
xor
pusha
lock
ljmp
mov
ja
fmuls
xor
rorb
mov
test
mov
mov
int3
mov
cmp
ja
mov
scas
sub
ljmp
enter
jl
stos
popa
js
inc
xchg
leave
ljmp
pop
in
add
mov
mov
jnp
test
out
ljmp
or
and
hlt
rcr
int
testl
or
fnstsw
pushl
call
dec
out
icebp
in
pop
jl
aam
imul
fcompl
mov
jmp
cmp
xchg
adc
push
jp
test
cs
loope
mov
sbb
aaa
jb
jmp
mov
in
lds
fadds
jmp
adc
pushl
aaa
xchg
inc
and
jnp
ljmp
push
pop
jle
js
push
fcoml
hlt
push
or
jmp
rorb
push
sbb
leave
popa
inc
push
insb
sub
in
aaa
out
push
xor
and
std
xchg
adc
jmp
xorb
out
out
bound
leave
dec
adc
xchg
jmp
fcmove
test
sbb
inc
jns
test
test
aam
xchg
mov
loope
jg
xchg
jno
mov
inc
sar
cs
cmp
cmpsl
xlat
movsl
popf
lea
mov
loop
js
sbb
xor
push
dec
or
jnp
mov
or
decl
pushl
adc
adc
aaa
das
mov
leave
push
fistl
mov
push
or
dec
js
inc
mov
xchg
test
cli
pop
xchg
sbb
daa
pushl
jo
adc
jae
fwait
hlt
jns
xor
jmp
mov
movsb
nop
dec
or
decl
xorl
sub
inc
fists
jnp
mov
jg
cmp
xor
stos
lock
out
xchg
pop
xchg
sbb
pop
inc
into
into
loope
mov
ss
mov
out
xchg
cmpsl
clc
pop
cmpsl
mov
inc
std
cwtl
add
insb
adc
in
sti
push
mov
ljmp
sub
sbb
inc
les
jg
dec
push
leave
mov
add
bound
and
push
lcall
mov
cltd
xlat
stc
ret
or
js
mov
mov
test
adc
jmp
xchg
jo
jnp
hlt
cmpsb
inc
xor
shlb
push
xchg
testl
incl
jle
out
ret
mov
xor
jge
jne
push
aas
repz
fwait
ja
jg
test
sbb
lahf
inc
pop
mov
cmp
push
aam
jp
call
ljmp
lret
xor
xlat
scas
dec
sub
imul
fs
push
fwait
add
sub
ljmp
adc
xor
jns
addr16
ud0
lcall
inc
stc
lock
adc
cmp
les
mov
ljmp
adc
shlb
test
add
je
fimuls
mov
lcall
aas
push
sub
xchg
fsubrs
push
push
hlt
mov
push
out
inc
iret
call
lock
xorb
pop
mov
ja
repnz
shll
aam
je
mov
sub
pop
xor
cmpsl
js
ret
xor
enter
cld
mov
lods
xor
push
ret
loop
out
sub
je
ret
mov
adc
cli
iret
cmp
adc
inc
movsb
xor
xor
cmp
mov
mov
pop
sub
dec
or
add
mov
add
adc
incb
imul
cmp
sbb
add
mov
jo
xchg
out
pop
mov
xchg
lcall
into
popf
dec
mov
xor
icebp
xchg
xlat
sbb
icebp
jle
add
xor
cs
and
inc
jecxz
push
outsb
addb
clc
ffree
inc
pop
mov
popa
andl
cli
adc
pushf
cwtl
and
push
push
fcoml
cwtl
stc
push
mov
push
xchg
rcrb
jbe
in
xchg
cmp
addr16
out
sub
mov
inc
cltd
ljmp
or
jno
push
jg
das
imul
jmp
jmp
jb
stos
popf
xchg
adc
decl
or
push
ljmp
mov
das
pushl
adcb
data16
mov
rorb
call
jle
aas
add
adc
stos
mov
pop
sbb
fisttps
iret
jo
cmp
incl
jge
dec
popf
jb
lahf
arpl
adc
js
mov
decl
sub
mov
sub
lods
pop
add
push
push
mov
idivl
out
insl
xor
jge
lock
inc
mov
xchg
push
sbb
dec
sbb
dec
and
mov
xchg
mov
push
mov
push
and
out
cltd
arpl
call
call
insb
jns
mov
movsb
and
and
das
js
out
xchg
push
imul
test
mov
jns
sahf
jns
push
add
or
sub
mov
xor
mov
fisttpl
mov
loope
cmp
bound
pop
mov
decl
addl
push
push
inc
in
sbb
into
orl
sahf
mov
push
mov
pusha
pop
jo
imul
mov
pop
and
lea
sbb
jl
or
rcrl
hlt
or
pop
pop
sbb
addb
sbb
fcompl
cmp
adc
cmp
lcall
leave
mov
jp
cwtl
cmpsl
xchg
mov
arpl
incl
cld
cmp
aad
dec
lods
mov
sub
push
iret
mov
sti
adc
add
call
stos
jbe
mov
aad
push
xchg
cltd
scas
cmp
cmp
jecxz
das
movsb
imul
popa
or
jl
pop
sub
dec
mov
jmp
cmp
adc
sbb
enter
jp
adc
mov
call
mov
dec
mov
inc
aaa
ficomps
adc
sbb
mov
dec
mov
ljmp
inc
adc
mov
push
mov
subl
pop
adc
out
into
rorl
or
hlt
dec
test
pop
push
mov
add
in
pop
jge
decb
push
ret
mov
loope
fdivrl
pop
cld
fs
sub
mov
xchg
test
pop
ss
mov
adc
xchg
popf
outsb
ret
incl
icebp
push
jbe
sub
or
add
fisttpll
fwait
sbb
cld
incl
mov
jb
dec
cltd
xchg
in
enter
lret
clc
and
out
inc
add
xchg
sub
add
dec
cs
in
test
in
fs
xor
inc
xchg
jg
xor
aam
lods
jbe
cmp
ljmp
popa
push
add
clc
push
cmp
jl
je
mov
lcall
adc
in
call
aas
js
sahf
ss
mov
dec
push
dec
test
outsl
in
jmp
mov
push
or
inc
cltd
sub
testb
dec
sbb
adc
insb
push
xor
xor
lcall
adc
sti
cmp
roll
adc
push
or
mov
push
adc
mov
insl
xor
or
out
clc
stos
sti
cmp
and
addl
test
fldl
sub
decl
inc
in
cmp
pop
cli
inc
inc
pop
scas
mov
cmpsb
dec
mov
fsubrl
orb
call
pop
xorl
cmp
adc
ds
mov
fucom
sbb
insb
orl
ror
mov
pushl
jecxz
fwait
pop
pop
and
gs
aad
cwtl
dec
sbb
mov
push
push
enter
pushl
and
pusha
dec
xchg
shll
fs
bnd
iret
push
and
xor
dec
icebp
mov
jl
pop
push
hlt
inc
dec
sub
or
inc
mov
pop
sar
rolb
ljmp
test
bound
das
sub
sub
stos
aad
dec
adc
xchg
test
sbbb
call
clc
incb
std
or
pop
ret
loop
xchg
jl
shl
cmp
fldl
repz
mov
pop
sbb
call
mov
xchg
les
and
test
xchg
jg
add
sbb
mov
pop
je
mov
pop
pop
fwait
out
int
aam
add
mov
dec
pop
cmpsl
jo
jmp
test
test
aaa
dec
dec
test
add
mov
andb
ds
or
test
fdivl
insl
jne
sti
jne
shl
call
xchg
sti
mov
addr16
mov
pop
push
in
fwait
scas
xor
inc
xor
ficomps
addr16
decl
pop
mov
sti
cwtl
inc
gs
lods
xchg
rol
mov
sbb
clc
push
pand
decl
out
imul
xlat
cmpb
divl
mov
and
decl
dec
pop
ljmp
push
dec
and
or
push
int
dec
mov
mov
incl
out
addb
enter
repz
mov
leave
aam
lcall
cmp
and
lcall
or
jo
fidivrl
icebp
cwtl
mov
hlt
pop
fdivs
or
dec
jp
dec
sbb
stos
mov
in
jb
orb
jmp
sarb
mov
lcall
add
push
mov
fstpt
xor
inc
rclb
push
aam
es
out
cmp
call
std
dec
inc
in
fsubrl
je
nop
mov
xchg
xor
adc
stos
push
fcomip
call
push
lods
out
add
sbb
jno
mov
in
xchg
push
or
call
popa
in
adc
sub
sti
jp
lods
bound
ljmp
or
pushf
lods
or
xor
pop
cmp
pop
out
pop
xlat
cwtl
mov
fisttpl
js
inc
mov
lret
addr16
fsubl
mov
jle
ss
pop
dec
inc
push
dec
clc
call
out
ret
mov
pop
xchg
jne
inc
inc
outsl
jl
lcall
imul
outsb
sub
roll
lods
andb
lock
imul
push
mov
sub
inc
adc
add
pop
dec
dec
pop
jl
inc
decb
dec
inc
xchg
stos
sbb
cli
scas
pop
jae
popf
add
jecxz
sub
mov
js
jae
inc
mov
cwtl
xchg
stos
jb
adc
movsl
rcl
add
mov
or
repz
cmp
inc
shlb
pusha
out
fstps
jmp
push
aam
stos
scas
int
je
or
gs
movsl
xchg
cmp
ret
ja
or
lcall
fdecstp
xchg
fucomip
test
and
fptan
loop
pop
inc
sub
dec
aad
decl
push
clc
adc
or
repz
jo
push
xor
cmp
sar
decl
aam
ficomps
jg
dec
lea
push
sbb
xor
ljmp
cmp
testb
icebp
push
ret
pop
stc
test
outsb
sbb
ret
or
pop
jnp
mov
mov
push
dec
push
pop
in
stos
pop
sub
fisttpl
cmp
imul
and
in
hlt
loop
mov
aaa
and
push
cld
rcll
call
adc
insb
rcll
dec
mov
arpl
jbe
mov
jb
scas
adc
push
inc
jo
ljmp
call
bound
pop
clc
pop
int
mov
cmc
ljmp
fsubs
push
clc
adc
inc
sub
xchg
mov
decl
add
arpl
xor
push
jbe
clc
mov
in
sbb
fcomip
ljmp
or
test
movsb
in
sub
push
call
loope
sub
sub
mov
fmull
push
adc
add
jecxz
scas
pop
aaa
in
mov
enter
and
leave
decb
subl
mov
pop
fidivrs
cmp
pop
rcrl
and
mov
jl
or
push
jne
sub
adc
sbb
mov
jge
aad
mov
push
fcomps
cmp
mull
xor
mov
shrl
and
in
jbe
in
sub
stos
sub
cli
mov
and
outsl
clc
subb
stos
cmp
and
popf
xchg
push
cmp
mov
aas
mov
test
xor
into
insl
xor
pop
sbb
xor
cli
jp
mov
mov
mov
dec
insl
popf
into
int3
adc
lods
insb
mov
and
lds
roll
jecxz
in
xchg
gs
mov
mov
lcall
shll
mov
cld
inc
pop
pop
imul
sbb
xchg
adc
mov
cmpsl
out
mov
call
inc
jns
fdivrl
mov
mov
cltd
dec
leave
popf
loop
test
push
mov
int
mulps
movsb
popf
inc
aam
xor
insb
and
push
cs
iret
loopne
or
stos
rclb
incl
add
pop
aad
addr16
icebp
out
jl
add
lcall
push
outsb
and
ret
add
sbb
mov
push
dec
mov
or
stos
jae
sbb
sub
inc
cld
popf
dec
mov
pop
jne
jg
test
adc
pop
mov
outsl
ds
and
mov
sub
or
dec
out
jp
roll
xor
push
xlat
adc
stos
stc
lahf
add
mull
in
pushl
adc
push
jmp
in
fistl
mov
out
ds
inc
jmp
sbb
cmp
jmp
shl
es
jb
rclb
cmp
sub
mov
imul
incl
popf
movsl
inc
mov
fwait
xchg
push
mov
pusha
outsl
pushf
ja
out
lea
icebp
cwtl
add
mov
repz
mov
fcoms
xchg
push
je
ret
push
mov
sahf
fcmovbe
notb
mov
fsubs
add
pop
sub
frstor
test
stc
insl
cwtl
mov
jns
mov
jmp
or
aas
xor
add
adc
fsubs
lcall
pop
outsl
sbb
lods
fsubl
push
push
jno
push
pshufw
fmuls
mov
lcall
or
leave
lea
sbb
xor
roll
clts
sub
nop
incl
pop
jne
lcall
jl
clc
cmpsl
sbb
out
pushf
shl
mov
push
dec
call
lcall
mov
imul
xchg
sbb
incl
lret
adc
and
rorl
xchg
stos
outsl
and
aas
lcall
fistpl
xchg
and
inc
or
mov
jg
jg
sbb
sbb
cmpsb
leave
bound
idivl
push
and
hlt
mov
sbb
aad
hlt
aas
sbb
gs
pop
jae
xchg
out
cli
sti
sbb
mov
sbb
and
sti
mov
scas
mov
decl
pop
mov
in
push
push
pop
xchg
mov
xchg
mov
push
dec
lock
ljmp
jbe
cld
in
sarl
nop
mov
cld
orb
lahf
sar
fisttps
mov
add
jmp
lods
test
jl
lods
insl
cmp
incl
jmp
cmp
test
js
xor
push
cld
ficomps
movsb
outsb
fistps
xor
das
mov
nop
jno
inc
adc
mov
sub
jg
nop
ljmp
scas
mov
mov
pusha
test
xor
jo
cmpb
lcall
adc
fstps
cmpsb
lods
loopne
xor
cltd
xor
sbb
movsb
scas
push
cmp
cmp
inc
push
sub
pusha
and
roll
out
aam
mov
xchg
cmp
push
aaa
shl
push
mov
in
pop
in
ret
mov
sub
subl
mov
inc
imul
jmp
loop
ret
es
aad
aam
adc
loop
cmpsl
sbb
loop
adc
ljmp
mov
lods
nop
mov
pop
xchg
mov
xor
xchg
mov
cmp
jmp
push
inc
addr16
repz
cli
mov
sbb
mov
out
jmp
and
leave
sbb
mov
dec
adcb
inc
mov
jg
out
insb
imull
sbb
sar
jg
sub
mov
sub
insl
mov
xchg
or
stos
push
icebp
sub
jg
jge
pop
sub
cmp
adc
fmull
sahf
inc
mov
fdivr
mov
or
pop
cmp
fwait
push
inc
cmpsb
jae
inc
in
aaa
pushl
mov
fistpll
xchg
inc
adc
iret
xchg
jae
lret
mov
add
cmp
dec
sti
fucomi
push
call
xor
mov
fnsave
icebp
rorl
adc
mov
sti
gs
xchg
in
xor
loope
or
pop
loope
push
jp
adcl
mov
sbb
adc
sub
cmp
test
sbb
ljmp
imul
mov
mov
outsl
scas
idivb
iret
cmp
incl
and
add
cmpsb
sbb
xchg
and
repnz
aas
dec
imul
xchg
or
jmp
or
lea
rclb
add
mov
pop
inc
xchg
shll
scas
hlt
jmp
mov
sub
xor
push
ds
sahf
addr16
dec
mov
call
scas
fldl
cmp
mov
mov
das
rol
mov
jb
js
clc
decl
sub
push
je
fistl
push
jmp
mov
mov
call
pop
enter
les
xchg
int
cwtl
int
dec
sbb
iret
xchg
pusha
daa
inc
ljmp
mov
jns
cltd
mov
cmpsl
hlt
jbe
fdivrp
ljmp
dec
into
mov
or
dec
sbb
subl
dec
push
into
dec
iret
xchg
fs
jmp
jnp
scas
mov
pop
repz
outsl
sti
fwait
push
mov
sub
cmp
sar
sbb
popa
ret
cmp
push
dec
xchg
sarl
fldt
cmpsb
pop
rclb
loop
pop
sub
aas
dec
xor
sub
pop
ss
int3
adc
stos
dec
loope
mov
sti
adc
xchg
leavew
ds
and
sub
lods
mov
jp
jg
push
dec
jg
inc
push
mov
loop
jnp
jl
jl
hlt
stc
jmp
jl
mov
push
in
mov
pop
xchg
or
sub
or
or
cli
lock
mov
cmp
pop
jns
jge
inc
push
push
les
jbe
push
jno
or
mov
das
jnp
mov
outsl
repnz
sarl
mov
out
xchg
mov
jmp
aam
imul
repz
mov
imulb
movsl
adc
loopne
sahf
gs
ljmp
enter
mov
test
in
or
pop
or
xchg
hlt
add
cmp
pop
rolb
lcall
lcall
lcall
mov
xchg
mov
in
ret
fsts
in
mov
jmp
rclb
les
cmp
ret
out
xor
push
arpl
ljmp
inc
mov
inc
pop
xchg
jl
int
das
stos
jbe
call
mov
cmp
out
scas
loope
push
mov
mov
ja
xor
push
int
sub
stc
xor
mov
xor
adc
push
subb
sarb
jns
fiadds
sti
movl
mov
jne
add
incl
mov
inc
iret
cmpl
push
dec
push
dec
adc
jb
fdivr
push
icebp
mov
jbe
cmp
add
or
mov
mov
stos
es
subb
pop
jg
incl
icebp
sbb
xchg
leave
adc
jo
cmp
xchg
std
in
shll
mov
dec
fs
and
mov
daa
rolb
scas
jbe
in
clc
jl
out
pop
add
leave
mov
jg
cli
jmp
jnp
xor
rol
jp
jg
es
pop
push
mov
cmp
push
jge
ret
aad
push
inc
mov
jmp
sbbb
sbb
mov
dec
movsb
jp
xchg
cmc
add
repz
mov
pop
inc
insb
idivb
test
cld
push
sub
rclb
adc
and
and
add
or
xor
push
cltd
incl
repnz
les
fsubrl
mov
test
cmp
jno
fdivrp
push
orl
mov
jmp
sub
xchg
push
mov
sbb
mov
mov
jbe
mov
mov
mov
mov
push
xchg
inc
clc
mov
cltd
xor
incl
xchg
adc
inc
cs
xchg
dec
sbb
arpl
sub
mov
pop
fwait
mov
adc
aam
loop
cmp
jno
into
pop
mov
and
lahf
pop
test
push
clc
outsl
and
pop
sub
mov
pushl
push
lcall
jne
cld
les
xchg
pusha
scas
add
fildll
cmp
sbb
aad
in
mov
cs
stos
inc
cmp
adc
adc
cmp
int3
js
ret
hlt
sub
mov
decl
shll
mov
dec
imul
xor
enter
xchg
mov
scas
lds
mov
cmp
in
outsb
dec
rolb
jmp
rcr
icebp
xchg
mov
test
dec
push
aaa
decl
cmp
or
incl
push
xlat
mov
sub
and
daa
xlat
cltd
aad
ret
sbb
cmp
jg
push
int
clc
popf
jle
cmp
lcall
inc
sti
fucomp
push
scas
gs
xchg
jg
jmp
lahf
lcall
sarb
push
cmc
xchg
loop
test
sarl
movsl
xor
pushl
clc
and
inc
pop
xchg
xchg
std
inc
push
xor
push
jno
stos
push
mov
push
int3
xchg
adc
dec
sysret
cwtl
xor
add
and
sahf
push
repnz
out
mov
jge
jo
nop
jmp
incl
int3
dec
unpckhps
fbstp
sbb
inc
ja
adc
inc
imul
sahf
das
xchg
pop
or
pushl
cli
push
add
push
hlt
aaa
pop
dec
loop
mov
pop
push
mov
popa
sub
icebp
decl
push
inc
sbb
add
fwait
push
cltd
inc
xor
mov
push
call
sub
cmp
nop
xchg
and
rcll
dec
xchg
in
ljmp
cli
jmp
push
or
flds
jnp
inc
mov
add
in
push
cmpsl
popf
call
cld
stos
sbb
push
push
and
jecxz
rcrb
mov
test
mov
push
sub
push
lods
push
popa
idiv
call
adc
mov
repz
mov
jmp
push
lcall
fdivr
std
xorb
sub
notb
jno
xchg
shl
pop
or
xchg
push
cld
mov
mov
adc
int
imul
enter
call
mov
leave
je
jnp
int
sub
ds
sahf
stc
push
sub
cmp
inc
movl
mov
jle
jbe
add
sarb
fld
xlat
jmp
and
sbb
test
stos
jmp
mov
pusha
mov
sub
xor
ret
pop
or
jns
cmpsl
int
rcll
inc
mov
adc
out
imul
push
lock
add
jae
mov
pushl
xor
ret
mov
and
decb
add
mov
adc
out
lcall
imul
mov
push
js
mov
push
loopne
ljmp
rcl
out
lods
in
pop
popa
push
sub
cld
pushf
fnstcw
mov
cs
js
mov
in
std
fists
sbb
xor
xor
iret
out
sahf
incl
shl
popa
jmp
xor
cmp
push
inc
jnp
in
cld
xchg
mov
call
jg
sub
out
popa
sub
test
xor
fwait
mov
xchg
cmpl
pushl
sti
lods
cmc
sbb
dec
mov
mov
xchg
faddp
pop
dec
scas
xor
outsb
lods
cmpsl
xlat
addr16
call
clc
outsl
es
in
pop
das
sahf
xchg
js
and
rolb
test
aad
lcall
mov
sub
adc
pusha
ljmp
xor
xor
mov
cwtl
test
inc
push
jns
or
cltd
push
repz
outsb
cli
incl
push
rorl
nop
sbb
addr16
fwait
cmp
ja
pusha
movsl
mov
or
cmpsb
dec
imul
dec
paddusw
subb
aaa
pop
push
or
faddp
xchg
int3
fdivrp
inc
xchg
mov
xchg
sbb
jbe
xlat
adc
dec
jp
sbb
push
in
sbb
push
mov
std
incl
je
scas
outsl
test
add
mov
xor
rcr
cmpsl
out
cli
pushl
clc
mov
fistl
inc
movsl
or
adc
push
dec
xchg
cld
lcall
es
enter
enter
mov
inc
shlb
pop
pop
and
cmp
jno
xchg
jnp
decl
mov
inc
xor
add
cli
inc
inc
add
xor
inc
xor
shl
data16
ja
call
lret
cmpsb
push
imul
test
mov
dec
pop
and
pushl
xor
xor
jb
jbe
adc
test
mov
mov
adc
mov
in
das
mov
dec
add
add
jecxz
add
ljmp
lcall
add
aaa
cli
lcall
mov
fcoml
lods
decl
xchg
cmpsb
js
mov
lret
gs
addl
lahf
cmpb
stos
ss
arpl
out
inc
sbb
movsb
test
jmp
xchg
data16
fiadds
push
in
ss
xchg
jbe
mov
incl
in
mov
cmpsb
pop
mov
pop
cmc
mov
movsl
jge
ja
mov
incl
sahf
inc
movsb
xorl
mov
mov
dec
ds
fdivrl
scas
bound
lcall
push
xor
mov
or
loopne
fildl
bound
mov
jmp
ljmp
lret
push
or
pop
in
popf
outsl
cmc
inc
test
cli
adc
sbb
imull
pop
loope
xor
int
test
mov
addl
nop
fdivrp
incl
dec
sub
mov
cmp
push
push
std
pop
stos
rcrl
sarl
mov
fbld
or
jecxz
cmp
fmuls
add
sub
mov
ja
add
bound
push
xlat
in
mov
mov
mov
add
inc
xorb
lock
or
call
inc
into
sbb
aam
rcl
pop
jne
ficoml
incl
mov
stc
dec
cmp
and
cltd
out
movsb
xor
subl
add
mov
inc
lahf
ror
mov
adc
or
sar
lcall
jns
lods
inc
inc
xor
dec
and
sarl
cmp
pop
ja
push
inc
stos
dec
adc
pusha
ficoml
stos
jle
ljmp
insl
sar
push
jae
jmp
adc
ret
xchg
vpmacssdd
jno
imul
sahf
lahf
test
fidivrl
pop
mov
jle
sbb
sub
outsb
or
lock
decl
sub
mov
shll
gs
cmp
ficoms
cmp
inc
and
pop
std
sbb
pop
insb
adc
mov
sbb
lods
adc
mov
test
xchg
sbb
lcall
sub
pop
cmpsb
and
cmp
cmp
fidivrl
mov
mov
outsb
cmc
out
dec
inc
push
repz
ja
imull
aam
aad
sub
push
xor
push
mov
mov
cld
sbb
ljmp
decb
pushf
add
or
and
js
lret
popa
gs
scas
in
xchg
cmc
ljmp
sar
rcrb
jmp
lods
out
testl
outsb
int
repz
cld
aas
xchg
fisttps
jbe,pt
xchg
loope
call
and
test
sahf
pop
imul
cli
lock
jmp
or
mov
xor
dec
stos
xchg
sbb
dec
fst
decl
enter
mov
xchg
and
dec
les
lods
inc
es
jmp
fwait
add
fldcw
jo
or
xlat
andl
into
stos
lret
movsl
jne
push
lret
lcall
jbe
cmpsb
push
cwtl
repz
jge
lret
xchg
nop
cmp
dec
lods
mov
cmp
pushl
out
testb
add
test
and
jmp
jb
pop
lcall
daa
sarl
enter
call
lcall
xchg
rcl
cmp
movsl
rcll
sub
add
pushl
mov
and
fs
fistl
cvttps2pi
cmpl
and
jmp
nop
xchg
mov
and
sahf
lcall
aad
xchg
xchg
dec
cmp
cmc
xor
xor
mov
mov
cltd
std
pushl
cld
lods
inc
push
fidivl
cmp
mov
out
push
les
ror
repz
idiv
aaa
pop
sub
sbb
mov
xchg
fwait
stc
cltd
jo
mov
call
push
pop
das
xchg
pop
out
xrelease
adc
xor
popa
adc
sti
call
add
rol
dec
xlat
jno
movsb
pushf
out
pusha
inc
in
mov
cmp
inc
push
sbb
dec
stc
sbb
out
pop
fbld
ljmp
dec
cmpl
outsl
fnsave
pop
out
pop
jmp
lret
mov
or
or
into
push
mov
addr16
fldl
xor
mov
push
adc
bound
decl
push
shlb
add
aam
popf
fistps
jbe
jge
jnp
lret
das
clc
xor
and
mov
je
lods
mov
xchg
jl
xchg
mov
adc
and
dec
inc
iret
fstp
out
pushl
cmc
and
cmp
repz
or
adc
sub
inc
repz
pop
daa
push
mov
lcall
popf
inc
leave
je
mov
dec
aad
lock
jns
dec
jg
mov
dec
sarl
lcall
mov
pcmpgtw
jnp
adc
cmc
imul
push
fisttpll
aad
frstor
add
mov
fs
mov
call
jg
cmp
out
adc
xchg
jge
sub
xchg
mov
ja
mov
jo
xchg
pushf
dec
sahf
fimuls
imul
and
lds
add
or
ds
loope
and
jns
shll
mov
push
or
fs
dec
ljmp
incl
insl
aam
mov
in
lea
sub
loope
mov
ljmp
sahf
mov
fwait
repz
xchg
add
daa
scas
adc
decl
pop
stos
pop
ja
std
sub
push
push
xor
lcall
in
daa
ds
setns
adc
ret
xlat
cmp
add
aaa
mov
les
movsl
jg
sub
mov
std
mov
in
faddl
xchg
call
les
icebp
push
inc
mov
cmpsb
cmc
test
ss
pushl
out
andb
mov
add
lret
sbb
push
sahf
xchg
mov
add
push
mov
mov
clc
sbbb
nop
and
push
lods
fcmovnb
int3
and
push
cld
clc
jle
std
sub
sub
inc
xor
movsl
lahf
sub
push
inc
adc
sbb
adc
jo
das
sub
xor
stos
lcall
xor
add
std
xchg
imulb
repz
xchg
sub
in
daa
pop
dec
mov
dec
jecxz
adc
lcall
cmp
mov
dec
pop
stc
xchg
in
aaa
mov
sbb
out
clc
decl
sbb
sub
aas
test
shll
mov
push
pop
cmp
jne
lcall
pop
icebp
mov
xorb
inc
aam
pusha
hlt
mov
lcall
test
cmp
loopne
cmp
loop
dec
xchg
idiv
fisttps
repz
xor
and
iret
out
push
flds
outsl
dec
std
xor
inc
ja
ljmp
ja
mov
jo
ja
lods
cmp
or
mov
cmp
js
push
jne
mov
inc
ds
cltd
sahf
dec
arpl
add
rcrl
negl
lods
mov
xchg
insb
mov
and
jno
aad
cmp
lcall
dec
repnz
clc
in
pop
insb
outsl
leave
mov
test
loopne
ja
mov
lcall
xchg
add
loopne
or
lods
push
pop
aad
nop
adc
push
adc
add
call
aaa
imul
jns
fdivrl
dec
adc
movsl
imul
mov
hlt
incl
sub
shrb
jno
mov
sbb
pop
nop
jmp
leave
sub
ljmp
aas
sbb
jl
dec
mov
xor
imul
inc
sbb
pushl
ljmp
or
out
jmp
sub
fbld
and
sbb
xchg
dec
clc
pushl
arpl
inc
mov
sbb
jo
cltd
mov
les
ljmp
cmp
int3
inc
cmp
sub
cwtl
leave
cmp
int
jnp
sub
pop
incl
cld
ljmp
push
aaa
ds
imul
enter
lcall
adc
cli
aam
ljmp
sti
roll
data16
cmp
aad
cwtl
cmp
jg
jne
insl
call
mov
imul
decl
jnp
mov
repz
js
std
into
inc
pop
fnstenv
aad
sarl
and
jmp
fwait
and
jecxz
dec
in
popa
push
xchg
pop
jle
adc
xchg
gs
rcrl
sti
pop
rclb
jmp
lcall
mov
xchg
sti
mov
out
mov
sbb
pop
push
or
push
test
stos
mov
mull
mov
sub
xchg
inc
incl
cld
pushl
shll
or
adc
ret
xor
jbe
cld
inc
lcall
adc
aas
mov
xchg
xchg
cld
lock
aad
mov
ja
jae
fs
sub
push
movsl
shrb
add
imul
mov
movsl
dec
mov
add
sti
loop
imul
fcoml
ljmp
lea
mov
mov
sub
icebp
decl
into
cmp
xor
fucomip
cltd
jl
outsb
push
inc
loope
mov
lds
fbstp
insb
test
mov
xor
jnp
in
insl
int3
push
das
pushf
fstl
mov
sub
or
push
sub
das
inc
add
mov
int
es
loop
push
xchg
cld
stc
stc
dec
and
aad
mov
pushf
push
jge
test
jge
out
out
pop
jl
sahf
dec
xchg
xchg
insb
jns
fs
jp
pushl
cmp
shr
jbe
daa
sbb
jg
call
adc
dec
stos
or
cmpsb
push
dec
pop
cld
xchg
loopne
mov
icebp
cmp
jmp
repnz
xor
adc
dec
xchg
xor
add
pushf
or
decl
in
les
dec
cmpsl
lcall
and
mov
ss
push
sbb
pushl
cs
sub
lds
push
lcall
movsl
popl
lods
sub
dec
leave
lock
cmc
popa
test
xor
push
ds
aad
dec
mov
repnz
rolb
xchg
std
lcall
jno
inc
out
push
lret
mov
sub
pop
call
fisttpll
mov
mov
out
addr16
mov
mov
in
daa
or
out
pop
scas
loopne
pop
scas
in
push
fisubrs
outsb
mov
test
add
fcomip
jg
cmp
and
xchg
in
pusha
sbb
jp
int
push
jmp
xor
pop
stc
mov
add
mov
add
or
lahf
sbb
push
stc
xor
test
ret
inc
adc
outsb
xlat
mov
push
repnz
repnz
mov
inc
incl
std
sbb
imul
sub
nop/reserved
sahf
and
insb
jae
int
xchg
sbb
add
sbb
xchg
mov
jecxz
cmp
ljmp
xor
sbb
inc
jmp
arpl
inc
jl,pt
and
loope
adc
ljmp
arpl
xor
mov
mov
enter
mov
cwtl
dec
incl
call
inc
cmp
into
sahf
dec
cmp
cmpsb
loopne
or
dec
outsl
mov
fwait
sub
ljmp
sahf
push
ljmp
fsub
test
adc
jg
cs
ret
xor
xchg
xchg
dec
xor
xor
rol
pushl
dec
scas
rorl
adc
push
in
and
bound
ds
out
inc
and
sar
js
clc
ret
rcll
fisubrl
cmp
cwtl
mov
lcall
incb
xchg
mov
cmpsl
adc
mov
inc
cmp
xor
pop
in
popf
stc
inc
out
cltd
jg
mov
shl
js
xchg
dec
mov
ljmp
jg
pop
mov
out
jno
lret
dec
rolb
mov
xchg
outsl
jae
movsb
decl
outsb
fists
pushf
cmp
loopne
sbb
nop
inc
cwtl
jp
mov
mov
call
sbb
mov
inc
cmpsl
into
shl
test
push
dec
sarb
inc
aam
je
shll
mov
ljmp
cmpl
push
mov
stc
in
arpl
pop
popa
mov
rolb
mov
pop
cmpl
pop
shlb
lret
mov
sbb
add
aas
mov
shrl
pop
bound
fcomps
bound
mov
cmp
out
arpl
clc
mov
ja
gs
lcall
leave
pop
push
jae
cmp
js
sbb
ds
imul
movsb
cmp
mov
jl
xchg
out
movsl
mov
push
mov
pushl
fstl
lods
es
call
rolb
hlt
mov
out
bound
xchg
incl
push
mov
mov
gs
lahf
pop
cld
mov
js
jecxz
and
insl
scas
cltd
jo
incl
std
push
fists
adc
fstpl
jmp
push
mull
loop
testl
fistpl
incl
mov
add
and
test
jg
push
adc
push
dec
fstpt
aas
sub
aas
mov
sbb
ljmp
mov
ja
test
push
or
mov
dec
bound
adcl
es
fisubrl
mov
cli
fadds
add
mov
cli
std
lret
or
lcall
out
scas
mov
mov
cld
sbb
jb
and
shlb
sahf
mov
das
rcrb
dec
xor
mov
or
sub
fs
dec
inc
sub
arpl
push
xorl
adc
out
out
pusha
mov
jbe
imul
cltd
subl
or
gs
daa
test
lea
repz
pop
pushf
fsubl
sbb
adc
pop
mov
imul
cmp
aaa
push
mov
xor
jmp
mov
cli
pushf
jne
push
lods
mov
sbb
shll
and
jne
xchg
shrl
scas
mov
aas
adc
xchg
fmuls
icebp
xchg
sub
notb
add
sub
test
ret
sti
test
mov
call
sbb
or
decl
js
sbb
loope
lret
mov
test
rcrb
and
pusha
stc
ljmp
scas
mov
rorl
mov
sub
fadd
jbe
icebp
in
lahf
in
shrb
mov
xor
hlt
aas
mov
ljmp
clc
inc
arpl
lea
mov
jle
sub
mov
jmp
or
push
mov
push
jl
pop
mov
lcall
inc
push
int
imul
in
jg
push
cmp
inc
stos
pop
mov
push
shlb
test
xchg
dec
dec
push
xor
out
xor
ljmp
in
cltd
pop
in
bound
jb
rcll
inc
adc
fcoms
sbb
jg
mov
mov
or
dec
in
incl
jmp
dec
pop
movsl
loope
add
imul
iret
jp
mov
mov
push
or
movsl
mov
call
movsl
rorl
cmp
nop
ja
and
adc
rcll
scas
xchg
das
xlat
add
push
hlt
cmp
adc
aas
flds
leave
mov
test
iret
in
sbb
mov
insb
cld
jg
inc
cld
xor
mov
ret
notb
imul
xor
push
or
dec
insl
cs
mov
add
and
fcmove
lock
and
js
jbe
pushf
mov
jg
lcall
leave
daa
ret
mov
sbb
jns
sub
mov
lcall
xchg
xchg
jl
movsl
sbb
repnz
push
dec
cltd
xor
gs
xchg
mov
call
lods
sub
jg
pop
test
ret
das
out
mov
lahf
ljmp
cmpsb
inc
inc
mov
test
inc
test
sub
mov
mov
dec
aaa
mov
dec
pop
sbb
decl
cmp
mov
xchg
mov
lds
pushl
add
or
inc
or
jecxz
sbb
mull
rorb
imul
ret
xchg
mov
fildl
push
pop
lods
int3
sub
in
mov
dec
or
enter
mov
lahf
dec
sbb
xorl
test
xchg
out
nop
fdivr
das
fwait
int3
leave
cwtl
fsub
fdivr
ljmp
idivl
push
jne
sbb
push
jle
jbe
adc
adc
jbe
out
mov
fdivp
mov
or
std
inc
pop
push
aaa
icebp
dec
pop
das
xchg
jns
xorl
jecxz
xchg
pop
ljmp
clc
incl
int3
push
pop
fcmovnb
lahf
mov
fwait
sub
leave
pop
lret
mov
ljmp
pop
push
push
dec
xor
pop
push
fimull
cld
stos
sub
xor
fsub
sbb
fucom
ljmp
clc
decl
out
mov
cmpsl
dec
adc
or
jno
clc
pop
lods
mov
mov
jne
out
pop
inc
out
pop
add
js
repz
jl
lret
bound
or
push
in
xchg
xor
cs
pop
ljmp
les
loope
fistl
push
jmp
jne
fisttpll
ss
clc
xchg
ja
fcomps
pop
mov
cmc
adc
nop
nop
std
pop
sub
push
insb
out
cmpsb
sbb
push
mov
push
decb
decl
xchg
std
inc
jae
ss
jmp
sahf
adc
add
out
aad
jecxz
jle
ret
and
xor
pop
cld
js
in
mov
pusha
push
lahf
dec
sar
ljmp
push
pop
xor
cmp
pop
test
xchg
jg
adc
mov
jle
mov
inc
popf
stos
inc
mov
fimuls
insl
cmovnp
out
jecxz
fsubrl
out
scas
pop
je
add
jg
inc
std
and
xor
decl
in
in
add
daa
jle
push
nop
adc
lock
pushl
lock
stos
add
jne
fcmovu
xlat
or
sahf
xor
out
add
fdivrl
int
stos
inc
and
xor
ffreep
lahf
sbb
mov
incl
xor
shl
mov
fwait
and
cmp
ret
inc
nop
fildll
call
out
mov
mov
jl
lcall
rorl
adc
pop
js
decl
mov
push
add
lods
sbb
js
arpl
pushf
pop
mov
push
pushf
adc
rcr
and
pushl
inc
xor
in
stos
loopne
mov
pushl
xor
mov
rorb
ljmp
out
popf
add
sub
and
gs
pusha
scas
pop
jbe
mull
dec
insl
or
cld
hlt
test
jmp
mov
mov
sbb
push
mov
icebp
jne
ret
jl
adc
or
adc
jbe
mov
push
ret
or
testb
fwait
mov
lahf
add
lcall
std
es
cmp
pop
lock
mov
out
lcall
xor
xchg
or
ret
jmp
push
movsb
jle
jb
jl
aaa
cmp
aaa
std
enter
or
lret
insl
sub
lret
out
es
inc
adc
decl
add
fdivr
movsl
loopne
ficoml
das
add
add
pop
xor
mov
inc
jmp
rcll
or
rorb
sub
lea
repnz
jp
inc
ret
add
inc
ss
cmp
jl
jns
push
xchg
dec
mov
xor
mov
push
pop
jp
xor
adc
push
sbb
loop
add
incl
nop
cmp
inc
pop
dec
ljmp
mulb
and
cli
lcall
xchg
mov
mov
in
out
sub
shlb
iret
cmp
popa
xchg
dec
loopne
cmp
cmp
sub
nop
sub
repz
mov
pop
cmp
mov
pushl
jmp
cld
mov
testb
data16
dec
imul
incl
into
icebp
pop
push
jo
dec
cmpb
stc
add
popa
push
jle
or
mov
xchg
insl
mulb
jle
mov
sub
or
aas
cmc
insb
sub
insl
dec
ljmp
push
add
mov
dec
cwtl
decb
mov
and
sub
ret
popf
dec
shrb
aam
inc
in
loop
decl
xchg
sbb
cmp
dec
ffreep
loope
cmp
or
or
xor
cmp
fisubl
sub
mov
sub
and
ljmp
enter
ficompl
add
stos
aam
pop
iret
scas
sti
sub
out
clc
into
cmpxchg
mov
dec
imul
cmp
sbb
decl
mov
and
sahf
out
mov
ret
cmp
inc
mov
adc
cmpsb
xor
jle
sar
jmp
mov
or
cld
xchg
cli
sbb
push
push
sub
add
hlt
mov
lret
mov
pusha
movsb
test
mov
cld
imul
pushl
pop
dec
lds
repnz
push
and
cltd
mov
sub
inc
bound
fistpl
push
adc
imul
test
or
xchg
push
sbb
insl
mov
cmc
out
clc
lcall
pop
fmulp
les
repz
subl
test
fidivl
xchg
es
std
jb
nop
push
dec
add
jmp
icebp
clc
adc
sbb
lcall
inc
pop
push
scas
addr16
in
leave
xor
adc
sub
ljmp
cmp
push
mov
lods
mov
xor
inc
xor
mov
je
insb
flds
sub
pushl
cmpsl
mov
lret
sub
inc
and
push
data16
in
xchg
push
lds
jb
enter
or
inc
xor
insl
cmpsb
jne
sar
cmp
dec
and
mov
aaa
xor
xor
jg
inc
scas
rcll
call
outsb
inc
mov
test
inc
mov
push
cmpsl
sub
hlt
das
fwait
into
xchg
push
fistpl
cmc
sbb
jb
je
push
hlt
int
stos
ljmp
sub
cmp
cmp
mov
testb
cmp
push
pop
das
shr
dec
jne
xorl
fstp
push
pop
ljmp
cld
dec
mov
scas
out
in
stc
bound
xchg
xor
mov
sbb
mov
aaa
lds
bound
push
lcall
test
pop
repnz
push
mov
iret
jns
rcrb
add
pop
ret
jne
test
push
cmp
ja
adc
adc
pushf
jmp
pop
popa
cmpb
and
mov
mov
jb
lcall
pop
and
mov
ror
imul
add
lods
push
adc
in
or
data16
lcall
fdivrs
shlb
mov
adc
sub
out
je
add
pop
jg
adc
sar
mov
mov
fistps
dec
call
cmp
sbb
cltd
jbe
push
dec
or
mov
loop
inc
jge
daa
shll
pusha
or
push
mov
mov
lahf
pop
sbb
sub
clc
push
lods
cli
mov
scas
loopne
cmp
enter
in
pop
les
insl
lcall
out
xor
subl
sbb
ror
jmp
cmp
cmp
pusha
push
das
cli
pushl
leave
xor
xor
xor
data16
loopne
iret
lcall
jne
das
adc
sti
cmp
daa
movsb
mov
cmp
repz
jno
xor
jmp
sbb
fisttps
ljmp
aas
add
das
shr
pop
add
clc
add
cli
jmp
pushl
mov
xor
bound
adc
in
mov
push
mov
push
aaa
scas
repnz
mov
cli
test
sbb
pusha
mul
hlt
loop
cld
lcall
vfixupimmps
lret
sub
xor
scas
or
sti
mov
jmp
jae
data16
in
aaa
aad
pcmpgtb
leave
pop
andb
fcoml
enter
aaa
in
sbb
add
incl
imul
cmp
jne
in
mov
std
mov
mov
inc
pop
mov
push
loop
rcll
cmp
mov
and
stos
fiaddl
add
hlt
pop
jno
mov
loope
mov
dec
dec
shll
push
loope
xlat
mov
out
mov
jg
jg
daa
out
cmp
sub
scas
mov
gs
lret
jle
scas
pop
mov
lock
jmp
xchg
xor
sbb
ret
fwait
mov
mov
cmc
cmp
pushl
dec
in
sub
sti
mov
mov
data16
roll
pop
adc
add
pushl
push
jmp
lcall
jle
dec
mov
call
mov
or
in
movsl
cmp
lret
fwait
and
dec
insb
jmp
cwtl
xlat
cmc
push
and
call
sbb
leave
inc
in
out
push
outsl
add
mov
enter
push
inc
or
cli
sbb
andb
jo
mov
and
pop
mov
fidivrl
inc
xor
out
mov
lret
cmp
test
lods
test
xor
cmp
cld
movl
xchg
and
fwait
gs
sub
jmp
add
jp
test
jno
xchg
mov
inc
adc
popf
sbb
inc
mov
stc
add
pop
cmc
sbb
pop
mov
cmpsl
xchg
shrl
xor
decl
sbb
out
xchg
pop
push
adc
cmp
ret
or
or
decl
loope
dec
out
cmc
pop
aad
inc
jge
jo
cld
xchg
dec
add
xchg
pop
divps
and
insb
out
pop
sub
ljmp
xchg
scas
pop
inc
mov
lea
xlat
ss
iret
mov
mov
push
outsl
add
decl
jo
inc
inc
lahf
jnp
sbb
cwtl
jno
sbb
sub
jg
pop
std
lcall
or
pop
mov
test
out
push
mov
sub
jmp
mov
out
test
int
pop
cmpsl
leave
add
inc
jbe
pop
cmp
pop
incl
xchg
xor
testl
arpl
dec
pop
cmp
pop
outsb
ffreep
dec
mov
inc
push
or
jg
mov
mov
xchg
lds
push
push
rcl
jp
sbb
ja
jmp
dec
jp
dec
cmpps
shl
mov
push
daa
clc
dec
push
inc
sti
int
mov
in
pop
pop
jle
sti
lcall
inc
mov
mov
mov
dec
sub
jnp
cs
mov
push
lret
lcall
cmp
subl
add
sub
mov
dec
pop
repz
inc
and
in
mov
outsb
aaa
shlb
mov
mov
inc
xchg
lods
dec
hlt
call
jne
int
mov
subl
scas
xor
scas
or
mov
mov
add
test
aas
outsl
pop
not
xor
daa
rcl
es
pushf
adc
ljmp
xchg
adc
icebp
mov
loop
std
dec
shlb
stos
adc
lcall
push
or
bound
daa
pop
clc
pop
je
xor
dec
ficoml
mov
incl
or
notl
or
shr
fsubrl
mov
movsl
push
sub
aad
decl
mov
mov
loope
aam
xlat
jmp
repz
cld
mov
push
movsl
add
call
or
push
sub
insb
sbb
std
mov
mov
adc
fsubl
adc
loopne
inc
xchg
sub
mov
insl
fsub
pushl
lret
daa
sbb
inc
inc
and
test
mov
stos
inc
mulb
xor
ret
dec
pop
cmc
or
mov
dec
pop
aam
mov
pushl
dec
in
fbld
adc
push
in
jge
inc
sbb
add
ljmp
xchg
push
lret
les
loopne
xor
sbb
ficoml
fbstp
cwtl
mul
rolb
out
sub
repnz
add
and
jo
adc
pusha
mov
imul
lock
call
push
push
enter
push
aad
or
lcall
and
mov
sbb
jmp
sahf
notl
mov
cmpsl
jmp
incl
rdpmc
and
cmp
pop
mov
sub
inc
sbb
in
ds
add
ljmp
sbb
sbb
into
movsb
loopew
arpl
rcl
jne
push
mov
pusha
inc
jno
sub
decl
xor
jno
inc
jg
push
mov
adc
scas
std
call
mov
sub
outsl
rorb
jl
fs
filds
pop
scas
xor
mov
inc
mov
jmp
adc
and
push
jae
or
jmp
xchg
js
xor
mov
jb
dec
sbbb
cs
jmp
cmp
lret
adc
stc
arpl
arpl
pop
mov
push
push
stc
push
dec
dec
negb
je
sub
pop
mov
mov
ljmp
inc
jg
mov
sbb
adcl
scas
xchg
incl
jle
or
fisttps
and
push
idivb
test
jnp
pop
and
decl
sub
sbb
sbb
outsl
jae
jecxz
call
xlat
or
int3
ficoml
outsb
js
fcomip
popfw
sbb
xor
add
mov
inc
inc
pop
add
mov
mov
cmp
push
test
scas
rclb
jle
lea
and
sbb
add
rorb
jg
mov
in
adc
or
dec
mulb
mov
xchg
xchg
test
shlb
loopne
out
pop
leave
shll
jne
and
rcrl
pop
loopne
rcrb
es
jl
outsb
mov
or
ljmp
xor
add
push
es
jl
jo
fsubrp
add
and
mov
lcall
repnz
fistps
push
xchg
xor
sub
cmpsl
fcomp
inc
int
in
jle
push
xchg
pushl
in
sub
pop
iret
push
dec
pop
clc
dec
inc
mov
test
lahf
mov
mov
or
jns
outsl
lock
je
sbb
sbb
xchg
jno
inc
lods
jbe
jnp
xchg
shll
lock
jmp
mov
mov
inc
ret
orl
push
scas
dec
outsl
sbb
sti
icebp
call
repz
daa
push
inc
mov
mull
enter
sbb
pop
sbb
lds
outsl
xchg
fdivl
dec
cld
in
lods
and
les
inc
adcb
push
adc
decl
lock
pop
add
outsb
stos
xor
ja
shrl
xchg
test
test
call
or
pusha
and
sub
mov
aaa
adc
sahf
mov
sbbb
orl
xchg
mov
jp
stc
mov
lcall
leave
and
nop
cmp
xor
les
addr16
mov
push
push
mov
mov
repnz
sub
mov
loope,pn
xchg
stos
inc
adc
mov
imul
cmpsb
dec
mov
stos
mov
mov
aam
js
add
sbb
inc
dec
inc
xor
jg
ds
pop
or
jge
inc
lods
mov
or
jne
xchg
lds
out
aad
test
and
call
and
cmp
adcl
call
lret
jno
inc
pop
dec
ja
pmaxsw
mov
loope
mov
in
adc
push
xlat
inc
incl
std
inc
sahf
pop
bound
jb
push
sbbb
mov
incl
cmp
leave
ret
or
dec
xchg
rclb
popf
xlat
cmpsb
mov
add
call
or
das
pop
scas
aaa
divb
pop
cltd
fldcw
and
jnp
ffreep
lcall
iret
es
dec
mov
xchg
jg
ret
fistpll
lock
jp
incl
inc
xchg
mov
jl
in
enter
hlt
and
push
mov
stos
cmp
loopne
pop
mov
ljmp
xor
mov
add
sub
xor
filds
cmc
ret
sbb
pop
imul
mov
xorl
fwait
mov
jo
jno
lock
addl
xchg
mov
and
ljmp
xchg
push
shll
fildl
jae
popa
add
hlt
and
sahf
cmp
enter
dec
jnp
jae
inc
xchg
aad
pop
ljmp
test
das
stos
push
lods
push
repz
and
jmp
mov
scas
sub
cmp
mov
es
loope
aad
stos
mov
pushl
stos
mov
mov
fs
pop
jecxz
std
test
xor
sub
xchg
or
or
xor
mov
lcall
inc
sub
repnz
adc
dec
and
ss
jbe
mov
cmp
nop
sar
call
std
adc
sub
icebp
jg
scas
push
loope
pop
std
rcrb
std
inc
push
xchg
jle
mov
decl
dec
ljmp
lds
mov
adc
mov
jo,pt
add
enter
fwait
adcb
pushf
std
je
jle
popa
inc
adc
icebp
stos
cmp
outsb
push
cmp
xlat
mov
into
sahf
scas
push
daa
mov
and
dec
repnz
jne
fsts
xlat
jmp
dec
mov
jg
ror
icebp
jo
stos
sbb
xor
jp
mov
or
sar
fbstp
enter
cmpsb
or
pop
jo
push
xor
push
mov
cmc
lcall
daa
sub
add
idiv
call
lcall
mov
cmp
jmp
frstor
call
inc
lds
ja
fsub
mov
js
pop
push
dec
xchg
adc
rep
mov
decl
cld
lahf
inc
xchg
fidivrs
lea
mov
dec
add
fmull
jmp
mov
sbb
jnp
lock
lcall
shlb
push
fwait
cmpsb
push
outsb
inc
aad
movsl
imul
test
decl
push
and
push
xor
imul
incl
dec
or
out
aam
in
jmp
das
call
out
sub
mov
xchg
mov
ljmp
in
pop
add
je
dec
scas
loope
std
out
xchg
scas
scas
arpl
loopne
imul
fwait
in
cmp
lock
nop
pop
outsl
test
mov
sbb
icebp
loop
mov
loope
jne
lahf
pop
popa
stos
rclb
add
fists
mov
push
cmp
pusha
xor
lahf
xor
mov
aam
outsl
sub
outsb
mov
inc
add
andb
loope
fidivl
or
jmp
and
sub
popa
push
mov
stos
out
testl
push
hlt
insb
dec
adc
pop
aad
jbe
sbb
gs
pop
cmp
imulb
jecxz
decl
cltd
outsb
aam
mov
add
sti
adc
sub
stc
mov
cmpsb
xlat
fistl
jmp
bound
sarl
into
jmp
add
or
jb
xorb
fmul
out
imul
imul
arpl
loop
sub
popa
stc
xchg
sbb
or
ljmp
push
andl
aas
or
sti
call
pop
cmp
outsb
pop
je
in
jns
ljmp
leave
outsb
push
sub
loope
push
adc
pop
and
mov
fisttps
icebp
pop
iret
sub
cld
jae
mov
or
vaddss
fsub
insb
repnz
lea
lcall
enter
insl
inc
aaa
mov
mov
inc
mov
sar
mov
jl
rcrb
jl
jb
fbstp
push
icebp
out
in
pop
mov
movsb
pop
inc
mov
cli
pop
lock
int3
xor
inc
ret
out
stos
jo
ljmp
clc
stos
in
ret
sbb
and
adc
sti
call
repnz
or
sub
inc
dec
cmp
loop
aam
loope
outsb
xor
testb
cmpsb
cmp
fisttpl
dec
sub
jb
mov
add
pop
mov
jno
enter
xor
in
xchg
push
movsb
mov
into
mov
decl
jp
push
scas
jmp
push
out
cmc
or
stos
push
mov
mov
imul
shrl
sqrtps
lock
push
int3
es
ret
loopne
pop
mov
pop
dec
pop
push
inc
jmp
jnp
adc
push
mov
xchg
lods
sub
and
cmp
fwait
add
test
call
jne
decl
or
mov
mov
cmp
and
ja
repnz
sarb
jno
enter
pop
fcomps
test
scas
clc
fwait
fwait
aaa
push
ret
adc
cmp
inc
adc
popf
jo
inc
mov
xchg
lcall
mov
lds
icebp
jb
push
jmp
sub
int3
ja
aad
clc
xchg
mov
and
push
ljmp
ret
repz
icebp
xchg
testb
mov
adc
data16
call
arpl
aas
stc
fsubr
dec
cwtl
cmpsl
push
mov
lds
cmpsl
fidivrl
int3
out
es
std
call
mov
loopne
js
jb
adc
or
jle
test
andb
call
loop
sub
ja
mov
xchg
ja
fisttps
mov
inc
push
push
or
fsubrs
jecxz
push
popf
jecxz
mov
ljmp
sbbb
bound
leave
add
pop
scas
addl
fldenv
lcall
imul
jbe
add
adc
inc
jmp
sbb
scas
incl
cld
or
dec
into
cmp
ss
out
pop
jbe
ja
xchg
mov
jae
dec
xchg
cmp
hlt
out
push
cmp
push
call
int
mov
dec
inc
fs
nop
cmp
inc
dec
jg
mov
mov
mov
cmp
sbb
clc
jmp
bound
sbb
pop
outsb
lds
loope
xchg
xor
inc
subb
popa
sub
xchg
xor
pop
push
sbb
call
lcall
test
lock
adc
push
ljmp
jno
fwait
and
xchg
xacquire
pushl
rorb
gs
stos
inc
je
lods
icebp
xlat
lret
pop
and
and
pop
out
cli
xor
xchg
outsb
push
movsl
push
lcall
lods
jbe
and
xchg
sbbb
cmp
scas
inc
repnz
and
jbe
int3
cwtl
cmp
inc
pusha
push
mov
mov
cmp
call
xchg
rolb
xchg
cmp
stos
outsb
jne
incb
push
arpl
push
test
call
jbe
std
lea
sub
dec
sub
leave
cmp
es
outsb
test
pop
adc
call
cmp
inc
sub
sbb
cmpsb
hlt
jbe
jns
out
movsl
fcompl
shlb
sar
lcall
stc
jnp
mov
push
jmp
fwait
in
dec
sbb
hlt
or
jg
xor
jl
adc
stos
stos
pop
ljmp
lcall
adc
test
movsl
repz
out
ss
cmp
dec
push
jmp
lock
ret
mov
divb
fcomip
push
daa
xchg
es
gs
inc
out
jno
mov
push
ror
into
xlat
nop
cwtl
mov
inc
in
negl
add
ds
xor
call
cwtl
pop
mov
sbb
xchg
sti
repnz
movsl
in
cld
fcomi
adc
pop
jecxz
pushl
jl
mov
stos
lret
and
out
add
jns
push
add
xor
pushl
dec
pop
push
cmpps
imul
cmp
cli
out
or
inc
and
mov
xor
cmp
add
pushl
fdivl
inc
inc
cmp
adc
ja
mov
pop
cli
mov
adc
inc
dec
test
call
cmp
jl
mov
sub
mov
pop
imul
outsl
loop
int
in
inc
mov
pop
push
xchg
fistpll
inc
jge
dec
lods
xchg
stos
sub
mov
ljmp
adc
nop
dec
sub
adc
sbb
shlb
decb
jp
mov
inc
aam
ljmp
out
cmpsb
test
or
sar
dec
sub
mov
xchg
sarl
incl
sbb
pcmpeqb
test
imul
cmp
push
lock
inc
and
scas
mov
jmp
das
mov
out
jbe
int
fbld
jbe
cmpsb
insl
popa
addr16
sbb
or
mov
xchg
or
or
push
mov
push
les
lret
xchg
ljmp
or
jge
push
bndldx
lea
jno,pt
mov
mov
inc
jmp
mov
add
or
pop
mov
mov
sahf
sub
pushl
out
sub
mov
adc
dec
test
leave
inc
enter
mov
ljmp
rcrb
fwait
ret
inc
or
xchg
inc
push
jbe
test
hlt
lcall
push
and
sahf
sub
fs
test
mov
xchg
aaa
out
mov
movl
dec
cmp
lods
pop
dec
xchg
push
xchg
adc
movsb
pop
addr16
movsb
std
jnp
lods
out
pusha
fcoml
test
aam
pop
jnp
jg
std
mov
jno
xor
negl
decl
aaa
push
icebp
shl
adc
aad
dec
test
jl
mov
and
lcall
cli
sub
mov
aas
xor
dec
sub
pop
jl
push
pusha
inc
sub
mov
lcall
loopne
inc
add
sbbb
fstpt
xchg
repnz
std
cmc
adc
xchg
fists
decl
pop
addr16
pop
loope
es
lahf
insl
shl
and
mov
cmp
jge
or
ljmp
jbe
in
rcrb
ds
cmpsl
addb
fisubl
jmp
sbbb
or
hlt
out
sub
add
sbb
xor
call
test
push
sub
mov
mov
aam
lods
clc
orb
mov
push
inc
dec
jg
xor
adc
push
push
iret
cwtl
test
and
cmp
push
in
jb
outsb
jne
call
idivl
ds
loopne
adc
xchg
loop
loop
jno
fs
jae
hlt
fdivrl
dec
sbb
pushl
sub
imul
cmp
mov
jb
adc
out
pop
lret
cli
cmpsb
test
xchg
std
call
and
adcb
sbb
out
xor
movsl
addr16
jl
jo
dec
mov
aaa
sar
incl
jb
hlt
adc
fdivl
mov
mov
fnstcw
andb
cltd
js
cmpsb
push
aam
ja
push
imul
and
dec
jb
xchg
add
out
fcoms
std
ljmp
jecxz
xchg
ret
sbb
jle
mov
sub
inc
hlt
fnstenv
sub
cmp
daa
loope
xor
inc
div
loop
lret
aaa
sarl
cs
sbb
fs
mov
push
or
sub
aas
rcrb
outsl
decl
shrl
cmp
addr16
test
mov
and
movsb
push
cmp
mov
mov
pop
jge
das
cli
in
cmp
out
push
pop
xchg
jb
sti
stos
leave
fisubrl
push
inc
cmpsl
and
pop
xchg
popa
and
ljmp
pushl
push
lock
sbb
xchg
pop
inc
or
push
flds
xchg
dec
leave
push
aas
insl
or
xlat
adc
add
mov
and
cmp
fs
cmp
stc
shrl
mov
jle
sbb
adc
xchg
loop
repz
mov
push
xchg
rcrb
ss
js
rcrl
mov
or
mov
addl
loopne
imul
pushl
and
inc
xchg
push
dec
dec
mov
out
jecxz
sub
push
mov
pop
xchg
mov
inc
ficoml
fwait
incl
aad
call
add
sub
dec
jnp
int3
pop
fcmovu
push
jg
lcall
mov
jb
push
pop
sub
nop
test
aaa
lods
sahf
das
push
in
sbb
nop
call
mov
add
ja
lds
xor
hlt
adc
and
and
aas
ljmp
xchg
or
cmp
andl
dec
mov
xchg
add
jmp
add
pop
xor
sbb
and
bound
lods
in
rcr
pop
mov
mov
mov
js
orl
jae
insl
ljmp
xlat
int3
mov
shlb
ret
out
fsts
jl
ss
dec
hlt
mov
sbb
xchg
pop
hlt
jp
fisubrl
nop
xor
inc
push
std
mov
xchg
mov
ret
xlat
ss
cld
sbb
cli
call
push
push
hlt
mov
jge
push
pop
insl
leave
mov
lret
mov
sbbl
aas
jmp
mov
jle
cmp
cmp
stos
rol
jle
push
enter
fcmovbe
je
test
incl
sub
test
into
sub
out
enter
fistpl
lcall
mov
jne
stos
xor
xor
push
enter
or
push
mov
decl
or
mov
mov
push
adc
and
mov
aas
idiv
ljmp
fs
scas
and
pusha
andl
movsl
popa
xchg
mov
xchg
fstpl
push
or
xchg
sub
jg
or
cs
stos
mov
in
test
cmp
xor
mov
scas
cli
out
adc
pop
sbb
rcrl
push
mov
aaa
mov
fcoml
dec
call
sbb
js
enter
jne
dec
and
cmp
push
adc
mov
inc
mov
sbbl
out
cmp
lahf
aad
hlt
cmc
into
pop
fidivrs
sbb
jl
sbb
das
cmc
mov
xchg
cld
ljmp
cmp
test
sub
mov
loope
cmp
ret
mov
pusha
data16
ret
pop
nop
cmp
jbe
repnz
pusha
clc
incl
mov
adc
add
dec
push
and
ljmp
out
xchg
imul
stos
cmpsb
jno
cli
addr16
mov
jnp
daa
sti
jns
dec
lea
and
push
mov
adc
lcall
insb
jecxz
xor
dec
pop
xchg
pop
or
adc
cmpsb
shlb
fstl
pushf
imull
push
bound
dec
adc
leave
call
fcompl
ffree
pop
push
pop
sbb
dec
outsb
cmc
mov
push
and
dec
bound
ljmp
int
dec
mov
and
mov
pop
aam
jnp
mov
push
mov
xchg
call
sub
dec
push
rcll
loopne
ljmp
rol
or
cmp
addb
ds
pop
call
fldcw
jg
scas
push
test
int3
andl
inc
js
xor
mov
jge
pushl
outsl
add
mov
push
xor
shlb
pushf
xchg
push
cmp
dec
jmp
dec
insl
or
xchg
lods
push
jmp
call
jnp
lcall
pop
shrl
mov
mov
inc
and
cld
mov
sti
jnp
fabs
jae
jb
mov
pop
hlt
addr16
test
dec
push
or
or
xchg
into
es
incl
jp
outsb
fwait
cwtl
das
repnz
push
fwait
mov
fsubr
lcall
fmul
inc
out
ljmp
push
mov
xor
test
xlat
in
dec
jne
xor
bound
ret
cmc
jmp
sub
sub
xchg
cltd
aam
jecxz
in
out
jg
pop
xchg
mov
mov
lcall
jl
in
cwtl
cmpsb
xchg
push
testb
and
cli
andl
jmp
test
or
lahf
xlat
test
addl
xor
roll
bound
adc
add
shlb
cltd
repnz
rorb
cmp
push
movsb
jp
add
cwtl
cltd
jnp
jg
pop
mov
add
testb
in
je
jl
nop
sub
xchg
outsb
movsl
je
adc
cld
dec
aad
adc
push
jle
jecxz
rcr
lcall
push
xor
andb
jmp
mov
lods
fstpt
and
fstl
scas
mov
iret
ret
aaa
xchg
jbe
lret
outsl
mov
dec
mov
sub
inc
int3
fwait
sub
adc
es
inc
lahf
imul
cmp
shl
scas
fs
ljmp
adc
repz
adc
xlat
cmp
add
pop
movsl
leave
out
lahf
cltd
pop
push
or
sti
lahf
mov
aaa
test
mov
jmp
pushl
xor
inc
dec
mov
roll
pop
jge
enter
jno
mov
mulb
out
clc
incl
sbbb
stc
sbb
push
jl
into
mov
pop
push
mov
out
sbb
call
add
xchg
jne
aam
sti
and
xchg
dec
xor
gs
ljmp
data16
sbb
inc
add
sbb
fadd
movl
xlat
daa
gs
jecxz
jno
call
imul
hlt
adc
sbb
xor
mov
mov
push
push
dec
mov
jno
ljmp
cmp
push
xchg
mov
pop
ds
scas
xchg
jns
das
into
xchg
imul
jle
repnz
imulb
or
mov
mov
es
sub
arpl
dec
call
incl
mov
inc
stos
jb
rorb
pop
outsb
xor
xor
or
mov
cltd
xchg
and
push
lcall
fists
sub
repz
and
sub
adc
xchg
ficompl
enter
sub
jmp
adc
movsb
jle
adc
xchg
sub
push
push
or
shrb
dec
pushl
clc
ret
push
add
cmp
mov
sub
inc
aad
je
or
push
and
sub
incl
mov
bound
adc
xchg
into
fs
call
ds
jecxz
dec
mov
and
lock
ja
mov
push
dec
incl
cmp
inc
inc
add
cwtl
loope
fdivrs
ss
jb
jmp
pop
aam
dec
xor
mov
cmpsl
or
fidivrl
dec
xchg
out
aaa
std
inc
mov
xchg
orb
push
repz
or
bound
cmc
cmp
in
push
or
incl
push
lcall
jg
cmc
incl
mov
pop
cmp
and
dec
sbb
mov
ja
aad
lcall
lods
lahf
lods
inc
xlat
jno
in
stos
test
fmull
pop
jb
sbb
jae
mov
subb
sbb
pop
adcb
into
stos
mov
inc
test
lock
adc
sub
xchg
fbstp
and
inc
fldcw
add
pop
mov
enter
lods
out
aaa
cmc
mov
rorl
ljmp
mov
sub
sub
imul
pop
lcall
arpl
lods
mov
fiadds
ds
sub
fs
jbe
popa
or
icebp
mov
pop
sbb
inc
cltd
cmpsl
lock
dec
mov
std
lcall
movsb
mov
push
lds
push
jecxz
pop
sub
jl
lcall
dec
or
hlt
or
in
ffreep
mov
enter
push
xchg
mov
loopne
push
mov
jnp
cmpsb
jno
push
pop
pop
fimuls
std
add
mov
pusha
sti
adcl
mov
test
push
mov
jo
fimull
test
call
pop
shrl
sub
sub
sub
fxch
loop
jne
stc
fldcw
sbb
fstpt
push
icebp
mov
jmp
pop
pop
push
frstor
jnp
add
iret
test
inc
test
pop
cmp
fcomip
aam
jecxz
int3
mov
mov
mov
sti
mov
fisubl
sub
or
test
jp
andnps
mov
outsl
lahf
xchg
jg
call
cmp
jl
mov
xor
movsb
pusha
xchg
clc
mov
jmp
push
mov
scas
cwtl
cmc
outsl
jp
xor
jbe
ficompl
sbb
decl
das
fcmovnu
sub
sbb
mov
push
fwait
mov
mov
lock
out
pushf
push
shrl
mov
sbb
pop
push
scas
add
out
push
sahf
daa
repz
push
sahf
jmp
push
nop
loope
mov
push
movsb
mov
jp
mov
stos
daa
mov
mov
es
lods
clc
stc
jns
sub
inc
sbb
shl
out
add
int3
xor
call
js
jg
mov
iret
xor
push
mov
xchg
data16
repnz
lcall
dec
pop
shrl
repnz
pop
in
ljmp
int
cli
fsub
xor
call
jmp
sub
xor
int
lock
scas
sbb
movsb
inc
sub
aam
mov
jg
mov
and
inc
xor
dec
ret
adc
xchg
jb
adc
dec
jp
jbe
les
mov
ret
mov
and
jg
or
pop
sbb
hlt
pop
cmc
add
outsb
cli
es
ljmp
enter
mov
sbb
stos
adc
cwtl
inc
cld
lods
dec
lcall
loop
adc
repnz
bound
sub
stos
dec
xchg
pop
loop
mov
mov
xorl
je
call
aas
and
jo
push
cmc
pop
stos
push
aaa
ja
imul
mov
xchg
xor
imul
dec
sub
out
fwait
add
scas
pop
fcomip
sahf
leave
jae
dec
lret
dec
stos
jge
adc
int3
or
mov
outsl
test
je
ficoml
mov
shl
xlat
test
jle
repz
sbb
mov
imulb
lock
lock
dec
loope
pop
cwtl
mov
push
cmp
adc
ljmp
rcrb
test
subl
push
sbb
inc
mov
test
lahf
push
mov
sarl
or
push
imul
push
cld
jmp
add
outsb
mov
and
rorb
out
les
arpl
fldt
xchg
jmp
and
sub
push
scas
lds
push
mov
clc
push
cs
call
sti
jle
loop
xchg
and
adc
dec
jl
cmpsb
xchg
icebp
addr16
ljmp
or
ret
add
jne
mov
mov
xchg
pop
aaa
dec
rol
sbb
cwtl
das
xor
cmp
mov
and
xchg
das
xchg
fs
mov
mov
jb
jae
pop
xor
pop
lods
ljmp
pop
loopne
imul
xchg
incl
fsub
mov
int3
divl
enter
sbbb
lcall
sub
inc
and
clc
movsl
clc
adc
lods
xchg
ss
test
aaa
pop
pushf
mov
into
mov
mov
dec
mov
cmp
mov
xchg
les
call
scas
dec
mov
addr16
js
xchg
mov
pop
int3
arpl
cmp
js
push
js
aam
sbb
add
dec
jmp
inc
lock
imul
in
and
jno
mov
jmp
pop
mov
push
xor
loopne
pop
cmpsb
es
mov
lret
adc
jp
inc
lahf
xor
decl
sub
cmpsb
arpl
mov
sub
cmp
int3
out
cmp
and
xchg
xor
xor
bound
cmp
jle
stc
aaa
sbb
mov
in
fs
jmp
sbb
and
repz
cli
stos
add
push
xchg
cmp
icebp
mulb
pop
das
sar
xor
inc
jb
popa
xor
jge
hlt
and
sub
dec
fcmovnb
cmp
xor
lds
add
icebp
dec
mov
jb
pop
insb
and
lea
in
mov
pop
divl
sub
and
jge
jp
mov
inc
movsl
rclb
xchg
xor
clc
in
cmp
aas
jg
dec
cmp
sbb
mov
inc
add
call
pop
push
push
addr16
cli
sub
mov
add
lcall
rorl
push
cmp
push
fistpl
add
pusha
adc
iret
cwtl
cld
pop
cmc
inc
cmc
jmp
outsb
fisttpll
loopne
movsl
sub
in
sbb
ret
inc
out
xchg
mov
push
mov
mov
mov
fmull
xor
mov
dec
loope
cld
push
xor
or
xchg
lret
cwtl
cmpb
les
sbb
fbld
shr
pop
out
jmp
push
int
pusha
out
loopne
mov
cmp
inc
sahf
cmp
xchg
loope
dec
add
addr16
mov
enter
jle
mov
scas
insl
dec
mov
ja
and
lds
arpl
movsl
mov
ds
std
call
jb
add
mov
jae
pop
cmpb
cwtl
nop
mov
lcall
xorb
lds
or
test
adc
push
inc
pop
popa
in
jmp
mov
stc
push
sbb
popf
cmp
push
or
outsb
shr
pushf
popl
inc
sahf
insl
sub
incl
call
jae
mov
fmull
and
sbb
ljmp
mov
push
dec
xor
jb
adc
cli
cmp
and
or
mov
or
jmp
inc
imul
jo
mov
xor
push
inc
lcall
inc
and
mov
adc
adc
inc
inc
nop
outsl
into
inc
and
call
cld
or
add
pop
mov
test
pop
int
inc
pop
shr
xor
clc
jmp
mov
pop
inc
jo
mov
xchg
xlat
cmp
jg
jmp
mov
xchg
mov
scas
xchg
pop
sbb
jb
jmp
ja
decl
mov
in
ja
inc
mov
add
or
popf
movsb
jle
sbb
push
stos
lock
jp
jns
adc
idivl
xchg
sub
pop
or
and
movsb
iret
pop
icebp
outsl
cli
fistpll
fstps
inc
insb
int
mov
data16
pop
fistpll
lcall
ffreep
pop
adc
roll
imul
xchg
enter
sahf
arpl
pushl
adc
sahf
mov
fisubs
cmp
out
pop
inc
add
mov
aas
sbb
fcomps
ljmp
rclb
jo
adc
lock
push
pop
xchg
jnp
xchg
sub
jp
das
cli
pushl
adc
addr16
out
inc
scas
add
fldt
das
das
ja
jbe
lahf
jecxz
decl
push
loopne
cmpsl
and
lret
xchg
dec
adcl
jg
pop
popf
pop
pop
mov
and
xor
mov
cmpsb
push
das
dec
adc
xchg
dec
xchg
loop
add
int
or
xchg
lcall
aam
pop
jo
mov
pop
mov
jmp
add
test
add
or
xchg
fsubl
lret
sub
daa
adc
push
test
pushl
std
pushl
cmp
xlat
jmp
out
xor
fistps
loopne
add
mov
lcall
scas
pop
pop
ljmp
mov
and
push
insl
mov
addr16
ljmp
daa
dec
popa
inc
mov
adc
lahf
and
mov
mov
sbb
ljmp
icebp
es
dec
inc
aas
add
or
mov
push
push
adc
jmp
int
inc
and
mov
fwait
xchg
sbb
mov
fnstcw
inc
lcall
jmp
fs
jmp
shlb
or
cli
js
mov
sbb
cwtl
xorl
incl
call
push
cmp
leave
call
xchg
sbb
or
or
cli
mov
mov
enter
xchg
mov
fdivrp
xorb
sti
sar
jmp
pop
inc
sbbl
call
mov
pop
push
and
inc
ljmp
loop
xor
inc
popf
mov
lret
cmovae
movsl
popa
xor
pop
int
jo
xchg
fmuls
and
mov
pusha
filds
fdivl
lock
jno
inc
mov
paddusw
cmpb
je
fsub
sbb
inc
fstl
pop
hlt
lock
and
mov
add
clc
mov
loopne
mov
je
repnz
movl
call
jae
cmp
insb
and
js
mov
cwtd
push
push
fldenv
std
mov
jmp
cmp
repnz
and
fdivrs
fcomip
sahf
in
shrb
mov
repz
ret
mov
mov
adcl
test
iret
rcrl
inc
scas
cmpb
insl
in
and
decl
out
xor
sub
ret
cmp
cmc
and
add
cmp
das
orb
mov
arpl
mov
mov
jo
mov
sbb
test
xchg
hlt
mov
hlt
push
jmp
outsl
data16
ds
mov
adc
xor
pushf
hlt
out
and
and
sbbb
xor
pushl
mov
repz
add
adc
inc
inc
les
insl
adc
scas
cli
test
mov
sbb
icebp
push
push
xor
sbb
jl
or
repnz
mov
fwait
call
mov
jo
ret
lods
sbb
jo
inc
jle
outsl
push
imul
xor
jle
out
jg
lock
shrl
ds
sub
cmp
negb
adc
call
pop
aam
jle
push
stc
lock
lods
sub
jnp
and
mov
pusha
push
pop
lcall
adc
ljmp
mov
push
pop
cld
das
testb
flds
inc
aam
iret
dec
rorb
lcall
in
mov
sub
shr
out
aaa
xchg
jmp
xchg
scas
fidivl
mov
push
dec
aaa
xor
pop
jae
incl
and
jge
int
add
mov
xor
add
mov
ljmp
stos
cmp
das
jno
sub
pop
loop
mov
aas
sbb
loop
sti
cltd
cmc
lods
mov
mov
sti
mov
outsb
xlat
sbb
jb
or
stc
lcall
sub
loopne
scas
sbb
ret
je
data16
pushf
sbb
and
sar
decl
push
jge
ret
test
inc
test
mov
enter
jae
into
xchg
dec
je
sbb
push
add
jmp
sbb
xor
mov
int3
pop
pop
fbstp
inc
decl
decb
mov
sub
dec
call
test
jmp
out
add
call
pop
in
jecxz
loopne
cmp
cmp
xchg
stc
icebp
lahf
daa
xchg
lcall
jmp
inc
inc
jns
loop
jg
xchg
pop
jge
lods
inc
pusha
dec
clc
mov
jmp
pop
rorl
popf
dec
xor
pop
fs
cmp
mov
jmp
sbb
pop
push
cmp
pop
or
data16
test
cmp
push
xchg
mov
cli
sub
pushf
ds
jmp
add
sub
or
cltd
pop
fsin
ljmp
fistpl
adc
ss
mov
repnz
shlb
mov
dec
add
jp
jg
inc
add
int3
lret
push
adc
mov
decl
add
in
mov
ret
cmp
push
lods
cmp
sub
lret
xchg
mov
orb
mov
aad
push
popa
in
jns
lods
sub
adc
inc
in
xchg
clc
xchg
xchg
stos
scas
adc
in
pop
ret
test
jmp
push
lods
jle
insb
lock
ljmp
test
mov
popa
enter
int
cld
pop
ror
arpl
sub
nop
fldcw
out
cmp
mov
mov
pop
out
jecxz
dec
lahf
incl
mov
jg
jge
xchg
sub
je
mov
ss
aas
adc
jmp
jecxz
mov
jmp
ja
popa
jo
lcall
pop
popf
fbstp
mov
dec
mov
pop
inc
mov
push
lods
and
fcompl
leave
fstps
lret
out
lahf
lcall
mov
loop
push
jb
mov
mov
mov
and
dec
mov
adc
jmp
scas
or
subb
or
mov
stc
pop
mov
insl
sub
test
pop
data16
in
incl
xorw
jne
clc
mov
test
inc
cli
and
das
dec
test
xchg
lret
sub
aas
stos
mov
sbb
shll
adc
xchg
adc
call
loopne
mov
fs
faddl
and
roll
pop
jmp
inc
lods
xlat
push
lret
mov
push
xchg
sub
add
push
in
std
shll
stos
pop
pop
xchg
push
ja
and
cmp
stos
iret
dec
jmp
fstpl
pop
outsb
mov
stos
xchg
sbb
adc
js
test
stc
in
mov
mov
cmp
pop
cmpsl
push
jbe
les
jg
adc
mov
lds
popa
lret
ljmp
push
out
not
shl
call
xchg
pop
repz
aaa
and
inc
mov
lods
fstps
mov
insl
nop
cld
aas
mov
mov
mov
rorl
jmp
mov
cmc
add
sbbl
ss
aaa
stos
imul
fbld
jae
pop
add
jge
mov
adcb
les
add
jmp
cmc
test
hlt
mov
cmp
pop
dec
addr16
sarb
mov
xor
jl
jmp
decl
mov
inc
imul
or
mov
push
jno
insb
push
mov
out
out
mov
fiaddl
outsl
lds
xor
aaa
pop
das
out
js
mov
call
cli
mov
lock
sub
xchg
imul
push
lcall
decl
mulb
jb
push
mov
lret
push
cmp
sti
mov
sahf
inc
aaa
adc
movsb
xchg
add
stos
addb
in
lcall
das
dec
inc
pop
icebp
push
push
loopne
arpl
mov
and
or
mov
lcall
pop
mov
shrb
and
into
inc
cmp
rcrl
shrb
pop
lcall
subb
movsb
lock
lods
adc
xchg
rcrl
mov
mov
mov
enter
mov
outsb
lods
std
scas
xchg
test
or
std
cmp
cmpsl
or
jo
push
push
mov
lret
aad
fldenv
mov
push
adc
pop
cld
and
enter
outsl
inc
jle
out
test
incl
fs
jg
outsl
and
mov
push
inc
xchg
inc
xchg
sbb
fwait
incl
pop
lret
fs
inc
xor
mov
dec
jp
int3
fs
nop
mov
cmp
pushl
fbstp
mov
push
and
jle
repnz
or
pop
loop
test
loope
cli
les
pop
outsl
loope
sbb
out
mov
adc
cs
mov
cmpb
rclb
xchg
mov
cld
call
ja,pt
inc
leave
in
xchg
jg
mov
pushf
xor
pop
cmp
lods
daa
enter
rcll
fists
jno
mov
add
cmpsl
pushf
mov
dec
mov
mov
mov
and
ds
inc
dec
scas
hlt
dec
add
aas
pop
dec
pop
clc
sub
fwait
cmp
cmc
mov
into
loopne
ds
js
ljmp
out
arpl
sub
add
or
pushf
jg
popa
mov
in
or
call
jl
mov
sub
mov
xchg
out
adc
mov
call
call
inc
add
sub
adc
inc
mov
jg
cmp
mov
mov
sub
mov
imul
sbb
ud0
decl
mov
cmpsb
mov
push
jl
and
sub
dec
clc
out
dec
inc
sarl
scas
scas
mov
fwait
nop
daa
imul
push
popa
psadbw
out
sub
test
jns
pop
or
push
sub
ret
add
xor
or
sbb
push
idivb
add
xchg
add
adcb
pop
dec
iret
enter
adc
or
in
call
xor
add
inc
out
pop
jmp
xchg
je
cmp
and
ss
sti
xor
aad
pop
js
and
pushl
pop
mov
subb
xchg
sbb
mov
xchg
pop
popa
pop
std
jmp
adc
popl
lahf
or
dec
int3
jle
push
lcall
push
int3
movsb
add
mov
pop
rcrl
xor
popl
xor
clc
adc
cmp
jae
pop
fcomps
loope
mov
ja
sub
cwtl
mov
lcall
xor
repz
rcll
or
xor
mov
cli
cli
sub
les
iret
in
xchg
pusha
adc
leave
jecxz
cwtl
push
ret
lcall
or
mov
nop
ss
jl
aad
mulb
xlat
add
ljmp
lret
clc
cmp
fldcw
pop
mov
ljmp
insl
call
jl
inc
jns
dec
ss
jp
ljmp
pop
pop
cli
aad
ss
andb
les
call
push
inc
or
and
mov
adc
inc
cmp
fwait
inc
fimuls
and
test
out
out
cli
call
sub
sbb
fs
xchg
cmp
pop
in
loop
hlt
lods
add
dec
fwait
sar
incl
dec
cmp
stos
sub
jne
call
and
cli
movsl
inc
in
pop
adc
test
or
ss
loopne
jmp
inc
pop
movsb
mov
mov
mov
inc
mov
rorl
js
movsl
dec
mov
jmp
out
push
push
pop
jns
ror
push
inc
mov
lcall
ror
adc
daa
out
push
add
in
jmp
sbb
stos
sbb
inc
pop
test
movsl
jmp
ret
test
pop
aas
sbb
jmp
movsb
dec
cmp
lahf
test
popf
jg
cmp
or
sbb
push
in
popa
jae
jp
add
cmp
ss
cld
xor
fisttpl
mov
in
dec
mov
mov
mov
sti
cmp
sub
call
imul
je
insl
add
jno
aam
test
imul
mov
sub
jge
movsb
pop
pushf
or
pop
pop
pop
adc
lea
jge
cmp
xchg
scas
xor
xchg
bnd
dec
cltd
imul
shlb
test
fcmovnb
jb
std
lret
push
jge
jle
or
push
and
inc
hlt
fnstsw
sub
pushl
inc
cld
pop
das
loopne
xchg
in
clc
cmp
dec
andl
adcl
jge
xchg
and
inc
and
lock
call
jb
jecxz
lcall
mov
sub
stos
add
push
cltd
cli
decl
imul
xchg
ds
out
push
inc
hlt
pushl
cmpb
push
orl
xor
cltd
aad
cwtl
insl
loop
mov
pushl
xor
xchg
shrl
inc
out
sub
push
sub
push
lcall
xchg
out
jb
fstps
imull
xor
shrl
xor
push
cmp
jl
mov
call
jnp
imul
int
pusha
les
cmp
lock
add
xchg
in
push
pushl
daa
mov
pop
test
cwtl
cmp
mov
xor
pop
lret
jno
lods
xchg
lcall
mov
sub
nop
dec
pusha
mov
xor
sub
jge
ljmp
ss
mov
dec
and
mov
lcall
in
sbb
push
dec
or
incl
jmp
xchg
mov
outsb
add
or
xor
mov
out
mov
dec
lret
clc
call
lret
addr16
add
xchg
mov
data16
out
and
data16
xchg
cltd
cmp
and
mov
sub
mov
mov
fstpt
cmp
xchg
jno
xchg
rolb
add
jge
loop
das
mov
lcall
outsb
mov
imul
mov
jp
inc
mov
lea
fwait
xchg
cmp
int3
ljmp
jl
arpl
push
xchg
fadds
add
je
sub
push
out
fcompl
sbb
pop
into
in
jp
call
jmp
dec
loope
mov
dec
shlb
xchg
nop
ljmp
and
dec
divl
and
cmp
movsb
bound
in
dec
jo
pushl
in
jno
clc
push
xchg
adc
ljmp
inc
shrb
fwait
add
stos
add
mov
cltd
sub
repnz
and
outsl
push
jbe
mov
cmpsb
lods
bound
mov
sub
jbe
pop
xlat
xor
or
lret
stc
cwtl
testl
and
mov
dec
sahf
mov
fcos
jbe
pop
and
cmpsl
adc
and
mov
repnz
cmp
jne
fnsave
xlat
pop
hlt
test
test
dec
ljmp
or
jmp
pop
lods
pop
je
jno
int
sar
jg
call
mov
insl
mov
outsb
imull
outsl
cmp
mov
call
inc
adc
fsubrp
ljmp
enter
xor
popf
cmp
call
pop
mov
rolb
shll
je
es
testl
incl
jp
xchg
int3
and
out
or
pop
in
loopne
stos
add
sar
out
cli
fisttps
pop
pop
pop
mov
shlb
aas
mov
lahf
jg
pushl
aad
and
xor
xchg
pop
and
enter
jg
jge
or
cmp
std
mov
in
sub
pop
sbb
call
cltd
lds
sti
cmpsl
jb
or
xchg
ja
mov
mov
in
andb
mov
xchg
inc
mov
cmp
cld
mov
pop
push
mov
dec
lcall
dec
fs
cmp
xor
scas
cmp
sub
fiadds
fcomip
cmp
fisubl
sbb
push
xchg
pushf
add
mov
jb
data16
mov
mov
dec
xor
fs
add
es
call
jne
scas
in
sbb
and
int
mov
clc
adc
cs
movsl
pop
xor
mov
dec
sbb
fistpll
push
xchg
insb
jae
pop
sub
adc
jmp
cmpsb
decl
mov
add
movsl
dec
push
push
jo
out
sbbl
cmc
dec
push
dec
cmp
sub
loopne
decl
sub
xchg
jo
inc
pop
pop
ret
popf
xor
leave
or
dec
add
out
sarb
aaa
inc
adc
mov
sbb
or
add
dec
pop
dec
mov
test
lcall
push
test
aad
or
pushf
cmp
and
lret
daa
rcrb
rorl
popf
mov
sub
mov
mov
xor
repnz
call
mov
stos
adc
outsb
ja
int
mov
or
les
lds
push
cmp
stos
xchg
dec
in
xchg
sub
mov
or
add
jg
imul
pop
and
inc
js
push
test
jns
sub
and
lret
fisttpl
out
lret
gs
incl
rcrb
mov
scas
dec
cs
sbb
stos
addr16
cwtl
pop
xchg
std
pushl
xchg
loopne
movntq
out
repnz
pop
jl
pop
outsl
push
cmp
ljmp
pusha
stos
inc
inc
test
icebp
dec
out
movsl
lea
xor
rcr
mov
jge
or
jns
subb
imul
jne
push
jmp
sub
scas
loopne
cmp
aam
lahf
loop
test
mov
mov
xor
and
mov
imul
mov
cld
call
jecxz
add
stos
ffreep
xchg
jnp
jecxz
xchg
fwait
dec
sqrtps
jno
pushf
pop
dec
imul
call
cmpsb
xor
sahf
or
in
dec
pusha
inc
shll
sahf
int
adc
into
jg
test
cmp
sbb
andl
into
mov
scas
call
imul
sbbb
mov
fwait
mov
movb
out
push
jno
dec
push
out
jbe
inc
mov
jl
add
dec
ljmp
mov
out
test
add
xor
imul
jp
js
pushf
outsb
fdivr
call
cld
and
fs
cmp
lret
into
mov
pop
pop
scas
incl
mov
jge
mov
neg
fstps
jns
mov
mov
cmp
xchg
pushl
popf
cmc
in
ja
mov
jle
rorl
cwtl
into
xor
push
sub
jge
movsl
test
icebp
flds
jmp
pop
push
push
outsb
adc
pusha
decb
lcall
push
mov
adc
sbb
inc
enter
dec
decl
cwtl
fwait
jmp
sub
and
sbb
or
iret
mov
repnz
fs
sarl
xchg
pop
ljmp
or
add
cmp
int3
xlat
lahf
out
clc
push
fidivrs
jns
leave
loopne
and
jmp
sahf
scas
sub
jmp
or
data16
into
insl
into
mov
or
decl
test
pop
fstps
dec
ficomps
push
sbb
or
subl
cs
test
psubsb
rcll
call
push
dec
add
pop
imul
dec
jb
inc
shufps
popa
std
out
call
mov
lcall
aad
adc
ret
pop
xchg
test
mov
dec
adc
add
pop
jmp
test
decl
in
aas
or
in
sbb
mov
jl
or
out
orb
fsubrs
fdivrp
jmp
pop
xor
popa
ljmp
pop
sbb
and
cld
mov
decl
add
cs
aam
pop
adc
and
add
pop
arpl
ljmp
out
mov
mov
mov
rcrb
adc
mov
jbe
out
jl
ficomps
fiadds
fstpl
in
jbe
stos
push
insl
loope
dec
pushf
ss
rcr
in
cld
call
sbb
jl
mov
outsl
cltd
data16
xchg
imul
inc
and
jg
dec
pop
sub
push
loope
xchg
jl
cld
aam
xchg
mov
lcall
cmp
add
dec
xor
fimull
mov
xor
jns
decb
inc
rclb
and
testb
andl
sbb
icebp
orl
sar
push
ret
add
data16
push
mov
es
hlt
jmp
test
jae
mov
mov
in
and
fisttps
lahf
mov
sbb
icebp
jle
mov
sub
rcrl
jno
inc
dec
mov
push
dec
leave
sub
ds
and
in
stc
and
sbb
or
lret
test
sti
dec
cwtl
decl
jge
lods
push
cmp
cmpb
jmp
lock
and
inc
std
std
sti
adcl
in
das
sahf
pop
std
dec
imul
cmp
dec
incl
in
in
cmp
jp
pop
je
pop
inc
incl
xchg
cmp
icebp
negb
xor
sub
and
push
call
imul
loop
jnp
cmpl
xor
sarl
adc
fdivrl
pushl
xor
fadds
xor
and
adc
shr
mov
clc
jb
push
inc
sub
les
lods
decb
jg
pop
pop
xor
add
mov
outsb
mov
mov
call
jb
adc
jle
fmuls
incl
xchg
pop
cmp
loopne
jl
test
js
popf
repz
lcall
loopne
jno
hlt
dec
dec
push
mov
das
sbb
loope
xchg
dec
cmp
aas
clc
int
jp
or
or
jne
dec
js
dec
popa
cli
mov
pop
lds
mov
lcall
xor
out
mov
fwait
cmp
mov
pop
fstpt
xor
xor
aas
enter
mov
ljmp
pop
scas
mov
push
fs
call
inc
xchg
cmp
jle
mov
push
in
dec
movsb
and
imul
mov
sbb
testb
mov
shlb
fidivs
fmuls
jle
pop
adcl
adc
fs
xor
jg
lcall
icebp
das
das
push
daa
mov
pop
cltd
movsl
mov
fistpl
stos
outsb
jbe
test
decl
lds
lahf
pop
dec
cltd
inc
dec
mov
and
adc
imul
rcll
call
cmp
aam
jle
inc
pop
or
inc
xchg
dec
ja
movsl
int
jg,pn
das
or
fcomip
push
call
cmpsb
jo
and
jno
shr
shl
mov
mov
incl
sti
and
pushf
adc
popf
push
shrb
sub
jg
call
inc
jg
xor
fidivrl
outsb
lock
les
andb
lcall
push
stc
add
jno
mov
enter
ljmp
or
lcall
xrelease
jbe
jno
into
xchg
mov
xchg
out
dec
out
cmp
mov
pop
out
test
mov
pop
ss
cmpsb
jecxz
xchg
lret
scas
xor
fadd
lods
insb
jmp
cmp
ret
mov
sub
adcl
imul
es
out
imul
sahf
movsl
xor
and
pop
or
aaa
out
ljmp
cmp
cld
repz
mov
nop
sub
jbe
loop
jns
stc
dec
xchg
cmp
pop
push
stc
push
jmp
adc
data16
cmp
ljmp
cmpsb
cmp
ljmp
cmp
ss
mov
push
or
data16
out
outsl
inc
shrl
sbb
cmp
push
sbb
push
xchg
mov
call
lcall
daa
inc
into
mov
iret
fucomp
jae
shlb
adc
std
sahf
xchg
lcall
mov
add
mov
cltd
sbb
sbbl
ljmp
decl
jecxz
in
sbb
jle
rcrl
pop
fbld
mov
fnstsw
popa
sub
arpl
mov
insb
and
insb
inc
adc
inc
cmp
cmpsb
fwait
gs
push
cli
cltd
cmp
call
sub
aas
jp
scas
loopne
lret
call
ja
xchg
test
imul
ss
aas
lock
mov
fdiv
pop
jl
ret
gs
in
inc
inc
mov
add
into
loop
decl
call
xchg
and
test
lret
outsb
mov
xorl
mov
mov
call
jae
daa
ja
xor
mov
psubw
mov
adc
push
out
cmp
pop
hlt
mov
loope
cmove
insb
in
inc
fistpl
gs
lods
sbb
pop
stos
mov
mov
sbb
mov
xchg
rcrb
data16
and
jg
mov
incl
mov
add
pop
je
int3
pop
shl
jmp
ret
push
inc
aad
hlt
dec
add
call
sbb
mov
scas
fisttps
or
inc
into
xchg
or
xchg
loope
clc
inc
iret
push
mov
decl
sub
or
mov
aas
xor
and
ret
incl
imul
xchg
pushf
jnp
sti
out
mov
fs
lcall
bound
mov
push
xchg
or
sub
and
lods
dec
sbb
repnz
adc
push
xchg
lods
xor
popa
and
in
daa
cs
inc
xchg
dec
daa
cmp
and
sub
sbb
test
or
testl
jecxz
jmp
mov
xchg
dec
sbb
mov
push
adcb
jmp
push
js
lcall
push
stos
jecxz
push
mov
mov
insl
sub
in
in
push
mov
out
jmp
xor
js
inc
inc
call
lret
cmp
jmp
imul
sar
mov
lods
cmp
inc
sub
cmp
push
lcall
lret
push
outsb
xchg
add
add
and
jg
cmp
adc
dec
and
mov
jno,pn
add
jp
inc
lcall
mov
add
out
xchg
push
pusha
js
pop
bound
ja
fisttpl
in
jb
dec
insb
loopne
call
dec
pop
mov
xchg
cmpb
lret
cmpsl
lahf
stos
jl
sub
decl
ret
cmpsb
push
lds
in
jno
mov
xor
das
push
bound
enter
pop
dec
push
dec
sub
fmul
gs
negl
push
sub
cmp
adc
push
xor
call
push
push
cmpsb
sub
and
inc
cld
sub
sub
push
jge
pop
mov
mov
ljmp
aam
mov
mov
pop
gs
push
cmc
and
call
add
bound
xor
out
jbe
rcl
jge
jmp
subb
push
adc
outsl
movsl
adc
cld
call
push
stc
jb
push
xchg
or
movl
jnp
xchg
mov
xchg
dec
mov
lock
and
jo
or
add
jb,pn
sbb
add
or
xor
xchg
mov
jno
dec
adc
jecxz
mov
lock
movsl
dec
repz
lds
fdivp
fnstsw
sbb
inc
ss
mov
pop
mov
mov
enter
ss
incl
xchg
into
daa
mov
fdivrs
pop
mov
popf
push
scas
clc
push
pushl
iret
cli
mov
cli
mov
jg
mov
mov
and
std
pop
stos
fisttpll
jbe
lret
push
test
cmp
lock
inc
in
ret
call
add
insb
or
mov
into
outsl
nop
cmp
ds
xchg
push
loop
mov
sarb
lds
jmp
push
xchg
dec
repnz
inc
mov
rcrl
mov
sbb
aas
add
ss
pop
mov
sbb
mov
mov
loopne
fcmovnbe
jnp
lea
sbb
test
pop
popf
mov
movsb
jecxz
aas
mov
sbb
cli
xchg
push
pop
cmpsb
popf
adc
sahf
les
dec
lahf
hlt
mov
cmp
lock
incl
mov
dec
cmp
outsb
aas
lret
sti
ficoms
jg
mov
lea
add
jl
xchg
imul
push
xchg
pusha
loopne
lcall
insl
sbb
in
movsl
popf
pop
push
xor
jno
ljmp
fs
mov
push
xchg
lods
ss
jge
stos
mov
int3
cmp
push
in
mov
push
xor
lret
dec
cld
lcall
mov
int
rolb
mov
sti
in
loope
call
dec
sti
dec
adc
es
pop
vpmuludq
cmp
ss
scas
loope
inc
mov
stc
dec
push
aad
jno
sub
xchg
aam
mov
pushl
inc
les
sub
adc
leave
hlt
hlt
dec
push
sbb
xor
mov
call
test
mov
pop
mov
gs
test
jmp
ljmp
popa
test
xchg
in
push
pop
pop
sub
cmc
mov
lods
inc
push
data16
je
jge
sbb
pushl
jg,pt
mov
add
inc
inc
xor
cmpsl
gs
cmpsl
sub
mov
cmp
inc
call
ja
sbb
lahf
push
jae,pn
mov
lret
xorb
push
ja
push
mov
jecxz
jmp
ret
cmpsl
add
jne
push
call
ds
dec
sbb
std
rol
mov
add
pop
push
dec
or
incl
cmp
add
stos
push
test
loope
out
sti
lods
add
push
ret
incl
mov
add
and
aad
push
lods
pushf
xchg
adc
movsb
mov
push
in
fistpl
in
sbb
adcb
xchg
lahf
mov
cmp
ja
mov
add
ljmp
lret
push
inc
xchg
push
cmp
cmc
push
push
jle
xchg
lock
pop
icebp
push
push
and
in
loope
adc
icebp
out
jecxz
jg
push
cmp
or
jbe
lock
aad
add
and
rcl
jae
ret
mov
pop
pop
mov
jge
inc
sti
mov
movsl
adc
ds
test
dec
enter
sub
pushl
int3
pop
out
movsb
xor
mov
and
cmpsl
jbe
push
jno
sub
jge
mov
mov
pushl
std
movsl
jp
movsb
fdivrs
jge
loopne
rclb
push
sbb
mov
decl
into
data16
adc
fs
pop
xchg
pop
loop
sti
nop
imul
mov
pop
cmp
cmpsl
pop
or
ret
jl
add
xchg
mov
inc
or
call
mov
cmpsb
or
lret
pop
std
pop
xchg
pop
fucomip
rorb
push
lahf
mov
inc
mov
jb
push
pop
outsl
push
dec
stos
add
dec
xorb
sbb
mov
jmp
mov
pusha
mov
mov
add
sub
out
mov
add
imul
cmp
lods
or
in
jecxz
in
fidivrs
aaa
xor
add
fcomps
sti
and
arpl
and
push
add
movsb
sub
das
add
in
es
lret
mov
mov
addl
das
and
cmp
or
incb
orl
icebp
mov
ljmp
fs
aas
out
iret
pop
fildll
stos
mov
or
add
or
hlt
xor
popf
xorb
imul
lcall
pop
push
xor
addr16
cmp
sbb
ds
xchg
cmp
xlat
stos
mov
xor
ljmp
xor
sti
pop
test
call
mov
dec
mov
stos
and
pushl
mov
or
pop
out
xor
pop
mov
movsb
push
hlt
mov
cs
xchg
bound
stos
push
or
jns
cmp
cmpsl
stos
ja
add
ljmp
push
xor
mov
insl
pop
push
into
and
dec
cmpsb
mov
adc
mov
inc
pushl
std
mov
inc
lret
iret
push
jecxz
lret
push
push
mov
inc
sbb
cmp
lcall
aas
fisttpll
mov
insl
js
mov
cmp
jbe
in
ret
ret
sbb
dec
cmp
sbb
add
jecxz
imul
sbb
pushf
leave
dec
lods
mov
loopne
lcall
addr16
mov
mov
push
ds
shrd
sbb
pushaw
or
adc
in
push
fildll
shrb
and
sub
xor
shll
inc
js
call
or
adc
xchg
negl
lea
adc
pop
pop
icebp
std
jle
es
dec
sbb
jne
inc
aad
icebp
lds
fsubl
int3
mov
icebp
push
cmp
cli
loopne
or
xchg
mov
pop
out
xchg
mov
lock
call
mov
mov
mov
arpl
and
add
mov
mov
insb
mov
sub
jnp
cld
push
adc
loop
xor
das
popa
rolb
jl
call
mov
mov
mov
ljmp
mov
jmp
incl
sbb
fld
mov
lcall
call
std
ljmp
adc
movsb
xor
cli
mov
fisttpll
push
mov
subb
jmp
pushf
stc
cmp
push
pop
std
inc
xchg
inc
ljmp
cmovs
dec
into
push
dec
in
ret
jae
mov
push
dec
adc
cmp
jmp
pop
movsb
fimull
aam
daa
cwtl
xchg
fwait
stos
mov
mov
mov
dec
repz
pop
jb
jne
js
sti
mov
insb
adc
das
out
inc
iret
fwait
pop
mov
mov
add
adc
decl
sbb
test
popf
insl
out
jg
jb
mov
jmp
jp
cmp
xchg
dec
mov
xor
bound
fcomip
iret
je
sbb
mov
into
jmp
cmc
pop
pop
pop
iret
jmp
mov
pop
mov
pop
cmc
movsl
xchg
pusha
xchg
jmp
pop
int3
lahf
and
ljmp
das
lea
mov
into
add
shr
ds
mov
mov
push
inc
dec
std
out
jl
rclb
incl
test
jbe
into
out
mov
inc
data16
rolb
iret
movsl
decl
lock
shll
repnz
cmp
loop
xor
call
and
mov
xchg
sub
sub
mov
mov
pop
fwait
data16
imul
sbb
std
jmp
lods
test
pushl
shl
or
xchg
push
inc
fmull
out
idivl
sbb
and
add
sbb
adc
mov
and
outsb
mov
enter
rcl
jmp
fisttpl
sub
inc
les
mov
dec
push
mov
icebp
fistl
xor
scas
pop
xchg
fsubrl
xchg
test
pop
mov
fists
ljmp
mov
imul
and
xor
jge
cmp
loopne
jmp
arpl
lret
lret
inc
lret
mov
test
lock
dec
movsb
ljmp
ds
jle
sbbl
xchg
xor
decl
mov
stos
popa
sahf
cmp
daa
jo
pop
cli
outsl
sub
cmpsl
incl
cmpsl
pop
and
push
or
out
jb
mov
outsl
or
call
inc
icebp
pop
aaa
pop
insl
fstpl
mov
rcl
push
push
test
fadd
jb
cld
incl
dec
js
pop
add
inc
lds
lock
pop
jmp
mov
insb
sbb
jbe
mov
notb
arpl
sub
pusha
pushf
lock
das
movsb
xchg
jmp
mov
pop
das
mov
mov
cmpsb
pop
sarb
filds
push
xchg
movsb
xor
mov
mov
mov
adc
fsubrl
xchg
call
cld
incl
movsl
cli
and
and
stos
pop
mov
test
pop
lods
xchg
jne
jmp
lcall
dec
xchg
call
xchg
into
hlt
push
mov
sub
mov
push
lcall
or
mov
push
or
push
mov
jae
mov
daa
test
out
mov
cmp
rcll
mov
lods
adc
cmp
call
xchg
add
into
test
adc
jnp
sub
pop
jg
jae
cmpb
mov
in
test
xchg
aam
call
nop
push
cmp
sub
mov
sbb
aaa
into
xchg
jg
pushl
andl
in
movsb
movsl
and
cltd
ljmp
add
jo,pn
push
movsb
gs
adc
popf
push
scas
pushf
cmpsl
jbe
adc
pop
mov
lcall
sbb
push
lods
mov
sahf
aam
andb
sub
loope
and
xor
movsl
mov
ret
mov
out
repz
out
pushf
imul
pushl
sbb
mov
icebp
jp
aad
sbb
jno
stos
pop
into
subb
rorl
push
pop
or
incl
cmpsb
stos
je
nop
je
rclb
nop
ljmp
decl
sti
in
inc
mov
addl
or
push
jb
loopne
jg
rcrb
and
stos
movsl
imul
xchg
sbb
cli
jg,pn
jmp
mov
push
lods
inc
lret
lods
iret
dec
stos
mov
sbb
je
inc
pop
loope
xor
int3
mov
sbb
xlat
mov
test
daa
cmp
sbb
jmp
cltd
mov
scas
pusha
push
test
out
and
mov
xchg
pushl
addr16
addb
mov
call
jbe
cltd
arpl
cmp
mov
negl
mov
xchg
in
inc
shlb
xchg
cmp
je
or
jmp
popf
sti
push
lret
jg
jl
add
repz
adc
inc
mov
cmp
xchg
clc
jns
jmp
mov
out
sbb
pop
and
xor
jae
sub
sar
call
repnz
leave
lock
lret
xchg
movsl
arpl
pop
fadds
jmp
fdivr
jle
xchg
scas
adc
cmpsb
or
and
pop
mov
aas
repz
mov
loopne
stos
jmp
jmp
jno
les
dec
adc
pop
push
lahf
adc
lcall
aam
rorl
dec
mov
stc
popa
pop
cmc
cmp
out
test
pop
fisttps
or
loopne
cmpsl
ljmp
adc
stos
ja
xor
lahf
or
jmp
insb
aas
outsb
frstor
adc
stos
push
repz
jp
loopne
sub
iret
bound
lcall
or
arpl
orb
in
sahf
ret
jns
jle
aam
inc
inc
test
incl
push
push
push
xchg
stos
clc
push
sub
jbe
mov
aam
cmc
outsb
push
dec
outsl
xchg
ss
pop
lret
cltd
dec
ljmp
movb
jae
xchg
das
and
xor
fcomip
decl
outsl
jmp
jl
mov
iret
xor
int3
or
out
fs
cld
fcmovne
mov
pop
cmpsl
sub
cli
jbe
sub
lcall
xchg
mov
mov
fildll
cmpsb
sar
adc
leave
les
mov
ss
cwtl
mov
dec
jns
in
sub
pop
insb
outsb
test
orb
push
lds
es
call
dec
and
adc
fsubr
dec
fstl
mov
outsl
add
fimull
adc
cli
pop
imul
pop
jge
inc
cmc
nop
jae
jle
and
cmp
push
imul
cmpsl
fnstcw
jecxz
aas
mov
push
cld
decl
rcl
push
mov
data16
sub
push
jne
fwait
mov
sub
addb
cmp
or
pop
xchg
out
outsb
aad
jb
jno
fisubs
add
decl
pop
mov
test
sbb
sbb
or
jo
mov
mov
jl
xchg
jle
xchg
arpl
jnp
cmp
dec
xchg
push
gs
in
jg
test
adc
into
insl
and
dec
inc
sub
fcmovbe
incl
dec
jmp
mov
xchg
mov
or
push
sar
idivl
test
lahf
mov
lods
or
jl
dec
or
push
lock
jmp
outsl
adc
loop
dec
imul
repnz
out
test
hlt
decl
jns
inc
negb
iret
xchg
mov
lcall
mov
jge
roll
and
fstpt
mov
mov
and
jecxz
fcomip
xchg
xchg
in
xchg
repnz
or
subl
ja
push
out
lcall
and
pand
jb
sbb
shl
cld
cltd
inc
xor
jne
repz
jg
jmp
je
fnstsw
popa
scas
filds
pop
gs
sub
pushl
js
aam
xchg
cli
cmp
cmp
int
add
lcall
fadd
sub
rcrb
push
push
mov
jne
adc
jp
clc
clc
pushl
adc
imulb
popf
mov
leave
loopne
xor
or
aas
scas
sar
incl
mov
lret
pop
mov
dec
jns
mov
call
jo
call
xor
or
clc
sub
and
dec
sbb
jb
daa
add
decl
fucom
lahf
icebp
xchg
fsubs
fisttpll
test
push
jbe
nop
mov
mov
aas
movsb
insl
mov
nop
dec
xlat
sub
int3
xchg
ja
xor
push
test
outsl
pop
cltd
mov
dec
dec
xlat
mov
sbb
inc
scas
cmp
sbb
fisttpll
mov
add
icebp
rorl
lcall
lret
mov
and
jle
dec
inc
cwtl
ljmp
lcall
add
mov
stos
sub
adc
ljmp
mov
in
outsb
sbb
movsb
data16
mov
icebp
mov
pushl
shll
lahf
or
sub
mov
xchg
inc
xchg
bound
inc
cli
sar
call
test
add
pop
pop
lods
in
lahf
xchg
bound
aas
arpl
imul
adc
push
pop
lret
ljmp
subl
mov
mov
sti
xchg
mov
pushf
dec
cld
xor
incl
int3
cmp
fstpt
add
xchg
dec
jnp
xchg
jo
stos
sti
mov
data16
pushl
movsb
in
stos
fimull
adc
push
std
loopne
imulb
or
adc
jns
jle
aad
jmp
cli
fldl
mov
jmp
call
outsl
rclb
pop
add
jmp
rcl
lods
inc
es
mull
imul
cmc
push
aad
cmp
inc
pop
and
jg
cmpsl
popa
out
jne
test
dec
clc
loop
out
sahf
arpl
imul
stos
lcall
cs
add
ja
xchg
in
or
pop
mov
daa
add
loopne
cld
call
mov
mov
push
inc
dec
mov
pop
mov
mov
xchg
and
mov
lahf
pushf
sbb
jbe
add
pop
jp
add
mov
je
hlt
fnstsw
clc
xor
out
or
aad
jnp
jmp
sbb
sbb
push
inc
fcmovnbe
pop
lock
pushl
idivl
in
aad
daa
in
in
inc
fnstcw
repz
mov
push
sbb
or
mov
and
dec
pop
fdivrs
dec
lcall
int
call
xor
sub
cmp
mulb
mov
pop
jno
rcrl
ljmp
or
mov
mov
lock
roll
aaa
mov
add
xlat
test
call
or
sub
sahf
xor
lahf
je
popa
mov
shrb
mov
adc
push
jns
push
nop
xchg
or
lcall
ret
xor
pmulhw
call
jecxz
ret
decl
mov
or
leave
or
push
mov
out
cld
mov
cltd
out
xchg
inc
add
ds
sti
lahf
xor
cmp
cmpsl
mov
das
adc
decl
sbb
adc
sub
call
fnstcw
push
sar
ljmp
sub
movsl
push
jae
add
and
mov
sbb
pop
jmp
or
jg
push
andl
scas
scas
shrb
or
push
insl
stc
dec
mov
sahf
push
lea
call
fcomp
push
aad
cli
sub
add
jno
cld
loopne
push
adc
ss
xchg
fcomip
dec
ret
pusha
je
inc
jb
insl
ljmp
jge
inc
mov
andb
clc
decl
mov
jb
add
push
outsb
mov
popf
andb
cmpsb
mov
sbb
negb
enter
nop
push
stc
and
jmp
call
sarb
stos
jnp
icebp
aad
mov
or
push
cmp
loop
mov
repnz
lds
sub
stos
jmp
mov
mov
and
push
mov
fbld
add
cltd
stos
ds
xor
dec
xchg
dec
lods
lds
ljmp
sub
fs
jmp
jl
flds
or
mov
ljmp
dec
or
loope
push
sbb
mov
loopne
adc
fucomi
loop
scas
pop
sbb
pop
lea
cli
lcall
jp
dec
stc
lds
pop
inc
cmpsb
and
push
mov
cmpsb
inc
dec
pop
adc
cmp
sbb
data16
push
dec
loope
arpl
or
enter
popf
jmp
push
scas
lods
sub
lret
sub
cmp
imul
mov
popa
mov
enter
repz
ror
aas
inc
adc
add
test
mov
mov
rclb
add
mov
movsb
sub
in
aas
xchg
mov
mov
loop
dec
and
adcl
lcall
mov
mov
push
in
out
fstl
insb
push
adc
sbb
mov
cmp
jp
cmp
ljmp
sub
outsb
aas
into
fs
add
push
mov
xchg
decl
dec
movb
jl
mov
sbb
loop
mov
sbb
sbb
ljmp
push
add
cmp
adc
lahf
into
in
push
inc
sub
fcmovne
ljmp
adc
and
sub
daa
lock
sahf
int3
jge
inc
and
shr
xchg
pushf
inc
mov
dec
test
mov
dec
test
cmp
lcall
sub
mov
data16
mov
movsb
inc
adc
scas
xchg
insb
ret
out
push
in
jmp
inc
sarb
aad
into
mov
test
rorl
call
push
sub
inc
int3
xor
adc
test
push
dec
mov
dec
ret
les
insb
rolb
popl
cli
push
xchg
sub
cltd
sti
pushf
or
pop
js
push
addl
mov
ret
ficomps
mov
xchg
push
sbb
outsb
fmuls
push
xor
push
adc
roll
mov
jg
sbb
cmp
cltd
or
loopne
sub
pop
inc
lret
pop
push
xchg
jns
dec
test
inc
pop
lret
enter
notb
and
lds
dec
rorb
pop
jnp
mov
cld
jb
sub
mov
aam
lock
lar
popf
mov
fidivl
lret
testb
jmp
das
add
int
jge
dec
js
jb
mov
xor
incl
xor
push
ljmp
jae
inc
sbb
jle
mov
sub
adc
fcomip
jge
test
sbb
das
je
scas
inc
mov
inc
cld
int
lods
movsl
shrb
cli
cmpsl
or
push
cli
xor
cmpsl
pop
inc
push
stos
xor
call
cld
pop
shlb
fwait
add
pop
lret
int3
lods
and
lret
pop
and
jmp
repz
sub
add
inc
scas
xchg
push
imulb
or
out
mov
hlt
int
sahf
mov
fcmovnbe
cmpsb
push
xchg
sbb
clc
ljmp
sbb
sbb
loope
inc
insl
or
movsl
test
call
sub
ljmp
dec
adcl
stc
jmp
and
xchg
hlt
orl
insb
sub
xorb
mov
xorb
add
jmp
and
adc
jno
jbe
add
inc
call
mov
jl
shrl
jp
sbb
cmp
pop
fidivrl
stc
jg
cmp
test
xor
ja
dec
and
shr
xor
jbe
sbb
lock
sub
and
add
call
inc
mov
xchg
insl
mov
scas
jno
and
jge
fldcw
scas
add
call
sbb
adc
pop
mov
sbb
incl
cmp
stc
push
push
push
sbb
mov
or
in
pop
test
incl
pop
cmp
jb
adc
xor
jle
lea
xchg
sbb
inc
lahf
or
or
je
sub
loop
std
pop
dec
movl
call
adc
xor
insb
outsb
ret
cmpsl
sub
sub
scas
cmp
mov
sar
push
loopne
mov
jae
pusha
out
push
push
decl
pusha
loop
call
mov
bnd
adc
jmp
xor
jg
into
pop
loopne
mov
in
iret
mov
mov
icebp
pop
inc
in
lock
mov
addr16
mov
push
jb
jo
add
addr16
jecxz
ficoms
mov
dec
test
or
out
js
roll
in
cmp
aam
lds
pop
test
jp
push
in
cltd
movsb
ja
jg
jo
dec
lahf
xchg
adc
mov
es
jg
mov
or
mov
test
xchg
cltd
aad
xor
movsb
jecxz
decl
mov
sub
notb
adc
mov
push
jg
xchg
add
pop
mov
cmc
ret
mov
cs
ss
ljmp
stc
pop
mov
pop
bnd
push
adc
cwtl
lods
jno
cwtl
insb
adc
popf
clc
mov
call
jecxz
cld
jb
cltd
jnp
dec
test
je
jl
cmp
add
or
pop
sbb
sub
outsb
lcall
mov
add
incl
xlat
mov
jns
pop
adc
jno
sahf
sbb
aam
adc
jnp
sarb
mov
jmp
push
subl
jmp
pop
add
cmc
sahf
mov
push
loopne
push
lret
xor
xor
mov
imul
jnp
sarl
jle
test
call
frstor
test
enter
bound
aas
push
fwait
mov
inc
push
rcr
mov
cli
jmp
imul
push
sarl
lret
call
rcll
jns
lock
xchg
dec
iret
xlat
test
fmull
fnstenv
ljmp
pushl
fsubrl
negb
in
cmp
je
add
mov
test
pop
jmp
sbb
or
jne
lret
roll
movsb
leave
clc
add
mov
jecxz
js
daa
jns
stos
clc
mov
pushl
dec
and
mov
subb
mov
je
xchg
and
mov
dec
sbb
lods
adc
lods
and
xchg
xlat
inc
cmpsl
sbb
or
mov
ljmp
mov
jnp
data16
xlat
js
out
scas
sub
dec
imul
in
sub
dec
xchg
fmull
lcall
loopne,pn
jge
insb
jo
in
sbb
imul
aas
fimull
lods
aad
int3
cmpsb
scas
jmp
jbe
push
sbb
sub
adc
call
inc
clc
cmp
and
and
ret
aam
jno
cld
incl
outsl
out
je
mov
adc
fwait
cmp
decl
and
fisttpll
lret
inc
fsubs
fsubrs
adc
xchg
mov
out
add
fwait
pop
push
loop
mov
or
fcomps
insl
sub
xchg
jp
sub
mov
push
inc
out
int
mov
mov
mov
mov
mov
loopne
ss
push
mov
in
push
mov
adcb
inc
and
sbb
cld
lods
sbb
xchg
loope
stos
sbb
sbb
jb
xor
mov
aaa
sub
das
in
pushl
pushf
cmp
rcl
nop
push
cmpsb
and
mov
lcall
mov
push
negl
incl
in
xor
loop
pop
adc
lret
jecxz
jns
int3
or
cwtl
add
fnstenv
out
add
incl
fwait
hlt
jbe
xor
mov
je
je
hlt
hlt
push
lods
xor
push
adc
lcall
scas
cmpsl
pop
or
add
mov
hlt
inc
xchg
scas
or
mov
loope
jbe
mov
stc
mov
enter
fdiv
outsl
jl
out
and
adc
aam
fs
dec
cmp
mov
inc
pop
std
pop
clc
mov
iret
stos
mov
fwait
mov
mov
lcall
adc
adc
jmp
stos
sarb
adc
and
mov
mov
ret
mov
push
loop
push
inc
dec
add
cmc
outsl
aad
pop
mov
xchg
xchg
push
in
adc
inc
adc
iret
dec
sti
outsl
loopne
movsb
jne
pop
stos
gs
xlat
push
sbb
mov
imul
jg
fisttps
inc
jp
daa
mov
enter
adc
stos
adc
icebp
out
jmp
fwait
ljmp
in
movsl
loop
push
inc
jbe
pop
inc
pop
daa
lods
cmpsl
in
jae
lcall
dec
js
sarb
add
xor
das
push
mov
fistpll
into
testb
jnp
adc
aam
cmp
push
push
decl
insb
push
mov
lods
rolb
xor
jg
les
daa
pusha
sahf
cs
inc
sub
outsl
adc
cltd
push
sti
mov
cltd
mov
jmp
gs
call
inc
ret
loop
or
fcompl
inc
adc
mov
leave
pop
push
stos
pop
movsb
mov
jmp
pop
cmp
hlt
cmp
repz
shld
mov
lods
mov
xor
pushl
mov
jo
add
push
mov
popa
sbb
mov
push
inc
fdivr
mov
mov
pushf
stos
pusha
add
jae
rol
fisttpl
add
add
filds
add
or
pop
pop
push
or
or
or
or
or
insb
mov
adc
push
adc
adc
pop
sti
aaa
add
pop
sbb
adc
adc
adc
pusha
sub
outsb
fisubl
or
adc
pop
adc
addb
or
xchg
push
add
sahf
add
les
or
std
add
imul
jb
imul
add
sub
add
add
inc
push
popa
pop
and
xor
inc
mov
pushl
lock
bound
js
ds
cltd
test
xchg
inc
jae
or
dec
push
pop
fs
add
adc
cmp
xor
popa
pop
loope
scas
sbb
adc
adc
xorb
add
pop
scas
cmp
pop
pusha
fnsave
adc
push
adc
pop
popa
jno
and
mov
inc
mov
or
xor
mov
shll
lock
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
bound
sub
dec
sar
mov
std
or
add
lds
cld
cli
and
mov
lcall
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
inc
adc
std
movsl
jecxz
cli
pop
mov
sar
stc
or
xchg
jg
or
insb
sub
addr16
out
or
add
call
xchg
add
repnz
inc
lock
cld
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
ja
sbb
mov
push
pop
mov
pop
pop
mov
pushl
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
jl
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
out
cli
call
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
add
call
lea
pop
cwtl
int
arpl
push
out
or
orb
shll
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
lock
outsl
xchg
add
ljmp
fidivl
mov
or
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
lret
push
shll
movsb
add
lea
jg
gs
std
aas
pop
incl
shrl
addr16
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
ljmp
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
incl
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
repnz
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
call
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
add
mov
fimuls
repnz
mov
aad
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
lock
adc
jmp
hlt
dec
mov
jg
mov
aas
mov
jg
mov
incl
fmull
addr16
sbb
cld
daa
jp
std
adc
or
test
leave
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
ret
or
mov
adc
add
push
pop
aaa
std
fistps
fisubs
adc
inc
sbb
inc
testb
fs
jmp
int
jmp
arpl
adc
mov
sub
jbe
mov
clc
loope
loope
mov
lahf
jp
or
scas
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
or
sbb
jo
dec
lds
sarl
pop
out
jg
jno
ret
sub
imul
clc
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
dec
jmp
sbb
mov
jne
in
sbb
flds
lods
xor
mov
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
bound
and
or
add
pop
add
push
sti
pop
inc
add
or
push
push
nop
mov
xor
test
sbb
add
push
add
and
and
mov
ja
add
or
add
mov
incl
and
or
xlat
mov
cmp
js
push
jg
add
rcll
test
js
add
add
dec
orb
adc
mov
add
adc
push
shrl
dec
lds
jg
add
shll
imul
mov
and
pusha
or
jnp
xchg
stc
fwait
in
pop
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
scas
imul
push
movsb
push
movsb
inc
scas
push
cs
and
stos
push
and
push
test
and
imul
push
inc
pop
pop
cld
scas
loop
scas
pop
dec
lods
push
mov
pop
sbb
add
mov
popa
push
add
push
ds
ljmp
push
adc
fs
mov
insb
or
lret
imul
mov
push
leave
imul
imul
ja
bound
push
add
fnstenv
sbb
jae
mov
stos
pop
stos
mov
inc
jb
ss
add
jo
jle
andb
jno
add
outsl
push
shll
sub
mov
push
ret
mov
outsl
adc
jns
out
jge
fisttps
mov
ljmp
movsb
push
add
mov
sbbl
push
mov
mov
push
push
add
jne
push
aam
cld
mov
flds
ret
add
mov
add
pop
dec
add
push
out
mov
ja
data16
inc
xchg
mov
push
push
shlb
lret
mov
jns
stos
aas
add
ja
push
jo
jge
xlat
jne
add
ja
push
jae
aad
push
xlat
ja
js
push
jns
lahf
fnsave
or
push
fidivrl
rol
mov
push
fldl
mov
mov
ret
jmp
ljmp
mov
mov
sub
xchg
xor
sbb
setbe
xor
fidivl
cwtl
aaa
push
lcall
push
setg
cmp
popf
xchg
popf
mov
push
sahf
inc
push
lahf
inc
lahf
mov
in
jg
pop
mov
push
imulb
movl
out
pop
pop
out
push
hlt
clc
stc
lahf
out
sahf
cli
sti
cld
std
incb
insb
mov
clc
jecxz
arpl
inc
jae
add
imul
add
pop
add
data16
add
pop
add
bound
sbb
nop
mov
and
mov
add
pop
insb
or
add
add
aas
fldt
pop
or
test
test
pop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
add
int3
adc
lods
add
pop
pop
add
stos
femms
lods
lods
pop
mov
insb
pop
push
scas
add
scas
insl
lods
pop
add
pop
adc
and
adc
sbb
mov
scas
scas
scas
scas
sbb
mov
mov
fcompl
and
mov
or
mov
push
add
push
and
cmp
and
mov
mov
pop
and
mov
and
add
dec
sub
cmp
sub
stos
in
mov
mov
xchg
es
inc
and
push
es
dec
mov
dec
cmp
pop
cmp
mov
add
pop
aaa
cmpsb
add
mov
xor
pop
xor
pop
or
or
aas
xor
push
add
pop
pop
xor
std
cmp
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
mov
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
imul
call
jbe
cmp
jl
jge
mov
aas
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
lahf
cwtl
sahf
mov
pushf
fwait
lcall
mov
mov
nop
xchg
xchg
sub
dec
ja
jns
dec
push
bound
cld
mov
imul
adc
cs
jg
addl
mov
xor
wrmsr
aaa
or
add
mov
outsl
mov
jb
mulps
add
iret
sti
mov
push
mov
cmpsb
push
mov
xor
mov
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
sub
imulb
dec
sbb
and
mov
out
xchg
jo
push
inc
mov
cmp
aam
dec
loopne
insb
inc
xchg
enter
mov
inc
push
popf
inc
imul
jg
imul
add
xchg
jb
bound
mov
lahf
ja
insl
mov
inc
push
sahf
mov
pushl
add
outsb
add
xchg
xchg
pop
push
test
fdivr
rcr
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
pop
sub
mov
push
rorb
add
lcall
int
add
outsb
mov
dec
push
add
ja
or
mov
fistpl
imul
cli
data16
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
pop
outsb
in
cmpsl
jns
outsl
ror
push
ds
insl
fisttpl
jle
add
push
jg
fiadds
call
xchg
out
data16
add
push
mov
add
test
sbb
sahf
mov
dec
add
jb
out
in
push
mov
jecxz
or
fiadds
fnstcw
aad
push
divb
fildl
adc
faddl
pop
subb
testl
faddl
sbb
test
in
mov
push
xchg
nop
and
fwait
add
in
xchg
lock
sub
sub
pop
sbbb
scas
outsb
out
xchg
das
push
xchg
mov
outsb
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
sub
aam
jle
push
cmpsb
mov
jo
test
sahf
cli
pop
adc
shrb
mov
pop
lock
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
rorb
mov
data16
add
addr16
pushf
sahf
cs
dec
out
je
mov
add
sub
add
mov
femms
or
or
outsl
incl
or
es
push
adc
push
add
aas
and
adc
ds
add
mov
xor
ds
xchg
push
mov
aad
clc
sbb
mov
push
add
pop
or
scas
mov
loopne
ds
stc
lods
scas
mov
aas
and
mov
add
inc
sahf
fldcw
aas
aas
cmp
cmp
pop
add
insl
adcl
scas
cmp
inc
jle
mov
cmp
dec
cmp
pop
adc
dec
aas
dec
sti
ds
adc
ds
xor
dec
mov
test
mov
ds
in
imul
add
mov
icebp
sti
jg
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
decl
movsb
movsl
mov
lcall
sub
sub
pop
dec
add
push
jg
ss
and
inc
mov
push
push
push
push
push
imul
push
pop
push
rolb
dec
shlb
mov
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
decl
test
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
pop
daa
mov
lds
fwait
and
jge
rolb
add
add
add
jge
inc
or
jg
sub
xor
mov
jg
das
jbe
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
outsl
mov
add
mov
push
mov
fnstsw
repnz
dec
call
addr16
add
add
mov
push
in
lcall
bound
push
arpl
sahf
fwait
add
push
push
dec
lret
js
idiv
add
add
mov
mov
or
add
mov
out
pop
nop
xor
xlat
mov
ds
sub
xchg
push
sub
nop
sub
mov
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
iret
insb
fst
es
push
lret
loopne
push
decb
inc
sub
std
into
fdivrp
int
or
add
jg
jle
jge
or
nop
xchg
dec
dec
dec
dec
dec
add
jg
pop
or
add
push
dec
or
adc
cmp
adc
pop
mov
dec
dec
dec
inc
add
push
adc
add
or
inc
fmuls
pop
cmovg
inc
push
dec
sbb
imul
adc
inc
inc
adc
sbb
jg
aas
mov
adc
inc
ds
cmp
cmp
cmp
icebp
jmp
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
add
push
add
mov
addb
mov
pop
mov
mov
cmp
mov
add
outsb
mov
inc
and
int3
push
outsl
add
sub
test
sbb
or
add
push
cmpsl
xor
or
dec
into
incl
inc
sub
push
inc
xlat
shll
fstpl
incl
or
jnp
outsb
sysret
mov
es
xchg
shlb
ds
fidivs
pop
stc
sysret
in
lock
stc
hlt
pusha
push
push
jg
add
pop
push
push
lock
aaa
outsl
shrb
pop
sahf
test
sub
jg
lahf
push
add
xchg
out
cli
add
mov
mov
cli
filds
adc
push
pop
pop
add
xor
jg
addr16
adc
cli
push
les
or
xchg
jg
sub
sti
jg
das
pop
pop
add
sti
mov
jle
adc
mov
insl
sar
pop
xchg
ret
jg
add
bound
xchg
call
les
dec
test
jg
in
push
push
cld
jg
and
bound
cmpsb
std
ja
add
or
out
roll
push
jg
dec
les
xchg
test
orl
data16
mov
inc
incb
or
pusha
mov
call
adc
xor
xor
push
incb
and
fidivrs
jg
inc
arpl
adc
sbb
add
loope
push
jbe
sbb
jno
sub
jmp
sbb
scas
incl
add
jmp
pop
xor
in
jle
lret
imul
adc
adc
add
sbb
lcall
popa
mov
add
mov
addr16
add
push
adc
lea
data16
mov
add
jg
mov
add
sub
xor
es
adc
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
jno
jle
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
dec
test
cli
pop
fnsave
xor
inc
int
sbb
push
jbe
data16
ss
rcl
push
cs
add
mov
aam
ja
dec
test
xchg
movb
inc
mov
pop
ja
testb
pusha
add
add
dec
in
adc
inc
bound
inc
outsl
add
push
dec
push
insl
outsl
mov
mov
jns
or
add
push
adc
add
push
orl
lea
jmp
or
xchg
inc
and
cmp
lock
push
jmp
xor
pop
cmp
std
cmovb
icebp
imul
add
sub
lcall
out
pop
sahf
jbe
xor
jmp
mov
pop
call
push
sbb
xor
inc
push
mov
movsb
inc
pop
cmpsb
testl
and
add
call
incb
mov
or
xchg
call
lcall
or
mov
sub
daa
cld
pop
das
mov
cld
lcall
pushl
decl
out
add
push
jbe
adc
lcall
or
mov
sbb
sti
cmovno
test
inc
fsin
incl
ljmp
ljmp
or
mov
sahf
sub
data16
inc
xor
or
sbb
sbb
sub
push
leave
jae
outsb
decb
mov
mov
arpl
mov
mov
adc
enterw
adc
and
out
montmul
cmpsb
xchg
mov
push
sub
xchg
pop
dec
ljmp
or
push
mov
push
ljmp
add
outsb
fdivrp
push
sub
mov
sub
pop
sub
push
std
incl
imul
push
mov
jbe
xor
cmpsl
cld
pop
stc
packsswb
leave
sub
inc
test
xlat
jg
cli
dec
mov
loop
add
xchg
int3
and
movsb
push
xchg
decl
call
incl
fcmovbe
ficoms
inc
xorps
aaa
mov
cmp
shll
mov
push
dec
sahf
movsb
testl
call
adc
push
insb
mov
ljmp
lahf
inc
inc
push
insl
fidivl
inc
pop
mov
insb
push
pop
sahf
movsb
dec
push
stos
push
fidivs
dec
dec
inc
mov
xor
cs
dec
mov
push
add
test
lea
shrb
rcl
outsb
shrb
imul
push
jb
sub
gs
push
iret
insl
dec
ja
sub
outsl
pop
imul
push
push
xchg
fs
ljmp
call
and
lcall
mov
movsl
pop
int
repnz
dec
push
push
jmp
xchg
hlt
insl
push
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
dec
push
push
aaa
push
lcall
hlt
pop
xchg
push
xchg
es
xchg
xchg
xor
xchg
xchg
notb
sub
dec
push
pushl
es
incl
pusha
xchg
dec
sub
fidivs
sbb
add
or
jg
js
std
faddl
jge
push
jnp
lcall
push
jl
or
cmpsb
shrb
jl
push
jge
jg
es
jle
push
jbe
adc
fidivrl
push
dec
push
dec
repnz
jns
repnz
jae
pop
fidivrl
push
mov
jnp
imul
out
add
in
add
int3
outsb
nop
notl
shll
mov
and
xchg
cmp
mov
pop
or
imul
pop
and
addb
decl
dec
es
addl
orb
aaa
hlt
ljmp
jg
and
xchg
out
push
sub
iret
out
aaa
aam
jo
mov
cli
pushl
clc
push
idivl
insb
test
push
jb
sub
dec
mov
out
jg
mov
icebp
dec
pop
cld
fucomp
push
push
daa
jno
sub
jg
adc
cltd
icebp
jg
xchg
mov
daa
jg
mov
jae
repnz
mov
stc
bnd
es
xchg
aaa
in
subl
cmpb
jmp
mov
or
jg
dec
push
xchg
adc
sarb
lock
and
jge
push
and
incl
push
fsub
pop
nop
test
push
int3
out
mov
jle
mov
fidivrl
arpl
clc
and
jbe
mov
push
into
and
push
xchg
and
pop
or
scas
mov
ds
lcall
fists
jle
jns
mov
mov
pop
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
push
and
insl
or
or
cmp
aaa
add
ja
inc
or
nop
xlat
push
cmovno
dec
cmp
inc
adc
adc
add
push
pop
dec
loop
dec
jp
add
add
or
jg
mov
push
inc
ds
push
xor
adc
dec
sbb
adc
sub
add
in
ja
fistl
add
push
sbb
push
or
xor
and
fcomi
inc
or
push
stos
mov
xchg
incl
dec
and
push
and
add
xor
adc
push
insl
lods
and
xchg
push
scas
xchg
mov
add
add
lods
push
ss
inc
push
gs
jo
pop
rolb
mov
mov
add
inc
insl
dec
std
and
add
lret
jo
and
inc
and
push
push
aaa
loop
and
test
dec
test
pusha
nop
inc
add
lock
inc
jmp
lahf
jo
das
cmp
popf
sbb
ds
lret
ret
add
imul
lea
push
and
sbb
dec
pop
add
ficompl
mov
sbb
xor
dec
jns
add
inc
aad
mov
add
mov
inc
lret
sbb
pop
cmp
inc
sbb
lods
add
insl
pop
adc
and
adc
insl
pop
pop
popf
in
mov
sub
push
popa
shlb
xor
and
sub
jb
mov
dec
xlat
jae
add
add
sbb
mov
xchg
test
xor
filds
das
inc
mov
bound
mov
add
jo
movb
pop
add
adc
sub
idiv
sbb
mov
add
inc
stos
push
pusha
fists
push
push
outsb
dec
push
outsl
loop
fidivl
mov
sub
dec
dec
fwait
movzbl
ljmp
insb
pop
dec
insb
out
inc
imul
sbbl
andb
dec
inc
adc
sbb
insb
jne
add
inc
cmp
push
adc
rolb
add
mov
or
add
mov
inc
fidivrl
jmp
fstpt
arpl
push
adc
add
add
fiaddl
fidivl
popf
xchg
push
mov
aad
mov
pop
aas
cmp
adc
icebp
mov
add
xchg
jnp
sbb
cmp
jo
int3
adc
cmp
dec
in
and
sbb
push
orl
stos
mov
mov
adc
xchg
inc
adc
add
ljmp
outsl
mov
jecxz
popa
addl
or
adcl
dec
sub
sbb
inc
push
es
push
jb
dec
movsb
sub
push
cwtl
jmp
add
jg
shll
shl
inc
je
cmc
jbe
bound
iret
add
or
and
xchg
xchg
mov
icebp
popa
and
pop
test
jbe
lds
push
sbb
addr16
and
xor
add
rorb
add
pop
inc
adc
sub
sub
je
fists
push
jae
xor
jno
inc
sub
mov
mov
adc
nopl
dec
das
out
fistl
mov
jne
ja
sbb
mov
inc
loope
add
and
adc
or
ret
xor
je
jne
inc
cmc
mov
loop
sub
outsl
jae
and
loopne
loop
outsl
popa
clc
jp
mov
mov
cmpsl
adc
mov
and
fldenv
pop
fisubs
cmp
inc
arpl
mov
xchg
add
comiss
popf
mov
xchg
aam
sub
xchg
pop
sub
mov
pop
out
mov
dec
sbb
sbb
mov
jnp
push
test
imul
push
sbb
arpl
push
imul
aam
test
xor
xchg
es
lds
push
adc
xlat
and
inc
enter
and
insb
sbb
cmp
jne
inc
xchg
mov
fs
or
pusha
aam
jbe
popa
rcpps
js
ret
mov
inc
xchg
push
sbb
fs
mov
imul
lds
fdivs
adc
insb
sahf
daa
push
and
insl
mov
das
push
cld
sub
fldt
add
mov
js
dec
lea
loop
jecxz
or
fistpl
sbbb
js
hlt
add
adc
push
jo
push
stos
dec
and
push
les
and
addr16
inc
dec
mov
int3
sub
pop
xor
mov
adc
sbb
outsb
inc
sbb
or
roll
and
leave
sbb
insl
dec
outsb
dec
std
lea
adc
push
and
mov
sub
push
push
js
mov
int
add
pop
add
add
sbb
mov
imul
add
or
imul
imul
scas
imul
es
nop
ret
or
pop
add
lods
add
addb
add
and
gs
pop
sbb
fmuls
inc
jo
sbb
or
out
test
imul
popf
stos
es
inc
push
sub
imul
adc
inc
stos
add
inc
insb
scas
test
test
push
int
outsb
inc
xor
xorl
sbb
out
xchg
fs
ret
mov
jo
inc
sbb
add
sarb
inc
adc
cmp
mov
je
jno
mov
dec
pop
push
xchg
lods
dec
jbe
inc
mull
pop
scas
int3
ficomps
fs
push
jge
out
int3
mov
imul
and
lcall
push
dec
mov
inc
insb
sub
mov
mov
mov
mov
sbb
jo
outsb
sub
mov
xchg
mov
pop
xlat
adc
or
test
jbe
mov
call
mov
lods
lea
inc
xor
sub
sbb
out
inc
aaa
outsl
in
loopne
js
adc
mov
jno
inc
ret
lods
outsb
jbe
lods
sbb
test
inc
jle
push
shll
rolb
scas
das
cmp
inc
push
mov
sbb
insl
dec
inc
push
push
xchg
and
sub
mov
orb
mov
adc
arpl
imul
test
pop
xor
arpl
pushf
mov
and
inc
sbb
or
lds
nop
fs
xchg
loope
mov
cmp
jns
dec
lea
sbb
and
inc
cmp
mulps
das
push
aad
xchg
cmp
push
inc
movsb
ret
aas
std
imul
push
jne
loope
xchg
xor
push
stos
xchg
lods
mov
xchg
jbe
enter
or
add
push
mov
js
push
inc
inc
gs
jnp
cmp
xor
xchg
jb
addr16
jmp
or
arpl
movsb
sbb
pop
dec
mov
pop
cmpsl
int3
pop
out
inc
test
push
clc
or
xor
imul
aaa
sub
shlb
or
inc
xor
push
jb
jp
push
cmp
test
dec
movsl
dec
sub
xchg
das
shlb
mov
cltd
add
push
push
addr16
insl
add
cwtl
inc
int3
adc
pop
movsb
data16
or
nop
mov
add
push
mov
mov
add
sbb
mov
addr16
testl
addr16
fiadds
adc
push
mov
enter
mov
data16
push
movlps
out
lret
mov
push
xchg
mov
andl
and
fisubs
adc
cmp
add
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
