divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
inc
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
push
pop
inc
push
adc
and
dec
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fistl
dec
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
jo
rcrb
adc
mov
mov
cmp
sbb
sub
dec
rcrb
mov
or
bound
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
add
insl
xlat
or
pop
pop
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
inc
dec
push
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jge
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
and
in
mov
in
adc
sbb
or
psraw
movsl
push
xorl
fdivrs
mov
cmp
jg
mov
xor
sbb
inc
ret
in
sbb
push
push
adc
adc
pop
cmpsb
sub
mov
push
jmp
cmp
push
mov
sar
dec
lea
push
add
jge
ja
adc
cmp
clc
add
push
mov
lods
jmp
pop
ret
outsb
test
jl
mov
add
stc
clc
icebp
loop
lds
iret
lock
push
std
jle
mov
cmpl
or
push
int3
jmp
incb
sub
sbb
jge
sub
stc
or
or
fisttps
add
pop
cltd
sub
shr
enter
mov
mov
pop
xor
cwtl
pop
les
decb
cmp
jl
cmp
jne
insb
mov
fldt
add
xor
jbe
mov
testl
adc
inc
add
lea
cmp
adc
lea
orl
push
xor
push
jnp
sti
into
mov
aam
cli
cmpsl
bnd
sub
fdivrs
cmpsl
mov
scas
out
fidivl
cld
fsubrs
jl
mov
leave
jge
mov
cmpsb
or
adc
lock
jle
cmp
mov
inc
sahf
loopne
clc
fdivs
jecxz
dec
inc
icebp
add
jo
scas
push
add
xchg
pushl
mov
pop
iret
jmp
push
stc
loop
pop
mov
inc
addr16
cmp
sbb
stos
push
je
push
jbe
daa
xlat
loopne
es
and
push
mov
hlt
adcb
ret
std
jbe
aaa
and
cmp
lods
or
or
mov
xchg
cmp
mov
sar
push
push
adc
cmp
jle
mov
pusha
or
pushf
adcl
clc
add
cmp
cmp
jae
push
cmp
je
adc
sub
mov
andl
ret
add
jb
pop
dec
icebp
dec
push
add
xchg
pop
leave
mov
fcoms
jnp
ljmp
loopne
cmp
mov
or
push
push
push
push
rcrb
or
inc
jno
adc
or
cmpsb
mov
or
imul
and
adc
add
and
inc
sub
imul
adc
mov
in
push
std
add
xor
cmp
push
mov
fildl
sub
jne,pt
push
stos
sbb
lock
push
add
fidivl
in
js
push
mov
mov
or
rorb
je
pop
pop
fdiv
mov
mov
jg
mov
jne
cmp
mov
je
add
fwait
test
in
jo
add
dec
sub
ficoms
mov
pause
lret
xchg
push
lret
add
sbb
mov
pop
inc
fistpl
cwtl
mov
jl
add
mov
sbb
add
mov
push
or
xlat
std
push
mov
js
xchg
mov
filds
rolb
mov
daa
pop
loop
mov
jg
or
je
push
pusha
mov
sbb
clc
push
movl
fildll
cmovl
inc
sub
sbb
sahf
dec
push
xor
mov
mov
ljmp
movsb
dec
add
add
loop
mov
adcb
add
jl
dec
add
paddd
push
add
push
outsb
xlat
jb
jb
xor
push
lcall
sub
nop
inc
icebp
in
fimull
push
scas
dec
sbb
sbb
sbb
jb
call
aad
sarl
dec
cmp
je
xchg
outsl
sub
jne
or
jne
imul
mov
jl
popa
dec
in
jp
mov
nop
test
insl
into
mov
cmp
ljmp
jl
ret
and
aam
negb
or
movsl
mov
std
jle
cmpsb
mov
or
adc
xchg
jecxz
arpl
xor
dec
sahf
outsl
mov
jg
inc
and
lcall
pop
je
outsb
add
or
push
or
sub
inc
mov
ret
mov
mov
sub
jle
mov
mov
push
rorb
lock
out
mov
in
bound
push
insl
jecxz
xchg
pop
lock
int
jno
or
aas
pop
jae
mov
out
decb
adc
xor
icebp
or
mov
mov
inc
sarl
adc
sub
bound
mov
inc
xor
in
or
mov
js
or
ret
je
dec
je
xchg
cmp
adc
or
adc
dec
mov
movsb
call
icebp
xor
or
adc
sub
xchg
clc
push
repnz
mov
aad
in
push
push
call
fsubs
push
sub
adc
shr
fiaddl
and
mov
jg
scas
add
and
jl
cmc
andl
frstor
sub
or
mov
leave
ljmp
lret
pop
fs
pop
je
jae
mov
rcl
add
xchg
pop
jge
pop
call
mov
cld
lock
lret
ljmp
insb
rorl
shll
or
dec
or
xlat
divb
js
and
adc
pop
in
inc
clc
add
xchg
in
dec
fcoml
or
popa
andb
pushl
out
neg
sbb
inc
lock
bound
inc
pop
xlat
andb
idiv
push
lock
test
lea
sbb
mov
data16
pop
movsl
pop
push
fcomp
pop
je
pop
ds
and
xorl
pop
pop
dec
sub
xchg
cmp
pop
js
jecxz
or
ret
pop
push
adc
lahf
cmp
sbb
cmp
jae
adc
aaa
pop
sbb
nop
add
cmp
shll
hlt
jl
ret
pop
adc
mov
mov
push
aas
pop
mov
out
or
dec
jne
mov
push
roll
pop
lcall
xor
xor
nop
xchg
sbb
or
and
push
orl
mov
or
or
or
xor
xor
mov
pop
pop
pushf
sub
mov
ret
fcomps
inc
loopne
pop
inc
loop
pusha
mov
ret
mov
in
jae
adc
repnz
out
sub
inc
je
daa
je
scas
adc
cltd
sbb
stos
lahf
cs
jno
nop
std
mov
push
push
or
mov
mov
sbb
sub
call
sub
push
cmp
ljmp
out
lret
shrl
jne
sbb
sbb
mov
jmp
mov
dec
xor
add
mov
sarb
test
sahf
mov
lea
jne
testb
hlt
jne
xor
xor
ret
rcrb
pop
std
adcb
dec
mov
push
in
or
lea
mov
push
jp
add
push
iret
insl
xor
in
jne
ret
mov
cmp
addr16
jmp
repnz
je
or
loopne
pop
in
mov
js
xlat
loopne
or
xchg
xor
pop
and
les
rol
mov
in
push
in
cmp
jmp
into
lock
ret
push
xor
mov
aaa
sbb
jge
decl
in
ret
imul
cmp
fsubr
out
add
ret
inc
add
add
test
cwtl
add
loopne
shlb
aam
scas
roll
sahf
mov
cmpl
shl
xor
mov
pop
cmp
and
pushl
repnz
add
add
fcmovnu
test
loopne
add
testb
xchg
in
js
sbb
adc
push
lcall
mov
sbb
pop
pop
std
dec
and
xchg
cs
fst
movsb
mov
dec
test
sbb
punpckhwd
pop
push
sbb
fnstsw
fistpl
fistpl
jae
ret
je
arpl
pop
xchg
or
and
nop
outsb
jmp
rcr
ret
mov
nop
mov
inc
lcall
cmp
xchg
sub
or
pop
dec
call
mov
push
xor
maskmovq
divl
dec
div
adc
test
cltd
xchg
lods
lods
add
movsb
sbb
and
or
jno
sahf
fs
in
pop
repz
lods
loopne
je
add
adc
adc
lret
rcll
lock
xor
sub
sbb
mov
add
mov
fidivrl
aas
jbe
out
jge
mov
dec
out
sti
shrb
shlb
mov
cmp
pop
add
add
dec
sbb
fcompl
nop
xchg
mov
rclb
cmp
xchg
adc
xchg
xchg
ret
movsb
pushf
sbb
enter
pushf
cmp
xor
fmuls
xchg
mov
int3
ret
xchg
mov
int3
int3
xchg
xchg
out
sbb
ret
sbb
and
add
xchg
enter
hlt
xchg
cmp
xor
sbb
mov
mov
mov
jmp
sbb
imul
and
xchg
xchg
push
jo
jne
jmp
push
dec
jmp
enter
jne
xor
adc
and
jo
sub
add
sbb
pop
xor
add
mov
inc
loopne
mov
add
or
dec
add
add
adc
push
lock
sub
jae
and
sbb
dec
inc
adc
inc
adc
jnp
daa
pop
and
cmp
mov
mov
lahf
xor
add
jo
in
sbbb
mov
nop
and
push
cli
sbb
cwtl
and
adc
aas
adc
dec
pusha
dec
movsb
and
push
xchg
push
shl
ficoml
push
push
dec
xor
orl
add
mov
icebp
ss
pop
dec
popf
lea
xchg
sbb
pop
mov
adcl
movsl
xchg
mov
mov
dec
jns
fsubs
rclb
daa
lock
out
pop
add
je
lcall
add
je
or
xor
cltd
inc
jl
scas
adcb
add
sti
pop
dec
es
jge
inc
mov
fcmovne
push
push
jecxz
in
push
jmp
enter
sub
adc
or
cmp
shll
mov
and
cmpsl
jg
je
adc
or
adc
mov
das
clc
dec
or
mov
sbb
mov
into
push
sbb
pushf
je
cmp
push
adc
or
dec
jb
or
dec
pop
dec
push
in
lret
adcl
insl
mov
aaa
adc
and
rcrb
scas
scas
and
jb
lret
jns
xorb
insl
movsl
jno
shrl
sbb
jne
fsub
push
adc
cmc
xor
inc
adc
shlb
cld
cmp
push
hlt
sub
mov
dec
push
mov
in
inc
inc
imul
push
pop
sub
push
fwait
mov
lock
mov
fistpl
jne
or
inc
pushf
jl
jo
jmp
sbb
jb
pop
push
xor
popf
in
in
lea
adc
test
jge
je
mov
xchg
mov
inc
fbld
inc
fstpl
push
js
clc
inc
rcl
stc
or
cs
imull
pop
push
add
jle
cmp
je
or
je
xor
push
push
data16
subb
iret
push
test
scas
cmp
push
movsb
pop
cmp
in
xchg
and
and
xchg
jecxz
daa
sbb
sbb
ret
or
add
sbb
sarl
stc
pop
jns
loopne
cwtl
cmp
aaa
xorb
lock
and
fldt
dec
xor
pop
hlt
je
push
jbe
or
push
pop
in
lahf
sbb
test
push
ja
mov
iret
pushf
pusha
jb
adc
lock
je
inc
and
and
adc
call
mov
jne
lods
jmp
add
sahf
loopne
lret
cmp
movsb
ret
xadd
test
shlb
add
into
push
daa
fildll
adc
and
bound
add
sbbl
add
jo
subb
pushf
aam
mov
add
push
xchg
cmpsb
std
daa
out
push
loopne
cmp
mulb
sbb
rolb
mov
push
add
dec
daa
dec
cmp
cltd
test
icebp
fimuls
sbb
jg
mov
int
sti
scas
sub
pop
sub
and
xor
ljmp
sub
push
xor
push
sub
add
add
sbb
ret
inc
lret
ret
test
push
inc
stos
push
lret
or
mov
mov
add
enter
adc
adc
sbb
daa
out
movsl
jp
pop
xor
adc
push
jns
lret
mov
lods
mov
cmp
push
and
test
cmp
jo
add
mov
pop
sbbl
inc
rcrb
sub
sti
clc
sbb
lret
xchg
sbb
dec
adc
ret
cmpsl
xchg
add
sub
mov
jl
mov
orl
mov
jge
dec
push
push
sbb
rol
mov
fdivrl
cmpsl
out
adc
and
loopne
or
inc
sar
adc
mov
and
outsb
or
js
orb
pushf
dec
sub
ret
sub
dec
mov
scas
cmp
enter
pusha
sub
insb
and
das
push
pop
xchg
push
xchg
cmp
inc
out
xchg
sub
pushl
jnp
push
ret
xchg
dec
xlat
cmp
xor
inc
mov
sub
sbb
mov
inc
xor
sub
jno
loopne
sub
shlb
nop
add
sbb
and
stc
pop
cmc
xor
and
xor
push
adc
pop
or
sbb
ret
nop
push
add
mov
and
daa
pop
cmp
cmp
int3
and
pop
and
test
sub
fadds
xor
jmp
in
rorb
sbb
lds
js
lods
pop
mov
les
mov
pusha
out
inc
ljmp
insb
popf
fisttpl
js
mov
and
pop
mov
std
add
and
push
pushl
imul
xchg
fcoml
mov
cmpsb
and
add
jbe
and
iret
ret
push
je
mov
into
addr16
nop
jbe
sti
and
cmp
cmpl
push
fistpll
add
call
inc
push
loopne
mov
adc
xchg
inc
cs
fistpl
jg
cmpsl
add
sub
jne
push
pop
call
pop
pushf
or
mov
pop
cmp
jne
mov
lods
in
movsl
jmp
orb
cmp
push
mov
adc
jl
lds
inc
add
aas
cld
adc
jge
mov
add
dec
xchg
lock
pusha
mov
rolb
stos
push
loopne
inc
and
pusha
pop
shrb
sbb
add
add
inc
or
xor
jge
orb
cwtl
in
orb
mov
out
outsb
lret
push
or
add
in
add
add
dec
loop
cmpl
rclb
add
jo
cmpsl
icebp
or
into
out
out
add
fbld
add
jecxz
aaa
lds
or
in
cmovno
cmc
loopne
inc
out
or
in
or
aam
mov
add
jbe
pop
pop
fldl
cmp
jne
or
je
sub
sbbb
subb
loope
jg
addr16
loopne
mov
sub
add
inc
fadd
or
inc
cltd
dec
cmp
pop
pop
push
push
fstp
pushf
push
out
test
jne
or
xchg
and
inc
sti
cmp
add
mov
adc
sub
call
lahf
je
and
jo
rorl
push
jp
std
mov
pop
xor
fsub
push
out
inc
out
add
dec
orl
or
nop
inc
aaa
fnstenv
imul
jecxz
lds
or
gs
sub
or
lcall
iret
cmp
pop
popf
lret
in
sarb
mov
add
xor
les
or
sub
int3
add
mov
push
fcom
mov
pop
cltd
call
push
in
sub
mov
test
xor
lock
dec
dec
je
sub
jmp
bound
cmpl
je
sub
add
pusha
jmp
adc
xlat
sbb
subb
int3
adc
iret
push
sub
pop
lea
sbb
cmc
push
pop
push
add
xor
sbb
gs
lock
push
adc
lcall
lock
xor
inc
mov
sarl
push
push
invd
cmp
subb
movsl
jmp
push
fs
ret
cmp
jle
shlb
sbb
xor
fistl
mov
xchg
ds
sahf
jne
das
pop
sub
in
paddusb
mov
jle
push
push
xchg
test
sarb
xchg
pop
or
add
push
loopne
add
sbb
push
movsb
xchg
and
jo
stos
sarb
ret
dec
mov
jne
pop
cli
ds
lods
fistpll
xchg
ss
push
xor
cli
add
cmpl
adc
push
lahf
or
cmovne
mov
sbb
into
in
push
add
insl
inc
add
call
mov
test
movsl
or
rclb
orl
fndisi(8087
mov
in
add
mov
mov
push
add
mov
add
add
or
sahf
pop
imulb
shlb
stos
lret
enter
mov
jmp
hlt
popa
cmp
inc
nop
or
or
pop
movsb
mov
push
inc
and
or
in
jno
gs
rolb
scas
mov
mov
in
loopne
pop
cld
loopne
andb
or
push
add
lea
fcomps
and
and
popf
sub
rcrb
or
mov
push
cmove
or
pusha
movl
mov
adc
jo
lods
mov
cmp
cli
in
mov
inc
add
popf
jo
or
movsl
dec
in
in
test
movsl
push
pop
sbb
in
sbb
mov
in
add
jmp
mov
or
mov
pusha
push
add
call
jb
push
sbb
push
call
inc
enter
rcll
adcl
insl
mov
fs
xor
inc
mov
add
adcl
pop
call
push
inc
loopne
je
inc
cld
mov
cwtl
out
mov
mov
or
push
xchg
cmp
aas
xchg
testb
and
mov
and
repnz
insb
adc
xsavec
adc
push
nop
mov
sub
push
jg
and
and
push
pop
dec
lds
xor
mov
push
rcpps
sub
or
sub
lret
out
push
dec
sbb
dec
fcoms
lock
loopne
in
mov
and
xchg
xor
sbb
lock
inc
mov
pushl
push
js
jg
cmp
cmp
ret
shr
movzbl
sbb
mov
ret
push
push
inc
mov
sbb
xor
frstor
cmp
cmp
popa
xor
mov
add
inc
xor
pop
add
push
gs
mov
xor
mov
jecxz
test
jle
icebp
test
xor
les
pop
or
popf
ror
cmc
add
mov
scas
xor
or
add
int
xor
int
lahf
mov
cmp
jg
mov
mov
jmp
xor
xchg
push
leave
enter
pop
sahf
mov
aad
sbb
enter
mov
iret
xchg
push
enter
aas
imul
inc
push
sbb
cmpsl
sub
js
imul
lea
clc
mov
sub
outsb
pop
mov
subl
sbb
scas
add
pop
inc
ret
jecxz
cli
sub
pop
jmp
mov
push
stc
add
sbb
xchg
in
and
mov
push
in
cmp
je
vpaddsw
shrb
cld
jne
xor
cmp
or
mov
cmpb
cmp
cmp
jae
mov
rcrl
inc
hlt
lea
ja
xor
shll
sti
inc
add
test
je
push
mov
adc
lock
inc
add
fiaddl
mov
add
imul
add
js
aaa
dec
jo
in
cmp
jg
xor
push
cmp
push
stos
cmp
mov
roll
out
or
into
popa
nop
fsubrs
push
int3
sub
xor
ss
hlt
cmpsb
adc
cli
lea
ljmp
or
hlt
or
push
test
adc
mov
cmp
stos
clc
lret
jo
in
pop
fcmove
add
mov
mov
pusha
xchg
shll
sub
cmpsl
mov
dec
lahf
inc
js
test
adc
cli
out
mov
cmpsb
hlt
pop
pop
cs
jg
inc
inc
jns
and
dec
sbb
sbb
or
nop
mov
sub
pop
movb
and
xchg
add
xor
add
inc
and
push
cmpsl
icebp
imul
xor
push
sub
adc
or
fmuls
outsb
add
fdivrs
lock
mov
cld
cmp
jl
repz
bound
jmp
repnz
movsl
push
enter
xor
das
inc
cmp
insl
int
sbb
pop
jbe
inc
sbb
mov
mov
pop
or
xchg
dec
js
mov
push
bound
fidivrl
or
shll
mov
adc
push
mov
add
loopne
push
je
mov
mov
ret
je
mov
popf
aaa
mov
jmp
push
mov
push
jecxz
or
dec
xor
fcompl
outsl
loope
or
dec
enter
pop
inc
mov
int3
or
test
sbb
hlt
add
seto
stc
mov
out
mov
jae
dec
mov
adc
mov
insb
add
inc
outsb
mov
push
cs
mov
add
adcl
ljmp
data16
lret
jae
dec
dec
sbb
jb
xor
mov
sbb
adc
sub
mov
in
pop
icebp
adc
mov
fs
jne
cmp
je
sbb
xor
inc
cmp
or
in
sbbb
and
mov
and
lea
je
pop
sbb
mov
mov
push
sbb
push
shlb
xlat
ret
or
add
and
loope
adc
dec
orl
setne
aad
or
movsl
test
xlat
jne
push
pop
mov
push
insl
loopne
cmp
test
js,pt
ljmp
loop
clc
divps
add
bound
aam
or
push
sti
xchg
clc
or
subb
xor
inc
adc
push
roll
js
push
jmp
sub
js
or
inc
in
jmp
mov
clc
andl
lock
popw
sbb
adc
push
mov
jno
pusha
adc
mov
scas
lock
dec
mov
scas
xor
jo
rcl
push
movsb
sub
sarl
sbb
cld
or
nop
push
mov
push
rclb
push
push
aaa
clc
pop
or
popa
xor
pop
sub
mov
and
inc
pop
xor
ds
aas
idivb
movsb
inc
xor
daa
hlt
call
hlt
sub
jle
add
sbb
je
push
push
ret
popa
loope
loope
mov
cld
ror
or
add
insb
cld
cmp
lea
xchg
shr
js
add
push
test
popl
inc
xchg
mov
xchg
mov
sbb
adcl
add
xchg
popf
enter
rcrl
popl
jle
or
push
inc
and
jb
sbb
cmp
rcrw
es
inc
loopne
add
adc
pop
ret
adc
rorl
and
adc
inc
push
sbb
scas
cmpsb
call
in
sbb
sbb
mov
je
or
pusha
cmp
sbb
push
loopne
das
out
and
and
mov
sub
inc
inc
or
jecxz
lods
or
sub
pushl
test
push
fmuls
add
push
pop
push
xorb
push
adcb
xor
in
sbb
imul
aad
in
in
jb
inc
xor
flds
jp
scas
jecxz
or
mov
add
sbb
adcl
test
les
cltd
in
test
test
dec
add
mov
sub
xchg
aaa
movsb
inc
or
add
xlat
push
and
inc
jl
inc
and
inc
inc
push
js
addb
js
inc
repz
push
clc
mov
push
mov
movl
cmp
xchg
rcl
repnz
in
xor
inc
mov
jmp
add
jb
nop
and
test
fmul
mov
xchg
movsb
add
dec
cmovbe
loop
mov
cmp
hlt
mov
cwtl
movsl
and
pop
arpl
mov
inc
or
sub
loopne
repz
pop
hlt
xchg
fsts
and
adc
add
pop
out
addb
and
xchg
adc
pop
stos
and
fwait
jns
push
movsb
inc
jg
adc
out
push
cs
subl
div
and
mov
repnz
lret
aaa
movsb
mov
pop
mov
cmpsb
add
or
pusha
stos
lock
cmc
or
add
inc
inc
leave
and
cmp
push
dec
cltd
dec
sahf
sbb
adc
and
ret
inc
push
inc
ret
jg
sti
test
lea
mov
add
or
and
pop
or
xor
adc
pop
sub
sbb
pop
sub
int3
add
and
sbb
adc
pop
daa
xorl
adc
js
lret
fldz
mov
adc
lods
jne
mov
mov
push
mov
push
inc
insl
movl
and
cmp
sbb
and
ret
inc
inc
cs
add
lea
push
lods
sub
pop
pop
mov
dec
push
jne
enter
sub
add
repnz
sarb
xor
es
adc
sbb
and
stc
adc
cmp
popf
cmpl
lock
ret
cmp
sti
in
mov
shrl
pop
negl
sbb
add
add
cmp
add
push
pop
dec
adc
push
pop
mov
ret
xchg
pop
push
dec
dec
jecxz
lret
push
and
push
mov
pop
ljmp
pop
sub
jne
mov
add
push
pop
dec
je
adc
in
jge
adc
int3
and
fistpll
dec
push
jmp
mov
fistps
dec
jo
gs
out
leave
jmp
mov
jmp
pop
jne
nop
jle
bound
lcall
add
push
mov
xor
inc
cs
and
or
mov
mov
mov
inc
loopne
and
imul
insl
add
pop
push
mov
pop
addr16
mov
inc
dec
pop
mov
mov
mov
loopne
push
aaa
xchg
or
xor
push
push
daa
pop
mov
jo
js
cltd
lea
inc
repz
pop
sub
mov
shlb
jmp
cmp
je
cmp
or
jmp
inc
sbb
leave
adc
cli
outsl
div
push
mov
sbb
fstpl
imul
mov
je
xchg
push
and
and
pop
test
adc
jmp
xchg
lret
pop
sbb
jns
es
dec
jne
cmp
mov
mov
sahf
dec
xor
js
cmp
or
adc
mov
sbb
mov
mov
add
pushw
add
cmpsl
sub
mov
xor
push
pusha
lea
adc
sub
jl
fsubrl
mov
fadds
mulb
insb
dec
movb
pop
jae
mov
sbb
xchg
pop
jge
lods
mov
push
dec
push
mov
repnz
push
pop
push
lea
push
push
push
push
add
push
jge
and
lea
cmp
inc
sbb
add
dec
inc
inc
push
xchg
mov
cld
adc
cltd
lahf
test
jg
movsb
lea
or
fcmovb
pop
pusha
push
add
mov
hlt
or
pop
cmp
insl
imul
sbb
arpl
je
mov
add
dec
lcall
aaa
lods
popa
cmc
pop
push
push
inc
or
shl
out
add
push
lods
mov
jmp
sahf
inc
lods
xchg
jl
repz
ret
cwtl
in
shll
dec
adc
dec
sbb
insb
lcall
pop
xor
into
in
add
sub
mov
jle
cmpsb
xchg
pop
loope
pop
and
pop
push
das
add
inc
insb
dec
aam
daa
gs
xchg
xchg
gs
out
ret
inc
shrb
jne
push
add
inc
push
mov
dec
sbb
inc
jae
mov
rorb
mov
adc
into
and
or
sbb
daa
je
call
pop
in
test
leave
daa
mov
in
daa
cmpsl
and
cmp
fldl
xor
xor
cmp
mov
lea
test
mov
cwtl
rcl
jl
scas
movsb
scas
sbb
add
push
cmp
dec
mov
cmp
jl
xchg
pop
imul
sbb
add
push
lea
jl
sbb
adc
mov
add
les
jbe
pop
cmp
mov
lret
andb
sbb
clc
xchg
pop
mov
loop
inc
push
aam
das
in
xchg
jne
cmp
ret
add
xor
adc
mov
xchg
jb
add
jle
fcmovnb
shr
xchg
sti
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
dec
les
mov
cmp
sbb
in
jne
push
sub
xor
pop
rorb
pusha
fdivrs
xchg
xor
add
iret
je
lea
push
loopne
add
mov
or
mov
mov
enter
or
sbb
cmp
pushl
call
push
or
ja
adc
mov
lods
dec
mov
les
shrb
popf
loopne
lcall
ficomps
stos
cmp
mov
lock
dec
cld
daa
icebp
xorl
cmp
lods
ret
lea
outsb
sub
sub
adc
pop
sub
out
sub
in
lcall
mov
add
mov
inc
adc
dec
bound
mov
xor
jno
dec
mov
push
in
add
adc
adc
or
and
rcr
fisubrl
xlat
jle
or
push
add
in
or
fistps
cmp
es
fidivrs
add
mov
dec
pop
mov
push
into
in
shll
dec
dec
cmp
outsl
notl
loop
adcb
push
iret
js
and
cmp
test
mov
jle
sub
pop
mov
fstps
leave
and
push
push
out
mov
sahf
sub
adcb
pushf
mov
mov
mov
test
push
stos
enter
pusha
enter
sub
xlat
popa
mov
add
imul
cmp
punpckhdq
stos
mov
cmp
mov
jmp
pushl
and
mov
inc
pop
push
stos
test
mov
daa
xchg
pop
movaps
shrb
les
add
mov
sub
ret
mov
outsb
jle
cmpl
jne
pushl
nop
jmp
sbb
push
adc
mov
fadds
adc
mov
scas
or
or
mov
fmuls
add
imul
or
cwtl
push
push
inc
cli
xor
and
loope
sti
je
cmp
in
pop
loopne
mov
push
shlb
std
pop
pop
stc
add
stos
stc
mov
add
ja
sbb
add
push
push
lock
shll
xor
sbb
push
jne
movb
fs
fucomip
jmp
cmp
jne
popf
movsl
fnstcw
test
jecxz
xor
push
icebp
xchg
enter
adcb
lahf
addr16
dec
aas
mov
jecxz
scas
xchg
pop
mov
adc
je
xchg
fisubl
xor
andb
and
shr
and
mov
mov
mov
sbb
or
aad
cmpl
fsubl
mov
es
or
push
or
aam
mov
roll
push
adc
enter
jp
add
cltd
add
and
sbb
aam
lods
mov
mov
or
or
mov
std
int3
ja
andl
push
cmpsb
mov
cmp
xor
nop
adc
daa
sbb
push
push
xor
push
push
push
lea
add
cwtl
dec
and
test
test
or
cmp
xchg
sbb
xor
push
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
pop
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
lds
add
push
out
cmp
and
push
pushf
push
push
add
mov
movsl
inc
lock
sub
cli
mov
push
scas
fiadds
lcall
movsl
and
add
fcomp
repnz
jno
sbb
xor
cwtl
negl
popa
in
dec
shlb
ja,pt
lea
pusha
popa
sub
cwtl
mov
lds
and
adc
fmuls
add
add
repz
into
xor
pop
mov
sbb
or
cmc
jmp
sbb
orb
adc
rcll
xchg
xlat
push
adc
lea
clc
ret
icebp
cmpb
xor
je
push
pop
cmp
insl
and
pop
push
sbb
mov
inc
fdivs
cs
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
das
adc
cmp
mov
push
xchg
pusha
insb
push
push
xlat
gs
call
jmp
out
popa
push
sbb
sub
lods
sbb
rclb
and
sub
sbb
mov
out
push
mov
insl
lea
rcrb
mov
xchg
mov
xchg
jle
fidivrl
push
push
mov
add
mov
cltd
mov
incl
lea
mov
div
sar
orl
test
out
fbstp
mov
jge
adc
nop
outsb
mov
idiv
push
mov
push
push
mov
dec
fcompl
dec
ret
xor
idiv
mul
mov
out
pop
sbb
jnp
faddl
jo
push
push
lock
subl
fmuls
lret
aam
mov
scas
push
popa
movsl
jne
inc
dec
jg
fcoms
or
xchg
adc
lock
push
dec
or
jg
std
mov
pop
pusha
push
pop
jge
mov
sbb
sti
sub
clc
je
jbe
std
sbb
lcall
into
and
inc
fnstsw
xor
movsl
jg
fcompl
pusha
js
out
fnstsw
dec
fs
or
xchg
arpl
loope
jl
mov
cmp
test
mov
cld
negl
cli
in
cmp
dec
sbb
dec
lea
jae,pt
sbb
jl
xchg
mov
sub
cmp
or
or
out
jle
pop
imull
into
test
xchg
fildl
mov
not
out
or
add
or
mov
and
fdivrp
mov
sub
mov
out
clc
dec
int3
mov
mov
inc
les
cmp
add
add
mov
clc
insl
into
clc
fidivl
jmp
push
addb
mov
push
pop
mov
pop
jne
pop
pop
cmpsl
xor
mov
dec
ljmp
repnz
sbb
jo
mov
orb
fidivl
imul
clc
mov
and
aam
roll
lea
sbb
pop
das
cmpsl
je
addr16
push
ja
fstl
xchg
je
jbe
imul
pop
and
jne
test
or
dec
pop
mov
push
out
push
pop
pop
into
pop
leave
loope
xchg
xchg
out
lds
cmp
mov
xor
mov
push
adc
push
and
push
lret
mov
cltd
add
jb
shr
mov
repnz
or
adc
int
sbb
mov
mov
loope
pop
iret
addr16
xor
mov
in
lock
xor
mov
inc
jne
mov
aaa
sbb
mov
popf
std
lea
adc
push
jnp
test
leave
pop
xor
sbbb
shll
int
mov
std
sub
or
sbb
inc
mov
arpl
pop
in
fwait
dec
add
lea
pop
or
jne
shrl
or
dec
and
push
push
adc
inc
roll
jbe
xor
andl
lock
sub
pop
cmpsb
jle
imul
mov
add
dec
inc
cmp
xchg
xchg
mov
or
jb
or
dec
scas
sbb
sbb
dec
push
sbb
xchg
cli
jb
mov
push
adc
mov
sbb
lods
jmp
andl
pop
int3
out
pop
popf
jo
jbe
mov
xor
pop
sbb
dec
dec
or
xchg
pop
or
pop
dec
and
cmp
clc
dec
adc
jl
add
mov
mov
add
orb
mov
loopne
and
cmp
gs
push
dec
sub
inc
sbb
sbb
sub
pop
cmpb
push
sub
clc
setb
test
mov
cmp
xor
xor
sub
andl
ds
sub
push
lea
push
lods
aaa
and
icebp
or
mov
je
push
fstps
fisttpl
adc
sbb
dec
shlb
push
dec
les
xchg
inc
dec
or
mov
jecxz
mov
hlt
or
int3
and
sbb
das
mov
incl
lret
shrl
inc
nop
imul
mov
push
pop
xchg
les
push
leave
and
dec
rorb
pop
adc
mov
mov
or
jbe
out
popa
sub
or
pop
jmp
aaa
pop
inc
imul
adc
xorl
in
and
in
int
jmp
test
lret
dec
jl
pop
sti
sub
inc
inc
and
add
in
pop
aaa
push
lock
js
and
not
jne
jp
bound
lock
jle
mov
jecxz
sbb
or
aam
inc
xor
inc
inc
and
adc
xchg
xchg
pushf
sub
addr16
lret
sti
add
jmp
push
dec
lcall
filds
jo
add
mov
add
sbb
xchg
jo
and
sub
fiaddl
adcb
lds
sub
je
stos
xchg
lret
push
add
out
pop
add
sub
dec
xchg
push
fs
loope
pop
clc
pop
push
dec
in
out
enter
leave
xor
or
dec
xchg
es
pop
inc
ss
add
xchg
testl
hlt
aam
cmpsb
aaa
pushl
add
int3
add
or
bound
les
shrb
cmp
movsb
sti
push
sbb
sbb
stos
xchg
lret
mov
push
nop
in
call
cmp
push
stos
cli
mov
in
mov
push
iret
mov
mov
sub
adc
rcrl
push
pop
pop
jl
cld
pop
mov
ljmp
add
dec
sub
nop
lret
adc
pushf
push
or
xchg
push
scas
and
push
push
dec
cmp
lods
in
test
pop
push
push
outsb
mov
jnp
scas
mov
mov
push
xor
popa
les
adc
sbb
cmpsl
mov
push
sbb
adc
mov
mov
dec
stos
mov
mov
add
test
cmp
fsubr
sbb
xchg
mov
nop
idivl
test
push
and
jne
mov
mov
adc
dec
push
sbb
add
xchg
lock
mov
pop
pushl
push
lret
jmp
scas
mov
andl
or
filds
dec
cmp
mov
sbb
and
test
je
in
jae
jp
mov
out
call
stc
loop
dec
mov
mov
xor
and
sub
and
mov
fs
jge
add
add
jbe
xchg
inc
pusha
inc
xor
shll
xchg
sub
aaa
mov
ss
sub
leave
js
cmp
jge
mov
mov
out
std
rorl
pop
or
cmp
jle
jmp
add
call
xor
add
mov
sahf
pop
xchg
out
in
sbb
cltd
xchg
sbb
or
mov
jnp
xchg
mov
xorb
sbb
aam
sbb
xor
push
cld
callw
mov
cmp
in
mov
jl
pop
jo
sub
inc
sete
sbb
loope
and
je
sbb
jb
or
and
stos
push
or
adc
dec
cmp
lcall
xchg
jbe
mov
add
adc
enter
push
mov
add
sub
test
xor
out
movsb
add
sbb
mov
sub
ffreep
pop
lods
jecxz
push
hlt
js
push
sbb
int
pop
pop
je
lcall
mov
add
jne
mov
pop
aam
mov
jbe
call
push
aad
pop
or
push
and
add
iret
fsubrs
push
jge
push
pop
mov
push
iret
ss
mov
test
fsubl
imul
xchg
push
or
cmpsb
mov
fwait
jle
sti
add
roll
stc
inc
roll
ret
inc
outsl
mov
dec
in
popf
push
jne
mov
je
fisttps
adc
dec
clc
mov
pop
xchg
and
or
adc
mov
insl
pop
lock
sbb
in
call
ja
fdiv
xorl
ret
xor
arpl
sbb
mov
mov
stos
and
in
add
or
lcall
lcall
pop
pop
mov
xchg
jle
jge
sub
pop
js
adc
inc
mov
mov
or
push
add
mov
pushf
jae
jno
xchg
or
ss
loopne
bound
stc
enter
xor
jae
or
pop
jne
ficoml
clc
clc
sub
inc
cs
cmp
rolb
cmp
dec
call
ret
xchg
adc
clc
pushl
xor
leave
sub
shrb
pop
inc
lea
add
add
inc
lret
test
sub
lock
aaa
addb
jl
in
in
mov
das
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
sbb
or
dec
jp
clc
adc
add
in
negb
dec
call
jge
adc
test
inc
in
aas
push
lock
sbbb
aad
shrb
pop
clc
jg
mov
cwtl
add
or
lahf
aam
dec
popf
mov
ja
xchg
inc
push
dec
das
or
lret
cwtl
sub
jbe
or
aaa
xchg
mov
push
or
out
mov
sbb
pop
or
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
and
jbe
movzwl
in
test
arpl
jo
push
push
jmp
insb
push
cmp
je
lea
push
icebp
mov
push
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
test
sbb
jb
mov
pop
mov
inc
sarb
and
data16
xor
inc
lea
push
sbb
pop
pushf
flds
or
addl
jge
clc
nop
pop
jb
inc
mov
stc
mov
mov
push
mov
iret
and
mull
test
mov
jbe
mov
add
inc
push
neg
pop
xor
cld
xchg
add
xor
ja
dec
fisubrl
sub
xchg
pop
adc
shlb
cli
mov
adc
push
pop
mov
aam
shlb
icebp
sbb
lock
cmpsb
add
mov
aas
add
push
roll
jno
test
sub
inc
cmp
out
pop
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsl
rolb
fcoml
jae
push
repnz
addl
mov
jge
mov
xchg
aam
rolb
push
mov
mov
insb
pop
xchg
sbb
or
adc
adc
scas
xchg
movsl
fnstenv
or
add
loopne
decb
int3
jmp
mov
jb
sbb
push
outsl
jbe
fs
adc
dec
or
add
mov
imul
ljmp
inc
jb
subb
aam
insb
cli
sub
push
test
sub
sbb
fs
pop
sbb
inc
pop
mov
jno
xor
aaa
pop
sbb
adc
mov
mov
aas
xor
sbb
or
jg
stos
fldenv
push
adc
cs
sti
add
xlat
push
jnp
mov
adc
and
add
shl
or
jecxz
arpl
loopne
adc
mov
inc
add
cmp
stos
and
adc
xor
xlat
into
pop
jecxz
out
xchg
mov
adc
jle
sbb
pop
shll
inc
sub
movl
push
gs
add
adc
xchg
cli
jb
bndldx
popf
cmpsl
cld
mov
pop
adc
lds
imul
add
js
add
stc
imul
lea
into
push
aaa
imulb
clc
add
xchg
fldenv
rclb
std
dec
sbb
fstps
pop
int3
xor
adc
sbb
fidivrl
enter
sbb
inc
or
lcall
aaa
lcall
adc
int3
push
psubusb
mov
mov
mov
or
test
add
cmpl
or
out
lea
cli
xchg
fimull
or
stc
push
fidivs
jno
iret
nop
lea
popf
sub
cltd
mov
pushfw
push
jmp
or
push
setne
cmpb
cmp
test
lcall
mull
aad
clts
out
aaa
lea
lea
stc
mov
adc
lods
push
or
push
pop
or
adc
and
or
xor
test
dec
imul
inc
sbb
or
testl
out
or
push
dec
or
shrb
or
outsl
pop
mov
jb
mov
and
inc
mov
testb
or
cmp
nop
sub
xchg
mov
je
xor
ret
cmp
mov
dec
xchg
mov
js
or
jnp
movsb
fwait
roll
adc
mov
pop
sbb
mov
in
lods
call
nop
jne
rcll
adc
ja
into
lods
cmpsb
cmp
add
sti
sti
mov
mov
call
push
dec
mov
in
das
push
push
test
pop
jns
jmp
fcompl
mov
mov
cmp
xchg
sub
insl
inc
popa
repz
addr16
inc
xchg
sbbb
sub
adc
imul
in
jmp
movsb
ret
int
sbb
add
adc
inc
inc
push
cld
cs
xchg
or
and
adc
sbb
jl
xchg
inc
or
es
pop
pop
pop
cmp
pop
xor
in
sub
add
addb
sbb
js
fwait
and
xor
leave
xor
jle
dec
js
pop
adc
push
int3
dec
add
adc
push
push
adc
inc
sbb
mov
lret
in
pop
jle
xor
add
cli
jle
add
icebp
push
cmp
movzwl
push
mov
pop
pop
mov
adc
test
scas
jb
mov
adc
inc
and
test
cmp
cwtl
xor
jle
add
shrl
mov
orl
mov
dec
adc
shrd
fsts
jne
mov
mov
mov
iret
rol
xor
out
test
scas
push
arpl
pop
lods
mov
add
push
lock
jo
loopne
orl
loope
xchg
adc
mov
cmp
ret
subb
mov
pushf
mov
cmp
in
xchg
push
adc
lock
ret
adc
xchg
loopne
pop
xor
cli
ret
sub
mov
sbb
jae
int3
lret
pop
sub
pushf
mov
mov
adc
sub
sbbb
push
enter
es
in
aas
mov
pusha
inc
and
popf
and
mov
pop
mov
mov
pop
test
imul
mov
inc
mov
pop
push
cmp
inc
fsubrl
fdivr
or
sub
xchg
push
hlt
loopne
das
roll
ret
icebp
adc
push
mov
push
icebp
and
loop
push
dec
out
xor
sbb
jo
in
out
lea
adc
dec
jbe
loopne
or
aas
jle
xlat
mov
add
inc
out
mov
das
ss
iret
aam
xorl
inc
add
idivl
subb
ss
pop
pop
cwtl
mov
and
les
sbb
notl
mov
ja
iret
aas
cmpb
sub
mov
pop
mov
cmpsl
enter
push
outsl
mov
movsb
push
xchg
jge
or
rolb
fisttpl
sbbl
push
adc
ja
push
lea
inc
lret
daa
mov
sbb
xchg
push
jg
and
push
jb
dec
call
out
xchg
push
gs
fidivs
xchg
fcoms
mov
inc
inc
fcom
or
js
loop
aaa
mov
sldt
xchg
xchg
xchg
ja
pushf
popl
jle
adc
inc
test
push
sahf
mov
loopne
das
or
adc
mov
test
jae
loopne
and
mov
in
lock
mov
push
movsb
mov
cmp
sbb
mov
mov
mov
mov
into
and
lods
cmp
sbb
sub
fs
add
xor
shll
sbb
ja
push
add
jno
jecxz
mov
in
add
loopne
mov
add
loopne
mov
xchg
push
popf
add
add
addb
mov
ret
ret
pop
mov
inc
je
or
and
sbb
repz
dec
icebp
add
mull
and
int
in
icebp
pusha
xor
insl
je
push
cmpsl
xchg
out
and
imul
push
mov
imul
pop
mov
sbb
mov
mov
mov
rcrl
mov
in
inc
adc
sbb
stos
sbb
sbb
popa
mov
pop
insb
sbb
aas
hlt
cli
bound
mov
jne
fisttpll
push
pop
cmp
je
xchg
mov
xchg
stos
or
jmp
or
push
and
imul
and
or
scas
cmp
rclb
add
enter
test
adc
and
sbbl
jge
and
rorl
bound
and
sub
sbb
nop
push
imul
cwtl
sub
add
nop
fsubrl
inc
sub
adc
lcall
or
push
mov
lock
in
jge
sub
jle
pop
jg
loopne
insl
sub
ss
push
cs
aam
mov
popf
mov
test
xor
or
das
jge,pn
loopne
dec
sub
imul
jns
cmp
and
int3
xor
rorb
push
jno
sbb
push
push
push
mov
jge
sub
das
out
bound
shlb
and
mov
lds
cs
orb
popf
call
cmp
cmp
stos
into
add
dec
call
mov
lock
pop
add
add
cmp
add
xor
xor
loope
mov
adc
ja
xchg
je
add
in
pop
and
pop
das
mov
mov
cmova
sbb
mov
shll
or
sbb
adc
sbb
sti
mov
push
sbb
inc
and
and
lea
pop
and
fsubrs
lret
shlb
mov
mov
pop
xor
fwait
out
or
lock
cmp
les
loope
movsb
dec
pop
or
push
or
inc
or
or
jae
js
ss
sbbb
sbbb
ret
add
out
add
test
xor
cli
sbb
ret
push
jbe
mov
movlhps
jnp
or
xor
mov
ja
fisttpl
arpl
adc
push
lret
mov
push
scas
int3
pusha
out
push
pop
xor
xchg
inc
push
xchg
jl
xchg
cmc
pop
movsl
in
push
xchg
es
xchg
aas
fwait
in
pop
adc
and
push
adc
or
mov
push
push
add
pop
subl
hlt
push
inc
enter
enter
jae
xor
daa
or
pusha
cmpb
pop
test
mov
xor
cmpsl
and
add
push
in
cmp
mov
mov
call
dec
cmp
inc
shrd
mov
sub
mov
rclb
mov
cs
lahf
mov
mov
bound
mov
int3
sub
push
notl
ret
dec
hlt
sub
push
arpl
push
or
inc
add
jno
or
rcll
xor
inc
add
mov
leave
mov
popa
sub
cmpb
xchg
dec
pushf
imul
clc
inc
mov
cmp
ja
add
inc
ret
adc
add
inc
pusha
pop
push
xchg
into
outsl
pusha
leave
xor
mov
or
mov
out
or
cmpsb
mov
inc
bound
mov
or
push
int3
lds
fstps
mov
add
repnz
cmc
cmp
decb
mov
or
dec
in
sbbb
push
add
js
int3
push
inc
inc
ret
cmp
jae
addr16
adcb
gs
dec
and
mov
push
jno
movsb
mov
test
inc
outsl
aad
sbb
testb
push
scas
push
jbe
mov
ret
mov
jecxz
push
or
mov
or
int3
cmp
jne
sbb
add
loopne
test
mov
data16
mov
je
cmpb
xor
mov
sbb
ja
dec
loop
xorps
mov
dec
push
out
clc
je
cmp
clc
lcall
cmc
sbb
push
loopne
stc
sub
lea
push
lea
mov
loope
inc
push
test
nop
fs
je
sbb
int3
sbb
ret
sbb
dec
insl
fildll
lret
cmp
jl
cmp
dec
hlt
int3
xor
sarl
pop
sub
lock
inc
mov
cmp
jne
mov
outsl
sbb
push
add
mov
stos
jmp
sti
push
mov
sub
repnz
sbb
xchg
pusha
out
ljmp
sub
jne
and
pushw
push
mov
xchg
imul
dec
sub
ret
test
fstps
sti
rorb
cltd
sub
shll
sub
sarl
push
mov
lahf
push
or
xchg
in
mov
ret
aas
inc
in
sub
lea
out
push
dec
or
in
out
cmpl
or
xor
push
insl
adc
hlt
pop
mov
dec
ja
cmp
adc
mov
jge
pop
fadds
call
xchg
lock
xor
push
or
pop
jo
mov
ja
pop
add
test
stos
stc
xor
push
xor
call
mov
out
lock
sub
add
push
adc
or
jo
test
inc
das
and
divl
add
mov
or
or
ret
or
pop
or
neg
xchg
cs
sub
mov
cmpl
push
push
lods
div
dec
or
data16
mov
inc
addl
jb
mov
fadd
fwait
add
lret
int
pusha
push
pushf
aaa
nop
xor
or
xchg
scas
xchg
cmc
rolb
mov
adc
cmp
iret
addr16
rcrb
repnz
jecxz
pop
mov
sbb
or
pop
sar
mov
jg
loopne
leave
adc
jbe
inc
cmp
push
push
dec
mov
nop
rorl
out
push
add
push
push
xorl
sbb
jmp
dec
or
adc
sub
jno
imul
push
lock
leave
add
fcoml
xchg
xchg
or
in
jno
lock
fdivs
clts
scas
cmp
push
adc
ljmp
jp
mov
mov
das
adc
xor
add
ds
or
daa
add
adc
lds
out
loopne
inc
cwtl
test
and
and
lahf
pop
sub
pop
lods
jmp
jle
das
mov
lods
push
test
je
cli
jmp
mov
loope
pop
fwait
pop
jno
cmp
push
inc
cmp
jae
push
loope
adc
push
sub
cmp
aaa
add
subb
ret
mov
sbb
mov
xchg
mov
mov
sub
jb
cmp
dec
out
inc
pusha
clc
inc
dec
adc
add
clc
ret
xchg
lods
xchg
das
sub
xchg
push
stos
push
insb
sub
or
popa
cli
jmp
jo
push
mov
cmp
je
ret
mov
in
push
cmp
push
mov
push
pop
sti
je
pushf
mov
ret
and
jb
and
int3
sbb
rolb
add
popf
scas
stc
jge
push
sub
lcall
test
or
or
clc
pop
in
movsl
inc
push
ss
sbb
lcall
jecxz
les
dec
push
jp
imul
pop
fmuls
adc
xchg
pop
inc
jp
mov
ss
loopne
xchg
cmpsl
pop
in
add
mov
add
in
or
and
ficoml
add
mov
jmp
pop
out
jne
jbe
jbe
scas
jge
inc
push
push
je
lea
dec
inc
jmp
sbb
enter
pop
jecxz
cltd
aaa
clc
sub
add
mov
push
pop
xchg
adc
sub
ret
or
inc
xor
dec
sub
xchg
sub
sub
test
daa
leave
aas
xchg
jo
lea
or
dec
pop
std
inc
movsb
dec
das
cwtl
pop
push
lahf
and
popf
or
xor
insl
andl
jnp
mov
lret
aaa
jno
sub
repnz
or
sbb
and
jae
cmp
or
jbe
cmc
sub
xorl
lock
and
loopne
fidivrl
or
cmp
ja
std
rolb
and
jae
push
xor
pop
orb
loope
je
pop
inc
adc
negb
sub
cmp
cmp
add
mov
add
icebp
dec
mov
fisubrs
sbb
mov
mov
mov
js
jl
adc
out
or
and
enter
lods
imul
mov
call
push
inc
pop
jg
pop
sti
cmp
mov
push
or
pop
xchg
pop
sub
mov
mov
je
jo
pop
bound
in
dec
dec
into
cs
emms
sub
in
and
dec
pop
or
cmpsl
mov
lock
leave
ret
push
cmpsl
dec
or
repnz
pop
push
pushf
xor
test
test
dec
xor
cmp
js
test
sub
push
daa
je
orl
sbbb
pop
mov
dec
rcll
or
out
lret
push
mov
jbe
jle
mov
mov
in
add
pop
loopne
or
cmpsl
test
movsb
into
inc
in
dec
dec
dec
add
add
repnz
dec
pop
mov
and
add
or
fiaddl
in
addl
pop
fsts
xor
sub
repz
xchg
mov
xchg
sub
repz
lea
push
push
data16
push
shrb
mov
js
or
xor
movsb
and
xchg
sub
mov
rol
add
adc
mov
inc
push
cmp
jne
loop
or
mov
ret
pop
repz
imul
or
loopne
addr16
iret
mov
add
and
pusha
xchg
or
lea
or
cmc
xchg
xor
and
sub
dec
sbb
or
push
cmp
mov
hlt
and
fcom
cmc
dec
or
pop
ret
sub
enter
mov
xor
ror
mov
scas
shll
ljmp
enter
lret
ljmp
cld
push
aaa
add
fimull
or
sub
in
add
cmp
mov
cmp
jp
sbb
or
or
or
mov
sub
sub
data16
sbb
adc
ficomps
icebp
sbb
jge
add
loopne
lcall
popa
jo
mov
pop
push
in
fstps
add
mov
sub
mov
jo
cltd
sbb
mov
inc
mov
movsb
pop
mov
loop
mov
cmp
pop
jns
rolb
mov
and
inc
or
mov
xchg
xchg
test
cmp
scas
and
inc
loop
add
pop
xor
sbb
adc
mov
add
sbbl
dec
push
push
pop
xchg
adc
clc
xchg
cmp
pop
sbb
cmp
xchg
sub
mov
ficoml
pushf
sbb
pusha
outsb
nop
int
sbb
mov
in
addr16
adc
and
xchg
movl
nop
mov
ret
mov
inc
insb
sub
inc
punpckldq
pop
sub
mov
mov
xchg
pop
aad
rclb
sub
and
xchg
inc
mov
jnp
es
add
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
cmp
or
mov
inc
cmc
daa
stos
cld
jmp
mov
pop
rolb
and
fs
add
das
pushl
jnp
push
mov
push
mov
sbb
push
aam
out
js
clc
adc
sbb
add
cmp
daa
inc
xor
xchg
shr
mov
loopne
test
inc
or
lock
inc
mov
cmp
test
dec
add
jmp
adc
ds
ja
push
push
push
pop
adc
add
push
in
push
pop
adc
test
sarb
dec
sbb
mov
fimuls
push
jge
aas
sbb
mov
sub
clc
js
loop
out
jbe
insl
in
mov
mov
lock
adc
jle
mov
dec
pop
mov
idivb
mov
pop
mov
jne
adc
pop
call
daa
adcl
ror
movsb
mov
imul
push
testb
shll
and
or
movsb
adc
push
add
sbb
imul
push
cli
lds
xlat
enter
jmp
xchg
jle
fadd
ja
sub
lea
xchg
jmp
pusha
lods
pusha
cmp
mov
jo
inc
insb
pop
sub
jp
test
or
xchg
sbb
add
mov
iret
inc
mov
sub
cmp
inc
push
iret
add
test
call
loope
sub
mov
or
imul
add
add
in
push
or
imul
bnd
mov
cmp
xchg
mov
inc
or
loope
notl
sbb
int3
push
ret
insl
adc
push
test
jne
jmp
push
jo
and
jne
in
mov
cmpsb
ret
dec
cmp
add
ljmp
loopne
pop
mov
xor
push
cs
ss
stos
subl
popa
jo
sbb
add
ficomps
in
mov
sbb
andl
mov
mov
xchg
fmull
popf
mov
out
inc
jnp
mov
das
in
sbb
in
cmp
xchg
mov
sbb
lea
add
pop
mov
es
movsb
pop
cld
inc
mov
insb
mov
sub
lcall
sbb
mov
xchg
negb
nop
cmp
mov
xlat
mov
push
fistpl
in
popa
add
jmp
xchg
adc
jp
push
adc
adc
inc
lods
es
inc
pop
mov
inc
lea
add
and
rol
xor
gs
mov
iret
aad
push
stc
fiadds
xor
push
mov
or
into
dec
mov
js
xor
dec
push
cmp
insl
and
mov
xlat
push
adc
mov
nop
and
push
mov
mov
push
adc
mov
loope
add
dec
add
push
dec
xor
xor
mov
xor
lea
and
imul
in
cmpb
ffreep
xor
cs
xor
add
jnp
orl
push
mov
test
push
bound
je
adc
push
fwait
inc
mov
sbb
inc
pop
cmp
movsb
sarb
add
mov
cmp
test
loopne
sub
pop
xor
dec
dec
out
xor
sbb
aas
test
mov
jne
cmp
les
or
mov
add
push
icebp
add
cmp
fcompl
andl
push
push
mov
loope
xchg
pop
push
cltd
jno
adc
push
mov
push
inc
sub
lods
gs
cmp
inc
loopne
pushf
adc
mov
les
dec
fdivs
test
add
fsubr
aam
out
shlb
pop
cmp
jne
out
sub
lods
sarb
dec
pop
mov
adc
pop
std
sub
and
cmc
sub
lock
push
xchg
push
int3
out
add
add
jmp
inc
fmull
and
aas
imul
loopne
rclb
inc
pop
movsb
mov
push
cmc
enter
xchg
sbb
cmp
add
sbb
shll
dec
mov
dec
push
push
or
leave
push
lods
xchg
into
inc
mov
add
sub
ja
test
xor
add
movsl
jge
ret
test
loop
pushl
adc
stc
sbb
sub
pusha
jb
popf
movsl
test
add
xor
das
pop
dec
ret
and
dec
jmp
push
stos
and
jb
adc
inc
pushw
mov
cld
sahf
dec
pop
inc
ljmp
in
inc
inc
pop
adc
adc
pop
inc
cmpsb
dec
enter
and
insl
cmc
les
mov
fcoms
or
and
pusha
inc
xor
add
sbb
fsubrl
pushf
adcb
dec
cmp
sub
sub
lods
popf
hlt
mov
popl
mov
add
lock
mov
jmp
inc
jl
cmp
sbb
sub
xchg
pop
rcrb
fcompl
out
add
and
cmp
in
xor
push
xor
sub
rcrb
cld
sub
xchg
ret
mov
sub
in
jge
mov
add
or
push
in
rclb
ret
dec
add
inc
add
push
jnp
jmp
out
push
lret
adc
cmp
or
pop
rcrl
mov
push
int
aaa
xchg
jecxz
scas
pop
xlat
dec
in
mov
lea
lea
mov
and
push
inc
bound
sub
out
or
push
mov
aad
adc
add
repnz
stc
or
mov
fisttps
pop
icebp
mov
adc
sbb
andl
push
xor
mov
xchg
dec
or
jl
pop
cmp
sbb
jo
shll
push
or
sbb
and
call
lods
subb
fmuls
scas
mov
scas
mov
add
incb
jle
adc
mov
fnsave
scas
jbe
into
mov
mov
cmp
lods
call
pop
or
daa
push
add
test
mov
adc
fwait
cmp
inc
xor
add
aaa
mov
cs
sbbb
and
jno
popa
mov
clc
dec
insl
fdivr
roll
ret
mov
mul
aam
lds
mov
cmpsl
in
xchg
scas
inc
cmp
add
dec
sti
sarb
mov
sti
pushf
mov
pop
cmp
dec
xlat
scas
sub
popf
jb
adc
ja
jmp
xor
mov
jae
movl
stc
cmpsb
inc
test
sahf
adc
lea
out
dec
add
cmp
fadd
rorb
mov
insl
add
add
pop
shll
jge
and
add
xor
ret
rcrl
or
push
jp
addl
mov
push
push
aaa
mov
or
adc
scas
fucomi
xor
jmp
jecxz
mov
xor
dec
push
je
dec
jne
pusha
xlat
test
push
mov
xor
adc
adcb
cs
cld
pop
sbb
rcl
mov
sarl
pop
repnz
aam
popa
fwait
loop
mov
mov
es
or
rcr
pushl
mov
imulb
loope
xchg
jge
test
dec
adc
or
inc
imul
xor
dec
dec
or
mov
pop
jno
adc
lea
cli
jb
adc
or
fiadds
dec
outsb
adc
jmp
lea
in
lret
ja
cmp
xchg
ss
sub
je
mov
dec
orl
add
sbb
pop
mov
xchg
imul
popa
repnz
pop
mov
sbb
push
mov
fs
add
aad
lods
rorl
add
jb
xor
and
cmp
testb
push
cmp
int
pusha
xor
sti
push
icebp
or
out
je
adc
dec
or
mov
jge
adc
es
push
xor
jb
sub
outsb
lock
xor
icebp
int3
or
call
jecxz
sub
sbb
or
push
aaa
cmp
cmpb
outsl
shlb
cltd
sarl
push
cmp
or
sbb
adc
adc
cmp
addb
in
into
cld
push
pop
cmc
arpl
push
je
aaa
cmp
mov
roll
test
dec
cmpsb
add
xor
sub
adc
sub
jo
jbe
jmp
adcb
xchg
pop
sbb
dec
or
xchg
addb
lcall
or
inc
sbb
cmp
xor
add
adc
sub
arpl
xorb
das
and
scas
cmp
fnstcw
rolb
sbb
pop
lods
push
push
xor
jge
in
lods
lods
outsl
bound
push
adc
cmp
mov
mov
fnstenv
outsb
adc
jno
sar
cmp
cmp
push
and
mov
rorl
cmp
or
les
mov
pop
xor
inc
cmp
mov
or
push
or
xchg
adc
faddl
push
lds
push
and
sub
inc
jbe
ds
push
mov
movsb
cmp
dec
pop
cmpsb
xor
dec
add
dec
push
mov
push
mov
pop
ja
into
insb
sub
ret
mull
mov
es
mov
nop
mov
shlb
jg
ja
jge
mov
divb
jp
jno
inc
cmp
jl
push
fimull
insl
test
inc
pop
lcall
dec
add
push
inc
ret
sbb
lds
xor
les
popf
pop
mov
adcl
mov
dec
cld
mov
mov
adc
xor
in
mov
lea
jae
das
mov
jo
insb
dec
imul
sbb
sbb
sub
pop
testb
andl
sub
mov
jmp
aad
or
mov
popf
add
or
fld
out
popf
xchg
add
shlb
sbb
aas
mov
cld
fisubs
inc
cmp
cmpb
je
cmp
mov
xor
popf
leave
ret
mov
dec
sbb
and
push
sub
in
imul
inc
lea
push
ret
jbe
inc
adc
and
nop
or
sub
es
mov
ffreep
imul
xchg
sbb
inc
cli
and
subb
mov
clc
or
jae
inc
test
and
jae
sarb
enter
orb
shr
pop
shr
mov
in
push
add
mov
pop
add
orl
aam
inc
mov
popf
test
cmp
xchg
fmull
sub
das
jl
sub
mov
fs
mov
out
popf
pushf
in
lock
push
mov
loopne
cmpsb
mov
inc
andl
fs
js
mov
int
movb
sbb
ret
inc
out
iret
dec
je
mov
sbb
mov
incl
sub
mov
mov
in
and
mov
bts
xor
aam
dec
push
aam
stos
and
dec
inc
or
cwtl
sbb
sbb
rorb
loopne
push
test
cmp
lea
pop
faddl
int3
cmp
lea
sti
int
xchg
cli
sbb
mov
jae
cld
push
mov
shrb
push
mov
sarb
lods
sub
outsl
ja
clc
mov
xlat
dec
cmp
sub
mov
xchg
and
or
ja
cmp
lds
mov
adc
or
ret
repz
pop
std
adc
in
push
mov
or
jp
sbb
cmp
ja
popf
or
mov
dec
cwtl
stos
ds
mov
jo
or
xchg
mov
outsl
inc
sub
jmp
fisttps
mov
push
fbstp
enter
aas
dec
stos
mov
cli
insb
cmp
inc
pusha
and
sub
xchg
add
add
or
xor
mov
jl
std
lret
push
out
cmp
jge
dec
stos
push
xchg
movsb
mov
jo
pop
xchg
inc
xchg
cmp
test
nop
in
push
and
and
sbb
shlb
add
pop
and
jl
adc
outsl
jb
test
inc
sub
lds
sbb
add
adc
push
mov
dec
outsb
inc
je
sbb
cmp
addr16
out
bound
insl
push
pop
ja
and
mov
je
or
xchg
push
xchg
adc
mov
mov
ljmp
sub
rolb
adc
lret
pop
orl
add
and
and
fisubs
mov
or
pmulhw
push
addr16
pop
fs
fisubs
testl
add
sti
pop
sbb
test
aas
faddp
stc
popa
movl
and
enter
jp
mov
pop
popf
push
loope
fs
out
ret
jo
mov
dec
mov
imul
cltd
mov
rclb
and
and
and
subb
xor
xlat
pushw
movsb
and
mov
icebp
push
int3
js
pop
xchg
mov
cmp
daa
mov
jge
or
add
hlt
pop
aaa
sub
xor
mov
cld
ret
add
pop
cltd
jl
xor
adcl
push
ret
xchg
cmpsb
xchg
js
mov
subl
lds
rorb
dec
nop
out
lret
leave
add
nop
out
das
add
adc
clc
xor
xor
jo
je
mov
cmp
xchg
ss
and
gs
sub
fmull
popf
pop
popf
adc
sub
sbb
push
sub
pushf
and
daa
ret
inc
aaa
ss
and
and
bound
cmp
mov
mov
scas
inc
pop
gs
jno
xchg
stos
adc
and
cwtl
xlat
adcl
sub
lret
cmp
arpl
movsb
outsl
jne
clc
rclb
lea
orb
push
rolb
xchg
push
andl
imul
pop
or
movsl
sarl
outsl
mov
pop
add
mov
and
push
mov
lret
jge
or
mov
jl
shlb
or
rcrb
fs
dec
pop
aaa
xor
orl
sub
pop
add
jae
cmp
push
adc
add
jae
cmp
xlat
jo
imull
push
xor
inc
xor
imul
jmp
adc
jno
jbe
pop
sbb
or
sbb
xor
sub
or
and
cmp
rcr
jb
or
add
add
fldl
inc
jno
cld
cmp
fistpl
fmuls
sahf
mov
insb
push
sub
insl
xchg
cmpl
xor
cs
stc
push
fcmovnbe
lea
xchg
push
or
xchg
cs
rcrl
adc
clc
shlb
fistpl
cmpsb
inc
pop
inc
call
mov
xor
data16
lahf
or
pop
popf
pop
xlat
mov
mov
aaa
sbb
iret
xor
popf
jbe
push
dec
or
and
rorb
jl
sbb
add
jo
push
push
jno
jnp
jle
outsl
lea
aad
mov
mov
ret
or
xchg
lods
clc
cs
or
xor
iret
outsl
dec
dec
add
add
jl
jae
negl
mov
lret
cltd
loope
lea
loope
and
lret
xchg
ret
xchg
pop
in
fadds
repnz
mov
xchg
cwtl
cmp
mov
jmp
xchg
add
xor
divb
mov
jne
aad
mov
dec
adc
xchg
adc
shrl
or
mov
push
pop
pop
jg
mov
testl
in
pop
cs
push
cmpsb
shrl
xchg
or
or
aam
jae
sub
mov
mov
jns
mov
jno
and
push
xor
test
mov
lcall
sarl
fnclex
push
cmp
or
aad
or
push
push
dec
push
dec
insl
cmp
sbb
sbb
mov
and
jl
lcall
sub
insb
mov
out
fcompl
mov
sbb
test
pop
fbld
pushf
fmul
cs
push
sbb
fs
cld
pop
sbb
sbb
test
xor
or
add
mov
enter
fs
iret
adc
sub
and
sbb
mov
jne
pop
sbbl
orl
pop
sub
xor
daa
adc
sub
daa
sub
push
nop
push
sub
and
sub
xchg
push
enter
sub
xchg
inc
push
sub
sub
mov
sub
dec
and
sub
or
insb
add
mov
movsb
jmp
mov
scas
mov
push
push
sbb
dec
sbb
add
inc
jnp
subl
mov
adc
test
push
dec
add
xchg
lcall
jle
dec
xor
cmp
xor
test
test
dec
dec
repz
xor
fcoms
mov
andb
or
mov
imul
lea
aad
fadds
adc
int
mov
and
sbb
dec
dec
xor
sbb
adc
les
scas
out
sbb
add
loope
inc
inc
inc
testl
or
dec
mov
inc
push
or
sbb
fwait
stos
push
test
or
xchg
lea
and
movsl
fs
fsubr
jge
lods
add
test
add
lock
or
add
in
aaa
and
pushf
dec
repz
mov
mov
inc
sub
icebp
sbb
loop
dec
test
mov
or
ret
dec
shlb
dec
sbb
loope
dec
sub
pop
push
push
jl
in
ss
xchg
sbb
andl
push
in
shll
adc
in
add
mov
loopne
sub
sub
cmp
push
out
data16
inc
leave
lock
add
mov
mov
dec
sub
stos
je
push
gs
test
sub
mov
pop
push
xor
inc
test
push
dec
daa
test
adc
dec
or
shlb
dec
push
aam
lahf
add
int3
sbb
xchg
test
or
add
sbb
es
and
ret
lods
or
sbb
call
adc
inc
fbld
cmp
je
mov
xlat
adc
hlt
rcr
push
ret
or
add
cld
cltd
stc
jno
imul
add
push
sbb
dec
cmp
push
arpl
mov
sbbb
loop
mov
test
add
shlb
ret
cs
stc
xor
es
enter
in
jae
std
dec
lods
jp
je
xlat
les
cmp
jmp
outsb
pop
aam
les
pushf
addl
enter
sub
je
stos
mov
sub
dec
imul
push
orb
push
add
mov
ja
shr
push
mov
fistpl
or
fldl
cmp
inc
jp
jecxz
dec
nop
push
pushl
and
push
jmp
mov
inc
fmuls
push
adc
and
sbbb
inc
mov
repz
mov
inc
enter
mov
push
or
and
jnp
aaa
lock
pushf
aaa
int3
sbb
fisttpll
arpl
sub
jno
iret
mov
adc
push
cmpl
jne
push
loopne
sar
pop
pusha
mov
out
cmpl
repnz
mov
imul
roll
add
aaa
add
aaa
add
mov
mov
push
inc
and
insl
fadd
inc
popf
push
andl
sbbb
mov
xor
mov
dec
iret
adc
lds
jge
jecxz
cmpb
lods
pop
adc
xor
aad
adc
dec
xorl
inc
add
adc
xchg
in
mov
inc
aam
popa
adc
lods
sbb
sbb
nop
sub
add
pop
cmp
unpcklps
cs
jne
cmp
adc
push
inc
call
or
mov
mov
adcl
or
cltd
out
in
in
and
push
je
mov
and
dec
cmp
jns
push
inc
dec
push
inc
jmp
add
mov
mov
xchg
bound
loopne
jno
aaa
xor
ret
bound
pop
sub
mov
adc
mov
push
jmp
sub
movl
fld
mov
sbb
mov
inc
sbb
push
pop
add
add
movsb
inc
stos
sbb
mov
nop
inc
sahf
push
std
mov
mov
sbb
jno
and
mov
test
sbb
insb
mov
aam
pop
xor
femms
outsl
arpl
popf
or
dec
nop
pop
std
mov
mov
xor
xchg
jmp
or
and
repnz
mov
into
xchg
fs
push
xor
cmp
fstp
cmp
adc
push
push
mov
push
push
inc
sti
test
push
mov
jnp
add
fs
inc
and
pop
loop
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
shrb
xor
add
pop
cmp
mov
cmp
loopne
testl
sub
jmp
rcrl
test
mov
sidtl
inc
lret
jp
and
adc
cmpsb
orb
jo
ret
int3
nop
stos
and
xadd
stc
cmc
dec
sub
sub
stc
push
add
adc
in
shrb
dec
sbb
sub
add
cmp
pop
les
mov
jne
xor
add
sub
ja
pop
jbe
adc
and
scas
lret
adc
pop
xor
mov
sub
push
and
xor
xchg
shrb
jmp
push
inc
pop
push
inc
test
fadds
cmpsb
add
jle
pop
ret
add
xchg
add
arpl
push
mov
xchg
fistl
ds
or
inc
push
xchg
or
mov
or
add
in
pop
shrl
push
xchg
lea
and
or
pop
mov
outsl
andl
imul
adc
pop
inc
imul
rol
faddl
lea
out
iret
inc
sahf
test
dec
call
dec
dec
dec
in
adc
inc
stc
or
aas
pushf
add
test
xor
push
in
aam
cld
add
pusha
add
dec
push
adc
popf
addb
mov
or
lock
add
mov
sub
lock
xor
inc
push
xor
in
lock
inc
movl
sub
xchg
push
popf
adc
ret
loop
xor
loopne
cmp
mov
pop
xor
adc
push
adc
or
mov
inc
lea
dec
fnstenv
xor
ja
pop
movsl
jo
inc
popf
dec
cmp
sbb
adc
or
xor
mov
push
dec
add
cmpsl
and
add
pop
add
popa
je
inc
add
popa
and
sbb
enter
lds
in
popf
push
jle
mov
scas
xor
sbb
push
scas
push
enter
push
enter
in
cmp
fsubrp
xchg
or
push
lea
pop
push
push
xor
divl
dec
sbb
jbe
push
daa
rcrl
in
aam
inc
sbb
ret
je
sahf
incl
movsl
add
lds
add
mov
leave
push
add
decl
xor
daa
and
ror
and
push
dec
cmp
xchg
mov
inc
inc
sbb
loope
adc
push
or
rclb
lods
push
xlat
lahf
scas
mov
adc
fildll
jns
sub
dec
rorb
cmp
add
xor
add
subl
in
or
jecxz
mov
or
addl
dec
bound
adc
sub
add
pop
call
pushf
test
fildll
in
out
mov
jle
xor
inc
cmp
and
inc
cmp
fnsave
add
adc
sub
subb
js
mov
fistpll
aam
or
inc
test
mov
dec
mov
sub
add
sbb
cli
or
xchg
sarb
cmp
push
pop
jb
mov
or
mov
lea
xor
push
sbb
cmpb
mov
cmp
adc
dec
sbb
int
nop
xor
enter
adc
mov
adc
push
mov
les
data16
push
pop
rol
add
test
mov
cmp
sub
add
xchg
push
inc
push
pop
add
repz
xlat
push
push
sbb
sub
cmc
pop
sahf
sub
je
add
leave
sub
sbb
or
dec
sbb
or
mov
adc
es
lret
add
lods
pop
cmp
jo
pop
or
jae
sahf
push
pop
test
sbb
xchg
fwait
jbe
sbb
les
in
jmp
mov
add
cmp
scas
fisttpll
icebp
push
add
movsb
sbb
or
insb
push
add
pop
push
ret
aaa
mov
shlb
push
fwait
xor
int3
orl
mov
sub
adc
xchg
outsl
movsl
sbb
mov
outsl
dec
adc
push
movl
cwtl
or
add
or
push
cmp
mov
sub
movsb
sbbb
arpl
xchg
pmuludq
inc
in
dec
xlat
loopne
mov
add
and
pop
adc
aas
sbb
push
addl
xor
dec
or
xchg
fistps
lds
insb
dec
jns
push
fldt
call
jne
cmp
push
lea
insl
loope
pop
call
mov
cmp
inc
lcall
jo
rorb
nop
repnz
sahf
sbb
xchg
pop
and
das
jle
jecxz
sub
outsb
or
jbe
test
push
dec
nop
xchg
add
inc
inc
xchg
add
sbb
xor
push
jg
nop
adc
add
dec
or
xor
xchg
mov
insl
hlt
repnz
sbb
and
mov
dec
push
add
cs
ja
cmp
cltd
mov
jg
add
repnz
jle
repz
mov
dec
rorb
pop
or
push
sub
bnd
mov
pop
mov
xor
sub
cmp
nop
sub
mov
push
adc
sub
cmc
mov
jno
add
push
out
or
jo
test
sub
xchg
test
cmp
loop
clc
or
add
pop
add
or
call
inc
or
mov
add
adc
test
movl
mov
mov
push
adc
xchg
int3
arpl
xchg
xchg
or
mov
mov
sub
mov
jge
cmpb
test
cmpsb
dec
mov
fwait
ret
or
mov
adc
adc
mov
imul
pop
dec
pusha
inc
jno
mov
push
cs
xor
leave
push
dec
adc
icebp
movsb
mov
xchg
imul
mov
ss
sbb
dec
inc
sbb
and
js
push
mov
inc
lds
dec
sbb
movsb
push
push
inc
and
lods
pop
pop
fdivrs
aam
add
or
js
push
mov
mov
xchg
xor
aaa
cmc
xchg
decb
shrb
adc
decl
je
mulb
cmp
lahf
add
movsbw
shlb
enter
jno
jne
fisttpl
xchg
je
or
je
adc
sub
or
inc
push
arpl
jecxz
add
mov
inc
pop
cmp
mov
hlt
push
inc
jp
pop
andb
sub
loopne
pop
dec
cmp
adc
aas
cmp
fmull
sbb
in
adc
sbb
fs
rcrb
lcall
adc
push
and
pop
push
inc
xor
mov
icebp
cli
push
jg
xchg
aas
lea
pop
out
add
push
jecxz
add
inc
dec
sahf
das
fwait
push
jge
lods
repnz
mov
push
xor
and
cmp
add
or
cmp
pop
popf
popf
or
adc
jbe
cmp
mov
ficompl
or
xchg
mov
mov
dec
sub
ret
sbb
movsl
xor
adcl
inc
or
repz
fs
and
stos
or
rorl
out
and
push
neg
in
enter
div
sub
in
jo
sub
imul
and
xchg
pushl
push
pop
test
or
push
or
inc
jno
ret
mov
and
imul
inc
or
popa
jge
xlat
add
cmp
dec
pop
sbb
push
jmp
in
push
sbb
inc
push
sbb
aas
sbb
mov
stos
ror
clc
popa
fldcw
dec
xor
test
insb
fwait
test
or
nop
js
and
out
mov
outsl
test
lcall
lock
ret
mov
and
pop
push
inc
cmc
adc
lock
and
clc
je
sbb
mov
cmp
lea
aad
xor
pop
and
mov
dec
cmpsb
or
ret
hlt
leave
and
sub
or
test
sbb
sbb
cmp
cmp
stc
sbb
lcall
es
fsubs
pop
fnstenv
jae
or
in
movsl
cmp
xor
cmp
out
and
out
add
test
xchg
and
dec
mov
mov
sub
xchg
jle
mov
or
mov
add
movl
scas
xchg
pop
mov
mov
gs
test
arpl
push
test
mov
das
retw
or
push
dec
call
mov
mov
mov
or
call
adc
add
mov
insb
and
iret
push
mov
cmc
gs
sub
xor
jne
or
out
xchg
mov
movl
sub
js
dec
sub
inc
adc
rcrb
je
cmpsb
push
jp
cmp
into
int3
sarb
add
cwtl
pop
cltd
add
push
dec
imul
add
push
aam
shll
jl
fnstenv
mov
sub
std
mov
ss
jge
add
sub
mov
push
cmp
bound
movsl
add
movsb
shrl
mov
or
das
xchg
xchg
mov
insb
addl
jecxz
push
push
and
or
sti
mov
hlt
sbb
dec
mov
sub
jle
mov
clc
sub
movsb
stc
sub
push
popf
clc
push
add
push
push
push
push
popa
in
cwtl
jl
jp
xor
mov
pop
cmc
add
ffreep
mov
lea
inc
jne
mov
cli
call
sub
mov
das
inc
mov
cmp
jne
rolb
pusha
ret
xchg
inc
dec
pop
and
pop
out
pop
xchg
push
and
add
and
push
dec
inc
push
dec
dec
xor
sbb
mov
adc
insb
loope
pop
repz
imul
dec
jmp
and
prefetch
xchg
add
or
test
add
cmpb
cmp
lret
dec
fbld
jmp
push
inc
cwtl
imul
pushf
orl
hlt
adc
xchg
pushf
clc
push
test
jg
add
jo
pop
add
xchg
cld
mov
lods
fnstsw
mov
mov
mov
mov
mov
jle
cmp
js
add
xor
cmp
jbe
pop
adc
xchg
cmpb
dec
and
inc
movsb
sbb
jnp
adc
add
jne
dec
sbb
adc
xchg
pop
mov
cmp
insb
mov
xor
sub
ja
pop
adc
roll
dec
mov
add
lds
add
add
push
sub
or
pop
or
enter
pusha
mov
data16
rolb
xor
add
mov
jae
add
add
aaa
push
pop
xor
int3
je
jg
push
popa
pushf
test
sbb
pop
jo
cmp
scas
stos
imul
push
cmp
jb
cmp
cli
jbe
cmp
or
or
push
xchg
inc
jne
cmp
clc
jo
or
jnp
add
xor
mov
pinsrw
push
push
subl
mov
sbb
loop
inc
add
lea
dec
mov
fidivl
and
jg
addl
mov
outsl
mov
push
out
ss
dec
cmpl
push
xor
and
xor
stos
rolb
adcl
push
adc
clc
es
jg
push
push
mov
movsb
or
icebp
xchg
rolb
fadds
xchg
and
push
fcom
mov
adc
mov
pop
lods
adc
mov
cmp
sar
adc
pop
inc
jmp
and
dec
movsb
adc
push
jge
test
movsb
adcb
add
push
icebp
jl
sub
ss
hlt
jae
in
out
dec
xchg
add
movsl
pop
push
pop
shl
rorb
jmp
cmp
pop
js
shlb
adc
roll
or
pop
int3
je
mov
int3
pop
push
mov
xchg
lcall
loopne
jmp
test
notb
insl
je
jp
adc
jnp
mov
add
aaa
test
xchg
dec
imul
push
or
jbe
cmp
push
cmp
je
sbb
or
jge
jno
xchg
mov
pop
ss
xchg
pushf
popf
jnp
inc
mov
and
pusha
ret
inc
cwtl
xor
les
dec
pop
pop
or
mov
mov
cmp
mov
cmp
sbb
jbe
mov
in
pop
mov
or
mov
mov
push
mov
jmp
in
ror
sbb
out
push
fistpll
add
fchs
jmp
test
insb
andb
push
loopne
or
mov
push
mov
test
int
cmc
and
lret
lcall
fldcw
fs
mov
repz
xor
xorl
adc
dec
test
out
mov
mov
adc
mov
push
imul
jg
jle
add
cmpw
sbb
cmpb
mov
rclb
add
mov
add
ss
push
pop
mov
add
shll
je
push
je
cmpb
xchg
mov
js
jbe
adc
pop
jns
inc
fs
andl
rcl
int
add
pushf
enter
inc
insb
mov
jne
add
cmovl
sub
and
add
jmp
mov
sub
dec
movzwl
cmpl
push
adc
rorl
and
movsb
mov
stos
pusha
mov
cmp
aas
cwtl
add
sbb
lret
jmp
sbb
add
xchg
and
fcmovu
xchg
xor
adc
mov
jae
shll
jp
mov
bound
ss
cmp
mov
cmp
push
jp
mov
ss
inc
xchg
adc
mov
lcall
xor
mov
cmp
jne
or
add
push
cmc
ret
shl
cld
lods
add
cltd
dec
pop
and
repnz
xchg
dec
xor
pusha
pop
xor
add
in
xor
push
jle
and
leave
mov
or
js
and
in
lret
push
and
movsb
pop
push
dec
leave
addl
xor
pop
js
xor
inc
pop
push
xor
rclb
jo
adc
sub
ja
or
push
andb
insl
xchg
mov
sbb
stos
xchg
xor
and
adc
lcall
nop
inc
inc
pop
lock
andb
outsb
adc
ss
rol
ds
sub
push
test
mov
aad
mov
push
or
and
pop
inc
iret
mov
or
pop
cmpsb
xchg
pmulhuw
in
add
mov
pop
imul
sub
sbb
inc
bound
mov
xchg
mov
sub
test
ret
es
and
mov
sub
lahf
mov
sti
rclb
stc
gs
data16
dec
and
push
sbb
dec
call
test
push
jns
jne
add
pop
add
pop
inc
add
add
fisubrl
adc
sbb
daa
orb
jns
testl
je
or
jl
fs
mov
arpl
test
hlt
pop
call
mov
in
fdiv
movsl
jo
cmc
loope
push
and
lret
mov
sub
int
jl
and
bsf
hlt
pop
inc
lea
push
xor
add
mov
and
mov
jo
sub
dec
pop
jne
test
mov
nop
push
sub
mov
insb
adc
loopne
outsb
divb
and
test
inc
hlt
int
push
aaa
add
mov
pop
inc
dec
mov
sub
jnp
dec
test
push
frstor
pop
or
decl
jns
shll
push
std
cmc
aaa
mov
sbb
fcomps
sub
imul
sahf
add
icebp
dec
lods
sub
les
cmc
mov
mov
stc
xor
nop
iret
aad
adc
and
cli
pop
test
xchg
dec
jne
xor
test
adc
lahf
in
imul
push
cltd
popf
jecxz
aam
jae
pop
inc
sub
jmp
push
or
lret
and
add
enter
mov
inc
bound
shlb
sub
xchg
adc
xor
push
inc
ja
xchg
and
xor
jmp
push
jb
and
push
das
pop
push
xor
testl
pop
inc
push
xchg
cmp
loope
dec
or
test
ljmp
pop
in
push
ljmp
dec
xor
mov
inc
mov
fisubs
push
js
mov
test
popf
jp
dec
xchg
xor
test
mov
cwtl
xchg
xor
call
add
add
mov
mov
sub
enter
add
dec
repnz
adc
xor
daa
lods
inc
mov
cmp
sbb
xchg
lcall
mov
dec
push
add
sub
push
mov
clc
loope
pop
push
or
popa
enter
sbb
dec
inc
movsb
fisttpl
sub
outsl
rcrb
push
add
mov
mov
inc
add
in
inc
dec
inc
and
sahf
jne
jae
aaa
repz
cld
jne
push
call
sbb
xor
sub
or
mov
mov
and
mov
rcll
loop
fisttpll
xchg
push
test
pop
dec
push
lcall
push
lcall
or
push
sbbb
outsl
cmp
jae
call
adc
lock
and
or
adc
sbb
adc
jmp
or
xchg
xchg
mov
rorb
inc
pop
cmp
and
or
pop
or
faddp
xchg
sbb
adc
mov
rolb
push
clc
std
cmpsl
mov
repnz
call
cwtl
movsl
inc
mov
sub
movsb
out
adc
loopne
jge
xchg
inc
outsl
dec
adc
or
dec
shr
inc
enter
xchg
scas
mov
push
movsl
cmp
and
cmpsl
movsl
rolb
cmpb
pop
arpl
lahf
xchg
or
fadds
sbb
or
es
stos
int3
orl
push
sbb
jnp
cmp
or
jle
call
push
jmp
add
js
or
inc
imul
js
test
inc
sub
ja
push
xchg
or
jl
and
cmp
inc
or
or
and
daa
cmp
repnz
clc
push
xor
sbb
pop
cmp
sub
mov
dec
jae
cmpsb
cld
hlt
xor
loop
and
xor
mov
adc
adc
pop
xchg
mov
xor
les
push
filds
lcall
lods
test
inc
lret
mov
popf
mov
or
or
inc
and
lods
and
pop
or
adc
lods
mov
lods
cmp
jmp
push
jg
lods
cmp
inc
cmp
xorl
lret
mov
pop
and
mov
add
adc
in
sbb
inc
ds
push
sub
cld
sub
decl
jmp
xor
testl
outsb
in
decl
nop
xor
and
jmp
cmp
jne
xor
or
call
sbb
jmp
ss
cmpsl
pusha
jp
rcrb
sbb
sub
cmp
je
lcall
call
seto
neg
or
add
mov
push
loope
repz
mov
mov
loop
xchg
aas
jbe
add
inc
js
lock
shl
push
sbb
lods
shll
stc
or
clc
push
rorb
sub
sti
jne
push
xchg
addl
das
add
push
xor
je
into
jne
push
push
adc
jmp
xchg
pop
cmpsb
fisubrl
btr
ret
mov
cmp
adc
ja
in
lcall
data16
push
pop
or
xor
es
outsl
loop
mov
lret
je
mov
imull
and
and
lods
mov
pushf
es
sbb
push
push
int3
and
inc
ljmp
dec
mov
or
jp
dec
mov
les
xor
jne
dec
ja
es
ss
add
xchg
and
out
lods
dec
and
roll
rorb
jecxz
hlt
dec
mov
push
sub
ret
mov
xor
sub
dec
jns
mov
mov
ds
mov
dec
into
pushf
inc
lods
pop
test
ror
add
pop
decl
and
es
test
incl
pusha
rorb
dec
or
mov
orl
push
insl
or
aas
sbbb
pushf
subl
mov
cli
repnz
sbb
lods
out
mov
lea
and
add
cli
mov
dec
cwtl
sbb
adc
into
repnz
push
les
mov
add
insb
andl
adc
add
sbbb
add
or
flds
fcomp
adc
and
adc
hlt
fisttpl
push
sbb
jae
xchg
and
jno
pop
mov
inc
pop
daa
aam
ret
or
mov
dec
loop
add
dec
notb
jo
clc
or
adc
clc
xchg
mov
ret
roll
popa
xor
sbb
sub
xchg
push
sbb
push
insl
lahf
push
xchg
add
stos
inc
test
or
in
sub
push
inc
xor
push
aad
push
add
adc
lds
and
mov
sbb
mov
cmp
mov
sub
sub
sub
outsb
test
mov
xchg
addl
inc
xor
sub
mov
adc
testl
or
pop
inc
lock
sbbl
or
or
xor
or
mov
popa
mov
push
mov
scas
pusha
and
pushf
sarl
add
mov
and
mov
cld
pushf
lds
add
out
das
in
lret
mov
push
or
xor
or
sbb
fisttpll
adc
add
and
adc
insl
mov
orl
add
xor
adc
mov
cmpsl
add
sbb
ja
arpl
push
rorl
test
add
loop
scas
xor
clc
inc
mov
and
and
scas
cmp
inc
cmc
or
xchg
xor
add
sahf
inc
push
inc
negb
push
adc
dec
cwtl
push
pop
add
jg
dec
add
push
or
cmp
dec
adc
xor
mov
jb
insl
pusha
adc
push
fildl
popa
mov
popa
addr16
pop
adc
mov
je
addr16
lds
mov
ds
outsb
and
sbb
lret
inc
mov
cmp
jecxz
adc
stos
test
xlat
sbb
mov
adc
xor
xchg
sub
movsb
sbb
sarb
aaa
sub
jecxz
or
adc
pop
mov
push
aad
inc
jmp
mov
cmp
leave
sarb
repz
dec
jmp
mov
test
sbb
lahf
les
adc
xchg
and
pop
sti
sub
andl
sbb
sbb
lret
and
fdivs
pop
fwait
mov
add
adcb
adc
lock
insb
lret
and
fimuls
and
push
push
dec
pop
xor
push
and
sbb
xchg
movsb
inc
sub
push
es
pop
cmp
mov
aad
sbb
add
xchg
fists
mov
icebp
mov
dec
pop
sub
mov
in
repz
or
andb
push
mov
sub
fst
cltd
sub
inc
pop
xlat
mov
fldl
add
addr16
dec
loopne
shrb
rol
mov
aas
adc
loope
pop
jge
scas
je
sbb
adcb
push
hlt
clc
add
jb
test
xchg
xor
or
push
les
sar
pop
ss
jl
outsl
add
mov
push
dec
lret
xchg
cmpb
and
ret
xchg
mov
add
sub
jecxz
or
xchg
ficoms
add
es
std
mov
mov
enter
das
sbb
daa
push
sbb
nop
dec
push
and
les
and
cld
add
add
mov
or
mov
sahf
mov
bound
adc
jae
cmpsl
adc
aam
xor
ret
mov
or
mov
cld
pusha
cmp
add
push
scas
adc
dec
dec
mov
sub
inc
mov
sbb
or
or
xor
andb
dec
cld
adc
hlt
adc
mov
mov
pop
adc
nop
lcall
addr16
add
push
pop
das
out
and
xchg
outsl
aaa
inc
adc
push
sbb
mov
pop
test
pop
dec
push
inc
jp
fcmovu
cmp
fsts
and
test
leave
inc
push
push
or
mov
inc
jno
cmp
or
fs
jecxz
lcall
lock
lods
add
popa
call
add
cmp
fstpl
or
data16
shr
push
pop
inc
loope
jo
adc
adc
rol
decl
sbb
roll
lock
mov
movsb
cmpsl
push
sbb
mov
pop
inc
sbb
test
sbb
sub
shlb
sub
shrb
push
cmp
mov
subb
xor
daa
jne
fisubl
adc
daa
movhps
or
mov
loopne
cmp
add
cmp
divb
ja
es
loop
cmpsl
add
dec
mov
xor
nop
bound
imul
and
add
mov
push
push
mov
sub
sbb
push
movsl
imul
and
fnsave
out
enter
push
xor
jmp
adc
cmp
popf
or
and
loopne
enter
mov
add
cmpsb
mov
and
into
pop
jle
cmp
add
mov
clc
push
icebp
inc
pop
and
daa
sbb
jl
or
insl
mov
repnz
adc
push
adc
andl
push
outsb
inc
clc
mov
mov
push
mov
scas
push
pop
adc
xchg
pop
pop
mov
adc
and
ret
and
push
inc
ss
pop
xlat
rol
xchg
pushf
pop
add
adc
scas
add
sbb
sbb
adc
loopne
popa
les
scas
jae
pop
pop
push
pop
nop
dec
cmpb
ret
mov
mov
jae
inc
ds
stos
mov
adc
sub
pop
popa
sbb
xor
sbb
subb
adc
push
out
pop
jb
in
add
sbb
push
add
push
mov
push
adc
fcompl
xchg
andl
jb
orl
movsb
add
adc
fimuls
xchg
scas
adc
add
push
push
mov
es
outsb
xlat
jge
mov
or
xor
bound
inc
icebp
sub
pusha
xchg
sbb
push
mov
sbb
adc
fimull
dec
ds
fsts
dec
jno
gs
sbb
hlt
dec
add
pop
push
pop
rolb
inc
scas
inc
outsl
es
ds
push
cmp
sbb
aaa
mov
sbb
push
xchg
add
mov
sub
ljmp
xor
mov
aaa
jbe
or
es
mov
jns
dec
inc
jle
loope
jge
mov
test
dec
sbb
sahf
xchg
int
push
pop
cwtl
dec
cmp
inc
push
jl
add
ja
xadd
loopne
rorl
test
xor
insl
sbb
in
cmp
push
loope
mov
sbb
pop
lock
movsb
push
or
addb
and
pop
add
mov
adc
pop
push
cmp
lea
or
sbb
test
je
test
push
or
cmp
mov
shr
pop
mov
add
clc
pop
sub
and
rcll
mov
sbbb
jge
fistpll
cli
add
mov
hlt
outsb
sub
adc
out
add
dec
cmp
mov
into
fstpl
repz
push
lds
jae
xchg
push
insl
mov
or
imul
scas
hlt
lods
nop
sarb
push
and
push
dec
mov
jne
xchg
rcrl
jmp
sahf
push
mov
and
sbb
nop
out
adc
call
inc
adc
xor
dec
call
or
leave
push
and
sti
add
ret
xchg
add
xor
movl
cltd
ljmp
pop
js
mov
dec
xor
inc
pop
pusha
stos
add
adc
sbb
pop
aam
stos
cmp
add
xor
push
sbb
cmp
xchg
mov
test
sub
pop
or
popa
xchg
or
cltd
das
ljmp
jne
lock
push
mov
add
push
adc
mov
idivl
push
adc
dec
push
adc
insl
and
xlat
cmp
in
add
clc
adc
and
dec
dec
or
adc
dec
inc
adc
jb
xor
or
sbb
sub
sbb
pusha
sbb
sub
mov
inc
sbb
lea
movsl
mov
rcrb
push
mov
push
lcall
pshufw
adc
fnsave
pop
and
out
cs
sub
mov
js
pop
pop
sbb
mov
xorb
or
push
pop
adc
data16
out
and
push
mov
cmp
lock
mov
out
or
or
sub
test
pop
into
push
and
add
lods
and
xor
pushf
xchg
cmc
pop
adc
adc
jl
addr16
xchg
inc
bsr
or
or
inc
push
mov
stc
jne
das
fsubrs
sub
xchg
aas
push
add
inc
sbb
xor
or
push
jg
push
and
sub
fadds
and
pop
pop
pop
adc
or
mov
hlt
sub
nop
jne
mov
int
scas
add
sub
cmp
je
push
sbb
cmc
push
daa
popa
adc
ret
xorb
bound
inc
add
sti
fsubrs
mov
add
insl
push
aam
or
xchg
or
pop
mov
push
sbb
add
push
pop
push
push
jb
and
or
adc
and
push
pushf
and
lret
fstps
jecxz
rol
xor
fildll
mov
mov
jns
addr16
push
les
mov
push
xchg
mov
mov
cmpsl
mov
mov
sbb
mov
je
push
or
sbb
inc
jge
or
adcb
and
pop
xor
jo
lods
cmc
inc
call
push
mov
add
mov
call
mov
call
nop
mov
leave
xor
add
mov
cmp
test
sub
mov
jg
push
in
pop
xor
iret
push
sub
lea
push
push
js
stc
mov
dec
inc
inc
inc
and
inc
adc
push
loopne
push
and
popa
add
hlt
jb
push
sub
adc
jno
push
jae
mov
dec
pop
test
das
ret
sub
flds
sbb
cmpsb
popa
loopne
fcoml
dec
aam
adc
inc
push
lock
or
mov
adc
push
fisubs
or
arpl
mov
rorl
pop
and
sub
jne
pop
fstpl
xor
ljmp
push
imul
loopne
push
ficompl
rolb
fbld
pop
or
xchg
mov
mov
lds
js
xor
add
cmpsb
sub
mov
das
bound
imul
inc
icebp
call
aas
xchg
cwtl
adc
pop
add
push
jns
repnz
in
adc
mov
loope
xlat
inc
enter
loope
or
mov
test
clc
lock
pop
subl
leave
pop
lahf
and
shrl
push
adc
cmp
jb
and
sbbl
test
scas
movsl
and
lret
movl
adc
sbbb
aas
int3
cwtl
mov
cmc
adc
out
and
aaa
lods
mov
add
and
cmp
and
sub
fidivl
push
or
inc
pop
adc
imul
in
cmp
iret
sbbl
mov
imulb
mov
push
inc
dec
je
movsl
push
loop
xchg
push
cltd
lcall
sub
sbbb
outsl
sub
cld
push
mov
mov
stos
add
loop
mov
lea
lea
fisttpll
sub
mov
pop
nop
adc
inc
loopne
lea
fsubs
pushf
mov
mov
stos
imul
adc
push
mov
inc
test
into
mov
es
mov
scas
and
mov
cmpl
push
jmp
test
fld
sbbb
cmp
jl
lahf
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
inc
add
add
inc
jmp
test
daa
inc
push
movw
fwait
pop
inc
xchg
and
pop
addr16
push
pop
iret
clc
iret
mov
cltd
pop
idiv
lock
dec
int3
sbb
xbegin
test
inc
mov
pop
pusha
and
jnp
testb
sbb
faddl
cmp
add
sbb
push
hlt
fists
mov
mov
dec
mov
ret
mov
mov
dec
and
xor
sub
jae
insl
lods
cmpsl
test
and
movsl
or
adc
and
adc
or
mov
and
cmp
add
daa
int
test
sbb
lock
aaa
in
repnz
push
or
nop
mov
nop
sub
rol
inc
adc
nop
stos
mov
iret
cmp
and
xchg
xlat
jno
pop
pop
popf
adc
mov
inc
or
fcompl
pop
jmp
and
repz
mov
aam
xor
xor
movsb
or
and
sub
add
jle
rcll
enter
nop
pop
insl
or
addb
inc
adc
xorb
je
pop
jl
outsl
lock
and
adc
mov
add
push
data16
movsb
lods
fcomps
push
sub
inc
enter
mov
mov
or
cmp
sbb
call
sub
or
pop
lcall
pop
nop
or
mov
xor
enter
insl
add
adc
cmp
push
push
add
and
inc
loopne
pop
cmp
inc
sub
xchg
mov
or
and
sbb
sbb
mov
test
mov
pusha
cmpsl
sbb
inc
xchg
inc
fwait
in
shl
aas
inc
inc
and
add
xchg
or
pop
push
adc
mov
or
outsb
and
cmp
leave
adc
push
lock
pop
adcl
ljmp
movsb
cmc
adc
adc
adc
sbb
push
fsubrl
jo
push
test
adc
or
mov
cmp
add
inc
add
popf
adc
sbb
add
xor
adc
leave
dec
cs
adc
adc
orb
sbb
int3
pop
add
hlt
xchg
jmp
push
inc
add
or
nop
xchg
sbb
push
lock
mov
inc
cwtl
sub
addl
inc
in
push
and
inc
jecxz
xor
xchg
lret
gs
lret
and
push
loope
and
mov
popl
pop
xor
mov
ret
cs
jo
and
cwtl
sbb
les
mov
sti
push
sbb
addl
dec
add
pushf
icebp
or
and
ret
add
aaa
in
pop
aaa
jl
and
lea
add
pop
mov
xor
push
leave
jmp
xor
and
test
pop
loop
aas
nop
mov
pop
xor
add
cmpsl
in
movsl
pop
add
fldcw
lds
add
sbb
adc
pop
dec
aaa
adc
mov
ljmp
enter
fiadds
or
inc
adc
adc
icebp
nop
mov
xchg
lods
clc
into
bound
ret
mov
adc
mov
out
mov
lret
insl
cmpb
sub
xor
mov
into
or
ret
pop
cmpsb
sbb
ljmp
and
enter
add
rolb
cltd
or
std
inc
fs
mov
addr16
in
add
aam
add
push
stos
imul
push
mov
imul
rolb
pop
sbb
gs
addr16
jl
notb
stos
cmp
jne
outsb
pop
jbe
stc
lea
rol
popa
subb
pushf
xchg
mov
sbb
or
push
lods
push
add
xlat
jo
loopne
hlt
pop
fildl
fildl
add
push
mov
rorb
xchg
jae
mov
dec
sbb
repnz
add
jb
pop
add
push
add
mov
dec
or
dec
push
shrl
jg
mov
pop
xchg
adc
mov
sub
lods
popa
pushl
push
imul
lods
add
aad
shrb
fimull
xchg
add
mov
mov
hlt
jno
inc
add
rorb
fildl
loopne
inc
or
jo
ret
dec
sar
cmp
je
cmp
jle
push
pop
fbstp
aam
shl
add
sbb
adc
adc
pushl
dec
loop
jnp
cmp
fwait
jle
adc
dec
cmp
pop
sub
jne
fcomps
push
insl
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
add
pop
push
mov
popa
negl
adc
sub
mov
outsb
add
sub
xchg
incl
je
jo
fcompl
fnstsw
test
lock
out
inc
je
sbb
lock
fimull
add
dec
pop
jp
sbb
inc
mov
sbb
and
or
into
fstpl
add
addr16
fistpll
jl
js
pop
or
clc
out
fstpt
xchg
add
int3
and
loope
fsubrp
jb
imul
or
lcall
lock
sarb
pusha
test
imulb
fs
scas
mov
inc
mov
inc
sbb
repz
xchg
vpmacswd
add
jo
cmpsl
rcrl
movsb
popf
je
mov
inc
jo
jns
stc
jge
imul
insl
insl
bound
pop
dec
inc
xchg
or
xchg
js
pop
add
aad
dec
fs
stc
bt
sub
jle
movl
shrl
ret
ja
jo
shl
push
mov
mov
and
popl
divl
ret
adc
sbb
andl
popf
inc
pop
clc
jmp
and
mov
mov
mov
lods
or
add
mov
inc
jae
xor
clc
fwait
add
mov
jo
lock
jb
stos
xor
shld
add
jecxz
sbb
lea
push
push
sub
icebp
cmp
mov
push
push
je
jmp
rorl
clc
or
andps
adc
mov
push
adc
push
push
sbb
mov
popf
cmp
or
or
cli
test
pop
sbb
push
inc
inc
mov
insb
add
pop
pop
ret
jne
enter
insl
sub
mov
push
rcrb
sub
dec
jl
and
shlb
mov
and
testb
push
and
rcrl
adc
push
jl
inc
push
xor
xor
addb
pop
sarb
dec
inc
cmpw
jne
cmc
out
insl
test
and
cmp
mov
mov
push
jge
mov
inc
sbb
lea
cmp
or
pop
add
cmp
out
data16
movsb
imul
jo
fabs
out
jmp
push
sets
dec
inc
aad
adc
push
mov
ret
movsb
lahf
rcrb
insl
in
in
push
cwtl
inc
sbb
aas
inc
es
arpl
inc
push
ds
inc
sbb
pop
mov
adc
add
jne
ret
push
jle
add
push
cmp
addb
or
mov
iret
jnp
jne
cli
hlt
inc
lods
dec
add
dec
pusha
cltd
xchg
add
lea
cmpsl
push
pop
or
movsl
mov
inc
add
jae
dec
or
ret
repz
data16
loopne
mov
ret
pop
sub
scas
mov
rcrl
jb
pop
outsb
inc
stos
push
leave
adc
rcll
jo
jae
shrb
imul
jae
movsb
std
mov
fadds
lock
xchg
xor
sub
cltd
cltd
mov
add
push
test
add
mov
insl
and
pop
sbb
adc
mov
into
aam
gs
rclb
sub
lret
xchg
xor
adc
lock
xchg
gs
or
xchg
lret
insb
adc
hlt
push
dec
leave
lds
in
adc
adc
sbbb
nop
add
pop
je
in
push
addr16
xor
stc
push
pop
ret
pop
lods
and
enter
sbbb
shlb
ds
push
push
pusha
and
or
fst
stos
test
xchg
popa
jo
cli
jno,pt
xor
xor
add
aaa
pop
pop
pop
int
push
test
sub
rol
xchg
add
repz
lret
jno
cli
sti
pop
das
or
mov
ret
push
or
push
adc
inc
insb
testl
fsubrs
ljmp
push
xchg
les
fcmovb
xchg
cmpsb
add
movl
or
adc
mov
lcall
into
mov
inc
push
or
outsb
push
push
sbb
lock
call
popf
push
mov
les
sbb
adc
mov
dec
xchg
aaa
adc
or
inc
pop
add
jne
je
add
mov
and
andl
ja
test
ja
cmpsb
mov
cmp
xchg
dec
xchg
dec
ja
and
inc
insb
jno
jge
xlat
jne
push
add
xor
and
xor
or
adc
jg
je
or
cmpsb
std
fisttpl
ss
je
add
sbb
dec
ja
dec
ljmp
jmp
or
xchg
or
xchg
jmp
or
fadds
insl
push
decb
mov
out
mov
out
sub
jge
or
jmp
or
jmp
ja
ja
add
scas
jge
jmp
or
cwtl
jmp
pop
push
add
out
add
divl
movsl
mov
jns
hlt
push
sbb
inc
push
cmp
dec
or
push
cmp
nop
push
je
mov
loopne
or
enter
cwtl
int3
out
mov
fcoml
push
jbe
out
nop
pop
mov
cld
dec
and
nop
inc
push
cmp
inc
push
cmp
fdiv
xchg
enter
fs
jb
and
and
in
inc
push
push
jo
nop
inc
push
cmp
sbb
push
or
lahf
push
push
test
xchg
adcb
push
and
sbb
repz
cmp
push
movsb
scas
mov
repz
loopne
hlt
jns
out
push
or
sbb
push
out
sahf
out
outsb
js
sahf
out
sahf
mov
jns
out
enter
lock
out
push
add
sbb
leave
repz
sub
inc
dec
pop
xchg
cs
push
scas
push
jg
nop
jp
insb
stos
jo
or
push
inc
fnstsw
push
add
mov
inc
imul
jle
test
fcompl
dec
sub
adc
sbb
sub
or
shll
xchg
enter
ja
lock
or
test
push
lahf
pusha
sar
mov
jmp
jl
mov
lcall
mov
inc
mov
push
enter
xchg
daa
add
out
fcompl
psraw
jmp
pminsw
faddl
push
mov
jmp
lods
pop
fsubl
dec
push
into
mov
jecxz
shll
jae
sbb
mov
mov
pushl
gs
adc
and
mov
pop
and
rolb
or
add
popf
xchg
pusha
in
pop
stc
mov
xchg
dec
mov
divl
cmpb
jge
loope
jb
push
cmp
fwait
rclb
shl
mov
inc
shlb
add
xchg
out
xchg
cli
inc
flds
jo
push
cmpsl
add
lods
jl
adc
or
mov
shlb
xchg
ljmp
rcr
pop
jp
fwait
sbb
gs
or
mov
and
or
mov
mov
pop
dec
fmul
movsb
jne
leave
test
sub
adc
xor
or
mov
and
sbb
sub
std
jp
stos
push
ds
inc
fmull
xor
inc
mov
adc
push
add
jecxz
in
add
test
pop
sub
outsl
nop
mov
pop
cmp
hlt
mov
xor
and
mov
daa
or
xorl
imul
rcll
jge
xchg
loopne
movhps
add
xlat
xchg
enter
push
stc
sbb
adc
mov
add
out
mov
out
sbb
call
cmp
pop
nop
mov
test
movsb
aaa
fstpt
jle
push
dec
mov
pop
rcrl
lds
push
dec
add
mov
push
mov
sub
das
xor
sarb
in
icebp
push
in
mov
push
mov
xor
stos
mov
mov
xor
in
ss
shll
stos
mov
pop
mov
ss
jnp
das
jle
negb
push
pop
dec
or
adc
sub
xor
sub
enter
and
xor
cmp
cwtl
imul
icebp
xor
and
and
mov
fcompl
movsb
mov
movsb
mov
sub
mov
sub
sub
imul
int3
in
xor
adc
ja
ss
mov
popf
mov
gs
jl
sbb
stos
mov
test
jno
aad
xchg
aaa
lret
xchg
ja
or
mov
xlat
in
psubsb
add
pop
sbb
cmp
push
fisttpll
xchg
xchg
pop
push
mov
mov
mov
js
cs
ret
in
nop
jns
xchg
add
test
jae
add
mov
mov
mov
sbb
imul
gs
add
int3
and
pop
add
inc
xor
sbb
or
mov
mov
imul
rorb
pop
and
and
sbb
mov
popf
pushf
pop
push
or
es
xchg
adc
or
or
inc
jmp
add
add
mov
fists
push
mov
cmp
mov
jns
cmp
inc
jo
or
inc
movsl
out
pop
cwtl
xchg
inc
out
sbb
mov
cld
test
cmp
rorl
dec
roll
aad
int3
xchg
adc
and
cmp
lock
and
jp
ds
pop
movsb
pop
xlat
push
aaa
aas
pop
test
mov
and
dec
push
out
aas
jbe
and
adc
cmp
adc
aaa
fucom
lret
jo
mov
nop
mov
es
push
adc
daa
cmp
das
add
inc
lcall
mov
cmp
mov
popa
sub
add
addr16
pop
lea
jecxz
adc
jnp
jno
and
mov
inc
shlb
pop
mov
or
and
popa
dec
adc
inc
adc
mov
sub
adc
sbb
sub
ljmp
daa
stos
mov
bound
icebp
cmpsl
mov
popf
pop
dec
shlb
rcl
int
dec
dec
add
mov
and
push
push
xor
jns
xchg
xor
pusha
into
adc
jle
push
mov
cmp
push
xchg
or
enterw
fidivrs
mov
push
pushf
add
dec
pop
add
xchg
adc
xor
inc
cmp
pushf
addl
and
les
or
shlb
jecxz
push
arpl
adc
lcall
xchg
fnstenv
sahf
push
insl
mov
enter
add
sbb
pop
cmp
xchg
daa
ror
ret
je
sbb
sub
js
scas
xchg
rorb
or
orb
xlat
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
push
add
push
adc
inc
cmp
aad
jl
add
popa
mov
inc
es
rclb
sarb
movsl
jns
fisubl
enter
adc
dec
mov
mov
add
xchg
cwtl
pop
shlb
push
push
je
test
stos
aam
sbb
movsb
imul
sbb
jl
dec
movsl
cltd
sbb
and
ret
push
pop
pop
popf
ret
mov
lock
sub
dec
and
jno
test
test
imul
je
or
movsb
ss
xor
inc
testl
inc
sbb
inc
dec
cli
xchg
mov
daa
jmp
rorb
sbb
test
xchg
mov
orl
movb
mov
cmp
lcall
or
nop
inc
pop
pusha
push
cld
and
mov
xchg
in
in
sbb
leave
and
cmp
dec
pushl
sarb
or
xor
xor
aam
mov
push
jmp
addl
jno
es
inc
leave
mov
fdivs
push
push
aam
inc
movsl
xchg
add
addb
adc
pusha
aad
scas
cltd
add
adc
dec
sbb
faddl
loopne
clc
add
mov
push
and
dec
data16
pop
add
call
jns
aaa
push
mov
rcrb
xchg
loopne
insl
test
push
add
or
stos
or
inc
add
push
movsb
or
incl
mov
je
push
das
outsl
mov
inc
clc
gs
inc
fisttps
cmp
add
je
leave
call
jae
ret
adc
addl
jb
ret
leave
in
ret
adc
adc
jbe
movsl
sarb
ret
pop
cmp
inc
stos
pushl
mov
cmc
cmpl
fists
jne
nop
pop
icebp
xor
nop
lods
mov
mov
repnz
js
arpl
rclb
cmp
mov
imul
shlb
push
insb
xchg
push
dec
scas
push
push
inc
test
push
mov
and
inc
int3
cmp
call
pop
push
xchg
and
shlb
in
mov
add
adc
push
mov
mov
cs
or
mov
xor
lods
push
sub
xchg
push
sub
arpl
push
dec
mov
lcall
sahf
add
test
add
rol
mov
ret
ja
popa
xchg
scas
push
cmp
sub
push
rcrb
push
cld
and
dec
add
sbb
daa
mov
jbe
add
jb
mov
and
and
jno
adc
andl
enter
xchg
push
sbbl
sbbl
sbbl
mov
adcb
xchg
adc
adc
sub
add
push
loopne,pn
mov
add
in
scas
jmp
fcoml
push
sbb
or
mov
scas
push
push
sub
sbb
leave
aam
lar
into
cs
and
xor
insl
movsb
jmp
nop
out
flds
jns
lea
mov
ret
add
sub
mov
clc
cmp
mov
lea
popf
push
and
or
cld
arpl
pop
push
cmp
inc
push
jo
lock
dec
cmp
inc
or
test
lds
or
test
jo
dec
push
xor
movsb
and
lea
test
mov
sbb
sub
in
pop
testb
and
jmp
and
adc
sub
test
aam
push
mov
into
or
mov
sti
pop
jl
aad
mov
xor
xor
pop
push
leave
jl
add
test
js
cmp
and
sbb
cmp
cmp
and
or
push
push
clc
xchg
add
pop
sbb
lret
mov
jb
mov
insl
test
lahf
lcall
push
orl
test
and
aaa
movsl
pop
cld
xor
adc
aam
jecxz
xchg
jp
cmp
ficoml
cmp
jbe
mov
testl
mov
jb
xchg
inc
add
add
add
mov
inc
push
push
hlt
subl
or
or
iret
jne
pop
div
and
fiadds
repz
jae
stos
add
cmpsb
inc
add
nop
cmp
cli
or
pop
push
ljmp
dec
sarl
mov
movsb
scas
sarl
and
push
xor
xorl
movsl
mov
cmp
in
adc
ds
adc
jae
jg
sbb
dec
add
xchg
xchg
or
pand
xorb
cwtl
xlat
aad
dec
or
dec
lea
mov
andb
sti
jb
adc
pop
cmpsb
xchg
pop
pop
push
into
nop
jp
test
imul
mov
movsb
in
js
in
subl
push
ret
sbb
xor
fimull
pop
jmp
push
outsl
inc
mov
inc
addr16
xchg
pop
dec
jno
sbbb
in
loop
jns
jns
popa
xchg
fcmovnb
es
orl
je
pop
add
dec
ds
or
adc
imul
xchg
mov
push
sbbb
stc
and
jg
ud0
aaa
aaa
cmp
add
and
mov
movb
movsbl
shr
ljmp
loope
mov
add
pop
dec
add
sbb
aam
jne
pop
lret
push
outsb
movsl
nop
mov
les
outsl
js,pn
pop
or
sbb
add
or
pop
dec
mov
adc
rcrb
dec
sbb
fs
notl
aam
mov
lock
imul
scas
adc
leave
mov
test
test
add
fisubrl
or
sti
pop
pusha
in
dec
out
pop
adc
xchg
arpl
and
lcall
and
je
dec
and
add
cmc
mov
push
push
mov
xchg
cmc
pop
add
xor
jmp
inc
inc
xlat
xchg
shll
mov
sbb
lods
dec
pop
adc
js
jge
dec
mov
or
test
or
enter
je
rclb
xchg
insb
inc
mov
push
in
pushf
jae
jae
and
or
jns
fadd
test
scas
mov
push
in
push
xchg
pop
push
or
lea
fyl2x
add
pop
adc
lock
movsl
dec
pushf
nop
add
push
lea
ret
pop
mov
add
mov
mov
popf
mov
sbb
fadds
mov
sbb
push
subl
hlt
es
or
scas
sahf
inc
pop
sub
clc
aam
dec
rorb
jae
pusha
pop
xchg
lods
ja
jp
push
out
fsubs
repz
loop
push
sbb
iret
or
add
pop
loopne
xor
fisttpll
inc
test
sbb
or
pop
adc
add
in
add
or
pop
iret
test
sbb
push
dec
sbb
mov
and
or
push
orb
xchg
fldl
loop
fistl
fistps
add
pushf
or
pop
call
aad
inc
xchg
push
adc
adc
fnstcw
rolb
jo
dec
fsubs
pop
cmp
aam
xchg
adc
and
popa
rorb
sub
popa
dec
ret
mov
push
hlt
push
inc
sbb
mov
imul
pop
and
jne
out
daa
sbb
push
movsl
jnp
aam
or
ljmp
enter
mov
lods
aam
push
pop
enter
int3
xchg
sub
ja
shrb
add
out
add
xchg
jmp
sub
pop
add
sub
gs
nop
sub
push
enter
pusha
gs
cmp
ret
or
cmp
jecxz
ret
pop
sbb
and
jne
shlb
pusha
push
jmp
adcb
add
movsl
adc
test
mov
mov
cmpsl
je
stos
jne
mov
mov
and
dec
pop
cmp
pop
lods
call
push
sub
imul
add
movsb
push
arpl
cmp
je
loope
xchg
mov
les
sub
fstps
adc
shl
sbb
mov
nop
mov
ret
add
push
in
or
sub
xor
jno
jecxz
in
sbb
dec
cmp
xchg
mov
andl
pop
adc
in
sbb
das
xchg
dec
fidivl
shlb
sub
push
xor
jne
je
inc
cli
cmp
pusha
mov
jp
sarb
adc
jp
hlt
add
sub
mov
xor
stos
push
or
hlt
adc
inc
push
fidivl
mov
les
popf
cmp
jnp
add
sbbl
fcmovbe
addl
push
enter
decb
lret
xor
xor
pop
adc
mov
add
sbb
mov
lea
mov
dec
mov
lods
test
lods
inc
jne
in
orb
pop
adc
xor
and
call
mov
xchg
jbe
or
dec
xchg
call
loopne
mov
test
sbb
mov
ret
imul
pop
lods
xor
lods
aas
aad
addb
fs
scas
das
je
jge
lea
inc
jne
push
bound
ret
ret
jns
outsl
das
adc
and
sahf
fsub
mov
cmp
in
cmp
test
jne
es
shrl
cmp
and
jno
xchg
shll
pop
ljmp
inc
xchg
mov
ret
lods
or
cs
dec
xor
add
xlat
jno
cmp
and
xchg
mov
cmp
cmp
push
lea
inc
jle
xor
pop
ret
push
rorb
mov
sub
imul
mov
adc
and
decl
cli
mov
jno
push
cmp
dec
and
loope
mov
out
jle
test
adc
pop
add
stos
fldl
mov
mov
sbb
notb
icebp
and
cmp
mov
pop
mov
mov
inc
add
mov
jl
jle
pop
push
clc
adc
popf
js
addl
push
push
push
loopne
outsb
addb
fldl
clc
mov
inc
sbb
hlt
cmp
adc
jne
sahf
lahf
ja
daa
bnd
adc
hlt
jne
or
loope
jle
jne
or
push
mov
sub
int
cwtl
push
push
pop
js
pop
pop
cmp
cli
adc
or
mov
ds
inc
dec
xchg
lret
cmp
inc
pop
xor
push
jl
mov
lea
repnz
lea
les
jno
sti
lea
ds
sub
je
out
add
aaa
cmp
inc
push
pop
aam
ret
jnp
nop
out
add
clc
sbb
lahf
mov
add
xchg
inc
mov
sbb
or
xlat
or
jmp
cmp
push
shll
out
lret
fldcw
clc
adc
ds
or
pop
out
addr16
jne
fstl
dec
pop
insb
pop
mov
neg
loopne
shl
lea
lods
sbb
jb
adc
mov
add
test
cli
pop
xor
fsubrl
jnp
inc
ret
jne
push
ss
mov
xchg
xor
inc
loopne
nop
sbbl
push
xchg
xor
jno
insl
mov
test
dec
inc
mov
jmp
orl
incl
pusha
sbb
mov
xchg
test
mov
add
jb
fs
push
jns
and
jne
inc
into
xor
xor
mov
dec
ficoml
mov
add
fwait
mov
mov
mov
fisubs
movsl
pop
dec
jne
pop
lret
inc
xor
test
fnstcw
dec
rclb
mov
insl
jmp
insb
jae
adc
loopne
or
fsubr
push
add
or
rorb
int3
or
inc
je
push
into
inc
or
fcoml
sub
pop
inc
sub
inc
cmpsb
cmp
sbb
scas
or
dec
and
and
mov
sbb
fwait
fs
je
pop
push
or
pop
mov
push
mov
sbb
popa
int
fadd
test
loopne
or
insb
xchg
stos
int
push
pushl
push
and
adc
mov
ret
add
rcrl
pop
movsb
loope
stc
mov
sbb
jge
pushf
xorb
in
cmc
imul
orl
xlat
or
jle
or
xorl
and
sbb
lcall
or
push
xchg
icebp
jae
loop
sbb
sbb
xchg
inc
inc
dec
mov
jmp
mov
mov
movsb
push
test
push
pop
dec
push
xchg
sbb
xor
dec
xor
pop
nop
mov
pop
xor
xor
pop
adc
in
or
adc
mov
les
inc
adc
and
cmp
adc
and
jbe
lds
es
sub
in
sub
pop
daa
pop
pop
xor
push
sbb
sbb
dec
es
xor
nop
lahf
inc
inc
xor
sub
cmp
jne
dec
in
inc
mov
and
add
adc
jmp
mov
test
xlat
and
lret
sbb
sbb
xchg
xor
lds
dec
xlat
shlb
cmpsb
aaa
lret
or
add
pop
push
movsb
push
mov
jae
add
push
sub
and
xchg
dec
pop
loopne
pop
arpl
push
cmpsb
push
xlat
pusha
jno
adc
mov
insb
and
movb
xorl
ret
mov
jl
mov
xor
xchg
xchg
adc
nop
xorb
mov
sub
xor
or
xchg
pop
mov
js
adcl
jae
cs
sub
je
push
xchg
inc
fstpl
add
aam
inc
sbb
cmpsb
add
push
faddl
sti
xchg
sbb
orb
xor
lock
sbb
adc
out
adcb
outsb
jbe
test
mov
mov
add
lret
ret
rorb
sub
jbe
jne
loopne
cli
daa
loopne
xor
mov
push
jbe
pushl
push
add
xor
les
and
jmp
call
je
mov
imul
jno
dec
scas
in
call
cwtl
add
nop
sbb
add
rorb
mov
or
and
in
or
popf
mov
xor
jge
push
push
mov
push
sbb
add
lcall
inc
std
xor
push
or
fld
mov
loopne
js
sbb
pop
sbb
add
or
mov
adc
mov
ficoml
adc
test
jl
push
mov
shl
insl
push
pusha
xor
or
cmc
clts
insl
dec
add
sub
xchg
inc
xchg
pusha
xorl
sbb
fadd
loopne
movsb
mov
mov
addr16
push
jmpw
fsts
xchg
xor
aaa
pop
loopne
movsl
je
cs
dec
rclb
ror
push
jne
pop
stos
mov
inc
fsubs
sub
notl
push
sub
test
incl
bound
aas
sub
stos
cld
or
and
sbb
mov
mov
iret
push
je
jnp
loopne
sarb
xor
jmp
sbb
xchg
push
lret
mov
dec
ret
daa
fsubl
and
repz
movsl
push
pop
movsl
lods
ss
mov
sbb
sti
add
pop
rcrb
cli
and
mov
rcr
jo
add
js
cld
xchg
inc
pop
pop
push
mov
or
cmp
mov
sbb
jle
xor
jns
shrb
mov
dec
mov
shlb
popa
adc
rcrb
inc
push
xor
xchg
push
inc
mov
insb
and
lret
cltd
loope
ret
lea
push
in
lds
cli
loop
sbb
call
jmp
push
add
inc
out
je
mov
push
call
adc
fisubrl
sub
out
les
fdivrl
lret
add
popl
add
or
pusha
test
sub
xchg
adc
lods
lahf
repz
cmpb
sbb
pop
and
adc
pop
je
jg
test
pusha
push
sbb
and
or
jo
pop
cmpsb
lcall
dec
pop
push
hlt
sub
or
push
addl
shrl
add
add
cmc
dec
pusha
inc
imul
test
push
aam
or
in
sbb
inc
add
mov
sbb
inc
addl
or
rol
ret
addb
mov
adcl
pop
push
aas
lret
mov
pop
nop
mov
hlt
aas
mov
in
add
cmp
pop
or
adc
jb
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jb
rolb
sbb
test
and
sete
cmpsb
mov
jle
scas
sub
iret
and
ds
push
add
pop
cmp
jne
jae
movsbl
sbb
inc
lcall
sbb
or
dec
call
cmp
jbe
pop
jmp
inc
lcall
enter
ret
incl
mov
add
or
jecxz
or
add
inc
cmp
mov
jge
js
and
lcall
ret
add
into
scas
push
stos
int3
or
clc
xor
outsl
jnp
pop
ss
cmp
jecxz
sbb
push
jg
addr16
jne
enter
adc
or
or
fs
or
pop
pop
sahf
adc
mov
test
sbb
adc
add
lods
dec
mov
in
pop
inc
add
test
jo
shld
ret
data16
push
pop
inc
adc
roll
sub
cwtl
idivb
push
arpl
insl
push
cmp
jl
in
inc
xchg
jle
insb
aas
mov
mov
sub
cli
js
sar
adc
add
dec
jne
and
add
aas
arpl
push
mov
mov
aam
repnz
cmp
int
add
clc
dec
loop
or
cltd
adc
push
xchg
pop
jmp
xor
inc
popl
pop
pop
shlb
lcall
dec
and
stos
in
mov
addr16
enter
cmpsl
loopne
xor
add
add
jp
sub
int
add
mov
xor
jae
pop
xor
add
sub
mov
mov
repnz
xor
js
sub
outsb
dec
insl
gs
or
add
nop
je
add
jns
das
dec
mov
pop
inc
shrb
or
hlt
and
and
out
test
cld
faddp
shrb
push
push
xchg
ret
fwait
out
fcomps
pop
pop
enter
in
add
cmp
and
add
and
in
push
pop
cmp
cmc
and
xchg
pop
add
fs
pop
push
add
sarb
dec
mov
xchg
arpl
sbb
pop
jle
js
idivb
mov
adc
call
cwtl
pop
ss
jns
loopne
inc
cmp
push
xchg
popf
in
mov
cmp
xor
pop
mov
repz
imul
enter
and
pop
xchg
lea
pop
push
in
or
lret
jl
dec
ret
shrl
adc
mov
iret
jbe
dec
push
push
xchg
mov
sub
cmp
xchg
sti
mov
sub
mov
cmpsb
fbstp
add
fimuls
and
ftst
pop
dec
leave
rcl
jbe
cmp
movl
push
cltd
insl
aad
mov
test
popf
aas
sub
test
push
sbbb
call
dec
add
sbb
push
lahf
je
call
shl
mov
test
mov
pop
lcall
pop
das
xchg
xchg
mov
lret
je
dec
dec
add
dec
adc
les
test
sub
repnz
dec
addr16
insl
adc
dec
cs
mov
xchg
imul
jno
and
test
aam
rorb
inc
mov
cmc
jo
jne
bound
or
push
jmp
and
push
sti
push
cs
rclb
xlat
push
cli
lcall
mov
or
mov
adc
add
adc
pushf
mov
cmp
int3
add
loop
loop
mov
sbb
or
sti
lcall
clc
cmp
rcrl
shr
add
mov
je
dec
fdiv
xorb
adc
dec
mov
ret
push
rcrl
and
mov
movsl
add
inc
push
fcmovb
push
sahf
xchg
sahf
and
movsb
or
ja
mov
xchg
dec
or
or
cmp
jle
lds
out
push
jnp
in
hlt
xchg
and
mov
sarb
add
push
cwtl
loopne
andl
push
out
shl
mov
in
push
push
jbe
je
sbb
cmp
push
arpl
daa
movsbl
shl
call
test
mov
add
mov
push
mov
loopne
jg
sub
dec
out
test
sbb
dec
les
fmul
movb
pop
gs
inc
loope
or
rolb
add
sbb
shlb
cmp
add
mov
inc
mov
leave
dec
push
roll
fwait
pop
ss
js
movsb
push
push
call
stc
mov
and
jne
add
call
icebp
pusha
std
lock
sbbl
xorl
test
cmpsb
or
iret
add
call
les
pushf
daa
or
add
add
or
push
sbb
mov
mov
ds
pop
mov
stos
lods
dec
lock
lcall
test
xchg
jle
int
mov
mov
clc
lock
test
pop
mov
loope
xchg
pop
adc
adc
das
stos
and
std
lock
sbb
inc
cmp
and
xchg
pop
push
dec
mov
xor
adc
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cmc
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
adc
lea
fwait
jb
pop
or
into
sub
daa
pop
adc
push
sbb
mov
insb
pop
in
ds
push
jb
add
fs
or
mov
das
add
add
iret
jbe
add
in
or
xchg
dec
sub
in
push
push
xor
mov
pop
pop
sub
xchg
scas
fstl
insl
and
mov
inc
sahf
mov
and
fcmovb
cmp
push
enter
xchg
std
and
ja
pushf
data16
dec
call
add
xlat
mov
jno
inc
lods
popa
imul
imul
rorl
xor
mov
inc
xor
ds
in
lods
inc
xor
and
adc
push
inc
mov
add
pop
jno
rorl
xchg
sbb
and
je
inc
pusha
clc
sbb
push
adc
inc
mov
clc
jp
je
in
mov
mov
dec
adc
cmpb
add
sbb
dec
add
jp
dec
xor
ja
adc
cwtl
shrb
mov
stc
sub
ss
lea
cmp
jbe
cmp
jbe
mov
sbb
adc
sub
jle
add
repz
in
popa
mov
mov
xor
sbb
jbe
sub
add
lds
xchg
and
dec
xor
pop
jb
stos
test
fistpl
test
add
inc
icebp
cmp
ret
iret
push
adc
aaa
pop
aad
daa
push
fldcw
pop
popa
and
push
call
push
push
push
cmp
mov
jmp
push
mov
or
cli
inc
out
xchg
pop
xchg
into
je
ret
and
enter
push
popf
sbb
fsts
cwtl
test
mov
jae
inc
jmp
jnp
jnp
shr
js
scas
bound
js
cli
mov
sti
lea
insl
cmp
push
xchg
imul
add
cmpsl
dec
ss
mov
adc
jb
cmpsb
mov
adc
sbb
in
mov
into
das
dec
and
ja
int
and
loope
xor
test
fsubr
jmp
lock
sti
add
iret
xor
xchg
movsl
sub
cmp
add
add
push
dec
xchg
pop
adc
pop
add
jbe
xor
adc
in
adc
ror
xchg
rclb
adc
pusha
pop
sbb
add
icebp
lods
add
nop
adc
fisubl
stos
sub
or
mov
xlat
or
mov
jecxz
ficomps
mov
pop
sub
loopne
shrl
test
cmc
into
push
leave
push
int3
iret
subb
scas
mov
or
jle
push
pop
push
pop
xor
popa
or
or
push
mov
fstl
and
faddl
popf
mov
add
and
push
test
adc
cmpsb
cld
mov
loopne
mov
and
test
mov
loope
mov
push
rolb
xchg
clc
stos
jle
add
sub
mov
or
aas
push
aam
pop
and
push
add
cmp
push
stc
dec
adc
ss
pushf
and
add
pop
nop
push
lea
mov
je
inc
das
or
sbb
mov
jge
fsubs
mov
addr16
or
maxps
adc
int3
mov
push
test
and
mov
inc
cld
adc
dec
mov
sbb
fwait
movl
aas
dec
pop
or
xchg
add
jbe
jmp
inc
sbb
dec
lods
ss
add
js
pop
fdivl
add
inc
add
leave
push
insb
testb
in
or
sub
add
cmpsl
mov
out
cmp
adc
fiaddl
xchg
add
in
pop
pop
rcr
adc
loope
adc
popf
ja
cmpb
or
mov
add
jae
test
rclb
dec
lea
pop
pop
aam
nop
lock
sbb
jmp
adc
gs
sbb
je
daa
add
mov
jb
mov
clc
ds
aad
pop
jmp
push
mov
or
adc
and
dec
mov
adc
call
xchg
loopne
add
iret
xor
pop
push
je
lret
rolb
mov
pop
in
sub
jne
jne
ljmp
lea
imul
loopne
les
push
call
jp
mov
cmp
jbe
fbld
sub
cmp
pop
push
sbb
movsb
dec
sub
mov
adc
or
inc
mov
add
or
cmp
jg
lcall
jmp
cmp
jne
mov
push
cmp
adc
add
iret
loopne
pop
mov
fadds
leave
xchg
jmp
mov
cld
jne
cmpsl
fldenv
call
mull
jmp
or
scas
fwait
push
popa
push
push
adc
mov
call
cmp
sbb
jne
and
in
add
pusha
or
xor
pushf
jg
pop
test
sub
test
mov
aaa
add
add
cmp
cmp
jae
sub
or
add
icebp
mov
dec
jbe
inc
push
mov
aas
popa
bound
int
popa
dec
pop
cmpsl
lods
in
mov
loopne
dec
pop
incl
stos
or
nop
dec
or
or
and
pop
jmp
rcrl
test
cmp
dec
xchg
pop
or
pusha
jl
in
sbb
mov
jl
xchg
adc
mov
dec
sub
add
add
add
shlb
dec
sub
daa
repz
xor
xchg
es
xchg
and
pop
cwtl
sub
shrb
mov
pop
fildll
fdivrs
and
push
cmp
or
mov
icebp
into
adc
and
sub
dec
push
and
dec
insb
or
movsb
fcomp
dec
inc
xchg
adcb
pop
ret
test
mov
les
sbb
aas
push
xchg
or
add
add
loope
or
or
mov
pop
aaa
xchg
adc
andb
ret
dec
subl
sbb
cmpsb
dec
xor
rcll
nop
cmpsl
pop
adc
add
xchg
pusha
enter
and
xchg
pop
and
push
jle
or
ret
lods
mov
ret
cmp
or
sub
arpl
or
mov
add
or
test
daa
add
sbbb
stos
adcb
sub
loop
lods
jne
pop
and
sub
dec
aad
inc
pop
inc
push
push
imul
aam
sub
xor
jmp
loopne
adc
jge
jne
or
and
jnp
scas
xchg
pop
adc
cmpsb
push
push
sub
xorl
inc
mov
adc
test
inc
mov
nop
jo
in
mov
add
sbb
or
fcomps
sarl
adc
jb
mov
mov
stos
xchg
aam
fcompl
dec
jnp
jl
lret
bound
aam
dec
sub
ret
ret
test
mov
rcrb
and
in
ret
fisubs
fcom
inc
outsb
popa
xchg
addb
jne
test
outsb
mov
mov
ja
shlb
gs
mov
or
mov
add
mov
or
xchg
or
push
sbbb
lahf
inc
popf
or
or
int3
ret
inc
orl
push
cmp
or
sbb
sarl
adc
stc
pushl
push
or
or
mov
test
lods
sbb
add
fsubrl
and
jmp
jbe
fsubrl
loopne
mov
jmp
pop
add
stos
call
cltd
xor
fiadds
xor
cmp
jl
ss
mov
cwtl
add
faddl
outsb
mov
lea
iret
xchg
dec
adc
dec
nop
lock
mov
push
dec
mov
push
stos
call
push
adc
sub
movsl
sbb
or
adc
shl
inc
push
rcl
sub
push
fbstp
jb
cmp
inc
mov
dec
sahf
jbe
inc
inc
aaa
popa
xor
ret
loop
mov
in
push
mov
add
push
sbb
ficompl
clc
push
je
loopne
mov
push
push
pop
push
inc
adc
or
jecxz
inc
pop
dec
dec
dec
sbb
icebp
add
mov
jmp
aaa
in
xor
mov
dec
filds
or
mov
cmp
addr16
je
cmp
jne
clc
push
cmp
mov
sbb
add
pop
dec
lea
sahf
negl
or
mov
dec
xor
push
daa
in
mov
sub
inc
adc
je
testl
test
sbb
cld
cmp
jbe
jg
loope
push
lea
loope
cmp
je
adcl
inc
jmp
inc
and
pop
cmp
ficomps
inc
mov
pop
jno
add
or
pop
cwtl
inc
jo
clc
mov
cmp
out
jne
je
aam
mov
or
jb
push
loopne
add
inc
jmp
loop
or
int
xor
xchg
sub
mov
loop
cld
inc
xchg
cmp
add
mov
cmp
outsb
hlt
cmpb
bound
pop
cli
push
inc
rcrb
clc
je
xchg
stos
sbb
jb
inc
fnsave
sbb
ja
js
sub
dec
inc
push
mov
es
pushf
movsb
push
nop
out
jmp
push
cmp
push
sarb
xor
mov
mov
outsb
aas
inc
or
loopne
jne
ss
jno
pop
in
push
pushl
cmp
mov
mov
or
je
inc
add
jae
fneni(8087
and
sarb
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
and
test
data16
adc
fs
jne
xor
and
lock
sub
push
mov
or
push
ss
adc
cmp
xor
sub
fs
pusha
or
sti
insb
push
call
xchg
or
or
js
int3
push
adc
lret
int3
inc
jg
or
jge
fcompl
jle
es
sub
rcr
outsb
fildll
and
pop
or
jl
or
adc
fisttps
adc
jbe
lea
sbb
cmp
jbe
push
hlt
pop
arpl
and
sbbb
je,pn
test
jne
pop
bound
add
std
sub
jb
sahf
ret
clc
add
mov
xor
adc
movb
inc
xor
xchg
call
xchg
push
mov
pop
sarb
add
mov
add
and
push
dec
dec
add
mov
or
loopne
add
daa
call
and
inc
imul
cmp
lock
inc
ss
rcll
jae
push
mov
adc
popa
add
jo
hlt
mov
mov
mov
xchg
mov
push
push
mov
jnp
xchg
dec
test
inc
ret
adc
or
js
dec
push
inc
daa
inc
repnz
jne
adc
cwtl
xor
xchg
pop
das
loopne
inc
sahf
mov
push
push
push
imul
pause
ret
test
xchg
mov
pop
arpl
ss
mov
jg
sahf
fistpll
in
cmp
mov
mov
test
sbb
mov
inc
int
addr16
dec
and
int
pushf
mov
push
adcl
and
add
orl
shlb
and
popf
out
and
or
jne
and
mov
sbb
cmpsb
mov
cmp
sbb
fs
roll
xchg
cmp
sub
mov
push
andl
sub
push
or
pop
cltd
aaa
jp
sbb
mov
hlt
or
adc
cmp
roll
pop
imul
push
pop
push
jno
sbb
xchg
mov
push
adc
cld
jmp
pop
mov
xor
push
lahf
inc
orb
mov
push
insb
cli
fucomip
adc
incb
push
mov
mov
add
int3
add
add
xor
cmp
or
dec
mov
aas
sbbl
push
popf
int
cmpl
outsl
rorb
xchg
outsb
je
pushl
cmp
orb
mov
and
jnp
outsb
fsubr
jae
pop
push
xor
insb
lods
cmpl
mov
cmp
pop
ljmp
dec
lea
xor
cmp
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
cld
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
decl
cmp
xchg
or
inc
push
fdivrs
shl
or
push
sar
gs
lea
sbb
jo
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
aas
mov
pop
add
les
pop
xchg
jns
xor
outsb
shrb
adc
inc
or
pusha
lds
jb
push
mov
dec
gs
lret
adc
roll
pop
sarl
adcl
mov
mov
jge
cmp
xchg
ffree
jmp
and
xor
push
roll
ljmp
sbb
repnz
or
stos
and
push
push
push
clc
dec
cmp
in
es
popf
test
lahf
cmpsl
inc
pop
xchg
addl
addb
xchg
xchg
add
push
pop
dec
sti
popa
push
inc
movsl
es
lea
or
jg
inc
loope
push
fsubrs
fstpl
pusha
dec
leave
xor
pop
or
jb
push
mov
fsubrs
xor
push
jp
adc
add
cmc
daa
iret
lods
mov
and
cmp
movb
sbbl
cmp
xor
mov
xchg
push
cltd
ficomps
dec
clc
dec
add
add
sbb
push
or
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
xor
rcr
fwait
jo
add
lret
test
and
jne
sub
xor
cwtl
jb
jge
adc
add
movl
add
js
scas
into
cmpl
movsb
fidivl
sbb
in
andl
testl
testl
sub
or
andb
rolb
xchg
push
bound
and
push
cmp
mov
add
push
and
or
insl
pusha
jne
adc
push
pop
lahf
inc
adc
cmp
mov
pop
sahf
mov
pop
add
mov
push
xchg
sbb
cli
test
mov
jmp
cmp
adc
sub
dec
sbb
adc
mov
test
and
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
or
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
dec
xor
in
xor
push
xchg
cmp
fbstp
jmp
sbb
sub
xor
call
mov
mov
or
inc
hlt
andl
lea
cmp
jo
fldl
add
je
in
lock
in
sub
add
je
sti
push
fs
jmp
div
in
fdivrs
outsb
jmp
pusha
mov
jae
scas
mov
out
sub
and
sbb
xor
pusha
mov
adc
mov
sub
decb
adc
cmpl
andb
adc
addl
adcl
sbb
push
or
fs
cmp
scas
or
inc
faddl
ja
decb
or
or
fwait
ret
push
xchg
jle
push
push
ret
lahf
pcmpeqb
push
mov
cmp
std
push
mov
lcall
xor
repz
movsl
aas
xchg
or
add
inc
arpl
or
mov
test
xchg
sub
pop
add
push
jno
in
xor
push
push
pop
cs
lret
push
pop
pop
pop
pop
mov
pusha
or
call
sbb
pop
sub
popaw
xchg
jae
sub
push
add
add
dec
rcll
ljmp
push
les
mov
push
sti
mov
dec
push
sub
sub
outsb
and
push
aas
das
push
push
rcll
lret
mov
sbb
inc
sbb
adc
pop
or
sbb
xor
adc
ror
adc
lret
mov
sbb
popa
mov
les
je
insb
or
cs
jne
mov
jmp
xor
es
rorl
lock
sbb
ljmp
ficomps
popf
sbb
inc
push
dec
cli
mov
sub
pop
jmp
shr
mov
rcl
aam
je
into
or
pop
mov
jmp
mov
test
xchg
cwtl
xor
push
or
call
cld
mov
lods
test
adc
pop
mov
mov
or
push
xor
sti
es
sti
fcoml
or
dec
rcll
pop
push
mov
mov
xchg
mov
mov
sub
inc
dec
inc
fdivs
mov
mov
sbb
mov
lock
or
ljmp
lret
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
xor
jo
adc
frstor
sbb
mov
jne
cmp
je
push
pop
mov
mov
inc
push
and
add
sbb
pop
push
pop
js
add
sub
sbb
fs
adc
fildl
rcrb
into
sbb
jbe
push
adc
shlb
jne
sub
js
mov
add
adc
call
lcall
insl
jnp
mov
cmp
jne
or
shl
fs
or
fstpt
shrb
dec
jnp
adc
sbb
sbb
mov
je
or
adc
add
cmp
sub
js
bound
xorl
incl
mov
repnz
or
adc
jge
lea
hlt
sub
sbb
xlat
adc
jo
mov
jge
fucom
hlt
sub
inc
loopne
sti
scas
hlt
cmpsl
xchg
test
cltd
mov
jecxz
in
je
divb
call
lea
dec
jle
or
push
inc
add
loopne
add
cmp
jmp
jmp
jmp
inc
dec
mov
push
mov
int
xchg
rorl
inc
hlt
mov
mov
lock
lock
hlt
or
fisubs
test
mov
movsb
jg
outsl
add
add
mov
sbbb
add
push
rcl
pop
int
push
pusha
enter
jb
and
lds
and
scas
daa
cmp
jecxz
mov
push
mov
nop
mov
lock
outsl
mov
and
add
xorb
jnp
push
push
popa
shlb
add
jmp
ja
push
out
movsl
orl
int
and
xlat
mov
xchg
addr16
mov
adc
sbb
push
test
mov
das
je
push
and
add
push
test
dec
add
shr
enter
xchg
push
cmpb
js
gs
jns
mov
push
sub
lock
jnp
ficoml
pop
mov
sub
movsl
lret
or
and
or
sbb
sbb
mov
mov
leave
in
cmp
fsub
imul
push
pop
sbb
outsl
or
sub
repnz
pop
push
test
pusha
es
inc
jo
mov
je
adc
bound
adc
xchg
mov
int3
test
mov
arpl
clc
jmp
sub
test
inc
adc
das
jmp
sub
sbb
or
xchg
add
imul
out
adc
or
and
add
loopne
push
jmp
mov
icebp
add
clc
and
xchg
adc
add
inc
pop
push
dec
or
bound
lods
dec
mov
jmp
or
dec
jne
loopne
add
add
push
jl
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
lods
inc
test
cltd
lock
dec
imul
int3
movsl
sbb
lret
rolb
xor
in
enter
xor
push
fstps
and
loopne
icebp
xchg
xor
push
icebp
push
jae
sub
sub
and
rolb
fisubs
adc
or
cltd
sbb
push
movsb
xchg
jmp
in
pop
pushf
fsubrp
or
mov
nop
mov
push
fistps
push
mov
daa
inc
mov
adc
jl
jmp
pop
insb
fsubrs
inc
mov
xor
jp
sbb
add
add
in
movsb
xchg
mov
testl
jmp
notb
mov
xor
ficompl
lret
into
jne
lret
test
push
loopne
push
shl
ds
aad
jg
xor
lea
ds
mov
pushf
les
jge
and
lods
cmpsb
adc
ds
rep
xor
jbe
clc
int3
add
aam
subb
lock
or
pusha
aaa
loop
jo
add
clc
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
lods
or
jmp
push
mov
cmp
add
imul
or
movsb
cmp
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
push
ret
dec
sbb
push
sbb
push
jp
pop
nop
in
push
out
fs
jne
mov
lret
dec
adc
mov
xor
out
cmp
sbb
jecxz
inc
inc
mov
ss
push
fmull
std
inc
inc
aad
subb
in
fsubp
xchg
xlat
mov
sbb
or
or
popa
pop
leave
sub
jg
inc
clc
pop
mov
cmp
push
das
loope
fstps
or
fs
add
add
ja
into
add
ljmp
adc
push
fstpt
inc
push
mov
add
add
dec
cmp
repnz
xor
xchg
into
xchg
mov
xor
popa
pop
adc
jge
pusha
shll
or
mov
test
dec
nop
push
add
push
ds
repnz
push
push
loopne
out
mov
fnsave
test
fidivl
adc
adc
iret
in
or
and
pop
sarl
iret
add
addr16
jl
push
repz
inc
cmp
add
inc
loop
aas
and
sub
or
subl
inc
addr16
in
aas
sbb
sarb
iret
mov
mov
jge
xor
mov
mov
js
mov
dec
loopne
xchg
dec
out
mov
xor
cmp
or
cmp
push
push
push
adc
sub
scas
inc
jle
enter
lea
jns
xor
in
or
mov
sub
or
jle
adc
or
data16
mov
out
mov
xchg
hlt
imul
test
fsubrs
dec
popf
add
inc
popa
lods
daa
jmp
jo
jp
aad
add
jb
sub
xchg
pop
loopne
popa
jle
push
jnp
lock
xlat
das
sub
add
jl
push
sub
add
fdivl
dec
subl
push
xchg
test
or
sub
dec
adc
pop
stos
lcall
or
test
add
sub
pusha
popa
adc
pop
test
js
ljmp
adc
ja
push
and
xlat
mov
push
pop
sbb
ss
sbb
sbb
outsl
pop
mov
inc
dec
cmp
loopne
and
pop
movl
cmp
outsb
pop
mov
add
or
iret
push
adc
enter
mov
xor
cmp
and
or
xor
movsb
nop
or
add
push
add
sbb
or
addr16
ljmp
arpl
add
cmp
inc
xor
add
dec
jnp
loope
dec
jns
cltd
rcrl
push
jno
loope
push
mov
mov
pop
xor
imul
daa
mov
mov
fnstcw
sub
sub
jmp
push
ret
push
sub
push
rorl
or
or
mov
and
mov
lock
shlb
outsb
icebp
cmp
sbb
dec
push
daa
divb
dec
scas
outsl
ss
push
push
inc
pop
mov
and
xor
mov
xchg
stos
sbb
xor
or
xchg
out
movsl
adcl
rcrl
sbb
sub
jge
jge
leave
or
add
jl
rorb
movl
or
sbb
popf
mov
and
push
cld
mov
inc
push
and
lea
subl
dec
jnp
popl
daa
inc
cmp
xchg
add
sbb
push
and
inc
sbb
mov
push
out
add
xchg
mov
or
fistpl
mov
xor
cs
and
lcall
divb
outsb
push
jae
inc
mov
jp
clc
out
into
xor
clc
cmp
mov
and
and
sub
or
fmull
cli
xchg
or
ret
fsts
jo
sub
lcall
sbb
jecxz
inc
into
sub
das
pop
dec
cmp
call
mov
test
test
pop
adc
or
and
sahf
push
mov
cmp
xchg
nop
jbe
sbb
mulb
dec
cld
jge
push
sub
lcall
pop
and
call
pop
adc
insl
push
jne
jnp
shlb
in
push
adc
subl
cli
dec
js
sbb
adc
push
in
sbb
and
dec
fcompl
mov
mov
sbb
mov
add
or
sbbl
push
jnp
nop
jmp
jge
adc
pop
sbb
arpl
add
aaa
bound
xchg
push
or
adc
addb
xor
jns
loopne
nop
call
cwtl
repz
ja
xchg
push
mov
xor
mov
add
adc
js
xor
and
in
mov
pop
push
mov
cli
das
push
in
mov
cmpl
jne
adc
arpl
ljmp
dec
test
movsb
cmp
pop
cwtl
cmpsl
lea
mov
pushf
xor
mov
fs
inc
lods
add
jno
cwtl
dec
lods
or
inc
mov
xor
pop
popf
lea
push
push
test
push
xor
xor
mov
xchg
cmp
jge
mov
push
sbb
fs
add
mov
push
sub
movlhps
repnz
sub
movsl
pop
or
out
insl
lock
or
pop
jmp
adc
push
sub
fcoms
xor
imul
out
in
mov
push
sub
xchg
lcall
cmp
fcoml
sbb
fcoms
inc
arpl
int
and
hlt
jmp
inc
jbe
adc
lcall
mov
jle
pop
add
jecxz
adc
cmp
inc
loopne
sub
in
xchg
popf
xchg
pusha
fbld
sub
pop
push
nop
loopne
sub
sbb
pop
jbe,pn
fdivl
ret
mov
test
mov
dec
sbb
je
jbe
loopne
mov
jo
adc
push
pusha
push
dec
push
sbb
movsl
dec
loopne
cmp
outsb
jmp
enter
mov
cmp
pop
push
aam
jne
cmp
push
fsubr
adc
pusha
and
adc
or
cmp
xorl
inc
add
movsb
int
lahf
or
out
test
mov
sub
xor
rcrb
and
add
sub
jne
es
jmp
movsb
inc
incl
and
pop
add
hlt
fcmovnbe
ret
pushf
add
jmp
mov
inc
push
sbb
mov
push
nop
addr16
cmp
outsb
mov
push
test
dec
push
push
pop
test
dec
pop
repz
mov
daa
dec
test
adc
or
sbb
imul
in
arpl
mov
jns
lcall
orl
icebp
mov
and
fs
bound
mov
sbb
push
es
pop
mov
push
test
mov
add
add
jmp
jne
jne
popf
cmp
mov
lods
mov
pop
push
mov
and
or
sbb
cmc
shl
shll
xor
shl
mov
mov
sub
cmp
rcrb
jbe
sub
add
sahf
add
icebp
das
movsb
test
xchg
pop
or
add
fstl
ljmp
stc
push
inc
push
sarb
outsl
jne
jno
cmp
jb
jnp
mov
imul
mov
test
jbe
sub
repnz
mov
cmp
jp
mov
mov
cmp
pop
addr16
sub
pop
jmp
hlt
xchg
scas
xchg
cmp
ds
mov
and
jne
je
hlt
sub
add
pop
enter
xor
roll
add
mov
test
mov
pop
mov
adc
fcomp
popa
aaa
lcall
and
or
or
aam
or
jmp
test
js
mov
sub
sub
andl
add
adc
xor
inc
mov
or
adc
in
push
mov
dec
sbb
push
and
mov
imul
or
adc
test
adc
adc
dec
xor
sub
or
ret
or
out
test
xchg
cmc
shll
lret
add
lods
les
pushl
push
js,pt
cmc
sub
sub
mov
sbb
inc
push
cli
fs
jmp
jne
daa
cld
insb
loop
fwait
mov
mov
testl
aas
sahf
jne
les
pop
add
mov
dec
loope
push
in
sub
pushf
loope
cmp
jge,pt
mov
cld
adc
xor
xlat
arpl
in
into
inc
add
imul
popf
xchg
dec
pop
adc
repnz
dec
xchg
adc
fwait
jb
mov
adc
xchg
dec
sub
adc
adc
adc
adc
xor
and
adc
adc
mov
xchg
inc
clc
push
push
add
and
sbb
loop
cld
inc
aam
out
inc
add
bound
or
les
bound
pusha
jno
out
lods
nop
push
imul
or
inc
fisubs
xchg
adc
lret
pusha
mov
mov
loopne
add
mov
sti
pop
ljmp
jl
inc
and
out
sub
lahf
das
jmp
cmp
mov
sarl
add
cld
cmp
bound
adc
jmp
and
lahf
or
rorb
mov
out
es
addb
in
mov
mov
and
pop
pop
popl
push
xorb
iret
xor
fists
or
out
daa
mov
je
lret
mov
inc
push
add
xor
mov
or
sbb
mov
add
adc
outsb
nop
xor
addr16
xlat
popf
jle
mov
test
mov
jbe
addl
push
sti
por
inc
aad
dec
hlt
inc
inc
setl
inc
lahf
lea
sti
or
add
cltd
popf
push
mov
add
jno
add
dec
test
mov
ja
push
mov
mov
in
jb
sub
pop
mov
sub
test
cli
jnp
mov
and
mov
inc
or
xchg
xor
pop
or
adc
xor
dec
cmp
mov
dec
xorl
fstpt
push
roll
mov
fists
mov
mov
and
pop
aad
inc
xor
mov
sub
mov
push
mov
push
or
out
jmp
mov
mov
mov
test
ljmp
cmp
mov
or
pop
add
ja
push
loop
mov
pop
xchg
ljmp
xchg
add
sbb
dec
push
je
push
in
rorb
mov
adc
shrb
pusha
mov
repnz
clc
push
out
mov
cmpb
push
push
pop
sub
into
leave
ds
inc
adc
inc
and
or
nop
imul
push
jge
mov
dec
pop
inc
xor
add
out
cmpsb
filds
rorb
mov
psllw
loop
aad
inc
data16
adc
jbe
mov
jmp
aad
mov
add
and
fdiv
push
daa
inc
mulb
or
mov
pop
pop
ds
xor
xor
mov
test
mov
jae
pop
jle
pop
jbe
lock
enter
nop
jle
pop
or
dec
out
test
mov
adc
pop
sbb
xchg
xor
out
xchg
and
sbb
lds
and
aam
inc
fcoms
ljmp
rorb
adcb
lds
aaa
add
push
arpl
mov
mov
xor
insl
pusha
add
dec
lcall
mov
aaa
or
jecxz
mov
push
ret
xchg
xchg
inc
pop
roll
push
leave
inc
or
scas
add
cmpsl
popa
sarb
repnz
cmp
cmp
sbb
loopne
mov
fidivs
mov
inc
test
mov
cmp
test
repz
add
movb
push
cld
pop
test
je
push
push
mov
cmpl
push
shlb
mov
faddl
and
loope
test
addb
mov
lret
mov
and
rorl
push
lods
cmp
or
int
jmp
pop
clc
or
stos
ss
push
outsl
and
sbb
pop
inc
in
lcall
psubw
add
inc
lock
gs
sub
nop
leave
ud0
scas
dec
add
adc
rorl
add
test
imull
jne
call
push
in
inc
sbb
enter
and
mov
jne
mov
loop
icebp
pop
xchg
pop
push
shl
movsb
pop
adc
sbb
xor
test
loope
cs
pop
repnz
loope
pop
sub
ret
arpl
test
xor
std
dec
ljmp
int
mov
xchg
xchg
mov
push
movsl
je
xchg
scas
repnz
ja
mov
mov
adc
sarb
sub
lret
daa
outsb
andl
lea
fcmovb
fisubl
sti
dec
adc
cmp
rol
adc
fstpl
add
dec
shll
pushf
mov
scas
sbb
mov
pop
dec
cmp
arpl
cwtl
or
or
div
or
loop
mov
jb
inc
es
inc
dec
sub
and
arpl
or
mov
ja
push
adc
add
sub
sub
cs
lcall
pop
xorb
in
ret
cmp
jne
adc
cmpsb
mov
adc
mov
ss
mov
sti
sub
lret
in
int3
fucomp
into
jo
js
xchg
push
pop
pop
jbe
call
add
lock
mov
add
push
jecxz
inc
xchg
fwait
add
inc
leave
add
pusha
bound
shll
push
add
add
add
add
daa
ficoms
leave
inc
ja
out
lods
popa
inc
push
inc
popa
xchg
adcb
add
sbb
iret
add
imul
dec
sbb
pop
xchg
pop
xor
add
or
adc
or
pop
ja
adc
fcmovne
xchg
mov
repnz
sub
xchg
enter
pusha
nop
fdivr
mov
repz
pusha
xor
sbb
dec
je
dec
minps
push
in
loopne
jmp
jno
and
jb
cmp
cld
inc
rcrb
inc
in
mov
jg
jbe
add
into
jae
lea
jmp
cmpl
lea
cmp
jbe
mov
inc
loop
cld
clc
sbb
and
xchg
mov
jp
rorb
dec
into
add
test
in
imul
pop
sbb
orb
std
cmp
xor
cmp
fs
add
and
mov
push
push
jne
pop
hlt
jb
and
enter
sbb
mov
or
sub
pusha
cmpsb
pop
jo
xchg
ljmp
push
test
mov
popf
mov
adc
rcr
jnp
data16
adc
outsl
push
add
xor
dec
sbb
or
addb
cmovbe
cld
sti
add
sbb
lods
add
pop
add
test
push
repnz
jmp
lods
cmp
pop
test
test
mov
lret
sub
push
in
dec
jmp
insl
mov
in
mov
and
add
js
xchg
dec
sub
cmpb
or
inc
inc
scas
inc
sti
movl
push
je
cwtl
xchg
add
jnp
shr
cmp
rcrl
mov
sbb
xchg
js
add
stc
pop
lret
push
call
or
fsubrs
xorl
jmp
adc
inc
xor
shll
sarl
imul
adc
xchg
pop
dec
out
add
add
add
adc
mov
add
mov
test
sbb
cmp
mov
cmp
pop
and
mov
jmp
and
and
cmc
mov
pop
or
adc
mov
inc
es
add
cmovb
js
adc
cmpl
inc
push
or
pushf
xor
inc
fldl
pushf
adc
test
sar
jae
push
xchg
mov
outsl
or
aaa
adc
aaa
sub
xchg
dec
test
inc
push
pop
testl
test
jb
fidivrl
adc
lahf
movsb
pop
mov
test
ja
out
inc
sub
cmp
cmp
cmp
data16
sbb
insl
pop
jo
jmp
xor
or
je
test
aad
in
push
jns
xchg
clc
jne
mov
jle
addr16
push
test
cmp
dec
or
sub
dec
addl
adc
sub
lods
dec
int
pop
or
xchg
sbb
xchg
and
hlt
hlt
cmp
xchg
stos
jns
or
inc
and
cli
xchg
and
push
mov
add
adc
jae
mov
pushf
inc
sbb
fxtract
jne
shr
sub
test
adc
add
sub
jne
mov
pusha
lods
push
mov
arpl
fadds
sub
fwait
imul
adc
lret
push
cmp
adc
inc
aam
push
in
xchg
clc
jne,pn
lahf
add
mov
jo
fsubrp
sti
cltd
jb
inc
fcomps
mov
pop
pop
adc
push
adc
sbb
fisttps
dec
push
hlt
neg
sbb
and
bnd
push
mov
push
sub
push
adc
sub
mov
in
out
add
mov
or
dec
adc
icebp
add
jne
sbb
movsb
in
jnp
sub
adc
sti
flds
into
push
test
insb
mov
in
scas
sar
dec
cmpl
and
add
cmp
jbe
or
jne
add
mov
idivl
hlt
addr16
hlt
ja
pop
ds
data16
push
fwait
or
xchg
popa
lock
jmp
pop
jl
pusha
adc
mov
jno
cld
andl
mov
adc
sbb
or
jge
pop
cwtl
sbb
push
push
or
loope
xchg
fcmovbe
jne
mov
adc
imul
jmp
and
add
mov
ja
xor
testl
js
int3
xchg
cmp
js
daa
or
xchg
or
nop
pusha
xor
dec
sbb
jmp
clc
repz
mov
and
sub
jnp
ret
jnp
lods
or
arpl
dec
ret
mov
ljmp
push
push
test
adc
cmp
test
in
mov
lea
add
adc
xor
push
adc
jl
or
jp
or
movsl
clc
push
push
rclb
loope
and
pop
ret
add
rclb
aad
and
jmp
loopne
pop
insb
xor
dec
insb
inc
sbb
popf
mov
fisttpl
cmpl
xor
push
mov
and
mov
sti
mov
cs
mov
inc
pop
cmp
ret
fnstenv
cld
adc
adc
mov
pop
fmull
jp
fwait
sbb
pushf
cld
mov
arpl
xchg
add
pop
dec
inc
and
ds
add
xchg
xchg
jne
jp
test
sub
scas
inc
cmp
fnstenv
addr16
rorb
inc
enter
lcall
jo
mov
xor
or
mov
cmp
mov
or
testb
or
add
gs
testb
movsb
aaa
cmp
add
cli
or
mov
fwait
shrb
in
je
cmp
adc
push
rcrl
imul
cs
cld
sbb
mov
push
aas
or
dec
xchg
loop
or
sbb
mov
sub
mov
std
sub
jmp
adc
sbb
lret
jb
and
mov
xor
test
sar
addr16
add
jns
adc
out
ficoml
inc
sbb
and
lea
ds
dec
push
jmp
test
sarb
daa
pop
sbb
sbb
push
leave
xor
add
add
fimuls
or
imul
into
scas
adc
arpl
sbb
std
sub
nop
jle
mov
push
movsl
jae
adc
jnp
xchg
jge
pop
pop
jge
arpl
js
dec
call
xchg
xchg
push
packsswb
test
arpl
fdivl
or
sbb
lock
scas
xor
and
jmp
imul
pop
xlat
je
sahf
jns,pt
addr16
and
push
je
pop
pop
jl
pop
adc
push
and
adc
lds
push
and
pop
mov
and
xorb
lea
adc
push
std
and
subb
mov
movsb
sbb
loopne
push
and
cmp
sbb
rcr
mov
xchg
push
or
dec
insl
je
mov
mov
inc
mov
push
cmp
mov
shl
jne
mov
xchg
cmp
aam
cmp
fcomps
add
mov
rcr
and
pushf
pusha
mov
xor
mov
int3
mov
rorb
lods
sub
or
call
adc
jge
aam
ret
jmp
lea
mov
int
mov
pop
fdivrs
jbe
jbe
cmp
push
pop
mov
pushl
cmp
in
mov
or
push
push
sbb
cmp
fisttps
ret
sarb
ret
mov
xchg
or
xchg
xor
jnp
loop
sti
jb
mov
jae
mov
mov
sub
inc
or
mov
mov
pop
lea
fistps
mov
push
test
sbb
sbb
call
pushf
xor
je
push
ficompl
xor
sub
cmp
dec
scas
mov
pushf
sbb
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
xchg
mov
jmp
in
lods
idivl
pushl
popa
pop
push
jb
and
iret
daa
xor
add
mov
out
addr16
sbb
push
mov
lods
push
dec
or
mov
ret
xor
shll
lret
cmpsb
or
aam
ret
je
stc
jae
leave
jmp
push
inc
sub
xchg
add
ds
and
mov
push
xchg
xchg
ds
push
pop
dec
insb
movsl
adc
add
mov
fisttps
mov
movsb
loope
add
push
cmpsb
pop
push
sbb
mov
mov
and
fwait
and
mov
je
mov
jo
cmc
adc
push
mov
or
adc
cmp
adc
loopne
cmc
testb
or
dec
and
dec
and
sub
inc
push
lods
adc
imul
pop
jne
and
pop
push
data16
ljmp
jle
movsl
sub
add
lea
popf
mov
ja
pop
cmpsl
ja
imul
dec
jo
mov
and
or
fdivs
adc
dec
or
push
jne
or
add
xor
push
bound
gs
xchg
adc
lahf
mov
mov
stos
add
xor
mov
push
add
mov
fsubr
push
dec
or
ds
loopne
movsl
inc
cmpl
sub
push
cmpsl
adc
pop
scas
xor
cmp
test
xor
sub
lock
data16
sub
cltd
mov
push
cmp
mov
mov
adc
mov
push
push
je
sub
cmp
jmp
and
orl
cmpsl
rcll
clc
std
incl
push
lock
fiadds
cld
fs
lock
jmp
enter
mov
pop
scas
addb
adc
or
mov
daa
bnd
mov
sbb
cmp
pop
bound
dec
ret
push
jae
lea
add
fidivs
push
sub
sbb
call
ret
push
leave
rclb
dec
shlb
and
inc
ja
xor
pop
ret
mov
or
inc
jle
lret
test
sarl
sbb
leave
jle
mov
pusha
push
fdivl
cmpb
mov
cmp
jae
inc
jmp
push
cmp
cmp
sub
adc
lea
push
js
dec
out
faddl
xchg
and
xor
movb
fldl
mov
aad
loopne
lcall
ret
sub
test
add
inc
xchg
faddp
loop
dec
jmp
loope
out
insb
divb
call
fstpl
cmc
dec
in
add
dec
rcrb
cmp
das
movsb
cmp
sub
add
mov
mov
push
jecxz
add
push
cmc
cmpsl
test
cmpsb
negb
lea
enter
xor
jo
xchg
pushf
int3
inc
mov
add
mov
ret
mov
push
aad
xor
push
inc
fistpll
add
inc
ss
cwtl
mov
adc
xchg
imul
sub
shl
fiadds
int
or
je
mov
in
jp
jge
cmp
cmp
ret
jmp
or
push
push
outsl
cld
mov
cmp
jb
inc
bound
ds
pshufw
sub
sub
hlt
mov
inc
or
add
pop
push
mov
es
stos
cmpb
aam
xchg
nop
cmp
and
sahf
dec
mov
clc
mov
sbb
std
cmc
adc
scas
imul
pop
and
into
test
push
adc
xchg
arpl
addr16
jmp
cmpsl
shlb
pop
icebp
sub
add
cwtl
lods
push
test
xchg
lock
in
or
enter
add
and
in
or
add
cs
insb
addl
add
push
mov
ror
sbb
mov
and
sbb
ds
xor
cmp
rolb
jmp
cmc
or
arpl
imul
lods
inc
addb
push
into
dec
adc
or
inc
xor
xchg
xor
jg
jmp
push
std
and
push
or
mov
pusha
fistpl
push
inc
pop
lods
lret
jle
outsb
aad
in
dec
or
or
push
das
popa
sbb
add
add
or
jns
sbb
test
sub
sti
sbb
push
inc
jb
mov
lahf
sbb
sub
jp
icebp
xorl
flds
inc
fwait
add
inc
aas
shl
mov
xchg
addl
movsl
add
testl
sbb
in
xchg
push
or
jbe
cmp
cmp
lret
jle
std
add
pop
jne
pushl
test
or
insl
dec
clc
pushf
mov
pusha
jo
adcl
insl
xchg
mov
jmp
nop
mov
pop
adc
cmp
xchg
mov
push
mov
push
loope
addb
xchg
push
adc
cmp
and
mov
xchg
xor
in
jae
loop
imul
movsl
add
cld
jb
frstor
push
adc
inc
mov
push
add
mov
ficoms
scas
add
adc
inc
sarl
adc
clc
adc
hlt
nop
dec
inc
xor
sub
adc
dec
inc
clc
mov
or
mov
adc
pop
movsb
mov
dec
dec
sub
cmp
push
mov
mov
push
scas
mov
dec
sub
mov
adc
mulb
push
pop
xor
xor
pop
sbb
in
fsubrl
mov
mov
push
lds
mov
mov
rcl
test
mov
and
push
jns
dec
lcall
les
lock
daa
dec
sbb
inc
ret
jge
inc
daa
test
cmpb
or
pop
sub
test
mov
sbb
scas
jle
jne
xchg
mov
mov
sbb
adc
cltd
or
inc
dec
sbb
das
lock
in
mov
add
mov
mov
test
or
sub
pusha
movsl
and
mov
std
fstl
adc
cmp
sub
pop
jno
ja
fimuls
cmpl
add
stos
adc
adc
push
out
mov
push
jg
add
or
jne
push
arpl
or
xor
pop
add
mov
ret
push
add
cmpsb
jno
pusha
scas
add
jae
sub
add
pop
scas
or
jns
adc
dec
iret
push
inc
pop
es
test
mov
negl
jbe
xor
or
notl
or
mov
mov
addl
loop
aaa
out
jl
and
pop
fwait
ret
or
pusha
dec
mov
fs
cmpsb
push
push
out
cmp
pop
sub
mov
rorb
jg
sbb
mov
add
xchg
cli
pop
rcr
push
xchg
or
add
xchg
movsb
push
pop
sub
ss
mov
sub
xchg
dec
dec
jnp
xchg
iret
push
cmpl
or
js
inc
dec
std
and
icebp
shll
decb
call
push
aad
xor
in
adc
js
fsubrl
arpl
xlat
push
adc
sbb
sub
rclb
fisubrs
adc
roll
sbb
xchg
and
leave
in
in
push
jecxz
sbb
xchg
inc
add
jae
jl
js
fistl
mov
and
dec
call
push
outsb
add
push
jecxz
dec
xrelease
fs
add
je
repz
popa
xchg
rcrb
pop
adc
inc
dec
pop
mov
mov
arpl
inc
and
gs
les
add
jle
mov
mov
push
or
push
dec
ret
or
sbb
les
rclb
add
jmp
es
pushf
add
push
sub
ret
xor
subl
add
push
cld
add
jge
inc
into
push
mov
lea
push
lds
stos
enter
ja
inc
or
aaa
movsl
dec
add
daa
cmc
xchg
hlt
and
adcl
add
or
dec
mov
mov
clc
sbb
repz
cmp
push
addr16
push
adc
cld
js
jae
xchg
mov
lock
sbb
xor
sbb
push
test
mov
in
add
movsb
jne
or
out
push
into
add
ljmp
cmp
mov
jo
mov
push
and
mov
popa
or
mov
cmp
les
push
jb
sarb
and
loopne
and
adcb
mov
cmp
sahf
mov
sarl
jl
cmpsb
test
es
cmp
mov
adc
mov
cmp
jecxz
pop
jl
subl
add
cmp
into
sbb
std
inc
add
gs
push
lea
outsl
push
mov
scas
mov
add
dec
and
inc
aam
int
ret
push
xor
push
xchg
xlat
and
and
push
subl
sbb
out
or
dec
add
inc
imul
clc
or
mov
dec
mov
rol
adcl
adc
and
pop
call
repnz
pop
push
cs
fsubrs
xor
loop
push
push
loop
jo
dec
push
cmp
aad
jo
hlt
inc
mov
push
int
mov
inc
fwait
mov
pop
enter
push
sub
adc
mov
push
mov
add
in
loope
rcrl
sub
dec
xor
xor
outsl
add
cmp
mov
je
sub
mov
mov
shrb
push
xor
add
and
orl
dec
ret
adc
mov
imul
pusha
pushf
mov
jb
dec
jg
aas
lea
pop
ss
cmpsb
hlt
sub
jnp
jmp
pop
adc
or
mov
shrb
push
dec
pusha
sti
orl
adc
shlb
inc
add
jmp
fnstcw
adc
test
rorl
faddl
arpl
fdivs
mov
inc
mov
xchg
pusha
test
fsubrl
inc
setb
jl
mov
fucomp
in
add
xchg
or
sbb
js
je
cwtl
js
aam
push
ja
jge,pn
or
or
dec
mov
adc
addl
sub
sbb
call
scas
jmp
xor
mov
into
and
push
inc
mov
imul
dec
push
icebp
push
jne
loopne
lret
cs
es
push
xor
xchg
in
add
xchg
mov
pushl
sub
les
sbb
pop
push
dec
push
rorl
dec
imul
daa
in
pusha
push
andl
xchg
inc
in
sbb
jnp
mov
jno
aaa
lods
pop
loope
adc
xchg
and
push
push
dec
xor
pusha
push
sub
push
mov
pop
inc
adc
sarl
jle
inc
stc
mov
setg
icebp
shrd
push
push
ror
scas
xor
pop
xchg
mov
add
les
test
out
rol
sti
xor
or
jo
sbbb
cmp
xchg
or
push
outsl
xchg
loope
jne
push
push
leave
js
jne
adc
add
jne
or
jne
rcl
jne
or
jne
jl
inc
gs
xchg
dec
mov
push
adc
out
mov
into
sbb
fists
lahf
out
xlat
xchg
cs
jmp
lea
add
outsl
pusha
add
push
or
mov
sbb
mov
insl
repnz
cld
loope
pop
inc
notb
popa
inc
add
cmp
sub
mov
movsl
lods
xchg
xchg
rorb
push
jmp
clc
ja
hlt
xor
out
inc
mov
jge
push
pop
push
jnp
and
xor
cmp
sub
mov
in
fisttpll
xlat
in
mov
mov
in
or
push
adc
fldt
inc
movsl
loopne
into
outsl
jp
or
mov
out
pop
push
sbb
into
into
cmpl
adc
fdivrs
mov
inc
xor
out
pusha
das
adc
aas
and
popl
mov
sar
pop
adc
pop
insb
xchg
mov
push
jmp
jp
js
cmp
jl
and
cmp
sbb
xchg
ficompl
dec
and
int3
repnz
and
add
and
mov
push
push
cmp
or
clc
andl
push
inc
inc
inc
pop
shrl
xchg
push
movb
push
jne
dec
add
xchg
mov
or
pop
sub
sbb
jne
add
jns
xor
push
xor
fdivs
jne
or
sbb
dec
faddl
insb
jne
data16
adc
add
pop
mov
call
jne
jmp
xor
add
imul
in
jo
pop
and
sahf
stos
or
cmp
je
or
in
push
or
adc
add
je
aam
lods
pop
or
fsubs
xchg
ss
jl
mov
lock
aas
call
into
push
inc
in
dec
clc
adc
mov
je
in
sbb
mov
mov
xor
in
xchg
lret
mov
sbb
push
arpl
pop
sbb
in
push
dec
pop
inc
icebp
cli
push
inc
cmp
fsubrs
mov
jns
outsl
shrb
dec
fadd
mov
cwtl
jo
jo
stc
cltd
pop
fadd
and
adc
rol
out
or
or
mov
mov
iret
mov
push
sbb
add
sub
ficompl
or
push
loopne
lods
sbb
jecxz
out
pop
leave
sti
push
shl
insl
adcl
sbb
leave
inc
xorl
mov
dec
add
pop
mov
or
incb
sub
cmp
pop
dec
pusha
movb
daa
pop
sub
andl
stos
sbb
pop
pusha
nop
jle
inc
add
imul
cmp
push
pusha
cmpsb
imul
add
or
cmp
sub
cmpsl
push
cmpsb
cwtl
push
sti
adc
addl
out
add
js
mov
cmpsb
gs
scas
sub
xorl
out
pop
out
cmp
add
loopne
nop
in
jle
movb
dec
fstps
xchg
cwtl
sbb
cmpsl
ret
pushl
imul
nop
add
fadds
sbb
sbb
push
fs
sub
sbb
negb
add
jp
lahf
adc
int
lahf
push
mov
and
dec
and
cmp
out
rolb
ds
pop
sbb
adc
push
mov
aam
jne
lea
mov
xchg
daa
addr16
dec
cmp
addps
adcb
testb
dec
add
test
addr16
add
mov
sbb
jge
shll
clc
xor
pusha
push
fldl
shlb
test
jne
sbb
daa
lods
sbb
cmp
push
and
leave
inc
push
jb
idivb
ret
pushl
daa
mov
sbbb
or
rolb
inc
and
and
shll
xchg
add
dec
inc
sub
and
push
xchg
jbe
pop
add
shl
ret
mov
enter
pusha
and
dec
ret
xchg
fwait
push
je
cmpsb
cmp
xor
jne
mov
aaa
fnsave
addl
jne
cmpl
and
daa
inc
dec
sbb
ja
repnz
inc
and
mov
sti
fbld
or
test
in
jmp
lsl
das
call
dec
stc
fldl
sar
iret
and
ffree
das
add
cmpsl
or
repnz
iret
in
fists
and
mov
inc
xchg
les
in
sub
fnsave
roll
xchg
stc
push
jne
mov
pop
dec
sbb
dec
jne
into
adc
data16
or
push
adc
je
xor
push
xor
dec
mov
fwait
pop
lahf
xchg
aam
arpl
cld
push
js
pop
and
dec
mov
das
push
pop
add
cmc
fldcw
or
js
loop
test
loope
invd
inc
mov
xchg
sbb
call
data16
into
dec
ja
pop
jge
inc
push
push
inc
scas
push
dec
jge
leave
or
setge
mov
push
fwait
mov
insl
cmpsl
or
cli
out
fidivrs
outsb
push
adc
xlat
xchg
cmp
pop
mov
xor
outsb
inc
push
pop
sub
cmp
mov
cmc
add
inc
or
or
xchg
mov
lret
fs
fsubl
sarb
pop
xor
lea
outsl
rcll
ja
dec
or
aad
xchg
sub
pop
dec
je
enter
repnz
push
sub
adcl
outsb
jmp
jb
sbb
lea
dec
push
int3
mov
pop
mull
bound
pushl
cmc
ds
sbb
inc
insb
mov
lock
adc
in
aas
inc
lock
mov
add
jne
or
pop
cmpsl
cmc
mov
je
push
cltd
test
fs
pusha
fs
xchg
inc
insb
insb
push
push
and
add
xor
sub
xor
xchg
push
xchg
inc
jmp
fisttpl
cmp
je
popf
add
push
add
or
push
arpl
imul
cmp
lea
push
icebp
push
insb
sbb
sti
push
sub
inc
and
jmp
push
jne
sbb
roll
or
push
insb
pop
or
jnp
and
cld
nop
in
cwtl
mov
mov
mov
dec
jmp
jecxz
push
push
popa
pusha
jl
xor
les
or
add
mov
movsl
movswl
mov
testl
mov
add
push
and
mov
fildll
adc
sub
sub
xor
cmp
xor
jne
aad
or
clc
flds
pop
sbb
mov
test
or
dec
scas
xor
bound
mov
and
faddl
loop
test
pop
mov
sbb
lret
and
and
pushf
mov
push
jne
adcb
cmp
mov
mov
mov
jns
in
insb
mov
push
test
popa
push
pop
fwait
jecxz
jecxz
mov
es
jmp
test
test
dec
add
jge
pop
mov
je
fcomi
add
jmp
sbbl
fistl
or
fs
cwtl
fidivrs
aad
sub
sub
sbbb
cwtl
jge
je
sbb
add
or
xor
push
and
push
fisttpl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
dec
ss
or
sbb
mov
pop
data16
fsubrl
pop
fcoms
cmp
les
out
lds
adc
pop
popa
add
mov
in
rclb
or
sub
clc
pop
arpl
mov
push
imul
ret
sbb
aaa
adc
dec
jb
or
test
and
push
das
rorb
loop
cmp
add
roll
les
add
xchg
loopne
sub
ret
cmp
arpl
fdivs
dec
in
cmpb
inc
notl
jge
pop
cmp
loopne
sbb
inc
addb
mov
add
leave
jbe
and
mov
xor
dec
cli
xchg
adc
or
addb
mov
or
pop
out
cmp
dec
pusha
xor
add
jno
call
dec
inc
inc
popa
push
mov
pushf
loop
sub
out
shlb
push
adc
xor
xor
ficoml
and
lock
xor
fcmovu
test
and
push
sbb
sub
ret
pusha
out
xchg
dec
js
lcall
push
mov
dec
mov
cmp
push
mov
push
adc
fiadds
mov
mov
cmpl
pop
aam
roll
mov
fmuls
lcall
les
dec
cmpl
pop
add
fmull
pop
xor
pop
sub
xor
xor
cmp
push
lcall
lret
fwait
xor
pusha
xor
aaa
int3
add
mov
movsl
add
jl
push
das
bound
mov
dec
mov
mov
or
sbb
and
push
adc
adc
jmp
daa
lock
sbb
cmp
jl
sub
lock
test
lods
jb
subl
mov
xor
cltd
sub
loop
scas
std
xchg
cmp
and
mov
mov
dec
sbb
fdivp
pop
fdivp
outsb
push
movsl
push
sub
mov
jne
ljmp
xor
push
xor
push
cmp
je
or
divl
dec
and
dec
popf
in
adc
inc
mov
jl
repnz
mov
mov
xlat
push
adc
push
sub
mov
xchg
add
std
inc
je
adc
and
or
add
loope
cltd
xchg
fstpt
and
mov
adc
and
stos
sbb
les
mov
mov
fildl
inc
jg
adc
inc
into
test
int
shr
iret
sbb
push
adc
jmp
arpl
fdivl
or
cmp
push
out
dec
jnp
inc
and
out
sahf
xchg
mov
sbb
mov
push
sbb
mov
or
push
and
cmp
add
xor
arpl
push
xchg
pop
push
lcall
or
xlat
mov
imul
and
mov
jg
xor
call
or
jbe
jge
push
mov
popf
jo
cmp
sub
push
sub
push
sub
cmpsl
xor
mov
mov
push
inc
or
push
inc
mov
add
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
or
sbb
and
xor
cwtl
xchg
mov
and
pop
adc
adc
xchg
add
fwait
xchg
or
mov
test
mov
mov
dec
adc
cmpsb
push
dec
loopne
mov
in
sahf
push
push
push
test
rcrl
das
push
pushf
push
fcmovne
fsts
cmp
inc
sar
jle
ljmp
pop
ss
add
inc
jno
pop
sub
stc
inc
jo
pop
sub
lock
jmp
mov
imul
out
aaa
push
arpl
lods
stc
inc
cmc
or
aas
mov
jmp
pushl
popf
or
aaa
call
lea
js
pop
dec
ret
sub
mov
out
and
out
dec
push
inc
rorl
or
dec
mov
shlb
xor
mov
inc
negb
popa
bound
xor
mov
jl
inc
inc
lock
andl
adc
call
js
sub
fs
in
cltd
pop
addr16
add
inc
jae
mov
xor
jecxz
call
dec
xor
pop
jo
push
or
sti
push
add
nop
loop
inc
xor
sub
push
fcoml
fbstp
adc
mov
mov
dec
fldl
sbb
fcmovnb
cmp
pop
leave
xchg
dec
adc
andl
rcrl
mov
inc
inc
jl
and
pop
xlat
lret
xor
je
or
adc
sub
popf
mov
sbb
ret
loopne
pop
and
ret
jecxz
adc
adc
icebp
fdiv
jno
bound
xor
pop
inc
jb
inc
push
jne
adc
dec
pop
cwtl
inc
xor
cld
movsb
add
pop
lds
divb
push
inc
push
in
or
pop
add
add
add
push
mov
and
adc
fs
xor
sub
dec
ret
xlat
ja
imul
ret
ret
aaa
pop
testb
je
fdivl
aaa
xchg
cmp
jl
loope
xor
add
pusha
or
adc
lret
jl
inc
je
test
fsubs
xor
mov
lahf
addl
pop
adc
jge
push
loopne
cmc
mov
pop
jae
or
mov
test
mov
and
orl
inc
push
ret
mov
pop
jbe
leave
xor
movsl
sarl
add
add
dec
add
sub
mov
push
push
pop
in
iret
or
or
xchg
sbb
es
adc
dec
cmp
push
out
dec
jl
xchg
jb
push
out
or
or
lock
dec
push
add
mov
mov
xchg
mov
jns
repz
mov
xchg
cltd
cmpsl
mov
call
mov
inc
cld
jle
mov
inc
mov
jmp
mov
sub
nop
or
mov
fiaddl
dec
imul
push
pop
push
pop
mov
inc
jbe
imul
push
outsl
inc
cltd
idivl
push
cli
filds
insb
ja
mov
lea
add
cmc
lods
push
mov
ret
push
pop
lds
pop
sbbl
or
mov
add
scas
xchg
mov
out
and
or
andb
andl
xchg
and
push
leave
aaa
shlb
push
mov
add
pusha
and
mov
add
add
xchg
xchg
fdivs
or
je
jge
mov
jp
js
icebp
adc
add
aam
add
dec
xor
test
mov
sub
add
inc
jge
push
stos
loope
inc
cmp
xor
push
jp
ss
adc
mov
push
jo
fcoms
jns
cs
and
xor
push
adc
stos
jp
inc
sub
scas
xchg
sbb
movsl
fsubrl
mov
xor
icebp
and
push
or
jae
pop
mov
xchg
enter
ret
add
mov
rolb
aam
inc
pop
or
xor
data16
idivl
clc
mov
dec
mov
pop
fs
push
inc
lods
dec
insb
add
mov
outsb
mov
mov
je
jnp
sub
adc
sbb
adc
pop
lret
inc
cmp
adc
fidivrl
pop
sbb
pop
lcall
negl
mov
xor
add
inc
mov
push
iret
imul
push
mov
sub
push
push
test
lret
sbb
lcall
lods
inc
mov
push
fldt
mov
inc
cli
push
sbb
movb
cmpsl
add
and
jge
movl
pop
and
shr
inc
add
out
mull
pusha
push
rorb
or
adc
repnz
add
push
inc
sbb
call
pusha
insb
std
jg
decb
dec
inc
mov
adc
repz
leave
and
stc
and
mov
in
sbb
jae
movsl
mov
loopne
imul
mov
push
sbb
mov
push
push
pop
cmp
pop
cmpsl
adc
inc
lock
dec
add
pop
cmp
inc
jns
mov
inc
lret
push
int
jnp
jno
dec
add
xor
mov
scas
or
push
cmp
adc
insl
xor
orl
mov
sbb
sbb
in
arpl
xorb
fiaddl
mov
popa
lock
jne
jae
rolb
test
jmp
xchg
dec
icebp
fistpll
mov
mov
mov
dec
insb
jns
mov
lods
mov
aam
test
cmpb
add
pushl
fmuls
push
jg
inc
xor
or
outsl
hlt
cs
je
cmpsl
sbb
adc
inc
mov
jno
or
jl
sub
call
add
push
push
imul
loope
inc
mov
pop
mov
fisubrl
lea
mov
and
xor
add
or
add
inc
xor
add
jns
jbe
leave
sti
pop
ret
inc
sbb
loopne
sub
pop
push
mov
xchg
or
inc
dec
add
jo
sbb
mov
adc
sub
gs
push
dec
and
sbb
push
dec
inc
and
push
xchg
or
push
jne
or
pop
inc
jne
lret
push
rcr
push
sarb
sbb
mov
aas
inc
shrl
mov
cmp
test
mov
out
cmp
mov
hlt
fnstenv
push
popa
dec
insb
mov
xorl
jb
sbb
lea
dec
add
pop
sbb
jbe
dec
call
push
test
and
inc
aaa
rcrl
mov
pop
fs
push
inc
or
add
sbb
mov
faddl
sub
xor
jbe
xchg
fs
inc
mov
les
je
aad
cmc
pop
cmp
pop
test
fucomip
pop
push
scas
sub
loopne
pop
testl
and
cmpb
adc
hlt
call
dec
mov
out
inc
mov
or
cmpsb
adc
jle
nop
add
pop
xchg
adc
mov
jo
cmc
aaa
or
or
fisubrs
jle,pt
add
and
dec
sub
mov
adc
into
add
pop
shrb
push
pushf
add
sbb
add
pop
cwtl
fnsave
dec
pop
add
jge
loop
add
pop
push
pop
jle
xor
out
addr16
or
ret
mov
xor
dec
imul
rcll
and
dec
xchg
insl
jne
ret
punpckhwd
adc
add
jo
jo
orl
dec
pop
cwtl
insb
and
testl
movl
pop
pop
push
push
jl
add
xchg
or
dec
xchg
xor
in
mov
or
sbbb
mov
fimuls
mov
cmp
pop
imul
sbb
push
mov
jno
imul
inc
or
testl
xorl
lret
mov
mov
mov
mov
and
cmp
pop
pusha
sub
xorl
inc
lea
aad
inc
and
ds
adc
cmp
mov
cmp
cwtl
add
lret
mov
add
rcl
adc
sbb
and
mov
mov
mov
mov
push
mov
arpl
cmp
jno
lods
push
add
mov
adc
pop
pop
rcr
das
in
daa
xchg
pusha
pusha
loop
in
dec
sbb
addr16
gs
sbb
xor
mov
sub
pop
or
jmp
stos
mov
push
or
sbb
ret
pop
xlat
ja
sub
in
cld
push
sbb
or
ret
loopne
cmpsl
adc
cmp
clc
adc
lahf
adc
xchg
popa
stos
or
lods
mov
push
xchg
pop
sbb
push
jecxz
push
aaa
or
jne
ret
jg
mov
push
scas
cmp
ja
je
or
je
add
outsb
or
sub
mov
xchg
scas
cmp
sarb
add
push
or
ret
cmpl
movsb
xchg
adc
sbb
jl
jne
sahf
addr16
add
xor
cmp
enter
adc
adc
push
xor
inc
mov
imul
or
add
lret
ja
imul
test
test
jbe
mov
popf
clc
cmp
push
mov
and
xor
cwtl
call
mov
push
cmp
sub
sahf
test
es
sub
or
inc
nop
push
push
outsb
mov
or
or
adc
mov
test
xchg
test
imul
inc
push
xorb
mov
or
pushl
icebp
je
pop
ret
push
dec
xchg
adc
imul
addl
mov
loope
or
mov
adc
adc
mov
mov
add
pop
or
push
adc
inc
dec
add
in
add
lret
cs
in
test
cmpsb
xor
and
or
divl
mov
add
push
dec
sbb
shlb
mov
in
and
push
mov
mov
jmp
add
push
add
rorl
dec
or
pop
push
mov
fadds
shll
mov
dec
or
ret
out
je
xor
sarb
idiv
inc
adc
inc
das
xor
sub
fs
ret
insl
add
cmp
and
adc
in
push
pop
fmull
add
push
mov
rcll
test
test
mov
dec
cmpsl
push
jecxz
mov
push
or
cwtl
popw
pop
lcall
xchg
dec
roll
xor
add
mov
xchg
push
xor
adc
bts
inc
pusha
lea
adc
jecxz
push
xor
pop
push
in
add
add
add
cmp
mov
add
dec
pushf
and
sub
add
xor
add
bound
idivl
mov
jne
sub
sarl
cmp
js
lods
jbe
xorb
push
bnd
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
mov
push
je
cwtl
xor
pop
mov
push
ss
mov
loop
rclb
aas
and
movl
aam
movq
pop
nop
dec
jo
das
xchg
pop
adc
in
xchg
push
push
lret
pusha
xchg
dec
adc
mov
sbb
mov
pop
and
lods
or
sbb
enter
sub
out
aas
adc
scas
std
decl
xchg
xlat
pop
sahf
or
adc
push
cmp
ficompl
or
or
xor
adc
or
push
sub
mov
mov
mov
mov
adc
inc
loope
clc
cs
fwait
ds
cmp
sub
jne
mov
daa
ja
xor
push
mov
mov
add
dec
cmc
fdivl
jge
rcrb
das
xor
in
testb
rorb
clc
popa
mov
cmpsl
scas
xchg
data16
inc
cmp
push
arpl
push
jb
movsb
push
ret
sub
cs
outsl
or
xchg
pushf
dec
and
dec
mov
pop
cwtl
push
mov
pop
cmp
push
jb
test
sarl
decb
or
jae
pop
adc
out
sub
imul
das
orb
lods
push
and
sub
loopw
cmp
mov
mov
and
lcall
inc
inc
inc
fcomps
imul
pushf
jo
mov
shrb
jg
cwtl
les
and
mov
mov
fstp
adc
and
int3
cmpsb
push
sub
in
pop
lret
in
scas
push
gs
arpl
cld
mov
push
inc
leave
je
rol
arpl
aam
fcomps
lahf
imul
adc
jb
cwtl
ljmp
or
xchg
push
sub
sahf
sub
fsts
psadbw
repz
inc
xor
push
outsb
int
xor
aaa
divps
popa
jo
aaa
in
mov
and
dec
cmp
hlt
setbe
adc
mov
adc
dec
and
cmp
sbb
add
pop
aaa
mov
ret
aaa
sarl
nop
cmp
sbb
inc
mov
test
mov
out
call
cli
xor
out
sbb
xor
mov
or
pop
adc
or
test
mov
dec
add
push
dec
cmp
cmp
fsubr
pop
lock
movsb
push
stos
rcrb
ret
xor
or
xor
mov
push
mov
cmpsl
lret
test
fs
xor
mov
adc
outsb
adc
in
push
cld
ficompl
mov
and
cs
popa
jbe
or
fsubs
xor
dec
or
js
xchg
stos
or
sub
add
xchg
or
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
gs
and
fstps
or
and
imul
movsl
push
or
or
aad
adc
loope
push
js
je
cwtl
cmp
push
int3
fwait
adc
arpl
sub
sarb
sbb
cltd
call
push
pop
or
inc
xchg
jmp
dec
cmp
std
and
adc
ffree
mov
iret
inc
xor
mov
mov
cmp
int
push
pop
out
sub
test
pop
cmp
add
or
sbb
dec
lret
cmp
cltd
adc
add
fcomp
push
add
cld
jmp
adc
xchg
add
sbb
jmp
ss
and
jnp
sub
mov
jno
sub
jl
or
into
jle
ss
dec
sbb
mov
and
push
aaa
adc
cmp
adc
or
stos
dec
adc
das
push
js
test
and
pop
out
inc
lcall
ror
xor
sbb
push
das
inc
push
sbb
push
inc
das
push
enter
fsubs
add
dec
movsl
pusha
sub
les
push
popa
dec
mov
lcall
nop
pushf
leave
shrl
bound
mov
inc
pushf
lret
mov
pop
cmpsb
cmp
cmp
icebp
in
addr16
xchg
lods
and
lock
test
jecxz
ljmp
mov
icebp
mov
add
fdivr
pop
rcrb
jg
cmp
xchg
icebp
out
xchg
into
inc
mov
nop
adc
roll
push
jg
or
or
sub
js
in
mov
repnz
popa
add
cmpsb
dec
shr
es
cmp
je
inc
stos
das
push
notb
push
mov
popf
loop
xchg
inc
or
add
push
mov
scas
loope
or
push
or
sti
and
push
cli
mov
in
loop
cltd
fisttpll
push
repnz
xchg
hlt
das
adc
pop
je
mov
xchg
or
pop
into
sub
loopne
cwtl
call
add
data16
mov
mov
and
cld
push
popf
inc
sub
inc
fildl
mov
adc
pop
sbb
mov
call
add
rolb
mov
mov
rcrb
das
sub
push
mov
sti
xor
mov
jbe
cmpb
dec
adc
sub
push
add
mov
iret
dec
xor
and
dec
jp
cld
push
mov
and
lcall
push
cld
cmp
or
popf
std
daa
nop
add
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
orl
movb
mov
andl
dec
rcrb
adc
xor
pop
stos
pop
mov
out
mov
mov
or
je
adc
es
push
sahf
xor
std
sbb
xchg
cmpsl
pop
jne
and
add
hlt
ljmp
and
cltd
add
subb
xor
add
frndint
sbb
cwtl
rcrb
xchg
dec
mov
sub
jbe
xchg
adc
sbb
add
xor
imul
sbb
cmp
loop
sbb
cmp
inc
mov
sbb
adc
jne
inc
sbb
and
out
jne
adc
repnz
push
add
cmp
cmp
arpl
gs
pusha
dec
je
subb
jl
and
push
xchg
jmp
subb
in
rcrb
sti
lcall
pop
jmp
xchg
insb
sahf
addr16
and
pop
mov
pop
push
dec
xchg
pop
cmc
bound
loope
dec
or
dec
sub
jne
push
mov
or
aas
test
adc
add
add
add
mov
js
aaa
subl
mov
inc
dec
fcomps
repz
cmpsl
and
xchg
cmpsb
push
pop
pop
push
pop
lcall
dec
inc
xor
lods
nop
or
mov
cltd
cmp
movsl
movsl
push
int3
clc
jne
sbb
movsl
jb
pusha
mov
xchg
push
cmp
xchg
or
dec
adc
inc
int3
and
outsb
jmp
adc
and
lea
xchg
or
push
stc
loopne
cmpsl
dec
fdivrl
loope
add
inc
sub
cmp
je
in
ficoms
cltd
fdivl
pop
sbb
call
pop
mov
movsl
lods
sbb
xchg
call
cs
stos
in
lock
in
push
testb
sub
push
sbb
or
rcl
mov
adc
dec
pop
dec
pop
in
in
loopne
loopne
add
xchg
xor
outsl
xor
cmp
rorl
or
push
mov
jne
cmp
push
cltd
cmc
add
pop
imul
xchg
add
dec
lds
push
sbb
popf
nop
mov
in
jne
mov
add
xor
popf
xchg
jg
lahf
jno
or
pop
ljmp
cld
jne
shlb
sub
inc
pop
inc
or
push
fs
xlat
aaa
add
sti
lret
loopne
and
loop
and
pop
in
cwtl
dec
xchg
add
clc
inc
xorb
cmp
lock
shrb
int3
or
lret
add
xor
cmp
xor
add
mov
inc
jo
das
js
addb
aad
xchg
cli
movsl
in
mov
jecxz
jbe
rcl
jecxz,pn
dec
cmpsl
or
xchg
add
dec
push
loopne
cmp
add
sub
push
xchg
cmpsb
in
adc
mov
push
cld
cmp
arpl
push
cmp
fstpl
jbe
push
lahf
pop
and
sbb
lahf
adc
dec
and
hlt
jl
lcall
dec
or
fstl
stc
add
pop
cmp
jne
sbb
jne
lock
and
add
scas
mov
add
imul
lahf
adc
push
xor
xchg
sbb
shr
bound
add
loopne
sub
pusha
stos
or
pop
jge
add
fadds
lahf
ja
call
jg
js
test
dec
sub
push
and
or
dec
dec
or
jmp
icebp
movsb
mov
in
or
add
and
gs
jge
xor
mov
je
lods
test
mov
les
repz
les
mov
lds
jb
push
push
addl
shrb
jecxz
outsb
lret
jns
inc
cmpsl
add
scas
pop
inc
daa
clc
sub
jge
jge
loope
adc
adcl
inc
sbb
nop
cmpsl
and
movsb
cltd
mov
cmp
and
out
imul
loop
xchg
mov
lds
and
stos
fdivrs
sub
outsl
sub
mov
xor
and
das
or
adc
lods
xchg
adc
sub
xor
daa
fstpl
push
inc
jns
xor
pop
mov
or
xchg
push
xor
rcll
or
xchg
dec
mov
in
mov
mov
cmp
jbe
shll
sbb
mov
push
add
and
call
mov
mov
fnstcw
stos
add
or
jno
mov
sbb
mov
dec
lds
add
pop
repnz
adc
mov
sbb
dec
dec
test
xchg
push
pop
add
or
mov
test
jne
dec
insl
sbb
add
test
push
mov
mov
sub
jo
add
mov
sbb
inc
lahf
cmp
push
cmp
push
pop
pop
adc
mov
push
add
pop
and
shlb
test
jecxz
aam
xchg
or
pop
data16
stos
pop
push
fcoml
imul
push
dec
cmpsl
stc
xchg
stos
xor
pusha
adc
stos
mov
or
add
adc
pop
add
or
and
add
cltd
mov
xchg
and
nop
std
aaa
aas
ja
push
decb
pop
xor
inc
int3
mov
test
add
inc
mov
adc
add
fwait
lock
adc
adc
js
jne
andl
mov
mov
loop
push
ljmp
adc
les
jnp
mov
int3
mov
adc
ret
push
stos
call
jo
cld
je
int3
jbe
out
bound
push
jb
pop
aaa
loopne
lret
iret
sbb
scas
sbb
and
add
repnz
xchg
jl
jle
mov
addr16
es
sub
icebp
push
sbbb
push
ret
add
pop
imul
push
dec
gs
push
test
cmp
sub
mov
das
mov
insb
inc
orb
and
adc
pop
add
stos
sar
fcmovne
jo
sub
push
lea
mov
jno
popf
movsl
rol
pop
sbb
adc
add
pop
leave
push
insb
mov
add
or
cmp
sbb
sub
or
add
fs
ror
push
rdtsc
xor
sahf
inc
or
shlb
fs
mov
lds
addr16
jne
dec
stos
fimuls
push
xor
js
lock
jae
cmp
cmpb
push
sub
dec
xchg
dec
add
push
xlat
dec
subl
fisubs
gs
movsl
test
daa
inc
aaa
push
push
push
mov
daa
cli
adc
mov
add
shll
insb
pop
icebp
and
inc
inc
sub
cmp
jb
push
faddl
push
popa
bound
jg
jno
xchg
cmp
push
insb
sbb
popa
adc
sbb
mov
add
cmp
mov
mov
decl
addl
push
stos
dec
inc
pop
ret
sarb
and
nop
add
cltd
sbb
add
add
cmpl
sbb
jp
push
popa
or
imul
ss
in
xorl
call
and
push
hlt
test
imul
adc
in
popf
mov
pop
push
icebp
push
jb
ss
je
jno
pop
rolb
mov
lods
inc
add
push
jne
and
fimuls
xchg
push
mov
push
pop
sbb
add
pop
and
sahf
add
pop
popa
or
das
and
or
jmp
mov
sub
inc
xchg
pop
xor
add
mov
adc
jl
push
pop
mov
mov
dec
jnp
std
ljmp
cld
push
fsubr
push
mov
sub
pop
scas
mov
push
pop
testb
xor
push
das
jae
mov
lea
aas
js
push
fsubrs
inc
inc
cmp
jb
or
sbb
dec
testl
sub
jo
pop
xchg
inc
ret
push
outsl
mov
add
adc
cmp
testb
pop
inc
jnp
shlb
decb
xchg
or
rolb
aaa
das
lret
mov
ds
sbb
inc
mov
in
outsb
inc
sti
jl
test
jae
mov
sahf
jg
jg
loopne
int3
mov
sub
mov
test
cltd
pop
mov
or
adc
dec
clc
push
dec
loop
mov
stos
jle
dec
add
jmp
arpl
jo
inc
push
imul
mov
loop
pop
or
xor
xor
inc
cs
test
js
push
sub
mov
hlt
je
or
cmp
fs
dec
repz
loopne
out
cmpsl
jns
cmpsl
or
sub
inc
lods
cmpsl
jns
pop
dec
jl
int3
cmp
cmp
add
adc
or
and
movl
mov
cmc
or
inc
add
imul
iret
jae
xchg
inc
sub
mov
test
add
test
jne
out
sbb
xor
push
bound
adc
jb
mov
xor
pushf
movsl
icebp
and
push
mov
stc
mov
adc
pusha
in
shlb
xchg
movl
mov
and
jmp
sub
push
addl
xor
jne
jmp
ss
adc
popf
cmpb
icebp
fs
pop
inc
inc
mov
pop
lret
jno
test
add
push
or
push
mov
in
add
gs
cmp
test
or
sti
add
ja
bound
cmp
xchg
subl
jmp
loop
or
jae
mov
mov
mov
xchg
adc
in
and
jmp
idivb
dec
sarl
or
sbb
adc
adc
cmc
repz
xor
jge
je
jge
mov
sub
mov
push
xor
loop
push
mov
rep
fimull
xor
or
add
jns
or
sbb
cmp
jae
fisubrl
mov
add
cmp
andl
pop
xor
dec
jb
adc
pop
push
lods
imul
mov
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
ficomps
dec
adc
push
jo
imul
sub
sub
rcrb
push
jecxz
aas
mov
inc
lock
mov
mov
and
dec
rclb
ja
sub
in
push
xor
sti
xor
sub
or
into
add
mov
nop
adc
pop
adc
lods
adc
iret
test
fildll
mov
jmp
lret
pop
int3
jae
sbb
mov
push
push
push
sub
rorl
adc
sbbb
cmp
out
xor
rolb
add
cltd
cltd
cmpsb
or
hlt
lock
and
jle
dec
mov
push
dec
xor
or
push
mov
or
jle
push
cli
loope
adc
decl
fcomp
xchg
fwait
push
push
fwait
push
pop
test
push
aam
call
and
mov
adc
push
adc
mov
xchg
mov
lcall
xor
rolb
rolb
adc
inc
and
sarb
sub
dec
or
lcall
xorl
dec
mov
push
loope
sbb
pop
add
xor
addr16
or
push
or
or
mov
jle
fnstcw
jp
ret
xchg
lea
fstpt
loop
or
clc
adc
fadds
sbb
movsb
add
inc
push
pop
and
and
jg
and
cmpb
mov
push
and
inc
adc
adc
jnp
dec
add
mov
jo
mov
and
movsl
jg
add
shrl
pop
or
dec
xor
dec
adc
xor
and
pusha
or
jne
jo
mov
lea
sbb
mov
dec
shrb
sar
xor
inc
out
loope
jb
ret
cmp
adc
jg
out
cmp
hlt
and
sub
stos
jecxz
in
dec
push
dec
es
imul
jb
xchg
add
adc
or
inc
sub
jg
cmpsl
loopne
xorl
inc
or
ret
sahf
ja
test
lret
mov
popf
shlb
and
out
ja
and
or
push
xchg
push
adc
insl
cmp
mov
mov
into
adc
sub
cmp
push
lock
shr
xor
pop
les
sbb
fists
adc
sbb
jl
xor
mov
jle
jge
notb
je
push
add
or
in
push
and
adc
cmp
sbb
inc
lea
je
mov
adc
lahf
js
sub
jbe
pop
fisttps
cwtl
in
push
insl
jne
pushf
sbb
test
sbb
fwait
orb
movsl
ret
dec
pop
out
add
mov
lret
adc
inc
jle
inc
in
push
mov
jmp
dec
ss
mov
mov
jne
sub
outsb
sar
call
jp
cmp
rorl
mov
jb
shl
out
dec
jae
ror
push
mov
cmc
ror
es
hlt
jae
stos
movsb
xchg
mov
jg
cmp
cs
push
pop
stc
adc
inc
or
push
icebp
pop
mov
sbb
push
mov
jle
subl
pop
cli
sub
loop
cmp
pop
add
cmp
jo
add
adc
pop
dec
add
mov
or
cltd
push
cltd
xor
inc
arpl
jmp
adcb
gs
in
add
jno
cmp
daa
in
jo
jg
xor
sbb
imul
subl
jne
adc
push
jmp
sub
and
lret
test
or
sbbl
add
nop
inc
outsb
arpl
or
mov
push
cmp
adc
sbb
nop
arpl
mov
es
loop
sbbl
cmp
insb
mov
adc
and
xchg
cmp
xor
and
js
xchg
or
or
movsb
adc
rol
jl
mov
inc
mov
push
into
out
shlb
sub
or
je
and
jmp
dec
pop
mov
dec
mov
orb
pop
pop
sbb
test
mov
sub
or
mov
xor
and
cmpsb
xchg
push
dec
sub
add
fistps
test
ja
aas
and
in
outsb
loopne
leave
dec
cmpsb
fs
and
dec
leave
orb
orb
es
orb
pusha
dec
leave
orb
xchg
dec
leave
cmpb
adc
ja
and
das
jmp
cmp
xor
pop
sarl
push
xor
in
jl
xor
ja
dec
and
xor
or
xor
xor
sub
mov
mov
into
mov
into
leave
jmp
cmp
cld
or
mov
sbb
in
pusha
adc
push
add
ss
add
or
sbb
xor
cltd
call
sbb
pusha
inc
lock
cmp
push
mov
and
mov
adc
rolb
add
dec
call
jne
sbbl
call
orl
mov
aas
xchg
or
jnp
adc
add
sub
adc
ja
shlb
mov
movsb
stos
dec
xchg
lahf
inc
mov
lcall
and
cmpsl
jge
dec
push
enter
dec
jnp
out
xor
loopne
in
aam
add
mov
hlt
mov
xor
and
call
push
cmp
and
pop
mov
hlt
jns
sbb
movsb
mov
mov
pop
js
sbb
xorb
out
int3
push
sbb
xchg
adcb
rolb
push
push
xchg
xchg
cli
sbb
pop
and
jno
adc
rcrb
push
mov
pop
fistl
add
stos
xchg
adc
push
xchg
pop
pop
sub
jne
pop
lock
outsl
jo
pop
nop
add
loopne
adc
rol
lock
popa
fsubl
call
jne
add
imul
mov
icebp
dec
or
ret
fs
es
test
push
xorb
subl
fdivp
xchg
lahf
out
push
add
call
push
mov
into
or
sbb
push
mov
push
pushf
mov
xor
aas
adc
add
and
test
adc
add
jbe
icebp
out
es
or
js
jmp
cmp
call
pop
sbb
adc
sbb
inc
add
mov
out
scas
mov
xor
dec
xor
out
xchg
fsts
pop
or
jmp
or
aam
mov
jecxz
push
add
int
mov
dec
lea
inc
ret
xlat
shrl
adc
sub
add
adc
sbb
adc
add
jno
cmpsb
pop
adc
jne
cmp
or
sub
clc
or
sub
je
lret
push
in
dec
cmp
sub
lods
sbb
insl
adc
sbb
add
insb
mov
out
shlb
inc
dec
sbb
sub
push
sub
or
cwtl
and
xor
or
mov
rclb
cmp
xor
fldl2e
pop
fs
rcrb
aam
popf
cmp
cmc
in
out
mov
dec
mov
movl
ficompl
dec
mov
or
push
sbb
dec
xor
cmc
aam
dec
xor
rcrb
fdivs
sbb
jmp
test
in
push
push
aam
push
inc
xchg
or
leave
rolb
adc
imul
mov
or
cmp
aam
add
push
stos
dec
fcomp
movsl
or
xorl
mov
lahf
in
js
mov
push
insb
sub
add
in
jge
sbb
test
cmp
cwtl
or
adc
or
or
push
xchg
push
push
cmp
jl
mov
adc
jmp
in
clc
push
adc
jbe
jmp
test
ret
inc
or
loope
stos
add
mov
call
imul
cmp
mov
scas
pop
push
outsl
jae
inc
stos
xchg
sarb
fnsave
mov
add
pop
idivb
push
rorl
inc
ret
jge
rorb
jge
mov
jmp
subb
shrb
test
add
cs
and
inc
loopne
pushw
aaa
rclb
sbb
loopne
mov
leave
adc
sub
sub
clc
mov
xchg
pop
push
push
lahf
call
call
push
cmp
stos
adc
mov
inc
sbb
dec
pop
movsl
inc
jl
aam
je
stos
push
scas
add
push
sub
mov
aas
and
push
or
es
push
ljmp
push
js
jle
jo
dec
xor
push
or
sub
xchg
or
xorb
ds
in
lock
cmp
add
add
push
cmpsl
stc
ret
adc
xlat
jecxz
inc
les
dec
sbb
andl
sub
pop
or
jp
ret
lock
jne
dec
inc
daa
nop
loopne
popa
test
out
ljmp
xor
add
int
and
push
daa
loopne
nop
dec
dec
mov
and
xchg
mov
pop
loope
or
push
adc
dec
sub
push
mov
lcall
rclb
test
mov
dec
push
stos
push
xchg
push
clc
mov
pop
mov
inc
dec
imul
jne
sbb
pop
shll
into
fs
sti
push
pop
shrb
loopne
test
inc
test
add
pop
fwait
int3
and
and
es
data16
mov
fmuls
out
xchg
test
sub
pop
inc
decb
leave
add
cwtl
dec
mov
or
xacquire
enter
jl
or
xor
fs
or
aad
add
dec
inc
pushf
rolb
clc
xor
icebp
fwait
push
cmp
cmpsl
sub
js
mov
sbb
rolb
jg
pop
mov
add
xchg
mov
addr16
pop
scas
push
outsl
loopne
sbb
add
add
notl
jno
mov
or
inc
gs
inc
xor
je
cld
and
xchg
jp
cmp
xchg
adc
push
mov
arpl
or
sub
sbb
inc
bsf
sbb
ret
push
or
xor
xchg
dec
mov
xchg
lds
arpl
or
xchg
aam
xor
add
or
push
lahf
pop
adcl
mov
sbb
adc
push
adc
loope
popf
push
add
xchg
call
sbb
mov
imul
xchg
stos
add
mov
xchg
cltd
dec
adc
nop
test
ret
sbb
adc
jnp
push
lahf
movsb
mov
rorl
hlt
mov
aam
adc
sub
or
xchg
xor
jno
dec
cmp
daa
push
and
addb
rclb
push
xchg
adc
das
mov
sbb
and
mov
cmp
mov
dec
in
pop
dec
mov
add
in
lldt
aas
sub
shlb
xor
leave
outsl
sbb
sbb
xlat
mov
test
push
adc
mov
push
mov
adc
mov
lea
ss
pop
xlat
movsl
or
test
inc
iret
add
push
dec
int3
sti
pushf
push
and
movsl
mov
xor
loope
mov
mov
jae
xor
imul
jp
incb
jle
xor
xchg
xchg
out
sbb
bound
test
cmp
mov
sbbb
insb
movsb
pushf
jp
imul
pusha
sub
mov
lea
push
sbb
in
cmp
add
sub
imul
or
call
mov
jnp
pop
stos
les
jl
pop
fsub
xchg
popa
or
jecxz
add
test
jae
cwtl
or
ss
xor
mov
mov
inc
jbe
adc
cmp
es
xor
pop
sbb
dec
push
xchg
mov
fwait
rorb
add
pop
jnp
fsubrs
or
rolb
add
loopne
and
fimuls
inc
testb
nop
shr
or
in
push
mov
sub
das
stc
lock
aam
mov
dec
je
adc
fiaddl
aas
je
sub
call
mov
adc
gs
jp
test
xchg
lret
xlat
cmp
cwtl
pushf
add
pop
and
mov
cmc
mov
sbb
inc
add
sub
pop
mov
inc
push
scas
mov
jp
sub
jns
pushf
xor
mov
xchg
cmp
sbb
out
loope
mov
ficomps
add
movsb
shlb
inc
xchg
xchg
pop
loopne
std
cmp
fld
mov
inc
push
sbb
lods
jmp
scas
xlat
and
fidivl
lea
add
push
xchg
idivl
pop
movsb
add
aaa
inc
addr16
xor
cmp
fld
or
add
pop
mov
push
mov
jmp
push
lret
push
mov
cmp
or
ljmp
movsb
outsl
push
pop
clc
not
lock
ljmp
pop
cmp
dec
xchg
jno
out
fimull
or
rorl
rcrl
idivb
xor
sub
mov
inc
push
inc
or
sar
pop
sbb
ljmp
out
or
shl
lcall
sbb
test
test
lea
or
loopne
shll
addr16
sub
in
cmp
fwait
jns
popa
jnp
cmp
or
add
cmp
or
fmull
rcrb
fimull
or
inc
mov
dec
sub
or
cmpsb
cmpb
push
push
jns
ds
cmpsb
outsl
xlat
push
push
repz
xor
sahf
adc
xchg
lcall
into
loopne
orps
push
ret
push
movsl
and
enter
or
mov
dec
movsl
add
call
sub
adc
andl
mov
call
xchg
daa
outsb
fs
outsl
add
push
les
mov
push
pushf
or
jnp
test
stos
es
inc
adc
xchg
je
mov
jl
sub
pop
pop
iret
cmpsb
mov
xor
push
jb
cmpsb
or
and
cld
ficomps
sub
cmp
or
push
imull
ret
mov
inc
add
loopne
and
inc
or
incl
incl
jge
cmp
pop
inc
inc
inc
jo
mov
decb
popf
daa
outsl
mov
pop
pop
xchg
push
insb
xchg
sub
into
std
mov
test
and
sbb
sbb
jo
lds
sahf
hlt
jge
and
daa
and
icebp
lds
xor
pop
cmpb
or
out
and
rol
xchg
mov
mov
inc
pop
scas
mov
xchg
jnp
in
adc
xor
cmp
adc
je
rcr
push
mov
sub
mov
inc
pminsw
imul
lods
pop
fisttpll
mov
popa
jnp
push
lods
jmp
sahf
sub
or
es
mov
sbb
jae
pop
sbb
and
ret
cltd
add
add
inc
movsb
imul
add
dec
adc
popf
or
or
decb
dec
ret
imul
mov
jno
sbb
aaa
enter
outsb
lock
cmp
xor
push
enter
xchg
enter
out
mov
cmp
out
xor
add
jae
xor
cmp
inc
in
popf
enter
cmp
dec
test
mov
js
mov
enter
or
pop
push
and
adc
repz
inc
popa
std
jmp
nop
add
outsb
ljmp
je
pop
loop
std
dec
jmp
mov
mull
xchg
leave
js
cmp
jg
outsb
adc
insl
fldt
or
outsb
add
push
setle
call
inc
adc
jle
xchg
jnp
adcl
fucom
jp
outsb
and
pop
iret
mov
and
sbb
fs
sbb
lock
cmpb
jb
jmp
or
ja
shr
jge
cmpsb
dec
cmp
or
jp
sbb
sub
sub
cs
inc
jmp
inc
pop
jns
jns
addr16
or
dec
and
jne
pop
add
push
add
lret
inc
xchg
fcmove
insb
or
add
push
or
mov
adc
add
or
sub
lret
jmp
movsl
push
lret
js
cmpsb
lods
test
mov
push
inc
in
dec
add
nop
xor
jl
or
jle
jmp
jl
and
les
fnstenv
jne
aas
test
sti
hlt
and
add
sbb
jmp
add
or
mov
push
mov
jno
aaa
cmc
jl
shl
jne
xchg
add
fdivl
cmpsl
lret
cmc
jl
loop
aam
lret
lods
pop
lods
sub
inc
add
je
or
pop
dec
rcrb
add
lods
movsb
cmp
add
or
push
stos
notb
in
jns
add
cli
push
das
in
lea
adc
fcomp
sbb
ret
jecxz
js
or
jmp
jo
sub
stos
sbb
les
xor
out
ret
andl
jns
sub
repnz
push
inc
jb
in
mov
add
ljmp
mov
fimuls
xchg
leave
xor
mov
imul
mov
idivl
lea
scas
push
mov
sub
lcall
xorb
je
das
stos
std
xor
test
add
jo
mov
xlat
aaa
jno
mov
and
out
dec
push
test
stos
inc
cwtl
sub
pop
xor
filds
jle
inc
fdivs
pop
push
and
pop
outsl
push
adc
mov
mov
jp
insb
test
adc
cwtl
pop
jbe
jp
fnstcw
sti
push
or
inc
lret
adc
sub
mov
jl
das
adcl
mov
mov
insb
nop
adc
les
adc
adc
or
mov
cs
orl
adc
and
pop
pop
and
jmp
invd
cmp
fs
push
cmpsl
fldt
jo
mov
test
loopne
inc
pusha
push
pop
pop
dec
sub
and
mov
andb
pop
ret
insl
cld
iret
cmp
cmc
pop
insl
adc
cmp
shlb
insl
mov
or
stos
cwtl
incl
jne
daa
dec
push
fcompl
xor
test
repnz
gs
pop
cmp
add
aaa
mov
shrb
jmp
or
lods
jns
gs
test
popf
sub
mov
gs
stos
push
add
cmp
mov
mov
xor
pusha
mov
pusha
or
jp
add
jo
es
push
xlat
inc
mov
sub
call
push
mov
push
sbb
mov
xor
pop
jg
add
cmp
adc
xchg
sbb
dec
test
test
dec
lods
test
push
in
sahf
or
inc
cmp
xchg
lock
mov
cmp
je
mov
sbb
dec
xor
loop
xchg
xor
shr
mov
push
movsl
mov
mov
mov
pop
and
xor
jg
adc
pop
cmp
call
add
or
add
jmp
add
lahf
push
aaa
pop
adc
xor
insb
mov
loopne
inc
inc
movsb
and
inc
jbe
jl
sbb
mov
shrl
or
pusha
adcb
pusha
and
dec
decl
jl
subb
pop
add
es
cmp
lock
jne
decb
lret
in
or
and
rolb
ret
imul
jge
pop
or
mov
movb
dec
or
movsl
mov
add
dec
xchg
int3
das
movsl
orl
test
push
inc
adc
fdivr
pop
add
add
sub
mov
enter
sub
mov
jp
adc
mov
sub
or
call
sbb
jb
divl
inc
dec
lret
std
inc
push
xor
enter
cwtl
arpl
inc
orb
repnz
cmp
lret
jge
jge
stos
and
xchg
leave
push
jns
mov
fs
es
push
into
add
xchg
pop
push
mov
xchg
aas
cmpb
add
add
sqrtps
dec
dec
imul
sub
cld
inc
iret
jne
xchg
sub
or
mov
sbb
inc
mov
pushf
xchg
jecxz
jnp
mov
popf
xchg
ret
or
loopne
nop
repz
and
dec
popa
add
sbb
bndldx
cmp
sub
call
add
push
mov
push
and
sub
popf
push
lods
stc
mov
dec
loopne
in
flds
mov
fldl
lock
aam
fucomi
insl
add
push
sub
or
mov
add
jle
or
and
pop
inc
stos
shlb
mov
jne
mov
call
arpl
sub
jo
ss
aam
in
push
xchg
inc
int3
nop
shll
js
fs
push
push
femms
cwtl
mov
push
inc
sbb
push
mov
jmp
adc
loopne
push
adc
jmp
rorb
inc
push
jo
mov
push
cltd
jb
stos
adc
cmpsl
mov
ss
sub
and
lods
ret
pop
cpuid
repz
push
pop
mov
imul
push
test
lret
adc
test
in
inc
lock
imul
push
xchg
mov
mov
inc
test
xchg
mov
in
pop
out
mov
rol
pop
dec
je
xchg
lret
enter
loop
jge
mov
mov
push
loope
jo
lcall
mov
adc
vcomiss
jmp
or
cmp
jne
movsb
data16
jnp
roll
mov
lods
dec
sub
sbb
loopne
dec
rclb
xor
xor
pop
sub
lcall
pop
ss
push
push
xor
adc
ret
and
es
popa
insl
and
push
pop
leave
rep
fcmovb
std
mov
insb
or
int3
sar
cwtl
es
gs
mov
inc
or
xor
scas
mov
inc
je
clc
pop
xchg
jbe
adc
and
push
jno
je
fisttpl
cld
push
aaa
lock
scas
popf
push
sbb
mov
or
cltd
mov
inc
jle
pop
adc
pop
xchg
and
push
call
test
mov
shl
or
xor
jle
and
add
jmp
scas
push
into
idivb
xor
push
mov
dec
xchg
faddl
inc
pop
add
xchg
mov
push
add
dec
nop
sar
pop
push
ret
mov
jne,pn
inc
je
stos
add
pushf
pop
lahf
dec
mov
mov
mov
add
test
scas
dec
or
test
dec
nop
dec
sbb
filds
mov
add
pop
xor
sub
pushf
add
and
enter
stc
mov
cmp
and
jb
push
or
notb
jnp
jo
movsb
mov
mov
mov
mov
xor
les
aam
cmp
xor
dec
fdivrl
add
mov
ror
cwtl
pop
mov
imul
or
inc
mov
sub
and
aam
and
testb
adc
rorl
jge
add
pushl
mov
xchg
cmpsb
shrl
jbe
incl
xorb
insb
lds
xlat
or
inc
sahf
cwtl
orl
and
adc
jl
and
inc
xchg
je
pop
push
or
and
js
js
insl
xor
sub
enter
les
dec
or
add
mov
add
pop
dec
sbb
pop
or
sti
xor
and
fs
adc
adcl
xchg
movsb
push
mov
je
sbb
dec
std
es
jne
push
mov
repz
inc
pop
mov
ret
pop
cmp
scas
xlat
sbbl
ret
nop
out
mov
xor
xor
sub
loopne
adc
mov
lret
push
mull
sbb
or
bound
mov
lret
movsb
xorb
push
les
arpl
jbe
addr16
mov
mov
xor
push
gs
and
cs
mov
push
or
fadds
inc
movsb
gs
pop
mov
adc
fs
push
into
mov
cwtl
sub
push
mov
dec
es
and
cwtl
sub
mov
in
and
mov
sub
clc
outsb
invd
and
jo
repz
leave
test
sub
pmaxsw
loope
and
loopne
clc
cmp
and
inc
push
js
xchg
test
pop
or
lods
lock
imul
mov
roll
in
push
fwait
inc
jge
push
push
jmp
push
sub
sbb
lods
dec
call
push
testb
mov
rcl
push
testb
push
pushl
adc
xor
sti
pop
shlb
adc
adc
mov
and
cmpsl
push
les
lods
mov
sub
pop
jb
mov
adcb
cmp
add
xchg
ljmp
cltd
sub
mov
pop
pushf
xorb
mov
and
mov
jge
pop
mov
iret
push
imul
jecxz
push
xchg
sbb
add
pusha
sub
lcall
dec
and
or
cltd
scas
test
in
filds
test
xchg
jmp
pop
mov
adc
cmpl
jg
push
and
add
mov
repnz
cmp
pusha
or
add
mov
dec
sti
in
repz
jo
cs
add
pop
fnsave
add
fldl
xor
leave
jne
pop
sbb
sub
cli
cltd
pop
lea
mov
and
or
mov
inc
and
dec
dec
and
jle
lods
mov
testl
xchg
ds
lcall
call
xchg
push
aad
je
pop
mov
jo
dec
sbb
repz
and
add
int3
sub
inc
cmp
daa
pop
mov
jmp
imul
jmp
mov
xor
icebp
lock
push
call
mov
push
sbb
mov
movsl
fcmovnu
rolb
sti
inc
hlt
fstl
mov
loopne
std
mov
fldl
pop
fsubr
pop
faddp
andl
sbb
and
or
adc
or
fmull
cs
dec
pop
adc
aaa
mov
and
mov
xchg
lods
das
pop
pop
adc
sbb
data16
mov
lock
push
andl
mov
pop
fdivrs
push
mov
shrl
jmp
clc
xor
jge
imul
mov
sub
sub
mov
or
mov
or
xlat
or
pop
inc
mov
sbb
ret
scas
dec
aam
fistps
pop
flds
add
cmovp
es
inc
out
mov
xor
mov
mov
int3
dec
sbb
fimull
jae
push
add
sub
mov
mov
add
jne
pop
in
sub
popf
icebp
clc
adc
and
ljmp
mov
push
jmp
mov
cmp
jge
das
pop
xchg
and
mov
mov
dec
add
sub
xchg
pop
add
xchg
pop
push
aas
jmp
and
mov
ud0
pop
push
dec
add
in
fucomp
popf
jne
jmp
pop
cmp
rolb
pop
ja
test
pop
add
aad
icebp
jne
push
push
adc
daa
adc
nop
jae
add
je
mov
rorl
fldt
into
inc
add
xchg
add
dec
jns
mov
mov
adc
orb
cmpsb
bound
pop
into
mov
mov
mov
mov
das
aaa
mov
mov
pop
stc
xchg
mov
inc
sbb
jmp
or
adc
int
or
ret
push
in
adcl
push
decl
inc
adc
mov
mov
cltd
or
xchg
pop
jne
xchg
cmpsl
mov
mov
es
mov
clc
mov
fcmove
pop
mov
dec
pop
mov
xchg
jno
sub
xchg
mov
mov
sbb
sbbl
lock
cmc
sbb
sbb
pop
mov
pop
mov
in
sub
or
cmp
push
xor
xlat
sbb
addr16
es
inc
add
dec
outsl
pop
and
add
loope
or
or
push
push
loope
fsubrs
xor
rcr
add
push
mov
push
pushf
push
add
lods
push
add
mov
lcall
add
pusha
rcrl
je
mov
adc
fsubl
adc
mov
loope
push
add
lds
arpl
icebp
mov
xor
or
push
jle
push
sub
add
push
in
sub
rorl
bound
arpl
ret
sub
or
inc
movb
push
add
dec
push
push
mov
push
mov
std
cltd
push
lret
adc
pushf
mov
sbb
xchg
clc
hlt
push
push
push
push
pop
lcall
pop
and
repnz
cs
jnp
aam
bound
repz
gs
add
adc
shrb
sahf
push
inc
pop
inc
adc
xchg
cmp
nop
mov
sbb
dec
leave
test
jne
mov
pushf
lret
movsl
ss
enter
mov
inc
shr
mov
sbb
clc
push
movsl
or
xor
xor
dec
sbb
sbb
test
push
sbb
dec
ja
sub
fmul
rclb
sub
xor
pushf
je
cmp
orl
scas
jne
pop
jmp
inc
inc
mov
sub
cmc
mov
cmp
fnstsw
add
sbb
add
mov
pop
mov
jns
ds
push
adc
and
gs
out
push
jecxz
pop
outsl
arpl
jg
pop
ret
test
leave
sbb
add
jmp
out
adc
sbb
or
inc
adc
rolb
call
mov
scas
aad
jge
lods
in
xor
push
loopne
dec
pop
dec
dec
sbb
add
adc
push
jne,pt
push
arpl
hlt
test
in
cmp
mov
jle
sub
pop
or
dec
mov
movsl
push
stos
jne
or
mov
les
xor
loopne
sbb
iret
test
ret
jp
mov
xor
std
push
mov
jne
and
or
test
push
mov
add
jne
xchg
mov
inc
adc
pop
test
sub
mov
push
mov
mov
les
push
pop
fs
jns
cmp
inc
inc
imul
pop
xlat
jmp
xor
insb
adc
xchg
mov
arpl
adc
sub
cs
test
je
adc
adc
pop
ror
adc
mov
enter
shlb
pop
sbb
les
cmp
fwait
ljmp
pop
aaa
call
fdivrl
or
vunpckhps
sub
add
push
adc
mov
leave
bound
xchg
enter
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsb
dec
pop
pop
xor
aas
mov
jo
test
cmp
pop
pop
lcall
or
shll
cmp
jecxz
jne
or
lock
mov
fidivs
mov
push
jmp
ror
xchg
inc
mov
and
setl
and
add
leave
jnp
add
dec
dec
movsl
jl
cwtl
mov
repz
loopne
xchg
mov
rol
add
adc
mov
adc
push
mov
outsl
pusha
cmc
sub
lock
mov
mov
sub
cmp
in
mov
lods
mov
pop
rcrl
mov
enter
and
je
push
push
and
sbb
les
test
push
shl
mov
test
jbe
jp
int3
mov
xchg
jo
aaa
add
jne
cmp
mov
pop
icebp
jne
lcall
xchg
adc
add
xchg
loope
notl
adc
pusha
pop
repnz
addb
inc
jo
sar
sbb
and
in
xchg
enter
push
stos
lock
int
ds
xchg
sub
call
jb
mov
mov
adc
xor
inc
dec
sbb
jns
sahf
data16
loopne
loope
cmpsb
movsl
rolb
enter
loopne
inc
push
fs
lret
sbb
in
in
add
pop
enter
add
sub
testl
sti
sbb
inc
push
loope,pt
dec
cmp
sbb
aaa
shrb
sarb
add
lock
mov
jl
in
pop
mov
stc
inc
xor
mov
stc
pop
push
leave
test
pop
pop
push
push
mov
movsl
ljmp
arpl
inc
and
popa
dec
ficoms
xchg
mov
pop
fs
lcall
les
int3
lods
inc
idivl
push
pop
and
cmp
mov
enter
jp
in
and
mov
add
sbb
add
push
push
add
push
hlt
jge
inc
mov
les
sbb
pop
int
sbb
lahf
fadd
lods
push
lods
or
stc
pop
or
or
jo
fmulp
pushf
mov
mov
or
in
sbb
lds
popa
movsb
mov
dec
rep
mov
ds
loopne
mov
or
push
pop
add
sbb
add
sbb
adc
mov
push
pushf
sti
les
add
push
add
repz
dec
sbb
xchg
enter
mov
rcrl
scas
jecxz
fstps
push
jo
rol
pusha
add
arpl
adc
int3
sub
adc
fs
mov
aam
imul
movsb
xor
push
mov
cmpsl
cwtl
push
xlat
mov
arpl
dec
rorb
sub
lahf
mov
inc
fmul
cli
lock
mov
dec
je
sub
push
dec
mov
add
xor
or
or
mov
xor
push
xor
pop
xor
cmp
push
adc
into
les
lea
inc
pop
addb
mov
mov
vmulps
pop
dec
and
jnp
bound
lods
and
or
mov
xchg
popa
inc
mov
or
or
popa
addl
or
lret
push
sbb
inc
jmp
adc
data16
push
dec
in
inc
inc
cmp
sbb
loopne
dec
push
mov
movsl
test
dec
and
loop
rcr
mov
mov
inc
jg
xor
inc
sbb
jns
or
xchg
jge
loop
add
cmp
mov
and
arpl
push
dec
xor
fistps
lea
sub
aas
push
cmc
cmp
jmp
xor
es
pop
add
cmp
sbb
xlat
xor
mov
fidivrl
jns
cmp
inc
inc
dec
push
orl
sbbb
shl
push
push
or
push
outsl
out
jbe
inc
cld
jl
sbb
jbe
lock
cmp
or
or
mov
outsl
pop
lea
movsl
sub
adc
pusha
xchg
icebp
pop
lcall
add
xor
xchg
int
ret
pop
or
pusha
lock
nop
xchg
push
mov
dec
out
mov
and
jne
xor
fidivrs
mov
fsubs
sbb
adc
adc
or
cmp
add
sbb
or
clc
loop
push
cmp
push
mov
int3
inc
xchg
push
push
xchg
int
xor
add
push
in
cli
std
or
or
or
in
cmp
addr16
dec
xor
push
sbb
cmpsb
xor
pop
and
or
add
sub
or
aad
or
shll
add
inc
cmp
jl
and
sbb
sub
std
mov
add
je
insb
xchg
out
movsb
add
sub
adc
fnstcw
rorl
test
repz
imul
clc
inc
inc
sbbb
cmp
fimull
pop
and
mov
sar
add
and
ja
inc
pop
adc
ljmp
lcall
popa
mov
dec
cmp
add
in
push
push
inc
mov
dec
nop
or
sub
orb
rclb
xchg
jbe
fs
mov
pop
xchg
xor
loop
cmpsl
adc
pushf
xor
ss
push
adcl
dec
addl
jo,pt
sbb
mov
pop
sahf
cltd
outsb
cmp
pop
pusha
sub
mov
inc
int3
sahf
add
jns
je
sub
orl
in
jg
lret
js
and
pop
cmp
jl
xor
leave
pop
push
mov
into
rolb
jp
lret
nop
cmp
dec
lock
dec
pop
fisubrs
xor
push
jns
dec
push
cmpb
es
jl
push
insb
push
pop
enterw
jl
sahf
aam
daa
fnsave
std
dec
mov
push
pop
je
in
sub
mov
cmp
jecxz
pop
inc
cmp
xchg
loopne
jmp
or
xor
xor
mov
loope
testb
or
jns
pop
imulb
rcrl
push
dec
sbb
jb
loope
xchg
je
sub
dec
int
stos
xor
in
mov
outsl
lock
jne
pop
notl
stos
les
mov
or
dec
push
jge
lret
pop
lds
lea
sub
cs
mov
pop
sub
xor
mov
rclb
mov
xchg
mov
inc
clc
das
jecxz
or
stc
rcrl
pop
inc
mov
nop
xor
mov
js
add
ss
pop
add
imul
test
aaa
cld
or
cld
push
lock
push
imul
or
lock
es
clc
mov
and
gs
test
and
sbb
jns
je
shl
pop
cmp
andl
sub
inc
or
pop
addr16
leave
push
add
push
lods
mov
mov
loopne
jle
xor
add
stc
bound
and
enter
sub
shll
mov
push
ret
sub
test
in
cmpsl
sti
adc
mov
jg
fldt
xchg
out
mov
push
or
xor
insl
popa
popa
and
pusha
jae
or
in
jge
add
adc
mov
and
cmp
xchg
arpl
sbb
arpl
mov
in
popa
cmp
xor
push
cmp
das
popa
ret
mov
data16
fcoml
jle
aas
jne
data16
jmp
test
fnstsw
stos
movsl
imul
scas
or
test
aas
decb
call
pop
adc
and
fldenv
push
frstor
add
pop
lcall
xor
inc
insb
sbbb
je
insl
loope
or
call
mov
rolb
push
sub
int
fistl
cmp
aad
pop
jne
push
jmp
cmp
ss
xchg
mov
adc
sbb
mov
lock
test
jbe
add
adc
sub
push
inc
in
xor
movsb
sbb
pusha
inc
and
and
rcrb
test
inc
dec
pusha
adc
scas
xchg
pop
lret
loopne
stos
mov
adc
mov
nop
push
push
das
cmpsb
rcr
mov
mov
and
mov
mov
mov
mov
jge
pop
cmpsl
add
mov
jge
aam
add
xor
pusha
sbb
cmp
shl
push
lcall
in
xor
mov
pop
add
into
jae
das
jge
iret
mov
dec
lds
in
jne
add
jne
movsb
sbb
push
pop
and
or
inc
or
movsl
fscale
pop
add
xchg
inc
movsb
subb
scas
std
adc
dec
and
xchg
ret
fdivrl
mov
cmp
fwait
sbb
mov
or
mov
sub
mov
pop
push
jmp
cs
packssdw
mov
sbb
add
adc
or
adc
cmp
mov
add
jp
adc
shrb
popa
add
rorl
mov
cmc
or
and
or
mov
mov
popa
popf
sub
push
sbb
push
lea
ja
mov
dec
sub
and
inc
adc
dec
lods
sub
or
sbb
loopne
xor
adcl
and
sub
and
cmp
and
xchg
xlat
and
pop
insl
push
cmpsl
push
or
stos
loopne
xor
in
and
add
adc
mov
leave
cmp
push
xchg
add
sub
adc
fimull
xchg
jmp
test
test
insl
sub
mov
jne
ret
jno
jns
fcom
dec
lahf
pop
mov
inc
rorl
jmp
or
outsb
adc
or
fs
imul
loopne
popa
sub
lock
rorl
adc
and
pop
mov
popa
jmp
mov
call
and
clc
lret
lock
adc
out
push
rcrb
inc
sbb
or
or
sub
and
jmp
inc
mov
dec
or
jg
cmpl
popf
shrb
or
or
cmc
and
ja
pop
add
add
jl
jl
movl
push
inc
dec
push
cmpl
lahf
sub
xchg
repz
ror
lock
and
pusha
cmp
pusha
add
test
scas
ds
icebp
or
iret
adc
ds
lods
jmp
inc
lahf
insl
add
adc
repz
call
cmp
jl
push
push
push
cmpb
add
mov
or
xor
push
inc
mov
or
sub
daa
xor
inc
mov
cli
lea
mov
mov
insl
bound
push
xchg
mov
mov
inc
or
dec
add
xchg
pop
fs
filds
mov
push
add
jnp
xor
ret
push
das
stc
or
inc
xchg
inc
ds
mov
lahf
push
repnz
xchg
aam
mov
and
cmp
and
jne
ret
add
push
xchg
test
xchg
sub
jbe
jno
sub
pop
push
dec
je
xorb
inc
xchg
mov
es
movsb
lock
sbb
add
inc
cmp
push
push
sub
cwtl
or
sbb
out
out
mov
xchg
test
fsubl
xchg
or
push
test
sbb
mov
push
test
push
and
icebp
inc
pop
es
pop
in
jne
mov
adc
jbe
mov
movsb
add
lods
inc
sub
mov
pop
test
loope
adc
mov
in
or
frstor
pop
loopne
xchg
fdivr
sahf
add
push
test
jecxz
push
sbb
sbb
lea
jmp
lock
ja
inc
add
mov
sahf
iret
dec
or
and
pop
in
add
push
and
pop
xor
cwtl
pop
jb
iret
sub
mov
dec
pop
push
adc
popa
and
mov
loopne
cmp
inc
gs
jecxz
aad
dec
or
inc
xor
sar
fcoml
push
or
push
lret
push
push
push
outsb
pusha
push
push
xor
or
loopne
sbbb
adc
pushf
insl
pushl
jo
adc
adc
or
pop
push
push
enter
sub
test
hlt
dec
or
push
js
rorl
dec
push
cli
add
stos
adc
push
pushf
or
sbb
cs
dec
mov
jle
sbb
add
push
push
roll
test
inc
jb
je
shlb
mov
or
add
add
push
adc
adc
mov
xchg
movsb
ds
or
mov
mov
adc
inc
shl
aaa
jo
test
mov
data16
jae
push
inc
test
test
test
loopne
adc
and
jmp
add
lock
inc
sbb
fcoms
das
mov
enter
mov
lahf
popa
mov
add
in
dec
movsl
movsl
stc
adc
mov
ja
js
in
adc
sbb
orb
xlat
popa
add
adc
push
iret
jo
and
mov
pop
adc
subl
rolb
call
aaa
je
subb
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
loope
inc
ljmp
nop
and
in
test
sbb
in
addl
adc
inc
frstor
js
mov
push
inc
adc
adc
lret
xchg
adc
jne
rcr
dec
movsl
adcl
fcom
mov
or
fsubrs
jg
nop
cli
xchg
sub
mov
dec
in
fadd
dec
fcoms
lret
fcoml
aas
sbb
mov
cwtl
xor
inc
int
data16
push
push
add
negb
adc
ret
out
xchg
out
mov
push
pop
gs
inc
mov
xchg
stos
sub
xor
les
push
pop
shll
jbe
fsts
movsb
and
adc
or
push
or
and
sbb
and
add
cmp
sarb
icebp
test
push
cmp
xchg
fdivl
test
loope
adc
xor
sarl
pop
loop
nop
mov
push
mov
or
leave
lods
rorb
push
push
xor
or
mov
or
adc
pop
push
shl
inc
add
mov
or
inc
pusha
call
es
inc
adc
cmp
or
cwtl
sub
mov
mov
ror
dec
add
out
imul
cmp
push
cmp
lea
adc
adc
and
shll
fcoml
mov
add
push
shrb
and
jl
aam
sbb
push
pop
push
cwtl
movsb
cmp
stos
mov
nop
push
adc
and
add
inc
lret
mov
sbb
test
mov
xchg
mov
or
mov
and
test
jbe
out
push
mov
mov
xchg
jb,pt
mov
push
mov
push
enter
mov
push
jb
mov
and
shl
mov
mov
mov
cs
movl
test
movzwl
pop
mov
pop
sbb
mov
sbb
add
add
jl
cmp
nop
jecxz
pop
jno
aam
mov
sbb
mov
add
nop
push
cmp
fnsave
and
iret
iret
mov
xchg
rolb
mov
movsl
jl
jge
sbb
adc
dec
imul
incl
inc
cwtl
addb
cmpl
xor
cmp
rolb
movb
push
popf
hlt
or
cmpb
xor
clc
rcl
clc
leave
and
enter
sti
add
mov
imul
mov
popa
popf
xor
and
add
push
movsl
or
mov
add
pop
inc
repz
test
push
shlb
sbb
sbb
movsb
xlat
add
dec
xor
cmp
fst
jle
fcomp
adc
ljmp
or
loopne
add
adc
jmp
cmpb
mov
adc
push
out
fimull
push
out
nop
cmp
fxch
rol
mov
movsbl
dec
xlat
dec
sub
lret
dec
mov
jb
jbe
push
paddb
mov
outsb
push
mov
daa
gs
addb
dec
xor
mov
inc
jge
xor
push
mov
insb
sbb
loopne
sbb
push
jmp
sbb
inc
pop
add
xchg
loope
and
sbb
add
jle
fcomp
daa
movsb
add
andl
cmpl
in
repz
lret
sub
in
mov
dec
cmp
mov
mov
scas
xlat
pop
sub
push
mov
shlb
mov
subb
fldcw
call
sub
jbe
inc
hlt
xor
ds
out
jl
xor
push
xchg
inc
push
push
shrb
hlt
dec
ja
repnz
jg
ficoms
pop
repnz
ss
repnz
pushf
pushf
pushf
pushf
add
pushf
pop
or
or
jnp
outsb
outsb
outsb
or
jmp
or
jno
jmp
push
jmp
outsb
outsb
outsb
outsb
por
jmp
adc
pop
adc
push
outsb
outsb
outsb
outsb
adc
dec
adc
dec
adc
aas
outsb
outsb
outsb
outsb
pop
jmp
sbb
xor
jmp
outsb
outsb
outsb
outsb
sbb
es
and
pop
and
jmp
and
or
adc
and
and
test
sarl
pop
lcall
dec
or
popf
shl
add
add
icebp
lock
sahf
out
sahf
and
dec
jns
out
push
pop
gs
jb
jns
out
jl
xchg
nop
xchg
lcall
jns
mov
mov
out
int3
rcl
aas
js
loopne
ljmp
push
pop
or
and
dec
add
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
cmp
push
ss
inc
xchg
jmp
outsl
add
mov
inc
les
popfw
mov
add
flds
sub
aam
ret
fsubrl
add
push
sub
xor
je
or
rolb
aam
adcl
push
pusha
out
mov
pop
add
sti
pop
dec
mov
lea
cltd
jnp
sbb
mov
mov
decl
test
inc
shl
cmpsl
cmp
inc
xchg
dec
push
or
leave
clc
push
adc
outsl
push
mov
mov
shlb
jne
daa
lret
add
adc
bound
fdivrl
frstor
xchg
jb
clc
popa
jae
xchg
shll
inc
mov
inc
xchg
faddl
rolb
rcrl
sbb
iret
cltd
sub
add
mov
fstps
dec
loopne
push
fcompl
mov
sahf
xchg
push
sub
xchg
popf
adc
and
jmp
cmp
jecxz
xor
inc
jge
xchg
lods
inc
in
cmc
jl
push
add
fidivrl
cmp
leave
adc
shll
ret
push
addb
cli
bndstx
pop
jne
cltd
add
sub
inc
jmp
sub
pop
cltd
pop
sbb
sbb
shr
das
pop
pop
inc
add
xchg
or
add
shll
stos
sbb
ficoms
fcomip
je
addr16
mov
cmp
ss
popa
insl
xchg
in
adc
ds
jle
dec
sub
lea
add
jae
rclb
inc
daa
movsb
jmp
inc
sbb
fwait
and
js,pn
ret
in
push
leave
xor
pop
cmpsl
and
into
lods
in
cmp
jbe
mov
push
jle
sbb
sbb
idivb
mov
sbb
mov
rorb
pop
es
inc
je
out
scas
ds
cltd
leave
idivb
xor
mov
push
or
test
addr16
lret
enter
int3
push
rolb
mov
stos
mov
cmp
dec
dec
xchg
or
sbb
lock
or
inc
or
jae
xor
mov
lcall
insb
push
fs
out
addb
add
jb
ret
push
subb
cmpl
push
and
clc
loope
test
pop
pop
jns
sbbb
andl
nop
mov
inc
or
js
aam
push
or
stos
xchg
mov
test
insl
sub
insb
pusha
lret
insl
fdivrl
push
enter
imull
lds
nop
mov
out
and
lock
popf
add
enter
call
add
mov
mov
xchg
pop
inc
or
adc
sbb
or
fwait
repz
lret
out
push
addl
pop
test
scas
push
xor
pop
mov
add
push
imul
xchg
jl
or
test
in
and
insb
ljmp
push
in
add
and
sub
or
xchg
mov
push
inc
cmovo
repnz
and
lea
mov
and
mov
sbb
adc
jl,pn
dec
inc
sbb
fwait
sub
ret
fcoms
lcall
cmp
fbstp
es
lea
cmp
dec
js
push
pop
jg
and
or
js
and
jl
js
sbb
pop
cmp
aad
or
xor
cmpb
jne
sbbl
outsl
or
icebp
jl
dec
adc
in
out
mov
insl
mov
test
jae
ds
pop
dec
lcall
pushf
jmp
outsl
mov
test
cmp
jae
lar
shlb
fcoml
jge
lea
fwait
adc
js
inc
test
dec
jmp
or
aam
insb
mov
push
inc
in
ss
rcrb
mov
cltd
xor
cmp
and
cmp
dec
sbb
sub
rcrl
cs
mov
mov
jbe
es
and
ret
cmp
add
pop
test
mov
test
add
dec
enter
fwait
pop
insl
dec
test
es
pop
or
add
js
jne
aad
fsubrs
and
clc
gs
and
mov
xor
ficoml
mov
mov
js
dec
push
add
jmp
sbb
pop
sub
jle
and
fcomip
movsb
rcll
mov
mov
jbe
add
pop
xchg
and
add
aaa
addr16
in
pop
or
cltd
sub
popa
mov
inc
stos
inc
push
add
outsb
sbb
lock
test
pop
mov
add
fistpl
push
sbb
sub
add
xchg
adc
or
and
std
test
fistpl
sbb
sbb
cwtl
mov
sub
mov
cli
add
ja
sbb
sbb
push
or
out
imul
rolb
sti
push
jmp
js
jmp
cmp
pop
jle
pop
test
clc
push
jne
inc
dec
pop
pop
xor
insb
and
jns
sub
clc
jbe
and
xor
mov
pop
neg
pop
or
push
and
jne
push
movsb
loopne
pop
pop
push
out
cmp
cmp
mov
enter
cmp
sbb
outsb
imul
push
or
jae
push
mov
jmp
cmp
jmp
adc
sub
or
mov
push
sbb
jg
insl
push
push
inc
mov
or
inc
push
jno
outsb
push
xchg
xor
repz
iret
dec
jae
lea
lock
inc
call
sbb
stos
and
call
cmp
and
cmp
push
cmp
push
ja
push
lds
and
push
cmp
and
pop
orl
ds
ret
pop
inc
les
out
js
mov
loop
scas
cmovl
dec
daa
inc
and
jnp
mov
mov
push
scas
pop
shll
es
jmp
inc
xchg
and
daa
adc
push
mov
push
aaa
getsec
je
xchg
cld
xchg
and
dec
adc
mov
xor
and
mov
test
clc
and
push
ljmp
add
jmp
rolb
push
inc
xrelease
mov
push
add
mov
xor
cmpsb
mov
pushf
int
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
add
xchg
mov
sbb
mov
xchg
pushf
lcall
mov
movb
sbb
pop
mov
pop
mov
xor
xor
push
cmp
dec
movsl
in
lods
mov
xchg
cld
cmpl
test
xchg
sbb
adc
out
or
inc
dec
pop
les
dec
dec
cs
rcl
mov
add
xchg
jecxz
daa
push
sbb
push
pop
push
xchg
loope
mov
and
cmpsb
jmp
xchg
call
push
mov
data16
mov
fsubs
mov
and
rcrl
sbb
mov
mov
xor
inc
jmp
outsb
out
cmpsb
ss
push
push
mov
or
test
mov
sub
ljmp
das
je
mov
mov
sub
push
pop
sbb
and
adc
push
ja
dec
mov
test
sbb
ja
aaa
nop
inc
in
push
and
into
inc
jnp
sub
lock
lock
adc
lcall
cmpsl
xchg
jecxz
mov
les
je
xchg
pop
add
mov
xchg
inc
dec
jecxz
push
mov
mov
pop
jecxz
pop
nop
flds
and
xchg
inc
popa
in
or
cmp
ds
xor
cmpsb
pusha
lds
lret
rorb
cmp
xchg
or
dec
xchg
pop
sub
movsb
add
mov
ss
and
dec
dec
push
loope
or
out
dec
push
imul
fdiv
xchg
bound
popl
imul
xor
adc
popa
mov
dec
scas
fs
inc
inc
xor
enter
fiaddl
inc
push
inc
sbb
hlt
push
out
push
adc
or
out
sub
sbb
xor
xor
lds
jg
mov
xor
and
leave
inc
hlt
fsubrs
cmp
push
mov
add
aam
insb
xchg
aaa
pusha
adc
leave
xor
das
add
iret
lea
enter
and
and
nop
adc
fcompl
jno
mov
xor
je
inc
push
ljmp
cmpsb
imul
pusha
stos
dec
jp
mov
add
mov
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
dec
insl
mov
movb
push
or
inc
mov
push
cltd
mov
xlat
out
mov
mov
pop
pusha
out
sbb
or
jle
add
cmp
or
enter
outsl
jecxz
inc
mov
push
mov
adc
pop
ds
xchg
push
push
inc
fstpl
movsb
mov
vunpckhps
inc
xchg
clc
pop
add
xchg
loope
enter
mov
push
loope
dec
dec
sub
mov
addr16
jbe
arpl
sbb
adc
cmp
fisubs
cmpb
mov
gs
les
fdivrs
pop
cmp
je
cmp
pusha
xor
dec
and
push
inc
pop
xchg
jp
roll
fnstsw
arpl
xchg
adc
outsb
and
fimull
notl
mov
scas
mov
or
cmpb
js
xor
xchg
or
ret
lods
xchg
mov
and
push
jp
or
lea
shll
sbb
inc
bound
pop
xchg
sbb
xlat
push
mov
or
add
or
sbb
imul
cmp
movups
and
ret
and
js
adc
xchg
addr16
mov
xlat
xor
and
testb
aaa
add
movzbl
ret
push
xorb
ret
jle
or
push
lods
rorb
repnz
xorb
cmp
mov
insb
mov
pop
push
shrb
or
les
add
stc
sub
mov
lea
add
inc
cs
shlb
adc
cld
scas
cmpsb
cmp
sub
push
cmp
jge
mov
sbb
inc
inc
les
jmp
fstpt
pop
mov
lods
loop
loopne
push
lret
xor
lahf
shlb
pop
mov
clc
clc
cld
and
mov
inc
add
push
add
add
add
add
jnp
xor
dec
ret
xor
lcall
xor
adc
cmp
dec
or
mov
shr
push
pop
push
dec
loopne
lret
ljmp
xor
sbb
orl
and
mov
aad
andl
push
cli
or
cmpsb
adc
mov
enter
adc
je
dec
test
fidivl
add
out
loop
fcoms
push
loope
out
xchg
repz
inc
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
into
adc
jnp
add
xor
add
ret
dec
sbb
fildl
sbb
inc
xor
ret
cltd
idiv
inc
inc
imul
push
clc
jb
imul
cmp
xchg
dec
je
cmpsb
loopne
popa
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
movsb
cmp
je
cmpsl
mov
jbe
push
fidivrl
jmp
daa
pop
out
icebp
hlt
icebp
adc
aaa
sarb
in
clc
jae
mov
mov
pop
outsb
gs
int
mov
jae
sbb
mov
aas
pop
jne
mov
inc
fisttps
jns
sub
mov
je
cmp
loop
xchg
add
cmp
inc
jne
scas
shll
into
and
pop
xchg
add
shl
lods
or
fisubrs
add
cmp
clc
and
cmp
jne
mov
push
push
sub
and
or
std
cmp
jne
mov
dec
cmp
add
incb
add
inc
push
push
and
xchg
jo
xor
or
sub
jmp
jp
jl
or
jg
movsl
std
adc
jmp
popa
data16
jae
push
jmp
inc
jl
inc
jg
aaa
movsb
fucomp
mov
shl
dec
mov
sub
mov
inc
addr16
mov
aaa
adcb
outsl
adc
test
je
imul
and
clc
push
lret
das
sbb
or
loopne
icebp
fs
mov
cmc
loope
mov
sahf
movsl
js
add
push
pushl
sub
xor
mov
jge
incl
jl
pusha
mov
jg
push
cmpsb
jmp
popa
fs
imul
mov
push
jge
mov
add
cmp
lods
ret
lcall
xchg
jbe
dec
sub
out
inc
pop
xchg
aaa
mov
mov
daa
das
jge
push
pop
das
js
mov
movsb
xor
xor
fsubs
inc
cmpb
jge
add
add
mov
idivb
lahf
clc
push
mov
push
out
jmp
xor
inc
ret
and
inc
int3
int3
mov
dec
mov
push
dec
sub
js
aam
scas
sub
pop
mov
jnp
pop
push
adc
cmp
cmp
repz
ret
xor
jno
xor
add
cmc
cmp
lock
ret
daa
jne
cmpsb
pcmpeqb
ss
or
fcmovnbe
das
inc
fnstsw
mov
xor
arpl
xchg
add
icebp
fists
jne
mov
mov
cld
stos
int3
in
cmovno
or
inc
and
lidtl
add
pop
adc
cmp
pop
sub
dec
jne
leave
or
roll
mov
orb
adc
test
lock
sbb
sbb
add
inc
push
xor
shl
lea
push
fcmovu
xchg
add
xchg
cmpsl
call
mov
orb
pushf
inc
test
aas
sbb
push
xorb
jbe
addl
jne
add
js
add
lods
and
push
js
pop
push
add
sub
or
pusha
xchg
ret
inc
inc
ret
pop
data16
adc
mov
adc
sub
and
lods
mov
lea
pop
mov
add
ljmp
imul
subb
icebp
jmp
shlb
rolb
xorb
mov
xchg
adc
repnz
sbb
inc
xchg
sbb
shll
sub
into
adc
or
dec
cmp
jle
or
jl
fadds
in
lcall
sbb
dec
pushf
adc
jae
mov
jne
push
movb
xor
xor
add
cmpsb
jge
jmp
inc
incl
cmp
pop
pop
push
incb
inc
pop
insb
cmp
nop
cmp
pusha
call
movsb
xchg
push
xor
xchg
sti
jnp
push
mov
popa
xor
pop
stc
cmp
xchg
and
inc
nop
add
and
xchg
inc
ds
cmp
outsb
push
jecxz
call
push
lret
popa
lds
mov
adc
js
sub
adc
mov
loopne
cwtl
inc
xchg
outsl
inc
movsl
add
pusha
sub
or
andl
leave
sbbb
sub
pop
repnz
pop
mov
adc
jge
orb
pop
jne
ret
or
mov
pop
imul
test
jmp
push
add
xlat
mov
xor
sbb
pop
dec
ret
pop
in
mov
dec
in
mov
fdivrl
add
lods
sbb
mov
xlat
mov
rcrl
mov
lods
or
dec
cmp
rcll
xchg
aam
push
xchg
test
movsl
pop
xchg
in
mov
lea
addr16
out
fs
rolb
cmp
sub
dec
imull
pop
sahf
sbb
loope
jecxz
jbe
pop
repnz
lret
or
cwtl
jnp
or
arpl
bound
rep
pop
inc
mov
add
and
dec
shrl
lock
mov
add
mov
or
loopne
mov
dec
dec
and
sub
inc
inc
jne
xchg
dec
mov
enter
mov
jae
inc
push
jp
inc
pop
inc
mov
ret
fs
insb
je,pt
jo
or
cmpsb
push
push
mov
jecxz
sbbl
rcrb
add
cmp
push
mov
inc
sbb
inc
xchg
fisttps
xor
or
lods
imul
and
lock
cld
sub
mull
add
add
mov
xchg
jne,pt
xlat
cmp
insb
shlb
lret
push
lock
jo
jo
push
jnp
out
xor
push
dec
rcll
jp
int
jmp
xchg
pop
pop
inc
addr16
push
push
ja
dec
loopne
push
cmpsl
sub
es
xchg
sub
popa
mov
call
inc
cmp
shlb
push
sub
fisubs
and
jmp
xchg
add
imul
je
xchg
outsb
dec
xlat
cwtl
arpl
jle
aam
stos
sub
insl
test
leave
push
mov
sahf
push
sbb
hlt
mov
push
jae
ret
mov
sbb
lock
xor
cmp
jb
jno
aas
push
mov
aad
mov
mov
cmp
lcall
adc
xor
or
add
mov
add
xchg
hlt
cmp
loopne
call
xchg
mov
dec
pop
adc
ljmp
mov
xor
cmc
push
jne
add
jecxz
and
push
test
scas
cmp
pop
dec
adc
loope
andb
addr16
inc
icebp
adc
rclb
cld
minps
cltd
sub
dec
cmpb
inc
xor
pop
mov
inc
push
scas
push
inc
addl
cltd
jg
hlt
mov
pop
fdivrl
mov
and
in
sub
cld
inc
add
inc
ret
mov
push
mov
sub
cmp
sub
cmp
push
fisttps
or
in
sbb
les
and
dec
xchg
iret
movsb
movsl
lods
inc
into
clc
push
add
inc
lds
in
pop
and
and
dec
aas
add
add
mov
inc
add
adc
sbb
test
test
xorl
int3
cmp
aaa
mov
mov
inc
in
mov
pop
xchg
xor
fucomi
aaa
jmp
cmp
jne
sbb
int3
cs
push
bound
pslld
iret
clc
lret
jle
sbb
mov
sbb
adc
inc
out
data16
iret
fstpt
pop
adc
leave
mov
into
je
mov
enter
jmp
ja
jmp
mov
iret
lods
sub
sub
sbb
fldpi
or
pop
or
cmp
xchg
adc
adc
lret
and
lods
sub
sub
mov
push
pop
xchg
in
jmp
push
dec
dec
inc
vcomisd
mov
out
mov
and
ret
addr16
scas
lock
adcl
dec
inc
sbb
imul
cmc
je
outsb
cmp
or
into
sub
insb
fists
mov
int
movsb
push
or
or
xchg
xor
ret
and
adc
or
cmp
adc
lock
mov
push
ja
mov
push
sub
or
sahf
pushf
fstpt
and
push
dec
xor
and
daa
push
xchg
jecxz
scas
lea
jns
in
push
push
rcl
xor
test
cmp
lock
loop
das
jl
add
bound
mov
sbb
sbb
push
sub
add
sbb
gs
xchg
mov
or
sbb
push
mov
mov
push
pop
or
push
mov
repz
addr16
rcrl
or
mov
data16
call
add
xchg
addb
pop
enter
sbb
cmp
out
stos
cmp
test
push
and
add
mov
sbb
imul
jl
push
or
daa
aas
adc
xchg
push
ret
mov
push
or
adc
inc
inc
daa
daa
pop
jb
xchg
inc
inc
jnp
out
add
mov
sub
lahf
and
add
add
cwtl
or
arpl
mov
xlat
push
push
jno
mov
or
xor
punpckhdq
test
adc
test
loopne
mov
adc
push
in
or
lods
adc
arpl
and
mov
adcb
inc
add
xor
xchg
or
add
inc
popa
inc
leave
call
and
inc
jbe
push
or
pop
pop
js
and
ficompl
rolb
and
inc
cmp
pusha
add
loop
inc
cmp
inc
adc
and
imul
mov
dec
inc
lahf
lcall
and
gs
ss
lock
sarl
adc
shrl
fs
sub
sub
xchg
fisttpl
js,pt
and
pushf
mov
adc
call
mov
cmp
sahf
outsb
or
out
and
popa
cmp
cwtl
ficoms
loopne
pusha
inc
loopne
daa
inc
in
pop
push
ret
sbb
idivb
loop
jae
add
cwtl
jecxz
mov
inc
sbb
loopne
ret
ret
divl
or
aaa
inc
and
andl
lods
adc
lods
xchg
xchg
loop
adc
adc
lds
inc
cmova
pop
jmp
mov
sar
rorb
adc
or
popf
adc
push
adc
sub
and
push
subl
je
dec
loop
hlt
adc
and
out
icebp
lahf
xchg
xor
dec
mov
movl
aas
jo
adc
enter
or
or
fisttpll
sub
or
sbb
int
dec
dec
in
adc
mov
ja
fdivr
push
xor
and
loopne
mov
rorb
in
push
fimull
cld
or
sbb
dec
sub
lock
popf
subl
xchg
and
cwtl
adc
and
or
or
fsubrp
fs
addr16
mov
and
jo
mov
ret
mov
call
cwtl
loope
sub
add
fs
cmp
xchg
adc
cmp
sub
cmp
sbbl
pusha
sub
aaa
cmp
inc
jne
pop
push
jae
adc
outsb
jmp
add
mov
pop
cltd
mov
pushf
jo
push
popa
push
inc
loop
mov
xor
xchg
xor
adc
cs
fmuls
or
lea
push
sbb
daa
loopne
mov
and
rcl
inc
xchg
or
int
cmp
pusha
sbb
mov
stos
mov
in
rclb
jge
push
arpl
rol
dec
sub
sti
push
xor
dec
movsl
inc
push
in
or
adc
and
xchg
adcb
fstpt
cmp
jge
in
mov
js
mov
push
inc
sub
loopne
jno
sub
call
arpl
push
shl
pop
pop
mov
mov
push
loopne
jp
pop
jmp
sarb
pushf
jne
repz
push
sub
sbb
push
pop
outsl
dec
ljmp
mov
push
pop
mov
add
inc
insl
test
sub
out
jae
cmp
pop
mov
cmp
jnp
int3
add
pusha
push
fyl2x
movsb
sub
push
jb
outsb
bnd
add
mov
insb
aaa
nop
mov
mov
shl
lcall
mov
ret
rep
adc
data16
xor
divb
inc
jo
cmp
push
pop
adc
jb
mov
xor
les
and
sbb
or
ja
mov
pop
pusha
inc
pop
jg
sub
mov
push
imul
adc
cmpsl
dec
jae
cmp
push
jo
shll
xor
jb
sbb
clc
sti
jg
push
or
loope
decl
lods
and
aam
cmpsb
lcall
push
rorl
or
pop
mov
add
inc
call
cs
jnp
add
or
cli
mov
inc
daa
test
cs
jne
xor
pop
xchg
lds
add
sub
mov
shrb
pushf
adc
pop
js
inc
sbb
or
imul
push
loopne
dec
sarb
insl
loopne
jle
add
out
imul
jg
gs
icebp
sbb
daa
popf
mov
ret
adc
pusha
imul
call
int3
subb
aad
sub
popf
xchg
and
add
jmp
sub
out
and
cmp
push
or
cmp
sbb
adc
je
out
inc
in
es
sbb
repz
jae
ret
je
loopne
add
ljmp
push
push
jg
add
xor
cmp
mov
push
push
inc
insl
sbb
movb
mov
mov
ret
or
cmp
xchg
add
or
std
lds
add
mov
pop
cmp
cmpsb
and
mov
mov
call
xchg
rcll
push
push
mov
xlat
ds
ja
inc
jmp
jns
push
scas
add
iret
sbbb
fs
push
fcmovnbe
clc
imull
movsb
loope
lods
xorb
jbe
cmpsl
add
xor
push
cmp
push
or
fcoms
pshufw
add
addl
sub
push
popa
jb
and
mov
xor
adc
cwtl
out
mov
add
les
fisttps
dec
call
xor
das
sar
xor
fimuls
mov
adcl
pop
push
push
mov
push
push
dec
movsb
push
mov
mov
push
jg
add
dec
jmp
xchg
ret
xchg
mov
xchg
js
cwtl
cmp
add
sub
sub
mov
sub
movsb
scas
or
mov
out
sub
insb
clc
popa
add
jae
adcb
sahf
test
ds
or
popa
dec
push
adc
and
add
in
ds
pushf
inc
mov
daa
jne
outsl
sub
add
or
cmp
or
xor
add
shll
rolb
xchg
lds
inc
push
je
cmp
jbe
push
popf
addb
popa
enter
or
jmp
das
push
lret
pop
mov
sub
adc
adc
scas
flds
add
cltd
nop
sbb
jne
movb
jbe
fwait
clc
xorb
call
inc
icebp
xchg
push
loop
in
call
cwtl
test
adc
push
outsb
js
mov
xchg
xchg
jo
mov
fs
lcall
push
xchg
je
aas
adc
xchg
push
sub
inc
jo
ljmp
add
xor
sbb
cmp
push
push
push
cmp
lock
push
mov
icebp
mov
das
xor
les
sarb
outsl
jmp
mov
pop
push
inc
sbb
push
nop
sub
data16
sbb
test
push
cmp
pop
ja
jg
fwait
dec
shll
mov
sbb
push
inc
out
push
mov
movsb
out
cwtl
mov
cwtl
pop
out
cli
or
sub
mov
mov
cmp
jmp
fildll
cs
pusha
jle
push
xor
pop
div
push
jb
or
nop
sbb
ljmp
xchg
jmp
lods
mov
dec
fcoms
inc
mov
aam
lahf
xor
and
mov
adc
js
pop
jmp
lock
js
cmp
fsubs
sbb
mov
and
cmpsl
jecxz
mov
das
clc
orl
dec
inc
or
cs
out
or
or
add
xchg
mov
sub
cmp
std
cmpsb
imul
adc
sub
sub
jne
or
adc
out
adc
or
dec
add
or
lret
fidivrl
clc
int3
add
xor
inc
int
in
jge
add
imul
pop
cwtl
iret
jb
pop
daa
sarl
loope
jb
std
call
add
stc
cmp
jb
neg
and
je
sub
mov
mull
mov
add
mov
or
rorl
lret
or
add
stos
mov
dec
jnp
lahf
push
ljmp
jae
dec
ljmp
xlat
mov
sbb
leave
adc
repz
cmc
out
mov
inc
sbb
in
push
cmp
jne
sub
stc
xchg
aam
imul
testb
je
xchg
call
jle
push
add
adc
add
push
and
push
sub
cwtl
scas
pop
push
pop
and
int
loop
sbbb
jne
fnstcw
cmp
and
clc
mov
lea
jno
cmp
movq
movaps
mov
enter
mov
aaa
jae
xor
jle
xor
cli
sub
adc
ror
test
decl
xchg
jge
repz
or
jg
ljmp
adc
jnp
mov
pop
mov
mov
aam
ret
or
and
mov
out
xor
pop
add
in
ret
mov
add
pop
out
jmp
std
mov
int
sub
fcmovb
sbb
scas
mov
inc
pop
pop
inc
lds
pushf
push
mov
in
addr16
testb
out
orb
mov
aam
xor
xor
pop
add
pop
loop
add
cld
jb
test
mov
push
es
fdivs
int3
jmp
inc
ficompl
rol
incb
shl
nop
std
cld
std
dec
lods
dec
loopne
hlt
jge
shrl
pop
and
setae
insl
xor
lret
pop
inc
dec
pusha
pop
or
cltd
data16
dec
add
mov
jb
push
decb
ficoms
in
jge
cs
inc
sub
clc
ja
mov
lahf
mov
jbe
cmp
inc
cmp
jne
inc
cmpb
out
orb
add
inc
mov
inc
addr16
inc
lock
and
adc
or
bound
insb
or
mov
jo,pt
daa
mov
sub
ret
xor
adc
jmp
mov
or
mov
and
xchg
je
pop
xor
int3
push
xor
adc
incl
sbbb
xor
xor
leave
mov
xor
lea
adc
mov
adc
dec
jo
icebp
outsb
adc
popf
adc
ss
push
cmpb
jns
xor
mov
cmc
pop
inc
add
or
insb
sub
xchg
mov
dec
addr16
movsb
es
mov
cmpsl
pusha
pop
xchg
pop
push
sbb
movb
arpl
mov
add
in
sbb
sbb
sbb
dec
test
es
or
enter
rcl
push
cmp
dec
lods
inc
xor
cmp
pop
inc
pop
daa
or
cmp
mov
mov
push
je
xchg
int
jp
leave
sti
movsl
data16
mov
or
mov
inc
and
and
test
adc
fldl
pop
cmp
jmp
push
and
jecxz
str
scas
adc
out
mov
mov
pop
mov
or
inc
ljmp
cs
push
pop
mov
and
push
cltd
cmpsl
test
hlt
mov
and
int3
mov
and
mov
push
adc
mov
test
repz
cmp
or
outsl
movsb
aas
pop
aaa
jmp
pop
add
cmp
int3
sbb
cs
out
in
hlt
ja
imul
loopne
mov
lret
push
inc
sub
xchg
cmp
inc
jb
or
pop
scas
fildl
or
sub
or
rol
inc
add
sahf
aas
pushw
add
aam
mov
add
xlat
push
inc
adc
push
jnp
sbb
add
or
stos
je
add
roll
and
mov
arpl
jo
inc
or
test
fidivrl
adc
rorl
pop
dec
pop
rol
lea
loopne
arpl
sub
mov
push
rcl
add
cs
movsb
popf
rolb
adc
rcrl
add
movsb
pop
inc
inc
loope
inc
mov
and
and
push
or
pop
cld
aad
jo
mov
mov
cmp
movsb
xorl
or
scas
or
inc
xor
mov
cmp
les
testb
rol
loope
or
cmp
jne
dec
jmp
or
shl
xchg
mov
shlb
lret
jne
inc
aaa
push
lds
mov
push
mov
sarb
xor
cmp
sub
insl
ljmp
inc
dec
jne
add
jnp
push
and
mov
nop
cmc
insb
mov
push
xor
push
cmp
xor
test
movsb
outsb
daa
cmp
repz
pop
and
mov
pop
pop
jne
mov
ja
sbb
lcall
jb
rep
jmp
mov
sbbb
and
enter
aam
rol
out
mov
nop
es
adc
xor
shr
sub
mov
or
lahf
cltd
push
lods
adc
int3
aaa
mulb
lea
push
dec
add
push
jmp
nop
inc
xor
dec
movsl
cmp
add
fidivs
xchg
mov
je
inc
mov
mov
call
repz
in
lock
xor
clc
cld
popa
clc
pop
adc
mov
ret
loopne
cmp
push
fcomp
inc
test
and
insl
rcrl
jbe
or
sbb
lea
and
fmul
jl
cld
pop
and
std
out
xchg
scas
cld
out
ds
neg
sarl
or
jbe
sub
stc
sub
mov
jo
xchg
mov
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
inc
arpl
cmpsb
addr16
mov
jnp
cltd
push
mov
adc
sbb
cmp
repz
xor
inc
push
cmp
repz
ss
sbb
adc
cmp
repz
adc
inc
repnz
or
add
js
negl
or
test
push
add
and
daa
adc
push
inc
and
shrl
jae
cmc
jmp
imul
jl
cmp
call
int3
add
mov
dec
dec
xor
adc
fidivrs
jne
lock
sub
testb
push
lahf
inc
and
inc
leave
push
cmp
push
push
and
xchg
rcll
sbb
sbb
adc
mov
push
xor
push
mov
and
fdivr
inc
bound
and
es
loop,pt
mov
inc
pop
push
xchg
daa
ret
xor
or
xlat
adc
mov
cmp
xor
sub
int
inc
test
enter
inc
ret
int
sub
add
mov
cmp
pop
mov
jmp
nop
cs
mov
mov
adc
xchg
inc
and
btc
cltd
inc
in
dec
mov
cmp
and
fbstp
jno
cmpsl
mov
sbb
or
adc
lcall
pop
rcr
jle
or
cmpsb
loopne
fwait
dec
push
jbe
sub
mov
aaa
xchg
cmp
pushf
mov
cmp
in
inc
arpl
into
lea
cmp
push
lret
sub
out
lds
call
push
adc
or
frstor
or
pop
lcall
jns
add
mov
je
jne
dec
loopne
add
dec
or
xor
add
aaa
in
icebp
adc
and
jle
jne
push
aas
dec
xchg
pop
adc
and
fbld
cs
mov
inc
xor
mov
add
push
andb
je
jbe
cmp
mov
adc
dec
push
stc
mov
sti
sbb
shrb
aas
pop
and
enter
ja
cmp
mov
ja
pop
adc
andb
loop
mov
pop
stc
dec
or
and
or
daa
inc
adc
clc
mov
inc
inc
ret
inc
les
cwtl
dec
xor
add
mov
mov
mov
sbb
jne
pop
dec
and
cs
stc
mov
rorb
xchg
jb
cmp
ds
pushf
push
pop
xchg
pop
imul
or
enter
push
lods
mov
imul
shr
std
adc
sahf
xchg
xchg
test
scas
or
add
jg
loopne
lock
push
push
push
push
lods
ljmp
pop
and
jmp
push
sub
inc
lods
sub
ss
fs
or
in
into
js
int
je
or
mov
xor
fs
pop
gs
xorl
and
ja
add
xchg
fcoms
mov
sub
in
aaa
js
push
or
or
lcall
jp
loopne
popf
nop
repnz
leave
push
sbb
mov
les
cld
jb
movsb
out
jle
clc
jbe
add
adc
stos
and
adc
adc
mov
add
loopne
xchg
popa
jb
pushf
mov
mov
mov
mov
sbb
scas
push
shl
rolb
pop
pusha
lds
lods
cld
jbe
testb
aam
add
je
inc
sarl
mov
pushf
pop
shll
and
mov
pop
or
punpckhdq
cld
out
inc
filds
xor
and
or
leave
test
imull
shlb
ret
xor
cld
cmc
inc
out
inc
inc
cwtl
adc
or
movsl
js
hlt
cmpl
push
add
adc
insl
adc
dec
add
js
mov
add
or
cli
test
or
mov
dec
push
rolb
push
test
push
mov
rol
sub
push
push
lods
cmp
ljmp
lea
clc
or
dec
ret
out
pop
out
xor
inc
jge
add
adc
fldenv
cmp
rclb
push
aaa
adc
frstor
xor
add
inc
rolb
and
out
sbb
mov
add
repnz
add
push
icebp
popl
out
jmp
dec
or
repnz
push
jo
pop
pop
stos
dec
es
jne
mov
ret
xor
dec
cmp
sahf
xchg
stos
push
sarb
pop
xor
enter
int
daa
push
sub
lods
push
in
mov
andb
push
shlb
mov
into
jo
andb
nop
negl
add
in
cmp
jne
mov
push
mov
std
jne
es
jne
pop
mov
cmpsl
call
aam
adcl
and
daa
and
mov
jns
pop
push
dec
or
adc
jmp
std
enter
push
xor
cld
cld
jmp
fisttpl
adc
in
adc
adc
inc
inc
inc
sarb
cmpsl
stos
inc
adc
fdiv
mov
xchg
js
sbb
ret
dec
push
xor
lret
test
cmpb
repnz
and
sub
cmp
sub
or
pop
inc
cmp
mov
lea
adc
push
adc
add
adc
add
ficompl
dec
dec
or
inc
enter
mov
pop
pop
nop
mov
push
cwtl
cmp
dec
and
mov
cmp
add
out
inc
movsb
jp
pop
mov
or
dec
movsl
test
sarl
or
or
or
adc
dec
jge
push
add
fisttps
add
xlat
xchg
add
adc
mov
je
mov
mov
cmp
jg
add
adc
jmp
mov
cmp
mov
mov
push
push
push
push
adc
cmpsl
lea
cmpsb
and
mov
ja
jae
popl
cmovnp
lock
and
lmsw
lea
or
cs
mov
cmpsl
and
inc
or
cmp
push
orl
xorb
pusha
pop
es
pop
js
or
push
in
xorl
dec
popa
xchg
sbb
add
fsts
mov
jb
addb
push
ret
push
xchg
push
inc
adc
orl
fndisi(8087
pop
xorl
mov
das
in
mov
add
repz
mull
add
add
sbb
xchg
cmp
scas
mov
rcrb
cmpsb
push
adc
or
adc
fadd
sub
add
add
fmull
fmuls
lock
and
sub
adc
add
sbb
mov
sbb
lcall
rclb
mov
gs
or
mov
adc
ret
lock
data16
arpl
pop
mov
push
out
push
or
std
pop
mov
incb
mov
inc
je
mov
lea
neg
jg
loop
mov
sbb
or
add
jmp
or
mov
or
loopne
inc
inc
push
mov
or
push
scas
mov
pop
add
mov
outsl
cmp
mov
inc
cmp
jb
jnp
add
cmp
add
int3
cli
cld
dec
mov
pop
pop
ret
and
sub
outsb
fcomps
push
or
adc
lock
mov
push
sub
or
scas
shl
push
scas
sbb
mov
divl
lret
xlat
subb
stc
addl
mov
jo
and
or
xchg
sub
cli
out
or
icebp
mov
pop
inc
movsl
and
push
xor
cmp
je
repnz
jns
xor
adc
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
pusha
popa
add
aaa
adc
xor
or
sbb
lds
mov
add
jg
jmp
mov
add
clc
fsts
ljmp
flds
fdivrl
jecxz
xor
clc
pop
cwtl
inc
pop
mov
inc
jmp
cmp
add
add
add
sub
scas
and
pushf
jg
cmp
adc
cmp
out
xor
dec
push
js
or
and
scas
xchg
adc
in
jne
pop
mov
dec
add
mov
pop
test
lock
hlt
pop
ret
clc
dec
mov
and
je
adc
cmpsl
insb
lret
sbb
mov
xor
adc
and
or
test
or
push
test
push
jbe
push
add
outsb
or
add
push
movsb
and
movsb
in
fisubrl
movsb
push
adc
shl
cld
cltd
sbbb
std
mov
and
adc
sbb
test
inc
xor
or
hlt
push
inc
sub
out
inc
sub
das
imul
add
dec
push
xchg
cs
pop
arpl
push
adc
xchg
imul
clc
shll
jne
mov
inc
lock
mov
inc
mov
jne
adc
push
push
loop
add
iret
in
add
flds
push
and
js
cmpb
and
jp
xlat
fcom
and
xor
add
adc
addl
rcrl
cmpsb
sbb
inc
daa
cmp
dec
or
scas
sbb
push
andb
je
mov
pop
insb
sbb
cmpsl
test
xor
loopne
js
adc
or
cwtl
or
cli
push
and
mov
dec
jno
pop
add
add
jge
mov
nop
je
inc
push
jb
lea
sarl
ja
or
adc
xor
push
pop
cmp
in
inc
cwtl
mov
clc
outsl
fwait
clc
out
mulb
mov
es
cld
or
shrl
push
pushf
xchg
mov
mov
fs
jne
cmp
lods
sbb
fistl
xor
cmp
sbb
or
add
ret
push
xor
mov
mov
pop
inc
inc
in
in
fsts
xorb
push
es
shl
dec
ja
or
mov
or
jmp
mov
lods
pop
outsb
and
outsl
mov
rcrl
out
shrb
add
jmp
mov
xor
loopne
stos
mov
or
push
and
mov
and
push
pop
adc
dec
leave
mov
roll
mov
dec
jmp
adc
arpl
add
inc
fdiv
sub
pop
add
in
sub
mov
mov
inc
rclb
add
xchg
fidivrs
push
sub
or
fcomps
or
sti
or
gs
rcrb
cmp
or
icebp
adc
jne
adc
push
or
pop
cmp
and
jmp
xor
orb
push
or
loopne
daa
and
jle
mov
les
mov
jne
xor
pop
add
xor
test
subb
dec
add
sub
lods
push
cmovbe
pop
push
jge
test
push
add
rorb
sbb
in
inc
cmpsl
mov
dec
adc
push
pusha
pop
or
gs
adc
fwait
cmp
mov
pop
cmp
mov
add
or
jne
pop
das
mov
shlb
mov
jbe
inc
cmc
or
pop
cltd
pop
idiv
mov
mov
adc
pop
push
push
dec
add
punpcklwd
push
test
adc
rcll
xor
addps
and
cs
push
cmc
or
cmp
mov
jbe
test
pop
push
pop
mov
mov
dec
in
aam
add
mov
jae
mov
mov
pusha
sbb
dec
rclb
jns
sub
push
jle
adc
or
repnz
repz
hlt
add
or
rcrl
negb
imulb
xchg
loopne
mov
push
adc
sbb
rolb
aaa
inc
add
call
stos
push
fcoms
clc
jnp
and
sub
orb
mov
adc
xchg
lods
add
addl
push
cli
jp
or
jg
jb
xchg
pushf
mov
push
inc
adcl
inc
loope
je
mov
sub
push
lods
idiv
adc
dec
cmp
sbb
sbb
adc
mov
xchg
popf
inc
je
ss
addl
popa
loopne
daa
loope
call
paddw
jmp
dec
je
add
or
out
pusha
mov
push
or
insl
xor
add
sub
xor
and
push
jmp
add
sub
pop
push
push
les
lea
test
adcb
jge
jmp
add
xor
arpl
xchg
orl
push
lcall
push
jl
push
jne
mov
addr16
add
dec
loopne
bound
or
jne
pop
imul
out
xchg
test
je
fistpl
and
cmovp
pop
jns
mov
or
jo
inc
adc
add
or
sbb
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
pop
jne
punpckhdq
sbb
sub
and
pcmpeqb
icebp
cmp
pop
add
or
push
push
mov
push
fsubrs
cmp
inc
stos
orl
or
scas
jns
jmp
cmp
jae
mov
mov
push
mov
dec
loope
aad
sbb
add
push
add
xchg
sub
mov
loop
pop
or
mov
lea
add
sub
bound
pop
aam
sbb
iret
sub
ja
mov
pop
call
mov
ret
mov
add
xor
push
or
je
or
dec
cmp
mov
and
repz
mov
add
cmp
jle
fdivs
push
and
push
lcall
lea
bnd
push
dec
pop
and
enter
jo
addr16
sbb
dec
imul
add
sbb
or
pushl
pop
shl
sub
push
pop
shlb
inc
dec
sbb
ds
pop
nop
push
outsb
dec
test
pop
sub
adc
jl
sub
add
push
dec
popa
cmp
jo
loopne
xchg
push
into
sbb
imul
cmp
lret
push
mov
add
add
sbb
push
inc
push
or
leave
lods
movsl
stos
sbb
fdivs
insl
or
cmp
daa
lcall
lock
xor
jl
inc
inc
pop
and
data16
mov
inc
cmp
pop
sub
adc
stc
xchg
test
mov
fists
mov
cmc
mov
add
cwtl
jmp
loopne
inc
sub
lret
pop
adc
dec
lds
dec
dec
or
je
ret
or
leave
out
add
cmp
xchg
lret
mov
jmp
loopne
mov
mov
das
rolb
inc
add
xor
mov
adc
sbb
clc
sbb
shrb
sbbb
mov
movsb
mov
push
popf
fsts
mov
push
lods
or
lods
push
repz
icebp
jecxz
mov
push
mov
jg
lock
inc
into
add
aam
enter
rcrl
mov
inc
fdivrs
mov
lret
inc
dec
ss
jo
add
test
pushf
mov
lds
pop
sarl
shrb
cwtl
jge
orb
sbb
mov
pushl
test
adc
aaa
jb
adc
pop
mov
cwtl
ror
push
pop
pop
cwtl
loopne
mov
push
insb
scas
and
jmp
push
and
ss
mov
mov
je
sahf
xor
jl
jge
jnp
add
ljmp
pop
movsb
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
push
shll
adc
fwait
fs
dec
push
or
jo
cmp
in
call
add
and
push
push
push
lods
dec
pop
pusha
cmpsl
sub
jle
cmp
or
xorb
stos
lcall
fadds
push
pop
mov
and
mov
test
fisttpl
jmp
adcb
and
pop
sbb
push
in
push
int3
add
outsb
adc
cmpsb
add
call
mov
and
dec
pushf
ja
or
mov
cmpb
jmp
in
push
dec
call
jbe
sbb
push
lock
add
push
cmpsl
xor
jmp
pop
mov
dec
pop
xor
pop
or
arpl
mov
cmp
xlat
repnz
jle
push
sbb
mov
mov
sar
fwait
add
jmp
fmuls
pop
or
adc
je
insl
out
dec
loope
pop
jne
mov
inc
insb
pushf
fwait
bound
popa
jp
inc
and
das
bound
data16
popa
jns
sub
popa
push
push
xor
aad
dec
xchg
cwtl
mov
mov
int
mov
cmp
push
movsb
push
aad
mov
jnp
ficoms
pushf
inc
adc
nop
adc
inc
jmp
mov
push
gs
fs
or
adc
push
jmp
cs
dec
out
mov
or
push
and
iret
repz
adc
add
cld
sub
mov
lcall
jmp
enter
jmp
ja
or
data16
inc
fcoml
mov
cmp
insb
add
popa
pop
call
sub
les
push
cwtl
mov
mov
jmp
sahf
ret
inc
sahf
in
push
hlt
addr16
or
pop
jns
ret
push
xchg
push
test
mov
fmuls
sti
daa
sub
xchg
std
jge
push
or
je
mov
xchg
popa
cmp
jmp
testb
jne
shr
and
pop
xlat
leave
lea
outsb
loopne
nop
jle
rol
cli
add
aam
pop
mov
or
ja
outsl
xor
pusha
jmp
push
and
jne
push
pop
inc
push
movsl
sbb
stc
xor
loopne
lea
inc
and
cmp
je
or
and
fsts
or
jmp
movsl
bound
pop
call
mov
and
push
pop
popf
pusha
sub
push
mov
cld
aad
or
jmp
test
cmp
jg
jbe
ficompl
mov
in
push
fucom
mulb
xchg
jns
andb
rorb
cmp
aam
xchg
push
lea
mov
ret
inc
icebp
push
loopne
mov
push
or
push
adc
jns
icebp
push
dec
push
inc
pop
lret
lods
loopne
inc
imul
sarl
scas
add
jae
test
andl
inc
loopne
test
pop
push
std
mov
adc
pop
or
movsl
cmp
sbb
xor
xchg
xchg
pop
sarb
lock
sbb
out
inc
enter
test
mov
rcrl
or
enter
es
jle
jb
or
jle
pop
mov
movb
jmp
insl
popa
jecxz
insl
xor
stc
std
add
add
shll
jo
add
test
sbbb
xchg
sbb
sahf
clc
mov
fcomps
or
or
dec
stc
dec
add
repnz
inc
repnz
xor
or
and
and
and
mov
inc
push
imul
dec
les
test
orb
rcr
sbb
adc
sti
mov
mov
or
sarl
jmp
mov
push
lods
repnz
sub
clc
scas
inc
dec
sti
lods
test
add
or
xor
mov
or
inc
mov
inc
mov
daa
js
aam
rcl
rclb
add
mov
adc
je
test
fmull
int3
imul
shl
push
pop
add
loope
aam
int3
xor
xchg
add
mov
xor
movsb
push
ret
pop
aaa
mov
sbb
dec
mov
dec
xor
sbb
jne
sbb
hlt
data16
insb
add
push
dec
pusha
and
xor
push
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
xor
clc
jno
insl
dec
stos
push
xchg
insb
repnz
fs
loope
shrb
pop
pushf
sbb
add
xchg
pusha
xor
push
jns
add
jne
pop
lds
cmp
rcr
int3
int3
add
inc
inc
push
in
jne
imul
add
mov
add
fisubs
or
xchg
outsb
jb
mov
cltd
jecxz
lahf
fsubs
test
jge
inc
sbb
rcrb
push
mov
adc
jbe
push
inc
or
test
adc
imul
pusha
lcall
and
movsb
notb
sarb
in
pop
divl
xchg
ds
push
inc
js
ds
mov
adc
dec
pop
mov
mov
in
xchg
pop
pop
pushf
or
adc
adcb
jns
mov
add
jbe
rcrl
mov
arpl
orl
and
xor
add
cmp
and
nop
mov
jmp
push
mov
jbe
fnstsw
and
ret
adc
or
inc
cmp
mov
test
push
jae
cmp
or
jmp
mov
or
sub
ss
dec
orb
sahf
std
jae
cmpl
jne
push
cmp
push
or
das
nop
mov
dec
pop
adcb
adc
mov
cmp
popf
orb
in
mov
in
hlt
fdivrs
jo
cmp
pop
inc
mov
addl
aam
popf
xchg
test
cs
iret
lret
xchg
call
loopne
pop
stos
xchg
cmp
cmpsb
or
or
dec
cmp
sti
jecxz
loopne
pop
lahf
lea
push
pop
ja
mov
movsbl
testb
inc
cmp
test
sbb
push
sar
pop
mov
sub
mov
jp
mov
lahf
call
rcr
jnp
pop
cs
les
lret
stos
xorl
test
push
sub
fldpi
in
aam
into
inc
pushf
pop
or
inc
lret
in
add
addl
sbb
test
or
loop
push
push
or
mov
adc
loopne
js
fdivl
add
adc
shrl
or
lea
ja
lods
shrl
fsubrs
sbb
hlt
hlt
stc
roll
int3
je
or
inc
insb
inc
sub
lock
in
mov
xchg
test
jo
sub
adc
sub
jbe
mov
mov
js
fildl
loopne
add
movb
inc
xor
movsl
cmp
testb
incl
insb
cmp
sbb
imul
mov
pop
pop
pusha
inc
imul
add
or
lock
jb
cmp
dec
pusha
jmp
add
pop
adcl
mov
sub
adc
or
ds
mov
mov
inc
movsb
pop
iret
adc
dec
aad
cmpsl
or
mov
lock
out
jge
push
arpl
testl
xor
outsb
cmpsl
popf
xchg
pop
das
mov
jl
scas
gs
add
icebp
jge
testb
in
popa
or
lret
rcrl
jl
mov
sub
fsubl
rorb
out
add
test
sbb
inc
inc
push
or
mov
jl
xor
push
xor
cmp
int3
pushf
sub
loopne
rorl
shl
dec
mov
mov
ss
add
xor
test
inc
or
sbb
imul
es
dec
or
pop
ret
xor
lods
minps
pop
mov
add
ret
mov
dec
aas
or
xor
dec
pop
cmp
stos
mov
sub
jae
cs
sbb
loope
test
sub
outsb
jo
jmp
or
ret
addr16
shrl
adc
outsb
je
arpl
or
test
insl
shrb
mov
adcl
pop
push
aaa
fbld
cmp
add
sub
dec
xchg
xchg
adc
notb
adc
out
test
mov
mov
push
aad
shl
shl
add
push
add
mov
sbb
std
imul
hlt
jmp
cmp
jle
cmpsl
mov
sub
and
mov
pop
push
xchg
mov
pop
es
add
xor
sub
adc
add
pop
test
push
shr
push
push
insb
cmpsb
fiadds
push
or
mov
and
adc
or
sbb
jnp
mov
sub
inc
sbb
xor
cmp
stos
ret
adc
jecxz
stos
sbb
pop
jne
popf
push
push
push
scas
data16
mov
cmp
call
loop
cs
cmpb
jne
xor
or
je
inc
stos
mov
insl
sbb
sub
sub
lcall
sub
jp
mov
add
bound
sahf
push
arpl
rolb
ja
sub
pop
push
push
push
mov
dec
and
mov
inc
mov
rcll
lock
in
adc
sub
and
cmpsl
sahf
or
popf
or
add
inc
rcrb
mov
lret
sub
or
rorl
fidivrl
sub
xor
pop
xor
xchg
or
sbb
movl
mov
mov
hlt
and
lea
sti
jbe
sbb
pusha
adc
stos
and
inc
push
xchg
add
push
lret
iret
sbb
shll
fwait
pop
adc
clc
repnz
sahf
mov
mov
mov
inc
push
dec
sub
imul
inc
into
addb
cmp
enter
shl
fidivs
cmp
add
inc
jmp
movsb
xor
stos
jmp
dec
loopne
in
test
sub
sar
ret
cmpsl
and
mov
inc
sub
add
sub
outsl
inc
daa
push
movsb
test
mov
test
daa
mov
sub
or
decl
in
or
and
in
jle
cmp
adc
dec
xor
pop
sbb
pusha
add
mov
sbb
and
pop
pop
dec
outsb
jne
and
adc
xor
sbbb
inc
aam
adc
loopne
imulb
jle
aam
data16
scas
inc
mov
dec
pop
sub
and
pop
out
sub
adc
arpl
lcall
push
cmp
test
push
pop
int
fsts
pushf
adc
pop
sub
jae
add
mov
inc
cmpsb
in
std
push
into
inc
aam
xchg
les
mov
neg
movsl
daa
pop
mov
mov
mov
push
cli
movsb
add
loope
adc
mov
mov
cmp
mov
pop
or
testl
and
int
cmp
jo
cmp
out
jno
xchg
cmp
adc
sub
dec
repz
jge
nop
mov
movsb
push
sbb
adc
pop
cmp
cltd
js
sub
or
pop
jp
adc
aam
lods
mov
pop
ret
adc
xchg
test
lcall
leave
or
mov
pop
hlt
cmpsl
repnz
add
aam
fxrstor
dec
xchg
dec
outsb
stos
in
adc
sub
fstl
xor
jmp
push
jl
or
and
mov
sub
or
rolb
ss
add
test
mov
or
adc
rcrl
jb
repnz
jb
mov
jnp
jmp
arpl
faddp
adc
xchg
loopne
cs
in
lods
and
jo
test
daa
inc
mov
outsb
les
cmpsb
test
jecxz
push
mov
ror
pop
jge
inc
jmp
xor
call
jne
lock
jbe
mov
aam
add
pop
sbb
fadds
add
push
cmp
sbb
cs
out
sbb
pushl
insl
and
lahf
and
test
jp
add
push
mov
stos
mov
stos
mov
testl
adc
jns
insl
adcl
add
out
loopne
sub
lock
loopne
mov
icebp
push
jge
subl
inc
cmp
jmp
and
mov
or
or
xchg
lahf
mov
adc
add
push
pop
sbb
mov
aaa
icebp
int
jge
int3
dec
push
clc
insl
xchg
or
cwtl
out
and
pop
adc
pushw
jb
scas
add
cmp
add
pop
add
mov
ss
pop
pop
sub
call
add
pop
sbb
imul
pop
out
and
xchg
addb
mov
shll
push
push
mov
sbb
test
fwait
mov
mov
jle
mov
adc
mov
lock
fdivl
mov
cmp
loopne
sub
sub
lea
sub
insb
sub
or
lods
sub
in
orl
mov
je
movsl
clc
pusha
push
add
in
xchg
push
pop
jl
mov
std
or
pop
push
add
arpl
test
cmp
lock
inc
xor
or
mov
fcoms
inc
sbb
loopne
call
add
jecxz
jbe
bound
outsb
sti
std
and
loopne
adc
lods
popa
cmc
jo
cmp
push
and
jecxz
sub
pop
mov
xorl
scas
sub
xchg
inc
test
fst
pop
out
mov
inc
push
add
push
ret
fstl
sbb
lret
pop
jl
xor
jne
add
sub
int3
push
adc
addb
xchg
addl
mov
mov
sub
mov
mov
jbe
mov
aam
inc
ds
stos
lret
mov
leave
es
sahf
lock
push
mov
or
outsb
xor
loope
sub
ret
xchg
shlb
add
xor
dec
sbb
mov
mov
pop
in
fidivs
scas
test
data16
sbb
lea
mov
and
pop
repz
sti
sbbb
mov
dec
pop
cld
dec
xchg
nop
xor
ret
cmc
ds
sbb
fsubr
call
mov
jg
cwtl
cmp
dec
adc
cmp
and
add
mov
pop
sbb
fucomi
leave
xor
and
cmpb
dec
xchg
xchg
add
cmc
mov
sbbb
sti
push
dec
fldcw
push
xchg
rcrb
inc
inc
dec
daa
or
sub
cmp
aaa
add
sub
and
test
jae
mov
aaa
cmp
dec
adc
loop
mov
andl
jnp
lret
xchg
add
lods
add
std
add
push
pop
xchg
push
jmp
adc
ljmp
and
movsb
push
sub
lods
clc
hlt
mov
xchg
jmp
adc
rorb
mov
cltd
mov
out
add
mov
imul
xor
in
les
xchg
enter
pop
add
push
mov
xor
popf
lcall
sahf
jbe
cli
pop
ja
mov
scas
mov
movzbl
sub
test
es
push
sub
mov
adc
call
xchg
mov
mov
fsubrl
sbb
mov
mov
dec
xor
and
mov
test
adc
mov
push
xchg
imul
mov
or
inc
push
sub
dec
and
jl
xor
mov
mov
mov
dec
mov
scas
and
hlt
adc
mov
xchg
mov
inc
rclb
icebp
outsb
fistpll
insb
jne
jbe
mov
adc
and
xlat
cmpsb
sbb
jnp
xchg
and
inc
cmp
xor
cmp
dec
dec
dec
das
es
mov
and
add
pop
sub
nop
xor
and
leave
pop
mov
ror
enter
sbb
dec
pop
mov
xchg
cli
movsb
xchg
sar
stos
mov
push
lods
cltd
sub
nop
call
push
sbb
mov
sbb
push
test
aad
inc
in
mov
push
fsubr
int3
nop
dec
sub
dec
adc
mov
and
and
call
jecxz
adc
in
pop
mov
fwait
std
add
xchg
addr16
mov
mov
andb
xchg
sub
js
sbb
enter
in
mov
imul
rolb
adc
mov
sub
in
stos
movsl
rcl
mov
lret
repnz
cs
call
test
xchg
mov
adc
and
and
mov
adc
xchg
rolb
pop
lret
pop
xchg
pop
mov
jb
push
lods
enter
repnz
mov
mov
adc
call
fcompl
sbbb
leave
add
fmuls
jb
aad
loopne
nop
repz
movsb
xor
fdivl
cwtl
aam
push
stos
dec
xor
pop
call
aam
enter
enter
nop
imul
sub
xchg
aam
and
lods
xchg
sti
xchg
aam
inc
xor
in
bound
push
ret
outsb
push
jbe
xchg
sub
daa
pop
lods
push
xchg
jp
call
sub
mov
orb
mov
int
pop
fadds
cmc
ffreep
dec
stos
xor
add
push
addl
ror
adc
pusha
sbb
daa
cli
les
xchg
outsb
mov
js
xchg
xor
jg
cwtl
mov
into
lret
mov
mov
pusha
and
sbb
inc
xchg
xor
jne
sbbb
adc
dec
aaa
mov
jne
vmovhps
sbb
jp
mov
fcoml
les
or
xchg
andb
or
sub
mov
daa
orl
movsb
icebp
nop
push
pop
shr
lds
add
jp
or
or
movsl
daa
add
dec
iret
outsl
mov
add
add
add
or
cmp
and
ficomps
movsl
sbb
sbb
adc
sub
mov
cmpsb
xor
rcrb
jo
insl
xchg
icebp
nop
sbb
rcrl
pop
imul
push
sbb
add
jns
mov
mov
mov
rclb
mov
movsb
je
jnp
test
popw
or
andb
ja
in
divb
adc
jo
pusha
lock
mov
xor
fnstenv
enter
gs
adc
add
dec
push
out
adc
rcrl
mov
pop
sub
mov
and
hlt
add
sbb
imul
dec
xor
enter
add
mov
loop
sarb
imul
test
sti
inc
hlt
mov
fcoml
lret
sti
sub
out
and
mov
add
sbb
add
sub
cmp
lods
push
fcoml
xor
call
xor
rcrl
add
loopne
ficoms
popf
pop
push
push
cmp
mov
in
or
mov
inc
int
or
cld
fisttps
jnp
jno
jecxz
fldz
decl
push
sbb
lods
jmp
and
rcrb
inc
ljmp
divl
mov
jo
jmp
lea
out
jle
test
pop
mov
mov
rorb
sbb
mov
es
fisubl
and
fcomp
rorb
dec
jb
dec
addl
add
clc
mov
xorb
mov
sub
sbb
rclb
mov
std
push
stos
add
lret
inc
fdivrl
xor
cltd
dec
sbb
cmp
dec
pop
jno
dec
iret
out
mov
mov
lahf
cmpsb
fldcw
rcll
rol
lods
shll
cmp
pop
or
jne
movl
inc
pop
enter
cmp
std
jne
mov
subb
aaa
add
mov
les
adc
and
push
or
push
adc
fadds
sbb
adc
adc
mov
rolb
ljmp
mov
cmp
into
std
xor
push
jmp
pop
out
movsl
mov
push
repnz
dec
add
and
cmpsl
aaa
inc
cli
and
add
aas
rolb
jnp
ret
jmp
cmp
jbe
roll
xor
pop
inc
inc
push
mov
imul
imul
sarl
outsb
push
subb
or
leave
mov
sub
inc
jmp
mov
mov
cmp
pop
pop
lea
ljmp
jp
lcall
add
jb
mov
adc
movsb
push
or
cmp
inc
pop
adc
loop
jb
push
dec
mov
repz
xchg
sbb
cs
loopne
sbb
jle
fninit
inc
cmp
inc
jbe
mov
push
jle
or
jne
ss
rcrb
stos
mov
jmp
js
add
push
jnp
cmpsl
cmp
iret
adcb
mov
push
es
loopne
add
fwait
sbb
bound
sub
mov
test
xchg
cmp
adc
add
popa
push
and
pop
fsts
aam
je
sarl
inc
cmp
adc
jno
ret
jne
mov
pop
aam
dec
popa
pop
push
adc
push
adc
pop
mov
out
xor
xlat
testb
insb
ljmp
add
jge
addb
push
sub
or
xor
mov
into
mov
out
or
sub
inc
jmp
xor
or
mov
mov
out
add
pusha
sbb
aaa
sbb
cmp
ljmp
adc
ja
pop
fwait
jno
daa
ljmp
xchg
xor
xor
flds
imul
dec
movsl
push
jp
add
mov
js
std
and
dec
fucomp
xchg
rcrb
and
jns
push
rclb
add
es
push
js
sbb
mov
lea
mov
mov
jnp
jl
mov
xor
add
cmpl
ret
or
xchg
pop
ret
adc
testl
sub
dec
mov
xor
jo
sub
xorl
leave
and
popa
add
fcomps
incb
outsl
mov
xorb
mov
pop
sbb
icebp
adc
std
das
int3
pushf
inc
lcall
mov
adc
push
dec
jnp
sbb
sub
xchg
insb
mov
insl
fsubrs
and
ds
test
lock
cmp
in
dec
shr
aam
jle
jg
into
inc
push
faddl
or
imul
adc
pop
cld
inc
add
add
dec
test
aad
jns
or
inc
add
add
push
icebp
pop
xor
adc
inc
outsl
push
sub
cmp
mov
test
cwtl
pop
je
inc
ret
or
ds
mov
inc
mov
xor
in
mov
push
jb
add
xor
or
mov
pop
xchg
ffree
insb
leave
cltd
sti
pop
pop
lcall
mov
push
and
clc
ret
or
ret
mov
mov
pusha
out
les
hlt
inc
test
cmp
insl
out
test
push
push
push
inc
es
xor
aas
mov
scas
push
das
sub
aas
aam
aaa
jo
vmread
addb
clc
sbb
inc
pop
test
add
arpl
xor
cmp
jo
popl
pop
in
insb
or
add
jg
ret
add
or
fwait
out
jne
push
cmpsb
loope
inc
mov
sub
lret
jo
inc
insb
pop
arpl
mov
xor
clc
xor
mov
adc
adc
loopne
cmpsl
dec
jl
dec
jg
or
xchg
and
mov
push
aas
cmp
int3
push
push
add
fwait
inc
aad
push
clc
mov
add
in
sbb
call
ja
pop
clc
iret
push
adc
lea
mov
mov
or
sbb
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
and
pop
pusha
cmp
sbb
jmp
push
mov
test
lahf
ds
pop
or
and
pop
daa
xlat
leave
sarb
adcl
cmpsl
notl
orb
nop
rol
xchg
mov
jg
mov
push
adcl
add
fnstcw
or
fwait
pop
rol
dec
subl
mov
gs
jnp
xor
movsb
cmp
and
scas
push
iret
aam
inc
push
daa
inc
or
aam
add
jbe
or
adc
jo
into
mov
dec
cmc
cmp
mov
mov
and
sub
or
inc
pop
xor
cs
arpl
push
add
jbe
bound
jbe
shlb
cmp
nop
xor
xchg
sbb
xchg
out
pop
mov
dec
adc
mov
adc
clc
xchg
add
sub
push
push
add
loopne
or
test
mov
lods
ja
sub
mov
or
xlat
cmp
outsb
call
jg
hlt
lret
sub
add
sbb
or
and
pop
add
into
in
sub
inc
sub
aas
pxor
push
push
lock
add
cmp
loop
shr
je
sarb
inc
fistpll
jg
push
inc
adc
and
xchg
dec
movsl
xor
pusha
jo
xor
test
shlb
fidivrl
and
add
xchg
mov
je
xor
fldt
add
add
jne
fidivs
adc
sbb
cli
pop
pop
ret
inc
and
ss
sbb
mov
push
mov
bound
add
cli
shr
add
mov
pop
push
and
pop
adc
push
push
daa
jecxz
in
and
pop
mov
xchg
outsb
adc
xchg
cmp
adc
and
push
ficoms
jae
mov
aam
push
fisubs
push
or
shll
enter
imul
cltd
dec
adc
sbb
sub
mov
dec
je
add
cmc
cli
adc
pop
add
push
mov
mov
pop
mov
and
rcrb
push
add
and
in
iret
fdivl
enter
add
mov
mov
dec
push
mov
fsub
inc
ss
mov
sbb
pusha
sbb
je
call
lock
and
mov
lret
into
sbb
add
arpl
out
fstpl
addl
cmp
ja
jl
popa
xchg
mov
inc
sbb
mov
cmp
add
pop
stc
mov
or
sbb
dec
add
and
mov
je
or
add
cmc
clc
jmp
sbb
lock
add
push
cmp
repnz
mov
pusha
iret
inc
sbb
fstpl
xchg
mov
cmc
fmull
stc
rorl
xor
shrl
pop
or
xchg
jmp
decl
cmp
int3
loope
pop
les
mov
mov
and
dec
clc
fstl
mov
lock
pusha
mov
mov
and
pop
mov
sbb
rep
sahf
out
inc
dec
mov
jnp
mov
test
push
outsb
ja
cwtl
ret
pusha
icebp
pop
pop
push
rclb
daa
rolb
fistpl
frstor
mov
cmp
or
jne
mov
jl
add
sti
xchg
addb
sbb
pusha
add
adc
push
inc
inc
add
pop
pop
mov
push
push
cltd
jmp
inc
faddl
test
xchg
and
fnstsw
inc
test
test
rcrb
testb
fdivrs
xchg
and
ret
and
push
push
test
xchg
rorl
subb
sub
fisttps
push
mov
js
rorb
ja
outsl
mov
test
cld
divl
adc
das
dec
call
pop
mov
sbb
inc
jl
add
aas
cmp
and
jle
mov
mov
mov
add
les
mov
push
mov
add
mov
shll
fucomip
stos
bound
add
out
sbb
mov
js
cmp
lds
jb
xchg
lret
gs
fadds
sub
pop
sarb
push
dec
mov
lods
std
mov
inc
pop
movsb
fcoml
jne
lds
movsl
inc
pop
inc
rcl
stos
insb
loope
enter
dec
push
jp
shll
dec
dec
jp
fwait
stc
xchg
imul
jno
idivb
testb
in
pop
xor
dec
or
cmp
xchg
loopne
mov
dec
clc
cmp
dec
cs
sarb
cmp
cmp
and
andb
cmp
lret
or
fdivrl
mov
sub
popa
jl
pushf
popf
xor
lahf
dec
dec
jne
or
pop
add
cmpl
cmpsl
fmuls
lahf
ret
add
mov
jbe
mov
pop
je
mov
sub
loope
mov
pop
clc
mov
arpl
or
mov
xor
cmpsl
je
and
dec
es
int3
int
or
inc
loopne
loope
adc
loopne
lahf
mov
dec
aas
insb
jne
inc
sub
adc
aad
pop
jle
and
shlb
jne
cmpb
mov
add
or
and
cmp
inc
xor
xchg
icebp
dec
push
imul
jmp
push
lcall
stc
push
pushf
leave
mov
andl
scas
push
jecxz
mov
test
mov
push
dec
push
or
mov
pop
or
sbb
adc
scas
sub
popa
cmp
leave
jns
push
fisubrl
aam
loopew
and
rolb
or
push
xor
inc
hlt
sbbb
add
or
cmc
push
inc
lea
push
inc
out
lods
pushf
adc
xor
pusha
dec
push
iret
ret
popa
lods
pop
imull
popa
in
mov
lds
cmp
add
and
xchg
cmp
in
gs
test
out
loope
xchg
sahf
jnp
loopne
dec
cmpsl
or
ret
mov
cmp
jns
daa
mov
cwtl
pop
lock
jbe
lds
mov
cld
int
inc
add
cmp
push
pop
mov
push
scas
jge
jle
pop
enter
mov
inc
ss
dec
jno
mov
frstor
or
mov
or
adc
loopne
add
xor
pop
pop
andl
adc
adc
pop
pop
ret
sub
pop
hlt
add
mov
incb
mov
and
xor
ret
addr16
cmp
jno
mov
rcr
lret
adc
jbe
leave
addb
fisubs
pop
mov
dec
push
add
ja
mov
mov
mov
push
cmp
sbb
cmpl
mov
pusha
rcl
pop
mov
jns
add
jl
pop
mov
gs
rcrb
mov
in
test
sub
repnz
mov
xor
mov
xchg
adc
inc
neg
sub
inc
shlb
inc
imul
inc
nop
inc
pushf
inc
sub
mov
adc
rcll
inc
out
inc
stos
or
sbbb
ret
mov
lds
pop
mov
inc
daa
add
xlat
cmp
push
inc
jo
inc
adc
xchg
icebp
add
push
xor
mov
aas
stos
rorb
lret
jae
scas
push
ret
sbb
inc
inc
inc
inc
stos
or
xchg
dec
inc
adc
outsb
add
pop
ja
adc
in
inc
inc
dec
inc
pop
add
arpl
inc
xlat
xchg
add
imul
mov
test
pop
inc
cmp
pop
mov
sbb
sub
lds
mov
or
pop
push
cmp
add
jmp
push
mov
jmp
dec
les
repnz
cmc
roll
cmpsl
adc
jge
cmpsl
mov
or
jmp
xchg
in
sbb
or
popl
cmp
testl
jne
sbb
mov
dec
mov
mov
add
pop
mov
xor
rol
inc
rol
sbb
sub
add
pop
jmp
fwait
mov
mov
dec
lahf
clc
mov
jecxz
icebp
mov
je
dec
add
mov
sub
mov
and
int3
nop
dec
lcall
sub
pop
dec
or
lcall
int
enter
daa
inc
mov
inc
add
or
or
pushf
rolb
pop
push
pop
add
and
adc
pop
mov
push
mov
mov
enter
lea
lret
clc
mov
lret
push
sub
nop
pop
cmp
test
cmpsb
fsubl
repz
shrl
test
stos
jmp
xchg
stos
sub
jle
add
lock
mov
pop
dec
mov
mov
or
push
xchg
sub
add
leave
data16
imul
lcall
nop
divl
shlb
or
inc
mov
aaa
into
movsl
mov
and
sbb
xchg
stos
mov
aaa
push
xchg
mov
sbb
push
jb
mov
inc
sub
push
mov
or
dec
mov
push
pop
pop
jbe
cmp
imul
dec
sbb
jecxz
or
add
mov
jbe
xor
stc
mov
pop
cmpsb
in
aad
add
loopne
jb
xor
test
mov
aad
movsl
mov
xchg
jns
xlat
scas
aaa
mov
jecxz
xlat
mov
mov
push
xor
jno
dec
xlat
in
adc
adc
and
insb
aam
inc
xlat
and
fnstsw
fnsave
and
and
int
xor
call
fnstenv
test
inc
repnz
inc
push
fldl2e
xor
movsb
ja
sbbl
notl
fildl
cmp
int3
je
lret
inc
fcmovnu
and
int3
es
push
and
and
push
xchg
pop
cmp
fstpt
aaa
int3
push
xchg
dec
daa
mov
outsb
or
xor
xchg
push
aaa
push
and
and
mov
fwait
sahf
add
mov
mov
mov
lods
mov
cs
xorl
mov
xchg
mov
int
xchg
mov
mov
pushf
pushf
mov
sub
mov
cmp
inc
dec
xor
repnz
jno
outsb
or
iret
push
mov
cltd
mov
sub
nop
xchg
lods
lods
lods
cs
rorb
rorb
sub
hlt
dec
stos
sbb
insb
sbb
inc
jns
mov
fnstcw
and
scas
or
div
and
nop
rorb
pop
sahf
cmp
pop
push
xchg
and
addl
push
orl
cld
pop
les
inc
or
pop
pop
add
inc
jnp
add
movb
push
mov
jae
addl
xor
sbb
idiv
mov
out
test
mov
inc
loop
push
loope
pop
movsl
lods
xchg
cwtl
add
push
jg
inc
adc
mov
and
xor
ljmp
mov
mul
rep
inc
loopne
or
mov
movsb
pop
xchg
testb
rolb
lock
cltd
inc
jno
movsb
or
in
lock
lock
cmp
or
mov
push
sbb
or
jo
popa
and
inc
inc
inc
adc
inc
cmp
add
add
inc
pop
or
or
or
daa
rorl
mov
shl
jg
ljmp
gs
std
dec
clc
jl
outsl
push
push
dec
adc
push
and
mov
pop
dec
push
pop
outsl
inc
or
push
jbe
jle
dec
addr16
out
outsl
ja
jo
int3
adc
and
and
mov
pop
dec
in
xor
fildll
mov
jbe
lea
inc
out
mov
rcl
imul
xor
dec
add
sub
enter
pop
fldt
inc
inc
push
negl
ret
mov
adc
shrb
lret
ret
mov
shr
addl
add
or
push
mov
clc
push
add
jae
pop
inc
jo
imul
fsts
out
sub
sub
fists
dec
or
sarl
xchg
push
mov
arpl
cs
mov
mov
stos
add
jmp
mov
cmp
imul
mov
imul
add
jne
cmpl
mov
cmp
cmp
je
cmp
and
cmp
loope
xchg
pop
sub
loope
rol
fucom
popa
push
xchg
mov
push
cmp
arpl
lret
mov
es
add
xor
adc
inc
cmp
rcl
push
mov
xchg
inc
ret
cli
add
fstpl
cld
and
inc
and
jg
loopne
pop
pusha
mov
inc
mov
test
fwait
ret
andl
or
stc
mov
in
es
adc
inc
jb
fmul
cmpl
pop
subl
or
pop
cmp
mov
cmpb
popl
cs
mov
cmp
test
sbb
imul
jmp
rcll
loopne
sbbl
cmp
rorb
mov
and
shll
ja
lods
sbb
mov
sbb
mov
inc
rol
adc
pop
test
xchg
jmp
inc
or
mov
add
sbb
mov
cmp
enter
daa
add
cmpsl
and
push
mov
xor
dec
mov
into
mov
jmp
outsl
mov
mov
and
add
loop
push
inc
sub
icebp
or
shll
mov
mov
jne
incl
rcrb
insb
mov
mov
pop
pop
add
out
dec
mov
add
in
int3
imul
sbb
in
add
inc
inc
sbb
push
scas
mov
mov
aas
adc
xor
into
sbb
and
arpl
mov
mov
lods
movsb
xchg
cld
enter
push
or
jne
dec
cltd
dec
mov
push
shl
cs
dec
clc
fisubrl
add
sub
fidivrl
movsl
ss
sub
jmp
add
jl
push
inc
cs
je
cmp
push
pusha
mov
or
pop
js
and
cmp
add
leave
shrb
ljmp
popa
push
pop
jle
inc
fildl
mov
mov
sbbl
push
cs
mov
mov
popl
test
es
push
cli
daa
or
mov
add
pop
and
cmc
and
movsl
les
xor
icebp
push
pop
cmp
dec
enter
adc
dec
scas
fmuls
sbb
lea
int3
arpl
fimuls
bound
adc
js
loop
ss
jb
jg
test
cmp
lea
add
add
clc
gs
push
lock
imul
mov
orl
insl
and
push
test
loope
xor
js
pop
add
negl
inc
add
push
push
je
cltd
hlt
outsl
sbb
lock
sub
lea
scas
mov
xor
pop
adc
xor
push
or
pop
dec
mov
iret
xchg
add
push
push
pop
push
int
lahf
or
fadd
mov
nop
leave
loopne
jl
mov
pop
and
lock
outsb
fidivrs
movl
add
pop
movb
xor
ficompl
popf
push
jle
jle
movb
push
mov
pop
sub
sbb
lret
pop
movsl
adc
sbb
ficompl
or
push
inc
fidivrs
or
fnstsw
sbb
or
inc
aas
add
fstl
push
addl
pop
mov
mov
lret
faddl
add
xor
rcrb
and
das
rorb
adc
js
add
sub
shll
adc
std
cmc
test
jl
out
nop
fstpt
iret
mov
pop
pop
push
push
mov
test
cwtl
mov
gs
or
sarl
pop
ret
add
xor
jmp
xchg
ja
sub
pusha
scas
mov
sbbb
gs
inc
jo
sbb
dec
jne
stos
mov
mov
repz
sub
xlat
test
push
orb
jmp
pop
clc
sbb
negb
or
and
cmc
cmpsl
loop
mov
rorl
jmp
sub
push
aaa
xor
fistl
mov
jne
jmp
lock
test
aam
adc
daa
cwtl
fcomp
loopne
sub
mov
movl
pushf
out
add
jmp
lods
push
mov
and
leave
pop
idivb
or
mov
outsb
add
dec
push
push
sub
bound
loopne
sbb
mov
inc
mov
adc
or
xor
xchg
mov
mov
sar
xor
pop
sbb
lock
int
paddq
dec
sub
xor
cmp
cli
mov
mov
test
sub
mov
movb
mov
add
fcmovnu
adcl
push
lock
jae
and
pop
mov
adc
mov
repnz
push
sbb
lea
pop
pop
push
sub
push
outsb
jg
mov
cmp
jecxz
or
sub
leave
testl
pop
mov
add
push
cmp
notb
xchg
imul
pop
arpl
jb
xchg
xchg
das
push
push
jb
pop
addr16
aaa
sbb
es
add
push
add
jnp
incb
ss
fs
daa
jg
push
test
adc
jmp
mov
cmp
or
les
inc
mov
fmuls
adc
stos
mov
jecxz
dec
pop
inc
mov
dec
push
js
push
mov
push
popf
pop
pop
or
xor
adc
ficomps
fnclex
dec
sbb
xchg
add
cmp
js
addb
subb
addb
or
cmp
movb
or
mov
push
clc
stc
icebp
jge
or
adc
push
mov
lea
fisttps
push
pop
dec
adc
in
hlt
clc
sbb
xchg
pop
lock
and
test
push
or
lods
ret
sub
add
or
xor
xchg
or
mov
pusha
sub
adc
and
adc
mov
add
pop
xchg
xchg
cmpsl
mov
add
outsb
add
add
sarl
ficoms
add
lret
sbb
test
mov
ficoml
hlt
jge
inc
push
sbb
icebp
fnsave
fdivrs
pop
and
or
js
insl
add
mov
jo
mov
mov
lds
addr16
aad
cmp
std
into
xchg
fs
adc
idivl
push
dec
inc
add
mov
hlt
hlt
jmp
mov
lods
fsub
scas
mov
hlt
in
out
add
test
adc
inc
sti
or
xchg
jno
ret
scas
scas
inc
enter
cmp
xchg
pusha
adc
mov
and
shlb
sub
dec
inc
jns
dec
ja
test
lahf
adc
je
loopne
mov
dec
sub
jmp
jns
dec
jnp
inc
push
aas
clc
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
test
lock
or
addb
inc
pushf
adc
pop
lea
sub
nop
or
adc
rcll
pop
and
sbb
rorb
add
enter
cmp
enter
add
jb
mov
pop
xchg
sbb
add
ret
sub
call
push
pop
or
rolb
push
or
out
jne
xchg
adc
push
lock
mull
or
imul
mov
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
fs
mul
pop
jb
cmp
or
cmp
or
fwait
cmpb
adc
stos
test
jle
neg
xchg
lret
scas
sar
iret
pop
ret
adc
inc
inc
inc
and
jl
xchg
pcmpeqd
mov
lret
divl
cli
inc
adc
inc
sar
mov
xchg
inc
in
xor
lea
pop
fisubrs
mov
cwtl
icebp
insl
addr16
or
xchg
or
and
addb
sar
shr
xchg
cmpsl
cmp
xchg
cmc
sahf
call
sahf
stos
or
popa
dec
pushl
jb
testb
bound
jo
mov
jl
jo
inc
in
inc
xor
xlat
mov
adc
mov
mov
jne
xchg
sarb
sbb
push
into
jmp
insl
pusha
add
test
xor
sbb
xor
pop
hlt
jl
insl
inc
orb
clc
loop
nop
sbb
imul
push
dec
and
stos
pop
ret
mov
mov
data16
add
sbb
movq
mov
pop
lret
cmp
jo
add
xchg
js
fiaddl
add
dec
sbb
mov
popf
iret
mov
push
mov
push
dec
paddq
call
inc
cmp
mov
push
movsb
mov
pusha
daa
push
loopne
inc
mov
fadds
dec
inc
decb
dec
test
adc
and
or
mov
add
nop
jg
or
aaa
xor
add
cmpl
inc
ss
aam
enter
xchg
mov
loope
or
pop
pop
outsb
xor
add
and
add
insl
pop
cs
jbe
and
adc
mov
sub
int3
rol
sbb
cli
push
adc
movsb
or
outsb
clc
adc
inc
mov
xchg
icebp
mov
jo
push
test
fwait
mov
xorb
adcb
add
or
dec
mov
mov
loop
mov
adc
sbb
imul
push
add
stos
or
imul
or
loop
inc
arpl
xor
dec
mov
mov
sarb
cmpsb
imul
negb
push
mov
sarb
ret
je
mov
loope
push
sub
sub
ret
jmp
fcmovnu
push
jnp
cmpl
ljmp
scas
cmovle
push
mov
lds
ss
mov
jmp
adc
outsl
push
cmpsl
repnz
adc
adc
or
imul
nop
mov
dec
movsl
shrb
cmpsb
mov
adc
lcall
xchg
aad
nop
aam
mov
xchg
sub
aam
js
inc
fidivl
fucomi
mov
cli
mov
sub
inc
enter
inc
sar
addr16
adc
sbb
jecxz
aam
xor
cmp
inc
jmp
faddp
ret
call
jne
imul
bound
dec
mov
add
cmc
aas
sbb
jl
sub
cmp
cmp
popf
or
push
pop
lea
pusha
cmpl
or
lock
xor
icebp
xor
push
xchg
shlb
outsl
pop
or
push
adc
shl
out
outsb
and
add
cmpsl
add
stos
iret
mov
es
jl
loopne
push
adc
and
sbb
gs
cmp
jge
mov
shrl
jae
shlb
push
and
dec
and
mov
sbb
test
imul
or
and
sbb
adc
stc
sbb
mov
inc
shlb
push
pop
jb
adc
add
movsb
idivb
cli
and
shl
sbb
pushf
xor
add
push
fistpll
and
cmpsb
ljmp
orb
rcrl
or
mov
dec
lcall
sub
loope
ja
rcll
orl
sbb
xchg
adc
fsts
push
or
push
sub
fldcw
loopne
enter
pop
inc
pop
mulb
sbb
repz
sub
loope
andl
enter
xchg
lock
outsb
les
mov
ja
push
pop
mov
stc
loopne
addr16
pop
pusha
mov
and
mov
loop
inc
lods
push
mov
add
rolb
push
mov
add
out
nop
jae
inc
adc
or
and
fisttps
sub
sbb
push
fisubrl
cmp
add
outsb
mov
inc
lea
lea
or
add
aas
pushf
and
cmpl
lods
ret
inc
bound
push
js
ds
add
mov
pop
xor
cmp
push
js
xor
xadd
jge
ror
sub
or
jle
sahf
and
mov
mov
adc
and
pushl
add
popa
mov
jno
push
ss
pop
pop
loop
mov
push
push
mov
sub
mov
shrl
cmp
lock
sbb
ds
pop
push
push
mov
fnstenv
push
ds
es
insb
or
shlb
cmpsb
add
or
xchg
xchg
in
scas
jl
mov
push
popa
unpckhps
or
or
add
scas
fisubrs
stos
aaa
sbb
cmp
and
mov
mov
jne
lcall
push
add
push
pop
test
add
aas
call
or
ss
addb
or
loopne
xor
push
daa
sbb
sbb
ds
mov
inc
rcrb
pusha
pop
pop
dec
sbb
sbb
pop
aad
shl
xchg
add
orb
aaa
pusha
pop
test
or
cmp
push
add
outsb
push
xor
push
insb
mov
movd
and
mov
jmp
pop
lret
incl
rcrl
pop
jo
jl
mov
dec
shl
loopne
and
clc
das
xor
or
mov
gs
rol
loope
mov
loopne
mov
xlat
sti
clc
test
or
adc
lods
jae
add
lea
add
adc
not
adc
outsb
inc
dec
cs
xchg
bound
and
inc
mov
test
das
xchg
push
pop
insl
loopne
push
cmp
xchg
or
sub
mov
adc
sysexit
dec
outsl
cmp
inc
fsubr
das
jo
jmp
int
addr16
pushl
leave
lcall
fistpl
inc
rorb
nop
sub
sub
jl
mov
rolb
push
inc
push
roll
push
mov
xor
rcrl
or
jo
js
mov
cmp
add
fbstp
push
lods
mov
cmp
inc
shll
or
or
jle
jmp
push
mov
cs
push
or
xchg
xchg
cmp
dec
loop
lea
and
roll
call
mov
add
push
pop
test
sarb
hlt
add
jno
push
sub
or
cmpsl
jl
into
incb
repnz
or
xor
fwait
mov
inc
sti
test
stos
popf
add
sub
and
push
out
aaa
pop
cld
mov
das
cwtl
cmp
jle
sub
cmp
clc
pop
xchg
xor
push
jmp
dec
push
mov
dec
pusha
in
jbe
or
cmp
jae
out
ficomps
lds
stos
lock
inc
sbb
sbb
mov
sub
ret
jmp
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
dec
lea
bound
mov
and
cmp
mov
orl
pop
cs
jl
inc
jnp
stos
mov
xor
popf
push
xor
mov
lods
sub
mov
xchg
inc
stos
loopne
add
add
je
mov
data16
loop
outsb
nop
mov
push
cmpsb
push
shrb
cmp
rcrb
inc
pushf
testl
and
mov
inc
jmp
mov
dec
dec
or
iret
xor
clc
cmp
and
add
jg
and
lea
cmp
or
scas
or
jecxz
push
push
inc
jmp
enter
cmp
pop
xor
ds
dec
mov
dec
inc
or
and
hlt
lret
or
popa
jne
das
add
xor
sub
cs
jge
inc
int
adc
dec
adc
push
inc
sbb
xlat
test
cmp
sti
or
sub
add
cmpsb
into
lods
outsb
mov
add
sub
inc
es
or
mov
adc
push
ret
adc
inc
mov
cmpb
fs
lods
sarl
add
inc
js
pop
mov
mov
sbbl
sbb
mov
jb
aam
add
add
enter
aam
xorb
out
or
xlat
std
xor
jne
mov
roll
push
dec
arpl
insl
dec
pop
add
jae
sar
xor
mov
push
or
xchg
in
mov
mov
xchg
add
loope
and
pop
inc
testl
out
jne
and
dec
adc
ss
repz
jne
inc
or
xchg
test
cmp
cmp
xor
mov
dec
push
dec
adc
nop
jbe
fwait
add
cwtl
xchg
test
push
pushf
insl
pop
sub
jl
lea
lcall
test
mov
adc
clc
popa
add
sub
aaa
rorb
add
cld
mov
movsl
add
lock
incw
cmpl
insl
mov
ss
and
fbld
sbb
sti
jg
add
add
cmpsb
aaa
ret
inc
loop
sub
aam
gs
call
testb
shr
and
or
push
sahf
xchg
jne
sbbl
into
or
adc
ret
jns
mov
outsb
pop
mov
je
das
jo
jl
fcom
insl
fadd
loopne
shr
or
js
pop
sti
mov
sahf
dec
mov
jne
push
mov
mov
mov
push
push
push
inc
cmp
or
add
rcr
mov
xor
adcb
inc
sub
push
out
stos
lds
jmp
or
lods
mov
or
push
and
mov
jne
inc
pop
mov
out
xor
or
jl
dec
int3
int3
jmp
popl
add
daa
mov
and
push
dec
into
jmp
ss
add
mov
rcrb
pop
dec
and
les
fiadds
dec
and
and
sbb
sub
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
or
jo
mov
inc
mov
psraw
mov
push
push
mov
fnstcw
faddl
xchg
loop
adc
out
sahf
nop
movsb
std
call
sub
in
test
push
mov
or
add
testb
add
xchg
mov
push
push
shrb
sub
int3
sbb
mov
pop
daa
push
aam
jecxz
mov
mov
sbb
add
pop
add
push
xor
mov
pop
in
lret
sbb
aad
movsl
jno
sbb
jne
stos
popa
sbb
inc
adc
add
jecxz
sbb
dec
push
adc
ret
add
jo
and
mov
sub
test
or
sysret
test
sub
xor
lea
push
sbb
mov
add
adcl
pop
lea
xor
sbb
pop
bound
inc
inc
pushl
int
and
add
mov
push
or
sbb
xor
ret
lea
sbb
test
or
int
add
clc
call
xor
jmp
jmp
sar
push
or
movsb
js
cmp
push
adc
stos
cmp
iret
sbb
adc
pusha
faddl
and
xor
in
xchg
sbb
jnp
mov
test
push
add
shrl
lea
cmovl
loope
inc
cwtl
xchg
push
sbb
mov
es
push
loopne
sbb
jmp
xchg
and
pop
pop
dec
inc
sbb
lods
sub
xlat
cld
add
pop
test
cmp
xor
push
pop
jo
in
test
pop
loope
push
std
jmp
push
dec
lahf
loope
push
lea
add
leave
sbbb
sti
sar
mov
aas
or
loopne
or
testb
dec
adc
pop
or
or
add
jb
cmp
cmc
and
push
lods
lahf
addr16
sbb
imul
sbb
insb
add
jne
dec
pusha
and
dec
clc
icebp
lods
add
inc
pushl
mov
jns
sbb
pop
pusha
cmp
or
xor
push
push
aas
inc
pushf
data16
and
lcall
push
inc
jo
enter
imul
mov
pop
mov
cmp
sbb
push
add
test
fists
mov
mov
mov
andl
fsubrl
test
inc
and
or
lret
add
pop
push
insl
test
mov
test
lock
roll
add
call
pop
out
lock
cs
inc
inc
xlat
ret
test
dec
push
fdivl
inc
add
jnp
sti
inc
cmp
jnp
pusha
enter
imul
add
xor
push
test
jnp
fs
add
fidivl
jl
lea
mov
sbb
add
out
sbb
or
js
loopne
add
mov
sbb
out
add
lds
rol
xchg
movb
int
xor
imul
dec
push
es
mov
test
int3
mov
and
aad
sbb
pop
sbb
out
or
jl
jb
outsl
xchg
in
aam
adc
mov
push
sysenter
sbb
dec
pop
fldt
sarb
addr16
mov
popl
dec
std
ret
inc
or
ss
loope
fs
xor
jae
mov
outsl
popa
mov
cli
or
shufps
stos
sub
push
addl
push
addr16
xchg
lock
lahf
fwait
mov
fisttpll
testl
cmp
add
sub
sub
insb
dec
roll
jne
push
dec
mov
outsl
xchg
pusha
jbe
fs
pop
jns
jne
or
adc
fdivp
mov
stc
cltd
jg
sbb
mov
pop
data16
cmpsl
lods
sub
or
fstps
adc
cmpl
add
push
mov
daa
mov
jne
movsl
jne
lea
push
lods
stc
cmp
add
push
add
shlb
and
pop
pop
add
push
shll
jmp
scas
test
push
orb
jmp
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
addr16
add
adc
sub
das
and
adc
mov
ficoms
adcb
jno
xchg
jp
das
cwtl
inc
je
xor
xchg
int3
test
sbb
cmp
aam
or
jmp
and
xchg
shll
cmpsb
inc
mov
cmp
pop
adcl
or
enter
inc
pop
lret
fdivrs
add
or
or
outsb
xlat
add
adc
bndstx
inc
adc
and
daa
xchg
xor
test
add
out
adc
enter
les
pop
mov
test
add
lods
inc
mov
xor
xchg
mov
push
mov
and
bound
xchg
pop
fcompl
or
pop
xor
push
ret
mov
and
mov
or
cmp
mov
xchg
pop
xchg
xor
add
bound
xor
loop
fmul
mov
jmp
xor
lods
inc
scas
lock
dec
add
inc
sub
cmp
ja
xchg
add
push
jmp
test
push
imul
nop
sub
cmp
shlb
into
pop
jmp
addl
js
pop
sbb
inc
pop
jae
or
push
add
cmpsl
popa
push
addb
rolb
mov
xor
testl
hlt
adc
icebp
ljmp
jb
mov
jp
icebp
enter
and
xchg
nop
dec
jae
adc
dec
push
sbbb
sbb
cmp
cmp
imul
leave
test
dec
mov
sbb
push
dec
jae
jmp
dec
xchg
rcrb
cmpl
lods
icebp
add
mov
adc
jl
push
ret
fcoml
pop
jnp
loope
pop
pop
adc
gs
xor
jb
cmp
mov
or
dec
nop
sub
mov
js
inc
sbb
sub
in
jae
mov
fnclex
add
jmp
and
xchg
pushf
mov
subb
cmp
les
mov
mov
or
icebp
shrb
or
xchg
or
sbb
addl
out
add
push
enter
mov
fs
cmpl
pop
add
mov
loopne
inc
or
js
fcoml
outsb
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
mov
mov
insb
aad
inc
mov
fistpll
rcll
mov
xor
cli
rolb
sbb
push
sub
test
bound
push
jnp
popa
clc
mov
jne
pop
push
pcmpeqw
xchg
mov
add
imul
or
inc
rcl
or
lea
and
jno
ret
lea
ficoms
std
lods
pop
int3
mov
ss
lcall
or
cmp
add
int3
push
cmp
icebp
ss
add
imul
add
in
int
jb
imul
dec
or
daa
mov
sbb
int
xor
sub
pop
rcl
imul
or
lock
cmpb
pop
sub
int3
jnp
jl
push
or
jne
jge
push
js
pop
mov
xor
mov
xor
push
lret
outsl
inc
lret
repnz
or
jmp
nop
das
inc
lods
mov
je
loopne
dec
dec
mull
je
jae
mov
xchg
out
sub
pop
jl
jmp
test
push
jno
fwait
or
add
insl
scas
aas
cmp
push
pop
inc
in
xchg
sub
nop
add
cld
cwtl
pop
mov
mov
dec
idivb
test
inc
pusha
jne,pn
sbb
out
fwait
fs
inc
mov
aaa
fildll
fcoml
les
sbb
or
xchg
cli
mov
xchg
jmp
push
push
icebp
out
adc
add
test
sbb
subb
mov
sbb
xchg
daa
push
adc
or
movl
lea
sbbb
popa
jp
mov
cmp
roll
loop
es
dec
sbb
xor
fwait
mov
popa
ret
dec
bound
mov
or
pop
rcrb
inc
mov
mov
mov
jb
je
test
or
sub
call
jecxz
lahf
push
cltd
rorb
xchg
cmp
or
cmpb
popa
clc
jo
adc
stos
or
hlt
mov
push
cs
jnp
sbb
or
inc
and
imul
out
mov
or
add
jg
addl
aad
imul
xor
adc
add
inc
jl
push
test
mov
push
nop
pop
jp
pop
add
jge
pushf
cmpb
lds
nop
jb
cwtl
add
cmp
fnsave
push
xor
pop
push
mov
push
cwtl
in
sahf
inc
mov
mov
xor
daa
pushf
mov
jmp
cmp
push
je
inc
rcll
daa
add
push
sahf
inc
xor
andl
pusha
sarb
mov
icebp
cld
imulb
mov
in
sub
inc
xor
adc
stos
mov
scas
inc
cs
ja
cwtl
out
imul
push
nop
daa
cmpsb
or
das
mov
jle
add
lret
les
fisttpll
pop
xchg
push
pop
es
stos
out
sarl
pop
add
and
pop
adc
jle
add
mov
orl
bound
mov
cmp
into
and
inc
lahf
pop
jecxz
jle
cmpl
dec
xchg
jae
or
movsb
jne
addr16
mov
adc
enter
cltd
addr16
xor
test
dec
in
and
pusha
popf
cmp
clc
sub
add
sub
or
push
or
daa
daa
daa
or
adc
pushf
fsubrl
ss
pushf
pushf
pushf
pushf
sub
xor
mov
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
jns
inc
lcall
adc
dec
xor
and
mov
xchg
cwtl
pushf
leave
and
dec
mov
dec
sahf
mov
es
enter
cltd
fisubl
adc
dec
es
call
in
aam
dec
es
fs
clc
cld
or
enter
or
gs
cmpsb
dec
sbb
adc
xchg
sbb
and
fs
dec
sub
fs
dec
es
cmp
xchg
sub
leave
and
push
dec
mov
and
dec
xor
pusha
stos
push
dec
loope
pop
jg
mov
push
and
cmpb
and
xchg
xor
jle
mov
shll
or
stc
cs
adc
cs
pop
xchg
sbb
sbb
and
and
cmp
cmp
mov
xchg
dec
inc
les
enter
dec
int3
sub
decb
dec
enter
pop
movsb
lods
add
adc
aam
or
ret
decl
xchg
and
movsb
icebp
movsb
push
inc
xchg
or
call
cmp
repz
xor
add
push
and
pusha
dec
or
and
push
or
adc
push
fisubs
pop
mov
dec
add
movsl
or
test
and
add
into
and
adc
xchg
and
in
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
pop
mov
and
push
out
ret
cmp
dec
jge
or
adc
or
pushf
push
addb
mov
clc
sbbl
mov
xor
push
ss
or
mov
loop
mov
jne
dec
cld
cltd
call
add
dec
mov
pop
adc
lock
and
mov
mov
jl
and
jecxz
sbb
sub
mov
jmp
lock
aaa
or
adc
and
xchg
cli
xor
sub
aaa
jge
je
mov
flds
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
or
movsb
sub
fnstsw
pusha
inc
jne
push
pusha
fldl
cmp
notb
mov
mov
ret
cmovb
inc
or
lret
adc
sti
add
dec
jmp
test
js
push
push
mov
inc
pop
das
sub
pop
shl
sub
push
and
rcrb
or
push
jmp
out
and
xorb
rclb
pop
out
xor
lcall
and
or
lods
or
flds
xlat
sub
fstps
jmp
fisttpll
rorb
dec
fndisi(8087
movsl
pop
test
inc
push
hlt
adc
jbe
fildl
pmulhw
pop
sub
jmp
orl
cmp
inc
test
test
cmp
mov
push
inc
call
xchg
xchg
push
aaa
sbb
out
aad
dec
mov
lea
jmp
lock
sub
pop
jbe
pop
sub
jmp
sub
push
in
divb
or
jmp
fldcw
inc
test
into
adc
syscall
leave
xor
scas
cmpsb
sbb
shrb
mov
je
add
jnp
mov
sub
aaa
ret
nop
mov
lea
or
mov
stc
and
hlt
xor
repz
sub
xchg
pop
add
in
inc
shll
xor
dec
add
enter
rclb
add
aam
pop
test
stos
xchg
dec
cld
cli
shrl
jl
orl
sbbb
loopne
stos
cmp
pop
or
push
rolb
adc
adcl
lcall
cmpsb
mov
aaa
rol
or
push
pop
cwtl
sbbb
and
test
adc
jg
sbb
testl
test
pop
lret
add
xor
and
test
enter
add
orl
ret
clc
cmp
and
sub
je
outsb
sbb
loopne
pop
pop
lret
imul
or
sbb
sub
cld
sbb
hlt
pop
xchg
mov
cltd
and
and
sub
shrb
insb
jge
pop
pop
aaa
addr16
jbe
add
pop
fstpl
in
out
add
jmp
jno
adc
into
pop
leave
dec
inc
and
ret
sahf
dec
das
lock
xor
push
or
fisttpll
mov
or
hlt
mov
jo
pop
xchg
push
sub
cmp
and
fwait
dec
mov
in
push
mov
outsb
or
ret
call
jae
fadd
cmpsb
dec
or
add
mov
jbe
push
das
adc
add
rolb
mov
mov
arpl
out
add
and
outsl
xor
or
sbb
jnp
add
dec
add
mov
jne
je
dec
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
push
shufps
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
pop
cmpb
add
or
adc
ret
imul
push
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
jns
ficompl
gs
or
shl
fcoms
aam
add
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
scas
and
rorb
data16
or
insl
or
inc
jl
fsts
dec
cwtl
or
sub
nop
or
aam
test
fmuls
pop
and
sbb
adc
pop
mov
nop
call
jb
jo
movsb
fldpi
xor
pop
stos
adc
loopne
mov
push
je
sbb
push
inc
scas
xsaveopt
push
inc
adc
aas
cmpsb
cmp
fstpt
inc
mov
and
pop
add
mov
and
loopne
test
or
xchg
ss
and
mov
sbb
lds
incb
add
dec
lcall
test
lock
nop
push
cmpsb
es
mov
or
push
sbb
sahf
adc
mov
xor
or
inc
mov
lcall
cmp
xchg
xchg
imul
add
pop
adcb
cld
jo
ficomps
nop
lret
je
mov
and
pop
push
dec
push
and
sti
xchg
out
xchg
shrl
add
xchg
out
daa
xor
jb
or
or
das
inc
fbstp
push
add
push
push
or
add
loope
cmp
add
pop
std
cmp
add
pushf
pop
pop
inc
cmpsb
dec
or
or
mov
push
test
push
or
outsb
mov
and
aas
dec
loope
inc
test
xlat
cmp
mov
lret
loopne
test
add
add
push
xchg
push
imul
hlt
jbe
stos
pop
pop
or
push
inc
xor
sub
or
jle
sub
mov
or
pop
pop
add
stos
andb
aas
es
ret
dec
or
inc
lea
icebp
push
bound
mov
lret
cs
xorb
push
jg
jnp
pop
ss
loop
rolb
cmpl
add
outsb
out
pop
ficompl
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
pushf
or
or
and
clc
sbb
popf
dec
call
pop
loopne
inc
add
bound
pop
mov
dec
addb
repnz
sahf
jns
or
adc
lock
mov
mov
sqrtps
scas
pop
jge
lea
sub
sub
inc
xchg
cmpl
add
repnz
aad
enter
cmp
stos
mov
cmpb
or
mov
xchg
push
inc
aam
push
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
and
push
fdiv
jp
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
adc
mov
dec
add
sub
pop
adc
loope
sbb
mov
or
dec
jns
sub
lea
adc
sarb
push
sbb
inc
lods
sbb
inc
jno
jmp
xchg
andl
clc
dec
or
inc
rcrl
aas
xor
push
cli
mov
ds
mov
lods
fsubr
pop
pop
inc
xor
add
add
incb
enter
dec
jns
jo
movsl
cmp
and
shl
sub
push
aas
mov
cmp
dec
arpl
lea
fmull
frstor
mov
dec
movsb
addr16
xchg
inc
xchg
adc
jno
arpl
xchg
loopne
shll
pop
xchg
pop
pop
mov
mov
mov
andl
push
dec
into
out
pop
icebp
pop
add
jl
stos
iret
and
popf
sarl
out
and
mov
inc
mov
jge
or
nop
rolb
dec
lods
shl
test
pop
jle
xchg
dec
dec
or
fildl
mov
loop
pop
lock
cwtl
adc
push
int3
pop
push
push
or
lret
jne
pusha
jo
clc
and
adc
adc
mov
mov
cmpsb
dec
push
adc
push
xchg
pop
add
adc
push
in
inc
sub
movsb
add
dec
je
pop
cmp
or
imul
or
popa
pop
mov
or
sbb
mov
jne
cmp
mov
add
nop
jp
fs
mov
add
fidivl
test
inc
mov
mov
rorl
fisubrl
insb
lods
jp
pop
mov
xchg
add
dec
jo
sub
sbb
mov
mov
cmp
insb
inc
cs
or
ss
clc
jg
sti
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
pop
mov
sbb
fwait
and
fcompl
fistpll
xchg
inc
arpl
arpl
leave
inc
inc
outsb
sub
cmpl
pop
or
jmp
xor
mov
lods
sub
cmp
adc
push
and
pop
adc
jbe
outsl
notl
notl
jno
adc
shlb
mov
jle
cmp
cmpsb
add
sbb
fadds
loopne
jne
xlat
adc
fcoml
and
jbe
or
add
sbb
cmp
loop
lret
jg
push
pop
sbb
mov
dec
adc
cmp
cld
clc
add
mov
popf
data16
icebp
aad
lock
sub
sub
inc
incl
jle
mov
cld
inc
cmp
bound
add
jo
lcall
add
lods
jge
and
mov
fiadds
in
sub
mov
and
ljmp
hlt
test
push
mov
add
inc
test
push
neg
movb
popa
cld
bound
push
push
mov
pop
adc
cmpsb
enter
loope
add
pop
rolb
je
cmp
xor
mov
daa
test
insl
in
jns
inc
str
pop
add
add
xor
test
inc
sbb
test
sbb
mov
sub
push
mov
iret
ret
jmp
test
mov
and
in
lock
rcll
ffree
adc
xchg
ret
pop
inc
push
push
adc
shlb
rcll
rol
sbb
inc
jo
push
xor
add
addb
jno
sbb
mov
and
push
sbb
or
fadd
xor
sub
xlat
add
jl
push
icebp
dec
cmp
jge
adc
je
movsb
inc
and
in
xchg
sbb
les
jns
test
cmp
push
adcb
xchg
sahf
pop
ljmp
push
and
cmp
sub
adc
call
ret
imul
push
inc
lea
jae
loope
fcompl
sub
adc
jnp
mov
cmp
xchg
dec
sbb
test
enter
js
aad
add
subb
push
lahf
mov
fists
dec
sub
leave
and
ror
mov
add
insb
movb
scas
and
mov
fnstsw
inc
outsb
inc
popf
neg
sbb
mov
and
lock
pop
pop
mov
shll
ljmp
ljmp
subb
cli
fisubs
inc
in
call
nop
pop
divb
mov
jb
add
mov
or
mov
push
mov
bound
sub
or
cmp
add
adc
faddl
adc
clc
sub
sbb
rcrb
bswap
sub
fsubrs
and
xor
cmp
movsl
fdivl
cs
cld
add
mov
das
or
shrd
sbb
imull
cmp
jge
sbb
pop
add
jl
movsl
clc
cwtl
xor
push
jb
outsb
data16
push
in
inc
and
xor
out
mov
add
cmp
cmp
rorl
mov
incb
push
adc
movsl
lea
insb
jno
or
lock
xor
jo
mov
push
and
insl
xchg
lock
pop
sbb
js
jg
jb
repz
ret
js
fsubr
or
cld
scas
pop
adc
neg
mov
cmp
sarl
lock
push
shll
sar
push
xchg
sub
add
mov
push
lock
stos
adc
sarb
nop
sbb
shrb
mov
jae
ficompl
inc
dec
pop
or
push
dec
sbb
or
orl
dec
dec
pushf
jnp
shll
cmp
in
ja
xor
add
mov
jbe
fistl
ds
add
sbb
data16
cmp
sub
jp
fidivrl
shlb
add
loopne
push
sbb
mov
jmp
lods
add
push
inc
mov
add
out
sub
jns
neg
incl
inc
xchg
inc
or
or
adc
lock
ret
aaa
push
lods
ficomps
or
aas
pusha
addb
push
mov
push
xchg
dec
and
insb
jmp
das
push
inc
lock
fdivs
and
jb
cmp
jbe
jl
sbb
or
push
mov
or
mov
inc
push
add
sbbb
daa
nop
push
divb
push
cmp
mov
push
inc
out
mov
dec
sub
lods
push
jb
stc
test
pusha
sub
sbb
push
push
push
bound
out
out
add
mov
cld
jl
sub
mov
inc
or
add
push
add
push
inc
popa
popf
jmp
xor
jo
adc
addl
gs
scas
fs
or
pop
data16
inc
outsb
lret
imul
popa
je
testb
dec
sbb
adc
add
dec
jmp
pop
push
test
popf
sbb
rclb
dec
loopne
je
mov
xorb
clc
inc
adc
aaa
xor
or
or
mov
add
loope
mov
les
ret
cmp
mov
ljmp
inc
lods
test
out
dec
sub
ds
push
adc
mov
cmpb
jne
xor
mov
cmovo
adc
push
xchg
sar
or
in
cmp
ret
int3
adc
fcomp
jns
add
movsb
push
sbb
mull
jge
mov
cmc
or
sbb
je
mov
idivb
mov
xchg
mov
sbb
add
ljmp
fdivrl
das
lea
rol
add
ds
adc
test
fwait
push
xor
roll
push
mov
adc
xor
push
lret
sbb
sub
and
push
push
data16
jg
cs
push
push
leave
inc
pop
mov
inc
ljmp
subl
mov
cmp
pop
dec
insl
outsb
or
cmp
mov
and
mov
test
inc
mov
iret
test
ret
adc
jg
push
push
xchg
sub
cmpl
pop
clc
add
or
push
sbb
dec
push
mov
adc
xlat
push
add
jne
or
push
mov
pop
out
icebp
gs
shrb
pop
adc
or
enter
and
jo
icebp
jb
jge
or
mov
inc
push
in
negb
ja
sbb
dec
je
dec
push
push
jmp
or
jmp
mov
into
or
lcall
mov
inc
inc
sbb
xchg
je
repz
data16
jmp
xor
sbb
int
or
or
cmp
or
sbb
inc
xor
arpl
cmp
outsl
xor
ficomps
sbb
jne
adc
add
fdivp
and
cmp
je
mov
sbb
fldl2t
mov
outsl
loop
or
or
jmp
jbe
fs
jb
pop
inc
adc
add
and
sub
sarb
mov
inc
sub
xor
sub
inc
movsb
and
test
lods
mov
test
mov
mov
mov
cmp
ret
and
pushf
and
sbb
ret
sbb
xor
and
mov
pusha
xchg
call
dec
mov
rorl
or
sbb
lret
aam
adc
movsb
mov
scas
xchg
jge
shr
add
or
dec
cld
inc
mov
or
mov
push
and
dec
call
and
add
mov
insb
xchg
push
movsl
notb
lock
stc
xchg
mov
mov
cmpsb
jp
cli
fcmovnu
dec
pusha
cmp
leave
inc
jbe
add
lock
mov
sbb
cmp
or
xor
pop
fimuls
ror
and
push
sti
sbb
mov
and
and
rcll
pushf
cmp
xor
ficoms
into
clc
sbbl
lea
inc
in
push
pushfw
xchg
mov
fxch
stos
lods
mov
outsb
lcall
mov
ja
pushf
push
xchg
xchg
lret
mov
mov
es
push
mov
cli
ficomps
adc
push
and
lea
mov
icebp
insl
loop
sub
dec
stos
mov
dec
push
lret
mov
roll
pop
add
pop
call
mov
shll
pushw
shrl
or
sbb
xchg
outsb
xchg
das
sub
sahf
mov
lods
dec
cmp
loop
leave
test
mov
mov
ds
aaa
push
sub
loope
pop
dec
sbb
and
add
fmull
mov
xchg
xchg
addl
cmpsb
and
sbb
pop
jo
adcl
dec
bound
add
loopne
adc
and
ret
insl
adc
insl
mov
ret
and
in
stos
jo
and
shrl
sbb
and
cmp
add
jo
pop
movsl
add
clc
ret
mov
sarb
or
icebp
leave
push
pop
xor
pop
divb
mov
fistpll
outsl
das
insb
das
add
outsl
inc
mov
xchg
mov
in
rcr
sub
and
or
sbb
js
jmp
adc
sbb
xor
mov
dec
inc
pusha
repnz
andb
add
add
pop
je
xor
adc
add
ret
sub
bound
or
andb
fidivl
lret
jbe
sub
sub
jno
add
sub
push
add
jmp
and
cmp
and
pop
in
push
shr
push
sbb
add
call
pusha
push
ljmp
leave
imul
push
sidtl
lcall
call
clc
xor
call
nop
hlt
lcall
inc
and
or
mov
daa
movsl
jo
pop
cmpsb
sbb
fwait
fwait
or
leave
inc
xor
dec
dec
or
and
xchg
adc
cmpb
jl
ss
mov
pushl
cmpb
je
jbe
xor
inc
aam
push
fstl
adc
add
sbb
ficoml
rclb
inc
push
test
jmp
fistl
fwait
add
imul
mov
ds
mov
inc
and
shll
sahf
push
and
ljmp
nop
adc
jne
cmp
jne
xorb
dec
add
mov
add
outsl
ret
into
adc
rorb
push
cltd
pop
rcrl
fprem
out
roll
leave
mov
or
je
mov
iret
add
add
mov
lods
or
cltd
je
test
add
pop
mov
mov
pop
sahf
jne
inc
cmpsl
lahf
xor
movsw
sti
int
rcll
sub
add
mov
mov
or
orb
shl
adc
add
jo
fisttpll
add
push
jg
push
and
in
dec
jge
inc
jnp
jg
inc
push
neg
neg
sbb
sub
mov
sbb
fwait
inc
rcrb
sbb
mov
sbb
pop
jnp
sbb
push
push
inc
and
fsts
cmp
mov
icebp
sbb
sbb
movsb
sbb
sbb
and
and
ror
dec
jns
popa
xchg
add
mov
pop
aam
sub
in
push
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
adc
lock
idiv
and
adc
push
je
neg
cld
lock
je
pop
das
push
pop
enter
repz
adc
xor
jne
out
sub
into
add
pop
pop
lods
cmp
dec
adc
adc
imul
add
aaa
adc
das
push
or
aad
loope
into
jbe
jne
inc
adc
xorb
movsl
das
hlt
adc
and
aas
mov
or
push
popa
mov
xor
add
dec
inc
jae
xor
outsb
out
or
addb
xchg
lcall
lods
dec
fcmovu
mov
test
mov
or
push
mov
call
rcrl
sub
cld
inc
stos
and
dec
add
cmpsb
jnp
testb
adc
cmpsb
je
cld
popf
dec
mov
leave
jne
adc
inc
add
mov
lock
add
pop
pusha
push
push
icebp
sbb
xchg
or
mov
mov
inc
mov
mov
cs
adc
mov
or
mov
je
adc
iret
sti
jg
jl
out
push
cmp
ja
add
cmp
adc
mov
xchg
hlt
cmp
jne
shll
leave
adc
call
sbb
add
jl
pop
pop
xchg
sbb
je
dec
inc
mov
gs
mov
sub
call
rclb
mov
push
test
xchg
aam
data16
aas
cs
aaa
inc
mov
add
jno
ljmp
inc
ja
iret
cmp
scas
xchg
add
test
aaa
xchg
push
adcb
movl
add
jb
add
cmp
or
xchg
inc
pop
xchg
xor
pop
mov
rcl
adc
jp
mov
mov
adc
jmp
jl
inc
jb
mov
sarb
jmp
andb
sbb
insb
cmp
push
add
push
add
jno
add
fwait
mov
xchg
aam
imul
lock
shr
inc
sub
lock
dec
lea
sar
dec
dec
jmp
inc
outsb
movswl
xchg
mov
neg
push
es
mulb
mov
cmp
or
aas
lods
mov
cwtl
sub
xorl
push
dec
imul
and
rorl
dec
cwtl
mov
shrb
pop
push
and
outsb
inc
inc
js
les
decl
das
sbb
jle
repnz
add
int
in
mov
imul
test
and
and
lea
inc
xor
adc
cmpsl
add
into
sahf
orb
adc
cmpsl
movsl
fiaddl
loop
push
lods
loopne
cmp
mov
inc
call
in
ljmp
fs
inc
mov
cmp
mov
and
lea
ss
rolb
push
sahf
inc
mov
or
mov
lea
pushf
sbb
mov
xchg
les
or
movsl
xor
movsb
cmpsl
inc
aaa
lcall
ret
rcr
xchg
movsb
sub
imul
and
push
fnsave
rorb
icebp
jae
cmp
sbb
loope
bound
shll
mov
add
shr
or
and
ds
test
rorb
sbb
push
lret
dec
jmp
jp
inc
lea
loopne
clc
cmp
sub
addr16
mov
mov
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
inc
jp
out
push
jnp
daa
cmp
adc
loope
stc
repnz
div
add
test
div
xchg
pop
nop
ret
xchg
out
subl
and
rcrb
or
xor
daa
mov
adc
or
or
pop
fisubrl
add
push
and
fcoml
xor
and
and
fidivl
mov
insb
lret
xor
cmpsb
mov
dec
rolb
add
xor
mov
sbb
sbb
cmpsb
sub
or
pushw
sbb
loop
pop
cmp
mov
enter
ret
popl
cmp
in
aam
dec
or
jne
cmp
pop
sbb
mov
shlb
fcoms
aam
int3
insb
dec
xchg
pop
jbe
dec
sub
sbb
cmp
adc
shlb
dec
notb
test
rolb
xor
fsubl
or
mov
mov
sbb
fcmovu
mov
pusha
mov
insl
test
popa
cmp
mov
mov
movl
xchg
add
sahf
idiv
adc
xchg
adc
jg
mov
adc
lock
sub
stc
add
mov
lock
or
cmp
jne
push
jns
loopne
ljmp
pop
loopne
sbb
lret
and
pusha
pusha
add
setae
xchg
sbb
sub
mov
roll
movb
stos
xor
adc
pop
outsb
call
xchg
sub
adc
sub
sbb
shl
xchg
inc
xor
rcrb
in
inc
scas
inc
rcrl
mov
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
js
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
adc
testl
mov
cmpsl
ljmp
mov
add
enter
sahf
mov
mov
shlb
add
sub
test
out
and
mov
addb
mov
lock
inc
ljmp
adc
sub
dec
push
jg
fildl
sub
cmp
jge
sub
cmpb
or
scas
sub
dec
cmp
add
dec
stos
or
jle
incb
sub
orb
pop
xchg
push
pushf
aam
call
sahf
ficoms
jp
jne
dec
mov
jb
int
loopne
add
cmp
adc
in
jbe
cwtl
mov
and
add
push
jo
mov
mov
mov
rcrb
push
mov
add
add
xor
cmpsb
or
adc
and
ret
inc
call
adc
stc
push
mov
mov
sub
popa
loope
push
outsb
or
inc
adc
or
repz
add
push
test
push
or
push
pop
push
xor
fisubrs
ret
sbb
adc
cmp
je
mov
lods
or
push
ret
or
xchg
adc
or
jae
outsl
pop
jnp
test
lret
sub
roll
lret
into
pusha
xlat
dec
inc
inc
inc
fidivrl
inc
lcall
in
sub
jnp
sbb
into
prefetchw
inc
adc
cmpl
shlb
or
loopne
lcall
or
or
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
das
inc
add
lds
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
add
mov
loopne
mov
pop
and
in
xrstor
adcl
ds
test
shufps
adc
or
int3
dec
xor
adc
xchg
call
mov
mov
cmp
fidivrs
sbb
xor
inc
jg
into
hlt
test
pushf
into
into
mov
xor
inc
pop
sub
fsubp
or
pop
sahf
pop
and
or
aam
ljmp
or
sbb
and
xchg
stos
cmp
pop
push
push
and
sbb
push
mov
test
lahf
pop
xchg
out
mov
jecxz
ret
movsb
pop
jo
dec
loop
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
mov
pop
mov
lret
push
lret
push
xor
xchg
pop
pop
and
shll
adc
fstps
xchg
mov
int
dec
jmp
xchg
push
enter
push
les
clc
xchg
sbb
gs
cwtl
lret
mov
scas
mov
mov
push
sarl
popa
popa
dec
arpl
in
hlt
add
jnp
mov
lret
push
xor
cmp
xor
push
nop
jo,pn
loopne
adcb
add
dec
gs
jno
dec
cmp
test
fcmovnb
je
dec
sub
loope
add
fldt
out
je
mov
repnz
icebp
mov
cmp
jb
cmp
jbe
dec
repnz
jmp
push
rorb
fcoms
pop
mov
test
cmpb
adc
fldl
ret
xchg
orl
out
les
and
add
mov
adc
ret
pop
push
daa
push
scas
mov
cwtl
cmp
test
pop
and
adc
cmp
pushl
pop
filds
push
push
and
fnsave
fistl
mov
pop
and
inc
lret
adc
cmp
int
aam
fmul
adc
addb
push
sub
and
aam
adc
cmp
pop
xor
nop
push
inc
pushf
push
add
dec
xor
adc
js
cmpsl
cs
or
cs
out
inc
push
aaa
sbb
dec
mov
xor
xlat
or
lea
scas
cmp
cmp
loope
daa
in
lcall
ljmp
lock
or
or
pop
out
mov
sub
notl
jp
pop
scas
dec
sub
nop
movsb
adc
mov
in
sub
lahf
inc
xchg
mov
adc
xchg
jbe
add
adc
jg
xor
adc
mov
hlt
call
pop
outsb
loop
shlb
push
push
push
loopne
fldcw
cmp
xor
inc
or
mov
mov
pop
dec
test
or
cmp
xchg
sbb
and
outsb
gs
sbb
mov
adc
in
push
clc
sub
pop
inc
cli
jge
mov
mov
mov
jg
lret
xorl
push
mov
test
rcll
add
daa
call
xor
dec
jno
dec
ret
enter
loopne
loope
js
inc
out
mov
push
add
cmp
nop
cltd
rolb
push
fistpll
mov
loopne
jmp
push
pusha
outsl
sbb
fs
movsb
fists
ss
subl
push
cmpsl
mov
lcall
or
aam
mov
test
inc
push
push
sub
bound
lcall
jg
je
push
cmp
movb
pop
sub
xor
inc
sub
push
les
push
and
pop
pushf
subb
pushl
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
iret
imul
or
sub
pop
lods
enter
or
dec
cmp
pusha
sbb
push
mov
cmp
mov
inc
xchg
repnz
addl
inc
pop
cmc
rclb
test
js
add
lret
or
push
sbb
pop
sbb
enter
cmp
mul
into
add
das
cmp
sbb
iret
jo
hlt
add
cwtl
dec
cli
and
sub
sbb
dec
mov
shlb
jne
push
push
push
push
or
out
jmp
rolb
dec
adc
mov
clc
outsb
pop
or
out
enter
xor
lods
inc
sub
in
inc
pop
adcb
cmpsl
scas
and
push
xor
cltd
mov
xorb
push
add
adc
or
ss
sar
xor
sbb
dec
pop
push
and
enter
mov
push
inc
cwtl
pop
sub
mov
ret
pop
rol
ror
push
inc
sub
add
jl
test
movl
out
xor
in
addb
jecxz
aam
mov
xorb
test
lds
sub
cltd
out
fcoml
test
or
sub
push
pushf
mov
add
xchg
mov
mov
leave
int3
jmp
and
insl
rclb
sbb
and
dec
out
mov
arpl
adc
iret
pop
pop
xchg
xchg
rclb
loopne
andl
and
test
add
xchg
xchg
xor
les
mov
pusha
pop
ret
add
jp
or
fnstsw
lods
jno
sbb
push
adc
cs
adc
mov
sub
lret
or
push
xor
loop
or
into
inc
mov
dec
jbe
mov
adc
adc
adc
pop
inc
push
sbb
and
adc
dec
push
inc
adc
add
and
std
fwait
outsl
imul
inc
in
add
xchg
test
mov
hlt
inc
xchg
imul
clc
pop
orl
imul
mov
incl
lock
lds
dec
sti
push
aam
pop
pushf
enter
fidivl
add
push
cwtl
mov
or
mov
push
fisttps
ret
sub
outsb
xor
sti
data16
xor
inc
and
jo
aaa
add
push
adc
or
sbb
hlt
push
mov
inc
js
fisttps
inc
dec
call
int
rcrl
int3
dec
int3
dec
and
arpl
into
mov
imul
fidivrl
out
les
mov
jmp
sbbl
pushf
ret
nop
dec
inc
imul
add
or
orb
jle
aas
or
inc
add
enter
jp
jge
adc
mov
sbb
cmp
ja
lods
ret
jbe
jge
adc
orl
push
xlat
mov
or
sbb
xor
in
mov
push
inc
push
dec
xlat
mov
scas
add
cmp
repnz
xor
testl
pop
lock
xchg
or
icebp
mov
jp
inc
shr
cmp
loope
inc
ja
pop
shlb
popa
icebp
call
aam
into
lock
stos
xlat
shll
mov
pop
sbb
push
mov
sbb
push
push
cmp
jp
sub
iret
xchg
ljmp
mov
jmp
aad
add
inc
lea
mov
aas
leave
jp
loope
and
aaa
push
ret
and
push
jbe
aam
add
pop
repnz
out
or
test
or
pop
dec
inc
jmp
sub
cmp
pop
cmp
cmp
jg
andl
das
xor
mov
mov
mov
sbb
jg
mov
adc
or
sbb
imul
xor
bound
jp
adc
ja
xor
cmc
inc
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
jmp
dec
mov
insb
add
cltd
and
jae
testl
loopne
or
mov
dec
inc
cmp
pop
imul
popf
inc
adc
and
push
or
jne
inc
sbb
pop
cld
or
xor
push
imul
cmpsb
icebp
push
mov
mov
mov
roll
mov
test
bound
jl
sbb
pop
jae
cmp
addl
rolb
xor
popf
mov
sbbl
fwait
sub
cmp
cld
adcb
add
add
stc
jg
aas
stos
pusha
popa
dec
lods
loop
add
sbb
pushf
sbb
aam
movsb
aaa
lods
arpl
mov
push
push
push
push
add
mov
mov
fildl
or
pop
jg
repz
stos
cli
mov
fs
pop
jl
testb
dec
add
mov
adc
dec
inc
cmp
iret
or
adcb
sub
test
lcall
int3
or
inc
cmpsb
js
adc
or
lret
adc
scas
fs
or
scas
mov
jbe
outsb
sbb
mov
in
adc
aaa
and
inc
clc
xchg
out
dec
push
push
lods
inc
std
pop
inc
es
mov
mov
push
jmp
push
mov
dec
cmpsb
pop
adc
or
inc
or
sbb
push
sbb
lret
cmp
jg
push
dec
rorb
fstl
lock
adc
mov
add
jns
fadd
inc
push
cmpsb
jmp
and
inc
outsb
fcomps
jb
out
pop
mov
rcl
inc
adc
mov
cmp
out
pusha
cld
out
push
pop
cmp
movsl
and
mov
push
mov
rcrb
fisttpl
or
dec
lret
push
inc
mov
pop
add
in
fimull
and
or
dec
cmp
cwtl
jbe
or
adc
cmp
mov
add
or
and
add
add
jb
frstor
loopne
mov
push
stc
repnz
pop
add
xor
call
adc
mov
dec
data16
dec
or
aaa
loope
mov
pop
je
in
or
aam
dec
popa
add
adc
push
daa
add
dec
movsl
jl
mov
pushf
cmp
or
je
or
imul
sbb
mov
cli
rcrb
rcrl
testb
cmpsb
mov
dec
out
push
dec
xlat
call
push
add
mov
lock
sub
and
into
icebp
mov
xchg
adc
lock
leave
dec
out
dec
je
dec
jne
or
push
push
dec
ja
les
rol
push
or
sbb
or
and
adc
aas
sbb
or
inc
sub
add
xor
pushl
call
push
icebp
enter
or
mov
test
fildl
arpl
mov
add
or
add
je
or
pop
dec
cli
mov
loopew
inc
out
add
jl
and
mov
push
push
stos
and
sbb
xor
and
inc
sbb
hlt
push
cli
adc
cmp
push
jb
dec
cwtl
or
push
jae
mov
clc
push
cli
aaa
jl
xlat
inc
sbb
inc
mov
add
sbb
cmpb
xor
outsl
cwtl
sub
add
and
pop
imul
cltd
adc
sub
cmp
les
sbb
mov
add
shrb
push
mov
cwtl
xor
jle
es
push
insb
jl
enter
add
cmpb
shlb
pop
and
hlt
pop
out
xor
pop
fsts
adc
sbb
adc
pop
sbb
ror
mov
jecxz
rorl
stc
push
mov
inc
push
mov
loopne
shlb
and
or
ss
rcll
mov
mov
fwait
cmp
inc
pop
sarb
popl
lock
sbb
push
xchg
les
outsb
adc
sub
inc
cmp
add
add
xchg
scas
or
je
pop
mov
and
dec
mov
int3
jg
enter
jg
add
xchg
jbe
or
sbb
push
pushf
fmuls
or
aam
test
cmp
mov
mov
or
hlt
adc
pop
cld
pop
jle
adc
pusha
out
nop
lea
fcoms
lods
call
and
cmp
pusha
cmp
jge
pushl
ret
add
dec
jg
adc
orl
jg
jmp
adc
dec
xchg
into
jge
stos
mov
lods
pusha
ss
lods
add
es
add
and
test
push
dec
cmp
xchg
or
jb
or
cmpsl
setle
push
inc
scas
gs
inc
pop
aaa
pop
pushf
and
jle
adc
jae
pop
mov
scas
or
pop
and
jns
mov
bound
or
lock
adc
add
add
es
sub
lret
stc
fs
pop
xchg
pop
sti
push
sbb
ja
jecxz
lcall
push
mov
jns
mov
hlt
aas
out
pop
mov
mov
xlat
je
cmp
or
adc
cmp
jb
testb
add
add
cmp
loopne
js
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
sbb
jb
cmp
imul
push
push
or
xchg
pop
dec
in
push
mov
push
adc
call
jmp
das
xor
push
jne
subl
or
mov
and
dec
jmp
adc
mov
loop
push
es
jmp
jmp
shll
push
inc
pop
pop
nop
or
aad
iret
jg
pop
xchg
mov
mov
mov
dec
or
pop
mov
push
lret
ret
gs
or
int3
or
das
inc
stos
dec
in
fnstsw
sbb
leave
hlt
sub
jle
and
sbb
sub
mov
fsts
and
stc
ss
sahf
nop
add
add
add
in
push
scas
dec
or
jg
sub
mov
add
subps
int
in
mov
fldz
aaa
xor
add
push
stos
dec
jne
push
mov
dec
mov
sub
cmp
sub
push
pop
fdivs
aaa
push
dec
push
adc
das
and
je
pop
and
fld
fsts
call
fildll
adc
rcr
outsb
cli
inc
cmp
jmp
cwtl
mov
xor
aaa
and
sbb
add
jle
sub
sbb
fcmovu
cmp
test
cmpsb
sbbb
rolb
pop
mov
cmp
cmp
in
pusha
push
jb
addb
push
jb
jb
or
xchg
adc
xchg
inc
or
dec
in
sarl
mov
inc
mov
add
pop
bound
addl
lret
callw
lock
mov
jno
les
sar
aaa
and
pop
jb
in
push
sti
jns
fsubl
xor
cwtl
sub
sub
mov
imul
add
dec
in
ficompl
xchg
call
inc
push
in
lock
fwait
pop
xor
pop
inc
mov
leave
stos
dec
fimull
insl
mov
fmul
pop
repnz
jne
add
leave
orb
fldt
jb
sub
dec
ret
xchg
fildl
mov
and
repnz
in
sbb
scas
cmp
sbbl
mov
roll
pop
cmp
push
sbb
loopne
inc
or
popf
xor
add
inc
pop
fsubr
icebp
dec
dec
jb
lahf
in
addr16
loopne
dec
xorl
xchg
jbe
aaa
mov
push
adc
dec
ss
addr16
lds
add
call
clc
ficoms
or
ja
sub
dec
imul
adc
jl
push
xor
inc
adc
xchg
pop
mov
mov
test
popa
adc
pop
pop
in
or
add
inc
lods
xor
and
test
mov
jb
cwtl
adc
sbb
fistps
jne
sbb
jmp
outsb
in
xor
mov
jne
imul
jl
push
js
scas
xchg
or
mov
dec
or
int3
and
jne
shlb
mov
call
add
xchg
lock
jl
incb
cmp
inc
adc
or
pop
pop
dec
add
sbb
mov
lods
movsl
xchg
mov
fsubp
lds
cld
outsb
insb
push
jno
pusha
fs
dec
es
cltd
jo
js
adc
fs
pop
sbb
lret
sbbb
adc
push
loop
pop
sbb
sbb
jge
sub
fisubs
and
nop
adc
shrb
mov
enter
out
sub
mov
in
sti
xor
scas
push
push
outsl
jecxz
test
jecxz
imul
shlb
in
fists
and
inc
adc
adc
jno
ret
fs
mov
nop
fadd
mov
inc
adc
les
lock
dec
les
js
lods
add
pop
cmp
orb
stos
add
lock
xchg
or
sbb
in
push
in
mov
xor
add
pop
sti
nop
and
adc
fistpl
xchg
or
insb
xchg
lea
je
enter
cwtl
sbb
int3
aam
mov
in
adc
sbb
fcoms
mulb
pop
dec
gs
cmp
ret
push
movsb
sub
lock
mov
icebp
out
addr16
add
adc
cmpsb
in
aam
call
mov
pushf
pop
add
jbe
and
dec
enter
std
jp
out
jnp
negl
pop
insb
jnp
mov
int
mov
loopne
stos
dec
jl
inc
fdivs
fdivrl
aam
pop
addl
insb
and
imul
in
aam
and
jmp
pop
out
sub
and
dec
mov
push
or
ficoml
or
push
and
inc
jmp
add
ljmp
and
ret
add
leave
xchg
mov
jl,pt
adc
jo
sbb
pop
insl
ret
stos
movsl
push
sub
push
mov
pop
movsb
add
or
mov
add
dec
shrl
vandps
adc
ret
ja
dec
rolb
cmpsb
insb
push
call
jl
lahf
in
mov
popf
bound
xor
jmp
dec
pusha
adc
mov
or
fsts
push
stos
leave
imull
fistl
jg
mov
xor
xor
ret
push
mov
mov
or
sarb
jo
jno
or
add
in
adc
test
out
cmp
or
pusha
jns
movsb
or
add
cmp
inc
xchg
fidivl
adcl
mov
add
cmp
scas
js
xchg
sbb
out
sbb
adc
dec
mov
push
fists
jl
mov
call
dec
inc
pop
aam
dec
cmp
mov
aad
add
fwait
lock
xor
and
mov
in
push
sub
xchg
stos
jl
nop
dec
xor
xor
cmp
nop
popf
xlat
je
lock
cmp
push
loopne
icebp
sbb
leave
in
call
jbe
call
jo
sbb
out
cltd
cmp
add
xlat
cmp
movd
xlat
xacquire
clc
test
and
loopne
sbb
mov
enter
rolb
aam
push
in
in
pop
jo
fmul
xchg
repnz
or
or
dec
or
pop
push
or
jnp
jns
lods
xchg
inc
test
in
jl
sbb
sti
mov
repnz
loope
xchg
mov
xor
xor
orl
inc
faddl
ljmpw
mov
jb
cmp
lock
movsl
enter
sub
fs
aad
hlt
lret
and
push
loopne
aam
sub
push
cmp
xchg
or
or
mov
or
mov
or
or
leave
imul
rol
cmc
insb
int
inc
and
mov
xchg
jo
and
mov
cmc
fsubl
cmp
or
adc
jmp
incl
xor
fcomip
jae
xlat
sbb
fcomp
imul
daa
shrb
aaa
adc
daa
dec
xor
xor
push
les
and
xor
ret
mov
ret
test
movsl
mull
sbb
testl
scas
push
idivl
or
sbb
mov
adc
adc
test
imul
js
iret
movsb
movsb
lods
ret
adc
sub
inc
or
leave
mov
cld
stc
loopne
js
pop
fucomip
jmp
stc
sbb
icebp
mov
ret
stc
call
push
test
add
push
xlat
stos
push
sbb
dec
enter
xor
movsb
adc
push
add
shlb
fmuls
das
rcrb
sbb
mov
dec
push
icebp
mov
imul
in
inc
cli
cmp
insb
adc
sub
xchg
subb
lods
test
push
sub
fcoml
adc
mov
adc
inc
sti
std
pop
mov
call
cmp
lret
sti
mov
gs
sti
hlt
add
fs
add
pavgb
cld
pusha
nop
adc
mov
aam
xor
movsb
outsl
mov
xchg
xlat
push
nop
pop
cld
pushf
in
inc
enter
daa
lock
loope
add
out
or
or
push
fisttpl
or
mov
adc
mov
std
test
incb
mov
test
jmp
pushf
sbb
decb
fstp
jne
adcl
mov
aad
cs
or
aad
or
add
push
call
fstpl
je
xor
pop
call
leave
inc
xor
andb
lea
mov
scas
add
or
les
rclb
mov
je
adc
fildl
adc
pop
repnz
imul
mov
pop
sbb
lock
mov
cmp
or
adc
inc
or
or
adc
add
push
add
mov
cwtl
lods
das
push
or
dec
ret
push
popf
jbe
shl
adc
mov
sbb
sbb
sbb
call
test
mov
into
sbb
mov
or
mov
stc
mov
add
add
cs
cmp
add
mov
insl
mov
or
mov
or
lea
add
xlat
es
add
inc
xor
or
les
mov
scas
int3
pinsrw
cmp
outsl
in
movsl
add
inc
int3
fsubl
maxps
iret
enter
dec
iret
fistpll
inc
mov
push
add
inc
cs
xor
or
xchg
mov
xor
insl
push
inc
imul
and
add
popf
pop
and
insb
testl
pusha
xlat
push
daa
mov
inc
daa
nop
fisttpll
add
pop
sub
push
popf
pop
and
push
xor
fcomp
loopne
cmp
iret
and
aam
xchg
fdivs
cmp
sar
mov
and
loop
add
imul
orb
into
push
jnp
xor
unpcklps
fs
mov
ret
in
stos
add
pop
loope
add
mov
aad
adc
rcr
sub
cmc
mov
aam
adc
idivb
pop
mov
aam
or
cmc
mov
dec
cmpsb
adc
cmpl
lret
pop
pop
test
add
mov
divb
sub
enter
test
sub
cmp
outsl
test
cmpl
sbb
insl
mov
cltd
mov
fiaddl
pop
movsl
ja
pop
outsl
mov
sbb
ljmp
lods
bound
sub
inc
movsl
or
pop
std
fnstcw
jmp
pushf
insb
and
inc
push
and
xchg
or
aam
imul
mov
or
xorl
dec
and
lods
or
gs
push
and
or
jmp
or
push
mov
insl
int
std
stos
xor
ja
sbb
imul
xchg
mov
xchg
or
push
enter
sbb
fisttpll
gs
xlat
prefetcht1
testl
test
repnz
push
cmp
enter
stos
stc
or
shll
adc
lcall
pop
fsub
mul
adc
dec
push
mov
pop
jb
or
cmp
mov
notb
repnz
jo
and
pop
dec
adc
in
dec
xor
sbb
and
incl
das
xor
in
dec
js
pop
and
jnp
loopne
sub
loope
sarl
mov
movsb
and
push
mov
or
cmp
inc
daa
mov
xchg
jne
mov
ret
jecxz
or
cltd
push
pusha
shrl
lods
mov
in
shrb
sbb
and
std
xor
orb
enter
or
aad
pop
lea
ret
jge
clc
jnp
xchg
shll
call
pop
xor
cmpsb
push
mov
sbb
mov
gs
or
mov
mov
sbb
fcmovu
mov
pop
mov
sbb
push
adc
rolb
dec
push
in
adc
adc
or
xorb
xchg
cli
adc
ret
xchg
pop
sub
insb
adc
ja
cwtl
mov
or
insl
loopne
les
lods
in
int3
or
test
fistl
rorl
adc
loopne
add
sub
imul
scas
in
mov
in
sub
mov
push
add
popf
xor
pop
rorb
dec
mov
jmp
dec
negl
mov
cmp
xor
fsts
enter
and
lea
push
cmp
and
jne
inc
lea
insb
call
mov
pop
pop
int3
gs
mov
and
not
mov
adc
and
mov
mov
cs
pop
lea
movsb
movsl
and
mov
mov
les
mov
test
lret
enter
test
mov
rcrb
add
push
cmp
divl
in
xor
enter
test
out
adc
xor
sbb
lock
les
stc
sbb
in
add
sbb
mov
push
pop
adc
dec
xlat
push
nop
adc
lds
sbb
test
stos
push
inc
push
dec
pop
pusha
mov
mov
push
jnp
popa
sbb
and
loopne
movups
sbb
pop
repnz
sbb
pop
insl
mov
pop
adc
aas
or
mov
cltd
sub
pop
jno
sbb
adc
loopne
add
sbb
inc
sbb
xor
jmp
sbb
add
mov
cmpsl
sbb
sub
inc
rclb
pop
aaa
mov
fs
test
or
lret
mov
enter
lods
lods
sub
xor
stos
jle
rolb
sbb
ret
rolb
sbbl
xchg
out
insl
scas
jge
cwtl
or
popf
movsb
data16
je
stos
pushf
mov
and
nop
iret
mov
mov
and
adc
cwtl
mov
mov
push
ljmp
sbb
lods
rcll
push
mov
fcoms
xor
and
push
add
xor
lret
dec
shrb
jbe
js
leave
xor
pusha
mov
addb
push
xor
or
out
mov
xor
jl
and
mov
mov
fdivs
adc
shrl
mov
std
inc
dec
enter
mov
pop
xchg
inc
and
jge
in
or
and
shll
lods
mov
cmp
sub
stc
inc
pushf
pop
orb
lods
in
mov
int3
lret
add
rol
sub
loop
pop
test
sbb
dec
and
mov
cwtl
mov
mov
pop
nop
test
add
cltd
sub
dec
xor
icebp
add
les
xor
inc
xor
pusha
ret
mov
push
and
pop
jp
lea
fs
adc
mov
scas
sbb
shlb
xor
movsb
sbb
fdivr
call
sub
lds
rclb
pop
sbb
call
test
cmpsl
mov
cmpsb
shlb
call
pop
and
dec
jge
mov
mov
xchg
cmp
call
mov
jmp
es
mov
dec
adc
sbb
clc
cmpsb
ss
adc
je,pn
inc
cwtl
dec
js
sbb
rcrb
movsb
jb
mov
jp
idivl
fsubs
std
movsl
xchg
xchg
leave
add
insb
adc
mov
sbbl
adc
adc
dec
push
leave
and
sbb
xor
and
and
and
dec
inc
sub
or
dec
xor
daa
jno
sbb
cli
sub
and
imul
shlb
adc
decl
icebp
call
push
pop
movsb
enter
sub
mov
sub
pop
dec
and
sub
int3
pop
in
and
or
sub
mov
ret
or
adc
or
mov
jno
or
or
jne
lds
std
sbb
or
shlb
add
test
sbb
and
sub
jl
dec
lret
jmp
jb
jb
movsb
mov
lock
ficoml
bound
sub
addr16
jae
inc
int3
fwait
sbb
add
pop
sbb
pop
jb
rcl
xor
adc
mov
or
int
cmp
lea
sub
jbe
pop
pop
adc
push
xchg
fs
inc
ljmp
lods
dec
aas
rorb
dec
or
rorb
mov
mov
pop
out
nop
mov
push
push
test
xorl
lods
sbb
pop
enter
adc
andb
or
je
orb
sbb
add
loopne
inc
and
das
rolb
popa
movsl
out
xor
mov
addl
bound
mov
push
xor
add
cmp
mov
or
mov
and
push
shrl
shll
sbb
fbstp
push
stos
mov
mov
andl
xlat
lds
mov
int3
das
xor
scas
add
xor
jmp
jmp
dec
movb
xchg
cmp
cmp
or
add
aam
or
mov
pop
cwtl
cmpsb
popa
mov
xor
in
xor
jb
adc
cwtl
mov
fisubl
jbe
mov
xor
movsb
sbb
aam
daa
in
jne
inc
movsb
gs
xor
into
idivl
inc
scas
movsl
adc
sbb
adc
sbb
pop
adc
push
test
adc
call
xchg
leave
ret
mov
dec
push
xchg
mov
movsb
pop
cmpsl
mov
hlt
adc
sbb
dec
cmpsb
fsts
xchg
push
ss
or
pop
pop
xor
sbb
cmpsl
adc
cltd
xchg
xor
add
orl
inc
out
es
adc
sbb
in
and
orb
dec
imul
getsec
aam
push
test
and
push
push
shlb
fucomi
enter
jg
mov
cmp
mov
cwtl
inc
ret
xchg
loopne
inc
adc
jbe
lret
out
inc
mov
cmpsl
lock
cmp
add
aam
pop
aad
inc
mov
aam
jbe
ret
mov
aam
mov
shrl
out
mov
cltd
insb
fildll
enter
mov
xor
icebp
mov
add
mov
hlt
pushf
sarl
xchg
jmp
cwtl
jae
aaa
push
int3
les
sbb
repz
add
leave
cmp
fstp
fdivr
jbe
roll
loop
jmp
cmp
nop
sub
push
frstor
mov
dec
sarl
push
sbb
adc
inc
pop
inc
jge
test
shrl
dec
fistpl
jo
and
cmpb
push
cmp
mov
jb
and
or
scas
xor
pushf
sbb
enter
insb
popa
js
subb
xchg
mov
fs
fstpl
jbe
shrd
mov
xchg
sahf
pushf
pushf
fmull
int3
enter
fmull
inc
mov
mov
pushf
pushf
nop
orb
cs
jb
imul
dec
aam
inc
das
imul
sub
pushf
adc
dec
es
pop
repnz
xor
add
dec
lret
inc
mov
iret
jns
add
je
jne
mov
push
out
jl
sbb
sub
inc
fnsave
add
cmp
leave
inc
or
or
pop
rorb
mov
add
or
add
inc
test
addl
or
and
enter
stos
popa
adc
xchg
cs
lods
aam
aam
lods
xchg
addr16
pushw
movsl
mov
lods
or
bound
es
jne
les
popa
sbb
decl
test
dec
test
movsb
mov
jmp
sbb
mov
movsb
in
mov
xor
adcb
mov
add
inc
pusha
jo
mov
movsl
loope
in
xchg
arpl
or
dec
mov
lods
sbb
inc
icebp
jge
pusha
push
mov
arpl
rorb
pop
dec
cmp
sbb
cltd
dec
jno
cmp
xorb
and
dec
rclb
sbb
dec
xor
adc
pusha
imull
dec
cmpsb
or
xchg
in
fwait
xlat
adc
mov
dec
xchg
aad
dec
cmpsb
negb
ss
and
sub
aad
sbb
insb
inc
enter
push
pop
scas
push
nop
sub
pop
pop
adc
inc
xor
rolb
fs
insb
jecxz
xchg
dec
mov
mov
cmpsb
stc
dec
lcall
enter
invd
push
aas
outsl
cs
stos
aam
rcrb
adc
mov
rorb
jmp
psubw
and
test
mov
shr
sub
or
loopne
nop
mov
enter
mov
adc
insl
shll
imul
sbb
pusha
add
or
sbbb
mov
push
and
xchg
andb
mov
fwait
fs
stc
les
dec
dec
mov
mov
mov
xchg
sbb
enter
dec
es
rclb
fs
pushf
xchg
ja
nop
xorb
adc
adc
aas
xchg
xor
adc
mov
enter
pushf
add
loope
sub
push
sbb
jo
pusha
pop
sbb
mov
sbb
xchg
or
mov
mov
mov
mov
push
add
cmp
leave
dec
cmp
repnz
or
repz
sub
jno
adc
push
das
insb
sub
pop
cwtl
das
sbb
xor
pushf
mov
sub
lea
add
xchg
addr16
inc
inc
mov
pusha
mov
mov
mov
jo
sbb
rcr
xor
mov
inc
push
jo
lock
mov
mov
repnz
daa
or
dec
nop
insl
call
xchg
in
loop
xlat
insl
int3
daa
or
or
popf
jbe
sub
repnz
mov
inc
push
and
adc
insl
hlt
cltd
inc
jne
add
inc
jno
repz
insl
push
pop
sbb
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
cmp
mov
test
mov
cwtl
int3
lea
push
int3
in
sbb
enter
dec
or
mov
push
sbb
rcr
xorb
or
fs
and
iret
fstps
call
and
scas
dec
insl
inc
ljmp
sub
out
sbb
mov
aaa
mov
dec
sub
cmp
mov
lods
movsl
aas
out
sbb
jmp
push
jnp
fdivl
sub
lock
pop
rcll
jnp
jno
cmp
repnz
fbstp
in
mov
adc
dec
cmp
sbb
adc
and
xor
pop
xchg
xchg
or
pop
rclb
push
mov
insb
or
adc
rcrb
inc
mov
adc
test
pop
int
nop
addb
push
adc
loope
dec
mov
fnsave
adc
lods
adc
adc
enter
add
xor
enter
call
mov
pop
dec
add
and
cmpsb
movsl
push
leave
adc
not
mov
sbb
fwait
popl
and
push
push
cwtl
aam
adc
adc
or
inc
sub
or
ljmp
adc
pop
and
cs
loopne
dec
inc
xor
add
push
sbb
sub
imul
pop
repnz
mov
push
jo
xor
inc
mov
inc
xchg
jge
mov
inc
pop
adc
ffreep
xor
std
xorl
inc
sti
pop
xchg
fst
push
test
lea
sbb
dec
seto
push
insl
mov
fisubl
mov
xchg
pop
push
in
xorb
jecxz
cmp
inc
adc
imul
dec
cltd
push
ret
mov
adc
scas
test
xchg
out
sbbl
lods
cmp
pusha
xor
test
je
inc
repnz
adc
xchg
xor
inc
inc
add
xchg
inc
sti
mov
push
lcall
xor
push
andb
cmp
dec
xor
jo
or
sbb
nop
cmp
sbb
mov
and
inc
pop
lds
fs
push
inc
sbb
or
add
pop
and
js
pop
insb
dec
adc
in
or
sbb
inc
sub
mov
xorb
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
fsubl
sbb
push
pushf
nop
inc
test
sbb
sbb
add
mov
ret
leave
shll
addr16
cmc
and
cmpsb
or
mov
dec
mov
sbb
pop
xor
inc
push
adc
dec
es
test
mov
add
insl
pushf
icebp
movsb
mov
sbb
lea
push
test
or
or
pop
js
aam
dec
outsb
pop
shrb
push
pop
inc
lods
pmullw
imul
jne
jo
pop
pop
mov
and
inc
pop
add
lock
push
dec
mov
or
sbb
out
add
sub
dec
or
jnp
aaa
sub
fmulp
rcrb
xchg
push
adc
add
pushf
jbe
fcoms
and
faddl
dec
push
pop
xor
subb
in
mov
nop
call
aaa
cmp
push
and
sub
in
mov
mov
inc
clc
fsub
pusha
mov
or
fcoms
mov
jecxz
nop
out
movsb
repnz
sbb
and
mov
mov
addr16
fcmovnbe
sub
movsb
dec
xchg
and
mov
or
add
mov
scas
pop
push
and
addr16
lret
imull
inc
sbb
fmull
orb
call
or
pop
je
cs
pop
xor
arpl
sarb
dec
adc
xchg
sbbb
pop
push
or
push
push
and
and
and
fucomp
daa
pop
neg
stos
mov
push
xchg
mov
add
jns
test
pop
add
imul
cmpsl
mov
loopne
repz
xlat
xor
pop
outsl
nop
jnp
repz
rcr
push
adc
mov
or
xor
add
jecxz
xchg
outsb
insb
mov
insb
mov
push
shrl
jo
jge
das
dec
es
mov
jmp
mov
push
rolb
clc
jnp
mov
add
repz
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
test
add
nop
add
into
pop
adc
test
and
out
push
push
mov
out
xor
data16
mov
cwtl
sbb
sub
xor
jnp
xchg
adc
add
pop
sub
xorb
cmpsb
bound
and
insb
outsl
arpl
imul
outsb
cmp
xor
sub
je
arpl
jne
jb
outsb
je
add
das
add
push
insl
out
or
push
dec
push
shlb
mov
inc
outsl
jb
js
je
jb
gs
add
or
fcomi
cld
mov
add
add
add
jne
les
scas
pop
mov
push
and
and
push
add
add
or
es
add
inc
in
std
fisubrl
add
add
aas
ja
lds
push
add
pop
dec
add
ja
scas
pop
sub
push
insl
xchg
je
sti
push
sbb
je
and
jae
dec
fisttpl
jge
orl
push
push
xorb
or
bound
cmp
jne
imul
fidivrl
jbe
aas
imul
dec
insb
jp
outsl
or
mov
dec
fs
lret
jnp
mulb
and
outsl
jmp
jo
jbe
cs
dec
lret
stos
or
jae
push
imul
scas
cmp
jne
inc
mov
loop
push
data16
popa
mov
xchg
ds
ret
imul
dec
sub
jnp
mov
lahf
jno
shlb
push
outsb
inc
scas
mov
inc
or
test
jo
daa
dec
jbe
cs
cmp
xor
je
adc
push
arpl
mov
xor
shlb
xor
sub
fbld
or
push
mov
jb
ret
add
mov
adc
xchg
or
cvtps2pd
push
or
push
sub
mov
outsl
xchg
lahf
aaa
jg
cmpsb
mov
ja
iret
mov
sbb
sbb
imul
xor
jne
jbe
jb
jne
test
shll
jbe
adc
pop
stos
js
ds
js
das
rcrl
push
mov
fisubl
push
jo
loopne
insl
stos
lahf
outsl
aas
or
or
iret
arpl
aaa
sbb
fsubrs
dec
pop
loopne
insl
lret
imul
jb
fs
imul
shll
pop
lock
rdtsc
jne
push
cmpsl
outsl
pop
sub
das
xchg
sbb
fisubrl
pop
mov
pop
insl
push
enter
je
scas
cmp
mov
jg
jno
xor
scas
popw
mov
jecxz
push
push
sub
popa
test
shlb
pop
ret
insb
add
add
out
js
and
out
enter
and
adc
adc
enter
jb
adcb
sbb
mov
and
jmp
sbb
stc
repnz
clc
pop
xor
jmp
js
inc
mov
jns
jp
cld
cmpsl
mov
dec
call
aaa
ret
mov
addr16
jbe
fdivs
add
jo
les
fcmovne
or
cmp
mov
cmp
imul
sti
lock
ja
ds
mov
negb
cmpsl
push
fwait
cmp
ja
and
sbb
mov
outsb
fbstp
add
add
mov
jns
add
das
das
and
pop
mov
shlb
dec
ljmp
pop
inc
and
xchg
mov
rorb
ret
ficompl
addr16
idivl
aas
sbb
jl
inc
mov
push
testl
lods
mov
jne
outsl
dec
and
adcb
pop
inc
das
pop
mov
sub
iret
mov
insl
in
jns
out
out
fstpt
loopne
and
arpl
mov
inc
fwait
rcl
jae
push
and
sub
pop
dec
fbld
mov
fstl
pop
neg
iret
lea
pcmpgtb
cmp
cmp
add
jmp
lahf
fs
dec
and
jns
add
das
cld
dec
sti
insl
das
jns
push
dec
push
inc
inc
arpl
bound
sti
mov
mov
dec
arpl
test
je
inc
jne
jne
xor
insb
xchg
lds
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
jns
jg
addr16
popa
je
jle
out
jne
xor
and
daa
fbstp
fs
sbb
dec
outsl
outsb
and
jae
mov
jbe
pop
shrl
inc
aas
add
out
dec
or
mov
dec
add
insb
jae
inc
cmpsl
nop
insb
push
push
inc
push
popa
insb
jne
or
pop
inc
inc
mov
pushf
xchg
xor
daa
and
sub
sub
cs
xor
xor
xor
ss
pushl
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
push
pop
pop
filds
pop
pop
pop
adc
popa
bound
gs
imul
clc
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
daa
mov
inc
dec
adc
lcall
loopne
mov
add
orb
jg
testb
ljmp
lret
jno
icebp
pusha
inc
mov
das
fdivrp
repz
ret
movsl
add
xorl
mov
imul
roll
push
ja
xchg
incb
gs
xor
popa
js
mov
add
dec
pop
or
lods
sbb
out
ret
testb
ret
sub
add
fwait
cmpsb
xchg
push
scas
add
push
mov
sti
push
add
add
add
and
push
pop
test
test
push
add
xor
lcall
add
pusha
push
fstpl
inc
add
or
xor
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
bound
add
mov
add
js
push
outsb
imul
outsb
and
push
or
adc
add
popf
inc
sbb
mov
pushf
cmp
fwait
test
rorb
add
xchg
pushf
cmp
lea
mov
nop
xchg
xchg
cltd
in
xchg
xchg
mov
mov
add
jo
je
popf
scas
mov
stos
shl
hlt
add
lods
mov
lods
push
mov
scas
xlat
imul
push
sbb
aaa
or
pop
sbb
push
push
out
push
ja
inc
sub
dec
inc
pop
dec
dec
inc
dec
mov
mov
inc
adc
notl
filds
je
cs
jae
jp
add
bound
je
outsb
data16
inc
fcomi
out
push
jbe
dec
out
je
xor
in
insl
sub
push
xchg
daa
pop
in
mov
gs
outsl
js
push
inc
insb
sti
inc
repnz
and
insl
jo
jo
and
outsl
pop
pop
ljmp
insb
les
dec
imul
mov
mov
cmp
dec
inc
jb
jns
jae
mov
daa
pop
and
jnp
jns
mov
insb
and
fcoms
in
and
addr16
push
jle
jbe
jle
jo
or
jb
and
mov
fwait
or
jbe
push
mov
mov
push
lahf
fs
insl
add
and
and
lods
jp
pusha
inc
pop
jbe
xchg
pushw
popl
lock
xor
imul
add
lds
push
inc
inc
pop
daa
mov
dec
adc
shll
lock
push
outsb
mov
mov
pop
push
push
jae
or
adc
scas
lods
cmp
call
sub
cmpl
das
outsb
gs
mov
lea
cmp
mov
push
push
push
dec
testl
mov
dec
xor
aam
enter
stos
popa
mov
fisttps
mov
ds
or
sub
sbb
push
imul
lds
or
dec
xchg
inc
rorl
push
sbb
xor
jl
popaw
sbb
pop
mov
inc
jg
sub
jno
pusha
push
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
insl
lahf
cmpsl
cmp
es
or
ds
and
sub
inc
jl
loope
jnp
push
addr16
jle
cmpsl
fnsave
dec
jle
add
negl
sysret
or
sbb
xchg
ret
aaa
sbb
and
push
mov
rorl
xchg
pop
shll
pop
jne
stos
addr16
push
jbe
insl
popf
roll
xor
gs
or
mov
cmpb
dec
sbb
sahf
mov
pop
sub
popa
sub
push
jl
out
sub
jns
add
cmp
xor
iret
mov
sahf
sbb
add
clc
lock
clc
repz
int
push
enter
mov
cmp
mov
lods
test
cwtl
jns
repz
nop
mov
test
addb
js
mov
je
pop
aas
repz
jae
das
pusha
push
pop
pop
push
iret
repz
push
dec
dec
inc
inc
cmp
iret
repz
xor
sub
jns
iret
repz
add
call
out
test
push
sahf
sub
call
iret
repz
push
dec
inc
xor
sahf
int
adc
cli
cld
in
rcr
jns
out
mov
out
lock
neg
jns
int3
stc
xchg
stc
mov
xor
test
mov
fdivrp
inc
clc
jle
mov
mov
add
and
adc
test
mov
add
and
push
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
ud0
aaa
repnz
dec
inc
add
adc
sub
adc
nop
mov
inc
cmp
mov
mov
jnp
inc
loop
mov
inc
push
imul
pop
clc
lret
sbb
mov
xchg
jge
arpl
cmp
stc
lds
adc
fisubrs
and
repnz
or
push
cmpsb
iret
lret
add
jmp
inc
inc
mov
mov
sub
fwait
fwait
testl
int
jns
ds
xor
incb
int3
decl
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
decl
pop
and
xchg
lret
sahf
icebp
mov
cld
ss
decl
or
cmp
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
jg
mov
jns
mov
dec
test
xor
aas
jle
dec
add
scas
lods
dec
lock
xor
aas
mov
nop
adc
pop
pop
repnz
ret
lahf
and
es
mov
fcompp
add
add
int
fimuls
dec
adc
sub
push
dec
pop
mov
xorb
dec
daa
int3
and
inc
jmp
clc
bswap
or
add
push
into
mov
inc
inc
loopne
xchg
and
xchg
cmovg
jl
out
mov
and
std
adc
or
sbb
mov
outsb
addr16
jo
addr16
es
jae
lret
or
popa
out
and
fistpl
push
data16
scas
adcl
test
roll
xlat
bound
test
jg
adc
add
pcmpeqw
loopne
xlat
sti
or
ret
daa
daa
je
or
cmp
jmp
insb
stos
push
mov
lahf
js
push
add
jmp
xchg
clc
xchg
shlb
xchg
ret
mov
testb
push
push
sub
push
out
xlat
sbb
add
and
aad
outsl
imul
add
jb
jae
jae
js
cmp
insl
jle
fs
sub
cmpsl
mov
and
jmp
ret
outsl
popa
jg
pop
cmp
out
fisttps
pop
out
mov
scas
cmp
push
mov
cmp
mov
loope
insb
daa
jnp
stos
bound
cmpsl
cmp
and
add
les
jae
fsubl
add
les
outsb
xlat
jg,pn
mov
jmp
jne
adc
cmp
push
mov
jae
xchg
js
sub
pop
sub
aas
cmpsl
out
pop
mov
add
mov
cmp
pop
pop
mov
or
loope
adc
stos
scas
jmp
imul
ret
pop
shll
push
es
sti
cmp
divl
aad
sarb
out
and
pop
mov
scas
dec
aaa
xchg
inc
arpl
xchg
nop
xorb
mov
aas
xchg
gs
loope
arpl
dec
jp
xchg
ja
pop
jecxz
cmpsl
sbb
dec
sbb
sbbl
addr16
outsb
pop
lahf
out
xlat
addr16
je
inc
sbb
push
mov
mov
arpl
daa
pop
arpl
rorb
gs
jne
ret
das
xor
and
jo
and
arpl
and
pop
stos
pop
pusha
fdivrs
insl
inc
add
mov
fldt
mov
jnp
stos
xchg
mov
push
push
das
push
xchg
lret
sub
inc
sub
push
adc
test
or
lock
add
mov
sarl
into
ds
pop
das
outsb
mov
je
jb
and
push
add
daa
pop
push
arpl
decl
adc
mov
pop
xchg
inc
push
ret
jae
data16
jb
add
or
xor
add
ja
jmp
out
add
adc
aaa
pop
notb
fiadds
pop
stos
push
out
push
push
pop
mov
push
pop
sbb
bound
and
les
and
testl
dec
pop
aas
dec
imul
rcll
inc
call
mov
out
loop
clc
xchg
js
mov
dec
arpl
pusha
notl
cmp
addb
je
sbb
push
sub
outsb
outsb
sub
and
jle
jmp
push
stos
inc
mull
jae
imul
and
pop
mov
addr16
lret
push
fbstp
and
xchg
fisubrs
push
push
jecxz
push
imul
mov
adc
inc
repz
add
mov
in
dec
aas
inc
sub
cs
fistpll
es
or
xchg
out
jecxz
jne
inc
push
inc
subl
mov
arpl
dec
insb
fidivs
inc
inc
and
sbb
subb
adc
mov
add
ss
mov
iret
mov
push
pop
cs
xchg
daa
psllq
adc
pop
mov
mov
in
or
inc
push
aas
ja
je
insl
xchg
push
sub
push
jmp
lahf
inc
jo
nopl
inc
pop
imul
xor
add
xchg
lahf
mov
outsb
filds
mov
jl
jno
adc
out
pop
jl
mov
imul
in
inc
jae
lret
sbb
lea
fisubs
bound
adc
sbb
ret
out
scas
aaa
clc
mov
cmp
mov
jns
jae
bound
out
outsb
jl
push
repz
out
push
jecxz
outsl
jl
pop
jecxz
out
or
sbb
js
mov
repz
insl
push
mov
imul
sarl
adc
arpl
dec
sbb
sbb
xchg
add
xor
cmpsl
jnp
sub
rolb
jo
fistps
roll
vmread
add
jmp
add
jl
mov
mov
andb
jl
xchg
sbb
sbb
out
addl
push
repnz
or
es
shl
arpl
imul
sbb
dec
sbb
pop
add
pop
push
ja
push
sbb
sub
pop
xchg
mov
out
mov
push
jecxz
pop
sbb
daa
push
imul
jb
sahf
hlt
pop
es
jae
mov
sbb
jae
inc
and
inc
mov
mov
push
sbbb
js
xor
jo
mov
insb
das
negl
popa
push
daa
filds
push
ljmp
je
aaa
push
bound
add
push
fmuls
xchg
fcoms
pop
jbe
inc
jg
push
cmp
js
lret
add
insb
iret
mov
es
or
mov
outsl
movsl
out
sub
ss
xor
aaa
adcl
scas
lahf
shrb
addb
sbb
insb
ss
inc
dec
push
mov
push
inc
add
ljmp
lret
ds
addb
in
fstps
push
lods
es
push
pop
ds
mov
out
rol
or
mov
jg
mov
jnp
test
pop
cmp
mov
pusha
mov
dec
daa
hlt
inc
add
orl
xchg
fsubrs
jb
adc
dec
gs
inc
sbb
mov
dec
or
xor
push
push
inc
insl
fdivp
sahf
loopne
push
ds
es
xor
jns
in
outsl
jg
push
sbbl
mov
jle
mov
outsb
push
iret
rclb
fdivp
pop
aaa
dec
and
sub
ja
aam
jae
ja
and
addl
xor
mov
xor
or
pop
push
fcomi
insb
push
sub
rorb
mull
jne
movhps
xchg
rcrb
and
call
insl
cmp
pusha
push
popa
jne
or
and
or
bound
xor
imul
pop
jle
arpl
cmpsl
js
sahf
adc
popf
push
mov
mov
dec
push
out
adc
jno
lahf
fs
sahf
out
push
sbb
mov
mov
jbe
js
lods
add
dec
dec
fcoml
outsl
cltd
clc
ljmp
jno
inc
sub
jl
ds
out
push
or
jo
jb
scas
jb
in
pushf
mov
cmpb
jae
sbb
ds
incb
and
and
arpl
xor
or
outsl
sti
cmp
fs
adc
les
adc
mov
outsb
push
fdivs
je
ss
cmp
adc
data16
outsl
stos
mov
fsubrs
sbb
ja
adc
aaa
or
cmp
sbb
and
add
xchg
sub
imul
cmpsl
mov
sub
popw
push
scas
ja
fdivl
dec
push
lfs
xchg
lcall
or
inc
rcrb
or
insl
pop
outsl
addr16
inc
or
xlat
mov
cmc
insb
inc
das
push
and
nop
cmp
and
push
cmpsl
add
xchg
pop
push
adc
mov
xlat
push
mov
repnz
pop
outsb
adc
mov
cmpsl
lea
fcompl
push
add
shr
mov
push
push
inc
push
push
insb
mov
or
aad
inc
inc
imul
push
and
pop
pop
mov
lcall
iret
and
inc
fs
jns
cmpsb
out
fdivl
call
fiadds
test
or
xchg
lods
push
or
aaa
dec
add
pop
je
popw
or
movl
dec
mov
sub
aam
mov
mov
sbb
pop
mov
push
adc
lea
xchg
ds
addr16
pop
dec
sub
iret
dec
stos
sub
pop
jmp
sbbl
pop
repz
mov
iret
inc
mov
adcl
rorl
rcrb
es
adc
outsl
lds
pop
mov
sub
cmpsl
add
outsl
loopne
mov
and
mov
scas
mov
mov
cmp
dec
mov
add
add
or
aaa
and
cwtl
sub
jbe
imul
shrl
stos
jae
inc
jp
movsl
mov
lock
call
inc
and
pop
iret
bound
sbb
and
arpl
shlb
nop
push
inc
jg
adc
dec
jb
fs
add
in
push
dec
fdivrl
jbe
bound
inc
sahf
iret
jns
aaa
sbb
sbb
out
xor
ret
andl
repz
cltd
or
xchg
dec
pop
add
bound
lret
add
mov
fldt
test
add
das
adc
jns
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
call
fwait
test
xchg
call
xor
push
int3
xchg
jb
mov
jg
push
sbb
pop
test
add
repz
xchg
shrb
pop
mov
movsb
pop
fwait
andb
dec
test
roll
shrl
mov
sarb
das
js
loop
aas
push
repnz
dec
ficoms
pop
or
fimull
popa
addr16
pop
loop
add
mov
inc
mov
dec
inc
rolb
out
cmp
inc
outsl
inc
push
inc
cmp
imul
data16
shrb
or
ja
ja
jg
add
pop
xlat
iret
jb
xchg
je
in
aaa
sub
popl
mov
push
inc
ljmp
aam
push
sbb
lods
lods
dec
cmpsl
arpl
add
aaa
popl
mov
push
mov
mov
push
pop
clc
fimull
scas
xchg
xor
jno
pop
push
adc
jb
or
xor
mov
sub
arpl
lock
sbb
and
cmpsl
push
adc
stos
jb
cmpsl
cmpsl
mov
xchg
mov
sarl
fwait
out
fdivs
imul
outsb
jae
sbb
add
scas
inc
or
jno,pt
pop
inc
repz
add
rolb
pop
inc
sbb
push
inc
push
imul
aad
frstor
sbb
sbb
mov
aaa
cmp
xor
in
pop
ret
and
jecxz
jb
js
test
pop
das
sub
imul
or
sbb
and
outsl
loopne
scas
xchg
cmp
loop
dec
pop
roll
ret
mov
add
nop
lcall
sub
ffreep
out
adc
mov
rol
fistpl
mov
fwait
bound
xchg
xchg
pop
loop
sbb
mov
or
mov
inc
outsb
cmp
push
mov
push
in
adc
sub
xlat
jmp
add
shlb
or
mov
sti
insb
test
lods
sub
movsl
adc
jns
pop
xchg
push
divl
mov
jnp
jb
xlat
loop
push
outsl
pop
push
ficoms
mov
cmp
inc
xchg
clc
add
cmp
mov
add
pop
shr
je
lahf
aas
xor
notb
rcrb
cmp
pop
inc
outsl
daa
test
pop
ja
push
pop
iret
imul
mov
mov
cmpsl
pop
test
fildll
xchg
je
sub
fcompl
xor
inc
jg
sbb
xchg
out
dec
dec
sub
cmpsb
iret
mov
fbld
inc
int
pop
add
out
cmp
arpl
stos
cs
xchg
clc
sub
add
push
dec
sbb
imul
ret
mov
je
push
test
mov
mov
js
xor
sub
in
sbb
xor
das
loope,pn
lds
inc
dec
aaa
inc
mov
add
add
ss
add
sbb
loop,pn
sti
xlat
mov
fsubs
dec
ret
push
adc
push
aaa
outsl
push
ljmp
inc
loopne
mov
lahf
outsb
xchg
sarb
cmp
xor
adc
sbb
rol
insl
xchg
inc
mov
adc
vcvtps2dq
xchg
pushf
mov
rorl
push
xchg
push
inc
push
jmp
test
add
popa
ss
xchg
and
dec
mov
inc
inc
stos
adcl
sbb
push
ret
cmp
addr16
stos
scas
dec
pop
cmp
test
ja
and
pop
mov
pop
jae
arpl
push
or
and
pop
rorb
bnd
sub
push
or
push
dec
cmp
int3
scas
mov
mov
mov
mov
iret
sub
imul
inc
mov
pusha
in
es
movlps
popf
lock
sub
lcall
push
mov
or
and
mov
addl
dec
les
jmp
pop
mov
repz
push
mov
stos
push
scas
add
add
testl
dec
dec
gs
call
outsl
iret
jp
fldl
dec
add
push
insb
dec
inc
jp
jnp
xchg
xor
nop
dec
rolb
mov
fistpll
cmp
and
ja
mov
or
out
jne
ficompl
pop
lock
sbb
out
cmp
cmc
jb
jmp
ja
ret
aas
push
push
mov
addr16
pusha
decb
push
in
add
lahf
push
add
movsb
push
ss
out
push
xor
push
jg
pop
icebp
add
out
add
fwait
xlat
pop
fldt
and
and
es
adc
bound
xchg
scas
sub
adc
xor
dec
inc
pop
dec
or
fisubrs
or
popa
mov
lods
dec
sbb
inc
pop
adc
rolb
lret
repz
fbstp
push
movsl
loopne
pop
aam
mov
cmovg
dec
shlb
adc
loope
or
add
adc
imul
cmpsl
mov
bound
mov
sbb
arpl
mov
adc
adc
sub
lcall
call
mov
adcb
mov
add
jg
dec
fistl
fwait
dec
jo
sub
sub
sti
dec
inc
out
sbb
cmpsl
iret
orl
push
adc
les
fildl
and
add
minps
dec
ret
sti
pop
xor
jecxz
mov
xchg
pop
xlat
sub
iret
xchg
dec
outsl
and
push
mov
xor
or
jbe
rcr
stos
cmc
push
jae
push
mov
jecxz
cmp
jmp
sbb
popf
scas
and
inc
pop
jl
out
jnp
jge
popf
mov
sub
push
das
ss
fs
mov
add
outsb
sbb
sbb
daa
aaa
daa
movsb
inc
lahf
lahf
add
out
cmp
mov
sub
insb
xchg
test
add
jmp
jno
mov
push
insl
arpl
push
push
bound
out
ja
pop
pop
arpl
jl
mov
xchg
fstpl
or
pop
or
xor
repnz
leave
test
cld
xchg
pop
and
in
jb
scas
mov
push
push
jb
je
dec
scas
xchg
push
lods
sarb
sub
and
stos
in
sub
stos
cmpsb
test
pushf
push
test
push
leave
push
jb
push
add
dec
dec
and
jnp
pop
cmpsl
or
mov
scas
xchg
stos
fs
sub
push
leave
test
movsb
shlb
pop
and
imulb
mov
push
lods
xchg
push
mov
xchg
pop
mov
scas
stos
in
mov
mov
dec
scas
xchg
mov
push
jb
inc
lahf
call
push
mov
push
jb
mov
pop
inc
leave
stos
stos
fistps
mov
cltd
bound
icebp
and
add
xor
cmp
add
les
push
lea
pop
pop
fcomps
mov
mov
jo
shlb
jmp
mov
or
xchg
fistl
mov
mov
xchg
iret
in
add
dec
pop
das
mov
inc
push
push
or
xlat
push
adc
add
pop
es
test
or
sbb
mov
xor
push
or
dec
sbb
fistps
mov
das
dec
inc
fldt
stos
adcl
inc
push
xor
mov
or
cvtps2pi
adcl
inc
push
inc
xlat
and
out
fisttpll
xchg
mov
rcl
adcb
xchg
add
sti
fs
sbb
push
scas
fisubl
int3
aas
xchg
push
mov
fists
fmuls
inc
addl
fiaddl
pop
pop
inc
sub
aaa
and
pop
adc
push
jb
xor
jp
cmp
jmp
xchg
test
sbb
insl
push
ljmp
bound
mov
out
aaa
fucomip
sub
aaa
lods
sbb
mov
orb
ss
mov
outsl
jecxz
mov
cwtl
add
lahf
lods
xor
aas
dec
add
pop
gs
fwait
add
add
aas
outsl
or
lods
cmc
pushl
mov
jg
aaa
pop
addb
ja
bound
or
scas
push
imul
inc
pop
push
sbb
les
out
icebp
sub
push
push
outsl
mov
jbe
inc
pop
xor
xchg
push
jg
out
pop
ss
imul
jl
push
add
pop
add
mov
popa
xor
sbb
mov
pop
cmp
sbb
cmp
jnp
pop
or
inc
in
or
add
lods
and
ficoms
bound
fnsave
dec
inc
es
nop
inc
or
inc
xor
imul
addr16
out
emms
ret
cmp
jne
addr16
mov
sbb
adc
je
or
push
loop
insl
je
push
les
mov
sbb
mov
mov
add
sub
xchg
mov
jno
imul
pop
les
in
ss
mov
xor
dec
dec
bound
jae
js
jno
add
lock
gs
and
mov
jo
stos
inc
inc
cmp
add
aam
jno
mov
and
stos
rclb
and
repz
inc
aaa
jl
or
out
pop
add
dec
xchg
push
xchg
out
sahf
jb
hlt
xlat
dec
and
push
fstpt
xchg
dec
ret
mov
inc
mov
sub
cmpsb
sahf
dec
dec
in
mov
aaa
rcrb
or
jmp
sub
fwait
addb
bound
xorb
mov
push
add
stos
xchg
fimull
lcall
scas
pop
inc
add
pop
inc
pop
rcrb
pop
and
sbb
pusha
push
scas
pop
sub
mov
or
push
push
das
cmp
xor
xor
pop
ljmp
jnp
dec
mov
inc
xor
or
xlat
cmp
js
dec
sbb
and
mov
arpl
sub
out
addr16
push
add
mov
mov
out
inc
fiadds
pop
adc
dec
pop
jg
addl
fwait
xor
inc
xchg
push
jae
and
fistpll
xor
aaa
inc
aam
mov
or
push
cmpsl
xor
fwait
and
pop
xchg
loopne
mov
mov
xchg
xchg
xorb
dec
insl
lock
sub
loop
sahf
cmp
mov
push
in
cs
cmp
xlat
dec
sbb
ret
out
es
loopne
arpl
push
and
fstl
out
xchg
loop
fidivrs
daa
xchg
inc
xchg
cmp
inc
cmp
jnp
pop
ret
fs
dec
sub
roll
pop
jecxz
pop
mov
dec
shlb
or
inc
loopne
stos
in
inc
jle
js
xor
in
and
ficomps
jg
into
dec
or
out
sbb
cli
inc
push
bnd
ss
push
push
push
fidivl
bound
xor
repz
ret
xor
out
loopne
inc
cs
lret
jb
mov
ret
cmp
push
cmpsb
xchg
ja
jge
js
retw
pop
fwait
sub
pop
pop
inc
data16
xor
mov
lcall
out
sub
inc
inc
mov
xchg
add
dec
daa
in
fisubs
push
mov
out
pop
js
inc
and
out
sbb
inc
pop
pop
mov
push
es
clc
fidivrs
pop
push
push
xor
dec
mov
fs
inc
pop
dec
es
das
pop
out
mov
add
and
or
idivl
push
sysexit
mov
cmpsl
xor
outsl
push
scas
jge
xchg
push
push
insl
sub
neg
jnp
push
insl
mov
inc
ja,pn
xor
jnp
dec
mov
push
jp
fucomi
loope
ds
fiaddl
jg
fimuls
xor
das
sbb
outsl
dec
xor
in
fisttpll
xor
mov
inc
outsl
imul
add
push
dec
pop
dec
jecxz
inc
pop
jecxz
add
loop
pop
xchg
dec
dec
adc
jne
inc
mov
outsl
adc
push
outsb
scas
fwait
insb
movsl
jo
popl
jnp
dec
xchg
sbb
invd
or
xor
mov
pop
add
inc
inc
fcomi
pop
hlt
pop
int
xor
bound
jnp
ja
scas
add
bound
pusha
imull
mov
inc
adc
pop
add
popa
xchg
cs
pop
mov
sti
cwtl
test
mov
and
pop
lret
pusha
lahf
xchg
jno
fs
pop
push
cmpsl
xlat
addl
push
pop
add
addr16
jmp
arpl
pop
shrl
stos
scas
lcall
fs
mov
lret
xor
lahf
push
mov
push
pop
dec
pop
lahf
add
daa
addr16
sbb
inc
mov
jo
add
sbb
inc
dec
pop
sahf
xor
pop
sbb
mov
mov
push
sub
push
shll
imul
sub
mull
xchg
or
pop
xor
mov
push
dec
inc
fisubrs
fs
outsl
inc
cmp
jl
lods
push
add
pop
aas
add
out
or
hlt
adc
push
add
divb
cmpsl
sbb
add
pop
iret
adc
pop
mov
test
add
popa
cs
xchg
outsb
out
dec
movsl
mov
shlb
jb
mov
sub
gs
sbb
pop
scas
arpl
push
jo
xchg
add
jg
arpl
mov
ja
dec
mov
push
ljmp
repz
sub
add
test
out
jae
inc
pushf
add
nop
add
mov
pop
js
push
sarl
and
pop
cmp
jne
jo
arpl
xor
pop
pop
ja
xor
push
add
jo
or
mov
into
popl
pop
push
sbb
je
cmp
xor
cs
jbe
lods
push
mov
add
adcl
add
fiadds
iret
das
push
sub
das
mov
pop
pop
outsl
ret
clc
addl
dec
mov
test
fldpi
fildll
mov
cmpsl
add
out
scas
inc
ret
and
sub
test
mov
adc
dec
sti
and
push
das
mov
ret
stos
das
or
fwait
iret
push
nop
mov
inc
pop
test
jge
outsl
popa
fldt
or
iret
popf
pop
xor
sub
lahf
mov
pop
sub
and
jmp
mov
inc
mov
mov
pop
dec
sysenter
push
xchg
addl
sbb
mov
test
filds
mov
outsb
dec
arpl
jae
lea
sbb
jbe
push
imul
xor
das
add
mov
outsl
sub
xlat
aaa
and
push
les
sbb
mov
sub
stos
pop
movsb
push
out
dec
xlat
add
xlat
mov
push
nopl
inc
fldt
mov
xchg
fiaddl
shlb
push
mull
push
push
xor
pop
lahf
sub
imul
daa
mov
adc
fildl
in
sbb
insb
outsb
push
enter
dec
ss
les
cmp
inc
xorl
faddl
adc
mov
ret
or
nopl
or
jg
and
mov
mov
pop
sbb
pushl
mov
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
imulb
in
pop
sbb
xor
mov
dec
jg
cmp
cs
pop
sbb
mov
ja
cli
dec
pop
dec
xchg
jecxz
dec
push
pop
mov
pop
adc
mov
mov
aad
xchg
push
in
or
xchg
fnstenv
cmc
imul
ss
add
loope
outsl
or
cmpsl
sub
cmp
rorb
dec
cmpsb
popf
in
cmp
pop
push
dec
es
inc
sub
and
mov
add
push
daa
cmp
hlt
xor
cmp
inc
and
cltd
in
dec
mov
dec
dec
rolb
or
mov
xor
stos
and
mov
decl
jp
mov
aaa
dec
ror
push
loope
pop
aam
arpl
jns
xchg
pop
rcl
xor
pop
fstpt
pop
popf
ljmp
or
mov
pop
xor
inc
adc
inc
push
sbb
addr16
cmp
jne
addl
cmp
fs
das
clc
ljmp
notl
add
and
dec
addr16
hlt
ret
imul
pop
int3
or
cmp
popa
outsb
imul
das
cs
or
pop
xchg
nop
inc
add
add
and
daa
fcomps
aaa
insl
mov
call
and
add
push
jae
add
test
popl
daa
popa
aam
bound
popa
aam
xlat
push
pop
inc
andl
pop
dec
push
push
jmp
or
scas
mov
je
add
out
movsl
push
pop
or
mov
xchg
outsb
inc
inc
lods
addr16
inc
push
xlat
aaa
xor
fbstp
push
mov
push
add
inc
add
sarb
push
add
or
clc
sahf
push
ss
lcall
fmuls
out
add
rdpmc
pop
iret
push
add
jb
pop
scas
test
push
dec
in
dec
repz
or
es
ljmp
mov
lcall
inc
shlb
aam
and
dec
punpckhbw
or
test
outsl
add
push
lods
aaa
dec
inc
xchg
cld
orb
test
ficoms
sbb
add
push
fs
jno
insl
cmp
stos
adcb
out
repz
push
outsb
mov
fstps
mov
out
mov
pop
mov
push
mov
repnz
xchg
fmull
repz
push
add
cmp
push
es
ret
mov
push
and
push
jae
insl
jg
jns
int
add
and
push
jo
jbe
fcmovne
mov
xchg
rorb
in
add
push
daa
aaa
pop
rorl
in
jge
cmp
cmpsl
and
jns
testl
pushw
and
mov
test
xchg
cmpsb
pop
mov
insb
and
dec
push
push
and
out
imull
sub
divb
push
stc
sub
sub
cmp
add
push
jno
out
cmp
mov
sbbl
cmp
jp
mov
xchg
faddl
mov
sbbb
mov
fnstcw
push
cs
pop
addr16
pop
repz
in
jo
inc
xchg
push
cmpsb
mov
addr16
add
push
inc
inc
jl
dec
jmp
inc
mov
mov
jecxz
lret
sahf
rclb
aaa
fstl
jp
sti
pop
inc
or
push
pop
xor
jnp
repz
xor
push
jo
neg
and
push
cmp
sbb
out
fsubrp
pop
inc
push
push
push
push
es
mov
add
jnp
js
xchg
pop
subl
pop
mov
cmp
mov
xor
repz
dec
test
in
jns
xor
dec
jecxz
xor
jbe
ss
out
aaa
sbb
push
cmp
xor
ss
push
out
sahf
in
inc
out
cmp
pushf
into
iret
repz
lock
xor
addr16
idivl
and
fwait
out
sar
cmp
daa
inc
mov
jle
mov
mov
repz
sub
push
inc
mov
aad
pop
dec
sbb
daa
push
shrl
adc
jg
xor
rcrb
push
push
mov
xor
adc
fimuls
pop
pop
mov
jbe
aas
fldt
leave
loop
and
push
pop
push
inc
mov
je
inc
cs
mov
and
pop
sbb
test
imul
adc
or
bound
repnz
mov
daa
or
stc
adc
add
scas
or
insb
aaa
or
addr16
and
and
insb
jno
negl
add
fiadds
leave
rcr
or
outsb
lcall
push
push
js
xor
mov
pop
insl
cmovs
xor
sbb
and
dec
xchg
pop
xchg
mov
outsl
xchg
fcmovbe
lods
xchg
fildll
rcrb
stos
cwtl
mov
and
cmpsl
mov
pop
push
dec
lock
push
cli
inc
outsl
aam
push
popa
je
inc
addl
adc
fstpt
xchg
mov
xchg
inc
mov
flds
push
ficoml
lods
mov
fisubrs
pop
lcall
lret
es
push
and
xorb
test
dec
mov
dec
movsl
daa
inc
inc
or
pusha
mov
fmuls
pop
sub
inc
lods
xlat
out
addr16
lahf
push
cmp
push
aaa
xor
mov
js
or
pop
dec
mov
ja
lods
mov
jo
inc
mov
dec
aas
arpl
xchg
das
inc
add
adc
mov
jecxz
xor
testl
popa
or
popa
fdivrs
dec
pop
jb
mov
divl
sub
mov
xor
daa
add
dec
push
and
sysexit
ja
leave
sbb
pop
mov
jmp
push
or
add
jbe
jo
xor
or
aaa
test
outsb
push
jnp
xor
and
fwait
add
test
add
cmpsb
loop
dec
push
lahf
pop
mov
fisubrs
or
addr16
lea
lahf
add
xor
popl
lahf
pop
xchg
cmp
inc
inc
mov
lret
shlb
add
stos
xchg
out
sub
add
mov
gs
rclb
jbe
add
dec
loopne
pop
das
mov
and
inc
add
inc
mov
mov
pop
pop
rcrl
or
push
rcr
mov
testb
push
inc
sub
cmp
dec
pop
mov
jg
emms
pshufw
je
xlat
das
pop
adc
push
xor
sub
iret
inc
jbe
pop
pop
add
inc
loope
pusha
test
sbb
mov
dec
popf
sbb
add
xchg
das
testl
iret
pop
add
lock
jb
das
or
add
insl
pusha
add
shrl
daa
xchg
xchg
inc
rolb
inc
jecxz
addl
pop
adc
inc
add
jmp
and
mov
jbe
inc
sbb
mov
mov
out
les
cmp
mov
loopne
push
push
sub
aas
sbb
or
push
xrelease
push
sbb
lahf
or
test
mov
inc
pusha
stos
aas
push
arpl
pop
push
add
dec
popa
adc
sub
pop
push
addl
fadds
das
pop
pop
add
push
pop
outsl
jmp
clc
mov
sub
mulb
mov
jg
dec
mov
mov
inc
inc
push
inc
mov
scas
sub
cmp
dec
push
push
pop
out
or
pop
out
sarb
pop
sbb
jnp
jle
fimull
pusha
pop
sarb
repnz
aaa
xchg
dec
arpl
mov
mov
mov
xchg
inc
pop
popf
mov
inc
or
mov
dec
add
stos
cmp
cmpsl
push
call
cmpb
jg
jmp
jl
mov
testl
adc
inc
lret
push
add
hlt
inc
jns
je
adcb
enter
xchg
cmp
lret
outsb
jmp
nop
lret
or
jmp
popa
insl
jo
je
add
addr16
sti
sbb
aas
jo
jae
daa
pop
jno
outsl
xor
pushf
sbb
fadds
aas
and
sub
cmpsb
jns
je
movlhps
push
jne
or
decl
add
dec
out
ret
aas
mov
jae
fcoms
cmp
dec
pop
inc
mov
sub
je
popf
js
and
imul
lods
xchg
ret
sbb
pop
das
andb
sti
inc
jmp
data16
fimull
adc
push
negl
push
inc
or
push
stos
pop
sub
ret
bound
mov
sbb
cmovns
jae
push
push
enter
adc
ret
jmp
into
dec
mov
push
mov
stos
jmp
adc
push
dec
cmpsl
inc
inc
and
aad
fistps
ss
push
test
push
add
jns
jb
cmp
push
iret
mov
adcl
andb
dec
xlat
insl
pop
roll
call
or
ljmp
fmuls
add
pop
daa
lahf
sbb
pop
loop,pt
pop
cmpsb
jb
cmp
or
mov
pop
loope
push
add
imul
aam
push
pop
outsl
inc
push
dec
inc
dec
push
xchg
loop
and
xor
pop
ja
andl
fiadds
jg
ret
cmp
jbe
add
and
push
dec
into
add
add
test
jb
mov
add
insb
jnp
and
cmp
lret
outsl
sbb
xor
das
ds
das
sbb
leave
orb
add
pop
daa
cmp
push
and
push
divl
lcall
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
imul
ja
and
and
adc
inc
pop
pop
sub
popa
xchg
scas
test
daa
xlat
ds
fmull
push
or
pop
push
and
aaa
push
rorb
int3
std
imul
mov
outsl
xlat
adc
xchg
sahf
push
scas
mov
shlb
add
lea
pop
lahf
outsb
je
bound
sub
push
jno
mov
out
lahf
outsb
mov
fstps
jbe
mov
loopne
cwtl
push
xchg
sbb
fcomp
jnp
scas
mov
add
scas
icebp
sahf
in
mov
sub
pop
xchg
add
jl
sbb
mov
es
addb
mov
out
sbb
clc
fsubrs
push
daa
or
mov
pop
and
jnp
pop
pop
ss
sub
mov
dec
sbb
push
pop
mov
test
or
in
or
ficoms
sbb
jb
ljmp
pop
rolb
les
adc
outsl
arpl
popa
lock
xor
je
and
and
arpl
push
es
or
push
cmp
jns
movsb
je
mov
popa
mov
movsb
outsl
je
mov
popa
stos
inc
fisubl
add
loop
sbb
and
xor
and
inc
cld
sarb
loop
dec
inc
pusha
lahf
cltd
mov
add
jne
mov
or
push
js
outsl
fs
pop
mov
jo
jns
iret
inc
mov
or
sub
outsl
insl
pop
sbbl
jne
pop
sbb
add
or
xchg
or
cmp
and
mov
pop
gs
adc
pop
jbe
mov
jns
insb
mov
inc
inc
into
loop
outsb
mov
xor
fidivrl
pop
xor
gs
fcoms
jnp
adc
or
inc
cld
outsb
xadd
sbb
inc
cmovo
divl
cmpb
aas
vphaddudq
nop
jo
maxps
loopne
pop
dec
add
call
movhps
push
adc
dec
fucomp
adc
xchg
out
das
push
sbbb
sbb
xlat
push
mov
sahf
out
bound
popl
hlt
idivb
add
adc
inc
fiadds
add
insl
adc
shll
daa
xchg
mov
cwtl
xchg
daa
outsl
inc
xchg
pop
insl
stc
jo
es
call
fldt
xor
xor
fstpl
fsubrl
fistps
and
test
pop
and
push
pop
xchg
and
add
es
push
jg
pop
dec
jnp
mov
fisubl
inc
enter
inc
shl
inc
adc
xchg
insl
in
popf
nop
add
xlat
sub
pop
xchg
cmpsl
add
iret
lds
cmp
push
pop
xchg
and
cwtl
lahf
or
test
mov
loopne
add
adcb
mov
xchg
dec
mov
data16
cwtl
inc
dec
js
repnz
outsl
xchg
movsb
jl
pop
and
sbb
test
enter
or
ds
enter
inc
xchg
add
adc
jns
sub
inc
daa
or
xor
fsts
popl
mov
daa
push
movsb
or
and
push
add
mov
ss
jns
lcall
lahf
fdivrs
inc
lahf
or
in
push
int3
mov
es
mov
outsl
mov
sbbl
mov
lock
or
testb
push
adc
nop
cld
cwtl
inc
inc
pop
jne
ficomps
inc
sbb
add
cmp
xchg
or
mov
add
lahf
inc
fisubrs
loopne
mov
out
clc
aas
loopne
nop
int
mov
insl
in
push
inc
aas
addr16
fimuls
push
pushf
adcb
mov
outsl
jae
iret
add
add
fcomp
aam
mov
pop
cltd
popf
add
adc
cmp
xchg
cld
popf
cmp
add
rolb
dec
scas
in
rclb
xlat
dec
jo
test
jnp
xchg
pushf
aas
popl
enter
pop
or
faddl
in
mov
push
dec
add
sbbb
out
test
sarb
jnp
ja
lcall
jl
dec
lahf
repnz
enter
mov
int3
fdivl
jae
pop
mov
pop
sti
es
mov
jae
dec
ja
mov
repnz
insb
jl
and
test
lods
sbbl
cmp
jb
loopne
pop
and
js
mov
test
loopne
pop
fwait
jns
mov
push
cmpsl
pusha
je
rclb
in
sub
pop
repnz
cs
or
stos
je
movsb
popf
nop
out
pusha
clc
mov
filds
xchg
stos
sbb
nop
clc
mov
cmpsl
pop
add
mov
pop
pop
jg
mov
jb
fwait
out
les
add
mov
adc
lods
add
out
test
pushf
and
dec
sahf
out
cmpsl
pop
insb
test
mov
jnp
cmpsl
jg
dec
ss
test
lods
shrb
dec
pushf
jmp
in
js
mov
sbbl
jp
mov
push
and
lahf
mov
movsl
ja
enter
nop
or
enter
out
clc
in
pop
and
mov
add
daa
testb
popf
and
xor
movsb
inc
or
xchg
cmp
dec
lahf
or
imul
inc
sahf
xchg
movsb
push
or
nop
test
movsb
aam
xchg
stos
fisubs
add
aam
movsl
sub
jmp
dec
addr16
cmpsl
jns
imul
xchg
lcall
iret
or
adc
movsl
cmpsb
outsb
and
hlt
addr16
cs
push
cmpsl
rolb
hlt
dec
enter
xor
dec
shll
push
cmpsl
jg
insb
fdivrs
push
cmp
out
mov
cwtl
lahf
nop
xchg
mov
cmp
repnz
inc
movsb
enter
pusha
sub
cmpsl
enter
or
cmpsl
sbb
sub
adc
push
lds
push
cmpsl
movsb
mov
sahf
cmpsb
jo
stos
js
adcb
cmpsl
jo
les
call
mov
ds
sbb
nop
mov
ja
rorb
cs
js
out
cs
shrb
js
cmpb
ja
es
sbb
cmpsl
mov
out
ljmp
aam
dec
inc
ja
andb
dec
pop
inc
test
js
adcb
inc
iret
add
js
or
js
enter
mov
stos
add
sbb
dec
stos
adc
and
push
dec
fistl
add
jg
int3
xchg
mov
lock
inc
sahf
xorb
loop
nop
out
movsb
mov
sub
insb
push
push
push
inc
add
into
inc
clc
push
cmp
stos
or
mov
jbe
jmp
push
lcall
sub
jg
fiaddl
mov
inc
lods
lahf
nop
xchg
and
pop
repnz
inc
cwtl
in
cld
or
mov
xchg
push
inc
movsl
out
inc
cs
int3
jbe
sub
push
sahf
push
xlat
inc
ja
sub
nop
inc
inc
adc
iret
mov
fbld
inc
mov
sahf
hlt
pop
enter
inc
in
repnz
lods
inc
push
pop
cmpsb
test
add
push
ja
add
fisubrs
movsb
sahf
cwtl
fbld
iret
add
fcomp
call
iret
push
fiadds
in
jbe
subb
lahf
in
inc
into
pop
jnp
ja
out
fimuls
push
mov
inc
push
add
mov
lahf
cs
add
fs
out
test
scas
xor
inc
lahf
outsb
imul
mov
or
adcb
jo
or
in
shl
out
cs
mov
dec
enter
and
xor
inc
ja
movsb
adc
jo
dec
iret
test
pusha
inc
mov
enter
rolb
jb
mov
pop
lods
mov
adc
push
outsl
aas
es
push
dec
jbe
cmp
inc
faddp
mov
adc
aas
popl
pop
fmul
daa
orb
add
cs
data16
mov
push
xor
adc
cwtl
inc
xchg
outsl
add
in
imul
add
sbbb
add
add
push
sar
pushw
loopne
nop
enter
or
xchg
enter
xor
mov
and
sub
jns
pop
insl
addr16
fimuls
insb
push
lods
js
jbe
or
xchg
xchg
jmp
cmp
xlat
mov
shll
sahf
outsb
and
mov
fcoms
cmp
movsl
in
mov
mov
in
je
pushl
mov
movsb
or
outsb
jl
bound
push
roll
ret
movsb
pop
data16
cmp
or
movsb
ss
mov
xor
pop
xchg
mov
imul
dec
sbb
popa
or
pop
out
pop
mov
or
jbe
daa
scas
clc
mov
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
inc
mov
into
jnp
fidivs
sbb
mov
mov
les
ss
es
adc
hlt
mov
out
out
jo
xchg
jns
jae
sahf
mov
sahf
out
fidivrs
pop
cmp
pushf
int
insb
mov
lock
and
or
fsubs
xchg
testl
mov
mov
in
leave
xorb
add
add
add
in
add
dec
xchg
sahf
out
add
enter
add
leave
in
fistpll
rorl
jg
jg
sbb
pop
pushl
push
push
cmp
ja
xchg
fidivrl
sbbl
and
lods
pusha
inc
push
leave
add
mov
idivl
outsl
add
inc
jl
adc
mov
repnz
mov
outsl
add
dec
and
cmp
cmpl
jns
push
mov
or
pop
scas
add
fsubrs
pop
add
enter
fistps
mov
and
push
mov
or
add
jns
or
stos
gs
push
pushl
mov
mov
mov
add
sti
push
dec
divl
fsubl
enter
dec
js
or
aaa
mov
jnp
mov
in
sub
shrb
jl
lahf
mov
lods
jle
ja
mov
push
dec
out
pop
ja
pusha
shll
add
sub
add
out
fimuls
int3
push
fcomp
nop
pop
add
outsl
add
and
and
es
and
test
xlat
aaa
jl
push
fnstsw
push
and
scas
xchg
and
sub
pop
bound
fadds
add
push
pop
xlat
mov
cmp
mov
mov
inc
xor
mov
incl
mov
fs
pop
add
sub
clc
es
dec
movsb
rol
mov
mov
pop
jg
rcr
call
loope
movsb
jg
dec
push
in
les
and
clc
rolb
outsl
popf
aaa
mov
cmp
pop
sbb
mov
ja
fimull
divl
jb
jns
cmp
shlb
pop
shrb
push
push
fildll
bound
mov
in
push
pop
daa
aaa
or
in
insl
rol
push
ret
fs
lds
cmp
xchg
sub
or
lock
xchg
fmuls
movsbl
or
jb
pop
rcr
in
push
dec
and
xchg
or
stos
xchg
xor
xlat
dec
push
xchg
fisubl
xlat
or
jge
nop
dec
les
loopne
jo
push
mov
pop
add
inc
jno
lods
pop
ret
and
push
xor
outsl
add
lods
fs
dec
add
es
iret
mov
cmp
mov
clc
test
dec
add
add
in
pusha
and
ja
insl
xor
aaa
outsb
in
jbe
in
pusha
outsl
pusha
cmpsb
mov
loop
pushf
inc
les
les
repnz
add
imul
test
pop
jg
nop
pop
leave
jnp
jbe
ficoms
jg
add
xchg
dec
lods
add
and
cmpl
sbb
mov
mov
add
fists
ljmp
daa
mov
pop
clc
pop
or
mov
push
cmp
sbb
add
mov
xchg
mov
ja
fs
movsb
xchg
add
pushfw
sbb
push
jnp
addr16
lahf
iret
mov
mov
shlb
sub
add
mov
xchg
cmp
mov
push
fs
enter
dec
sub
cmp
out
fadds
push
mov
or
inc
fidivrs
movl
aaa
or
mov
fiaddl
push
sub
mov
pop
outsl
enter
add
or
push
or
je
dec
pop
repnz
add
add
fimull
add
mov
pop
dec
pop
adcb
and
mov
cmp
add
lock
nop
and
push
popa
dec
inc
rorb
jno
dec
sub
xchg
mov
push
add
ja
push
cmp
sbb
xor
inc
push
imul
das
stos
xor
daa
ljmp
mov
inc
shrl
mov
addr16
les
mov
mull
lahf
incl
jnp
lret
add
adc
or
rcl
call
jae
dec
and
mov
nop
daa
mov
mov
nop
mov
test
int3
add
fdivs
jns
push
int3
inc
push
dec
xchg
inc
imul
mov
push
mov
pop
int
ds
addr16
fisttpl
push
xor
push
std
pop
subb
imul
repz
out
sahf
out
jno
shl
repz
or
push
lcall
add
jp
out
lcall
mov
sarl
jmp
iret
shrl
jae
je
mov
ljmp
sarl
ss
jl
jns
cmpsl
stc
sbb
repz
out
or
pop
cmpl
jns
push
lea
repz
sbb
aaa
push
jg
xor
out
in
sbb
push
imul
jl
mov
cli
pop
jge
int
jle
out
sahf
and
insb
xchg
mov
jge
jg
push
xchg
int
subb
ds
stos
adcb
sbbl
inc
test
fcompl
test
cmp
out
scas
roll
lcall
test
jecxz
mov
cmp
repz
mov
jns
cmpsl
inc
jl
loopne
mov
repz
aaa
jb
hlt
sbb
xchg
rorl
mov
mov
push
int
sub
je
dec
repz
mul
nop
xchg
push
sbb
imul
or
dec
sahf
cmpsl
stc
cmp
or
xor
nop
int
repz
dec
xchg
and
iret
repz
mov
out
inc
out
xchg
aad
es
jl
cmpsl
stc
cmp
and
iret
sarl
xor
cmpsl
stc
inc
popf
insb
mov
sahf
outsb
jns
iret
repz
mov
lahf
pop
mov
ds
repz
dec
js
mov
repz
push
stc
cmp
out
movsb
xchg
mov
sahf
cmpsl
dec
mov
imul
cmpsl
inc
mov
int
test
jbe
les
dec
test
sahf
cmpsl
stc
xor
and
jns
jge
lods
xchg
push
push
enter
int
scas
jmp
out
cmp
adc
outsl
stos
xor
mov
cli
and
xor
mov
mov
lahf
lret
ds
ds
mov
push
flds
aaa
sarl
jp
call
jl
out
mov
inc
out
ds
xchg
rorl
repz
shlb
mov
iret
sarl
mov
mov
out
lcall
pop
sahf
out
cmp
hlt
xor
insb
cmpsl
lcall
fsts
fwait
int
jns
idivb
leave
dec
repz
int3
fcomps
lcall
rolb
push
aam
jae
adc
fcmovne
nop
fsub
mov
filds
iret
push
loopne
dec
jecxz
pop
aam
sahf
out
adc
in
outsl
fwait
add
nopl
sub
push
sub
pop
xor
outsb
mov
dec
getsec
sahf
add
inc
jp
rolb
in
xchg
or
shlb
pop
push
enter
lahf
pop
mov
push
leave
inc
lock
scas
pop
rclb
jb
popf
dec
push
add
add
jge
adc
aas
andb
aas
mov
js
nop
or
leave
outsl
inc
jno
arpl
and
aas
fwait
in
popf
xlat
pop
repz
popf
cmpsb
pop
mov
jns
ret
fbstp
jo
setg
mov
sub
in
mov
pop
das
cmpsl
nop
adc
repnz
imul
jnp
out
aas
add
mov
and
jle
daa
in
cmp
enter
cmove
inc
sub
daa
xchg
add
mov
jl
pop
push
mov
pushf
push
adc
scas
leave
in
dec
push
add
aaa
movsb
mov
adc
lock
dec
mov
shl
push
jl
dec
pop
push
cmpsl
xchg
adc
popa
lahf
dec
aas
xlat
dec
add
and
pop
xlat
insb
fsubrp
and
push
lock
movaps
push
pop
push
bound
xorb
dec
adc
xchg
sub
add
out
aaa
lock
fisttpll
mov
pusha
in
aaa
and
cltd
inc
or
dec
addr16
ja
outsl
push
sub
sbb
inc
add
aad
fdivrs
lods
daa
int3
jae
add
lea
rorl
flds
in
fadds
adc
outsl
fxch
add
in
cmp
pop
xchg
adc
addr16
cmp
mov
pop
dec
cmp
jns
mov
push
add
mov
ficoml
push
call
seta
xchg
shrl
cmp
fistps
adcb
pop
jb
lods
imul
and
notl
xchg
xchg
outsb
or
ljmp
cs
dec
push
fadd
and
add
inc
pop
and
sub
aam
shll
lar
fcompl
fmull
and
cmp
sub
outsl
pop
pushf
in
xchg
ja
sbbb
pusha
cmp
adc
scas
pop
mov
inc
xor
mov
mov
push
xor
push
iret
movsb
daa
aam
faddl
pop
mov
sub
adc
fisttpll
pop
xor
daa
xor
add
imulb
insb
daa
mov
pusha
and
les
push
push
lock
leave
add
filds
push
hlt
stos
in
jne
ficomps
mul
and
mov
fidivs
inc
mov
ret
add
sbb
into
add
add
mov
leave
dec
movsl
cmpsb
icebp
push
mov
xchg
pop
popa
and
addr16
jmp
fildll
jb
dec
sbb
jle
stos
dec
ret
inc
cmpsb
aaa
fists
test
fldt
cmp
fistpll
in
out
mull
sbb
sbb
mov
add
bound
sub
bound
pop
add
cmp
mov
lock
jp
test
xchg
ror
leave
leave
leave
leave
aam
in
jbe
cmp
hlt
loope
arpl
pmulhuw
in
in
pop
cmpsl
arpl
das
das
aaa
add
xchg
out
fs
inc
mov
push
and
xchg
mov
jge
movntq
xchg
sahf
add
pop
inc
mov
mov
or
or
xchg
and
or
aaa
push
cmp
leave
loope
fs
sbb
repnz
sub
dec
cmp
loop
cmpl
xchg
adc
outsl
loop
loop
daa
dec
leave
mov
hlt
scas
push
mov
fisttpl
sub
dec
scas
cs
adcl
das
gs
push
adc
sbb
add
enter
add
ret
dec
aaa
jb
or
or
lcall
lahf
lods
ret
popf
mov
push
xchg
xchg
pop
gs
in
xchg
push
ret
add
test
and
in
daa
in
pop
imul
cs
jl
dec
sbb
xchg
and
push
scas
add
mov
loop
add
pushf
lds
neg
pop
popf
mov
sub
pop
clc
xlat
in
dec
dec
adc
adc
out
cmp
add
mov
insb
cmp
lcall
fs
xchg
addr16
sub
filds
lcall
fisttpl
out
out
daa
mov
dec
dec
or
xchg
shlb
push
in
jno
sahf
add
push
pop
call
test
push
cmpsl
in
out
call
gs
shll
pushf
push
push
lods
add
and
call
lea
stc
imul
or
inc
ja
dec
mov
jmp
xchg
or
push
add
outsl
ja
xor
popf
xorb
dec
dec
push
xchg
ljmp
daa
adc
movsb
or
je
call
pop
pop
xchg
pushf
cmp
jne
cmpsl
ljmp
mov
ss
test
jmp
jmp
sub
adc
and
in
push
je
jbe
insl
emms
addr16
mov
pushf
xor
das
push
cmpsl
mov
mov
sbb
xchg
and
in
loop
out
in
pop
xlat
outsb
daa
imul
adc
xchg
jns
add
ss
push
cmp
push
lcall
mov
scas
mov
mov
fs
pop
inc
decl
or
push
add
pop
out
xchg
pop
rclb
test
sbb
out
icebp
add
add
in
pop
add
add
inc
movsb
cmp
xor
sub
inc
insb
fildll
rorl
out
pop
lcall
add
out
in
inc
test
insl
adc
out
insl
pop
pop
add
inc
adc
dec
addl
shrb
jbe
js
adc
mov
lods
leave
inc
cmp
call
je
outsb
sbb
leave
and
aas
int3
pop
leave
and
mov
outsb
jg
addb
mov
pop
test
shrb
mov
mov
mov
in
dec
in
jno
inc
jb
adc
push
scas
aad
lret
adc
xchg
xchg
add
leave
enter
xor
popf
mov
cmpsl
scas
filds
and
leave
inc
shl
cmp
and
addr16
daa
sub
jl
fsubr
and
fs
mov
outsl
push
add
loop
pop
jg
sbb
leave
push
push
repz
and
pop
push
jnp
scas
push
pop
js
loopne
test
mov
sbb
sub
jb
push
adc
sbb
and
mov
add
cmp
xchg
push
dec
push
or
pop
leave
jecxz
repz
inc
xchg
and
loope
jecxz
cli
das
hlt
test
mov
cmp
xchg
hlt
pop
add
xchg
sbb
daa
btc
enter
psrlq
fiadds
jmp
cmp
add
pop
sbb
jae
hlt
lock
dec
and
cltd
jae
fs
mov
jae
negl
xchg
add
mov
add
es
cmc
cmc
outsb
mov
fstp
leave
roll
pandn
out
lea
je
push
pop
cmp
test
mov
pushl
push
not
xchg
outsl
lcall
movsb
add
and
popf
int3
bswap
ror
or
dec
adc
jne
out
je
orl
xor
jne
minps
in
push
jl
sahf
in
mov
mov
jb
mov
push
in
clc
or
cmp
inc
jbe
push
sub
and
xor
xor
add
jo
jbe
daa
in
inc
jb
mov
mov
leave
imul
daa
ja
add
addr16
pop
insb
dec
out
ja
aaa
test
bound
stc
dec
movsl
or
add
pop
leave
mov
bswap
fstps
pop
js
dec
inc
push
or
adc
sbb
add
mov
cmpsl
push
pop
mov
rolb
cmpsb
push
outsl
mov
inc
sahf
jg
xchg
in
jle
cli
dec
xchg
xchg
mov
js
jg
pop
rolb
fstpt
add
cld
outsl
jns
pushf
mov
pop
push
adc
mov
ds
dec
enter
push
push
pop
push
shrb
leave
jne
adc
mov
cli
mov
outsb
pop
in
push
xchg
insb
repz
xchg
adc
jp
dec
ja
rorb
es
add
rolb
leave
aam
pop
dec
inc
mov
lahf
push
jp
orb
das
xchg
add
leave
dec
subl
imul
add
pop
jnp
mov
push
cmp
daa
data16
and
jnp
xor
add
jbe
add
pop
jnp
xchg
mov
ljmp
cmp
adc
test
pop
daa
xchg
rolb
add
add
popf
mov
sbb
std
std
int3
daa
in
out
push
or
aas
jl
add
and
mov
inc
lods
ljmp
xchg
dec
jl
in
sub
pop
das
jl
jl
shll
jl
cmpsl
fs
jbe
popf
movsl
add
lods
inc
mov
mov
clc
cmp
inc
adc
sub
mov
pop
mov
pop
add
jb
outsl
add
ja
jg
dec
dec
jne
aas
jge
mov
cs
dec
push
add
in
fxch
inc
out
sti
out
jle
add
sbb
jb
adc
sbb
sub
rorb
dec
dec
into
dec
jle
jle
js
sbb
or
in
fisttpl
scas
pop
mov
in
rcr
ljmp
aas
jg
mov
add
and
cwtl
cmp
das
jg
jg
in
xchg
xchg
jg
mov
xchg
mov
or
pop
dec
mov
dec
adc
orb
jmp
xor
xchg
in
adcb
add
and
insb
call
mov
xchg
pushf
fdivl
fsubr
out
mov
add
xchg
imulb
sbbl
cs
xchg
daa
insl
cmp
jno
in
xchg
and
addl
or
cmp
mov
or
or
daa
and
fsts
loope
in
fldl2t
adc
icebp
adc
adc
addb
or
adc
sbb
lea
push
dec
fidivl
insb
das
xorb
push
add
mov
push
add
push
leave
dec
ja
push
add
daa
mov
xor
sub
in
cmp
subl
xchg
out
jb
add
cs
dec
dec
xchg
jl
mulb
filds
in
inc
ja
fcoml
jns
jbe
mov
sbb
out
test
jle
mov
add
cmp
int3
aam
inc
push
cltd
or
in
mov
inc
or
jne
imul
add
fs
push
cmpsl
je
add
aas
push
sti
xchg
repz
add
or
or
jg
jg
outsb
add
enter
xor
shl
pop
and
pop
add
xor
inc
xor
test
add
sub
fiadds
es
or
or
adc
mov
pop
nop
daa
rolb
mov
popf
mov
daa
sbb
jg
jne
lahf
addb
popf
inc
inc
mov
push
cmp
aad
sbb
push
daa
nop
cmp
out
ret
into
pop
push
xor
jbe
pmulhuw
cmc
loope
outsb
push
addr16
call
pop
in
ss
pop
enter
add
arpl
enter
and
sbb
pop
cmp
inc
jmp
xchg
xchg
dec
leave
xor
orb
dec
dec
cs
nop
jbe
xchg
add
addr16
out
mov
add
xchg
push
faddl
in
or
or
or
pop
or
xchg
lret
mov
xchg
add
addl
mov
dec
push
lahf
push
scas
pop
mov
or
or
or
or
iret
xchg
hlt
xchg
or
jl
add
xor
adc
mov
stc
sahf
jne
fisttpl
nop
add
add
add
sbb
jb
jo,pn
xor
in
or
insl
jns
xchg
xchg
enter
mov
push
in
icebp
sub
mov
or
mov
push
or
inc
decl
jb
sbb
or
cmpsl
push
leave
dec
in
push
push
jg
dec
add
andl
jbe
shrl
lock
lods
mov
push
xor
in
lds
int
or
and
lock
adc
mov
jo
sbb
jo
mov
movsb
addr16
fs
daa
push
push
pop
add
xor
insb
add
clts
fcomps
push
sub
jb
xchg
aad
in
pand
xor
lahf
push
dec
sti
ret
clc
outsl
clc
pop
mov
push
mov
push
testl
mov
or
sub
in
cmpsl
fsubl
cld
jo
push
maxps
cmp
es
mov
mov
cwtl
add
mov
lret
pmullw
out
jbe
repnz
push
in
add
std
lea
mov
cmp
mov
lahf
adc
ds
bound
add
imul
insl
js
xchg
mov
cmp
sahf
test
add
out
test
in
xor
es
in
lea
das
xor
mov
xchg
aas
xchg
pop
fs
pop
in
je
adc
fwait
xchg
ja
test
jb
iret
xlat
jg
cmp
popa
push
jg
and
mov
psrlw
mov
push
jb
pop
jb
dec
lods
pop
jo
pop
je
iret
mov
sbb
cmpsl
push
mov
dec
fimull
sub
xchg
add
in
sbb
xchg
ja
setns
in
fs
das
xchg
cmp
cmpsl
lret
in
repnz
xor
jnp
mov
cld
cmpsl
das
nop
pop
cmovs
jb
xor
pop
leave
loopne
pop
adc
sub
mov
xchg
and
push
cmpsb
mov
mov
xchg
mov
rorb
enter
fisttpll
call
sbb
jb
xchg
or
push
adc
pop
and
mov
mov
sbb
addr16
pop
add
fiaddl
dec
push
add
daa
and
jge
pop
lea
add
jg
popf
mov
subl
mov
or
adc
xchg
out
outsl
and
push
inc
add
pop
add
fs
xchg
xchg
and
jl
pop
pusha
in
enter
nop
or
lahf
scas
mov
jns
mov
add
pop
sbb
jnp
cli
xchg
add
prefetch
sbb
push
leave
sub
nop
push
dec
mov
movsb
add
jle
mov
xchg
fistps
add
ret
pop
cmp
lock
and
sub
notl
pop
and
divps
data16
and
add
add
xchg
daa
xchg
mov
or
and
leave
test
sbb
xor
mov
add
in
or
cmp
add
xor
push
sbb
xchg
fsts
daa
das
add
loopne
mov
aaa
aas
cmpsl
xchg
inc
xchg
leave
dec
sbb
cmpsb
push
and
jp
xchg
push
in
xor
movsl
das
sbb
dec
pop
out
xlat
xchg
push
fsubs
repnz
add
lock
pop
xchg
add
or
ja
rorl
setbe
ja
xlat
jmp
cmp
inc
dec
xchg
add
les
ja
xchg
xchg
lret
sbb
mov
test
in
in
sbb
rsqrtps
leave
in
notl
dec
sbb
leave
leave
leave
daa
das
aaa
aas
xchg
xchg
xchg
mov
fsubl
pushf
pushf
mov
jb
jp
mov
lcall
xchg
mov
ds
leave
mov
dec
imul
pop
dec
and
and
sub
fcmove
xor
xchg
and
data16
add
mov
cltd
add
fldl
test
pop
and
movntq
aaa
out
or
fcompl
pop
sbb
push
jg
sub
daa
cmp
enter
cltd
inc
sbb
push
and
adc
ja
leave
in
mov
xchg
pop
and
enter
cmp
lcall
sub
dec
push
push
lcall
lcall
cmp
outsl
lcall
dec
into
add
flds
in
sbb
add
fwait
adc
inc
xchg
push
pop
fwait
cmp
mov
sub
pop
fwait
popa
inc
sahf
mov
add
cmp
out
pop
pop
jo
mov
iret
xlat
shlb
sbb
add
pushf
pop
push
adc
jb
push
add
add
aas
add
dec
push
or
pusha
into
sahf
mov
or
or
dec
dec
inc
fwait
test
adc
mov
mov
int
outsl
fsub
adc
lods
daa
stc
pop
outsl
popf
add
scas
fisttpl
scas
cmpsb
loop
popf
and
addr16
and
popf
test
leave
dec
aaa
in
pop
setne
add
and
mov
pop
mov
ja
repz
add
add
xchg
and
push
pop
or
adc
enter
sbb
and
rdpmc
or
sbb
fimuls
gs
insl
aas
adc
cmp
nop
leave
in
add
lahf
sahf
mov
mov
add
leave
rcr
iret
add
add
and
mov
pusha
daa
mov
setae
xlat
repnz
pop
cmp
inc
pop
inc
push
mov
push
push
or
or
cmp
xchg
lahf
jge
push
aad
and
mov
fistps
mov
xor
add
enter
mov
psubq
sbb
xchg
and
and
aaa
add
add
in
enter
add
push
cmpsl
loope
fs
pop
addr16
and
test
mov
lcall
into
pushf
fsubrl
pop
fimuls
out
test
xor
imulb
fildll
int
and
push
imull
push
mov
pop
inc
fisttpl
push
pop
repnz
fs
insb
add
je
dec
movsl
pop
sub
test
dec
test
test
sarl
cmpsl
xchg
mov
dec
push
cwtl
cmpb
push
daa
lock
es
and
mov
sbb
aas
aaa
xchg
push
xchg
je
inc
push
es
fs
mov
pushf
ja
xchg
and
mov
test
outsl
xchg
add
enter
sahf
test
add
lret
loopne
por
sahf
mov
or
or
and
sub
cmp
inc
adc
pop
adc
and
outsl
adc
cmp
enter
sbb
cmp
cmp
pop
push
adc
adc
adc
cmp
cmp
adc
push
or
push
sub
add
add
add
xchg
push
push
aas
mov
out
dec
aaa
add
add
xchg
pushf
sub
out
sbb
push
cmp
enter
add
add
add
inc
xchg
movsb
dec
daa
popf
mov
sarb
pop
sub
insl
mov
push
push
sub
daa
insl
lahf
leave
dec
jae
jb
jg
ss
dec
xlat
xchg
mov
js
in
test
cmp
in
lock
push
pop
fbld
in
xchg
and
add
add
nop
xor
dec
add
cmp
in
jl
addr16
mov
mov
ss
xchg
cmpsl
scas
into
mov
xchg
xchg
hlt
cld
hlt
fstl
das
cmpsb
cmpsb
das
ja
pushf
pop
and
sub
push
pop
test
add
in
sbb
pop
in
pop
shll
mov
in
shr
fcomps
loopne
sub
leave
das
cmpsl
aad
or
daa
and
adc
sbb
and
mov
xchg
mov
pop
xor
cmp
pop
inc
fsts
dec
or
or
in
fs
arpl
aas
dec
sub
sub
jb
xor
sahf
cmpsb
inc
adcb
out
sub
ja
pushf
fmull
roll
inc
jbe
xchg
add
add
cmp
in
insb
outsl
sub
sbb
sub
cmp
inc
mov
gs
push
add
xchg
daa
and
add
leave
enter
or
xchg
or
outsb
mull
sub
fildll
cmpsb
sub
out
sub
push
push
test
push
test
test
flds
xor
in
loope
icebp
add
cmp
andb
daa
test
test
inc
mov
dec
aad
fstpt
test
lea
jb
xchg
mov
or
hlt
inc
and
fadd
stos
femms
mov
dec
cs
xchg
out
push
xchg
je
mov
xor
ljmp
out
out
add
push
add
inc
stos
enter
add
cld
add
jmp
xchg
test
cmp
dec
mov
aaa
xor
pop
add
jg
xlat
repz
daa
daa
bts
adc
out
inc
and
xor
stos
inc
push
jnp
test
fs
xchg
xchg
out
imul
add
jb
enter
add
in
jbe
aas
sahf
pop
sahf
or
nop
and
push
scas
or
add
adc
cmp
icebp
daa
xor
pop
jb
inc
lods
adc
sbb
xor
xchg
aas
pop
add
xchg
mov
movsb
scas
jb
jnp
mov
mov
push
mov
sbb
cmp
add
xlat
fistps
cmp
cmp
icebp
sti
lods
add
dec
dec
inc
or
and
dec
bound
lods
pop
xor
dec
sbb
jbe
test
pop
lahf
xor
xchg
in
push
lods
mov
pop
and
jb
rcrb
fcmovnu
add
or
jb
in
cld
scas
pop
or
or
jmp
xchg
sysenter
adc
dec
jb
scas
pop
xor
fwait
es
scas
pop
scas
xchg
add
enter
pop
xor
jg
pop
das
add
cs
add
dec
popf
int3
into
das
roll
int3
fnstenv
jo
pop
outsl
out
lcall
xor
daa
sub
es
ds
dec
nop
out
and
push
and
jo
scas
cld
scas
push
scas
push
push
push
pushf
mov
xchg
scas
cmp
push
inc
dec
mov
cmpsl
push
aas
sub
pop
pop
test
mov
ja
rorl
in
ja
cmp
addr16
leave
inc
repnz
add
or
inc
jb
dec
cmp
daa
cmp
in
popl
seta
mov
aaa
jo
imulb
lahf
lret
in
leave
rcr
add
loop
ljmp
push
cli
add
pushf
pushf
add
or
add
or
adc
xchg
adc
adc
pop
adc
enter
mov
mov
mov
push
pop
cmp
outsb
dec
dec
fidivl
xchg
cltd
add
add
add
add
in
enter
or
leave
or
mov
or
hlt
pop
cld
lss
jbe
sbb
or
adc
pcmpgtb
ljmp
push
je
outsw
daa
iret
jg
test
and
das
sub
shrb
dec
sub
push
xor
adc
inc
mov
adc
adc
in
and
push
mov
xchg
xor
in
pushf
movsb
lods
sbb
sbb
int3
push
int3
sahf
mov
in
pushf
mov
paddb
sub
add
or
adc
jb
in
enter
sub
das
sbb
jbe
cmp
cmovl
lods
cmp
outsl
testl
pop
pop
or
mov
es
jecxz
xor
cmp
add
inc
daa
movsb
xor
add
lahf
push
xchg
sub
cltd
lahf
mov
cmp
in
and
mov
mov
cmp
daa
daa
out
arpl
andb
daa
xor
inc
xchg
pushl
xor
divl
enter
jl
pop
xchg
outsl
mov
leave
nop
lcall
or
mov
adc
adc
adc
inc
and
sbb
jb
inc
sbb
pop
sbb
xchg
and
insb
sbb
sbb
in
mov
xchg
and
inc
mov
and
jb
enter
daa
ljmp
cmp
sub
daa
enter
es
jb
inc
and
push
and
and
fs
insb
push
je
cmp
enter
sbb
mov
sbb
in
xchg
adc
adc
adc
or
loopne
call
push
dec
in
cmp
and
or
movzwl
in
xchg
add
push
add
sbb
popa
pop
outsb
or
and
insb
push
mov
xchg
or
enter
push
rorb
adc
sbb
aam
ficoms
call
enter
adc
pop
mov
jb
sbb
sbb
ds
xchg
and
sbb
sbb
jb
insb
pop
jns
orl
xchg
dec
popf
outsl
test
mov
mov
iret
ret
out
into
sbb
pop
loope
lret
xchg
and
adc
sbb
jb
mov
adc
sbb
xchg
and
and
sub
xor
cmp
enter
or
or
inc
mov
pop
insl
push
js
or
leave
xchg
cmp
mov
das
cmpsl
add
push
push
ds
cmp
push
xchg
daa
and
push
in
add
leave
enter
add
adc
pop
push
sbb
sbb
jb
sysexit
adc
mov
adc
mov
cmp
sbb
xchg
push
sbb
sub
les
inc
enter
mov
cmp
jb
ljmp
add
sbb
and
sub
das
in
in
cmp
push
sbb
repnz
arpl
outsb
adc
cmp
xchg
setg
in
jbe
das
scas
mov
repnz
in
iret
xlat
fistps
ljmp
or
and
mov
insl
push
add
inc
daa
and
pop
dec
push
add
xchg
xchg
pop
jo
jo
leave
mov
or
cwtl
push
pop
xchg
leave
mov
pop
mov
rorb
shrb
push
pop
jo
test
xchg
and
mov
add
add
jb
enter
push
inc
pop
dec
sahf
mov
pop
or
jo
or
inc
sahf
int3
pop
mov
push
mov
xchg
fcmovne
enter
adc
xchg
adc
loopne
psadbw
add
or
pop
pop
and
jns
repnz
pop
sahf
mov
pop
and
and
and
test
mov
xchg
daa
mov
rclb
call
leave
lret
das
mov
insb
lret
test
inc
push
dec
add
add
imul
in
jae
jge
jg
in
loopne
xchg
outsb
mov
xor
lods
mov
movswl
jb
jb
iret
xlat
push
cmp
jns
adc
inc
pop
push
in
fadds
pop
dec
push
pop
adc
cmp
sbb
sbb
sbb
aaa
push
aas
dec
and
xchg
out
dec
shlb
xchg
xchg
xchg
xchg
test
xchg
mov
mov
cs
iret
inc
and
scas
or
testl
cmp
add
sbb
inc
mov
xor
pop
dec
or
stc
xchg
cltd
iret
rcrl
or
popf
mov
or
jg
fucomi
jbe
lahf
mov
adc
in
fs
fsts
nopl
repnz
or
sbb
sbb
sbb
inc
mov
push
pop
pop
pop
and
outsb
daa
and
pop
inc
jg
dec
fmull
into
lahf
ret
pop
iret
ret
arpl
and
sub
sub
cmp
enter
sub
and
sbb
xor
xchg
xchg
mov
iret
movsl
xor
mov
in
enter
ret
outsb
cmp
into
mov
test
ret
cmp
cmp
daa
and
aas
mov
in
xchg
daa
fiadds
inc
hlt
inc
divb
repnz
inc
push
sbb
es
ltr
cmp
adc
add
mov
orb
das
dec
and
sbb
test
add
outsb
daa
sub
dec
aas
les
outsl
xchg
and
push
fwait
add
add
leave
enter
aam
psraw
sbb
stc
lds
mov
cmp
inc
in
adc
push
push
adc
pop
dec
outsb
mov
xchg
lahf
rsm
pop
mov
sbb
iret
fmull
out
pop
repnz
dec
into
dec
std
shufps
push
and
es
es
pusha
sbb
repnz
push
pop
imul
mov
mov
imul
add
add
fisttpl
out
jnp
in
or
movl
mov
dec
push
sbb
dec
xor
jbe
cmovnp
pop
push
adc
mov
popa
adc
sbbb
mov
and
sbb
mov
pop
enter
xchg
dec
fisubl
pmulhw
lock
and
push
outsl
adc
nopl
das
daa
sub
cmp
enter
daa
imul
xor
enter
cmpsb
pop
enter
add
add
add
add
jecxz
jmp
aas
jecxz
lret
xor
insl
push
or
outsl
mov
leave
dec
cwtl
leave
test
cmp
xchg
and
pop
inc
dec
add
add
fs
outsl
jp
cmpsl
or
jb
in
or
inc
mov
rcr
psubsw
hlt
adc
repnz
and
dec
lret
ficoms
scas
add
sub
inc
cmp
repnz
cmp
enter
sbb
sbb
mov
pop
orb
inc
mov
and
rorl
std
sahf
mov
mov
push
adc
sbb
dec
adc
mov
sub
and
stc
cs
lret
cmp
dec
inc
mov
add
jp
and
pop
test
xchg
or
enter
or
or
or
iret
lret
inc
mov
sti
adc
or
adc
push
dec
dec
sub
cmovl
and
push
sbb
sbb
push
cmp
outsb
jne
sti
rclb
outsb
xchg
enter
in
jbe
int3
jmp
stc
pop
jnp
jb
int
push
or
adc
aas
sbb
jnp
sbb
or
divb
cmp
inc
cmovg
pop
push
jbe
jb
pop
adc
addr16
fs
jg
lea
xchg
sbb
sbb
xchg
and
xadd
enter
push
leave
dec
stos
fdivr
and
sub
xor
insb
pop
daa
out
lods
push
and
dec
cmp
inc
push
push
pop
pop
data16
jno
jl
or
jb
enter
push
popf
push
adc
mov
mov
ljmp
sbb
sbb
sbb
add
or
and
sbb
pop
cmp
xchg
mov
inc
and
add
sbb
jb
gs
and
xor
xchg
setl
stc
push
push
and
das
les
aaa
lock
push
movsb
notl
sub
jo
daa
mov
push
ljmp
out
add
cmovs
cmp
add
das
dec
mov
mov
daa
shlb
jnp
jnp
mov
xchg
add
add
pushf
cmpsl
mov
bnd
ds
push
enter
or
movsb
jge
aas
push
fsubrp
das
in
leave
fxtract
psrlw
and
pop
sub
sbb
repnz
inc
adc
and
mov
rcll
sbb
out
repnz
xor
std
pop
aas
rcl
inc
pop
pop
arpl
xchg
xchg
daa
and
and
xor
enter
daa
movsl
sub
mov
mov
das
sub
sub
shrl
pop
fdivl
out
cmp
out
out
das
repnz
jo
int
rorl
movlps
push
cmovo
into
fisubrs
pop
cmp
arpl
jns
pop
and
pop
test
cmpsl
xchg
xchg
inc
push
dec
shll
xchg
daa
in
call
mov
lahf
lods
das
mov
cmpps
inc
fisubrs
fimull
in
lock
or
xchg
daa
das
aam
adc
push
in
leave
enter
pop
xor
aas
dec
adc
mov
fcmovne
push
bound
insl
vmread
pop
subl
xchg
sbb
mov
and
mov
xchg
xchg
and
ljmp
xchg
xchg
mov
pop
add
fs
xchg
sub
jnp
xchg
jnp
imul
sub
cmc
add
ud2
das
jns
jnp
push
das
and
pop
sub
xor
jnp
inc
xchg
xor
pushf
push
into
in
mov
mov
mov
iret
push
pop
test
dec
inc
push
js
cmp
fcmovbe
xchg
inc
add
add
or
add
mul
stos
mov
or
fadd
das
setg
jb
movsb
loopne
mov
xlat
pop
call
sub
mov
or
jnp
daa
or
pop
data16
in
dec
jmp
cmpsl
pop
pop
or
sbb
cmpsl
iret
add
js
pop
jge
xor
pop
pop
mov
cwtl
daa
cwtl
xor
xor
daa
adc
inc
out
xchg
jb
push
xorb
iret
adc
pop
iret
cs
inc
push
dec
pop
cmp
lods
xor
shrb
pop
jae
or
push
push
or
aaa
es
ss
add
cs
iret
shrl
sbb
or
out
jb
or
or
or
int
scas
or
daa
jb
adc
push
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jb
loopne
aas
into
aas
xlat
sbb
and
data16
mov
sub
mov
mov
add
ss
and
addb
mov
xor
and
test
inc
pop
and
inc
push
adc
cld
add
mov
pop
lock
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
or
inc
xor
pop
ficompl
pop
fisubrl
xor
xchg
in
cmpsl
rcr
fsubp
stc
jb
jle
aas
dec
outsl
xlat
hlt
jl
js
jns
out
jo
push
sahf
pop
push
dec
inc
xor
jns
out
and
adc
fidivs
out
or
repz
push
clc
jns
out
hlt
lock
out
in
int3
pop
repz
mov
cmp
mov
je
sub
or
jne
dec
push
inc
cmp
sub
negl
repnz
push
in
fdivrs
out
les
sahf
out
cmpb
push
cmp
push
dec
inc
xor
add
clc
push
in
cmc
cmp
repz
mov
push
xchg
push
push
icebp
jl
push
adc
jp
dec
add
pusha
es
or
mov
pop
mov
bound
vpshld
insl
mov
push
add
cmp
mov
mov
add
inc
ja
idivl
sbb
and
push
or
or
xchg
loope
mov
imul
add
jae
xorb
icebp
call
push
mov
push
inc
jg
popa
add
push
push
pop
out
xchg
cmpsl
rolb
add
inc
push
or
jg
lcall
inc
xor
cmp
add
mov
mov
pop
int3
insb
sub
outsl
sbb
mov
iret
xchg
into
push
sub
pop
cs
or
loopne
fidivs
xchg
jg
pop
jl
pop
jnp
adcl
sbb
mov
out
xchg
mov
sbb
sbb
enter
pop
add
and
pop
imul
cmp
cmp
adc
xor
mov
sbb
mov
mov
int3
or
adc
pop
and
mov
adc
in
xchg
sbb
push
add
pop
clc
and
sbb
hlt
and
and
and
add
fsubrs
pop
mov
jo
shr
pop
imul
daa
xor
mov
adcb
inc
cmp
xor
es
out
sbb
push
pop
js
jns
xchg
mov
jo
imul
push
clc
insl
add
into
repz
xchg
jns
mov
jae
das
push
dec
xor
lods
loopne
dec
pop
jns
push
pop
mov
pop
repnz
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
mov
dec
std
and
repnz
int3
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
std
incl
std
xlat
cmp
mov
sbb
xor
jg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
adc
ficomps
frstor
mov
cmp
adc
pop
xlat
fiadds
inc
adc
pop
repnz
je
inc
inc
push
dec
addr16
jnp
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
mov
dec
or
mov
call
push
inc
dec
inc
jo
inc
mov
data16
push
outsb
jbe
imul
stos
push
sub
outsl
mov
aas
dec
insb
imul
dec
push
adc
int3
pop
push
cmp
lret
xor
jno
dec
push
inc
dec
push
or
sub
addr16
push
inc
inc
inc
inc
rorl
loopne
add
gs
gs
pop
inc
sbb
arpl
mov
adc
rolb
pop
sti
jae
outsl
push
dec
pop
mov
xchg
xchg
xchg
push
sub
out
xorb
mov
addb
shrb
das
sbb
das
sbb
jbe
pop
aas
dec
ret
pusha
push
or
inc
dec
in
inc
and
daa
daa
dec
jae
imul
jne
push
and
inc
inc
inc
jg
inc
jns
push
in
sbb
dec
lahf
push
push
ficompl
push
cmp
popl
in
adc
jb
jns
add
inc
int3
ljmp
mov
insl
inc
orl
out
dec
push
dec
dec
push
imul
add
jbe
imul
push
xchg
push
mov
sub
adc
inc
cmpsb
dec
les
iret
pop
rcrb
xchg
decb
outsb
arpl
outsl
addl
and
push
imul
pop
mov
addb
push
out
push
cmp
cli
loopne
imul
sub
mov
nop
ss
push
sub
testl
mov
addr16
or
jbe
mov
mov
das
add
test
push
clc
push
outsb
or
addr16
movsb
adc
gs
inc
stos
and
xacquire
outsl
push
inc
arpl
push
pop
les
cmpsl
adc
movsb
pusha
out
mov
mov
sbb
xchg
lds
orb
push
mov
and
hlt
outsb
data16
popa
mov
add
subb
insb
and
pop
ja
andb
insb
add
xchg
inc
arpl
pop
pop
inc
sbb
and
push
stc
pop
sbb
add
add
xchg
movsl
cmpsb
sar
cmpsl
push
sbb
scas
xlat
and
aad
dec
lahf
pop
insl
add
dec
lahf
inc
or
pusha
mov
add
mov
add
pop
stos
pop
jb
or
aas
ljmp
lahf
inc
or
fs
arpl
lds
cmp
out
inc
xchg
rcl
adcl
mov
js
lret
fcoms
movsb
inc
lea
xchg
fimull
jle
pusha
ja
insl
imul
jne
shrb
outsl
push
jo
lock
push
rcll
aad
addb
iret
inc
imul
stos
loopne
ret
movsb
adc
mov
xlat
out
add
push
out
jg
xchg
push
repz
xor
xchg
clc
fdivrl
out
enter
fs
fwait
out
adc
cld
mov
sahf
cmpsl
push
pop
mov
add
push
push
sbb
je
lahf
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
incl
push
cwtl
insb
adc
test
fs
std
in
leave
gs
decl
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
jmp
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
ljmp
pop
filds
or
shrl
cmp
ficoms
push
xlat
enter
lock
mov
and
mov
cltd
xchg
mov
mov
or
or
call
xchg
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
stc
mov
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
mov
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
dec
add
mov
das
es
lds
or
sub
mov
cmpsl
call
inc
xor
shlb
sbb
ret
es
pushf
mov
insl
add
jmp
push
jmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
decl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
std
mov
sbb
xchg
sub
aaa
mov
or
sbb
pop
xor
add
rcrb
dec
pop
mov
mov
ds
outsl
inc
jne
sti
dec
popl
ja
imul
lods
adc
push
imul
inc
jbe
push
sub
sar
outsb
arpl
arpl
ja
or
inc
insl
jns
sub
pop
inc
jne
outsl
insl
addr16
inc
rorl
cmpsb
xlat
outsl
sub
ret
inc
cmp
push
xor
ja
mov
js
inc
insl
bound
inc
out
adc
push
jo
add
js
jbe
lods
popa
push
dec
orl
jno
in
sub
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
xor
pop
xor
popa
or
mov
inc
jbe
pop
sbb
mov
dec
inc
ret
popa
jnp
inc
add
ror
xor
add
sbb
sub
fbld
mov
outsb
imul
push
jbe
mov
add
inc
ljmp
mov
xor
inc
cmp
insb
inc
push
sub
adc
leave
and
sbb
aaa
and
xchg
sbb
out
xchg
insb
popa
jns
push
pusha
lods
inc
sbb
xchg
or
push
dec
cmp
je
aaa
xor
xchg
inc
add
aas
add
fistl
lods
cltd
and
jae
dec
sbb
fists
mov
pop
inc
aas
dec
push
inc
enter
inc
movl
xor
out
popl
mov
es
inc
inc
inc
add
popa
jbe
push
ds
cmp
inc
inc
stos
mov
dec
dec
xchg
loopne
je
xchg
lods
fistpll
enter
outsb
jne
mov
xchg
inc
inc
sti
mov
sub
addr16
ss
add
add
or
add
push
pop
aad
ss
push
repz
pop
jo
or
lods
mov
cmp
aas
cli
adc
dec
shlb
sbb
or
xor
outsl
adc
mov
push
lcall
jo
lcall
xor
push
mov
aad
xlat
mov
inc
add
pop
xchg
cmp
adc
daa
inc
jb
cmp
adc
sub
push
loope
popa
jo
lahf
xor
nop
aas
push
outsl
outsl
test
mov
in
push
push
jno
loop
aam
pop
in
shlb
lds
xchg
pusha
jb
in
nop
test
pop
cmp
push
or
arpl
lcall
mov
jo
shll
pop
mov
clc
push
outsl
insb
jns
das
fstpt
push
popa
jb
inc
sub
mov
stos
inc
mov
nop
adc
insb
add
inc
pop
bswap
ret
cld
inc
push
bound
push
lods
cmpsb
inc
arpl
addr16
fidivrl
lods
or
cmp
xor
add
jnp
jne
sub
jecxz
jg
imull
xor
sub
push
mov
out
add
add
imul
jecxz
push
testb
and
aam
adc
mov
pop
movsb
add
aas
push
sub
movsb
adc
cmp
aaa
add
adc
orb
aaa
mov
mov
jb
add
dec
pop
add
pop
inc
push
push
movsb
add
or
or
inc
dec
and
add
sbb
ss
add
adc
popa
cmp
add
pop
nop
es
push
sub
scas
sbb
push
pop
mov
int
mov
inc
shlb
and
popa
insl
or
xlat
add
outsb
outsl
je
pop
add
jb
jl
inc
dec
push
and
fistl
dec
xchg
cs
cmpsb
dec
shrd
popa
dec
pop
shll
pop
or
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
ljmp
pop
ds
aas
lret
cli
push
cld
das
sbb
notl
arpl
addr16
inc
add
repnz
es
add
dec
into
sahf
testb
and
add
sbb
insb
daa
aam
dec
jge
repnz
add
pop
add
mov
leave
sub
verr
decb
inc
sbb
add
popf
or
push
test
mov
jo
mov
mov
pop
subb
or
popa
cs
loop
fildl
add
pop
add
addl
and
mov
add
les
lods
add
rcrl
jb,pn
imulb
and
and
dec
lret
cmp
mov
xor
dec
rcr
fs
rcrb
sub
xor
out
add
repz
or
jb
test
push
dec
adcb
and
sbb
inc
pop
xchg
add
test
xor
ret
mov
push
fs
push
inc
jmp
add
jmp
daa
mov
lea
dec
dec
lret
ljmp
icebp
sub
sbb
jp
xlat
test
dec
out
mov
xor
or
jbe
sbb
popf
lcall
mov
xchg
insb
std
jnp
jno
int3
fucomi
gs
add
ja
jne
jmp
mov
rorb
bound
pop
call
sbbl
mov
mov
shr
xchg
cmpsl
mov
inc
mov
dec
mov
mov
outsb
adc
xchg
mov
out
push
hlt
jl
les
sbbb
test
incb
push
push
pop
ds
inc
arpl
dec
mov
je
imul
or
sti
imul
and
push
sbb
push
movzbl
or
rcll
sbb
call
aas
les
dec
dec
xchg
cmpsb
lds
cmp
jbe
mov
pop
mov
xchg
call
push
cmc
pop
icebp
push
cmp
pushf
inc
nop
dec
dec
dec
nopl
in
push
loope
ss
mov
adc
push
ret
inc
mov
loopne
and
xorb
std
inc
call
addb
loopne
call
shll
add
outsb
movsl
pop
xchg
xor
mov
clc
pushf
and
aad
pushf
jbe
add
xor
xchg
jne
filds
inc
imul
add
adc
stos
imul
pop
or
push
arpl
subb
dec
xchg
ret
in
inc
dec
mov
xor
and
jne
rorb
insb
push
loope
roll
adc
fsubl
sub
loopne
imul
clc
jl
hlt
mov
add
inc
les
mov
inc
imul
or
mov
adc
push
push
jnp
sbb
dec
in
cwtl
stc
dec
push
leave
push
int3
sbb
mov
sbb
or
xchg
ficomps
mov
cmpsl
ret
adc
xchg
pop
push
add
jp
dec
inc
or
inc
pop
push
ret
ret
jno
rorb
xor
pop
cltd
test
sahf
lea
testb
push
popf
fs
or
push
jge
lret
sbbb
add
sbb
aam
decb
test
movb
dec
adc
or
ficomps
add
push
mov
aam
push
and
mov
or
inc
xchg
out
add
pop
sbb
jmp
add
add
and
pop
jl
xor
testb
je
rcr
sub
shl
cmp
fimull
add
and
or
subb
and
adc
add
cmpsl
sub
cmp
rorb
xlat
hlt
or
outsb
push
mov
mov
mulb
mov
push
and
dec
add
cmp
push
or
xor
adc
rcll
sbb
loopne
push
dec
and
pop
test
inc
ljmp
imul
inc
pop
je
call
sbb
inc
push
push
insb
fdiv
push
sbb
enter
subb
lahf
push
mov
xchg
xchg
inc
mov
jnp
inc
mov
and
sbb
or
cmp
jno
sub
cmp
sbb
inc
sub
in
add
or
stc
jp
cmp
inc
shll
cmp
ljmp
or
inc
subl
fs
fnstcw
add
push
gs
inc
adc
xchg
sbb
test
ja
adc
js
mov
rolb
fdivr
mov
call
jnp
sbb
data16
sbbl
sub
dec
jl
subl
std
imul
call
fldl
add
mov
inc
insl
testb
in
add
mov
roll
and
sti
add
scas
fs
push
or
rcrl
pop
lret
adc
leave
dec
pop
sbb
ja
call
orl
nop
dec
jo
mov
push
jge
loopne
call
call
aam
or
call
insb
in
push
pop
jne
xchg
lea
xor
mov
lret
rclb
imul
ss
hlt
fmul
movsb
icebp
jmp
inc
add
push
out
mov
lock
add
pop
pop
sub
lahf
icebp
dec
adc
call
shrb
and
or
iret
mov
mov
xchg
xchg
jnp
or
daa
ja
jnp
ja
sbb
push
inc
into
pop
in
or
push
inc
push
push
mov
and
loopne
add
loopne
dec
sub
in
push
movsb
mov
sbb
sbb
mov
iret
sub
mov
xchg
fnstsw
in
shl
or
popf
jle
hlt
ficoml
jmp
inc
push
xor
outsl
lcall
mov
inc
lret
lea
ffree
std
es
ret
sub
or
in
mov
mov
push
jecxz
xor
jnp
inc
movzbl
xchg
pushf
and
xor
das
or
inc
inc
xor
aam
xchg
insb
lods
in
sbbb
popf
mov
sub
jnp
jno
lds
mov
lahf
sbb
stos
push
mov
movsl
gs
sbb
insb
mov
fisubl
ljmp
bound
push
adcl
insl
pop
aas
mov
hlt
push
cmp
or
push
jns
mov
or
push
adc
pop
loop
jo
nop
or
push
adc
push
add
push
pop
popa
mov
lahf
ss
lret
ret
xor
push
add
lcall
add
shll
cmp
ds
sbb
push
cmp
aaa
sbb
sbb
cmpsb
mov
fdivr
lea
or
shr
cltd
xchg
xor
cltd
dec
xchg
mov
inc
push
push
push
dec
fdiv
cltd
cmp
mov
sbb
pop
pusha
push
sub
dec
push
int3
call
int3
insl
inc
pop
jp
mov
cs
sub
pop
ss
gs
pop
addr16
orb
mov
adcl
stc
and
pop
inc
push
add
test
dec
int
push
jb
call
jge
mov
ds
xlat
rolb
vunpcklps
addr16
xchg
xchg
test
pusha
jo
jne
in
push
fnsave
sbb
or
push
faddl
cmp
add
or
sbb
cs
or
adcb
mov
xor
inc
shlb
or
imul
fidivrl
push
faddl
push
dec
shll
out
repnz
hlt
inc
fldenv
into
xchg
xlat
call
cmpsl
cmp
xor
mov
loop
ret
add
inc
or
je
das
jb
loopne
add
stos
pop
mov
repnz
loop
insb
int3
push
xchg
aas
xor
shll
inc
call
mov
sub
mov
mov
push
fisubrl
mov
mov
lock
adc
pop
mov
pop
xchg
dec
sbb
lea
lds
sbb
movsb
in
add
rep
icebp
and
movsb
push
and
insb
jmp
add
sahf
shll
jle
rcll
mov
mov
cmp
jne
mov
adc
add
sub
cmp
mov
loop
pop
pop
cmpsl
outsl
mov
pop
cmp
pop
femms
inc
or
cmpl
shlb
sub
js
and
addb
xor
sbb
push
push
das
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
inc
dec
pusha
fsubs
or
addr16
cmpb
adc
or
sub
sub
ss
pop
fistpl
pop
adc
dec
ljmp
push
nopl
movsb
bnd
pushf
enter
jb
push
cmc
pop
ficoml
or
fisubrs
and
fidivrl
cmpsb
into
rcl
fiaddl
mov
dec
imul
lret
push
push
das
inc
push
loopne
pop
cmpsl
pop
xor
and
enter
aas
js
mov
jae
lret
mov
std
jnp
mul
sub
adc
or
gs
push
insb
jge
jnp
data16
scas
dec
adc
jge
xchg
pop
push
push
jo
inc
pop
push
xchg
sbb
adc
adc
dec
jae
and
cmp
adc
fs
jmp
adc
outsl
movl
inc
loopne
or
imul
dec
in
in
push
jmp
xchg
out
push
and
xchg
lret
add
inc
sbb
push
xchg
inc
ficomps
xor
xlat
std
and
in
xor
fidivrs
and
xchg
in
mov
add
in
in
dec
in
enter
pop
sub
inc
or
imul
jbe
insb
cmp
push
cmp
leave
sub
add
jmp
mov
dec
or
adc
lods
inc
rcr
in
or
mul
jmp
mov
pop
mov
cmp
imul
sub
xchg
mov
mov
popl
mov
repnz
shl
aam
fsub
push
mov
sarl
jge
add
lcall
mov
mov
sbb
xchg
pop
lds
imul
es
cmpsl
data16
fidivrl
adc
push
fists
adc
dec
or
dec
mov
pop
or
jmp
sbb
jne
lods
lods
push
mov
mov
fidivs
pushf
arpl
xor
or
mov
add
mov
inc
xlat
not
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
xchg
push
push
mov
add
inc
das
insb
call
js
adc
push
xor
or
in
push
adc
fldt
lcall
aad
mov
lods
dec
xlat
push
push
mov
jecxz
inc
call
sub
into
jg
sbb
jecxz
lea
jb
xchg
and
add
in
mov
imul
in
rorb
int3
sub
cmp
dec
or
add
add
push
jne
jl
push
mov
loop
test
scas
sbb
add
lcall
test
in
mov
pop
cmp
add
or
adc
scas
jns
popa
sub
or
push
icebp
or
add
shlb
cld
sti
jp
out
enter
sbb
je
ds
cld
mov
push
xchg
or
je
clc
es
into
sbb
lds
inc
pop
fbstp
ja
inc
addr16
in
inc
xchg
adc
inc
dec
pop
and
aam
or
je
or
or
je
mov
mov
cmp
adc
cmpsb
ret
or
loopne
outsb
inc
and
fimull
cld
inc
or
adc
fimull
sbb
xor
bound
pop
stos
or
fcomps
aam
loopne
mov
adc
shrb
push
jle
sbb
pop
stos
jge
push
cld
lcall
out
jge
and
cltd
insb
cld
cmp
shll
add
or
jmp
lods
push
mov
push
mov
xchg
inc
cmpsb
lock
mov
rorb
mov
xor
lods
jmp
push
push
jbe
fbstp
imul
enter
sbb
jnp
nop
push
add
out
popa
pop
inc
adc
mov
pop
sub
sti
or
push
push
loopne
ds
popa
ja
push
mov
mov
mov
xchg
push
inc
add
rolb
hlt
repnz
rcll
xor
xor
jg
rcll
shr
out
outsb
pushw
or
jnp
out
js
out
ss
stos
std
std
repnz
xor
sbb
cld
cmp
xor
inc
pop
cli
dec
xchg
rorb
inc
rorl
xor
mov
mov
push
add
aas
jmp
mov
dec
ja
inc
sub
inc
leave
dec
gs
adc
pop
jns
and
adc
pop
push
mov
add
aas
out
xor
adc
std
adc
dec
jg
push
adc
and
je
das
add
aam
mov
push
cmp
bound
rcrb
push
lret
add
cmp
mov
sahf
outsb
mov
jno
pop
inc
outsb
rcr
jl
mov
movsl
out
add
sarb
adc
mov
test
mov
or
pop
add
int
sub
out
mov
add
add
orb
ffree
dec
cmp
push
xor
ss
lods
mov
leave
nop
and
jae
sbb
push
or
sbb
enter
push
inc
push
push
add
daa
push
out
jle
jl
adc
xchg
adc
cmp
sub
xor
push
ret
xchg
les
push
jnp
mov
xchg
mov
push
mov
sbb
mov
push
call
mov
jns
and
jbe
shll
decb
sbb
sbb
xchg
mov
in
mov
dec
push
or
enter
or
and
or
in
std
jmp
and
xor
outsb
mov
and
push
in
mov
or
or
jle
or
jmp
sbb
xor
or
sarb
mov
cmp
jl
rclb
cmp
add
ret
mov
shll
icebp
push
xor
rolb
mov
push
add
fcomps
in
test
dec
and
push
pop
adc
mov
enter
sbb
cmp
add
add
mov
repnz
adc
jne
mov
jmp
or
xchg
or
push
sbb
push
fiaddl
cmp
lahf
dec
dec
pusha
push
js
xor
jne
loope
jnp
sub
push
aam
sbb
push
adcl
mov
adc
addb
lods
adc
into
jne
lea
dec
fst
dec
xchg
ljmp
sbb
shll
and
mov
cmp
ss
mov
test
jp
cmp
sbb
mov
adc
mov
mov
and
lea
stos
inc
imul
sti
xchg
stos
sti
jnp
test
aaa
push
fucomip
cmp
je
cmp
pop
xor
push
jbe
movsb
xchg
jne
push
inc
sub
mov
adc
nop
clc
push
and
std
jo
in
push
pop
jbe
xlat
push
or
sbb
add
or
in
out
add
imul
mov
pushf
cli
adc
add
lods
and
xor
pushf
loop
loope
ret
cmp
shr
inc
add
lds
scas
push
loop
fwait
shll
imul
mov
mov
loope
mov
mov
clc
or
mov
paddb
mov
pop
fwait
jmp
push
inc
das
loope
mov
call
jo
push
sbb
and
mov
lret
sub
call
or
sarb
adc
push
adc
add
and
lods
stos
loopne
sti
push
dec
nop
imul
ljmp
addb
cmp
xchg
push
test
imul
sub
loop
fbstp
pop
push
lea
mov
jno
mov
push
loop
enter
jne
jge
aad
sub
push
jge
ficoms
aam
dec
mov
push
in
mov
icebp
lds
popa
fsubrl
call
stos
loopne
xor
je
stos
cltd
das
insl
mov
push
push
inc
add
add
xchg
pop
scas
mov
je
jae
js
push
push
xchg
mov
int3
insl
orb
insb
mov
or
push
jns
add
dec
cmp
imul
in
or
movsb
adc
shll
popf
imul
mulb
mov
jmp
xchg
sbb
add
outsl
sub
xchg
arpl
mov
inc
jmp
add
adc
movsb
pusha
addps
and
dec
push
mov
add
hlt
shrb
adc
mov
pop
add
mov
ss
clc
push
add
and
cmp
mov
mov
je
std
mov
jmp
adc
and
and
add
sub
pop
sub
cmp
orb
aaa
lock
add
sub
xorl
push
mov
mov
lock
push
fdivrl
lea
mov
pop
insb
and
outsb
jne
addr16
imul
push
idivl
dec
cld
jne
into
cmp
addr16
ss
pop
mov
add
push
adc
xlat
pop
and
or
je
int3
jecxz
adc
or
jns
inc
sub
jmp
test
nop
xor
add
pop
loope
lods
icebp
pop
sarl
icebp
call
js
shlb
add
inc
call
xchg
cmp
inc
jmp
dec
setns
outsb
test
imul
jmp
repnz
dec
lea
je
sbb
and
inc
lcall
dec
jl
js
negb
js
lret
push
arpl
fst
dec
xor
fxtract
jmp
cld
dec
add
jne
push
pop
cmpsl
or
mov
mov
sbb
push
xchg
add
in
mov
or
mov
ret
and
out
add
lret
and
xchg
jne
add
jnp
pop
add
call
in
movsb
jmp
xchg
add
in
js
sbb
stos
into
popf
sub
insb
adc
mov
dec
push
call
call
addl
rcrb
mov
sub
leave
mov
pop
sub
call
lret
mov
xchg
fcompl
add
dec
add
out
push
xor
mov
add
mov
clc
or
mov
popf
clc
jbe
cwtl
or
popf
pushf
or
cmp
test
addl
and
inc
imul
fs
inc
mov
pop
xor
hlt
mov
inc
mov
test
add
add
lock
push
dec
lea
add
pop
mov
add
xor
or
mov
dec
mov
bound
decl
or
lds
sbb
inc
inc
dec
jne
movzbl
add
pop
xor
aam
nop
push
push
mov
mov
test
jbe
jge
inc
js
sarb
stos
incl
nop
or
test
sub
cwtl
shr
fiaddl
sbb
fdivr
or
je
mov
push
cli
sub
add
adc
cmp
sub
mov
adc
and
mov
jmp
test
mov
cs
ss
inc
arpl
js
xor
push
pop
cmpl
insl
loopne
nop
jb
mov
pop
test
xchg
add
jg
andb
and
test
add
or
dec
aam
je
mov
movb
dec
dec
in
and
add
push
lea
cmp
mov
movsl
and
push
in
aas
dec
sarb
dec
in
xor
sbb
aas
enter
arpl
push
or
aas
mov
pop
mov
mov
xchg
adc
pop
inc
test
mov
insl
or
add
fcmovb
mov
insl
js
adc
push
mov
xor
mov
xchg
and
mov
pop
or
fstpt
xchg
mov
insl
sbb
xchg
out
xor
pop
inc
push
pop
nop
jno
sub
shlb
inc
ljmp
adcb
inc
xchg
pop
subl
test
inc
mov
roll
xchg
or
and
test
lds
xor
sbb
test
mov
sar
addr16
popa
sub
xchg
dec
sbb
and
mov
ss
xchg
cli
or
or
jp
jle
addr16
ljmp
aas
pop
call
jg
jmp
call
mov
imull
and
cwtl
inc
push
jns
shl
lahf
cmp
call
and
pop
dec
adc
push
les
xchg
sbb
jmp
pop
leave
loope
fstp
arpl
cmp
or
or
add
aad
out
mov
call
clc
scas
and
movsl
int
jmp
std
push
xchg
pushl
cmp
jno
jmp
dec
pop
xchg
test
sub
sbb
xchg
rorb
adc
mov
ljmp
xor
je
push
sbb
cmp
xor
dec
dec
jmp
sub
inc
jmp
adc
fcompl
fmuls
xor
imul
lret
shlb
xchg
sbb
aad
inc
div
cmp
or
xor
test
gs
iret
call
push
mov
pusha
lock
test
ret
and
call
and
adc
dec
incb
idivb
push
push
es
cmpsb
add
loopne
outsb
cwtl
movsl
push
and
push
push
fs
into
dec
mov
cmp
cmpsl
and
int
push
dec
inc
imul
pop
sbb
test
call
pop
fistpll
dec
pushf
out
outsb
iret
dec
push
vfmadd132pd
push
or
in
ficomps
ret
sub
lock
adc
fwait
xchg
int3
xchg
mov
sbb
js
lock
and
jb
jbe
inc
push
imull
push
dec
xor
pusha
xchg
inc
sub
jp
sub
jmp
mov
call
xor
xchg
pop
aaa
nop
je
mov
ret
pop
aad
cmp
movsl
adc
add
adc
push
mov
je
nop
movl
and
xlat
push
push
movl
cmp
call
push
mov
cs
pop
aaa
and
pop
or
sbb
in
das
cmp
jo
push
ds
sub
xchg
dec
call
push
pop
or
cmp
lret
jmp
lret
call
add
sub
jo
sbb
rolb
das
sub
lods
inc
push
inc
stos
addl
inc
cs
pusha
nop
push
in
nop
je
or
je
mov
or
add
iret
jnp
adc
sub
cmp
repz
adc
add
add
sbb
out
clc
sbb
jmp
sbb
push
sbb
mov
inc
pushf
adc
addb
jns
ja
pop
nop
add
and
dec
nop
or
inc
pop
in
xor
inc
push
mov
or
inc
mov
repz
jnp
test
mov
ror
sbb
iret
shl
inc
test
add
or
push
or
je
adc
inc
add
dec
pusha
adc
mov
fs
out
mov
xchg
dec
fiadds
dec
jmp
dec
or
insb
and
test
cli
dec
pushf
push
pop
jmp
mov
xor
xor
sub
nop
test
setg
fidivl
test
inc
xor
push
pop
add
or
add
add
cmovno
movsb
mov
repnz
cmp
je
xchg
add
mov
add
mov
push
gs
xor
or
pop
inc
or
lea
or
cs
in
or
add
or
sahf
xchg
sub
or
psrld
mov
jb
out
or
or
or
push
or
iret
enter
movq
adc
pop
adc
or
adc
in
add
adc
jns
cmp
adc
adc
push
adc
adc
adc
leave
ror
adc
push
repnz
push
inc
pop
out
cmpl
jns
sbb
xchg
sbb
cmp
sbb
xchg
sub
sbb
mov
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
lds
xor
sbb
jns
push
inc
negb
xchg
incb
enter
add
add
sub
xchg
mov
xabort
cld
xor
lcall
pop
jmp
jp
sbb
cwtl
xchg
push
in
push
in
imul
rol
adc
and
xor
mov
out
mov
pusha
and
sub
call
je
call
negl
testl
ljmp
jmp
jmp
dec
push
mov
in
repnz
ss
xchg
aad
in
cmp
xchg
cmp
push
mov
out
pop
enter
out
or
je
push
imul
in
fmulp
dec
icebp
cmp
das
mov
jnp
or
add
hlt
hlt
jns
addr16
imul
std
sbb
cmp
scas
in
mov
sbb
movsb
test
clc
clc
addr16
sbb
or
mov
cli
add
scas
add
sti
insb
in
repnz
cld
cld
je
cld
push
dec
fdivrp
or
ss
xor
enter
sbb
xor
add
call
sub
jb
dec
aas
popa
jle
shr
inc
dec
push
std
jb
pop
or
shr
jmp
adc
jecxz
ja
adc
cmp
scas
jbe
mov
popa
pop
push
mov
movsb
sub
out
xchg
pop
push
and
call
or
sti
adc
imul
jmp
aad
aad
jmp
daa
in
cltd
leave
and
or
jmp
pusha
or
pop
insl
nop
out
out
xchg
mov
push
cltd
cmp
or
stos
or
sbb
and
push
cli
stc
daa
mov
imul
mov
das
test
scas
xchg
clc
cltd
jb
or
push
and
stc
sbb
xor
sti
sti
sti
and
or
cmp
pop
in
push
jmp
mov
mov
inc
push
adc
ljmp
push
jne
mov
loop
pop
insl
nop
loop
shll
cmp
pop
push
loope
clc
and
xchg
dec
add
or
out
out
fdiv
and
jne
loope
negl
or
movsb
test
push
xchg
pop
push
and
loope
testl
testl
xchg
das
test
adc
mul
scas
testb
and
testb
repnz
inc
repz
leave
and
testb
xchg
cmpsb
jb
mov
imulb
xchg
mov
int3
scas
mov
pop
or
and
jmp
xor
cmc
cli
cli
xchg
pop
push
sub
sbb
or
or
xlat
inc
ljmp
add
add
push
pop
clc
sti
mov
mov
loope
jp
mov
pop
hlt
dec
xor
cmp
mov
hlt
loopne
rclb
pop
jns
mov
repz
repz
and
test
jmp
mov
adc
rorb
cs
or
in
jne
cmp
in
repnz
rorb
cmpsl
repnz
test
cmp
icebp
icebp
mov
xchg
pop
adc
and
ds
repnz
adc
and
test
mov
nop
or
cmp
pop
repnz
icebp
or
jae
stc
mov
dec
icebp
xor
setge
pop
repnz
or
stos
jne
mov
test
sub
jecxz
jp
jmp
testb
ret
and
inc
insb
loope
stos
jge
aaa
inc
cmp
cmp
sahf
add
mov
adc
mov
imul
minps
jne
stc
xor
lahf
icebp
dec
add
movsb
xchg
dec
add
nop
jno
ss
jge
dec
aad
and
mov
filds
int3
dec
pop
xorl
push
adc
aaa
fwait
dec
repz
repnz
add
cmpsl
stc
xor
jp
sub
push
jecxz
imul
mov
mov
sahf
insb
sbb
push
push
aad
in
jnp
out
xchg
gs
dec
outsb
or
xchg
lret
nop
into
mov
daa
lea
mov
imul
sbb
lea
inc
cmp
and
lret
push
int
aam
pop
sub
mov
push
adc
pop
jle
in
jo
shr
jg
fists
push
push
daa
ret
icebp
jmp
pop
or
sbb
or
inc
jecxz
fs
push
testl
lock
mov
sbb
out
cltd
adc
push
add
jnp
sarb
daa
xchg
orb
sbb
xor
sarb
jmp
and
pop
add
call
push
repnz
push
or
call
dec
push
fwait
adc
mov
sub
adc
xchg
push
movb
adc
sbbb
insb
sbb
mov
push
imulb
outsb
dec
jb
push
jno
xchg
ret
movsl
push
dec
ja
pop
cli
adc
les
sbb
adc
push
adc
or
sub
add
pop
rorb
sarl
cmp
rclb
dec
int
jb
xor
orl
xor
aam
add
sbb
add
xchg
dec
pop
hlt
sbb
inc
and
inc
push
add
add
and
xchg
pop
xchg
pop
loope
inc
arpl
dec
js
adcw
push
jo
and
push
movsb
imul
sub
inc
and
test
adc
mov
adc
xor
inc
adc
adc
pop
scas
adc
push
add
add
or
xor
rolb
cmp
add
sub
rolb
inc
add
adc
in
and
inc
mov
cmp
js
push
mov
push
lods
rcll
lea
xchg
inc
adc
xchg
in
adc
inc
ss
daa
and
leave
dec
add
loop
je
add
sub
sti
adc
inc
rolb
xor
and
sahf
mov
xor
rcrb
and
xchg
push
and
cmp
insb
xchg
sub
rcll
jmp
xchg
jmp
cmpsb
imul
mov
movsb
sbb
mov
xor
add
outsb
insl
ss
and
push
adc
adc
inc
inc
and
bound
cmp
or
outsb
mov
jnp
adc
jmp
stos
and
or
mov
jb
shlb
cmp
sub
loopne
jb
sbb
xor
or
loop
out
xchg
add
and
rcrb
add
mov
add
pop
push
mov
nop
rclb
pop
add
imul
push
xor
inc
ds
push
and
dec
xchg
add
aam
push
mov
test
insb
pop
fs
dec
adc
and
cmp
add
lods
and
or
and
add
add
push
rorl
dec
ds
and
rclb
push
xor
xor
rcrb
or
cmp
rcrb
inc
or
xor
and
and
add
push
and
adc
mov
movsb
xor
push
mov
add
and
popf
cmc
push
inc
inc
xchg
filds
xchg
push
cmpsb
add
lods
jo
imul
adc
inc
inc
and
enter
dec
test
add
mov
and
movsb
jae
es
add
jb
movsl
push
inc
inc
dec
and
and
xor
inc
mov
adc
cmc
data16
loope
adc
ss
pop
iret
add
sbb
out
sahf
mov
or
cmp
je
aaa
popa
aas
cmp
je
sub
jmp
movsb
and
mov
and
push
pusha
and
and
das
cltd
inc
adc
cmp
cltd
mov
int3
cltd
lds
jbe
into
dec
cltd
ret
dec
mov
daa
dec
xor
mov
mov
and
mov
and
xchg
je
pushf
adc
adc
pushf
adc
dec
in
mov
inc
ret
or
movsb
xor
mov
mov
adc
xchg
lods
mov
dec
adc
int3
xchg
xchg
or
nop
sbb
orl
cwtl
add
sbb
xor
mov
mov
addl
mov
orb
ds
mov
xor
add
mov
popf
pop
or
call
add
mov
jp
addl
dec
je
inc
scas
pop
jl
pop
dec
fs
out
mov
in
loope
je
xor
mov
xorb
mov
or
mov
mov
inc
out
inc
pop
add
mov
shlb
shll
loopne
mov
cmpsb
insb
mov
sbb
mov
push
mov
mov
and
inc
leave
loopne
and
pusha
scas
test
shl
pusha
mov
or
cmp
adc
mov
xor
nop
sbb
add
shl
ss
mov
mov
pop
stc
shll
adc
shrb
add
mov
rclb
int
inc
mov
mov
push
sbb
mov
shrl
mov
push
nop
add
xchg
push
orl
mov
aas
push
mov
xchg
fneni(8087
inc
mov
or
dec
mov
cmp
mov
xor
add
or
pop
sbb
imul
or
cmp
add
sbbl
add
imul
call
in
mov
rorb
cmpl
add
or
in
mov
push
sbb
mov
je
mov
mov
sub
or
push
mov
aam
inc
add
add
lods
into
sbb
mov
dec
pop
cmpsb
inc
inc
sbb
or
mov
cmp
and
outsb
push
mov
mov
jmp
cmp
aam
inc
bound
xor
rorb
inc
inc
mov
rorb
or
add
rorb
inc
inc
mov
adc
or
mov
cmp
jae
sbb
test
push
add
int3
sbb
lock
xor
mov
push
mov
or
bound
scas
xchg
cmp
lods
jbe
add
in
mov
or
xor
je
ret
or
mov
shrb
cmp
aaa
mov
inc
rolb
mov
mov
cmpsl
sbb
or
xor
pop
mov
adc
inc
and
add
sti
lret
outsb
sbb
mov
adc
mov
jbe
jns
sbb
xor
cmp
pop
and
pop
push
mov
int
inc
mov
popa
arpl
fsubl
mov
cmp
out
xchg
hlt
lock
inc
push
and
pop
push
add
je
lds
mov
mov
push
xorl
sbb
dec
cmp
outsb
sbb
rorb
addl
mov
mov
out
push
sbb
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
xchg
cmp
inc
push
xchg
xchg
xchg
inc
pop
dec
dec
cmp
popf
lds
and
xor
mov
lret
je
call
adc
inc
inc
aaa
xor
jo
hlt
loope
mov
daa
addl
mov
ds
add
icebp
leave
jmp
fistpl
jge
aaa
imul
and
lea
test
gs
icebp
mov
repz
adc
in
pop
xchg
mov
inc
pop
mov
pop
fs
or
mov
push
mov
das
cmpsb
test
dec
pop
ret
sub
fildl
inc
push
mov
inc
add
xor
cmp
jbe
cmp
in
lods
ret
mov
xchg
inc
into
andb
jmp
test
jp
push
loopne
pusha
xorl
mov
pop
gs
jo
int3
add
jl
dec
inc
imul
pop
and
rcrb
pop
push
mov
mov
push
sbb
loope
xchg
add
xor
xchg
xlat
jae
inc
inc
and
sti
add
les
dec
xchg
roll
mov
inc
inc
dec
sbb
fsubrl
testl
lcall
push
xor
pop
jle
test
or
add
pop
and
nop
je
test
or
je
dec
cmp
add
js
call
push
test
cmp
mov
push
test
dec
mov
test
cmc
adc
cli
push
mov
jae
popf
push
jp
cwtl
xchg
inc
lret
and
and
cmp
leave
ret
cmpsl
ret
movsl
push
sub
or
jp
dec
js
pop
lods
dec
push
mov
rolb
jl
jmp
in
cmp
mov
adcb
ret
jg
and
xor
ret
mov
shlb
ret
test
in
ret
sub
rcrl
leave
xchg
es
or
dec
ret
sbb
dec
test
add
clc
xchg
or
fwait
shrl
mov
movsb
or
xor
into
jmp
adc
pop
xchg
xor
adc
lcall
push
jl
sbb
push
stc
pop
dec
or
sub
push
jmp
sbb
call
sub
sub
jge
loop
or
call
adc
mov
cmp
or
jl
or
push
cwtl
mov
jbe
mov
dec
outsb
sub
das
inc
xchg
ret
mul
sub
mov
sbb
push
mov
sarb
xchg
sbb
test
fldl
test
or
adc
mov
lahf
adc
test
and
add
scas
mov
nop
into
out
xor
loopne
rorb
inc
mov
sbb
ret
mov
dec
imul
test
fnstcw
es
adc
xchg
xchg
mov
pop
dec
call
mov
sub
dec
jne
and
cwtl
xchg
xchg
jne
and
rolb
jo
push
jne
je
cmp
mov
or
inc
cs
add
ret
inc
je
or
call
jb
jne
cs
add
jne
and
inc
inc
jne
sbb
nop
fs
add
jne
out
mov
fsubl
mov
mov
jne
inc
xor
test
daa
jne
je
ret
das
push
test
push
mov
jno
inc
xchg
and
mov
sub
adc
add
mov
loop
cmpsl
pop
jmp
dec
daa
movsb
add
incl
mov
sub
jl
je
add
xchg
and
lahf
dec
call
or
xor
notb
js
xor
hlt
add
test
mov
loope
sbb
adcl
pusha
addl
pop
insl
jo
inc
sub
push
mov
sub
pop
inc
mov
and
out
aad
cmp
call
adc
and
arpl
loopne
adc
adc
sub
subl
cli
mov
or
lret
push
dec
inc
add
pop
in
mov
adcb
repnz
cs
inc
jg
mov
nop
inc
and
cmp
pop
in
push
ljmp
jb
icebp
shlb
xor
push
inc
call
add
inc
imul
push
call
add
je
ja
fsubl
add
test
ror
push
or
jne
push
movb
adc
insl
in
and
cmp
inc
jmp
dec
jmp
or
jecxz
fimuls
inc
or
mov
inc
adc
mov
sub
inc
inc
inc
pop
je
pop
inc
cwtl
dec
call
add
and
and
add
cmp
or
mov
std
mov
add
js
ret
xchg
xorb
scas
pusha
stos
cmp
je
cmp
xchg
cmp
leave
or
sbb
fcmovnu
insl
call
xor
inc
jmp
mov
arpl
jmp
and
adcl
add
add
in
mov
pop
mov
add
loop
pusha
popa
push
mov
sub
inc
xchg
add
xor
lock
shr
adc
push
call
cmp
mov
lods
inc
fisttps
inc
shl
je
sub
addps
cmp
repz
inc
pop
fisubrs
jge
push
push
or
std
dec
mov
imul
hlt
dec
push
out
and
repnz
and
jmp
cmp
xor
in
push
add
dec
push
add
movb
clc
inc
push
adc
xlat
movsb
xchg
push
lret
xchg
cmp
xchg
mov
mov
sub
hlt
dec
sub
cmc
inc
adc
sub
shlb
cmp
pop
enter
jmp
adc
sbb
sbb
xor
push
and
arpl
and
sbb
fstpl
push
rcrb
push
pusha
and
xor
inc
and
jp
sbb
test
dec
enter
add
test
or
in
lea
or
popa
xor
popa
add
push
in
mov
ja
adc
and
mov
sub
pop
dec
inc
mov
out
fstl
lock
sub
and
xor
add
ret
lea
lret
sarl
xchg
and
adc
lahf
push
cltd
add
xor
mov
les
dec
push
xchg
and
jne
loopne
je
dec
sbb
push
mov
mov
cmpb
dec
add
loopne
push
popf
insb
notl
dec
ss
xlat
cmc
fists
xchg
adc
push
mov
push
cmp
push
insb
enter
push
dec
inc
xorl
fnop
xchg
test
xor
lcall
cwtl
insb
call
repnz
cmpsb
jbe
pop
add
pop
sbb
pop
add
push
and
cmp
fwait
inc
xor
xchg
sub
negl
push
and
or
call
mov
test
jns
mov
xor
xor
xor
xorb
jp
int3
pop
pop
rcl
stc
fsubs
dec
pop
and
inc
rcrb
lret
pop
sbb
pusha
sbb
lret
pop
cli
inc
sahf
insb
dec
sahf
div
ljmp
ror
or
cmovb
add
pop
dec
ss
divl
sti
and
jne
xor
mov
nop
sbb
sbb
leave
xchg
loop
inc
inc
xor
lcall
leave
xchg
ss
xchg
mulb
adc
imul
or
fbstp
frstor
sbb
push
ljmp
or
sbb
and
out
mov
mov
mov
xchg
sbb
xchg
or
xor
adc
add
notl
testl
divl
negl
xor
inc
dec
push
or
lds
sub
mov
stos
jne
xchg
sbb
idivl
xor
nop
inc
jb
ficoml
subb
xlat
mov
jge
fmull
mov
push
cmc
sub
sbb
in
lcall
jnp
out
and
sub
lahf
andb
mov
in
sbb
mov
punpckhbw
dec
call
dec
ss
outsb
push
out
inc
xchg
or
fs
xchg
xchg
xchg
or
stc
test
mov
mov
adc
je
push
test
jns
mov
outsl
mov
nop
daa
adc
arpl
add
add
inc
out
mov
adc
add
push
je
or
ds
add
add
or
pop
and
pop
cmp
in
jle
mov
push
call
test
mov
mov
insb
addl
jo
adc
or
aaa
bound
pop
shl
adc
sub
daa
push
xor
rorb
push
push
mov
mov
sbb
pop
xor
sbb
mov
mov
sbb
pushf
es
mov
mov
stos
mov
out
lods
movsl
bound
and
sub
mov
xchg
pop
jne
xchg
test
mov
xorb
or
xlat
repnz
push
mov
in
and
and
pop
lret
mov
inc
pop
pop
rolb
mov
pop
adc
addr16
jb
outsb
std
mov
cmp
mov
pop
jp
pop
mov
scas
ss
push
mov
or
mov
aam
mov
or
pop
call
mov
mov
hlt
push
jmp
int3
test
mov
cmp
and
add
cmp
and
cltd
xor
cmp
daa
popa
mov
cmpsl
mov
cmp
inc
call
jp
mov
adc
nop
dec
idivb
testl
cs
add
inc
cmp
addr16
lret
xchg
jb
push
and
and
and
inc
enter
add
sbb
adc
movsl
adc
cmp
and
lcall
call
push
mov
scas
movsb
inc
scas
adc
ljmp
sub
pop
xor
sbbb
scas
sbb
aaa
pop
mov
call
lcall
inc
mov
inc
call
adc
cmp
int3
mov
sbb
cmp
push
xor
dec
fs
mov
fadds
push
les
cmp
cmp
test
add
and
pop
test
out
mov
and
push
and
cmp
cmp
cmp
rclb
mov
sbb
push
jmp
inc
sbb
in
inc
sub
cmp
or
les
in
fstpt
push
mov
or
stos
and
mov
or
cmp
cmp
push
and
adc
inc
cmp
inc
daa
test
inc
rorb
push
sub
lods
nop
sbb
mov
mov
cmp
mov
rorb
mov
fucomp
sbb
and
lahf
jg
cmpsl
inc
mov
lds
rclb
sbb
add
push
popf
sbb
ja
push
sbb
mov
sbb
dec
sub
lds
mov
pop
fsubl
in
adc
sub
inc
popa
outsb
out
cmp
pop
cmp
lds
bound
or
icebp
lcall
sub
mov
sbb
mov
sbb
cmp
pusha
cmp
adc
sbb
sahf
inc
int
call
inc
and
and
or
adc
xor
and
sbb
push
test
push
sbb
and
sub
xor
rorb
sub
rclb
sbb
mov
inc
or
sub
sbb
xchg
inc
xor
or
js
add
cmp
jp
sub
pop
mov
daa
jbe
call
sbb
xor
clc
cmp
or
dec
pop
push
xchg
cmp
sub
imul
repz
addr16
sbb
out
push
or
or
jge
xchg
pop
lds
je
fisubl
pop
mov
pop
sbb
bound
jno
ret
or
call
sbb
push
and
xor
dec
mov
mov
js
push
aas
outsl
cmp
push
add
and
test
jns
pop
dec
mov
add
cs
sbb
and
or
subb
push
out
pop
cmp
rorb
or
ss
sti
mov
mov
cmc
test
filds
or
pop
out
inc
inc
call
push
or
fdivr
test
shlb
mov
out
mov
out
and
addb
mov
cmp
pop
loop
out
fisttpl
cmp
push
out
aad
addb
mov
or
test
push
imul
sub
xor
pusha
movsb
and
push
adc
or
cltd
mov
sbbb
test
fisubrl
mov
add
imul
loopne
dec
inc
inc
pop
enter
lods
aam
push
xchg
or
and
repnz
sbb
xor
sbb
enter
fucomi
jl
sbb
xchg
orb
rcr
lea
sbb
mov
inc
dec
sub
je
or
arpl
sbb
pusha
inc
adc
push
pop
je
arpl
fcomps
cld
pop
in
mov
push
mov
mov
sbb
sbb
or
and
push
inc
in
inc
notl
cmp
push
dec
pop
jnp
movsl
inc
adc
push
xlat
les
dec
pop
loopne
inc
and
mov
pop
xchg
rclb
pop
pusha
and
push
mov
test
sub
aas
mov
pop
ret
test
xor
xchg
test
inc
mov
fadds
adc
push
bound
call
pushf
in
outsl
nop
nop
dec
dec
inc
pop
mov
dec
sub
das
and
push
mov
test
pop
adc
xchg
popa
adc
pcmpgtb
int3
je
fnstenv
or
xor
repz
xchg
stos
sub
adc
fwait
nop
test
and
mov
and
xor
push
test
out
popa
stc
jb
dec
aam
or
inc
or
aas
mov
aaa
unpcklps
das
shlb
call
and
call
in
das
pop
sub
add
call
lock
call
cmp
fdivrs
int
inc
call
jg
lret
xchg
mov
lods
andps
movsl
in
xchg
das
pop
call
pusha
call
bnd
insb
call
into
xchg
das
pop
je
gs
pop
jl
push
in
mov
mov
jb
pop
sub
xor
nop
sbb
cwtl
add
xchg
dec
movsl
mov
fists
adc
sub
les
movsl
lods
int3
mov
test
mov
xchg
lret
fdivl
push
sub
push
in
sub
cmp
xor
es
sbb
lret
add
add
lods
cli
leave
or
leave
gs
dec
ja
xor
adc
mov
sbb
cs
dec
in
stos
and
sub
push
mov
xor
dec
jle
jae
push
cmp
inc
push
and
inc
dec
cmp
jmp
cs
adc
lret
pop
or
stos
pop
pusha
divl
dec
push
mov
push
cs
rorb
ret
lret
dec
xor
xor
inc
mov
mov
mov
xchg
xchg
xchg
ss
adc
js
imul
sbb
xor
push
lcall
and
cmp
dec
cli
cmp
sbb
inc
dec
lcall
mov
dec
or
cli
mov
dec
inc
mov
mov
nop
out
add
and
push
or
pop
push
or
mov
or
daa
and
pop
inc
xchg
shlb
xchg
je
xchg
xchg
sub
xchg
mov
adc
xchg
adcl
cmp
pop
pop
mov
lds
lret
adc
fcompl
in
test
pop
jne
mov
jmp
adc
shlb
out
or
aam
inc
call
sub
imul
movsb
insl
loopne
nop
push
and
sub
dec
fsubrs
gs
andb
and
add
pop
mov
or
call
push
das
adc
sub
pop
call
mov
jae
inc
aam
pop
sbb
shrl
cmp
and
inc
shlb
test
addb
pop
adc
jmp
hlt
push
mov
sti
xchg
push
dec
sbb
rolb
es
adc
jmp
mov
and
mov
and
movsb
rclb
cmp
inc
mov
mov
push
das
or
mov
pushf
mov
push
jge
lret
rclb
pop
roll
or
sub
add
test
dec
cs
mov
in
xchg
sbb
xchg
repz
movsl
add
inc
sbb
xchg
fbld
fisubrs
cmpsb
ret
xchg
or
sbb
push
xchg
fs
push
push
sbb
cmp
aam
mov
stos
cmpsl
push
adc
cmp
jne
or
cmp
inc
xor
cmp
mov
mov
cmp
imull
cmp
xchg
sbb
push
or
mov
popl
dec
jnp
jg
pop
insb
xor
cmp
xor
inc
aam
cmp
sbb
mov
mov
stos
in
push
pop
mov
les
cmp
inc
push
mov
add
mov
rclb
sub
or
add
sub
dec
pushf
mov
and
mov
aam
dec
inc
sub
icebp
xchg
xchg
in
je
mov
xchg
sarb
push
call
dec
dec
aaa
mov
push
xchg
shlb
fdivl
mov
pop
and
jge
mov
xchg
shrb
lods
cmp
cltd
shlb
mov
rorb
subb
cmp
dec
ja
mov
xor
mov
movsl
ja
daa
mov
mov
jle
movsb
je
inc
mov
movsb
je
mov
lea
xchg
xchg
mov
sbb
loopne
mov
shl
shlb
mov
movsb
xor
loope
paddsw
shlb
fmull
sbb
mov
lods
fwait
shlb
dec
add
and
sub
ja
pop
sar
out
rorl
inc
sti
and
adcb
adc
push
test
sti
call
mov
sti
test
mov
or
push
sti
lods
or
inc
mov
lods
add
sbb
push
cmp
sub
dec
js
inc
call
push
sti
dec
jl
mov
sub
mov
and
push
nop
mov
nop
call
nop
xchg
push
shlb
ja
mov
sahf
adc
adc
cmpsb
pop
push
xor
rcrb
jmp
adc
xor
mov
inc
or
inc
mov
or
and
inc
pusha
dec
andl
jmp
gs
test
rolb
loopne
push
sbb
or
add
jo
mov
sub
mov
xchg
repz
sbb
lcall
sbb
call
xchg
and
jge
ret
lea
mov
fldenv
xchg
jae
negl
call
fidivl
lea
lcall
in
and
sarb
call
mov
sub
xchg
mov
imull
notl
pop
rolb
notl
rcrb
lret
sbb
loope
cmpsb
sub
and
inc
sbb
popa
pop
mov
xchg
pop
inc
cmp
rolb
add
nop
cmp
jl
pusha
inc
cs
in
push
divl
add
mov
divl
jbe
and
bound
and
aam
mov
add
sbb
div
jmp
arpl
sbb
shl
add
push
cld
add
faddl
mov
jl
negb
outsb
mov
mov
int
inc
mov
sub
dec
push
adcb
lea
test
lods
inc
push
mov
sarb
adc
cmp
inc
out
push
pop
mov
cmp
lea
cmp
ret
add
call
daa
icebp
sbb
inc
mov
xor
or
xor
mov
daa
sub
and
shlb
ror
pop
dec
xorb
loopne
xor
mov
push
imul
fadds
daa
adc
sbb
jp
add
daa
inc
or
dec
xor
add
and
das
xor
daa
or
sub
adc
xchg
dec
sub
adc
jp
push
out
adc
scas
push
jmp
mov
mov
push
mov
lds
adc
pop
mov
ja
sbbl
add
fcompl
cmpsb
mov
fisttpl
sbb
nop
mov
nop
nop
inc
addl
jo
sbbb
loopne
mov
pop
mov
mov
add
cli
push
es
inc
sahf
pop
in
sbb
cmpsl
adc
mov
xchg
mov
clc
mov
push
outsb
push
mov
cmp
adc
xlat
ficoml
mov
jg
je,pn
aam
mov
and
movsb
stos
dec
xchg
test
and
sbb
xchg
or
pop
mov
inc
xlat
rolb
xor
jne
inc
mov
push
xor
mov
test
sbbl
mov
mov
fs
mov
mov
inc
fwait
or
and
mov
and
cs
mov
sbb
dec
push
mov
inc
push
add
mov
enter
mov
or
mov
insb
xchg
orb
cmp
pop
fdivl
sbb
dec
mov
sahf
inc
gs
inc
stos
dec
push
or
sbb
inc
push
gs
add
dec
sbb
addl
and
popf
adc
sub
jg
jmp
xchg
and
jg
mov
sub
or
arpl
je
aam
fs
test
push
call
pop
test
popf
or
or
jnp
pop
pop
fstl
sub
shll
or
and
aad
dec
insb
movsl
hlt
push
sbb
cld
sbb
push
shlb
sub
mov
mov
movsl
cmp
or
add
mov
call
aam
or
xchg
push
add
mov
add
mov
movsb
mov
fwait
test
adc
loop
in
dec
push
jo
repnz
xlat
fwait
push
xor
sub
jnp
add
mov
dec
ds
out
mov
lea
call
sub
jge
adc
jb
nop
out
adc
fimull
sub
push
cmp
push
push
lcall
movsl
sbb
pop
inc
cmp
ret
popa
pop
cmp
lcall
adc
xlat
ret
cmpsb
push
add
add
test
cmp
inc
scas
and
fnstsw
xor
pop
mov
lret
outsb
jecxz
add
add
repz
and
lea
daa
inc
inc
cmp
inc
push
sbb
mov
int
outsl
pop
jb
mov
test
in
sbb
cs
adc
shl
inc
push
inc
or
out
pop
sub
cmp
and
fstpl
movsb
ret
inc
stos
adc
in
dec
clc
jmp
rorb
adc
or
dec
fcomps
jmp
adc
inc
add
pop
cmp
add
and
imul
sbb
ret
jns
scas
sahf
mov
push
jl
out
ds
or
sbb
cmp
push
mov
pushf
jns
out
pop
push
lods
push
mov
out
out
push
inc
push
push
sub
push
nop
repz
sti
movsb
push
push
xchg
jl
push
cmp
cmp
je,pt
push
repz
cmp
sbb
out
sahf
out
push
fmulp
mov
sahf
xchg
mov
ret
into
sbb
incb
add
cmp
cmp
loop
sbb
out
aam
mov
sahf
mov
sbb
pushf
ds
repz
lret
or
jns
out
and
pop
out
sahf
out
test
jns
mov
fsubrp
decb
sarb
test
shl
jns
adc
jb
jle
sahf
mov
daa
out
cmp
loop
clc
adc
sub
cmp
jns
mov
aaa
je
fs
push
cmp
mov
push
daa
pop
mov
jbe
aad
popf
mov
lahf
jae
jbe
push
cwtl
imul
cmpsl
insl
mov
iret
dec
test
aad
repz
add
jbe
push
scas
test
pusha
loope
and
cmp
and
ret
daa
jo
mov
xchg
push
cmpsb
pop
pop
jle
sub
inc
push
jge
xor
or
dec
push
dec
ja
lcall
mov
push
outsl
push
push
ja
pop
lock
not
add
adc
imul
js
stos
dec
jb
xor
xor
pop
or
aaa
outsl
ss
xor
lds
scas
add
out
mov
and
push
cmp
mov
sbb
ficoml
cmp
testl
repnz
cmp
mov
mov
and
sub
pusha
add
stos
pop
int3
and
daa
andb
jbe
das
push
cmpl
or
mov
sub
or
jmp
je
les
adc
outsl
ret
pop
aam
rcr
data16
add
jnp
mov
fidivl
aaa
pushf
mov
aas
ret
je
cmp
nop
sbb
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
popa
lret
add
dec
fcoml
push
cwtl
repnz
rorl
xor
sar
rcrl
lods
pop
dec
imul
adc
call
mov
inc
jne
outsb
je
fiaddl
js
jg
jnp
inc
xor
sub
sub
std
cmp
sub
inc
inc
xor
xor
xor
jge
idivb
scas
xor
xor
inc
xor
xor
ss
xor
cmp
sub
mov
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
pop
mov
aam
vmresume
cmp
test
push
jo
or
lock
xchg
inc
inc
movsb
ss
outsl
mov
push
xor
or
push
and
inc
aaa
inc
push
push
mov
inc
pop
dec
addb
sbbl
dec
sbb
arpl
xchg
mov
inc
push
dec
and
cmp
ss
in
mov
add
xor
and
dec
cltd
cmp
dec
outsl
mov
dec
dec
add
loopne
ret
pop
adc
push
fwait
popa
pop
inc
dec
hlt
imul
jne
dec
pop
push
imul
jle
out
inc
out
adc
push
sub
out
cmp
in
gs
ds
lods
sahf
add
psraw
fsubr
cmpsb
push
hlt
mov
dec
mov
or
jb
adc
or
lds
fiadds
insb
outsl
xor
imul
lods
insb
loop
movsb
inc
je
push
push
mov
and
inc
cmp
add
dec
xchg
sbb
xchg
mov
mov
ljmp
mov
xchg
pop
imul
syscall
insb
insb
mov
xchg
and
outsb
ret
pop
js
les
jmp
adc
push
inc
and
inc
adc
jle
or
pop
clts
mov
roll
xchg
lock
gs
add
xchg
sbb
pop
inc
sbb
or
xlat
pusha
push
and
mov
daa
and
inc
push
test
cmpsb
push
imul
add
jp
mov
scas
je
dec
fs
push
jo
mov
nop
gs
cmp
insb
ret
data16
popa
fs
jo
mov
pop
pop
fistl
dec
subb
mov
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
inc
cs
push
push
push
add
lcall
je
or
push
popa
push
ss
imul
pusha
mov
nop
mov
mov
pop
add
or
aas
rorb
das
inc
mov
push
add
inc
add
inc
rolb
add
ret
add
push
and
sbb
mov
cmovbe
mov
xchg
pushf
add
sbb
push
mov
cmpsl
or
sbb
dec
push
nop
sub
sbb
add
aas
adc
push
loope
fadds
adc
sbbb
or
add
cmpb
mov
das
push
adc
out
scas
xchg
xchg
adc
push
sbb
iret
repz
sbb
sbb
call
std
sbb
push
das
push
pop
int
pop
pause
cld
and
cli
js
int
sub
jns
stc
jp
push
mov
cmp
cld
fdivr
mov
out
ret
enter
xchg
popf
sbb
mov
mov
and
push
aad
popa
scas
lods
test
xor
dec
xchg
sbbb
repz
cmp
mov
ret
scas
es
xor
or
out
sahf
out
or
in
int3
sbb
jns
les
add
pushf
push
xchg
call
repz
cmpb
iret
rep
push
sahf
out
sahf
pop
push
push
dec
dec
inc
repz
jns
cmp
xor
iret
repz
sub
and
sbb
cmp
repz
adc
add
sahf
out
add
or
hlt
call
enter
out
sahf
nop
jo
xor
lock
cmp
repz
mov
insb
inc
stc
cmp
repz
adc
cld
push
out
sahf
cmpsl
fcom
les
js
sub
aam
mov
xchg
jo
sbb
add
out
sbb
push
int3
push
mov
adc
inc
cltd
les
pop
or
pop
or
in
mov
inc
bound
add
cmp
xor
sub
fidivs
sub
inc
inc
add
adc
mov
push
inc
dec
cmp
out
fiadds
shrl
sub
mov
adc
inc
or
out
popl
jecxz
sbb
inc
sub
cmpsb
xor
push
sub
adc
out
pop
sbb
xchg
dec
scas
add
adc
xchg
es
dec
push
ja
push
mov
adc
adc
arpl
shrb
add
add
dec
insl
jae
cmpl
jbe
sti
add
ljmp
shrb
mov
pushf
andb
add
ljmp
rolb
ret
jns
inc
data16
andb
sar
mov
mov
push
xor
xchg
cld
inc
inc
mov
pop
subb
jnp
out
mov
inc
cmp
pop
jne
pop
andb
stc
sbb
lahf
xchg
jne
imul
mov
pop
dec
les
ret
arpl
imul
cmp
jo
push
or
xor
bound
stos
cmp
xor
fildll
mov
push
push
insb
das
inc
leave
jmp
cmpsl
das
outsl
jl
add
cmpsl
ja
lahf
add
das
add
cmp
xchg
loopne
adc
and
push
mov
dec
test
rorb
adc
data16
in
mov
insb
pop
rolb
in
aas
jg
fsubr
and
aam
cmp
ret
dec
mov
aas
sete
int3
adc
aas
xor
jns
jbe
js
es
into
and
xlat
jns
adc
xlat
pop
rcr
andb
ss
lcall
dec
out
lret
les
mov
xchg
outsl
mov
popf
jl
push
xor
je
push
aas
sbb
jg
cmpsb
jg
in
mov
nop
mov
or
mov
mov
loopne
cmp
mov
pop
cmp
jno
enter
pop
and
or
pinsrw
popf
dec
dec
fcmovnbe
mov
aas
cmp
shl
adc
xor
push
aam
insb
adc
fs
jnp
outsb
pop
loopne
dec
mov
lcall
sub
xor
mov
enter
shrb
mov
stos
stos
xor
insl
imul
push
daa
lods
cmp
cmpb
mov
push
dec
lods
or
imul
xor
add
jle
push
jb
push
lcall
or
push
and
mov
mov
add
push
push
add
push
outsl
ja
xor
cli
dec
dec
sub
xchg
xor
push
add
mov
out
daa
movsb
and
sbb
add
pusha
bound
dec
inc
repnz
imul
neg
ljmp
mov
xorb
push
or
dec
push
jb
sbb
mulb
insb
jae
loopne
ja
arpl
add
outsb
push
add
pop
adc
dec
add
xchg
mov
aas
push
mov
jae
mov
pop
push
push
jae
push
xor
jo
mov
popa
xchg
movsb
mov
push
dec
mov
mov
or
movsl
imul
adc
cmp
push
cmp
rep
cmp
add
and
add
sub
dec
mov
inc
push
mov
xchg
mov
push
mov
and
push
jo
jb
mov
mov
sti
test
movsb
sbb
roll
push
push
lods
cmpsl
xor
pop
ret
pop
inc
push
sbb
imulb
ret
pop
xor
push
ficoml
inc
popa
jge
and
lods
mov
inc
and
inc
inc
out
push
inc
push
dec
jnp
imul
sub
xchg
xor
testl
push
mov
dec
inc
add
and
popa
out
mov
gs
or
jmp
mov
sub
stos
outsb
jno
cmp
es
pop
push
popa
push
and
and
cmpsb
dec
sub
nop
pop
ds
and
inc
lahf
xor
sub
xor
dec
pop
addb
inc
inc
cs
or
divl
and
or
call
into
inc
adc
outsb
xor
inc
imul
cmpsl
and
add
call
aas
das
pop
outsl
adc
mov
shrb
inc
add
stc
add
push
lcall
orb
pop
aam
in
mov
xor
dec
dec
mov
lods
nopl
and
lcall
gs
lds
shrl
shll
insl
inc
bound
push
outsl
jl
mov
cld
push
roll
push
or
movsl
gs
mov
cmp
sti
add
push
lock
rcrb
ffreep
add
lret
cmp
jo
push
mov
sub
sti
jo
jp
mov
inc
jmp
mov
das
enter
inc
js
fstl
inc
dec
pop
or
or
sub
inc
cmc
in
and
mov
push
jmp
sbb
inc
sbb
shll
mov
jecxz
cmp
dec
and
add
add
loope
inc
jno
inc
push
loopne
pop
pop
mov
mov
sub
movsl
scas
ds
cltd
loope
push
pusha
push
jo
jno
xor
push
add
into
pop
add
xchg
push
xor
cmpsl
ljmp
dec
imul
cmp
rcr
fcmove
pop
add
lret
or
sbb
out
outsl
jge
mov
push
push
push
mov
mov
ret
push
ret
adc
imul
jns
and
andb
jae
adc
add
je
ja
add
jecxz
xchg
xor
and
add
xor
xchg
dec
mov
mov
jo
sarb
into
insb
gs
or
push
add
sbb
jle
sub
fs
xor
sbb
iret
loope
fbld
lret
fbld
lahf
mov
sbb
mov
fwait
xchg
nop
loopne
and
inc
cwtl
mov
pop
pop
aam
push
jecxz
shlb
pop
in
pop
adc
jae
clc
and
iret
jnp
dec
aas
pop
pop
push
insb
push
sbbb
dec
mov
pusha
sti
cmp
adc
push
iret
icebp
pop
and
adc
addb
dec
nop
push
loop
jns
add
sbb
test
pusha
inc
stos
sar
bound
jbe
add
lcall
inc
cmp
push
and
sub
fsubrl
stos
rorb
addr16
xchg
jo
pusha
out
sub
push
add
pop
hlt
mov
loopne
xlat
or
inc
sub
inc
mov
or
leave
dec
push
and
mov
lcall
iret
repz
mov
or
sahf
out
ds
out
lock
out
enter
mov
repz
out
test
pop
mov
repz
nop
mov
jo
pusha
push
pop
push
out
sahf
out
cmp
and
adc
sahf
sbb
cld
in
lock
sub
fcomps
enter
cwtl
jns
out
mov
cmp
jns
out
sub
sbb
iret
sarl
add
in
hlt
in
in
iret
repz
int3
mov
cmp
int
xchg
push
mov
js
push
lahf
out
iret
inc
sub
and
or
jmp
xchg
cmpb
sbb
or
dec
cmpsl
sbb
xchg
mov
push
mov
mov
lcall
jne
shl
lock
jo
lock
push
nop
fimull
adc
aaa
cmp
and
orb
maskmovq
testl
lret
jbe
orl
inc
dec
pop
lds
fs
inc
dec
pop
inc
add
and
adc
pop
neg
mov
and
or
and
scas
sub
dec
inc
sub
xor
movsb
pop
sbb
subl
adcb
adc
xor
fbld
mov
push
pop
jo
add
in
bound
cmp
cmp
adc
mov
adc
adc
and
mov
xor
cmp
insl
mov
insl
sub
xchg
cmp
insl
jbe,pn
and
lahf
pushl
xor
xor
ds
je
pusha
dec
adc
ror
pusha
fwait
xor
jae
jecxz
pop
imul
pop
cmp
imul
sbb
cmp
outsb
add
and
and
inc
addl
jb
addb
jae
or
popa
insb
into
lods
push
insb
fiaddl
shrb
scas
divb
fcomps
sbb
inc
add
sbb
pop
adc
push
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
decl
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
fbstp
xor
xor
dec
xor
xchg
shll
inc
ss
ss
push
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
cmp
cmp
sub
ret
add
push
lock
idivl
ljmp
or
xor
xor
push
xor
xor
das
clc
ljmp
js
popf
xor
xor
xor
xor
xor
xor
lock
pushl
mov
xor
xor
xor
xor
out
xor
lock
jb
jge
mov
xor
xor
fidivl
scas
xor
es
pushl
fnsave
out
xor
loopne
call
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
mov
std
out
cmp
sarb
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
clc
lret
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
dec
cli
jmp
imul
cmp
cmp
pop
incl
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
pop
add
into
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xor
inc
inc
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
ljmp
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cld
cmpsb
call
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
mov
sbb
pop
sar
cld
push
or
cmp
pop
xor
push
xor
adc
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
clc
pop
xor
lcall
clc
xor
xor
jmp
incl
nop
xor
out
in
xor
scas
clc
xor
aaa
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
inc
jno
jg
stc
cmp
cmp
cmp
push
loopne
mov
and
cmpb
ds
aas
jmp
xchg
outsb
xor
xor
mov
xor
sbb
xchg
cmp
cmp
mov
mov
fists
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
jg
aas
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
sti
inc
xchg
cmpsb
jo
and
xor
add
or
jg
xor
xor
xor
fisubrl
xor
cli
aas
loop
xor
xor
xor
mov
xor
xor
decl
shlb
ss
add
or
aaa
incl
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
decl
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jecxz
incl
cmp
push
mov
cmp
cmp
sbb
push
cmp
cld
jg
lods
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
aas
cld
aas
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
push
es
bnd
adc
sub
xor
cmp
lcall
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
fisttps
xor
cmp
pop
cmp
mov
ljmp
lcall
cmp
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
push
aas
je
jge
mov
movsl
aas
stos
aas
mov
mov
test
cmc
int
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
jg
mov
xor
xor
xor
xor
mov
xor
xor
xor
mov
mov
xor
xor
mov
jl
cmpsl
xor
xor
filds
xor
xor
xor
xor
cmpsb
pushl
xor
pop
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
cmp
mov
cmp
bound
scas
cmp
sbb
jp
cmp
fdivrl
aaa
cmp
mov
cmp
cmp
mov
lods
incl
cmp
cmp
cmp
aas
ljmp
jle
push
or
add
jg
pop
xor
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
nop
sarb
mov
sbb
ds
xchg
cs
lahf
xor
xchg
aas
push
mov
jecxz
lock
mov
xor
xor
xor
pop
mov
ss
fiadds
aaa
ret
sub
jmp
repnz
or
cmp
pop
cmp
jge
push
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
out
sbb
cmp
cmp
fdivrs
push
aas
jne
call
add
mov
add
mov
shlb
xor
dec
or
outsl
js
mov
xor
divl
pop
xor
call
adc
es
dec
ss
outsb
notb
ss
incl
ss
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
test
inc
pop
push
imul
cmp
test
mov
ljmp
or
cmp
dec
cmp
cmp
ljmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
or
adc
cmp
mov
ljmp
pop
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
cmp
test
addr16
loope
rol
decl
ret
xor
xor
pop
xor
xor
lcall
cmp
or
xor
xor
xor
xor
xor
mov
xor
lcall
ss
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
incl
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cld
inc
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
lds
pop
pop
rclb
sub
jne
cli
lcall
loop
xor
xor
jg
xchg
xor
xor
xor
sub
bound
cld
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
pushl
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
aaa
jnp
ljmp
cmp
jg
loope
aaa
into
cmp
inc
xor
and
xor
xor
jl
call
decb
lods
xor
int3
pop
push
hlt
das
mov
xor
xor
xor
loopne
int3
xor
cmp
sub
sub
xor
cmp
inc
cmp
incl
cmp
cmp
xor
call
cmp
jl
cmpb
cmp
push
mov
push
mov
enter
pop
loopne
mov
cmp
cmp
mov
cmp
inc
lock
rcl
aad
hlt
dec
cld
push
add
or
adc
mov
cmp
cmp
sub
sub
xor
clc
add
cmp
inc
cmp
cmp
pop
cmp
decl
push
cmp
cmp
mov
nop
xchg
cwtl
jg
lods
mov
sub
xor
inc
mov
push
aas
push
lock
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
aas
std
je,pt
adcb
pop
bound
ret
sub
xor
xor
inc
xor
xor
cwtl
xor
xor
enter
cmp
adc
pop
xor
mov
mov
fbstp
inc
xor
andb
add
outsl
mov
fimuls
xor
ss
sahf
decl
dec
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
das
sar
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
inc
lcall
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
das
ret
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
mov
into
mov
dec
mov
mov
incl
mov
aaa
enter
shlb
aam
fdivs
fsubl
adc
lock
hlt
xor
xchg
mov
add
or
adc
adc
sbb
cmp
or
cmp
fdivrl
call
mov
cmp
pop
sahf
sti
push
jg
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
loopne
add
cmp
je
jl
test
pushl
mov
mov
cmp
mov
mov
cmp
call
add
adc
jmp
aas
push
add
add
das
jg
in
call
sahf
repnz
shufps
lock
iret
xchg
add
jmp
adcb
lret
lods
repz
ret
icebp
es
sub
fbld
bound
push
add
rcrl
inc
add
jne
dec
std
int
subl
push
test
fsubs
test
add
fimuls
xchg
pop
inc
or
lcall
sbb
mov
adcb
imull
dec
push
push
fisubrs
sbb
pusha
in
or
and
rcrb
add
xchg
adc
push
imul
test
add
mov
aas
xchg
adc
aas
shrl
lret
mov
lods
inc
icebp
xchg
and
dec
sbb
push
sub
inc
or
lea
orb
jne
xchg
je
sbb
fisubl
bound
or
xchg
xorb
aam
dec
enter
dec
outsb
push
push
ret
push
shl
jb
pop
and
push
xor
sbb
jne
push
mov
les
fsubs
add
in
rcr
les
xor
dec
jae
fimull
adc
fcompl
push
cmp
je
xor
jb
xor
dec
ror
mov
ret
jge
push
fiaddl
mov
mov
test
dec
sbb
pop
sub
dec
sbb
jne
lods
aad
dec
out
ret
dec
sbb
inc
sarl
xlat
and
and
push
mov
cmp
mov
movsb
test
sub
clc
jnp
jle
and
dec
adc
jnp
inc
jp
add
xchg
cs
or
xor
bound
insb
jle
jle
outsb
and
or
jb
lea
call
rorl
fisttpll
add
cmp
out
jmp
xchg
fildl
dec
leave
subb
test
adc
sarl
pop
int
ret
pop
outsb
push
push
pop
push
mov
or
and
pop
adc
lea
push
push
xlat
test
ss
jb
cmpb
mov
enter
adc
push
adcb
push
or
inc
push
push
call
ror
into
movsl
xor
stos
pop
add
xchg
sub
mov
add
enter
pop
add
movsb
lods
and
fisubrl
lahf
fidivs
inc
cmp
andb
call
push
mov
and
lea
cmp
js
add
and
jg
dec
mov
cmp
mov
mov
js
add
or
mov
dec
mov
mov
mov
adc
mov
lret
mov
and
add
movl
mov
mov
jmp
lock
push
push
loop
shl
test
adc
add
adc
es
dec
rcrl
ret
pop
or
push
add
dec
add
mov
jl
fisttpll
add
xchg
aam
pop
push
subl
ja
dec
cld
sub
or
jge
fneni(8087
push
int
cmp
xchg
or
xchg
test
xchg
mov
and
xchg
and
or
mov
cmp
mov
push
aad
or
mov
lea
out
fistpl
push
xorb
jge
add
mov
xor
out
mov
adc
ja
ret
ret
add
pop
pop
or
or
lret
nop
leave
mov
or
pop
mov
rcrb
push
in
jl
and
push
cmp
ficoms
and
mov
loope
cmp
mov
sarb
out
call
push
test
mov
push
inc
xor
dec
cmpsl
std
mov
rorb
push
mov
push
sbb
inc
or
jo
mov
shlb
xchg
adc
adc
data16
dec
or
loop
mov
and
add
sub
pop
mov
sub
rclb
lock
sbb
push
push
inc
adc
aam
jl
rcll
adc
lea
push
lea
loopne
pop
ss
call
pop
add
push
push
loop
or
or
dec
in
xor
or
mov
test
mov
pop
pop
mov
lcall
adc
lods
pop
cmp
sbb
cmp
jne
out
idiv
dec
enter
adc
jbe
enter
or
xor
ret
divb
gs
sbb
pop
mov
pop
mov
sbb
or
mov
cmpsb
xchg
pop
icebp
ds
call
add
add
add
push
add
test
notl
push
ja
dec
jo
lods
int3
adc
dec
and
add
movsl
adc
sbbb
lret
ret
push
dec
add
sarl
pop
push
in
imull
les
add
add
push
add
lret
or
sub
push
inc
test
lahf
or
push
adc
mov
dec
lahf
rcrb
sbb
sarb
mov
bound
ss
orb
and
fisubrl
or
push
and
xor
adc
bound
pusha
orl
gs
xor
push
add
aaa
jo
xor
jne
xor
es
cmp
jle
or
fildl
and
dec
or
lea
adc
push
popa
cltd
jl
pop
enter
push
add
lds
inc
mov
adc
adc
movsl
xacquire
adc
adcl
inc
add
cmc
ret
push
arpl
jnp
fistpl
dec
push
mov
or
dec
icebp
push
pop
out
sub
jp
dec
adc
dec
mov
in
add
lea
adc
xchg
gs
dec
adc
pushf
adc
pop
aaa
mov
mov
mov
les
push
push
pop
aaa
inc
popa
mov
push
popa
mov
and
subl
jo
andb
push
sbb
inc
and
popa
cmp
mov
add
jnp
push
xchg
push
mov
xchg
sbbl
jmp
notb
jnp
and
mov
add
scas
or
fstpl
outsb
addb
or
hlt
mov
test
adc
sub
sbb
dec
pop
lret
imul
jge
cmp
push
andl
jne
nop
push
je
daa
fstpl
icebp
jno
push
push
inc
sbb
xchg
outsl
aas
mov
pop
sbb
or
and
nop
mov
lar
orl
adc
sbb
call
in
mov
sub
adc
xor
or
lret
xchg
xchg
add
mov
and
orb
dec
jo
cmc
hlt
rorl
push
fnsave
or
call
adc
or
inc
or
pop
inc
movsl
cmpsb
adc
sub
jo
call
je
or
pusha
daa
fdivr
or
arpl
dec
and
andl
mov
ds
pop
xor
push
add
repnz
and
and
cmp
inc
inc
inc
shrl
push
or
push
mov
stc
inc
sbb
movsb
adc
adc
fwait
or
popl
jg
inc
adc
sbb
lods
sbbl
adc
dec
hlt
inc
and
push
adc
cmp
mov
ja
or
sbb
dec
inc
addr16
or
das
sbb
sbb
cmp
out
adc
inc
push
add
mov
inc
in
cmp
add
mov
jnp
add
add
cmpsb
mov
addb
andb
xor
mov
movsb
adcl
inc
mov
xchg
cmpb
test
out
sbbb
mov
movsl
pop
pushf
or
mov
ss
mov
lret
addl
dec
mov
dec
jae
xchg
pop
push
ja
xor
cmpsl
cs
xchg
and
cmp
nop
nop
ljmp
rolb
hlt
xchg
or
add
test
pop
dec
out
fldl
pop
xchg
fs
pop
cmp
repz
dec
inc
cmp
push
rolb
pop
sbb
jmp
push
adc
and
lret
and
out
outsb
orb
and
pop
pop
test
ficoms
jl
mov
pop
jno
jb
push
pop
out
faddl
mov
push
fadds
loopne
out
jns
call
adc
or
loopne
pop
inc
mov
repz
xor
inc
pop
jge
addb
add
adc
xor
ds
push
test
call
add
or
inc
push
xchg
push
lods
nop
hlt
addr16
push
and
mov
sub
or
shlb
inc
push
call
and
pusha
test
mov
scas
in
pusha
hlt
push
hlt
test
cmpsb
pop
pop
popa
pop
push
cmpsl
ret
pop
addl
orl
in
sub
sub
sub
mov
int
and
sub
sub
xor
shll
sub
sub
test
sub
add
cmpsb
sub
sub
sub
sub
dec
sarl
sub
sub
inc
and
sub
sub
sub
or
sub
xor
sub
sub
sub
mov
neg
stos
xchg
add
jo
add
mov
add
popa
dec
mov
push
or
push
mov
push
bound
jo
jae
or
pop
mov
ds
push
scas
or
push
lret
push
insb
push
sahf
sbb
mov
jle
addr16
mov
adc
inc
psubsb
push
sub
dec
movb
inc
rclb
lcall
stos
mull
inc
sub
and
rolb
pop
les
inc
adc
cmp
je
inc
adc
stos
inc
sub
bound
jo
ds
bound
push
inc
iret
push
mov
inc
rcrb
inc
mov
inc
or
push
sub
iret
inc
shl
sbbb
push
aaa
adc
adc
inc
aas
and
mov
xchg
test
xor
or
or
stc
sbb
loopne
fs
sbbb
or
daa
push
inc
out
call
sub
call
sub
add
sub
cltd
mov
jp
lods
out
push
jmp
and
and
fisttps
push
dec
jns
mov
dec
pushf
cwtl
jns
mov
xchg
mov
xchg
jo
pushf
pop
push
jns,pt
mov
dec
and
xchg
mov
jns
pop
adc
js
mov
adc
inc
test
pop
les
outsl
add
jns
push
xchg
jns
js
inc
loop
js
xchg
mov
adcb
cmp
jns
sbb
bnd
sbb
daa
fisttpl
mov
pusha
sub
sbb
and
adc
pop
rolb
jns
fdivl
jl
jb
dec
and
sahf
ljmp
icebp
sbb
rolb
scas
test
inc
nop
icebp
inc
mov
mov
dec
xchg
daa
popf
rclb
cmc
sbb
daa
fbstp
mov
inc
daa
xchg
sub
lods
and
mov
mov
xchg
jmp
outsb
cmpsl
test
mov
push
mov
inc
test
lods
and
test
call
les
daa
sbb
and
gs
adc
pop
push
adc
and
mov
ret
mov
xchg
das
daa
enter
sbb
mov
icebp
pop
mov
daa
xchg
inc
lods
mov
daa
inc
or
push
jne
xchg
daa
sbb
daa
les
fbld
mov
xor
and
daa
and
daa
push
xchg
inc
fsts
fisubs
cwtl
call
mov
jl
cmp
dec
mov
lret
inc
fs
dec
jo
push
and
inc
inc
fnsave
test
int
mov
sbb
mov
adc
mov
cmp
mov
fs
mov
and
dec
mov
cs
fs
daa
addb
dec
push
add
and
daa
mov
mov
int
push
nop
daa
test
add
mov
or
pop
inc
mov
jmp
mov
mov
or
jmp
push
out
shlb
push
inc
movsb
es
ja
cmp
or
push
fcoms
mov
mov
mov
jmp
nop
mov
cmp
push
pop
sub
adc
test
inc
pop
xchg
dec
nop
mov
or
mov
inc
dec
aaa
xor
mov
es
fiaddl
jo
mov
sbb
cmp
mov
pop
mov
adc
and
xor
ret
mov
pop
xchg
xor
leave
push
ds
pop
dec
nop
mov
sub
jge
or
not
mov
add
dec
mov
jmp
xor
aad
mov
cltd
sbb
xor
xor
push
cmp
xor
xor
cmp
xor
sub
pop
cmp
dec
and
rcl
and
mov
xchg
lds
mov
add
inc
loop
fcomip
lcall
mov
fstpl
cmp
enter
add
mov
jno
aaa
adc
test
push
or
call
dec
pusha
nop
adc
xor
jo
fcomps
cwtl
bt
sub
xchg
mov
sbb
pop
movsl
aam
and
jne
scas
sub
leave
aam
aad
iret
imul
mov
dec
jno
cmp
ss
cmc
xchg
mov
mov
nop
aad
jne
cmc
mov
test
dec
jl
cmp
fs
xor
pop
fldt
stos
add
inc
addr16
call
xor
cmp
aad
sbb
mov
add
push
add
and
sub
and
xlat
cmpsb
in
outsl
and
push
test
lahf
sbb
pusha
push
xchg
xchg
fisubrs
fimuls
add
push
mov
xchg
pop
jb
frstor
test
ret
xor
rep
mov
lods
or
das
mov
hlt
or
sub
sub
add
sbb
push
or
imull
mov
xor
adc
xor
or
mov
or
jp
pop
les
lock
mov
dec
lock
or
inc
push
add
lret
push
inc
jb
push
cmp
pop
fmull
pop
mov
xchg
jnp
addb
fistpl
nop
icebp
and
pusha
jp
pop
es
fs
push
dec
loope
fs
loop
lahf
call
or
das
shl
pop
xor
loopne
pusha
leave
inc
xor
xchg
fcoml
pop
nop
scas
pop
xchg
push
xchg
xchg
cwtl
pop
and
mov
dec
sub
jnp
xchg
roll
rorb
push
mov
addb
fisubrs
sbb
mov
adc
stc
pop
xor
mov
stc
mov
mov
mov
mov
mov
fsubrl
sarl
stc
aas
shrl
inc
clc
adc
lret
and
push
stc
sbb
popa
outsl
inc
mov
in
dec
push
call
inc
mov
cmp
je
stc
adc
fstp
mov
leave
sub
cld
clc
adc
frstor
popa
mov
dec
mov
daa
and
mov
sbb
xor
jmp
daa
fnstsw
xchg
movsb
sub
icebp
fcompl
andb
push
push
xorl
lret
cmp
movsb
jmp
xor
aaa
pop
movb
jne
xchg
xchg
iret
bnd
add
fcmovnu
fisttpl
add
enter
invd
aas
mov
mov
addr16
xchg
push
adc
mov
aas
pushf
push
test
aam
adc
mov
adc
call
test
add
gs
insb
xor
adc
test
xor
adc
add
cmc
adc
xchg
aad
inc
bnd
and
call
popf
jno,pn
loop
and
pop
xchg
cmpsb
fdiv
je
inc
pusha
mov
jge
push
mov
xchg
jecxz
mov
or
sub
cwtl
sbbb
and
sbb
xor
and
push
repnz
scas
lock
lret
jo
inc
mov
inc
pop
rcr
fldl
ret
or
jl
jl
gs
or
mov
add
rorl
in
in
cli
pop
sti
pop
lret
cmp
sbb
shrl
add
jnp
shrl
shl
mov
mov
sbb
or
andb
add
mov
movsl
fstps
cmp
pusha
or
xchg
pop
push
inc
enter
sub
mov
pop
xchg
sbb
cmp
add
adc
jno
sbb
xchg
lods
add
imul
inc
xorl
adc
scas
mov
cwtl
sbb
pushf
mov
xlat
add
fdivl
daa
mov
jo
adc
adc
add
in
adc
dec
pop
adc
xor
sub
jne
xor
lahf
adc
into
jp
fsts
leave
add
aam
push
repnz
roll
fstps
nop
daa
daa
dec
sbb
inc
leave
stos
fst
insb
out
mov
adc
jb
hlt
call
xlat
jmp
push
add
inc
imul
xchg
dec
adc
loopne
bound
adc
sub
adc
ss
dec
lfs
pop
pop
adc
inc
insl
fs
das
orl
aaa
push
pop
mov
and
rcrb
jns
outsb
push
inc
imul
pusha
xchg
xchg
adc
cmp
sub
mov
rcl
dec
xchg
adc
sub
popf
insl
movsb
adc
add
sub
fadds
push
pop
adc
mov
out
mov
test
adc
sub
cmp
dec
adc
fsubrl
ja
push
sub
or
adc
adc
jnp
xor
test
dec
sbb
addb
inc
mov
push
orl
nop
push
inc
or
inc
into
sub
adc
stos
push
gs
in
stos
mov
repz
inc
aaa
and
dec
in
xor
cmp
push
jne
fisubrl
push
or
dec
lods
push
gs
sarb
or
xor
mov
test
loopne
push
add
push
dec
out
mov
lds
cmp
jne
fstpt
add
cld
dec
fistl
xchg
ret
lds
xlat
inc
or
sub
pop
gs
test
in
and
aam
sbb
in
popf
imul
xchg
mov
sub
or
push
xor
notb
inc
jno
pop
call
push
pop
aaa
add
push
pop
repz
aam
inc
push
lods
call
sbb
cmp
loop
fcoml
pop
push
pop
movsb
xchg
inc
mov
iret
lcall
rcr
mov
xchg
in
mov
fisubs
mov
sub
aaa
test
or
lret
xchg
pop
cmp
ret
cmc
or
shl
pop
test
sub
pop
stc
jb
or
mov
or
sarb
sub
push
jo
pop
enter
cmp
or
out
add
cmc
jns
adc
jb
sbb
mov
hlt
aam
add
push
adc
push
in
or
dec
jecxz
mov
pop
push
outsb
push
outsb
and
inc
push
xchg
pop
xchg
lea
test
nop
mov
pop
dec
or
loopne
enter
mov
and
add
add
ss
pop
pop
lea
adc
jmp
adc
call
lret
leave
in
loopne
add
xchg
leave
jecxz
int3
lret
inc
stc
xchg
mov
lret
pop
jns
jns
or
push
bound
pop
mov
inc
mov
cmp
and
sbb
add
sti
mov
loopne
das
das
das
das
fdivrs
sarb
mov
mov
das
cwtl
mov
cmpb
mov
push
jb
adcl
ds
xor
sbbl
adc
push
jb
mov
and
mov
nop
sbbl
mov
enter
xchg
mov
in
pop
cmp
push
pop
mov
push
mov
cmp
inc
push
xor
sbb
and
mov
nop
sub
jecxz
fdivrs
mov
sbbl
lods
mov
push
jb
mov
and
mov
nop
sbbl
mov
enter
xor
mov
int
in
in
mov
clc
es
daa
shll
and
das
inc
or
mov
mov
cld
in
movsb
sbb
ja
xor
daa
int
add
sbb
jb
mov
enter
adc
and
pushf
xor
daa
sbb
jns
mov
stc
mov
dec
xor
inc
xor
xchg
daa
add
ret
mov
xor
mov
sbb
jb
mov
lock
push
test
mov
popa
inc
aad
test
pop
push
in
xor
add
xchg
sbb
js
dec
push
dec
mov
stc
sub
mov
push
dec
repnz
mov
sbb
xchg
nop
mov
xchg
jo
mov
hlt
xchg
lods
and
imul
notl
and
icebp
push
add
aas
pop
scas
aam
dec
ss
inc
sub
push
je
inc
xor
push
or
jg
push
xor
addr16
test
mov
add
bound
imul
imul
push
dec
test
scas
jmp
into
inc
or
fs
push
pop
pop
ret
sub
test
add
pop
sbb
dec
in
mov
fsubs
dec
dec
jae
shl
dec
adc
and
pop
repnz
sbb
mov
mov
push
inc
sbb
test
push
pop
sbb
call
dec
sbb
fbstp
xchg
les
dec
ja
inc
dec
leave
sarb
mov
ret
and
sbb
rorb
enter
dec
jle
inc
xchg
fdivl
outsb
pop
cmp
dec
pop
and
sub
mov
cmp
movsl
roll
inc
xchg
pop
mov
clc
xor
inc
jmp
mov
fldenv
test
inc
push
sbb
fs
cmp
mov
sub
iret
scas
sub
mov
mov
sbb
xchg
cmp
movsb
lcall
enter
cmp
dec
mov
int3
dec
cmp
nop
scas
dec
mov
mov
popf
test
mov
sarb
movsl
roll
add
nop
dec
xor
mov
rcrb
dec
in
push
pop
mov
jbe
test
xchg
inc
sbb
fdivrl
orb
jae
inc
xchg
outsb
stos
push
xchg
mov
dec
push
shlb
cmp
test
jp
pop
hlt
dec
outsl
arpl
xor
lock
xchg
pushf
shr
fdivs
mov
cld
sub
adc
inc
xchg
out
push
sub
cmpsl
dec
sub
mov
push
out
xchg
movsl
nop
pop
lock
inc
dec
mov
insl
xchg
dec
cmp
dec
sbb
push
pop
mov
adc
test
xchg
dec
fldcw
loope
sub
adcl
pop
add
fs
adc
sub
out
dec
nop
dec
pinsrw
dec
xlat
inc
call
pop
xor
inc
sbb
sbb
sub
pop
lods
dec
and
add
aaa
jo
shrb
push
rolb
add
scas
inc
dec
cmp
xor
scas
push
dec
in
xlat
and
lret
xor
faddp
enter
stos
repnz
mov
cmp
cmp
dec
mov
movsl
repz
popa
nop
test
dec
pop
sbb
fmuls
pop
pop
cmp
jle
and
sub
enter
arpl
dec
nop
and
xchg
ret
dec
sub
push
jbe
scas
inc
scas
mov
movsl
fwait
addb
test
imul
sub
aas
sbb
mov
cmc
push
add
xor
fs
push
dec
sbb
shlb
rclb
mov
add
cmc
fsubl
dec
push
or
dec
dec
scas
dec
mov
add
ja
dec
dec
sbb
and
and
or
sub
stos
aad
ljmp
cltd
lock
or
pop
dec
stos
adc
dec
cmp
das
xchg
dec
xchg
ffree
dec
loopne
dec
cmp
rcrb
dec
cmpb
jb
std
mov
dec
cmpb
jmp
aad
sub
ja
jne
and
pop
jp
xchg
sahf
cltd
dec
cmpsl
push
dec
nop
mov
add
rolb
loop
pop
xchg
andb
test
push
test
repnz
dec
push
push
sbb
xor
dec
cmp
lahf
mov
mov
sub
dec
stc
xor
dec
shll
and
push
dec
xchg
xchg
mov
or
cmp
dec
ficomps
dec
push
mov
jo
jmp
mov
push
loopne
lahf
loope
adc
ja
dec
dec
pop
clc
jb
rcl
dec
inc
out
lods
and
dec
shll
dec
je
shl
jp
dec
fs
add
jmp
mov
inc
xchg
inc
fmull
xchg
pushf
jns
adc
sahf
addl
int3
add
cmpsl
test
and
mov
push
xorb
cmpsb
push
xchg
shrb
sbbb
lods
iret
mov
jb
in
mov
xor
sbb
cmpb
imul
nop
lea
push
jmp
loopne
sbb
mov
inc
movsb
mov
push
pop
mov
add
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
adc
shlb
popf
in
mov
push
sub
in
xor
clc
adcb
inc
gs
push
cltd
rcl
inc
mov
and
jbe
movl
sbb
movb
mov
repnz
push
xchg
jmp
xor
add
test
cmp
rorl
sbb
pusha
stc
cmp
repz
aam
add
out
sahf
cmpsl
adc
push
bound
out
sahf
jp
xchg
cmpsb
mov
jns
out
add
iret
repz
fs
cwtl
iret
repz
cmpsb
mov
fdiv
or
out
lcall
jns
out
data16
cwtl
scas
sarl
loopne
push
stos
and
repz
cmp
push
pusha
insb
jbe
iret
repz
xchg
movsb
mov
mov
repnz
lea
adc
adc
push
int
or
sub
jp
mov
inc
movsb
sbb
jl
cltd
cli
push
fcoms
sbb
jl
aad
outsb
cmp
jl
push
lea
fnstcw
insl
sbb
mov
test
shlb
add
es
add
mov
push
mov
or
add
test
out
mov
adc
push
adc
lcall
cmp
call
out
js
or
mov
movsl
push
push
pop
sahf
mov
and
repz
and
js
jns
lcall
cld
hlt
cmp
out
aam
adc
mov
push
inc
adc
mul
xchg
mov
addr16
and
test
aas
push
xchg
out
sahf
push
xor
sbb
sarl
add
xchg
hlt
call
cmp
aam
enter
iret
repz
iret
movsb
mov
cmp
repz
mov
repz
jo
push
fs
pop
pop
push
push
cmp
repz
dec
inc
inc
cmp
cmp
repz
sub
cmpsl
stc
cmp
sbb
or
nop
in
out
sahf
fadd
movsb
test
mov
jns
add
push
shlb
pop
dec
dec
inc
xor
add
mov
int3
jns
out
lods
test
repz
repz
enter
ja
fwait
loope
lea
push
add
in
mov
push
add
mov
inc
adc
or
inc
mov
push
or
add
lret
notl
xor
push
push
ret
into
add
add
inc
pop
xor
int3
sub
sub
push
xor
ja
mov
test
ss
mov
inc
iret
test
movsb
out
idivb
mov
mov
mov
fsubs
add
and
aas
mov
xor
mov
fcmovnu
sti
push
and
push
mov
inc
or
outsl
mov
iret
subb
sahf
pop
sti
jg
das
xor
mov
adc
mov
shlb
test
rorb
lea
sbb
pushf
add
in
jnp
ja
aas
jb
adc
inc
shlb
and
inc
pop
jge
add
leave
and
cmp
pop
adc
mov
pop
inc
inc
shl
stos
out
aas
sbb
dec
lahf
fwait
push
in
inc
add
stos
dec
mov
or
cmp
das
fs
int3
xchg
pop
jo
and
icebp
fsubl
rol
fwait
and
aas
adc
jg
pop
mov
unpcklps
fistpll
dec
arpl
xchg
add
aaa
jnp
imul
nop
imul
sbb
push
mov
inc
adc
les
add
aam
inc
in
mov
and
mov
loopne
pop
sti
fiadds
iret
jb
fs
mov
jbe
ud2
jno
ds
jae
sub
xchg
movsl
add
inc
mov
xor
jbe
mov
jle
adc
inc
or
iret
mov
into
push
adcb
or
mov
push
pop
inc
enter
aas
fists
lea
outsl
jne
push
push
arpl
sub
and
add
outsl
and
push
nop
dec
dec
add
pop
xor
pusha
movsb
jno
xor
and
jecxz
adc
inc
jecxz
int3
xor
xor
daa
lea
or
push
add
aad
push
sbb
xor
outsl
and
push
lret
or
adc
and
adc
pop
sub
pop
and
and
ret
mov
add
iret
dec
arpl
push
push
orl
push
adc
push
aam
jmp
xor
sbb
cmpsl
or
inc
aas
rorl
adc
inc
push
jae
pop
add
push
xchg
rcrl
xor
inc
adc
dec
jo
jecxz
add
push
imul
xor
add
xlat
fcomps
lea
dec
arpl
jg
adc
adc
xchg
xor
sub
popa
outsl
loop
mov
pushf
xchg
add
test
aad
inc
test
dec
or
pop
adc
ret
sbb
incb
inc
iret
push
add
movsb
xchg
testb
cwtl
cmp
repz
nop
mov
je
pop
push
pop
dec
sahf
out
sahf
inc
inc
cmp
xor
jns
out
sub
and
sbb
jl
out
adc
xchg
hlt
xchg
out
ficomps
in
push
in
enter
sahf
mov
mov
dec
je
jns
negl
insb
push
fs
push
dec
mov
stc
sahf
out
push
and
add
in
xchg
sahf
out
fiadds
enter
test
sahf
out
mov
iret
repz
js
jo
pop
inc
cmp
and
adc
lock
cmp
repz
int3
mov
iret
repz
insb
pop
add
subl
mov
iret
sbbb
imulb
mov
mov
inc
inc
and
push
push
jno
add
sbb
call
leave
pop
jg
in
pop
push
or
test
outsb
stos
lcall
cs
cmpsl
insb
stos
sbb
daa
aas
mov
xor
in
test
inc
mov
out
dec
incl
adc
or
pop
xor
sbb
xor
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
add
decl
rclb
xchg
xor
xor
aaa
fbstp
icebp
aaa
ret
lea
fistpll
sti
cmp
cmp
daa
mov
test
push
cmp
andb
adc
cmp
mov
and
fwait
cmp
cmp
dec
cmp
insl
cmp
lahf
cmp
mov
or
push
and
pop
ds
ds
icebp
call
add
fs
imul
aas
jecxz
call
aas
cmpsb
xchg
mov
and
sub
xor
roll
xor
push
and
loope
fwait
popa
faddl
out
xor
repnz
xor
xor
and
daa
xor
xor
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
aaa
or
mov
xchg
xor
or
xor
sbb
sbb
and
sub
sub
xor
pop
lret
xor
repnz
ss
xor
incl
sbb
xor
xor
xor
xor
push
mov
mov
mov
inc
xor
xor
xor
xor
xor
and
sub
insb
ss
xorl
inc
pop
shl
push
adc
clc
mov
cmp
cmp
jecxz
push
jbe
cmp
sbb
sbb
and
and
maxps
cmp
test
mov
mov
repnz
clc
or
cmp
pop
dec
cmp
test
stos
push
mul
loope
mov
mov
ss
dec
cmp
cmp
cmp
fs
xchg
xor
cmp
cmp
cmp
or
xor
cmp
fs
cmp
cmp
and
inc
ds
ds
ds
cmp
dec
xchg
aas
mov
aas
repnz
clc
das
dec
xor
xor
inc
xor
xchg
jecxz
ja
lock
xor
xor
or
and
xor
aam
mov
dec
in
dec
xor
cmpsl
bound
fisttps
repz
push
sarl
test
lret
push
add
mov
push
lret
aas
cld
jg
outsb
pop
xchg
sub
cmp
inc
js
jle
xor
cmp
push
mov
mov
ret
inc
and
into
in
jmp
dec
ss
cmp
mov
jp
xchg
lret
and
cmp
cmp
mov
push
xor
jnp
subb
cmp
cmp
cmp
cmp
loopne
in
jmp
lock
push
sarl
xchg
xor
jge
pop
or
insb
cmp
cmp
cmp
cmp
cmp
sub
jmp
cmp
push
ds
ds
clc
es
adc
xor
aas
dec
aas
push
aas
or
sub
sbb
pop
fidivl
test
xchg
incb
xchg
icebp
dec
xor
push
xor
jecxz
es
cmc
xor
xor
shlb
jbe
aaa
std
inc
xor
insl
xor
test
cli
xor
push
sbb
int3
push
or
mov
ss
ss
aaa
jnp
mov
clc
das
test
or
cmp
fwait
gs
inc
adcb
shlb
jecxz
cmp
ja
call
inc
cmp
fcomip
push
push
mov
mov
pop
cmp
outsl
cld
mov
xorl
pop
cmp
ja
lcall
testb
adc
cmp
cmp
cmp
cmp
and
fwait
cmpsb
scas
push
addr16
cmpb
dec
fistps
cmp
cmp
cmp
sbbb
push
inc
daa
mov
pushf
push
push
xchg
lcall
or
js
lock
xor
adc
fildll
push
cmpsb
xor
xor
jg
add
or
xor
mov
out
sbb
lcall
push
adc
sbb
das
ss
mov
mov
aaa
pop
fsubrl
cmp
push
mov
lret
sbb
idivl
cmp
cmp
lcall
popa
adc
push
fisubl
imul
cmp
cmpsb
cmp
das
dec
cmp
cmp
test
lahf
cmp
aas
iret
aas
loope
mov
add
sbb
sub
cmp
xor
test
xchg
mov
cld
xor
xor
xor
push
push
jmp
mov
hlt
xor
mov
dec
aaa
gs
cmp
cmp
cmp
clc
or
sub
and
cld
push
pop
out
mov
xor
out
adc
xchg
cmp
xchg
into
xchg
mov
xchg
mov
cmp
jb
cmpb
cmp
add
cmp
out
dec
pusha
or
or
adc
fisttps
sbb
mov
xor
je
jl
fcompl
xor
sbb
out
or
cwtl
xor
outsb
sbb
mov
sbb
xchg
mov
inc
movsb
jle
lret
rorl
in
jbe
call
cmp
int3
mov
stos
pusha
xor
push
and
pop
movb
inc
inc
orl
mov
fcmovb
xor
int3
xor
out
mov
loopne
insl
xchg
push
out
call
loopne
test
xor
xor
adc
xor
mov
movb
popa
cld
or
xor
pop
xor
insb
push
je
aas
or
mov
xor
and
movsb
xor
shlb
mov
rcl
adcl
out
xchg
jo
je
xor
lcall
orl
push
ret
mov
push
push
cmpsl
xchg
xchg
int3
xor
cmp
pop
nopl
dec
add
nopl
mov
pop
daa
cwtl
fwait
js,pn
out
fsubrs
xor
inc
xor
pop
inc
jecxz
xor
xchg
xor
xor
inc
sbb
jnp
loop
xor
mov
xor
pusha
xorb
inc
mov
add
dec
mov
xor
lock
xchg
loopne
xchg
fmull
sbb
sub
out
xor
dec
xor
data16
inc
loopne
sub
xor
jb
xor
loopne
lret
cmp
inc
xchg
dec
scas
aas
clc
loopne
push
lcall
insb
xor
jp
lock
js
jl
xorb
mov
xor
xchg
rcrb
test
lods
and
xor
push
icebp
pop
pop
pop
fiaddl
sarb
dec
sub
mov
nop
push
roll
ljmp
fadds
and
inc
dec
inc
sub
insb
jo
fucomi
mov
add
add
mov
push
or
pop
pop
push
or
or
or
or
or
adc
fwait
rclb
adc
add
or
cmpsb
adc
adc
adc
add
data16
loopne
in
or
rolb
or
add
add
sahf
add
and
test
add
adc
mov
mov
sarb
imul
ds
call
inc
add
push
adc
pop
and
xor
push
mov
adc
xor
cmpb
xchg
mov
or
push
or
aaa
lds
mov
cmpsl
xchg
and
movsb
icebp
inc
inc
or
adcb
push
sbb
xor
dec
xchg
scas
and
adc
pushf
into
add
adc
stc
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
mov
or
xor
adc
or
icebp
mov
or
cwtl
xorb
adc
stos
scas
xor
js
jo
or
fsubrs
add
add
lds
cld
cli
and
mov
mov
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
jg
mov
cli
pop
mov
stc
or
call
repnz
addr16
out
or
push
push
xchg
add
repnz
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
mov
lcall
mov
push
pop
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
jmp
push
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jg
idiv
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
call
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
iret
xor
jmp
leave
mov
jp
push
out
or
mov
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
idiv
stc
xor
hlt
and
xchg
jmp
sbb
mov
lods
mov
out
pop
jb
mov
or
lock
in
push
mov
sub
pop
mov
jl
rorl
adc
push
jo
jg
hlt
push
add
stc
loope
mov
push
in
div
sar
andl
aas
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
mov
inc
sbb
paddb
inc
mov
dec
adc
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
push
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
aaa
fldln2
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
push
jg
cmp
sub
inc
scas
inc
mov
lcall
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
mov
sti
das
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
add
decl
outsl
adc
ret
das
pop
pop
pop
shlb
out
ljmp
sbbl
jno
or
sarb
std
pop
les
cli
mov
call
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
mov
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
call
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
jg
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jmp
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
pusha
imul
add
mov
cmp
xchg
mov
pushl
ftst
jbe
xchg
and
add
jae
shrb
shlb
loope
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
orb
scas
les
cli
adc
and
lahf
iret
in
fistpl
lret
mov
das
pop
cld
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
add
or
cld
inc
or
pop
jg
add
out
pop
mov
jg
mov
aad
test
mov
jle
iret
push
jbe
push
sbb
incl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
or
jg
sarl
adc
loopne
and
clc
rorb
jbe
xorl
and
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
jg
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
inc
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
jle
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
pushl
adc
inc
lds
push
pop
adc
imul
or
inc
lcall
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
dec
sbb
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
adc
jp
clc
insb
test
push
cmp
aas
repz
sbb
lock
in
jmp
out
sbb
inc
cs
mov
clc
push
std
mov
or
push
lock
test
lds
loop
decl
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
fists
out
pop
or
or
dec
ss
mulb
leave
inc
lods
movsb
or
repnz
push
decb
mov
jl
call
pop
cmc
fisttpl
cmpsl
lret
pop
in
cmp
dec
filds
mov
pop
lock
jmp
hlt
dec
mov
push
mov
sbb
xlat
inc
aas
mov
jg
mov
loopne
fisttps
addr16
sbb
cld
daa
jp
std
adc
outsb
cmp
inc
cltd
or
mov
ret
nop
cmp
das
incb
adc
stos
imul
cmc
cld
idivl
mov
and
loope
jae
shll
je
jge
call
mov
jg
stc
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
xor
pop
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
std
push
rorb
jp
dec
add
xlat
push
sbb
and
imul
push
cmp
repz
jecxz
pop
gs
out
push
dec
into
sarl
pop
out
jg
jno
ret
and
cmp
or
sbb
inc
push
dec
jge
jmp
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ljmp
push
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
cli
out
add
fsts
dec
push
sub
pop
nop
xor
add
pop
inc
add
fs
push
push
push
nop
mov
mov
push
popf
test
and
call
sbb
or
dec
icebp
movsl
and
jb
ficoms
and
fadd
xchg
enter
aaa
xor
pushf
jb
test
stc
dec
lcall
dec
in
lods
dec
mov
adc
repz
inc
scas
int3
std
mov
jmp
ljmp
xchg
aaa
cmc
jg
mov
adc
sbb
lock
mov
mov
mov
jge
sbb
aam
cwtl
and
enter
test
mov
sub
inc
dec
dec
lods
fidivs
aaa
int3
mov
lcall
jecxz
sub
outsb
mov
fwait
mov
clc
pop
popf
mov
mov
pop
outsl
in
lcall
inc
stos
cmp
mov
test
xchg
test
call
push
mov
pushl
arpl
add
pushf
mov
push
cmp
mov
imulb
rolb
outsb
pop
jb
inc
inc
pusha
cmp
rcrb
push
addr16
adc
adc
cli
mov
jle
fimull
mov
jo
fs
inc
or
or
addr16
push
cmp
sub
dec
daa
add
dec
stos
and
loope
icebp
popf
push
outsb
push
cltd
or
pushl
mov
int
lods
sub
mov
sub
mov
jmp
addl
jns
test
out
or
xchg
popf
lcall
test
cmpb
sub
jg
lcall
mov
or
mov
jns
cld
ficompl
andb
stos
mov
iret
notl
cli
scas
fdivs
out
add
enter
fsts
mov
lcall
mov
movsb
testl
mov
daa
fdivr
out
or
ljmp
fdivs
addr16
sub
cmp
dec
mov
daa
mov
pushl
in
mov
ss
les
sub
mov
fwait
js
adc
jg
jmp
sub
insl
daa
mov
stc
dec
int
in
aad
jp
inc
mov
mov
fcmovb
jns
test
ljmp
dec
or
and
dec
cltd
sbbl
push
and
mov
xor
xchg
movsl
cwtl
add
adc
mov
ljmp
fsubl
xchg
and
int
jecxz
pushl
dec
jmp
jnp
addr16
mov
pop
dec
jg
leave
or
mov
dec
es
pop
mov
out
jae
inc
ret
push
pop
mov
and
xor
xor
fidivrl
jmp
jns
mov
ljmp
xor
sbb
ljmp
lcall
sbb
outsl
jb
scas
outsb
jp
xor
cli
cmpsl
jae
mov
dec
ret
sbb
jmp
addr16
stc
loop
setno
subb
mov
or
push
push
xor
lea
incl
fwait
pop
push
insl
out
adc
xor
lret
daa
dec
in
and
pushf
addr16
ljmp
in
xor
jle
inc
jecxz
leave
fdivrl
call
mov
stos
sbb
call
push
fldcw
ss
in
cmc
loop
test
or
xchg
jne
jmp
mov
pop
mov
jnp
jg
mov
pusha
dec
jge
loopne
ds
aaa
jae
or
jo
inc
jno
fwait
add
mov
rclb
inc
ljmp
mov
inc
push
stos
filds
mov
xchg
sbb
push
mulb
incl
sub
ljmp
mov
cmc
xchg
mov
es
fdivl
or
fsubr
cmp
lds
mov
and
jl
cltd
push
rolb
cmpsb
mov
sarl
sub
push
lret
mov
lcall
iret
in
lahf
rorl
dec
decl
decb
je
inc
or
fcomp
in
mov
fmuls
sbb
jmp
inc
imul
dec
sbb
sub
sub
imul
std
xchg
jl
fs
rcrb
mov
inc
mov
pop
sbb
jnp
daa
mov
ret
push
mov
xchg
mov
adc
adc
jns
add
mov
push
cli
shll
add
cltd
pushl
cld
lcall
ret
mov
mov
xchg
dec
cmp
xchg
dec
dec
pop
xchg
dec
and
sub
call
mov
loope
mov
inc
in
outsl
mov
jl
push
inc
pop
out
decl
loope
or
push
ret
mov
mov
jge
xor
jge
inc
xchg
pushl
or
sub
dec
and
jns
cli
push
cmp
cmpsl
push
call
sbb
jb
add
cmpsb
and
jl
insl
repz
in
mov
incl
insb
clc
js
subl
loop
sbb
cmp
or
or
call
or
mov
or
enter
dec
std
xor
std
lds
or
xlat
add
lcall
fcompl
push
sub
js
mov
jmp
xchg
leave
inc
clc
int3
stos
decl
mov
jno
cmp
in
xor
inc
and
jno
rorl
movsb
mov
push
sbb
inc
dec
leave
pop
or
ret
dec
repnz
and
mov
daa
cld
jb
test
sbbl
mov
pop
cli
icebp
aad
in
out
xlat
mov
jg
push
out
in
jp
in
test
mov
xchg
inc
mov
pop
push
mov
sbb
std
fdivrl
repz
push
stos
jge
decb
push
leave
push
inc
xchg
scas
ds
lahf
mov
xchg
sub
shl
lea
pop
inc
mov
jg
pop
aaa
aad
fs
push
xchg
cltd
fldl
push
mov
insl
stc
cmp
inc
repz
xchg
xor
test
test
sbb
add
es
mov
mov
loope
mov
push
shrb
out
dec
xor
pop
popa
add
add
jmp
jnp
cli
aas
mov
and
cmp
sub
stc
cmp
pop
hlt
jg
pop
xor
mov
xor
adc
int
jecxz
rorb
std
fbstp
shlb
inc
addr16
sarl
fdivr
lcall
loopne
push
push
jbe
sub
sbb
xchg
les
inc
das
subb
fcomip
call
pop
pop
push
imul
cmp
jne
aam
aas
roll
orl
lock
clc
pop
jl
test
sbb
leave
loope
rclb
xor
mov
adcb
adc
outsl
ljmp
scas
cmp
cmp
add
xor
jb
sbb
movsb
xor
push
mov
cmp
out
inc
add
addr16
in
jecxz
addr16
fs
decl
nop
dec
imul
and
add
jmp
movsl
xor
subb
push
decl
fiaddl
jnp
aaa
mov
stos
push
xlat
or
push
pop
adc
cld
fisubs
mov
ljmp
arpl
dec
pop
popa
dec
lea
mov
jmp
push
sub
popa
lock
add
dec
movsb
mov
xor
ljmp
fwait
add
sbb
or
iret
pop
mov
push
mov
xor
cmpsl
stos
pop
ljmp
movsl
xchg
fadd
adcb
cmp
cmp
rclb
mov
test
aad
decl
sub
cmp
inc
ja
inc
sub
call
repz
out
mov
scas
push
jg
ljmp
mov
test
loope
aaa
lods
out
cmp
loopne
data16
incl
xor
ret
dec
leave
leave
hlt
or
dec
push
inc
mov
and
outsb
push
test
decl
mov
test
xchg
movsl
int
fcompl
mov
ds
sub
popa
adc
jmp
xor
mov
insb
xchg
mov
les
sub
sti
ja
and
pcmpeqb
lcall
out
dec
dec
or
js
inc
lahf
test
sub
pushf
xor
aaa
jle
imul
pop
inc
jnp
rclb
or
sub
test
out
iret
mov
adc
push
sar
incl
cmc
mov
cmp
jge
or
jle
insl
mov
push
pop
call
jno
cmp
pushl
mov
sbb
push
int3
out
dec
xor
leave
ud0
ljmp
roll
nop
add
add
fisttpl
iret
arpl
rclb
jmp
sbb
dec
cmp
dec
pusha
mov
xor
push
js
out
out
cs
mov
fnstsw
faddp
les
mov
mov
pop
int
lock
insb
addl
sbb
pushl
addr16
add
repz
out
daa
sbb
sbb
push
out
jg
insb
inc
out
frstor
inc
mov
push
iret
cmp
xchg
cmp
sbb
or
mov
mov
daa
mov
repz
arpl
add
ljmp
jb
push
outsb
push
test
xor
movsl
in
adc
jno
test
xor
pop
adc
out
cs
inc
in
in
mov
cmp
pop
adc
inc
push
xchg
xchg
loopne
jg
pop
adc
adc
push
adc
daa
int3
lahf
jno
xor
out
imul
push
bound
sbb
nop
je
pushf
xchg
push
dec
repnz
jmp
and
clc
mov
jno
jno
push
psubb
loop
push
outsb
push
sbb
clc
ds
sub
dec
xchg
outsb
xor
popa
aas
mov
fs
xor
stos
insb
adc
sti
shl
into
jbe
xchg
jg
lcall
push
lcall
add
push
repz
mov
aaa
jnp
repz
decl
addr16
add
xchg
popa
movsl
into
cmp
js
jmp
lock
and
inc
or
xchg
dec
fstpt
mov
mov
or
xchg
and
adc
test
cltd
jmp
sbb
mov
out
pop
loopne
mov
ljmp
mov
cmp
xor
cmp
mov
xor
mov
adc
adc
xchg
stos
call
cld
adc
fmuls
sub
mov
sahf
push
jle
cmpsb
stos
fmull
divb
movsl
inc
lds
lock
decl
adc
inc
mov
jae
notl
enter
outsl
xor
pop
test
gs
add
jl
lods
xor
scas
fistl
loope
ret
imul
pop
jmp
xlat
repnz
mov
sbb
fcmovnbe
cld
in
in
push
push
cmpsl
adc
mov
nop
decl
daa
dec
movsl
hlt
mov
push
je
mov
lods
fwait
ds
cmc
in
jg
call
fistpl
push
stos
cmc
cmpl
add
cmp
cmpsb
mov
stos
cmpsl
scas
sti
js
std
decl
nop
insl
scas
mov
add
mov
jmp
adc
icebp
mov
mov
inc
pushl
call
dec
aam
mov
pop
das
xchg
stos
mov
or
gs
pushl
pusha
adc
and
lds
push
mov
push
mov
jg
aam
dec
mov
dec
pusha
or
sub
adc
xorb
cld
lock
cmp
leave
push
in
sub
cli
and
jmp
jbe,pt
inc
mov
pop
shl
pushl
sub
push
dec
into
jg
decl
pop
in
xchg
ja
jge
mov
cld
dec
and
in
sahf
in
xchg
testb
mov
out
clc
std
cltd
inc
and
cmpb
ret
ret
cmp
and
test
rcl
or
mov
aaa
pop
push
in
or
shrb
pop
jo
dec
xor
add
pop
xchg
adc
nop
das
in
test
icebp
or
das
mov
outsl
cli
fnstsw
das
aas
jge
adc
xor
sub
xor
icebp
cwtl
push
mov
dec
sahf
jae
gs
mov
mov
notb
cli
leave
outsl
lods
add
mov
cmp
fwait
int3
dec
and
pushl
ret
out
fisttps
daa
xor
les
gs
fistl
xlat
lock
jmp
mov
sar
xchg
push
lcall
sub
lahf
adc
in
test
decl
push
pusha
or
jl
jecxz
mov
icebp
test
mov
cwtl
cmc
subl
fiadds
jbe
xor
add
lcall
adc
lret
popa
push
lcall
push
mov
jnp
xchg
xor
inc
mov
pushl
std
sti
arpl
adc
clc
test
jge
mov
insb
add
lods
adc
add
xchg
cld
xor
call
push
mov
movsb
ljmp
add
addr16
xchg
adc
cmp
xlat
fwait
pop
cmp
push
aaa
inc
movsb
test
or
mov
add
sbb
orl
pop
lock
decl
inc
fdivp
adc
test
movsb
fstpl
adc
iret
push
add
daa
fbstp
cmpsb
shlb
push
mov
leave
mov
add
decl
in
mov
inc
adc
sub
cs
insl
insl
pop
mov
lret
mov
mov
in
inc
adc
les
inc
insl
cmp
addr16
mov
and
mov
je
pop
jg
mov
ret
repz
mov
or
les
outsb
dec
cli
sbb
int3
lret
test
ss
in
inc
hlt
xor
jae
pop
dec
cli
pop
jg
jmp
push
popf
add
and
ret
std
xchg
or
repnz
pop
or
or
or
in
mov
lahf
fldl
sbb
xor
clc
jb
and
push
cmp
lcall
bound
movsb
and
jae
inc
sti
jae
lods
call
rcll
pop
adc
aam
decl
mov
pop
pop
outsl
loop
cmpsb
andl
xchg
popa
push
mov
out
mov
push
cld
pushl
jp
or
hlt
lods
mov
ret
mov
inc
enter
incl
mov
mov
fdivp
mov
ret
pushf
lea
test
adc
rolb
jmp
jl
xor
push
movsl
push
push
sbb
jmp
cmpsb
xchg
call
pusha
lcall
in
dec
pusha
sub
jbe
jge
mov
sarb
insb
shlb
add
pop
movsl
lcall
jge
icebp
pop
push
mov
xor
aas
shlb
jp
int3
push
je
imul
or
ljmp
clc
stos
pop
xchg
lock
or
xchg
jl
in
dec
imul
ljmp
and
test
movsl
adc
lods
mov
cltd
sub
outsl
sub
sub
nop
add
lock
popf
lock
movsb
jo
cmp
loopne
and
xchg
hlt
inc
mov
or
jb
jns
xor
push
inc
and
imul
push
loopne
lods
add
and
sub
mov
cs
sub
or
sahf
cmp
add
scas
in
xor
call
xchg
add
idivl
call
cmpsl
inc
cltd
lcall
mov
ljmp
jmp
inc
popf
inc
jno
sbb
int
xor
outsl
add
cld
and
out
arpl
push
cmp
call
gs
xor
xchg
and
shlb
lods
adc
mov
xor
add
pop
push
sar
lret
in
pop
lods
cmp
jl
mov
push
dec
sub
lea
ret
shll
test
repnz
lods
cmp
xchg
test
add
lcall
test
dec
je
js
dec
xchg
mov
or
cmc
or
jg
mov
sub
jae
dec
cmp
pushf
add
push
sbb
mov
or
cmp
xorb
pop
sbb
jge
push
pop
stos
inc
outsb
adc
sub
cmp
jmp
mov
repz
testb
pop
jg
data16
decl
daa
cmpsl
repz
mov
push
mov
and
cld
cwtl
mov
pop
jmp
push
movsl
test
inc
pop
repz
jno
push
or
rorb
mov
sub
fists
scas
clc
jl
jg
scas
mov
inc
add
in
dec
je
cmp
decl
add
fisubs
shlb
cld
std
ds
lock
movsb
jbe
lahf
and
inc
aas
mov
pushl
enter
and
mov
cmpsl
fnstenv
xchg
push
scas
sbb
fmuls
insl
adc
add
decl
dec
popl
aam
push
jae
push
sbb
aam
scas
call
jne
push
mov
cli
dec
sahf
sbb
mov
popf
imul
ss
mov
adc
jmp
pop
addr16
sarl
push
out
scas
rcl
jns
xchg
mov
cltd
add
jbe
jmp
mov
aas
aam
mov
cmpsl
cmp
data16
lds
mov
pushl
and
fwait
mov
xchg
lret
and
xchg
sub
nop
call
repnz
sub
dec
stos
push
sbb
mov
scas
push
dec
fnstcw
popa
sub
call
jmp
test
js
je
dec
xchg
ljmp
cmpb
mov
push
dec
dec
lcall
pop
out
pop
cs
mov
std
sti
pushf
push
leave
ret
aam
lods
push
jmp
rep
call
dec
adc
add
aas
mov
arpl
or
fisttpl
call
imul
and
lock
cmp
movsb
je
mov
cltd
push
ljmp
ljmp
insl
xlat
fisttps
in
ja
cli
in
repz
imul
cmp
stos
mov
sbb
imulb
sti
mov
div
out
jp
adc
pop
fiaddl
cmpl
sub
gs
out
cmc
xor
aad
nop
sbb
out
mov
fdivl
out
xchg
nop
mov
lcall
xchg
mov
pop
or
mov
sbb
lock
ljmp
pop
sbb
ret
cmc
out
xchg
mov
ret
cs
or
test
incl
xchg
inc
loope
and
add
stc
push
push
enter
incl
pusha
outsb
imul
pushf
push
cmp
jno
adc
push
xor
loopne
jecxz
cmp
jae
mov
sub
adc
mov
xchg
pop
jno
jno
dec
xchg
mov
in
stc
add
xchg
push
push
adc
xchg
or
ret
jmp
adc
movsb
fisttps
sahf
add
sub
mov
arpl
js
fidivl
pop
inc
add
cmp
js
orb
rcrl
mov
and
iret
pop
push
xlat
and
pop
movsl
xchg
sub
cmc
cmp
out
jb
sbb
fcoms
pop
lea
sbb
push
data16
mov
push
fsubp
shl
pop
add
test
scas
mov
mov
pop
lods
fcomps
xchg
mov
cmc
sbb
pop
fcompl
dec
pop
imul
mov
mov
pop
adc
in
and
arpl
arpl
cmc
outsb
push
incl
dec
adcb
cwtl
pushf
dec
dec
cmpb
mov
pop
cmp
cmp
lcall
es
mov
mov
scas
js
lea
daa
cli
test
sub
jbe
in
stos
xchg
aad
cmp
cmp
push
je
jg
mov
mov
xchg
adc
mov
xlat
sarb
mov
dec
xor
jmp
lahf
rcll
call
fsubrl
adc
divl
pop
cld
jno
adc
mov
popa
mov
pusha
jecxz
mov
and
les
pop
sbb
mov
out
int3
pop
imul
mov
nop
repnz
sbb
incl
movsl
lods
xchg
ret
pop
repz
push
in
in
pop
cmc
decl
inc
sub
lds
pop
popa
loop
mov
sahf
jmp
push
inc
leave
punpcklwd
mov
in
jns
jmp
cmp
push
fidivl
cwtl
cwtl
sub
bound
jle
jae
stos
pusha
jg
inc
cmc
xor
and
fisubl
pop
pop
sub
pop
sbb
lret
decl
lcall
add
xor
mull
arpl
sbb
dec
lahf
imul
cltd
cmovle
and
push
movsb
in
add
sbbb
stos
push
pop
jae
inc
dec
dec
leave
push
pop
data16
jmp
outsl
sbb
insl
jns
xorl
jle
jne
adc
out
pushf
stc
sub
lcall
popa
in
out
push
jg
and
xor
pop
pop
pop
push
scas
iret
jo
jg
push
dec
cmc
dec
les
icebp
fildl
sarb
mov
call
cli
mov
aas
leave
cli
mov
sbb
outsl
sbb
dec
push
inc
adc
and
and
push
mov
mov
mov
add
inc
decl
xchg
inc
fdivrl
into
in
imul
dec
mov
dec
cld
mov
call
test
mov
sbb
mov
pop
stos
or
loope
ss
mov
ljmp
xchg
mov
mov
xor
sub
xchg
jge
or
inc
enter
into
inc
inc
or
mov
ljmp
mov
pop
por
push
xchg
mov
push
cltd
cmp
pop
mov
cld
clc
dec
push
mov
and
fstpl
or
xchg
inc
xchg
or
imul
mov
idivl
xchg
pop
mov
jge
cmp
and
loopne
enter
cmpsl
and
jge
cmp
pushl
fwait
clc
jle
outsl
cld
dec
ficoms
sbb
ret
call
mov
mov
sbb
mov
aas
fadds
sahf
movsb
fwait
cmp
mov
sbb
shll
ljmp
cli
xchg
cmp
cmpsb
push
cmp
sbb
rorb
dec
call
jo
shlb
cltd
repnz
ret
push
pop
inc
xchg
dec
xchg
adc
push
add
imul
push
push
jecxz
cltd
fwait
sarl
and
test
pop
icebp
ljmp
test
pop
leave
inc
test
mov
or
dec
cli
inc
cs
mov
and
movsb
inc
or
mov
mov
lock
add
call
dec
jp
add
sarb
movsl
dec
negl
fbstp
incl
pop
pop
gs
pop
daa
cs
mov
fstl
ljmp
cmp
adc
in
jne
icebp
cmc
adcl
decl
jg
ljmp
cltd
es
xchg
fldt
push
mov
sti
xor
loopne
lods
and
adc
xchg
test
out
push
pop
stos
xor
les
lahf
inc
lcall
jne
aam
mov
fldenv
mov
fneni(8087
sbb
decl
mov
into
into
sub
aaa
ja
add
xchg
pushf
xchg
jl
pop
xchg
sbb
or
aad
mov
dec
outsb
adc
xchg
sbb
or
scas
clc
call
xlat
inc
sbb
adc
movsb
cmp
sbb
lock
mov
scas
inc
scas
cli
dec
call
and
pop
rcrl
xor
mov
popf
out
roll
decl
movsb
pop
in
or
inc
jge
mov
lcall
ja
xchg
rcrb
push
fisubs
mov
mov
mov
aad
mov
call
loopne
mov
pop
insb
xor
inc
stc
sub
jb
dec
inc
clc
mov
push
adc
mov
addr16
out
imul
or
and
lahf
inc
mov
enter
and
popa
mov
repz
push
inc
dec
inc
insl
je
inc
push
cli
lcall
cmpb
andb
add
lcall
add
fildll
jo
mov
mov
dec
xlat
pop
and
fstl
sbb
andb
mov
cmp
sbb
xchg
divl
daa
ret
loope
sar
pushl
pop
aas
mov
sub
jns
fnstsw
loop
imul
push
jmp
in
pop
adc
cld
fstl
ljmp
adc
xchg
movsb
insl
std
and
mov
cmc
jge
stos
jecxz
push
fistpll
test
out
mov
call
push
adc
mov
mov
adc
pop
add
xchg
pop
in
sar
mov
ret
lahf
mov
outsl
cmp
xchg
mov
mov
pop
jnp
lret
icebp
sbb
inc
dec
andb
jno
mov
or
rcrl
mov
pop
ja
mov
xor
out
fldt
jecxz
pop
iret
loop
fucomi
inc
xorl
xor
insl
mov
pop
pop
ss
mov
fstl
daa
inc
fdiv
mov
movsb
mov
test
into
repnz
cmp
jmp
xor
push
push
jecxz
adc
ror
mov
add
in
xchg
ljmp
pusha
lahf
jecxz
leave
lret
hlt
ds
js
ds
std
daa
stos
sbb
loope
aad
sbb
cmp
jmp
or
fstp
imul
loopne
pop
jns
jg
shrb
inc
stos
adc
push
inc
xor
out
adc
ja
imul
mov
call
fadd
pop
xchg
pop
shrb
jg
imul
scas
enter
dec
mov
sub
mov
jnp
mov
fs
shr
jmp
add
pop
jl
imul
movsl
repnz
jno
adc
sub
pushf
xor
mov
add
jbe
out
sub
int3
jbe
lea
mov
mov
movsl
push
aaa
or
nop
jecxz
inc
mov
test
rorb
movsb
xor
aaa
cld
incl
adc
sbb
or
test
xor
cld
pushl
idiv
pushf
push
shlb
push
mov
scas
and
mov
push
mov
jnp
fisubs
pusha
movsl
leave
jle
dec
mov
pop
add
sub
or
fimull
xchg
sahf
sbb
push
dec
insb
call
mov
fwait
cmp
movsl
mov
jg
dec
or
pop
ud0
ljmp
cld
sub
out
cmp
or
lret
incl
daa
mov
adc
or
call
push
or
mov
inc
dec
aas
std
push
pop
testl
adc
ljmp
arpl
stos
or
jp
push
fwait
mov
cmp
lcall
push
mov
lret
jp
add
inc
adc
into
cltd
push
inc
decl
aam
test
cwtl
mov
push
mov
xor
push
mov
xchg
dec
sub
fwait
sub
lcall
mov
inc
push
xchg
sub
push
push
pop
lret
push
mov
imul
stos
and
cmp
out
int
mov
and
lods
mov
sbbl
jns
scas
fiadds
fcomip
leave
fcoms
cld
in
dec
add
xchg
idiv
in
jns
cmc
out
and
lret
add
dec
bound
xchg
sub
jno
aad
stos
and
fdiv
lea
jg
aad
sahf
push
sub
fcompl
inc
dec
rol
xorb
push
mov
mov
jecxz
call
jge
shl
aam
add
jecxz
ret
les
mov
mov
cmp
jmp
and
adc
loopne
pop
in
xchg
sbb
lcall
les
lahf
fidivrl
push
add
in
pop
loopne
sti
pop
test
btr
jg
mov
or
pop
and
jecxz
test
loopne
jg
inc
pop
xchg
xor
lahf
sub
mov
shr
in
push
push
jnp
test
mov
and
das
sbb
aas
pop
mov
mov
push
pop
dec
cltd
sti
sub
cwtl
push
outsl
add
jl
jo
or
sub
inc
inc
or
lcall
mov
mov
imul
xchg
lods
test
jg
loope
insb
sub
lcall
repnz
jmp
cmp
insl
adcl
jle
insl
dec
lods
stc
and
mov
push
enter
sbb
jg
roll
fsubrl
push
fistpl
push
xorb
nop
cld
test
xor
mov
push
sar
or
cmp
dec
cmp
add
jb
icebp
fs
dec
cld
mov
mov
dec
sbb
fldenv
std
enter
push
inc
cs
cmp
lret
jecxz
es
rol
fcomps
mov
ds
cltd
cwtl
sub
jmp
or
dec
sbb
loop
inc
xor
cld
pop
push
in
mov
mov
aam
dec
dec
jne
jg
push
in
rcr
xor
jnp
inc
and
std
sbb
loopne
imul
xchg
test
fdivr
pushl
fcmovne
dec
out
adc
adc
outsb
jnp
les
jno
andl
push
fcompl
sahf
ss
mov
pop
or
orb
fcomip
and
sub
fdivrs
movsl
daa
jl
rcrl
lret
pop
mov
mov
js
cwtl
outsb
stos
idivl
sbb
mov
cwtl
cwtl
stc
clc
sbb
or
inc
mov
xor
sub
push
push
xor
ljmp
je
add
and
sbb
das
push
mov
je
incl
or
movsl
rorl
fadds
in
imul
xchg
and
decl
aam
enter
cmc
xchg
add
mov
aad
xlat
fdivr
call
dec
push
in
dec
inc
loope
leave
iret
mov
mov
mov
jnp
mov
or
decl
inc
popa
cmp
cmpsl
movsb
sbb
hlt
es
mov
in
adc
cmp
jo
incl
fidivrs
and
les
inc
xchg
pop
popf
cmp
sti
call
cmp
decl
pusha
jle
adc
mov
dec
scas
je
lds
jecxz
out
add
stos
xor
insb
les
xchg
add
sbb
movsb
cld
push
mov
add
clc
pushl
dec
loope
std
dec
into
mov
ffreep
lea
pop
clc
lds
xchg
ja
lcall
dec
add
mov
inc
aas
scas
loopne
daa
movsb
fstpt
data16
adc
and
ljmp
xor
mov
orb
xor
fwait
or
hlt
mov
stc
or
dec
popf
pop
mov
pop
xchg
sbb
popf
pop
iret
or
add
psllq
out
xchg
lock
inc
cmp
push
pushf
cmp
out
xchg
xchg
ss
gs
out
lods
push
pop
and
pusha
xor
pop
jb
into
cmp
mov
mov
and
or
inc
push
jae
pop
jmp
lcall
dec
adc
push
xchg
addr16
push
ja
repz
xchg
fdivr
cmp
or
mov
xor
pop
js
popa
aam
adc
mov
jp
jnp
xchg
sar
push
decl
jge
jg
andb
cmpsl
pop
mov
xor
mov
aam
jns
aas
or
fwait
call
jecxz
loop
jmp
sbb
mov
jno
subb
jo
cli
adc
arpl
rorl
mov
imul
xchg
mov
sub
lret
cmpsb
mov
mov
loopne
inc
pop
mov
cmc
call
jg
push
push
push
sub
cmp
ret
out
call
push
rcr
mov
jl
daa
pop
pop
sbb
cmp
clc
outsl
inc
xchg
stos
fs
dec
cmpsl
xor
std
inc
loope
loope
add
imul
sbb
fnsave
sbb
outsl
xor
or
cli
out
ja
adc
push
pop
mov
inc
mov
xor
cmp
adc
pusha
cmp
mov
hlt
push
leave
add
cwtl
mov
push
jne
cmp
ljmp
or
dec
mov
rcr
xchg
xor
les
ljmp
gs
rclb
xor
shlb
pop
and
popf
incl
mov
mov
or
inc
stos
pop
ret
jb
pop
push
pusha
push
sub
mov
dec
pop
aaa
adc
mov
sub
mov
fdivrl
aam
xlat
pushl
sub
jne
aas
or
movsb
jge
adc
jne
lahf
mov
push
mov
lret
xlat
or
mov
scas
inc
daa
lea
jle
or
in
clc
sub
jne
adc
loop
add
pushf
repnz
cld
ljmp
add
ficoms
das
shlb
and
sub
lock
xor
push
cmp
jl
and
inc
or
loope
pop
pop
mov
lock
fcmovbe
std
cmc
imul
pushl
pop
repnz
sub
stos
pop
dec
pop
push
adc
in
pop
pop
je
add
mov
dec
or
and
flds
xorb
lods
inc
jns
push
lds
in
std
fwait
push
fsubl
out
call
jb
orl
sbb
imul
mov
call
cli
subl
mov
cli
loop
xchg
mov
and
and
mov
cmp
push
pushl
mov
xlat
pop
sbb
push
outsb
fsubs
outsl
in
mov
sar
lea
or
pop
cmpsl
cmp
fnstcw
mov
gs
lods
ds
mov
lock
decl
cmp
xchg
std
cs
stc
idivb
out
sub
inc
movsb
in
bound
ret
jno
call
popf
icebp
icebp
iret
push
pop
in
movsb
cmpsb
sti
enter
xor
cmpsl
std
in
cwtl
xorl
daa
ljmp
xor
mov
scas
jp
cmpsl
inc
subb
inc
cmpsl
mov
out
ljmp
or
jnp
jmp
lcall
or
inc
imul
mov
cmp
push
aas
fwait
ljmp
jmp
xor
outsl
mov
loope
adc
jecxz
rorb
lret
test
mov
inc
add
mov
test
inc
jbe
pop
add
sarb
fldenv
scas
xchg
pushf
cltd
sbb
fistl
cmp
sub
mov
add
negl
xor
or
dec
cltd
movsl
aam
pop
enter
call
mov
pushf
push
xlat
out
add
mov
push
pop
xor
push
icebp
cmp
call
push
jmp
push
xchg
pushf
inc
push
std
call
mov
pushl
cld
in
test
inc
popf
cmp
jno
add
push
jmp
and
inc
sbb
dec
decl
cli
jne
test
or
shrb
out
mov
pop
mov
dec
mov
push
stos
ror
xchg
out
lods
cmp
push
push
aad
push
add
movsl
test
xor
icebp
jb
movsl
fdivr
push
pop
loopne
cmpsl
inc
push
cmp
pop
dec
inc
mov
insb
out
xchg
out
ljmp
cli
jmp
push
sbb
cmp
repz
enter
cmc
pop
test
cmpsl
or
pop
jo
decl
lock
cmp
out
dec
jl
inc
mov
xchg
dec
call
pop
insl
adc
fsubs
jo
mov
adc
leave
mov
jp
mov
sti
inc
test
mov
pop
jo
in
cmpl
fmul
js
inc
int
ss
xor
mov
cmc
mov
cli
decl
out
dec
add
xchg
ljmp
fwait
dec
xor
add
sbb
out
cwtl
clc
aas
lahf
sahf
jns
popa
xchg
xor
test
jle
pop
adc
push
xchg
in
int
and
sar
out
adc
dec
and
xchg
sub
test
mulb
mov
sbb
jg
repnz
or
inc
gs
test
pop
pop
addb
sar
mov
js
push
rcll
sub
add
dec
rcll
cld
stos
or
popa
pop
aaa
mov
daa
movsb
divl
ljmp
cli
push
push
or
test
test
xchg
jns
jne
push
lahf
icebp
aas
dec
icebp
iret
push
mov
iret
addr16
fdiv
jl
sbb
jecxz
fbld
test
clc
loopne
xor
shlb
and
xor
repnz
lods
inc
insb
jne
push
std
decl
repz
mov
popa
movsb
sbb
lods
xchg
mov
xor
fmul
les
into
xchg
inc
mov
mull
or
xchg
iret
imul
in
and
cmp
mov
fucomip
test
jl
cmp
out
dec
rcll
in
xor
jg
cli
sahf
sahf
repnz
stos
jg
incl
jle
in
bswap
xchg
cmpsb
and
adc
lock
mov
pop
rol
pop
push
xor
pop
mov
add
scas
pop
mov
test
add
dec
cs
add
jg
jne,pn
push
push
cmpsb
push
mov
jmp
inc
pop
ret
mov
mov
and
mov
mov
bnd
jnp
insl
push
jecxz
insl
push
mov
mov
sarb
cld
cmp
int3
shl
jns
mov
repnz
jge
arpl
nop
stos
pusha
xchg
push
jo
pushl
push
mov
mov
or
in
mov
lahf
imul
aas
jno
sti
sbb
and
or
call
pop
insb
add
clc
cmp
mov
sub
jb
push
mov
mov
sub
mov
jmp
int3
jmp
and
push
dec
loopne
jg
adc
mov
ss
cmp
prefetchwt1
sub
test
adc
xor
sbb
lcall
cmp
aas
ljmp
cmp
fbld
and
jge
inc
mov
dec
clc
les
jmp
out
push
cmpsl
push
ljmp
lods
inc
jo
pop
xlat
fsubs
push
ret
sbb
cld
cmp
hlt
aam
sub
jb
je
pop
xchg
adc
in
and
cs
pushl
push
jne
jno
sbb
sahf
ret
adc
jno
pop
cli
test
and
cmp
lcall
inc
out
push
mov
and
cmpsb
push
test
aam
ret
dec
jle
lock
adc
shll
arpl
call
decb
inc
into
push
test
inc
cmp
fst
inc
jge
idiv
decl
lret
xchg
shl
sahf
cmc
aad
mov
lods
jle
ficoml
mov
xchg
push
xchg
add
cmp
fnsave
add
or
pop
decb
test
add
push
mov
mov
dec
into
cs
scas
test
sub
sub
mov
or
out
fildll
rcll
sbb
call
ljmp
aas
sbb
aaa
aad
ss
shl
repnz
jb
nop
xchg
testl
add
push
ss
je
cmp
std
xchg
stc
sbb
inc
mov
fcomps
in
jnp
push
cs
push
sub
adcl
dec
push
cwtl
mov
adc
mov
cmpsl
mov
xor
ret
cmpsl
mov
or
adc
sbbl
adc
cwtl
int3
jg
call
mov
push
lahf
clc
mov
test
lods
sbb
repz
fcoms
adc
enter
adc
xchg
movb
gs
inc
inc
or
mov
mov
mov
adc
rcl
sbb
dec
adcb
in
add
or
mov
test
stc
sub
test
aad
mov
stc
int
add
fcomip
push
adc
mov
push
mov
sbb
adcb
stc
ds
jmp
outsb
or
sbbl
jle
ljmp
inc
repnz
cwtl
test
adc
sbb
xor
jmp
scas
mov
xchg
dec
push
add
test
sub
cmp
push
push
sarl
ret
popf
lds
nop
les
jne
mov
or
call
push
sub
enter
pop
push
jbe
lahf
dec
imul
movsb
mov
stos
test
fildll
cli
incl
lock
mov
or
scas
cli
ljmp
jne
push
xchg
bound
lret
movsb
xchg
adc
adc
ljmp
iret
xor
stos
mov
sbb
mov
cmpsb
cld
mov
mov
enter
ljmp
stos
jmp
mov
das
fldcw
adc
decl
cli
aas
lods
dec
pop
int
mov
push
cmp
lea
mov
xor
pop
pop
decl
and
aas
lea
std
and
fbld
int
xchg
cmp
cmc
insl
sub
incl
addb
dec
insb
gs
movsl
cmp
xor
dec
cld
std
mov
or
sub
enter
ret
dec
test
insl
mov
adc
mov
sbb
pushl
stc
int3
xchg
mov
std
dec
les
mov
pop
out
hlt
cmp
xchg
adc
cld
ja
notl
fsubs
mov
inc
cld
jg
jne
pop
mov
push
pushl
ljmp
add
jp
andl
pop
mov
inc
jg
in
jne
frstor
data16
mov
neg
fmuls
xor
mov
mov
decl
stos
insb
jbe
jg
lea
pop
loopne
mov
jl
loop
dec
repz
pop
js
mov
daa
mov
imul
andl
in
lahf
icebp
mov
pop
shll
mov
movsl
lods
cmpsl
jno
mov
fdiv
or
cmp
and
decl
orb
int3
in
js
out
icebp
mov
jmp
adc
andl
sbb
mov
call
call
gs
add
test
ror
pop
mov
cmp
mov
das
rcrb
push
pop
movsb
sbb
loop
ret
pop
xchg
orl
or
push
mov
push
xor
mov
lods
test
or
hlt
ss
repnz
filds
pop
insl
add
lock
xchg
adc
fwait
push
inc
fmull
fs
xchg
inc
mov
sar
testb
fidivl
outsl
add
adc
ds
adc
decl
sbb
ret
jl
adc
stos
push
jmp
dec
out
lods
pop
sarl
fstpt
ret
ljmp
pop
jge
xchg
mov
xor
std
movsl
push
je
lret
out
push
jl
mov
hlt
pop
jae
in
mov
jecxz
stos
aaa
mov
and
addr16
sub
add
call
imul
mov
outsb
xchg
jno
push
mov
icebp
test
mov
decl
ret
xchg
aam
fs
sbb
jae
in
scas
cwtl
ljmp
mov
aaa
std
jmp
push
lea
cmpsb
out
push
shr
and
jne
shll
ljmp
mov
test
xchg
pop
outsb
push
xor
lock
dec
fadd
pop
jmp
ret
jno
pop
cltd
cmp
aaa
mov
pusha
inc
and
test
mov
xor
and
mov
adc
sbb
inc
dec
pusha
cmc
xor
push
imul
decl
mov
cmpsl
rcrl
dec
mov
cmpsb
xor
sub
dec
adc
xor
fldenv
mov
test
in
xchg
divb
aaa
xor
inc
add
or
dec
sub
outsl
sbb
inc
mov
dec
lods
test
push
jg
jg
or
in
or
mov
outsb
push
sub
cmp
hlt
das
cli
je
push
lret
xchg
jge
cmpsb
inc
lcall
lds
ljmp
shr
sub
jo
lahf
out
and
imul
and
sti
dec
lahf
pop
pop
and
mov
sbb
mov
cld
arpl
push
or
dec
icebp
xchg
mov
ret
rorb
pop
sarb
js
repz
lcall
out
call
xor
pop
jno
std
dec
or
pop
xchg
inc
movsb
call
mov
dec
in
sbb
add
push
and
mov
cmp
fbld
inc
call
pop
mov
dec
mov
xchg
dec
leave
or
cmp
mov
icebp
push
ljmp
fcomps
push
mov
aad
sub
pop
jnp
ret
and
int3
cmpb
pushl
mov
jae
out
repz
ljmp
movsb
pop
sub
pop
inc
mov
popa
xchg
jmp
out
test
push
and
dec
outsb
aaa
or
jnp
mov
mov
or
and
or
mov
sbb
lods
cld
nop
stos
out
sti
xor
xchg
cld
mov
hlt
and
adc
add
rcrl
sbb
dec
lcall
sahf
or
and
fisubrl
insl
xor
es
sbb
pop
mov
pushl
sub
pop
daa
daa
and
cmpsb
rclb
mov
outsl
push
inc
jl,pt
jnp
outsl
shrb
sub
fdivrl
xchg
test
divb
xchg
push
adc
imul
pushl
jecxz
ljmp
push
xor
jns
lods
jb
mov
mov
cmpsl
iret
bound
clc
xchg
pop
aad
icebp
push
xor
outsb
jne
push
push
clc
imul
jmp
lock
sbb
mov
fisttpll
js
lock
popa
outsb
pushf
fs
adc
cmpsb
cli
mov
xchg
dec
xlat
cli
adc
lahf
and
add
jae
lret
mov
iret
das
ret
popf
pop
adc
xchg
arpl
jmp
lods
push
jge
lahf
pop
ljmp
mov
add
sahf
pop
and
adcb
jmp
das
jo
add
pop
ja
mov
dec
rorl
sub
std
ljmp
movsb
fstl
xor
add
ss
sbb
cmp
cs
out
push
loopne
mov
sar
decl
cmp
cs
pop
xor
and
hlt
mov
lahf
cltd
mov
xchg
add
bound
scas
stc
push
push
fwait
lcall
adcb
cli
dec
jmp
insb
mov
xor
push
jae
iret
inc
lods
stos
call
dec
push
addb
lds
test
lret
es
loope
pop
jg
outsb
mov
popf
and
cmp
loop
pop
stc
fidivs
inc
cli
loopne
push
lods
out
mov
stos
pusha
sti
mov
add
xor
out
outsb
or
add
shlb
push
inc
call
jmp
mov
jl
pushf
push
pop
fdivrl
in
cmp
int3
push
inc
add
sub
pop
orb
mov
out
clc
mov
add
push
and
xor
jbe
insl
hlt
popf
sub
incl
bound
iret
lahf
movsb
push
adc
pusha
jne
test
cmp
scas
cli
push
stos
and
mov
jnp
dec
push
xor
push
xchg
and
fnstenv
add
jmp
test
pop
test
push
mov
in
sahf
stos
pop
fnsave
rol
xchg
xor
dec
xchg
pop
orb
scas
adc
inc
fs
je
lahf
or
aam
fnstenv
jmp
insw
incl
rol
mov
sbb
ficoms
lds
repnz
xor
inc
mov
pushl
das
movsl
push
xor
test
test
ja
jmp
popf
dec
outsl
mov
outsl
pop
jno
add
fcomip
bnd
or
push
aam
cwtl
mov
mov
movsl
cli
pushl
mov
ljmp
mov
adc
stos
xor
lcall
das
adc
gs
movsl
fimuls
jnp
ffree
ljmp
lcall
call
test
and
cmp
mov
pop
nop
rolb
jl
adc
decl
std
and
pop
cwtl
std
cmp
lahf
mov
test
inc
mov
xor
decb
ljmp
push
sub
fildl
mov
incl
dec
inc
int3
fstpl
xor
fcompl
jmp
addb
nop
mov
lea
add
cltd
jbe,pn
inc
xchg
dec
fsubrl
push
popl
mov
enter
ljmp
add
sub
scas
mov
sbb
aaa
cmp
push
add
jo
or
sub
mov
and
popf
push
mov
loop
cld
call
testl
push
inc
fdivr
leave
ds
cmp
mov
pop
xor
lds
mov
loop
and
adc
filds
pop
sbb
ss
out
mov
fbstp
mov
or
packssdw
mov
test
inc
pop
mov
push
inc
mov
fwait
mov
call
fnstcw
xorl
test
pop
call
jg
lcall
xchg
mov
mov
movsl
sub
repz
mov
pushl
inc
xchg
push
call
stos
push
and
rcll
sbb
sub
in
jg
sti
movsl
cld
ss
popa
add
jge
xchg
dec
test
jns
pop
mov
push
lcall
xchg
mov
icebp
mul
sbbb
pop
inc
mov
adc
add
pop
jg
cmpsl
push
daa
inc
imull
mov
mov
ds
dec
sbb
mulb
xor
pushf
scas
cmp
xchg
in
fidivl
mov
movsl
inc
xchg
movsl
push
xor
divb
xchg
call
add
cmp
jp
shlb
push
pop
ret
outsb
or
out
sbb
nop
outsb
xor
pop
pop
sbb
or
pop
fxch
mov
call
std
ljmp
jmp
mov
dec
mov
xchg
es
aam
lods
repnz
sub
das
clc
pop
loopne
in
push
push
cmp
dec
sub
jmp
clc
mov
push
jb
loop
mov
test
in
test
xchg
enter
stc
dec
pop
dec
mov
lcall
outsb
mov
jns
sahf
loope
sub
pusha
out
push
test
cld
ljmp
xchg
pushf
adc
push
popf
cmp
dec
loope
mov
fyl2x
xchg
lcall
mov
lds
inc
sub
movsl
shll
lds
cmpl
les
rcrl
subl
mov
nop
jg
and
test
mov
repz
mov
jno
cmp
leave
sbb
enter
xchg
test
outsl
dec
lahf
mov
call
cmpsl
popa
and
or
inc
mov
sub
xor
daa
mov
clc
test
adc
inc
jnp
outsb
cli
sahf
inc
mov
mov
adc
lcall
lock
mov
jo
mov
jp
push
addr16
pop
std
push
bound
cmp
movsl
cmp
or
or
jne
xchg
cwtl
movsl
aad
pop
pop
pushl
mov
inc
sub
push
mov
xor
push
lock
jge
mov
dec
lock
or
xlat
xor
or
fistpl
cmp
in
in
pop
hlt
cli
sub
decl
mov
loope
hlt
xor
push
cltd
test
add
rolb
jae
and
cmp
pop
mov
sbb
cmp
outsl
mov
mov
mov
and
inc
jg
mov
out
filds
push
movsbl
cld
outsl
fcmove
stc
mov
out
ret
jle
insb
add
jns
mov
inc
inc
inc
pop
ss
outsb
xor
incl
cmpsl
mov
cmpsb
ljmp
lahf
xchg
sub
jo
cmp
mov
adcl
mov
les
jo
aad
sbb
mov
faddl
call
dec
pop
subb
jge
and
test
outsb
inc
sbb
mov
test
xor
xchg
or
jl
xor
ljmp
push
mov
mov
in
xor
fcom
aaa
lcall
xor
mov
movb
ret
imul
or
mov
mov
sbb
mov
cmp
push
outsl
aad
sbb
lds
jo
sbb
fiadds
test
and
or
sub
out
and
adc
cwtl
mov
cmpsb
mov
push
adc
push
lea
jne
addr16
enter
pop
xchg
cli
rorb
lock
je
sti
add
mov
add
je
mov
ljmp
cltd
popa
xchg
fistps
fldcw
add
cmc
sub
push
stos
sbb
sub
or
popa
mov
std
push
xor
stos
xor
lahf
inc
clc
mov
bound
inc
sub
adc
pushf
cmpb
sbb
leave
or
out
cld
jno
sarb
jmp
cmp
movsb
or
dec
add
mov
ljmp
movsl
and
out
adc
push
jns
aam
scas
stos
adc
iret
std
mov
hlt
adc
lcall
xor
xchg
add
or
add
xor
shll
add
jmp
or
lcall
outsb
movsb
das
nop
dec
ja
pop
dec
adc
enter
fcmovbe
push
xchg
test
mov
pop
flds
or
mov
imul
jnp
mov
imul
xor
lcall
fcomp
push
sub
sbb
adc
out
add
jg
inc
xchg
mov
ret
pushl
daa
jge
mov
std
mov
decb
lock
sarb
cli
notl
mov
fisttpl
dec
sti
mov
fdivp
sbb
or
test
add
call
mov
jecxz
add
jmp
insl
lahf
pop
mov
push
and
into
daa
std
incl
inc
sbb
dec
int3
inc
xor
movsl
cltd
pop
daa
xor
dec
cmp
mov
pop
cmpb
add
fdivrl
in
inc
jge
insb
jae
xor
les
ds
int3
jmp
incl
pushf
push
pop
cmc
adc
and
mov
or
loop
stc
pop
roll
in
subb
je
push
aaa
mov
data16
xchg
jge
iret
into
xchg
pushf
and
decl
outsb
cmp
mov
mov
mov
lds
cmp
sub
mov
decl
mov
lds
lea
adc
cmpsl
mov
jnp
leave
ss
mov
sbb
sub
movsb
mov
jb
clc
push
frstor
and
in
pushl
mov
push
push
or
aam
fdivrl
dec
add
mov
jb
dec
add
sub
call
pop
cmp
rolb
mov
dec
mov
cmp
xchg
inc
mov
cmp
pushl
jmp
testl
imul
mov
jae
movsl
mov
inc
std
cmp
ds
outsl
mov
lcall
outsb
mov
aad
sbb
ljmp
sbbb
mov
add
fdiv
sbb
test
dec
xor
dec
jmp
mov
stos
inc
jl
call
pop
aad
lcall
nop
adc
push
cmpsb
mov
mov
dec
popf
hlt
mov
ljmp
jnp
mov
jg
inc
mov
and
repnz
lock
lods
cli
jp
ljmp
mov
nopl
mov
aaa
pop
aaa
inc
xor
pusha
test
leave
mov
loopne
call
sahf
cld
or
movsb
lods
push
out
sbb
push
das
xchg
sahf
and
inc
loopne
aad
sbb
mov
test
arpl
xchg
pop
xchg
test
ljmp
inc
jnp
clc
adc
pop
mov
xor
jge
and
lcall
sub
js
aam
inc
sbb
and
mov
cwtl
pop
imul
mov
out
cmp
test
js
push
push
stos
inc
push
int3
xlat
sbbb
data16
pushl
loopne
inc
jle
push
or
mov
stc
inc
icebp
movsl
lock
test
jle
or
nop
fs
inc
ljmp
jecxz
out
xor
inc
int
cmpsb
mov
jl
mov
sahf
in
and
mov
pop
mov
ret
fcmove
and
jne
imul
das
enter
push
sub
out
jnp
jnp
lea
xor
in
lock
pushl
inc
insl
divl
push
cmpsl
hlt
lea
adc
xchg
cwtl
cli
push
xor
ja
jmp
xorb
adc
inc
xor
cmp
mov
mov
sbb
adc
mov
sub
sub
jnp
icebp
ss
fcoms
call
xchg
jae
xchg
mov
testb
jmp
aam
iret
gs
sbb
xchg
shrl
out
inc
cld
mov
pop
pop
and
pop
xchg
xchg
dec
and
inc
testb
sti
leave
call
mov
nop
ret
iret
lret
and
pop
scas
mov
in
test
dec
call
adc
push
psubb
ret
pop
dec
push
aas
mov
mov
movsl
insb
mov
adcb
pop
stc
ss
rclb
ror
push
pop
cwtl
jns
rcl
adc
push
cmp
adc
fldl
cmp
adc
sbb
and
in
neg
sub
lcall
lcall
add
repz
jne
pop
lds
loopne
add
inc
mov
xchg
push
xor
mov
call
xchg
fdivrl
adcl
adc
cs
mov
jg
fldcw
call
orl
inc
jb
inc
mov
xor
mov
rolb
lock
incl
jb
sahf
insl
sbb
pop
or
cmp
sub
cli
mov
out
decl
test
test
mov
test
dec
xchg
xchg
arpl
lcall
adc
or
gs
mov
pop
rorb
adc
jns
add
lds
pop
movb
or
mov
cmp
adc
sub
mov
fcmovbe
int
or
les
xchg
cmp
mov
pushl
push
sahf
loope
addl
lret
cmc
adc
decl
loop
aam
sbb
mov
aaa
ret
stos
xor
call
mov
bound
loope
xchg
ja
out
sub
mov
nop
scas
mov
idiv
out
clc
cmp
push
insl
stos
sbb
jo
adc
sbb
pop
cmp
jmp
pop
dec
in
std
push
adc
sub
xor
adc
sbb
imul
xchg
and
popa
int3
bound
lcall
pop
insb
jg
push
hlt
push
mov
out
push
enter
mov
clc
mov
lahf
cltd
push
xor
inc
jno
inc
sbb
sub
lods
pop
imul
jbe
incl
dec
add
mov
inc
dec
incl
sahf
movsl
sbb
rcrb
or
incl
clc
sub
add
jnp
and
insb
push
or
jg
in
inc
sahf
pop
stos
xchg
push
jecxz
jg
lds
mov
gs
das
lcall
call
push
mov
adc
push
ds
mov
ret
cmp
ljmp
daa
repnz
pop
adc
loope
mov
insb
pushf
loop
pop
out
xor
decl
out
lods
jle
xchg
fabs
jecxz
adc
mov
lea
notl
push
call
sbb
cltd
int
dec
enter
shll
out
jb
mov
imul
add
repz
ret
inc
call
mov
int
repnz
out
mov
inc
mov
xor
mov
mov
and
mov
fs
dec
push
xchg
fcomip
lcall
roll
mov
push
push
pop
bound
test
mov
pop
pop
mov
pop
xor
push
sub
lods
cmp
negb
pop
hlt
pop
imul
in
jp
sarl
lods
mov
jmp
xchg
in
popa
xor
nop
jge
mov
xlat
addr16
lahf
imul
pop
cmp
pop
xor
push
or
lea
in
jno
test
xor
fcomip
sti
push
scas
mov
sub
movsb
mov
jmp
das
jnp
lock
aas
repz
xor
cwtl
push
inc
sahf
icebp
jg
loopne
hlt
dec
pushl
pop
lods
adc
in
ja
ret
sar
icebp
pop
adc
adc
dec
fistps
lock
dec
insl
jge
test
dec
in
lcall
stos
movsb
fistl
push
inc
mov
loopne
jne
jnp
add
out
sub
fstpl
or
jns
pop
fidivs
stc
jnp
loopne
es
mov
stc
sahf
pushf
repz
xlat
push
stos
jl
jmp
jge
xchg
int
fdivrs
adc
inc
icebp
test
jmp
dec
adc
jbe
push
cli
fsubrl
mov
dec
scas
movsb
add
mov
out
mov
push
mov
mov
push
fs
ja
aad
adc
xor
inc
mov
cmp
stos
stc
push
insb
push
sti
push
sahf
xchg
imul
adc
pop
test
xchg
test
ljmp
xchg
jecxz
shlb
rclb
dec
in
xor
sbb
mov
add
push
sbb
aas
xchg
or
push
in
aam
mov
std
pop
std
rcrb
push
mov
push
fimuls
es
fs
and
mov
mov
cmp
cmpsb
in
cmp
adc
sti
ljmp
push
pushl
bound
and
imul
test
push
mov
mov
and
inc
add
xor
mov
insb
int
pop
sar
xor
outsb
jnp
and
lahf
cli
mov
jns
call
shll
push
shll
ja
hlt
push
popa
lods
add
cmp
pop
das
cmp
dec
call
icebp
or
ds
jl
sarb
sbb
mov
fidivrl
xchg
mov
push
jbe
push
adc
call
movsl
pop
lret
cmp
fimull
push
pop
sub
xorl
ss
add
out
je
xor
mov
mov
sub
lcall
call
sar
jmp
hlt
add
loop
fwait
std
pop
pushl
push
fsubr
inc
mov
nop
es
mov
mov
adc
fnstsw
call
fstp
sbb
xchg
adcl
movsl
inc
shlb
sbb
mov
lcall
pushl
je
aas
arpl
pop
icebp
nop
pop
scas
int
je
lock
mov
pop
iret
jle
jg
popf
clc
cmc
popf
test
stos
lcall
or
lret
or
jnp
pop
addr16
or
xlat
je
adc
decl
fsub
negb
stos
xchg
mov
mov
adc
and
fprem
in
mov
pushl
and
jg
loopne
jns
pop
hlt
ja
or
pop
iret
add
xchg
call
add
cmp
mul
cmc
js
sbb
pop
cmpsl
mov
xchg
and
cmpl
jmp
loop
and
xchg
mov
mov
push
aam
jbe
inc
fdivl
xchg
std
mov
xchg
mov
pop
int3
push
or
sub
leave
leave
push
push
pop
int
or
push
lock
xor
cmp
or
add
scas
jg
mov
incl
push
repnz
lcall
xchg
mov
addr16
dec
aaa
js
out
decl
mov
movsl
mov
adc
loop
xchg
push
lods
cmp
dec
jge
cmp
int
loope
mov
test
cmp
push
and
dec
outsl
int3
or
jno
sbb
and
jno
movsb
lcall
int
lods
xadd
push
pop
out
bound
cmpsl
add
jmp
cmpsl
mov
inc
cwtl
jg
mov
je
pop
clc
mov
xor
mov
jmp
test
mov
xlat
add
sbb
roll
ss
out
mov
ljmp
sar
int3
push
inc
and
xchg
xor
shll
std
push
push
dec
stos
and
mov
ljmp
in
push
xor
mov
add
add
sbb
pusha
cmc
adc
or
arpl
loopne
cmp
call
pop
pushf
ljmp
inc
push
jno
ficoms
aas
cmp
push
sti
sub
inc
mov
stc
adc
in
pushl
sub
dec
inc
xorb
lods
andl
pop
insl
stc
test
xchg
repnz
inc
jl
mov
dec
xchg
mov
mov
in
sahf
decl
ret
dec
jne
es
adc
pop
call
pop
push
push
test
stc
sub
ja
mov
into
and
pop
inc
jle
mov
scas
push
and
lods
mov
add
and
cmc
call
mov
ret
xchg
scas
mov
mov
incl
xor
mov
dec
mov
mov
pop
stos
jbe
dec
inc
and
std
xchg
lcall
cmovns
cmp
loop
out
or
inc
mov
sahf
jns
ds
dec
xchg
push
subl
rcl
and
xchg
icebp
lcall
or
cmp
push
cwtl
sub
leave
shrb
push
mov
cmpsb
inc
outsb
xchg
add
jmp
cmp
ss
and
pop
mov
lret
sbb
push
aas
rcrb
xor
ljmp
adc
subb
sbb
mov
sbb
in
leave
pop
fs
dec
push
in
std
jns
lods
or
popf
fsubrl
imul
adc
ja
mov
repnz
rorb
adc
sub
xchg
adcb
fdivl
xor
pushl
adc
xchg
incl
lret
adc
shll
stc
subl
mov
lods
and
pop
dec
je
push
pop
bound
arpl
jmp
jl
es
or
data16
fistps
int
jp
sub
jp
push
ljmp
jmp
mov
xchg
movsb
jno
pusha
xchg
out
pop
decl
loope
dec
jle
pop
test
mov
jg
call
inc
sbb
and
bound
mov
cmpsb
mov
pusha
jp
mov
mov
mov
daa
addl
push
pusha
push
sub
pusha
jmp
fisubrs
in
test
mov
das
jp
and
rcr
out
ljmp
mov
out
adc
in
mov
ss
push
xchg
in
sub
lcall
mov
pop
movsb
inc
jns
loop
std
pusha
adc
mov
sti
movsb
xor
out
repz
incl
cmp
mov
outsl
xchg
and
dec
cmp
inc
lahf
out
jno
icebp
mov
fisubrl
add
and
mov
sbb
mov
mov
jmp
cmpsl
ljmp
lcall
pop
pop
int3
add
lds
dec
mov
rclb
cmp
ds
iret
xorb
fsub
into
xchg
hlt
repnz
dec
cmp
pop
sbb
mov
rcl
push
rclb
adc
rclb
jle
bound
pop
ret
fwait
sbb
ja
movsb
into
out
push
dec
jg
cmp
jmp
jmp
sub
lds
cmp
mov
dec
outsb
out
or
ret
call
hlt
jmp
lcall
jbe
mov
pop
adc
mov
mov
fbstp
jo
cmpb
inc
imul
lret
mov
mov
scas
lret
jnp
mov
cmp
gs
sahf
jle
ljmp
aaa
imul
add
nop
mov
pop
shll
pop
mov
lahf
sti
ja
call
add
xchg
cld
loop
xchg
test
aaa
mov
fucomip
mov
mov
sbb
xchg
int3
mov
clc
inc
pushf
sub
rclb
dec
adc
scas
dec
scas
insb
sahf
add
lock
lcall
leave
test
jae
xor
std
aad
sti
xor
test
add
stos
lahf
inc
ljmp
mov
mov
mov
xchg
push
mov
xchg
idiv
call
ds
jmp
push
cmp
cmp
mov
jge
or
jb
dec
jnp
push
je
dec
fnsave
popa
and
cli
push
je
addl
jnp
xor
imul
mov
jmp
mov
push
enter
fildl
cmp
mov
lret
mov
incl
mov
in
add
inc
or
pop
cmc
cld
ret
ljmp
mov
cmp
aad
sub
mov
fcoml
ss
mov
jl
test
fs
inc
loopne
jne
push
bound
les
scas
incl
sbb
pop
mov
add
mov
ljmp
ljmp
add
loope
call
mov
jo
mov
mov
ljmp
gs
mov
sub
fsts
aaa
nop
adc
lods
movq
dec
dec
icebp
daa
mov
pushl
scas
push
or
mov
xchg
mov
aam
scas
sub
in
fisubl
pushl
incl
std
lock
fisttps
cmp
sbb
nop
and
cmpsl
cmpsl
popf
sbb
mov
adc
shl
js
ficoml
sub
decl
or
dec
popf
jmp
xchg
push
pusha
cmp
mov
dec
cmp
data16
mov
push
int3
lods
and
ret
sub
push
pop
pop
daa
jl
mov
fucomip
mov
out
xchg
fwait
xchg
mov
cltd
negl
sbb
mov
sub
mov
aam
push
nop
fsubrl
jb
test
fbstp
aam
fldt
sti
mov
lahf
shrb
in
out
test
dec
into
enter
push
notb
pushl
hlt
or
inc
ret
rol
pop
cmp
mov
scas
iret
and
mov
mov
xchg
lods
mov
mov
scas
push
je
ljmp
andb
nop
xor
mov
mov
mov
inc
call
stc
push
ret
movsb
pop
or
daa
pop
or
cli
push
stos
adc
mov
cli
sub
fcoms
insl
cs
je,pn
jmp
adc
in
incl
mov
mov
aad
adc
pusha
jbe
fs
shll
and
int
mov
adc
shll
jns
call
andb
mov
scas
pushf
add
mov
xrelease
mov
cmp
or
mov
repz
mov
shr
das
dec
mov
cmp
or
stos
sbb
xchg
pop
test
pop
sbb
incl
jns
jae
js
rcrl
push
movsl
mov
je
vpshaw
rcll
cli
in
ljmp
ds
les
inc
out
test
mov
mov
push
fstpt
punpckldq
repnz
xor
xchg
sbb
jmp
xchg
or
sub
push
lahf
inc
inc
sub
adc
mov
or
les
dec
adc
jmp
or
mov
jp
stos
gs
scas
aaa
jmp
clc
inc
jnp
adc
iret
test
inc
pop
push
das
mov
jg
gs
outsl
sub
int
jbe
cld
in
xor
push
mov
mov
fcomip
jmp
jmp
clc
push
sbb
cmp
lret
xchg
gs
mov
mov
in
sub
lods
pop
fnstcw
xlat
mov
xchg
divb
cmpsb
int
add
sbb
mov
bound
ret
pop
fstps
scas
adc
cs
enter
movsl
xchg
sub
fldenv
in
shr
out
xor
lret
lock
pop
sbb
insl
ror
shrl
xor
push
mov
jmp
ret
pop
mull
adc
js
push
xchg
cmpsl
push
ja
pop
icebp
call
mov
add
addr16
or
shlb
cs
xchg
xchg
test
mov
idivb
clc
je
call
mov
pop
inc
mov
stc
mov
pop
sar
and
xchg
fnstcw
jne
fiadds
lret
outsb
clc
scas
cli
decl
cmc
hlt
ja
push
mov
xor
xchg
inc
clc
arpl
lahf
ljmp
inc
push
ja
iret
rcll
and
ret
push
in
dec
outsl
push
adc
jge
ljmp
dec
fbstp
fisubs
outsb
movsb
xlat
dec
dec
addb
xor
push
xchg
into
fadd
aad
je
jg
or
dec
pop
inc
ja
push
call
lret
add
push
pushl
cltd
mov
ror
cwtl
fs
jbe
jge
mov
sub
repnz
ljmp
inc
sarb
cwtl
dec
mov
jg
shlb
inc
mov
pop
lods
lret
or
sub
jmp
and
and
test
push
mov
dec
adc
pop
xchg
ljmp
xor
jbe
jmp
mov
xor
inc
adc
mov
sub
sbb
and
jo
sbb
xor
pop
imul
repnz
mov
cld
cli
jmp
fiaddl
and
sahf
push
stc
sbb
incl
out
data16
pop
aam
cltd
test
repz
inc
data16
add
mov
jmp
test
dec
lcall
inc
push
or
xor
push
insb
in
and
scas
inc
sbb
fsubr
outsb
inc
imul
call
sub
pop
jb
push
jp
or
mov
shrb
call
mov
orl
subl
add
xchg
cli
cwtl
pop
es
test
js
inc
cmp
pop
dec
sbb
imul
lock
ljmp
push
xacquire
push
and
test
dec
mov
call
cld
incl
sub
cmp
test
push
mov
pop
lahf
fs
or
incl
in
dec
jae
jg
xchg
pop
pop
loope
shrb
decb
rcll
jg
pop
ljmp
pushf
cmp
test
xor
movsl
and
add
pop
xchg
add
jbe
dec
addb
ljmp
nop
mov
jecxz
inc
mov
or
jmp
imul
adc
jns
stc
adc
gs
mov
repz
or
inc
cld
call
mov
cltd
push
shlb
idivb
cld
add
xchg
push
inc
push
mov
pushl
adc
pusha
inc
iret
pushf
lahf
xchg
pop
add
popa
sub
jl
imul
lock
subl
popa
push
push
je
cmc
out
aam
cmpsl
mov
jmp
or
mov
imul
mov
mov
jno
scas
cwtl
imul
dec
xchg
xor
popf
stc
test
test
sahf
aad
gs
mov
imul
jmp
mov
jl
xlat
mov
test
adc
arpl
popa
inc
lea
inc
mov
ljmp
xchg
mov
mov
sti
push
cmp
hlt
loopne
adc
ja
xchg
pop
call
imul
xchg
hlt
pusha
repnz
ljmp
test
in
stos
inc
pop
outsb
mov
jmp
mov
lret
pop
cli
test
xchg
inc
jb
jb
xchg
cli
xchg
stos
sbb
push
jnp
pop
leave
decl
mov
call
test
add
lea
mov
add
push
add
xor
movsl
popa
xor
jp
pop
xchg
int
popf
call
data16
icebp
xor
inc
adc
into
pop
rcrl
fwait
inc
data16
xor
ljmp
adc
inc
shll
fs
mov
je
cs
sub
jg
in
test
call
xchg
mov
mov
jp
dec
cmpsb
mov
hlt
push
pop
or
iret
xor
leave
mov
jmp
test
aam
push
sub
jmp
adc
or
dec
leave
les
or
xor
test
mov
jmp
xor
pop
xchg
loopne
int3
stos
inc
loope
xchg
or
rcrl
mov
jne
movsb
lea
jg
insb
xchg
dec
aam
push
jge
adc
mov
push
jbe
call
aad
push
mov
adcb
incl
push
stc
sbb
add
push
pop
test
loopne
loopne
push
out
mov
xchg
mov
or
inc
xlat
mov
cmc
incl
aaa
test
ljmp
lods
int
pop
dec
push
subl
jo
fwait
lds
inc
adc
jae
cmc
pop
or
aas
and
fcompl
mov
incl
mov
adc
and
sub
popa
aam
and
jp
xor
fbld
ss
data16
xor
cmp
push
jnp
and
pop
decl
hlt
push
add
xor
jecxz
pop
jno
pop
xchg
xchg
popf
push
das
sar
lahf
gs
adc
push
or
pop
movsb
leave
lret
iret
mov
jmp
out
stos
inc
ret
xchg
adcl
sbb
mov
mov
mov
pushl
loopne
mov
out
fildll
fistl
xchg
cli
adcb
insl
cmpsb
fsubrl
fld
faddp
aaa
sbb
xchg
sub
and
orb
movsl
dec
stos
lds
lds
stos
inc
ljmp
pop
jmp
clc
add
test
js
xchg
ljmp
je
adc
adc
gs
leave
xor
movb
ljmp
adc
jno
scas
fistl
daa
fs
popa
jp
cs
call
pop
fst
sub
add
sbb
negl
xchg
movsl
mov
and
lcall
push
orl
push
xchg
sbb
mov
pushl
push
mov
arpl
imul
scas
rorl
dec
enter
dec
jae
call
cld
adc
and
xchg
loope
jmp
sbb
ret
xchg
pusha
in
cmp
mov
adc
jle
imul
lods
or
inc
cmpsb
movsb
pop
push
fdivrp
lcall
cmp
pop
cmc
clc
out
inc
xchg
lret
push
inc
mov
or
and
pushl
push
sbb
test
jae
jb
fsubp
jae
testl
rcrl
jmp
cmpsl
inc
loop
inc
pop
in
ja
imul
xlat
pop
test
mov
hlt
xchg
pop
cwtl
mov
frstor
pop
jnp
inc
cs
mov
fucomp
adc
scas
inc
rolb
and
rorl
fcomps
lahf
jnp
lret
mov
lcall
sub
imul
mov
jge
cmpsl
cmp
adc
out
das
sub
jg
cli
and
jg
adc
mov
mov
add
add
fnstsw
xor
xor
cmp
faddl
or
scas
insb
sbb
decl
lock
mov
mov
stos
cmp
sbbl
incl
dec
es
cmp
notl
cmpsl
cmp
js
loope
stc
mov
lcall
dec
push
adc
aaa
adc
call
xchg
pop
in
das
push
pop
out
xchg
fadd
push
dec
es
insl
fmul
decl
lock
sub
out
inc
scas
jno
add
es
mov
les
inc
lcall
inc
cmp
xchg
lahf
xor
loop
adc
mov
xor
je
mov
xchg
in
fsts
mov
sete
and
mov
call
sbb
scas
sub
out
inc
movsl
and
fdivrl
sbb
loope
ja
adc
jns
fldl
pop
inc
and
gs
dec
jmp
and
adc
cmp
add
lea
xchg
dec
push
sbb
iret
mov
push
outsl
cli
jg
movsb
fisubrl
pop
scas
loopne
addb
and
call
or
std
push
sub
add
popf
jbe
lcall
push
stc
dec
push
mul
mov
testb
xor
push
dec
rcrb
cmp
xor
rorl
cmp
lcall
and
sbb
push
out
pop
sets
mov
cmpb
fldt
loopne
jmp
std
xchg
push
and
mov
in
arpl
push
into
jae
sbb
push
mov
xor
pop
fcomps
fs
inc
loop
mov
shlb
int3
jbe
aas
sbb
nop
js
mov
decl
ja
mov
pop
loopne
push
jae
lock
add
adc
jmp
ffreep
inc
xchg
jns,pt
out
out
addb
adc
mov
test
sub
iret
mov
call
loop
sub
pop
sbb
fs
add
mov
jnp
incl
mov
cld
dec
imul
xlat
shl
sti
sbb
dec
test
add
aas
dec
xchg
and
jns
popa
dec
cld
xchg
push
jg
scas
jge
cli
push
inc
add
jp
jae
jnp
sub
or
iret
cltd
sbb
incl
push
push
inc
iret
stos
push
or
dec
imul
push
je
mov
cmpsb
enter
push
lcall
loop
push
clc
mov
or
cli
adc
xchg
rcll
xchg
andl
mov
movsb
dec
cmp
adc
mov
lock
pop
dec
sub
lcall
xchg
lcall
clc
daa
xchg
jne
jnp
jl
test
inc
dec
ja
pop
aaa
repz
incl
fs
aam
sbb
pop
mul
cmpsb
pop
mov
and
sub
idiv
cmp
add
add
addb
push
stos
mov
pushf
xlat
adc
cmp
js
scas
xchg
adc
push
std
pushl
mov
push
pop
rcr
ja
mov
imul
ljmp
cmp
xor
stos
ljmp
pop
sub
pop
clc
and
push
push
mov
jbe
mov
xchg
mov
or
xchg
pop
add
push
in
mov
movsl
in
decl
mov
jne
addr16
xor
icebp
mov
mov
mov
jp
sbb
call
jo
popa
adc
icebp
push
xchg
notl
idivb
setne
jmp
adc
inc
ret
fcmovne
clc
adc
pusha
mov
lahf
pop
and
or
push
pop
sbb
jnp
dec
stos
and
sbb
mov
mov
xor
js
xchg
lods
add
cld
pushl
and
jmp
lcall
pop
fmull
incl
push
rcrl
push
pop
xchg
movsb
mov
xchg
mov
call
iret
pop
or
sahf
ja
inc
cmc
or
pop
scas
xchg
cmpl
xor
lcall
in
sub
test
leave
xchg
or
cmp
inc
pop
pop
cmpsl
xchg
xchg
lcall
mov
adc
sub
dec
adc
scas
jle
mov
sbb
xchg
incl
ret
xchg
xor
xor
fiadds
mov
pop
popf
inc
sbb
stc
clc
in
xor
inc
add
mov
aas
repnz
test
mov
cmp
jb
cli
incl
inc
dec
fidivrl
leave
dec
lods
icebp
out
sub
shlb
sahf
js
mov
movsl
jb
dec
stos
out
dec
push
aaa
mov
cmpsl
gs
decl
fstenv
mov
xchg
add
sti
lahf
mov
stos
sbb
incl
shrl
xchg
mov
sub
stos
in
push
insb
mov
xor
js
roll
push
cwtl
jg
negl
outsl
cli
inc
sbb
nop
adc
cmp
inc
and
cmp
aam
out
sbbl
jle
or
add
inc
mov
mov
in
push
inc
fucomp
pop
sub
mov
mov
mov
jge
cli
imul
sahf
sbb
jno
jnp
inc
sub
jmp
icebp
mov
call
cmp
mov
inc
pop
addr16
mov
add
sbb
mov
mull
xor
or
mov
je
lds
cmp
xchg
call
in
or
cmpsl
imul
inc
xchg
cli
andb
pop
add
mov
and
ljmp
pop
repz
repz
add
call
jbe
cmp
adc
int
inc
std
adc
pushl
aam
pop
pcmpgtb
testl
mov
jo
rol
add
jl
push
pushl
je
insb
jp
fmulp
mov
jge
pop
sbb
adc
push
mov
nop
mov
lds
sub
sub
mov
pop
mov
pop
jg
push
je
inc
hlt
dec
popf
mov
cltd
in
mov
call
bound
nop
add
dec
pusha
loopne
prefetch
or
loope
push
sub
pop
push
sar
ljmp
push
roll
sbb
ss
orl
jmp
call
stc
ficoms
pop
cs
std
cmp
pop
gs
test
pop
cmp
decl
cld
mov
push
pop
push
jle
sbb
sub
pop
push
mov
fnstsw
cmp
mov
iretw
dec
loope
out
adcl
jle
inc
mov
dec
inc
scas
mov
xchg
push
sbb
icebp
enter
in
fxch
rcl
cmp
adc
and
incl
pop
and
mov
scas
loopne
hlt
xlat
xor
sub
jl
push
out
mov
mov
mov
pop
sub
pop
dec
lcall
xchg
add
incl
out
movsl
call
or
out
mov
pusha
outsb
pushl
stos
or
dec
inc
inc
mov
ja
outsb
daa
mov
push
xor
sahf
int3
jg
cmp
fistl
push
into
ds
imul
xor
push
dec
decl
shlb
cmp
adc
mov
pop
cwtl
pop
xchg
sbb
adc
cmovae
jecxz
xor
cli
scas
cli
incl
pusha
add
ret
movsl
lret
mov
inc
insb
daa
sub
sbb
imul
push
and
cmpl
pop
imul
pop
in
sub
pusha
fdivrl
pusha
sbbl
jle
sahf
dec
je
pushl
lcall
loope
sbb
cld
and
cmp
fwait
push
fs
cld
push
pop
sbb
xorb
ror
enter
or
push
mov
xchg
adc
pop
xor
aad
cmpsb
loopne
xchg
mov
cs
stos
mov
jmp
aas
imul
out
stc
jo
fldt
cmpsb
lahf
or
cmp
xchg
mov
sar
decl
es
cli
repz
imul
addr16
sbb
xchg
or
xor
add
bound
cmc
fcmovb
aad
clc
ja
xor
aam
and
cli
sbb
js
sbb
stos
pusha
insb
hlt
push
enter
push
imul
stos
cmc
cmp
pusha
and
nop
test
pop
mov
les
and
test
adc
enter
add
push
adc
jge
jecxz
call
and
mov
cmp
mov
jo
mov
std
and
shr
xorl
cmc
lret
mov
mov
out
mov
or
sahf
xchg
push
or
movsb
jb
decl
insl
sbb
movsb
mov
mov
outsb
mov
outsl
inc
adc
add
lcall
mov
adc
cmpsb
sub
das
or
and
push
ror
shlb
out
push
out
icebp
push
and
mov
dec
cmp
jno
add
jmp
addr16
incl
jmp
ljmp
and
sbb
adcb
fwait
dec
mov
scas
pop
scas
mov
test
push
cld
xor
fcoms
push
cmc
sub
mov
pusha
inc
jb
movsl
xor
lds
sbbl
scas
js
pop
lret
pop
aas
mov
push
push
xor
ds
jg
jecxz
js
xor
test
xor
jmp
push
mov
popf
frstor
pushf
decl
lock
jnp,pn
cld
cmc
sti
ret
call
dec
jp
or
imul
sub
xchg
mov
outsb
stos
jg
inc
inc
lret
test
dec
push
add
ret
pop
xor
jg
jmp
arpl
je
push
xchg
fisubl
sbb
mov
jmp
add
push
sbb
fdivrp
bnd
sbb
jo
push
mov
mov
add
les
arpl
jb
ljmp
xor
mov
aas
ja
es
in
or
xchg
out
sbb
loop
fs
incl
hlt
stos
jg
negl
stos
inc
int3
insl
ds
dec
push
mov
dec
adc
popf
sbbb
pushl
sahf
mov
xchg
je
hlt
ret
push
shlb
out
decl
jb
jge
mov
mov
sub
pop
xchg
ja
out
mov
pushl
cld
mov
inc
std
gs
mov
jne
and
rcl
mov
fistpl
lcall
lods
pop
testb
inc
fdivs
lret
sub
push
ds
mov
mov
movsb
test
mov
hlt
xor
decb
lea
lcall
push
mov
pushl
pop
jnp
cmp
sub
addr16
in
jle
inc
xchg
pop
out
or
clc
jo
pusha
lret
mov
in
mov
mov
add
cltd
sub
add
lcall
sbb
imul
sub
jle
aas
sti
xor
js
cmp
call
repnz
js
dec
adc
pop
mov
sbb
inc
pop
pop
mov
jp
incl
shlb
test
xchg
lods
dec
push
aad
mov
mov
call
xchg
xor
mov
and
outsl
ret
cmp
daa
push
stos
adc
push
add
decl
sub
mov
xchg
or
in
xor
gs
loop
pop
xchg
push
jmp
adcb
decl
ds
mov
dec
sub
and
fbstp
sbb
cmp
in
ljmp
inc
cmp
ret
mov
outsb
xchg
lret
cmpsb
fs
cli
iret
nop
sahf
jo
and
cmpsl
int
jg
sbb
xchg
push
notb
outsb
inc
jg
lock
mov
and
js
mov
repnz
decl
ds
jns
fdivrs
adc
push
repnz
and
adc
cli
or
js
jmp
lcall
scas
stc
dec
leave
stc
gs
sti
fs
cli
push
pop
sbb
leave
mov
decl
cmovbe
xchg
test
dec
push
imul
les
jecxz
mov
mov
addr16
push
hlt
inc
lahf
cmp
push
fnstsw
cmpsl
jbe
mov
mov
mov
in
jge
sbb
mov
daa
test
mov
push
mov
sbb
mov
add
mov
sub
cmp
cmp
jmp
in
xchg
cmc
sarl
pushf
testb
out
jp
or
xchg
shlb
mov
jecxz
fisubrs
mov
ds
int
arpl
rorl
loopne
pushl
jno
arpl
mov
push
push
rcl
mov
xor
fcomip
pop
das
fxch
jl
push
inc
or
inc
or
into
movsb
jne
rorb
pop
jle
pop
hlt
lcall
mov
add
inc
sub
mov
in
out
loope
sub
xor
ja
imul
fisttps
jp
lods
mov
lock
mov
add
cmp
pushf
inc
inc
inc
negl
cltd
out
lcall
cli
stc
out
xchg
xchg
mov
in
adc
pushw
inc
sti
test
jmp
jnp
jmp
sarl
adc
mov
adc
nop
sbb
daa
and
popf
mov
insl
arpl
decl
stc
add
loop
andl
dec
mov
jnp
dec
fs
jb
loope
inc
cmpsl
mov
push
lea
popa
fsubrs
pushl
or
fdivrl
mov
lret
pop
out
jae
out
arpl
jno
lcallw
sub
test
lcall
jmp
or
dec
es
xchg
je
xlat
clc
cwtl
in
stos
ss
jnp
out
js
cmpsb
xchg
push
stc
sbb
jg
cmp
lahf
sub
cmp
push
dec
loop
xor
cwtl
jg
lods
imull
cmp
push
in
jp
mov
pop
pop
loope
or
xor
adc
cmpsl
or
xor
scas
nop
lret
adc
je
fisttpll
test
or
decl
and
dec
mov
ja
frstor
adc
dec
push
movsl
leave
cmpsl
loope
lret
jno
std
dec
xlat
mov
jo
movl
mov
ljmp
stos
pop
jb
sbb
push
xchg
int
imul
dec
test
das
mov
ficoml
sbb
add
rorb
push
pop
inc
js
fldcw
push
cmp
push
test
fwait
in
jmp
add
cli
cmp
xchg
test
mov
aad
out
iret
das
clc
lret
add
inc
inc
imul
clc
xor
sbb
call
xor
shll
push
sti
into
pop
lds
out
lret
scas
xor
jb
xchg
mov
jg
lcall
add
std
in
bound
popf
push
idivl
xchg
mov
nop
or
iret
pop
mov
fistpll
subl
pop
cs
insb
out
loope
jns
inc
adc
cmc
sub
int
and
add
sbb
scas
dec
mov
jg
shll
lcall
testb
dec
and
push
lcall
sbb
out
sbb
arpl
mov
xchg
mov
call
jmp
bound
sbb
sub
sub
mov
sbb
inc
pop
mov
jl
cmp
dec
cmp
cmp
mov
cmpl
jo
nop
inc
jmp
mov
icebp
or
ljmp
inc
xchg
sti
out
std
test
and
pop
xor
sub
jmp
sbb
popa
loop
andl
lods
ja
xchg
loope
ret
push
push
iret
fildl
add
fcomip
ljmp
lock
loopne
adc
add
lods
into
rclb
jmp
inc
cld
sbb
inc
mov
jb
jp
jmp
xlat
dec
popa
jp
mov
push
jg
es
sub
add
xchg
mov
dec
xchg
or
push
lea
lea
mov
cmp
xchg
and
imul
movsb
aam
jg
lcall
sub
add
sbb
int3
cltd
add
insb
lret
and
das
mov
pop
enter
dec
mov
jb
mov
lahf
mov
cli
ja
inc
cwtl
push
lret
cmc
add
mov
cmp
or
jp
jbe
push
adc
cs
add
test
sub
xchg
xchg
sub
lock
pushl
jmp
and
test
leave
sbb
repz
jecxz
push
adc
jmp
and
cltd
cmp
pop
loopne
mov
xchg
cmpsl
mov
decl
jge
jae
jp
dec
inc
adc
pop
mov
stos
mov
and
xchg
aad
mov
mov
gs
incl
mov
xlat
jno
out
hlt
sbb
jo
inc
inc
fimull
pop
jo
outsl
pop
sub
dec
decl
mov
xchg
inc
add
pop
call
lcall
xor
cmp
xor
testb
fcompl
cmpsl
aaa
mov
or
test
fimull
outsb
lcall
stc
sahf
sahf
sbb
ror
adc
xchg
inc
mov
dec
xor
inc
push
cmp
push
dec
mov
and
jne
es
and
scas
out
mov
hlt
cmp
inc
xchg
stc
dec
xor
pop
notb
ret
sub
or
outsl
mov
test
cmp
aas
lahf
dec
cmp
decl
sbb
rolb
xor
cmpsb
pop
xchg
jae
sbb
in
ds
jmp
inc
adcl
mov
adc
iret
clc
paddq
sbb
jb
inc
cmp
sub
les
sub
fidivs
shl
inc
das
dec
xchg
pop
pop
jg
pop
add
push
or
ja
cmp
loopne
xchg
pushl
fld
push
int3
ja
pop
gs
int3
divb
sbb
addb
fcomip
call
sahf
cltd
sbb
or
paddb
outsb
cltd
dec
repz
cmp
inc
jb
imul
ljmp
jo
mov
imull
and
sub
cmc
jg
pop
and
push
and
pop
and
dec
jnp
mov
cld
xchg
mov
ljmp
adc
ljmp
or
or
sbb
jns
sahf
hlt
add
jne
aad
push
lods
lret
scas
es
test
push
outsl
lret
mov
mov
push
mov
aad
cli
sbb
lock
jae
cmp
xor
cmpb
dec
add
popa
push
ljmp
pop
xchg
pop
cli
pop
pop
fstpt
cmp
xor
xchg
mov
inc
fldl
repz
sbb
push
mov
add
jmp
icebp
jmp
push
sbb
roll
in
jecxz
outsw
xor
pop
push
ljmp
mov
mov
cmp
mov
nop
enter
daa
aad
mov
dec
jmp
add
xchg
out
jecxz
push
mov
lods
jbe
aam
jb
cmpsb
out
cli
in
mov
lods
fdivrs
int3
dec
in
ss
decl
pop
dec
out
pslld
lods
bound
gs
pop
push
push
mov
decl
push
aam
push
jno
in
pminub
and
sbb
sub
sub
ss
fcomip
decl
mov
mov
mov
enter
mov
adc
mov
mov
cmp
mov
gs
subb
dec
or
mov
aaa
test
pop
out
inc
lret
pop
shll
cld
jg
imul
fsubs
mov
out
decl
loop
pop
add
mov
and
lahf
fnclex
pop
mov
ds
jge
dec
leave
jae
pop
mov
or
add
std
mull
adc
jmp
jg
add
mov
into
cmp
data16
addr16
repnz
lcall
push
or
pushl
push
jnp
pop
out
nop
mov
ror
push
xchg
mov
mov
decl
ljmp
inc
outsl
cmp
sbb
pop
and
dec
stos
out
jmp
lcall
push
xor
pop
or
xor
in
mov
or
inc
cs
ja
jmp
xor
inc
fiaddl
aas
xor
js
popa
adc
inc
pop
jp
mov
sub
outsb
cmpsl
mov
ja
decl
push
pop
xchg
sahf
xor
pop
and
leave
jno
daa
sub
mov
test
inc
and
mov
pop
jbe
stos
cs
pop
lods
imul
movsl
popa
mov
mov
clc
das
clc
popf
inc
sahf
leave
pusha
mov
dec
repnz
cmc
push
push
mov
nop
lcall
push
aad
ja
call
add
xchg
outsl
pop
and
call
rorl
wrmsr
into
rcll
and
bound
push
xchg
dec
aad
repz
mov
incl
repz
je
or
mov
roll
jne
adc
call
add
push
cmp
les
mov
inc
negb
ss
ljmp
scas
mov
nop
mov
mov
sarl
pop
lea
imul
xchg
stc
int
iret
add
dec
lods
jno
xor
js
mov
mov
cltd
push
cs
fnsave
mov
push
cmpsb
sub
jno
dec
mov
inc
fwait
testl
call
pop
mov
inc
fmuls
cmp
rcr
adc
scas
mov
movsb
ljmp
bound
lods
inc
push
imul
orb
add
dec
test
outsl
xor
lret
bound
movsb
enter
sbb
in
inc
loope
incl
jge
lds
mov
icebp
movsl
je
imul
adc
scas
lcall
insb
rol
push
mov
inc
outsl
push
xchg
in
mov
fnstcw
orl
incl
push
fistl
das
lret
mov
or
inc
jnp
cmp
pop
sub
fdivs
dec
push
js
imul
into
cmp
mov
decl
sub
lods
cwtl
stos
call
imul
out
pop
lret
outsl
sub
rclb
jmp
sub
out
cltd
mov
push
lock
cltd
loop
in
sub
adc
jns
mov
push
xor
or
loopne
cmp
in
jecxz
scas
add
cmp
incl
jecxz
cltd
bound
addr16
jg
inc
stos
cmp
fbstp
sbb
ljmp
ret
push
mov
lret
rorb
call
and
jp
xchg
mov
or
jns
jp
xchg
loope
sub
incl
jmp
pop
sub
fcompp
dec
ret
push
and
inc
daa
xchg
cld
fsts
insl
push
pop
or
mov
inc
add
cwtl
out
jne
arpl
incl
ljmp
pop
mov
arpl
xor
jmp
enter
sub
ljmp
mov
stos
stos
test
jbe
push
inc
jle
adc
sbb
out
pop
js
jnp
nop
jmp
mov
js
in
mov
test
les
xor
out
mov
sbb
sahf
pop
jns
mov
sbb
pop
cmpsl
pop
add
cli
add
clc
loop
divb
mov
push
rep
mov
cmc
push
out
stos
cmpsl
arpl
jp
and
jae
call
mov
mov
aad
ds
xchg
add
inc
sbb
mov
decl
sti
dec
push
mov
jae
shll
and
sti
outsl
cli
decl
xor
dec
cmp
push
pop
adc
and
add
xor
call
incl
cmp
or
and
and
fnstcw
inc
out
push
mov
jmp
idiv
dec
push
sahf
orb
dec
adc
mov
aas
mov
scas
xor
mov
dec
sarb
jmp
iret
mov
aam
sub
gs
sub
add
add
iret
and
dec
ljmp
mov
fwait
pop
add
fldenv
fnsave
in
or
xor
imul
lock
insl
or
out
and
xor
lcall
or
add
sbb
nop
pushl
inc
push
daa
leave
decl
pushl
std
cmc
xor
loop
ds
data16
lock
test
jmp
push
pop
xor
lcall
fimuls
jnp
jge
xchg
sub
call
lcall
pop
fcmovnu
outsl
mov
out
adc
xor
mov
cmpb
incl
test
rclb
push
pop
scas
cli
addb
mov
inc
push
pop
mov
sti
mov
xlat
jmp
subl
xchg
hlt
inc
push
mov
lret
xor
mov
sbb
scas
mov
test
pushf
aam
rcl
cwtl
cmp
mov
xchg
push
bound
mov
rorl
lret
sbb
adc
adc
shlb
fildl
lock
addr16
decl
iret
xchg
les
dec
jo
cmp
jns
xor
shrb
and
sahf
cltd
dec
xchg
push
push
fstl
repz
out
inc
rolb
insb
jbe
mov
or
dec
fstps
adcl
pushl
sarl
xor
fwait
xor
sbb
inc
fildll
mov
and
xlat
jns
jmp
dec
inc
divb
cli
ljmp
push
into
stc
dec
jnp
xorl
test
cmpsb
imul
cltd
push
mov
mov
mov
cmp
clc
jne
push
pop
das
pop
add
pop
repz
pusha
cmp
ljmp
or
cmpsb
mov
rorl
sub
js
sbb
jbe
adc
incl
scas
mov
xor
xor
fstpt
mov
sub
push
cmpl
scas
stc
divl
dec
jbe
xor
mov
cmpsb
hlt
loop
xchg
ljmp
cmc
adc
call
lret
mov
push
jl
mov
incl
std
aam
out
sbb
xor
push
adc
push
xor
jle
scas
lcall
or
push
push
dec
dec
sbb
xor
mov
decl
decb
fidivl
in
xchg
push
and
jns
push
adcl
jmp
mov
dec
xor
mov
dec
mov
ljmp
ficoml
jmp
ljmp
cli
mov
sbb
or
int
mov
pop
lds
sub
decl
inc
xchg
jne
and
insl
xor
cmp
mov
lea
mov
imul
or
adc
mov
ljmp
mov
sahf
or
adc
pushf
mov
adc
mov
hlt
and
call
notb
mov
mov
sub
sbb
iret
sub
pop
mov
daa
adc
test
insb
mov
adc
sub
cmp
mov
xchg
xor
mov
push
insb
xchg
push
and
fcomip
sub
ret
mov
out
inc
popf
shlb
out
clc
lcall
out
add
inc
ret
jmp
loope
maskmovq
clc
in
out
stc
fldl
stos
incl
jecxz
push
xchg
fcmovnbe
hlt
ljmp
clc
pop
and
aam
movsl
dec
and
popf
popf
or
scas
cmp
lcall
jecxz
sbb
mov
loope
inc
inc
cmpsb
inc
mov
sbb
push
js
sub
lods
cli
jne
sbb
xchg
test
jno
decl
adc
push
mov
cmp
sbb
cli
pop
sbb
mov
imul
in
and
xor
in
xor
fmull
rolb
or
mov
lds
cltd
lods
or
push
jg
leave
cld
and
mov
inc
xchg
test
sbb
add
addl
js
xor
ljmp
rep
pop
ret
xor
jbe
cmp
jne
sub
ss
fdivs
xor
in
testl
scas
cld
dec
add
mov
popf
lock
decl
inc
sub
fcomps
imulb
jg
cli
jmp
xor
outsl
jne
cld
ljmp
and
jl
inc
test
fwait
dec
insl
andb
pushl
imul
rcrb
rclb
cmpsl
sbb
cmp
xor
add
lcall
sub
out
popa
mov
clc
pop
xor
jnp
sub
mov
push
cli
adc
hlt
jbe
ljmp
mov
jb
or
repnz
mov
or
mov
dec
pusha
mov
hlt
adc
ljmp
cmp
std
cltd
dec
fbstp
pop
cmp
std
mov
mov
negl
in
pop
lods
sub
incl
push
and
dec
jbe
push
adc
xchg
jp
pop
jp
cmp
mov
int
cli
pushl
cld
imul
stos
lahf
xchg
sbb
testb
mov
addr16
gs
call
out
cmpsb
js
test
mov
inc
jecxz
xor
addr16
xchg
in
jmp
dec
mov
mov
mov
pop
mov
clc
test
dec
pop
outsb
or
cli
jge
int3
adc
lea
shll
lcall
inc
dec
insb
dec
push
mov
mov
js
lods
into
adcb
cs
ljmpw
bound
sub
jmp
movsb
cwtl
xlat
es
mov
mov
ja
sub
cmp
sub
and
add
fs
add
outsl
lock
fstpt
cmpl
insl
jge
jmp
imul
sbb
dec
xor
cmp
or
icebp
movsl
lods
cmp
test
dec
push
ret
incl
mov
fs
fildl
mov
fmuls
loopne
out
icebp
fcom
dec
js
addl
mov
lcall
push
fimull
and
lcall
outsb
sbb
mov
imul
adc
add
inc
inc
dec
movsl
push
sub
cmp
pop
dec
popa
lcall
in
adc
or
ljmp
dec
push
xchg
add
in
clc
push
push
mov
popl
clc
sahf
and
jmp
fwait
jae
xchg
lods
push
push
xor
dec
outsb
int
push
fiadds
icebp
mov
push
jae
sbb
cld
dec
aas
out
cmp
pop
pushf
sub
insb
scas
jle
notb
or
xchg
add
or
call
xchg
enter
push
adc
stc
ds
and
ljmp
imul
pop
aaa
pop
das
fisttps
push
aaa
aaa
outsb
mov
jae
insl
push
mov
push
fidivs
sub
sub
sar
fildll
test
les
mov
push
jnp
push
sub
arpl
and
push
mov
xor
insb
mov
lret
sub
fwait
push
sahf
imul
loopne
insl
xchg
lds
jnp
mov
mov
outsb
adc
xchg
je
push
repnz
pop
movsl
xchg
in
jne
jmp
add
in
push
sbb
xor
inc
or
and
pushl
xchg
xor
cltd
into
xchg
stc
jae
test
adc
das
sar
iret
sbb
mov
incb
int
fcmovne
xchg
fsubrl
decl
incb
xchg
call
jbe
push
test
jmp
jmp
cmpsl
mov
mov
js
shlb
mov
fsts
shlb
fcompl
popf
inc
mov
insl
jnp
sbb
pop
xchg
push
movsl
mov
pop
orl
mov
cmp
insl
or
jg
jg
jae
cltd
push
stos
jp
stos
scas
loop
sti
mov
sahf
std
jbe
add
call
jg
cmp
xchg
mov
xchg
adc
mov
sbb
sbb
in
xchg
aad
hlt
mov
clc
ljmp
sub
lret
cld
xchg
mov
jl
or
pop
lea
cltd
stos
sbb
aaa
mov
jo
sub
scas
dec
mov
push
mov
cmpl
mov
les
pop
jae
jg
push
sub
or
pop
std
das
rclb
mov
aam
jl
mov
aaa
daa
add
lahf
icebp
jg
call
sahf
popf
ss
idivb
pop
add
jmp
lea
popa
dec
inc
out
clc
inc
lret
dec
lahf
or
xchg
cmp
pop
repnz
movsl
pop
stc
inc
push
fwait
push
adc
xor
push
add
subb
sub
mov
sbb
or
push
mov
mov
mov
call
mov
fsts
add
xor
ficomps
sbb
lea
cmp
jg
js
xchg
xchg
test
xchg
test
pop
xchg
rclb
js
xor
ljmp
insb
jae
test
push
in
out
insl
call
adc
pop
sub
insb
push
call
loopne
sub
mov
cmpsb
outsl
ljmp
xor
sub
xor
lock
and
push
popf
push
jp
in
bound
ljmp
inc
ds
or
movsb
xchg
testl
jns
scas
push
aad
sti
dec
jge
jg
dec
int3
pop
dec
push
jle
pop
xchg
cmp
out
and
in
lahf
add
fimuls
lcall
adc
cs
mov
stos
out
jae
push
fs
lret
std
pop
enter
cmp
dec
pop
xorb
int3
mov
arpl
test
xchg
jne
nop
add
adc
call
hlt
adc
nop
in
mov
roll
arpl
adc
inc
js
std
ljmp
icebp
ljmp
int3
xchg
jno
cwtl
mov
aad
inc
push
cmp
fnstcw
repz
sub
ret
pop
push
mov
xchg
popf
push
pop
pop
out
test
pop
jbe
cmc
xchg
or
and
mov
dec
adc
push
cmp
int3
jge
mov
ljmp
popa
push
mov
mov
inc
inc
sahf
fcoms
sbb
adc
push
test
xorb
es
lods
aaa
xor
mov
into
fsubp
cmpsb
xlat
decl
out
cmp
out
xor
pop
pop
mov
clc
hlt
jg
dec
mov
cmp
in
loop
sub
push
into
dec
dec
add
adc
jp
pop
decl
mov
cmp
push
mov
mov
jp
fstpl
mov
adc
cli
lods
add
ret
das
cld
adc
popa
mov
outsb
sbb
adcb
or
mov
push
dec
and
mov
pop
lret
test
inc
xor
xchg
fisubrl
popa
and
sti
pusha
mov
rcll
decl
pop
mov
pop
xor
mov
sub
cld
jg
add
test
mov
adc
cmp
movsb
jle
mov
xlat
scas
push
xchg
jnp
mov
loopne
stos
ljmp
pop
xor
push
inc
push
mov
sbb
pop
sbb
pop
push
and
mov
sbb
xlat
aaa
and
sti
cld
xlat
sub
movsl
fimuls
or
das
lahf
mov
ljmp
dec
test
or
mov
fidivrs
xor
ds
mov
jmp
decl
xchg
popf
pop
popf
sbb
divb
push
xchg
stc
xor
ljmp
cmp
push
aaa
mov
mov
out
shll
xor
jp
sti
lcall
push
pop
sbb
jnp
and
xchg
test
pop
stc
sub
ret
jl
incl
sub
pop
push
ret
nop
pop
mov
call
sub
arpl
pop
lcall
filds
push
xchg
xchg
cmp
adc
push
movsb
jno
mov
xor
loope
mov
inc
pop
fisubrl
xchg
call
pop
in
cmp
lods
test
ud1
loope
dec
lahf
mov
enter
pop
sub
es
decl
insl
inc
jo
fsubs
js
and
into
es
fimull
clc
lcall
test
jecxz
adc
mov
mov
lret
aad
pop
push
cli
jg
pop
iret
fstpl
pop
mov
adc
or
in
bound
dec
sbbb
jecxz
cmp
ljmp
fmuls
nop
insb
and
jae
gs
aad
sarb
rolb
lods
sti
sub
sub
icebp
jmp
test
push
shr
push
xor
dec
pop
sbb
mov
fprem
cli
jle
imul
mov
mov
push
sbb
push
fstpl
jmp
int3
jecxz
push
adc
imul
rcl
in
inc
mov
sbb
push
and
inc
and
sub
mov
ret
or
repz
cltd
adc
or
mov
ljmp
js
inc
vpcmpeqb
xorb
mov
mov
mov
add
lcall
shll
dec
cmp
mov
call
sub
push
loopne
jno
mov
sbb
aam
xorl
push
lcall
and
pop
and
incl
rorb
mov
push
sbb
jb
adc
ja
cmpl
decl
push
mov
sbb
push
pop
ds
xchg
pop
ja
std
ffree
je
ljmp
push
add
pop
or
out
add
pop
test
fistl
xlat
rcr
mov
imul
inc
pop
jnp
shlb
incl
ljmp
mov
or
idivb
inc
aam
or
cmp
data16
pushl
mull
push
and
insl
mov
in
and
dec
fimuls
jg
mov
xlat
mov
pusha
mov
in
jmp
decl
daa
pop
mov
pushf
repz
stc
mov
mov
jb
and
ss
ljmp
scas
cmp
out
cltd
pop
inc
rcl
and
and
lds
sub
push
mov
les
push
push
mov
xchg
push
fwait
out
cli
pushl
out
filds
push
inc
and
push
aam
push
mov
lcall
mov
ja
adc
repnz
jns
push
or
jae
lods
lcall
enter
jp
dec
sbb
cmp
iret
std
sbb
or
add
cmp
mov
jmp
aad
call
add
fcmovnu
sbb
pop
ss
jb
test
lcall
mov
jns
bound
cs
push
push
xchg
mov
mov
call
cmp
icebp
mov
sub
imul
lcall
jo
loopne
shl
inc
hlt
lcall
push
mov
and
addr16
xor
inc
mov
inc
xor
xchg
imul
mov
xchg
or
loopne
sub
push
popf
mov
dec
xor
push
and
push
fsubrl
loop
in
icebp
push
or
pushl
add
ds
imul
xchg
mov
out
xorb
adc
jge
mov
loope
notl
inc
decl
sub
dec
inc
lods
fs
dec
cli
out
in
and
call
pop
neg
pop
add
or
mov
ljmp
add
add
push
cmpsl
je
fwait
pop
in
out
hlt
xchg
mov
cmc
les
inc
jecxz
or
xchg
inc
xor
lock
mov
outsb
push
mov
cwtl
cmc
dec
stos
testl
xlat
pop
cltd
cltd
inc
xchg
mov
cld
mov
shrb
call
loop
flds
cmp
aad
mov
add
pop
aam
sbb
dec
sbb
dec
fcomps
es
std
jmp
add
out
rcrl
mov
aaa
nop
je
sub
and
stos
jg
test
hlt
jp
mov
repnz
jo
test
aam
movsb
mov
lock
mov
lcall
mov
mov
test
fs
cmp
js
cld
lcall
mov
aad
repnz
xchg
lock
jl
add
cs
xor
push
pushl
lds
adc
cmp
mov
xor
loopne
dec
test
dec
incl
push
sbb
jnp
or
les
xchg
cmp
cs
mov
pushl
sub
inc
jne
add
pop
in
les
leave
fisubrl
pop
cmp
dec
sub
fcomip
xchg
mov
mov
aam
shrl
fcomip
clc
clc
movsb
bound
pop
stos
mov
mov
pop
sahf
adc
loop
and
pushl
adc
sub
mov
les
add
stc
dec
mov
dec
lret
and
ljmp
clc
or
inc
pop
inc
push
into
jae
lcall
jae
pop
lock
sbb
xlat
out
lcall
dec
and
mov
inc
xor
push
mov
loopne
or
movsl
roll
add
pop
lahf
add
mov
mov
loopne
xchg
fs
int3
inc
hlt
and
sub
push
xchg
jb
mov
jge
sub
mov
pop
rorb
adc
cmpsb
add
jg
aas
call
test
push
out
outsb
mov
mov
pslld
cmp
data16
inc
pusha
mov
or
lcall
sub
out
mov
shl
int3
dec
xlat
jmp
aaa
xlat
inc
dec
enter
cltd
jge
mov
cmpsb
lahf
inc
ret
inc
sbb
std
or
loopne
add
cmc
push
adcl
imul
test
rcr
incl
dec
xchg
rorb
lea
xor
dec
fs
mov
cmpsl
daa
mov
mov
pop
mov
push
data16
sbb
and
jg
incl
lahf
testl
pushf
lds
cmp
push
sub
lcall
inc
push
mov
push
test
mov
sub
sbb
scas
clc
addr16
add
inc
and
aam
inc
add
sti
pop
or
mull
push
das
rclb
bound
pushl
push
test
out
movsb
leave
jo
push
jbe
bound
scas
mov
adc
repz
mov
jg
pushl
movzwl
pusha
xchg
negl
add
mov
xchg
jge
cmp
out
xchg
daa
push
into
addl
pushl
mov
cmc
js
jg
sub
pop
out
les
and
call
inc
push
call
dec
jo
inc
outsb
loope
imul
sbb
and
sub
cmc
filds
rcrb
jg,pt
pop
shl
mov
iret
sar
pop
in
call
xchg
aad
mov
stos
aam
out
adc
inc
and
inc
jmp
ljmp
enter
sbb
sbbb
push
jg
mov
enter
push
mov
cld
cmp
jmp
adc
cltd
sbb
cmp
and
inc
jae
xchg
pop
push
xor
lcall
bound
pop
mov
push
xchg
push
ror
out
jae
out
sar
ds
and
push
mov
lahf
jle
sub
js
ja
sub
and
nop
pop
stc
pop
xor
and
push
add
ret
int3
mov
test
enter
cmp
mov
mov
ret
adc
add
jno
ljmp
jmp
cmc
jmp
aam
and
add
cmc
jns
mov
jmp
fs
cli
test
and
rcrl
stos
je
dec
sbb
pop
fiaddl
mov
jle
dec
rcr
fdivr
cmp
cmpsl
jnp
and
jne
mull
es
mov
jnp
outsb
rcrl
enter
sbb
lea
stc
push
add
pop
je
decb
popf
pop
int
jo
sbb
call
hlt
idivb
imul
and
mov
add
dec
push
push
fwait
das
jne
adc
xchg
call
das
out
in
xor
test
outsb
ret
insb
mov
out
cli
call
add
shrb
insl
pop
inc
mov
xchg
cli
cmp
sub
add
outsb
pop
scas
push
test
dec
lock
xchg
cmp
call
adcl
add
rclb
jl
stos
aaa
fisttps
jecxz
in
aad
and
push
or
leave
iretw
lret
jb
test
hlt
imul
std
fnstenv
xor
mov
or
mov
bound
or
movb
push
or
fnstenv
mov
add
cmc
mov
jp
xor
pop
push
inc
insl
jae
maskmovq
negl
dec
call
stos
mov
mov
cli
mov
subb
fdivrp
decl
ret
pop
loope
in
rorb
scas
mov
fcom
push
adc
shl
test
adc
ljmp
push
jo
adc
sahf
lahf
aaa
loope
sub
jns
or
icebp
int
in
es
push
scas
mov
jb
sub
repz
clc
insb
in
xor
mov
lret
push
pop
loop
add
pusha
sbb
jp
dec
dec
xor
inc
push
loopne
stos
lret
pushl
out
adcb
lcall
adcl
sti
sbb
cmpsl
imul
loope
call
adc
dec
aad
inc
enter
mov
pop
add
call
sub
popa
incb
mov
mov
jg
mov
je
decl
cwtl
xchg
cwtl
or
out
inc
sti
mov
jae
out
shr
lret
sbb
mov
mov
and
mov
stos
lock
fstpl
xor
pop
dec
les
inc
pushl
rcrb
mov
ds
adc
fcoml
mov
sbb
data16
enter
jmp
push
sbb
cs
sbb
bound
pusha
mov
xchg
push
mov
mov
addr16
stc
xor
ja
inc
and
cmp
sbb
jb
insb
jg
int3
jecxz
push
cmp
cld
pop
pushl
repz
xchg
ret
add
outsl
add
cwtl
mov
adc
test
loop
arpl
dec
test
jo
xchg
fld
incb
jge
dec
jge
mov
jle
ljmp
and
ss
das
push
insb
aam
int3
shll
mov
lock
out
cmp
ret
outsl
cli
inc
addr16
cltd
shrb
std
push
adc
insl
sub
jle
les
outsb
jg
pushl
ret
adcl
mov
mov
daa
mov
lcall
pop
sbb
mov
inc
loop
popa
push
cmpsl
imul
push
inc
mov
divb
incl
movsb
out
ret
mov
push
fcmovnu
lods
out
ret
xchg
add
sub
call
dec
jg
call
call
xchg
stc
dec
dec
inc
mov
lods
push
out
cli
inc
dec
xor
sbbl
test
ficoml
bound
sbb
inc
mov
das
mov
pop
jecxz
and
pop
sbb
and
or
xchg
loopne
dec
pop
xchg
std
ja
mov
mov
imul
xchg
cs
fstpt
les
lahf
and
sub
cs
loopne
aam
mov
sbb
adc
addr16
lods
xor
pushl
jl
cmpsl
pusha
in
mov
xchg
mov
push
mov
sbb
xchg
std
call
loope
or
icebp
loope
sahf
pusha
sbb
scas
dec
cwtl
dec
fwait
cmpsl
je
xor
pushl
aas
testb
xlat
sub
mov
pusha
mov
sbb
cmc
xor
jge
inc
push
call
arpl
cmp
push
push
cwtl
cmc
and
jp
mov
mov
out
jp
push
adc
iret
shrl
and
aas
movl
inc
push
jbe
sar
in
xor
nop
xchg
stos
jl
ficompl
xchg
mov
jmp
mov
nop
push
fs
xchg
sub
es
leave
pop
idivb
sbbl
add
aas
inc
mov
ds
add
add
and
dec
bound
mov
outsl
jb
sub
ljmp
sub
pop
jg
jo
lds
mov
or
sti
mov
int3
and
inc
adcb
and
dec
out
push
lock
jno
out
sub
rcrb
sbb
or
pop
int
fistpl
lock
mov
lret
cs
pop
xbegin
cwtl
mov
das
clc
ljmp
jns
xor
iret
push
pusha
pop
xchg
push
sub
gs
xor
or
scas
incl
out
sarl
add
jl
div
and
aaa
fcmovb
fildll
dec
in
sub
js
filds
cmp
pop
test
js
in
ljmp
sbb
lods
std
xor
inc
inc
idivb
xor
cltd
sub
mov
ret
mov
mov
movsb
cmpsl
lcall
and
loope
cmp
gs
inc
ja
cmp
cmp
call
jmp
mov
cmp
rcrb
add
rorb
add
jg
and
fistps
notb
adc
adc
mov
mov
xor
push
incb
or
decl
adc
leave
add
test
mov
in
push
inc
mov
call
ljmp
dec
sbb
fistl
sbb
dec
data16
mov
push
stos
xchg
cmc
mov
insb
je
push
lcall
mov
cmpsb
flds
fidivrs
jmp
inc
add
rcr
sbb
call
jbe
xor
or
decl
and
cmp
scas
sub
xchg
iret
or
dec
popf
jbe
decl
push
je,pt
xchg
lea
sbb
lods
sub
sti
inc
xchg
les
bswap
cmpsl
jmp
popa
mov
in
jge
lret
inc
jle
popf
cmpsb
fiaddl
push
nop
add
dec
ret
cmp
ret
push
cltd
gs
lahf
mov
rolb
test
xchg
jb
jns
jns
xchg
jg
cmp
sahf
aad
jnp
jbe
mov
bound
cmp
call
decl
and
lock
inc
jbe
lret
xchg
xor
cpuid
xchg
jno
divl
inc
push
push
scas
pop
out
lock
nop
negb
clc
mov
jmp
mov
in
popa
jmp
sub
ljmp
gs
ja
mov
cmp
and
into
adc
cmp
inc
pop
cmpsb
aad
mov
idivl
mov
mov
jmp
jnp
and
ljmp
inc
or
add
xchg
mov
mov
mov
enter
loop
call
ljmp
push
mov
xor
call
loopne
mov
add
pop
pop
push
idiv
cld
mov
aam
scas
aas
xchg
adc
scas
xor
mov
aam
xor
jns
cli
cmpsb
decl
roll
insb
and
jge
mov
xor
push
xchg
incl
cwtl
ds
pop
int
je
add
xchg
jl
fs
lcall
sbb
jns
mov
push
add
jbe
xchg
ret
jl
insl
wrmsr
ror
call
or
lahf
cmp
sub
incb
xchg
add
xchg
cmp
mov
in
push
mov
ljmp
inc
cwtl
and
jecxz
and
stos
mov
popf
cmc
xchg
pop
mov
stos
pop
gs
test
fldl
push
xor
loop
ror
nop
push
mov
shrl
xor
mov
cmpsb
subb
mov
rcrl
insl
out
adc
sbb
mov
sub
dec
add
pushl
fbld
fldt
in
sbb
ret
mov
clc
push
in
push
scas
cs
mov
ljmp
fisttpl
xor
and
sub
ret
xchg
xor
js
mov
dec
insb
mov
insl
mov
sbb
xchg
push
lret
inc
mov
jg
and
fdivrl
aaa
mov
inc
fs
jns
cmpsl
das
cmp
js
loope
in
add
dec
and
jecxz
push
call
push
sbb
xor
ds
push
cmpl
out
push
call
outsb
pop
rcl
test
or
and
daa
mov
fsubl
ss
sub
ljmp
pop
fldenv
lahf
cmpl
mov
adc
lahf
xor
and
cmp
iret
repz
mov
pop
push
aam
loop,pn
sti
mul
mov
call
inc
outsl
sbb
add
jg
divb
mov
ljmp
es
xchg
repnz
mov
add
incl
arpl
shll
sahf
cwtl
inc
xchg
push
mov
jle
test
out
pop
cmp
jbe
mul
iret
pop
iret
test
mov
test
mov
test
call
push
and
cmpsl
push
cmp
imul
and
fucomp
aas
ljmp
lcall
xchg
fninit
pop
adc
add
sbb
es
bound
mov
inc
pusha
aam
inc
inc
inc
aas
jge
dec
mov
push
dec
inc
fimuls
decl
jno
push
mov
hlt
ds
push
xchg
mov
and
mov
cli
pop
cmp
jns
push
mov
and
insb
mov
push
pop
pop
dec
andl
xchg
add
outsl
test
xchg
xchg
mov
test
add
cli
push
jno
cmpl
lahf
int3
pop
scas
inc
ljmp
ret
dec
xor
popa
js
rcl
and
lcall
fucomip
pusha
insb
std
dec
int
push
nop
addr16
sub
in
loopne
aaa
repnz
decl
or
pop
imull
xchg
xchg
cmp
cmp
lods
dec
adc
aad
adc
pop
cld
sbb
nop
xor
mov
dec
lret
and
dec
fstl
pop
dec
xor
cmc
pop
pop
lods
mov
mov
pop
dec
adc
push
cmp
sbb
mov
decl
jp
out
int
subb
dec
inc
xor
scas
fsubs
jns
out
and
cmp
jno
cmp
inc
test
aad
or
sbb
nop
pop
push
sar
dec
inc
or
mov
jae
in
xchg
movsb
cmp
imul
adc
imul
cwtl
sub
sub
les
cmp
shlb
push
dec
mov
rolb
mov
bound
fcoml
call
push
cmp
mov
xor
loope
fldcw
sub
pushl
lret
adc
dec
pushf
inc
adc
pop
loopne
mov
shlb
repz
dec
or
adc
jmp
stc
test
xor
nop
dec
ss
adc
jno
stos
scas
jo
loop
jg
push
mov
lods
dec
test
stos
and
add
dec
inc
add
jmp
xorb
sbb
aaa
push
testl
cmp
call
mov
rcrl
and
insb
negb
push
push
int
lock
lock
cmp
js
mov
mov
pop
insl
pop
lods
aam
cld
push
mov
dec
push
ljmp
cli
cld
cmp
xchg
or
lds
rcll
aas
js
adc
xor
dec
in
xlat
mov
or
push
test
pop
mov
add
push
xlat
out
aas
lret
mov
imul
or
call
enter
jbe
pop
daa
sbb
cld
mov
and
or
pop
mov
push
xchg
mov
ljmp
mov
mov
outsl
pop
les
sarb
jecxz
or
mov
add
scas
ljmp
xchg
or
ja
ret
loop
movsl
inc
pop
mov
mov
call
clc
dec
and
loope
fmull
xchg
lods
aad
fstl
shrb
shrb
aas
out
fs
std
mov
shl
in
jmp
fucomi
sbb
push
je
jle
orb
int
jle
xchg
aas
sub
ret
lods
daa
lock
xlat
rcr
pop
data16
decl
xlat
add
in
cltd
jnp
int3
jp
pcmpeqw
les
push
arpl
xor
rcrl
lcall
add
mov
clc
imul
fimull
add
dec
ljmp
loopne
popa
sub
push
out
in
fwait
dec
xor
cmpsb
movsl
stos
int3
stos
ret
ljmp
je
pop
ret
and
or
xchg
outsb
mov
ljmp
add
inc
int3
inc
xchg
lods
sub
int
in
add
fdivrl
cmpsb
dec
call
cmp
sbb
xchg
das
bound
jge
adc
and
inc
subl
mov
lcall
jmp
sbb
cmp
insl
xchg
xchg
sbb
pop
cmp
mov
fisubl
lcall
cmp
testl
sahf
xor
in
jp
xor
adc
icebp
ljmp
cmp
loopne
js
out
pop
dec
lret
xor
outsb
mov
sahf
roll
popf
adc
cmp
xor
lcall
cmp
push
test
das
clc
outsl
cmp
je
xchg
mov
and
cmc
orb
inc
or
mov
std
fs
pop
insb
fdivl
ds
es
out
clc
incl
lods
and
or
cmp
icebp
sub
jae
fwait
scas
clc
incl
jmp
ljmp
jl
mov
add
mov
jmp
xor
std
mov
in
mulb
dec
mov
xor
pop
test
push
sar
shrl
std
jmp
popa
and
and
lea
inc
push
push
mov
repz
mov
mov
filds
adc
pop
xor
mov
xchg
pusha
loopne
lcall
in
mov
mov
or
loopne
addl
xchg
sub
mov
cmpsl
decl
mov
clc
xchg
fs
mov
adc
daa
mov
inc
jl
cmp
les
adc
mov
cltd
jg
loope
aam
mov
jnp
or
inc
pop
xchg
out
inc
icebp
call
push
dec
dec
leave
fcmovu
dec
mov
loop
addr16
adc
mov
out
mov
out
push
sbb
incl
fdivl
xor
jo
lcall
into
xchg
or
xlat
pop
cmc
jmp
popa
stc
pop
sahf
fwait
push
outsl
je
aam
fistpl
pop
hlt
cmp
adc
jmp
xchg
jns
fldt
cmp
jae
inc
cmp
int
mov
inc
sbb
dec
adc
jecxz
add
call
fisttpl
in
aad
push
and
pop
pop
ds
push
nop
jp
push
test
ljmp
xchg
gs
pop
imul
aaa
xor
or
in
js
cmp
call
mov
jl
mov
jns
mov
pop
fsts
adc
jecxz
pop
lea
dec
xchg
jns
addl
hlt
je
enter
adc
stos
insb
out
cmp
mov
ljmp
or
movsl
int
inc
repnz
jnp
mov
jmp
push
nop
dec
inc
mov
repz
int3
cmpl
lds
cltd
pusha
stos
inc
sbb
jmp
mov
adc
fidivrl
lods
jmp
xor
and
icebp
or
xchg
out
sar
lods
ss
xchg
outsb
adc
cmpsb
xchg
jb
cld
dec
cmpl
jno
push
add
ljmp
ret
jge
cwtl
and
xchg
fwait
hlt
dec
shl
jp
addr16
jg
jne
mov
xchg
daa
inc
stos
or
data16
movntq
out
outsl
and
or
lods
mov
iret
cltd
movsl
lcall
imul
push
mov
push
fmull
add
push
push
jmp
loopne
ss
mov
arpl
sysenter
bound
imul
jnp
pop
popf
push
mov
incl
jne
pop
inc
call
xor
das
jecxz
nop
insb
mov
push
mov
in
mov
jae
ja
fmuls
adcb
mov
insb
cmp
push
adc
ljmp
cmpsb
test
cmp
xor
push
mov
jg
insb
clc
into
jb
ja
fiaddl
mov
sbb
jmp
decl
push
and
mov
xchg
mov
xchg
je
nop
loop
out
jl
shll
incl
sbb
mov
push
sahf
out
xor
mov
jb
pushf
add
imul
decl
rcl
sbb
xchg
add
jle
add
mov
ret
pushl
pop
xorb
xor
ret
mov
pop
stos
add
push
dec
clc
lcall
sbb
stos
out
push
in
sbb
sarl
stc
ret
sbb
sahf
cs
pushl
xchg
jnp
outsb
cltd
es
dec
add
cld
inc
es
dec
mov
push
mov
jb
mov
cmp
movsl
lods
jns
pop
shrl
hlt
call
pop
das
push
call
mov
xchg
or
add
mov
adc
lock
and
cmp
sahf
sub
adc
inc
incl
subl
aas
push
jge
jmp
scas
jmp
sub
jl
push
jmp
cmp
sub
push
movl
js
mov
push
jecxz
mov
mull
ret
por
dec
push
mov
daa
push
pop
adc
mov
cld
adc
inc
lcall
and
adc
shlb
xchg
ret
ljmp
cmp
addr16
int3
sub
mov
insb
cli
ficomps
xchg
jg
dec
add
jbe
fdecstp
test
jbe
ljmp
dec
jne
jge
rcrl
clc
inc
stos
jmp
or
jmp
pop
aad
mov
jmp
int
outsl
ljmp
pop
sar
jmp
xchg
aas
add
xchg
jns
adc
pop
jbe
sub
add
and
decl
mov
arpl
incl
sar
mov
xchg
xlat
cli
loopne
decl
sbb
jns
and
sbb
rol
push
inc
fs
les
push
ljmp
scas
sub
call
sbb
das
pop
js
push
add
cmpsb
cmp
scas
xchg
push
in
sub
fcmovu
ret
stc
xor
ret
stc
ljmp
pop
mov
icebp
ss
and
mov
int
inc
xchg
jl
js
lret
cli
incl
sub
std
jg
repz
adc
insb
insb
adc
mov
or
aaa
pushf
popf
jmp
adc
arpl
aaa
insl
imul
mov
sbb
sub
inc
out
ja
mov
cld
jo
and
rep
mov
and
pop
incl
mov
add
rcr
and
mov
or
cli
call
stos
lock
pop
inc
push
loope
lods
and
jge
xchg
or
mov
or
hlt
mov
xor
inc
sub
cli
andl
sub
aam
ja
jno
lret
xchg
sbb
sbb
insl
popf
and
jle
sarl
mov
in
outsb
xchg
dec
ret
inc
lods
pop
jg
inc
stc
xchg
ret
imul
cld
xor
fs
test
lods
push
insl
ret
iret
lods
repnz
hlt
incl
pusha
xor
scas
into
rol
sar
cmp
xchg
dec
inc
mov
lret
cmp
push
add
mov
jns
lahf
mov
stos
dec
jl
je
fs
btc
xor
imul
lret
out
fcomip
push
movsb
lea
scas
testb
movsb
or
scas
stc
leave
xor
stc
int3
pop
add
xchg
xchg
es
fidivrl
add
sbb
xchg
xchg
inc
ljmp
mov
push
js
or
inc
sub
xchg
or
pop
call
fstpt
js
inc
ljmp
xor
mov
int
sti
mov
xchg
mov
add
cmp
xlat
scas
fsubs
or
xchg
out
subl
repnz
inc
inc
divl
fnstsw
leave
ss
repnz
mov
push
inc
cmpsl
push
or
mov
mov
push
dec
outsb
pop
and
jge
jae
cmc
mov
scas
pop
sub
les
push
rorl
or
aad
movsb
and
int
cs
mov
mov
sub
bound
push
cmp
daa
divl
sub
call
ljmp
test
ja
scas
xchg
mov
adc
jp
xchg
cli
mov
lcall
lcall
icebp
fnstcw
push
andb
sahf
add
insl
ret
lcall
add
les
jmp
push
sub
jle
xor
mov
cmp
pushl
or
xor
inc
and
lea
mov
mov
insl
rclb
ljmp
jmp
add
test
sbbl
in
fldl
addr16
or
push
stos
xor
inc
inc
push
pop
jecxz
jmp
xchg
test
sbb
inc
pop
dec
inc
mov
dec
sub
movsl
pop
js
xchg
call
enter
out
cmp
clc
cmp
push
jmpw
inc
addr16
or
testb
inc
push
inc
loop
call
sbb
scas
push
cmc
mov
sub
mov
mov
lds
add
dec
adc
sub
or
das
in
xlat
lret
push
dec
dec
cmpsl
push
xchg
aaa
mov
in
test
xchg
pop
loope
push
sbb
dec
mov
sub
scas
call
pop
clc
push
aad
or
int
rclb
push
sbb
popf
ss
mov
outsl
clc
inc
mov
aas
mov
aas
inc
adc
jnp
outsb
fisubs
dec
shl
jle
push
add
mov
mov
ret
out
mov
cmp
mov
mov
mov
dec
scas
xchg
sub
inc
mov
xor
enter
push
xor
lock
push
inc
add
outsb
lret
test
xor
mov
jmp
jns
push
leave
jecxz
enter
xor
mov
loop
pop
daa
aaa
dec
rcr
int
or
lock
enter
decl
adc
das
cmp
mov
pushf
dec
fildl
jb
xchg
push
imul
in
lcall
adc
les
adc
sub
ljmp
movsl
adc
dec
les
decl
sub
dec
addr16
test
lea
lock
xchg
xor
aaa
xor
mov
mov
fidivrl
lcall
dec
push
out
stos
lods
cltd
jmp
xor
jns
push
pushl
fstpt
decl
loop
jbe
mov
test
jmp
imul
dec
push
test
mov
call
pop
xor
and
cmp
loope
sbb
call
jns
push
cltd
adc
in
fcmovnb
inc
mov
out
dec
repz
jns
inc
and
adc
incl
loope
aaa
sbb
into
push
push
rorb
subb
adc
imul
dec
loopne
lcall
mov
icebp
inc
push
fs
add
sbb
shll
dec
clc
xchg
lods
aad
lret
ljmp
mov
int3
adc
nop
sbb
mov
dec
pop
fidivrs
and
inc
and
ret
ljmp
push
fstpl
or
push
mov
sub
xor
jnp
dec
js
sbb
ljmp
mov
decl
pop
scas
loopne
call
cmp
or
pop
stc
popa
push
lock
fdivrl
jmp
out
bound
pop
popa
xor
ret
jl
inc
das
pop
arpl
subl
push
pusha
pusha
jge
lret
shrl
or
cmpsb
js
add
cmp
jp
call
push
inc
pushl
cmpsb
lret
arpl
dec
sbb
test
or
sbb
hlt
call
ljmp
push
ss
xchg
xor
rcr
in
scas
sbb
dec
lcall
or
jbe
cmpsl
adc
int3
dec
push
hlt
sqrtps
scas
dec
xchg
mov
pop
stc
mov
mov
into
loope
repnz
pop
pop
pop
xorb
das
add
sbb
lods
fcomip
out
clc
test
pop
and
or
into
jns
in
test
jmp
jbe
ljmp
cmpsb
xor
or
arpl
in
xchg
sarl
je
adc
fnstcw
xchg
iret
adc
pop
pop
cwtl
movsl
call
int3
sarl
lcall
and
cmpsb
push
cmpl
arpl
decl
jle
mov
int3
das
sub
shl
cmp
jbe
aam
mov
mov
mov
movsb
inc
xchg
mov
in
ljmp
jb
xchg
data16
and
jbe
int3
int3
sbb
inc
adc
pop
cli
sbb
push
loopne
and
out
nop
mov
add
or
decl
add
ds
push
sub
push
jnp
mov
adc
sub
xchg
mov
push
bound
inc
inc
jmp
inc
push
inc
int
adc
ret
ljmp
push
test
es
xchg
push
lods
pusha
mov
jl
cltd
xchg
aas
insl
push
xchg
jmp
ret
pop
imul
adc
cmpsl
aad
in
mov
insl
lock
pushf
fwait
sub
push
cmp
add
jg
dec
xchg
sbb
dec
loope
insb
aaa
iret
imul
int
insb
clc
je
mov
sahf
out
test
cmpsb
pop
pop
mov
ud2
jecxz
dec
or
loop
dec
jnp
pushf
jbe,pn
jne
scas
cli
jmp
xlat
pushl
js
sbb
mov
mov
xchg
or
mov
push
xchg
ret
repnz
cmp
aaa
dec
fadd
sbb
push
or
dec
and
xchg
lcall
add
mov
push
repnz
mov
mov
sbb
xchg
xor
test
decl
mov
stos
mov
bound
pop
pop
mov
aas
add
adc
dec
sti
sbb
call
aam
xchg
flds
mul
cwtl
jae
stos
push
jmp
repz
out
dec
inc
dec
sub
dec
roll
cmp
xchg
dec
adc
jmp
mov
rcrl
adc
or
xchg
jle
mov
rcrb
xchg
ja
test
incl
dec
push
test
cmp
fs
xchg
add
lcall
ljmp
push
test
xor
xor
ja
aad
adc
mov
lret
push
lahf
xor
jg
sbb
and
xchg
out
and
ret
pushl
imul
repnz
mov
enter
sbb
leave
aad
jbe
mov
ljmp
decb
xor
mov
sub
cmp
jmp
push
fisttps
push
test
lods
xchg
inc
xlat
sub
mov
adc
push
movsl
and
jne
pop
lock
je
fimuls
cmc
pop
ljmp
jbe
icebp
test
sbb
mov
jb
in
push
pop
sbb
repz
add
adc
dec
testl
lods
mov
clc
push
dec
jne
sti
and
jl
and
in
call
pop
roll
mov
mov
jg
mov
jne
daa
pop
mov
jnp
bound
adc
sar
ljmp
js
cmp
in
xchg
ret
xchg
mov
ljmp
aam
xchg
dec
adc
xchg
test
mov
cmp
decl
inc
jge
fisubs
fsts
dec
aad
ret
das
add
pop
lcall
mov
mov
mov
mov
mov
pop
rcl
pushl
out
dec
mov
mov
pop
in
pushl
xchg
shlb
mov
lret
push
sub
cltd
call
mov
jle
pop
push
fists
sub
add
xchg
push
xchg
sub
xor
add
sbb
lahf
in
mov
jb
push
mov
decl
nop
pop
push
push
enter
out
loope
mov
iret
das
sbbl
jg
je
jmp
jmp
or
test
pop
fcoms
jbe
out
cli
call
inc
dec
inc
inc
push
dec
mov
cld
mov
ss
movsb
ljmp
lock
add
arpl
xchg
aam
mov
in
inc
mov
fwait
mov
pop
lcall
movsl
ljmp
mov
dec
sbb
clc
in
jle
call
cld
adc
call
xchg
mov
dec
mov
push
imul
jmp
scas
jns
loope
inc
leave
mov
jecxz
add
hlt
jne
js
cmp
pop
jmp
dec
and
jb
in
rclb
jb
aad
int3
jecxz
mov
inc
adc
fcoml
aaa
jmp
ss
xchg
push
xchg
mov
push
out
leave
xor
mov
mov
sti
xor
hlt
push
mov
mov
rcrb
jecxz
lcall
out
clc
pop
fs
cwtl
in
adc
xchg
mov
orb
std
addr16
dec
push
into
adc
cs
sub
call
dec
push
pop
sbb
into
or
test
pop
fildll
xor
and
ret
lock
cmp
es
sbb
pop
dec
xchg
sbb
enter
pop
outsl
lds
push
pop
lea
nop
jo
pushl
ret
sbb
andb
sbb
sub
call
adcb
mov
test
ret
jns
or
fdivrl
or
mov
mov
inc
adc
out
mov
out
in
mov
data16
inc
jno
dec
jl
dec
pushf
dec
dec
inc
push
hlt
pop
cwtl
jo
call
lods
fiadds
sahf
xlat
adc
clc
jmp
cmp
das
mov
hlt
sahf
ss
int3
scas
xchg
call
dec
ds
jae
movsb
into
jecxz
push
pusha
ljmp
jecxz
iret
cmpl
in
xlat
pop
movaps
xlat
pop
mov
jmp
push
pop
lret
adc
cmp
and
xchg
push
xchg
iret
xchg
icebp
ljmp
xchg
pop
cwtl
pop
shrl
out
add
inc
xor
fnstenv
sbb
loopne
lcall
out
lcall
in
mov
test
shl
sahf
pushf
pop
adc
decl
incb
loopne
mov
xorb
jo
xlat
and
leave
mov
in
sbb
hlt
jle
or
in
inc
leave
sbb
inc
bound
ljmp
lods
xor
outsb
sub
int
das
stos
aaa
fbstp
inc
lea
add
push
sbb
shrl
sbb
lcall
pop
cmp
sbb
movsb
fcmove
and
shlb
repz
mov
outsb
aas
aaa
jg
ljmp
adcb
test
mov
jecxz
xchg
lods
mov
jmp
adc
in
popf
push
cs
dec
repz
mov
dec
sbb
adc
pop
rclb
sbb
call
sbb
or
int3
and
daa
test
popa
jae
jnp
add
and
add
jmp
arpl
mov
xchg
idivb
xchg
mov
jno
mov
call
cli
pusha
mov
pushf
lcall
mov
push
add
jmp
jp
out
out
lcall
out
test
adc
clc
adcl
ljmp
xchg
lods
test
jns
mov
fsubs
fwait
or
pop
xchg
sub
cmp
mov
cmpsb
in
inc
add
cmpsb
pop
xchg
ss
ljmp
scas
cmp
dec
xor
push
imul
pusha
mov
in
pop
std
out
jb
sarb
add
fnstcw
bound
mov
xor
pushl
jno
jecxz
fisttps
mov
cmpsl
or
cld
xor
repz
and
push
faddl
xchg
xchg
pushf
inc
cwtl
je
lods
rcr
inc
leave
sti
out
mov
subl
and
sarb
lret
arpl
stc
clc
clc
imul
push
fs
jb
ljmp
into
lea
out
inc
xor
xchg
cmp
idiv
lcall
add
cld
jo
into
repnz
sub
xchg
or
int3
iret
psubusb
inc
xlat
negl
ds
ds
cmp
mov
loop
ja
push
jp
dec
mov
ljmp
movsb
idivl
ja
xchg
inc
sbb
mov
push
mov
scas
mov
in
movsl
push
aas
test
lcall
sub
adc
or
jmp
xchg
jae
icebp
dec
cs
loop
sarl
jnp
xor
push
call
insl
pop
insb
icebp
int
lds
and
pop
jae
jmp
or
out
rcrl
dec
sub
mov
mov
out
xchg
cmp
cmp
das
add
insb
inc
je
or
jmp
subl
aad
insl
jne
inc
and
icebp
lret
and
sbb
sbbb
fbld
inc
push
scas
out
push
or
dec
push
jmp
mov
pop
mov
test
inc
mov
inc
xchg
ja
xor
add
jbe
mov
test
lcall
pushl
repz
popl
sub
sub
js
jle
mov
inc
sti
or
pop
add
sbb
push
mov
jmp
sub
push
lret
popf
aaa
inc
imul
js
sbb
clc
fcmovnu
jg
fisubs
xchg
dec
add
ret
mov
adc
jmp
popf
loop
pop
fnstcw
insb
cltd
push
cmp
bound
rclb
pmaddwd
movsb
filds
stc
sbb
les
push
sub
xor
sbb
sahf
dec
aad
or
ljmp
cli
aad
and
dec
mov
test
clc
lds
ret
fcomp
push
shrl
das
cli
call
das
jl
lods
jge
mov
imul
clc
je
fldl
ljmp
ss
add
adc
cmp
int3
sbb
test
and
fdivp
mov
jmp
inc
sub
mov
sbb
pop
pop
out
mov
jmp
hlt
jg
imull
adc
loope
rep
hlt
pop
jl
andl
lret
incl
or
sub
add
int3
sbb
out
out
orl
lahf
mov
dec
mov
aad
es
in
and
fisttpl
test
js
arpl
inc
push
out
test
push
xlat
lods
and
mov
fmul
and
xor
dec
orb
aam
or
pushf
bound
fs
dec
adc
popf
test
push
out
ror
popa
test
enter
imul
sbb
pop
imul
test
adc
mov
pushf
add
jbe
sub
xchg
lcall
sub
dec
add
repnz
out
cmp
cmp
hlt
push
mov
dec
call
xchg
data16
add
jp
xor
mov
dec
jmp
leave
icebp
sahf
mov
leave
pop
aas
in
ds
fcompl
arpl
adc
sub
stc
aad
jmp
repnz
dec
sub
leave
out
scas
roll
pop
mov
mov
push
or
add
jg
mov
cltd
pushf
movsl
shlb
andnps
call
xor
fstps
in
ljmp
sbb
sub
nop
mov
loop
or
gs
loop
clc
stos
pusha
rorl
shl
shr
std
fdivs
jmp
mov
push
cli
jl
lret
mov
inc
aam
mov
hlt
iret
jae
cmp
mov
dec
in
sub
lahf
lods
sub
push
or
fiaddl
rcrl
mov
mov
xchg
fwait
sub
out
inc
xor
push
cld
decl
lret
in
js
test
pop
enter
ss
decl
ss
pushf
in
test
int
mov
mov
sub
mov
out
push
ficompl
loopne
lcall
lea
cmp
mov
mov
testb
pop
cmp
mov
ljmp
push
jmp
stc
push
add
sbb
push
std
call
out
jl
mov
iret
testb
lds
std
or
into
call
sahf
adc
adc
sub
push
jmp
adc
fabs
sub
fistpll
xor
push
add
mov
lcall
lcall
stos
mov
fistl
sbb
sbb
pushl
mov
data16
ficomps
inc
mov
jmp
repz
shll
inc
xor
cmpsb
in
call
inc
xchg
and
pop
mov
xor
push
mov
out
adc
sti
pop
sub
int3
rcrl
mov
in
adc
cli
inc
or
es
call
lock
imull
daa
push
mov
aam
aas
outsb
pop
test
daa
pavgw
lcall
imulb
leavew
adc
lcall
nop
fstpl
push
inc
cmp
insb
xor
decl
clc
lea
fidivs
add
fucomi
leave
sub
xchg
push
sbbb
cmp
dec
mov
add
inc
xor
pop
ss
pushf
dec
test
loopne
xchg
sbb
cld
clc
jbe
xor
aam
xor
mov
mov
leave
inc
mov
and
cmpsl
sub
ja
mov
push
mov
adc
pop
or
xchg
bound
mov
mov
pop
xchg
jmp
pop
shrb
sti
loop
push
negb
mov
pop
ret
inc
test
push
clc
decl
sahf
adc
addr16
pop
pop
cltd
aam
scas
fists
cli
outsb
pusha
ret
mov
lock
mov
mov
lcall
xor
push
decl
jno
pop
inc
imul
js
xchg
push
pop
loope,pn
ljmp
scas
cmp
jg
mov
call
lods
fistps
cmc
or
popa
mov
cmp
inc
aad
loop
bound
sub
cvtps2pi
inc
inc
cli
mov
push
fstl
sub
subb
dec
sbb
sub
repz
cmp
in
dec
loopne
test
xchg
movsl
into
sbb
or
cwtl
pop
sub
lcall
int
adc
fnstsw
mov
add
daa
hlt
or
sbb
and
mov
incl
mov
adc
xor
mov
adc
inc
pop
fdivrl
bound
pushl
sbbb
xor
xchg
ja
sbb
fistl
mov
enter
adc
lcall
ljmp
mov
fisubs
and
cli
adc
loope
je
stos
into
push
pop
roll
jmp
insl
std
negl
js
push
outsb
sbb
scas
sub
jmp
or
dec
adc
fdivs
push
jae
pop
mov
bound
int3
or
jle
int
loopne
ljmp
xchg
pop
cld
iret
pop
sub
mov
jl
inc
pop
repnz
test
xchg
lock
es
or
jno
mov
push
js
sub
inc
outsb
cmp
mov
or
jno
pushl
jae
mov
sbb
xchg
imul
cmp
or
pop
dec
jbe
inc
scas
jp
add
sbbb
pusha
imul
ljmp
rcrl
pop
lods
loopne
lret
lods
loopne
or
cld
out
mov
dec
adc
pop
xor
into
push
je
add
cmp
outsb
or
je
repnz
imul
pushf
fcomp
jg
cltd
ficompl
popa
loope
fldl
cld
mov
popl
andl
mov
out
cmp
xchg
push
push
and
in
cmp
shll
ret
sahf
mov
rcrb
ljmp
inc
mov
imul
es
in
test
inc
jmp
jmp
rolb
cld
mov
and
shrl
jo
clc
pusha
ja
mov
cwtl
cli
cld
jo
in
jp
bound
pop
xor
ljmp
clc
jle
adc
mov
inc
rclb
sub
inc
fimull
decl
and
ljmp
sahf
xchg
cmp
shrl
ljmp
fisubrs
cs
cmp
imul
pushf
add
and
cmp
bound
add
pushl
cld
jmp
push
mov
jae
popf
sub
mov
jecxz
imull
jecxz
icebp
sti
cmp
pushl
jbe
mov
fdiv
nop
inc
or
fwait
daa
insb
mov
xor
outsb
loopne
push
xor
push
and
add
adc
dec
lods
mov
and
outsb
push
sahf
ret
xchg
rclb
adc
pop
ret
arpl
ljmp
xor
outsb
sub
add
dec
push
sub
xchg
inc
mov
pop
sar
fbld
or
out
xlat
and
xorl
mov
lcall
jle
mov
fcoml
jae
and
push
daa
jno
call
cmp
imul
loopne
fstpl
mov
shll
push
push
cli
ret
add
cwtl
add
add
arpl
mov
mov
dec
xchg
rcll
cmovns
cmp
cmp
xlat
sbb
push
mov
xor
incb
pushl
lds
or
in
ljmp
xor
into
mov
popf
sbb
push
jge
cltd
pop
inc
push
lret
xchg
sar
lahf
lret
mov
mov
jg
or
add
pushf
test
and
inc
and
xchg
push
rcll
mov
add
xor
sbb
xor
imul
icebp
cmp
mov
cmp
jns
jle
inc
jnp
push
icebp
daa
shlb
push
mov
pop
pop
xchg
inc
sub
stos
mov
add
ljmp
call
cmp
pop
xor
sub
pop
loop
and
or
cld
jmp
hlt
sub
cmp
test
mov
mov
mov
mov
scas
cmpsb
and
mov
imull
mov
push
sti
cmpsl
rol
xchg
sbb
pop
inc
lods
adc
lcall
push
js
or
iret
pop
les
pop
cmc
loopne
mov
repnz
xchg
repz
out
inc
dec
test
es
push
mov
loopne
jmp
mov
pop
or
mov
loope
lods
xchg
incl
xor
xlat
lahf
fwait
stos
mov
jne
or
add
stc
and
ljmp
or
flds
loope
and
dec
sub
js
mov
incl
dec
lret
fisubs
or
push
cli
pop
mov
pusha
mov
or
xchg
sti
shl
sub
gs
movsb
dec
sbb
cmpsb
rcrl
cli
test
jle
test
rolb
test
aaa
jle
xchg
ret
in
jge
jb
loop
decl
jmp
lea
enter
jae
dec
fucomi
mov
lret
jmp
mov
rolw
cwtl
push
shll
insl
movsl
jnp
daa
pop
xchg
push
pushf
incl
iret
loope
mov
xor
cmc
faddl
out
testb
cltd
mov
mov
call
dec
fistpll
jb
aaa
std
adc
adc
jecxz
pop
pop
mov
mov
incb
call
mov
dec
leave
push
into
pop
or
out
sbb
movsb
imull
cmpsl
mov
push
cs
lcall
incl
out
loope
ficompl
xchg
and
jns
jo
daa
cmc
pop
fsub
sbb
in
in
dec
cmpsb
and
adc
cli
push
jecxz
mov
pop
mov
adc
aaa
addr16
mov
ljmp
pop
mov
xor
ds
mov
icebp
mov
mov
inc
push
aad
add
push
and
and
fcomip
pusha
insl
adc
dec
jle
sbb
lret
in
inc
or
movsl
mov
cmc
xor
cmp
fistl
mov
inc
imul
mov
or
incl
negl
cmp
adc
nop
add
insb
jne
icebp
lret
mov
sub
and
adc
scas
jle
mov
sub
gs
scas
mov
mov
mov
mov
jg
pop
jno
mov
xchg
pop
pop
rcrb
sub
arpl
decl
ljmp
loopne
cmpsb
cmpsb
xchg
out
mov
ret
jp
and
fdivr
jg
incb
inc
insb
cmp
sub
or
popa
cltd
push
out
imul
mov
clc
mov
inc
frstor
fnsave
dec
sbb
daa
mov
jns
dec
push
sti
mov
add
or
xor
inc
hlt
jcxz
les
mov
in
cs
xor
insl
xchg
aas
ficoml
js
sbb
push
or
stc
mov
mov
mov
popf
jge
cmpsb
cmp
mov
aam
decb
xchg
in
cmc
add
xor
adc
sarb
jno
mov
pushf
mov
mov
test
stc
sub
adc
std
or
jp
add
je
push
fwait
inc
mov
adc
lret
lods
lods
fisttpl
and
sub
lods
or
push
dec
aaa
call
add
fisubrs
xor
xchg
imul
repz
mov
mov
inc
das
pop
cmp
es
lods
outsb
mov
and
mov
jmp
sbb
mov
jmp
xor
jae
daa
push
push
sub
shrb
cmpsb
subl
cld
popf
add
insb
popf
cli
mov
scas
cmp
inc
or
sbb
js
pop
gs
pushl
jg
iret
xchg
xchg
test
aas
mov
and
setbe
pusha
or
mov
dec
mov
mov
mov
xchg
test
push
mov
mov
sar
aaa
cltd
lock
inc
jle
jecxz
dec
shlb
lds
mov
adc
mov
mov
xlat
jge
cld
rclb
lret
mov
stos
fdivrs
jb
cld
leave
stos
stos
pop
sbb
add
inc
jb
sti
ljmp
jmp
inc
fwait
sahf
fldt
daa
jp
lods
push
sub
add
fistl
pop
in
mov
cmpsl
mov
or
gs
les
incl
lods
orb
lock
repz
pusha
and
add
imul
mov
jge
lahf
call
pop
inc
lret
sub
enter
sbbl
pop
or
ljmp
lahf
cmc
insb
adc
sbbb
das
push
cmpl
mov
loop
loopne
xchg
pop
cmpsl
aad
inc
mov
pop
das
dec
aas
dec
clc
cs
sub
mov
dec
and
sub
and
pop
sub
cmpsl
and
add
sub
rcrl
incl
pop
mov
lret
dec
aas
adc
popa
cwtl
fcmovbe
int
mov
mov
xchg
sub
mov
pop
fistl
lret
out
sbb
sahf
and
or
pop
into
xchg
mov
jmp
sar
fnstenv
lret
sbb
jbe
inc
sbb
cmc
test
outsl
mov
pushl
lea
dec
lock
test
movsl
add
decl
cmp
mov
xor
xchg
jo
mov
add
lahf
mov
ja
push
movl
push
test
dec
lods
and
push
lods
jae
adc
dec
mov
jp
hlt
sub
mov
cli
fcoml
adc
ret
sbb
stos
sbb
pop
cmp
scas
fldt
insb
ljmp
dec
ret
pop
jle
xor
cmp
lahf
das
pop
xchg
in
repnz
xchg
lds
mov
call
dec
rorl
xchg
fidivrs
push
push
mov
mov
ss
test
test
jmp
push
push
mov
add
xchg
and
icebp
xchg
dec
test
jnp
inc
std
jmp
xchg
cmp
xchg
jae
add
mov
mov
ud1
push
mov
mov
call
ret
or
cmpsl
push
test
and
mov
sub
idiv
lcall
fs
or
aas
jno,pn
or
out
xchg
push
mov
add
jmp
clc
jge
in
sbb
pop
pop
xor
shrb
testb
loop
xor
mov
jecxz
int3
stos
arpl
mov
pop
jo
xchg
testb
jnp
or
mov
ficoml
in
test
gs
push
push
movb
sub
sub
mov
lea
insl
pop
outsl
and
incb
cmp
fwait
decl
jmp
add
cs
add
movsl
xor
push
xor
mov
repnz
xchg
and
lock
data16
push
dec
mov
jg
out
dec
push
shl
mov
movsl
fisubrl
jbe
repnz
cmpsl
and
inc
mov
decl
pop
mov
mov
mov
sbb
repz
lock
out
add
mov
ss
and
test
add
repnz
lock
push
adc
mov
rorl
adc
push
xchg
out
sbb
stc
les
and
jg
lock
aad
in
test
daa
xchg
cld
das
cli
or
stos
mov
in
mov
popf
xchg
test
pushl
bound
cmp
adc
fistps
test
in
inc
scas
jae
sbb
adc
cmp
xchg
adc
sub
adc
push
xchg
neg
ljmp
sbb
sbb
bound
je
test
xor
insb
xchg
pop
mov
lds
cmc
add
xchg
jmp
mov
sahf
mov
xchg
test
inc
rcll
cld
lahf
and
nop
dec
hlt
push
leave
inc
clc
push
int3
lods
dec
xor
or
inc
or
dec
jmp
mov
push
and
mov
mov
push
ss
mov
xchg
sbb
mov
lret
push
test
and
and
jmp
bound
cmp
push
mov
cmpl
les
push
das
pop
sar
out
pop
lea
arpl
data16
inc
lret
inc
inc
shll
xchg
jne
test
jg
sub
data16
cmpsl
add
push
aad
daa
ret
dec
rolb
iret
mov
pushl
xor
sub
cs
mov
mov
xor
hlt
aas
test
or
mov
lods
mov
cmpsb
mov
sub
sub
cmpsl
pop
in
xlat
add
pop
add
scas
dec
fistps
mov
jmp
lds
inc
popf
xlat
xor
push
fidivs
test
xor
incl
popf
test
test
addl
sbb
mov
loope
adc
popl
out
clc
ljmp
shlb
je
sub
jae
insb
xor
fisubrs
in
subb
gs
and
sub
int
outsb
sub
fstl
call
adc
aam
inc
loopne
out
push
dec
xchg
iret
push
cwtl
clc
iret
push
je
cmc
sbb
add
loop
iret
cmp
xchg
push
testl
mov
xchg
int3
pop
aad
stos
int3
fistpl
pop
jmp
decl
ror
push
dec
xchg
repz
lahf
add
pushl
pop
cmp
fs
aaa
rolb
js
pushf
rcrb
xchg
in
pop
jns
pop
loop
ljmp
dec
hlt
lods
mov
loope
mov
inc
cmp
rclb
loop
outsl
jg
mov
adc
push
dec
sar
jmp
mov
aad
scas
aaa
cld
add
jbe
iret
lea
mov
dec
stos
mov
jae
incl
jbe
mov
push
push
loopne
pop
inc
cltd
and
insb
mov
cmp
jns
sbb
mov
stc
je
lock
gs
ljmp
mov
inc
ja
dec
insl
xorb
bound
pop
push
fs
inc
lea
mov
dec
cmp
add
outsl
add
add
stc
fdivs
mov
stc
mov
fidivs
jl
xchg
movsb
fdivrs
push
jg
dec
fistl
xor
outsl
pop
and
pop
test
incl
jo
sub
mov
js
incl
and
js
loop
sbb
arpl
out
cld
mov
adc
hlt
insl
scas
and
incl
leave
aam
push
int3
mov
xchg
pushf
movl
repz
xorb
and
lahf
jl
call
loop
imul
fnstenv
ret
mov
aam
mov
cmpsb
push
sbb
and
jmp
cmpsb
hlt
clc
mov
leave
nop
je
jb
incl
jo
sub
dec
fcomps
popa
xchg
hlt
sti
and
lcall
add
dec
orl
out
inc
testl
sbb
fcmovnu
inc
pop
test
out
pop
mov
or
mov
vmovq
out
clc
arpl
fsqrt
mov
es
xchg
sbb
push
daa
sbb
cmc
ljmp
ss
cmp
xchg
int
jo
iret
cs
call
sub
dec
movb
inc
adc
sahf
lret
dec
dec
and
scas
cmp
stos
call
mov
mov
out
hlt
addr16
jno
cld
cs
cmpsl
jle
pop
mov
lret
decl
and
cmpb
mul
fwait
inc
pop
xorl
icebp
in
fcoml
cmp
popa
mov
lcall
mov
sbb
test
popf
xchg
jg
push
cs
push
flds
mov
push
test
fs
test
adc
mov
idivb
push
xchg
push
mov
jecxz
pop
fimull
cmp
xorb
adc
jp
jmp
lds
fildll
sar
incl
pushf
or
cmpsb
les
adc
scas
mov
xor
xor
aaa
cld
jmp
dec
imul
adc
into
push
cmp
sbb
jbe
adc
pop
mov
jnp
jae
loop
shl
push
je
rclb
ljmp
loopne
pushf
or
push
loope
stos
bound
add
xchg
add
call
jmp
inc
inc
leave
fsubrs
mov
cmc
jo
repz
enter
inc
shrb
mov
repz
clc
ljmp
pusha
mov
sbb
adc
adcb
push
mov
loopne
in
push
add
rclb
inc
fwait
xchg
lods
es
lods
cli
jg
in
les
ret
lahf
inc
adc
pop
jno
fisubl
jbe
cmp
mov
decl
xor
jg
ja
jl
pushf
aaa
in
inc
push
pop
xor
sbb
sub
pushf
mov
fwait
mov
pop
lds
and
fbstp
fs
pand
cmp
mov
xchg
and
mov
inc
call
adc
incl
and
test
jge
and
lret
xor
push
cltd
cmp
pop
mov
div
jmp
push
subl
inc
push
test
xchg
pushf
and
push
filds
inc
or
xchg
cli
in
adc
stc
sub
fiadds
lods
mov
fisubs
fists
push
xor
inc
cltd
pop
ljmp
insb
dec
push
mov
pop
mov
enter
pop
mov
cmp
add
xchg
icebp
decl
mov
popf
cs
loope
xchg
sbb
mov
mov
out
rclb
ds
jl
cmp
push
fdivrp
xchg
pop
push
dec
mov
inc
ret
inc
inc
cmp
ljmp
xchg
push
es
lods
push
stc
daa
xor
mov
faddp
sbb
mov
jns
ljmp
xchg
data16
jae
sub
inc
inc
xor
dec
incl
lahf
dec
mov
add
sub
mov
add
std
out
adc
jg
adc
mov
and
popa
repz
lret
mov
decl
and
xor
test
imul
sub
xorl
adcl
jl
sahf
inc
lods
enter
push
test
shlb
scas
pusha
and
fstpl
jg
in
jae
add
incl
inc
mov
leave
and
pusha
test
add
mov
or
lcall
inc
cmp
dec
pop
cmpl
inc
mov
jl
test
lret
mov
or
mov
pop
in
das
hlt
pop
mov
jg
enter
mov
push
cwtl
jle
sarl
loopne
loope
lahf
jo,pt
in
push
call
rclb
or
in
inc
fsubrl
push
push
popf
gs
push
push
adc
insl
push
movb
test
xchg
sbb
ljmp
fdivrp
fiaddl
mov
negb
imul
and
fs
stos
lods
pop
sbb
stc
imul
xchg
sbb
lcall
mov
out
subl
add
test
xlat
pop
jl
lahf
imul
xor
xchg
ficoml
push
pushf
imul
std
fadd
jbe
push
ffreep
fwait
pushl
pop
jmp
mov
sbb
or
jbe
or
or
cmp
mov
mov
ret
push
add
xor
out
jle
or
je
xor
aam
fdivp
push
dec
push
lods
jmp
jb
gs
in
sub
xchg
ret
mov
adc
out
test
es
adc
xchg
and
outsb
adc
mov
shrl
pushl
cltd
sahf
mov
xchg
xadd
mov
push
jl
or
sbb
ret
decl
stos
lea
inc
das
arpl
and
inc
sub
les
xor
popf
add
sbb
and
xchg
sbb
test
dec
mov
or
ja
sbb
sbb
in
push
ljmp
call
in
pop
mov
mov
push
xlat
bound
inc
loopne
push
and
inc
ja
jecxz
jle
jp
cwtl
adcl
cmc
mov
lds
incl
stos
insb
adcl
lret
jl
rclb
or
pop
icebp
sti
icebp
sub
scas
mov
fwait
and
push
add
movsl
cld
dec
cmp
ljmp
ficompl
xor
pop
mov
lret
push
jno
ficomps
push
mov
iret
push
inc
pop
inc
iret
push
mov
je
mov
jb
inc
mov
pop
dec
and
das
shl
repnz
ljmp
ss
pusha
fwait
daa
mov
xor
pusha
fmull
stos
xor
insl
cli
incl
push
mov
ror
out
je
aam
lods
mov
jmp
jl
sub
rol
inc
loopne
adc
xor
adc
out
adc
gs
int3
jl
fcmovne
dec
dec
int
fcomps
loopne
push
ror
shl
imul
push
jnp
sti
enter
adc
add
aam
push
add
pop
and
inc
jnp,pn
incl
daa
gs
mov
pop
add
in
fcmovb
jae
repz
xor
das
aaa
push
movntq
shll
sub
adc
xor
dec
ss
loop
or
into
and
pop
mov
ret
ljmp
out
mov
lock
inc
sbb
xchg
mov
mov
xchg
add
call
push
xchg
je
lock
fwait
idivb
sub
insl
add
jne
jg
or
push
rcrl
outsl
lea
cli
inc
test
cmp
add
dec
jge
mov
push
dec
lea
in
scas
shll
cmpsl
loope
dec
pop
cmp
mov
bound
mov
ljmp
test
mov
fdivrs
in
insb
dec
pop
pop
pusha
movsb
aad
fsubrs
into
mov
inc
mov
lods
xchg
aas
and
aam
xchg
xchg
pop
je
inc
adc
jmp
xchg
rolb
cld
outsb
xchg
incl
jg
mov
inc
jmp
sbb
decl
jge
push
mov
mov
jmp
jp
mov
sub
lea
ficoms
cmpb
lods
adc
mov
add
push
add
fidivrl
scas
ror
shl
mov
movsb
jo
mov
sub
out
inc
xchg
mov
int3
sub
fcomip
add
das
cld
cld
jo
add
call
insl
push
ret
cs
xor
xor
or
cmpb
inc
adc
add
incl
xor
aad
pop
xor
aad
pushl
adc
arpl
aam
mov
sbb
pop
insl
jg
mov
pushl
and
dec
dec
adc
insl
dec
adcl
rcll
dec
jbe
sub
test
fwait
in
dec
xchg
or
loope
mov
outsl
ret
mov
mov
popf
fisubrs
or
and
out
rol
jmp
ds
jmp
and
xor
or
jo
pop
adc
mov
adc
push
cmp
lcall
mov
lret
mov
fimull
rolb
call
cld
scas
xor
pop
andb
jl
or
test
popf
std
loope
sbb
pushl
arpl
sbb
das
call
arpl
mov
pop
sub
sub
gs
out
jmp
imul
lret
inc
icebp
push
push
popl
aad
ljmp
imul
icebp
push
and
sbbb
and
mov
mov
paddd
pushl
hlt
adc
popa
xchg
push
jle
lds
pop
mov
push
test
sbb
stos
add
aam
repz
adc
mov
out
test
adc
incl
jo
push
and
mov
jl
paddsw
scas
rcrl
and
cs
test
jg
lcall
lock
jo
outsl
repz
xchg
aad
or
xchg
test
push
std
pop
push
add
mov
pushl
sub
nop
push
adc
ds
pop
das
jle
add
mov
jmp
leave
ljmp
xor
int
jns
push
cmc
aad
fldl
push
in
mov
scas
repz
loop
jmp
inc
insb
adc
cmp
push
mov
decl
into
lods
dec
jle
arpl
dec
je
pushf
and
repnz
jno
xor
or
rcl
jmp
pushl
adc
xchg
push
loop
sarb
cmpsb
rolb
pop
xchg
sbb
icebp
mov
mov
call
imul
ja
fiaddl
mov
lcall
or
mov
cmp
and
pop
pop
daa
in
cwtl
sub
adc
xor
addr16
out
popa
jbe
sbb
mov
sarb
xor
or
fwait
sub
lcall
jecxz
cld
addl
inc
dec
test
or
jb
paddusw
dec
hlt
cld
add
cmp
clc
cmp
mov
and
andl
testl
and
and
or
arpl
fisttpl
pop
cmpb
xlat
nop
shl
mov
call
push
clc
icebp
pop
push
xchg
lock
pushf
and
mov
adc
pusha
sub
or
pop
das
cli
decl
in
jns
fcoml
xchg
pop
inc
xchg
push
insl
pop
mov
rcr
or
jmp
mov
dec
pop
dec
xor
mov
lret
xchg
dec
pop
dec
test
or
jge
jbe
lahf
jbe
ljmp
xor
sbb
push
ja
jmp
mull
jg
mov
adc
mov
sub
jae
pop
cmpsl
mov
and
jmp
xchg
test
jne
add
iret
or
xor
pushl
aaa
call
cmp
inc
shll
leave
sub
cmp
insl
ds
in
insl
hlt
call
jns
mov
and
mov
js
imul
pop
fbstp
push
jnp
pusha
sbb
decl
bound
out
push
fxch
push
inc
sub
or
std
mov
je
mov
call
in
imul
lret
into
xchg
cmp
out
lcall
shr
xchg
jg
jl
ds
out
aad
cmp
xchg
lret
test
sbb
cmpsb
repnz
aam
decl
mov
xchg
out
mov
jl
mov
adc
jmp
aam
jo
jmp
xchg
jb
addr16
mov
mov
stos
fists
mov
inc
fisubrs
shl
adc
inc
and
xor
mov
addb
mov
inc
pop
sbb
fs
push
add
xlat
sti
aam
add
pop
mov
add
cmpsl
frstor
mov
push
inc
inc
sbb
je
push
ret
sbb
add
aad
adc
mov
call
pop
mov
sar
push
cmp
fldt
jge
pop
pop
adc
andb
orl
mov
loopne
ret
outsl
jno
stos
repz
add
dec
push
js
divb
gs
sub
call
mov
scas
sbb
incl
loope
xlat
inc
insb
sub
jecxz
in
cmpsb
and
xchg
popa
inc
mov
ror
je
shrb
jb
mov
jmp
aad
mov
jge
sub
aaa
cld
and
mov
sbb
mov
inc
cld
call
jl
push
sub
daa
mov
xchg
in
int
lcall
inc
cltd
push
lock
dec
cmp
mov
into
or
push
xchg
ljmp
clc
dec
bound
fcomi
mov
mov
fsubl
jnp
pop
adc
inc
mov
lods
jmp
push
jmp
jns
inc
mov
xchg
jge
add
mov
lret
and
mov
arpl
fisttpl
add
and
cmp
mov
pop
std
sub
mov
mov
mov
and
cmc
inc
sub
sub
std
xchg
pop
popf
out
movsb
sahf
xchg
outsl
out
push
enter
mov
mov
jo
pop
mov
add
decl
sti
add
mov
loop
rcrl
addr16
inc
rolb
pushl
call
aad
jbe
or
pop
xor
pop
sub
int3
cli
pop
notl
std
decl
push
inc
mov
sbb
mov
daa
addr16
filds
fldt
sbb
add
or
push
adc
repnz
cmp
fsubs
aaa
or
xchg
call
xor
and
cwtl
mov
nop
setb
inc
xchg
shrb
fs
cmpsb
jo
out
dec
inc
mov
cmp
loop
stos
pop
jp
xor
popf
cmpsl
xor
jg
jg
inc
mov
push
mov
cli
cmpsb
cld
roll
pop
sbbb
fwait
das
imul
push
gs
insl
jp
gs
inc
sub
dec
test
push
or
clc
jle
inc
jle
icebp
and
push
inc
adc
divb
outsl
lock
pop
incl
and
pushf
loop
cli
lret
stc
xlat
pop
test
cltd
scas
jmp
hlt
xchg
jp
out
mov
bound
movsb
movsl
sahf
or
repz
stos
aad
push
add
lcall
stos
adc
mov
mov
ret
cmp
fmull
jae
cmp
lcall
xlat
or
mov
cld
fnstsw
jmp
icebp
lea
cli
std
mov
jne
incl
adc
or
mov
negb
mov
push
enter
sub
incl
or
inc
inc
stos
pop
push
adc
cld
rcll
jmp
jmp
xchg
dec
cmp
in
subb
push
scas
movsb
out
and
out
inc
lahf
jmp
xchg
ljmp
inc
and
jecxz
popf
lret
and
or
xorl
lcall
addl
enter
pop
push
aam
leave
call
aas
xchg
insb
dec
jmp
mov
jecxz
test
mov
decb
mov
mov
jae
mov
sub
call
adc
sti
iret
les
call
mov
sub
es
ret
mov
popa
mov
or
or
lcall
ljmp
ljmp
jge
mov
in
mov
outsl
outsb
cmp
xor
dec
jmp
xor
insl
inc
or
mov
test
adc
imul
bound
inc
idivl
jmp
addb
test
jle
xor
mov
inc
inc
or
nop
in
jo
decl
add
cli
sbb
es
push
jp
ja
add
push
setbe
sbb
xchg
std
sbb
xchg
aam
aas
push
adc
mov
sahf
jg
jmp
or
push
jno
jl
pop
mov
stos
and
or
xor
xor
mov
ljmp
bound
dec
shrl
push
cmp
add
mov
xchg
movb
in
jle
inc
out
repnz
fistl
ret
incl
inc
stc
adc
leave
xchg
xchg
and
pop
test
hlt
cld
inc
sar
jg
fcmovne
fisttpl
movl
repz
dec
adc
addl
enter
dec
and
loopne
fcom
inc
repz
aad
cli
push
mov
lcall
add
incb
mov
out
sub
mov
jmp
clc
mov
lcall
pop
popf
xchg
hlt
inc
les
mov
out
enter
xchg
sbb
fstps
add
dec
adc
cs
stos
push
push
xor
lcall
xor
roll
mov
notl
data16
push
sub
mov
inc
fildll
cmp
and
je
lods
mov
lcall
mov
scas
pushl
sbb
mov
xchg
ljmp
push
cli
dec
jbe
addr16
sub
jmp
out
xor
jne
test
shrl
cmp
inc
rolb
sbb
jmp
adc
push
andb
add
push
loopne
call
jge
push
out
mov
insl
dec
jo
pop
inc
das
ja
std
jge
incl
add
dec
mov
es
aam
decl
lock
lcall
or
push
fcomps
push
lods
mov
cmpsl
adc
mov
stos
lcall
push
popf
jg
sub
pushl
ljmp
xlat
or
cmc
jecxz
sbb
es
ret
push
ror
lods
lcall
les
mov
ja
add
xor
sub
mov
or
pop
pop
xchg
cmp
fwait
xor
push
jnp
into
pop
loopne
cmp
fmull
dec
inc
adc
decl
sub
vcmppd
mov
repz
or
cli
ljmp
and
mov
mov
mov
pushl
sbb
xchg
mov
sub
ljmp
hlt
stos
pop
and
bound
or
je
dec
jo
jnp
sbb
incb
in
in
sbb
test
fxch
mov
mov
clc
outsb
push
jl
jmp
loopne
mov
xor
and
adc
inc
add
pop
add
decl
jns
sbb
sbb
push
adc
inc
xchg
dec
aas
mov
cmp
std
aam
ds
push
stos
cmp
adc
adc
arpl
shlb
xchg
decl
in
cmp
push
mov
imul
pop
mov
ljmp
push
cld
clc
out
movsb
sbb
cmpsb
cwtl
sar
jmp
jg
lret
clc
sub
lds
int3
push
dec
pop
fs
lods
sub
cltd
cltd
or
adc
lcall
icebp
dec
aad
pop
pop
jb
pop
inc
psubw
mov
jp
imul
jbe
mov
push
cmp
pop
adc
mov
sub
jo
sub
stc
add
add
add
xchg
ljmp
cltd
mov
pop
insl
aas
test
and
push
mov
mov
mov
movsb
push
sbb
jnp
dec
xchg
loop
mov
jne
fwait
pop
int3
and
push
decl
add
sbb
in
test
sub
push
cmp
mov
inc
loopne
jecxz
jmp
in
out
fsubrs
push
clc
test
clc
lcall
in
jl
cli
adc
inc
ret
mov
data16
ljmp
fmull
dec
fists
fiaddl
iret
mov
mov
in
xchg
incl
popf
and
aas
xchg
repnz
repz
aam
daa
cmp
xchg
add
sbb
jg
sbbb
and
lods
test
mov
aad
sahf
push
lcall
decl
cs
data16
cmp
mov
pop
lret
push
push
pusha
cli
dec
adc
adc
fistpll
vhsubpd
inc
add
sbb
sti
fstl
cltd
std
jmp
decl
cmp
dec
pushf
or
scas
out
arpl
jne
cmc
rorl
dec
sub
fnstenv
out
rol
mov
ret
ffreep
dec
in
add
loop
enter
xlat
imulb
scas
cmp
scas
dec
add
xor
push
mov
mov
cmp
movsb
mov
cmp
jmp
and
pop
mov
cld
pusha
insl
sbb
rorl
pusha
jg
and
pusha
sub
das
xchg
cmp
sar
pushl
into
and
or
ret
add
xor
xor
pop
pushf
mov
inc
sub
mov
imul
sub
mov
mov
or
and
mov
xor
cli
fdivrl
repz
mov
loope
in
jnp
cli
push
dec
scas
mov
mov
ljmp
pop
mov
jge
sar
mov
pop
scas
mov
imul
fst
das
push
cmp
lcall
lahf
xor
pop
loopne
inc
pop
push
or
xor
in
pop
mov
lret
out
push
aad
lret
jb
iret
icebp
enter
sub
test
mov
adc
in
mov
pushl
iret
out
lahf
mov
clc
dec
hlt
adc
int3
add
jmp
lock
popf
js
inc
cld
pop
movsb
decl
test
adc
jg
lods
loope
mov
in
cmpsb
nop
jecxz
pusha
addl
ss
jle
push
mov
xchg
pushl
cld
jmp
cmp
div
sbbl
mov
mov
loop
adc
nop
insl
clc
incl
push
mov
fbstp
dec
or
leave
adc
mov
movsl
xor
repnz
test
scas
add
sbb
std
mov
push
or
es
xor
cmc
jmp
cmp
mov
push
movsb
mov
sub
push
push
cmpsb
dec
dec
fbstp
add
mov
add
lahf
jae
call
in
pop
addr16
push
or
mov
xor
jge
or
jmp
adc
dec
fs
push
inc
in
or
aad
sbb
adc
adc
gs
jle
lcall
lret
pop
rcll
pop
mov
cwtl
pop
jle
xor
fnstenv
xchg
iret
dec
mov
test
push
cltd
jp
ficompl
jp
std
aad
lcall
mov
inc
gs
insb
pop
mov
jmp
push
fsubp
dec
ljmp
add
sub
fcoml
cltd
mov
addb
jmp
sub
xchg
rorb
repnz
pop
xchg
hlt
mov
lock
and
lods
lahf
movsl
jae
xchg
mov
dec
out
imul
sbb
push
mul
in
mov
int
add
mov
pop
imul
loope
adc
movntps
xor
adc
lcall
das
insl
push
push
out
movsb
and
sub
rcll
in
orb
scas
cmp
std
or
inc
sub
cmpsb
push
je
xor
scas
cltd
pop
jg
call
push
sti
int3
pop
xchg
loopne
aas
imul
roll
and
or
jne
mov
dec
dec
sub
std
push
or
out
pop
sbb
inc
sbbb
add
loop
adc
mov
shl
cli
cmc
or
call
dec
rcrb
bound
dec
adc
adc
lds
jg
stos
cld
pop
ja
repz
lret
mov
inc
cmp
mov
inc
mov
fiaddl
in
popa
loop
out
fists
pop
mov
ljmp
cmpsb
inc
sbb
andl
mov
lds
dec
push
cmp
decl
lock
xor
sub
dec
stos
test
and
pop
xchg
pushf
rolb
mov
and
decb
imul
jb
flds
into
adc
call
mov
es
in
adc
icebp
jg
mov
xlat
int
mov
xchg
dec
mov
jmp
cs
in
adc
data16
jle
outsl
subl
xor
lcall
loop
xor
xchg
lahf
pop
inc
insb
cmp
xorl
dec
dec
out
mov
lds
movl
ljmp
test
daa
sbb
pop
flds
mov
xchg
mov
movsb
inc
sbb
rorl
ljmp
scas
clc
aaa
nop
sbbb
or
decw
mov
push
add
fs
and
pop
icebp
in
dec
push
cltd
fstpl
sbb
inc
pusha
mov
ljmp
dec
fdivp
int
pop
jl
or
sti
xor
test
sti
mov
subl
sbb
cld
incl
fbstp
jb
sub
add
les
sar
jle
add
mov
xor
ss
add
adc
test
pop
cmp
repnz
addr16
jmp
jno
mov
jne
push
mov
push
xchg
aad
push
push
xor
addl
notb
leave
jp
cld
fcomi
xchg
or
cmp
and
and
lcall
pop
cmp
int
loopne
cld
xchg
dec
sub
xor
call
int3
out
xchg
mov
cwtl
sub
mov
sbb
pop
xchg
push
inc
fs
xchg
mov
cmp
mov
call
mov
sbb
mov
inc
or
xor
mov
push
xor
nop
jle
out
push
js
decl
jmp
lock
xchg
dec
and
mov
add
sub
mov
push
dec
and
xchg
mov
xor
adcl
ljmp
pop
cmp
aam
adc
or
add
adc
xchg
pop
or
fdivrs
dec
popa
imul
arpl
in
test
adc
stc
or
ret
add
incl
lods
pop
pop
ret
es
lods
dec
xchg
xor
test
incl
pop
and
jnp
jge
xorb
inc
or
popf
repz
fmull
incl
arpl
pushf
pop
mov
in
inc
jg
adc
inc
test
es
hlt
dec
sub
pop
mov
into
cli
pop
mov
mov
call
lods
push
rol
mov
imul
sub
int3
jg
mov
pop
or
add
negl
pop
cmp
adc
dec
decl
js
stos
std
shl
fisubs
and
mov
jns
jmp
push
jl
popa
fldenv
ljmp
popf
lahf
shll
popa
cmp
push
fwait
pop
insl
fs
jge
jns
push
jno
xor
decl
fildll
or
jo
add
mov
xchg
adc
cmpsl
mov
decl
imul
inc
xchg
imul
fsub
mov
push
ss
incl
iret
inc
jb
out
insb
shlb
in
aad
mov
add
jmp
jmp
push
sub
xchg
adc
aad
ljmp
dec
daa
xor
decl
sub
xchg
jno
jno
repnz
or
out
test
jns
lods
into
bound
lahf
mov
pop
dec
mov
or
add
sub
pushl
movsb
cwtl
mov
cmp
sbb
lock
add
mov
dec
mov
sub
sub
or
in
pop
mov
dec
pop
bound
nop
sub
mov
xchg
nop
xor
stc
lret
bound
ss
gs
call
outsl
fadd
enter
sub
sbb
fs
test
mov
fs
cmp
test
sti
mov
xor
ljmp
clc
jmp
nop
test
dec
sub
hlt
add
int3
mov
lcall
push
aam
fistl
pop
aad
mov
sarl
andl
pop
jg
hlt
jmp
cmp
mov
or
in
adc
rclb
ljmp
stos
subb
mov
jne
fucomip
cmp
sarb
dec
cmp
test
ljmp
cmp
pop
mov
or
aaa
push
inc
xchg
fisubrs
push
sti
jbe
imul
daa
out
outsl
inc
sbb
cmp
adc
mov
sbb
push
dec
ret
sub
ljmp
xor
adc
jle
and
lret
xchg
stc
jecxz
cli
popa
movl
dec
jl
mov
pushl
jle
mov
xchg
sbb
inc
sbb
dec
add
int3
pop
sar
sbb
adc
inc
sti
fmull
ljmp
scas
cli
ljmp
dec
pop
nop
lcall
push
cmp
sti
jmp
fstl
jmp
add
clc
test
movsl
fs
aam
je
add
scas
jno
or
insb
mov
ljmp
xchg
adc
addl
jno
add
jle
mov
pop
adc
rol
sbb
aam
mul
ljmp
out
cmp
push
shrb
cmpsb
test
mov
mov
adc
xchg
dec
sti
jecxz
push
fwait
rcl
daa
cltd
and
scas
sbb
or
cwtl
loope
test
mov
movsb
push
mov
pushl
imull
in
imul
mov
jg
push
das
out
push
cld
mov
mov
and
aaa
dec
mov
loope
or
jne
rorb
inc
loopne
mov
xor
popa
dec
adc
mov
call
std
loopne
in
jle
insl
dec
and
jg
and
rcrb
sbb
mov
in
cmp
cld
test
sbb
jecxz
mov
inc
jge
pop
push
add
dec
xchg
lcall
loope
or
push
daa
js
and
clc
mov
fmull
bound
mov
loop
call
xcrypt-cfb
cmpsl
out
pop
aas
cmpsb
mov
fidivrl
sbb
jne
adc
jl
cmc
cmp
decl
xchg
pop
scas
loope
or
pop
mov
inc
fs
in
into
js
push
jnp
mov
sbb
xorb
sbb
cmp
xor
orl
decl
aas
pop
pop
movsl
cli
mov
mov
inc
mov
fcmovu
pop
aas
mov
add
imul
jbe
lcall
or
xor
inc
incl
les
mov
ja
fwait
jno
rcr
mov
dec
jecxz
sub
sar
jmp
ror
pop
add
dec
jae
add
xor
push
inc
rcr
mov
sub
mov
jg
pop
push
xchg
in
and
add
loope
stc
fistl
ja
iret
sbb
sub
rclb
stos
jns
push
jbe
push
aaa
jno
scas
add
xchg
fistpl
leave
jo
test
jmp
nop
ficompl
sbb
jmp
push
jno
mov
jae
aas
jmp
mov
mov
fimuls
mov
jle
jl
fnstcw
cmp
cmp
repz
push
cmp
jbe
bound
or
push
and
ljmp
mov
call
rcrl
inc
mov
add
pop
push
icebp
sbb
add
cmp
sub
movsl
test
sub
or
sbbb
or
lret
aad
shll
jmp
repz
rcll
lcall
pop
jae
jnp
ret
pushl
xor
cwtl
pop
xchg
xchg
xchg
cmp
mov
jns
repnz
push
sti
pmulhuw
mov
fsub
rclb
mov
xor
es
lret
mov
sbb
xor
push
xor
mov
lds
cmpl
push
mov
lods
leave
xor
out
or
loopne
jmp
call
or
add
xchg
pop
movsb
or
pop
sbb
call
in
xchg
xor
imul
div
lea
call
js
mov
mov
adc
lds
xchg
or
sbb
pop
vpunpckhwd
call
aad
les
mov
cmp
push
fst
leave
sub
and
stc
lds
jl
sub
mov
sbb
rcrl
mov
mov
jns
adc
pop
dec
pop
cmp
imul
es
cmc
mov
int
and
xor
inc
sub
in
incl
cld
push
scas
decb
test
jo
int
pop
and
and
jmp
xchg
xor
stc
xchg
test
jnp
ret
push
int
dec
call
lods
sub
inc
cmp
cwtl
mov
sar
mov
sbb
xchg
mov
repz
xor
decl
daa
sub
jmp
jl
pusha
bound
inc
mov
add
nop
xor
pop
fwait
loopne
addr16
cmp
or
andb
and
cmp
mov
lcall
fcmovb
sbb
push
adc
mov
adc
out
add
lret
mov
rorl
call
mov
js
xchg
adc
xor
lock
cmpsl
ljmp
notl
mov
js
enter
jp
pushf
ss
dec
inc
cmp
imul
adc
test
jne
or
sbb
push
jae
iret
xor
ljmp
pushf
fwait
push
mov
push
and
in
dec
pop
and
and
jle
adc
jl,pn
push
pushf
shll
dec
cmp
cmp
mov
or
int3
push
lock
jmp
mov
repz
in
mov
ljmp
and
enter
shlw
add
pop
mov
sbb
adc
pop
push
repnz
inc
cld
decl
pop
inc
scas
adc
arpl
mov
and
out
adc
pop
inc
dec
ret
mov
xchg
dec
and
lods
aam
or
scas
clc
cli
pop
mov
jo
aam
sub
pushl
jle
push
mov
inc
xchg
sbb
sub
out
lds
sub
cmc
in
fchs
call
addr16
mov
xor
lock
test
adc
inc
dec
dec
mov
jge
fsubrl
jb
inc
mov
xor
and
mov
ljmp
rorb
push
add
imul
insl
incl
mov
int
pop
mov
ja
add
loopne
cmc
mov
mov
ficompl
aaa
or
pop
sbb
jbe
xchg
add
jne
rorb
decl
sub
imul
sbb
sbb
imul
mov
shl
addr16
lea
loopne
outsl
fdivr
pusha
cmc
adc
imul
sub
push
out
add
add
xchg
adc
mov
jbe
lahf
aad
push
inc
insl
xlat
push
pop
or
lcall
stc
and
cld
pushl
jg
mov
add
pop
push
outsl
rcl
jne
mov
mov
cltd
sub
call
dec
das
xchg
mov
fistps
mov
lcall
clc
jge
call
aam
nop
adc
int
adc
jg
stos
stc
push
add
sbb
sub
pop
or
std
pushl
cmpsl
mov
push
xor
cmp
xchg
dec
adc
call
rolb
inc
ret
xor
jae
mov
leave
lds
and
les
cmp
clc
jmp
jecxz
shl
add
sti
call
push
pop
ja
cli
stos
inc
pop
cwtl
incb
mov
mov
sub
aaa
arpl
call
clc
cmp
ss
add
pusha
int3
fisubrs
push
add
in
pushl
insl
cmp
jg
add
inc
fwait
push
cs
lods
pop
bound
pop
cmp
sbb
out
out
push
jnp
push
aam
js
bound
pop
mov
outsb
jl
test
dec
dec
adc
push
sbb
lcall
mov
push
pop
ret
xchg
jmp
dec
shrb
mov
sub
dec
sub
stos
mov
mov
mov
ds
shll
ljmp
mov
pop
fsts
add
in
mov
aam
sbb
add
push
or
inc
sar
inc
incl
hlt
mov
test
outsl
add
scas
pop
es
xor
sti
lret
mov
outsl
sub
mov
imul
mov
outsl
mov
sbb
js
xchg
mov
icebp
ret
dec
dec
fistpll
pop
and
jns
sub
js
jp
push
in
cli
loop,pt
mov
cmp
mov
fwait
test
roll
repz
cld
or
gs
incl
mul
push
inc
push
dec
in
dec
pop
stos
imul
ds
mov
enter
sbb
call
xor
mov
mov
and
imul
lods
mov
ja
incl
outsb
sub
outsl
jns
fisubrs
pop
rorb
jnp
stos
add
decl
pop
mov
push
lcall
pop
ljmp
ficomps
adc
ljmp
cld
insb
ret
jg
stc
out
jge
shld
in
mov
adc
ret
int
sahf
nop
inc
scas
test
sub
clc
imul
fwait
sub
jmp
xchg
inc
mov
xchg
cmpsb
in
gs
jp
ret
incl
jl
cmp
pop
mov
inc
nop
popa
aam
xlat
jl
jns
jge
mov
cmp
jmp
mov
pop
fadds
inc
inc
aad
stc
mov
or
pop
out
fimull
ljmp
insl
fnstcw
sbb
clc
push
test
sahf
mov
pop
scas
insl
cmpl
pop
or
jle
xchg
fisubrl
out
mov
ljmp
mov
repnz
inc
call
mov
je
dec
or
std
in
repz
mov
jno
clc
insb
adc
jnp
lock
mov
dec
shll
jnp
push
pop
sub
or
daa
adc
scas
xlat
xchg
mov
mov
jne
jg
mov
xchg
ja
incl
icebp
stos
push
sti
ss
frstor
in
sbb
adc
push
add
xor
insb
std
inc
in
xor
sti
jmp
cmp
popa
push
pop
out
push
faddl
test
in
adc
cmp
lcall
push
dec
jbe
mov
cmc
shlb
addb
mov
lcall
pusha
outsb
cli
inc
scas
cmpsl
jp
cmpsb
or
mov
cmpsb
out
mov
gs
fiaddl
adc
test
inc
cmp
mov
adc
mov
adc
js
dec
lods
shlb
inc
cld
mov
movsb
adc
imul
sti
fnstsw
ds
out
jmp
gs
stos
in
inc
adc
mov
cltd
jl
ljmp
jg
pop
insb
inc
lret
lret
or
sbb
cmp
inc
mov
ret
orl
pop
je
sbb
stos
scas
das
nop
sbb
in
shll
repnz
jg
lcall
fwait
pop
outsb
loop
cmpsb
ficompl
and
sub
push
nop
andb
stc
lcall
out
dec
mov
and
stc
jmp
pushf
add
sbb
repnz
repnz
aas
mov
push
stos
fcomip
cmp
or
lds
xor
xchg
inc
decl
jl
fstpl
pushf
out
lret
jb
and
mov
lret
mov
movsb
xchg
stos
subb
cltd
xchg
mov
push
xchg
addr16
sub
popf
inc
push
gs
mov
sbb
xor
inc
inc
gs
shlb
fbld
cmp
cmp
cwtl
aaa
in
sbb
cmp
jmp
dec
cmpsb
mov
mov
sbb
popl
push
out
idivl
imul
pop
lods
jmp
adcl
pop
aaa
nop
das
lock
lahf
push
inc
fsts
mov
fs
pop
and
repz
dec
imul
dec
mov
movq
push
mov
pop
pop
push
pop
mov
adc
std
stos
xchg
mov
inc
les
clc
lret
xor
enter
xorb
lcall
jnp
dec
jb
adcl
stos
ljmp
or
ret
nop
out
pushl
cmp
scas
xchg
lahf
popf
dec
add
fwait
inc
es
lods
mov
and
pushl
imul
push
mulb
scas
clc
popa
sub
jb
sub
pop
dec
out
jl
out
das
sar
call
inc
fidivl
nop
jp
jg
cmp
or
inc
fstl
addb
add
pop
jmp
lahf
jno
in
and
enter
incl
out
sbb
mov
pop
js
or
arpl
enter
push
mov
xchg
adc
sub
stc
clc
shll
jmp
ljmp
inc
xchg
sub
aad
adc
shl
dec
int3
mulb
rclb
addr16
xchg
stos
or
xchg
sbb
pop
icebp
or
mov
scas
lret
imul
fbld
cli
pop
mov
mov
clc
pushf
mov
and
cmpsb
xor
decl
enter
adc
popf
push
subl
xchg
cmp
pop
cltd
mov
sub
pushl
pop
sbb
mov
or
add
repz
cli
jg
ljmp
add
mov
sub
mov
xor
push
js
ljmp
push
jp
fnstenv
xor
scas
mov
test
in
jle
cmp
inc
dec
dec
pushl
lea
jne
ret
xor
lahf
mov
mov
fcomps
mov
push
ljmp
mov
leave
fidivl
pop
pop
cltd
bound
fsubr
xlat
aaa
cmc
repnz
decl
pop
dec
sar
and
stos
rcrb
notb
inc
les
cwtl
xor
xchg
and
outsl
xchg
mov
jo
es
jmp
jns
rolb
addr16
out
loop
ds
pushl
stos
mov
jns
and
sahf
stos
xor
movsb
push
mov
xchg
cwtl
xor
fsubrs
pop
cmpsb
ss
xchg
popa
xchg
nop
mov
stos
out
jge
movb
notb
sbb
dec
in
clc
or
push
adc
mov
dec
add
push
enter
cmp
fxch
ja
or
mov
fs
cmp
lods
mov
je
gs
nop
outsl
mov
insb
mov
mov
mov
ror
out
ljmp
mov
ljmp
mov
pop
scas
popf
repnz
push
mull
fstpl
jg
cli
jmp
inc
andl
test
mov
jne
ret
out
aad
xchg
mov
ljmp
push
sub
pop
inc
fdivs
arpl
adc
dec
dec
sahf
dec
push
call
shl
or
jp
ret
out
in
inc
bound
inc
dec
shrl
inc
pushf
mov
je
fwait
add
and
call
insl
or
xchg
repnz
jnp
inc
jb
mov
in
mov
repnz
aaa
cld
pushl
mov
ljmp
pop
push
pop
div
sub
test
call
fiaddl
cli
inc
push
repnz
std
or
ret
iret
mov
dec
shl
pop
jecxz
push
bound
pop
push
dec
scas
pop
fsts
lods
sub
add
pop
sar
ja
pushl
cmp
xor
mulb
mov
out
mov
inc
add
mov
rorl
xchg
mov
mov
incl
sbb
mov
mov
popf
rorb
cmp
adc
inc
add
mov
incl
mov
jnp
add
rolb
pushl
mov
mov
jb
aad
jbe
xchg
mov
push
jne
fcos
sbb
sar
xchg
sbb
ljmp
repz
repnz
inc
jl
int3
push
or
xor
mov
jno
addr16
add
inc
fbstp
cmpsb
ljmp
xor
add
lret
ret
mov
jns
int3
cmpsl
pop
sbb
jg
mov
sub
leave
push
xor
in
cwtl
popa
and
cwtl
cli
daa
lods
loope
push
mov
decl
pop
lcall
stc
mov
outsb
std
or
out
fdivr
cmp
outsb
jle
lea
ljmp
jbe
xor
mov
aad
shrb
out
jne
dec
pop
dec
decl
pop
mov
scas
outsl
lds
es
adc
lods
lret
pop
inc
or
ds
orb
xchg
inc
loopne
ljmp
inc
jae
pushl
arpl
jno
std
outsb
aas
daa
pop
adc
xchg
xchg
xchg
or
les
sub
lcall
stos
mov
enter
int
or
or
es
stos
pushf
lods
xor
decl
mov
fdiv
imul
sbb
dec
add
repz
cmp
stc
leave
sbb
pop
mov
dec
leave
and
mov
inc
fwait
xor
out
mov
cmp
int
mov
scas
cli
lea
insb
xchg
popa
fimull
test
fidivl
mov
ljmp
fidivs
or
jae
repz
roll
mov
jl
xchg
mov
xor
lahf
jb
dec
out
fidivrl
dec
mov
dec
ret
repz
jle
pop
push
mov
pop
push
sbb
jb
mov
movsl
inc
cld
rcl
daa
popa
mov
mov
loop
inc
cld
mov
inc
jmp
ljmp
xchg
aas
pop
ret
cmp
into
pop
imul
pop
test
dec
jo
incl
sbb
insl
xlat
pop
aas
adc
scas
addl
mov
pushl
push
xchg
js
roll
aaa
xor
clc
jg
cwtl
pop
jb
sbb
jp
shrl
sub
or
call
push
in
fisubl
int
xchg
push
addl
int3
pop
cmp
mov
shrb
mov
out
fidivs
lods
or
incl
sbb
xchg
jne
insb
xchg
cwtl
or
repnz
xor
cwtl
insl
ljmp
jno
mov
testl
mov
mov
popf
fs
push
xchg
xorb
mov
std
scas
pusha
or
adc
push
out
sbb
jmp
out
jnp
lcall
das
filds
inc
cli
mov
cmp
adc
cmpl
ljmp
js
lock
xchg
rorb
mov
or
dec
sub
es
jge
loop
push
mov
call
mov
sub
adc
and
stos
int
adc
cmp
adc
fildll
ljmp
enter
cli
adcb
mov
mov
sub
sarb
and
decl
adc
test
adc
in
setl
ja
gs
pop
sbb
pop
inc
repz
std
imul
loopne
iret
lcall
test
and
rcrl
sub
mov
test
fwait
ficomps
sub
decb
or
xchg
mov
clc
shrl
shr
sbb
and
xor
jg
incl
push
mov
in
pop
ret
aaa
addb
stc
fs
lock
add
lcall
sbb
xchg
lret
mov
dec
and
dec
push
cmpsl
mov
js
ljmp
sar
test
cltd
cmpsl
daa
clc
dec
dec
fimull
push
int3
ret
mov
mov
fcomip
stos
sub
inc
repnz
rorb
xor
data16
xlat
lcall
mov
mov
insb
lcall
data16
out
sbb
push
fdivrp
xor
push
sub
push
lock
pop
lahf
cwtl
adcb
jp
lds
lds
xlat
xchg
jmp
std
sbb
sbb
inc
push
lcall
repz
adc
xor
cltd
inc
movsl
cmpsl
movsl
cmp
and
leave
fucomi
ror
jne
loopne
je
hlt
mov
jbe
xor
test
stos
mov
ljmp
mov
movsb
jns
cltd
mov
jbe,pt
xchg
add
fwait
cltd
mov
clc
mov
xchg
and
pop
push
incb
insb
lahf
in
sbb
dec
cmp
decb
clc
ret
nop
or
jno
cmp
gs
lock
cmpsl
xor
sti
mov
dec
jno
ljmp
daa
mov
mov
test
and
movsb
movsb
decl
jp
clc
cmpsl
adc
jge
arpl
mull
pop
insl
stc
js
shrl
test
out
cli
pop
jnp
movsb
lock
mov
ret
sub
cmc
and
divb
fistl
arpl
into
pop
jle
testb
lcall
xor
mov
mov
add
mov
push
mov
aas
push
mov
neg
jmp
mov
jns
xor
mov
adcl
sbb
cmp
inc
cltd
sar
pusha
pop
mov
mov
mov
inc
pop
pop
mov
rorl
ljmp
lret
sub
insl
lods
sbb
push
mov
pop
mov
orl
xchg
mov
data16
mov
or
inc
adc
sbb
xchg
cmp
push
test
mov
lret
inc
pop
cld
fwait
add
repnz
adc
loopne
cld
mov
scas
cmpb
mov
lahf
in
call
jmp
popa
sub
dec
mov
fildll
pop
stos
push
or
and
add
prefetch
or
push
test
call
rcr
jbe
pop
adc
inc
mov
pop
or
imul
ret
imul
push
mov
xor
lret
daa
and
pushl
mov
sahf
mov
fbstp
dec
insb
xchg
lds
test
xor
pop
cwtl
mov
dec
add
mov
jnp
inc
loopne
jg
lret
call
mov
mov
mov
aad
inc
sbb
fs
sub
lahf
add
hlt
dec
mov
sti
ljmp
test
xor
add
addr16
jbe
aam
into
stc
iret
cmp
jns
clc
sub
sti
nop
push
push
and
cmpsl
dec
std
sbb
cmc
or
mov
lods
mov
jg
lret
orl
nop
imulb
mov
inc
inc
inc
mov
out
mov
push
loopne
incl
les
jne
cmpsl
sbb
or
or
inc
mov
stos
fs
idiv
cmp
sub
mov
xor
adc
xchg
pop
jmp
mov
arpl
stos
in
pop
icebp
sti
and
fdivl
lahf
dec
test
ficomps
incb
or
pushl
nop
sub
lret
aam
dec
or
xchg
stos
imul
and
cs
test
incl
xor
frstor
jno
ret
mov
sub
add
call
push
add
into
sbb
lock
outsl
shr
fcmovnu
popf
cmpsb
inc
jno
cmc
xor
push
xchg
and
aaa
add
ficoms
orl
cmp
jle
mov
mov
test
clc
mov
int3
je
lahf
cwtl
push
decl
js
imul
shrl
pusha
cwtl
or
lds
pop
inc
sbb
jmp
xor
shrb
dec
std
xchg
cltd
inc
into
xor
ds
icebp
inc
or
je
jg
pop
mov
inc
movsb
pop
incl
mov
outsb
sub
mov
fstps
leave
xchg
or
repnz
adc
in
faddl
lret
jmp
shll
ja
or
or
mov
mov
or
ja
dec
pop
cmp
push
xlat
xchg
stc
add
push
inc
xchg
in
shrb
or
pop
jl
pop
xchg
inc
push
pop
aam
daa
sahf
push
mov
jle
cmp
movsb
pop
or
dec
ret
scas
inc
stos
pushf
outsw
cld
shl
sbb
mov
sub
pop
jmp
xchg
or
inc
sub
daa
sub
repnz
nop/reserved
pop
loopne
jb
int
dec
lahf
aas
ret
xchg
pushf
and
movsl
mov
shrb
in
adc
scas
adc
lods
mov
xchg
mov
loopne
out
or
mov
pushw
mov
mov
popf
out
adcb
test
and
test
xchg
sti
mov
cmp
decl
xor
adc
add
and
sub
incl
jmp
ret
or
cmc
mov
mov
mov
pop
movsb
xor
and
push
mov
testb
rcr
into
icebp
push
lret
xor
call
enter
hlt
mov
mov
lcall
add
or
pushl
inc
mov
dec
xor
push
inc
mov
test
cmc
sbb
mov
mov
dec
rclb
push
js
add
xor
jnp
push
jo
loope
mov
pop
sbb
rclb
leave
add
orb
xchg
cli
and
mov
rcll
pinsrw
pop
mov
mov
inc
nop
cmp
jmp
jnp
inc
test
dec
fdivs
sub
jl
and
clc
decl
jne
pushf
fs
mov
pop
mov
inc
xchg
pop
mov
incl
xchg
insl
dec
cmp
cmpsb
out
mov
lea
jns
xchg
shrl
incl
ljmp
loop
inc
cmpsb
mov
mov
scas
add
adc
fstpt
jg
mov
subb
data16
mov
xchg
rclb
xchg
incl
sbb
sbb
sbb
lret
mov
fucomi
insl
ja
mov
nopl
sbb
inc
fwait
pushl
dec
mov
push
and
out
mov
push
in
inc
mov
es
sub
add
or
lcall
dec
or
stos
adc
sbb
bndstx
imul
fldcw
cld
hlt
cld
xor
sbb
add
xlat
jl
add
aas
sub
add
xor
sub
fdivp
loop
dec
mov
sbb
std
add
push
inc
ss
and
sti
jmp
fisttps
jb
and
mov
sub
call
push
push
fs
inc
sub
popf
jl
or
mov
jns
dec
imul
cmc
incb
xchg
xchg
mov
cmp
lcall
adc
fldlg2
inc
hlt
or
addr16
sti
pop
and
cmp
and
cs
data16
mov
cmp
popa
push
test
call
pusha
adc
cmp
lds
aam
cmp
jns
dec
or
push
adc
mov
sub
lret
stos
pop
add
scas
inc
call
add
jnp
icebp
add
jp
out
getsec
in
inc
mov
mov
push
in
nop
ret
stos
sub
decl
pop
adcl
addb
dec
mov
jnp
movsb
and
xchg
fstl
inc
lock
notb
pop
push
jle
jnp
sti
int
pop
rcll
mov
pushl
and
or
stos
fcoml
sub
outsl
sbb
add
xchg
cmp
mov
dec
repnz
xor
sbb
loopne
add
pushl
loopne
push
test
dec
xchg
pop
aaa
aad
add
sbb
std
daa
ljmp
cltd
pop
rol
xor
mov
hlt
push
loopne
call
test
sbb
add
inc
mov
int
sub
add
in
lock
fcomip
dec
repnz
xor
cmp
adc
sahf
es
sbb
cld
ljmp
or
and
repnz
pop
cli
js
pushf
push
lret
out
movsl
dec
cmp
decl
pop
xor
insb
mov
mov
push
out
call
pop
jle
lret
or
mov
out
out
fwait
outsl
jmp
push
lds
jnp
jb
incl
dec
lock
mov
out
or
jns
in
pop
scas
sub
idiv
test
repz
lods
push
push
bound
mov
aaa
sub
nop
xchg
push
es
dec
mov
inc
or
shlb
incl
roll
je
pop
xchg
add
sti
icebp
daa
fdivr
notb
imul
fisubs
stos
or
mov
pop
or
mov
adc
lcall
inc
andb
ljmp
mov
aad
inc
and
stc
ljmp
sub
and
cld
out
add
add
push
out
mov
inc
aam
xchg
popf
push
mov
enter
push
lcall
push
mov
mov
adc
fistps
shrl
das
mov
test
push
lcall
cmc
jnp
add
push
sarb
add
ss
sbb
dec
repnz
lock
incl
ficompl
lret
popf
sbb
out
adc
mov
lods
jge
add
fdivp
incl
pop
pop
sbb
jle
ljmp
popf
ja
decl
std
mov
pop
cli
addb
mov
jg
mov
or
dec
insb
xchg
xchg
cs
pop
jbe
dec
or
ljmp
arpl
sub
rolb
dec
pop
xchg
push
les
sub
jbe
cmp
mov
sub
decl
xchg
hlt
inc
cmp
jl
aam
sti
cld
pop
pushf
cltd
pusha
push
xchg
dec
cmc
jg
shlb
adc
js
loopne
incl
in
imul
push
insl
cmp
mov
enter
arpl
push
adc
lods
adc
lret
scas
jg
out
insl
mov
xor
lcall
dec
cmpb
cs
shll
jnp
xor
mov
add
pop
pop
pop
jecxz
decl
xor
pop
test
test
mov
cltd
cwtl
xor
cltd
sbb
call
call
jb
jns
mov
pop
outsl
sub
clc
xchg
jg
cmpsb
decb
inc
xchg
cmp
mov
xchg
push
inc
lock
ljmp
lods
add
push
push
mov
xor
pop
cmc
andl
add
xchg
mov
sub
xchg
mov
adc
lods
pop
lret
and
pop
repnz
decl
sbb
push
aad
inc
xor
sub
sub
adc
lcall
add
sti
test
xlat
dec
or
push
xchg
mov
nop
lods
sbb
enter
pop
decl
es
rclb
xor
adc
leave
lahf
imul
mov
jge
xor
decl
mov
sbb
std
fdiv
dec
fdivs
pushf
pop
arpl
ds
sbb
jae
mov
in
or
call
add
test
cltd
pop
adc
inc
sub
sub
cmp
cmpsl
shll
arpl
inc
mov
loope
inc
mov
ret
and
data16
xor
sub
loopne
jmp
rol
repnz
add
xchg
push
push
ljmp
shlb
sub
push
shrb
out
or
cmp
mov
decb
dec
div
std
scas
sbb
mov
jns
sub
xchg
jmp
dec
push
mov
arpl
out
adc
pushw
gs
out
outsl
lea
fisttpll
jbe
and
mov
mov
push
arpl
cmp
jge
adc
inc
mov
push
xchg
mov
mov
push
enter
test
leave
inc
pushf
pop
cmp
leave
incl
cmp
sbb
sub
inc
xchg
jb
cmp
jge
dec
xor
jmp
mov
jae
in
dec
add
test
mov
sbb
hlt
mov
test
push
and
outsl
cmp
lret
mov
pop
cmc
pushl
or
loop
cltd
fcoms
pop
movsl
filds
jg
and
mov
push
sbb
js
xchg
xchg
iret
in
push
call
cmpsl
shl
xchg
dec
cmpsl
arpl
pushf
dec
cmpsb
cmp
test
fsubp
inc
xchg
decl
mov
cmp
imull
sbb
ss
cmp
jmp
pop
loopne
js
test
ret
dec
decl
iret
lods
inc
icebp
cli
cmp
imul
push
or
xchg
inc
cmc
sub
pusha
das
cli
pushl
dec
jns
mov
cmp
dec
or
fwait
dec
jge
mov
add
dec
jg
aam
inc
test
pop
mov
mov
sarl
mov
stc
cmp
inc
or
call
jl
push
mov
sbb
xor
push
mov
or
lcall
out
lret
cltd
loope
aad
xor
adc
bnd
mov
push
scas
lahf
lods
dec
jge
lcall
jmp
fidivs
adc
movsb
push
inc
shrl
leave
aam
mov
push
out
call
clc
jne
out
ljmp
les
add
xchg
scas
push
stos
mov
mov
pusha
mov
pop
jecxz
push
add
ret
adc
jns
enter
cmp
sub
pushl
cmp
icebp
data16
push
dec
test
popl
mov
pop
cmp
int3
push
call
adc
dec
mov
xlat
pop
or
out
xchg
clc
pextrw
adcb
decl
sub
stc
lock
xchg
mov
fimuls
mov
add
test
jmp
bound
jno
roll
cmpb
das
testb
shll
ror
xchg
mov
ret
inc
jle
leave
mov
ficoml
scas
push
clc
decl
sub
jnp
ljmp
loope
dec
add
mov
loop
add
arpl
inc
fsubs
inc
arpl
push
cmp
pop
call
pop
mov
add
xchg
lret
outsl
jno
addb
adc
call
mov
add
mov
es
ljmp
adc
scas
xchg
adc
mov
add
and
mov
sbbb
dec
cmpsl
in
mov
cmp
or
lods
cmp
lods
addr16
and
adc
push
pop
dec
and
incl
aad
and
mov
lret
out
adc
pop
decl
addl
addl
cmp
push
ljmp
bound
sub
pushl
mov
push
clc
xlat
data16
movsb
lods
fsubl
ljmp
push
jo
dec
mov
inc
sub
loop
fistpl
jg
mov
out
decl
imulb
clc
mov
push
pop
inc
push
and
roll
xchg
and
dec
jl
pop
decl
xor
mov
or
roll
cs
fcmovbe
jae
ds
incl
fwait
pusha
cmp
and
dec
in
loop
hlt
rorb
xchg
cmpl
push
in
lock
push
sub
stc
xchg
fisttps
dec
dec
mov
mov
lods
cld
pop
or
andl
popf
scas
xbegin
pop
xor
push
outsl
insl
mov
pop
into
adc
call
shlb
mov
cmpsb
sahf
imul
add
xorl
shrb
ss
and
jecxz
mulb
mov
jmp
addb
ficompl
cmp
mov
add
data16
sub
nop
push
dec
ljmp
movl
ss
pop
sub
dec
mov
out
pop
adc
xor
and
push
fcomip
lcall
scas
popa
dec
add
dec
lcall
imul
jmp
or
fcomip
movb
dec
cmpsb
sub
and
push
out
aaa
or
jmp
mov
mov
lds
push
aas
pop
xchg
sti
jb
jl
jmp
aad
les
pushl
test
inc
aaa
das
es
sub
mov
mov
outsb
adcb
pop
pop
push
cmp
and
daa
dec
rcrb
sti
and
mov
mov
xor
add
popaw
pusha
push
mov
cmp
lahf
sub
push
jp
cli
decl
push
mov
imul
addr16
and
pop
xchg
jg
call
or
jge
leave
jnp
mov
addr16
inc
cs
call
sarb
or
xchg
loop
test
and
push
sahf
inc
sahf
pop
leave
pushl
outsb
movsl
shl
inc
std
rep
rclb
cmp
pop
xor
mulb
test
mov
mov
lock
adcb
jns
into
jno
xor
fucomi
das
sbbb
popf
outsb
call
in
cmpsb
pop
dec
mov
mov
popa
aad
cmc
push
imul
mov
pop
inc
loop
outsl
jg
pushl
pop
mov
jno
cmpsl
mov
out
add
push
pop
xchg
sbb
sub
jmp
bound
add
sub
mov
ljmp
cltd
out
ds
in
lahf
xor
orl
and
cmc
jmp
pushl
in
pop
lret
push
mov
out
out
adc
jmp
fmull
sar
dec
jmp
cld
pusha
push
push
push
das
mov
mov
pop
mov
or
lds
loopne
movsb
fcos
push
std
call
inc
cmpsl
xchg
test
lret
cmp
push
add
test
decl
mull
shll
fidivrl
dec
mov
inc
pop
sti
xchg
fs
in
leave
jg
jmp
test
adc
out
movsl
add
pop
jl
shrb
mov
push
out
push
and
mov
into
mov
fimull
cmpsb
xor
insb
cld
jns
or
and
scas
lcall
pop
ja
enter
insb
rcll
ficomps
int
mov
sub
push
scas
sub
jl
data16
mov
mov
inc
sbb
and
ljmp
jnp
call
mov
cwtl
jae
cli
test
inc
add
ljmp
inc
or
lea
decl
lret
ret
and
out
jb
mov
push
lods
jnp
pop
mov
pop
inc
icebp
icebp
insl
mov
inc
sub
out
lods
out
clc
in
push
lds
mov
pop
out
jecxz
shl
mov
jb
cmp
enter
call
lock
ja
or
push
ds
cmpsl
jns
push
in
addb
lret
cmp
incl
mov
cmp
rcl
outsb
jnp
in
sub
rorl
add
ljmp
shll
inc
or
jbe
clc
test
pop
xchg
push
inc
repnz
inc
aas
in
out
daa
or
mov
jns
cli
loop
xchg
cwtl
jae
and
imul
jle
call
cli
popf
loop
lcall
fildll
jae
sbb
mov
iret
pop
test
add
insb
dec
fsts
int
adc
fwait
aam
pusha
mov
int
mov
pop
xchg
aaa
inc
cmp
inc
adc
sub
cmp
jno
and
sub
lcall
sub
lret
push
popf
push
inc
pop
pop
lock
std
mov
js
mov
cs
fnstcw
test
insl
xor
lcall
inc
cmpsb
sub
xchg
sub
test
arpl
jno
adc
cmpl
decl
push
inc
mov
mov
in
mov
jnp
data16
ljmp
dec
int
sbb
cmc
jecxz
mov
mov
ss
rcrb
adc
mov
fwait
or
cmp
cwtl
ljmp
adc
imul
decb
fcoml
push
out
mov
movsl
jmp
ret
jmp
mov
push
xor
dec
in
gs
loop
adc
lcall
fcoml
mov
addl
dec
nop
pop
push
mov
mov
ja
push
push
xchg
data16
mov
lret
cmp
out
mov
je
mov
inc
clc
add
pop
into
sub
nop
push
push
jp
mov
scas
pop
inc
ljmp
and
dec
sahf
mov
test
es
jne
push
xchg
jno
push
push
gs
fisttps
xchg
movl
cmp
mov
out
mulb
out
mov
pop
aam
push
or
jbe
pop
loope
mov
pop
inc
xor
push
cmp
jbe
pop
std
mov
std
mov
in
rol
inc
outsl
mov
dec
and
pop
aad
mov
mov
decl
insb
setno
sub
sub
mov
mov
shl
test
aas
sbb
test
in
push
cmc
xor
jo
jno
mov
cmpsb
jl
and
adc
ss
adc
and
lods
call
sbb
test
and
jg
push
loop
inc
cmpsb
inc
ret
sbb
out
or
mov
and
stos
sub
push
les
mov
decl
push
jne
and
pop
aaa
sub
xchg
fwait
jbe
mov
sub
mov
dec
add
lcall
ja
jns
sub
xchg
insl
fisttpl
inc
xlat
imul
incl
cmpsl
cmp
mov
dec
lods
dec
sbb
sbb
gs
ret
test
lds
lcall
push
add
adc
scas
scas
lods
and
insb
jne
movsb
aad
jnp
adc
jo
sahf
data16
mov
call
lds
aad
mov
dec
repz
and
dec
push
lock
jmp
adc
cwtl
in
add
xchg
mov
in
xchg
fidivl
pushf
mov
inc
js
push
xchg
sub
call
inc
pop
test
fucomi
ss
call
addr16
call
jo
lods
jp
movsl
pop
mov
dec
cs
call
call
repnz
mov
jno
cwtl
es
add
and
jmp
sub
cmp
cld
scas
pop
cmp
mov
iret
flds
movsb
ljmp
mov
fbld
outsl
inc
lcall
push
outsl
incl
cmp
ja
popa
icebp
adc
adc
xchg
add
pop
push
icebp
stc
cld
pusha
dec
inc
sbbb
pushl
cmp
push
adc
lahf
lret
pop
sbb
in
in
arpl
flds
cmp
push
sbb
push
mov
dec
add
mov
nop
loopne
lea
and
lcall
inc
mov
xchg
icebp
dec
dec
mov
pop
std
xchg
adc
jbe
aam
pop
jg
call
movsl
inc
inc
xlat
shrb
nop
cli
push
sbb
cmpsl
or
incl
loope
sub
sbb
addr16
lea
jae
js
push
push
jmp
pop
mov
pop
add
sahf
xor
bound
js
push
jle
jno
dec
pop
outsl
ret
mov
call
clc
and
orl
aaa
fstl
jl
xlat
push
addr16
ljmp
inc
xchg
add
enter
dec
iret
outsl
ss
fistps
or
jb
and
pop
mov
cld
mov
sbb
mov
sar
mov
and
ret
sbbb
push
mov
pop
test
incl
adc
pop
cmp
add
hlt
movsb
jl
inc
push
scas
int
daa
idivb
lcall
shrl
inc
mov
incl
in
sub
mov
lcall
cmp
jbe
cmp
jmp
call
cwtl
xchg
lock
push
test
mov
dec
cmp
xchg
xchg
mov
shll
jg
sahf
insb
stos
xor
lcall
sarl
dec
pop
pop
or
inc
push
push
jne
mov
mov
in
dec
pop
xor
scas
scas
cmp
imul
out
and
xor
xchg
cmp
push
mov
dec
inc
xchg
jp
in
in
loope
dec
and
mov
rcr
or
incl
mov
andnps
cs
stos
mov
in
vorps
mov
gs
in
lea
std
insl
xchg
jb
and
mov
imul
scas
mov
lock
repnz
ss
push
ljmp
jmp
sbb
repnz
mov
jne
cld
lds
inc
sub
ds
fmul
inc
je
adc
lcall
sbb
in
std
push
insl
jge
mov
cmp
in
ds
scas
cmp
ljmp
lcall
movsl
ja
aaa
ja
xor
ror
jnp
jae
dec
rcrl
jg
mov
mov
lret
retw
jp
xchg
inc
testl
ss
mov
fmull
cmpb
filds
mov
xor
adc
jae
mov
push
cmp
jo
push
js
xchg
jnp
int3
xchg
and
jns
sbb
and
pop
mov
or
rorl
or
push
mov
das
adc
xor
je
repz
pop
dec
pushf
mov
fcomps
inc
cs
sar
ljmp
bound
das
xor
sbbb
and
jae
mov
xchg
mov
jb
or
jnp
lahf
cmp
decl
adc
push
jmp
mov
add
sub
pop
icebp
sbb
inc
int
push
popf
and
mov
fildll
mov
lods
sbb
push
inc
cmp
mov
rorb
mov
cmpsl
or
cli
jno
mov
divl
cvtps2pd
push
scas
xor
mov
xor
xor
lds
clc
repnz
cmp
jbe
stc
arpl
pop
insl
sub
out
fsubs
stos
push
push
mov
xchg
imul
icebp
ss
stos
lcall
push
pop
fucomi
test
cwtl
aas
push
pop
arpl
lcall
pop
and
loopne
pmovmskb
bound
ljmp
lcall
roll
mov
mov
xchg
mov
sti
push
add
dec
ljmp
cmp
imul
cmp
int
and
movsb
xchg
lea
js
outsl
sbb
lcall
lods
scas
popa
cmc
pop
sub
leave
rclb
lds
addb
cmp
cmpsb
and
call
sahf
arpl
adc
xor
or
aad
jle
and
mov
xor
arpl
push
lcall
mov
movsb
repnz
sub
or
mov
push
into
push
xchg
test
mov
fidivrl
addr16
pop
aas
enter
cltd
fmul
dec
or
sub
cs
inc
or
inc
xor
mov
push
push
mov
adcb
aad
xor
shrb
ficompl
xor
xor
pusha
adc
push
cmp
cld
jmp
jmp
bnd
lret
lods
decl
scas
scas
xchg
mov
into
and
clc
cmp
ss
fwait
cwtl
inc
push
sbb
popa
rol
sub
dec
popf
adc
lods
jb
jecxz
icebp
insl
repz
push
xchg
xor
das
pop
js
adc
jns
push
pushl
jp
pop
xor
fwait
mov
pop
mov
pop
in
popf
mov
in
jmp
std
test
sbb
cs
ror
outsb
movsl
sbb
cmp
incl
jae
int
addr16
das
shlb
insb
insb
lods
negb
jl
jp
adc
cld
aaa
std
incl
dec
fsubrs
jp
clc
incb
jo
sub
mov
jl
xchg
ljmp
mov
dec
sub
int3
pop
pop
adc
sti
or
mov
out
and
pop
sbb
add
sbb
ds
loop
lods
pop
sbb
add
mov
je
jmp
jge
insb
xor
gs
or
and
lret
sar
aaa
cld
pushl
jno
inc
cmp
fimuls
in
clc
sub
stos
sub
ljmp
xchg
mov
xchg
cmp
mov
and
gs
out
gs
aam
incl
cld
sbb
cs
inc
adc
imul
dec
loopne
adc
xchg
jle
outsl
mov
jb
xlat
jmp
jne
incl
sbb
lock
imul
ljmp
mov
jp
lret
pop
jnp
insb
into
mov
mov
xchg
ja
dec
mov
imul
dec
lds
hlt
push
test
add
fs
xchg
sub
jmp
cmp
jle
in
xlat
jno
mov
les
xchg
or
pop
jmp
decl
jb
mov
out
aaa
mov
call
adc
push
jo
ljmp
mov
jo
cmp
jnp
andl
mov
sub
cmpsl
adc
cltd
push
pop
cmpb
out
jmp
shlb
xorb
push
icebp
icebp
push
push
pop
jne
pop
movsb
sti
jae
out
cmp
aaa
xchg
imul
jge
lock
subb
ds
lock
jecxz
push
shl
cwtl
jmp
cli
dec
subb
cmp
cwtl
fs
sbbb
dec
std
pushl
cmpsl
mov
test
enter
cmpsl
sub
imull
out
cli
jg
and
sub
outsl
xor
push
loopne
pusha
xchg
cwtl
dec
js
fdivr
incl
outsb
jmp
or
mov
jp
pop
xchg
or
ds
or
out
pushf
pop
cwtl
das
jnp
sub
jmp
sbb
xchg
loopne
mov
mov
adc
iret
cmpl
pop
lock
jp
jae
sub
jne
mov
xchg
xchg
lahf
orb
sbb
les
jae
les
push
jg
fcomip
js
or
push
dec
je
and
repz
outsl
or
int3
les
mov
mov
jle
inc
inc
jne
push
movsb
rorl
pop
mov
push
push
popf
fildl
push
gs
cmp
mov
pop
hlt
ljmp
imul
mov
and
sub
js
sbb
cmp
sbb
mov
and
fisttps
mov
adc
pushf
outsl
mov
mov
rcr
or
mov
add
jmp
lock
in
nop
cmc
clc
negb
pop
test
leave
test
jp
push
add
mov
clc
call
push
shl
jae
cmp
xchg
insb
aam
jg
mov
repz
adcl
dec
push
popf
cmpsl
jmp
cmp
or
and
push
popf
ret
icebp
mov
jl
enter
inc
sbb
jp
lea
cmpsl
inc
je
das
cli
decl
inc
push
je
inc
and
movsl
leave
mov
xor
or
adc
add
dec
adc
push
jnp
sbb
sbb
aad
sbb
gs
fisubs
scas
add
mov
hlt
cmp
dec
sbb
cmpsb
sbb
push
fyl2xp1
sarb
mov
add
xor
lcall
movsl
repz
sar
movsl
add
shl
cmpsb
data16
add
xchg
leave
pop
call
mov
mov
adcl
out
cmpl
decl
push
mov
dec
ja,pt
subb
inc
imul
xchg
xor
andb
pushl
int3
das
cmp
jle
mov
adc
stos
ljmp
cmp
fcoml
mov
mov
push
xlat
lcall
imul
fildl
mov
sbb
out
lahf
decl
cs
mov
bound
rcr
mov
hlt
dec
pop
or
cli
xorl
outsl
cld
pop
mov
fcomps
stos
rcrl
sar
ljmp
xorl
cmp
push
loope
lds
insl
stc
push
lret
and
scas
mov
cwtl
mov
cli
dec
or
push
push
out
icebp
add
orb
push
hlt
mov
ffreep
and
push
fdivr
sub
add
pop
xor
mov
pop
out
inc
lcall
lahf
inc
mov
inc
cmc
push
mov
lods
mov
lcall
and
cli
out
clc
push
lock
ja
add
pusha
pop
xor
jno
decl
ret
je
mov
fsubl
pushl
sbb
ret
push
ljmp
out
push
es
outsb
sahf
xchg
xchg
aam
punpcklwd
adcb
iret
lcall
ljmp
fidivrs
mov
fnsave
dec
jb
cmp
int3
sbb
out
ljmp
xor
xchg
fdiv
cld
mov
cmpsb
mov
jb
jne
xchg
cs
or
or
cmp
lcall
push
bound
sub
cld
mov
jb
add
lea
add
mov
fimull
jmp
loopne
pusha
icebp
fstp
cmp
nop
hlt
out
sbb
mov
imull
ja
das
in
jle
jle
cltd
hlt
in
clc
sahf
idivl
icebp
mov
mov
xchg
or
hlt
push
cmp
fisubrs
les
inc
or
cld
fs
add
ja
dec
lds
lock
call
jae
arpl
test
iret
stc
lods
popa
les
or
decl
sbb
aaa
pop
push
sub
pop
jnp
lds
aam
cmp
scas
je
cs
mov
leave
cmc
loope
mov
pop
adc
jno
rcrl
and
adc
cmp
call
cmc
rolb
push
sub
sub
popa
push
pop
fmull
adc
jne
shrb
mov
lahf
add
ljmp
cli
lds
jb
add
jne
mov
lahf
xchg
js
jl
push
push
inc
push
sbb
in
mov
cmpsl
mov
insl
dec
cmp
push
push
mov
xor
scas
inc
xchg
iret
push
nop
pop
loopne
jo
adc
fsubr
cltd
ja
pop
out
jp
inc
xor
lods
ljmp
pushl
pop
inc
mov
pusha
lahf
inc
cmc
or
pop
lods
add
imul
sarl
int
pop
rolb
jmp
outsb
xor
ficomps
insl
cmp
sub
incl
addr16
pusha
mov
or
pop
xchg
out
jg
stos
mov
std
and
xchg
ljmp
mov
clc
inc
in
test
push
jnp
cmp
iret
add
adc
pushl
mov
fdivs
jae
lahf
jp
mov
and
js
push
pusha
jne
addl
adc
call
nop
pop
sbb
sub
fildl
fwait
mov
or
je
das
cwtl
mov
mov
cli
call
ret
call
movsl
fwait
popf
xchg
push
out
pop
scas
cs
cmp
nop
iret
cs
jle
mov
push
mov
lret
mov
or
ss
push
xor
lcall
and
scas
jns
pop
jl
inc
mov
add
jnp
mov
cld
scas
pop
aam
mov
lods
fwait
imull
sbb
inc
or
xchg
sti
popa
xchg
in
add
sub
add
push
sbb
mov
aam
push
es
iret
or
dec
dec
insb
test
sub
mov
ret
mov
xor
mov
mov
lret
xor
cmc
and
dec
adc
cmp
cmp
xor
fnstenv
ss
loope
and
cli
xchg
ds
ljmp
sub
xor
sbb
dec
dec
sti
icebp
lods
out
push
test
xchg
xor
push
aad
pushl
jo
inc
jp
and
mov
mov
cmc
ds
jle
mov
js
mov
or
rorl
inc
in
cmpsl
inc
jge
ljmp
es
sbb
or
jg
xchg
mov
xchg
pop
cmp
jmp
iret
std
adc
adc
lahf
mov
inc
xor
adc
add
aaa
mov
popa
or
inc
arpl
sub
cli
call
lock
push
pusha
loope
cli
lahf
push
lret
sbb
adc
filds
pusha
insb
das
filds
inc
push
sahf
sub
push
decl
push
in
jnp
mov
pushw
pop
sub
push
jno
and
push
or
movsw
pushl
add
lods
imul
scas
cmp
pushf
pop
movsb
test
lods
fstpt
add
push
incl
inc
add
xchg
test
mov
mov
shll
out
mov
dec
add
fmull
or
pop
aad
lock
lcall
mov
mov
cmp
push
push
aaa
jg
jne
sahf
or
xor
insl
imul
movsl
pop
clc
dec
push
stos
add
push
sbb
inc
repz
jmp
dec
sub
pop
fs
subb
jno
cmp
mov
stos
and
cmp
sti
nop
sbb
ljmp
loop
addl
out
das
inc
dec
jmp
mov
mov
lds
cli
rolb
sub
ss
xchg
mov
dec
test
jb
insb
movsb
in
inc
out
out
cmpsb
data16
decl
ret
adc
fs
adc
pusha
bound
sarl
mov
pusha
jae
ljmp
cmp
mov
or
push
mov
call
sbb
das
movsb
pop
pop
sub
pop
cld
pop
xchg
int3
data16
push
push
pushf
inc
push
call
ja
jno
nop
outsb
sahf
shr
out
sbb
xchg
outsl
dec
sbb
lods
pop
rcrl
pushl
mov
xchg
test
push
seto
divb
incl
mov
arpl
fcomip
outsb
flds
rclb
inc
or
cli
daa
sar
sti
xlat
clc
pop
nop
dec
lods
add
jo
sub
or
insl
push
sti
jg
mov
mov
mov
in
cmp
sbb
cli
jg
push
push
or
in
das
ljmp
ret
in
movsb
inc
pop
jae
pop
dec
xchg
out
jg
mov
mov
insb
push
daa
pop
mov
cmpb
mov
xor
dec
bndldx
insb
adc
out
or
mov
and
sbb
or
push
dec
fs
nop
push
mov
dec
sti
push
mov
imul
xchg
jnp
shll
stos
popa
mov
pushl
push
xchg
sbb
pop
pop
mov
clc
inc
or
enter
movsl
jp
jle
call
sbb
insl
pop
and
loopne
dec
mov
sub
movsb
push
movsb
mov
add
insb
add
dec
dec
das
cs
push
pop
roll
ljmp
mov
jmp
shll
mov
pushl
cmp
mov
mov
dec
adc
enter
lahf
icebp
adc
inc
pop
mov
mov
clc
inc
aam
outsb
xchg
adc
in
filds
jg
pushl
inc
test
int3
out
push
push
and
mov
lds
mov
clc
pushl
jp
aaa
inc
in
and
out
lahf
ds
push
ds
lcall
cmp
imul
insl
push
add
inc
add
adc
mov
lcall
push
mov
or
mov
xchg
hlt
dec
or
lcall
mov
push
cs
add
adc
dec
sbb
jmp
push
mov
cmp
mov
inc
cmc
repnz
xchg
insl
in
inc
xor
std
sbb
test
push
nop
in
addr16
nop
jmp
jl
stos
fs
push
hlt
pop
sbb
pop
pop
mov
jle
cmp
mov
mov
add
decl
scas
adcb
es
ret
jmp
f2xm1
push
push
insb
clc
stos
loope
sbb
test
or
jne
or
mov
mov
xchg
jle
or
rcrl
dec
adc
outsb
insb
cmp
pop
jecxz
ficomps
sbb
inc
jg
ret
pop
jbe
sti
jns
or
iret
pop
mov
push
push
xor
jle
lods
popf
insb
sahf
dec
aaa
and
or
and
les
mov
fsubl
scas
hlt
pop
rolb
xor
in
pop
fbstp
call
sbb
push
incl
add
lret
dec
lods
sub
data16
mov
ror
and
lcall
ret
subl
repnz
ret
xor
das
fsubrs
xor
jb
xchg
jge
xchg
inc
or
or
and
rorb
test
insb
fsubrl
or
shlb
sar
decl
push
jp
mov
mov
push
mov
in
jns
sub
mov
addr16
stos
or
add
jp
pop
inc
pop
loopne
jmp
xchg
push
xchg
cs
or
xchg
ljmp
and
lea
sahf
pushf
push
xchg
sahf
xchg
aam
mov
sbb
call
addr16
imul
lahf
data16
pusha
cmp
push
popa
int
pop
mov
jmp
mov
fisttpll
std
mov
xor
repz
popf
fwait
jmp
test
lret
mov
fists
subl
loop
or
or
jg
mov
lret
xchg
sub
dec
mov
push
imul
enter
clc
sar
cmp
xor
inc
and
cmp
pop
loope
popf
clc
mov
xchg
lret
mov
jmp
xchg
dec
add
sbb
push
jl
and
pop
pusha
adc
fsubs
or
ljmp
cmp
xchg
and
adc
repz
fcomp
xchg
ret
or
mov
das
mov
jg
std
cmp
inc
sahf
out
nop
xchg
ror
cmpsl
hlt
ret
or
inc
mov
fnstsw
cmp
in
call
mov
outsb
shlb
push
cs
lcall
mov
aaa
ds
fidivrs
sahf
mov
shll
pop
movsb
rclb
adc
stos
clc
incl
jo
frstor
arpl
jb
add
push
and
sarb
jl
out
jle
push
pop
cli
add
push
fadd
inc
ja
lahf
push
decl
inc
out
push
add
or
xor
arpl
ret
sub
jmp
jl
jbe
pop
adc
mov
lock
or
leave
push
jmp
fisttpl
mov
mov
jl
sbb
js
add
push
pop
xchg
jno
sbb
call
pop
add
inc
and
inc
imul
or
negl
out
mov
pop
cltd
sbb
xchg
lahf
out
das
out
fs
mov
add
sbb
pop
nop
insb
sub
push
movsb
jbe
lcall
pop
jbe
mov
mov
aaa
addr16
stc
push
mov
cmpsb
enter
test
pushl
mov
cmc
imul
inc
xchg
mov
lods
sarb
ss
push
and
icebp
stc
addl
add
incb
jmp
pusha
test
subps
mov
cli
jb
jle
sbb
hlt
or
test
cmp
lcall
subl
pop
ss
out
dec
cmpsb
stos
mov
outsb
nop
and
mov
jmp
xor
xchg
and
ret
xchg
adc
cs
lret
jg
or
out
bound
out
sbb
ja
xlat
in
mov
mov
loopne
pop
repnz
ret
lcall
mov
nop
sub
inc
jp
adc
xor
ljmp
cmp
sub
pop
adc
add
mov
and
cld
push
adc
add
mov
jmp
enter
cmp
cmp
pop
pop
sar
or
mov
or
dec
in
rorl
jmp
leave
ret
daa
sbbl
imul
out
sbb
lea
mov
enter
push
inc
mov
and
ljmp
sub
pop
aaa
dec
test
mov
push
push
fsts
lods
mov
dec
rcrb
scas
sbb
leave
in
cld
inc
insb
inc
jle
pop
sub
cmp
jmp
pop
jmp
jmp
stos
jp
test
fistpl
lcall
dec
push
push
sub
inc
sub
fiaddl
enter
mov
cmp
adc
clc
lcall
push
rcrb
push
cmp
pop
xchg
scas
jmp
lret
aam
inc
std
lods
and
outsl
and
mov
xlat
xor
inc
mov
enter
push
mov
jmp
sbb
inc
push
je
sub
into
mov
pushf
icebp
mov
lods
cli
cmp
push
xchg
push
jp
pop
jno
xor
jp
pop
and
mov
push
xchg
pop
out
lds
fwait
add
jmp
ret
push
arpl
aad
dec
sub
int
cmpsb
mov
sub
mov
andl
sub
mov
aam
cltd
xchg
fs
ljmp
push
dec
sub
outsl
rcrl
mov
xor
iret
push
dec
fistpl
jle
sbb
loop
cld
pop
hlt
call
pop
cmpsl
pushf
sub
jne
leave
icebp
js
loop
loopne
mov
decl
xor
dec
mov
mov
cmp
movsb
dec
vmwrite
inc
inc
dec
fbstp
test
add
cmpsl
pop
cmp
sbb
jo
sub
cld
dec
test
std
mov
cs
xor
fisubl
add
xchg
std
xor
adcl
jmp
add
jbe
inc
imulb
loope
inc
add
clc
loop
adc
sub
pop
cmp
mov
mov
cmpsl
popa
push
adc
push
std
xchg
scas
notl
ja
enter
cltd
mov
mov
fcomip
sbb
xor
icebp
int3
sahf
lock
ret
es
roll
popf
adc
and
gs
inc
jge
das
movb
or
inc
stos
mov
mov
jns
push
mulb
jb
pop
ja
btc
nop
xchg
out
xorb
jbe
dec
adc
inc
and
sbb
dec
decl
sub
enter
into
mov
fwait
pop
lcall
repnz
pop
cld
jmp
in
loopne
sub
lret
int3
jns
lret
imul
repz
ds
inc
hlt
cld
adcb
mov
aad
pop
dec
dec
dec
mov
push
jge
neg
push
flds
push
sub
decl
stos
sbb
sub
dec
repz
or
or
mov
mull
mov
fmulp
dec
es
ss
dec
adc
imul
test
xchg
add
mov
outsl
sub
adc
sbb
jmp
xchg
decl
mov
cmp
fwait
test
push
mov
divb
call
pop
aam
push
xchg
rcll
inc
cmp
movsb
out
pop
test
das
cli
mov
adc
popa
add
dec
inc
mov
insl
or
decl
push
pop
jbe
repnz
mov
sahf
jmp
mov
push
filds
mov
ljmp
cltd
xor
popf
pop
xor
or
xor
adc
or
mov
add
lcall
popa
je
outsb
movb
insl
cwtl
popf
cld
xor
pop
mov
jae
loope
repz
adc
in
sub
aas
leave
sahf
or
mull
xchg
add
bound
call
mov
jg
mov
clc
jbe
movsb
fwait
cltd
inc
push
jge
in
mov
push
dec
pop
sub
ds
cmpsl
inc
cmpsl
orb
lea
lods
in
decl
jmp
ret
mov
int3
cmc
mov
push
push
xchg
pop
sti
pop
decl
xchg
imulb
adc
mov
cmpsb
cli
jae
mov
cmpsb
jmp
sbb
fimuls
daa
xchg
push
hlt
fwait
jnp
ljmp
pop
xchg
leave
repz
xor
loope
and
jno
daa
cmp
outsl
xchg
sub
hlt
mov
pushf
loop
loop
movsb
jns
ja
loopne
jbe
or
ljmp
mov
sbb
dec
fs
pop
xor
xor
mov
in
mov
movsb
inc
out
adc
jno
push
lcall
fsubr
shl
je
and
lret
adc
dec
aam
push
imul
mov
loopne
mov
scas
lods
add
adc
dec
pop
nop
xchg
xchg
push
mov
add
mov
insb
sbb
sar
dec
imul
mov
jp
divb
orb
call
cld
in
xor
fdivrp
fidivl
inc
je
cli
mov
ret
fs
xchg
jne
cmpsb
inc
in
jle
push
sub
adc
loope
repz
add
sub
inc
cmp
test
movsb
mov
addb
fidivs
add
incl
jae
add
push
repnz
mov
jg
add
pop
cmp
push
and
mov
inc
add
add
mov
inc
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
out
xor
push
movsb
push
movsb
inc
scas
push
and
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
ret
sub
mov
jb
insb
or
lret
imul
imul
imul
sub
lret
mov
jbe
fnstenv
fldt
lret
jae
mov
stos
pop
stos
popa
loopne
stos
mov
and
mov
ss
aam
push
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
ds
dec
in
movsb
push
add
mov
sbbl
push
cmpb
arpl
push
push
push
aaa
fcmovnbe
mov
push
jne
push
aam
push
ret
add
lahf
jbe
push
mov
push
pop
dec
jbe
cmpsl
mov
push
data16
sarl
pop
aaa
add
push
xor
shlb
lret
stos
mov
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
fwait
testb
fidivrl
push
jp
jp
mov
mov
inc
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
ja
mov
ljmp
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
jmp
std
outsl
imulb
movl
out
push
iret
repz
hlt
clc
stc
cli
sti
cld
or
repz
incb
jecxz
arpl
xor
add
jo
imul
pushw
add
pop
add
pop
add
jo
insb
add
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
es
mov
insb
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sub
push
repnz
xor
das
pop
push
jg
ficoms
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
les
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
addl
insb
andb
cwtl
sahf
mov
pushf
fwait
lcall
decl
test
xchg
xchg
sub
dec
ja
jns
dec
outsl
fwait
push
jle
bound
js
imul
cmp
je
xchg
push
mov
mov
dec
lsl
push
aaa
pop
pop
scas
aas
and
mov
mov
pop
push
dec
add
push
mov
sti
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
add
jb
cs
xor
or
pop
mov
xor
jbe
dec
sbb
cmp
outsb
and
mov
xchg
jo
loopne
sti
pop
push
inc
mov
cmp
mov
inc
add
jae
xchg
outsl
push
mov
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
mov
in
addr16
bound
mov
mov
push
into
inc
push
sahf
mov
insb
add
outsb
fcmovu
mov
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
addb
add
jb
shll
outsl
pop
lahf
loopne
call
pushf
push
rorb
add
lcall
outsb
mov
jns
dec
mov
add
ja
sahf
jbe
fistpl
std
add
popf
imul
stos
push
add
and
sub
hlt
int
cmp
mov
gs
mov
shrl
insb
pop
mov
push
outsl
ror
push
ds
rorl
call
push
mov
pop
jg
fiadds
call
lock
mov
in
loopne
setbe
add
test
cltd
push
push
loopne
iret
sahf
mov
xchg
out
in
push
jle
or
jecxz
into
out
orb
aad
push
xchg
out
lods
divb
fildl
adc
push
adcl
addb
sbb
test
test
sbb
test
in
mov
push
xchg
int
in
insb
nop
and
out
xchg
in
xchg
lock
rcr
sub
sub
imulb
in
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
ficompl
icebp
fwait
cmpsb
pop
cmp
mov
aam
jle
fisttps
jo
test
sahf
jle
shlb
ljmp
mov
fmul
mov
sub
out
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
jmp
data16
add
cmp
dec
dec
cs
dec
out
je
inc
sbb
add
adc
mov
mov
femms
or
or
mov
inc
sbb
es
push
adc
push
add
nop
add
adc
ds
add
enter
mov
adc
sbb
xchg
push
mov
cld
sbb
mov
push
add
and
loopne
ds
push
imul
sub
scas
add
and
insb
xor
iret
adc
cmp
sub
mov
sbb
inc
mov
sub
scas
cmp
inc
jle
ficompl
xor
dec
popf
imull
or
dec
cmpsl
jge
lods
aas
adc
ds
xor
dec
fidivs
cmp
test
mov
ds
divb
xor
pop
mov
clc
std
mov
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
inc
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
fldt
mov
sub
scas
xor
inc
inc
inc
mov
sar
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
push
mov
call
cli
cwtl
xchg
pusha
xchg
nop
sahf
xchg
xchg
xchg
xchg
mov
nop
decl
test
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
pop
daa
mov
lds
fwait
and
jge
rolb
add
add
add
jg
orb
jl
push
add
cmc
repz
out
dec
dec
xor
aas
add
xchg
pop
cmp
test
add
ljmp
pushl
inc
add
mov
push
mov
fnstsw
repnz
outsl
aaa
add
add
in
jg
mov
popf
add
ret
push
in
lcall
sub
out
or
mov
push
push
dec
lret
ljmp
fmul
js
into
xchg
add
mov
mov
fistpll
loopne
test
scas
xchg
js
in
and
out
mov
nop
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
mov
int
mov
fiadds
mov
flds
mov
mov
add
add
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
addr16
sub
pop
into
pusha
mov
add
cli
and
xchg
add
loope
divps
add
xor
cli
inc
call
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
xor
loopne
xor
pop
inc
data16
inc
sbb
fdivrp
add
arpl
adc
add
add
shl
sbb
jbe
mov
push
pop
add
sbb
and
add
mov
sbb
mov
or
pop
xor
fisttpll
jmp
lods
jle
lret
imul
imul
add
add
shlb
mov
inc
pop
dec
cmp
pop
add
adc
pusha
adc
scas
data16
add
push
jg
add
imul
and
lea
incl
xchg
add
jg
cwtl
add
pop
sub
xor
dec
jg
pop
je
lods
jle
ljmp
pop
fdivrp
cmpsb
ljmp
mov
pop
pop
pop
add
fcmovu
mov
daa
aas
aaa
pop
pop
push
add
jle
lock
cmpsb
aaa
add
add
mov
jle
sbb
or
or
dec
xchg
cmp
sldt
mov
in
mov
daa
push
arpl
test
mov
das
pop
push
mov
arpl
out
lcall
decl
dec
test
pop
dec
test
stos
ljmp
dec
mov
jle
jle
push
sbb
out
dec
test
push
fnstenv
add
push
nop
jmp
pop
push
jbe
mov
push
jnp
push
jp
into
mov
decb
js
dec
jbe
pop
mov
mov
pop
mov
mov
or
es
push
outsb
test
mov
incl
dec
call
fs
outsb
ss
fisttpll
xor
xchg
dec
ja
test
call
push
sahf
jns
fiadds
test
mov
or
sahf
inc
out
adc
xchg
cs
aas
popf
inc
push
pushf
cmp
imul
jnp
fistl
xchg
xor
sub
out
mov
nop
sub
nop
daa
ss
cs
fldcw
adc
outsb
push
xor
or
call
pushl
inc
xchg
mov
or
ja
xor
cmp
sahf
mov
nop
mov
pop
sbb
and
push
add
pop
ja
dec
aad
cltd
mov
bound
and
ja
notb
lock
aaa
mov
add
add
mov
adc
pop
inc
xlat
mov
dec
or
add
add
push
and
adc
adc
push
adc
out
negl
orl
lea
mov
push
xchg
inc
and
cmp
lock
xchg
out
cmp
pop
cmp
incl
cmp
imul
add
push
add
ds
inc
sbb
out
pop
shrl
mov
mov
leave
mov
mov
inc
push
push
sbb
xor
dec
cli
adc
out
idiv
xchg
std
mov
jmp
syscall
mov
sub
xchg
mov
add
pop
xchg
add
outsl
sbbb
or
mov
sub
adc
iret
xchg
daa
cld
pop
das
pop
adc
jmp
push
rcll
sar
punpcklwd
push
pop
daa
std
out
inc
mov
add
xorb
sbb
incl
sbb
mov
mov
lcall
inc
sub
pushl
decl
lea
mov
mov
sahf
sub
call
mov
pop
decb
add
inc
sub
xchg
xor
xor
lcallw
sub
push
outsb
decb
mov
push
mov
add
or
nop
mov
xor
push
inc
bswap
jle
cltd
mov
inc
sti
out
loope
adc
ud0
incb
enter
dec
decl
add
add
iret
mov
incl
pushl
aaa
mov
xlat
fdivrp
rclb
jns
add
pop
sti
push
std
sub
jmp
call
add
push
lcall
or
pop
cmpsl
cld
in
mov
add
in
adcl
xlat
jg
test
and
cli
imulb
movsb
and
nop
inc
roll
dec
push
xchg
call
or
mov
leave
iret
inc
pop
fcmovbe
pop
pop
imul
xorps
aaa
mov
dec
push
push
rorl
icebp
sahf
mov
push
mov
roll
test
incl
call
adc
jmp
ljmp
fcmove
jnp
lahf
inc
inc
push
inc
inc
pop
ss
in
inc
pop
mov
insb
mov
sahf
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
lcall
cs
dec
xchg
aam
imul
push
lahf
mov
add
push
shrb
rcl
outsb
es
shll
push
xor
add
das
xor
insl
pop
daa
outsl
xor
imul
and
push
push
movsb
sub
lcall
decl
pop
xor
movsl
pop
int
repnz
cli
mov
and
popfw
cmp
aas
call
push
cwtl
xor
dec
inc
push
xchg
push
dec
jp
in
push
aaa
push
lcall
imul
xchg
xchg
cltd
notb
sub
call
aam
mov
scas
jmp
jmp
adc
xor
fimuls
sarb
fcmovbe
js
std
faddl
push
fstpt
push
jnp
jp
or
int
push
jl
or
jl
push
jge
shrb
adc
push
jbe
adc
fidivrl
jg
data16
dec
push
dec
repnz
repnz
jae
pop
fidivrl
cld
aaa
fbld
mov
jnp
jge
hlt
in
add
int3
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outsl
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
addl
adc
xchg
in
orb
jg
and
xchg
push
sbb
out
push
sub
iret
out
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
movsb
addr16
orl
mov
icebp
idiv
lcall
push
faddl
rolb
push
and
lahf
inc
push
int3
decl
pop
jle
mov
fidivrl
arpl
clc
jbe
fidivs
jmp
mov
push
pop
push
pop
nop
jbe
nop
push
pop
or
and
mov
mov
push
int
push
jns
or
dec
fmuls
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
add
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
push
test
or
iret
sbb
push
mov
add
lahf
aam
jp
stc
inc
or
xlat
mov
push
cmovno
stos
push
jbe
cmp
dec
int
aam
add
mov
or
or
call
inc
insb
pop
jg
adc
lret
movsl
push
add
mov
and
adc
adc
adc
sbb
jae
leave
cmp
mov
push
sbb
out
into
add
push
sbb
push
or
in
frstor
or
inc
or
or
sub
sbb
push
add
adc
nop
push
push
adc
pop
adc
sahf
and
movb
jecxz
sbbl
inc
icebp
inc
push
gs
jo
loop
or
push
rcrb
ret
push
adc
cmp
dec
dec
add
inc
mov
scas
add
jae
sahf
and
loopne
xchg
and
xchg
mov
test
add
movsb
xchg
inc
jmp
lahf
jo
das
push
sbb
add
imul
mov
or
les
xchg
scas
add
mov
and
adc
push
add
add
and
les
inc
inc
mov
adc
or
movsl
adc
or
add
add
insl
aad
adc
icebp
faddl
insl
jnp
jne
popa
shlb
xor
add
into
mov
sbb
addr16
adc
mov
dec
inc
add
or
add
and
adc
mov
mov
adc
les
pop
imul
test
add
and
pop
inc
cmp
pop
mov
xor
and
mov
jno
outsl
shrb
or
xor
push
outsb
dec
push
outsl
loop
es
push
pop
adc
mov
sarb
fwait
ljmp
pop
pop
testb
incl
sub
adc
mov
add
add
insb
jne
addr16
and
in
xchg
test
popf
and
aad
add
add
pop
sbb
lea
dec
sbb
cmp
imul
push
dec
sbb
xchg
pop
jno
movb
add
fiaddl
add
pop
push
jne
cmp
mov
pop
cmpb
inc
je
lds
sbb
add
push
or
or
sbb
das
negb
lret
es
je
dec
shr
push
dec
in
xchg
push
and
sbb
insb
xor
mov
xor
popa
jno
sub
xor
mov
jbe
dec
outsl
and
adc
jecxz
sbb
js
adc
pop
xorl
mov
dec
cmpb
in
pop
xor
scas
shlb
shll
add
lcall
pop
arpl
insl
or
sti
pop
xchg
fcmovbe
sbb
jg
mov
add
push
mov
arpl
cmp
mov
push
dec
mov
rcl
add
add
subl
shlb
sub
push
jmp
add
in
jae
xor
fists
lock
lods
popa
mov
mov
test
add
out
sub
jae
inc
imul
cmp
jge
push
xchg
cmc
test
jo
add
inc
inc
push
inc
adc
hlt
test
lcall
push
jne
inc
xchg
sbb
or
add
cmp
inc
dec
adc
fldcw
mov
js
shl
mov
shlb
arpl
dec
or
sarb
adc
sub
leave
pop
adc
or
dec
add
add
inc
aad
adc
xor
inc
rcrl
outsl
imull
and
imul
insl
push
pop
imul
mov
daa
test
cmp
adcl
dec
shll
cmp
pop
fidivl
enter
cmp
push
ds
mov
jb
pop
inc
dec
inc
insb
cs
adc
pop
int3
rcpps
jb
jb
mov
inc
sub
mov
mov
dec
inc
imul
mov
mov
pop
mov
rcr
mov
ja
dec
adc
insb
sahf
daa
push
fs
sub
popa
das
push
outsl
jo
jb
fldt
add
mov
clc
addb
mov
stos
dec
and
dec
rcrl
orb
js
hlt
add
adc
push
sbb
push
les
out
imul
mov
jb
xor
sbb
pop
xor
mov
adc
mov
inc
jne
outsb
inc
sbb
cmpsb
loope
pop
pop
int
fsubrs
pop
inc
je
mov
dec
outsb
dec
addb
das
push
sub
xor
loop
mov
mov
pop
add
add
sbb
mov
xor
lcall
inc
lcall
push
adc
imul
push
shrl
es
cmp
sub
inc
filds
mov
xchg
add
fisubrl
pop
imul
outsb
and
shlb
jo
sbb
or
fiadds
or
xor
sbb
insl
ret
sahf
jo
sahf
imul
jg
sub
sbb
pop
test
sub
pop
jmp
adc
adc
popa
add
sbb
adc
pop
xchg
scas
add
cmp
movl
inc
sbb
add
push
or
jge
jl
popf
xchg
and
jno
les
out
add
and
jne
mov
dec
mov
mov
fs
push
les
push
jge
ret
ret
pushf
xor
xor
and
ret
xchg
xchg
push
dec
sbb
pop
pop
jbe
insb
sub
or
inc
xor
mov
dec
pop
lret
inc
lock
sub
jns
mov
ret
and
js
pop
push
or
cwtl
xlat
adc
add
fwait
adc
push
jg
pop
mov
mov
flds
or
xor
and
mov
adc
sbb
mov
outsl
and
cmp
jbe
mov
mov
lods
mov
test
cmpsl
adc
in
and
cmp
add
mov
outsb
aad
insl
dec
or
shll
push
or
sub
inc
dec
test
sub
adc
push
in
inc
push
arpl
test
int3
and
pop
push
mov
outsb
fiadds
aaa
cwtl
jb
inc
addr16
sub
inc
push
mov
nop
fs
mov
cmp
jns
sbb
dec
and
jp
in
inc
cmp
push
pop
mov
and
push
xchg
lods
jmp
mov
push
fdivs
add
rcrl
rclb
dec
mov
aas
insl
inc
sub
bound
xchg
mov
nop
shrb
add
jnp
pop
mov
add
push
adc
repz
mov
dec
mov
sbb
add
sub
ss
mov
sbb
pop
push
or
mov
jbe
mov
pop
cltd
mov
cmp
out
inc
test
adc
dec
ja
imul
shll
add
aaa
test
shrb
sub
sub
in
inc
rolb
testl
dec
movsl
dec
jmp
push
push
or
inc
and
jnp
ljmp
cmp
or
sbb
add
add
and
sub
imul
cmp
push
and
adc
add
push
add
push
or
or
cmc
mov
iret
add
adc
mov
sbb
sub
fcmovnu
test
push
or
adc
inc
sub
or
pop
push
adc
push
inc
pop
adc
sbb
push
push
inc
push
sub
push
push
inc
sbb
sbb
cs
or
xor
std
insl
test
lea
bndldx
jg
std
sti
add
xor
sbb
push
add
add
decl
sbb
adc
cmp
push
sbb
add
and
insb
outsl
add
pop
and
cs
or
push
or
sbb
sbb
or
add
adc
ss
sbb
subps
jle
std
mov
pop
sbb
push
sub
or
and
sbb
or
pop
sub
inc
sbb
add
sub
sbb
lods
add
sbb
adc
and
mov
hlt
and
xor
sbbb
push
and
daa
push
or
fildll
sbb
or
or
add
dec
mov
out
or
push
cmp
and
sub
mov
out
sub
aas
and
pop
pusha
mov
sti
in
sub
jae
or
or
nopl
idiv
pop
setbe
cmp
subb
jecxz
push
or
daa
add
push
xor
xor
or
cmp
daa
aas
sub
stos
pushl
sub
or
cmp
es
xor
dec
sbb
incl
bswap
add
or
das
adc
adc
add
or
push
lods
adc
adc
incl
inc
decl
push
push
or
pop
aaa
adc
and
adc
daa
adc
or
xor
push
sbb
and
es
mov
xchg
daa
cmp
sbb
and
or
push
cld
jmp
or
add
mov
and
or
cmp
fdivp
lcall
adc
or
pop
adc
pop
and
or
or
jb
adc
pop
mov
pop
sub
sub
sub
jg
jno
rorl
lock
ds
shll
repnz
inc
sbb
sub
lock
das
test
add
mov
lock
or
dec
sub
mov
ret
push
push
push
adc
add
adc
rcll
or
cmp
sub
push
or
bound
jo
or
orb
or
dec
rdpmc
pop
and
or
push
call
pop
xchg
jb
xor
cmp
adc
sub
xor
jp
outsl
jg
cmp
adc
sub
lock
add
cmp
incl
adc
lock
sbb
add
add
lock
add
cmp
xor
push
or
adc
mov
unpckhps
sbb
cmp
or
push
aaa
mov
push
xor
mov
outsl
dec
adc
popa
lds
inc
lea
sub
fisttpl
pop
cmc
fwait
mov
movsl
push
sub
outsb
add
push
mov
pop
adc
fdiv
decl
dec
mov
adc
xor
fidivrl
aaa
testb
add
push
push
and
inc
sbb
adc
call
stos
sbb
push
inc
mov
add
push
push
decl
pop
cmp
or
mov
add
cmpsl
or
dec
inc
outsb
fadd
rcrl
adc
cmpsl
bound
adc
outsl
jg
outsl
clc
mov
clc
add
insl
fmull
and
xor
push
or
lcall
mov
sahf
adc
adc
push
and
push
adc
adc
call
adc
stos
mov
ds
adc
and
mov
fists
xchg
mov
or
or
call
mov
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
and
lock
add
lahf
bound
pop
adc
inc
cli
call
ds
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
mov
mov
inc
pop
sbb
cmp
adc
xor
xor
daa
inc
sbb
jg
sbb
push
push
sbb
sbb
adc
aaa
and
or
aaa
push
sbb
clc
and
xor
adc
hlt
cwtl
or
adc
cmp
dec
jnp
sbb
fdivr
jne
and
adc
arpl
sub
sbb
cwtl
mov
add
cs
jg
sub
inc
push
cmp
dec
add
scas
dec
dec
push
mov
sub
adc
or
fistps
and
adc
xor
push
pop
pop
and
push
std
incl
stc
add
sub
add
inc
jg
adc
inc
push
mov
stos
ljmp
inc
rolb
pop
jno
and
and
clc
mov
cmpl
sub
outsl
or
jp
sbb
cmp
sub
or
sbb
cwtl
jle
adc
push
inc
cmp
mov
daa
insb
and
xor
and
add
push
or
mov
aaa
push
xor
sub
or
and
fsubrl
lods
mov
or
xor
and
mov
movsb
push
xor
adc
dec
inc
and
jg
insb
push
and
sbb
and
pop
ud2
mov
lret
in
mulps
pop
cs
push
cmp
adc
ljmp
sub
adc
push
xor
cmpsb
mov
push
jne
mov
sbb
daa
inc
adc
push
or
sub
sub
add
mov
pop
add
add
inc
and
inc
outsl
clc
mov
and
movsl
or
lock
sar
push
sti
add
sbb
sbb
dec
add
loopne
jae
sub
call
adc
fisubs
sub
stos
sub
push
add
inc
push
sbb
adc
and
rcr
mov
pop
or
adc
daa
pop
adc
cld
lret
adc
adc
fcomip
or
dec
or
inc
push
and
push
lcall
add
fs
xchg
daa
sbbb
decl
ds
insb
sbb
inc
inc
jg
popf
and
fistpl
imul
aaa
loope
decl
xor
cmp
test
or
testl
and
sbb
sbb
add
adc
pop
sbb
add
lock
add
sbb
mov
popf
pushf
sbb
nopl
sbb
cmp
add
sbb
sub
or
cmp
bound
add
lock
or
or
dec
sub
sub
xor
push
or
push
jl
lcall
adc
cmp
inc
inc
push
sbb
add
pusha
data16
psrad
ret
push
js
mov
or
and
aas
jg
mov
into
jae
dec
aas
scas
xor
xor
sbb
push
push
fdivr
pop
add
push
push
pop
push
sbb
sbb
mov
or
es
aas
enter
ljmp
pop
sbb
sbb
sub
adc
lock
mov
lock
add
add
pop
or
add
jl
add
xor
sbbb
sbb
aaa
cmp
sti
mov
pop
pop
or
and
lcall
push
sbb
call
cmp
unpcklps
cmp
push
sub
or
and
inc
or
ret
mov
push
or
adc
or
or
fbld
or
sbb
xor
aas
adc
push
push
cld
push
lcall
sub
adc
pop
sbb
pop
xor
and
fmuls
adc
ljmp
jbe
insl
sbb
outsb
jo
ljmp
cld
sub
out
xchg
pop
sbb
leave
add
movlps
fidivrs
into
add
inc
add
jb
in
ja
pop
sub
aaa
outsl
and
push
dec
push
cs
fs
lahf
shll
orl
or
mov
xor
add
outsl
divb
lock
lock
push
and
add
push
cmpl
or
or
movntps
push
pop
adc
adc
push
mov
adc
ret
or
jne
sub
adc
in
incl
sub
sub
sbb
inc
push
push
inc
or
mov
cmp
and
das
adc
sub
jmp
pop
pop
jb
or
or
push
cs
sub
decl
mov
or
or
or
adc
pop
daa
cmpsl
decl
fimull
or
add
and
pop
push
xchg
movsl
adc
pop
sub
pusha
outsl
js
jmp
or
test
pop
xor
ljmp
jg
xor
or
adc
clc
push
sbb
cld
adc
add
adc
aas
push
cld
call
subb
lock
add
and
wbinvd
push
xor
cwtl
push
dec
xor
fildl
subl
scas
xor
sbb
cpuid
in
mov
cld
pop
or
sbb
sub
inc
inc
inc
cmp
mov
adc
cmp
mov
xor
popa
pop
sbb
cli
outsl
push
add
repnz
dec
adc
mov
and
sbb
inc
cmp
pusha
insb
in
or
pop
xchg
ljmp
push
or
aaa
and
add
or
inc
dec
or
pop
ss
xor
add
cmovno
movsl
das
js
stos
or
jp
sbb
push
xor
lods
or
xor
inc
mov
or
add
or
push
das
xchg
cmp
ds
aas
push
mov
inc
pusha
push
incl
adc
cmp
loopne
inc
push
pop
dec
sbb
incl
and
pop
subb
pop
mov
jb
sbb
add
or
sbb
jo
std
jmp
mov
adc
es
and
or
pushl
xor
dec
and
sub
or
adc
sbb
pop
sub
data16
mov
pop
push
sbb
pop
lock
sbb
loop
pop
dec
adc
push
push
sub
push
cmp
add
repnz
sub
xchg
jbe
sti
ja
pop
and
mov
pop
and
add
adc
and
push
inc
inc
sub
das
sbb
dec
jle
pop
sbb
and
xor
cld
inc
jg
bswap
test
cmp
adc
femms
aaa
dec
adc
insl
ljmp
outsl
adc
push
add
cmp
and
outsl
mov
inc
sub
or
dec
pop
sub
xor
adc
loopne
sub
or
cmp
push
sbb
jle
adc
sbb
ret
adc
jg
fistpll
pop
adc
pop
adc
or
add
push
adc
mov
dec
rclb
pop
sub
lock
imul
sbb
push
adc
push
or
mov
and
in
jbe
and
add
xor
or
push
inc
xchg
or
or
add
adc
mov
and
cmp
cmp
jp
mov
or
inc
or
pop
arpl
inc
push
pusha
adc
jno
sbb
inc
fmuls
or
or
ds
insb
bnd
aaa
sub
mov
sbb
arpl
test
push
arpl
cmp
sbb
sbb
pop
lock
add
dec
cmp
adc
or
stc
outsb
js
sbb
inc
or
adc
andl
lcall
incb
adc
bound
pop
sbb
and
push
dec
fmuls
pop
ds
in
adc
or
dec
addr16
or
or
incl
xor
add
or
cmc
mov
mov
xor
cmp
aam
inc
or
or
or
and
adc
cli
add
ljmp
popa
push
das
or
and
add
inc
adc
sbb
inc
add
das
pop
popa
lahf
pop
sub
mov
adc
and
sbb
decl
and
pop
inc
adc
pop
icebp
or
sbb
sbb
and
cmp
incl
cmp
jo
cmp
orb
loop
popf
js
test
icebp
push
sbbb
aas
clc
add
sub
sbb
adc
dec
pop
and
mov
push
aaa
test
jg
adc
cmp
daa
inc
add
pop
adc
sbb
pop
and
call
out
imul
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
pop
or
jnp
adc
add
push
cmp
jb
sub
push
sbb
pop
add
lcall
sbb
dec
nop
subl
dec
add
outsl
dec
dec
sub
push
sub
sbb
fwait
lock
add
outsb
xor
pop
mov
pop
in
push
pop
cld
dec
and
sysexit
cmp
je
dec
mov
add
xor
out
es
nop
sbb
xor
adc
adc
pop
mov
add
mov
or
sbb
push
mov
pop
adc
pop
or
xor
mov
lock
outsb
les
push
pcmpgtw
or
lahf
add
jb
push
push
jo
pmaxsw
add
xchg
or
add
dec
sbb
mov
sub
adc
xor
js
pop
xchg
jbe
lock
jl
add
sbb
sbb
aam
es
pop
loope
push
sbb
scas
call
and
xor
add
fldl
mov
or
or
xchg
icebp
add
add
push
aaa
loope
or
and
or
lea
loopne
pop
add
sbb
lock
sbb
mov
inc
in
scas
push
pop
in
push
lock
lock
add
ss
jmp
pop
and
aad
lea
xchg
add
lret
add
dec
sub
adc
or
fcompl
lock
fdiv
sbb
mov
pop
pop
add
lock
js
xchg
cs
fimull
or
or
adc
push
test
or
push
adc
or
sbb
mov
xchg
or
or
cs
pop
push
dec
or
and
add
fcmove
sbb
loop
lock
sbb
push
or
add
cmp
pop
mov
jo,pn
adc
or
or
sbb
adc
dec
fwait
sbb
xor
outsl
pop
je
aam
pop
push
or
mov
sub
dec
dec
dec
push
ret
js,pn
push
xlat
into
or
cwtl
int3
add
or
adc
inc
pusha
jle
shlb
or
sub
sbb
jp
or
or
sbb
lahf
inc
sahf
sub
or
adc
loopne
xor
and
shll
and
sbb
adc
inc
xchg
or
cmp
pop
sub
popf
add
pop
aam
sbb
insl
subl
iret
clc
lock
push
es
lcall
sub
lock
js
adc
and
push
xorl
ds
inc
fnsave
adc
pop
icebp
lcall
je
adc
and
sbb
aas
cmp
jne
arpl
or
add
push
cmpsb
mov
cmpsb
inc
push
into
sub
push
mov
adc
and
add
mov
mov
into
sub
add
mov
or
cltd
shl
les
lock
add
arpl
adc
sbb
pop
sbb
adc
icebp
cmpsb
int
add
or
and
xor
dec
jbe
sbb
cmpsb
sahf
add
adc
adc
popa
xor
push
das
dec
or
bound
lock
sub
and
xor
add
add
incl
lcall
xchg
pop
mov
cmc
cmc
sub
popfw
ss
and
lock
fcoml
dec
dec
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
es
push
and
push
or
sub
push
popa
push
mov
push
inc
outsb
out
push
test
shlb
sbb
fistpll
cltd
lock
adc
adc
add
cld
roll
or
das
clc
fiadds
dec
lock
dec
or
push
xchg
mov
incb
mov
cwtl
push
mov
sbb
lock
push
inc
lock
add
or
adc
or
bound
pop
push
xor
mov
and
sbb
cs
sub
ss
cmp
or
add
add
ficomps
adc
adc
movsl
add
addl
xor
jmp
cmp
pop
mov
sbb
push
adc
inc
push
adc
and
inc
outsl
cli
xor
push
mov
and
adc
mov
les
in
dec
cmp
jg
das
add
lock
add
rcrb
jb
mov
mov
dec
arpl
cmp
add
es
mov
or
and
sbb
sbb
sbb
pop
std
ja
pusha
adc
cmp
push
mov
mov
push
sbb
and
das
inc
mov
cld
dec
inc
sbb
and
ss
xor
fucomi
fldenv
or
adc
cmp
inc
inc
fwait
xchg
lods
push
es
pop
sti
push
js
dec
inc
xor
ds
xor
inc
push
and
jg
or
dec
ret
sbb
cmp
das
je
jp
jle
fistpll
cmp
xor
fildl
cmp
dec
pop
pop
shl
xor
and
cmp
sub
push
ds
dec
xor
dec
xchg
dec
add
lcall
push
push
and
jl
xchg
cmp
movsl
xor
mov
fbstp
inc
inc
pop
lret
hlt
xor
aas
dec
jne
and
add
cmpsb
popa
jg
sub
push
jge
outsl
push
dec
mov
lock
add
sahf
mov
sub
xor
jo
cmp
and
inc
cmp
dec
cmp
push
and
dec
push
mov
push
inc
sub
xorl
lock
sbb
jnp
nop
dec
inc
add
mov
push
add
jge
cmc
fwait
push
push
sbb
xchg
lock
aaa
rclb
lods
mov
add
aam
lock
push
add
adc
loop
fldt
adc
cwtl
and
dec
push
dec
rclb
mov
mov
add
into
push
in
add
or
sub
sub
or
lods
push
jbe
sub
lock
rorb
push
push
adc
add
in
or
movaps
scas
pop
shll
lock
add
push
add
sub
test
les
aam
mov
add
lock
xchg
test
jo
mov
push
mov
add
mov
xchg
fcomps
or
or
sahf
or
sbb
decl
jp
sarl
movsb
xor
xchg
jmp
dec
subb
add
inc
and
sbb
or
mov
adc
sbb
out
insl
fists
adc
or
push
lods
movsl
pop
mov
fwait
movsl
mov
dec
lret
adc
and
adc
sub
sub
add
jne
mov
or
arpl
movsb
fcoms
sbb
add
push
mov
outsb
mov
add
jno
fwait
and
adc
and
sbbl
inc
sbb
lods
insl
dec
cmp
fisubl
sbb
mov
mov
mov
push
mov
les
stc
notb
xchg
iret
std
negl
xchg
or
xchg
shlb
inc
xor
inc
xor
add
pusha
int3
jo
adc
lods
mov
jl
sbb
sbb
add
or
divl
and
insb
pusha
adc
data16
xor
jge
ret
mov
adc
adc
out
mov
dec
or
add
add
or
add
mov
cmp
sub
adc
or
daa
cmp
jae
fwait
pop
stos
inc
or
jecxz
cmp
add
pop
sbb
in
or
mov
inc
pop
mov
sbb
sbb
fcomi
shlb
push
popf
les
and
scas
fildl
mov
add
sbb
roll
and
xor
mov
movsb
popa
lret
inc
xchg
jmp
mov
xchg
sysret
subl
push
add
and
mov
daa
inc
fistl
andb
cltd
lea
xor
insl
sub
xor
lods
bound
daa
pop
popa
je
mov
push
adc
and
out
inc
shrb
lea
fldt
adc
add
mov
or
rorl
adc
mov
outsl
and
xchg
lods
test
dec
push
add
push
xchg
aad
pop
pop
mov
jns
inc
mov
stos
or
aad
xor
mov
add
insl
sub
pop
movl
aam
stc
mov
sbb
xor
iret
arpl
lret
iret
add
js
xchg
fxch
lcall
cmpsb
pusha
inc
xchg
mov
push
adc
dec
add
sbb
sbb
jb
mov
inc
adc
fsubrs
insl
sbb
push
scas
jp
sbb
sub
mov
jecxz
sbb
fists
test
inc
mov
loopne
aaa
and
dec
xchg
add
xchg
repnz
mov
inc
sub
lock
fwait
adc
or
pop
mov
outsl
cmp
adc
sub
xlat
sub
inc
or
movsb
subb
lcall
and
scas
lahf
lock
add
adc
sbb
faddl
push
xor
inc
adc
pusha
ret
mov
fdivs
add
js
lds
out
add
insl
inc
das
jle
sub
xorb
add
xor
dec
add
in
mov
push
and
sub
sub
cmp
xor
sbb
mov
mov
push
or
or
addr16
sub
push
xor
pop
add
xor
xor
sub
xor
pop
and
and
stos
gs
and
inc
sbb
divl
enter
sub
push
sbb
xor
push
cmp
inc
sub
pop
push
jle
inc
cmp
adc
test
xchg
ss
add
rcr
testb
push
out
add
add
notl
adc
es
aas
jnp
pop
xor
push
inc
adc
or
push
sbb
stos
sub
fisubl
stc
add
add
mov
pushf
pop
mov
inc
pop
xchg
push
movsb
add
cmp
orl
pop
sbb
mov
add
loopne
push
fcomps
xchg
add
xchg
push
loopne
sbb
mov
nop
ljmp
jbe
sbb
xlat
out
push
fcomps
in
push
mov
pop
dec
xor
jns
sbb
dec
fidivs
jo
xchg
subl
xchg
and
cmpb
dec
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
