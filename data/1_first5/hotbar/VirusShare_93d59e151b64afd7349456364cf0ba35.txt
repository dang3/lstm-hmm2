divl
in
mov
mov
sarb
lea
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
xchg
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
xor
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
mov
or
push
add
fidivs
call
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
jge
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jl
sub
imul
mov
out
fistpll
adc
pushl
sbb
pop
pop
push
or
in
push
in
pop
push
sbb
in
xlat
cs
loop
mov
pop
in
adc
clc
loopne
and
dec
sbb
mulb
push
mov
aam
push
cwtl
mov
push
lock
clc
call
faddl
in
mov
push
push
jle
insl
ret
xor
sbb
push
push
lods
or
pop
pop
cmp
int
add
fdiv
fistpl
fisttpl
ret
add
sar
das
test
je
pop
add
pop
mov
inc
sarb
jp
in
loopne
rcr
dec
push
push
rolb
sbb
add
adc
mov
add
in
pusha
les
sbb
adcb
add
sub
rclb
in
push
call
jnp
pop
sub
sahf
or
testl
adc
sub
and
push
push
mov
add
push
sub
inc
mov
sub
xor
pop
sbb
mov
pop
out
imul
jmp
mov
push
inc
sbb
sahf
inc
dec
jb
mov
push
lock
and
jmp
add
mov
data16
test
xchg
pop
sbb
das
sti
jmp
andb
aad
jbe
jne
mov
push
inc
cmp
jae
lahf
ja
sub
sub
push
push
mov
add
and
out
call
and
jo
sub
pop
lret
rolb
jnp
jb
inc
aad
cmp
movl
sbb
test
aam
cmp
enter
jbe
push
xor
mov
je
notl
in
push
sbb
pop
push
ds
outsb
nop
and
out
add
addl
mov
pop
add
xor
js
push
mov
and
or
loopw
and
shl
push
add
inc
pop
or
lret
xor
push
mov
inc
add
push
sub
push
addr16
div
pop
adc
or
push
push
add
adc
add
add
loopne
orl
pop
xchg
dec
fisubl
cmp
je
or
push
in
cmp
insl
mov
jns
and
repz
loope
je
push
mov
pusha
pop
xor
filds
cmp
mov
push
jmp
fildl
inc
mov
int3
push
mov
lahf
fstps
or
dec
push
sub
jmp
push
fs
sbb
pavgb
and
loopne
adc
fcompl
shlb
adc
push
mov
inc
sub
js
add
fidivs
push
icebp
xor
mov
sbb
sub
adc
push
or
push
iret
dec
push
in
enter
adc
push
enter
and
sbb
mov
push
add
adc
nop
sbbl
xchg
push
xchg
add
fs
push
sub
pop
push
push
push
je
pop
sbb
rcll
mov
mov
push
inc
in
jnp
push
js
sbb
mov
adc
xchg
cmp
fbstp
push
mov
and
mov
test
mov
in
mov
or
ret
test
ret
push
loope
mov
pop
cld
int
mov
pop
mov
lea
or
push
push
clc
mov
cmpsb
call
je
ret
fwait
imul
mov
add
or
imul
lock
push
push
mov
jl
outsb
test
movsl
cmp
xor
cmp
jge
mov
sub
cli
rcll
inc
outsb
mov
ret
out
cltd
mov
push
mov
jl
or
out
icebp
stc
mov
mov
mov
pusha
rclb
mov
daa
pop
pushf
inc
or
iret
std
add
push
mov
hlt
je
loopne
pop
mov
lea
lahf
jecxz
in
mov
aaa
je
nop
sub
cmp
icebp
add
sbb
jno
insl
lea
jno
add
les
insb
mov
insb
das
add
cwtl
pop
fsubp
mov
inc
or
mov
rorl
or
add
insl
sbb
mov
mov
mov
xchg
cmp
int3
mov
and
aad
cmp
pop
cmc
push
inc
bound
stc
or
mov
or
mov
xchg
iret
mov
sbb
sti
push
cwtl
bound
xor
data16
ret
push
mov
dec
gs
jl
je
ficoml
insl
jle
mov
xor
mov
adc
adc
push
lock
cmp
jne
pop
mov
sub
fs
test
into
lea
je
sub
dec
pushl
pop
in
ficoms
xor
subl
mov
int3
pop
xlat
test
je
mov
mov
push
push
scas
aad
hlt
push
mov
cmp
xchg
mov
fisttpl
mov
or
push
idivl
filds
call
mov
test
jne
fs
inc
cmp
jl
jmp
pop
push
or
call
in
sahf
mov
push
pop
push
pop
jmp
sub
sub
cmp
adc
pop
ret
add
cwtl
test
mov
mov
jns
aad
push
jne
lea
sbb
loopne
and
aad
mov
adc
pusha
ret
dec
jl
push
ljmp
incl
add
add
push
dec
push
andl
push
scas
or
add
jl
add
xchg
lret
cmp
pusha
adc
pusha
and
pop
mov
pop
pop
ret
push
data16
push
shl
or
outsl
addr16
push
push
dec
int3
pop
mov
and
rcr
loop
movb
push
sub
push
cs
fists
or
aam
push
mov
adc
imul
pop
cmp
mov
jge
subl
jmp
inc
or
test
jno
mov
fdivrs
adc
sbb
dec
push
pop
lea
push
mov
imul
add
jmp
adc
push
push
add
adc
dec
or
pop
ja
mov
and
leave
ret
icebp
outsl
mov
dec
out
idivb
cmp
je
or
jae
push
clc
std
cli
out
mov
dec
mov
jmp
dec
inc
pop
adcb
pop
xchg
pop
stc
jne
mov
jmp
in
faddl
push
xchg
in
cmpl
jl
mov
inc
repz
push
ja
lea
jle
xorb
ud0
cmp
jmp
xchg
add
fcomps
popaw
fsubl
lock
lock
pop
pop
arpl
adc
add
enter
push
jo
dec
clc
nop
test
je
add
cwtl
rcl
mov
mov
push
movsb
mov
and
divb
imul
push
push
push
dec
mov
cmpsl
xchg
sub
lret
ss
push
push
outsl
pop
and
add
stos
push
and
pop
call
mov
loopne
je
test
and
adc
cld
sbb
inc
sub
add
js
mov
lcall
push
cmpl
sarl
pop
cmp
jg
inc
mov
fs
cmp
je
cmpl
pop
mov
cmp
jne
and
out
sbb
imul
sbbl
jl
pop
jmp
fmuls
mov
pop
cmp
loop
pop
cmp
leave
push
inc
sub
pushf
mov
ss
jge
xlat
fsts
inc
aaa
fidivrl
inc
clc
jecxz
mov
jg
inc
fimuls
movb
push
mov
pushf
or
ja
fistps
pusha
movsl
mov
fwait
inc
or
shlb
adc
ret
imul
ds
cmc
xchg
sbb
mov
fndisi(8087
push
shlb
ret
das
xor
mov
mov
loopne
pop
xchg
cmpl
adc
cli
push
das
mov
pop
gs
push
call
adc
mov
xor
push
jae
icebp
push
lds
ss
pop
ja
pop
sbb
mov
cmp
ds
push
mov
ljmp
mov
jb
repz
mov
testb
or
pop
xor
inc
add
clc
mov
mov
insb
add
and
cli
loop
mov
sbb
cmpl
jle
push
mov
pop
outsb
daa
sub
and
add
ret
cmpsb
scas
jle
ret
shlb
push
out
cmp
or
lea
inc
ja
adc
xchg
push
jbe
mov
and
pop
lods
inc
stos
add
xor
add
add
or
adc
lock
inc
adc
pop
push
lock
mov
mov
cmpsb
fwait
imul
or
dec
jle
loopne
or
pop
push
or
sub
fdiv
and
mov
int
iret
ret
mov
popf
loop
mov
jge
sarb
leave
rcl
sarb
xlat
xlat
mov
add
mov
cmp
rorb
xor
add
lea
daa
adc
add
add
push
fisubrl
pop
mov
xchg
jmp
decl
push
imul
or
out
inc
jbe
lea
push
mov
pop
pop
jmp
dec
clc
push
mov
mov
iret
fs
movl
jnp
pop
push
dec
adc
sbb
adc
fsin
jp
ret
pop
std
idivb
dec
cltd
pusha
push
mov
dec
js
mov
jmp
and
divb
out
push
xor
inc
stos
enter
add
cmpsb
jns
sbb
pop
and
sbb
aam
mov
and
add
pop
or
sbb
jnp
jne
mov
inc
and
mov
ret
xor
add
or
or
jae
or
ror
mov
icebp
or
rcl
push
push
int3
inc
mov
leave
inc
adc
cltd
test
adc
sbb
ret
push
jbe
jbe
and
and
sbb
das
test
sub
sbb
lgdtl
add
sub
js
les
fcmovne
adc
pop
data16
or
loop
imul
or
mov
imul
pop
cmp
mov
rolb
dec
idivb
cmp
ja
xchg
or
sti
fistl
or
je
cmp
popf
inc
int
sti
cmpl
push
cmp
mov
fs
mov
push
cltd
pop
testl
shll
jle
push
jb
mov
adcb
push
pop
mov
js
xchg
mov
adc
pop
sub
add
jne
hlt
fistl
jbe
call
push
cmp
mov
je
and
jmp
sub
add
push
pop
dec
je
dec
adc
in
jge
adc
push
arpl
jecxz
xor
pop
shlb
jmp
cmp
lahf
mov
or
dec
ret
ret
int
jp
jecxz
jp
mov
pop
jne
mov
rolb
jg
inc
stc
or
aas
add
or
inc
add
add
mov
cmc
test
aad
adc
into
sub
mov
adc
adc
push
mov
or
lock
movzbl
add
add
std
mov
cmp
jle
push
loopne
push
or
xor
push
push
sub
jo
js
sarl
in
in
nop
out
dec
daa
adc
xchg
fcmovnbe
jmp
mov
adc
jmp
cmp
je
cmp
sbb
imul
jmp
inc
sbb
mov
adc
adc
xor
dec
fstpl
jbe
cmp
jmp
sbb
dec
xchg
jmp
and
lds
data16
sbb
xchg
fsubrl
push
inc
push
push
sub
jns
cmpsl
data16
lahf
cld
add
mov
push
mov
mov
ljmp
cmp
js,pn
sti
cs
push
push
pusha
aaa
sbb
imul
dec
adc
and
sahf
lahf
lret
aaa
in
or
clc
movb
rcrb
dec
push
or
sbb
lret
scas
add
pop
pop
dec
push
call
outsl
and
test
push
pop
push
lea
push
sbbl
xchg
lcall
cmp
out
jle
xchg
push
enter
dec
aam
les
scas
pop
or
lret
and
mov
jge
mov
dec
adc
movl
push
popf
mov
insb
push
and
adcb
xor
mov
jo
and
leave
dec
mov
call
leave
lock
and
fbstp
ja
mov
sub
jo
cmpsl
jmp
nop
push
test
xchg
xor
sbb
and
sub
xchg
sbb
loopne
test
adc
das
enter
jle
add
add
mov
xchg
arpl
sub
arpl
in
ds
inc
mov
adc
xrelease
js
adc
or
and
mov
mov
mov
test
dec
dec
inc
outsb
pop
push
rclb
not
and
mov
jmp
or
loopne
mov
test
insl
jnp
shl
insb
pop
pop
push
push
cmp
xchg
adc
nop
jnp
push
push
push
mov
inc
popf
iret
test
xchg
or
jg
test
pushf
push
mov
dec
xor
mov
and
sahf
ss
es
pop
pop
scas
push
mov
pop
lock
je
mov
lret
mov
call
in
lea
stc
test
cmpl
add
mov
sbb
ds
push
in
and
fs
dec
pusha
adc
lods
loopne
cld
outsb
xor
pushf
jecxz
daa
jp
mov
push
and
push
xor
xor
in
inc
lock
mov
adc
dec
adc
mov
mov
dec
lea
or
outsl
insl
sti
iret
test
pop
cld
je
dec
call
cltd
sub
rcl
xor
fprem
add
bound
in
dec
in
fstpt
in
jmp
mov
add
mov
inc
adc
mov
cmp
pop
leave
xor
jp
xor
mov
pop
add
ret
sbb
dec
push
pop
sub
push
mov
add
jno
loop
or
jo
pop
push
and
cltd
fisubrs
inc
sub
push
push
fiadds
sbb
dec
mov
fists
inc
cmpsl
pop
loop
lods
dec
mov
sbb
cltd
sub
and
insb
adc
call
and
inc
shll
xor
inc
cmp
mov
xor
dec
or
push
fs
add
insb
cwtl
adcb
sub
or
push
and
mov
dec
maskmovq
sbb
and
test
aas
mov
sbb
popf
adc
loop
push
je
ljmp
cmpsb
fbstp
push
and
jle
push
clc
sbb
jge
je
push
mov
mov
lock
pushl
and
push
repnz
or
mov
and
loopne
push
mov
clc
fistps
mov
mov
jmp
cmpl
je
cmpl
mov
or
in
dec
je
or
cmp
xchg
sub
mov
cmp
sbb
jg
jmp
mov
inc
insl
pop
push
cmpl
push
pop
cli
leave
cld
or
dec
lock
mov
push
rcll
scas
clc
lds
or
lcall
add
imulb
or
mov
dec
or
cltd
pop
cmc
in
cmp
hlt
movb
add
lock
xchg
or
psubusw
aad
adcb
sbb
sub
scas
loope
dec
stc
insl
mov
mov
ret
mov
shrb
xchg
rolb
add
pop
fs
cmpsb
repz
test
test
fldl
jbe
fs
mov
and
popf
push
jne
xor
dec
xor
push
mov
test
and
and
pop
lea
inc
dec
sub
loope
push
jle
outsb
pop
sbb
mov
adc
cmp
gs
cmp
fldcw
push
shlb
add
or
and
push
sub
shll
or
nop
or
movl
jns
lret
dec
loope
adcl
je
xor
nop
add
daa
push
cs
lret
cmp
sub
pushf
xor
ds
je
cmp
or
dec
add
mov
pop
sbb
loope
and
sub
rcrl
daa
addb
xor
cmpl
pop
push
and
inc
mov
lcall
ret
mov
lret
out
faddl
sub
pop
lcall
std
or
xor
fldl
fmull
data16
push
sbb
push
xor
es
push
cmp
add
sbb
scas
cmpb
leave
lock
inc
inc
add
movsl
pusha
es
pop
mov
xor
or
ret
cmp
rorb
sub
pushf
push
or
ficoms
add
shll
pushf
pop
popa
in
and
scas
push
lods
arpl
in
lea
dec
push
add
insl
stos
iret
jne
push
addl
faddl
cmp
into
dec
adc
xlat
stos
fcoms
or
and
sbb
mov
or
lar
add
js
ret
roll
daa
jae
das
nop
xchg
and
adc
sbb
dec
push
inc
mov
mov
sbb
addb
push
adc
pop
dec
test
xchg
ficomps
cld
jne
push
std
je
cmpb
mov
je
cwtl
pop
adc
dec
sbb
xchg
pop
nop
inc
sub
cs
int3
cs
sub
push
push
cmp
cmp
dec
testl
loope
dec
jmp
nop
push
pop
je
push
inc
pop
movsl
imul
xor
cmpb
ret
loopne
push
adcb
in
or
adc
xor
xor
jo
jno
outsb
movsl
xor
sbb
cmp
xchg
mov
xor
or
rol
dec
call
inc
mov
cmp
and
imul
inc
mov
iret
rolb
mov
mov
das
out
add
fstps
int
lds
or
cltd
mov
jmp
ret
or
js
or
fsubrs
adc
jl
dec
inc
cmp
out
in
cmpsb
lock
adc
outsl
mov
mov
fcomip
sti
push
pop
push
mov
dec
jmp
xor
idivl
mov
stc
jle
mov
fwait
inc
jp
mov
add
mov
cmp
push
jbe
xor
pop
jmp
fldl
or
dec
insb
cmpsl
int
mov
movsl
pop
inc
in
stos
inc
lods
xchg
jge
sbbl
out
insl
cmp
fldz
adc
cmpsl
adc
pop
pusha
push
ljmp
hlt
std
xchg
sub
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
dec
push
mull
pusha
jl
out
mov
jg
fs
xchg
scas
jnp
or
xchg
arpl
mov
test
or
fsubrs
jbe
lahf
xor
imul
sbb
mov
add
clc
add
pop
mov
pop
xchg
imul
cmp
or
jmp
cld
pop
idivl
jge
jmp
mov
pop
hlt
fildl
out
stos
mov
sarb
faddl
sbb
sub
adc
xor
mov
fdivrp
mov
mov
mov
sbb
mov
ja
or
cmp
pushf
movsl
push
addl
mov
bound
or
clc
fidivl
jmp
outsb
lret
and
movsl
mov
push
mov
addr16
testb
jl
dec
jmp
loop
or
fmull
test
lea
push
or
add
jl,pt
cld
push
and
clc
mov
pop
loopne
sbb
mov
or
mov
pop
push
lahf
je
je
int
dec
lret
je
or
jb
in
inc
pop
and
rcll
sbb
or
js
cmpsl
jle
add
js
inc
sti
adc
jno
xchg
push
test
test
test
mov
add
arpl
clc
test
call
pusha
lret
cwtl
sub
cld
adc
fwait
cmp
mov
popa
or
aas
xchg
dec
push
mov
jne
mov
xchg
clc
or
pushl
decb
jmp
leave
push
leave
add
lds
mov
pop
push
fisttps
clc
push
cld
xor
cmp
push
int
maskmovq
testl
pop
dec
or
inc
mov
push
jns
pop
xor
sub
dec
mov
sub
mov
push
dec
add
push
test
or
or
mov
scas
xchg
aas
flds
push
pop
enter
add
ret
push
ja
loopne
push
dec
ja
pop
push
sub
inc
sbb
add
cltd
push
and
jle
leave
sbb
mov
loopne
cmp
pop
adc
fs
lock
fmuls
pop
adc
pushf
cmovnp
mov
jecxz
push
jg
ret
mov
lock
or
inc
adc
push
mov
and
cmp
or
and
add
inc
and
jno
in
jnp
adc
xor
xor
xchg
push
push
loopne
test
mov
dec
ret
mov
pop
cmp
push
lock
sub
clc
setb
test
jne
mov
mov
lock
sar
xor
and
adc
mov
lea
push
rcll
xor
sti
out
mov
sub
pop
jmp
jmp
mov
mov
xchg
xorb
hlt
mov
xchg
adc
fwait
in
adc
fs
cmpsb
xchg
mov
lds
sbb
shrl
add
das
push
ret
or
pop
hlt
xor
imull
fsubl
pop
push
add
xor
lret
scas
into
push
jmp
out
sbb
les
sub
cli
cs
add
ret
push
ret
pop
xor
push
mov
pop
mov
jg
sub
clc
or
and
push
je
and
je
ja
test
lahf
dec
mov
in
test
pop
or
and
dec
lret
iret
xchg
dec
ja
inc
leave
rolb
shlb
in
cmp
xchg
adc
movl
push
mov
or
movl
les
dec
mov
fwait
or
pop
jb
loopne
rclb
pop
bound
mov
mov
scas
rcrb
xchg
fcompl
lods
sub
xor
add
pop
shlb
sub
lretw
pop
jne
push
in
ds
pop
inc
jp
setne
int
push
decb
test
add
lock
sub
inc
jne
push
fs
icebp
sbb
push
pop
int3
or
ja
rcll
repnz
ja
jns
mov
sbb
inc
or
pop
mov
xor
add
jge
and
sub
gs
faddl
mov
mov
xchg
jl
push
push
xor
arpl
test
mov
sub
or
mov
or
rorb
push
add
adc
sbb
inc
or
notb
mov
repz
loopne
push
adc
fsubrl
dec
add
sub
jb
inc
fdivs
dec
or
push
sub
ds
mov
inc
insl
mov
push
cmpsl
call
dec
jl
jmp
push
mov
repz
repnz
mov
mov
call
or
jl
enter
punpckhdq
pop
dec
shrl
xchg
dec
jle
cwtl
nop
xchg
jecxz
pop
push
fdiv
je
roll
or
addr16
or
xor
sub
mov
push
stos
inc
repz
jbe
dec
jp
cwtl
inc
clc
fneni(8087
mov
add
or
and
jne
adc
mov
dec
sahf
xlat
test
lds
xor
add
stos
xchg
add
stc
adc
push
lea
dec
gs
or
mov
xchg
xchg
addl
inc
or
or
aad
add
sbb
fildl
jb
js
mov
jne
push
mov
or
orl
push
stos
enter
push
dec
dec
pop
inc
sbb
cwtl
movsl
and
lcall
popf
inc
arpl
adc
js
je
in
pop
ret
in
sti
mov
sub
mov
pop
movl
add
sub
nop
out
sbb
nop
test
inc
adc
test
mov
out
call
mov
sbbb
and
add
mov
shll
jno
xlat
push
out
or
xchg
xchg
adc
mov
push
mov
int
js
and
push
jl
mov
and
add
je
sbb
les
sub
mov
fdivl
loop
add
sub
inc
adc
adc
jge
jl
bound
sbb
in
adc
adcb
sbb
push
in
jle
xchg
mov
push
int3
mov
mov
push
mov
jmp
mov
jne
jnp
xor
aam
adc
scas
adc
add
pop
fdivrl
test
shlb
gs
sub
sarb
or
dec
mov
or
je
shl
add
sbb
pop
enter
dec
mov
push
push
jo
mov
lods
cmpsb
inc
inc
mov
out
and
add
push
sbb
xchg
push
adc
movb
fwait
inc
pop
mov
pop
bnd
xor
sub
stos
cmp
sbb
das
and
mov
cmpsl
pop
sbb
cmp
add
jbe
lods
popf
xor
pusha
or
addl
adc
add
jae
pop
push
mov
in
or
xor
xor
mov
mov
and
subb
mov
cmpsl
mov
mov
add
je
cmp
and
jne
sub
aad
pop
push
pop
mov
mov
or
pop
mov
aas
fsubr
mov
push
inc
or
add
mov
js
xlat
mov
push
push
add
loopne
stc
sbb
dec
inc
or
push
lcall
push
andl
mov
das
ljmp
add
adc
idivb
jo
setg
lcall
jne
push
loopne
add
sub
push
inc
rcrb
add
jecxz
push
xchg
in
push
fucomi
cltd
js
shlb
test
xchg
sbb
inc
sti
push
sub
mov
add
jl
ljmp
mov
scas
scas
rol
scas
or
bound
rcl
cmpb
xchg
hlt
into
or
pop
flds
ret
adc
pop
out
push
sbb
push
push
roll
aas
and
repz
pop
push
mov
push
dec
addr16
add
and
adc
xchg
and
cmp
cmp
sbb
mov
mov
cmp
jb
xor
pop
leave
xlat
das
sbb
jp
or
cmp
cmp
and
sub
add
loop
inc
and
mov
insb
push
rorb
addl
clc
sbb
sbbl
xor
adc
stos
mov
add
sti
cli
arpl
fnstcw
sub
mov
sti
pop
ljmp
rorb
jle
add
popa
or
sbb
add
jo
fdivrp
and
sldt
and
inc
pop
xor
inc
sahf
clts
push
lods
shlb
sub
xor
mov
or
sbb
nop
into
jmp
fdivr
sbbb
repnz
pop
stos
sbb
add
sub
in
les
testl
mov
dec
push
xchg
xchg
jl
xor
dec
pop
or
test
push
xor
fwait
xor
xor
xchg
sbb
arpl
inc
ds
clc
iret
insl
xchg
or
jne
ds
subb
push
add
mov
dec
or
pop
and
inc
adc
or
rclb
cmp
push
into
mov
jne
in
out
xor
xor
shrl
pop
je
mov
jmp
xor
lret
int
sbb
popf
popf
mov
test
or
insl
scas
lret
push
adc
mov
dec
and
outsl
adc
push
pop
movl
lret
xchg
enter
sub
les
ss
add
sub
push
mov
ss
or
fcmovnbe
dec
dec
mov
lock
outsl
aad
inc
js
jo
out
xchg
aam
dec
pop
icebp
inc
push
xor
lcall
pop
mov
out
and
jl
mov
inc
nop
xchg
mov
jbe
mov
push
sbb
dec
jmp
xchg
push
mov
mov
jp
dec
les
pop
mov
pop
mov
cli
insl
out
mov
mov
jmp
mov
test
jg
mov
push
pop
add
lret
sub
mov
das
loopne
adc
fisttpll
arpl
sbb
scas
sbb
push
xor
jne
orl
loopne
push
lcall
imul
testb
pand
dec
or
and
mov
int3
cmp
xchg
pop
dec
jnp
dec
push
mov
mov
sbb
fsubs
xchg
inc
es
lock
je
or
pop
inc
pop
mov
jecxz
je
dec
push
adc
sub
push
add
add
out
add
std
leave
adc
xor
add
or
and
add
add
cmp
sub
xchg
cwtl
and
lock
mov
jp
int3
js
ja
les
inc
sahf
lret
sub
leave
enter
push
call
call
ret
adc
out
cmp
fs
ficomps
and
and
dec
or
jns
mov
and
push
adc
ds
push
inc
add
sarb
inc
int
mov
add
shr
push
cmp
imul
mov
push
pop
jnp
int
cs
xor
int
adc
int3
pop
pusha
dec
cltd
subl
in
cmpl
xchg
fisubrs
fadds
adc
adc
sbb
dec
or
fildl
out
jl
decb
push
jns
cltd
add
dec
and
std
fs
jle,pt
push
or
movsb
inc
in
adc
ja
cltd
jno
testl
xchg
push
sti
lods
push
mov
sbb
jge
and
adc
sbb
adc
sbb
aam
mov
jne
push
dec
sbb
and
das
addr16
sub
push
loope
je
push
orb
sbb
gs
sub
jns
push
and
jl
pop
mov
pop
popa
or
inc
es
addb
cmpsl
mov
inc
adc
push
push
bound
inc
addr16
hlt
insb
lahf
rcll
push
nop
push
xchg
cmp
cmp
add
sbb
dec
invd
cmp
dec
push
testl
icebp
out
bnd
sub
push
jecxz
movsb
xor
adc
out
je
mov
add
xchg
fwait
gs
or
pop
cli
movsb
inc
scas
jmp
test
sub
inc
sub
inc
pusha
sub
les
jmp
jg
xchg
xor
ss
bound
jo
adcb
jbe,pn
jne
mov
addl
sbb
pop
push
sbb
and
fimuls
mov
sub
sbb
sbb
and
pop
outsl
push
xor
rorl
pop
shll
jne
nop
add
mov
sbb
lods
dec
jne
xor
mov
inc
movsl
dec
push
bnd
ja
adc
jmp
pop
fbstp
adc
pop
popa
sbb
cmpb
nop
mov
pusha
add
dec
mov
sbb
clc
or
mov
or
inc
cld
sbb
testb
inc
mov
test
ljmp
lcall
push
cld
or
js
js
mov
cmp
pop
adc
xor
test
fildl
lds
aaa
cmc
adc
add
push
jae
dec
xor
icebp
dec
ffreep
push
add
and
xor
call
cmp
dec
sbb
cmpsb
jns
mov
push
cli
pop
mov
add
mov
fcomi
cmp
mov
add
or
inc
add
dec
idiv
fidivrl
or
pusha
add
into
jns
sbb
mov
mov
pop
pop
out
add
xchg
and
sbb
jne
pop
push
pop
sbb
fmull
mov
gs
hlt
sbb
imul
or
mov
outsb
aaa
push
into
pop
aad
aam
jp
add
shlw
mov
adc
outsl
data16
outsl
add
iret
pop
adc
push
pop
push
jecxz
sbb
ror
js
xchg
in
xor
pop
cmp
inc
cmpb
jge
arpl
enter
setbe
ret
and
xchg
aam
push
mov
lock
testb
lock
or
and
push
out
js
or
mov
les
push
push
xor
sub
cmpsb
scas
mov
push
rcrb
imul
and
mov
or
nop
mov
sub
cs
into
test
and
sbb
test
push
mov
aam
pusha
mov
negl
adc
adc
or
xlat
add
or
sti
adc
adc
push
push
mov
adc
push
lret
nop
push
sbb
xchg
test
jb
sbb
imul
cmp
setne
je
loopne
pop
repz
jns
test
push
jbe
push
cmp
ret
jmp
mov
cmp
jne
push
push
push
push
xor
push
dec
rorb
dec
cmp
mov
adc
push
sbbl
ret
cld
in
push
adc
inc
scas
imul
mov
xor
xor
fs
push
and
stc
mov
pop
xchg
sbb
imul
jmp
sete
jne
push
push
adc
test
cmpl
sbb
add
mov
stos
movsb
sti
mov
xlat
add
xchg
rorl
subb
test
push
mov
ror
pop
pop
fwait
push
xlat
shlb
fiaddl
pop
mov
add
and
add
fs
std
sub
jge
lods
inc
and
stos
jnp
push
push
je
xor
or
int3
sbb
add
jne
sub
imul
mov
push
pop
inc
imul
loopne
loopne
lods
jo
and
sbb
and
imul
sub
adc
inc
dec
add
lcall
inc
xchg
inc
push
inc
movsb
stc
mov
xchg
fisttpl
fadds
daa
jne
js
xchg
pushl
mov
mov
add
lock
adc
out
test
call
mov
push
pop
es
stos
repnz
and
jmp
cmpsb
scas
xchg
xor
fcmove
mov
aad
adc
xchg
dec
rcrb
out
mov
mov
repz
xlat
pop
rolb
outsl
hlt
imul
loope
sub
lds
std
mov
mov
mov
jge
test
push
mov
dec
loop
je
mull
rclb
mov
jb
cmp
lock
xor
add
mov
out
rorl
push
adc
mov
adc
add
pop
xorl
push
mov
test
scas
sbb
xor
sub
dec
adc
rorl
roll
push
pop
adc
xor
push
repnz
cli
or
rol
add
in
add
insb
and
push
aas
mov
fsubp
nop
sbb
adcb
mov
cli
inc
jg
and
push
and
jne
mov
mov
push
pop
lods
ja
jle
push
fcmovnb
fs
clc
jb
repz
or
sbb
pop
xchg
add
in
mov
inc
mov
xor
loope
cmpsl
mov
mov
add
add
mov
and
jl
loopne
test
adc
xchg
mov
jno
mov
inc
add
ret
aas
push
inc
add
adc
sub
mov
fsubrs
add
loopne
adc
xor
sahf
sub
sub
add
and
sub
in
or
cltd
dec
fsubl
adc
rolb
lea
push
jnp
ss
lds
leave
ret
shr
jl
movsl
push
stos
cmp
cmp
ljmp
in
mov
lret
out
movsb
sbb
lock
addr16
adc
sarl
push
std
je
cmp
je
or
clc
cmp
add
jb
dec
and
fcomps
mov
and
daa
es
orb
test
aaa
ficompl
push
in
add
mov
mov
jmp
cmp
dec
hlt
jge
mov
ret
aad
out
mov
ss
mov
outsb
and
pop
push
mov
stos
or
cmp
jmp
les
ljmp
pusha
pop
popa
jp
pop
inc
or
and
push
cmp
jg
loope
shl
xor
lea
push
jmp
lock
or
mov
dec
cld
sub
or
push
lret
adc
jp
hlt
sub
push
sti
movsl
and
xor
in
or
dec
loopne
lcall
add
pop
or
lock
sub
push
nop
mov
push
loop
cmp
lock
pop
mov
mov
xorb
and
or
ja
dec
fwait
push
cmp
jle
sbb
mov
mulb
jge
in
bound
cld
jo
ds
or
and
mov
cmp
adc
mov
push
aaa
mov
cmp
jle
mov
mov
ret
inc
js
lock
add
sub
cmp
adc
jo
dec
das
pcmpgtd
add
push
cmp
ret
push
sbb
push
lret
js
jp
dec
adc
push
mov
sar
push
mov
or
cmp
pop
stos
or
xor
popw
hlt
movsb
ja
sbb
lods
js
and
int3
cmp
hlt
out
mov
or
andl
andl
hlt
dec
xor
adc
mov
pusha
add
movsb
jb
lea
cli
pop
insb
add
sub
fnop
mov
push
sub
mov
and
aad
addr16
repnz
ja
out
fiadds
leave
jge
sbb
addb
cli
jbe
cmpl
insl
mov
pop
xchg
and
dec
int3
scas
inc
in
fidivrs
jne
or
jmp
mov
jmp
sbb
ficomps
adc
call
add
mov
and
outsb
roll
xchg
xor
ds
xchg
pop
mov
cmp
cmp
ss
lock
mov
xor
mov
pop
push
sub
push
pusha
mov
mov
outsl
ret
add
push
aaa
lds
add
adc
mov
movsl
sub
rolb
pop
bound
addb
push
into
mov
or
aad
mov
dec
and
mov
mov
je
sub
lods
xchg
sbb
add
and
ret
jne
mov
pop
lret
lret
call
mov
xchg
cs
sbb
in
cmp
mov
or
add
mov
gs
sub
add
push
in
test
xor
jle
push
adc
dec
leave
push
shlb
je
adc
jb
cmpsb
jne
lret
inc
popf
sub
cmp
aam
add
xchg
mov
jno
in
fnstcw
test
imul
mov
test
push
cld
bound
addl
test
mov
push
pusha
add
sbb
adc
test
lods
je
aam
pop
dec
in
and
jmp
scas
and
jp
add
sti
add
pusha
push
add
mov
mov
mov
or
xchg
adc
lret
push
sti
sbb
adc
adc
std
sub
xchg
push
push
mov
rcrl
mov
mov
repnz
cmc
lcall
je
jmp
lock
mov
add
dec
mov
orb
dec
addl
ljmp
dec
insl
sub
sbb
sbb
push
cmpsb
adc
lock
movsb
fisttpl
push
lods
pop
pushf
aad
out
orb
mov
popa
adc
cmp
sets
mov
xchg
and
lcall
mov
into
pop
insl
push
int
call
cmp
dec
add
mov
push
lret
xchg
sub
sti
cwtl
test
mov
cmp
jne
add
xchg
repz
sub
fs
jnp
sbb
fists
add
adc
adc
push
xorl
inc
out
fs
addb
hlt
sub
add
add
sbb
lods
jbe
xchg
jb
mov
push
xchg
pushf
inc
mov
aas
cltd
or
rorl
add
lods
jl
popf
pusha
sbb
push
sub
or
adc
call
mov
inc
sbb
dec
or
sub
rorl
push
xchg
jp
cmp
pop
in
mov
mov
in
mov
pop
jmp
push
push
sahf
sbb
dec
fbld
insl
addb
jmp
fidivs
add
add
sub
repnz
push
push
add
addl
and
adc
push
loopne
or
adc
or
sub
mov
test
lea
inc
xchg
cmpsl
inc
test
add
mov
rcrl
add
jle
add
sbb
ds
cmpsl
mov
add
punpcklwd
jns
call
test
lock
mov
sbb
icebp
cmp
call
jbe
pop
push
outsl
lods
jns
add
dec
ret
jmp
xor
add
cmp
jo
push
inc
lock
je
cmp
icebp
in
sbb
daa
push
dec
adc
loopne
and
pusha
adc
loopne
adc
popa
arpl
cmp
pop
dec
lock
pop
inc
repnz
push
and
and
jns
sub
pop
or
ds
stos
cmc
mov
rcrb
cmpsb
popf
pop
leave
sbb
aas
insb
jno
or
mov
mov
or
inc
out
mov
jmp
in
jbe
in
jne
xchg
aad
or
in
sbb
push
inc
sahf
shrl
fldl
push
shl
and
mov
or
shlb
mov
push
outsl
dec
sub
sub
div
pop
fisubrs
add
push
bound
push
push
push
ss
adc
sub
sub
xchg
inc
shlb
lcall
pushf
mov
shrb
and
fnstcw
mov
daa
cmp
push
faddl
pop
leave
pop
add
pop
sbb
lea
sbb
xor
mov
or
imul
pusha
jo
jo
xchg
push
in
xor
imul
add
add
jo
repnz
je
std
dec
movsb
ror
add
or
in
add
ret
mov
lea
mov
ret
dec
adc
adc
pop
or
movsb
mov
xor
push
addr16
sti
mov
jne
sub
jne
xor
push
imul
adc
cld
cld
cmp
or
mov
mov
sahf
add
enter
jge
pop
cli
clc
mov
sub
push
jmp
adc
or
add
push
add
fiaddl
aam
std
jg
pop
cld
sub
mov
imul
jo
fimuls
adc
jg
inc
mov
lock
call
loop
sbb
lods
pop
hlt
shr
mov
rolb
mov
imull
icebp
add
mov
push
push
add
xor
inc
or
jle
cmp
test
or
add
call
xchg
test
jo
xor
cmpsb
cmp
jb
ja
cmp
pop
pop
pop
jmp
jg
push
mov
mov
adc
mov
gs
pop
sub
lock
push
ss
or
or
arpl
cwtl
rcll
rclb
es
and
and
mov
dec
cmp
mov
in
add
pop
add
push
call
ret
mov
mov
shll
push
mov
cmp
je
dec
add
push
sbb
push
add
mov
pusha
movzwl
enter
clc
cmp
lds
lahf
xor
and
jmp
mov
in
jle
mov
loope
sub
ljmp
adc
js
sahf
shrb
or
dec
sbb
sbb
out
jl
inc
adc
sub
jecxz
dec
mov
hlt
push
test
push
mov
adc
cs
movsl
xchg
jb
sub
decl
push
mov
cmp
je
push
lea
push
fucom
xchg
pop
mov
cmp
add
clc
push
sbb
mov
jle
dec
insb
pop
imul
xor
sub
sarb
fcmovnb
inc
data16
xlat
push
aas
push
adc
xor
xor
pop
rclb
and
dec
fists
and
outsb
sbb
hlt
push
in
inc
mov
jbe
sbb
push
mov
neg
push
ret
dec
cmp
clc
shr
push
xor
loope
in
mov
test
jl
push
push
je
sbb
push
mull
dec
xchg
cli
or
shlb
clc
jbe
adc
jg
mov
push
push
cmp
je
fcmovu
testb
push
push
xchg
scas
or
sbb
fiadds
push
shlb
negb
rcr
je
push
push
aas
xchg
inc
pop
mov
int3
xor
mov
mov
jmp
arpl
std
push
push
icebp
mov
add
sbb
jns
testl
adc
repnz
push
push
imul
cli
mov
cmp
xchg
ror
gs
scas
in
ds
adc
dec
sbb
push
and
ljmp
adc
cltd
lcall
xchg
dec
ficoms
push
push
je
ret
pop
or
and
mov
adc
data16
pop
lock
andl
ret
add
jb
pop
dec
popf
xorb
cmp
je
popa
add
mov
adc
test
push
and
cmp
js
fbstp
lea
in
cmp
je
cmp
je
cmp
jne
xorb
add
cmpsb
mov
push
pop
or
cmc
je
sbb
push
mov
sub
adc
cmc
add
mov
adc
outsb
pop
mov
cmp
xor
adc
mov
movsl
ret
das
pop
clc
sbb
cld
sarl
pop
test
mov
enter
das
dec
lea
cmp
jne
xchg
das
into
add
xor
jl
aad
pop
adc
mov
mov
or
pop
mov
sub
cld
mov
fdivrl
xchg
daa
dec
ds
mov
xchg
mov
jb
bound
aam
xor
xor
add
adc
sbb
cmp
jb
cmp
ja
repnz
add
sub
sbb
inc
add
dec
jae
popa
imul
incl
call
add
adc
lods
add
fwait
into
or
push
inc
adc
xorl
sub
bnd
testb
jmp
jge
cmpsb
in
xor
mov
cmp
add
mov
cmp
gs
jp
lcall
cmp
jne
mov
sbb
add
push
iret
sti
lods
jmp
inc
lock
mov
pop
dec
xor
push
adc
outsl
movsb
jne
jmp
testb
lcall
inc
sbb
cli
cmp
jbe
sahf
push
pop
add
lea
mov
cmp
xchg
push
mov
fs
dec
inc
jmp
inc
and
or
xor
pop
mov
lret
cmp
or
mov
clc
lahf
loopne
insb
push
xor
je
mov
lea
dec
movsb
sahf
clc
adc
or
mov
mov
pop
in
inc
xor
inc
cmp
cld
pop
sahf
jne
cmp
notb
mov
pop
cmpb
insb
test
in
jge
clc
je
sub
or
cmp
or
ja
shrb
enter
test
cmp
push
scas
out
xor
cmp
push
clc
sbb
dec
jb
lds
sub
popa
loop
jne
mov
sub
push
test
mov
fisttpll
xorb
fsubs
mov
lcall
cmp
ljmp
shl
add
jmp
cwtl
aas
les
and
and
dec
hlt
add
negb
test
jne
xor
jbe
dec
lock
test
incb
inc
sub
push
jae
mov
jmp
loope
mov
pop
cld
jbe
test
and
fmuls
shl
inc
fcos
push
add
adc
push
rorb
sti
rcrb
add
inc
jg
or
jge
push
aaa
mov
and
es
sub
sub
and
pop
xorl
repz
pop
jl
pop
jle
pusha
incb
add
pop
lock
add
jp
jb
jbe
mov
add
clc
pop
popa
test
fwait
and
or
je,pn
test
iret
jne
je
outsb
and
add
push
je
xor
push
cmp
jae
movb
inc
mov
push
sub
push
add
movsl
add
shlb
fidivrs
jno
mov
inc
and
je
outsb
dec
je
adc
mov
push
mov
or
jae
add
inc
adc
adc
add
and
jl
insb
subb
stos
add
push
movl
sub
mov
or
fs
push
add
push
cmpsb
outsb
push
push
fisttpl
mov
push
data16
mov
adc
add
add
add
out
add
in
ret
mov
xchg
pop
xchg
push
in
shl
sub
imul
add
mov
inc
cli
and
lea
lds
adc
pop
jb
lahf
aam
in
pop
lock
cmp
mov
test
mov
loopne
std
jge
xor
mov
or
xchg
lods
cmp
xchg
cmp
xor
lock
lahf
inc
mov
lcall
in
rclb
arpl
frstpm(287
mov
dec
fadds
inc
and
jae
rcpps
xor
loope
and
sub
movlps
sub
lds
push
fsts
sti
mov
loopne
nop
jp
or
jmp
shll
xor
mov
movsb
movsb
add
arpl
or
xchg
pop
pop
add
cmpsb
inc
invd
daa
or
pusha
inc
mov
aam
xor
pop
xchg
loopne
add
push
or
inc
or
add
inc
scas
aad
test
scas
fsubs
in
jl
add
cmp
add
cmpb
lds
sub
and
push
or
add
sahf
push
cmp
int
cmp
hlt
mov
add
inc
or
jne
xchg
jp
dec
push
mov
ror
mov
inc
xor
addl
xchg
xor
inc
sub
push
dec
idiv
pusha
jb
cs
js,pn
lds
cwtl
and
add
pushl
mov
xchg
testb
cmp
pushl
shrl
add
sbb
lock
push
mov
adc
and
fmull
add
int3
jmp
jle
mov
lahf
jne
xchg
pushf
lods
cwtl
addl
xchg
xchg
cmp
fnstsw
or
jne
add
ds
push
leave
mov
cmp
or
xchg
cmp
or
mov
test
faddl
lahf
mov
test
mov
pop
call
gs
addl
lcall
faddl
aam
outsl
lock
sub
xor
add
mov
xor
loop
sub
cmp
in
in
or
loopne
jne
push
rorb
ljmp
out
and
jne
testl
push
push
fdivl
dec
psubusb
lock
aas
pop
lds
jnp
das
movl
add
bound
add
mov
arpl
jo
mov
fldl
test
notb
in
fcomp
test
inc
movsb
sbb
jmp
icebp
push
cli
sbb
je
mov
cli
lds
add
inc
mov
inc
inc
inc
xchg
in
loope
jge
pop
test
or
and
aaa
sbb
push
xchg
push
inc
lret
cwtl
mov
das
movsl
jmp
mov
adc
push
outsb
or
jmp
jle
test
jo
jns
int
push
push
sub
xchg
outsb
and
fsubp
imul
jne
jl
sub
jae
xor
sbb
movsl
and
jae
pop
cld
mov
jmp
pop
inc
cmp
je
lea
cmpb
cmp
in
mul
pop
jne
les
aam
adc
mov
pop
cmp
mov
mov
inc
jge
addb
fld1
jp
addr16
add
dec
mov
jne
fucom
loop
movsb
push
adc
pop
fdivs
jge
cmp
cmpsl
xchg
or
jo
and
sbb
out
add
add
dec
andl
add
jo
xchg
enter
repz
dec
lahf
js
das
ret
lds
push
sbb
sti
popa
in
adc
pop
sbb
stc
aad
ret
pop
push
fnsave
mov
cmp
orl
adc
add
int
insb
add
dec
mov
jne
lds
inc
add
mov
fisttpl
cmpsl
xor
test
jb
pop
xor
cmp
orb
mov
or
lods
xchg
xchg
mov
mov
cld
add
push
push
push
sbb
add
xor
push
scas
loopne
sahf
stc
push
das
mov
pusha
cmpb
movsb
sub
mov
inc
cmp
jbe
in
fiaddl
cmp
and
mov
push
fadds
mov
sub
jb
pop
xor
xor
sub
cmp
pusha
addr16
fists
sbb
pop
ret
imul
dec
je
mov
test
data16
in
add
cwtl
mov
inc
shl
push
xor
fildll
mov
push
xor
add
xchg
push
test
pop
mov
jge
js
push
test
sbb
loopne
sub
imul
jle
sbb
push
dec
mov
lret
daa
jnp
push
push
xor
aas
cmp
push
pop
mov
insl
pusha
insb
imul
mov
jo
pop
or
xor
cmpb
xor
in
dec
and
push
loopne
add
mov
add
pop
inc
dec
movl
mov
push
push
cmp
mov
cltd
push
or
inc
out
or
jp
repnz
jp
out
push
test
push
mov
or
or
or
popa
pop
lcall
pop
js
jmp
andb
jmp
pushl
jle
ret
imul
sbb
out
jne
addb
cld
in
xor
test
mov
imul
add
push
lcall
hlt
cmp
sarb
adcl
mov
add
adc
sbb
pop
or
fucomi
ud0
add
aas
push
out
sbb
mov
lea
mov
repnz
ret
faddl
je
xor
loope
push
mov
mov
cmp
dec
lock
je
in
inc
insl
cmp
lfs
mov
in
clc
loopne
sbb
push
xchg
rclb
dec
cmp
push
inc
inc
in
in
add
jo
mov
in
out
sbb
in
loope
out
xchg
mov
ret
push
orb
subl
add
scas
push
cmp
sbb
lret
sub
xchg
shl
or
clc
test
xor
or
call
pop
daa
loopne
or
in
xor
lcall
or
bound
mov
cmp
call
inc
mov
ret
in
mov
or
cmp
sbbb
cmp
cmpsl
sbbb
sub
cmpsb
sub
inc
cmpsl
andb
imul
mov
mov
shlb
iret
and
loopne
jo
jo
sbb
fstp
xorl
imul
or
inc
or
dec
cld
cltd
inc
test
pop
popa
adc
pop
or
xor
loope
scas
dec
or
mov
sbb
adc
sub
call
xor
stc
cwtl
pop
sbb
int3
imul
cmpsb
fs
jmp
fists
push
pop
mov
mov
lock
push
mov
dec
xor
push
mov
lcall
sbb
xor
cmp
dec
sarl
and
fistps
pop
sbb
ja
jo
mov
mov
cmp
jmp
jno
sbb
add
mov
or
loopne
sti
jl
add
sbb
sbb
in
dec
inc
pop
mov
push
lods
aas
push
push
mov
adc
sbb
pop
mov
mov
mov
pop
xchg
sahf
xchg
or
loop
push
xor
cmpsl
push
pushw
adc
cwtl
inc
shlb
or
adc
out
or
cli
pushf
push
add
push
test
dec
sub
loopne
in
add
lock
push
mov
xchg
pop
shlb
fmul
stos
pusha
inc
xor
out
stc
cmp
pop
or
cmp
inc
inc
or
test
addr16
sub
pop
mov
xchg
loopne
sbb
js
sbb
dec
cli
data16
mov
jnp
cmp
ja
push
sub
mov
inc
pushf
sbb
gs
rorb
adcl
and
insl
std
les
xchg
and
jl
sarl
xchg
sbb
pusha
loopne
ss
or
dec
sub
adc
or
push
andl
sub
jle
in
pop
push
ds
cmp
scas
int3
or
mov
mov
jae
push
stos
xor
xchg
xchg
call
imul
xchg
ficoml
mov
inc
cwtl
in
pop
jno
push
add
mov
cmp
mov
repz
aam
or
xor
fsub
mov
or
and
fildl
icebp
add
and
mov
add
lahf
adc
and
xchg
arpl
fnsave
dec
pop
push
insl
pop
jns
ja
pop
pop
push
or
rorb
mov
or
mov
cmp
rcrb
sarb
rcrl
push
lods
or
outsl
daa
fwait
pop
pop
mov
or
jp
sub
pusha
out
xor
pop
inc
shll
repnz
and
pushf
std
cmp
push
pop
jb
or
pop
pusha
push
pop
push
mov
mov
cmc
jo
pop
scas
dec
imul
int3
pushf
imul
mov
inc
dec
inc
push
mov
rsm
test
pop
push
add
pop
adc
gs
push
imul
and
adc
incl
insl
test
rcll
pop
addb
or
push
add
aas
push
cli
push
push
add
test
jl
aaa
addr16
cmp
and
stc
or
sub
jo
js
sub
and
mov
sub
cwtl
mov
or
xchg
icebp
loope
sti
pop
push
xchg
push
xchg
pushf
push
sub
lock
jb
movsl
jmp
inc
jnp
js
ljmp
fisttpll
mov
adc
aas
popf
lcall
inc
mov
loopne
dec
or
xchg
les
inc
mov
pop
dec
int3
imul
push
cmp
test
jb
push
or
jns
enter
pop
ss
in
or
pop
outsl
adc
mov
jle
repz
rorl
adc
aam
inc
inc
pop
xchg
adc
stos
mov
xor
sub
inc
pop
jne
dec
push
or
jno
loopne
mov
adc
jp
dec
add
or
push
pop
mov
xchg
xchg
mov
dec
fs
stos
mov
cwtl
sbb
or
sub
leave
mov
inc
adc
andb
call
inc
xchg
jns
pop
mov
enter
pop
add
adc
or
sahf
dec
and
sbb
cltd
push
in
ljmp
mov
or
or
or
pop
cwtl
addr16
inc
mov
popa
xor
jo
jl
inc
clc
and
out
rorb
icebp
movb
dec
test
and
movsl
sub
adc
rcrb
push
sbb
sbb
shlb
jne
sub
inc
mov
hlt
mov
pop
loop
sbb
addl
xchg
or
fimuls
enter
xchg
fs
dec
sahf
or
movsb
push
pop
and
add
aad
stos
mov
inc
test
clc
cmp
ds
jbe
das
mov
cmp
pop
push
enter
mov
or
jle
out
xchg
jo
push
and
push
xchg
movsb
insb
iret
xor
sbb
ret
cmp
nop
xor
cli
loopne
fs
push
call
add
xor
loopne
hlt
mov
push
jne
cmpl
push
loopne
js
ja
inc
cmpsb
xor
mov
push
inc
push
pushl
cmp
dec
push
js
daa
mov
stos
add
es
adc
and
dec
test
xchg
cmc
daa
xchg
or
stc
lock
daa
cmp
sbb
sub
push
leave
xchg
sbb
insb
int
icebp
sub
add
push
and
push
loop
jecxz
mov
icebp
fisttpl
pop
imul
test
nop
sub
jno
test
jo
imul
xlat
int
push
jmp
aaa
into
cmpsl
dec
pushl
int3
mov
mov
addb
pop
ficoml
test
je
loopne
add
ljmp
pop
xchg
push
cld
dec
push
cmpb
adcl
and
in
cmp
xchg
push
dec
dec
and
xchg
mov
xchg
je
enter
cltd
movsl
addl
or
mov
sbb
xor
adc
arpl
fadds
adc
xchg
sub
nop
jp
stos
clc
pop
adc
sarl
fsubs
scas
call
pusha
das
lahf
pop
imul
std
outsl
aad
adc
adc
dec
sbb
mov
push
dec
jo
je
xor
cmp
lcall
shll
mov
mov
clc
pop
mov
fdivl
std
aas
sub
xchg
mov
push
ret
mov
or
loop
push
push
add
add
dec
stc
rcr
and
or
stos
lea
cmpl
cmpsl
aad
jmp
mov
xor
mov
add
bound
loopne
into
adc
jnp
mov
cli
dec
mov
cmc
pop
xor
mov
inc
add
lret
mov
hlt
mov
add
movsb
shlb
repnz
cmp
jb
out
nop
cs
std
xor
cmp
popf
and
xchg
xor
cmp
sbb
rclb
adc
fists
or
push
dec
mov
clc
aam
jno
xor
dec
add
add
inc
fldcw
add
shlb
das
or
mov
icebp
movsb
dec
mov
fistpl
sub
jge
sahf
jo
shrb
je
scas
push
xchg
adc
sub
sub
pushf
sbb
sub
xor
movsb
insl
in
enter
adc
lods
add
nop
or
add
aam
sbb
or
add
in
call
loopne
mov
aaa
cmc
mov
aas
mov
mov
sbb
repz
sub
repnz
mov
ljmp
or
ret
xchg
pop
popa
fildl
repnz
adc
notb
fstps
xor
wrmsr
sysenter
mov
int
std
add
movsl
mov
pop
ds
enter
clc
gs
out
push
or
enter
adc
aam
xchg
lea
faddl
pop
add
mov
xlat
decl
pop
sbb
aas
or
sbb
jmp
sub
push
push
add
rorb
or
push
aad
rcll
imul
fmuls
jne
xorb
add
push
movsb
mov
cli
pusha
adc
loopne
add
inc
ds
add
sub
or
iret
or
inc
and
and
pop
ja
push
push
sbb
jmp
inc
loopne
adcl
mov
std
xchg
vandnps
mov
dec
mov
xlat
aaa
sbb
fldcw
cld
inc
add
xor
pop
adc
dec
pusha
loope
and
ds
sbb
repnz
or
adc
adc
mov
sbbb
xchg
leave
aad
jno
inc
mov
fs
cmp
out
push
pop
cmp
fmull
shl
jae
mov
sub
cmp
je
sbb
stc
cli
out
ss
mov
cmp
in
add
mov
and
mov
das
arpl
ss
dec
pop
push
je
sub
mov
in
sti
imul
push
int
lock
mov
cmp
push
imul
xchg
outsb
iret
dec
cmc
ds
adc
loopne
in
or
loopne
inc
push
jle
fcoml
movsl
cmp
sahf
je
mov
xor
clc
cltd
lahf
call
jmp
and
filds
popf
push
dec
jl
shlb
notl
lea
cs
mov
cs
or
inc
adc
add
ret
mov
sahf
xor
aam
lea
push
mov
movsb
data16
ljmp
lods
adc
push
push
xor
jecxz
mov
adc
cmp
push
push
lock
scas
push
jo
adc
in
cmpsb
pop
xchg
popl
or
mov
cmp
pop
sub
lea
xchg
xor
notb
xchg
sahf
adc
sbb
adc
add
mov
iret
lds
mov
sbb
push
ficoml
add
push
mov
sbb
movsl
sub
enter
iret
inc
push
jmp
mov
out
inc
adc
and
inc
mov
xchg
fwait
cmc
cmp
jns
popl
mov
pop
xor
stos
mov
ficoml
mov
dec
or
movsl
mov
ja
mov
inc
push
inc
mov
les
lret
lret
jbe
cmp
adc
int3
dec
rclb
test
lret
lret
aam
fmuls
fsubrl
loopne
sbb
mov
adc
fidivs
push
rcr
aam
pop
xor
or
shr
push
push
adc
das
dec
subb
xor
jno
mov
xchg
ss
jbe
insl
fsubrl
mov
pop
lock
negl
jmp
mov
ret
adc
mov
xchg
jne
ret
aas
jge
movzbl
push
pop
sbb
xor
sub
jge
jb
pusha
jle
mov
jbe
xor
mov
jbe
das
fs
pop
pushf
fdivrp
xor
sub
fistpl
lea
push
sub
or
pop
mov
int
dec
lahf
adc
push
jmp
push
or
jmp
add
lock
movsb
jg
icebp
xorl
repz
or
adc
push
inc
push
int
adcb
or
mov
cmp
pop
jnp
push
or
cmp
jns
push
or
and
stos
pusha
pop
or
lock
je
mov
and
into
jmp
fadds
push
or
ja
and
pop
cmp
popf
xchg
mov
add
xchg
inc
imul
or
add
loopne
shl
or
shll
adc
xor
cmp
push
in
clc
decl
push
add
xorb
mov
xchg
dec
pop
int
and
insl
push
push
das
outsl
ds
sub
sbb
lahf
loopne
or
aas
cld
cmpb
sub
cmp
adc
or
clc
loopne
xchg
lock
je
cmp
inc
cmp
push
addr16
and
enter
or
imul
mov
dec
movsl
test
or
mov
cli
xor
test
sub
add
dec
jnp
jne
add
shrb
cmp
mov
adc
cmp
xchg
aas
pop
sbbl
je
cmpsl
popf
scas
dec
sub
hlt
imul
mov
pop
rcl
jle
movb
mov
sbb
je
xor
lock
mov
dec
movsb
cmp
cmp
jbe
cmp
jbe
mov
jae
jbe
ds
ret
leave
push
mov
call
push
push
sub
push
sbb
enter
adc
add
insl
dec
xor
pop
je
hlt
cmp
enter
and
in
rclb
and
enter
xor
adc
lahf
mov
hlt
lea
shll
incb
ja
arpl
xlat
adc
push
mov
ds
call
je
or
mov
pop
clc
jle
mov
ds
push
push
add
inc
pop
lods
fisttpl
pop
test
sub
ss
sub
test
bound
mov
addb
pop
push
xlat
ret
add
cmc
jmp
ret
imul
adc
and
stc
fdivrs
cmp
jnp
add
cli
inc
xchg
jne
mov
push
jl
je
loop
je
adc
push
sbb
and
mov
jb
pusha
jle
and
leave
inc
cmp
cwtl
sbb
and
push
mov
jae
and
test
adc
sub
test
loopne
adc
dec
pop
clc
or
push
stos
mov
in
mov
je
addb
icebp
test
je
or
neg
ljmp
lcall
cmp
jb
jmp
adc
xchg
shrl
lea
cmc
loope
in
cmp
call
ja
imul
or
xor
dec
imul
dec
sbb
sbb
xor
rcll
insb
xbegin
push
lea
and
sub
es
sub
mov
fdecstp
sbbl
je
frstor
popa
fimull
mov
mov
add
aam
jmp
dec
cmpsl
push
dec
js
cltd
je
add
xor
ret
xchg
mov
mov
mov
cmp
mov
push
jne
xchg
clc
push
dec
mov
mov
in
or
dec
ret
test
jo
lea
fcomps
das
mov
lea
sbb
xor
sbb
fs
inc
addl
push
sub
cld
enter
adc
push
dec
and
cmp
hlt
aaa
pop
fdivrl
mov
fwait
mov
mov
mov
inc
lods
jmp
lahf
and
loope
das
loope
mov
push
je
cmpsb
lret
imul
inc
test
pusha
sbbl
pop
or
pop
pop
movsl
test
dec
andb
dec
aaa
test
in
sub
xchg
test
lds
jmp
push
data16
mov
sub
pop
cmp
jne
roll
mov
push
fld
push
mov
mov
aas
and
or
js
jb
xor
pop
shlb
leave
dec
cmpsb
pop
js
dec
sub
xchg
ljmp
mov
push
cmp
inc
lock
test
lea
adc
fnsetpm(287
xchg
or
sahf
lods
xor
or
mov
jne
sbb
or
fisubrl
pop
mov
loope
inc
das
loopne
lods
int
cmpb
xchg
faddl
nop
aas
push
sahf
mov
xchg
and
add
mov
out
insb
and
jmp
or
inc
inc
or
mov
mov
inc
lahf
cmp
adc
and
lret
jecxz
and
int
outsl
imul
fbstp
sarb
xor
movsb
mov
clc
hlt
sub
jp
xor
loopne
lods
jle
jge
cmp
into
or
pop
add
and
add
testb
pushf
adc
icebp
lods
xchg
pop
sub
sub
or
call
push
sub
fldenv
popa
sub
ret
popa
cli
repnz
mov
cld
cs
xor
cli
add
pop
mov
or
shr
pop
je
test
in
filds
fstpt
jbe
das
mov
cmp
jge
je
shrl
adc
mov
dec
jne
pushf
add
or
push
test
add
or
pop
call
je
test
divb
or
cmpsl
adc
add
mov
test
mov
xchg
ja
aad
fs
shlb
push
cwtl
mov
pop
push
push
push
pop
inc
mov
dec
xchg
test
fidivrs
sti
mov
mov
push
push
aas
les
mov
sub
mov
mov
lahf
roll
mov
ja
mov
push
cmp
push
mov
roll
mov
in
clc
addr16
push
mov
pop
inc
add
mov
xchg
outsb
ljmp
loope
push
and
mov
f2xm1
inc
pop
pop
mov
push
pop
xchg
add
testb
pusha
mov
rorl
adc
mov
aaa
icebp
push
incl
mov
je,pt
cmp
lock
jbe
adc
ficomps
cmpsb
push
leave
push
cmp
push
jnp
add
inc
test
pop
jle
cwtl
popa
push
mov
fmul
pop
std
or
imul
sbb
adc
pop
xor
or
jge
int
fbld
jle
push
inc
sub
lods
cmc
adcb
cmpsb
cmp
xor
add
cld
js
jb
pop
popa
popa
push
mov
stc
cmpb
and
mov
push
adc
xchg
popf
mov
mov
and
push
mov
inc
leave
mov
push
or
jmp
pop
repz
movsb
push
subl
ret
les
push
mov
or
and
movsl
adc
lock
enter
aam
adc
mov
sbb
pop
inc
sub
mov
xorl
aam
push
adc
repz
and
push
or
mov
dec
push
enter
adc
mov
add
dec
shrl
pop
mov
mov
mov
ret
icebp
pop
jecxz
mov
or
inc
adc
notl
add
lahf
jbe
imulb
shlb
jns
sub
call
or
ret
aaa
lret
pop
lahf
or
mov
mov
jp
add
adc
cmp
push
fsubs
mov
add
filds
dec
lods
cmp
ds
aad
adc
cld
shrl
adc
je
inc
cld
push
fwait
je
add
push
and
dec
cmp
das
testb
loopne
push
cwtl
lcall
in
sbb
push
mov
pop
cld
or
mov
xor
mov
jle
push
ret
mov
std
dec
lea
mov
xchg
mov
cmp
xchg
pop
add
mov
cwtl
jno
mov
xchg
movb
imul
push
insl
push
add
or
pop
dec
sbb
or
pop
sub
inc
dec
pushl
mov
jmp
inc
hlt
mov
and
adc
rcrb
and
out
rorl
cmp
mov
rorb
mov
sarl
dec
or
fdiv
or
inc
cmp
sti
js
mov
jnp
lods
bound
aad
cmp
imul
jp
push
in
cmp
jne
mov
mov
pop
rolb
xlat
xchg
int3
test
mov
mov
inc
mov
mov
inc
std
jle
jmp
add
inc
outsl
out
sbb
jno
sbb
js
jge
popa
aam
fidivrs
andl
cmp
lods
mov
add
mul
seto
movsb
neg
or
rcrl
or
xor
add
jns
inc
sbb
shl
push
imul
imul
or
movsb
mov
xchg
ret
movlps
mov
or
jbe
add
mov
xorl
andl
sub
sub
sub
sub
jb
pop
pop
sub
sbb
adc
sbb
scas
aam
pusha
pop
cmp
je
mov
cld
push
mov
lahf
shr
xchg
push
cmp
and
cmp
sbbb
lods
sti
fsts
jmp
ret
repz
mov
rolb
out
dec
insl
mov
out
sbb
lcall
mov
call
inc
ficoms
cs
je
dec
jp
pop
or
js
stos
jg
mov
imul
lcall
xchg
orl
lcall
cli
daa
mov
add
mov
cmp
push
mov
or
cld
jmp
cmpl
inc
and
mov
mov
and
das
clc
sub
aad
mov
pop
jmp
sub
sub
sub
movsb
sbb
std
mov
adc
ffreep
lock
xchg
mov
daa
jmp
xchg
add
rolb
stc
cmp
sahf
nop
mov
dec
and
lock
aad
cli
or
add
lea
lock
and
add
je
mov
sbb
ret
loope
rcrl
pusha
sub
mov
jns
ja
mov
adc
jae
jmp
in
rorb
jb
fisttpll
iret
pusha
ret
or
into
jnp
ret
faddl
movsl
les
inc
mov
lret
test
dec
sbb
repnz
sbb
cmp
loopne
ret
stc
test
scas
pop
jge
add
adc
rcrb
mov
mov
inc
hlt
adc
test
dec
imul
xor
popa
sbb
push
xor
aaa
sub
dec
add
sets
sub
push
je
adc
aas
lock
push
fisubl
lahf
jmp
xor
xchg
test
sbb
loopne
jae
in
push
xchg
fcmovbe
adc
js
jbe
add
cmpxchg
and
mov
add
mov
fwait
pusha
pop
or
sub
adc
fwait
or
push
cmp
push
call
inc
adc
sub
ret
mov
lods
cld
cli
sub
xchg
mov
es
xchg
mov
add
inc
and
add
cmp
cmpb
add
loopne
jle
pop
repnz
push
push
je
cmpsb
mov
xor
or
xor
dec
xor
aad
adc
adc
movsb
in
mov
ficompl
andl
xor
fsts
lea
clc
lea
or
jns
pop
lret
xor
mov
add
xor
push
les
scas
pop
int3
cmp
test
loop
inc
testb
lahf
jecxz
sti
cs
or
mov
pop
or
jnp
cmp
aam
ljmp
inc
cld
cmp
push
out
dec
mov
pop
or
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
cmp
fisubrl
lea
cmp
cwtl
pop
add
mov
push
inc
lcall
mov
and
or
and
inc
pop
addr16
inc
adc
or
pop
pop
mov
pusha
addb
fidivrl
cmp
dec
and
jae
scas
lods
inc
subb
hlt
jne
push
mov
dec
fistl
cld
pusha
and
jne
mov
out
lods
push
mov
push
or
mov
or
dec
xor
add
xlat
dec
jp
cld
clc
pushl
cmp
add
test
pop
sub
ret
adc
orl
fimull
out
xor
sar
shrb
xchg
pop
add
cmp
les
clc
ret
push
mov
ss
and
je
mov
into
mov
adc
mov
pop
xor
jb
es
and
lea
adc
es
inc
and
adc
ss
pop
inc
inc
adc
xor
lods
test
hlt
test
jg
lock
cltd
or
loopne
in
add
add
sahf
jo
jne
sub
push
pop
or
test
jns
xor
cs
add
push
aam
jo
ret
ret
cmpl
jne
cmp
cmp
adc
xchg
pop
or
jge
mov
outsl
push
ficoms
cmp
and
jg
xorb
mov
dec
pop
loopne
inc
cmp
lret
adc
shrb
roll
mov
mov
sub
das
push
jmp
sbb
jo
lea
mov
and
fwait
les
dec
or
lahf
adc
fstpt
jmp
push
out
cli
adc
and
sbb
inc
or
loopne
mov
mov
mov
adc
sbb
sbb
mov
pop
add
inc
adc
mov
push
xchg
loope
movzbl
lea
or
mov
push
adc
fdivrl
push
in
mov
int3
pop
cmp
adc
jle
call
lcall
mov
sbb
fdivrl
mov
xor
sbb
insb
inc
xchg
pop
in
xor
mov
rorl
cmp
jbe
lock
or
cmp
je
incl
divl
or
push
or
aam
push
nop
lret
mov
call
jp
idiv
mov
in
xchg
xchg
mov
mov
xor
pop
mov
sbbb
fadds
mov
adc
and
data16
push
mov
sbb
sbb
adc
cmp
ss
data16
pop
shll
dec
cmpsb
mov
mov
pop
mov
adc
int
add
sbbl
ret
mov
push
pop
dec
ss
ds
loop
xor
pop
or
or
pop
xchg
iret
bound
imul
xchg
adc
clc
jmp
lea
in
adc
xor
pop
sbbb
mov
mov
test
loopne
inc
mov
insb
lea
dec
lock
and
fsubr
cmpsb
out
test
sarl
cmpb
push
mov
adc
cmpsb
das
push
addb
jl
jmp
or
mov
add
cmpsl
repz
aaa
push
clc
add
mov
pop
inc
sbb
pop
call
jae
mov
xchg
out
push
fsub
sub
aam
mov
mov
inc
push
add
jmp
popa
dec
and
pop
push
lret
xchg
xchg
sub
jnp
pop
aad
inc
cmp
jae
cmp
je
pushf
mov
insb
cmp
xchg
rol
sub
lcall
sbb
clc
and
jle,pn
lods
cmc
sbb
cmp
cli
lock
test
jb
and
adc
or
jl
decb
fiaddl
rclb
and
jge
cmpsl
iret
jl
out
pop
add
push
movsb
pop
mov
jmp
mov
mov
ds
inc
xchg
jl
mov
adc
push
mov
and
and
sbb
push
je
or
jmp
cmp
add
and
add
or
cmp
pop
sbb
inc
jle
add
add
adc
int
icebp
add
add
cli
and
out
add
dec
shlb
pop
push
push
inc
sbb
inc
sub
jl
adc
int3
xor
or
xor
push
pop
nop
insl
pusha
jmp
xor
lods
push
xor
mov
loopne
jp
push
xchg
push
cli
and
xchg
or
add
fldt
adc
sbb
lea
into
test
jne
pusha
and
call
jp
sbb
adc
dec
iret
pop
call
jne
push
in
jns
in
in
jl
cmp
jmp
push
mov
cmp
mov
sahf
sahf
or
cmp
lock
enter
inc
jl
xchg
popa
xor
bound
lret
call
aaa
xor
add
jge
jmp
clc
mov
add
pop
mov
addl
popf
pusha
shll
repz
lds
in
sbb
or
into
jo
addl
sbb
ffreep
repnz
push
or
mov
cmp
sub
or
call
or
cld
movl
stos
and
mov
test
stc
dec
out
mov
pushl
pop
sub
pop
sbb
fldenv
mov
or
xor
jo
pop
or
sbb
popa
xor
pop
push
and
dec
aas
sub
rorl
jmp
mov
mov
mov
mov
sbb
push
insb
in
mov
ljmp
xor
test
int3
pop
inc
scas
popf
xor
push
das
adc
sub
add
inc
sub
add
sub
xchg
mov
std
test
outsb
sbb
in
sub
inc
fcompl
int
dec
add
cmp
fbld
lea
negb
inc
jmp
cmp
sbb
add
movsl
hlt
addr16
or
xor
sub
out
lods
mov
add
lahf
ds
jo
xchg
xor
adc
push
lods
outsb
pop
pop
mov
lods
mov
lret
sub
sahf
js
push
enter
movl
ret
push
popa
lea
inc
cmpsb
and
mov
ret
sub
lcall
pop
inc
sbb
faddp
andb
jmp
shl
ret
jmp
movb
sbb
cmp
jae
sub
loopne
adc
scas
xor
int3
adc
ljmp
dec
mov
cmc
xchg
xchg
and
xchg
shlb
fstpt
push
inc
pop
aad
jl
mov
add
lds
mov
mov
inc
mov
xor
inc
pop
mov
or
push
or
pop
enter
or
jae
xor
add
push
add
sbb
jle
sub
mov
xchg
insb
int3
mov
push
push
adc
insb
add
cld
jb,pn
cmp
adc
cld
pop
mov
dec
adc
scas
sub
add
and
fildl
and
add
cmp
add
add
push
sbb
inc
repz
adc
sbb
sub
lret
je
roll
xchg
mov
je
mov
movsb
mov
int
add
mov
jnp
addl
call
repz
outsl
mov
repz
pop
stos
mov
je
lds
jne
data16
or
pushf
outsb
xchg
loop
add
push
cmp
jmp
icebp
cwtl
sub
add
mov
push
testl
jmp
or
mov
shll
pushl
jmp
pop
arpl
and
jle
out
cld
inc
push
leave
push
push
adc
push
cld
mov
fisubl
mov
ret
and
mov
clc
cmp
mov
xchg
aaa
inc
clc
xchg
aas
bnd
mov
adcb
stc
sti
jbe
cld
or
add
jb
push
jae
lea
push
add
les
cmp
add
movsl
hlt
enter
inc
and
xor
rol
imull
dec
pop
ret
rcr
pushf
nop
or
or
mov
rolb
or
rcrl
sbb
inc
ljmp
cmp
push
jne
cmp
jae
inc
jmp
push
or
mov
inc
decb
lea
mov
movb
add
add
sbb
sub
mov
ja
es
gs
push
or
xchg
into
or
jne
jmp
test
cwtl
adc
mov
jmp
push
test
jne
push
rolb
mov
jle
in
pushf
pusha
xor
mov
or
push
jmp
or
orl
add
sahf
ret
lods
addb
dec
push
mov
sbb
cltd
inc
mov
int3
xchg
push
pop
adc
or
add
or
cmpsb
or
or
xchg
dec
cmp
add
jno
insl
jae
sti
push
fisttpl
jb
or
or
inc
cmp
push
cmp
mov
jb
mov
pushl
mov
xor
je
mov
or
jb
adc
jg
cmp
ja
cmpb
push
push
or
or
xor
push
or
push
or
push
mov
jnp
xlat
lret
inc
roll
pop
dec
mov
add
mov
jl
data16
sub
push
mov
xlat
inc
or
add
es
xor
push
cmp
adc
push
fwait
into
and
in
fists
add
mov
jmp
mov
adc
shlb
lea
test
jge
ja
cmpb
out
ret
add
and
push
xor
pop
stos
xorl
icebp
sbb
cwtl
mov
shll
and
lahf
ret
mov
sub
sbb
ret
sbb
xchg
push
addr16
cmpsb
arpl
sub
imul
pop
lods
test
sbb
cli
push
cmp
outsl
xor
test
cwtl
sbb
xchg
aam
adc
xor
mov
xor
and
sub
adc
jns
ljmp
pop
repz
xor
call
jge
pop
dec
aad
int
nop
icebp
pusha
jecxz
or
inc
jno
or
lods
aam
data16
mov
cmp
mov
jo
xchg
mov
mov
iret
jne
mov
mov
push
mov
ret
push
sub
pop
or
add
sbbl
or
pop
je
mov
test
pushf
mov
xchg
adc
movsb
pop
inc
adc
ljmp
cld
push
mov
repnz
jno
pop
mov
cmpb
pop
mov
sub
icebp
mov
test
mov
imul
int
rorb
cmp
es
xorb
cmp
movsb
enter
jo
shl
adc
aam
pop
adcb
push
cmp
lahf
mov
jge
sub
cwtl
xor
push
ret
mov
push
test
test
or
mov
int3
movsb
jo
mov
pop
sub
movsl
add
pop
dec
faddl
cmpsl
cmpsb
or
insb
mov
enter
push
add
ja
push
jg
or
sbb
dec
pusha
aam
adc
inc
adc
rcll
js
jne
and
xchg
push
fcoml
sbbb
or
mov
lret
inc
pop
test
fs
js
xorb
jle
arpl
mov
pop
test
push
cltd
js
cmp
fcmovbe
adc
sbb
xchg
fldl
add
hlt
lret
insl
mov
das
fldt
adc
mov
test
lret
test
mov
shr
sbb
mov
cmp
fsubrl
dec
jne
les
sbb
fs
ss
loope
add
jns
insb
cmp
pushf
add
pop
movsb
cmp
mov
shrl
xor
ret
pop
push
lods
mov
add
xchg
sub
xchg
cs
mov
sbb
ret
into
call
mov
dec
cmp
enter
sbb
sub
pop
and
lahf
add
push
cmpl
cmp
inc
adc
test
and
sub
push
adc
pushf
aas
inc
cmpsl
or
stc
push
push
adc
xchg
inc
fsubp
adc
shlb
xor
jne
cs
xor
dec
jns
or
stos
loopne
pop
pop
sqrtps
cli
cmp
push
jle
cmc
sbb
jg
jmp
lea
cmc
and
testb
inc
stos
movsb
xor
mov
xchg
inc
jmp
jnp
adc
pop
push
mov
mov
or
data16
mov
pop
rcrl
popf
sub
xor
add
js
add
and
push
xchg
xchg
inc
mov
fmuls
mov
xchg
mov
mov
xlat
decl
rcrl
jns
sbbl
or
sub
pop
and
enter
bound
mov
adc
or
add
jle
cs
sub
clc
fucomi
sbb
push
in
sub
jns
xor
js
jmp
roll
or
jmp
or
pop
lret
fisubl
into
mov
test
jns
lock
lock
cs
fsubrs
pop
call
push
jne,pt
push
rol
and
add
add
in
test
call
pop
icebp
mov
adc
adc
adcb
lret
xchg
je
and
call
inc
cltd
add
add
mov
scas
les
lock
or
fmuls
add
call
loopne
mov
movsb
das
sahf
int3
or
sbb
aas
push
sub
xor
gs
hlt
xor
jge
movsl
stos
movsb
das
adc
mov
outsl
or
or
inc
sahf
pop
adc
adc
sahf
mov
or
nop
roll
cmp
sub
push
cltd
cwtl
pushf
pop
xor
pop
shlb
inc
mov
and
inc
daa
decl
push
or
push
inc
and
mov
fs
movsb
or
jns
mov
push
inc
adc
sarb
ja
mov
scas
add
xor
mov
add
cltd
xor
dec
call
lods
sarl
push
and
ret
lock
push
cmp
jmp
and
orb
out
arpl
orb
loope
push
cmc
inc
sub
cmpsl
push
out
repnz
adc
stos
xor
xchg
js
out
jno
mov
sarb
push
mov
mov
out
sbb
addr16
loope
dec
cmp
push
test
xchg
dec
push
and
adc
cltd
int
in
in
inc
and
insb
test
add
pop
lods
push
and
xor
cwtl
xorl
fldl
aam
mov
mov
mov
lea
inc
add
jbe
roll
and
imul
xchg
pusha
loope
rcr
mov
or
jmp
andl
sub
stos
adc
mov
in
push
jns
and
mov
stos
push
in
loopne
xchg
push
sub
dec
sbb
xchg
test
sbb
inc
inc
xchg
xchg
inc
cmp
cmp
cltd
xor
and
imul
push
add
fdivp
inc
enter
pop
rclb
dec
xchg
push
or
popa
pusha
outsb
add
add
add
mov
mov
lods
fbld
pop
and
dec
test
es
lar
jo
mov
test
or
push
cmp
jno
js
inc
xor
es
insl
call
mov
cmp
ljmp
ffreep
add
and
adc
mov
mov
fsubrl
loopne
outsl
add
ret
push
lea
or
and
test
cmp
test
pop
push
pop
aas
data16
es
in
icebp
daa
jl
pop
and
nop
mov
addl
xor
test
adc
je
mov
sbb
adc
cmp
loope
movsl
rcl
les
iret
data16
jle
adc
or
sbb
pop
call
cmp
jl
jecxz
adc
bnd
cmp
jl
ja
stos
sbb
or
or
sbb
sub
add
cs
and
in
dec
add
das
fnstsw
dec
sbb
lock
testb
mov
push
imul
mov
sub
add
inc
cmpl
ret
xchg
jge
mov
das
rcrb
add
int3
fsubl
mov
stos
es
cmpsb
in
mov
cmp
call
add
or
push
xchg
sbb
push
xchg
clc
xor
sub
dec
pop
cmp
add
lret
orl
jno
push
out
or
xchg
aas
ficoms
rorl
out
lock
mov
pop
push
cmp
ss
cmp
sbb
and
mov
mov
cs
push
sub
xlat
lds
aad
push
adc
loopne
push
lret
mov
ds
mov
leave
add
push
and
push
mov
add
push
and
sbb
mov
and
nop
inc
nop
hlt
push
in
movsl
sbb
add
loop
incb
sarl
mov
call
push
and
mov
outsl
jne
push
insb
add
cs
pop
lock
out
mov
xchg
comiss
adc
sar
test
jb
inc
add
mov
test
adc
aad
push
popf
inc
dec
outsl
pop
sbb
sbbl
sar
dec
mov
cmp
jb
mov
mov
cli
rcrb
pop
push
push
scas
sahf
pop
add
xlat
in
pop
push
les
ljmp
lret
sub
push
imul
or
add
rolb
sbb
hlt
add
jecxz
jmp
mov
lea
gs
inc
or
push
push
pusha
daa
mov
testb
incb
insb
outsb
add
sbb
test
add
inc
add
mov
jmp
cs
mov
pop
int
xchg
dec
mov
jle
nop
test
and
mov
int3
dec
das
add
imul
adc
rcrl
call
inc
mov
sub
inc
fs
sbb
cmpsl
test
pop
mov
sbb
loope
aad
into
mov
out
sti
jne
or
or
ds
adc
sbb
mov
insb
and
repz
push
out
xor
lea
in
call
pop
daa
dec
xor
mov
inc
lret
and
or
add
mov
cmp
sub
test
ja
test
cld
movsl
loopne
or
in
jo
out
pop
mov
insb
pusha
push
adc
cmpsl
imul
popf
push
push
insl
adc
push
imul
and
dec
fdiv
and
mov
outsb
xchg
cmp
test
and
sbb
push
mov
mov
or
add
add
scas
push
arpl
popf
or
jmp
inc
fiadds
add
sbb
iret
test
and
out
mov
jb
adcl
mov
or
lahf
rclb
lock
inc
shlb
out
test
call
imul
push
lret
fsub
int3
aas
movsb
loopne
or
fdivl
sbb
icebp
cwtl
iret
cld
shll
in
jecxz
and
std
mov
stos
and
jnp
pop
mov
mov
push
sbb
loopne
nop
nop
sbb
or
cmp
es
xor
jb
scas
inc
adc
push
jnp
mov
in
push
push
add
insl
daa
ds
and
fisubrs
and
orl
add
jecxz
pop
fwait
mov
and
pop
jo
iret
and
fldenv
or
adc
pop
or
lods
push
mov
xchg
out
or
sbb
add
push
dec
sub
sbb
jb
cmp
lret
movsb
pop
xor
xor
daa
xchg
xchg
or
or
test
or
or
dec
push
fs
dec
in
adc
push
pop
cld
out
je
xor
pop
adc
pop
mov
in
popa
sub
mov
int3
nop
dec
cs
incb
mov
or
sahf
fsubrl
xor
fadd
push
movl
push
sbb
sahf
in
popa
push
sbb
mov
dec
mov
push
add
add
es
push
mov
sub
mov
push
pushf
xor
mov
sbb
nop
add
ror
enter
add
hlt
pop
cmp
testb
dec
cmp
adc
xorb
dec
jnp
fs
enter
inc
inc
cmp
xchg
cmp
xchg
enter
sbb
enter
or
xchg
or
out
loop
cs
clc
add
rorl
mov
push
adc
push
dec
int3
paddb
icebp
lret
xchg
or
dec
push
orb
cmc
mov
jmp
xor
or
add
mov
in
popa
lea
dec
sub
add
add
pop
jbe
mov
dec
and
inc
jmp
add
ret
mov
cld
push
lock
pop
sub
mov
loope
xor
pusha
gs
rolb
dec
and
loopne
pop
add
sbb
or
in
shrb
rclb
nop
or
sub
or
and
leave
mov
into
push
xor
sbb
outsl
rorb
push
sbb
cmp
ja
mov
jge
ds
pushl
jno
inc
or
sbb
adcl
push
mov
and
sbb
or
ja
dec
pop
mov
cli
ljmp
fst
jge
add
dec
and
inc
or
jmp
lea
sub
rclb
iret
outsb
and
add
jo
adc
xchg
add
push
and
shr
je
js
js
add
push
test
add
xchg
or
jb
or
or
ljmp
mov
inc
cmp
sbb
movsl
mov
or
cwtl
push
xchg
scas
add
jb
cmp
ret
and
pushl
mov
mov
mov
test
or
punpckhbw
pusha
fcoms
clc
adc
adc
cwtl
sbb
dec
int
pop
cmp
repnz
loopne
mov
imul
push
jmp
mov
jl
jl
orl
dec
out
or
shlb
mov
cmpsl
add
jo
or
test
hlt
ss
cmp
loop
add
scas
andl
movsb
test
sbb
data16
ljmp
mov
es
pop
lock
ret
dec
xor
bound
call
mov
inc
sarb
cmp
cld
test
fcoml
les
push
sub
mull
int3
sub
add
sbb
add
mov
fisubl
or
dec
push
in
adc
dec
movsb
xorl
fcmovb
mov
js
mov
push
and
mov
test
xlat
mov
ret
pop
pop
jb
cltd
leave
push
fstl
cmp
mov
movsl
out
xchg
cwtl
pop
test
pop
mov
add
pop
mov
xchg
or
test
stos
mov
mov
or
out
jae
pop
add
lock
hlt
cs
xchg
sub
stos
call
adc
stos
jno
mov
mov
mov
add
lods
mov
in
push
je
clc
daa
cli
mov
or
adc
add
jmp
mov
add
test
test
bound
jns
inc
repnz
pop
mov
pop
add
mov
xchg
or
sub
mov
add
lock
inc
lea
sub
mov
pop
mov
insb
add
les
sbb
in
sbb
inc
add
loopne
and
pop
popf
test
rcll
dec
shrl
adc
and
ss
inc
or
sbb
or
jge
mov
fs
inc
dec
xchg
rcrl
pop
lea
inc
or
jnp
popf
repnz
push
cld
xor
scas
aad
push
xor
sub
subl
xorb
lea
push
loop
add
and
push
pop
shrb
movl
push
cmpsl
push
dec
loopne
xor
dec
sub
ja
ja
rclb
repz
add
xchg
out
or
inc
jmp
rorb
cmp
and
bndstx
xor
ret
cmpsb
add
sahf
fidivs
xchg
add
fdivl
xor
sub
xchg
inc
add
adc
jne
pushf
jp
ret
push
lcall
mov
addl
dec
push
push
mov
cmpsb
dec
sub
sub
lock
push
dec
rcl
js
dec
js
and
or
pop
ds
push
lods
push
imul
sub
push
test
mov
add
pop
cmp
mulb
fwait
sub
roll
jnp
dec
cmp
jecxz
sbb
pusha
shlb
push
ja
push
sbb
ljmp
cmp
sbb
or
lock
push
sbb
jae
movsl
push
mov
adc
sbb
fadd
fnstenv
ds
sbb
scas
les
adc
adc
xor
adc
sbb
popa
add
shl
inc
test
or
inc
dec
push
mov
mov
mov
mov
lods
xor
push
inc
add
fdivs
inc
loopne
pop
andb
fcomps
arpl
outsb
add
jp
sbb
icebp
popa
xor
fdivrl
or
shrb
mov
repnz
or
cld
inc
cmp
or
mov
cmpl
and
cmp
dec
adc
enter
loopne
mov
nop
nop
in
adc
cmc
cmpsb
inc
subb
sbb
shll
or
add
xor
adc
or
or
aad
pop
and
fsubrl
cmc
hlt
dec
jmp
pusha
sub
addl
add
lret
insl
stos
js
push
cmp
add
inc
testl
push
push
mov
xchg
mov
pop
sub
icebp
das
dec
mov
inc
leave
inc
aam
mov
jle
xorb
sub
jg
mov
pushf
lods
dec
cmp
out
mov
test
mov
ret
popf
push
call
lock
in
jo
mov
icebp
fs
mov
aam
sub
fldenv
lds
xor
jmp
hlt
and
or
or
bound
jb
push
in
push
movsl
test
mov
clc
jo
stos
sbb
or
add
dec
orl
roll
hlt
std
orl
xor
loopne
mov
sbb
jo
sub
nop
or
push
cli
rolb
mov
xor
loop
adc
cwtl
add
addl
lock
loope
popf
addb
leave
fistpll
push
xchg
push
push
cmp
pop
mov
mov
xorb
pop
ss
mov
cmp
add
jne
jno
mov
out
xchg
or
sbb
push
daa
xchg
insw
sbbl
dec
movsb
or
adc
add
insl
in
and
fcoml
in
and
xchg
test
enter
cmp
sbb
pop
add
inc
sub
rolb
sbb
insb
xchg
pop
leave
in
call
repz
mov
sbb
add
sbb
dec
adc
daa
pop
mov
icebp
fs
pop
dec
lds
sub
dec
nop
jl
sub
daa
mov
inc
and
lahf
mov
push
fmull
repz
ficomps
and
pop
sahf
out
in
sbb
push
add
add
sbbb
xchg
mov
sti
fiaddl
and
sub
jle
add
call
adc
or
push
push
push
cmp
sti
enter
jmp
jae
mov
cld
loope
mov
adc
mov
ror
ljmp
pop
pop
jl
out
call
mov
adc
jbe
mov
add
shlb
gs
fisttpl
daa
pop
and
cmc
jmp
inc
into
sar
ja
and
pop
and
out
add
lock
incb
daa
andb
or
lods
sti
je
mov
jge
imul
jae
jmp
adc
popf
mov
movsb
std
pop
push
dec
cmpsl
pop
xor
push
fisttpll
fst
in
push
push
mov
jg
mov
lcall
xchg
pop
loope
adc
sbb
lahf
imul
cmpsl
cmp
sbb
inc
add
push
mov
scas
xchg
nop
aad
sbb
add
sbb
mov
je
pop
push
mov
and
iret
addr16
and
outsb
xchg
add
js
xchg
idivl
loope
adc
pop
icebp
add
sub
mov
adc
push
cmp
xor
xor
sbb
add
add
orb
jp
xor
mov
sbbl
xor
popa
repz
adc
clc
pop
or
daa
jmp
mov
ret
das
mov
push
xor
js
loop
dec
push
jle
jne
shll
xor
adc
js
and
adc
orb
lahf
ds
pushf
lea
jo
xor
jle
pop
test
push
push
jmp
cmp
pop
lds
push
or
sub
mov
in
sbb
lea
cmc
push
xor
xor
call
add
aas
mov
dec
jns
jp
ret
push
sbb
xchg
iret
xchg
int
add
add
and
xchg
pop
jge
inc
cltd
jo
and
sub
sbb
jle
add
addl
or
ja
shr
dec
test
xchg
jp
and
jg
xor
sub
adc
inc
or
inc
fcomps
dec
enter
inc
pusha
mov
in
testb
cmp
pop
mov
sbb
inc
bound
inc
or
sub
pusha
lea
push
mov
and
movl
and
pop
pop
sub
shll
mov
or
xchg
xchg
dec
mov
fs
sbb
push
or
add
sbb
or
leave
test
lahf
lock
sub
sti
je
mov
or
or
push
rcll
test
in
sub
pusha
inc
xor
js
ror
or
cld
fstpt
or
add
dec
add
and
or
sub
jle
add
xor
shll
cmp
push
sub
xchg
push
pop
add
xchg
cmp
pop
pop
mov
or
enter
je
jl
popa
outsl
pushf
popl
inc
fwait
dec
or
and
fstl
xchg
and
and
je
cmp
inc
add
cmp
mov
or
popf
add
mov
inc
inc
sbb
dec
mov
mov
adc
sub
jae
jmp
cmp
jae
ja
add
pop
clc
mov
std
sbb
enter
add
lret
mov
dec
pop
sub
or
pop
fstps
add
js
jb
and
loope
or
in
rclb
add
inc
dec
jb
sti
bound
xor
test
sbb
mov
xchg
pop
and
adc
mov
jb
movups
arpl
xchg
mov
pushf
adc
cmp
mov
xor
add
es
dec
inc
in
mov
sub
repz
and
mov
lcall
adc
mov
cmp
jbe
mov
lret
or
inc
and
adc
cmp
insb
mov
loopne
lock
cmp
inc
xor
cmp
and
lea
jnp
push
rclb
jne
push
sbb
dec
jo
xor
xor
push
cwtl
push
std
xchg
jno
int3
push
stos
mov
gs
or
sbb
or
testl
mov
imul
inc
mov
push
inc
loopne
xor
xor
mov
sub
push
int3
lods
cvttps2pi
scas
pop
adc
or
jne
aam
mov
mov
js
inc
sbb
adc
add
lds
adc
inc
popa
pop
inc
add
lock
push
subl
or
adcl
or
push
jns
mov
xor
adc
imulb
bound
fdivr
or
js
pop
out
mov
xchg
mov
scas
jge
pop
subb
push
or
jle
popa
jecxz
mov
movsl
sti
sbb
sbb
push
jmp
mov
lahf
daa
add
and
dec
mov
add
je
jae
lea
fcmovne
pop
movsl
sub
daa
js
xor
sbb
dec
or
mov
jbe
inc
je
pop
aas
mov
xor
mov
fs
xor
into
push
mov
outsb
add
sub
insb
clc
lds
popa
sub
shll
jmp
jne
add
add
cmp
repnz
data16
rorb
pop
jg
addl
pushl
dec
pusha
mov
jl
sbb
in
loopne
mov
sbb
cs
lret
inc
popa
pusha
mov
aas
sbb
lock
push
mov
adc
cmp
inc
test
stc
xchg
or
je
jecxz
jb
inc
cmpsl
mov
inc
movsb
push
push
sbb
xchg
movsb
inc
in
add
adc
movsb
pop
or
pusha
pop
insl
clc
jae
nop
cmpsb
cmp
pop
mov
in
test
in
scas
or
adc
push
xchg
sub
or
test
in
jno
add
adc
pop
testb
je
sbbb
inc
mov
mov
nop
jecxz
add
inc
jo
fmuls
addb
adcb
dec
push
loopne
mov
or
sbb
int
jne
jmp
or
jne
mov
or
jo
lret
rorl
jo
adc
cmp
pop
ret
push
sbb
sbb
in
mov
push
mov
les
adc
or
fucomip
sbb
jbe
mov
push
insb
add
dec
cmpsb
sub
jecxz
lods
and
shll
pop
cmp
add
mov
xchg
sbb
push
sub
movsl
and
and
icebp
lea
es
dec
mov
sbb
mov
cmp
shrb
sbb
add
push
test
outsl
inc
fstpl
mov
pusha
cwtl
int3
pushf
inc
stc
jnp
insb
fildl
insb
jmp
or
icebp
dec
inc
inc
std
out
nop
push
pop
sbb
in
xor
stos
in
sub
pop
lea
pop
test
test
daa
or
rcrb
lcall
jae
add
shlb
jne
mov
adc
mov
mov
sub
lds
inc
testl
and
lahf
sbb
jo
push
and
add
or
movsl
jbe
cmp
dec
jae
add
pop
or
pop
jg
sbb
loope
rcl
add
inc
push
dec
pop
ljmp
xorb
mov
outsl
addr16
mov
sbb
xchg
call
add
sbb
add
out
leave
fildl
mov
cmp
shll
sub
or
dec
gs
jmp
or
push
scas
sbb
xchg
and
add
inc
pop
arpl
adc
dec
test
rorl
and
ss
mov
or
push
rolb
cmp
dec
xor
xchg
push
icebp
xor
test
adc
adc
xor
and
outsl
fbstp
lret
cmp
pop
lret
or
add
sbbb
push
mov
lret
or
sbb
dec
pop
push
fwait
nop
aaa
cmp
xchg
sbb
les
jp
adc
jl
mov
sbb
cmp
lret
xor
push
pop
sbb
scas
or
sbb
pop
inc
sbb
imul
adc
sbb
sub
push
sub
mov
dec
cmp
aad
arpl
or
push
sbb
mov
mov
sub
fiaddl
in
fsubl
xchg
jb
lea
mov
lcall
jge
cmp
mov
sub
xor
or
push
lcall
cmp
loope
dec
iret
lods
lock
roll
and
icebp
movsl
jbe
dec
or
xor
inc
or
push
arpl
lahf
lea
mov
pop
or
cli
sbb
orl
mov
and
gs
iret
mov
sbb
dec
das
mov
ja
incl
push
movsl
xor
add
pop
jle
js
lock
jmp
jo
push
mov
and
cmp
divl
or
ret
jne
and
xchg
loopne
loope
cmp
add
and
add
push
push
cld
in
sub
pushl
pop
adc
nop
call
mov
lea
mov
fiaddl
lret
es
lahf
mov
xor
xor
adc
pop
in
push
sub
jmp
jne
pop
stos
cmpl
adc
sbb
pusha
add
pusha
adc
movsl
xor
ja
dec
cwtl
in
sbb
decl
loop
xchg
jae
adc
dec
mov
daa
lcall
popa
movsb
inc
sbb
lock
fnsave
or
jne
mov
push
adc
inc
in
or
pop
jmp
pushl
pop
mov
test
sbb
mov
push
inc
push
fs
cmp
jecxz
pop
les
arpl
scas
mov
test
test
or
int
or
cmp
mov
adc
movsl
jo
xor
adc
adc
xor
arpl
pop
adc
sbb
mov
inc
sbb
dec
insb
popl
push
outsl
test
adc
adc
jecxz
cwtl
and
adc
push
dec
xor
mov
sbb
fdivr
mov
sbb
pop
xchg
xor
enter
push
push
lahf
xor
pop
sbb
aam
sub
sbb
push
stos
sub
sub
dec
dec
push
mov
subl
jns
add
and
mov
rcll
aad
adcl
je
call
sbb
pop
fdivrs
pop
lods
mov
inc
cmpl
add
sbb
cmp
push
sub
repnz
mov
push
stos
jmp
mov
jecxz
add
fidivl
adc
adc
outsl
pop
and
mov
lahf
add
mov
call
xchg
pop
mov
mov
inc
adc
jecxz
or
mov
adc
loop
lcall
xor
cs
stos
popa
sub
inc
and
cmpsb
and
adc
sub
sbb
sbb
add
mov
outsl
or
xchg
jbe
mov
pop
sub
fs
xchg
les
mov
loop
std
cmp
xchg
sub
jge
call
inc
xchg
add
xor
jno
data16
inc
fdivrs
cmp
adc
pop
mov
enter
loopne
and
xlat
mov
rcrl
jnp
inc
dec
cmpsl
mov
mov
in
sarb
xor
addr16
cmp
movsl
xchg
pop
inc
dec
and
in
ret
sbb
xchg
imul
aaa
cmp
pushf
lea
or
adc
and
and
pop
clc
aad
fcoml
mov
adc
push
enter
xchg
push
ds
sub
xor
xor
pop
hlt
lock
jb
pop
push
orl
xchg
or
xor
cmp
dec
inc
jl,pn
inc
jnp
dec
xchg
xchg
push
and
les
or
mov
xor
rclb
push
inc
lds
sub
mov
orl
push
mov
or
jge
pushf
sbb
and
inc
mov
push
pusha
je
call
jo
in
push
int3
sbbl
pop
aaa
inc
lods
cmovbe
adcl
outsb
inc
dec
andl
pop
cmp
jg
lahf
addb
push
inc
ss
sub
xchg
inc
ror
pop
lods
sub
out
bound
mov
inc
dec
cld
es
mov
lods
sub
push
push
push
push
or
cwtl
dec
adc
mov
lea
int3
aas
test
dec
mov
dec
dec
cmp
push
imull
inc
test
jmp
test
and
xchg
pop
sbb
ja
lock
in
xlat
lcall
mov
sub
and
xor
push
lret
mov
sub
push
mov
jg
sbb
dec
test
push
sbb
es
ret
ljmp
movsl
bswap
std
mov
je
jns
jle
jle
adc
sub
or
and
leave
pop
insb
movsb
aad
int3
in
inc
enter
adc
int3
dec
mov
or
test
je
push
in
add
jle
rorl
xor
rclb
jp
adc
push
fwait
mov
push
cmp
pop
das
push
add
dec
cmpb
testb
jmp
sbb
sub
sub
in
lea
int
arpl
sub
in
loope
int3
or
or
jb
or
int3
rcrb
xor
xor
xchg
outsb
xchg
pop
xchg
dec
test
in
push
sbbl
aad
push
adc
pop
in
movsb
dec
pop
sbb
icebp
out
push
xchg
aam
cmpl
jne
out
sub
addl
push
xor
ret
cmpl
push
add
push
push
dec
mov
jne
sbb
pop
push
mov
cld
pop
push
jae
loopne
mov
mov
push
call
cmpb
das
mov
jmp
test
jl
cmp
and
or
mov
pop
or
xor
cmpsb
dec
push
lods
out
inc
addr16
mov
push
scas
xor
nopl
inc
xorb
mov
in
cmc
fdivrp
inc
scas
jae
ret
cmpl
test
cmp
loop,pn
in
cmpsb
mov
imul
or
ss
inc
mov
add
je
rorb
push
jmp
adc
mov
pop
inc
jo
sbb
fwait
jl
jo
jns
mov
pop
cmp
rorl
jle
mov
add
leave
and
lock
fnstcw
push
add
push
sub
adc
mov
xchg
lock
pop
outsl
fadds
jno
cmp
je
subl
or
rcrl
enter
lods
pop
stos
popa
int
xchg
adc
cmp
mov
fnstcw
movsl
add
pop
sbb
sub
cmp
mov
adc
mov
mov
mov
jmp
sarb
pop
cmp
in
mov
aad
sbb
xchg
xchg
push
xchg
inc
rcrb
jp
pop
mov
cmp
fs
out
rcl
stos
lock
mov
lods
and
dec
and
add
and
or
push
mov
mov
xchg
scas
mov
ss
sub
call
insl
icebp
call
pop
or
shrb
and
mov
and
mov
test
ja
jae
iret
out
jle
adc
or
les
or
mov
sahf
fucom
add
mov
push
sub
or
lcall
and
sbb
pop
fsubl
loope
pushf
mov
add
sbb
pop
test
arpl
sub
xor
jns
mov
fsub
popf
ret
nop
and
add
std
inc
ret
dec
cmp
jae
add
jmp
dec
sub
xchg
imul
inc
dec
add
add
sbb
test
mov
pop
adc
cmp
fs
insb
fstps
lcall
fstps
mov
fbstp
sbb
adc
and
sub
lock
or
or
push
fistpll
xor
add
and
pop
mov
mov
imul
jle
mov
mov
jns
in
lods
inc
push
push
dec
mov
subl
or
xor
mov
sbb
fwait
pusha
xor
add
push
call
addr16
xlat
push
xchg
or
dec
push
push
insb
sbbb
jmp
add
add
mov
sbb
lcall
dec
push
dec
lea
xchg
sub
sbbb
and
in
loop
shlb
pushf
mov
add
sbb
sub
cwtl
pop
stc
mov
xor
sbb
or
inc
push
sbb
mov
pushf
shlb
jno
flds
shrb
test
popf
shlb
movsb
adc
icebp
inc
dec
lea
cmp
fwait
lods
ffreep
inc
cmpsl
sbb
push
test
shrb
lods
add
iret
push
sti
out
dec
std
xor
mov
imul
push
push
push
and
and
mov
leave
nop
cli
pop
mov
sahf
dec
lods
popa
lock
dec
repnz
ljmp
das
pusha
loopne
ss
jno
clc
and
mov
inc
nop
sub
lods
xor
sbb
add
cmp
movl
lock
pop
das
jo
inc
aam
push
pushf
setl
popa
push
dec
mov
popl
test
jl
enter
ja
add
mov
push
mov
mov
and
or
or
je
push
inc
in
xor
clc
push
pop
leave
imul
hlt
jne
push
fidivrs
das
xchg
xchg
clc
mov
cmp
dec
and
mov
push
push
lea
mov
adc
sahf
fimuls
mov
shl
cmp
movsb
repnz
mov
dec
xor
mov
and
lahf
xor
test
into
jl
sti
add
sub
adc
fcompl
cld
adc
pop
or
pop
or
push
mov
add
int
mov
test
icebp
sbb
int3
mov
inc
rorb
cmpsb
outsl
add
sbb
fdivl
push
add
mov
or
jo
push
nop
cs
mov
fcoml
sbb
inc
sub
loope
push
hlt
sbb
pop
test
mov
cld
adc
add
dec
rorl
add
enter
cwtl
or
hlt
and
daa
iret
sub
or
inc
pop
outsb
adc
and
in
and
dec
enter
dec
pop
sbb
fs
movq
nop
clc
and
arpl
loopne
and
shl
sarl
sbb
adc
pop
and
enter
int3
sbb
pop
jmp
sub
adc
daa
mov
mov
push
pushl
push
lret
add
add
xor
mov
pop
out
pop
xor
das
lods
mov
pop
xchg
es
mov
or
add
mov
or
sbb
push
sbb
sbb
cmpsb
pop
imul
jbe
pop
cmp
daa
fadds
ljmp
cmc
cmc
in
xorl
insl
xchg
icebp
test
sub
push
push
lock
xorb
push
lcall
xchg
popa
adc
add
hlt
add
aam
sub
adc
aad
fpatan
dec
in
mov
push
mov
add
sub
sarl
rorb
add
fst
adc
inc
cmp
jp
and
sbb
pusha
scas
jg
push
xchg
inc
ds
adc
incl
jmp
les
mov
test
pop
mov
subl
push
add
movl
or
xor
lahf
push
inc
adc
jbe
xor
or
lea
mov
dec
inc
ljmp
mov
int3
int3
add
jnp
and
jbe
and
adc
cmp
sub
jbe
xor
adc
add
jg
fs
inc
and
inc
sub
cmp
dec
les
iret
sarb
jg
or
mov
scas
mov
cld
mov
cs
sar
cmp
fs
and
adc
and
sbb
push
inc
test
les
lea
and
inc
and
xchg
sbb
mov
adc
add
inc
loopne
add
aaa
add
movsl
out
xchg
repnz
je
js
iret
and
dec
fs
sub
les
iret
push
dec
push
js
mov
and
push
negb
clc
mov
sub
sub
cmp
xlat
xor
stos
or
sbb
sar
add
inc
mov
icebp
push
sbb
sub
loope
xchg
sbb
iret
xor
push
les
dec
cmpb
addb
inc
jmp
jne
cmp
jne
xchg
add
jp
add
std
insb
mov
mov
rolb
push
sbb
adc
mov
icebp
sahf
jae
sbb
jne
xor
sub
fiaddl
test
in
dec
add
adc
cmpsl
mov
mov
enter
sbb
outsb
jl
sub
jmp
push
pusha
push
adc
push
or
mov
popf
sub
sub
xchg
mov
add
cld
into
adc
into
cmp
fadd
fmuls
shlb
adc
cld
xchg
mov
stos
rol
movl
or
fadds
mov
jle
cmp
jle
pushl
sub
inc
aas
enter
adc
xchg
pop
lea
adc
and
invd
inc
les
cmpl
mov
add
movb
rcr
dec
mov
dec
ss
lods
aas
or
ret
push
push
and
cmpsb
mov
bound
push
sbb
or
push
push
clc
dec
add
adc
push
rorl
fisttpl
mov
dec
add
dec
xor
or
out
mov
mov
jbe
movsl
inc
pop
and
xchg
mov
or
sbb
stc
or
lock
decl
and
dec
mov
ret
cmc
xor
shlb
cmp
int
ljmp
push
inc
jne
ja
mov
pop
adc
or
jnp
dec
jg
loope
push
into
jecxz
sbb
dec
push
sub
test
mov
andb
pop
test
add
fs
mov
lahf
mov
xchg
test
mov
push
in
xor
test
push
pop
add
lea
xchg
mov
ret
or
or
cmp
jp
dec
test
or
adc
dec
mov
or
adc
add
call
adc
dec
mov
hlt
es
outsl
jnp
push
add
push
ret
xchg
dec
cltd
xchg
cmp
xor
pop
test
out
jae
adc
xchg
sub
jmp
add
push
jo
fcmovbe
imul
inc
lret
add
lods
and
xchg
aam
dec
push
or
and
add
cltd
sbb
call
es
xor
inc
pop
jmp
push
add
cmp
into
push
xor
xor
push
push
pop
leave
or
xor
sub
rep
sbb
mov
ret
adc
test
dec
cmp
loope
lret
flds
pop
cmp
mov
sbb
dec
sub
inc
in
pop
jg
inc
push
mov
fiaddl
sub
ret
add
data16
and
lea
enter
in
int3
mov
xor
outsb
xor
shrl
push
or
and
cltd
mov
bound
into
test
mov
lods
inc
adc
xchg
add
pmaxub
add
dec
rcrl
cli
xchg
daa
mov
les
cmpb
daa
test
push
mov
fisttpll
add
cmp
add
enter
insl
add
loopne
cmp
push
mov
loopne
pop
or
aam
aas
lock
push
pusha
je
inc
pop
xor
push
lods
pop
pusha
and
jo
add
sub
testl
push
push
xchg
inc
add
out
mov
add
orb
lret
xchg
xor
mov
sbb
and
fldl
testl
pop
push
or
je
mov
jne
cmp
pushf
rorb
mov
xchg
add
jmp
xor
xor
movsl
xor
xor
cs
mov
sbb
or
pop
xchg
rcrb
hlt
mov
adc
xchg
outsl
xor
cmp
sub
mov
adcb
push
or
fstl
mov
loope
inc
out
cmp
push
cmc
or
pop
xchg
pusha
pop
pusha
lock
les
lret
push
mov
sbb
adc
adc
cli
push
in
jnp
arpl
ret
and
gs
sub
in
cmpsb
les
mov
inc
ret
int
stc
jl
adc
inc
mov
sbbb
xor
je
adc
dec
cmp
or
inc
inc
lods
push
xor
rorb
push
sbb
and
lock
rorb
popa
and
cmpsl
push
out
sub
or
and
cmp
xchg
or
test
aas
pusha
xchg
pusha
inc
movsb
sbb
push
rclb
cmp
or
sub
push
xorl
mov
push
movsl
enter
adc
push
or
mov
cmp
mov
ror
test
dec
loopne
add
add
mov
push
nop
mov
movsl
and
shlb
pop
xchg
out
xor
cmp
stc
lods
sbb
push
add
mov
jns
xchg
test
stos
js
mov
inc
lods
popl
pop
and
and
mov
mov
mov
add
push
add
mov
sbb
pop
jmp
insb
pop
cmp
adcb
clc
orl
dec
test
or
stc
push
sbb
adc
hlt
sbb
inc
in
xor
cmp
inc
or
in
push
es
jle
mov
fiaddl
jo
push
and
push
inc
inc
push
fmull
add
inc
sub
in
jg
incb
sub
inc
in
addl
sub
add
fs
das
je
and
add
cmp
xorb
sub
out
nop
and
lret
roll
test
mov
mov
bound
es
sbb
loopne
in
in
push
xchg
cmp
push
je
out
sub
mov
jo
push
mov
add
nop
dec
inc
mov
dec
add
mov
fldcw
pop
hlt
xor
and
jb
stos
xor
mov
dec
pop
push
push
cmc
cmpsl
outsl
mov
add
rolb
incb
xchg
insb
jb
cmpsl
and
fcos
out
sub
xchg
and
call
xchg
std
mov
xor
or
and
sub
jne
or
jno
pop
cld
pop
in
inc
pop
pop
sub
dec
sub
sub
addr16
popf
or
nop
lock
cli
add
cltd
dec
add
xchg
xchg
pop
ds
sbb
dec
sbb
push
icebp
inc
cmp
and
es
push
dec
jmp
sub
sbb
je
push
xchg
mov
jmp
add
loopne
push
mov
jne
insb
add
loopne
pusha
or
xor
adc
std
adc
pop
pop
cmp
inc
fisubrs
adc
xchg
or
jmp
push
inc
ja
jns
mov
mov
push
mov
mov
jb
in
sbb
fwait
cmp
add
lcall
jns
and
sub
pop
cmp
movsb
mov
pusha
jns
mov
push
sub
sahf
add
xor
lds
jns
adc
mov
and
inc
aad
insl
push
mov
dec
and
outsl
xchg
fwait
adc
add
ja
adc
and
or
daa
mov
fwait
ret
cmpsb
add
jnp
in
loopne
iret
pop
sbb
ds
push
loopne
aam
and
jne
leave
fsubr
mov
push
in
movb
dec
xchg
es
push
jb
add
sbb
cmpsb
lock
xchg
xchg
pop
adc
sbb
icebp
push
cmpl
xchg
fldlg2
pop
aas
push
aas
call
cmp
push
enter
xor
mov
lret
push
adc
pushf
jmp
add
xchg
shrl
enter
and
xchg
data16
or
adc
jne
or
mov
sbb
test
jl
sub
pop
lods
add
addr16
inc
jb
dec
in
dec
and
cmpsb
lods
andb
cmc
test
incb
rolb
cmpb
inc
xlat
mov
add
cs
std
xor
inc
clc
movb
push
in
lahf
dec
xor
sub
cmp
pop
jl
pop
je
adc
adc
sbb
jo
dec
ret
xor
les
jae
loop
cmpl
dec
call
test
cmp
inc
push
xor
cmp
dec
lea
loope
mov
insb
pop
inc
jne
cmp
jns
outsb
and
or
mov
lock
or
cli
dec
adc
mov
mov
jle
mov
test
hlt
negl
xchg
lods
and
adc
dec
or
mulps
push
inc
in
and
or
pushf
dec
adc
mov
rep
shl
jecxz
mov
push
jle
mov
rolb
push
pop
inc
inc
sub
ret
sub
sub
inc
out
xor
and
test
out
push
inc
sbb
sti
mov
test
push
repnz
inc
cmp
jb
pop
pop
loope
jno
jge
jg
mov
or
frstor
clc
add
mov
push
add
mov
mov
add
xor
and
jmp
cmp
jne
xor
mov
out
stos
push
mov
stc
push
mov
fildl
jb
pusha
filds
cmp
pop
or
cmp
loope
std
aaa
adc
jbe
inc
cmp
testb
sub
push
loop
lahf
jbe
jg
jne
push
inc
icebp
push
sub
push
add
dec
cltd
mov
mov
shl
inc
add
jmp
jle
mov
mov
mov
mov
call
ja
push
add
mov
notb
daa
fcomps
leave
faddl
roll
push
loopne
mov
jmp
or
pcmpeqd
insl
add
push
dec
or
xor
sub
inc
sbb
outsl
adc
push
aaa
mov
rcr
push
pop
cs
add
xor
adc
sub
ret
dec
pop
push
adc
jbe
dec
jge
cmpl
or
dec
fnsave
cmp
pushf
push
adcb
and
or
dec
or
dec
or
and
xchg
push
mov
add
cs
mov
jl
cmp
push
mov
mov
pusha
xor
pop
jae
daa
loop
add
faddl
sub
sti
fsubrl
lcall
pop
aam
sub
mov
jmp
outsb
leave
xor
jge
cwtl
ss
mov
orl
iret
mov
add
pop
and
or
scas
mov
repnz
bound
dec
sbb
call
xor
pop
or
pushf
dec
add
mov
imul
dec
popw
push
arpl
je
mov
mov
cmp
fisttpl
insb
or
add
jmp
push
xchg
mov
jecxz
mov
daa
push
push
and
test
in
cmp
xlat
into
jl
or
test
xchg
ret
into
jp
roll
into
cmovne
push
dec
hlt
pop
int3
push
imul
and
mov
sbb
pop
pusha
or
out
xlat
jne
mov
mov
mov
shl
xchg
push
jb
jp
call
pushf
ss
je
outsb
rolb
out
xchg
movsb
stc
jge
repz
popa
loopne
cmp
jg
adc
ja
push
pusha
insl
jecxz
cmp
dec
aam
cmc
shll
add
and
jl
cmp
fdivs
mov
or
lahf
jne
test
cli
xor
out
push
or
iret
shll
dec
adc
jb
pusha
cmp
xchg
jne
and
jae
jecxz
xor
je
jnp
pop
pop
inc
addr16
cmpsl
xchg
in
adc
ret
fcoms
fdivrs
xor
mov
jbe
movsb
xchg
pop
or
jl
sub
subl
xchg
add
mov
or
lods
or
mov
mov
push
mov
add
cmp
and
xlat
xor
fistpll
or
js
or
xor
cmp
ss
pop
cwtl
add
mov
or
clc
enter
mov
xor
loopne
cmp
mov
pop
inc
pop
int3
lea
nop
test
mov
xor
cmp
pop
nop
push
sbb
xor
or
push
loop
pop
sbb
call
fcomps
adc
jae
scas
pop
sbb
lahf
jmp
pop
and
dec
fbld
push
jecxz
sbb
andb
mov
add
je
mov
inc
dec
inc
ljmp
outsl
push
mov
aam
inc
jg
jg
xor
mov
jbe
push
leave
mov
iret
in
pusha
or
jl
dec
pop
pop
cmp
je
jmp
mov
and
mov
add
jle
mov
mov
outsb
adc
sahf
lret
dec
gs
ret
sbb
sbb
inc
fcoms
jnp
push
jmp
mov
cmc
push
mov
insb
push
mov
push
xor
movl
push
daa
push
cmp
dec
and
ds
inc
fs
inc
in
loopne
or
je
adc
popa
push
in
mov
xchg
cmp
mov
dec
call
rorb
icebp
mov
pop
pop
sbb
xor
mov
scas
mov
xchg
sbb
mov
lcall
fcompl
xor
add
or
in
or
ss
add
cmp
xchg
push
imul
setp
mov
adc
in
jg
int3
fs
mov
mov
sbb
pop
or
fsubrp
jbe
leave
push
push
icebp
pushf
aad
add
stos
push
loopne
add
mov
ljmp
mov
inc
or
leave
adc
ret
xor
lock
jl
subl
je
and
loop
les
lcall
pop
push
cwtl
call
outsb
ss
xor
call
dec
in
sbb
mov
shrb
rcr
mov
repnz
jns
inc
jg
sub
test
call
loop
inc
adc
push
jb
xchg
nop
cs
pop
adc
add
cmpsb
sub
and
or
mov
dec
add
inc
or
mov
or
and
test
sub
dec
xchg
push
aam
and
pop
rorl
sub
add
aad
pop
hlt
mov
adc
add
inc
sbb
push
mov
roll
jnp
push
les
push
adc
nop
or
inc
adc
pop
ret
roll
aaa
lret
pop
or
fxch
fst
inc
pushf
idivb
mov
cmp
push
mov
dec
shr
jbe
data16
cmp
jbe
aad
push
pop
fdivs
pop
mov
imulb
xor
add
bound
shlb
xor
add
jl
mov
enter
shlb
sbb
add
pop
fsubr
outsb
add
cmp
push
idivb
inc
pop
mov
rcll
sarb
cmpsb
sub
jo
inc
daa
mov
imul
inc
push
push
adc
jno
jge
jmp
cmp
pop
inc
jmp
or
dec
shll
fadds
inc
mov
xor
ljmp
loopne
cmp
inc
mov
pop
mul
xor
loope
adc
add
xchg
cmc
inc
loop
clc
or
push
xchg
aas
js
int3
test
sbb
adc
push
inc
mov
je
pop
shr
jge
push
add
add
jmp
adc
ret
sbb
jne
or
sub
sub
dec
dec
insb
add
loopne
jno
adc
dec
dec
outsl
enter
push
jo
dec
scas
faddl
addb
out
es
xchg
mov
shll
fdivrs
loopne
aad
int
inc
push
xor
push
mov
xchg
mov
pop
fs
adc
cmp
ret
mov
and
fs
push
dec
fcoms
or
pusha
movsl
sbb
push
pusha
mov
jnp
and
mov
push
orb
cmpsb
adc
adc
aaa
out
inc
jo
and
mov
lea
aaa
dec
push
imul
les
imul
sbb
dec
adc
sub
aam
sbb
lret
cwtl
int3
lea
nop
loopne
cltd
add
jne
sbbb
mov
and
adc
ss
jbe
pushf
mov
mov
push
cli
cmp
jb
push
adc
jae
mov
push
loope
push
insb
sbb
loop
lcall
mov
xor
and
mov
cltd
nop
shl
lock
jl
xor
mov
or
inc
add
test
mov
lea
test
aas
rorb
adc
sbb
subl
aad
lea
loope
add
and
ret
mov
sbb
push
push
add
mov
add
add
imul
push
insb
lock
push
adc
adc
pop
notb
mov
sub
mov
call
in
push
ja
xchg
xchg
cmp
push
subb
outsb
push
pusha
push
mov
ret
pop
xorb
push
mov
xchg
rclb
shlb
ror
fdivs
push
xor
jmp
cwtl
xchg
sbb
pop
sbb
popf
jmp
adc
push
in
enter
test
add
es
add
rcl
or
sub
pop
pop
test
movb
jecxz
shll
mov
je
scas
cmp
inc
or
jae
sahf
das
scas
sbb
push
push
jae
arpl
out
repz
jne
push
push
je
inc
jge
fidivs
or
and
dec
call
cmp
push
push
sub
rcrb
adc
sbb
cmp
xchg
test
sbb
xchg
cmp
cmp
xor
cmp
sti
leave
aam
pop
or
or
out
push
or
scas
mov
fs
pop
fisubrs
stos
dec
or
and
enter
mov
pusha
rcrl
movb
mov
push
pop
nop
jmp
add
ss
mov
inc
cmp
jmp
push
add
shrb
je
fdivs
jecxz
subb
mov
addl
inc
pop
xor
sbb
nopl
push
sub
mov
xor
ja
shlb
dec
sbb
jnp
dec
push
xor
fmul
jb
jmp
inc
lea
pop
shlb
push
pop
pop
and
jne
fcomp
jmp
lea
stos
rorl
outsb
push
mov
mov
stc
fldt
and
add
in
jmp
adc
adcb
fiadds
stos
and
or
lcall
push
mov
pop
faddl
pusha
sub
sub
dec
imul
or
adc
inc
and
add
cmp
dec
shll
pusha
fs
shll
js
mov
jl
fsubr
mov
repz
add
push
inc
push
sub
mov
jnp
xchg
inc
mov
add
mov
scas
sub
and
test
rcrb
cmp
adcb
int
gs
adc
and
ljmp
shlb
xor
xchg
add
mov
rcrb
fadds
sbb
xor
add
and
xor
push
xor
cmp
shlb
and
ret
shlb
mov
xor
test
xchg
xchg
or
pusha
call
adc
push
clc
adc
and
ljmp
push
incb
test
popa
mov
xchg
or
pop
add
inc
adc
push
je
or
bound
pop
mov
mov
decb
sti
and
addr16
cmp
sbb
and
mov
adc
add
sbb
ror
pop
inc
repz
or
lret
out
das
add
push
ja
cld
sbb
add
jne
mov
jb
inc
jo
cmpb
mulb
jmp
push
cmp
dec
imul
lea
push
jnp
and
xor
xchg
jne
and
loope
jp
test
in
push
in
mov
insb
sbb
xor
xchg
jo
shlb
in
push
inc
ljmp
add
and
nop
add
test
call
pusha
push
mov
add
icebp
adc
je
push
adc
lret
push
adc
ret
add
cmpsl
jg
inc
lock
adc
cmp
mov
push
add
test
or
adc
jge
or
or
decb
enter
repnz
out
add
iret
cmp
xor
cmp
pop
lods
movsl
jnp
clc
popa
jge
add
imul
lret
sub
rolb
ret
roll
mov
push
shrb
mov
test
jne
stc
lock
lret
push
stc
je
pop
addb
insl
repnz
in
mov
sub
sub
pop
mov
add
mov
sub
and
test
mov
stos
fisttpl
or
ret
adc
enter
shrb
xchg
mov
inc
test
mov
lret
clc
insl
mov
movsl
pop
lods
push
fidivrl
rorb
jg
loop
jmp
cmp
in
or
jmp
sahf
cwtl
dec
xchg
cmpsl
sbb
invd
stos
jns
inc
pusha
sahf
ret
push
dec
or
or
xor
jno
adc
mov
andb
addl
add
nop
lea
sarb
cmpl
test
das
sub
cmp
test
inc
add
mov
enter
pop
cmpps
inc
jmp
add
xchg
sub
sbb
lea
add
lods
int
push
jl
jp
and
push
mov
adc
sbbb
mov
add
dec
shlb
xchg
jo
cmp
push
sbb
lea
addr16
and
sbb
push
pushf
or
lods
push
mov
push
or
sub
fs
push
sbb
pusha
pusha
insb
insb
or
cmp
movsb
mov
or
sbb
mov
pop
negl
mov
aas
fimuls
xchg
pop
cmp
je
mulb
cmp
roll
mov
and
out
lock
cmp
je
xor
cmpsb
loope
mov
sti
clc
adc
lds
xchg
inc
pop
xchg
jmp
lea
pop
fsubl
dec
leave
add
xchg
push
subb
push
add
mov
mov
adc
lock
in
cld
lock
ret
pop
cmpsl
addb
insl
idivl
push
adc
mov
xor
nop
into
xor
push
pusha
js
ss
mov
mov
add
mov
into
add
push
mov
dec
inc
ja
stos
lea
aas
inc
sti
jge
pop
cs
push
in
inc
aam
adc
xchg
lock
leave
inc
push
je
cmp
iret
shlb
mov
sbb
sbbl
sahf
shlb
and
rorb
movsl
xor
sarl
out
orl
test
ljmp
sbb
push
pop
push
jbe
pushf
cwtl
shrb
jle
mov
les
bound
sbb
jns
adc
test
push
cmovnp
mov
jo
popa
pop
xchg
sbb
and
cs
adc
int
mov
cwtl
call
pop
mov
aas
jne
roll
xor
xchg
call
cld
cltd
imul
fistpl
data16
mov
cwtl
fidivrs
das
inc
lods
sub
push
test
sub
pusha
loopne
adc
fs
mov
push
push
cwtl
dec
push
lea
rclb
dec
dec
loope
lea
lcall
push
or
sbb
mov
add
lods
add
adc
pushf
mull
in
push
fcoms
jecxz
mov
push
and
in
pop
test
xor
loopne
lock
jbe
and
fs
incl
aam
mov
shlb
pop
arpl
enter
negb
inc
or
subl
sbb
sarb
adc
ja
fmul
inc
std
and
fs
inc
loopne
sub
pop
js
pop
cmp
je
push
add
add
push
test
sbb
sbb
shlb
lret
cmp
je
aaa
cmpsb
ja
dec
mov
clc
fimuls
insl
mov
sbb
jg
jne
arpl
sbb
adc
sbb
mov
or
adc
sbb
sbb
pusha
pop
imul
dec
mov
ljmp
lods
adcl
enter
inc
or
sbbl
xchg
rcll
push
pop
into
inc
xchg
sbb
sub
cmp
fstpl
push
outsb
cmpsb
push
xchg
lret
lds
clc
aad
lldt
jl
movsb
and
lea
mov
xchg
add
cmp
lods
lods
sarl
fwait
inc
sbb
sbb
or
or
pop
and
push
cmp
out
push
jmp
xchg
cmc
add
jecxz
hlt
pushf
push
out
push
push
mov
popa
mov
and
outsb
xchg
shrb
adc
push
test
pop
xchg
sbb
sbb
pusha
in
mov
ffree
xor
imul
adc
add
mov
aam
sbb
into
xor
adc
loope
adcb
jo
push
cli
or
imul
sahf
cmp
push
xchg
popa
rclb
cltd
cwtl
bound
push
pop
push
scas
cld
xor
mov
or
stos
sub
dec
mov
mov
fs
push
rolb
and
movzwl
aad
aas
sbb
jg
inc
movsb
jmp
imul
xor
dec
push
mov
out
inc
or
sub
mov
adc
cmp
push
pop
lea
and
push
push
xchg
sub
and
add
push
mov
mov
push
mov
mov
inc
dec
cwtl
jne
mov
sbb
cmpsl
out
or
repz
or
inc
sub
imul
sbb
push
loope
add
cmp
jp
sbb
lock
ljmp
and
cmc
cmp
push
in
push
or
sbb
adc
jmp
xchg
lea
push
push
inc
push
test
inc
cli
sbb
xor
jmp
add
movsb
adc
xor
jp
data16
mov
push
pop
sub
rorb
jo
ret
inc
adc
adc
xlat
nop
decl
sub
xchg
xor
fstpt
add
xor
mov
pop
out
stos
fldl
xor
push
push
ret
andb
xor
call
or
adc
push
and
ljmp
scas
xchg
jns
push
test
icebp
xor
xor
jnp
icebp
sub
push
lea
push
test
adc
push
jo
pop
jmp
xchg
fimuls
out
pushf
adc
inc
roll
lret
mov
sub
int
push
and
int3
ficomps
cwtl
fbld
out
in
inc
or
ret
fistps
cs
add
ficompl
rclb
cmp
ret
or
pop
xor
and
loope
mov
xchg
mov
cmpl
outsl
inc
push
jp
adc
xor
push
xor
add
subb
fwait
daa
pop
adcl
add
lcall
insb
xor
sahf
pop
inc
xchg
nop
cmp
mov
daa
inc
pop
xlat
mov
ror
inc
jno
inc
jo
fimull
push
shl
push
mov
mov
cmp
loop
lea
fimuls
push
cmpb
inc
das
sarl
aas
mov
dec
rcl
inc
or
sbb
pop
pop
pop
pop
jge
inc
rorb
mov
jns
jb
in
mov
and
and
and
andl
adc
les
mov
sbb
and
push
add
mov
pop
lret
lock
pop
mov
cmp
lds
sbb
ret
pushf
test
shll
push
movsl
xor
pop
xor
pop
mov
jae
push
jl
adc
pop
test
loop
inc
mov
mov
mov
adc
test
push
rcll
mov
das
bnd
dec
cmp
push
sbb
push
mov
add
and
shr
pop
push
js
add
sbb
pop
cmp
adc
xchg
mov
adc
aam
sbb
add
mov
sbb
jp
jmp
sbb
jmp
pop
cmp
mul
fs
push
nop
or
bound
leave
insl
mov
test
rol
or
je
push
or
lods
push
cmp
fcmovne
add
jne
mov
xor
inc
sbb
testb
inc
pop
xor
hlt
sbb
pop
mov
mov
add
jmp
xor
and
xor
xchg
xlat
roll
inc
xor
or
fmull
dec
push
fcoml
pop
mov
push
aam
out
inc
mov
mov
mov
scas
push
mov
in
movsb
lahf
sbb
pop
add
test
nop
lret
aas
pop
jbe
xchg
mov
mov
and
cmp
mov
jo
add
inc
add
pop
cmp
orl
jge
mov
aas
dec
pop
out
out
push
push
test
cmp
je
cmp
mov
jne
rol
cld
mov
push
fistpll
add
lods
cmp
jne
dec
cli
cmp
pop
mov
outsb
and
mov
push
push
cmp
mull
mov
adc
loope
push
mov
sbbl
mov
xchg
or
int
add
inc
shll
mov
inc
inc
lods
ret
shlb
jnp
adc
pushf
pop
xlat
adc
repz
mov
dec
or
and
fcoms
adc
inc
sbb
push
xchg
orl
mov
pop
push
mov
sbb
roll
adc
pop
mov
movsl
lock
pushl
ret
jmp
punpckhwd
repnz
pop
sbb
push
lea
loopne
push
mov
subb
negl
cwtl
inc
push
je
sub
test
add
test
jmp
push
inc
push
aaa
add
pop
loop
dec
xor
jb
movsl
negl
ds
xlat
adc
or
aas
frstor
add
xor
add
push
sbb
orb
xchg
cwtl
push
xchg
dec
mov
cmp
add
out
and
lods
or
fists
addl
and
and
add
std
jno
push
shlb
push
jns
movsb
adc
subb
cmpsb
daa
add
or
inc
je
imul
mov
ss
outsb
imul
add
xchg
xor
shlb
repnz
and
fcoms
pop
inc
add
sbb
or
sahf
mov
mov
out
aam
scas
sub
negl
pusha
es
mov
push
mov
inc
aad
xor
or
push
push
in
je
es
and
adc
cmpsb
fcompl
xor
cmp
inc
sub
int3
cmp
je
mov
fsubrl
mov
xorb
push
or
jae
push
mov
add
add
dec
gs
jmp
insb
and
out
or
insb
notl
push
push
stos
mov
mov
cmc
dec
insb
add
pop
add
subb
les
mov
mov
nop
or
addr16
sbb
dec
sti
mov
adc
add
testl
jne
sbb
xor
mov
and
dec
mov
dec
push
mov
sbb
imul
rcrl
fldenv
in
inc
add
and
sub
pushl
mov
jbe
fdivrs
cmpl
int3
and
int3
psubq
movb
dec
in
call
sbb
pop
adc
inc
insb
shr
mov
add
add
into
dec
adc
cmp
fcompl
hlt
push
inc
xchg
sbb
or
pusha
insb
std
mov
clc
decb
adc
int
dec
aam
out
add
mov
jne
adc
jge
or
cmp
cmp
outsb
mov
sbb
jnp
adc
je
push
aam
fisttps
push
push
pop
adc
adc
rclb
xchg
jne
pop
jns
pusha
xor
nop
mov
jl
rorl
dec
insb
jecxz
repnz
or
xchg
add
int
test
add
inc
xor
xchg
loope
js
push
sbb
xor
orb
shlb
fcmovnb
pop
inc
push
sub
and
push
lcall
or
add
cmp
adc
push
imul
movsl
addl
insb
pop
cmp
sbb
pop
cmp
mov
jg
call
in
nop
or
adc
adc
movb
cs
pop
cli
mov
push
cmp
je
fadds
push
mov
xor
sbb
daa
test
jne
jl
mov
add
dec
add
fstps
push
pop
mov
dec
test
lea
or
sub
cvtpi2ps
aaa
jbe
jns
or
sbb
dec
sub
insb
fs
or
test
add
or
xchg
push
xchg
pop
mov
add
mov
jo
fisubl
ss
in
outsl
sbb
pop
xorl
sub
loopne
jle
fidivs
pop
pop
inc
cmc
push
adc
lea
pusha
dec
xchg
mov
mov
pavgw
sub
xchg
xor
and
push
mov
stc
orl
loope
push
push
loop
push
lods
cmpsl
and
xor
xchg
cli
lods
push
jne
or
and
in
lea
sbb
cmp
cld
movsl
lret
mov
push
push
mov
jge
push
xor
or
or
push
popf
pop
fs
xchg
nop
pop
or
inc
cwtl
sub
pop
or
sahf
lea
in
lahf
sub
cmp
jo
lds
idivl
add
sub
pop
and
mov
pop
mov
cmp
mov
jbe
testl
call
xor
mov
and
call
pop
ret
or
dec
jge
sbb
or
cwtl
cmpb
shr
cmp
loope
xchg
and
or
je
sbb
lret
sar
sub
and
out
inc
dec
sub
push
movsb
ss
into
mov
cmp
aam
push
pushf
jns
mov
mov
xorl
mov
orl
lock
add
fbstp
and
in
and
sbb
xor
dec
imul
xchg
adc
mov
cmpsb
mov
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
mov
mov
jae
push
push
xor
les
fstpt
sbbl
sub
pop
cltd
or
aam
aas
add
dec
xor
in
xorb
test
and
sub
mov
sbb
in
dec
lds
inc
bound
gs
inc
aaa
popa
push
adc
and
add
testl
repz
jae
jb
mov
push
mov
push
or
xchg
shrb
or
jmp
jnp
mov
and
cmc
pop
mov
push
jl
lods
xlat
add
ds
repnz
mov
shll
or
xor
aaa
adc
xchg
or
mov
sti
xchg
cmp
cmp
mov
pop
push
push
call
adc
sub
inc
jmp
inc
ss
in
adcl
xchg
adcb
xchg
mov
inc
push
push
inc
mov
adc
or
xor
dec
lock
add
rcr
push
push
fs
and
mov
add
int
loopne
add
clc
adc
add
idivb
cmp
pop
xor
mov
dec
stos
and
dec
pushfw
adc
mov
push
ret
outsl
pop
or
pop
jl
in
idivb
ja
je
or
je
or
sub
xchg
scas
inc
rcl
cmp
stos
mov
cmpl
mov
push
push
fists
or
loope
jnp
lahf
negb
push
jmp
cmp
adc
dec
movsl
test
push
cmp
pop
push
inc
mov
push
inc
add
lds
and
xor
add
icebp
and
scas
pop
push
cmp
add
shr
loope
out
mov
mov
ret
and
mov
mov
test
movsl
std
ss
sub
adc
je
shlb
sub
inc
ret
push
fisttpl
adc
and
ret
mov
loopne
mov
test
test
and
rolb
add
aad
push
adc
mov
inc
push
or
xchg
inc
mov
aaa
icebp
cmp
jg
or
je
sub
add
movsb
stos
mov
jmp
data16
adc
add
nop
adc
in
pop
pop
or
ds
out
mov
push
adc
push
inc
add
inc
mov
js
push
or
mov
xorb
popf
pop
or
aam
adc
dec
sbb
add
int3
repz
push
mov
or
push
popf
and
mov
aam
xchg
pushf
inc
ficoml
aas
pop
push
shl
or
add
and
sbb
adc
add
notl
adcl
and
idiv
das
lock
add
mov
inc
push
inc
push
mov
push
xlat
sbb
and
pop
ret
call
dec
les
loopne
push
dec
inc
push
loopne
inc
xor
aam
cmp
fcomp
adc
xor
or
push
bnd
add
popf
lea
or
out
adc
push
push
cmp
jne
push
or
lcall
insb
std
fcoml
test
jmp
movsb
nop
add
adc
lds
fwait
out
les
adc
leave
sbb
jecxz
iret
leave
sub
or
lret
adc
test
xor
in
xor
mov
push
lea
pop
fdivrs
repz
sbb
iret
movsl
cltd
call
push
and
push
push
jmp
or
and
std
movsl
push
sub
aaa
mov
push
or
iret
rclb
and
adc
in
add
enter
aam
cmp
fcompl
test
mov
enter
inc
in
adc
aaa
sbb
pusha
push
xlat
fldl
lret
inc
scas
push
ret
fs
pop
imul
and
shlb
cwtl
out
popa
add
clc
inc
push
sbb
popa
pop
test
jno
fwait
call
cmp
cmpsb
hlt
pop
and
push
adc
jg
pop
dec
in
mov
jp
xchg
sbb
fldenv
dec
addl
fisubl
mov
sbb
sbb
mov
test
popa
push
std
mov
sbb
sarb
and
or
movsb
in
jl
movsb
xor
or
jmp
jle
test
xor
shll
dec
cmpsl
xchg
push
hlt
inc
xor
lret
out
add
xor
adc
push
xor
pop
lea
push
mov
push
sub
xchg
les
outsb
or
daa
movsl
mov
xor
pop
mov
dec
or
rolb
sbb
mov
popf
int
push
lahf
dec
in
sub
dec
push
push
sahf
cmp
or
inc
push
sub
invd
in
cwtl
mov
xlat
sbb
fcoms
push
insl
mov
shlb
inc
jb
cmp
lcall
push
and
dec
movsl
pop
ret
push
ret
stos
pop
setne
pop
in
dec
movl
sub
mov
add
lock
pop
adc
mov
sub
cmc
mov
and
cli
xor
fiadds
cmp
lret
mov
into
xchg
add
aam
fdivrs
xchg
dec
les
sub
out
push
out
add
mov
add
jg
cmp
pop
cmp
xor
jo
sub
outsl
dec
ret
pop
in
xlat
push
xor
clc
je
push
loopne
xor
incl
xchg
cld
inc
sbb
dec
inc
js,pt
and
movsl
pop
inc
inc
fs
jp
fs
push
pop
add
xor
push
jmp
pop
in
jnp
mov
int
lret
mov
add
into
das
add
into
ds
loop
sbb
or
xor
dec
push
popa
mov
dec
lahf
jne
ret
insl
sub
push
aam
add
add
push
or
xlat
xor
ja
pop
scas
inc
sub
test
push
jo,pt
jne
int
push
push
jns
or
loopne
xchg
mov
test
sarb
in
mov
mov
pop
movsb
mov
int3
add
daa
push
addl
adc
push
arpl
mov
mov
hlt
and
call
add
add
push
mov
sti
or
or
pop
jne
es
add
adc
shl
test
cli
test
sbb
push
shrb
fcompl
shl
imul
clc
add
punpckhbw
add
loopne
jl
lea
shll
test
cmc
dec
dec
sbb
or
clc
add
sahf
ret
jl
sbb
inc
mov
and
push
inc
push
add
or
dec
add
in
or
mov
inc
mov
mov
shlb
cmpl
push
add
add
imul
mov
bound
cmp
flds
jnp
enter
sahf
cmpsb
jnp
xor
or
scas
and
jge
jns
sbb
xchg
xchg
or
lock
xor
out
sub
push
push
xor
inc
mov
sahf
push
pop
inc
enter
and
imul
loope
hlt
pop
sbb
or
loop
mov
push
out
mov
sbb
mov
and
in
or
test
cmp
adc
sbb
mov
and
xor
in
adc
daa
out
stc
icebp
cmp
fidivs
sbb
rcll
int
aaa
stos
arpl
ds
adc
jge
xchg
mov
popa
sbb
xor
icebp
cmpb
mov
rcr
sbb
xor
call
jp
stos
push
adc
and
call
mov
dec
or
push
test
xor
das
mov
push
sbb
adc
push
adc
and
imul
or
mov
add
fwait
push
nop
add
push
loopne
jbe
sti
add
jl
sub
rcll
inc
dec
dec
adc
jmp
or
push
cmp
movups
add
mov
adc
jmp
in
and
adc
mov
mov
xlat
dec
lcall
sbb
cmpsb
xchg
inc
pop
leave
dec
rorl
sti
mov
inc
stc
sub
add
jbe
cmp
repnz
lret
movsl
mov
push
mov
pop
and
pop
pop
fwait
call
push
add
ficomps
gs
push
add
cs
and
mov
lock
adc
inc
insb
dec
std
lea
push
mov
add
add
nop
je
icebp
popa
shrl
sub
mov
push
sbb
mov
loopne
or
andb
and
dec
dec
jnp
sub
dec
mov
add
mov
mov
mov
lods
fwait
cltd
fsubr
lret
mov
mov
or
je
adc
sti
dec
call
es
or
or
sbb
xchg
lret
ja
xchg
add
or
sbb
push
sahf
pop
es
insb
add
xchg
or
add
fs
mov
and
lahf
iret
inc
pop
push
and
xor
lea
popl
ja
test
in
mov
push
mov
jo
sbb
imul
inc
push
sub
push
scas
xchg
stos
in
xor
cmp
mov
bnd
sub
push
and
cmp
xchg
push
sahf
or
cmpl
xchg
or
add
mov
xchg
out
add
or
mov
movsb
sbb
or
xchg
mov
cmp
cmp
mov
enter
mov
lret
dec
in
or
and
repnz
dec
fsub
mov
push
arpl
test
push
test
stos
lcall
xchg
jl
lods
ds
mov
or
dec
repz
lods
push
add
mov
pcmpeqw
and
cmpb
bound
add
cvtps2pi
jecxz
pop
adc
aam
or
inc
mov
pop
adc
xchg
lea
sti
mov
xchg
inc
cmp
sbb
or
pushf
adcb
jecxz
out
add
xor
xchg
push
sbb
or
adc
push
movsl
cmp
push
dec
sbb
das
ret
cwtl
fsubrs
dec
loope
pop
sbb
mov
mov
jge
loopne
inc
inc
jecxz
jo
jno
mov
or
cmpsl
sub
cwtl
scas
mov
pop
or
mov
sub
mov
repnz
push
jo
fnstenv
loopne
pop
or
and
loopne
in
push
in
dec
in
dec
scas
in
call
jb
add
jp
cmp
and
dec
jno
add
lock
push
js
mov
sbb
adc
xor
pop
ret
xor
or
and
fsubrs
mov
std
repz
dec
sub
lcall
dec
call
adc
cmp
pop
enter
add
push
test
push
and
les
les
adc
mov
xchg
add
inc
pop
mov
js
cwtl
mov
xorb
jle
mov
xchg
popf
mov
int3
or
jne
mov
cmp
dec
or
push
ljmp
push
or
xor
aaa
push
fwait
dec
repz
and
or
int
or
cs
loopne
mov
aam
push
mov
jp
dec
push
push
xor
mov
mov
mov
fnop
stc
scas
add
rclb
push
or
cld
es
sub
loopne
xlat
sbb
inc
dec
rcrb
mov
xor
cmp
jge
es
and
adc
mov
push
push
and
jb
add
loopw
jb
mov
jbe
mov
add
xchg
push
lds
pusha
adc
cli
mov
or
mov
mov
mov
inc
orl
or
mov
cwtl
shll
roll
imul
mov
jle
ds
add
inc
jmp
mov
pushf
and
mov
push
ficoms
pop
mov
xchg
sbb
mov
or
dec
sub
loopne
mov
mov
movsb
or
mov
enter
sahf
or
jge
jle
icebp
or
jge
aam
nop
xchg
mov
push
push
lock
mov
les
cmp
cmp
or
cmp
mov
push
pop
jae
insl
outsb
jmp
dec
add
ds
leave
mov
insb
push
and
jnp
jbe
cmp
cmp
add
or
ljmp
stc
mov
cmpsb
fsubl
cmp
sbb
stc
and
nop
test
decl
pop
push
out
sbb
popf
test
ja
add
pushf
mov
insb
aad
sub
mov
imul
dec
push
insb
mov
and
pusha
imul
mov
jmp
xchg
popa
jg
xor
cmp
jns
add
insl
xorb
rolb
push
cmp
scas
lods
or
add
ret
pop
fs
mov
cmp
jbe
ror
scas
cltd
xor
leave
push
xor
xchg
push
lret
push
dec
orb
pop
cmp
fldt
lods
imul
sub
adc
sbb
jge
insb
shlb
lock
mov
add
dec
mov
add
and
arpl
inc
mov
push
test
push
add
pop
push
xor
or
loopne
hlt
xor
dec
push
stc
add
test
ds
xchg
push
push
cmp
jo
add
mov
mov
inc
inc
cmp
push
inc
lock
pop
leave
inc
cmp
jmp
int
pop
pop
push
js
nop
faddp
xchg
jbe
mov
mov
xchg
adc
lea
add
pop
pop
sub
adc
pusha
scas
jb
cmp
sbb
mov
add
rorb
call
cmp
scas
sbb
inc
or
or
sub
mov
push
addb
fcomp
cmp
jnp
push
decb
fists
aaa
cmp
push
add
mov
xchg
mov
mov
outsb
ljmpw
or
clc
je
push
mov
push
mov
cvtps2pd
popa
fbld
add
testl
xor
stos
lret
and
adc
dec
cmp
sahf
push
test
addb
inc
or
loopne
cmp
pop
lods
inc
fdivs
andl
out
inc
push
mov
loop
and
and
or
lock
pop
push
dec
repnz
sub
movsl
adc
nop
dec
loopne
and
int3
and
add
lods
insb
lea
pop
cmp
lea
mov
pop
push
and
mov
and
sbb
xor
sub
or
fsubl
je
or
add
movsb
adc
xor
add
cmp
or
adc
jge
cmp
setbe
sbb
adc
sbb
mov
pop
jnp
pop
popf
data16
pop
ret
gs
cmpsb
inc
movsl
mov
push
lods
dec
dec
pop
mov
sbb
sub
stc
in
or
movsb
sub
cmc
aas
lods
sub
orl
mov
popa
adc
mov
in
xor
outsl
dec
filds
ficomps
xchg
pop
loop
dec
or
fcoml
mov
in
dec
xchg
scas
push
xor
cld
pop
pusha
push
jb
sub
add
movl
imul
mov
lea
xchg
add
js
inc
sub
mov
inc
test
negb
jb
mov
loopne
xchg
pop
jl
mov
dec
dec
shll
lret
push
xchg
mov
add
jbe
adc
xor
pop
mov
clc
lock
mov
dec
sbbl
or
push
imul
inc
jo
jns
mov
mov
push
xchg
mov
and
ss
andb
jne
and
and
push
adc
mov
in
es
das
mov
xor
mov
aam
push
in
mov
shlb
or
lret
les
cmpsl
xorl
add
sub
std
sbb
xor
jo
andps
and
cltd
pop
fcomps
popa
jmp
add
lock
add
ret
sbb
push
je
shrb
scas
out
sub
sbb
adc
add
je
ret
sbb
cmp
dec
ja
fistpll
clc
sti
add
and
push
ljmp
fsubrl
loop
call
fcompl
mov
sub
addb
pusha
outsb
sub
sbb
pop
add
testb
inc
inc
cmp
jb
repnz
nop
pop
movzwl
aaa
lods
add
or
pop
repz
or
push
sbb
or
gs
cli
mov
test
add
or
mov
ficompl
cld
repnz
cld
push
xor
dec
mov
neg
sbb
inc
je
and
jp
inc
inc
inc
mov
enter
add
outsl
pop
rcrl
stos
inc
fbld
pop
addl
in
mov
fimuls
cmpsl
addb
daa
inc
push
mov
test
pop
out
sti
jl
test
sahf
fldcw
imul
mov
inc
mov
cmc
sub
mov
cmp
sbb
or
sbb
push
mov
jle
dec
add
jmp
pop
mov
lahf
ret
in
cmp
and
cmpsb
mov
xchg
shll
push
xor
sub
cmpsl
lahf
push
jg
push
fdivr
xor
ficoml
scas
inc
pop
fwait
cli
pop
sub
repnz
sub
xor
repnz
dec
in
aam
stc
dec
xor
pop
and
pop
add
cmp
jg
movl
add
sbb
add
mov
jl
aas
inc
inc
dec
loope
movsl
sub
cmp
mov
andb
dec
push
jno
inc
cmp
push
ss
das
movsl
and
fidivs
inc
add
nop
sub
jmp
sbb
jo
test
mov
mov
jns
sub
out
jnp
icebp
pop
or
pop
out
push
icebp
es
stc
mov
push
cmp
mov
add
cmc
pop
pusha
push
ror
ret
xchg
ss
call
ret
push
sbbl
sub
xchg
xlat
jmp
imul
das
add
std
dec
add
or
mov
jnp
xor
je
ret
xchg
push
mov
shll
ja
cmp
cmp
cvtpi2ps
mov
cmp
lret
jno
dec
loopnew
xchg
inc
adc
adc
xor
insb
xor
add
testl
cmp
rclb
dec
insl
and
lea
fwait
jge
sub
rep
bound
dec
sbb
or
adc
jmp
sub
jae
xor
or
shlb
add
pushf
pop
pop
inc
sbb
andl
mov
adc
cs
sub
test
jo
cltd
push
stc
jae
push
push
mov
cld
jne
clc
and
push
mov
ficoml
adc
push
icebp
pusha
jnp
imul
push
jno
push
in
adc
dec
xchg
add
push
js
mov
cmp
fld
mov
xor
jbe
inc
xchg
push
mov
adc
cmp
fcmovne
scas
and
stos
cmp
xor
test
and
andl
inc
add
cmp
xor
jb
ds
andl
hlt
add
mov
incb
mov
or
hlt
add
xor
mov
call
mov
outsb
or
or
xchg
lods
sarl
push
sbb
arpl
iret
stos
cld
sub
and
xor
pop
xchg
pop
mov
dec
inc
testb
lock
mov
sbb
aas
mov
cld
clc
pop
test
xchg
mov
add
lret
loop
or
xchg
inc
jnp
pop
adc
push
push
xchg
push
cmpsl
hlt
adc
call
ljmp
adc
dec
stos
mov
inc
add
call
push
push
sbb
shlb
orb
mov
pop
xor
inc
push
and
pop
pop
rorl
jg
es
mov
ljmp
cmpsl
jo
push
push
mov
xor
and
cmp
mov
adc
arpl
lods
repz
and
add
or
lock
sbb
test
rcrl
xchg
and
sarb
dec
inc
popa
aas
imul
lods
shlb
push
scas
jmp
jge
sbb
or
dec
movsb
dec
xchg
jo
nop
add
push
es
js
rorl
push
lahf
mov
adc
and
je
mov
loop
adc
sbb
pop
cltd
sbb
xor
or
outsb
or
and
add
ljmp
sbb
ret
sbb
push
add
xor
and
iret
add
add
imul
dec
mov
mov
xchg
in
sarl
adc
sbb
jle
sbb
cmpsb
xchg
cmp
inc
sbb
loop
fs
adc
adc
push
xchg
add
jge
rclb
es
add
inc
pop
mov
dec
adc
adc
test
inc
adc
mov
imul
pusha
and
sub
and
pushf
testl
cmc
sub
adc
rcrl
cmp
pop
cmp
jp
lock
cmp
dec
adc
pusha
dec
test
lea
add
outsb
cmp
je
mov
add
movl
aam
mov
sar
cmp
jbe
or
add
rorb
lret
dec
test
lock
inc
ret
into
inc
aaa
lcall
cmp
faddl
xchg
sbb
repz
mov
add
mov
in
xchg
jp
pop
lea
pop
xchg
push
stos
or
cmp
add
lock
pusha
out
mov
lea
mov
fdivp
jbe
sahf
add
aas
imul
movsl
cwtl
push
andl
pop
cmp
jns
pop
scas
xchg
pop
jl
pop
in
mov
push
scas
add
lea
lea
xchg
nop
leave
or
push
addl
mov
sbb
test
pop
push
pop
sbb
inc
stos
push
push
sti
push
or
sub
pop
fcoml
add
push
mov
jo
pop
rcrl
gs
add
mov
int3
or
dec
dec
inc
xchg
push
call
sub
jns
xor
into
lret
adc
jge
mov
mov
scas
mov
arpl
dec
add
jle
idivl
cwtl
outsb
sar
popa
fxch
dec
sub
cmp
adc
scas
in
add
cmp
jb
pushl
ja
inc
adc
add
lcall
mov
popa
and
mov
xor
push
shrb
outsb
inc
popa
adc
add
pop
inc
sub
cmc
imul
mov
push
mov
and
push
sub
sub
adc
sbb
inc
and
pop
push
movsl
pop
shlb
push
pop
adc
push
or
inc
pop
mov
mov
inc
push
jo
xor
cmp
cmpsl
int
scas
in
mov
push
mov
shlb
out
insb
shlb
or
rolb
sub
fnsetpm(287
and
cmp
jbe
nop
add
ja
daa
cmp
outsb
fstpt
fisttpl
nop
arpl
ja
add
jnp
sub
dec
enter
dec
or
mov
cmp
sbb
jmp
fdivl
and
xchg
invlpg
jnp
das
addb
loop
cld
or
xorl
push
and
xor
and
push
pusha
mov
mov
dec
xchg
push
jecxz
adc
push
movsl
addr16
push
in
ret
jp
xchg
insb
imul
mov
ficomps
mov
call
out
and
ret
adc
aas
and
pop
enter
enter
dec
and
and
and
and
movsb
es
mov
faddl
in
pop
daa
or
nop
add
nop
sub
sub
nop
add
push
pop
or
jmp
push
mov
mov
in
add
push
hlt
mov
xor
or
xor
mov
mov
mov
nop
ds
dec
loop
jnp
inc
ljmp
pop
cld
or
filds
leave
mov
push
mov
out
xchg
fcmovnbe
shll
das
pop
sbb
scas
hlt
xchg
inc
aaa
sbb
adc
stos
mov
dec
mov
dec
in
or
adc
inc
adc
ret
mov
dec
add
dec
or
imul
sbb
testb
adc
and
lret
add
dec
lds
xor
pop
iret
clc
mov
jnp
pop
mov
lcall
inc
mov
jnp
push
mov
cwtl
push
sbb
icebp
inc
jl
jmp
dec
xchg
cmp
sbb
sbb
push
add
push
sbb
or
dec
jl
fisttpll
push
jl
pop
inc
imul
and
xor
lret
push
add
mov
pop
mov
push
mov
add
stos
push
fidivl
pop
loop
or
push
pop
ret
lods
testl
ret
fcomps
push
and
mov
addb
ror
pop
jl
add
push
or
add
cmp
test
add
jne
push
inc
cmp
push
or
or
pmullw
xor
mov
jge
and
ftst
dec
int3
in
mov
or
or
mov
add
adcb
sbb
nop
dec
sbb
push
adc
ja
jne
and
adc
imulb
je
push
adc
push
daa
add
inc
pusha
jg
pop
orb
mov
jbe
mov
es
lds
pop
aam
add
xchg
xlat
sub
cmp
ja
mull
sub
in
jg
out
add
push
mov
mov
jmp
or
or
add
dec
xchg
adc
outsl
xchg
adc
lock
xchg
sub
mov
movsb
cltd
push
pop
lock
ss
push
and
das
or
sti
jg
aas
mov
sarb
sbb
mov
sub
add
xor
imul
cmpsb
nop
fnstenv
xchg
xchg
data16
lock
bound
lods
push
lock
das
inc
mov
mov
mov
or
repz
test
cmp
or
out
or
testb
add
loope
or
fnsetpm(287
aaa
cmp
dec
cmp
jmp
add
cmpl
dec
mov
jb
aaa
das
or
rolb
rclb
mov
add
xchg
fsubrl
dec
sub
mov
fistpl
mov
in
aad
jmp
push
or
popa
add
outsb
stc
inc
or
mov
insb
and
mov
fcoms
xor
fsubrl
mov
aas
adc
dec
les
pop
jb
jge
idiv
xor
inc
and
mov
call
or
fstl
in
pop
shrb
pop
std
cld
hlt
cmp
cltd
stos
and
lock
mov
lcall
adc
outsl
xchg
cmp
mov
or
push
lock
into
xor
enter
lahf
lcall
aam
add
add
or
cmc
out
ljmp
push
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
mov
cmp
mov
mov
cmpsb
cmp
mov
jge
mov
pop
and
cmp
mov
cmp
je
cmp
je
jne
pop
adc
and
popa
push
mov
adcb
and
insb
adcl
and
icebp
xchg
mov
add
sub
andb
fiaddl
xor
adc
cmc
movsl
mov
jp
mov
cmp
jl
int
mov
mov
jl
inc
xor
fiadds
in
add
adc
pop
sub
jge
xchg
pushl
lds
push
notb
xchg
mov
mov
mov
inc
inc
mov
dec
xor
dec
ret
adc
stos
mov
js
test
sbb
cmp
insl
cmp
xchg
mov
imul
subb
mov
dec
lock
or
adc
mov
in
or
insb
stos
mov
fsub
push
test
push
add
jl
in
dec
jp
jne
gs
mov
add
dec
sub
inc
addr16
mov
sbb
out
pop
xorb
aaa
push
add
inc
ffreep
and
add
or
cmp
mov
sbb
jle
dec
or
mov
mov
or
xchg
mov
pop
push
or
ds
test
mov
mov
jb
xchg
pusha
jo
sub
or
sub
add
mov
and
inc
loop
cmp
dec
test
das
sbb
fistl
mov
in
gs
sub
xor
or
sahf
out
pushw
pop
pop
pusha
fs
ds
or
or
add
sbb
push
cmp
mov
shrb
jne
fmull
mov
lods
sub
cmp
mov
push
sub
and
cmp
sbb
nop
movsl
mov
mov
dec
daa
or
adc
mov
and
jo
or
adc
push
aad
adc
stos
or
inc
push
push
mov
movsb
push
cmp
push
add
out
lods
ja
leave
push
inc
pop
cmp
cmpsb
pop
add
mov
or
lret
testl
pop
or
nop
icebp
dec
sti
imul
xchg
ret
sbbb
inc
aaa
popf
outsb
mov
dec
inc
aam
fs
or
sbb
outsl
push
test
inc
mov
cmp
xor
fwait
push
gs
popa
mov
xor
mov
popf
repz
cmp
xchg
in
jmp
outsl
por
inc
xchg
or
nop
and
add
dec
arpl
or
sub
imul
adc
xor
inc
jmp
inc
cmc
icebp
mov
jl
fucomi
mov
movsb
adc
lea
mov
cmp
dec
xor
push
cwtl
mov
push
ret
pop
das
call
stos
das
movsb
or
fists
inc
sub
test
sub
test
mov
dec
cmpsl
fcmovnb
cmp
mov
lahf
cmpb
dec
call
and
adc
mov
ret
stos
inc
cmp
jmp
test
pop
hlt
in
cmp
shlb
sti
jne
loope
or
mov
movsb
out
add
and
daa
je
cmp
mov
adc
jg
pop
push
push
jb
mov
or
push
or
jmp
leave
inc
adc
test
xlat
lods
xchg
add
xor
dec
add
jle
je
pop
clc
mov
dec
add
and
mov
js
jl
xchg
shll
data16
mov
jne
push
int
insl
inc
repnz
jmp
and
roll
icebp
rol
push
mov
cmp
push
add
xchg
in
or
sub
addr16
rcll
add
jnp
add
dec
cmp
and
das
sub
lds
xchg
cmp
or
mov
add
xchg
xchg
sahf
enter
in
inc
stos
and
adc
sbb
roll
dec
mov
shll
in
fcomps
and
shrl
pusha
or
and
jge
xor
add
and
das
gs
add
jle
into
push
mov
movsb
scas
add
loopne
vmread
rcl
sbb
xorb
inc
cli
sub
push
adc
pop
sbb
mov
add
mov
or
inc
push
pop
aaa
lods
add
push
sarb
mov
aaa
inc
push
hlt
jg
mov
jecxz
dec
xchg
int3
test
cmp
xor
test
sbb
test
lcall
orps
push
sub
subb
loop
xor
fbstp
push
lret
sub
pop
repnz
repz
or
sub
lea
mov
lret
pop
ret
cmp
fs
add
jne
push
push
push
dec
inc
adc
or
adc
es
pop
out
adc
cmp
fcom
imul
inc
add
mov
push
adc
call
mov
mov
or
adc
dec
cmp
je
test
insb
add
or
lret
addb
mov
data16
pop
rcrl
lods
xchg
jo
dec
dec
sahf
or
pop
fcmove
adc
mov
push
ja
scas
push
push
adc
or
jecxz
sub
ja
add
and
int3
data16
lea
popf
arpl
cmp
out
sbb
pop
push
xor
data16
outsb
lret
xor
add
jmp
adcl
lea
xchg
dec
mov
mov
mov
and
or
mov
push
push
push
adc
fst
out
aad
inc
dec
jmp
aad
push
cmp
or
push
pushl
jae
in
cs
push
sub
call
dec
inc
sbb
mov
mov
mov
sbb
push
ds
sub
add
sub
lock
adc
bound
lcall
add
dec
adc
gs
or
test
sbb
mov
add
push
fdivrs
sbb
pop
je
fldl
cmp
lea
fstpl
dec
in
fistl
pop
rorb
jne
adc
iret
outsl
inc
add
bnd
push
divb
or
repz
clc
jne
or
jne
or
lahf
or
add
fnop
inc
lock
out
lret
andl
sub
and
xchg
dec
cmp
dec
xlat
mov
mov
push
enter
adc
cmp
push
sub
mov
mov
sbb
jnp
fstl
jecxz
sbb
movsb
fsubs
jle
sub
sbb
xlat
cwtl
rolb
pop
out
rorb
dec
jnp
add
cmp
dec
dec
lods
inc
enter
push
push
or
xchg
imul
pop
push
push
sbb
push
shll
fsubrl
mov
and
mov
jbe
jne
push
add
pop
mov
sub
or
mov
movsl
pmaxub
mov
push
push
sbb
das
inc
sbb
sub
add
loope
xor
dec
or
fmull
jb
push
jmp
or
fidivrs
pop
sbb
jbe
or
push
ficoms
mov
rorb
cld
pop
push
js
lods
dec
movb
adc
mov
ja
incl
pop
push
push
mov
cmp
pop
lods
inc
add
adc
add
out
ds
push
out
repnz
pop
loopne
pusha
mov
pop
xchg
cmp
nop
mov
push
push
inc
rclb
mov
push
daa
mov
orl
add
cmpsl
lods
inc
je
stos
adc
stos
adc
lds
push
pop
leave
in
jb
shlb
ja
cmp
fwait
pop
xchg
movsb
mov
dec
pusha
xor
ja
int3
test
mov
add
mov
std
lods
cld
leave
sub
imul
mov
int3
or
add
jno
cwtl
addr16
sbb
repnz
add
or
pop
les
pop
lods
or
fstl
inc
jo
faddl
fs
or
rorb
and
or
xor
ret
push
pop
imul
inc
inc
arpl
or
fs
fmulp
or
mov
sbb
in
call
xor
out
in
inc
pop
test
adc
shlb
cmpsb
pop
rclb
fs
xchg
movsb
add
xchg
and
add
test
inc
rorl
sub
pop
xor
dec
xchg
out
push
mov
adc
pusha
cld
test
icebp
sbb
or
mov
fbld
iret
add
and
test
insl
arpl
push
shlb
jge
popa
inc
cltd
and
push
push
sub
sbb
lds
inc
and
push
and
sub
and
or
adc
mov
fs
add
add
xor
je
test
push
cli
pusha
inc
mov
fisttps
scas
icebp
cs
cmp
jl
enter
sbb
shrb
inc
movsb
lods
xor
fs
sbbl
lods
test
add
adc
or
lods
mov
push
rolb
cli
lahf
dec
test
cmp
pusha
lret
insb
test
push
mov
xchg
pop
or
xor
popf
inc
jecxz
inc
in
lock
imul
push
pushf
adcb
jne
stos
rol
or
test
xchg
pop
in
shlb
push
das
movsb
ret
dec
mov
or
aaa
movsl
mov
push
out
xchg
dec
ljmp
or
inc
or
add
jp
and
mov
inc
mov
cmp
daa
mov
mov
pcmpgtw
mov
fdivs
push
popa
cmpsb
popa
xor
dec
sbb
je
dec
cwtl
arpl
and
mov
fsts
or
ret
or
inc
add
xor
push
cmc
dec
add
aam
mov
jno
loopne
jo
inc
data16
cwtl
jge
int3
add
or
xor
sub
inc
push
pop
pop
dec
test
lahf
clc
adc
inc
cwtl
int3
cmp
imul
movsl
movsl
xor
or
nop
sbb
pushf
lcall
inc
data16
add
cmp
add
ret
imul
mov
subl
add
daa
int
pop
fstl
sub
ja
push
insl
fdivrp
cmp
movsl
iret
loope
push
aad
pop
add
adc
cmpsb
dec
add
sbb
add
movsl
int
push
xor
and
inc
stos
and
cli
or
and
gs
je
pop
inc
sub
add
xchg
test
mov
xor
xor
out
mov
dec
lock
adc
sti
or
sub
and
mov
andb
jnp
aad
jno
test
pop
and
and
inc
dec
push
ror
inc
add
ret
jo
inc
inc
pop
nop
mov
add
push
test
pop
add
sbb
or
enter
mov
or
stc
mov
shlb
push
xchg
cs
mov
jecxz
daa
fstpl
adc
sbb
push
or
icebp
in
dec
xor
push
fs
adcb
and
movsl
lods
push
sbb
aas
inc
sbb
add
stos
sub
mov
inc
scas
xchg
adc
pop
dec
sub
pop
jnp
sub
add
sub
jg
movsl
pop
les
or
mov
repnz
sbb
mov
mov
pop
insl
xchg
mov
movsl
ret
movsl
jmp
mov
push
enter
mov
es
in
push
insl
add
sub
scas
xchg
add
or
push
addb
nop
addr16
jp
and
test
add
test
mov
push
add
roll
or
jp
push
add
ljmp
lock
ret
dec
movsb
and
inc
imul
enter
sbb
js
ljmp
scas
adc
test
push
enter
sub
rclb
stos
add
mov
sbb
outsl
and
shrl
je
mov
push
jl
mov
xchg
lret
push
clc
dec
xchg
idivb
xor
shlb
in
mov
lods
jne
cmp
mov
and
test
add
cli
push
and
or
add
flds
xchg
xor
inc
inc
insb
test
inc
test
xchg
jno
sub
stos
xchg
inc
and
jl
daa
rolb
fstps
test
lods
add
test
mov
pusha
out
mov
clc
test
sti
cld
popa
jne
pushl
cmpsl
out
push
add
mov
push
add
and
mov
add
mov
and
cwtl
shl
push
mov
push
xor
mov
mov
subb
mov
dec
push
mov
dec
rolb
lahf
addb
add
imul
dec
dec
icebp
dec
push
jp
add
mov
push
xlat
mov
sub
push
adc
and
outsb
mov
jmp
pop
add
xchg
ret
lea
fld
orl
dec
fcompl
add
mov
test
adc
push
stos
ret
inc
xchg
jmp
add
adc
sbb
int3
iret
push
es
inc
dec
xchg
add
leave
call
push
icebp
call
sbb
push
push
adc
stos
xor
movsl
jno
sarl
test
outsb
add
cmpl
lds
in
sbb
inc
out
xor
cmp
push
das
out
sub
fsubl
jne
les
adc
sub
inc
mov
xchg
xor
icebp
mov
cmp
jbe
sub
cwtl
cld
adc
and
sub
test
xchg
mov
scas
outsl
or
lsl
rcrb
data16
mov
and
scas
loop
xchg
pop
pop
sbb
push
lock
std
cmpsb
mov
dec
add
pop
filds
add
xor
inc
aam
fiadds
sbb
je
adc
or
fmull
cwtl
inc
pop
test
aas
inc
out
sbb
cwtl
inc
and
push
ss
jmp
stos
inc
lods
fidivl
ret
xchg
in
loopne
adc
xchg
xchg
in
or
mov
or
pushl
inc
sub
push
xchg
or
aaa
mov
and
jae
push
xor
cs
or
popf
or
mov
shrb
movsb
aas
adc
iret
test
mov
test
rolb
rol
mov
add
subb
sub
data16
cmpsl
push
test
js
rcll
js
pusha
inc
push
or
mov
add
add
jo
in
sbb
inc
mov
dec
nop
push
cmp
es
pushf
jmp
pop
xor
pusha
aad
call
pop
jb
addb
jo
inc
loopne
test
or
inc
rcr
insl
push
mov
xor
inc
stos
inc
shlb
movsb
or
imul
or
xor
add
cmp
movsb
enter
inc
cltd
inc
es
dec
dec
push
inc
fidivs
sub
scas
outsl
sbb
inc
or
mov
ficoml
push
xchg
fwait
mov
cmp
adc
inc
sbb
and
fwait
pop
dec
sbb
cmc
sbb
movsl
sahf
pop
ljmp
adc
push
push
or
sbb
sub
loopne
jo
or
pop
gs
rolb
into
and
jecxz
mov
and
cmp
xor
or
mov
pop
mov
test
pushf
and
lcall
adc
xor
hlt
inc
push
and
xchg
movsb
push
cwtl
and
push
popa
cmp
cmp
jns
sbb
mov
mov
xor
and
and
addb
lds
dec
xchg
xor
mov
or
xor
dec
loopne
sub
adc
dec
lods
cmp
dec
inc
stos
enter
dec
add
scas
mov
xchg
mov
cmp
js
mov
sub
xchg
or
or
popa
lock
xchg
jb
adc
js
dec
es
sbb
jo
pop
lret
sbb
or
mov
sub
jne
aad
pop
jb
popa
mov
dec
mov
in
or
xchg
sub
adc
das
sub
and
inc
shlb
ss
xor
ret
cld
jnp
pop
add
faddl
mov
add
jnp
push
lods
orb
xchg
inc
clc
ljmp
jo
arpl
push
aaa
iret
xor
dec
fldcw
mov
nop
mov
test
xor
subl
pop
mov
and
xchg
mov
add
pusha
cmp
adc
sub
mov
rorl
sub
int3
packsswb
jle
push
sbb
add
nop
push
xlat
popa
in
pop
mov
jb
jne
scas
aam
push
pop
movl
test
adc
inc
aad
mov
shlb
inc
dec
cmp
fldenv
lock
stos
popl
mov
outsb
add
pop
add
push
adc
inc
mov
mov
mov
pop
and
xor
xor
push
in
insl
cmp
or
jbe
mov
jecxz
and
mov
in
sbb
and
js
xor
or
ja
push
xor
push
in
add
int3
js
sbb
pop
push
cmpb
or
dec
movsb
movsb
call
add
mov
cmp
or
push
push
jge
pop
or
sub
aas
dec
fcmovbe
jb
inc
call
nop
or
xor
add
xor
aas
and
and
inc
movsb
gs
ljmp
push
inc
wrmsr
mov
hlt
jmp
iret
bound
fstps
push
pop
adc
sbb
leave
adc
pop
add
inc
bound
inc
clc
sbb
lcall
shlb
or
enter
je
add
inc
mov
pop
lods
push
icebp
fimuls
movsb
fisubs
cmp
inc
add
mov
in
and
or
or
arpl
or
stc
mov
orl
stc
fisttpll
mov
pop
icebp
cmp
arpl
jne
dec
dec
les
sarl
ret
faddl
cmp
icebp
and
lret
fdivrs
test
cmpsl
out
fld
pop
xchg
dec
imul
in
xor
sbb
mov
push
adc
ret
or
adc
sbb
and
push
sub
pop
xor
push
dec
sub
fisttpll
ret
movsl
mov
fldl
mov
loopne
les
adc
lock
jp
push
cmp
popf
mov
and
ss
fldl
jge
mov
aam
jns
shrb
ja
sbb
fstpl
and
insl
clc
push
pop
popf
addl
jge
pusha
nop
out
cmp
add
in
mov
mov
fsub
pop
fsubrp
out
cmp
push
out
into
mov
and
clc
iret
dec
add
add
pop
add
dec
mov
data16
xor
push
rcrb
dec
stos
insb
and
add
push
xchg
adc
sub
dec
je
add
andb
es
and
add
or
xor
xlat
inc
sbb
and
sub
push
mov
mov
sbb
inc
xchg
out
sbb
push
xchg
in
xorb
xor
mov
fucomi
push
add
js
frstor
in
push
push
dec
sub
sarl
jns
movsl
jnp
add
clc
movsl
outsb
push
adc
fmull
mov
mov
ja
add
sbb
jle
sub
and
push
xchg
iret
nopl
push
adc
lea
jmp
push
ja
sbb
repnz
dec
sub
fildl
and
sahf
pop
adc
adc
push
pusha
enter
add
test
push
stc
adc
pushf
and
push
xchg
out
adc
lea
les
sbb
daa
jns
xchg
fcoml
outsl
sbb
or
adc
and
cmp
stc
sbb
xor
sbb
xchg
adc
insb
xor
lret
out
pop
push
jecxz
mov
pop
sti
sbb
xorb
and
push
push
xchg
adc
out
das
fcomps
push
push
and
dec
notb
xchg
call
dec
xor
or
mov
test
xor
pop
mov
push
pop
sbb
in
adcb
inc
nop
xor
jo
push
push
movsb
or
fs
repnz
nop
mov
les
push
aam
push
das
jns
or
pop
clc
mov
inc
add
aaa
leave
out
sbb
repnz
xchg
cmp
insl
xor
lret
xchg
push
je
ss
ja
pop
es
ss
xor
repnz
sbb
pop
mov
popf
mov
stos
fisubrl
and
in
lea
push
adc
popa
repz
repz
jb
xchg
movsl
mov
repz
fsubr
cli
or
sahf
out
sahf
sbb
gs
cwtl
jns
out
test
repz
out
unpcklps
xor
repz
push
fs
xchg
test
iret
repz
lret
std
out
cmpsl
stc
push
adc
adc
or
or
ror
push
and
jmp
or
inc
decl
hlt
pushf
inc
jge
push
hlt
mov
add
std
add
imul
dec
sub
or
xchg
test
sub
push
mov
or
push
pop
push
rorb
bound
push
jmp
imul
push
and
push
push
push
or
inc
mov
push
or
push
xorb
cmp
pop
xchg
add
adc
jne
and
mov
pop
xor
fs
push
jns
and
sbb
mov
nop
push
pop
je
and
js
sub
popa
popf
adcb
sub
bnd
add
dec
pusha
push
jo
xor
jmp
mov
aas
das
add
inc
adc
mov
sub
rorl
inc
daa
and
pusha
sub
inc
mov
xchg
lds
jecxz
push
ja
xchg
push
rcl
iret
and
push
xchg
rcrl
test
push
iret
aam
sbb
fcomip
push
jb
add
cmp
jo
and
les
arpl
enter
je
xor
dec
jp
js
jl
arpl
enter
and
dec
fwait
std
add
adc
out
jl
out
jne
inc
sub
enter
jle
jnp
push
fdivl
inc
in
cwtl
shll
mov
jbe
mov
call
push
imul
arpl
xor
jae
in
mov
or
cs
sbb
sbb
and
in
in
adc
ret
pop
loopne
test
push
push
xchg
or
nop
pop
nop
dec
add
mov
das
xchg
movsl
lock
add
xchg
mov
mov
sarb
and
jbe
pop
dec
add
clc
das
movsl
fiaddl
xor
add
add
adc
inc
ret
rclb
lods
enter
out
or
xor
and
or
mov
mov
in
push
or
sbb
loopne
subl
ja
shl
push
lahf
cs
fisttpl
mov
out
add
sub
inc
jns
and
push
add
arpl
fistl
in
and
sbb
sub
cmp
jmp
mov
movsb
xchg
push
outsb
mov
push
inc
push
dec
mov
push
or
or
test
xor
sbb
sub
les
adc
or
lds
shrl
les
lret
sub
push
adc
mov
mov
and
les
xor
sbb
mov
in
add
xchg
call
pop
adc
adc
mov
rorl
xchg
stos
bound
jo
inc
repnz
icebp
sub
test
bound
jns
jno
add
xor
orb
inc
lods
pushf
adc
ss
adc
cmp
adcb
adc
mov
clc
xchg
dec
dec
cmp
in
mov
inc
aaa
or
add
or
fildl
loopne
std
or
xor
mov
mov
push
ret
sub
sbb
mov
cmp
cmpsl
xchg
push
add
fnstenv
and
call
dec
jge
dec
and
bt
push
push
scas
add
dec
adc
stc
addl
leave
shlb
add
es
push
adc
mov
add
out
pop
push
pop
imul
cmc
pop
pop
mov
or
inc
mov
push
cwtl
jmp
je
inc
insl
inc
cmpsb
lea
or
add
mov
mov
mov
ret
in
add
jo
scas
or
mov
inc
mov
mov
mov
add
jle
or
pop
mov
leave
adc
add
pusha
adc
add
push
pop
push
in
add
or
call
xor
stos
lea
lea
mov
bound
xchg
sub
ja
js
mov
cli
ret
push
push
loope
xor
sub
inc
cltd
dec
mov
test
in
mov
and
lods
push
mov
mov
test
push
jg
ret
loop
pop
icebp
adc
and
pop
out
mov
or
push
xor
ljmp
push
test
xchg
and
push
and
lods
inc
and
hlt
inc
aaa
fadds
mov
in
push
and
sbb
add
xchg
out
shll
add
subb
sbb
popa
cwtl
add
push
cmpsb
lret
iret
cld
dec
loopne
out
jmp
ret
rcll
push
sub
adc
sub
dec
enter
movsb
mov
push
mov
dec
push
pop
pop
cmp
push
push
sub
movsb
xchg
shr
cmpsl
shrb
mov
adc
push
repz
shll
push
adc
pop
insl
mov
adc
push
mov
sbb
jge
jno
rolb
je
jo
in
cmp
out
inc
add
or
add
sahf
cwtl
dec
cltd
dec
or
dec
mov
ja
jp
sbb
and
mov
jne
pop
adc
mov
addb
mov
or
sbb
jbe
inc
mov
je
data16
inc
sbb
sbb
movsb
jmp
pop
pusha
mov
insl
cmovne
js
inc
fcomp
xchg
cmp
rcrb
jnp
and
movsl
dec
xlat
cmp
movsl
xchg
sbb
cmp
jns
mov
mov
cmp
push
push
jo
xchg
test
or
sub
jbe
push
sbb
push
addb
lock
or
inc
push
jl
and
jp
add
add
rorl
mov
insl
xor
push
shlb
adc
mov
or
mov
gs
dec
lea
in
jne
adc
shll
das
ret
push
mov
or
repnz
pop
mov
pusha
mov
sub
xchg
mov
inc
call
cmp
sbb
sub
out
add
sub
inc
prefetcht2
push
mov
add
push
add
mov
mov
cmp
lea
sbb
jmp
fdivp
sub
cmc
test
sub
fbstp
xor
xchg
inc
dec
and
xchg
and
nop
arpl
pop
lcall
push
sbb
or
push
sub
add
pop
aaa
mov
xor
mov
add
in
ret
cmpb
stos
jecxz
inc
pop
pop
call
mov
add
xchg
adc
fsubr
adc
fildl
inc
pusha
xor
fldenv
movsl
mov
fsubl
rorb
jle
ljmp
push
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
dec
jae
adc
jle
xor
jle
cmp
je
mov
test
out
pop
mov
push
add
inc
jmp
movb
mov
jecxz
cmp
fs
cltd
idiv
add
cmpb
pop
xor
push
sahf
pop
testb
mov
push
ljmp
push
dec
cmp
int
ds
daa
add
inc
fldcw
and
sbbb
shrb
jmp
xchg
pop
out
mov
pop
lds
mov
push
or
sub
in
in
cmp
out
xchg
hlt
incb
pushf
int
or
sbb
mov
pop
push
sub
into
fsubl
fidivrs
adc
nop
fstl
push
push
mov
fdivs
sub
inc
cmp
and
cmp
shlb
fucomip
in
add
les
push
pop
dec
ljmp
push
sub
mov
xchg
jl
adc
push
mov
ljmp
ja
clc
pop
enter
or
cli
shl
mov
or
test
dec
pop
cmp
mov
jb
cld
dec
movsl
imul
dec
push
mov
test
pop
shl
lock
pushf
adc
add
jne
movsb
rcll
inc
cmova
sub
mov
dec
rolb
stos
xor
cmp
xchg
mov
or
or
gs
mov
sub
jb
movsl
xchg
xchg
notl
or
mov
rorb
jbe
out
push
dec
ljmp
and
or
jle
sbb
pusha
xor
push
cltd
les
dec
xor
stc
sbb
insb
inc
inc
sbb
add
inc
es
out
or
and
dec
in
fsubr
nop
push
daa
and
fdivr
xor
and
and
and
xor
adc
aam
rcr
pushf
mov
and
in
add
cmp
jns
or
rolb
jp
loopne,pn
test
sbb
xor
fsubr
sub
jbe
and
in
dec
in
mov
add
scas
es
in
jns
daa
clc
aaa
daa
dec
jmp
push
inc
es
das
sub
mov
jge
xchg
sbb
divl
push
test
mov
pusha
cwtl
dec
cmp
mov
sbbb
cmpsb
sbb
sbb
sbb
iret
fs
imul
mov
es
xchg
mov
jl
enter
push
fucomp
cmp
cmp
imul
xor
test
mov
add
pop
mov
repnz
test
fsubl
test
icebp
aaa
clc
fsubrs
ficompl
cs
and
dec
jno
xor
popa
adc
repz
add
inc
cmpsb
jge
push
cmp
iret
mov
daa
aas
push
mov
dec
and
sbb
jg
lea
movl
xor
fildl
stc
hlt
jne
movsb
push
jecxz
mov
sub
and
mov
pop
test
jge
push
sub
or
pop
cmp
out
xchg
bswap
lock
insl
push
shlb
inc
fadds
pop
cmp
jecxz
and
push
pusha
test
out
xor
or
pop
push
and
xor
imul
fucomp
aam
bound
xchg
xchg
dec
jo
in
fdivs
push
xor
in
ret
insb
pusha
or
rolb
or
lods
and
add
mov
mov
nop
jb
lds
dec
xchg
push
out
jle
xor
inc
mov
mov
mov
call
pop
sti
mov
add
aam
xchg
and
jne
shr
mov
sbb
hlt
push
and
or
sub
cwtl
inc
shrb
mov
xor
cmp
rclb
jecxz
imul
sbb
fcoml
arpl
add
out
adc
dec
popa
adc
xor
jp
inc
in
mov
sahf
inc
dec
aam
je
sub
fsubrs
sub
adc
lcall
xor
adc
xchg
inc
or
and
ja
cmp
imul
add
sbb
adcl
add
inc
ljmp
jl
and
mov
and
mov
pop
stc
jbe
cli
jo
jmp
inc
inc
sbb
mov
jo
dec
or
xchg
frstor
fisttpll
add
inc
cmp
adcb
sbb
xchg
imul
ficoml
lods
inc
pop
cs
dec
lods
es
and
in
dec
dec
jo
sbb
mov
stos
xor
vmread
test
es
pop
les
scas
xor
add
push
mov
loopne
cmp
dec
sbb
scas
sub
jge
cwtl
faddl
and
ja
dec
push
pop
leave
add
add
in
rcl
sbb
mov
mov
and
imulb
loopne
add
mov
mov
ret
inc
inc
hlt
xchg
push
add
add
push
cmpb
aas
jmp
pop
add
shrb
loopne
sbb
push
rorl
or
xor
adc
mov
cmp
gs
loopne
mov
add
xchg
imul
ret
fcompl
mov
aam
iret
mov
lahf
pop
movsb
and
pop
in
add
or
cwtl
rolb
rclb
xchg
shlb
or
mov
jg
mov
jge
add
jne
fstp
mov
je
cmp
sbb
pop
jbe
iret
cmp
cli
or
push
pop
imulb
add
add
rcrl
loop
add
adc
mov
or
xchg
or
jae
push
fisttps
jb
fcomp
in
push
pop
lds
push
adc
xor
xchg
movups
sub
and
faddl
pusha
or
or
loop
fsubl
in
mov
inc
fucomip
jp
loopne
and
je
and
adc
jl
lock
adc
add
cmp
adc
cmc
jecxz
jns
or
daa
pop
test
data16
push
inc
pop
xlat
jb
in
xcrypt-ecb
cmpsl
or
pop
popa
jmp
dec
stc
pusha
jns,pn
push
mov
in
xchg
sahf
aad
push
loop
stos
add
pop
push
dec
push
stc
andl
and
int3
sbb
cmp
in
mov
cmp
inc
pop
shr
je
inc
insl
bound
hlt
loopne
cmp
xchg
sete
popa
pop
add
inc
cmp
pop
rcrl
and
jmp
das
cmp
pushf
mov
and
push
cmp
cmp
cmpl
hlt
and
sub
adc
rclb
and
adc
adc
and
sbb
jne
ja
mov
jmp
mov
add
int
test
cmp
cmpl
or
cmp
pop
gs
push
cmp
in
xchg
fisttpll
loope
cmp
push
scas
pop
mov
cmp
pop
cmp
sub
cmp
adc
cmp
sub
loop
dec
cmpsl
or
lods
and
adc
cmp
sbb
test
and
imul
inc
push
imul
ja
inc
xor
cmpsl
adc
sub
pop
or
mov
dec
jecxz
mov
dec
ror
jle
fwait
mov
mov
sub
sub
jb
in
cmp
jne
or
push
sub
pusha
lods
imul
inc
jle
outsl
addl
mov
jo
daa
sbb
add
mov
pop
in
fidivl
adc
mov
inc
xchg
icebp
push
in
xor
mov
test
or
cmp
ljmp
xchg
in
sbb
sbb
cli
inc
add
movsl
shrl
loopne
adc
or
pop
stc
push
cmp
jmp
push
pop
inc
pop
add
test
mov
adc
sub
ret
test
mov
sbbb
shr
or
push
push
xchg
and
jb
jns
or
push
mov
add
pop
fldenv
pusha
movsb
insb
mov
mov
sbb
in
and
or
add
in
or
jb
sbb
or
or
ficoml
xor
out
popa
test
shlb
leave
and
or
push
cmp
cmp
js
es
pop
lods
movsb
xor
pop
or
sub
push
pop
ret
adc
push
fsubs
outsb
push
dec
data16
rcpps
and
jg
sbb
pop
mov
cmpsl
mov
out
push
subl
sbb
das
sbb
aam
push
adc
add
adc
or
or
xchg
jo
iret
adc
mov
push
aaa
push
xor
xor
out
sbbl
mov
iret
in
ret
add
dec
imul
xchg
adcl
add
push
sbb
push
insb
pop
testb
je
sbb
outsb
adc
adc
xor
xchg
es
adc
push
pop
pop
aam
in
xchg
gs
pop
push
or
loop
add
push
or
mov
shll
pop
sbbl
mov
imul
mov
movsl
pop
mov
test
xor
add
cmp
pop
andl
lea
fdivrs
push
mov
sub
and
pop
scas
or
push
push
and
daa
push
cs
rcr
adc
inc
fisubrs
sub
je
cmp
jne
inc
xchg
xor
push
or
aam
push
mov
push
add
gs
xor
add
test
cmp
adc
rcll
movsl
push
fimuls
mov
cmp
add
inc
lret
push
cltd
jb
or
rcr
imul
rolb
cmp
adc
pop
mov
cmp
pusha
mov
rclb
pop
and
addl
add
xchg
cmc
dec
and
jmp
push
mov
or
or
jl
in
inc
adc
sub
shlb
repnz
jae
mov
sbbl
adc
dec
std
aad
pop
mov
add
jmp
sbb
lods
jmp
int3
jnp
mov
jns
out
popa
in
popa
popf
jne
fwait
add
or
idiv
push
fcompl
in
mov
js
adc
sub
add
hlt
mov
cltd
xor
sub
inc
jbe
add
adc
adc
outsb
lds
loope
add
leave
ret
push
jb
cmp
cs
inc
or
inc
jmp
aaa
int
xor
loopne
adc
inc
dec
xor
dec
push
push
fnstsw
pop
xchg
mov
out
adc
sub
add
push
out
leave
sub
clc
pop
pusha
mov
andb
test
pusha
ljmp
mov
add
sbb
push
xchg
or
sbb
inc
lock
loope
pop
rol
xor
adc
call
lcall
pop
aad
jl
or
xor
je
inc
push
dec
nop
adc
push
gs
and
adc
xor
test
dec
inc
std
mov
pop
or
xchg
dec
ja
add
xor
rorb
out
lods
into
and
ds
and
je
sbb
test
mov
sbbb
sbb
or
test
shufps
sbb
jg
les
stc
je
pop
or
movsb
pop
aad
test
fcoms
push
cmp
jns
xorl
dec
or
popa
pop
push
push
push
int
in
stos
mov
arpl
dec
pop
enter
add
or
pop
out
mov
inc
add
push
stos
and
dec
jbe
cmp
jb
xor
lahf
rol
push
sub
dec
cs
cmp
and
mov
cltd
lcall
xor
pop
add
add
xchg
shll
or
lods
call
mov
imul
rcll
dec
push
scas
je
je
movsb
mov
pop
add
jmp
enter
cld
dec
dec
mov
popf
sar
and
add
pop
sbb
and
jo
jns
pop
cmp
pop
add
mov
lock
push
mov
movsbl
fwait
inc
and
jp
cmp
jns
inc
mov
sbb
fcmovnu
pop
and
add
iret
mov
and
faddl
sub
sbb
push
or
orb
or
test
leave
test
inc
or
mov
jnp
jo
lods
xchg
insl
adc
mov
push
mov
dec
daa
adcb
push
jmp
and
arpl
and
push
movsl
add
aad
adc
daa
fisttpll
inc
cld
pop
xor
cmp
and
pop
and
pop
jb
loope
inc
mov
cmp
mov
and
dec
add
and
out
rcrl
adc
movsl
cmp
add
repz
orb
pusha
pop
lret
and
nop
cmp
ret
jne
and
sti
sub
pop
data16
test
pop
lcall
xor
mov
adc
sbb
and
pop
mov
pop
lods
adc
inc
sbb
and
and
sbb
or
jns
or
std
sbb
popf
ss
sub
xor
or
mov
inc
sbb
add
sbb
cmp
jno
rcll
push
fisubs
adc
add
popa
pop
jb
and
add
pop
adc
xor
inc
lods
add
clc
adc
loop
jmp
sbb
mov
rorl
pop
pop
je
push
imul
xorb
add
and
jae
imul
dec
jmp
inc
ss
sahf
pmulhuw
inc
xorl
mov
sub
sub
push
cmp
xchg
faddl
enter
sarb
and
lods
push
int3
push
sbb
fs
cli
rolb
or
outsl
fst
sarb
add
imul
or
and
leave
int
mov
sbb
loop
and
dec
add
and
or
push
inc
adc
mov
lods
outsb
test
data16
cmp
inc
push
imul
pusha
mov
inc
and
xlat
es
mov
inc
orl
je
jb
cmp
daa
or
push
fisubrs
jae
and
push
fmuls
xor
sub
fcomps
shll
bnd
sub
mov
xchg
jecxz
sub
jle
inc
jecxz
push
rorb
lock
cs
lret
in
sub
or
insl
jl
je
add
push
pop
and
or
rol
daa
arpl
xor
sub
mov
jl
push
pop
jnp
push
mov
inc
xorb
fs
sub
push
movsb
cmp
xchg
dec
es
push
cmp
dec
adc
cmp
sub
fldcw
push
add
add
js
arpl
test
add
movsb
adc
push
xchg
mov
repz
adcl
pop
dec
dec
xor
pop
or
dec
adc
adcb
jb
lret
adc
lcall
mov
or
add
or
lods
outsl
add
jmp
dec
and
cli
adc
insb
dec
add
and
orb
dec
mov
enter
or
mov
orb
dec
add
movsb
push
dec
ret
mov
clc
xor
sub
ss
ret
xchg
cmp
jle
xor
add
mov
xor
repz
out
std
add
cmp
add
mov
xchg
sub
lods
and
mov
enter
cmp
cmp
mov
add
mov
and
loope
add
pop
stos
nop
mov
shrl
mov
jb
dec
jo
aaa
mov
mov
out
mov
add
add
push
inc
inc
nopl
out
sbb
mov
cmp
or
push
in
sbb
sarb
cmp
pop
insb
test
nopl
push
adc
in
mov
insb
pop
or
pop
cmp
or
rolb
mov
push
add
movsb
dec
mov
ds
dec
mov
mov
pop
xorl
xor
sbb
clc
mov
push
pop
rcl
lea
or
jg
sbb
cmpsb
in
or
mov
inc
jmp
mov
xchg
inc
push
cs
bound
mov
outsb
insl
dec
jmp
pop
or
sub
xor
rolb
loopne
not
or
ja
cmp
lock
xor
cmp
repnz
jo
pop
insl
inc
cltd
ret
jno
in
stos
xchg
mov
js
push
pop
clc
inc
test
cmp
or
imul
adc
in
inc
cmp
int
cmpsl
xchg
cmp
imul
movsl
jnp
mov
fdivs
adc
adc
sarl
adc
test
push
push
inc
scas
mov
push
jecxz
xor
adc
cmp
mov
dec
scas
xor
pop
inc
add
mov
cmpsl
movsl
pop
flds
sub
movsl
sbb
xor
das
lea
add
sbbb
loop
in
ror
push
push
das
dec
cmpb
test
xchg
jl
push
dec
das
insl
es
sub
and
or
pop
and
and
mov
fildl
out
sbb
or
pop
push
ret
mov
sub
sbb
movsl
mov
pushf
adc
and
mov
decb
into
cld
pop
sbb
inc
ret
adc
iret
inc
mov
test
mov
les
mov
popa
xchg
adcl
mov
pop
lds
ds
lods
mov
or
insl
call
cmp
cmp
cmp
push
push
scas
inc
lea
loope
movb
xchg
mov
std
pop
inc
inc
repnz
dec
push
dec
add
pusha
xor
ss
in
cmpsb
and
std
aad
inc
clc
or
or
test
adc
pop
add
loope
loopne
xchg
sti
or
mov
dec
mov
pushf
lret
int3
shlb
testl
idivl
sbb
out
pop
or
and
arpl
fsubrp
xchg
pop
add
pop
rclb
sbb
test
lret
test
mov
cmp
lea
jno
pop
subb
mov
in
bound
cmpsl
mov
xchg
popa
arpl
dec
ror
lods
sub
jbe
hlt
pop
popf
cmp
jo
mov
scas
cmpl
pushl
cmpsb
popa
sti
adc
jmp
popa
fwait
aad
push
call
popf
inc
jp
sub
inc
arpl
fsubrl
push
imul
js
jl
dec
dec
mov
daa
add
xorl
or
pop
imul
popa
push
push
les
push
mov
cmc
incl
mov
loope
inc
nop
fsubrl
fwait
cwtl
add
clc
sub
faddl
mov
pop
sub
mov
xor
and
cmp
shll
les
cmpsb
xchg
sbb
inc
pop
pop
test
mov
mov
sbb
inc
xchg
mov
lret
sub
xor
in
loopne
pop
cmpsl
pop
sub
std
sbb
inc
inc
mov
sub
scas
sbb
imul
imul
arpl
inc
sbbb
dec
lods
dec
adc
iret
jnp
push
call
dec
mov
xchg
or
dec
push
shrb
mov
pop
or
xor
rolb
sub
out
jne
xchg
pushf
inc
jb
xchg
adc
inc
dec
mov
leave
or
or
jb
dec
adc
cmp
inc
dec
adc
mov
mov
and
mov
push
lcall
and
jne
sbb
sbb
inc
xor
xchg
pop
aaa
jno
or
movsb
sti
xlat
sarb
and
dec
cmp
cmp
nop
sar
mov
mov
cltd
dec
cmpsl
xchg
push
les
sbb
adc
sub
mov
popaw
test
push
out
push
inc
sbb
mov
mov
pop
jo
popf
cmovb
shlb
repz
popf
sbb
mov
test
lret
or
sbb
out
incl
sbb
sbb
mov
add
inc
xor
frstor
push
iret
fs
or
lret
xor
pop
cmp
adc
in
or
and
add
or
sub
dec
ret
cmc
push
bound
mov
sbb
lahf
pusha
fucomp
outsl
mov
test
cmpsl
movsl
inc
sbb
loopne
sub
xor
sbb
movzbl
or
in
xchg
dec
movsl
push
in
jmp
jmp
aaa
mov
out
push
loope
cmp
faddl
pop
and
test
test
sbb
xor
imul
push
lds
dec
add
sbb
and
js
add
cli
or
std
lock
cmpsb
or
or
jne
repnz
pop
dec
lock
sub
inc
es
pop
jb
mov
enter
pop
ret
and
clc
adcl
call
dec
jecxz
mov
ss
movl
mov
mov
add
mov
xor
adc
imul
pusha
cmp
cmp
rolb
cwtl
sub
pop
add
imul
xor
sub
dec
mov
or
and
and
or
or
test
and
ds
and
inc
fcomip
jne
xor
mov
mov
or
adc
or
inc
adc
fisttps
sub
lods
jecxz
ja
mov
lods
outsb
push
test
pop
inc
adc
or
xchg
ret
pop
adc
lods
icebp
aaa
adcl
sbb
adc
repnz
jecxz
mov
loopne
push
xor
lock
sarb
in
arpl
pop
and
out
add
or
fcoml
cld
mov
jbe
dec
mov
ljmp
dec
aam
dec
sarl
add
mov
mov
push
rol
icebp
xchg
xor
int
sbb
mov
xor
and
pop
pop
mov
les
inc
jbe
loopne
cmp
push
and
sub
lea
mov
mov
mov
push
or
cmpsl
mov
aam
call
ss
adc
aaa
mov
cmpsb
sbb
push
adc
fsubs
push
pop
fs
mov
or
jo
rep
popa
xchg
mov
pop
std
ss
and
fadd
push
inc
cs
xor
dec
test
sbb
dec
mov
das
xchg
sub
out
aad
adc
cmpb
or
test
xchg
adc
pop
je
push
ret
mov
xchg
clc
lock
sbb
push
pop
pop
dec
mov
sbb
repz
pusha
inc
inc
mov
pusha
data16
jo
test
js
lea
or
shrb
je
jmp
leave
sub
fsubrs
loop
jns
xchg
jle
jnp
dec
ja
je
popa
jno
pop
sub
ficoms
mov
sub
pop
mov
dec
shll
dec
pushf
daa
add
adc
add
fiadds
test
test
or
adc
enter
push
mov
add
mov
xchg
fstpt
mov
aas
dec
orl
pop
shr
and
inc
ret
loope
popf
jne
out
ljmp
adc
pop
out
inc
push
or
push
flds
data16
add
sbbl
and
sub
push
cwtl
xchg
sub
shl
aam
jns
add
and
cmc
add
push
neg
pop
sbb
dec
pop
mov
dec
dec
pop
push
iret
sbb
cmpsl
push
mov
xchg
jecxz
push
loopne
cmp
jmp
dec
or
mov
xchg
lock
in
call
bound
ficompl
sbb
dec
insb
sarb
and
adc
push
xchg
sbb
mov
or
pusha
add
les
addb
decl
pop
les
mov
jne
stc
cmp
jle
push
aas
sahf
test
ljmp
push
ret
push
rolb
mov
lcall
add
js
xor
jmp
rclb
adc
mov
sbb
fdivl
cmp
push
adc
nop
mull
push
jmp
push
cmp
ljmp
xor
subl
adc
jne
push
and
sahf
xchg
cmp
mov
push
or
push
pop
pop
and
popa
popa
addr16
pop
xchg
mov
cmp
and
repz
sub
sti
mov
xchg
xchg
rolb
aam
ret
fwait
cmpb
dec
pop
push
in
and
addr16
mov
cmp
and
hlt
sbb
lea
push
call
cmp
inc
lock
pop
sub
mov
clc
sub
pop
rcll
loopne
xchg
xor
test
lea
dec
xchg
push
hlt
loop
jo
movsl
xor
jecxz
mov
cmp
jae
push
loopne
jmp
add
sub
inc
inc
js
mov
outsl
push
add
adc
pop
jnp
inc
add
xor
sbb
pop
add
sbb
aaa
mov
les
clc
mov
mov
mov
push
adc
adcl
ja
sbb
and
add
inc
dec
movsl
cs
xchg
add
popf
outsl
adc
in
test
incb
mov
ficoml
cwtl
and
mov
cltd
inc
adc
mov
push
mov
xchg
pop
xor
enter
add
ror
adc
notl
push
and
push
xchg
xchg
lret
sub
sti
push
push
push
vmread
xchg
enter
xchg
ljmp
mov
leave
cli
insl
shl
sub
cmc
jp
xlat
out
mov
pop
dec
iret
cmp
pop
dec
sub
ss
push
movzwl
inc
mov
inc
push
mov
adc
cmp
out
cmp
jne
pop
jp
adc
sbb
cmp
pop
pushf
sub
mov
andl
sbb
pop
lret
out
dec
and
mov
and
mov
icebp
mov
aaa
sbb
cmp
in
stc
mov
fcoml
daa
in
add
jmp
sbb
xor
loope
scas
adc
sub
adc
sbb
es
test
push
loop
hlt
or
sbb
adc
cmpb
cmpsb
in
adc
stc
inc
cmp
mov
jmp
std
mov
add
cmp
test
cld
mov
sbb
add
jae
shrl
pop
pop
cld
mov
ss
jle
movsl
movsw
push
cld
movsb
mov
or
ret
sti
cmpsl
pushl
or
or
mov
inc
inc
cmp
jle
cli
repnz
ffreep
subb
jmp
lea
or
jg
push
add
cmp
cmp
cmp
cmpb
add
movsbl
xor
fidivrs
xor
les
push
push
adcl
jbe
push
cld
inc
cwtl
jnp
je
push
push
jo
fldt
movsl
cmp
inc
daa
enter
mov
aad
jo
rcrl
push
xchg
outsl
loope
orl
cmp
mov
or
subl
or
fs
cmpsl
and
or
cmp
sub
add
xor
pushf
inc
fcomps
inc
or
test
push
mov
idiv
cmc
ss
cmp
ss
push
push
inc
adc
in
andb
inc
test
mov
test
ret
dec
ja
mov
faddl
xchg
sub
notb
fidivl
xchg
decb
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
sub
ret
int
add
adc
fimull
push
and
pop
addr16
mov
mov
mov
push
je
mov
dec
mov
push
inc
dec
iret
repz
push
pop
bound
jp
iret
repz
xchg
repz
mov
repz
mov
mov
iret
repz
xlat
fsub
out
cmp
repz
cmc
cli
pushl
or
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
jb
or
push
jle
rcll
push
ds
sar
push
sbb
or
jo
mov
cmp
jle
mov
jp
lock
jmp
xlat
popf
or
xor
add
pop
fidivs
out
push
test
sbb
pop
loope
jecxz
movsb
xchg
shl
or
mov
sbb
or
mov
adc
mov
inc
cmp
jbe
inc
mov
and
add
or
and
test
and
addb
adc
nop
jmp
inc
push
push
adc
pop
pop
rorl
mov
clc
add
inc
outsb
or
repz
loope
lahf
cmp
push
add
mov
cmpsl
imul
and
dec
sub
rclb
loope
and
pop
sbb
dec
test
or
adc
push
pop
dec
mov
lret
insb
nop
push
add
enter
aas
sbb
clc
add
or
aam
adc
and
in
test
add
sub
nop
inc
test
lea
daa
jno
jns
or
and
iret
adc
cmp
jns
lock
shrb
cmc
inc
mov
xchg
xchg
mov
add
sbb
add
inc
out
mov
pop
or
out
shrb
shrb
push
int
jge
sbb
loopne
push
jge
test
sbb
in
jmp
jle
inc
adc
adcb
lcall
and
fwait
xor
test
ret
mov
mov
push
pushl
dec
and
out
add
xchg
pop
or
fimull
mov
push
pop
sub
daa
lret
test
jns
lods
fcmovnbe
andl
jne
fwait
push
jne
movsb
dec
adcb
loopne
xor
or
or
jge
js
mov
push
dec
shlb
jno
scas
adc
jmp
mov
jne
and
pop
push
icebp
mov
jne
jno
aas
sub
ss
sub
or
movl
in
call
mov
faddl
pop
loopne
jge
xchg
call
push
push
rorb
and
mov
je
loope
and
sahf
inc
sbb
clc
lock
mov
dec
je
xchg
clc
je
mov
in
in
push
xor
adc
adc
insb
sarl
pop
sub
add
sbbb
mov
rcl
xchg
enter
loop
ret
mov
adc
sub
lods
xorl
dec
bound
mov
mov
xchg
push
push
sbb
xchg
jmp
sub
sbb
popl
mov
clc
pop
push
xchg
adcb
push
xchg
add
add
clc
adc
xor
js
jb
pop
add
cmp
dec
mov
andl
mov
or
jno
lea
jo
cmpsb
mov
imul
inc
mov
enter
sub
mov
jmp
movsb
mov
dec
mov
add
push
push
cmc
add
fiadds
repz
data16
dec
sarb
mov
add
pop
inc
addl
popf
dec
shll
loopne
enter
xor
push
jns
sub
jg
or
in
aam
jne
dec
mov
dec
push
shl
xorl
xor
adc
push
outsl
dec
imul
add
jmp
push
popf
sub
pop
icebp
jne
les
mov
loop
mov
xchg
mov
ret
dec
enter
add
inc
fs
mov
repnz
test
add
daa
popa
adc
ss
pop
adc
test
cmp
les
out
push
movsb
push
ss
jmp
cld
cmp
push
push
cmp
ret
inc
ss
sbb
add
add
loopne
cmp
ficomps
int3
ds
push
push
adc
dec
sbb
adc
repz
les
push
les
or
fldl
adc
repnz
sti
adc
or
or
adc
add
xchg
mov
sbb
pop
dec
daa
xadd
adc
pusha
mov
pop
push
pop
push
push
xor
insb
pusha
mov
pop
fisubrs
dec
sbb
jns
jp
dec
pop
bnd
sub
fstl
mov
mov
mov
hlt
jg
xchg
ret
stc
call
pop
or
test
lahf
sub
dec
or
cmpsl
jbe
in
out
jecxz
or
inc
stos
in
daa
sbb
ffree
sbb
mov
add
gs
call
jo
xor
jns
or
rolb
pop
lds
rcrb
out
leave
xchg
sbb
faddl
pop
mov
repz
cmp
lods
sub
addl
ret
loopne
aas
push
sbb
push
adc
or
movsl
ja
pop
push
add
inc
gs
sub
push
aas
mov
mov
fldl
je
fistl
pop
xadd
daa
or
pop
push
inc
arpl
cmp
cli
decb
shlb
outsb
pop
push
inc
adc
xchg
jne
xchg
jns
xchg
ds
push
cmp
mov
sbb
int3
jo
mov
adc
fdivrl
jmp
inc
and
sub
jne
push
orl
pop
jae
lcall
jmp
xor
push
push
cmp
push
xchg
aaa
ss
loop
add
xchg
push
dec
mov
add
adc
test
lds
rorl
sahf
mov
inc
roll
jle
sti
xchg
shlb
inc
iret
mov
aas
iret
cmp
jne
insb
and
or
je
loopne
inc
cmp
jl
movsb
fcmovnbe
daa
test
push
or
bound
dec
sub
std
push
adc
mov
cmp
push
jge
in
add
mov
call
ljmp
into
add
dec
mov
pushf
sub
mov
mov
or
mov
mov
adc
push
add
add
mov
or
add
call
loope
jmp
stos
push
inc
cmpsb
pusha
das
cmp
xchg
sbb
add
enter
and
pop
cmp
or
addl
or
mov
push
pop
ret
fmuls
or
int
idivl
add
inc
into
sbb
test
adc
or
mov
sahf
pop
adc
adc
xor
cmp
out
wrmsr
or
enter
sub
pop
dec
sub
outsb
mov
fisubrs
xor
sbb
push
cvttps2pi
fs
and
inc
cmpsb
in
or
shrb
in
repnz
rol
add
scas
add
leave
mov
push
push
push
sub
xchg
addl
or
ds
inc
add
inc
cmp
sub
dec
inc
push
inc
push
inc
outsb
xchg
out
subb
pop
pusha
aas
fwait
movsb
jb
push
adc
pop
push
pop
cltd
movsb
jo
loopne
js
movb
add
enter
inc
test
dec
mov
push
push
nop
xorb
xchg
pop
cwtl
pushf
pop
mov
movsb
test
mov
and
and
fadds
xlat
push
jno
popa
inc
es
gs
mov
cmovs
and
aam
js
jmp
add
outsl
and
femms
mov
test
addb
push
mov
lret
sub
jae
sub
jbe
enter
or
dec
negb
sbb
cmp
jl
sub
repnz
dec
inc
lea
xorl
cmp
je
dec
fmull
cmp
jno
lea
or
sbbl
pop
lock
fildl
jno
jmp
and
inc
sti
lods
sub
inc
pop
fadds
cmp
pushf
jne
popf
jnp,pn
rcrl
jl
jmp
out
push
sbb
sbb
int
mov
adc
subl
in
in
add
jge
and
adc
mov
scas
jmp
rol
loope
in
mov
in
dec
fisubl
rcl
int3
sbb
lcall
and
lock
nopl
push
fmull
les
outsb
sbb
push
fwait
fs
sub
imul
or
call
mov
test
cmpsb
xchg
fistpll
add
inc
cmp
jge
xlat
pop
sbb
inc
push
hlt
cmp
jl
xlat
jle
mov
ret
lock
add
pop
dec
sbb
movsb
popf
sub
mov
xor
mov
sub
sbb
xchg
pop
add
pop
mov
into
ds
shl
mov
lock
pop
adc
and
add
cmp
daa
fisubs
adc
inc
mov
push
mov
or
push
outsb
je
fcmovnbe
mov
mov
into
mov
loop
jge
and
lcall
adc
inc
test
pusha
mov
mov
lcall
sub
and
sub
inc
mov
loopne
in
dec
aaa
mov
pop
cs
mov
int
ret
daa
rclb
aaa
call
adc
push
dec
shlb
les
adc
add
ds
aad
cmp
sbb
loope
add
pop
jl
ja
cmp
and
xor
adc
imul
cmpsl
in
jge
mov
or
cmpsb
xchg
xchg
in
pushf
sub
adc
inc
push
jmp
mov
dec
xor
icebp
or
xor
jne
push
loopne
cwtl
jo
mov
adc
sbb
dec
push
inc
insb
xchg
xor
mov
push
sbb
mov
lods
inc
mov
popa
outsb
mov
inc
rolb
xchg
inc
daa
lock
aaa
mov
inc
mov
xor
cmpsl
add
xchg
inc
dec
pushf
mov
int3
pop
pop
xor
aam
xchg
or
xchg
and
andb
js
inc
ffreep
push
rorl
or
jmp
inc
add
push
jl
rcl
rorb
jl
test
add
popa
or
adc
out
and
add
dec
or
sub
leave
add
push
es
test
push
lret
test
or
lea
dec
rclb
repz
loope
scas
dec
inc
and
fldt
mov
movsl
inc
mov
pop
cmp
mull
dec
inc
sbb
daa
sbb
pop
sub
bound
inc
mov
mov
inc
loopne
pop
mov
sbb
mov
lea
or
xchg
test
ss
addl
in
xor
in
in
fwait
add
or
pop
inc
in
ds
test
add
push
pop
or
pop
adc
sbb
sbb
fistpll
push
decl
mov
imul
cmp
pop
daa
test
adc
xchg
addr16
pop
in
pop
add
mov
ret
inc
mov
dec
sbb
loop
fsts
out
repnz
adc
adc
mov
adc
cmp
loopne,pt
mov
sti
dec
shlb
jne
out
fcmovbe
scas
into
popf
js
jmp
adc
jl
jbe
inc
mov
mov
pop
jbe
mov
and
cld
mov
std
jno
add
popf
or
pop
in
testl
ret
sub
pop
sub
or
add
jmp
xor
cmp
push
jg
mov
ret
inc
shl
adc
outsb
jnp
js
in
dec
popa
lea
scas
dec
and
mov
inc
jo
stos
cmpl
lahf
rclb
or
test
gs
dec
je
pop
or
lock
ret
int
fimuls
sahf
xchg
inc
nop
rorl
push
leave
sub
jmp
inc
ret
and
mov
cmp
xor
mov
ret
add
movsb
push
cmpsl
xor
xor
jp
rcrb
out
and
mov
adc
repnz
addb
fsubs
sub
push
imul
out
mov
push
jns
pop
ret
push
push
pop
dec
mov
test
mov
xchg
mov
or
test
lea
roll
in
push
push
mov
inc
popa
sbb
inc
cmp
arpl
add
add
gs
loope
in
aad
lock
jl,pt
mov
incl
cs
aas
cs
inc
sbb
bnd
jns
pop
aas
push
xchg
adcl
add
inc
push
loope
outsl
movsb
imul
adc
or
push
push
loopne
add
pushl
adcl
and
adc
fldz
fcomp
fnstsw
sub
rorb
sub
sub
fmuls
pop
faddp
cmp
push
and
dec
jge
or
adc
loop
icebp
pop
clc
lea
or
outsl
inc
push
sbb
pop
push
mov
ret
xor
in
inc
xlat
hlt
pop
hlt
in
movsl
aas
jl
cmp
pop
cltd
ret
push
lea
hlt
push
lods
mov
jmp
loop
adc
sbb
dec
add
add
push
mov
push
icebp
das
test
test
cmp
loopne
mov
sahf
insl
gs
add
clc
jae
mov
add
cmp
popa
push
xchg
dec
mov
pop
mov
lea
ret
xchg
mov
push
sbb
sub
fsubs
fidivl
gs
sahf
pop
push
inc
dec
add
mov
add
adc
adc
inc
in
push
push
or
fcoml
pushw
adc
in
mov
push
mov
mov
mov
mov
repz
in
loop
mov
dec
sti
fimuls
enter
out
int3
pop
push
lahf
mul
or
in
dec
rcll
scas
sbbl
pop
pop
les
cli
cmp
xchg
xor
push
loopne
std
push
mov
popf
clc
jle
push
fchs
push
or
andl
ss
lock
roll
pop
pop
inc
push
mov
sar
in
faddl
rol
dec
paddq
xlat
jne
rcrl
mov
adc
dec
or
enter
cmp
push
aam
and
dec
mov
sbb
ja
mov
pop
push
cli
or
fadd
mov
stc
add
sbb
cmp
sub
lods
mov
dec
xlat
int
and
cmpsl
ret
or
loope
sbb
rolb
or
and
sbb
sub
push
popf
mov
jge
xor
and
ss
lahf
dec
jnp
pusha
pop
sub
add
adc
adc
shrl
cwtl
add
jb
or
aaa
shlb
out
je
push
jne
push
imul
push
jns
test
inc
sbb
jmp
cld
add
push
or
repnz
jb
adc
or
ret
push
lock
repnz
cmpsb
popa
jo
adc
imulb
dec
dec
sbb
loope
push
pop
or
pop
cmp
popf
adc
and
mov
das
and
cmp
or
test
jo
or
or
pop
fnstcw
push
ss
out
loope
lcall
popa
jne
mov
adc
mov
adc
push
xlat
lret
mov
shrb
cmpb
sbb
or
xchg
sub
je
sbb
fwait
mov
jmp
or
dec
xor
adc
push
add
inc
pop
push
mov
cmpsl
push
pop
sub
mov
push
lret
pop
test
out
xor
int3
adc
xchg
and
rcrl
mov
pop
cmp
mov
push
into
loope
pop
push
add
mov
cmp
aam
xor
fisttps
pop
dec
in
xor
sbb
push
adc
insb
push
jmp
and
mov
mov
push
inc
nop
xchg
add
outsl
mov
add
ljmp
xor
pop
ja
je
vmovsldup
fadds
ret
or
loope
and
pop
mov
add
aad
mov
mov
movsl
adc
or
into
push
xor
xor
or
jne
dec
inc
cmp
jb
jnp
jae
jbe
fs
scas
jg
ja
outsb
popa
xlat
inc
mov
push
xor
test
xchg
push
push
adc
imul
popa
repnz
add
pop
lcall
pop
add
mov
mov
push
outsl
adc
inc
outsl
addr16
mov
movsl
add
adc
lahf
inc
movsb
bound
int
je
out
add
or
in
out
and
decl
mov
xchg
ss
push
movsl
mov
xor
pusha
push
xor
cmpl
shrb
push
sub
or
or
imul
loope
push
outsl
je
or
add
pop
push
mov
cmpsl
or
mov
push
fnsave
mov
push
dec
cmpps
sub
jbe
and
mov
mov
cmpsl
in
ljmp
mov
adc
shll
call
jb
movsl
mov
jecxz
or
inc
adc
xchg
or
xchg
mov
xchg
jo
repz
leave
and
gs
fistl
bndstx
push
das
loopne,pt
loopne
and
fadds
or
xor
lea
in
adc
enter
or
push
cmpb
pop
pop
call
cmc
xchg
push
xorl
aam
loopne
popa
pusha
jns
test
dec
pusha
or
mov
push
clc
push
inc
int3
lcall
in
es
lock
leave
xor
xchg
call
jne
mov
push
push
loope
sub
stos
add
mov
cwtl
push
or
clc
aam
xor
and
dec
faddl
jo
or
mov
sti
xchg
pop
sbb
dec
movsl
lds
call
inc
pop
pop
mov
cmp
sbb
add
add
pop
push
repz
pusha
add
pop
movsb
lahf
add
adc
add
adc
fldenv
sbb
or
push
test
sub
push
aam
jbe
sbb
dec
add
in
jae
cmp
mov
das
inc
inc
lret
movntps
pusha
outsw
adc
add
dec
lock
mov
jge
dec
mov
pop
dec
inc
sub
inc
les
mov
in
push
stc
jo
int
jne
pop
imul
outsl
add
mov
add
inc
push
add
cmpsb
xchg
je
inc
clc
pushf
xchg
adc
lods
push
mov
dec
bound
cmp
outsl
ret
jl
pop
inc
mov
movsb
add
sbb
test
orl
shlb
sbb
push
and
pop
or
add
mov
nop
iret
sbb
repnz
push
test
sub
jnp
push
lcall
xor
scas
mov
test
mov
jp
pop
nop
movsl
inc
or
and
xchg
ja
les
in
jb
mov
xchg
pop
lret
add
clc
mov
clc
push
mov
xchg
mov
mov
js
dec
loopne
or
addl
lods
mov
cwtl
jo
push
push
dec
xorb
inc
dec
cmp
and
jne
inc
sbb
movsl
shl
sbb
loopne
or
push
cmp
jmp
xlat
mov
push
mov
fdivrs
add
or
aaa
jae
nop
add
sahf
sbbb
pop
xchg
enter
jae
jl
mov
incl
cwtl
and
pop
and
movsl
adc
sub
movsl
and
icebp
or
sbb
test
pop
incb
lar
sbb
push
lret
mov
adc
clc
xor
imul
jae
add
jge
testb
dec
in
fadds
inc
insb
sub
lret
fadds
or
test
int3
add
clc
mov
scas
sbb
das
push
stos
imul
push
sub
incl
xor
je
popf
arpl
js
das
ficompl
and
inc
and
jl
sub
sbb
insb
sbb
sub
pusha
adc
fwait
xchg
xor
mov
or
es
pop
jnp
mov
mov
shr
add
lret
stos
add
sbb
fcoml
inc
mov
daa
inc
or
imul
mov
leave
cmp
mov
int
adc
loop
psrad
cmp
sub
sbb
or
pusha
xchg
push
mov
add
inc
sub
addb
add
inc
sub
mov
xchg
push
mov
sbb
cs
xor
add
mov
inc
sbb
aaa
cmpsl
mov
xor
jne
or
ret
adc
and
in
repnz
leave
and
addr16
pusha
pop
and
xor
adc
inc
loope
sbb
out
push
sub
sbb
sub
addb
dec
cmp
cmp
mov
push
and
enter
pusha
and
mov
or
jo
xor
fs
mov
push
icebp
clc
dec
adc
aaa
xchg
js
jo
add
adc
adc
xor
jl
faddl
arpl
push
adc
or
jnp
jmp
cmp
push
mov
shrb
sahf
fisubrs
add
mov
cs
jl
adc
ret
or
inc
je
push
cmc
add
ss
push
in
xchg
push
cltd
sahf
push
add
ret
xlat
add
out
dec
stos
call
je
sub
inc
mov
call
jbe
pop
andl
mov
jmp
mov
cld
aam
xchg
and
push
xchg
adc
mov
mov
cmp
sub
jle
mov
movsl
call
imul
call
jne
fcoml
adc
mov
mov
popf
cli
adcb
xchg
dec
or
push
clc
jmp
loop
xorb
test
sub
aam
pushf
mov
lock
jne
loopne
xchg
mov
in
or
js
fs
push
push
dec
adc
dec
sub
add
dec
loopne
or
cmp
mov
push
rorb
mov
sub
lret
or
pop
pusha
add
call
adcb
mov
cmp
je
popf
add
sub
andl
mov
popf
inc
in
and
dec
dec
cmp
sub
or
repnz
int
xlat
test
jno
adc
jno
addb
js
dec
dec
iret
and
push
push
mov
add
je
loopne
test
je
mov
std
push
mov
movzbl
aad
jo
repz
xchg
adc
xor
add
and
adc
jl
mov
lods
pop
test
mov
subb
sub
push
aam
test
or
mov
mov
iret
add
movb
out
or
inc
aas
or
es
inc
add
je
inc
pop
clc
add
inc
push
shrb
dec
adc
sbb
dec
mov
inc
sbb
ja
fldenv
aas
fs
ret
in
int
sub
push
cmp
sub
nop
dec
jecxz
movsb
test
xchg
adc
les
dec
mov
dec
js
or
xlat
hlt
or
push
sub
movsb
cmpsb
jb
pop
pop
call
hlt
dec
ret
ljmp
cmp
add
jbe
roll
je
or
je
ds
pop
cmp
cmpl
mov
xorb
sbb
dec
mov
pusha
push
mov
jnp
popa
loopne
ret
push
cmpsl
dec
and
cld
adc
adc
xor
test
js
mov
push
push
movsb
or
pop
mov
and
inc
lea
mov
insb
push
lea
stc
xchg
pop
js
int3
cs
lods
popf
jl
or
loop
add
or
gs
adc
shrb
inc
cmpsb
ja
mov
inc
sub
loopne
sbb
dec
push
nop
jmp
roll
aam
daa
mov
add
aas
xchg
pusha
lods
movl
mov
mov
rorb
or
dec
mov
jns
cmp
rcrb
adc
rcll
gs
or
pop
mov
cmp
adc
lods
lcall
lea
incl
pop
mov
in
cld
pop
imul
out
cmpb
pushl
sahf
jl
cmpb
adc
mov
push
enter
jns
pushf
outsb
and
loop
jl
fiadds
ss
push
cwtl
std
mov
stos
sub
les
mov
xchg
and
xchg
cmc
push
adc
cmp
insb
lcall
adc
push
push
jbe
add
jbe
das
adc
jne
rcrl
jne
enter
mov
xchg
clc
push
pop
or
jne
mov
or
pop
stc
push
cld
cld
push
dec
out
mov
mov
std
movsb
cmp
mov
dec
fisttpl
ds
pop
call
inc
movzbl
and
dec
or
jmp
or
push
add
push
sar
jl
push
lea
es
idivb
adc
jb
imul
jnp
mov
int3
aas
push
mov
lea
xor
mov
jbe
fimuls
pop
push
push
and
out
loop
out
pushl
pop
inc
pop
cmp
rorb
xchg
pop
add
pop
sbb
lods
iret
je
loopne
ret
sbb
adc
test
nopl
stos
test
push
add
cmp
adc
pop
fsubs
sbb
push
fisttpll
mov
and
jle
jae
push
nop
pop
and
test
test
repnz
mov
xchg
add
repz
test
mov
and
subl
inc
popa
lret
cmp
xchg
push
lret
add
mov
push
add
jle
cld
int
sub
or
fcoms
cs
xor
jae
xor
sbb
xor
mov
test
xchg
xor
jbe
jns
inc
pushf
adc
ret
sbb
loopne
push
stos
inc
in
mov
inc
or
hlt
mov
lock
aam
rorb
fstpl
pop
mov
pop
adcl
mov
rorb
push
les
fadds
mov
jns
add
mov
dec
in
xchg
icebp
or
push
dec
sub
nop
or
mov
ret
les
popa
pop
add
inc
movsl
imulb
fwait
mov
xchg
je
and
repz
test
add
cmp
or
add
mov
aaa
or
add
xchg
cwtl
adc
inc
add
and
or
jb
mov
adc
test
xor
xor
or
xchg
mov
pushf
inc
jp
pop
mov
sbb
xor
mov
andl
inc
outsl
xchg
js
mov
mov
adc
xor
dec
lret
sub
sub
pushf
xor
push
inc
dec
movsb
pop
data16
mov
mov
or
sub
stc
sub
xor
imul
and
aaa
add
xchg
or
ja
xchg
mulb
cmp
mov
mov
movsb
xchg
dec
rcrl
mov
or
add
fadd
or
pop
jg
xor
jmp
cmp
pop
mov
aas
movsl
inc
or
je
popa
cmp
cwtl
dec
cs
xorl
or
aas
push
andb
add
or
push
add
and
add
jbe
sub
adcl
cmp
mov
stos
cmp
mov
jl
and
int
inc
std
gs
hlt
sub
or
hlt
js
data16
fadds
shll
ret
jg
mov
sbb
stc
push
or
push
add
jle
scas
sahf
ja
mov
adc
pop
cmpsl
mov
push
push
es
mov
aaa
lods
std
lea
jge
test
jg
jg
aad
sbb
adc
xchg
shrb
sbb
mov
ret
cmp
out
fstpl
or
xchg
lret
bound
shll
inc
inc
jmp
inc
fs
sub
je
and
cmp
mov
icebp
add
adc
out
inc
push
jmp
test
sbb
jl
repnz
cld
push
sub
fimull
ss
arpl
popa
mov
jp
adc
fldpi
mov
icebp
jno
je
cmpsb
add
fsubs
inc
push
mov
push
das
mov
adc
je
ret
lock
inc
rorb
mov
jo
mov
xchg
push
in
mov
cmpsl
aam
pop
in
mov
repnz
sbb
mov
shl
shll
push
mov
sub
insl
fcoms
mov
movsl
test
inc
data16
cs
mov
dec
xlat
push
out
and
xchg
add
cwtl
cmp
lret
mov
push
add
dec
std
mov
cs
mov
push
add
or
and
stc
rol
pop
add
sbb
enter
scas
je
stos
jnp
in
add
xchg
and
mov
or
lds
call
push
sub
dec
sbb
push
dec
clc
or
je
add
ss
add
outsl
jle
mov
sub
sub
jns
nop
pop
mov
mov
bound
movsb
addl
mov
addr16
cltd
push
mov
enter
fbld
xor
sub
push
es
add
push
push
adc
mov
bound
shlb
or
pop
adcl
push
out
mov
jge
push
adc
rorb
add
test
xchg
test
pmaddwd
cmp
je
lret
clc
lahf
jl
xchg
inc
push
roll
mov
movsb
popf
add
jne
ljmp
fnstenv
je
cltd
test
and
gs
pop
cmp
pop
ret
test
dec
push
les
filds
sub
addr16
pop
adc
mov
xlat
in
test
dec
and
aad
out
cli
xor
add
sub
stos
nop
js
push
dec
mov
data16
pop
mov
sub
push
inc
xchg
stos
std
addr16
jne
jbe
inc
shll
ds
insb
inc
jle
loope
lea
enter
add
rolb
jb
test
mov
jp
hlt
push
xchg
mov
mov
jmp
adc
js
cltd
cmp
pop
lock
rorb
call
xor
shr
xor
ja
xor
jb
pushf
fcoms
cmp
push
not
loop
test
fwait
incl
xchg
movl
call
add
or
add
jmp
add
mov
or
xchg
xchg
pop
xor
pop
add
inc
push
ja
and
test
or
xor
aaa
xchg
or
stc
xchg
mov
xchg
adc
cld
testb
pop
and
inc
fmull
pop
clc
adc
pop
sbb
mov
cmp
inc
adc
loopne
cmpsl
add
push
xchg
lcall
pop
adc
push
rorb
ds
imul
lds
js
daa
add
jge
jmp
mov
sbb
mov
push
or
jb
ret
push
cwtl
sub
je
clc
add
cltd
or
add
iret
sbb
adc
mov
xor
push
in
pusha
xor
adc
enter
lahf
add
mov
ret
xor
push
add
add
add
mov
or
or
mov
sbb
imul
inc
add
and
or
and
test
fidivs
adc
pop
adc
xchg
push
add
or
push
scas
xor
lock
arpl
inc
cmp
or
sub
dec
xor
xchg
in
adc
cltd
sarb
int
iret
cmp
and
push
lcall
das
or
add
add
add
nop
out
subb
push
jbe
or
push
scas
lods
or
repz
add
jle
push
add
cld
mov
sbb
ret
push
push
stc
lock
jmp
and
or
cmp
sub
fldt
push
js
fwait
and
pop
adc
jns
mov
add
cmp
inc
xor
push
adcl
iret
xorb
pop
adc
loopne
or
inc
enter
push
mov
adc
aad
mov
mov
mov
or
mov
dec
and
pop
mov
or
mov
mov
push
adc
aam
test
cmp
dec
leave
cltd
js
cmpsl
enter
and
sub
dec
mov
push
push
sahf
pusha
or
or
dec
inc
cmp
xor
in
cmp
cmp
xor
push
add
andl
icebp
cmp
and
out
sbb
add
call
mov
mov
insl
jecxz
aad
fisttps
mov
aad
sbb
xor
subl
sub
cmp
ret
mov
xchg
outsb
or
shlb
and
dec
mov
stc
push
push
js
movsb
mov
es
mov
jae
cmpsl
add
pop
and
and
push
xchg
fcomps
fcoms
adc
and
jl
or
or
cmp
dec
cwtl
push
rcll
pop
push
popf
nop
jecxz
in
jae
add
mov
js
push
cwtl
push
jo
dec
jecxz
add
sbb
or
push
add
mov
inc
mov
inc
jmp
mov
fmull
sbb
or
rorb
adc
dec
jp
add
js
popf
mov
or
movsb
and
lods
cmp
out
call
mov
daa
cmp
pop
fcmovb
sbbb
dec
test
in
push
call
mov
push
jns
mov
insb
xchg
push
add
sub
cltd
in
rol
add
sub
mov
out
push
sub
cwtl
test
jns
pop
fidivs
and
movsb
lods
dec
push
and
mov
adc
jb
sub
mov
pop
mov
mov
je
int3
mov
cli
push
mov
dec
and
data16
cltd
les
enter
ss
test
ss
in
rolb
push
or
cmp
das
cmp
mov
add
sub
out
dec
or
xchg
and
inc
repnz
mov
fidivl
push
push
nop
xchg
jo
dec
adc
adc
push
cmp
aad
pusha
rcl
dec
push
dec
fsubrs
and
ret
mov
mov
or
dec
mov
lods
mov
mov
or
xor
lcall
fs
add
leave
loopne
loopne
xchg
sbb
ja
loop
sbb
add
pop
xor
xor
jp
lock
cmpsb
xchg
or
lcall
call
add
pop
ss
leave
nop
popa
loop
iret
push
fwait
mov
rolb
mov
ret
sbbl
sub
mov
sbb
and
ret
test
sahf
push
dec
lea
adc
push
cmp
rol
mov
mov
add
mov
shrb
or
mov
sub
arpl
sbb
inc
sub
fists
and
test
fldl
rclb
sub
das
inc
dec
mov
pushl
push
jbe
cs
fadd
sub
dec
or
jne
xor
cmp
xchg
movsl
pop
lock
adc
ds
scas
stc
xchg
test
in
push
push
frstor
cmc
jo
imull
popf
rolb
jno
lret
cwtl
dec
popf
in
push
or
add
adc
imul
mov
lods
adcb
or
jp
mov
push
cmpb
je
jbe
inc
mov
push
xor
mov
fbstp
imul
cmp
dec
xchg
xchg
rcll
jb
imul
nop
push
in
dec
rclb
nop
xlat
stos
aad
mov
push
lcall
imul
xchg
mov
xor
mov
loope
in
adc
pop
push
in
faddl
pop
add
xlat
lea
pop
fsubrl
push
pop
ljmp
and
ret
or
aaa
movsl
inc
call
or
or
addb
jnp
leave
movsb
sub
jmp
xchg
in
push
insb
loopne
sub
or
xlat
rolb
mov
push
mov
mov
inc
andl
hlt
push
insl
and
and
cli
add
pop
mov
mov
dec
inc
inc
sbb
sub
push
mov
inc
xchg
in
mov
add
jb
and
mov
mov
cli
add
cmp
jp
int3
test
adc
pop
cmp
or
inc
add
xor
hlt
clc
test
loope
sub
push
adc
test
mov
push
add
fsubs
test
pushl
mov
jle
sbb
xor
inc
pop
push
sti
nop
mov
mov
sub
sbb
inc
xor
in
xor
inc
cmp
or
cmp
cmp
in
clc
xor
dec
cmc
repz
shll
cmc
or
imul
movsb
lods
mov
nop
std
pop
je
cmpsb
mov
stc
push
movsl
add
shl
and
loopne
push
int3
push
or
decl
inc
adc
inc
and
push
dec
mov
jl
adc
movl
test
xchg
fimull
pop
xor
mov
xchg
clc
rorl
mov
push
or
push
int
or
popa
add
fnsave
mov
lods
cltd
xchg
fidivs
dec
and
sbb
mov
sub
xchg
mov
add
xchg
cwtl
rolb
aas
sub
and
and
rcrl
sub
lock
clc
xchg
push
xor
or
push
sbb
cwtl
rclb
lret
or
sub
jnp
add
dec
pop
popa
adc
divb
test
packssdw
sbb
fs
mov
cmp
inc
cld
sub
lret
adc
mov
mov
cmp
rorb
and
test
jae
add
repnz
and
or
or
pop
push
and
lahf
rolb
out
dec
push
movb
mov
bound
and
loopne
dec
sub
sbb
rcrl
mov
lock
cmpsb
cli
sahf
or
pop
cmp
add
or
hlt
je
fwait
ja
mov
sub
rolb
push
sub
inc
add
mov
adc
or
mov
jb
dec
cmp
push
inc
pop
pusha
jl
in
xlat
sbb
add
add
xchg
adc
repz
xor
lret
push
shrl
dec
int3
sbb
fucomp
in
pop
xchg
pop
push
outsl
push
jmp
outsb
dec
adc
sub
js
aas
test
fcom
cmp
shlb
ja
push
in
push
in
push
jl
in
notl
mov
mov
int3
inc
xor
arpl
or
jl
pop
and
ficoms
xorl
lcall
mov
and
sub
push
sti
je
push
sub
xor
adc
push
xchg
push
scas
shlb
adc
adc
daa
cltd
jmp
push
in
jg
fwait
loope
jmp
inc
aam
lds
and
sub
sbb
push
or
dec
dec
and
xchg
and
enter
pop
mov
shll
sbb
mov
nop
mov
xlat
add
adc
in
add
mov
inc
das
push
push
stc
dec
lcall
inc
sahf
in
cmp
mov
movsl
push
es
addb
loopne
rolb
les
push
or
push
add
push
arpl
add
flds
add
adc
or
dec
adc
out
in
popa
int3
call
pushf
dec
inc
push
nop
sub
cmpb
shl
jmp
adc
xchg
leave
mov
push
lods
fs
mov
out
test
push
dec
cmp
imul
mov
lret
mov
and
iret
push
adc
cmp
add
movl
imul
pop
pusha
fadds
pop
push
xlat
mov
cmp
dec
rcrl
adc
lahf
nopl
adc
push
loopne
push
cld
add
subb
xlat
imul
xor
mov
pop
outsb
jo
adc
xchg
lcall
fwait
lret
ds
data16
cmc
ret
mov
notb
jne
pop
push
dec
pop
or
cltd
sub
add
push
lret
enter
pusha
xchg
dec
imul
sbb
aam
pop
fidivl
push
dec
fdivrs
or
or
cmp
add
cmp
roll
adc
popa
dec
mov
ret
int
addb
rolb
push
in
xor
mov
mov
rol
mov
ror
xor
shr
xor
sub
movb
fld
ret
or
or
icebp
add
add
add
mov
iret
out
and
ret
ljmp
and
not
and
xor
add
add
insb
aas
sub
outsb
sub
sub
stos
or
xor
into
dec
xlat
lods
ljmp
add
xor
and
and
pop
xor
imul
push
cmpsb
in
cmp
mov
repnz
push
sub
fdivrl
push
test
and
not
jo
lods
mov
rolb
testl
lcall
xor
fsubr
xor
inc
rcl
call
call
dec
xor
ljmp
rcl
xor
int
out
add
push
xor
inc
lcall
xor
rcrl
in
call
in
shl
push
sub
cmp
push
push
inc
push
bound
push
bound
add
pusha
inc
pop
mov
pop
aaa
jo
int3
add
sub
cs
call
inc
lcall
pushf
or
push
in
loopne
cmp
xor
adc
cmp
aam
pop
sub
mov
jo
int3
pop
xor
add
in
push
xor
jl
outsl
and
and
out
iret
or
imul
xor
out
add
or
xor
pusha
mov
inc
in
insb
fwait
inc
jo
ret
push
jo
ficoms
add
mov
dec
shr
xor
inc
pop
iret
jl
iret
push
loop
mov
add
jle
filds
cltd
and
fadds
pop
jbe
call
imul
fisubl
add
ret
add
xor
xlat
add
gs
fcomps
inc
fs
nop
and
psllq
lret
inc
mov
xor
or
jmp
stos
adcb
aam
aaa
cmp
shlb
call
in
sub
push
pusha
fs
out
rolb
inc
aaa
xchg
add
sub
jge
rclb
rorb
lcall
in
pusha
in
call
loope
in
add
push
adcl
mov
dec
push
nop
data16
xchg
and
push
cwtl
add
xor
cmp
inc
and
int
leave
push
push
pop
or
xor
cmp
inc
adc
mov
xor
pop
sahf
push
add
test
or
nop
and
nop
out
pop
fs
xchg
inc
pusha
dec
pusha
scas
mov
xchg
xchg
movsl
inc
in
pop
mov
or
rolb
dec
sahf
fs
pushf
loop
shr
or
add
xchg
cmpsl
dec
fs
movsl
imul
enter
fsts
or
jb
adc
insb
dec
pop
fmuls
cltd
cmpsb
imul
push
loopne
or
and
add
and
ret
cmc
cmp
jg
mov
dec
out
aas
pop
add
sub
push
mov
adc
incl
addl
pop
push
incl
sub
data16
push
add
pop
xor
pop
addl
jmp
pop
shll
pusha
jmp
or
scas
xorb
and
mov
inc
add
jne
dec
loop
les
add
mov
sub
movsl
xor
pop
lock
lea
jmp
lea
push
sub
dec
repz
jecxz
mov
and
mov
pop
dec
jne
pop
push
loope
xor
mov
sar
mov
or
cmp
jbe
or
push
xchg
sbb
fldt
pop
sub
jae
push
pop
fadds
rep
jle
xchg
add
pusha
mov
or
stos
scas
or
pusha
mov
sar
mov
outsl
pop
loopne
ror
mov
notl
ljmp
ss
jb
sbb
sub
sbb
push
sbb
or
test
das
and
daa
xchg
xor
jl
or
andb
mov
testb
bound
lea
lock
push
xchg
aad
push
push
aas
adc
test
mov
dec
mov
push
xor
cmp
xchg
inc
ret
adc
icebp
xchg
cmp
cmp
push
pop
nop
mov
add
sub
subl
outsl
add
roll
ret
jae
mov
andl
imul
push
sbb
sarb
sub
and
and
mov
int
test
jo
mov
add
inc
outsl
add
adc
and
data16
or
loope
jle
xchg
lock
pusha
ljmp
add
and
sub
and
push
or
mov
add
jge
pop
mov
mov
mov
and
sub
bound
sub
mov
fbld
mov
pop
add
mov
push
adc
cli
jecxz
inc
mov
mov
xchg
cwtl
xorl
jne
shlb
mov
cmp
dec
sti
add
inc
cmp
sub
cmp
sub
sub
mov
push
add
sub
std
add
adc
iret
cmc
outsb
mov
fwait
dec
xchg
loopne
add
add
iret
sbb
dec
jle
es
mov
mov
adc
push
xchg
addr16
mov
arpl
sbb
xor
pop
out
addl
sub
in
dec
xchg
xor
dec
inc
mov
out
ret
popf
xor
jl
pop
icebp
jo
and
enter
mov
dec
ljmp
into
imull
xchg
inc
jmp
les
adc
and
push
sub
xchg
push
lahf
and
sub
add
lods
sbb
dec
repz
pop
sbb
push
push
shll
and
testb
shlb
popf
jno
inc
and
dec
lods
jnp
sub
jnp
mov
dec
shrb
pop
in
insb
inc
test
pusha
add
xor
mov
pop
and
xor
and
pusha
mov
mov
testb
pop
ljmp
or
insb
loopne
pop
inc
jae
lret
mov
inc
mov
cmpsl
or
inc
aas
or
inc
jmp
mov
ret
movsb
inc
push
mov
ret
sub
mov
add
insl
imul
jmp
push
mov
pop
add
sub
pop
fs
movsl
and
and
out
fisttps
cmp
push
cmp
repnz
mov
adc
mov
fdivrs
push
push
jae
sbb
cltd
and
cmp
addr16
ds
add
mov
push
outsl
cltd
js
adc
jbe
ret
aaa
adc
sub
push
inc
inc
addr16
jno
pop
cmp
xchg
ljmp
and
pop
sbbl
xor
push
sbb
mov
cmp
in
and
xor
push
mov
add
mov
push
scas
sub
dec
dec
out
jge
xchg
jbe
xorl
or
imul
repnz
cwtl
add
or
mov
add
movsb
addr16
fbstp
xchg
filds
fbstp
push
push
add
sbb
pop
dec
aas
or
mov
mov
or
dec
add
mov
sub
cmp
dec
add
sub
shl
ret
add
cmp
adc
fs
addl
push
or
push
pop
mov
xor
push
xor
pop
cmp
pushf
roll
sar
xor
popl
call
push
mov
adc
push
push
cs
or
jo
mov
dec
push
adc
cmp
jmp
adcb
int3
jbe
fmull
stc
cmc
scas
adc
je
push
stos
mov
dec
inc
iret
push
push
fcoml
adc
pop
in
call
mov
fidivl
and
mov
mov
mov
clc
push
add
push
sbb
js
xchg
icebp
fdivr
adc
je
xchg
or
push
data16
mov
int3
sahf
ljmp
jne
inc
push
arpl
adc
fiadds
pcmpeqd
adc
jl
mov
shlb
sti
mov
les
xchg
pop
addr16
test
adc
or
es
adc
adc
mov
dec
sar
jb
ss
mov
sub
cmp
sbb
das
sahf
lret
jbe
sub
add
push
imul
pop
pop
mov
pop
cli
push
push
call
adc
jno
dec
push
adc
call
dec
mov
jmp
ret
jecxz
and
test
dec
bound
mov
mov
cmp
push
scas
dec
popa
cmpsb
pop
xchg
jmp
nop
pop
or
daa
push
push
mov
sub
pusha
xor
add
xchg
add
out
xchg
mov
add
sub
clc
sub
jns
push
xor
and
and
fsubrs
insl
add
test
cmpb
jb
subb
inc
pop
inc
imul
inc
xchg
inc
add
adc
cmp
inc
test
xchg
push
push
enter
add
add
adc
xchg
je
mov
sti
jns
inc
test
sbbb
pop
xchg
fcoml
push
mov
ret
xchg
or
sbb
dec
jp
negl
cmp
mov
bound
dec
xor
add
inc
cld
cli
dec
inc
pop
inc
or
inc
mov
std
lods
inc
dec
bound
stc
ja
mov
mov
enter
mov
pop
lock
push
mov
inc
mov
jns
jp
add
call
inc
dec
test
shrl
out
popf
fwait
cld
pop
or
pop
push
jmp
mov
push
cltd
or
adc
mov
mov
das
dec
add
pushf
jo
cmp
int3
ds
sub
ret
dec
lahf
mov
mov
sbb
add
dec
imul
mov
ret
mov
dec
xor
lcall
and
into
movsl
bnd
int3
in
rcl
push
aam
cmpsb
xor
mov
jle
out
inc
add
adc
aas
push
cmp
fiadds
sub
mov
mov
mov
mov
or
sbb
mov
ja
cmp
mov
movb
out
lock
in
fidivs
nop
sub
movzbl
add
inc
dec
mov
pop
call
lds
imul
mov
mov
rorl
repnz
adc
jae
mov
xor
pop
push
dec
ret
int
iret
add
add
imul
sbb
mov
cmp
je
loope
lds
or
pop
push
neg
or
pop
and
test
push
inc
cmp
add
push
sarb
push
aam
out
push
aaa
ret
push
xor
pusha
clc
and
ja
mov
and
mov
iret
push
data16
pop
pop
xor
sbb
gs
ret
sbb
daa
subb
xor
xor
cmp
mov
add
popaw
push
push
push
jl
popa
inc
add
insl
movsl
sub
jbe
divl
xor
test
aaa
mov
push
addl
inc
mov
leave
inc
bound
inc
jnp
dec
push
fsubs
cmp
mov
xchg
pop
sbb
insb
outsl
ljmp
add
jne
call
comiss
xchg
in
inc
fsubr
and
sbb
mov
xor
fstl
hlt
add
or
orb
mov
add
add
mov
pop
and
dec
shr
shl
add
loope
shl
cmpsl
and
xor
mov
mov
ficompl
movsl
movsb
mov
xlat
mov
rorb
test
jp
jge
adc
dec
dec
mov
cmp
sub
lea
mov
inc
and
and
adc
push
pop
add
sub
test
sahf
gs
ret
and
or
sub
mov
fs
dec
js
jecxz
jno
cli
sub
adc
cmpsl
adc
jp
or
mov
add
inc
sbb
cli
mov
xchg
pusha
movsl
inc
lods
adc
xchg
jno
jg
sbb
mov
js
call
jl
dec
pop
adc
xor
push
adc
mov
shll
je
add
cmp
adc
push
inc
add
or
cmp
stos
icebp
ja
inc
push
and
mov
or
cvtps2pi
inc
add
js
mov
sbb
push
xor
mov
add
mov
imul
bound
and
rclb
addr16
push
xor
add
pop
and
mov
jae
add
sbb
stos
mov
movsl
add
or
lea
ficoms
adc
loop
jae
adc
rolb
inc
shl
andb
or
nop
out
clc
xchg
push
aad
rcll
mov
xchg
sub
aam
data16
cmp
inc
xor
aaa
inc
adc
pop
mov
int
ja
pop
cmp
adc
aas
insb
adc
enter
insb
mov
jl
push
int3
jbe
jle
test
lahf
jmp
push
js
and
xor
mulb
shr
sbb
int
pop
mov
pop
mov
mov
and
add
adc
out
push
xchg
popa
push
lret
pop
dec
add
cmp
in
push
push
mov
push
dec
mov
push
ret
adc
stos
jno
mov
add
cmp
lcall
inc
jmp
sbb
sbb
insl
xchg
pusha
leave
mov
lcall
lahf
lds
and
inc
cmp
sub
rorb
clc
xchg
xor
xchg
adcb
in
jnp
adc
pushw
sbb
nop
mov
or
mull
add
push
jno
pop
ret
add
or
pop
mov
jl
jmp
rorb
add
sarl
jnp
sub
pusha
sub
repz
push
add
rclb
mov
inc
jne
test
cmpsb
xor
mov
adc
int3
dec
aaa
or
pminub
test
test
adc
xor
jae
or
or
fisttpll
sub
imul
inc
mov
or
shl
mov
mov
jns
in
mov
inc
or
aad
push
adc
and
add
xor
test
mov
xchg
adc
xor
cwtl
stc
push
gs
ds
adc
cmovns
popf
dec
inc
mov
xchg
cwtl
add
sub
dec
xor
js
sub
xchg
bt
sbb
sbb
mov
xor
aam
pusha
lods
push
inc
xor
inc
and
hlt
mov
enter
push
xor
adc
lahf
test
xor
jge
cmp
mov
dec
pop
jp
shrl
pop
movsl
aas
addb
jle
loopne
jge
icebp
cmpl
call
mov
sti
pop
push
out
shr
imul
mov
inc
pop
push
push
push
sbb
mov
insb
pop
xchg
pop
and
ja
cmp
fcompl
xor
add
push
and
lods
test
sub
xchg
add
push
jo
mov
icebp
das
or
cmpl
jne
sbb
mov
mov
mov
xchg
add
insl
fcmovbe
mov
add
sub
sbb
sub
mull
jp
aas
jo
out
cmp
jle
fiadds
lcall
jno
mov
movsb
mov
fisttpl
jl
pop
lret
loopne
ret
push
or
pop
incb
adc
leave
adc
leave
roll
adc
jmp
xchg
lods
daa
pop
push
inc
movsb
stos
popa
xchg
jno
jmp
enter
jne
repz
imul
dec
sub
stos
shl
sub
dec
insb
mov
or
repnz
insb
ret
jne
or
or
jo
add
xchg
mov
or
mov
cmp
lock
cmpsb
orb
or
lcall
jo
jne
addl
xlat
insl
insl
stos
into
or
inc
add
out
rol
pop
xchg
insb
xchg
insb
and
and
ret
mov
sbb
pop
incl
jnp
add
scas
sarl
pop
add
sub
cmp
lea
push
xor
adc
mov
sub
jo
push
leave
mov
sbb
outsl
decl
hlt
add
mov
cli
testb
je
cmp
mov
push
add
dec
fwait
fwait
rclb
push
cmp
fisubrs
sub
sub
cmp
jne
push
adc
mov
xor
mov
sub
mov
dec
push
sub
or
adc
andl
aad
push
loopne
shrb
add
test
mov
pop
mov
push
add
pop
push
aam
sub
loopne
jae
dec
dec
pusha
mov
shr
out
cld
cmp
jnp
dec
ret
adcl
in
push
dec
or
sti
je
jne
jg
add
xchg
shll
dec
hlt
add
inc
lods
inc
dec
push
test
cmp
insl
dec
cmpsb
push
lock
jo
and
dec
repz
cmp
adcl
dec
imul
test
mov
lcall
inc
mov
add
pusha
testb
movsl
xor
or
cld
push
push
add
push
push
sbb
adc
lahf
mov
stc
lret
mov
pop
subb
add
pop
mov
hlt
fildll
add
mov
xchg
lea
testb
or
rcrb
in
push
es
add
repnz
outsb
lock
icebp
roll
add
cmp
leave
jmp
pop
adc
inc
lea
push
sbb
and
push
popa
xchg
dec
adc
inc
lock
enter
sub
cmpb
sub
cmp
or
or
adc
stc
negl
sub
dec
xor
push
jnp
sbb
jmp
push
dec
pop
pop
jno
dec
inc
xor
sub
ljmp
xchg
inc
xchg
stc
and
ficompl
jo
dec
sbb
adc
sub
out
sbb
push
movb
inc
push
xchg
daa
pop
add
cmp
jnp
pop
inc
push
sbb
sbb
pop
or
add
sbb
jle
sbb
jae
dec
mov
jl
rcrl
call
sbb
sbb
rcrl
nop
clc
xor
sub
cmp
sbb
sbb
xchg
cmp
jle
xor
loopne
xchg
orb
out
scas
rolb
pop
sbb
leave
push
or
cmp
and
jo
loope
mov
mov
sbb
test
adc
and
rcrl
inc
adc
out
xlat
mov
cs
adc
jne
adc
and
imul
jl
or
cmp
rorb
mov
mov
jno
rcrl
add
pop
add
and
add
and
ss
mov
jle
rolb
add
jle
gs
add
xor
mov
push
lcall
int
pushf
lcall
fcom
adc
std
adc
ret
jb
inc
fiaddl
cmp
pusha
inc
pop
pop
or
jne
xchg
mov
push
push
lcall
push
jg
add
lods
xchg
or
or
push
sbb
adc
ret
push
nop
push
xchg
sub
dec
mov
add
pusha
out
mov
xchg
cmc
ss
adc
sbb
pusha
or
adc
sbb
shr
mov
daa
out
push
loopne
cmp
insl
loopne
in
mov
orl
mov
loope
adc
aam
lock
lock
or
dec
add
sub
int
adc
orl
adc
fistpl
and
rclb
push
jno
xor
arpl
xchg
clc
xchg
adc
xor
pop
cmp
or
repz
push
xor
add
add
loopne
xor
or
push
sbb
ss
loopne
jo
add
inc
adc
adc
inc
mov
inc
enter
sub
cmp
jmp
and
stc
cmp
aas
pop
cmp
or
add
push
mov
pop
in
jle
adc
xchg
xor
pop
mov
clc
call
aas
jmp
cld
pop
cltd
pop
fidivl
xchg
js
sbb
inc
ja
in
jmp
add
push
add
fistl
lods
cmp
test
add
imul
sub
mov
test
jecxz
test
adc
fstpt
out
fcomps
and
or
push
and
imulb
lods
addb
fisubrs
ffreep
out
add
ja
fcmovnu
dec
sub
mov
push
ds
jae
nop
xorl
rorb
insb
into
add
sub
xor
cmc
int3
shrl
pop
repnz
sar
xchg
pop
imul
mov
addl
es
xor
mov
ret
push
dec
push
xchg
out
cmp
dec
sbbl
insb
or
sbb
ret
add
int3
inc
or
adc
sub
ret
shll
add
fcoml
pop
mov
cmpsb
int
jnp
xor
sbb
push
add
jno
icebp
loop
inc
push
out
jb
sbb
sub
jmp
in
je
adc
push
mov
mov
xor
lods
scas
pop
test
jmp
mov
adc
shl
xchg
test
pop
rolb
pop
dec
mov
or
lods
push
imul
jge
sarb
cmp
jbe
inc
rolb
icebp
push
imul
jl
cmp
in
pop
clc
xchg
faddp
cmp
shll
jp
push
icebp
xor
clc
popa
push
data16
pop
out
inc
pop
je
mov
jge
sbb
add
daa
jbe
sarb
cld
cmp
push
bound
push
push
or
das
cmp
cmp
je
inc
xchg
hlt
test
inc
jne
fisubrs
cmp
and
bound
add
sub
test
pop
push
adc
adc
fs
add
dec
and
inc
rcrl
sahf
jne
je
jmp
or
push
dec
and
dec
mov
push
jns,pn
add
test
sbb
loope
add
cmp
dec
push
jmp
js
dec
imul
andl
xor
icebp
fdivrl
push
jnp
sbb
cmp
mov
sub
dec
subl
cmpsl
inc
shll
test
rorl
mov
dec
inc
pop
pop
rol
mov
push
jo
gs
or
in
jae
push
push
pop
push
or
inc
or
sbb
dec
clc
or
add
lds
cmp
mov
xchg
add
in
dec
push
popa
dec
push
dec
je
jl
adc
jecxz
mov
jnp
mov
xor
subb
movsl
ljmp
or
icebp
mov
pushf
push
xchg
jl
xlat
xchg
inc
loopne
push
push
lock
roll
jmp
cmpsl
adc
int3
push
stos
jmp
cmpsl
and
addb
cltd
adc
or
xchg
sahf
jne
push
loop
adc
push
pop
ret
adc
mov
mov
adc
lea
add
test
cmp
mov
xchg
les
lds
sub
and
sbb
dec
je
popf
jmp
dec
insb
test
jne
pop
loop
imul
sbb
loop
pusha
jne
shll
sbbb
nop
pop
lret
jle
lods
ja
enter
push
movl
inc
and
mov
repnz
rorl
test
orl
pop
jle
rcrb
js
xor
add
shrb
aas
inc
push
loope
mov
scas
ret
cmp
lods
int3
add
inc
jle
mov
or
scas
mov
andb
xlat
and
cmp
mov
and
clc
jg
sarl
test
movd
movaps
out
push
enter
shlb
jle
xor
cmc
or
das
cli
rcl
lret
je
in
pop
adcl
push
jge
repz
or
jg
cltd
xor
ret
or
inc
fists
jnp
mov
sub
add
out
cld
cli
jnp
or
add
adc
add
mov
fadd
roll
add
mov
mov
jo
mov
int
add
sbb
sub
jns
sbb
xor
sbbl
and
jmp
xchg
ja
push
ret
stos
or
icebp
lret
or
push
mov
add
xor
sub
test
mov
mov
xchg
adc
push
or
popa
pop
call
stc
and
into
iret
sbb
icebp
push
and
mov
jge
in
jb
jge
pop
sbb
push
or
inc
mov
mov
std
and
dec
jle
jb
lock
mov
fmul
icebp
push
sbb
loop
cli
add
xor
fldcw
add
hlt
rorl
jmp
inc
dec
mul
or
rorl
je
push
out
push
rep
mov
dec
ljmp
fxch
or
test
adc
test
adc
mov
imul
ss
cmp
insl
xor
and
push
roll
roll
movsb
out
stc
repz
mov
pusha
sbb
pop
and
cmovs
mov
push
pop
int
test
aas
sbb
aam
stc
or
rep
jmp
mov
jmp
mov
fxch
insl
add
test
sub
hlt
lahf
imull
dec
push
js
or
pop
and
sbb
or
pop
or
mov
or
scas
adc
pop
fiaddl
dec
push
dec
add
add
and
fisttpl
sahf
out
enter
mov
cmp
out
mov
mov
call
iret
in
in
lock
hlt
and
clc
cld
mov
insb
call
push
lock
fldenv
mov
cld
push
or
sbb
call
nop
inc
pop
popa
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
ss
repnz
subb
adc
xor
daa
stc
sub
pop
nop
xchg
push
mov
push
fldcw
jl
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
imul
add
mov
sahf
mov
or
push
inc
clc
cmp
repz
push
pop
fs
cmp
repz
sbb
cmp
repz
adc
adc
cmp
or
add
sbb
or
aaa
mov
test
pop
adc
daa
ja
mov
cmp
mov
and
cwtl
mov
test
pop
shrb
arpl
loope
jno
out
cmp
jnp
insl
mov
add
sbb
cmp
xchg
mov
xor
pop
test
mov
push
inc
shlb
push
mov
jmp
jp
je
mov
ds
rorl
sahf
mov
push
sarb
pushl
xor
js
loop
sbb
jo
pop
pop
rorl
fisubl
adc
les
adc
sbb
je,pn
cmpsl
stos
or
xor
sarl
mov
push
sbb
int
fcomp
call
iret
or
and
ljmp
and
inc
pop
inc
aaa
sub
push
fcomi
arpl
outsl
adc
xor
add
outsl
jne
xchg
jmp
push
sub
dec
test
inc
je
pop
add
push
jo
or
xchg
inc
mov
stos
or
jmp
adc
adc
inc
cmp
jne
inc
cmp
es
inc
sbb
dec
mov
lods
sbbl
push
push
adc
fadds
out
and
add
das
and
sub
dec
or
repnz
inc
inc
cmp
add
cmp
pushf
rolb
iret
or
arpl
dec
sahf
aaa
xchg
cmp
adc
cmp
loope
rcrb
cmp
in
es
or
xchg
andb
add
xchg
pop
xchg
popa
and
cmpb
inc
and
xor
pop
adc
popl
das
addr16
jmp
mov
pop
and
sbb
pop
cmp
stos
enter
or
sarl
sub
add
ret
out
jnp
inc
popa
adc
loope
shlb
dec
leave
sbb
sbb
insl
imul
rolb
cmp
mov
mov
adc
push
rol
push
fmull
inc
cmp
aam
lret
jne
sbb
sarl
mov
out
and
push
mov
fimuls
mov
cmp
jmp
and
lea
dec
scas
fldcw
enter
push
jns
adc
xchg
inc
or
add
outsb
jle
shr
jle
sub
orl
lock
inc
sbb
fwait
xchg
adc
jg
mov
pop
inc
xor
mov
xchg
orl
and
and
arpl
cmp
nop
icebp
and
xor
mov
daa
jne
or
ja
je
gs
or
sub
dec
pop
jle
loop
jecxz
jmp
jae
cmp
ja
loop
cli
mov
movb
jl
inc
dec
adc
neg
mov
in
mov
cli
or
add
jmp
or
push
ds
mov
inc
mov
mov
cmp
jb
mov
fstpt
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lds
or
adc
mov
or
push
jmp
push
dec
sub
sahf
or
jl
pusha
xor
push
xor
in
xor
ljmp
cmp
jb
lea
push
adc
sub
outsb
mov
add
test
je
cmp
jne
mov
push
cmp
fwait
cmpsl
mov
es
jne
jmp
fwait
jns
in
sbb
pop
lock
mov
inc
incl
dec
jmp
iret
iret
repz
jmp
std
std
jmp
cld
cmp
jae
cld
ret
pmaxub
and
adc
scas
jb
mov
push
movb
shr
pusha
dec
push
mov
hlt
or
lea
je
mov
xadd
loop
or
inc
or
testb
pop
sub
add
adc
push
or
jo
mov
mov
pop
out
inc
push
add
sub
std
or
leave
dec
push
inc
or
or
pop
sbb
sbb
ljmp
jo
pop
adc
xchg
sub
or
fisttpl
pop
xor
jl
push
add
add
iret
mov
subb
adc
or
mov
add
mov
mov
dec
sub
mov
loopne
sbb
and
arpl
push
popa
out
push
sbb
and
xchg
adc
jae
xor
stos
mov
fbld
xor
inc
push
push
pop
div
inc
inc
inc
in
jb
sub
adc
sbb
lret
clc
push
xor
lods
pop
xor
andl
push
mov
idiv
pop
test
add
cmp
nop
jo
mov
xor
dec
xor
pop
adc
loope
jb
jns
xchg
mov
add
gs
outsl
or
push
loopne
and
enter
push
fistpl
rolb
cmp
push
sub
push
xchg
andb
subl
push
or
add
and
lods
push
mov
movb
lea
cmpl
icebp
pop
rol
push
mov
inc
fstl
cmpsl
addb
pop
inc
jmp
dec
fucomp
incl
orl
jmp
adc
jne
sub
add
outsl
add
sbb
mov
add
cmp
xor
dec
or
stos
jl
cld
or
and
adc
jge
or
adc
dec
add
add
lds
js
inc
mov
xchg
ljmp
adc
les
add
test
lcall
lret
sub
jmp
fidivs
lret
sub
and
mull
stc
sbb
ja
xor
leave
cmp
jno
dec
adc
sbb
loopne
daa
movsb
inc
adc
push
and
fnsave
mov
test
push
je
dec
sub
fsubrl
stos
push
pop
cld
mov
fnstcw
cmc
mov
sbb
sbb
test
jne
push
xorl
or
or
jne
jbe
orb
add
push
popa
shl
xor
and
aad
add
into
mov
xor
in
rolb
sbb
call
pop
pop
aaa
scas
loope
push
cmp
add
add
add
mov
sbb
mov
mov
popa
push
sub
pusha
inc
daa
push
pushf
inc
or
adc
loopne
stc
dec
jbe
and
adcl
stos
mov
lret
sbb
cmp
push
mov
pop
sub
test
lods
pop
cmp
jbe
sahf
push
inc
les
dec
push
data16
movsb
push
cmp
data16
jne
negb
dec
cltd
pusha
aad
jmp
mov
adc
or
mov
push
adc
adc
sbb
shrb
mov
mov
inc
inc
data16
popa
rorb
and
sub
call
hlt
cmp
mov
inc
bound
xor
sub
sbb
adc
shrb
lret
dec
jmp
mov
inc
sub
xor
sub
ds
xor
push
aas
push
es
mov
jmp
mov
xchg
adc
adc
push
scas
rcrl
stos
lock
pop
leave
jl
lods
out
push
dec
push
hlt
xor
xor
inc
in
xchg
lea
lock
rclb
and
or
add
add
sbbl
pop
fisttpll
adc
arpl
xor
or
shlb
clc
jae
bound
sbbb
enter
dec
adc
js
mov
adc
push
push
and
fiadds
adc
repz
add
push
xchg
shl
or
jne
ror
xor
int
hlt
je
inc
adcl
jb
lea
push
adc
inc
xchg
aam
cmp
in
add
movsb
mov
enter
cltd
or
imul
decb
es
dec
or
dec
xor
push
mov
lods
mov
ret
push
or
nop
pavgw
push
out
cmp
push
sarb
sbb
push
mov
jmp
pop
xor
pop
adc
push
push
push
dec
stc
inc
jo
pusha
push
push
lret
push
mov
inc
pop
test
enter
loopne
sbb
ret
adc
clc
mov
adc
add
enter
xchg
sbbl
and
icebp
add
mov
or
hlt
add
nop
scas
out
call
jge
or
dec
and
int
adc
mov
movb
mov
dec
push
sub
leave
sub
add
std
add
xchg
push
popa
insl
bound
dec
push
push
fstps
and
pop
jl
test
lret
je
push
stc
xlat
rorl
les
pop
adc
sbb
adc
loopne
shlb
or
cmp
adc
and
sub
sub
adc
pop
mov
sahf
push
pushl
dec
rorl
aas
shrb
aam
mov
jle
cmp
xchg
aad
lock
outsb
pop
call
int3
push
adc
ret
ds
push
push
dec
push
mov
mov
ljmp
push
inc
add
sets
repnz
and
inc
rorl
in
sahf
and
xor
repnz
mov
jne
mov
fcompl
repz
fisubs
and
fs
dec
pop
fnstcw
xor
inc
push
mov
and
out
int
jl
push
pop
je
push
lcall
jb
sub
mov
insl
ljmp
sbb
add
push
orl
mov
mov
ret
cmpsb
popf
pop
pop
and
pop
xlat
cld
fmuls
xchg
shlb
loop
and
sub
dec
mov
or
clc
inc
in
sbb
lods
lods
jp
push
jp
and
xlat
test
sub
mov
loopne
push
cmpsb
fdivrl
or
fimuls
lahf
push
pop
dec
sbb
cmp
hlt
cmp
adc
sub
mov
jl
mov
fistpll
push
push
or
imul
sbb
pop
loopne
xchg
cs
add
or
sub
and
cli
fstps
push
mov
jb
mov
fistpl
int3
add
add
mov
cmp
add
lcall
popa
adc
inc
rcrb
add
inc
adc
push
cmpl
mov
sub
xchg
shlb
popfw
jbe
rcl
rolb
xchg
mov
add
mov
cld
push
out
dec
add
movb
dec
add
mov
mov
pop
push
xchg
or
sub
loopne
pop
out
pop
sti
mov
sub
cmp
push
rolb
daa
mov
pop
lods
mov
sbb
mov
adc
sbb
out
call
or
mov
xchg
jnp
mov
shlb
in
js
and
xor
aaa
xlat
fdivs
loop
jge
jge
adc
pop
inc
pop
pop
mov
adc
loope
mov
mov
pop
in
inc
and
cmp
out
jl
add
inc
fstp
test
clc
call
ss
xchg
xor
pop
cwtl
cmpsl
addl
cmp
mov
loope
xor
out
xor
pop
cs
fcoml
jle
lcall
bound
mov
lock
cmp
cmpsb
push
and
mov
pop
mov
or
inc
xor
or
cwtl
pop
mov
loope
out
push
pop
jle
inc
mov
cmp
je
movzbl
add
sub
je
or
lahf
ret
lea
repz
imul
inc
and
enter
add
repz
add
adc
dec
add
add
ljmp
add
lret
add
add
add
jb
mov
and
xchg
pop
push
pop
out
push
push
jb
or
or
push
nop
or
or
or
or
push
pop
or
jns
cmpsb
repnz
or
or
or
out
repnz
add
mov
push
push
inc
enter
nopl
push
fcomps
adc
pop
adc
fwait
add
push
sub
adc
enter
adc
adc
jns
cmp
add
adc
add
adc
lcall
adc
inc
push
inc
push
push
push
push
xchg
and
sbb
pop
xor
pop
enter
sbb
jns
sbb
call
out
sbb
sbb
sbb
iret
mov
sbb
add
mov
sbb
iret
pusha
push
push
inc
call
enter
pop
jne
add
add
sub
cmp
mov
push
fldt
add
add
cmp
xchg
enter
or
loopne
inc
add
inc
in
imul
je
lcall
shl
sahf
cmpsl
jns
lea
aad
cmp
cmpb
mov
iret
xor
add
call
mov
adc
jns
cwtl
jmp
push
nop
addr16
push
sbb
out
in
in
sbb
sbb
inc
fsubrp
inc
in
sahf
out
adcl
sbb
pop
mov
xor
or
xor
cmp
pop
enter
repnz
out
std
repz
hlt
hlt
shll
jb
sahf
or
fwait
mov
fdiv
inc
jg
mul
popa
in
pop
idivl
inc
lcall
in
sbb
clc
cltd
adc
inc
stc
inc
sahf
lret
add
cld
cli
cli
or
sbb
iret
sti
sbb
outsl
in
repnz
cld
cld
cld
je
cld
push
por
sahf
addr16
fdivrp
xor
sbb
jne
add
lret
push
add
mov
lea
adc
lahf
dec
das
xchg
imul
cmpsb
dec
xchg
es
mov
mov
in
sub
fdiv
inc
xor
mov
push
push
xchg
sti
out
out
loop
cmp
outsb
call
cmp
sti
sub
movsb
mov
jmp
xlat
in
sbb
cltd
in
add
mov
adc
jb
pusha
sbb
pop
insb
nop
out
out
cltd
push
lock
xchg
inc
pop
add
cli
push
cli
lret
and
mov
lcall
in
mov
adc
xchg
mov
dec
in
stc
div
negl
les
clc
add
and
stc
out
clc
movsb
test
clc
sti
sti
fmulp
add
sti
cltd
mov
adc
inc
or
sbb
cmp
and
shl
shrb
cld
sub
mov
loop
cmp
mul
pop
sub
xchg
cmp
imull
xor
mul
sbb
sbb
pusha
and
out
xchg
cmp
pop
inc
mull
notl
sub
sti
imul
sbb
ret
jno
mulb
jns
mov
mov
sbb
pop
repnz
negb
jae
out
jno
adc
jb
negb
testb
sbb
repnz
scas
in
mov
pop
xlat
xchg
pop
leave
xchg
cmc
jae
pop
cs
in
dec
cmc
div
imulb
fwait
and
addl
clc
loopne
jns
hlt
stc
popa
cmp
mov
xlat
jb
jno
hlt
pop
pusha
leave
mov
jne
push
hlt
roll
push
data16
shr
cs
push
jo
loopne
fstps
sti
lahf
pusha
adc
das
xchg
push
ds
sub
jp
loope
push
and
jne
subl
mov
test
movsl
test
mov
inc
repz
inc
mov
inc
push
sbb
jmp
mov
mov
xchg
repnz
mov
sbb
sbb
in
jmp
jb
cmc
and
add
and
mov
arpl
test
mov
and
je
jo
icebp
sub
shll
icebp
test
rclb
cmp
xchg
sbb
cmc
add
cmpsl
cs
jecxz
ffree
lock
and
fcompl
stc
stc
cmc
jne
pop
daa
xchg
lock
lock
adc
xchg
lock
jl
mov
das
cmp
ret
repnz
push
lret
sub
out
sbb
in
cmovno
cmpb
add
add
nop
add
test
jnp
cltd
or
adc
add
pop
shll
cmp
out
enter
add
sahf
and
ljmp
je
push
out
mov
and
cmp
fwait
int
inc
add
push
cmp
pop
mov
cmp
mov
test
or
repz
pop
stos
pop
dec
mov
xor
out
push
sti
push
sbb
int
jns
dec
pusha
insb
lea
icebp
dec
shl
mov
outsb
push
inc
dec
inc
out
into
outsb
or
inc
lods
imul
lods
in
push
xchg
ret
and
test
lret
test
ljmp
mov
mov
add
jge
push
sub
in
or
push
pop
fistpl
pop
pop
negb
push
or
adc
add
addl
movsb
pop
rclb
fdivs
fistps
cmp
dec
insl
jnp
cmp
mov
testb
repz
adc
insb
sub
imul
and
popa
sub
clc
and
mov
jecxz
call
inc
jl
mov
movsl
sub
shlb
mov
adc
in
pop
push
mov
adc
mov
dec
aam
push
mov
jecxz
repnz
js
cld
add
xchg
imul
out
inc
or
adc
cmp
cld
adcb
inc
jb
pop
imul
and
pop
sub
inc
inc
pop
pop
and
aas
dec
cmp
enter
xchg
or
inc
iret
rcrl
inc
fisubs
shlb
ret
test
add
sub
mov
push
cmp
nop
cmpsl
cmpsb
or
pop
and
or
fisubl
das
adc
in
lods
insb
mov
inc
inc
pop
cmp
enter
add
push
push
lds
jmp
push
cmp
mov
xchg
in
adc
adc
push
cmp
pop
or
hlt
loop
or
leave
or
fiadds
dec
xor
mov
jmp
mov
add
mov
sahf
jne
jo
sub
inc
rcrl
push
pusha
or
adc
adc
jge
sahf
adc
stc
sbb
test
dec
les
cltd
adc
sub
outsl
ss
mov
mov
inc
inc
cmp
scas
xor
dec
ret
out
jns
popa
out
loopne
mov
dec
mov
or
jg
push
mov
pop
pop
push
xchg
cwtl
ja
mov
cmp
and
and
and
out
and
mov
jno
dec
popa
mov
dec
mov
ljmp
add
in
sub
pushf
cmp
pmulhuw
in
or
lahf
push
pop
or
roll
shr
or
ret
testb
fisttpll
add
push
inc
or
fimuls
jne
mov
mov
add
mov
mov
inc
and
adc
or
iret
aam
or
add
xchg
lcall
cmp
push
dec
push
mov
push
jl
cmp
decl
jne,pn
xor
xchg
test
lret
aad
xor
aaa
jbe
push
cltd
pop
idiv
mov
push
pusha
or
add
dec
sub
dec
sbb
mov
mov
xor
push
rol
dec
bnd
cmp
jae
dec
cld
xor
lods
add
pop
jae
pop
jbe
movlps
push
mov
dec
shr
test
sub
daa
ret
inc
adc
loopne
movsb
pop
out
flds
jg
setne
mov
lret
add
call
insb
adc
je
or
sbb
dec
je
push
push
jne
push
test
incb
pop
insb
adc
push
loop
sub
negl
or
lcall
inc
pop
cmc
sbb
mov
pop
push
das
sbb
test
mov
ret
add
pop
add
lea
mov
stc
mov
xor
add
adc
notb
dec
jp
push
adc
pop
ja
pushf
fisubl
mov
sbb
dec
adc
stos
and
cmp
loopne
fadds
pop
jmp
cmp
jle
sub
sub
insl
or
mov
jge
push
mov
add
push
cltd
pop
idiv
inc
mov
mull
inc
inc
xor
xchg
inc
out
cmp
pop
mov
push
subl
jmp
xchg
mov
xchg
mov
xor
cli
enter
or
add
dec
inc
fcomi
adc
fs
jbe
insl
mov
sub
pop
adc
cs
je
insb
sub
subb
sbb
sbb
sbb
jecxz
dec
mov
sub
sbb
or
add
insl
dec
or
adc
cmp
push
ret
call
inc
sti
and
push
adc
pop
sub
sbb
enter
cmp
inc
insl
pop
add
les
sub
outsl
push
xor
loope
push
jmp
int3
icebp
jecxz
jge
pop
je
sbb
test
jecxz
jl
fs
addr16
add
mov
cmp
xchg
fldenv
inc
ret
xchg
mov
je
dec
inc
cli
sti
push
add
or
mov
mov
lret
mov
push
mov
popl
or
call
and
push
adc
out
mov
or
fsts
inc
inc
push
mov
pop
stc
pop
push
adc
std
loopne
lcall
push
push
pushf
add
or
adc
test
and
and
or
sahf
sub
push
je
stos
insb
adcb
cmpb
popa
arpl
jmp
xor
xor
shll
adc
or
push
cld
and
inc
mov
adc
aaa
push
ficoms
je
inc
adc
fdiv
cmp
or
out
call
sub
out
icebp
and
xchg
mov
sub
aas
mov
shll
xchg
rorb
sbb
clc
push
pop
xchg
xorb
fcoms
sbb
fs
js
loop
ret
mov
adc
mov
mov
add
clc
jle
lcall
sbb
test
lea
xchg
or
sbb
add
lcall
pop
test
fisubl
mov
inc
inc
cmp
je
xchg
mov
imul
fs
orb
sbb
add
fidivrl
es
or
dec
popa
or
ficoms
sbb
insl
inc
pushf
sbb
sbb
push
mov
incl
lods
fldl
jl
mov
push
inc
sbb
lgs
cmpsb
sub
cmp
mov
pop
sbb
or
mov
pop
cmp
bound
push
mov
sbb
or
xchg
dec
add
jmp
rolb
adc
mov
push
enter
test
mov
test
adc
test
cmp
cmp
je
inc
push
adc
sarl
mov
dec
imul
mov
sbb
push
subb
inc
int
dec
add
fs
pop
addb
cs
ja
cli
frstor
sub
cmovs
add
hlt
push
lret
push
dec
sahf
sbb
mov
push
pand
dec
dec
mov
jl
and
push
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
pop
movsl
push
jmp
das
dec
jmp
call
sbb
inc
into
or
dec
push
popa
pop
inc
mov
and
icebp
cmp
mov
stos
push
sbb
mov
das
in
testb
xchg
call
lods
inc
pusha
and
mov
je
push
and
in
loope
and
aam
mov
out
scas
jl
cmp
mov
and
jne
push
aaa
push
jo
sub
cmp
inc
and
mov
in
push
push
outsb
push
rcrl
movsb
and
push
lret
inc
push
jmp
cmp
dec
jg
ja
or
inc
inc
outsb
sbb
mov
mov
sbb
ja
or
add
mov
sub
cltd
lods
jmp
mov
push
push
mov
xor
push
out
add
xor
pop
lock
push
or
es
inc
jmp
bound
dec
sarb
adc
xor
enter
data16
mov
pmulhuw
jo
and
test
add
pop
enter
cmp
mov
pusha
jmp
mov
inc
ja
add
push
or
in
xchg
gs
mov
and
cmp
jl
mov
clc
testb
arpl
in
inc
cltd
cmp
das
rorl
or
add
sub
sbb
or
push
outsb
adc
and
cs
arpl
loope
cmp
cld
jmp
pop
arpl
xchg
push
mov
cs
mov
jae
mov
or
lcall
std
mov
push
add
add
fs
js
add
orl
mov
adc
test
outsb
jecxz
dec
clc
xor
adc
testl
jno
xor
test
and
dec
push
jbe
jbe
pop
repnz
inc
js
adc
or
sbb
push
push
and
ss
lahf
jo
je,pt
inc
les
movsl
rclb
and
push
pusha
outsl
jmp
mov
sarl
xor
or
sbb
sbb
lock
push
mov
je
jne
sbb
cmp
enter
push
adc
inc
xchg
inc
repz
adcb
test
or
enter
sbb
pop
sub
jmp
nop
mov
xchg
add
or
pop
xor
aas
fcompl
dec
pop
jmp
addb
insb
xlat
xchg
inc
add
add
or
mov
adc
and
and
scas
xor
sbb
push
add
je
lahf
inc
push
sbb
cld
dec
rcrl
and
cmp
mov
ja
push
sub
sbb
xor
test
pusha
dec
call
adc
push
or
pop
jge
cmp
js
or
push
cmp
jge
xchg
shlb
sbb
ja
lods
mov
out
jbe
orl
fstpt
add
jle
sbb
push
sub
sub
adc
mov
cmp
repnz
inc
jle
jmp
jg
adc
add
pop
lcall
xchg
cmp
mov
add
enter
cmp
mov
fistpl
shlb
sarl
call
add
shl
hlt
fadds
ss
cmpsb
inc
mov
xchg
pop
mov
mov
sbb
stc
sbb
cwtl
or
sub
fs
jnp
or
cmp
fs
dec
test
sub
ret
enter
aam
jmp
lock
leave
add
ffree
sbb
sub
xor
ret
lods
rorb
in
sbb
mov
jecxz
dec
imul
push
lea
loopne
out
or
in
xor
push
nop
testb
call
mov
lock
ljmp
dec
sbb
adc
push
sbb
jnp
pushl
aam
je
add
iret
xor
push
lods
pop
jae
dec
or
pop
jo
inc
sarb
fisttpll
mov
js
push
cmp
mov
mov
movsb
pop
sti
sbbb
add
dec
xchg
insb
adc
push
or
cwtl
xlat
mov
pop
pop
cld
add
jg
pop
and
lods
fcomps
add
and
add
push
dec
hlt
stc
jo
mov
cmp
jne
pop
repz
push
add
cwtl
push
jo
int3
fnsave
cli
and
dec
push
mov
pop
or
cltd
enter
cld
sub
movsb
pop
test
or
pushf
pusha
orb
mov
es
pop
xor
push
adc
lods
icebp
lds
push
lahf
xchg
lock
xor
push
push
jbe
adc
sub
jg
mov
sbb
jg
pop
and
popl
es
lods
cmp
add
inc
imul
test
push
movl
cmp
es
rorb
xor
and
fsubrp
sti
mov
adc
addb
push
xchg
shrb
jl
push
fdivl
or
mov
xchg
adc
pusha
and
sub
mov
fistl
or
add
in
data16
push
or
xor
xor
into
cs
ret
sbb
mov
and
bound
sub
or
shl
subl
stos
add
push
add
sub
mov
inc
add
testl
lret
cmp
fstp
movsb
and
pop
test
jle
orb
loopne
mov
dec
adc
mov
aaa
test
mov
and
and
lea
out
sub
stos
ja
sub
mov
mov
aas
push
push
mov
xor
cmp
cmp
cld
pushf
add
out
ficoml
push
push
insl
xchg
imul
popa
mov
insl
push
loopne
push
push
in
or
enter
cmp
xor
lods
int
icebp
pop
adc
sbb
imulb
xchg
fucomi
adc
je
and
loopne
push
int3
or
test
add
mov
and
mov
leave
sub
mov
cmp
mov
sub
ja
lret
add
jmp
cmp
lds
ljmp
or
ret
and
enter
je
clc
mov
add
hlt
jg
cmp
movb
inc
shlb
add
sub
xchg
inc
fiadds
ds
jo
or
dec
inc
clc
pop
jno
add
mov
les
mov
insb
push
cld
add
shl
aas
jmp
adcl
lods
mov
clc
pop
mov
mov
cmpsb
push
xorl
cmp
xchg
sbb
inc
std
jne
loopne
js
imul
fldt
stos
enter
sarl
jmp
out
rolb
inc
sub
and
dec
add
mov
in
outsl
push
and
rcrl
lods
dec
mov
jmp
mov
adc
out
movsl
fldl
jo
push
jmp
fs
dec
mov
loope
add
in
add
into
xor
and
inc
sarb
std
stos
inc
jae
cmp
jbe
decl
lea
mov
test
cmp
loopne
xchg
pop
inc
pop
leave
inc
inc
sarb
and
mov
xor
cmp
test
jmp
sub
sub
sbb
adc
jg
loopne
andb
cmp
and
mov
inc
and
pop
or
shrl
inc
sbb
and
add
jb
mov
xor
inc
xchg
je
dec
testl
mov
lea
loopne
pushl
inc
mov
inc
inc
inc
dec
jne
mov
inc
imul
insl
neg
orl
sbb
jle
loope
push
mov
inc
push
mov
inc
or
inc
dec
jne
inc
add
sahf
fs
decb
xor
gs
jnp
sbb
scas
jmp
cmp
ret
adc
sub
incl
test
mov
adc
mov
mov
ret
loop
push
and
out
adc
mov
inc
sub
inc
sbb
pushf
and
ja,pt
cmp
cmp
dec
loopne
cmpsl
or
mov
push
inc
fisubrl
inc
loope
enter
adc
aam
cmp
push
xchg
mov
test
pop
xor
dec
cmpsb
push
lock
stc
jb
sub
mov
mov
enter
loop
rcl
mov
lret
pop
sub
mov
call
or
mov
add
dec
jmp
stos
xchg
int
ss
push
out
arpl
and
sbb
push
ljmp
cltd
lods
xchg
adc
cltd
frstor
inc
and
test
add
add
lahf
jmp
jle
leave
cmpl
pop
push
and
pop
movl
push
or
in
mov
or
push
cmp
lods
pop
sahf
pop
sbb
mov
imul
popf
inc
jae
scas
nop
mov
sbb
adc
xor
inc
xchg
int3
xchg
and
or
cwtl
shrb
sarb
in
push
cwtl
mov
outsl
scas
jl
jne
cli
ret
pushl
out
jle
out
inc
pusha
or
push
cmpl
add
lds
add
pop
cmp
xor
inc
add
and
jl
dec
or
sbb
or
in
pop
add
mov
push
or
xorb
rcrb
adcb
mov
mov
xchg
fidivs
cmpl
push
pop
pushf
jnp
rol
adc
movsl
sub
or
fiadds
xor
loopne
dec
inc
sbb
dec
xor
jecxz
xchg
sbb
je
push
mov
stos
ss
xchg
mov
cmp
pop
in
or
cltd
and
jno
pop
jbe
test
add
dec
lock
test
jle
sbb
jo
adc
cwtl
loope
lcall
dec
add
mov
jp
or
sbb
or
push
pop
mov
aad
pusha
add
push
and
add
mov
sub
sarb
add
daa
mov
rcrb
xor
pop
inc
mov
push
cmp
xor
dec
add
pop
shl
cmc
or
leave
cld
test
repz
pop
ror
cmpsl
out
call
xchg
sbb
cwtl
sub
cmc
fsubrs
lods
sbb
push
shrl
in
scas
push
out
xor
mov
mov
mov
in
push
idivb
and
clc
cs
dec
addb
add
sub
mov
shr
and
sbb
add
popf
mov
push
cld
push
jo
in
xchg
mov
movl
add
rolb
or
jno
les
mov
insb
aam
jecxz
add
jae
bound
pop
dec
jg
lret
fnstcw
and
push
outsl
mov
dec
sti
lods
pop
inc
xchg
clc
dec
jl
ret
sbb
loopne
push
enter
aas
cmp
push
sub
movsb
pushf
xchg
pop
lock
add
add
xor
not
movsb
in
push
sbb
lahf
sub
movsb
jmp
mov
lcall
stc
mov
clc
and
rcl
mov
and
jb
inc
inc
mov
and
dec
pop
cmp
push
sbb
jle
pop
sbb
adc
push
mov
pushf
mov
sub
jbe
and
pop
cmp
das
sti
shll
test
pop
clc
mov
lea
or
push
mov
sbb
inc
js
xor
inc
pop
jbe
adc
shll
lret
enter
sbb
xchg
pushf
cmpl
int
leave
adcl
mov
and
daa
test
mov
jno
test
fwait
cmpsb
jp
dec
ja
mov
adc
xor
mov
mov
out
mov
dec
push
cwtl
mov
es
pop
stos
scas
dec
mov
mov
push
xchg
mov
sbb
xor
add
sbb
das
loope
push
inc
mov
loope
jns
fisubs
sub
andl
stos
dec
lea
sbb
xor
mov
xor
imul
fcoml
push
push
xchg
fcomps
int3
pop
pop
jle
data16
popf
enter
jg
pop
movsl
shrb
jp
or
sarl
rcr
out
rolb
aaa
dec
cld
adc
pop
inc
cmp
aam
sub
push
xchg
mov
pop
andnps
jno
call
sub
test
push
pop
popf
pop
pop
xchg
in
mov
pop
jmp
jge
sub
xor
mov
add
xor
add
push
dec
aad
or
bts
jmp
repz
ret
js
aam
or
movb
mov
mov
mov
dec
and
inc
lea
push
shl
iret
aas
push
fmuls
mov
inc
lea
lea
jns
out
and
adc
add
mov
fsts
jmp
bound
and
mov
loopne
nop
mov
lea
hlt
movups
enter
mov
in
loopne
mov
sahf
out
xchg
or
push
movsb
lods
mov
orb
xlat
mov
inc
lock
push
or
or
mov
aaa
cmpsb
xor
cmpsb
sbb
push
sbb
jp
cs
push
ret
jno
outsl
es
test
js
push
dec
and
mov
pop
xchg
jle
cli
popa
adc
push
test
push
jne
add
sti
lcall
jge
inc
mov
add
scas
mov
mov
push
movsb
lret
test
rolb
andb
inc
mov
insl
add
sbb
dec
loop
rcl
and
or
loop
lds
call
and
cli
jp
iret
and
xor
clc
notl
lea
or
add
sbb
lods
shrl
ds
sub
mov
and
popf
mov
daa
cltd
xor
add
inc
orb
jge
enter
fs
div
inc
or
je
popa
insl
loopne
popf
dec
dec
adc
mov
jae
sbbl
lcall
jge
and
imul
sbb
adc
xchg
add
xchg
shlw
or
push
adc
mov
xlat
add
ja
test
inc
jbe
mov
addr16
push
pusha
add
cmp
aaa
inc
lcall
adc
or
divb
test
cmp
subb
or
cmp
lock
ret
dec
cmp
mov
mov
mov
iret
sbb
mulb
ja
movsl
xor
push
enter
test
ffree
pop
sub
clc
sbb
mov
fmuls
push
mov
xchg
cltd
add
pop
sbbb
ss
jl
dec
shll
in
inc
lock
and
jl
or
cmp
add
adc
js
adc
jno
mov
add
add
cmp
test
adc
jl
dec
inc
sub
jg
popa
adc
cs
add
xchg
fdivrl
dec
mov
pop
xchg
mov
mov
outsb
inc
aad
shlb
or
add
sbb
imul
cmp
sbb
add
add
xor
loope
inc
test
jne
movsb
lea
ret
shlb
pop
sub
add
shrb
sbb
add
mov
popa
adc
inc
movsb
icebp
enter
or
pop
cs
or
test
xor
or
push
dec
or
inc
test
mov
pop
jecxz
movsb
popf
and
ret
test
push
mov
xchg
xlat
lcall
cltd
adc
jbe
push
xchg
inc
xor
jbe
clc
cmp
in
or
out
and
out
cmp
or
pop
cmp
pop
divl
in
and
add
enter
ds
mov
or
dec
xchg
int3
jle
call
jne
aam
adc
loopne
shrb
fdivrs
and
and
sbb
and
loopne
testb
das
pushf
cli
add
add
inc
push
jp
mov
es
or
and
loope
mov
xchg
add
loop
add
push
add
lock
mov
jmp
or
mov
or
push
fwait
pop
test
pop
sbb
call
outsb
add
cwtl
mov
pop
icebp
sub
sbb
lea
lcall
push
jg
sbb
out
out
sub
insb
or
cmp
or
in
mov
in
mov
cs
hlt
fadd
fdivs
jno
sti
ret
cmp
mov
inc
add
ds
mov
adc
xchg
dec
dec
imul
pop
leave
test
push
jo
mov
call
sub
loop
rcrb
jecxz
inc
ret
out
mov
mov
lea
lock
mov
movsbl
paddb
sbb
test
push
clc
add
shll
jecxz
mov
pop
mov
pop
mov
je
or
cli
mov
bswap
in
fdivr
fsubs
repnz
sub
dec
or
je
or
xchg
sarb
adc
in
fldpi
pop
or
add
cmp
dec
sbb
mov
adc
adc
mov
adc
negl
mov
add
sub
nop
lock
lea
sbbl
ja
movsl
mov
mov
dec
es
out
or
in
sbb
jae
adc
je
or
inc
insb
je
xchg
loopne
push
lock
test
outsb
loope
insb
cmp
jbe
sub
sub
adc
mov
mov
pop
or
xor
in
in
mov
dec
xor
jns
xor
gs
mov
or
imul
int
cmc
jne
js
dec
xor
loope
xlat
je
fsubl
push
mov
push
jbe
mov
icebp
adc
mov
sbb
sbb
jle
inc
je
and
push
or
add
ds
mov
push
xor
mov
fdivr
popf
push
pop
movsb
outsb
loop
and
sub
je
push
nop
push
xchg
iret
jae
scas
testl
mov
js
mov
adcl
pop
shrb
and
in
pop
and
xchg
or
or
xchg
push
mov
sub
in
sub
inc
mov
mov
push
mov
add
push
insl
cmp
shll
int3
negl
das
aad
test
dec
lret
loopne
mov
add
orl
test
test
sti
outsl
divl
movb
hlt
cmp
dec
loop
pop
add
loope
jge
lcall
mov
inc
xorl
pop
mov
sbb
pop
cmp
xor
add
dec
popa
je
cmp
pop
push
sbb
das
add
add
cli
add
add
rcll
add
addr16
pop
push
je
cmp
je
test
mov
enter
mov
xor
cmp
sbb
lret
test
mov
pop
cmp
add
adc
addr16
nop
sbb
or
and
ret
jne
subb
mov
mov
jne
mov
jmp
cmp
jle
jae
mov
xor
test
pop
dec
xor
add
int
or
mov
out
push
mov
mov
inc
cld
adc
lea
hlt
rcl
sbb
arpl
lock
dec
bound
insl
ljmp
lea
stc
rcll
push
pop
xchg
cwtl
in
push
jo
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
adcl
jae
hlt
add
jne
outsb
mov
aam
jae
addr16
decb
mov
test
mov
in
lahf
shl
pop
mov
xor
sbb
push
adcl
dec
in
push
lret
push
out
mov
test
add
xor
je
adc
mov
mov
or
lret
clc
popa
int3
je
cltd
rolb
mov
sbb
adc
push
jae
adc
insb
in
adc
in
dec
inc
adc
pop
ficompl
fistpl
jge
inc
sbb
lahf
cmp
rorb
lret
pop
mov
or
outsl
lods
cmp
jne
and
lea
mov
push
inc
test
and
mov
addl
push
nop
xchg
clc
sahf
add
sub
push
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
mov
into
cmpb
scas
mov
shlb
xor
setle
or
jmp
dec
popa
ret
mov
cmp
inc
inc
neg
add
repz
push
cmp
test
cld
add
push
push
jmp
rorl
sub
push
test
cmpsb
and
mov
mov
sub
sub
pop
lods
nop
cmp
jp
test
dec
fdivrl
lea
es
jns
lods
push
sub
add
push
jbe
dec
pop
mov
fdivs
jnp
jne
jno
aaa
cmp
or
pushf
push
jl
mov
rcll
push
jbe
adc
pushf
test
mov
iret
in
lods
add
cmpsb
mov
sub
pop
lea
in
sti
push
cmpsl
inc
addl
and
in
testl
mov
xlat
adc
adc
icebp
adc
insl
mov
shll
movsb
cmp
and
xchg
and
sub
test
aam
and
xchg
push
out
cmp
cmp
jno
mov
rclb
decb
nop
andb
roll
adc
add
idivb
insb
or
sbb
dec
lcall
cmp
nopl
bound
sub
subb
rcrb
jl
test
sbb
loopne
lcall
dec
or
push
mov
test
push
xchg
xchg
cmp
mov
in
nop
push
jb
push
cltd
adc
insl
inc
or
jl
push
pop
xor
fdivl
or
add
out
popa
lods
cmpsb
fisttpll
lds
lock
pop
cmpsb
or
jge
add
or
les
mov
fdivs
pop
pop
pop
popa
cmp
sub
jmp
push
xchg
pop
pop
jne
je
jl
or
push
push
cmp
adc
xor
ret
push
adc
cmc
or
or
and
sbb
test
mov
and
cmp
lea
test
xchg
or
add
adc
ss
movsb
inc
gs
or
imul
imul
add
jmp
mov
sub
enter
adc
adc
jmp
mov
adc
push
shlb
cltd
sub
cld
jmp
cmp
out
jnp
mov
inc
rcrl
and
dec
or
mov
xor
sbb
shrl
or
add
pop
mov
call
out
xor
je
cli
add
cmp
jbe
push
pop
mov
dec
or
addb
jae
mov
shr
lea
not
and
decb
jne
add
cmp
aad
sbb
lea
xor
pusha
cmp
pop
add
push
or
cld
add
pop
and
add
xor
push
or
sub
std
mov
push
jecxz
in
notl
add
clc
and
sti
add
pusha
jecxz
adc
dec
pop
cmp
js
mov
jl
and
sahf
mov
push
xchg
cmp
rcll
pop
dec
or
and
xor
int3
dec
loopne
mov
xor
cmpsb
jle
pop
dec
add
pop
push
cmpsb
mov
add
mov
fisubrs
lea
mov
test
int3
inc
adc
dec
or
add
pusha
mov
mov
inc
mov
mov
stos
mov
lock
push
or
pop
mov
or
sbb
sub
lods
dec
movl
outsl
or
inc
aaa
mov
imul
jbe
repz
bnd
add
and
adc
cmpsb
stos
pusha
sbb
imulb
lsl
scas
jp
icebp
mov
aas
gs
push
or
push
flds
dec
lock
sub
dec
inc
adc
inc
dec
movsl
das
aam
xor
and
pushl
push
push
xor
or
jns
pusha
movsb
movsl
int
cs
ss
adc
adc
in
lea
dec
adc
jnp
jl
sar
inc
sub
cmp
or
aaa
jo
cmp
mov
inc
lods
mov
addr16
mov
cmp
mov
xor
adc
outsl
push
jg
xchg
out
sahf
push
fnstcw
add
int3
cmpsl
mov
les
push
adc
fwait
inc
adc
mov
xor
adc
sub
and
ds
orl
incl
lds
pop
mov
mov
aaa
or
add
rolb
jl
jl
mov
imul
inc
clc
pop
inc
xchg
cltd
sub
int3
push
mov
dec
jne
or
or
push
cmc
push
pop
int
cwtl
xchg
popa
xchg
sahf
adc
xor
inc
sub
shr
inc
mov
clc
cmp
in
adc
mov
adc
mov
inc
cld
lock
call
jle
out
iret
dec
jne
je
clc
add
movsb
pop
dec
adc
call
sub
idiv
push
fsubs
mov
inc
sub
mov
lock
cmp
jne
or
add
scas
lds
not
and
out
xor
adc
data16
jns
xlat
sub
test
mov
add
dec
pop
jb
cld
xor
icebp
mov
mov
and
pushf
jle
inc
ffreep
add
inc
xchg
fnstcw
jecxz
orb
push
mov
int3
push
pop
rclb
or
pop
mov
push
xor
sbb
clc
rolb
ds
mov
shl
negl
add
nop
dec
or
xor
add
push
jns
sub
inc
imulb
into
add
repnz
mov
das
mov
adc
xor
mov
pop
xchg
lea
xor
and
jg
or
je
jle
mov
pop
pop
lcall
pop
decl
dec
movsl
imul
loopne
data16
and
js
push
ffree
test
mov
adc
inc
insb
xor
out
and
pop
or
and
clc
jl
xor
or
mov
sub
pop
xor
push
sar
dec
mov
and
inc
hlt
pop
ret
fistpll
xor
cmp
jns
add
push
mov
ret
fisttps
mov
sbb
fbstp
cmp
dec
ficoms
add
adc
dec
lea
icebp
mov
sahf
jbe
adc
pusha
mov
mov
push
in
jo
cmp
lods
decb
sub
out
cmp
vmptrld
jo
cmp
dec
sbb
sbbb
adc
jno
addr16
lock
add
out
lods
pop
and
inc
cmp
jno
add
push
push
push
jge
es
xor
inc
rcl
in
or
or
shrb
push
out
fldcw
push
nop
cmp
and
add
xlat
aam
adc
imul
push
pop
xor
jne
mov
jne
jmp
iret
mov
lods
jnp
add
xor
inc
loopne
imul
lock
xor
out
xchg
push
and
sahf
sbb
xchg
push
pusha
and
add
sbb
cmp
je
mov
in
xlat
mov
in
cli
and
mov
aaa
fmuls
sub
jno
mov
dec
cmp
gs
scas
stos
xlat
jmp
dec
mov
loopne
mov
adc
outsb
leave
inc
test
inc
push
pushf
mov
sub
icebp
add
fdivrl
je
cmp
dec
push
cmc
call
jge
iret
mov
loopne
sahf
cmp
push
and
mov
decb
jne
cmpsw
pop
sbb
repnz
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
roll
nop
leave
or
push
rcll
or
dec
cld
or
xor
out
push
in
pop
ficoml
mov
out
or
sub
or
cmc
lods
sbb
shrl
mov
lea
ds
jne
cmp
into
push
jg
fdivl
jo
inc
add
sahf
mov
jno
sbb
int
sbb
ret
sbb
loopne
sbb
or
out
or
xorl
lock
jmp
loopne
jnp
out
and
insl
and
pusha
add
das
adc
sti
xor
aas
push
out
push
shlb
or
or
outsl
mov
sub
push
outsb
or
cmpsl
mov
in
or
das
adc
shlb
dec
mov
movsl
shlb
xchg
pop
mov
inc
inc
cmp
cmp
pusha
ret
sub
add
push
mov
push
mov
je
inc
push
orl
and
push
dec
mov
mov
push
xchg
mov
popf
lret
loopne
inc
xchg
test
add
adc
xor
push
aam
in
or
and
fdivs
std
lahf
pushl
adcl
push
daa
xlat
lock
out
pop
jne
push
nop
rcll
pop
mov
subb
std
pop
insl
sbb
loope
movsl
int
jp
les
loop
mov
jmp
inc
js
push
or
pop
psubd
adc
inc
scas
lods
cmpsl
inc
xlat
add
pop
jl
xchg
push
in
fidivrl
xchg
clc
hlt
and
mov
int3
push
xor
cmpsb
mov
inc
popa
sbb
dec
sbb
push
add
xor
cmpsb
xor
insb
add
inc
dec
jne
push
sub
lock
les
jl
rolb
or
lods
jns
mov
jbe
popa
dec
mov
jo
popf
call
rcl
hlt
mov
inc
cwtl
add
xor
jecxz
mov
enter
lods
adc
fldenv
call
xor
or
jl
or
in
jo
int3
test
in
into
pop
jns
je
cmp
mov
mov
mov
test
outsb
ljmp
test
enter
addr16
pop
test
sbb
sub
loopne
inc
pop
ja
jnp
push
push
movsb
mov
dec
out
cltd
jle
add
adc
add
insb
pushf
adc
xchg
mov
push
ret
pop
mov
ret
sbb
xchg
add
or
arpl
or
mov
jge
and
jb
jb
dec
scas
and
daa
fidivrs
loopne
hlt
icebp
push
jb
repz
loopne
out
fistpll
insb
jne
mov
or
pop
and
pop
mov
or
fs
mov
movl
lea
pop
inc
xor
cmp
nop
inc
push
cmp
cmc
jmp
lcall
xor
sub
pop
std
pushf
xor
sub
jne
cmp
movsb
in
leave
or
lea
nop
add
sub
add
add
stos
mov
push
xlat
aam
sub
pop
add
lahf
movsl
xor
push
call
xchg
lret
enter
xchg
mov
mov
add
nop
push
stos
test
stos
xchg
xchg
dec
in
stos
neg
lret
sahf
xchg
call
or
or
xchg
loopne
pop
xor
push
pusha
repnz
andl
lods
and
aas
orl
clc
mov
mov
and
test
adc
inc
aas
test
mov
movsb
roll
cmp
jb
in
cmpsb
ret
push
or
out
hlt
xchg
xchg
push
lods
inc
sub
in
lods
add
inc
sahf
rclb
and
and
adc
push
jb
lods
mov
ret
nop
sub
mov
xor
in
leave
add
in
pop
enter
test
adc
and
mov
test
dec
pop
aas
mov
cld
enter
cmp
mov
sysret
movsb
bound
cmc
or
xorb
or
mov
repz
subl
mov
cmp
ss
mov
inc
adc
mov
cmp
push
sahf
mov
test
xchg
sub
mov
loope
lret
mov
fwait
ret
daa
clc
xchg
loope
fs
xchg
push
mov
or
xchg
or
or
fwait
rcll
mov
aaa
mov
xchg
dec
or
shll
popa
and
inc
pop
or
ret
gs
cld
inc
xchg
mov
push
push
mov
cmpsb
icebp
adc
sub
sbb
jnp
adc
jnp
or
pop
mov
mov
sbb
rorb
pop
adc
testb
or
out
dec
movsl
or
dec
fsubs
push
adc
mov
inc
add
in
jne
insl
pushf
sahf
add
hlt
stc
mov
mov
inc
cld
push
cs
shlb
xor
aaa
nop
cmp
cmp
adc
ret
xchg
push
add
pop
pop
enter
test
int3
mov
mov
or
shll
dec
pop
cmpsl
mov
cmp
and
popa
mov
cmp
sub
shlb
xor
rcrl
jo
add
cli
sti
cld
cmp
mov
cwtl
xchg
xor
data16
push
and
adc
jmp
mov
je
pop
push
mov
pop
sbb
add
fsubl
pop
sub
sbb
and
lea
add
add
movsb
mulb
je
dec
je
push
or
xchg
lretw
cmp
mov
fidivs
push
mov
fldl
or
fldl
or
sbb
jmp
loopne
in
mov
inc
lcall
push
leave
pop
jmp
jo
mov
outsb
mov
mov
push
fidivs
das
cmp
cmpsb
std
push
xchg
dec
je
add
and
sbb
or
push
sti
fnstenv
lcall
xchg
into
repz
sub
test
cmp
adc
pop
ret
push
in
mov
insl
xchg
sub
xchg
add
adc
mov
add
inc
test
js
mov
mov
pop
in
test
cld
lock
hlt
inc
in
cs
adc
pop
push
movsb
popa
push
in
lock
fstl
push
dec
sub
push
aad
xchg
mov
and
inc
lock
fcmovb
cmp
push
in
push
iret
sarl
incb
ret
jl
mov
pop
sub
xor
shr
add
mov
lods
lea
cmp
insb
dec
inc
sbb
cmpb
xchg
jg
push
test
clc
jne
sbb
mov
clc
xchg
inc
jle
incb
push
inc
clc
add
hlt
dec
sti
dec
push
mov
push
xchg
jmp
sbb
inc
push
pop
ja
xor
dec
adc
and
scas
mov
aas
test
fmull
iret
mov
inc
lcall
jecxz
test
jne
push
push
adcl
xor
outsb
cmp
inc
repz
test
or
add
cmpsb
or
inc
adc
sbb
lock
push
or
push
mov
int3
popa
cwtl
aas
add
movsl
xor
lcall
jmp
mov
mov
outsl
es
mov
mov
and
js
mov
imul
sahf
nop
sbb
cs
xchg
faddl
jne
jb
rol
shl
enter
mov
lods
std
jge
testb
pop
dec
pop
lret
mov
sbb
add
fwait
popa
loope
incb
movsl
jnp
lods
mov
and
jne
dec
sbb
sub
dec
adc
pop
sar
lea
pop
push
clc
ret
and
inc
std
or
neg
orl
loopne
inc
test
out
xchg
out
test
inc
pop
loopne
ljmp
std
adc
ss
mov
xchg
mov
adc
fldcw
arpl
xchg
inc
xchg
std
lods
scas
iret
and
int
rorb
adc
shlb
cs
shl
enter
xchg
pop
into
pop
idivb
gs
dec
push
pop
or
shlb
fs
adcl
test
mov
cmp
into
fidivrl
ljmp
mov
daa
adc
and
mov
xchg
fsubrs
jb
mov
mov
mov
xlat
mov
push
or
inc
xchg
int
xor
cmp
lahf
xchg
mov
insb
jne
inc
sub
pop
pop
scas
pop
rcl
pop
and
and
outsl
outsb
cmp
jne
xorb
ret
jne
cmp
inc
xor
xchg
inc
sub
lcall
int
lcall
js
push
xchg
push
pop
lods
cmp
xor
fwait
cs
push
leave
and
xchg
mov
repz
hlt
lea
mov
jg
xor
ds
in
mov
fs
iret
lea
clc
call
or
repnz
sub
lock
add
and
sbb
adcb
sti
push
inc
cmp
lret
jp
lea
repz
in
mov
xlat
aaa
mov
cwtl
add
mov
cmp
push
lret
add
xchg
stc
mov
push
adc
sbb
mov
pop
mov
sub
sub
fcmovu
xchg
jno
jns
daa
mov
pop
in
sbb
sahf
add
jl
rcr
inc
cld
rclb
std
invlpg
lds
mov
ds
pop
mov
loopne
nop
and
mov
fisubrl
cwtl
pop
lods
cmp
sti
pop
into
je
mull
rcrb
insb
pop
xor
scas
mov
in
daa
or
std
mov
xchg
xchg
jecxz
xor
mov
sbb
add
std
aaa
addr16
daa
sub
jno
lock
fdivr
jno
push
jnp
adc
ret
inc
cli
cmp
jo
and
sarl
mov
sbb
shlb
lahf
sahf
pop
jb
sbb
gs
mov
mov
std
call
sarl
mov
jb
push
dec
mov
jbe
gs
push
mov
fdivrs
pop
sbb
mulb
jbe
std
inc
xor
mov
seto
neg
ret
pop
lds
sub
push
ja
lock
out
popf
xchg
test
push
into
sbb
jb
lods
lea
cmpb
cmp
xor
mov
xchg
movb
or
mov
mov
lret
inc
or
imul
inc
add
mov
lret
sbb
test
jg
stos
jle
into
pop
push
ror
sbb
add
xor
pop
inc
pop
ja
sub
mov
mov
dec
loopne
cmp
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
loope
ret
popa
jl
mov
daa
xchg
mov
std
inc
sbb
cmp
jmp
mov
popa
cmp
jmp
decl
cmp
mov
test
nop
inc
hlt
sub
test
sub
je
xchg
mov
add
mov
dec
sar
sahf
loop
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
pusha
adc
mov
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
enter
iret
lret
jns
lock
sub
js
inc
push
lea
fbstp
bound
in
je
mov
movsb
adc
js
popl
pushl
inc
push
inc
lret
jne
cmp
shrl
xor
hlt
or
insb
fnstcw
fdivr
loop
sbb
das
push
dec
pop
movsb
xor
jno
push
je
jb
popa
and
std
std
add
xchg
adc
xchg
cmp
enter
das
jo
jmp
push
mov
and
xor
nop
mov
lds
ljmp
xchg
lahf
in
enter
test
mov
pop
and
leave
movsb
test
and
and
mov
nop
pop
sarb
mov
push
repnz
push
xchg
jno
push
cmp
adc
sub
cmp
ja
inc
lar
and
lds
push
or
or
lock
pop
pop
cmova
test
shrl
xchg
int3
lock
mov
ljmp
dec
push
lock
mov
pop
lea
add
xor
push
pop
push
test
test
movsl
call
add
call
sbb
insb
push
pop
das
in
push
lret
or
or
adc
jb
sbb
and
or
or
int3
and
xchg
xchg
les
out
xor
aad
dec
in
imul
enter
mov
lret
or
ja
xor
repz
xchg
outsl
das
movsb
xor
pushf
inc
in
dec
push
and
ljmp
dec
dec
aad
xchg
mov
test
dec
dec
or
adc
cmp
popa
inc
lea
pop
arpl
movsb
push
cmp
jle
loope
and
and
in
sbb
mov
nop
mov
insb
dec
cmpsl
add
mov
mov
enter
sbb
pop
inc
stos
popa
imul
xchg
pushf
pop
repz
enter
mov
pushf
pop
arpl
adc
addr16
mov
fisubrs
xchg
mov
jl
lds
mov
mov
or
xchg
xchg
adc
pop
dec
test
jns
cmp
add
or
lds
bound
dec
call
leave
adc
pop
test
test
leave
test
inc
scas
nop
mov
xchg
pushf
pushf
nop
nop
add
nop
pushf
dec
push
cmp
test
and
push
xchg
xchg
push
rorb
bound
mov
je
jmp
sbb
jns
jg
ljmp
inc
add
push
cltd
cmc
inc
rcl
sarb
dec
pop
pop
imul
push
and
hlt
out
jge
icebp
adc
mov
scas
sbb
jg
adc
and
inc
add
push
test
shrb
mov
lods
adc
cltd
cmp
sub
or
push
loop
testb
in
mov
lret
lret
lcall
sub
inc
add
cmpsb
dec
inc
add
jge
jnp
mov
ss
neg
pop
mov
sub
or
lock
push
inc
inc
dec
or
sub
into
add
xchg
test
xlat
pusha
or
popa
pushf
pop
xlat
adc
fwait
repz
or
xchg
push
dec
adc
push
and
xor
dec
push
pop
push
ds
out
outsl
inc
or
jbe
jle
sbb
push
test
mov
cmpb
and
sbb
jo
cmpsl
hlt
call
mov
enter
and
lret
or
pop
dec
add
test
and
call
mov
sub
adc
rcll
sub
ja
cmpsb
mov
shrl
shll
fnstenv
lcall
rep
jge
es
fisttpl
xor
xor
ss
ficomps
enter
or
sbb
push
int
jmp
and
add
pop
add
test
vcvtps2pd
insl
leave
mov
xchg
shlb
add
jo
in
pop
arpl
xor
jne
dec
and
cmp
add
inc
cld
push
add
sbb
aaa
leave
js
ja
lods
dec
or
pop
and
test
test
lret
insl
into
out
adc
adc
sub
push
add
and
push
push
xor
js
mov
sub
and
nop
daa
fiadds
nop
stos
adc
jmp
cmp
into
ds
sub
sub
inc
and
sub
jbe
dec
and
push
mov
jmp
mov
test
je
divl
in
cmc
dec
jmp
mov
cmp
je
aaa
mov
pop
sbb
lcall
outsb
push
and
jne
lea
mov
add
sub
jne
mov
push
mov
pop
adc
jmp
bound
push
cmp
sub
or
mov
into
gs
cs
add
or
xor
hlt
insl
sub
sbb
loope
orl
mov
jg
mov
mov
in
sub
adc
xor
and
adc
les
and
inc
and
cmpsl
sub
xor
lahf
or
sub
and
in
cmp
inc
or
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
push
cwtl
inc
testl
insb
jl
add
in
sbb
mov
inc
jp
or
jne
xor
test
iret
mov
jae
push
xchg
lahf
xchg
mov
sahf
pop
inc
adc
mov
push
xor
add
lcall
push
pop
push
push
inc
shr
rcr
shr
rcr
or
out
sti
leave
jne
div
pop
dec
adc
inc
mul
pop
jb
lret
mov
jb
cmp
or
xor
and
aas
dec
insl
adc
or
ficoml
mov
lret
iret
xor
and
sub
inc
add
cmpsb
jbe
xorl
adc
lds
jnp
jmp
mov
clc
mov
movb
mov
and
clc
movb
popf
mov
mov
push
imul
adc
fwait
xor
subb
cmpsl
sahf
push
and
sub
add
sbb
or
add
testb
pushf
sub
lret
adc
or
sbb
stos
adc
mov
jge
rcl
adc
dec
inc
dec
std
adc
dec
lods
leave
mov
sbb
popa
pop
push
fbld
xchg
dec
jmp
adc
je
add
mov
dec
js
and
pop
mov
pop
cmp
inc
pop
dec
sbb
cmp
mov
inc
cmp
sbb
enter
jle
jne
lea
jb
mov
sbb
push
push
push
test
lods
and
jae
push
sub
test
fcomps
jne
in
jg
inc
add
lea
xchg
fldcw
fs
adc
mov
and
mov
loope
jne
mov
rolb
and
and
inc
enter
or
stos
jl
mov
and
adc
cld
sbb
and
jnp
subb
mov
sub
dec
push
adc
fwait
push
add
inc
jecxz
add
fs
stc
adc
push
outsl
add
ret
imul
sti
mov
add
shl
add
add
sbb
sbb
in
and
or
cs
mov
cmp
push
or
out
clc
add
push
mov
push
in
mov
and
sar
cmp
nop
adc
sub
inc
lock
lcall
xchg
add
mov
pusha
xor
hlt
les
xor
add
movsl
mov
jo
cltd
mov
mov
cmpsl
loopne
repnz
and
gs
mov
outsl
sub
add
pop
xor
pop
inc
pusha
pop
ret
sahf
popa
fadds
mov
dec
xchg
pop
insb
ds
or
call
or
mov
add
outsl
xchg
pop
push
sub
or
jb
jecxz
push
adc
or
add
xor
ret
icebp
call
iret
xor
jo
and
stos
xor
daa
push
inc
nop
subl
add
mov
ss
out
cmp
je
sahf
mov
shll
out
and
fdivl
sti
jns
aam
xchg
pop
addr16
outsb
sbb
jns
std
cld
pop
sub
add
scas
and
add
shr
sub
sbb
inc
add
xor
loopne
dec
push
mov
xor
int
insb
clc
jo
pushf
js
jmp
icebp
sub
lret
dec
pusha
pusha
pop
hlt
adc
or
jge
mov
je
cmp
cmp
jb
fadds
ret
inc
fistpll
mov
fmull
outsl
scas
inc
cmp
roll
rol
mov
sub
pop
jne
push
push
mov
add
inc
xorb
push
push
dec
lea
sbb
lea
jle
dec
or
or
hlt
cs
jb
inc
sub
or
pushf
lahf
push
add
pop
ds
mov
mov
adc
cmp
pop
xor
test
rclb
push
mov
jmp
or
push
xor
push
sbb
add
pop
jecxz
imul
adc
push
inc
roll
cmp
cmp
fwait
jbe
or
add
and
mov
mov
sub
push
lret
adc
ss
fistpl
or
insb
js
add
cmp
add
adc
mov
or
push
add
mov
cli
mov
cmp
test
int
sub
sbb
adc
mov
cmpb
out
jp
movsl
xlat
add
inc
cmpsb
lret
or
push
pop
inc
sbb
leave
and
andl
rcrl
pop
stc
cmp
and
outsl
add
jle
cmp
cltd
es
sbbl
pop
sub
cmp
or
gs
xchg
test
cmp
inc
scas
push
cmp
xchg
lea
mov
pop
mov
pop
orl
roll
pop
leave
push
sbb
adc
int3
into
pusha
push
mov
dec
xor
or
xor
clc
sub
movsb
push
cmp
test
daa
or
imul
and
rol
in
hlt
add
xchg
fcomps
cmp
xor
sub
xchg
push
and
out
dec
es
stos
jg
sti
or
repnz
xor
je
push
or
fsts
mov
xlat
fldl
mov
pusha
jno
sub
pop
mov
scas
sbb
js
push
pop
mov
xchg
clc
je
test
aas
fwait
nop
sub
sbb
mov
scas
mov
mov
ret
sub
mov
mov
cli
pop
fmuls
dec
hlt
fdivrl
icebp
cmp
adcb
in
mov
inc
adc
shrl
fmull
or
mov
cmpsb
jge
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
and
and
adc
mov
adc
mov
mov
sbb
push
push
popa
pop
dec
or
sbb
stc
and
hlt
pop
add
and
pop
aaa
xor
adc
shlb
push
rorb
in
add
push
popa
arpl
mov
je
jmp
mov
popfw
loope
xor
sbbb
inc
out
dec
dec
pop
movsb
sub
add
jne
ret
jno
add
jne
cmpl
sub
and
mov
or
cmp
js
cmp
mov
das
and
mov
inc
adc
xor
mov
dec
jno
pusha
cmp
cmpsb
mov
mov
shlb
test
lcall
imul
ret
call
rcll
addl
sub
push
call
fdivrp
cmp
jbe
sbb
add
xor
ljmp
out
add
sub
mov
lret
adcl
lds
orb
loope
lret
xor
inc
sbb
xchg
addl
pop
negl
mov
adc
daa
test
xor
pop
or
dec
add
push
push
or
in
mov
dec
push
out
mov
xor
outsl
sbb
lods
mov
push
add
adc
fcomps
adc
inc
mov
and
cmp
pop
push
or
push
rcl
and
inc
inc
imul
mov
xor
add
inc
mov
dec
leave
subb
mov
add
lock
add
xor
sbb
inc
jg
or
mov
cmp
lcall
jmp
xor
and
enter
inc
adc
add
scas
xchg
pop
add
inc
pop
je
jbe
xor
jb
je
adc
fidivs
add
jl
mov
mov
pop
pop
popa
shr
jo
dec
stc
sbb
in
add
push
xchg
push
push
cwtl
mov
sbb
add
mov
inc
cli
cmp
and
leave
add
mov
ja
sub
inc
add
xor
inc
cmp
loop
pop
add
adc
cmp
call
pop
xchg
and
gs
mov
insl
popa
popa
dec
cmp
movsl
cmp
push
mov
fwait
sub
adc
pusha
sub
adc
jo
mov
xchg
push
push
cld
add
fists
inc
stos
icebp
xlat
xor
aas
jae
mov
jo
dec
shl
adc
dec
ss
fimull
pop
mov
jge
mov
dec
mov
sbb
clc
or
add
xor
sub
dec
jns
sbb
adc
js
jne
sbb
inc
and
rolb
or
aaa
sahf
jb
xor
jbe
sbb
loop
xlat
add
pop
dec
inc
inc
or
sub
jne
repnz
cmp
movl
sar
xchg
pushf
dec
rolb
rorb
sbb
mov
xor
cmp
dec
shlb
addr16
cld
es
hlt
ret
jmp
push
inc
addb
insb
lock
cwtl
or
xchg
inc
sti
or
out
adc
int
pop
or
rolb
in
jo
loope
pusha
xchg
xor
mov
push
xor
xlat
mov
and
dec
push
adc
fiadds
test
mov
lea
insl
rep
cmpsl
orb
or
or
push
and
or
cmp
inc
mov
outsl
add
jge
daa
pop
inc
push
pop
xor
or
movsb
pop
in
out
inc
cs
mov
mov
jmp
add
mov
mov
add
and
jle
and
andb
cmp
daa
jl
insl
sbb
sar
sarb
jg
popf
fadd
xor
adc
test
jle
addr16
out
jb
push
mov
push
pusha
test
pop
pop
jg
hlt
dec
mov
adc
sar
mov
cmp
out
shl
add
inc
loopne
lock
add
push
sbb
jae
idiv
rorb
inc
or
inc
adcl
mov
repz
ret
xor
push
adcb
mov
andl
testb
or
rorb
cwtl
adc
jge
sub
aas
push
aaa
xor
ds
push
mov
jne
clc
shrl
or
je
and
in
mov
dec
movl
mov
jl
loopne
sahf
dec
pusha
notb
insl
cmpsb
rolb
test
fwait
or
mov
hlt
adc
or
mov
pop
cmp
push
cmp
inc
aam
xor
push
sahf
mov
push
shrb
xor
and
jg
mov
jmp
test
adc
loopne
or
sub
fisttpl
push
rol
orl
enter
les
sbb
cs
pop
xchg
data16
ret
sub
inc
cmp
lahf
int3
cmp
mov
andb
push
pusha
subb
push
xorb
inc
and
pop
outsb
sbb
popa
push
mov
in
cmpb
pop
pop
push
sub
sub
add
ret
fisttpll
pop
decl
mov
adc
jmp
pushl
and
push
add
jne
jl
push
push
jae
push
dec
and
sbb
int3
mov
cmp
add
mov
in
mov
ret
inc
inc
adc
in
cs
jl
sbbb
pop
test
sub
mov
mov
sahf
lret
xchg
and
loope
popa
imul
sbb
xor
add
add
loop
sar
test
lea
xor
push
xchg
or
sub
movsb
pop
jno
lcall
or
sbb
pop
add
push
in
out
pop
and
mov
fmuls
add
push
mov
xchg
inc
aam
mov
or
outsb
add
push
fwait
insl
dec
cmc
xchg
test
pop
iret
out
or
mov
xor
out
fsubrs
adc
sub
insl
lock
inc
fdivs
add
decl
cwtl
cs
adc
push
rolb
jl
ret
pushf
js
push
inc
push
push
popa
out
add
dec
add
xchg
aam
add
int
enter
pop
mov
pop
jecxz
and
jbe
das
popf
aas
add
or
ss
jmp
cmpsl
jne
test
push
inc
add
push
insl
jo
cmp
mov
jmp
sbb
aam
aas
addr16
sub
cmp
ret
xor
mov
push
jbe
push
sub
push
and
dec
inc
xlat
push
or
movsl
push
push
sti
addr16
or
xlat
push
cmp
jne
ds
sti
scas
sub
adc
outsl
fistl
jae
cmp
shrb
mov
fcoml
jge
lahf
out
push
fadd
fdivrs
dec
pop
ljmp
aam
push
inc
lds
aam
jmp
push
adc
mov
mov
push
or
jle
dec
imul
and
subb
xchg
ret
jl
cmp
jg
inc
jmp
int3
hlt
pop
and
mov
xchg
jbe
jne
imul
add
add
mov
fnstsw
aas
sbb
push
and
inc
scas
test
lock
mov
rcr
fsubs
or
add
clc
pop
lock
in
jle
inc
push
mov
push
imul
adc
stos
aas
cmpsb
xor
xchg
idivb
xor
pop
mov
push
ja
cld
and
cmpl
jmp
mov
jb
test
mov
adc
push
or
push
push
jb
or
lret
scas
jecxz
repnz
test
loop
push
sbb
movl
inc
inc
sbb
inc
add
pop
negl
push
or
into
cwtl
je
dec
jecxz
push
cmp
addl
filds
sbb
je
testb
je
test
sbb
in
insl
or
test
or
stos
rcrb
cmp
loopne
push
adc
mov
or
inc
addr16
xchg
cltd
and
sbb
pop
sbb
adc
mov
mov
jg
add
fimull
mov
mov
cmp
push
call
add
shrb
or
in
int
cmp
enter
loopne
add
std
aad
mov
cmp
pushl
es
cltd
stc
sbb
mov
in
push
sub
adc
adc
sbb
push
and
adc
in
ret
dec
aam
sbb
stc
ds
movsl
xor
or
jne
pop
sub
rolb
or
sbb
cs
add
xor
dec
dec
test
loope
sub
shrb
inc
and
hlt
popf
inc
sarl
lret
add
imul
mov
inc
or
xchg
mov
sub
push
xchg
xchg
add
cmp
hlt
push
in
push
adc
xorb
push
add
add
push
push
movsl
mov
sti
jg
and
fistpl
push
adc
outsb
inc
sbb
je
int
pushf
sbb
xor
or
push
push
and
bound
push
push
adc
xchg
inc
sarl
sbbl
imul
inc
push
fs
pop
jl
mov
shrb
sub
mov
inc
mov
jecxz
inc
fstl
jb
call
fneni(8087
movsb
imul
inc
adc
les
gs
add
or
jbe
dec
fsubs
jp
fcomp
xchg
test
mov
aaa
mov
or
cmpsl
mov
clc
adcl
push
popw
jp
sub
jmp
mov
cmp
push
pop
cmp
mov
dec
or
loopne
xchg
cmp
jae
mov
ret
sbb
push
mov
cmp
popf
rcr
fldln2
push
xchg
fistl
adc
or
addr16
enter
and
and
sbb
ror
mov
rcl
jb
addr16
cmpl
inc
lock
movsl
and
mov
mov
ret
push
int3
xchg
xor
mov
cmp
rcrb
mov
outsb
ss
test
push
or
dec
or
sub
and
shlb
mov
sbb
cld
pop
dec
adc
inc
out
pushl
loope
jle
add
adc
repnz
dec
mov
xchg
sbb
notb
repz
shlb
repnz
addl
into
nop
cltd
aam
push
dec
dec
mov
adc
pop
es
orb
or
push
jae
push
jmp
cmp
or
je
xchg
je
add
dec
xchg
sbb
addb
imul
cmp
sbb
add
pop
add
orb
rorb
sub
sbb
push
lret
inc
push
adc
ja
add
repnz
loope
call
adc
test
mov
and
push
leave
icebp
pop
mov
insl
inc
mov
ds
jno
push
or
sbb
and
xor
or
push
popf
push
xchg
repnz
sub
sbb
add
add
out
cld
and
push
icebp
roll
cli
fcmovnb
sub
inc
mov
add
mov
push
xchg
je
cs
jns
pop
lahf
or
cmp
test
mov
scas
fbstp
xchg
out
jb
aas
sbb
sbb
je
pop
cmc
and
fisubrl
adc
insb
xchg
test
and
push
lcall
out
xlat
adc
add
stos
inc
cmp
jae
les
cld
pop
push
cmp
jl
mov
inc
add
add
pop
dec
adc
xchg
mov
jle
pop
lock
testb
jne
clc
push
mov
or
rep
push
call
sub
cmpsl
cmpsl
les
add
xor
adc
add
mov
lret
inc
in
dec
dec
je
loopne
ret
subb
icebp
cmp
scas
insb
push
lods
int3
mov
sbb
add
ror
push
push
mov
pop
out
or
mov
inc
sub
pushf
cmc
lods
mov
mov
or
pushf
cmpsb
xchg
ficoml
xlat
jns
jne
out
scas
imul
and
in
rcll
insb
loopne
arpl
outsl
xchg
aam
adc
out
sti
add
dec
mov
inc
jecxz
pop
jle
xchg
insl
and
sahf
je
xchg
lock
inc
lcall
inc
filds
mov
adc
push
in
pop
push
test
push
mov
push
jle
adc
cmp
push
sbbb
cltd
mov
jno
inc
push
lock
fnstcw
testb
popl
xor
leave
jo
jl
adc
or
imul
adc
and
pusha
jbe
add
loopne
sbb
mov
adc
cmp
fstl
orl
call
lret
pop
hlt
mov
and
ja
add
add
testb
fisttps
mov
or
xchg
jp
daa
test
rcll
pop
std
jb
inc
sub
pop
loope
cmp
test
cwtl
mov
xor
cmp
testl
repnz
adc
sbb
rclb
hlt
pop
jbe
enter
pop
andb
sub
mov
push
pop
clc
cmp
cmc
insb
jecxz
dec
push
adc
rclb
imul
sub
fmuls
mov
pop
popf
and
sbb
cmp
decl
shll
testb
add
push
or
sub
jge
in
test
push
jmp
inc
loope
adc
sbbl
jecxz
les
cmpl
sub
pop
adc
mov
or
push
push
or
in
push
shrl
rcl
pop
shlb
das
xor
mov
into
cmp
and
pop
sbb
push
push
pop
loopw
adc
mov
mov
inc
rcrb
fstpl
pop
jmp
addl
ret
cmpsb
sub
vshufps
pusha
push
pop
sbb
loope
sub
push
cs
push
rcrb
cmp
dec
sarl
and
dec
and
sbb
mov
orb
cmp
push
fidivrl
jb
jbe
lea
lea
or
in
add
int3
jbe
and
fdiv
cmp
push
fcompl
pop
jmp
popl
dec
push
adc
je
xorl
call
push
adc
stc
pop
inc
cmp
mov
mov
dec
xor
and
or
sbb
push
rolb
mov
hlt
aaa
sbbb
rcrl
inc
sbb
jbe
cmp
pop
inc
cmp
xor
out
jle,pn
xor
push
lcallw
mov
push
loopne
push
mov
adc
adc
dec
xor
cltd
inc
popa
inc
or
push
or
mov
enter
ss
daa
daa
daa
sub
xor
daa
daa
daa
sbb
cmp
daa
insl
inc
inc
inc
and
inc
cmovs
dec
dec
dec
push
push
pop
xchg
xchg
xchg
or
xchg
xchg
xchg
push
nop
xchg
js
aad
xor
sbb
mov
xchg
cwtl
leave
and
dec
pushf
mov
xor
add
xor
or
sub
push
dec
sbb
dec
xor
stc
and
jle
or
dec
dec
fwait
nop
clc
adc
cld
adc
lcall
sub
nop
data16
and
or
nop
nop
int
and
or
ror
mov
pop
inc
or
adc
xor
sbb
mov
mov
sbb
loop
js
repnz
dec
jne
out
jmp
or
push
sbb
insl
fldenv
adc
loop
dec
pop
scas
or
adc
dec
cmp
inc
cmp
stc
xor
adc
cmp
outsb
loopne
insl
push
inc
push
call
mov
cmpsb
cmc
out
dec
int3
das
aam
inc
mov
and
push
pop
call
sub
add
pushf
jl
add
pop
xchg
addr16
push
or
and
inc
adc
xchg
movsb
fucomip
add
jecxz
fsubs
pop
test
pop
cmp
xchg
xorb
test
das
cmp
add
andb
int3
mov
inc
js
ret
adc
lods
push
loope
inc
out
mov
or
add
fmuls
in
in
inc
sub
popf
inc
arpl
rcrl
cmp
lcall
inc
mov
fistpll
bound
push
fidivl
sbb
pop
mov
je
push
pushf
cmc
xor
test
dec
loopne
dec
xchg
test
sub
pop
add
and
lods
or
sbbb
sti
cmpsb
add
sbb
cmp
int3
add
movb
cmp
add
rcll
cmpsb
add
fldcw
adc
cmp
mov
and
ret
stos
inc
sbb
adc
push
adc
ret
sbb
and
jl
push
pop
or
fmuls
jo
xlat
jmp
jbe
adc
cltd
fcoms
dec
lahf
push
adc
fsubrs
popa
pop
mov
iret
jmp
add
push
add
add
andb
fcoms
insb
imul
into
jmp
cltd
es
loopne
test
or
popl
adc
push
or
mov
adc
xchg
outsl
psraw
sub
lods
jb
push
or
fimull
or
movsl
add
jl
sbb
daa
adc
sbb
sbb
stos
cmp
add
loope
xorl
pop
push
js
mov
notb
mov
push
test
pusha
sbb
add
mov
sbb
or
fsubs
mov
loopne
push
jns
aas
out
sub
repnz
in
pop
add
loopne
in
hlt
stc
cs
cmp
xor
jne
insl
test
jne
in
sub
inc
fucom
xor
mov
push
test
sbb
out
out
mov
or
pop
and
fcmovnbe
sti
mov
or
pop
clc
or
dec
pop
mov
aaa
bound
iret
ret
inc
mov
adc
push
imul
push
adc
mov
stc
popf
add
mov
inc
dec
jecxz
test
nop
xchg
inc
insb
add
dec
ljmp
add
xor
lea
sbb
inc
or
cmp
jns
dec
sub
sbb
cmp
popf
pop
addl
xchg
sbb
mov
les
mov
pop
cmp
in
lods
mov
cld
out
dec
sbb
mov
mov
cld
andb
test
jmp
push
sbb
sub
insl
xchg
out
cmp
add
cmp
cmp
movsl
mov
lret
xchg
sysexit
and
xor
inc
call
jmp
push
dec
call
lea
push
sarb
inc
out
inc
cs
je
mov
jnp
xor
jge
insl
pop
pusha
fcoms
push
inc
sub
xchg
lea
jl
dec
sarl
sub
popa
pop
jmp
cmp
test
mov
add
add
fidivl
push
or
out
rolb
jno
add
jecxz
xlat
mov
or
xchg
cmp
jne
movzwl
incb
add
out
js
sub
int
push
jmp
pop
mov
jl
inc
adc
mov
test
sbb
fdivl
sbb
adc
aad
cmp
sbb
decl
movsb
fisttps
cmp
sub
or
inc
mov
in
js
sbb
dec
add
xchg
sbbb
popa
ds
call
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
push
lods
push
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
adc
ja
inc
add
cli
cmp
jmp
ss
or
pushl
roll
inc
cs
dec
add
sub
rclb
sub
lods
push
orl
pop
dec
fistl
sbb
or
jns
mov
lret
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
pop
xchg
pop
mov
add
and
orb
add
sub
and
cmp
addb
test
mov
cltd
push
pop
lock
sub
in
or
sub
pop
lods
xor
jmp
or
clc
aad
pop
pop
rcr
ret
sub
faddl
test
test
add
fidivs
lret
jmp
or
and
push
sti
mov
out
inc
pushf
aas
lea
ret
ret
mov
mov
pushl
lods
adc
gs
mov
dec
sub
ljmp
cld
cmp
adc
jle
xchg
or
xor
cmp
lods
xchg
inc
cmpb
shll
das
dec
outsb
jg
or
iret
movsl
loopne
or
cmp
pop
enter
and
js
mov
sbb
or
pcmpeqb
adc
add
dec
pop
scas
cs
and
cmpsb
mov
sbb
add
cld
clc
sarb
push
cs
inc
cld
sbb
sbb
mov
xor
push
adc
arpl
andl
lods
loopne
xchg
jmp
unpckhps
imul
aaa
and
sbb
or
ljmp
mov
inc
add
repz
push
or
sti
ljmp
add
add
inc
jge
mov
sub
xor
push
inc
dec
int3
frstor
mov
ret
xor
sbb
daa
adc
and
inc
dec
mov
ljmp
les
push
mov
out
pushf
cli
sub
insl
sbb
pop
mov
pop
int
mov
jl
js
or
into
nop
rcl
add
add
push
inc
xor
xlat
cmp
sbb
nop
mulb
leave
arpl
ja
into
sub
mov
or
daa
mov
dec
add
pop
xchg
and
push
pop
mov
xchg
int
mov
xchg
gs
dec
sbb
arpl
sub
cmp
clc
sbb
rclb
xchg
dec
jl
in
in
pusha
sti
stos
call
addr16
pop
adc
or
adc
mov
adc
fsubp
push
daa
adc
fldpi
mov
insb
and
pop
subb
push
pop
lods
pop
sub
bswap
pop
pop
xchg
mov
and
cmp
mov
ret
and
xchg
pop
xchg
xor
add
clc
je
xor
test
lcall
lcall
dec
and
add
inc
pop
add
mov
and
sub
rorb
add
push
push
and
jmp
enter
jl
data16
js
inc
test
add
js
pop
sbb
push
add
popa
and
dec
out
inc
or
mov
enter
inc
ds
inc
lret
jge
and
inc
inc
xchg
adc
mov
cmp
sub
adc
dec
rcrl
test
outsb
test
or
fnsave
mov
or
inc
jmp
icebp
xor
jecxz
movsb
arpl
in
mov
add
add
mov
pusha
stos
jl
ret
sbb
mov
push
pop
jmp
pushf
pop
pop
movsl
cmp
and
pop
add
adc
sbbb
push
gs
mov
add
or
cmp
rcrl
cmp
inc
mov
ret
jno
push
cmp
loope
in
sub
adc
jge
pop
andl
gs
cmp
cltd
nop
sub
bound
jmp
sub
sti
cmpsl
sbb
in
mov
mov
das
mov
dec
pop
mov
push
sbb
cmp
das
push
aam
inc
fs
testl
ret
adc
inc
pop
pop
push
sub
lea
outsb
pushf
mov
lock
orb
dec
mov
testb
sbb
dec
xchg
int
ljmp
scas
xor
mov
mov
rorb
cmp
dec
cmp
cmp
sbb
aas
repnz
das
adc
dec
jp
leave
inc
or
dec
into
jl
jle,pn
or
or
push
sub
mov
les
add
stc
push
mov
gs
and
jne
or
add
data16
xchg
or
dec
xchg
xchg
test
repz
jge
mov
in
addb
add
inc
cmp
adc
leave
and
ja
cmp
aam
aam
stos
jmp
andb
add
or
jne
je
or
xorb
xor
mov
xor
ljmp
pop
mov
xor
pop
sub
je
push
and
in
mov
ds
cmp
cmp
sbb
stos
mov
and
imull
jmp
and
push
xchg
pop
add
cltd
inc
push
imul
add
push
or
or
test
push
or
or
test
push
mov
push
mov
xchg
fsubs
and
add
iret
and
adc
nop
and
shll
dec
inc
outsb
aas
mov
or
mov
jmp
and
es
aaa
loop
shrb
lock
test
inc
push
in
adc
test
cltd
les
xor
adcb
lret
mov
mov
sbb
or
sub
sub
sub
out
pop
clc
incb
jmp
sbb
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
cltd
adc
aam
sub
loopne
xor
mov
orl
and
jge
popf
sbb
es
sub
loope
flds
and
out
adc
push
aas
pusha
mov
pusha
loope
pop
sub
pop
dec
and
xchg
push
sahf
sub
pop
fstp
sub
sarb
pusha
pusha
insl
es
shrb
add
shufps
inc
or
xor
repnz
fisubs
adc
sti
add
or
fists
xor
mov
xchg
cli
adc
repz
ret
outsl
inc
inc
mov
dec
jne
orl
mov
sti
xor
pop
aam
pop
testl
fsubs
push
xorb
je
mov
mov
jb
sbb
jmp
push
and
inc
add
xchg
fsubr
or
pusha
stos
xchg
icebp
flds
fisttpll
cs
addb
adc
std
lea
call
inc
cwtl
cmp
insl
dec
loop
or
icebp
mov
ficoms
roll
inc
in
adc
xor
lret
push
or
mov
inc
aam
fs
sbb
cs
lods
in
fcompl
fnstsw
arpl
inc
jl
add
sub
sbbl
push
fwait
rcrb
push
or
mov
lods
sbb
test
int3
inc
push
sbb
adc
hlt
add
repz
leave
ret
cmc
jnp
pop
xchg
clc
inc
mov
call
pop
in
push
cli
pop
loopne
pop
mov
or
or
loopne
push
mov
inc
mov
push
add
add
dec
div
xchg
or
pop
gs
mov
and
dec
into
dec
pop
clc
sbb
shrl
out
mov
icebp
pop
orl
loopne
or
jp
push
mov
loope
sahf
jmp
pop
movsb
sbb
aam
bound
adc
xchg
and
mov
decb
push
and
pusha
pop
aam
ficomps
out
cld
jbe
and
jle
push
add
aaa
inc
lcall
sub
sub
icebp
add
jmp
or
es
shlb
jne
mov
movzbl
loope
outsb
add
xchg
mov
xorb
jl
icebp
js
push
ja
or
adc
mov
sbb
hlt
adc
jp
inc
sub
or
pop
sub
pop
mov
mov
mov
pop
repz
idivb
or
incb
jno
mov
dec
inc
and
add
cmp
and
or
mov
inc
adc
or
mov
sbb
xor
ss
pop
mov
jg
mov
fadd
dec
insb
int
in
add
imul
add
jp
ret
add
pop
pushl
sbb
or
push
adc
jbe
sub
xor
scas
add
scas
and
adc
cltd
stc
nop
add
out
popa
sbb
mov
aam
xchg
sahf
fnstsw
sarl
inc
adc
subl
jae
pop
or
mov
roll
pop
cld
adc
stos
xchg
clc
popf
xlat
daa
xor
sub
cs
sub
ret
sahf
sbb
push
pop
push
mov
or
jmp
and
sbb
fists
enter
mov
sbb
push
mov
loope
mov
pop
fadds
into
inc
xchg
das
pop
pop
mov
sbb
push
xor
aad
mov
jne
jne
dec
pop
sub
aad
icebp
and
pop
push
sbb
shll
push
or
push
fs
stos
inc
add
or
std
add
dec
push
out
mov
push
rcrb
mov
jnp
mov
cld
push
add
int3
or
sub
ljmp
push
mov
mov
push
insl
in
or
loop
inc
fld
and
xor
and
subl
repnz
push
or
insl
or
push
mov
sbbb
fldt
fwait
mov
adc
sbb
stos
mov
adc
and
stos
jo
aaa
jle
call
mov
dec
je
leave
fs
and
je
mov
inc
je
sbb
adc
ldmxcsr
inc
and
pop
cmpsl
test
dec
jb
mov
push
call
cmp
inc
sub
repz
mov
sbb
sbb
adc
jmp
adc
lcall
jle
fidivs
call
fs
inc
adc
mov
and
mov
lea
insl
push
test
test
inc
or
jbe
ret
cmp
sbb
mov
jnp
add
test
mov
scas
call
rcll
adc
or
adc
inc
out
xor
dec
test
sarb
inc
out
addr16
sub
out
psubq
xchg
xor
fcomi
jg
mov
mov
mov
enter
gs
cmpl
gs
orl
pop
xor
lods
sub
cwtl
icebp
outsl
sub
and
inc
clc
mov
add
add
inc
inc
cld
repz
loop
jp
dec
cmp
in
adc
xchg
pop
mov
ret
push
mov
loopne
add
push
or
or
add
jmp
aas
sub
lock
sbb
sti
add
clc
and
push
daa
mov
pop
test
jne
sbb
movl
and
add
stos
stos
test
loopne
fwait
inc
sbb
mov
xor
cli
sbb
and
add
adc
mov
dec
jns
dec
xchg
loopne
lea
xchg
mov
push
mov
loopne
jb
fdivs
es
loop
rolb
adcl
lods
call
outsb
push
cltd
insb
pop
and
mov
loop
mov
dec
or
inc
insb
sub
mov
lea
xor
repnz
xor
cmp
std
jae
les
pusha
sub
adc
jnp
sub
jb
incb
jae
sub
push
mov
sarb
je
pop
loop
pop
cmc
push
or
jge
push
xchg
mov
xor
test
jno
lcall
ljmp
sti
cmp
dec
dec
stos
inc
and
bswap
xor
xor
movsl
cmp
sub
loop
xor
outsl
sbb
or
adc
sub
sub
adc
add
popf
je
adc
add
iret
pop
ds
mov
and
and
lock
test
addl
push
sbb
pop
mov
getsec
sub
sarb
je
mov
sub
out
mov
sub
pop
in
add
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
insb
add
cli
jne
mov
mov
push
pop
xor
pop
sub
and
iret
dec
jns
inc
lock
sbb
loopne
ret
jecxz
sbb
loope
mov
loopne
dec
jae
cmp
mov
out
addl
mov
mov
mov
jl
pop
andl
xor
and
mov
outsl
xchg
mov
push
pop
add
int3
cld
sbb
inc
lcall
dec
add
pop
scas
shl
pop
xchg
test
inc
aas
add
or
mov
or
adc
gs
call
inc
jmp
aam
add
and
sub
xchg
sbbb
pop
xchg
inc
push
enter
in
adc
adc
adc
inc
sbbl
and
mov
push
and
sbb
and
sbb
in
sbb
add
push
adc
sbb
xchg
jne
add
aad
es
xor
push
adc
cmpsb
xor
mov
test
shrl
movsb
mov
movsb
xchg
and
jne
stos
xchg
lods
xchg
nop
das
mov
jne
add
mov
or
cmp
in
jne
inc
jmp
mov
mov
inc
or
xchg
adc
aas
loop
sub
xor
push
dec
jmp
fs
frstor
dec
mov
fadd
fwait
rolb
call
add
or
or
lea
int3
and
sbb
lock
jmp
andl
jmp
cmpsl
mov
fidivl
mov
add
std
inc
call
inc
jle
adc
incl
gs
orl
pop
mov
in
jbe
lods
addr16
into
subb
push
cmp
add
jmp
jmp
mov
imul
mov
fwait
or
sbb
cmp
push
push
pop
jge
pop
fstpt
test
nop
add
jne
pop
and
jae
imul
sbb
aad
cmp
mov
or
mov
dec
decb
divl
out
push
sub
je
adc
gs
orl
iret
mov
push
and
dec
and
enter
mov
jbe
sub
mov
fbld
je
mov
test
add
mov
adc
add
jbe
xchg
testl
and
subl
pop
orb
cmpb
mov
push
mov
cli
and
sub
inc
xor
adc
or
jecxz
add
in
jbe
out
pushf
jmp
push
cwtl
pop
mov
xor
mov
dec
nop
and
loopne
fimull
mov
push
jg
dec
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
icebp
inc
and
cmp
adc
mov
sbb
ret
and
jle
add
sub
adc
mov
push
jns
inc
inc
imul
out
dec
test
jg
mov
sarl
popf
into
lcall
popf
decb
insb
push
rorl
push
mov
loopne
and
mov
fwait
sub
dec
or
mov
cmpsl
or
icebp
into
mov
mov
ret
and
mov
into
nop
sarb
jbe
rolb
mov
aas
out
sbb
ja
ja
mov
stos
mov
jl
es
xchg
mov
add
inc
int3
jne
push
fsubrl
ret
adc
les
test
push
lock
jne
inc
or
cmp
xor
outsl
lock
jne
hlt
int3
add
jne
pop
and
mov
test
rcrl
pop
adc
aaa
add
lea
push
shlb
mov
pusha
ret
xchg
jp
scas
sbb
cld
dec
subl
jl
dec
ja
lcallw
js
subl
lcall
dec
cmp
mov
stc
pop
sub
ret
mov
push
aaa
inc
test
js
sbbb
adc
add
add
add
or
shr
or
mov
and
rcll
jg
idivl
mov
jg
or
adc
inc
mov
fldl
idivb
push
pop
adc
mov
idiv
mov
shrl
shl
shr
or
mov
mov
dec
fcmovnbe
jne
insb
xor
mov
mov
push
ja
aam
loope
inc
pop
add
mov
pop
and
cmp
push
add
ficompl
sar
cmovbe
fisubrs
cmpsb
lcall
jmp
ficoml
pop
sub
mov
mov
and
insb
push
clc
rolb
insl
xor
or
orb
cmp
push
or
sub
cmp
push
into
jmp
scas
lahf
imul
dec
and
jae
jno
les
push
inc
dec
cmp
int3
add
or
lret
lds
cmp
das
sub
add
notb
sarb
add
push
nop
cltd
lds
insl
and
ret
ficompl
bound
inc
sbb
js
xchg
xchg
add
repz
cmp
cmp
jo
call
lcall
sub
mov
inc
mov
or
ja
sub
cmp
imul
or
mov
xor
add
fildl
cmp
xchg
ds
add
scas
or
mov
mov
inc
mov
mov
cs
mov
in
sub
sti
scas
mov
pop
push
xchg
xchg
adc
add
cs
or
ss
xor
mov
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
add
add
fcompl
addr16
or
or
test
jae
outsb
or
dec
or
lea
leave
or
jp
add
adc
or
lahf
xor
mov
and
repnz
ds
inc
push
cld
jnp
add
fsubs
pop
jno
xor
xor
xchg
push
arpl
add
pop
add
test
das
popa
push
mov
cmp
and
mov
mov
xor
jbe
or
add
filds
fidivl
xor
addr16
and
pop
je
setg
ljmp
push
cmpl
out
clc
add
mov
mov
call
cmpl
mov
movsb
arpl
mov
add
jle
jo
lcall
clc
lds
mov
es
mov
sbb
loop
lock
call
icebp
pop
inc
pop
lret
jmp
sub
add
sub
jno
xchg
pop
xor
rcrb
dec
add
inc
inc
dec
inc
out
cs
mov
add
add
fs
out
notl
xor
push
or
bound
add
testb
addb
inc
jmp
inc
add
pop
dec
dec
lods
adc
mov
dec
mov
enter
adc
dec
cltd
clc
vsqrtps
rorl
push
cwtl
mov
loopne
jmp
pop
add
ret
jbe
loope
shl
xchg
dec
adc
jge
out
sub
lahf
adc
push
xor
and
push
out
mov
mov
sub
rclb
lds
xchg
sub
or
aam
stos
orb
xchg
addb
xor
test
jbe
and
jle
dec
mov
lcall
xor
pop
es
call
test
jmp
adc
lcall
aaa
mov
outsl
lcall
xchg
fcoml
adc
inc
ljmp
addl
and
jecxz
add
stos
lret
pusha
ds
repnz
or
sar
xorb
cmp
push
out
add
adc
add
enter
lcall
push
lds
lahf
xchg
mov
pop
push
xor
aaa
adc
loope
gs
mov
cs
mov
ret
push
dec
inc
or
jmp
xor
leave
and
add
mov
in
xchg
nop
and
popf
inc
fcmovb
sub
dec
fwait
pop
jbe
sbb
inc
neg
sbb
jecxz
mov
loop
jg
ret
daa
xor
or
jne
pop
cmp
or
add
add
mov
or
xor
adc
movb
push
pushf
and
out
pusha
dec
xor
or
fsubrs
and
ja
sub
mov
dec
add
sub
and
adc
call
movswl
les
shll
int3
data16
mov
ret
adc
cmpl
insl
cld
add
dec
shrd
push
xchg
sub
ss
sti
jge
ss
jl
cmpsl
dec
push
xlat
clc
mov
or
cmp
or
scas
int
stc
inc
add
dec
jmp
ret
xchg
xchg
clc
sub
inc
or
sub
push
scas
xchg
aam
insb
incb
push
or
xor
pop
cmp
loope
nop
pop
add
adc
xor
imul
js
dec
and
or
cld
retw
sarl
jg
jb
pop
push
fucomip
push
sub
or
fidivrl
rorl
pop
lock
add
jbe
rol
jb
push
push
jns
xchg
addb
lock
aaa
or
push
shll
add
lods
jb
mov
lret
dec
inc
dec
pop
or
cmp
xor
xor
push
nop
add
daa
adc
adc
push
mov
stc
mov
sbb
aam
and
sub
add
scas
inc
js
int
cmp
pop
push
psllq
add
adc
jp
call
jb
lods
and
andb
testl
sub
and
je
mov
andb
add
xchg
inc
sub
not
jge
mov
push
or
lock
data16
popa
push
sbb
pop
movsb
add
adc
popf
jo
ficompl
add
shlb
pop
jo
add
nop
test
jl
aaa
movsb
mov
sub
je
cmpsb
stc
dec
inc
push
je
push
shl
jne
icebp
or
cmp
cmp
lcall
adc
pop
imul
cmp
add
adc
loopne
test
adc
push
insl
xor
pop
insl
cmp
hlt
or
add
cld
jl
sahf
sub
mov
inc
or
mov
rol
push
cmovae
in
loop
add
pusha
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
sub
cmp
inc
popa
je
inc
je
dec
cmp
leave
psubusb
xor
xor
jmp
mov
cmp
xchg
xchg
and
jp
or
dec
jmp
pop
aad
dec
repz
test
add
lcall
inc
call
dec
filds
push
pop
clc
fstps
or
mov
sub
push
xchg
inc
push
push
loopne
loope
add
iret
rol
dec
shrb
add
add
out
out
bndldx
arpl
cmp
dec
cmp
decb
je
push
inc
cmp
or
cmp
clc
jmp
inc
cltd
or
je
sbb
push
cmpb
jne
jp
dec
inc
or
lret
imul
mov
sub
add
hlt
xor
cmp
push
cmp
or
test
call
xor
imul
adc
push
push
and
repnz
popf
ret
lret
mov
shrb
dec
dec
aaa
jmpw
or
mov
sub
push
mov
jne
lock
push
cmp
movb
mov
shrb
cs
js
mov
inc
mov
adc
xchg
xor
xor
sbb
mov
mov
cmpl
pop
lret
or
push
ljmp
push
mov
adc
adc
ss
and
dec
sub
or
jp
pop
call
cmp
sub
mov
test
adc
or
notl
ds
mov
mov
jb
fdivs
jge
enter
pusha
mov
adcb
push
inc
cmp
negl
pop
int
lock
mov
jo
out
pop
cmp
out
pop
sbb
icebp
mov
bound
or
nop
adc
sub
add
xor
xchg
mov
lret
push
dec
jae
test
push
jmp
or
jmp
cmp
dec
push
testb
sub
xchg
adc
xor
rorb
mov
imull
int
adcb
jae
cmp
jne
test
mov
rcll
xor
xor
fcomps
mov
fcomip
adc
movsl
add
xor
sbb
lcall
arpl
in
insl
cmp
and
aad
cmpsl
mov
or
sbb
mov
push
test
aad
lea
jbe
in
lds
cwtl
adc
ss
fs
xor
mov
sbb
lahf
add
adc
xchg
push
outsb
xor
push
sbb
and
mov
sbb
and
repnz
fstps
cmp
or
shrb
push
mov
mov
lea
sbb
movsl
roll
es
push
jecxz
clc
xchg
pusha
push
ret
add
sub
cmp
test
out
adc
sbb
sbb
mov
jb
orps
das
lock
or
jl
dec
jg
mov
fiadds
arpl
and
xor
jg
cmp
push
inc
jmp
ja
inc
jo
insb
leave
add
aaa
mov
lea
xor
xchg
mov
cmp
inc
test
fisubrs
mov
sub
xor
inc
ja
mov
sub
push
fs
jl
adc
ljmp
cld
jo
les
outsb
mov
fldl
jne
lea
inc
arpl
sub
das
adc
cmp
outsl
fstpt
inc
in
adc
repz
pop
push
repnz
add
mov
push
loope
jmp
pop
cmovnp
mov
adc
inc
adc
xchg
push
lea
adc
sub
and
dec
movsb
cmp
or
adc
inc
loope
sbb
push
fcomps
adc
mov
cmp
push
faddp
int3
ljmp
fists
mov
jecxz
les
cli
fimuls
test
adc
and
lds
inc
or
xchg
mov
inc
jge
loope
or
pushw
pop
inc
and
cwtl
mov
ficompl
ret
nop
orl
sub
lret
and
insb
rorl
xchg
mov
jo
roll
cmp
add
pop
xor
jmp
hlt
into
sub
pushf
mov
inc
and
and
sbb
idivb
mov
sbb
insl
xchg
xor
pop
jge
adc
push
loop
jne
js
mov
js
js
stos
testb
sub
inc
cmp
adc
aaa
roll
call
cli
lea
or
es
add
sub
into
sub
pop
cld
mov
jmp
shr
or
mov
add
push
int3
mov
xlat
bound
scas
push
das
lock
sti
in
stos
mov
cmp
or
add
mov
pop
push
rorb
pop
mov
fnstcw
xchg
shlb
sub
into
mov
lret
add
and
or
lea
mov
shr
cmp
mov
js
shll
stos
or
mov
mov
add
xor
and
cmp
and
mov
ret
call
dec
cmp
out
inc
imul
pop
pop
stos
sub
and
pusha
dec
jmp
call
mov
xor
adc
iret
mov
lock
andl
xchg
push
aad
test
leavew
mov
add
pushl
stos
idivb
sbb
sub
or
test
test
mov
sbb
lret
je
dec
call
pusha
push
or
and
mov
xchg
movsb
jge
rclb
ficompl
popa
cld
add
push
imul
sbb
push
dec
ja
jne
jne
stos
cmp
adc
test
fldl
jb
jne
add
call
adc
adc
sub
adc
in
mov
and
aad
jns
dec
jge
inc
push
adc
dec
xchg
cmpsb
fldl
movsl
jnp
mov
sub
push
cmp
jbe
sarb
add
adc
jl
mov
jl
leave
inc
xor
outsb
sub
jmp
adc
in
xor
cmpb
idiv
mov
xor
stos
xchg
adc
or
xor
pop
add
scas
stos
push
adc
inc
push
push
mov
ljmp
and
pop
nop
iret
ds
inc
adc
pop
popf
dec
or
dec
mov
pop
or
subl
mov
shrb
mov
dec
cmp
dec
add
inc
addr16
jnp
adc
enter
out
or
pushf
rolb
test
adc
push
pop
hlt
lret
aad
flds
and
shll
repnz
push
je
mov
dec
jo
or
push
push
xor
pop
stc
xor
pop
pop
pusha
or
push
push
fists
jo
jne
movsw
xor
jge
mov
adc
jo
ret
add
aam
int3
add
hlt
xchg
or
pop
add
dec
leave
and
inc
cmp
pop
or
mov
in
clc
psubd
jge
inc
inc
div
fdiv
fiaddl
daa
mov
mov
sbb
inc
sbb
and
sbb
mov
or
mov
int3
push
sbb
sbb
fcoms
rcll
ret
and
fnstenv
dec
icebp
sbb
adc
or
lret
adc
sbb
or
or
leave
dec
jns
pusha
cmp
push
mov
pop
pop
mov
add
jl
adc
inc
lds
ljmp
shr
push
mov
test
stc
inc
pop
scas
push
idiv
and
inc
jge
lock
je
negb
je
ljmp
rcr
xor
jmp
fiaddl
pop
pop
mov
adc
jno
inc
dec
dec
scas
add
aaa
hlt
es
xchg
dec
inc
jp
mov
gs
int
les
negb
or
into
jbe
jns
aas
push
adc
adc
aam
aam
pop
pusha
scas
mov
and
les
daa
push
pop
in
aam
adc
das
pusha
insb
sbb
xor
pusha
adc
setle
cmp
inc
loope
mov
adc
and
les
fldenv
jb
mov
mov
xor
or
push
outsl
sbb
int3
push
cld
and
xor
dec
pushl
dec
push
ss
jg
push
rcrb
cmp
andb
movsb
popf
or
jne
sub
mulb
jmp
sbb
lret
jno
sub
leave
je
pushl
test
cltd
mov
mov
mov
push
es
mov
je
mov
and
push
cmp
repz
jecxz
add
out
adc
cmp
jne
xor
add
cli
shr
adc
xor
idivl
pop
imul
push
dec
add
jbe
xor
push
or
mov
scas
ret
cmp
inc
pop
ja
dec
adc
dec
inc
mov
fstpt
pop
pop
add
pop
aam
cmp
sbb
icebp
ret
jmp
neg
je
iret
push
loop
jecxz
pop
or
jo
outsl
mov
add
xchg
ror
xor
or
enter
mov
lods
cmp
jne
adc
push
sub
xor
sbb
in
std
aaa
xor
dec
fdivrs
push
in
jmp
mov
jne
jle
push
addl
pop
aaa
adc
pop
push
jno
cmp
daa
xchg
out
push
pop
inc
push
mov
xor
xlat
pop
xchg
xor
rorb
ljmp
mov
mov
sti
inc
push
add
cltd
dec
jae
test
adc
and
xorl
addb
inc
lret
sar
or
movb
push
ror
repz
rcl
aam
xlat
out
cmp
sti
fstpt
clc
fwait
and
sbb
add
movb
jmp
or
push
into
or
mov
es
sub
addl
and
adc
ss
add
push
inc
push
add
fistpl
aas
jne
mov
jle
inc
mov
je
notl
sub
call
jmp
icebp
adc
cmp
das
pusha
jnp
scas
or
push
push
add
add
adcl
add
push
sbb
push
popa
lcall
mov
imul
or
mov
lea
imul
lea
sar
inc
insb
adc
or
mov
loop
or
fisttpl
push
xlat
add
ljmp
inc
loop
cwtl
pushf
popf
scas
rolb
or
push
adc
mov
jo
loopne
xor
sti
add
bound
orb
jp
mov
add
jb
inc
ss
dec
imul
or
movb
ljmp
lock
add
ja
and
and
lea
pop
sbb
test
andl
decb
xchg
mov
mov
pop
mov
mov
and
pmulhuw
lret
mov
dec
lods
loopne
inc
or
sahf
ss
push
divl
mov
dec
test
rolb
fsqrt
outsb
popa
push
mov
push
lea
adc
dec
xchg
mov
nop
push
or
movsl
push
sbb
popa
pop
sahf
add
movsb
sub
outsl
repz
addl
mov
jge
imul
loop
test
shl
loope
rorb
cmp
in
sub
sub
or
roll
fcomps
mov
cld
or
and
iret
push
loop
hlt
rorb
push
push
push
int
cmpb
outsl
mov
cmp
mov
or
ss
pop
mov
in
out
xchg
mov
shl
jmp
dec
es
lods
lock
or
repnz
test
cli
adc
bnd
mov
sbb
scas
mov
push
dec
popa
call
movb
mov
adc
faddl
push
sub
and
inc
stos
inc
add
mov
sbb
dec
cmp
mov
jecxz
clc
mov
push
dec
shl
lcall
sbb
sbb
enter
cmpsl
add
pop
lods
cmp
repnz
pushw
rcl
xor
sub
loop
out
jge
inc
out
xchg
mulb
jb
inc
test
and
and
adc
adc
xor
pop
test
in
or
jp
jae
jne
fdivrs
aam
inc
xchg
sub
dec
ss
adc
push
sub
dec
dec
mov
xor
call
push
adc
push
cmp
cld
lea
xchg
lret
fcmovu
mov
data16
insl
mov
inc
add
lods
rolb
repz
mov
idiv
hlt
dec
add
hlt
inc
sbb
sbb
negb
test
xor
test
inc
mov
out
or
xchg
sbb
inc
xchg
movsb
leave
pop
cmp
jne
test
ljmp
add
bound
into
mov
adc
je
mov
sub
insb
sbb
adc
inc
add
inc
clc
btr
mov
push
add
push
nop
cmp
cmp
aaa
test
pop
jle
out
adc
out
decb
sub
js
dec
pop
dec
pop
shr
pop
add
or
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
or
loopne
loopnew
or
pop
xchg
fmuls
lea
push
mov
mov
mov
push
into
je
push
adc
sub
out
clc
loope
push
push
sti
and
cmc
lahf
push
xchg
mov
repnz
mov
push
movsl
insb
push
add
sub
into
les
add
sti
out
enter
xor
ret
sbb
push
movsb
xabort
int3
adc
push
mov
push
inc
fnstsw
push
shlb
add
idiv
add
daa
shr
mov
add
in
into
jbe
mov
inc
xchg
inc
lahf
xor
nop
dec
mov
stos
aas
std
add
xor
inc
cmpb
or
add
dec
cmp
and
mov
repnz
movsb
sbb
dec
add
add
fadds
lar
pop
add
repnz
mov
jp
jne
dec
mov
jb
lcall
adc
clc
push
ret
and
add
push
add
lds
adc
ds
mov
add
add
ret
xchg
add
add
test
popf
mov
mov
jl
mov
je
dec
add
inc
jo
aam
cmp
movsl
or
add
mov
or
gs
push
add
or
pop
pop
scas
add
adc
push
add
pop
pop
mov
push
xor
push
xchg
mov
sub
jae
push
divb
pop
test
lret
orl
inc
and
cmp
xor
into
add
jnp
clc
scas
mov
and
pop
pop
data16
add
xor
ret
jne
or
mov
mov
mov
cld
shll
inc
push
pop
jae
dec
movsl
test
add
add
add
sub
mov
lahf
add
or
mov
push
je
dec
pop
out
xchg
xor
xlat
dec
pop
pop
ljmp
ja
pop
adc
and
and
in
jo
and
test
mov
ret
or
aam
cmp
adcl
xchg
cld
cld
addb
sbb
mov
stos
jg
inc
jo
add
xchg
ret
dec
add
out
or
pop
inc
mov
mov
testl
cltd
sbb
fcmove
or
add
or
jae
data16
adc
xchg
stc
mov
pusha
mov
cmp
out
and
sbb
inc
jg
into
aad
jb
into
into
mov
jmp
fs
pop
sub
push
pop
sarl
nop
pop
cwtl
pop
mov
cmpb
fisubrs
pop
add
fwait
cmp
or
cmp
pop
lcall
roll
or
in
jns
add
add
push
insb
and
or
out
sbb
je
and
in
mov
sbb
pusha
inc
sub
jmp
jmp
lret
ret
int3
push
xor
xchg
and
subl
push
dec
mov
mov
outsb
shll
loope
fmulp
pop
fdivr
rol
inc
lret
mov
mov
push
push
cmp
add
adc
push
or
mov
dec
pushf
outsb
sub
pushw
jmp
pop
ficoms
push
fadd
push
sbb
sbbb
or
and
mov
jge
addr16
pop
in
sbb
jl
or
aaa
xor
movsl
inc
icebp
aaa
sbbb
mov
bound
mov
sbb
cmp
mov
push
adc
cwtl
addr16
sbb
orb
movsb
loopne
sub
sbb
in
mov
pusha
mov
ljmp
sub
out
je
fisubs
pusha
or
mov
cmp
cmp
jbe
inc
inc
enter
int3
call
jle
add
lds
test
sti
dec
loopne
or
jbe
loopne
loope
into
fcoms
sub
push
mov
or
cmp
or
cld
xchg
mov
lcall
sbb
sbb
and
stos
adc
loopne
jne
ret
lods
test
mov
dec
mov
push
pusha
lea
imul
inc
sbb
ss
or
pushl
or
and
push
mov
out
je
and
hlt
jno
popf
jb
push
inc
xchg
mov
mov
out
out
enter
jge
sbb
shrl
push
insb
and
add
je
notl
fcoml
xchg
mov
in
mov
pusha
xchg
dec
inc
sbb
and
aas
and
dec
dec
add
xchg
pop
jge
lea
inc
nop
mov
lret
add
mov
pusha
push
pop
push
imul
or
rcrl
jl
and
mov
cld
adc
lods
adc
dec
sahf
push
shll
lcall
dec
inc
add
sbb
bound
cmp
mov
subb
push
xlat
add
add
add
sbbl
and
xlat
or
mov
xchg
jb
dec
test
or
fcompl
xor
inc
add
mov
xchg
sub
pop
shrb
pop
jmp
xor
push
dec
xor
mov
inc
mov
inc
mov
push
cmp
add
notl
das
lods
push
loope
movsb
scas
lods
or
push
xchg
cmp
xchg
adcb
rorb
icebp
or
imul
xor
outsb
fiaddl
and
push
test
addr16
xor
sbb
add
adc
pop
add
clc
mov
subb
jo
cli
mov
jo
adc
cmp
mov
adc
rcll
xchg
add
lret
fistl
addl
sahf
sbb
enter
ret
incl
and
add
pushf
cld
icebp
mov
cld
pop
jl
sub
mov
dec
lea
or
mov
lret
enter
clc
popa
pop
adc
arpl
sub
sbb
pop
nop
lock
divb
and
lock
call
push
jmp
dec
loop
or
lea
xchg
sub
ss
int3
pop
sub
js
hlt
arpl
cmpsb
mov
inc
or
mov
push
ds
leave
add
push
sbb
jae
or
clc
addb
fcompl
movsb
shrl
shll
sub
add
dec
pushf
mov
xchg
fstl
es
idiv
fwait
push
and
push
adc
ds
cmpsb
inc
hlt
xor
sub
sub
adc
sbb
adc
sub
push
mov
pop
mov
es
mov
testb
push
push
addb
mov
add
xchg
mov
pusha
dec
cmp
add
push
mov
dec
cltd
or
inc
ret
pop
xlat
pop
add
int3
cmpb
adc
daa
or
sbbb
mov
or
test
movsl
add
fwait
or
data16
or
je
test
cmp
loope
lods
pop
inc
addl
daa
dec
movsl
scas
cmp
sbb
xchg
adc
or
and
adc
nop
or
loope
cwtl
shlb
insl
clc
mov
in
adc
push
cvttsd2si
mov
push
add
pop
pop
inc
sbb
je
pop
inc
adc
push
cs
stos
mov
insb
push
xor
mov
fsubrp
test
jns
fstps
icebp
fcomps
mov
mov
les
sub
cmp
lcall
adc
ret
jbe
adc
pop
sbb
sub
xchg
xchg
push
and
push
dec
popf
in
push
fimuls
add
mov
dec
mov
in
iret
mov
push
nop
push
arpl
sub
or
fs
arpl
add
fsubl
xchg
push
mov
insl
inc
push
fadds
in
xabort
inc
loopne
mov
data16
jb
aad
inc
es
dec
jecxz
jns
push
nop
jbe
cmp
lret
xor
mov
sbb
int
dec
add
dec
jnp
out
loopne
dec
add
push
push
or
jb
imul
jp
in
dec
fs
test
inc
int
inc
jo
jge
dec
roll
mov
fdivrl
call
xor
mov
push
inc
mov
gs
mov
add
adc
and
xchg
jg
add
inc
or
mov
and
add
loope
xchg
pop
jge
jge
adc
fwait
in
adc
ss
in
cmp
sub
xchg
iret
in
pop
lret
rorl
scas
sti
pop
push
cli
and
pop
adc
pop
sub
xchg
xorb
lret
push
cmp
cmp
push
or
dec
cmp
aad
and
insl
and
sub
inc
mov
xchg
pushf
mov
or
sub
dec
mov
rorl
mov
popa
enter
xchg
and
stc
adc
xchg
les
scas
or
aam
xchg
in
dec
push
aad
xlat
js
or
in
mov
in
movups
pusha
shll
fadds
cmp
sub
or
fs
in
lock
xchg
loope
lahf
pop
rorl
push
scas
pop
hlt
add
cmp
mov
push
inc
jnp
andb
pop
xor
mov
add
fwait
pop
cmp
inc
cwtl
pop
fstps
sbb
dec
dec
les
insl
popl
dec
xchg
dec
cmpsb
dec
or
aaa
je
cmpsl
or
call
jns
or
rclb
jae
call
xchg
fcompl
fsubrs
test
fldcw
fsubr
sbb
test
mov
xor
stos
mov
call
cltd
fs
dec
adc
and
aad
sub
leave
xor
cmp
xor
and
inc
dec
int
and
fs
ds
insb
out
add
dec
xchg
cmc
pusha
add
enter
add
sbb
sbbl
in
loopne
scas
test
aas
adc
or
aam
les
inc
inc
scas
push
xor
and
fwait
aam
movsl
test
in
inc
adc
and
rcrb
and
lock
add
xchg
fistpll
cltd
bound
fstl
or
enter
mov
lods
push
insb
or
call
scas
sti
jl
sldt
mov
sbbl
pop
jns,pt
mov
andl
gs
xor
arpl
aad
or
rorb
iret
loopne
adc
add
mov
and
add
push
mov
jmp
mov
in
cs
addb
dec
call
jns
mov
mov
pop
fdiv
mov
or
mov
movsb
or
rclb
mov
adc
out
lock
mov
dec
mov
fdivs
loopne
adcb
in
adc
in
inc
rcrb
adc
sub
mov
adcl
mov
adc
cld
or
repz
enter
fcoml
les
rolb
out
shll
mov
add
scas
adc
adc
lea
xor
cmp
fcom
inc
adc
cmp
or
mov
push
jno
add
mov
test
lods
pushf
pushf
pushf
pushf
mov
mov
pushf
rol
int3
push
popf
pushf
rcl
adc
xor
ret
mov
clc
popf
and
jmp
inc
ret
sbb
cwtl
das
movb
sar
inc
nop
cmp
and
jo
pop
xor
or
pushf
nop
jbe
xor
inc
fmul
and
sub
fcomps
jno
pushf
or
mov
aam
inc
push
daa
movsb
mov
mov
pop
das
or
in
dec
stc
pop
dec
cs
sub
inc
das
lea
dec
in
dec
repnz
adc
cli
mov
inc
adc
cmp
mov
fsubs
mov
xchg
loopne
jno
add
fadd
mov
push
dec
mov
test
sub
mov
sub
enter
popa
fwait
mov
mov
es
nop
mov
lock
jne
leave
mov
in
inc
pop
pushf
js
xchg
popl
inc
jge
and
cmp
push
fisttpl
add
jns
push
enter
adc
lcall
sbb
leave
mov
pop
sbb
leave
in
ss
cltd
pusha
inc
xchg
mov
andl
js
pop
and
sbbb
xchg
push
sbb
cmp
xchg
and
dec
mov
pushf
xchg
std
les
insl
mov
das
dec
and
das
insb
test
xchg
xor
pop
aaa
xor
pop
inc
rorl
call
pusha
mov
xchg
cmc
push
jne
add
push
jno
xor
push
mov
push
jl
mov
cmp
add
ret
sub
add
push
sub
add
lds
dec
movsb
stos
add
fsubrs
cmp
subb
lock
sbb
mov
xor
fs
push
fadds
xor
xchg
fcom
xchg
pusha
and
mov
pop
add
popa
or
sbb
enter
or
and
and
dec
lea
lcall
aaa
call
nop
ja
lods
add
loopne
sbb
imul
cmp
aad
movsb
and
nop
or
popa
leave
lret
adc
sbb
and
xlat
call
xchg
push
inc
pop
pop
fsubl
jbe
fisttpll
adc
mov
pushf
fptan
nop
mov
add
orb
mov
stc
inc
out
mov
test
popf
std
inc
addl
aam
pop
lock
xor
pop
cmovne
lret
jne
mov
mov
adc
push
loopne
jne
mov
mov
xlat
pop
add
test
insb
subl
adc
popf
inc
add
xor
add
mov
adc
std
xchg
xchg
xchg
fisttpl
xchg
xchg
xchg
sarb
mov
cwtl
mov
pushf
addr16
dec
outsl
pusha
jmp
rol
mov
cmc
lcall
mov
dec
or
mov
inc
xor
adc
push
rorb
and
mov
mov
mov
cs
fcoml
xchg
jmp
xchg
fmull
lods
lods
inc
repnz
jno
cmp
loopne
andb
faddl
aas
xchg
add
dec
or
mov
dec
mov
xchg
sarl
adc
in
sub
adc
inc
movsb
add
test
loope
and
sub
test
pushl
mov
stos
insb
je
sub
nop
insb
mov
call
sbb
jecxz
movsl
push
test
cmpsl
stos
je
sub
pop
push
rcll
push
rorb
xor
mov
adc
dec
int3
fs
pop
stos
enter
test
mov
cmpsb
imul
inc
mov
loopne
popa
inc
adc
inc
daa
inc
or
nop
popa
push
inc
test
dec
push
outsb
in
and
inc
or
sub
rcr
out
or
ret
xor
fadd
xchg
std
xchg
ret
jae
inc
jb
aaa
in
movsl
or
inc
push
lds
andb
lods
cmpsl
out
jns
enter
test
jbe
dec
sbb
inc
aam
fsubrl
or
inc
mov
std
add
test
pusha
inc
mov
pushf
fdivl
aam
enter
cmpsb
in
cmp
mov
shrb
sub
pop
test
fcomps
aas
ffree
bound
dec
add
rcrb
pop
pop
test
or
adc
and
xchg
mov
and
add
push
gs
sub
inc
insl
aam
sub
orb
add
sahf
nop
test
stos
stc
push
adc
stos
adc
or
mov
or
mov
cmp
ret
mov
movb
pop
sub
mov
leave
lods
inc
and
cmp
in
movsb
mov
movsb
shrl
jecxz
xchg
push
jle
mov
mov
jne
pushf
shl
aaa
sbb
in
mov
in
fidivs
inc
aaa
lock
pop
push
jb
inc
xor
rolb
mov
xor
fsubl
call
inc
loopne
adc
leave
mov
scas
adc
shl
and
pop
pop
xchg
mov
imul
test
sub
dec
mov
nop
popa
rorb
and
inc
in
adc
in
inc
movsl
push
adc
and
or
ret
adcb
add
xor
std
pop
or
dec
jnp
adc
mov
test
jecxz
and
das
cwtl
dec
push
cmp
mov
test
mov
inc
clc
sti
adc
sbb
sub
jge
sbbl
sbb
cmpsl
xorb
sbb
int3
mov
stos
push
rcrl
jge
les
mov
popf
dec
mov
adcl
or
or
mov
les
in
mov
jno
xchg
jno
lcall
mov
push
test
shl
mov
xor
popa
pop
test
lock
lcall
or
ret
icebp
lock
push
loop
jg
add
lds
xchg
push
mov
xor
test
rcl
les
outsl
adc
aad
push
mov
adc
mov
jns
mov
fsubs
sbb
push
shrb
sbb
adc
repnz
notl
inc
cltd
fsubl
aam
movsb
cmp
rorl
adc
imul
fsub
push
mov
inc
mov
and
mov
lret
add
pop
sbb
enter
aam
popa
or
les
push
sbbl
mov
mov
enter
mov
fwait
les
fmull
cwtl
xchg
push
sub
xchg
inc
repz
sbb
and
daa
push
cmp
inc
lods
mov
adc
jb
mov
loopne
mull
loopne
push
or
mov
jo
in
sbb
inc
fwait
mov
add
pusha
gs
fcmovnu
das
insb
shrb
ret
mov
push
in
les
loope
call
ja
mov
or
cmc
xor
test
bound
inc
cmp
fcmovbe
xor
in
ret
loopne
or
subb
or
loope
or
push
cmp
dec
in
push
movsl
add
jo
inc
sbb
push
lcall
push
adc
leave
les
stos
mov
sub
shll
mov
push
adc
mov
test
lahf
xchg
xchg
fwait
shlb
mov
mov
xor
ffreep
jno
and
int3
mov
pop
push
jl
inc
sub
pop
dec
push
push
repnz
lcall
pop
rcrb
add
test
adc
out
pop
and
sbb
fistpll
nop
and
jae
xchg
cmpb
or
xor
leave
dec
pop
dec
sti
cmp
add
sbbb
adc
push
in
lret
add
stos
ret
add
stc
inc
or
and
adc
test
sub
adc
orl
xor
inc
test
xor
in
lock
mov
loopne
fsubr
leave
or
sbb
out
out
enter
xor
mov
add
dec
sub
in
push
scas
cwtl
mov
hlt
ret
test
add
push
xchg
jo
sbbl
ret
sti
call
pop
in
pop
pushf
repnz
dec
lods
sbb
ret
lea
or
and
test
jl
outsl
or
pushf
dec
shrb
jo
shll
push
dec
outsb
pop
lds
leave
leave
and
nop
and
dec
jb
mov
adc
xchg
mov
cmp
inc
mov
int3
enter
xor
mov
or
fwait
cmpl
inc
call
dec
jo
imul
je
mov
sub
xchg
popa
pop
mov
in
inc
dec
push
subb
in
mov
nop
or
xor
inc
xor
enter
out
and
adc
mov
nop
inc
mov
sbb
jge
add
lds
aam
in
loopne
add
inc
mov
inc
xchg
or
sub
sbb
aam
cmp
adc
fmuls
fs
pop
xchg
inc
jg
adcb
xchg
nop
adc
std
xchg
jg
mov
sbb
setge
stc
adc
mov
mov
fistpl
enter
and
xchg
sub
fcoms
push
push
and
push
cmp
enter
stos
xchg
shr
add
loope
lds
enter
inc
pop
gs
add
xor
leave
or
add
adc
lods
gs
sbb
push
adc
dec
xor
adc
mov
push
or
subb
and
repnz
les
out
xor
add
mov
and
mov
mov
jno
mov
lret
pop
aas
shlb
in
or
int3
lret
mov
mov
mov
int3
sbb
and
xlat
seto
test
sub
inc
or
cmpb
mov
enter
les
and
mov
fwait
mov
dec
jne
push
mov
ss
call
or
enter
iret
jne
cmpsl
push
leave
nop
lea
push
enter
inc
fimull
dec
rol
es
mov
mov
adc
mov
test
fs
loopne
call
sbb
rcl
sub
and
rolb
push
in
mov
sub
bound
mov
shr
inc
fdivl
and
mov
sbb
rcl
in
rorl
adc
xchg
dec
cmp
and
dec
fwait
fs
sbbl
pop
insl
adcb
cld
fistpl
push
jno
sbb
mov
xchg
dec
mov
inc
push
xor
fsub
adc
and
xchg
sub
or
insb
sbb
cmp
imul
les
lds
jecxz
loopne
pop
jl
cwtl
rorl
jne
int3
cltd
cmp
fiaddl
sbbb
xor
adc
arpl
add
inc
adc
fcoml
mov
cs
xchg
cmpsl
test
movsl
and
xlat
fstpt
fldt
bound
and
push
push
add
movsl
mov
mov
fcomps
add
xchg
les
int3
adc
inc
push
sub
int3
xchg
sbb
dec
xor
mov
jb
in
imul
in
pop
sbb
fcmovne
or
sub
mov
test
fcomps
and
pop
ret
ret
sbb
call
mov
push
cltd
sbb
outsb
test
fldenv
sbb
repnz
ret
add
xor
test
and
add
lods
iret
addb
cmpsb
push
mov
fiaddl
inc
cmpsb
loop
insl
mov
push
cmp
xchg
enter
ficompl
cmp
stos
push
pop
leave
in
popf
test
ffree
test
cmpsl
sbb
jmp
or
pop
sub
pop
inc
adc
addl
push
sub
clc
mov
lea
sub
test
add
cld
in
mov
ja
cltd
movl
lock
add
or
aam
inc
or
mov
repnz
ret
or
sub
fnstsw
movsl
jne
repz
sbb
xchg
push
std
cmp
cmp
jmp
loope
xchg
movsb
dec
cwtl
mov
pushf
test
fnsetpm(287
xor
adc
rorl
xchg
shrl
dec
int
imul
mov
fisubl
adc
shlb
scas
pusha
sub
mov
pop
adc
cmpsb
mov
add
je
and
lea
fadds
push
icebp
dec
adc
inc
pop
insl
cmpsb
inc
movsb
int3
aad
dec
cmp
nop
cld
test
adc
jb
stc
inc
loopne
mov
xor
mov
andb
popl
in
shlb
into
adc
inc
movsl
pop
ljmp
fdivs
push
repnz
cmp
fcoms
ds
sarb
cmp
inc
and
mov
das
or
sub
arpl
xor
rolb
out
mov
loopne
push
sub
or
out
push
pop
inc
dec
lret
out
mov
pusha
or
jl
in
mov
test
loope
data16
sub
in
xchg
mov
or
gs
ret
mov
sbb
mov
push
mov
jmp
in
adc
rolb
daa
dec
mov
ja
and
aas
inc
shl
push
movsb
xchg
pop
mov
outsl
pop
push
cmp
ss
pop
andb
jmp
jns
pop
adc
and
fs
jl
pop
sbb
outsb
cld
sarl
add
out
adc
jle
add
cmp
sub
sub
lcall
pop
jae
add
lds
test
loope
jne
out
adc
aas
jns
aaa
mov
sbb
shr
inc
push
pop
push
sbb
test
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
pop
enter
add
and
outsl
jnp
or
adc
out
leave
ljmp
cmpb
cmp
or
or
fs
pusha
pop
ljmp
cmp
mov
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
fldl
push
lcall
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
incl
pushl
sub
daa
adc
mov
rcll
xchg
adc
xchg
stc
lcall
or
cmp
rclb
cmpl
lcall
lods
les
cmp
out
fisttps
pop
dec
outsb
je
popf
jge
pushl
outsl
arpl
fs
out
sbb
push
dec
imul
xorl
jae
cmp
jb
gs
xor
cs
out
ret
fs
adc
popa
and
popa
je
outsl
outsb
push
mov
mov
mov
pop
lock
psubusb
adc
add
pop
sub
sub
call
inc
outsl
jb
js
je
fbstp
gs
cmp
or
outsl
add
add
clc
sbb
sbb
add
push
gs
push
or
xor
popa
mov
popa
jb
mov
cmp
dec
push
outsb
dec
xor
xor
ja
mov
cmp
cmp
imul
sahf
dec
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
loopne
in
into
and
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
mov
inc
jo
imul
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
scas
clc
sbb
dec
xor
jne
dec
js
push
jne
jae
cmp
ja
pop
dec
inc
mov
popa
das
jo
or
jb
inc
adc
xor
test
or
dec
push
push
mov
and
pop
mov
mov
das
dec
jno
inc
and
dec
ljmp
sub
sub
loope
aad
lret
inc
das
pop
pop
aas
inc
aad
aam
cmp
jge
jg
xor
arpl
test
sbb
dec
and
push
pop
or
loop
xor
add
sahf
inc
insb
jae
cs
cmpsl
dec
mov
pop
inc
inc
mov
int
add
xor
insl
and
in
pop
fwait
add
jbe
dec
push
push
sbb
fucomp
dec
dec
inc
sbb
and
scas
fimull
add
xor
sbb
push
jo
imul
and
mov
je,pn
mov
xchg
notb
pop
fdiv
mov
and
fs
and
scas
mov
xor
or
xorb
inc
popa
and
cltd
insl
xlat
mov
sbb
xor
and
fidivs
push
xchg
data16
xor
add
dec
mov
lcall
imul
dec
mov
and
or
movsl
mov
popa
add
or
jmp
and
xchg
flds
adcl
and
add
or
push
ds
fidivl
xchg
xor
push
pop
xchg
sarb
movsb
adc
and
das
arpl
push
shll
push
arpl
ss
xor
push
negb
xchg
insb
imul
out
xor
int3
or
sbb
or
push
lcall
mov
add
sbb
mull
loopne
dec
jns
push
fistps
push
mov
xor
mov
cmp
sbb
hlt
pop
dec
cltd
xor
add
mov
ja
outsl
in
fisubrl
jae
roll
jne
jbe
add
inc
inc
xchg
push
pop
ficoml
sarb
ljmp
or
lds
xor
out
inc
jle
inc
not
outsl
push
or
arpl
cmp
outsl
lcall
mov
insl
pop
mov
in
ljmp
lds
das
imul
pop
or
aas
into
xorl
arpl
add
jbe
cltd
xchg
fnstsw
adc
or
in
insb
popa
and
xor
and
adc
popf
or
pop
push
cmp
pop
subb
jne
jae
xor
pop
popf
mov
jo
roll
outsb
add
test
ret
shrb
jo
aas
fsubrs
push
imul
dec
mov
jne
jmp
jo
and
mov
inc
imul
inc
and
push
dec
cmp
fisubl
jg
lcall
loopne
mov
sahf
pop
add
ror
psubq
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
adc
cmpsb
gs
popa
dec
adc
xor
jg
iret
mov
ja
inc
jae
je
pop
dec
inc
and
pop
add
add
xchg
leave
icebp
jne
sub
xor
rolb
add
adc
add
add
add
add
ljmp
add
and
push
pop
pop
or
aaa
ds
pop
jns
push
push
pop
hlt
and
or
pusha
add
ja
js
or
sub
add
jnp
pushl
mov
addl
int
lods
cmp
and
adcb
pop
daa
fnstenv
jle
push
push
and
sub
in
popf
jb
int3
push
jo
add
dec
cld
cmpl
loopne
push
stos
int
mov
jo
pushl
fdivrl
sbb
repnz
lea
mov
nop
xchg
xchg
fiadds
mulb
popf
jmp
and
or
test
sahf
pop
pop
pop
add
dec
cmp
adc
cs
cmp
test
pop
data16
test
je
nop
mov
orb
test
rcrl
cmpl
mov
push
adc
xor
aaa
and
sub
jb
jl
dec
add
test
push
adc
adcb
mov
enter
add
add
push
add
add
or
add
pop
adc
mov
roll
adc
and
add
lods
and
out
and
ljmp
add
test
mov
xchg
xchg
xchg
xchg
call
fwait
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
sar
div
clc
stc
cli
sti
cld
std
inc
orb
add
ljmp
push
add
aas
decl
int
mov
mov
movsb
inc
cs
jae
jb
je
sub
bound
dec
stos
inc
xor
ss
popa
mov
repnz
sub
mov
pop
lea
dec
mov
sti
addr16
outsl
js
push
push
inc
push
mov
dec
fimull
sahf
insb
gs
mov
outsb
jnp
and
daa
add
insb
fidivrs
pop
in
dec
imul
mov
imul
ds
and
inc
jb
or
daa
pop
enter
jnp
mov
mov
cmp
aad
lcall
addr16
cmp
outsb
add
mov
mov
mov
push
mov
mov
push
push
sbbl
jns
and
cmpsb
dec
movsb
or
xchg
or
or
arpl
pusha
gs
xchg
pop
mov
push
sbb
dec
dec
lahf
or
movsb
sbb
cwtl
xchg
in
jno
pop
pop
pop
push
push
jae
fisubrl
jp
aas
cmp
outsb
and
jae
addr16
cmpl
gs
mov
lea
xchg
mov
push
push
push
dec
testl
jae
add
dec
mov
popa
mov
cmp
adc
dec
jge
adc
test
or
jae
call
stos
pandn
or
test
fs
enter
xor
inc
shlb
pop
sub
stos
outsb
bound
pusha
push
or
stos
pop
xor
outsl
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
mov
sahf
jl
pop
jle
sub
ds
jbe
sub
sub
push
mov
aas
div
and
stc
and
add
jb
ja
dec
pop
pop
nop
push
sbb
xor
jo
ss
mov
push
cmp
test
sbb
mov
inc
jo
sub
mov
jl
xchg
sub
or
inc
or
hlt
add
jns
out
les
movsb
push
adc
inc
add
sti
in
fistpll
les
jo
push
nop
xchg
idivl
mov
mov
out
push
insb
xor
push
sarl
pop
fsubrs
push
pusha
push
adc
jl
mov
jbe
das
pop
or
out
int
push
push
push
mov
dec
xchg
out
sahf
inc
inc
cmp
xor
jns
repnz
sub
and
out
out
add
hlt
incl
out
sahf
out
pushf
jl
cmp
sahf
ja
sbb
incb
mov
sahf
out
inc
inc
cmp
iret
repz
add
std
lock
movsb
ds
repz
push
sub
in
jns
out
rcrb
ret
cmpsl
pop
aam
pop
xor
jno
inc
shlb
jns
cmp
jns
xor
shrl
cbtw
cmpsl
pop
push
loope
scas
bound
fs
sbb
jae
jb
xor
mov
shrd
sub
add
sarb
insb
or
ss
inc
inc
dec
jae
sub
fnsave
mov
sbb
lcall
push
inc
dec
xor
inc
dec
dec
dec
push
push
sbb
sti
sbb
xor
push
dec
inc
dec
add
dec
dec
inc
add
pushl
das
adc
sub
adc
stc
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
and
pushl
pop
arpl
cmp
adc
dec
scas
jp
mov
jno
in
fstl
mov
and
cmp
xchg
cmp
dec
imul
lret
add
inc
mov
fcos
or
push
test
sub
fwait
ss
sbb
jmp
std
sbbl
xor
incb
int3
dec
dec
xor
dec
clc
lcall
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jmp
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
add
mov
xchg
push
pop
popa
push
or
scas
int
mov
pop
test
loop
mov
xchg
dec
xchg
scas
lods
jg
jg
rclb
mov
iret
adc
in
pushf
fdivr
icebp
pop
pop
repnz
cli
iret
mulb
and
es
sbb
push
jg
cs
mov
outsb
jbe
and
mov
das
inc
mov
push
gs
jae
mov
inc
sbb
idivl
sub
call
mov
inc
adc
aas
add
dec
push
or
add
mov
aaa
add
push
sbb
ss
adc
sub
lods
cltd
ljmp
adc
xor
imul
xlat
jb
jbe
dec
xor
aaa
or
aaa
sub
mov
inc
add
sbb
pop
or
ss
loope
fidivrs
or
push
pop
dec
sbb
pop
aas
aas
pop
pop
push
push
fstp
or
lods
sub
pop
dec
dec
sti
fistpll
sub
cld
sub
and
add
daa
js
cmp
pop
pop
xor
out
add
push
mov
decl
dec
pop
push
dec
inc
xor
or
daa
inc
pop
pop
pop
xor
or
pop
or
pop
inc
and
pop
cs
jge
sbb
add
pusha
add
dec
cmp
fildll
and
mov
pop
aad
push
pop
dec
pop
xor
add
and
sub
push
dec
and
or
sub
aaa
pop
or
sbb
pop
cmp
dec
dec
sub
pop
ds
adc
sahf
jge
inc
sbb
adc
sbb
mov
aas
dec
push
inc
cmp
je
push
pop
cmovnp
or
int3
xor
xor
popa
pop
outsl
add
jle
xor
mov
sub
js
push
adc
and
test
jb
push
mov
out
mov
pop
cmp
es
jg
inc
call
push
gs
push
xchg
adc
pop
push
cmp
xor
mov
push
pop
add
or
adc
cmp
adc
jl
pop
in
sub
inc
sub
fbld
imulb
and
or
cld
ret
add
aas
xor
movsl
sub
sar
or
fs
adc
dec
cwtl
in
push
cmp
sahf
idivl
jns
jge
xchg
xchg
cltd
mov
out
into
jmp
push
into
outsb
jg
push
sti
movaps
jnp
cmpsl
sbb
adc
mov
ds
pop
testl
ss
aaa
sub
int3
hlt
adc
sub
jp
cmp
outsl
insl
xor
and
outsb
mov
or
push
enter
pop
data16
mov
call
adc
bound
xor
and
push
or
hlt
cmp
repz
xchg
ds
ds
xchg
cs
loopne
sti
aas
aas
inc
jns
out
push
push
pop
jne
mov
cmp
inc
cli
xchg
push
enter
sub
jle
add
icebp
roll
cmp
add
mov
inc
sub
cs
add
xlat
or
cmp
add
pop
lods
ret
add
adc
js
inc
popf
stos
ret
aad
or
mov
adc
adc
xor
pop
nop
sub
jmp
mov
cmc
sahf
or
push
cmp
xor
push
pop
cmpsb
sub
sub
fcoms
aas
mov
dec
arpl
cmp
or
sbb
movsb
aas
int3
push
sbb
jno
or
sbb
mov
pop
and
push
fbstp
fld
lods
sub
add
sub
or
or
inc
ss
cmp
pop
or
cmp
ja
mov
aaa
xor
sub
mov
out
pop
ja
push
fstl
ss
jnp
push
cmp
xor
out
pop
jge
fsub
aaa
sub
jecxz
adc
mov
scas
jge
fs
or
hlt
outsb
scas
add
xchg
dec
pop
and
add
pop
xor
push
pop
sarb
loope
ret
jl
cmp
or
mov
das
pusha
sub
dec
adc
and
das
push
inc
add
cmp
push
cmp
rol
push
daa
das
xchg
cs
pushf
add
inc
xor
and
jmp
sub
sub
in
mov
ss
pop
ret
inc
cwtl
and
stos
adc
fsubrl
sub
rcll
out
insl
sbb
and
push
mov
scas
add
or
add
mov
inc
outsl
cmp
sub
mov
or
sbb
mov
xchg
popa
or
mov
inc
stc
jnp
push
inc
or
ss
adc
xor
cmp
or
sub
xor
imul
jnp
ret
adc
push
sbb
jle
mov
sub
push
adc
add
out
iret
daa
inc
cs
in
or
sbb
jge
jno
lods
cmp
and
fcomip
cmpb
mov
ret
xchg
out
inc
cmp
sbb
pop
and
cmp
dec
cli
pop
lcall
xor
sar
lods
loopne
sub
dec
aas
add
cmp
mov
adc
aas
dec
jo
xchg
push
lahf
and
xor
into
xchg
scas
xor
addl
dec
sub
mov
orl
repnz
inc
aad
adc
lret
and
dec
cmp
int
idivl
outsb
lcall
xor
xor
bound
inc
ret
inc
inc
add
cmp
inc
jnp
add
xor
xchg
jbe
daa
test
das
or
mov
into
stos
sub
push
cmp
sub
sub
sub
pop
or
jb
push
or
add
jae
stc
push
xor
mov
into
xor
sub
cmp
adc
insb
push
daa
sub
inc
imul
adc
decb
sbb
push
sub
sbb
std
lock
and
sub
adc
or
or
sbb
cmp
fldl
and
sbb
dec
outsb
or
push
fstpt
sub
hlt
ja
js
sub
sahf
test
mov
repz
and
ljmp
add
popa
imul
cmp
push
push
pop
jnp,pt
jp
outsl
jo
outsb
data16
push
ja
xchg
fwait
mov
or
adc
iret
pop
jecxz
push
aam
outsb
cs
add
iret
repz
les
mov
pop
mov
add
call
cmp
adc
ja
mov
mov
mov
fimuls
adc
sub
test
mov
pop
dec
and
push
inc
pop
add
mov
inc
adc
mov
sbb
mov
pop
dec
and
inc
pop
sub
xor
repz
inc
sub
cmp
push
in
es
xor
inc
inc
fs
dec
pop
or
ja
push
pop
sub
mov
js
mov
pop
inc
xor
rclb
push
ret
push
push
sub
sbb
mov
pop
ss
hlt
ret
xchg
sub
xor
push
popa
ret
push
test
inc
pop
data16
xor
je
rol
push
dec
lret
aad
stos
add
adc
outsb
ljmp
add
sub
sub
sbb
push
enter
lahf
jl
sbb
pop
push
or
fsubs
pop
pop
mov
fwait
cs
adc
or
mov
pop
sti
es
outsl
jle
outsb
std
jb
bound
popw
push
mov
je
and
jae
popa
test
mov
xchg
pop
je
in
and
xchg
daa
call
das
and
xor
js
add
in
xchg
or
dec
ja
push
lods
aaa
popa
push
lods
imul
sub
fimull
push
adc
decl
push
push
das
xor
xor
dec
cmp
enter
stc
pop
imulb
pop
sbb
sub
pusha
adcb
mull
js
inc
addr16
neg
mov
and
dec
popa
das
cmp
xor
adc
jbe
push
push
or
andl
adc
jb
add
cmp
imul
mov
mov
fsts
sahf
daa
xchg
icebp
and
mov
xchg
pop
pop
inc
add
kmovb
xor
mov
cmpsb
mov
or
and
cmp
or
adc
inc
sub
les
adc
das
adc
adc
hlt
or
cmp
test
or
xor
inc
sub
xorb
mov
adc
xor
xchg
xor
pop
adc
adc
leave
movsb
int
int3
dec
jle
push
mov
into
adc
xor
jp
add
mov
or
mov
or
into
leave
fimull
ret
and
push
ljmp
cmp
inc
dec
dec
dec
xchg
add
adc
test
dec
scas
aas
mov
or
pop
repnz
out
in
add
iret
inc
push
pop
dec
pop
or
sub
rclb
stos
inc
xchg
inc
or
ljmp
pop
add
adc
jns
hlt
jne
cmp
loope
cwtl
mov
or
stos
pop
movsb
imul
sub
in
lock
addr16
testb
daa
test
mov
fnstcw
pop
ds
das
xor
adc
or
das
add
andb
test
xor
pop
jne
fisubs
in
add
sub
xor
repnz
into
aaa
sub
push
add
dec
or
ljmp
movsb
push
lock
cmp
sub
loopne
and
mov
cmp
stos
loop
jecxz
jecxz
xchg
cmpsl
scas
in
stos
out
rclb
call
daa
out
insb
pop
rol
loopne
daa
daa
adc
sub
push
jo
and
mov
pushf
jmp
mov
adc
clc
adc
adc
sbb
sub
xchg
pop
adc
bound
rorb
dec
push
adc
xlat
mov
dec
outsb
fwait
sub
jmp
ds
ja
test
cmp
sub
jnp
pop
adc
or
sbb
xlat
sbb
rcl
sbb
ja
rolb
loope
inc
cmp
jbe
sbb
sub
sub
and
rcrl
sbb
push
and
xchg
insb
sbb
cmpsl
call
mov
paddsb
jns
pop
in
and
inc
daa
pop
mov
mov
aaa
mov
rorl
stos
jno
sub
fdivrl
cwtl
sbb
loope
ficompl
sub
mov
adc
inc
mov
lods
inc
add
iret
bound
pop
push
add
jnp
jp
sub
push
bound
mov
aad
pushf
sbb
das
dec
xchg
push
adc
call
andl
scas
fldt
push
push
push
pop
mov
and
jle
ss
int3
inc
xchg
sub
sub
inc
sub
or
add
cld
pop
outsb
mov
or
jo
aas
inc
outsl
mov
or
subb
jno
pop
lret
sti
negl
inc
inc
jge
pop
or
cmp
dec
push
sub
push
and
out
mov
sub
cs
dec
and
pop
das
push
xor
cs
push
subb
cs
sub
pop
inc
inc
cs
and
daa
loope
xor
add
xchg
pop
push
scas
fistps
outsl
pop
pop
call
sahf
mov
push
ficomps
jg
add
lcall
pop
lods
pop
fdivrs
and
push
cli
jge
xor
xor
and
sub
add
insl
and
and
mov
adc
adcl
dec
cmp
sub
into
imul
insl
cmp
or
es
shll
ret
add
in
cmp
pushf
jb
pop
ja
sbb
outsl
jnp
in
and
inc
mov
xor
testb
xor
mov
movsl
ss
das
add
adc
popf
sbb
jno
or
and
jno
and
fisubrl
insl
inc
xor
jmp
fwait
jno
mov
dec
divb
rcrl
inc
push
cmpsb
in
adcl
in
test
fsubrp
add
adc
insl
enter
outsb
les
mov
add
aaa
subl
sub
lock
xchg
sub
sub
outsl
shrb
pop
mov
sbb
dec
lods
incl
rcrl
test
pop
push
dec
or
pop
daa
les
sub
ss
enter
addb
dec
scas
mov
js
aas
mov
cmp
and
adc
sbb
aas
sub
cmp
gs
pop
daa
roll
push
or
sub
aas
xor
and
or
push
cmp
push
mov
gs
and
push
and
sbb
outsl
pop
dec
pusha
rcrl
or
mov
pop
pop
xchg
fwait
dec
add
mov
adc
dec
stos
ss
mov
aam
in
jp
aaa
imul
sub
out
sbb
and
adc
pop
push
xor
dec
mov
adc
sub
pop
xor
and
lods
push
insb
push
shrb
sub
and
push
icebp
mov
mov
cmp
or
add
ljmp
mov
je
jo
insb
gs
jp
dec
mov
fs
mov
pop
loope
ret
mov
das
sub
xchg
jb
xor
sbb
imul
xchg
mov
add
iret
cmp
inc
data16
sbb
dec
xor
dec
cwtl
dec
cmpsl
stc
cmp
inc
push
int
cmp
int
repz
insb
push
pop
push
mov
push
imul
sbb
out
add
loop
test
push
dec
dec
fisttpll
ljmp
jbe
getsec
shlb
mov
mov
lcall
push
and
mov
add
adc
mov
mov
lods
pop
jg
das
cli
dec
movsl
enter
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jg
xor
mov
dec
fsubs
sbb
jg
pop
test
xor
dec
xchg
pop
shl
dec
push
pop
cmp
pop
add
pop
adc
adc
pop
push
and
xor
aaa
xor
cmp
imul
jle
adcb
sub
push
fadds
inc
pop
push
aam
jb
mov
insl
and
outsl
leave
leave
sbb
push
dec
imul
mov
sub
mov
adc
jo
pushf
xor
lock
loopne
daa
iret
leave
jae
cmp
inc
mov
xchg
pushf
cmp
mov
lock
addb
inc
js
aaa
lret
cmp
pop
add
mov
dec
pop
int3
loop
push
or
clc
pop
test
push
dec
lcall
inc
pop
jnp
cmp
xor
sub
adc
inc
sbb
sub
xor
inc
push
xor
ret
popa
add
jne
push
adc
add
add
sub
out
sub
pop
lret
dec
dec
jp
jne
dec
test
push
jb
jo
inc
ret
bound
je
bound
mov
js
ficoml
pop
add
and
sub
shlb
js
mov
insb
adc
mov
das
sub
inc
pop
out
push
cmp
pushf
es
xor
subl
adcl
aaa
fisubrl
loopne
iret
shll
or
xchg
xor
ljmp
or
xor
xor
add
aaa
add
loope
ja
cld
sbb
or
lret
mov
sub
inc
push
add
pop
jnp
or
sbb
inc
adc
dec
add
sub
or
cli
xor
lock
daa
add
cltd
xchg
or
mov
adc
mov
stc
adc
or
js
jg
in
das
loopne
dec
pop
pop
ss
mov
mov
pop
add
dec
mov
jns
inc
pushf
out
add
ss
pop
addr16
iret
fimull
rolb
adc
xor
push
iret
pop
sbb
ret
nop
idivb
cmpsb
inc
outsl
mov
das
pop
data16
rep
nop
mov
test
jns
cmp
mov
push
scas
popf
push
dec
mov
dec
repnz
shlb
imul
lcall
jl
loope,pt
mov
fwait
in
repz
ret
addr16
es
bound
mov
add
lods
add
push
popa
mov
ja
pop
repnz
cli
push
pop
outsb
daa
aaa
dec
into
js,pt
pop
movsb
popa
scas
or
mov
cmpsl
and
pusha
insb
lahf
xlat
insb
dec
dec
mov
leave
push
xchg
lret
push
fcoms
xor
jnp
enter
push
arpl
cs
push
sub
int
repz
cmp
jns
jp
in
jnp
cmpsl
stc
sbb
cmp
mov
and
popa
into
pop
lea
sahf
aaa
sti
mov
push
mov
popf
mov
and
push
in
jns
repz
xor
push
inc
mull
out
stc
pusha
mov
push
nop
push
jns
mov
idivb
mov
push
insl
das
jb
mov
or
sahf
pxor
out
fsts
xchg
popf
ret
out
dec
lret
nop
xlat
je
cmp
iret
mov
ljmp
dec
cmpsl
mov
lods
mov
mov
out
mov
sbb
pop
push
jno
cmp
jns
mov
in
pop
out
out
out
sbb
inc
lds
adc
jg
clc
xor
dec
ds
repz
mov
ds
push
popa
subb
idivl
cmp
mov
stc
cmp
mov
sti
adc
movb
jne
mov
cmpsl
stc
cmp
add
sahf
out
jl
mov
add
adc
jns
out
inc
addr16
mov
xor
out
negb
mov
test
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
adc
pop
pop
mov
and
push
mov
push
ljmp
test
mov
bound
push
and
pop
sbb
enter
adc
repz
inc
repnz
iret
pusha
or
or
mov
pop
enter
dec
andb
adc
xlat
test
fisubrl
push
jae
ss
dec
out
aas
inc
push
aaa
pop
sub
inc
sti
add
push
or
aaa
ss
sub
mov
aas
push
dec
fisubl
mov
add
jae
pop
mov
fimuls
dec
lcall
je
push
ljmp
cmpsb
dec
add
push
cs
imul
cmpsb
push
insb
pop
push
dec
jo
pop
cmc
pop
je
jns
push
adc
neg
or
das
push
pop
jecxz
fdivp
xchg
outsb
addr16
rcrb
iret
push
pop
retw
test
flds
mov
ja
movsb
push
adc
push
cmp
in
adc
jl
push
nop
cmp
or
ds
iret
das
adc
mov
popa
insl
jo
es
insb
je
push
mov
popa
jo
jae
es
outsl
and
dec
cmpb
sub
mov
push
cmpsb
mov
mov
out
mov
xor
xor
xor
xor
cmp
cmp
imul
xor
cmp
push
add
push
sub
gs
and
push
or
or
sti
mov
or
push
push
sub
bound
add
mov
cmp
jo
lret
add
mov
cld
xor
das
daa
sub
cmc
or
mov
adc
fwait
cmpsl
lds
or
inc
dec
xchg
jp
mov
das
xor
push
sub
aaa
xorb
aam
aas
adc
mov
adc
add
jmp
inc
pop
ss
xor
and
adc
xor
sbb
xor
fwait
inc
push
push
dec
cmp
jle
out
sbb
jg
push
pop
les
sub
xor
pop
push
bound
xor
data16
in
insl
repnz
pop
jnp
rcll
dec
mov
ret
pop
push
and
aaa
xor
mov
dec
adc
adc
dec
ret
or
jae
movsl
nop
jg
ss
pushf
icebp
icebp
inc
inc
add
cs
push
testl
or
push
das
cmp
sbb
insb
or
les
xor
das
sub
sub
daa
xor
adc
pop
xor
jns
add
mov
lods
xchg
cmp
add
fldcw
lea
add
add
dec
loop
xchg
xchg
daa
inc
lods
jbe
cmp
jo
sahf
aaa
inc
xchg
aaa
mov
push
mov
addr16
aaa
add
rcr
lahf
cmpsb
fisubl
xor
aaa
fidivl
mov
stos
mov
loop
pop
add
daa
test
fisubrl
mov
lods
ss
divl
dec
jl
mov
outsb
and
xchg
pop
ret
dec
insl
adc
push
insb
mov
mov
xchg
mov
sbb
xor
cmpsl
pop
and
and
push
adc
cmp
ja
loop
adcl
add
pop
or
mov
scas
pop
cltd
daa
lahf
add
xchg
outsb
mov
sub
int
or
lods
pop
addr16
ds
pop
jg
hlt
inc
jecxz
add
push
in
jmp
and
out
and
mov
inc
imul
add
outsl
lret
out
mov
inc
dec
mov
sub
mov
adc
ds
inc
pusha
js
jl
jl
movq
clc
or
or
push
jg
iret
and
mov
aad
sub
cltd
out
and
pop
sub
xor
cmpsl
xchg
daa
adc
insb
pop
or
fs
xor
add
mov
xchg
stc
dec
adc
jnp
push
sbb
or
inc
pop
es
pop
cmp
mov
fs
cmp
pushf
daa
cwtl
subb
test
push
stc
pop
sub
push
sbb
ret
push
mov
inc
xor
lcall
adc
add
fimuls
outsb
mov
and
es
or
add
jno
lea
xchg
inc
adc
cmp
push
fwait
cmp
aas
cmp
fstpl
push
bound
in
rorl
add
daa
dec
test
pop
sub
sub
push
test
inc
sub
ffreep
xchg
or
fbstp
sbb
pop
or
push
xor
sub
daa
inc
mov
adc
shlb
or
sbb
das
daa
cmp
dec
inc
aaa
and
loopne
call
mov
sbb
call
data16
add
aaa
les
add
es
jbe
fiaddl
mov
je
cmp
clc
add
fildl
das
push
aas
xor
push
fists
in
and
data16
das
push
movsb
lods
pushf
push
lods
frstor
dec
xor
add
dec
pusha
arpl
dec
jnp
xor
xor
mov
movsb
ss
dec
adc
rorb
sbb
popa
xor
xor
loop
push
dec
ror
push
mov
xor
add
xchg
sub
lods
xor
xorl
icebp
fldl
pop
or
popf
fst
fmull
data16
sub
xor
pop
fsubrs
xor
fcompl
loopne
xor
mov
inc
aas
mov
mov
test
add
xor
inc
and
jp
push
and
cmp
pop
lret
sbb
cmp
js
loope
push
mov
les
xor
push
cmpb
fdivl
jno
lahf
add
adc
pop
icebp
inc
xor
push
mov
mov
pop
cmp
insl
cmpsl
inc
daa
push
adc
mov
pop
mov
and
inc
ss
nop
out
imul
push
pop
jb
or
test
inc
sub
push
out
es
xchg
out
and
push
pop
cmp
repz
and
cmp
repz
andl
sahf
out
add
or
xchg
fwait
int
xor
add
outsl
mov
insb
pop
or
lock
fwait
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
insb
shlb
add
test
sub
ss
int
add
or
adc
int
shll
pop
add
add
push
dec
str
add
stc
das
inc
jae
ret
pop
arpl
adc
pop
pop
cs
and
fidivrs
push
das
adc
lds
scas
xor
inc
xor
inc
dec
sub
pop
jmp
movsl
cmp
jo
push
out
test
jo
jl
jbe
fs
inc
das
xchg
jo
xor
xor
add
mov
and
inc
repnz
sti
jl
add
pop
adc
lock
pop
sbb
add
pop
add
outsl
popf
or
push
pop
adc
push
xor
adc
or
pop
aas
xor
cmp
aas
or
aas
sub
pop
sub
push
pop
ss
cs
or
cmp
push
or
sub
push
pop
cmp
inc
or
or
dec
pop
sbb
pop
cmp
cmp
shll
hlt
sbb
push
cmp
incl
sub
pop
push
pop
das
sub
fnstcw
sti
sub
push
cmp
push
cmp
sbb
push
xchg
pushl
mov
dec
push
daa
sbb
and
dec
inc
dec
sbb
xor
or
push
push
pop
call
aas
inc
ss
cmp
inc
add
pop
push
or
inc
mov
cmp
or
and
or
mov
idiv
int3
orb
loope
cmp
and
add
push
pop
or
dec
mov
xor
incl
and
add
add
sbb
adc
jbe
add
cmc
push
mov
sub
inc
sbb
ss
push
jbe
mov
xadd
ds
and
loope
xchg
dec
push
dec
mov
pop
mov
xchg
push
push
dec
dec
add
inc
rolb
sarb
rol
pop
cmp
mov
add
or
cs
ljmp
inc
jb
add
push
push
and
cmp
inc
fists
inc
push
dec
inc
rorb
pop
mov
pop
add
mov
inc
sub
mov
incl
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
jmp
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
jg
test
mov
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
pushl
mov
data16
mov
call
cltd
test
mov
adc
shll
ja
daa
mov
mov
mov
cmp
fmuls
jg
dec
pushf
pop
rep
cs
arpl
test
add
mov
mov
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
decl
sbbl
int
pop
jb
dec
js
es
xor
jns
dec
jge
daa
and
ljmp
push
cmp
sub
jno
cmp
or
pop
add
jmp
jl
inc
outsl
pop
outsb
popa
dec
jbe
dec
and
je
inc
sub
dec
insb
xor
imul
mov
ljmp
pop
das
and
cmp
jo
sub
push
into
or
mov
add
pop
and
cmp
daa
or
sbbl
sub
stc
xchg
nop
inc
lods
aas
or
ja
fcoms
xchg
lcall
fstpl
daa
pop
daa
inc
xor
popa
pop
frstor
xor
sub
push
adc
sarb
cmp
ss
lret
out
mov
push
inc
add
xor
xor
cs
cmp
inc
add
xlat
popf
orb
inc
inc
xor
and
aaa
inc
push
inc
scas
flds
outsb
inc
ss
paddq
fisubrl
pop
pop
cmpsl
ss
aaa
shlb
mov
add
pop
sub
add
imul
xor
jb
mov
cmp
cld
scas
bound
pushf
cmp
xor
push
jb
and
add
lahf
out
les
mov
mov
jns
add
push
iret
rclb
aaa
xchg
loop
loopne
dec
data16
xor
sub
or
cmp
cmpsb
js
jl
adc
mov
xchg
rclb
roll
push
mov
sub
aaa
adc
js
mov
in
adc
adc
mov
xor
jb
jbe
pop
addr16
cmpsl
outsl
fcmovb
push
call
cmp
inc
adc
sbb
fiaddl
inc
mov
or
mov
push
sbb
mov
mov
inc
cltd
add
mov
mov
gs
add
pop
rorb
mov
and
sbb
pop
cmp
hlt
popa
or
inc
inc
sbbb
pop
pushf
outsb
lret
rcll
jge
adc
and
loop
inc
adc
adc
xchg
push
popf
call
aaa
cmp
xchg
adc
mov
or
sahf
mov
pop
and
jle
cmp
scas
adc
cmp
xor
or
scas
popa
loopne
dec
scas
inc
shll
jbe
push
icebp
adc
and
outsl
decl
orl
dec
int3
mov
enter
xchg
adc
or
adc
xor
mov
sub
add
jbe
daa
bound
outsb
je
xor
and
or
js
xor
jae
popa
insl
sub
cmp
pop
mov
add
and
dec
pop
xchg
aad
mov
and
pushl
insl
loop
pop
push
adc
out
decb
data16
inc
outsl
insb
dec
push
popa
je
sbb
or
xchg
insl
fmulp
mov
push
push
push
inc
cmp
adc
idivb
sub
and
or
push
gs
xchg
sbbb
and
jmp
pop
add
push
sbb
aaa
push
lcall
push
xor
lods
pop
movsl
xchg
push
adc
add
push
mov
ss
hlt
and
add
adc
fs
inc
cmp
sarl
fmull
inc
pusha
push
push
dec
add
dec
jecxz
jecxz
mov
rcrl
mov
lods
sbb
cmp
shrl
xor
pop
sbb
adc
mov
push
rclb
and
or
adcl
push
xor
push
dec
adc
dec
dec
or
pop
push
ja
pop
les
call
pop
fisttpll
inc
lock
inc
jne
dec
xor
xor
and
dec
and
inc
fucomi
add
push
sbb
push
or
fiaddl
test
sub
test
ficoms
cmp
mov
push
and
pop
test
fcmovnb
adc
and
pop
inc
pop
jbe
out
pop
sub
adc
adc
bound
daa
sbb
dec
fs
jo
mov
xor
lahf
or
push
ret
inc
loope
stos
push
outsl
imul
mov
sub
iret
movsl
add
std
pop
pop
push
lgs
pop
and
movsb
pop
cmp
das
aas
mov
or
xor
sub
push
lea
scas
xor
arpl
sub
dec
popa
sbbl
ja
mov
adc
shrl
cmp
inc
push
shrb
pop
arpl
add
or
inc
xor
movsl
push
dec
hlt
sub
pop
data16
xor
lds
jb
inc
outsl
sbb
ja
pop
push
sub
or
scas
pop
inc
out
sub
je
pminsw
sub
dec
push
or
lahf
inc
xor
and
push
adc
daa
mov
sub
mov
les
je
pop
pop
pop
jmp
pop
aas
push
in
sbb
adc
fisubrs
pop
add
push
xchg
data16
mov
dec
pop
sub
insl
das
dec
pop
movsl
xor
pop
fcmovnu
dec
pop
repz
push
je
insb
xlat
sbb
push
push
subl
je
fisttpl
lods
lods
es
rclb
push
pop
inc
add
inc
dec
add
sub
xor
dec
mov
out
dec
add
sub
inc
dec
ficompl
lock
nop
or
ficomps
add
cmp
mov
ret
and
dec
das
sub
subl
gs
pop
lods
mov
pop
inc
insb
fs
push
cmp
sbb
dec
jae
lods
cwtl
lcall
test
jae
in
or
or
mov
inc
push
punpckhwd
inc
out
and
dec
outsb
push
je
scas
cmp
push
insb
pop
inc
insb
out
sbb
mov
push
inc
pop
push
dec
inc
dec
inc
push
and
js
xlat
jb
gs
mov
daa
inc
adcb
daa
dec
sarb
rol
dec
jb
xor
loopne
inc
aas
dec
mov
pusha
addb
test
adc
and
cmp
and
add
subb
adc
dec
jmp
cs
or
or
mov
mulb
addl
jb
xchg
mov
sub
fucomip
inc
add
or
and
pop
dec
addb
aas
xchg
pop
pop
hlt
shld
pop
xor
aaa
fwait
int
das
xchg
jnp
add
dec
fldenv
pop
adc
sahf
push
insl
push
add
inc
add
cwtl
inc
inc
inc
cmpsb
test
test
cwtl
sub
sbbl
add
mov
pop
shlb
push
inc
add
ljmp
sub
xlat
sub
pop
pop
sbb
push
lret
pop
lret
pop
mov
pop
dec
inc
pop
add
stos
adcb
lcall
jb
xor
outsl
fiaddl
loope
sbb
sub
cmp
dec
lods
mov
rolb
pop
pop
sbb
arpl
mov
push
xlat
outsl
xchg
sub
mov
fs
inc
cmp
fsubl
lods
jbe
push
stos
add
mov
scas
call
push
js
push
sarb
mov
das
lods
insb
dec
add
mov
adc
inc
xadd
sbb
inc
repz
xchg
inc
cmovo
dec
lock
adc
fdivr
cmpb
aas
mov
jo
maxps
sub
pop
inc
dec
add
fwait
adc
xor
xchg
sbb
mov
fdiv
mov
les
int3
daa
aas
mov
cmp
add
test
mov
mov
in
mov
push
sbb
xor
or
lods
add
imul
push
push
aaa
pusha
lahf
add
jnp
push
daa
mov
and
mov
or
rorb
pop
in
hlt
aas
int
arpl
cwtl
sbb
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
lods
in
scas
and
test
jmp
pop
daa
adc
and
mov
mov
push
lock
adc
push
insb
les
cmp
shrl
pop
sahf
ja
cmpsl
and
in
pop
xchg
jl
out
iret
jmp
pop
sahf
pop
pop
ds
pop
xor
out
push
jl
or
pop
aam
sahf
out
mov
mov
imul
sbb
enter
push
rcrb
sbb
out
dec
lods
add
and
and
mov
les
call
xchg
add
sbb
scas
in
scas
cmp
add
mov
jg
push
pushf
push
and
fcomip
pusha
test
xor
mov
xchg
add
jg
jb
xorl
mov
mov
add
ret
mov
dec
ror
das
jbe
outsl
cld
push
pop
add
inc
sub
loopne
or
cmp
inc
pop
dec
fmuls
outsl
add
inc
in
dec
scas
sbb
cwtl
inc
jns,pn
test
sbb
dec
cs
leave
rcrl
cmp
ss
add
fwait
sub
pop
dec
xor
jl
sub
xchg
in
pop
scas
add
or
out
inc
mov
add
jb
xor
pop
mov
xor
cld
nop
test
or
pushf
sub
ljmp
lds
out
pushl
or
leave
xchg
fdivs
pop
enter
pop
pop
fdivrs
fildll
and
int
cltd
outsl
sub
fs
xchg
loopne
sbb
mov
cmp
pop
roll
aaa
jno
insb
pop
data16
xchg
orb
fs
mov
sub
mov
jg
dec
xchg
ja
out
shrl
ja
add
sbb
push
mov
ja
pop
sbb
jo
fildll
mov
and
outsl
mov
pop
jb
sbb
mov
dec
jmp
popa
sub
push
jbe
add
scas
fadds
xchg
add
sbb
sub
or
filds
loopne
add
pop
push
repnz
add
rcrl
in
testl
daa
add
out
dec
cwtl
ss
js
push
pop
cmpsb
lahf
mov
pop
xlat
push
je
jbe
push
imul
jg
push
enter
mov
scas
movsb
add
mov
pop
sbb
fs
pusha
and
sub
add
fs
sbb
in
imul
popa
divl
sbb
pop
popa
push
push
push
push
outsl
jg
jbe
adc
daa
sar
rolb
popa
inc
bound
push
or
lock
pop
shlb
mov
rorl
sbb
or
shrl
pop
nop
pusha
daa
in
bound
inc
xlat
or
popa
mov
in
enter
add
xlat
add
lcall
pusha
inc
arpl
lods
fsubl
movsb
adc
or
pop
push
add
adc
and
inc
outsl
and
pop
ds
repnz
or
scas
ja
daa
in
clc
arpl
push
ret
push
pop
mov
aaa
mov
mov
imul
add
or
bound
test
add
jecxz
clc
and
xchg
fsubs
mov
or
xchg
sbb
jg
dec
sahf
or
dec
repnz
insl
mov
pop
gs
add
es
mov
or
dec
add
lods
in
sahf
int3
aam
mov
in
dec
sub
fisttps
inc
jmp
inc
push
or
xchg
sbb
das
outsl
add
ss
inc
aad
pop
insb
cs
and
daa
mov
mov
inc
push
es
mov
aaa
add
or
cld
push
jb
repnz
cmpsl
add
sbb
iret
xor
xlat
add
sbb
xchg
sahf
iret
jbe
or
daa
pop
out
les
or
add
cmpsl
divl
aam
dec
xchg
iret
repz
push
push
xor
je
jns
push
xor
pushf
mov
push
inc
ja
cmpsl
jb
movsb
aas
or
je
pop
mov
push
popa
inc
outsl
add
cmpsb
nop
fwait
pop
or
fists
or
sbb
push
xchg
pop
and
add
cmpsb
mov
ret
roll
scas
xor
push
test
add
sbb
push
aam
xchg
ret
out
popl
mov
rorl
sub
xor
inc
pop
or
addr16
mov
daa
add
ss
nop
add
add
imul
dec
add
nop
and
imul
scas
mov
xlat
imul
cmp
pusha
data16
sbb
jo
dec
insb
push
test
sub
sahf
sar
adc
inc
mov
sbb
mov
ja
inc
fstp
add
outsl
jl
mov
dec
adc
push
filds
xlat
push
mov
add
pop
in
mov
mov
jns
nop
pusha
es
sbb
addr16
pop
insb
or
sub
push
lock
xor
or
dec
dec
ret
ja
and
jns
cmpsl
push
lea
out
adc
push
xchg
dec
repz
jp
push
jns
cmpsl
stc
cmp
rcr
cmpl
sarl
out
jl
mov
cmp
scas
jle,pn
jns
ja
push
jns
mov
iret
repz
add
sub
mov
and
jecxz
out
ds
adcb
idivb
sarl
sub
stos
int
sahf
out
std
cmp
int
cld
xor
iret
mov
dec
push
xchg
mov
stc
pop
xchg
xchg
std
xor
arpl
pop
mov
xlat
or
jmp
out
mov
jl
repz
lea
and
cmp
mov
xor
xor
mov
lcall
fsubs
cmp
out
mov
sub
repz
repz
xchg
cmpsb
push
cmc
cmp
insb
xchg
rclb
xchg
mov
test
sarl
cwtl
out
inc
cltd
mov
or
repz
lcall
out
mov
pushf
ss
xor
out
or
mov
push
into
stc
sbb
dec
lahf
out
cmp
mov
mov
iret
repz
pop
mov
dec
repz
adc
lahf
cmpsl
stc
pop
cmpsb
pop
cwtl
dec
cmpsl
xchg
out
roll
lcall
test
add
cmp
jecxz
stos
jns
lcall
jnp
lods
jbe
dec
repz
and
pop
mov
stc
or
mov
sahf
fwait
jmp
ret
dec
repz
mov
adc
xor
push
jge
iret
repz
ds
pop
mov
iret
repz
mov
cmp
jns
cmc
xor
dec
repz
out
jl
cmpsl
stc
xor
mov
lcall
push
xchg
repz
imull
lods
lock
hlt
pop
pop
sahf
lahf
cmpsl
fnstcw
dec
lret
mov
in
repz
out
into
inc
sub
out
insb
ss
push
scas
rcl
add
test
xchg
xchg
add
sbb
mov
arpl
dec
cmp
jno
pop
xchg
out
cmp
ficoms
pushf
fisubl
das
adc
sbb
addr16
ja
cmp
leave
inc
repnz
add
jge
adc
fiaddl
fcmovbe
xchg
out
pop
paddq
fistps
aas
pop
xor
minps
cltd
nop
pop
int3
xorl
sbb
incl
and
and
daa
fnsave
pop
jae
jecxz
mov
jae
sbb
scas
or
shlb
sbb
push
push
loopne
pop
enter
in
inc
mov
ss
jo
out
push
pop
cmp
outsl
xor
inc
jge
in
inc
mov
jg
cmpl
adc
xchg
iret
fmuls
outsb
xchg
pop
orb
cmp
mov
popa
mov
shll
lods
mov
pop
dec
mov
in
cmpsl
mov
imul
xor
jg
iret
ror
insl
cmpsl
nop
in
dec
in
ss
aas
mov
xchg
mov
hlt
call
mov
jae
and
iret
test
sbb
std
jp
sbbb
pop
inc
int
inc
mov
call
inc
mov
ja
iret
aaa
pop
pop
jbe
insb
push
mov
mov
es
jecxz
push
push
pop
push
ret
mov
adc
lret
into
push
pmullw
add
xchg
xchg
sbb
sub
cmp
or
setp
fwait
adc
or
das
shrb
fnstcw
sub
push
adc
pop
push
aas
in
decl
push
jg
push
pop
xchg
sbb
cmpsl
lret
pop
jo
inc
cmp
aas
add
adc
pop
mov
js
fcomps
xchg
mov
ja
stc
ds
inc
shlb
push
add
pop
mov
stos
insb
in
mov
add
push
ret
add
and
in
in
fidivrl
lods
pop
incb
out
sub
dec
cmp
fisubrl
jle
mov
push
scas
push
jns
jns
pushf
je
sub
testl
into
cmp
inc
xchg
jp
jb
xchg
outsl
ja
xchg
pop
jb
mov
addr16
inc
mov
testl
adc
push
daa
and
inc
in
scas
lret
inc
push
pop
js
and
mov
xlat
fiadds
inc
dec
push
inc
outsl
lcall
add
cld
add
sub
fmull
mov
and
out
jl
pop
enter
inc
jl
xchg
dec
nop
pushf
mov
movsb
jl
int
xchg
pushf
lcall
push
into
lock
pop
int3
and
jb
jge
jge
jge
cltd
xchg
adc
mov
xorb
inc
dec
mov
jns
enter
jnp
push
add
out
sahf
out
dec
add
jns
pop
pop
push
jne
daa
dec
xor
imul
dec
jle
sub
adc
or
in
mov
les
inc
fsubl
push
cmp
mov
xor
dec
jno
sub
jl
jl
jns
and
add
out
in
in
je
test
cmp
add
push
mov
mov
pushf
pushf
aad
in
and
and
jge
jge
jb
enter
jge
jge
jge
cltd
dec
dec
dec
adcb
jbe
arpl
imul
cmpsl
jnp
pop
and
in
xorl
in
push
add
mov
jb
in
fimuls
out
out
imul
xchg
adc
out
and
es
mov
insl
jo
out
push
pop
ja
cmp
inc
lods
sbbl
push
mov
jmp
pop
and
mov
inc
ret
and
push
sbbb
mov
scas
adcb
aaa
je
add
push
daa
loope
add
xchg
enter
add
daa
call
sbbl
inc
push
insb
sahf
inc
push
lds
jg
mov
dec
mov
cwtl
subl
das
nop
rclb
in
scas
cmpsw
test
mov
jb
dec
dec
clc
sbb
in
loop
jb
cmc
xchg
inc
test
sub
inc
xor
cwtl
test
sbb
mov
mov
and
call
subb
jbe
adcl
mov
xchg
xchg
cmpb
sahf
out
sahf
or
or
or
xor
out
or
psllq
repz
sbb
es
repz
adc
adc
adc
cmp
repz
pop
push
push
repz
test
xchg
sbbl
mov
push
xchg
fistpl
add
andb
leave
xor
xor
jb
orb
ja
xchg
out
insl
push
add
mov
add
adc
fs
xchg
xchg
int
xchg
scas
pusha
leave
sbb
sub
and
xchg
dec
enter
leave
or
add
adcl
pushf
jmp
jp
addb
lea
lcall
pop
inc
lds
pop
sbb
inc
pop
jnp
inc
outsb
shlb
dec
enter
idivb
fcomps
loopne
fbld
daa
cmp
cmc
xorl
repnz
and
outsl
pushl
pop
jb
mov
mov
aas
add
enter
mov
in
test
nop
push
mov
mov
and
pop
jb
dec
repnz
test
pop
mov
test
fisubl
mov
aad
mov
js
daa
jns
mov
pusha
mov
pop
jbe
ja
push
addps
add
ret
mov
les
mov
mov
jbe
pop
xor
iret
in
andb
mov
mov
and
add
xchg
mov
or
pop
xchg
push
jne
leave
out
jns
xchg
outsb
daa
daa
adc
in
in
pop
and
fcoml
cmovo
daa
xchg
mov
adc
pop
mov
lret
cmovb
cmp
hlt
lar
add
in
sub
fldenv
repnz
jns
xchg
insb
xchg
daa
movsb
mov
mov
lret
lret
xchg
aam
fmull
lret
lret
in
mov
mov
mov
lret
lret
lret
lret
or
adc
sbb
and
lret
lret
lret
lret
sub
xor
cmp
inc
mov
jmp
push
pop
femms
cmp
cmp
or
cmp
cmp
or
push
cmp
cmp
add
xor
cmp
add
in
ja
addb
cmpsl
pushf
stos
xchg
add
mov
int
add
xchg
pop
jb
xchg
mov
and
inc
mov
mov
shl
jb
pop
jb
add
cs
cld
xchg
setge
mov
rcl
mov
enter
mov
mov
aas
imul
fucomi
push
push
clc
enter
sar
or
or
mov
daa
xchg
iret
or
xor
jns
add
ja
stc
inc
das
mov
outsb
mov
jg
push
jbe
mov
cmp
and
mov
lods
das
cmpsb
push
cmovle
or
out
mov
ja
cmp
pop
or
push
orl
add
inc
pop
xlat
loope
fimuls
scas
push
enter
push
and
call
xchg
das
icebp
stc
add
or
pop
add
cmp
xor
mov
in
or
xchg
mov
outsb
fcmovne
enter
mov
xchg
cmp
test
cmp
rcrb
fidivrl
repnz
das
repnz
pop
cli
stos
pop
leave
jae
clc
sbb
adc
fs
movl
xchg
and
pop
lea
mov
je
jg
pop
push
nop
xchg
in
ss
cmpsl
mov
in
out
push
cmp
out
cmp
cld
lea
pop
mov
cmp
sbb
push
or
lods
rorb
mov
testl
lock
jne
xchg
mov
jae
mov
rol
lahf
leave
mov
pop
jae
lock
jmp
sahf
fsubl
or
adc
mov
sahf
or
or
test
or
inc
xchg
and
inc
es
push
jg
cmpb
lret
inc
dec
sahf
fistl
aam
cmp
lahf
jns
fsubrl
cmpsl
ljmp
in
add
push
and
push
jg
xchg
push
jb
mov
jb
pop
enter
outsl
add
or
nop
xor
xlat
nop
xchg
pop
hlt
jbe
jb
push
in
inc
into
jg
nop
mov
push
inc
pushf
xor
cmp
es
nop
ficoms
addr16
xchg
xchg
push
xchg
sahf
fsts
xchg
xchg
cmp
mov
ja
mov
jae
inc
cltd
xchg
cltd
dec
dec
rcrl
pop
popa
cmp
into
jg
xchg
cli
xchg
add
sbb
xchg
sbb
mov
adcb
jb
in
push
xchg
jmp
insl
xchg
js
dec
inc
mov
xchg
mov
dec
dec
scas
mov
repnz
or
lcall
or
sbb
pop
xchg
sub
mov
xchg
push
xchg
decl
repnz
mov
xchg
shll
dec
fwait
stos
push
push
mov
int
aad
fnsave
pop
leave
jae
mov
xchg
mov
lret
dec
lgdtl
roll
out
cmp
iret
sahf
add
xlat
cs
cmp
mov
pop
add
inc
pusha
stc
mov
inc
lcall
iret
mov
popf
push
push
add
pushf
dec
outsb
push
sbb
movsl
dec
mov
lods
mov
and
mov
mov
cmp
in
push
or
ud2
fnstsw
leave
repz
in
xchg
aaa
cmovle
xchg
insb
cmp
fisubl
xor
dec
dec
dec
pop
adc
xchg
leave
in
and
xchg
mov
ja
repz
stc
mov
xchg
add
dec
ds
mov
pushl
inc
mov
outsl
es
rep
xchg
xchg
jo
inc
mov
xchg
cwtl
xchg
mov
fisttps
cmp
dec
sahf
out
lret
roll
fninit
in
in
add
repz
xchg
xchg
icebp
add
cwtl
sbb
xchg
xchg
cwtl
and
in
in
ud2
pop
or
or
in
in
push
add
in
add
cmp
jns
out
inc
sbb
push
out
sahf
out
pop
push
arpl
jb
je
imul
jae
repz
jae
and
and
es
fwait
cwtl
sub
adc
mov
inc
cli
lar
out
outsl
and
add
sub
pop
lar
cmp
inc
xlat
pop
xchg
add
mov
out
outsb
xchg
jle
in
jns
cmpsl
push
lods
test
mov
mov
rcll
push
rcll
add
dec
ret
add
mov
out
sahf
aaa
das
push
add
add
out
sahf
add
pop
add
jnp
jno
mov
mov
mov
mov
out
mov
mov
push
test
mov
aas
cmp
mov
add
daa
pusha
out
sbb
sti
lcall
repnz
pop
adc
sbb
loopne
fwait
inc
and
hlt
fsubl
fwait
scas
sbb
or
pop
sbb
cmpl
je
xchg
fwait
push
xchg
test
in
popf
faddl
test
rcll
adc
pushf
sub
mov
pushf
pop
and
in
dec
pushf
mov
in
pushf
test
movsl
iret
in
fcmovne
lcall
leave
leave
in
in
ret
ror
repz
fimull
loop
ljmp
pushf
popl
popf
or
xchg
testl
adc
xor
xchg
out
and
popf
pop
adc
enter
movsl
dec
popf
popfw
iret
repz
pcmpeqd
jle
jns
loop
xchg
bnd
mov
js
or
cmp
cmp
repnz
fstpt
add
jb
das
outsb
push
mov
popf
shlb
sahf
sbb
push
or
dec
jo
sahf
cvttps2pi
setle
dec
das
data16
outsb
sahf
xchg
inc
jb
sahf
dec
cmpsl
mov
movsb
fsubrp
outsl
out
inc
lahf
sahf
ja
insl
aas
ja
pop
and
or
inc
decb
jne
out
jae
add
aaa
mov
jb
test
cs
enter
xor
add
pushf
mov
lahf
pop
dec
aaa
jns
jbe
add
lar
leave
roll
xchg
bnd
mov
or
push
out
dec
icebp
in
ljmp
mov
or
add
adc
cmp
sbb
or
sub
or
daa
iret
repz
cmp
stos
mov
mov
mov
fwait
maskmovq
notl
clc
test
mov
xchg
cmpsb
push
add
push
jbe
mov
out
and
mov
jmp
jae
push
ljmp
adc
dec
dec
push
aaa
scas
and
scas
mov
mov
or
repnz
addr16
stos
js
out
mov
in
test
inc
jge
int
loop
mov
xchg
pop
enter
push
push
cmp
inc
ds
stos
inc
sub
inc
push
stos
in
fs
fsub
mov
into
in
out
pop
mull
inc
mov
inc
scas
push
mov
ds
inc
lock
loopne
dec
xor
mov
inc
mov
push
mov
add
cmp
repz
jl
xchg
repz
pop
xchg
or
repz
mov
mov
repz
or
jb
rorl
jle
mov
dec
je
daa
cmp
jae
hlt
push
jo
stos
jmp
lods
scas
daa
jns
xchg
and
das
andl
cltd
mov
pop
and
inc
push
mov
inc
arpl
int
jecxz
lahf
mov
inc
es
xchg
lods
mov
mov
das
ljmp
enter
movsb
push
pop
push
xchg
and
pop
movsb
movsb
movsb
inc
ds
or
or
push
lods
jno
aaa
lock
jns
andl
mov
iret
or
pop
test
xchg
adc
inc
add
movsb
sbb
movsb
movsb
test
movsl
call
stos
inc
scas
scas
mov
sub
xchg
fstpt
dec
lcall
movsl
shrb
jb
jb
js
js
dec
sahf
ja
mov
mov
adc
jb
xor
push
aam
ret
xchg
mov
cmp
setnp
pop
cmpsb
out
cmpsl
jb
fldl
push
cmovb
leave
out
push
xchg
mov
ss
fildl
cmpsb
pop
nop
xchg
in
mov
mov
jmp
pslld
add
or
and
cmc
pop
cmpsl
dec
and
xor
xchg
cmpsl
inc
cmpsl
pop
or
pop
jbe
jle
add
fdivrl
cltd
dec
mov
out
outsl
mov
daa
mov
cs
out
push
fsub
mov
pop
ja
in
cmpsl
hlt
cld
xchg
add
movsb
pop
test
test
fldl
das
test
pop
inc
aaa
jns
out
dec
push
push
and
dec
add
negb
or
jbe
jb
orb
call
mov
cs
xchg
test
fmul
loopne
xchg
pop
mov
sbb
dec
jnp
daa
inc
and
cs
cmova
xlat
adc
addr16
je
add
pop
and
shll
orb
mov
mov
stos
in
jae
push
pop
push
sub
repnz
iret
insl
xor
cmp
ja
push
push
out
xchg
outsb
lsl
jo
inc
leave
or
popf
fsubrl
out
nop
cwtl
pop
pcmpgtb
fbld
jb
stos
mov
sysret
or
repnz
cs
mov
jns
daa
ja
incb
inc
mov
cmp
in
or
inc
inc
push
stos
inc
iret
out
dec
push
or
pushf
xchg
je
mov
repz
xor
add
add
fmulp
repz
push
add
aaa
sysret
popa
imul
mov
cltd
push
mov
mov
mov
cmpsl
repz
fimuls
lsl
loope
lods
das
lods
push
mov
inc
add
pop
inc
jle
fimuls
lods
scas
jo
leave
clc
mov
jg
btr
cmp
pop
lret
iret
leave
repz
jmp
pop
repz
dec
mov
lods
dec
lret
lret
lret
lret
fldt
lods
jae
cmp
adc
sbb
and
repnz
iret
adc
cmp
inc
stc
int3
hlt
jbe
rcpps
repnz
sahf
and
fs
push
push
daa
je
mov
lods
cltd
lods
push
cmp
or
mov
mov
pop
push
add
jns
out
add
add
add
in
push
xlat
lods
pop
pop
pop
scas
cld
lods
add
or
adc
je
out
or
fiadds
xor
adc
aas
xchg
jns
out
inc
add
push
leave
inc
repnz
mov
leave
orb
jmp
cs
jno
in
stos
mov
add
push
notb
add
out
jge
xor
or
ja
push
xchg
or
mov
es
in
sub
aad
mov
out
clc
mov
fwait
in
aaa
add
pushf
loope
scas
out
sub
mov
in
add
outsl
out
ja
xlat
dec
outsb
jg
mov
shll
pop
leave
repz
roll
add
mov
repz
cmp
xchg
fildl
lock
push
mov
pop
lahf
xchg
scas
add
mov
jb
xchg
xchg
xchg
add
mov
xchg
xor
mov
mov
stos
lea
loope
mov
add
mov
inc
mov
pop
aaa
sahf
rorl
add
jle
cmp
mov
outsl
xor
mov
mov
iret
xchg
pop
lcall
out
push
mov
add
repnz
sbb
or
mov
mov
xchg
out
inc
mov
add
jp
mov
or
mov
mov
pop
pop
and
mov
cmp
mov
and
outsb
vmread
mov
dec
sahf
pop
xchg
add
out
mov
mov
jbe
lret
pmulhuw
in
mov
pop
jo
popl
pop
push
fistpll
xchg
pushf
in
mov
shrb
enter
das
aaa
mov
mov
mov
daa
daa
mov
pop
popa
jp
daa
daa
daa
daa
mov
daa
daa
out
pop
mov
daa
daa
mov
sub
andb
adc
dec
outsb
daa
rorb
out
mov
ja
xor
or
push
sbb
dec
and
pop
mov
and
xchg
iret
and
and
push
jb
cmp
pop
xchg
mov
popf
mov
mov
in
sbb
rcll
testb
inc
mov
adc
ss
mov
pop
dec
pop
pop
mov
xor
popa
mov
mov
test
mov
dec
dec
cs
fucom
in
enter
jg
std
add
fisttpll
pop
sbb
lret
and
mov
mov
ds
dec
mov
dec
mov
mov
and
sbb
mov
js
mov
cmp
jae
add
add
outsb
movd
pop
pop
pop
aad
fnsave
pop
pop
pop
pop
clc
mov
mov
pop
pop
pop
pop
sbb
xor
cmp
pop
mov
aas
fs
sahf
out
pop
jg
xchg
push
xchg
pop
jns
out
lcall
sahf
out
mov
out
sahf
lret
and
jns
out
out
icebp
or
bnd
out
add
cvttps2pi
in
jae
cs
sbb
xor
mov
cmpl
bound
das
push
jb
aad
xchg
mov
mov
scas
mov
fmulp
dec
mov
sgdtl
pop
fmulp
dec
and
dec
or
adc
rorb
inc
mov
iret
sbb
out
and
iret
mov
cmovge
in
in
cwtl
mov
shlb
repnz
or
cmp
mov
sub
dec
mov
cmp
dec
pop
addr16
cmp
test
mov
leave
rorl
fabs
jmp
push
icebp
ss
sysexit
pop
cmp
out
arpl
out
xchg
sub
mov
in
sub
in
cmc
das
std
cmp
iret
in
add
push
adc
cmp
xchg
xor
mov
data16
cmp
dec
sahf
fildl
add
jbe
mov
pmulhw
leave
jae
addr16
xchg
add
cmp
add
in
jb
dec
gs
daa
adc
out
and
nop
fwait
out
in
push
add
jns
add
add
cmp
leave
call
jbe
mov
adc
pop
pop
dec
sahf
out
sub
adc
sahf
out
jns
pop
arpl
out
jns
jns
test
sbb
jns
sahf
sbb
dec
sahf
out
pop
fsub
and
mov
in
std
mov
pop
leave
pusha
leave
xor
lret
add
push
sarb
inc
gs
cs
xchg
out
sahf
jne
jge
test
or
repnz
femms
ds
cmp
lzcnt
vpslld
fstpl
adc
out
sahf
outsb
lar
pop
cmc
and
out
std
sarb
push
jl
push
inc
out
sbb
test
inc
popf
out
cmp
aas
sbb
daa
mov
pop
and
sub
iret
in
jns
push
pushl
push
add
inc
and
in
dec
aas
push
shrl
sarl
jnp
addl
outsb
xchg
daa
push
shll
repnz
daa
mov
fcmovne
ficoms
xchg
cmp
or
adc
dec
jnp
jb
and
ret
out
jb
dec
push
subps
mov
insb
je
xchg
out
jl
test
dec
int
pushf
dec
and
scas
mov
mov
mov
aas
iret
in
in
loop
xacquire
in
pop
and
ret
cmpsl
inc
cmpsl
cmp
ret
xchg
jb
dec
je
ja
pusha
cmp
jno
scas
into
subl
out
jbe
setae
add
subb
mov
ret
or
out
out
idiv
adc
xor
data16
les
mov
sbb
scas
les
iret
leave
rep
cmovno
mov
je
jl
xchg
out
test
mov
dec
scas
mov
cmp
xchg
xchg
mov
add
out
les
sub
sarb
vpsllq
and
sub
add
repz
cmp
cmp
in
into
leave
push
pop
out
pushf
je
in
testl
mull
cs
in
enter
jb
dec
loopne
cmp
jbe
test
ja
adc
dec
sahf
out
sbb
add
xor
adc
shll
fisubl
and
mov
ja
fmull
mov
in
in
and
jbe
int3
ja
pop
fsub
cmp
or
cmp
mov
das
pop
lods
mov
cmp
dec
xchg
out
jns
push
add
leave
repz
jne,pn
jbe
test
xchg
iret
add
mov
dec
iret
ficompl
add
sbb
je
add
lret
lret
lret
push
das
push
enter
enter
lret
daa
enter
enter
jl
mov
pop
pop
enter
je
mov
enter
enter
mov
mov
ror
enter
mov
in
enter
mov
add
push
push
push
leave
leave
leave
leave
sbb
leave
leave
leave
sbb
pop
push
cmp
leave
leave
adc
ja
jb
and
cmp
sahf
out
sahf
xor
pop
xor
sahf
out
xor
jl
out
sahf
out
ss
aaa
popf
sahf
out
sahf
cmp
dec
sahf
out
cmp
cmp
fistpll
iret
leave
repz
ds
out
cmovb
inc
cs
jns
out
and
sub
aaa
inc
in
sahf
out
dec
dec
dec
pop
leave
leave
leave
in
arpl
outsb
jns
cmpsl
fwait
cmp
dec
lcall
movsl
mov
mov
xorl
mov
pop
lret
pop
lret
adc
das
getsec
lret
iret
aas
stos
pop
aad
lret
inc
lret
call
iret
in
in
push
jp
fisttpll
out
add
xchg
pop
lcall
cmpsl
out
sbb
push
xchg
inc
and
inc
inc
push
xor
daa
xor
fdivs
jb
loopne
lock
add
jnp
leave
clc
rcrb
clts
xchg
xchg
xchg
xchg
or
sbb
and
sahf
sub
sahf
xor
or
pushf
dec
push
int3
aas
pop
int3
repz
imul
fiadds
rorb
iret
add
and
mov
pop
dec
outsb
frstor
mov
movsb
rolb
int3
fadds
xor
pop
repnz
and
mov
int
pop
lock
inc
int
dec
int
fsubrl
xchg
int
int
pop
test
cmpsb
mov
imul
daa
iret
repz
push
call
jns
sbb
sbb
or
movsb
fwait
mov
push
pop
nopl
xchg
out
sub
iret
cmp
and
xchg
out
dec
ja
orb
leave
mov
mov
fmul
dec
test
into
scas
push
add
outsb
xchg
dec
cmp
adc
push
add
inc
fiaddl
pushf
push
pop
iret
dec
iret
push
iret
repnz
and
add
in
sahf
ja
push
push
cmpsb
pop
mov
insb
daa
fisttpll
add
mov
iret
rcrb
push
fstpl
call
repz
das
dec
or
adc
adc
pop
push
sub
sahf
out
dec
sbb
dec
sahf
ja
push
popa
push
push
insb
popf
cmp
ret
push
and
out
and
dec
sub
es
rorl
rolb
jmp
fwait
lret
xchg
outsb
mov
clc
fldt
test
inc
push
and
or
not
rcll
aam
push
aas
shrl
and
mov
shrl
das
cmp
inc
pop
test
out
or
ss
push
jp
or
lea
out
loopne
setge
test
repnz
add
popf
pop
pandn
push
or
sbb
fwait
je
pop
pop
xor
repz
in
rclb
push
mov
into
repz
sub
aaa
adc
xchg
cmp
adc
mov
rcl
push
das
lea
out
add
mov
cs
fisttps
mov
dec
ds
fstpl
shlb
rcrb
setno
sub
add
push
rorl
leave
jnp
pop
push
adc
add
out
cmp
and
or
xor
ds
pop
dec
repnz
iret
adc
adc
fsubrp
jbe
pcmpeqd
jle
xchg
out
mov
loopne
sbb
rcrl
sbb
aad
int3
rcr
push
pushf
jecxz
lret
in
rorl
inc
mov
aam
push
push
sbb
iret
leave
repz
or
cmp
xchg
out
cmp
push
push
or
dec
dec
outsb
mov
pop
jl
xchg
jns
out
adc
jns
in
movhps
mov
sahf
leave
sbb
fisttps
maskmovq
idivl
out
sbb
pop
paddusw
lea
aad
pop
mov
out
cmp
sub
and
and
xchg
out
inc
and
out
jns
outsb
sub
iret
repz
sub
movsl
cmp
in
push
cs
push
xor
jae
mov
pop
out
mov
or
fbstp
pop
shrl
pop
stos
push
lret
inc
xor
arpl
xchg
adc
sbb
pop
call
insb
out
aas
inc
push
sarb
cmp
sbb
aas
test
pop
inc
movsl
rorb
inc
aaa
out
pusha
or
push
out
popf
cmp
add
add
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
cmp
out
and
jb
pop
jb
pop
jo
orl
repz
jo
pop
xchg
sub
mov
aas
movsb
loope
in
into
aas
xlat
sbb
data16
int3
xor
and
add
mov
push
inc
cmp
xor
repz
repz
sbb
out
sahf
out
call
sahf
out
sahf
aam
int3
enter
jns
rcrb
test
jns
iret
mov
sbbb
pusha
push
push
dec
or
and
add
add
jno
push
hlt
ret
cmp
inc
enter
and
mov
inc
inc
mov
inc
aam
std
imul
sub
pop
and
inc
push
adc
cmp
push
add
movsb
in
enter
xchg
fisttps
pop
scas
jl
mov
cld
inc
jle
test
push
push
std
pop
shll
cmovo
mov
inc
mov
out
adc
dec
mov
in
call
adc
mov
push
add
mov
xor
fcomp
xchg
test
fneni(8087
stc
jb
jle
divb
xchg
sub
loop
filds
rorl
dec
pop
add
in
or
xor
cvttps2pi
clc
jle
inc
aaa
insb
sub
pop
pmovmskb
add
mov
push
mov
insb
das
aas
pop
add
xor
pop
dec
hlt
es
fucomip
repz
sti
pop
les
or
lcall
adc
adc
sbb
sarl
sbb
repz
push
cmp
repz
out
in
and
cmp
in
pop
popf
jnp
decl
cmp
push
les
cmp
mov
pop
icebp
xchg
push
add
pop
inc
cs
pop
and
js
adc
out
scas
adcb
dec
mov
dec
and
jo
icebp
imul
inc
cmpsb
jnp
sub
push
push
xchg
aas
pop
daa
push
aad
negl
imulb
call
dec
lods
mov
add
lods
stos
ja
and
sub
mov
shlb
and
or
imul
xchg
adc
sbb
push
dec
sbb
sbb
icebp
or
inc
mov
imul
add
xor
sahf
out
or
lock
idivl
push
push
pop
lock
in
jns
jnp
push
and
push
or
add
push
cld
sahf
out
out
adc
hlt
sbb
repz
jnp
push
rcrb
enter
cmp
rclb
and
mov
lods
and
repz
aas
test
jg
movups
xor
inc
stos
pushl
outsl
in
jg
cmp
xorl
jg
cmp
iret
repz
pop
js
mov
repz
imul
insl
add
push
add
out
ja
out
sbb
das
push
dec
push
inc
ljmp
add
add
enter
inc
dec
cli
or
or
ret
mov
in
and
adc
lret
and
sbb
into
sbb
rorl
incl
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
incl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
mov
decb
and
add
sti
aas
jno
or
out
xlat
mov
pop
fs
dec
lea
aas
ret
shrl
mov
push
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
call
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
arpl
cmp
mov
cmp
std
xlat
cmp
mov
sbb
incl
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
call
movsl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
add
inc
inc
je
inc
xchg
shll
cmovno
jnp
jmp
xor
popa
decl
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
cli
dec
mov
insb
fdivs
jne
filds
or
shrl
out
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
add
xor
and
or
mov
ljmp
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
xor
dec
adc
ret
movsb
sti
hlt
shrl
imul
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
pusha
jmp
add
adc
or
and
ljmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
pushl
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
call
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
jmp
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
hlt
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ffreep
push
xchg
ja
int3
add
mov
das
es
lds
or
or
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
pop
inc
ljmp
rorb
imul
scas
fsubrl
fldenv
filds
aaa
push
add
mov
sahf
mov
inc
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
into
cs
leave
xor
dec
xor
pop
cmp
sahf
adc
push
jecxz
aad
jns
pop
inc
push
xlat
fcomp
sahf
out
sahf
fcmovu
fsubp
out
in
jecxz
in
sahf
out
sahf
jmp
repz
out
hlt
cmc
div
clc
fnstsw
out
cli
sti
cld
daa
pop
sbb
ja
mov
cmpsl
lods
scas
inc
sub
sbbb
nop
outsl
jnp
daa
cltd
fadds
push
dec
bound
or
xchg
divl
inc
insl
bound
push
sbb
popa
je
push
mov
in
cltd
out
and
inc
adc
adc
std
mov
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
mov
xor
xor
bound
mov
add
popa
push
inc
jbe
pop
insb
imul
inc
orb
fnstcw
xor
inc
mov
push
addb
or
inc
xor
lret
cmp
pop
adc
popa
or
push
ret
das
fs
inc
inc
shll
imul
add
or
inc
aas
rorl
xchg
lea
je
loope
mov
inc
inc
push
push
lods
sub
test
or
aaa
cli
sbb
xor
insb
popa
jns
xor
adc
add
xchg
cmp
je
aam
pop
add
pop
add
inc
inc
aas
or
mov
aas
cltd
and
jae
iret
arpl
das
adc
sbb
pop
inc
aas
mov
out
inc
outsl
ss
enter
sbb
inc
pop
movaps
data16
jo
mov
in
fiadds
add
ds
mov
scas
add
hlt
mov
int
push
dec
sbb
jb
xor
sbbl
jno
ja
outsb
jne
stos
insl
dec
dec
jno
mov
dec
jge
insl
mov
fnsave
add
add
or
arpl
mov
push
clc
xchg
jb
mov
into
pop
jo
lea
lods
cmp
jg
add
stc
xor
sub
xor
inc
add
adcb
subb
lcall
push
mov
fwait
inc
ret
push
in
insl
mov
xlat
insb
inc
xorb
add
pusha
out
jb
adc
adc
addr16
mov
popa
jo
lahf
push
push
dec
inc
lahf
push
outsl
outsl
test
adc
xor
inc
push
jno
push
sbb
sub
lcall
push
nop
test
lods
cmp
inc
mov
and
sbb
sarl
jo
push
adc
push
outsl
insb
jns
add
inc
das
inc
jb
test
cmpsb
gs
je
insl
out
inc
outsl
arpl
insb
pminub
xlat
inc
push
bound
ja
insl
push
pop
inc
jbe
xor
rolb
push
mov
xchg
dec
xor
mov
arpl
das
xor
xor
add
daa
movb
inc
mov
and
imul
xor
xchg
arpl
inc
popa
call
inc
inc
loope
mov
sbb
push
xor
sbb
sbb
push
mov
inc
push
inc
dec
mov
pop
bound
outsb
arpl
je
data16
adc
push
add
repnz
pop
mov
xchg
fldt
add
add
push
pushf
or
daa
sub
add
add
push
stos
add
add
aad
add
inc
jo
mov
inc
ds
fbstp
fdivr
loopne
adc
dec
add
add
dec
add
add
fistl
mov
add
or
pop
pop
push
or
or
or
or
or
push
adc
push
adc
adc
push
adc
push
mov
or
pop
sbb
adc
adc
adc
add
data16
or
adc
pop
adc
inc
add
out
adcb
add
add
add
adc
add
fwait
sahf
add
les
add
outsb
add
mov
adc
or
jb
lcall
iret
imul
ds
xor
adc
pop
and
in
call
adcl
shl
and
bound
js
sub
mov
aaa
dec
shrb
daa
add
adc
pusha
xorl
push
pusha
add
xor
rolb
cmp
add
addl
add
scas
pushf
into
add
into
add
or
cmp
adc
int
addl
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
mov
add
or
mov
pusha
and
add
js
mov
lret
rcr
push
ret
xchg
and
sub
pushl
pop
aas
imul
fdivrl
add
mov
mov
loopne
mov
inc
pop
push
fsts
dec
sub
add
mov
cmp
stos
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
roll
or
adc
pop
inc
inc
xchg
add
add
std
or
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
xor
aas
fsubr
push
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
pop
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
incl
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
call
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
jg
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
in
mov
mov
int
arpl
push
out
or
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
sub
mov
mov
jb
mov
mov
dec
in
push
mov
sub
pop
mov
jl
rorl
ljmp
mov
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
jg
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
jg
lcall
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
fwait
in
imul
in
add
inc
adc
loope
fisttpll
out
aas
insl
ror
sar
cli
push
push
push
idivl
cmp
sub
pushl
mov
jg
je,pn
sub
jg
imul
mov
mov
incl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sar
scas
cmpsb
orb
mov
cmp
mov
das
jmp
xchg
pop
clc
pop
hlt
sub
jg
push
add
lea
jg
gs
std
xorb
cmpsl
jmp
imul
outsl
adc
ret
das
pop
pop
pop
shlb
push
mov
sbbl
jno
or
sarb
std
lcall
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
lcall
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
incl
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
in
sbbb
lahf
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
call
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
adc
adc
push
jo
pusha
imul
add
mov
cmp
aam
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
pop
mov
test
jg
mov
lahf
cld
sub
aas
stc
incl
mov
xchg
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
insl
rol
adc
and
lahf
fmull
enter
testb
mov
mov
pop
mov
sub
in
pop
decl
mov
dec
incb
fisubrl
aas
mov
or
mov
sbb
inc
or
pop
jg
add
push
mov
jg
mov
aad
test
mov
mov
mov
push
jbe
push
sbb
stos
icebp
pop
incb
addl
jno
adc
push
inc
jecxz
sbb
sarl
idivl
sar
sbb
jbe
mov
imul
dec
iret
rcr
push
in
aas
mov
fsubrl
rolb
and
aas
imul
add
push
sbb
jne
lock
aam
and
mov
adc
inc
aas
push
rcrl
iret
lock
rolb
pop
inc
jb
fistpl
adc
call
jno
ljmp
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
sbb
fistps
lds
fidivrl
jg
stos
pop
pop
call
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cmp
inc
and
mov
in
stc
mov
lahf
mov
pop
cld
outsl
int3
push
sbb
pop
inc
sti
incl
jle
xchg
popa
out
out
outsl
xchg
inc
mov
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
lcall
jp
adc
lahf
mov
or
out
lcall
aas
xor
shl
cld
mov
adc
stos
pop
jg
pop
sar
jg
outsl
sub
sarb
adc
xor
pop
rcr
dec
mov
fidivrl
sti
jmp
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
call
and
imul
or
inc
pop
xor
rorb
and
add
ljmp
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
outsl
lock
push
push
paddsw
pop
stc
out
mov
clc
push
std
mov
cmp
or
mov
ljmp
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
mov
mov
dec
ss
lods
movsb
or
repnz
push
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
decl
and
add
xchg
xchg
shll
dec
test
ljmp
sbb
push
pop
pop
cmc
rcr
jge
inc
aaa
adc
jns
sub
in
cmp
dec
pop
popa
push
mov
dec
push
jnp
sti
dec
cwtl
cmp
add
or
insl
and
xchg
cmc
ljmp
call
sbb
ljmp
xor
mov
push
dec
pop
xchg
cmp
jmp
or
jbe
inc
push
fcoml
push
loopne
test
sbbl
jbe
push
call
test
frstor
inc
push
jns
jl
jae
loop
cmpsb
lds
pop
repz
leave
clc
call
inc
or
rclb
or
mov
clc
add
incl
adc
bound
push
mov
and
sub
xor
bound
cli
int3
sbb
sahf
mov
out
aas
sbb
xor
cmp
out
adcl
xchg
pop
ret
outsb
sbb
push
sahf
dec
hlt
bswap
aaa
ja
xchg
imul
and
cwtl
mov
jecxz
add
lods
cmp
cli
and
xor
jmp
adc
sub
adc
out
fsubrl
out
jmp
jg
xor
inc
xor
push
cmpsb
xor
sub
mov
imul
mov
jbe
ljmp
cmp
or
or
ss
mov
ljmp
mov
pop
cmp
outsl
fidivl
push
fcom
sbb
dec
pusha
lods
sarb
xor
push
mov
mov
xchg
stos
dec
jg
pop
ds
pop
fisubl
adc
xchg
mov
call
int
enter
dec
push
popa
shl
pusha
scas
fs
inc
sbb
add
in
lcall
adc
inc
and
imul
dec
push
decl
ds
push
insl
test
cmc
pop
or
jmp
cmp
mov
pusha
stos
loope
movsb
and
decl
das
sti
popf
inc
or
mov
dec
mov
ja
xor
aad
decl
andb
ret
push
imul
inc
cli
sar
mov
ss
mov
call
mov
outsb
in
mov
or
movsb
subl
stos
es
fs
out
lcall
push
mov
aad
lret
mov
aad
sub
sbb
decl
sti
mov
into
or
bound
in
pop
cmp
iret
test
mov
popa
daa
cmp
call
iret
cmc
mov
fcmove
rcrb
mov
sahf
fwait
cltd
mov
mov
arpl
jmp
add
cs
push
xor
sbb
lods
les
popf
dec
insb
int
cmpsl
loope
out
jg
decl
outsl
push
clc
xor
add
test
stos
in
sub
add
cli
inc
das
mov
lds
imul
jg
negl
hlt
je
fildll
jle
jmp
movsb
adc
cmp
cmpsb
or
push
sbb
cmp
jnp
dec
xor
push
push
mov
mov
xchg
mov
jg
test
xor
enter
jmp
push
clc
mov
shll
inc
lods
and
in
push
into
lock
adc
arpl
mov
lods
jmp
into
scas
dec
sbb
pop
pop
aam
shr
push
cmpsl
aad
stos
and
hlt
push
or
inc
xor
cltd
xchg
push
or
xchg
bound
pop
out
in
xchg
jnp
dec
fs
ljmp
decl
lock
xor
loope
dec
daa
rcrb
sahf
icebp
movsl
lahf
and
adc
into
call
clc
shll
cmpsl
insb
fstpt
pop
push
xor
ret
pusha
jle
sbb
pushl
sbb
shl
nop
test
pop
subb
aad
xchg
test
push
ss
in
pop
aad
rolb
gs
call
inc
or
dec
fucomip
cmp
xchg
jl
popa
imull
jp
xor
sar
pop
xlat
dec
cli
jmp
lret
fcmovnbe
jmp
out
ret
mov
shlb
xchg
enter
push
jnp
rol
lock
or
imul
sti
jb
mov
cmp
push
bound
lcall
xor
scas
xor
dec
faddl
cltd
stc
mov
xor
add
test
xor
mov
enter
and
push
in
cli
or
mov
push
repnz
stos
pop
gs
mov
inc
out
sbb
push
insl
nop
shl
sar
lcall
push
js
in
cmp
jg
add
mov
sub
jle
sub
push
jg
into
mov
sub
aas
lds
lahf
incb
xor
push
mov
das
adc
xchg
mov
xor
pop
mov
mov
dec
stc
stos
mov
clc
mov
adc
add
fwait
dec
sti
rcll
nop
pop
jp
xlat
mov
call
pop
iret
push
sahf
or
addr16
lods
or
adc
adc
jge
mov
decl
sub
push
and
xchg
es
test
fdecstp
cld
pop
mov
sub
imul
test
push
sbb
pop
lock
push
and
jo
popa
mov
scas
jmp
lret
frstor
xchg
jne
push
ja
xchg
lds
hlt
in
mov
or
xor
cmp
repnz
jne
xlat
test
ljmp
xchg
pop
fidivrs
ds
in
int
push
imul
mov
test
sti
ret
push
push
fiadds
aad
dec
scas
cmp
xchg
loop
ljmp
cmpsb
sub
jae
mov
xchg
mov
hlt
fidivrl
and
js
mov
mov
adcb
cwtl
cld
rolb
ffreep
mov
loop
fcomip
pop
sub
mov
pop
jae
dec
lahf
mov
les
push
inc
jp
xchg
add
mulb
pop
test
inc
mov
and
dec
push
es
pop
xchg
pop
div
push
out
imul
and
jp
adc
mov
sub
xor
in
cmp
cld
adc
cli
push
fs
divl
das
push
add
jns
pop
dec
rorb
mov
mov
jle
jo
xchg
in
add
xchg
inc
and
jmp
int3
mov
dec
call
add
mov
mov
mov
pop
push
movsl
jecxz
ret
mov
call
inc
je
idiv
les
ficoml
xor
mov
mov
cmc
push
mov
in
shlb
jl
inc
jne
decl
sbb
lods
popf
push
pop
mov
ror
lret
test
push
adc
ficomps
das
push
out
add
pop
movsb
lods
xor
fisubrs
push
pop
add
mov
imul
jmp
add
pusha
mov
or
mov
push
push
movsl
ja
jmp
mov
out
inc
sub
popf
xor
into
dec
push
push
dec
xchg
in
cmpsl
and
mov
mov
push
or
and
and
push
enter
sbb
insl
sahf
push
sti
shll
test
sbb
or
add
mov
subb
xor
mov
popf
push
xchg
je
mov
popf
fs
push
jae
dec
pop
ret
mov
subb
lods
cmpsl
stc
pop
adc
dec
sbb
xlat
fstl
out
or
pushf
lret
lock
repz
fmul
in
ljmp
loope
insb
sub
sbbl
test
fsubl
mov
call
mov
mov
out
lcall
mov
mov
loopne
mov
cmc
mov
push
adc
inc
or
and
jo
jmp
pop
sbb
aas
imul
dec
ret
push
in
push
adc
jno
ds
jb
xor
adc
sti
mov
ljmp
lcall
dec
cltd
imul
movsb
in
lahf
movsb
sbb
popf
jb
jns
push
mov
jnp
sbb
negl
int
jae
sbb
inc
out
mov
pushl
popl
push
sbb
adc
ret
inc
int
loope
int
inc
push
dec
rcrb
icebp
pop
xor
sbb
inc
jnp
or
add
and
lret
shrd
incl
bound
jbe
mov
vpmacswd
insb
insb
rcr
adc
icebp
inc
in
add
ljmp
and
pop
stc
mov
dec
sbb
insl
adc
mov
mov
jmp
roll
xchg
in
mov
js
shrb
ret
mov
mov
call
push
xor
lahf
xor
shrb
cmp
pop
xorb
xor
daa
jno
push
pop
mov
and
adc
test
pxor
je
mov
mov
aas
add
xchg
ds
fs
stc
mov
fdivr
in
js
js
in
ljmp
and
xchg
inc
xor
mov
notb
mov
pushf
imull
cmp
sbb
add
sbb
out
leave
mov
ljmp
je
ljmp
frstor
pop
fnstcw
fwait
insb
aas
aam
es
int3
mov
lcall
mov
enter
mov
dec
in
mov
mov
pushl
fsubrs
sahf
mov
scas
mov
and
cli
mov
aad
aad
jg
sbb
jg
cmpsb
rcrl
pop
sbb
sub
or
enter
lcall
pushf
stc
xor
repz
mov
popa
sbbb
cli
or
xor
call
iret
gs
cmpsb
insl
outsb
jmp
aam
cmp
test
negb
testl
sbb
call
insb
nop
jbe
sbb
rcrb
sti
fucomip
mov
inc
add
mov
decl
outsb
lret
adc
push
sub
mov
pop
sub
cmc
xor
out
mov
push
jmp
iret
jp
call
mov
cmp
xor
ret
test
sahf
fwait
scas
dec
cmp
incl
shll
jno
xor
stos
inc
ja
sub
incl
aam
mov
sub
repz
jg
incl
gs
jb
insb
int3
imul
pop
xchg
fcomp
addl
push
decl
bound
sub
out
sbb
ja
into
das
pushl
dec
add
insb
lahf
int3
fisubrl
xor
mov
sahf
dec
push
orl
cmpsl
decl
dec
das
fisttps
cmp
cmp
inc
and
fwait
std
roll
shl
test
push
mov
lcall
int3
add
mov
jg
dec
add
cs
nop
push
pushf
sahf
incl
cld
jmp
xor
movsb
shlb
ret
mov
fsubrs
mov
jle
or
out
jns
and
std
cltd
notl
jnp
cld
adc
out
sbb
adc
xchg
pop
jmp
ja
les
jnp
aam
xorl
int3
repnz
insl
out
adc
push
push
fcomip
decl
push
test
outsl
int3
add
xchg
xchg
lahf
jge
stos
into
out
cli
call
add
mov
sub
xor
pop
aad
outsb
pop
jp
std
pop
adc
ljmp
test
xchg
pop
scas
mov
lahf
push
lods
arpl
xchg
into
xor
js
pushl
sbb
dec
imul
je
mov
pop
lcall
sbb
sub
cmp
push
cmp
loop
es
lcall
jne
jmp
jecxz
pushl
pop
ret
out
cmc
lcall
daa
popa
cs
mov
scas
push
fiadds
or
cltd
push
jb
rorl
xchg
hlt
lcall
jg
vmovntps
mov
push
cld
sahf
pop
pushf
inc
cmpsl
shrb
inc
fs
jbe
xor
mov
push
sub
scas
imul
mov
fwait
fwait
inc
push
outsl
movsl
dec
enter
xchg
jg
push
inc
dec
rep
outsb
mov
sar
mov
push
stos
pop
mov
clc
sbb
push
mov
pop
jnp
jg
add
clc
push
jmp
jno
enter
pop
call
and
aas
pop
mov
jae
bound
jmp
xor
inc
dec
jnp
das
decl
dec
out
negb
lock
mov
xchg
daa
aad
scas
in
jne
jmp
sub
xor
pop
pushf
popf
insl
inc
pop
das
or
mov
pop
fwait
jae
mov
fists
outsl
jecxz
xchg
mov
pop
fdivl
sub
cmp
fdivr
int3
adc
mov
shll
pop
mov
cmc
lock
lea
ljmp
clc
in
lods
push
fisubrl
rcll
add
scas
inc
xchg
in
shrl
std
pop
cs
inc
mov
ljmp
or
push
nop
dec
jb
test
stc
stos
sbb
js
dec
daa
fldpi
ljmp
clc
jns
adc
fstp
mov
fisubrs
cwtl
shll
xchg
cltd
jmp
aam
and
sbb
leave
in
das
sub
jb
test
jecxz
mov
pop
aas
idiv
incl
pop
inc
pusha
pop
nop
sbb
stc
jo
push
faddp
sub
les
mov
rcrl
icebp
mov
fldcw
mov
sbb
imul
jo
popa
in
and
ljmp
popa
inc
push
iret
cmp
pop
sbb
ja
rcrb
mov
xchg
mov
lods
sbb
shlb
jbe
jmp
dec
cmpsb
fisubs
mov
imull
imul
das
pop
shl
cmpl
loopne
leave
movsb
jg
call
add
or
inc
xchg
das
rorb
jle
scas
mov
outsl
addb
mov
and
sbb
jp
xlat
fisubl
sti
lret
push
jne
dec
loopne
fidivrl
pushf
mov
data16
clc
jmp
out
sub
mov
in
cmp
adc
fisttps
xchg
imul
bound
out
movsl
lea
stos
call
mov
es
stos
ds
mov
adc
dec
jp
in
dec
rcll
decl
mov
sub
lock
sbb
aam
gs
scas
or
mov
xchg
jl
lcall
ja
mov
sub
rorl
xchg
push
insl
nop
pop
not
ret
push
or
repnz
subl
sbb
aaa
sti
sahf
mov
aaa
dec
in
nop
icebp
xor
cmp
out
mov
movzwl
pop
or
sahf
mov
ljmp
jmp
fxch
dec
add
enter
mov
and
test
mov
call
in
cmp
rorb
inc
jo
dec
push
pusha
repnz
jg
icebp
dec
push
jl
in
inc
push
movsb
sbb
std
push
jns
jb
inc
jge
or
cmp
mov
addl
mov
cmp
aaa
xor
pusha
incl
sub
pop
fbld
or
dec
cld
push
mull
and
jle
inc
sbb
jmp
dec
mov
mov
dec
sbb
popa
iret
inc
xchg
lret
icebp
sti
gs
xchg
rol
dec
rclb
call
mov
stos
xchg
push
mov
addr16
cmpsb
add
icebp
popf
and
xchg
int
call
sarl
sub
xor
test
jg
test
xor
sub
pusha
push
call
jle
push
lret
popf
sbb
out
pushf
pop
push
pop
fcmovnu
mov
data16
jp
sub
adc
loopne
rorb
jl
xor
pop
sti
inc
syscall
dec
in
int3
cmc
ret
push
adc
dec
loop
ljmp
jmp
int
adc
in
push
sbb
imul
jmp
jle
mov
clc
nop
dec
xchg
adc
mov
pushf
push
lret
fs
and
mov
xchg
cli
idivl
fs
sahf
sbb
xchg
pop
in
popf
xchg
call
into
loope
aaa
add
mov
loopne
mov
mov
hlt
ss
rcll
mov
fisubs
push
mov
mov
aaa
out
popl
or
leave
mov
addl
adc
add
nop
sub
jmp
pop
or
fwait
and
sub
clc
movsb
stos
lret
scas
pop
cmpb
call
call
inc
adc
in
lock
inc
mov
out
jns
xchg
add
cld
fcoms
dec
jo
into
dec
push
pop
cmpsb
adcb
jmp
push
das
xor
sbb
in
loope
jmp
test
fisubrs
rcrb
loop
call
push
jmp
jne
das
mov
in
pop
inc
xchg
sub
sbbb
jmp
ret
pusha
out
test
dec
xchg
inc
and
dec
hlt
xchg
inc
sahf
rcl
xchg
fldl
in
push
cmp
lds
in
stos
pusha
addr16
out
inc
sub
js
ljmp
xor
adc
fwait
outsb
jecxz
jmp
out
fimuls
mov
clc
out
xchg
loop
fwait
call
jmp
bound
mov
sbb
sbbl
notb
mov
ljmp
addr16
mov
je
inc
jge
ret
imul
mov
mov
pusha
iret
add
daa
pop
lods
cmp
adc
mov
mov
in
inc
addb
mov
stc
scas
jl
mov
xchg
ss
lea
dec
xlat
lret
pushf
adc
decl
pusha
jae
jnp
inc
fxch
push
outsl
mov
mov
mov
fists
or
or
data16
cmpsb
cmc
pop
cmpsb
insl
aam
mov
orb
inc
mov
insl
mov
and
sbb
clc
test
es
lcall
dec
rclb
in
ljmp
mov
cmpsl
adc
add
scas
jmp
pop
cmp
pop
popa
decl
push
repz
test
clc
cmp
mov
sarl
mov
fimuls
seto
jmp
and
sbbl
lods
hlt
movsl
or
pop
xor
adcl
fs
rolb
fildll
jb
xchg
cmpsl
fidivs
mov
in
cltd
dec
call
jmp
repz
mov
fucompp
jnp
jl
xorl
scas
or
add
andl
push
stos
push
adc
rcrb
fstl
jecxz
fadds
inc
ljmp
outsl
icebp
add
adc
push
fcompl
insb
hlt
cmc
int3
adc
stos
sbb
jns
divl
icebp
fidivrs
mov
into
jnp
sti
sbb
inc
add
in
jp
lret
mov
clc
lcall
lret
inc
fs
sbb
mov
mov
inc
cli
idiv
jno
test
pushl
lods
xor
cltd
jl
enter
lea
add
lret
push
test
dec
popa
incl
mov
sub
xchg
xchg
ja
or
or
lcall
stos
mov
pop
pop
icebp
imul
in
and
ja
fdivrp
pop
repz
fldcw
mov
cld
stc
pop
lahf
xor
int
ds
jecxz
aaa
movsl
cmp
jnp
jg
incl
test
mov
aaa
xchg
xor
out
sahf
push
sahf
xor
incl
mov
cmpb
fcomps
jl
jmp
adc
mov
pop
mov
outsl
push
xor
dec
leave
dec
fstp
jle
adc
jbe
in
lods
or
jmp
dec
sub
push
push
lret
push
or
jmp
mov
xor
out
mov
insb
or
add
xchg
xchg
call
mov
xchg
push
jecxz
call
in
and
inc
test
mov
jecxz
jl
es
mov
enter
add
inc
xchg
incl
ljmp
sbb
ret
inc
pop
ds
xchg
cs
cs
pop
les
pushl
sbb
jae
fistl
push
mov
add
push
icebp
mov
pushl
rolb
jbe
sbb
enter
add
mov
int3
push
or
call
cld
cld
outsb
mov
imul
fcomps
add
dec
and
pop
cmp
into
incl
jno
jmp
in
dec
js
cmp
outsb
xchg
popf
and
mov
sbb
pushl
ret
call
xor
adc
popf
jno
in
mov
lods
adc
aaa
test
cmp
mov
ds
ss
and
push
aas
adc
mov
aam
ljmp
mov
push
dec
lahf
pushf
push
xchg
or
pop
xor
dec
xchg
decl
int3
mov
xchg
insl
dec
sbb
adc
xlat
mov
sbb
loop
enter
mov
out
cli
push
outsl
int3
sub
mov
in
mov
xor
xchg
inc
sub
xchg
ss
mov
lcall
mov
mov
rol
outsl
in
inc
or
ljmp
xchg
cmpsl
sub
icebp
xchg
loop
cmp
loopne
popa
xor
push
sub
jno
lods
stc
sbb
outsl
cld
incl
push
pop
sarl
cmc
ret
cli
dec
aaa
xchg
fprem
add
jnp
sar
pushl
aam
push
fwait
pop
aam
mov
out
fidivs
scas
add
into
sub
mov
pushl
inc
inc
cmp
push
lds
cld
inc
call
push
lahf
enter
ljmp
mov
data16
push
pop
pop
jge
pop
js
jg
out
cltd
add
dec
jns
daa
xchg
movsb
mov
nop
xchg
cmp
pop
arpl
push
inc
in
sahf
push
jl
push
and
jg
sti
sbb
loopne
shrl
pushf
into
mov
push
stc
xor
push
dec
call
inc
scas
jl
popf
sbb
fiadds
mov
or
push
mov
rcrb
decl
jb
mov
pop
loope
cmpsl
mov
imul
xchg
imul
ljmp
pop
add
or
push
insl
cwtl
out
push
sub
push
in
movsl
les
repnz
mov
inc
dec
pop
imul
fwait
je
sahf
outsl
jns
xchg
push
call
mov
add
push
lock
cmp
push
or
mov
jmp
stos
add
lcall
data16
jb
add
imulb
dec
sahf
xor
push
arpl
jg
scas
and
xor
push
aaa
fisttpll
and
or
ljmp
mov
lock
mov
loopne
rcrb
in
or
mov
and
in
inc
dec
out
ljmp
popa
scas
inc
lcall
hlt
push
sbb
jp
add
out
xor
decl
jo
shrl
aad
movsb
pop
xchg
call
xchg
jae
ret
jge
enter
decl
push
subb
jbe
shlb
loope
sbb
adc
add
shlb
sbb
inc
fucomi
jmp
fwait
mov
test
mov
and
mov
jle
ds
in
add
shrl
jno
and
rcr
pop
jb
jmp
xchg
leave
insl
add
xlat
jo
lods
jmp
sub
add
out
mov
xchg
xor
arpl
xor
fs
nop
mov
adc
jl
test
mov
jno
xlat
pushl
push
pop
and
jnp
cltd
mulb
cli
les
repnz
mov
std
fiadds
or
jg
test
lods
xor
out
cwtl
outsb
inc
loope
add
push
enter
mov
or
xchg
add
mov
cmp
jbe
inc
fsubr
sub
xor
fs
add
sub
rcl
inc
mov
insb
pop
xor
xchg
rcll
mov
jg
dec
lods
leave
cltd
out
add
mov
test
imul
xor
pushf
pushl
out
cltd
or
or
aad
adc
das
into
lret
shl
mov
addl
mov
repnz
dec
lds
outsl
aas
int3
fs
ljmp
orl
test
dec
test
cld
cmp
repnz
sub
and
les
fs
or
adc
xchg
int
sbb
decl
in
das
mov
sbb
mov
mov
das
mov
lret
or
aam
pop
icebp
lcall
mov
jno
mulb
cmpsl
fsub
cmp
mov
cmpb
push
fsubl
in
xor
daa
push
adc
or
out
mov
lret
scas
out
sbb
cld
das
js
jg
jmp
inc
mov
popa
hlt
imul
sti
cli
pop
mov
cmp
pushf
xchg
push
ss
call
ret
call
lret
orl
pusha
adc
push
push
inc
dec
jl
dec
add
xor
sbb
jns
pop
mov
jmp
jl
dec
mov
out
ja
ja
or
clc
xor
ljmp
mov
repnz
test
stc
rcll
cmpsl
addr16
lea
cld
pop
adc
pop
dec
adc
fwait
mov
or
call
mov
in
call
out
jp
push
dec
arpl
test
lods
aaa
and
jo
jmp
aad
rclb
push
mov
pop
dec
or
or
jg
cmp
gs
lret
imul
ljmp
mov
sbb
jle
in
or
movsl
inc
or
rcrl
pop
mov
in
ret
pushl
jg
jae
ljmp
sbb
dec
mov
aam
gs
call
xchg
jns
xor
sbb
fwait
xchg
inc
jp
push
pop
nop
ljmp
mov
adc
into
pop
push
aad
dec
fidivl
icebp
and
cld
incl
pop
out
xchg
mov
mov
jg
mov
movsl
lcall
into
lea
in
or
push
lahf
mov
scas
rolb
sbb
cld
push
fiaddl
notb
in
in
adc
out
cwtl
mov
ret
mov
lods
sub
call
stc
or
hlt
negb
lds
mov
fidivrs
or
sub
enter
in
pop
andl
ljmp
ret
mov
movsb
es
lods
jne
mov
rcl
jne
addr16
pop
sbb
loop
idivl
pop
mov
in
wrmsr
adc
aaa
gs
lret
aaa
call
loopne
mov
outsl
out
ss
mov
mov
dec
adcb
sahf
inc
push
mov
ljmp
xchg
push
ss
or
mov
ret
push
jns
nop
mov
shl
push
mov
bound
add
cmp
mov
dec
jmp
in
rcr
bound
sbb
sub
push
add
push
pop
dec
int3
sbb
pushl
and
add
sub
xlat
pop
out
stos
ret
fs
call
push
add
sbb
loope
sar
lcall
loopne
mov
mov
jmp
movsb
mov
fnsave
ja
popa
enter
xchg
mov
outsl
dec
addb
mov
pop
pop
adc
and
cmp
cld
push
push
dec
xor
popa
push
inc
xor
ljmp
push
enter
mov
mov
dec
mov
dec
and
mov
xorb
jle
pop
mov
out
mov
inc
popf
xchg
jle
jmp
mov
inc
add
jmp
stc
mov
add
addb
in
sbb
dec
mov
mov
xor
aas
sbb
fisubrl
lods
jge
add
rcrb
pushf
incb
mov
inc
push
jle
fstpt
test
sbb
mov
push
add
mov
mov
jp
sbb
cwtl
mov
and
dec
stos
jle
mov
xor
and
or
in
cmp
fstpl
mov
out
mov
lcall
call
or
pusha
rcl
push
adc
jg
int
lcall
call
or
icebp
sub
repz
pop
sub
mov
mov
test
inc
xchg
test
dec
out
js
daa
mov
imul
mov
std
fwait
sahf
cli
sub
mov
enter
jns
cmp
fdivs
cmpsl
jno
incl
lret
inc
or
lahf
push
xor
fidivrl
or
cli
stos
mov
xchg
pop
mov
or
cli
in
push
daa
idivb
aam
lret
stos
pop
clc
push
cmpxchg
cli
inc
dec
loopne
mov
addr16
fs
ljmp
das
push
dec
sbb
jbe
dec
incl
mov
js
pop
add
shl
out
add
clc
call
decl
je
xchg
das
dec
push
enter
outsl
and
xchg
pop
imul
imul
jl
jmp
or
cmpsb
outsl
jnp
xchg
cmp
das
in
xchg
mov
adc
incl
aas
movsb
inc
dec
dec
fbstp
fidivrs
add
or
sub
adc
das
adc
mov
add
js
loop
rolb
jecxz
icebp
xor
fiaddl
ljmp
ror
scas
mov
push
xorb
xchg
sbb
cs
xor
fdivl
push
lcall
push
sbb
std
mov
push
or
incl
cld
push
ds
jecxz
adc
sahf
in
fwait
xor
xor
aaa
lret
rorb
frstor
mov
ret
pushl
inc
inc
into
stos
movsl
and
add
ss
push
stos
xchg
aad
add
ljmp
fnsave
addl
cmp
das
sbb
inc
into
sub
mov
call
push
cmp
and
gs
xchg
fcoml
mov
jno
std
xchg
pushl
shll
cmpb
xchg
movsb
mov
leave
pop
push
adc
xchg
or
cltd
repnz
dec
pop
ret
push
cwtl
jg
imul
sub
shlb
in
sub
inc
sbb
nop
mov
inc
leave
jg
jmp
sbb
and
push
pop
nop
mov
insl
jecxz
jecxz
add
xor
leave
mov
adc
jae
push
and
cltd
fbstp
push
popa
clc
push
adc
int3
decl
and
jbe
mov
sub
cmpsb
jecxz
mov
fldcw
mov
das
add
fiadds
pushl
cld
pushf
pop
sbb
ror
in
jle
xor
jecxz
mov
jno
cmp
decl
jl
stos
xchg
rcll
xchg
das
in
aad
sub
sbb
jnp
lret
lods
popa
cwtl
lcall
add
inc
rolb
sbb
cmp
cli
call
daa
aas
cmpsb
cmc
xchg
adc
inc
adc
insb
jae
cmpsl
xchg
mov
pop
scas
add
inc
inc
call
pop
mov
arpl
mov
sub
and
xor
push
bound
outsb
cli
sbbl
loop
es
outsl
decl
mov
int
adc
int
mov
mov
xor
aaa
inc
mov
sub
into
repz
xchg
mov
test
cmpsb
jbe
dec
imul
frstor
adc
ljmp
out
scas
pusha
jae
out
jecxz
call
or
movsl
lcall
xor
shrl
pop
inc
mov
out
cwtl
inc
ljmp
cs
pusha
push
stos
lea
negb
jmp
jle
fnop
jg
cmp
fcomps
scas
xchg
movsb
int3
pop
pusha
aas
adc
push
lds
push
ljmp
sbb
lock
xlat
aam
or
adc
shrb
xor
ljmp
sub
fcoms
out
fnsave
or
mov
xor
xor
and
out
dec
and
xor
ffree
jae
dec
iret
fdivl
sarl
pop
xchg
ljmp
mov
movsb
jmp
jmp
addr16
push
dec
push
jg
rorl
or
shlb
sub
fidivl
leave
fstpl
std
xor
xor
ljmp
mov
mov
cmp
aaa
aaa
test
jno
cmp
and
pop
mov
inc
jle
decl
imul
std
in
mov
cli
lods
ds
lcall
inc
sub
dec
andb
test
mov
jmp
sub
xchg
daa
cmpsb
add
xchg
daa
shll
mov
sbb
roll
mov
pop
push
xchg
cmp
lret
jg
mov
fimull
imul
sbb
push
lods
addr16
addr16
popa
jmp
fwait
rcl
xor
mov
ljmp
aad
or
andl
jb
incl
rcr
cmp
xchg
fwait
mov
gs
das
scas
and
movsl
add
add
fnstcw
mov
push
in
or
xchg
mov
xlat
shll
or
jmp
adc
ljmp
mov
loopne
adc
push
and
lea
pushl
repz
mov
cli
dec
call
mov
xor
mov
mov
mov
in
mov
mov
sub
enter
sub
add
stc
mov
decl
inc
pop
adc
xor
insl
mov
loop
jbe
lds
mov
das
cli
decl
jns
fsubrs
cmp
je
sbb
stc
cmp
insb
cmp
lcall
decl
and
scas
stos
lds
negl
mov
xor
push
call
imul
test
rolb
testb
in
cld
cwtl
lcall
fs
mov
enter
cmp
mov
loope
and
decl
lret
push
adc
or
sub
dec
sub
stc
or
sub
lea
pushl
movb
std
push
stc
outsl
cmp
in
test
pop
scas
loopne
outsb
push
negl
pushf
ss
pop
push
js
lcall
nop
sub
cmpsb
or
test
hlt
inc
loopne
scas
mov
pop
arpl
jl
test
pop
into
ja
hlt
add
pushl
rcll
aas
cld
inc
pushf
jmp
insb
cmp
mov
sbbb
into
scas
add
inc
jmp
cmp
xor
aam
fcomp
repz
add
mov
int3
dec
pop
lret
sti
cltd
jbe
loop
jmp
lods
loop
cld
jb
mov
popf
loope
incl
adcb
es
flds
dec
jecxz
sarl
jmp
imul
dec
sbb
lods
loopne
sub
add
xchg
insb
push
aad
push
iret
lods
pop
or
je
dec
cld
cmp
sub
xor
fstps
data16
adc
xor
mov
idiv
dec
push
in
fildll
mov
inc
sbb
test
js
outsb
mov
sbb
cmp
or
xchg
lods
push
repnz
push
jnp
mov
out
out
insl
outsb
cmp
decl
and
inc
lock
insb
pusha
in
xor
pop
mov
inc
inc
inc
jnp
frstor
rcr
fadds
push
push
or
insl
push
in
mov
jg
into
xchg
ljmp
clc
incl
sub
xchg
sub
and
xchg
or
xchg
push
jb
lcall
cmp
add
pop
jae
or
sub
mov
adc
je
sbb
out
lods
sub
imul
jg
mov
lods
cmc
call
cmp
cltd
out
cmp
push
loopne
or
inc
ds
fbld
adc
stos
icebp
loop
das
js
test
inc
fstps
imul
pushl
cmpsb
dec
into
enter
dec
repnz
mov
inc
cltd
mov
or
mov
add
hlt
int3
decl
pop
je
mov
out
cltd
mov
ds
xor
fwait
cwtl
mov
fcomip
mov
mov
and
xchg
icebp
lea
in
and
cmpsb
je
inc
add
incl
lods
pop
xor
xchg
je
lahf
mov
dec
pop
xchg
call
push
dec
adc
clc
mov
ds
xchg
mov
xchg
dec
std
jmp
inc
and
and
adc
pop
lock
enter
jge
mov
nop
push
stos
add
sbb
lcall
xor
sbb
sub
or
sbb
cli
jbe
lock
ljmp
sbb
movsl
je
in
cmp
jae
ret
xchg
movsb
cmpsb
lods
xchg
movsb
imul
nop
jl
lret
sbb
mov
or
pop
lahf
in
jne
pop
mov
sbb
pop
inc
aaa
jnp
mov
adc
sbb
inc
movsb
push
daa
jbe
iret
das
leave
mov
fbstp
add
inc
cmp
out
repnz
sahf
xchg
clc
pushf
lcall
inc
mov
lcall
jg
pop
jo
jo
dec
pushf
lahf
push
mov
jns
aad
lahf
out
xchg
fwait
sbb
in
push
addr16
testl
mov
repnz
jecxz
pop
inc
test
mov
loop
add
sbb
dec
mov
inc
cmp
xchg
dec
je
decl
xchg
sbb
xchg
pop
scas
fmull
jp
mov
mov
lcall
in
pop
xchg
sbb
dec
std
dec
dec
push
add
pop
push
pop
pop
gs
in
in
xchg
and
mov
scas
lcall
cmpsb
mov
int
adc
cmp
rorb
dec
sbb
xorl
fimull
jp
push
push
insb
jne
and
test
push
cmpsl
mov
ljmp
xor
mov
cmpsb
cmpsl
lock
mov
fiaddl
leave
imul
mov
call
pop
mov
fsts
mov
push
add
pop
test
nop
sbb
inc
mov
js
mov
inc
xchg
cmpsb
mov
pusha
mov
cmp
ret
jns
aam
cwtl
shl
decl
cmp
fs
xor
divb
and
stc
xchg
jbe
out
dec
xchg
std
adc
and
pushl
scas
dec
sbb
xchg
cmpl
ljmp
inc
dec
pop
bound
hlt
movsl
xor
fdivrl
pushl
mov
ja
test
addr16
ret
mov
cld
mov
test
aad
push
sbb
dec
and
roll
lock
lock
incl
cmp
hlt
mov
dec
arpl
jnp
dec
repnz
std
xchg
push
decl
cmp
push
daa
adc
xchg
into
add
iret
repz
jp
lret
or
decl
int3
js
stc
jg
arpl
es
es
inc
sti
xchg
push
int3
jle
pushf
inc
mov
loop
mov
loopne
sbb
xchg
shrb
xchg
pop
lock
jb
inc
inc
fiadds
sub
and
incl
out
lea
ficoms
hlt
mov
clc
mov
shr
sbb
xor
pop
fldt
xchg
insl
jb
loope
aad
shll
and
inc
mov
jbe
sbb
pop
cmpsl
jbe
outsl
add
cs
int3
loopne
adc
fdivr
jmp
inc
cmp
xchg
pop
pop
icebp
pop
mov
and
imul
cmp
push
nop
mov
arpl
js
test
mov
test
cmp
cltd
sub
xchg
andl
fcmovu
aaa
inc
xlat
call
outsb
es
inc
mov
scas
aad
fdivr
hlt
inc
jo
mov
mul
xlat
ljmp
sbb
in
jecxz
pop
sahf
mov
addl
inc
push
insl
popa
dec
jg
sbb
daa
xor
aad
aam
nop
call
mov
add
jle
es
decl
mov
push
loop
imulb
mov
loopne
pusha
cmp
xchg
xor
cmp
bnd
sub
inc
les
nop
push
sub
mov
cmp
imul
pop
xor
dec
ljmp
rcrl
push
dec
nop
push
jo
aam
addr16
jmp
pop
jb
xchg
or
call
xor
ljmp
mov
imul
mov
je
in
shll
fisubrl
inc
xor
mov
pushl
lea
sbbl
or
push
jno
mov
mov
add
jno
mov
push
insl
movsb
std
xchg
or
andl
sub
lcall
jno
mov
mov
outsl
subl
mov
add
addr16
sub
inc
jno
decl
sub
ja
pop
mov
bound
jl
adc
or
mov
lcall
inc
scas
insl
sbb
mov
mov
stos
movsl
fistps
decl
aad
repnz
test
je
std
mov
cmp
xchg
out
dec
lcall
push
rorb
lahf
adc
outsb
mov
push
sti
rolb
insl
xorl
jmp
add
xchg
out
xor
cmove
push
std
lcall
enter
mov
mov
fsts
cld
loop
sbbb
scas
inc
sbb
loop
imul
call
shrb
not
fdivl
push
es
les
push
leave
ss
aad
decl
addr16
call
fwait
cmp
adc
adc
ficompl
enter
imul
sbb
std
cltd
push
lret
and
inc
jno
test
mov
mov
fisubs
jnp
dec
imul
stc
js
jl
mov
mov
add
mov
cmp
and
les
inc
loope
sbb
or
fisttps
jmp
aas
push
int
add
in
mulb
xchg
xor
sar
data16
inc
subb
adc
repz
pushl
mov
ljmp
push
and
push
cmp
jecxz
fildl
jg
insl
add
aaa
popf
and
das
xor
test
ljmp
add
ret
iret
mov
aad
mov
xor
xchg
cmp
fcmovnb
mov
cmp
call
pop
lds
xchg
and
int3
fiadds
or
rol
sti
mov
push
inc
aam
and
ja
jmp
ja
fsub
out
mov
sub
mov
popa
mov
push
mov
jmp
add
lahf
cltd
push
push
test
clc
mov
lret
and
mov
adc
inc
sub
in
fisubl
out
mov
pop
out
pop
dec
lock
decl
test
or
fbld
repz
lret
pop
sbb
or
decl
cmpsl
mov
dec
inc
ret
scas
aam
sbb
inc
mov
cmp
loop
scas
jmp
cmp
into
jne
pushl
cltd
push
insb
add
loope
cmp
pop
dec
sub
sub
xor
ljmp
push
push
pop
mov
in
mov
cmpsb
bound
fs
into
pop
iret
dec
lret
sbb
pop
lret
mov
call
xor
and
in
lret
rcrl
negb
mov
mov
jg
loop
and
out
mov
stos
jne
notl
pop
aaa
adc
call
lahf
out
mov
lret
lahf
jge
scas
shll
pop
test
mov
add
mov
stos
and
mov
repz
ficompl
inc
jecxz
xlat
mov
fistpl
movsl
outsb
pop
bound
ret
or
mov
mov
sbb
and
jl
cmpsl
aaa
out
pop
add
sub
push
rcrb
iret
je
lret
lock
clc
xchg
sbb
push
jmp
loop
decl
repz
icebp
fsubrs
jae
movb
or
les
jge
leave
jno
lret
imul
clc
fidivl
rcrb
pop
ds
inc
push
and
xor
dec
out
into
pop
shll
inc
add
mov
imul
pusha
xsha1
cmpsb
or
xchg
dec
cltd
or
pop
in
lds
dec
pop
mov
jmp
mov
jno
loop
andl
mov
sub
test
clc
mov
iret
or
pop
push
sbb
inc
sbb
stos
test
shrb
stos
jmp
insl
hlt
adc
imul
and
add
scas
out
pop
xor
scas
decl
xor
and
sar
sub
test
cmp
scas
mov
ljmp
sub
pushf
in
filds
jg
add
clc
sti
mov
shr
repz
ljmp
int3
jl
push
or
mov
mov
add
xchg
lods
dec
xor
incl
hlt
inc
mov
adc
jae
mov
xchg
mov
nop
ud0
mov
dec
jns
adc
adc
out
or
mov
incl
ja
ja
imul
imul
in
cltd
xor
call
mov
lods
rolb
lods
sub
test
decl
push
cmp
pop
mov
jl
jbe
cmp
ds
push
xchg
incl
cmp
movsl
lea
add
push
fwait
dec
rcr
xor
arpl
aas
mov
or
incl
mov
scas
std
or
and
sub
rcll
in
push
mov
in
dec
adc
out
enter
pop
fisubrs
add
repz
jle
or
mov
ds
sub
and
xchg
cli
mov
xchg
sbb
mov
mov
ljmp
xor
cli
subl
xchg
mov
popf
mov
sbb
mov
lcall
mov
cmpsb
call
xchg
movsl
dec
in
add
rclb
add
push
sar
das
cli
cmp
push
dec
mull
cli
aaa
inc
mov
mov
dec
inc
int
cwtl
cs
xor
ljmp
stos
push
sub
fwait
pop
fiaddl
aas
push
fists
loopne
dec
and
movsb
xor
lahf
jle
mov
jmp
scas
and
rcr
hlt
out
cli
lock
inc
push
ficoms
in
daa
ds
call
mov
loop
and
sti
repnz
push
jl
adc
and
xchg
scas
add
jmp
popa
mov
push
inc
iret
cs
mov
cmp
outsb
mov
jo
roll
fdivr
dec
lret
shlb
adc
inc
test
sar
cli
imul
jb
push
fincstp
push
sbb
dec
pop
jg
xorl
xor
sub
adc
mov
outsb
xchg
lret
call
jmp
scas
clc
lcall
adcb
adc
mov
insb
rcr
shrb
cmp
or
pushl
stos
and
xor
push
mov
cmc
test
pop
add
stos
push
inc
mov
dec
xlat
pop
dec
jns
jbe
xor
in
sub
andb
dec
popa
adc
les
mov
cld
add
adc
movsb
dec
scas
cltd
fwait
push
mov
xchg
add
jmp
ss
xor
push
jl
push
in
cs
push
inc
cmp
icebp
lcall
or
pop
add
cmp
cwtl
mov
mov
xchg
decl
out
jo
es
shl
jb
inc
cmp
push
fcompl
das
or
rorl
pop
sub
push
fwait
cmp
adc
push
mov
sbb
dec
ljmp
add
cli
add
mov
or
pop
fmull
lcall
inc
jnp
lods
dec
jg
jl
fs
daa
pop
xlat
popf
xchg
sbb
insl
push
mov
jae
andb
pop
aam
jg
mov
lcall
xlat
outsl
add
jp
dec
cltd
aas
out
and
popf
cmp
rolb
das
sahf
cli
subb
cs
lret
bound
cwtl
fstpl
jmp
push
jns
in
insb
mov
mov
pop
add
addl
cmpl
jae
sub
jne
dec
adcl
or
test
call
dec
xchg
pop
xchg
push
sbb
push
repnz
rorl
repnz
stos
xor
cwtl
push
fnstsw
xor
xchg
pusha
dec
lea
inc
push
or
push
pop
push
sahf
mov
and
and
adcl
ja
push
das
xchg
cmp
jae
xor
hlt
and
or
inc
cmp
mov
mov
test
int3
push
dec
sub
mov
ljmp
mov
mov
xchg
push
lds
sbb
mov
xor
push
rcl
xor
inc
nop
icebp
lds
dec
cltd
int3
lds
incl
xor
push
mov
lock
adc
adc
fdivr
jecxz
lcall
and
and
xchg
xchg
add
test
lahf
pop
loop
mov
imul
or
lret
sub
lea
pop
call
cld
jmp
push
mov
les
cld
cmpsl
pop
and
or
pushl
dec
jne
dec
ss
mov
inc
rclb
xor
mov
jne
dec
out
faddl
pop
sti
call
cmp
fsubl
mov
push
dec
push
loop
sahf
cmc
xor
or
in
insl
aam
je
pop
filds
loop
iret
mov
fucom
int3
sbb
imul
addb
ja
mov
das
dec
jmp
es
or
cmp
icebp
jmp
incl
cmp
xchg
imul
fcoms
insl
push
xor
pop
jle
mov
dec
adc
inc
pop
mov
xchg
orb
add
pop
ds
jg
loop
mov
dec
arpl
mov
push
sub
add
enter
notb
fwait
xchg
push
jnp
pop
mov
sub
dec
mov
cmp
cmpsl
shr
xchg
pop
std
lahf
lret
mov
call
sub
mov
inc
or
inc
dec
outsb
mov
and
lcall
int
cwtl
sub
rolb
push
cmp
std
sbb
inc
adc
mov
mov
push
leave
fwait
dec
cmp
dec
pop
fcmovbe
xor
rorb
decl
inc
add
fisubs
jg
jo
or
lcall
and
mov
jl
clc
ljmp
int3
enter
mov
or
adc
ljmp
in
dec
cmp
pop
dec
das
push
cli
push
cmp
mov
jmp
fisttpl
leave
or
or
insb
lahf
or
aad
xchg
xor
outsb
sbb
test
fimuls
mov
fimull
sub
adc
mov
xchg
int3
incl
mov
aad
xchg
mov
ds
decl
jecxz
adc
push
push
sbb
sbb
jmp
push
dec
mov
mov
clc
in
jle
push
ret
sbb
and
push
addl
ds
xchg
dec
pop
push
mov
xchg
fdivrl
lea
lock
imul
ljmp
nop
shl
xchg
pop
mov
popa
leave
lahf
aaa
jg
cld
xor
mov
cmp
and
and
lcall
push
stos
nop
neg
sarl
inc
cmp
adc
mov
ljmp
decl
and
lcall
pop
int
into
cmp
stos
stos
data16
test
test
cmpsb
push
mov
jmp
stos
xor
cli
call
outsl
sbb
in
arpl
add
or
mov
cli
fistpl
ljmp
add
adc
cmp
aas
dec
cmpl
mov
decl
pop
mov
mov
std
pop
mov
pusha
jg
enter
dec
jl
pop
sub
sti
pushl
pop
sub
dec
movb
out
shll
pushf
aas
clc
loop
call
je
inc
in
fstpt
rcll
pop
jecxz
adc
pushl
and
test
mov
adc
or
repz
jmp
add
lret
icebp
dec
pop
ja
in
cmp
das
stc
fbstp
mov
decl
and
cmp
out
scas
iret
push
lods
outsl
sub
adc
shl
ljmp
sub
pop
jl
idivb
lret
xchg
xor
in
jne
dec
clc
dec
push
jg
xchg
out
jge
lret
sub
fcmovnbe
out
out
xor
subb
jg
dec
pop
push
clc
pusha
mov
fcomip
in
sbb
jns
nop
inc
dec
loop
dec
movsl
js
pushl
mov
cltd
test
lahf
outsb
dec
jg
pop
jl
xchg
mov
mov
adc
dec
mov
xor
je
push
loop
mov
pop
or
std
inc
orb
mov
fsubs
incl
insb
sbb
xor
rcrb
xchg
add
pop
mov
adc
adc
incl
scas
add
mov
mov
pop
sub
fstpt
pusha
subl
mov
pop
pop
outsb
int3
fwait
cmpsb
xchg
stc
mov
mulb
das
sti
dec
test
notl
stc
jg
pop
cmc
cmpsb
cli
repz
and
mov
or
ss
jmp
std
cmp
repnz
mov
jecxz
cmp
xchg
imul
aas
fidivs
incl
xor
mov
lret
fucomip
pop
mov
ss
mov
and
std
hlt
lret
sbb
dec
cmp
das
insb
test
cmp
lret
mov
stc
pop
dec
or
mov
icebp
jns
je
inc
pop
add
mov
inc
nop
dec
pop
xor
lods
enter
movsl
jne
and
test
or
pop
pop
push
mov
dec
sahf
xchg
jg
outsb
pop
call
jns
jae
pop
loop
in
lcall
movsb
lods
call
inc
mov
in
inc
scas
cmp
dec
add
or
xchg
subss
sbb
sub
inc
loop
std
push
adc
leave
jmp
frstor
addr16
fisttpll
jo
mov
inc
shll
repnz
and
test
out
xor
cmpb
shl
sub
scas
cld
les
lcall
or
addr16
rcrl
xchg
ret
push
into
inc
and
xchg
cli
sub
sbb
jle
xchg
sbb
xchg
sub
and
negb
into
push
add
mov
aas
bound
cmp
cmp
lea
aas
add
movsb
insl
jge
sqrtps
test
cmc
inc
call
int3
rorl
xchg
ljmp
test
cli
xchg
sub
mov
test
mov
sbb
add
add
test
aam
and
mov
mov
xor
pushl
and
loopne
into
vmwrite
in
or
jnp
mov
js
testl
mov
fdivr
fnsave
or
testl
dec
adc
jg
gs
ret
fnstenv
ret
sbb
xchg
test
repnz
mov
push
sahf
cmp
jmp
lret
ds
or
or
cmp
sbb
cmc
inc
pop
incl
data16
mov
or
out
lds
xchg
les
pop
pop
fs
sar
incl
mov
pop
pop
pop
add
outsb
movsl
out
popa
rcll
pushf
dec
xchg
fisttpll
xor
pop
inc
push
arpl
ljmp
roll
xlat
add
cmp
jp
push
and
xchg
jg
xor
lcall
cli
ficoml
addr16
ds
sti
idiv
bound
movsb
fwait
call
mov
sub
mov
xor
sahf
pop
cmp
addr16
test
call
imul
mov
out
push
mov
jmp
jnp
add
mov
mov
mov
xchg
pop
cmp
inc
sahf
jle
cmp
rep
sub
jp
call
shlb
outsb
dec
shrl
sahf
rolb
xchg
xchg
sbb
stos
push
jg
outsb
cli
aad
mov
icebp
fnstcw
lret
fwait
aas
adc
fisubs
add
jmp
aam
jmp
push
cwtl
cltd
fcompl
fisttpl
ror
sbb
ljmp
out
lahf
out
into
loop
inc
dec
xchg
bnd
cmpsl
fists
into
lods
mov
pop
sarl
mov
adc
xchg
orb
push
cs
inc
ljmp
jp
leave
push
pop
xchg
dec
jl
es
inc
out
leave
fisubrl
jg
dec
mov
scas
clc
jg
and
aam
xchg
push
push
cld
aad
lods
dec
imul
call
xor
data16
xor
rclb
sbb
cmp
xchg
aad
nop
lcall
ss
ss
pop
outsb
or
push
xchg
mov
lods
adc
lock
insb
fisubl
outsl
jp
mov
cmp
sub
popf
push
or
shlb
std
lcall
movsl
jg
push
push
and
push
mov
mov
imul
inc
sbbb
dec
mov
ljmp
mov
mov
push
push
sbb
cmp
test
pop
cld
call
jnp
enter
in
mov
and
roll
xor
mov
or
mov
pop
push
sbb
mov
icebp
ljmp
jbe
cmp
fldl
jg
mov
daa
cmp
ljmp
adcl
lcall
ljmp
jl
into
and
sahf
add
loop
adc
mov
jle
sub
sub
jmp
or
iret
dec
fsts
cmp
ss
int3
loop
or
test
lret
mov
push
cmp
ds
out
icebp
jbe
xor
add
dec
pop
cli
mov
rolb
ficoml
ljmp
in
les
arpl
outsl
in
mov
jg
sahf
mov
or
inc
hlt
dec
loop
mov
mov
test
outsl
cmp
arpl
popa
xchg
stos
les
jecxz
sub
sbbl
fcomip
aam
xor
in
push
xchg
sub
je
lock
or
xchg
decl
in
ljmp
mov
push
xlat
fdivrl
sub
rcll
pusha
jo
stc
mov
ljmp
pop
pop
inc
stos
adc
lahf
sbb
pop
xor
je
pop
jns
sub
sbb
incl
ficompl
invlpg
aas
stos
pop
test
mov
sub
adc
cwtl
xchg
fs
fistps
xchg
xchg
sub
xor
sbb
adc
pushl
mov
scas
pop
jno
out
push
xchg
dec
ret
cmp
mov
adc
xchg
in
aas
sub
inc
and
incl
cmp
dec
add
cmp
mov
in
orb
packssdw
push
xchg
cmp
pop
xchg
imulb
mov
notb
lret
mov
aas
inc
cltd
xchg
ficoml
arpl
in
pop
sti
mov
pop
pushw
decl
lock
popa
and
add
pop
fs
and
adc
mov
mov
or
inc
lret
pushl
test
pop
mov
sub
xchg
dec
aam
movsb
xor
sbb
mov
cmpsb
lods
and
ret
sahf
cmp
rorl
xchg
sahf
and
incl
xchg
mov
pop
and
mov
xchg
jle
lahf
data16
mov
inc
adc
xchg
scas
aaa
lret
push
ffree
jecxz
loopne
fiadds
mov
cmpsb
xor
outsb
and
mov
pop
cmp
loope
inc
pop
mov
and
cmp
xchg
xchg
inc
cmp
xchg
lods
push
fdivp
pushl
xor
mov
inc
repnz
sub
pop
mov
add
mov
jle
xchg
cmpsl
lea
inc
push
or
call
orl
push
sub
nop
stc
xlat
cmp
and
and
pop
shlb
das
and
leave
in
mov
leave
nop
imul
sub
jle
rcrl
imul
xlat
or
jbe
ljmp
cld
add
jo
push
pop
movsl
dec
adc
shrl
aas
mov
push
jecxz
pop
sbb
ds
adc
jne
ljmp
insl
sbb
pop
xor
rcl
cmpsl
clc
lret
or
negl
fsubl
or
mov
cmpl
out
cli
push
es
loopne
push
mov
imul
int3
add
xchg
ljmp
movsb
sbb
jecxz
sbb
xor
jmp
jmp
mov
mov
ret
dec
hlt
mov
data16
mov
pop
fldenv
jmp
cltd
loop
dec
mov
lret
cmp
xor
xchg
dec
inc
andl
add
fs
ljmp
dec
js
inc
add
movsb
jbe
mov
inc
in
loop
loop
lretw
mov
out
rorl
in
or
mov
movsl
rcll
pop
xchg
out
xor
aam
add
sub
sarb
stos
out
clc
mov
insb
add
push
ljmp
jp
mov
push
subb
das
sar
xor
dec
int3
fmull
xchg
cmpsb
dec
aam
jne
test
cmpl
add
fwait
adc
mov
aaa
xchg
out
mov
sub
inc
jno
mov
fs
fbld
int
cmp
push
stos
ret
loop
dec
outsl
cli
decl
in
lret
shrl
inc
jb
jns
and
mov
mov
clc
xchg
outsb
pop
xor
add
stos
push
mov
push
adc
lds
stos
test
rclb
adc
leave
jp
imul
mov
sub
stc
decl
in
add
xchg
push
fwait
xchg
pop
xor
out
jns
and
in
add
imul
add
sub
add
xchg
mov
ljmp
lods
loope
lock
pushf
imulb
pop
mov
sub
xlat
adc
lcall
js
xlat
sti
test
mov
jg
lods
movsb
mov
fbstp
adc
mov
inc
scas
mov
xor
mov
jge
frstor
xor
imul
out
mov
outsl
xor
pop
xor
mov
or
mov
mov
jg
push
incl
loop
xor
mov
in
mov
outsb
adc
mov
cmp
lcall
call
outsb
sbb
les
jl
adc
and
xchg
or
test
adc
mov
xchg
sbbl
mov
sub
push
test
mov
ret
sbbb
in
ja
bound
xchg
ficoml
mov
ljmp
add
mov
jne
jo
add
sub
sbb
adc
incl
adc
fistps
cmp
xor
xor
cmc
lahf
jb
iret
mov
mov
mov
sbb
nop
imul
pop
sub
ds
leave
xchg
lea
inc
push
jmp
cmp
inc
std
push
xor
test
ret
and
mov
loope
stc
test
mov
sub
pushl
fcmovnbe
insl
or
aad
lahf
fmul
sub
xchg
mov
push
das
xchg
scas
mov
out
jl
cli
repz
or
call
jnp
aad
lods
test
xchg
sbb
ret
rcrb
sbb
pop
adc
or
arpl
mov
ljmp
jecxz
inc
add
cmpsb
xchg
call
cmpsb
ds
push
jns
cmp
sub
inc
jns
je
shll
ja
and
mov
adc
jle
and
pop
xlat
ljmp
mov
enter
pop
xor
call
inc
add
cmpsl
fyl2x
mov
js
pop
icebp
push
and
sub
jp
cmp
lock
dec
outsb
cli
mov
mov
int
mov
out
add
push
mov
repnz
inc
lret
cwtl
in
imul
lea
sti
mull
das
or
mov
int
inc
xchg
pop
ret
call
push
pop
call
insl
mov
xor
incl
cld
into
pop
pop
xchg
push
into
pop
mov
loop
and
pop
dec
cwtl
hlt
inc
int
pop
or
jae
cmp
mov
ds
outsb
js
push
out
decl
or
sub
xchg
and
mov
negb
cs
pop
sbb
ljmp
icebp
inc
and
incl
sti
dec
stos
push
fdivr
push
in
je
ret
mov
int3
mov
sub
jg
outsl
sub
sub
sbb
stc
fiadds
mov
cli
jmp
in
in
jg
pop
pminub
dec
jg
lock
xchg
mov
dec
add
pop
pop
sub
ljmp
jl
subb
cltd
inc
sbb
in
insb
enter
aam
jns
int3
mov
loope
imul
stc
sahf
or
int
xor
cmp
xor
cmp
fisubrs
push
push
lret
jp
aas
and
mov
inc
jb
adc
incl
inc
mov
dec
les
aam
sti
adc
das
pusha
dec
lret
clc
jmp
mov
pop
mov
sub
sub
sahf
sbb
mov
jge
inc
in
int3
adc
fdivs
adc
scas
sub
push
jle
xchg
outsb
into
clc
into
popa
repz
mov
push
mov
mov
int
cli
xorb
mov
je
ret
adc
cmp
ja
into
aas
or
repnz
xlat
ljmp
jmp
xor
jb
imul
mov
mov
jnp
push
sub
mov
add
je
add
push
mov
jmp
lock
push
aad
push
arpl
sti
imul
lods
and
xchg
ret
push
jmp
mov
sbb
xlat
inc
mov
push
lea
std
xchg
fstpl
ror
lea
stos
shrb
into
pusha
jp
dec
cmpsb
pop
lods
push
xor
adc
xchg
outsl
loop
lcall
mov
loopne
adc
into
ss
and
xor
and
movsl
push
push
mov
pushl
cmp
loopne
and
cmpsb
mov
jecxz
mov
mov
arpl
sysret
ljmp
xorl
push
push
sub
cmp
lret
mov
pop
push
lcall
test
arpl
cmp
jno
cmp
jns
aaa
dec
imul
pushl
pop
push
pop
xchg
pop
mov
mov
ss
dec
mov
mov
mov
cmp
mov
jmp
sahf
dec
xchg
cmp
xor
push
rclb
jl
lcall
dec
mov
mov
decb
pop
add
mov
mov
bound
xor
incl
in
jb
inc
mov
adc
aad
fbstp
or
lcall
pop
call
std
pop
gs
or
repz
dec
jg
mov
add
cmpb
xchg
out
lcall
lods
int3
loope
add
jne
data16
je
push
sub
inc
dec
in
movsl
jae
xchg
ret
pop
rcr
aaa
loopne
call
int3
scas
mov
xor
lcall
mov
shrb
js
cmp
sub
aam
mov
xor
jecxz
xchg
jae
ss
pop
or
imul
lcall
and
pop
xorl
notb
ljmp
in
jecxz
mov
cmovg
push
or
dec
insb
test
scas
test
dec
mov
std
jae
fwait
jmp
push
or
les
sbb
dec
addl
pop
push
movsb
sbb
ljmp
lcall
xor
sub
push
out
loop
cltd
daa
call
imul
mov
das
pushf
push
jg
stc
outsb
and
imul
jg
and
mov
jne
in
mov
mov
dec
rcl
mov
insb
lods
adc
sub
aad
mov
aad
jo
nop
or
jp
sbb
pop
and
cli
xor
movsb
adc
cmc
nop
pop
jns
mov
movsl
mov
xchg
pop
pop
jge
push
stos
xchg
add
test
mov
pop
cmp
std
adc
in
leave
push
and
add
test
pop
sti
je
test
mov
jo
js
sbb
data16
call
xchg
cmp
cmp
xchg
pop
sub
mov
js
in
idiv
ja
clc
pop
push
cmp
sub
pop
and
pop
cmpsb
mov
jbe
xchg
fildl
push
pushl
repnz
cmp
ja
mov
rcrb
sub
or
popa
add
add
cli
in
xor
add
push
lcall
stc
sbb
fadds
mov
xor
mov
int
stos
ficoms
push
addl
dec
sahf
enter
cwtl
pop
adc
inc
push
test
dec
sbb
jns
int
aaa
dec
lahf
push
pushl
aaa
iret
mov
repz
ret
mov
ror
ja
mov
bound
adc
loope
and
dec
in
call
jno
punpcklbw
dec
incb
mov
mov
or
mov
pusha
das
mov
jg
call
mov
lods
sub
jne
xchg
fs
scas
int3
push
push
add
imulb
cli
inc
or
mov
cmc
fcmovnbe
pop
jge
pop
sbb
mov
xchg
push
outsl
fstl
fisttpll
push
adc
repz
insl
or
imul
nop
test
mov
ja
and
nop
cmpsb
shl
ja
or
imul
ljmp
and
adc
les
es
push
jae
mov
add
add
dec
repnz
ljmp
push
cwtl
cmovs
negb
inc
xor
fisubrs
xchg
out
and
mov
repz
mov
ljmp
stos
je
mov
or
mov
push
fildll
ret
ja
mov
pushl
cmpsb
xor
jge
jge
or
adc
and
xchg
cmp
inc
cwtl
lcall
mov
test
test
dec
xchg
inc
pusha
sub
mov
jle
ljmp
rorb
popf
fnstcw
dec
movb
in
mov
out
push
dec
mov
out
lock
insb
mov
mov
cld
mov
push
mov
ret
repnz
jmp
pop
repnz
test
mov
sbb
add
xchg
adc
mov
inc
mov
add
movsl
sbb
incl
fsubrs
sub
in
or
mov
sarb
fnstcw
mov
mov
cwtl
mov
pcmpeqb
add
adc
sbb
inc
sub
jmp
sub
push
fistpl
nop
mov
int
mov
push
mov
push
arpl
jg
out
fsubl
push
add
scas
xor
push
dec
incl
push
mov
stos
inc
je
adc
repz
stos
xchg
js
mov
clc
add
aas
inc
testb
cwtl
outsb
push
dec
mov
push
inc
movsl
push
stos
shll
inc
call
mov
xor
fdivrp
jmp
jecxz
bound
or
mov
ja
inc
xor
pop
cld
icebp
cmp
mov
push
inc
xorb
es
aaa
stos
add
std
mov
decl
daa
or
push
jl
test
inc
std
sub
xchg
pusha
pop
out
call
sbb
pusha
mov
xchg
ss
arpl
sbb
shll
or
stos
incl
cmpsb
rcrb
sub
adc
out
cmp
lcall
arpl
test
adc
hlt
cmp
fisubrs
add
movsl
call
inc
les
push
sbb
mov
adc
lock
ljmp
adc
sub
or
addr16
aam
stos
mov
arpl
lcall
push
push
sub
push
mov
or
push
sbb
or
or
pop
sbb
call
xchg
pop
loopne
cmp
mov
jno
or
mov
xchg
lcall
sub
stos
out
cmp
add
jmp
mov
aaa
fucomip
pushf
jae
pushl
mov
lret
pushf
push
movsl
sbb
cmp
pop
sbb
cltd
adc
dec
mov
and
decl
outsb
adc
mov
int3
jle
push
mov
pop
orb
das
insb
pop
mov
pushl
sub
shrb
scas
cmpsb
mov
lahf
pop
mov
xchg
lcall
cmpb
clc
jmp
sbb
inc
mov
in
push
xor
in
inc
ret
fldl
mov
es
cmp
cmpb
xchg
push
movl
decl
cmpsb
inc
xchg
push
insb
sahf
cmpb
test
fcompl
xchg
push
mov
clc
ljmp
inc
loopne
xchg
pop
add
lcall
pushl
std
push
dec
adc
push
lods
cmp
or
push
sbb
dec
mov
cmp
sbb
sub
out
dec
jae
mov
jg
or
loop
jmp
fwait
push
sub
mov
jo
and
cmpsb
clc
jo
scas
inc
iret
leave
popa
dec
or
mov
mov
mov
popf
mov
xchg
aad
xchg
nop
jp
imul
test
dec
or
xor
jnp
sub
push
into
shll
push
rorb
fwait
movsl
adc
add
mov
lock
aas
lea
imul
int3
cmp
xor
jmp
lret
stc
xor
out
pusha
or
iret
jbe
cltd
loopne
out
push
test
into
fnstsw
jmp
fwait
arpl
add
std
xchg
fdivs
mov
je
sub
or
pop
lods
mov
inc
sti
sti
ljmp
test
stc
sbbl
sar
or
call
xor
cwtl
lds
mov
sub
and
testb
rorl
out
mov
dec
mov
test
cmp
fidivl
stc
idivb
mov
pushf
out
jnp
cld
inc
lods
ljmp
cmc
sahf
pushf
ret
out
xchg
out
imul
cmp
rcrl
decl
jl
mov
rcrb
das
pop
jmp
das
pop
add
cld
daa
leave
ljmp
mov
lret
nop
clc
inc
cmp
andb
inc
test
ljmp
call
cltd
addr16
push
call
sbb
loopne
jmp
pop
pop
hlt
ljmp
adc
decl
mov
and
mov
push
in
jecxz
stos
xchg
xor
xor
mov
int3
rol
bswap
out
xlat
dec
loope
xrelease
dec
in
insb
ljmp
lcall
sub
pop
into
push
or
call
dec
mov
sub
pushf
popf
arpl
stos
mov
inc
ljmp
xorb
sbb
das
mov
jmp
cmp
adc
lock
dec
push
shll
repnz
maxps
popa
jb
push
push
dec
xor
decl
jbe
scas
int
cmp
scas
in
mov
xor
in
add
push
jnp
into
push
out
cwtl
stos
xor
cmp
bound
lds
call
push
mov
dec
les
mov
cmp
jo
pop
int
arpl
inc
push
decl
xchg
mov
loopne
test
cli
jl
cmp
int
movsb
test
xchg
pop
mov
push
adc
and
push
jp
add
addr16
cmp
daa
in
pop
div
fisttpl
push
dec
xchg
cmpsb
in
pusha
sub
bound
push
add
pop
xor
orl
into
pop
rolb
and
bound
rol
mov
stc
and
sub
mov
and
mov
inc
fs
push
fcmovnbe
mov
sub
decl
rolb
mov
mov
fistl
int
mov
xor
add
decl
fdivl
xchg
cmpsl
dec
stos
push
mov
clc
inc
push
adc
cltd
dec
icebp
fs
fdivrl
test
adc
sbb
push
adc
dec
sub
lcall
clc
jne
dec
cwtl
xchg
inc
daa
popf
pop
ds
dec
inc
das
pop
popa
fcoml
ljmp
roll
fyl2xp1
in
xor
in
or
cwtl
popf
fcomps
cltd
mov
das
int3
sbb
jmp
jl
dec
repz
sbb
jle
mov
lock
pop
jno
push
add
xchg
mov
inc
inc
and
in
mov
lock
jo
inc
push
setl
mull
mov
sbb
adc
mov
sub
jmp
lods
mov
push
adc
mov
xor
push
imul
notb
sahf
jae
outsl
ficomps
decl
mov
pusha
call
clc
xchg
dec
xchg
es
cmp
pop
call
dec
push
sub
shrb
fimuls
jmp
orl
xorl
repz
out
pop
cwtl
xor
sbb
pop
pop
movsb
xchg
les
aam
rolb
fstl
popl
and
dec
xor
push
int
adc
mov
aaa
push
inc
jnp
jge
cmp
rorl
repz
fidivl
cwtl
test
decl
mov
mov
dec
mov
and
leave
fildll
inc
les
inc
data16
mov
jmp
ds
add
mov
shll
inc
sub
sub
jg
fcmovnbe
push
test
pushl
test
xchg
into
pusha
jno
inc
jbe
sub
xchg
mov
add
das
pushl
push
loopne
pop
xlat
lret
xor
cld
mov
lock
cmc
add
ret
mov
ret
aaa
std
mov
mov
dec
imul
rcl
adc
pushl
imul
aaa
jns
cmpsb
stc
sub
inc
enter
stos
idivl
ret
fwait
ljmp
or
mov
pop
push
add
xchg
jne
xlat
into
jmp
jnp
and
jae
inc
push
outsb
mov
popa
sub
sbb
push
or
decb
inc
daa
lea
mov
sub
mov
lods
xchg
and
icebp
int3
adc
push
push
nop
mov
sub
and
cld
call
jne
outsl
stc
call
out
int3
dec
mov
jmp
sbb
aas
leave
jae
push
mov
xchg
rep
jmp
fwait
loopne
jg
decb
inc
add
loop
sub
loope
outsl
mov
xchg
out
test
inc
call
pop
mov
xchg
mov
adc
mov
push
pop
leave
cmp
push
push
pop
data16
nop
jg
jmp
fxch
lea
jbe
hlt
subl
shl
adc
add
test
jp
dec
movsb
mov
cli
mov
stos
shlb
add
leave
pop
cmpsb
mov
pop
inc
mov
lea
jg
decl
test
cmp
sbb
je
addb
jns
cs
call
pop
inc
loope
test
in
jbe
xor
sbb
mov
cmp
test
hlt
pushl
lret
loopne
dec
int
mov
lret
cmp
jno
and
clc
push
mov
lret
add
mov
loopne
das
mov
jge
xor
jge
ret
data16
lods
incl
movb
jle
hlt
inc
inc
fiadds
dec
push
ljmp
cwtl
mov
dec
fadd
mov
test
lods
outsb
mov
mov
or
inc
std
popa
lahf
jg
bound
out
pop
and
test
out
inc
mov
mov
cmpsl
jb
inc
mov
add
addr16
and
incl
and
stos
jnp
scas
mov
sub
mov
test
mov
incl
cmp
repz
pop
xchg
jns
mov
cmp
lods
dec
sbb
daa
fdivr
jg
mov
js
dec
ficoml
dec
movb
imul
clc
es
ljmp
ret
out
mov
icebp
and
outsb
stos
fwait
mov
sbb
dec
xor
scas
cli
call
jne
into
xchg
xor
cmp
mov
mov
sbb
imul
call
imul
inc
inc
mov
daa
adc
push
sti
pop
mov
outsl
pop
cmp
push
dec
push
dec
mov
decl
mov
xchg
sbb
fistpll
pusha
mov
div
dec
ss
mov
sbb
dec
aas
jmp
xor
loop
pop
icebp
lods
xchg
mov
mov
add
mov
ljmp
mov
rcll
int3
jo
lcall
into
sub
out
cli
mov
clc
lea
clc
out
leave
mov
sti
sbb
adc
ret
sbb
pushl
or
xchg
inc
test
push
mov
lods
push
push
je
lahf
jecxz
pop
push
jo
or
call
mov
ljmp
mov
fcoms
inc
pop
lcall
jg
sbb
aaa
imul
cli
jo
add
out
sti
aas
ljmp
iret
sbb
sbbb
pop
adc
maskmovq
pop
adc
push
cmp
shll
xor
fmuls
ja
repz
push
setge
xlat
or
add
call
xor
sahf
stc
gs
mov
add
daa
cmpsb
cmc
jg
dec
xchg
sbb
std
sbbl
dec
loopne,pn
clc
push
pop
xor
decl
xorb
sbb
and
dec
cli
pop
je
cmp
pushl
mov
xchg
cmp
jl
cltd
imul
dec
add
test
xor
jmp
mov
out
xor
mov
add
pop
insl
mov
mov
xchg
push
shll
sbb
int
pop
sub
inc
cltd
ljmp
jns
lods
mov
xchg
cmp
lods
in
les
sbb
ljmp
faddl
nop
imul
lea
jmp
add
and
cmc
dec
dec
icebp
insb
xor
add
aaa
push
pop
bound
out
mov
fsubrs
fbstp
lock
mov
inc
mov
mov
iret
mov
mulb
loop
pop
cld
jmp
inc
push
xchg
test
cmp
ret
popa
imul
loop
mov
ss
jae
std
dec
mov
lahf
push
jmp
pop
cmpb
orb
push
gs
scas
rcr
sub
shrl
pusha
jl
push
mov
add
pop
fcompl
add
das
in
cmp
mov
loope
push
push
aam
pop
std
xchg
sahf
lret
dec
xchg
mov
mov
mulb
test
outsb
push
or
ljmp
lods
std
cmpsl
and
ret
xor
push
adc
decl
cmp
insl
ds
imul
pushl
dec
lods
mov
daa
lods
lods
xor
gs
cmpsb
pop
test
incl
stos
call
lods
inc
sub
pop
subl
push
aaa
xor
decl
loope
movsl
push
push
mov
or
and
sub
pop
loop
sbb
sub
das
mov
into
or
call
gs
mov
repnz
xor
jne
adc
pusha
fbld
in
sub
sub
xor
sbb
xor
and
ljmp
sahf
push
sub
mov
icebp
fistps
or
and
jmp
and
lcall
add
push
inc
pop
jbe
test
icebp
shrl
iret
dec
pop
dec
dec
fmuls
pushl
pop
fwait
mov
inc
jge
stos
cmp
or
xchg
lods
or
sub
push
pop
cli
cwtl
repz
clc
mov
out
decl
xchg
je
scas
je
pop
dec
xchg
mov
mov
inc
xor
and
cli
fbstp
push
lock
ljmp
jb
jecxz
pusha
jno
decl
ret
adc
aaa
test
jg
ljmp
cmpb
sub
addl
adc
ljmp
mov
repz
lcall
dec
dec
ficoms
pop
jno
rep
psubsw
dec
adc
in
push
cld
stos
lods
cmp
test
or
ret
mov
push
push
ja
sbb
ljmp
sbb
sbb
sbb
dec
in
lea
ret
lcall
pop
cmp
mov
pop
mov
js
sbb
outsb
scas
sub
out
pop
cltd
and
ja
pop
push
incl
or
hlt
add
repnz
lock
data16
pushl
push
adc
movsl
scas
rcrb
stos
push
xor
sbb
pop
rorb
push
or
scas
mov
je
aam
jg
pop
cmp
and
fcomps
clc
ss
push
int3
jbe
dec
dec
fwait
adc
mov
cld
adc
or
js
add
push
xchg
mov
sub
je
dec
jge
mov
push
adc
mov
push
repz
repnz
call
arpl
fdivs
std
and
imul
nop
cmp
pop
inc
sti
adc
mov
sbb
addr16
jmp
push
jg
xor
fs
push
leave
in
or
pop
jmp
mov
arpl
cmp
incl
shll
push
push
icebp
std
jp
cmp
jb
lods
cld
pop
mov
out
jno
inc
ret
pop
ret
inc
push
cmp
dec
fistl
lcall
out
iret
enter
rcrb
aas
sbb
pusha
xor
push
mov
jge
sbb
pushf
insl
cmp
std
push
fcomip
popa
in
insl
adc
xor
repz
sbb
in
js
adc
jo
dec
dec
jg
cmc
std
js
int3
popf
dec
xor
add
xchg
xchg
xchg
lods
fildl
ljmp
test
in
repz
pop
pop
push
mov
in
mov
std
movsl
and
or
jae
cmp
incl
loope
cmp
adc
mov
in
fsts
icebp
lcall
int
inc
lcall
fwait
movsl
jb
inc
pop
jp
add
xchg
pushl
fmull
xor
fiadds
cmp
popf
adc
fisubrs
xchg
hlt
mov
pop
loopne
incl
pop
inc
dec
push
pop
lods
rolb
push
in
into
jb
scas
adc
ljmp
or
fildll
out
insl
mov
or
add
cwtl
pushf
cs
inc
pushl
insb
insl
lock
in
push
add
lret
or
bound
sbb
call
or
aad
jnp
cmpsb
dec
jmp
pop
imul
ret
cmpsl
lods
popf
pop
fisubrl
inc
xchg
mov
jg
dec
cmp
lcall
mov
sbb
xchg
pusha
jmp
je
test
fdiv
lea
les
sub
iret
mov
mov
dec
push
ret
decl
push
sti
orb
jnp
stc
jns
in
aaa
add
adc
adc
lcall
dec
in
pop
adc
pop
aas
lods
sub
lods
adcl
out
loope
dec
xchg
rorl
bound
repnz
call
fnstenv
pop
add
lods
dec
jmp
sub
popf
mov
dec
ljmp
cli
test
cmc
xor
xor
push
jo
fisttpl
lock
fsubs
loopne
ja
sub
shlb
inc
xchg
jp
dec
insl
xor
push
ret
lret
loope
inc
ljmp
clc
outsb
push
stos
push
add
and
pushf
test
test
xor
push
loope
repnz
jg
xchg
or
or
mov
sub
les
ret
sahf
sub
sbb
call
std
ljmp
fsts
and
jge
int
insb
leave
dec
push
out
mov
mov
mov
push
adc
data16
sbb
std
xor
adc
int
stos
jno
pushl
push
out
div
nop
push
or
stos
and
dec
movsl
test
lcall
dec
aaa
sub
mov
aad
pop
ljmp
out
dec
ret
leave
fiadds
add
and
loop
sub
cmpsl
call
and
xchg
fisubl
repnz
mov
in
dec
jle
stos
pop
out
test
push
dec
ljmp
xchg
push
xor
jg
jg
pop
testb
bound
push
cmc
jnp
sub
sbb
cmp
in
icebp
pop
lcall
mov
sbb
fmuls
mov
sbb
and
inc
movl
pushl
daa
int
cmp
cmp
int3
leave
shlb
aam
or
std
jmp
inc
sarl
outsl
sub
lds
mov
push
sbb
push
sti
inc
es
loope
sarb
mov
xor
cmpsl
pushf
push
inc
in
les
pop
ljmp
loopne
xchg
sbb
jg
cmp
sahf
adc
mov
fisubrl
lret
in
call
ljmp
or
and
aam
push
mov
push
mov
mov
fmull
cmpsb
test
add
in
fdivp
cmp
ret
es
lret
shlb
incl
cli
arpl
loope
sbb
ret
pop
mov
jle
aad
jle
adc
insb
jmp
incl
popl
out
pop
test
sbb
mov
scas
xchg
cmp
mov
sti
in
imul
shl
lret
xchg
jecxz
sti
pop
jge
cmp
mov
cmp
push
imull
xlat
imul
ret
dec
dec
sbb
std
out
adcb
std
inc
jle
sbb
testl
lcall
cltd
adc
flds
fsubs
xchg
out
shr
or
push
cmp
ja
dec
lock
sbb
push
hlt
push
incl
je
pop
jo
jb
xchg
mov
push
ss
call
roll
dec
and
xor
xchg
or
shr
int
mov
dec
add
decl
pop
push
daa
scas
push
mov
sbb
and
pop
jle
push
lock
das
and
stc
test
jmp
mov
fcoml
lods
shll
fisubl
shl
or
icebp
or
test
jae
fists
decl
pop
sbb
ret
sub
sub
mov
test
push
arpl
pop
adc
fcomip
mov
popa
out
mov
lds
mov
mov
lret
lret
out
cmp
mov
or
cmp
inc
push
mov
bound
stc
mov
faddl
int
dec
jo
sbb
or
cwtl
lret
dec
aaa
sub
add
xchg
jecxz
ja
mov
mov
sbb
in
das
shll
cmp
mov
fisubrl
jp
sub
call
incl
or
or
imul
shlb
shll
decl
movsl
fldt
rcr
std
jecxz
stos
mov
cltd
mov
lcall
stos
mov
dec
mov
mov
pop
push
adc
sub
in
scas
clc
cmp
daa
into
push
into
sub
add
loop
cmpsb
ret
loope
jmp
or
shrl
hlt
scas
or
ret
pop
adc
or
ljmp
or
dec
push
stc
out
fldcw
push
push
lret
adc
sub
iret
dec
xor
jb
push
xchg
cmpsl
or
pop
cmp
bswap
lods
jmp
jno
mov
int
jecxz
decl
jp
mov
cwtl
dec
aad
xchg
sub
cmp
lcall
ljmp
mov
xor
pop
adc
and
test
inc
xor
sbb
xchg
addl
test
pop
dec
sbb
dec
lcall
aaa
ds
mov
ljmp
push
or
mov
pushf
mov
dec
cmp
mov
mov
fldenv
push
sahf
int3
fdivrl
sub
push
cltd
inc
xchg
cmp
push
mov
movsb
outsl
adc
jne
incl
dec
insl
nop
and
mov
pop
lcall
sbb
xchg
bound
out
adc
daa
stc
jl
add
push
pop
jns
pop
add
mov
jno
incl
mov
mov
pop
mov
or
mov
inc
mov
bts
decl
mov
out
push
in
xor
sahf
pop
imul
xchg
mov
test
ja
inc
mov
cmpsl
testb
or
and
xor
into
push
adc
fsubrp
aas
shlb
xor
pop
mov
inc
add
call
inc
fwait
lahf
xor
cmc
adc
das
addl
js
outsb
sahf
decl
jae
inc
pop
dec
cli
hlt
divl
sbb
lcall
ret
push
adc
addr16
jmp
test
sbb
push
sti
push
push
or
sub
cld
lods
fstpl
jecxz
dec
jmp
ret
pushl
shrb
pushf
cmp
cli
sbb
jnp
adc
sahf
add
call
in
pop
inc
test
cmp
aaa
cmp
adc
into
mov
mov
jo
fnstcw
data16
jmp
test
aas
insb
out
out
add
ljmp
lret
xlat
jnp
ljmp
dec
push
sbb
pop
push
sbb
ja
fiaddl
fwait
and
sbb
dec
incl
mov
clc
fistps
in
xchg
subb
popa
mov
lret
movsb
dec
push
cli
fisubrs
clc
decl
cmc
push
aad
or
jb
clc
call
inc
mov
jmp
adc
setno
cmp
loopne
negb
aaa
movb
xor
pop
out
loopne
xchg
inc
imul
movl
sub
jp
jle
xor
incl
pop
push
pop
sar
or
push
sub
jmp
pop
les
mov
sbb
push
lea
scas
aaa
mov
mov
imul
jle
addr16
cmp
sbb
push
pop
inc
test
jg
cwtl
dec
incl
enter
fnsave
out
jb
les
repz
mov
mov
mov
jmp
aas
loopne
divb
sbb
jecxz
out
scas
lahf
sbb
xor
add
push
into
cltd
mov
xchg
xchg
lcall
mul
sub
cmp
aam
aas
xor
out
sub
mov
fs
inc
pop
push
pop
or
inc
pop
insb
pop
insl
pushf
repnz
lcall
imul
stos
lods
test
call
aam
fcoms
ljmp
aas
add
loop
and
push
ss
jae
test
addr16
or
push
mov
and
orl
ljmp
and
push
fwait
fwait
add
sar
adc
cmc
incl
enter
lods
mov
push
sbb
mov
adc
incl
fmull
in
jnp
lret
into
xchg
jb
lcall
decb
dec
dec
mov
clc
pop
add
jb
mov
push
sbb
incl
jae
add
inc
or
dec
sub
jmp
std
test
ja
incl
ss
loope
out
call
xchg
nop
aad
frstor
ds
data16
cli
inc
jecxz
decl
jmp
or
and
repz
fildl
into
or
mov
xchg
cld
pushf
mov
sub
push
imul
movq
inc
sbbb
push
add
sbb
pushl
nop
jns
jecxz
pusha
sbb
sub
repz
xchg
fbstp
xchg
cmp
add
dec
pop
dec
icebp
jmp
cmp
in
out
pop
jge
sbbb
roll
test
lcall
mov
loope
in
test
movsl
sub
mov
push
addr16
push
pushf
pop
lock
mov
ret
adc
push
pop
push
mov
in
push
sbbb
xchg
jmp
lret
pop
jl
mov
lock
ss
loop
inc
pusha
dec
in
mov
icebp
lcall
or
xor
add
dec
lock
push
scas
and
fs
lods
bound
fstps
insl
fst
xchg
mov
mov
jne
sbb
dec
outsl
jmp
mov
sti
fdivs
push
adc
sbb
pop
or
and
pop
mov
push
xchg
fisttpll
ja
lock
decl
dec
xor
neg
sbb
ljmp
jp
leave
movsl
or
cmp
incl
sbb
inc
inc
cmp
nop
mov
or
clc
push
mov
imul
call
pop
add
xchg
push
xchg
sti
in
inc
lods
sti
push
lret
dec
dec
icebp
rol
mov
mov
lods
leave
out
inc
xchg
scas
popf
cmp
xor
pop
jbe
jmp
xorl
mov
ljmp
repnz
mov
ds
and
dec
sarl
pop
sarl
fwait
sub
decl
add
and
pop
test
jb
cmpsb
jg
aaa
je
adc
mov
inc
push
mov
jmp
push
loope
out
lahf
je
insl
inc
push
mov
xchg
bound
aam
jns
mov
test
js
mov
out
xchg
pop
aam
add
mov
cmp
pusha
cmp
or
xchg
iret
xchg
idiv
xchg
imul
mov
inc
cld
pushl
mov
or
out
outsl
fsubrs
loop
jo
loop
cwtl
outsb
popf
mov
popa
lcall
call
js
xor
popa
mov
jmp
fs
mov
pop
xor
sbb
jl
and
mov
fadds
and
mov
lcall
incl
imul
dec
jmp
dec
test
cs
out
or
scas
add
ljmp
lea
and
xchg
mov
cwtl
mov
lods
xchg
pop
push
cld
clc
adc
lcall
sbb
fcoml
cltd
nop
lret
inc
push
icebp
inc
add
mov
in
lret
lsl
incb
fldl
dec
test
rcl
add
fldcw
mov
xchg
jp
or
ljmp
pop
shl
mov
pop
or
xor
add
pop
mov
dec
popf
loopne
or
fisubrs
movsl
loope
loope
push
mov
iret
jg
subl
and
arpl
pushl
ja
lcall
push
leave
aad
fwait
xchg
movsb
cmp
addl
mov
or
out
xor
jg
inc
lods
sti
dec
mov
push
loop
lcall
divl
adc
leave
pop
mov
shlb
in
fcmove
jg
loopne
fdivl
call
jno
jnp
ret
hlt
je
in
pop
rcrl
push
jne
mov
rorb
cmp
test
lods
push
and
pop
adc
mov
decl
or
leave
je
icebp
cmc
shll
cmp
sbb
adc
cmp
and
sahf
pushl
sbb
fistps
jbe
sti
into
adc
sar
loope
cmp
pop
sahf
add
pushl
dec
cmpsl
xchg
jmp
stos
fcompl
lds
sub
aaa
push
dec
popf
lcall
adc
data16
xlat
adc
adc
mov
leave
daa
nop
lds
and
lcall
push
dec
cmp
dec
lods
mov
scas
test
mov
pop
pop
add
xchg
jmp
pop
or
adc
iret
push
lret
test
cmpsb
mov
add
movsb
shlb
mull
push
lds
clc
dec
xchg
push
fwait
mov
inc
mov
cmp
xor
pop
or
popa
ljmp
das
pushf
cmp
js
push
frstor
jae
scas
fdivrl
xchg
bound
xor
pushl
call
aam
sub
mov
rorb
shrb
ret
cli
fidivrl
fidivs
pushf
aaa
orb
les
outsb
jb
xor
fcomps
xchg
cmp
call
push
ss
push
push
jge
mov
lret
popa
mov
cmp
mov
xchg
adc
xchg
adc
sbb
dec
sub
jge
cmp
lea
push
xor
and
sbb
stos
cmp
push
es
pop
imul
fisubrl
mov
dec
dec
add
pop
cld
or
inc
sub
subb
jo
jb
sti
dec
cmc
mov
clc
bound
mov
shlb
test
dec
xor
mull
xor
dec
pop
test
incl
cmc
sbb
and
push
push
mov
jle
mov
inc
xchg
test
data16
call
loop
jmp
ljmp
push
jmp
inc
loop
leave
cld
jnp
sub
ss
insl
sbb
push
lods
cli
mov
sbb
test
insl
pop
or
and
push
push
mov
jl
or
cmp
dec
repnz
mov
sti
push
scas
add
inc
mov
xchg
add
out
enter
mov
scas
mov
jne
in
lcall
add
jl
cwtl
and
mov
mov
js
enter
stos
lock
das
or
ljmp
shlb
mov
jmp
imull
jge
push
xchg
mov
cs
sti
mov
call
out
inc
int
cld
xchg
fwait
push
cs
lcall
mov
sbb
dec
cld
ljmp
jle
jo
jne
sbb
call
arpl
int
and
mov
jg
or
iret
lahf
pop
sub
xor
pushf
clc
hlt
decl
lock
bound
inc
cmp
mov
scas
xchg
dec
xor
dec
sub
call
fwait
loope
lock
jp
lret
fisubs
sub
nop
add
dec
push
lods
fistpll
ds
cmp
lcall
sbb
xchg
adc
push
dec
or
pop
imul
cmpsb
jo
data16
and
decb
popf
mov
cs
mov
add
dec
push
jg
jecxz
inc
imul
sahf
adc
xchg
fisubrl
clc
fistpl
in
jns
gs
mov
inc
dec
pop
dec
leave
cmc
scas
xor
inc
cmpl
ljmp
cmp
std
cmp
sbb
out
sbb
aam
xchg
icebp
arpl
xchg
mov
sub
sbb
ss
jno
mov
lcall
das
xor
gs
cmpl
aam
push
lods
xchg
in
jg
outsl
cmp
aas
outsl
sub
pop
arpl
nop
andb
cmpsb
gs
in
adc
ljmp
mov
lret
dec
and
lock
add
mov
std
sub
jg
orb
js
mov
mov
jmp
push
loop
jb
push
aad
lods
dec
es
imul
cmp
fbld
mov
test
push
or
std
notb
mov
fcmovnu
sub
decl
push
lea
iret
mov
call
cltd
sub
xor
jg
or
mov
xor
lcall
fwait
dec
mov
ret
pop
int3
cwtl
lods
mov
lcall
cld
mov
lcall
mov
cmc
dec
jmp
movsl
aad
ret
and
and
add
fiadds
jmp
pop
hlt
or
cltd
sbb
out
in
dec
push
add
or
jns
call
adc
inc
mov
xlat
aad
cs
hlt
test
jp
ret
and
push
movsb
notl
inc
or
add
rcl
push
xor
stos
out
fiaddl
out
addb
inc
ljmp
bound
imul
jnp
fildll
jne
jo
imul
or
scas
fnstsw
ds
add
adc
push
inc
test
add
xor
xor
xchg
cld
out
pop
add
scas
dec
sub
xor
inc
imul
adc
inc
sbb
inc
add
mov
dec
gs
loope
idivb
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
sahf
sub
or
push
scas
cmp
and
or
cmp
cmp
xchg
test
insb
push
in
sub
dec
jne
js
push
pop
inc
jp
sbb
sahf
pop
inc
lea
ss
jb
add
cmp
inc
jns
push
imul
popa
jb
std
and
cmp
push
es
ljmp
dec
ret
push
addb
test
insl
push
dec
call
std
and
or
data16
icebp
inc
jl
loopne
sub
cmovns
movsb
cltd
loopne
cmp
insb
stos
sub
fs
inc
cwtl
sub
mov
adc
flds
ja
mov
sub
inc
or
mov
clc
mov
adc
out
mov
pop
cmp
inc
sbb
push
fisubs
cmpsb
xchg
add
mov
sbb
ds
insb
jne
addl
xchg
jne
xchg
mov
ret
outsl
push
dec
push
inc
sbb
xorb
push
fildl
xchg
mov
adc
sbb
add
jnp
push
jne
and
subl
or
pop
jb
arpl
into
pusha
clc
das
push
jns
mov
inc
jae
pop
push
out
adc
mov
push
insb
jbe
js
hlt
fs
inc
jecxz
mov
dec
int3
mov
idivl
rcll
int3
adc
popa
push
sbb
insb
pop
inc
flds
sub
dec
packuswb
mov
sbb
pop
pop
mov
imulb
stos
inc
dec
sbb
push
dec
xchg
leave
cli
rol
and
jo
xchg
adcl
lock
xchg
test
lea
dec
jecxz
add
mov
xor
mov
push
sbb
mov
lods
jge
adc
pop
and
popw
movsl
or
test
mov
lods
sbb
fs
push
fwait
push
mov
xlat
das
aam
and
ljmp
sbb
loopne
or
pop
dec
inc
dec
or
inc
mov
and
sbb
mov
lahf
or
mov
xchg
lods
or
push
je
ja
adc
sbb
jg
cmp
push
sbb
adc
cmp
mov
inc
popa
xchg
pushf
jnp
jo
jp
popa
insb
test
push
push
jg
and
mov
sbb
add
xorl
cmp
aam
pop
xchg
or
pop
test
or
dec
push
push
fcomps
or
gs
and
jmp
insl
aaa
adcl
lods
aad
jns
inc
je
fisubs
adc
push
inc
inc
out
mov
and
sti
sub
mov
sbb
adc
or
rcr
xchg
jno
insl
cmp
cmp
sub
push
es
mov
add
xor
and
outsl
push
xor
pusha
xchg
stos
loope
adc
cmp
push
xchg
out
and
or
add
ret
aaa
cmp
ljmp
mov
and
pushf
scas
ret
add
jne
inc
fmuls
inc
adcl
xor
jecxz
xchg
pusha
xorb
dec
and
xchg
inc
orl
xchg
sbb
jnp
arpl
inc
inc
dec
outsl
movsb
xchg
and
mov
pop
xor
jmp
adc
imul
inc
cmp
lea
enter
outsl
add
add
sbb
dec
inc
arpl
fisttpl
sub
or
inc
rcl
cmp
sti
ss
dec
gs
jne
lods
int3
or
cmpsb
push
adc
sbb
std
movsb
jp
adcb
ds
pop
adc
pop
mov
gs
xchg
push
push
mov
sub
movsl
inc
sbb
sub
and
dec
xchg
sbb
in
adc
fiadds
in
shl
mov
push
addr16
mov
test
sub
rol
sbb
dec
mov
int3
outsb
lds
lds
push
mov
xchg
je
and
push
outsl
jbe
jb
test
pop
test
lahf
nop
nop
inc
jmp
out
jo
inc
inc
int
push
arpl
rorl
inc
imul
mov
pop
mov
xlat
idivb
insb
push
inc
push
out
outsb
inc
insb
jle
jge
mov
stos
fs
lcall
inc
jae
jno
pop
in
jl
aad
adc
sbb
pop
add
insl
adc
addb
push
call
xor
sbb
dec
pusha
pushf
int3
mov
mov
or
xchg
out
lret
pushf
jge
test
inc
dec
push
push
pop
xor
and
pop
shlb
loop
mov
outsb
inc
push
push
adc
js
cmp
pop
xor
pop
cmp
cld
pop
xchg
jnp
or
dec
outsb
dec
push
sub
xchg
subb
xor
jnp
sar
pop
add
add
mov
mov
imul
movsb
lcall
sub
paddsw
xchg
mov
fidivl
addb
pop
adc
test
into
cmpsl
in
dec
rcr
mov
inc
jb
and
lods
add
xor
xchg
jl
outsl
bound
adc
push
inc
and
roll
out
inc
jb
inc
cmc
das
mov
insb
inc
jae
or
sbb
inc
shll
fidivl
ret
add
push
repz
pop
cmp
sbb
in
sahf
and
cmpsl
loopne
rclb
fcompl
or
xchg
mov
loopne
imul
nop
jne
repnz
gs
xchg
dec
pop
push
lret
push
mov
scas
ret
inc
mov
ficoml
dec
pop
or
push
cmp
mulb
mov
das
nop
mov
adcl
and
in
inc
fildll
ja
rolb
inc
mov
enter
cmp
sub
and
cmp
je
andl
sub
idivb
and
cwtl
fidivs
push
insb
mov
testb
push
gs
xchg
xchg
add
add
ret
lret
repz
jge
fimuls
dec
pusha
and
dec
xor
push
enter
andb
mov
or
in
and
in
mov
imul
inc
xchg
pusha
pusha
jno
ja
push
inc
movb
test
out
pop
data16
call
fwait
insb
or
push
lcall
mov
sub
adc
pusha
jnp
push
lds
fs
dec
sub
xchg
arpl
jg
jo
inc
push
sbb
and
and
fnstsw
dec
inc
lods
lds
or
and
pusha
iret
pop
push
cmp
lds
xor
xchg
mov
jbe
cmp
pop
pusha
dec
dec
icebp
icebp
fbstp
mov
outsb
inc
loope
or
jmp
lea
enter
xchg
lods
push
lods
mov
push
xor
clc
add
pop
push
jmp
mov
or
lods
psrlq
inc
mov
cmpl
loop
mov
aad
lea
aaa
pop
dec
dec
test
jl
shrl
lahf
mov
aam
arpl
mov
js
and
jbe
inc
inc
push
mov
fsubs
test
add
std
lret
push
push
inc
out
adc
ljmp
cmc
push
pop
inc
int
dec
push
inc
jmp
dec
push
inc
sub
mov
jae
cmp
add
jne
pusha
mov
mov
pop
imul
jo
add
jae
bound
fwait
fwait
sbb
dec
jp
sbb
add
int
inc
mov
add
dec
inc
mov
xchg
dec
mov
scas
stc
dec
add
loopne
inc
pop
insl
xchg
arpl
add
in
cs
cmp
mov
push
adcb
outsl
bound
or
add
fcoml
leave
pop
or
pusha
push
add
cmpsb
fadds
imul
push
mov
dec
push
adc
add
bound
push
and
add
and
jb,pn
popa
adc
sbb
negl
push
xchg
fcoml
inc
cs
push
adcb
add
insl
rcrb
pusha
dec
test
sbbb
push
push
lahf
clc
dec
out
adc
loop
inc
pop
add
push
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
