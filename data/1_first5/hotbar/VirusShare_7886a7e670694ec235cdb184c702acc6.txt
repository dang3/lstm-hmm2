fcomp
decl
adc
add
mov
or
adc
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shll
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jb
mov
mov
sahf
mov
les
int
mov
mov
xor
push
fwait
sub
fsub
subl
outsb
push
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
dec
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
lcall
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
cmpsl
sbb
not
jo
sub
xor
dec
xor
push
push
fmuls
sub
out
cmpsb
mov
cmp
and
add
out
aam
mov
mov
sahf
test
inc
enter
sbb
pushf
xor
sete
bswap
mov
in
inc
push
into
mov
dec
test
mov
out
js
adc
int
subl
add
clc
punpckhbw
ds
mov
mov
dec
in
cmp
add
add
cltd
adcl
in
cmp
shll
dec
fists
push
into
les
sub
and
inc
jae
js
sbb
inc
aam
and
xchg
mov
inc
push
mov
lea
jle
xchg
push
or
mov
dec
sub
xchg
out
mov
xor
sbb
jge
sbb
inc
outsb
pop
cmpsl
and
dec
test
out
popl
icebp
xrstor
in
mov
and
mov
jg
jmp
cs
push
lea
repnz
mov
mov
stos
pop
pop
out
pop
mov
ret
xor
push
inc
push
dec
dec
and
push
insb
loope
popf
jae
sub
ret
and
push
mov
adc
mov
pop
les
leave
jmp
add
ljmp
add
sub
mov
mov
mov
mov
adc
lcall
add
or
shl
and
call
xor
jle
stc
cmp
add
add
mov
xor
jbe
xchg
ficomps
lea
das
dec
jne
les
faddl
add
dec
in
dec
inc
cld
ret
out
rorb
push
add
call
inc
mov
fldenv
je
test
jecxz
pop
mov
ret
jg
jne
pushf
incb
out
jle
call
aas
sub
push
pop
stos
pop
aas
movsb
sbb
inc
hlt
nop
test
cmp
xlat
scas
sub
dec
hlt
mov
dec
push
adc
ss
cmp
jl
add
lds
cmp
xorl
lds
xor
mov
je
or
cmp
and
xor
xor
mov
lock
add
gs
inc
push
lea
push
push
movsb
fsubrs
cltd
fistps
ds
xor
cmpsb
add
stos
jge
xorb
daa
sti
shl
push
jg
dec
or
test
push
adc
sarl
lock
inc
mov
popf
mov
pop
mov
jb
sub
mov
pop
sbb
dec
in
sbb
addps
cld
adc
sub
adc
icebp
cli
inc
arpl
ret
inc
sbb
adc
xchg
push
mov
or
push
add
push
push
dec
push
fsubrs
sar
cmp
popa
adc
mov
push
pusha
sub
xlat
fcmovnbe
sete
test
test
in
sbb
inc
xchg
inc
cmp
xchg
and
add
inc
xchg
iret
xor
aam
test
pop
push
fst
or
sbb
rclb
andl
movsb
or
pusha
lds
jmp
mov
cvttps2pi
test
adcl
js
jne
push
jle
adcl
je
adc
or
jecxz
pop
and
push
push
or
jb
repnz
adc
std
xor
push
nop
or
push
inc
add
push
dec
jle
mov
adc
push
or
push
or
xor
cmpsb
jo
push
ljmp
movsb
test
push
ds
jno
out
add
dec
cmpsl
adc
or
sbb
or
sbb
nop
xchg
sbb
std
filds
in
scas
push
inc
cmp
fwait
cmp
mov
jle
push
movsl
in
rcrb
ret
jg
enter
jg
xchg
xlat
add
sub
js
sbb
mov
in
push
cmp
sbb
aad
aam
cmp
sbb
pop
add
hlt
mov
fistl
push
and
adc
adc
dec
cmp
leave
mov
test
pushf
ss
cs
add
push
mov
pop
testl
sbb
mov
add
movsl
loop
cli
mov
push
cmpsl
xor
mov
ret
xchg
xor
push
pop
cmp
mov
adc
mov
lea
popf
cmp
ss
icebp
bound
adc
fmull
or
mov
ficoml
push
data16
lock
lcall
out
jg
scas
js
int3
fsubrs
cmpl
je
mov
lea
push
mov
aas
mov
xor
fcoml
jmp
push
sarb
cld
mov
adc
fstl
testl
cmp
inc
mov
inc
fmulp
call
xchg
fcoml
adc
mov
push
pop
daa
add
adc
xor
or
ret
loopne
sbb
data16
mov
cmp
and
mov
mov
test
in
push
mov
sarl
pusha
adc
and
aaa
push
repnz
sbb
loopne
icebp
lea
pop
test
jl
and
xchg
aad
sbb
xor
dec
mov
lods
aam
jno
push
push
pop
add
loop
xchg
inc
jo
lods
mov
mov
aad
dec
test
jg
int
push
cli
jmp
cmc
inc
add
bound
scas
stos
mov
pop
pop
and
int3
flds
les
xchg
pop
imul
ret
incb
rclb
xchg
and
aam
enter
int3
or
lds
jmp
pop
push
xchg
dec
lds
pushl
out
lret
add
sbb
push
icebp
xchg
cmp
or
mov
sahf
add
inc
adc
jle
jne
or
loopne
mov
dec
lods
loope
adc
aam
popa
fldenv
inc
rcrb
push
test
cmp
je
sub
cmp
je
or
sti
jmp
sub
adcb
inc
pop
mov
test
mov
add
rorl
mov
gs
mov
ret
add
add
xor
scas
cwtl
push
outsb
lahf
sbb
aaa
into
push
mov
push
jg
push
push
adc
incl
xor
adc
call
inc
cmp
jl
adc
add
mov
push
push
push
js
or
cmp
jbe
insb
push
mov
xchg
mov
sarb
mov
mov
pusha
test
push
fs
dec
and
js,pt
mov
pop
rcll
adc
push
or
icebp
push
rorb
and
filds
je
test
movzwl
and
scas
pop
add
push
cli
into
scas
cli
add
and
jmp
mov
lea
add
out
decl
jne
sub
push
push
inc
sbb
add
pop
xchg
adc
sbb
xchg
cltd
ret
add
addl
push
aad
lds
test
lahf
fs
or
jne
adc
jecxz
adcb
pop
dec
es
lea
pop
jb
insb
imul
iret
cmp
jb
test
add
jge
xor
mov
cmp
jl
sbb
adc
movsb
shrb
pop
ret
mov
jbe
adc
orb
adc
outsl
aaa
mov
jl
rcrl
int3
arpl
push
insl
lcall
jne
pop
mov
adc
test
xchg
push
ds
or
lcall
lea
adc
push
scas
lods
push
pop
cmp
mov
push
test
mov
push
icebp
sbb
jge
push
call
aad
jo
or
clc
jle
mov
mov
xor
jg
cmp
pop
insb
mov
mov
adc
push
cld
lea
push
or
cmp
hlt
aaa
mov
adc
cmp
ja
add
jmp
pop
clc
push
sub
push
add
push
hlt
jecxz
clc
ret
add
jo
jg
mov
adc
push
mov
add
dec
pop
ret
push
cld
test
icebp
mov
enter
jbe
je
mov
js
push
insb
jge
sub
add
call
in
inc
hlt
mov
js
xor
or
dec
push
out
lock
rclb
les
jg
pop
pop
into
lods
sbb
jo
mov
sub
mov
pop
notl
mov
or
lret
repz
cld
cmp
ja
push
clc
lea
push
push
jmp
mov
dec
inc
or
clc
push
add
rorb
mov
xor
dec
adc
push
pop
inc
mov
adc
adc
adc
push
add
loopne
fbstp
test
push
push
push
outsb
push
push
ret
or
cmp
push
push
jge
mov
add
cmp
or
mov
jb
or
or
je
xor
sub
sbb
xor
mov
pop
adc
mov
mul
jg
loopne
lds
int3
or
shl
test
aas
pop
push
mov
mov
stos
mov
xchg
mov
pop
fst
jle
pop
lahf
jle
add
jno
inc
stos
popf
or
cs
sub
call
out
jp
mov
adc
je
cmpl
lea
jl
mov
push
jne
push
fisubs
pop
enter
test
lcall
faddp
das
cmpb
push
hlt
push
push
pusha
fistpl
pop
sbb
mov
adc
mov
cmp
push
aaa
fndisi(8087
lds
es
jno
mov
dec
xchg
test
rorb
lret
xchg
lret
mov
bound
imul
xchg
sahf
addr16
roll
mov
ret
cld
fwait
lret
or
inc
inc
or
shlb
adc
ret
cwtl
mov
dec
mov
mov
sbb
fdiv
push
clc
or
je
adc
push
fnstcw
sub
or
arpl
pop
push
push
insl
mov
sub
or
mov
push
mov
mov
jb
cltd
add
stos
and
subb
adc
cmp
jge
mov
lea
dec
adc
adc
dec
icebp
xchg
push
or
add
rorb
scas
test
loope
fiaddl
xor
add
jo
cmp
cmpsb
xor
loop
es
mov
jmp
ret
or
sahf
cmp
add
shrb
es
ret
and
xchg
add
pop
mov
js
mov
cmp
out
outsl
addb
ret
mov
enter
add
or
add
in
rcr
add
inc
push
add
ret
push
pop
test
jae
cmpsl
fdiv
pop
scas
int3
mov
push
or
inc
jle
xchg
test
cmp
or
pop
xor
ds
jbe
hlt
cmp
cli
lret
mov
or
stc
rcr
xorl
rolb
ret
cmp
insb
pop
sarb
pop
push
lock
movsb
jb
xor
lock
cs
in
mov
sub
sub
inc
in
sub
pop
add
push
pop
or
pop
inc
popa
scas
dec
push
or
and
push
sbb
imul
pop
push
xor
sub
jmp
aas
push
cmc
dec
lahf
mov
popa
inc
cmp
jb
lds
add
fnsave
pop
pop
pop
cmpsl
ret
mov
mov
lods
pop
push
pop
xchg
add
out
jae
test
lcall
outsb
sub
addps
dec
xor
insb
fcoml
pop
adc
pop
xor
incb
pop
out
sbb
mov
ss
inc
nop
gs
or
int3
clc
sarl
inc
xor
push
inc
adc
cmp
adc
cmp
in
and
sub
or
mov
sbb
sbb
adc
iret
test
sbb
pop
add
pop
cmp
push
mov
stc
int3
mov
mov
pop
xor
movsb
push
push
fwait
mov
sub
pop
sbb
mov
or
pop
and
sbb
stos
mov
idivl
mov
loopne
sti
jne
xor
push
push
dec
pop
outsb
or
mov
sub
xlat
push
lea
add
ret
stc
xor
dec
pop
inc
fisttps
mov
test
mov
and
pop
arpl
rcll
xchg
push
mov
adc
jge
aad
popl
xor
sbb
ja
adc
orb
sbb
mov
dec
enter
and
jg
leave
xchg
in
lahf
sbb
pop
sbb
xlat
scas
sbb
sbb
add
clc
test
sub
into
push
sbb
pop
or
and
pop
loope
outsb
adc
push
mov
sbb
jmp
xor
cmp
fiadds
ja
mov
clc
and
je
or
mov
sbb
test
in
shl
imul
push
movsb
rol
inc
subb
shrb
ret
xor
push
pop
xchg
jl
jb
mov
push
push
sub
sbb
jle
aas
fists
add
test
cmpl
and
jle
pushl
outsl
dec
or
jmp
ret
pop
add
sbb
ret
and
cmp
fidivrs
mov
push
sahf
jecxz
cmp
pop
and
pop
jo
xorl
add
je
and
pop
sbb
sbb
sbb
pop
cmp
mov
lods
shll
les
aas
pushf
xchg
mov
insl
cmpsl
fnstsw
movb
cmp
sbb
aaa
xlat
jo
je
push
inc
dec
adc
daa
mov
sbb
add
repnz
dec
je
push
and
dec
cmp
dec
mov
add
xchg
sbb
jbe
pop
push
mov
das
cmp
nopl
pushf
push
fstps
leave
cmpl
ja
loope
mov
fisttpll
imul
jmp
or
jp
lods
cwtl
push
lea
jmp
call
mov
sbb
adc
sbb
mov
aaa
sti
cmp
popf
jns
lds
sub
adc
cmp
xlat
pop
enter
xchg
fldz
movl
sahf
or
mov
stc
sbb
sub
lods
scas
sub
fsub
divl
xor
je
xor
jne
scas
int
loope
dec
sbb
in
fnstenv
push
inc
cmp
iret
repz
test
int
jns
inc
mov
iret
in
add
lods
loop
push
jae
or
and
loopne
jg
sbb
addb
loope
push
adc
out
jno
add
and
sahf
in
sahf
in
or
rcrl
add
lret
in
int3
adc
or
adc
xchg
lret
scas
mov
xchg
sahf
pop
popf
mov
jg
mov
mov
pop
push
lea
push
gs
push
add
push
lea
repz
rolb
dec
and
pop
leave
aam
les
sub
pop
and
nop
arpl
sbb
or
sbb
push
mov
add
sbb
fadds
xor
je
js
push
jg
fidivrl
add
fiaddl
cld
xchg
push
nop
xchg
jb
mov
fists
test
enter
add
daa
push
push
push
scas
mov
ficompl
add
pushf
subl
xor
mov
jecxz
into
jge
or
add
sub
and
or
sbb
inc
xor
or
call
mov
in
movsl
stos
addl
push
lahf
jbe
add
xchg
sbb
movsb
shrl
sub
mov
call
in
out
push
sarb
ficoms
mov
js
cmp
and
pop
out
dec
sub
mov
push
or
dec
lods
inc
xor
add
arpl
push
setne
push
mov
rorb
dec
and
mov
repz
jg
lea
pop
dec
pop
add
rcpps
xchg
mov
push
push
inc
cwtl
rcrl
je
lea
in
or
add
add
mov
sub
pop
ds
pushf
push
mov
jge
push
jle
sahf
pop
mov
jle
cmc
and
loope
in
sbb
loopne
pop
jl
mov
inc
xor
adc
xchg
packsswb
in
jge
add
add
lcall
movl
orb
int3
adc
in
jmp
mov
ss
clc
push
push
mov
mov
loop
mov
dec
mov
push
push
xor
push
mov
jle
inc
dec
sbbb
inc
inc
cld
aas
sbb
rcrl
shll
inc
xor
and
sub
fcmove
outsb
in
mov
add
sahf
inc
add
mov
cmp
jecxz
push
mov
js
jns
dec
repnz
push
inc
jbe
lds
ret
cwtl
jns
sti
mov
adc
xor
stc
sahf
out
cmp
inc
or
icebp
sarb
sub
scas
sub
push
push
inc
add
inc
mov
fistps
inc
and
add
pusha
adc
sbb
push
jg
push
orb
adc
cwtl
push
xor
adcb
push
dec
jno
cmpsl
shlb
jecxz
sub
jge
mov
pop
movzbl
lock
out
mov
push
loope
inc
or
or
lret
fisubrs
cmpsl
adc
push
pop
pusha
lock
and
jecxz
or
loopne
lea
push
inc
fists
mov
cwtl
add
jmp
lret
idiv
mov
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
mov
xor
xor
add
pop
ljmp
cmp
push
pop
add
loop
pop
xor
pop
push
inc
sub
das
cld
clc
add
pusha
jne
and
aad
lahf
sbb
das
jbe
sar
aad
sbb
movl
adc
test
jmp
push
or
bound
mov
cmpsl
adc
rcrb
test
popa
ds
mov
lea
push
inc
mov
mov
out
fisubrs
adc
dec
xchg
loop
and
xchg
push
sbb
dec
adc
xor
pop
flds
bt
mov
ds
mov
clc
mov
aas
mov
push
add
push
push
adc
cmp
mov
push
shrl
idiv
push
jne
push
mov
in
adc
inc
and
dec
aaa
mov
addl
xchg
lods
ss
pop
push
pop
cmp
shufps
movl
imul
ret
ud0
fs
ja
xlat
enter
movsb
cmp
dec
and
clc
mov
scas
push
pushf
and
icebp
pushl
ficoms
add
xchg
push
or
je
mov
dec
lret
push
push
sub
sub
push
addb
inc
ret
pop
xor
inc
lahf
push
rclb
mov
pusha
jbe
or
lods
add
and
dec
push
push
nop
cmp
sti
add
pop
pop
sub
push
push
lea
mov
pop
scas
insb
push
lea
ret
pop
push
insb
shlb
push
cmp
or
mov
je
jno
addb
addb
push
push
test
add
and
je
cmp
push
sub
dec
addb
sbb
add
dec
add
ret
cmpsb
je
add
or
gs
mov
add
mov
mov
jo
push
sbb
add
cltd
loopne
adc
inc
ja
mov
bound
adc
jge
aaa
faddl
sub
outsb
add
inc
shrb
pop
lcallw
inc
pusha
fmull
call
aaa
jl
push
rorl
inc
in
dec
cltd
mov
or
push
lahf
push
mov
rcll
adc
push
lock
xor
es
add
popa
rcr
add
ds
ds
push
or
xor
cmpsl
sbb
pop
test
adcb
jp
out
mov
mov
sbb
pop
dec
inc
push
add
push
mov
jecxz
ljmp
add
sbb
push
and
lock
loop
lock
xchg
cmp
sbb
or
push
es
rcll
arpl
ljmp
es
sbb
cmpb
jno
adc
repnz
add
inc
xor
adc
int
push
inc
orl
xor
push
scas
sti
rclb
outsl
addb
push
xchg
push
push
mov
mov
mov
cld
cld
add
out
xchg
xchg
add
je
mov
cmc
mov
or
sarl
stos
sub
sub
sub
push
pop
mov
test
cmp
dec
or
jmp
push
mov
dec
lea
js
add
xchg
add
jo
orl
jo
or
bound
int
dec
dec
sbb
sub
dec
push
push
push
jmp
jo
lods
xchg
push
xor
push
movsl
mov
push
mov
cmp
add
neg
cltd
jo
loopne
inc
inc
push
sbb
addl
push
pop
inc
add
jno
insb
lds
int3
popa
dec
xor
les
adcb
enter
shl
cmpl
xor
mov
xchg
sbbl
or
add
rcrl
dec
loopne
cmp
jg
icebp
sbb
cltd
and
push
sar
push
push
pop
adc
nop
lret
jl
dec
add
or
add
mov
mov
dec
bound
imul
sar
mov
shr
add
mov
sbb
out
aad
rclb
repnz
push
lahf
pop
aas
adc
adc
nop
in
add
imul
jmp
enter
sahf
cmc
sub
mov
or
add
mov
fistpll
push
enter
lea
adc
divl
jg
decl
lods
pop
mov
xor
lea
ss
pop
adc
fisubl
and
ret
ficomps
imul
icebp
shll
lea
or
adc
and
lds
jl
jge
cmp
dec
sbb
lcall
push
dec
fs
jmp
inc
add
or
sbb
mov
sub
dec
mov
or
out
cmp
pop
pusha
push
ljmp
dec
sub
sub
sbb
stos
jmp
test
jl
lcall
idivl
push
aaa
outsl
xor
sub
aas
sub
sub
push
mov
sbb
loope
add
jne
popf
mov
or
idivb
jmp
mov
fidivrs
cmp
das
outsl
cmp
add
xchg
sbb
and
add
ljmp
outsl
pushl
mov
jno
jae
dec
sub
jge
jmp
js
mov
fwait
pop
fstpt
mov
sbb
push
faddl
add
fdivl
sub
xor
mov
fdivp
testl
lea
cs
cmp
mov
mov
jns
inc
lock
xchg
push
fcoms
jmp
cmp
inc
lock
mov
jl
je
js
out
fidivl
and
add
rorb
addb
sar
ds
push
pop
movb
jecxz
mov
leave
jge
adcl
sub
cli
enter
jbe
inc
mov
shll
push
sbb
mov
hlt
or
mov
xchg
mov
orb
clc
call
xchg
fidivrs
cwtl
mov
je
jmp
cmp
add
and
and
xchg
xor
adc
add
pop
push
shrb
xchg
adc
or
movsl
jno
sub
mov
pusha
xor
or
test
lcall
push
cltd
shll
xchg
test
sub
cmp
mov
inc
sub
cmpsb
mov
xchg
xor
loopne
jmp
dec
lods
ret
jmp
jecxz
sub
xchg
pop
add
or
es
or
and
xor
loopne
into
or
pop
clc
add
sub
and
test
mov
push
mov
fmuls
add
push
ljmp
test
je
or
mov
test
popa
inc
jne
push
out
xchg
aas
xor
fisttps
or
mov
sbb
mov
pop
inc
jg
xor
jo
shrl
fstpl
inc
rolb
push
xor
scas
or
sbb
rcrb
xor
adc
adc
push
push
adc
xchg
imul
mov
sbb
sbb
jp
and
adc
scas
test
push
jmp
cmc
lock
mov
lea
orb
push
xchg
lcall
pop
push
dec
mov
insl
mov
mov
aas
mov
jle
xor
adc
pop
xchg
lahf
pop
and
add
push
push
cmp
movsl
mov
adc
ret
lahf
or
push
ret
sbb
or
and
xor
or
loope
sub
add
push
clc
mov
sub
clc
setb
insb
push
mov
sub
cmp
jmp
clc
dec
sub
xchg
rcrb
push
adc
add
js
lret
mov
pop
rorb
mov
mov
xchg
inc
pop
push
mov
fdivrp
push
add
inc
add
aam
lea
push
adc
dec
push
movsl
je
mov
push
es
pop
pop
fstpt
and
jo
js
aas
stos
mov
xchg
lock
xor
push
pop
cmp
ljmp
adc
mov
aam
pop
mov
push
popf
and
add
adc
ss
push
push
dec
lcall
push
adc
and
push
inc
or
in
sub
mov
inc
jno
adc
iret
call
jge
int
push
loop
xlat
push
push
pop
jns
sub
cmp
ja
mov
mov
fcoms
lcall
fldcw
cmp
lds
push
cmpsb
jge
mov
add
add
adc
lds
jbe
sub
add
xlat
dec
nop
push
popa
andl
xor
lahf
adc
mov
mov
and
js
ds
testl
out
inc
xor
push
insl
add
add
dec
repnz
sub
jo
dec
add
enter
das
xorl
cmpsb
inc
sub
push
cmp
xor
sbb
cltd
and
sahf
imul
jo
rolb
in
push
bound
jae
xchg
bound
jb
popa
sbbb
or
loope
push
mov
inc
das
and
xor
test
add
jl
or
insb
ss
je
enter
ds
arpl
mov
das
mov
push
fs
sbb
jmp
dec
repnz
or
add
sub
lds
dec
stos
and
ss
sbb
mov
out
and
or
adc
test
sub
jns
adcl
subps
cmp
dec
push
pop
or
push
lcall
xchg
add
mov
in
mov
mov
pusha
rcll
pop
cmp
ret
aaa
adc
movsb
iret
pop
sbb
ljmp
inc
nop
and
leave
es
rcll
ret
mov
je
cmp
sbb
jne
push
push
push
xor
cmpsl
cmp
push
and
mov
adc
sub
movsl
or
pop
andb
sbbl
lahf
out
jbe
rorb
pop
in
and
andnps
or
cmp
jnp
hlt
xor
mov
clc
pushf
add
ljmp
jg
xchg
aaa
jne
xchg
sub
arpl
imul
outsl
add
and
sbb
xchg
mov
mov
pop
dec
in
xor
add
pinsrw
pop
push
sbb
dec
subl
push
mov
pop
loopne
add
sub
cmp
ret
sub
jo,pt
jno
add
mov
je
je
std
or
jmp
xor
inc
enter
jl
pop
push
jl
jb
add
push
lods
test
mov
cltd
or
leave
mov
fisttpl
adc
lret
xchg
add
mov
nop
xchg
xor
cmp
mov
or
add
jne
adc
in
cs
or
adc
cltd
mov
cwtl
pop
call
mov
xchg
and
mov
and
inc
jno
pop
mov
mov
and
mov
inc
inc
or
add
add
push
mov
jo
js
or
cmpsb
ret
outsb
add
pop
mov
call
push
add
sbb
lret
mov
mov
hlt
imul
es
pop
movl
cmp
add
jne
pop
push
sub
push
sbb
push
cmp
rcl
or
push
data16
mov
pop
sub
xchg
mov
test
repnz
cmc
or
js
and
mov
adc
aam
xor
mov
daa
and
movsb
jnp
jge
out
aad
sbb
cli
ret
sub
xor
ljmp
and
lea
and
push
or
ja
mov
jae
imul
ljmp
jecxz
push
cmp
mov
rolb
mov
inc
inc
mov
sbb
insl
push
cld
ljmp
popf
mov
push
adc
insl
xchg
aam
jb
push
sub
popf
loope
leave
lret
sbbl
or
xor
cmp
add
push
cmp
mov
sub
shl
inc
xor
adc
lret
jp
mov
adc
mov
add
sub
mov
sbb
test
aad
jle
addr16
in
and
add
push
int3
add
push
or
in
imull
into
nop
jne
cmp
cmp
mov
clc
mov
push
sbb
imul
jmp
or
les
jmp
movl
sbb
add
push
or
ret
es
pushf
lcall
jmp
dec
in
cmp
iret
pop
mov
push
pusha
or
inc
push
hlt
mov
or
xchg
sub
jb
xchg
gs
or
ss
mov
mov
add
dec
add
and
cmp
sbb
sub
or
xchg
add
out
mov
stos
ret
xor
pop
push
inc
dec
cmp
mov
or
inc
lcall
or
stos
cmpsb
sbb
push
sbb
lret
cmp
or
and
add
fstl
mov
push
cltd
loopne
lahf
push
cmp
mov
push
imul
push
sbb
mov
pushf
sbb
ss
add
cmp
mov
xor
push
xchg
or
jbe
adc
pop
sub
xor
popa
mov
xor
pop
push
movsb
push
and
mov
mov
add
push
or
jle
xor
push
xchg
sub
mov
cmp
test
pop
sbb
xchg
sbbb
push
add
add
jbe
sub
push
mov
into
clc
xor
stos
rolb
idivb
cwtl
sub
sbb
sbb
and
call
jne
xlat
pop
jle
scas
or
cmp
sbb
adc
xchg
lods
pop
pop
pop
or
mov
inc
stos
inc
and
stc
dec
jo
mov
mov
inc
mov
adc
gs
xor
and
and
jmp
enter
and
mov
and
mov
jge,pt
mov
jmp
lret
shlb
test
and
and
or
or
xor
cmp
pop
ljmp
push
mov
loope
push
shl
mov
and
sbb
push
or
sbb
sub
and
lcall
xor
jmp
xchg
fbstp
add
xchg
push
push
and
iret
push
sub
mov
adc
or
out
out
cs
push
cli
and
arpl
push
js
sub
add
ljmp
lcall
scas
lea
in
stc
mov
sub
and
xor
sub
les
ss
mov
orb
inc
in
xor
push
sub
push
fwait
cltd
jmp
inc
addb
adc
inc
sbb
mov
addl
sbb
pop
mov
int
lds
add
cmp
fnsave
sbbl
pop
enter
push
jb
repnz
xor
and
add
sub
rolb
xor
test
ficompl
aas
loop
cltd
add
adc
roll
xchg
mov
cwtl
jnp
push
add
pop
ljmp
dec
mov
popa
mov
pop
enter
push
or
jb
cmp
pop
mov
out
sbb
inc
jno
pusha
cmp
add
push
test
pop
test
push
add
xor
das
dec
xchg
dec
cld
fidivl
pop
add
cmp
cmp
test
divb
es
clc
adc
sbb
xor
into
xor
sub
mov
pop
scas
or
cmp
push
adc
push
xchg
cmp
enter
xor
cmp
adc
push
sub
testl
dec
mov
add
push
mov
sub
popa
xor
into
mov
loope
icebp
pop
xor
sub
pushf
jmp
push
sbb
insl
push
sub
and
or
or
hlt
add
inc
sbb
adcl
in
dec
cs
cmp
push
xchg
xchg
mov
ret
test
test
xchg
lahf
mov
inc
mov
cwtl
inc
lods
adc
popf
mov
or
inc
or
pop
add
cmpsl
pop
mov
mov
jp
lret
sub
or
pop
jp
daa
mov
jg
jge
adc
inc
movb
popa
js
xor
mov
imul
adc
call
je
int3
mov
pop
out
xor
clc
fdivrl
mov
and
jmp
call
inc
fists
or
add
in
push
pop
jno
into
inc
sub
and
add
ss
mov
ljmp
ss
iret
mov
test
stos
repnz
les
ljmp
add
jmp
or
dec
push
push
popf
adc
pushf
pop
sub
lock
sbb
lods
add
mov
fs
or
push
clc
mov
insl
std
pop
in
and
std
push
into
stos
sarb
mov
push
jp
pop
mov
addr16
pusha
push
inc
dec
inc
cmp
or
je
fld
stos
pop
fwait
mov
mov
call
out
out
jle
jb
mov
or
push
mov
and
les
call
sbb
mov
adc
leave
loope
sbb
mov
aaa
rorb
cmc
outsb
loope
std
test
push
movsl
shr
popf
or
rorb
in
in
leave
add
mov
rorb
arpl
add
cmp
push
fsubl
sbb
and
ss
adc
pop
pop
movl
in
and
leave
outsl
and
outsl
push
test
je
aad
incb
pop
adc
or
sub
je
add
clc
push
or
push
mov
pop
or
push
popa
mov
into
test
or
leave
add
hlt
dec
rorl
inc
jge
pop
push
and
imul
jno
adc
cltd
lods
adc
gs
lock
push
or
les
pop
and
sub
pop
inc
ffreep
add
adc
add
sbb
xchg
sbb
dec
rcrl
icebp
inc
add
es
mov
pop
mov
and
in
xor
cmpsl
xchg
fistpll
fwait
movsb
push
push
push
mov
dec
push
cltd
dec
ds
cwtl
int3
or
jb
imull
xor
xor
sbb
test
mov
adc
add
adc
out
or
pusha
cs
push
inc
and
filds
sahf
inc
add
dec
push
inc
pop
adc
xor
mov
pop
dec
add
in
cltd
jmp
pop
add
adc
and
repnz
and
insb
mov
adc
mov
ds
out
nop
add
inc
or
sub
enter
xor
shrb
jo
out
mov
inc
xor
js
push
adc
push
ss
and
add
inc
push
in
test
add
pop
and
decb
sbb
push
cmp
nop
test
add
jae
add
jbe
and
std
adc
xchg
sub
inc
cs
push
dec
xorl
cwtl
popa
cmp
pop
add
daa
sti
jle
mov
xor
push
push
fwait
dec
cmp
pushf
out
add
push
call
dec
lahf
dec
and
or
lea
or
popf
push
jmp
mov
les
cmp
xor
enter
rcrb
adc
lock
les
or
sbb
push
mov
arpl
test
mov
movsb
mov
mov
cwtl
push
xor
push
pop
mov
test
out
orb
jno
mov
inc
pop
push
bound
pop
sub
into
mov
cmpsl
mov
push
lods
adc
push
lahf
lahf
push
nop
xchg
mov
or
push
xor
sahf
mov
sub
pusha
shrl
cmp
push
test
movsbl
lea
aas
mov
jo
cmp
sub
orl
out
insl
cltd
mov
mov
or
or
jmp
dec
lods
outsb
pop
je
subl
add
adc
mov
dec
pop
jle
fbstp
or
outsl
mov
inc
ds
add
mov
push
sarb
sbb
fs
pop
mov
rcrl
jb
lret
mov
sbb
js
xor
inc
dec
xchg
add
pop
or
jecxz
inc
add
fbstp
mov
in
rcrl
cmp
stos
fs
pop
cmp
pop
jo
or
dec
fs
inc
inc
and
fldenv
sub
cwtl
inc
dec
pusha
test
popf
pop
jmp
sub
add
xor
add
mov
stos
or
in
xor
sub
mov
mov
in
dec
insb
orb
fldt
iret
fstl
jno
and
or
and
jne
out
adc
in
jb
mov
push
lds
push
ljmp
hlt
dec
clc
and
or
jge
push
arpl
lret
pop
lock
push
add
dec
in
bound
mov
lock
mov
jg
push
testb
aaa
loop
test
je
outsb
jl
jg
pusha
arpl
out
cli
add
and
push
mov
das
stc
pop
shl
lea
mov
jmp
mov
lea
out
fstpt
pop
int3
add
pop
pop
or
mov
dec
dec
cmp
mov
or
cli
and
add
xlat
push
push
cmp
test
push
popa
sub
leave
xchg
test
sbb
jno
mov
dec
mov
jb
inc
add
scas
ja
rclb
cmp
nop
test
push
icebp
add
add
insb
stos
inc
push
ljmp
out
jle
enter
sbb
mov
adc
and
andl
and
es
fcoms
push
ret
xor
xchg
sbb
shlb
ret
and
add
push
leave
xor
sub
js
leave
jae
add
dec
cmpsb
xor
aad
dec
dec
xchg
mov
lods
add
dec
pop
sbb
mov
sbb
rolb
notl
dec
incb
push
iret
gs
mov
pusha
add
dec
and
add
add
mov
sub
dec
xor
and
out
jb
popa
ljmp
repnz
es
or
inc
daa
stc
and
in
jo
add
scas
xor
dec
pop
js
je
dec
inc
mov
adcb
aas
add
dec
add
jo,pt
in
push
xchg
xlat
jecxz,pn
adc
pop
add
subl
cmp
aas
push
fcomps
incb
jle
mov
or
or
push
test
push
mov
and
clc
xor
mov
hlt
add
xor
adc
push
xor
pop
fstl
fs
jae
add
mov
jl
push
mov
or
add
cmc
sub
xchg
cmp
pop
subb
test
ss
fadd
inc
push
inc
pusha
pop
xchg
andl
ja
pop
push
add
stos
sbb
lds
dec
mov
jle
aas
js
sarb
rorb
pop
lcall
sub
fs
dec
jo
fs
mov
fimuls
subb
add
xor
xchg
pop
mov
and
loopne
aad
or
push
inc
sub
or
xor
inc
test
cmpb
add
imul
adc
xor
or
addl
test
or
xor
mov
jmp
clc
ss
mov
pop
add
adc
test
femms
aad
add
test
push
adc
push
sbb
push
lahf
add
push
shlb
push
push
fiaddl
ds
inc
leave
movl
leave
or
push
add
xor
icebp
mov
xor
sub
sbb
and
inc
repz
dec
and
sarl
xchg
jmp
push
ss
cs
out
lea
cmp
mov
xchg
pop
insl
fmull
mov
adc
mov
jp
hlt
pop
hlt
add
ret
je
aas
mov
sub
xchg
push
aas
test
push
xor
lahf
mov
or
push
cmp
test
pop
shr
push
and
std
xchg
jmp
rcrl
inc
add
mov
insb
jbe
adc
push
push
pop
sbb
xchg
sub
sub
and
and
test
xchg
push
ljmp
push
rcrb
mov
inc
mov
jne
daa
jle
pop
xchg
inc
add
jns
js
sete
mov
pop
push
push
movsl
ret
aaa
mov
dec
pop
push
rorb
pop
cmpsl
jo
xchg
shlb
mov
xor
jle
sub
in
and
aad
adc
ret
incl
inc
mov
inc
pop
push
add
clc
sub
sbb
outsl
filds
add
jg
pop
or
sub
inc
mov
sub
test
dec
jnp
pop
movb
cmp
je
es
test
cmp
lea
ret
es
jg
pop
sub
lock
lea
loope
sub
or
and
out
mov
or
dec
scas
mov
popa
orl
sub
test
dec
and
dec
mov
adc
in
loope
sub
dec
add
push
rorl
insb
xor
lret
movzwl
mov
popf
shrb
xchg
cmpsb
rcrl
xor
cmp
andl
push
lock
jle
xor
or
fsubrs
pop
xor
push
das
sub
pop
and
jo
xchg
and
and
push
loope
push
cmp
mov
or
cmp
or
lret
pusha
sbb
cmpl
jg
and
test
adc
scas
es
jo
sbb
jno,pn
jno
adc
adc
sub
adc
inc
mov
xchg
add
je
mov
push
jle,pt
sbbl
adc
xchg
push
sub
out
xorb
xchg
jo,pn
fcom
and
adc
shrb
and
add
adc
cmp
push
inc
stos
xchg
bound
pop
loopne
cltd
or
popf
stos
xor
cwtl
fstpl
add
pop
or
loope
jns
lea
cmpsb
xor
mov
add
movsl
jo
inc
push
push
enter
icebp
mov
call
jo
dec
lahf
jb
push
leave
xchg
adc
xorl
add
sahf
xchg
xchg
pop
stos
mov
push
inc
andl
ficoml
adc
xchg
lds
loop
or
sbb
push
testl
dec
or
xor
inc
dec
out
aas
fadd
fistpll
mov
test
push
push
mov
add
aas
mov
inc
daa
fnstsw
call
daa
mov
and
mov
fnsave
xchg
sbb
mov
mov
stc
mov
bnd
xor
push
push
sbbl
sub
mov
push
mov
adc
jecxz
mov
and
inc
pop
inc
rcll
ret
shlb
or
ret
cmpsb
mov
xor
mov
ret
and
or
dec
pop
adc
or
xchg
outsb
movb
push
jg
rcrl
mov
sub
sbb
inc
inc
hlt
cmp
jne
sbb
inc
les
into
ja
repnz
sub
push
ret
add
cmpsl
lar
adc
aaa
mov
leave
imul
add
shr
andl
adc
xchg
push
jl
pushf
sub
sbb
mov
dec
push
jae
mov
clc
incl
add
sub
or
lea
jge
push
or
daa
in
push
push
imul
dec
add
push
pop
push
or
int3
rclb
sub
ds
fidivrs
sub
cmc
sbb
pushl
mov
ss
adc
sub
popa
mov
xorl
add
jmp
fnstenv
movsl
or
out
sub
pop
xchg
dec
and
or
sub
out
xchg
lret
das
xchg
int
jb
push
push
add
jp
xor
pop
dec
aam
sar
jb
sbb
ja
popa
xor
je
cmpb
pop
jo
popf
push
add
lock
push
ja
rorb
push
push
fadds
sti
sti
mov
jle
sub
loopne
in
cmc
sbb
lret
lret
add
pop
or
cmp
push
cmp
adc
dec
hlt
jge
int3
adc
jp
aaa
lods
add
add
fwait
dec
sbbl
movl
add
jo
pop
das
jno
enter
sbb
sub
push
es
xchg
xchg
or
add
xorl
push
push
jg
push
add
push
jmp
loop
out
sub
ret
enter
pop
push
in
bound
movl
loope
lea
mov
mov
xchg
adc
push
cmp
push
into
inc
lds
mov
hlt
sub
push
test
adc
scas
push
mov
leave
es
dec
push
stc
adc
mov
test
jo
dec
mov
adc
lods
mov
pushf
loope
mov
scas
mov
push
hlt
and
hlt
push
adc
add
adc
push
inc
push
bound
cmp
or
sbb
adc
xchg
and
lods
cltd
inc
add
mov
pop
sub
push
push
mov
adc
sbb
pushf
push
sub
cmc
scas
outsb
or
addr16
mov
js
insl
inc
jle
inc
xchg
cmc
ja
pop
mov
ret
aas
andl
cmp
cwtl
add
or
js
adcl
into
int3
ret
jp
lahf
das
and
lahf
or
outsb
ret
jg
add
scas
lcall
xlat
xchg
adc
jbe
insl
popf
pop
scas
adc
cmp
test
xchg
jb
insl
es
cmp
subl
clc
add
sub
decl
mov
movsl
jl
mov
adc
adc
cmp
jle
lock
cli
sub
pop
out
imulb
lock
sub
add
cltd
push
pop
pop
mov
mov
insb
lret
or
or
sub
into
xchg
push
int3
fstpl
cmpsl
push
lea
aaa
adc
loopne
xor
or
push
pop
or
and
push
push
into
js
sbb
jp
push
movsl
mov
outsb
push
add
and
jmp
test
rcll
xchg
ja
lods
shrl
pop
adc
insb
cmpsl
mov
pop
hlt
xchg
jae
lea
mov
push
sbb
dec
inc
lret
jecxz
int
pop
sub
je
mov
mov
leave
in
add
ret
pop
mov
pop
jle
call
xchg
std
or
cmp
jbe
sub
js
mov
jns
ds
pop
push
mov
fsubrl
add
imulb
shr
adc
call
mov
insb
out
lods
jbe
mov
jb
into
xchg
cmpsb
xchg
fists
xchg
cmp
mov
pop
add
add
pusha
popa
imul
mov
pop
test
js
fldl
pop
jo
mov
add
or
add
pusha
cmpb
clc
adc
inc
shll
adc
mov
fbstp
or
ret
cltd
pusha
call
add
inc
mov
add
loop
or
fwait
mov
cld
or
rclb
movb
js
sbb
push
cs
pop
sub
add
nop
push
pop
sub
fcoms
outsb
aaa
push
or
dec
lahf
es
push
push
cmp
repnz
mov
subb
or
jp
xor
flds
jbe
adc
inc
pop
mov
cwtl
push
jmp
call
mov
dec
test
jb
jo
lods
pusha
or
and
sbb
das
adc
jo
sbb
inc
mov
xchg
cmpsb
push
mov
fmulp
pop
sub
add
mov
std
inc
pop
jb
push
iret
xor
mov
lods
leave
shl
movnti
bnd
sub
popa
jl
fsubrl
pusha
cwtl
or
test
adc
test
or
dec
in
in
sub
jmp
sub
jne
mov
lock
push
fcoms
pop
add
mov
dec
test
mov
clc
daa
push
xchg
xchg
mov
and
or
cmp
shll
add
jg
lods
shll
jp
rolb
pusha
push
push
fisttpll
push
mov
sub
hlt
loope
mov
push
aam
ret
add
push
push
adc
sbb
xchg
or
inc
mov
cmc
call
or
sub
cmp
loopne
loopne
arpl
mov
jae
movsl
xor
fwait
sub
sbbl
adcb
rep
and
dec
xchg
incl
jmp
or
sub
push
xchg
push
xchg
sub
sbb
test
pop
loope
xchg
in
push
sahf
xor
daa
add
mov
loopne
push
test
dec
push
imul
mov
nop
mov
push
xor
je
adc
loopne
pushf
ficompl
push
scas
jmp
mov
xchg
into
add
adc
sbb
push
movsb
xchg
jmp
add
xchg
cs
adc
mov
leave
sbb
js
lea
push
mov
xchg
mov
add
pop
fldenv
sbb
sbb
mov
loopne
add
adc
add
sbb
add
jo
fistl
call
outsb
out
sub
test
scas
sub
cmp
adc
cmp
not
pop
push
adc
xor
and
add
push
mov
dec
andb
sbb
pop
rol
inc
adc
pop
adc
nop
mov
sub
jo
and
cmp
inc
popf
lret
lret
pusha
in
and
add
pop
lahf
sub
pmaxub
cmp
daa
pop
repnz
aam
js
int3
push
aad
push
mov
daa
xor
aas
push
pusha
aad
mov
sub
or
sbb
js
or
mov
mov
mov
push
add
push
ret
jne
pop
jle
pop
jne
ret
dec
xor
cmpsb
and
push
sub
xor
mov
push
add
in
jne
lds
pop
stc
add
or
lahf
and
pop
stc
sub
push
fs
adc
call
sbb
cmp
mov
aaa
and
popa
cmp
out
jle
add
cmpl
sbb
movsb
shlb
adc
and
out
sbb
pushf
sub
and
add
loope
push
cld
add
add
xor
inc
adc
and
pushf
in
jg
into
jb
nopl
dec
xor
mov
dec
stos
pop
lock
dec
fs
push
ret
sbb
in
insl
mov
push
and
test
cmp
sub
mov
aad
cmp
sub
stc
lock
cmp
add
dec
xor
xorb
in
sub
add
xlat
xchg
mov
jecxz
test
inc
fistpll
mov
push
adc
cmp
add
push
insl
lret
push
in
ja
mov
sbb
adc
xor
add
cmpsb
or
stos
sbb
pop
into
stc
test
lret
mov
pop
daa
cmp
sbb
or
repnz
add
jb
lcall
add
mov
inc
stos
and
test
test
ficoml
shrb
loop
test
aas
ds
lods
mov
mov
cltd
das
add
js
dec
xchg
jp
and
insb
rorb
adc
xorl
add
push
dec
inc
or
dec
pop
adc
sbb
test
ds
insb
cmpsl
ficoms
sub
shrl
push
cwtl
pop
add
ret
add
and
dec
les
push
xor
stc
test
mov
lret
and
movl
cmp
jo
dec
js
in
mov
jb
and
jo
add
cmp
xor
xchg
adc
push
mov
or
push
add
cwtl
pop
imul
sbb
mov
xor
orl
dec
mov
sbb
je
jg
out
add
stos
xchg
test
cmp
mov
inc
sub
movsb
loope
andl
lds
rcll
push
pushf
andl
adc
dec
add
xor
stos
in
add
add
insl
or
cmp
inc
sbb
jle
jg
roll
ljmp
jl
inc
push
push
out
add
cmpsb
push
push
mov
mov
mov
mov
stos
or
and
jmp
cld
xor
dec
aam
inc
or
flds
sub
dec
mov
adc
into
mov
adc
fdivrs
push
orl
push
add
in
jg
lea
push
push
inc
sub
dec
adcb
outsb
pop
imul
cmpsl
jbe
scas
lcall
loop
in
jmp
sti
sub
imul
add
in
add
mov
add
fbld
cld
mov
sub
or
jge
lret
xlat
push
dec
jo
or
push
lcall
das
cmp
sahf
or
loopne
lahf
push
push
and
aas
jmp
inc
sub
sub
lea
add
pop
push
push
push
push
loopne
ret
lods
push
push
push
push
and
and
aam
sub
add
add
push
movb
mov
nop
ret
xor
fsubr
lds
js
ret
jb
inc
data16
or
mov
js
jg
pop
ret
data16
add
pop
add
or
push
push
imul
inc
add
or
ret
mov
dec
insb
enter
mov
aam
push
rorl
ret
add
sub
je
test
rol
sbb
inc
mov
ret
add
inc
jo
js
mov
or
pop
rol
shlb
pop
xchg
hlt
ljmp
std
insb
add
jb
adc
and
push
push
or
ja
gs
sub
push
popa
test
or
idivb
inc
adc
arpl
sahf
xchg
mov
pop
xor
stos
or
sbb
pop
dec
add
aas
les
and
push
xchg
ret
add
cmp
push
sbb
jp
sahf
add
jle
dec
add
mov
or
push
adc
xor
lock
clc
fistpl
xor
pop
mov
clc
push
push
ds
sub
adc
pop
adc
pop
test
add
sarl
push
xchg
inc
lds
sbb
push
push
pop
dec
mov
mov
jge
or
mov
mov
pop
das
arpl
or
mov
add
sbb
nop
adc
sbb
decb
mov
dec
add
shll
mov
sbbl
dec
pop
or
out
cltd
sbb
inc
push
xor
ret
lahf
sbb
cwtl
jp
push
stos
dec
mov
xlat
popf
adc
jo
push
mov
push
rorl
sub
xor
or
mov
sbb
pop
push
jo
nop
inc
pop
sub
dec
cmpl
sbb
inc
cld
xor
idivb
enter
cld
add
sbb
jmp
leave
sbb
push
xor
push
inc
dec
add
fnsave
xor
outsl
sahf
push
cmp
push
mov
sub
or
lret
cmc
xchg
and
mov
xor
and
xchg
mov
adc
or
pop
pop
sub
addr16
push
or
pusha
mov
sbb
sbb
lea
push
call
ret
xor
push
dec
cmp
ret
movsb
pop
push
cld
rcrb
pop
and
pop
fisubrl
pop
lahf
shll
mov
add
or
inc
lea
adc
jg
push
movsb
fwait
dec
xor
scas
or
mov
clc
xor
push
loop
mov
movl
dec
lock
pusha
adc
mov
clc
in
add
xor
cmp
inc
dec
push
js
push
push
mov
test
vmread
push
dec
lock
inc
sbb
xchg
mov
ja
dec
dec
lock
ds
dec
fists
cwtl
adc
cmp
sbb
push
stos
or
scas
fisubrs
fstps
inc
add
clc
inc
inc
jnp
cmp
jae
mov
cwtl
and
pop
jg
inc
adc
sbb
movl
cmc
fcompl
inc
push
mov
pop
fcomps
jl
mov
lock
sub
xor
and
inc
and
call
ret
cmp
mov
outsb
and
xor
xchg
dec
movsl
cmp
and
or
add
sbb
lods
cmp
mov
jge
movb
imul
rorl
test
pop
xor
sub
mov
add
adc
xlat
adc
cmp
lea
jne
loop
or
adc
adc
push
or
fsubs
cmpsb
mov
cmp
add
add
adc
stos
push
lahf
and
push
outsb
aam
in
mov
movsb
cli
outsl
cmp
push
pop
je,pn
mov
jl
mov
xchg
test
or
mov
xchg
pop
ret
lahf
mov
push
sbb
xlat
dec
fstpl
aas
mov
inc
aas
mov
dec
iret
mov
dec
adc
iret
in
aaa
add
sbb
push
out
sarl
mov
and
or
pop
jg
adc
es
pop
sbb
xor
int
push
adc
ret
adc
inc
add
mov
mov
loop
cmpsl
xor
lcall
mov
data16
and
or
or
pop
mov
push
pop
sbb
outsb
xchg
fdivrs
rorb
icebp
xor
or
fucomp
mov
popf
mov
in
and
push
mov
add
pop
mov
movl
jnp
add
inc
inc
ljmp
sbb
push
roll
adc
imul
lret
lock
mov
jns
hlt
jge
mov
lea
push
cmpsl
lods
jg
inc
adc
jno
outsl
jae
lods
outsb
mov
xchg
fdivrl
push
push
in
clc
adc
cmp
push
inc
sbb
int
fsubrs
dec
jo
dec
movb
je
je
pop
ja
add
add
fld
adc
push
and
jl
mov
cmp
cmp
add
or
dec
imul
fcoms
push
mov
call
adc
loope
sub
test
cmc
fmull
cwtl
cmp
or
or
lcall
cmp
imul
add
inc
sahf
and
andl
push
in
or
repz
and
push
push
jl
test
inc
gs
jne
hlt
lock
scas
rorl
mov
sti
xchg
out
mov
sub
add
stos
dec
push
push
inc
jo
sbb
sub
mov
cmc
and
or
xchg
aam
mov
dec
or
roll
sub
out
and
and
mov
outsb
xor
in
popa
aas
sbb
cmp
shll
xchg
adc
inc
jl
xor
pop
insb
movsb
push
inc
mov
cmp
sub
or
into
add
xchg
lods
dec
push
push
mov
add
test
pop
push
push
andl
and
pop
push
mov
inc
sbb
pop
mov
sbb
pop
jmp
outsb
mov
push
sbb
pushf
push
addl
loope
and
add
push
push
mov
push
inc
je
pop
call
insl
dec
dec
je
shrl
dec
rorb
and
push
xchg
adc
das
in
add
sub
jmp
rolb
cmpl
inc
incb
movsl
outsb
call
push
pop
or
dec
sub
adc
cmc
push
fists
mov
push
sbb
fs
outsl
push
cmp
add
mov
sub
jecxz
lds
push
loope
clc
or
and
shll
pop
xchg
fdivl
add
cmp
fldt
loop
cmp
mov
or
andl
dec
shll
adc
sbb
sbb
js
xchg
sbb
or
fsubrs
jne
push
loopne
mov
ljmp
push
mov
mov
sub
mov
pop
add
push
jb
in
and
xchg
cmp
push
dec
push
or
scas
ja
dec
jmp
adc
and
in
sub
sbb
test
add
adc
addb
out
out
xlat
mov
int3
gs
clc
add
insb
push
dec
ss
icebp
fnsave
pusha
xor
add
ss
jp
jmp
js
pop
inc
in
daa
repnz
adc
adc
jmp
add
push
push
sahf
sbb
sahf
dec
jne
mov
cmc
sbb
hlt
pop
lret
adc
adc
clc
push
cmp
fnstenv
adc
insb
add
inc
rorl
jnp
in
pop
mov
sub
popa
xchg
inc
adc
jl
testl
cmp
sbb
sbb
push
inc
push
test
push
shrl
stos
ljmp
cmp
cli
dec
repz
mov
cmpl
cmp
dec
lret
and
mov
ljmp
dec
jbe
or
push
sub
or
aam
jmp
jle
pop
jge
and
fs
cli
mov
outsb
test
jle
cmp
xor
cmp
or
shrb
sbb
jns
mov
jl
push
icebp
dec
or
mov
pop
negl
or
jg
int3
loop
mov
pop
ds
ret
xor
mov
push
cld
xor
or
cmp
or
mov
bound
sbb
push
and
ljmp
dec
add
jns
dec
adc
mov
pushf
mov
cmp
jo
xor
dec
and
sub
push
or
movsb
icebp
in
jl
bnd
test
pop
xor
sbb
push
adc
xchg
adc
jmp
push
push
push
xor
fisubl
mov
cmp
xchg
dec
mov
movsbl
inc
or
mov
or
shlb
push
adc
sbb
call
or
sbb
sbb
cmp
adcb
and
shr
sub
sub
mov
js
mov
dec
inc
push
sub
ja
jmp
ss
add
movsb
iret
push
add
out
in
sub
mov
push
add
orl
pop
daa
lds
push
pop
xor
push
or
inc
aas
in
or
push
cltd
in
dec
adc
lock
dec
push
pop
ftst
or
mov
add
aam
lahf
roll
lods
loop
cld
mov
sub
outsl
les
mov
sub
jno
push
or
enter
sbb
jmp
and
das
cmpsl
jne
jl
or
mov
icebp
testb
pushf
inc
icebp
adc
jb
pop
xor
mov
dec
fs
add
rcrl
sub
pcmpgtw
clc
jle
jecxz
dec
xor
aas
push
push
sbbl
inc
pop
sub
je
push
sahf
sub
adc
test
sti
fcoms
mov
punpckhbw
inc
adc
lahf
jne
sub
insb
adc
sbb
add
aaa
cmc
adc
jecxz
les
inc
mov
test
test
and
adc
sub
test
cmp
mov
sbb
adc
mov
xchg
mov
push
push
lods
inc
pop
xor
sub
and
sub
and
mov
jns
stc
cmpsb
or
push
sbb
jmp
shlb
pusha
and
rcrb
fnstsw
pusha
or
rolb
xchg
ss
fldl
dec
test
nop
add
lea
pop
pop
xchg
sbb
adc
les
adcl
pop
shlb
inc
jp
sbb
pop
int
and
aad
shlb
mov
pushl
test
or
sub
mov
add
inc
push
insl
les
fsubrs
cltd
cmp
mov
lods
aas
lock
xor
fdivs
or
pop
add
int3
es
push
adc
cmp
push
push
push
imul
movsb
mov
sbb
lods
mov
test
sbb
inc
mov
sbb
sub
icebp
and
inc
sub
and
xor
adc
cmp
mov
adc
add
and
push
push
sbb
inc
pop
mov
pop
fiadds
jo
inc
xor
andl
mov
addr16
pop
sbb
adc
daa
lock
movsb
sti
cmpsl
popf
test
sbb
inc
dec
outsl
cmp
in
mov
sbb
push
or
les
xchg
pusha
push
sub
jge
mov
jl
push
pop
aam
shl
sub
js
cmp
aam
inc
fs
sub
mov
andb
sbb
popa
rorl
xor
mov
push
inc
ret
cmc
mov
sub
push
push
xlat
and
mov
scas
push
add
pusha
addl
test
push
gs
or
add
jmp
insb
and
add
or
loopne
into
fcoms
punpckhdq
stos
sbb
or
sub
add
shll
mov
insl
add
mov
dec
add
mov
push
sbb
cs
das
or
in
push
adc
loope
mov
pusha
cltd
lahf
push
repnz
push
sub
mov
pop
inc
lods
mov
sahf
mov
xlat
mov
jmp
add
and
dec
es
punpckldq
adc
cltd
mov
xchg
jo
js
inc
or
and
jge
add
test
hlt
lock
inc
mov
sarl
or
or
arpl
add
loopne
pop
lods
mov
pop
std
pop
sarl
rol
inc
cmp
xor
mov
pop
mov
push
and
popa
dec
test
add
sbb
or
addl
adc
and
add
pop
or
sbb
jl
mov
push
lea
mov
jo
loop
cld
cmpl
roll
and
xor
cltd
aas
xor
fwait
mov
std
aad
or
push
fucomi
das
lea
leave
sti
shlb
jne
jae
dec
call
sub
loope
fimuls
jge
xorl
loopne
push
call
fiadds
sbb
dec
fmuls
bound
repnz
push
pop
push
jge
mov
in
jecxz
or
push
mov
out
test
mov
fs
loop
push
icebp
and
loope
sub
xor
and
cld
adc
jnp
inc
int3
sub
sbb
xchg
sub
fmuls
addb
jge
je
inc
add
lds
push
addr16
test
cli
push
push
sub
js
mov
test
fiadds
push
popa
sbb
and
test
adc
js
mov
and
xor
xchg
das
hlt
jb
adc
and
jo
push
in
push
inc
shl
in
add
or
adc
xchg
or
or
xchg
and
sbb
mov
pop
mov
mov
pusha
push
popa
sub
dec
mov
xor
es
xor
cmp
cmp
cld
xchg
inc
je
adc
mov
and
mov
inc
lcallw
adc
in
add
push
and
xor
fs
jge
inc
bound
pop
es
mov
sub
dec
or
xor
in
enter
wrmsr
cmp
aas
cmp
cmp
cmp
inc
pop
inc
or
mov
popa
jecxz
inc
jl
push
gs
lea
sbb
cmp
mov
lcall
in
fdiv
insl
lcall
cmp
push
mov
shr
adc
push
js
out
push
rcll
ss
add
fs
and
sub
push
iret
xor
xchg
mov
inc
xchg
add
leave
jne
lds
fs
sub
stos
outsl
and
cmp
mov
jmp
sbb
loop
cltd
pusha
mov
push
pop
sbb
inc
fldl
pop
mov
ret
pop
ds
jae
and
loopne
push
or
jne
dec
into
inc
les
sub
stos
mov
and
dec
cmpsb
dec
imul
jmp
fldenv
push
add
mov
shufps
pop
call
out
fisubrs
movsb
iret
add
ljmp
push
sbb
cli
dec
add
and
test
pop
sub
dec
inc
inc
push
xchg
stos
lcall
inc
adc
adc
pop
lods
inc
jg
push
push
push
imul
cwtl
add
nop
daa
jecxz
sub
cmp
or
and
das
sub
xor
ficoms
sub
dec
mov
cmc
and
adc
inc
aas
dec
pushf
lret
or
adc
push
cmpsl
mov
push
adc
or
scas
push
adc
insb
jge
cmp
jne
push
mov
push
pop
adc
inc
in
popf
cmc
ret
addr16
jbe
add
mov
daa
les
adc
cwtl
lret
sbb
cmp
mov
add
or
pop
add
sub
jg
aaa
lahf
fadd
inc
movsl
inc
sub
push
add
out
je
sti
mov
mov
cmpb
push
jo
push
mov
and
adc
or
cmp
scas
push
lcall
mov
cmp
je
xor
inc
cmp
and
pop
fs
jmp
push
sub
ret
sbb
sbb
icebp
or
enter
pmuludq
loop
fbstp
mov
loop
scas
fisubs
mov
mov
imul
push
sub
dec
in
dec
aad
aam
xchg
out
xor
sbb
idivl
sub
jnp
mov
jmp
ret
xor
enter
fiaddl
repz
dec
add
xor
push
movsb
or
fsub
push
sbb
cs
push
les
cmp
shr
adc
je
lret
outsb
xchg
mov
fbstp
stos
ficoms
mov
repz
dec
xchg
push
push
lea
push
inc
push
arpl
mov
popa
lods
push
adc
adc
fldenv
addb
xchg
adc
fisubrs
mov
push
enter
cltd
call
jb
adc
adc
enter
cmp
cmp
jno
call
int
les
cmc
inc
cmp
fbstp
mov
ljmp
inc
sbb
mov
sub
and
push
test
sub
sub
pushf
ficompl
mov
hlt
sbb
inc
lret
add
and
xor
cld
and
rcrl
xor
sbb
or
jns
or
cmp
mov
push
daa
hlt
shlb
push
or
and
push
addr16
sbb
enter
mov
and
js
das
mov
hlt
mov
push
or
jg
cmpb
insb
popa
mov
inc
xor
dec
or
or
or
js
inc
cmpsb
and
fidivl
add
push
sbb
bound
aas
add
nop
pusha
iret
or
xchg
movsl
push
scas
test
dec
ss
test
daa
mov
pop
mov
aaa
shld
adc
jmp
sbb
je
mov
sub
xor
add
sbb
stos
push
or
inc
mov
pop
sbb
and
mov
sbb
mov
xchg
div
mov
add
lds
adc
cmp
add
and
mov
dec
sbb
mov
pop
enter
xor
aas
fildll
insb
add
in
cli
fdivr
dec
pushf
mov
movl
loope
push
lea
out
andb
or
fdivs
pop
mov
xor
mov
lods
or
and
jmp
shrb
pop
dec
adc
int
push
and
stos
scas
movsb
out
xor
add
data16
push
xor
push
mov
add
push
jle
push
lret
lret
enter
sbbb
cwtl
adc
cwtl
push
push
nop
fucomp
dec
movsl
mov
inc
and
cmpb
push
push
push
arpl
enter
in
aaa
inc
xlat
add
clc
mov
and
out
and
cmp
adc
xor
lods
in
or
sub
adc
and
fwait
js
inc
or
stos
movsl
pop
lock
push
pop
pop
dec
and
nop
xchg
sub
leave
rorl
movsb
inc
subb
sbb
sbb
sbb
xor
jp
mov
push
imul
mov
add
cltd
test
test
pop
mov
sub
pop
mov
cmp
pop
mov
and
push
rclb
mov
dec
aaa
inc
xchg
cltd
pop
mov
push
jne
loope
or
jne
xchg
test
push
loopne
or
and
jmp
hlt
ret
or
repz
es
push
jmp
out
and
je
pop
les
insl
dec
adc
mov
out
xor
mov
add
pop
adc
test
arpl
loopne
sbb
rolb
inc
rolb
sbb
jno
cs
and
call
or
adc
adc
sub
push
and
sbb
daa
xchg
out
adc
arpl
and
lock
hlt
lods
jne
dec
dec
gs
xchg
jno
add
ja
mov
mov
dec
popa
call
pusha
pop
xor
or
xor
adc
mov
jg
lock
fsubr
pop
rorb
or
sub
repz
icebp
pop
sub
ljmp
pop
loope
and
sbb
cmp
push
push
pop
fsubr
xchg
add
sti
hlt
in
push
add
pop
sbb
flds
add
mov
and
mov
mov
and
push
and
cmp
out
mov
jmp
mov
cmp
push
sbb
jno
jnp
add
lret
in
sbb
inc
adc
pop
cmp
mov
inc
adc
loopne
xchg
adc
stos
and
inc
and
rorb
ss
lea
cld
or
cmpsl
sub
hlt
pusha
add
cmp
push
mov
xchg
add
mov
dec
out
into
sbb
push
inc
cmp
scas
inc
sbb
hlt
ljmp
daa
pop
mov
mov
sbbl
cmpsl
aam
xchg
inc
dec
xchg
or
mov
lret
pop
cld
push
xchg
xchg
and
mov
dec
loope
loopne
jp
xor
test
pop
sbb
sbb
leave
sub
hlt
dec
jle
adc
lea
orl
dec
mov
lahf
test
ljmp
push
mov
sbb
outsl
sub
movsb
mov
or
cmp
mov
pop
xor
mov
jl
std
js
jne
adc
sub
pusha
push
lock
jno
xor
xchg
fmul
push
icebp
add
dec
jbe
filds
xchg
stos
es
popa
or
add
add
or
fstpl
add
jae
movsl
xchg
sbb
add
cmp
add
xor
cmp
rcll
or
in
lock
ja
inc
adcb
test
mov
rcl
sbb
push
push
push
cmp
lea
pushf
test
fucomi
sbb
sub
jg
add
js
dec
repnz
xor
jl
push
cmp
mov
jbe
mov
mov
mov
sbb
jo
add
mov
out
sbb
call
fmuls
sbb
pop
pop
pop
adc
xchg
adc
and
lea
push
enter
pop
adcb
js
stos
ds
call
nop
pop
insl
and
dec
call
adc
subb
push
je
and
or
mov
mov
enter
aam
outsb
sahf
mov
or
or
mov
imul
push
notl
test
jl
and
jge
or
leave
xchg
inc
loopne
xor
push
and
bound
inc
and
mov
sbb
aam
inc
xchg
or
ret
mov
test
push
hlt
int
inc
pop
jmp
inc
sbb
pop
mov
or
daa
mov
push
jo
jbe
or
int3
imul
jp
jns
adc
insb
sbb
int3
add
inc
add
inc
fldcw
test
push
orb
imul
inc
mov
lods
and
push
mov
and
and
sarb
inc
test
adc
imul
in
scas
shrl
or
and
xor
push
mov
adc
mov
or
jl
mov
testb
adc
lret
aad
aad
jmp
dec
sahf
lock
adc
and
test
jns
sbb
nop
out
push
cmp
je
cwtl
adc
xchg
lret
add
test
inc
into
mov
orb
lock
test
test
addl
pop
jecxz,pt
add
xchg
add
fnstenv
pop
lea
cmp
jne
cmp
aaa
sbbl
add
mov
cli
dec
inc
add
ret
outsb
push
push
or
dec
cmp
sub
inc
mov
and
xor
or
sbb
aaa
push
jl
push
mov
das
repz
or
and
xor
add
jo
mov
stos
clc
jle
and
pop
pusha
cmp
je
inc
sub
sarl
insb
bound
fneni(8087
iret
shlb
in
fimuls
and
pusha
xor
repnz
cmp
lret
jnp
add
add
pop
pop
cmp
add
and
or
add
add
hlt
lea
push
loopne
xor
dec
xor
add
mov
in
add
mov
sti
out
shll
jp
pusha
sbb
xchg
push
cmc
test
push
add
cmp
sbb
das
shrl
ror
mov
cmp
jle
add
test
pushf
ds
or
xor
sbb
fsub
and
cmp
fdivrs
cmp
sub
cmp
mov
inc
ret
mov
xlat
inc
mov
leave
and
mov
xor
add
push
dec
aaa
sub
pop
or
in
mov
adc
aaa
adc
cmpsb
xor
push
mov
ds
sahf
or
push
and
mov
imul
push
je
adc
mov
movsl
insl
mov
push
mov
inc
push
xor
inc
fiaddl
divl
loopne
mov
mov
jmp
mov
mov
xor
scas
mov
test
pop
ret
jle
cmpsb
sbbl
add
mov
jmp
adc
push
push
mov
sbb
bound
hlt
dec
inc
dec
jbe
sti
daa
sbb
sbb
inc
add
and
pusha
and
add
push
cmp
and
imul
stos
mov
mov
cltd
or
xor
dec
jb
push
pop
and
or
shl
dec
push
pop
cwtl
sub
and
xor
pushf
int3
and
mov
sub
inc
push
pusha
xchg
xchg
and
popa
sbb
push
mov
adc
adc
mov
jbe
or
cmp
mov
pop
cli
mov
or
out
cmc
pusha
sub
shrb
leave
push
dec
jno
adc
add
inc
movsb
fwait
add
or
xor
fs
mov
imul
xor
adc
cmp
imul
test
fs
add
cs
pop
xor
jg
add
mov
cmp
add
pop
fdivrs
or
mov
pop
enter
in
add
pop
fdivl
push
leave
daa
xorl
popf
xchg
and
insb
inc
pusha
call
lods
mov
popa
scas
cmp
jne
cli
stc
jb
or
ss
add
cmp
jae
push
into
mov
cld
in
add
sti
stos
add
ja
push
push
push
ss
pop
adc
cmp
mov
rorb
inc
in
sti
cld
call
mov
adc
push
xor
cmp
ror
push
cmp
fstpt
outsb
add
das
test
cld
pop
call
add
cmp
jl
pop
std
adc
adc
rorl
inc
or
cwtl
mov
mov
fs
sti
ret
adc
or
movb
pop
rcr
addr16
mov
push
inc
pop
adc
pop
sbb
inc
xor
mov
rcll
pop
adc
inc
xchg
enter
mov
add
mov
mov
cmp
add
add
movsb
sbb
stos
and
aaa
add
inc
add
pop
add
sbb
rcll
lea
aam
insl
dec
xorl
jo
insl
xor
cs
sub
pop
adc
inc
or
inc
add
xor
adc
les
int
roll
sbb
js
push
pushw
and
xor
add
sub
cmp
es
or
fwait
and
inc
inc
adc
test
adc
push
jbe
hlt
inc
stos
lea
cmp
or
orb
push
mov
in
adc
push
push
dec
imul
fs
adc
sar
mov
cmp
mov
add
pop
or
dec
or
call
mov
scas
mov
adc
int
adc
sbb
nop
ja
into
sbb
andps
es
sahf
or
adc
sahf
shlb
jns
movzbl
js
aas
xchg
out
pop
and
popa
add
xor
daa
sbb
pop
movsb
sqrtps
or
cmc
dec
sub
insb
loop
sub
aas
mov
pushf
xlat
jo
sub
mov
cltd
adc
mov
dec
and
fs
push
popa
mov
mov
out
inc
jb
lea
je
xchg
jge
sub
insb
jle
inc
mov
inc
hlt
adc
and
jmp
lds
into
pusha
arpl
ret
sub
pusha
in
inc
cmp
pushf
or
mov
sbb
xchg
pusha
mov
push
add
cld
stc
xor
adc
and
and
xchg
jle
and
and
mov
mov
xor
ret
mov
fsubrl
mov
mov
sub
sbb
cwtl
call
inc
repnz
cmp
mov
xor
xor
jb
fildl
xorl
sub
lahf
sub
sbb
pop
push
inc
ja
movsb
inc
aaa
jnp
nop
inc
aad
adc
push
adc
leave
jae
xor
cmp
sbb
adc
in
shrl
outsb
jmp
adc
rorb
xor
pop
scas
rclb
and
cmp
push
push
mov
dec
rolb
sbb
mov
inc
sbb
pop
ljmp
mov
sub
xor
xchg
jg
out
jns
add
add
jns
xchg
and
sub
inc
push
sarl
jg
ret
mov
xor
or
in
cmp
scas
cwtl
mov
jb
add
push
push
add
push
adc
out
cmp
or
xor
add
or
adc
add
inc
adc
push
push
nop
lret
and
add
or
xchg
sub
xor
add
add
cmp
inc
sub
cmp
push
nop
lret
or
push
push
dec
invd
and
cmpsb
jbe
sbb
push
sbb
mov
mov
jbe
mov
rolb
daa
sti
xchg
xor
xor
inc
enter
inc
sbb
idivb
add
dec
mov
or
mov
mov
fsubrs
push
movl
pop
inc
pusha
add
pop
mov
in
or
lods
sub
in
pop
jns
mov
push
andl
inc
aas
pop
and
inc
clc
inc
pop
ret
pop
in
push
fs
sbb
mov
loope
sub
dec
dec
sbb
int
in
dec
sbb
mov
rclb
dec
lcall
mov
and
or
sbb
ja
setne
cltd
add
cmovbe
or
push
dec
rorb
inc
or
int
or
and
or
xor
sub
rorb
and
sbb
add
add
inc
rorb
or
aas
sub
or
mov
aas
sbbl
jb
pop
clc
add
add
mov
in
push
in
ss
mov
xchg
leave
xor
mov
push
mov
je
xor
mov
add
inc
xchg
cmpsb
sub
mov
jnp
or
pop
jne
sbb
inc
js
fucomi
sbbb
dec
std
mov
dec
push
enter
push
pushf
adc
outsl
and
stc
mov
int
and
adc
rorb
adc
dec
sbb
sbb
add
and
add
jmp
sbb
fsubrl
loop
xor
push
adc
aas
repnz
cmpl
add
mov
dec
loope
push
cmpsl
add
xor
dec
or
xchg
sub
or
in
jbe
bound
nop
mov
adc
jno
and
add
int
add
push
or
inc
and
fsubs
push
push
int3
adcb
cmpsb
push
push
xchg
xchg
sub
test
fsts
mov
lea
adc
sub
sbb
nop
sub
push
rorl
sbb
sbbb
sbb
jns
es
inc
push
mov
dec
mov
mov
push
insb
push
add
movsb
adc
aam
pop
bound
cmp
jge
push
push
aam
pop
xor
dec
xchg
cmpsl
cs
orl
mov
sub
add
and
sub
push
inc
sub
jmp
loop
mov
leave
push
push
mov
in
dec
jle
sub
dec
les
or
mov
jns
or
push
mov
cltd
or
pop
sahf
or
insb
popa
testl
sbb
sbb
xor
cmp
push
in
sbb
nop
inc
sbb
pop
enter
sbb
mov
push
cmp
outsb
or
movsb
inc
shr
push
sub
add
or
and
inc
add
lahf
push
pop
dec
cld
nop
and
cmpsb
cmc
sahf
push
mov
adc
dec
xchg
out
lds
add
pop
subl
jne
out
into
es
aam
mov
cmp
outsb
jge
mov
add
addr16
faddl
mov
mov
mov
pop
push
jl
je
lret
hlt
cmp
push
xor
stos
cs
push
push
and
sub
movsb
mov
sub
jns
jmp
or
push
dec
insb
ret
mov
inc
dec
pushf
imul
inc
or
push
push
push
sub
lods
add
fildl
loopne
movl
cwtl
mov
je
mov
cmp
imul
inc
lea
xor
loope
or
sbb
aam
aam
or
das
scas
lcall
lahf
inc
test
sbb
cld
sahf
nop
mov
fmuls
add
push
sbb
fadds
mov
dec
in
xchg
fcoml
cmp
adc
jns
pushf
add
mov
addr16
cmp
cmp
adc
push
loopne
aas
or
insl
in
mov
xchg
dec
cld
out
dec
in
push
jle
and
adc
inc
in
js
movsl
mov
out
shr
shr
xchg
test
mov
cmpsl
cmp
lea
add
cmp
shlb
adc
xchg
xlat
rorb
addl
ret
dec
shll
push
mov
add
add
lret
arpl
push
mov
cmp
jle
test
mov
cmp
mov
add
mov
iret
out
or
mov
lea
pop
mov
jg
cmpb
daa
push
jne
push
ficompl
insb
movb
lcall
loopne
std
or
lea
das
mov
lea
mov
xchg
out
or
xchg
cmp
loop
lahf
orl
pop
in
nop
dec
dec
xchg
fists
or
cwtl
adc
xchg
jne
mov
mov
testb
mov
xchg
cli
or
int3
xchg
sbb
jge
jae
push
and
add
jmp
mov
pushf
sub
jb
push
sub
mov
divb
lods
xor
push
lret
loope
test
popf
popa
or
add
in
xor
dec
push
ja
cmp
or
gs
or
mov
add
add
adc
push
add
fsub
push
pushf
jo
or
xor
fs
in
mov
ret
in
jp
push
es
insb
loopne
mov
pop
fs
int
loopne
gs
mov
adc
sub
ret
insb
jmp
mov
jns
mov
mov
or
mov
in
or
sub
sub
orl
enter
push
dec
jb
leave
add
adc
pop
dec
cs
jecxz
pop
dec
inc
push
cmp
sub
adc
mov
xchg
sbb
mov
inc
and
push
inc
loope
or
orl
loop
or
dec
push
adc
insb
cmp
test
adc
arpl
push
pushf
cwtl
adc
cmpl
je
ja
movsl
mov
inc
xchg
pop
xchg
mov
pop
mov
aam
inc
cmp
inc
mov
xlat
jo
pop
iret
js
add
stos
sub
mov
mov
sub
cmpsb
dec
rcrb
sbb
mov
inc
leave
iret
mov
mov
aas
enter
popl
adc
rcrb
andb
std
in
inc
imul
stc
dec
sbb
mov
fs
jb
addl
sbb
sub
push
jno
inc
outsl
push
mov
pop
cmp
cmp
cmp
mov
sbb
ljmp
cmp
sbb
scas
add
cmp
shll
ljmp
je
jno
mov
inc
shrb
and
sbb
sbb
push
pop
and
sbb
ret
adc
and
cmpsb
add
scas
cmp
imul
in
sub
notl
leave
or
sbb
push
sbb
cmpl
jns
push
inc
adcl
lds
sbb
xchg
lret
je
jge
out
add
fs
andl
add
add
fs
pusha
sti
add
add
leave
int3
push
jge
cs
mov
pop
push
xchg
fdivrs
sub
cmp
data16
dec
pop
cmpsb
cmp
pop
push
lods
and
cmp
push
jmp
imul
adc
jo
nop
mov
cmp
mov
dec
insb
push
and
sub
mov
push
adc
dec
jmp
adc
int3
mov
lea
inc
or
add
push
loop
js
sbb
push
xchg
ret
dec
or
ss
outsl
push
mov
or
imul
adc
imul
push
repz
cmp
adc
cs
stos
dec
inc
and
sbb
clc
and
pop
or
xor
add
and
push
mov
jno
jle
cli
push
adc
hlt
jge
rorb
pop
mov
fsubp
add
adc
and
add
test
enter
jno
dec
gs
jg
push
fwait
adc
in
mov
das
or
pusha
pusha
test
sbb
lahf
enter
and
add
push
push
js
pop
pusha
mov
cwtl
inc
stos
add
mov
in
push
dec
xor
mov
aad
or
pop
dec
adc
stc
adc
xor
adc
imul
insl
adc
mov
mov
push
jle
subl
push
ret
dec
jl
push
jno
xor
int
add
ret
js
je
or
adc
jns
ljmp
fdivrl
jmp
ret
daa
dec
add
pop
xor
sub
xor
in
jns
push
mov
loope
inc
sub
push
in
cmp
or
xor
mov
cmpsb
xor
or
cmp
fidivrl
adc
adc
inc
dec
mov
cmp
push
mov
sub
adc
add
addl
adc
cmp
push
pop
cvtpi2ps
sub
rorl
jae
nop
add
rcrb
nop
add
add
mov
push
das
popf
push
mov
add
test
lret
nop
push
sub
stos
pusha
rol
popf
test
push
je
nop
fstpt
mov
lcall
inc
jmp
dec
cmpsb
fs
jne
cwtl
or
jae
push
xchg
nop
pop
dec
jecxz
inc
and
pop
shrl
jo
mov
push
popf
sub
add
sbb
cmp
adc
dec
es
pop
mov
push
data16
sbb
jne
jp
imul
sbb
adc
sbb
mov
pushf
inc
iret
xor
xor
push
stos
into
mov
aaa
pop
sub
iret
cmp
imul
inc
mov
rolb
inc
fcoms
adc
sti
mov
mov
movl
fstpl
inc
xor
xor
xchg
push
jp
fwait
dec
test
ja
jne
lods
cwtl
inc
xor
mov
sub
andb
jo
and
pusha
inc
pusha
stos
aas
aam
inc
adc
pop
and
in
mov
jmp
in
es
jmp
mov
sar
pop
dec
add
xchg
push
cld
loope
bound
dec
push
jne
cmpsl
loopne
repnz
into
loop
cmp
sbb
je
or
and
and
adc
inc
dec
enter
fadd
xchg
and
xchg
je
cmp
adc
push
cli
and
push
mov
pusha
sub
sbb
fwait
mov
pop
and
mov
hlt
or
push
lahf
cs
cmp
or
mov
xlat
push
xor
mov
sub
jae
sub
and
adc
add
test
stos
inc
lods
push
sub
adc
lods
nop
and
adc
or
xchg
adcl
jb
xchg
push
adc
xor
push
xor
push
add
sub
sbb
incb
jae
cmp
jg
pop
fbstp
jno
xchg
dec
dec
repnz
inc
adc
test
push
popf
sbb
in
sgdtl
pop
dec
jp
sub
mov
mov
sbb
and
jae
add
jae
sub
loopne
sub
das
pusha
pop
insb
pop
or
sbbl
inc
insb
add
and
sbb
or
xor
inc
xorl
mov
imul
movsb
cmp
push
fmull
adc
sub
cmp
shl
jecxz
test
mov
and
and
adc
cs
sbb
or
or
push
js
mov
popf
je
daa
inc
push
cmp
leave
push
jb
jl
fs
dec
je
adc
fdivs
repz
adc
popf
addr16
jle
mov
add
mov
adcl
mov
adc
inc
push
mov
pop
lret
jl
cmp
imul
xlat
shrl
add
aaa
xchg
or
in
js
je
das
pop
mov
lahf
mov
pop
mov
push
and
dec
add
inc
add
test
sbbb
sub
data16
pop
pushf
push
hlt
inc
sbb
cmp
mov
fcoms
xchg
sub
mov
push
and
cs
push
push
dec
imul
adc
jns
push
mov
test
je
mov
or
cmp
sbb
pop
or
and
mov
add
fs
cmc
xor
cmp
dec
add
xchg
or
ret
jecxz
push
popa
mov
push
add
mov
pop
pusha
pop
add
mov
dec
jne
xchg
orb
xor
cmp
ja
adc
aam
je
inc
pop
sbb
adc
je
repz
xor
insb
in
ret
das
add
cmp
fstl
ds
jo
pop
repnz
ss
xor
stos
sbbb
aad
or
mov
mov
mov
cld
gs
jb
loop
ds
shrw
and
lea
cmp
cmpsl
call
mov
push
add
inc
jecxz
adc
add
xor
das
cmp
push
or
dec
stos
xor
std
fists
fisttpll
and
mov
sbb
test
jmp
fisttpl
mov
xchg
jo
jno
cmpsl
dec
inc
lock
rcll
pop
jecxz
repz
xor
fs
sbb
push
lds
xor
jns
push
das
or
jae
test
int3
adcl
ret
incb
adc
bound
xor
js
sbb
mov
or
mov
xor
mov
shr
and
cmovbe
lcall
sbb
and
in
add
scas
dec
cld
imul
jnp
pop
das
jbe
xor
push
pop
movsl
dec
mov
mov
fldt
sub
push
xor
orl
jp
mov
sbb
push
movsb
sbb
sbb
sbb
sub
rclb
in
fimull
jp
popa
stos
push
push
xchg
cld
cmpsb
pop
pop
and
rorl
subb
xchg
inc
and
xchg
push
pop
mov
push
push
add
or
push
cmp
push
xor
and
cmp
mov
sbb
insl
addr16
and
or
inc
mov
pop
orb
pop
or
lods
mov
fs
pop
leave
or
pusha
cmp
xor
xor
in
jbe
nop
iret
sub
sub
test
and
and
jmp
inc
push
mov
sbb
imulb
add
or
mov
ss
loope
insl
imul
xchg
loope
rcrb
pop
sub
insb
xchg
gs
mov
arpl
shll
and
sarb
aas
mulb
leave
xchg
or
inc
cmp
sub
adcb
int
add
icebp
das
idivb
test
das
mov
mov
movb
add
bound
xor
outsb
inc
mov
mov
mov
push
es
and
push
add
lods
mov
cmp
daa
sub
loopne
jne
cmp
je
pop
add
adc
pop
idiv
cmp
xchg
push
push
add
dec
fucom
lods
and
add
repz
pmaxub
inc
mov
cs
ljmp
push
dec
xlat
jb
xor
or
add
adc
je
in
mov
lods
mov
bound
sub
cmp
inc
mov
cmp
xchg
aaa
sbb
push
dec
inc
in
enter
xor
push
mov
jg
rolb
inc
pop
mov
xchg
dec
mov
dec
sub
dec
pop
mov
add
add
ja
push
inc
cld
ja
js
adc
lods
mov
dec
and
push
dec
sbb
xor
inc
add
pop
xor
xor
xchg
xor
mov
pop
mov
push
cmp
lea
in
sahf
jg
mov
cmp
jnp
push
lods
mov
sahf
popa
jne
and
sbb
mov
daa
sbb
adc
or
dec
lock
adc
pop
gs
xor
enter
loope
ret
adc
inc
inc
jne
cmp
adc
inc
inc
push
push
sbb
nop
xchg
inc
dec
pop
push
loope
inc
add
xchg
mov
dec
adc
mov
cld
movsb
adc
pop
and
sarb
dec
sbb
mov
add
or
inc
or
jle
popf
push
xor
aam
data16
cmp
sbb
mov
adc
cmp
jg
adc
jmp
cmp
jnp
inc
ljmp
test
sbb
pusha
dec
lret
sub
cmp
mov
inc
ljmp
push
lret
inc
mov
add
cltd
enter
and
xor
iret
test
xchg
inc
mov
cmp
mov
andb
test
xchg
mov
push
data16
rorl
or
mov
jge
xchg
adc
ret
cmp
std
push
fcoml
sbb
adc
add
push
cmp
sbb
js
mov
out
mov
mov
jmp
xor
pop
sbb
or
jle
push
jle
add
sub
aam
sub
or
or
adc
add
enter
lret
mov
mov
mov
pusha
ljmp
mov
pop
js
or
pop
call
test
sub
les
decb
inc
pop
mov
mov
or
xor
push
je
popa
push
pop
xchg
adc
popl
pop
in
push
cmpsb
mov
jg
cmp
les
add
aaa
and
cltd
dec
jne
or
push
aaa
sub
dec
cmp
jae
into
cmp
xchg
hlt
add
aaa
lea
icebp
adc
mov
fbstp
cwtl
jns
mov
testb
mov
push
cmp
jne
pop
push
or
in
add
test
cmp
cmp
xchg
dec
push
call
and
ret
in
test
shl
add
aaa
cmovns
pop
lcall
adcb
inc
int3
adc
add
aad
imul
and
and
add
sub
test
add
nop
imul
cmc
mov
mov
jb
dec
fsubrs
mov
rcrb
mov
push
lea
add
ljmp
jle
add
nop
sbb
jae
add
mov
mov
movsl
push
aad
dec
pop
test
sbb
int3
dec
jge
movzbl
add
clc
adcl
bound
das
ljmp
lods
in
push
push
pop
shll
inc
mov
ja
mov
ret
pop
aaa
pop
sbb
shr
test
outsl
jbe
test
cmp
je
sub
mov
in
dec
int
sbb
dec
mov
push
mov
test
jbe
inc
fs
rcrl
pop
sbb
jns
xlat
mov
xchg
subb
add
mov
inc
enter
adc
add
mov
cmp
jle
push
cld
or
mov
xchg
sbb
test
cltd
inc
push
mov
mov
aas
or
or
add
or
shlb
add
call
or
jae
pop
mov
add
call
filds
add
push
push
mov
push
pavgw
pop
aas
dec
mov
mov
pop
sub
test
or
and
add
dec
iret
sub
cmpsb
flds
or
in
pop
icebp
roll
and
aaa
add
pop
daa
outsb
sub
pop
sub
xor
push
fwait
cmpsb
xor
dec
mov
push
push
into
inc
lret
movsb
add
or
cld
inc
mov
pusha
xchg
pop
cmp
add
or
jo
in
sbb
mov
js
or
push
pop
jl
xorb
xchg
testl
and
jp
dec
xor
adc
push
and
mov
cmp
mov
push
add
sahf
nop
or
nop
cmpsl
inc
test
sbb
push
aaa
ss
inc
in
js
xchg
mov
inc
push
jo
in
outsb
pop
push
pop
inc
dec
ljmp
or
sub
dec
ljmp
ret
or
dec
mov
or
or
inc
lods
ljmp
xchg
mov
data16
pop
insb
mov
movsb
add
mov
movsb
or
int3
pop
sbb
xchg
dec
push
or
or
add
inc
and
add
mov
lcall
pop
xor
adc
jnp
es
cmpsl
dec
xchg
mov
or
and
inc
adc
adc
mov
imul
data16
mov
nop
cmp
pop
add
and
xor
es
add
or
scas
xchg
incb
cmp
jne
cmp
fstps
push
movsl
seto
xchg
sahf
insl
pushf
xor
pusha
push
cmp
and
xchg
or
or
movsb
negb
xchg
imul
fwait
push
sbb
in
adc
xor
jno
inc
inc
mov
adc
mov
addb
je
dec
ljmp
jecxz
inc
xchg
es
ret
push
mov
mov
jp
push
popf
jb
test
lret
mov
sbb
lods
cmp
or
mov
jbe
jp
inc
stc
lret
pop
ljmp
lea
add
loope
push
rcll
sub
test
pop
xchg
scas
mov
lea
xchg
push
adcb
sarb
mov
mov
mov
jle
xchg
cmp
xor
enter
movsl
or
or
add
or
or
insb
lahf
push
and
lea
jmp
mov
pusha
cmp
add
cs
and
cmp
nop
pextrw
xchg
out
adc
xchg
cmp
add
mov
jno
ds
cs
xchg
ds
add
push
out
inc
fsubrl
pop
fidivs
jnp
or
sti
dec
dec
movsl
jns
cmovl
inc
inc
ret
nop
push
into
adc
cmp
mov
inc
mov
inc
add
mov
xor
aam
adc
or
push
jecxz
js
clc
xchg
push
inc
daa
dec
push
repz
pop
inc
push
sahf
mov
clc
out
cmp
or
xor
jne
xorl
loope
cmp
adc
dec
hlt
js
orb
popa
xlat
sub
sahf
push
mov
mov
add
pop
negl
sbb
imul
je
cmp
mov
mov
and
shll
inc
push
jp
sbb
insb
xor
sub
je
push
jne
lea
xchg
dec
rcll
xlat
push
add
add
and
jmp
inc
fs
rolb
push
mov
adc
inc
inc
dec
mov
pop
sbb
rorb
fs
mov
outsb
sbb
mov
insb
cmpl
push
lock
mov
daa
push
dec
test
sbb
push
insb
stos
add
push
or
mov
pop
dec
mov
movsl
test
mov
xor
ds
pop
pop
pop
gs
jle
add
clc
jle
push
and
mov
lret
lods
pop
jno
sbb
push
add
int3
rclb
add
mov
sub
add
xor
int3
adc
push
mov
sub
dec
add
and
pop
adc
inc
add
addl
cmp
pop
popa
enter
fneni(8087
xchg
jo
jbe
int
dec
fs
sbb
pop
dec
cwtl
mov
push
cmpsl
lret
stc
decl
jno
sub
sub
ds
lcall
and
pop
sbb
and
mov
inc
jo
cmp
push
aaa
mov
add
lsl
mov
inc
adc
movsb
mov
inc
mov
ss
inc
sbb
push
popa
imul
add
and
in
mov
inc
adc
jp
rolb
ficoms
mov
jb
std
inc
jecxz
test
xchg
cmp
and
sub
pop
shlb
push
jl
push
push
test
movsl
movsb
sbb
cld
pop
xchg
jo
xchg
out
stos
push
je
dec
push
sbb
jo
mov
add
pusha
iret
push
es
or
int
cmp
shrl
mov
pop
js
cmp
movsl
add
dec
inc
add
inc
cmpsl
hlt
push
sbb
ljmp
sub
mov
push
dec
xlat
filds
mov
add
loopne
or
adc
adc
and
mov
xor
inc
pop
pop
mov
or
or
loopne
inc
xor
pop
xchg
jmp
ficomps
and
pushf
pop
push
repnz
push
call
add
push
fadd
mov
rcll
xchg
or
cmp
inc
push
push
test
adc
sbb
mov
sub
xchg
stos
mov
cmp
pop
cltd
and
sbb
dec
pusha
aam
sub
adc
movsb
or
leave
shlb
push
pop
and
and
push
and
push
cmp
sub
and
adc
lahf
imul
add
xchg
adc
sbb
and
movsb
rclb
inc
test
std
or
inc
inc
add
dec
lock
mov
popa
add
sarl
sbb
cmp
jb
ret
push
rcl
add
cmp
or
mov
shll
inc
adc
adc
insl
int3
mov
stos
and
jge
push
mov
pusha
cmp
xor
bound
jl
fldenv
lret
push
ret
or
push
mov
rcll
hlt
lods
xchg
mov
aas
mov
or
cmp
sti
sub
add
add
in
xor
adcl
lods
sbb
sub
dec
adc
cmp
aad
adc
add
call
adc
jne
cltd
push
push
dec
adcl
push
xchg
sub
daa
int
push
push
sub
pop
or
pop
and
test
adc
lods
cmpl
mov
insb
dec
push
push
int
out
xor
xchg
mov
dec
mov
dec
shlb
shlb
push
test
mov
push
push
inc
das
sub
fisubrs
in
lahf
mov
adc
pop
pop
sbb
das
out
xor
mov
insl
sub
push
lock
push
mov
mov
movsl
lcall
mov
add
inc
push
mov
mov
sbb
add
adc
sbb
xchg
lea
dec
sti
sub
mov
dec
adc
xor
mov
je
mov
enter
test
push
pop
fsubrl
pop
mov
test
rcrl
jbe
jbe
jmp
lea
or
xchg
and
stos
mov
add
add
lea
fld
jg
addb
mov
adc
adc
or
mov
loopne
cmp
adc
mov
push
jno
mov
pop
cmp
inc
and
je
clc
push
mov
sbbb
xlat
push
test
lods
jne
ds
test
sub
stc
xorb
subl
push
or
ret
jae
adc
or
sub
jl
jg
adcb
insl
mov
or
inc
sub
add
xchg
insl
mov
and
push
lock
or
inc
sahf
or
or
xor
add
push
add
add
js
sub
add
nop
cmp
mov
mov
enter
push
mov
in
push
inc
pusha
inc
movsb
popf
mov
ljmp
sahf
and
ret
cmp
inc
popa
mov
jns
nop
sub
test
mov
inc
outsb
pop
pop
jl
xlat
or
pop
arpl
dec
xchg
subl
and
pop
ss
addb
dec
scas
add
scas
push
adc
and
mov
andb
dec
add
and
pop
push
pop
push
ss
orl
lods
dec
push
or
push
sbb
popf
cs
or
cmp
or
add
adc
nop
mov
push
or
adcb
mov
pop
mov
mov
sarb
aaa
inc
pop
adc
jne
mov
pop
pop
and
and
dec
dec
dec
lods
jbe
out
inc
outsb
add
cmp
imul
imul
or
movsb
and
cli
push
pop
xor
inc
cmp
pop
lret
push
push
sbb
adc
mov
pop
sbb
rolb
leave
jne
nop
mov
inc
dec
cmp
lea
cmp
mov
adc
jb
sub
pop
push
cmp
pop
add
lock
mov
inc
and
cs
bound
add
test
cmp
les
mulb
xchg
sbb
ret
sub
push
cmpb
insb
add
sbb
cs
int3
pop
or
aaa
or
test
test
in
test
leave
jae
ret
shll
call
dec
push
dec
loop
inc
popa
inc
pop
leave
jae
xor
repz
mov
lods
sbb
inc
test
addb
pop
test
enter
add
mov
mov
in
dec
push
inc
lea
or
pop
adc
rcrb
or
shrb
add
cmp
lcall
fildl
or
mov
dec
push
push
push
push
in
inc
clc
xor
mov
shlb
xchg
push
shll
pop
shlb
cmp
xor
cltd
fcomip
push
cmp
rclb
das
add
mov
pop
add
jb
mov
push
add
sbb
push
pop
push
add
pop
orb
xor
mov
push
jbe
push
dec
jl
gs
shlb
aam
sbb
pop
push
movsl
inc
xor
xchg
mov
and
shrb
mov
push
aaa
rclb
je
stos
js
sarb
lcall
mov
inc
sub
dec
mov
incl
into
or
add
imul
or
mov
push
jnp
ret
clc
or
xor
pop
pop
and
xor
xor
insb
ret
sub
jb
cmp
je
addr16
cs
out
cmp
or
sbb
nop
loopne
loopne
inc
in
sbbb
cmp
xchg
or
mov
sub
push
and
fadds
test
and
fucomp
adc
es
lahf
fwait
daa
jbe
jns
or
pop
sub
hlt
push
addr16
push
icebp
push
mov
shl
xchg
mov
xor
cmpl
push
test
xchg
sar
push
sub
insb
mov
int3
push
enter
sbb
or
addr16
or
cmp
leave
sub
cmp
leave
jae
sub
sub
out
add
insl
inc
fmul
add
or
adc
dec
adc
movsb
loope
jl
adc
out
xor
push
pop
outsb
test
xchg
bnd
pop
push
out
in
sub
mov
rol
dec
xchg
and
and
hlt
cmp
ja
xchg
push
pop
xor
sbb
mov
jb
frstor
sbb
int3
call
sbb
cmpl
add
mov
gs
sbb
inc
push
in
test
add
in
add
adc
mov
pop
jns
push
out
mov
xchg
and
in
and
mov
and
mov
cltd
add
aam
or
enter
inc
sub
sub
sub
rorb
dec
popf
dec
mov
pop
subl
push
aad
mov
xor
pusha
pop
xor
cmp
pop
cmp
xor
fs
push
push
dec
pushf
jbe,pn
movsb
cwtl
xchg
cmpsb
dec
adc
das
inc
push
inc
cwtl
aam
rorb
dec
test
xor
subb
popa
sbb
jl
out
pop
out
and
xor
in
cmpsb
mov
ret
lock
pop
add
mov
imul
loop
je
mov
jne
fisttpll
push
xchg
or
and
sub
mov
inc
xchg
nop
jmp
sbb
sbbb
pop
test
test
mov
push
xchg
js
fmuls
dec
dec
cltd
fcmovb
enter
add
push
push
sbb
or
and
and
cmp
dec
enter
sbb
iret
add
push
cmp
cmp
sbb
lods
movsl
xchg
sbb
leave
xor
sbb
and
stos
sub
ret
imul
cmp
add
cmp
or
xor
dec
cmp
out
xor
mov
add
cmpsb
leave
aas
add
inc
inc
jmp
mov
in
inc
clc
cmp
nop
out
shl
les
xchg
out
inc
fcomps
in
push
add
push
hlt
or
dec
mov
push
sbb
adc
movsb
loop
inc
arpl
mov
sbb
xor
les
decl
fistps
cmp
push
push
push
js
mov
jo
lds
hlt
stos
push
js
data16
mov
push
shlb
repnz
inc
fadds
iret
add
mov
cmp
inc
lods
inc
or
dec
adc
xor
dec
push
mov
add
xchg
cmp
add
sbb
aam
or
sub
lahf
into
or
sti
and
andb
xchg
jno
sbbb
filds
ficompl
mov
xchg
cs
loopne
xor
dec
dec
push
inc
mov
cmpb
inc
ljmp
clc
lods
push
pushw
es
insb
cltd
xor
lret
test
xchg
jnp
leave
add
inc
sub
mov
insb
or
and
lock
icebp
jns
hlt
int3
add
jo
sub
or
addb
pop
mov
dec
mull
xchg
mov
cmpb
xor
pop
test
pop
push
dec
je
shll
inc
movsb
mov
mov
cmp
or
push
inc
movsl
fstl
add
or
fs
cmpsb
inc
jo
mov
cmp
push
addr16
pop
or
rcll
push
aam
push
push
imul
inc
xchg
dec
lcall
enter
cmc
jns
jle
mov
fs
push
pop
and
sbb
mov
add
aaa
and
cli
inc
pop
push
sub
push
and
nop
push
add
scas
cltd
add
sub
in
faddl
cwtl
xor
push
dec
mov
dec
addb
insb
add
sub
pop
jge
push
and
sub
aas
push
pop
mov
push
xor
adc
pop
sub
dec
repz
and
dec
and
xchg
sbb
and
xor
push
enter
and
xor
and
push
call
jno
cmpsl
inc
inc
dec
cmpsl
jo
add
test
xor
in
push
or
cld
mov
nop
inc
jns
inc
and
xchg
rcrb
clc
add
jno
call
cmp
xorl
mov
mov
sarb
push
shlb
push
sbb
fwait
pop
add
jne
test
dec
sub
or
adc
inc
sub
sbb
insb
ret
inc
sti
cmp
sbb
push
cli
and
jo
dec
xor
push
imul
sub
aas
cmp
and
sub
mov
cmp
imul
sub
bound
add
rcl
add
adcb
ficoms
mov
mov
fsub
push
adc
pusha
fiaddl
push
shrl
inc
cmp
loopne
nop
dec
rcll
in
xor
mov
or
and
mov
push
pop
sti
pop
aam
inc
sbb
and
pop
mov
aaa
add
xlat
inc
xor
push
push
orb
pop
lret
xchg
hlt
sub
pop
leave
jno
pop
sbb
cmc
repnz
test
or
jmp
iret
leave
xor
add
adc
mov
mov
xorl
ss
sub
fucomp
scas
js
pop
imul
and
sub
lret
cmpsb
add
in
mov
cs
mov
add
sbb
lea
iret
shll
push
stos
and
popa
test
mov
stc
sbb
inc
cltd
push
jp
jp
inc
lock
leave
push
imul
pop
jo
sti
js
xchg
rcl
sub
add
icebp
pop
xor
add
xchg
movsb
lret
ljmp
push
leave
xor
adc
ficoml
and
push
shrb
addb
imul
mov
jno
int3
mov
xor
pop
movsb
dec
iret
push
repnz
push
xor
inc
push
repnz
and
and
xchg
mov
aam
aam
pop
sbb
xchg
dec
mov
or
out
clc
add
insl
gs
test
movsl
mov
add
movsl
mov
mov
cld
xchg
movsl
pop
jmp
adc
push
add
push
inc
dec
lods
sbb
fisubrl
or
hlt
push
cmp
jae
sahf
test
sub
xor
lcall
movsb
sbb
mov
rorb
push
pop
cmp
jle
insl
sub
pop
inc
jne
mov
mov
mov
xchg
add
frstor
cmpsb
cmpsb
xchg
xchg
cltd
push
dec
cmp
add
addb
push
and
pop
jge
mov
sub
or
lcall
fistpl
insb
add
daa
movsb
add
test
sbb
das
adcl
jle
dec
arpl
push
jmp
push
adc
xor
aaa
data16
push
push
sub
mov
xor
dec
pop
adc
nop
or
jmp
mov
or
xor
test
or
test
xchg
loope
arpl
push
mov
inc
je
mov
and
jae
clc
mov
and
cmpsb
roll
daa
push
cs
add
fld
sub
and
pusha
rorb
pop
daa
movsb
xchg
push
ss
leave
push
xor
add
popa
jge
cwtl
and
pop
fimuls
imul
add
cmp
aad
mov
clc
xor
repnz
popa
and
inc
add
or
cmp
xchg
bound
xchg
sub
out
dec
sbb
pop
adc
dec
cld
inc
or
insl
push
pop
mov
xor
enter
test
adc
jg
and
push
xchg
mov
push
fsubrs
es
or
xor
mov
or
sbb
xor
sub
in
and
inc
sbb
and
and
sbb
aam
push
mov
movb
or
pusha
mov
jge
mull
setae
js
xor
stos
and
sub
out
inc
xacquire
push
mov
inc
pop
shl
mov
daa
mov
xchg
nop
dec
inc
adc
arpl
dec
stos
and
push
add
repnz
ret
jl
or
movsl
outsb
imul
xchg
aaa
cmp
adc
test
movsl
push
inc
sub
push
dec
loope
add
push
inc
imul
movsb
sbb
pop
dec
in
int
xor
xor
jmp
jns
push
mov
pop
rorb
das
mov
add
test
sbb
sub
adc
jecxz
mov
sbb
jb
cmp
and
or
arpl
inc
jb
adc
add
es
imul
jle
movsb
cmp
sub
nop
adc
inc
cmp
jae
mov
xchg
sub
int
xchg
push
dec
push
call
cmp
jl
and
pop
out
rcrl
imul
je
imul
xor
mov
pop
add
insb
ja
dec
jbe
mov
sub
ret
mov
push
or
jle
mov
add
jg
mov
push
ficomps
or
add
push
push
mov
or
mov
inc
mov
inc
mov
dec
loopne
jo
sti
add
sub
in
jg
jnp
and
sub
cmp
jb
mov
imul
fisubs
mov
movsb
jg
adc
xchg
pop
add
stos
add
jo
pop
out
pop
dec
cmp
push
bound
push
xchg
mov
jne
add
mov
add
adc
xchg
sbb
xchg
pop
and
pusha
pop
sub
test
decl
fidivrl
dec
cmp
and
or
adc
add
xor
inc
add
fisubl
pop
push
pop
repz
pusha
flds
jo
add
insl
imulb
insb
fstps
sub
sbb
pop
add
push
pop
cmpsb
sbb
dec
or
lods
pop
pop
and
adc
xor
and
pusha
in
insb
sub
or
sub
daa
add
setae
in
add
jbe
int3
mov
or
sbb
xor
mov
mov
into
mov
cmc
or
fdivs
js
sub
pop
add
fwait
add
xor
xchg
inc
enter
add
and
inc
cmp
cmp
push
mov
mov
adc
sub
push
cs
sbb
insb
mov
pop
cmp
push
or
jo
loopne
mov
out
xchg
adc
add
adc
inc
popl
inc
cmp
call
das
cmc
insb
dec
add
mov
ds
lea
fs
nop
sbb
test
daa
test
icebp
mov
ret
in
sbb
dec
orb
lret
mov
jbe
les
mov
xor
push
sbb
icebp
lea
sub
sbb
push
bound
push
mov
insl
add
push
mov
cmp
mov
jne
call
pop
jecxz
and
in
sbb
fisttpl
mov
orl
in
inc
enter
lods
inc
nop
les
je
cmp
dec
cmp
or
cmp
test
xor
test
punpckhwd
arpl
add
mov
cmp
frstor
add
dec
test
jp
das
loop
clc
add
jnp
sbb
push
and
pushf
popa
pusha
rorb
scas
ss
and
jne
push
and
push
or
test
sbb
pop
inc
mov
fsubs
scas
xchg
shrb
mov
or
add
adc
xchg
add
push
sbb
pop
mov
push
push
loopne
pop
out
push
dec
add
inc
shlb
sub
add
clc
adc
loop
pop
ljmp
mov
push
push
xchg
ss
or
mov
mov
sub
adc
je
cmp
je
cmp
repz
je
push
je
arpl
jmp
loopne
push
mov
mov
pop
rorb
add
add
add
mov
pop
mov
imul
neg
cmp
cli
test
ds
sbb
jbe
xor
jb
push
je
mov
loopne
dec
stos
icebp
fs
test
ret
add
lds
and
repnz
jl
pop
sub
in
aam
xor
adc
mov
add
and
lret
mov
in
icebp
into
xchg
cmp
cmpb
mov
pop
in
xchg
std
ljmp
adc
push
xchg
inc
nop
and
daa
adc
push
orl
pop
xchg
add
outsl
mov
bound
xchg
or
inc
test
xchg
pop
aas
xor
inc
test
pushf
test
les
icebp
mov
xchg
jmp
orl
test
pushf
jne
inc
faddl
inc
xchg
add
xor
push
xchg
dec
xlat
mov
or
push
les
add
cmpsl
icebp
mov
dec
inc
lahf
pop
push
lret
jne
and
mov
xchg
push
jg
movsb
xor
push
imul
sub
push
mov
stc
push
movb
dec
movsb
sbb
push
movsb
call
sbb
sbb
out
push
mov
test
fwait
adc
add
push
dec
rolb
or
lods
or
sub
mov
jl
sbb
mov
les
and
or
les
inc
or
sbb
lea
mov
inc
and
sub
add
mov
ret
test
add
mov
pop
sbb
jmp
lret
dec
cmpsb
mov
and
jno
push
sub
inc
clc
hlt
sub
and
sub
and
xor
pop
push
xchg
xor
in
faddl
fmuls
inc
adc
ret
xchg
fwait
mov
lock
and
dec
mov
or
cld
push
jl
adc
insl
pop
adc
jge
test
inc
xchg
sub
scas
inc
inc
fldt
mov
xor
mov
cmp
outsl
lahf
fsts
and
aam
in
popa
inc
mov
incl
and
and
fldcw
test
lds
inc
adc
mov
adc
xchg
mov
sbb
inc
inc
movsb
bound
cwtl
or
nop
mov
or
xor
push
xchg
or
call
and
mov
ja
je
mov
jns
sub
xor
dec
rorl
enter
xchg
pop
xchg
xchg
out
adc
fs
out
push
adc
cwtl
mov
lock
add
jae
insl
es
inc
jge
jge
jbe
cli
add
incl
adc
sbb
cwtl
or
mov
repnz
mov
push
lods
push
lds
lock
xor
add
call
jge
or
cmp
je
xchg
xchg
or
jne
sub
push
addb
div
adc
push
xorb
cmp
pushf
rolb
mov
pop
mov
stc
inc
pushf
in
mov
mov
mov
adc
sbb
jo
adc
cs
add
add
dec
clc
mov
inc
pop
aam
addr16
xchg
or
faddl
lret
adc
push
mov
sbb
xchg
ss
lahf
xchg
outsb
pusha
sbb
ljmp
cmp
je
and
les
test
std
xchg
scas
sbb
jne
xor
sbb
jmp
jbe
xchg
pushl
add
mov
mov
push
push
sbb
dec
sbb
inc
xor
inc
xor
ret
mov
adc
sub
out
stos
js
cmp
adc
xchg
nop
inc
sbb
iret
add
addr16
in
rorl
xor
pop
sub
loopne
and
pop
pop
push
inc
or
pop
add
xor
adc
xchg
pop
out
cmp
inc
sub
imul
jecxz
push
inc
pop
ret
push
or
push
jmp
mov
and
add
cmp
cwtl
dec
std
sbb
adc
inc
jno
sub
xchg
pop
or
and
ror
fldcw
imul
xor
mov
adc
sub
push
sub
mov
shl
inc
sbb
pop
add
adc
and
test
jne
adc
cwtl
mov
and
leave
loope
bound
lahf
adc
addb
test
cwtl
adc
push
jl
pop
add
and
sub
mov
or
decl
ret
sbb
sar
icebp
fcoms
stc
rcl
xchg
insb
pushf
and
jmp
pop
pop
mov
sub
sub
ja
cmpb
out
inc
pop
lds
jne
cmp
jne
int3
adc
inc
push
sbb
pop
loope
repnz
xorb
inc
sti
push
mov
nop
es
sub
xor
dec
xor
xor
mov
xchg
daa
push
fstps
lret
stos
fnstenv
mov
lods
subb
inc
pop
dec
test
inc
push
incb
popa
mov
lea
jl
jmp
and
ds
mov
ret
and
pop
mov
fs
mov
addr16
test
push
mov
outsb
jo
js
inc
stos
sub
inc
rcr
dec
or
repnz
mov
mov
sar
lods
push
jmp
xor
push
push
gs
into
lods
cmp
shl
lods
or
lret
pop
push
pop
sub
pop
adc
mov
fwait
adcb
inc
or
cmp
ss
adc
pop
pop
mov
sbb
stc
jo
in
bound
add
or
mov
or
or
mov
pop
popa
jmp
pop
add
pop
cmpl
int
sbb
mov
ss
icebp
push
push
in
sbb
add
mov
push
push
fs
sbb
inc
add
movb
cmpsl
jge
dec
sbb
and
push
js
out
xchg
lea
add
test
shr
adc
sbb
sarb
fsubr
inc
cmp
mov
pop
outsb
inc
add
inc
shrb
out
push
jl
rcl
je
fldl
movb
mov
adc
adcb
int
adc
add
fs
test
call
jnp
fisttps
mov
inc
test
xor
add
jns
push
pop
cmp
mov
ret
es
aas
add
sbb
cmp
or
and
push
jns
add
rclb
push
idiv
insb
loop
inc
jne
jp
jo
and
xchg
or
sbb
sub
pop
test
rol
test
ret
std
jl
shr
cmp
adc
fnstsw
mov
hlt
aas
arpl
cmp
mov
je
mov
pop
jp
lds
push
es
cmpsb
add
lcall
fcomp
xor
xor
xchg
mov
inc
or
aad
add
repz
idivb
inc
add
or
or
sub
pop
sub
das
xchg
or
decl
or
sub
call
push
cld
gs
dec
subps
js
adc
outsl
ret
loopne
jmp
dec
push
enter
ficoml
lea
lret
mov
mov
xor
stos
inc
cmp
adcb
sbb
pop
hlt
arpl
and
xor
fwait
cmp
push
mov
aas
andl
lcall
pusha
push
add
ret
add
orl
cmpsl
movsl
pop
xchg
jb
jno
xor
mov
or
cmp
pop
add
scas
and
lock
aad
mov
insb
out
addb
xchg
cmpsl
hlt
mov
test
add
fldenv
cmp
bound
xor
push
push
jno
sahf
add
and
mov
bound
in
cmp
dec
xchg
mov
mov
xor
sub
fs
lret
xor
lea
or
or
xchg
and
dec
mov
sbb
loope
cmp
mov
adc
jmp
xor
flds
cmp
xor
inc
adc
and
dec
jb
mov
ret
inc
push
push
sbb
inc
lods
push
mov
pop
sbb
daa
cmc
daa
fmulp
jle
sbb
or
and
dec
pop
jge
sub
test
push
loop
adc
sbb
sbb
add
repz
pop
adc
mov
xchg
mov
mov
adc
push
lret
loopne
xchg
es
add
pushf
mov
push
aam
add
insb
pop
inc
pushf
push
dec
xor
pusha
shl
jnp
mov
jmp
jl
push
and
or
adcb
or
mov
pusha
dec
adc
xor
lds
ret
fimuls
mov
icebp
sbb
xor
xor
ja
and
mov
sbb
dec
or
es
add
stos
dec
sub
movsl
in
mov
or
xor
adc
adcb
xor
insb
and
lcall
sub
mov
pop
sbb
ja
scas
mov
pop
mov
lds
add
in
insb
mov
add
mov
iret
aas
out
pushf
sbb
push
idiv
mov
push
jne
cmp
jb
sub
jmp
push
std
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
push
out
test
lods
lea
stos
sahf
inc
inc
mov
and
les
shll
push
add
add
adc
shlb
lds
dec
xor
and
in
add
dec
push
divb
fs
push
push
cmovbe
mov
xchg
inc
cmp
lahf
jmp
push
sbb
cmp
cmp
inc
lea
push
jne
or
cmp
adcb
iret
mov
mov
xor
dec
inc
xchg
pop
sbb
lods
test
mov
lods
xchg
or
pop
adc
mov
mov
bound
or
push
inc
lahf
and
dec
mov
std
sub
mov
mov
xchg
dec
push
push
push
jecxz
adc
call
xchg
aam
and
push
ret
cltd
sub
push
add
dec
dec
lods
in
mov
sbb
jecxz
loopne
mov
mov
repz
imul
mov
dec
jns
popf
mov
or
adc
mov
xchg
pop
adc
pushf
xchg
dec
push
pop
sub
and
pop
xchg
push
push
cmc
xor
divl
add
push
cmp
mov
push
sbb
xchg
addb
jmp
inc
cld
test
sbb
jge
and
push
mov
es
and
inc
adc
inc
inc
cmp
das
inc
xor
sub
fs
pop
sbb
jle
jp
enter
or
insl
or
sti
bound
push
sub
mov
adc
mov
push
push
sbb
push
std
sbb
and
pusha
jns
bound
push
dec
xor
pop
and
pop
adc
add
repnz
cmp
js
cs
pop
ret
inc
popa
add
cmpsl
adc
adc
fiaddl
mov
jl
fistpll
xchg
sbbb
es
and
sbb
test
pop
pushf
pop
add
push
cwtl
jo
mov
pusha
jo
jp
sbb
stos
xchg
inc
adc
fsubrs
mov
jp
and
les
out
mov
insb
cmp
and
or
jne
sub
mov
cltd
mov
jbe
cld
dec
cld
aas
or
jo
mov
cmp
jo
cmp
xchg
mov
sbb
fnstsw
inc
jo
ss
xchg
inc
fldenv
sbb
add
xor
cwtl
pusha
push
adc
xor
cmp
mov
fs
dec
and
push
insl
in
or
mov
leave
rcrb
mov
fs
repz
cmpb
lcall
cmp
int
dec
into
xor
sbb
xor
stos
push
int3
aaa
cmpsb
add
in
cwtl
sub
sahf
xchg
push
popa
and
sbb
mov
int3
arpl
pop
call
cmp
and
jne
dec
jnp,pn
xor
xchg
sub
push
pop
es
jns
fstl
sbb
enter
push
es
sbb
or
fstl
pop
cmp
inc
test
xor
xchg
push
stos
shlb
xchg
es
mov
dec
sub
call
and
fists
inc
xchg
and
and
dec
je
xchg
sub
or
adc
je
outsb
ficomps
sete
jge
je
lock
pop
jbe
inc
pop
test
imul
sub
cmpsl
or
mov
xchg
in
lcall
leave
inc
or
clc
adcb
add
hlt
cmpsb
hlt
or
adc
push
cmp
pop
sub
push
inc
jg
push
pmulhw
sbb
xor
add
sbb
pop
push
xchg
test
icebp
nop
iret
aas
or
xchg
adc
adc
ja
mov
add
sub
cmp
stos
xor
and
ss
ret
add
pop
ret
push
cmpsb
pop
push
or
scas
xchg
lahf
dec
sub
jne
jne
movsl
lea
cmc
push
jmp
nop
adc
repz
jg
pop
mov
sub
shrb
dec
mov
pusha
jae
fidivrs
push
imul
jg
outsl
sub
push
jecxz
jo
test
inc
sbb
dec
mov
sbb
push
lods
push
pop
xor
add
adc
mov
nop
daa
adc
test
sbb
bound
and
and
testl
test
setp
add
pusha
xchg
pushf
js
arpl
inc
xchg
addb
jp
and
fisttpl
ficoms
cmpsb
pop
and
push
sub
cmp
adc
mov
and
and
fs
xchg
lret
push
sar
push
sbb
and
inc
xor
enter
popl
xchg
popa
adc
adc
and
loopne
inc
inc
lea
push
cwtl
insb
loope
add
test
js
xlat
push
cltd
inc
mov
mov
add
cmpsl
dec
or
dec
sbb
adc
lcall
jb
in
sub
inc
cmpsl
or
cmp
mov
push
popa
push
sub
mov
and
and
mov
sbb
sub
pop
pop
mov
aad
std
sahf
inc
sub
cmp
cmp
xchg
dec
adc
in
in
add
push
and
data16
xchg
pop
dec
inc
dec
xor
stos
adc
in
loopne
ss
jmp
nop
or
xor
invd
mov
and
push
adc
jns
enter
jo
pop
mov
jmp
adc
shrb
pop
push
or
rcll
pop
mov
fmull
pop
or
aam
push
enter
push
enter
push
dec
dec
push
shr
iret
inc
xor
push
sub
jns
popf
outsl
imul
dec
cmp
jns
in
pop
push
inc
inc
adcb
add
push
fsubr
test
ficomps
dec
subb
sbb
inc
ret
int3
cmp
ds
scas
or
pop
or
mov
int3
adc
nop
add
jns
inc
push
add
sbb
pop
inc
adc
sbb
mov
push
or
push
push
aam
insl
ds
test
and
fsubrs
pusha
int3
lock
ficoml
add
push
push
lods
repz
add
adc
stos
lahf
inc
add
push
mov
out
leave
nop
adc
sahf
sub
pop
enter
xchg
jl
inc
insb
sub
insl
push
cmp
loope
dec
adc
call
pop
jg
cmpsl
push
lret
rclb
push
cli
lea
push
push
pop
xchg
insb
xorl
inc
das
add
lods
stos
incl
jl
cmp
add
mov
and
ss
or
or
or
dec
dec
push
mov
repnz
adc
and
sar
inc
pushf
ja
pop
dec
sub
mov
ss
fsts
das
pop
add
push
inc
or
in
test
and
fldl
mov
xor
in
arpl
sarl
cmp
push
cmp
popl
and
ret
pop
pop
or
jb
add
cmpb
je
cs
mov
aam
outsb
bound
test
sub
xchg
jno
sbb
data16
mov
xchg
pop
imull
aam
loopne
inc
pusha
xchg
int3
and
sub
adc
mov
das
jg
les
ret
mov
mov
and
sbb
hlt
ja
pusha
jle
mov
add
jne
enter
fimuls
add
test
mov
out
or
popa
add
jg
mov
xchg
add
add
dec
mov
testl
jl
lea
in
push
push
add
fistpll
inc
sbb
clc
xorb
add
add
mov
int3
cmp
push
push
xor
sub
sub
addl
add
aam
sub
xchg
movsl
aaa
cli
xlat
or
test
sub
insl
cmp
dec
out
add
arpl
sub
cmpsb
mov
mov
out
add
or
pop
inc
js
mov
das
or
add
ret
loopne
scas
adc
call
push
rcrl
out
sbb
out
or
loopne
jo
ret
div
scas
shrb
lret
mov
add
je
or
push
sbb
push
out
test
rclb
fimull
pop
test
lock
rolw
push
test
shrl
xor
mov
xor
adc
xor
mov
mov
push
or
jl
test
add
cld
rcl
sub
mov
adc
mov
or
repnz
test
fiaddl
test
push
mov
lahf
inc
adc
clc
inc
fs
xor
lods
push
mov
insb
cmp
mov
stos
out
jo
jmp
xchg
insb
pushf
dec
dec
fbld
dec
jge
sbbl
pop
dec
push
adcb
adc
cld
xchg
mov
seto
aaa
neg
or
cmovp
icebp
popf
cmp
mov
sahf
cwtl
jne
mov
test
or
and
daa
js
bound
dec
fldenv
gs
cmp
inc
pop
dec
mov
test
or
adc
outsb
and
jae
fidivrs
dec
xchg
adc
jp
push
sbb
mov
inc
pusha
test
shr
pop
loope
adc
sub
mov
adc
rcl
push
push
cwtl
mov
int
xchg
inc
xor
push
mov
out
and
and
mov
and
imul
jp
lea
bound
jb
mov
into
push
add
mov
gs
je
hlt
pop
jle
fildl
or
xchg
push
xor
jno
fldcw
packssdw
mov
sub
data16
fldcw
rolb
xor
mov
pusha
cmpsb
or
adc
cld
stos
ficompl
loopne
test
or
cmp
xor
sub
dec
mov
jle
jne
inc
and
adc
loope
pop
lcall
add
push
xlat
inc
es
ret
ljmp
nop
sbb
and
rol
loop
xchg
add
sub
add
push
sub
push
ss
lds
push
insb
xor
push
mov
lret
movsl
adc
mov
push
ret
data16
std
pop
adc
addr16
mov
aad
adc
stc
decb
ret
mov
fcompl
aad
call
cmp
jbe
or
aas
or
jmp
test
adc
flds
roll
push
movsb
sub
or
mov
sub
sbb
sub
mov
pop
mov
pop
out
fcomi
lahf
mov
sbb
flds
flds
pop
pop
cmp
cmp
les
fmulp
lret
call
test
fldcw
push
mulb
dec
adc
dec
inc
sbb
push
test
jae
adc
fldcw
add
mov
pop
rolb
je
repz
lahf
cmp
aam
add
jnp
adc
or
sbb
sbb
xor
cmp
jne
xor
push
add
push
or
test
sbb
dec
or
xchg
pop
inc
out
or
lods
repnz
pop
or
jg
sahf
sub
jae
pop
cmp
sub
inc
jecxz
inc
cld
add
and
push
rolb
insb
bound
icebp
jp
xchg
jge
mov
jmp
xchg
jl
popf
push
enter
mov
mov
cmp
rcll
fstpl
mov
andl
outsb
push
lea
iret
jo
enter
mov
lock
add
or
push
adc
data16
and
pop
push
push
and
pop
dec
mov
and
daa
rcll
xor
add
cmp
mov
push
call
ss
lea
cld
and
ds
add
in
sub
sub
xor
inc
sub
push
xchg
push
push
lds
movsl
in
jnp
test
dec
adc
push
xchg
cld
xor
xor
sti
mov
dec
pop
ret
push
punpckhdq
pop
js
lods
push
insl
cmp
adc
adc
xchg
cmp
inc
push
sub
int
je
push
push
mov
stos
push
sub
repnz
and
addl
pop
xor
je
mov
push
push
cld
mov
cmp
je
sbb
jae
ss
inc
push
inc
nop
adc
fdivrl
jg
mov
xorb
lea
in
imul
add
xchg
xor
cmp
movsb
sbb
push
inc
mov
cwtl
adc
pop
popf
mov
outsb
out
jae
xchg
add
push
rorl
mov
dec
xor
sub
inc
cwtl
jae
shll
and
cmc
dec
and
add
sub
sub
mov
xchg
add
dec
dec
jl
ljmp
inc
cmpl
fimuls
and
inc
sbb
loopne
cli
cmpl
jne
mov
je
test
mov
push
cmpl
fwait
orb
adc
mov
and
shll
call
xchg
mov
std
jmp
cmpl
xchg
cmp
pop
cli
push
cmpl
sbb
inc
push
mov
cmp
lahf
sarb
cmpb
jo
repnz
clc
pusha
adc
pop
inc
rorb
adc
int3
test
pop
add
mov
inc
gs
add
loopne
lea
push
push
sti
sar
adc
jl
mov
ds
out
test
cld
push
in
or
adc
adc
adc
xor
adc
sub
test
sbb
and
and
stc
push
mov
sbb
adc
push
or
ja
lock
mov
notl
mov
pop
jmp
pusha
or
and
lock
jo
push
clc
push
mov
add
push
mov
and
mov
sbb
mov
aam
into
iret
in
pusha
out
pop
xlat
imul
int
fs
sbb
xlat
sub
pop
or
push
add
jle
fisttpll
add
aad
cmpsb
xchg
dec
pop
sub
adc
jo
and
inc
and
call
fwait
add
jne
cmp
mov
xor
push
sub
inc
addr16
mov
test
xchg
pop
adc
call
in
insb
ja
or
dec
add
imul
aaa
or
xor
mov
lret
test
sbb
stos
dec
dec
cld
xchg
and
in
pusha
sbb
push
push
xor
icebp
pushf
mov
mov
test
hlt
xor
add
xchg
test
sbb
dec
jnp
mov
das
add
pop
adc
out
cli
xor
icebp
pop
in
outsl
jne
xor
pavgb
push
ljmp
xor
outsb
mov
mov
dec
insl
js
push
sub
fwait
pop
push
add
or
in
adc
lea
cmp
popf
out
mov
add
push
push
icebp
cli
add
dec
jp
stos
test
aam
mov
mov
cmp
push
psubq
mov
add
cmpb
lock
subl
pusha
jae
mov
lock
jb
mov
mov
in
and
push
push
mov
sub
jne
adc
fistpll
pusha
cmc
es
sbb
std
add
xor
push
inc
in
shlb
push
pop
repnz
and
loopne
pop
out
xorl
mov
add
js
inc
cmp
jno
adc
jns
xchg
fsubs
mov
mov
fbld
cmpsb
sub
sub
push
jg
sub
inc
or
mov
or
fisubrs
nop
cmpsb
pushf
sub
pop
jns
mov
lds
pushf
add
sbb
mov
push
call
and
cld
fsubrs
ss
pop
push
popf
notb
lods
adc
sbb
mov
pop
lahf
push
rclb
and
push
mov
lods
out
adc
push
pop
pop
ret
shrl
add
push
pop
nop
sti
sahf
gs
fst
or
push
rorl
or
cmp
inc
mov
mov
loopne
fdivrs
cmp
push
dec
in
in
push
stos
into
jae
clc
push
xchg
sub
jmp
dec
lret
inc
bound
cwtl
xor
push
sub
mull
imul
rcl
orb
lods
cmp
aaa
aam
lea
add
pop
push
mov
sti
jge
dec
sub
idivb
mov
cli
add
pushf
sub
push
or
push
dec
test
mov
pop
jge
add
dec
jmp
cmp
cmp
cs
push
add
xor
inc
popa
push
hlt
mov
sub
ljmp
loopne
cmp
or
mul
xor
push
clc
jle
push
pop
add
xchg
shlb
push
adc
icebp
arpl
sbbl
and
add
je
pop
stos
dec
inc
jge
adc
pusha
jns
push
popa
xor
fucomp
or
data16
andb
fsubrl
dec
xor
lret
insb
clc
sbb
adc
call
jne
xchg
sbb
mov
fs
push
or
shrb
lcall
mov
add
jge
cmpsb
adc
inc
push
xor
mov
mov
scas
test
rorl
sahf
mov
pop
ret
cmp
push
in
push
sbb
pusha
add
add
mov
jbe
nop
shl
mov
inc
adc
orl
inc
or
cvtdq2ps
bndstx
mov
js
aaa
dec
loopne
push
sbb
gs
inc
adc
push
dec
enter
add
push
mov
pop
lcall
je
and
cmp
cmp
or
mov
mov
dec
xchg
loop
pop
xchg
inc
inc
data16
in
jnp
sbb
lret
mov
lods
pop
call
inc
sub
mov
loopne
in
inc
add
pop
cli
cmp
adc
push
popa
lock
mov
pop
testb
lock
mov
lock
mov
inc
lahf
arpl
and
ret
jl
xor
test
pop
lock
inc
mov
push
pop
jns
mov
sbb
adc
pop
cmp
addr16
mov
cmp
pusha
cmp
pushl
dec
xchg
rclb
insl
ret
add
out
aaa
movsl
adc
mov
imul
in
addr16
inc
jl
and
arpl
fs
sbb
hlt
or
add
sbb
push
ret
lea
adc
imul
and
xchg
popa
push
xchg
repnz
call
sbb
in
rcrb
lock
je
xor
jmp
std
in
jbe
sbb
out
adc
clc
mov
mov
jne
stc
lock
add
pop
dec
and
add
js
and
mov
jne
mov
subb
cmp
fadd
bound
jno
pusha
push
enter
cmp
xor
insl
jne
cs
add
push
jl
sahf
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
dec
pop
scas
into
push
push
or
frstor
sub
cmp
cmp
dec
push
jo
out
pop
jp
mov
pop
cmp
je
mov
nop
pushf
jo
mov
cmpsb
mov
sti
adc
int3
cmp
je
push
fidivs
push
or
jne
cmpsl
fcoml
cmp
je
push
mov
sub
xchg
aam
inc
mull
mov
push
movb
sub
sbb
lea
add
cmp
jb
push
inc
sti
or
push
pop
sahf
xchg
shrb
inc
outsl
dec
je
dec
push
fcoms
push
and
loopne
and
pop
push
pop
mov
push
sub
push
push
adc
xor
xor
and
and
faddl
rcrb
or
xchg
push
ret
insb
inc
pop
add
lock
leave
out
stos
jmp
js
cmp
jne
add
mov
or
in
lods
rorl
inc
loopne
pop
outsb
sbb
fisttps
push
mov
push
mov
inc
mov
and
ds
dec
in
adc
or
in
aaa
inc
or
out
jmp
imul
add
dec
and
xchg
add
or
mov
pop
jo
scas
sbb
add
mov
pop
pop
adcb
push
mov
adc
adc
or
add
shll
fs
insb
jo
js
movsl
cltd
into
cmp
mov
enter
xor
xchg
cmp
std
or
push
mov
inc
int3
ficompl
jge
inc
mov
scas
lcall
push
and
pop
les
cld
add
xchg
add
xchg
int
add
and
movsl
out
sar
mov
sub
xchg
add
fsubs
add
and
sbb
and
xor
add
and
push
xor
push
cmp
dec
sub
push
sbb
stos
mov
add
imul
inc
stos
or
pop
sbb
push
sub
dec
sbb
test
clc
push
mov
and
test
dec
jo
js
pop
mov
xor
inc
shl
push
add
out
dec
pcmpeqw
dec
adc
shl
ret
dec
je
or
or
bound
mov
mov
add
jne
cs
fisubrl
cltd
filds
lret
sbb
movsw
iret
add
mov
xor
ror
test
jge
cwtl
or
fmuls
cmp
ja
fs
lret
aad
jle
shll
mov
mov
or
stos
mov
in
test
mov
or
dec
scas
push
pop
push
adc
wbinvd
loopne
ds
cmp
test
in
mov
adc
lret
adcl
pop
pop
mov
inc
shl
jg
or
shr
and
test
cmp
out
pop
add
jae
sbb
jmp
add
cld
sub
jnp
jne
lea
add
or
adc
inc
xchg
add
daa
sahf
ror
adc
push
jns
and
inc
sbb
clc
fstps
cmp
mov
or
sbb
add
in
mov
das
or
incb
mov
out
add
dec
mov
stc
or
std
fwait
loopne
lcall
push
clc
add
mov
out
cltd
imul
fsincos
dec
sub
add
mov
pop
sub
mov
stc
cmp
adc
ss
push
dec
lock
stc
je
icebp
jne
ds
rcll
xorl
ss
movsl
dec
fwait
pop
lahf
xchg
or
sub
call
pop
dec
sub
and
ja
mov
and
add
add
in
push
mov
xlat
or
adc
rclb
nop
iret
push
and
sbb
inc
push
mov
mov
pop
cmp
mov
movsl
cmp
sub
pop
scas
or
jmp
cmp
xor
negl
jo
popf
sbb
fbstp
mov
pusha
arpl
dec
push
dec
sub
or
orl
push
jp
add
adc
adc
outsl
or
out
fsubrl
xor
push
or
out
shrb
add
scas
dec
icebp
adc
sub
std
adc
and
add
dec
sub
inc
clc
xor
or
sub
lock
xchg
popa
add
pop
int
call
and
mov
lock
adc
out
scas
out
orb
int3
sbb
cwtl
dec
lock
pop
loopne
jnp
cmovl
push
sbb
sbb
sbb
cmp
movsl
mov
sub
cwtl
sub
mov
xor
insb
insb
adc
and
ljmp
clc
shrb
add
les
xchg
ret
push
sbb
mov
outsl
or
jg
adc
je
cmp
pop
outsb
divb
mov
or
pop
stc
loop
push
cmp
xor
sbb
mov
push
push
push
lock
push
sub
or
sub
inc
pop
xchg
jmp
lea
inc
js
push
dec
addb
xchg
out
push
andps
jne
lock
mov
lock
in
in
lock
cmpsl
testl
push
push
push
rcrl
jo
into
xchg
jo
add
dec
jo
or
push
mov
xchg
fistpll
jbe
mov
into
add
push
mov
dec
mov
into
lea
mov
sub
cs
cmc
nop
mov
jle
push
inc
push
je
pop
outsl
leave
rcl
mov
setl
sbb
sbbl
jp
push
xor
sub
add
and
sub
mov
xor
or
inc
mov
add
repz
dec
addb
call
inc
pop
and
inc
sbbl
sub
jns
adc
push
imul
push
xchg
sbbb
jne
cli
xchg
pushw
mov
mov
inc
mov
cs
outsl
dec
xchg
mov
jmp
popa
insb
cmp
popf
divb
mov
and
xor
mov
cltd
or
sbbl
jg
fs
push
jo
cwtl
fidivrs
sub
and
pop
lock
sarb
fwait
sbb
push
inc
or
xchg
mov
push
and
dec
push
lea
push
pop
cwtl
push
adc
and
lea
mov
sbbb
lret
push
or
add
leave
outsl
sbb
lods
add
popf
cmpsb
pop
test
pushfw
xchg
fcoms
cli
add
icebp
les
out
xchg
pop
xor
pop
addb
push
xor
or
xchg
ljmp
push
jb
nop
bound
call
fisttps
jns
and
pusha
dec
sbb
imul
addl
mov
out
std
mov
sbb
mov
cmp
loopne
and
adc
pop
push
adc
aad
cmp
jo
sub
jb
pop
dec
cmp
je
ss
ja
outsl
loopne
add
and
jge,pn
sbb
jg
adc
test
push
cmpb
cmpl
pop
xchg
add
lea
outsl
arpl
and
pusha
pop
pop
inc
ljmp
mov
adc
sbb
ds
pop
pop
or
push
fs
push
or
loope
or
pop
fistl
ret
xchg
pop
into
jecxz
lock
and
cmp
ds
pop
setne
add
cmp
xchg
bound
add
lret
jo
add
dec
lock
sar
out
pop
add
cmp
cmp
adc
sbb
or
aam
mov
add
fsubr
mov
cltd
cmpl
movsl
fdiv
xchg
test
push
jmp
out
pop
sub
popa
mov
mov
shrb
adc
pop
jo
addr16
sbb
xchg
pusha
shl
pop
in
mov
mov
xchg
fwait
icebp
negl
movsl
add
idivb
je
mov
pop
push
pop
adc
pop
jo
loopne
push
out
jo
push
cli
fwait
js
or
movsl
sub
pop
cmp
test
xor
popa
mov
adc
and
testb
xor
jmp
inc
cmp
loope
mov
mov
stos
push
jmp
ss
aaa
fadds
test
pop
popf
and
pop
aas
mov
mov
or
test
test
jecxz
mov
jae
lret
xor
push
dec
push
inc
push
push
je
lret
xor
fmuls
lahf
cs
or
movsl
lcall
adc
push
pusha
call
lea
push
push
cmp
xor
imul
mov
mov
lcall
add
mov
add
out
xor
or
push
les
push
test
or
sub
stos
sbb
daa
or
or
sub
aam
js
aaa
sbb
addr16
add
and
mov
cli
push
sbb
cmp
sbb
imul
test
je
call
sbb
dec
sbb
xor
push
cmp
xorb
lods
cmp
push
pop
pop
xchg
ret
sub
cmp
mov
inc
mov
out
inc
icebp
std
call
in
xchg
cs
pop
add
xchg
fwait
insl
out
sarb
mov
addb
in
pop
leave
pop
rcrb
xchg
dec
xor
call
add
mov
imul
mov
add
nop
push
mov
xor
cmc
mov
test
add
xor
push
xor
add
push
or
or
adc
mov
push
and
xchg
jbe
test
fmull
dec
or
inc
andl
add
mov
stc
std
push
and
fbld
ficoml
ret
or
sub
sub
punpckhbw
xchg
fbstp
rclb
xor
or
or
ret
ja
jo
adc
inc
imul
or
or
les
loopne
add
je
xor
outsl
dec
loopne
mov
add
or
and
movsl
test
inc
cwtl
test
orl
or
pop
inc
xchg
dec
adc
daa
sbb
cwtl
add
inc
or
lret
inc
icebp
lods
test
aas
sbb
inc
jmp
pushl
xchg
mov
pop
mov
iret
call
inc
lea
sub
mov
rcll
push
jmp
sbb
push
loope
shlb
sbb
mov
pop
inc
push
inc
imulb
adc
mov
mov
jl
andl
adc
mov
adc
push
test
cld
and
scas
test
or
jne
add
or
scas
loopne
jecxz
fistpll
jno
cltd
push
lods
dec
xor
pop
adc
push
sahf
push
xchg
dec
outsb
mov
mov
test
xor
xor
add
inc
cmp
aad
repnz
xor
push
test
js
push
dec
stos
and
inc
push
sub
mov
fdivrl
pop
or
cld
adc
push
mov
mov
dec
cmp
inc
repz
jl
or
test
sub
adc
jle
xchg
rcrb
add
shr
pop
or
js
add
cmp
jbe
dec
adc
pop
jg
inc
adc
inc
loopne
xor
and
fdivs
xor
mov
addl
pop
jmp
fnsave
mulb
pop
jb
loope
push
repnz
push
scas
xor
adc
push
sub
mov
add
cmp
iret
pusha
insb
aaa
cmp
cmp
xchg
xor
fiadds
ret
cld
fdivr
testb
je
and
data16
fdivrs
add
xor
and
xor
xlat
roll
iret
xorb
addb
leave
scas
lretw
mov
fmuls
add
jns
mov
sbb
or
mov
mov
mov
scas
push
mov
in
movsb
lahf
sbb
pop
add
test
nop
lret
aas
pop
jbe
xchg
mov
mov
and
cmp
mov
jo
add
inc
add
pop
cmp
push
addb
sbb
popa
cmp
mov
test
adc
xchg
cwtl
dec
insb
scas
xchg
push
cmp
fists
hlt
add
movsl
mov
xor
cmp
dec
xchg
mov
xor
std
push
adc
push
push
subps
loopne
jne
mov
jnp
aaa
movl
dec
push
aam
pushf
push
data16
addr16
pop
enter
inc
or
cld
nop
jmp
jno
roll
callw
xchg
pushw
pushf
pushfw
inc
xlat
adc
out
sahf
mov
dec
rcrb
mov
mov
call
xor
xchg
rcrb
popf
xchg
mov
into
aaa
dec
pop
add
jo
jmp
xor
dec
cmp
outsb
pop
push
sbbb
mov
imul
movsl
sub
dec
cwtl
orl
dec
insb
mov
pop
mov
cwtl
mov
lcall
add
jne
andb
ret
push
inc
cs
and
or
pop
stos
mov
leave
pushf
mov
add
xor
sbb
insl
xchg
xchg
bound
cwtl
gs
add
and
aaa
push
addl
sbb
add
cmp
loopne
ja
je
push
xchg
mov
push
lock
loop
loop
adc
dec
out
andl
add
xchg
adc
cltd
jo
add
mov
ja
dec
cmp
jp
and
jle
jno
xor
xchg
movsb
arpl
xchg
adc
shlb
lea
mov
xchg
sub
xor
add
inc
pop
movsl
mov
mov
push
mov
das
mov
add
sub
mov
ss
test
shrl
xor
xor
notb
lea
fldcw
mov
sbb
mov
dec
hlt
dec
push
or
jae
xchg
test
aas
add
and
sub
xor
std
pop
sbb
mov
rcrb
fsubs
xor
jp
test
push
sbb
insb
add
fcoms
data16
or
loope
mov
sub
adc
mov
or
adc
add
movsl
mov
or
pop
cmp
cmp
mov
loope
shlb
repnz
add
pop
dec
push
in
push
dec
mov
aad
mov
and
fidivl
test
cmp
push
pop
and
cmp
jp
mov
call
push
pand
dec
xchg
cli
push
adc
dec
ret
clc
lods
clc
aas
adc
les
sbb
pop
adc
jge
inc
addb
call
les
sbb
cs
test
and
adc
jle
adc
sub
dec
aaa
sbb
or
ds
insl
jp
insb
std
mov
dec
in
xor
rcll
out
gs
xchg
adc
jb
push
cmp
loopne
pop
mov
lock
mov
adc
jl
clc
push
popf
mov
mov
sbb
jecxz
pushf
repnz
pop
adc
sub
xlat
jbe
lret
xchg
jne
add
jns
inc
lods
movsl
xor
shll
arpl
mov
fsub
mov
insl
sbb
dec
xchg
fisttps
aam
adc
mov
les
int
inc
mov
pop
sbb
xor
or
push
andb
cmp
push
int3
inc
add
out
inc
shl
or
and
pop
cmp
pop
jmp
in
pusha
in
mov
out
movsl
addl
insb
xchg
out
sbb
push
mov
cmpb
ud0
mov
into
inc
add
pop
sbb
movb
or
cmp
je
adc
dec
jno
add
pop
dec
sub
daa
adc
adc
xchg
lret
das
loopne
sbb
inc
inc
or
push
in
ret
jnp
push
push
sub
push
pop
mov
lea
and
insl
mov
or
dec
je
or
inc
aaa
jbe
jecxz
xor
mov
mov
sub
or
add
jmp
xchg
js
arpl
mov
and
push
in
mov
es
insb
aas
scas
sbb
pop
mov
hlt
xchg
dec
pop
cmp
loope,pn
adc
mov
in
iret
jo
in
stos
push
arpl
arpl
popa
push
push
adc
xchg
aad
popa
xor
and
push
mov
nop
mov
or
test
mov
cmpl
subl
push
outsl
xchg
inc
hlt
dec
loop
push
dec
mov
lea
ret
pop
movsb
push
insb
push
fldcw
push
pop
lcall
push
push
adc
cmc
add
loop
jae
pop
and
dec
or
pop
movsl
loopne
inc
fs
fs
in
cmp
sub
or
and
lea
push
inc
pop
sub
jo
inc
loop
jb
div
lock
aam
aad
fs
in
out
pop
lods
pop
repnz
aad
or
mov
or
lock
in
loopne
pop
testl
add
js
xor
push
push
or
adc
or
inc
mov
imul
hlt
daa
icebp
mov
jge
xor
loope
xchg
popf
and
jo
sbb
pusha
xor
xor
rcrb
push
jmp
or
xchg
lock
sub
adc
pop
paddq
sbb
sub
or
sbb
push
mov
mov
addr16
aad
sub
out
cltd
shl
inc
mov
testl
rolb
pop
xor
mov
push
rol
and
xor
xor
or
shrb
mov
cmpsb
add
adc
insl
jne
repnz
xor
mov
xor
pop
or
push
mov
inc
popa
push
push
jae
push
push
push
or
add
jl
int3
jbe
sbb
sbbl
sub
pop
push
push
jo
add
adc
aas
add
lcall
push
js
into
rolb
push
xchg
pop
cmp
pusha
add
add
movsb
in
rcll
aaa
dec
mov
mov
sbb
imul
dec
push
gs
inc
loop
ret
add
testl
mov
or
jp
jae
cmpl
mov
push
rolb
orl
sub
mov
idivl
pop
lods
push
daa
mov
call
push
cmp
mov
mov
xchg
add
bound
adc
mov
push
xchg
add
and
push
xchg
mov
sarl
cmp
adc
in
xchg
push
in
or
dec
addr16
in
cmp
push
inc
testl
lret
or
and
pop
ret
out
xchg
mov
pop
pop
sub
cld
sub
fistps
mov
pushl
push
push
mov
in
les
dec
cmp
push
les
dec
add
ret
idiv
mov
cmp
lods
mov
and
into
pop
enter
cmp
xchg
mov
negl
ljmp
jne
ret
outsl
and
pushf
or
sti
dec
ja
je
or
je
or
sub
hlt
je
jbe
scas
or
cmp
stos
rcrl
les
push
or
add
daa
loope
xor
jne
lcall
mov
xor
outsb
cmp
adc
imul
xor
cmp
addb
lahf
bound
pushl
stos
add
push
adc
xor
outsb
lods
push
push
insb
mov
mov
es
cli
adc
dec
inc
mov
sub
mov
cli
gs
add
je
je
push
mov
mov
push
pop
or
adc
push
xchg
pop
adc
pop
mov
and
jbe
rcrb
add
repnz
jnp
add
loop
xor
aam
lahf
sub
cmp
lret
pop
mov
jp
cmpl
push
jmp
push
adc
add
inc
push
adc
in
mov
or
clc
enter
or
push
adc
mov
jnp
inc
sub
add
and
inc
jnp
sti
and
inc
dec
or
ja
outsl
mov
xorl
jns
mov
out
stos
cs
aam
adc
rcpps
dec
and
shll
cmp
pop
mov
sbb
adc
pop
faddl
sub
xchg
popa
add
sub
and
sti
je
int3
sub
and
pusha
sbb
mov
xor
loopne
into
xor
popa
jo
fmul
mov
add
jnp
xchg
mov
loopne
test
in
push
push
out
and
inc
and
xchg
add
pavgw
jno
xchg
xchg
xchg
xor
pop
inc
movsb
imul
mov
inc
and
dec
je
pop
or
les
and
notl
xchg
pop
adc
mov
inc
enter
push
sbbb
push
and
dec
and
movsb
aam
push
lock
repz
push
xor
cmp
call
push
faddl
outsl
pop
js
mov
ss
jge
in
movsl
push
scas
dec
sbb
xchg
xchg
inc
xchg
mov
in
jae
pop
mov
rcrb
add
xor
pop
push
push
mov
sub
rclb
and
adc
push
rolb
mov
dec
lods
pusha
lea
rolb
adc
dec
jge
idivl
arpl
sbb
or
mov
mov
scas
repnz
add
mov
fisubl
mov
sbb
mov
inc
sub
pop
sbbl
dec
mov
adc
or
lcall
je
sbb
into
xchg
dec
or
jmp
jle
inc
and
sbb
pusha
lock
adc
rorl
cmpsl
js
push
lea
adc
pop
mov
adc
sahf
or
in
cmp
adc
fmull
adc
and
pop
mov
push
adcb
cs
fildl
repz
mov
jnp
cld
xor
inc
enter
or
inc
push
jne
inc
sub
jle
andl
loopne
dec
in
je
testb
in
cmp
in
push
mov
data16
cwtl
mov
inc
or
push
sub
loopne
repnz
subb
adc
and
popf
inc
andl
add
ss
aas
mov
pop
addb
push
pop
sub
mov
jle
jle
or
mov
add
rcrl
pop
adc
lea
mov
and
inc
out
or
sbb
pop
jp
cmpsl
xor
or
push
mov
xchg
mov
add
in
inc
dec
adc
adcl
ret
leave
lcall
add
fsubrs
cmp
sahf
ret
je
add
jg
and
les
xor
xor
push
outsb
pop
add
fildl
inc
rolb
shl
call
sbbl
dec
pop
incl
jo
cld
cltd
add
cmc
out
inc
sub
movsl
decl
dec
loope
inc
inc
mov
pop
inc
inc
pop
jl
mov
and
dec
add
add
movsb
pop
xchg
gs
pop
jp
mov
pop
cmp
mov
cli
addl
mov
or
lea
shlb
xor
dec
mov
hlt
mov
sub
sahf
and
push
push
push
dec
ret
ja
mov
mov
aam
jo
adc
pushf
xor
aaa
add
sub
push
mov
sub
push
xchg
pop
fs
lods
add
add
inc
pop
int
in
xchg
loopne
mov
call
jl
mov
adc
jo
push
filds
jle
pop
sbb
rclb
in
adc
mov
or
sbb
hlt
or
jg
mov
cmp
or
mov
sti
add
cmp
sbbb
es
test
fadd
dec
or
push
adc
xor
xorl
mov
call
cli
aad
pusha
stc
mov
ja
push
movsb
xor
shl
arpl
push
add
fstpt
je
mov
dec
lret
xor
or
add
ja
sarb
sbb
insb
ss
push
inc
pusha
inc
repnz
add
and
inc
pop
pop
or
cmpsb
insl
add
jecxz
mov
adc
and
adc
sbb
and
hlt
rcrb
pop
push
mov
pop
outsb
xor
add
cmp
sub
dec
sti
scas
adc
es
loopne
sbb
xor
movb
ret
mov
dec
mov
xchg
sub
push
adc
fiaddl
jle
mov
mov
mov
jne
inc
cmpsb
sub
out
out
mov
in
and
pop
mov
adc
inc
mov
adc
pop
sbb
mov
xchg
or
push
cmp
mov
push
sub
xchg
push
jmp
push
xchg
xchg
loopne
dec
add
testb
mov
inc
les
sbb
inc
out
sbb
repz
pop
fisubrs
push
test
es
in
aaa
stos
mov
add
cwtl
hlt
cwtl
adc
inc
mov
lret
es
bound
dec
and
js
or
mov
sub
add
add
fsts
adc
xor
pop
add
mov
arpl
pop
dec
pop
or
andl
mov
or
fcoms
sbb
jbe
sbb
and
add
rolb
test
sbb
dec
dec
shr
addr16
add
pop
je
or
push
cmp
push
mov
add
mov
or
or
sub
or
and
and
inc
dec
movsb
test
add
mov
sti
fidivrs
adc
jo
inc
jmp
or
into
or
add
fs
pop
jmp
mov
push
clc
dec
adc
fiadds
mov
push
xlat
cmp
es
inc
mov
cmp
push
mov
add
sbb
and
aas
lea
jmp
cld
push
add
dec
pop
les
int
mov
cld
push
xor
adc
repz
fs
in
or
shr
push
jmp
sbb
adc
scas
pop
mov
les
das
popa
popa
mov
add
popa
and
cli
das
aas
rcrb
sbb
sahf
mov
out
dec
or
fscale
lods
mov
push
int
or
and
fs
sbb
in
sbb
into
sub
push
cltd
inc
mov
add
add
pop
jl
add
iret
adc
test
and
add
inc
mov
and
push
fs
sbb
xor
sub
lods
mov
ja
mov
add
fsubl
and
test
fidivl
push
lahf
frstor
inc
push
sub
push
sbb
and
xor
mov
pop
push
cmp
push
and
cmp
push
dec
xor
movl
fsubs
sub
pop
es
inc
mov
insb
add
or
in
wrmsr
test
jle
add
pop
sub
enter
push
dec
mov
mov
stos
xchg
jns
push
in
iret
out
ljmp
subl
xadd
dec
push
mov
mov
xor
rorl
lds
dec
bnd
push
dec
push
push
mov
jl
negb
xor
jge
adc
xor
subb
call
adc
call
cmp
dec
lods
mov
popf
or
push
enter
push
push
mov
jo
lcall
mov
add
inc
and
push
inc
mov
aaa
sub
dec
scas
mov
sub
pop
and
sbb
mov
xor
test
mov
xchg
loopne
inc
or
sbb
sbb
movsl
sub
jp
loopne
adc
stc
enter
pusha
sbb
out
push
xlat
sub
sbb
fmuls
in
inc
jecxz
rolb
inc
jl
call
pop
cmpl
aam
test
pop
xchg
imul
and
jecxz
aam
icebp
loopne
jmp
add
lea
dec
scas
push
fisubl
xchg
call
mov
inc
jo
pop
pop
lock
lock
sbb
xor
sbb
xor
xchg
fisubs
sbb
push
adc
lods
add
dec
and
cmp
xor
xor
and
leave
xchg
push
lock
or
jne
pop
add
push
pop
add
mov
or
adc
dec
pushf
and
xchg
add
xor
js
lock
cli
mov
mov
and
xchg
ret
sbb
int3
or
sub
mov
xchg
mov
jbe
lods
dec
or
roll
lock
in
add
cmp
and
jmp
or
movsb
sti
inc
addl
lock
cmp
jbe
inc
mov
sub
lcall
mov
mov
rcr
fwait
rorb
cmpsb
jns
jne
stos
mov
mov
adc
hlt
movsb
push
out
mov
cmp
sub
sub
in
jl
push
sti
mov
mov
in
sub
cs
inc
adc
stos
and
xchg
or
add
or
xchg
in
jbe
xor
push
and
leave
jae
fbstp
mov
push
insl
add
inc
jl
cmp
or
inc
mov
and
out
pop
cmp
jne
pop
adc
or
pop
cmp
jl
hlt
jge
cmp
cmp
pop
cwtl
mov
fwait
or
push
sub
movsb
cmp
or
fcmovne
loopne
dec
push
in
inc
call
adc
loopne
jl
or
pop
mov
shlb
mov
enter
xchg
push
add
or
dec
in
or
sbb
aam
daa
add
or
test
xchg
pop
pop
mov
mov
add
xchg
cwtl
and
xchg
inc
pop
xchg
mov
jecxz
mov
sub
and
std
jle
xchg
pop
cli
and
pop
push
and
and
in
loopne
dec
xor
enter
and
adc
push
jb
sbb
aam
add
pop
or
adc
shlb
mov
mov
aaa
call
jns
dec
push
movsb
push
inc
dec
xchg
repnz
or
ja
mov
fstpt
enter
negl
mov
add
push
sub
push
add
fstpl
shrb
fcomps
lock
jns
add
inc
push
sbb
push
inc
dec
jnp
and
test
mov
push
lods
test
mov
mov
cltd
out
add
mov
push
xor
mov
or
or
cmp
xorb
cmp
pop
movsl
imul
inc
jno
bound
xchg
aaa
test
cltd
sub
mov
mov
xchg
mov
sbb
mov
add
xchg
mov
pop
ror
and
outsb
inc
lret
cmpsb
dec
dec
stc
add
test
dec
push
cmpsl
call
stc
lea
add
mov
cmp
push
sbb
push
pop
adc
jns
arpl
sub
leave
inc
out
ffreep
push
out
jbe
mov
cmp
jbe
xchg
mov
les
repnz
lea
in
pop
lods
mov
in
in
inc
and
mov
mov
pusha
fwait
in
in
jns
mov
sbb
add
cmp
or
insb
add
sbb
mov
xor
test
rorb
push
xchg
cmc
sbb
push
fdivp
es
fidivl
cmp
cmp
mov
mov
jmp
ja
shll
or
cmp
push
push
push
mov
adc
jle
or
mov
push
cmpsl
pusha
xchg
ret
test
loopne
int3
cld
push
pop
cmp
adc
or
popa
loop
sub
sti
lea
out
fdivs
andl
push
push
into
sbbl
fisttpl
dec
inc
add
or
add
mov
adc
jmp
fbld
add
add
xor
xchg
icebp
sbb
mov
push
and
popa
or
lea
jmp
push
xchg
inc
xor
lahf
movsb
inc
aas
or
and
fsubs
push
add
scas
add
movl
fsubrl
add
xor
iret
sbb
push
ds
adc
or
mov
jne
fisttps
or
lahf
das
leave
rolb
inc
adc
jb
add
out
jns
leave
jo
pop
ret
gs
lcall
push
test
and
xor
sbb
out
aam
movsl
xor
in
cld
mov
rclb
dec
add
sbb
insb
jnp
jnp
xchg
sbb
pop
scas
push
add
xor
std
repnz
insl
sbb
loopne
scas
iret
cmpsl
add
arpl
enter
pop
subl
daa
int3
js
imul
mov
push
mov
and
out
into
and
inc
cmp
push
pop
mov
les
iret
xor
adc
or
xchg
push
mov
movsl
icebp
lea
push
pop
mov
rep
mov
adc
mov
sti
push
or
lea
pop
cmp
dec
mov
leave
or
add
xchg
push
sbb
orb
add
imul
push
jge
lods
loopne
adc
jge
pop
and
icebp
mov
pop
push
pushl
sbb
out
pop
ret
push
mov
arpl
xchg
sub
insl
fiadds
aam
xor
xor
les
test
or
dec
loope
jp
push
push
ficompl
and
pusha
pusha
push
js
xlat
les
add
jg
adc
xchg
pusha
movsb
or
cmp
adc
push
adc
mov
cmp
int3
xor
pop
je
in
push
test
stos
ljmp
sbb
add
fistl
add
lea
clc
imul
mov
mov
ljmp
cld
sub
insb
cld
sub
jno
faddl
loopne
stc
mov
fldt
jle
and
jbe
sub
jae
lea
ret
sub
jne
mov
push
cmp
sbb
in
loope
and
push
jb
pushf
aaa
dec
cmp
inc
pusha
cmp
flds
sub
or
dec
cmc
lea
gs
test
pop
call
xchg
and
aam
or
cwtl
test
cmc
mov
mov
cld
push
xor
cltd
jb
sbb
push
neg
sbb
inc
je
or
inc
call
inc
mov
dec
sub
xchg
adc
ss
push
int
sbb
mov
push
mov
sbb
test
loopne
movsb
adc
sub
insl
sbb
jae
push
pop
push
insb
ja
ret
xor
imul
cmp
pop
leave
ret
inc
in
or
push
or
ljmp
mov
jecxz
push
mov
jle
sbb
shr
not
inc
lea
cmc
sbb
in
je
out
and
es
mov
xchg
shll
push
xor
pop
inc
dec
jle
push
push
addr16
dec
aad
push
ja
rolb
das
xchg
xchg
fisttps
mov
sub
sub
or
lret
lret
lret
xor
inc
in
pop
out
in
add
dec
and
je
jmp
movl
imul
mov
je
add
adc
jge
into
dec
cltd
stos
add
push
mov
xchg
add
decl
sub
fsubs
jno
jg
repnz
mov
cmc
adc
ficoms
lock
or
cmp
stos
mov
jmp
adc
rclb
push
stc
mov
dec
out
push
sub
or
ret
ja
adc
or
in
push
scas
cwtl
shrb
push
inc
jp
pop
stos
jecxz
cmpb
or
xchg
add
add
inc
sbb
subl
lcall
loopne
xchg
iret
fisttpll
dec
inc
lcall
push
out
iret
push
adc
mov
or
or
je
cmp
or
cmp
cmp
sbb
imul
add
loopne
xor
xor
adc
loope
xor
xchg
and
mov
sub
pop
cmp
ret
sub
xchg
gs
push
sub
rep
rcll
les
cmpsb
inc
xor
or
rcr
int
or
sbb
cmp
jae
cmp
cmp
add
sbb
call
arpl
mov
jnp
and
jne
push
push
cmpsb
mov
sti
dec
add
jae
xlat
addl
loopne
adc
insb
ja
das
data16
inc
sub
or
and
mov
jge
lcall
cmp
or
pop
xchg
testb
ljmp
inc
xchg
mov
into
or
push
movsl
daa
pop
cli
xor
xor
xor
inc
push
adc
andl
push
rol
xor
or
sarb
add
sub
sbb
push
adcb
leave
clc
push
mov
popa
daa
add
mov
jmp
cmp
sete
in
mov
fsubs
mov
jmp
mov
and
test
push
lock
shlb
cld
sub
adc
mov
addr16
mov
enter
push
mov
mov
orb
pop
icebp
add
fwait
scas
xor
add
xchg
rcl
lret
add
jnp
mov
cld
mov
push
push
icebp
inc
sub
not
dec
sbb
adc
mov
pop
push
bound
push
cmp
faddl
mov
gs
mov
dec
cld
orb
mov
xchg
inc
rcll
fsubrs
add
mov
loope
rol
adc
jno
incl
lret
push
mov
add
ljmp
cmp
sbb
mov
arpl
ja
popf
sarb
popa
data16
adc
sbb
pop
popa
xor
xor
cmp
pop
xchg
cli
dec
push
loopne
mov
xor
adc
bound
roll
bnd
sarl
shlb
or
int3
push
jno
cmp
cli
fs
dec
mov
or
sbb
hlt
push
xchg
mov
dec
or
testl
mov
movl
jbe
sbbb
push
shrb
ljmp
sub
dec
in
xor
xchg
push
sbb
pop
fxch
fnstcw
push
mov
stos
sbb
stos
shrb
bound
jo
dec
mov
into
call
cmp
pop
pop
inc
leave
adc
repnz
pop
mov
add
jmp
add
inc
inc
sub
sar
adc
int3
adc
mov
xlat
test
leave
adcb
sub
sbb
push
enter
addr16
mov
or
fisubl
inc
adc
test
sub
jle
add
jle
pop
daa
cmp
xor
push
insb
loope
movsb
dec
add
push
adc
shll
dec
or
push
pop
cmp
orl
push
cmp
mov
mov
or
lahf
mov
dec
or
inc
add
test
jmp
push
clc
add
clc
dec
out
loopne
jbe
or
add
jmp
sub
inc
mov
fidivl
or
pusha
in
adc
sub
outsb
mov
add
jecxz
pop
jb
adc
inc
xchg
push
and
in
mov
or
mov
and
enter
cmp
mov
adcb
inc
pusha
add
lock
loopne
mov
orb
mov
pop
leave
sbb
shlb
push
jnp
mov
pop
std
jo
jnp
xchg
pop
pop
in
mov
cmp
cs
pusha
lea
sbb
mov
notb
inc
pop
inc
sbb
sbb
cmp
xor
lods
xor
dec
orl
iret
inc
pusha
inc
xor
dec
out
insl
add
mov
sbb
sub
enter
sbb
ret
pop
stos
loope
test
orl
sbb
xor
test
push
adc
nop
sbb
enter
arpl
inc
jnp
orl
jne
sub
inc
incb
lea
jp
cmp
or
dec
push
push
ja
inc
cmp
jb
pushl
mov
pop
sbbb
or
pop
jmp
xor
push
add
mov
adc
add
mov
in
and
aas
adc
mov
hlt
insb
popf
pop
or
int3
xchg
pop
adc
inc
add
es
movsl
cmp
push
imul
xchg
movsl
pop
mov
jbe
dec
jl
out
sbb
or
mov
jle
xchg
push
bound
push
add
test
or
jmp
pop
lock
lods
pop
leave
pop
xor
jmp
cmpsb
add
xchg
pop
inc
sub
push
push
leave
out
je
lods
push
int
or
inc
and
mov
test
arpl
std
xchg
sbb
mov
movsb
scas
mov
test
push
test
cli
std
push
pmulhuw
dec
mov
jb
sbb
cld
mov
pop
mov
cli
jbe
pop
xor
or
sbb
pop
shr
dec
jmp
sbb
sbb
dec
pop
jmp
mov
pop
xor
roll
xor
or
imul
cmp
mov
adc
add
sbb
ret
nop
push
adc
push
jmp
sub
and
xchg
lret
inc
or
mov
leave
add
pop
sbb
stos
mov
sbb
lods
dec
arpl
ja
pop
jb
xchg
or
dec
outsb
sub
fldt
aas
xchg
out
enter
jmp
roll
adc
arpl
adc
add
jecxz
repnz
mov
add
bnd
nop
add
or
adcl
push
pop
orl
xor
je
pusha
test
mov
or
aas
mov
mov
adc
or
imul
into
mov
movsl
mov
adc
pop
pop
push
jl
cmp
mov
jl
orb
push
loopne
addl
push
inc
aas
cmp
sbb
je
push
cmp
mov
movsb
inc
push
cmp
les
inc
push
cmp
inc
push
hlt
sub
and
sbb
xchg
js
xchg
xchg
jb
or
jmp
push
xchg
add
pop
push
enter
adc
sti
fsts
jne
cmp
sbb
lock
mov
mov
jge
in
fmul
loope
push
cmp
lcall
cmp
or
test
pusha
push
push
je
sub
or
mov
sbb
enter
adc
adc
sti
dec
adc
fcomp
xor
call
inc
loope
loope
inc
adc
lret
cltd
sbb
sahf
dec
jmp
xor
dec
jecxz
push
or
jae
adc
add
adc
add
add
adc
ja
lret
adc
adc
rorb
sub
or
xchg
cmpsb
imul
ja
inc
addb
xchg
mov
push
pop
incl
dec
sub
xor
adcb
fdivrs
add
popa
arpl
imul
lea
xchg
mov
pop
sbb
imul
std
jae
arpl
mov
push
adc
inc
data16
or
pop
push
cwtl
jo
outsl
add
js
ds
pop
orb
rclb
int3
in
int3
rorl
dec
insl
pop
mov
push
add
add
adc
pop
inc
cltd
add
rol
xor
cmpsb
xorl
ret
add
push
and
mov
adc
test
xchg
push
fwait
dec
sub
aad
das
out
or
es
je
dec
bswap
push
aad
adc
pop
sbb
insl
fstps
adc
add
pop
fimuls
cmp
jne
sbb
cmp
sbb
xor
add
in
test
lds
call
js
or
je
les
clc
rcll
jne
pop
mov
add
or
mov
push
cmpb
mov
jae
outsb
mov
shr
ror
fsubrl
sbb
add
push
jg
cmp
scas
push
mov
lds
sub
sbb
test
je
lock
js
xor
add
add
push
pop
or
rolb
cmp
stc
pop
dec
cmp
jg
test
iret
push
jo
dec
and
sahf
adcb
mov
ret
add
enter
out
out
sub
push
dec
and
rcrb
adc
pop
adc
xchg
mov
enter
in
inc
fcoml
sbb
mov
sbb
fsubs
jnp
sub
insl
mov
cmp
xchg
shlb
fs
or
inc
push
push
sbb
leave
repz
fadds
cltd
ret
dec
mov
test
mov
lock
dec
cmp
jmp
add
pop
xor
mov
incb
ret
push
pop
or
push
push
inc
shll
addl
or
mov
fmull
xchg
or
or
or
adc
or
mov
jmp
push
adc
movsl
xchg
imul
mov
jmp
adc
mov
sbb
repnz
stc
mov
mov
fldln2
and
mov
sbb
hlt
or
pop
and
add
sub
push
push
mov
cmp
jns
add
push
and
cmp
clc
xor
xchg
inc
sahf
adc
shr
int
outsb
xchg
lret
lock
and
pop
cltd
movsb
pop
xchg
adc
ds
or
push
xor
push
inc
ja,pt
or
push
std
and
xor
inc
adc
cmp
push
aaa
and
sbb
outsl
imul
outsb
xor
push
lock
lock
jbe
or
mov
into
inc
add
lock
repz
add
cmc
out
decl
test
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
adc
lcall
mov
sbb
sarb
jge
mov
jns
fcompl
sbb
xor
je
cmp
je
test
js
movb
mov
je
jo
sub
iret
jae
adc
or
rol
clc
and
mov
es
cwtl
clc
xchg
sub
add
and
fsubrl
mov
xchg
dec
lds
mov
mov
aas
sbb
pusha
push
enter
punpckhdq
push
jl
sub
pop
jb
push
jmp
hlt
jge
ds
aaa
and
fwait
cmp
jne
movl
mov
mov
and
and
or
test
int3
aam
pop
add
ret
add
sahf
jmp
sub
lock
xchg
pop
lea
pop
mov
add
loop
mov
xchg
xchg
lods
repz
cmpsb
push
jne
mov
xchg
adc
xor
ja
mov
mov
es
mov
fs
nop
cli
ja
push
nop
les
xchg
fldl
loope
fcmovu
rcrb
pop
mov
mov
cmp
and
sub
fcomp
push
pop
lock
loope
pusha
fisttpl
and
xor
xchg
mov
aaa
jl
add
movsl
cmp
stos
ds
sbb
dec
push
aad
leave
fadds
push
mov
or
mov
fiaddl
adcb
aas
jl
mov
aaa
lret
call
and
add
hlt
sbb
cmp
inc
outsl
push
sbb
cmpb
cmpsl
mov
push
inc
xor
das
or
sbb
arpl
add
xor
repz
push
pop
pop
pusha
fs
inc
or
cmp
jno
mov
inc
in
ss
aad
adc
adc
in
add
xchg
pop
adc
out
adc
sbb
add
aas
and
mov
dec
adc
imul
adcl
xor
stos
push
mov
mov
pusha
xor
sub
push
scas
repnz
add
or
cmp
fmull
adc
ret
and
pop
or
aas
inc
fs
xchg
cltd
je
je
js
inc
stc
sub
inc
sub
pop
or
mov
ss
rclb
ret
addb
inc
shr
sbb
and
or
add
xor
add
aaa
or
adc
bound
lea
mov
cmp
rolb
mov
sbb
dec
mov
cli
jne
pmulhuw
jg
mov
jmp
push
por
or
nop
push
sub
inc
lcall
in
or
or
pop
std
loope
sub
loopne
add
out
xchg
push
pop
fucomi
jae
cmp
adc
pop
fwait
cli
push
test
add
add
mov
jbe
dec
or
nop
push
jno
or
jmp
in
or
daa
js
mov
mov
bnd
orb
adc
adc
push
std
sbb
add
loope
xchg
mov
fstps
push
stc
adc
adc
into
pop
xchg
mov
fwait
push
add
jge
inc
repz
test
das
outsb
jno
pop
pop
pop
pop
cld
in
xor
inc
push
or
jae
sti
sbb
mov
inc
loop
adc
scas
inc
or
mov
mov
test
je
push
aaa
mov
or
je
cmp
add
jg
pop
push
adc
pop
jle
lret
incb
xor
inc
mov
xchg
rolb
lods
out
and
adc
dec
cmpsb
cwtl
pop
dec
add
or
jne
and
jne
push
inc
mov
in
dec
into
sbb
imul
movsb
or
push
inc
repnz
and
mov
mov
movb
and
loopne
adcb
push
fs
jno
jo
add
push
lods
add
movsb
xchg
mov
mov
xlat
push
xchg
pop
test
xchg
cmp
imul
dec
jb
fwait
pop
push
mov
rolb
sbb
call
inc
mov
adcb
mov
xchg
xor
fisubrs
cmp
sub
adc
outsb
add
xchg
cld
fdivrs
dec
add
mov
cmp
mov
mov
push
bound
xchg
cmpb
fildll
pop
or
jle
enter
pop
push
jno
inc
sub
inc
add
push
into
clc
push
lea
push
les
inc
sahf
sub
sbb
pop
aam
clc
xchg
dec
inc
hlt
pop
das
push
sbb
and
test
and
ret
nopl
push
hlt
jg
mov
mov
cmp
sub
inc
lea
or
jge
aas
das
mov
jmp
mov
inc
loopne
das
orps
dec
mov
cmpsb
push
xor
fildll
mov
or
decb
add
cli
or
mov
push
cmpb
sar
xor
cmpsb
ret
mov
jg
push
ljmp
int3
push
push
nop
and
es
movsl
cmp
pop
jle
or
dec
adc
shrl
push
jne
adc
clc
aam
mov
add
or
jns
jb
mov
mov
or
movsb
adc
add
adc
pop
add
add
or
add
sbb
lahf
pusha
mov
push
mov
and
dec
sahf
out
xchg
push
xor
adc
in
adcb
push
ja
mov
ds
mov
jl
adc
insb
adc
mul
cmp
pushf
mov
pop
and
or
pushw
ret
jmp
lea
jae
into
insl
sub
pushf
sub
mov
leave
pop
mov
xchg
sub
push
xchg
adc
jp
mov
cmc
jmp
lods
cmp
pop
subb
lea
inc
push
push
or
and
sbb
lret
ret
pop
je
cmc
xchg
push
push
adc
faddl
xchg
sub
shr
jmp
in
mov
jnp
dec
jnp
push
mov
push
lea
sahf
lret
jae
test
mov
call
push
inc
sbb
mov
mov
xchg
add
pop
dec
push
mov
push
sar
jns
sbb
xor
cwtl
inc
xor
pop
mov
add
and
imul
pop
pop
insl
sub
fcomp
mov
cmp
push
fldl
aad
mov
fstpl
add
push
lock
adc
pop
data16
aaa
out
stc
insl
adc
adc
jne
push
divb
jns
sahf
lahf
or
jne
or
jne
or
xor
cld
jecxz
incb
call
out
add
pop
andl
scas
add
cmp
inc
adc
addr16
stos
shl
cs
and
adc
popa
push
and
jg
or
aam
arpl
test
lea
fstl
jecxz
outsl
loopne
push
loop
jbe
daa
enter
movsl
movsl
lea
movsl
mov
ret
or
cmp
inc
cmp
out
lret
pop
sbb
and
or
push
andb
sub
mov
ret
and
mov
and
mulb
ret
push
or
jge
jne
cmp
or
inc
in
dec
loop
or
fildll
mov
in
movsl
pminub
cli
ja
lcall
mov
mov
push
and
mov
push
mov
js
dec
add
fdivr
or
fmull
add
push
insl
xchg
pop
xchg
mov
inc
sbb
mov
add
addl
pop
fcmovbe
sbb
enter
adc
jge
and
imul
mov
loopne
push
pop
rolb
rcll
inc
cmp
in
stos
sub
fsubr
adc
mov
nop
xchg
loopne
sub
adc
nop
xchg
scas
add
xor
pusha
dec
push
test
push
fbld
nop
stos
push
pushf
divps
add
or
and
leave
lret
orb
movsb
es
mov
or
add
pop
push
mov
jo
fmul
push
or
outsb
and
push
les
ret
or
popa
test
test
pop
inc
dec
inc
xchg
les
adc
lods
push
jmp
or
stc
pop
pusha
mov
rcll
test
push
outsl
and
push
xchg
aas
push
and
mov
lcall
es
faddl
mov
imul
fs
push
enter
jo
add
dec
ja
add
test
fisttpll
int3
rolb
nop
test
mov
or
fmuls
sbb
stos
cli
pop
inc
and
bnd
loopne
dec
push
xor
mov
fucom
imul
icebp
or
sub
popf
add
jb
rorb
ror
enter
jb
sarb
mov
xor
pop
jge
pop
lods
push
adc
push
push
pop
jl
mov
icebp
sub
xchg
lods
dec
test
add
mov
mov
cmp
test
pop
in
dec
shlb
ret
cs
icebp
enter
xchg
or
out
arpl
xor
cmp
adc
ficompl
dec
dec
fwait
adc
cmp
insb
pop
jmp
scas
es
push
adc
hlt
adc
push
je
test
orl
mull
push
add
cs
adc
clc
loopne
adc
jbe
leave
jge
xorb
enter
cmp
jl
cwtl
xchg
mov
pop
stos
stos
ret
or
out
mov
add
outsl
fimuls
ret
daa
addl
test
insl
jb
cmp
add
add
mov
ud2
sarl
pop
xor
jns
push
fnsave
cmpb
pop
lods
push
mov
sbb
mov
loope
mov
adc
pop
lret
xchg
add
mov
in
sub
dec
xor
mov
test
iret
xchg
in
jb
cmp
fsubrs
jp
decl
xor
mul
insb
add
add
stos
ret
repnz
or
and
andb
sub
xor
icebp
in
pusha
jg
test
mov
lea
rdpmc
push
jmp
pop
vmwrite
mov
stc
jbe
loope
movlps
jne
xor
loope
sub
dec
cltd
pop
into
cmp
sbb
xchg
cmp
mov
mov
or
mov
adc
call
nop
inc
add
aaa
adc
sub
pop
pop
lock
bsf
mov
and
in
mov
inc
mov
pop
jle
pop
lret
sbbl
add
inc
sbb
cmpsb
mov
inc
add
daa
inc
adc
adc
cltd
jne
jno
sub
clc
adc
pop
push
loop
add
ds
in
inc
gs
jnp
stos
and
lods
or
add
mov
jno
sti
inc
push
jo
mov
mov
fcomps
movsl
cli
lea
push
and
iret
pop
in
ficoml
jp
movsl
sub
pop
push
gs
dec
xchg
mov
sub
add
sub
push
pop
inc
xor
js
cvtps2pi
ffree
call
mov
pusha
add
xchg
inc
mov
lea
popa
into
xchg
mov
push
mov
pushw
das
push
pop
or
cmpl
jmp
insb
fcoms
iret
pop
lds
movhps
scas
push
sbbb
or
or
push
mov
jnp
cld
inc
or
sub
cmp
subb
addb
jns
xchg
les
js
pop
ret
mov
int3
sbb
mov
outsl
dec
adc
adc
jp
mov
enter
cmp
in
mov
jle
and
push
push
dec
cmp
jle
cmpsl
add
mov
add
stc
clc
and
imul
adc
int3
push
or
pop
inc
test
xorl
lahf
sti
adc
lock
xchg
push
mov
adc
outsb
push
dec
mov
push
ret
or
loopne
pop
insl
add
add
lahf
mov
mov
mov
adc
rclb
add
lahf
mov
and
lret
jno
lea
movsb
push
int
arpl
fwait
out
pop
cmp
lahf
mov
lahf
cmp
xor
adc
push
mov
fadd
ret
fwait
in
mov
cmp
adc
and
push
das
jne
rolb
dec
dec
sahf
daa
shlb
les
test
jae
sub
mov
and
sub
adc
sbb
add
in
mov
sarb
pop
fs
mov
adc
dec
and
mov
adc
loopne
or
push
ds
or
or
and
mov
xor
pop
scas
addl
aam
ss
and
lock
push
test
mov
sbb
pop
and
adc
arpl
or
xor
dec
icebp
adc
mov
into
loop
mov
xlat
ss
cmp
sbb
inc
test
clc
inc
mov
loopne
mov
roll
jl
jmp
push
pop
push
nop
xchg
ficompl
adc
sub
xor
jecxz
sbb
and
jo
add
mov
adc
out
in
int
adc
xor
or
imul
xor
testl
add
sbb
or
frstor
pushf
push
mov
lock
sub
dec
add
dec
cs
add
lods
les
inc
adc
mov
pop
adc
popl
add
sub
aam
sahf
xor
cs
loope
xor
adc
push
sbbl
sbb
les
inc
inc
jecxz
in
push
aaa
ret
addr16
pop
xchg
push
addr16
and
out
xor
jmp
sub
loopne
or
xchg
add
mov
inc
test
mov
or
and
mov
inc
nop
add
bound
cmp
imul
cwtl
jg
in
divl
andl
add
loope
out
dec
cs
sbb
mov
stos
jo
adc
inc
sub
stos
and
data16
enter
and
cmp
push
add
lods
sbb
jne
popf
sub
jno
fimull
and
push
mov
push
adc
test
jne
inc
xchg
nop
cmp
push
rorl
pop
pop
sbb
cld
test
pop
imul
push
pop
arpl
add
jp
fnstenv
jb
jmp
jnp
dec
ja
fnsave
dec
add
decb
test
dec
cmpb
dec
mov
pop
stc
add
jne
loope
sub
fmul
sarl
and
and
xor
adc
vmwrite
dec
in
add
lahf
mov
out
lock
ja
xchg
push
pop
jne
pop
dec
or
pushl
pushf
pop
pop
lds
sbb
fstl
xchg
jo
push
lcall
add
inc
das
and
sti
andl
push
push
sub
mov
fcmovnb
movsl
ss
jp
jo
pop
add
lea
stos
fs
jle
pop
dec
push
outsl
lret
out
mov
int
js
adc
fxch
repz
mov
add
add
push
or
arpl
dec
push
push
add
add
push
pushf
sti
xchg
inc
sahf
orb
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
movsb
jb
jo
pop
enter
orb
mov
or
xor
movsb
or
ret
and
xorb
or
sahf
xor
stos
add
repnz
insb
loopne
inc
push
mov
jns
pop
hlt
mov
and
out
pop
cld
inc
mov
add
mov
dec
int
inc
cld
and
mov
hlt
cmpl
adc
pop
lock
sbb
movsl
repnz
or
dec
lret
cmp
test
xor
mov
or
adc
cmp
mov
fs
and
shlb
lock
xchg
xor
jmp
and
sbb
subl
push
nop
push
or
arpl
add
shll
mov
cmp
leave
ja
sub
sub
daa
sbb
setno
adcl
movsb
xor
sub
and
mov
sti
push
ja
push
addr16
into
sub
mov
xor
push
cmp
push
or
cltd
jg
rolb
inc
cs
ljmp
cmp
and
or
sub
fs
inc
dec
xor
insb
pop
in
fadd
sub
sbb
push
xchg
shlb
cmp
ss
or
lock
mov
adc
add
add
pop
push
pop
int3
push
pusha
push
loope
movsl
sbb
popf
lret
jo
pop
clc
cmpsb
xchg
ret
je
movsl
inc
into
mov
dec
push
fs
shl
add
cmpl
loope
fisttpll
mov
inc
addr16
das
mov
ss
mov
push
xor
or
xchg
jle
mov
dec
and
add
xchg
adcb
testb
mov
in
or
mov
mov
sub
enter
xchg
adc
xor
mov
dec
sub
test
push
rolb
out
add
aam
loopne
pop
pop
ja
shrl
jge
popa
je
fs
pusha
lods
stos
rcl
mov
fiaddl
inc
adcb
outsl
out
and
fldt
lret
xor
and
sarl
cmp
ret
pop
sbb
sub
fsubrl
add
pop
test
loopne
sbb
es
push
xor
inc
add
xchg
imull
test
fstps
sbb
mov
data16
sub
pusha
arpl
scas
push
xchg
ret
pop
mov
in
sbb
sub
fsubs
test
pusha
xchg
xor
lret
mov
hlt
movsb
mov
push
push
rol
hlt
call
add
push
je
neg
test
or
cmp
jae
push
xor
pop
jne
stos
ja
fisubl
push
jmp
sbbl
pop
call
out
jno
ds
mov
aad
scas
sub
mov
jno
lds
add
je,pt
pop
jle
jbe
push
push
push
push
add
test
xor
sti
mov
lods
cwtl
push
stos
dec
inc
dec
pushf
pop
or
ret
ja
dec
test
and
push
insb
push
push
push
push
aad
xchg
dec
mov
jle
repz
and
push
dec
and
mov
push
jbe
mov
inc
jmp
push
shll
mov
add
or
xor
add
sbb
popaw
pop
jns
and
jbe
push
out
xchg
repz
cmp
jae
fs
adc
mov
les
inc
pusha
jmp
mov
push
pop
cmpsl
and
adc
xchg
pop
std
jge
rol
jge
mov
sbb
clc
add
adc
pushl
xor
shlb
or
and
mov
mov
shrl
add
icebp
push
mov
and
std
ljmp
je
cmp
imul
xor
mov
pusha
push
cmp
jne
push
ret
mov
aaa
mov
aam
and
cmc
sub
push
pop
dec
push
rorl
jbe
call
sub
test
in
enter
out
jmp
push
orb
jmp
dec
jns
mov
sbb
ja
mov
jmp
test
inc
icebp
mov
pop
ror
out
jle
js
mov
aas
and
and
incl
mov
fwait
ret
je
or
sbb
xor
and
data16
cmp
jbe
cmp
in
jb
push
or
outsb
push
call
push
sub
shll
or
or
popa
call
loopne
push
cmp
add
loopne
les
je
and
add
push
lods
or
rorl
sbb
fldl
ret
dec
xorb
xor
add
popf
daa
sti
sti
out
sbb
fsubrl
push
cmp
cmp
enter
jnp
xchg
jmp
jmp
pop
fsub
pop
fsubrp
icebp
jge
push
xor
out
push
push
adc
pushf
sbb
jno
in
add
and
xor
push
shlb
or
pop
and
add
jge
mov
sub
dec
je
sbb
add
es
ret
mov
mov
lcall
ss
sub
sub
sub
sbb
mov
iret
cld
pop
sbb
push
dec
test
xchg
pop
aaa
push
dec
setno
adc
lahf
outsl
in
adc
cmp
mov
add
iret
and
add
pop
dec
sahf
out
jnp
lcall
movsl
fnstcw
mov
xchg
ss
sbb
lahf
fsts
cmpsl
dec
sbb
pushf
cwtl
fstpl
and
push
jp
and
aas
stc
jl
or
push
lea
add
dec
or
mov
xchg
scas
je
add
dec
and
add
mull
mulb
push
push
movsb
sbb
sbb
push
clc
in
inc
jbe
mov
adc
sub
dec
pop
cltd
and
sbb
cmp
dec
add
add
and
xchg
push
jne
gs
fstl
push
or
adc
mov
aad
jae
xchg
pop
push
jecxz
adc
push
into
mov
add
ss
sbb
and
mov
aaa
add
mov
mov
push
outsb
xor
push
fwait
fs
push
xchg
adc
cmpsb
lods
dec
fs
sbb
jl
cmp
xor
lret
push
dec
jbe
mov
sub
mov
adcb
and
add
jbe
dec
in
and
adc
add
fwait
add
push
push
fs
sbb
test
punpckhbw
cs
std
inc
and
cmovl
inc
adc
pop
push
mov
leave
outsb
jl
clc
mov
xor
jbe
jne
and
sub
mov
jo
fwait
in
daa
shlb
or
push
push
and
dec
fwait
test
xlat
jns
xlat
icebp
mov
insl
lods
or
push
mov
out
shl
cmc
push
scas
iret
repz
pop
sub
dec
adcb
mov
xlat
call
stc
or
jns
out
pop
jo
xchg
sahf
out
sahf
mov
clc
cmp
sarl
sbb
cmp
mov
cmp
mov
je
imul
or
adc
adc
rcl
or
jecxz
add
cmpb
pop
gs
into
xor
or
xor
adcb
push
add
das
loop
icebp
or
cltd
jno
lea
add
adc
inc
add
popf
and
inc
sbb
and
add
mov
data16
push
xchg
pop
jge
popa
jg
push
push
add
push
sbb
or
cmp
sub
shlb
push
mov
dec
test
or
jb
addl
add
mov
push
cmp
js
loope
pop
or
test
loop
int
push
sahf
inc
add
add
mov
js
stos
call
daa
push
mov
sub
add
xor
enter
out
sahf
inc
mov
or
pop
rorb
mov
clc
add
pop
rcll
and
xor
mov
adc
or
aam
inc
mov
xchg
pop
leave
filds
fistpl
mov
in
in
push
aas
and
jg
rcrl
loop
mov
shl
or
enter
jle
and
enter
xor
push
ss
stc
push
es
jle
movsb
xchg
fidivl
add
adc
sbb
jl
xchg
loopne
push
popa
add
xchg
lret
call
and
and
sbb
push
jb
push
pop
in
mov
add
add
fs
loope
fwait
call
test
push
jg
add
push
repnz
out
and
rcll
or
cmp
push
ret
out
inc
and
jo
out
add
inc
inc
xlat
xchg
xorl
mov
mov
dec
cmpsb
jg
inc
ret
dec
add
push
xor
ljmp
daa
sub
enter
or
xchg
xor
in
pop
or
xor
xor
mov
or
mov
inc
xchg
subb
jne
ret
outsl
aam
out
aaa
inc
pop
leave
dec
stos
ret
pusha
loop
push
push
enter
cmp
push
movsl
ret
sub
or
shl
popa
add
fdivs
pop
add
inc
push
ds
je
push
adc
jnp
add
and
push
push
in
addl
ficoml
adc
or
dec
adc
sbb
mov
adc
xor
dec
movsl
xchg
lock
sahf
cmp
push
add
sub
adc
push
lock
add
and
jge
push
xor
iret
and
in
add
inc
mov
mov
sbbb
pop
mov
or
subb
adc
addr16
push
arpl
jo
icebp
lret
mov
pop
ja
lgdtl
enter
add
sub
add
jl
mov
in
add
fistl
adc
lahf
add
add
in
loop
jne
adc
lods
xchg
mov
cmp
fimull
test
call
les
daa
test
xchg
cmp
mov
xor
inc
mov
rcl
ds
adc
test
add
xor
add
and
adc
stos
dec
and
mov
sbb
nop
ja
add
push
jge
lea
add
mov
stc
popf
or
cmp
add
mov
test
loopne
add
rorb
jp
outsb
movsb
or
lods
insl
fistpll
sbb
fldt
jne
sub
ss
test
pop
push
bound
add
jnp
or
inc
std
xchg
and
std
sbb
cmp
adc
sub
add
mov
and
pop
enter
add
mov
popl
sbb
sbb
adc
push
addl
jb
or
andb
pop
xchg
xor
mov
and
fs
rcl
subb
mov
push
icebp
fstpl
and
dec
es
add
or
mov
mov
inc
or
sub
adc
mov
cs
outsl
pushf
sub
adc
add
stc
lret
inc
inc
and
pop
mov
adcl
aaa
cwtl
stos
push
popf
pop
jecxz
roll
test
sub
or
and
lea
enter
xor
push
xchg
aas
mov
xor
jb
rcrl
test
mov
add
add
cmovp
sub
add
lock
insl
mov
and
rolb
or
jp
std
sbb
rcl
jl
cmp
lods
mov
mov
or
xchg
test
icebp
pop
test
in
mov
cmp
lret
mov
xchg
mov
inc
sub
inc
inc
lds
divb
mov
and
jecxz
push
cmpb
sbb
je
jne
cmp
xchg
add
sbb
or
pop
adc
bound
add
inc
popa
mov
push
testl
mov
add
fldcw
jmp
pop
adc
dec
pop
out
xor
add
dec
sbb
test
ret
xor
orl
inc
jae
add
pusha
sbb
test
jno
lock
hlt
adc
xorb
xchg
outsb
imul
and
jno
gs
fdivs
inc
cmp
movsl
js
ljmp
mov
popa
pop
fwait
arpl
test
jne
fldl
mov
repnz
call
push
add
fldt
push
xorb
or
sysret
xchg
xchg
out
add
jns
fs
push
jp
add
cmpsl
popa
adc
aaa
adc
ret
out
push
jl
push
cmp
mov
or
inc
add
xor
pop
add
sub
or
or
xor
jae
bound
xchg
testl
lods
jp
shlb
mov
mov
call
rol
add
lahf
xor
clc
xchg
cmp
in
lret
cmp
nop
orb
push
cmp
notl
push
adc
push
add
or
inc
xor
rorb
inc
mov
sub
sahf
nop
jecxz
pop
icebp
in
dec
sub
out
mov
mov
add
cmp
jo
jns
gs
and
adc
cwtl
pop
mov
mov
or
and
mov
fmull
push
jecxz
pushf
mov
cs
jne
test
add
mull
decl
pop
ret
sbbb
mov
mov
or
pop
call
push
mov
cmp
leave
pop
add
fsubl
icebp
adc
push
cmp
inc
out
cwtl
movsb
aaa
sbb
mov
xor
incl
push
push
mov
xor
sub
cmp
mov
jl
mov
jmp
cmp
jl
or
sbb
popa
jp
adc
idivl
xor
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
inc
call
ret
cwtl
push
cltd
pop
idiv
or
push
repnz
in
pop
pop
cmp
xor
add
les
daa
adc
cmp
and
xchg
xor
push
xor
mov
cmpsl
pop
xchg
movsb
stos
push
test
jo
mov
mov
jo
xor
mov
cmp
shr
add
or
add
dec
inc
push
lock
stc
push
lock
hlt
incb
sub
sbb
mov
cmp
cld
inc
repnz
push
mov
dec
faddl
sub
mov
enter
test
mov
push
push
pop
and
sub
icebp
insl
dec
or
sar
enter
pop
cmp
in
dec
movsl
mov
daa
dec
xchg
rolb
jge
outsb
cmp
adc
and
or
or
das
inc
xchg
mov
and
fdivs
dec
add
inc
in
push
stos
xchg
mov
mov
push
cmp
jl
pop
stos
imul
and
pusha
and
femms
dec
repz
pop
call
or
mov
inc
enter
add
movsb
adc
rcll
push
push
lods
adc
adc
pop
mov
mov
cmp
fnsave
mov
and
daa
mov
push
pop
push
adc
cmp
push
fwait
cltd
lock
mov
clc
and
mov
xorb
mov
xor
sub
jae
sub
ror
int
js
enter
lret
dec
js
xor
jge
push
int3
sbb
sbb
xchg
xchg
lahf
call
add
and
inc
adc
sbb
mov
push
bound
xor
fnstcw
push
jae
adc
dec
imul
int
dec
cwtl
and
pop
ja
sbb
aam
shrb
mov
fs
lret
jo
and
inc
enter
loopne
test
fldenv
and
add
mov
iret
in
mov
mov
xchg
sbb
jo
icebp
jle
test
jns
ret
dec
jle
push
sub
sub
push
push
inc
aas
adc
dec
jb
and
and
xchg
pushf
inc
mov
leave
cwtl
dec
nop
pop
es
pushf
dec
mov
fdivrl
adc
lods
leave
jo
lods
jb
jb
pushf
xchg
mov
cltd
in
test
popa
and
ljmp
les
push
sub
push
xchg
outsl
ja
aaa
adc
orl
fadds
mov
mov
sbb
sub
mov
push
xor
outsl
rcrb
mov
jo
ret
inc
sti
xchg
dec
jb
fadds
push
rclb
push
pop
test
test
call
nop
fildl
push
bound
data16
mov
pop
mov
mov
int
inc
mov
or
add
push
pop
dec
jl
mov
or
adc
dec
mov
or
dec
stos
insl
sbb
dec
or
push
es
or
shld
cmp
stos
mov
pop
lock
movsl
nop
mov
jno
or
fldl
adc
inc
add
adc
jge
enter
fstpl
push
int3
aas
or
push
pop
rcrb
data16
rclb
pop
push
out
inc
imul
enter
inc
mov
aam
or
pop
insb
or
xchg
in
cmc
adc
fstps
jne
lret
fcoml
or
sbb
into
dec
fmull
popa
adc
je
mov
xchg
std
sbb
inc
sahf
nop
aam
daa
pushf
in
je
cmpb
and
mov
adc
xor
in
or
push
sbb
mov
sub
xchg
mov
xchg
stos
je
in
push
adc
dec
sbb
mov
fs
add
test
movsb
cmpsl
out
les
ja
lock
sub
add
call
jne
fnstsw
add
cmp
inc
movsl
mov
add
neg
sub
scas
fldcw
inc
ss
xchg
xchg
data16
jp
jecxz
mov
movsb
xchg
inc
das
xchg
pop
sbb
sub
icebp
jnp
mov
lds
add
add
dec
pushf
lahf
movsl
shrb
push
addb
loop
mov
dec
hlt
cld
cmpsl
dec
fninit
in
add
and
jmp
fwait
pop
fisubrs
hlt
loopne
dec
jbe
insb
or
mov
arpl
push
push
mov
stos
fcoms
subl
lcall
ret
nop
enter
in
adc
xchg
mov
ret
inc
cmp
mov
cmp
pop
adc
ficoms
mov
pop
addr16
xlat
add
call
cmpsb
sbb
loop
fbstp
jb
fsubrs
adc
ja
fcomps
push
xor
jle
aam
add
sti
movsb
add
adc
xchg
cmc
cmp
push
sub
mov
push
push
out
cmpsb
clc
xchg
sub
decl
js
ds
outsl
rcrl
dec
fistl
jb
push
lahf
int3
cmp
aam
or
pop
mov
cs
sbb
xchg
fdivr
or
or
or
jo
pop
pushl
rcll
sahf
adc
fimuls
mov
out
sar
into
or
add
lret
mov
setp
or
push
leave
push
jb
add
push
add
inc
xchg
or
mov
and
pop
rcrb
push
mov
adc
fidivl
cmp
xor
loopne
push
sbb
dec
repz
xor
push
call
es
add
sbb
jbe
cmp
mov
bound
push
fildl
xchg
mov
push
push
sbb
aam
je
cmpsl
loopne
xor
stos
push
das
or
xchg
jmp
and
rcrb
add
nop
mov
rcll
lea
xchg
mov
icebp
sbb
movsb
rcrl
pop
cmp
adc
subl
aad
dec
push
pop
inc
rorb
dec
cmp
lds
mov
negb
mov
setns
push
push
pushl
faddl
aaa
or
xor
int3
and
lea
xchg
call
ljmp
test
leave
inc
ret
popa
ljmp
pusha
xor
leave
mov
aas
sbb
mov
mov
add
xchg
inc
sub
out
je
or
mov
dec
xchg
sbb
lea
andl
cmp
frstor
sub
pop
cwtl
and
rol
push
adc
loopne
inc
cmp
js
jo
mov
popf
inc
add
test
mov
mov
pop
push
adc
lret
or
pop
jnp
aam
add
jmp
dec
test
mov
and
loopne
and
xor
mov
dec
in
xor
pushf
sbb
mulb
lock
sub
test
pop
pop
add
pop
fistl
outsb
push
mov
cmp
out
or
cmp
pop
mov
xlat
push
cmp
dec
cmp
pop
inc
cmp
xor
ljmp
in
es
sbb
mov
or
and
or
pop
jp
ss
mov
or
or
insl
mov
lret
ret
mov
dec
dec
push
pop
inc
push
fldenv
jmp
rclb
sbb
xchg
pop
roll
dec
jge
addb
out
cmpsb
cwtl
std
or
out
aaa
and
cli
cmp
pop
inc
lret
pop
jle
movsl
pusha
or
or
jmp
add
je
jl
cmp
inc
leave
lea
ret
fsubr
add
dec
sbb
push
add
lahf
jns
mov
add
in
ret
pop
repz
cmpsl
shl
pop
sub
andb
lods
add
add
mov
dec
and
js
add
cld
add
xchg
dec
sbb
dec
lods
rcrl
push
push
or
jle
loopne
xchg
push
jbe
outsb
push
mov
or
jne
add
push
add
outsb
pop
dec
push
or
inc
iret
xor
or
cltd
loopne
fisttpll
les
mov
loopne
mov
out
add
stc
jg
and
push
mov
call
loopne
gs
fidivs
adc
les
mov
inc
and
xorl
ja
push
sub
das
xchg
dec
fisttpl
loop
lahf
ret
js
add
inc
btl
adc
mov
cwtl
or
popa
cmp
aaa
push
jle
mov
add
lock
jno
sbb
dec
push
inc
or
dec
xchg
or
loop
es
jo
jnp
jnp
test
push
or
or
mov
sub
sti
aas
sbbb
in
or
shl
loope
mov
scas
push
mov
cwtl
inc
hlt
pop
xchg
cmp
pop
jl
sbb
call
adc
in
bound
cltd
icebp
aam
ror
xor
addr16
in
sub
ret
push
jns
mov
push
xor
fs
and
sub
sub
lret
sbb
xchg
out
or
pusha
loopne
lcall
dec
in
sbb
stc
sbb
mov
jmp
inc
push
or
dec
inc
lea
push
adc
adc
and
enter
inc
cmp
push
repnz
dec
mov
mov
adc
or
nop
xchg
in
mov
add
add
mov
sti
dec
or
rcrl
outsb
lret
xor
mov
cld
pop
sub
mov
add
in
adc
filds
es
jo
fimuls
push
test
or
adcl
push
in
mov
in
jp
add
inc
sub
mov
xlat
or
push
and
arpl
jbe
lret
cli
fimull
push
push
nop
ret
lods
mov
int
lret
adc
jae
fiadds
out
fiadds
add
push
cltd
lds
or
mov
adc
adc
add
mov
fistpll
add
cwtl
enter
cmp
adc
pushl
cmpl
jne
inc
cmp
jb
dec
es
stos
stos
push
dec
or
ljmp
push
inc
loop
sub
xor
jae
loopne
fcoml
jge
call
mov
pop
mov
add
jl
loopne
jmp
push
push
push
add
pop
push
mov
or
push
fpatan
dec
cli
push
faddl
sahf
pusha
pop
fsts
sbb
sub
cli
mov
adc
pop
pop
and
cmp
cmpsb
xor
lea
push
popl
enter
and
push
mov
je
dec
push
sarl
fildl
dec
cmp
les
out
js
xor
cmpsb
pop
push
punpckldq
add
js
mov
sbb
test
imul
xchg
sbb
xor
push
sbb
sbb
or
ret
js
mov
mov
movsb
fdivrs
dec
outsb
rcrb
sub
push
adc
pusha
test
mov
or
movsb
adc
jb
mov
hlt
pusha
or
mov
add
jne
jge
cmp
xchg
mov
inc
lret
cmp
push
xchg
mov
fisubs
inc
das
inc
sbb
dec
clc
mov
jnp
xor
jle
pusha
fsub
imul
push
test
add
xchg
inc
ja
enter
cmp
push
pop
adc
push
add
adc
or
jnp
adc
lcall
mov
jge
push
std
addb
dec
inc
jb
xor
jne
dec
lods
fstp
xchg
adc
imulb
mov
out
mov
xchg
pusha
or
add
sti
sbbb
xor
dec
pusha
jne
pusha
pop
sbb
sbb
sub
add
add
mov
or
mov
loopne
sbb
or
shll
pop
cmp
aaa
mov
inc
fildl
bound
dec
mov
cs
pop
lods
xchg
mov
cld
hlt
adc
sub
add
jecxz
lds
sbb
xchg
add
fisubrl
push
mov
mov
sub
test
xchg
ret
int
test
dec
pop
mov
into
fimull
jne
push
pop
negb
pop
out
lret
or
movsl
jg
or
adcb
or
ss
ljmp
add
sbb
out
push
lock
test
cmc
orl
sbb
flds
push
xor
mov
andl
inc
push
dec
jmp
push
loopne
push
inc
xor
cmpsl
into
fidivrs
fisttps
dec
arpl
add
enter
add
mov
add
fs
imul
test
cmpsb
loop
mov
push
pop
out
add
out
ja
in
pop
cmpl
fucomp
das
inc
and
dec
pop
cmpl
and
xchg
jp
pop
or
or
testb
push
and
lods
lods
mov
inc
jl
xor
xorl
mov
push
addl
sbb
jl
pop
fs
ljmp
adc
cmp
nop
ja
into
and
or
xor
mov
and
dec
cltd
inc
mov
cmp
inc
push
scas
pop
repnz
add
inc
and
dec
lds
xchg
ds
xor
sahf
addr16
fnstcw
insb
adc
sub
mov
add
or
pop
xor
mov
lods
ret
aaa
cmc
psrlw
xor
out
jecxz
push
jmp
ret
xchg
cmp
std
sub
jo
cmp
or
pop
ss
add
xchg
inc
mov
add
loope
cmp
test
adc
cmp
or
sbb
andb
dec
cmp
scas
mov
scas
push
inc
sbb
rcl
xchg
ljmp
and
add
or
cmp
ficoml
pop
ss
mov
push
cmp
sub
or
fdivl
xor
pop
mov
push
js
je
clc
cmpsb
movsl
jo
xor
cli
mov
and
mov
js
scas
in
dec
mov
adc
mov
sub
push
shll
add
inc
in
in
push
movsl
adc
and
loope
push
in
xor
and
adc
inc
popa
popa
les
and
mov
pop
dec
mov
sbb
dec
xlat
cld
or
push
loopne
mov
lds
iret
cmpsl
and
sbb
scas
movsl
ss
shlb
imul
idivl
cmpsl
inc
or
add
inc
nop
dec
dec
ljmp
shll
or
icebp
in
xchg
sub
and
mov
push
imul
in
dec
aad
jmp
lds
ret
push
sub
arpl
lods
aaa
mull
leave
mov
rcll
fnstenv
or
sub
mov
sbb
repz
sbb
xchg
add
in
lods
sub
push
mov
stos
sbb
test
pop
inc
mov
in
mov
inc
xchg
je
push
adc
sbbl
mov
fwait
or
add
xor
mov
loopne
jmp
mov
out
mov
adc
push
xchg
sub
nop
and
xor
leave
push
mov
pop
inc
and
addb
loope
pop
in
push
add
pusha
mov
cmpb
sbb
lods
addl
andl
push
add
inc
jbe
int
dec
lods
add
sbb
mov
xchg
cs
lea
add
cmp
out
jmp
in
add
fcompl
or
jnp
or
add
fiaddl
sbb
or
test
add
add
jo
jno
jo
mov
cmpsl
dec
loopne
aam
mov
push
adc
push
push
sbbl
adc
or
adc
in
dec
repnz
xchg
movups
mov
mov
sahf
add
hlt
mov
stos
pop
xchg
xor
add
popf
mov
mov
cmp
adc
call
cmc
jbe
adc
leave
and
cld
pop
mov
jo
inc
fidivl
das
hlt
mov
imul
xor
scas
jne
adc
insb
notb
pusha
add
int3
mov
dec
popa
repnz
pusha
imul
lds
add
xor
sbb
sub
and
ss
fcomip
push
jle
or
inc
cmp
add
fstpl
push
ret
sbb
fsts
andb
or
mov
push
or
clc
cmpsb
and
pop
or
cmc
ds
mov
add
and
mov
hlt
inc
jmp
cmp
dec
imul
pop
lret
data16
clc
cmp
dec
inc
lock
bnd
or
std
cmp
je
imul
clc
out
adc
mov
in
adc
cmp
push
adc
push
decb
push
add
mov
dec
xor
dec
adc
lock
dec
pop
shufps
je
add
movsl
loope
jg
push
inc
lock
sub
fldl
or
cld
jmp
adc
mov
sub
xor
pop
or
add
adc
cmp
mov
test
loope
cmp
push
lea
jmp
bound
jecxz
sbb
jle
inc
cmp
jb
jmp
xchg
cmp
test
out
fildl
movsl
mov
inc
add
dec
dec
pop
or
push
or
jl
jne
mov
mov
js
push
jl
sbb
add
or
xchg
imul
add
into
xor
pop
dec
or
xor
orb
aaa
adc
mov
ds
int3
add
push
dec
sbb
push
mov
add
rcrb
adc
jo
lock
adc
xor
iret
in
pop
jns
dec
test
xchg
insb
jae
dec
sbb
es
add
pop
xchg
sub
andl
or
jl
js
insl
rcrl
mov
jo
inc
fmuls
fs
and
mov
adc
pop
das
push
decb
fnstcw
pop
inc
std
adc
or
shl
cmp
shlb
lods
enter
sbb
inc
dec
add
bound
orb
ret
xor
pop
sarb
or
xor
push
mov
dec
xlat
pop
adc
int3
and
sbb
lods
add
mov
notl
hlt
dec
pop
sbb
jae
adcl
inc
pop
dec
push
add
inc
popa
xlat
sub
ja
cmpsb
mov
fsubs
sbbb
xchg
add
shr
aas
jmp
jbe
test
es
lea
pop
dec
sahf
xchg
xchg
jmp
test
mov
sarb
mov
into
mov
xchg
outsl
push
or
icebp
adc
add
inc
jecxz
xor
dec
fdivs
push
sub
inc
je
pop
jl
cmp
jb
add
in
sbb
cmp
push
pop
sub
lcall
movb
mov
mov
mov
jnp
sbb
and
les
add
inc
pushl
stos
inc
jmp
pop
xchg
adc
clts
shll
sbb
or
rolb
cltd
jmp
mov
dec
mov
cmp
push
mov
or
es
add
rcll
jne
or
sti
add
sub
adc
xchg
mov
jl
jae
inc
jmp
aam
or
iret
les
or
aad
inc
adc
jl
or
mov
fucom
insl
or
leave
and
testl
or
mov
or
outsl
sbb
popf
mov
sbb
and
addl
xor
adc
aas
andl
dec
std
jns
sub
loopne
sbb
pop
test
adc
je
dec
inc
dec
or
loopne
mov
push
xor
or
sub
xchg
and
gs
popf
cwtl
nop
out
loopne
and
rcrl
or
inc
jmp
pop
mov
pop
je
paddsb
mov
ljmp
sbb
xor
fwait
or
add
jmp
in
xor
mov
mov
inc
cs
rcll
inc
cmp
js
and
and
enter
push
fsts
push
ret
sbb
mov
xor
mov
push
xor
out
or
int3
out
pushf
dec
mov
adc
aam
mov
popf
or
inc
add
aas
adc
stos
dec
push
and
cwtl
cmp
addb
xor
mov
or
das
call
dec
sahf
stos
sub
outsb
ror
push
xor
and
shlb
add
ret
and
adc
mov
inc
rcll
push
outsl
out
pop
xorb
in
divps
dec
test
setge
lahf
je
or
mov
insl
add
xor
sbb
jb
aam
pop
mov
sub
or
xchg
loopne
shl
popf
call
jne
hlt
push
subl
lds
add
and
mov
lcall
and
xchg
ss
pop
fcomps
sbb
mov
movsb
rcrb
inc
mov
xor
dec
sub
mov
push
jge
into
add
mov
lea
push
lahf
xor
and
mov
out
push
or
in
dec
movsl
push
test
iret
ss
fwait
call
loopne
mov
imul
repz
loope
sub
dec
add
mov
push
stos
xchg
push
cmc
dec
push
lock
adc
out
aas
mov
pop
adc
scas
outsl
mov
xor
loope
mov
jp
sbb
les
andl
notl
pop
lods
mov
or
or
push
fnstenv
add
mov
ret
push
lea
and
push
mov
adc
pop
jmp
pop
jp
or
or
mov
sbb
xorl
mov
xchg
xchg
incl
enter
iret
jbe
mov
sbb
pop
inc
jae
xor
into
iret
imul
mov
add
pop
ret
jmp
mov
add
lret
insl
pop
rorl
fdivr
cmp
lahf
jne
sahf
jnp
add
jne
push
xchg
push
push
decl
dec
fbstp
mov
push
cmp
mov
mov
push
and
jnp
jle
scas
jmp
scas
ss
dec
ffreep
cmp
jb
insl
lds
movsb
sbb
pop
shrl
push
cmp
mov
or
push
pop
aad
dec
or
in
add
mov
dec
outsb
cmpsl
and
adc
add
fsub
sub
pop
mov
and
incb
lea
add
dec
shll
or
frstor
xor
mov
enter
inc
mov
mov
enter
pop
orb
push
xlat
sub
push
and
mov
mov
adc
sti
or
or
inc
lahf
mov
mov
push
mov
popa
inc
aam
pop
movsl
xorb
mov
loope
flds
pusha
jo
xor
lret
sbbl
clc
xor
sub
add
jnp
jmp
leave
dec
js
sbb
scas
mov
inc
xchg
add
popl
clc
clc
and
repz
pusha
adc
mov
mov
and
adc
and
jne
mov
mov
mov
adcl
add
sub
mov
and
cs
imul
fdivl
nop
loope
cltd
jo
add
mov
push
xor
movb
and
jb
sbb
test
js
add
rclb
or
inc
jmp
xor
jae
test
xchg
testl
dec
test
add
cmp
pop
pop
stc
mov
mov
jno
dec
subb
pop
ret
loope
xchg
or
jb
movsb
jge
and
aam
xor
push
jae
add
xchg
repnz
add
and
inc
pusha
or
xchg
aam
imul
push
ss
mov
dec
mov
pusha
mov
xor
xorb
or
ss
aas
jg
aas
pop
inc
or
testl
pop
push
xor
addr16
add
jl
jmp
wbinvd
lahf
inc
lea
sbbl
push
popf
jne
mov
gs
add
lods
mov
pop
pop
sbb
fbld
xchg
dec
jg
adc
or
movsl
loopne
cltd
add
sub
mov
or
push
or
subl
pushf
push
add
imul
jbe
dec
sbb
addl
inc
fnstsw
mov
jmp
inc
add
and
in
mov
adc
aas
dec
adcl
mov
mov
ret
ret
mov
and
hlt
inc
push
pop
add
sbb
and
sbb
inc
push
roll
popf
dec
sub
xor
test
pop
in
mov
pusha
or
sub
jge
sbb
jo
add
loop
adc
cmp
push
arpl
add
ja
fcomps
rcrb
lret
and
dec
and
mov
aam
nop
xchg
inc
mov
inc
push
mov
xchg
sbb
add
cmpsl
loope
jae
pop
mov
mov
sub
adc
push
or
bound
adc
rcl
xchg
xor
add
std
sbb
xchg
sub
mov
sub
insl
adc
push
jo
aam
mov
test
inc
fidivs
jmp
sbb
and
sbb
sarl
push
add
dec
or
das
jmp
xchg
out
mov
call
mov
nop
clc
xor
inc
sub
jo
jle
add
mov
mov
out
sbb
lods
dec
mov
xlat
subl
mov
or
jnp
out
push
fdivrp
xchg
push
adc
pop
clc
jne
loopne
xchg
iret
shlb
cmpl
jne
fldl
sub
xor
into
xchg
stos
jp
test
mov
push
shrb
jne
inc
roll
test
popa
pop
cs
mov
imul
pop
xchg
repnz
fists
adc
pop
out
pushf
xorb
mov
call
push
mov
cmp
dec
lcall
push
cmp
js
cs
and
cld
rolb
push
scas
sarb
enter
test
push
mov
add
push
imul
sub
test
ret
push
or
call
fcmovb
mov
pop
push
pop
nop
sub
test
cmp
jae
push
or
aam
ljmp
add
shl
add
xor
stc
adc
add
aam
jnp
push
out
insl
dec
test
or
lods
pop
or
and
sqrtps
lea
popa
jne
mov
hlt
sub
adc
outsl
xchg
push
inc
ret
cmp
push
add
pop
mov
lock
sbb
add
fadd
int3
lret
jae
mov
lret
or
pop
pop
shll
push
push
jp
or
pop
mov
inc
jo
cmpsb
aas
push
mov
call
pushf
push
jge
aam
fwait
push
cmp
jbe
jl
mov
and
loopne
in
fisubs
lret
sub
mov
vmread
xchg
ljmp
fsub
js
fidivrs
or
insl
shl
out
popa
shl
aad
fmul
pop
lret
xor
dec
add
cld
aam
pop
fwait
xorl
mov
adc
adc
fistpl
stos
cmp
out
cmp
push
cmpsl
fisttpll
mov
or
cmp
sbb
dec
jbe
sbb
push
push
or
out
int3
std
mov
lret
sub
or
pushf
dec
les
imul
pop
or
mov
aam
jge
sbb
fsubl
daa
in
add
jns
nop
hlt
add
push
enter
in
push
scas
inc
cmp
rorb
loope
mov
loop
hlt
or
test
cmpb
insl
adc
mov
cvtdq2ps
sbb
int3
std
inc
cmp
repnz
or
mov
jb
add
loopne
in
pop
mov
sti
rep
movsw
push
loope
add
cld
movsb
mov
push
and
or
mov
fnstsw
std
shr
mov
inc
mov
adc
movb
pop
push
lea
cmpb
jge
and
in
push
and
xchg
adc
cmpsb
cmp
mov
xor
test
inc
lcall
and
dec
pop
repnz
cld
je
push
push
scas
lret
and
sbb
movsb
xor
mov
aam
jne
mov
sub
dec
mov
or
movsl
cmpsl
xor
push
xchg
jae
jge
add
aaa
es
add
adc
je
sub
cli
jge
mov
mov
push
cmpsl
ret
push
cmp
xlat
sbb
icebp
movsl
sub
push
insl
push
cmpsl
xor
mov
xchg
sbb
push
rcl
les
loopne
loop
mov
insl
rcr
ret
adc
mov
or
inc
sub
push
rorb
sbb
mov
pop
mov
rol
and
and
dec
jecxz
out
sbb
ficoml
xchg
push
add
add
daa
daa
daa
add
daa
or
jmp
or
jmp
or
fwait
fwait
fwait
fwait
jno
jmp
push
jmp
por
jmp
fwait
fwait
fwait
pop
adc
pop
adc
push
adc
dec
adc
fwait
fwait
fwait
fwait
dec
adc
aas
pop
jmp
sbb
fwait
fwait
fwait
fwait
xor
jmp
sbb
es
fwait
fwait
fwait
fwait
and
pop
pop
jmp
and
xchg
jmp
and
add
adc
out
outsb
mov
jne
and
fists
jg
sbb
adc
sub
jmp
jns
xchg
fabs
jmp
icebp
stc
add
or
sbb
repz
and
sub
repz
cmp
inc
dec
iret
repz
push
push
pop
pop
imul
js
xor
iret
xrelease
std
mov
add
add
push
pop
or
and
or
or
push
movups
adc
adc
inc
test
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
and
mov
pop
pop
testl
sbbb
icebp
mov
mov
stos
mov
push
push
bound
mov
pop
mov
in
fisubs
mov
mov
xchg
pop
dec
lock
push
sub
add
sti
aaa
inc
mov
mov
inc
jge
nop
in
je
cmpsb
push
mov
sub
pop
leave
aaa
dec
xchg
push
dec
xchg
clc
xor
push
and
push
adc
xchg
and
lods
push
movsb
add
add
pop
stc
adc
shlb
xchg
add
cmp
dec
jmp
enter
aam
pop
and
lock
repnz
push
pop
mov
push
int3
inc
mov
std
mov
add
adc
add
jp
pop
jmp
in
add
push
inc
sbb
jno
cmp
add
sub
or
sub
push
sarl
and
adc
push
dec
repnz
mov
out
adc
mov
add
mov
out
cmpsb
lock
sbb
adc
mov
adc
cmp
push
xchg
sub
add
xchg
call
cli
popa
fistl
loopne
mov
insb
fistpll
cmp
or
ficompl
in
or
sub
xor
ss
icebp
nop
pusha
jle
mov
xlat
sbbl
push
sub
mov
test
das
jmp
push
push
pop
loopne
mov
xor
pop
mull
call
adc
xchg
pop
pushf
adc
pop
scas
add
sbb
mov
jne
imul
sti
xchg
pusha
push
mov
add
mov
jb
scas
dec
mov
pop
push
sub
mov
adc
sub
mov
xor
inc
decl
test
inc
orb
dec
sbb
imul
jo
xchg
mov
inc
les
repz
lock
jo
imul
sub
clc
adc
pop
sub
sarl
cmp
mov
or
or
mov
jecxz
sbb
adc
adc
fwait
outsb
je
mov
pop
imul
lahf
enter
adc
sub
out
test
adc
add
rcrl
jle
or
sbb
cmp
push
popl
add
je
push
mov
add
mov
mov
push
das
push
mov
mov
insb
cwtl
inc
push
clc
jne
and
or
popf
es
incb
add
xor
loop
add
mov
cmp
sub
mov
push
adc
sub
mov
jnp
stos
or
in
adc
lock
jns
mov
out
cmpsb
aas
orl
jp
les
cwtl
push
add
lcall
arpl
jl
test
aas
mov
adc
and
int3
xor
sarl
sbb
in
loopne
lods
dec
pop
ror
enter
mov
movsb
outsb
or
pop
pop
add
mov
xor
mov
icebp
andl
in
movsb
adc
dec
fmull
cmp
jbe
dec
or
push
movsl
and
or
add
cmp
jne
outsb
fstpl
insb
dec
add
push
xor
nop
ror
cmp
mov
xchg
daa
adc
push
repnz
testb
xchg
push
inc
mov
xor
sbb
loop
je
nop
push
loopne
sub
loopne
cmp
orb
pop
xor
mov
jbe
psadbw
lock
sahf
add
loopne
cmpsb
fs
or
loopne
imul
xchg
out
enter
pop
pop
enter
or
xchg
xchg
push
xchg
div
add
sti
cltd
nop
sub
negl
ror
test
sub
faddl
movb
lods
sub
test
les
js
add
pop
push
mov
push
or
pop
push
orb
push
mov
pop
push
sub
je
popa
mov
movsb
shll
repz
stos
pushl
ljmp
ror
flds
inc
lods
int3
adc
pop
dec
icebp
lret
adc
push
ljmp
imul
inc
imul
andb
cmp
mov
xchg
ret
inc
insl
popa
xchg
xor
ja
in
adc
push
cmp
or
sbb
ss
push
mov
mov
sub
daa
jo
sbb
sub
pop
repnz
movsl
faddl
xchg
stos
push
sub
shl
adc
test
cli
pop
addl
xor
jno
shrl
or
test
testl
pusha
and
pop
jg
dec
popf
jge
frstor
fsubs
rcl
xchg
sub
jmp
cmp
push
xchg
pop
push
testb
cmp
inc
add
fs
and
hlt
push
adcb
into
bound
xor
dec
cld
jl
pop
popf
fidivl
or
inc
add
jae
js
sub
add
dec
imulb
push
movsb
push
pop
fbstp
test
mov
cld
jmp
sahf
xor
mov
push
jne
insl
sbb
inc
mov
sbb
call
inc
rolb
mov
ljmp
loope
push
mov
add
add
repz
jo
sub
inc
add
push
fs
jle
loop
pop
and
or
jne
sbb
push
inc
std
jmp
cmp
je
inc
xchg
push
ficomps
adc
fisubl
push
fadds
push
loopne
mov
dec
dec
aad
mov
and
jmp
xchg
in
and
push
in
or
sbb
sbb
lock
push
push
push
dec
or
test
aaa
in
mov
out
shlb
push
inc
sub
or
cmpl
cltd
jne
push
sbb
cmp
mov
mov
push
int
xchg
jp
ret
sub
sbb
pop
pminsw
xor
jl
xorl
inc
pusha
inc
fcomps
loopne
xchg
and
pop
or
and
test
and
and
lahf
inc
xor
sahf
and
cwtl
fldl
mov
pop
push
or
inc
mov
add
orb
ljmp
xor
push
inc
xchg
sbb
adc
jmp
addl
add
inc
lods
std
pusha
or
pop
mov
and
pcmpgtb
cmp
sbb
or
and
outsl
cmp
and
xor
sub
in
cs
enter
adc
pop
mov
ret
dec
dec
shlb
pop
loope
add
repz
dec
out
xor
movb
cmp
inc
or
imul
sub
xor
cmp
jle
mov
add
pop
mov
js
xor
jae
sub
dec
inc
aad
push
jp
insl
sbb
outsb
mov
add
adc
lcall
dec
ljmp
sub
movsbl
sub
xchg
sub
mov
pop
icebp
jbe
addl
addr16
mov
xchg
mov
xchg
adc
xchg
int
aaa
pop
mov
cmpb
ds
xor
clc
inc
add
movsb
mov
pop
jb
aad
mov
nop
and
push
xchg
je
lods
loopne
movsb
aas
test
inc
jbe
je
mov
jg
pop
xchg
nop
xchg
mov
je
repnz
shlb
lahf
enter
xchg
int3
jg
out
fucomip
es
fcomp
pop
loopne
xchg
push
es
in
lock
dec
hlt
lcall
movsb
push
and
fnstenv
and
loop
sub
pop
setge
jge
add
xchg
push
add
lea
push
mov
test
push
xchg
int3
incb
aaa
sub
lret
jl
and
cmp
or
incl
cmp
jl
sub
cwtl
cmp
scas
lea
dec
and
loopne
je
dec
sub
stc
dec
jnp
inc
push
or
sbbl
fcmovne
sti
or
test
cmpsb
repnz
loopne
cmp
sub
inc
and
shlb
xchg
cmpsl
lret
fisubs
int3
jmp
out
push
jbe
or
pop
aaa
setne
mov
mov
jle
mov
mov
je
sbb
jne
jge
and
ficoml
push
jmp
rcrl
xchg
nop
sbb
push
not
inc
int3
daa
inc
lock
lcall
sub
pop
fcomi
xchg
insb
je
js
sbb
mov
sbb
push
push
fwait
mov
imul
sub
imul
call
adc
pop
gs
sbb
hlt
push
pop
cmp
inc
cli
sub
rorb
repnz
clc
xor
lea
add
paddw
pop
sbb
mov
inc
pop
lods
inc
cmp
dec
adc
lods
jle
adc
call
sbb
sbb
outsl
jne
add
pop
pop
sub
sahf
xchg
push
push
adc
pop
cmp
decl
xor
mov
cmp
je
cmp
jne
push
inc
pop
inc
push
pusha
scas
addb
push
push
imul
push
push
fs
adc
cmp
cmp
and
test
mov
adc
or
dec
sahf
arpl
add
sub
jle
jo
dec
rclb
jle
cmpl
test
loope
std
jne,pt
pop
add
idivb
hlt
adc
mov
push
mov
out
dec
call
xchg
lret
sub
gs
sarb
test
loope
push
dec
lods
or
add
xlat
aam
in
jmp
mov
and
xor
xchg
xlat
lock
sub
inc
add
pop
cmp
or
sub
adc
out
jecxz
in
jge
imul
inc
jecxz
xor
stc
call
clc
mov
xor
xor
mov
lcall
movsl
pop
or
dec
aas
jne
push
inc
repz
fbstp
add
clc
adc
scas
inc
in
add
sbb
sub
mov
pusha
xlat
test
mov
sbb
mov
mov
lret
dec
push
jmp
xchg
ss
loopne
xchg
sbb
cwtl
push
sub
ss
push
push
imul
ret
jo
push
mov
inc
push
xor
into
push
into
add
sub
lods
sub
add
pop
or
push
sub
add
jmp
or
add
sbb
int
or
jmp
inc
in
push
push
mov
outsl
outsl
push
push
cmp
jecxz
adc
popa
dec
push
mov
inc
pop
test
or
add
or
movb
ret
rcll
aad
mov
xchg
int
inc
subl
jge
pop
imul
pop
mov
rcrl
cwtl
bound
addb
popa
inc
dec
jecxz
sbb
mov
add
fwait
enter
les
ja
lahf
xchg
mov
fldl
outsl
mov
sbb
and
and
mov
notw
and
xchg
hlt
dec
out
adc
cli
rolb
int3
push
mov
mov
add
pop
in
and
or
iret
xchg
xchg
movsb
xor
rol
stc
sub
push
test
sub
mov
sbb
adc
test
fsubl
out
pop
sbbb
pop
out
mov
inc
xlat
sub
push
dec
jbe
mov
push
inc
sub
mov
sub
push
rolb
imul
push
cs
jmp
sub
lret
cli
sub
mov
adc
sbb
mov
rorb
loopne
iret
call
insl
je
add
add
pop
ljmp
add
cmp
testb
jno
shlb
sub
add
popa
sbb
xchg
icebp
loope
sbb
jae
cmp
push
adc
pop
test
rcr
inc
cmpsb
jae
or
jne
aad
int
and
push
inc
or
ret
in
cmp
jae
daa
push
inc
pop
mov
or
jae
imul
rcll
stos
xchg
icebp
subl
xchg
jo
mov
or
jp
mov
fdivl
xchg
test
sub
inc
adc
push
pop
cmc
in
pop
je
add
aad
rolb
insb
jg
push
or
or
or
and
popa
mov
pop
sub
or
lock
dec
adc
pop
mov
sbb
mov
addl
adc
sub
testl
cs
push
pop
js
and
in
cmp
pop
lea
test
fcmovb
sub
pop
and
mov
push
push
sbb
adc
fwait
jo
jbe
mov
add
mov
xor
push
jge
push
mov
push
mov
sub
push
adc
adcb
out
xchg
imul
ds
mov
test
cltd
xor
mov
decl
lcall
and
adc
fprem
xor
loopne
add
insb
pop
fsubr
pop
faddp
push
insb
xchg
and
adc
push
lock
jl
sub
lods
add
inc
or
inc
jmp
mov
push
xchg
xchg
lock
movsl
and
adc
lock
push
xchg
mov
cmp
and
or
inc
test
add
cmc
inc
xchg
adc
popa
xor
in
test
mov
jge
cmp
add
sbb
mov
fs
xor
fwait
mov
jmp
scas
sub
lcall
add
jmpw
imul
pop
cmp
arpl
imul
mov
ds
cmp
push
fnsave
andl
fdivs
push
fwait
or
add
popf
push
outsb
test
lock
fldl
cmp
jcxz
rcll
or
jp
xchg
mov
push
or
pop
xor
or
lahf
out
sahf
mov
fimuls
nop
clc
imul
scas
xor
or
shr
enter
sahf
lahf
dec
inc
sub
mov
jno
add
out
movsb
add
hlt
push
sub
cltd
pop
lcall
push
shll
hlt
jne
jb
mov
xchg
mov
push
jne
or
cmpsb
push
jmp
es
xor
jle
rolb
xor
jno
loopne
fst
jnp
adc
xor
pusha
dec
fimull
cmp
addl
jmp
clc
dec
insl
push
and
xchg
push
or
mov
push
sar
or
insl
adc
mov
dec
or
lods
int3
cwtl
daa
add
jmp
out
sub
shl
and
or
inc
fidivrl
mov
push
cmp
sub
adc
pop
pop
xchg
add
mov
adc
test
pop
lods
popa
adc
arpl
sub
push
fisubrs
sub
add
jle
xorb
pop
cmp
add
das
mov
jbe
add
popa
xchg
push
jne
xchg
jmp
push
cmp
sub
add
sbb
scas
pop
xlat
xchg
mov
je
and
pop
xchg
out
lcall
add
push
lock
xchg
cwtl
addb
adcl
loope
pop
mov
mov
dec
ss
add
sbb
mov
popf
inc
push
mulb
mov
cmpsl
sbb
dec
push
stos
mov
cs
push
sti
or
mov
pop
xor
push
pop
jnp
lock
mov
jmp
mov
cld
test
int
inc
aad
mov
or
lock
add
sub
jo
scas
es
adc
or
or
adc
stos
adc
and
push
loopne
or
popa
fdivl
clc
pop
adc
clc
dec
pop
cmp
popa
imul
inc
pop
push
es
mov
shll
pop
adc
adc
loope
jmp
dec
dec
add
dec
lods
adc
enter
cmpsl
cmp
in
aaa
push
inc
sub
imul
ret
mov
lret
xchg
adc
cmp
cmp
aam
push
popa
sub
loopne
je
lret
fidivl
sbb
push
jmp
cmp
fsubl
inc
cmpl
push
inc
cmp
movsb
jbe
loopne
lret
dec
repnz
imul
xor
or
movsb
sbb
jne
aam
add
fadds
or
add
and
loope
push
popa
cmp
add
daa
add
movl
inc
arpl
out
sub
cmp
jb
cmp
jnp
in
jle
xorb
popa
pop
mov
push
dec
pop
out
imul
inc
andl
adc
dec
inc
add
xor
in
jns
aam
jno
xchg
push
push
push
dec
fldl
dec
xchg
or
addr16
mov
mov
lods
rorl
lret
xchg
mov
or
or
test
pop
push
sub
add
or
cmp
roll
sbb
ficoml
push
aam
mov
add
mov
les
pop
sbb
call
popf
sub
or
jns
dec
inc
scas
cmpsb
pop
xchg
dec
test
push
inc
jb
push
clc
cld
and
fwait
or
adc
push
enter
sbb
decb
xor
jbe
xchg
and
enter
aas
rcrb
add
push
xor
subb
imul
clc
call
adc
ror
add
in
sub
push
lods
jne
in
lock
fcomps
sbb
sete
addl
loope
add
jl
dec
rclb
xor
mov
xchg
roll
ucomiss
clc
jecxz
lods
mov
sub
jno
movsb
sub
mov
jb
and
outsl
inc
jbe
and
test
arpl
and
adc
push
ss
clc
or
inc
outsb
test
xchg
xor
dec
fsubrs
ljmp
test
movsb
xlat
xchg
les
add
shl
mov
push
sti
add
sbb
sub
xchg
adc
xor
adc
aad
sub
or
and
and
lret
xor
bound
dec
movsl
repnz
adc
mov
xchg
and
cmp
ret
add
rcr
call
test
fistps
fldt
mov
add
cmp
mov
xor
or
add
out
mov
jbe
mov
sub
pusha
mov
mov
sub
or
mov
loopne
jmp
je
es
xor
lret
mov
dec
dec
insb
subb
fsubl
inc
sub
or
sbb
mov
jl
jmp
push
in
mov
add
lock
test
xchg
sub
inc
xchg
push
sbb
dec
push
add
inc
cmp
sub
rdpmc
icebp
push
push
je
add
push
movl
dec
inc
xchg
jae
ret
cmp
mov
push
inc
sbb
jbe
mov
in
addb
mov
pop
and
lock
sub
jp
mov
test
or
mov
sub
addl
repnz
movsl
inc
mov
and
and
insb
testb
xor
ja
nop
add
add
mov
lahf
push
push
cmp
add
or
or
inc
bound
dec
dec
ret
sahf
add
pop
add
push
jno
push
dec
pusha
leave
add
nop
jae
push
les
bound
rorl
xchg
in
push
lods
ljmp
test
sub
mov
dec
je
or
dec
shll
incl
xchg
mov
lods
jl
mov
push
mov
jb
inc
nop
inc
mov
data16
test
enter
movsl
and
hlt
xor
daa
mov
add
movsl
push
add
adc
adc
or
and
repnz
mov
jle
cmpsl
xchg
mov
mov
inc
in
inc
add
loopne
and
movb
push
std
and
in
adc
jge
testb
dec
xor
imul
xchg
cmp
push
je
adc
push
movsl
in
test
push
outsb
mov
inc
popf
adc
mov
int
idiv
add
les
push
adc
sarb
mov
cmp
mov
mov
pusha
dec
mov
mov
add
es
mov
shr
or
lret
adc
add
addr16
imul
and
or
inc
mov
push
and
push
mov
inc
fisubrl
adc
jmp
or
call
jae
imul
mov
leave
clc
test
sti
cmpl
xchg
mov
fisubrs
adc
lea
mov
mov
jecxz
aaa
mov
adc
inc
or
sub
push
clc
out
in
or
es
add
or
or
and
sbb
pop
push
and
and
xchg
and
je
xor
outsb
adc
dec
aaa
pusha
push
and
aam
xor
add
jo
lea
aam
ret
push
add
or
add
push
add
and
xchg
lock
test
inc
fs
push
xor
xchg
testb
or
dec
or
cwtl
mov
add
test
pop
sbb
jl
icebp
xchg
xor
fstl
inc
inc
xor
pop
push
lods
pop
add
push
out
xor
add
adc
sub
push
cld
pop
in
jl
in
adc
mov
push
test
lods
adc
push
inc
push
or
pusha
pop
adcb
rolb
or
lret
jb
imul
mov
xchg
repnz
sub
lahf
pop
rcrl
ror
jne
mov
mov
push
or
mov
push
and
dec
out
jne
cmpsl
dec
inc
cmpsl
push
bnd
movsl
dec
testl
push
adc
pusha
mov
xchg
das
aad
in
aam
daa
and
fidivl
add
call
sub
inc
adc
adcb
addb
je
inc
movsl
pop
and
inc
pop
cmpl
loopne
int3
je
test
push
mov
sub
cli
sub
cwtl
ss
pop
aam
mov
pop
rcr
cld
adc
cmp
rclb
or
cmp
outsb
or
fs
push
inc
in
and
or
xchg
sub
or
sub
jl
sbb
xorl
inc
cmpsl
sbb
arpl
pop
test
clc
jne
push
test
addr16
xchg
mov
call
movzbl
lea
pop
mov
sbb
adc
xor
and
cld
cmp
fs
and
push
jl
pushf
in
or
test
sub
shrl
sub
leave
into
push
lock
cmp
stos
add
movsl
adcl
jp
cmp
inc
ljmp
mov
pop
and
imul
push
aas
mov
dec
jne
in
outsb
jbe
push
adc
adc
cmp
lret
stc
loope
and
bound
das
dec
jb
pushf
scas
and
lcall
mov
xor
mov
dec
insl
movsb
imul
xlat
sub
hlt
shlb
cmp
cmp
xor
clc
lcall
or
and
xchg
jmp
sbb
xchg
mov
jbe
sti
add
mov
clc
or
mov
mov
scas
push
test
stc
movsl
mov
call
pop
xchg
sar
imul
jbe
lods
in
mov
pop
mov
cltd
or
ss
push
rcl
inc
push
xchg
es
mov
arpl
sub
imul
rclb
inc
add
xor
pop
xchg
jmp
and
mov
dec
std
pop
aaa
mov
mov
add
movsb
in
in
arpl
adc
lea
mov
lods
add
pop
push
movb
add
xor
push
or
movsb
mov
lret
pop
push
xchg
outsl
xchg
dec
inc
loopne
cmp
sbb
sub
xor
jnp
mov
jle
push
mov
fcmove
cwtl
sysret
cld
test
daa
adc
loopne
dec
das
and
pop
shl
adc
jo
and
pusha
or
lcall
in
je
push
ja
inc
js
mov
rolb
jb
lcall
out
fnstenv
or
add
sarl
add
jl
test
mov
jmp
cmp
xor
clc
inc
jl
movsl
mov
jne
pop
or
imul
sbb
or
ljmp
or
lret
inc
mov
xchg
inc
xor
push
sahf
xchg
std
jle
lea
pop
jg
adc
xor
sub
xchg
sbb
sbbb
lret
aam
xor
enter
pop
cld
fsubs
adc
pop
mov
xchg
dec
inc
mov
int3
out
loopne
add
sbb
jb
add
mov
cmp
xchg
arpl
mov
movsb
mov
push
in
shl
add
pop
jmp
push
sbb
in
lret
xlat
sbb
add
or
mov
xorl
pop
or
sbb
add
xchg
loope
cwtl
ljmp
push
int3
and
call
in
or
xor
jp
cmp
jno
rclb
mov
mov
inc
shl
pop
arpl
cmp
pop
test
add
fadds
xor
lea
in
cmpsb
sbb
lcall
cltd
jnp
xchg
test
or
add
sub
scas
notb
lock
inc
or
outsl
pop
and
push
push
call
sarl
loopne
push
sub
in
push
lahf
ss
inc
sub
jns
fcompl
in
or
pop
inc
adc
add
mov
divl
mov
mov
dec
xor
push
jns
lret
and
in
push
push
sub
das
push
adc
xchg
inc
cwtl
pop
pop
push
or
test
xchg
les
jne
repnz
lods
pop
xchg
mov
push
ja
xor
int3
adc
sbb
aaa
addr16
dec
ret
jge
inc
inc
sahf
xchg
call
dec
or
mov
add
adcb
xor
push
jp
inc
pop
pushf
fs
add
addr16
xor
push
shrl
mov
mov
pop
fxsave
mov
fnstsw
pushf
xchg
inc
js
mov
xlat
sarb
popf
add
dec
cmp
js
andl
add
mov
hlt
mov
in
push
dec
sub
movsb
pop
sbb
jne
fisttps
mov
repnz
nop
push
daa
ficoms
adc
pop
add
mov
sbb
inc
pop
jo
push
push
mov
dec
sete
mov
sahf
jne
int3
cwtl
iret
cmpsb
sbb
lock
xor
clc
sbb
pop
mov
or
jno
imul
jmp
sbb
xor
dec
xor
bound
xchg
mov
mov
add
push
inc
mov
inc
wbinvd
cmp
inc
cmp
sbb
inc
js
adc
in
sbb
jl
and
inc
xor
enter
sub
and
iret
inc
rcr
add
adcl
jbe
cli
jg
mov
ds
or
push
mov
push
add
sbb
pop
in
adc
pop
cmpsl
mov
push
pop
in
pop
adc
pop
popf
or
xor
pop
loope
call
mov
ja
outsb
push
mov
clc
sarb
pop
imul
push
or
das
push
push
cmp
jne
xchg
xchg
lret
inc
jmp
inc
fs
sub
xchg
jno
je
aas
cmp
cli
jmp
add
popa
add
xor
dec
jmp
test
inc
out
stc
cmp
js
outsb
or
sub
addr16
cltd
aam
xchg
arpl
in
push
test
enter
dec
test
jg
clc
jecxz
les
loopne
add
in
inc
cmp
sti
and
ret
mov
pop
pop
aam
adc
push
mov
sbb
and
in
xor
and
aas
test
xor
ja
push
push
int
xchg
mov
and
push
mov
inc
in
aam
loope
adcb
pop
push
inc
mov
push
push
dec
movsb
push
jne
push
lods
inc
cmp
inc
jmp
pop
push
stos
cmp
adc
inc
xchg
cmp
cwtl
int3
push
mov
fsubrl
and
pop
cli
and
mov
mov
enter
fmuls
and
in
out
and
adc
xor
and
pop
and
lea
mov
add
sbb
mov
mov
imul
mov
inc
add
lea
jae
outsl
xchg
iret
pop
insl
push
sub
lret
test
mov
adc
jge
clc
mov
sub
arpl
pop
les
movsb
push
fwait
out
add
jle
xor
cmc
iret
jge
and
clc
sub
sub
xchg
jns
jno
adc
add
iret
push
jmp
and
mov
loope
mov
cs
add
adc
push
mov
add
cmp
xchg
icebp
add
in
inc
into
in
test
xor
in
add
aad
add
popf
adc
xchg
xchg
jne
inc
bound
lea
loope
es
mov
or
mov
imul
and
les
cmp
sbb
adc
stos
cmpb
lcall
xor
or
loopne
in
mov
fidivs
frstor
call
lods
xchg
movsb
adc
cmpsb
cmp
gs
or
aas
je
xchg
fidivl
lahf
and
mov
sbb
ss
xlat
xor
test
gs
pop
cmp
push
pop
rcrl
dec
push
pop
xchg
nop
inc
jmp
rcll
add
fld1
repnz
mov
add
or
inc
xor
push
in
test
es
in
lea
dec
lcall
dec
pop
push
insb
mov
sbb
sahf
outsl
jle
adc
sbb
mov
cltd
nop
lret
add
arpl
mov
add
push
cmp
ficoml
mov
sub
jl
mov
nop
add
popf
loope
jge
rorb
out
fst
dec
aas
call
jmp
cwtl
add
enter
add
out
sbb
jp
not
mov
jl
mov
mov
popf
mov
shr
cmp
jbe
add
jmp
add
mov
repnz
xchg
fadd
pop
and
pop
mov
lock
dec
dec
push
and
jl
pusha
frstor
loope
dec
add
pop
in
xlat
cs
cmp
sub
adc
in
pand
sbb
mov
insl
mov
push
push
mov
aaa
mov
jecxz
jno
xor
hlt
dec
sarb
faddl
jecxz
add
rolb
mov
sbb
xchg
sbb
testl
stos
jnp
or
icebp
add
jb
dec
sub
inc
push
push
cmp
into
ja
shrl
test
or
loopne
jne
lahf
mov
inc
es
add
add
xchg
pop
sbb
mov
or
or
push
xor
sbb
imul
das
addl
pop
xchg
roll
mul
jmp
pop
mov
jge
je
or
xor
orl
les
test
sbb
mov
scas
pop
or
loopne
rcrb
xchg
dec
add
sbb
mov
imul
nop
pop
pop
push
xchg
ficoms
pop
dec
dec
add
jmp
inc
ss
ret
jge
cmp
mov
cs
ret
popa
push
adc
pop
inc
stc
dec
or
int
rorb
arpl
add
mov
cmp
outsb
insb
add
dec
mov
lods
inc
add
sbb
push
jecxz
pop
add
jno
pop
dec
pop
sub
adc
loope
pushf
push
or
and
repz
xor
pop
jmp
sbb
and
cmp
inc
sub
fnstenv
lock
fbld
rcll
push
pop
adc
push
pop
mov
sub
sub
sub
fcoms
push
inc
xor
push
imul
inc
mov
loopne
jo
jle
jg,pt
mov
push
cmp
pushf
dec
xor
sub
jne
test
addb
sti
in
or
fsts
mov
sbb
jmp
ljmp
push
frstor
mov
add
in
mov
sub
roll
fsts
sbb
sbb
aaa
outsb
xor
dec
xchg
or
mov
push
xor
sbb
adc
je
stos
mov
fs
je
insl
mov
cmp
or
dec
adc
xor
pop
pop
adc
les
ret
xor
and
push
stos
inc
inc
out
jmp
and
movsb
adc
inc
xchg
out
aad
jo
xchg
adc
inc
lea
jbe
or
scas
mulb
cmp
jne
adc
lods
mov
jae
movsl
addr16
mov
sbb
insb
sub
mov
dec
xchg
in
mov
and
leave
xor
add
pushf
or
or
inc
dec
sbb
push
mov
dec
xchg
outsb
mov
or
dec
adc
push
pop
lods
mov
lcall
and
aam
inc
iret
je
fcoml
ret
je
rorb
popa
push
mov
cwtl
enter
add
bound
add
andl
outsb
cmp
adc
add
add
mov
cmp
add
add
sub
jle
movsb
or
sub
dec
xor
mov
rcrb
push
mov
rolb
xlat
into
shr
adc
addl
rorb
inc
leave
cmp
mov
xor
adc
inc
cltd
xchg
pop
xlat
add
cmp
xchg
andb
lret
jo
xor
adc
call
mov
push
push
adc
nop
daa
aam
add
push
cwtl
sub
outsl
mov
add
push
push
pop
mov
mov
shrb
movsb
push
add
andl
or
lods
dec
sbb
mov
lahf
mov
mov
clc
imul
push
fldenv
fstps
cmp
mov
or
or
add
jle
or
es
dec
push
mov
cmp
rolb
hlt
loopne
cs
pop
pop
jne
cld
adc
push
dec
out
jge
jno
or
push
lods
pop
add
aas
loopne
push
pshufw
inc
lods
pop
push
jp
push
movsl
adc
xor
xchg
adc
stos
xor
and
scas
sub
inc
push
stc
rorb
lods
jge
jmp
mov
dec
cld
stc
lods
fs
push
stos
push
pop
outsb
dec
add
add
sub
lods
xlat
and
enter
dec
sahf
or
add
push
lods
or
pusha
sbb
dec
inc
push
or
xor
je
sbb
adc
movsb
je
jg
or
fstl
push
adc
jo
lahf
in
jae
std
mov
push
inc
hlt
xchg
jg
jge
outsl
adc
jns
jge
xchg
mov
cmp
jne
loopne
and
dec
cmp
dec
call
jmp
push
dec
xlat
shrb
cltd
adc
test
fisubs
xchg
sub
mov
sbb
or
mov
xchg
adc
ret
rolb
pop
jmp
gs
adc
mov
lock
ret
dec
imul
pop
fsubrl
and
imul
mov
movsl
jg
repz
xchg
imul
ret
push
in
mov
sub
orb
mov
add
ss
out
mov
xor
add
cmp
imul
mov
pop
xchg
inc
paddsw
cmp
das
push
insb
fs
decb
push
incl
js
mov
stc
repnz
loopne
add
dec
je
or
and
dec
jmp
push
adc
xchg
cmp
jmp
inc
push
xchg
lahf
nop
dec
jecxz
test
lea
nop
jmp
iret
sbb
sarl
dec
addl
mov
fisubs
jb
jp
fldz
je
and
pop
push
push
fcoml
clc
mov
push
insb
sbb
pop
es
adc
dec
mov
mov
push
sub
call
cwtl
sbb
addl
or
inc
pop
shlb
or
push
and
push
dec
frstor
xchg
or
xor
cmc
dec
bound
shl
sub
jns
mov
call
lods
push
mov
cmp
adc
ror
pop
popf
movsl
pop
sub
push
inc
jl
push
xor
pop
sbb
mov
in
icebp
or
and
outsl
sti
in
cli
jbe
adc
nop
push
vpmaddubsw
push
pop
lcall
or
cmpsl
push
into
xor
and
xchg
mov
es
push
pop
test
nop
jb
push
xchg
sub
sub
inc
das
xchg
testb
push
add
adc
push
add
add
mov
cwtl
and
shll
adc
aaa
push
xchg
xor
fwait
enter
push
test
adc
pop
mov
cld
in
push
popf
nop
push
addl
xchg
cld
pop
pop
adc
inc
jmp
inc
cmp
subb
loope
push
int3
stos
add
inc
xchg
dec
jl
adc
sbb
mov
jl
adc
inc
inc
loop
sub
or
nop
dec
push
fidivs
enter
fbstp
pop
es
xlat
dec
mov
inc
jl
clc
jbe
push
bound
push
inc
shlb
mov
dec
adc
add
hlt
les
mov
adc
in
jns
aam
and
in
adc
imul
inc
mov
push
dec
mov
mov
or
movsl
ret
or
dec
scas
lock
xor
outsb
push
into
sub
and
push
mov
or
and
cmp
jp
push
xchg
int3
lods
inc
mov
pop
std
aad
pop
or
push
mov
jmp
pop
loopne
inc
cltd
fdivrp
add
shrl
push
sbbb
addr16
push
inc
or
cmp
adc
cmp
jns
sti
repnz
pop
mov
or
dec
add
stos
push
push
and
hlt
push
out
add
cmpsl
push
movb
xchg
test
mov
bound
ss
int3
add
pop
inc
mov
mov
cmpl
and
push
lock
inc
xlat
pop
cmp
cli
pop
adc
addr16
test
aas
xor
insl
mov
inc
mov
jg
push
xchg
cs
clc
test
mov
adc
sbb
insb
cmp
sub
mov
or
mov
sub
cmp
jl
pop
and
xor
pop
pop
mov
dec
je
lret
jae
cwtl
fistps
add
cmp
pop
push
outsl
push
push
inc
lea
jo
jb
imul
adc
push
cmp
fcmove
shr
rclb
pushl
adc
add
in
mov
fdivr
aaa
stos
or
pushf
inc
loop
aaa
mov
mov
and
inc
push
add
orl
pusha
xor
pusha
or
cwtl
mov
sub
and
add
add
je
push
mov
xchg
xchg
out
out
push
inc
imul
or
adc
in
adc
jo
xchg
jmp
adc
testb
jne
jmp
inc
cmp
jo
push
mov
daa
pop
push
and
movsl
mov
push
push
and
pop
pop
leave
xchg
sbb
test
jbe
push
dec
mov
mov
cvtdq2ps
adc
lock
lret
hlt
push
xor
adc
outsb
sahf
jbe
fisubrl
das
push
push
stc
pusha
or
repnz
or
icebp
xor
xchg
nop
nop
pop
xchg
or
mov
loopne
xor
cmp
je
bound
push
add
push
add
push
jmp
push
sub
popa
and
add
adc
jbe
and
push
push
mov
jnp
xchg
cld
scas
loopw
cmp
dec
test
sub
jg
call
scas
jmp
pusha
mov
gs
sbb
test
mov
push
adc
add
or
movsb
mov
sub
push
sub
cmpsb
or
out
cmp
fmuls
dec
sbb
into
jp
pop
inc
rorb
lock
push
pop
out
into
sub
bound
push
in
test
cmp
test
push
jl
js
pop
shll
sub
inc
jmp
adc
in
cmp
adc
jmp
add
push
inc
pop
mov
fiadds
pop
mov
cmp
iret
ret
xchg
stos
cmp
mov
cmc
ret
test
test
cli
xchg
lods
imul
pop
scas
mov
mov
movsb
sub
pop
mov
ret
add
sti
int3
and
adc
jl
es
sbb
and
or
nop
and
ja
add
xlat
cmp
or
jnp
add
add
cmp
push
dec
ret
mov
fwait
sbb
mov
adc
ljmp
pop
adc
das
mov
in
xor
mov
ljmp
inc
push
mov
ror
xor
shr
xor
sub
jnp
xor
stos
ss
inc
jmp
incb
js
add
loopne
jns
mov
mov
ret
cli
pushl
jae
or
and
xor
add
add
cmp
mov
outsb
sub
jge
add
push
pop
push
inc
notb
repnz
cli
in
stc
lcall
jge
xor
and
and
xchg
adcl
xor
xchg
mov
repnz
repnz
sub
fmull
mov
inc
sub
push
or
xlat
ret
push
mov
add
add
add
adc
stos
xor
fsubr
inc
inc
sub
rcl
call
call
dec
xor
mov
cli
mov
rol
rol
out
inc
lcall
xor
lret
dec
push
mov
nop
cmpsb
imul
push
in
shl
in
add
adc
push
cmp
enter
or
add
mov
pop
aaa
push
scas
sbbl
cs
xor
das
cltd
call
loopne
pop
dec
rcl
in
in
adcb
xor
pop
cmp
aam
sbb
xor
gs
xchg
sbb
jo
int3
cmp
mov
or
push
xor
and
dec
sti
cmp
iret
or
inc
stos
popf
add
and
xor
andb
push
test
cmp
or
cmp
subl
push
jo
ficoms
add
mov
sbb
fucomip
loop
dec
adc
push
loop
mov
fimull
mov
filds
cltd
sbb
fadds
pop
jbe
xor
scas
push
call
lretw
mov
clc
jp
push
and
add
gs
fdivs
add
push
cmp
test
clc
popa
jle
and
inc
mov
adc
mov
xchg
clc
and
popf
push
jo
cli
stos
adcb
aam
aaa
cmp
lcall
call
in
and
or
add
mov
and
jge
rclb
shlb
rorb
shll
sub
dec
loopne
add
xor
xchg
cld
jo
add
push
nop
add
sahf
dec
push
and
and
push
rorb
dec
xor
mov
jb
xor
and
xor
cmp
add
and
push
push
pop
and
and
cmp
push
leave
and
pop
int
push
test
sub
push
xadd
or
movsb
sbb
cmp
mov
and
sub
and
stc
enter
mov
or
stc
fcoms
adc
es
sbbl
inc
imul
xor
push
stc
stc
stc
mov
clc
inc
pusha
aam
pop
dec
mov
cmpsb
push
adc
shll
adc
adc
lods
xor
sbb
jo
adc
add
push
repz
add
and
mov
pop
mov
outsb
or
rcrb
fimuls
pop
xchg
add
invlpg
testb
clc
setge
pop
cld
sub
lea
pop
xor
push
aaa
test
enter
loope
sub
sarb
loope
push
mov
or
or
mov
out
inc
imul
jne
sbb
or
cmpsb
push
adc
sub
xorl
loopne
lea
mov
add
sub
sub
pop
sti
out
cs
mov
ret
dec
or
mov
dec
dec
insb
add
ficomps
loope
lock
inc
adc
mov
negl
adc
or
xor
fs
adc
adc
push
jae
push
pop
fadds
or
or
mov
ljmp
outsl
mov
dec
pusha
outsl
pop
loopne
ror
mov
mul
xchg
test
mov
push
test
mov
scas
adc
jno
movb
and
jb
cmp
ja
mov
call
dec
sahf
inc
inc
aaa
popa
retw
loope
stos
push
mov
add
dec
je
add
push
sbb
and
divb
add
pop
push
inc
adc
pop
inc
lcall
sbb
test
adc
jg
lds
sub
xor
jnp
or
je
or
lock
lcall
jne,pn
or
fisubrs
orl
incl
jmp
dec
mov
dec
xor
aaa
lret
jp
push
movsb
jne
jmp
sbb
je
or
add
sub
out
cmp
loop
inc
or
ficomps
adc
inc
cmp
fs
dec
inc
push
inc
push
jo
insb
and
mov
or
jp
inc
bound
add
out
fstps
clc
lahf
push
jl
lock
push
hlt
aad
out
mov
lea
xchg
mov
cmp
scas
lea
inc
sbbl
cmp
mov
insl
notb
fnstcw
jge
cli
mov
adc
je
movsb
cld
fildl
sub
sbb
or
jecxz
in
ja
pushf
push
inc
adc
subb
push
add
pop
fsubrs
add
push
mov
mov
push
fs
popf
test
inc
cs
andl
dec
mov
cmpsb
mov
inc
andb
fsubs
repz
sbb
jb
jb
jae
sub
rol
outsb
xchg
aas
shl
add
jmp
cwtl
aas
les
mov
dec
hlt
xor
je
fs
adc
test
jne
repnz
pop
add
push
test
incl
or
push
jae
mov
jmp
adc
mov
dec
shlb
mov
test
sub
sti
add
cmp
push
inc
call
arpl
push
sti
sbb
mov
jg
or
jae
cmp
and
jle
es
fsubp
jg
sub
sub
and
pop
cmp
jl
pop
jle
pusha
or
lods
xchg
scas
inc
test
jbe
bswap
lahf
add
jbe
mov
test
dec
jo
adc
adc
je
test
jne
clc
pop
cld
and
jb
adc
mov
jb
je
xor
lock
adc
push
bnd
loop
mov
adc
ljmp
push
push
push
cmp
push
sbb
and
je
xchg
arpl
pusha
mov
mov
mov
push
mov
scas
call
inc
es
xorl
inc
test
movsb
lahf
mov
jb
sbb
mov
pop
mov
adc
xor
fs
and
inc
aad
xchg
add
adc
and
cli
push
out
icebp
cmc
es
push
sbb
jne
dec
mov
test
sub
xchg
aaa
mov
cmp
push
imul
mov
xor
pop
inc
and
lea
sub
xor
jmp
push
add
pop
jb
andl
pop
cmp
mov
dec
fs
xor
mov
or
xchg
sbb
pop
cwtl
lea
mov
fiaddl
stos
dec
daa
mov
add
cmp
push
push
dec
fadds
inc
and
jae
ja
xor
xchg
std
jo
cmp
je
test
or
mov
bound
sub
fsts
mov
sahf
and
mov
jo
or
mov
xor
add
pop
mov
movsb
arpl
or
add
inc
ss
add
movb
xchg
cs
iret
add
pusha
test
push
and
inc
inc
mov
lds
scas
jl
add
cmp
push
add
add
push
sbb
cmp
mov
jg
scas
push
or
jmp
cmp
lock
jne
jg
popa
hlt
sti
push
inc
xchg
xchg
inc
rolb
loopne
or
mov
inc
loopne
ds
xchg
adc
mov
insl
sub
pusha
jb
cs
or
fwait
jecxz
adc
jbe
add
inc
fisttpl
mov
jp
adc
xor
lds
ret
mov
mov
shrb
cwtl
loopne
sbb
into
push
mov
jo
movsl
adcl
add
push
sub
out
adc
sub
xor
out
mov
lahf
jne
addl
xchg
nop
mov
in
xchg
xchg
push
aas
pop
mov
imull
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
and
pusha
in
in
sbb
rcll
inc
fs
push
pop
ror
call
imul
cmp
inc
xchg
je
leave
xor
mov
aam
fnstsw
imul
clc
sub
pop
imul
xchg
testl
jne
loopne
fnstsw
rolb
in
and
and
and
and
inc
push
jle
pusha
adc
push
jmp
adc
cmp
mov
add
sub
pop
test
sbb
bound
fadds
sub
ret
imul
stos
pop
xchg
xchg
jbe
enter
dec
mov
cmp
fcomps
inc
add
and
cmp
je
mov
cmp
inc
mov
inc
inc
inc
xchg
insb
mov
mov
pop
and
aaa
sbb
adc
and
lods
push
mov
fnstenv
or
lret
test
cmpl
inc
fsubr
cmp
fiaddl
add
ljmp
push
push
sbb
inc
mov
inc
fs
insb
jne
jl
cmp
push
xchg
sub
jge
mov
stos
inc
test
mov
pushl
ss
adc
cmp
sbb
and
cmp
jne
js
fnstsw
les
aam
adc
jmp
cmp
mov
sub
mov
call
cmp
push
jmp
test
sahf
ja
sbb
xor
jb
jge
cmp
push
fchs
je
jl
xor
js
add
add
mov
dec
and
xchg
ljmp
sahf
es
mov
das
ret
or
sub
sbb
cmp
je
pop
push
js
or
sarl
jbe
sub
fsts
or
jmp
add
jne
mov
xchg
outsl
inc
cmpb
sub
cld
and
pop
cs
out
or
xor
pop
pushl
cmp
or
in
fmuls
imul
ret
push
pushf
sbb
push
cmp
and
inc
adc
push
jl,pt
mov
lods
push
das
mov
dec
add
imul
cmp
pop
mov
lcall
xchg
imul
inc
and
or
cs
stos
push
sub
xor
xor
cs
lret
xor
cmp
xor
sbb
inc
into
popa
mov
shlb
mov
xor
pop
inc
adc
adc
nop
mov
and
pop
xchg
jbe
sbb
inc
repnz
popa
push
and
dec
les
mov
mov
xor
pop
fsubs
lds
mov
push
stc
jle
cmp
and
int3
sbb
pop
js
adc
aas
pusha
popf
push
addb
mov
xchg
ss
cmp
roll
cmp
sub
or
sahf
or
mov
enter
or
popa
pop
ret
js
aam
lcall
and
add
inc
sub
notb
cmp
push
cli
xor
jne
sbb
sub
add
pop
cmp
js
or
dec
ss
je
loopne
xchg
xor
mov
je
icebp
mov
sbb
fistpl
sahf
pusha
std
cmp
jne
lret
xor
push
comiss
sbb
les
mov
xchg
js
pop
inc
shll
adc
mov
jmp
add
pushf
sub
cmp
xor
add
in
daa
push
test
adc
rorl
mov
loop
pop
pop
mov
fsubl
sbb
into
ret
jmp
mov
dec
test
xchg
inc
add
xor
fisubl
sub
sbb
js
mov
je
clc
mulb
sub
daa
clc
fdiv
cmp
mov
enter
add
data16
inc
sbb
bound
adc
ds
push
or
sahf
in
ret
mov
movsb
or
cmp
xchg
add
pop
add
loopne
stos
test
hlt
inc
mov
sbb
push
jo
aam
rcr
inc
cmp
sbb
loopne
push
arpl
xchg
movsb
in
xchg
cmp
hlt
xorl
imul
push
inc
mov
xchg
gs
adc
sbb
movsb
pop
popa
adc
pop
or
scas
dec
cld
les
inc
notb
aaa
jbe
push
inc
js
ja
call
sbb
push
or
subl
mov
aam
pop
sub
cld
xlat
es
and
mov
mov
movsl
inc
adc
mov
adc
pop
dec
push
inc
clc
dec
xor
lods
lea
cmp
adc
dec
sbb
aam
dec
imul
add
cmp
and
add
addr16
rorl
mov
jo
push
outsl
push
sbb
daa
in
inc
call
cmp
inc
mov
mov
lea
mov
and
or
mov
int
out
adc
adc
xchg
or
mov
lcall
push
popf
movsl
adc
jb
xor
mov
scas
push
jo
cmpsb
push
mov
push
stos
push
sbb
cmc
or
or
dec
bound
fmull
pop
add
xchg
pop
fcmovb
testl
add
cmp
mov
jle
addr16
add
cmp
dec
add
insb
fs
and
jno
inc
mov
sti
adc
dec
adc
shlb
push
push
test
sbb
mov
std
mov
or
ljmp
lcall
xor
inc
adc
cmpsb
pop
dec
fstps
repz
mov
jecxz
lcall
or
movsb
out
daa
add
and
sub
mov
xchg
or
pop
lea
push
jg
xchg
xor
test
adc
or
sti
data16
rcrl
cmp
test
mov
and
dec
sbb
add
lods
inc
bound
loop
sbbb
sub
cmp
mov
and
je
in
sub
incl
and
adc
ja
fisttpl
mov
add
jle
nop
inc
adc
inc
push
pop
push
js
inc
sbb
pop
arpl
xor
inc
lds
addl
pop
imul
fs
xor
and
add
add
inc
sub
mov
sbb
push
shll
cmpb
adc
and
xchg
mov
fs
daa
adc
clc
imul
adc
out
mov
cld
call
push
adc
and
or
push
leave
int3
mov
mov
add
push
cmp
and
aaa
or
lret
add
pop
and
jnp
and
jae
mov
or
repnz
inc
popf
mov
fstpt
je
inc
jge
lods
sbb
mov
jmp
inc
push
test
dec
sbb
fistpl
lcall
inc
mov
and
jne
orl
push
push
xor
inc
testb
xchg
or
pop
push
adc
jg
pushl
adc
push
adc
jge
pop
addl
push
movsb
adc
add
pushl
xchg
cmp
push
fwait
inc
mov
pop
add
adc
mov
fisttps
das
push
mov
daa
pop
stc
out
cmp
push
push
push
xor
pop
add
movsb
mov
insb
push
mov
xchg
adc
or
add
dec
pop
popf
addr16
mov
or
sub
adc
sub
adc
sub
fcmovnbe
lock
lret
das
decb
and
hlt
je
cmp
jbe
lds
xor
jmp
jbe
dec
xorl
add
adc
ret
jp
ret
dec
xor
insl
xor
push
mov
push
push
imul
test
cmpl
pop
clc
mov
repz
mov
jmp
push
inc
enter
mov
test
jbe
mov
je
add
les
nop
jmp
xor
push
dec
or
mov
mov
or
dec
add
push
add
sub
push
in
push
shll
sub
cmp
push
cmp
nop
add
xchg
aad
cmp
pusha
scas
and
mov
fsts
fdivs
xchg
adc
scas
inc
mov
ja
pop
cmp
stc
enter
add
mov
ret
mov
out
jbe
sub
lock
out
lods
push
jae
push
ret
mov
mov
sub
fisubl
mov
mov
test
add
add
jno
inc
mov
movsb
push
inc
xor
sub
xor
mov
xchg
pop
cmp
mov
pop
rorb
leave
andl
pop
sbbl
or
inc
mov
sahf
xchg
jne
int3
adc
hlt
pop
movsb
jne
fcomps
jne
test
push
loop
cmpsl
or
or
clc
test
enter
pop
dec
daa
cmpsl
mov
mov
sub
ret
addl
jmp
js
adc
or
sbb
push
cmpsb
sbb
pop
add
pop
push
subl
orb
adc
or
leave
sub
cmp
rol
push
xchg
cmp
jbe
sub
add
mov
bound
stos
dec
das
sahf
push
push
mov
out
add
adc
dec
mov
idivb
insl
push
adc
jb
xor
mov
ja
inc
push
ret
jae
mov
fs
lret
and
mov
pop
mov
and
mov
daa
clc
daa
push
push
push
mov
daa
popa
movsb
pop
jmp
test
mov
jecxz
cmp
xchg
mov
je
sub
clc
in
inc
inc
push
adc
test
add
test
push
or
in
inc
mov
inc
dec
lock
es
pop
cmpsb
cmp
push
add
xor
or
sbb
push
push
jbe
mov
mov
dec
xor
push
lock
pop
xor
pop
popf
push
lock
adc
arpl
sahf
mov
add
nop
inc
ret
mov
push
sub
jmp
xor
shll
pusha
addb
ljmp
pop
xor
sahf
leave
push
divb
adc
pop
ret
xchg
pop
pop
mov
jmp
enter
adcb
inc
fsubs
test
add
inc
out
cmpsl
dec
test
mov
in
push
test
sub
pop
mov
push
les
cmp
xchg
xchg
and
or
inc
dec
adc
insb
sbb
outsb
adc
mov
push
dec
cli
sbb
dec
sti
test
push
xor
push
les
sub
lcall
jmp
mov
pop
inc
ss
cmp
pop
nop
inc
flds
dec
stos
stc
push
mov
fdivl
and
jne
fmul
jb
pop
lock
insb
sbb
mov
insl
jne
mov
not
into
pusha
add
fcmovb
push
out
outsb
adc
loope
or
jmp
pushl
cmpsb
or
das
and
into
pop
mov
in
xchg
push
mul
adc
lret
dec
sub
cmp
mov
test
arpl
or
pop
add
daa
adc
rcr
or
repnz
add
push
xor
sbb
or
js
push
inc
add
aam
fidivrl
mov
or
jmp
pop
xor
lcall
gs
rorb
inc
inc
call
mov
sub
lock
movsl
add
sbb
mov
xor
xor
push
mov
inc
jne
push
pop
add
cmp
inc
arpl
lods
dec
std
movsl
dec
lret
ja
arpl
adc
or
jo
push
add
and
xchg
pop
out
fldl
jbe
lret
push
imul
adc
mov
mov
add
inc
jb
cmpps
pop
xchg
pop
stos
cmp
mov
add
test
sbb
lods
and
or
add
lods
xchg
dec
jle
ficompl
jl
cmpsb
add
ret
and
scas
das
push
stos
fwait
xor
cmp
push
and
inc
jecxz
inc
xor
or
jo
add
pop
rclb
and
loope
inc
das
add
sbb
jne
pushf
rolb
inc
subb
push
pop
jbe
mov
mov
aam
dec
mov
adc
lods
dec
add
and
adc
loop
jmp
inc
mov
sub
inc
das
testl
adc
inc
shrb
rorb
adc
lock
pop
and
mov
dec
loope
mov
cmpl
xor
xor
cmp
add
into
or
sbb
pop
sbb
je
add
xchg
test
sbb
push
push
dec
call
mov
mov
dec
mov
add
fldl
lods
icebp
push
and
js
sbb
clc
hlt
cmp
jge
mov
mov
mov
push
dec
inc
xchg
subb
inc
test
push
outsl
jge
jo
les
mov
dec
adc
mov
loope
xchg
xchg
and
inc
adc
lock
sub
cmpsb
clc
jmp
push
adc
sarl
sbb
std
ret
xchg
pusha
pop
inc
adc
add
pop
popa
or
pop
or
ljmp
xlat
jl
inc
movb
cli
mov
push
pushf
jmp
mov
cmp
mov
sub
adc
dec
push
cmp
mov
cwtl
mov
add
clc
addr16
les
lea
add
or
dec
lcall
lock
xor
jbe
test
ficoml
pop
pop
jmp
xor
pop
add
jmp
negl
ds
inc
aaa
adc
cmp
adc
test
rorl
or
sbb
fsub
mov
jecxz
pop
test
pop
ret
dec
mov
add
and
sbb
inc
cltd
xchg
xchg
push
subl
mov
inc
push
sbb
pusha
lea
lea
repz
stos
add
cmp
add
dec
in
lods
adc
add
and
insb
jecxz
ret
mov
mov
ret
mov
fstpt
adc
mov
mov
jno
add
movsb
jbe
ficoms
lock
push
test
mov
icebp
mov
lcall
and
inc
mov
jmp
fisubl
cmp
aas
sbbl
leave
lods
pop
rcrb
jmp
test
je
lahf
pop
push
mov
push
scas
xchg
outsl
test
or
out
mov
push
add
sub
cmpl
cld
ret
mov
adc
push
or
int3
cli
push
jnp
loopne
adc
mov
xchg
in
popa
aas
mov
dec
leave
ret
pop
mov
daa
mov
cltd
dec
and
add
lret
xor
adc
pop
add
jmp
test
inc
cmp
sub
mov
xor
inc
test
stc
cmp
add
inc
push
adc
push
ja
xchg
and
fiaddl
pop
push
fwait
loop
in
push
inc
mov
andl
movsl
leave
shll
add
xlat
lea
pushf
dec
cmpb
xchg
push
rorb
or
push
sbb
xchg
inc
mov
es
push
inc
cmp
dec
pop
lds
or
push
mov
pop
pop
mov
add
fidivl
jmp
addr16
jno
iret
adc
mov
push
in
cmpsl
test
in
inc
mov
jge
xor
movsl
sub
dec
push
dec
mov
sbb
inc
sub
add
cwtl
imul
push
add
inc
mov
mov
out
test
sub
xchg
loope
aad
jp
test
push
cmp
pushf
movsb
in
or
sub
mov
cmc
and
ja
mov
jle
cs
push
mov
xorb
xor
clc
dec
inc
fdivs
jg
pusha
mov
sbb
dec
add
xchg
add
pop
cli
and
adc
xor
add
inc
sub
fimuls
data16
pop
daa
pop
jnp
pop
lahf
inc
cmp
add
iret
mov
cwtl
jbe
pop
cmp
je
mov
icebp
das
addl
aaa
rorb
and
adc
in
lds
or
jo
fcmovnu
mov
jmp
push
sub
add
add
xlat
in
fisttpl
cmp
inc
fwait
repnz
cld
je
dec
je
dec
sti
or
sub
sbb
dec
popa
orl
pop
jmp
xor
push
mov
sub
xchg
icebp
inc
dec
lea
xor
mov
cmp
inc
inc
repz
daa
movsb
sbb
in
and
inc
in
sahf
dec
dec
out
dec
add
push
hlt
jmp
lods
and
mov
lcall
xor
jnp
cmp
lods
cli
and
adc
xlat
mull
je
fs
lods
lea
js
push
mov
inc
mov
and
bound
push
iret
shrb
mov
inc
fld
enter
push
jmp
test
and
mov
lock
clc
push
or
push
jle
adc
inc
lcall
push
pop
sub
lret
mov
out
js
loope
pop
add
call
mov
push
sbb
cmpsl
xchg
pop
or
adc
xchg
jo
sub
scas
fdivs
pop
add
insl
loopne
fdiv
sbb
xor
jmp
imul
sbb
jbe
sahf
xchg
push
mov
scas
dec
or
loop
inc
fwait
ja
mov
push
dec
sbb
push
inc
hlt
movsl
shrl
mov
mov
lea
xor
int3
shll
lahf
mov
sub
mov
mov
push
adc
or
aas
jo
movsl
and
push
je
sbb
xchg
rolb
push
insb
xchg
ret
pop
sbb
jl
or
lods
lods
mov
shl
xchg
stc
test
enter
out
call
cld
fistpl
add
xchg
or
adc
sbb
lods
rorb
cmp
add
pop
push
in
and
lea
cmp
sub
adcl
add
sbb
inc
jo
cmp
mov
sbb
aam
jnp
aam
loop
and
adcb
pusha
xor
sub
mov
sub
adc
lods
cmpsb
jb
add
and
xor
inc
scas
mov
rolb
test
sarb
add
rcll
inc
inc
and
add
pop
push
dec
push
cmp
or
inc
adc
fdivs
and
or
mov
xchg
or
jnp
cmp
jno
arpl
pop
insb
rolb
inc
movsb
cmp
sub
movl
dec
dec
clc
js
fidivl
mov
push
test
cmp
in
adc
adc
add
stos
es
mov
push
fistps
into
jp
sbb
xchg
mov
hlt
hlt
sahf
ret
enter
or
mov
push
add
pop
pop
hlt
add
sub
cmp
cmp
jae
adc
dec
sbb
inc
sbb
inc
jno
push
fxtract
jne
push
js
loopne
xchg
sbb
fnstenv
ficoms
mov
mov
lea
push
sbb
gs
add
or
add
movsb
lock
cld
clc
pushl
add
lea
xchg
mov
xchg
and
int
mov
add
cmp
fmuls
rorb
xchg
ds
xchg
cmp
xchg
pop
cmp
pusha
pop
cld
ret
push
mov
or
shlb
push
mov
je
cmpb
mov
or
mov
int
mov
and
mov
subl
mov
out
je
cmp
call
arpl
jp
cs
pop
add
cmp
adc
push
stos
mov
cmpl
jne
cmp
cmp
add
adc
push
add
mov
sbb
adc
cmp
stos
lock
or
sub
add
mov
push
in
mov
in
fmuls
sarb
add
mov
test
xchg
testl
shll
test
ljmp
fiaddl
outsb
add
add
test
push
sub
bound
or
adc
iret
and
fistpll
push
dec
push
inc
adc
leave
xor
bswap
xor
arpl
jne
xchg
jns
mov
cmp
lret
lods
mov
and
push
cmpsl
fidivrs
xor
sbb
loop
cmp
roll
cmp
rcrl
pop
dec
cmp
pop
pop
jecxz
xchg
in
cld
add
or
cmp
je
jecxz
lahf
gs
idiv
pop
push
jo
sub
nop
lret
test
jb
es
aam
cmp
jb
or
dec
je
mov
fsubs
push
mov
ret
lcall
inc
lock
adc
dec
sub
aaa
fidivl
push
scas
sbb
sbb
dec
push
mov
jp
out
sub
clc
add
push
insl
fucomp
xor
mov
add
pop
imul
mov
nop
test
call
xchg
in
dec
cmp
loop
adc
out
nop
jecxz
ret
repnz
sarl
cmpb
mov
cmp
adc
or
cmpsb
mov
clc
es
jmp
aam
ret
cmc
es
mov
mov
sub
or
fbld
fimuls
sub
or
loopne
lret
xchg
mov
pop
iret
dec
sbb
sbb
loope
rorb
mov
test
xchg
xor
lock
xchg
inc
add
jecxz
adc
pop
push
xchg
push
cmpsl
jno
aam
cmp
xchg
push
jecxz
fistl
sbb
mov
jb
and
cmp
cmp
inc
push
add
cmp
mov
mov
shr
and
add
sbb
cs
rclb
mov
or
lods
dec
sbb
jb
push
jae
and
lea
in
pop
jo
ljmp
out
outsb
loop
sub
add
sub
lods
or
lret
ficompl
fwait
jo
je
clc
add
mov
ret
sbb
and
and
push
gs
mov
test
mov
xorl
mov
rol
shlb
mov
adc
insb
mov
outsl
enter
or
test
es
fcomip
pusha
sbb
sbb
mov
and
cmp
jmp
jo
cmp
loope
lret
idivl
push
test
sub
daa
push
pushf
mov
dec
push
scas
mov
mov
pop
repz
mov
add
nop
enter
adc
jge
mov
xchg
in
adc
ret
adc
and
and
adc
lret
or
cmp
lcall
out
in
jl
jp
mov
stos
test
bound
movsb
std
adc
call
mov
dec
mov
sbb
insl
inc
aad
sbb
bound
sub
mov
add
jle
jae
mov
clc
add
clc
jno
sub
add
pop
mov
inc
xor
add
icebp
fimuls
push
sbb
div
jne
sbb
pushf
xchg
inc
sahf
or
loope
out
sbbl
sti
mov
pop
fdivs
xchg
push
adc
sub
xchg
stc
popf
rol
test
jmp
popa
mov
popf
loopne
xchg
imul
jne
and
jl
add
pop
xor
sbb
shr
pop
punpcklwd
add
in
sbb
sub
xchg
mov
and
pop
push
and
dec
aas
or
rorl
jmp
pop
push
sub
fucom
bound
push
insb
in
mov
out
out
xchg
adc
xor
test
jmp
inc
and
rol
aad
push
adc
fisubrs
mov
inc
test
xchg
jo
jecxz
insl
clc
gs
mov
outsb
sbb
mov
roll
lret
push
dec
in
jo
mov
rorl
cmpsl
je
push
xlat
iret
xchg
inc
jmp
cmp
add
add
andl
lods
adc
mov
scas
pop
fisubrl
dec
or
pop
dec
dec
push
cld
insb
or
inc
mov
loopne
mov
leave
js
sbb
push
cmp
lret
jno
out
pop
adc
jns
mov
rcll
xor
rcrb
pop
mov
fldenv
push
scas
popa
jnp
clc
mov
ror
and
cmpsl
mov
lea
and
jae
sub
xchg
mov
int
or
mov
scas
cs
ljmp
sub
add
cmp
lret
push
mov
shl
adc
lahf
cmp
or
addr16
xchg
inc
inc
mov
push
out
pop
xor
xchg
mov
push
int3
adc
mov
or
inc
div
dec
jae
sub
cltd
pusha
jle
push
call
xchg
sbb
sub
ljmp
xor
imul
adc
xchg
push
pusha
jb
add
cld
pop
mov
dec
adc
xorl
das
fildl
push
pop
add
fisttpll
xor
cmp
xor
mov
add
lea
in
jp
jecxz
xor
mov
mov
lahf
and
xchg
mov
outsl
push
or
ror
mov
insl
inc
cmpl
jmp
xchg
adc
sub
sbb
xor
je
fmull
call
xchg
add
push
ds
xorb
dec
loope
add
or
cmp
xor
pop
and
test
ret
add
insl
mov
pop
rolb
imulb
add
adc
cmp
add
push
pop
and
js
mov
jo
jae
daa
bound
pushf
js
and
mov
cmc
ret
push
jae
lea
push
sub
popa
cmp
add
inc
inc
xor
lods
and
stos
idivl
les
shll
add
mov
outsl
cs
or
mov
out
rorb
add
or
je
mov
insl
add
or
cmp
pop
sar
fnstenv
inc
jmp
push
jp
sub
dec
ret
sbb
int3
mov
dec
cmpsl
add
movb
inc
or
lcall
in
clc
subl
push
push
add
lock
les
imul
and
and
hlt
push
int3
push
push
test
sti
cwtl
aad
push
nop
push
add
add
or
and
xchg
xor
or
cld
cli
add
and
pop
mov
adc
inc
jmp
xchg
jl
ret
lds
and
push
mov
add
popf
sbb
loopne
sti
mov
pop
pop
aaa
push
push
sahf
inc
or
mov
mov
pushf
sbb
test
insl
dec
cmp
cmpl
aad
or
sub
js
inc
in
insb
cmp
jle
xchg
sub
cmp
xchg
je
mov
jne
bnd
sbb
add
test
cmpb
push
je
or
mov
sbb
xchg
jno
fmulp
jb
outsl
add
inc
clc
ds
push
jo
dec
sub
add
adc
adc
and
mov
int3
sub
push
inc
outsb
loope
scas
or
add
jp
call
ret
pop
ret
pushf
and
rorl
in
sub
stos
jb
aaa
jmp
mov
adc
shlb
lea
cli
ja
cmpb
out
in
sbbl
or
push
enter
xor
lret
js
cmpsb
push
mov
push
adc
xor
cs
add
sbb
xor
mov
jmp
fisttpll
lods
dec
cmpsb
imul
imul
xor
imul
aaa
enter
loopne
rorl
inc
add
xchg
daa
in
or
cmp
movsl
xor
sub
arpl
jg
xchg
out
or
xor
sahf
icebp
pop
or
add
sub
outsl
xchg
push
mov
cmp
testb
and
rolb
mull
dec
mov
cmp
push
mov
dec
mov
add
adc
aaa
add
or
in
cmpsl
mov
xlat
scas
lods
dec
nop
xor
xorb
lahf
mov
movl
pop
inc
add
and
add
sub
sbb
nop
cltd
fsubs
push
stos
cmp
mov
daa
dec
subb
ret
cmp
lret
mov
enter
xor
cmp
push
lods
adc
addl
fadd
cmp
adc
stos
pop
cmpsb
jbe
cmpl
mov
inc
mov
fwait
scas
dec
adc
sahf
push
mov
dec
xor
cli
or
add
sub
test
cmp
or
inc
test
call
mov
es
call
scas
in
dec
or
or
enter
leave
or
inc
sbb
mov
push
cmovb
jbe
mov
push
and
mov
and
cmc
mov
shl
sbb
lea
mov
inc
or
and
mov
pop
and
dec
popf
sbb
les
adc
jle
jle
test
pop
mov
push
out
sub
fwait
mov
fdecstp
push
hlt
sbbl
xchg
fwait
mov
dec
loope
xor
jae
roll
or
sub
lds
or
inc
nop
testb
clc
into
ret
pop
pop
mov
cmp
pop
dec
mov
stc
jo
js
jge
jo
mov
sub
lods
test
dec
add
and
test
push
jle
cmp
lea
jg
jle
jne
rorl
mov
jne
cmp
lods
push
insb
ljmp
or
xchg
and
les
push
jmp
dec
adc
mov
fwait
test
pop
lcall
mov
cmc
add
cmpsl
mov
xchg
daa
test
fsubr
adc
fcompl
fnstcw
rcrl
in
push
adc
pop
xchg
pushf
mov
loop
jbe
lcall
jle
xchg
xchg
lcall
stos
push
or
xor
push
xchg
das
xchg
jbe
jmp
mov
pop
sub
in
xor
mov
and
add
ret
xchg
add
sbb
adc
sarl
pop
rcrb
cmp
stc
fmuls
pop
mov
mov
cmpb
push
bound
jl
inc
cmp
mov
movb
adc
lock
stos
or
outsb
nop
sub
lahf
test
adc
mov
pop
mov
cli
mov
mov
jne
and
or
cmp
stc
imul
mov
xchg
mov
out
push
sbb
pop
xor
pop
add
dec
add
add
mov
sub
fnstcw
jge
and
aas
inc
or
int3
call
jg
into
pop
push
cmp
and
cltd
xor
inc
cmp
jl
or
mov
mulb
inc
emms
or
shlb
push
xor
or
out
mov
or
lock
jae
mov
ss
pop
inc
fidivrl
add
cmp
dec
pop
lock
mov
cmc
xor
pop
ret
push
das
insb
mov
push
jl
jecxz
cwtl
inc
and
rcrl
mov
std
rclb
dec
mov
das
adc
in
aaa
adc
cmp
mov
xor
or
fisttpl
out
sub
cs
lods
movsl
pusha
add
and
push
cmp
sbb
xlat
add
cmp
mov
sbb
shl
jnp
sub
das
mov
inc
cmp
jmp
cli
cmp
pop
hlt
mov
xor
mov
lock
xor
cmpsb
inc
mov
mov
or
xor
mov
in
call
data16
loope
and
add
mov
enter
shl
add
pop
loope
shl
lret
mov
js
cmp
mov
mov
mov
mov
cmp
push
test
pop
jnp
jp
jge
adc
pop
out
push
or
popa
add
clc
stos
lea
add
sbb
mov
ret
push
in
fisubrs
dec
aad
push
adc
xor
add
cmp
loopne
ret
or
dec
jge
dec
dec
mov
daa
mov
jl
or
sar
mov
mov
js
inc
or
cmpl
jge
lret
add
dec
loop
add
cmpsl
and
imul
fsubr
orb
jl
and
pop
aaa
jmp
dec
pop
lds
daa
mov
cmp
int3
adcb
and
xor
jle
ret
lock
pushf
cmp
stos
push
add
test
loope
mov
and
sub
sub
test
adc
ljmp
bound
adc
or
push
xor
mov
in
stos
inc
dec
test
sub
adc
add
xlat
push
pop
into
std
sub
pop
ret
into
dec
cmp
xchg
inc
shlb
das
out
in
jns
xchg
adcb
xchg
or
sahf
in
or
dec
mov
ficoms
or
mov
jo
pop
add
adc
icebp
sbb
jbe
xor
xchg
xorb
cmp
jbe
inc
inc
mov
inc
out
or
loope
or
nop
mov
test
mov
int
popf
cmpsb
push
push
aam
sub
test
push
shll
mov
push
inc
out
mov
pop
arpl
enter
outsl
adc
fdivl
ss
jmp
insb
ficoms
push
js
jbe
mov
jmp
das
or
sub
cmp
jge
sarb
sbb
mov
sahf
add
adc
cltd
jge
inc
shll
icebp
dec
dec
adc
add
cmp
testb
sahf
xchg
sub
add
sub
xor
sbb
jnp
or
jne
mov
pusha
jmp
sbb
inc
push
mov
sbb
divl
lcall
insb
xor
xor
inc
roll
adc
sbb
dec
add
xchg
xor
sbb
ret
es
dec
sti
inc
jmp
mov
popa
inc
push
mov
adc
add
pop
pop
ret
mov
or
pop
jmp
addb
inc
cwtl
push
or
mov
sarl
in
mov
lock
into
push
fstps
or
add
pop
push
add
fnsave
mov
in
sub
lods
and
test
push
add
dec
mov
xchg
and
inc
pop
outsl
stos
jo
pop
or
xchg
inc
sahf
or
or
aad
popa
add
outsb
sub
mov
int
aam
jno
insb
sahf
mov
stos
inc
movb
xchg
lds
push
xchg
jecxz
iret
leave
inc
or
or
pop
ret
jmp
and
dec
adc
mov
mov
push
push
gs
adc
jb,pt
sbb
call
mov
add
and
clc
outsl
xor
enter
push
sbb
adc
mov
fwait
sbb
pop
push
xor
icebp
dec
mov
mov
jg
adc
cmp
jp
mov
sbb
mov
sarb
push
push
in
addb
call
push
mov
push
push
ja
inc
mov
loopne
lea
cmpl
ret
jmp
mov
pop
push
dec
xchg
and
pop
mov
sub
push
mov
push
push
adc
cmp
or
xor
add
adcl
adc
adc
incb
mov
push
lods
test
inc
imul
popf
and
add
movl
adc
sbb
loopne
bound
cmpsl
mov
ss
add
add
dec
cmp
arpl
ret
sub
popa
call
repnz
cmp
jle
pop
adc
fmuls
mov
outsb
das
and
jl
pop
jo
lcall
add
shr
rcrb
jne
push
add
sbbl
arpl
dec
das
leave
pop
push
add
stos
xor
in
lock
or
pop
add
mov
ret
push
arpl
inc
inc
pop
scas
inc
lea
insb
mov
or
insb
add
push
insb
xor
or
push
inc
or
jo
or
paddw
push
mov
incb
adc
dec
xor
or
push
add
ljmp
testb
jne
addl
mov
das
cmp
jecxz
mov
loop
insb
and
xchg
xchg
push
test
dec
adc
mov
lret
jne
into
jmp
push
add
push
inc
cmp
cmp
inc
in
jo
sub
mov
je
cmp
je
push
idivb
mov
cli
testb
je
cmp
mov
jo
or
mov
push
cmp
ds
sub
sub
fnstsw
testb
pop
add
add
data16
fdivl
dec
lea
addr16
popa
loop
push
inc
sbb
icebp
cwtl
cli
push
repz
adc
dec
inc
out
aas
clc
push
xor
subl
add
xor
sub
inc
cmp
and
and
icebp
jno
jmp
mov
mov
jg
std
and
and
jne
add
push
idivl
add
ficoml
push
cwtl
dec
hlt
mov
inc
and
insl
or
fisubrs
push
add
mov
push
shlb
push
pop
push
xchg
fwait
clc
jg
cmpsl
xor
les
push
push
mov
in
data16
sbb
or
inc
or
push
pusha
mov
add
ficoml
test
dec
dec
loop
or
push
add
push
push
cli
mov
mov
and
pop
addb
push
add
mov
mov
sbb
pop
andl
lock
ret
fisttps
rorl
sbb
sbb
push
repnz
roll
aaa
clc
test
cmp
leave
jmp
jl
or
dec
call
sbb
xchg
fwait
dec
adc
hlt
push
xchg
xchg
leave
lret
mov
data16
lds
fcmovnbe
adc
ffreep
test
pop
add
fcomps
mov
jmp
push
dec
jb
cli
dec
pop
pop
xor
sbb
adc
daa
js
int3
pop
or
ljmp
rclb
int3
ja
clc
subl
cmpl
push
xchg
mov
jae
adc
add
out
sbb
mov
aas
xlat
cmc
in
les
jae
repnz
jle
xor
pop
outsl
sub
mov
or
xor
mov
or
loopne
push
lock
and
xor
sbb
xor
imul
dec
jo
sub
cmp
ja
lods
aam
push
adcb
sub
add
push
jo
push
or
pop
push
cmp
jmp
and
sub
mov
push
mov
fisttpll
dec
or
add
fwait
push
fcomps
movb
sbb
and
stos
lock
and
xchg
adc
call
jne
fisubrs
add
xlat
xor
rorb
dec
pop
cmp
ret
dec
pop
push
ficompl
or
fistps
fidivrl
leave
xchg
enter
cltd
cmp
push
xchg
test
ja
cmp
mov
sub
xlat
loopne
pop
add
fisttps
adc
add
sbb
test
lods
or
pop
pusha
andb
xorl
js
jo
xor
or
adc
in
out
cmp
add
clc
sub
cmpl
push
cmpl
mov
ljmp
pop
adc
fidivl
inc
push
add
daa
lods
add
jno
dec
sub
clc
fisttpl
sub
cmp
adc
loopne
xchg
dec
adc
pusha
frstor
or
shlb
add
mov
pop
test
pop
xchg
sbb
mov
cmp
pop
je
xor
sub
inc
mov
add
dec
orb
mov
nop
adc
popf
fcomp
lret
cmp
sub
je
sarb
enter
ljmp
adc
mov
sbb
push
imul
movsl
pop
cmp
jb
rcrb
mov
mov
sbb
dec
pop
popa
sub
sbb
mov
lock
sub
xor
ja
popf
and
cmp
jmp
addr16
mov
add
inc
js
add
xor
clc
pop
push
fmulp
mov
adc
jns
cmp
fs
les
je
je
mov
adc
mov
pop
sbb
testl
pop
std
fisubrs
fisttps
ja
outsb
stos
je
push
ds
jae
in
xor
cmp
roll
movntq
mov
bound
sub
xchg
clc
xorl
ja
lock
pop
mov
xchg
xchg
add
or
dec
mov
jno
and
dec
rclb
andl
mov
cmc
sbb
ret
sub
or
pusha
and
loope
sub
sbb
and
push
inc
dec
jecxz
push
xor
xor
add
or
inc
sbb
mov
pop
adc
sahf
mov
out
jb
push
cmpsl
or
add
jmp
in
xchg
cs
push
mov
push
scas
pop
xchg
rcrb
mov
adcb
pop
lret
iret
add
test
rolb
ljmp
outsb
xor
push
insb
loopne
sbb
sahf
dec
loopne
cmp
jbe
shlb
pop
insb
mov
inc
inc
inc
test
stos
xor
cmp
pop
addr16
adcl
sarl
and
dec
push
outsb
cli
sub
gs
and
faddl
mov
mov
call
adc
scas
mov
jo
je
push
cld
cmp
push
cld
xchg
pop
stos
adc
push
mov
xor
and
cmp
jbe
fptan
sub
insb
loopne
push
xlat
in
push
pusha
and
ret
adc
mov
lret
jmp
push
adc
dec
push
dec
adc
js
sbb
mov
movsl
or
cmp
and
jne
je
jmp
sbb
loope
or
push
dec
sub
loop
cmp
out
jns
sub
adc
push
inc
sbb
and
js
pop
js
cmp
push
dec
push
pop
pop
pop
cwtl
icebp
fs
xchg
out
pushf
push
cmp
nop
jecxz
pop
icebp
jnp
add
inc
cmp
mov
cmp
sub
or
and
pushf
es
push
mov
mov
inc
pop
pop
and
aam
sbb
mov
xor
dec
and
inc
sbb
jo
fwait
and
movsl
lock
jmp
pop
or
gs
test
js
dec
in
mov
lret
push
dec
add
dec
push
aaa
mov
cwtl
jnp
jmp
in
or
cld
push
xor
jb
ret
in
and
push
jge
es
push
push
test
pop
or
adc
xor
inc
jmp
cmpsl
and
cltd
adc
les
adc
out
pop
jne
jae
mov
sbb
cmp
rcrb
and
or
adc
cmp
sub
and
mov
shll
xchg
pop
ja
dec
add
push
add
sbb
push
inc
xor
das
pop
arpl
dec
sbb
push
mov
stos
adc
adc
mov
mov
je
movl
popf
pop
mov
shll
push
bound
cld
stos
push
or
jle
rcrb
xor
test
js
and
dec
add
inc
adc
xchg
mov
pop
dec
sub
sbb
je
add
inc
ret
adc
or
scas
pop
test
and
add
or
pop
mov
andl
test
loopne
clc
jg
dec
or
in
jp
movq
movaps
aaa
out
push
enter
shlb
jle
xor
stos
dec
mov
lret
je
enter
pop
pop
jl
and
lret
or
jg
fistps
rcl
mov
cs
jnp
mov
in
add
int3
push
aam
ret
or
add
adc
mov
mov
repnz
jnp
int
ret
mov
mov
ficompl
addps
int
add
jnp
fcmovb
sbb
sbb
sub
out
jmp
mov
sbb
in
test
ja
pop
cmp
dec
mov
add
push
cmp
xor
dec
xchg
js
push
mov
xchg
daa
dec
adc
xchg
adc
pop
cld
fs
sub
xchg
pop
xor
aas
sub
ljmp
dec
and
xchg
pop
pop
js
mov
loope
xchg
sahf
out
daa
mov
jo
icebp
arpl
push
cwtl
ja
arpl
jl
mov
adc
sti
int
xchg
add
xor
and
jbe
adc
mov
add
daa
mov
fsubrs
je
in
cmp
testl
outsb
inc
mov
push
sbb
adc
xchg
pop
and
dec
iret
mov
ds
mov
inc
inc
call
ljmp
mov
je
add
cmp
jne
add
in
mov
rcll
leave
mov
cmp
xor
pop
sub
inc
cmp
inc
jbe
cmp
cmpsl
add
popa
xor
add
mov
push
loop
sbb
call
inc
mov
jne
popf
popf
fs
add
mov
jl
lock
out
or
sub
hlt
fcomi
subl
push
in
cmpsl
insl
xchg
push
sahf
push
jmp
push
idivb
sub
and
clc
push
push
push
push
adc
add
sub
push
mov
ja
jp
inc
push
jmp
mov
jne
stc
jg
inc
cmp
jne
inc
cmp
pop
xor
dec
adc
or
mov
lret
inc
loop
inc
jbe
cmpsb
cmp
mov
and
and
dec
jmp
in
mov
and
lea
inc
cmp
cmp
aad
mov
or
rcrb
mov
arpl
dec
adc
rcrb
push
add
push
push
lret
in
loope
jae
es
or
add
loopne
or
or
add
out
mov
add
lods
push
inc
jae
pop
andl
icebp
sbb
imul
hlt
cmp
lock
jle
icebp
and
mov
sarl
mov
mov
cmp
xchg
adc
loope
shlb
mov
movsl
testl
rolb
add
mov
mov
pop
sarl
shl
rol
inc
inc
cmp
aam
dec
adc
or
jne
sbb
xchg
push
fisttps
jg
jmp
jnp
adcb
sbb
aam
mov
or
loope
push
mov
adc
lahf
das
sbb
call
and
xchg
xchg
shrb
inc
or
dec
sub
cmp
imull
dec
loopne
jne
orl
std
icebp
dec
push
cwtl
repz
pushf
xchg
js
test
mov
aad
jl
rolb
add
ret
xor
lock
xchg
fiaddl
cld
inc
adcb
into
lea
stos
mov
js
xchg
push
loopne
aaa
push
call
adc
pop
js
sbb
jo
or
leave
pop
ret
cmp
mov
rcll
xor
and
data16
add
jne
idivb
aaa
adc
mov
mov
mov
push
and
into
sub
lahf
ret
push
dec
add
or
ds
add
scas
mov
inc
xor
scas
testl
lahf
je
bound
inc
push
push
aaa
inc
insl
add
testb
mov
imul
push
xor
pop
div
dec
enter
jae
or
imul
adc
or
sbb
into
lret
cmp
jae
sub
jo
push
jg
popa
outsl
pusha
fdiv
push
sbb
pop
mov
pop
or
or
insl
add
ja
pusha
sti
or
ficomps
fwait
ljmp
faddl
fadds
mov
mov
shl
ret
shrl
mov
sbb
out
dec
xor
mov
pop
decl
int3
or
movsb
xor
adc
add
fiaddl
test
insb
jecxz
mov
jb
lcall
vmwrite
sbb
jo
rol
push
dec
jge
jb
sub
sub
push
and
mov
pop
push
fstpl
mov
inc
fidivs
xor
jne
outsb
fadds
cmp
aad
push
inc
pop
pop
adc
xor
pop
xchg
fwait
and
sub
xchg
sbb
lret
add
add
or
sbb
lds
jecxz
sbbb
sbb
lods
or
pop
xchg
cmp
loop
shrl
pop
and
les
jo
push
movsb
and
fsubl
sub
push
cmp
jb
xor
imul
sbb
ss
jp
lcall
sub
xchg
js
cmp
je
cmpsb
fcoml
mov
movsb
mov
mov
lahf
push
nop
sbb
es
adc
or
pop
cmpl
sub
mov
jmp
je
xlat
pop
xchg
mov
mov
jmp
add
nop
add
pop
sbb
add
fnstcw
xor
or
jle
in
subb
add
call
push
and
inc
orb
fistpl
push
push
rcl
and
inc
pop
hlt
mov
dec
inc
add
lods
mov
testb
mov
rcrb
inc
mov
adc
fwait
push
adc
mov
inc
rorb
or
sbb
mov
je
inc
scas
cli
jns
ja
pushf
push
aas
push
jp
push
add
inc
divl
ljmp
dec
pop
add
lock
push
cld
push
push
dec
push
clc
ret
and
les
jmp
inc
loope
and
add
sbb
or
push
xchg
or
mov
or
and
jp
or
mov
and
jge
clc
lcall
mov
or
adc
add
js
and
add
int
arpl
adc
cltd
cwtl
mov
or
push
and
scas
test
cmp
sbbl
or
cmp
fildll
dec
mov
in
mov
daa
in
jno
adc
jo
cmpsb
add
in
sbbb
das
pop
popa
mov
add
cltd
cmp
and
dec
repz
xor
mov
pop
ret
repnz
cltd
lods
or
push
inc
cs
in
and
mov
add
cmc
jle
push
inc
xchg
xor
les
mov
pop
push
or
xchg
test
cmp
pop
imull
or
cmpsb
lea
fdivl
cmp
adc
inc
add
stos
fadd
inc
gs
push
aaa
cmpsl
ret
jmp
bound
mov
add
mov
popa
ret
xchg
pop
sbb
push
clc
mov
adc
jo
nop
inc
rorb
and
mov
mov
or
add
push
pop
outsb
inc
decl
add
mov
cmp
je
dec
xor
sub
aas
or
bound
ret
lea
mov
adc
imul
add
push
pop
add
add
repz
daa
add
fstl
sbb
adc
cmp
js
add
mov
flds
sbb
inc
fiadds
adcl
push
imul
add
or
pop
enter
dec
or
jb
cmp
sub
cmp
pop
enter
or
jns
loop
or
ja
cmpb
inc
jns
push
nop
or
pusha
in
ja
push
shrd
and
adc
cmp
adc
popa
in
inc
or
adc
lret
add
add
adc
movsl
test
adc
lcall
adc
and
js
push
push
adc
mov
pop
pop
in
lcall
sbb
sbb
pop
enter
add
sbb
push
and
and
push
sbb
push
sbb
je
pop
sbb
enter
bound
sbb
add
push
pop
and
roll
pop
jne
add
mov
sub
cmp
aam
pop
or
mov
cmp
xchg
xor
mov
shlb
inc
cmp
add
mov
cmp
je
jns
jns
lcall
rol
lea
repnz
cmpsl
repnz
cmp
xor
out
test
iret
out
push
fcoml
dec
push
add
call
in
call
and
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
bsr
std
out
cmpsb
in
std
sbb
imul
nop
adc
ljmp
add
xchg
sbb
sub
cmp
inc
xor
es
jecxz
push
nop
ja
std
sti
in
in
enter
icebp
inc
mov
stc
daa
xchg
sti
pop
insb
nop
and
out
cltd
outsb
xchg
inc
pop
and
add
and
sbb
pop
jmp
jmp
cmp
mov
add
xchg
popf
cli
sbb
js
out
out
out
mov
sbbb
inc
repnz
cli
push
cli
dec
push
cmp
stc
repz
lret
add
repz
sar
push
xor
sbb
pop
fstpl
testl
negl
fwait
xor
mov
stc
inc
or
pop
out
clc
cmp
xchg
clc
sti
sti
sti
cltd
pop
enter
cld
inc
cld
and
inc
pusha
fists
rcll
cmp
add
pop
and
xor
sub
and
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
xchg
cli
imul
mov
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
or
dec
add
adc
pusha
pop
add
and
fwait
in
mov
adc
push
and
and
fstps
test
xchg
sbb
lahf
out
xor
and
mov
insb
ss
push
notl
xlat
adc
cmp
add
dec
push
jne
push
fnstcw
repz
push
sub
push
pop
cmp
test
jbe
jmp
add
dec
and
add
xor
inc
inc
fcomi
jle
rolb
add
sub
sbbl
mov
lcall
loope
inc
int
lret
ds
adc
cmp
nop
std
cld
pusha
adc
and
ja
lock
mov
gs
push
xchg
stos
mov
xchg
mov
sub
inc
adcl
mov
push
pop
ret
cmp
je
push
and
pop
repnz
pusha
inc
jo
loop
pusha
fmuls
cmp
or
and
fsubs
add
push
cmp
jo
stos
insl
outsl
fmuls
and
add
and
push
adc
adc
and
repnz
add
mov
pop
in
inc
inc
add
push
push
decl
cmp
dec
inc
and
push
and
pminsw
icebp
jb
cmpl
sahf
add
scas
loope
push
xor
xor
fnstcw
jo
mov
add
aam
xor
add
rorl
xor
int3
je
rep
mov
dec
ljmp
leave
sarb
push
jno
add
loopne
push
ret
ljmp
leave
rolb
fwait
dec
xor
movl
add
push
adc
push
nop
cmp
sub
pushf
fdivrp
add
sar
loop
add
js
insl
jo
push
jne
std
out
xchg
ja
jb
pop
ja
add
jle
dec
or
inc
inc
loopne
in
inc
insb
cmp
rcr
or
jmp
jb
icebp
out
mov
lea
push
inc
and
gs
pcmpgtd
add
test
roll
xor
cmpsb
or
loop
or
xor
mov
je
pop
pusha
shll
add
sbb
sbb
fstps
cmp
enter
add
add
cltd
cmp
into
sbbl
imul
pop
js
mov
jecxz
shlb
xor
inc
pop
pop
xchg
and
nop
lock
cmp
outsb
neg
push
js
add
and
lods
push
mov
sub
lods
push
and
push
aam
cmc
pop
fiaddl
sti
inc
jo
mov
add
lcall
lea
cmp
jne
out
cmc
push
orl
add
sub
adc
into
aas
adc
jg
push
or
xor
add
adc
dec
push
jmp
mov
push
stc
outsb
xor
or
and
out
outsb
xchg
adc
insb
adc
pop
jne
dec
add
or
lds
aaa
add
lret
or
neg
mov
nop
hlt
push
mov
sbb
std
jg
pusha
fidivs
lret
sub
cmp
adc
xlat
loopne
jmp
cmp
jae
push
and
jb
movsb
cmp
sbb
test
mov
mov
and
add
or
push
pop
cld
imul
cmp
cmc
mov
push
cmc
add
sbb
push
inc
dec
or
ja
mov
push
lret
jbe
inc
mov
mov
ret
jg
and
pop
pop
lods
push
inc
test
mov
lods
mov
in
sarb
sbb
imul
mov
inc
and
cmp
and
stc
fwait
outsb
bound
std
cmp
adcb
xchg
sbb
mov
cli
cld
fisttpl
sbb
cmp
or
add
cld
dec
outsb
loopne
loopne
sbb
jo
int3
push
cmp
jne
mov
rcr
mov
jne
es
lods
int
int
and
adc
or
cs
or
iret
iret
jnp
pop
jmp
adc
jmp
std
jo
aaa
dec
std
jmp
cld
push
sub
inc
shlb
inc
test
mov
adc
adc
inc
inc
push
jb
mov
je
in
mov
shr
repnz
jmp
loop
sbb
int
or
or
add
adc
jmp
pop
leave
jns
adc
out
lock
inc
inc
js
pusha
pusha
lea
push
or
push
in
lods
std
or
and
aam
lret
test
push
push
and
adc
push
pop
adc
and
sbb
sbb
cmp
xchg
mov
imul
add
cmpl
cmp
fidivl
mov
aam
inc
push
fimull
in
sbb
add
repz
sub
bound
mov
inc
sarb
cwtl
or
push
mulb
fstl
inc
out
stos
fstps
stc
aad
hlt
push
jmp
mov
xor
adc
jne
pop
add
or
cmp
sbb
or
dec
outsb
out
jns
mov
push
test
sbb
mov
lret
pop
outsb
sbb
sbb
sbbl
sbb
add
adc
add
pop
scas
xchg
push
call
dec
cmp
or
mov
pop
sub
add
inc
pop
hlt
jae
ret
jmp
pop
adc
lret
clc
mov
inc
mov
add
mov
inc
test
dec
stc
or
push
stos
add
testb
mov
sub
movsb
xchg
clc
lock
sbb
inc
or
clc
mov
test
push
mov
mov
dec
fdivrl
inc
adc
and
mov
add
imul
lret
sbb
jbe
xor
das
cmp
dec
sbbl
lret
add
sbb
push
in
dec
or
faddl
inc
shlb
mov
push
pop
and
aas
lcall
pop
test
push
test
add
or
repz
xor
movsl
jmp
mov
add
ss
test
enter
cs
in
push
out
mov
and
dec
push
and
pop
rorb
scas
adc
xlat
xor
mov
int3
lea
xchg
add
push
movl
and
add
add
lret
or
push
mov
jns
jns
cwtl
jno
mov
inc
iret
repz
in
call
iret
repz
hlt
hlt
clc
clc
test
lea
andl
fldcw
in
push
clc
mov
xor
inc
mov
int
pop
sti
and
cmp
and
lea
xchg
sub
jl
cld
or
push
cld
out
jo
neg
adc
and
daa
stc
sub
repz
nop
test
test
rcr
add
fisubs
add
sahf
inc
push
out
mov
dec
in
add
xor
adc
pop
add
jnp
xor
and
sub
iret
repz
xor
inc
dec
push
addr16
mov
aaa
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
dec
lcall
adc
js
es
addb
std
das
les
xor
mov
mov
incl
inc
decl
mov
std
jne,pn
pop
pop
jg
jbe
jne
mov
xor
mov
sbb
cltd
pop
idiv
add
mov
pusha
or
xor
add
imulb
dec
sbb
dec
mov
mov
xor
decl
aam
bnd
cmp
jae
dec
out
lods
inc
push
out
mov
jae
pop
jbe
or
push
mov
dec
push
jmp
pusha
add
sub
adc
xorb
hlt
inc
cmp
stos
or
mov
in
mov
push
lods
sub
lret
add
adc
in
mov
sbb
sbb
dec
dec
je
push
push
push
inc
push
dec
cmp
pop
adc
mov
xchg
insb
adc
dec
repz
push
and
mov
xor
pop
decb
push
jl
or
or
inc
es
out
rcrb
cmp
das
dec
sub
in
inc
add
lods
add
add
gs
sbb
filds
pop
dec
pop
addb
add
adc
sub
dec
or
pop
xor
adc
pop
imul
sbb
mov
lret
in
and
jmp
cmp
sub
sub
sub
insl
or
aas
jge
push
push
push
clc
pop
cltd
pop
idiv
jle
ret
xchg
or
push
xchg
inc
out
cmp
and
or
jmp
or
dec
out
xchg
mov
sbb
push
pop
inc
and
orb
xchg
mov
scas
rclb
imul
add
jmp
jl
mov
sbb
call
pop
sub
or
je
insb
sub
add
dec
ret
sbb
sbb
sbb
add
insl
xchg
jne
jb
inc
pop
incb
inc
jns
sbb
push
dec
adc
cmp
sahf
mov
or
incl
pop
sti
cmp
loope
mov
sub
sar
lret
fadd
inc
js
inc
out
divl
inc
mov
add
movsb
loop
mov
push
jecxz
sub
cmp
mov
jge
pop
je
sbb
add
add
data16
xchg
es
jno
mov
mov
push
enter
in
dec
add
dec
inc
and
out
jnp
jne
mov
mov
add
adc
test
adc
push
lahf
pop
push
je
mov
fs
dec
or
lods
cmpsb
and
push
hlt
push
lcall
mov
push
aaa
mov
jle
test
cmp
pop
stc
pop
push
adc
fldt
stos
xchg
inc
jmp
push
ret
loop
push
pushf
inc
adc
sub
and
lea
and
insb
subb
adc
push
jno
or
xchg
arpl
push
mov
jge
imul
push
hlt
mov
call
push
adc
mov
and
and
inc
adc
in
jns
testl
push
scas
lea
jnp
rcrb
inc
jge
mov
mov
dec
ljmp
dec
pop
imul
xor
adc
clc
push
pop
mov
lods
fmul
fiaddl
hlt
dec
js
mov
adc
icebp
imul
mov
decl
inc
jg
jbe
inc
xor
push
xchg
mov
or
add
pop
mov
das
lock
clc
mov
adc
dec
inc
inc
cmp
je
xchg
mov
mov
sbb
adc
add
fidivrl
dec
dec
mov
and
mov
or
mov
mov
pushf
add
data16
cld
inc
call
adc
push
jmp
push
mov
mov
push
inc
sbb
jae
inc
daa
push
or
mov
and
pop
les
dec
or
bound
cmpxchg
push
add
lret
mov
das
dec
push
fs
hlt
pop
mov
jecxz
add
fbld
dec
or
mov
add
lock
ljmp
test
inc
lahf
jbe
cmp
mov
and
inc
and
mov
lock
shll
sub
inc
or
add
scas
add
push
pop
inc
int
inc
push
fs
fs
mov
dec
push
ja
sbb
frstor
xchg
mov
lods
sbb
dec
movsb
jb
jns
or
sub
sahf
dec
lret
mov
push
adc
add
dec
fcomp
xchg
rcrl
add
rcll
lea
orl
pslld
push
jmp
das
jne
inc
ds
jmp
dec
sbb
mov
and
mov
aad
sbb
mov
imul
lea
mov
ret
dec
mov
xchg
in
mov
call
adc
lret
gs
push
push
xchg
loop
repz
in
or
sub
div
mov
jp
lahf
jge
outsb
jns
cmp
inc
push
jmp
push
mov
call
inc
sbb
mov
inc
mov
mov
push
sbb
orb
sbb
or
sahf
add
jmp
cmp
clc
or
in
ja
or
inc
inc
int3
mov
lcall
testl
imul
shlb
out
sub
cltd
pop
stos
or
push
fidivrs
lock
pop
sub
es
inc
lea
aas
pop
cli
stos
mov
sbb
and
pop
das
repnz
dec
test
mov
rorb
leave
jne
inc
jb
sbb
in
addr16
and
dec
sahf
popf
movsl
pop
pusha
leave
pop
dec
jnp
rcr
out
pop
xor
adc
inc
ds
es
or
cmp
mov
adc
inc
cmpsb
iret
rep
mov
pop
mov
test
fmull
pushf
add
sbb
jne
fchs
adc
dec
adc
push
imul
sub
mov
mov
pop
aad
mov
arpl
jmp
pop
arpl
xchg
push
sub
gs
fs
and
inc
ds
mov
xchg
add
ss
lds
mov
lock
mov
pop
sbb
cld
adc
sub
les
adc
loop
push
jb
int
rorl
cmp
inc
inc
mov
jbe
rorb
jbe
outsb
pop
repnz
jbe
outsb
add
push
add
pop
shlb
pop
mov
aas
jecxz
mov
andl
xchg
bound
lods
pop
ret
xor
or
subl
in
and
add
lock
test
or
gs
clc
rclb
and
xor
enter
or
or
dec
adc
jecxz
adc
push
int3
cmc
push
mov
pushf
enter
sbb
pop
sub
jmp
nop
mov
xchg
add
or
pop
adc
data16
clc
outsl
loopne
call
jmp
push
popa
stc
cmp
xor
add
xchg
gs
push
popf
mov
or
adc
adcb
push
add
sbb
iret
pop
sbb
cld
arpl
push
jo
mov
fidivrl
xchg
loope
cmp
sub
imul
rol
adc
lock
pop
jbe
add
or
dec
or
sbb
xchg
inc
imul
lret
or
mov
sbb
pop
or
dec
mov
addl
hlt
mov
fstpt
add
addb
mov
sub
xor
add
dec
xchg
jle
and
inc
xchg
loope
mov
jg
adc
imul
or
pop
lcall
xchg
cmp
mov
or
jl
jbe
xor
rcrb
imul
lock
adc
fwait
mov
scas
lock
cmp
pusha
sbb
fisubs
stos
sbb
icebp
sub
incl
mov
fs
cmpsl
aam
adc
sub
movsb
mov
pop
mov
mov
insb
lods
dec
sarb
push
ret
mov
push
xor
icebp
loopne
add
gs
xor
fisubl
ret
inc
push
dec
adc
jb
adc
js
lret
pop
frstor
jmp
mov
incb
ds
dec
push
cltd
clc
mov
push
sub
ja
imul
mov
mov
cli
or
add
rclb
js
jmp
cmp
rolb
pop
test
xchg
jbe
pop
cmp
jb
pop
add
cld
jb
lahf
mov
inc
fdivrs
dec
mov
mov
dec
dec
mov
inc
test
orb
testl
fmull
jmp
dec
rol
pop
call
outsb
dec
out
cmp
or
test
js
or
imul
jmp
mov
mov
cmp
jno
add
cmp
sbb
inc
add
sbb
cmp
movsl
aad
pop
jg
mov
shr
adc
orl
lret
dec
mov
push
insl
rclb
mov
sbb
rol
jae
dec
push
repz
mov
sub
pop
jle
xchg
xor
pop
add
and
push
xchg
mov
add
lock
jbe
or
pusha
lock
lods
pop
push
clc
pop
mov
push
lret
adc
push
dec
gs
dec
xchg
pop
push
aam
sub
or
sub
lcall
repz
mov
pop
mov
ret
test
add
cmp
pop
sub
adcl
pop
movsl
xor
adc
inc
nop
sub
in
push
adc
push
pop
dec
ss
adc
jo
rolb
sti
inc
adc
mov
ret
es
inc
scas
and
popa
sbb
pusha
push
push
xor
add
jo
pop
pop
jne
outsb
or
out
popf
inc
popa
mov
inc
sub
insb
test
insl
aam
push
add
push
inc
and
jmp
pop
cmp
fcomip
jae
add
arpl
shll
imul
dec
ret
or
rorb
sbb
aaa
mov
lods
dec
xchg
das
daa
xchg
sbb
cmp
mov
rcrl
stos
mov
enter
sub
and
rol
inc
add
jmp
leave
das
cmpl
push
sahf
xchg
rcrb
add
pop
ret
adc
ljmp
or
mov
fstl
rcrb
sbb
dec
loopne
lock
inc
out
sbbb
sahf
mov
aas
or
cmp
or
sub
xor
push
in
mov
push
sub
cmp
lds
fs
push
mov
mov
xlat
xor
add
jnp
or
mov
je
add
iret
xor
xor
dec
or
pop
aam
movb
push
adc
call
mov
sti
sbbb
or
lea
dec
xchg
xchg
xchg
ficoms
dec
pop
or
jg
push
lret
and
clc
dec
sbb
inc
pop
fadds
sbb
popf
pop
or
sbb
add
xchg
orb
leave
cmp
stc
mov
loope
sub
adc
and
push
mov
mov
inc
rcrb
lods
push
sub
and
sbb
adc
clc
ficompl
les
rorl
enter
xchg
cwtl
add
and
lds
mov
push
or
push
das
push
mov
test
aam
adcl
mov
mov
enter
xor
repnz
mov
and
mov
sbb
repnz
adc
popl
rcll
cmp
add
inc
pop
test
and
loopne
movl
cmp
sarb
insb
pushf
xor
sarb
test
cmp
fsubl
mov
shlb
sarl
lods
and
sbbb
mov
xor
loopne
call
add
push
mov
movsb
je
mov
or
imul
adc
or
shr
push
adc
in
xchg
cwtl
inc
pop
in
xchg
mov
add
out
jle
shl
and
lret
subb
xor
pop
sub
loopne
addl
inc
dec
jne
lea
cld
cmp
or
add
sbb
enter
call
pop
fsubrl
outsl
sbb
push
adc
add
test
inc
out
push
notl
and
and
lea
cmp
divb
add
sub
ja
sub
inc
xchg
or
aas
push
push
addl
call
testl
push
repnz
push
xchg
insb
push
mov
lods
jns
std
push
cmp
add
cld
sti
xor
popf
dec
and
int
pop
addb
sbb
fcmovne
movsb
lods
jmp
and
je
and
inc
notb
movb
aad
jmp
mov
add
inc
pop
mov
and
fstp
mov
cmp
push
mov
lret
push
imul
jmp
cmp
push
and
and
les
add
je
inc
pusha
stc
insl
mov
scas
adc
scas
pop
push
ja
mov
inc
jo
jg
xchg
ds
push
test
or
rcr
or
sbb
adc
pop
or
ss
jg
cwtl
mov
std
jno
scas
sub
shll
mov
and
insb
push
cld
pop
cmp
test
pop
js
popa
mov
daa
lods
ljmp
add
sbb
aam
leave
add
inc
cmp
std
jne
negb
nop
adc
jmp
sub
test
add
stos
enter
test
shrl
sarb
mov
add
in
mov
inc
mov
adc
xor
addl
push
mov
sub
dec
movsl
or
test
xor
or
movsl
fnsave
push
jmp
aad
movl
push
and
xor
cli
stos
dec
lea
push
inc
rolb
lea
cmp
add
push
call
and
jne
mov
add
cmc
inc
pop
leave
inc
test
out
lea
xor
leave
and
jmp
mov
into
sub
test
fs
adc
mov
inc
cmp
ljmp
inc
cmp
sti
xchg
sbbb
inc
cmpb
andb
jb
mov
xor
mov
mov
inc
mov
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
sub
or
ss
sbb
cs
mov
jmp
inc
push
mov
inc
dec
jne
mov
jae
pushf
test
addb
add
gs
push
scas
dec
push
jnp
test
xor
pop
mov
inc
loope
js
sbb
insl
cli
dec
loopne
adc
mov
cmp
push
adc
aam
or
inc
or
push
and
addr16
mov
loopne
mov
lds
dec
sbb
popf
add
mov
push
cs
inc
loopne
ret
mov
fcompl
inc
adc
xor
push
dec
mov
push
push
adc
sar
test
ror
adc
and
out
insl
mov
mov
mov
jp
sbb
pop
outsl
adc
sbb
pop
loopne
or
pop
push
clc
jle
inc
jmp
xor
dec
sbb
mov
inc
sbb
jmp
mov
jns
ss
mul
jmp
add
inc
insl
adc
aad
es
xchg
mov
aam
adcl
icebp
ss
in
lret
adc
inc
mov
std
and
jmp
movsl
xchg
add
mov
mov
dec
jnp
nop
lret
cmp
es
pop
xchg
lock
pop
sbb
pop
adc
mov
jae
xor
ds
inc
mov
jmp
lahf
das
adc
in
sbb
les
xchg
xchg
int3
push
subb
fcmovu
mov
and
stos
addr16
add
push
les
jne
pop
inc
stos
cmova
fidivs
out
jle
stc
mov
decb
push
push
cmpl
les
push
add
pop
cmp
dec
pusha
mov
sahf
inc
add
adc
decl
jne
sbb
add
mov
sbb
xor
fstl
mov
loopne
lea
jnp
mov
mov
aaa
cmpl
push
pop
out
ja
ret
jo
mov
adc
rcrl
cmp
jo
outsl
xor
jo
xchg
add
lods
xor
fmulp
dec
xor
je
push
xchg
mov
sub
test
cmp
xor
rcrb
in
in
clc
mov
or
adc
test
push
lock
orb
dec
sbb
jo
loope
mov
fs
lea
jle
ds
cltd
inc
adc
or
rcll
or
jbe
pop
mov
fst
nop
add
lock
push
cmp
rcr
cmpxchg
roll
lret
aas
or
mov
hlt
mov
pop
cmp
push
pop
xor
out
inc
sti
adc
add
cmc
add
push
xor
test
mov
cs
call
cmc
sbb
cwtl
sbb
js
dec
repz
vpaddsw
sbb
sub
fucomp
or
mov
xchg
out
inc
push
ss
mov
add
push
sub
dec
ror
inc
lret
pop
inc
cwtl
and
sbb
pop
xchg
in
mov
push
cld
push
jo
lods
adc
cmp
mov
test
pushf
sbb
shlb
jo
add
pop
xchg
jecxz
insb
sbb
jbe
bound
or
cmp
outsl
add
and
dec
push
inc
sub
jmp
das
mov
adc
dec
jae
sbb
or
movsb
pushf
xchg
cmpsl
dec
aas
inc
sub
push
add
or
adc
cmp
xor
rol
call
dec
iret
push
mov
adc
loopne
cli
pop
pop
sbb
clc
inc
and
mov
shrb
sub
sbbl
enter
dec
pop
cmp
xchg
and
jle
mov
push
bound
jmp
repz
andb
jbe
lret
mov
mov
adc
pop
aaa
es
test
rol
xchg
int
jg
or
push
subl
adc
cmp
xor
test
mov
cwtl
popf
jnp
mov
pushf
cltd
pushf
cmp
push
jle
dec
rcll
or
cltd
je
lods
daa
test
or
jno
push
int3
dec
ja
shll
pop
add
ljmp
in
daa
imul
sub
inc
cltd
movsb
jb
mov
cmc
dec
or
loopne
sbb
lds
push
xchg
push
xor
xchg
mov
and
xor
pushf
sub
add
dec
lock
mov
movsb
jp
inc
movsb
xchg
pop
repnz
andl
cld
dec
lea
je
mov
das
mov
xor
jle
sub
loopne
sub
sub
aam
shrb
mov
data16
popf
enter
das
test
movsl
shrb
testl
add
shll
enter
dec
cld
adc
jno
aam
sub
aam
and
adc
xchg
mov
jp
push
or
jno
dec
and
xchg
dec
mov
pop
rolb
out
jmp
in
js
jmp
jge
dec
and
dec
jb
mov
mov
cmp
or
sbbb
and
icebp
mov
cld
int3
es
mov
or
js
inc
dec
adc
pop
test
sahf
stos
pushf
cwtl
pop
xchg
aas
push
sbb
es
clc
pop
pop
lods
nop
push
leave
test
pop
out
fidivrs
push
pusha
pop
push
inc
popa
jl
dec
inc
cmp
xlat
inc
loope
fsts
jmp
sbb
cmp
pop
and
ret
dec
pop
nop
xor
pop
push
sbbb
jb
pop
and
pop
out
loopne
or
in
iret
repz
hlt
cld
add
pop
pop
sbb
inc
popa
pop
inc
adc
out
xor
cmp
dec
pop
pop
pop
fs
add
mov
insb
sbb
inc
je
push
push
cs
push
sbb
arpl
orl
inc
fstp
dec
pusha
jmp
add
or
add
daa
sbb
loope
mov
loopne
je
insb
lret
jne
sub
fisttpl
mov
or
inc
mov
pop
mov
lods
mov
sbb
je
mov
pusha
dec
push
jp
aam
movb
out
aas
add
pushf
adc
or
dec
shll
or
lock
add
and
ret
adc
jb
lea
pop
add
and
hlt
cmp
mov
xor
lods
lods
and
adc
hlt
es
xor
pop
and
in
test
testl
xchg
mov
adc
cmpsl
fbstp
adcl
rorb
jl
or
pop
sub
push
jge
jmp
scas
mov
and
lods
xor
xchg
add
and
jne
or
push
adc
mov
pop
out
inc
xor
add
adc
inc
test
adc
push
add
dec
push
jno
cmp
or
test
or
inc
xchg
iret
imul
xor
out
sbb
and
cwtl
outsl
push
mov
aam
pop
lock
sbb
aam
add
iret
xor
ret
mov
push
or
shr
jle
test
ja
enter
pop
inc
call
sub
cmp
rorl
push
mov
xor
fadds
sbb
int
pop
mov
and
mov
push
inc
and
or
add
lock
fdivl
push
adc
sub
int3
loopne
mov
pop
push
hlt
iret
sub
cmp
mov
or
or
inc
sbb
pop
adc
dec
jno
les
or
sbb
xchg
fimull
dec
mov
pop
add
jg
lea
inc
cmp
inc
push
cmc
addb
add
dec
push
int3
push
imul
xor
loope
les
daa
jmp
dec
call
adc
mov
pop
cmp
dec
dec
out
in
add
xchg
mov
loop
sub
popa
xchg
hlt
mov
inc
outsb
push
mov
fstp
mov
test
or
test
mov
sub
or
jecxz
nop
js
les
fcoml
jecxz
mov
dec
add
mov
cmp
xor
push
mov
adc
jbe
and
or
inc
shrb
push
fsubl
cmp
or
inc
ret
std
mov
cmp
pop
divl
adc
lock
ds
mov
dec
into
pop
or
sbb
pushf
rcrl
movsb
xor
inc
dec
ljmp
jns
cmp
adc
loopne
cld
or
scas
mov
add
add
inc
inc
jp
mov
xchg
rcrb
and
ret
lahf
cwtl
jl
rclb
ret
cmp
mov
push
push
xor
femms
lock
dec
jmp
adc
and
adc
or
push
shrl
or
mov
pop
add
add
push
pop
add
nop
inc
fsubrl
int
lcall
stos
push
out
dec
je
sub
inc
out
repnz
xchg
test
jecxz
test
sub
or
lret
in
clc
aam
fadd
fdivrs
cs
cmp
mov
mov
arpl
loope
mov
mov
pop
lods
jae
addr16
popa
mov
movzwl
fbld
loopne
or
cmp
xlat
clc
or
mov
pop
pushf
shrb
add
dec
movsb
shr
loop
ret
lea
ficompl
jl
clc
movsbl
wrmsr
jno
mov
sbb
pop
sar
pop
mov
mov
xchg
pop
dec
lahf
jno
push
push
pop
ss
lea
sub
xor
popa
xor
sub
mov
push
decb
add
ljmp
sbb
scas
pop
xor
pushf
pop
or
add
xchg
push
or
add
push
mov
in
dec
jnp
pop
cld
or
aam
in
fwait
push
lcall
ret
arpl
or
or
ja
movsl
mov
cmp
nop
imul
sbb
push
and
cwtl
je
or
inc
insb
xorb
int3
je
lock
test
outsb
loope
insb
cmp
lods
js
pusha
sub
test
ficoml
pop
and
pop
or
nop
fcomi
jle
xor
mov
dec
in
xchg
xchg
xor
movsl
jg
dec
xor
es
or
imul
pop
outsl
cmc
jne
cmp
dec
xor
pop
xlat
cmp
mov
jo
push
jbe
mov
xor
jbe
adc
or
sbb
jnp
clc
mov
inc
je
pop
push
or
in
jmp
mov
ds
mov
ret
add
hlt
sbb
les
cld
push
mov
and
push
ds
addr16
push
jae
out
testl
in
xor
pop
fidivl
jne
das
mov
out
ret
loope
adcl
pop
sbb
dec
movsl
or
mov
sub
enter
add
mov
or
in
sub
inc
mov
cmp
or
mov
clc
stos
mov
add
push
insl
cmp
xor
pop
movsb
xor
negl
pop
faddl
call
dec
lret
pusha
mov
add
fdivs
jmp
test
sti
mov
push
mov
movb
xor
icebp
test
sub
fildll
sarl
lcall
inc
divb
inc
mov
dec
mov
pop
xor
cmp
push
sbb
mov
or
cmp
les
jns
push
rcrl
out
pop
sahf
test
icebp
jb
sub
shrb
gs
into
add
addr16
sbb
push
outsb
je
jns
or
test
insl
pusha
outsb
jp
out
je
aas
add
xor
xchg
test
xchg
xor
add
push
movsb
mov
adc
adc
popa
push
sbb
pop
jo
lds
jecxz
push
stos
add
push
add
ret
pop
testl
mov
jne
mov
jmp
cmp
jecxz
popf
jmp
push
insl
cmpl
incl
cwtl
xor
sahf
add
int
lret
mov
or
mov
xor
adc
dec
cld
cmc
mov
rcll
hlt
dec
sub
sbb
bound
inc
mov
or
and
xchg
mov
imul
adc
cwtl
inc
call
aas
nop
imul
ds
popa
stos
out
inc
adcl
mov
test
push
push
outsb
mov
data16
addr16
decb
mov
test
inc
daa
add
adc
movsl
loope
mov
data16
push
loope
ds
sub
lret
ja
scas
cmp
test
popa
jbe
fbstp
inc
push
fwait
push
cmpsb
jmp
ret
jbe
sub
cltd
jmp
aaa
int3
je
cltd
aam
ss
dec
sub
mov
jl
jl
jae
mov
inc
add
mov
jecxz
nop
pop
fimull
xlat
icebp
xchg
mov
or
sbb
dec
sbb
call
mov
or
jne
and
lea
push
nop
mov
or
push
inc
and
mov
and
fisttps
xor
xchg
dec
icebp
pop
lcall
dec
jmp
pop
xchg
loop
mov
sub
inc
cmp
ret
je
into
cmp
and
and
xor
cmc
push
jmp
mov
ret
inc
les
jmp
dec
call
popa
inc
inc
mov
clc
rcll
bound
sti
pop
add
ss
add
dec
jl
jecxz
jmp
sub
sub
push
test
cmpsb
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
test
mov
push
jp
dec
xor
dec
fdivrl
lea
stos
jno,pt
jns
mov
adc
push
jbe
dec
ret
sub
push
fdivs
add
cmp
outsb
shlb
call
stos
or
nop
popa
mov
movsl
loopne
sub
pushf
test
test
add
cmpsb
popa
and
cmp
jb
sbb
sti
push
and
and
cmp
add
push
cmp
pop
das
xchg
jo
adc
icebp
jnp
outsl
movsl
daa
pop
mov
fiaddl
in
sub
movsb
cmp
adc
add
push
out
movsl
add
fbld
push
nop
mov
sub
push
mov
imul
addr16
jp
and
addl
ss
mov
sbb
ss
rolb
add
sbbb
or
inc
fiaddl
scas
inc
mov
ficoms
sub
idivb
pop
aas
add
mov
add
pop
push
cmp
fwait
lock
mov
inc
add
repnz
leave
fcompl
and
rolb
and
lcall
cs
dec
loopne
mov
xchg
inc
outsb
sbb
pop
hlt
std
arpl
dec
or
add
mov
jl
push
pop
aas
cmpsb
xor
fcoml
add
out
sti
insb
insb
cmp
out
inc
loope
jae
or
add
sbb
jge
mov
les
sub
cmp
push
cmpsb
push
fisubrs
sbb
lods
arpl
push
jo,pt
jmp
push
cmp
add
insb
xchg
sbb
xor
mov
imul
adc
sub
data16
xor
arpl
or
or
lea
test
cmp
adc
popa
subl
inc
dec
bnd
push
or
adc
enter
mov
add
mov
fmull
adc
jmp
add
in
add
adc
sub
loop
add
jnp
test
outsb
cmc
mov
inc
int3
add
dec
sbb
jbe
xor
and
push
lea
mov
enter
outsb
adc
xchg
adc
jecxz
aaa
inc
divb
sar
dec
cmp
jbe
push
pop
sbb
cmp
jne
orb
mov
mov
shr
lea
not
and
decb
jne
fcoms
mov
sbb
lea
xor
pusha
cmp
pop
add
cmp
adcb
add
add
loop
lods
scas
pop
and
push
or
std
mov
push
sub
jmp
clc
and
notl
add
shlb
and
add
add
mov
pop
stos
sub
fimuls
push
out
pop
int
push
lock
jno
jno
mov
pop
decl
and
add
shrl
xor
dec
loopne
mov
xor
cmp
push
jle
pop
xor
add
fildl
leave
xchg
cmp
sbb
mov
int3
inc
adc
testl
fdivrl
pusha
mov
mov
inc
mov
mov
inc
mov
shrd
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
dec
jo
iret
inc
xor
inc
and
and
xlat
adc
push
and
iret
adc
stos
pusha
pop
xor
push
insb
inc
shl
add
scas
jge
jp
push
call
aas
gs
push
or
int3
and
sbb
mov
inc
aas
jnp
add
decb
adc
inc
pop
ljmp
and
pushl
inc
iret
xchg
push
push
mov
push
inc
sbb
mov
mov
push
sbb
dec
adc
loope
hlt
sbb
push
jmp
add
adc
mov
pop
or
das
mov
inc
inc
mov
rcrl
xor
add
gs
push
and
push
cwtl
outsl
push
xor
sbb
js
add
lahf
inc
mov
les
dec
sbb
dec
test
cmp
or
out
rcrb
stos
xor
adc
adc
sbb
inc
dec
int
jmp
orl
or
add
sub
pop
ret
or
push
mov
cmpsl
add
rolb
ljmp
rorb
clc
incb
pop
dec
add
stos
inc
or
hlt
or
pop
push
cltd
out
mov
popa
push
test
or
sbb
cmp
inc
mov
sub
shr
jg
filds
inc
orl
orl
sti
cwtl
les
mov
push
push
inc
cld
lock
push
add
sub
sbb
je
sub
pop
sar
add
mov
jl
adc
dec
jb
adc
fs
inc
call
mov
inc
mov
pop
incl
cmp
inc
jne
or
lds
ljmp
repz
cmpsl
or
adc
xor
sbb
sub
pop
shr
add
ror
jb
cld
loop
pop
sub
dec
cmp
add
sub
mov
pushf
jle
js
xchg
jl
pop
and
flds
loopne
cmp
push
mov
addb
jmp
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
rcl
fdivrl
or
push
jns
fld
push
xchg
into
add
mov
sub
adc
pushf
sar
fiaddl
mov
cs
fstpl
lea
lea
mov
adc
xor
int
jle
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
fisubl
inc
mov
pop
test
sub
jl
xor
xchg
das
pop
add
mov
inc
dec
insb
pusha
push
cld
loop
xor
push
sar
dec
jp
sbb
loope
movsb
pop
xor
shrb
dec
jge
cld
xor
jo
inc
cmp
dec
mov
sbb
je
fisttps
mov
dec
push
pop
mov
call
adc
arpl
imul
add
mov
loope
es
dec
lea
mov
sahf
jbe
and
mov
mov
pop
sbb
lods
decb
in
mov
cmp
sbb
cmp
inc
aaa
mov
dec
add
sbb
imul
insb
mov
ret
cmp
pop
and
inc
cmp
jno
mov
push
push
push
jge
shr
xor
inc
rcl
in
or
or
adc
dec
or
out
fldcw
push
nop
cmp
and
add
loop
or
or
adc
lods
mov
pusha
scas
or
sbb
ja
cli
fnstenv
push
jnp
add
dec
sahf
lock
aaa
arpl
mov
adc
mov
and
pop
mov
addr16
pop
lcall
cmp
dec
cmp
pushl
sbb
inc
shlb
outsb
fsubl
cmovae
pop
iret
jne
xor
loopne
mov
ljmp
xchg
mov
lret
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
pop
cmpsl
cmpsb
mov
add
xchg
add
stos
inc
sbb
iret
push
mov
cmp
add
mov
sub
jne
jp
lcall
sub
dec
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
into
xor
dec
jp
ds
sub
pop
inc
mov
or
lea
mov
cmp
jbe
test
loop
cmc
add
rorl
out
or
dec
cld
or
adc
pop
push
in
mov
mov
out
or
aad
adc
nop
mov
call
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
inc
sbb
sbb
rorl
std
xor
lea
leave
mov
repnz
cmp
adc
sbb
pop
jb
or
xorl
jp
inc
pop
adc
adc
inc
or
dec
cmp
sti
xchg
mov
icebp
push
and
mov
cmp
or
adc
and
mov
add
mov
es
add
pop
imul
jnp
jge
push
inc
pop
inc
inc
cmp
cmp
sbbb
push
mov
jmp
enter
test
add
adc
or
inc
push
into
sbb
nop
adc
cmp
and
inc
xchg
inc
and
and
mov
mov
es
dec
cmp
nop
and
insb
sti
ficompl
fcomp
outsl
in
jbe
xor
lahf
pushl
adcl
xchg
pop
push
mul
xchg
imul
out
pop
jne
push
in
adc
pop
inc
xor
mov
sub
xor
mov
jno
sbb
dec
push
jns
add
push
inc
js
push
or
pusha
xorb
jg
sbb
in
inc
cmpsl
pop
jl
mov
jns
dec
mov
pop
shl
and
insb
int3
push
les
daa
inc
sub
inc
mov
test
mov
sbb
add
jmp
mov
insb
fdiv
inc
inc
addb
daa
les
inc
aas
xor
inc
fdivrl
lods
jns
cmp
adc
inc
jbe
in
push
adc
mov
xor
popf
call
inc
cltd
movsb
hlt
mov
call
xor
shlb
outsb
add
loop
shll
jmp
lret
movsl
cmp
int
in
int3
lret
subl
xor
pop
add
cmp
mov
jle
inc
rorl
subb
jno
inc
clc
test
enter
dec
shrb
inc
pop
lcall
mov
or
sub
xchg
in
setb
andb
jo
dec
movsl
add
popa
mov
xchg
shll
add
pop
add
sti
or
sbb
xchg
arpl
test
lret
lret
mov
pop
rol
lea
add
leave
sbb
insl
enter
and
pushf
fidivrs
orb
icebp
mov
push
inc
pushf
fisttps
jne
cli
mov
or
pop
and
into
mov
or
adc
xchg
inc
cmp
xor
arpl
cmpsl
cmp
lcall
fs
cmc
jmp
int3
or
nop
out
push
pop
std
dec
sub
inc
pushf
xor
ret
jne
mov
in
in
pop
bnd
leave
jbe
dec
push
fs
add
sbb
push
push
jp
lock
aaa
jge
bound
cmp
lahf
call
enter
xchg
or
xchg
enter
sbb
jp
call
nop
xchg
jp
testb
insl
inc
xor
add
outsl
xchg
call
push
pusha
xchg
fs
xchg
jl
in
decl
add
mov
mov
jns
stc
mov
mov
push
test
andb
movsb
nop
sub
mov
test
push
or
cmp
sahf
cltd
sub
push
dec
cs
lods
in
xor
shrb
in
mov
dec
mov
fs
sbb
jb
shlb
leave
adc
add
popa
push
loop
in
cs
push
push
xchg
les
and
inc
in
cmp
in
test
test
mov
popa
mov
and
test
jmp
inc
cmp
adc
mov
sysret
je
or
adcl
mov
mov
sahf
cmpsl
stc
mov
push
fidivrs
addl
jnp
ss
ss
fwait
sub
dec
loope
jl
daa
cmp
push
cltd
movsl
add
xchg
sub
push
movsb
add
pop
imul
mov
sbbb
push
js
cltd
ret
xchg
sub
sub
je
mov
add
adc
adcb
andb
cwtl
or
lea
pop
or
add
adc
adc
inc
faddl
xor
mov
sbbb
lock
mov
jnp
xchg
mov
sub
or
jmp
mov
push
inc
jecxz
addl
mov
cmp
jne
push
cmp
and
sub
cmp
sarb
xor
adc
push
out
ret
jne
mov
lds
add
call
pop
stos
add
out
add
add
scas
movsb
mov
mov
push
call
jmp
add
push
loopne
add
in
bound
dec
mov
movsl
push
or
push
adc
add
cmpb
std
je
addl
add
mov
aaa
inc
cld
push
ds
add
mov
inc
mov
hlt
add
rolb
mov
imul
shl
stos
out
add
incb
int3
and
not
and
es
and
cmp
nop
pop
push
sbb
sub
pop
test
add
imul
adc
push
dec
test
lret
clc
rcrl
sbb
cmp
cmpsb
xor
inc
lret
je
pop
je
lret
sbb
add
in
rorl
sub
sbb
dec
and
insl
shll
movsl
xchg
lods
divb
je
push
or
mov
fidivrl
fstpl
fstpl
push
push
add
call
sub
jge
add
sub
push
sub
leave
pop
jmp
jo
mov
rorl
mov
jb
lods
repnz
cmp
das
cmp
xor
jmp
je
add
and
sbb
gs
or
sti
fnstenv
lcall
xchg
insl
ljmp
outsb
imul
add
fldcw
pop
ret
ds
sub
sbb
mov
movsb
mov
cmp
xor
jno
mov
or
add
jae
jnp
pushf
cld
rolb
sub
sub
jmp
adc
pop
push
call
popa
add
fstl
push
shl
push
icebp
inc
and
aaa
jne
mov
cmp
repz
lock
mov
xchg
cmp
out
sahf
out
pop
fildl
lock
out
stc
andl
sahf
jecxz
mov
sbb
fnstcw
sub
push
or
cmp
push
insb
lock
push
pushf
insb
cltd
push
jno
pop
mov
xchg
jmp
jle
testl
cmp
pop
pop
call
or
fcompl
jb
push
xchg
jmp
inc
faddl
cmp
mov
scas
loopne
ja
popa
push
jmp
push
ljmp
insl
mov
or
pushf
inc
jp
sbb
inc
iret
clc
and
mov
adc
jle
xor
jbe
testb
and
and
cmpsb
cmp
ljmp
or
orb
mov
push
push
int3
rclb
adc
popa
mov
adc
mov
out
mov
sub
mov
push
jmp
fimuls
adc
cld
mov
mov
xchg
aad
add
clc
sarb
mov
pop
sub
test
jb
call
push
jmp
xor
leave
lods
std
nop
testb
pop
jno
sbb
pop
pop
mov
dec
xchg
mov
or
pop
sbb
or
or
or
xchg
insb
js
mov
lahf
dec
testl
xchg
dec
sbb
pop
cmc
mov
mov
std
lea
testb
adc
fstpt
fldcw
in
cmpl
mov
loopne
jo
jge
mov
pop
lock
inc
adc
fcoms
enter
dec
xchg
bound
pop
ja
stos
imul
mov
xchg
std
lods
jbe
pop
sbb
cmp
lea
shl
mov
lock
push
daa
and
outsl
in
jne
enter
pop
or
mov
add
enter
outsb
or
test
iret
mov
cmp
lods
mov
aam
sar
or
iret
and
mov
xor
or
es
testb
xchg
lcall
je
movsb
cmp
jg
jne
lahf
movsl
dec
cmp
adcb
pop
aad
mov
mov
fstl
sbb
inc
jne
mov
xor
movsl
pop
subl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
lds
dec
mov
cmp
test
frstor
sbb
lea
pop
push
jg
in
push
fs
push
dec
sahf
fistps
or
add
ret
pop
cmpsb
adc
push
and
or
scas
adcb
sti
push
inc
cmp
mov
xor
popf
in
mov
lret
jnp
jg
inc
sets
dec
mov
xorb
xchg
stc
mov
jcxz
jg
testl
movsb
loopne
sub
subl
imul
daa
mov
sahf
add
imul
je
inc
cld
jecxz
rclb
daa
in
mov
out
mov
enter
xchg
neg
adc
loopne
sbb
or
mov
pop
out
inc
add
je
notl
rorb
add
movsl
mov
or
sub
jecxz
xchg
xor
xor
mov
shrl
std
dec
mov
or
subl
lock
fdivr
adc
sbb
ret
or
lods
orb
adc
mov
cmp
add
addr16
jle
shll
popf
mov
scas
cmc
pop
sub
call
dec
mov
cs
mov
xor
test
sbb
xor
gs
mulb
xchg
pop
aad
sub
nop
std
fbstp
outsl
lds
sub
in
pop
xchg
mov
cmpsb
and
mov
mov
sbbb
cmpl
pminsw
sub
es
rcll
rclb
std
mov
mov
cs
sbb
jns
subl
add
movb
xor
popa
pop
imul
jns
stos
gs
add
xor
frstor
inc
adc
push
dec
lock
push
or
sbb
inc
icebp
call
xor
and
std
xor
icebp
imul
test
pop
loopne
mov
mov
inc
repz
xor
push
jmp
jo
mov
popa
dec
pop
jmp
fsts
decl
dec
ds
roll
pop
pop
jne
lock
sub
test
sub
xchg
mov
dec
mov
push
cmc
rcrl
loop
pop
test
or
aaa
mov
push
sub
sub
or
dec
xor
jge
xchg
int3
cmp
imul
addr16
adc
in
xchg
cmp
lret
enter
jns
add
std
dec
cmpl
lea
sub
je
pop
in
je
pop
insl
mov
movsb
adc
mov
movl
cmp
loopne
adc
xchg
sbb
push
jmp
or
fdivr
icebp
gs
mov
push
dec
pop
push
sbb
je
cmp
xor
loop
std
add
push
std
loope
lret
or
sub
sarb
xchg
aaa
fsubrl
xorb
movb
pop
stos
and
add
xchg
jecxz
out
pop
lods
dec
sub
push
das
mov
push
inc
push
xchg
movsb
test
inc
jb
dec
mov
and
sarb
mov
cwtl
in
loopne
cmp
js
jecxz
push
cmp
adc
sub
cmp
ja
inc
adc
xchg
loopne
mov
push
lea
pop
pop
inc
or
add
xchg
mov
ret
and
and
shr
add
dec
dec
push
lock
aad
cmpsb
lods
pop
pop
add
jb
xor
mov
in
inc
enter
movsl
call
cmp
call
pop
pop
xchg
xor
pop
fwait
rcll
fwait
shl
ficoml
test
adc
and
cmp
fwait
ror
enter
rcl
int3
les
into
enter
lods
fs
inc
xor
stos
push
push
pop
and
sub
mov
fwait
shr
ja
cmp
cltd
movsb
sbbl
sub
xchg
pop
push
cltd
pushf
inc
xchg
lods
ss
and
test
es
aad
inc
push
dec
inc
lcall
dec
fdivrs
add
xor
mov
arpl
test
pause
lret
and
mov
pop
sbb
jns
test
mov
xchg
pop
incl
decb
cld
cltd
adc
and
pop
xor
pop
pushf
cs
xor
mov
sbb
sbb
and
pop
mov
mov
pop
xchg
jb
jno
orb
xchg
xchg
mov
and
and
inc
jb
dec
jns
aad
push
cltd
lea
cltd
add
bound
dec
xor
leave
adc
test
leave
adc
mov
mov
xchg
pop
nop
nop
nop
daa
push
orb
sbb
enter
add
adc
dec
cld
inc
cmp
je
mov
je
push
xor
add
lods
add
cmpsl
stc
cmp
add
mov
mov
sahf
pop
mov
lret
add
fstpl
dec
out
xor
push
pop
shlb
add
pop
das
arpl
xor
inc
bound
sub
je
lret
add
add
add
sbb
enter
imul
add
sbb
pop
aaa
test
in
jnp
sbb
mov
pop
or
adc
adc
cmp
mov
sub
int3
add
xor
cmovno
clc
inc
addb
or
cmp
jl
cwtl
cltd
fimuls
dec
int3
adc
mov
ds
mov
xor
outsl
mov
test
je
push
aas
mov
xor
bound
ret
cmpsl
icebp
add
out
int3
adc
and
jne
lea
popa
add
stos
clc
std
mov
les
mov
push
mov
shll
and
je
jmp
bound
test
mov
sbb
pop
les
or
les
cld
dec
loop
dec
lods
or
gs
sahf
mov
sub
add
add
rcrb
outsl
lock
push
inc
xchg
test
gs
ret
lock
pusha
pushl
por
ss
mov
sar
and
flds
lahf
and
cwtl
lahf
or
push
call
adc
inc
int
lret
xchg
jle
inc
or
xor
daa
clc
inc
push
inc
sbb
adc
testl
fisttps
shlb
repz
cmp
test
and
sbb
xor
frstor
inc
popa
and
mov
xchg
jg
imul
add
lds
fisttps
insb
push
pop
jmp
les
inc
add
pop
inc
jne
adc
xchg
pop
jmp
stc
and
inc
stc
adc
movb
push
stos
les
dec
je
push
roll
mov
nop
subb
shl
test
add
push
mov
jmp
sbb
aaa
add
fmuls
jmp
add
movsb
stc
xor
pop
out
jmp
mov
iret
add
add
add
pop
test
and
or
aaa
dec
push
sbb
lock
mov
insl
je
xor
pop
movd
rcll
xor
rol
gs
or
mov
push
or
movsb
rcrb
sbb
sbb
sub
or
xchg
movsl
add
inc
cmp
test
enter
mov
sub
cltd
test
test
push
fcompl
mov
xchg
popa
sub
stc
xchg
xchg
call
lea
xor
sub
mov
push
mov
cmp
jae
pop
mov
out
push
dec
in
icebp
out
mov
lea
rclb
ret
mov
ljmp
jb
pop
test
or
and
dec
xchg
into
outsl
inc
cmp
roll
sbb
xor
sbb
mov
xor
jbe
test
bound
adc
or
or
push
cli
sbb
sbb
push
inc
inc
dec
or
or
cld
ljmp
or
sub
adc
pop
adc
int3
lahf
mov
test
or
nop
inc
sub
adc
repnz
xor
out
or
sub
push
sbb
nop
sub
inc
lcall
subb
sub
aad
arpl
add
inc
popa
int
pop
mov
push
adc
adc
subb
subb
or
fcmovu
out
lods
push
add
imul
ret
xor
mov
cs
ljmp
xchg
cmp
jl
mov
and
jns
ret
dec
pusha
push
verr
cltd
movsb
adc
push
gs
rolb
or
imul
xchg
jge
imul
jle
andl
in
clflush
inc
add
and
sarl
call
outsl
sub
cmp
sti
mov
pop
cmp
cmp
inc
test
cmp
push
mov
push
cmp
lret
cmp
pop
call
rorl
xchg
xor
leave
push
sbb
bound
push
or
int3
jo
mov
add
dec
mov
inc
or
flds
cmp
xor
imul
mov
addl
ret
inc
roll
hlt
add
pop
and
test
pusha
cmp
xorb
cmp
sub
ret
lods
sbbb
dec
cltd
inc
sti
or
sti
subb
loop
faddp
je
push
es
or
fnstcw
push
push
leave
les
cmpsl
movsl
mov
inc
mov
ja
loopne
stos
cld
pop
mov
and
pop
add
jmp
xchg
rorb
in
call
dec
je
xchg
out
inc
or
jmp
mov
ljmp
dec
or
pop
or
xchg
sarb
pop
xchg
pop
popa
mov
xor
cmp
les
push
in
add
inc
or
scas
push
int3
dec
add
or
je
dec
js
dec
mov
mov
jne,pn
sbb
mov
mov
mov
adc
cmp
jge
mov
mov
cmpxchg
mov
pushf
dec
push
mov
mov
jnp
outsl
mov
sbb
push
push
adc
sbb
insb
xchg
das
adc
test
or
js
xor
push
adc
cmp
pop
add
sbb
lcall
add
insb
in
mov
in
das
aas
xchg
dec
cwtl
cmp
pop
ror
loope
sbbb
imul
sbb
inc
and
mov
pop
ret
add
add
inc
and
mov
iret
les
adc
iret
jp
mov
jmp
fmuls
adc
jecxz
push
adc
add
lret
loop
xor
icebp
pop
mov
test
xor
fscale
add
loope
jne
and
pop
add
and
push
jne
insb
pop
jecxz
movb
cmpsb
out
cmp
ficoml
out
and
or
out
faddl
aam
xchg
pop
or
fldl
outsb
or
cld
lea
in
iret
repnz
ret
ret
or
insl
xchg
sbb
std
sbb
push
sarl
loope
mov
pop
and
jge
shlb
std
jne
cmpl
adc
and
sbb
cmp
and
cmp
ss
jns
clc
add
hlt
jbe
mov
adc
and
insb
adc
sub
dec
inc
addl
inc
ret
insb
sub
xor
ja
jmp
xchg
test
test
out
aam
cmp
push
aaa
mov
arpl
test
cmc
pop
dec
fldt
add
add
mov
cmp
and
xlat
fidivl
push
pop
cmp
jge
push
pop
inc
mov
mov
lret
push
jmp
popa
push
cmpb
jo
add
pop
je
int
push
xchg
xor
stos
xor
xor
repz
xchg
fisubs
mov
adc
lea
sahf
in
daa
dec
insb
sbb
sbb
pop
and
dec
push
cs
add
inc
in
push
dec
push
out
mov
pusha
xor
push
add
movsb
sbb
mov
in
fdivs
push
lock
mov
inc
and
cmp
push
shrb
gs
or
mov
push
fs
lock
cmp
push
xor
push
or
inc
mov
mov
sub
fdivl
push
or
jmp
out
or
jne
xchg
add
lret
xor
fcomps
adc
ja
cmp
ss
jmp
pop
psrad
incb
test
les
adc
add
push
enter
pop
je
pop
es
pop
add
pop
int
or
cwtl
xor
shll
bound
mov
shr
push
test
stc
add
sbb
js
ret
xchg
inc
or
cmp
inc
repnz
loop
and
test
or
mov
jbe
int3
into
inc
add
xor
jae
fimuls
stos
adc
ret
scas
adc
dec
stos
pop
sub
cwtl
rorl
cmp
pop
stc
push
ja
mov
and
adc
xorl
mov
movb
test
ret
inc
stos
mov
jae
call
fs
xchg
ljmp
jbe
ss
push
sti
les
subb
add
push
push
orl
lods
scas
clc
or
and
jo
jle
xchg
ltr
pop
shrl
lea
sbb
adc
adc
mov
dec
cmp
and
adc
jnp
jne
scas
in
jmp
cmp
dec
inc
inc
or
jne
xchg
mov
mov
add
push
sar
loopne
add
mov
or
je
mov
and
and
lock
cmp
cld
fstps
ret
mov
mov
pusha
xchg
ret
jmp
adc
add
and
shrl
add
jb
jnp
push
cmp
insb
sti
or
int
cwtl
inc
dec
sbb
sbb
add
lods
insb
fwait
nop
add
dec
stc
xor
jno
push
push
sub
pushf
xchg
push
pop
push
sub
push
add
les
sbbb
mov
stc
mov
or
or
or
push
and
aaa
test
cmp
inc
mov
arpl
int3
js
into
mov
pushf
or
sahf
push
or
cmp
mov
and
mov
shl
push
insl
pop
pop
hlt
xchg
je
sbb
faddl
sbb
and
leave
sub
pusha
and
and
push
cmp
daa
outsb
fisttpl
jb
sar
sarb
jg
sahf
add
popf
mov
mov
clc
insl
lahf
add
xor
aas
push
mov
or
int
stos
fmuls
js
incl
mov
add
out
add
xchg
or
push
in
xor
sub
or
daa
or
xor
leave
lcall
hlt
inc
adcl
xchg
inc
clc
mov
xorl
out
or
addb
jb
xchg
or
adc
push
dec
cli
xchg
mov
push
or
insl
inc
cmp
int
pop
sarl
aaa
xor
ds
mov
fldl
call
js
or
je
and
movl
jl
mov
loope
pop
mulb
test
adc
adc
adc
test
test
dec
out
mov
pop
std
fisubs
mov
jmp
push
xlat
dec
aam
adc
dec
push
xor
cltd
or
lock
rcrb
dec
lock
mov
cltd
sbb
ret
mov
or
popa
adc
loopne
or
xor
not
push
mov
sub
rol
or
push
fs
enter
das
outsb
js
les
jb
rcrl
add
or
sub
sbb
pop
or
jmp
mov
rcl
xchg
out
xlat
sbb
jg
adc
and
inc
sbb
push
push
pusha
jo
call
dec
bound
call
sub
pop
insl
sub
sub
add
or
push
cmp
roll
loop
mov
lret
sub
mov
sbb
shll
lods
add
adc
sar
frstor
hlt
rep
ss
neg
lcall
or
pop
xchg
sahf
push
lock
push
xor
scas
or
jp
loopne
dec
mov
or
mov
les
in
mov
rorl
lods
inc
insl
or
jp
and
add
add
jae
or
loop
mov
dec
test
data16
adc
cld
aas
sub
jbe
push
push
test
push
sub
xlat
mov
es
mov
jns
mov
or
ds
cs
insb
ja
loopne
pop
je
stc
sub
js
sbb
jl
cld
adc
pop
test
adc
cmp
hlt
adc
rorb
cld
in
shrb
mov
push
or
fnclex
gs
add
or
fimuls
adc
sub
outsl
push
push
dec
adc
dec
in
iret
push
and
jne
push
clc
jl
lahf
pop
outsl
inc
or
jbe
jle
dec
movsl
push
stc
pushf
outsl
ja
mov
out
jo
test
rolb
loopne
or
xor
mov
enter
test
or
loope
ss
test
out
in
and
call
or
sub
std
mov
dec
sub
dec
pop
and
lods
add
sub
imul
fsubrs
fld
lock
in
cmpsl
and
rep
add
xor
in
in
jnp
jno
mov
and
or
push
dec
adcb
push
addl
neg
addl
test
mov
hlt
push
js
les
xor
add
adc
sti
push
sub
pop
call
pop
jno
xchg
clc
lock
movsl
mov
lock
pop
daa
or
pop
and
fs
sub
push
dec
shll
fsub
push
xchg
mov
cmpsb
add
sbb
pop
adcb
add
fdivl
fsubrs
and
repz
sub
lock
xor
decl
mov
or
cmp
push
mov
dec
les
test
mov
push
and
jne
fidivrl
dec
push
xor
and
fstps
inc
pop
mov
and
pushl
pop
xor
add
jmp
mov
cmpb
pop
and
and
jle
test
mov
or
repnz
test
outsb
mov
sbb
aam
sarb
ret
imul
mov
sub
popa
outsl
fcomp
and
mov
jecxz
aas
shll
push
fsubrl
ds
int3
add
mov
fisttpl
aaa
xchg
mov
add
xchg
mov
jmp
adc
outsl
jo
push
sub
sahf
fdivs
adc
inc
add
add
imul
mov
insb
cmpsl
mov
push
fsubrl
mov
scas
dec
mov
mov
dec
movsb
lcall
aaa
cmpsb
push
popa
lds
jecxz
cmp
movl
add
sub
stc
js
imul
sbb
cmp
jmp
js
jl
cmp
jg
inc
jmp
cmp
dec
and
pop
sub
cmc
adc
jne
imul
sbb
push
shrb
aas
sbb
adc
dec
enter
cmp
bound
popa
fadds
jb
pop
adc
mov
mov
js
mov
mov
xchg
rorl
mov
mov
idivb
xor
out
mulb
and
add
or
push
mov
lcall
sbb
sub
add
sbb
or
sub
cmp
pop
test
pop
xchg
or
add
push
les
stc
xchg
movl
sbb
bound
cmp
cmc
xchg
xor
rclb
pop
xchg
aam
adc
push
mov
shll
add
pop
or
aam
mov
in
sub
clc
movsl
mov
inc
loopne
aad
dec
push
cmpsb
push
mov
and
cmpsb
fdiv
xor
sbb
push
fs
fidivrl
add
or
jg
insb
jae
jbe
push
hlt
or
ret
cmp
je
pusha
jle
cmp
jl
push
hlt
add
mov
fs
mov
scas
mov
fcoms
incl
push
mov
je
add
cmp
sub
jecxz
lahf
mov
daa
push
add
jns
pop
out
mov
xchg
int3
lcall
dec
fiaddl
xor
xor
cmp
dec
adc
and
and
pop
inc
sbb
add
mov
movsb
mov
ror
and
jmp
dec
mov
xchg
mov
je
aas
push
sbb
xor
and
stos
add
shlb
mov
mov
or
clc
lods
inc
orl
xchg
andl
pushf
add
pop
add
call
mov
loopne
push
or
add
add
sarb
js
dec
or
jg
and
xor
aas
lods
jle
fcmovne
nop
adcb
add
sbb
push
outsb
jle
les
test
and
bound
mov
and
adc
adc
ror
stos
mov
daa
adc
pop
jg
mov
pusha
push
daa
fs
movsl
hlt
cmp
jl
mov
leave
test
in
leave
leave
xchg
or
fstl
mov
or
aaa
mov
fneni(8087
pusha
cmpsb
icebp
inc
adc
xchg
or
frndint
sub
jb
int3
add
inc
inc
sbb
pop
jp
mov
fsubrs
aaa
in
mov
mov
add
aaa
and
aaa
pusha
mov
clc
add
loopne
mov
xor
xchg
jg
loop
outsl
mov
push
sbb
gs
pop
insl
popf
arpl
cmpl
js
pop
adc
inc
or
sbb
or
and
ret
ret
jg
test
popa
mov
and
lea
jne
jbe
cmp
mov
sub
addr16
test
andb
sbb
xor
add
mov
ds
inc
cmpl
inc
inc
cmp
sbb
pop
cmp
and
sbb
mov
int3
xchg
test
mov
cmp
xor
out
cmp
mov
cli
mov
cmp
mov
dec
adc
or
test
js
xor
push
fmuls
xor
pop
shrb
push
inc
cmp
xor
cwtl
fcmovne
sbb
inc
pop
repnz
and
leave
sbb
add
repz
cmovb
fadds
cs
pop
je
fwait
popf
cltd
aam
push
imul
jg
add
mov
jl
push
jmp
cmp
out
mov
pop
or
je
xchg
je
mov
xchg
sbb
jmp
mov
cmpsb
outsl
sub
js
loop
sub
pop
add
inc
inc
and
adc
dec
jge
inc
cs
push
xchg
inc
test
orl
addb
sbb
xchg
loope
and
add
jns
xchg
pshufw
ja
fcoms
jmp
add
mov
xor
add
cmpsb
insl
cmp
test
clc
fsubrl
and
sahf
inc
loopne
add
and
sbb
icebp
enter
mov
mov
fsubl
or
mov
lock
mov
fsts
sbb
jb
cmp
adc
xchg
out
aas
sbb
in
pop
je
pop
cmc
and
insl
push
cmp
rorb
push
push
and
popf
add
into
mov
clc
fistl
xor
push
cmp
jl
cld
mov
inc
mov
inc
decb
cmp
push
xchg
add
jecxz
les
jns
out
dec
negl
jne
clc
push
mov
ffreep
or
mov
push
cmp
push
ljmp
or
insb
movsl
movsb
dec
jge
popa
stos
lret
imul
lods
jno
ret
stos
repnz
dec
dec
dec
mov
adc
leave
mov
mov
stos
mov
mov
adcb
xchg
lret
pop
popf
js
into
adc
or
xlat
xchg
xchg
loopne,pt
mov
sbb
stos
push
mov
sbb
jne
jae
xlat
sti
jmp
frstpm(287
or
push
pop
ss
arpl
mov
ljmp
mov
sbb
scas
pop
mov
rol
sbb
test
or
cmp
xor
inc
push
mov
inc
pop
sub
inc
das
rolb
or
mov
inc
mov
jbe
xor
push
or
mov
push
jle
jecxz
test
push
jbe
dec
push
mov
clc
dec
inc
push
lock
or
dec
adcl
sbb
pop
jo
call
mov
push
mov
jle
aam
popf
es
push
adc
in
lahf
popa
mov
add
or
sbb
dec
in
adc
sbb
jg
adc
orl
xorb
hlt
mov
loopne
mov
xlat
or
rclb
xor
test
lods
nop
sub
mov
push
out
movsb
sbb
and
out
pop
std
jb
inc
popa
sahf
ja
pop
or
loop
test
ret
test
add
push
pop
jp
adc
repnz
mov
call
or
push
aaa
fsubs
mov
jbe
inc
lret
stos
push
sbb
mov
push
mov
add
pop
mov
adc
jp
aaa
sub
sbb
into
dec
inc
cmpl
mov
adc
addb
cmp
je
cmp
and
cmp
jb
test
lea
xchg
subl
les
cmp
je
jge
push
fidivrl
or
push
movb
daa
test
pop
je
ret
lds
cmpl
sub
pop
adc
daa
mov
push
or
cmpsb
in
push
fsubs
adc
movsb
gs
out
call
and
outsl
fdivl
adc
leave
push
push
jne
or
mov
add
mov
push
insl
out
cld
xchg
out
add
bound
jmp
adc
adcl
inc
add
fcmovnb
pop
pop
push
les
xchg
xchg
mov
or
mov
or
lock
lock
enter
into
mov
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
fwait
imull
leave
div
pop
dec
adc
inc
mul
jnp
ljmp
jb
cmp
or
cmp
or
xor
and
out
add
adc
or
ficoml
ficompl
rol
pop
fxch
addr16
mov
imul
or
adc
push
or
add
test
das
add
jne
mov
adc
pop
into
fiaddl
dec
cmp
cmp
ljmp
inc
xchg
lods
wrmsr
mov
mov
shll
inc
pop
dec
sbb
push
dec
add
xor
rcr
bound
jnp
jle
jne
lea
js
mov
cmpsb
push
flds
add
in
mov
push
jecxz
mov
aaa
lcall
ss
ret
ret
jno
pop
cmp
popl
cmp
adc
cmp
xchg
mov
adc
or
mov
adc
jo
add
orl
mov
inc
xchg
cmpsb
lcall
add
dec
mov
mov
add
outsl
iret
mov
cld
sbb
subb
mov
rol
addl
and
push
test
ja
mov
push
push
test
jl
xor
inc
add
push
xor
sub
sahf
je
mov
xor
cli
adc
lea
lea
push
mov
jnp
test
insb
mov
cmp
sbb
mov
popl
lods
mov
push
cmp
and
adc
dec
enter
add
je
sbb
adc
adcb
or
xor
ret
movb
inc
out
inc
sbb
and
pusha
add
js
sbb
push
mov
adc
loop
mov
clc
sbb
das
jge
test
rcrl
ljmp
push
inc
cmp
xor
cli
test
loopne
call
imul
push
sarl
imul
push
rorb
loopne
xorb
andb
lods
xor
dec
pop
pusha
mov
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
dec
or
and
inc
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
jnp
sbb
test
mov
xor
xor
movsb
test
sub
and
je
cmp
out
cmp
dec
fwait
add
loopne
push
stc
ss
xor
jle
fwait
nop
data16
call
adc
dec
adc
sbb
dec
dec
roll
adc
cld
and
std
sbb
mov
pop
sub
xchg
jnp
adc
add
scas
jg
ret
push
jae
xchg
cmp
shl
sub
jne
out
xor
call
lret
test
and
stos
sbb
fldcw
rol
pushf
cs
add
cli
pop
in
add
adc
cmp
sbb
xchg
rorb
sahf
mov
mov
push
pop
add
jo
in
int3
int3
fsubrs
add
xchg
sbb
pop
xor
push
cmp
roll
pop
std
nop
cmpb
add
lret
or
add
and
inc
pusha
push
movsb
push
es
cmp
fmuls
daa
xor
pop
inc
and
popa
fdivrl
push
lea
pushf
test
je
sub
and
or
push
cmp
sarb
and
xchg
fcoms
cmp
fmuls
in
or
popf
in
mov
ficompl
dec
cmp
inc
cwtl
out
sbb
cmp
push
fdivl
sbb
dec
push
adc
sbbl
cmp
pushf
frstor
sub
nop
jecxz
nop
and
loopne
dec
push
imul
push
jno
xor
rorl
fs
lret
add
movsb
push
repz
adc
adc
cmp
inc
enter
add
push
leave
inc
cs
rorl
add
or
and
inc
push
cmp
and
movsl
xor
lods
lea
cld
xor
adc
lahf
out
jl
adc
add
jmp
cmpsb
dec
icebp
out
xor
mov
adc
rolb
mov
cmp
mov
pop
xor
xor
shlb
mov
and
leave
sahf
push
int
push
into
incl
push
push
mov
cld
push
loop
imul
pop
cmp
or
add
and
cmp
sub
shrb
jp
add
sbb
xor
ljmp
xor
loope
add
lods
and
addl
adc
sbb
fcomps
push
rcrb
es
sbb
ficoms
pop
movsl
into
push
lcall
xchg
imul
xchg
in
shlb
popf
out
adc
xor
push
cmp
xor
inc
cmp
xor
popl
mov
mov
xor
jl
sub
push
sahf
pop
mov
lea
lret
add
cmp
inc
mov
add
rclb
mov
or
or
mov
testl
aaa
aad
jl
sbb
aam
adc
rclb
ficompl
adc
add
stos
cmp
mov
inc
sbb
loop
insb
inc
dec
pop
xor
test
sbb
sahf
push
inc
pushl
out
cli
pop
mov
jns
dec
push
cmc
out
dec
sub
andb
xchg
xchg
lock
pop
addl
pop
mov
cmp
mov
adc
addr16
or
fistpl
stc
or
lods
mov
mov
mov
push
xor
push
hlt
mov
sbbb
sub
test
jmp
mov
add
cmp
fs
or
enter
sbb
addr16
loopne
push
dec
xchg
scas
xor
cmp
jmp
push
dec
inc
test
dec
lea
push
adc
mov
inc
mov
or
lods
jnp
faddl
cmp
mov
push
fildl
test
lahf
xor
dec
sub
shll
shl
cmp
mov
mov
cmpl
pop
imul
push
test
shlb
mov
push
add
pop
mov
sub
sarl
cmp
xchg
mov
ret
loopne
cmp
rorl
shl
sbb
out
inc
int
add
popf
ficoms
daa
inc
fisttpll
jmp
xor
iret
mov
add
sub
clc
pop
cmp
sbb
mov
jb
stos
pusha
xor
sysenter
sbb
fimuls
cmp
dec
add
and
or
dec
xorb
loope
jnp
mov
push
xchg
push
pop
mov
movsl
aad
sub
xlat
mov
cmp
mov
pop
mov
cmp
cmpsb
aas
movb
inc
mov
mov
adc
shl
lods
sbb
mov
fsubrs
sub
mov
sbb
loopne
cmp
add
mov
daa
jmp
sbbl
dec
pushl
sbb
sub
jmp
xor
pop
movsl
dec
add
loop
add
xchg
xlat
repnz
inc
lods
push
orl
dec
jae
or
loopne
cmp
test
adc
xchg
pushf
add
pop
add
orb
mov
jo
xchg
dec
dec
stc
fldl
cmp
add
roll
sub
sbb
nop
or
mov
cwtl
push
mov
pop
lock
scas
data16
xor
mov
std
add
adcl
xchg
mov
inc
in
imul
or
mov
jo
lret
jmp
or
js
repz
jns
rolb
lea
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
or
inc
stos
insb
sub
jne
divl
fidivrs
fdiv
or
xor
mov
inc
cmpb
jp
jb
sbb
sbb
mov
mov
xor
pop
sbb
dec
enter
test
ret
sbb
pop
js
sbb
je
aaa
push
mov
shrl
add
sub
fldt
mov
incl
loop
push
cs
push
dec
outsl
xlat
dec
sub
xor
in
mov
movsb
xor
add
andl
add
popa
add
jmp
or
mov
adc
and
or
jns
ljmp
and
or
add
inc
dec
cli
fstpt
and
mov
adc
fs
or
inc
in
cs
mov
inc
xor
mov
xor
push
and
mov
or
ljmp
scas
bound
ss
shll
stc
mov
push
pop
mov
push
mov
out
xor
ficoml
cli
sbb
mov
ja
push
mov
xor
sbbl
and
aam
sbb
cli
adc
cmpb
out
mov
sub
mov
mull
cmp
into
sub
fstpl
rorb
orl
sbb
add
push
adc
push
cld
pop
sti
add
orl
gs
and
push
fistps
cmp
lods
jg
rcrb
mov
bound
pop
fistl
cmp
stos
jge
addr16
push
pop
xor
std
inc
andl
sub
ljmp
jne
push
jmp
enter
and
cs
push
pop
lods
pop
jg
jecxz
int3
pop
pop
mov
push
cmp
add
scas
add
clc
je
xor
add
iret
mov
sbb
jle
cmp
int3
xchg
push
scas
dec
cmp
hlt
adc
push
jmp
push
and
lahf
bound
lods
je
inc
cmp
shlb
pop
xor
inc
test
add
js
pop
sbb
mov
add
and
add
icebp
xchg
xchg
jmp
inc
push
movsb
sbbb
cmp
mov
cs
xor
cmp
and
dec
add
rolb
mov
test
lcall
inc
imull
pushf
push
dec
xor
inc
jmp
icebp
xor
jmp
jge
mov
cmp
loop
jle
mov
push
cli
inc
xchg
add
cmpsb
push
sbb
addr16
pop
pop
cmc
cmp
stos
test
gs
cmp
inc
sbbb
sbb
add
and
sbbl
sbbl
fidivs
into
rclb
movq
sub
jecxz
test
stc
ja
push
cmp
sub
adc
jl
pushf
fstpt
fmuls
sub
inc
nop
fistl
adc
test
push
mov
subb
int3
jne
mov
dec
jge
gs
push
dec
pop
mov
sbb
mov
cmp
or
cs
movsb
mov
push
fstps
or
adc
pop
mov
lea
sub
cmp
add
jl
fcomps
inc
lret
int
sbb
adc
or
mov
inc
jbe
mov
mov
pop
test
pushf
cld
nop
mov
cmp
loope
imul
das
adc
and
leave
inc
iret
push
add
rorl
jl
or
or
hlt
sbb
adc
adc
sti
cmp
mov
gs
pop
mov
popf
inc
push
jae
jbe
inc
gs
and
jne
sbb
aam
dec
inc
mov
cmp
je
hlt
jmp
adc
adc
lea
lods
ret
add
dec
and
add
inc
fists
fistps
pop
push
dec
or
ror
xor
call
push
shl
std
jmp
loopne
xchg
xchg
pop
sbb
lcall
push
mov
xchg
mov
xor
pop
sub
je
add
ds
cmp
jnp
sub
mov
mov
idiv
add
push
test
sbb
shlb
adc
lea
mov
inc
inc
jo
js
jmp
push
or
or
rorl
inc
dec
push
or
inc
mov
insb
push
test
inc
mov
xchg
test
and
xor
rorb
add
or
or
nop
lahf
out
in
shl
not
xor
loope
xor
and
mov
and
shr
add
xchg
fcompl
shr
and
sbb
daa
jno
fdivs
test
lock
test
adc
hlt
and
add
adc
test
xor
push
mov
mov
je
sbb
or
xor
js
cmp
mov
mov
push
inc
jmp
mov
incb
jmp
cs
outsl
sbb
lock
and
mov
and
ja
jl
and
jecxz
jge
int
out
jmp
xchg
jmp
sysenter
rcl
sub
or
shll
loope
fdivl
or
ja
ljmp
loope
std
or
add
fstps
aas
pusha
mov
xchg
icebp
jge
pusha
loope
pop
sub
dec
sub
xchg
andb
jecxz
pop
fstp
je
imul
fisttpll
call
sbb
xchg
and
sbb
lods
test
or
xchg
adc
pop
jns
dec
sti
add
add
test
mov
mov
dec
add
scas
mov
push
xor
or
cld
push
or
sub
push
xchg
in
mov
stos
aam
std
sub
pop
testl
dec
fstpt
cmp
jb
sbb
sahf
jbe
es
push
and
inc
add
adc
lret
inc
flds
add
fstpl
push
or
push
push
sub
adc
jne
fidivrl
out
cmpsb
ret
inc
mov
pop
or
test
push
mov
mov
pop
sub
fidivrs
call
lret
xor
cmp
or
xchg
or
pop
fs
sbb
ret
fldz
rcr
sbb
mov
jl
mov
add
sub
cmp
mov
sub
jmp
sub
push
jbe
lcall
inc
lcall
add
adc
div
add
rcr
sbb
pop
dec
jnp
into
adc
stos
lock
sbb
jp
fstpl
add
mov
jmp
clc
loop
stc
into
jbe
or
or
popa
xchg
push
mov
inc
pushf
lods
scas
dec
lahf
mov
dec
dec
cmp
adc
repnz
hlt
cmpsl
add
cld
fs
rclb
adc
test
jle
leave
into
enter
in
sbb
adc
orl
loopne
cmpl
out
mov
push
push
and
sahf
jmp
pop
movsb
push
add
xchg
in
aam
sbb
push
test
popa
sub
and
fadds
mov
or
out
mov
mov
push
add
int
add
js
and
or
inc
js
add
add
push
sbb
faddl
add
loope
shl
push
pop
movzbl
add
ljmp
mov
je
add
outsb
movsb
sbb
test
js
or
add
test
scas
sbb
sub
and
dec
subb
or
dec
push
hlt
push
push
lea
xor
sbb
xchg
icebp
add
pop
retw
or
lds
imul
mov
daa
jnp
mov
or
xor
xor
ficoms
jo
xchg
mov
xchg
mov
and
loopne
xchg
scas
adc
mov
das
mov
fdivrl
or
lret
sbb
imul
addl
jns
incb
pushl
lea
push
or
mov
fnstcw
int
sbb
jbe
sub
inc
xchg
inc
int3
push
and
jns
add
mov
xchg
into
popa
call
cmp
cwtl
mov
sahf
fnstsw
adc
inc
or
mov
jbe
mov
js
jae
pop
std
jb
pop
add
mov
cltd
or
pop
cld
pop
clc
jno
jo
out
sub
mov
add
push
and
sahf
push
clc
aad
add
shl
jne
mul
xor
jb
gs
ljmp
xchg
mov
sar
lock
add
sbb
or
adc
inc
shl
in
ret
fsub
into
or
mov
inc
bound
addl
cwtl
cmp
sub
test
cmpsl
push
dec
in
dec
pop
or
mov
sub
icebp
sbb
arpl
or
or
inc
inc
add
or
push
out
mov
and
and
adc
in
mov
cld
push
add
ljmp
sub
outsb
cmp
ljmp
lock
jb
aad
push
fstpl
sbb
xor
adc
sbb
loop
inc
fldenv
lock
fcomps
pusha
xor
or
loopne
sbbb
fldt
sbb
fcmovne
fwait
sahf
adc
xor
dec
fwait
sbb
loopne
xchg
and
jle
call
sub
xor
mov
inc
pop
mov
imul
inc
mov
inc
je
sbb
mov
xchg
scas
push
repnz
mov
mov
ret
or
and
cmp
mov
mov
out
shr
mov
in
cmc
pop
add
flds
lods
mov
mov
or
jmp
xchg
data16
pop
xchg
je
or
bound
adc
lock
insl
push
mov
fadd
data16
fsubl
test
ja
mov
jnp
jae,pt
mov
inc
and
imul
in
adc
addb
fbstp
lock
fiaddl
das
and
or
inc
loopne
cmp
xchg
test
lods
lods
shr
test
cmp
inc
sbb
mov
jle
addr16
or
or
loope
inc
fadds
add
adc
and
xor
sub
lods
or
sub
cmpw
inc
inc
loop
dec
xor
repz
dec
cs
sub
aad
add
jnp
push
push
and
dec
or
dec
add
lcall
or
cmpsb
add
xchg
sbb
aas
pop
int3
rolb
daa
adc
mov
cmp
scas
cwtl
sti
jecxz
cld
pop
test
jne
push
add
hlt
push
or
stos
stos
repnz
pop
pop
inc
addb
pop
xor
aam
add
jle
jg
test
mov
cltd
and
add
rclb
xor
dec
xchg
loopne
xchg
mov
pop
or
mov
sub
inc
shl
add
bound
inc
aam
loop
rolb
shrb
or
jmp
aaa
idivl
pop
and
mov
out
mov
dec
jl
loopne
push
into
jbe
xor
mov
add
or
js
inc
shlb
cmp
sbb
sub
adc
jb
inc
xor
incb
jae
dec
mov
sub
jns
movsb
mov
push
ds
add
pusha
push
jge
push
lock
aam
movsb
test
roll
mov
ljmp
dec
rolb
add
or
add
mov
dec
xor
cmp
xchg
mov
rorb
popa
or
add
je
std
jae
push
out
and
push
cld
not
dec
mov
popf
je
mov
and
push
ds
js
adc
push
or
and
lock
push
xor
and
test
inc
shl
mov
cld
jo
pop
sub
sarb
je
mov
push
xor
jmp
mov
push
popa
pop
in
iret
int3
mov
test
mov
push
and
inc
and
les
lea
mov
cli
pminsw
into
xchg
std
mov
data16
adc
bound
pop
xor
pop
insb
loop
sub
dec
lds
fiadds
or
rcll
or
bound
imul
aas
or
cmp
sti
cmpl
pushf
mov
clc
dec
xor
paddusb
pop
andl
add
jmp
jl
mov
iret
and
mov
and
jb
pop
cld
sbb
and
rorb
add
pop
scas
shl
add
xchg
nop
pop
add
dec
roll
or
mov
or
xchg
add
sbb
xorl
sub
fdivr
and
shl
mov
lock
xchg
lods
xchg
mov
add
xchg
enter
add
inc
and
and
add
enter
stc
stos
cmp
lret
add
clc
rorb
lods
or
jl
push
add
xor
add
xchg
push
adc
lds
inc
mov
xor
push
adc
out
orb
xor
shll
dec
in
and
jne
test
or
mov
mov
mov
or
cmp
or
mov
add
jmp
xor
or
mov
loope
das
add
mov
pop
mov
sub
cmp
ja
push
dec
jmp
fldt
mov
add
jmp
xchg
call
pop
inc
dec
loopne
pop
xor
stos
mov
into
jmp
mov
push
jge
nop
mov
jmp
cmpsl
pop
sub
test
and
sub
sub
iret
shlb
je
cmp
jle
dec
sti
inc
jle
cmp
push
xor
jl
icebp
popf
xor
push
cli
lods
insb
sub
adc
xchg
xor
pushf
subl
cmp
fs
jp
jmp
ja
adc
out
sbb
jecxz
sbb
mov
ret
mov
or
push
insb
inc
mov
pop
jge
jnp
into
rorl
mov
jbe
sti
or
nop
add
jne
enter
js
jae
imul
sbb
ds
jge
jmp
and
add
xor
xchg
or
ret
pop
push
fucom
mov
adc
gs
dec
loopne
in
orl
pop
adc
fidivl
mov
lods
mov
enter
test
fldenv
jmp
je
inc
scas
call
divl
mov
jge
push
inc
add
fabs
incl
js
adc
add
inc
testl
mov
jmp
fisubs
push
dec
jp
pop
into
dec
sub
xor
jle
jmp
cld
test
addl
cli
and
sub
mov
rolb
or
mov
jmp
mov
jmp
push
cwtl
sub
das
pop
jl
icebp
xor
fcmovne
dec
mov
dec
cmpsb
hlt
scas
mov
dec
or
jmp
cmp
jge
xor
aam
neg
add
mov
loop
out
sub
cmp
cmp
mov
mov
pusha
jp
inc
dec
jmp
cmp
push
enter
mov
jbe
sub
xor
jne
lea
lods
inc
in
and
add
mov
sarl
xor
inc
mov
sbbl
stos
call
les
mov
dec
sbb
cmpb
inc
pop
dec
or
mov
xchg
icebp
push
icebp
mov
push
xor
and
and
and
adc
leave
push
sarb
lahf
cmpsb
fldl
sbb
jae
or
or
push
push
mov
pop
movb
sbb
jne
pop
aam
sub
and
jne
lret
out
cmp
inc
into
jne
inc
or
fisubrs
pop
cmp
cmp
jne
hlt
int3
add
loopne
imul
add
test
cmpsb
mov
add
pop
lret
lea
lcall
mov
clc
adc
add
sub
shlb
lock
ja
mov
aam
data16
subl
lcall
inc
pushf
sub
adc
add
or
aaa
sub
js
mov
lock
insl
mov
rcr
bound
jmp
mov
or
push
in
mov
cs
bound
or
adc
nop
mov
ret
mov
adc
dec
dec
outsl
adc
shrl
idiv
loopne
shr
or
mov
sahf
dec
xchg
push
ret
or
insb
mov
mov
push
pop
add
test
and
inc
mov
lcall
add
ficompl
mov
push
lcall
inc
jmp
call
ljmp
sub
pop
jle
jb
pusha
push
test
pushf
fmull
clc
rorb
orb
insl
xor
jmp
test
or
sbb
mov
mov
outsl
push
push
into
jmp
scas
scas
jnp
ret
jns
dec
and
dec
cmp
les
arpl
add
lcall
es
out
sarl
sub
add
negb
repnz
sub
movups
jo
int3
and
shlb
inc
mov
or
inc
rclb
lret
rclb
lea
inc
add
push
out
sahf
out
or
out
into
repz
push
or
shlb
lods
mov
orb
rcrl
hlt
jmp
inc
lcall
cmpsb
test
pop
jne
movsb
scas
lods
arpl
pop
ret
inc
inc
call
mov
mov
shrb
cmp
sub
pop
cmp
or
dec
in
sbb
and
dec
pop
sbb
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
out
call
fcompl
gs
lret
std
cmc
pop
push
or
mov
je
out
clc
pop
call
xchg
or
mov
call
das
rclb
xor
inc
push
sbb
mov
sub
dec
pop
dec
xor
adc
push
mov
push
xor
jmp
xchg
test
push
add
test
fcomps
subb
pop
push
add
sbb
mov
rolb
fidivl
data16
or
add
test
popa
adc
mov
je
setg
lahf
test
in
clc
add
mov
call
and
and
push
add
sub
movb
add
push
inc
movsl
hlt
inc
jle
add
push
mov
push
xorb
mov
jnp
mov
pop
add
incl
call
lcall
jmp
sub
add
dec
xor
or
jecxz
cmp
push
das
pop
xor
jg
dec
add
and
sub
mov
xchg
mov
inc
jae
cmp
add
push
or
negb
cld
rorl
xor
push
or
add
inc
xor
jne
add
fs
dec
ficomps
add
inc
xor
lods
loope
dec
scas
xchg
sbb
popf
xor
mov
outsl
push
xor
ret
clc
cwtl
aas
aam
cmc
inc
add
pop
and
and
loopne
push
xchg
out
rolb
mov
ret
jbe
inc
shl
inc
xchg
clc
dec
adc
sub
fndisi(8087
jge
mov
rcll
loope
or
adc
outsl
xor
shlb
pop
add
xchg
push
js
addb
ficoml
nop
mov
cltd
mov
mov
add
popa
mov
subb
in
dec
xor
lds
and
push
jge
adc
testl
xchg
lret
or
icebp
inc
xor
jge
enter
dec
rclb
add
adc
mov
add
aas
add
cmp
enter
mov
clc
test
shrb
outsb
cmp
rcrb
or
mov
lea
out
sub
testb
xor
add
rolb
inc
roll
push
ret
or
int
ret
pop
push
xor
adc
mov
data16
js
push
into
mov
push
sbb
inc
or
pop
xor
leave
and
add
cmpsb
movb
testl
gs
je
inc
fcmovb
mov
pop
jbe
sbb
inc
neg
sbb
jecxz
mov
loop
jg
ret
daa
xor
or
jne
pop
cmp
or
add
add
mov
or
xor
mov
aam
dec
loop
inc
xor
xor
and
or
insl
les
pusha
xor
sub
fdivrs
mov
push
sub
adc
mov
fcomps
sbb
sar
shrl
loop
pop
sbb
xor
mov
outsl
cmpl
ret
mov
add
dec
shrd
int3
and
adc
jle
cmp
out
pop
pushf
ss
jl
cmpsl
outsb
mov
xor
incl
insl
ss
stc
inc
add
dec
jmp
test
cltd
pop
xchg
clc
sub
shlb
or
in
movsb
mov
mov
push
or
pop
cmp
dec
adc
mov
adc
xor
jo
inc
sti
inc
inc
out
and
loopne
mov
push
pop
sbb
js
jg
mov
push
mov
inc
jmp
cmp
fiaddl
dec
clc
lock
mov
lock
insl
mov
mov
sbb
or
jl
mov
lock
push
add
mov
int3
iret
test
jne
jg
lods
jb
fs
pop
jnp
dec
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
and
sub
jae
mov
dec
pop
es
mov
inc
fmuls
je
sub
lahf
sbb
mov
fwait
sahf
jne
loop
call
jb
mov
pop
fildll
pop
sub
outsb
fiadds
rcrb
lods
add
push
lock
inc
sub
add
cmp
and
jge
mov
jne
add
cmp
jl
popaw
inc
add
push
mov
pop
xor
shrb
or
mov
orb
jo
je
imul
xor
or
mov
pop
push
rolb
jne
cmp
mov
jo
or
inc
int
stos
ficoms
dec
test
or
lea
dec
fwait
add
mov
inc
lock
push
jmp
insl
sbbl
sbb
xchg
jl
lods
sub
xchg
mov
inc
sbb
inc
cmp
into
mov
mov
sbb
jns
mov
pop
jge,pt
mov
gs
or
pop
data16
push
sahf
outsb
loopne
in
add
insb
fs
je
inc
je
dec
or
mov
xor
jmp
unpcklps
and
or
test
jp
or
dec
mov
pop
repz
test
add
lcall
inc
call
dec
filds
push
pop
clc
fstps
or
aam
add
fildll
jecxz
cmp
or
shrl
les
pop
dec
rol
ret
in
das
add
cmp
pop
arpl
notl
lea
cmp
dec
push
mov
loope
das
push
sbb
add
ja
ret
fcompl
xchg
push
jb
sbb
cmp
ss
jp
sbb
nop
orb
js
xchg
shrb
cmp
jmp
movsb
hlt
xor
add
inc
subl
sahf
je
pusha
and
inc
cmpsl
lahf
xor
cld
lahf
fs
sub
jle
pop
call
popf
ret
and
xor
enter
aas
xor
mov
pop
cmp
push
imul
cmp
lods
sub
data16
pop
cli
sub
jl
cs
lock
jmp
and
mov
movsl
and
insl
inc
xor
jnp
xor
mov
cmpl
mov
cmpsb
push
or
push
aam
pop
bound
dec
push
mov
and
add
mov
jne
or
jl
pop
cmp
jecxz
sarb
mov
test
xor
and
adc
je
mov
and
jbe
jge
xchg
jno
pusha
mov
jecxz
pop
adc
mov
xor
or
out
mov
int
lock
adc
pop
out
pop
cmp
add
gs
mov
les
push
pop
nop
add
and
pop
loopne
gs
sub
inc
or
adc
hlt
jmp
or
popf
cmpsb
out
jmp
testb
add
andl
insl
or
or
sbb
and
jne
sub
test
adc
pusha
mov
lock
push
or
and
adc
pusha
loop
sbb
adc
push
sbb
jne
or
push
incl
mov
lods
and
mov
cmpsl
mov
or
sbb
xor
sbb
popf
lea
test
mov
mov
mov
insl
sbb
dec
push
add
lods
sarb
sar
push
sub
add
pushf
jecxz
push
push
mov
cs
push
loopne
jne
cmc
iret
mov
cwtl
push
jp
hlt
mov
jg
xor
or
xorb
mov
call
push
mov
je
dec
movnti
movsl
shll
adc
push
jecxz
dec
pop
pusha
or
add
ret
sub
dec
adc
cmp
jge
notl
push
cmp
sbb
sbb
shlb
popa
lret
sbb
inc
add
lock
add
call
sub
push
lods
dec
jl
arpl
pushl
cmp
cmp
es
sbb
inc
jmp
mov
adc
mov
in
es
insb
inc
push
and
cmp
std
adc
inc
inc
test
addb
sub
push
add
push
lahf
sub
mov
insb
fldl
mov
jmp
loopne
or
jo
adc
insb
decb
sbb
xchg
aaa
adc
sbb
pop
jmp
adc
mov
fs
pop
testl
inc
repz
insb
pop
xchg
xor
inc
sub
mov
push
loope
jmp
mov
cmp
jne
xor
out
add
je
cwtl
pop
mov
add
data16
mov
cmp
sbb
adc
adc
dec
bound
sub
dec
adc
sysexit
mov
std
ljmp
inc
jmp
push
mov
mov
stos
push
add
mov
fimuls
nop
jecxz
push
push
adc
adc
adc
lds
mov
sbb
vpsraw
pop
pushl
xchg
daa
sbb
lea
and
imul
push
aam
ret
fsubr
pop
or
fisttps
add
lret
sbb
xchg
fisubrl
cmp
mov
adc
mov
sbbl
jecxz
out
pop
sub
sub
jmp
pushf
sbb
sbb
repz
sbb
or
cs
cmp
mov
mov
jge
mov
ja
jo
and
sbb
pop
sub
xor
test
cmc
mov
xchg
icebp
mov
iret
adc
loopne
pop
mov
dec
cmp
lea
or
mov
pop
add
shr
add
or
pop
add
popl
mov
shr
or
mov
pusha
out
mov
rorb
xlat
bound
scas
push
bound
mov
sti
in
stos
mov
aam
pop
or
shll
adc
outsb
daa
cwtl
add
int3
cld
push
mov
adc
fnstcw
inc
dec
and
ds
inc
dec
add
lea
mov
shll
cli
mov
adc
ss
inc
lods
or
mov
cs
sub
xor
mov
or
fwait
repnz
orb
push
push
push
sbb
cmp
adc
mov
clc
inc
jbe
pop
jo
pop
daa
fcoms
in
jmp
inc
or
call
cli
xor
add
or
shl
andl
adc
aad
mov
es
test
add
incl
stos
imulb
or
test
push
sysret
xchg
lret
je
aam
cmpb
loop
test
sub
inc
xlat
cmp
cmp
push
adc
jecxz
push
fdiv
stc
out
mov
shlb
insb
out
fstl
lods
negb
add
sbb
pop
call
test
dec
cld
sub
jne
add
call
dec
mov
adc
hlt
stos
or
lret
xor
inc
ljmp
shrb
mov
fstl
inc
add
fld
add
ds
add
or
jle
ja
ficompl
lret
mov
pop
ljmp
mov
dec
cmp
lock
jl
cmpb
shll
xor
cmpb
idiv
mov
xor
inc
adc
test
fstps
aad
add
scas
stos
push
adc
inc
push
push
mov
ljmp
and
pop
xchg
iret
ds
inc
adc
pop
lods
dec
sbb
dec
mov
pop
or
lods
subl
mov
shrb
mov
dec
cmp
dec
add
inc
addr16
jnp
adc
enter
out
or
add
inc
loope
into
jne
xlat
shll
and
shll
ja
xchg
push
je
mov
or
or
cltd
jp
mov
mov
or
arpl
adc
aam
adc
mov
adc
push
jl
outsl
movsw
xor
dec
outsb
rorb
pop
xor
hlt
mov
les
jae
pop
and
inc
or
aad
mov
pop
int3
add
push
xor
das
hlt
iret
push
in
imul
inc
push
neg
lahf
ja
lock
sbb
sub
inc
fnstcw
jns
sbb
xor
xchg
fwait
aad
adc
or
sbb
push
push
dec
imul
rcr
aad
icebp
and
adc
jne
fs
insb
cmp
pop
jne
pop
pop
pop
ret
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
fimull
mov
jmp
das
ljmp
lock
je
push
mov
je
cld
add
xchg
push
cmp
mov
mov
mov
ljmp
insb
add
test
push
nop
ss
xchg
push
sbb
xor
sbb
sarb
push
sbb
into
jbe
jns
movsl
add
jmp
bound
jne
cmc
aam
sbb
jle
cmp
daa
push
or
adc
inc
cltd
and
ds
cmp
loop
push
and
fwait
mov
push
es
xor
out
adc
inc
insl
test
adc
adc
gs
or
cmpsl
sahf
mov
stos
cs
fidivs
sbb
cld
and
jno
ss
dec
pushl
dec
out
ss
hlt
push
push
daa
add
adc
inc
or
insb
rclb
insb
leave
mov
and
jne
cmp
testb
and
jmp
fists
or
jg
jmp
je
pop
mov
mov
mov
xchg
in
pop
je
test
fisttps
add
out
push
cmp
ja
add
cmp
adc
fcomps
loopne
or
push
jge
je
mov
cmp
pop
xor
pop
add
add
add
push
aad
mov
mov
addl
and
in
fbld
outsl
sbbb
sub
fimuls
inc
dec
sbb
lea
inc
imul
je
fildll
push
xor
fmul
or
int
jmp
pop
pop
push
xor
add
scas
imul
mov
dec
dec
sahf
sub
jne
cmp
cltd
jo
jecxz
or
lea
push
cmc
sar
fs
mov
and
adc
add
jne
jne
out
push
in
add
je
imul
adc
xor
push
stos
movsb
sub
imul
pop
and
cld
addl
in
and
roll
adc
rorb
jl
mov
and
repz
pop
mov
push
rcl
rcl
cmp
repz
xlat
fcomp
or
fstpt
rcrb
add
adc
fcmovu
sti
inc
add
inc
into
callw
adc
sub
nop
cmp
add
add
mov
mov
test
push
push
push
fisubrl
jl
mov
sarl
and
or
push
jb
xchg
rorl
push
je
test
test
jo
jmp
icebp
adc
mov
push
xor
push
xorb
std
inc
test
and
add
add
pop
xor
lea
dec
incl
gs
sbb
dec
fsubl
fdivr
lea
sar
inc
mov
mov
popa
loopne
mull
or
or
or
mov
ja
mov
mov
sbb
into
call
push
mov
and
add
es
pushf
push
pop
cli
add
or
push
vmaskmovpd
push
or
dec
movb
or
fdivs
lock
pop
ljmp
or
cmp
mov
and
lea
pop
sbb
movsb
subl
jae
xchg
mov
pop
inc
mov
adcb
mov
jb
outsl
in
and
loopne
dec
lods
and
xchg
int
inc
inc
or
mov
mov
mov
jne
add
add
dec
test
rolb
push
mov
push
inc
xchg
cs
loopne
bound
mov
xchg
lcall
enter
jmp
or
ret
fiadds
mov
push
addl
int
imul
fimull
add
and
rorb
orb
jle
jle
orb
scas
jne
fcmovbe
add
add
rolb
rorb
jbe
or
and
add
or
and
mov
gs
push
lret
dec
jae
adc
inc
xchg
lods
rolb
cli
sbb
push
scas
ror
ss
shrl
js
add
out
mov
jmp
mov
inc
lods
inc
sahf
dec
sub
lock
sub
repnz
repnz
xchg
cli
cli
inc
cli
div
sub
add
add
xchg
sbb
push
sbb
call
lret
mov
mov
adc
xchg
nop
lock
aam
dec
xor
inc
data16
es
xchg
leave
mov
xor
adc
rolb
cs
inc
adc
idivb
data16
inc
mov
xchg
jb
loopne
mov
fcoml
lgs
pop
repnz
pushw
je
dec
pop
sub
loop
out
jge
xchg
cmp
rcl
mov
inc
test
dec
xor
sbb
pop
je
mov
sub
repnz
jne
fdivrs
aam
inc
and
or
jbe
dec
ss
inc
cwtl
mov
cmp
and
adc
dec
xor
call
push
adc
xor
cld
lea
movsb
repnz
fcmovu
mov
mov
insl
call
inc
add
lods
rolb
lahf
mov
sub
sub
movsb
add
cmp
imulb
xor
mov
test
nop
das
test
or
and
sbb
popa
and
nop
inc
lock
movsb
adc
cmp
jne
sub
sub
jmp
lods
pusha
gs
mov
adc
aad
pop
insb
cwtl
sub
loop
out
pop
sub
es
jnp
lock
inc
mov
push
add
push
je
js
nop
sbb
dec
adc
adc
shr
out
decb
sub
jb
lcall
fisttpl
mov
and
icebp
inc
test
xor
fiadds
inc
insb
jle
inc
imul
and
inc
ss
loopne
fbstp
fsubrs
add
mov
push
and
hlt
xor
xchg
cmp
fnstcw
out
cltd
loop
jae
sti
and
xchg
inc
aad
stos
mov
add
or
mov
add
sub
push
xchg
mov
faddp
dec
into
or
and
sbb
or
mov
pop
lcall
dec
scas
push
rolb
mov
jne
push
shlb
add
pop
xchg
loopne
subb
jne
cmp
sbb
testb
lock
inc
add
sbb
pop
in
jg
push
imul
dec
cmp
jge
pop
lock
incb
bound
movb
dec
cmp
popf
xchg
mov
add
dec
add
add
fadds
dec
push
and
mov
cmp
add
or
pop
imul
inc
ret
and
mov
mov
testb
adc
hlt
add
cmpsb
sarb
dec
lcall
scas
xor
add
add
test
out
adc
aad
mov
mov
inc
cld
lea
or
movsl
popf
cmp
or
fs
rcrb
lahf
cmpsl
outsl
nop
push
or
add
or
pop
pop
scas
add
xchg
sbb
dec
adc
fisubrs
rcr
jg
mov
dec
lret
push
xchg
pop
xchg
adc
lea
jg
addb
mov
mov
out
pop
cmp
xor
into
pusha
inc
jmp
and
mov
rcrl
test
xor
mov
ret
mov
prefetchw
testl
xor
cmp
or
inc
push
pop
jae
or
or
dec
push
imul
inc
or
push
or
cmpsl
inc
mov
mov
in
pop
pop
inc
mov
xlat
dec
pop
scas
inc
push
xchg
jp
add
sbb
popf
jmp
jne
and
and
or
dec
push
lret
cmp
add
or
in
and
inc
push
sub
fldcw
inc
mov
out
sbb
sbb
inc
fsubl
adc
stos
jg
sub
adc
xchg
xchg
add
jmp
nop
test
into
in
push
add
stmxcsr
dec
xchg
test
bound
cltd
ss
or
add
imul
add
sbb
xchg
jle
jnp
call
je
and
sbb
inc
pushf
pushf
cmp
jg
into
into
into
sbb
test
pop
and
outsl
lock
fstpl
sarb
push
pop
nop
pop
sub
push
cwtl
pop
mov
dec
int3
or
shlb
or
pop
leave
push
xchg
add
or
dec
daa
in
aad
lcall
add
leave
lahf
pop
test
test
adc
add
and
sbb
adc
out
push
insb
sbb
je
or
cmp
or
sub
jmp
mov
lret
push
pushf
lret
xor
subl
and
scas
sub
push
dec
xchg
add
inc
ret
popa
insb
sbb
insb
ret
push
cmp
add
mov
lods
push
cmp
add
inc
into
and
jno
sbb
dec
pushf
outsb
sub
pushw
jmp
sub
push
cld
push
sbb
xlat
jle
and
daa
or
hlt
daa
dec
xor
adc
jge
inc
movsl
mov
jl
shl
cmpsb
pop
or
sarl
mov
icebp
xchg
rorl
and
pop
xor
jne
rorb
aam
xlat
mov
cmp
xchg
cltd
subl
cwtl
orb
adc
sub
jmp
mov
fmull
rclb
add
dec
ds
je
and
adc
cld
push
outsl
test
mov
cmp
lret
inc
inc
dec
mov
jmp
pop
sbb
enter
mov
lds
out
and
cmp
or
jbe
into
insb
sbb
sub
push
iret
xor
in
add
sub
cmp
cwtl
cmp
mov
movsl
cmovno
add
sbbb
nop
sbb
or
rcl
or
or
ret
imul
sub
adc
jp
pusha
push
xor
ja
and
sbb
inc
xchg
imul
xchg
pushl
shlb
push
push
mov
aam
cli
cmp
and
push
dec
push
xchg
fcoms
mov
pop
mov
xor
jge
pusha
adc
sbb
xchg
mov
mov
test
sub
or
shlb
rclb
fcoml
sub
mov
xchg
cmp
rorl
inc
sbb
clc
cmp
adc
add
pop
jge
lea
or
hlt
adc
enter
sub
stos
and
mov
and
xor
adc
jns
push
pusha
lods
push
shl
push
enter
xor
imul
add
adc
inc
add
push
sbb
or
sub
sbb
adc
sbb
jae
jmp
push
push
xlat
movsl
push
xor
test
or
sbb
outsb
mov
popa
shrl
mov
mov
or
sub
sbb
dec
mov
inc
aad
or
adc
notl
aas
adc
shlb
loopne
mov
adc
jmp
sub
xchg
aaa
or
jbe
pop
fisubrl
shrb
push
and
push
or
add
push
mov
outsb
in
out
sub
mov
or
enter
add
inc
adc
sbb
inc
pop
add
mov
or
fimuls
mov
je
outsb
jns
cmp
mov
ret
ja
lods
xchg
andb
cwtl
xchg
sti
int
pusha
xchg
test
sbb
in
and
lahf
orb
lock
mov
daa
dec
cld
add
aaa
pop
pop
jl
je
lea
ss
mov
dec
pop
jbe
mov
gs
jbe
mov
pop
nop
sahf
lret
jle
ret
jae
fsubs
lock
call
push
jmp
dec
loop
or
das
movsb
fisttps
mov
ss
int3
pop
sub
js
hlt
sub
cmpsb
pushf
adc
mov
leave
add
or
pusha
jo
jae
adc
clc
addl
fcompl
movsb
shrl
in
push
mov
movb
sbb
mov
push
lret
add
add
cwtl
es
sar
stos
push
and
push
adc
ds
cmpsb
inc
hlt
xor
ret
add
push
subl
sbb
adc
sub
push
mov
mov
push
adc
sbb
and
ds
push
mov
xor
sbb
add
sub
sub
cmp
pop
add
xor
xor
push
insl
add
push
out
enter
pop
add
xor
outsl
and
shlb
adc
ss
sub
sbb
popl
shlb
out
cli
sbb
inc
dec
xchg
pop
inc
inc
adc
js
or
and
push
xchg
clc
or
mov
mov
or
rcrl
dec
call
outsl
cmpsb
ss
loopne
clc
div
cvttps2pi
mov
xchg
lcall
and
je
daa
ds
popf
and
test
mov
push
fisttps
rclb
and
jae
cmp
jmp
fstps
push
xor
push
shrb
and
sub
das
fcomp
in
fidivl
adc
xchg
and
loopne
in
dec
shlb
add
inc
jmp
aaa
test
lea
addr16
push
daa
lea
jl
int3
stc
mov
data16
loope
ljmp
sbb
ret
addr16
dec
or
int3
mov
orl
in
enter
in
call
mov
lods
int
loopne
fistpl
lahf
mov
mov
mov
in
cmp
xor
movsl
fsubs
mov
xor
pop
inc
pop
pop
inc
jnp
sbb
rcrb
and
xchg
notb
ja
add
sar
push
or
in
shrb
shlb
call
fs
test
inc
sub
les
xor
imul
jbe
xor
pop
inc
imul
mov
cmp
cmc
adc
test
ret
adc
pop
add
dec
pop
fdiv
mov
add
leave
iret
mov
xor
jne
aad
and
jmp
pop
or
arpl
aas
mov
adc
leave
mov
sbb
jne
xchg
lret
int
cmp
movsl
int3
inc
inc
adc
push
cs
lret
idiv
dec
je
arpl
jmp
ds
jp
bound
das
sub
xorb
add
movsl
cmp
or
mov
jb
dec
cmp
and
and
cmp
sbbb
imul
and
and
mov
xor
xchg
fsubr
rcl
xchg
and
sub
fs
lret
dec
repz
dec
or
in
sbb
or
in
pop
js
insl
push
xchg
or
in
cmovge
leave
adc
paddq
shll
je
jp
iret
add
mov
sub
test
dec
outsb
in
jno
push
outsb
insb
dec
lahf
jg
pop
or
in
add
andl
xchg
stos
rcr
cmpsb
arpl
cld
insb
prefetch
jne
pop
arpl
sbb
jbe
movsl
mov
cwtl
imul
push
jge
shll
push
dec
daa
xor
adcb
aaa
call
shrl
jno
sub
daa
xor
loopne
and
xchg
xchg
imul
sarb
cmp
mov
nop
xor
roll
dec
int3
add
xchg
mov
add
adc
fs
or
adc
cltd
fs
dec
and
fs
dec
xor
xchg
dec
es
cmp
inc
inc
es
fs
fs
insb
insb
add
pop
mov
sbb
add
pusha
add
add
sbb
adc
in
add
clc
hlt
jae
or
mov
and
inc
clc
sub
lock
jno
xor
add
adcl
jecxz
stos
addr16
push
add
test
sub
add
addl
add
fsubl
push
sbb
or
test
nop
add
dec
es
imul
fs
inc
mov
adc
in
aam
aam
mov
test
imul
adc
mov
pushf
xor
hlt
mov
sarl
push
fstp
sub
out
shlb
push
dec
sbb
sbb
jbe
jge
das
pop
shll
mov
ret
inc
lock
faddl
push
jg
push
add
jmp
jg
or
mov
mov
mov
push
adc
outsl
in
gs
inc
mov
mov
seto
je
inc
cmp
int3
insb
inc
in
insl
nop
xchg
cld
mov
adc
insb
repnz
adc
aam
insl
jo
enter
ret
out
cmpsb
sbb
call
in
sub
adcl
popa
adc
cwtl
or
inc
rorl
insl
adc
xor
out
test
rcll
insl
dec
pop
movsl
xor
or
xchg
pop
movq
xchg
loopne
mov
shrb
add
out
inc
push
and
dec
sbb
add
adc
or
cmpsb
outsl
cwtl
ficoml
outsl
jnp
mov
or
out
out
jbe
rol
xor
adc
daa
int
aam
arpl
je
lds
jns
out
or
lods
imul
xor
add
fcomp
aam
xor
sbb
push
xlat
call
jno
add
insb
jno
daa
mov
lret
test
lods
mov
daa
daa
daa
daa
mov
daa
daa
daa
enter
inc
test
push
sbb
dec
pop
movsb
mov
jb
pop
dec
mov
jl
sbb
jo
lock
add
mov
jb
inc
push
or
lea
jae
dec
xchg
jecxz
int
shll
notb
sarl
or
sbb
dec
roll
mov
push
inc
je
mov
inc
dec
push
insb
je
cwtl
fwait
loopne
xchg
je
or
xchg
or
or
jne
mov
mov
aam
mov
push
loope
mov
xor
jmp
aas
inc
adc
arpl
jbe
outsl
fcomps
in
adc
mov
jbe
lret
vpaddw
xor
mov
mov
push
pop
mov
std
xchg
fwait
loopne
fisttpll
sti
and
push
mov
pop
test
fnstenv
mov
sub
push
in
push
movl
fiaddl
aas
fdivr
dec
ja
pop
nop
sub
cltd
pop
xorl
icebp
addl
mov
dec
sub
fwait
bndldx
pusha
sbb
push
cmp
out
in
xor
fiaddl
pop
adc
mov
sarb
sub
adc
insl
fisubl
cltd
pusha
inc
add
dec
xor
jo
adc
cmp
adc
pop
or
lds
add
add
xor
out
int3
xchg
cmp
test
jb
mov
addb
lods
or
dec
outsb
add
out
jns
popf
pop
add
mov
lock
test
das
dec
inc
mov
loopne
jns
movsl
adc
mov
mov
jg
xlat
faddl
mov
cmp
lods
cmp
nop
adc
dec
movsb
nop
add
jp
mov
popf
sbb
xor
add
xchg
pop
jo
lock
xchg
jp
add
cltd
movsb
mov
out
or
and
ss
inc
lea
insb
mov
pop
jmp
sub
int3
cmc
and
sbb
xor
add
test
jnp
jnp
add
mov
and
sbb
dec
pmulhuw
je
cmpsl
loopne
or
or
xor
sbb
enter
or
and
and
adc
test
enter
in
aaa
call
xor
mov
aam
test
insl
das
mov
popf
or
mov
adc
or
in
and
jle
sbb
adc
shlb
insl
or
pushf
int
loop
push
mov
sbb
loopne
dec
leave
adc
pop
xchg
jno
in
test
jg
scas
lret
out
jl
pop
add
and
sub
sysexit
jmp
jg
in
nop
push
cmp
faddl
leave
in
repnz
test
adc
or
insl
xlat
cwtl
or
cmp
inc
or
popf
push
movsb
or
xchg
mov
pop
lock
inc
pop
aam
sbb
add
mov
xorl
xchg
gs
pop
pusha
mov
out
notl
xorl
push
or
add
add
popa
inc
add
loopne
js
inc
andl
inc
int
fistps
ret
xor
std
int3
in
shll
add
sti
dec
jb
aaa
movsl
or
adcb
ret
aam
xor
insb
rorl
mov
dec
inc
mov
lds
rol
ret
test
sbb
mov
dec
outsb
bswap
enter
dec
dec
dec
mov
dec
dec
dec
xchg
cwtl
mov
pop
and
adc
movsb
lds
or
popf
dec
icebp
cmc
and
lcall
popa
call
pop
fmull
test
shl
push
in
adc
addr16
pop
or
movsb
and
fsubl
outsl
cmp
xorl
nop
hlt
mov
dec
mov
pushf
jmp
sub
mov
mov
mov
mov
mov
repnz
xchg
adc
pop
dec
pop
fwait
in
hlt
jne
dec
push
sub
dec
adc
enter
push
aaa
decl
subl
mov
stc
imul
pop
in
pop
mov
inc
mov
sub
add
pop
mov
mov
inc
inc
pop
lds
mov
sub
in
push
mov
push
movsb
jnp
sbb
pusha
popf
call
cmp
push
fwait
dec
mov
in
xchg
sub
outsl
das
in
je
and
and
lds
sahf
inc
sbb
popa
fisubl
and
icebp
mov
mov
fnstsw
mov
mov
pop
fcomps
mov
inc
pop
or
lcall
das
mov
push
out
pop
bound
insl
insb
jnp
outsb
xor
ja
enter
mov
aas
emms
sbb
mov
inc
fisttpl
inc
sarb
and
fdivl
xor
cltd
add
fcompl
jns
mov
adc
mov
mov
pop
cmp
mov
mov
push
jns
mov
sarb
ret
lea
sub
popa
test
adc
enter
push
xlat
pusha
xchg
dec
nop
inc
jg
mov
mov
push
mov
add
call
xor
in
nop
push
xchg
lahf
dec
inc
xor
or
or
add
xor
pop
enter
in
xchg
out
inc
jno
cltd
enter
pop
insb
inc
mov
inc
jb
imul
sub
pusha
ret
in
inc
lods
xor
adc
daa
fdiv
push
sub
ss
lds
fmuls
rolb
or
sbb
and
pop
sbb
xchg
mov
xchg
in
xchg
add
sbb
fwait
scas
inc
adc
gs
pop
mov
push
cmp
mov
xchg
gs
or
outsl
mov
and
add
adc
lock
fwait
and
jnp
aad
pushf
and
clc
xchg
adc
push
jb
popa
xchg
cmp
mov
popf
aam
fiaddl
or
sar
in
rorl
in
jg
inc
and
xchg
add
sbb
popa
mov
sub
into
enter
sub
lods
iret
sbb
mov
mov
mov
sbb
pushf
fistps
test
nop
push
mov
in
ljmp
lcall
enter
popa
adc
or
xchg
xchg
test
test
xchg
call
dec
push
fstpl
or
add
and
jecxz
push
pop
nop
inc
mov
pop
nop
pushf
adc
xchg
sub
mov
pop
dec
in
js
sub
stos
bound
fisttpll
push
shll
in
push
lods
mov
fsubrs
loopne
in
adc
out
fs
mov
and
inc
mov
pusha
out
out
cwtl
ret
sub
loopne
shrb
dec
add
sub
les
xchg
je
or
rorb
and
add
inc
je
cwtl
adc
add
dec
enter
test
int
or
push
dec
mov
push
xchg
or
pop
lcall
ljmp
shrl
insl
mov
test
or
and
movsb
gs
pushf
and
mov
stos
xchg
in
sbb
xchg
or
popa
sbb
nop
pushf
es
pusha
je
lahf
lea
xor
jnp
fcmovbe
test
dec
add
inc
mov
sub
lahf
or
scas
pusha
popa
dec
and
arpl
popa
loope
cltd
clc
movsb
adc
pop
out
scas
or
imul
mov
sbb
ret
imul
cmp
data16
pushf
test
inc
and
scas
lahf
or
add
lods
mov
mov
adc
inc
lcall
pop
cmp
push
stc
test
lea
aam
add
je
add
mov
fwait
int
es
out
in
enter
mov
cmp
xor
add
mov
and
adc
in
mov
push
nop
sub
mov
pop
adc
adc
push
ss
xor
pop
test
and
push
mov
and
pop
outsb
in
sbb
mov
sbb
leave
aam
int3
int3
sbb
stos
imul
mov
pop
cmp
inc
popa
add
and
inc
push
daa
in
aam
divl
aad
sbb
xchg
push
addb
stc
xchg
orb
cmpsb
pusha
adc
mov
in
pop
int3
mov
icebp
pop
cmp
xchg
leave
int3
mov
adc
movsl
int3
lcall
aas
add
sub
or
stc
test
shlb
psubsb
shlb
push
inc
jmp
adc
aam
xor
and
les
adc
imul
out
test
mov
leave
insl
nop
movsl
test
pusha
inc
xchg
and
jbe
fucom
sub
or
mov
insb
js
mov
lea
lods
cltd
add
fs
and
nop
or
sti
rorb
inc
movsb
sbb
movsb
adc
cltd
nop
out
nop
and
outsl
ret
inc
fsubl
mov
int3
jo
cli
and
mov
dec
inc
add
cs
sub
push
enter
mov
test
aad
pop
enter
iret
or
mov
adc
and
or
andb
fldt
ljmp
mov
inc
pop
xor
cmpsl
jg
lods
or
cmpsl
aas
sub
nop
movsl
adc
mov
inc
cmp
adc
fwait
sub
mov
jg
push
xor
xchg
out
nop
sbbl
inc
xchg
add
sbb
mov
inc
test
sbb
scas
sbb
push
sub
roll
push
loope
add
lock
arpl
or
dec
movsl
push
test
or
ja
mov
xchg
pop
mov
xor
sub
push
test
adc
inc
mov
pop
leave
enter
and
es
cmp
xlat
push
in
xchg
fildl
dec
cmp
push
xor
inc
push
dec
push
fs
add
fdivrs
lock
sub
mov
or
dec
setne
ret
xchg
and
dec
pusha
stos
inc
sbb
jne
ret
mov
dec
xor
mov
outsl
add
add
nop
or
std
add
cltd
nop
inc
es
adc
fs
push
out
and
repnz
cmpl
es
mov
insl
add
xor
lock
push
fisttpll
lea
sub
mov
ret
fdiv
add
gs
cmpsb
pop
add
in
gs
mov
add
ja
das
and
inc
dec
call
nop
sub
stc
inc
in
pusha
inc
in
andl
fmull
xchg
or
inc
mov
xor
jg
add
jbe
enter
fdivrl
ss
mov
pop
nop
pop
mov
inc
in
sti
or
ret
lock
in
or
sbb
mov
xchg
int3
inc
fadds
dec
gs
and
das
mov
test
inc
fsts
jg
xor
scas
decl
ljmp
push
or
push
and
cmp
pop
lea
cld
adc
in
and
dec
shrb
call
add
xlat
adc
sub
test
add
mov
or
sbb
clc
xchg
in
xorb
mov
adc
jne
xchg
xor
mov
mov
roll
push
xor
in
dec
clc
scas
shrl
push
daa
xchg
jae
pop
insb
sub
or
loopne
push
test
fisubrl
jge
scas
les
xor
pop
mov
xor
test
fcoml
adc
sub
or
je
xchg
or
cmpsb
call
adc
add
aam
pop
pop
mov
pop
push
lret
jmp
xor
or
sub
dec
or
nop
dec
cmpsb
push
jne
in
adc
inc
test
mov
add
lret
rcrl
mov
lds
pop
adc
inc
jo
sbbl
insl
sub
test
inc
add
sbb
hlt
adc
sub
mov
and
or
mov
push
jg
push
gs
push
push
add
leave
insl
or
mov
shlb
test
push
nop
aaa
fisttps
roll
nop
mov
jl
ss
and
pop
cmpl
dec
es
pop
push
xchg
dec
es
pusha
push
dec
push
mov
fs
jo
mov
dec
rorb
inc
fsubs
cmpl
or
rolb
dec
or
out
push
add
mov
les
sbb
fdivrl
or
lret
mov
jo
cmp
adc
xchg
mov
xchg
dec
enter
push
mov
sbbb
xor
pop
add
adc
jno
scas
cltd
je
mov
in
insb
jecxz
sub
je
mov
mov
push
dec
imul
xor
mov
test
xor
and
sub
xchg
or
mov
mov
mov
mov
andb
lret
mov
cmp
rorb
or
sub
mov
cmpb
push
arpl
outsl
mov
pop
dec
jg
dec
xor
pop
pop
inc
jg
cld
ss
aaa
movsb
xor
jg
push
sbb
and
inc
push
push
mov
jmp
push
aad
mov
test
adc
aam
shl
mov
enter
imul
add
sbb
fdivrs
cltd
int3
inc
add
fcmovnb
aas
dec
push
add
push
push
les
adc
aam
push
push
das
nop
lret
jo
pop
popf
mov
iret
stos
pop
pop
xor
rorl
mov
fsub
pop
xchg
mov
les
lret
nopl
lods
add
xor
fs
inc
repnz
mov
add
loopne
faddl
aam
es
movsb
fbld
cltd
dec
mov
add
scas
mov
fdivs
fcompl
retw
add
les
enter
or
lods
and
pushf
ret
sbb
sarb
clc
aas
cld
push
add
jns
jns
fisubrl
sbb
adc
bound
inc
xor
mov
or
push
add
iret
mov
orb
pop
leave
jae
hlt
push
push
dec
xor
in
bound
nop
sub
and
or
mov
aam
add
sbb
mov
iret
scas
aam
stos
sub
jbe
xor
add
mov
xchg
sti
insb
adc
dec
or
sbb
xchg
daa
hlt
cli
mov
sti
xchg
dec
jb
cld
cli
scas
fs
cmp
xor
and
dec
rorb
cmp
add
adc
js
lods
inc
mov
je
je
sti
mov
shll
cmp
cmpsb
or
adc
nop
sub
inc
mov
adc
cs
shl
inc
mov
cli
push
repnz
or
push
movsb
dec
and
dec
movsl
test
mov
es
iret
mov
xchg
lret
inc
inc
or
rolb
les
sub
and
mov
das
decl
les
xchg
sbb
int
cmp
pushf
sbbb
je
xor
lret
daa
pop
jge
jnp
inc
inc
mov
rorl
or
cmp
dec
adc
rcl
xchg
test
nop
enter
mov
sub
shl
popf
push
repnz
lods
gs
stc
std
lcall
enter
in
jp
mov
imul
push
dec
add
push
pop
inc
xchg
out
loopne
jle
adc
add
mov
int
aam
push
repnz
dec
ds
inc
push
push
dec
fists
jne
fwait
nop
push
dec
xor
mov
pop
es
mov
push
mov
out
loope
jnp
and
push
add
inc
lar
mov
jp
add
add
and
mov
dec
mov
call
mov
cmp
jns
sbb
pop
adc
xor
fs
ret
push
mov
int
stc
push
stos
cmp
and
mov
es
test
add
pushf
mov
add
fwait
iret
cmc
or
in
ror
add
mov
xor
sahf
testl
fcomip
fnstcw
inc
add
push
das
in
mov
repz
mov
push
loopne
add
call
mov
mov
ljmp
add
fistpl
or
jnp
mov
sti
adc
or
pop
and
xadd
imul
push
nop
mov
jl
push
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jg
mov
ficompl
pop
popa
bound
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
pop
cld
out
test
adcl
rcll
xchg
adc
push
or
or
outsl
cmp
adc
dec
in
data16
out
push
cmpl
cmp
repz
pop
imul
jb
sti
insb
outsl
arpl
fs
out
sbb
push
dec
imul
fadds
jne
push
gs
xor
cs
insb
push
bound
and
pop
popa
je
outsl
outsb
push
mov
sbb
out
mov
jnp
xchg
sbb
add
pop
sub
adc
je
outsb
dec
scas
push
inc
outsl
mov
js
je
jb
gs
cmp
or
clc
testl
add
add
je
push
or
xor
popa
mov
popa
jb
mov
cmp
dec
push
outsb
dec
xor
xor
ja
adc
cmp
cmp
imul
sahf
dec
and
jns
add
das
das
adc
jl
xchg
dec
push
inc
inc
gs
insl
fmull
dec
outsl
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
mov
insb
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
insb
adc
xchg
jae
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
xor
daa
push
scas
clc
sti
sub
sbb
dec
js
push
jne
into
cmp
insb
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
dec
jno
fcomip
mov
adc
cmp
pop
fldl
pop
adc
add
mov
imull
es
or
cli
cmpsl
jmp
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
mov
das
pop
pop
xor
fcomi
cmpsl
test
jnp
jge
jg
cmp
inc
mov
cmpsl
test
cs
and
push
fdivrl
dec
movl
jge
push
inc
insb
jae
cs
cmp
jne
inc
sbb
jo
inc
mov
xor
leave
fidivs
insl
and
jb
jbe
dec
push
push
fcmovnu
into
sbb
inc
sbb
lock
mov
and
add
xor
sbb
dec
cmc
stos
outsb
push
jo
imul
insl
test
hlt
lcall
jo
test
lods
xchg
idivb
and
mov
and
imul
sub
push
insb
xorb
inc
fnstenv
pop
popa
and
daa
mov
jne
pop
cmp
insl
and
insl
push
xchg
sub
insl
inc
cs
xor
outsl
or
dec
rclb
jo
lcallw
out
mov
add
xchg
and
or
jnp
or
imul
push
out
pop
or
fs
adc
cltd
xchg
mov
je
mov
and
push
ds
pop
adcl
fidivrl
add
and
mov
jns
push
daa
sub
cld
dec
inc
and
das
arpl
cmp
arpl
dec
popa
sub
gs
lret
mov
fiadds
inc
xchg
inc
jns
push
insb
imul
rcrb
push
loopne
lcall
nop
andl
inc
mull
push
push
fistps
sub
lcall
sbb
rorl
pop
fs
xor
hlt
adc
sbbl
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
adc
add
inc
sbb
push
mov
jne
push
gs
push
xor
mov
je
int3
inc
jle
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
cmp
xor
ljmp
imul
loop
fsubrl
outsb
popa
pop
or
mov
rorb
xor
push
push
leave
nop
inc
insl
imul
call
pop
xchg
cmp
xorl
lods
xchg
cmp
fstpl
and
pop
push
cmp
addr16
jae
sbb
scas
xor
fsubl
inc
jo
jo
sub
sbb
lock
push
imul
xchg
add
pop
dec
jmp
jo
mov
and
cmp
cwtl
ja
pop
imul
out
inc
inc
and
dec
data16
ret
jg
lcall
loopne
mov
cmpb
dec
cmp
rol
das
lret
jno
lock
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
shrl
cmpsb
gs
mov
dec
add
xor
pop
jle
push
jg
js
jae
je
xchg
pop
addr16
dec
pop
add
add
sbb
inc
xor
jne
sub
xor
sub
cltd
xchg
adc
adc
add
add
add
add
and
xchg
pop
push
cld
push
pop
pop
or
aaa
ds
push
pop
hlt
and
or
jge
out
pusha
push
js
or
sub
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
ja
mov
daa
mov
stos
fbld
ror
js
jo
dec
rorb
cmp
pop
sbb
cmp
mov
nop
xchg
xchg
xchg
mov
dec
pusha
ret
es
inc
pop
and
adc
xor
dec
pop
cmp
test
pop
add
loope
adc
cs
adc
dec
pop
data16
cmp
je
nop
sahf
push
pop
repnz
fisubrs
mov
xlat
pop
leave
add
inc
add
pop
and
dec
add
enter
test
pop
and
add
and
xor
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
daa
pop
push
jg
addb
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
addl
test
or
sub
test
add
sbb
xor
fists
outsl
ja
push
andb
dec
bound
rcll
dec
dec
stos
inc
ss
popa
in
dec
cmp
jne
in
mov
lea
dec
mov
outsl
js
push
imul
dec
and
xor
ss
insb
gs
mov
dec
jbe
mov
add
insb
in
dec
imul
pop
jns
inc
mov
imul
flds
dec
inc
jb
jns
daa
adc
enter
and
pop
in
jns
mov
pop
aaa
call
xchg
push
add
pusha
les
push
sub
arpl
push
imul
shr
jbe
push
push
lahf
xchg
push
outsb
pushf
fs
and
rcrb
movsl
dec
pop
inc
sti
cmp
add
and
sbb
es
les
dec
lahf
sub
xchg
pop
pop
push
push
jae
cmp
mov
aas
cmp
call
movsl
jae
addr16
subl
hlt
or
gs
mov
xchg
xchg
inc
shrb
push
push
push
dec
testl
dec
push
into
mov
cmp
xchg
fildll
dec
jge
cmp
push
sbb
mov
imul
call
sbb
jg
jmp
fs
in
and
xchg
jg
pusha
cmp
mov
jg
sub
test
mov
pop
push
fldt
outsl
xchg
push
jmp
mov
popw
pop
cmp
push
jl
cmp
cmp
push
das
jns
out
push
sub
es
xchg
out
ds
jnp
into
addr16
sub
sub
push
xlat
ret
gs
inc
jmp
movb
lahf
cmp
push
dec
in
mov
pop
pop
cwtl
jb
jne
shrl
push
jb
imul
mov
ss
lret
pop
loopne
sbb
cwtl
pop
popa
pop
es
jo
sub
mov
jl
lahf
sahf
out
outsb
sub
or
inc
add
clc
loopne
loopne
sahf
out
aam
shlb
in
adc
fildl
in
dec
loop
lahf
test
loopne
jns
negl
dec
xchg
push
nop
push
mov
out
je
pusha
jmp
insb
lahf
divb
pushf
data16
outsb
fs
repz
out
push
hlt
or
ficoms
ficomps
push
ss
fadds
dec
out
sahf
notl
dec
push
inc
inc
cmp
sahf
out
sahf
xor
sub
and
sarl
adc
cmpsl
push
hlt
iret
repz
sarb
mov
fiadds
mov
iret
jo
inc
inc
cmp
sahf
cmpsl
stc
cmp
cld
loopne
jns
out
movsb
jl
sub
repz
repz
rcrb
sub
cmpsl
pop
aam
pushw
lea
lcall
jg
jns
push
xor
add
ljmp
cmpsl
pop
push
js
cmpsb
bound
fs
out
xchg
jb
jae
jb
xor
push
in
dec
lods
pcmpgtw
xor
pop
sarb
push
clc
lret
incl
dec
jae
insb
divl
pop
flds
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
es
add
adc
or
popa
into
mov
mov
jnp
inc
loop
mov
pusha
mov
ds
pop
adc
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
cmp
jle
inc
mov
xchg
push
pop
mov
ds
push
jne
xchg
dec
je
lods
cmp
mov
jb
push
iret
adc
or
icebp
pop
pop
repnz
and
es
mov
inc
inc
roll
jle
add
push
fimull
or
xchg
sub
ds
xchg
insb
mov
jns
mov
dec
test
push
mov
jo
push
inc
inc
or
outsb
jbe
and
add
push
lock
pop
push
gs
fwait
ret
icebp
or
test
cmp
adcb
dec
push
dec
push
idiv
dec
sub
mov
pop
dec
aaa
inc
pop
push
daa
push
add
cmp
cs
lcall
adc
push
and
daa
pop
inc
sbb
xor
add
cmp
ds
sbb
mov
daa
cmp
and
dec
dec
inc
add
mov
pop
add
cmp
inc
and
jbe
inc
daa
pop
push
dec
sbb
pop
adc
add
push
dec
push
sub
jno
notb
adc
xor
sbb
aas
sub
dec
pop
test
cs
and
lods
and
ret
das
xor
pop
mov
ljmp
and
push
pop
add
dec
lock
push
cmp
sub
adc
and
out
inc
add
std
jge
jnp
and
dec
dec
or
or
pop
sub
pop
pop
pop
mov
xor
pop
or
adc
sub
pop
or
pop
and
push
inc
or
add
dec
pop
divb
sbb
or
xor
dec
mov
cmp
push
cs
sub
adc
test
inc
lea
push
adc
push
inc
pop
pop
inc
sbb
xchg
ja
sub
push
daa
sub
sbb
jns
mov
sub
das
sbb
adc
add
add
pop
cmp
sub
ficompl
int3
cmp
jge
sub
outsl
push
sub
pusha
lock
push
adc
push
dec
cmp
mov
push
or
mov
mov
push
or
bound
push
pop
xchg
shl
mov
jb
push
xlat
add
gs
data16
cmp
adc
inc
xor
pop
adc
push
add
mov
add
sub
popf
loopne
or
push
cmp
and
pop
push
ja
adc
sub
and
movsl
cmp
pop
adc
dec
nop
dec
cwtl
in
push
cmp
xorb
xor
pop
nop
push
mov
sarb
inc
adc
push
push
xor
xor
inc
outsl
jg
pusha
pop
jae
jnp
push
mov
push
testl
dec
add
or
inc
pop
hlt
sbb
fwait
cltd
mov
adc
jp
cmp
push
lahf
loope
outsl
insl
mov
inc
popa
outsb
push
push
mov
jmp
lods
adc
push
popa
inc
popl
out
fcoml
mov
bound
xor
jl
lds
jbe
out
sahf
cmpsl
push
and
nop
mov
loopne
aaa
push
push
xorb
pushw
xor
sahf
ja
testl
jnp
repz
add
cmp
ds
outsb
xor
add
pushf
movb
les
shl
push
daa
sbb
pusha
add
scas
mov
scas
inc
add
adc
cmp
pop
test
jnp
ss
sbb
pop
sbb
push
xchg
mov
dec
pop
mov
idivl
or
cmp
inc
add
push
or
sbb
sahf
adc
push
push
and
popa
iret
fstpt
push
xor
push
fdivrs
int
jmp
add
pop
int3
outsb
cmp
dec
movsb
daa
sbb
aas
add
mov
push
insb
push
aas
inc
and
adc
add
daa
push
fucomip
push
mov
lods
sub
push
pusha
sub
or
je
sbb
or
jp
add
adc
jo
iret
inc
xor
pop
pop
jnp
cmp
pop
out
sub
das
or
ret
testb
add
xor
out
pop
inc
cli
jo
sarl
mov
and
fcomi
scas
jge
fs
sbb
int3
int3
cmp
outsb
scas
inc
and
adc
cs
add
cmp
fs
ret
mov
add
daa
scas
ret
popa
test
out
jl
pop
cmp
fs
or
push
pusha
sub
lcall
push
push
inc
shll
push
das
push
cmp
loopne
pop
push
daa
push
xchg
jl,pn
addl
pop
sbb
lock
add
mov
neg
sub
or
daa
and
int3
and
stos
mov
mov
cmp
cmp
xchg
push
jle
mov
scas
movsb
call
pop
sbb
adc
es
loope
xchg
addb
lcall
cmp
pop
mov
and
ds
inc
sbb
in
sbb
es
or
and
push
dec
and
xor
cmpl
and
fcoms
dec
pusha
addr16
dec
hlt
ss
push
dec
inc
out
sbb
add
into
scas
sub
daa
int
xor
jg
push
sbb
push
mov
cs
sub
or
popa
push
sbb
push
fstpt
xchg
mov
iret
imul
in
pop
movsb
lcall
xchg
sbb
add
pop
lcall
xor
cmpsl
sbb
cli
push
hlt
cmp
or
cmp
or
sbb
aas
push
lcall
jne
jle
scas
popf
sysret
mov
cmp
orl
sub
dec
pop
ss
andb
lock
adcb
xchg
cs
fcompl
mov
push
pusha
dec
aad
or
bound
xchg
pop
push
js
test
and
xor
cmp
mov
sbbl
in
push
shlb
cmp
xor
add
or
loopne
add
out
jo
fsts
add
into
pop
icebp
cmp
and
ret
lods
pop
daa
sbb
and
inc
adc
shll
adcl
lock
sub
push
add
sbb
ss
push
fwait
push
sub
aaa
pop
cmp
add
cmp
loop
inc
jp
xor
lahf
out
or
mov
or
push
mov
jg
jns
popa
jne
push
xor
ja
and
das
add
inc
inc
or
or
sub
inc
xor
sbb
or
das
jo
pop
push
inc
or
or
sbb
xlat
ret
cmpsb
sub
call
popf
push
rcrb
push
ss
pop
fisttpl
daa
push
mov
push
mov
xorl
push
cmp
inc
ret
add
test
inc
pop
daa
dec
test
push
inc
adc
dec
lea
mov
mov
popa
out
jae
mov
mov
sbb
push
add
add
mov
or
out
loopne
push
pusha
jp
sub
cli
aas
jmp
jb
bound
sbb
std
rcrb
imul
and
insl
daa
jae
popa
xchg
pop
push
mov
xor
pop
fisttpl
daa
cs
and
or
xor
js
push
add
dec
adc
ret
jae
push
lea
les
lods
add
ret
cs
dec
nop
push
lock
in
mov
add
jo
iret
xor
call
xchg
cs
jae
or
push
es
add
dec
cmp
push
pop
adc
push
aaa
movsl
das
call
pop
cmp
ja
loopne
dec
add
dec
add
push
adc
mov
aam
add
lret
pusha
add
insb
xchg
sbb
jle
push
aaa
fmuls
pop
and
xor
mov
andl
test
adc
cmp
xor
or
cmp
or
daa
and
xor
dec
enter
pop
jbe
cwtl
daa
push
inc
inc
inc
lcall
inc
push
xchg
mov
fbld
inc
adc
lcall
adc
hlt
push
daa
pop
jge
pop
add
xchg
cmpsl
mov
push
aaa
mov
dec
dec
loop
inc
mov
xor
and
ds
adc
mov
pop
mov
adc
jl
sub
addb
dec
inc
je
popf
adc
outsl
sub
or
xor
push
xor
ds
and
xchg
ds
ja,pt
or
icebp
out
fnstsw
sbb
mov
inc
icebp
xor
repnz
repz
cmc
push
xchg
popf
push
pop
cli
push
pusha
sti
daa
nop
add
mov
or
mov
pop
das
dec
loop
stos
int3
shr
or
in
push
jo
ja
dec
xadd
jle
das
and
pop
dec
add
clc
mov
inc
push
cmp
divb
pop
inc
dec
cs
sbb
add
out
sbb
push
out
push
rolb
aaa
nop
add
xor
sub
jnp
adc
dec
push
xchg
mov
xor
mov
jg
daa
lock
adc
mov
and
mov
and
add
add
cltd
push
cs
cmp
sbb
push
loop
bndstx
cmp
and
cmp
add
and
pop
pusha
adc
dec
pop
cmpsl
sbb
mov
and
or
popf
and
rcrb
and
adc
xchg
and
adc
xor
and
push
jnp
push
dec
sub
mov
inc
push
sbb
popa
mov
pop
mov
fs
xchg
push
and
lahf
push
outsl
int
adc
ret
pop
aaa
outsl
dec
je
icebp
sub
iret
into
sbb
adc
mov
push
or
fldenv
int
and
add
inc
add
pushf
xchg
mov
inc
inc
mov
loop
dec
testb
push
leave
add
and
cs
push
sbb
sub
pop
sub
sub
cmpsb
xchg
cld
cmp
add
cmpsb
cs
inc
inc
js
jns
mov
jnp
daa
stos
hlt
cmp
aaa
cmc
or
mov
pop
push
pop
add
inc
push
pop
cmp
pop
or
and
adc
push
lock
fcoml
mov
push
inc
xor
and
and
push
shlb
add
inc
or
repnz
loope
in
add
or
jo
jle
pop
pop
push
mov
lds
outsb
mov
or
cmpsb
adc
and
sbb
sbb
lods
jmp
pop
test
jge
mulb
mov
and
push
and
cmp
fsts
and
into
sti
push
and
sub
sbbl
cmp
out
and
sahf
lods
cs
popf
push
xchg
testl
daa
addl
sbb
pusha
fildl
add
sbb
pop
add
sub
dec
scas
nopl
and
test
sbb
rcr
sbb
mov
sub
pop
mov
movsl
sbb
cmpl
or
and
sbb
mov
adc
and
sbb
inc
mov
cmp
push
arpl
push
cmp
and
sbb
push
mov
push
or
cmp
jns
in
decl
push
insl
and
stos
dec
pop
add
adc
cwtl
or
aaa
orl
push
xor
xchg
cwtl
push
enter
adc
es
xchg
push
mov
pop
jmp
daa
dec
lods
cmp
sbb
cmp
daa
jl
cmp
inc
or
adc
inc
pop
add
jae
add
sbb
pop
or
fildl
scas
sti
dec
or
scas
xor
add
es
add
ret
addl
jmp
loop
loopne
mov
jne
sub
aaa
sub
or
and
movsl
mov
in
inc
add
icebp
ja
gs
push
pop
adc
test
jge
sbb
xor
ret
cmpsl
aam
inc
daa
adc
sbb
dec
pop
loop
push
mov
push
cmp
pop
fwait
ss
hlt
cmp
xor
arpl
inc
inc
xchg
cmp
sbb
dec
push
iret
clc
out
push
pop
dec
dec
sbb
movb
and
dec
insb
or
imull
sbb
fadds
icebp
aaa
loope
fistl
mov
es
add
aaa
lock
es
sbb
ljmp
je
jo
insb
gs
mov
imul
add
outsl
jb
jp
mov
bound
add
mov
jns
push
pop
cmpsl
shrb
sbb
cmp
add
inc
fdivs
outsb
add
arpl
cmp
jnp
jecxz
insl
movl
leave
push
inc
loopne
sti
mov
push
lret
push
into
push
jo
or
fwait
int
ss
fadd
fisubl
lock
filds
loopne
xchg
imul
icebp
push
shl
push
cmp
push
jecxz
or
inc
testb
or
push
pop
in
or
dec
dec
jge
getsec
shlb
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
push
pop
subb
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
and
mov
pop
push
adc
xor
aaa
test
push
dec
cmp
and
rclb
add
adc
inc
pop
push
push
inc
jb
mov
mov
outsl
push
dec
imul
addr16
scas
pop
nop
pop
subb
cs
push
mov
dec
sahf
dec
inc
xor
xor
out
cmp
cmp
inc
iret
and
sahf
add
loopne
movups
rolb
insb
inc
int
mov
js
cmp
push
pop
add
and
inc
jle
pop
int3
test
sbb
decl
push
dec
fnstcw
cmp
xor
scas
ljmp
sub
hlt
ss
sub
xor
inc
dec
adc
inc
xor
popa
scas
out
jne
lea
mov
outsb
mov
imul
lea
inc
cmp
and
loopne
jne
push
mov
mov
lcall
jb
or
sub
pop
dec
jne
pop
loope
sti
cmp
popa
outsb
mov
dec
add
sbb
mov
mov
sub
or
addr16
jnp
scas
sbb
mov
xor
lea
das
outsb
movsb
inc
fstpt
es
andl
sbbb
and
enter
aaa
add
adc
or
iret
mov
fcoml
daa
xor
pusha
adcb
xor
fbstp
jmp
cmp
pop
add
fisubs
lock
cmp
addb
sbb
or
jbe
push
cmp
shll
daa
inc
inc
sbb
inc
dec
xor
pop
jno
sbb
sbb
cmp
add
sub
xchg
mov
pushf
loop
nop
sbb
xlat
adc
imul
das
popf
hlt
xor
adc
pop
dec
jp
xchg
cmp
and
dec
mov
in
xchg
cwtl
inc
cs
outsb
inc
add
outsl
pop
fnstsw
sti
data16
scas
test
mov
outsb
pop
sub
pop
sub
idivb
dec
cmp
inc
inc
outsl
jo
les
into
ds
jae
jno
mov
or
push
mov
movsl
push
rorl
bound
outsb
iret
fwait
in
jno
xchg
divb
xor
rcll
fs
fbld
fsubp
push
shll
inc
es
out
pop
pop
fstpt
cs
inc
mov
pop
push
fisttpll
dec
cmc
inc
or
jge
mov
push
mov
mov
jnp
pushf
scas
or
mov
andl
push
and
sahf
data16
jmp
push
mov
data16
push
daa
cmpsb
repz
ss
ss
mov
neg
lods
cs
push
sub
cmp
jns
out
fiadds
xor
sahf
imulb
sbb
mov
mov
sbb
lret
push
sahf
or
daa
test
in
cmpsb
push
cmp
aaa
adc
mov
dec
push
push
xchg
lahf
push
lods
xchg
in
jae
lret
sub
dec
repz
pop
cs
popa
pop
ds
push
mov
idivl
in
jnp
jo
adc
out
loop
insl
xchg
aaa
sti
loope
clc
das
push
fistps
xor
pop
push
mov
or
cmp
out
jns
testl
jbe
out
mov
sub
push
es
push
push
les
iret
repz
and
iret
sti
cs
pop
cmp
lahf
pop
or
into
jle
jns
jns
and
pop
into
push
mov
jl
adc
xor
xorb
jns
and
hlt
inc
and
out
mov
xor
inc
push
rcr
mov
lcall
and
dec
jl
out
ja
call
iret
shrl
dec
jo
shl
fwait
iret
call
xor
iret
repz
push
repnz
mov
dec
jbe
decl
addr16
jg
dec
sbb
scas
decl
add
cs
adc
stc
add
adc
loop
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
scas
int
mov
iret
mov
leave
loop
and
push
pop
or
add
idivb
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
add
mov
push
or
jmp
outsl
pop
adc
fisubrl
outsb
sti
push
dec
sub
inc
push
aaa
pop
lods
test
daa
inc
sti
ds
sbb
aaa
ss
sub
mov
aas
push
dec
fisubl
fists
das
push
jae
xor
cmp
dec
cs
jbe
je
push
ljmp
cmpsb
dec
add
push
pop
lods
xor
inc
lahf
insb
pop
push
mov
aam
dec
pop
je
jns
sbb
ffree
push
fisttps
jp
das
push
mov
xchg
outsb
push
inc
jmp
sarl
outsb
iret
push
pop
retw
test
flds
mov
ja
mov
adc
dec
dec
cmp
in
and
fs
push
dec
xor
or
ds
iret
inc
das
adc
das
mov
popa
insl
jo
fiadds
insb
je
push
push
stc
sti
leave
addr16
jo
jae
es
outsl
and
cmpb
sub
fnsave
cmpsb
mov
mov
repz
xor
xor
xor
xor
xor
cmp
cmp
mov
xor
xor
cmp
push
add
cmp
or
or
aaa
and
std
fimull
pop
push
dec
push
dec
add
lock
or
mov
cmp
dec
add
scas
inc
daa
jne
mov
pushf
and
pop
sub
inc
xchg
inc
push
inc
mov
int
cmc
es
add
pop
dec
mov
and
inc
sbb
inc
aaa
daa
inc
lahf
dec
sub
inc
cmc
cmp
jle
jmp
popf
cmc
inc
and
inc
data16
and
add
rorb
cmpsb
ss
fdivs
lock
stc
and
ss
or
test
sub
daa
and
sbb
or
xchg
ljmp
pop
add
js
mov
add
mov
add
jbe
pushf
cmpsb
daa
and
daa
nop
or
add
mov
pop
adc
test
push
or
jbe
aaa
lcall
push
adc
mov
inc
js
mov
fidivl
mov
and
push
dec
push
stos
jg
arpl
pop
push
and
sbbl
dec
sub
xorl
sub
dec
add
test
push
dec
repz
sbbl
sbb
sbb
inc
lret
cmp
push
adc
daa
es
jo
push
mov
lds
and
mov
push
pop
inc
test
lahf
lea
mov
mov
lods
mov
push
mov
movl
lahf
xor
mov
or
mov
lods
testb
das
add
adc
aaa
iret
or
loop
or
mov
lds
ret
adc
imul
sub
xchg
pop
mov
das
dec
pop
cmp
mov
mov
add
inc
dec
mov
add
push
add
pushf
inc
cmp
fnstcw
or
add
sbb
mov
imul
pop
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
sbb
int
mov
push
andb
or
je
push
sbb
lods
push
addr16
sbb
push
fildl
xchg
pop
and
nop
cmp
in
mov
dec
mov
loope
xor
outsl
lret
loop
xor
xor
mov
bound
add
sub
ss
or
jl
nop
js
js
inc
scas
imul
rclb
mov
lods
cmpl
push
sub
js
xchg
mov
mov
pop
xchg
aad
or
adc
jg
fistpl
fsubs
mov
dec
aaa
push
dec
js
inc
inc
cmp
push
adc
add
lock
sbb
push
das
das
ds
sub
sbb
or
ret
push
lcall
adc
sub
pop
and
jnp
or
cmp
das
push
adc
and
test
es
addr16
addr16
fs
data16
arpl
push
filds
dec
jns
inc
enter
adc
pop
adc
xchg
mov
adc
mov
add
mov
cmp
or
repz
ret
int3
xchg
mov
lock
je
mov
xor
inc
test
aas
xchg
dec
and
icebp
inc
pop
mov
jo
mov
push
jmp
cmpsb
in
mov
lret
aaa
inc
into
imul
clc
xor
and
clc
aaa
out
adc
adc
add
shll
int3
aas
aam
or
dec
jle
gs
and
push
xchg
mov
or
loopne
or
adc
hlt
jnp
sbb
push
je
int3
scas
xorb
jo
and
pop
imul
shlb
mov
add
push
cmp
mov
dec
lret
popf
adc
mov
std
and
pop
inc
and
inc
pop
dec
ss
mov
cmp
loopne
popa
int
sbb
mov
and
ss
dec
lods
xor
fcom
in
or
cmp
mov
cltd
add
and
cmp
cwtl
push
or
call
sub
push
sub
fisubl
pop
ss
popa
jo
ds
lock
adc
add
nop
inc
inc
or
pop
inc
adc
or
test
out
aas
xor
xchg
es
or
sbbb
dec
ja
cmp
mov
add
adc
pop
addr16
sbb
enter
aad
pop
imul
inc
mov
dec
fisttpl
pop
imull
pusha
mov
push
test
or
cmp
cli
sbb
xchg
xor
xorl
lods
inc
and
aaa
or
mov
sbb
push
arpl
daa
pop
pop
cs
dec
mov
cmp
nop
adc
loop
add
mov
inc
mov
mov
cmpsb
push
inc
sarl
inc
aam
dec
sub
jb
jo
jmp
jo
xor
xor
imul
xor
xor
add
rorb
jl
or
or
or
or
jnp
push
push
xor
add
push
inc
dec
clc
mov
pop
dec
add
pop
sub
sub
daa
inc
sbb
ljmp
push
daa
pop
dec
push
daa
and
add
aas
cmp
sbb
and
pop
sbb
ljmp
dec
cmp
and
push
inc
inc
sub
add
sub
or
add
es
push
pop
and
stos
inc
aam
xor
es
jmp
push
or
cmp
add
fbld
outsl
mov
add
adc
mov
pop
pop
add
jmp
pop
inc
push
cmp
xor
or
inc
dec
inc
push
or
push
insb
cld
call
inc
cmp
sub
adc
pop
xor
pop
dec
mov
pop
cmp
jne
jb
xchg
ret
mov
dec
or
popl
xor
sbb
das
cwtl
pusha
cmpsl
aas
mov
xor
inc
add
xchg
inc
mov
and
cmc
push
pop
mov
pop
loop
imul
push
sbb
add
cs
cs
mov
fdivp
add
push
inc
xor
push
mov
push
add
stos
inc
pop
clc
movsl
mov
xchg
push
push
dec
test
push
outsl
inc
mov
xchg
add
add
les
pop
pop
addb
lret
push
xchg
roll
pop
mov
cs
adc
jb
cld
jmp
push
push
cs
cmc
dec
pusha
mov
or
push
dec
smsw
rorb
outsl
xor
pushf
add
mov
into
loope
jg
lahf
adc
push
push
dec
push
inc
add
es
adc
aaa
pushf
add
dec
mov
adc
int3
ficoml
inc
testb
dec
dec
aaa
jnp
pop
aaa
pop
push
daa
pop
daa
pop
inc
add
ja
add
and
aas
icebp
out
push
push
sbb
pop
aas
add
cwtl
das
mov
inc
aaa
jno
sti
sar
inc
mov
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
pushl
clc
adc
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
ljmp
jmp
dec
fsubrl
stc
jbe
ds
insl
xor
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
incl
and
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
jmp
data16
mov
call
cltd
test
push
mov
js
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
lcall
outsl
cs
outsl
arpl
test
add
mov
mov
movsb
mull
mov
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
sbb
loopne
fsubs
push
dec
sub
cmp
xor
inc
daa
jp
ds
and
mov
cmp
jb
inc
pop
outsl
cmp
insl
cmp
dec
je
or
push
js
push
sub
jl
es
dec
xor
pop
push
push
popa
sub
pushl
pop
jns
gs
das
push
and
dec
dec
jnp
pop
fs
jne
xor
and
mov
aaa
push
xor
pop
xor
xor
out
cld
in
push
inc
add
inc
pop
mov
jbe
inc
inc
xor
and
aaa
inc
push
inc
cs
inc
ss
cmovb
pop
xor
pop
cmpsl
ss
and
inc
test
divb
mov
data16
jo
cmpsl
in
push
sbb
lods
adc
or
jo
pusha
xor
movsl
mov
dec
add
sub
dec
test
bound
and
cmc
inc
inc
and
mov
lds
les
mov
insb
int3
scas
mov
add
cmovno
push
test
mov
jle
loopne
inc
xchg
cmp
cmp
cmp
pop
jnp
insb
mov
mov
ret
mov
inc
sub
inc
shr
add
pop
js
pop
loopne
roll
xor
xor
frstor
sub
adc
fiaddl
pop
push
add
sub
adc
sbb
xchg
ja
adc
push
mov
push
sbb
arpl
mov
movsl
loop
sub
loopne
lods
mov
or
and
mov
popa
inc
adc
test
push
scas
out
xor
hlt
popa
sbbb
in
out
jge
push
mov
dec
jmp
adcb
pop
xor
and
sbb
sub
and
popf
add
add
mov
addr16
adc
push
jbe
fcompl
test
out
cmp
jae
scas
pop
adc
adc
mov
fs
pop
adc
aad
xor
loope
adc
das
sbb
cmp
adc
sahf
and
add
add
mov
iret
aas
xchg
push
mov
adc
popa
das
mov
test
stos
rcll
and
or
cmp
je
xor
js
fsts
imul
scas
adc
xor
add
add
inc
adc
notb
mov
pushl
insl
loop
sub
lcall
js
sbb
insb
push
push
popa
je
push
das
mov
add
inc
push
fs
pop
adc
add
out
mov
or
pop
push
gs
inc
testl
rcrb
pop
pusha
movsb
popf
movsb
sbb
or
jbe
push
int
aaa
ds
push
pop
arpl
xchg
shlb
push
cmpb
sub
add
pop
ds
sti
cmpsl
es
daa
sub
ljmp
and
ffreep
movb
xchg
cmp
push
dec
add
mov
cmp
push
stos
cmp
daa
xchg
hlt
mov
ret
inc
xor
fcoms
addr16
rcl
lds
add
cwtl
pop
lea
pop
mov
and
mov
pop
add
dec
jecxz
mov
es
nop
ds
add
mov
add
dec
sub
ja
bound
hlt
popa
jb
pop
sti
pop
frstor
and
jae
inc
jne
dec
xor
push
outsl
sbb
lahf
nop
rcll
jo
xlat
ds
inc
sub
mov
mov
jg
add
popf
mov
cs
pop
adc
enter
and
push
pop
orps
call
push
aaa
xchg
hlt
add
fs
jo
pop
test
and
or
sbb
or
pushf
dec
xor
cmp
mov
or
bsr
or
arpl
sbb
or
das
scas
and
arpl
and
cmc
pop
fcomps
fisubl
data16
xor
cmp
push
sbb
mov
pop
dec
jle
cmc
je
xchg
and
dec
mov
dec
pop
push
jnp
inc
xor
mov
lea
xlat
movsl
push
dec
hlt
movsb
cmp
pop
cmp
imul
aas
sub
jg
sbb
ja
pop
add
int3
add
scas
pop
dec
push
outsb
insl
lahf
and
lock
lds
je
addr16
push
xor
xor
mov
xor
add
hlt
xchg
out
imul
orl
pop
hlt
or
daa
int
mov
dec
pop
pop
xor
fwait
pop
adc
inc
sub
mov
sbb
mov
mov
dec
pop
movsl
orl
insl
outsl
pop
repz
cs
adc
insb
daa
mov
test
test
sarl
xor
pop
std
mov
and
xor
push
sub
cmpsl
pop
inc
and
or
jo,pn
das
dec
and
add
cmp
sub
inc
dec
loopne
jnp
jnp
out
inc
and
inc
add
or
add
inc
xchg
jns
cmp
movsb
arpl
gs
push
gs
movsl
shlb
lods
push
mov
dec
je
test
addr16
popa
aam
push
dec
push
dec
outsl
push
sbb
jmp
jae
jle
sbb
sbb
inc
cmpsb
punpckhwd
orb
je
scas
pop
pop
pop
inc
lods
sahf
sbb
fistps
or
push
inc
dec
push
inc
pop
addr16
aam
mov
dec
dec
xlat
jb
frstor
xchg
gs
push
daa
inc
movsl
loopne
pop
xor
fwait
pop
dec
jo
loopne
dec
push
dec
jb
push
and
mov
inc
aas
dec
pop
icebp
and
mov
and
lcall
loop
lahf
add
or
pop
dec
add
mov
sub
in
or
push
or
pop
xorl
jns
jb
jnp
inc
negl
adc
loopne
mov
add
mov
adc
or
fildl
sbb
jae
pop
addr16
fs
push
jmp
sbb
mov
inc
mov
scas
dec
push
push
sahf
out
dec
test
mov
dec
repz
mov
out
insb
xlat
pop
mov
add
cmp
and
dec
outsb
clc
sbb
inc
jl
in
dec
or
xor
cmp
or
pop
pop
push
rolb
dec
lret
xchg
push
out
and
inc
jmp
out
push
pop
dec
sub
dec
xchg
cmc
dec
add
xor
or
or
orb
push
dec
lahf
push
xchg
or
and
loopne
xor
fsubs
daa
jne
pop
daa
jo
dec
mov
inc
adc
pop
and
fwait
or
clc
sbb
imul
addb
adc
add
inc
insb
sub
and
outsl
or
push
insl
cmpl
push
dec
imul
andl
inc
inc
push
lahf
xlat
jne
mov
outsl
or
lods
in
je
sub
sahf
out
ficoms
push
pop
sbb
sahf
out
inc
push
andl
out
add
dec
cltd
or
ss
int
xchg
add
fldcw
pop
or
in
mov
sbb
and
sub
xor
inc
mov
push
mov
mov
mov
insb
fistpll
popa
xchg
sbb
fwait
int
ret
sub
add
or
out
insb
push
adc
pop
add
ss
adc
push
push
dec
ltr
mov
and
das
push
jecxz
xor
push
push
push
das
xor
xor
dec
pop
imul
mov
sbb
es
sub
mov
or
addr16
inc
push
jo
add
insl
pop
xor
dec
or
sub
sbb
xor
push
mov
push
inc
dec
dec
dec
jo
or
data16
clc
shlb
popa
arpl
push
mov
ss
mov
ss
cmp
xorb
dec
push
pop
lods
adc
jmp
push
dec
movsl
cs
ja
add
push
jg
pop
enter
xchg
dec
inc
xadd
sbb
inc
jle
jae
lahf
mov
inc
popl
lock
adc
cmpb
aas
mov
pop
es
mov
add
jbe
cmp
rorb
dec
repz
pushf
xor
add
mov
push
mov
dec
movsb
in
add
in
mov
hlt
pop
xor
xchg
rorl
lods
outsl
ror
xor
adc
add
jae
repz
daa
test
js
push
loopne
fimuls
daa
and
pusha
mov
pop
mov
inc
add
adc
fdivrl
jg
stc
jbe
addr16
outsl
mov
xchg
pop
leave
dec
inc
inc
pop
leave
xchg
pop
cmp
xchg
pop
leave
xchg
sub
ficoms
add
daa
insl
xchg
jno
call
aaa
push
mov
aas
pushf
cmpb
sbb
iret
mov
lods
ds
je
xor
out
add
cmp
repnz
cmpsl
aam
fs
dec
cmp
cmp
mov
lahf
dec
hlt
cmp
push
mov
ds
shrl
push
sbb
int
or
push
sub
and
es
cmp
adc
dec
movsb
in
add
lret
rclb
add
dec
fmuls
add
xor
fs
add
sub
sub
add
mov
out
or
test
push
dec
dec
mov
dec
inc
mov
fildl
xor
ja
sub
mov
adc
popa
xchg
dec
mov
outsl
scas
fs
pop
in
inc
lock
and
inc
adc
das
ret
push
lock
and
sub
dec
outsl
add
insb
and
mov
adcb
sahf
nop
pushf
outsl
filds
cmp
cmp
jns
or
ss
add
jnp
lds
dec
sbb
fs
sub
rorl
pop
scas
add
pop
outsl
out
pop
leave
adc
test
or
pop
leave
mov
cmp
hlt
pop
scas
add
outsl
out
adc
sbb
pushl
xor
push
enter
xchg
cmp
cmp
enter
or
adc
xor
fs
inc
call
test
or
cmc
dec
sahf
out
sub
cmp
push
push
call
sub
xchg
addb
roll
ja
mov
sub
adc
jg
xchg
push
xor
sub
filds
dec
push
pop
ds
popa
imul
mov
sbb
outsl
and
add
jo
push
nop
or
and
test
call
pop
scas
add
push
sbb
adc
out
jbe
jo
mov
pop
mov
xlat
call
adc
push
aaa
jns
add
aaa
aam
xchg
in
or
in
fs
push
in
daa
add
push
repnz
inc
add
inc
pop
lcall
pop
inc
fwait
loope
insb
push
push
jg
push
scas
movsb
imul
add
xlat
xchg
push
xchg
inc
and
sbb
add
add
jnp
inc
sahf
or
fimull
ja
or
inc
inc
push
inc
outsl
js
in
xchg
outsl
jg
sbb
mov
mov
push
test
lahf
data16
in
hlt
inc
fadds
scas
jmp
inc
push
mov
push
or
call
bound
dec
mov
adc
sbbb
inc
lahf
jns
or
xlat
or
inc
aad
int
mov
daa
sub
lods
mov
dec
inc
xchg
adc
pushf
xchg
xchg
xchg
inc
les
push
pushf
and
xchg
adc
sub
pop
adc
inc
cmp
mov
or
outsl
and
jae
outsl
fdivs
add
cld
add
inc
scas
lock
sub
inc
aaa
mov
pusha
pop
leave
add
xor
xchg
and
add
fadd
aaa
insb
outsl
add
and
inc
inc
and
rolb
leave
mov
xchg
hlt
xchg
addr16
add
jg
add
inc
mov
in
sahf
sbb
jo
pop
jb
insl
andb
movsb
pop
enter
mov
xchg
dec
sub
mov
inc
xchg
popa
fstpt
sub
lock
outsl
add
ss
mov
pop
adc
pop
mov
orl
enter
pushf
inc
aaa
andb
xchg
and
lock
add
sbb
mov
dec
xchg
add
add
daa
dec
dec
scas
jbe
out
lods
or
add
sbb
cmp
jnp
pop
xor
push
in
push
push
cmp
out
sbb
dec
lods
pop
cmp
and
pusha
inc
cwtl
jmp
dec
cmpsl
cmpsl
in
movsb
or
adc
enter
je
sbb
nop
dec
outsl
add
mov
faddl
in
pop
enter
testl
adcb
call
jo
ret
rcrl
push
xor
and
outsl
out
rorl
pusha
popl
out
mov
add
dec
lahf
addr16
jns
xor
lods
inc
fidivl
or
or
scas
nop
sub
loopne
sbb
mov
pinsrw
dec
roll
outsb
rclb
xlat
and
dec
addr16
das
jbe
insl
xlat
mov
daa
sub
jge
adc
dec
dec
iret
pop
push
xor
dec
mov
insb
dec
test
aas
add
inc
push
mov
mov
cwtl
dec
ja
in
andb
les
outsl
sub
aam
movsb
adc
and
dec
data16
add
outsb
mov
data16
xor
sbb
push
das
push
outsb
repnz
in
pusha
dec
jo
aas
fdivs
fsubrs
addr16
pusha
ret
pusha
aas
pop
out
mov
add
xor
ficoml
repz
dec
aam
xor
sahf
lcall
and
jl
out
cmpl
push
jno
scas
out
ds
fdivr
and
iret
repz
notl
dec
inc
data16
sti
int
imul
pop
dec
push
ds
repz
mov
repz
sahf
out
inc
imul
popa
xchg
push
adc
rorl
pushf
xlat
pop
push
out
sahf
cmpsl
aaa
bound
out
sbb
push
imul
push
jbe
dec
repz
js
mov
sahf
out
cmp
into
addps
cmp
out
test
push
pop
xor
iret
repz
repz
out
repz
pop
cmp
repz
out
pop
addr16
into
or
repz
jge
shl
pop
ds
cmpsl
stc
push
sbb
pusha
cmp
rep
js
shl
out
out
shr
dec
arpl
push
call
jns
push
mov
ss
iret
sarl
scas
cmp
mov
ficoms
push
ds
repz
jb
cld
mov
dec
repz
cmpsb
jl
out
shrl
mov
cmpsl
fsts
outsl
mov
lahf
out
jmp
jo
add
push
jl
stc
sahf
cmpb
or
cmp
sarl
push
jp
or
stc
xor
cmpsl
inc
std
pop
jne
xor
jge
cmpsl
outsb
mov
push
sbb
cmpsl
stc
xor
sub
js
ds
repz
sbb
mov
jnp
dec
repz
jge
lcall
xchg
add
sarl
mov
cmp
repz
or
sahf
out
clc
inc
xorl
test
fldcw
test
test
xchg
ds
rcll
ss
mov
out
ds
mov
sahf
cmpsl
stc
cmp
adc
mov
ds
mov
js
imul
mov
nop
xor
out
pop
xchg
nop
mov
xchg
data16
out
mov
cltd
clc
sbb
xor
inc
fwait
mov
adc
lcall
sbb
jns
stc
xor
ja
cmpsl
stc
mov
push
fisttpl
mov
sahf
xchg
rorb
pop
push
movsl
mulb
push
mov
push
jo
push
and
jmp
jno
std
stos
in
add
xchg
xchg
mov
mov
fsubl
dec
inc
fisttps
sbb
aaa
push
xchg
outsb
je
mov
cmp
mov
mov
div
sbb
xor
dec
and
push
dec
orps
pop
ja
pop
ja
push
enter
mov
fwait
add
ja
nopl
xchg
jo
in
es
dec
out
and
fs
shlb
xor
out
adc
mov
insl
aas
inc
repz
cli
notl
add
imul
mov
push
aam
ja
jl
xchg
ja
pop
fwait
shlb
scas
inc
and
adc
enter
jbe
pop
jb
sub
ss
push
pop
icebp
or
adc
imul
out
orb
jg
in
inc
repnz
push
mov
adcb
psubusb
ret
push
stos
dec
push
bound
popf
xorb
adcb
bound
in
icebp
sbbb
inc
cmp
mov
pop
lods
mov
lcall
cmp
insl
mov
out
ss
xchg
dec
mov
sub
test
enter
jbe
outsl
leave
aas
cmp
aaa
shrb
lret
push
push
loop
inc
hlt
push
mov
leave
int
mov
or
fimull
das
addr16
jbe
cmp
daa
int3
push
or
adc
mov
or
into
dec
call
shlb
cmp
rcrl
dec
lahf
jl
mov
cld
xchg
dec
cmpsl
aaa
pop
arpl
mov
jb
mov
adc
outsb
pop
repz
std
and
aas
fadds
inc
cmp
aas
mov
and
xchg
adc
and
gs
inc
xchg
mov
aas
rolb
add
mov
and
mov
lods
adc
pop
xchg
or
push
stc
movsl
or
inc
and
mov
push
das
outsl
and
mov
dec
fs
rclb
in
pop
je
scas
in
sub
filds
mov
in
aas
in
push
or
into
sahf
loop
out
xchg
cmp
push
and
inc
out
xor
and
adc
xchg
pop
inc
pop
aam
test
cmc
mov
out
cmp
jo
leave
pushf
pop
popa
push
addr16
add
jns
add
xchg
mov
enter
repnz
xchg
lods
mov
pop
lds
push
push
lahf
and
in
and
mov
fnstsw
pushf
scas
mov
cs
xchg
ftst
aam
cmp
cmp
daa
nop
and
sub
dec
pop
dec
dec
pushf
and
or
add
daa
cmp
pop
rorb
in
inc
sbb
jb
and
pop
sub
sub
cmpsl
pusha
pop
daa
scas
mov
inc
aam
inc
outsl
inc
pop
mov
lods
pop
add
xchg
sbb
mov
pop
mov
notl
mov
add
sbb
cs
dec
rcrl
dec
pop
push
pop
cli
adcb
sbbb
aad
mov
dec
sahf
out
sbb
dec
mov
add
jns
add
or
xchg
in
xchg
out
fcom
add
frstor
pop
pop
dec
push
daa
insb
sbb
add
mov
and
xchg
movsb
les
sbb
push
addr16
push
leave
dec
push
adc
pusha
in
outsl
adc
xchg
dec
pop
and
insl
lahf
xchg
pushf
pushf
int
frstor
sahf
in
lock
mov
push
dec
push
dec
es
dec
mov
cs
ss
ds
dec
dec
cs
hlt
popa
imul
orl
mov
fstpt
aam
fdivl
pop
pushf
call
es
cmp
das
dec
mov
in
enter
aas
dec
mov
dec
dec
dec
xchg
pop
daa
xchg
iret
add
aaa
xchg
pushf
and
jo
or
jo
fwait
in
bound
scas
sbb
lret
push
mov
stos
jg
mov
leave
and
mov
xchg
dec
arpl
push
cmpsl
sbb
aaa
sbb
add
iret
xorb
scas
inc
das
mov
inc
ds
dec
int3
jg
mov
mov
fs
and
test
leave
adc
popa
out
stos
push
rcrb
enter
fs
fs
iret
cmp
iret
xlat
fists
leave
xchg
adc
push
out
push
int3
cmp
and
xchg
and
sub
dec
ds
sbb
push
aas
add
gs
cmp
gs
orb
add
jl
jl
or
xchg
out
mov
push
jns
jns
push
ret
push
into
push
fsts
jns
jns
push
out
push
cli
push
add
ja
push
or
or
sahf
out
sahf
or
or
or
jns
push
minps
out
sahf
out
adc
jle
out
sahf
adc
sahf
out
push
mov
ret
sbb
inc
mov
rcrl
cmpsl
push
negl
popf
xchg
leave
loopne
push
dec
fsubl
mov
or
or
inc
pop
push
lret
mov
cmp
popf
pop
add
insb
add
adc
push
divl
xchg
dec
cmpsb
cmpb
into
repz
cs
push
add
adc
addr16
add
push
xor
mov
aas
add
inc
cmp
sbb
daa
xor
adc
inc
push
push
insb
push
imul
sahf
pop
pop
addr16
test
fnstsw
jge
sahf
filds
clc
mov
shll
xchg
adc
insb
js
fsubr
into
mov
push
dec
leave
orl
and
loopne
push
insl
and
leave
cmp
push
push
mov
dec
nop
mov
cmp
add
pushf
cmp
cmp
rolb
leave
inc
bnd
aam
and
leave
mov
push
add
inc
mov
ja
enter
xlat
inc
push
lock
imul
pop
fmuls
iret
inc
movl
pushf
rolb
loopne
into
leave
inc
out
xchg
negb
in
bnd
incl
push
insb
ret
outsl
outsb
add
pop
push
sbb
bound
frstor
pusha
jg
mov
cmp
mov
push
push
xchg
insb
adc
imul
push
sbb
mov
pop
leave
and
pop
leave
je
pop
pop
dec
repnz
pop
aam
mov
iret
rorl
xchg
push
adc
outsb
and
scas
pusha
add
out
or
push
out
psadbw
cmp
ja
test
pop
das
fisubl
aas
sub
addr16
pop
mov
push
addr16
iret
ja
adc
cmp
in
ds
dec
repnz
outsl
rcrb
jns
jns
std
pop
or
pop
leave
xor
push
pop
sub
add
pop
fs
pop
jge
test
dec
outsb
xchg
lea
outsl
add
js
ds
pop
enter
stos
mov
ret
jo
int3
jo
jns
movd
jo
out
push
daa
and
sub
jecxz
inc
xor
jno
pop
pop
pop
push
push
pop
pop
pop
fs
insb
pop
pop
pop
pop
pop
je
jl
test
pop
pop
pop
pop
pop
xchg
pop
pushf
pop
movsb
pop
lods
pop
pop
pop
pop
pop
mov
mov
pop
mov
pop
pop
aam
fcompl
pop
bswap
leave
leave
dec
femms
or
leave
or
or
leave
leave
leave
leave
pop
push
add
leave
add
add
in
nop
pop
pop
add
repz
adc
add
in
daa
cmp
dec
cmp
dec
ds
pop
push
add
jae
dec
cs
orb
dec
cs
mov
cmpsb
jecxz
inc
jmp
and
shll
pop
daa
sub
enter
pop
inc
aas
dec
andnps
in
push
push
pop
gs
or
sahf
xchg
testl
mov
push
je
popf
mov
xchg
mov
pop
rorb
jecxz
jmp
add
pop
clc
mov
ret
add
pop
cmp
pop
jmp
dec
push
rcpps
pop
cmp
pop
arpl
push
and
in
or
mov
mov
jae
cmovle
lock
add
cmp
pop
sbbl
aas
movsb
imul
or
lret
jnp
jne
pop
or
movsl
inc
jne
push
sub
lock
dec
xchg
das
mov
cmp
or
call
pmulhuw
in
push
hlt
add
repnz
lahf
iret
or
jbe
pushf
pushf
loop
pop
pop
cmp
and
insl
push
push
pop
xchg
add
pop
sbbb
mov
mov
sahf
ja
pop
rorl
inc
call
mov
push
xor
pusha
pusha
pop
push
rcll
xchg
lahf
mov
shlb
daa
daa
daa
fsub
out
stc
repz
femms
push
sbb
repz
pop
and
cmp
repz
inc
or
addr16
repz
or
mov
adc
and
popa
mov
xchg
cmp
loopne
or
stos
pop
lock
xor
in
ss
dec
bound
pop
pop
popa
jns
fldt
jno
jns
daa
mov
out
mov
leave
mov
or
dec
cmpsb
adc
jns
arpl
and
arpl
xchg
out
jo
sub
pushf
pushf
dec
and
test
jae
popf
pushf
mov
outsl
shlb
cmp
xchg
arpl
arpl
sub
xlat
adc
mov
decl
jp
and
test
fs
fsubl
xchg
jnp
in
in
rcr
out
add
or
and
sub
popa
mov
movsb
addr16
push
gs
lea
pop
gs
push
stos
repnz
lods
aad
loopne
ja
or
daa
sbb
in
adcb
out
scas
mov
pop
shlb
gs
out
icebp
gs
gs
repnz
ljmp
cmp
in
sub
inc
dec
and
sbb
data16
data16
in
xchg
test
data16
dec
sahf
xchg
orl
cmpsb
or
cmp
cmp
inc
mov
cmc
add
addr16
addr16
test
and
sub
pop
leave
repz
xchg
jge
data16
pop
and
add
adcb
inc
jnp
jle
mov
inc
pop
into
iret
xchg
pop
and
add
xchg
sub
push
stos
mov
aaa
sarb
and
dec
jbe
vpmacsdql
ja
pop
cmpsl
cs
add
mov
push
xchg
pop
leave
out
or
push
jg
imul
sub
add
ret
mov
leave
sub
pop
sbb
sbb
mov
push
add
ja
cmp
pusha
subb
push
xor
es
sbb
push
add
add
in
xor
dec
push
push
je
out
das
bound
or
or
or
subb
xchg
jmp
xchg
jl
pop
pop
ja
cmp
pop
jb
xor
icebp
stc
js
pop
jp
sbb
jmp
jns
pop
sub
add
xchg
out
pop
add
cmp
dec
dec
mov
dec
or
andb
mov
addr16
out
hlt
push
popf
cmp
das
cs
daa
ss
dec
insb
pushl
adcl
inc
push
nop
in
into
cmpl
fsubp
fldcw
shl
push
stc
call
push
pop
add
adc
insl
fisttps
and
xchg
xorl
jnp
out
push
add
push
add
icebp
in
in
insl
gs
jne
xchg
xchg
xchg
scas
aas
jge
test
insl
xchg
insl
xchg
xchg
insl
popf
insl
movsl
pop
ud2
pop
in
in
or
or
in
in
push
add
out
add
lods
sbb
sbb
out
sahf
int
aad
fnsave
bnd
and
in
cmc
aam
cmp
and
and
xor
push
xlat
or
mov
xor
add
cltd
dec
ds
insb
pcmpeqb
scas
cmp
lea
push
add
popf
arpl
insl
xchg
outsb
pop
lar
dec
push
lods
outsb
test
in
xor
outsb
outsb
loopne
clc
setno
xchg
lock
mov
and
outsl
xor
outsl
into
popf
fildl
inc
aas
dec
pop
pslld
mov
pop
or
pusha
outsl
out
sahf
aaa
push
js
fisttpl
or
mov
jns
xchg
nop
cwtl
adc
xor
adc
xchg
call
add
xchg
sbb
es
sbb
jo
inc
jo
pop
push
lock
push
scas
jo
ja
outsb
mov
test
adc
nop
xchg
push
add
lods
pop
ja
jmp
inc
movsb
xchg
mov
je
mov
rcl
add
out
iret
loope
shll
jmp
in
lcall
fmul
xor
cmp
in
push
inc
jmp
jno
jno
test
out
xchg
out
fdivl
jo
add
mov
mov
pop
jb
add
cmp
testb
adc
cmp
jb
and
jb
pop
jb
xchg
jl
mov
outsb
push
mov
mov
leave
inc
repnz
leave
leave
leave
test
mov
pop
mov
jb
shr
xchg
xchg
jb
repz
jae
jno
in
mov
mov
repnz
aaa
xor
divl
mov
call
sub
mov
scas
das
lods
enter
inc
mov
xor
mov
outsl
jae
add
adc
jae
dec
sahf
fildl
aaa
cmp
in
hlt
lsl
inc
fwait
mov
add
mov
rcr
daa
push
comiss
aas
je
adc
sub
dec
mov
jns
fcmovne
insl
je
add
add
add
cmp
movsl
lods
or
jns
lds
int
aad
jae
cmp
fstp
adc
pop
jo
cmp
in
cmc
xchg
adcb
iret
in
repnz
xor
cmovno
or
cmp
add
xchg
push
cmpsl
outsb
push
scas
pop
cwtl
pushf
out
mov
pop
daa
test
xor
pop
jne
shrl
cltd
jne
loopne
lahf
jbe
leave
push
mov
jns
mov
add
loop
sahf
add
jbe
lock
jbe
jbe
jbe
add
decl
lret
pop
jbe
jbe
mov
jbe
scas
fwait
cmp
mov
mov
jbe
cmp
pop
call
leave
out
inc
test
in
popl
ja
push
add
pop
dec
and
jo
cmp
fldt
xchg
decl
das
lahf
dec
outsb
fstp
in
push
cvtps2pd
punpckldq
push
add
jb
mov
popa
leave
add
nop
or
inc
inc
rorb
cs
stos
pop
stos
iret
mov
dec
sahf
ja
push
add
lar
lret
ja
ja
mov
ljmp
iret
or
adc
adc
in
and
add
cmp
in
dec
pop
push
add
add
sysretw
outsb
jbe
out
daa
iret
or
or
or
or
mov
js
jg
add
xchg
loope
and
leave
cli
add
or
fwait
in
das
sbb
and
mov
push
loope
inc
jns
push
fnstcw
pop
cmovle
sbb
push
add
fidivrl
xchg
push
pop
cmp
xlat
pop
test
adcb
mov
ffreep
into
push
ss
filds
xchg
and
cltd
dec
jp
xchg
inc
mov
push
jp
aas
loopne
repz
jp
jbe
lea
fisubrl
jle
xchg
dec
lods
and
les
push
or
jp
xor
xor
jp
xor
xor
jnp
jnp
xor
xor
jnp
jnp
hlt
cmp
xor
push
push
jb
dec
mov
jge,pt
mov
jnp
pop
adc
sarb
andl
xchg
cmp
aad
daa
xor
jl
enter
jl
jl
jl
or
jb
jl
jl
or
jl
sbb
mov
and
jo
push
jl
xchg
xchg
or
cmpsb
mov
call
rcr
pop
invd
iret
repz
into
jl
or
or
sub
pop
or
and
jl
xchg
jge
mov
dec
aaa
cmovo
dec
je
pop
xchg
dec
jo
sahf
out
jb
jge
js
adc
jge
aad
inc
insl
sbb
and
xchg
inc
test
mov
clc
xchg
sarb
dec
sahf
out
lret
call
add
in
inc
ds
repz
add
or
aaa
jle
or
cwtl
mov
jle
fldt
mov
cltd
call
push
sbb
sbb
jle
stc
je
loopne
pop
cli
or
call
sub
jg
rsqrtps
out
jb
pop
jg
jg
pop
push
out
sahf
push
mov
xchg
or
clts
cmpsl
mov
push
jg
jp
cmpb
jns
and
jg
pop
mov
in
lret
in
in
push
loop
pslld
inc
repnz
mov
push
cwtl
adc
pushf
daa
sbb
or
mov
cmpsl
push
inc
cltd
sarl
adc
jns
leave
int
cmpsl
push
stos
mov
out
addb
sbb
jb
sbbb
xchg
out
or
leave
inc
rorl
call
out
subb
lcall
scas
sbb
and
inc
fidivs
or
inc
cmp
sbb
dec
ja
inc
pop
bound
inc
add
or
lock
test
adcb
fwait
in
and
pop
insl
lahf
jne
fucomi
in
test
lea
xchg
add
popf
push
movsl
lar
cwtl
lods
sbbl
and
sub
xorb
adc
pushf
push
sbbb
inc
ja
xor
cmp
add
daa
daa
jl
jo
jne
jbe
addr16
xchg
sub
push
adc
and
jb
xchg
jl
popf
pusha
push
push
nop
setnp
fmull
filds
test
fdivs
out
push
add
pushf
cmp
lock
fbstp
lsl
ss
jl
adc
test
test
aaa
xadd
inc
test
push
sbb
test
addl
nop
ds
cwtl
daa
daa
fnsave
pop
sgdtl
or
repnz
push
test
mov
mov
repnz
jp
pushf
je
or
call
or
lock
test
lea
sbb
test
push
sbb
mov
test
sahf
inc
or
dec
sub
mov
adc
lahf
add
nop
outsb
roll
pop
inc
int3
lds
mov
mov
xchg
scas
push
mov
test
fwait
hlt
js
add
test
in
iret
xchg
push
pop
adc
cmp
cmp
push
or
or
outsb
daa
iret
jae
or
cmp
inc
cs
jns
dec
adc
pop
adc
outsl
xchg
cmp
enter
fsubl
jp
scas
mov
pop
mov
daa
daa
adc
adc
xchg
leave
and
xchg
sbb
and
popf
mov
inc
xchg
push
jo
dec
mov
test
mov
das
outsb
xchg
xchg
stos
xchg
adc
mov
or
and
sbb
dec
mov
cmp
add
inc
dec
push
pop
mov
mov
fnsave
jl
pop
lsl
cmp
pop
mov
psubsw
add
add
jne
test
js
inc
dec
push
inc
mov
xchg
adc
js
fwait
cmp
mov
push
add
mov
fwait
mov
mov
mov
push
xchg
iret
sbb
or
mov
push
loopne
je
and
add
mov
mov
inc
cmp
iret
cmp
add
test
in
xchg
cmp
hlt
xchg
shl
and
out
fsubl
or
aaa
adc
add
es
rclb
out
push
inc
aaa
mov
inc
into
out
clc
mov
mov
push
push
or
add
pop
push
jmp
scas
or
dec
nop
mov
mov
xchg
mov
leave
jmp
repz
psubq
mov
cmp
cltd
femms
push
xor
cmp
mov
mov
cmp
cld
and
pushf
push
sbb
mov
lods
push
push
rcr
leave
repz
fmuls
and
jmp
and
cmp
decb
mov
adc
push
daa
add
mov
jo
jp
pop
mov
lret
enter
mov
mov
and
out
test
or
sub
aaa
das
aas
mov
daa
and
popl
outsb
daa
stos
mov
fs
in
cmc
int
fucomi
in
in
aas
push
nop
iret
cmp
repz
es
cmp
repz
or
repnz
or
rdtsc
nop
das
pop
nop
xchg
out
adcl
mov
leave
rep
test
add
cltd
add
add
mov
aad
jns
jns
loopne
call
nop
jns
jns
add
push
xchg
jns
jns
es
cs
ss
ds
lret
lret
iret
js
xchg
das
dec
xchg
pop
xchg
lret
lret
pop
les
outsl
xchg
jp
mov
xchg
lea
pop
repz
repz
mov
mov
and
and
and
cmp
repz
loope
in
daa
stc
cmp
repz
sub
or
xchg
jns
sahf
cmpsl
sub
or
xor
loop
and
dec
sub
in
test
xchg
mov
outsl
sub
pop
push
sbb
jmp
adcb
stos
iret
mov
mov
test
iret
aam
leave
cmp
jmp
push
sbb
xchg
cmp
repz
add
add
leave
leave
leave
repz
cmp
leave
leave
leave
imul
mov
lea
xchg
adc
cmp
adc
sysexit
mov
es
adc
aas
arpl
sbbl
fmuls
loopne
cmp
daa
call
ja
iret
and
xchg
add
xor
ficomps
push
daa
ds
xorps
pop
addr16
out
jns
mov
cmp
xchg
shr
xor
decl
sahf
xchg
dec
jnp
xchg
push
xor
sahf
ja
jns
daa
comiss
cmp
and
sbb
aas
xchg
pop
cmp
pop
pop
js
adcb
ja
scas
inc
dec
repnz
popf
fsts
add
xor
xlat
adc
rorb
xchg
leave
jae
xlat
sete
in
daa
daa
pop
rcr
xchg
jmp
cwtl
xlat
iret
leave
sub
xor
fcmovne
repz
add
jns
xchg
push
jbe
cmp
or
dec
sahf
out
stos
mov
out
jns
ftst
adc
aaa
bnd
cli
push
add
repz
mov
sbb
sbb
repz
cmp
cmp
inc
repz
cmp
push
pop
pop
push
leave
jae
add
lock
cltd
lahf
cltd
stos
cltd
iret
nop
pop
leave
out
pusha
scas
lock
cmp
inc
repnz
sbb
push
add
iret
cmp
push
cs
pop
daa
iret
repz
pusha
pop
push
test
das
mov
sahf
xlat
dec
sahf
or
femms
ds
bsf
test
push
adc
ja
mov
loopne
iret
rorl
add
pop
fcom
test
push
loopne
cmp
inc
lcall
mov
jp
mov
mov
fwait
cmp
gs
mov
iret
fwait
lock
mov
and
aas
xor
outsl
cmp
and
inc
pop
data16
outsb
mov
sub
jbe
and
test
fcmovne
mov
inc
mov
ficoml
add
or
xchg
enter
dec
mov
pushf
outsb
mov
enter
dec
xorps
leave
repz
pop
movb
or
mov
cmp
add
mov
vpmullw
leave
cmp
data16
adc
xor
movlhps
jns
xchg
popf
pop
push
add
pushf
pushf
cmp
arpl
push
imul
roll
xchg
dec
sahf
mov
jae
cmpsb
add
leave
rcr
loope
cmp
xchg
jmp
sarb
adc
sbb
and
in
and
xchg
call
pop
addr16
ljmp
in
test
xchg
mov
xchg
lahf
popf
pushf
cmp
lcall
out
fistpll
stos
in
jns
or
fsts
lahf
prefetch
mov
pop
sbb
cmp
iret
pop
xor
outsl
and
push
popf
cmp
js
xor
xchg
daa
adc
out
cmp
stos
mov
popf
fsubrl
mov
rorl
lcall
lahf
mov
pop
sbb
push
mov
pop
sub
push
mov
mov
mov
jo
cmp
jl
test
or
mov
inc
mov
loopne
adcl
add
ss
call
mov
push
daa
mov
ja
xor
andb
js
mov
lods
dec
iret
shrl
syscall
mov
repnz
ret
mov
repnz
mov
cpuid
xchg
scas
je
sbb
xor
xchg
mov
pop
mov
xchg
mov
mov
xchg
mov
mov
mov
mov
nop
in
jb
sbb
sbb
in
in
sbb
push
adc
adc
loopne
jmp
jl
out
imulb
add
out
xor
rcr
outsb
mov
in
mov
call
cmp
cmp
cmp
dec
cmp
pop
ds
outsl
repz
repz
jp
test
idivl
nop
inc
fwait
inc
fisubs
jns
inc
mov
iret
cmp
push
dec
or
fwait
cmp
cmovge
sub
out
repnz
push
jns
out
push
popa
push
insb
push
leave
leave
in
in
sbbb
cwtl
fwait
cmp
leave
mov
xchg
xchg
xchg
cmpsl
pop
iret
fidivrl
lock
movsb
mov
ss
movsl
out
sahf
xchg
out
push
add
pop
sbb
jns
add
push
xchg
js
movsl
insb
daa
iret
mov
or
addr16
jg
cmpsb
adc
cmpsb
push
adc
jns
out
mov
mov
mov
rcrb
enter
ja
ds
sbb
leave
repz
sahf
sbb
lock
sbb
add
pushf
jmp
cmpsb
inc
cmpsb
enter
jmp
mov
int3
cmpsb
out
cmpsb
pop
mov
iret
repz
nop
add
in
fiadds
test
mov
mov
dec
mov
dec
xchg
lock
das
lea
lds
cmpsl
sbb
daa
dec
mov
clts
and
pusha
in
daa
daa
push
jns
mov
dec
cmpsl
push
cmpsl
repz
cmpsl
scas
adc
test
mov
pop
test
cmpsl
xlat
cmpsl
arpl
or
pop
enter
outsb
pop
leave
pop
mov
in
test
sti
cmpsl
add
in
adc
mov
out
pop
push
popf
fmull
add
mov
jne
jl
mov
mov
mov
ret
in
int
jecxz
inc
dec
pop
sahf
adc
test
jns
sbb
cs
out
sbb
sbb
dec
aaa
jns
push
sbb
repnz
iret
push
addr16
jge
dec
sahf
ja
push
and
iret
mov
push
daa
lret
iret
sbb
das
loopne
jg
sbb
out
and
add
in
sahf
add
push
pop
push
add
popa
imul
nop
fwait
dec
sahf
out
fsub
fwait
cmp
repz
push
out
pop
testb
fsubrp
movsb
add
decb
inc
mov
stos
push
stos
push
stos
and
shrl
movups
adc
repz
repz
adc
adc
dec
push
push
pop
pop
fs
out
insb
sbb
sahf
ja
aaa
movhps
rorl
and
popf
movsb
push
and
mov
es
in
repz
add
iret
int3
sub
aam
fildll
pushf
out
ljmp
mov
or
sub
dec
or
inc
stc
fdivrs
xor
out
push
pop
push
push
add
imul
lods
das
fs
jmp
xchg
pop
lods
pop
lods
repz
les
push
iret
cmp
fiaddl
call
xor
ret
repz
push
add
iret
repz
add
push
add
daa
addr16
jb
jge
outsb
repnz
mov
pop
iret
repz
xchg
sahf
or
enter
scas
mov
inc
lods
sbb
jb
int3
lods
xlat
lods
loop
in
lods
leave
out
mov
lods
outsl
sbb
push
scas
scas
scas
sahf
ja
stc
lahf
pop
scas
arpl
add
jnp
jg
jnp
and
mov
jns
pushf
pushf
rorl
fdivl
mov
std
pop
push
sbb
inc
aas
lahf
or
aaa
jb
push
scas
sub
mov
dec
push
pop
invd
cmp
jns
adc
jbe
repz
cmp
pop
xchg
jae
jns
mov
aas
iret
repz
sbb
sbb
or
daa
cmc
and
leave
repz
dec
mov
pop
and
out
fisubrs
cs
jns
out
push
sub
imul
mov
jg
mov
xor
loopne
mov
js
dec
cs
add
jns
in
mov
add
lock
sahf
out
clc
pop
mov
pop
push
or
adc
mov
iret
jae
jb
xor
cmovo
iret
repz
dec
adc
sbb
call
pusha
mov
cmp
jbe
das
jo
cwtl
vmread
sbb
sbbb
sbb
mov
push
mov
cmp
repz
mov
iret
jae
and
fsubs
jns
ja
loopne
cs
sub
shrb
paddusw
ja
push
sub
xchg
out
mov
inc
leave
mov
push
mov
ss
movsb
sub
add
stos
ljmp
push
adc
cmp
inc
add
adc
fcmovnu
or
add
insb
push
xchg
push
sub
ficompl
mov
inc
cmp
imul
dec
aaa
test
sbbb
inc
add
leave
out
sahf
addr16
inc
cmp
xor
out
sahf
xor
and
or
cmp
sarl
in
call
iret
repz
aam
int3
sahf
out
iret
enter
mov
in
mov
xor
iret
repz
pusha
push
push
loopne
cmp
dec
inc
sub
or
and
movsb
outsb
add
lahf
pop
testl
inc
das
push
push
add
fcomp
dec
add
incl
jns
mov
pop
mov
xchg
out
or
or
or
or
daa
popf
je
ja
push
adc
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
xchg
out
push
push
and
jb
fildl
orl
iret
add
sub
mov
xchg
aaa
fsubrl
aas
into
aas
xlat
pop
sbb
nop
mov
adc
test
and
test
std
push
test
dec
add
pop
les
loopne
mov
add
add
movsb
add
in
addr16
cmpsb
fisttps
mov
cld
mov
out
jb
jle
test
shll
fs
decb
inc
mov
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
mov
xor
jle
rcr
fsubp
stc
jb
jle
cmp
scas
inc
ja
pop
andb
stos
pusha
and
stos
pop
add
add
fdivr
inc
xor
mov
fiaddl
pop
jle
cmovb
add
mov
das
dec
aam
ss
pop
aas
push
add
inc
add
mov
iret
les
or
or
adc
into
adc
out
movsb
adc
sahf
out
sbb
hlt
int
iret
repz
mov
push
cmpsl
icebp
cmp
pop
int3
jne
repnz
int3
test
inc
or
js
lret
sahf
cmpsl
push
jns
jp
push
cld
jg
mov
into
rcrl
inc
push
push
loop
xlat
sub
call
test
in
test
pop
mov
pusha
add
nop
test
cmpsl
pop
and
fwait
sbb
push
jae
xorb
mov
push
push
push
pop
cmp
jg
inc
lea
pop
roll
xchg
aas
pop
push
arpl
pop
xlat
jle
lds
cs
cmp
inc
cmpsl
aad
aam
jg
out
push
cmc
mov
and
inc
sub
dec
mov
roll
add
and
xchg
xor
cs
xchg
es
inc
roll
cmp
mov
sbb
rorl
jecxz
add
and
sahf
idivl
or
cmp
jns
adc
lock
je
xlat
push
push
pop
ror
in
push
and
pop
or
cld
iret
repz
notl
hlt
sbb
jns
out
adc
rcrb
enter
sahf
out
pop
mov
jns
and
das
push
out
es
pop
inc
into
test
aam
cmp
adc
xor
xchg
xorb
inc
cmp
xorl
jg
cmp
sahf
out
sahf
pop
js
mov
repz
sarl
xor
add
out
fidivrs
push
pop
ja
mov
jns
xor
jae
das
push
dec
insb
mov
add
pushf
in
pop
mov
add
enter
or
ret
mov
inc
ds
xchg
cwtl
push
and
aas
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
ljmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
das
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
inc
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
in
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fdivr
jmp
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
sbb
int
add
sti
aas
jno
or
mov
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
ljmp
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
dec
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
cli
aas
fisubs
xchg
cmp
push
mov
xchg
aas
sub
jmp
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
ljmp
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
decl
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
call
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
pushl
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
adc
in
decl
std
orl
pop
ficomps
frstor
ret
dec
push
pop
pop
jmp
inc
je
inc
inc
push
dec
call
xchg
lret
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
jmp
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
mov
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
jmp
int
iret
or
shrl
push
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
jmp
or
adc
stos
sbb
data16
inc
fdivl
jno
add
ljmp
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
pushl
test
push
loope
or
insl
or
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
popf
aam
jmp
aam
pop
popa
mov
into
pop
cmp
fistpll
inc
movsl
fisttps
fadd
shll
jmp
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
lcall
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
decl
lock
es
lds
or
add
mov
cmpsl
call
ret
or
xor
shlb
scas
ficomps
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
outsb
sbb
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
comiss
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
jmp
decl
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
jmp
xchg
sbb
mov
lret
mov
cmpsb
mov
incl
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aam
pushl
mov
or
sbb
add
sub
orl
sahf
popa
out
shrb
push
pop
js
test
clc
dec
push
aad
jns
xlat
inc
push
xlat
fcomp
ficompl
fsubp
jecxz
jns
jns
in
jmp
ljmp
sahf
out
cmc
div
clc
stc
dec
aaa
sahf
out
sti
cld
daa
adc
je
movsb
jbe
mov
jge
adc
popf
adc
lahf
iret
push
mov
call
inc
push
dec
bound
jbe
add
jbe
inc
xchg
ret
inc
insl
fisubrl
jne
inc
push
popa
je
push
bound
aas
and
inc
lds
inc
jns
ljmp
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
insl
adc
xor
bound
in
sub
popa
push
inc
jbe
pop
insb
imul
testb
xor
inc
cmpsb
ficomps
or
orb
add
lock
xchg
popa
adc
fs
push
mov
gs
je
scas
ss
lret
rolb
jbe
inc
push
bound
in
sub
loope
jle
gs
in
adc
push
adc
inc
dec
adc
add
inc
addl
add
xchg
insb
popa
jns
mov
dec
insb
cmp
or
aaa
je
lock
inc
insb
aaa
aas
inc
push
inc
add
and
or
adc
jae
jp
adcb
push
pop
inc
aas
inc
and
xchg
inc
pop
mov
inc
jbe
inc
sbb
push
push
je
gs
jo
inc
inc
add
ds
push
scas
add
sbb
iret
int
push
andb
dec
cmp
inc
mov
or
pop
mov
fs
ja
outsb
jne
insl
inc
push
push
popa
mov
dec
jge
fwait
cmp
add
add
or
mov
xor
addr16
clc
xchg
adc
jo
insl
pusha
in
sbb
rorl
pop
sbbl
gs
lods
dec
adc
add
mov
push
xchg
popa
aam
cmp
mov
mov
and
movsb
sub
arpl
xchg
or
frstor
or
jo
lahf
xor
adc
dec
sub
popa
mov
lods
push
jno
loop
push
xor
stos
lds
xchg
pusha
jb
in
nop
test
pop
cmp
inc
insb
mov
arpl
cmp
mov
add
push
cmpsl
xchg
and
jns
inc
xor
popf
das
inc
jb
stos
gs
je
or
dec
inc
outsl
arpl
insb
jle
adc
bound
pop
cmp
lods
ja
inc
jbe
xchg
push
lods
cmpsb
xor
ja
adc
jecxz
adc
arpl
das
xor
sahf
pop
incl
inc
add
inc
add
push
outsb
jg
rolb
and
fwait
mov
xchg
jle
mov
je
mov
in
dec
outsb
add
push
sbb
sbb
cvtps2pd
push
stc
mov
push
inc
dec
pop
bound
outsb
arpl
mov
pop
mov
lcall
dec
push
pusha
aaa
push
dec
adc
pop
test
sub
bound
sub
and
adc
and
scas
or
inc
adc
dec
xchg
rolb
loopne
adcb
ficompl
pusha
add
fnsetpm(287
add
neg
add
add
or
pop
pop
push
or
add
decl
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
int
add
inc
add
jo
add
add
sti
add
add
adc
add
add
add
sub
shlb
sahf
subl
call
aam
xor
adc
pop
and
xor
inc
mov
add
inc
adc
xor
cmpb
loopne
xorb
push
pusha
xchg
sbbb
add
fsubs
dec
shlb
and
inc
inc
cmp
or
xor
pop
adc
add
add
adc
mov
ja
adc
cld
out
incl
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
or
inc
stos
js
pusha
jg
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
imul
lcall
pop
fdivrl
add
mov
mov
loopne
mov
fsts
cld
mov
loope
mov
cmp
cltd
ret
ret
ja
out
cmp
pushl
xchg
sti
push
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
stos
addb
inc
inc
xchg
jmp
add
mov
adc
inc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
pop
mov
pushf
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
in
ljmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
cltd
aam
mov
mov
out
pop
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
sub
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
scas
xor
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
outsl
lock
outsl
push
paddsw
pop
stc
out
mov
clc
push
std
mov
je
icebp
or
mov
outsl
mov
aad
dec
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
sti
xor
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
scas
cli
in
add
pop
in
cmp
jmp
outsl
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
sub
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
push
iret
or
lock
and
int
add
enter
push
pop
aaa
std
fisttps
outsl
js
dec
inc
sbb
xchg
fimull
hlt
orb
ror
sbb
cmp
xor
aaa
inc
adc
pop
lds
aas
pop
clc
loope
loope
mov
test
push
inc
lahf
jp
dec
add
xlat
fimull
xor
loopne
sub
cmp
cmp
repz
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ficoml
dec
arpl
out
iret
push
dec
jge
lcall
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
push
cld
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
sub
mov
lock
stc
push
dec
out
fstpt
mov
enter
inc
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
std
call
addr16
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
call
sti
push
sti
pop
inc
dec
bound
push
mov
push
pop
lods
inc
mov
push
popf
int3
pop
iret
and
add
fisubs
dec
lcall
inc
test
mov
cmp
jge
out
dec
pushf
mov
sbb
or
adc
or
and
ljmp
fistpl
mov
stc
or
and
ljmp
or
xchg
stc
xchg
lods
xorb
fcomps
fmul
inc
jo
inc
hlt
outsb
ret
xchg
xor
iret
aaa
mov
call
das
aam
imul
stos
dec
and
ret
fisttps
pop
ret
add
test
xlat
ret
clc
ret
xorl
mov
cmp
ds
push
sbb
call
cmp
lea
sarb
clc
mov
adc
sar
jg
pop
gs
mov
mov
cmp
jle
cmpsb
sub
bound
adc
add
jg
in
cli
push
es
mov
nop
sub
and
jle
xchg
jbe
js
adc
inc
cmpsb
sbb
scas
pushl
sbbl
movsb
mov
andl
lods
push
out
imul
loopne
dec
std
inc
pop
mov
mov
mov
movsb
push
pop
mov
cmp
adc
adc
std
imulb
pusha
lods
jmp
pop
xor
ja
rcr
sub
int
jno
das
sbb
inc
call
not
adc
fstp
ljmp
popa
stc
mov
rcl
xor
push
or
sti
cs
mov
enter
xchg
cwtl
lcall
insb
cmp
pop
add
in
ljmp
out
dec
mov
lret
test
jmp
test
ljmp
shr
jo
test
repz
push
mov
cmp
pop
es
incl
negb
inc
ja
adc
les
fwait
jp
inc
dec
stos
popa
mov
dec
jmp
js
cmp
arpl
mov
int
and
fisttps
std
and
leave
push
push
aas
cltd
cli
es
aad
mov
frstor
popf
stos
jg
dec
repz
fwait
or
imul
pushl
jae
repz
gs
in
or
inc
jg
cli
inc
mov
pop
mov
lcall
mov
loope
int
jbe
xchg
scas
jns
xor
loope
mov
mov
push
sub
lret
ret
mov
mov
out
rol
mov
xchg
inc
xor
mov
xlat
xchg
push
xlat
jbe
es
mov
cmp
lret
arpl
outsl
inc
sub
call
add
into
sub
or
mov
movsl
inc
pop
pop
outsb
mov
xchg
lcall
outsl
xchg
xchg
dec
ja
add
and
gs
popf
push
outsb
repz
sbb
mov
jmp
fsubp
mov
mov
gs
daa
mov
push
dec
out
mov
push
add
jb
call
xchg
pop
test
mov
and
xor
pop
stos
cwtl
adc
pop
push
mov
call
push
cmpsl
imul
rcrb
pushl
rclb
push
jns
mov
lds
jmp
xchg
mov
cmp
inc
xchg
pop
or
jecxz
enter
lcall
inc
les
mov
nop
popa
and
mov
movsl
xchg
jbe
mov
xchg
mov
decl
stos
test
dec
jb
or
fiaddl
sub
out
sbb
jmp
dec
and
add
sbb
cs
cmp
mov
mov
xchg
cmp
aad
adc
lret
pop
clc
mov
in
leave
mov
fsts
mov
xchg
ja
sbb
add
ljmp
xchg
movsl
loopne
pop
pop
mov
push
outsb
scas
mov
fistps
ret
decl
xor
out
fnstcw
ds
jp
ljmp
jmp
rcr
ret
lea
fs
pop
adc
lds
insb
out
push
sarl
jge
lcall
mov
and
movsb
mov
add
addb
push
scas
cli
jmp
push
mov
pop
in
sahf
loope
mov
xchg
mov
pop
cmp
push
mov
jl
movsb
pop
cmpsb
inc
stos
adc
cmpsb
and
ret
jne
fsubr
popf
hlt
inc
sub
cld
hlt
push
xchg
mov
call
add
enter
popf
es
insb
pop
or
int3
dec
cltd
popa
jae
clc
lcall
xchg
mov
dec
cmc
lret
je
fnstsw
inc
data16
dec
loop
and
sbb
mov
mov
fildll
lock
pusha
sub
out
lret
lods
mov
or
out
mov
unpcklps
nop
sti
aas
stc
insl
int
out
dec
movsl
xchg
lock
add
mov
sub
mov
mov
daa
loope
ljmp
or
call
pop
test
ret
dec
xor
pusha
xchg
lds
ljmp
testl
roll
repz
dec
les
add
fucom
jbe
mov
out
clc
pushl
sti
test
aas
and
fldt
jge
testl
addr16
push
std
jg
push
dec
test
cmp
leave
add
sub
pushl
sbb
les
xchg
dec
or
js
int
adc
push
out
push
in
flds
push
mov
cmp
test
mov
test
insl
mov
pop
mov
mov
dec
ds
fisubs
xor
clc
jae
rol
hlt
dec
xor
popa
jp
lcall
add
mov
dec
jnp
and
cmp
imul
push
jle
fmul
out
cli
decl
or
or
jne
pop
mov
sbb
sarl
and
lea
mov
out
sbb
test
sarb
lcall
addr16
mov
xchg
sub
xchg
adc
shrl
push
jbe
push
sub
push
inc
rcr
cli
add
gs
leave
pusha
cmp
aaa
cld
jmp
mov
pop
enter
inc
jmp
rcrl
push
cmpl
sub
lcall
popf
and
xchg
pop
loop
decl
jg
sub
mov
inc
in
insb
ret
sbbb
ret
push
decl
inc
fnstenv
aad
push
jbe
sti
jl
imul
add
scas
jbe
mov
test
adc
or
call
pop
scas
iret
mov
ficoms
and
jno
push
pop
mov
mov
call
jmp
pop
adc
iret
pop
adc
into
jae
imul
insb
mov
std
call
jo
stos
lret
cli
mov
pushf
mov
mov
nop
inc
jae
xchg
lcall
lcall
int3
mov
mov
adc
fwait
ljmp
cli
jo
divl
push
dec
sub
scas
fwait
xchg
sbb
clc
adc
mov
stos
decl
insl
push
cmp
inc
outsb
add
mov
mov
sub
loopne
fwait
inc
jecxz
enter
cmp
addl
push
clc
jnp
loope
fwait
ret
xor
or
rol
jb
call
loopne
and
mov
pop
cmpl
pop
pushl
or
add
lahf
ret
lock
subl
rorb
js
push
lcall
sbb
insb
lds
add
mov
out
cmp
sbb
xor
push
mov
ljmp
imul
repz
les
addl
adc
js
incl
pop
cs
je
jb
inc
adc
or
mov
xchg
data16
call
incl
lds
jl
cmpsb
mov
icebp
ljmp
scas
call
cmp
pop
push
insl
jle
insb
inc
outsb
pop
jle
push
lret
or
incl
repz
lcall
sti
cld
lods
seto
addl
adc
imul
push
xchg
movsl
mov
push
push
push
mov
call
and
lret
stos
jecxz
jnp
test
mov
mov
std
mov
sbb
stc
jbe
or
mov
xor
jle
push
cmp
dec
mov
ja
decl
cld
sub
add
enter
push
call
lcall
mov
call
sub
popa
mov
and
lcall
iret
push
add
add
ja
mov
daa
and
add
das
nop
pop
and
adc
shll
js
lcall
cmp
mov
adc
push
dec
mov
addl
dec
xchg
arpl
mov
cli
popf
push
sti
lcall
adc
ss
in
or
dec
fists
fimuls
mov
push
pop
adc
ret
dec
add
popf
pop
aam
stos
in
xor
incl
std
stc
or
lods
pusha
push
dec
sub
add
stos
xchg
mov
enter
cmc
das
clc
popf
push
xchg
mov
ficompl
leave
pop
jle
mov
int
jp
mov
fcomps
mov
mov
mov
mov
mov
shl
call
mov
mov
lods
add
xor
in
in
les
add
adc
ljmp
pop
push
and
xor
rcl
movsl
xchg
call
adc
dec
call
pop
popa
mov
push
inc
cmp
cmp
push
inc
or
das
dec
mov
mov
repnz
call
sub
out
mov
mov
sbb
mov
sub
aam
cmpsl
les
cwtl
imul
add
rcll
jae
pop
movsl
mov
mov
mov
mov
mov
fstps
xorl
inc
jne
in
mull
inc
add
or
lahf
sub
decl
fidivs
pop
ret
data16
out
xor
shll
test
cltd
adc
adc
lcall
stos
mov
sbb
cwtl
adc
into
fldl
cmpsl
cmpsl
cmp
bnd
push
push
cli
sbb
js
mov
andl
add
sbb
jg
pushl
std
mov
sub
dec
sub
jae
add
cmp
xor
xor
lcall
out
psrad
aas
filds
mov
sub
sub
lea
xor
das
adc
js
pop
idiv
jmp
and
aas
push
add
shll
dec
xchg
ja
jbe
outsb
or
push
pushl
inc
sbb
xor
push
jb
pop
mov
sbb
nop
pop
stos
add
in
decl
sahf
pop
fiaddl
inc
movsb
mov
pop
ljmp
push
xor
flds
cli
lds
scas
imul
fwait
push
aaa
out
sti
subl
or
mov
push
mov
call
sub
into
outsb
test
mov
cmp
xlat
mov
pop
out
sbb
mov
decl
mov
es
cmp
sbb
cmp
outsl
pop
outsb
mov
cmp
in
inc
sbb
ljmp
mov
jp
inc
fisubrs
in
dec
addl
clc
gs
je
incl
xchg
pop
mov
imul
sub
mov
idiv
ljmp
hlt
nop
or
cmp
outsl
lret
imul
aaa
fs
dec
jne
mov
xchg
inc
cmp
in
cli
fsubrs
adc
cmpsb
shll
dec
inc
clc
mov
inc
rcr
daa
out
xchg
adc
call
xor
mov
fld
add
push
pop
sbb
cs
mov
in
sub
hlt
cmp
pushl
lock
adc
xor
sub
insb
add
xchg
jno
cmp
lds
inc
mov
aam
lods
fcompl
cltd
pop
sbb
push
lods
mov
pop
adc
sub
outsb
add
cmp
xor
popf
sub
pop
sub
lret
mov
outsl
add
fbstp
push
jle
sub
push
popa
adc
dec
xorb
lods
sub
xchg
mov
or
cmpsl
inc
push
mul
addr16
cmc
inc
push
push
push
and
sbb
in
xchg
mov
sbb
or
ds
pop
into
xchg
xchg
ljmp
sar
jecxz
and
or
pop
mov
push
lcall
mov
sub
mov
add
cli
and
jnp
cmc
sub
mov
icebp
jmp
mov
push
jb
mov
add
mov
hlt
rcl
inc
sahf
add
mov
mov
ss
xor
iret
outsb
or
incl
data16
inc
mov
or
mov
mov
ljmp
movsl
or
data16
filds
cmp
jbe
aaa
ss
push
jecxz
mov
lret
mov
js
sub
push
and
fstpt
mov
jle
jle
into
stc
cli
mov
ljmp
roll
in
mov
lret
xchg
cmp
cmp
jmp
xchg
dec
xchg
xchg
ljmp
push
cmp
sbb
cltd
out
mov
es
pop
hlt
jmp
push
and
xor
sub
cmpsl
arpl
cli
loop
icebp
mov
dec
aad
pushl
and
stos
mov
js
mov
pop
das
repz
mov
imul
call
push
cmp
mov
fadds
xor
mov
push
shrd
out
scas
call
loop
cmpsb
les
das
sbb
mov
inc
lcall
pushl
push
push
sbb
in
loop
jns
lret
scas
pushl
mov
cmp
call
les
rcll
dec
lods
jmp
sbb
pop
inc
jp
dec
and
ljmp
xchg
mov
push
jge
adc
ljmp
cmp
dec
mov
sub
icebp
call
mov
sbb
lods
mov
xchg
push
dec
inc
call
enter
pop
enter
inc
fcomip
das
xor
cmp
xor
ljmp
and
cmp
mov
sub
or
mov
push
cli
incl
mov
hlt
lods
loop
fs
and
out
mov
and
jg
call
mov
test
jns
inc
pop
pop
cmpsb
xchg
mov
mov
sub
scas
test
ljmp
loope
add
cmpsl
mov
jmp
add
mulb
packsswb
and
cmp
in
inc
into
add
xor
mov
xorl
andb
cli
pop
cmp
mov
incl
inc
sti
movsl
xchg
jl
push
inc
mov
sti
jmp
sti
jl
push
test
clc
inc
inc
push
pop
cltd
in
in
and
in
dec
aas
sbb
jecxz
pop
jne
ja
in
ljmp
adc
sbb
scas
mov
dec
adc
xchg
popf
cs
div
pop
or
loopne
add
incl
xor
outsl
and
mov
sbb
inc
dec
adcl
testl
dec
pop
mov
mov
ror
gs
cmp
fldt
loopne
add
adc
or
mov
dec
fisubrs
dec
push
mov
call
repnz
xchg
enter
cmp
push
pushl
jns
scas
jne
ja
push
jmp
pop
pop
out
cmpsl
dec
mov
pop
mov
in
ljmp
lock
testb
fdivrl
out
inc
imul
das
in
addr16
clc
mov
mov
test
sub
sbb
and
mov
ja
out
movsb
push
stc
mov
xchg
mov
and
outsl
mov
movsl
ljmp
cmc
push
movsb
sub
dec
pop
pop
insb
rcrl
xor
push
sbb
popa
xchg
daa
inc
jns
test
pop
mov
push
jge
test
add
inc
inc
pop
jge
or
call
mov
mov
and
lods
unpcklps
cmp
leave
xor
xchg
or
lcall
pushf
clc
jnp
cwtl
jne
ret
decl
sub
std
mov
pop
sahf
iret
cmp
scas
jg
mov
ljmp
cli
push
push
pop
stos
mov
pusha
loopne
lahf
test
add
or
mov
push
incl
lcall
lock
inc
das
jb
outsl
in
jne
xorl
ljmp
fs
sub
sahf
icebp
mov
roll
clc
mov
out
mov
pop
jne
jmp
cmpsl
inc
add
mov
inc
out
je
dec
rclb
cmp
mov
mov
pop
cltd
xchg
iret
pop
popf
mov
cmpsl
jmp
out
push
scas
insl
xor
js
fistps
or
fs
mov
add
push
movsl
stos
push
lret
dec
clc
dec
mov
out
movsl
imul
push
mov
pop
rcl
jno
mov
sbb
js
cmc
xor
lcall
add
inc
pop
insb
imul
mov
and
mov
or
incb
or
xor
jle
ret
dec
pause
out
pop
cmp
icebp
lret
mov
mov
decb
pop
xlat
jmp
jl
push
cmc
mov
fstpl
bound
jecxz
dec
ss
in
not
mov
jo
fistpll
and
inc
inc
jae
mov
mov
jo
mov
decl
dec
stos
popf
adc
mov
cmpl
inc
stos
out
push
das
inc
je
xor
mov
pop
shlb
dec
xchg
sbb
ja
das
push
cmp
sbb
incl
insl
fbld
icebp
int
push
sub
fwait
decl
sbb
inc
hlt
popf
popa
fcomip
xor
es
xor
mov
fcompl
pushl
js
add
lret
dec
mov
mov
push
mov
or
push
cmpsl
cmp
cli
call
pop
dec
cmp
data16
mov
jp
jb
push
aaa
jo
pop
jnp
xor
ljmp
mov
and
movsb
or
imul
shlb
mov
cmpsb
jae
mov
out
push
push
cmp
jg
test
test
incl
xorb
inc
aas
ret
xor
in
ret
inc
sbb
jecxz
ljmp
js
out
cmp
or
lcall
pushl
mov
movsb
aam
dec
pushf
mov
and
and
call
mov
inc
xor
inc
inc
icebp
loop
mov
push
xchg
fbld
lods
aaa
ss
push
jg
fwait
sub
sbb
iret
xlat
mov
sbb
lcall
lret
bound
jns
inc
pushl
ljmp
mov
leave
les
inc
xor
std
dec
pop
in
rep
xor
pushl
push
inc
cmp
ds
mov
jne
mov
fwait
xor
and
mov
lcall
inc
xor
call
push
mov
add
dec
xchg
and
mov
pushl
ret
sub
sbb
pop
jb
stos
inc
icebp
sti
in
lea
push
dec
pop
das
xor
fisubrs
ljmp
xlat
or
mov
aaa
mov
ret
neg
jg
bound
and
popf
mov
inc
jmp
add
and
mov
in
test
inc
in
shlb
imul
inc
rclb
sbb
ljmp
add
add
fwait
xchg
mov
sub
shrl
je
xchg
aam
lret
inc
mov
mul
adc
popf
inc
repz
gs
add
gs
out
pop
add
push
sarl
dec
cwtl
sbb
popf
mov
jl
ret
mov
jmp
inc
fldl2t
xor
jno
inc
lock
adc
in
test
decl
lcall
inc
cmp
fwait
add
lcall
xor
push
push
shlb
jnp
cmpsb
iret
mov
and
jge
testb
int3
repz
dec
addr16
out
clc
pop
aad
mov
rcr
jmp
push
stos
loop
inc
jne
pop
pop
inc
xor
sbb
call
sbb
rorl
rcll
es
sub
mov
pop
dec
dec
mov
jg
mov
push
pop
dec
jmp
jbe
repnz
sbb
fdivs
call
inc
jg
fs
mov
mov
pop
sbb
inc
jns
mov
pop
dec
sbb
or
movsb
cmp
aas
test
out
add
sahf
xchg
lock
loopne
cmpsb
scas
xorb
adc
cli
out
lret
mov
jg
adc
sub
jb
xchg
ljmp
es
mov
pop
scas
inc
pop
mov
pop
mov
sub
pop
and
scas
sub
inc
ja
int
loopne
incl
sarb
jns
js
push
arpl
in
cwtl
push
ljmp
jmp
nop
pop
sub
sbb
mov
bsr
and
jo
dec
ds
stos
cmp
repz
lcall
add
stos
test
stos
mov
xorl
bnd
fcmovbe
sbb
jle
sbb
insb
popa
fldl
sbbb
mov
mov
leave
int
lcall
adc
arpl
sub
les
jno
test
add
pop
movsl
call
addr16
mov
pushl
mov
sbb
pop
xorl
cld
stc
or
dec
aad
mov
add
jl
inc
es
loope
adc
bound
pop
popf
cmpsl
push
mov
repnz
popf
adc
dec
mov
in
mov
cmp
xchg
addr16
pop
dec
pop
jbe
lock
xorb
lcall
mov
fildl
cmp
lods
fstps
insb
mov
lcall
cmp
xor
sub
cmp
xchg
int3
push
inc
adc
ljmp
adc
mov
fdivrs
insl
sbb
sbb
mov
add
arpl
call
pop
in
xor
xor
push
cltd
adc
sbb
push
sub
movsl
nop
dec
imul
incl
xlat
imull
adc
xchg
fldcw
js
ret
into
das
fbstp
xor
insb
out
cmc
arpl
lcall
jle
ret
adc
xchg
ret
shl
out
bswap
js
sub
fcomip
mov
inc
aaa
pop
loop
gs
xor
je
jnp
push
xchg
cmp
out
outsb
add
add
jmp
mov
inc
cmpsl
adc
rolb
std
mov
fnstsw
or
data16
jne
push
and
rclb
mov
mov
or
push
nop
dec
jno
and
xor
ljmp
jne
in
or
call
inc
rolb
clc
pop
repnz
dec
or
mov
jl
add
decl
popa
ret
imull
adc
xchg
push
call
shll
out
incl
lret
jno
icebp
sub
jmp
es
push
push
mov
jle
out
inc
xchg
lret
imul
ljmp
mov
jns
aas
leave
pop
fildl
adc
bound
insb
adc
jl
pop
cmc
ljmp
gs
push
adc
add
outsb
repnz
rorl
ljmp
cli
aas
fwait
dec
aad
pop
push
jle
push
xor
lret
movsl
repz
sarb
call
sub
cmp
jo
js
push
xor
mov
cwtl
lcall
or
mov
sbb
decl
xchg
cmp
xor
jno
lods
dec
or
cld
mov
xor
jmp
sub
xchg
and
popf
jl
jo
adc
lock
xorb
hlt
push
push
add
xchg
mov
add
cmp
inc
dec
out
and
sbb
jg
add
jl
sub
lods
incl
jmp
sbb
and
mov
fisubrl
mov
mov
fwait
dec
data16
add
and
push
decl
adc
aas
lcall
jle
or
addl
mov
setno
iret
cmp
ja
test
dec
and
or
lret
ljmp
in
scas
jns
stos
stos
xor
jo
mov
cwtl
inc
popl
ret
pop
push
and
cmc
lcall
sub
and
mov
fisttpll
pop
mov
xlat
jg
mov
sbb
pop
push
cs
push
push
out
xchg
incl
jmp
std
cmp
lahf
sti
ja
ss
adc
out
shll
add
sub
jp
ret
and
pop
and
movsl
mov
filds
test
stc
addl
mov
jnp
sbb
repnz
inc
add
xlat
xlat
jns
push
and
inc
pop
push
mov
loope
std
lds
call
mov
xlat
mov
cmp
inc
in
lahf
mov
mov
or
jg
jbe
sub
incl
in
mov
movsl
fiaddl
out
and
mov
icebp
inc
pop
in
inc
scas
mov
cmpb
sar
sti
sbbl
cltd
add
push
imul
xchg
inc
shld
lea
aam
incl
clc
or
ret
mov
mov
outsb
fidivl
jmp
dec
gs
ljmp
mov
xchg
lgs
mov
sbb
shrl
jne
pop
pop
or
add
je
ret
lret
mov
add
ljmp
nop
loop
mov
mov
scas
sbb
sub
shl
sbb
add
pop
pop
push
inc
stos
lcall
imul
hlt
or
mov
adc
inc
cltd
mov
fwait
sti
shll
cmp
jg
int3
std
fstps
mov
mov
std
movsb
into
int
insl
xchg
fwait
call
in
int
decl
fs
xor
mov
pmullw
imul
fnstenv
mov
cmp
rorl
test
pop
aad
xor
dec
fwait
sbb
jl
test
sbbb
jecxz
cmpsl
pop
pop
subb
lods
mov
push
fstpl
out
clc
incl
lds
fistl
cs
enter
mov
cmp
in
out
mov
icebp
xchg
scas
mov
pushl
jbe
subl
push
std
sub
sbbl
pushw
daa
fidivl
jl
shll
gs
decl
notl
or
lcall
mov
mov
lahf
call
mov
lcall
addr16
mov
pop
test
cmp
cmc
pop
daa
jg
pop
xor
ljmp
insl
pop
test
dec
mov
push
js
popf
pop
sti
ffree
cld
inc
in
adc
push
test
pushl
mov
mov
lds
lods
test
pusha
sbb
call
mov
add
int3
inc
pop
adc
clc
dec
pop
cmpsb
out
mov
andb
lock
mov
jle
stos
aam
pop
add
and
lret
mov
xor
jae
pop
and
jne
push
fmulp
add
jmp
xor
jmp
stos
popf
xor
jno
sub
scas
std
inc
addr16
stc
pop
xchg
jno
dec
jb
jns
add
clc
inc
and
mov
data16
stc
xor
pushl
cmp
mov
and
and
pop
jle
xorb
add
mov
popa
cld
lcall
shll
pop
icebp
push
mov
arpl
cmp
and
adc
mov
sub
std
lcall
pop
test
out
mov
es
js
mov
les
and
pushl
inc
in
into
stos
or
sub
jbe
inc
pop
movsl
sbb
xchg
jno
adc
dec
inc
adc
add
jmp
lret
sub
subl
movsb
shll
xor
mov
dec
in
outsb
das
sar
add
lret
shrl
inc
idivb
pop
sbb
outsl
lret
cmp
sti
add
jmp
fstpl
mov
rcrl
push
js
hlt
lcall
int3
call
fisubrs
xor
test
xchg
push
sub
dec
fists
add
xor
adc
fdiv
out
cmc
mov
cmp
lea
add
cmpsb
xor
ds
push
cmp
sbb
int3
lods
and
mov
xor
dec
loop
lea
sarb
push
dec
ficoml
jmp
add
push
mov
lcall
or
dec
sub
cmp
daa
cmc
in
gs
ljmp
fs
mov
dec
fists
and
rcll
push
outsl
dec
or
cmpsl
incl
stos
cwtl
mov
into
pop
lcall
fsubl
in
imulb
jno
dec
sti
sub
out
clc
lcall
dec
pushfw
jno
xchg
mov
hlt
frstor
xor
rcrl
repnz
lcall
nop
jbe
add
push
xchg
mov
add
mov
out
mov
and
fld
dec
into
mov
mov
sbb
jl
xorl
mov
fwait
in
popf
push
icebp
lcall
jnp
movsl
mov
insl
insl
mov
mov
inc
cld
and
jo
loop
add
dec
ja
imul
inc
std
jmp
inc
and
add
mov
sub
jmp
incl
imul
pop
push
int
sbb
cmp
sub
std
popf
das
xchg
mov
sub
mov
mov
ja
jge
inc
jl
xchg
stos
je
sarl
xchg
mov
dec
mov
decl
inc
stos
push
jle
sbb
lret
push
jne
inc
iret
cltd
cli
or
stos
cmp
iret
inc
sub
or
call
jbe,pt
scas
mov
cli
clc
vpminub
outsl
or
decl
mov
or
subb
cmpsb
movsb
jbe
mov
lea
push
ljmp
icebp
push
fdivl
xchg
sub
movsb
mov
push
mov
sbb
cs
icebp
call
jb
add
jne
xor
sti
hlt
adc
fdivl
add
add
pop
ret
add
leave
dec
jl
xchg
add
and
dec
cld
dec
lahf
inc
aad
pop
xor
dec
mov
adc
or
aas
jb
rorl
or
and
pop
in
add
cmp
loopne
out
add
cli
subb
push
dec
jp
pop
mov
enter
std
out
xchg
xchg
js
jo
push
or
int
xchg
cmc
ljmp
scas
int
jmp
dec
data16
or
enter
jne
and
sub
lods
pop
shrl
cmpsb
add
and
cltd
pusha
lods
cltd
int3
and
aad
jl
sbb
lods
ljmp
daa
sbb
sub
dec
add
pushl
enter
sbb
jmp
mov
push
sub
pushl
dec
inc
jne
decl
aam
test
jae
pushf
repnz
mov
mov
inc
ror
dec
shlb
or
jmp
xchg
mov
xchg
das
dec
rcll
adcl
xor
iret
pop
into
cmp
cmp
xor
in
in
adc
pop
loop
cmc
mov
in
cwtl
mov
out
clc
push
dec
cmpsb
inc
xor
jle
lahf
out
add
cli
sub
test
mov
incl
cmp
pop
or
xorl
loop
mov
enter
mov
or
ljmp
mov
popl
stc
mov
imul
mov
pop
cwtl
jne
inc
adc
dec
shl
pop
scas
enter
or
mov
lea
rcrb
sbb
ljmp
xorl
mov
mov
xchg
ja
loope
stos
mov
andb
jge
ficomps
fucompp
inc
in
xchg
adc
int
imulb
cmp
jl
cmp
mov
decl
icebp
adc
adcl
pusha
mov
xorl
mov
dec
scas
aad
cmc
decl
ret
sbb
decb
into
pop
pop
xchg
rcrb
incl
in
jmp
insl
push
filds
ficoml
call
adc
jns
push
clc
dec
movsb
pop
sbb
push
fisttpl
mov
cmc
cmpsb
and
and
mov
pop
lcall
decl
es
mov
and
rclb
shll
pop
ret
jmp
orl
inc
imul
fisubl
popa
test
clc
clc
and
movsl
inc
mov
nop
dec
sti
inc
jg
mov
cs
add
lcall
jg
ljmp
push
loope
rcll
fchs
pop
pop
cld
fsubrs
pop
add
pop
mov
stc
or
xchg
mov
sti
adc
fcoms
add
xorl
adc
xor
pop
pushf
cmp
stc
or
pusha
fldcw
mov
test
push
inc
fistps
shll
or
jns
into
inc
pushl
cmp
jl
inc
sub
xor
xor
dec
push
bound
cmc
incl
sahf
jbe
loope
insl
pushf
out
push
adc
adc
mov
test
sbb
lock
inc
cmp
ds
cmpb
out
shlb
mov
xor
arpl
fucom
pop
in
push
mull
push
mov
jnp
jg
mov
lahf
xor
push
stc
jp
xor
jp
adc
inc
dec
and
jmp
cs
add
jno
sarb
imul
rcrl
push
mov
cli
ljmp
lds
xchg
add
pop
inc
mov
mov
jae
jb
call
in
fiadds
call
jl
sub
and
sbb
ja
gs
fwait
call
imul
ja
hlt
aas
xor
stos
sub
test
sbbb
jecxz
decl
or
outsl
or
popa
push
xlat
dec
add
call
test
pop
loope
jmp
in
mov
mov
inc
es
mov
and
stc
push
loope
mov
subl
xor
jmp
mov
repnz
out
push
pop
adc
popf
dec
push
xor
jmp
mov
mov
stc
lcall
xchg
insb
scas
pop
add
mov
xchg
cmp
scas
inc
mov
push
mov
movsb
sub
push
call
dec
fs
push
fdivrp
fiadds
push
rolb
daa
repnz
sub
sub
idiv
aaa
or
jnp
ret
sub
jae
test
jno
ljmp
pop
test
inc
and
dec
mov
and
fs
push
andl
sti
fcompl
bound
adc
out
repnz
push
xchg
pop
jg
or
daa
pop
lods
adc
mov
mov
sub
or
cmc
pop
in
add
push
and
je
dec
out
or
fisubrl
aam
pusha
ja
pop
or
scas
sub
push
sbb
out
rcll
subl
push
cmpsl
jb
repz
mov
mov
out
xor
mov
sub
dec
and
cmp
jg
mov
out
sbb
jnp
xchg
and
lret
insl
ret
cld
jmp
lcall
pop
ret
jns,pn
and
fmuls
call
cmp
mov
cmp
fwait
in
sub
add
adc
rcll
mov
pop
pop
incl
xchg
push
js
xchg
lahf
xor
fs
imul
pop
inc
sar
push
arpl
inc
xchg
inc
rcr
stc
push
icebp
lea
push
jle
mov
outsb
insl
lret
adc
aad
sub
sbb
mov
out
mov
adc
lcall
push
dec
cmpsl
mov
out
outsb
roll
fbld
jg
pop
mov
push
ljmp
sarl
aam
inc
adc
ljmp
xchg
jmp
add
outsl
js
push
cli
incl
dec
nop
aam
in
pop
mov
sbb
mov
clc
outsl
testl
das
mov
adc
sub
push
lods
xor
pop
enter
push
mov
fistpl
ljmp
les
ljmp
andl
jbe
jo
js
cld
imulb
xor
adc
push
push
icebp
stos
mov
sti
ja
aad
mov
int3
mov
cmp
mov
dec
icebp
repnz
mov
testb
pop
sti
lcall
adc
pop
push
scas
std
xor
loop
movsl
sahf
fdivp
notb
hlt
xor
lods
lret
xchg
dec
ljmp
push
mov
pusha
lods
mov
jbe
roll
lods
adc
mov
push
cmp
pop
loopne
lcall
mov
imul
push
loope
or
cmp
xor
aaa
cld
mov
xchg
popa
cltd
movsl
ficoml
mov
cmc
ss
out
in
push
cli
xlat
dec
push
mov
sbb
push
jle
repz
pop
push
sub
mov
dec
mov
int3
iret
gs
mov
jge
push
repnz
in
jp
mov
pop
arpl
adc
fwait
ja
popa
call
lock
aam
mov
cli
cmp
xchg
in
pop
sbb
pop
inc
jb
loopne
cld
ds
clc
mov
in
stos
mov
flds
or
dec
in
in
aam
fsubp
push
inc
pop
aas
dec
lcall
sub
push
xchg
jg
mov
mov
xchg
inc
into
cmp
pop
insl
jno
ds
cmp
lcall
mov
sahf
push
call
fwait
mov
jl
jb
fistpl
sar
ljmp
sbb
jnp
cmp
add
aaa
insb
dec
leave
jno
stos
inc
pop
dec
fs
rclb
lds
push
ljmp
or
jecxz
fcomi
sbb
out
cmp
sahf
lahf
jg,pt
ret
sub
push
in
mov
push
pushf
sbb
push
pop
cmp
pushl
dec
es
xchg
imul
add
jnp
out
rolb
cmp
arpl
inc
cmp
pop
add
orl
das
into
cmp
incl
out
dec
mov
xor
mov
xchg
xchg
ja
jge
mov
mov
jg
hlt
in
dec
movsb
imul
mov
adc
fnstcw
jmp
ret
call
cmp
mov
push
bound
sbb
popf
std
cld
jmp
jno
rorb
orb
or
clc
pushf
dec
pop
fcmovnbe
inc
inc
push
dec
out
inc
push
movb
test
jg
sub
call
lcall
push
aam
out
clc
stos
ljmp
inc
xor
aas
cmp
aas
add
and
mov
call
or
pand
adc
pop
mov
aaa
mov
stc
xchg
test
ljmp
jmp
jbe
cmp
pop
stc
and
xor
mov
mov
jg
dec
aas
repz
push
jns
xchg
mov
test
jmp
dec
arpl
push
es
xchg
xchg
mov
xchg
pushl
mov
xor
sahf
cmp
int3
ret
fsubl
cmp
mov
ljmp
lods
addr16
fdivrp
sbbb
es
cmpsl
mov
sub
add
jle
add
call
jl
cmp
lock
addr16
adc
mov
outsb
fimuls
sub
bnd
or
call
xchg
inc
or
retw
cmpsb
fildll
shll
incl
xor
and
cmp
fbstp
sub
cmp
and
add
leave
lods
adc
jp
adc
mov
xchg
push
jmp
jbe
and
push
add
mov
shlb
jle
int
aam
addr16
test
repnz
fs
fisubrs
das
mov
mov
call
pop
ss
adc
pop
adc
outsb
xor
int3
imul
inc
xor
lods
leave
repnz
lods
nop
cld
imul
push
xor
and
sub
adc
js
push
jo
cld
jle
call
or
sbb
push
outsb
and
cmp
push
sarl
add
fcmovnu
jmp
xor
jmp
das
adc
mov
insb
lods
sub
or
ja
iret
jmp
aaa
js
daa
xchg
xchg
shrl
mov
sbb
stos
std
ljmp
clc
sbb
push
xchg
push
lods
xchg
icebp
inc
sbb
jb
pop
sbb
lcall
cmc
imul
lretw
jbe
adc
dec
fsubs
pop
add
lcall
fnstenv
fisubrl
pop
mov
jmp
cmc
dec
pop
je
pop
push
adc
inc
insb
inc
xchg
mov
stos
ja
pop
or
mov
cmc
das
cli
aas
mov
test
xor
mov
jmp
loop
sub
jle
sbbl
pushl
mov
in
adc
mov
je
lcall
repnz
and
push
adc
repnz
mov
aas
adc
rcrb
imul
jg
decb
inc
jne
dec
pop
mov
aaa
outsl
push
popa
enter
ljmp
clc
movsl
push
sbb
mov
mov
lahf
sbb
sbb
pop
adc
emms
sub
cmp
das
insb
push
sbb
test
jmp
rcl
add
dec
insb
push
xchg
pop
leave
and
mov
jecxz
push
push
or
push
jb
or
lcall
scas
cmp
popf
roll
gs
call
outsb
outsb
inc
pop
cltd
addr16
add
mov
insb
or
scas
in
iret
lcall
mov
mov
or
divl
sti
mov
cs
mov
adc
push
push
dec
fcoml
in
jb
push
aam
adc
dec
inc
fcmovne
packuswb
movsb
pop
xchg
nop
inc
adc
jg
pop
iret
pop
aam
stc
addl
pop
inc
mov
mov
and
mov
aam
das
push
mov
pushl
add
mov
shlb
and
push
pusha
shrl
jmp
sbb
cmpl
dec
and
mov
in
loopne
pushl
xor
mov
icebp
mov
jmp
xor
ret
fidivrs
mov
pop
cmp
decl
jge
dec
stc
fcmovnb
mov
fnstcw
in
fistl
adc
dec
addb
faddl
repz
pop
sbb
push
sbb
inc
or
repz
sub
decl
cs
jge
movsb
fwait
int
xchg
inc
into
sub
fwait
test
dec
jno
lock
adc
dec
idiv
std
xchg
fcoms
and
fs
jbe
pop
pop
and
loopne
xchg
cmpsl
jo
cli
lcall
ljmp
js
add
and
clc
aaa
jns
repz
in
sub
inc
test
mov
xchg
fsubrs
mov
dec
mov
ss
loop
jmp
or
xor
add
mov
mov
leave
mov
cmp
add
cmp
repnz
push
and
jno
bound
fimull
stos
ret
xchg
data16
adc
sahf
or
outsb
jg
shrl
jl
fs
test
shl
jmp
adcl
fcoml
loope
pop
fnstenv
adc
repz
xchg
daa
cs
jne
mov
movl
mov
imul
push
call
cmp
in
mov
push
cmc
push
int
scas
cs
stos
lods
fdivrs
fildll
icebp
cld
jg
inc
sub
pop
or
lcall
popf
lods
cli
out
int
and
int
mov
mov
paddsw
or
call
fildll
jo
loop
lret
clc
jbe
nop
sub
pushl
cltd
aam
lds
movsb
insb
or
mov
dec
jmp
push
icebp
inc
ljmp
je
stos
sbbl
mov
popa
bound
mov
icebp
pushl
dec
dec
ret
negb
mov
pop
mov
shrl
fnstenv
popf
push
outsl
cmp
cmpsl
insb
cmp
std
test
cmp
imul
in
pop
lret
dec
rcll
pop
pop
aas
xchg
sahf
xor
loopne
and
call
xchg
push
and
add
mov
ljmp
je
test
lea
popf
mov
sarb
mov
fcomps
push
scas
fnsave
dec
mov
mov
clc
or
dec
mov
ja
jbe
sub
divl
and
mov
mul
in
ret
cmp
stos
repz
jo
stos
leave
and
into
int3
pop
pop
call
xchg
gs
test
jge
insb
pop
dec
mov
inc
shl
iret
adc
js
js
fistl
dec
in
jbe,pt
xor
jle
enter
or
add
scas
adc
loop
inc
cwtl
xchg
push
lods
ljmp
outsb
pusha
jae
cld
jmp
jle
and
inc
jle
or
pop
loope
or
or
mov
adc
and
or
cli
shlb
push
push
cmp
xor
jp
imul
pusha
mov
and
mov
jp
jg
aam
int3
out
jg
int
pop
sub
out
or
imul
fildl
mov
es
xchg
adc
push
cli
out
adc
inc
cmpsl
jno
and
into
adc
push
jnp
jl
mov
out
mov
daa
adcl
out
scas
xor
cmpl
loopne
jno
sbb
inc
sahf
or
jecxz
roll
jmp
imul
xor
inc
pop
lcall
push
xor
ljmp
rcr
filds
cmpsb
mov
fcomip
pushl
xchg
xor
imull
out
xor
push
or
loop
sub
or
pushl
mov
cmpsl
mov
mov
lds
repz
cmp
insb
mov
imul
dec
cmp
fildl
cmpsl
sub
or
or
pop
mov
and
fistps
insl
or
pop
pop
addr16
push
mov
fisttpl
push
mov
fcomip
push
cld
ss
shrb
dec
outsb
pop
out
mov
dec
insl
mov
repnz
add
xchg
aas
jae
jo
add
dec
addr16
jbe
cs
and
popf
dec
decl
ljmp
movsb
lods
and
fs
inc
cmpsb
imul
test
std
push
popl
cld
jmp
cmp
mov
cmp
jge
mov
cltd
imull
decl
cs
mov
popf
aaa
aas
xchg
test
adc
xchg
pop
clc
push
pop
pop
daa
in
jb
frstor
cld
jge
mov
adc
sub
sub
cwtl
ljmp
jmp
sar
divb
ja
frndint
gs
push
jne
add
inc
enter
filds
call
cwtl
out
mov
adc
pop
lret
mov
fneni(8087
in
clc
xlat
das
mov
leave
push
out
and
xor
and
jecxz
pop
inc
push
adc
aas
jmp
insl
rcrl
lods
cmp
loopne
rclb
mov
arpl
je
adc
cmpsl
fstl
fldcw
ss
call
call
adc
xlat
out
xor
mov
mov
sbb
xchg
pop
mov
xchg
sbb
lcall
cmp
dec
xchg
fninit
xchg
lea
call
xlat
mov
hlt
mov
repnz
addr16
ret
test
and
push
lods
inc
adc
pusha
xchg
cmpsl
cmpsb
shrl
imul
out
ljmp
int3
add
aas
or
add
sbb
push
push
ffreep
mov
decl
sbb
mov
xor
inc
js
ret
ret
in
xor
jnp
clc
cwtl
cmp
inc
mov
or
cltd
dec
int
xlat
scas
add
cmp
pusha
or
fisubl
das
xor
jmp
sbb
rcrb
in
xor
lods
nop
ret
sahf
decl
ror
mov
cmp
bound
loop
pop
lret
dec
push
dec
lock
incl
sub
outsl
add
mov
xchg
adc
adc
xchg
loop
out
jl
test
fcomp
pop
cmp
or
or
inc
in
movsb
lds
aas
and
dec
sub
add
mov
and
out
fidivl
negl
and
ret
jmp
jb
outsl
inc
mov
sbb
push
cmpsb
jae
adc
jg
pushl
sub
pop
push
ss
shl
add
notl
pop
inc
xlat
ljmp
ret
adc
inc
hlt
xchg
and
jns
cmpsb
push
push
xlat
push
jae
push
cmpsl
hlt
daa
jg
add
adc
sub
stos
xchg
imul
shl
ljmp
mov
inc
xchg
nop
aam
or
pop
add
aad
int
mov
pop
xchg
ret
out
and
shll
iret
aas
mov
adc
outsl
loopne
int3
lahf
cmp
lcall
leave
mov
inc
mov
outsl
xchg
insl
push
sbb
inc
jmp
mov
jmp
mov
outsb
sbb
inc
movsl
pop
arpl
xchg
mov
cwtl
push
inc
inc
inc
cmp
cli
out
aaa
fs
mov
or
arpl
push
fstp
pop
mov
inc
add
decl
leave
mov
out
movsb
loop
mov
idivl
xchg
xor
push
mov
push
mov
dec
mov
jle
sub
test
gs
mov
stos
push
pop
adc
daa
mov
decl
scas
and
addr16
cmp
mov
jbe
cli
mov
arpl
in
mov
in
ljmp
jae
dec
push
inc
sub
add
cwtl
daa
inc
rcrb
outsl
sub
call
fcoms
out
cmp
mov
mov
jb,pt
mov
data16
jae
adc
dec
mov
jmp
dec
repnz
es
clc
jmp
stos
mov
xchg
jmp
xor
shlb
test
clc
push
add
lcall
movsb
push
adc
aam
xor
dec
insb
adc
pop
xlat
ret
dec
mov
ljmp
lcall
xchg
jae
and
adc
lret
mov
mov
mov
in
add
jmp
add
xor
mov
lret
fildll
xchg
imul
pop
mov
inc
loop
push
xchg
call
xor
cmp
sub
cmp
ljmp
pop
sahf
andb
clc
cmpsl
or
add
movsl
nop
sub
add
ljmp
shlb
es
pop
rcrb
xor
or
push
test
or
dec
iret
xchg
das
leave
jmp
popf
and
out
jno
insb
divb
je
sub
ljmp
sub
dec
jmp
movsb
lods
call
call
fists
fdivrs
jg
mov
les
adc
sub
mov
or
cmp
xchg
dec
mov
sub
pop
das
ds
add
push
test
ljmp
rorl
insb
int
loop
lahf
inc
in
sbb
in
push
les
jp
jmp
and
dec
popa
aad
ja
mov
mov
icebp
out
and
arpl
cmp
jmp
sub
jmp
popa
mov
test
xor
bound
pop
dec
scas
and
mov
cmpsb
ljmp
dec
scas
jl
iret
mov
xor
hlt
mov
add
ja
out
adc
sbb
mov
incl
pop
and
sub
lahf
outsl
test
mov
popa
clc
lret
dec
lds
incl
out
in
sub
sarb
lea
jbe
jb
jp
sub
xchg
pusha
dec
pushl
and
in
in
lret
pop
dec
fists
je
xor
stc
scas
mov
sbb
jmp
adc
outsb
ds
jb
jecxz
ljmp
hlt
js
xor
mov
push
mov
or
sbb
sub
test
push
movsb
fdivrl
mov
testl
xchg
fisubrl
mov
mov
movl
mov
popf
mov
push
fdivp
imul
jecxz
jmp
pop
and
clc
pop
mov
shl
sub
cmpsl
inc
pushl
ds
push
adc
sbb
test
icebp
ds
cmpsl
fucom
clc
imul
fwait
xchg
aam
lcall
lods
jg
sahf
pop
dec
sti
test
mov
jg
jge
push
xor
int3
mov
jecxz
mov
lret
mov
mov
out
mov
mov
push
dec
jnp
cld
fnstcw
inc
inc
jmp
mov
incl
cld
sub
jb
pop
sub
ret
add
in
or
mov
gs
xlat
dec
jl
mov
adc
mov
mov
aas
lock
push
cmp
popa
cs
cmp
mov
les
fnstsw
mov
notb
scas
cmp
cmp
scas
inc
mov
fldenv
pop
and
cmp
fdivs
mov
cmpsl
int
push
ljmp
xchg
lods
jb
pop
mov
adc
sarb
icebp
sub
rcrb
lcall
jbe
and
stc
iret
loopne
adc
jbe
inc
xor
fildl
mov
jg
incl
jle
push
push
movsb
adc
lret
stos
dec
or
cwtl
or
loop
jo
cmp
icebp
divl
dec
push
adc
movsb
and
add
rclb
clc
jmp
rol
loop
jp
jae
mov
xchg
daa
ret
mov
or
jl
incl
cld
push
lcall
or
mov
lcall
sbb
in
cmp
mov
mov
inc
mov
cmpsb
fdivs
ret
test
leave
mov
dec
sbb
les
cmp
lcall
jnp
push
jg
dec
mov
xchg
sub
fistpll
out
pop
add
inc
pop
adc
inc
sbb
dec
xchg
inc
and
cmpsb
cmp
add
test
mov
decl
adc
inc
xor
in
mov
mov
mov
and
fsubs
test
dec
lcall
out
push
aas
jno
jmp
dec
arpl
test
loopne
sub
and
add
fcompl
sbbb
fwait
fcomip
stos
pop
shrl
inc
jmp
pop
or
push
jb
pop
mov
inc
test
hlt
test
jg
push
xlat
xchg
inc
adc
jbe
cli
push
push
ds
mov
xor
ja
out
mov
imulb
and
fsts
xchg
or
jp
cmpl
cli
fisttps
call
outsb
lods
xchg
sbb
insb
push
aas
mov
pop
sbb
cmc
mov
aaa
jno
adc
lcall
call
inc
adc
es
in
or
inc
mov
cmpsl
faddl
mov
add
inc
ja
jnp
pop
jo
mov
dec
mov
add
faddl
add
mov
lcall
sbb
and
mov
sar
lcall
xchg
ja
data16
loopne
and
pop
es
lock
or
xchg
dec
pop
loopne
inc
and
lea
sti
cwtl
popa
cmovnp
mov
mov
xor
sbb
cmpsb
fidivrs
aad
push
add
les
clc
hlt
lcall
push
das
pop
fs
sbb
shrb
popf
sub
lcall
stc
cwtl
sbb
aad
test
ljmp
mov
xchg
or
pop
push
jp
mov
fildl
fst
sti
inc
pop
fcos
stc
jo
test
jne
jg
jbe
and
addr16
mov
pop
inc
add
sti
decl
cmp
dec
mov
ljmp
sbb
les
adc
test
sbb
jns
jecxz
into
cmp
decl
out
andb
gs
and
or
clc
enter
pop
push
mov
ja
adc
imul
sbb
push
sahf
dec
orl
and
pop
mov
daa
pop
aad
decl
push
xchg
dec
jle
fists
out
lock
and
in
fisttpll
pusha
mov
es
add
les
sub
pop
mov
clc
flds
lock
cld
dec
into
sbb
dec
xchg
aas
push
sbb
mov
incl
pop
test
xor
pushl
std
dec
pushf
movsl
dec
dec
xor
push
inc
shl
gs
cmp
test
or
ljmp
push
and
dec
sub
inc
aad
or
shrl
lock
add
test
mov
or
mov
mov
mov
inc
or
pop
cmc
mov
mov
sbb
xor
loope
add
pushl
mov
test
ss
jmp
leave
fidivl
cmp
mov
call
lcall
adc
jmp
and
movsb
sti
pop
mov
inc
ljmp
out
or
lcall
bound
pop
mov
mov
jge
divb
inc
test
xor
jns
incb
add
lahf
cli
mov
fcmovbe
mov
clc
pushl
sarb
popf
jbe
outsl
rcll
sbb
bound
mov
int
jnp
into
xchg
ja
fs
scas
stos
clc
mov
leave
xor
ror
push
cmp
sub
fsubrp
jo
jmp
inc
js
inc
into
jl
dec
inc
or
xor
test
mov
cwtl
call
mov
fildll
jl
lcall
xchg
and
pushf
pop
pushl
push
incl
call
pop
pop
push
or
xchg
bound
les
push
xchg
xchg
or
ljmp
push
adc
movsb
scas
and
loope
push
mov
lods
adcb
leave
lods
sub
cli
add
jl
stc
out
sub
jg
sub
pushf
fisttps
outsb
inc
in
lods
sbb
mov
mov
xchg
dec
push
iret
aad
mov
dec
pop
jne
add
adcl
mov
sbb
gs
sub
mov
call
ss
sbb
jnp
insl
pop
pop
mov
mov
sub
push
mov
pushl
rorb
cmp
or
pop
fwait
aam
fwait
push
out
push
data16
mov
popl
aaa
lret
fldenv
cmp
pop
int
jb
add
in
loop
add
xchg
js
ret
daa
inc
aad
cmpsb
sti
into
push
cmpsb
fsubrl
fsubrs
stos
sahf
int3
sbb
orl
lcall
add
jnp
sar
icebp
ds
or
test
out
dec
in
jge
sbb
pushf
lods
cltd
in
loop
in
out
add
call
push
fstpt
clc
jp
scas
mov
aam
bound
insb
jecxz
xorl
ljmp
int
pop
icebp
push
mov
add
ret
xor
stc
popa
sbb
addr16
loope
and
out
xor
push
xor
fcmovb
push
add
xor
adc
mov
stos
add
leave
jo
data16
fisttps
xchg
call
jge
xchg
arpl
mov
jno
ficompl
incl
ljmp
es
lds
xchg
push
mov
call
push
adc
jle
jbe
add
cs
sub
ljmp
hlt
mov
imul
arpl
in
adc
jmp
mov
xor
ljmp
or
add
es
or
lcall
fisttpll
or
popf
jp
in
xchg
addb
ds
or
jmp
out
lea
cld
ret
push
lds
lret
xorb
decl
lock
sti
cmp
pusha
push
gs
mov
pop
scas
ds
xchg
outsl
and
mov
call
into
popa
pusha
clc
xor
xchg
or
les
repz
cld
repnz
imul
lcall
ljmp
jl
cmp
mov
mov
jo
jg
out
xchg
mov
push
xor
cld
test
test
xor
sarl
adc
cmpsb
jns
push
and
push
mov
decl
test
ret
add
insl
adc
mov
repz
incl
stos
sub
out
sub
leave
mov
push
pop
fisttpll
int3
and
xchg
call
lods
jbe
push
je
jae
ljmp
cli
or
adc
out
dec
pop
push
pop
add
scas
test
xor
jg
call
add
pushf
dec
call
mov
adc
and
cmp
jle
sub
dec
popf
add
sbb
jo
sbb
push
cltd
and
sti
dec
and
xchg
and
cld
decl
xchg
mov
push
outsl
pop
aad
fs
xchg
ret
jno
stc
inc
push
mov
inc
aam
pushl
subl
out
and
loope
call
into
or
ljmp
inc
adc
cmpsl
movsl
icebp
sub
pop
pop
adc
cmp
nop
xchg
or
lcall
jae
or
dec
arpl
xchg
push
addl
push
xchg
ja
jb
ljmp
cmp
mov
or
jp
imul
mov
jmp
dec
cmpsl
lcall
push
cmp
dec
mov
add
jns
fbstp
mov
js
nop
xchg
add
lock
sub
pop
mov
adc
mov
xor
clc
or
sbb
mov
jmp
mov
incl
in
adc
cmp
aam
sub
lea
ficomps
dec
mov
insb
decl
adc
xor
push
cld
iret
ss
push
push
andb
inc
adc
call
push
enter
inc
punpckldq
add
je
or
cmp
incl
sub
leave
mov
das
icebp
mov
ja
sub
fcoms
jno
push
imul
pop
sbb
sar
inc
cld
pushf
push
cmp
js
sbb
clc
imull
mov
std
insb
xchg
in
call
mov
add
dec
cwtl
leave
and
in
or
testl
sti
cs
inc
inc
and
fcoml
or
mov
movsb
jno
cmp
or
mov
lcall
in
push
mov
in
pushf
sbb
es
fsub
cmp
adc
lock
ljmp
test
dec
add
fbld
cmp
pop
dec
adc
and
push
popa
mov
fcomip
add
sbb
mov
aaa
cmp
notb
adc
mov
pushl
sbbb
outsl
adc
mul
add
adc
repnz
or
repz
push
inc
orl
inc
xchg
jle
inc
inc
xor
xor
push
mov
mov
pushf
mov
inc
sub
dec
jp
ja
and
push
lock
inc
aaa
int3
xchg
cltd
scas
sbb
fwait
pop
push
jmp
outsl
das
xchg
xchg
lcall
lock
xor
add
hlt
aas
cmpl
testb
out
fisubl
orb
lret
adc
push
jmp
add
daa
push
test
cmc
aad
test
and
xchg
mov
call
pop
mov
ret
lret
cmp
pop
insl
outsl
stc
outsb
cmp
outsb
leave
sbb
adc
push
jl
jno
jg
pop
fmull
loopne
cmpsl
cmpsl
mov
pop
aas
dec
fildl
dec
mov
int
movsb
movsl
orb
xor
sbb
add
fisttps
ljmp
std
push
int3
rcl
mov
adc
ss
sti
sub
cmpsb
stc
mov
inc
pop
addr16
imul
fcoml
inc
add
jg
dec
cld
jbe
rcll
xchg
test
jg
mov
incl
jnp
lea
loopne
add
xor
pop
arpl
imul
cmp
rclb
aas
pop
aaa
push
lcall
inc
cwtl
inc
cmpsb
mov
jmp
dec
dec
pop
cmp
or
push
js
mov
nop
sar
xchg
loop
pop
mov
js
lret
jmp
cmp
outsl
or
sub
loopne
ret
and
cltd
sahf
mov
sahf
ljmp
repz
call
push
mov
adc
mov
popa
movsl
pop
xorb
lcall
xchg
push
sub
sahf
or
lret
and
push
rclb
out
pop
adcl
cwtl
mov
cmp
push
sub
cwtl
pop
cwtl
pop
in
rep
mov
ljmp
pop
or
ljmp
icebp
int3
iret
out
xor
sub
lcall
andb
mov
lods
or
push
ret
aad
roll
mov
movsl
sub
fbstp
pushl
or
and
int
add
ret
cmp
sbb
decl
sub
int
icebp
jns
fisttpl
lcall
aam
in
loop
testb
ljmp
repnz
cmc
sbb
in
lcall
dec
cwtl
mov
stos
pop
pushf
mov
dec
add
push
inc
int3
rorl
lods
xor
jno
icebp
in
xchg
and
jnp
cmc
adc
es
jg
fs
ljmp
xor
xchg
mov
aaa
adc
std
xchg
sub
insb
insb
xchg
inc
call
decl
push
sti
mov
outsl
mov
inc
push
inc
adc
cmpsl
xchg
mov
mov
add
clc
pushl
insb
xchg
cmpsl
sbb
or
lret
gs
push
popf
fstps
lods
stc
popf
xor
add
sbb
mov
xorl
or
dec
and
fadds
mov
mov
aas
cs
pop
cld
lock
dec
push
mov
ret
jae
rolb
lcall
ds
sbb
xchg
ds
mov
or
add
and
adc
addr16
lcall
je
jmp
dec
pop
mov
or
or
dec
mov
test
pop
test
sbb
mov
pop
aas
mov
insl
push
add
in
ret
inc
fcomps
sahf
xchg
push
stos
mov
hlt
mov
mov
lcall
test
scas
xor
leave
push
sbb
das
sahf
fpatan
lea
xchg
xchg
adc
rcrl
mov
jo
sbb
iret
push
movsb
mov
sub
sti
pusha
cmc
incl
cld
incl
int3
fwait
sbb
cmp
adc
cmpsb
mov
or
call
outsl
fcompl
jg
and
pushl
int3
jo
adc
adc
stos
fucomip
dec
mov
jp
push
pushf
mov
decl
cwtl
jbe
dec
mov
xor
cmp
aad
push
inc
or
cld
pop
cld
adc
insl
arpl
xchg
jg
lret
nop
mov
mov
adc
fabs
adc
call
mov
in
mov
add
mov
sahf
jne
and
add
clc
mov
ljmp
and
aas
in
in
cmp
les
andb
shrb
ljmp
mov
push
and
or
xchg
sbb
jo
scas
xchg
gs
mov
dec
jecxz
lahf
cld
mov
push
repz
into
test
mov
cmp
pop
shll
adc
sbb
mov
mov
pop
lret
mov
dec
movsb
repz
jle
jb
jg
scas
loope
xchg
int3
add
scas
call
sub
pop
stos
stc
lods
adc
jp
xor
mov
mov
or
hlt
sub
mov
shll
and
and
mov
jbe
sub
mov
incl
in
push
lods
inc
gs
pop
sbb
testb
rorl
stc
mov
or
rorl
leave
cmp
shll
dec
pop
or
sub
xor
hlt
das
xor
loopne
jp
pop
mov
hlt
pushl
fcmovbe
test
pop
fstpt
add
pop
mov
push
mov
push
jno
or
lods
stos
sbb
sbb
push
lahf
pop
js
movsb
xchg
decl
mov
hlt
jle
cmpsb
outsb
jge
repnz
cltd
insb
jns
inc
in
lock
cld
sub
es
in
fcomp
fs
or
xor
jg
rcll
rcrb
jmp
pop
sub
inc
mov
ja
xorl
in
hlt
stc
mov
add
das
cli
mov
cmp
test
movsl
cs
mov
mov
outsb
in
mov
xchg
cli
repz
mov
mov
push
scas
pushf
into
push
mov
dec
jae
pop
and
addr16
push
jl
pop
cmp
test
cli
xor
loope
hlt
out
decl
push
enter
lock
hlt
cmp
dec
cli
in
dec
push
cld
and
bound
push
push
scas
jmp
inc
std
decl
inc
mov
insb
out
shl
movsb
out
mov
jg
jmp
xchg
push
adc
data16
mov
subl
xchg
adc
push
dec
fnstenv
in
cltd
xchg
jb
lea
fwait
xor
sub
sub
cs
push
mov
lcall
pop
aad
xor
js
add
xor
lock
sbb
insl
dec
or
test
jmp
adc
cs
psadbw
mov
insl
mov
cmp
push
or
imul
jmp
jae
xchg
xchg
jg
pop
stos
jnp
pop
xchg
lods
int3
and
rolb
jno,pn
lcall
pop
jnp
jle
js
cmp
jecxz
es
lock
cmc
shrb
mov
fs
adc
sub
adcb
push
push
call
and
inc
notb
movd
pusha
loopne
iret
clc
push
or
or
nop
pop
inc
push
call
xor
cs
data16
das
addb
push
clc
sbb
enter
cmp
pop
xchg
jns
lock
jge
pop
aas
xchg
insl
mov
push
in
repnz
jbe
adc
xor
cwtl
pushl
cmp
inc
aam
out
pushl
mov
xor
mov
std
adc
push
dec
dec
clc
mov
sarl
or
dec
push
cmp
dec
enter
dec
jmp
pop
imul
xor
dec
jg
cmp
popf
into
mov
ss
scas
jmp
or
or
aad
out
int
push
xchg
and
xor
mov
jecxz
or
cltd
push
pop
dec
xor
out
lahf
sub
jg
pushl
data16
inc
inc
nop
cmp
shrl
jg
fimuls
in
call
xchg
jp
jg
out
test
and
add
jmp
mov
stc
jl
aas
or
leave
push
adc
dec
push
inc
incl
dec
mov
adcb
aas
es
shrb
cs
jbe
imul
mov
incl
mov
fdivrl
repz
mov
mov
addr16
sub
subb
sub
test
daa
xchg
scas
fcmovnu
pop
enter
mov
lods
jne
push
mov
pop
and
pop
andl
cmp
sub
xor
mov
dec
adc
enter
enter
ja
fistps
aaa
jl
xor
mov
ret
shlb
xchg
aam
jge
pop
subb
sbb
jl
jns
ljmp
sub
sbb
dec
add
mov
mov
fwait
inc
cwtl
dec
es
shll
adc
xlat
addr16
lcall
add
push
adc
stc
or
sbb
lret
incl
rol
lret
push
or
xchg
cmc
ret
xchg
fs
xor
jmp
add
jg
dec
nop
das
mull
mov
pusha
inc
push
jmp
negb
cmp
xchg
jmp
scas
fisttpl
das
rorl
jg
cld
std
stos
mov
sbb
scas
and
adc
rcrb
sahf
push
mov
imul
pushl
push
mov
paddq
push
jo
les
mov
xor
pop
and
fwait
mov
jg
fimull
jbe
mov
or
and
mov
jmp
pop
or
inc
jecxz
ljmp
or
adc
cmpsl
sti
repz
push
test
xor
in
es
jmp
pushl
sahf
push
ret
bound
mov
add
stos
mov
jmp
js
in
decl
push
cltd
fnstsw
shll
fsts
outsb
insl
hlt
test
mov
and
jno
push
pop
dec
xchg
icebp
js
cwtl
mov
pop
adc
stos
enter
lcall
mov
mov
xchg
sbb
jg
sbb
aaa
sbbb
in
ss
int
lret
test
jns
mov
popf
ljmp
cmp
loopne
cli
mov
cwtl
cltd
cmp
fnstenv
inc
in
in
mov
out
mov
fidivs
ljmp
aam
fidivrl
test
mov
popa
ljmp
dec
inc
adc
outsb
mov
dec
pop
pop
push
dec
inc
adc
imul
add
xorl
cmp
pushf
and
mov
aaa
aas
loopne
test
dec
pushl
add
repz
xchg
roll
inc
xchg
add
decl
sahf
jb
xor
mov
lret
mov
dec
and
push
pop
push
adc
hlt
pop
fsubrl
in
pop
idiv
incl
sahf
in
outsb
cmp
lods
shll
xchg
addr16
cmpsb
jle
insb
jmp
push
sub
stos
mov
leave
sbb
xchg
sub
mov
mov
fs
mov
jmp
mov
adc
fildll
jo
xchg
sub
lods
lret
pop
jno
call
rorb
dec
and
xchg
lods
xorl
sbb
movl
cltd
xchg
mov
rcrb
std
jmp
ret
inc
pop
xchg
or
push
jecxz
mov
cmp
fnclex
fdivl
loopne
ss
cwtl
xchg
imul
es
pop
pop
mov
mov
mov
stc
push
insb
mov
jmp
into
dec
xchg
mov
in
icebp
mov
leave
push
fs
lahf
inc
and
out
clc
pushl
xchg
out
jecxz
adcl
jl
xchg
int3
in
push
or
or
jmp
loopne
mov
jnp
cmp
mov
insl
incb
jne
mov
or
lcall
push
sbb
ficoml
addr16
aaa
and
jecxz
mov
idivl
js
mov
and
sarl
test
add
or
mov
adc
mov
ds
inc
aas
sbbl
clc
decl
js
mov
and
adc
sar
and
pop
jb
mov
gs
dec
test
sbb
call
lcall
adc
or
xchg
inc
data16
ss
decl
xor
bound
out
jl
inc
adcl
ret
lcall
sub
repz
int3
push
mov
int
lcall
movsb
push
call
fbstp
pop
ret
clc
fldenv
push
sbb
test
das
xchg
xchg
addl
incl
cmc
scas
adc
xor
inc
add
sub
mov
mov
cmpsb
cmp
xor
fstl
jg
ret
test
mov
enter
subl
cmp
jecxz
or
lcall
shll
fsts
ja
mov
jns
mov
xchg
insl
nop
incl
lcall
aaa
add
loop
iret
shrl
aaa
xchg
test
xor
mov
xchg
jmp
push
jo
lret
in
xlat
xchg
jg
mov
outsl
sbb
mov
ss
pop
dec
call
add
ds
movsb
fcos
call
fldcw
ja
in
pop
ljmp
sbb
lods
xorb
dec
add
or
outsb
mov
outsb
arpl
addb
ret
mov
setp
outsl
sbb
ds
mov
sbb
insl
add
pop
aas
xchg
or
repz
sub
jae
shrl
adc
fdivs
imul
mov
addr16
ljmp
mov
and
aam
mov
or
xchg
jmp
ljmp
and
mov
negl
mov
xor
rcr
lahf
add
cli
xchg
jg
gs
cmp
inc
mov
jmp
fwait
xchg
fwait
inc
mov
mov
stos
or
loopne
dec
ret
add
ss
push
sub
xchg
jmp
inc
ljmp
mov
push
dec
mov
movsl
inc
ja
stos
int3
bound
sub
jns
fnstcw
enter
fisttpll
enter
mov
lods
cli
lea
mov
leave
cld
call
test
lods
aam
sbb
scas
xchg
imul
adc
jg
dec
push
jg
jo
push
cmp
imul
and
sti
mov
push
jae,pn
mov
lcall
sbb
imul
add
pop
cmc
call
mov
lea
cmc
xor
cmpsl
daa
fucomp
out
in
push
lcall
ds
aas
xlat
add
pop
lret
inc
sub
adc
push
mov
arpl
xor
jecxz
ljmp
dec
out
jmp
or
xor
mov
dec
jbe
sub
fisttps
aaa
add
jle
and
ret
shr
out
inc
mov
ss
xchg
and
dec
xor
push
xchg
mov
imul
test
fs
jno
cmpsb
inc
mov
bound
aad
mov
xchg
cmc
jl
fstpt
jmp
scas
cld
out
das
test
mov
cmp
cmp
pop
mov
cld
dec
movsl
add
decl
popf
xchg
cmp
mov
or
daa
add
ficomps
sbb
mov
adc
int
rcrl
insb
mov
test
call
pusha
scas
outsl
loopne
and
xor
ret
out
pop
addr16
jb
jmp
and
sbb
incl
push
push
hlt
test
ja
jmp
inc
pusha
in
aam
cmp
mov
pushl
xor
pop
fidivrl
sub
mov
cmp
ljmp
adc
ss
cmp
xchg
adc
jge
fwait
push
or
xor
push
push
mov
clc
sbb
decl
sbbb
sbb
push
movsb
push
mov
into
push
cmp
jmp
push
sbb
jle
adc
lret
pop
into
mov
outsb
outsl
outsl
mov
mov
xor
call
ss
and
mov
popf
pop
inc
fdivl
testb
test
lahf
mov
push
scas
out
popfw
push
push
fidivrl
cmp
test
call
xor
stos
ret
xor
inc
dec
and
mov
lcall
das
ss
or
adc
cli
add
ret
testl
lods
and
stos
sbb
icebp
dec
push
incl
add
jo
sub
push
add
ljmp
xchg
adc
push
scas
xor
jae
mov
inc
loopne
insl
lret
xor
popf
or
shll
jp
mov
xor
jmp
ljmp
dec
mov
jae
jl
jmp
cmp
sbb
nop
cli
int
jmp
das
cli
mov
aaa
insb
adc
xor
and
data16
add
mov
sbb
ljmp
pop
cmpsl
xchg
ret
mov
and
adc
inc
pop
in
push
jg
iret
outsl
push
or
push
pop
sub
fbstp
fisttps
or
inc
add
dec
push
dec
or
jle
mov
xchg
call
stos
jge
aad
sub
out
aad
addr16
test
push
cmp
add
jb
enter
dec
mov
pop
repz
xor
push
dec
mov
xchg
daa
xchg
jecxz
mov
mov
jnp
cltd
data16
and
dec
es
decl
cli
in
cli
xor
fs
bound
sub
push
dec
xchg
inc
mov
fsqrt
add
jge
pop
push
call
jo
stos
imul
ljmp
sahf
cmpsb
mov
push
movsl
enter
and
jp
xchg
fidivs
inc
std
into
add
hlt
shlb
pop
loopne
jmp
frstor
add
fldpi
int3
or
stos
test
or
out
lcall
fsub
call
jg
int
ret
outsb
cld
bound
std
sbb
pop
dec
cwtl
decl
push
and
shlb
sahf
jo
jnp
outsb
mov
push
out
adc
fdivs
dec
shl
stos
lods
xlat
mov
xchg
push
mov
mov
lea
negb
or
decl
pusha
or
push
pop
push
lods
add
mov
push
fisttps
sbb
lcall
lcall
rorl
and
jle
jmp
mov
outsl
leave
or
pushl
dec
adc
xchg
push
push
sub
popa
jb
clc
loop
scas
add
cltd
push
or
hlt
popa
push
std
jmp
xchg
pop
out
mov
notb
sub
dec
stc
roll
call
sbb
jp
in
push
lods
mov
cmp
in
fisubl
and
mov
out
fs
mov
adc
lret
mov
ljmp
mov
ret
jmp
aam
jne
cld
test
pop
sub
bound
mov
or
lcall
or
pop
cwtl
inc
cwtl
xor
mov
mov
xchg
inc
sti
xlat
sbb
shll
std
add
cli
mov
jno
stos
add
test
dec
jle
nopl
insb
xchg
popf
ljmp
inc
push
call
test
or
and
test
fcom
mov
cmp
incl
pusha
cmp
cmp
mov
dec
fisttpl
addr16
inc
sbb
jns
call
std
mov
jb
or
mov
js
mov
sbb
test
ret
cltd
outsb
push
xchg
adc
xor
lods
insb
bnd
shrl
insb
iret
mov
idivb
mov
mov
in
testb
test
ljmp
push
jg
addl
pushw
ljmp
sub
push
mov
cld
scas
mov
sub
outsl
jg
aas
adc
add
pop
shll
fsubrl
clc
dec
adc
decl
popa
mov
pop
ret
jae
leave
shl
loop
bound
jmp
cwtl
push
pop
xchg
ss
fiadds
imul
push
das
and
push
pushl
cld
dec
inc
xorb
insb
inc
aad
rorb
scas
and
lods
jge
or
jge
je
pop
ror
mov
stc
call
cld
xchg
out
fstpl
std
sub
fs
or
cltd
mov
inc
int3
adc
aad
cltd
sbb
stos
cmp
add
decl
movsl
push
lcall
add
lock
xor
push
mov
call
in
or
and
push
pop
jo
mov
pop
cli
adc
adc
add
in
ljmp
aas
sbb
mov
movsb
jno
rolb
in
pop
jp
push
ss
add
dec
ljmp
xchg
mov
in
adc
jle
fs
out
aam
push
dec
ret
mov
mov
call
push
cmp
test
test
rcrl
jecxz
jmp
shl
xchg
sahf
or
cwtl
mov
and
jbe
xor
xchg
loopne
enter
lcall
in
loopne
push
sub
aad
aam
in
xor
push
inc
jno
or
mov
jmp
dec
sbb
xor
cmp
and
gs
sub
sub
lcall
sub
and
mov
cmc
sub
dec
jb
loope
push
jl
shll
dec
mov
ljmp
xchg
jb
mov
insl
fs
mov
hlt
mov
sub
aas
jno
adc
mov
aam
sti
cld
fs
jae
adc
stos
call
fwait
xchg
std
in
fnstcw
xlat
bound
inc
in
xchg
lods
pop
imul
jmp
rorb
cmpsl
daa
insl
cmp
adc
pop
mov
inc
mov
lret
mov
push
lcall
xor
ret
data16
fstpt
mov
iret
or
xor
mov
ret
mov
jle
add
outsb
lea
fcmove
mov
in
roll
fsubs
mov
or
pop
outsl
cmp
jp
sub
out
icebp
mov
mov
cmp
ljmp
jmp
in
sub
aad
inc
xchg
mov
fstps
mov
ds
scas
inc
movsl
imul
sti
dec
xchg
in
mov
jmp
pop
bound
sti
or
pshufw
faddl
jne
js
sti
xchg
xchg
mov
in
fwait
xor
sub
push
mov
inc
sub
inc
xor
jecxz
jmp
movsl
cmc
lea
adc
das
pop
adc
inc
xchg
pop
aas
inc
cmp
or
mov
jg
in
cmp
js
fwait
ja
and
movsb
insl
pop
cmp
sbb
pusha
and
iret
push
dec
sub
push
jg
mov
ds
call
fcmovnb
lcall
pop
mov
mov
test
cmc
push
xchg
sub
mov
repz
sbb
ds
insl
fcoml
ds
sbb
xchg
dec
sbb
ss
or
lret
ret
mov
lods
in
fimull
xor
pop
call
pushf
bound
loopne
push
in
cmpsl
scas
adc
xchg
lods
xchg
mov
xchg
add
fisttps
idivb
pop
push
mov
pop
lcall
outsb
bound
inc
push
shl
jo
sbb
lcall
or
fisubs
cmp
or
jno
inc
arpl
scas
mov
jecxz
aad
push
jae
adc
bound
outsl
dec
icebp
std
scas
dec
aas
jp
lcall
nop
pop
adc
insb
or
subl
hlt
adc
cmp
jmp
cwtl
jns
inc
mov
jl
add
in
lds
das
out
sbbb
shrb
addr16
pushf
cmp
push
jl
inc
jmp
xor
call
jo
nop
xchg
bound
sbbl
mov
sub
inc
scas
mov
call
push
sub
inc
nop
jl
pop
lods
jno
dec
out
outsb
andl
push
call
ljmp
adc
rcrb
cld
jnp
mov
pusha
add
and
pushf
pushl
into
psubb
push
xchg
cmp
jno
clc
sar
xchg
and
xor
imul
jmp
ljmp
je
ficoml
push
subl
inc
sub
adc
jecxz
jg
push
cli
xchg
aam
ret
pop
mov
xor
inc
pop
mov
mov
call
mov
mov
ret
jbe
imulb
addr16
inc
jg
mov
cmp
xor
out
ror
xchg
pop
movsl
or
in
movsl
pop
ds
in
push
jnp
mov
inc
setb
arpl
cld
jno
jmp
fdivrs
ljmp
clc
mov
cmp
inc
bnd
or
sbb
mov
sbb
rorl
int3
fnstenv
jo
pushl
dec
shrb
pop
repnz
test
pop
adc
add
out
and
xchg
sbb
enter
jmp
lcall
mov
in
incl
cmc
daa
mov
jecxz
int3
xor
addb
pop
enter
xor
pushl
rolb
aam
call
sahf
loopne
xchg
mov
aas
mov
xlat
decl
mov
push
lds
and
cmp
stos
inc
pop
clc
ja
sbb
sti
enter
and
push
dec
mov
pop
cltd
or
pop
cmp
jae
dec
mov
call
loopne
lds
inc
stos
inc
add
xor
dec
and
lret
jmp
sub
and
shlb
lods
shrb
insl
rol
jg
iret
sub
clc
in
push
cld
fwait
push
fadds
cmp
outsb
and
inc
jg
xor
dec
mov
gs
aad
pushf
dec
stos
mov
loope
mov
mov
adc
jecxz
pop
pop
loopw
in
jno
dec
lcall
jmp
jo
jb
push
into
or
or
push
xor
cmp
mov
add
call
loopne
mov
popa
sub
sub
cltd
jae
pop
mov
not
stos
in
mov
push
xor
mov
test
movhps
mov
push
push
jne
inc
jle
or
lcall
popa
xchg
xchg
outsb
sti
addb
iret
addr16
pusha
mov
rclb
xor
ljmp
rcrb
sub
or
into
pop
les
fcoml
xchg
xchg
sub
lods
lcall
pop
mov
add
clc
or
in
or
ret
mov
xor
cmp
jmp
imul
es
ss
inc
mov
scas
mov
sub
ja
das
iret
cmp
push
pop
xchg
shr
cmp
mov
rol
call
mov
push
inc
imul
pop
cltd
cmpxchg
push
jmp
out
mov
add
ljmp
pusha
lods
cmp
loope
int
imul
ljmp
and
rcl
mov
andl
negb
mov
mov
bound
dec
inc
cmp
cs
cwtl
dec
icebp
jo
push
sbb
mov
xchg
enter
fstp
inc
and
mov
mov
ljmp
in
popa
fwait
push
jae
out
out
jmp
push
je
pop
inc
pop
cmp
xchg
loop
pop
push
sahf
mov
ljmp
cli
jae
push
push
jl
cmp
jl
in
mov
cli
sub
stos
insl
fsubs
shrb
mov
repnz
mov
out
cs
in
ljmp
adc
das
inc
and
mov
das
mov
cmc
pop
push
or
stos
in
cmp
testl
cmp
mov
scas
xor
js
faddl
mov
insl
sar
jle
scas
mov
jnp
mov
pusha
scas
or
clc
divb
rolb
lds
test
cltd
or
cwtl
xchg
stc
jne
rorl
int3
adc
mov
leave
int3
cmpsb
jl
mov
addr16
push
mov
mov
testb
xchg
adc
jg,pn
jmp
sbb
mov
lahf
push
call
movsl
test
aam
push
clc
decl
jno
jmp
fsubs
jp
std
or
inc
mov
outsl
pushl
out
cmp
lock
pushf
fcoml
sub
mov
adc
inc
imul
pop
test
lahf
mov
mov
push
rcpps
out
loopne
stc
adc
mov
pushl
cld
pop
jae
insl
push
mov
mov
mov
add
mov
pop
es
adc
popa
mov
add
mov
jp
daa
xlat
jo
repnz
addr16
int3
ja
pushl
adc
mov
xchg
sbb
hlt
sbb
pushf
dec
mov
cmp
inc
pop
jecxz
out
mov
pusha
and
and
pushl
adc
cmc
pop
pusha
movsl
jge
pop
xchg
imul
and
aas
in
fsubrs
xor
inc
sbb
jb
mov
inc
xchg
pop
lods
add
adc
cmp
ja
cld
ljmp
pop
mov
fs
cli
dec
adc
mov
je
or
clc
cs
add
cmp
xchg
add
incl
nop
adc
xor
nop
jbe
fildll
scas
sub
add
andl
lcall
jmp
mov
lret
dec
mov
jnp
fdivl
decl
xor
loopne
inc
mov
add
lods
arpl
andb
mov
pop
je
scas
mov
decl
xor
mov
xchg
addb
xchg
and
mov
cmc
push
rcrl
imul
push
push
decl
xchg
out
jae
flds
pop
divl
cmp
push
pop
gs
stos
mov
sub
jp
xchg
inc
pop
in
xor
outsl
and
dec
imul
insl
lcall
xchg
push
or
jecxz
xor
repz
jo
out
daa
push
push
ret
cwtl
ss
jb
out
insl
mov
ret
mov
cmp
jo
dec
push
adc
test
std
pop
hlt
hlt
mov
mov
les
lock
ret
cli
into
sbb
call
and
orb
jbe
aad
cmp
xor
or
lcall
mov
seto
jno
loop
or
out
notl
insb
xor
lock
pushl
mov
std
cmpsl
in
mov
cmpsb
jg
push
loopne
xchg
adc
jg
sti
mov
sbb
aad
xchg
out
ror
lds
movsl
add
mov
loopne
jmp
test
dec
jae
pushf
jne
sarl
push
lds
loope
call
ja
mov
cmp
add
cs
lods
je
xor
ljmp
push
xchg
mov
scas
movsb
daa
add
adc
cmp
mov
mov
push
xor
sub
and
enter
and
shlb
fwait
dec
out
lea
mov
in
inc
lret
xchg
int
push
fstps
xchg
gs
decl
dec
subb
in
add
cwtl
jb
enter
mov
push
pop
call
sahf
xchg
dec
rorl
push
pop
popa
mov
inc
xorl
sti
daa
and
pushl
mov
arpl
sub
cmp
mov
add
sub
fs
loopne
cwtl
fwait
insb
jmp
jp
dec
ficoms
iret
movsl
fisttps
incl
fbld
shlb
imul
jmp
dec
add
outsb
mov
cmp
add
shlb
mov
popa
dec
or
ss
jge
push
cmpsl
xchg
jo
mov
scas
ret
mov
je
xor
jg
cmp
xor
jo
add
lcall
outsl
test
jo
dec
mov
lods
xchg
cld
int
in
push
cmpsl
jl
mov
movsl
jmp
pop
loop
mov
mov
push
in
fdivrl
sbb
push
jmp
int
xchg
push
pushl
lock
out
xor
lcall
inc
imul
rorl
mov
jne
int
in
xchg
int
xorl
aam
flds
fwait
sti
pusha
mov
std
adc
xchg
mov
arpl
adcl
ret
incl
aaa
mov
push
pop
cld
mov
enter
sbb
incl
push
stc
mov
jmp
cld
pushf
sub
shl
inc
ljmp
mov
in
adc
mov
inc
dec
clc
mov
test
shl
and
fistpll
inc
mov
scas
fsubrs
cmp
xor
dec
ret
push
push
mov
fwait
cmc
and
or
movsl
sbb
push
out
imul
pop
cmp
call
mov
and
cmp
xchg
mov
mov
or
dec
mov
incl
inc
and
arpl
enter
pusha
cwtl
addr16
test
cli
push
cmp
loope
iret
push
insl
pop
jbe
stc
lret
sub
fcomip
pop
popf
jns
movsb
imull
inc
push
ret
mov
add
mov
fstps
std
std
mov
or
cld
jb
inc
or
mov
in
pop
repz
dec
cmp
fistpll
push
scas
push
insl
push
dec
sbb
mov
mov
jmp
push
or
and
mov
stc
xchg
mov
xchg
call
or
push
arpl
jne
xlat
adc
mov
out
sahf
dec
call
cs
inc
xor
mov
add
xor
call
in
or
stc
out
pop
mov
mov
pop
xchg
scas
fmul
ljmp
push
push
adc
enter
push
idivl
pop
add
jmp
sub
aad
inc
push
mov
jnp
or
add
outsb
inc
pop
mov
pop
sub
pop
cli
mov
clc
decl
or
insl
mov
dec
xor
out
loope
lcall
out
pushl
jmp
pop
push
add
enter
stos
push
sbb
xlat
and
dec
out
or
xor
mov
loope
xor
cltd
push
add
xchg
pusha
subb
sbb
out
inc
test
pop
dec
bound
aam
inc
sar
lcall
inc
loope
aad
enter
push
pop
mov
and
lods
gs
dec
iret
sub
call
cwtl
and
aad
xchg
imul
xchg
in
fsts
mov
mov
test
pop
out
and
call
and
xchg
mov
cmp
jg
mov
xorl
lcall
sahf
test
cmp
inc
pop
jo
clc
das
cltd
cmp
push
jne
nop
mov
test
xchg
addr16
lods
pop
or
inc
fcmovbe
aam
imul
int
adc
lret
in
jno
outsl
or
aaa
in
and
imul
sbb
lcall
es
xchg
push
push
push
lcall
sbb
inc
mov
bound
adc
std
ljmp
inc
mov
add
icebp
jbe
sahf
movsb
in
add
mov
pop
loopne
cld
mov
mov
push
and
lock
stc
mov
jge
mov
push
and
incl
xor
stos
pop
adc
mov
fcomip
jmp
pushf
cmp
jne
sbb
xor
in
jo
rcrl
out
fldcw
in
bound
cld
ret
add
adc
fsubrs
lock
jg
pusha
rcrl
jg
push
scas
jle
stc
cmp
cmpsb
dec
adc
mov
lcall
jl
sbb
mov
jb
fmuls
mov
movsl
incl
mov
sub
fwait
mov
fs
ss
lock
lcall
dec
dec
scas
sub
andb
imul
jae
fdivrs
push
sti
cltd
int3
dec
pop
ljmp
sbb
scas
push
les
jge
addl
mov
lret
ljmp
insl
icebp
push
xchg
outsl
lahf
jns
arpl
pop
cmp
cmp
fistpll
pop
ret
decl
out
xor
xor
cltd
jmp
mov
jg
data16
jne
cmp
add
and
cmp
fdivrl
pushf
cwtl
imul
push
imul
ljmp
pusha
mov
psrlq
dec
pop
sbb
mov
mov
jmp
idivl
lcall
enter
popa
mov
xor
dec
aaa
std
into
cmp
inc
xchg
pop
fidivrs
add
lcall
imull
cmp
mov
mov
add
das
push
cmp
pushl
jecxz
rcl
negl
lret
mov
cs
insb
dec
dec
shrl
mov
repz
jno
inc
test
jl
in
push
int3
scas
test
movsb
xchg
cs
fcomip
pushl
sarb
hlt
jge
cmp
xchg
mov
lcall
ja
mov
aaa
jns
xchg
shlb
pusha
push
ds
fnstcw
notb
cld
pushl
sub
mov
mov
test
nop
cmp
fwait
aam
jnp
sbbb
mov
mov
fcompp
stc
dec
push
add
pop
rorl
les
mov
dec
pop
jnp
sub
or
imul
xor
sub
sbbl
add
ss
sub
ret
xor
xchg
sub
ljmp
adc
mov
pop
pushf
test
or
xchg
inc
insb
xchg
loop
or
dec
rclb
mov
jmp
sbb
in
xor
fs
adc
inc
imul
jmp
addr16
icebp
das
cli
stos
mov
sub
sub
movsb
jnp,pt
repnz
test
lcall
imul
int
sbb
ret
fsubs
or
mov
repz
jp
imul
mov
lret
test
imul
jp
aam
xchg
pusha
xchg
bound
lock
test
mov
push
dec
mov
jbe
adc
testb
pop
orb
xchg
jmp
lret
pop
xchg
dec
int
xchg
lea
in
xor
sar
jg
mov
pop
inc
sbb
mov
insl
dec
mov
andl
mov
out
aas
les
scas
insb
fmull
mov
les
aam
add
js
jno
pushf
mov
push
popa
jmp
loopne
cmp
dec
insl
xchg
push
pusha
das
jge
lret
in
lcall
fistl
push
push
std
adc
jbe
fidivrs
or
incl
xor
insl
loop
mov
mov
mov
stc
rol
xchg
imul
lcall
lcall
ljmp
mov
jle
push
cmpsb
rclb
mov
xchg
cmp
or
test
fsubr
loopne
xchg
js
jbe
push
mov
cmp
incl
fs
ljmp
jmp
cmpsb
cli
fcmovb
push
adc
mov
sub
fsts
mov
js
ljmp
push
out
jecxz
adc
xor
pop
dec
fstp
fdivr
icebp
fs
cmp
clc
jp
movl
incl
es
cmc
mov
fwait
cmpsl
jl
mov
push
jb
fsubrs
mov
lret
call
leave
rcll
push
jecxz
test
sbb
into
add
in
sbb
xorb
dec
divl
inc
xchg
js
inc
pop
jns
fimull
leave
sbb
jnp
mov
roll
cmp
fcomip
pushl
shrl
mov
push
inc
mov
inc
pop
xlat
and
stos
int3
out
subb
scas
fs
in
aad
stos
psrad
cmc
mov
decl
popa
xchg
cmpsl
std
fcmovnu
mov
fisubl
out
sbb
notb
lock
decl
pop
lret
test
pop
int3
shll
jl
pop
jecxz
ret
bound
fldl2t
mov
lcall
lock
fidivrs
push
or
je
pop
dec
outsb
mov
sub
adc
cmp
add
pusha
dec
leave
lret
dec
jg
mov
pop
and
inc
jbe
cmp
cmp
in
adcl
mov
insl
imul
mov
hlt
cmp
insb
jg
lahf
adc
lret
dec
cs
into
sarb
stc
clc
push
and
cmpsl
xchg
jns
lds
iret
movsb
dec
xor
movsb
clc
jge
repz
ret
xchg
mov
xchg
jnp
push
nop
push
push
fidivs
dec
sbb
mov
mov
mov
call
cmc
leave
test
int3
jne
cwtl
mov
dec
inc
insb
icebp
addr16
lret
pop
rol
sahf
jnp
ud0
cld
or
lcall
outsb
inc
jp
and
clc
lods
pop
in
hlt
fbstp
xor
cs
mov
or
decl
mov
fwait
in
ret
jns
xor
add
inc
or
or
and
cld
in
out
lock
cltd
lea
sbb
xchg
dec
and
xor
fnstenv
pusha
inc
lcall
ror
jmp
xor
lret
push
int3
das
movb
std
xchg
outsb
pop
repnz
je
call
ljmp
jne
sbb
ss
push
test
pop
nop
pop
push
pop
sub
push
jno
cld
or
jg
bound
test
jb
dec
dec
cld
xor
cmp
outsl
ret
pusha
or
pushf
add
orb
and
mov
ja
dec
mov
outsb
xchg
sub
lock
ret
shlb
ja
insl
jo
test
call
out
adc
mov
jne
daa
lds
test
mov
or
aad
cmp
cmp
fidivrs
mov
cs
inc
push
stc
mov
rolb
pop
push
inc
push
in
lcall
insl
push
in
sbb
cltd
push
xchg
and
lods
test
aam
shll
push
push
push
incl
cmp
add
call
iret
adc
insb
mov
in
repz
pop
ds
int
push
sar
dec
call
mov
iret
shrb
or
mov
stos
and
push
push
dec
mov
je
pop
lcall
push
shrb
ret
lock
ljmp
ds
jnp
add
push
out
cmp
ds
lcall
sbb
repnz
sub
mov
shrl
and
decl
mov
adc
cmp
aaa
pushf
fs
xchg
mov
mov
decl
xor
lods
xchg
jecxz
xchg
or
jl
test
movsl
and
sarb
jmp
pop
xchg
sub
cltd
loopne
ljmp
dec
push
subl
lcall
push
sub
adc
xor
mov
push
mov
mov
sar
push
mov
mov
xchg
xor
stc
pop
push
pop
invd
ja
ret
rorb
sti
jnp
dec
fstps
je
repz
dec
and
fcoms
insl
fidivs
int
push
fcos
mov
jnp
scas
out
subb
outsl
mov
add
or
push
sbb
lcall
nop
add
push
dec
mov
popa
pop
cmc
ret
or
mov
jg
aaa
or
sbb
test
cmpsb
sbb
lcall
dec
sti
ret
jecxz
mov
outsl
fimull
call
ds
call
xchg
iret
or
dec
jnp
stc
shll
outsl
test
mov
notb
cmp
xorl
mov
xchg
cs
xlat
divb
and
in
adcl
jg
pop
push
pushf
mov
mov
jg
aad
fcoms
dec
jne
push
sub
jno
add
dec
push
jnp
fisttpl
adc
mov
testl
cld
out
jle
out
movsl
jp
ja
call
add
dec
lock
ficoms
sub
mov
push
and
cli
popa
clc
enter
jl
xor
adc
add
push
cmp
pop
addr16
dec
sub
sbb
push
cld
cmp
inc
fs
mov
cmp
push
push
push
mov
dec
lcall
sbb
loope
sbb
adc
daa
mov
ljmp
movl
stc
jecxz
push
pop
and
aad
std
xlat
les
and
arpl
decl
sarb
dec
fbld
xchg
sub
add
xchg
fwait
addr16
jl
or
cmc
incl
rorb
mov
movsl
sbb
aad
lcall
frstor
std
jge
out
in
sub
in
cltd
cmpsb
sbb
cmp
iret
and
ljmp
jle
cld
add
lret
pop
lahf
mov
inc
mov
sarb
dec
jecxz
adc
jecxz
mov
das
fnstcw
pop
es
test
stos
xorl
cmp
clc
fildl
pop
add
call
subl
jns
imul
push
repz
decl
mov
in
in
xchg
jp
ja
dec
cmp
xchg
test
loopne
xchg
lds
mov
in
push
fdivr
jmp
movsl
daa
cmp
adc
arpl
cmpb
jecxz
jne
cli
and
dec
fsubr
out
jecxz
jmp
push
mov
sub
loopne
mov
rolb
dec
mov
dec
movsb
les
daa
inc
push
push
lcall
jg
sarb
inc
out
sbb
pop
mov
loopne
in
movsl
shlb
mov
arpl
nop
pushl
jl
rcr
movsb
cli
pop
adc
pop
stos
jbe
adc
xor
mov
dec
xchg
fucom
cmpps
int
cmp
pop
js
push
fnsave
outsb
jo
pop
out
pop
loope
inc
fldenv
mov
xor
repz
dec
mov
int
xchg
mov
mov
xor
mov
mov
les
fiadds
mov
push
pop
dec
inc
int
sbb
movb
pop
bnd
sbb
pushf
inc
outsl
iret
fbstp
dec
sub
sahf
pop
icebp
sbb
push
es
mov
aam
push
xor
cmpsb
sub
xchg
push
push
rcll
sub
jns
inc
jbe
xor
lcall
xchg
fs
lock
mov
cltd
push
push
imul
cwtl
decl
inc
dec
pop
xor
jbe
sbb
repz
push
mov
jp
cwtl
clc
scas
mov
mov
dec
ljmp
ss
pop
rcr
pop
cmp
leave
fs
popf
hlt
mov
jmp
bound
mov
cmpl
movsl
dec
pushf
inc
incl
inc
test
cli
sbb
add
mov
rorl
pushl
add
popa
ja
pusha
or
add
aas
enter
add
mov
in
in
hlt
jns
lahf
clc
mov
xchg
fisttps
mov
push
cmp
je
scas
repz
inc
es
jb
je
xor
adc
mov
jnp
pop
fs
pushl
fwait
popf
or
sbb
xlat
mov
lds
add
decl
push
pop
mov
sub
xor
adc
sub
mov
and
lcall
movsb
push
jno
push
icebp
imul
jecxz
stc
mov
and
into
out
scas
jne
repz
jmp
clc
fidivrl
adc
out
or
mov
fidivl
hlt
jg
je
jo
lods
mov
in
jge
add
adc
jg
shlb
ljmp
iret
cmp
bound
sbb
sbb
leave
lahf
addb
mov
iret
cmp
stos
cwtl
and
ret
fmuls
or
neg
insl
cmpsb
mov
call
pop
jmp
dec
or
mov
fimuls
fldln2
shlb
dec
add
sub
cmpsb
cmc
stos
fcomip
sbb
jbe
mov
loope
push
mov
dec
jae,pt
adc
ljmp
iret
jl
xor
mov
popa
aam
sub
loope
test
test
pushl
mov
rclb
shr
xchg
ficompl
cmp
fwait
or
mov
repnz
call
adc
cmpsb
jl
rorl
popa
pop
leave
imul
cld
call
loop
or
or
jp
push
into
mov
xor
pushl
cmp
xchg
or
mov
dec
inc
and
lods
aaa
in
sarb
xlat
jg
fistpl
and
mov
sbb
ljmp
push
pushf
or
bound
xchg
mov
adc
pop
sbb
ficompl
fbstp
out
scas
dec
rorl
mov
repz
dec
or
pop
inc
dec
popa
sub
pusha
sbb
push
add
push
inc
add
out
mov
andb
nop
add
add
test
dec
and
push
js
push
jp
xchg
hlt
or
add
fucomp
xor
lret
addb
fidivrl
ret
jae
bound
out
xchg
adc
adc
mov
es
jo
imul
mov
jp
ds
dec
mov
roll
add
out
inc
add
sbb
in
ljmp
push
push
in
rcl
lds
adc
mov
push
xchg
sbb
inc
or
shr
in
fstpl
dec
pop
push
outsl
outsl
insb
push
push
xchg
jo
mov
outsl
je
dec
and
gs
push
int
push
add
sbb
mov
and
jae
and
add
fisubrl
insl
mov
sbb
jne
js
stos
pop
inc
fbld
testb
adc
mov
push
imul
xchg
roll
loope
sub
es
mov
ret
push
dec
outsl
insl
insl
ret
mov
pop
adc
je
inc
dec
jb
inc
push
int3
add
dec
outsb
inc
and
sbb
adcb
xchg
rorb
imul
insl
loopne
dec
inc
out
fidivs
adc
jle
jae
loope
xchg
arpl
inc
jo
cmpsb
adcl
pusha
pop
scas
pushf
bound
jo
loop
fcomp
aaa
push
pop
ds
insb
jne
test
popf
xchg
mov
jne
data16
add
mov
fsubs
mov
jnp
ret
mov
sbb
jo
inc
push
fildl
fs
inc
push
rorl
test
mov
popa
arpl
inc
jnp
xchg
pop
push
sbb
xor
das
push
jns
addb
fdivrs
inc
jae
adc
push
push
push
movb
ret
jne
arpl
dec
jo
dec
xor
xor
sbb
in
jae
mov
pop
int
xor
push
pop
jno
inc
ja
or
imul
dec
push
pop
dec
push
hlt
push
mov
jo
push
bound
jbe
inc
dec
sbb
mov
je
insb
jae
arpl
mov
jg
rcr
jbe
out
and
test
lret
pop
pop
repnz
sbb
inc
xchg
or
pusha
fs
sub
push
mov
loopne
clc
outsl
popw
push
add
lret
jb
cli
adc
push
push
inc
xchg
push
jge
ret
push
push
jp
popa
loope
push
sbb
cmp
inc
dec
jae
enter
cmp
ljmp
jmp
push
mov
adc
or
pop
rclb
pop
testb
adcl
sbb
xchg
outsl
xchg
rcl
imulb
ja
mov
inc
xchg
jg
and
xchg
pop
push
pop
dec
mov
mov
or
and
inc
popa
sbb
jo
jp
xchg
jg
push
test
sbb
or
and
fcomps
rcl
or
mov
lcall
daa
fsubrs
dec
push
inc
sahf
sti
jmp
gs
and
jne
lods
sub
xorb
mov
jns
inc
je
pop
xlat
fildl
inc
inc
iret
jbe
push
and
cmpl
or
movsl
mov
fcmovu
and
insl
adc
push
xchg
or
mul
stc
mov
add
add
push
jns
and
sub
pop
loope
sbb
stos
loope
xor
test
loope
js
sbb
fisubl
or
fisubl
or
push
adc
adc
push
adc
adc
lea
xchg
gs
in
loope
subb
inc
in
inc
xchg
mov
out
pop
inc
aad
adc
sbb
jl
movl
movsl
mov
jbe
and
orb
mov
jecxz
pop
or
and
insb
mov
cmp
filds
rol
sub
jno
push
in
inc
inc
test
sub
jae
or
xchg
sub
xchg
inc
inc
jbe
test
push
test
dec
push
add
mov
mov
jmp
sahf
fisubl
jns
or
lock
xchg
dec
rcl
mov
subl
mov
push
or
rolb
sub
arpl
sar
adc
add
fs
mov
mov
js
cmp
imul
out
and
add
fadd
inc
sbb
jbe
pop
fistl
aaa
dec
adc
jmp
jns
xchg
popa
jae
and
loope
or
popf
push
insb
sbb
mov
test
sub
or
jp
popa
pop
pop
lock
mov
sbb
nop
popa
fbld
jmp
fs
push
mov
fisttpl
pop
and
push
outsl
and
mov
repnz
jb
and
push
lret
jg
in
inc
push
imul
into
jo
inc
inc
lds
arpl
loope
std
inc
imul
xor
sahf
mov
push
fs
push
mov
js
insb
out
mov
inc
insb
jle
punpckldq
in
push
arpl
stos
mov
jp
je
jae
inc
or
lahf
jno
mov
lea
scas
scas
les
adc
leave
jmp
scas
sbb
add
enter
je
adc
and
sbb
and
scas
push
and
je
ret
shll
pop
jmp
and
xor
push
pop
xor
inc
xor
add
jo
adc
inc
push
push
adc
loopne
pop
and
mov
pop
jnp
or
dec
outsb
add
mov
xchg
sub
cmpsl
loope
mov
pushl
add
add
mov
mov
cmpsb
sub
sub
dec
shll
movhps
push
xchg
xor
imul
dec
inc
rcll
les
daa
pop
mov
mov
outsl
inc
fs
dec
outsl
sub
daa
inc
jo
sbb
mov
adc
and
pop
push
push
jb
inc
jae
movsb
adc
and
cmp
movb
and
adc
sbb
jne
das
imul
pop
cwtl
in
js
mov
loopne
addb
jmp
sahf
adc
and
pushf
clc
dec
sbb
adc
insl
pop
lods
inc
mov
mov
scas
pop
lock
dec
pop
mov
mov
data16
pop
call
aaa
pop
stos
inc
fsubrl
jp
jo
insb
inc
fcomp
lret
nop
scas
arpl
sahf
add
mov
sub
imul
lcall
inc
mov
or
pop
lcall
enter
push
outsl
ljmp
dec
jno
jmp
xor
jb
xchg
xchg
cmp
and
loope
xor
jns
insb
mov
fdivrs
add
push
pop
xchg
mov
xor
dec
out
cmp
hlt
and
inc
xchg
cmpsb
jbe
jno
insb
adc
sub
mov
ja
push
imul
sbb
popa
shll
pop
ret
call
mov
dec
insl
pop
push
lds
outsb
popa
dec
mov
std
imul
mov
xor
fadds
lcall
enter
sub
sbb
or
push
push
shrl
push
lds
aas
ss
mov
jbe
xor
push
test
lods
xchg
icebp
pop
popf
add
outsb
mov
push
cmp
fistl
mov
lods
imul
mov
sbb
test
lds
pop
xor
ret
add
add
push
mov
or
add
push
icebp
jo
scas
inc
sbb
fstl
call
cmp
hlt
push
cmp
dec
test
shrl
pop
mov
aas
add
mov
test
test
jg
test
xor
sbb
mov
sti
push
xor
push
push
inc
out
adc
xchg
mov
sub
xlat
incl
jb
inc
stc
pop
das
mov
sbb
inc
mov
sub
inc
push
jne
sub
cmp
ffreep
mov
neg
jo
add
pop
icebp
jae
negb
fiaddl
ds
es
imul
adcl
data16
ss
and
add
orl
bound
mov
or
mov
xlat
xchg
push
inc
or
insl
fcmovne
pop
xor
addr16
std
scas
pop
push
popf
pushf
pop
cmp
push
add
leave
push
add
inc
aaa
mov
adc
scas
arpl
xor
inc
pop
dec
addb
cs
addl
and
loopne
jne
jb,pn
popa
adc
push
push
xchg
fsubrs
dec
out
push
lock
add
push
dec
adc
insl
rcrb
out
insl
insl
and
mov
add
ss
adc
xor
das
pusha
cmp
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
