divl
in
mov
mov
loopne
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
test
mov
sti
outsb
ds
inc
add
add
call
mov
jle
add
mov
mov
lret
rcr
jl
push
mov
mov
xchg
jbe
sbb
pop
inc
push
push
and
jbe
in
in
jb
lock
cs
loop
jbe
loopne
adc
jns
pop
movsb
xor
dec
sbb
mov
push
mov
into
push
cwtl
in
enter
push
lock
sar
and
add
imul
idivb
mov
push
push
push
lods
cmovs
loopne
outsl
add
fdiv
fistpl
fisttpl
ret
add
jae
or
test
je
pop
add
pop
mov
push
nop
addl
loopne
pop
mov
rolb
sbb
cmp
push
out
sbb
add
push
dec
in
pusha
sbb
cmpb
push
xchg
dec
add
push
push
movsb
jmp
call
lock
pop
sub
sahf
or
rcrl
lret
adc
lock
and
push
push
mov
in
inc
push
or
aas
inc
mov
pop
sbb
mov
xor
cmp
jge
mov
jmp
mov
cmp
pop
and
push
inc
inc
dec
jb
sahf
adc
mov
jmp
push
jmp
cmp
adc
test
push
pop
mov
aaa
cltd
loopne
icebp
jb
mov
xchg
movsb
jnp
xor
and
inc
cmp
jae
mov
cmp
pop
stc
push
mov
out
push
xor
add
and
xor
jae
sub
or
adc
insl
xor
test
adc
add
pslld
pop
push
jle
push
push
cmp
enter
or
add
mov
mov
push
rcrl
dec
lock
add
call
cli
and
xor
dec
es
bound
sbb
pop
xchg
gs
idivl
push
push
inc
push
or
lahf
xor
sub
ret
or
inc
sbb
jo
push
imul
in
pop
rolb
push
stc
stc
fisubrl
push
jge
sarb
add
leave
fistl
loopne
pop
subl
and
or
nop
xor
push
or
and
and
cmp
mov
push
fwait
je
movsl
sbb
cmc
bound
add
xchg
punpckhdq
push
cwtl
mov
push
xlat
pop
mov
daa
mov
int3
push
xchg
mov
loope
aas
mov
stos
inc
jmp
push
cmp
icebp
mov
jnp
aad
xchg
add
sbb
xadd
sub
loop
push
daa
sub
mov
pop
test
jne
data16
nop
pop
xchg
sub
sbb
dec
mov
shrb
test
movsl
xor
cmp
sub
sbb
xchg
cmp
movsl
jns
or
pmulhw
cmpsb
mov
push
jmp
inc
and
adc
add
and
sub
jl
or
add
add
repnz
and
sbb
punpckhbw
push
enter
pop
mov
push
int
sbb
dec
fnsave
orb
or
fdiv
in
inc
jg
jmp
pusha
sbb
mov
pop
jmp
repz
mov
mov
test
cs
pop
pushf
xchg
mov
mov
out
mov
test
lahf
lds
push
popa
adc
sub
push
popf
jo
loopne
test
push
push
lcall
in
call
jge
es
ret
fiaddl
jl
or
fnsave
fwait
or
notl
mov
jl
xor
std
pop
push
xchg
or
idivw
mov
sub
fdivrp
imul
mov
adc
test
or
mov
sbb
lret
jecxz
mov
mov
push
lcall
dec
mov
inc
or
fmull
sbb
je
popa
cmp
mov
lea
fildll
fdivs
je
nop
push
mov
sub
cmp
cli
mov
ja
insl
lea
jno
imul
bound
sbb
dec
inc
mov
jne
adc
out
mov
inc
or
jno
stos
mov
cmp
cmp
or
and
int3
push
jae
or
mov
jge
mov
xchg
and
push
ret
xor
and
popf
xchg
arpl
pop
xchg
xchg
push
cmc
push
stc
or
jl
and
mov
shr
mov
xchg
iret
aas
test
hlt
bound
xor
cli
mov
leave
ret
push
mov
sbb
test
push
mov
dec
insl
icebp
mov
push
adc
xlat
mov
mov
cmp
out
loopne
xor
adc
icebp
add
jp
sub
push
jecxz
std
data16
cmp
je
sub
dec
pushl
pop
in
inc
mov
push
adc
adc
fs
fidivrl
lahf
mov
lds
addr16
push
push
mov
cmp
imul
push
push
or
mov
sub
call
mov
test
jne
fs
inc
addl
cld
std
sti
or
ds
pop
push
cmpsl
sub
pop
push
pop
jmp
lret
adc
jl
fldt
pop
ret
add
add
jl
icebp
mov
push
push
sbb
pop
cmp
pop
bound
and
rorl
sbb
mov
lret
gs
add
aam
imul
add
push
ss
andl
push
mov
or
orb
push
mov
and
jmp
adc
adc
pop
ret
push
xchg
add
or
sbb
in
fidivs
rcl
or
repnz
dec
mov
fnstenv
test
jne
pop
pop
inc
mov
arpl
sub
push
cs
rcrl
fidivl
add
mov
sub
pop
js
sub
mov
fistps
fmuls
iret
xchg
out
test
inc
subb
or
test
add
je
dec
jg
ret
add
lea
push
mov
cmpb
divl
add
jmp
mov
fcomps
in
push
push
add
clc
adc
ret
rcrl
icebp
cmp
neg
outsl
idivb
cmp
je
or
std
adc
es
mov
dec
mov
jmp
xor
xorb
mov
or
sbbl
inc
stc
jne
mov
jmp
xchg
in
push
pop
xor
shr
push
repnz
mov
repz
push
ja
lea
decb
pushl
or
mov
jge
data16
rclb
fsubl
pop
pop
bound
sub
jmp
jle
adc
jae
pop
inc
out
orb
adc
fsubl
test
cwtl
add
out
mov
mov
push
mov
rorb
mov
xchg
sbb
divb
push
push
dec
enter
pop
jmp
mov
je
push
jno
enter
push
push
push
mov
cmp
mov
fcmovnb
pop
inc
pop
pop
movsl
mov
loopne
adc
shlb
ret
or
popa
psubq
loope
mov
das
icebp
inc
ds
or
mov
add
add
addl
push
sub
push
xor
mov
cmp
or
call
pop
mov
clc
mov
mov
je
cmpl
decl
adc
push
jne
push
push
jge
into
mov
test
jmp
in
inc
sbb
pop
arpl
int
dec
dec
bound
leave
xor
bound
inc
sub
inc
or
cs
jge
inc
or
xchg
jo
clc
pusha
jl
push
inc
clc
jg
inc
fimuls
movb
cmp
inc
xor
mov
int3
cltd
popf
stc
cmp
add
cltd
adc
test
inc
inc
or
shlb
adc
ret
jge
add
outsl
or
lret
pop
movb
mov
mov
das
inc
pop
and
shll
adc
adc
xchg
cmpl
outsl
and
test
or
jns
cmc
sub
call
subl
xor
jle
fimull
cs
cmp
mov
lds
sub
push
push
mov
pop
hlt
ds
mov
popa
mov
push
shlb
adc
cld
xor
xchg
lods
inc
fwait
sub
inc
or
pop
cmp
pop
lret
loop
adc
dec
clc
sub
sub
mov
loope
ljmp
js
add
push
daa
daa
jmp
ljmp
jge
mov
jle
ret
fldt
add
and
push
out
cmp
inc
roll
push
sub
xchg
aad
inc
je
cmp
mov
add
xor
add
add
push
insl
pop
jo
push
adc
adc
ret
pop
push
jmp
ljmp
pusha
fsubrs
insb
mov
bound
or
scas
pop
push
or
lock
fs
cmp
cmpsl
xchg
or
stc
ficoml
jmp
mov
andl
jge
sarb
out
rcl
cmp
xlat
sahf
and
pop
xchg
arpl
xor
add
mov
cmp
data16
or
sub
push
mov
add
push
call
push
inc
fldt
jmp
imul
lea
and
adc
lea
push
sar
sbb
pop
pop
jmp
push
jge
sub
jnp
testb
mov
mov
call
out
pushl
movsl
fwait
lock
jnp
pop
ret
push
mov
roll
adc
inc
ret
push
push
push
push
dec
sbb
sbb
add
mov
aaa
and
negb
add
rcrb
inc
pop
iret
js
mov
js
mov
mov
out
pop
xchg
fildl
cmpsb
jns
testb
pop
add
mov
and
fsubl
sbb
xchg
lods
mov
cmp
add
pop
jg
add
jb
inc
and
fsubrs
or
sbb
das
psubb
or
ret
add
adc
iret
push
push
ss
lcall
adc
fcmovnbe
fidivl
sbb
and
fucomip
repnz
sbb
sbb
sbb
mov
jmp
cmp
pusha
push
sub
into
adc
pop
lock
xchg
mov
iret
out
in
mov
sbb
dec
or
push
sub
adc
xchg
add
pop
pop
enter
mov
clc
add
xchg
xchg
idivb
cmp
adc
and
out
push
cmp
popf
cmpl
push
cmp
fildl
pop
sbb
mov
adc
pop
test
jne
lock
mov
test
shrl
pusha
roll
push
jb
jmp
push
ret
mov
sti
dec
sbb
fstpt
pop
lret
push
jbe
call
jne
shlb
cmp
pop
out
je
pop
mov
sub
dec
je
add
je
sub
test
sbb
ss
sbb
xchg
jp
jo
iret
jmp
inc
stos
stc
or
fucomi
ret
int
jp
jecxz
pop
jne
outsb
cld
cmpsb
sbb
jmp
add
shlb
insb
xor
lea
sub
push
add
mov
scas
adc
call
sub
mov
xchg
adc
push
push
out
rorl
add
mov
sbb
add
rorb
ret
add
add
sub
pop
mov
or
sub
in
sahf
fwait
xor
adc
pop
sti
arpl
jmp
mov
adc
jmp
ja
lock
cmp
je
cmp
push
jmp
imul
leave
adc
adc
fistps
fldz
andl
or
cmp
inc
jae
sub
sbb
and
push
cmp
and
adc
insl
js
loop
mov
mov
and
repz
mov
push
sub
nop
fwait
repz
sub
ds
mov
mov
lret
clc
add
imul
push
cmp
push
push
pusha
aaa
outsl
dec
adc
outsl
cmp
or
clc
cwtl
cmpl
xchg
xchg
lret
cmp
adc
scas
add
mov
test
dec
push
dec
mov
cli
cs
pop
push
lea
push
add
xor
xchg
xlat
dec
cmp
and
cmp
xchg
xchg
inc
les
scas
pop
lahf
mov
pop
push
jecxz
jge
mov
dec
adc
movl
push
fucomi
fbld
sbb
xchg
dec
xor
jae
fiaddl
and
mov
aam
loope
push
call
pushf
lock
jge
mov
and
ja
ja
mov
sub
jbe
dec
pop
jo
pushf
lret
push
addr16
test
mov
dec
and
sbb
ds
dec
jmp
incb
jle
add
cmp
pop
add
notb
adc
iret
arpl
jae
and
in
adc
pop
nop
out
jno
ret
adc
sbb
dec
je
adc
stos
jmp
jnp
dec
lock
dec
dec
rclb
not
and
xchg
pop
in
ds
fmuls
adc
xchg
shrb
jae
xchg
out
push
test
push
cmp
add
dec
in
jnp
push
push
out
loope
add
mov
jge
mov
push
push
loop
add
xchg
push
mov
dec
sub
lods
and
sahf
js
or
add
outsb
mov
pop
pop
daa
lea
insl
test
push
je
mov
jo
mov
mov
in
and
loopne
pop
faddl
sbb
sbb
lds
push
push
cli
hlt
dec
add
adc
outsb
xor
sbb
sub
in
setge
push
xor
mov
pushl
in
mov
in
mov
adc
dec
adc
mov
dec
fucomip
add
lea
or
negl
pop
cld
je
std
mov
dec
call
cltd
sub
sar
add
bound
daa
dec
shll
in
dec
in
cmp
push
cmpsb
fnstenv
add
mov
inc
adc
dec
jns
rcrb
mov
push
add
xor
xlat
inc
lods
test
jo
mov
mov
mov
push
cmpsl
adc
mov
push
and
inc
sub
ds
and
push
loopne
push
dec
fdivrl
adc
mov
pushl
test
sbb
and
and
sbb
add
add
in
sti
pop
andl
pushw
dec
shll
xor
dec
or
outsb
rcll
push
insb
mov
adc
inc
mov
jb
lea
decl
neg
sbb
and
test
aas
in
shlb
or
adc
jl
dec
ds
ljmp
add
test
inc
add
pop
add
cmpsb
push
rorb
mov
jge
je
push
mov
sub
outsl
inc
lock
pushl
and
repnz
jo
or
call
and
mov
daa
sbb
xchg
aaa
cmp
cmpl
je
cmpl
lds
adc
dec
je
adc
cmc
in
int
sbb
cwtl
pop
push
add
fsubrp
rorl
mov
add
xchg
andl
mov
ss
cmp
out
mov
fcompl
cmp
pop
sub
or
mov
mov
push
push
sbb
jbe
adc
ret
and
movb
pop
cmp
jne
mull
ljmp
clc
dec
jne
sbb
scas
fldt
pushf
inc
loope
jo
jle
mov
jg
pushf
cwtl
sbb
fsub
lea
mov
pop
fs
je
incl
test
test
inc
pop
loopne
popf
pop
not
mov
and
popf
push
fnstcw
pop
jae
dec
xor
pusha
mov
test
cmp
xchg
jle
or
pop
lea
inc
dec
push
es
cmp
pop
jbe
adc
xlat
cmpxchg
cmp
mov
mov
push
cmp
push
sub
fisubl
insb
inc
jbe
push
sub
or
nop
or
cmp
sub
push
enter
adc
sahf
cmp
jl
pop
insb
sbb
and
inc
test
es
pop
test
ret
xor
cs
sub
adcl
cmpsb
dec
lock
pop
stos
xor
sbb
sub
fwait
cli
xlat
call
xor
addb
or
xor
xor
sarl
mov
push
cmpb
icebp
iret
sbb
jb
test
icebp
mov
dec
xor
push
xor
loope
lcallw
inc
pusha
fmull
mov
ljmp
push
scas
add
add
dec
es
push
add
add
ret
rcrl
xor
repnz
lock
sbb
or
movsl
pusha
rclb
loop
test
pop
or
mov
rcrl
push
dec
ds
sub
lahf
rorl
push
rcll
push
pushf
and
lods
jo
push
mov
sarl
or
aaa
dec
pop
dec
push
add
push
addl
popa
mov
dec
sub
mov
push
cmp
xlat
stos
repnz
ret
fcoms
pop
rorl
push
jp
and
inc
or
jge
add
cmpl
adc
adc
xor
sub
inc
mov
sbb
or
push
stc
addb
dec
sbb
pop
xchg
ficomps
cld
cmc
jns
sub
jle
add
cmp
cwtl
pop
shrl
push
xchg
xchg
push
stc
push
mov
sub
sub
push
push
cmp
cmp
fisttpll
xor
pop
cmp
xchg
sub
push
roll
xchg
mov
pop
xchg
scas
add
dec
mov
or
mov
push
loopne
push
or
push
in
adc
jl
xor
push
shlb
outsl
and
sbb
cmp
fs
xor
jo
sub
or
adc
jecxz
add
fidivl
cmp
and
aam
jno
pop
test
cltd
pop
mov
cwtl
adc
cmp
adc
push
imul
aas
mov
cltd
mov
cld
aaa
and
add
sar
push
popa
mov
je
rcll
daa
jl
dec
inc
mov
cmpsb
lock
jg
mov
inc
jge
mov
fcomip
sti
dec
subb
push
pop
push
adc
int
out
xor
idiv
jle
mov
fwait
aaa
jp
mov
incl
inc
adc
jne
loopne
jbe
cmpb
test
das
jo
aad
insb
cmpsl
int
test
jne
popa
in
ret
testb
pop
push
pop
pop
adc
mov
out
lahf
inc
mov
bound
fstpl
push
ljmp
mov
mov
je
test
pop
lea
std
cmp
mov
mov
xor
sub
mull
pusha
jl
aaa
mov
jg
push
mov
jl
movl
insl
mov
sti
adc
test
or
jbe
lahf
xor
lret
repz
xchg
insl
or
loop
jle
fbld
pop
xchg
imul
cmp
or
jmp
clc
mov
jg
out
insb
mov
pop
hlt
fildl
fists
cmpsl
pusha
or
add
sub
sub
pop
and
loopne
rorb
dec
sub
mov
rolb
pop
add
pop
add
out
out
adc
or
xchg
pop
jl
jmp
cmp
push
rolb
mov
fbstp
and
clc
fidivl
jmp
outsb
xchg
movsl
push
inc
mov
mov
sahf
testl
push
mov
iret
sub
in
add
jl
dec
jmp
les
push
sbb
lea
cmpsl
xor
push
or
lock
stos
cmp
cld
push
adc
and
loopne
pop
mov
adc
test
push
lahf
int
dec
ja
sbb
lret
je
or
in
dec
push
inc
pop
and
xor
mov
sbb
cld
js
cmpsl
push
jle
add
sub
adc
js
adc
xchg
mov
mov
and
fdivrs
int
and
push
std
pushf
andb
xor
pop
mov
or
mov
pusha
sbb
jne
mov
xchg
pop
jne
rcll
adc
mov
pushf
loopne
std
lea
push
leave
xchg
sub
xchg
jo
fldl
push
cmp
mov
mov
icebp
lea
push
mov
push
ret
cmp
sub
adc
jns
pop
cmp
mov
mov
sub
dec
popa
imul
mov
push
xor
out
xor
pop
jnp
roll
mov
xor
adc
push
outsl
inc
dec
roll
outsl
test
add
mov
in
adc
cmp
add
sbb
cld
jl
adc
mov
ret
fs
mov
jae,pt
push
pop
add
mov
cmovg
jecxz
mov
mov
push
movsb
sub
adc
or
xor
shll
mov
mov
xchg
out
fsubs
pop
xchg
and
or
addl
dec
and
mov
xor
xor
mov
ret
mov
push
pop
mov
pop
cmp
or
inc
and
mov
lock
cmp
setb
test
jne
mov
sarb
sub
sar
mov
xor
adc
pop
add
filds
lock
adc
mov
je
cmp
stos
pop
jmp
aam
leave
adc
dec
nop
lock
popa
mov
mov
mov
test
push
shll
ret
sbb
sbb
in
iret
cmp
add
cmp
and
xlat
das
push
out
dec
js
hlt
mov
add
jne
xchg
jecxz
sub
or
test
xor
push
shlb
pusha
xchg
mov
mov
fwait
lock
pop
dec
xchg
and
cs
jp
mov
imulb
push
add
icebp
jle
push
mov
jno
sti
push
notl
es
and
clc
or
and
test
jae
je
and
je
cmc
mov
cld
out
sub
or
sbbl
ss
sub
std
jmp
push
std
xor
or
movl
or
and
add
and
dec
mov
fmull
les
sbb
lods
subl
mov
mov
mov
xor
in
jne
or
dec
inc
rcll
test
cltd
push
in
jb
pop
orb
je
dec
jae
adc
lock
and
fcomp
gs
jg
inc
jne
push
push
or
xchg
add
mov
jmp
jns
mov
bound
inc
or
push
lret
jo
or
jnp
and
mov
js
aam
frstor
push
pusha
adc
push
and
lahf
test
mov
or
xor
jge
sub
and
add
aaa
insb
lock
adc
in
inc
or
pop
pop
add
jl
test
fsubrl
xchg
int3
outsb
and
inc
mov
cmpsl
xchg
mov
xchg
xor
mov
inc
cmp
mov
loop
inc
pop
jmp
push
mov
int
lret
xor
mov
mov
call
xor
mov
enter
ds
pop
dec
inc
mov
sbb
lea
shl
arpl
push
push
fcom
shll
sbb
or
lock
shll
and
mov
xchg
repz
add
fistl
xor
outsl
adc
add
or
xchg
clc
outsb
repz
adc
mov
loopne
jns
jno
cmp
pop
pop
insl
sarb
dec
push
nop
out
mov
dec
push
ss
and
aad
or
dec
push
jle
add
pop
pop
add
sub
mov
push
ljmp
pop
dec
push
call
xchg
iret
or
orl
and
scas
dec
pushf
shr
enter
stc
shll
cmpsb
cs
popf
inc
push
pop
jne
pusha
fists
mov
call
sbb
addb
xchg
xchg
data16
and
add
add
mov
push
adc
lea
push
mov
call
jo
outsb
sbbb
in
ljmp
fcomps
leave
jecxz
push
fidivrs
call
adcl
xchg
push
add
or
push
and
shl
daa
add
add
ss
cli
test
fdivl
mov
loopne
or
inc
adc
mov
mov
push
jl
bound
shlb
fsubrp
adc
or
adc
push
in
mov
or
dec
and
mov
cmp
lock
test
sbb
arpl
fidivrl
or
cmc
adc
scas
adc
or
mov
fdivrl
nop
fs
bound
adc
imul
pop
or
cmp
xchg
imul
adc
je
in
imul
push
push
or
cmp
add
out
sub
aam
add
add
pop
and
andl
jg
or
adc
sbb
in
push
neg
rorl
bnd
xor
inc
and
popf
outsl
mov
cmp
jo
jmp
or
ret
xchg
mov
push
loopne
cmpsl
jmp
push
lods
lahf
shl
adc
add
jge
cmpl
ficoml
sub
sub
cld
or
sub
or
mov
mov
sbb
mov
pop
cmp
sub
mov
add
loope
jo
je
pop
aaa
sahf
adc
aad
out
add
pop
inc
cmp
xchg
call
negl
data16
push
jo
or
aas
fsubr
or
pop
stos
sbb
jno
push
inc
mov
js
pop
jmp
push
push
and
in
sub
loopne
and
xor
push
lcall
loope
add
xchg
ljmp
movsb
xor
roll
xor
repnz
in
aam
adc
pushf
mov
push
push
imulb
or
xor
add
sbb
push
sbb
clc
push
lcall
fbstp
icebp
mov
sbb
jle
je
or
or
add
jnp
push
iret
scas
rcrb
lcall
xchg
pop
jnp
je
les
sub
dec
sbbb
lea
push
rcrb
test
repnz
adc
sub
popf
dec
or
mov
test
or
out
cmp
push
cmp
div
stos
sub
movsb
es
and
pusha
push
popf
push
jb
adc
pop
and
mov
fucom
inc
lea
inc
call
mov
rcrl
sbb
and
pop
rorb
lds
sbb
pop
mov
and
sbb
push
jo
sub
in
and
fimuls
mov
add
sti
scas
rcrb
xlat
cmp
jnp
lcall
das
repnz
pop
leave
clc
push
jle
aas
sbb
es
adc
ret
pop
lcall
daa
verr
repz
out
or
leave
in
add
push
sub
nop
push
sub
shrb
sub
imul
sbb
lahf
pushf
cld
pop
dec
inc
or
jmp
xchg
mov
or
mov
in
shll
call
inc
add
js
jne
ds
out
icebp
add
push
push
or
push
push
sub
outsl
jno
dec
xor
or
jbe
push
arpl
push
jnp
into
fs
cld
clc
cld
rolb
cs
addl
es
mov
jmp
xor
mov
int
xor
pushf
sti
add
outsl
addr16
adc
or
movsb
orl
sub
push
or
mov
sub
push
mov
jbe
aas
xor
in
dec
mov
lock
cmp
push
outsl
adc
js
jo
out
mov
mov
xor
inc
push
xor
adc
sub
pop
xor
pushf
popa
punpckhwd
pop
jl
outsb
or
sahf
sbb
or
loope
mov
push
fnstsw
cmp
add
outsl
ja
dec
mov
and
idivb
jo
jle
aas
mov
sub
pop
mov
sahf
hlt
outsl
jp
cmp
je
ja
xor
clc
rorb
add
sub
out
sub
lret
sub
nop
adc
jo
iret
cli
cmp
jae
jnp
or
je
sbb
inc
int
push
fnsave
orl
and
rorl
dec
shll
in
dec
movsl
push
outsl
outsl
testb
enter
mulb
gs
sbbb
dec
in
mov
in
sub
pop
jae
test
push
pop
xor
jae
dec
or
or
rcrb
mov
xor
pop
mov
xor
push
push
popf
inc
testb
testb
lret
shr
xor
dec
subl
adc
push
jns
dec
lock
or
or
xor
enter
lock
lock
mov
xor
adc
clc
movsb
sub
out
jl
mov
push
ja
pop
out
js
mov
rorl
testl
shlb
or
sbb
sahf
lret
call
repnz
xor
ror
inc
nop
xor
daa
or
cmpsl
jb
inc
fists
flds
je
es
loopne
fiadds
inc
adc
js
cwtl
test
add
fwait
add
adc
and
push
rcll
outsb
mov
pop
xor
mov
sbb
int
xor
xchg
int3
add
adc
sbb
cmp
add
sub
adc
cmpl
scas
cli
and
hlt
adc
cmp
and
adc
push
mov
push
mov
decb
push
out
in
add
add
adcl
and
sbb
sahf
xchg
cmp
cmpsb
fcom
icebp
or
mov
aad
sysexit
test
push
mov
pop
pop
cmp
inc
rolb
sbb
inc
mov
fsubl
mov
jp
lock
sub
pop
push
push
sub
stos
rcrb
call
xorb
cwtl
and
pop
adc
push
mov
cmc
stc
leave
aam
sbb
xor
mov
and
push
fidivl
cmp
test
push
loopne
push
push
jne
pop
data16
push
inc
dec
push
jmp
divl
mov
cmpsb
lea
addl
enter
push
mov
xor
loopne
xor
sbb
adc
les
enter
icebp
xchg
lret
xor
jge
test
lea
pushf
fs
daa
fstl
lahf
lea
pop
add
jg
lcall
mov
lods
xor
dec
or
xlat
xchg
sub
sub
inc
jae
sbb
lds
ss
imul
xchg
mov
out
jge
jbe
jne
or
bound
pop
push
int3
push
or
mov
fimull
cmp
shlb
and
push
andb
xchg
cmpl
jne
loope
mov
out
xor
mov
mov
mov
mov
call
or
add
adc
sub
push
push
orb
push
pusha
pop
cmp
or
dec
test
mov
inc
add
aaa
loop
mov
push
js
mov
int3
out
loop
lcall
idivb
xchg
shll
dec
js
js
pop
xchg
dec
rolb
and
or
mov
mov
add
mov
xchg
ret
dec
lret
stos
mov
push
xchg
aam
ret
dec
fidivrs
xor
push
push
jecxz
rcll
cmp
jns
adc
js
test
je
faddl
lea
or
lock
inc
push
call
jle
mov
pop
sbb
ds
inc
lret
push
fs
add
pop
lret
test
jns
into
mov
test
pop
out
add
adc
sbb
aad
adc
xor
and
fiaddl
push
popf
js
add
push
movsb
mov
gs
dec
xchg
aad
lcall
xor
fs
and
push
cltd
dec
data16
scas
pop
pop
ljmp
and
pusha
dec
hlt
in
xor
mov
cmp
jl
add
jge
lcall
xor
addps
mov
stos
shl
push
cmp
push
test
sub
idivl
in
xchg
pop
jl
sub
test
push
sub
popf
add
sub
xchg
xchg
push
out
adc
jne
cltd
sub
pop
fildll
or
mov
mov
push
dec
cs
and
sub
adc
test
scas
inc
sub
cmp
inc
lea
incl
mov
mov
xor
in
and
mov
lods
jno
or
cmp
imul
pop
shll
push
jbe
sub
js
inc
jl
sub
repz
cmp
setne
je
loopne
pop
repz
sti
aas
push
push
jmp
insl
movsb
pop
fs
mov
cmp
jne
and
jmp
push
push
push
push
pop
shl
arpl
dec
xor
inc
jno
outsb
add
adc
push
lcall
cmpsb
in
push
or
inc
mull
mov
adc
xor
sub
adc
and
sub
cmp
and
mov
mov
repnz
mov
clc
aas
popf
outsb
add
sete
jne
push
push
test
sub
dec
add
push
gs
jo
and
add
loope
push
cmpb
xor
sahf
movsl
test
push
mov
loope
push
and
push
clc
add
aad
dec
mov
sub
popa
sub
call
xor
add
or
inc
and
push
testl
and
jge
cltd
push
sub
shll
push
sub
adc
dec
xchg
or
jne
imul
lcall
inc
add
push
cmp
mov
lret
sbb
insl
xchg
mov
scas
inc
push
add
mov
orl
sub
mov
ret
test
rorb
fnstcw
shlb
mov
sub
cwtl
push
lock
out
test
fs
bound
adc
out
push
pop
testb
pushf
mov
cmp
ljmp
xchg
inc
fnsave
or
add
pop
sbb
jmp
out
mov
mov
mov
mov
subb
inc
loopne
mov
mov
cs
mov
mov
jl
push
outsb
xor
add
mov
mov
push
adc
mov
push
lcall
ljmp
dec
sub
fisubrl
inc
xor
pop
cmp
or
and
xchg
dec
in
push
pop
shl
icebp
push
gs
jb
mov
ret
loope
adc
sub
cld
ljmp
in
sti
xchg
or
mov
movsl
or
in
mov
cwtl
mov
xchg
add
sbb
mov
push
pop
lods
ja
dec
push
shlb
data16
add
push
push
push
mov
loopne
je
repz
xor
xchg
test
mov
xor
loope
pop
pop
sub
xor
mov
push
jne
and
push
mov
adc
xchg
pop
stc
ret
pop
ljmp
out
lea
popa
lds
add
mov
pop
test
inc
out
test
daa
cmp
in
add
push
popf
xchg
mov
jae
cli
in
nop
jge
and
daa
or
pop
add
lret
mov
jmp
and
mov
lds
rolb
sbb
mov
pop
inc
sbb
nop
adc
add
or
cmp
into
lock
fistps
push
adc
shll
sbb
or
fbstp
lea
add
cmp
jae
push
sub
imul
and
popf
push
cmp
fmull
add
out
pop
sub
add
cmp
dec
clc
sbb
cmp
dec
hlt
jge
mov
jnp
jge
aam
lock
test
jle
fldl
jmp
cmp
push
ljmp
pusha
pop
incl
popa
pop
test
jecxz
and
push
test
dec
hlt
jg
loope
shl
outsb
or
cmc
or
jmp
dec
sub
scas
bound
mov
hlt
mov
fldl
and
adc
adc
jbe
leavew
mov
faddl
pop
movsl
cmp
xchg
or
enter
add
lock
or
mov
nop
mov
inc
into
sub
cmp
add
or
fdivs
es
xorb
les
mov
cmp
inc
jae
mov
cmp
sub
fwait
push
iret
add
fwait
pop
push
sti
xchg
clc
bound
and
adc
sbb
test
aaa
adc
push
test
add
cmpsb
cmp
mov
cwtl
jge
or
cli
cmp
push
mov
mov
or
pop
inc
js
roll
add
sub
cmp
jmp
fdivrl
pcmpgtd
adc
sahf
push
sti
lret
ret
dec
jne
mov
inc
bound
jp
and
ds
pop
push
jnp,pt
mov
push
mulb
mov
mov
push
pop
stos
xor
push
cwtl
jge
mov
add
push
mov
or
push
xchg
sbb
test
jnp
es
inc
xor
push
or
mov
add
movsb
jb
lea
jb
clc
sbbl
ud1
sub
loope
fimuls
mov
ljmp
cwtl
xor
cmp
pop
andl
push
ljmp
xor
pcmpeqw
pop
sub
mov
push
ret
add
scas
dec
xchg
add
cld
or
shrd
or
pop
jo
push
je
fadds
or
imul
push
incb
adc
andb
insl
aam
mov
pop
adc
inc
dec
arpl
xlat
lods
dec
leave
mov
xchg
push
stos
adc
fs
cltd
clc
pop
dec
js
adc
adc
test
pop
adc
je
inc
cmp
mov
push
pop
popa
cli
pop
jg
test
mov
movsb
loop
mov
test
add
push
jle
aaa
and
int3
push
inc
fcompl
sub
je
inc
jne
jmp
jbe
push
test
daa
in
push
xor
outsl
cmp
shrb
push
push
lcall
adc
jbe
sbb
inc
repz
mov
inc
adc
push
inc
loopne
mov
mov
loopne
or
repnz
dec
xlat
imul
pop
dec
cwtl
mov
push
out
clc
push
jo
nop
add
mov
jne
push
mov
cmp
jl
ret
pop
scas
adc
inc
add
push
sti
adc
loope
jae
std
jge
jbe
or
daa
jmp
rclb
sar
dec
pop
xchg
aam
dec
xchg
push
or
inc
ds
mov
adc
loop
fwait
add
pop
leave
repnz
mov
sbb
loop
xor
sub
sbb
fsts
push
hlt
push
push
pop
mov
pusha
and
outsb
cmpb
sbb
push
adc
ret
div
je
bt
adc
sub
mov
pop
call
mov
int
call
loopne
bound
or
rorb
and
mull
mov
pop
outsl
in
pushf
adc
jne
sbb
gs
or
sbb
subl
adc
loope
add
adc
adc
mov
es
xchg
nop
inc
aas
xor
sahf
sbb
xor
add
sbb
mov
shrb
lods
or
mov
mov
loope
sbb
out
popa
pusha
xchg
popa
pop
cmc
jmp
cld
pop
lock
mov
mov
icebp
adc
push
push
lsl
sbb
in
dec
or
sub
jne
mov
out
pushf
adc
ljmp
push
fidivrl
push
and
jmp
push
push
mov
mov
jmp
nop
vmwrite
pushf
ss
push
mov
add
pop
adc
and
push
push
sahf
and
les
lea
sbb
lea
je
fnsave
movb
mov
aad
mov
pop
imull
xlat
outsl
ds
jle
cmpsl
push
call
mov
mov
xor
push
ljmp
outsl
xor
and
jmp
mov
jns
add
in
pop
pop
jmp
xor
jle
mov
jno
push
rorl
pushf
cmp
popa
in
mov
daa
push
dec
ror
rcll
loopne
and
shlb
or
or
loopne
and
push
mov
popa
popf
pop
lods
or
lock
add
negl
test
mov
mov
popa
mov
mov
aas
cmc
aam
outsl
pop
leave
sbb
aas
insb
insl
push
cmp
xor
mov
mov
push
fdivr
and
in
rolb
pmulhuw
jne
ljmp
in
test
xchg
xorl
pop
int
sbb
fisttpll
dec
pop
sub
nop
mov
and
lods
or
push
push
bnd
sbb
sub
pop
xchg
pop
xorb
sbbb
rolb
ljmp
add
mov
jo
pop
leave
pop
pop
lea
icebp
add
xor
or
lods
pusha
nop
dec
or
mov
push
push
mov
cmpb
je
lock
in
addr16
addr16
push
push
xor
sbb
mov
adc
jns
insl
push
es
mov
in
sahf
int
outsb
fldenv
mov
add
inc
rcl
popa
daa
aam
dec
out
dec
xchg
jne
test
out
adc
enter
add
sub
cmp
inc
stos
cmp
push
xor
inc
jmp
mov
sub
jne
xor
push
push
push
sbb
je
pushw
push
lock
pop
inc
ficomps
push
inc
xchg
addl
xchg
fimuls
lea
test
mov
push
into
or
subb
lea
push
lock
rcrb
lret
cld
sub
mov
imul
jo
cmp
mov
mov
ret
jg
jae
in
dec
adc
lock
call
or
cmp
loop
pop
hlt
addl
adc
push
popa
test
icebp
add
iret
push
push
add
push
xlat
popf
jno
test
or
ja
jp
mov
add
add
call
push
mov
sub
addl
cmp
cmpb
mov
ss
pop
pop
aas
add
push
mov
cmp
sbb
push
xchg
push
mov
pop
sub
notb
or
push
test
rcll
pusha
lret
xlat
adc
push
call
sbb
inc
xchg
imul
rclb
add
mov
push
call
ret
mov
les
pop
push
mov
cmp
je
jo
mov
sbb
xchg
cmpl
mov
aad
cmp
xchg
push
into
hlt
pop
xchg
pop
and
mov
test
mov
loope
sub
mov
pop
sub
and
push
stos
cli
xchg
pop
in
in
jl
push
mov
pop
lock
sub
jecxz
xchg
addsubpd
add
add
and
cs
and
add
call
mov
cmp
je
push
lea
push
mov
cmp
sbb
test
jmp
sbb
add
test
dec
pop
pop
pop
or
xchg
rcrl
sub
sarb
dec
jmp
xor
call
push
aas
push
adc
daa
fs
cmp
and
sub
inc
mov
hlt
push
in
inc
je
shrb
jbe
in
mov
neg
push
xchg
aam
fistpll
pop
push
loope
in
insl
adc
mov
mov
sbb
dec
lods
mull
sub
ja
jbe
sub
call
push
push
xor
push
push
cmp
je
fcmovbe
insl
add
xchg
mov
add
cmp
ss
mov
in
aas
xchg
or
cmp
je
push
push
aas
sub
mov
sub
int3
sub
jne
ss
mov
jmp
dec
or
cmp
std
push
icebp
mov
insl
in
mov
shll
clc
jns
idivl
data16
push
test
loopne
in
shll
shl
cli
lcall
rorb
sahf
into
gs
scas
in
decb
add
xor
jnp
pushl
and
mov
jp
lods
cmp
sbb
test
xchg
dec
dec
cmpl
je
ret
pop
or
or
sub
inc
adc
addb
adc
ret
add
jb
stos
adc
mov
cmp
pushf
shlb
xor
imul
push
and
cmp
js
filds
pusha
push
lea
push
cmp
je
cmp
jne
xchg
add
cmpsb
mov
loopne
ja
cmc
je
and
push
mov
out
adc
push
gs
sbb
mov
add
sub
outsb
pop
mov
cmp
xor
adc
movsl
ret
adc
mov
pop
clc
clc
add
ds
or
pop
dec
jge
test
mov
mov
jmp
rclb
jno
cmp
jne
leave
ja
fmuls
push
push
icebp
andb
sbb
mov
mov
or
sbbl
xor
mov
dec
adcb
cld
mov
jo
and
adc
daa
xchg
daa
xchg
fdivl
leave
ret
sbb
add
xchg
pop
pop
or
icebp
pop
insl
std
sbb
cmp
ja
rolb
cmpsl
sbb
inc
aaa
popa
dec
int
cmp
ret
xchg
push
call
hlt
dec
je
add
push
sbb
pushf
mov
add
sarb
adc
pop
or
adcl
je,pt
cmpl
ja
fisubs
fwait
mov
mov
cmp
jg
lods
pop
add
mov
cmp
gs
je
cmp
jne
mov
sbb
mov
loop
dec
inc
clc
inc
in
jns
mov
pop
dec
xor
push
movsb
jne
jmp
testb
add
ret
testl
mov
inc
sbb
cli
cmp
jbe
in
neg
push
ljmp
fisubl
inc
jmp
inc
and
loopne
shrb
jbe
xor
stos
xor
pop
mov
xchg
ret
mov
push
pop
inc
or
int
sub
clc
lahf
mov
cmp
je
mov
lea
sub
gs
hlt
and
data16
fstpt
ds
xor
inc
cmpl
inc
imul
jne
notb
cmp
mov
insb
imul
fwait
jo
sub
jb
or
ja
test
sub
inc
imul
cmpsl
inc
cld
add
push
cmp
push
ja
pusha
xor
adc
jl
shll
or
outsl
cli
cmpsb
inc
mov
jmp
loop
jne
mov
cmp
test
mov
outsb
add
mov
xchg
fldcw
mov
aaa
jb
cmpsb
mov
rcrb
cmp
inc
sti
add
fsubr
adc
aas
les
mov
orl
push
je
fs
jne
pusha
movsl
push
popa
xor
mov
dec
push
mov
or
sub
aas
push
add
pop
jae
mov
jmp
dec
shlb
sbb
pop
cld
jbe
test
sub
dec
popa
pop
bound
call
sub
adc
fldt
int
sar
cmp
jg
or
jge
fistl
cmpb
or
jle
es
lcall
push
sub
and
pop
cmp
jl
pop
jle
push
loop
test
add
shll
and
jbe
mov
adc
loopne
test
fwait
and
or
je,pn
test
jne
ds
aas
and
jb
lcall
je
xor
sub
adc
movb
inc
mov
push
sub
push
add
or
add
push
xchg
jno
mov
inc
and
je
mov
dec
outsl
xorb
icebp
mov
jae
add
inc
inc
push
es
adc
mov
jp
je
sub
xchg
into
add
clc
std
jne
sub
mov
mov
dec
fs
scas
imul
mov
push
daa
pop
or
icebp
xor
xor
lret
add
mov
mov
jb
mov
sub
inc
xchg
sbb
hlt
push
jge
faddl
sub
inc
mov
mov
inc
cli
and
lea
loop
xor
xchg
push
pop
add
pop
cld
adc
sbbl
cmp
mov
test
call
sti
repnz
mov
or
xchg
lods
cmp
pop
cwtl
xor
lock
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
ret
lea
xor
or
xchg
push
andb
adc
pop
cld
mov
add
mov
rclb
or
xlat
mov
sti
pop
daa
dec
add
cmp
cmp
push
and
mov
ss
test
push
sub
mov
rcrb
pop
aam
xor
pop
sub
adc
test
pop
adc
mov
add
pop
stos
xor
sbb
scas
jl
ret
inc
fimull
add
cmp
add
add
mov
add
mov
scas
push
or
mov
sahf
push
cmp
lock
hlt
sub
inc
push
les
add
pop
sbb
push
cwtl
and
xchg
rorl
outsb
xor
aaa
xor
orl
aaa
int
add
pop
sub
sti
inc
or
mov
pop
lock
int
cwtl
and
add
jmp
adc
mov
xchg
and
data16
xor
pushl
cmpsb
pop
shrb
cltd
adc
push
ss
mov
andb
push
mov
xchg
inc
icebp
and
enter
mov
sbb
lret
lcall
lahf
jne
dec
leave
fstps
add
enter
xchg
xchg
xchg
inc
pop
sbb
das
or
jne
inc
xor
xchg
push
leave
mov
rorl
or
and
cmp
enter
or
dec
enter
add
xor
rolb
add
jle
setne
xor
pusha
inc
testl
faddl
aam
cli
push
aas
subl
add
pop
in
mov
xor
ljmp
in
shlb
jne
add
push
shrb
sub
lock
ljmp
jne
ss
pusha
adc
cmpsb
jne
out
hlt
subb
aas
jnp
das
mov
fdivrl
sbb
das
bound
sbb
cmpl
push
or
insb
mov
inc
inc
shrb
out
pop
jmp
jb
fcomps
fbld
jmp
cmp
je
push
aas
movsb
sbb
lds
int
dec
lock
inc
xchg
in
loope
jge
pop
and
push
mov
das
mov
or
dec
cwtl
mov
faddp
repnz
mov
adc
push
insb
in
pushf
aam
fsubr
cmp
in
test
xchg
lret
push
push
shrl
in
sbb
push
call
xor
jbe
and
aaa
addl
push
inc
pushl
fcomip
jmp
jmp
pop
inc
cmp
je
lea
cmpb
cmp
jne
add
pinsrw
jne
push
loopne
adc
cmp
mov
mov
inc
call
fld1
orb
lock
outsb
jmp
mov
jne
movsb
out
cs
iret
push
adc
sbb
ret
lods
cmp
scas
movsb
insb
jl
cld
je
jmp
add
jae
loop
add
push
mov
or
cmp
enter
xor
das
ret
sub
nop
jmp
inc
push
sbb
dec
fucomi
adc
pop
sbb
jnp
pop
stos
xchg
adc
std
add
ret
enter
mov
mov
adc
add
int
dec
pusha
or
mov
jne
das
dec
loope
xlat
test
add
xchg
mov
dec
or
ds
lret
in
cmp
inc
mov
xor
in
movsb
in
mov
insb
movsl
mov
push
lret
or
mov
push
push
push
sbb
pop
add
mov
push
add
jmp
xchg
adc
cmp
xor
pop
lock
cmp
xchg
xchg
imul
adcl
mov
xchg
push
sub
xor
xor
cmp
add
fbstp
sbb
pop
ret
negl
movsb
js
mov
dec
push
push
in
or
in
add
adc
or
pop
and
mov
pop
adc
ds
shlb
sahf
push
lea
ljmp
cmpb
mov
pop
int3
bound
in
arpl
push
push
add
jbe
sub
or
daa
mov
push
cmp
mov
insl
pusha
jle
jmp
mov
out
or
call
jp
dec
dec
push
or
sub
in
dec
inc
rorb
loopne
insb
mov
or
pop
inc
dec
movl
test
sbb
js
or
mov
push
mov
or
inc
inc
ret
imul
hlt
test
pusha
lods
mov
mov
addb
cmp
popa
pop
lcall
inc
js
lods
aas
or
xor
clc
popf
nopl
push
push
loopne
in
jne
dec
add
cld
aam
xor
test
and
fadds
outsl
je
mov
jmp
mov
add
add
aad
pop
adc
push
cmpl
pop
adc
cmpsb
dec
jge
cmc
out
idiv
adc
fucomi
ud0
add
mov
sub
mov
lea
iret
cli
inc
jo
mov
in
xor
cmp
jb
mov
push
arpl
cmp
clc
lock
xchg
je
in
inc
mov
cmp
mov
jl
and
sbb
push
xchg
rclb
sbb
inc
inc
add
fsub
hlt
in
pop
xchg
js
mov
jb
jo
negl
push
xchg
out
xchg
mov
outsb
push
orb
pop
aaa
js
jg
push
xchg
sarb
lods
push
cmp
or
sbb
push
adc
rcl
ret
sbb
idiv
push
adc
lods
adc
gs
shrb
or
pop
fcmovb
enter
or
bound
mov
push
out
mov
int3
loopne
out
sbb
fstl
es
or
cmp
nop
lahf
sbbb
cmp
cmp
pusha
adc
push
push
add
scas
sub
pop
les
cmp
jae
into
cmp
sbb
rcr
add
insl
rorb
adc
mov
in
xorl
jns
jl
cld
or
push
in
je
add
inc
mov
imul
push
loopne
mov
sub
jae
jo
shr
repz
sub
pop
pop
sbb
shrl
or
loop
fisubs
js
inc
jmp
push
add
push
pop
mov
mov
int3
movl
adc
mov
add
push
adc
mov
mov
sbb
xor
cmp
loope
lcall
sbb
sbb
popf
xor
push
fistps
mov
cmp
adc
sbb
imul
idivl
adc
sbb
ret
sbb
mov
hlt
stos
xchg
pushf
mov
push
popf
inc
add
jp
add
test
negb
mov
dec
sub
hlt
mov
les
mov
mulb
cmpsl
push
add
add
xchg
or
or
add
jae
xor
inc
imul
add
es
xor
in
lock
movsl
add
sar
xchg
pop
shrb
inc
adc
stc
cmp
xor
loope
pop
or
notl
andl
mov
dec
lahf
dec
sbb
jecxz
dec
cmp
jecxz
add
push
dec
add
push
mov
aaa
add
test
lock
xchg
ljmp
mov
mov
mull
clc
and
frstor
and
jo
cmp
mov
pop
mov
add
cvtps2pd
imul
lea
adc
or
xchg
sub
insb
xor
andl
push
push
sbb
pop
mov
scas
int3
push
inc
add
ljmp
testl
xchg
xchg
xchg
les
sbb
lods
dec
jp
inc
clc
xchg
push
lret
cmpl
test
pop
jb
je
and
inc
pop
or
movsl
xlat
pop
add
mov
adc
xor
int3
add
test
clc
xor
nop
cmpb
into
in
shrb
rorb
push
adc
xorl
add
push
and
hlt
add
inc
cmp
leave
mov
insl
inc
pop
inc
push
or
repz
and
rorb
xchg
mov
inc
push
xor
jecxz
pop
cmp
fildl
mov
push
or
pop
mov
or
jp
sub
mov
pop
inc
sarl
rclb
in
fistps
or
pop
cmp
push
or
xchg
xor
or
xlat
mov
or
mov
dec
xor
repnz
jo
dec
jae
and
mov
and
imul
sbb
in
ret
pop
push
inc
cwtl
jecxz
sbb
xor
test
fs
inc
hlt
ud2
and
or
or
xchg
insb
stc
test
out
fcomps
xorb
fistpl
jecxz
add
push
push
imul
xor
and
xor
or
pusha
js
ret
sub
scas
dec
notl
xor
clc
inc
scas
xchg
jne
movsl
xchg
adc
xchg
popf
adc
push
mov
sahf
push
sub
or
jmp
xchg
jge
cmpsb
nop
add
je
cld
inc
pop
fisttpll
or
cmpsl
mov
in
sbb
push
inc
out
and
inc
nop
xchg
ret
sub
pushf
xor
pushl
jl
ret
xor
jo
and
pop
stc
out
jnp
enter
xchg
jb
push
rcr
loope
jne
aaa
pop
adc
xchg
xchg
test
lock
call
push
push
push
and
mov
arpl
mov
scas
jbe
insb
mov
cmc
and
add
mov
pop
movsl
adc
ds
add
xchg
adc
rclb
mov
lahf
or
icebp
cmp
jne
fistl
or
add
incb
jne
sub
pop
dec
or
and
adc
jnp
sarl
or
iret
andb
dec
push
mov
sub
inc
push
pop
pop
pusha
add
inc
sbb
mov
xchg
mov
mov
rolb
or
or
test
out
inc
scas
jle
or
sbb
sub
pop
push
test
and
and
sbb
ret
jb
je
in
sbb
adc
sub
sub
push
or
cmp
sbb
popa
pop
fcomi
jge
sub
popw
mov
add
pop
call
sbb
pop
mov
or
ret
outsb
xor
sbbl
xor
insl
push
dec
sbb
and
ljmp
pop
fwait
sub
xchg
push
pop
pop
add
jae
mov
cmpb
test
fs
sub
dec
dec
es
jp
sbb
clc
sbb
xchg
cmp
add
test
dec
rcr
rclb
outsb
enter
sub
lea
push
dec
mov
pusha
dec
orb
mov
lea
or
stc
xchg
ds
push
lea
mov
test
inc
dec
and
jo
call
and
inc
subb
dec
scas
lcall
dec
mov
shlb
hlt
rolb
and
ljmp
insl
cli
add
out
cmp
jecxz
daa
jae
ret
popf
xchg
sub
outsl
mov
push
mov
ret
pusha
lcall
mov
cmpsl
jno
add
or
daa
je
sbb
sub
adc
push
es
loopne
jmp
inc
or
daa
les
test
sub
adc
mov
or
nop
stos
sub
mov
mov
fcomps
aas
pop
andl
sub
pop
xor
loopne
pop
add
lods
in
test
jno
xor
sbb
inc
xor
adc
add
fldl
out
cmp
inc
sti
mov
xacquire
add
pushf
push
stc
dec
sub
je
imul
push
dec
aas
in
mov
pop
xchg
rcl
into
cld
push
add
js
clc
mov
movsb
and
mov
out
sub
in
js
pop
mov
lods
dec
dec
cmp
mov
cmp
mov
adc
mov
inc
out
lods
pop
adc
sub
xlat
mov
or
sbb
mov
add
xor
or
gs
ret
add
inc
cmp
jne
mov
jmp
shll
loopne
enter
push
andl
mov
adcb
shll
or
sub
adc
cwtl
push
xlat
inc
add
icebp
enter
shlb
add
ret
xchg
inc
push
jmp
mov
enter
lock
sbb
bnd
leave
aas
push
or
lret
loope
mov
push
push
add
push
add
push
jbe
mov
out
movsb
inc
pusha
aam
sbb
pop
imul
push
aad
scas
sbb
mov
mov
adc
xorb
xchg
pushf
and
aaa
dec
mov
test
jmp
mov
sub
repnz
lods
cmp
aad
mov
push
popf
xor
and
test
in
push
adc
aas
add
mov
or
add
fsubs
inc
xchg
or
xchg
or
jmp
setl
jbe
or
shll
jbe
and
in
sub
xor
out
push
inc
in
push
xor
cmp
scas
aam
inc
sub
add
add
push
xor
int3
or
addr16
in
call
inc
cmpsl
xor
dec
or
repnz
push
mov
mov
ljmp
nop
adc
int3
add
fs
out
mov
cwtl
dec
sub
out
xchg
jmp
push
lret
inc
pop
xchg
inc
fldcw
xor
rorb
lea
inc
inc
mov
lods
call
ret
les
shrb
push
inc
sub
test
sub
adc
enter
push
xchg
pusha
fcos
hlt
or
and
dec
push
pusha
or
adc
nop
or
pop
insb
jmp
sub
pushf
or
adc
pop
and
fstl
rorl
gs
loop
sti
sbb
jne
mov
repz
je
call
or
push
pop
jecxz
push
lock
xchg
xchg
inc
mov
push
push
mov
shlb
push
push
or
rorl
sbb
sbb
push
outsl
inc
ss
data16
dec
dec
loopne
dec
sbb
int
adc
add
fwait
mov
adc
stos
int3
mov
sbb
pop
shrb
sbb
jmp
xor
gs
xor
push
inc
jp
pop
lret
in
lret
push
loopne
add
pop
xor
repnz
or
and
xor
adc
inc
add
out
sbb
roll
lock
lcall
adc
imul
dec
je
adc
cmp
orb
popa
add
filds
xor
cmp
inc
sub
js
sahf
xchg
xorl
dec
adc
and
jo
mov
scas
mov
and
mov
mov
aad
in
sti
rcrb
scas
rcr
push
int
int
dec
movsl
call
out
ss
xor
insb
dec
dec
cmc
ret
add
cmp
adc
sbb
out
pusha
out
push
sub
or
push
jle
fildll
cmp
sahf
jne
sbb
adc
mov
mov
jmp
jo
cltd
mov
pop
popf
push
sub
loope
pusha
popl
jecxz
aam
cmc
jmp
cs
inc
push
fisubrl
mov
and
add
ret
mov
jg
mov
add
inc
test
mov
in
mov
addr16
sbb
adc
adc
shll
sbb
jae
cmp
add
cmpsb
and
add
cmpl
lock
sub
or
dec
mov
aam
or
jmp
mov
lahf
lahf
cmp
add
dec
sbb
loop
inc
sub
das
insl
mov
mov
out
idivb
mov
jp
stc
xlat
test
dec
pop
stos
add
or
les
enter
insl
int
lcall
jns
xchg
xor
xchg
or
or
inc
fs
and
out
sub
sbb
ret
xchg
jge
movzbl
push
or
jecxz
xor
sub
sti
out
dec
cmpsb
or
aaa
mov
je
xor
mov
xor
xor
pushf
fisubs
shlb
xor
mov
xor
pop
popa
inc
lcall
push
jmp
push
mov
inc
arpl
popa
scas
add
xchg
xor
lock
movsb
jmp
add
paddd
push
add
dec
das
cld
lea
push
inc
push
lret
jecxz
and
int
mov
popl
imulb
cmp
repnz
adc
xor
test
dec
ljmp
cmovbe
push
mov
jae
or
fsubrs
repz
sbbl
sbb
or
cmp
pop
sub
mov
or
add
or
add
pop
and
cmp
push
push
mov
lock
repz
mov
add
push
sti
fstps
jge
jb
cmp
aas
mov
lods
jge
cmp
jne
push
lods
inc
lods
dec
dec
sbb
int
push
dec
js
sbb
js
pop
add
or
aas
jp
dec
cmp
ret
rclb
inc
or
inc
lock
jecxz
loopne
out
cmp
je
or
add
movb
cmp
push
push
and
pusha
mov
into
mov
addb
test
mov
frstor
xor
mov
add
adc
push
jnp
sbb
jmp
mov
repz
add
and
mov
sti
xchg
pop
adc
inc
pusha
pushf
or
fs
pop
mov
je
cs
dec
cs
into
in
imul
mov
mov
mov
mov
test
ret
inc
jns
out
filds
dec
add
add
enter
iret
jbe
mov
jecxz,pn
jbe
mov
mov
ret
scas
movl
push
push
inc
sub
mov
adc
daa
jno
fildl
xor
add
jb
inc
jecxz
mov
ds
adc
rclb
sbb
and
int3
imul
push
jnp
aas
repnz
lea
inc
push
jne
lea
xorl
xor
movsb
call
pusha
fs
dec
filds
jle
mov
xchg
inc
inc
xchg
lock
cmp
sub
xchg
cmpsb
push
lock
jne
adc
ss
bound
shlb
daa
and
sbb
pop
push
xlat
fistps
and
ss
push
repz
adc
fsubs
aad
pop
stc
fdivrs
cmp
call
xchg
jne
mov
pop
mov
push
loop
mov
push
jl
push
mov
sub
and
and
out
ret
xchg
push
jnp
and
jmp
out
leave
jb
ret
sub
sbb
movsl
or
push
cmp
sbb
stos
or
das
adc
test
cmpsl
and
jl
fsubrs
insb
dec
mov
inc
popf
test
mov
sub
lock
cmc
mov
flds
push
pop
adc
dec
jnp
pop
or
inc
orl
xchg
sarl
dec
adc
push
adc
fdivs
adc
sbb
and
pop
jae
and
sub
mov
adc
sbbl
adc
dec
fs
xchg
pop
add
or
lods
sub
ja
into
movsl
rclb
jmp
icebp
dec
cwtl
loopne
stc
pop
ret
setl
pop
pop
mov
les
mov
pop
cld
push
inc
dec
cli
inc
lea
loop
mov
lea
cld
fimull
fwait
cmp
lea
lock
xor
jle
mov
mov
rorb
dec
loopne
sub
lods
pushf
nop
or
mov
je
fdivrl
mov
mov
adc
notb
jge
mov
pusha
mov
jl
inc
mov
orl
js
sti
adc
xor
cmp
psubsb
push
shr
dec
xor
or
mov
push
push
rolb
push
push
sbb
insb
movsb
jmp
and
add
idiv
dec
jbe
cmp
dec
arpl
ret
out
inc
cmp
push
mov
cltd
cmp
xchg
pop
cmp
jne
daa
push
adc
rcll
fstps
ljmp
pop
cmp
xorl
js
jb
inc
dec
pop
shlb
mov
mov
dec
jp
sahf
xchg
xor
mov
outsl
loope
xchg
mov
adc
or
outsl
cmpsb
mov
lea
test
xorb
hlt
jnp
push
inc
jbe
adc
xor
or
mov
jne
or
push
pop
mov
loope
inc
sub
cmpb
test
adc
xchg
faddl
add
nop
jo
jbe
add
and
rclb
mov
out
insb
and
xchg
sbb
adc
or
call
inc
sahf
movsb
mov
push
and
dec
jle
or
int
mov
sub
xchg
ret
lods
test
jmp
mov
lahf
test
and
mov
std
jecxz
xor
or
and
cmp
into
or
pop
add
ja
testb
sub
mov
pop
fmull
pop
xchg
sbb
push
je
add
sub
push
pusha
add
test
add
pop
mov
or
push
repnz
mov
cmpb
std
xor
sub
add
in
daa
je
ds
ret
pop
lock
in
repnz
jmp
testb
adc
and
cmp
jge
hlt
mov
dec
fmull
sub
sbb
push
int3
loop
pop
cmp
test
jge
rorb
pop
mov
je
test
testb
adc
fcoml
ds
cmpsl
test
adc
push
xchg
and
mov
xchg
and
mov
push
pop
push
push
or
xchg
or
and
lock
addb
jle
ja
idivb
push
push
aas
les
mov
sub
sbbb
or
bound
or
pusha
pop
leave
clc
mov
pop
push
push
xor
mov
nop
mov
movl
in
push
mov
rcrb
ljmp
loope
push
movsl
dec
and
mov
fldenv
xor
fiadds
pop
aad
sti
sub
inc
leave
testb
mov
scas
outsb
pop
pop
dec
fisttpll
adc
inc
out
add
ja
jg
cs
incl
hlt
cmp
je
icebp
or
jbe
push
xor
mov
cs
mov
mov
inc
repnz
sbb
inc
cmp
jb
stos
dec
fdivs
sbb
addr16
data16
push
push
jbe
fdivs
pop
xor
insb
jge
movsb
lds
in
push
sub
dec
cmpsb
pop
push
fiadds
in
sbb
jne
or
pop
mov
sbb
stos
jnp
pop
sbb
pusha
inc
int3
add
fwait
or
add
adc
ret
jle
inc
sbb
adc
icebp
xchg
fiaddl
and
adc
mov
xor
fdivs
cmp
or
lea
mov
idivb
aam
xchg
adc
out
lods
jge
jb
add
sub
sbb
mov
or
mov
aad
inc
jo
mov
adc
in
xchg
dec
daa
lock
mov
ficoms
mov
sbb
mov
sbb
mov
test
std
cmpsb
or
rorl
and
or
xchg
sub
push
enter
adc
sbb
scas
shll
out
fbstp
xchg
icebp
aaa
jecxz
mov
or
inc
adc
notl
add
lahf
mov
dec
lods
sti
mov
outsl
rolb
jns
jnp
pop
jmp
xlat
xor
sbb
or
lret
pop
cmp
jne
dec
or
leave
scas
stc
pop
pop
cmp
test
je
movsl
lock
in
push
add
int3
push
add
je
pop
add
mov
stos
gs
xchg
push
pop
push
cwtl
sti
hlt
in
data16
cld
rolb
je
sarl
mov
adc
or
push
jae
and
xor
sub
pop
js
movsl
or
std
fmuls
cs
movl
mov
mov
sbb
pop
and
in
push
je
test
cmp
xchg
js
mov
test
or
stos
xor
aaa
mul
lea
pop
mov
in
or
lea
fdivl
ljmp
push
call
pop
push
add
mov
shrb
pushfw
or
add
int
mov
sub
mov
imul
mov
jmp
cmp
hlt
loop
inc
sub
and
out
jle
cmpb
and
add
mov
pop
jmp
jle
mov
testb
dec
inc
cmp
mov
adc
inc
push
xor
sbb
stos
xchg
cli
mov
push
in
subl
jne
mov
cmp
popa
xchg
cmp
cmp
xor
pop
mov
mov
add
adc
mov
jmp
add
inc
mov
out
rcrb
ss
les
dec
add
movlps
add
jge
or
rolb
inc
and
clc
add
adc
andl
or
xor
jne
push
lret
adc
pusha
sti
scas
pop
xchg
adc
pop
test
push
je
mov
into
push
mov
dec
icebp
sub
dec
cmp
or
and
and
adc
jo
fstpt
mov
jl
jmp
ret
cmp
nopl
movsl
push
dec
cltd
xor
mov
mov
add
add
in
hlt
mov
mov
xlat
hlt
push
popf
xchg
add
cmp
jl
pop
decb
jns
loop
popf
mov
lea
int
cltd
insl
orl
cmpsl
rclb
adc
jge
loopne
xchg
daa
out
int3
adc
sub
stc
mov
cmp
cwtl
lea
jmp
cmpl
jmp
add
cmp
jbe
adc
orb
jne
lock
sub
jg
mov
mov
shrb
mov
sub
sub
movsb
sbb
mov
adc
jo
jo
lods
outsl
pusha
call
xchg
scas
sub
add
sub
mov
shr
call
dec
adc
adc
rclb
and
sbb
sub
sub
add
call
push
movsb
mov
push
testl
mov
shl
sub
mov
mov
mov
lock
or
in
sbb
mov
cmp
ffreep
push
dec
cs
bound
or
cwtl
fcomps
in
fdivrs
movsl
les
pop
add
xchg
adc
sbb
lock
andb
cmp
sti
test
pop
jge
add
xchg
mov
mov
mov
inc
hlt
roll
dec
ret
mov
iret
fisttps
sbb
push
jo
aaa
and
test
das
enter
push
je
adc
das
lock
push
fisubl
lock
adc
sbb
loopne
jae
push
xchg
push
add
pop
mov
xchg
call
or
pop
mov
cmp
add
ret
fwait
sbb
push
pop
or
push
add
mov
and
inc
and
lea
and
push
pusha
adc
in
add
and
dec
nop
mov
xchg
pop
xchg
pop
jb
imul
add
inc
mov
xor
sbb
mov
pop
add
sub
pushf
mov
inc
sub
gs
dec
sbb
sub
xor
imul
adc
cmp
inc
add
push
xchg
pusha
mov
sub
sbb
adc
lea
and
or
sbb
rorb
mov
lods
mov
dec
mov
push
pop
loop
hlt
or
pop
xor
test
sti
cs
loop
pop
lret
or
mov
stos
or
ljmp
je
mov
aam
arpl
jmp
cmp
jbe
pop
or
inc
and
jns
iret
mov
dec
dec
dec
clc
jne
mov
push
test
daa
ficoml
or
sub
lea
sub
addl
cmp
stos
es
test
xchg
dec
and
xchg
mov
hlt
push
and
hlt
jns
or
inc
pop
push
or
add
repnz
pop
mov
aam
push
pusha
fidivrl
cmp
jae
and
sbb
shr
scas
fxtract
jne
push
js
fildl
cld
loopne
fnstenv
mov
and
adc
pop
movsb
repz
xor
push
add
or
add
xlat
cld
clc
pushl
push
inc
jp
cmp
add
sbb
xchg
test
les
jo
data16
or
shrb
xor
rol
xchg
clc
sar
fiadds
add
cmp
push
mov
les
js
iret
je
faddl
rorb
mov
push
and
and
loop
pop
lea
add
mov
faddl
adc
add
faddp
inc
adc
xor
test
addl
pop
xor
pushf
xor
push
sti
cmpxchg
pop
push
decb
or
adc
add
mov
push
aam
mov
jmp
and
lea
ds
sbbl
jne
cmpl
jbe
push
mov
pop
sub
mov
lock
xchg
shlb
icebp
xchg
dec
cmp
push
test
aas
imul
out
inc
loop
inc
jne
sub
movsb
sbb
pusha
ret
add
add
cs
push
mov
mov
loope
dec
jnp
cmp
xor
mov
lea
mov
mov
mov
popa
pop
in
lods
push
cmpsl
jp
or
lahf
mov
rclb
jo
bound
adc
mov
cmpb
mov
call
pop
sub
inc
mov
pop
out
inc
xor
movzbl
jno
xorl
and
push
je
orb
mov
or
mov
cwtl
in
in
ret
call
jo
cmp
int3
cmp
jp
test
pop
push
push
iret
adc
adc
loop
nop
shr
sub
enter
mov
mov
adc
mov
imul
mov
insb
mov
aam
lods
xchg
cmp
jbe
cmpsl
mov
xor
or
cmp
je
pop
aam
call
lea
mov
mov
xchg
cmp
push
and
mov
mov
insb
dec
in
mov
stos
xchg
jo
mov
fildl
lock
add
lahf
hlt
subb
fsubs
add
ret
xchg
sbb
push
sbb
adc
adc
pop
ret
data16
pop
insl
ds
mov
mov
setg
fsubr
adc
lret
push
jbe
rol
incl
inc
xor
sbb
loop
xor
xchg
aas
test
je
push
jns
or
iret
in
ret
test
or
pop
push
sbb
sub
sbb
xor
pop
dec
test
test
aas
inc
fwait
jb
push
mov
inc
adc
aam
in
insb
sub
clc
ret
cmp
in
and
mov
mov
cmpb
push
mov
cltd
mov
addb
jl
jmp
inc
mov
and
mov
outsl
jl
jno
mov
mov
std
movb
add
enter
test
jo
sub
notb
int3
push
in
xchg
add
cmp
sub
hlt
les
xor
scas
cld
mov
cmpsl
or
jmp
push
pop
xchg
enter
xchg
push
into
pop
xchg
xchg
rcrl
popf
in
or
mov
jb
addr16
je
pushf
mov
mov
add
pop
leave
inc
pop
xlat
clc
and
jle,pn
mov
addr16
cmp
dec
jb
cmp
add
pop
add
js
and
jl
cmpb
add
mov
je
pop
leave
push
cmc
adc
add
mov
add
je
test
inc
xchg
imul
dec
aaa
push
mov
and
cmp
inc
les
xchg
lret
ja
sahf
mov
push
add
stos
mov
cmp
rcrb
add
fcompl
mov
cmp
aam
pop
mov
out
add
inc
cmp
sub
sbb
mov
sub
lds
jmp
xchg
das
into
mov
push
enter
pop
jmp
lds
push
sub
add
and
dec
push
cli
je
hlt
sbb
mov
clc
mov
stos
mov
sbb
lea
pop
adc
cmp
jmp
inc
fsubr
xor
cmp
jmp
or
xor
jae
cmp
adc
jne
pop
mov
lods
in
in
jl
cmp
jmp
sbb
out
mov
jnp
or
cmp
xchg
ret
enter
inc
jl
shlb
sub
sub
out
out
mov
or
jge
jmp
clc
jno
or
add
pop
mov
or
lods
or
icebp
ja
add
jne
push
cmpsl
and
lret
cmp
jns
sbbl
sti
ret
or
mov
add
dec
cmpb
in
ds
clc
xor
lea
or
cld
movl
and
dec
sti
loope
rolb
fcompl
mov
cmp
ret
adc
push
xchg
and
push
ret
cltd
aad
add
out
or
bound
dec
adcl
jb
test
pop
push
and
rorl
xchg
mov
and
mov
imul
arpl
push
int3
in
mov
ljmp
imul
aam
popf
xor
jo
and
flds
and
xchg
loope
faddp
js
xor
cmp
daa
mov
cmp
jb
sbb
imul
xchg
mov
roll
int
std
into
push
dec
add
and
shlb
fld
mov
mov
mov
shll
add
movsl
or
lea
aas
xor
sub
add
lahf
fldt
add
xor
adc
push
lods
add
pop
lea
in
sti
leave
fwait
push
lea
push
vpcmpeqd
mov
roll
es
cmpsb
and
icebp
jle
push
sub
lcall
or
in
rclb
addr16
jle
jmp
mov
dec
int3
sub
test
dec
sub
loopne
scas
xor
or
int3
adc
addr16
inc
sub
xor
add
push
push
cmc
and
xchg
mov
arpl
xchg
mov
pusha
xor
cltd
aad
cmp
fstpt
add
dec
dec
add
jne
push
out
pop
xor
insb
imul
sti
enter
sbb
pop
or
jae
inc
and
xor
jle
push
push
add
xchg
jle
sub
xor
int
cltd
fistpll
movsl
repnz
int3
add
in
mov
add
mov
call
add
cld
jb,pn
cmp
adc
cld
pop
pop
adc
mov
scas
sub
add
and
fistl
andb
mov
add
xor
and
mov
test
or
vandps
inc
roll
out
lds
and
hlt
inc
movsb
mov
int
or
ljmp
rcrl
hlt
cmpl
adc
aaa
xchg
adc
xor
mov
pop
push
je
lds
jo
imul
data16
mov
popa
adcb
xchg
cmp
mov
cld
dec
and
std
or
push
ljmp
mov
jmp
ds
and
insb
lods
push
pop
pushl
jmp
lods
add
shrl
sub
out
nop
inc
jb
push
push
mov
jbe
loope
fcoml
mov
mov
lock
jle
rol
push
push
out
push
push
mov
aas
bnd
mov
or
mov
stc
or
add
jb
push
jae
lea
add
sub
push
sub
sbb
jo
sbb
and
xor
ja
push
add
and
adc
or
or
movsb
cmpl
xchg
shlb
dec
aam
xchg
leave
push
shl
cmp
push
cmp
jae
inc
jmp
push
or
icebp
sti
sub
mov
stos
and
inc
lret
push
ds
sub
mov
movb
mov
push
addl
or
push
jmp
insl
adc
jnp
adc
ror
int
and
jne
and
jl
push
lods
push
sti
or
push
push
iret
call
mov
test
pusha
mov
xchg
sbbb
cmp
ret
xchg
mov
imul
add
add
lds
push
xchg
xchg
jbe
testb
adc
pop
cmp
test
pop
pop
lret
jo
inc
test
mov
jbe
sbb
and
ss
xor
cmpb
sub
cmp
aam
sahf
ret
jbe
xchg
std
pushl
mov
mov
and
mov
adc
ja
cmpb
add
dec
mov
push
or
or
xor
sbb
add
pusha
test
push
and
jecxz
xlat
lret
inc
jecxz
subl
inc
add
push
and
data16
sahf
pop
stos
cli
sub
push
inc
or
cmpsl
sar
movb
jbe
sbb
subb
aam
push
jg
pop
das
or
and
add
mov
jmp
imul
in
mov
cli
adc
shlb
lea
cli
ja
cmpb
inc
adc
ret
push
enter
xor
pop
loop
add
cmc
pushl
cmp
pop
xchg
or
mov
cld
xor
sub
xorl
pop
or
push
addr16
cltd
mov
cmpsb
imul
les
imul
mov
sbb
add
pop
in
fists
sub
shll
mov
or
sbb
jp
jns
push
scas
in
ljmp
lret
dec
add
push
aad
jno
jp
lock
lock
push
addl
loop
mov
cmp
jo
xchg
rclb
mov
jne
sub
fbstp
sub
mov
dec
roll
push
pusha
and
lock
dec
cmp
pop
lret
les
leave
lds
cmp
mov
sahf
add
bt
sbb
xor
daa
cmc
inc
sub
push
mov
push
jbe
in
push
mov
les
inc
pushf
enter
rclb
push
mov
adcl
mov
lea
sbb
sub
inc
rcrb
in
sub
in
jb
push
aam
das
and
inc
lock
rorb
lods
or
repz
adc
inc
lock
lock
cmpsb
xor
or
or
jnp
jmp
mov
jbe
dec
sbb
rcrl
xor
lock
neg
aaa
andb
mov
insl
mov
ret
xor
push
jg
jg
cmpb
jne
inc
mov
scas
andb
pop
push
or
scas
rorb
lods
jle
js
jne
and
add
or
adc
or
lret
mov
imul
sub
insl
notb
hlt
jle
arpl
or
add
test
icebp
push
jo
imul
cmp
aam
or
xor
adc
sbb
fcoms
popa
and
xchg
stc
fimuls
mov
mov
jnp
mov
adc
add
cwtl
adc
xor
outsb
sbb
pop
xorl
imul
xor
and
les
fucom
fs
mov
add
pop
movsb
fnstsw
movsb
add
mov
lock
adc
mov
xor
mov
push
cmp
adc
inc
adc
cmpsb
int3
pop
into
into
call
in
pop
adc
dec
push
inc
adc
inc
sahf
push
sbb
xor
add
add
pop
push
or
std
or
divl
ficoms
movsb
test
add
lods
je
dec
and
cmp
ds
push
es
out
das
adc
and
push
or
push
add
lock
adc
xor
jmp
dec
jns
sbbl
adc
in
push
lahf
bnd
in
in
or
daa
insb
and
inc
cmp
fst
mov
inc
out
xchg
loope
dec
pusha
xchg
push
ja
inc
shrb
push
push
and
or
in
loop
jle
repnz
pushf
mov
mov
sub
ss
jle
loope
push
push
xchg
stc
xor
jmp
insb
insl
test
rcll
test
je
jle
insb
jg
add
int3
mov
pop
scas
sub
test
mov
inc
xlat
jp
clc
rclb
mov
popa
adc
mov
repnz
add
push
repnz
cld
jg
fsubr
pop
push
js
cmp
lcall
xchg
rorb
arpl
add
or
dec
lods
in
mov
sbb
adc
and
rcrl
pop
push
mov
test
xchg
mov
pmullw
sti
sub
mov
hlt
call
adc
lods
lcall
repz
call
ret
loopne
dec
adc
bound
or
add
or
mov
sbbb
fdivs
adc
mov
sub
int
or
pop
iret
mov
jge
push
ds
test
fsubrs
or
scas
les
lock
xchg
lds
mov
mov
add
jge
jp
add
and
mov
int3
sub
arpl
jl
xor
int3
sbb
stos
jge
push
push
push
lock
lock
jae
mov
stc
inc
divb
xchg
and
in
push
push
in
iret
into
or
cmp
push
cmp
leave
dec
cmp
and
mov
adc
aaa
in
xchg
je
cmpl
or
or
or
rcrl
dec
lahf
in
shlb
inc
xchg
push
push
adc
iret
stos
inc
and
push
cmp
jl
add
mov
inc
mov
push
sub
xchg
pushf
push
push
addr16
lods
add
popf
loop
std
sub
movsb
or
movl
int3
add
or
cmpsl
in
jnp
push
push
les
test
sbb
mov
lock
in
movsl
in
inc
lret
jge
jmp
test
sbb
out
sar
in
imul
push
pop
adc
addl
sbb
jmp
pushw
mov
xor
orb
jg
cmpsl
ficomps
mov
pop
mov
jae
sub
adc
lds
cmpl
std
xor
test
or
mov
sarb
test
ss
mov
cmp
and
hlt
and
loope
idivl
repnz
mov
push
mov
sub
addr16
inc
add
add
mov
xlat
scas
rol
push
jns
mov
mov
adc
sbb
cs
out
push
test
inc
adc
xchg
ds
cmp
inc
inc
cmp
stos
test
stos
cmp
mov
iret
test
shl
inc
sub
ss
enter
imul
ret
movsb
int
inc
fs
outsb
and
mov
xor
adc
addr16
cmp
je
add
sub
cmp
push
push
scas
add
into
xor
ret
hlt
inc
push
jae
pop
mov
mov
aad
sbb
push
push
xor
add
add
sub
or
fstps
aaa
daa
cld
cs
ret
push
cmp
push
enter
popf
test
and
dec
push
loope
in
inc
mov
icebp
or
or
dec
push
shll
test
sti
addl
std
add
lock
test
pop
cmpsl
sbb
lock
push
adc
scas
sub
out
shlb
mov
dec
xchg
es
dec
cld
sub
or
cmp
je
cmc
cs
sarl
test
jl
adc
dec
aaa
fnstcw
shlb
pop
lret
push
add
add
cmpsl
or
adc
push
mov
add
out
sbb
xlat
stc
fcmove
pop
outsl
and
jne
xor
push
in
lods
and
jle
or
imul
or
push
jbe
push
mov
pop
ficompl
or
ret
inc
push
xchg
pop
mov
aaa
test
sub
je
loopne
je
mov
jmp
sub
cmp
insl
jne
sbb
loopne
or
or
push
xchg
in
rorb
fmull
ret
push
push
jb
mov
or
inc
testb
rol
jb
mov
sub
aas
jne
sti
inc
call
mulb
mov
add
pop
add
cmp
cmp
aam
lds
mov
pop
hlt
adc
fsubl
dec
add
stos
add
rcrb
jl
mov
into
leave
mov
xlat
cs
aad
and
sub
movsb
fldenv
pushf
push
or
add
jge
and
add
xor
lock
je
nop
out
cmpb
adc
push
and
jns
pop
fs
jne
push
push
adc
sub
loopne
popa
or
loopne
jmp
mov
mov
das
aad
and
dec
test
dec
js
jge
jp
add
pop
jb
mov
xlat
ljmp
mov
push
addl
cmp
dec
or
enter
add
cmp
jb
mov
lret
add
xchg
subl
cmp
add
loop
add
push
cmp
dec
push
adc
and
push
cmp
adc
inc
add
rolb
ret
sbb
mov
lea
push
test
pop
mov
mov
add
testb
add
es
pop
outsb
add
sbb
push
push
pop
dec
add
inc
add
add
sub
add
jmp
adc
push
add
pop
clc
rolb
pusha
lea
push
mov
mov
pop
subl
clc
add
aam
lods
adc
push
test
lahf
jbe
ret
nop
mov
adc
mov
call
cmp
push
cld
sub
sbb
aam
into
clc
roll
cwtl
xor
dec
sbb
or
cmp
pslld
add
in
or
loop
cwtl
mov
subl
and
fsub
sub
repz
and
xchg
push
out
mov
cmc
mov
js
or
add
jo
cmp
sbb
sbb
sbb
jo
push
aaa
mov
or
mull
test
jo
mov
push
or
rcrb
in
mov
clc
xchg
es
js,pt
outsb
inc
lcall
addb
lret
mov
sbb
stos
add
hlt
rorb
test
jle,pn
push
test
movsl
adc
mov
pop
mov
push
mov
jg
mov
popa
cmp
and
into
or
inc
mov
arpl
js
xchg
movsl
xchg
cmp
ss
call
sar
add
sbb
je
or
out
cld
pusha
sub
dec
xchg
or
mov
push
in
fildl
sbb
fsubl
aam
out
iret
mov
setle
or
cs
push
lret
mov
fsub
int3
aas
dec
cmp
mov
mov
xchg
xor
jns
in
adc
test
lcall
sub
inc
inc
mov
mov
jl
dec
enter
mov
or
mov
jb
push
mov
sub
fdivs
push
add
fidivrl
mov
jmp
xor
sub
mov
sbb
dec
push
in
clc
cld
roll
dec
dec
mov
pop
xor
rorl
enter
fists
jbe
into
popf
jecxz
sarl
cmpsb
into
push
mov
push
or
rcrl
xchg
lret
adc
adc
dec
sub
xchg
sbb
add
push
push
sub
xor
movsb
jb
or
cmp
cmp
inc
or
dec
sub
inc
or
test
adc
mov
cmp
stc
or
daa
fstpl
adc
or
stc
push
jns
int3
sarb
pusha
nop
fmull
push
sub
mov
aam
std
dec
out
jge
movl
add
pop
mov
icebp
aas
popa
xchg
xor
or
loope
add
add
mov
jmp
mov
push
loope
or
into
sbb
icebp
adc
fdivr
or
mov
mov
sbb
enter
add
sbb
push
imul
xor
sbb
jo
dec
jnp
fs
enter
inc
inc
cmp
xchg
cmp
xchg
enter
sbb
enter
or
xchg
or
icebp
loop
cs
clc
add
rorl
mov
ds
cld
incb
roll
push
push
xchg
stc
add
cmp
cmpsl
lock
orl
and
in
lods
pop
pushf
or
inc
orb
jmp
imul
int3
add
lds
push
add
mov
cld
jne
sub
ret
xor
in
cld
addb
adc
andl
fmull
pop
out
jmp
pop
sub
dec
and
add
sarb
into
jo
adc
arpl
cmp
sbb
or
ficoml
jbe
dec
scas
pop
sbb
add
or
inc
adc
pushl
outsb
bound
mov
insb
or
mov
inc
sbb
sbb
clc
push
push
or
rolb
add
jl
call
push
mov
inc
or
jmp
lea
xchg
fildl
xchg
pop
jo
jno
loope
loop
xchg
add
jne
add
popf
mov
shll
add
add
mov
enter
or
pop
xchg
or
jb
sbb
or
ljmp
mov
inc
adc
sub
jmp
mov
outsb
cwtl
push
add
mov
push
xor
aaa
sbb
pushl
mov
xchg
rorl
add
fidivl
ss
push
sbb
movsb
push
pushaw
cmpsl
inc
xor
adcb
push
mov
das
ljmp
test
xchg
lock
out
mov
add
add
mov
xchg
js
orl
mov
fcmovu
ss
push
loop
add
add
push
pop
add
orb
mov
jmp
mov
test
in
rol
pushf
pop
sbb
js
addb
sub
lea
pop
test
push
jo
cmpsl
sub
pop
scas
add
and
int3
sub
add
sbb
add
mov
fimull
or
add
dec
dec
lock
xchg
insl
push
rolb
lcall
dec
or
je
sub
add
push
push
inc
cmp
loop
xchg
out
adc
cmc
std
pop
jae
imul
pop
movsl
in
xor
mov
sub
lds
xlat
inc
loope
sti
sti
inc
xchg
andb
adc
adc
push
das
lods
mov
and
flds
test
mov
sub
or
in
mov
pop
add
or
inc
ficoms
push
orl
xor
mov
imul
adc
shrb
ja
incl
push
cmp
jae
push
imul
jmp
mov
inc
sub
dec
popl
cmpsl
out
dec
daa
mov
adc
mov
add
imul
ja
jnp
loope
sbb
sbb
nop
xchg
adc
pop
loope
and
push
insb
add
fdivrl
add
jne
cmpsl
add
aam
ds
dec
pop
and
or
inc
pop
pop
gs
and
lret
xor
inc
mov
xor
or
fisttpll
fs
inc
ljmp
xor
xchg
ljmp
adc
pop
cmp
imul
jmp
and
addl
rcll
fldt
dec
lea
inc
addr16
inc
arpl
sub
pop
shrb
add
ret
mov
pusha
push
lcall
sub
mov
inc
lea
ja
fwait
add
xchg
out
adc
mov
clc
xor
out
sbb
js
cmp
push
and
xor
add
fnstcw
mov
stc
mov
sbb
mov
sarl
jmp
adc
jne
push
fisubs
xchg
test
inc
and
lahf
jae
in
jp
push
addl
push
push
mov
rorb
lds
mov
test
ret
add
in
and
inc
daa
or
icebp
push
stos
xor
mov
push
leave
ret
bound
addr16
pop
ljmp
or
pusha
push
imul
push
push
sti
pop
mov
and
and
adc
lock
sbb
out
incb
pop
adc
sti
jo
pusha
push
imul
cwtl
hlt
xchg
add
mov
or
std
mov
adc
xchg
xchg
imul
orl
push
sbb
or
in
xor
push
add
push
in
xchg
add
insb
pop
dec
in
adc
das
xchg
pop
mov
sub
js
xchg
push
cmp
sti
add
jl
mov
mov
in
adc
sti
mov
dec
and
test
push
out
adc
jbe
js
popa
inc
and
sub
xor
add
push
add
cmp
dec
jecxz
in
out
mov
jb
lods
or
cld
xor
pusha
test
mov
inc
push
pop
aad
aaa
adc
mov
and
enter
cmp
js
push
sbb
push
outsb
jp
mov
nop
nop
and
dec
lods
push
jae
cmc
push
addl
and
dec
movlps
cmpsl
popa
or
cmpb
test
jg
lret
outsl
add
add
mov
aas
lods
orl
jle
movsb
jmp
cmp
mov
ss
loopne
jp
scas
cmpl
or
xchg
sub
push
loope
mov
push
lahf
fsubs
testl
inc
sub
lahf
adcb
cmpsb
mov
adcl
push
inc
popl
pop
jg
push
add
mov
cmpsl
repnz
cmp
inc
mov
and
lock
and
mov
roll
xchg
test
jg
add
mov
xor
jmp
xor
or
mov
or
sbb
cmp
xor
hlt
dec
and
sbbb
scas
mov
or
cmp
mov
xchg
lock
mov
push
lock
pop
hlt
std
orl
arpl
mov
out
nop
sbb
add
or
inc
or
xor
pop
test
xor
int3
outsb
insl
adc
inc
or
pop
pop
xor
enter
or
or
lock
test
xor
inc
cld
pop
or
add
and
lea
mov
mov
pop
xorb
lcall
mov
xchg
mov
js
or
adc
adc
cld
loop
sbb
push
and
fisubl
andl
push
dec
pop
jnp
or
and
sbb
push
adc
sbb
sbb
mov
pop
jl
add
jnp
push
sbb
mov
mov
in
call
sbb
fidivrs
out
push
es
repz
repz
and
fs
push
enter
out
sub
inc
or
push
and
sbb
movsl
adc
repz
and
and
pusha
adc
hlt
dec
nop
ffree
outsb
hlt
subl
sbb
push
mov
mov
arpl
call
cmp
fs
xor
push
cmpsl
daa
sarb
push
cmpsl
cmc
iret
cmp
mov
pushl
movsl
dec
push
les
test
ret
outsb
mov
es
jecxz,pn
adc
out
cltd
mov
jl
cmpsb
xor
add
push
test
sahf
rorl
mov
enter
and
clc
aad
add
or
dec
mov
mull
test
rcll
dec
js
mov
mov
dec
ljmp
inc
cmp
jle
push
movsb
loopne
dec
ret
push
and
stos
mov
ret
jo
xchg
outsb
jo
rolb
popa
inc
cmp
mov
push
xlat
and
cmp
mov
jb
stos
or
ds
add
xchg
or
pop
fs
cs
push
cwtl
pop
pop
test
das
mov
sub
jmp
xchg
out
popf
in
in
adc
add
addl
adc
sub
daa
xor
push
pop
cmp
dec
sbb
mov
add
sbb
push
aas
add
in
adc
mov
out
mov
inc
sub
inc
mov
pop
pop
test
jmp
mov
ret
xor
incl
lret
rorb
push
dec
jne
shrl
mov
clc
adc
jp
add
movsb
sbb
cmp
cmp
sbb
pusha
mov
inc
divl
and
and
sbbb
mov
shl
jmp
cmp
pop
mov
das
and
sbb
xor
inc
daa
daa
sbb
dec
dec
pusha
or
rcll
dec
jns
add
xchg
lret
orb
int
push
push
aaa
mov
add
clc
stc
or
add
push
add
push
sub
pop
jge
inc
sub
rorb
cld
test
add
sub
shlb
pusha
pop
mov
jnp
daa
addr16
and
or
ja
push
cwtl
jno
dec
lcall
jbe
decb
or
cmp
jb
inc
mov
addb
push
dec
pop
sbb
sub
pop
lcall
enter
pop
ds
or
js
sbb
add
mov
sub
cmp
adc
pop
pop
cli
push
mov
push
lea
sub
test
daa
mov
adc
add
enter
sub
xor
mov
mov
inc
sub
sti
je
mov
sbb
or
iret
lods
cltd
inc
inc
and
inc
pop
stc
pusha
inc
xor
fistpl
inc
and
and
jne
sub
popa
jle
xchg
sbb
dec
and
pop
dec
sub
inc
inc
push
inc
add
cmpsb
imul
test
add
test
gs
pop
push
xor
leave
and
sub
js
popl
sbb
aam
inc
adc
fs
and
in
jbe
fwait
and
and
sub
call
add
movb
mov
or
xchg
mov
mov
dec
test
insl
orb
pop
pop
sbb
xor
cmp
or
sub
add
scas
xor
xchg
inc
cmp
in
sbb
mov
dec
jns
daa
xor
rorl
shl
sub
fistps
sbbb
mov
adc
xor
loop
or
cmpsb
pop
push
adc
sbb
in
push
xchg
mov
test
sbb
enter
pop
and
adc
or
movups
jne
call
adc
pop
xor
dec
cmc
cmpsb
loope
stos
push
mov
mov
movsb
shrb
pop
xor
dec
mov
adc
stos
fs
cmp
mov
adcl
jge
test
xchg
jle
mov
jmp
add
adc
xor
mov
push
inc
mov
fidivrs
test
aas
lea
jnp
sbb
push
mov
jne
pop
sbb
or
sbb
push
lods
int3
sub
lret
rolb
mov
pop
fwait
pop
and
lds
in
iret
int3
imull
test
out
test
scas
rorl
pop
mov
xor
and
movsl
dec
inc
mov
nop
add
and
xor
nopl
pop
adc
lds
jne
push
add
je
adc
push
add
pop
push
push
ja
lock
inc
stc
and
add
fstl
imul
cmp
or
adcl
or
mov
adc
inc
mov
push
cmpb
loopne
pop
mov
scas
jge
scas
add
or
jle
sbb
aam
dec
sbb
add
xor
add
mov
dec
mov
insb
je
jae
lea
fsts
out
push
pop
loopne
jbe
cwtl
outsb
xor
sbb
pop
pop
call
decl
xchg
cmp
xchg
enter
inc
sti
shrb
lock
mov
out
movsb
dec
fcomp
loope
pop
out
push
adc
or
test
jno
push
icebp
mov
bound
jle
push
inc
std
sub
inc
call
or
pop
sbb
aas
es
cmpl
bound
movsl
push
pushl
inc
push
xchg
fldl
sub
mov
push
cld
mov
repnz
mov
and
mov
mov
aas
jae
dec
add
push
mov
lcall
incl
pop
les
repnz
adc
bswap
dec
test
fimuls
inc
movsb
push
push
sbb
test
ficompl
cltd
jae
aam
pop
mov
inc
lcall
jae
in
in
repz
pop
adc
dec
inc
mov
cmp
push
add
adc
pop
testb
je
sbbb
sbb
lea
push
aam
addb
addb
push
pusha
pusha
dec
loope
push
add
out
out
movsl
push
mov
add
shr
push
jnp
int
test
or
loope
imul
or
out
jb
xor
and
cmp
pop
insl
fsub
sbb
adc
or
fmuls
mov
rcr
add
and
outsl
add
dec
sbb
fidivl
iret
jecxz
sbb
lds
cltd
sbb
insb
xor
jae
leave
adc
cmp
push
push
fcmovnb
sbb
movsl
and
push
bound
cmp
mov
orb
push
cmp
in
dec
and
add
pop
pavgb
pop
rclb
fdivl
lea
push
mov
pop
xor
pushf
sbb
cmp
xor
insb
dec
add
mov
pop
rorl
mov
xor
sbb
push
xor
daa
addr16
push
jle
pop
sub
lea
test
je
int
dec
or
mov
inc
pop
jo
jmp
xor
inc
or
xchg
imul
mov
lods
mov
add
sub
fsubrs
loopne
sbb
sbb
or
add
and
mov
outsl
and
push
push
nop
mov
push
jnp
push
daa
daa
jae
pop
sub
adc
sbb
xchg
fiadds
fs
loopne
sahf
pop
xor
lret
sbb
add
or
pop
adc
sbb
push
adcb
cmp
lds
dec
rolb
leave
mov
lea
add
mov
mov
insl
lock
movsb
push
cmpsb
mov
xor
shr
icebp
scas
mov
mov
sbb
popa
js
dec
gs
shlb
jbe
je
inc
pop
arpl
das
ret
cmp
mov
adc
or
rclb
jl
sub
sub
xor
in
test
outsl
leave
and
lock
in
mov
xor
jbe
dec
push
mov
and
rorl
push
mov
or
add
sbbb
lret
stc
add
in
pop
pop
push
mov
inc
mov
mov
add
mov
sbb
lods
es
sbb
mov
mov
xor
inc
sbb
sbb
pop
sbb
loop
and
sbb
rolb
sbb
and
sbb
and
cld
aad
imul
dec
cmp
stos
pusha
dec
cmp
pop
mov
rcrb
xchg
pushf
cmp
mov
and
inc
arpl
loopne
data16
and
pop
fsubl
xchg
lea
push
cmc
pop
lea
lret
xor
or
cmc
cltd
mov
popf
mov
fwait
sbb
mov
sbb
cmc
add
imul
rorb
repz
mov
and
mov
pop
int3
mov
sbb
insl
ret
addb
inc
add
adcb
lds
pop
add
insl
ja
mov
jmp
in
adc
jge
jo
js
das
outsb
loopne
ss
adcl
add
jmp
xchg
pop
cmp
sub
add
and
sub
test
add
cmp
xor
and
mov
test
pushf
sbb
pop
mov
jne
pop
test
mov
iret
leave
cmp
dec
push
inc
mov
cmp
push
mov
dec
mov
push
mov
ja
aas
adc
xor
idivb
jne
movsl
mov
pop
js
lret
stos
push
lock
loope
mov
mov
stos
adc
xlat
or
push
loopne
ss
fs
adcb
popa
and
sub
fildll
nop
mov
outsb
dec
or
xchg
add
in
sbb
inc
mov
push
nop
sbb
push
add
mov
lds
add
or
lret
or
and
push
mov
rorb
test
and
push
lret
sysenter
cmp
sahf
out
push
cmp
pushf
adc
int3
cltd
cmp
adc
add
sbb
adc
pusha
inc
lock
cmp
nop
inc
push
jns
mov
repnz
push
mov
push
cwtl
sbb
in
insl
enter
leave
and
mov
sbb
inc
aam
pusha
ds
fcompl
out
mov
mov
sarb
mov
lea
imul
push
ljmp
or
fisttps
mov
and
cwtl
adc
sbb
movsb
mov
push
mov
int3
jl
pop
push
xor
push
lock
pop
inc
ror
ret
fs
sub
pop
rolb
jbe
in
xor
je
lods
jl
dec
jnp
sbb
enter
pusha
pop
scas
pop
jb
push
inc
dec
popa
inc
push
or
cs
inc
movsb
xchg
ret
loop
test
xchg
or
jne
rcl
repnz
xor
xchg
lods
mov
sub
stos
dec
inc
daa
and
pop
sub
bound
xor
cltd
nop
sbb
sbb
jne
outsl
pop
jmp
mov
and
xchg
movsb
mov
mov
and
adc
andl
loopne
mov
jmp
adc
add
ljmp
pop
xor
push
pop
mov
dec
cmp
push
push
pop
cltd
stc
es
fs
inc
and
cmp
dec
xchg
or
add
push
stos
les
cmp
xor
rcll
pop
and
das
nop
aam
and
or
test
sti
sbb
lods
outsb
sbb
dec
pop
cmp
mov
es
mov
add
rcll
push
or
pop
sub
push
pusha
cmp
jo
sub
sub
jecxz
pushf
clc
sbb
andl
dec
int
data16
sub
pop
mov
push
rorl
rolb
mov
or
adc
sub
ret
lods
and
push
or
andb
repnz
sbb
xor
add
dec
sub
stc
cs
popf
xor
fs
dec
das
pop
pusha
dec
sbb
sbb
popf
out
ja
lea
pop
out
adc
sub
jbe
jb
fwait
xor
push
push
dec
ljmp
lcall
push
mov
lock
xor
adc
xor
sbb
leave
sbb
pop
push
push
fdivl
push
sbb
inc
pop
dec
jo
shld
les
mov
dec
dec
mov
and
push
sub
out
cmp
shlb
leave
adc
jmp
dec
push
sbb
lahf
and
ss
popf
sbb
xchg
adc
mov
push
push
shrl
aaa
sbb
scas
jno
jns
fmuls
xor
jbe
jns
lea
dec
mov
cmp
jmp
add
cmp
and
cmp
xor
jns
movsl
test
mov
jb
pop
test
leave
test
aas
xor
add
push
sub
mov
add
dec
imul
stc
mov
sbb
and
push
icebp
sub
xorb
and
xchg
iret
or
and
jbe
cmc
pushf
xor
in
lret
push
and
xor
sub
int
enter
mov
or
pusha
mov
mov
roll
lods
push
or
or
sub
mov
xor
dec
push
inc
loopne
roll
sbb
sbb
jge
and
push
cmp
mov
xor
jmp
shrb
or
mov
std
and
in
loopne
inc
inc
sub
fnstcw
pusha
xor
jbe
out
mov
cmp
inc
sub
and
push
inc
js
fs
ret
add
dec
inc
test
jb
sbb
pop
add
fdivrl
mov
and
add
sub
xchg
jno
cwtl
nop
mov
sub
nop
add
adc
add
out
data16
pop
inc
push
xchg
aam
mov
dec
dec
cmpsl
and
js
add
cltd
inc
gs
xchg
xchg
mov
push
xor
dec
xchg
or
out
dec
mov
test
call
push
imul
ljmp
loop
cmp
ret
loopne
jno
jne
and
ret
jae
addb
fs
add
sub
and
pop
push
add
push
pushl
aaa
pushl
call
in
sub
jnp
xchg
cwtl
mov
xchg
xor
add
add
inc
dec
mov
sbb
movsb
xchg
pop
sbb
jno
pop
outsb
xchg
pop
in
add
sarb
add
jmp
rcll
xchg
mov
cmpsl
inc
xor
adcl
stc
out
push
decl
add
adc
addr16
add
add
or
rorb
pop
sub
jge
or
xchg
or
lock
shl
rorb
dec
or
mov
dec
int
pop
add
out
add
cmpsl
push
xchg
dec
dec
ud0
mov
pushl
adc
mov
mov
push
out
xchg
jnp
and
add
adc
adc
adc
xchg
mov
add
in
neg
xchg
adc
lods
test
push
cltd
loope
adc
movsl
adc
mov
test
adc
jnp
and
inc
adc
mov
sub
je
sbb
add
mov
push
lods
or
and
stos
add
or
inc
jmp
add
cmp
loopne
lods
ret
sbb
sbbb
stos
xor
sbb
aam
dec
cmp
sub
xchg
iret
pop
sbb
sbb
and
ficompl
xor
add
xor
pop
mov
xchg
shl
push
sbb
sub
add
lods
fdivl
fdivs
push
test
cwtl
movsl
arpl
inc
sub
imul
jne
sbb
aaa
je
pop
xor
or
ja
push
lods
adc
dec
sti
cmp
in
pusha
jns
test
jecxz
xor
rolb
movsl
push
mov
pushf
push
xor
das
lock
sbb
mov
leave
gs
sti
mov
inc
xchg
lret
inc
cmp
pop
pop
xor
xor
inc
xor
push
xor
jbe
pop
aad
popa
sub
inc
xor
or
mov
sub
mov
inc
add
in
add
xor
loopne
or
ss
xchg
xchg
jbe
pop
sub
aaa
lcall
std
cmp
inc
insl
loope
pop
call
sarl
sub
jo
push
cmp
fcoms
adc
pushf
adc
mov
mov
lock
push
cli
imul
jnp
jmp
sbbl
sbb
hlt
xor
inc
push
out
xchg
stos
call
and
xchg
push
push
and
cmpsl
adc
bound
dec
ljmp
adc
xor
test
mov
adc
xchg
dec
sub
xor
jo
int3
xchg
sbb
or
add
clc
sbbb
xor
insw
into
jp
dec
lods
push
fstl
pop
cmp
xor
stos
cmp
enter
mov
jl
adc
leave
inc
inc
rcll
in
cmpsb
int
mov
lea
mov
lods
mov
cmp
push
inc
dec
shrl
pop
xor
mov
lods
inc
scas
xlat
pop
push
pop
sub
aas
inc
sbb
mov
xchg
push
and
inc
mov
jnp
add
lret
cltd
nop
jo
ror
dec
fcmovne
mov
mov
cmp
sbb
inc
mov
cs
pop
push
enter
movsl
and
cmp
addr16
inc
cmp
in
adc
mov
inc
sub
or
mov
dec
lret
add
popa
sbb
ret
in
dec
out
jae
stc
or
mov
inc
mov
mov
dec
pop
sbb
int3
mov
movl
or
sbb
cmp
xchg
ja
je
clc
test
xor
popf
dec
or
xchg
lods
lods
xorl
add
xor
dec
test
pop
shll
adc
sarl
or
mov
mov
mov
inc
cmpsb
sbb
push
push
popf
sub
scas
test
mov
je
jns
jle
or
movsl
mov
ljmp
jg
or
in
test
push
mov
aam
adc
push
jl
shll
push
outsb
rorl
pop
cmpsl
rclb
lcall
pop
push
stos
add
and
add
mov
dec
jmp
sbb
sub
xor
xchg
pop
inc
or
icebp
push
or
adc
lea
stc
aad
mov
in
test
fs
push
mov
lahf
xchg
not
xor
push
xor
xchg
outsb
dec
test
dec
push
fs
sbb
sbb
shrl
push
sub
jge
dec
xchg
mov
in
aam
xor
clc
mov
pop
jle
dec
mov
push
mov
pop
push
push
mov
cli
lea
push
call
cmpb
pop
pop
push
pop
test
jl
add
sub
cmp
push
add
mov
mov
dec
jl
cmpsb
dec
push
bound
adc
sbb
and
dec
int
in
lods
test
int
mov
inc
es
xchg
pop
outsl
cld
pusha
pusha
pop
ljmp
sahf
jp
jnp
add
movsb
and
or
outsb
dec
mov
outsl
xor
and
ret
adc
or
push
pop
sbb
push
xchg
adc
push
inc
jg
jmp
adc
jmp
shr
jo
flds
push
loopne
inc
arpl
mov
inc
ret
test
popf
stos
int
jmp
add
mov
jns
into
in
or
mov
pop
lea
sbb
jle
xchg
xchg
xchg
jp
fiadds
movsb
add
rcr
adc
incl
or
lds
pop
mov
movsl
xor
push
popa
scas
out
and
adc
adc
sub
ss
dec
pop
push
shufps
jecxz
arpl
mov
addb
mov
rclb
and
aad
sbb
loope
pop
dec
add
jae
clc
jno
repnz
rcrb
mov
mov
arpl
jns
iret
into
or
lock
inc
xor
sbb
inc
call
mov
pop
add
lea
pop
push
or
mov
test
insb
bound
cmpsl
xchg
push
sarb
ds
jp
pop
or
adc
sbb
ja
and
push
je
mov
sub
dec
or
jnp
lcall
or
fdivl
push
add
stos
pop
movsb
cmpsb
xorl
push
repnz
add
cltd
mov
test
imul
and
add
cmp
mov
enter
push
cmp
dec
inc
outsb
ret
enter
dec
lods
sbbb
inc
call
mov
jecxz
imul
add
jo
mov
and
fstps
mov
pop
adc
inc
add
and
and
add
fwait
sub
lock
adc
mov
ud0
roll
sbb
or
popf
xor
repnz
inc
pop
mov
mov
psadbw
insb
inc
cmp
or
mov
and
call
pop
pop
mov
loopne
push
sub
cwtl
inc
push
leave
test
adc
push
scas
std
or
add
mov
dec
insb
sub
mov
sbb
lea
mov
lea
add
mov
xchg
lcall
rclb
pushf
adc
cmpsl
loopne
pop
pop
add
data16
push
stc
add
inc
shrl
dec
mov
movsl
cwtl
pop
mov
imul
xchg
sbb
and
xchg
jle
pop
mov
shrb
ljmp
or
and
data16
inc
adc
inc
inc
pop
and
push
mov
adc
les
pop
inc
cmovnp
sti
adc
sbb
std
mov
xor
dec
xorl
dec
push
mov
sub
or
sub
mov
add
movsl
pushf
lods
adc
loop
dec
mov
and
add
ret
and
add
add
add
cld
pop
mov
add
mov
adc
or
fildl
push
sub
adc
mov
add
cmp
push
dec
pusha
addb
inc
adc
cmp
popa
loopne
xor
pushf
xor
xchg
lock
cmp
jae
in
and
sbb
or
jne
scas
negl
or
imul
jns
cmp
je
cmp
je
cmp
je
cmp
je
push
inc
cmp
movb
or
mov
in
aas
xor
inc
hlt
jne
push
fidivrs
jge
movsl
and
pop
pop
xadd
sub
je
and
cmp
push
mov
stos
push
push
jno
sbb
xor
add
sbb
xchg
add
dec
pop
fdivrl
add
test
cwtl
test
add
paddsb
adc
int3
sbb
sbb
adc
pop
add
lcall
xchg
les
test
cmp
imul
sub
and
fwait
test
mov
repnz
sub
ret
jp
enter
sbb
add
les
xor
adc
pop
pop
inc
lcall
push
out
mov
sub
sbb
jo
adc
popa
insb
lods
or
incb
mov
and
je
fimull
adcb
fdivrl
es
cld
and
sub
cmp
rcrb
shlb
sub
in
out
and
and
inc
xchg
inc
xchg
nop
inc
ds
and
fucom
in
ret
and
jns
push
ret
dec
fcmovnu
leave
add
or
stos
repz
and
icebp
adc
or
repz
bound
adc
daa
imul
dec
lret
and
pop
xchg
or
xor
add
mov
pop
xchg
add
mov
les
int3
inc
cli
xor
inc
push
add
sub
sub
fdivl
nop
pushf
dec
hlt
sub
loopne
inc
hlt
hlt
push
mov
test
mov
pop
scas
inc
jno
sbb
inc
xchg
lods
xorb
sbb
subb
frstor
sub
dec
add
mov
pusha
lods
sub
or
loope
insl
gs
pop
sarb
mov
add
xchg
addr16
mov
shlb
sahf
jbe
xchg
inc
imul
inc
cmpl
aam
push
orb
xchg
testl
push
inc
rcl
xchg
fwait
or
xchg
mov
mov
sub
mov
mov
mov
adc
push
push
sbb
and
jne
hlt
pop
pop
xor
xor
sub
cmp
je
fsubrl
add
dec
and
insl
push
inc
or
adc
xchg
adc
mov
mov
add
xor
add
cmpsl
cmc
bound
adc
jbe
lock
loop
inc
xor
xchg
dec
shrb
es
push
jne
jecxz
mov
dec
cwtl
mov
ret
or
mov
xor
adc
and
imul
adc
adc
dec
jne
or
fimull
and
cmp
mov
js
push
sbb
xchg
shlb
add
in
inc
pop
or
add
pop
iret
lahf
mov
repz
xor
mov
or
push
add
aas
and
fildl
and
in
outsl
pop
in
adc
mov
lea
movsl
add
pop
aaa
movsl
out
mov
sbb
popf
ret
ret
pusha
xchg
icebp
rclb
mov
xchg
ds
imul
clc
sbbl
sub
sub
adc
push
sbb
sar
xchg
push
std
mov
clc
push
add
jo
push
xor
mov
sbb
adc
mov
or
inc
jge
jb
test
jmp
jne
cmp
jne
add
inc
dec
jb
imul
cmp
fists
call
mov
pop
xchg
or
inc
inc
jnp
push
mov
lea
mov
or
pop
mov
pop
or
das
push
mov
jle
cmp
jle
pushl
aam
cwtl
aam
movsl
mov
mov
add
push
adc
inc
movups
test
jg
sub
lcall
and
push
mov
push
ss
jmp
or
or
sub
push
push
sbb
lds
movb
pop
add
add
adc
arpl
mov
loop
scas
jbe
std
test
out
aad
adc
jno
and
je
or
mov
mov
jb
cmp
mov
jb
adc
lret
jne
pop
mov
std
inc
mov
push
pushf
jecxz
inc
cmpsl
mov
ds
testl
sbb
rcrl
js
test
cmpb
fnsave
xchg
mov
sub
cmp
mov
sub
sbb
push
pop
inc
cmp
movsb
int3
jne
inc
mov
divb
xchg
pop
adc
inc
xchg
add
sub
fimull
fisttpl
ret
out
push
lea
adc
add
push
sbb
push
push
ret
icebp
push
sbb
mov
mov
nop
ret
hlt
mov
xchg
mov
push
xor
imulb
cs
cmpsl
mov
sub
dec
cli
ror
les
je
je
js
mov
push
jle
and
mov
push
inc
jbe
mov
leave
and
add
ds
int3
mov
call
loopne
outsl
fisubl
cmp
xor
push
jmp
popa
test
mov
dec
sub
and
leave
jg
sub
adc
loopne
lods
in
test
add
xchg
mov
fistpl
pop
mov
pop
xor
mov
and
add
push
fsubr
dec
dec
fadds
sub
ret
add
adc
fimuls
mov
dec
mov
push
int3
adc
xor
gs
mov
pop
or
rorb
loopne
sbb
aas
push
dec
lock
push
into
test
dec
cmp
dec
mov
dec
pop
in
aam
arpl
sub
add
xor
lock
mov
pop
mov
xor
pop
inc
shr
aam
addr16
mov
dec
or
adcb
or
xchg
mov
lods
pop
loopne
cmp
push
mov
loopne
pop
or
pushf
xor
dec
push
pusha
push
adcl
push
lods
pop
and
addl
and
add
xchg
jb
fs
sbb
add
test
cmp
xchg
ror
pop
or
jb
add
or
aam
dec
cmp
mov
mov
fmull
push
pusha
aad
fwait
mov
sbb
adc
pushf
and
sbb
inc
stc
fiaddl
sbb
xchg
xor
cli
clc
ret
les
push
rcr
or
outsb
xchg
cmp
xor
outsb
shl
jle
sub
inc
push
or
addr16
cld
push
push
loope
inc
pushf
out
cmp
inc
sbbb
xor
adc
xchg
sub
jle
pop
pop
mov
jns
push
sub
jo
addr16
inc
jno
dec
jbe
push
or
jnp
mov
mov
repz
les
lods
jl
add
jbe
mov
or
cwtl
adc
ret
int
push
in
out
mov
shlb
jmp
xor
inc
nop
into
push
mov
sub
push
js
lcall
fs
imul
sbb
push
lock
xor
dec
mov
xchg
js
or
sub
xchg
cmp
add
mov
loopne
sbb
int3
or
mov
mov
push
mov
or
roll
mov
push
adc
xor
push
xchg
daa
es
pop
sub
xor
jne
fldt
stc
ror
or
adc
cmpsl
es
and
outsl
or
gs
das
repnz
sub
inc
call
add
rorl
push
push
mov
xchg
test
lock
xor
xchg
lock
call
cmpsb
dec
clc
inc
dec
and
scas
pop
inc
scas
sbb
and
jl
cmp
subb
or
mov
add
mov
cmp
cmp
cmc
lods
jmp
pop
jmp
insb
pop
push
cmpb
cmp
es
xlat
xor
dec
pop
je
cmpsb
push
popa
in
loope
jmp
stc
push
sbb
sub
sub
loopne
mov
test
push
pop
mov
data16
push
inc
faddl
roll
inc
inc
lea
or
sub
mov
scas
pop
fsubrl
cmp
jne
push
lods
into
das
imul
arpl
jne
lret
sub
mov
je
rolb
xchg
iret
jg
ss
push
mov
or
inc
mov
popf
adc
sbb
sub
jge
repnz
push
adc
cs
in
push
pop
mov
mov
in
pop
test
mov
push
es
push
cmc
roll
mov
sbb
hlt
mov
xchg
sub
xor
mov
and
test
xor
inc
or
adc
sub
pop
xor
inc
es
in
ja
test
mov
daa
push
sar
sub
jne
in
test
cld
dec
dec
enter
or
mov
add
jmp
dec
sub
add
stos
idiv
cld
adc
pop
sbb
xor
pusha
dec
jb
and
call
lret
sbbl
push
ss
gs
xor
add
cmp
cmp
adc
add
dec
pop
sbb
pop
add
xor
or
outsb
add
int3
pop
xor
add
mov
insb
add
push
add
and
pop
push
sbbb
adc
out
jne
xor
cmp
adc
test
sbb
arpl
sti
add
add
rorb
loopne
fwait
daa
push
cltd
nop
out
sbb
and
lcall
pop
inc
sub
fidivrl
sub
sub
sbb
pop
enter
dec
adc
stos
aaa
jno
sub
and
inc
inc
rcrb
or
dec
pop
xor
lea
jle
pushf
pop
or
adc
loope
sub
inc
lock
test
shll
xor
repnz
cltd
and
loope
push
or
sti
and
inc
and
pop
loopne
aam
fists
xor
push
movb
arpl
add
ret
mov
adc
daa
add
push
push
push
adc
add
in
cmpl
lods
pop
cli
push
xchg
xchg
in
pop
mov
xchg
adc
fsubs
push
and
cmp
rorl
push
inc
fsubr
cmp
pop
icebp
dec
call
sbb
and
loopne
rorl
test
cmp
filds
jg
je
jne
pop
add
shlb
clc
loopne
push
or
movb
dec
enter
inc
jb
in
or
push
mov
and
es
fistpll
jbe
inc
lea
cmpb
inc
imul
rcll
xor
adc
movb
push
push
jbe
cmp
pop
jl
pop
je
add
sbb
gs
pop
aam
dec
mov
inc
fdivl
mov
ficoml
cmp
cwtl
sbb
fsts
pop
sar
aam
cmp
push
cmp
mov
ret
adc
pop
lea
insb
pop
adc
dec
jae
sub
add
lods
cltd
daa
in
or
test
clc
addb
adc
pop
ss
mov
test
test
js
cwtl
xor
test
xor
enter
jbe
ffreep
and
in
or
jmp
dec
adc
movsl
in
insb
xor
test
andb
or
mov
xor
xchg
xchg
mov
push
push
divl
popf
rolb
lcall
nop
xor
and
jmp
cmp
jne
xor
push
lods
push
lock
lret
out
stos
push
or
push
mov
xor
sahf
jp
inc
cmp
outsb
clc
or
add
inc
lcall
les
nop
or
pop
push
mov
push
iret
shl
push
or
stc
cltd
pop
icebp
jno
adc
jne
push
or
lea
test
repz
fstpt
rol
loop
lea
aam
push
sub
push
or
cli
push
scas
dec
jns
mov
sahf
mulb
iret
add
and
popa
jmp
dec
inc
push
inc
loopne
pop
mov
mov
orl
adc
outsb
inc
add
xchg
punpckhdq
mov
dec
or
xor
sub
inc
sbb
sub
push
push
jno
cmp
loop
or
add
adc
inc
mulb
sub
xorb
aad
test
ret
out
adc
or
aam
fisttpll
or
adc
inc
shrl
adcb
push
or
pop
xor
outsl
pop
dec
or
dec
hlt
hlt
popf
pusha
roll
inc
mov
mov
cmp
add
sbbb
imul
aaa
mov
addr16
dec
call
std
frstor
mov
jmp
mov
add
mov
sub
std
cmpsb
xor
int
inc
mov
fstpl
lea
iret
repnz
icebp
leave
push
and
loop
insb
inc
or
test
and
and
add
lods
mov
sbb
js
movsb
pop
outsl
inc
outsb
int3
test
aam
push
mov
dec
sbb
sub
imul
fildl
sahf
xor
ror
pop
pop
cmp
sub
jbe
dec
call
push
dec
loop
inc
cmpsb
xchg
mov
imul
xchg
sbb
enter
ficoml
xor
popf
push
dec
cmp
dec
iret
jne
jle
ror
xor
loop
sub
or
xchg
sbb
dec
sbb
pop
pop
or
stos
push
in
and
mov
push
xchg
lcall
mov
sbbl
push
movsb
and
and
push
and
pop
and
mov
jp
movzwl
test
je
test
sarb
push
mov
mov
or
enter
dec
fnstenv
pop
push
mov
ljmp
push
je
and
cmpsb
sub
js
adc
or
inc
jecxz
lock
les
movb
push
xchg
cwtl
out
es
fisttpll
mov
sar
out
mov
leave
rorb
sbb
hlt
jle
lret
int3
test
mov
add
repz
ds
sub
lock
add
jl
lock
icebp
xor
out
xor
push
sub
leave
sbb
xor
sbb
test
sbb
cmp
pop
and
in
in
push
jecxz
sbb
xchg
gs
je
mov
daa
add
or
outsl
or
pop
icebp
jo
aam
pop
sbb
or
les
sub
ror
pop
jl
iret
in
pusha
and
lahf
and
pop
pop
cmp
je
jmp
ja
add
outsb
adc
add
jle
push
rolb
mov
in
inc
push
call
xchg
xchg
fmull
sbb
add
push
sub
outsb
dec
mov
add
xor
and
xor
cmp
repnz
dec
xlat
mov
or
inc
ja
or
push
inc
dec
pop
pop
lret
lods
add
repnz
xchg
adc
add
jg
imul
hlt
and
icebp
in
loopne
sbb
xor
jmp
enter
data16
das
add
push
in
faddl
in
rorb
in
xchg
xchg
rorb
or
push
push
aas
or
xor
xor
sbb
mov
pop
divb
sub
cli
push
popa
out
int
int3
andl
push
push
test
popa
ljmp
mov
icebp
jge
loopne
pop
addr16
push
mov
mov
jo
fbld
sbb
adc
jg
add
lock
subl
loopne
jmp
je
imul
es
lret
sub
mov
rorl
cwtl
call
xor
push
in
add
pop
mov
jp
pushfw
das
push
hlt
or
dec
mov
jns
pop
sbb
adc
cld
and
and
loop
outsb
inc
das
in
inc
pop
cmpl
das
sbb
xor
in
or
mov
pop
add
sub
push
sub
push
mov
mov
inc
or
movb
mov
cwtl
xchg
cmpsb
pushf
lods
jb
cmp
cwtl
lahf
or
sub
mov
pop
scas
push
aam
mov
push
push
cmp
adc
push
push
adc
add
inc
mov
push
adcl
les
testb
out
adc
jle
pop
ret
rcll
push
and
aam
sub
iret
int
fxch
fst
or
push
xchg
cmpsl
rorl
adcb
xchg
jmp
jne
cmpsl
dec
je
dec
ret
push
push
popf
mov
add
das
push
and
pusha
jg
add
hlt
add
pop
sub
imul
mov
xor
add
in
push
loope
cld
dec
or
cltd
mov
pop
and
cmp
scas
add
out
push
idivb
mov
rolb
rcll
lods
clc
sub
negb
push
push
mov
ljmp
jno
movsl
pop
out
aad
shll
jno
fadds
add
jae
orl
mov
jbe
and
outsb
clc
fcompl
loop
jl
inc
mov
sub
mov
xchg
stos
arpl
or
aas
int3
fprem
roll
sbb
adc
mov
ja
test
mov
je
pop
inc
enter
push
add
dec
data16
adc
mov
jne
push
add
fsubrl
dec
or
arpl
mov
jbe
dec
loopne
push
scas
faddl
cmpsb
add
adc
jmp
mov
add
and
loopne
aad
int
push
xor
push
mov
xchg
pop
fs
push
loopne
lahf
ret
test
mov
sbb
push
push
push
sub
cmp
and
jnp
nop
shl
jbe
mov
push
or
call
clc
mov
inc
adc
jb
shrl
push
lea
in
jle
lret
js
sbb
xor
pop
xchg
pop
pushf
stos
jg
cmp
mov
push
push
sub
repnz
or
mov
inc
out
lds
push
jo
xchg
nop
int3
add
jnp
sbb
sbb
mov
pop
in
mov
in
cs
mov
mov
shll
cmp
jb
push
adc
jae
inc
andl
sbb
gs
shll
push
data16
mov
sbb
mov
clc
inc
push
mov
cltd
mov
adc
jge
xchg
cmp
jg
add
sarl
aam
mov
mov
nop
or
fadds
sar
cli
jg
push
cmp
nop
or
xchg
mov
jmp
loope
inc
inc
mov
mov
push
shr
test
add
push
rclb
rcrb
pop
loopne
cmp
mov
jmp
mov
sbb
push
icebp
aad
sub
add
sub
add
and
rolb
push
in
rcl
pop
push
push
push
add
je
pop
sub
popf
popl
cs
pop
clc
cmpsb
fldl
insb
lock
push
aam
xor
xchg
xchg
mov
cwtl
mov
sbb
mov
xor
push
test
push
aam
mov
addb
inc
xchg
push
pusha
push
mov
push
loopne
mov
xchg
scas
mov
xchg
movsb
and
cmp
insl
xor
sbb
por
add
hlt
lock
jmp
jmp
cmp
jno
mov
push
lods
mov
and
sub
fidivrl
call
add
fmull
add
rcl
xchg
push
mov
je
push
jle
dec
inc
or
jae
add
pop
sahf
out
push
jae
arpl
push
repnz
push
je
inc
or
pop
sahf
ja
push
or
and
jle
cmp
jg
cli
sbb
push
sub
xor
push
add
lea
or
add
sub
push
fstpt
adc
xor
mov
cmp
add
inc
pop
mov
outsl
sbb
cmp
je
outsl
out
push
or
pop
inc
dec
pushf
nop
cwtl
mov
pop
jo
js
xchg
sub
and
cmpsb
insb
fadd
add
aad
xchg
jmp
push
xchg
and
pop
iret
dec
xchg
adc
mov
xchg
jnp
out
cmpb
push
sub
jmp
out
mov
jl
js
sbb
rclb
xlat
jb
push
push
or
pop
mov
push
sub
push
push
test
jb
cmp
jo
shlb
dec
sbb
mov
push
jae
cmp
fs
movsl
clc
sbb
adc
aad
xor
pop
and
popf
jle
ret
mov
out
mov
sahf
cmp
mov
mov
outsb
ret
jl
cmc
addr16
orb
xchg
add
dec
mov
cmp
mov
pop
inc
push
or
aas
sub
inc
aaa
jg
inc
mov
gs
lods
pop
sbb
dec
enter
lret
push
rcrb
jo
push
shll
sub
cmpb
mov
adc
inc
and
xor
sbb
cmp
pusha
fs
shll
insb
jo
js
sub
mov
into
iret
iret
call
cmpsb
cwtl
dec
sub
or
pop
sub
shrb
int3
mov
inc
mov
xor
addr16
scas
sub
xor
sbb
sbb
lea
adc
or
aaa
sbb
cli
es
fsubs
xchg
dec
dec
dec
addl
or
rcrb
je
orb
insb
push
fs
push
rcrl
cmp
jbe
pop
add
dec
push
pop
ret
imul
ret
xchg
add
adc
and
pop
or
clc
adc
and
cmp
jne
adc
xor
jne
sbb
outsl
xchg
dec
pcmpeqw
push
dec
adc
jae
xor
aaa
xor
mov
xchg
int3
push
add
and
jmp
cmp
sbb
adc
sbb
int
push
xor
ror
test
lcall
add
mov
addr16
sub
or
lock
mov
jb
mov
rorb
leave
lea
sbb
inc
xor
andb
xor
lea
adc
adc
mov
lds
fidivl
add
cld
test
in
push
mov
lock
push
insb
sbb
ret
pop
sbb
imul
outsb
pop
jo
rol
ljmp
add
xchg
jbe
xchg
add
sub
pop
fsubl
test
xchg
pop
jne
insb
loope
mov
and
add
jl
push
insb
jg
adc
adc
xor
lret
notb
out
add
ret
jnp
cmpsl
jg
clc
fstps
pusha
fdivrs
and
fnstcw
adc
daa
mov
adc
ds
ja
fildl
adc
add
repnz
out
divl
leave
dec
add
iret
cmp
cmp
out
jb
stc
mov
add
imul
mov
out
fnop
pop
jmp
roll
mov
lods
insl
adc
mov
and
pop
or
dec
lock
cs
jne
dec
ds
shll
xorl
cmp
dec
lahf
sub
xchg
cld
stos
jne
pusha
ss
xchg
sub
and
add
mov
or
int3
outsb
jne
or
adc
shrb
jne
stc
mov
inc
sbb
push
jne
lret
clc
dec
cmp
add
rorb
jg
in
ljmp
shrb
dec
cmovl
mov
mov
cmpl
pusha
mov
ret
dec
or
mov
cli
or
insb
jnp
push
stos
mov
pushf
es
add
add
cmpl
and
orb
lea
jl
sub
insl
icebp
test
xor
or
enter
add
ret
or
pop
inc
push
xchg
sbb
add
sub
push
mov
pop
mov
or
scas
jo
neg
cmp
and
mov
adc
fimull
jo
test
cmp
testl
mov
rorl
test
sbb
lods
jns
xor
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
inc
loope
add
int3
add
cmpsl
fcomps
pop
lds
and
xchg
rcl
shll
cmp
mov
je
mulb
repnz
roll
mov
and
iret
je
xor
ss
push
lock
push
sub
cmpsl
js
xchg
inc
pop
xchg
jmp
lea
pop
fsubl
sub
dec
leave
add
xor
sub
push
add
lock
mov
adc
lock
and
cld
lock
pop
div
cmpsl
addb
cmp
push
push
adc
stos
adc
sbb
jo
push
dec
cmp
or
xchg
int
mov
sbb
add
add
push
mov
pop
cmpsb
mov
movsl
lea
call
pop
cs
test
inc
xchg
movsb
xchg
jle
cli
push
leave
inc
inc
pushf
cmp
iret
shlb
mov
sbb
sbbl
inc
sub
adc
and
fs
cmp
fldl
dec
xlat
test
je
test
ljmp
sbb
sbb
lret
cltd
jbe
mov
jne
sub
lret
mov
sbb
stos
mov
dec
jns
insb
sub
fs
jge
call
popa
bound
fiaddl
inc
mov
cs
enter
mov
popa
push
jno
adc
rcl
jne
and
adc
xchg
fsubs
cltd
and
scas
lods
xchg
stos
or
xchg
mov
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
pop
or
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
cld
mov
lea
dec
push
or
xor
mov
lods
push
lods
add
adc
pushf
mov
out
dec
fcmovu
xchg
or
and
pop
mov
adc
mov
push
lock
cs
adc
fs
out
addb
dec
aam
dec
jp
push
pop
arpl
and
sbb
mov
cmp
push
push
fistl
pop
ss
into
inc
std
mov
mov
rol
push
push
pop
sub
bound
pop
call
add
or
insb
lds
adcb
inc
sbb
pop
loopne
ss
fldcw
add
fimuls
insl
dec
dec
mov
and
sbb
jg
adc
test
dec
dec
jne
pusha
mov
adc
adc
loop
jo
or
pusha
pop
cmp
inc
movsl
inc
ljmp
push
mov
adc
and
pop
inc
or
sbb
cmp
rcll
pop
fistl
xchg
lock
cltd
sbb
xchg
cmp
ds
push
sub
jns
sbb
clc
aad
xor
verr
push
xchg
fisubrs
shl
inc
adc
fistpl
push
sbb
pop
push
xchg
test
gs
or
fsubr
cmp
add
jecxz
push
in
sbb
mov
aam
add
pop
outsb
xchg
push
shlb
sub
mov
test
adc
lds
push
xchg
push
and
mov
sbb
xor
mov
adc
mov
dec
add
fidivl
xlat
sbb
add
fidivrs
in
cmp
test
or
es
out
jo
push
cli
insl
lcall
pushf
sahf
cmp
xchg
mov
push
xchg
popa
cwtl
bound
loopne
lock
sbb
mov
js
cltd
cmp
daa
test
push
enter
sub
insl
aaa
fiaddl
and
test
iret
or
mov
cli
movzwl
pop
or
test
je
ljmp
inc
lcall
push
fmuls
jns
je
or
das
or
in
xorb
adc
xchg
incb
repnz
push
sti
loop
aaa
add
dec
xchg
sbb
mov
dec
cld
push
add
push
andl
pop
icebp
fs
mov
push
pop
add
jp
jp
sahf
adc
xor
sahf
repz
sub
xor
xor
stos
add
pusha
dec
sub
mov
aam
popa
add
imul
test
and
cmp
enter
orb
rorb
xchg
jmp
sbb
mov
ss
push
xor
cmc
cmp
xor
add
mov
mov
jp
xor
mov
notb
sub
mov
jae
jo
ret
xlat
inc
lret
xchg
fistl
xor
lahf
test
decl
sub
xchg
xor
pop
cmp
rdmsr
sarb
stc
dec
stos
out
mov
xchg
inc
mov
mov
xor
call
and
inc
adc
pop
mov
pop
ret
add
mov
or
scas
xchg
sti
xor
xor
sub
xchg
clc
push
or
jo
push
push
jo
mov
push
and
dec
xchg
sub
fimuls
cmp
push
cwtl
or
pop
mov
add
outsl
adc
cwtl
sbb
mov
sub
xchg
sub
jle
test
neg
sbb
push
cmp
ret
and
dec
xor
sub
cmp
and
jb
ret
jns
add
movsb
add
cmpl
outsl
inc
scas
xor
cmc
sub
leave
push
xor
loope
xor
or
add
pop
adc
and
test
inc
lcall
insb
xor
add
xor
jge
data16
sbb
fdivl
loope
outsb
or
int
jo
add
pop
push
fidivl
mov
xor
add
sub
cli
inc
lea
and
out
rcll
dec
push
inc
add
or
rcr
imul
or
stos
pusha
popa
icebp
sbb
pop
pop
pop
pop
or
mov
idivb
add
and
and
jle
push
mov
fistpll
gs
sub
push
dec
cmp
jl
and
mov
sbbb
es
cwtl
pop
sbb
sbb
cmp
jno
outsb
dec
xor
pop
sahf
push
xchg
dec
outsb
push
sbb
adc
or
lahf
add
lcall
lcall
xor
lods
loop
test
lret
xchg
flds
cmpsl
test
ret
adc
test
push
mov
iret
push
mov
or
jl
dec
cmp
andb
sbb
jl
push
mov
xchg
sub
or
jmp
in
rol
jecxz
cmp
pop
add
fdivs
insb
dec
dec
adc
jbe
fcoml
pop
inc
push
inc
adc
inc
push
jns
add
movsl
fdivs
add
out
cmp
pop
pop
shll
mov
pop
enter
orl
mov
sahf
cs
int
pusha
sub
adc
in
or
mov
fistpll
cmp
cmp
fiadds
ret
mov
inc
sbb
add
xchg
jg
and
adc
mov
mov
loope
xor
xchg
push
sbb
mov
or
mov
xor
pop
mov
push
fcoml
push
mov
mov
push
adc
dec
lret
lret
shrl
xchg
dec
in
sbb
add
add
or
jo
jbe
movswl
add
and
cmp
add
nop
add
cmp
xor
lret
jp
iret
aas
add
out
out
push
push
test
imul
pop
fldl
mov
rcr
jbe
stos
ret
filds
mov
lods
cmp
jne
cli
cmp
pop
test
dec
stos
mov
or
and
lods
add
cmp
loop
xor
pushf
push
push
mov
mov
ret
and
add
mov
xor
mov
or
add
inc
xchg
mov
mov
push
fsubrs
ret
shlb
pushf
data16
out
insl
xchg
inc
xlat
adc
aad
add
sahf
movsb
test
mov
neg
adc
mov
inc
jo
add
jp
push
xorl
and
testl
adc
loopne
andb
pushl
insl
dec
add
int3
popf
in
adc
and
fwait
jmp
nop
push
sbb
lea
dec
mov
cltd
negl
jmp
inc
push
data16
and
test
subb
jmp
push
cmpsb
xchg
pop
add
addb
lock
jb
sbb
or
aas
pushf
xor
or
push
add
add
xchg
push
in
or
cwtl
gs
push
in
sub
xor
andl
leave
inc
inc
pop
cltd
or
imul
addb
js
xor
xor
movsb
cmp
jns
aas
mov
inc
movsb
adc
jp
inc
jno
add
daa
add
xor
pushl
dec
fisttpl
or
andl
adc
lea
jmp
xor
and
clc
sti
jne
outsl
leave
test
add
fstl
mov
sahf
mov
mov
out
in
pusha
test
xchg
inc
shll
mov
hlt
push
lods
cli
in
inc
aad
jle
test
cmpsb
push
push
ss
xor
outsl
clc
xor
cmp
outsl
adc
adc
sub
sbb
sbb
mov
push
xor
movsl
fsubrl
push
or
jae
sub
pop
or
add
add
dec
in
or
cmp
dec
insb
xor
push
cmp
dec
ljmp
pop
stos
add
mov
mov
mov
pop
add
mov
aam
mov
adc
sbb
movsb
addr16
clc
or
jge
adc
sbb
cltd
sub
cmp
sub
xlat
mov
xor
sub
lcall
in
and
xchg
test
mov
adc
adc
push
jecxz
rorl
iret
add
and
aas
xadd
imul
jnp
jae
xchg
fsubs
outsl
inc
cli
push
cld
out
movb
adc
in
jge
movl
inc
in
inc
insb
shr
inc
add
loopne
fs
pop
push
fimuls
and
pushw
cmp
and
mov
inc
iret
jo
dec
mov
pusha
insb
std
fcmovb
mov
mov
fimull
adc
sarl
cmp
out
ljmp
and
and
jge
pop
pusha
sub
cs
push
loopne
ljmp
push
push
je
push
lock
test
mov
mov
es
shlb
jecxz
mov
jns
mov
arpl
call
lea
idiv
lods
mul
je
fwait
dec
insb
or
push
in
push
xor
mov
mov
lock
add
test
xchg
mov
or
and
fsubrs
and
add
icebp
cwtl
femms
ss
je
imul
pop
jmp
sbb
add
addl
insb
daa
adc
cmp
mov
nop
or
cmp
pushl
lret
fwait
jmp
mov
add
add
inc
jne
dec
imul
push
mov
xor
je
ss
movsb
mov
xor
shlb
nop
adc
add
jl
cmp
sub
push
pop
in
mov
aam
sub
push
pop
mov
and
clc
and
ret
mov
xor
pop
adc
or
mov
jecxz
push
sub
dec
in
xor
or
jmp
cmp
pop
mov
and
dec
cwtl
sbb
mov
xor
fidivs
aas
daa
or
cmp
lods
add
hlt
ja
popa
mov
inc
cld
sbb
mov
push
add
push
jno
iret
stos
push
pop
into
leave
adc
popa
cmpb
xorl
not
mov
push
mov
mov
or
xchg
jg
ficoml
inc
xor
xor
dec
popf
push
adc
jno
popa
jmp
or
js
loope
cmp
lea
mov
or
add
push
movsl
lret
pop
push
les
adc
push
push
adc
xchg
lea
pusha
xor
xor
xor
or
sbb
mov
or
nop
rorl
inc
fsubs
xor
mov
aad
xchg
mov
dec
fsubrl
pop
and
lock
mov
dec
das
sub
in
loopne
pop
testl
cmp
inc
and
xor
ret
and
test
or
dec
or
dec
sbb
cwtl
cmpb
xorl
push
xchg
pop
mov
aas
aaa
sbb
jl
xor
jle
jmp
or
movsb
dec
sub
dec
sbb
mov
test
into
addb
jne
into
rorl
xor
int3
into
cmp
mov
int
je
add
clc
jge
cltd
shl
inc
les
push
push
xchg
testl
adcl
fbld
aaa
push
cld
add
xor
dec
inc
ret
dec
lcall
and
andb
insl
jne
ds
es
xchg
mov
enter
push
jae
push
push
dec
pop
js
es
cltd
in
fsubrl
jl
movl
jb
push
push
or
or
add
dec
xor
scas
rorb
in
push
fisubl
pop
xchg
push
mov
rolb
cmpsb
sbb
dec
decl
mov
push
gs
inc
mov
pusha
and
jno
push
mov
inc
cmp
adc
mov
add
cmpl
inc
jo
mov
cwtl
filds
fisubrs
shrl
inc
and
dec
arpl
lods
pop
lods
push
pusha
scas
mov
sti
sbb
lret
mov
adc
dec
sub
mov
in
lret
push
sahf
test
adc
sti
sub
ret
and
je
mov
addl
sub
dec
sbb
test
and
cmc
add
ss
in
mov
dec
insb
lret
or
fstps
pop
xchg
mov
or
scas
jo
inc
push
push
mov
or
addr16
dec
adc
push
je
cld
push
add
in
cmp
pop
add
mov
rolb
dec
add
ret
testb
lcall
push
jbe
test
pop
mov
adc
and
cmc
mov
mov
aas
pop
andl
in
fists
cmp
ja
je
or
imul
sub
sub
xchg
orb
inc
push
jge
hlt
xchg
inc
push
or
add
loope
js
jne
lcall
mov
xor
outsb
cmp
adc
imul
xor
lcall
imul
popaw
adc
sub
dec
pushf
jbe
inc
cli
pop
sub
call
clc
push
lods
push
push
adc
mov
mov
ret
and
inc
add
aas
or
gs
add
and
and
or
inc
add
dec
or
daa
sarl
adcb
rolb
and
rolb
das
icebp
lret
fmuls
push
cmp
pop
adc
and
mov
je
sub
add
movsb
ljmp
xor
xor
sbb
stos
add
in
adc
rcrl
or
push
adc
sub
sub
adc
adc
pop
aas
rclb
dec
push
mov
test
ljmp
xor
lea
clc
sbb
add
int3
adc
push
test
and
pusha
adc
or
or
cmp
arpl
sbb
int3
shll
add
mov
sbb
mov
das
lods
adc
fdivrl
notl
dec
add
mov
mov
sbb
sub
mov
inc
push
inc
push
xchg
aam
add
mov
or
and
mov
push
shlb
loopne
fs
sbb
popf
push
cmp
fcomp
ret
sub
sbb
notb
inc
sbb
dec
mov
fdivrl
cwtl
loopne
or
sub
int3
pop
sub
cmp
jne
sbb
jle
sti
in
mov
add
xchg
fdivrl
and
scas
push
insl
add
cmc
adcb
add
mov
int
les
leave
and
or
fs
jecxz
iret
adc
sub
mov
ret
push
inc
sub
ds
leave
ret
int
xor
ret
mov
xorb
aad
fs
pop
fdivrs
repz
sbb
xchg
movsl
clc
fistl
mov
xor
fisttpl
jmp
or
jns
and
movsb
cmp
pop
test
push
lahf
enter
loopne
push
push
and
cmp
fwait
cmp
in
add
jne
jmp
enter
or
fdivrl
shll
push
or
in
shrb
call
rorl
les
aam
adc
push
xlat
mov
ret
fs
shrl
jns
lods
xchg
and
inc
mov
dec
mov
sti
cmp
inc
rclb
xor
test
loope
jbe
cltd
rol
mov
pop
or
jb
adc
lahf
popf
mov
or
inc
mov
cmp
das
lods
xchg
in
add
jnp
sub
fisubl
mov
sbb
mov
and
das
push
and
dec
popa
push
jecxz
adc
shr
mov
ret
push
adc
xor
pop
ror
xchg
or
jmp
jle
sbb
or
dec
or
shl
inc
push
aaa
push
cmp
xchg
adc
insb
int3
loop
mov
adc
adc
arpl
xor
jp
push
sbb
or
push
cs
add
les
sub
mov
daa
pop
push
xor
inc
enter
fcomi
adc
add
or
gs
sbb
push
lahf
mov
fwait
dec
in
sub
movsb
xor
push
push
rolb
mov
mov
and
jo
jb
sub
sub
subb
mov
adc
movsl
je
fwait
lret
and
pop
sub
je
fisttps
push
movl
add
or
fidivs
add
adc
mov
cltd
and
jge
or
cmp
adc
setne
pop
push
mov
push
mov
mov
mov
movsb
dec
cmp
push
ficomps
decb
add
jg
mov
xor
popa
loopne
push
xor
cld
push
lahf
mov
or
insl
dec
cmp
clc
loopne
dec
rol
lock
incl
sub
pop
pushf
dec
decl
xchg
sbb
inc
inc
xor
mov
push
cmc
pop
rcrl
ret
lea
and
sbb
scas
push
lahf
into
pop
enter
iret
mov
and
inc
cs
ret
test
sahf
nop
std
push
dec
or
sbb
std
ja
neg
sbb
mov
loopne
adc
out
pop
pushf
clts
push
add
pop
nopl
pusha
rolb
pop
cmpb
cmpb
cmp
dec
cmpsl
lahf
mov
pop
fimull
in
push
dec
mov
add
mov
shrb
adc
loope
mov
fnsave
in
mov
movsb
outsb
mov
lahf
das
bound
cmp
daa
sub
mov
adc
call
dec
nop
mov
add
call
add
or
lcall
sti
je
rorb
xor
push
pop
or
cmpb
call
adc
cs
fidivl
sbb
inc
and
pop
pusha
cmp
xchg
cltd
cmp
push
adc
movsb
pop
shlb
xorl
fisubs
sbb
dec
push
loope
sub
shlb
sbb
sbbb
sbb
pop
out
add
fadd
xchg
sub
xlat
je
dec
pusha
fmulp
dec
popf
xor
loopne
mov
lea
sbb
xchg
jo
jbe
pushf
and
push
inc
push
fs
mov
dec
movsl
sbb
mov
mov
pop
push
cmp
cwtl
and
into
sbb
push
hlt
adc
and
mov
add
xor
mov
jnp
enter
push
sarl
gs
cmpl
lock
popf
add
adc
loope
cltd
gs
hlt
jle
push
cli
ds
push
inc
jne
je
ljmp
in
adc
ss
pop
xchg
aam
sbbl
std
push
mov
dec
adc
lahf
sbbb
pop
loopne
pop
les
sub
movsl
dec
clc
out
pop
lods
or
cltd
or
stos
add
sbb
rorl
and
sbb
jae
and
sahf
sub
fidivs
fisttpll
sbb
rorl
xchg
in
aaa
stos
and
fadds
pop
xchg
jge
or
sbb
push
je
into
hlt
je
and
aas
mov
rcl
add
call
sbb
data16
in
jecxz
add
push
adcb
jo
inc
data16
add
adc
hlt
pushw
je
cmp
push
adc
mov
push
adc
add
in
dec
bound
mov
fwait
add
in
or
and
add
mulb
mov
push
inc
dec
dec
dec
hlt
add
pop
je
or
je
cmp
inc
add
addl
bound
sarb
pop
add
mov
and
cld
xorl
arpl
sarb
test
xchg
inc
pop
mov
leave
decl
cmpsb
dec
adc
inc
lods
rorb
fcom
add
dec
lock
subb
and
xor
in
mov
lods
mov
mov
push
add
hlt
adc
and
daa
add
adc
mov
and
lea
push
add
or
and
sub
cmp
fisttps
mov
pop
push
mov
aaa
addb
mov
cmp
push
dec
dec
adc
sub
jb
icebp
xor
add
xor
rcr
push
fimull
sahf
je
adc
aas
mov
int3
jo
mov
sbb
pusha
scas
nop
and
and
xchg
inc
cmpsb
add
push
movsb
jb
push
mov
push
and
add
xchg
xchg
and
lods
cmp
pop
push
mov
sub
lea
jg
lods
or
xchg
add
test
add
aaa
sbb
mov
fcoms
jb
xor
fiadds
or
movsb
stos
fs
push
cmp
xchg
xor
push
jl
sub
cmp
push
movsb
repnz
cmp
iret
out
cmp
or
or
and
cmp
mov
cmp
dec
inc
out
add
fwait
inc
xchg
or
sbb
iret
add
test
push
jb
roll
mov
push
mov
xchg
adc
sarl
dec
xchg
adc
pop
and
and
in
dec
jmp
xor
mov
mov
jo
dec
add
xor
clc
addb
gs
in
jl
nop
mov
lcall
mov
aam
push
mov
mov
push
cs
scas
mov
and
jne
push
push
rclb
xor
pop
es
push
push
enter
inc
add
mov
out
or
xchg
es
push
add
push
rorb
push
and
mov
adc
jge
pop
mov
movsl
adc
push
mov
mov
push
or
mov
pushw
cmpsb
pop
lods
add
mov
dec
pop
xchg
mov
cmp
outsl
inc
aaa
ret
mov
pusha
dec
or
fcomp
pop
sbb
lea
in
xchg
imul
loopne
mov
mov
test
mov
push
sahf
and
add
push
inc
or
inc
or
add
aam
dec
push
push
add
pop
lds
les
jl
cmp
incl
mov
or
imull
shl
pop
cmp
jne
in
and
aaa
jg
iret
pop
dec
sub
adc
sbbb
repnz
mov
lds
add
push
sbb
lret
stos
mov
dec
or
cmpsb
into
mov
cli
leave
adc
fstps
sbb
orl
dec
sub
clc
popf
js
mov
add
call
insl
add
xchg
popl
mov
lock
mov
dec
or
pop
jmp
lea
add
rcrl
push
insl
sub
and
xchg
jne
sbb
hlt
nop
fnstcw
cmp
push
test
xor
loope
jo
jle
jecxz
add
jae
push
add
pop
mov
push
cwtl
inc
loopne
add
add
and
inc
push
cmp
rorb
mov
pavgb
mov
xor
pop
dec
sub
iret
test
scas
pop
jb
gs
sbb
and
adc
inc
decl
insl
pop
popf
add
mov
negl
sub
lods
xor
push
cmp
mov
jnp
dec
sub
xchg
fldt
dec
cltd
cmp
push
insb
call
imul
mov
xor
mov
scas
xor
cmp
jns
add
pop
inc
inc
inc
adc
mov
add
mov
jge
xchg
pusha
push
test
mov
push
scas
cltd
out
sub
shll
push
leave
push
add
push
xor
lret
add
xor
push
xorb
fldt
pusha
pop
insl
cmp
xchg
jo
push
lock
push
dec
mov
add
add
add
xchg
mov
xlat
dec
inc
pop
test
push
push
and
adc
nop
dec
push
test
add
mov
subl
test
mov
sub
jo
add
fwait
mov
inc
cmp
push
inc
lock
push
repnz
or
inc
ja
stc
xor
inc
sub
jbe
mov
add
push
add
xchg
inc
push
push
lea
dec
jns
jbe
push
orb
inc
ret
cmpb
dec
pop
mov
pusha
sub
mov
lods
or
jo
dec
dec
xor
or
lea
out
xchg
push
inc
pop
push
push
pop
inc
ds
inc
sbb
cmp
push
push
dec
incb
std
sti
inc
aaa
cmp
push
mov
sbb
push
pop
repnz
add
dec
cmp
dec
call
cmp
ljmp
adc
je
push
arpl
push
cmp
add
add
testl
inc
adc
mov
dec
in
cmpsb
lret
and
add
adc
pop
mov
or
or
mov
cmp
adc
pop
jbe
jne
andl
push
push
or
push
jbe
or
popa
sti
mov
iret
or
mov
inc
dec
or
daa
stc
popf
sub
movsl
or
push
enter
adc
jb
or
orl
dec
leave
mov
movsb
dec
jmp
or
inc
xor
mov
leave
pop
dec
lret
arpl
dec
lods
xor
mov
or
add
xor
mov
add
out
jne
repz
sub
insb
out
mov
and
jo
lds
ja
loop
adc
nop
adc
sbb
inc
cmp
sbb
lea
mull
imul
int3
sbb
lods
xchg
cmp
adc
sbb
test
mov
rcrb
andl
push
push
pop
daa
lret
scas
test
mov
jo
add
imul
pop
or
fcoml
or
hlt
fs
test
mov
lods
inc
pop
or
nop
sub
jns
add
clc
pop
inc
stos
lea
xor
fsubrl
push
imul
test
sbb
xor
pop
xchg
push
lods
fstpl
xchg
inc
sub
cmpsb
loopne
fsubl
subb
sub
xor
pop
mov
adc
pusha
pop
clc
or
clc
out
incl
and
or
cmp
jns
mov
bound
pop
mov
pushl
mov
inc
jb
les
imul
xchg
and
test
xor
mov
loope
dec
sub
dec
xor
mov
and
xchg
mov
test
lcall
mov
inc
xor
xor
iret
rolb
push
aaa
add
push
sbb
ret
lahf
sbb
loopne
out
lock
dec
sub
je
jae
add
test
stos
inc
mov
add
sbb
mov
dec
int3
and
insb
std
ja
ds
push
clc
sarl
bound
ljmp
cld
lock
call
stos
cld
sub
mov
sub
insb
cwtl
inc
xchg
repz
insl
adc
inc
and
sbb
sti
inc
ja
pop
add
push
push
mov
pop
inc
inc
cmp
sbb
popa
imul
inc
outsb
sub
xchg
mov
aaa
lea
cmp
nop
es
mov
add
cwtl
add
ret
data16
inc
xor
clc
jno
push
cld
lcall
push
xor
fcoms
mov
push
xchg
push
fsts
jp
inc
in
or
imul
enter
lods
negb
inc
pop
cmp
leave
push
xchg
mov
or
je
xor
push
inc
inc
movsl
cmp
push
pop
push
mov
inc
xchg
sti
jl
test
pop
icebp
int3
jg
cmp
adc
jg
sbb
repnz
sub
mov
jb
add
lret
or
clc
mov
push
mov
rolb
mov
shr
mov
rcrl
push
aas
push
sbb
xchg
ret
in
cmp
add
push
shll
add
cld
adcb
push
jne
xchg
or
fadds
shl
in
push
cli
movsb
mov
adc
repnz
nop
xor
cmp
inc
hlt
jns
stc
inc
or
dec
sub
jl
add
add
or
sbb
xor
loopne
or
add
jge
cmp
pop
pop
sbb
add
out
addr16
inc
movsl
sub
data16
ret
mov
push
dec
insl
decl
mov
add
stos
or
inc
mov
push
lods
ficomps
ds
pop
mov
sbb
ljmp
mov
adc
mov
and
mov
icebp
pop
mov
jg
adc
mov
pusha
cmp
add
jmp
subb
jmp
nop
ss
movb
insl
mov
test
test
cmp
shrl
sbb
arpl
sub
aas
int3
push
iret
jno
call
sub
loope
ljmp
pop
jg
mov
je
mov
dec
sub
adc
cmp
out
or
pop
bnd
add
sbb
mov
or
jno
dec
scas
adc
dec
repnz
adc
ss
dec
mov
sub
inc
jbe
lret
jne
pop
cmp
or
sub
stos
or
sub
sbb
mov
sar
rep
bound
test
or
adc
jmp
adc
jae
imul
add
sbb
inc
sbb
add
ss
andl
imul
pop
js
pop
in
test
push
push
mov
loope
xlat
push
and
push
mov
inc
push
loopne
in
mov
dec
adc
push
xor
inc
xor
adc
dec
mov
mov
pop
stos
lock
and
cmpsb
loopne
mov
xchg
testb
xor
add
inc
xchg
cmp
std
push
mov
clc
lods
dec
cmp
mov
rolb
fs
or
sub
mov
push
jb
mov
push
push
in
hlt
add
mov
ljmp
mov
xchg
jb
ret
sub
and
loop
mov
mov
shlb
mov
add
gs
xor
push
repnz
inc
shrl
push
mov
rorb
xchg
clc
pop
test
cmp
mov
push
lret
add
push
popa
js
mov
push
push
push
shlb
call
push
xchg
popa
test
xchg
adc
insl
jne
mov
mov
mov
xchg
loopne
add
sarb
mov
push
or
mov
mov
loopne
pop
pop
inc
and
popa
clc
and
faddl
jo
ljmp
mov
fs
xor
mov
push
fdivrl
lods
adc
mov
adc
arpl
and
add
mov
insl
es
sbb
js
dec
loopne
push
xor
sbb
and
sarb
mov
jne
aam
decb
mov
push
mov
adc
adc
or
add
jno
dec
xor
aas
push
push
mov
aad
jmp
jge
je
aaa
pop
adc
cmp
testl
xor
jp
ret
mov
outsb
and
test
push
push
icebp
cmp
ret
sbb
cs
imul
decl
pop
sarb
adcb
mov
mov
jmp
jp
addl
les
test
sub
add
rcrl
pop
inc
add
mov
jle
dec
jo
pop
add
inc
sbb
adc
jno
es
int3
adc
add
jge
rolb
es
lcall
xchg
lds
sub
mov
add
jle
cmovl
test
dec
sub
jle
mov
sbb
test
adc
or
add
or
pop
xor
cmp
cmp
dec
adc
push
je
sarb
adc
ljmp
dec
or
es
jb
test
mov
mov
rol
add
clc
jbe
or
add
jp
pop
mov
jmp
shll
fadd
lret
dec
inc
loop
outsb
xor
ret
in
inc
ret
pop
sub
loopne
mov
inc
sbb
jb
push
repz
mov
imul
mov
pop
pop
lea
adc
add
mulb
test
inc
or
sarb
push
lea
mov
mov
lock
dec
insl
out
inc
ficoms
xor
inc
mov
pop
cmp
divps
jnp
in
sub
xchg
lea
sarl
scas
mov
and
push
add
xor
mov
pop
inc
dec
nop
rcrl
push
add
sti
cmpsb
imul
inc
test
js
or
cmp
cmp
pop
add
outsl
add
mov
or
and
pop
cltd
and
push
xor
or
pop
aam
pop
mov
testb
cld
sbb
mov
shrl
arpl
dec
add
aas
aad
mov
cwtl
outsb
sar
mov
data16
fidivrs
cmp
or
dec
add
push
cmp
jb
incl
adc
shlb
add
es
push
dec
aad
jae
adc
adc
cltd
pusha
loop
iret
adc
add
test
nop
hlt
adc
mov
aam
adc
cmp
mov
out
mov
sub
mov
cmpsb
cltd
push
mov
dec
push
lcall
in
shlb
gs
xor
push
push
pop
or
popa
xchg
add
dec
mov
cs
pushf
mov
pop
sbb
sub
sub
mov
daa
and
fldenv
sub
arpl
cmp
jb
fsubs
or
and
add
imul
fisttpl
mov
fcmovu
arpl
ja
andb
sub
and
dec
or
fsts
sbb
push
sbb
jmp
inc
outsb
mov
jmp
xchg
add
sub
icebp
add
das
addb
rol
jns
or
add
aad
adc
mov
jne
push
xor
jae
out
nop
je
pusha
test
add
lods
jecxz
add
push
adc
mov
stos
out
lea
insb
adc
sbb
mov
mov
add
or
and
sbb
jnp
jne
iret
push
push
cmp
insb
and
and
mov
push
fsubl
in
and
cmp
adc
sbb
xchg
inc
sub
sub
cs
or
jmp
push
enter
push
xchg
sub
enter
and
sub
dec
sti
fnstenv
xor
or
xor
mov
mov
mov
dec
cli
and
dec
cmpsb
fucomi
icebp
cmp
mov
sarb
mov
or
pusha
sbb
dec
lret
push
mov
fldl
and
or
adc
testl
in
adc
sub
subl
mov
cmp
xor
adc
inc
adc
mov
xor
lahf
add
add
dec
adc
and
add
push
lea
add
or
mov
mov
cld
fsubl
pop
mov
pop
pop
ds
dec
pop
inc
mov
lea
popa
jb
push
push
addb
and
add
es
sbb
mov
cmp
mov
out
and
or
xchg
iret
or
jge
addl
mov
rorl
add
pushf
clc
hlt
ffree
lret
push
fildl
sbb
adc
subb
mov
pushw
stos
push
jns
or
or
push
mov
movsl
add
add
push
pop
daa
add
fsubrl
add
push
and
adc
lock
hlt
mov
aad
test
or
addl
push
lods
pusha
and
and
pop
xor
jne
push
inc
add
mov
imul
and
and
or
cwtl
mulb
xor
in
mov
lock
xchg
lods
mov
xor
push
xor
nop
mov
add
ja
jne
and
fwait
xor
mov
or
sub
add
mov
adc
orb
or
mov
jmp
xchg
shlb
sbb
pop
aam
jmp
mov
imul
repz
es
xor
leave
cli
gs
and
mov
or
notb
add
sbb
dec
add
sub
fucomi
fmuls
or
add
leave
mov
test
cmc
frstor
lock
dec
sub
mov
rolb
lock
or
lock
test
loop
mov
cmp
jg
pop
sbb
push
neg
inc
inc
jle
push
es
mov
sub
nop
setae
cmp
jno
mov
adc
inc
and
jg
add
call
pop
and
ret
lods
lods
loopne
dec
xorb
hlt
adc
or
repz
ud2
dec
mov
or
fisubrs
insb
jg
imul
pop
mov
mov
or
pushf
ret
fistpl
jp
out
and
arpl
int3
xor
cmp
mov
or
clc
push
andb
outsl
wbinvd
iret
xchg
fsubrl
xor
fnsave
or
stos
insl
sbb
in
aad
jmp
push
or
and
push
or
nop
mov
insb
push
cmp
data16
push
mov
fmull
mov
push
push
es
and
adc
sub
xor
push
cmp
xor
inc
pushf
sarb
and
or
jnp
push
lock
out
adc
orl
std
mov
and
xor
lahf
adc
or
push
in
loope
cli
push
and
lea
push
adc
lods
or
pop
xor
sbb
sbb
jo
or
push
pusha
cwtl
push
adc
shll
or
ljmp
push
mov
cmp
jl
cmp
jle
cmp
add
mov
or
pop
sub
je
add
ds
mov
inc
std
xchg
adc
cmpsb
cmp
mov
repz
xor
je
cmp
je
push
filds
jne
and
into
mov
int3
or
dec
test
or
ss
and
add
movsl
sbb
nop
sub
add
or
sbb
sbb
add
adc
cmp
jl
sbb
add
inc
loop
mov
jl
orb
jmp
in
add
sbb
jge
sub
je
jp
xor
rol
adc
add
inc
mov
icebp
or
push
adc
pusha
rorb
stos
sbbb
push
les
fisubrs
aam
and
movsl
and
inc
mov
test
jno
dec
mov
cmp
sbb
xchg
or
add
xor
sub
pop
sub
loopne
mov
ficoms
inc
popf
clc
pop
pop
mov
inc
addl
sub
rorl
pop
push
push
pop
dec
sub
mov
incb
push
add
add
xchg
adc
loopne
test
inc
stos
mov
pop
mov
add
xchg
mov
mov
mov
dec
or
pop
or
jb
cmc
inc
les
sbb
or
dec
das
ret
jb
xchg
pusha
jo
xchg
jo
lods
mov
mov
push
or
pushf
or
xor
into
ror
inc
inc
dec
inc
das
or
sbb
and
sbb
add
pop
adc
lods
sub
or
push
pop
mov
js
pop
pusha
fs
or
sti
ds
js
and
cmp
cmp
scas
mov
dec
jge
xchg
fwait
xorl
imul
aam
test
add
dec
add
inc
insb
adc
mov
and
jo
or
adc
push
roll
adc
push
jle
mov
mov
xor
push
or
rol
mov
adc
mov
leave
push
inc
pop
aam
fwait
outsb
add
lret
and
and
xor
out
xchg
subb
pop
or
nop
pop
rclb
jecxz
notb
pop
cmp
inc
test
inc
and
test
sbb
outsl
push
outsl
fadd
popl
jp
les
cmp
mov
flds
icebp
insb
imul
popa
xor
das
cmp
add
dec
and
inc
ds
test
sbb
jle
seto
jmp
and
addb
push
out
popa
adc
add
fwait
adc
pop
fisttps
stc
cmpsb
inc
pop
cmp
jmp
inc
jl
fucomi
mov
gs
daa
mov
mov
shlb
sub
popa
add
jo
pushf
cwtl
sub
or
iret
es
ret
stos
das
add
imul
mov
ret
mov
insb
sbb
mov
lea
pop
adc
outsl
stos
loope
movsl
insl
xchg
mov
sbb
or
adcb
adc
xchg
sahf
adcl
sbb
sbb
xchg
fdivrs
mov
ss
mov
or
mov
inc
insb
outsb
pop
clc
and
daa
je
cmp
or
jg
pop
push
rclb
or
push
and
mov
adc
movups
fistpl
push
and
and
mov
je
mov
jle
dec
add
and
lods
xor
dec
jl
popa
pop
mov
xchg
mov
jne
mov
pop
push
push
repnz
jmp
and
pusha
or
jne
mov
je
fucom
and
enter
or
insb
addr16
fisubl
xor
inc
fdivrs
add
mov
daa
mov
jmp
xor
sub
lea
sbb
mov
cmp
enter
jecxz
out
stos
and
adc
movsl
xorb
fs
adc
es
xor
mov
mov
pushf
test
cwtl
add
fwait
sub
mov
add
ja
lret
add
add
xchg
add
aaa
mov
cmpsl
or
push
shr
xor
push
mov
mov
repz
fdiv
roll
js
rcl
sbb
cs
lea
or
push
nop
sub
push
xorl
add
pop
lret
or
adc
xor
pop
cmp
jl
clc
push
hlt
jg
mov
xchg
int3
and
cltd
sbb
pushf
xor
pusha
pop
and
mov
out
sbb
adc
rorl
push
dec
sub
mov
shrb
pop
subb
lret
cld
repz
sub
icebp
or
sub
lea
inc
pop
repnz
mov
adc
or
dec
mov
rol
adc
test
xor
aas
popl
mov
imul
std
mov
cmp
push
adc
call
mov
mov
jae
lock
mov
je
and
addb
cmc
add
xchg
aam
rcl
push
ret
lods
xchg
push
pop
sbb
sahf
jne
add
stos
lret
pop
shlb
or
inc
adc
scas
inc
add
mov
adc
pop
or
sub
adcb
jmp
add
int3
jecxz
fisubl
cwtl
push
adc
inc
out
or
jmp
adc
pop
xor
pushf
lods
mov
add
pop
push
mov
push
and
jo
mov
jmp
or
push
stos
pusha
xchg
mov
lret
test
inc
lcall
js
xor
sbb
mov
ret
push
push
adc
fstl
inc
sbb
shr
jmp
in
hlt
and
cmpb
outsl
add
cmp
pushl
jae
jns
inc
xchg
and
push
jns
iret
call
nop
fimuls
je
jo
hlt
inc
shlb
sub
loope
cmp
xorb
incl
and
in
sub
movl
testl
sub
and
popa
sbb
xor
inc
loope
sub
push
fdivrs
addl
je
fldl
push
imul
dec
in
cmp
adc
jne
out
stc
jns
divb
or
jne
push
js
lahf
or
jne
or
aas
std
imul
fstpl
adcl
out
jmp
pop
shrl
mov
test
mov
cmp
mov
or
mov
aam
arpl
test
lea
fstl
jecxz
sbb
fsubs
lahf
shlb
mov
push
xchg
and
mov
add
out
lea
sub
pop
xchg
rcrl
add
dec
or
pop
sti
jg
in
dec
push
add
jl
add
cwtl
lcall
ds
adc
jbe
inc
jne
fnstsw
cmc
shl
mov
jne
push
rcrb
inc
push
sub
mov
loop
mov
loopne
sti
movsl
pmaxub
or
out
push
lcall
das
jns
test
inc
sbb
sub
or
adc
dec
or
pop
je
dec
add
jge
add
jb
push
gs
fimuls
test
aam
movsb
lahf
or
push
jbe
imulb
mov
ficoms
cltd
rorb
adc
sub
adc
add
dec
mov
orb
enter
sub
mov
and
mov
add
mov
or
ret
inc
in
hlt
rclb
push
sub
cmpl
call
addb
in
push
add
pop
mov
mov
pop
jnp
adc
rcrl
xor
or
or
push
flds
addl
mov
or
pop
andb
lcall
movsl
and
add
int3
test
sbb
insb
inc
sbb
fwait
or
add
leave
imul
or
mov
sbb
imul
push
or
jno
fs
mov
add
iret
pop
cltd
imul
push
pop
push
enter
fstpl
xadd
mov
int3
dec
push
lret
dec
dec
cmc
imul
xchg
xchg
or
or
inc
es
xchg
or
and
loopne
les
fucom
imul
addr16
cmp
adc
add
jne
pop
add
dec
xor
xor
mov
mov
mov
xchg
fisttpll
pusha
mov
and
push
add
xor
pop
xor
add
imul
add
cmpsb
push
sub
arpl
cmpb
or
pusha
cmpl
lods
xchg
add
and
xor
cmpsb
ret
cli
or
mov
add
outsl
cmp
lret
ja
mov
lods
push
and
mov
lock
or
fstpl
ficompl
int3
xor
cmp
pop
mov
cmpsb
jmp
jg
adc
xlat
add
adc
fs
add
add
xchg
je
je
push
movsb
mov
js
addl
cwtl
mov
cmp
jl
enter
je
inc
xor
stos
inc
or
and
and
add
stc
popa
jo
pusha
clts
jmp
rcr
dec
data16
cli
push
push
mov
jne
push
push
and
mov
mov
adc
add
in
adc
dec
daa
adc
cltd
scas
in
or
movsl
jne
fnstenv
add
insl
insl
rclb
dec
inc
pop
aaa
cmp
das
ret
cmp
sbb
lods
dec
xchg
pop
fmull
lods
shrl
fldenv
or
xchg
and
lahf
pop
sub
ljmp
sub
testl
push
adc
andb
test
cmpsb
mov
pop
adcl
add
outsl
repz
out
add
jne
xor
push
adc
repz
and
data16
neg
and
pop
loope
mov
xor
mov
decl
xorl
cwtl
cli
inc
add
insb
sbb
outsb
mov
mov
loopne
sbb
push
out
xor
add
adcb
in
or
xor
jbe
addb
movsb
inc
clc
cmpsl
add
mov
cmp
cmpsl
inc
or
push
mov
pushf
mov
jle
lcall
or
sub
and
jne
clc
inc
aad
sub
lods
jb
subb
mov
push
or
and
rcl
ljmp
sub
and
fmulp
loope
call
fcoml
fistl
fwait
ss
fwait
bound
xchg
sub
xor
pop
cmp
push
mov
xor
fwait
in
ss
cs
sbb
add
and
pop
movsb
adc
push
stos
push
pop
and
stc
outsb
mov
rep
sbbb
lock
adcl
add
stos
jnp
ret
cmpsb
aad
outsb
inc
pushf
inc
fisttpll
sar
inc
adc
pushf
test
mov
cs
jo
cmpsb
pushf
add
mov
les
or
pop
mov
adcb
enter
sub
sbb
inc
adc
mov
mov
pop
fmuls
mov
push
or
ja
fists
inc
lods
adc
das
jecxz
sarb
sbb
aam
dec
xor
push
in
or
add
lods
push
cmpb
sbb
lods
add
sub
fimull
mov
movsb
pop
sub
setge
nop
pop
xchg
insb
adc
or
push
xchg
xor
andb
fmuls
movsl
sub
stos
dec
shld
movsl
loop
xor
popf
negl
pop
xacquire
inc
sbb
sub
push
xchg
mov
movsl
mov
mov
adc
inc
cmpsb
push
add
sub
inc
fmuls
pop
or
inc
pop
xchg
syscall
and
adc
add
or
ss
pop
int3
sub
push
mov
cmp
pop
test
xor
fistpl
push
mov
or
lock
lock
mov
and
imul
add
pop
or
jne
in
xchg
push
xor
stos
mov
inc
add
mov
pusha
pop
loop
adc
outsl
and
sbb
add
cs
call
lahf
add
push
sbb
xor
push
pop
xor
popa
data16
rclb
mov
cmp
mov
cs
loopne
add
or
out
or
in
fldenv
adc
pop
add
je
add
bound
loop
push
ret
mov
stos
cmpb
mov
xor
stos
dec
mov
lods
roll
lock
inc
mov
pop
test
sti
pushl
enter
cmpsl
out
push
test
push
out
push
lea
rcl
add
jmp
jle
mov
repz
cmp
push
repz
ljmp
mov
inc
ss
daa
or
lock
add
mov
dec
or
jae
adc
adc
loopne
push
adc
ret
dec
dec
jp
adc
es
jne
inc
stos
push
cmp
push
xlat
mov
push
fadds
adc
and
fnstsw
mov
inc
add
xor
pop
fcomps
inc
lcall
or
pop
aas
adc
sub
and
sbb
add
jo
clts
add
push
test
mov
lcall
cwtl
inc
fst
xor
and
push
icebp
call
sbb
dec
push
mov
test
push
movsl
adc
stos
push
push
mov
das
add
dec
mov
aad
add
pop
fidivs
pop
mov
add
out
aas
mov
add
pop
ljmp
outsb
and
jne
loop
addb
adc
sub
xchg
jo
jmp
pop
jle
rcrb
jbe
xchg
mov
dec
cld
adc
and
sub
test
adc
pop
aaa
xchg
adc
lret
add
rol
add
popa
rorb
inc
pop
scas
jne
rolb
stos
add
xchg
dec
xchg
negl
or
je
add
add
movb
sub
mov
pop
ja
add
ds
inc
cwtl
in
and
insl
and
or
ds
hlt
lods
adc
insl
test
pop
mov
jmp
sbb
lods
ja
in
test
mov
or
cmp
sbb
mov
pushl
mov
mov
lcall
addb
inc
sbb
pop
pop
add
decb
dec
repz
xor
push
mov
push
xor
add
xchg
mov
sarb
mov
dec
sub
imul
cmp
pusha
inc
push
or
mov
repnz
or
add
mov
dec
push
in
inc
mov
dec
nop
push
cmp
es
push
pushf
jmp
pop
xor
pusha
aad
call
pop
jb
addb
jo
inc
loopne
test
or
adc
mov
push
mov
xor
inc
stos
adc
xor
imul
xor
enter
or
or
stos
cwtl
rclb
push
add
sub
mov
push
test
mov
add
test
xchg
sbb
or
jo
adc
daa
outsb
popf
adc
inc
sbb
and
cltd
ror
pop
cmc
sbb
sbb
ret
add
sbb
add
inc
push
adc
in
pusha
pop
gs
cmp
add
jp
mov
or
and
and
imul
and
add
pop
je
sub
inc
std
cmc
insl
and
and
fldl
test
lea
negl
testb
xor
mov
pop
sahf
cwtl
and
push
sub
and
sbb
insb
test
and
shlb
and
add
xchg
jmp
pop
adc
scas
sbb
cli
imulb
push
sti
inc
ja
pop
gs
xor
adc
mov
insb
imul
sbb
rcrl
adc
mov
mov
gs
or
jb
lcall
adc
xchg
sbb
mov
test
sbb
outsl
push
cmp
dec
popa
or
dec
mov
and
jb
xor
jge
xchg
mov
adc
or
mul
inc
fsts
adc
fsubs
inc
dec
mov
jnp
sbb
orl
gs
xchg
xchg
jge
lods
orb
mov
std
inc
adc
jae
xor
sub
cmpsl
xchg
sbb
mov
add
fisubs
cs
xchg
xchg
or
adc
and
add
jmp
xchg
add
mov
add
sti
cli
add
jmp
push
int3
push
into
sar
push
sbb
add
and
in
inc
push
enter
mov
inc
pop
movl
sbb
mov
jo
popl
cld
inc
adc
dec
cmp
sbb
pop
popa
inc
bound
ja
pop
push
adc
add
mov
inc
jle
add
inc
adc
inc
pop
sbb
dec
push
hlt
sahf
mov
aas
or
cli
mov
xorb
sbb
fcoml
js,pt
xor
dec
ja
push
ret
jp
repnz
cli
std
negb
outsb
pop
ds
jp
dec
or
mov
shr
in
enter
cld
xor
push
fmull
jb
mov
cmpsb
or
and
jb
inc
pop
outsb
arpl
add
or
mov
stc
add
and
int3
xchg
lods
test
xchg
repz
cmp
jae
mov
nop
inc
add
inc
cmp
pop
jp
in
outsb
inc
add
push
xor
xchg
jge
adcl
and
add
imul
jo
push
cwtl
rcrb
pop
add
pop
xor
adc
jbe
inc
cmp
dec
and
mov
or
dec
aam
or
and
inc
sub
or
pop
lcall
rolb
ret
push
pop
mov
mov
rolb
mov
cmp
je
das
adc
cmp
add
andl
scas
push
add
rorb
fcomps
pop
xchg
fsubs
mov
sbb
test
ret
inc
roll
push
mov
sbb
mov
pop
sub
cmp
das
cmp
mov
std
dec
ds
js
cmp
xor
setae
push
pushf
shll
pop
cmc
dec
jmp
mov
adc
fs
inc
adc
pusha
xor
push
and
cltd
sub
adc
popa
mov
add
fcoms
pop
shlb
loopne
dec
sub
mov
fstpl
fldl
xchg
mov
fnstsw
test
je
and
add
ss
xchg
inc
shrl
xchg
jmp
add
adcl
and
outsb
pop
movsb
leave
jo
fstpl
and
insl
pusha
adc
mov
dec
sbb
cli
fbstp
xchg
sbb
and
pop
fsub
pop
fsubrp
jmp
stos
or
inc
xor
add
mov
push
outsb
clc
jns
jno
insb
idivb
pop
add
and
lret
stos
xor
push
shlb
add
xchg
adc
fwait
cmpsb
std
sti
sub
dec
je
add
es
adc
data16
cmp
mov
fmull
adc
mov
repz
sub
dec
push
sbb
push
push
outsb
push
or
inc
xor
and
xor
stos
cmp
stc
push
jb
adc
aaa
push
sbb
iret
dec
sub
out
int3
add
int3
scas
add
push
jns
movsl
or
sbb
ss
fiadds
mov
mov
sbb
in
int3
in
rorb
add
and
leave
out
mov
push
xchg
pop
adc
lea
ja
mov
aaa
dec
pop
cs
push
nop
mov
jns
je
jae
inc
mov
pop
push
stc
push
push
dec
mov
nop
out
and
push
push
cmp
adc
adc
hlt
and
and
sbb
or
lods
add
and
aas
in
sbb
or
push
nop
out
sbb
sub
cmp
ret
dec
push
xor
pushf
xor
pop
push
loopne
icebp
out
adc
push
pop
cmp
mov
ret
jb
and
dec
push
mov
inc
add
pop
fdivl
add
pusha
push
pop
cli
xchg
push
lock
sub
or
cmp
cltd
or
dec
ss
xor
fs
imul
adc
das
jns
enter
sysexit
pushf
mov
cmp
adc
sbb
sahf
pop
repnz
adc
sub
or
or
out
pop
in
or
lret
inc
sbb
punpckhbw
sbb
iret
vmwrite
push
push
in
and
fistpl
inc
pop
or
lret
mov
je
aaa
repnz
repnz
cmp
mov
mov
inc
sahf
pop
sbb
and
in
add
xchg
fdivl
push
scas
add
jae
jmp
jns
mov
aad
testl
xor
sub
dec
pop
repz
rep
jg
enter
ds
ljmp
out
sahf
cmp
pop
outsl
adcb
sbb
sbb
sbb
sahf
out
out
sbb
out
out
pop
outsb
nop
jg
inc
jbe
cmp
inc
lock
xor
adc
add
xor
imul
test
and
ret
shlb
mov
fstl
std
out
icebp
cltd
push
push
mov
fs
stc
xor
xor
pop
cmc
sbb
jmp
ja
fwait
xor
sbbl
cmp
sub
mov
push
xor
adc
cs
pop
or
sbb
xchg
call
push
pop
and
fsubrs
fs
pop
shld
call
xchg
and
xchg
gs
push
or
dec
adc
adc
or
es
aaa
push
xor
inc
mov
or
add
dec
adc
iret
rolb
mov
add
or
pop
sbb
inc
sti
call
sbb
lods
push
orl
daa
mov
pop
mov
adc
shlb
rcll
push
aad
aam
dec
push
mov
fists
in
in
or
mov
out
add
push
out
sbb
mov
sbb
push
cwtl
clc
sbb
xor
jle
mov
jae
loopne
mov
pop
aam
add
cs
jle
add
mov
jnp
push
sbb
int3
xor
in
sbb
sbb
pop
loopne
call
call
mov
inc
call
push
push
mov
int3
adc
xchg
or
icebp
in
mov
enter
push
aas
loope
push
ds
push
push
fs
out
inc
int
add
test
adcb
or
out
sbb
mov
dec
rcll
aam
lea
push
push
pop
xlat
stos
xchg
sbb
in
rcrb
add
sbb
mov
pop
enter
mov
and
push
push
sub
or
mov
or
or
cmp
xor
or
add
pop
adc
sbbl
rcll
sbb
loopne
pop
popf
push
ret
cmpsl
or
mov
cmpsb
fs
stos
les
lock
fwait
push
mov
repz
pop
xor
cwtl
cmp
in
call
sbb
mov
jo
cmpl
mov
jmp
push
push
fdivs
jge
sub
dec
adc
or
push
mov
and
sub
and
adc
dec
mov
adc
lret
ds
add
push
mov
mov
and
ret
les
xor
sbb
mov
in
add
xchg
call
pop
adc
adc
mov
jne
lods
ret
adc
cmpsl
jo
inc
repnz
and
ret
sbb
adc
jno
inc
add
adc
addb
pushf
xorb
adc
push
stos
or
mov
pop
push
cld
dec
and
jne
dec
sub
or
sbb
fs
push
push
dec
lcall
and
lock
or
sbb
inc
or
add
mov
orl
adc
rorl
sub
loopne
xor
sbb
stos
mov
fcoms
jne
inc
sub
jo
jl
and
bt
bound
sbb
pusha
stos
andb
mov
cmp
mov
add
add
js
iret
mov
nop
add
das
push
mov
lret
add
pop
fistps
daa
std
pop
xor
adc
sub
xor
mov
pusha
repz
jmp
cmp
push
push
leave
or
sub
add
push
adcb
addb
ds
push
andb
cltd
add
jg
out
pop
enter
push
or
pushf
dec
adc
add
mov
nop
xchg
sbb
pop
inc
push
cmp
andb
xor
mov
cmp
inc
lea
mov
push
pop
add
setl
mov
mov
inc
push
loope
dec
sbbl
movsb
sub
es
leave
add
inc
mov
dec
push
shl
mov
xor
pop
pusha
push
and
push
inc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
xor
pop
jne
mov
sub
xchg
adc
lods
inc
xor
ja
xchg
sub
jecxz
add
inc
adc
in
add
mov
sbb
enter
add
add
add
add
sar
dec
or
pop
imul
cmp
inc
or
add
push
jnp
or
fsubrs
or
mov
pop
cmp
or
bound
and
pop
mov
add
mov
cwtl
or
lods
pop
add
cmp
and
rol
adc
sub
add
adc
inc
ds
adc
cmp
mov
fnsave
jge
adc
mov
je
add
push
mov
push
in
cmp
test
and
push
adc
or
enter
dec
cltd
test
inc
mov
push
pusha
add
rorb
scas
pop
adc
inc
daa
stos
aaa
cltd
dec
shlb
pop
cmp
pop
stos
add
rcrl
mov
adc
dec
sbb
rclb
int
inc
aam
rorb
xchg
push
xorl
scas
xor
sbb
mov
push
shr
pushf
lea
jl
cmp
mov
mov
movsl
pop
push
insl
repz
mov
jne
fldl
pusha
or
sbb
xor
lock
dec
daa
xchg
fistpl
sbb
sbb
dec
ret
jecxz
add
clc
shlb
jp
add
test
add
shll
xchg
ret
pusha
sub
cmc
and
pop
dec
push
push
sbb
adc
xchg
adc
js
mov
lea
icebp
sub
movnti
inc
ficoml
pop
or
dec
std
add
call
or
sub
dec
call
push
xchg
mov
fwait
std
nop/reserved
push
test
arpl
pop
xchg
rorb
mov
lea
iret
pop
dec
xchg
data16
add
pop
push
sbb
pop
dec
loopne
jp
cmp
cmp
add
jmp
loopne
fistpl
rcrb
inc
pop
movsb
dec
loopne
shrb
test
add
add
test
ficompl
popa
dec
lock
iret
inc
sub
xchg
faddl
je
addb
daa
mov
pop
push
out
inc
icebp
jno
add
lcall
push
sub
fwait
subb
sbb
not
mov
lret
add
and
call
sub
fsubl
dec
add
pop
and
mov
pop
mov
inc
cmp
mov
jl
xor
jmp
cmp
jl
or
sbb
popa
std
pop
imul
shll
pop
mov
aas
xchg
lock
add
inc
jmp
movb
mov
push
pop
cltd
outsl
pushf
adc
idiv
sub
loop
mov
pop
xor
test
repz
hlt
inc
adc
movsl
lods
pop
sub
sbb
xor
mov
and
inc
adc
jp
out
xchg
test
or
xchg
pop
andb
pop
lds
jmp
xor
orl
sub
in
in
xchg
out
xchg
jl
hlt
incb
test
or
add
lret
cmp
push
sub
in
dec
fsubl
daa
cmp
and
adc
nop
fsubrs
push
push
push
mov
outsb
add
sbbl
loop
jg
out
idivb
and
mov
sub
loop
lret
lea
les
ljmp
or
push
inc
xchg
popl
mov
pop
call
leave
mov
xrelease
jo
gs
clc
dec
mov
enter
pop
inc
lahf
je
cmp
dec
lcall
pop
test
or
dec
mov
and
jns
xchg
cmpsb
and
mov
lock
fsubrs
adc
mov
or
lods
movsb
shr
add
and
in
dec
xchg
xchg
fs
cmp
sbb
mov
cltd
fs
or
add
stos
popa
jno
mov
iret
mov
push
push
movsl
and
imul
fildll
pop
push
push
test
jg
push
cmp
in
imul
sbb
rclb
mov
jp
rorb
repnz
out
sub
dec
sbb
es
fsubr
nop
push
xor
cmp
mov
and
aam
mov
aam
pop
add
pushf
mov
aam
rcr
pushf
mov
and
sbbb
cmp
jns
xor
rolb
jp
loopne,pn
test
sbb
adc
jbe
and
or
lret
in
mov
sub
inc
gs
in
pop
sub
daa
dec
call
push
inc
es
insb
movaps
mov
jge
xchg
sub
insl
xor
inc
cmp
add
nop
dec
push
nop
pop
mov
sbbb
cmpsb
sbb
sbb
inc
add
xorl
lods
adc
es
xchg
mov
jl
enter
push
fucomp
mov
cmp
imul
xor
je
xchg
in
sub
dec
imul
subb
iret
mov
imul
mov
push
push
bound
or
cmpb
push
sbb
dec
mov
cltd
xchg
sub
pop
mov
in
cld
sub
mov
sbbb
and
pushf
mov
push
add
or
adc
adc
outsl
hlt
jecxz
aam
nop
jbe
jb
adcl
mov
mov
rclb
ret
mov
cmc
stc
push
adc
xor
pusha
add
pop
mov
or
add
and
lods
push
or
enter
pop
push
rcrb
sbb
aad
div
or
sbb
mov
cwtl
mov
in
add
fnstsw
mov
add
adc
add
jmp
sbb
cmp
loopne
or
xchg
out
test
or
xor
push
push
mov
pop
ret
adc
imull
rol
popf
in
push
xor
in
xor
push
jge
mov
push
pop
sti
mov
stos
mov
out
sub
jmp
sarb
addr16
adc
in
dec
and
push
cwtl
stos
push
and
inc
pop
push
jns
inc
adc
adc
iret
rorb
ret
into
imul
inc
sbb
loopne
jo
push
dec
loopne
dec
and
pop
cmp
adc
adc
in
or
cmp
push
mov
sahf
mov
subl
push
dec
inc
xchg
ds
movsl
adc
js
xor
adc
sub
mov
xlat
and
dec
xor
ss
daa
les
add
jb
or
sbb
add
xor
sub
sub
or
adc
mov
add
xchg
fldcw
push
adc
push
jo
jmp
push
push
inc
add
gs
imul
mov
pop
scas
dec
gs
int
cmpsl
mov
mov
rcrb
add
pop
pop
pop
push
xchg
sub
xor
mov
add
shrl
cmp
dec
sbbb
sarb
scas
and
xchg
sbb
daa
sub
pop
adc
mov
cmpsb
fstps
cmp
xchg
fsubs
inc
add
sbb
mov
mov
cmc
push
lea
xor
notb
pop
ja
ss
mov
loopne
inc
cwtl
or
fildl
and
jmp
mov
shll
push
shrl
pusha
add
js
add
jmp
std
pop
jnp
icebp
inc
inc
hlt
lds
adc
jp
push
aam
add
mov
repz
mov
int3
outsl
add
pop
outsl
imul
flds
or
xor
or
pop
mov
xchg
inc
cmp
mov
adc
xabort
loop
adc
ds
xchg
iret
add
or
pop
movsb
lret
out
stos
and
sub
or
pop
and
jno
add
lds
xchg
xchg
xor
push
cmp
dec
fiaddl
pandn
jl
jne
cmp
stos
mov
push
loopne
push
sbb
mov
sarb
cli
or
mov
out
es
add
xchg
push
and
and
mov
mov
push
mov
and
dec
push
sub
mov
testb
int3
jo
dec
stos
jecxz
lahf
popa
dec
push
or
adc
and
inc
lahf
test
mov
dec
xor
fmull
notl
pop
cmovae
outsl
shlb
xchg
dec
add
int3
popa
dec
xor
jne
movl
aaa
push
int3
adc
addl
js
lret
add
js
mov
or
outsl
testl
dec
fadd
jns
sbb
cltd
lods
or
and
sbb
push
ss
outsb
or
das
lds
dec
inc
pop
add
stc
adc
movsl
aam
imul
call
xchg
xorps
fnsave
sbb
push
repnz
out
stos
add
rcl
sbb
mov
sbb
lcall
and
andb
pop
int
test
sbb
lods
imul
cmpsl
push
sbb
call
xor
mov
sub
push
adc
push
lret
cwtl
mov
add
push
test
ds
adc
add
daa
xchg
sbbb
fcoml
movsb
loope
or
inc
cmp
popa
aam
fistpl
add
lret
loopne
inc
call
popf
or
inc
ret
push
shrb
sub
sbb
ja
mov
or
jecxz
pop
daa
jge
jp
pop
cmp
cmp
repnz
lods
pop
mov
rorl
cmp
xchg
sub
pop
cmp
push
cmp
in
cmp
cmp
sub
pop
sub
cmc
pop
cmp
in
xchg
sti
adc
pop
and
int
test
mov
xor
cmp
add
cwtl
and
scas
jne
mov
add
or
pushf
add
dec
adc
pushf
mov
push
add
mov
or
int3
test
movb
or
jo
rorb
cmp
repz
xchg
jle
aam
loopne
dec
inc
mov
add
lret
mov
cld
jl
cmp
jne
shlb
je
xor
aad
dec
xchg
mov
jb
add
daa
sbb
scas
jb
and
mov
nop
test
roll
movsl
insb
mov
leave
test
adc
lea
pop
add
in
fwait
add
inc
add
jo
mov
daa
popf
fs
shr
add
push
mov
call
loopne
xor
loope
clc
adc
lret
sbb
jo
or
nop
adc
push
push
mov
dec
repz
sub
sarl
popf
add
mov
and
out
pop
add
sbb
int
add
sti
cmp
imul
lds
xchg
cwtl
clc
in
pop
outsb
cwtl
inc
sbb
or
mov
dec
roll
dec
clc
es
hlt
dec
push
rcrl
repnz
dec
test
cmp
aam
dec
js
es
pop
or
sub
push
pop
test
mov
dec
pushf
arpl
daa
pop
inc
sub
data16
adc
add
xor
mov
mov
ret
popa
sbb
fsubs
cmp
int3
adc
aam
push
fwait
adc
loopne
cmp
mov
push
push
nop
nop
aam
adc
add
mov
imul
sbb
jns
and
xchg
mov
and
out
and
pop
mov
rol
lods
pop
in
and
dec
popa
jge
incb
push
push
push
daa
xchg
out
add
pop
adc
xor
pop
es
add
lock
pop
and
fstl
movsl
mov
or
loop
add
cwtl
mov
int
test
shrl
mov
fldl
jle
dec
decb
mov
or
cmp
xchg
add
aam
or
ret
test
fdivr
xor
push
jbe
xor
xchg
lcall
add
shll
or
push
push
and
daa
push
test
sbb
rclb
sub
imul
lock
jne
jp
sbb
push
xlat
arpl
sub
test
jle
push
jo
push
pop
in
inc
sti
loopne
push
mov
fcompl
add
push
add
jbe
jb
or
nop
xchg
xchg
fwait
pop
bound
xchg
test
cmpsl
or
fsub
fistpll
add
fwait
jle
fs
cmp
addl
adc
push
inc
js
add
cmc
dec
in
xchg
jl
dec
in
mov
push
adc
push
mov
and
add
inc
cmp
jae
mov
adc
call
mov
rclb
mov
jmp
sbb
std
dec
inc
mov
imul
arpl
popa
gs
sbb
fmull
inc
jbe
fsubs
jp
loope
xchg
pop
idivb
and
scas
sub
lea
or
and
jbe
ret
push
push
mov
pop
out
add
leave
pop
mov
mov
push
xchg
test
adc
or
aad
sbb
jge
popa
mov
mov
lahf
dec
popf
and
nop
stos
test
push
push
push
insl
and
sub
pusha
pop
add
or
cmp
push
sub
dec
out
cmp
leave
mov
int
jnp
shlb
add
add
xor
jns
imul
inc
mov
or
and
ret
adc
mov
inc
mov
pusha
and
cmp
or
cmp
add
adc
push
addl
or
test
sbb
push
gs
iret
ds
cmp
xor
aaa
add
mov
shrl
test
add
std
mov
fnstsw
pop
or
add
incb
pop
mov
inc
repz
adc
and
and
push
and
test
rolb
xchg
sbb
adc
mov
jne
int
xorl
pop
call
das
jno
sub
je
sub
into
pop
or
add
dec
xor
rorb
jl
mov
and
or
ss
push
pop
pop
or
fs
ja
push
rolb
fs
push
cmp
fsubs
cmpb
sub
and
dec
cmpsb
push
push
and
lret
nop
inc
pop
cmp
mov
mov
pop
ret
xchg
andb
incl
pusha
pop
ja
mov
add
mov
jnp
push
pop
mov
fisubs
pop
mov
aas
cltd
add
push
addb
mov
bound
sub
hlt
xor
dec
add
mov
xor
sbb
pop
outsb
lret
cli
js
sub
rcll
push
mov
in
or
push
mov
movsbl
or
mov
adc
inc
jns
inc
mov
sbb
repnz
dec
sub
in
and
add
sub
or
add
cmpsb
fwait
sbb
adcb
inc
inc
add
mov
lods
leave
add
mov
addb
mov
push
mov
jge
or
rorb
pushf
pop
pop
adc
mov
mov
xchg
and
adc
sub
and
lods
fisttpl
loop
lret
dec
adc
pusha
test
xor
and
jb
mov
push
mov
dec
adc
loopne
shll
stc
sub
push
adc
test
fs
test
ficoml
shll
add
ret
adc
rclb
xor
dec
ret
test
inc
push
pop
movsb
sub
pop
loop
jmp
adc
push
int
sbb
scas
lret
push
or
out
lods
add
sbb
cmp
repz
push
call
and
or
add
std
or
or
aad
cmpsl
test
add
mov
mov
loopne
inc
dec
sub
mov
xlat
cmp
push
xor
inc
faddl
push
sub
pop
outsl
cmp
dec
js
cs
and
add
jbe
adc
cmpsb
add
xor
icebp
add
sub
adc
loop
and
pushf
or
inc
int3
daa
jno
jo
shlb
or
dec
je
push
jo
lock
loope
imul
lods
mov
rcll
push
jge
ret
daa
cmp
jbe
aam
inc
push
or
pop
dec
aaa
jmp
sub
adc
push
cmp
aas
jbe
lcall
mov
cld
rorl
or
mov
cwtl
xor
push
mov
and
or
rclb
sub
ljmp
fnsave
push
cmp
and
or
xchg
and
insb
mov
pusha
nop
and
adc
aad
inc
dec
lods
mov
aaa
and
mov
push
jnp
cwtl
int
dec
or
adc
les
sbb
push
xlat
es
and
ja
imul
push
dec
cmp
jno
add
outsl
or
jae
jmp
adc
enter
xor
add
push
sbb
daa
adc
or
int
xchg
in
xchg
mov
and
xor
inc
xchg
and
sti
fcomp
xchg
mov
push
rcl
dec
dec
mov
lret
in
sub
andb
aam
rcl
push
pop
add
es
push
and
outsl
fs
lods
or
adc
sub
lock
mov
jnp
fmuls
add
inc
push
and
leave
and
xchg
push
dec
push
and
add
push
mov
or
mov
dec
push
cmp
cld
test
mov
mov
mov
lods
xchg
push
je,pt
jnp
pusha
add
addb
stc
andb
inc
add
adc
aas
mov
in
cwtl
add
jne
adc
mov
add
mov
sbb
dec
sarb
mov
cmp
xorb
add
sbb
or
add
dec
xorb
pop
fidivs
fisubs
mov
xchg
mov
aaa
lahf
mov
pop
ret
cmpsb
dec
shrb
dec
push
jne
pop
push
lock
cmp
fdivs
sub
xor
or
mov
addr16
rcrb
fisubs
cld
leave
mov
les
das
and
or
sbb
mov
add
or
mov
lock
push
and
insb
push
sub
gs
js
inc
ss
ret
js
xchg
inc
xor
push
ja
es
cmpsl
xor
push
or
mov
std
insl
outsl
jbe
test
inc
cmp
pop
ljmp
sbb
js
mov
insb
pushfw
inc
mov
push
decl
add
push
mov
sahf
test
xchg
sbb
jl
and
imul
sub
popa
jge
jp
jmp
or
fwait
clc
in
jno
and
ja
or
xchg
mov
and
lock
int3
jne
lea
dec
sub
int3
into
pop
xchg
mov
adc
popf
out
or
or
dec
pop
std
adc
psubw
or
shl
inc
jecxz
movsl
cmp
dec
nop
push
sub
jns
add
loopne
jae
jbe
xor
sti
stos
jne
js
xor
add
pop
lock
cmpl
cwtl
sarb
jno
loop
adc
xor
stos
inc
cmp
aaa
jl
icebp
jb
jmp
adcb
sub
fdivs
and
ret
dec
mov
fsubl
push
ljmp
sbb
popa
xchg
cwtl
ret
mov
and
mov
mov
loopne
divl
xchg
xor
test
fistpll
ficompl
xorb
add
sbb
into
lea
add
sub
pop
jl
or
xchg
aas
shr
push
testb
test
xchg
js
movsl
or
add
lret
or
mov
and
lahf
mov
and
add
ret
jge
fmuls
out
sbb
and
ret
jae
pushf
adc
data16
push
mov
and
and
xchg
std
cs
sub
pop
inc
aam
push
or
adc
clc
adc
inc
xor
or
mov
mov
and
inc
inc
pop
insl
mov
push
insl
adc
and
idivb
or
xor
xor
mov
rcrb
push
and
pop
sbb
popa
jbe
fdivrs
cmp
pop
inc
les
cmp
inc
ss
clc
leave
test
or
cmp
je
and
dec
ljmp
sarl
loopne
and
push
xchg
mov
std
mov
or
shlb
jbe
movsb
adc
cmpl
pushf
and
cwtl
loopne
ret
fildll
out
mov
scas
dec
sbb
xchg
adc
test
push
mov
repz
ror
aam
cmp
mov
add
push
or
xchg
add
mov
add
push
push
sub
fldenv
xchg
push
les
sub
sbbb
jge
jb
cmpsl
scas
cmpl
add
lods
pushl
lea
fstl
xor
popa
fwait
sarl
lea
sub
or
aad
pop
add
push
fstps
mov
sbb
roll
scas
in
ret
and
lea
enter
mov
jno
push
addl
ss
cli
cmc
incl
sbb
repnz
add
faddl
fsubs
shld
faddl
and
or
mov
pusha
xchg
and
test
xchg
or
leave
or
repnz
fcoms
lods
xor
sahf
inc
pop
test
clc
add
inc
int
fwait
xor
stos
dec
sub
mov
mov
mov
lods
loop
fistps
mov
xchg
sub
cmp
es
lcall
ja
jo
imul
adc
mov
lods
enter
dec
adc
shl
call
push
and
pop
mov
sub
dec
mov
loope
xor
xor
jge
adc
cmp
jle
pushf
in
sub
mov
adc
xor
out
adc
adc
mov
sub
dec
lcall
push
mov
sahf
lods
dec
icebp
xorl
and
cmp
arpl
nop
ret
mov
adc
mov
push
sbb
inc
push
adc
adc
imul
mov
inc
pushl
je
ficoml
add
mov
mov
shlb
push
cmp
sbb
push
pop
nop
into
mov
add
push
sub
and
sub
jo
int
push
push
out
push
push
inc
pop
fs
xorb
mov
or
popf
shrb
inc
or
push
arpl
cs
rcrb
push
sbb
sbb
push
stos
int3
and
incl
aad
add
push
data16
adc
pop
sub
cmp
out
int3
dec
adc
xor
insb
test
and
add
jb
jl
mov
mov
push
add
fmull
push
dec
xchg
rcl
scas
pusha
adc
or
jmp
mov
or
sahf
orb
movsl
inc
sbb
xor
cld
xor
inc
movzbl
lret
in
jmp
mov
push
test
out
push
mov
push
mov
faddl
dec
dec
sub
out
and
jecxz
dec
and
and
lret
inc
push
sub
xchg
faddl
add
test
xchg
cmpsb
add
cli
add
out
lock
sub
std
mov
adc
dec
and
pop
dec
clc
cli
jbe
cmpl
jne
cmp
jbe
push
or
ficoml
arpl
test
pop
lock
pop
dec
jmp
sbb
shr
dec
or
xorb
sbb
in
loope
mov
test
shll
andb
lcall
outsb
mov
jg
add
add
ret
jle
mov
push
enter
add
sub
ret
add
push
imul
dec
push
in
les
or
inc
pop
cli
cmp
xor
push
mov
lock
leave
mov
add
sub
sub
or
push
ficoml
daa
daa
outsl
popf
test
mov
sub
add
sub
dec
imul
jo
mov
gs
xchg
push
and
hlt
xchg
shll
jne
dec
movsb
add
and
add
mov
testb
xor
shlb
adc
pop
ret
filds
xorb
in
xchg
cmp
add
adc
sbb
sbb
ret
rorl
in
inc
xchg
xchg
pop
adc
xor
icebp
subl
sbb
sbb
push
repnz
dec
mov
adc
fs
lock
nop
jge
mov
repz
adc
out
enter
sbb
cmp
insb
cmp
adc
push
arpl
ffree
mov
cli
sbb
dec
cltd
dec
ljmp
ret
hlt
lea
jbe
es
sti
cmp
adc
andl
test
xor
sbb
out
les
pop
cmp
ljmp
push
lea
ret
cwtl
sub
cmp
stos
and
push
or
mov
loopne
shll
xor
push
orl
aaa
dec
push
cmp
repz
mov
add
pop
and
jnp
ds
movsl
popa
std
ss
add
dec
shlb
enter
adc
fdivrs
insb
gs
cwtl
mov
xchg
sub
ss
xor
mov
aam
test
pop
or
inc
sub
sarl
outsl
lea
push
ret
arpl
repnz
loope
sub
insl
fcmovnbe
push
jmp
sub
repz
mov
mov
cmp
pusha
xor
test
cmp
lea
adc
mov
ja
ss
jne
dec
imul
out
fwait
mov
dec
ja
je
popa
jnp
adc
pop
dec
mov
mov
or
sbb
pop
mov
ret
cli
push
mov
add
sub
in
push
push
dec
cmp
push
mov
pop
mov
add
sub
in
pop
jmp
filds
xorl
sub
test
sub
push
es
mov
jne
lock
cmp
jo
es
inc
sbb
add
push
or
scas
xchg
add
test
or
and
pop
push
movsb
sub
add
sbb
repnz
add
sbb
mov
shlb
or
sbb
inc
inc
gs
add
jno
js
cmp
test
cmpsb
ss
jmp
loope
mov
or
lds
push
call
jne
sub
dec
loopne
xor
insb
sarb
cmp
sub
mov
jecxz
in
adc
mov
xor
sub
push
mov
outsb
jne
lret
sub
sbb
inc
push
stos
xor
sahf
test
xchg
dec
inc
xor
pop
mov
ret
dec
sarl
rorl
sub
xor
js
xor
xor
inc
rclb
add
mov
cld
pop
outsb
or
sub
std
sbb
adc
cs
out
pop
ret
push
jmp
mov
dec
pushw
test
adc
jmp
subl
adc
and
and
mov
scas
cld
and
clc
je
xchg
pop
mov
pop
adc
ret
or
ds
fdivs
or
and
pop
out
out
in
inc
mov
ret
or
push
outsl
ja
jns
push
push
jmp
push
or
push
jns
popf
mov
dec
push
lds
and
add
std
push
push
push
push
call
cmp
inc
outsb
shlb
mov
mov
mov
ret
cmc
xchg
add
cmpsb
mov
jo
dec
psubd
add
loop
or
les
sti
or
dec
add
dec
arpl
pusha
jmp
add
fs
or
or
inc
rorl
inc
js
stos
pop
mov
push
or
add
xchg
adc
pop
adc
mov
inc
mov
popf
addb
push
stos
sti
pop
push
movsl
push
push
push
jae
fdivrl
lock
faddl
or
push
lss
mov
sbb
jo
xor
mov
mov
add
lock
pop
xchg
jo
sbb
leave
popf
aad
cwtl
and
push
mov
addb
imul
test
mov
mov
jg
test
push
and
sub
call
test
sub
mov
push
push
vmread
xchg
enter
xchg
dec
xor
fistl
push
or
insl
shl
push
mov
aad
fmul
pop
xchg
loopne
jmp
insb
push
sbb
push
movzwl
insb
jnp
lock
mov
inc
incb
jl
cmp
pushf
jbe
mov
mov
cwtl
imul
sbb
or
push
xchg
sub
pop
aam
cmp
jns
dec
or
jg
lret
sub
or
pop
test
es
fstpt
cmp
rcll
adc
adc
in
movsl
movsb
aas
xchg
add
add
imul
jecxz
inc
push
lods
fsubrs
rol
insl
mov
repnz
loop
hlt
or
and
lods
pop
cmp
mov
fwait
mov
adc
stc
inc
cmp
fidivrs
stc
sbb
mov
cmp
push
push
cld
mov
out
add
add
mov
pop
mov
sti
rep
movsw
push
dec
cli
add
cld
movsb
mov
push
rol
or
mov
shr
mov
rcll
inc
mov
adc
movb
add
push
lea
mov
jg
push
ret
fldcw
push
bound
add
mov
ss
jge
cwtl
push
push
mov
jns
ja
and
push
cld
je
sub
int3
cmp
popf
xchg
adc
adc
aam
lods
push
jo
xchg
mov
mov
shl
popf
cmp
pusha
mov
sbb
leave
lea
roll
inc
add
mov
or
push
arpl
or
notb
jmp
mov
and
or
adc
sbb
into
pop
fisubl
inc
lahf
xor
cmpsl
push
ficompl
inc
cmp
push
pop
ret
cld
cmc
ss
and
test
mov
pushf
pusha
fwait
adc
faddl
lock
or
hlt
rorb
ret
ja
pop
xchg
inc
sbb
enter
sub
andl
adc
mov
add
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
fwait
fwait
fwait
adc
jmp
and
or
jmp
and
add
xchg
fimull
push
xor
dec
loopne
push
mov
lcall
mov
paddb
xchg
push
out
idivl
repz
pop
xchg
movhps
repz
repz
xor
iret
repz
cmp
push
cmp
repz
pusha
gs
repz
repz
jle
mov
repz
lea
iret
mov
add
and
or
or
push
movups
adc
adc
aam
call
sbb
sbb
push
pop
and
and
aas
int3
xchg
or
stos
mov
adc
jge
in
xchg
adc
out
fimuls
inc
push
push
push
inc
pop
or
pop
pop
add
jne
scas
popf
push
outsb
or
in
dec
popf
lret
or
inc
inc
lea
push
or
fwait
fwait
add
subb
push
xchg
push
dec
or
iret
jbe
add
cmp
adc
or
clc
add
and
pop
push
adc
xchg
cwtl
test
pushf
and
mov
test
add
pop
enter
push
das
inc
sarb
fisubrs
or
xor
inc
jge
xchg
sub
push
sub
add
out
aam
xor
mov
jb
adc
add
inc
or
test
sub
lds
popf
test
push
and
test
jbe
mov
xchg
aaa
or
mov
inc
push
ss
lock
mov
and
cmpb
sbbl
or
icebp
cltd
inc
movsl
xor
mov
orl
andl
fnstenv
cmp
jmp
inc
sub
pusha
push
xor
test
mov
andl
cltd
pop
cmp
test
sahf
ss
cli
mov
push
pop
loopne
filds
jp
or
and
js
fcompl
push
and
ss
xchg
pushf
inc
ja
insl
pop
jmp
mov
jne
and
add
outsl
and
jne
jno
outsl
inc
cmc
into
aas
jo
ss
loopne
movw
xchg
fsubr
or
inc
add
loopne
ret
pop
loopne
dec
inc
mov
imul
push
push
push
mov
mov
jae
sahf
test
lahf
cld
push
clc
xor
lock
je
xchg
in
insb
addr16
clc
data16
push
xor
sbb
clc
adc
sub
inc
cmp
cmp
inc
mov
mov
pop
inc
mov
add
mov
and
and
mov
dec
inc
sbbb
jno
sbb
cli
fnsave
add
popf
addl
push
arpl
dec
xor
mov
xchg
cwtl
and
push
popl
ja
ds
mov
mov
jb
adcb
cs
clc
mov
add
adc
in
pop
inc
xor
subl
mov
push
mov
orl
inc
jno
push
pop
loope
xlat
xorb
push
shr
inc
push
adc
jb
push
rcrb
add
xor
dec
ljmp
dec
in
cmp
adc
push
in
mov
cmp
push
sub
sets
lahf
bound
fwait
shll
fs
xchg
add
pop
push
in
push
sub
ffreep
sbb
mov
call
aam
adc
and
push
adc
xor
inc
dec
mov
xor
sub
push
fisttps
adc
add
rolb
sbb
mov
xchg
je
scas
pop
push
mov
push
push
lods
pop
and
pop
mov
hlt
fs
add
and
cmp
lret
xor
mov
mov
inc
ret
loopne
popa
mov
dec
sbb
sbb
sub
or
jne,pn
and
or
mov
sub
cmp
shlb
xchg
fsubs
and
mov
imul
xchg
ret
imul
jge
call
xchg
fisubrl
inc
in
cmc
dec
outsb
adc
sbb
pushf
sub
addb
test
faddl
mov
rep
push
lret
add
inc
fwait
add
xor
roll
popa
loopne
inc
ret
or
stos
cmp
or
jae
pop
push
jbe
cmp
add
or
push
sub
pop
mov
mov
fsts
or
cltd
jp
xchg
testb
inc
stc
les
cmp
or
jg
push
add
mov
mov
adc
or
push
jne
fimuls
in
insl
adc
push
call
or
nop
push
mov
movsl
mov
and
or
sub
jne
iret
and
sub
add
hlt
dec
sahf
jl
inc
mov
mov
adc
mov
inc
mov
outsb
call
jbe
sbbb
mov
push
xor
pop
dec
inc
pop
inc
leave
inc
or
or
ds
inc
add
hlt
inc
mov
ds
inc
add
pop
add
pop
cmp
call
xchg
push
adc
pop
sbb
inc
push
mov
cmp
and
add
sub
sub
sbb
pop
inc
push
jnp
push
push
cmp
inc
aas
pop
test
pop
dec
push
push
push
xchg
push
es
pop
pusha
decl
add
das
movsb
popa
sub
aaa
test
pusha
popa
rclb
cs
call
loop
sarb
add
add
mov
sub
xchg
jnp
insb
in
sub
jbe
add
mov
or
mov
jl,pt
sub
dec
sahf
fnstenv
cmp
je
adcl
or
jno
or
sbbl
out
lahf
mov
mov
xchg
pop
cld
outsb
std
jmp
and
sti
lods
sub
ret
es
pop
inc
and
sbb
and
aam
jo
jmp
out
push
out
push
mov
mov
les
out
mov
pop
sti
cmp
je
sub
cmp
and
and
sub
ret
or
rcrl
mov
in
movsb
or
pop
fisttps
int3
xchg
pop
mov
pop
das
lds
cmp
sub
popl
xchg
dec
mov
xchg
or
sbb
push
fwait
cltd
dec
lds
imul
xchg
das
or
call
int3
sub
xchg
mov
sbb
add
rol
cmpb
add
hlt
cmp
jl
cmp
jle
pop
insl
add
xchg
cmc
or
add
loope
mov
sbb
jnp
sbb
mov
fs
sbb
push
adc
mov
iret
sub
ds
push
push
mov
ljmp
cmpb
jne
xchg
js
add
pop
adc
or
inc
pop
inc
cmpsb
dec
js
ret
sub
popa
scas
inc
je
fsubs
bound
loopne
in
jge
rorl
inc
mov
sahf
jno
push
xor
xchg
movsl
nop
inc
pop
or
or
or
and
cmp
sbb
mov
jo
or
jne
imul
push
jno
sbb
xor
cmp
rclb
mov
and
sbb
mov
mov
cmc
in
jmp
and
xor
xor
mov
xchg
outsb
les
es
mov
sub
jne
imul
lahf
push
push
jbe
stos
mov
in
repnz
mov
add
sbb
push
iret
pop
lcall
das
add
cmp
je
xor
jne
push
testl
adc
scas
sbb
mov
sti
xchg
sub
imul
lods
inc
adc
inc
lahf
cmpsb
mov
mov
sbb
add
mov
adc
inc
cmpsb
fmuls
jno
add
xchg
jne
shlb
adc
sbb
xor
ret
push
push
xchg
fimull
or
xchg
lcall
or
add
loopne
inc
inc
fbstp
xlat
jmp
fbstp
leave
test
mov
xchg
mov
inc
insb
orb
or
and
daa
cmp
add
dec
or
scas
in
add
add
add
add
lahf
add
data16
or
lret
int3
and
scas
cltd
or
outsb
mov
test
xchg
stos
jns
inc
loopne
and
addl
push
ret
add
nop
lret
push
std
outsl
add
iret
aam
dec
popa
adc
pop
sbb
sub
and
push
or
add
inc
pop
pushl
sbb
jno
lret
cmp
outsl
jne
fiaddl
lret
enter
sub
push
data16
adc
adc
ljmp
cmp
decl
mov
or
xlat
loopne
cli
push
test
dec
lds
pop
add
pop
inc
clc
push
cwtl
jns
or
mov
jl
ja
xchg
lock
push
test
dec
jae
nop
test
jnp
mov
shl
cmp
sbb
mov
add
or
dec
cmpsb
xor
xor
test
ljmp
aam
jl
jbe
mov
adc
push
cmp
mov
pop
lods
add
jbe
push
jge
clc
stc
sub
lock
mov
and
inc
or
or
test
pop
lods
inc
push
cmp
or
adc
jmp
xor
pop
push
jg
orl
mov
sub
inc
decl
mov
hlt
jecxz
sub
adc
or
mov
adc
xor
rcrl
dec
ss
sub
loope
out
push
in
arpl
sub
pop
or
rcrl
ret
jmp
inc
ret
mov
outsb
sbb
test
pop
mov
outsl
sbb
sub
movb
movsl
pushf
das
jnp
inc
shlb
rorb
cmp
push
fdivl
cmp
jle
mov
pop
fmuls
lods
mov
pop
lret
adc
lahf
push
lea
lea
cmp
jae
jbe
add
mov
call
sbb
push
mov
xchg
rol
movsl
addr16
jo
mov
or
sub
movsbl
mov
inc
fsubrs
cmp
jbe
pop
or
cmp
outsl
repnz
or
push
inc
pusha
sub
pop
shrl
dec
xor
xor
inc
pusha
cmpl
xchg
cmp
push
push
push
jne
or
outsl
xor
aaa
lods
add
lret
push
and
pop
sub
add
mov
insl
push
mov
aas
repnz
inc
push
inc
sbb
orb
push
xor
sbb
ret
cmpsl
sbb
dec
lock
hlt
sbb
xchg
mull
push
dec
and
inc
sbb
inc
sahf
or
loope
pushf
out
xchg
stc
movsb
imul
addl
inc
mov
push
pop
add
cmp
or
push
faddl
add
mov
fstl
fldz
fcomp
fnstsw
add
aad
rcrb
faddp
icebp
fstpl
adc
and
cwtl
or
mov
imul
clc
mov
push
stc
pop
xchg
push
or
fadds
mov
das
adc
pop
hlt
xlat
hlt
pop
hlt
mov
jl
cmp
enter
lea
hlt
mov
pop
and
outsl
cmpl
jno
es
leave
adc
rcrb
add
pop
inc
inc
mov
push
icebp
add
jbe
mov
call
stos
or
stc
pop
movl
pop
lock
dec
pusha
mov
jnp
rcr
cmp
mov
or
sahf
and
xchg
dec
mov
lea
les
cmp
xchg
call
mov
mov
hlt
data16
movb
sub
push
call
or
jno
loopne
push
rcl
int
sti
pop
xchg
mov
and
push
es
jmp
or
adc
ret
fimuls
mov
mov
enter
out
jns
cmpsl
mov
and
fimuls
enter
out
popa
jmp
or
in
dec
shlb
mov
mov
inc
outsl
inc
clc
or
pop
std
ljmp
mov
jle
push
inc
adc
shll
andl
push
decl
arpl
jl
pop
mov
sub
xor
faddl
cmp
xor
andl
xlat
aam
inc
arpl
mov
lea
pop
enter
in
jl
aam
sbb
or
mov
xchg
or
and
ja
and
jne
xchg
frstor
mov
add
sbb
imul
push
aas
push
sbb
push
or
test
cmpl
xchg
test
add
inc
mov
clc
icebp
dec
inc
push
mov
popf
mov
jge
sti
and
sub
push
add
adc
rcr
sub
add
push
or
mov
jo
add
aaa
add
popa
push
adc
test
shr
mov
inc
sub
push
fisubrs
cmp
sub
imul
testb
pop
jb
in
xchg
mov
sbb
xchg
mov
or
lods
and
inc
pusha
lock
xchg
add
sbb
xchg
popf
push
mulb
andl
lods
dec
jno
stc
mov
leave
testb
inc
mov
pop
mov
and
mov
aaa
mov
or
pop
adc
sbb
jmp
insl
push
xchg
inc
mov
lods
mov
or
mov
inc
subb
xlat
dec
cmp
cli
xchg
int
call
jg
push
inc
bound
ss
mov
loop
dec
sbb
or
pusha
or
push
cmpb
mov
les
aaa
pop
adc
xor
or
mov
pop
cmovne
lahf
out
jge
cmp
dec
xchg
sub
out
xor
int3
adc
sbb
jns
shll
cmp
sbb
mov
push
inc
ret
fimuls
mov
pop
cmp
cli
inc
daa
cmp
and
sbb
inc
les
adc
pop
sbb
pop
xor
push
jmp
lds
xor
add
aas
stos
inc
cmp
ds
lds
mov
and
add
xor
arpl
lock
pop
mov
cwtl
xchg
aaa
cmpsb
sarb
add
fcomps
or
ss
ret
movsl
lods
sub
adc
gs
ret
cmp
jne
add
xor
sub
add
pop
push
xor
cli
scas
sbb
cmp
jb
pop
jg
and
sbb
lea
outsb
popa
mov
jbe
push
xor
test
xchg
push
push
test
imul
add
aam
scas
jns
mov
pop
dec
xlat
push
scas
push
push
push
sbb
jne
mov
add
cld
inc
mov
movsl
and
movsb
add
or
adc
and
ja
stc
inc
mov
sbb
sub
popf
add
fsubl
push
push
xor
inc
loop
pop
add
and
inc
and
call
leave
or
aas
dec
movsl
loope
mov
mov
hlt
add
pop
push
dec
cmp
aam
std
in
ds
pop
sbb
negl
cmp
aaa
fdivs
shlb
dec
pxor
into
jbe
shlb
jl
subl
mov
push
sbb
push
mov
fsubrl
sub
test
or
cmpl
aam
rclb
push
adc
faddl
pop
dec
stos
push
sub
test
push
leave
push
mov
test
and
fcoms
and
pop
dec
and
dec
add
mov
cmp
dec
push
push
sbb
inc
xor
sub
enter
xor
sbb
js
mov
pop
push
mov
bound
enter
mov
lock
mov
icebp
je
xor
cmpsl
sbb
lea
andl
lcall
fwait
pop
dec
pusha
xchg
insl
testl
or
push
les
cmp
or
sub
rclb
popa
fmul
fdivl
or
and
push
aam
addb
aam
xchg
xchg
mov
dec
or
in
adc
push
xor
and
pop
add
sbb
jae
insl
mov
xor
imul
xor
push
or
imul
in
test
pop
pop
sub
aam
jae
fiaddl
push
push
sbb
fisubrs
inc
mov
jae
mov
pop
out
inc
cmp
pop
cmp
add
ljmp
lock
jge
pop
dec
enter
or
inc
inc
inc
sbb
mov
inc
les
imul
lods
lahf
xchg
mov
rorb
outsl
add
pop
test
and
add
inc
gs
and
cmp
pop
push
adc
addl
xchg
jns
fsts
cld
jb
andb
adc
jo
push
push
outsl
sub
adc
add
or
lock
or
push
roll
pop
xlat
aaa
insb
rolb
ficomps
xchg
ret
sub
sbb
inc
rolb
mov
sub
je
out
push
adc
adc
jnp
les
out
add
push
int3
sbb
xchg
push
mov
jb
cmp
sbb
repnz
shll
mov
sub
das
adc
mov
xchg
pop
lret
xchg
clc
shll
push
push
xchg
fadd
loopne
mov
mov
js
adcl
mov
leave
mov
scas
cmpl
push
les
xchg
icebp
adc
dec
pop
sbb
inc
cmpsl
add
lds
mov
add
mov
mov
stc
xor
or
fisubrl
cmpsl
adc
sbb
sti
test
mov
jae
adc
cld
orb
in
push
adc
mov
add
in
adc
cmp
pop
push
lock
shlb
xor
sbb
rolb
mov
mov
add
loop
icebp
lret
rcll
int3
mov
jno
push
sbb
testb
dec
and
sub
and
push
in
inc
push
or
in
sbb
scas
adc
sbb
fidivs
xor
sbb
add
lret
cmp
or
pushf
cmp
das
add
jo
dec
sub
loop
int3
sarl
add
and
inc
mov
lock
idiv
pop
adc
mov
mov
shr
add
xor
mov
dec
sub
push
add
pop
inc
or
and
imull
pop
or
push
orl
push
les
and
adcb
sub
cwtl
jno
sub
pusha
xchg
es
push
adcb
sub
dec
adc
push
xor
cmpsl
adc
mov
xchg
push
add
cmpsl
adc
mov
xor
sbb
mov
test
mov
adc
lods
inc
or
mov
pop
out
in
add
inc
lahf
xchg
sbb
jo
add
or
ficoms
dec
and
sub
add
iret
xor
cmp
loopne
and
insb
xchg
aas
sub
sub
pop
leave
push
cwtl
clc
dec
movsb
rclb
pushf
cmp
jo
ret
inc
xchg
cwtl
adc
mov
insb
xor
add
cmp
out
jle
adc
xor
adc
mov
cmp
mov
les
std
icebp
jmp
cmp
sub
add
push
test
mov
or
push
mov
jl
pop
mov
jbe
aad
pop
stos
xchg
cmp
mov
popa
pop
jo
mov
jp
xor
add
jo
out
push
xor
adc
push
add
inc
mov
pop
lods
jle
add
pop
movsb
dec
mov
and
or
lea
pop
inc
mov
push
xchg
xchg
ret
repnz
adc
xchg
fdiv
cmp
test
das
or
sub
mov
imul
test
dec
sahf
ljmp
call
push
or
dec
xchg
addr16
xchg
mov
je
and
sub
loopne
enter
into
push
xchg
cmp
test
sbb
rol
daa
cmp
dec
je
or
dec
add
xorb
inc
daa
repz
fs
rclb
push
push
jo
push
je
xchg
pushf
sub
or
dec
loopne
movsl
addb
nop
in
jns
push
pop
add
mov
je,pn
popf
subl
dec
mov
push
cmc
sub
je
popf
mov
rorb
sub
movsb
jnp
test
or
mov
popf
inc
in
and
jns
or
sub
pop
jl
add
mov
sub
push
or
das
lods
lea
sbb
push
or
hlt
jno
adc
push
fiadds
pop
cmpsl
mov
mov
add
cmp
xor
push
add
dec
push
dec
xor
lahf
sbb
shlb
clc
cmp
jge
push
inc
and
push
jl
mov
lods
pop
test
inc
ret
sub
stc
or
pop
xchg
adc
pop
xor
pop
pop
idivl
pushf
test
aas
sarl
cmp
cvtps2pd
mov
lods
add
xchg
or
popa
lods
push
and
mov
add
or
addb
ss
xchg
nop
cmp
or
xor
rclb
adc
mov
push
sub
xchg
dec
rcrl
sbb
hlt
xchg
adc
or
cmpsb
popl
test
pop
gs
scas
hlt
hlt
dec
mov
sbb
inc
cmp
cmp
sti
test
or
and
faddp
testb
sbb
adc
loopne
in
sti
cmpsb
add
fs
mov
lea
add
or
push
test
enter
pushf
data16
imul
daa
sbb
fiaddl
dec
ret
movsb
or
and
leave
ret
jle
add
adc
lea
mov
jl
pushf
outsl
test
test
js
bnd
or
in
and
mov
mov
pop
sub
push
adc
and
movsl
popa
or
push
sub
shrb
mov
ret
inc
pushf
nop
push
push
add
push
fadds
xlat
sbb
lods
aas
aas
xchg
out
or
movl
pusha
mov
mov
scas
mov
mov
lea
stos
and
ret
test
xchg
icebp
cmpsl
lret
movsb
cmp
in
rcll
lret
pusha
or
mov
adc
add
mov
xchg
leave
loopne
lea
incl
fistpll
lea
cmp
mov
cld
pop
nop
cmpl
jle
push
hlt
xchg
sbb
pop
nop
pop
jmp
enter
mov
insl
int3
loop
mov
jle
push
cwtl
std
pop
sub
adc
les
mov
xchg
jno
add
enter
push
cmp
ss
sbb
push
push
push
cmp
add
insl
or
xchg
or
adc
add
enter
xchg
cwtl
xchg
clc
and
rorb
addb
mov
xchg
movsb
in
lret
push
cld
cld
pop
movsb
ja
clc
or
cmp
std
push
sbb
cmp
xchg
loop
xor
jne
adc
or
scas
nop
cmpsb
rolb
roll
or
or
push
add
or
push
fsubrs
lea
pop
and
sbbl
adc
enter
and
mov
mov
push
mov
lea
lcall
mov
pop
push
push
and
pushl
mov
pop
cmp
rorb
sbbl
add
pop
sbb
lods
outsl
je
ljmp
jmp
push
rorb
pusha
mov
xchg
test
idivl
or
das
mov
pop
adc
pusha
or
inc
xor
js
test
mov
add
jnp
and
inc
and
and
stc
cmpsl
test
icebp
or
test
xlat
lret
sub
cmp
cltd
movsb
stos
lret
pop
lea
lea
jb
mov
cwtl
sbb
pop
lret
cmp
addb
dec
and
add
push
enter
and
dec
arpl
pop
add
inc
fwait
mov
or
dec
xor
inc
fdivl
lock
popa
or
cld
xchg
outsl
jns
adc
les
mov
sbb
loopne
imul
in
mov
adc
hlt
sbbb
imul
jecxz
mov
add
dec
mov
aad
in
add
mov
mov
push
fcoms
js
rcr
jns
mov
add
adc
push
enter
push
dec
adc
mov
add
bound
add
insb
jnp
jne
cli
shl
fwait
roll
adc
cmpsb
and
leave
out
and
xor
jns
pop
pop
call
movsl
test
jmp
into
add
lret
adc
xchg
cwtl
je
call
jecxz
mov
mov
push
fmull
nop
popa
das
xor
adc
dec
jle
adc
xor
pop
mov
xor
pop
xadd
into
xor
bound
or
mov
icebp
cmp
popw
adc
ss
cld
jge
cld
adcl
addr16
sti
or
inc
dec
pop
leave
je
movsb
pop
int
outsl
das
cmp
jmp
sub
repz
sbb
push
les
aam
jne
xchg
or
ja
xchg
stos
adc
push
cmp
dec
or
cmpb
test
hlt
adc
mov
into
mov
pop
ret
lea
mov
mov
enter
or
movsb
add
xchg
adc
clc
mov
xorl
mov
cmpl
xchg
dec
sbb
sbb
insb
sub
inc
and
test
test
mov
ss
xor
sbb
xchg
mov
iret
push
push
ret
sbb
pop
sub
sub
out
and
fdivr
pop
xorl
jg
mov
insl
push
adc
or
cmp
mov
jl
dec
lea
jns
cli
pop
cmpsl
mov
xlat
push
es
sub
js
dec
cmpb
fucomp
fdivs
adc
adc
inc
jne
rcrb
imul
xor
incl
data16
bound
shll
inc
inc
jmp
pop
cmp
sub
pop
push
sbb
js
pop
pushf
push
adc
xor
push
rcr
lock
test
shl
lret
scas
xor
sub
subl
stos
adc
inc
jl
cmpsl
inc
orl
gs
cmp
popa
shlb
ficoms
test
mov
mov
daa
ret
cs
outsb
add
add
mov
test
inc
in
and
push
in
pop
cmpsl
pushf
ret
aam
pop
in
mov
xchg
ss
in
pop
inc
and
and
xchg
jbe
xor
roll
pop
ja
into
les
xchg
mov
push
cmp
sub
inc
int3
andb
enter
sbb
adc
xchg
scas
and
cwtl
sub
add
xchg
inc
stos
pop
xor
sbb
data16
cs
cmp
subl
stc
rol
pop
jmp
enter
pusha
fmul
pop
stos
jnp
in
aam
add
or
ret
add
or
les
loop
jo
je
enter
cmp
dec
clc
inc
and
xchg
or
je
mov
or
xor
jle
ret
popa
sub
sbb
xlat
mov
enter
xchg
xor
dec
rcr
mov
rclb
push
mov
mov
lahf
dec
jle
xor
fistps
sbb
push
push
es
call
mov
sbb
push
imul
mov
les
rolb
jge
adc
out
or
es
add
xchg
inc
roll
cmp
mov
movsb
lea
xor
test
clc
roll
je
lahf
je
xchg
outsb
or
push
clc
test
fldenv
je
cltd
sti
gs
test
xchg
sbbb
push
repnz
gs
les
sub
pop
inc
sbb
filds
icebp
push
push
mov
xlat
xor
dec
aad
test
out
cmp
pop
stos
mov
pop
data16
dec
sub
add
sbb
mov
das
ffree
imul
mov
sub
jle
fdivrs
int
xchg
inc
push
push
insb
inc
jle
dec
faddl
adc
xlat
imul
lods
xchg
ror
enter
add
cli
inc
and
mov
cld
add
rorl
pop
sub
cmp
jmp
and
adc
or
rorb
aas
push
punpcklbw
leave
xor
shr
xor
xchg
bound
jb
pushf
cmp
push
not
loop
dec
cmp
test
cmp
movl
decl
cmp
jbe
add
add
mov
sbb
movsl
xor
pop
mov
pop
and
or
inc
push
shrb
rcrl
xor
add
xorb
push
dec
inc
cs
xor
sub
inc
mov
jb
pop
sbb
adc
mov
inc
dec
addb
push
ds
add
out
adc
xor
lock
pop
and
loope
enter
sbb
pop
add
add
imul
mov
js
sbb
iret
jne
push
or
ds
call
int
je
add
ret
iret
sbb
enter
into
sub
mov
stos
test
dec
push
shlb
fs
enter
add
nop
mov
xchg
inc
mov
out
and
inc
mov
push
adc
push
aaa
cmpb
xor
repnz
pop
out
test
dec
mov
mov
inc
leave
mov
cmp
push
mov
orb
mov
and
adc
or
pop
lcall
xchg
adcl
sbb
icebp
xor
imul
pusha
add
sub
and
dec
rorb
jo
aas
or
push
rorb
inc
add
adc
in
cmp
push
popa
push
jl
test
pop
pop
add
xchg
aad
inc
mov
out
xchg
adcb
push
push
add
call
sbb
ret
push
push
cmp
ds
jmp
and
psubb
cmp
sub
or
js
push
js
outsl
test
jg
dec
mov
xchg
inc
xchg
daa
test
push
jp
pop
cmp
inc
push
and
inc
xor
cmp
inc
add
sbb
adcb
loope
sub
or
in
in
mov
mov
jns
icebp
and
lock
jmp
push
and
aaa
or
imul
addr16
push
jo
loope
xchg
or
add
adc
dec
pushf
adc
inc
xchg
cmp
dec
arpl
out
cwtl
jb
inc
adc
xor
ss
mov
or
adc
ja
cmp
push
jl
repnz
mov
push
or
cmp
xchg
adc
push
ret
pop
inc
and
fs
fs
daa
iret
les
pop
or
xor
push
rorb
clc
and
jmp
mov
pop
fbld
fs
push
sub
ror
test
jnp
loop
pusha
pop
and
pop
stos
pop
sub
cmp
push
xchg
or
push
xchg
imul
lret
ss
sbb
rolb
stc
cld
mov
bound
mov
xchg
adc
add
mov
in
pop
and
xchg
nop
add
out
sbb
mov
mov
ret
roll
xor
pop
dec
popa
aas
out
xchg
cmp
cmp
rclb
pushf
xor
insb
mov
push
mov
jne
insl
or
and
jae
in
nop
daa
push
and
cmp
mov
push
cwtl
sub
outsl
adc
mov
sub
in
mov
lock
in
add
mov
dec
pop
aad
sbb
shlb
lret
lret
jnp
mov
xor
mov
sbb
fdivrs
fs
dec
dec
and
insb
and
les
push
ss
enter
xor
int3
lock
inc
pop
arpl
add
test
mov
pop
test
into
flds
cli
push
into
xchg
add
push
jno
loope
popf
cmpsb
rcl
add
xchg
mov
call
cmp
mov
daa
adc
add
add
or
and
addl
fsts
push
mov
subb
mov
dec
mov
in
pop
or
dec
sbbb
bnd
push
xor
lea
mov
adc
loopne
sbb
test
push
ja
mov
movsb
inc
in
add
add
sti
push
sbb
or
imul
call
xchg
test
dec
les
mov
push
xor
inc
out
ret
xor
aaa
lret
scas
and
jo
and
mov
fwait
sub
mov
cmp
dec
mov
xchg
jmp
cli
pushf
adc
mov
xchg
jle
sahf
jmp
push
cs
and
jle
mov
sub
loop
lock
xchg
cmc
jmp
mov
and
cmpsl
push
sbb
pop
int3
push
mov
popf
pop
cli
xchg
je
in
test
js
dec
test
fadds
mov
aaa
push
or
add
gs
mov
movups
inc
push
xlat
loope
fs
movsb
mov
loop
add
scas
movhlps
shlb
stos
fldenv
scas
movsl
mov
popf
repnz
pop
sub
push
lods
subb
call
adc
push
movsb
and
adc
xchg
and
cwtl
cmp
je
jp
add
inc
dec
movsb
adcb
cmp
je
jbe
inc
mov
notl
movsl
adc
dec
je
or
push
hlt
imul
sbb
test
test
jb
adc
pop
out
daa
add
sbb
adcb
add
nop
lahf
and
lods
dec
jecxz
enter
xorl
adc
adc
dec
test
mov
jne
push
adc
test
fisubrl
fstpl
adc
inc
popf
call
sbb
push
aaa
or
inc
call
inc
lock
shr
test
or
push
xchg
loop
and
xchg
aad
hlt
dec
add
sbb
loopne
add
inc
fisubrl
addl
inc
xchg
dec
cmp
movsl
sti
adc
and
pop
or
push
insl
cmp
in
dec
cli
add
enter
mov
clc
push
inc
lahf
sub
push
jge
sbb
in
jb
mov
lahf
sbb
add
stos
pop
cmp
cmp
pop
mov
push
push
int3
xor
sub
aaa
xor
cmp
lock
mov
stos
sub
push
loope
ljmp
sub
cmp
push
add
push
mull
jbe
cmpsb
mov
xor
xchg
push
icebp
lret
sbb
gs
mov
pushf
adc
and
pop
push
mov
xchg
mov
orl
sub
and
push
test
cmp
addr16
jb
xchg
sahf
mov
sub
cmp
mov
in
leave
adc
fsubl
loopne
std
pop
dec
adc
push
and
inc
inc
aam
push
repnz
lods
push
push
int3
fisttpl
ret
dec
jl
pop
adc
adc
leave
mov
mov
xor
insb
pusha
adc
sti
je
pop
ret
gs
mov
fisttpll
push
les
stos
clc
push
or
dec
mov
adc
mov
add
xchg
pop
dec
or
or
jbe
fisubs
and
lods
add
stos
push
add
repz
or
push
int
pop
pusha
sub
ss
pop
xchg
jbe
clc
pop
pop
fdivr
mov
inc
mov
jmp
xchg
sub
pushf
lods
imul
push
mov
add
push
lret
ret
js
mov
test
movsl
xlat
fwait
out
cs
jmp
call
inc
push
push
sbb
cld
test
aam
sub
push
test
mov
das
push
fbstp
sbb
fmul
dec
add
and
test
repnz
pop
inc
pop
or
leave
or
fiadds
add
hlt
sub
dec
jae
dec
push
movb
and
xor
sub
mov
lods
dec
sub
shll
cmp
jno
and
push
lret
lock
rclb
pop
adc
pop
cmp
add
add
push
hlt
mov
jl
xchg
and
movl
add
or
jmp
jl
arpl
adc
cmp
test
lcall
inc
mov
push
arpl
cwtl
stc
or
jecxz
enter
lret
loope
push
add
pop
sbb
pop
xchg
pop
shll
push
push
outsb
dec
xchg
push
ljmp
push
or
imul
and
push
sbbb
in
push
out
sub
mov
push
or
fdivr
aaa
stos
mov
ret
jle
inc
into
adc
adc
in
jl
mov
in
orl
test
rorb
or
add
xchg
sti
je
push
jno
inc
shl
push
adc
push
enter
xor
push
or
adc
sbb
mov
cltd
jmp
push
fwait
les
inc
sti
in
jmp
inc
in
daa
dec
loope
into
js
push
imul
dec
adc
add
jecxz
push
mov
push
inc
mov
mov
sbb
ds
loopne
mov
xlat
in
add
adc
or
push
push
push
inc
sahf
jbe
pusha
or
or
roll
imul
mov
movsl
andb
xorb
loopne
ret
cmp
les
push
or
push
add
push
arpl
add
out
xchg
lods
dec
mov
push
fadd
add
iret
xor
push
push
out
in
popa
int3
call
pushf
push
dec
inc
push
cmpsb
or
xor
in
cmpsl
enter
test
xor
das
adc
xchg
sub
and
gs
adc
fs
test
xor
jge
adc
push
nop
xchg
or
xor
adc
pop
les
add
adc
movsl
or
xor
in
pop
pushf
mov
lods
or
in
add
pusha
fldt
dec
lods
shlb
shl
lock
in
ds
xchg
and
sbb
and
enter
push
loopne
pushf
test
sbb
or
shlb
inc
int
in
pop
mov
loop
ljmp
clc
shl
lds
stos
mov
repnz
rolb
dec
ljmp
xchg
imul
int
movsb
mov
jne
mov
cwtl
cmpsb
add
rorb
adc
mov
subb
jo
and
aam
pop
inc
rclb
sbb
push
inc
pop
fdiv
cmp
out
addb
or
fdivp
adc
add
cmp
and
push
shlb
stos
test
nop
ret
ret
loope
mov
sub
in
jo
pop
lea
push
in
ret
add
or
mov
dec
pusha
mov
rol
scas
clc
decl
mov
ror
xor
shr
xor
sub
jnp
xor
shr
or
decl
xor
add
add
add
mov
shr
cmp
dec
or
ret
jae
cmc
mov
not
and
xor
add
add
test
pop
aam
sub
jbe
add
push
inc
scas
push
mov
ror
cli
in
stc
lcall
jge
xor
and
and
xchg
adcl
xor
xchg
mov
repnz
repnz
sub
fmull
mov
inc
sub
push
or
xlat
ret
push
mov
add
add
add
adc
and
call
sub
rcl
call
call
dec
xor
mov
cli
mov
rol
rol
out
inc
lcall
xor
lret
dec
push
mov
nop
cmpsb
imul
push
in
shl
in
add
adc
push
cmp
enter
or
add
mov
pop
aaa
push
scas
sbbl
jl,pn
xor
das
cltd
call
loopne
pop
dec
rcl
in
in
adcb
xor
pop
cmp
aam
sbb
xor
gs
xchg
orb
cmp
into
in
mov
or
push
xor
and
popf
dec
sti
in
and
out
iret
or
data16
stos
xor
stos
xor
push
test
pop
inc
adc
cmp
or
inc
jo
pop
subl
ficoms
adc
mov
dec
push
sub
xor
adc
call
jne
mov
filds
cltd
test
fadds
pop
jbe
call
add
lret
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivrs
dec
xor
rolb
call
in
rorb
lret
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
mov
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
xchg
dec
push
dec
add
dec
xorb
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movsb
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
rorb
inc
pop
test
add
pop
xor
rcrb
inc
xchg
lret
adc
test
ret
mov
in
rorb
adcl
xchg
mov
shr
cmpl
dec
add
test
icebp
stc
stc
xor
icebp
sbb
mov
adc
js
mov
orb
mov
xchg
fmuls
adc
shll
loopne
xor
adc
in
add
and
or
sub
cmp
add
aas
pop
add
sub
mov
popa
or
sbb
add
inc
adc
adc
cs
or
add
pop
cmp
pop
cld
sub
pop
push
mov
adc
lock
enter
add
sub
add
sarb
ret
out
add
and
mov
adc
fisttpl
mov
inc
jae
mov
sub
icebp
xor
in
pop
lods
or
jmp
lea
push
sub
pop
ja
imul
mov
or
bound
dec
jne
pop
or
add
mov
jl
push
fidivrl
cwtl
sbb
adc
or
inc
ljmp
or
test
jnp
dec
hlt
sub
jae
push
pop
fadds
rep
aad
xchg
xchg
or
mov
fbstp
jge
lret
fs
pop
loopne
ror
mov
pop
inc
out
push
xchg
or
xchg
ljmp
mov
shlb
jle
jns
adc
enter
mov
mov
sti
sbb
lcall
les
add
dec
lea
xchg
in
add
clc
lea
hlt
add
xchg
daa
outsb
fwait
pop
add
inc
inc
add
xchg
aas
adc
popa
imul
inc
movsl
jno
xchg
aaa
or
adc
push
jmp
fadds
fldenv
loope
js
lea
scas
adcl
push
les
or
adc
xor
pusha
das
jno
or
jge
pop
mov
pusha
ja
in
shlb
mov
andl
inc
mov
adc
popf
or
jb
mov
and
dec
shll
call
and
add
test
inc
adc
sbb
cmpsb
add
daa
or
pop
dec
inc
jle,pt
cmp
or
pusha
ljmp
mov
and
dec
shrl
and
add
xchg
ljmp
movsb
pop
ret
inc
movsl
adc
dec
call
cmpb
sub
sub
xorb
cwtl
dec
bound
std
add
jnp
imul
push
xchg
push
lea
or
adc
add
xor
pusha
push
mov
add
rolb
fstpt
ljmp
cmp
xor
rorb
cmp
es
sarl
stos
insb
lahf
add
sub
std
add
cmp
mov
and
or
dec
add
jae
mov
inc
es
adc
add
rcr
int3
pop
push
push
jecxz
adc
enter
adc
fiaddl
push
pop
adc
jns
add
and
emms
movsb
xor
cmpl
hlt
push
and
jle
sub
repnz
jnp
inc
ljmp
aam
jns
in
lock
gs
xor
push
jb
xchg
push
lahf
icebp
pop
inc
sub
das
ret
add
cmp
adcl
adc
push
xorl
test
lea
shll
mov
and
pusha
add
push
pop
dec
jnp
xorb
sub
jae
sbb
lds
cmpsb
aaa
insb
inc
test
adc
movsb
xor
pusha
jge
call
cmp
into
adc
xor
push
jb
or
testb
pop
test
dec
mov
and
insb
loopne
or
inc
and
lcall
xchg
cmp
std
ss
nop
mov
add
pop
ja
mov
or
aaa
add
pop
imul
scas
fwait
mov
pop
add
sub
mov
cmp
and
mov
cwtl
inc
or
dec
js
xor
push
push
lea
rorb
and
mov
add
rol
sar
scas
sub
adc
cltd
cmp
sub
push
xchg
dec
ret
inc
test
pop
addr16
jno
pop
cmp
xchg
and
or
mov
mov
out
add
xorl
movsl
fcoms
xchg
rorb
out
cmpsb
sbb
xchg
push
push
pusha
movl
pop
push
ss
popa
subl
sbb
sbbb
dec
push
in
sbb
add
cmp
adc
jne
rolb
jne
or
or
push
push
sbb
mov
out
mov
dec
mov
or
xchg
adc
cmp
cmp
xchg
dec
in
push
sbb
sub
cmp
loopne
addl
adc
or
shll
push
mov
add
loope
jb
mov
adc
jmp
rcll
mov
sub
adc
sub
fistps
cmp
push
mov
mov
push
add
jmp
mov
dec
sub
sub
push
jae
push
mov
push
mov
fidivrs
jb
jmp
sahf
jbe
inc
jle
es
outsb
xor
adc
stos
adc
fwait
and
popa
sbb
pop
enter
mov
int
xor
dec
pop
mov
mov
pop
push
xor
insb
jae
mov
dec
addl
adc
push
shr
mov
add
adc
in
dec
jne
xor
push
and
jno
clc
sub
icebp
xor
mov
stos
push
or
or
xchg
ret
pop
lock
sub
inc
and
jne
sub
xchg
and
jle
adc
add
adc
and
in
adc
mov
dec
aaa
pop
push
adc
js
mov
cmp
add
ss
sub
cmp
hlt
mov
add
roll
lcall
movsb
push
adc
push
push
pop
push
fld
sub
push
call
sbb
mov
mov
jp
cmpsb
sub
adc
loopne
dec
mov
dec
mov
mov
cmp
inc
push
out
mov
ret
dec
bound
inc
jno
add
test
xchg
jbe
push
push
scas
xchg
decl
cmp
jne
push
int3
or
movsb
mov
cmp
pusha
add
sub
add
sbb
pop
xchg
mov
pop
dec
mov
xor
and
mov
inc
scas
insl
add
aam
mov
and
pop
hlt
jnp
inc
xchg
mov
inc
xchg
jbe
or
dec
pop
inc
add
dec
scas
jo
xchg
or
rorl
push
push
enter
push
fimull
dec
pop
cmp
and
iret
xchg
add
adc
je
cmp
cmpsl
lock
adc
and
mov
push
mov
or
xchg
fdivrl
sbb
dec
jp
add
mov
pop
scas
bound
pop
les
dec
mov
dec
inc
mov
jo
das
pop
inc
aaa
inc
inc
aam
adc
sbb
ja
loopne
aas
jne
push
cmp
jb
mov
push
mov
and
add
jns
jp
inc
jo
or
and
bound
in
fidivl
xor
pop
push
jmp
mov
loope
ret
sti
aad
aad
dec
lcall
pop
xchg
xor
cmp
decb
dec
movsl
mov
in
lahf
mov
inc
xchg
inc
sub
sub
push
enter
in
and
xor
pop
ret
int3
jmp
out
jns
lods
mov
outsl
jmp
mov
mov
add
or
and
fdivrl
and
insb
shlb
addb
mov
mov
lret
mov
cmpsb
mov
jl
inc
cmp
mov
cmp
sub
mov
jmp
push
sbb
sub
movzbl
pop
xchg
sub
fstpl
sbb
jne
mov
mov
add
fnstsw
add
push
sbb
imul
or
out
dec
pop
xor
pop
data16
cmp
add
add
imul
inc
shl
sbb
adc
loop
shlb
dec
in
push
out
push
add
or
pop
push
test
incl
jo
sahf
xor
inc
cmp
jl
pop
xlat
mov
pop
or
mov
or
les
shlb
push
xor
xchg
inc
sbb
sub
or
int3
adc
jg
scas
jecxz
push
xor
pop
sbb
insb
sbb
jle
popf
add
xor
add
push
cld
cmc
xor
pop
ret
push
das
sub
mov
jge
push
push
jl
inc
insl
imul
inc
sub
jns
jo
outsl
xor
xor
adc
xchg
or
adc
dec
daa
and
cmovbe
fsubs
jbe
test
xchg
sbb
or
cmp
push
lea
stos
inc
sbb
and
comiss
fsubrp
inc
movsb
rsqrtps
lock
pop
xor
in
pop
or
andb
add
or
mov
ficoml
sbb
loope
and
add
gs
imul
jmp
add
xadd
add
lret
mov
or
jl
push
or
movsl
movsb
mov
push
pop
push
test
test
pop
pusha
jmp
jge
xchg
sub
push
push
mov
mov
lcall
add
sub
mov
push
pop
add
sub
xchg
cmp
pop
add
sbb
arpl
sub
pop
add
cmpl
add
dec
xor
insb
add
push
lods
call
addr16
and
and
sbb
and
adc
pop
loopne
sub
mov
dec
idiv
jl
imul
and
incl
cs
xchg
mov
add
push
mov
adc
jle
push
shl
enter
stos
xor
push
sub
gs
mov
and
sub
xchg
mov
cmp
lock
push
hlt
ljmp
mov
adc
sub
pop
adc
inc
push
mov
sbb
add
mov
push
mov
xor
arpl
xor
orl
and
mov
in
mov
ficoms
mov
adc
or
push
frstor
lcall
push
dec
dec
push
jns
andl
inc
rorl
and
rolb
dec
push
dec
pushf
sbb
pop
mov
jl
or
mov
ret
adc
push
and
enter
pop
push
or
add
or
jmp
push
js
add
call
xchg
ds
cmp
adcl
push
mov
ljmp
add
adc
lahf
or
out
xor
pop
dec
cs
stos
add
push
dec
scas
pop
push
push
sub
adc
xchg
pop
lods
jno
jecxz
add
fidivrl
lcall
dec
dec
in
stos
in
aam
inc
jmp
sbb
pusha
pop
fidivrl
sbb
sbb
fucomi
adc
and
lds
push
testb
insb
xor
dec
and
or
xchg
xor
adc
in
dec
sti
inc
inc
adc
sbb
mov
popa
push
mov
adc
insl
pusha
in
pop
ret
mov
add
bound
pusha
fs
gs
lea
inc
cmp
or
sarl
pushf
in
pop
push
addb
add
push
push
bound
or
or
shll
adc
dec
loopne
enter
cmp
push
xor
stc
and
adc
adc
or
enter
adc
pop
or
es
sub
sub
scas
cmc
xchg
jne
lods
dec
mov
push
dec
adc
stos
cltd
fwait
inc
movl
bound
or
cmpsb
mov
mov
and
dec
pop
adcl
mov
adc
adc
push
gs
adc
inc
add
mov
dec
mov
loopne
bound
inc
clc
xchg
out
mov
and
sbb
mov
add
mov
mov
mov
sbb
mov
mov
cmp
mov
xor
cwtl
ss
or
rcrl
cwtl
and
clc
je
pushaw
cwtl
sub
sub
sbb
mov
mov
dec
in
adc
test
das
xchg
xchg
mov
jae
push
ja
fcomi
cmpl
rorl
pop
push
decl
xchg
pop
out
rcrb
sbb
pushf
mov
pop
push
pop
push
push
push
orb
adc
xor
jp
mov
inc
add
pop
fistl
jne
pop
sbb
fcompl
cwtl
mov
mov
incb
mov
test
add
jg
lods
adc
fists
cmpl
jne
mov
sbb
leave
and
jne
mov
pop
pop
push
inc
cmpsb
or
add
cs
sbb
ret
sbb
aas
or
mov
cmp
jle
sbb
shlb
mov
adc
addl
fs
inc
cmpsl
inc
cmp
in
arpl
pop
sub
ret
ret
jns
into
sub
pop
cmp
add
sub
mov
insl
xlat
mov
pop
sti
pop
push
inc
lcall
pop
jmp
mov
inc
xchg
jne
repz
imul
pop
or
sub
push
fidivrl
dec
dec
insb
mov
or
hlt
push
js
cmpsl
outsb
insb
inc
or
or
jo
add
fwait
jbe
lcall
pusha
pop
cmp
cmp
cmpsl
shlb
xchg
nop
sub
inc
jo
jne
addl
into
or
add
mov
add
out
mov
and
insb
jecxz
imul
in
imul
insl
xchg
adc
arpl
jae
jge
add
aaa
ss
xor
icebp
movl
or
jge
scas
cmp
xchg
incl
stos
shlb
imul
das
rolb
sub
aaa
data16
pop
cmp
mov
push
add
push
add
in
sub
cmp
mov
jmp
sub
dec
jnp
dec
cmp
jne
push
adc
add
add
out
mov
jne
pop
sub
int
std
mov
or
or
loop
xchg
out
adc
inc
add
sub
loopne
sbbl
push
pop
mov
push
add
cmp
je
loop
jae
test
mov
dec
and
or
xlat
lock
sub
dec
ret
pop
and
faddl
xor
jne
jg
add
pop
xorl
int3
dec
hlt
call
inc
inc
mov
cmp
insl
inc
shll
and
int
mov
pop
test
test
inc
hlt
xchg
or
push
push
mov
sbb
or
inc
mov
or
pusha
testb
fisttps
jno
inc
aaa
rcr
jnp
push
push
add
divb
sarb
test
imul
pop
push
shll
sub
mov
cmp
scas
rcrl
std
add
mov
out
ds
or
testb
or
cmp
sbb
or
sbb
dec
roll
add
cmp
inc
lock
dec
call
and
dec
adc
rcll
enter
add
lret
cmp
jne
data16
mov
or
adc
xor
sbb
or
sbb
jmp
push
and
pop
pop
xor
sub
rcll
xor
neg
pop
lock
inc
in
jb
sub
cmp
repz
movb
inc
push
xchg
adc
or
inc
popf
adc
rorl
mov
add
sub
shrl
aaa
les
std
dec
xor
xchg
cmp
clc
cmp
es
sbb
xor
add
sbb
xor
sub
ja
sbb
and
dec
add
sub
push
pusha
jnp
loopne
xchg
adc
push
push
inc
mov
sub
mov
mov
sbb
aaa
cltd
loopne
ret
pop
jmp
and
das
pop
sbb
pop
or
or
adc
pop
fwait
mov
addb
push
and
and
xor
in
adc
clc
subb
pop
cmp
pop
bound
ljmp
xlat
repnz
adc
or
or
rorb
popa
in
add
jno
int3
add
iret
shrb
mov
and
add
shll
dec
and
add
and
ret
decl
add
add
and
ret
mov
mov
jp
cld
jb
add
xor
cmp
jecxz
or
je
jmp
lcall
xchg
adc
std
mov
popa
jb
adc
in
and
dec
cmc
cmp
mov
aas
sub
sbb
or
dec
push
dec
or
sbb
cmp
shr
mov
sub
add
mov
ret
add
bound
mov
mov
and
movsb
push
sbb
repz
push
aaa
or
adc
jp
mov
mov
js
mov
cmpl
lods
sti
test
adc
ljmp
mov
cmpl
push
ljmp
or
mov
inc
in
fcoms
adc
add
stos
les
dec
add
fisttpl
sub
lock
mov
add
jns
and
fistpl
and
lcall
scas
cmpsb
adc
pop
arpl
das
adc
cmp
add
push
push
dec
inc
push
add
and
test
xor
dec
repz
mov
ss
es
imul
sub
push
cmpsb
jo
xchg
into
inc
enter
or
insb
idivb
or
adc
mov
lahf
mov
pop
cmp
pop
cmp
pop
xchg
sub
push
inc
pop
or
inc
dec
dec
pop
orl
adc
push
test
dec
xchg
or
jne
mov
in
jmp
jecxz
cld
mov
push
push
sbb
mov
cmp
dec
push
ja
mov
ljmp
cmp
sbb
xor
inc
insb
xor
stos
add
xchg
icebp
pop
sbb
out
mov
enter
fisubrs
fildll
push
call
sub
mov
jns
in
push
ds
jae
push
add
rol
push
subb
jg
inc
pop
jns
fwait
clc
xlat
pusha
sub
xor
add
sti
js
cwtl
shlb
fdivp
jbe
mov
push
or
roll
ret
push
dec
pop
xor
pusha
push
inc
scas
cmc
dec
pop
mov
pop
xchg
enter
pop
pop
ret
push
or
xor
sbb
and
lds
mov
sbb
push
mov
add
icebp
xor
jo
pop
imul
inc
test
out
jb
cmpsl
inc
rclb
popf
jmp
xchg
push
add
in
push
push
fldcw
pusha
lea
inc
mov
sbb
add
push
jbe
shlb
and
mov
pop
or
push
inc
mov
ret
pop
jl
movsb
jbe
jo
pop
gs
cmp
inc
cmp
adc
pop
inc
inc
inc
or
aad
in
pop
jb
cmp
mov
or
daa
mov
fdivrl
push
or
push
jp
mov
cmp
das
mov
je
mov
xchg
and
sarl
shll
nop
sbb
cmp
push
decb
fnstsw
push
push
mov
add
and
ljmp
sub
daa
dec
and
loopne
add
jmp
push
xchg
fcomp
or
xor
pusha
addb
dec
adc
andl
jmp
fistps
jne
je
jmp
or
push
xchg
and
push
cmp
out
jns,pn
orb
add
pop
js
xor
add
cmp
jno
xchg
jmp
rcrl
add
mov
scas
and
push
xor
pop
mov
or
jnp
sub
or
cmp
mov
xor
push
aaa
and
sub
pushf
es
loope
add
push
mov
dec
inc
adc
pop
and
push
add
sbb
ret
xor
jae
adc
pop
and
push
inc
cvtss2si
ret
and
aas
test
ja
or
cmp
sub
sub
inc
insl
push
mov
add
jno
xor
dec
inc
dec
push
mov
add
jnp
jmp
push
inc
add
xchg
es
lcall
mov
lahf
pushf
push
and
cmpsl
jl
dec
mov
adc
xchg
idivl
add
cmpsw
and
add
sub
xchg
mov
js
xchg
gs
adc
pushf
cmp
push
cmp
mov
es
xchg
call
sub
and
scas
lods
fwait
sub
mov
and
insb
mov
mov
sbb
dec
je
dec
add
jno
add
arpl
jne
jno
rorl
stos
adc
sbb
aas
int3
mov
nop
sbb
jle
mov
shlb
bound
pop
xor
mov
mov
insl
je
les
rorl
or
jle
rcrb
inc
js
js,pt
xor
dec
mov
addr16
call
push
lahf
sbb
stc
icebp
push
mov
jmp
dec
jle
add
addl
adc
es
or
fnstcw
mov
and
clc
jg
fs
outsl
lock
filds
movq
movaps
lret
insl
mov
shlb
jle
xor
push
jge
int
rcl
lret
je
mov
sti
mov
dec
jl
and
lret
or
jg
mov
xor
cs
jnp
inc
insl
lock
in
add
adc
pop
jg
add
adc
push
add
adc
add
loopne
add
mov
add
pusha
out
ja
sti
addsd
int
add
sbb
es
jns
sbb
es
sbb
cmp
or
push
imul
dec
cwtl
movsb
ja
stos
add
pop
cmp
icebp
mov
lds
in
adc
call
dec
xchg
adcl
dec
pop
call
mov
push
fisubs
add
inc
dec
and
aad
pop
sbb
cltd
test
je
mov
daa
loope
or
lar
add
fmul
ret
test
clc
cmp
jb
neg
sbb
cmpsb
mov
rorl
jmp
jle
pop
mov
or
rorl
xor
bound
stos
mov
dec
ljmp
inc
ror
or
pop
adc
test
outsb
or
inc
mov
xor
or
test
and
cmp
inc
add
push
roll
nopl
andb
add
and
pop
and
cmovs
jle
mov
mov
test
mov
stc
or
rep
jmp
xor
int3
mov
data16
cmp
test
das
ds
hlt
push
js
or
pop
pusha
mov
inc
pop
xor
mov
or
scas
adc
repnz
dec
add
addl
add
xchg
mov
cmp
mov
rorb
mov
out
aas
iret
mov
in
inc
in
sahf
out
sahf
call
hlt
jno
out
hlt
clc
clc
cld
sti
xchg
mov
push
lock
fnstenv
scas
andl
xor
adc
nop
inc
subl
pop
sti
and
jbe
or
sbb
lea
and
fmul
jl
cld
or
scas
cld
out
xorb
adc
xor
daa
stc
sub
pop
nop
xchg
push
mov
outsb
xor
jl
mov
add
xchg
mov
inc
push
imul
mov
jno
addr16
add
mov
push
sahf
mov
or
out
sahf
out
inc
dec
push
pop
fs
out
ja
aaa
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
nop
or
and
push
add
or
mov
lods
sbb
add
cmp
mov
cltd
push
mov
dec
movl
mov
mov
fbld
lods
pop
lea
bound
adc
int3
dec
add
pop
decl
add
cmp
fwait
add
stos
inc
and
lock
pop
jmp
inc
inc
jle
mov
jmp
jp
je
mov
push
jmp
rorl
sahf
mov
sbb
mov
pushl
xor
movsb
jns
mov
adc
pushf
sbb
shll
xorb
arpl
mov
fdivp
sub
cmp
je
cmpsl
mov
sarl
mov
push
sbb
cmp
aaa
mov
decb
jne
popf
rolb
sub
pop
inc
push
hlt
jo
or
ss
pop
inc
sub
hlt
fcomi
arpl
add
add
das
dec
sarb
outsl
jne
xchg
jmp
push
adc
push
inc
xchg
and
dec
mov
add
add
xchg
inc
mov
xor
mov
mov
xor
out
push
push
adc
adc
jne
inc
cmp
push
pop
push
or
xor
ljmp
mov
addb
loop
or
push
push
jbe
fadds
pop
and
add
das
and
adc
dec
or
sbb
or
inc
inc
cmp
cmp
rorl
lock
andl
dec
adc
push
or
out
cmp
lret
dec
jnp
push
aam
adc
or
test
ficoms
cmpsb
or
and
pusha
inc
mov
or
addl
and
sbb
popl
cmp
movsb
mov
into
lret
cmp
dec
add
addb
sbb
clc
mov
cmp
jne
shl
shlb
pop
sub
sbb
or
rolb
call
sbb
rcrl
test
ret
cmp
aam
dec
adc
or
jne
sbb
shl
or
jg
jmp
xorl
jnp
adcb
aaa
adc
mov
movl
xor
mov
lahf
int
dec
lahf
xor
jno
seta
movsb
sbb
lea
addb
subb
in
dec
cmp
out
out
add
orl
outsl
mov
stc
adc
jecxz
hlt
mov
push
es
loopne
aad
adc
lret
shr
sub
and
inc
sub
lret
or
push
add
xorb
xor
sysenter
push
idivb
and
inc
je
in
inc
add
inc
cmp
out
dec
cmp
jecxz
jmp
xchg
cmp
call
aam
mov
movb
lea
fisttps
dec
neg
mov
mov
dec
cli
or
add
jmp
or
mov
inc
dec
shlb
ds
sbb
jb
cmp
add
jg
outsl
into
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
mov
or
adc
mov
or
imul
fisubrl
cli
enter
ret
sahf
or
inc
test
or
sub
push
in
dec
mov
cmp
jb
lea
push
outsb
rcrb
mov
xchg
and
cld
jne
mov
push
cmp
jne
dec
jae
xor
es
jne
call
cs
andl
fisttpl
aas
adc
push
dec
jmp
adc
out
jns
jmp
std
std
jmp
cld
test
mov
ret
pmaxub
fwait
push
adc
scas
jb
shll
movb
shr
stc
push
or
or
or
add
and
adc
popf
shl
lret
or
and
enter
roll
orb
loopne
or
jo
mov
sahf
or
sbb
pop
inc
xchg
stos
mov
aad
mov
or
inc
push
or
pop
sbb
sub
push
xor
adc
sub
and
sub
pop
or
aaa
cld
pop
xor
jge,pn
push
rolb
xor
inc
add
cs
into
and
jp
notl
or
jg
add
mov
mov
dec
xor
loopne
jg
ja
dec
faddl
arpl
push
popa
jb
rclb
fildl
add
mov
push
outsl
fildll
xchg
and
xor
inc
push
push
pop
inc
inc
in
div
jb
inc
adc
pop
roll
out
xor
subl
sub
pop
adc
push
ret
arpl
mov
jo
bound
cmpsb
imull
cmp
jo
add
sub
nop
gs
xlat
adc
daa
pop
adc
push
int
or
xchg
mov
call
loopne
fsubrl
and
mov
out
cwtl
or
push
adc
add
push
sub
andb
mov
xchg
xor
das
push
leave
xor
in
mov
add
and
movb
lods
push
mov
mov
jle
cmpl
pop
pop
out
mov
inc
fstl
xor
jg
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
lock
inc
add
jno
cmpsl
add
cmp
inc
pop
mov
xor
dec
or
jl
mov
or
and
repz
lret
insb
adc
pop
jne
dec
add
test
jne
inc
lds
aaa
add
lret
or
test
cltd
test
sub
jmp
ss
idiv
fidivs
lret
sub
cmp
ja,pn
xor
leave
cmp
jae
push
adc
popa
movsb
sub
sbb
cmpsb
mov
xor
or
mov
add
lods
dec
adc
dec
scas
pop
cld
les
and
add
inc
cmc
mov
nop
test
jne
test
jne
push
andl
or
or
aad
mov
inc
mulb
xor
mov
mov
es
add
add
into
mov
ja
or
das
in
sbb
push
test
sub
sbb
mov
pop
loope
ss
jp
cmp
add
dec
loop
sub
icebp
jmp
push
mov
sbb
xorl
sub
daa
push
push
add
dec
push
or
imul
xchg
ret
clc
stos
mov
shr
rolb
xchg
dec
or
adc
stos
aad
test
jo
or
loopne
inc
cld
add
sti
push
push
setp
fsubs
mov
dec
push
es
xor
mov
rcrb
adc
push
adc
adc
sbb
shlb
mov
mov
inc
inc
data16
inc
push
xchg
testb
cmp
and
dec
je
or
xchg
mov
fsubl
ljmp
adc
adc
pusha
xor
call
push
loopne
jp
jecxz
adc
in
fstpl
push
aas
push
es
pop
add
xor
adc
or
dec
in
mov
sbb
scas
fs
sbb
sbb
inc
jbe
mov
adc
xchg
xor
adc
adc
and
xor
dec
ret
pop
frstor
or
movsl
xor
subl
fprem
jae
xor
adc
fs
add
cmp
not
or
mov
sti
sbb
adc
fidivs
sbb
rep
add
push
xchg
dec
xchg
andb
inc
add
loopne
je
inc
cmp
sbb
jo
jb
lea
push
adc
xchg
sbb
in
dec
ss
add
push
sahf
cmp
mov
mov
mov
fwait
clc
jo
dec
add
movsb
add
or
dec
xor
jle
mov
lods
mov
cvtdq2ps
imul
mov
cmp
mov
jecxz
insb
sbb
adc
popa
lock
mov
sub
enter
or
js
mov
adc
mov
push
push
sub
xadd
pusha
pop
dec
inc
sub
pop
mov
inc
inc
adc
loopne
insb
jl
push
or
mov
adc
add
and
dec
pop
xchg
sbbl
and
icebp
add
mov
mov
mov
daa
out
fildl
ss
jge
or
dec
and
xor
adc
mov
movb
roll
es
sub
leave
sub
mov
pop
ja
add
xchg
push
and
dec
sub
push
push
and
mov
imul
or
adc
or
stc
xlat
rorl
pushf
clc
sti
pop
adc
cmpsb
pop
lahf
sbb
loopne
jne
sbb
xor
cmpsb
and
sub
call
jbe
aas
xor
mov
pop
popf
mov
push
xor
imul
les
jle
push
addr16
addr16
aad
push
popf
aaa
outsb
pop
decl
pop
clc
adc
push
pop
ds
shlb
xor
or
les
jb
pop
add
pmaxub
inc
shll
es
or
in
xor
repnz
cli
push
pop
int3
add
mov
daa
pop
shl
xchg
int
or
aaa
loopne
lret
hlt
push
mov
mov
mov
push
sub
je
push
and
shlb
and
shrb
test
ljmp
sbb
mov
push
mov
mov
xchg
rolb
mov
pop
cld
fcomps
js
xor
fmull
loopne
out
add
sub
xor
cmp
in
sbb
ss
jp
mov
xlat
test
out
aas
or
cmp
je
cmpsb
fdivrl
aam
lahf
push
push
cld
mov
call
xchg
xor
cmp
mov
mov
movsl
in
inc
rcll
sbbl
adc
adc
sub
mov
mov
cwtl
mov
push
pop
sbb
test
lret
mov
jl
mov
clc
lret
fdivrp
fsubr
call
iret
dec
fs
cmpb
adc
xor
jg
loopne
and
mov
cmp
jne
or
or
mov
adc
cltd
inc
arpl
pushf
cmp
mov
adc
cmp
add
xor
xchg
pop
call
lcall
ret
xchg
mov
xlat
cmp
mov
cld
push
cmpsl
mov
xor
cs
jmp
mov
subl
adc
mov
push
push
aam
pop
inc
cwtl
add
add
inc
dec
pop
aas
ss
add
add
cmp
add
add
mov
jne
cmp
je
push
jbe
add
mov
adc
clc
adc
pop
and
mov
ljmp
jmp
ret
jp
and
xor
das
cmp
leave
pop
in
xor
std
adc
pop
inc
pop
or
adc
jecxz
mov
mov
inc
and
sub
out
jl
add
inc
test
sub
bound
enter
and
jp
adc
push
cmpsl
cmp
and
cmp
pop
adc
mov
loope
xor
lahf
fcomps
push
jle
mov
mov
fmull
lret
lock
pop
and
loope
jmp
cmpsb
mov
and
fs
out
sbb
or
sub
inc
pop
dec
or
cwtl
dec
mov
xor
push
push
pop
jle
inc
mov
cmp
je
add
lock
movzbl
add
sub
je
ficoml
jle
fbld
sbb
adc
imul
jo
pop
add
inc
push
nop
add
daa
add
in
add
test
add
mov
add
jle
add
cmp
in
add
add
sbb
push
xchg
sub
pop
jb
or
enter
or
dec
jb
cmp
or
sub
pop
enter
pop
or
test
loop
or
cmpb
add
nop
ja
inc
or
add
ja
xor
and
push
rsqrtps
adc
pop
in
lods
pop
adc
fwait
sub
popa
in
cmp
sahf
lret
add
ds
add
adc
add
sbb
inc
ficoms
adc
adc
enter
push
push
repnz
push
pop
pop
pop
lcall
mov
sbb
sbb
enter
call
pop
and
sbb
sbb
fstl
add
je
pop
sbb
xorl
cmp
sbb
cmp
inc
inc
push
pop
pop
push
decl
jne
add
add
sub
cmp
in
pop
lret
sahf
add
add
cmp
xchg
lock
test
fisubs
repz
add
cmp
je
lcall
push
in
repnz
lea
add
aad
cmp
mov
out
fwait
out
ret
xor
enter
add
call
adc
dec
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
rclb
cld
push
out
jne
fs
xor
cmpl
adc
cmpsl
mov
xchg
mov
sub
xor
rol
push
in
ret
stos
xchg
fimull
or
push
xchg
es
and
jecxz
mov
std
sti
in
in
and
adc
sbb
out
mov
or
out
outsb
dec
push
jno
call
or
pop
orb
cltd
repnz
repnz
in
add
inc
popf
cli
sbb
js
out
out
out
cltd
and
add
xchg
pop
leave
das
cli
push
cli
sbb
jmp
sub
sar
push
leave
push
jb
stc
stc
cmpsb
jb
imul
stc
idivl
pusha
pop
xchg
div
pop
fwait
xor
add
stc
push
xor
out
clc
cmp
rclb
sti
cltd
sbb
outsl
in
cld
inc
cld
adcl
add
sbb
gs
and
stos
cmpsb
ret
cld
sub
inc
or
loop
icebp
testl
shl
xchg
xchg
mov
divl
sbb
out
push
jno
sbb
out
inc
testl
negl
sti
imul
ljmp
negb
jns
cmp
notb
adc
cmp
test
mul
inc
repnz
testb
push
cmp
bnd
or
jno
cmc
mov
adc
pop
xchg
cmc
jb
imul
cmc
pop
dec
cmc
pusha
pop
xchg
cmpsb
div
idivb
flds
cmp
cmp
sahf
clc
clc
jecxz
stc
test
cmp
les
hlt
inc
repnz
jne
xor
push
hlt
sbb
shll
data16
hlt
test
push
jo
sti
xchg
dec
sub
push
ds
sub
loop
dec
push
push
loop
sub
xchg
cmp
repz
rclb
test
mov
loop
repz
repz
andl
push
test
jmp
jmp
shll
xchg
repnz
or
sub
dec
in
cmp
lea
jns
jne
add
and
push
push
adc
mov
divb
cmp
icebp
test
icebp
cmp
imul
pushf
dec
push
add
jecxz
rcll
sbb
popf
lock
stc
adc
and
jne
push
pusha
leave
mov
mov
push
lock
test
ss
push
jmp
push
stc
outsb
add
sub
out
ret
mov
in
cmovno
push
add
enter
add
stos
fsubl
and
dec
add
push
add
sub
lods
loopne
dec
adc
or
dec
add
jmp
and
and
ljmp
dec
or
and
data16
pop
in
push
inc
add
push
cmp
popa
mov
push
push
popf
pop
test
data16
or
jle
fnstcw
mov
pop
pxor
pop
sti
cmp
cmpsl
sbb
push
pusha
insb
lea
fdivp
mov
outsb
push
inc
jae
out
dec
outsb
or
and
mov
push
rolb
clc
loope
mov
pop
aam
lock
pop
aam
es
pushf
jge
push
sbb
pop
and
push
test
pop
mov
jo
pop
loop
cmp
push
int3
or
or
add
test
lea
fdivs
fistps
cmp
xor
in
sub
ja
and
add
stos
xchg
push
or
sub
sbb
test
push
pop
xor
add
lea
or
mov
mov
or
lods
adc
movsl
sub
xchg
ds
jbe
xchg
cmpsl
sub
inc
repnz
xchg
in
in
inc
cltd
push
push
hlt
add
in
es
mov
daa
push
mov
cld
add
push
sbb
jne
push
adc
out
xorb
cmp
inc
jb
adc
mov
shlb
sub
mov
pop
inc
inc
inc
inc
pop
cs
inc
pop
cmp
push
movb
enter
aad
add
imul
sarb
mov
xor
iret
js
push
and
dec
in
popa
jp
jl
dec
outsl
push
or
cmpsb
or
add
xor
push
sti
push
shll
add
fmulp
push
or
inc
inc
pop
cmp
enter
loopne
pop
aad
shll
orps
push
push
adc
adc
push
cmp
pop
mov
ja
sbb
stos
leave
or
push
adc
or
and
or
jmp
mov
add
mov
add
repz
sub
test
int
scas
rcrb
adc
adc
insb
cmp
xchg
inc
push
stc
xor
lret
iret
dec
imul
lock
jne
mov
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
add
fadd
mov
dec
mov
adc
jg
push
mov
pop
pop
push
xchg
cwtl
ja
adc
or
sub
clc
mov
push
test
mov
es
outsl
std
testb
cltd
nop
cmp
pop
jmp
and
popa
lods
add
ret
je
sahf
fwait
xor
sti
add
jmp
stos
add
testb
and
mov
sahf
lret
add
adc
je
or
pop
mov
test
push
leave
adc
mov
pop
pusha
and
xchg
jo
fisttps
push
ficompl
add
aam
loop
xor
insb
enter
or
repnz
aaa
sbb
push
mov
mov
incl
inc
decl
jne,pn
or
xchg
mov
sar
mov
xor
aaa
jbe
push
adc
xchg
cltd
pop
idiv
rclb
pusha
or
fs
test
mov
mov
xor
pop
and
mov
cmp
jae
dec
mov
mov
jae
dec
mov
out
adc
dec
adc
and
pop
sub
push
pop
adc
cmc
xchg
mov
xor
push
xor
test
cmp
imul
add
or
add
test
sti
shlb
sbb
dec
dec
je
push
push
jne
inc
add
jmp
xchg
insb
adc
dec
mov
xor
pop
decb
mov
test
mov
inc
pop
sbb
cmp
das
sub
sbb
and
aam
xchg
loope
mov
fs
fcomip
outsb
adc
stc
mov
xor
call
dec
dec
popa
lret
jl
sub
and
xor
adc
ficompl
imul
mov
stos
loopne
add
mov
sub
pop
xchg
jmp
adcl
dec
xlat
sub
sub
insl
or
aas
clc
add
push
push
cltd
pop
idiv
or
sub
lock
inc
xor
xchg
push
xchg
inc
out
cmp
pop
sbb
ss
jmp
or
lret
push
xor
pop
imul
fs
mov
mov
shlb
shlb
jl
mov
adc
fcmove
sbb
pop
xchg
mov
pop
insb
sub
shll
jo
repnz
sbb
jno
dec
mov
adc
add
jbe
add
adc
jg
scas
loop
add
sti
adc
xchg
loopne
cmp
cmp
hlt
dec
loope
inc
xor
xor
cmp
dec
sub
push
mov
js
add
cmp
mov
jge
pop
je
sbb
or
jle
das
sub
pop
in
adc
outsl
mov
int
int3
dec
jo
push
push
in
pop
je
dec
inc
cli
mov
rorl
data16
lretw
test
mov
lcall
pop
popl
or
call
and
push
add
push
or
fsts
inc
inc
dec
imul
push
cmp
pop
stc
pop
push
adc
std
loopne
lcall
push
push
pushf
add
add
data16
loope
test
and
adc
push
je
stos
insb
adcb
cmpb
popa
arpl
roll
ja
and
sahf
mov
mov
or
push
hlt
mov
xor
push
adc
mov
loopne
adc
adc
or
sahf
out
push
out
call
push
out
mov
mov
cmpsl
pushl
test
sarl
ret
xchg
rorb
adc
or
adc
pop
lock
mov
and
sbb
ljmp
aam
add
test
jg
cmp
je
gs
sbb
ret
push
adc
push
push
pop
mov
aas
clc
mov
mov
inc
inc
cmp
je
xchg
mov
dec
sar
fs
orb
adc
mov
xchg
add
fidivrl
shll
mov
dec
je
popa
xor
mov
dec
sbb
sbb
insb
popf
cld
dec
call
mov
incl
ljmp
hlt
push
mov
push
inc
sbb
cmpxchg
cmpsb
sub
cmp
mov
pop
sbb
or
mov
popa
and
fisubrs
push
add
add
or
push
sbb
lret
and
add
sub
dec
mov
jo
add
test
sbb
pop
test
cmp
lock
and
cmp
je
mov
cld
sarl
mov
dec
imul
mov
sbb
push
subb
inc
int
dec
add
fs
pop
addb
cs
ja
cli
frstor
sub
cmovs
add
hlt
jp
inc
push
push
dec
sahf
sbb
mov
add
adc
xchg
dec
mov
add
jmp
adcl
je
push
or
dec
xchg
jne
jmp
dec
or
pop
repnz
mov
cs
dec
jmp
inc
scas
roll
dec
sbb
ror
xor
mov
pop
adc
sbb
pop
shll
stos
mov
cmp
add
ret
movb
in
pop
call
jmp
gs
add
ljmp
in
out
sbb
and
or
adc
adc
add
stos
shll
push
jns
and
test
push
orb
lods
cmp
inc
stos
mov
mov
or
fs
out
push
push
and
inc
jbe
inc
sti
push
jmp
cmp
ja
xor
or
cmpb
jne
inc
inc
shlb
sar
mov
aam
lods
ja
or
xchg
popa
shlb
subl
movsb
cltd
jne
sbb
sti
mov
clc
leave
jge
cmpsb
xor
clc
and
sarl
ja
inc
jmp
pushf
mov
fisubl
jne
test
test
mov
add
jmp
jne
add
xor
sbb
and
dec
sahf
jmp
ds
dec
jnp
add
push
data16
push
test
inc
xchg
fnop
sub
adc
fdivs
rep
mov
loopne
push
mov
pop
test
or
add
imul
loopne,pt
sbb
jl
push
iret
fsubrl
outsb
mov
add
mov
arpl
jmp
pop
arpl
lret
pop
pop
xchg
push
jno
xchg
push
fimull
fs
jp
icebp
je
iret
or
add
loop
shrb
lret
push
std
push
mov
fwait
rol
inc
add
lds
fs
add
ja
movsb
cld
adc
sbb
xor
popa
push
or
into
ds
add
mov
xlat
add
or
filds
js
adc
cmc
mov
or
mov
daa
cwtl
xor
sub
push
lcall
jle
sbb
js,pn
xor
pop
dec
jne
pop
sbb
or
sbb
cmpsb
imul
pop
or
jp
push
and
pop
mov
push
xor
inc
outsl
ret
fcomps
mov
or
shlb
xchg
xor
push
adcb
xor
sbb
xor
and
enter
enter
push
fucomi
in
mov
jmp
mov
dec
shll
push
test
ret
cmp
std
data16
mov
dec
add
inc
and
sub
les
lret
mov
sbb
gs
imul
mov
and
push
add
cmp
or
push
pushf
stc
dec
inc
sbb
cld
arpl
imul
adc
mov
adc
nop
ja
clc
dec
cmp
je
inc
inc
mov
test
into
imul
fsubl
cltd
aaa
dec
jge
cmp
lock
xchg
hlt
inc
or
ret
xor
dec
sbb
adc
jge
fiaddl
xor
jp
cmpsl
movsb
ja
jbe
addl
jo
xchg
fistl
push
sbb
imul
inc
scas
cmp
test
repnz
inc
xchg
fidivrs
or
out
ja
jg
adc
cli
add
mov
push
xchg
sub
xchg
cmp
test
mov
inc
jmp
icebp
cmp
push
pop
xor
rolb
or
or
shll
clc
mov
fcomp
shl
popa
cmp
in
push
jne
sbb
mov
mov
daa
enter
sbb
adc
clc
sbb
cld
adc
int
rcll
scas
outsb
or
incl
jecxz
imulb
sub
mov
lret
test
mov
inc
cmp
lock
nop
or
imul
pop
rolb
or
push
ret
jmp
les
mov
mov
jecxz
mov
xchg
cmpsl
insb
push
lea
loopne
or
xor
imul
ret
lock
add
push
cltd
xor
mov
cmpsl
call
loopne
sbb
jnp
aas
outsb
mov
je
add
iret
xor
push
imul
push
dec
or
pop
jo
shll
sbb
push
adc
pop
repz
sti
sbbb
data16
lea
dec
xchg
xchg
pop
jne
addl
mov
cmp
jp
jg
pop
fdivrs
inc
and
andl
gs
xor
hlt
adc
xor
leave
push
clc
add
jne
push
repz
push
inc
es
js
pop
cmpb
das
and
xchg
dec
or
or
mov
rorl
add
and
pop
test
or
mov
or
lock
in
cmp
push
adc
lret
test
sub
outsb
mov
pop
pop
pop
adc
sub
std
data16
sbb
cld
jns
and
popl
lcall
inc
scas
mov
dec
pop
test
push
movl
cmp
xor
dec
stos
mov
sarb
xor
fs
jnp
out
mov
adc
sbbb
sbb
adc
test
loopne
call
loopne
ljmp
add
pop
and
orps
sub
pop
xchg
icebp
mulb
or
push
jns
cltd
add
adc
or
mov
or
push
xor
adc
sub
mov
bound
or
fadd
pop
or
shll
lock
or
sub
add
shrb
into
mov
cmp
mov
inc
dec
jne
lea
add
xor
or
ss
jb
call
lcall
mov
popa
jne
mov
xor
mov
and
lret
push
push
lea
or
outsb
sbb
sub
mov
xchg
or
aam
sbb
popf
adc
sbb
lret
out
fisubrs
cld
ficoml
push
push
jge
test
add
mov
sub
push
cmp
sbb
pop
inc
inc
cld
and
sahf
pop
dec
and
pushl
push
orb
mov
in
sbb
lods
jmp
and
je
and
mov
adc
leave
rol
or
mov
mov
lahf
test
pop
mov
mov
add
lea
sub
ja
lret
sub
call
add
jmp
cmp
push
and
and
pop
add
mov
inc
add
or
push
ret
jl
leave
pop
and
sub
mov
testl
fadd
test
ja
mov
mov
pushf
mov
movb
or
jno
into
add
xor
or
sbb
dec
inc
lock
cmp
inc
xor
dec
mov
pop
insb
push
hlt
add
rol
das
jmp
xorl
mov
clc
pop
mov
mov
cmpsb
push
aaa
je
xchg
sub
aam
sbb
inc
std
jne
fcoms
imul
fldt
stos
enter
sarl
jmp
iret
rolb
inc
sub
or
push
cmp
mov
fwait
push
pusha
paddsw
popf
cmp
sub
lods
mov
nop
xchg
repz
mov
cmp
or
pop
fidivl
push
jmp
inc
jns
push
shl
cmp
in
repnz
add
fdivl
stos
and
mov
scas
mov
mov
inc
jae
cmp
gs
call
add
push
decl
test
push
cmp
leave
inc
xor
xorb
leave
xor
mov
dec
or
adc
jmp
loopne
sub
mov
cld
jmp
loopne
andb
std
cmp
inc
cmp
ljmp
inc
adc
sti
xchg
sbbb
inc
push
jge
add
or
cmp
jb
mov
xor
inc
xor
adc
sbb
call
insb
add
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
insl
xchg
mov
jl
sbb
mov
and
rcrl
inc
inc
push
mov
inc
dec
jne
jle
add
hlt
test
add
mov
inc
push
jnp
test
xor
or
rorb
dec
test
lahf
les
je
loopne
adc
addb
push
mov
push
or
and
mov
test
sbb
or
rol
inc
add
outsl
mov
sti
add
aas
adc
mov
jbe,pn
inc
inc
cmpsb
popf
shrb
inc
push
jbe
jo
jle
cmp
cmc
imul
ljmp
cmp
and
das
mov
mov
mov
popf
dec
loop
ret
mov
dec
loopne
or
pop
sub
jmp
je
jnp
xor
dec
sbb
mov
xor
mov
bound
ret
and
push
out
arpl
subb
sbb
cmpsl
ljmp
xor
push
inc
and
add
push
outsl
inc
adc
leave
insl
inc
mov
mov
and
pop
movl
enter
mov
or
and
in
or
push
adc
and
pop
sbb
pop
adc
int3
mov
ds
jge
mov
into
int3
adc
mov
movsb
jb
jnp
inc
inc
sbb
jp
data16
sub
mov
sub
and
imul
test
aam
out
adcl
int3
push
cwtl
mov
jne
loopne
xchg
paddb
jle
idiv
fistl
push
cmpl
add
outsb
loopne
cmp
cmp
shrb
es
inc
add
push
decl
jne
inc
dec
add
and
inc
xor
mov
xchg
add
nop
mov
inc
jo
pop
sub
aaa
sbb
sub
cmpl
push
pop
ret
xorb
jo
sbb
or
xor
xor
data16
clc
adc
sbb
arpl
mov
lcall
lahf
cmp
add
jge
or
push
jbe
dec
cmp
or
jb
ret
add
into
lcall
mov
enter
sbb
jo
xchg
jmp
sub
jbe
jmp
push
fisubrs
jno
push
sbb
mov
mov
xchg
mov
push
cmp
add
sbb
dec
push
sti
jmp
mov
jns
dec
cli
pop
sbb
sbb
ljmp
push
rorb
rolb
in
sbb
cld
je
pop
or
enter
repz
out
call
in
sbb
cwtl
sub
inc
push
rcll
push
push
scas
dec
sbb
push
mov
in
fsubrp
jmp
test
addl
jge
dec
dec
cs
subb
clc
inc
sub
cmp
inc
mov
shll
cwtl
and
orl
popf
mov
or
dec
test
inc
or
add
mov
inc
mov
les
jmp
movsb
xchg
and
ret
mov
sbb
inc
jb
cmpsb
insb
in
pop
dec
aam
jae
bound
mov
fnstcw
outsl
add
and
sbb
sub
jle
lods
xorl
ret
dec
push
ljmp
dec
cmp
push
push
movsb
pushf
push
cmpsl
xchg
lds
add
add
xchg
xor
xor
shlb
sub
adc
rorb
or
popa
repz
in
clc
jae
nop
add
sub
cmp
cmp
pop
cmp
dec
pop
cmp
pop
sub
jle
pop
sbb
repnz
ud0
push
dec
pop
pop
inc
dec
jp
sti
jge
xlat
out
insb
and
pop
cmp
je
lea
or
lds
push
jge
jg
pop
test
add
orl
adc
pop
lds
mov
ljmp
gs
sbb
jmp
jbe
mov
int3
xchg
es
adc
iret
cmpsb
and
daa
test
es
xchg
dec
mov
mov
ret
es
jmp
mov
xchg
push
mov
mov
add
dec
mov
dec
jp
ds
mov
push
scas
dec
mov
sub
sub
add
pop
das
xchg
mov
jp
pop
inc
sub
andl
rorb
jbe
lock
mov
and
mov
imul
pop
pop
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
cld
jns
movsl
shrb
ljmp
shrl
dec
sbb
dec
cld
adc
sbb
cmc
loopne
sub
aam
mov
mov
push
cmp
add
jno
cmc
sbb
mov
ret
or
lods
dec
das
pop
jno
popa
pop
popa
dec
movsb
js
jmp
jge
add
add
jl
mov
adc
mov
movsl
bound
bts
jmp
stc
cmp
mov
es
movb
cmpsb
mov
and
pop
js
lahf
sub
nop
adc
dec
mov
iret
out
push
enter
test
test
dec
dec
shlb
xor
fisubrs
mov
or
imul
or
clc
mov
or
adc
call
mov
dec
push
pop
insb
pop
adc
rclb
adcb
in
pop
nop
in
adc
nop
pop
sbbb
fstl
inc
mov
iret
repz
or
push
xchg
pushf
movsb
lods
mov
sbb
ds
nop
lahf
jl
fwait
popa
inc
loopne
call
inc
and
add
rclb
pop
cmpsb
or
xor
outsb
cmp
cs
push
mov
xchg
outsb
xchg
jo
mov
or
inc
jmp
sub
push
or
and
add
adc
test
dec
movb
idivb
repnz
jge
inc
mov
orb
lods
mov
movsb
stos
test
das
dec
mov
add
imul
nop
les
sbb
sbb
cmp
add
add
and
daa
lahf
and
test
jne
and
jno
mov
push
inc
aas
dec
mov
hlt
fdiv
mov
cmpsb
xchg
and
add
daa
and
loopne
fs
orb
sti
cmpsl
push
insb
sbb
or
inc
or
dec
mov
mov
sub
pop
ss
dec
adc
inc
pusha
jae
orl
cmp
cmp
push
xchg
roll
push
push
jge
or
lods
imul
sbb
mov
inc
mov
and
jne
lock
insb
or
push
adc
and
or
xor
add
mov
jbe
push
dec
js
mov
cmp
or
test
and
push
inc
fldcw
int3
cmpsb
jmp
subl
pop
adc
xchg
std
lea
mov
cwtl
outsl
push
out
imul
aam
addb
sub
testl
mov
je
movl
sub
clc
mov
push
mov
cmovl
lds
sbb
hlt
jecxz
imul
sub
inc
and
test
lock
fdivl
or
adc
add
ljmp
daa
xchg
xor
adc
les
mov
xlat
sub
inc
sbb
imul
rcll
icebp
andl
test
or
mov
inc
push
stc
fcmovne
nop
sbb
lea
inc
cmp
cmp
xchg
pop
or
xchg
push
jecxz
mov
push
inc
loopne
cmp
xor
jecxz
jmp
ret
insb
sub
js
movsb
lea
push
add
mov
pop
lea
add
dec
add
dec
shrb
mov
popa
adc
sbb
es
out
or
and
pop
test
adc
cld
dec
loopne
push
dec
or
and
sub
dec
inc
add
loopne
and
rorl
xor
adc
aad
mov
push
mov
adc
jbe
push
inc
lcall
add
imull
or
pop
inc
ja
mov
mov
mov
adc
pop
divl
in
or
nop
adc
inc
push
icebp
dec
ds
mov
lret
xchg
sarb
push
cmp
mov
hlt
dec
ljmp
jns
pop
mov
pushf
sbb
xchg
test
adcb
pop
inc
mov
loopne
cli
add
add
add
add
and
and
xchg
xor
ret
xor
out
add
push
sub
push
push
push
lock
mov
jmp
pop
adc
pop
and
jle
inc
or
mov
add
or
lret
inc
add
jmp
fsubr
mov
jnp
mov
inc
cmpl
pop
test
cmpb
cmpl
les
xor
sub
jg
dec
test
dec
pop
test
xchg
lock
add
xor
cmp
rorb
popf
in
in
pop
mov
jge
cs
fadd
fdivrs
cmp
jne
xor
push
arpl
mov
xchg
adc
xchg
xor
inc
leave
mov
leave
test
in
lcall
call
sahf
add
or
pop
push
icebp
mov
std
xchg
ljmp
arpl
jle
rcrb
jl
cmp
mov
jb
sbb
sar
pop
mov
movsb
dec
mov
or
inc
jo
xchg
dec
test
or
aam
mul
pop
cs
fsubs
fmulp
sub
testb
je
or
sub
into
into
add
hlt
scas
pushf
pop
pop
cs
mov
add
inc
sbb
mov
or
or
in
sub
aam
out
mov
xor
mov
mov
push
pop
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
nop
je
or
inc
insb
je
adc
into
pusha
lock
test
data16
insb
xor
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
or
add
ss
in
cwtl
fs
or
imul
pop
outsl
cmc
jne
loope
and
js
pop
xlat
add
push
movsl
je
mov
inc
inc
push
outsb
dec
jecxz
loope
pop
frstor
imul
jb
or
sbb
jle
xor
mov
pop
push
or
mov
fadds
mov
xor
inc
mov
fdivr
jmp
loop
popf
pop
test
and
je
push
imul
testl
mov
in
jne
das
mov
adcl
pop
fdivrl
mov
and
in
inc
xor
xchg
or
or
jo
out
sub
in
leave
add
imulb
test
and
jne
dec
pop
push
mov
cmp
inc
push
insl
cmp
jl
xor
push
xor
negl
out
call
testb
add
ss
cmp
dec
cmp
test
sti
test
push
add
mov
int
pushl
aas
aas
push
testl
shl
setp
lret
mov
mov
inc
mov
dec
mov
pop
or
subb
js
jecxz
xchg
xchg
add
inc
xchg
push
xor
cmp
push
xchg
lock
je
or
sub
je
push
pop
loop
gs
into
add
addr16
inc
inc
xor
je
cmp
je
push
ss
lods
test
insl
cwtl
fwait
cmp
push
enter
insb
xor
fildll
pop
xor
mov
push
add
movsb
orb
mov
jb
xchg
ret
pop
pushf
fld
or
xorb
push
add
mov
fiadds
ret
nop
push
jne
mov
jne
mov
fnstsw
cmp
jle
insl
cmpl
incl
lock
sub
in
sbb
adc
push
sbb
mov
out
call
inc
sub
inc
cld
adc
xchg
cmc
mov
sub
es
mov
or
popf
test
mov
and
lcall
dec
xchg
cwtl
inc
call
sbb
dec
nop
cmpsb
push
clc
cmpb
jne
and
cmp
adc
push
outsb
mov
add
out
addr16
call
mov
push
mov
adc
pop
xchg
cmp
xor
js
dec
imul
push
lret
sub
adc
cwtl
popf
stos
repz
sbb
inc
ficoml
gs
fidivrl
xchg
data16
or
je
cltd
lock
or
je
sbb
jl
jae
mov
adc
inc
ficoml
fcoml
in
pop
fimull
xor
loop
inc
addr16
test
jg
or
jne
and
lea
pushf
mov
push
inc
jle
fiaddl
test
sub
lods
sub
cmp
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
adc
jne
in
dec
shlb
xor
ss
cmc
push
jmp
loope
insb
pop
rol
or
xchg
int3
jle
and
repz
js
es
push
je
gs
jg
sbb
cs
add
sub
mov
and
sub
push
test
sahf
and
jns
stos
mov
hlt
push
cld
and
fcoml
or
pop
adc
shl
push
jp
mov
jmp
lea
lahf
xchg
or
lods
push
int
add
push
jbe
dec
andl
xchg
cmpsb
push
fdivs
add
mov
nop
aaa
cmp
mov
pushf
push
subb
rcll
sbb
ret
cs
pushf
test
inc
stos
xchg
lock
lods
add
cmpsb
mov
xchg
mov
sti
push
loopne
push
icebp
jl
adc
je
mov
xlat
adc
adc
daa
dec
cmp
loop
mov
mov
sbb
cmp
movsb
dec
js
mov
add
sub
cmp
mov
mov
test
add
cwtl
push
es
sbbl
lcall
add
pusha
and
mov
lcall
adc
adc
xor
sbbb
mov
insb
or
decb
push
lea
mov
andl
sbb
mov
and
jl
test
rcr
shr
scas
adc
mov
adc
add
pop
and
push
test
or
decb
push
pop
popf
adc
cltd
mov
push
aas
out
aas
mov
leave
inc
xor
pop
stc
adc
lcall
fmuls
xor
mov
pop
dec
dec
xor
pop
clc
sub
cmp
add
jmp
push
mov
push
jmp
push
jne
jecxz
mov
or
fs
xor
add
sbb
push
dec
arpl
inc
xchg
cmpsb
sahf
and
push
dec
lock
or
xchg
and
add
movsb
lea
sub
xchg
push
pop
adc
dec
add
ss
push
xchg
je
jae
or
mov
jg
imul
add
jmp
clc
sub
mov
inc
add
fdivl
rclb
or
sub
adc
sbb
iret
jno
sub
cld
shr
mov
imul
mov
add
inc
jmp
ret
dec
or
outsb
or
cmpsb
dec
xor
fcoml
xor
cld
or
mov
clc
adc
or
adc
mov
cli
add
cmp
jbe
push
pop
mov
cmp
jne
subb
jae
mov
rcll
jmp
dec
add
shll
pop
mov
and
and
adc
dec
loopne
pushf
mov
cli
lods
pop
add
push
or
mov
das
add
pop
and
push
dec
sbb
mov
mov
cmc
xlat
jmp
clc
and
notb
mov
dec
shlb
and
sti
add
pop
mov
push
loop
pop
cmp
mov
mov
inc
sbb
lret
imul
dec
shll
push
pop
jp
data16
outsb
fdivs
xchg
mov
sbb
shr
not
and
sbb
and
xor
sbb
pop
mov
cltd
repnz
dec
add
cltd
xchg
test
and
sbb
jmp
mov
pop
mov
mov
mov
rorl
dec
pop
ss
dec
pusha
mov
mov
lods
push
testl
mov
mov
roll
mov
jmp
dec
in
adc
loopne
lock
dec
call
cld
stos
pop
scas
mov
repz
cs
je
inc
stos
and
sub
std
sar
loope
add
scas
jp
push
call
aas
shlb
mov
or
sbb
out
cmp
sub
dec
inc
adc
dec
adc
add
and
pushl
push
push
adc
mov
and
pop
xchg
int
mov
fildll
enter
cmpsl
mov
sbb
jl
sbb
add
or
pusha
testl
shrb
cmp
inc
test
loopne
stos
imul
xor
data16
outsl
push
push
cmp
xor
fst
mov
addl
lahf
stc
stc
negb
les
orl
cmp
cmp
cmpsb
cmp
inc
mov
push
outsl
and
subb
adc
fucomi
fwait
mov
dec
xorb
add
rcl
addb
popa
xlat
mov
mov
outsl
push
loop
add
inc
ljmp
lea
xchg
cmp
push
mov
inc
dec
or
hlt
or
sub
int3
out
imul
int
lcall
add
sub
sub
shr
sub
mov
and
adc
xchg
push
ja
jge
mov
cld
lock
call
aad
add
je
clc
add
pushf
fmull
adc
sub
jg
fwait
inc
fs
pop
mov
sub
mov
lock
dec
dec
inc
jne
or
clc
aad
js
lds
not
and
jl
push
dec
les
sbb
jecxz
sbb
sub
nop
out
mov
loopne
or
jb
cld
or
icebp
ja
fisubl
mov
and
pushf
jle
cmp
test
inc
mov
punpcklbw
inc
xchg
cmp
nop
stc
add
push
xchg
add
mov
int3
push
pop
lcall
pop
inc
add
stc
sbb
clc
rcr
sub
add
cmp
or
rol
dec
or
out
add
push
jns
add
ds
sub
add
ljmp
adc
pushf
sar
dec
mov
cs
inc
jp
fstpl
lea
out
and
es
imul
pop
push
jns
cmpsb
pop
push
pop
adc
add
adc
scas
mov
pop
js
and
and
js
cmp
sub
stos
or
sbb
adc
push
adc
cwtl
xchg
mov
and
mov
sub
jl
les
rcrl
jge
pop
xlat
sub
pop
xor
push
rcll
dec
jp
movsb
pop
sub
inc
cwtl
shrb
sub
ss
jo
cmp
dec
je
lret
sbb
push
mov
xchg
fbstp
pop
mov
fnstenv
dec
ficoms
add
bndldx
sbb
dec
lea
mov
xchg
jbe
and
mov
mov
pop
sbb
lods
decb
in
mov
cmp
sbb
cmp
inc
adc
add
imul
pop
rcrb
ret
cmp
pop
and
inc
cmp
outsb
and
jge
jo
out
cmpl
cmp
lcall
and
ret
fldcw
push
nop
cmp
pusha
mov
mov
xlat
pop
ret
adc
add
inc
data16
call
push
jne
mov
jne
mov
lods
jnp
add
xor
pushf
outsb
in
or
arpl
cwtl
or
mov
lock
add
lcall
std
fimull
jle
pushl
sbb
in
cli
push
sbb
and
mov
dec
pop
popa
push
outsl
loope
jne
fwait
jno
cpuid
xchg
ds
mov
add
out
in
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
pusha
cmpsl
cmpsb
mov
add
xchg
add
stos
inc
sbb
iret
push
stos
inc
cmp
xchg
cmp
push
and
jecxz
mov
decb
jne
adc
xor
mov
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
push
clc
into
xor
xchg
cmpsb
imul
pop
inc
mov
roll
pop
xor
add
and
cmp
mov
or
push
or
dec
jp
or
push
mov
push
mov
sti
jb
out
or
sub
popf
stos
or
adc
add
scas
and
lods
test
xchg
lea
ds
jne
cmp
adcb
push
ds
and
add
js
lock
repnz
jnp
jmp
sbb
loopne
or
testl
jb
or
xorl
or
pop
pop
and
mov
adc
insl
mov
add
push
pavgw
push
shlb
or
dec
lcall
inc
sahf
add
mov
jg
fldl
mov
add
mov
pop
imul
mov
add
bndldx
or
sbbb
cmp
cmp
sub
add
push
les
es
mov
mov
or
je
and
and
repnz
cmp
cmp
push
push
pushl
inc
adcl
add
dec
jo
cld
into
add
or
jmp
push
adc
orb
ficoms
sbb
mov
jbe
and
lahf
pushl
pop
xor
outsl
adcl
or
adc
xchg
pop
jne
push
add
std
pop
jo
pop
inc
sbb
movsl
mov
icebp
or
iret
lcall
inc
js
push
addl
pop
movsl
add
pushf
cmpsl
pop
jl
mov
xchg
sbb
fcoms
loopne
es
mov
xchg
xor
or
je
push
jl
in
popa
sbb
mov
mov
or
enter
test
movb
pop
movsb
rcrb
xor
xor
mov
jg
pop
int3
inc
addb
mov
in
jo
bnd
daa
xor
popf
call
inc
cltd
movsb
hlt
mov
call
xor
sarb
jbe
mov
dec
adc
dec
sbbb
movzwl
or
int3
test
lret
lods
in
je
cmp
cmpsl
xor
mov
mov
mov
cwtl
mov
add
test
mov
imul
pop
pop
xor
ja
aas
iret
xchg
mov
faddl
dec
orb
xor
sbb
adc
ret
inc
xchg
pop
cmpsb
insl
lret
pop
add
imulb
arpl
or
mov
cmp
lea
scas
cmp
jb
jb
scas
cmp
pop
hlt
faddp
lods
loopne
mov
jb
repz
push
inc
pushf
pusha
nop
out
push
fistpll
insb
jne
mov
sbb
or
pop
out
sbb
sbb
jg
mov
movl
xor
nop
addr16
or
lret
or
jmp
xor
push
pop
push
imul
mov
ret
sub
nop
daa
int
movsb
shll
sub
jns
ljmp
adc
add
sbb
sub
lods
mov
pusha
shl
dec
sbb
mov
call
push
mov
mov
push
xor
fs
mov
sbb
push
lods
lcall
push
fmulp
call
lret
dec
outsl
dec
push
cwtl
add
mov
inc
push
jb
scas
adc
in
cld
daa
add
mov
mov
stos
data16
pop
adc
dec
rorb
icebp
test
mov
jb
mov
leave
add
out
cmp
test
push
hlt
xchg
lahf
push
push
jb
inc
lods
in
inc
sahf
inc
sub
and
and
call
in
jns
leave
lods
add
sub
xchg
dec
scas
nop
rcrb
lock
mov
jb
xor
leave
add
lret
and
pop
test
test
jo
adc
fwait
mov
int3
test
lock
mov
adc
pop
movsb
cmc
or
or
bound
mov
fs
mov
xor
cmpsl
push
mov
xor
movsb
imul
lea
sbb
fadds
cmp
sub
ja
cmp
push
pop
imul
sub
adc
lret
pop
aas
ret
mov
cmpsb
pusha
out
pop
clc
xchg
ret
lds
fiadds
mov
inc
or
fwait
cmp
and
aaa
or
mov
mov
or
adc
sub
fldenv
test
and
mov
jne
xchg
push
call
mov
imul
mov
or
or
mov
xchg
cwtl
push
add
xor
and
pusha
popa
xchg
pop
add
mov
adc
cmc
aam
repz
and
or
ds
int
in
fsubs
push
adc
add
ss
in
jno
xchg
test
add
hlt
dec
out
dec
mov
mov
aaa
inc
cld
push
rolb
jne
add
aaa
mov
inc
mov
hlt
add
adc
add
pop
or
mov
or
mov
outsb
les
push
or
shll
enter
cmp
jne
pop
lret
cmp
add
pop
sub
rorb
xchg
mov
push
clc
add
cli
xor
shll
cld
std
lcall
loop
mov
fwait
mov
inc
ja
xor
pop
sbb
inc
fcoml
cmpsb
xor
jg
je
pop
sbb
add
pop
sub
icebp
mov
sbb
dec
mov
jle
movsb
push
movsl
xchg
je
push
or
scas
and
enter
mov
lcall
cmpsb
pop
loopne
fldl
or
fldl
or
aaa
jno
mov
and
mov
push
out
add
push
leave
pop
jbe
sub
sub
rorl
mov
sbb
xchg
pop
sub
das
in
mov
xchg
dec
je
add
push
or
je
or
sti
fsts
push
pop
and
pop
pop
mov
adc
ja
add
mov
outsl
test
add
add
xchg
stc
fwait
add
or
test
xchg
stc
sub
repz
lock
test
in
lock
ja
sbb
in
inc
adc
fdivl
push
push
pop
push
fdiv
fsubrl
fstl
adc
inc
sbb
lock
mov
aaa
jne
das
and
or
inc
lock
out
scas
cmp
push
fsub
push
out
testl
rcll
push
and
push
xchg
pushf
inc
add
adc
stos
enter
negb
sbb
mov
xchg
in
xchg
lock
fsts
ds
push
ds
xchg
mov
jle
andb
aas
mov
clc
add
mov
jmp
push
push
xchg
jmp
inc
faddl
adc
clc
popf
and
or
aas
push
sbb
cli
clc
push
in
or
fmull
inc
jp
addl
test
jne
push
push
adcl
jge
outsb
cmp
pop
sub
or
jmp
rcl
pusha
or
mov
mov
int3
pusha
mov
shl
pushf
sbb
clc
pop
jb
std
shl
inc
or
jne
or
leave
clc
std
pop
mov
jno
push
clc
pop
mov
rcrl
lcall
mov
jmp
mov
testb
jne
dec
sbb
test
loopne
sar
lea
testb
sub
fcoms
stos
pop
jg
push
mov
dec
mov
mov
mov
loopne
mov
testb
mov
popa
sbb
std
insb
out
xor
int
mov
or
adc
les
mov
or
lock
xchg
std
jle
js
lods
clc
rcr
lea
mov
mov
nop
ja
ror
pushf
lret
in
lock
daa
push
jecxz
sbb
push
and
or
add
adcl
dec
cmp
sbb
push
and
adc
mov
cmp
inc
cmp
stc
or
xor
mov
push
xor
in
and
mov
fstpt
push
lret
fmull
mov
inc
dec
cmp
subl
hlt
decb
jne
inc
sub
jb
or
adc
and
sbb
lret
jne
jnp
ret
ficoms
xor
pop
inc
jne
cmp
inc
fcomps
in
movsl
dec
inc
insl
xchg
cmp
push
int
push
imul
xchg
push
lcall
arpl
sbb
fadd
push
leave
flds
mov
aam
outsb
lea
adc
lcall
sbb
mov
xor
call
xchg
jns
push
xorb
xor
mov
icebp
xchg
pop
adcb
sti
push
inc
cmp
lea
mov
lret
popf
in
mov
jmp
mov
mov
add
cmpl
sbbb
cmp
jg
mov
addr16
mov
jg
sub
adc
enter
ret
jns
daa
mov
scas
jbe
out
add
push
imul
inc
cld
xchg
hlt
std
cmp
push
sub
pop
add
adc
pop
mov
loopne
push
or
jmp
insb
adc
je
notl
add
jmp
loopne
mov
sub
or
movsb
push
jns
sbb
jecxz
jl
inc
repnz
mov
adc
lock
lret
shll
and
leave
lock
fdivr
adc
mov
ret
mov
and
and
shrl
fmul
outsb
pusha
test
pop
mov
adc
gs
jmp
nop
popf
mov
call
jl
std
aas
mov
es
sbb
sahf
push
mov
repz
mov
loop
push
fdivrs
mulb
mov
imul
mov
push
fidivs
lds
pop
mov
out
sub
mov
lock
out
imul
mov
imul
push
mov
test
adc
cmp
roll
push
mov
adc
cld
pop
scas
xor
mov
std
repz
stos
cwtl
out
imul
inc
add
lea
push
imul
mov
lret
shl
ret
xor
roll
adc
push
cmp
or
inc
adc
sub
lods
pushf
cmp
cmp
mov
sbb
inc
mov
std
lock
cmp
popf
imul
test
xchg
loopne
mov
cltd
std
inc
repz
daa
push
scas
scas
shlb
out
lret
mov
push
fdivrp
or
adc
ds
cs
shrb
or
test
dec
jmp
dec
mov
movsb
mov
roll
xchg
lret
sar
lock
xor
mov
sub
sub
or
pop
mov
adc
and
cmp
loopne
sub
or
pop
or
inc
dec
test
push
ss
aam
jns
jae
ds
std
dec
andl
sub
fbstp
cmpsl
add
push
movsb
adc
sub
clc
mov
daa
inc
push
inc
lret
inc
sub
sub
into
push
dec
dec
hlt
or
enter
fdivr
das
push
and
jno
push
or
and
in
xchg
std
std
std
lods
and
loopne
push
sub
xchg
aaa
fsubrl
movsb
bound
mov
xchg
mov
nop
add
inc
add
stc
cmp
roll
xor
fsubrp
das
enter
scas
pop
testb
and
js
and
adc
lret
cmp
and
fcoms
sbb
inc
push
xor
les
cwtl
aas
add
rcll
lcall
or
fmull
xchg
rcr
jne
xlat
test
aas
mov
aam
jnp
or
xchg
push
mov
sbb
mov
in
pop
sarb
xor
adcl
push
loopne
push
sbb
lahf
mov
lret
and
inc
mov
jl
insl
icebp
or
and
sub
insb
dec
cmp
pop
movsl
outsb
fnstsw
ret
loopne
pop
ret
xor
jmp
int3
stc
ljmp
and
push
movsl
jmp
xor
add
xor
jecxz
mov
and
pop
inc
scas
movsl
call
enter
cmpsl
cmp
test
stc
test
sub
xchg
xlat
adc
and
leave
mov
int3
inc
inc
inc
sahf
stc
aam
les
out
sub
jns
xor
push
aaa
jbe
sub
dec
and
int3
stc
ljmp
and
xchg
aam
push
pop
mov
lret
enter
sub
fisubrl
in
lret
cmp
es
test
and
cmp
je
cmp
adc
xor
in
aaa
ficoms
scas
lret
outsb
xchg
xchg
xchg
dec
cmc
loope
xor
fwait
mov
cmpsl
sbb
int3
frstor
in
stc
inc
clc
mov
lret
pop
lods
sub
lods
xchg
jmp
and
call
test
enter
inc
repnz
stos
mov
fdivrl
xchg
aaa
dec
lock
lcall
xor
mov
and
enter
dec
dec
dec
das
mov
lret
and
and
bound
xchg
mov
nop
push
enter
incl
mov
add
mov
nop
or
add
in
lods
or
cltd
ret
rolb
push
push
add
je
jmp
dec
aaa
add
stos
mov
jmp
add
push
iret
sarl
in
aam
xorl
dec
call
xchg
shr
sbb
adc
imull
popa
cltd
nop
sbb
jg
adc
push
sub
inc
push
pusha
inc
sub
stos
dec
addr16
jo
jle
pop
lods
inc
inc
aaa
into
adc
cltd
mov
cli
or
pushl
jg
cmp
pusha
fadds
test
lret
mov
pusha
movsb
cvtpi2ps
movsb
and
inc
add
jp
cwtl
cmp
adc
xchg
dec
rep
lcall
neg
pop
mov
sub
sahf
push
lock
push
lods
cmp
sub
mov
sbb
mov
push
sub
or
sub
dec
adc
push
and
icebp
mov
push
pop
outsl
inc
or
push
jns
jl
pusha
jle
sbb
xor
dec
movsl
ja
mov
pushf
out
out
mov
hlt
cmp
shrl
or
and
cmp
lods
lret
pushf
enter
pop
mov
ret
nop
dec
rorb
or
into
and
call
lock
sub
sbb
clc
ja
ss
cli
xchg
in
add
sub
ret
loope
lcall
movsb
jge
lcall
rcll
je
rclb
pop
jnp
out
and
or
mov
fldl
push
push
ret
imul
sbb
movsb
mov
jae
push
mov
loopne
pop
add
movsl
leave
xchg
jo
pop
cmp
fsub
pop
bound
imul
enter
ss
dec
arpl
jae
or
add
shl
pop
aam
ret
inc
cld
dec
add
jne
xchg
js
arpl
or
ja
lea
rorl
pop
cld
cmp
sub
je
popa
rcl
mov
adc
mov
and
push
pop
mov
and
sarb
repz
nop
mov
stos
adc
addr16
cmp
or
jg
xchg
sub
jl
icebp
inc
xchg
xchg
or
mov
lahf
cld
push
mov
repnz
inc
or
outsl
mov
test
je
idivl
sar
xor
loop
ret
aaa
mov
push
push
mov
sbb
mov
jle
and
and
push
and
add
les
mov
push
mov
add
jmp
bound
adc
and
fsub
mov
out
or
insl
mov
pop
inc
cs
add
sbb
sub
das
jge
sub
push
jo
das
mov
repnz
mov
in
inc
inc
lds
inc
das
pushl
sub
pop
int
add
add
push
inc
loope
push
ret
mov
cmp
fists
ret
jnp
orb
je
hlt
scas
or
leave
daa
clc
inc
push
inc
sbb
jae
cmpsl
xor
inc
testl
fdivr
mov
mov
lret
sbb
test
add
jp
adc
pusha
sbb
xchg
scas
mov
jae
push
movups
pop
adc
mov
aas
je
sub
push
mov
sub
xchg
cmpsb
cmp
pop
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
or
mov
jnp
jne
div
pop
dec
adc
inc
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
jle
roll
or
fcmovu
scas
nop
inc
inc
fcmovu
lret
iret
gs
or
loopne
mov
add
pshufw
sub
pop
jmp
inc
repz
inc
pop
clc
mov
movb
adc
movb
cmp
dec
fwait
push
jno
push
adc
mov
lret
adc
push
push
addl
dec
cmp
sub
add
sbb
or
add
cmp
xchg
and
nop
xor
mov
les
sbb
jge
ret
mov
pop
mov
adc
popf
jne
mov
xor
cmpsb
sahf
inc
or
sbb
adc
lcall
dec
cmpsb
xchg
test
inc
stos
sbb
inc
pop
dec
sbb
sbb
mov
inc
cmp
les
jne
jno
call
jb
pop
outsb
or
imul
pop
xor
add
jae
push
sub
test
pop
popf
test
cmp
imul
push
incb
mov
adc
mov
and
nop
les
addb
sub
sbb
jecxz
orl
lods
or
add
into
mov
pop
and
add
inc
jl
cmpsb
cld
sbb
subb
mov
int
dec
mov
pop
push
sub
nop
push
dec
aas
adc
inc
fs
shrl
stc
mov
pop
adcb
lret
jo
imul
sub
mov
flds
test
add
movsb
rorb
jb
in
or
stos
add
scas
pusha
mov
fs
test
dec
js
test
push
jge
xchg
or
push
in
sarl
sub
add
xchg
fstl
inc
lock
or
xchg
rolb
mov
xor
int3
inc
cmp
xor
push
test
cltd
mov
sahf
into
faddl
fwait
add
cmpsl
fldl
push
repnz
je
lea
pop
mov
movl
xor
sub
ret
add
fs
add
add
je
mov
ficomps
mov
cld
iret
jle
sub
test
jne
or
scas
shl
push
adc
push
xor
loopne
xor
sub
out
add
stc
xor
test
mov
in
iret
xor
jo
and
xchg
pop
and
addl
jne
movsl
mov
ret
inc
mov
test
ret
out
cmp
je
ss
sahf
ss
and
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
add
inc
sbb
pop
and
daa
iret
and
scas
and
mov
pop
out
add
std
sbb
push
xor
fs
dec
push
int
or
mov
insb
clc
or
add
jmp
repnz
add
lret
cmp
hlt
xchg
mov
or
jge
mov
call
sub
mov
inc
cmp
roll
cmpl
push
ret
daa
dec
sbb
sub
adc
mov
xor
xorb
push
dec
sbb
pop
addb
dec
or
jmp
mov
sbb
adc
jb
inc
sub
or
pushf
add
mov
push
push
shlb
xlat
xor
mov
test
push
mov
jecxz
push
cs
jo
push
cs
jne,pt
enter
and
rcll
sub
push
adc
push
xchg
inc
adc
cmp
or
add
pusha
andl
mov
mov
add
push
lret
pop
inc
or
imul
adc
push
push
or
sub
dec
xchg
mov
lods
into
or
inc
dec
and
adc
in
sti
add
shrb
add
push
cmp
imul
inc
add
pop
jp
nop
test
fs
insb
or
inc
lds
and
xchg
out
ss
or
cmp
and
push
and
sub
fs
or
popa
aas
pop
cmp
cmp
xor
cmp
and
or
test
pop
mov
inc
fs
inc
lock
cmp
xorb
pusha
mov
sub
out
sub
dec
or
xor
out
push
cmp
incb
mov
divb
and
mov
pop
hlt
add
pop
mov
cmp
push
mov
addl
cwtl
jne
push
call
or
lock
dec
mov
and
or
mov
fs
fstps
iret
and
cmc
mov
mov
adc
shrb
jbe
pop
xchg
jg
lea
sub
sbb
pop
push
add
jmp
mov
scas
je
push
mov
mov
cltd
xchg
addr16
call
fidivrl
aaa
popa
mov
idivl
push
in
mov
in
or
test
or
mov
add
inc
pusha
jne,pn
sbb
testl
mov
pop
sub
adc
cmp
jge
mov
ret
or
adc
inc
sub
xor
add
fidivrs
push
push
ret
push
dec
jmp
push
insb
repnz
ret
cmp
inc
dec
add
aaa
xor
mov
jo
sub
adc
fs
jno
xchg
imul
add
sbb
lcall
and
or
jno
xchg
insb
in
das
imul
inc
xchg
ficoms
push
push
pop
movsb
push
xchg
flds
int3
push
jecxz
shrb
cmpl
jb
jecxz
sbb
bound
and
jbe
dec
jp
cmp
inc
or
add
and
addr16
pusha
cmp
dec
jae
cmp
add
inc
fistpl
and
inc
test
xor
and
cmp
dec
into
xchg
lock
loope
rcll
and
cmc
sbb
mov
lret
dec
and
mov
daa
outsl
loopne
cmp
jbe
incb
jge
push
shll
sub
cmp
lret
adcl
popa
xor
mov
je
push
inc
cmp
sbb
cs
adc
sarb
gs
add
enter
add
mov
daa
pop
inc
popa
mov
or
add
imul
push
sub
stc
in
or
out
mov
movl
outsl
imul
in
fdivs
lods
mov
mov
inc
and
cmp
pop
mov
cmpsb
rorb
decl
arpl
adc
inc
mov
rorl
sub
inc
mov
or
mov
mov
jl
sbb
addl
or
test
xchg
ret
lahf
xchg
add
inc
ljmp
sahf
or
jge
stos
ja
or
aad
cmp
ss
jmp
xor
adc
rcrb
inc
inc
popa
cmp
adc
add
add
inc
pop
je
pop
es
popf
dec
sahf
jb
je
dec
shll
mov
adc
xor
flds
sub
adc
add
es
inc
push
xchg
lods
addl
or
or
call
cmp
cmp
and
inc
mov
mov
jns
fcmovu
add
xor
inc
pop
loope
pop
add
popa
adc
sahf
dec
and
sub
pop
and
inc
sbb
cmp
clc
out
xor
sbb
pop
fsubr
mov
mov
xor
dec
and
andb
mov
loope
jecxz
mov
outsl
cld
hlt
aas
jae
mov
cli
inc
dec
shl
adc
push
ss
stos
mov
mov
ret
xchg
jge
out
adc
sub
dec
mov
or
mov
xchg
push
add
inc
aam
lock
adc
jne
adcb
mov
in
mov
jo
fs
outsl
cmp
out
cmc
dec
test
push
jne
in
mov
cmp
popf
ss
dec
inc
inc
or
jne
repnz
sub
push
sar
cmp
inc
hlt
arpl
rol
mov
adc
jecxz
adc
pop
clc
dec
jo
push
js
aad
lea
add
cld
sub
push
sbb
jge
ret
jmp
sbb
addb
lock
cltd
pop
sbb
or
or
int
pop
or
lock
data16
fdivs
jo
xor
mov
mov
rclb
or
push
push
pop
push
dec
add
lds
push
or
dec
sub
pop
popa
lea
insl
fstpt
or
or
or
push
and
sbb
cmp
xor
inc
mov
push
jo
in
js
out
add
cmp
pop
scas
add
add
cmp
mov
sar
jl
mov
pop
pop
sbb
xor
adcb
leave
sbbl
sbb
and
sbbb
dec
andb
and
adc
add
into
adc
fisttpl
sar
sarb
jg
popf
aas
ss
adc
test
jle
adc
pusha
or
sbb
cmp
push
mov
dec
push
xchg
mov
push
mov
add
sar
and
shl
clc
insb
ret
loopne
xor
and
mov
out
inc
add
and
push
jns
mov
inc
or
inc
adcl
xchg
sahf
lcall
iret
mov
addl
enter
adc
jb
xchg
andl
testb
inc
inc
shl
mov
xor
cmpsb
inc
mov
int
pop
sarl
aaa
xor
rorl
xchg
jne
idivb
add
jo
js
or
je
and
movl
sub
jmp
scas
shrl
jae
movsl
or
or
push
adc
out
mov
jmp
not
mov
mov
out
push
xlat
cs
sti
fsts
xor
push
repnz
dec
xchg
movsb
loope
lock
inc
nop
pop
xchg
mov
pop
div
pop
mov
test
adc
loopne
or
addb
push
rorl
lret
sbb
loope
out
xor
mov
and
jb
rcrl
inc
sbb
sub
push
sbb
cmpl
dec
femms
sbb
ret
cmp
inc
mov
mov
jmp
mov
popa
push
mov
test
clc
jae
cmp
pop
ljmp
mov
orb
mov
insl
inc
jecxz
out
add
ret
pushl
add
notl
push
jae
and
ss
cmp
add
add
pusha
pop
ja
ret
mov
wbinvd
mov
mov
inc
inc
adc
jl
lret
lahf
cmp
pop
test
repnz
sahf
mov
xchg
jo
and
pop
fildl
inc
push
mov
push
dec
popa
xchg
clc
cmp
fnclex
stos
inc
xchg
xor
out
shrl
imul
or
loopne
sbb
sbb
xchg
out
mov
nop
dec
cmp
lret
or
xchg
imul
arpl
push
mov
je
add
xchg
push
test
test
insl
popf
shl
ret
dec
aam
push
or
ss
xor
call
imul
decl
int3
lock
inc
adc
mov
insl
pushf
or
pop
lcall
or
js
push
cltd
and
lock
push
sub
pop
dec
add
or
push
mov
pop
mov
fstl
cmp
das
cmpl
add
jmp
pop
mov
xorb
or
lahf
fmull
xchg
notl
push
inc
or
movsl
fnsetpm(287
rol
es
sbb
mov
sub
cmp
ret
xor
mov
lcall
outsl
fsubr
push
mov
add
pop
fstpl
mov
test
stos
int3
icebp
mov
and
xlat
ljmp
shlb
sub
adc
outsl
outsl
stos
adc
jo
sub
jae
jmp
cmp
or
sbb
popa
jmp
fcomps
xor
mov
mov
in
orb
mov
mov
aaa
lret
enter
push
jecxz
cmp
test
or
addr16
xor
adc
cmp
and
fbstp
jl
cmp
jg
inc
jmp
mov
ret
sbb
jne
imul
add
add
shrb
jge
aas
sbb
aad
push
movsb
int3
push
bswap
sbb
inc
or
pop
popa
push
pand
pop
adc
mov
mov
xchg
testb
mov
adc
mov
push
pop
imul
js
sbb
jne
push
ja
in
jne
and
add
loopne
in
bound
mov
or
or
leave
lcall
push
rol
push
or
movl
inc
or
repz
add
pop
fstpt
inc
push
or
js
je
pusha
jecxz
push
in
mov
push
cmp
filds
sbb
and
push
add
pop
or
test
pop
pop
in
insl
or
test
or
xchg
rcrb
cmp
dec
dec
inc
loopne
dec
push
mov
or
es
in
xchg
cltd
and
sbb
cmp
dec
and
ss
mov
jg
add
fimull
lock
fisubrl
cmp
push
sub
xchg
cmp
jl
shrb
or
in
int
test
add
mov
fs
add
fildll
jne
add
push
pushl
es
cltd
cli
cld
xchg
test
adc
in
out
out
and
or
adc
jmp
sahf
sub
aam
shl
ret
das
aam
sbb
stc
ds
movsl
xor
or
jne
pop
in
mov
cmp
fmuls
les
fcmovnbe
xor
dec
dec
test
loope
sub
mov
shrb
and
hlt
or
push
fs
aad
cmp
movb
mov
add
add
xchg
add
cmp
hlt
push
into
mov
xorb
push
add
add
icebp
push
push
movsl
jo
sti
jg
push
mov
sbb
rorl
int
pushf
sbb
xor
and
bound
movsb
jno
xor
push
adc
dec
out
nop
dec
sub
pop
jg
dec
or
push
fs
jg
jae
push
pop
jl
mov
dec
stos
sub
sub
leave
or
sub
leave
xchg
or
call
fildl
xchg
and
mov
xchg
fadds
mov
add
mov
mov
jbe
lock
xchg
jo
mov
pop
cmpsb
cmpsb
into
outsb
lret
aaa
mov
xor
inc
push
clc
push
inc
dec
pop
int
xchg
add
jmp
lods
pop
stc
outsl
mov
sbb
pop
pop
cmp
dec
cmp
mov
mov
sbbb
sbb
push
data16
fdivrl
sahf
dec
cmc
lcall
mov
enter
xchg
insb
inc
dec
jmp
xor
add
push
repnz
mov
and
in
sbb
or
add
enter
cmpl
cmp
inc
stc
mov
movsl
and
jge
aad
jp
push
mov
jbe
add
cli
add
test
scas
add
or
add
mov
cmpb
in
data16
push
or
dec
or
test
sbb
mov
adc
decb
cld
push
sub
inc
lock
xor
cmc
repnz
pause
shll
loope
shrb
adc
push
cmp
lock
hlt
fwait
cmpb
test
je
addr16
scas
pop
movsb
pop
inc
call
adc
aam
shlb
stc
jl
mov
jmp
cmp
or
je
or
imul
sbb
mov
movb
testb
cmpsb
add
pop
sbb
dec
adc
or
arpl
push
scas
xchg
or
xchg
std
repnz
sub
or
cwtl
lcall
xchg
adc
push
push
test
dec
mov
xor
lds
mov
mov
les
rclb
sbb
mov
jo
cmp
push
shrl
adc
stos
hlt
mov
jne
push
loope
pop
add
and
xlat
roll
mov
icebp
enter
xchg
jns
rolb
mov
arpl
xchg
jns
cld
sub
lea
test
mov
ja
imul
cmpb
testb
lret
fildl
je
pop
insl
xor
or
and
leave
inc
stos
add
adc
sbb
mov
jbe
add
sub
mov
aad
cmc
adc
mulb
inc
cmp
jae
push
cmp
jl
mov
das
inc
bound
mov
add
sar
sbb
lea
testb
jne
clc
push
aaa
xor
mov
xchg
into
push
into
cmc
dec
push
ljmp
sub
jno
loop
hlt
push
inc
ds
enter
incl
dec
dec
xor
push
or
xor
mov
mov
icebp
cmp
scas
mov
mov
mov
push
cltd
imul
mov
insl
dec
incl
sbb
adc
push
add
pop
xchg
fs
shll
loopne
clc
xchg
xlat
mov
hlt
jne
jmp
fildl
ss
in
rcll
push
out
add
adc
movsb
lock
lock
dec
xchg
pop
jle
xchg
push
test
add
sahf
xor
inc
jl
pop
dec
movsl
mov
loope
movsl
les
adc
adc
inc
push
and
pop
mov
push
jle
or
and
push
cmp
leave
push
jl
pop
cmc
js
jecxz
dec
inc
push
lock
adcl
sbb
lods
push
mov
adc
outsb
subb
gs
aam
adc
and
pop
adc
mov
and
jmp
test
sbb
decl
mov
adc
orl
mov
hlt
into
add
icebp
shl
call
xlat
or
rolb
jo
adc
or
ss
push
push
pop
loopne
add
pop
push
adc
std
std
jb
push
adc
mov
mov
lock
or
dec
xor
and
notl
xor
sub
rcll
inc
adc
jp
ss
inc
xor
xor
jnp
es
lret
push
scas
xor
mov
push
mov
add
jl,pn
and
inc
test
jno
aad
push
or
or
mov
push
jae
mov
adc
test
lock
je
andl
adc
cmp
jb
testb
xor
mov
xchg
inc
loopne
mov
inc
or
jmp
inc
cwtl
and
xchg
lock
test
cmpl
sub
pop
adc
rorl
xor
push
or
int3
in
xchg
push
imul
call
and
sbb
sub
adc
jecxz
push
jno
or
out
push
pop
dec
jecxz
xor
shr
jbe
rcrb
pop
es
jmp
addl
mov
vshufps
pop
add
adc
sub
call
fmull
inc
push
rcrl
mov
push
and
and
enter
pop
sub
sbb
cmp
push
outsb
je
xchg
cli
adc
inc
sti
das
jo
jbe
lea
lea
or
adc
test
ljmp
ja
mov
sbb
aam
sti
jmp
popl
inc
movb
cli
adc
dec
je
cmp
pop
pop
xorl
sahf
xor
cwtl
push
cmp
sbbb
inc
dec
add
rorl
xor
fimuls
or
sub
xor
mov
jg
clc
or
rcrl
xor
inc
ret
ljmp
je
cmp
xor
out
loop
pop
and
jnp
jp
push
push
pop
aam
pop
xor
rorl
in
or
dec
test
addl
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
mov
dec
cmp
pushf
fmull
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
testb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
sbb
sub
sub
adc
or
ss
lock
hlt
and
lods
pop
sub
jle
or
clc
mov
nop
adc
cld
adc
or
sbb
or
pop
xor
and
or
aas
and
fwait
and
or
lods
or
and
and
add
dec
inc
ret
cmp
add
add
dec
jne
xchg
mov
or
lret
sbb
sbb
lea
adcb
rclb
call
ja
or
xor
dec
sbb
xchg
test
es
inc
sbb
insb
push
add
imul
cmp
pop
lods
sub
push
add
cmp
sbb
and
fadds
jne
in
and
xlat
or
and
push
mov
fstpl
fcomp
pop
pop
and
dec
inc
cmpb
incb
and
ret
or
das
cmp
les
fdivl
or
testb
aad
adc
imulb
or
add
fmuls
sbb
call
insb
inc
inc
sbbl
push
push
push
inc
loopne
dec
pop
lcall
es
negb
test
dec
pop
xchg
or
je
push
pushf
insl
nop
movsl
mov
push
dec
and
nop
jecxz
or
xlat
test
dec
push
inc
insb
jge
pop
fs
inc
sub
dec
pop
push
popa
push
add
jmp
loope
popf
repz
arpl
adc
enter
add
xchg
xchg
inc
add
cmpsb
add
mov
dec
arpl
push
cltd
push
inc
leave
outsl
pop
fwait
or
cmp
add
mov
movsl
ss
adc
mov
inc
mov
xor
inc
xor
int
push
test
mov
pusha
loopne
dec
xor
xor
adc
iret
and
aad
sbb
push
ret
iret
int
add
stos
dec
cmp
addb
fcoms
add
js
into
call
les
adc
test
or
popl
loopne
dec
and
cmp
mov
adc
and
push
ret
jb
push
mov
push
add
jmp
enter
dec
pop
lea
xor
mov
psubb
loope
mov
push
and
sbbl
add
mov
lock
notb
sti
pop
das
adc
mov
and
jmp
fwait
mov
jp
push
insb
shrb
xchg
ja
pop
mov
lock
sub
inc
into
sub
mov
rorb
add
pop
shlb
cmp
xor
add
sub
std
or
fucom
xor
push
push
cmpsl
push
lea
sbb
out
out
mov
add
and
fcmovnbe
sti
mov
or
pop
clc
or
arpl
add
or
ret
inc
xchg
push
adc
push
imul
push
adc
mov
negl
inc
dec
jecxz
test
nop
xchg
inc
insb
add
dec
ljmp
add
xor
lea
sbb
cmp
dec
sub
sbb
cmp
popf
pop
addl
xchg
insl
or
cli
sbb
mov
xchg
test
in
jbe
adc
mov
pop
cmp
in
lods
outsl
sbb
mov
andb
mov
mov
cmp
sbb
dec
push
cmc
mov
xchg
out
push
cmp
add
shrb
movsl
mov
mov
jge
push
xchg
adc
mov
insb
orb
popa
inc
call
jmp
push
dec
cli
nop
cmp
push
jo
adcb
out
inc
or
loop
lods
jnp
int
lahf
mov
pusha
fcoms
push
inc
xchg
aam
addl
dec
sub
push
jp
add
cmp
mov
pop
incl
cmpsb
int
mov
insl
mov
test
subb
rolb
jno
add
clc
jecxz
mov
jmp
mov
and
mov
mov
and
sbb
ficomps
shr
inc
int
push
jmp
inc
and
popf
inc
cmc
jb
jl
loop
pusha
push
je
add
add
jae
pop
cmp
sbb
mov
jb
dec
daa
and
cmp
inc
mov
sbb
adc
jns
dec
add
sbb
cmp
lret
and
out
lock
jmp
xchg
mov
andl
sub
enter
jmp
jae
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
sbb
pop
inc
add
sti
xchg
jne
push
cmp
jmp
pop
xchg
mov
dec
adc
in
jl
or
addr16
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
popf
loopne
out
add
push
xchg
mov
pushf
sub
addb
test
inc
or
cmp
stos
inc
cmpsb
pop
lock
scas
sub
out
sbb
mov
add
loopne
jo
add
inc
ret
sub
test
testl
push
jo
lret
jmp
pop
rorl
repz
nop
lods
mov
insb
ja
lret
xorb
bnd
cltd
sub
rorl
bound
ljmp
or
gs
adc
xor
rorb
mov
arpl
mov
cld
inc
xchg
pop
jcxz
cmp
mov
jg
sub
or
cmp
les
pop
and
and
test
cwtl
ja
sbb
and
ret
and
je
loopne
loope
aaa
push
xor
stos
or
push
mov
sub
roll
xchg
sbb
scas
cs
test
inc
clc
mov
lods
inc
clc
or
outsl
push
imul
sbb
xor
dec
adc
popa
add
jmp
or
mov
adc
and
add
int
ljmp
push
fimull
add
inc
dec
cli
fstpt
mov
adc
add
add
jge
lea
add
cmc
fdivrl
and
dec
push
and
mov
stos
and
sbb
fstl
mov
fwait
dec
push
lock
ret
pminsw
daa
jle
pop
inc
inc
push
mov
out
lods
mov
pop
inc
fimuls
lods
add
add
fnstcw
or
push
cmp
inc
jecxz
cmp
jg
inc
mov
ret
inc
sub
mov
nop
divb
into
sub
ja
push
nop
mov
mov
pop
push
fisubrs
add
ret
popf
mov
les
cmp
pop
xchg
lods
mov
out
push
gs
les
arpl
push
pop
add
sbb
sarb
xchg
cmp
dec
push
mov
or
adc
jge
addr16
mov
aas
subb
or
adc
dec
xchg
test
pop
xchg
sub
rclb
cmp
mov
inc
bound
pop
adcb
jge
mov
pop
sarl
pop
mov
cmp
mov
jns
ret
mov
pop
mov
xchg
dec
lods
addb
mov
lcall
push
test
icebp
lock
test
dec
adc
push
mov
mov
dec
sbb
sbb
lcall
push
and
rcll
jge
enter
jl
xchg
test
es
jge
add
js
pop
sbb
push
add
push
popa
add
in
xchg
dec
int3
xchg
test
scas
enter
inc
ds
xchg
nop
adc
xchg
mov
push
jmp
push
and
pop
mov
fwait
cltd
jae
dec
inc
test
jmp
and
push
jecxz
out
cmp
pop
int3
mov
loop
jle
cmp
inc
adc
sub
dec
xchg
ret
imul
add
cmp
add
sbb
push
gs
addl
dec
jnp
push
xchg
dec
lock
inc
push
bound
loope
push
cmp
jp
in
sub
subb
std
movsb
ret
xchg
jmp
sti
inc
ds
sub
lret
aas
stos
add
loop
das
jb
data16
mov
dec
out
dec
adc
pop
mov
shll
sub
les
or
sbb
dec
jo
mov
aad
inc
sbb
push
mov
cmp
push
push
jb
dec
xor
dec
dec
loop
push
push
mul
push
pop
sbb
jbe
mov
mov
mov
fldenv
loope
insb
cld
cmp
push
xchg
adc
aas
sbb
mov
repnz
das
adc
inc
fdivl
dec
inc
insb
nop
mov
jle
jnp
call
adc
sub
mov
les
add
stc
push
xchg
sbb
lcall
or
add
data16
xchg
les
push
xchg
cmp
or
cmp
inc
pusha
sbbl
out
jne
and
inc
jl
adc
leave
and
ja
cmp
aam
mov
jmp
andb
add
in
or
xor
add
bound
and
push
repz
ljmp
pop
mov
xor
pop
sub
je
push
orl
mov
ds
cmp
imul
sbb
stos
mov
and
testl
xor
adc
pop
add
xchg
push
push
imul
lahf
adc
inc
or
test
push
or
add
lock
push
mov
xchg
fsubs
and
add
iret
and
adc
mov
shll
dec
inc
outsb
aas
mov
or
mov
jmp
and
es
aaa
loop
rorb
lock
test
inc
push
in
adc
test
cwtl
les
xor
adcb
lret
ss
sbb
or
sub
push
jmp
fstp
out
pop
clc
incb
jmp
sbb
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
jns
sub
or
fisttpll
and
jge
jge
je
sub
loope
flds
and
out
push
or
pusha
mov
pusha
loope
pop
sub
push
and
xchg
push
sahf
sub
pop
fstp
sub
sarb
pusha
pusha
insl
es
shrb
add
shufps
push
cmpsl
repnz
fisubs
adc
sti
add
or
fists
xor
mov
xchg
cli
adc
repz
ret
out
dec
inc
inc
or
sub
stos
mov
sti
xor
pop
mov
pop
testl
fsubs
push
xorb
mov
jb
sbb
jmp
push
and
inc
add
xchg
fsubr
or
pusha
sub
fnstcw
or
pop
insb
popa
xor
push
addb
adc
std
lea
call
inc
xchg
cmp
insl
dec
bound
or
icebp
mov
ficomps
mov
push
xor
push
and
push
xor
lret
push
or
mov
inc
aam
fs
sbb
cs
lods
ljmp
pop
push
add
les
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
cmpsb
xor
jge
hlt
add
repz
repz
js
bound
clc
call
pop
fstpl
xor
aas
rclb
imul
fmull
push
ficoml
faddl
pop
add
mov
mov
test
sub
mov
or
dec
jecxz
scas
repnz
mov
dec
into
pop
clc
xor
in
mov
orl
bound
shl
sub
push
idivl
jp
push
sahf
jmp
inc
mov
push
pop
movsb
lods
mov
std
adc
xor
adc
or
jge
rclb
pop
adc
add
cmp
cmp
jg
xchg
fwait
and
add
and
das
adc
add
add
xor
out
out
cmp
push
mov
push
xchg
insb
push
movzbl
and
pop
push
lea
xchg
mov
je
sub
pop
inc
je
jl
push
sarb
or
adc
jg
adc
hlt
adc
or
and
pop
sub
sub
add
pop
sbb
inc
xchg
out
sbb
rcrl
rcrl
das
in
sti
pop
cld
add
mov
or
inc
and
mov
test
pop
add
mov
ret
orl
addr16
sbb
add
dec
sbb
sub
scas
adc
mov
decl
in
lcall
add
add
enter
addb
inc
sbb
or
pop
icebp
and
sub
adc
push
xor
pop
into
xor
sbb
mov
mov
jnp
inc
lock
inc
adc
push
mov
movl
loopne
jae
pop
std
dec
inc
popa
xchg
lret
jno
xor
xor
pop
cld
pop
clc
sub
sub
icebp
cli
inc
adc
add
cmp
and
sahf
push
jecxz
add
fcmovb
lock
or
xchg
pop
gs
ljmp
xchg
mov
and
ljmp
adc
xor
out
push
pop
push
cwtl
sub
fadds
into
aaa
mov
test
es
mov
bound
push
xor
test
dec
stos
lcall
mov
push
adc
sbb
inc
sti
aam
gs
or
mov
push
or
push
out
mov
and
jne
mov
fdivs
xor
push
add
push
jl
sbb
sub
mov
ljmp
shlb
enter
push
frstor
je
cmp
lods
jge
fnclex
and
add
and
in
sub
push
or
insl
or
lock
push
push
mov
fldt
push
mov
enter
fwait
xchg
jbe
cltd
int3
and
sbb
aam
xchg
and
jle
call
adc
fldpi
xor
and
push
fmul
fsin
cli
mov
je
mov
loopne
test
cli
call
push
mov
xchg
and
and
xchg
jo
test
or
sbb
ret
repz
out
add
push
mov
cmp
std
add
mov
sbb
jmp
mov
push
test
andb
call
add
lods
ret
shlb
push
pusha
pop
and
dec
js
insl
push
mov
inc
lds
push
jle
inc
das
jbe
mov
push
jnp
lahf
stc
mov
add
es
shll
mov
pop
enter
add
push
out
sbb
dec
hlt
fwait
nop
push
push
gs
jo
stos
mov
addr16
psubq
test
or
xchg
sbbl
fwait
lock
cmp
push
fildl
imull
sbb
adc
enter
add
loope
fstps
flds
adc
pop
xor
inc
stos
mov
lret
mov
dec
sbb
and
cmpw
inc
inc
adc
mov
bound
cmpsl
xchg
ljmp
nop
orb
mov
loopne
and
push
dec
push
or
pop
mov
and
inc
push
adc
cmp
xorb
sti
add
push
daa
mov
cs
pop
test
jne
or
jl
mov
mov
or
stos
stos
test
jp
pop
pop
lods
cmpsb
mov
fildll
loope
xor
mov
cltd
and
add
pop
add
cltd
pop
pop
dec
jns
mov
lret
lea
pop
subb
push
ret
inc
shl
scas
test
ja
pop
xchg
or
loop
rolb
adcl
xor
or
jmp
push
cltd
hlt
int
outsb
insb
pop
and
mov
out
mov
inc
insl
inc
adc
insb
sub
dec
jbe
dec
test
dec
mov
repnz
sahf
scas
xor
cmp
sbb
dec
fisttpl
lahf
cmp
or
jb
incb
insb
outsl
push
mov
dec
mov
adc
jns
mov
mov
mov
or
loopne
loopne
movsb
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
loope
mov
inc
cmp
jg
or
imul
cmp
mov
jle
fcoms
xor
or
cmpsb
mov
mov
cmp
sub
not
in
popf
rorb
pop
adc
iret
sub
out
push
or
inc
mov
out
ss
and
shl
jle
mov
cmp
jl
mov
test
xchg
aam
inc
xchg
test
inc
jge
popa
pop
addr16
sbb
dec
mov
hlt
push
sbb
rolb
nop
pop
mov
ljmp
push
dec
push
inc
lret
loop
cmp
cmovg
bound
pop
pop
sub
mov
push
icebp
iret
dec
jns
inc
lock
inc
jo
mov
jecxz
sbb
loope
mov
loopne
dec
jae
cmp
mov
out
addl
mov
mov
add
ja
jl
pop
andl
xor
push
mov
mov
iret
and
add
into
mov
push
pop
add
lods
cld
sbb
inc
lcall
dec
add
pop
scas
shl
js
test
nop
aas
add
or
mov
or
adc
inc
movsb
mov
inc
imul
in
fwait
add
and
sub
xchg
bound
pop
pop
xchg
inc
push
enter
lds
adc
adc
adc
inc
sbbl
and
mov
push
and
sbb
and
sbb
les
push
adc
sbb
inc
and
jp
subl
jg
ljmp
mov
rcrl
mov
test
push
pushf
mov
add
inc
adc
jne
and
mov
xor
add
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
mov
test
or
xchg
add
das
mov
enter
cmp
ja
push
dec
push
nop
inc
shr
fs
mov
push
cmp
rolb
nop
mov
ds
push
mov
dec
cmp
ljmp
jmp
mov
push
jmp
cmpsl
mov
lods
jbe
mov
add
call
cli
bound
cmp
jle
adc
mov
xor
jmp
dec
sbb
mov
lds
xchg
shlb
push
lods
sbb
js
pushf
push
cmp
orb
fs
mov
push
push
fdivs
sub
mov
ret
dec
sbb
shll
pop
jge
pop
jbe
jnp
cmp
test
nop
add
push
dec
loop
jne
dec
dec
jae
imul
sbb
sub
in
aad
cmp
into
stos
sub
add
add
xor
xchg
dec
lods
mov
pop
push
sub
fucom
adc
gs
orl
mov
dec
or
push
and
adc
test
stc
sub
cmp
mov
jo
test
mov
fnstenv
call
mov
shll
test
add
fstps
add
cmp
in
loope
or
testl
and
sbb
rcr
hlt
pop
adc
ret
mov
add
jmp
cld
sub
sbb
and
sub
mov
cmp
std
push
fsubr
jle
jmp
mov
jmp
push
cwtl
pop
imul
mov
push
mov
inc
cmp
ret
hlt
test
jne
xor
stos
dec
pushf
xor
or
jge
neg
add
adc
adc
xor
sub
cmp
cmp
cmc
cmp
mov
cmp
cmp
mov
jge
adc
add
sub
xor
jne
add
jbe
and
inc
icebp
pop
loopne
out
dec
test
lods
or
cli
push
inc
mov
aam
jmp
mov
adc
add
mov
dec
mov
cmpb
sbb
rolb
sub
fs
push
xor
and
and
pop
xorl
out
mov
nop
shrb
mov
sbb
repnz
cmpsl
sbb
ja
stos
aad
mov
enter
clc
les
add
inc
int3
jne
in
sub
or
jne
test
into
dec
pop
inc
into
jne
inc
or
cmp
mulb
sarb
xor
hlt
int3
add
adc
dec
jne
mov
mov
rcrl
jge
inc
sub
push
push
lea
dec
jnp
popa
and
mov
mov
push
scas
call
dec
cld
inc
icebp
ret
adc
lock
ja
and
js
subl
mov
flds
lcall
inc
xor
call
loopne
xor
jg
add
gs
sbb
adc
call
push
adc
sub
shll
hlt
lods
add
or
sub
jmp
push
jne
and
pop
mov
jg
or
dec
icebp
xchg
sub
popa
aad
fcoml
notb
mov
fwait
lods
aaa
adc
dec
fcom
insl
fadd
loopne
shr
or
fisttps
clc
mov
sahf
dec
mov
xor
shrl
lcall
mov
mov
jo
and
dec
mov
cmpsb
imul
or
fcmovbe
sti
pop
stos
or
and
push
call
scas
bound
fidivrl
dec
xor
shlb
rclb
mov
mov
orb
lock
aam
add
cmp
sub
add
mov
bound
push
into
jmp
scas
push
xchg
rcl
negl
add
movb
movsb
int3
sti
test
int3
xchg
mov
push
lret
das
sub
add
faddl
mov
pop
in
add
adc
les
bound
inc
adcl
add
pop
mov
add
push
push
cmp
sahf
cmpsl
stc
cmp
add
popf
out
fxch
jge
insl
add
mov
push
testb
add
jo
or
add
fildl
cmp
jmp
add
scas
adc
adc
or
mov
rorl
dec
pop
cmp
test
in
or
stos
or
dec
pop
push
xchg
xchg
adc
sahf
mov
insb
inc
cs
or
decl
imul
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
or
add
inc
punpcklbw
fcompl
addr16
add
mov
pop
jae
xor
insb
iret
xor
pusha
or
pop
adc
or
push
clc
add
std
movsl
or
out
or
xchg
mulb
jmp
adc
fs
mov
jae
lea
movsl
pop
sbbb
cmp
orb
addr16
add
cmp
outsb
cmp
jmp
mov
rorb
or
add
dec
rorl
in
adc
mov
push
push
pop
je
cld
mov
rorl
lahf
push
cmpl
out
clc
add
mov
out
xchg
sbb
sub
movb
lea
xchg
mov
add
add
cmp
ficoml
xlat
xchg
jecxz
xor
mov
es
add
add
pushl
les
lret
jmp
sub
add
pop
push
xchg
loope
dec
cmp
aam
inc
imul
aaa
dec
inc
out
adc
jns
cs
sub
dec
stos
pop
sbb
idiv
xor
pop
jo
jns
or
add
testb
scas
add
bound
push
rorb
lea
push
push
ret
sub
add
mov
pusha
insb
adc
inc
push
jge
push
xchg
cmc
pusha
or
and
or
sbb
cwtl
rclb
jmp
cli
sbbb
jbe
jle
cmp
dec
adc
jge
mov
ror
add
adc
dec
xor
shlb
enter
cmp
or
xchg
rolb
or
mov
xor
add
add
and
and
jle
popa
sbb
fsubs
xor
sbb
test
jge
adc
mov
dec
out
jmp
xchg
xchg
fldl2t
call
in
cmp
mov
lret
mov
or
das
add
fcoml
lea
add
cld
or
adc
lret
lret
adc
stos
lret
pop
jae
push
mov
or
sar
mov
jmp
mov
testb
adc
dec
es
add
add
lds
jg
cmp
xor
add
push
xor
push
jmp
lret
js
xchg
aam
clc
push
mov
cmp
rclb
inc
xor
leave
sbbb
add
mov
jle
and
popf
cmp
dec
fwait
cld
rorb
sbb
jecxz
mov
jg
mov
daa
xor
or
jne
pop
cmp
mov
add
ret
jmp
out
scas
test
movb
jo
ss
add
add
or
or
or
xchg
mov
xchg
sub
adc
test
inc
dec
mov
dec
push
movswl
les
sbb
pop
dec
lods
data16
lock
jbe
add
mov
cld
add
dec
shrd
push
jle
xor
sbb
outsl
ss
jl
cmpsl
clc
fnstcw
or
cmp
jb
pushl
add
dec
jmp
xchg
and
cs
sub
push
cmpb
or
rcll
call
and
push
push
xor
addb
je
into
xor
adc
js
adc
out
and
pop
and
sub
or
push
fisttps
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
nop
shlb
xchg
jb
lds
jns
add
jbe
push
xchg
xor
shll
add
pop
mov
mov
cli
dec
dec
inc
dec
xor
jb
or
sbb
jmp
xor
mov
adc
jae
stc
aam
and
add
sub
mov
subl
jbe
jnp
sub
push
les
loop
and
jp
jb
or
or
and
sub
push
addb
andb
jmp
lock
inc
mov
fsubrs
xchg
mov
sarb
mov
jne
adc
inc
sarb
adc
push
mov
pop
xor
or
in
test
add
mov
and
adc
add
cmp
je
mov
inc
bound
leave
inc
xor
repz
cmp
mov
push
cmp
inc
lret
jbe
daa
aam
ficoms
dec
xchg
rol
dec
rorb
mov
subb
push
adc
push
insl
push
jmp
insl
cmp
test
shlb
sub
jle
mov
mov
fst
pop
inc
or
mov
inc
rolb
ss
loop
mov
cmp
sbb
jns
ds
add
clc
gs
or
pop
jne
inc
je
data16
int
jns
out
cmp
popa
je
inc
sarb
je
dec
cmp
jmp
xor
dec
jle
adc
pop
dec
adc
push
inc
sarl
mov
xchg
mov
or
push
rorl
cmp
sub
xor
clc
enter
mov
in
call
adc
call
jne
fmull
insl
push
pop
clc
flds
or
adcb
push
push
xchg
cmp
mov
inc
dec
rorb
cmp
pop
add
push
adc
adc
movlps
xor
dec
aas
or
adc
es
or
je
inc
ja
cltd
or
addr16
jmp
mov
jbe
mov
cmpb
jne
jp
and
pop
dec
and
sbb
inc
or
hlt
inc
dec
das
xor
stos
xchg
hlt
push
jp
cmp
push
or
movsl
cmp
mov
imul
dec
cld
mov
xor
lahf
dec
push
sub
and
jo
xchg
pop
sarb
pop
popf
push
lret
ret
int3
shrb
dec
sub
aaa
jmp
add
mov
aaa
sub
mov
sub
push
cmp
mov
jbe
sub
xchg
mov
sub
mov
mov
shrb
pop
inc
mov
adc
or
js
jmp
insl
sar
mov
mov
cmpl
pop
lret
add
push
data16
ret
ljmp
ss
and
add
imul
sub
call
add
or
repz
adc
add
sub
sbb
mov
fdivs
jge
cmp
cld
pusha
loope
and
mov
jmp
sbb
or
cmp
jl
or
xchg
or
mov
cmpsb
repz
pop
cmp
mov
mov
icebp
arpl
out
mov
in
icebp
sub
cs
add
xor
sbb
sub
or
push
jmp
or
dec
push
jae
jmp
testb
adc
cmp
adc
xchg
aam
ss
enter
push
insl
pop
scas
int
jae
mov
shll
mov
cwtl
or
xor
mov
clc
xor
js
popf
mov
rcll
push
and
js
xor
gs
push
sbb
jne
in
add
mov
movl
aad
insl
cmpsl
mov
or
sbb
adc
sbb
jne
push
imul
mov
ss
lds
fs
imul
add
jecxz
push
push
adc
push
sbb
addr16
jo
jne
test
mov
cwtl
clc
hlt
or
sbb
push
xor
inc
rcrb
push
ret
push
fcoms
cmpsl
icebp
add
fidivl
dec
ret
sbb
add
psrlq
or
js
orl
in
xlat
add
lahf
loopne
cmp
xlat
jge
notl
ret
cmp
sbb
sbb
in
push
lcall
out
iret
sbb
add
call
sub
jle
or
and
rolb
hlt
pushl
cmp
bnd
clc
sbb
inc
jmp
mov
push
andb
sbb
adc
cwtl
pop
or
jle
sbb
cmp
inc
test
es
sub
sub
sub
push
cmp
sub
and
outsb
subps
adc
pop
test
cld
dec
jl
jo
dec
mov
sbb
xchg
mov
inc
or
das
adc
inc
divb
addb
in
adc
repz
repnz
jl
xchg
repnz
inc
loopne
mov
push
xchg
push
ret
fsubl
movsb
push
sbb
test
adc
rorl
lea
or
or
sub
adc
fs
mov
cmp
xchg
cmp
jmp
rcpps
sbb
adc
dec
fcomps
add
data16
ljmp
out
mov
loopne
mov
ret
arpl
push
sbb
add
test
or
js
adc
movsl
andl
sbb
test
xor
pop
call
rorb
inc
xor
add
inc
inc
xor
jb
sub
mov
sub
mov
xorl
mov
sbb
sbb
push
lock
add
es
jmp
jp
adc
pushf
popa
mov
and
and
lea
negb
insl
inc
sbb
pop
cmp
jb
jno
adc
jo
inc
aam
sbb
cmp
sbb
push
add
or
dec
popf
or
sarb
lret
std
inc
dec
cmp
lea
or
and
shr
add
sahf
and
leave
or
inc
testl
fcmovb
jmp
shr
or
mov
add
pop
sti
testb
or
bound
scas
push
sar
in
stos
mov
cmp
sbb
push
add
or
test
bound
es
fnstcw
inc
push
or
xchg
sub
out
in
cmp
inc
dec
add
lea
mov
shr
cmp
mov
adc
or
mov
cs
or
push
jp
adc
adcb
cltd
repnz
into
xchg
sub
dec
enter
addb
push
inc
adc
mov
or
xchg
ret
insl
or
cmp
ficoms
or
and
adc
iret
shl
orl
adc
lds
xchg
push
add
incl
cmp
loope
or
test
test
adc
test
je
dec
call
mov
cmp
nop
cmp
cmpsl
cmp
popa
js
pop
fisubl
adc
xor
mov
xor
and
leave
mov
jg
pop
call
cmpsl
push
cld
xlat
out
add
add
call
or
ss
adc
adc
mov
xchg
mov
cmpsb
sahf
inc
add
adc
dec
jbe
fldl
mov
jle
subl
ja
cmp
add
pop
fcomp
popa
imul
inc
xor
mov
inc
jbe
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
push
push
cmpsb
inc
or
push
push
xchg
adc
or
addb
push
adc
inc
push
push
mov
je
enter
and
cs
iret
ds
inc
adc
fldcw
and
and
push
dec
cmp
inc
aam
rclb
sub
and
push
rorb
inc
adc
loopne
andb
call
jbe
dec
add
mov
adc
enter
out
add
loope
into
adc
push
sub
flds
and
shll
jns
fisttps
test
je
mov
dec
jo
or
test
inc
cmpl
or
gs
daa
xor
pop
sub
jl
xlat
movsw
xor
pop
outsb
rorb
nop
es
add
mov
les
adc
jmp
enter
insl
pop
adc
pop
mov
mov
enter
adc
loopne
div
fdiv
fiaddl
sbb
sbb
dec
repnz
sbb
test
test
nop
and
fwait
xor
push
push
inc
and
fsts
inc
xchg
fcomi
sbb
fs
and
and
test
repnz
and
enter
pop
pop
pop
adc
adc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
jg
inc
sub
jmp
adc
not
cld
lock
je
negb
and
add
scas
xor
outsl
add
dec
dec
sbb
or
insb
pop
inc
insb
adc
pop
xor
adc
rolb
sub
jne
xchg
push
jge
ljmp
pop
gs
int
or
into
jbe
jns
adc
push
dec
push
dec
adc
pop
bound
mov
add
push
add
sub
adc
insb
jge
iret
das
bound
xor
pusha
adc
add
mov
xor
stos
mov
jle
loope
ljmp
push
mov
or
cs
int3
int3
aam
popa
push
cld
and
loopne
xchg
fisttpl
aaa
dec
fidivs
sbb
sbb
jge
xchg
bound
pop
inc
and
add
leave
jne
sub
sbb
jmp
sbb
lds
fists
or
je
adc
and
lret
mov
mov
mov
stos
and
xlat
out
es
mov
je
les
iret
sti
jmp
add
out
push
cmp
ja
add
cmp
adc
mov
xor
cmp
jne
shll
leave
adc
call
xor
idivl
pop
scas
and
mov
dec
add
fimull
add
push
mov
mov
scas
ret
icebp
add
sbb
inc
and
mov
mov
pop
add
adc
into
pop
push
sbb
scas
sbb
or
jmp
imul
inc
neg
je
iret
push
and
test
push
addr16
aam
mov
push
shlb
shr
adc
push
and
cmp
mov
jne
jb
inc
sub
xor
std
add
adc
push
and
in
mov
aad
dec
xchg
cmpb
aam
adc
dec
push
test
add
popa
fst
mov
jno
cmp
push
lret
sbb
hlt
inc
test
sub
xor
and
xchg
sub
sub
sub
push
imul
or
mov
sti
les
jns
cltd
push
push
je
push
sbb
xor
or
jle
xor
add
mov
dec
sti
and
movb
push
rcl
shl
cmp
repz
xlat
fcoms
fwait
iret
sti
fstpt
mov
ret
nop
cmp
dec
movb
jmp
or
push
fsubs
jne
cmp
test
int3
mov
mov
in
outsl
add
or
adc
push
pop
adc
add
add
movsl
aaa
or
jne
fldt
push
add
sarl
in
ja
test
pusha
call
cmp
xlat
std
into
cmp
das
or
push
xor
push
fwait
std
inc
test
adc
add
add
pop
xor
lea
imul
gs
call
rorb
fdivr
lea
sar
inc
js
mov
popa
xor
or
fucomi
add
pop
addr16
out
loop
push
pusha
inc
xor
pushf
sub
adc
sbb
into
call
push
mov
xchg
test
adc
sti
add
xor
cmp
pushf
clc
add
enter
add
jb
in
sub
les
or
popa
pop
lcall
incb
add
hlt
push
mov
jne
ljmp
testl
into
and
lea
pop
mov
pop
sbb
xchg
out
or
jae
xchg
ja
add
inc
mov
push
push
test
mov
sbb
pmulhuw
ljmp
loopne
inc
or
jp
enter
mov
jne
fiadds
inc
pop
shl
mov
rorl
dec
rolb
push
mov
inc
sti
insb
jge
lea
dec
xchg
mov
or
or
test
ss
dec
sub
cmp
pop
shll
inc
repz
addl
lcall
mov
mov
ret
and
rorb
mov
jle
jle
add
sub
mov
add
cld
or
aaa
in
or
and
hlt
rorb
inc
fsubl
push
push
push
lret
pushf
out
add
inc
xchg
pop
mov
inc
lods
sub
dec
shrl
icebp
mov
hlt
in
out
xchg
mov
or
dec
push
adc
mov
lods
test
push
lock
repnz
cli
in
sub
cli
inc
cli
div
inc
orb
push
mov
add
sbb
mov
or
cmpl
outsb
sub
mov
sub
loope
ret
sub
push
clc
add
mov
or
rolb
es
mov
enter
iret
dec
rolb
adc
xor
push
or
mov
push
mov
scas
repnz
pushw
sub
loop
jae
jmp
cmpsl
xchg
testb
pop
mov
mov
push
mov
or
pusha
adc
xor
in
mov
pop
insl
inc
shlb
fsubr
push
sbb
cmp
ss
inc
test
dec
xor
push
xchg
mov
dec
cwtl
rolb
mov
test
adc
call
sub
push
cmp
cld
lea
fcmovu
xor
int
mov
push
aam
adc
inc
add
adc
dec
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
negb
cmp
sbb
sbb
notb
fs
lock
or
and
or
jge
pop
and
inc
lock
inc
ret
inc
sbb
cmp
jne
jne
rolb
in
rorl
xchg
ljmp
jge
add
sub
les
scas
adc
fdecstp
adc
inc
add
inc
mov
push
add
push
or
xchg
adc
adc
adc
mov
add
push
js
dec
pop
shr
daa
and
pop
add
or
inc
test
mov
icebp
adc
fcomps
xor
fiadds
mov
imul
jmp
loopne
icebp
sub
xchg
fsub
leave
test
lea
push
and
js
sahf
sub
mov
push
adc
sbb
rcr
sub
out
cltd
loop
xor
and
xchg
inc
aad
stos
mov
repnz
mov
add
sub
push
xchg
mov
into
out
enter
in
xor
sbb
or
stos
jbe
pop
sub
xabort
mov
jb
inc
enter
cmp
push
sbb
push
shlb
add
notl
sahf
jne
cmp
sbb
testb
lock
inc
test
sbb
inc
in
jg
lret
mov
mov
dec
cmp
jge
pop
lock
incb
bound
movb
dec
cmp
popf
xchg
mov
add
add
fadds
dec
jb
pop
add
and
mov
cmp
add
or
pop
imul
inc
ret
and
mov
mov
sub
rcll
inc
or
sti
mov
add
add
add
ja
mov
ret
lcall
sarb
push
mov
andb
je
xchg
adc
or
fisttps
jmp
jns
inc
out
xchg
push
or
add
or
pop
pop
test
add
adc
push
add
or
mov
add
xchg
adc
ret
rclb
or
jae
js
fdivrs
test
lret
push
jns
and
cmp
xor
into
pusha
mov
mov
and
in
inc
jecxz
pop
pop
dec
mov
nop
ret
or
pop
shll
or
das
mov
adc
addl
inc
push
pop
jae
or
or
adc
and
test
push
ja
push
or
or
or
mov
pop
pop
dec
dec
pop
or
adc
xlat
dec
pop
lahf
push
outsb
dec
pusha
test
ret
loope
mov
and
mov
inc
jge
cmp
mov
or
sub
popa
pop
jg
pop
push
rsqrtps
xor
push
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
adc
dec
aam
add
mov
add
bound
imul
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
lret
repz
into
into
into
lods
push
push
mov
pop
sub
sarb
push
pop
nop
pop
mov
push
out
cwtl
pop
mov
xchg
mov
or
pop
gs
jnp
pop
movsb
nop
wrmsr
clc
sub
lcall
add
leave
lahf
pop
test
pop
or
add
addl
inc
mov
into
and
je
and
aam
inc
inc
sub
or
sub
jmp
loopne
sub
xor
push
xor
pop
scas
push
out
out
push
scas
mov
mov
inc
lret
push
data16
cmp
test
inc
sbbb
cmp
xchg
test
mov
test
push
mov
xor
push
dec
loopne
adc
and
mov
jno
jle
xor
fwait
pop
movsb
ret
ficomps
adc
sbb
cmp
cwtl
push
and
daa
lahf
popa
rorb
notb
decl
loop
bound
mov
xchg
lea
mov
stc
test
inc
and
jno
rorl
push
aad
movsb
cwtl
dec
sbb
xor
push
mov
push
adc
scas
les
insl
add
inc
dec
shlb
push
lock
dec
sub
rorb
pop
mov
add
ds
je
xor
sarb
rorb
lret
in
daa
loop
inc
inc
int3
call
jle
xchg
lds
out
and
inc
cld
mov
jo
fstps
ss
dec
loope
jmp
or
shll
inc
push
or
icebp
fdivs
lock
fisttps
loopne
into
inc
push
repz
sbb
xor
mov
add
test
xchg
adc
lods
test
leave
sahf
inc
xor
jmp
sub
mov
sbb
sbbl
mov
pushl
and
in
inc
test
je
test
frstor
das
push
xor
mov
aam
pop
pop
and
jb
inc
push
fcoms
or
minps
nop
popa
dec
out
jge
mov
push
adc
add
fs
cli
shlb
cs
xlat
in
fcoml
and
rolb
dec
sub
in
cmp
pop
jno
jge
or
xchg
sbb
pop
push
sub
jae
add
xchg
jl
dec
stos
and
xchg
xor
add
jns
push
lods
push
sarl
test
lock
mov
sub
adc
cmp
mov
aas
aas
adc
push
mov
mov
push
scas
sbb
les
push
lds
mov
and
xlat
xchg
inc
adc
jb
pop
mov
pop
mov
pop
inc
lods
fsts
clc
dec
sbb
or
sub
sahf
inc
mov
add
and
inc
push
add
sub
pop
add
aad
jne
push
inc
das
mov
add
lods
movsb
nop
cmp
test
push
mov
lock
or
fmull
and
add
rolb
outsb
jbe
test
mov
pushf
fstl
sbb
dec
xchg
pushf
add
jle
dec
fsubs
pop
add
add
test
outsb
data16
dec
les
dec
sbb
dec
pop
ret
je
shl
add
adc
push
clc
jmp
add
sbb
and
sbb
xor
adc
call
mov
adc
sbb
cld
add
rol
jl
cmp
lea
insb
sub
dec
enter
sbb
mov
dec
inc
repnz
pop
nop
adc
xchg
mov
jae
fcoms
mov
fdiv
scas
jmp
or
scas
imul
mov
add
ss
xchg
or
js
arpl
cmpsb
adc
xor
or
mov
mov
sbb
push
lds
inc
roll
pop
jae
fcompl
shrl
std
roll
jle
sub
sub
add
mov
xchg
xchg
fldl
stos
add
add
push
adc
ds
out
inc
hlt
xor
fcoms
sub
xor
sub
adc
push
mov
mov
test
insl
or
ds
push
pop
add
cmpl
push
xchg
cwtl
or
cmp
dec
mov
xor
or
pop
cmp
push
xlat
pop
pop
and
addr16
imul
jg
sub
test
adc
addr16
dec
sbb
fisttps
data16
dec
ljmp
inc
movl
pop
inc
pmaxsw
sbb
test
icebp
xor
mov
and
loop
shlb
and
clc
mov
loopne
clc
ret
dec
out
cvttps2pi
mov
adc
sbb
fbstp
adc
push
pop
cs
inc
xchg
fildll
std
iret
adc
adc
jmp
fstps
mov
and
icebp
lahf
dec
les
or
add
jmp
cmp
fcomp
adc
jbe
in
adc
ret
fstps
sub
xchg
and
ja
push
dec
pop
push
jge
aam
mov
rclb
es
dec
jecxz
inc
or
dec
in
jl
or
mov
push
jae
loope
sub
mov
aad
fdivr
add
imul
fs
or
call
cs
in
in
call
xor
lods
int
ss
daa
adc
mov
xchg
sbb
cmp
cmp
outsl
insb
dec
or
push
mov
xor
xor
sarb
dec
dec
leave
int
dec
add
dec
jnp
lret
in
lock
push
cltd
fmuls
jne
pusha
add
in
inc
lock
adc
shll
adc
or
adc
push
inc
andl
and
ret
mov
fsub
pop
inc
push
cld
lahf
add
pop
jl
mov
mov
xchg
lret
shlb
jne
adc
xchg
sbb
jne
cmp
imul
out
lahf
dec
in
jo
dec
fcoml
adc
insb
push
es
lock
dec
mov
movsl
push
add
mov
fwait
cmp
mov
pusha
fisubl
mov
cmp
sbbb
jg
mov
int
or
mov
in
sub
mov
addl
xchg
aam
imul
les
iret
adc
test
dec
dec
pop
xchg
in
xor
mov
cld
jg
pop
in
sub
outsb
movups
ret
clc
xor
jne
andb
sub
push
test
fcomp
cmpsb
jo
fimull
and
imul
orb
xor
mov
adc
push
aad
cld
push
push
pop
hlt
add
cmpl
cmpsl
andl
stc
jnp
or
ds
pop
cmp
xor
push
xlat
mov
adc
and
mov
in
in
or
clc
dec
or
in
sbb
aaa
and
call
testl
jmp
repz
jne
sbb
or
rcrb
cmpsl
fs
dec
call
scas
inc
or
insb
test
cltd
fs
imul
dec
sbb
adc
sub
xor
dec
xor
and
inc
inc
xor
and
dec
fs
jge
insb
in
add
sbb
xor
addl
les
sbb
int3
xchg
pop
jb
rcr
add
pusha
test
imul
test
xorb
sti
push
inc
in
outsl
and
sbb
nop
scas
adc
rorb
adc
adc
xchg
mov
pop
inc
cmpsl
cmp
leave
mov
fcoml
add
push
xor
xchg
bound
xchg
imul
add
lds
xor
cmp
sbb
mov
jns
adc
mov
xlat
andb
cmp
arpl
xor
sub
fistpl
or
push
mov
push
test
faddl
xor
inc
enter
in
cwtl
jbe
inc
faddl
dec
xor
in
mov
push
mov
dec
or
inc
fiaddl
and
and
leave
adc
rorb
and
add
mov
xchg
mov
dec
and
mov
or
add
fs
mov
test
loopne
in
fs
or
fsubr
or
mov
dec
adc
cmc
dec
push
and
cli
inc
mov
and
xchg
pushf
mov
mov
or
aaa
xchg
ss
out
sub
push
cmp
xor
les
shr
rclb
push
mov
pop
sub
fistl
and
adc
pusha
lea
fcomp
aam
inc
cmp
push
mov
mov
pop
enter
mov
lock
shrd
mov
pushf
pushf
enter
imul
or
adc
in
daa
ret
movsb
enter
xorb
dec
dec
das
dec
mov
cwtl
jns
sbb
shr
adc
pop
push
dec
and
inc
nop
subl
nop
inc
xchg
fsubs
insb
adcb
call
xor
scas
fcoml
pop
das
pop
test
jo
sbb
aas
xchg
sub
nop
jbe
xchg
shlb
in
shlb
mov
ficompl
aas
inc
arpl
inc
outsl
fs
xor
fcomps
hlt
movsb
adc
fcoms
popf
pop
loope
movsb
bound
lock
loopne
aas
in
pop
adc
pop
scas
add
iret
add
sub
xchg
pop
inc
and
jo
pop
int
test
push
mov
sbb
loope
xchg
add
subl
outsl
sub
jge
or
xor
and
push
pop
pusha
cltd
fs
add
insl
xchg
lret
cwtl
stos
je
adc
mov
and
mov
popl
cmp
inc
test
xchg
mov
mov
dec
push
hlt
dec
mov
xchg
mov
or
xchg
in
cwtl
sbb
and
xchg
pop
push
andl
loope
xchg
cmc
pusha
xchg
fdivs
sahf
sub
add
call
xchg
mov
mov
dec
cld
add
add
and
stos
jno
cwtl
push
push
pop
sbb
dec
add
call
loop
pop
cld
inc
stos
mov
test
xor
inc
mov
ret
fdivl
fisubl
pop
cmp
fs
jne
jno
sbb
adcb
aas
jne
adc
in
std
and
or
or
or
mov
push
jo
lcall
adc
call
rcrl
insl
xchg
push
mov
rolb
add
in
addr16
fwait
jns
push
and
push
es
inc
xlat
test
pop
rclb
mov
ret
lret
xor
add
sub
insb
pushf
test
mov
lods
pop
das
inc
fdivrl
movsb
cmp
aam
test
pushf
add
daa
sbb
aam
pop
popf
insb
scas
cmp
aas
mov
incb
fsubrl
sarb
movsb
adc
and
jl
decb
popf
mov
mov
rorl
adc
rol
ds
lock
aam
jo
je
xor
aam
aaa
insb
xchg
imul
or
aam
nop
mov
inc
mov
jb
lahf
aas
sbb
inc
fidivrl
bound
push
lods
push
inc
xor
or
mov
sub
and
mov
mov
int3
enter
in
sarb
mov
cwtl
mov
pushf
sbb
ret
outsl
movsb
pop
shlb
call
es
rorl
adcb
mov
or
mov
jmp
das
roll
xchg
lds
or
and
pop
mov
fldcw
xchg
and
and
xchg
nop
mov
xor
pop
mov
jnp
sub
mov
lods
xchg
fs
out
test
or
inc
lea
mov
ja
adc
test
stc
jl
int
sbb
xchg
fcmovnu
jg
mov
dec
test
push
sub
je
test
leave
or
call
add
mov
cmp
dec
movsl
int
andb
jno
sbb
movsb
xchg
mov
ja
mov
mov
fmuls
inc
lock
or
aam
pop
adc
subl
and
pop
rol
push
loopne
inc
adc
jb
pusha
cmpsb
std
or
adc
test
pop
mov
insb
bound
push
sbb
pop
sbb
sbb
rcll
xchg
lock
cmpsb
fadds
loopne
addl
inc
push
je
xlat
test
rcll
mov
mov
test
or
sub
or
inc
or
dec
imul
cmpsb
les
rcrb
mov
aas
pextrw
xchg
xchg
dec
lret
push
rorb
pusha
mov
int3
std
adc
enter
sub
arpl
dec
sub
sbb
stos
loopne
pop
mov
xor
jecxz
sub
stos
inc
outsl
sbb
scas
or
std
es
js
lds
inc
xor
repz
sub
es
ss
cwtl
mov
sbb
movsb
test
fbld
test
rcll
shll
add
or
xor
mov
mov
stos
mov
dec
sbb
fwait
movsb
and
call
and
in
inc
aam
and
scas
adc
std
xchg
ret
mov
dec
enter
ror
lcall
imul
fsubl
aam
adc
and
jnp
fdivs
aas
fmuls
lods
cs
inc
pop
pusha
and
or
inc
mov
nop
loopne
sub
jae
or
cmp
adc
scas
add
push
mov
scas
shll
and
lea
xor
cmp
inc
pop
ds
outsl
test
shll
pop
xor
test
and
movsl
js
mov
cltd
bound
sbb
pop
inc
push
xlat
loope
out
inc
pop
inc
adc
movsb
lods
cmp
and
add
movsb
loope
mov
add
xor
cltd
in
dec
fwait
in
out
inc
in
mov
xor
shlb
dec
dec
jo
mov
fwait
mov
movsb
cmp
adc
fisubl
sbb
insb
adc
inc
xchg
pusha
out
loope
add
stc
pop
loopne
sub
mov
loope
push
xchg
mov
dec
movsl
outsl
mov
insl
pop
bndldx
test
in
mov
in
dec
sbb
les
xor
mov
sbb
int
fisubl
sbb
sub
jns
icebp
mov
fistpll
test
leave
inc
inc
test
cltd
js
mov
mov
xor
pop
or
push
mov
movsl
xchg
jno
mov
or
push
addb
cld
mov
scas
das
xor
rsqrtps
outsb
cmpsb
subb
out
loopne
or
inc
lods
mov
or
add
adc
sbb
sbb
push
fdivrs
rorb
leave
adcb
icebp
adc
sub
xchg
push
pop
popl
sbb
sbb
adc
fldcw
push
call
vmread
and
mov
fcompl
or
inc
das
test
or
dec
mov
dec
je
les
mov
push
push
jne
lds
xchg
inc
pop
xchg
cmp
or
mov
mov
pop
dec
xor
aad
mov
or
repz
push
jne
in
test
scas
inc
add
and
jo
pop
xchg
les
jge
push
mov
adc
std
je
dec
mov
sarb
pop
xor
inc
pop
add
in
enter
inc
mov
jb
and
pop
push
adc
in
icebp
pop
jb
push
fimull
add
xor
int
pop
xor
lock
jae
or
sub
jns
es
out
sbb
imul
inc
lcall
popf
out
inc
fnsave
and
xor
cmp
cs
adc
jb
gs
std
add
push
inc
sub
sti
cmp
enter
loopne
mov
shrb
or
cmp
cmp
aad
pusha
mov
js
dec
cmp
adc
popa
inc
jl
icebp
icebp
bound
mov
push
movsl
push
aaa
push
fsubr
rol
out
push
out
in
mov
fildl
adc
gs
jb
push
push
shl
add
imul
rolb
push
cmp
push
loopne
sti
pop
shr
inc
and
inc
adc
mov
lret
nopl
mov
leave
pop
adcb
scas
pop
je
popa
xchg
dec
jl
and
xchg
inc
pushf
xchg
je
popa
lods
fwait
stos
jo
mov
push
std
js
push
xchg
fildl
addb
inc
pop
jb
leave
insl
nop
and
xchg
pushf
dec
mov
leave
and
dec
sub
test
dec
mov
xor
xor
sub
shrb
shrl
xor
and
mov
cwtl
mov
xor
adc
int3
adc
in
add
pop
or
xchg
mov
mov
cmp
inc
les
push
sub
loope
les
adc
push
add
call
or
and
mov
mov
lds
test
dec
and
mov
mov
pusha
mov
cmp
xor
sub
lcall
inc
dec
xchg
jo
lods
stos
and
insl
jmp
in
scas
fdivs
add
es
or
or
cltd
nop
inc
notl
out
or
filds
jae
mov
ret
in
jge
push
and
or
inc
mov
inc
cs
add
and
xor
sti
lods
and
aaa
loopne
push
imul
or
adc
shlb
pop
insb
leave
sarb
xchg
inc
fcoms
adcb
aam
add
mov
xchg
jo
fwait
bound
jbe
xchg
invd
xlat
imul
repnz
sbb
rcl
push
add
stos
xor
dec
xor
push
shrl
adc
sub
mov
int3
test
sbb
xchg
cmc
sbb
mov
fistl
mov
les
jmp
mov
xor
mov
or
leave
sbb
push
xorl
and
and
cmp
add
or
adc
add
pop
lret
or
dec
add
or
and
or
int3
lea
xchg
jne
adc
push
adc
test
rol
mov
adc
pusha
adc
or
stos
imul
inc
mov
test
mov
gs
xor
call
cmp
iret
popa
insb
shlb
sub
mov
cwtl
sbb
nop
in
mov
sbb
sub
rclb
or
inc
aaa
xor
dec
jo
lods
inc
aam
fidivl
mov
pushl
leave
and
or
or
imul
push
stos
dec
in
sbb
xchg
pop
mov
xchg
imul
adc
fdivr
loopne
jne
jo
pushf
fdivr
sub
xor
xor
and
insb
les
sub
xchg
mov
shlb
sbb
lds
sbb
jl
shll
fcmovb
jne
int3
cltd
cmp
jbe
dec
sbb
mov
adc
adc
inc
mov
fwait
in
push
nop
shrl
and
dec
test
cwtl
fs
dec
xor
mov
cmp
sbbb
cltd
mov
dec
cmpsb
inc
lods
shlb
enter
push
or
mov
lcall
lods
popa
push
nop
stc
aad
in
inc
add
xor
push
movsb
lea
pop
or
lds
in
adc
sbb
insb
adc
subb
push
xchg
adc
adc
adc
dec
sbb
aas
es
test
mov
sub
xchg
adc
shlb
dec
sub
mov
inc
inc
fldt
xor
lods
imull
dec
test
cs
jns
fadds
push
repnz
cmp
jl
pop
insb
mov
shl
pop
mov
dec
aam
es
stos
mov
jmp
mov
sub
and
lods
add
enter
push
mov
jb
mov
sbb
fistl
fcomps
pop
test
add
inc
xor
jb
sbb
adc
sub
fmull
sbb
repnz
cltd
mov
mov
adc
dec
add
cmpsl
mov
sbb
sbb
adc
fcompl
sbbb
mov
sahf
in
pushf
lock
jmp
push
addl
pusha
push
clc
inc
lock
repnz
mov
or
add
cmp
mov
xchg
bound
adc
adc
dec
and
inc
cwtl
sub
inc
push
lods
mov
push
adc
ja
shlb
loopne
cmp
iret
aam
add
add
iret
and
int3
insb
xor
xor
jmp
fnsave
push
pop
out
xor
call
and
adc
mov
mov
shll
cwtl
aas
test
xorl
fistl
das
rorl
xor
or
test
ficomps
in
fisubl
dec
adc
dec
jae
mov
push
dec
es
scas
mov
in
sub
or
addb
dec
pop
pusha
dec
popa
pop
in
ficompl
nop
imul
mov
sub
insl
pusha
xor
cmpl
mov
insl
xchg
inc
scas
nop
dec
scas
adc
dec
and
loopne
aaa
add
and
dec
ljmp
dec
adc
inc
xor
and
arpl
pop
fisubl
push
push
push
sarb
xchg
push
add
push
and
cmp
add
mov
call
pop
mov
mov
cmpsb
mov
dec
dec
sti
add
jl
push
pop
mov
jo
pop
adc
add
jo
inc
pop
test
xlat
push
enter
or
shll
push
jae
sub
and
xchg
orb
movb
out
in
sbb
add
and
dec
adc
push
and
leave
xorb
dec
mov
cmp
fs
aam
div
popa
add
outsl
mov
jl
into
push
call
insb
jp
dec
repz
loopne
out
adc
call
mov
inc
inc
mov
test
stc
cmp
lock
and
fcomp
insb
pusha
idivl
adc
jnp
negl
push
push
fwait
in
pop
jns
inc
add
addl
les
ds
fdivrl
push
clc
cs
lcall
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
add
pop
and
xadd
inc
xchg
sub
rcll
mov
mov
jns
mov
mov
dec
test
push
push
repz
repz
dec
cmp
sub
out
adc
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
push
mov
push
pushl
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
sbb
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
pushl
clc
push
or
cmp
rclb
cmpl
repz
testb
jno
iret
repz
xor
ds
dec
dec
mov
in
ljmp
gs
outsl
arpl
fs
out
sbb
push
dec
imul
mov
jne
push
gs
cld
addr16
xor
cs
adc
popa
and
popa
je
outsl
outsb
jbe
push
insb
push
mov
subl
jnp
xchg
sbb
add
pop
sub
cmp
call
inc
outsl
jb
sti
js
je
jb
gs
cmp
or
outsl
add
add
cld
in
cld
add
add
je
push
je
jbe
lock
jb
mov
pop
pop
mov
add
arpl
iret
mov
insl
cmp
dec
and
xor
add
push
das
das
adc
push
dec
addr16
lock
insl
bound
daa
jnp
aas
jbe
outsl
jbe
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
in
out
popa
mov
inc
jo
imul
subb
jb
inc
insb
adc
mov
popl
outsb
jns
jg
addr16
or
fcompl
jne
xor
cltd
loop
and
daa
push
scas
clc
sbb
in
cmpsl
cwtl
adc
and
jbe
pushf
outsl
pop
dec
inc
ds
popa
das
mov
lcall
add
mov
sub
call
fs
fiaddl
pop
sbb
fimull
add
aad
cmpsl
cmp
and
sub
sub
cs
lahf
cmpsb
das
movsl
cmp
cmp
ds
inc
das
mov
pop
hlt
pusha
cmp
jl
jle
add
arpl
test
fmuls
pushf
addr16
and
push
pop
or
jno
mov
adc
push
call
insb
jae
cs
jmp
push
mov
inc
inc
jnp
test
mov
xor
insl
and
aam
add
jbe
imul
jae
sbb
inc
sbb
fimuls
inc
and
add
xor
aas
aad
sbb
push
jo
imul
mov
pop
mov
je,pn
jo
mov
and
mov
and
push
popl
ds
int3
mov
je
or
xorb
mov
int
inc
popa
and
daa
mov
jne
loopne
data16
xor
and
insl
push
sbb
mov
inc
cs
xor
and
jne
dec
mov
rol
lcallw
out
es
or
add
xchg
push
and
or
imul
sub
or
fs
cli
jb
bound
inc
jo
inc
push
and
push
ds
fidivrl
int
push
mov
loope
push
daa
sub
test
das
arpl
cmp
roll
arpl
jge
das
andl
inc
in
inc
xchg
xchg
insb
imul
imul
int3
or
push
addb
mov
shll
xchg
shl
jns
push
fbld
ss
cs
lock
adc
jbe
shll
hlt
dec
or
es
dec
add
add
imul
nop
ss
fs
jo
cli
jbe
add
dec
imull
inc
xchg
push
mov
inc
pop
push
gs
push
mov
out
fisttpll
jae
inc
jle
outsl
push
mov
out
push
cmp
cmp
xor
pusha
or
inc
aaa
insl
in
ljmp
imul
add
outsb
popa
pop
or
in
inc
jno
or
std
cmp
push
push
leave
nop
push
roll
inc
insl
imul
inc
fnstsw
adc
sub
es
lea
push
and
add
ja
push
cmp
xchg
mov
addr16
jae
xor
adc
jne
pusha
jo
sub
test
sar
shrb
sub
and
xor
lret
inc
sub
pop
dec
jmp
or
jo
and
jno
pop
mov
ja
ds
inc
and
pop
imul
push
dec
cmp
jmp
ud0
loopne
dec
cmp
mov
push
rol
cld
sti
mov
das
lret
jno
icebp
pusha
inc
mov
clc
ret
lock
outsb
movsl
add
xorl
shrl
push
loop
imul
lock
gs
popa
dec
aaa
push
loope
add
xor
jg
js
pop
pop
jle
jae
je
pop
dec
pop
inc
xor
xchg
js
add
xchg
in
cltd
sbb
sub
xor
sub
push
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
int
xchg
pop
hlt
and
or
pusha
add
js
addr16
add
pop
sub
add
sbb
mov
outsl
mov
addl
ret
int
test
add
orb
sti
outsb
push
cmpb
push
and
sub
jb
insl
int
adc
push
jo
add
inc
and
cmp
push
xor
sbb
push
cld
xlat
push
stos
int3
js
jo
in
fisttpl
pop
sbb
daa
xchg
lea
mov
and
leave
and
clc
xchg
push
bound
es
pop
push
adc
inc
or
mov
test
dec
cmp
and
dec
cmp
cs
dec
cmp
test
je
aam
les
nop
out
outsb
in
and
mov
insl
mov
xlat
inc
cltd
nop
fwait
stos
and
sub
dec
push
and
adc
nop
sub
test
orl
fadds
in
addb
in
andb
push
add
add
mov
and
add
add
fucompp
inc
adc
insl
adc
fdivs
add
pop
push
adc
shr
pushl
addl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
dec
into
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
adc
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
movsb
adc
or
lcall
push
or
roll
xchg
push
add
fists
xor
pop
outsl
ja
inc
push
call
gs
bound
dec
stos
imul
ss
popa
mov
xchg
mov
jne
daa
pop
lea
std
ja
dec
mov
outsl
js
push
push
inc
push
mov
inc
dec
dec
and
insb
gs
jne
out
mov
dec
mov
daa
add
aas
lret
scas
push
insb
in
dec
imul
sbb
jb
jo
ds
and
dec
dec
insb
cmp
inc
jns
daa
pop
mov
mov
mov
aad
lcall
addr16
cmp
adc
mov
mov
arpl
pop
pusha
push
pusha
inc
jbe
push
lea
or
push
and
or
push
sbb
popl
clc
mov
sti
cmp
push
loopne
push
and
inc
es
dec
adc
mov
lock
ret
test
push
insl
mov
test
aas
cmp
insb
call
loope
xor
subl
gs
push
adcl
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
cmp
and
mov
sarb
jg
xchg
aam
imul
call
sub
jg
jae
xor
xchg
addr16
pop
jg
popa
jl
fistl
or
mov
cmpl
push
or
lods
sbb
pop
das
je
xlat
arpl
outsl
xchg
daa
xchg
mov
fisubl
daa
popw
pop
cmp
out
xor
add
ds
sub
insb
dec
imull
inc
jl
push
jle
sub
dec
fstpt
dec
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
xor
lods
lret
addr16
push
jb
imul
adc
xor
lret
ret
xor
push
xor
in
add
es
cmpsb
inc
out
jo
sub
shr
jo
lahf
sub
cld
push
sahf
out
pop
hlt
push
call
outsb
lahf
out
mov
cwtl
pop
add
idivl
imul
aam
cwtl
nop
ss
out
mov
push
test
sahf
out
je
fs
and
sti
xor
rcrl
push
dec
or
xor
dec
mov
mov
inc
in
das
push
clc
out
out
jns
dec
dec
push
inc
movb
repz
inc
inc
cmp
xor
sub
sahf
repnz
and
sbb
inc
call
add
lcall
push
in
shrb
dec
sub
or
sahf
out
fiadds
test
pusha
inc
xor
lahf
out
xor
sbb
std
in
repz
repz
mov
insb
out
ds
inc
sbb
cld
aam
push
out
sahf
mov
sbb
pop
aam
lcallw
test
bound
outsb
push
xor
test
mov
test
xchg
cwtl
cmpsl
pop
push
jb
bound
fs
sbb
cmp
jno
je
or
std
sub
sahf
shrd
sub
cld
push
clc
movsl
add
sarb
insb
cmp
inc
inc
dec
jae
insb
push
sub
insb
inc
mov
jnp
push
sbb
dec
inc
dec
xor
inc
in
outsl
clc
dec
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
das
adc
sub
adc
sbb
std
incl
popa
into
mov
mov
adc
outsb
jg
inc
fidivl
adc
clc
lret
sbb
dec
sahf
cli
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
test
in
fstl
mov
and
repnz
or
push
cmpsb
iret
lret
add
jmp
inc
inc
mov
mov
sub
fwait
fwait
testl
int
jns
ds
xor
incb
int3
decl
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
decl
pop
and
xchg
lret
sahf
icebp
mov
cld
push
cld
decl
or
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
cs
cld
pop
pop
leave
loop
mov
xchg
dec
mov
lods
and
sbb
mov
iret
adc
out
mov
pop
and
es
andl
std
flds
sbb
add
or
push
dec
push
push
inc
inc
or
pop
clc
jmp
outsb
jbe
and
push
adc
cmp
push
gs
imul
inc
sbb
push
dec
push
cmp
sub
mov
adc
push
dec
sub
xor
dec
clc
inc
and
push
js
inc
xor
add
inc
dec
adc
pop
pop
mov
sbb
pop
pop
sti
push
sub
rdmsr
es
push
push
ss
fistpll
fildl
adc
jb
jbe
pop
sbb
dec
pop
cmp
fstpl
xchg
sbb
adc
sbb
pop
and
fs
ss
and
ds
ja
fstpt
push
sbb
inc
add
and
lods
or
ret
jg
ss
dec
adc
sbb
push
ljmp
or
pop
push
push
adc
sahf
loopne
or
sbb
xor
pop
cmp
ret
xlat
les
jnp
inc
dec
dec
sub
push
sub
inc
or
pushl
inc
adc
cmp
xor
and
adc
jge
add
js
inc
pusha
add
sti
dec
popa
sbb
pop
push
pop
or
imul
addr16
push
pop
adc
or
inc
inc
inc
ret
add
es
test
je
pop
or
add
pop
dec
pop
sub
adc
cmpxchg
push
inc
pop
sub
xorps
sub
and
adc
pop
ds
int
imull
sbb
xor
cmp
push
cmp
sbb
sub
or
mov
sbb
adc
fsub
pop
fidivl
push
and
and
and
sub
adc
imul
adc
mov
out
mov
pop
push
gs
mov
jg
push
xchg
dec
dec
adc
and
push
and
mov
pop
dec
incb
push
and
sub
in
sub
adc
es
or
sub
mov
adc
es
xor
inc
pop
adc
dec
mov
dec
cwtl
in
push
cmp
lcall
out
push
movsb
push
scas
daa
mov
jge
jl
cmpsl
stc
daa
lret
leave
outsb
add
shl
incl
into
outsb
repz
stc
jg
or
pop
sub
iret
xor
push
and
inc
push
or
notl
xor
mov
add
sbb
xor
jbe
cmp
aaa
xor
cmp
outsl
insl
mov
gs
lahf
inc
popa
outsb
inc
push
and
enter
and
add
imul
into
insl
dec
bound
xor
and
or
add
mov
inc
ds
testl
mov
dec
repz
pop
aas
and
repz
repz
pushf
mov
out
inc
dec
and
stc
xor
sub
sub
int3
loop
add
and
les
adc
pusha
pop
ss
scas
cs
add
cmp
dec
into
push
push
sub
sbb
sbb
inc
push
data16
mov
inc
jbe
mov
dec
imul
pop
or
sbb
inc
cmp
or
mov
sahf
and
mov
push
cmp
dec
fcoms
fistpl
jmp
push
in
mov
xor
add
jb
and
pop
sub
rcll
push
and
push
and
push
pop
xor
fildll
sbb
sub
inc
pusha
sub
mull
pop
push
sbb
adc
adc
xor
xchg
fimull
xor
fidivrl
js
cmp
push
out
adc
jge
enter
sub
ret
sbb
es
sbb
out
xchg
es
jecxz
lmsw
es
jge
fs
pusha
push
int3
cmp
outsb
scas
lcall
jo
scas
fildl
daa
sub
ret
push
sahf
mov
dec
pop
adc
dec
add
dec
or
ucomiss
and
xor
inc
dec
das
push
lds
add
ds
add
push
or
popa
jmp
pushf
jbe
inc
push
adc
or
jne
push
xor
es
jo
dec
pushf
push
xor
xlat
sti
pusha
adc
jle
xor
aaa
adc
and
fwait
pop
rcll
inc
adc
pop
xchg
inc
add
and
jae
dec
xor
xchg
repnz
push
mov
push
pop
inc
xchg
adc
inc
inc
or
or
add
mov
testl
sbb
inc
punpcklbw
arpl
testl
in
adc
push
mulps
xor
lret
popa
push
and
aaa
daa
sub
cmc
push
sub
add
push
inc
dec
addr16
pop
push
loope
into
xor
push
push
and
pushf
fdiv
dec
sbb
push
and
mov
ficompl
mov
divl
or
sbb
in
adc
lods
mov
add
mov
cmp
mov
fisttps
aas
bound
push
xchg
add
insb
jne
es
loop
sbb
dec
sub
xchg
mov
ss
jmp
pop
dec
pop
push
gs
add
dec
pusha
inc
sahf
and
in
divl
push
loopne
int
sbb
mov
andl
push
ret
push
pop
ss
testl
daa
into
rclb
sub
mov
pop
push
dec
and
sub
es
push
pop
or
add
fistpll
xor
or
scas
cwtl
fldenv
ja
sbb
and
loop
push
fsubrs
pop
xchg
imul
push
cmp
idivl
fcoms
jg
inc
cmp
inc
and
sub
mov
push
add
or
or
es
sub
and
sahf
push
pop
ss
lret
ret
mov
outsb
pop
jns
mov
jne
xor
out
inc
ja,pt
sbb
leave
cld
push
push
jae
insl
popa
imul
leave
mov
push
pop
outsl
jo
lods
lock
push
ja
pop
iret
stos
pop
inc
mov
adc
push
insb
push
cmp
fwait
sbb
cs
pop
jne
out
add
push
outsb
push
fsubrs
pop
cmp
mov
loope
adc
add
insb
test
in
shl
movhps
dec
or
mov
fimuls
adc
or
jl
pop
cwtl
cmp
pop
xchg
fdivrs
adc
pop
daa
push
adc
sub
pop
es
push
xor
mov
into
lret
push
sbb
inc
dec
in
cmp
mul
xor
xor
push
sub
pop
mov
cmp
sub
xchg
push
shl
push
daa
ss
pop
jge
jnp
cli
pop
out
sub
pop
add
cmp
neg
add
add
push
push
pusha
int
popa
ret
push
mov
mov
les
mov
xchg
add
jb
out
mov
mov
imul
sub
ret
sbb
push
out
repnz
push
jl
ds
pop
pop
or
push
mov
xor
aaa
push
pop
out
loop
add
push
pop
sub
sub
sbbb
cmpsl
mov
mov
mov
mov
gs
imul
sub
pop
and
decl
push
push
das
xor
xor
dec
orb
js
and
stc
pop
sbb
fisubrs
das
adc
ffreep
or
addr16
aas
and
inc
inc
inc
push
je
test
xor
int
push
mov
or
enter
push
xchg
outsb
jb
clc
xchg
jb
add
cmp
imul
popf
adc
and
push
fwait
iret
pop
enter
pop
pop
xchg
scas
xor
addb
pop
jp
lahf
sub
sub
inc
inc
inc
sub
dec
adc
adc
or
imul
das
sar
pop
mov
inc
cmp
inc
es
pop
or
or
cmp
dec
js
ss
push
mov
add
mov
lcall
adc
inc
mov
jle
pop
push
xorb
mov
lsl
xor
stos
jo
inc
add
insb
sbb
push
clc
sub
xor
push
test
xchg
popf
repnz
leave
adc
sub
fisubl
and
les
xchg
enter
xor
inc
dec
inc
push
push
sbb
ss
dec
pusha
push
inc
int3
mov
bound
adc
repz
out
add
cli
push
push
outsb
gs
xlat
dec
cmp
inc
push
or
adc
pushf
push
pop
push
cli
sbb
cmp
inc
inc
dec
sub
shr
ljmp
test
ja
addb
pop
adc
lods
adc
test
data16
adc
push
das
addr16
pop
fdivl
adc
jge
sbbl
ds
adc
add
mov
fcoms
add
dec
das
aam
adc
inc
xor
pop
add
dec
daa
mov
subl
stc
push
out
sub
pop
pop
jno
add
out
pop
and
inc
je
loop
pop
mov
cmpsb
nop
adc
das
mov
xor
divl
roll
xlat
aas
loopne
out
loopne
fistl
out
loope
cmc
jecxz
in
in
cmc
cmc
mov
ljmp
xor
cs
js
push
pushf
scas
mov
in
push
jo
pusha
data16
daa
fadds
mov
cmp
push
clc
add
movmskps
adc
cs
jo
cmp
add
push
rclb
push
mov
or
cmpsl
lock
cwtl
xor
add
fadds
dec
jno
xchg
cmp
inc
cmp
push
mov
mov
das
mov
and
push
pop
ss
pop
push
dec
pop
frstor
sub
and
push
jno
jo
addl
shrl
es
mov
inc
pop
es
es
and
xchg
cmp
ss
and
sbb
cmpsl
bound
mov
shrb
cmp
leave
adc
push
divb
pop
sub
xor
daa
mov
add
sub
dec
sub
xor
sub
mov
test
aad
push
fsts
loopne
shrl
and
pop
pop
adc
inc
pop
adc
sub
cmp
adc
push
cli
xor
or
out
and
jns
jne
sbb
or
popa
lods
andl
xor
ret
push
dec
sbbb
out
and
ss
aaa
pop
leave
dec
nop
and
add
push
jecxz
fdivrl
or
inc
js
sub
push
xchg
pop
mov
push
lcall
push
push
xchg
inc
add
add
push
filds
cmp
pop
or
and
sub
push
xor
inc
jl
add
sub
cs
dec
or
push
inc
sub
insb
lock
mov
loopne
imul
jnp
inc
mov
jg
adc
adc
popa
sbb
add
and
or
adc
sub
dec
sub
xlat
hlt
pop
adc
pop
jae
sub
hlt
lods
pop
dec
add
lcall
xor
sub
push
xor
loopne
sub
and
adc
dec
pop
adc
adc
sarl
sub
int
adc
pop
adc
in
or
sbb
adc
xchg
ds
lock
sbb
sub
mov
mov
cmp
jno
dec
cltd
pop
sub
and
mov
mov
xor
loopne
out
sbb
xor
dec
mov
xlat
nop
and
xchg
cwtl
call
lss
and
jo
fdiv
or
pop
mov
adc
jnp
jae
negb
inc
cmp
and
faddp
pop
jge
xor
and
sarb
and
es
jb
push
dec
pusha
dec
cltd
rcll
sti
adc
or
push
sub
jae
push
mov
push
xor
out
pop
outsb
sub
loopne
out
pop
lea
adc
jb
das
sbb
lds
mov
or
pop
xor
shll
xchg
xchg
movsl
sbb
test
insl
imull
rcrl
ja
int3
and
push
jno
inc
add
ss
insb
cmp
dec
and
addr16
and
loopne
mov
cmp
sbb
insl
mov
les
push
mov
xchg
cmp
adc
xlat
adc
adc
dec
xchg
pop
sbb
sbb
add
in
add
out
inc
adc
push
sub
and
adc
or
das
pop
inc
pop
test
sub
jb
dec
or
aas
or
push
xor
sub
jbe
es
mov
add
test
gs
cli
mov
xor
js
sti
cmp
xchg
push
sub
cs
inc
sbb
sub
daa
and
ss
sbb
mov
cwtl
sbb
dec
cs
imul
lret
ss
mov
mov
cltd
inc
dec
inc
xor
adc
jp
cld
sbb
lods
xchg
mov
dec
adc
dec
sub
pop
roll
dec
push
push
cmp
or
push
flds
aaa
jbe
rclb
mov
aaa
ja
or
mov
and
fisubrs
cli
sysexit
outsl
jo
insb
gs
ja
cmp
imul
and
add
addb
das
das
fiaddl
andl
jmp
mov
in
sub
movsb
dec
push
inc
sub
stc
mov
rolb
cwtl
push
push
divb
out
int
int
push
mov
popa
push
xchg
pop
cmp
pop
push
pop
push
and
xor
push
test
pop
ja
int
dec
pusha
movsl
arpl
lds
rorb
fadd
inc
imul
sub
decl
dec
mov
out
lcall
ret
and
mov
mov
sbb
ljmp
jmp
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
sti
je
adc
cli
mov
sub
sub
jg
sbb
mov
xorb
in
pop
enter
lods
sub
and
jle
jo
pop
add
sti
fsubs
sbb
mov
cmp
dec
pop
dec
xchg
pop
shl
dec
push
adc
jg
pop
mov
xor
aaa
aaa
lods
inc
cltd
xor
and
sub
fcoml
int3
and
rclb
mov
imul
cli
outsl
movsb
std
mov
push
dec
imul
repnz
mov
pushf
sub
leave
jae
sub
insb
pushf
cmp
pop
int3
pop
xor
jae
xor
cmp
xchg
pushf
cmp
sbb
or
and
lcall
lods
pop
pop
je
inc
js
cmp
outsb
pop
add
loope
rorl
dec
pop
aam
sub
out
or
mov
cmp
cmp
xor
mov
xor
xor
inc
xor
xor
xor
push
pop
xor
mov
outsl
cli
cmp
insb
or
outsb
add
dec
sub
cmpsl
adc
lret
sbb
inc
sub
dec
xchg
push
loope
jp
into
push
jb
ret
cli
jo
ja
mov
jne
cmp
popa
outsb
imul
push
loopne
imul
add
pop
and
push
add
mov
sarb
ja
rolb
das
rcr
mulb
andb
add
clc
pop
scas
out
xor
sub
lods
xchg
out
dec
sbb
pushf
xor
inc
rcr
and
daa
pop
xor
fsubl
sub
outsb
or
push
sub
out
sbb
push
pop
inc
es
push
jg
rclb
mov
xor
outsb
pusha
add
mov
es
imul
pop
adc
and
inc
jecxz
add
xor
adc
sbb
push
push
or
shlb
out
cs
mov
inc
test
push
mov
inc
call
dec
in
das
xchg
int3
jp
data16
repnz
jmp
dec
fs
dec
shll
add
addr16
fdivs
lods
es
ds
imul
mov
mov
imul
cmp
cmp
mov
push
das
outsl
push
push
inc
sub
fcmovnu
clc
fidivrl
iret
fwait
test
inc
mov
lcall
insl
lret
inc
push
dec
shrb
repz
out
jge
stos
jns
jne
mov
enter
ds
in
mov
js
pop
sub
xor
dec
in
subl
pop
pop
mov
scas
jb
ja
cltd
mov
xchg
jns
cmp
dec
fstps
xor
push
rclb
and
hlt
pop
push
mov
call
fnstcw
pop
push
out
lret
cs
jl
jnp
push
mov
pop
out
lcall
mov
rcrb
in
in
jge
dec
cwtl
inc
push
jle
xchg
daa
lods
dec
xchg
jns
outsl
sub
aaa
mov
repz
xor
jp
cmpsl
stc
pushf
cmp
lods
cmp
sahf
mov
lcall
adc
iret
jae
pop
mov
notb
loope
testl
out
repz
aaa
test
lea
pop
sbb
fdivp
push
int
fstpt
aad
mov
push
les
fistpll
cmpsl
push
stos
push
movsb
mov
and
ds
iret
rcll
pushf
pop
sbb
xor
push
add
scas
mov
out
lcall
cwtl
dec
repz
mov
cmc
daa
mov
int
jns
lea
and
xorl
pusha
les
jp
repz
leave
imul
out
sahf
dec
insb
lea
sarl
cmp
dec
mov
in
xchg
adc
cmp
popa
repz
repz
mov
in
out
sahf
out
xchg
cs
mov
mov
aas
and
jg
dec
sbb
scas
sub
adc
incl
lahf
and
and
rcrb
push
outsl
adc
push
mov
xor
adc
mov
pop
mov
push
mov
jg
loopne
mov
jbe
push
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
roll
add
cmpsb
add
cmp
test
popw
inc
data16
aad
jbe
push
jae
popa
pop
rolb
push
lret
ja
sbb
or
ja
aaa
push
cmp
cltd
push
dec
ljmp
push
subb
loop
pcmpgtd
dec
cmp
dec
imul
insl
push
ljmp
cmpsb
dec
add
jbe
in
xorps
push
insb
pop
sbb
jb
dec
pop
je
jns
ja
xlat
aaa
push
fisttps
jp
das
push
in
jno
mov
in
mov
pop
jbe
iret
push
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
out
scas
mov
es
popf
push
add
das
js
sar
ret
push
ds
sbb
das
adc
cmp
insl
fsubrp
pop
ret
dec
pop
insb
je
push
addr16
jo
jae
es
outsl
and
aas
mov
cmp
adc
and
cmpsb
ljmp
or
cmp
mov
add
xor
cmp
cmp
push
xor
xor
cmp
push
add
cmp
sub
notb
scas
or
push
push
out
jno
dec
sub
push
dec
or
mov
adcl
jbe
addr16
adc
cmp
sub
mov
and
jae
mov
adc
es
jbe
jns
pop
dec
ss
sub
xor
aaa
push
das
mov
inc
fstpl
push
out
cmc
sbb
push
dec
mov
adc
pop
jmp
aas
xor
and
pop
ds
mov
inc
push
out
imul
push
das
push
xor
push
incb
test
mov
sbb
pop
mov
js
sub
adc
pop
xor
cmp
repnz
push
sub
imul
add
dec
popa
pop
fsubl
lock
cmp
aaa
xor
fcoms
adc
sub
or
inc
fdivs
jo
jbe
lods
test
xchg
ss
mov
pop
adc
pop
sbb
pop
sysexit
push
inc
repz
repz
andl
sahf
out
add
or
xchg
fwait
int
xor
add
data16
insb
pop
or
adc
int
fidivrs
and
sub
xor
inc
mov
xor
jnp
mov
mov
ss
insb
mov
mov
xchg
sbb
fwait
int
ret
sub
add
or
out
insb
push
adc
pop
add
ss
adc
push
push
dec
ltr
mov
and
das
xorl
xor
adc
imul
dec
pop
imul
sub
adc
std
or
lret
sub
sub
insb
sub
sbb
mov
addr16
pop
fildl
sub
lcall
mov
adc
mov
adc
inc
push
jo
xor
stos
das
lea
and
addr16
fiaddl
aaa
lahf
insl
or
sub
mov
sbb
daa
mov
cmp
loopne
stos
negl
mov
daa
or
lea
pusha
mov
bound
das
adc
aaa
iret
dec
sbb
scas
xchg
das
cvtdq2ps
daa
test
push
push
imul
daa
outsl
shll
xchg
adc
jecxz
paddsw
and
pop
sub
inc
xor
popf
repnz
push
push
pop
pop
push
pop
loopne
shlb
fld
fwait
mov
sub
das
das
mov
sub
pop
xorb
pop
xchg
or
lea
pop
add
outsl
insl
das
pop
int
addr16
aad
add
jg
shlb
pop
push
fstl
mov
cmp
outsb
mov
inc
pop
and
mov
inc
imul
pusha
rcll
add
outsl
adc
inc
ret
lret
es
jae
push
cmp
or
add
and
movsl
loopne
xchg
xchg
pusha
or
jo
mov
movsl
jg
sub
add
or
jo
fwait
mov
xchg
add
xchg
adc
xor
sub
ja
cmpsl
call
test
mov
aaa
add
fildl
daa
inc
stc
pop
setne
es
mov
push
clc
pop
pop
dec
mov
push
sbb
xchg
pop
push
es
cmp
scas
pop
das
pushf
das
fs
sbb
adc
push
stc
or
push
jo
pushf
ret
daa
lcall
adc
push
or
dec
sub
loope
neg
add
es
or
xchg
jae
inc
add
push
mov
lcall
mov
push
das
das
jbe
insb
imulb
xor
pop
js
or
lret
or
adc
or
insb
push
stos
sbb
adc
dec
cmp
pusha
subb
xchg
rclb
cmp
ss
js
sbb
adc
sbb
cmp
sub
jp
icebp
adc
shlb
or
pop
ret
and
dec
dec
sub
push
dec
and
inc
sbb
sbb
dec
in
and
and
adc
fwait
loopne
dec
pop
dec
les
add
cmp
cs
mov
je
sub
clc
bnd
fisttpl
add
dec
push
idivb
push
ljmp
ds
add
in
push
movsb
lods
pushf
push
ds
cmp
adc
or
loop
push
add
imul
add
faddl
adc
jb
jo
mov
sbb
push
add
lret
mov
mov
xor
popa
lret
adc
push
xchg
fstpt
js
sub
push
adc
adc
xor
scas
mov
lcall
inc
hlt
adc
gs
adc
push
xor
jno
loopne
pop
xor
and
cld
pop
push
add
push
inc
sets
adc
cmpsb
xor
insb
pop
aam
push
lcall
or
fbld
dec
bound
test
pop
jno
rorl
mov
pop
ja
and
test
add
pop
mov
loope
cmpsl
cmp
fnsave
nop
jecxz
pop
push
add
mov
inc
mov
lods
ret
xor
es
adc
lahf
push
pop
clc
ja
orl
push
arpl
add
pop
cs
dec
dec
cmp
push
jl
out
sahf
pop
rclb
das
adc
lock
popf
cmp
sub
nop
ds
jg
jb
jo
shlb
mov
jl
imul
xor
xor
add
loopne
testb
push
clc
push
fcmovnu
sub
pop
adc
push
mov
push
add
add
inc
inc
dec
cli
push
pop
incl
pop
push
push
dec
or
push
adc
dec
jo,pt
xor
dec
dec
xor
sub
cmp
push
cmp
dec
push
pop
add
inc
push
or
adc
push
push
or
cmp
mov
push
or
ds
adc
or
dec
pop
dec
add
xor
adc
lret
pop
stos
inc
or
cmp
add
push
sub
idiv
testb
inc
mov
push
pop
cmp
cmp
daa
cmp
and
mov
pop
pop
inc
inc
test
add
add
dec
daa
and
pop
pop
andps
mov
dec
add
inc
push
adc
inc
and
push
bound
or
push
pop
pop
sub
or
adc
sub
add
js
push
fsubs
daa
test
dec
add
jae
adc
pop
or
dec
mov
gs
cmpsl
fcmovbe
incl
push
xor
inc
inc
push
xor
cs
mov
dec
add
cmc
push
push
mov
es
outsb
sub
add
mov
ss
adc
ds
push
xor
and
xor
enter
mov
and
stos
xor
mov
mov
cltd
dec
loop
outsl
inc
add
and
sar
mov
aad
test
and
xorb
adc
push
lret
add
push
sbb
enter
inc
xchg
jp
or
and
lahf
mov
loope
pop
add
test
sti
pshufw
dec
inc
dec
push
dec
add
xor
sub
jbe
pushf
loopne
jo
jbe
adc
mov
pop
push
inc
inc
dec
inc
adc
inc
push
das
aaa
icebp
adc
hlt
pop
and
and
and
push
ja
inc
movsb
dec
call
divb
aaa
pop
inc
daa
pop
daa
sbb
ja
adc
push
push
push
push
and
xchg
adc
das
movups
inc
sub
and
mov
aaa
push
xor
inc
add
imul
cmp
inc
push
push
pop
inc
inc
popa
out
stos
xor
das
aaa
inc
push
inc
cs
inc
ss
ucomiss
push
leave
test
ss
mulb
decl
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
lcall
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
incl
je
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
mov
push
arpl
push
sub
adc
or
cs
insl
and
or
decl
gs
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
mov
lcall
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
hlt
decl
push
mov
fwait
stos
flds
pop
outsb
bound
imul
dec
xor
sub
jg
jo
push
jbe
jnp
jge
sub
or
or
inc
call
cmp
xor
mov
sub
inc
dec
pop
xor
addr16
push
cmp
ja
xor
push
aas
mov
and
add
jl
pop
data16
jns
pop
imul
adc
stos
clc
push
push
or
xchg
daa
imul
loope
sub
adc
pop
xor
xchg
sahf
adc
das
adc
call
add
bound
adc
push
jp
jb
cmp
out
push
dec
js
arpl
xchg
loop
int
rcrl
fs
push
decl
push
xchg
repnz
aas
dec
repnz
or
sbbb
xor
lods
mov
mov
push
inc
les
roll
sub
dec
sbb
orb
loopne
sbb
xor
frstor
jp
addr16
cmpsl
out
xchg
lret
push
push
and
popa
add
sbb
mov
fiaddl
inc
movsb
push
mov
push
stos
fmuls
sbb
arpl
int
mov
sbb
mov
gs
adc
and
or
adc
or
cmp
popa
stos
inc
andb
jge
pop
lret
rorl
jge
jmp
in
add
jo
mov
sbb
xchg
pop
inc
nop
and
mov
aaa
and
adc
push
popa
push
in
dec
sub
insl
hlt
pusha
cmp
pop
pop
jecxz
mov
in
pop
mov
fs
sub
inc
pop
xor
mov
sbb
push
sbb
pop
push
xchg
inc
adc
sahf
pop
push
and
sbb
int3
enter
push
faddl
cmp
adc
or
or
xchg
sbb
outsb
outsb
je
xor
js
stc
xchg
jo
jbe
jae
popa
insl
gs
loope
pushf
cmp
jmp
or
fwait
and
inc
pop
mov
jp
arpl
push
pushl
insl
loop
adc
ss
int
out
testb
sbb
inc
outsl
insb
dec
push
popa
je
push
push
pop
add
jae
cmp
push
adc
sub
div
xchg
jno
xor
add
or
push
gs
mov
pop
add
mov
adc
sub
mov
lods
mov
or
movsb
lret
adc
pop
adc
add
es
dec
pop
inc
sbb
add
mov
aaa
fs
enter
mov
cmp
cmc
push
push
jb
push
sub
pop
mov
xor
mov
dec
dec
and
ds
movsb
pop
push
or
lds
or
dec
faddl
out
call
mov
mov
push
dec
jle
insl
addr16
push
push
or
pop
adc
push
seto
add
push
mov
into
shrb
stos
inc
dec
popa
dec
sub
inc
mov
jb
pop
repz
or
sarl
pop
inc
jne
out
movsb
inc
fldt
pusha
or
das
mov
pop
and
loop
arpl
sarl
push
push
test
cmp
xchg
rcl
test
in
add
add
pop
fiadds
adc
inc
or
ret
daa
pop
call
fcoms
sub
cs
daa
cli
test
outsl
fs
jo
xor
nop
nop
pop
or
or
stos
push
outsl
imul
sbb
mov
mov
pop
imul
pop
jmp
inc
ds
scas
fildll
sub
das
stos
adc
sub
xor
sub
pop
pop
testl
push
aas
mov
dec
mov
shrb
lock
pop
push
sarb
pop
cmp
cli
and
push
iret
pop
es
data16
es
mov
dec
mov
rcrb
outsb
ja
dec
dec
aam
xchg
scas
pop
inc
scas
movsb
xor
pop
stos
dec
mov
pop
cmp
cld
insb
imul
dec
mov
pop
pop
scas
mov
or
aas
fwait
lods
mov
pop
pop
and
sarb
mov
dec
outsl
jae
mov
movsl
repz
pop
mov
pop
cs
test
pop
adc
test
cmp
insb
xor
test
hlt
xchg
iret
gs
mov
and
comiss
push
sub
inc
xchg
inc
adc
push
jge
or
mov
ret
aas
add
and
sub
sub
inc
dec
lock
inc
and
inc
in
or
add
cmp
mov
in
out
es
sub
push
jne
or
sub
scas
dec
filds
in
sub
mov
fs
pop
dec
data16
jae
push
popa
andb
outsl
and
xor
pop
mov
mov
punpckhwd
dec
outsb
push
je
mov
sbb
scas
pop
jae
lock
aas
insb
jecxz
sub
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
xchg
cmp
gs
js
loopne
movsb
or
inc
push
fwait
jo
loopne
pop
daa
dec
push
dec
and
mov
jb
jb
aas
jno
or
dec
cmpsl
pop
pop
scas
and
inc
adc
inc
inc
add
in
or
rcll
and
jb
add
pop
outsl
or
add
add
jo
dec
pop
imull
loop
flds
loopne
mov
ret
jb
cmp
addr16
adc
pop
test
sbb
inc
add
or
sub
pusha
add
inc
adc
pushl
ljmp
cmp
pop
xor
mov
or
dec
push
dec
sub
imul
lds
push
xor
xor
xor
push
push
movsl
add
sub
xchg
pop
and
sub
xor
and
imul
pushf
adc
or
xor
cmc
testb
inc
ds
lds
imul
sub
mov
sbb
fimull
mov
lods
xorb
test
pop
pop
add
adc
add
outsl
imul
insl
xlat
inc
andb
push
ja
inc
push
jge
cmp
cmp
pop
and
push
outsl
test
je
inc
add
mov
push
lahf
or
inc
std
lcall
add
jl,pt
inc
popf
pop
bound
add
xchg
dec
xchg
dec
inc
xadd
sbb
inc
cmp
inc
xchg
inc
cmovo
mov
inc
adc
sbb
mov
nop
jo
maxps
dec
iret
adcb
add
pop
xchg
sbb
das
test
les
int3
insl
scas
sbb
aas
add
xorl
test
addr16
push
inc
movsb
or
daa
lret
jne
jnp
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
mov
insl
adc
outsl
pop
add
insl
mov
insb
adc
inc
aas
jg
mov
stc
jbe
outsl
nop
sbb
jb
push
jb
inc
cmp
and
and
and
sbb
jb
pop
sub
es
cmp
sti
push
loopne
push
les
jl
cmpsl
inc
mov
aam
mov
pushf
dec
sub
pop
xor
sahf
ja
sbb
pop
xchg
mov
pop
sahf
jns
jns
pop
pop
ds
pop
push
mov
jl
out
sbb
in
enter
out
pop
shlb
imul
push
inc
adc
add
cs
jecxz
adc
out
dec
inc
adc
fsubs
mov
xchg
data16
aam
ss
add
pop
or
add
in
xor
add
jae
sbb
push
jo
push
jb
jge
inc
push
mov
fildl
pop
jg
mov
leave
aad
mov
xchg
add
dec
mov
xchg
mov
sbb
rorb
inc
cmp
sbb
push
pop
dec
outsl
add
adc
pop
enter
test
mov
outsl
fildll
cmp
cmp
rcrl
pop
ss
add
add
inc
push
mov
pop
or
sub
add
subb
in
xchg
xor
pushf
xor
in
cmp
out
pop
enter
push
push
push
sbb
sbb
add
push
sbb
outsl
out
dec
xchg
pushl
inc
xchg
in
xor
xchg
out
pop
ror
pop
leave
mov
fildll
and
mov
out
test
aaa
pop
dec
mov
lock
adc
mov
pop
leave
repz
pop
cmpsb
jmp
xchg
aam
or
shrl
mov
scas
mov
scas
jbe
jg
mov
test
scas
sub
pop
sbb
mov
pop
je
sbbb
ret
rcr
outsl
add
inc
outsb
push
xor
outsl
and
or
sub
cwtl
sbb
and
jnp
sbb
dec
push
adc
dec
xchg
fsubs
cmp
out
fsubrl
sbb
add
or
nop
xlat
or
xor
pop
push
aaa
addr16
stos
sub
cld
sbb
fwait
pusha
outsl
cld
idiv
or
scas
in
jnp
pusha
daa
add
push
repnz
dec
add
lahf
mov
ja
push
test
push
adc
and
push
fcoms
push
add
lods
xchg
mov
sbb
pop
sbb
loop
and
sbb
lock
sub
ja
popa
idivl
cmpl
or
push
push
outsl
mov
cmp
jg
mov
push
pop
enter
lods
pop
mov
popa
bound
or
imul
scas
shlb
mov
lock
cwtl
xchg
jo
cvtpi2ps
xor
sub
or
or
shl
and
test
adc
xchg
bound
cwtl
nop
push
enter
lock
add
lods
jbe
daa
xlat
or
shll
cmp
fs
test
pushf
and
or
mov
push
arpl
arpl
testl
and
add
repnz
and
add
cmp
push
sub
mov
popa
xorl
add
fcmovb
aaa
pop
ja
add
xchg
outsl
icebp
dec
xchg
add
and
or
shll
mov
cwtl
sbb
es
sub
fstl
mov
push
and
cwtl
pushf
pop
sbb
jg
addr16
add
pop
enter
in
pusha
and
cs
dec
and
jmp
sti
pop
inc
push
push
push
sbb
outsl
push
repnz
in
shlb
mov
stos
pop
cmpsb
mov
pop
daa
mov
ss
les
inc
push
es
add
fnstcw
addr16
addr16
mov
dec
xchg
add
iret
jbe
cmp
lahf
or
lods
in
scas
add
lahf
xchg
sbb
xchg
in
pop
adc
sahf
imulb
or
imul
cmpsl
cmp
rcl
andb
in
movsl
or
movsb
pusha
inc
push
cmpsl
in
pushf
and
or
jae
pop
pushf
push
dec
sub
xchg
outsl
add
or
xor
add
divl
add
dec
cmpsb
or
jns
jo
cwtl
pop
add
add
fsubrs
mov
aam
in
out
xchg
pop
add
fiaddl
lahf
mov
dec
push
inc
pop
or
cmp
test
xchg
pop
insl
or
add
dec
or
push
test
add
lock
sub
outsb
clc
pop
and
adc
xlat
and
test
mov
xchg
add
mov
rcll
jo
icebp
imul
rorb
insb
jno
inc
dec
inc
or
mov
das
pop
add
cmp
imul
in
xchg
cld
outsl
lods
pop
adc
mov
insb
xor
rclb
jnp
cmp
xlat
xor
das
in
fdivs
mov
cwtl
mov
pop
es
sbb
xor
pop
in
daa
fsubrs
push
jne
pop
jbe
loopne
fmull
lcall
push
mov
ss
out
imul
jnp
subl
filds
jl
push
insl
dec
repz
mov
xchg
lahf
cmpsl
stc
cmp
sub
mov
repz
pop
stos
fiaddl
or
cmp
into
push
inc
pusha
xchg
mov
sahf
cmpsl
stc
cmp
and
iret
sarl
cmp
jns
out
cmp
fucom
rcll
test
jns
jns
xchg
pop
lcall
adc
sahf
out
lcall
lcall
aam
mov
cmp
out
dec
call
jp
jns
out
loope
mov
aad
lcall
mov
cltd
jns
int
int3
xchg
popl
nop
ds
out
sbb
jns
out
xchg
dec
lods
sar
ds
fldl
mov
in
jns
xor
out
movsb
ljmp
repz
ficoms
cmp
repz
bnd
out
cltd
inc
jo
xlat
lcall
ja
adc
ds
mov
into
popf
hlt
dec
sahf
repz
dec
jmp
push
mov
popa
xchg
sbb
int
mov
pushf
out
repz
out
movsb
dec
rorb
jl
cmpsl
stc
push
pop
cmpsb
andl
iret
rcll
cs
xor
cmpsl
mov
sbb
xor
cmpsl
movsl
loopne
stos
sahf
shl
jns
out
lods
push
mov
repz
test
dec
repz
jl
jecxz
scas
popa
xchg
sahf
out
adc
lahf
out
jl
mov
daa
mov
ret
mov
cmpsl
stc
xor
or
jns
sti
xor
mov
cs
cmp
out
dec
and
mov
xlat
stc
cmp
repz
pop
mov
jl
cmpsl
popa
out
ret
insl
repz
iret
mov
les
repz
aas
mov
repz
outsb
test
int
sarl
repnz
shrl
iret
sarb
inc
rcl
test
loope
aam
cs
fdivs
addr16
jns
add
xor
fwait
push
rorl
pusha
jno
repnz
add
xchg
in
fildl
mov
leave
mov
mov
pop
daa
popa
ja
in
fs
and
cltd
or
iret
add
pop
shrb
aam
pop
aad
ret
cmp
aas
push
and
ja
test
inc
jb
mov
and
enter
and
femms
loope
cld
jl
inc
add
mov
xor
or
sha1nexte
jl
shlb
loop
pop
enter
pop
mov
add
jmp
pop
cmp
outsl
ret
mov
xor
cmp
mov
outsb
xchg
cs
inc
mov
inc
pop
mov
lds
mov
dec
xchg
dec
enter
fmuls
cltd
int
inc
mov
cltd
popf
mov
inc
cmp
xchg
sarb
loopne
dec
sbb
push
pop
jmp
jmp
rcr
in
mov
push
out
fdivrs
not
mulb
das
and
mov
cld
pushf
dec
ss
iret
data16
cld
decl
or
lea
cmc
mov
push
inc
testl
scas
push
pop
iret
jbe
xchg
daa
pushf
push
mov
les
into
sysenter
cmp
orb
cs
push
cmp
dec
add
ja
jb
and
mov
inc
rorl
inc
pop
jnp
aas
rclb
in
mov
push
imul
and
and
cmp
daa
fiaddl
call
xchg
adc
stos
daa
xchg
inc
in
iret
jne
push
popa
sbb
ja
adc
enter
add
mov
dec
fcomps
pushf
sbb
sub
je
xchg
inc
lock
das
or
inc
roll
rorl
jne
dec
cmp
inc
xor
and
inc
jns
stos
popa
add
add
adc
push
out
add
and
pushf
mov
jmp
jl
aaa
push
inc
repnz
pop
sbb
jp
addr16
inc
push
push
add
out
je
xchg
mov
filds
cs
aaa
leave
sub
imul
fcoml
repnz
in
je
cld
scas
push
aam
cmp
inc
inc
jnp
jnp
jnp
scas
pusha
add
mov
jnp
nop
cmovs
jl
push
or
stc
fiaddl
int
inc
add
leave
xchg
iret
enter
mov
or
push
mov
xchg
iret
enter
jl
and
inc
enter
lret
nop
or
jns
add
mov
sub
jb
fnstenv
inc
jge
jge
jge
leave
xchg
dec
mov
mov
jl
in
out
inc
mov
jl
push
add
sahf
add
add
sahf
out
pop
xor
cmp
inc
add
pop
or
loopne
jb
inc
repnz
push
jle
jb
cmp
jge
fisubl
lea
adc
scas
mov
inc
jge
xchg
cmp
int3
xchg
repnz
jb
add
or
and
fsts
push
and
daa
and
inc
jle
jle
pop
leave
and
js
daa
daa
pop
mov
daa
daa
scas
mov
fldt
loope
jmp
mov
psubw
jg
pop
out
xchg
jl
subb
xchg
dec
cs
jl
test
sbb
sbbb
jg
fcmovne
sbb
lcall
das
mov
out
xchg
inc
repnz
addr16
pop
subl
adc
inc
mov
in
mov
movsb
int3
and
add
movl
pop
push
push
xor
add
add
nop
jl
pop
andb
lock
dec
jb
sbbb
leave
push
jg
lock
sbb
pop
inc
repnz
pop
addl
aaa
jb
orl
iret
xchg
cmp
addl
cmpsl
push
sbbl
and
dec
sahf
xchg
das
mov
pushf
inc
dec
test
nop
xchg
xchg
test
jmp
das
icebp
cmp
subb
das
das
sbb
cmpb
cmp
repz
push
or
repz
repz
jne
iret
repz
orb
setbe
cmp
repz
adc
repz
adc
adc
loopne
out
pop
cld
sbb
out
sbb
or
insl
xchg
pop
xor
pop
leave
and
pop
leave
fsubrl
es
iret
add
xchg
aad
iret
leave
repz
testb
dec
into
pop
and
out
sub
inc
dec
mov
out
or
daa
int3
scas
pushf
in
sbb
rcll
add
cs
inc
mov
mov
xchg
in
lds
xchg
test
fildl
nop
push
fdivrl
jp
cmp
test
das
cld
test
test
test
push
das
push
add
and
jae
push
add
lods
mov
iret
pop
add
rorb
push
mov
push
pop
pop
test
xchg
xchg
out
add
or
cmp
jle
inc
aas
repz
push
fmuls
nop
iret
add
mov
xchg
imul
push
mov
push
jl
leave
and
sbb
pop
leave
and
mov
add
xchg
addr16
mov
adc
mov
dec
jb
mov
fs
push
cmp
mov
mov
out
enter
mov
jb
mov
jl
leave
in
clc
xchg
add
repnz
mov
mov
sub
mov
inc
addr16
js
leave
jl
xor
mov
cmp
mov
and
nop
and
ret
rorb
pop
pop
pop
sbb
xchg
add
in
outsl
loopw
mov
mov
nop
xchg
cwtl
cmp
iret
mov
pushf
fildl
stc
scas
inc
jge
push
sbb
lret
out
rorb
lea
pop
sub
sbb
or
leave
cmp
mov
jg
leave
insl
add
outsl
mov
ja
das
das
das
das
jg
xchg
das
das
das
das
lahf
mov
mov
das
das
das
mov
mov
mov
das
das
das
fisttps
mul
in
fistpl
pi2fd
in
in
or
or
in
in
or
push
add
add
add
leave
cmpsl
shl
add
and
mov
enter
mov
cmp
mov
fwait
jo
xlat
nop
push
orb
inc
and
in
in
fnstenv
nop
sub
out
pop
cld
mov
xchg
xor
das
mov
mov
mov
in
push
push
pop
or
fcmovne
outsl
mov
or
mov
rsm
lcall
out
pop
mov
ja
dec
mov
lock
in
add
xchg
xchg
out
outsb
pop
or
movups
sahf
dec
fidivs
inc
or
pop
ja
dec
or
das
popf
mov
cmovle
add
push
add
mov
fdivs
int3
add
loopne
out
pop
or
scas
repz
xchg
push
nop
es
adc
cmp
je
daa
mov
jae
and
sbb
lea
and
cld
xchg
outsl
jae
cmp
pop
out
fnsetpm(287
aad
mov
pop
inc
repnz
pop
mov
dec
xchg
mov
push
add
adc
push
mov
imul
mov
orl
mov
leave
out
les
add
out
daa
daa
daa
out
cli
add
jns
push
add
add
out
jns
pop
mov
out
sahf
or
pop
or
cmpsl
out
or
or
cmpsl
xchg
iret
vmread
jb
mov
rorb
jb
in
test
repnz
sbb
addr16
das
xchg
add
nop
and
mov
xchg
nop
lods
nop
mov
mov
jns
pop
int
aad
pop
fmull
or
in
pmaddwd
inc
pusha
xchg
cmp
mov
push
leave
or
adc
test
repnz
repnz
inc
cmp
inc
fmul
add
in
scas
out
and
add
and
xor
cmp
push
xchg
xchg
popf
ja
push
and
insb
jg
push
jb
in
mov
adcb
insl
movsb
scas
xchg
xchg
and
ficoms
inc
pop
insb
leave
add
fcmovne
xchg
xchg
xor
aas
ja
cmpsb
mov
mov
dec
gs
fcmovne
or
xchg
test
lea
xlat
lea
xchg
movsl
inc
mov
mov
cwtl
mov
xchg
in
xchg
push
jmp
repz
and
and
xchg
sub
xchg
mov
pop
imul
ja
cwtl
cmpsl
and
daa
mov
add
das
lock
fsub
out
xchg
pop
stc
xchg
xchg
xchg
xchg
xchg
add
sete
xchg
and
xchg
xor
mov
leave
or
lcall
enter
xchg
lea
mov
out
in
fisttpll
or
and
xchg
mov
adc
xor
mov
xchg
dec
xchg
push
xchg
pusha
xchg
push
xchg
xchg
mov
mov
add
push
add
pop
in
xchg
inc
push
adc
mov
cmp
mov
xchg
cmp
addr16
jb
mov
lock
sub
cmp
jl
mov
inc
xor
jbe
cmp
sbb
daa
inc
mov
jle
push
es
rcl
xlat
xchg
xlat
jl
int
out
fdivl
fstpl
add
inc
ss
cmc
xchg
fimuls
std
das
add
add
or
xor
and
push
daa
cmp
cwtl
scas
dec
cwtl
imul
cwtl
push
xchg
pushf
fsubrl
scas
iret
mov
mov
ja
ljmp
clc
or
andl
cmp
push
push
pop
fwait
pop
mov
add
mov
pop
push
faddl
jl
les
or
leave
push
cs
jns
sbb
lcall
jns
jns
lcall
jns
jns
aas
lcall
outsb
fnsave
pop
lcall
dec
dec
dec
dec
or
pop
push
dec
dec
dec
dec
add
out
dec
sbb
ja
jns
out
jg
xchg
out
xchg
pop
lahf
daa
daa
dec
and
cmp
repz
iret
lcall
mov
xchg
sbb
fwait
mov
out
push
dec
outsl
push
push
jmp
push
pop
fwait
pop
lar
in
xor
outsl
fwait
rcl
cmp
mov
add
mov
push
sub
dec
es
mov
xchg
xchg
xchg
in
cmc
std
dec
mov
push
add
add
mov
push
leave
add
or
addb
mov
out
sahf
aaa
cmp
pushf
pop
pushf
push
add
cwtl
dec
dec
jns
xlat
pushf
aas
dec
jnp
leave
dec
mov
iret
cmp
mov
push
add
cmp
sti
daa
inc
inc
stos
inc
jg
or
or
into
xor
adc
xchg
popf
sub
inc
mov
dec
popf
push
popf
pusha
popf
imul
popf
sbbl
push
mov
cmpsl
rorl
xchg
adc
popf
fsubl
xchg
iret
adc
movsb
jmp
inc
repnz
sbb
iret
and
icebp
in
mov
cmp
inc
rorb
inc
sahf
sbb
push
scas
outsl
sahf
jg
sahf
sbb
jb
mov
test
lea
sahf
out
jb
rcrl
nop
iret
enter
loope
pshufw
lahf
aaa
or
pop
lahf
fs
cwtl
mov
lahf
outsl
mov
sbb
nop
xlat
and
cmpsb
or
mov
dec
cmpsb
dec
scas
out
push
mov
dec
pop
fs
pop
test
mov
ja
xchg
ja
stos
mov
mov
lahf
mov
enter
jb
push
mov
sub
mov
mov
cmpsl
cmpsl
cmp
leave
dec
dec
dec
push
mov
mov
cmp
pop
js
xchg
out
jl
add
movsl
fmuls
dec
lods
mov
xchg
test
loopne
jl
xchg
stc
add
mov
js
mov
mov
iret
cmove
mov
jb
jp
repnz
daa
addb
xchg
push
dec
dec
dec
sahf
add
mov
out
or
iret
repz
rorb
or
repz
ljmp
repz
add
stos
in
and
in
repnz
push
ds
push
loopne
pop
mov
jb
push
push
pop
test
adc
lods
mov
dec
ds
fdivr
cmpsb
lahf
add
stos
fisubrs
cmp
popl
mov
pop
str
js
and
mov
inc
mov
out
mov
and
js
xlat
xchg
add
cltd
dec
ds
mov
jns
dec
cs
iret
jle
xlat
leave
jae
cmp
fbstp
mov
push
jb
or
and
xor
cmp
add
jb
dec
push
jbe
stc
lahf
jle
sete
jo
pop
stos
push
or
pop
or
add
xor
or
lods
lods
xorl
mov
or
daa
outsl
stos
pop
or
add
fmul
xchg
cmp
movsl
and
daa
cmp
shld
movsl
test
jl
push
or
insb
movsl
pop
jo
mov
jl
pop
mov
je
out
add
cs
lods
pop
mov
mov
push
or
or
les
fsubl
movsl
addb
inc
cmp
adc
jb
cmpsb
xor
aaa
and
inc
add
dec
cmpsb
push
daa
pop
insl
xchg
cmpsb
hlt
mov
jnp
xor
scas
pop
xchg
pop
inc
lcall
imulb
ror
leave
xchg
cmpsb
bound
add
scas
cli
inc
ja
mov
mov
or
cld
repz
inc
sahf
pop
cmpsl
adc
mov
cmpsl
xchg
jb
cmp
dec
ja
insb
jo
out
jbe
js
decl
leave
lods
fwait
lidtl
add
cwtl
es
repz
mov
cmp
sysret
or
mov
mov
cmpsl
test
cmp
pop
test
push
cli
push
mov
dec
ja
inc
push
daa
fs
mov
and
mulb
enter
test
into
hlt
loop
dec
test
push
test
xchg
and
test
test
push
add
jno
jns
mov
test
xchg
ss
adc
or
mov
cmp
pop
mov
das
lods
add
dec
mov
les
xlat
sarl
xchg
iret
pop
nop
mov
ljmp
repnz
cli
lar
or
adc
adc
inc
push
mov
or
mov
dec
and
mov
scas
cmp
xchg
pop
cmp
cmp
imul
cmp
cwtl
mov
mov
mov
cmpps
rcr
pop
xchg
dec
iret
in
fcmove
cli
pop
mov
stos
sbb
pop
push
xchg
xchg
aam
test
test
xchg
stos
sbb
dec
sahf
out
xor
adc
dec
jecxz
in
push
push
pop
punpckldq
filds
mov
stc
loopne
pop
aaa
lea
pop
push
out
stos
xchg
out
sbb
hlt
leave
repz
cs
add
pop
call
mov
repnz
sti
stos
add
xchg
pop
adc
lods
pop
xchg
cmpsl
aas
pusha
dec
push
das
xor
pop
or
add
pop
sbb
aam
or
and
adc
lahf
fcmovne
leave
enter
data16
bswap
repz
jbe
jle
xchg
mov
or
xchg
stos
insl
and
mov
pusha
mov
testl
ja
fmull
cmp
lods
ja
mov
cltd
popf
dec
xor
cs
imul
jbe
cltd
xchg
cmp
mov
cmp
xchg
aam
fdivr
inc
js
or
cmpsb
mov
mov
inc
outsl
dec
in
jno
pop
push
pop
lods
in
sahf
pop
pcmpgtb
int
fisttpll
add
or
enter
jl
xchg
int
push
mov
int3
mov
or
nop
mov
pop
add
daa
or
out
jb
cmp
xor
cmpb
mov
or
sahf
ja
mov
push
add
dec
sysret
inc
dec
scas
es
xchg
pushf
scas
push
scas
mov
stc
fcoml
xor
xchg
out
cmp
rolb
pusha
pushl
leave
xchg
jl
or
mov
mov
scas
inc
jb
and
scas
cld
mov
sub
add
in
aaa
decb
push
pop
mov
dec
fistpl
ja
dec
cs
mov
adc
rcrb
fsubl
loopne
call
lock
push
cmp
in
add
fs
fdivrs
mov
mov
lsl
iret
add
iret
leave
repz
test
mov
lret
pop
mov
inc
loopne
mov
add
mov
test
and
add
xor
dec
sahf
out
add
jo
rorb
add
or
push
mov
scas
or
pop
pcmpeqb
in
add
dec
dec
pushf
movsb
lods
lfs
jns
out
or
xchg
out
int3
aam
outsl
fdivl
loopne
pushl
pushf
jecxz
in
pop
mov
movhps
dec
mov
jl
xchg
inc
mov
dec
sahf
out
add
pop
bound
iret
mov
orl
mov
push
or
subb
paddsw
in
into
fsubp
pcmpgtb
leave
leave
lock
adc
in
cmp
in
in
test
in
in
sti
scas
mov
aaa
leave
repz
inc
push
dec
jns
xchg
fistl
jne
sbb
sbb
xchg
jl
jp
mov
and
pushf
push
je
push
add
mov
inc
ds
sub
mov
inc
mov
xchg
mov
int3
xchg
sbb
rcll
mov
faddl
mov
adc
in
fs
lock
mov
repnz
mov
mov
mov
mov
inc
repnz
mov
je
mov
sbb
jb
mov
mov
test
cmp
cmp
mov
or
iret
or
rcrb
iret
aam
lahf
fdivl
lahf
cltd
pop
adc
shrb
xchg
lahf
cmpl
insl
pop
push
scas
mov
add
insl
pop
pmaxub
lret
lret
lret
lret
pop
mov
mov
mov
mov
lret
lret
lret
jl
xchg
lret
lret
lret
lret
mov
mov
mov
lret
lret
lret
ret
mov
mov
mov
lret
pop
call
mov
mov
push
mov
iret
repz
pop
sub
xor
cmp
iret
repz
inc
and
repz
repz
and
repz
daa
jne
orb
sahf
outsb
repnz
xchg
cvttps2pi
mov
xor
shll
dec
rcrl
fptan
cmp
out
das
loope
jmp
iret
jae
add
stc
test
pop
es
mov
add
jns
dec
add
add
pop
ficomps
leave
ret
xorb
nop
mov
in
ja
cld
mov
add
cltd
dec
ds
out
psadbw
iret
fs
mov
fs
add
dec
jg
xchg
aam
dec
gs
mov
jb
out
mov
and
testl
leave
jnp
push
sbb
or
daa
mov
out
cmp
inc
push
iret
jae
cmp
pop
adc
repnz
jge
mov
push
sahf
test
iret
jae
sbb
iret
jae
sbb
cmpsl
jp
testb
pop
or
pop
pop
mov
and
lds
in
xchg
and
pop
mov
leave
insl
push
sbbl
out
mov
in
aas
inc
dec
out
in
sahf
xorps
pop
addr16
adc
popf
cmp
ja
jg
popf
iret
jae
jb
fincstp
sbb
outsb
daa
mov
pop
mov
pop
dec
dec
dec
dec
cmp
out
jns
mov
jns
mov
aad
dec
dec
sahf
sub
add
jecxz
repz
sub
and
int
pop
pop
mov
daa
cmpl
divps
jns
xchg
mov
movsb
pop
pop
sahf
pop
mov
mov
mov
fxch
repz
loope
jmp
cmp
stc
push
adc
rorb
iret
or
adc
add
sbb
sbb
in
push
into
sub
pop
inc
ss
and
sbb
enter
push
cltd
inc
pop
or
ror
in
fisttpll
add
mov
insb
je
jl
pop
test
sbb
bound
outsb
daa
iret
cmp
mov
mov
mov
push
lods
jl
mov
repnz
lar
pop
or
push
xchg
xchg
cmp
mov
inc
dec
push
xchg
jb
xchg
pop
dec
js
fmull
ja
push
add
mov
pushl
push
ja
pop
leave
jae
cld
push
ret
outsl
mov
cmpps
jl
xchg
lret
inc
jb
in
dec
sqrtps
jl
jb
inc
jl
test
pop
pushf
movsb
xlat
lods
sahf
xchg
xchg
out
mov
or
ret
dec
fists
sub
mov
adc
adc
add
and
xchg
mov
leave
sub
pop
cmpsl
dec
cmp
xchg
xchg
push
pop
xchg
in
jb
mov
sahf
out
add
inc
int3
iret
lret
lahf
shrl
daa
iret
add
jecxz
pop
repz
cmc
in
add
or
inc
dec
mov
int
les
les
outsb
and
cmovbe
mov
fs
les
data16
leave
rep
pop
jbe
or
mov
movsb
pop
and
mov
in
mov
mov
sub
cmp
cltd
dec
in
hlt
movsb
xchg
cmp
cld
add
js
mov
lds
aaa
ja
pop
leave
jae
les
in
dec
outsb
punpckhdq
jp
ret
cmpsl
push
leave
mov
popf
pop
mov
pop
push
ja
loopne
sbb
iret
das
add
scas
mov
das
or
pop
sbb
and
add
dec
cmp
aaa
or
repnz
add
jmp
xchg
xchg
add
jae
les
movsb
out
fcmovne
or
or
sahf
out
outsl
push
add
gs
sahf
sub
xor
aas
in
in
dec
push
pusha
imul
rcr
in
movl
pop
pop
mov
mov
pop
into
fld
in
out
pop
pop
pop
pop
cli
movl
pop
es
pop
bswap
leave
leave
dec
sbb
leave
leave
leave
sbb
pop
push
cmp
leave
leave
adc
ja
jb
push
pop
push
jns
xor
mov
xchg
jns
out
xor
jns
out
shlb
sahf
out
sahf
cmp
cmp
cmp
and
cmp
leave
or
push
ds
sbb
inc
cs
fwait
cmovb
cmp
jns
out
dec
cvtps2pd
inc
in
sahf
out
dec
jnp
xchg
leave
leave
in
xchg
pop
pushf
cmpsl
mov
fwait
cmp
mov
xchg
xchg
xchg
xchg
rcr
jmp
mov
fisttps
lret
ror
mov
lret
mov
lret
push
aas
mov
ror
iret
je
jg
mov
les
mov
enter
mov
ror
enter
das
xlat
lret
iret
in
lret
jb
clc
lret
push
lret
sbb
iret
repz
adc
cmp
repz
inc
sbb
repz
repz
sbb
jno
repz
sbb
xchg
sahf
ja
cmp
popf
test
and
and
repz
fcompl
fucomip
sub
es
mov
or
leave
repz
and
and
sub
cmp
repz
aaa
xor
jns
fcmovne
dec
pop
pop
arpl
sahf
out
cmp
test
cmp
lcall
jns
mov
mov
fmull
paddusb
repnz
bnd
das
std
push
inc
or
adc
xchg
iret
enter
push
int
mov
cmpsl
push
int
int
paddusw
es
pop
jg
xchg
jns
out
push
popl
xchg
or
leave
push
repnz
mov
fmulp
push
add
rolb
cmp
fiaddl
stc
andb
xor
inc
je
enter
hlt
scas
daa
adc
jb
loopne
sub
xor
sahf
out
sbb
into
inc
push
add
daa
dec
aaa
jns
clts
pop
pusha
inc
sub
daa
push
pop
adc
into
push
xlat
pop
out
mov
cmp
ret
lret
fidivs
daa
iret
add
jecxz
xchg
insb
loopne,pt
mov
iret
jb
insb
inc
aas
iret
push
iret
push
iret
cs
cmp
iret
ds
pop
dec
xor
jg
iret
jb
fldl
mov
pop
jb
jge
and
xchg
iret
out
sahf
iret
leave
sub
mov
bswap
leave
leave
leave
leave
aad
jmp
jns,pn
out
rclb
or
pop
cmp
repz
and
adc
sahf
out
inc
push
sbb
pop
aaa
jns
out
sbb
cmp
iret
dec
sbb
jp
and
ja
nop
fwait
push
and
fmull
mov
daa
sbb
daa
call
sub
fdivs
cmpsl
sarl
repz
push
add
pop
xchg
out
gs
add
jb
aad
and
iret
test
iret
jae
jb
lret
loopne
out
daa
jmp
push
neg
leave
idivl
rcrb
syscall
or
sahf
or
pop
shlb
rolb
push
mov
inc
rorb
pop
shlb
repnz
adc
pop
in
sahf
out
sbb
and
push
push
mov
movq
and
push
dec
sahf
ja
push
and
repz
and
es
adc
sub
loopne
pop
sub
sub
add
pop
enter
rcll
push
inc
das
jae
push
lods
sub
sub
fldt
mov
add
fsubrp
xor
dec
rcl
jle
mov
add
add
stos
lgs
iret
repz
rorb
add
cmp
pop
ja
sbb
not
out
sahf
xchg
lcall
add
das
out
dec
sahf
add
fucom
jns
or
sysretw
in
in
es
jno
aam
fsubp
in
aam
aam
push
adc
adc
xor
sub
aam
idivb
repnz
aad
mov
aad
push
mov
inc
dec
mov
fstp
dec
aad
aad
in
and
add
add
mov
iret
jns
pop
and
add
mov
out
xchg
cltd
or
in
in
mov
mov
cmc
pushf
iret
adc
aad
rep
mov
out
out
cs
negl
repnz
scas
dec
ss
icebp
pop
lahf
sbb
pop
cltd
push
mov
imul
jns
jg
push
mov
xchg
or
stos
or
rcrl
int3
xlat
psrad
repnz
in
clc
add
push
out
sahf
ja
push
adc
adc
sahf
push
cmp
lahf
xlat
in
jbe
mov
das
dec
jno
out
jns
jl
push
xchg
sahf
xchg
and
out
daa
mov
and
out
jns
aam
sub
aaa
bnd
cmc
sub
fmuls
push
fmulp
jnp
sub
sub
xor
iret
cmp
dec
push
xor
repz
fsubrl
inc
pop
outsb
jns
and
fcmovne
test
pop
sub
xchg
or
call
dec
ret
mov
mov
and
xchg
ds
aas
cmpsl
inc
push
xchg
push
test
lret
push
inc
ljmp
mov
aas
inc
push
push
pop
push
add
sarl
inc
inc
aas
sub
inc
into
pop
inc
mov
sub
jbe
aaa
outsl
in
pop
pop
aaa
cmp
push
add
cmp
in
add
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
pop
dec
dec
sahf
out
sub
pushf
cmpsl
mov
into
aas
xlat
mov
data16
mov
andb
add
pusha
sbb
jmp
repz
repz
sbb
out
lcall
fcompl
aam
int3
enter
out
sarb
cmp
lods
movsb
cwtl
nop
mov
push
js
fs
push
jns
out
inc
inc
cmp
sbb
pushf
ret
or
push
test
push
dec
or
add
test
xchg
add
mov
xchg
loop
mov
push
aad
add
pop
push
enter
add
add
movsb
add
in
addr16
cmpsb
fisttps
mov
cld
mov
out
jb
jle
test
shll
fs
decb
inc
mov
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
mov
xor
jle
rcr
fsubp
stc
jb
jle
divb
adc
jbe
mov
imulb
sbb
add
or
adc
push
clc
jle
out
jp
cli
inc
aaa
push
push
pusha
imul
add
popa
pop
das
mov
add
add
cmp
mov
loopne
mov
or
out
out
adc
adc
jo
inc
sbb
dec
repz
in
sbb
je
dec
push
sub
xchg
pop
scas
enter
mov
jmp
clc
ljmp
jns
jp
push
cmp
fcoml
push
test
sbbb
pop
rorb
in
into
xchg
push
add
pop
and
inc
or
or
pop
iret
fmuls
test
push
or
add
add
test
push
xorb
push
jnp
icebp
addr16
push
push
mov
inc
je
adc
jo
rcl
pop
aas
pop
daa
mov
pop
aad
ffreep
and
iret
call
leave
cmpsl
aad
jg
out
addr16
cmc
mov
aas
inc
sub
push
add
and
xchg
andl
daa
xchg
es
xor
add
mov
sbb
icebp
clc
add
lock
and
push
and
gs
cld
lock
add
neg
push
pop
adc
fsubl
das
push
mov
hlt
or
adc
sahf
negl
in
enter
cmp
repz
mov
cmp
repz
movsb
and
and
and
jl
cmp
popa
adc
mov
lods
cmpsb
outsb
rcll
inc
out
xor
and
dec
jg
mov
incl
xorl
pop
iret
repz
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
mov
pop
ja
xor
xor
mov
jae
adc
push
dec
insb
cmpsl
in
popa
jne
add
dec
inc
pop
repnz
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
lahf
pop
int3
add
sti
aas
jno
or
mov
pop
fs
dec
decl
cmc
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
jmp
add
aas
xor
aad
mov
std
std
into
popa
test
ja
ljmp
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
std
incl
push
mov
xchg
aas
and
loop
mov
jg
aas
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jmp
xchg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
inc
push
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
sbb
pop
pop
inc
in
inc
aaa
rolb
inc
push
dec
movsl
jb
cmp
jnp
cmpsl
fbstp
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
mov
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
lcall
pushl
filds
or
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
decl
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivs
shll
jmp
outsb
xor
mov
sar
incl
inc
in
add
pop
dec
or
cmp
add
daa
adc
pop
call
or
and
and
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
cli
mov
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fbld
fbld
out
mov
jns
imul
andl
shrb
rolb
ja
int3
add
mov
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
scas
fdivrp
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
incl
adc
mov
jnp
sbb
xchg
or
out
fdivrl
decl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
mov
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
sub
push
pusha
rorb
imul
scas
fcompl
fstps
add
or
inc
adc
pusha
mov
test
jg
mov
jmp
mov
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
cli
pushl
add
push
sub
mov
or
sbb
add
sub
inc
pop
xorb
xor
jo
pusha
push
jmp
repz
add
cmp
push
iret
repz
xlat
fcomp
fcmovu
fdivrl
repz
fsubp
jecxz
iret
repz
in
jmp
repz
in
repz
cmc
repz
repz
clc
stc
cli
adc
cld
pop
adc
add
inc
jecxz
dec
adc
test
xchg
or
adc
cmp
mov
push
inc
jmp
jbe
xchg
xchg
jbe
vfrczsd
icebp
inc
insl
bound
inc
int
in
aaa
dec
popa
je
push
fists
and
cmp
in
cmpsl
pop
inc
jno
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
and
xor
popa
icebp
sub
insl
pop
insb
imul
es
imul
dec
movb
inc
or
push
inc
jp
jecxz
aam
and
sbb
shll
or
push
fildl
sbb
jbe
dec
in
or
pop
shll
mov
je
inc
inc
or
xor
adc
or
aaa
sbb
test
xor
insb
popa
jns
push
adc
insb
or
mov
stc
popa
xchg
cmp
ret
pop
add
aas
inc
add
inc
aam
push
aas
dec
mov
pop
add
cltd
and
arpl
insb
daa
int
sbb
inc
daa
pop
inc
aas
enter
mov
xchg
push
xchg
shl
sbb
inc
pop
into
out
std
icebp
je,pn
jo
inc
inc
add
ds
cmp
scas
add
pop
int
mov
aas
int
push
dec
cmp
inc
mov
insb
mov
sbb
mov
aam
ds
outsb
jne
andl
dec
jge
jnp
pop
aad
xor
xor
or
aad
arpl
add
addr16
pop
fwait
aaa
jbe
xchg
into
pop
jo
rcr
daa
popf
pop
inc
cmp
mov
adc
mov
inc
ret
add
addr16
xchg
and
pop
imul
mov
cmp
mov
inc
sbb
xlat
inc
add
push
mov
xchg
out
jb
sub
cmp
or
add
popa
dec
popa
jo
lahf
gs
lahf
push
outsl
outsl
test
mov
ret
xlat
aam
jno
lds
bound
sub
sub
in
nop
test
pop
cmp
test
push
arpl
cmp
mov
add
push
dec
sub
outsl
insb
jns
subl
das
inc
jb
push
fwait
sub
gs
pop
sahf
inc
outsl
arpl
insb
paddw
bound
cmpsb
jbe
lods
ja
inc
jbe
xor
jg
pop
daa
es
dec
xor
imul
les
das
xor
inc
shlb
mov
inc
repz
movsb
sbb
and
and
push
and
dec
dec
lods
xor
cmp
cwtl
pop
inc
dec
and
cs
dec
add
adc
add
inc
cwtl
sbb
inc
and
dec
sbb
sbb
cmp
or
sub
inc
dec
cmp
je
jns
arpl
mov
cmp
pop
pusha
in
pop
in
xchg
insb
insl
aaa
push
and
push
pop
lret
sub
and
mov
test
or
mov
add
add
sub
add
pop
scas
fsubr
cmova
add
cmp
sahf
fdivr
loopne
adc
dec
add
or
add
pusha
add
fistl
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
nop
add
add
pop
add
in
add
adc
add
js
jno
mov
loopne
add
jb
incl
jge
call
xor
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
fiadds
mov
and
cmpl
aaa
daa
pusha
xchg
sbbb
pusha
add
or
test
add
jne
or
adc
pop
dec
rorb
and
add
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsl
decb
lods
adc
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
frstor
fists
xchg
and
pushl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
mov
mov
inc
dec
or
lock
cmp
popa
mov
xchg
sti
push
in
and
fistpl
jg
inc
cmc
push
xor
dec
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
adcb
mov
or
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
fdiv
lahf
std
movsl
jecxz
pop
mov
lcall
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fimull
ljmp
in
mov
orb
int3
lcall
fs
scas
mov
in
js
pop
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
in
jmp
and
lea
pop
cwtl
int
arpl
push
out
or
mov
mov
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
idiv
stc
xor
hlt
and
xchg
jmp
sbb
xchg
xchg
add
pop
jb
mov
mov
mov
sub
xor
mov
jl
rorl
adc
fcmovnu
decb
hlt
push
add
stc
loope
mov
sar
andl
aas
pop
push
mov
icebp
testb
mov
scas
test
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
pop
aam
mov
dec
subl
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fistl
dec
cli
fadd
or
mov
nop
enter
cld
call
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
repnz
add
ret
fcmovu
ds
cmpsl
scas
popa
fucomi
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
incl
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
mov
pushl
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
test
add
jg
jle
jg
mov
jmp
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
orb
scas
les
cli
adc
and
lahf
iret
in
fistpl
lret
mov
das
pop
cld
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
add
or
cld
inc
or
pop
jg
add
out
pop
mov
jg
mov
aad
test
mov
jle
iret
push
jbe
push
sbb
incl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
repnz
jg
sarl
adc
loopne
sar
orl
pusha
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
std
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
and
shl
cld
mov
adc
jmp
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pop
mov
call
fisttpl
sub
jmp
lea
jp
jnp
jecxz
call
inc
lds
push
pop
adc
imul
or
inc
pop
xor
sar
decl
sbb
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
fwait
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
add
insb
test
aas
repz
outsl
mov
mov
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
lcall
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
insl
and
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
lods
movsb
xchg
mov
repnz
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
cltd
add
and
mov
or
sti
sarb
fxtract
mov
fbld
imul
ljmp
sub
xlat
insl
mov
and
fs
mov
mov
cli
and
dec
test
cli
cmp
xchg
sub
adc
mov
and
push
sbb
pusha
pop
call
lahf
dec
loop
xor
loope
fldenv
stos
lea
fbstp
aas
aad
fdivr
inc
xor
cmp
insl
mov
adc
pop
lcall
push
test
incl
adc
push
dec
sub
mov
rcl
mov
add
out
mov
inc
fwait
rorl
xchg
and
fwait
sub
or
pop
sub
add
lcall
pop
icebp
pusha
sarl
jecxz
ret
fistps
inc
stos
inc
jnp
call
add
rcrl
pushl
mov
adc
loope
sbb
lcall
dec
pop
mov
pushl
push
adc
cmc
loope
scas
xchg
movsb
aas
rorl
cltd
sub
pop
sbb
mov
lcall
jns
out
jle
inc
mov
pop
mov
pusha
ret
jmp
sti
jo
out
ljmp
sbb
je
mov
cs
shrb
dec
inc
jecxz
sbb
xchg
lods
loope
jg
movb
call
icebp
sub
push
movsl
pusha
add
mov
decl
push
aam
scas
jne
fidivs
es
repz
pop
leave
es
nop
lock
cmp
dec
stos
movb
pushl
aaa
fmull
sbb
jecxz
fs
loopne
inc
fildll
pusha
add
ljmp
call
rclb
sbb
mov
outsl
pop
insl
sbb
fwait
fs
fcmovne
scas
sti
mov
lock
cli
mov
popa
jo
aam
jno
mov
jmp
cli
push
jmp
pop
leave
jp
cli
and
imul
loopne
leave
xor
mov
inc
jo
push
cld
incl
rorl
sbb
mov
add
adc
pop
mov
addb
mov
in
clc
arpl
push
lea
pop
fcompl
fwait
in
push
xchg
dec
popa
ds
cld
add
rorb
loop
mov
lock
fidivs
inc
out
loope
clc
scas
jno
dec
mov
xchg
int
das
jbe
xor
xchg
mov
movsl
rcr
ljmp
sahf
iret
adc
fstps
push
movb
jecxz
or
or
lods
loopne
jmp
in
data16
mov
addb
ljmp
push
cmp
ja
push
out
push
stos
pop
mov
mov
daa
js
leave
cmpl
inc
aam
fmuls
subl
mov
decl
ficoms
lods
xchg
enter
mov
insb
test
ja
stos
jge
sub
jae
pushl
push
js
mov
dec
jo
cli
jae
xchg
sbb
out
mov
call
xor
pop
jno
icebp
mov
mov
out
insb
je
adcl
dec
in
or
pusha
ljmp
add
xlat
or
jmp
hlt
push
aas
orl
push
shr
std
jmp
jno
and
sub
adc
dec
cmp
xchg
subl
scas
push
add
mov
imul
xor
shrb
pop
mov
mov
aas
pushf
mov
sbb
inc
std
xchg
jp
ja
cli
pusha
jg
shrb
popa
movsb
ss
lcall
xchg
arpl
outsb
cmpsb
subb
addr16
push
mov
mov
or
pop
push
repz
xor
movsl
fwait
mov
inc
push
jne
pop
popl
ret
stc
adc
cmp
pushl
cmp
mov
mov
repnz
inc
xchg
out
sub
push
mov
cmova
dec
add
xor
mov
nop
std
push
cmc
in
adcb
fwait
add
mov
aaa
jl
out
hlt
sub
rorl
mov
fisubrs
call
test
adc
inc
sti
call
into
shr
mov
mov
sub
pop
jb
jg
ljmp
sbb
lcall
or
test
mov
mov
je
stc
out
out
mov
fldt
call
inc
out
ficoml
imul
pop
int
dec
rcrl
adc
mov
pushl
ret
mov
mov
in
dec
adc
jno
mov
fcomps
insb
clc
inc
sbb
dec
cld
lret
push
xchg
ljmp
push
lret
pop
jns
cmp
jge
xchg
test
call
add
fmull
mov
jae
insb
imulb
test
mov
scas
and
aad
and
cmp
fdivs
and
push
pushf
dec
add
int
and
iret
test
cmp
pusha
hlt
lcall
pop
call
push
or
movsl
push
sbb
xor
jae
enter
jmp
pop
push
sahf
fidivs
add
fmul
jns
aaa
cmpsl
ljmp
rcrl
test
pushl
mov
push
cli
js
subl
cmp
sub
inc
ss
mov
fmulp
push
sbb
hlt
orl
repnz
shll
shrb
pushf
adc
es
insb
pop
cltd
popf
and
hlt
add
sahf
fimull
mov
push
decl
dec
fiadds
adc
lret
out
inc
rcll
je
jl
ja
cwtl
test
in
and
jnp
dec
in
sub
rcrb
gs
loop
in
insb
sub
sbb
jne
loope
dec
call
and
andb
rolb
nop
sahf
lods
stc
push
fwait
add
and
in
fsts
mov
xchg
pop
daa
push
adc
movsl
rorb
sub
adc
into
lods
adc
ljmp
lret
iret
mov
inc
mov
mov
loopne
aas
and
push
mov
sub
icebp
das
cmp
ficoml
mov
popf
ja
fwait
xchg
pop
out
cli
stos
int3
pushl
cld
push
pop
cmp
xor
aas
cli
inc
cmp
ja
xor
pushl
xchg
mov
and
xlat
mov
mov
mov
mov
mov
dec
mov
mov
mov
shr
stos
cmp
pop
sub
loopne
mov
cld
mov
scas
sbb
shll
xor
ljmp
cmpsb
inc
cmpsl
dec
sub
lcall
and
call
fildll
in
jg
mov
add
mov
stos
sub
pop
fs
fdiv
std
test
sub
fadd
sbb
mov
decl
lods
hlt
inc
or
pop
mov
shll
push
bound
aad
jbe
jmp
adc
push
iret
xlat
cmpsl
or
or
stc
add
push
adc
sbb
decl
hlt
mov
pushf
mov
divb
xchg
xor
test
adc
or
dec
push
adc
push
nop
fdivr
decl
mov
rclb
jle
iret
jae
jnp
aam
push
mov
inc
inc
or
orl
jg
mov
xchg
dec
add
jecxz
call
fsin
scas
add
pop
outsl
mov
adc
push
call
lea
inc
pop
nop
icebp
int3
pop
das
sar
stos
sbb
rclb
fisttps
data16
fsubl
mov
mov
decl
jbe
into
ljmp
out
dec
lret
mov
mov
cmp
add
jmp
enter
xor
in
in
dec
sub
mov
out
push
ja
xor
cmpsb
imul
and
jg
jmp
lahf
sub
mov
mov
mov
fnstcw
std
subb
push
mov
xor
xchg
fwait
mov
mov
push
cli
push
insl
callw
pushf
dec
out
inc
mov
test
or
icebp
mov
inc
js
je
or
inc
pop
jo
jle
out
pop
add
dec
add
mov
mov
inc
fimuls
out
repnz
mov
xlat
pop
shlb
jne
ljmp
sub
in
gs
jne
cltd
mov
jo
decl
dec
mov
dec
pop
lcall
data16
push
jg
incl
inc
mov
movsb
gs
jno
fidivl
into
pusha
dec
xlat
stos
dec
mov
inc
and
shrb
dec
or
cld
out
sti
sahf
push
dec
xchg
jns
xchg
mov
jle
cmpsb
lahf
rcrl
incl
sti
jg
imul
add
je
cltd
repnz
rolb
fildl
js
leave
loopne
xchg
fdivrl
imul
int3
movsb
shll
mov
sbb
clc
cwtl
clc
sub
pushl
add
push
outsb
int
pop
testl
xchg
sbb
pop
mov
or
and
ds
gs
lods
int3
dec
pop
addr16
sbb
mov
fcmovnb
jns
mov
jmp
mov
bound
int
xchg
movsl
daa
cmp
repnz
fs
cmc
mov
or
fwait
or
fsubrp
xchg
sbb
cmp
shll
call
xor
xlat
clc
pop
stos
in
cli
loop
nop
lds
inc
sub
pop
sbb
pop
xchg
cmp
call
mov
mov
add
push
scas
dec
dec
pushf
icebp
icebp
in
jae
mov
jg
xchg
pop
xchg
cmpsl
decl
test
lea
mov
xchg
pop
movsb
das
lock
lret
and
mov
ds
push
dec
bound
sbb
xchg
repnz
ljmp
clc
xchg
xor
and
cld
push
ljmp
cli
jg
xor
xchg
jb
aas
or
push
jl
mov
add
in
scas
push
cmp
outsb
jmp
pop
add
lock
cmpl
lods
add
cld
pop
lock
jmp
rcl
mov
sahf
add
mov
sti
dec
pushl
push
outsb
xor
xorl
ret
icebp
sub
mov
repz
js
cmp
ljmp
mov
and
sub
lret
repz
dec
lcall
ljmp
lret
push
sub
xchg
lret
pop
addr16
cwtl
mov
das
fidivs
jge
in
adc
pop
fsubl
xchg
ret
mov
pushl
dec
movsb
push
or
mov
loopne
jno
push
pushl
sbb
xor
jns
pop
in
mov
in
fwait
sbb
shrb
mov
nop
sbb
lock
jmp
mov
xor
test
pop
testl
pop
cs
inc
mov
js
mov
push
lret
fwait
sbb
pop
mov
xchg
fwait
and
cmp
push
enter
sbb
shlb
mov
leave
or
ret
sub
pop
push
cmpsb
cli
and
mov
dec
push
fcomip
call
inc
addr16
repnz
fsubrs
pop
fwait
mov
dec
in
cld
scas
imul
lods
lds
adc
jp
ja
xor
jbe
mov
jmp
repz
sub
aas
adc
sbb
dec
mov
xor
rol
adc
lcall
addr16
inc
daa
sahf
sub
xchg
fstl
push
andb
call
popf
aas
pop
jns
mov
clc
and
or
fistpll
dec
lds
mov
ret
test
pop
out
push
mov
adc
jle
push
test
nop
insl
popa
ljmp
out
mov
lret
pop
ret
inc
icebp
leave
icebp
lods
incl
out
sbb
adc
rolb
inc
jmp
icebp
clc
xchg
and
sbb
int
add
pop
hlt
jmp
lahf
push
cmp
inc
decl
ror
xchg
loopne
jae
std
pop
mov
inc
test
pop
pushl
sub
push
aad
cmpsl
lock
adc
add
loope
divl
out
ss
push
add
ljmp
aas
or
cltd
mov
sub
mov
add
mov
adc
repz
adc
dec
in
and
insb
sub
sbb
xlat
shlb
ret
cmp
adc
push
int3
xchg
cmpsb
jmp
xchg
das
mov
xchg
pop
and
lcall
xchg
pop
test
stos
xchg
cmp
xchg
pusha
xchg
add
pop
mov
dec
ds
dec
xor
shl
push
mov
xchg
cmc
lods
movsl
mov
mov
fnstcw
dec
ljmp
aam
lds
cmpsb
cmp
pop
fisubrl
loopne
sbb
mov
sahf
in
inc
movsl
cmp
fs
push
stc
jno
std
in
mov
scas
aam
push
lods
call
xlat
jb
inc
icebp
call
decl
push
and
shll
mov
sti
ret
or
xchg
xchg
cmp
arpl
cmp
xchg
mov
incl
scas
pop
cwtl
stos
jnp
mov
mov
loop
xchg
or
xor
into
mov
cld
xor
test
xor
insb
jbe
dec
incl
cmp
insl
es
mov
xor
sbb
mov
popa
jle
push
mov
push
dec
jne
xchg
lcall
sbb
add
mov
jbe
test
lcall
jmp
push
sbb
insl
clc
pop
and
xchg
sub
stos
ds
lret
fs
scas
lret
mov
jns
push
mov
mov
int3
aad
addr16
xor
xchg
mov
mov
xchg
or
ja
imul
mov
sbb
jl
out
xor
and
add
mov
xorb
scas
and
add
negb
lds
addb
scas
cli
incl
in
sbb
mov
or
mov
arpl
mov
iret
mov
decl
mov
jl
add
mov
fimuls
lahf
ret
mov
lcall
rcpps
mov
pop
pop
cmpb
ljmp
push
and
loopne
in
xchg
lods
stos
mov
outsl
imul
and
pop
mov
daa
jle
mov
push
push
popa
mov
xchg
pop
and
lods
aam
testl
inc
bound
add
icebp
xor
and
jl
inc
movsb
pop
adc
xor
pop
gs
pop
gs
push
stos
ret
add
iret
cli
dec
push
xchg
adc
testb
fwait
pop
jmp
xor
xor
lret
dec
les
jle
mov
fbld
add
les
lods
ds
sub
mov
mov
lcall
adc
fcom
mov
xor
push
test
repnz
loopne
fstps
pop
ja
mov
jg
xlat
outsl
neg
stc
jmp
popa
lcall
cmc
xchg
inc
and
add
stc
push
fwait
mov
and
sahf
xchg
mov
cmp
incl
enter
jg
dec
bound
or
fstl
jnp
call
sub
xor
jge
divl
inc
rorl
mov
pushf
push
pop
push
xchg
incl
jmp
inc
cmc
arpl
int
int3
repnz
xor
fcomip
xchg
outsb
jb
bound
adc
sub
sbb
lods
mov
ljmp
test
xchg
jl
popa
mov
cmc
pop
pop
add
mov
jmp
loop
adc
fs
inc
les
cmp
fidivs
daa
add
jmp
cmpsb
pop
dec
fldenv
notl
sub
jnp
ret
test
loopne
xchg
dec
int3
push
sbb
jmp
rcr
inc
xchg
pop
push
movsl
mov
lods
inc
ja,pt
fiaddl
cld
repnz
cmp
ljmp
cmp
cmp
hlt
or
fwait
nop
and
enter
test
pusha
dec
jmp
ljmp
lret
and
les
inc
fisubl
pop
aas
dec
pusha
mov
dec
push
outsl
and
ljmp
cli
movsl
subl
jecxz
dec
loope
subl
insb
int
sub
inc
push
jmp
cmp
gs
dec
jne
inc
mov
aad
iret
je
xchg
xchg
jge
movsb
mov
ljmp
and
test
jl
sti
cmp
inc
ljmp
stos
xchg
repz
cmp
fimuls
ds
icebp
iret
xchg
lcall
mov
movsl
cli
subb
call
cmp
adc
roll
insl
mov
jb
ljmp
mov
imul
push
sarl
dec
gs
inc
jnp
ret
mov
cmc
incl
lret
sbb
sbb
push
into
lds
in
dec
shll
cld
aas
cmpsl
xor
mov
insb
pop
stos
lock
pushf
sub
lcall
imul
mov
jmp
test
and
pop
or
lahf
add
data16
mov
or
shl
decl
inc
ret
ja
cmp
js
pop
es
adc
sar
test
push
jmp
xor
inc
call
daa
aad
popf
int3
push
xchg
ret
push
stc
xchg
roll
in
pop
xlat
ja
dec
in
decl
pop
xor
push
lods
inc
int3
dec
cmp
imul
test
sbb
and
idiv
ljmp
in
popf
push
mov
adc
inc
add
cmp
outsl
mov
jle
lods
inc
jmp
int
or
xchg
imull
sar
jg
das
lret
scas
mov
movsl
lret
pop
pop
cmp
fstl
leave
sbb
inc
xchg
mov
aaa
jb
rclb
dec
xchg
stos
and
xlat
das
sub
jbe
inc
push
mov
or
pushl
sub
sti
repz
jo
inc
mov
aad
push
jo
ds
mov
insb
sub
mov
jg
ljmp
xchg
dec
leave
jle
adc
in
mov
mov
jle
lcall
popa
sub
pop
pop
scas
nop
and
outsl
adc
inc
out
std
fimull
cli
incl
mov
cltd
or
cmc
mov
pop
push
dec
mov
or
into
test
cli
adc
js
jg
push
out
mov
cmc
inc
sub
decl
mov
stc
outsb
sbb
cmc
lods
adc
xchg
cli
cli
dec
sub
add
movsb
decl
test
mov
pusha
fisubl
out
fwait
dec
das
xchg
pop
enter
stos
pushl
sbb
jo
xor
sbb
cltd
lock
sub
dec
pushl
fiaddl
or
movl
inc
sahf
shll
cmp
sbb
or
arpl
or
dec
scas
test
jl
dec
cmp
fdivrp
add
decl
mov
mov
mov
scas
cmc
mov
cmp
mov
mov
call
cmp
out
fidivrs
mov
xchg
and
mov
shlb
or
aas
stos
jne
shlb
xlat
pop
jne
out
pop
push
cmp
lods
jnp
mov
cmp
xor
pop
xchg
mov
lea
inc
sbb
scas
add
ljmp
sbb
call
push
loopne
ss
mov
dec
ds
sti
das
out
sbb
inc
xor
stc
lods
lcall
movsb
int
and
dec
jl
inc
jne
fdivl
jb
and
ljmp
stos
push
adc
jns
enter
daa
addr16
xor
mov
call
sbb
mov
push
inc
push
xchg
mov
push
push
std
outsl
add
push
pop
insb
sub
insb
fmul
or
aas
ja
pop
xor
mov
jg
inc
pop
outsl
xchg
xor
jmp
out
inc
jp
or
inc
lret
xor
lods
jl
incl
cld
lcall
insl
mov
bound
lods
ljmp
in
sub
jg
call
mov
xchg
pusha
dec
xor
jo
pop
out
sti
incl
ljmp
arpl
mov
xchg
xchg
push
cmp
push
sub
jg
aad
mov
or
sbb
push
insl
mov
adc
push
rcrl
dec
cmp
cmp
fisttps
popa
push
and
rcll
xchg
lcall
pop
jl
int3
cmpsl
es
dec
pop
push
inc
mov
inc
cmp
jg
mov
jns
nop
adc
pop
push
scas
les
pushl
pop
jo
push
mov
out
in
inc
dec
mov
mov
adcl
jg
jmp
sbb
jne
mov
ret
jns
shlb
ret
cld
cs
call
cmc
test
inc
sbb
sub
ljmp
push
adc
push
pop
inc
aam
adc
rol
cmpsl
outsl
repz
xor
incl
lds
sahf
iret
jge
mov
inc
push
sub
test
call
inc
outsl
adc
shrl
sub
sbb
sub
addr16
push
clc
test
imul
incl
cld
dec
andb
mov
jp
cmp
push
dec
mov
add
push
dec
insl
lds
aaa
add
dec
push
call
mov
mov
out
lahf
in
cmp
rclb
jae
ffreep
stos
pop
call
xchg
sub
pop
aad
adc
mov
mov
out
inc
pop
push
push
mov
push
jg
jmp
test
mov
inc
hlt
out
sub
ds
sbb
add
pushl
cld
rolb
insl
fnstenv
push
jnp
das
push
push
pop
clc
mov
inc
jge
push
lahf
outsb
lcall
shlb
mov
add
sub
jmp
aam
xor
repnz
movsb
lcall
adc
mov
cmp
jg
xchg
fldt
mov
inc
dec
pushf
cmp
mov
out
clc
call
push
faddp
pop
jno
push
or
decl
push
xchg
and
mov
outsb
dec
ljmp
push
sub
or
imul
or
mov
ds
jl
mov
decl
cmpb
fisubl
sub
cmpsl
shll
out
inc
jecxz
loopne
clc
cmp
adc
mov
fucomip
or
add
pop
add
arpl
sub
push
iret
jno
fbld
decl
sub
stos
stos
mov
add
pop
lret
add
rep
call
xor
xchg
decl
arpl
in
jg
sub
xlat
mov
and
in
sbb
cmpsl
jp
and
lcall
dec
sub
jbe
aaa
nop
repz
je
lea
popf
xchg
fs
jmp
dec
fcomps
pusha
dec
inc
imul
add
into
pop
js
andl
das
decl
and
mov
inc
dec
lret
xchg
xchg
cli
sub
dec
mov
loopne
jg
pushl
popf
sub
shll
jb
mov
jle
clc
xorb
decl
dec
repnz
outsl
and
cmp
push
cmc
aad
add
jbe
arpl
jmp
cmp
jge
jge
pop
push
xchg
mov
neg
add
push
push
pop
lret
aas
jle
fcos
jmp
xorps
jne
jns
adc
adc
fisubs
cmp
pop
fs
shll
cld
or
loopne
jne
ljmp
xchg
sbb
movl
out
sub
sar
cmp
xchg
xchg
xchg
sub
sbb
in
push
fs
int3
popf
insb
sub
jmp
stos
xchg
loopne
mov
in
push
mov
pop
mov
out
mov
nop
aam
push
cmp
je
lcall
xor
int
jecxz
xor
dec
jne
dec
fbstp
insl
sar
fisubrl
add
popf
push
adcl
add
lret
adc
mov
push
add
jle
call
pop
hlt
lods
jno
imul
sti
cmp
dec
fisttps
inc
or
pushl
std
push
js
jle
jbe
adc
xchg
xchg
cli
shl
shll
sub
clc
decl
inc
xlat
sub
lret
jnp
mov
mov
mov
movsl
fwait
dec
outsl
clc
out
bound
jne
aas
leave
loop
or
int
fs
pop
jne
and
int
dec
mov
or
add
bound
call
call
aam
icebp
mov
sub
sbb
push
outsb
push
jmp
xchg
mov
sub
fdivs
xor
test
fwait
lds
pusha
jl
call
adc
scas
ret
fstl
xchg
mov
movsl
icebp
mov
mov
inc
dec
sub
rcrb
jo
inc
pop
mov
fidivl
pop
push
or
xor
inc
test
mov
dec
ljmp
add
adc
sub
xchg
popf
adc
jmp
adc
andl
dec
scas
sbb
inc
add
and
xchg
sub
clc
ret
subb
jg
lahf
cmp
cmpsb
sbb
pop
sbb
push
repnz
dec
dec
add
and
mov
test
xlat
std
aas
mov
push
nop
dec
fcomip
call
cld
lods
stc
jmp
jp
popa
cmp
shrb
pushl
addr16
push
sbb
mov
mov
fwait
ljmp
clc
and
outsl
mov
pushl
pusha
xor
xchg
and
mov
mov
addr16
inc
xchg
popa
adc
insb
daa
cmpsl
jne
scas
das
inc
and
add
es
pop
cs
mov
aad
fcomp
push
data16
aas
les
mov
inc
jo
mov
jno
adc
mov
out
cmp
incl
add
or
sub
aam
and
and
out
xchg
xor
mov
push
leave
decl
mov
test
mov
push
xorl
dec
loopne
es
cmp
int3
leave
aam
inc
adc
jg
dec
mov
mov
mov
das
push
data16
xor
add
or
incl
out
xor
nop
xchg
gs
iret
dec
mov
mov
jne
mov
or
or
pop
push
int
out
mov
lahf
stos
and
pop
and
testl
and
cmp
shrl
push
mov
push
clc
sub
cmp
lretw
lcall
dec
cmp
rcll
jl
xchg
jb
test
iret
cmp
movsl
and
inc
pop
rclb
pop
enter
cwtl
push
mov
fmul
xchg
or
je
dec
andb
cmp
xchg
hlt
vpsrlq
fldl
xchg
das
jmp
mov
psllq
cs
mov
mov
test
and
cmpl
bound
stc
jl
inc
fidivrs
into
pop
call
shlb
mov
jae
in
arpl
push
flds
mov
sbbb
mov
xchg
js
pcmpgtd
pop
aad
hlt
jg
pusha
jl
jo
les
into
repnz
pop
or
es
popw
mov
pushl
rorl
sbb
xlat
or
xchg
lea
inc
add
sub
sti
mov
mov
add
inc
leave
mov
rorl
inc
fistpll
mov
jp
mov
lcall
jp
push
inc
xchg
lret
shlb
sub
and
int3
call
loop
and
push
cltd
add
out
ja
out
clc
cmp
in
enter
jl
jmp
lods
fbstp
cmp
fcmovnbe
and
cwtl
push
mov
ror
xchg
xor
xor
call
jl
lahf
stc
ss
or
loope
cmp
inc
lret
sbb
sbb
push
ljmp
mov
repnz
xchg
lcall
cwtl
push
add
sbb
mov
pushl
pop
fsubl
enter
movsl
or
cmp
pushf
jnp
sbb
xchg
adc
xchg
hlt
stos
scas
in
or
fsts
add
gs
ljmp
and
fildll
fwait
jle
enter
mov
outsb
cmp
xchg
jae
push
lods
out
out
inc
movsl
mov
fistps
mov
sbb
test
dec
aam
incl
dec
aas
clc
test
lahf
or
jb
push
push
rcrl
scas
icebp
push
pushl
lcall
push
cmpsl
loope
mov
and
push
cmp
jmp
ficoms
cmp
mov
mov
fmuls
xor
decl
pop
add
jnp
xor
jne
ss
dec
loopne
fcmovu
adc
call
hlt
mov
jge
xchg
sub
mov
sti
out
sub
sub
in
add
es
mov
ret
mov
test
pop
mov
dec
pop
pop
call
lods
clc
pop
mov
sarb
sub
cwtl
out
adc
or
ljmp
cltd
cmp
outsl
inc
in
mov
int3
in
cli
es
imul
jmp
in
ljmp
jg
and
mov
fwait
inc
jecxz
loop
xor
add
lock
mov
jge
pop
jg
pop
sbb
popa
xor
jmp
mov
jmp
push
mov
jne
fiaddl
daa
in
pop
and
jl
cmpsb
mov
sti
jg
cmp
push
xchg
push
rcll
movsb
call
mov
test
push
es
push
je
jg
jmp
or
loope
mov
shr
xor
lcall
mov
pop
and
sub
outsl
lods
adc
xor
out
inc
dec
sbb
lret
mov
push
or
or
push
popa
das
rcl
mov
pop
test
imul
out
xor
jmp
mov
inc
pushf
fistl
cwtl
loope
ds
jmp
cmp
xor
sbb
xor
lret
incl
cmp
mov
sub
jmp
jbe
sub
je
and
out
or
data16
incb
je
imull
enter
cmp
lcall
out
mov
insl
jne
inc
add
push
cmpsb
test
int
push
xor
lret
incl
xchg
or
test
aam
pusha
mov
push
adc
lods
add
dec
push
sahf
inc
insb
xchg
jle
push
test
stos
aaa
mov
arpl
iret
das
xchg
jle
mov
incl
rcrb
rcrb
xchg
add
xor
leave
pop
shl
inc
and
lcall
jne
mov
shrb
inc
ret
xchg
xchg
jp
push
das
mov
jmp
xchg
cmp
cli
fiaddl
adc
jo
mov
jge
test
icebp
jmp
jne
jae
fcoms
cmc
xchg
das
in
mov
mov
push
jmp
rcrl
insl
adc
bound
popa
mov
loopne
call
lret
ret
imul
pop
or
out
xor
call
movsl
add
fnstenv
mov
lret
rcr
rorl
orb
adc
fidivrl
adc
std
mov
add
sahf
xchg
bound
push
fwait
cmp
mov
ljmp
rcll
pushf
sub
pop
fwait
fwait
push
test
sbb
nop
xchg
dec
pushl
addr16
inc
movsl
xor
jbe
xorl
ret
cmp
incl
clc
mov
out
es
pop
add
xor
jg
inc
cs
push
add
addb
jmp
xchg
mov
js
mov
jl
fsubl
rcll
jg
test
xchg
mov
je
pushl
ljmp
data16
adc
mov
loop
sbb
fsubl
ds
pushl
cmpsb
add
cmp
push
movsl
dec
data16
repnz
pop
add
decl
cmp
arpl
pusha
daa
mov
aaa
inc
mov
int
es
mov
add
ljmp
clc
clc
jle
movsb
jno
es
fmulp
xchg
sbb
imul
sti
push
in
test
jecxz
sti
xor
mov
pop
dec
jb
data16
movsb
inc
mov
ds
leave
dec
cmp
cmp
adc
movsl
and
in
arpl
inc
bound
jg
push
test
add
fwait
psubq
dec
es
pusha
cmpl
scas
push
aaa
pop
and
jp
lods
pop
and
xor
ds
in
jbe
mov
jo
lods
adc
std
xor
sub
call
je
and
push
sub
filds
cmp
cmp
icebp
push
mov
test
push
push
push
jns
psllq
mov
push
mov
pop
mov
mov
inc
cmp
shlb
addb
pop
pusha
xor
test
incl
adc
fidivs
push
call
out
xchg
pop
xor
jmp
mov
enter
sbb
mov
adc
sbbl
andl
decl
xor
xorb
jmp
js
mov
out
popa
sbb
sbb
or
cmp
in
ss
jns
int3
inc
pop
push
popl
add
sub
lahf
or
mov
stos
fwait
sahf
inc
jg
xor
fs
lcall
jmp
and
out
mov
mov
jns
mov
sub
add
cmp
mov
decl
dec
or
into
sbb
inc
mov
in
aaa
push
mov
cmpsb
fistpl
mov
xor
subl
fsubrs
and
lcall
cmp
adc
nop
mov
out
jo
into
or
sar
shr
das
jp
mov
pop
push
call
leave
cmp
fists
sbb
lds
jp
cltd
in
mov
mov
mov
jmp
imul
fldt
mov
sahf
das
rcl
pop
jg
sbb
call
stos
or
and
test
xchg
jb
and
pop
adc
lcall
cmpsl
jae
vprotd
repz
mov
lds
filds
fistl
jo
mull
lret
out
addl
mov
stc
pop
cmc
inc
adc
incl
testl
iret
pop
insb
push
mov
movsl
fmull
lcall
shr
nop
loope
push
push
cmpsb
inc
repnz
adc
pop
mov
push
ljmp
daa
rcl
movsl
out
jbe
mov
sub
add
aam
stc
bnd
xor
pushl
ds
fisttpl
cmpsl
and
jne
xlat
insb
mov
aas
out
lock
cmc
mov
insl
clc
incl
cmp
push
jb
int3
and
outsb
daa
or
loop
jmp
in
incl
push
sbb
inc
cli
jg
xorl
cmpsb
cmp
xchg
xchg
iret
push
and
lahf
lods
jmp
cmpsb
in
je
roll
mov
in
mov
mov
data16
push
fwait
or
movsl
and
cld
enter
out
xor
aad
push
clc
sbb
filds
add
mov
dec
pop
sbb
decl
xor
mov
ja
pop
insl
fstpt
inc
mov
pop
push
scas
jno
cmp
mov
in
jge
fiadds
sbb
test
mov
mov
cmc
shrl
jecxz
dec
testb
idiv
call
inc
ljmp
test
fsubs
iret
sbb
jge
jmp
pop
cli
mov
ljmp
inc
xchg
int3
movsb
aaa
add
pause
shr
flds
repnz
insl
nop
loop
cmpsb
jge
mov
jmp
fisubrl
enter
cmp
cmpb
scas
mov
fstpl
xor
adc
and
stos
mov
loopne
lock
lea
push
push
movsb
mov
cmp
push
add
push
mov
std
outsb
bound
aaa
es
pop
push
shrb
mov
mov
call
mov
cmc
xchg
sbb
mov
dec
mov
xchg
into
lret
adc
ljmp
lds
cmp
sti
iret
imul
out
cmp
mov
cwtl
inc
mov
das
adc
test
and
ljmp
movsb
ret
adc
sbbl
mov
mov
ss
call
cmp
sbb
xchg
loopne
rorb
push
or
dec
jl
mov
xor
sub
ljmp
xor
das
or
pop
sbb
mov
lea
jo
or
loope
notb
cld
decl
pop
jnp
icebp
into
out
mov
fldcw
daa
nop
inc
rol
push
pushf
pmaxsw
pop
out
pop
cwtl
pop
call
cmp
mov
cmp
scas
popf
pusha
rcrb
push
inc
or
sar
lock
punpcklbw
cld
dec
ljmp
incl
nop
cmp
icebp
mov
add
test
sub
cmp
arpl
pop
or
lcall
pinsrw
or
sub
and
stc
mov
xchg
addr16
ljmp
shlb
push
mov
fs
pop
ss
pop
jmp
test
aaa
or
decl
outsb
cmpsl
mov
jp
mov
jnp
jae
call
or
cmc
xor
fdivr
call
andl
adc
and
push
sarb
pop
push
cmc
dec
test
std
lcall
push
into
cld
test
daa
ds
in
test
in
jns
rorb
or
add
push
push
je
repnz
pushl
sbb
flds
mov
push
daa
jecxz
into
out
test
fstpt
sbb
jle
clc
subb
mov
in
mov
pop
lods
xor
push
test
dec
lret
insl
jg
add
sbb
push
inc
fimull
cmc
push
pop
data16
xchg
cltd
aaa
sarb
imul
addr16
and
sub
and
dec
pusha
push
testl
sub
lret
ret
push
clc
jmp
aad
es
cmp
fs
arpl
mov
inc
and
fcompl
mov
incl
pop
add
aaa
pop
test
or
mov
ljmp
dec
mov
inc
jno
jmp
into
adc
js
and
and
mov
push
mov
std
or
movsl
mov
and
call
lods
fsubr
dec
sbb
and
fucomi
movsb
std
incl
in
inc
push
add
pop
mov
ljmp
mov
xor
push
pushl
sbb
scas
loop
lret
push
orl
icebp
jns
in
mov
repnz
in
dec
mov
ljmp
icebp
loop
shrl
add
mov
xchg
mov
js
lahf
fnsave
fdivl
lret
insb
and
push
jmp
xchg
shlb
test
insb
or
lret
sahf
mov
lods
xchg
or
or
sub
js
or
jmp
lock
push
pop
fsubrl
and
outsb
adc
and
inc
pushf
arpl
pusha
jge
cmp
mov
lcall
out
insb
dec
xorb
adc
push
xchg
pop
inc
out
movsl
aaa
lock
inc
les
adc
aaa
sbb
sbb
add
pop
mov
fs
mov
addl
call
mov
sub
jns
cwtl
push
xchg
adc
xor
stos
fiadds
pop
mov
fdivrs
mov
sub
shll
cmp
xchg
bnd
addb
insb
clc
mov
incl
fnstsw
test
xor
sbb
outsl
add
ljmp
push
push
pusha
jne
imul
or
lcall
mov
ljmp
test
xchg
push
movsl
gs
mov
sub
sahf
sbb
sub
iret
lret
pop
lods
xorb
aaa
repnz
xor
adc
xor
cltd
xchg
add
dec
pusha
xchg
mov
push
in
in
in
mov
sbb
lret
fildl
mov
jns
fwait
in
inc
fcoms
jmp
push
xlat
mov
fildll
dec
inc
xlat
es
dec
mov
bswap
or
call
pushf
or
mov
int3
mov
inc
data16
mov
out
sub
repnz
add
jbe
repz
shrb
ljmp
cmpsl
in
jle
push
mov
mov
jno
and
ja
testl
mov
inc
clc
sub
xor
push
icebp
dec
mov
cmpsl
inc
adc
pusha
add
pop
shr
push
jl
sub
pushl
shll
or
lahf
rorb
xchg
in
add
aaa
push
inc
ljmp
adc
sahf
in
scas
lods
decl
test
jl
sub
xor
jg
jmp
in
xchg
push
cmp
das
in
and
mov
jmp
iret
push
jo
push
jmp
xor
mov
ret
jl
mov
and
lcall
xor
addb
sbb
pusha
dec
loope
fistps
mov
std
insl
stos
jg
push
mov
inc
mov
pop
push
mov
pop
pop
les
repnz
push
mov
cmp
popa
mov
test
fcmovnbe
mul
aad
lock
scas
mov
mul
shlb
mov
fcmovnu
cmc
and
push
sbb
cwtl
les
imul
push
push
xchg
popa
jg
cmp
add
adc
or
mov
fidivrs
rcr
rcr
add
ljmp
insl
sub
jo
adc
ljmp
add
clc
push
ret
cmp
mov
outsb
xchg
stos
pushl
int
movsl
scas
sbb
idiv
out
shrl
out
lret
lea
scas
xor
inc
je
out
mov
sbb
test
and
cld
mov
fdivrs
xor
adc
cld
jmp
sub
insb
call
inc
lds
repnz
punpckhwd
mov
adc
ret
mov
mov
mov
les
fisttps
pop
outsb
test
adcl
ljmp
iret
fidivrl
and
test
adc
pop
dec
pop
jno
insl
nop
ret
in
or
sub
into
jno
into
or
in
decl
inc
scas
cmp
lret
push
jae
pop
mov
mov
ljmp
outsl
cmc
push
mov
mov
pop
mov
imul
decl
test
sahf
sub
lret
aaa
std
mov
or
les
adc
sti
cmp
pop
std
mov
mov
lret
das
add
fistl
in
psubsb
pushl
mov
call
inc
mov
mov
cmp
outsb
xchg
or
inc
sub
std
sbb
xchg
mov
je
push
stc
xchg
pop
inc
rorl
dec
cmp
ss
lret
js
cs
cmp
mov
cmpsb
sub
loop
call
cmp
fcomp
mov
ja
fwait
or
mov
popf
ljmp
inc
insl
dec
sbb
stos
xchg
jmp
iret
jl
inc
cmp
jmp
push
mov
imul
adc
xlat
rcrl
sub
sub
xchg
xchg
test
inc
jg
out
xchg
mov
pop
push
push
pushf
mov
xor
cmp
xchg
mov
adc
pushl
imul
pop
loope
mov
sbb
mov
and
cmc
mov
pushl
sti
cmpsl
rcrb
jge
das
xor
pop
call
adc
and
cmpsl
leave
jl
imul
pop
dec
ja
les
fcompl
fidivrl
mov
push
cmc
xchg
dec
std
in
pop
sub
enter
call
jl
mov
cltd
sbb
push
nop
int
rolb
pop
mov
pushl
std
stos
jmp
jle
sub
ret
xchg
stos
lahf
adc
test
pop
incl
enter
push
inc
push
mov
sub
shr
popa
lret
dec
into
es
inc
incb
or
or
and
repz
iret
daa
inc
cld
jo
jne
fadds
scas
clc
dec
add
incl
inc
sub
nop
or
pop
jmp
sub
dec
jg
imull
mov
add
sbb
decl
or
add
rorb
data16
pushl
fs
cmpsl
nop
in
insb
or
mov
int3
loope
into
xchg
mov
cld
inc
andb
cmp
jp
pushf
or
push
aaa
pop
decl
ja
insb
dec
mov
rcl
in
pop
jmp
iret
fildll
cmpsl
dec
mov
cs
ds
and
and
sub
sbb
cmp
fsubrl
mov
lds
adc
decl
loopne
jmp
push
jbe
jp
jge
adc
dec
mov
ret
scas
ds
jmp
repz
jbe
add
xor
mov
int3
jge
lcall
mov
icebp
lea
lret
mov
mov
push
jmp
sbb
push
adc
xchg
fdivl
pop
dec
loopne
sbb
jne
scas
std
lcall
xor
es
mov
mov
std
xchg
sub
or
mov
xchg
sar
mov
movsb
subb
inc
mov
sub
cmc
pop
dec
jle
mov
les
or
push
xor
aam
loope
jae
imul
and
inc
adc
cvtdq2ps
inc
xchg
jle
cwtl
repz
xchg
hlt
inc
mov
inc
adc
pop
mov
subl
loopne
and
mov
loop
jg
ljmp
outsb
mov
sub
ret
or
cmc
std
das
insb
adc
dec
pop
pushf
mov
cmc
out
clc
mov
fwait
sbb
bound
outsl
inc
sbbb
sub
clc
out
xchg
mov
mov
ficomps
cmp
mov
sti
adc
incl
adc
movb
and
mov
pop
xchg
cmp
fwait
or
dec
leave
aad
xchg
test
stos
loope
mov
jae
iret
push
jae
push
dec
add
fldcw
cld
push
push
push
imul
fstpt
das
imul
test
test
add
mov
lahf
jge
mov
out
mov
xchg
xor
or
out
cli
sub
cmp
lahf
xchg
push
idivl
xor
and
mov
xor
ret
sbb
incl
xlat
loopne
inc
dec
pop
dec
xor
sti
inc
gs
add
dec
insb
out
cli
sbb
andb
xor
out
mov
fdivrs
jg
or
mov
cmp
cmp
add
cmp
call
cmp
in
test
test
mov
mov
push
aas
loop
mov
stos
lcall
idivl
outsb
cmp
loop
mov
fwait
out
popf
ret
or
aaa
adc
loope
adc
das
jg
jb
lock
ljmp
test
sub
adc
fs
jae
psubq
shrl
xor
and
mov
loop
or
cwtl
mov
and
fnstcw
addr16
mov
hlt
or
mov
mov
xchg
shll
pushf
mov
test
sbb
std
jmp
movsb
call
cvtpd2pi
stos
mov
test
out
test
data16
lea
lcall
add
outsl
test
mov
mov
xor
jp
pop
and
call
test
jns
je
frstor
or
popf
add
jl
xchg
das
in
xchg
ds
lds
in
aaa
mov
ja
out
mov
push
shlb
stos
insl
test
mov
call
leave
sbbl
in
jl
addl
in
mov
mov
incl
and
cmp
pop
outsl
rcl
xchg
mov
push
pushw
les
fwait
aaa
inc
xor
cmpsb
and
mov
pusha
mov
sbb
mov
es
lea
cmp
into
inc
sbb
decl
shrb
and
div
push
lock
mov
jl
xlat
in
clc
add
dec
out
stos
cmp
mov
adc
inc
cmp
into
pop
arpl
cmpsl
fimull
pop
jns
inc
decl
hlt
in
and
icebp
daa
pop
les
mov
mov
sub
addr16
cmp
push
cmp
pop
dec
pushf
push
or
adc
in
fsubl
pop
add
sub
mov
enter
jl
push
cmpl
mov
jns
icebp
push
adc
lahf
lods
mov
dec
jbe
out
lcall
push
and
stos
dec
pop
mov
into
push
mov
sub
scas
decl
xchg
xchg
adc
out
fwait
inc
in
orb
out
xchg
lcall
mov
add
out
sub
add
jp
xchg
adc
mov
inc
jb
dec
flds
icebp
movsb
pop
int
fs
cli
dec
mov
jecxz
mov
rclb
xchg
insl
mov
jmp
add
jmp
cmp
push
inc
addr16
cs
mov
sbb
pop
xor
incl
dec
negl
mov
pusha
mov
mov
subl
enter
jg
cs
or
push
inc
in
insl
pop
sbb
outsl
insl
es
adc
sbb
pop
ja
test
fwait
cmpsb
cltd
adc
xor
stos
jo
lret
mov
jmp
sub
shrb
int3
shrb
es
push
add
imul
call
outsl
lcall
xchg
mov
scas
xchg
fs
lret
xchg
mov
paddd
ljmp
fstpt
mov
mov
ret
fcompl
fsubl
pop
fucomip
jnp
mov
cmp
fs
jmp
stc
call
add
ss
pop
fdivl
mov
or
xchg
lods
lcall
adc
gs
movsb
or
push
enter
ljmp
data16
sub
push
mov
fsub
pop
pop
enter
cmp
aad
mov
test
mov
xchg
lret
or
mov
inc
ret
mov
push
cld
pop
filds
pop
add
dec
inc
das
loopne
shrl
stc
sub
jnp
mov
adc
or
movsb
mov
jmp
mov
aaa
mov
call
jne
je
dec
imul
mov
ljmp
rcrl
jecxz
pop
mov
iret
test
sbb
mov
insl
xchg
mov
lods
pushl
les
sbb
mov
jmp
mov
repz
sub
repz
fcom
int3
filds
int3
sub
push
pop
or
sbb
add
cmc
lcall
out
ret
xchg
add
inc
shrb
and
pop
loopne
inc
dec
inc
xor
adc
pushl
movsl
mov
xor
lods
call
cs
das
dec
int
fnstcw
fisubl
push
sub
sbb
mov
adc
push
jnp
int3
jo
mov
sub
movsl
lahf
out
pushw
mov
sbb
mov
std
cmc
xor
mov
lock
inc
shlb
aas
ss
jne
sub
jmp
movsb
xchg
dec
in
das
jle
imul
push
dec
rorb
mov
adc
mov
es
pop
in
jmp
cmp
push
xchg
fisttps
pop
and
mov
mov
popl
jno
incl
xlat
test
push
jo
pop
mov
mov
add
lds
scas
mov
decl
les
xchg
je
cmp
hlt
sub
sbb
shll
test
pop
jl
icebp
cmpsb
fwait
inc
push
lea
dec
pop
cmp
jp
orb
das
scas
clc
incl
push
inc
sub
mov
scas
dec
jnp
mov
and
scas
incl
movsb
testb
testb
adc
mov
aaa
push
or
or
mov
repz
jg
fsubrs
mov
push
scas
bnd
pop
dec
push
mov
inc
inc
ret
xorb
add
icebp
ja
out
push
push
fld
rcrb
mov
push
jmp
std
ret
mov
mov
scas
out
inc
mov
mov
mov
inc
sbb
fistps
out
cmc
mov
inc
push
sahf
push
aam
cmp
out
xchg
dec
mov
push
aaa
mov
and
decb
push
iret
ljmp
aad
lcall
mov
cmpsb
mov
mov
xchg
insl
scas
inc
xorl
lcall
add
mov
adc
cmpb
and
aam
ds
mov
call
push
test
in
mov
test
xchg
mov
cmp
sbb
sub
mov
push
xchg
or
inc
jno
popf
ret
iret
lahf
adc
sarl
fdivl
jb
xchg
lcall
popf
inc
daa
xchg
sub
ja
inc
cli
jle
scas
into
cmp
cmp
add
cltd
idiv
mov
fldt
js
vpcmov
or
xor
and
mov
inc
mov
pushl
loope
mov
bound
mov
push
and
arpl
out
lret
fidivl
or
call
js
out
movsl
mov
lea
in
lcall
lcall
mov
adc
je
jb
enter
pop
lcall
ljmp
or
sahf
imul
dec
shrl
ret
xchg
std
push
adc
push
decl
into
andb
es
or
and
iret
mov
loop
dec
or
incl
push
pusha
in
xchg
int
lods
popa
movsb
add
imul
ret
in
xchg
mov
shrl
add
in
stos
jmp
mov
fsubl
or
mov
in
into
xchg
jae
sub
in
inc
ret
and
sti
dec
or
fildl
mov
jl
sbb
adcl
repz
jns
nop
aas
stc
mov
pushl
std
or
lcall
fsubrl
adc
mov
sub
iret
xchg
fsubrp
hlt
inc
fldt
mov
and
push
add
daa
sbb
mov
jno
dec
cmp
pop
mov
pushl
dec
pop
test
out
out
sar
fstps
imul
in
sub
les
mov
mov
dec
cmc
inc
sub
adcb
push
sti
scas
outsb
loopne
push
call
mov
in
incl
fldenv
mov
stos
stos
push
popa
inc
lret
cmp
mov
incl
pop
call
cld
mov
xlat
movsl
stos
rcrb
jecxz
adc
bound
mov
adc
out
mov
add
scas
pop
adc
mov
sub
adc
mov
mov
mov
push
sti
xchg
dec
and
mov
repz
xor
ret
mov
xchg
dec
add
pushf
cli
jp
mov
sub
addb
out
adc
mov
repnz
dec
out
decl
outsw
pop
cwtl
jbe
ds
jns
sarb
fdivr
pop
dec
dec
lock
cmp
dec
or
dec
popf
jb
pushl
insl
sbb
into
mov
sbb
sub
ds
pop
mov
ljmp
adc
loopne
ss
std
das
lods
cmp
mov
jecxz
jno
dec
ljmp
and
in
loope
jbe
shll
or
ss
jne
jp
and
mov
pushl
and
test
sarl
xor
aam
addb
pop
cmp
mov
stos
mov
mov
inc
shll
push
pop
mov
fimull
orl
call
rcl
lock
std
movsl
mov
cmpsb
dec
imul
jmp
xchg
idivb
jbe
pop
mov
bound
pop
pop
adc
push
jp
pop
mov
push
xor
fcomip
fs
movsb
jg
call
insb
les
pop
and
sub
push
xchg
cmc
inc
scas
outsb
aaa
test
sbbb
in
sbb
cs
cs
std
push
rcrl
xchg
js
mov
test
sub
cmp
dec
hlt
sbb
bound
or
xchg
jns
xor
or
push
ss
notb
leave
push
xlat
hlt
adc
push
in
repz
outsb
add
push
push
mov
push
daa
xor
jg
inc
mov
ds
fiaddl
dec
cli
lahf
sub
ljmp
inc
and
push
jns
inc
cmpsb
nop
fwait
pop
pop
cltd
das
fwait
call
je
fcomip
call
pop
push
in
push
idiv
cmp
sub
fnstsw
stos
aas
fsubrs
adc
jmp
fiaddl
add
jae
and
scas
stos
ljmp
dec
mov
cwtl
and
lret
jae
xchg
dec
adc
pushl
push
jl
push
out
jg
fbld
sub
es
jb
and
inc
addr16
mov
mov
inc
int
icebp
sbb
lea
xchg
decl
je
sbb
imull
fwait
pop
hlt
and
test
mov
sahf
out
lcall
fists
xor
int3
insb
aaa
xlat
sbb
lods
xchg
inc
and
ds
loop
shll
fcomip
jmp
aam
xor
outsl
icebp
loope
add
xchg
loop
mov
pop
gs
call
xchg
sets
mov
repz
and
mov
jo
inc
mov
lods
jp
mov
cmpsb
and
mov
enter
pop
xlat
jnp
and
cltd
cli
lods
aaa
cld
cmp
ret
and
std
loope
mov
jbe
cmp
inc
jo
add
decl
or
mov
outsb
cmp
push
out
push
lcall
inc
inc
sbb
jg
fwait
sahf
sbb
aam
mov
sbb
ljmp
jmp
mov
and
das
js
mov
add
xchg
xchg
es
or
push
cmp
cmp
xchg
xchg
adc
lahf
or
movsl
movsl
ljmp
cmp
lock
movsb
mov
test
test
lock
mov
mov
xchg
flds
pop
sbb
mov
js
jae
xor
incl
pop
mov
in
mov
ljmp
fisubl
out
jno
incl
cld
lds
cmp
lahf
or
cmp
jbe
jmp
xlat
pop
int
call
adc
imul
aad
inc
mov
sbb
stos
cmpsl
xchg
jae
aam
ljmp
cli
dec
and
daa
icebp
dec
lods
inc
aam
es
cmp
ss
lods
cmp
incl
lret
push
mov
add
jge
ja
bound
push
int
shlb
dec
xchg
dec
cld
pushl
and
mov
sbb
loope
pop
loop,pn
cmp
ljmp
push
pop
in
xor
dec
jo
mov
aad
leave
or
aam
jecxz
cmc
test
jmp
jg
gs
ret
clc
mov
xchg
ret
adc
push
mov
movsb
and
loop
pop
dec
std
call
cs
xlat
lahf
aas
cmp
stc
aaa
fdivr
mov
xchg
jo
cmpsb
mov
pop
add
add
lock
cmp
ljmp
mov
pop
or
pop
lcall
xlat
push
ret
ret
mov
xor
jmp
sub
popa
insb
mov
xor
jge
int
dec
pop
daa
adc
lahf
int
ljmp
mov
add
movsl
idivb
popf
scas
arpl
leave
lcall
jge
roll
jl
pop
shl
mov
scas
ljmp
pop
scas
hlt
dec
push
jg
decl
pop
pop
out
orb
mov
fldt
adc
inc
pop
jl
dec
sbb
xchg
fiaddl
add
int
out
bnd
dec
mov
loope
and
and
dec
xchg
test
or
mov
mov
into
dec
aaa
out
enter
adc
aas
fildl
xor
sti
cmp
dec
or
scas
or
xchg
popf
and
pop
jnp
mov
loopne
nop
cmc
pop
and
mov
test
mov
jbe
or
ret
cwtl
dec
retw
and
stc
add
in
sarl
cmp
scas
loope
xor
xor
jns
mov
push
into
roll
test
xchg
and
push
dec
mov
xchg
jmp
loop
pop
jo
jl
mov
dec
or
stos
push
jae
dec
leave
dec
mov
jb
push
pop
sti
jmp
xchg
pop
inc
adc
decl
lcall
movb
add
data16
cmp
adc
popf
mov
rcll
test
test
xor
divb
dec
xchg
xchg
enter
jg
or
push
mov
test
jnp
jnp
rolb
out
add
push
incl
cmp
and
scas
xor
pop
mov
jo
ljmp
cld
mov
xchg
ret
mov
jnp
popf
mov
je
inc
pushl
pop
mov
rcl
dec
fistpl
gs
cmpb
mov
inc
in
mov
sbb
cmp
and
adc
inc
mov
decl
icebp
ljmp
cmp
pop
test
sarb
cmpsb
mov
testl
stos
outsb
mov
dec
jae
aaa
sub
call
leave
aam
mov
fldenv
out
imul
cmpsb
popf
inc
lret
jb
and
mov
mov
scas
sar
ljmp
jns
xchg
je
inc
cmc
into
les
mov
stc
fists
pop
hlt
push
pop
repnz
into
adc
pop
jmp
and
aaa
popa
lcall
ror
or
mov
shrl
inc
sbb
inc
fwait
xor
clc
std
adc
mov
out
adc
subb
stc
repnz
cmpsl
sub
jg
cmpsl
mov
mov
mov
lret
loope
jae
lret
out
rol
and
fisubs
push
inc
adc
incl
push
cmpsl
sbb
and
filds
and
mov
sbb
cli
lcall
xlat
dec
push
sbb
adc
mov
mov
jg
ja
pop
fcmovbe
ljmp
insl
mov
cwtl
fbld
std
inc
pop
aad
cmpsb
cmpsb
xor
nop
push
adc
adc
int
decl
add
scas
repnz
es
push
jmp
lods
aaa
inc
mov
add
xchg
int3
sti
adc
xor
js
insl
mov
mov
or
fwait
into
push
lret
push
scas
lret
lea
jo
inc
cmp
incl
enter
push
sbb
outsl
xchg
cmp
outsb
mov
and
dec
pop
jb
nop
pop
ljmp
sar
fcoml
mov
mov
push
cmp
lcall
lahf
add
mov
jg
popa
or
je
dec
sbb
in
jno
and
pushl
sbb
push
insb
xchg
mov
es
sub
cltd
fisttpll
and
and
lcall
pushf
pop
mov
fdivrs
inc
pop
cltd
cli
or
mov
cli
daa
push
lcall
add
xchg
aam
push
lcall
test
pushl
sbb
popa
scas
ja
push
mov
imul
ljmp
insb
mov
fs
hlt
push
jmp
push
xor
ret
jb
decl
lcall
mov
mov
lahf
popf
fbld
xor
pop
xchg
in
fbld
lcall
jmp
fs
add
clc
dec
xor
xor
ljmp
decl
fs
into
cli
mov
jbe
push
xchg
dec
inc
and
and
js
pop
mov
scas
cli
jl
leave
push
inc
and
jmp
push
xor
nop
lods
mov
lods
addb
ljmp
xchg
mov
jp
jbe
cmpb
cmp
pop
cld
push
dec
inc
push
lcall
pop
ljmp
mov
orl
mov
mov
dec
mov
cmpsl
dec
adc
mov
xor
stc
sahf
out
pop
fs
or
rorb
push
pop
sbb
stc
pop
pop
loop
and
sub
mov
adc
fnsave
xor
aaa
jbe
pushf
orl
add
mov
pop
daa
xor
test
xor
imul
dec
repz
mov
les
inc
add
inc
xchg
xchg
pushl
insb
cltd
and
scas
ds
lods
test
pop
push
add
aaa
std
ljmp
sbb
sub
outsb
mov
cmp
mov
pop
or
pushl
jbe
lds
jg
inc
or
dec
enter
daa
push
xor
cltd
fldl2e
push
ljmp
repnz
int
add
sub
cmpsl
cmovs
mov
add
fisubrs
stos
push
fcompl
inc
sahf
add
jge
mov
sbb
mov
insb
insb
jg
loope
jno
clc
fxch
pop
mov
dec
jmp
jl
pop
rclb
incl
in
xor
push
hlt
popa
mov
pop
mov
jo
pop
xchg
push
adc
fsubrs
inc
mov
sub
ds
outsl
in
xlat
xlat
dec
insl
fstps
adcb
dec
lret
xor
loope
add
lods
lcall
lea
sar
adc
gs
pop
iret
scas
sbb
mov
rorb
aam
cmpl
dec
or
shll
iret
or
adc
int3
xor
mov
test
into
je
adc
xor
add
repnz
mov
cmp
ret
in
add
inc
cmp
sub
jecxz
sti
decl
fnstcw
rcl
mov
inc
xchg
out
xchg
mov
das
lea
mov
adc
lcall
sub
sub
jl
mov
pop
shlb
push
mov
je
imul
decl
aaa
adc
and
ja
daa
leave
sbb
pop
pop
xchg
sub
inc
out
and
ret
mov
sarb
push
jno
ficomps
or
pushf
mov
ljmp
or
add
es
test
loop
pop
repz
dec
push
jae
sbb
inc
out
jns
push
jne
fsubrs
cmp
stc
dec
mov
mov
xchg
je
or
aad
push
xor
jnp
add
mov
mov
out
pop
sar
ljmp
iret
cmp
or
jne
push
push
je
mov
ljmp
std
push
sti
lds
dec
in
jg
adc
push
inc
pop
mov
or
aas
test
jnp
loopne
and
das
sar
dec
xchg
in
mov
das
pusha
jns
or
xchg
das
jo
mov
adc
add
enter
inc
xchg
in
sbb
jae
mov
js
mov
call
xchg
test
cmp
dec
dec
jae
popa
sbb
pop
adc
icebp
mov
aad
in
pop
or
pusha
ja
das
add
push
push
aaa
jecxz
pushf
and
add
cmp
add
push
push
scas
cli
mov
mov
loop
or
ja
fmull
jmp
jl
imul
push
cltd
insb
loope
sub
mov
add
cmpl
scas
gs
in
mov
jmp
push
mov
mov
push
mov
xlat
inc
roll
inc
adc
jmp
pop
adc
pop
xor
add
notb
add
fucom
fsubl
xchg
ds
ljmp
mov
push
in
push
mov
andb
pop
push
push
adc
pop
sub
or
mov
sbb
pop
cmp
std
dec
mov
ror
in
pop
loope
or
dec
neg
jp
cwtl
sbb
lcall
cmpsl
sub
js
into
popf
call
bswap
inc
mov
cmpsb
out
sbbl
inc
sub
xorl
mov
pop
popa
and
add
addr16
dec
dec
ret
das
or
cwtl
mov
fcomip
mov
cmp
pop
and
or
inc
xor
es
sbb
push
idiv
jmp
jg
push
into
adc
stos
lcall
fisubl
lret
push
sbb
ror
xor
jmp
cmc
fucom
enter
add
lcall
dec
addr16
out
jbe
and
pushf
lods
dec
dec
popa
mov
lock
push
lahf
inc
cmp
pop
int3
add
ljmp
inc
leave
mov
cltd
lds
and
ljmp
xorb
in
xor
xor
xchg
adc
popf
jge
mov
scas
idivb
xchg
jno
repnz
sub
ret
mov
sbb
mov
ja
add
ljmp
mov
xor
ljmp
arpl
cmp
call
sti
jmp
lcall
inc
mov
popa
out
addl
das
mov
ljmp
pusha
jmp
pop
scas
sub
aad
dec
nop
mov
ja
addr16
nop
push
es
and
hlt
in
jbe
mov
out
pop
in
pop
iret
ja
test
mov
mov
add
mov
decl
cwtl
cmp
mov
loop
cmp
std
and
mov
mov
hlt
je
test
lcall
push
in
lret
dec
sub
push
or
icebp
rolb
pop
lcall
decl
sahf
mov
add
push
lock
jne
inc
outsb
movsl
icebp
mov
and
dec
outsb
cmp
popf
add
push
gs
pop
adc
jo
mov
mov
push
mov
cmp
enter
pop
xor
sbb
lcall
or
out
adc
inc
bound
xor
push
fsubrl
dec
jns
pop
std
lcall
push
and
xchg
out
shll
push
ds
xchg
setb
xchg
fwait
mov
jmp
pop
push
and
mov
scas
daa
inc
pop
dec
stc
lds
into
in
lret
mov
lods
mov
test
fwait
xchg
ljmp
or
push
fldcw
mov
fimuls
sahf
lods
and
push
shl
jl
push
inc
lea
lcall
ror
mov
daa
pusha
mov
fabs
push
sub
mov
xchg
repnz
lcall
loopne
jb
sbb
into
add
sbb
ja
ret
scas
and
mov
or
xor
dec
stc
sub
data16
inc
xor
cmpsl
jb
filds
xchg
mov
fadds
loopne
and
inc
pop
xchg
cmp
out
cmp
sbb
dec
dec
out
push
xor
call
inc
outsl
insb
and
sub
incl
pushf
mov
clc
call
jp
xchg
lock
cmp
jmp
xor
stc
jne
fistpl
cmpsb
push
inc
sbb
xchg
dec
rcrl
sahf
nop
or
sub
ds
int3
fidivrs
pop
test
pop
xor
push
repnz
call
stos
movsb
add
sti
in
outsl
dec
jecxz
and
jno
aaa
call
push
ljmp
hlt
xor
lahf
out
call
pop
cmc
mov
movsl
aad
pop
test
shrl
pusha
icebp
jp
xchg
loope
and
mov
lret
in
ljmp
sbb
popa
add
mov
gs
shll
jb
push
shlb
pop
add
push
ljmp
sti
pop
jno
loop
xor
outsb
mov
int
jg
push
pop
movl
shl
pusha
pop
or
push
adc
sub
cmc
or
icebp
xor
xchg
adc
lds
xchg
rcr
aad
scas
leave
sub
cmpsl
mov
adc
push
cltd
es
ss
pop
inc
fstpl
adc
adc
add
mov
imul
test
call
sbb
xchg
cmc
pop
fcmovnu
fiadds
jmp
imul
sub
xchg
sbb
jg
jmp
dec
ret
push
orl
jne
test
in
aas
adc
in
dec
push
iret
adc
xlat
sub
sbb
inc
jmp
cmp
insl
testb
in
xor
mov
incl
outsl
mov
enter
sti
inc
nop
fxch
jl
lea
imul
pop
pushl
xor
xchg
mov
jge
xor
out
pop
or
xor
dec
and
repnz
adc
jg
sbb
cld
outsb
adc
das
into
jns
aad
data16
dec
das
ret
push
pushl
mov
lea
repnz
nop
jo
lcall
cmpsl
repnz
aaa
jmp
pop
test
jmp
push
jge
out
ficoml
mov
pop
rol
sub
pushl
cmp
test
dec
js
xor
notl
mov
mov
in
fstl
ljmp
or
daa
xchg
into
imul
sbb
mov
in
pop
stos
ret
pushl
xor
xchg
adc
into
sahf
sbb
nop
lret
xor
cmp
jge
call
push
outsb
inc
call
adc
mov
repz
sbb
mov
jne
fisttpl
jg
lcall
mov
jecxz
add
mov
pop
inc
jns
lcall
lcall
cs
fucom
aas
pop
popa
cld
push
adc
insb
cwtl
fmuls
sub
js
stos
jb
rclb
jo
mov
insl
in
mov
pop
xchg
imul
ljmp
xor
popa
xchg
into
pop
or
mov
idiv
decl
arpl
sarb
jl
add
inc
xchg
add
xor
jmp
sub
into
adc
or
mov
xlat
push
or
mov
jmp
pop
xchg
mov
cmp
sub
cmp
leave
dec
jmp
cltd
in
mov
pop
push
cmp
xor
fcmovne
xchg
shll
push
and
sub
scas
cmp
dec
out
out
pop
adc
push
push
sbbl
mov
fs
sbb
sti
cmp
cmc
divb
mov
stc
mov
test
test
lcall
push
xor
cs
cld
push
lds
dec
lea
stos
mov
xchg
xor
imul
pushl
push
lret
lret
loope
bound
xor
jne
dec
add
mov
inc
rclb
pop
or
jge
in
je
loope
sbb
mov
andl
pushf
mov
lcall
mov
mov
icebp
nop
adc
divb
stos
inc
aas
ljmp
jmp
out
subl
clc
inc
je
addr16
lea
jmp
inc
das
sub
out
loope
dec
jae
xchg
movsb
or
subl
outsl
lret
fldcw
cs
decb
sbb
or
mov
mov
call
repnz
add
jne
adc
sbb
int
sbb
cmpsl
pushl
out
mov
sbb
test
nop
lcall
gs
mov
pushf
cmp
idiv
pop
enter
jl
or
cltd
je
nop
or
out
hlt
mov
inc
repnz
pop
test
lds
lcall
pop
push
mov
shl
xor
movsb
xor
mov
push
daa
xor
jg
pop
lcall
and
jg
fs
pop
cld
sub
mov
pop
mov
insb
add
lcall
adc
pop
push
scas
xchg
into
mov
lods
je
jmp
lock
and
cmp
mov
pop
sub
into
sbb
fsts
adc
ljmp
stos
aas
xor
add
sub
imul
add
cltd
test
mov
push
inc
fistpl
imul
std
sub
ljmp
aad
les
iret
cmp
jmp
pop
inc
lods
fs
popf
pushl
inc
cmp
aad
cmpsl
mov
sarb
outsl
inc
lock
lods
cltd
bnd
decl
mov
ds
repz
leave
sub
and
aam
movsl
scas
push
scas
cmpl
cmp
mov
syscall
push
adc
fdivrl
cld
pop
das
dec
and
lcall
test
mov
das
hlt
pop
or
cld
dec
adc
dec
pop
test
xchg
jg
decl
fs
sub
pop
mov
mov
std
cld
xor
mov
jae
jns
push
movl
and
cmp
arpl
cs
les
cmp
xor
push
fdiv
mov
shrd
mov
inc
pop
sahf
leave
push
clc
pop
cmp
or
scas
pop
mov
popf
lock
lea
and
adc
ret
jbe
add
xor
jns
lcall
inc
add
push
nop
and
das
dec
testb
stc
mov
cltd
inc
mov
dec
mov
popf
or
pop
xchg
adc
ljmp
sub
gs
sub
loope
int3
or
scas
enter
std
pop
mov
sar
incl
sub
lret
ljmp
sub
mov
adc
jb
aas
lret
rorl
sub
sub
call
jnp
repnz
jg
xor
push
in
inc
mov
popa
mov
ljmp
mov
or
mov
int3
add
fimull
jnp
jle
sar
das
clc
cmp
repnz
pop
stos
xlat
mov
pop
dec
les
mov
adc
incl
loopne
fdivr
or
sbb
lods
loope
orl
sbb
mov
cmp
lcall
adc
neg
hlt
pop
cltd
lods
inc
cmp
andl
mov
dec
mov
sub
pop
xor
cmpsb
in
dec
in
mov
sub
cs
fdivrs
loop
cltd
lret
jmp
dec
imul
jmp
cmp
mov
fcoml
lods
sarb
push
mov
jg
mov
fidivs
mov
pop
jecxz
es
int
leave
xchg
ficoml
cmpsb
xchg
inc
xchg
and
dec
mov
out
popf
pop
and
cmp
jg
nop
or
leave
mov
sbb
loopne
xchg
sub
ds
fwait
fwait
aad
mov
decl
fsts
push
aaa
clc
aas
loopne
jp
icebp
dec
pop
dec
ret
test
enter
pop
lock
jmp
push
sub
mov
adc
or
aaa
pop
push
inc
xlat
jg
test
dec
push
cmpb
adc
fstps
mov
add
mov
fbstp
not
enter
add
mov
lods
or
cld
jmp
hlt
push
push
mov
or
pop
lods
scas
xorl
mov
out
pusha
out
decl
sbb
add
cmp
sub
push
pop
pop
pop
xchg
rolb
cmc
pop
or
idiv
sub
pushl
pop
mov
cmp
adc
orb
xchg
lcall
loopne
inc
out
jne
jg
out
sub
decl
sti
repz
fstl
adc
idivb
incl
sbb
cli
lds
insb
insl
sahf
lds
adc
jbe
sub
sbb
mov
std
add
sub
inc
inc
xchg
dec
jnp
push
lcall
ljmp
aaa
fs
in
xchg
jl
arpl
and
ss
pop
jp
add
and
adc
dec
mov
jo
fdivs
or
cmpsb
and
test
add
cli
incb
add
pushf
mov
xchg
stos
xchg
bound
fsub
dec
sub
or
call
inc
pop
dec
pop
inc
xor
mov
mov
mov
jg
mov
mov
lahf
lock
xlat
pop
push
div
ja
aam
out
mov
adc
pcmpgtb
jmp
sbb
and
lods
pop
add
ret
test
lcall
and
hlt
fistpll
pop
outsb
xchg
jg
dec
mov
jg
int
mov
jne
cmp
clc
xor
je
dec
outsl
inc
xor
clc
jmp
cld
incl
jg
mov
mov
jo
repnz
rcrl
pushl
fwait
push
jecxz
sub
mov
jb
lock
or
jns
dec
rcrl
fcmovnb
mov
xchg
mov
jge
shr
js
mov
or
sub
fadds
sbb
imul
mov
aad
bound
jnp
jno
add
call
or
icebp
addr16
jmp
inc
xchg
jnp
movsl
cmp
daa
sub
fwait
outsl
push
inc
in
jne
xor
pushf
repnz
xor
inc
movsb
fstl
adc
jle
pop
call
gs
xor
or
pop
ja
clc
lods
sub
add
pushl
inc
cltd
inc
inc
cwtl
test
addr16
es
or
mov
dec
imul
fwait
mov
jb
sub
int
shlb
scas
cmp
jg
sub
add
scas
pop
jl
mov
jnp
cmpsl
sub
pop
jnp,pt
mov
call
fisttpll
fbld
pop
xor
xor
mov
cmp
jg
stos
les
pop
lahf
mov
xorb
cmp
lea
lcall
jb
pop
pop
mov
xchg
sbb
xchg
je
xchg
lods
mov
adc
xchg
into
add
and
test
and
testl
mov
sub
pushl
jg
mov
outsb
or
scas
out
add
mov
jb
mov
das
orb
faddl
mov
xor
pushl
es
daa
adc
dec
rcr
sahf
push
cs
jns
inc
jnp
cmp
mov
out
cmp
xor
es
pushf
inc
xchg
jmp
push
add
scas
jmp
adc
inc
cmc
sub
loope
ljmp
xchg
out
mov
aas
sbbl
push
dec
cmp
mov
push
and
fnsave
sar
cmp
fcomip
incl
adc
dec
cmp
test
xor
leave
mov
jmp
subl
in
stos
test
and
hlt
je
test
fs
mov
ret
push
inc
enter
clc
outsb
sub
in
popf
mov
test
cmpsb
mov
fs
dec
cmp
icebp
rcl
pushl
xorb
dec
or
push
adc
adcl
popa
mov
xchg
jg
shll
mov
testb
es
jno
loop
push
cmp
lcall
inc
adc
std
adc
mov
sbb
pushf
pusha
and
mov
fdivrp
jo
and
push
push
sub
xchg
in
inc
decb
mov
out
xor
mov
push
sbb
mov
mov
loop
loop
cwtl
push
jge
push
xchg
orb
addl
js
sbb
lcall
test
insb
aad
sbb
mov
in
aaa
push
adc
aaa
loope
ljmp
std
mov
sahf
mov
inc
into
and
inc
jbe
enter
movb
add
rorb
test
add
inc
loope
daa
pop
orb
nop
das
push
mov
pop
aad
cs
and
adc
mov
push
ljmp
or
sbbb
dec
add
bnd
jo
jnp
lret
addb
inc
cs
or
adc
je
cld
outsb
dec
ja
and
jne
jo
imul
mov
jp
ds
rol
add
adc
cmp
out
push
adc
push
aas
inc
xor
or
xchg
inc
jb
es
js
scas
insb
push
daa
lret
jbe
inc
sub
mov
fildl
sub
mov
cmpsb
xchg
dec
jo
daa
sbb
addb
push
out
dec
gs
gs
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
in
dec
push
mov
push
cmp
or
int3
fstl
aaa
dec
dec
jne
js
cmp
sbb
mov
aaa
push
popa
outsb
adc
pop
adc
cmp
inc
jns
push
or
pop
inc
incb
popa
jb
dec
outsl
jbe
enter
sub
xchg
xor
jge
call
mov
insl
insl
into
inc
push
and
xchg
cmpsl
and
mov
xor
jo
or
mov
adc
data16
jl
loopne
sub
daa
push
enter
inc
movsb
cltd
loopne
insb
stos
sub
out
fs
sub
mov
mov
flds
sub
dec
inc
or
or
mov
jae
cli
arpl
mov
sbb
and
cmp
bound
jo
lds
pop
loopne
adc
ds
insb
jne
addl
dec
sbb
xchg
mov
outsl
imul
dec
adcb
inc
push
fildl
adc
inc
push
pop
push
mov
adc
mov
inc
jnp
push
and
ja
dec
subl
test
pop
jb
xorl
jns
mov
inc
jae
mov
cmpl
fwait
sbb
hlt
fs
inc
jecxz
out
inc
sub
std
dec
xor
or
push
int3
adc
popa
adc
inc
fstps
insb
roll
jo
packuswb
pop
pop
sbb
inc
dec
sbb
pop
pop
insl
popa
and
jle
jo
leave
mov
jns
and
mov
shrl
mov
or
arpl
dec
js
inc
adc
mov
xor
mov
adc
sub
or
cs
pop
and
popw
test
shlb
lret
mov
xorl
and
das
mov
enter
dec
jae
pushf
inc
inc
aas
js
or
pop
dec
inc
dec
or
cmp
jnp
inc
mov
inc
mov
dec
jb
push
cmp
jecxz
scas
pop
repz
xchg
subl
je
ja
inc
inc
pop
jl
inc
inc
jg
dec
xchg
jo
pop
push
cmp
mov
cmp
jo
xlat
and
inc
popa
es
and
out
jp
insl
sbb
sub
jg
dec
enter
xchg
pop
addl
sbb
orb
xchg
outsb
adc
outsl
jns
jae
in
mov
dec
push
nop
js
jmp
gs
and
jmp
pop
pop
stos
aad
outsl
push
imul
inc
je
mov
mov
push
inc
inc
out
in
mov
push
inc
sbb
enter
into
mov
sub
mov
mov
jno
insl
adc
push
or
sub
push
subb
add
push
push
adc
jns
inc
add
icebp
shlb
pop
stos
loope
xor
or
enter
xlat
push
jo
push
xchg
or
mov
adc
push
mov
aaa
cmp
xlat
and
and
adc
push
stc
pushf
push
jne
xlat
loope
inc
inc
fmuls
push
mov
ffreep
push
mov
jae
scas
sub
xor
pop
add
inc
popa
add
test
cmp
jnp
xor
mov
ret
gs
mov
ret
sti
inc
adc
imul
add
cmp
outsb
pushf
inc
sbb
push
outsl
add
add
pop
lea
lock
jne
sbb
mov
rcl
cmp
dec
gs
jne
mov
stos
xchg
or
adc
inc
arpl
sti
mov
js
cmp
dec
pop
lock
jg
xchg
xor
arpl
mov
mov
cmp
and
out
add
mov
in
shl
jge
push
popa
sbb
ja
outsb
push
nop
test
dec
shr
popa
sbb
mov
dec
or
inc
inc
push
fiadds
mov
dec
cli
pop
push
out
jne
push
je
and
popa
adc
inc
jb
and
sbb
fstpt
in
jae
mov
lods
jo
inc
inc
and
shll
sbb
pop
push
mov
mov
imul
mov
lahf
mov
mov
mov
icebp
mov
inc
insb
notl
jle
xchg
mov
inc
shl
sub
call
dec
jae
xor
jae
xor
or
iret
lock
scas
jns
push
lds
inc
add
push
test
and
ret
inc
nop
sbb
inc
ja
xor
xor
and
nop
inc
movsb
push
push
xor
imul
and
adc
cpuid
enter
add
pop
outsb
inc
push
push
adc
add
adc
pop
cmp
push
jo
mov
outsb
dec
adc
jnp
ss
shlb
add
add
mov
mov
adc
xchg
movsb
dec
adc
shll
or
push
adc
popf
cmpsb
push
xchg
mov
add
xor
dec
pop
adc
in
inc
rcll
lock
jb
and
adc
fmull
dec
and
or
bound
dec
or
popw
movsb
bound
add
add
adc
inc
jb
push
jb
inc
jae
mov
push
sahf
inc
leave
inc
pop
and
imul
iret
push
repz
jo
inc
stos
push
jo
or
arpl
rclb
push
mov
push
mov
and
imul
or
roll
pop
imul
pop
push
mov
enter
lret
fcmovbe
test
and
cwtl
xor
mov
mov
adc
fwait
mov
inc
push
aad
mov
or
and
push
xchg
or
fisttps
inc
adc
mov
and
sbb
and
jb
ret
push
lods
fsubrl
adc
push
ss
pusha
pop
sbb
jl
pop
inc
imul
push
mov
xlat
push
popa
xor
lock
mov
or
jae
dec
push
or
int3
adc
shrl
push
sub
fs
dec
sub
add
push
adc
jne
push
add
cmp
outsb
push
push
fcompl
lret
pop
mov
in
test
in
mov
imul
pop
and
push
dec
jecxz
test
xor
ret
arpl
lret
inc
fs
cmp
lds
dec
or
push
adc
nop
aas
int
andl
vpsrlw
hlt
and
imul
jb
push
test
movsl
outsb
out
mov
fs
or
dec
mov
jecxz
mov
pop
icebp
add
movsl
sbb
cmp
inc
xchg
addr16
cmp
mov
int3
add
pop
inc
mov
mov
iret
jns
pop
imul
int
inc
mov
adcl
call
cmp
bound
jnp
push
dec
lret
lods
push
sub
push
or
ret
xor
aam
out
ret
xchg
cld
rorb
inc
push
mov
stos
enter
ja
jne
imul
jbe
xchg
test
add
sub
pop
xchg
dec
push
xchg
mov
add
and
int3
rclb
js
int3
add
mov
push
movsb
sarl
mov
mov
jmp
jg
sbb
dec
mov
and
cmp
jp
popf
fwait
add
mov
add
sbb
in
dec
jno
adc
add
add
adc
cmp
cmpsl
movsb
or
pop
lret
mov
add
jmp
inc
out
xor
cmp
add
mov
or
fmull
pusha
push
add
xchg
movsb
adc
pusha
lods
mov
dec
pop
add
les
cs
sti
lret
push
mov
xlat
add
and
jb,pn
popa
mov
sbb
negl
push
rclb
inc
out
jge
inc
cs
adc
ja
fisubl
out
add
jb
push
mov
xchg
sbb
lahf
add
dec
adc
insl
es
out
roll
add
push
xchg
and
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
