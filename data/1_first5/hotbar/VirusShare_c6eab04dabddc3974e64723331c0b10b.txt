divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xorb
rcrb
dec
aaa
adc
dec
sub
outsb
mov
adc
mov
pop
clc
or
pop
mov
int
mov
orb
and
cmpb
outsb
outsl
je
add
adc
xchg
and
and
cs
cmpsb
mov
shrd
popa
incl
lea
in
bswap
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
ljmp
lret
cli
push
xor
out
xchg
cld
push
imul
lret
dec
testb
mov
dec
daa
loopne
add
or
or
into
sahf
insb
daa
aam
cmp
add
fcoms
add
jg
add
add
sbb
add
prefetch
pop
xor
push
test
in
sub
mov
fsubrs
js
push
loop
pop
and
rclb
loopne
add
cs
cmpb
jge
and
and
lods
add
loopne
and
jb,pn
dec
push
mov
sar
repnz
cs
mov
fs
dec
or
adc
insl
rcrb
out
and
jb
repnz
cltd
test
push
dec
sbbb
add
add
xlat
jecxz
sbb
sti
incb
adc
inc
push
rol
movb
dec
xor
or
sub
lea
push
add
cmpsb
or
and
adc
lods
insb
sbb
loop
jne
sahf
enter
add
sub
daa
sub
ss
imul
jbe
andl
push
xchg
fbld
ror
dec
fucomi
push
xor
gs
push
sti
pop
pop
faddp
ja
jne
jmp
mov
rcrb
xor
pushf
xor
in
inc
xchg
into
int3
loope
pop
sub
push
icebp
sbb
fstl
insl
adc
cmpsl
fnsave
dec
push
ja
inc
add
xor
and
movsb
or
mov
pop
xchg
clc
add
cmp
cmp
hlt
in
adc
add
stos
mov
push
mov
sbb
push
movzbl
sarl
and
nop
fadds
mov
insb
daa
ret
mov
movsl
mov
mov
cmp
jbe
mov
add
pop
and
push
sub
pop
fdivl
inc
nop
inc
cmp
jp
roll
or
lahf
or
adcb
loopne
cmp
mov
mov
adc
cltd
loopne
call
sbbb
push
add
outsb
xchg
test
sub
clc
pushf
and
push
sub
clc
aad
or
repz
mov
xor
push
inc
imul
add
adc
push
es
lods
mov
mov
pop
sub
arpl
sbb
aam
subb
nop
popa
inc
or
and
add
push
rcl
mov
adc
mov
and
out
dec
adc
loopne
shrb
mov
movsl
es
xor
jl
hlt
cld
add
lahf
inc
mov
imul
add
mov
or
enter
xchg
mov
push
stc
dec
jnp
or
mov
leave
push
sbb
fwait
les
mov
cmp
pop
add
ficomps
or
push
add
rcll
xchg
ret
push
outsl
push
sahf
push
inc
fiaddl
jp
dec
pop
push
ret
shlb
or
enter
sbb
pop
cltd
test
inc
mov
and
sub
and
sbb
push
sub
adc
or
lret
addb
mov
aam
je
inc
test
movb
xchg
sbb
add
push
mov
cmp
mov
sub
add
mov
mov
mov
or
iret
mov
andb
mov
mov
test
mov
mov
in
add
and
loopne
xor
pusha
shrb
mov
xor
mov
xlat
hlt
sahf
adcl
jne
inc
repnz
mulb
lcall
lcall
and
dec
xor
in
push
int3
out
or
movsb
sbb
mov
xchg
popf
xlat
jno
outsb
fcoml
and
jnp
mov
push
enter
pop
fiaddl
dec
divl
push
inc
push
push
insb
fcoml
xor
jo
sub
fildl
adc
lahf
push
mov
movsl
xchg
mov
push
mov
mov
xchg
xor
dec
pop
cmp
cmp
ss
or
mov
sbb
inc
rol
lcall
or
stc
jp
je
cltd
mov
push
aam
xor
push
fst
jne
ret
xlat
pop
jp
push
xor
aad
or
inc
or
adc
rclb
lahf
mov
sbb
test
ja
rclb
add
mov
and
call
xor
push
jnp
int
pop
inc
push
xor
addr16
xor
jle
gs
call
sub
cmc
mov
mov
dec
add
in
add
adc
pop
xchg
movsl
dec
insb
and
test
fsubrl
jecxz
scas
lcall
rcll
xor
sub
adc
test
and
or
mov
sub
cmp
test
or
call
test
dec
xchg
lea
xor
mov
or
pop
or
scas
in
nop
mov
add
dec
jecxz
sbb
jmp
test
sarb
inc
lock
add
mov
pop
xchg
aad
add
dec
adc
pusha
orb
shrb
mov
add
lods
or
ja
pop
mov
or
loopne
xchg
xchg
sti
push
sbb
dec
call
fmull
dec
push
inc
push
je
test
loopne
add
add
sbb
shll
sbb
sbb
mov
and
mov
push
or
in
shl
or
xchg
and
jmp
imul
jbe
push
inc
push
icebp
inc
psrlq
adc
clc
sbb
xchg
ret
repnz
sbb
add
ret
sub
arpl
mov
mul
fiaddl
push
jecxz
inc
movzbl
jecxz
sub
add
notl
test
bound
pop
je
add
fstps
aas
inc
pminub
rorb
mov
cmp
lds
and
push
rclb
pop
lahf
mov
movsl
test
popa
jecxz
mov
cs
ljmp
xchg
or
push
dec
inc
ret
push
mov
sub
das
cltd
and
loop
sbbb
adcl
pop
ss
lret
ret
or
push
push
mov
push
pop
lcall
roll
xor
ds
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
pop
push
shlb
pushf
test
cltd
stos
mov
xchg
mov
push
push
dec
fdiv
les
inc
pushf
sbb
push
out
xor
roll
pop
pusha
push
adcl
call
enter
sbb
or
cmp
sub
mov
andb
push
addl
adcl
push
and
sti
dec
add
dec
fcompl
jb
call
test
xchg
xor
test
idiv
mov
cmp
cmp
xchg
test
cmp
in
push
lea
mov
movsl
inc
jbe
adc
pop
cmp
push
push
rcl
and
dec
ret
xor
adc
mov
lea
sub
daa
rclb
add
xor
imul
push
faddl
ljmp
mulb
mov
xchg
fwait
hlt
fdivrp
xor
fdivr
mov
mov
mov
add
sbb
xor
cmpsb
lea
adc
cli
and
add
push
and
ds
sub
aas
xor
push
jge
cmp
or
mov
push
call
mov
mov
mov
add
mov
rorl
rol
push
adc
pop
mov
pop
out
push
rol
pop
lea
dec
repnz
enter
mov
dec
sub
mov
rep
rolb
add
push
inc
dec
pop
mov
mov
mov
ss
rcll
out
mov
and
adc
call
adc
add
dec
cli
mov
fisubrs
mov
pop
in
push
int3
mov
addl
aad
pop
into
enter
mov
imull
rolb
ret
xchg
pusha
inc
mov
lods
ljmp
outsl
push
jb
je
mov
cli
and
ljmp
pop
pop
stos
je
and
sbb
popa
pop
xor
nop
or
cmpl
push
fistl
sbb
rolb
popa
je
mov
add
mov
or
stos
add
or
or
leave
aam
ljmp
xchg
add
sub
mov
pushf
data16
fistpl
aad
imul
jnp
shll
rcl
fiaddl
mov
dec
mov
mov
jecxz
mov
adc
pop
cmpsb
movsl
addr16
xchg
jmp
sbb
in
popa
mov
repz
mov
jmp
sub
adc
insb
scas
enter
push
adc
push
push
or
insb
or
and
scas
dec
jno
add
adc
scas
xchg
sbb
cmp
shrl
push
jae
and
outsl
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
lcall
and
add
lret
pop
or
jmp
sbb
inc
inc
ficomps
imul
or
stc
divl
mov
loope
and
nop
incb
inc
leave
leave
int3
in
mov
in
in
enter
or
pop
jno
push
sub
imul
cmp
cmp
adc
mov
sbb
leave
sub
mov
adc
adc
lods
cmc
sbb
inc
rcr
in
mov
or
pop
mov
js
and
sub
stos
repnz
xchg
scas
cltd
je
mov
mov
mov
mov
cmp
mov
inc
xor
shl
aam
inc
xchg
repnz
push
mov
adc
mov
jge
fcomps
add
add
cmp
imul
xchg
adc
sub
cmpsl
adc
dec
data16
aas
push
fists
dec
mov
sbb
dec
xchg
hlt
adc
mov
jne
aaa
stos
add
lods
push
cmp
xor
jb
fidivrs
jae
inc
xor
nop
ds
mov
cmp
rolb
scas
call
xor
xor
shl
call
xor
fcomp
inc
test
inc
enter
ljmp
mov
or
les
mov
test
aad
enter
mov
push
mov
mov
loop
lea
ret
sbb
adc
jg
lea
jb
mov
pop
add
cwtl
add
mov
dec
adc
or
pushf
jbe
in
rorb
int3
sub
popa
add
cmp
cmp
in
add
jne
jl
icebp
andl
push
sbb
adc
movl
sub
add
mov
in
jne
inc
add
adc
pop
sbb
scas
jns
nop
mov
sbb
inc
lods
inc
pop
icebp
or
gs
mov
test
loop
jbe
push
add
add
out
enter
sbb
loop
adc
cld
mov
pop
dec
xchg
xorl
cmp
or
mov
lods
outsl
fsts
ja
mov
inc
xchg
or
push
popa
inc
dec
pop
and
incb
add
add
or
je
mov
push
test
jmp
add
call
adc
loop
cld
inc
pop
dec
test
fcoml
jmp
push
push
test
or
mov
fs
lods
pop
push
loopne
mov
adc
ljmp
sbb
scas
aad
add
push
cld
lcall
repz
mov
rorl
sbb
int
nop
add
lods
mov
or
mov
lret
and
add
mov
mov
jns
lods
mov
test
jbe
inc
jne
push
inc
sbb
nop
push
add
repz
sub
adc
mov
insl
add
push
call
cmp
push
loopne
xor
lea
and
pop
push
xchg
push
inc
add
adc
daa
or
hlt
repnz
xchg
cltd
push
pop
dec
inc
inc
xor
pop
fiaddl
rorb
or
roll
mov
pushw
or
jnp
ja
cs
ss
stos
std
std
stc
jp
xchg
push
xor
push
nop
cld
cmp
pop
pop
pushf
cli
outsb
ret
xor
adc
inc
rorl
cmp
call
sub
push
inc
inc
enter
mov
cmp
and
add
inc
movsb
xor
adc
lods
cmp
nop
dec
mov
jo
cld
inc
push
cs
faddl
xchg
pop
ja
pop
dec
adc
std
adc
int3
cmpsl
aas
nop
push
mov
and
mov
mov
stos
sbb
jbe
test
inc
mov
mov
js
add
mov
sub
fldenv
rorl
jecxz
dec
jo
push
mov
and
adc
sarb
mov
test
test
sub
lods
arpl
lock
pop
add
and
testl
add
dec
or
out
jnp
jmp
les
jl
ljmp
mov
sbb
add
add
int3
lods
or
sbb
outsb
je
stos
inc
push
push
add
pop
and
mov
pop
xchg
adc
cmp
call
out
push
ret
pusha
bound
cld
popf
mov
and
mov
xor
cwtl
inc
mulb
jecxz
push
mov
push
call
out
pop
ds
dec
mov
in
jbe
push
adc
rol
jmp
sbb
js
les
push
movsb
clc
push
or
enter
fsts
jbe
outsl
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
jnp
mov
or
movsb
imull
xchg
sbbl
sarb
rorl
mov
dec
enter
inc
or
ret
movb
add
icebp
cmp
filds
mov
push
outsb
insb
dec
inc
mov
test
sub
lods
orl
test
pushw
push
add
mov
cmp
xchg
mov
stos
mov
jl
or
jne
mov
jmp
or
shlw
xor
or
or
or
popf
cmc
adc
lahf
dec
xor
lods
dec
xchg
xor
popf
lock
xor
sub
inc
push
cmp
and
adcl
add
dec
jecxz
fiaddl
mov
add
call
push
mov
dec
xchg
or
call
shrb
dec
test
shll
cmpsl
imul
sbb
nop
add
call
enter
nop
popl
rorl
mov
out
aam
inc
mov
adc
push
mov
lea
mov
mov
stos
fldt
push
fucomip
cmp
je
cmp
jbe
rsm
sub
jne
mov
pusha
mov
add
nop
clc
push
and
std
cmp
test
test
or
sbb
pushf
cmpb
in
xchg
movsl
shrl
daa
xor
pushf
cli
adc
bound
shlb
jae
or
loop
lock
test
inc
jmp
addb
inc
cmp
loopne
stos
fwait
add
push
test
lock
jb
clc
mov
sbbb
adc
mov
adc
mov
sbb
jbe
ds
fidivrl
aaa
push
mov
hlt
adc
fsubr
jo
push
sbb
cmpb
cmp
in
mov
into
lea
lds
lods
sbb
scas
ss
inc
adc
dec
je
xchg
pop
add
and
cmp
push
cltd
je
mov
xchg
lcall
cs
pop
out
in
push
sub
xchg
loop
jg
popf
push
add
push
push
mov
push
lea
mov
outsb
test
xchg
mov
push
push
sbb
jne
data16
push
and
cmpsb
aam
in
pop
fdivl
inc
cmp
cwtl
popa
fsubrl
jecxz
pop
cli
call
fwait
mov
scas
loope
fcoms
mov
stc
and
adc
shll
loopne
pop
scas
dec
je
lcall
dec
push
push
push
sub
shll
add
or
mov
xor
push
mov
add
sete
pop
sbb
push
dec
inc
sahf
inc
or
fstps
imul
mulb
aaa
in
ret
mov
jmp
andl
sbb
xchg
adc
sbb
mov
lcall
jnp
add
mov
adc
mov
ss
popf
add
repz
and
cmp
push
or
ljmp
inc
inc
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
ss
rorb
push
dec
xor
loop
inc
adc
out
call
push
pop
mov
sbb
movsb
call
mov
jmp
push
imul
pop
addr16
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shll
pop
and
or
je
int3
jecxz
enter
decb
loop
aaa
mov
jmp
enter
nop
xor
add
cmc
sbb
jns
icebp
call
sbbl
sarb
inc
call
cld
test
fldenv
push
or
cmp
cmp
pop
xchg
out
xchg
add
sbb
movsb
sbb
cmc
movb
pop
jb
xchg
push
push
loope
js
negb
jge
daa
sub
or
fisttps
fxtract
jmp
jne
lahf
pop
xorb
movsb
inc
or
leave
sbb
outsb
mov
mov
or
push
xchg
add
pop
push
adc
add
ret
fdivrl
cmc
pop
mov
sbb
push
call
mov
and
in
movsb
jmp
js
repnz
cmp
in
mov
mov
dec
push
call
jmp
cmp
cld
sbb
sbb
icebp
mov
xchg
sub
rorb
ret
or
mov
push
stc
sub
fcompl
or
jne
out
push
mov
add
sbb
jo
or
cmp
pop
cwtl
or
mov
mov
pushf
or
cmp
test
ret
addr16
stos
push
cmp
je
inc
loopne
fs
jg
mov
inc
mov
mov
inc
mov
pop
in
pusha
ja
push
push
jg
push
dec
lea
pop
call
call
gs
jbe
test
aas
mov
inc
sbb
shll
and
and
nop
push
decl
or
push
jl
mov
cmp
fadds
dec
jne
movzbl
add
push
add
add
xor
movsb
nop
aaa
gs
mov
and
add
test
push
sbb
add
push
sbb
mov
movsl
sub
add
pop
xor
lods
and
adc
cli
sub
sbb
and
ja
fcmovu
pushl
xorb
inc
xor
inc
pop
sub
sbb
dec
jecxz
and
or
rorb
out
add
imul
push
imul
add
sti
loopne
dec
test
adc
or
call
push
mov
cwtl
push
dec
clc
xchg
fstl
call
inc
rolb
das
dec
push
push
sub
dec
aaa
movb
andb
xchg
je
clc
cmp
adc
inc
lds
dec
adc
cmp
inc
xchg
jge
aas
enter
add
shr
adc
mov
arpl
shl
xor
xchg
adc
pop
subl
call
sbb
inc
rcrl
rolb
shrl
add
push
add
add
push
xor
add
andl
nop
shll
pop
add
out
xor
sbb
adc
pushf
mov
imul
add
rol
stos
add
add
pop
adc
push
add
sbb
inc
add
xor
dec
push
sbb
daa
and
shr
push
sbb
and
adc
rorb
popf
jp
push
mov
adc
inc
shl
or
dec
add
iret
push
or
or
push
cli
mov
jp
jle
mov
divl
mov
pop
call
call
aas
sbb
popa
js
dec
aam
fnstenv
inc
adc
cmp
call
rcrl
js
dec
adc
inc
or
push
int3
pop
fs
hlt
insl
xchg
mov
out
fstpl
cmp
or
adc
add
sti
mov
je
call
clc
jb
ficompl
jmp
scas
inc
dec
mov
jb
cmp
and
push
pop
mov
sbb
xchg
rcrb
jno
rolb
addr16
loopne
lcall
into
cmp
xor
insb
fwait
mov
dec
dec
jmp
sub
inc
jmp
cwtl
xchg
dec
or
jge
sbb
inc
add
add
xchg
dec
or
cmp
mov
cmp
adc
cmp
lock
dec
test
dec
mov
push
mov
pop
arpl
fists
and
inc
fiadds
shrl
incb
pop
cmp
es
cmpsb
add
out
xchg
movsl
push
and
jne
fs
into
push
je
call
rclb
sbb
jae
push
es
inc
inc
lods
add
outsl
push
mov
insl
loop
pop
outsb
iret
dec
push
push
mov
call
mov
cmp
adc
fwait
xchg
int3
aam
and
das
js
sub
pusha
int3
xor
xchg
xchg
mov
jbe
push
imull
lcall
dec
mov
imul
fs
pop
ss
add
sub
mov
push
outsl
pop
movsb
xor
aaa
movl
arpl
movsl
adc
adc
es
inc
mov
inc
adc
add
mov
push
es
inc
xchg
pop
shlb
adc
loope
inc
aaa
add
sbb
pop
aaa
and
mov
pop
xor
xchg
or
pusha
inc
andl
xor
pusha
inc
sbb
sub
ja
ss
inc
lret
inc
xor
cmp
pusha
inc
lret
out
xchg
or
lret
call
dec
shrl
fsts
insb
dec
orl
out
xor
jp
inc
dec
out
sahf
int
fs
cs
pusha
nop
push
in
movsb
repz
les
mov
out
fidivrs
inc
or
push
sub
sahf
out
and
adc
add
xor
shl
cmp
roll
je
test
or
rcl
mov
out
adc
xor
adc
lock
jnp
mov
pop
nop
add
and
dec
pop
mov
aaa
sbb
out
or
out
fidivrs
push
mov
rcl
jns
enter
xchg
adc
inc
cld
or
movsb
repz
push
adc
push
or
pusha
out
mov
cmpsl
or
jmp
and
and
or
js
adc
mov
insb
sbb
mov
add
push
pop
jmp
cmp
je
mov
mov
sbb
repz
lahf
ret
fstpt
rcr
test
inc
xor
sahf
xchg
stos
insl
push
pop
add
out
dec
in
add
add
jbe
dec
dec
sbb
test
jo,pt
cmp
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttpll
in
mov
or
mov
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
notb
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
mov
sti
mov
xchg
addr16
sbb
mov
sbb
sbb
cmpsb
sbb
je
push
sbb
dec
sahf
push
mov
xor
sbb
pop
push
push
inc
negb
clc
jg
cmp
jne
add
add
sub
cmp
insl
pop
and
mov
xchg
push
iret
cmp
xchg
and
jg
pop
shrb
push
in
push
in
imul
adc
repnz
ret
sahf
dec
adc
in
in
cmp
repnz
out
out
or
repnz
sub
push
in
fsubr
je
call
iret
sbb
xchg
mov
cmp
dec
sahf
xchg
sub
pusha
in
jmp
jmp
add
or
in
out
repnz
in
xchg
aad
in
cmp
leave
xor
mov
out
sbbl
out
insl
nop
out
je
lock
scas
in
pop
dec
icebp
cmp
das
enter
jnp
or
iret
repz
std
hlt
push
jnp
aam
imul
xchg
stos
cmp
cmp
sahf
div
mov
lcall
std
clc
clc
inc
scas
addb
aas
stc
sahf
xchg
sub
and
cli
nop
addr16
add
sti
inc
outsb
sub
fdivrp
cld
cld
je
cld
in
ffreep
push
push
nop
shlb
mov
xor
insb
leave
repz
sbb
xor
inc
ret
lret
rcrl
sub
jb
cltd
xchg
push
or
xchg
or
fwait
or
sub
movsb
mov
xchg
jb
out
repnz
push
jp
in
sub
ret
mov
mov
aam
scas
ss
push
or
out
xchg
scas
and
test
call
push
movsl
sbb
or
dec
jmp
jmp
stos
xchg
stos
xchg
daa
in
cltd
rcll
cli
or
cli
out
out
mov
xchg
mov
nop
mov
movsb
mov
repz
and
repz
sbb
inc
cli
stc
push
dec
jo
imul
mov
xchg
dec
pop
push
clc
cltd
jb
daa
sbb
xor
aad
imul
repnz
fmulp
or
cmp
jmp
adc
cmp
jo
or
ljmp
and
scas
mov
loop
mov
shll
loope
jns
mov
xor
dec
adc
clc
or
push
out
fdiv
out
inc
repnz
negl
mov
jnp
ljmp
xchg
push
jmp
and
test
notl
notl
hlt
imul
daa
test
xor
xchg
into
testb
sub
or
insl
stos
or
repnz
leave
or
sub
add
xchg
pop
or
mov
out
div
testb
push
fst
xchg
mov
scas
in
cmp
sub
sbb
dec
push
popa
imul
mov
cmc
dec
adc
cli
hlt
or
rolb
lock
aad
jle
push
jo
adc
lods
or
insb
clc
sti
mov
loope
jb
out
loope
jp
repnz
cvtdq2ps
cmp
test
sbb
in
roll
inc
repnz
repz
in
repz
dec
push
jmp
inc
jb
repz
repz
pop
repnz
jae
in
mov
in
repnz
pop
repnz
repnz
imul
xchg
push
jno
scas
pop
adc
repnz
sbb
cld
icebp
cmc
cmc
sbb
push
mov
in
push
and
push
cwtl
icebp
out
inc
mov
jne
in
xor
icebp
in
xlat
xorl
jmp
inc
mov
out
lock
push
js
push
mov
test
jp
imul
fnsave
in
mov
push
sub
ffreep
push
inc
jp
dec
cmp
inc
cmp
push
sti
cmp
cmp
lods
enter
dec
add
mov
push
mov
mov
mov
stc
xor
jmp
inc
cmp
dec
add
xchg
mov
xor
sti
inc
cmc
jmp
adc
jg
dec
int3
dec
push
nop
push
repz
popa
jns
adc
aaa
or
lahf
out
push
add
ss
dec
repz
sub
push
jecxz
repz
cmp
shrl
jae
insb
sbb
data16
in
push
push
aad
in
xchg
gs
popf
idivl
dec
outsb
or
mov
sub
and
cli
dec
xor
addr16
sbb
inc
mov
sbb
lea
inc
cmp
and
lret
test
insb
cmp
fstpl
xchg
pop
les
xchg
lods
jle
mov
jg
in
push
dec
repz
push
xor
movsb
movsb
inc
jmp
or
or
sbb
movsb
loope
inc
jecxz
ficoms
cmp
sbb
aaa
sub
mov
out
cltd
dec
sub
lea
mov
mov
daa
ret
lahf
mov
hlt
test
roll
inc
jmp
pop
jmp
xchg
xchg
pop
add
mov
and
pop
cmp
es
and
mov
cmpsl
or
sub
dec
dec
pop
sbb
xchg
je
or
insb
leave
gs
xchg
jno
mov
stos
sub
jno
sbb
dec
dec
jo
adc
popf
adc
adc
dec
adc
pop
xor
insl
jo
stos
adc
and
or
adc
hlt
psubsw
aas
aas
cmp
sub
dec
inc
cmpsb
dec
int
jb
mov
shrb
js
add
es
push
pop
push
pop
adcb
je
inc
and
add
lock
add
xchg
xchg
pop
cmp
js
pop
xchg
and
and
scas
add
push
rorl
test
nop
mov
pop
or
and
or
fwait
cltd
sbb
inc
sub
adc
pop
mov
pop
and
pusha
push
add
mov
sub
movsb
mov
adc
xchg
pop
inc
mov
cltd
xchg
rorl
or
popf
andl
subl
ds
xor
add
fcoms
lock
xor
xchg
inc
adc
mov
je
cmp
mov
fidivl
push
or
popf
mov
adc
mov
mov
lahf
sub
sti
iret
add
inc
xor
lahf
xchg
and
mov
push
lahf
dec
inc
sub
push
xor
and
or
and
stos
sbb
adc
and
call
add
fcomps
xchg
lret
fbld
sub
xchg
and
jmp
ds
add
jmp
inc
add
test
add
adc
cli
lahf
aaa
and
jb
outsl
pop
and
and
lahf
or
xor
xor
out
xchg
xchg
hlt
push
sbb
rorl
sbb
out
or
jb
or
lahf
aam
xorb
lahf
int
je
test
adc
sar
fcomps
rorb
lahf
imul
inc
dec
dec
dec
lcall
push
dec
dec
sbb
movsb
push
mov
cmp
cld
push
out
rclb
sbbb
sub
lahf
mov
mov
pop
dec
lahf
mov
dec
lahf
sbb
xor
add
and
push
lahf
dec
adc
enter
or
inc
adc
dec
daa
inc
mov
xor
in
loopne
movsb
pushf
inc
ds
or
inc
lahf
cmp
inc
ret
adc
xchg
pushf
cmc
add
push
jmp
out
nop
fdivs
aam
leave
jo
inc
inc
add
inc
dec
lcall
cs
cmpsb
loopne
sbb
push
call
daa
sahf
push
adc
loopne
frstor
and
xor
push
subl
mov
and
xor
mulb
jne
push
jmp
push
sub
fldenv
mov
mov
and
cmpsb
mov
enter
mov
rcll
pop
or
push
push
cmp
ret
push
xor
cmp
std
lods
and
and
mov
pop
enter
xorl
arpl
dec
or
dec
xorb
xchg
in
inc
lcall
and
ret
inc
arpl
shll
cmp
and
cmpsl
xchg
mov
clc
mov
call
jp
imul
pop
nop
sbbl
lods
nop
es
cmpsl
scas
sub
or
decl
outsl
enter
sti
hlt
jo
or
jle
push
popf
inc
cli
or
and
push
cmc
cs
or
add
xor
insb
psubusb
jo
sub
xchg
and
je
enter
loop
and
mov
pushf
movsb
cmpsl
dec
pop
aam
add
jle
jl
mov
sub
jmp
out
push
dec
or
add
movsl
addb
nop
jb
movsl
adc
xchg
and
jb
test
inc
lea
dec
mov
ds
loope
or
frstor
or
and
push
xor
jns
stos
cmp
or
cmp
in
aaa
popa
aas
ss
shlb
jns
je
xchg
insb
scas
movsl
sub
lods
push
je
xchg
cmp
loopne
inc
sbb
cmp
dec
or
cmp
mov
cmp
cmp
sbb
leave
push
xchg
cmp
into
dec
push
mov
sti
nop
outsb
mov
mov
xor
ret
cmp
pop
xor
popa
dec
cmp
jb
movl
mov
orb
mov
inc
dec
and
cwtl
cs
imul
and
mov
xchg
je
loop
sbb
dec
mov
xchg
inc
dec
xlat
inc
lods
mov
fs
mov
xchg
sub
shl
nop
sbb
cltd
xchg
xchg
push
push
shrb
test
push
int3
xor
loop
aad
rcll
rcl
or
jo
push
repz
cmp
cmpsl
cmp
loopne
cltd
xchg
shrl
call
jp
sub
sub
sub
sub
jecxz
push
dec
je
sbb
popf
imul
xchg
xchg
out
pop
insb
in
loope
xchg
es
int
mov
sub
xchg
sbb
xor
add
cltd
sub
int
sub
pop
cltd
xchg
cmp
shll
loopne
sub
or
adc
cmpsb
and
mov
or
xor
xor
lcall
rcll
sub
add
xor
sub
outsb
call
mov
imul
push
movsl
test
cwtl
imul
sub
mov
dec
inc
push
mov
shrl
ljmp
shll
cmp
mov
cmp
shr
xor
cmp
outsb
mov
jo
stos
cltd
xchg
dec
fs
mov
or
fsubs
jb
sub
sub
or
fwait
imul
sub
pop
outsb
addl
mov
call
cmp
pop
cwtl
imul
adc
xor
mov
jo
add
imul
xor
cs
jno
sbb
int
std
int
aam
pop
movsl
test
sub
fldcw
push
ds
jp
rcll
ss
hlt
shrb
mov
sub
nop
push
lea
and
popa
xor
push
shl
add
adc
shrl
pop
inc
adc
add
sub
xor
jo
aam
adc
rcll
mov
cltd
jbe
sub
inc
sbb
sub
sbb
int
cld
sbb
aaa
xor
sub
and
add
push
dec
inc
sub
xchg
dec
cmp
aam
rcl
test
call
cmpsb
mov
cmpsb
cltd
xchg
sub
pop
add
jge
and
test
rcl
adc
and
int3
xor
cli
or
sub
add
int3
sbb
lock
data16
add
test
or
or
bound
add
ss
xor
fucom
pop
data16
fistpll
sbb
in
call
push
sub
cmp
shrl
push
or
arpl
cltd
xchg
shrb
pop
inc
cmpsl
sbb
or
xchg
mov
lahf
fnsave
sub
or
add
sti
lret
mov
sbb
mov
cmpsb
sub
jbe
add
sbb
sub
cmp
xchg
and
mov
int
inc
push
push
sub
ret
imul
jp
hlt
lock
out
dec
push
inc
sub
lds
inc
les
cmpsb
mov
imul
je
sub
js
fwait
rcrb
sbb
sub
sub
xor
rcl
sub
xor
dec
inc
sub
rcrb
sub
xor
xor
xor
cmp
inc
push
xor
xor
dec
pop
movsl
mov
pop
cmp
lods
cltd
xchg
dec
adc
push
call
inc
xchg
popa
jo
ds
sub
rcl
xchg
xor
loope
adc
sub
jno
cmp
mov
mov
jmp
mov
aaa
imul
and
jno
aaa
dec
xchg
pop
xor
mov
repz
loop
test
sarl
stos
xchg
mov
orb
mov
lcall
cwtl
add
sub
pop
out
inc
push
mov
inc
loopne
inc
cs
cmp
push
addr16
inc
lods
ret
mov
nop
add
imul
cmp
stos
add
movl
ja
push
ja
sbb
add
into
mov
inc
dec
inc
sub
and
js
jb
pop
push
xlat
xor
cmpb
gs
ret
xor
add
lahf
es
add
xlat
jae
imul
cmpsb
mov
pusha
leave
adc
and
mov
dec
dec
push
cmp
sub
mov
push
loopne
inc
pushf
or
xchg
into
lret
fs
lret
scas
push
dec
mov
xchg
into
lret
lret
add
dec
push
xchg
scas
push
dec
orb
out
dec
je
add
js
sub
dec
test
dec
shr
xor
cmp
es
dec
insb
cmp
and
rorl
xchg
pop
stos
xlat
mov
jb
jae
popf
push
dec
push
cwtl
xchg
inc
movsl
pop
in
cmp
inc
dec
push
mov
xor
ljmp
dec
mov
shr
aam
mov
inc
cmp
xchg
push
jnp
in
cli
movsl
push
loopne
stc
mov
and
imul
inc
push
dec
ret
pop
mov
and
pop
test
and
outsb
sub
int3
mov
xchg
cwtl
pusha
adc
push
add
das
mov
add
arpl
fiaddl
inc
cmp
or
cmpsl
loope
scas
enter
adcb
insl
dec
inc
add
divb
inc
stc
adc
xor
cltd
int
jl
sbb
cmp
cmp
das
jmp
nop
push
ret
push
xchg
test
inc
and
jbe
push
loop
or
call
into
insl
inc
jmp
and
inc
mov
into
mov
nop
out
push
cwtl
inc
push
rcl
insl
dec
addr16
ret
in
inc
push
cmp
xchg
ret
idivb
inc
rcrb
sub
imull
inc
mov
insl
inc
dec
mov
aaa
jo
rolb
sub
shrl
les
inc
push
inc
out
sub
mov
and
inc
jmp
movsb
ret
and
inc
xor
loopne
movsb
inc
xor
loop
movsb
repz
inc
xchg
loopne
and
fldl
sbb
mov
sbb
pop
inc
clc
cs
shrl
call
pop
mov
outsb
jno
pop
dec
call
add
mov
dec
mov
xor
sbbb
and
es
mov
pusha
and
and
mov
inc
outsb
add
nop
or
fstpl
or
call
xchg
test
dec
mov
dec
enter
adc
or
mov
and
mov
mov
mov
and
sub
mov
xor
dec
mov
adcl
and
daa
xor
or
mov
scas
adcl
mov
ja
xchg
outsb
jae
shll
push
cmp
jbe
dec
cwtl
adc
add
mov
loop
call
inc
cmp
movsb
add
incl
jl
and
xor
je
add
mov
sub
insl
sbb
pop
add
mov
ljmp
inc
lea
pop
ljmp
test
mov
cmp
push
jmp
pusha
addl
pop
pop
sbb
adc
jns
push
pmaxsw
pop
inc
sub
repz
in
and
lods
out
call
call
add
pop
test
enter
gs
outsb
imul
inc
push
adc
out
inc
lret
mov
andl
inc
inc
pop
adc
insb
or
cs
mov
sbb
pop
mov
cmp
pop
push
mov
add
jb
outsl
cmp
sbb
call
add
pop
inc
push
fldl
fcomp
ss
incl
add
fsubl
lods
stc
test
daa
cmc
xor
lahf
push
movb
int
adc
inc
mov
cmp
push
inc
jmp
dec
jmp
xor
mov
rorl
inc
inc
adc
add
call
pop
je
pop
es
sbb
jg
je
add
sbb
and
mov
xchg
jmp
pop
ret
mov
stos
cmp
xorb
add
je
xchg
imul
pop
and
cmp
and
or
orl
sar
sbb
out
outsb
inc
add
xor
inc
jmp
ja
int
add
adc
push
enter
popf
pop
pop
fnstenv
mov
and
add
int3
adc
std
enter
arpl
add
loop
pusha
popa
push
mov
cmpsb
xor
mov
mov
mov
fmull
inc
cld
shll
call
cmp
div
shll
shl
shlb
jb
cmp
repz
jbe
jne
fisubrs
jge
push
push
or
inc
dec
mov
cmpsl
add
aam
orl
test
cltd
add
ja
cmp
xor
movzwl
loopne
adc
push
add
ret
push
sbb
cwtl
loopne
clc
inc
push
adc
xlat
xchg
dec
jp
sarl
xor
int
push
ss
pop
hlt
dec
sub
lcall
adc
sub
xchg
cmp
pop
and
test
nop
mov
xor
sbb
push
and
addr16
adc
bound
dec
arpl
mov
jecxz
inc
and
pusha
call
andb
mov
mov
add
sub
xchg
mov
stos
add
mov
in
orl
mov
das
xchg
test
out
das
or
xchg
or
cli
or
lock
mov
lock
addl
das
add
lret
rol
add
xchg
xchg
mov
xchg
xchg
lret
xor
aaa
add
add
inc
cmp
and
ljmp
iret
mov
mov
cwtl
js
add
stos
cmp
lods
in
push
insl
rorb
fadds
in
int3
call
dec
inc
aas
call
xchg
popf
push
sbb
xlat
cmc
fists
dec
adc
push
in
or
test
sbb
rol
push
push
sbb
push
rolb
add
sbb
dec
inc
pop
rolb
loopne
inc
sbb
aas
mov
or
imul
daa
ja
adc
rclb
in
mov
fcoml
mov
cs
jge
xchg
dec
adc
shrb
ds
xchg
push
add
pop
add
push
test
pop
inc
xor
add
aaa
pop
pop
inc
rol
ret
add
int
pop
insl
sbb
dec
lea
mov
imull
int3
push
int3
icebp
and
jmp
add
sbb
jo
adc
es
popf
testl
or
adc
xorb
das
xchg
adc
adc
pop
jmp
pop
rcll
cli
jl
jmp
out
fisttpl
movl
imul
or
cli
pop
pop
repnz
cmpsb
shlb
ljmp
xor
js
push
orb
or
inc
xchg
add
popf
mov
pop
add
pop
cmovb
rcl
hlt
dec
sub
pop
or
into
roll
and
mov
jns
test
jno
add
daa
daa
pop
rcrb
pop
mov
stos
movsb
repnz
mov
sub
pop
and
add
sbb
sub
addb
addl
stos
movsb
mov
jecxz
mov
outsb
xor
jns
rol
xorl
jns
daa
andb
lds
cmp
mov
inc
push
ret
or
nop
stos
add
adc
xor
and
xor
xchg
add
jne
mov
or
fcomip
shll
xor
and
repnz
enter
fsubl
xor
lcall
jo
jno
xor
xor
xchg
popa
or
add
add
rcrl
mov
jmp
into
sbb
mov
or
sbb
or
sub
pushf
clc
add
add
repnz
imul
bound
inc
add
xor
rcrl
sub
inc
ja
jno
sbb
xorb
xor
mov
outsb
xor
sbb
mov
push
push
sbb
rorb
xor
pop
push
ret
jb
and
push
inc
dec
sbb
mov
xchg
pop
in
xor
mov
sarb
sbbl
shll
fwait
pop
jmp
adc
and
in
xchg
lret
in
push
add
and
add
stos
add
xorb
in
pushf
dec
sub
inc
fiaddl
test
pop
sbb
sbb
sbb
adc
loopne
dec
pop
out
or
jmp
push
daa
outsl
and
sbb
jb
mov
nop
sbb
mov
stc
dec
test
push
and
add
stos
push
add
add
pop
jnp
aam
dec
call
jecxz
cmp
adcb
mov
shrl
clc
inc
stos
dec
sub
jne
cmp
xchg
dec
adc
dec
hlt
call
jmp
insb
mov
push
dec
fsubrl
out
call
push
mov
adc
pop
and
loope
sarb
adc
test
push
daa
pop
sub
inc
mov
mov
ja
rolb
pop
fdivrs
test
xchg
mov
hlt
xor
xchg
mov
inc
lea
out
ds
je
push
mov
outsl
sub
adc
fst
adc
adc
add
popf
divl
mov
jo
test
push
loope
xor
add
shlb
je
addr16
rcrb
clc
loope
addr16
push
call
nop
mov
sub
or
cmp
cmp
mov
mov
adcb
orb
sarb
xchg
into
in
lods
shll
lods
mov
andb
or
mov
mov
mov
mov
fldl
mov
mov
mov
or
test
xchg
xchg
lods
mov
daa
jl
cs
mov
ss
aad
dec
negb
test
mov
xor
mov
and
scas
shl
int3
push
fcom
dec
push
pop
pop
pop
push
xchg
fst
insl
dec
movl
dec
dec
pop
dec
xchg
push
aas
adc
addr16
cli
insl
dec
loopne
add
fidivs
insl
xor
mov
inc
or
pusha
aaa
push
pop
mov
aam
pop
call
push
dec
dec
hlt
ja
shr
push
and
adc
int3
jns
adc
cmp
mov
dec
dec
imul
xchg
pop
and
and
jns
sub
mov
jns
or
cmpps
stos
cmp
sub
xor
jns
call
pushf
cs
xor
dec
jns
in
pop
pop
lret
xchg
inc
outsb
push
and
and
mov
adc
add
mov
fisubs
arpl
int
inc
adc
or
push
and
xor
movsb
dec
enter
xchg
lds
pop
xor
inc
push
xchg
jns
call
jns
call
mov
int
shr
mov
ss
mov
stos
dec
jns
xchg
xchg
jns
int3
je
cmp
int3
mov
dec
push
and
mov
in
idivb
jns
fadds
arpl
rcrb
xchg
jns
ds
adc
xchg
jns
fcomi
cmp
push
xchg
nop
xchg
jp
push
xchg
rcrb
inc
jns
xor
adc
mov
movsb
xor
mov
mov
sub
pop
xchg
jns
inc
inc
negb
and
inc
or
and
push
test
jns
lcall
mov
xor
and
pop
adc
inc
jns
push
xchg
rcrb
jns
dec
enter
inc
inc
jno
push
jns
adc
stos
jns
adc
sub
and
stos
sub
mov
adc
jmp
cmp
jg
test
sbb
and
jbe
jns
xchg
sbb
mov
adc
sbb
adc
sbb
mov
or
int3
lds
cmp
adc
in
or
sub
jns
stos
dec
push
inc
out
iret
lds
inc
jns
aad
pushf
and
sbb
and
inc
mov
mov
jns
xorl
fs
rcll
call
jb
push
and
or
sub
jns
cwtl
mov
ret
mov
add
aaa
xor
aaa
insl
pop
mov
fs
sub
stos
pop
scas
cmpsb
dec
xchg
xor
dec
pop
bound
pop
das
stos
fs
loopne
xor
pop
and
sbb
cmp
scas
push
sub
dec
xchg
pop
pop
notb
clc
cmp
ret
inc
and
jmp
cwtl
or
pop
sub
rcrb
gs
mov
push
leave
shlb
popf
fnstcw
or
xchg
push
in
inc
xchg
pop
fiaddl
pop
dec
pushf
dec
xchg
ret
or
nop
mov
fucomi
adc
test
jae
adc
and
mov
dec
adc
das
xchg
push
or
fwait
push
push
push
jl
inc
and
pop
add
cmp
dec
cs
lahf
sbb
or
hlt
loopne
push
and
inc
or
dec
adc
pop
pop
cmp
inc
inc
arpl
shlb
adc
mov
popa
xor
das
cmc
bts
testl
das
call
push
das
inc
dec
inc
insl
jle
ljmp
dec
inc
sub
cmp
sbb
loopne
dec
adc
pop
sub
ds
mov
or
sub
push
cmp
sub
test
das
and
orl
pusha
cmpsb
out
and
jo
jae
dec
popa
or
dec
pop
inc
ss
pop
insb
enter
inc
scas
and
jnp
fs
sbbb
leave
jle
mov
pop
or
mov
add
sub
sbb
enter
dec
add
and
fnop
adc
repnz
or
sbb
mov
xchg
or
pop
and
mov
int
sub
inc
inc
adc
fs
sub
push
mov
or
xchg
testl
adc
mov
mov
imul
pop
repz
push
xor
mov
bound
and
xchg
dec
sbb
fs
or
test
nop
add
dec
call
push
popa
inc
pop
jnp
or
and
lcall
ljmp
icebp
or
push
pusha
cmp
es
push
push
aas
outsb
push
cwtl
rclb
inc
xor
cwtl
nop
jge
dec
xchg
test
sbb
mov
push
xchg
ja
bound
call
lods
inc
in
outsl
nop
or
jb
push
mov
es
dec
sub
ret
push
mov
adc
ret
orps
int3
je
test
call
mov
repz
xchg
stos
sub
cwtl
push
adcb
adc
and
push
rcrb
shr
xor
outsb
ja
xchg
std
dec
aam
or
inc
cld
xor
aas
xor
unpcklps
das
aad
push
mov
daa
call
in
xchg
aas
mov
adc
call
pop
mov
clc
lret
xor
lock
call
or
std
stc
repnz
int
inc
call
mov
in
pusha
movsb
lods
andps
movsl
pop
call
stc
pop
call
fs
in
xchg
das
insb
call
je
gs
sar
bnd
pop
jl
push
dec
movsl
fstl
std
inc
sbb
cmp
push
cs
mov
mov
nop
xchg
dec
in
sbb
push
cs
cli
lret
xchg
lret
movsb
in
cmp
mov
mov
jmp
shlb
xchg
mov
dec
mov
jle
jae
in
mov
mov
push
in
inc
aam
dec
in
cmp
xor
es
mov
cld
adc
add
fldl
or
loope
lret
jmp
sbb
sbb
and
and
sub
mov
jle
sub
push
test
gs
movsl
sbb
cs
adc
xchg
dec
in
or
and
push
inc
jo
inc
sbb
push
adc
and
lcall
dec
push
and
decb
call
inc
std
je
data16
jb
and
adc
and
int
inc
sbb
pushf
xor
push
and
or
mov
xor
daa
int
mov
rorb
ror
xor
dec
cli
daa
int
dec
mov
dec
mov
or
jb
arpl
push
je
rorb
push
arpl
outsb
inc
pop
addr16
add
xor
and
mov
add
xor
inc
xor
mov
push
cmp
subl
mov
fsubrl
xchg
stos
pop
mov
jne
mov
pop
stos
inc
adc
out
jmp
mov
adc
stos
mov
or
dec
stos
and
nop
push
xor
aaa
and
leave
loopne
aaa
sbb
lea
dec
fdivs
arpl
mov
add
add
cli
cs
ret
push
pop
adc
xor
inc
cld
or
imul
mov
inc
add
stos
mov
pop
sbb
pusha
lahf
and
cmp
add
dec
sbb
movsb
inc
shlb
call
push
or
cli
ja
pop
adc
adc
mov
mov
dec
inc
cmpsl
sarb
mov
xor
push
add
mov
sbb
xchg
adc
xchg
mov
fsts
mov
sbb
pop
rolb
cmp
inc
mov
or
pop
pop
adc
xor
aad
frstor
mov
mov
inc
into
jge
aam
pop
or
in
push
or
pusha
add
adc
or
aad
cs
push
add
mov
or
cmp
or
sbb
aad
rcrb
add
sub
aad
adc
and
fs
or
and
jmp
fs
ret
test
aaa
pop
fimull
stos
mov
sbb
pop
mov
outsb
inc
mov
sub
sub
call
inc
cmp
test
sbb
movsl
cmp
mov
ljmp
ss
cli
adc
pop
lds
pop
jecxz
push
in
push
mov
and
mov
sub
xor
adc
cmp
adc
mov
push
or
loopne
adc
inc
gs
hlt
lret
sub
jbe
xor
mov
ljmp
stos
dec
adc
mov
push
out
test
jmp
xchg
ds
roll
xor
adc
cmp
inc
sub
lods
dec
jmp
adc
push
xor
xor
mov
daa
shl
push
cltd
adc
dec
xchg
sub
repnz
cmp
sub
push
gs
jmp
cmpsb
add
add
adc
jo
sub
xor
adc
out
sub
adc
call
leave
nop
in
inc
fwait
shlb
xchg
adc
orb
scas
sub
mov
mov
adc
sub
and
mov
jns
call
inc
inc
cmp
xchg
cmp
and
inc
cmpsl
adc
lods
cmp
inc
cmp
cmp
mov
pop
sbb
cmp
xchg
jmp
inc
and
xchg
pop
shlb
adc
push
inc
clc
testb
pop
nop
add
test
enter
nop
inc
push
je
adc
push
inc
add
ja
push
push
xor
sub
jl
dec
sahf
adc
sbb
inc
pop
pop
lea
adc
pop
dec
add
cmpl
orl
push
inc
xor
leave
push
dec
test
pop
xlat
insb
sub
dec
sub
inc
xchg
push
lods
add
xor
push
mov
add
mov
mov
or
push
adc
repz
add
in
or
push
mov
int
add
jge
adcl
pop
gs
and
mov
popl
jns
jno
mov
negl
call
add
lea
adc
jecxz
xor
or
imul
js
or
lods
test
mov
dec
aaa
xchg
nop
cmp
mov
aaa
push
pushf
push
mov
aaa
add
popf
push
je
aaa
nop
cmpsb
sub
cwtl
adc
or
cmp
jl
popa
mov
adc
pop
mov
xchg
pop
inc
cmp
push
loope
mov
imul
movsbl
jl
aaa
je
nop
dec
imul
xor
orb
dec
dec
or
aaa
cmp
push
sbb
aam
mov
add
jmp
arpl
or
inc
retw
push
cld
add
and
and
mov
bound
sub
int
push
adc
out
push
iret
dec
or
jp
push
iret
add
rorb
iret
test
dec
imul
ret
add
dec
inc
adc
dec
and
and
fisttpll
into
mov
daa
cs
mov
popf
pop
add
call
adc
sbb
or
or
sbb
add
ret
jmp
add
push
mov
into
jle
mov
nop
loopnew
push
push
stc
and
jp
cwtl
dec
and
andb
push
mov
movsb
mov
dec
outsl
aaa
and
movsb
rcl
addr16
xor
fwait
loopne
addr16
xor
les
and
jmp
xchg
ret
add
push
sbb
add
jp
push
out
pop
scas
push
xchg
push
je
addb
push
sbb
add
pop
cmp
stos
rolb
xor
sbb
fcompl
xchg
adc
sub
xchg
adc
xor
nop
popa
mov
pop
rcll
push
pop
nop
jo
sbb
xchg
push
je
sbb
pop
xor
adc
addr16
daa
pop
in
fldcw
test
mov
jecxz
mov
adc
jns
adc
stos
add
js
mov
push
xchg
mov
test
mov
and
je
lret
shl
mov
rep
jge
inc
arpl
mov
gs
xor
mov
repz
mov
xor
test
nop
lret
and
lods
mov
aam
cwtl
mov
push
xor
out
mov
ja
inc
repz
gs
adc
repz
enter
repz
or
gs
loope
mov
repz
pop
push
lret
nop
xchg
cmp
pop
fdivl
add
sbb
ljmp
roll
mov
and
add
mov
andl
mov
movsl
sbb
mov
in
fwait
jg
outsl
add
enter
cmp
addr16
or
arpl
sub
mov
mov
out
call
mov
xchg
xor
sub
mov
push
jb
mov
adc
or
xor
lcall
add
dec
cld
sbb
or
les
stos
sub
test
mov
inc
jo
pushf
fistpl
adc
or
cmp
test
inc
ss
add
or
aam
orb
and
jo
add
sub
add
sub
mov
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
sub
dec
xchg
out
jb
adc
pop
jb
les
rcrb
loop
jb
insl
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
imul
in
xchg
add
jb
xlat
ret
aam
inc
mov
movsb
shl
stos
xchg
xchg
push
xchg
adc
pop
inc
fs
addb
shl
xchg
xchg
add
push
int
in
inc
jns,pn
cltd
test
jecxz
cltd
cmp
cltd
or
sbb
push
xchg
inc
sub
in
lds
xchg
cltd
adcl
adc
nop
push
cmp
dec
aad
inc
test
or
and
rolb
add
and
push
mov
push
sbb
dec
iret
jle
pusha
or
cmp
add
and
int
jns
or
sbb
ret
iret
repz
sahf
mov
iret
repz
push
ds
or
mov
call
add
repz
lods
push
mov
cmp
cmp
sub
push
sahf
out
fists
xchg
jl
push
out
out
inc
cmpb
push
push
pop
dec
cmp
sbb
cmp
sarl
fmulp
mov
repz
mov
ret
into
sbb
lahf
out
out
add
es
loop
sbb
out
aam
mov
xrelease
sbb
out
sahf
out
scas
lret
iret
repz
or
and
pop
data16
repz
test
iret
repz
fsubrp
sbb
repz
ss
inc
push
sarb
out
pusha
inc
out
jb
jle
sahf
mov
mov
rol
loop
clc
adc
sub
pusha
testb
sbb
je
fs
push
cmp
push
daa
pop
mov
jbe
cmp
cli
jbe
insl
push
jnp
push
cwtl
cmpsl
insl
mov
iret
dec
test
mov
mov
fidivs
xchg
push
jbe
push
scas
test
sub
pop
les
jmp
mov
out
inc
addps
pop
out
add
xor
push
lret
pop
jle
sub
sub
scas
lea
inc
or
dec
push
je
outsb
xchg
inc
mov
add
fwait
push
outsl
push
add
ja
or
push
jno
mov
es
ja
mov
and
daa
rcll
flds
aaa
outsl
or
jo
mov
pop
fsubs
rol
pop
mov
push
ret
out
xor
sub
sub
push
jl
push
dec
cmp
or
das
outsl
push
mov
mov
incl
jae
int
xchg
jae
or
or
push
imul
mov
add
orl
cmp
fcom
jno
or
and
inc
and
mov
pop
inc
sbb
sub
inc
cs
outsl
adc
mov
daa
add
cmp
inc
dec
sbb
cmp
mov
dec
or
das
jg
mov
add
cmp
rsm
jecxz
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
int3
fwait
lret
shrb
rorb
cmpsb
xchg
jb
inc
sub
jo
popf
cmc
pop
insb
sbbl
cmc
and
pop
dec
imul
mov
jae
inc
jne
fcomps
dec
loope
je
arpl
xor
pop
mov
ss
inc
xor
pushl
xor
xor
cmp
sub
inc
inc
xor
xor
mov
mov
xor
jge
xor
xor
inc
xor
xor
ss
pushl
sub
sub
cmp
xor
clc
inc
inc
xor
mov
aam
mov
bswap
faddl
jne
test
xor
jo
lret
fidivrs
cmp
add
xor
or
push
loope
and
inc
aaa
adc
xor
inc
pop
dec
add
mov
jl
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubrl
cmp
ss
pushf
xor
inc
jno
rolb
dec
outsl
mov
xor
xchg
test
mov
int3
in
scas
mov
ss
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
iret
sarl
xor
sub
out
cmp
in
xor
in
mov
lods
sahf
imul
add
movd
mov
iret
jo
ljmp
xchg
loopne
add
jg
mov
scas
test
and
outsl
xor
jno
ljmp
push
ss
je
push
push
insw
int3
lret
push
inc
cmp
adc
mov
sbb
inc
push
in
cmp
sub
cmp
lods
scas
fldt
inc
mov
and
sub
push
sarb
inc
arpl
insb
mov
test
aaa
xchg
and
outsb
ret
lret
xor
fs
add
dec
inc
xor
rcrb
cmp
add
insb
daa
pop
push
push
out
pusha
pop
pop
add
imul
pop
and
adc
insb
mov
out
push
and
jl
jb
and
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
jo
jo
test
jecxz
cwtl
dec
fwait
sbb
imul
jp
push
cwtl
movsb
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
ja
fldenv
fildll
adc
pop
xchg
push
popa
imul
add
fs
cmc
xor
or
sbb
fdivl
pop
pop
add
and
push
add
mov
xor
adc
push
repnz
adc
sbb
mov
xor
dec
rorb
aas
inc
or
or
xchg
xchg
and
xchg
pushf
add
sbb
push
add
xor
jg
inc
mov
inc
adc
or
ret
enter
or
mov
fadds
sahf
out
es
orb
or
sarl
adc
xchg
add
adc
xchg
adc
push
cmpsl
stc
cmp
sbb
sbb
sbb
sarl
sbb
std
sbb
push
out
iret
jae
push
pop
nop
cld
and
mov
js
jns
stc
out
sahf
imul
cld
fdivr
add
cmpsl
inc
dec
cwtl
pop
sbb
add
mov
aad
mov
out
les
or
pop
mov
and
lds
add
movups
test
push
ds
cmp
sbb
test
push
dec
popl
jns
iret
lods
adc
push
cld
or
in
jns
out
int3
les
movsb
xor
out
out
nop
mov
mov
jl
insb
push
repz
pop
mov
out
sahf
dec
dec
inc
inc
cmp
cmp
repz
xor
sub
and
repz
and
adc
or
iret
repz
add
cld
or
jns
out
hlt
call
jns
out
movsb
nop
jo
iret
sarl
adc
pop
int3
mov
cmp
repz
inc
sub
adc
sahf
out
or
push
fcom
out
sahf
out
cwtl
js
sub
repz
add
add
mull
cmp
cld
add
call
les
mov
or
pop
inc
pop
pop
les
adc
pop
pushf
mov
loop
and
mov
xor
jnp
and
sub
adc
mov
xor
pop
push
inc
dec
cmp
js
or
testb
stos
add
mov
and
lods
inc
adc
lock
sub
push
jecxz
sbb
dec
push
roll
aas
mov
mov
jno
cli
out
dec
and
pop
lods
cwtl
and
sub
lds
push
jmp
ss
pop
mov
sbb
jmp
mov
jae
jbe
decl
adc
les
xchg
outsl
movsl
inc
dec
add
js
shrb
mov
pushf
andb
rolb
ret
jns
pop
push
add
adc
rcll
andb
add
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
test
rcrb
add
jne
pop
adc
insb
add
call
xor
push
je
imul
inc
xchg
pop
dec
mov
arpl
imul
xor
decl
or
jne
adc
jo
bound
xor
dec
daa
jo
jnp
push
push
push
insb
das
inc
xlat
lods
and
outsl
jl
lods
pop
mov
ja
lahf
pop
lods
or
mov
loopne
leave
jae
add
mov
mov
nop
or
and
and
int3
dec
enter
inc
sub
enter
aas
jg
fmuls
in
push
cmp
insb
xchg
aas
sete
adc
test
jae
ljmp
add
mov
jecxz
in
scas
pop
rcr
addb
cltd
ss
lcall
xchg
mov
push
lret
les
mov
and
inc
or
push
popf
jl
sbb
jo
in
push
aas
sbb
jg
cmpsb
jg
mov
popa
dec
and
or
mov
adc
and
mov
jb,pn
jecxz
enter
pop
dec
push
adc
cmp
sarl
jnp
out
shl
adc
dec
arpl
data16
insb
adc
fs
imull
dec
mov
xor
dec
jecxz
sahf
loopne
daa
imul
ja
leave
sbb
dec
mov
push
push
xor
fcmovbe
mov
dec
pop
sbb
pop
add
dec
sbb
inc
je
dec
cmp
les
jge
ltr
std
stos
push
jb
push
lcall
sbb
push
and
clc
outsl
dec
insb
add
push
push
add
push
outsl
ja
xor
cmc
xchg
lcall
lret
gs
sub
add
ja
or
movsb
and
sbb
rol
dec
inc
repnz
sarl
test
lods
or
in
mov
ljmp
mov
add
mov
push
jb
or
mov
adc
inc
add
imul
arpl
add
outsb
push
add
push
imul
add
push
mov
jae
outsb
iret
mov
push
jae
push
popa
sbb
sub
mov
jb
inc
mov
pop
fmuls
out
adc
cmp
push
jae
inc
addb
push
jno
mov
push
add
and
es
dec
add
pop
rclb
inc
push
mov
push
push
sbb
das
push
mov
dec
or
cmp
push
jo
jb
js
out
fidivrl
imul
xchg
testb
cmpsl
sbb
push
lods
cmpsl
xor
mov
sbb
imulb
xchg
adc
mov
inc
and
pop
jnp
inc
pusha
inc
and
mov
push
inc
sub
and
in
lret
push
cmpsb
xchg
xor
testl
sub
adc
inc
add
adc
push
fbld
jne
ret
fisubs
gs
or
flds
inc
rolb
fstpt
push
jecxz
jo
es
pop
push
ret
sarb
cmpsb
mov
dec
inc
dec
jmp
cmpsl
jno
push
nop
pop
ds
inc
sub
xor
pop
dec
xor
dec
lock
pop
icebp
ss
cltd
mov
call
sbb
out
mov
fidivrl
and
adc
jecxz
inc
push
call
popf
lea
lahf
outsb
xor
adc
and
or
dec
add
shlb
push
sarl
pop
outsl
sub
dec
mov
shrb
inc
add
stc
add
push
lcall
orb
mov
add
push
dec
dec
dec
bound
pop
pop
pop
addr16
inc
jns
insl
mov
arpl
lds
mov
lret
fimull
outsl
cmp
sarb
xchg
dec
and
clc
aad
roll
push
adc
add
sbb
cmp
testb
sbb
lock
jecxz
mov
add
xchg
popa
xorb
push
js
loopne
mov
sbb
mul
adc
mov
inc
jmp
sbb
das
push
mov
dec
inc
dec
pop
or
adc
jb
aas
inc
cmc
lods
inc
inc
sbb
out
jnp
ja
xchg
jno
stos
enter
xor
xor
mov
jp
mov
pop
jnp
stos
iret
add
jo
add
add
outsl
inc
movsl
rcl
pop
mov
fs
xor
sub
daa
dec
ds
xor
cmpsl
aam
pusha
push
jo
jno
mov
loopne
arpl
dec
xchg
mov
in
jmp
or
ljmp
dec
imul
add
mov
int
sbb
lret
xchg
into
out
outsl
cli
mov
fwait
inc
cmpsl
add
push
mov
jo
jo
imul
push
push
test
sub
imul
jns
bound
clc
add
inc
jae
adc
sbb
inc
jmp
push
je
ja
add
jno
outsl
xor
and
add
xor
xchg
sub
out
jno
rol
out
into
insb
lret
pop
mov
sbb
add
cmp
cmp
push
dec
xor
sbb
push
sahf
ret
fbld
lret
fbld
jae,pt
rclb
ficomps
mov
push
popa
sbb
scas
std
fwait
xchg
and
push
and
inc
cwtl
insb
adc
jecxz
addb
xor
in
mov
sbb
jae
lock
and
mov
add
pop
pop
push
insb
push
sbbb
xchg
pusha
idivl
sub
iret
icebp
pop
and
outsl
mov
add
sahf
and
add
inc
mov
mov
add
add
xor
pop
gs
cmp
lods
dec
cmp
inc
xor
sti
fsubrl
push
orl
push
ret
int3
jo
pusha
jmp
pop
pushf
xlat
or
hlt
mov
rcrb
push
add
adc
daa
adc
add
test
gs
adc
push
mov
and
daa
sbb
jns
xlat
mov
or
repz
add
out
lock
repz
mov
jns
rep
test
pop
mov
sahf
cwtl
xchg
nop
mov
jo
pusha
push
pop
push
repz
repz
cmp
and
shrb
sbb
cld
in
lock
loopne
fmul
repz
ror
sarb
cmp
je
push
cmp
cmp
repz
and
adc
imul
in
hlt
in
lahf
out
sahf
in
int3
mov
sahf
mull
xchg
push
mov
js
push
iret
repz
and
or
adc
popf
jmp
lea
or
add
add
push
or
push
cmp
mul
and
sahf
lcall
and
out
idivl
mov
push
nop
insl
and
sbb
and
and
testl
inc
adc
idiv
adc
fildll
pop
jg
fs
inc
dec
pop
mov
cmpsl
mov
and
sbb
jmp
or
daa
movl
dec
pop
je
push
jne
xor
test
cs
and
addb
insl
mov
push
pop
jo
add
add
xor
add
fcoml
loope
push
xchg
and
inc
and
outsb
push
push
jae
and
sub
icebp
pop
adc
xor
and
sbbb
xor
rorb
and
cmp
or
fwait
xor
insl
mov
and
xor
repz
imul
sbb
cmp
pop
loope
and
and
add
jbe
add
sbb
jb
jne
sbb
mov
popa
insb
into
fdivs
das
sti
sbbl
jmp
push
sbb
inc
add
inc
pop
pop
adc
in
and
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
pushl
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
dec
xor
xchg
shll
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
lcall
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
or
out
out
cmp
cmp
cmp
sub
ret
add
push
lock
idiv
shr
cmpb
xchg
add
adc
and
dec
pop
lock
pushl
push
xor
xor
js
popf
xor
xor
xor
xor
decl
push
xor
xor
xor
xor
xor
xor
loopne
jmp
jge
xorl
xor
jge
mov
xor
xor
fidivl
cld
mov
les
fnsave
out
xor
ljmp
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
inc
lret
aaa
loopne
add
or
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmp
nop
cmp
cmp
cmp
push
adc
cmp
cmp
nop
hlt
cmp
cmp
pop
cmp
imul
cmp
cmp
lcall
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
addl
aas
cltd
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
pushl
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
incl
add
daa
xor
xor
xor
pop
xor
jo
xchg
xor
push
xchg
aam
inc
xor
xor
xor
xor
jl
jmp
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
xor
dec
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
clc
xchg
adc
pop
push
or
cmp
cmp
xchg
pop
xor
push
xor
xor
xor
xor
xor
jg
clc
hlt
xor
xor
ret
xor
xor
aas
jg
call
xor
xor
xor
test
mov
mov
nop
xor
cwtl
xor
lock
clc
xor
cmp
ljmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
loop
call
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
test
loop
cmp
xchg
adc
sbb
jg
sub
das
cmp
ds
fidivrl
jmp
cld
andb
xor
mov
ss
ss
xchg
mov
cwtl
cmp
test
lods
cmp
cmp
mov
cmp
inc
std
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
jg
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
in
cs
mov
and
sub
mulb
xor
xor
xor
fisubrl
jg
xor
xor
loop
xor
xor
xor
mov
lcall
jge
xor
xor
scas
std
xor
cmpsb
data16
ss
ss
pushl
or
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
sbb
pushl
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
decl
cmp
pusha
cmp
mov
cmp
cmp
sbb
push
clc
pop
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
jg
nop
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
pushl
cld
cmp
cmp
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
mov
dec
cmp
inc
cmp
pop
cmp
push
cld
decl
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
sbb
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jmp
daa
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
hlt
jg
mov
and
sub
cmp
jb
mov
jg
pushl
lret
xor
xor
xor
xor
mov
jl
cmpsl
xor
clc
fnsave
add
scas
jno
xchg
xor
xor
xor
std
mov
push
xor
xor
mov
ret
aaa
xchg
aaa
fwait
hlt
jg
jge
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
jmp
fistpll
in
mov
or
cmp
cmp
cmp
cmp
push
or
nop
sbb
xor
cld
decl
xor
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
jg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
and
outsb
cmp
mov
pop
clc
jg
cmp
ja
lahf
xor
xchg
aas
push
mov
scas
pop
inc
xor
mov
xor
xor
jg
test
jl
fiadds
aaa
mov
jmp
repnz
or
cmp
jmp
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
fbstp
cmp
mov
and
cmp
cmp
mov
std
fdivrs
push
aas
jne
mov
or
jg
jg
mov
fwait
xor
xor
dec
or
lock
sub
aas
xor
divl
pop
xor
incl
mov
fsub
adc
es
dec
ss
outsb
idiv
or
movsb
ss
enter
in
and
cmp
cmp
cmp
mov
pop
mov
mov
push
cmp
pop
push
imul
cmp
call
loopne
cmp
cmp
dec
cmp
cmp
lcall
pusha
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
adc
sarb
inc
cmp
orb
cmp
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
push
push
subl
aad
jne
mov
push
xor
aad
aas
shlb
cmp
or
xor
xor
xor
xor
xor
mov
pushl
xor
xorl
add
xor
ds
dec
aaa
pop
aaa
or
jg
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
scas
incb
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
or
or
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
lahf
js
clc
loop
out
out
pop
rclb
sub
pushl
loope
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
hlt
push
mov
xor
xor
js
xor
xor
or
daa
pop
ljmp
jg
xor
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
notl
cmp
cmp
ljmp
xor
xor
aaa
lcall
inc
xor
xor
lcall
decb
lods
xor
or
mov
xor
xor
sar
repnz
xor
cmp
sub
sub
xor
pop
cmp
inc
cmp
cmp
cmp
ljmp
push
mov
fidivs
cmp
cmp
mov
lahf
and
push
mov
rclb
cmp
mov
cmp
cmp
mov
cmp
mov
lock
dec
cld
push
add
sarb
or
adc
sbb
and
and
sub
sub
icebp
pop
cmp
xor
cmp
inc
cmp
cmp
lcall
jg
pop
cmp
cmp
insb
cmp
je
jo
cli
jl
cmpb
push
mov
nop
xchg
cwtl
es
pop
pop
mov
sub
xor
inc
mov
decl
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivr
jge
lock
loopne
clc
jbe
push
or
xor
filds
cwtl
xor
xor
inc
xor
xor
mov
nop
xor
xor
fsubl
cmp
mov
mov
xor
pusha
xor
pop
popa
and
fimuls
xor
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
cmp
hlt
ss
ss
add
add
or
or
adc
adc
aaa
sbb
and
aas
cli
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
test
call
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
mov
aaa
xchg
aaa
cwtl
into
mov
dec
decl
xor
enter
shlb
aam
fdivs
fcompl
and
lock
hlt
sub
inc
xor
aaa
hlt
add
or
adc
ja
push
loopne
cmp
out
mov
ret
fdivrl
mov
cmp
pop
jmp
cmp
cmp
cmp
sub
cmp
cmp
pop
divb
cmp
push
cmp
ljmp
test
mov
mov
cmp
mov
mov
cld
mov
cmp
xorb
pop
stos
add
movsb
fs
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
lret
aaa
mov
aaa
stos
mov
push
lret
aaa
ljmp
add
aas
push
aaa
mov
sub
pusha
mov
xchg
lahf
push
xor
stc
xor
movsl
dec
loope
addb
in
or
cmp
or
dec
add
add
mov
hlt
push
out
sub
test
out
xor
test
push
xor
sub
or
add
sub
insb
leave
repz
mov
cwtl
jo
rcrb
rol
pop
aam
or
fs
out
push
pop
xor
cmpsb
dec
pop
or
mov
pushf
daa
sub
mov
push
sub
xor
ret
add
aas
jl
fsts
gs
inc
leave
xchg
jo
or
fs
mov
gs
and
loopne
sbb
push
mov
and
popa
adc
outsl
and
and
mov
add
inc
call
xchg
inc
popf
xchg
cmp
test
je
jae
xor
and
bound
jle
cld
inc
in
and
jl
or
incl
jb
fisttps
inc
mov
cmpsb
xor
mov
leave
xchg
lock
call
test
addr16
xchg
and
xchg
or
sub
and
jbe
call
fwait
push
in
jecxz
add
push
mov
mov
lahf
cmpsb
jge
je
mov
adc
add
push
rcrl
jp
mov
movsb
jle
fbstp
jmp
fadds
out
fcmovnbe
or
push
dec
ss
adc
test
lock
pop
in
or
movsb
or
sbb
int
add
or
out
jbe
pop
andl
xor
les
das
or
push
add
pop
sbb
sbb
outsl
cwtl
lret
mov
add
pop
std
sub
lea
fs
out
cmc
mov
jmp
in
sub
inc
cmp
jne
negb
mov
std
adc
inc
add
inc
pop
jmp
adc
push
call
mov
inc
add
adc
dec
cltd
ljmp
mov
xchg
or
sub
or
inc
cmp
cltd
adc
int
pop
push
add
dec
add
pop
aaa
movsl
push
clc
pop
add
mov
adc
add
pop
jbe
inc
loop
sbb
sub
jo
xchg
popa
movsb
jbe,pn
sbb
je
enter
cld
pop
fldl
and
push
pop
sarb
jo
inc
or
ss
aas
lea
sbb
inc
daa
fwait
je
clc
fnsave
cmp
or
add
dec
test
mov
sbb
mov
xchg
test
mov
lods
adc
mov
add
mov
lret
add
iret
inc
mov
out
adc
adc
jb
adc
lea
push
fisubs
fsubs
sarb
mov
ror
outsb
push
mov
push
in
adc
add
fimuls
and
mov
jecxz
adc
loop
pushl
mov
push
stos
add
xor
loope
xor
mov
aad
pop
push
mov
cmp
pusha
dec
or
js
sub
pop
stos
rclb
mov
test
mov
mov
mov
sarb
sub
and
in
cmpsb
sub
sbb
out
mov
int3
lock
subl
or
or
leave
leave
inc
jo
xchg
mov
ret
adc
xor
mov
cmp
mov
cmp
or
fildl
jmp
and
mov
rol
jl
adc
xor
loop
lods
adc
adc
or
gs
push
adc
popf
adc
movb
xor
orl
cmp
pushf
cmp
call
cmp
cmp
lahf
jmp
cmp
dec
inc
gs
mov
xor
add
test
lret
mov
dec
lods
push
inc
in
mov
and
in
mov
loope
mov
aaa
push
push
mov
pop
aaa
je
mov
test
add
or
inc
jmp
cmp
scas
stos
stos
xor
sub
pop
pop
mov
mov
or
add
adc
pop
aad
mov
inc
mov
mov
out
mov
sbb
mov
and
je
push
push
sbb
inc
mov
nop
inc
dec
sub
adc
sbb
arpl
xchg
pop
cli
sbb
iret
loopne
dec
sbb
pop
notl
pop
xor
lock
jl
dec
mov
jnp
call
mov
stc
jbe
ret
call
call
dec
pop
sahf
jbe
jne
sub
inc
and
xchg
push
adc
sti
mov
push
cmp
popa
or
nop
lods
push
cwtl
scas
or
jb
push
and
jmp
sub
sbb
call
add
adc
fsubl
fimuls
test
jge
or
pop
mov
push
add
cmpsb
push
add
xchg
add
and
sub
popa
inc
add
pop
dec
adc
outsb
add
stc
sbb
jno
and
or
pusha
sub
add
adc
in
gs
movsl
mov
sbb
xor
push
add
sub
sbb
or
mov
adc
mov
cmp
or
xor
and
pop
adc
or
xchg
xchg
and
adc
call
or
mov
mov
add
dec
push
fisttpl
cmp
sbb
xor
in
mov
add
pop
fistl
into
sti
or
insb
subb
ret
cmpsb
add
insb
push
pushf
lret
jl
fs
push
fistpl
shl
jne
cmp
adc
mov
xchg
rcrb
ss
jae
hlt
jmp
nop
shlb
mov
lret
and
addr16
sub
jae
and
sarb
pop
nop
and
aam
ljmp
sub
fnstcw
mov
loopne
add
mov
sbb
and
lea
inc
mov
fidivrs
push
insb
fs
push
xchg
jns
push
dec
inc
roll
jmp
test
mov
push
ja
sub
and
sbb
in
movq
and
divl
adc
xor
pop
nop
inc
push
fs
add
jg
push
push
pop
mov
sub
push
addr16
repz
outsb
mov
push
call
sahf
cmpsl
cmp
push
or
and
add
fwait
inc
cmp
inc
push
push
push
addr16
adc
add
xlat
xchg
inc
mov
inc
enter
stc
inc
xchg
or
mov
rolb
push
cltd
dec
inc
xchg
cltd
mov
rorb
jb
hlt
adc
inc
imul
mov
in
jl
mov
cltd
xchg
push
stc
adc
inc
push
call
ja
jnp
mov
pop
or
pushf
stos
jnp
repz
aad
out
call
or
popa
stos
ret
cmpsl
push
push
xchg
adc
cmp
enter
daa
or
daa
push
xchg
add
dec
rcrl
daa
daa
daa
adc
dec
shll
daa
daa
movsb
imul
sbb
jae
sub
sub
sub
add
xchg
sub
lcall
sub
cmpsb
imul
rcll
sub
sub
sub
dec
testb
or
jp
jo
cmp
shlb
mov
sub
or
daa
and
sub
insl
jns
push
cltd
push
xor
push
nop
imul
jl
sbb
fstps
fwait
dec
in
push
lock
jp
or
clc
fs
sub
or
sbb
addl
and
call
and
and
divb
add
or
xor
and
sub
enter
mov
adc
pop
adc
addr16
push
rcl
rcrl
cmovl
enter
hlt
pop
sub
movsl
jle
movhpd
in
mov
adc
mov
push
cmp
or
adc
repnz
es
inc
and
test
sub
and
sahf
xchg
test
scas
xor
adc
xor
into
out
adcb
inc
loopne
addl
addr16
cmp
inc
fstpl
sub
call
lcall
inc
xchg
cltd
mov
int
mov
and
jmp
add
mov
or
scas
pop
mov
jb
icebp
pop
mov
rolb
pop
sti
inc
ret
and
add
les
ds
cltd
cwtl
pop
push
call
enter
xor
imul
inc
mov
loop
sbbl
outsl
cltd
mov
mov
push
xor
and
cltd
or
cwtl
fmull
pop
cmpb
sbb
add
dec
mov
mov
or
sti
sbb
test
mov
scas
mov
cltd
aaa
nop
jo
adcb
xchg
ljmp
add
inc
data16
mov
adc
lods
mov
mov
sub
shlb
inc
sub
adc
daa
or
inc
mov
xlat
push
adc
mov
mov
insl
xchg
xchg
jmp
outsb
adc
dec
shlb
inc
mov
js
adc
sti
out
and
sub
dec
inc
outsb
imul
pop
push
add
and
xchg
push
mov
adc
mov
inc
enter
pop
aam
pop
in
xor
pop
sbb
dec
adc
stos
ljmp
dec
jnp
sub
loopne
andb
dec
inc
imul
aam
adc
adc
in
fisubs
mov
sub
adc
sub
add
inc
jne
nop
sub
loopne
inc
pop
mov
fucom
add
or
inc
call
adc
ss
sub
pop
adc
test
pop
push
adc
push
pop
jmp
pop
or
andb
mov
or
inc
pop
ss
or
adc
mov
mov
adc
push
xchg
adc
sbb
add
subl
mov
adc
scas
xorb
pushf
pop
adc
pop
add
je
mov
jb
jmp
adc
adc
fcoms
or
cld
fstps
pop
test
cs
dec
in
push
rorb
mov
xchg
adc
pop
enter
mulb
pop
add
cs
inc
or
pop
and
movsb
fwait
mov
pop
push
sbb
and
mov
push
xor
and
add
mov
ret
fwait
pushf
adc
imul
fldl
mov
pop
xorb
loopne
xor
shlb
pop
mov
inc
xor
movsl
hlt
pop
fs
mov
xchg
fs
push
fs
inc
dec
dec
dec
addr16
inc
pop
cmp
xchg
pop
nop
pop
mov
mov
mov
push
call
nop
out
jg
pop
dec
adc
cmp
outsl
adc
fdivs
lds
mull
pushf
sub
loop
les
dec
pop
dec
or
lods
jecxz
inc
pop
call
xor
enter
std
pushf
out
add
sub
test
pushf
nopl
jo
nop
rorb
movsl
addb
xchg
inc
cmp
out
add
and
dec
xorl
jno
imul
insl
xorb
add
xor
xor
push
sub
pop
xor
pop
call
ja
cmp
push
add
xchg
add
lods
sbbl
cld
xchg
nop
seto
xlat
inc
popa
lret
cmpb
aas
sub
push
sub
or
cmpsl
pop
fstpl
cwtl
sub
ffree
loop
cmpsl
pusha
ss
in
sub
fdivl
mov
fwait
cli
or
xor
push
sbb
in
or
fsts
pop
repnz
fdivl
aam
push
mov
pop
lods
lret
call
push
test
dec
out
mov
enter
rorb
cmp
cmp
mov
dec
lock
out
das
inc
push
add
adc
push
int3
dec
fmul
inc
stos
arpl
and
data16
fisubl
loop
dec
frstor
shlb
loopne
xchg
iret
xor
je
fs
push
pusha
inc
ds
clc
pushf
data16
sbb
xor
in
loopne
nop
loopne
nop
push
dec
and
loopne
sub
jb
in
repnz
add
andb
or
movsb
imul
push
daa
sub
shr
adc
or
add
movsb
daa
jnp
add
movsb
daa
fwait
call
andl
or
xor
loopne
inc
ret
andl
adc
cltd
movsl
and
xlat
mov
es
inc
ret
push
cltd
push
inc
ret
jge
push
mov
popf
in
xlat
inc
mov
fcoml
mov
push
push
adc
jl
test
rorl
xchg
loope
cld
push
push
inc
jmp
or
cltd
cmpsl
mov
std
or
in
popf
fisttpll
leave
out
lea
add
mov
push
adc
js
adc
jns
lret
fdivr
loope
dec
push
xorl
inc
sbb
jle
inc
or
addb
push
lret
add
cmpb
fdivl
fdivrl
inc
mov
and
cs
adc
inc
ss
cmpb
dec
mov
push
outsl
push
sbb
shll
adc
call
inc
sahf
mov
int
xor
adc
subl
pop
xor
pop
adc
in
cmc
mov
xchg
lea
add
mov
jmp
ret
call
push
jns
mov
xchg
and
je
xchg
xor
push
add
ret
mov
xchg
js
jl
push
cmpsl
rorb
addb
mov
or
xchg
inc
push
mov
add
mov
inc
inc
icebp
gs
or
and
and
pop
cmpb
jl
xor
test
push
inc
adcb
addb
jp
sub
pushf
inc
pop
inc
sub
jge
add
or
out
or
mov
dec
pop
arpl
mov
sbb
sbb
insb
ret
popf
jecxz
jne
xchg
adc
filds
sbb
or
adc
stos
and
filds
filds
inc
cltd
sbb
ss
cmp
in
xchg
pop
dec
pushf
push
cmpsl
xchg
inc
xchg
push
fadd
cmc
shrb
adc
sbb
cmp
xor
inc
sub
mov
jae
dec
fsubl
xor
mov
out
mov
fiaddl
pop
push
xchg
adc
pusha
inc
adc
inc
insl
xchg
sub
pusha
inc
insl
xchg
sahf
es
push
inc
xchg
into
enter
xchg
lret
fstps
jns
js
cmp
sahf
push
fldcw
inc
insl
roll
jns
rcrl
sahf
in
aam
xchg
or
cmc
rcrb
push
test
xorb
and
add
mov
or
add
mov
or
repnz
leave
rclb
cmpsl
pop
xchg
inc
mov
imul
leave
rorb
insl
fdivrl
rcrb
xor
dec
out
jns
xchg
imul
sub
add
ljmp
cmp
mov
lcall
dec
xchg
xchg
mov
movsl
pop
mov
xchg
lods
jl
add
jmp
js
dec
call
pop
mov
sub
sub
xor
pusha
bound
stos
lret
orb
jbe
lcall
adc
push
int
fldl
or
test
jb
sub
aam
fcoml
cmpsl
lret
and
pushf
or
adc
ss
inc
push
cmpsb
in
ds
lea
cmpsl
mov
aaa
mov
loope
xor
int
inc
lods
jne
repnz
leave
call
adc
push
int
sbb
loopne
jb
jge
int3
push
pop
das
push
in
mov
dec
int3
pop
insb
push
aad
ljmp
jmp
shrl
jo
push
inc
andl
pop
mov
lods
inc
cmp
cmp
dec
inc
fldl
test
adc
and
sub
ss
lcall
cs
pop
xchg
mov
inc
or
pop
loopne
mov
add
fildl
xchg
xor
not
lds
add
lods
adc
aaa
add
enter
mov
and
mov
push
das
push
push
and
fistl
xchg
inc
and
pop
iret
ret
xchg
mov
in
xchg
xchg
mov
fistl
sub
add
push
pop
cmp
ret
add
fildl
imul
inc
or
or
inc
or
mov
fidivrl
mov
sub
push
cmpb
jno
in
dec
loopne
aaa
out
jns
push
push
rcl
test
push
or
daa
fildl
fldt
call
mov
je
fildl
mov
or
xchg
mov
fisttpl
or
aaa
ret
shlb
jle
or
add
or
mov
test
add
loopne
daa
xchg
outsb
filds
sub
sbbb
dec
jno
fcoms
fucomip
in
xor
push
iret
leave
roll
mov
sub
lock
iret
loope
push
mov
int3
add
sub
adc
pop
aas
dec
pop
mov
xchg
xchg
xchg
xchg
mov
adc
xchg
mov
hlt
mov
xchg
mov
aam
int3
nop
xchg
xchg
xchg
mov
mov
repnz
mov
xchg
mov
mov
jno
repnz
repnz
mov
xor
and
sbb
and
add
push
jb
and
mov
enter
mov
stos
mov
lahf
mov
pop
jb
mov
and
cmp
gs
nop
sbbl
mov
enter
and
in
pop
cmp
mov
jb
sbbl
mov
inc
pop
mov
mov
pushf
mov
push
jb
cmpl
mov
enter
dec
mov
in
cmp
jb
mov
and
cmp
mov
sub
mov
inc
mov
mov
and
call
jp
repnz
rcrb
xor
mov
mov
fistl
and
jb
mov
enter
sbb
sbb
xor
daa
cli
mov
jb
mov
cmp
int
dec
cmp
cmp
mov
pushf
xor
inc
inc
mov
rolb
cli
dec
in
jae
jl
dec
dec
push
pusha
sub
add
lock
and
mov
or
push
test
movsb
rolb
add
dec
or
addr16
push
adc
inc
add
push
cwtl
sbb
adc
sbb
lods
or
dec
push
leave
xchg
stc
sub
jb
aam
push
jb
repnz
cmc
pop
adc
jmp
loop
add
or
test
and
mov
cmp
inc
enter
mov
icebp
roll
mov
orl
dec
lods
push
add
adc
sub
daa
dec
cmp
add
inc
and
mov
lods
cwtl
xchg
jns
sbb
push
insl
sub
sub
adcb
sbb
stos
mov
mov
punpcklbw
inc
movsl
gs
hlt
ror
dec
psrlw
inc
mov
and
sub
and
xor
mov
inc
mov
mov
jl
mov
jbe
gs
pusha
sbb
sub
out
adc
sarl
jmp
push
sbb
cmp
movsl
mov
dec
sub
imul
mov
sub
xchg
sysexit
push
sub
inc
mov
inc
mov
sbb
packuswb
xor
xchg
jo
shrb
ficoml
push
fwait
mov
push
loope
add
inc
addl
jmp
pop
addr16
and
sub
inc
xchg
xor
int3
dec
stos
mov
movsl
sub
cmp
scas
or
test
and
sub
sbb
or
shl
loopne
movsb
lcall
or
aam
mov
or
int3
test
sub
sub
gs
test
sub
or
in
mov
xchg
movsl
shr
pop
or
lret
add
cmp
pop
mov
push
or
int
dec
sbb
inc
scas
push
cmp
xchg
outsb
or
addb
inc
movsl
sub
mov
fucomp
insl
or
movsl
sub
jo
fmull
mov
js
cld
or
loopne
ljmp
cmp
push
call
das
gs
and
lret
out
mov
jns
orl
sub
mov
and
mov
scas
jnp
or
xchg
mov
sbb
pop
sbb
and
dec
ja
sub
popa
lods
mov
inc
sub
out
adc
movsl
sub
adc
mov
or
sbb
sub
pop
dec
push
add
js
mov
inc
sub
push
lea
and
sbb
sub
sub
cmp
cmp
mov
movsl
aad
sub
out
sub
jecxz
xchg
push
cmpsb
push
or
jecxz
push
or
fwait
sub
ss
lret
xor
imul
lcall
mov
ja
pop
cmp
je
nop
imul
push
scas
sbb
rcrb
notb
or
sub
shl
xor
and
sbb
sub
pusha
loopne
xchg
or
xchg
scas
inc
scas
scas
xor
push
sbb
inc
test
imul
aad
loopne
ret
xchg
xor
rcll
or
sbb
sub
or
sub
push
or
and
test
movsl
mov
mov
mov
out
dec
js
sub
loopne
xchg
mov
inc
or
or
or
mov
xchg
movsl
mov
xchg
dec
xlat
stos
or
push
or
inc
dec
add
or
cmp
or
xchg
cmpl
mov
or
ret
movsl
sub
lock
xor
dec
sub
and
dec
negl
call
inc
sub
xchg
mov
dec
pop
cmp
pop
dec
xchg
mov
sahf
or
lahf
pop
push
test
add
push
pop
xchg
sub
push
loop
rcll
mov
dec
rorb
xchg
movsl
or
mov
push
jp
or
push
stos
andl
or
or
or
scas
mov
js
or
cmpsb
les
outsb
test
fwait
adc
inc
popa
mov
data16
inc
sub
pop
jmp
or
subb
cmp
pop
dec
les
push
or
out
push
lret
mov
jo
in
addb
add
or
and
xchg
pop
stc
sbb
pop
xlat
test
rolb
adc
mov
push
leave
xchg
push
shlb
mov
dec
cmp
aaa
xchg
out
push
dec
push
test
pop
das
cmpsb
in
add
test
jmp
or
mov
dec
adc
xchg
inc
adc
mov
jmp
inc
inc
ja
fstps
bound
jle
mov
in
xor
dec
rclb
sbbl
mov
dec
ja
cmpsl
mov
or
test
cwtl
fs
and
sbb
jnp
addr16
mov
dec
push
push
mov
cli
sahf
arpl
movsl
xor
cmpsb
js
mov
rcrl
adc
loopne
push
mul
jns
out
cmpsl
push
sub
mov
out
sahf
pushf
mov
faddl
sbb
iret
repz
ss
push
pop
repz
rep
adcb
iret
enter
or
push
ds
repz
pop
jb
mov
repz
pushf
mov
out
push
sahf
out
lcall
jns
out
pusha
jbe
test
sahf
ja
out
call
sbb
jns
out
xor
dec
pop
insb
or
add
add
sbb
fimull
push
adc
and
pop
int
and
push
inc
xor
add
ret
imul
pop
sbb
push
push
mov
repz
dec
sbb
mov
insb
ss
add
push
clc
mov
pusha
xor
rorl
and
inc
mov
mov
xorl
clc
mov
iret
repz
mov
add
sub
out
test
adc
adc
repz
jnp
adc
xchg
sbb
sbb
jns
out
xchg
js
or
xor
cmp
stc
mov
pop
mov
and
and
cmpsl
stc
pop
cmpb
sbb
cmp
out
cld
cmp
test
aam
or
push
xchg
rclb
adc
add
mov
outsl
sub
pop
push
xor
cmp
test
mov
xchg
push
cmp
repz
cmp
adc
jns
out
add
xchg
in
loopne
out
sahf
out
ror
enter
jns
sarb
out
mov
out
sahf
out
mov
sahf
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
adc
int
jns
add
nop
fmul
repz
repz
push
lcall
jl
out
sahf
pusha
push
dec
inc
xor
cmp
repz
cld
mov
shlb
mov
or
lock
cmpsl
int3
test
push
xor
int3
mov
push
add
lock
mov
stos
fadds
pop
inc
push
fs
xchg
and
add
sub
push
aaa
xor
push
popa
addr16
push
add
and
push
xchg
or
xor
or
mov
adc
jne
aaa
shrb
adc
ss
jbe
mov
xchg
lahf
iret
jo
mov
mov
or
daa
add
and
xchg
insb
movsb
loope
xchg
adc
add
sbb
mov
iret
xlat
mov
mov
inc
add
and
mov
insl
add
pop
cmpb
data16
jo
pop
shll
sbb
jbe
jbe
add
push
sub
mov
in
add
push
aas
or
shl
dec
enter
les
inc
pop
and
fdivrs
rorl
cmp
push
adc
xchg
push
pop
scas
inc
fbld
inc
sarb
inc
lahf
inc
jg
mov
jle
pop
xor
aas
test
sti
push
int3
xorb
cmpsl
fwait
cmp
cmpsl
fsubl
sbb
incb
cltd
fbld
mov
add
movnti
imul
inc
mov
jo
stc
sub
movsb
test
push
aas
pushf
add
sbb
ret
insb
jbe
jecxz
pop
xor
cmp
pop
stos
outsb
cs
in
adc
scas
outsb
lahf
inc
outsl
ds
outsl
clc
cmp
fldenv
subps
inc
cmpsb
pop
mov
dec
push
mov
xchg
fsubl
dec
cmpsl
mov
cld
adcb
and
scas
inc
adc
and
iret
jl
xor
outsl
jne
notb
imul
mov
and
pop
inc
cmp
jb
pusha
sub
ljmp
lret
mov
mov
xlat
jae
xor
sbb
dec
pop
xor
les
inc
adc
push
stos
mov
xor
xor
pop
pushl
mov
add
mov
dec
popa
pop
inc
and
sbb
adc
push
sub
inc
ljmp
addl
xchg
xlat
lcall
mov
add
xchg
outsb
sbb
pop
push
mov
mov
mov
and
adc
xchg
addb
movsb
sti
loop
xor
lahf
arpl
cmpsb
mov
mov
mov
or
and
mov
test
and
sbb
pop
push
aaa
add
ja
lds
arpl
outsl
lcall
sbb
pusha
mov
rorb
xchg
movsb
sahf
out
test
xchg
jns
out
nop
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
enter
iret
repz
test
mov
and
outsl
je
insb
push
xchg
idivl
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
fs
out
pop
outsl
fcoms
rorb
adc
jmp
push
cwtl
inc
dec
clc
into
data16
mov
mov
inc
xor
mov
adcb
pop
subb
ja
mov
mov
pop
lods
pop
js
cs
clc
mov
sti
outsb
push
jg
cld
pop
enter
js
xorl
loop
lcall
push
insl
push
inc
aas
mov
pop
mov
or
cmpl
and
add
mov
mov
sbb
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
icebp
lcall
push
adc
pop
ss
nop
ss
insl
loop
subb
ss
test
sub
xorl
aaa
adc
sbb
add
jecxz
aas
cmp
fstpt
push
cmp
xchg
test
mov
lret
cmp
mov
cmp
cmp
icebp
jg
inc
jnp
cmpl
adc
xor
cmp
cmp
outsl
test
mov
mov
ds
ds
fdivr
jg
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
fists
adc
push
data16
jbe
jnp
fs
aas
cmpl
movsb
aas
mov
sarl
div
incb
lahf
push
xor
jl
xchg
cmpsb
mov
xor
mov
xor
mov
xor
push
inc
xor
mov
mov
cmp
pushf
xor
xor
mov
cmp
xchg
mov
cmp
xor
inc
add
mov
inc
fdivr
int
mov
xor
outsb
cmp
mov
pushf
xor
adc
pushl
xor
xor
xor
xor
xor
xor
dec
ja
clc
mov
mov
ss
pushl
sbb
xchg
mov
test
add
add
sub
das
cmp
or
add
pop
cmp
add
pusha
mov
pop
or
cmp
xor
xor
cmp
cmp
cmp
push
pop
cmp
pop
mov
push
outsl
cmp
jo
mov
inc
faddp
js
outsb
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
pusha
cld
push
shrl
jle
test
decl
cmp
hlt
cmp
inc
ds
ds
ds
inc
xchg
mov
rclb
xor
xor
pusha
cld
ret
pushl
test
xchg
xor
push
xor
xchg
mov
fwait
xor
xor
xor
xor
xor
inc
jg
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
orl
push
mov
test
ss
or
pop
add
fnsave
jecxz
clc
ss
ss
aaa
or
mov
xor
aaa
addr16
jno
stos
mov
sbb
push
shlb
cmp
or
sbb
pop
jecxz
sbb
cmpsb
test
mov
cmp
add
fbld
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
call
cmp
jns
jle
xchg
mov
mov
dec
lahf
cmp
fstp
ret
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
dec
sbb
fstl
push
cltd
xor
push
jecxz
ds
pop
shrl
and
aaa
shrl
inc
xor
cmpl
aas
ret
aas
iret
dec
faddl
xor
into
xor
shrl
jp
xor
xor
icebp
pushl
ljmp
xor
xor
in
pop
xor
xor
xor
mov
cmp
insb
dec
lds
ret
xor
xor
adc
push
clc
stos
mov
pop
arpl
stos
add
ss
ss
aaa
pop
enter
aaa
jne
jle
ds
sbb
sub
inc
in
cmp
cmp
jecxz
ud0
sarl
fnstcw
jmp
cmp
cmp
cmp
sbb
or
arpl
outsb
xor
ret
cmp
cmp
scas
in
mov
stos
ds
or
cmp
push
jo
pop
lret
mov
mov
xor
xor
ja
jg
cs
xor
xor
xor
xor
dec
fisttpll
shlb
fdivl
out
xor
call
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
inc
xor
shll
mov
aaa
outsl
xchg
push
add
cmp
call
push
cmp
mov
jmp
std
cmp
ljmp
push
imul
sbb
ds
aas
lods
cmp
clc
cmpl
mov
mov
cld
xor
sbb
xor
out
sub
jae
cmp
cmp
dec
cmp
pop
cmp
ds
push
xchg
outsl
cmp
jecxz
clc
mov
xor
xor
xchg
testb
pop
or
or
pop
dec
es
xor
int
jp
add
loop
lock
aaa
arpl
pop
pusha
out
rcll
xor
mov
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
insb
jb
xor
push
adc
sub
push
orb
ja
push
mov
fsubrp
xor
fbld
jo
or
or
adc
adc
sbb
sbb
rclb
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
lret
es
lock
lret
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmpl
fdivs
fmuls
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outsb
jo
bound
sarb
jo
push
add
dec
add
pusha
jo
fmull
mov
out
shl
ljmp
sub
sbb
pop
rclb
xor
xor
xor
xor
xor
cli
cmpsb
mov
add
sub
jg
push
xor
fs
xor
xor
xchg
sbb
stos
loope
or
sbb
pop
inc
add
in
call
or
xor
xor
inc
add
loop
sbb
push
adc
sub
xor
pop
sub
xor
xor
xor
xor
push
xor
pop
xor
cmp
pop
mov
xor
xor
xor
xor
mov
mov
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
loopne
cmpl
int3
fisubrl
pop
xor
or
mov
xor
jecxz
add
cmp
mov
or
xor
subb
cmp
inc
adc
sub
adc
incl
inc
ds
dec
sbb
pusha
pop
add
sbbl
jg
add
or
pop
pop
push
or
or
or
xchg
mov
or
or
adc
adc
push
adc
jbe
fistps
add
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
stos
sub
add
add
mov
inc
leave
add
jge
add
add
sub
iret
rclb
imul
ds
decl
and
inc
push
adc
pop
and
xor
std
decl
and
rcll
bound
js
xchg
and
dec
xor
and
aaa
mov
xchg
dec
fwait
add
mov
nop
ret
or
adcb
jns
add
dec
imul
or
push
scas
or
add
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
pop
or
adc
mov
or
xor
adc
shrl
icebp
mov
add
and
pusha
add
scas
fiaddl
or
stos
or
push
js
jo
or
mov
sub
pop
add
lds
cld
cli
and
mov
ljmp
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
fistps
jecxz
cli
pop
mov
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
decl
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
cmp
lahf
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
inc
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
fistpll
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
dec
std
dec
sub
lods
leave
mov
jp
push
out
or
outsl
inc
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
das
cli
xchg
add
dec
mov
xor
incl
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
call
pop
jg
hlt
push
add
stc
loope
push
mov
sar
andl
aas
icebp
testb
mov
call
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
mov
or
push
inc
sbb
paddb
inc
mov
decl
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
sti
jmp
or
dec
fisttpll
out
aas
std
cli
pushl
push
idivl
cmp
sub
inc
scas
inc
mov
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
pushl
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fistpll
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
call
addr16
adc
ret
das
pop
pop
pop
shlb
ljmp
cmp
lock
or
sarb
std
pop
les
cli
mov
lcall
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
inc
xor
inc
or
mov
nop
enter
ret
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
das
clc
decl
add
ret
fcmovu
ds
cmpsl
scas
pushl
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
pushl
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
incl
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
jecxz
and
lahf
fmull
enter
jecxz
pop
jmp
xor
pop
mov
sub
mov
in
testb
mov
push
sbb
push
inc
or
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
incb
idiv
rorl
adc
push
inc
jecxz
sbb
sarl
adc
inc
clc
xorl
sbbl
cmp
dec
js
jle
add
mov
fsubrl
add
mov
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
loopne
fistpll
adc
lahf
mov
or
out
lcall
mov
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
and
add
pushl
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
sbb
lock
mov
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
pushl
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
mov
clc
incl
faddl
xchg
lcall
jne
jge
pop
cld
or
dec
ss
lods
movsb
xchg
mov
add
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
dec
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
mov
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
incl
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
fwait
cli
incl
mov
jne
in
sbb
xchg
imul
lock
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
bound
push
inc
leave
push
add
add
push
sti
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
decl
fistpl
pop
mov
or
jae
shll
ljmp
lods
jle
mov
cwtl
test
mov
jo
fldenv
imul
push
aas
decb
mov
xchg
testl
fs
stos
inc
data16
jmp
sbb
cwtl
jb
xlat
sbb
mov
lahf
js
lea
cmp
cmp
fs
push
mov
fstps
out
shrb
xchg
popf
mov
dec
popa
mov
std
mov
or
pop
inc
lcall
xchg
sbb
in
out
hlt
cmpsb
in
icebp
iret
pop
jmp
test
sbb
push
inc
decl
es
test
mov
aad
add
add
jo
nop
or
ljmp
cld
mov
orb
mov
push
cmp
stos
push
xchg
test
mov
adc
mov
jmp
push
addl
or
mov
ljmp
pop
das
shrb
jmp
in
dec
jp
sbb
pop
fs
xchg
xchg
fimull
pop
ret
inc
insl
fsubrl
jmp
push
adc
mov
lret
ret
mov
imul
lret
out
mov
jmp
mov
xchg
sbb
sbb
lret
add
jbe
vpacksswb
add
add
xor
pop
or
out
add
push
jbe
push
xchg
lahf
dec
and
jae
push
movsl
lods
pushl
inc
inc
scas
jle
dec
insb
ljmp
ret
sbbb
jl
cmp
xor
or
aaa
adc
inc
lahf
daa
iret
adc
ds
push
iret
notb
clc
pushf
ss
inc
movzwl
push
mov
pop
jp
jmp
lret
jg
push
xchg
test
in
lcall
dec
sub
cltd
add
out
jp
mov
sub
pushl
repz
lcall
or
test
lds
inc
enter
inc
incb
dec
scas
cmp
jmp
imul
lret
push
xchg
pop
adc
addb
mov
push
call
cld
nop
ds
ror
shll
inc
aad
iret
jbe
cmp
mov
gs
es
sub
decl
fistpl
sub
jecxz
shrb
lea
and
mov
je
inc
dec
pop
in
push
and
pop
push
inc
sub
push
xchg
jge
jp
pusha
and
jl
adc
shrb
stos
les
enter
add
jnp
sbb
outsl
fisubrl
call
add
adc
cmp
aam
mov
add
arpl
xorl
ds
hlt
scas
mov
je
mov
and
js
jmp
icebp
inc
stos
jbe
pop
pusha
jecxz
or
jmp
sarl
pop
lock
ret
icebp
xor
add
sbb
cld
sbb
subl
mov
mov
pop
das
sbb
or
xor
jl
dec
in
jae
aas
xor
dec
push
dec
sarb
stc
decl
sbb
and
les
add
add
pop
cli
loope
incl
xor
insl
leave
repz
dec
mov
or
pop
in
cmpsb
imul
clc
mov
push
inc
lods
inc
imul
fidivrl
scas
add
inc
xchg
js
leave
movsl
clc
jns
loope
mov
add
rcl
movsl
push
das
nop
lcall
jb,pt
sar
outsl
aam
adc
pop
or
or
xchg
call
mov
mov
shrd
cwtl
add
stos
add
mov
cltd
pop
mov
dec
or
arpl
int
shll
fldl
push
dec
icebp
xor
inc
call
mov
and
ljmp
mov
push
inc
mov
in
subl
fbstp
pushf
mov
dec
stos
idivl
push
xor
in
pop
push
insl
cmp
mov
out
push
cmpsb
into
pushf
mov
pushl
ljmp
mov
cmc
xchg
std
insb
sub
mov
xchg
lcall
ljmp
es
lds
inc
mov
imul
push
or
dec
int3
pop
es
rcl
adc
enter
nop
sub
jbe
mov
or
call
jnp
scas
insb
rcrb
mov
aas
dec
testb
das
mov
in
sti
arpl
lret
adc
jo
mov
jnp
mov
ficompl
cmovle
adc
jg
imul
rorb
les
and
ljmp
mov
mov
ljmp
adc
mov
decl
je
jns
icebp
pop
jbe
stc
xchg
pop
xlat
add
insb
sbb
popf
dec
call
mov
xchg
pusha
push
addr16
and
mov
jo
add
mov
inc
adc
pop
push
push
cmp
pushl
xchg
filds
sbbb
dec
loopw
inc
adcl
inc
bound
icebp
jo
adc
xchg
popf
mov
jo
dec
imul
mov
fnstcw
lret
adc
add
incl
out
lcall
xchg
data16
pop
insl
sbb
popa
bound
imul
jg
ljmp
sbb
fbld
add
fwait
inc
cli
push
jo
cld
pop
in
or
dec
push
add
call
adc
dec
push
mov
bound
sbb
out
pop
mov
or
push
and
incl
cmp
cwtl
push
repz
dec
or
test
movsb
adc
icebp
xchg
lret
mov
ret
int
filds
lcall
loop
bound
in
or
pusha
jnp
call
inc
jle
xor
mov
inc
mov
mov
shll
imul
scas
cmp
mov
sbb
fsts
lods
sar
ljmp
and
mov
lcall
add
pop
cmp
std
jb
jg
mov
clc
and
pop
fcomps
dec
push
mov
mov
call
call
cld
adc
dec
mov
out
popf
add
das
cmp
out
pop
add
outsl
push
jmp
jmp
cltd
xchg
fisttpl
nop
lds
imul
mov
outsb
cld
jg
call
cwtl
cld
mov
test
mov
cmc
sti
ds
decl
ja
mov
lea
push
dec
xor
js
and
in
lcall
push
cmpsl
lods
sbb
lea
cltd
or
mov
mov
fcomip
je
or
jbe
xchg
mov
std
shl
test
jb
ljmp
loope
xchg
ss
std
mov
push
push
jge
loopne
pop
xlat
inc
rcrb
xchg
cld
lret
outsb
leave
adc
pushf
sarb
bound
mov
fdivr
mov
lcall
mov
popa
and
mov
push
sub
pop
imul
or
pop
lret
mov
xlat
adc
iret
test
in
js
mov
out
jl
bound
push
lods
sbb
xor
jp
aam
in
je
sahf
inc
and
mov
clc
shl
out
mov
jge
adc
jmp
jmp
add
jge
xorb
jl
lds
pop
rcrl
add
dec
in
sbb
jae,pn
adc
nop
mov
mov
aam
xor
in
or
mov
ficomps
mov
pop
inc
pop
test
pop
jecxz
stc
mov
clc
dec
call
hlt
or
into
cli
incl
out
outsl
ror
adc
xor
or
fmull
sarb
std
jmp
fdivl
loopne
mov
in
jbe
xor
push
jmp
or
mov
ljmp
cmp
jg
imull
fsubs
xor
fsubrs
loope
in
cwtl
sbb
jns
stos
movsb
add
dec
out
test
push
sar
xor
add
mov
mov
jg
cmpsl
fisttps
or
lds
sub
ja
sbb
stc
fsub
hlt
mov
jmp
or
sbb
out
cmp
pop
fisubrs
cmc
add
jo
pop
mov
icebp
ljmp
jmp
xchg
hlt
mov
js
push
and
xor
push
push
sub
sahf
fwait
int3
ljmp
and
mov
into
inc
xorl
scas
outsb
icebp
popa
cwtl
repz
mov
roll
xchg
mov
adc
in
mov
cli
pusha
add
ljmp
sbb
cmp
int3
hlt
pop
ret
or
pop
push
mov
lods
dec
mov
pushl
and
push
add
sbb
xchg
ljmp
inc
sbb
cmp
incl
sub
adc
mov
xchg
movsb
inc
sahf
movsl
rcrl
nop
mov
frstor
decl
int
jp
out
sbb
sub
cmc
enter
push
or
in
adc
cmp
pushl
mov
aam
dec
xor
jmp
aam
fcmovu
scas
inc
adcb
repnz
inc
iret
or
adc
sbb
fdivrs
cli
in
and
dec
jge
aad
pop
mov
push
dec
adc
sub
mov
ds
mov
and
incl
rclb
pop
xor
icebp
sub
adc
outsl
out
loope
scas
sub
aam
or
shl
ljmp
xorb
sarl
mull
xchg
add
xchg
xchg
xchg
filds
add
stos
cmp
fwait
loop
cltd
subl
pop
insb
jno
sahf
sbb
int3
leave
adc
cmpsl
dec
fnsave
movsl
cmpsl
enter
js
test
xchg
mov
dec
decl
inc
mov
sbb
push
cmp
mov
cmp
ljmp
lock
xor
cli
xor
inc
ret
gs
cmp
lock
sub
lahf
loop
pop
loope
cld
std
and
ficompl
rolb
cmp
pop
xchg
ljmp
les
sahf
mov
enter
dec
adc
mov
jo
mov
lcall
add
out
and
adc
xchg
and
je
adc
stc
dec
mov
int3
sbb
decl
cs
push
repnz
ret
aas
data16
mov
jns
cmp
xor
xor
arpl
push
xor
test
je
inc
push
mov
add
xlat
pop
add
decl
lret
gs
or
cs
jbe
sub
sbb
or
enter
lret
test
dec
pop
leave
pushl
xchg
rorb
mov
imul
cli
xchg
int3
xchg
out
sbb
mov
cmp
xchg
lcall
lods
test
mov
scas
xchg
push
inc
inc
js
pushl
jp
mov
jg
test
pushf
xchg
pop
sub
pop
adc
xor
test
decl
jns
xor
jnp
mov
popf
fxch
inc
in
fs
mov
arpl
cmp
cmp
fimuls
hlt
cmp
stos
negb
rorl
mov
idiv
mov
lret
gs
jle
mov
pushf
mov
and
ljmp
scas
sub
ret
fs
dec
popf
dec
aam
jne
cmpsl
add
cli
call
or
inc
or
jle
jo
call
xor
sub
xor
inc
aas
xchg
adc
jne
sbbb
in
mov
loope
insl
fimull
sbb
cli
incl
ficompl
add
cmpsb
gs
shlb
push
cmpsl
rolb
inc
movsb
out
imul
ljmp
xchg
sbb
sbb
jmp
cltd
mov
fs
cmp
mov
mov
incl
mov
xor
push
fxam
test
out
lcall
repz
int
inc
cmp
and
push
and
pop
ds
cmp
and
call
js
push
xchg
dec
lret
mov
mov
lods
fs
ss
mov
rorb
ljmp
daa
imul
addl
lcall
ret
cmp
jmp
mov
std
xchg
inc
inc
xor
cmp
mov
outsb
push
xchg
popa
pop
fstpl
outsb
jb
rolb
decl
scas
sti
leave
push
jg
xor
stos
jecxz
mov
decl
imul
xchg
cld
scas
xor
int
mov
cli
lahf
aad
out
lret
pop
sbb
clc
stos
jge
mov
lret
arpl
dec
mov
xchg
jbe
cmp
sbb
jmp
cmpb
mov
sbb
jb
add
ja
pop
ror
cmp
out
call
jnp
mov
xchg
sbb
repz
sbb
shll
hlt
push
mov
cs
iret
push
push
jle
mov
lcall
push
jp
inc
rcll
jns
fadd
nop
shll
cmp
das
fs
stos
ljmp
popa
sarb
into
lahf
and
and
sbb
xchg
jmp
ret
das
clc
out
aad
out
ljmp
or
loop
or
in
inc
xlat
inc
movsl
aam
sub
shl
ljmp
jg
pop
sbb
adc
and
or
push
shrl
mov
imulb
xchg
inc
jg
lock
push
out
dec
js
ret
pop
and
adc
pop
orb
and
mov
adc
or
call
out
fs
sub
dec
and
fisttps
pop
pop
sbb
inc
adc
push
addr16
repnz
jmp
add
int
ret
cmpl
stos
jns
mov
cmp
mov
lcall
or
stos
call
rcl
sub
mov
mov
pushl
data16
add
nop
jb
adc
sub
xchg
dec
lahf
jp
sti
inc
iret
cmp
jg
incl
lods
xchg
mov
outsl
jae
jns
or
shll
call
push
decl
sbbb
cmp
ror
aaa
movb
cltd
dec
test
lcall
lret
ljmp
data16
push
jo
sbb
pop
cld
in
jg
push
dec
cmp
arpl
pop
daa
pop
rcll
fcom
mov
ljmp
mov
jg
orb
sub
pop
pop
sbb
or
xor
mov
and
jecxz
add
sarb
jae
and
ds
dec
xor
adc
repz
jle
mov
pop
adc
inc
jle
xchg
dec
jo
cmp
andb
shrb
pushl
std
jmp
lea
and
xchg
mov
dec
sbb
or
mov
movsb
dec
cwtl
mov
xorb
icebp
jle
jl
mov
dec
cmp
sti
jge
ljmp
xchg
cli
lcall
je
mov
outsb
out
add
jbe
mov
sbb
addl
adc
cmp
fwait
jne
or
xlat
push
and
std
xorb
xor
jo
and
rolb
ljmp
clc
das
into
dec
in
ds
mov
arpl
mov
scas
lods
clc
mov
pushl
pop
imul
mov
or
push
or
rcrl
decl
insl
scas
fcoms
cmc
cmp
sahf
flds
in
sbb
fdivrl
mov
xchg
das
outsl
mov
je
ss
or
mov
sub
nop
into
imul
incl
mov
cmp
lds
mov
mov
jmp
lds
cs
xchg
das
jg
xchg
xchg
in
leave
jnp
fsts
adc
xchg
and
out
push
shr
dec
mov
fcomip
jmp
push
cmp
lret
sbb
scas
xlat
xchg
xchg
call
arpl
ret
inc
call
rcr
xlat
sti
fisttps
cmc
aam
cmc
mov
rcrb
jg
loope
rclb
aas
rcl
popa
dec
jl
ljmp
popa
icebp
lret
push
push
test
clc
add
sbbb
cli
sar
ljmp
pop
mov
cmp
mov
leave
adcl
xlat
je
xor
ljmp
aad
mov
in
sarl
loop
xlat
test
ret
in
cmp
cmp
decl
dec
loopne
xchg
mov
cmp
and
enter
sahf
incl
sahf
jns
dec
push
xchg
stc
insl
lods
lods
jno
cli
call
inc
jb
and
xchg
cmp
pushl
scas
or
scas
insl
pop
sti
idivl
hlt
mov
push
jbe
sub
sub
mov
jmp
mov
adc
ret
dec
out
add
or
cmp
sbb
std
ds
cmp
aad
push
jb
mov
ss
incl
ret
je
ds
jo
jp
or
push
cmp
out
aas
iret
sbb
mov
decl
mov
movsb
out
rclb
aas
pop
subb
filds
add
fwait
mov
fchs
les
xchg
xor
test
call
adc
hlt
sub
fcoms
jl
push
in
js
out
sub
stos
lret
ds
inc
push
stc
mov
mov
sub
add
call
mov
or
or
and
fldt
aaa
adc
jnp
jmp
mov
and
insb
cld
jmp
test
andl
arpl
cmp
scas
int
out
ret
test
push
adc
sbb
mov
in
fsts
mov
dec
fwait
repnz
sub
pop
das
xchg
sub
push
icebp
jl
scas
aad
lcall
adcl
ja
movsl
stc
fmull
mov
sbb
mov
xchg
cmp
aaa
lcall
xchg
lret
enter
sub
inc
inc
and
dec
fdivr
mov
scas
mov
jg
jmp
sub
xchg
xchg
jge
pop
cmp
push
mov
icebp
sub
add
mov
or
call
jp
or
jno
aam
dec
inc
jp
mov
pop
jnp
bound
dec
sub
xor
incl
ljmp
adc
je
pop
in
shl
in
lds
inc
or
mov
xchg
mov
mov
test
jnp
imul
rcrl
incl
cwtl
jnp
xor
hlt
jle
daa
divb
mov
cs
sub
loope
xlat
sbb
clc
pop
int
sbb
out
sub
lahf
pop
mov
js
cwtl
push
fwait
loope
mov
std
inc
fucomi
cmpsb
ret
enter
addl
in
das
frndint
pop
ror
push
jmp
sub
shlb
dec
dec
mov
loope
and
daa
inc
inc
idivl
les
mov
or
cmpsl
lret
arpl
jg
mov
dec
or
inc
sub
lret
rcrl
lret
xor
add
lds
dec
inc
shll
bnd
cmp
pushl
jbe
out
mov
add
mov
jmp
test
aaa
mov
stos
add
popa
insl
sub
shrb
sub
enter
out
or
xchg
cmp
xchg
dec
leave
dec
inc
insl
dec
xor
pop
adc
es
xchg
es
lock
gs
xchg
mov
fsubl
js
xchg
inc
sbb
incl
jns
xchg
out
loope
cmpsl
push
xlat
sub
clc
dec
shrl
call
cmpsb
stos
jno
in
dec
in
out
sarl
popf
lock
pop
dec
sub
cltd
pop
addr16
jmp
mov
popf
nop
pop
das
cmpsl
ljmp
push
ftst
into
scas
sahf
lcall
mov
mov
fimull
fcom
dec
sub
jmp
push
xor
incl
sub
mov
mov
lds
pop
pop
icebp
loop
jmp
pop
outsl
push
mov
push
inc
shlb
jmp
mov
adc
pop
mov
push
mov
ret
lcall
aad
loop
stc
cmc
fxch
ret
jmp
into
mov
sbb
sar
call
bndldx
xor
push
repnz
mov
mov
fwait
das
scas
push
pusha
insb
adc
cmp
mov
xchg
outsb
adc
out
sub
sub
push
fbstp
sahf
mov
jne
notl
jg
cmp
dec
enter
push
dec
pop
repz
add
out
faddl
add
decl
shl
add
and
lahf
mov
mov
jmp
pop
mov
dec
push
adc
dec
popl
push
insl
loopne
movl
daa
clc
mov
addb
icebp
repz
and
or
mov
out
cwtl
nop
adc
clc
fdivr
mov
or
movsb
sub
xlat
subl
mov
jno
and
inc
decl
mov
repz
ljmp
inc
pop
push
jmp
lods
mov
ljmp
jle
inc
xchg
in
into
push
jns
icebp
pop
xchg
test
sub
pushl
fisubrl
jno
scas
adc
popf
dec
lods
ret
or
mov
inc
push
int3
push
lcall
xor
xorl
xlat
or
mov
sub
decl
mov
out
cmp
cmp
fsubrl
lods
outsb
fisttps
cmpsb
lcall
push
insb
push
out
loopne
fildl
mov
ljmp
or
mov
cs
imul
jmp
cmpsl
rcrb
cmpsl
push
adc
pop
jo
pop
inc
adcb
jmp
mov
mov
and
call
push
bound
mov
mov
xchg
arpl
push
fdivrs
and
sar
jg
jmp
and
xor
mov
notb
pop
adc
adc
mov
sbb
popl
orb
push
add
jp
add
inc
popf
add
scas
ficompl
push
cld
jmp
gs
repnz
mov
mov
xor
mov
out
mov
xor
call
mov
push
into
mov
jl
outsl
pop
xor
mov
arpl
ds
std
incl
pop
add
lret
inc
pushf
pcmpeqb
ljmp
lds
mov
jge
aam
xor
add
aam
dec
das
dec
les
ljmp
orb
lods
fcomp
das
mov
gs
sbb
cmp
loopne
xchg
test
decl
popf
push
orl
fistl
scas
push
or
pushl
mov
pop
stos
add
mov
sbb
int
jmp
dec
cld
pushl
sahf
or
data16
sahf
mov
scas
add
pop
cltd
adcl
icebp
jg
imul
pusha
sub
adc
push
incl
jl
push
cld
loopne
je
ljmp
js
aad
pop
mov
xchg
lcall
or
jnp
dec
adc
call
mov
iret
dec
cmc
mov
dec
lock
repz
pop
pop
xor
movsb
push
mov
leave
js
clc
decl
sbb
mov
or
repz
enter
adc
jmp
das
ficoml
rclb
pop
pusha
int
out
xor
es
cwtl
test
fists
testb
push
lods
jno
out
loop
adc
in
in
jne
and
or
pop
sbb
movsb
fildll
ljmp
sub
pop
ret
inc
mov
insl
xor
dec
xor
call
pop
dec
sahf
adc
push
jb
les
sahf
add
jmp
mov
pushl
fs
mov
inc
inc
addr16
push
call
call
dec
or
mov
jmp
add
fiadds
popl
int3
xor
jne
or
mov
into
push
inc
nopl
ljmp
cmpsb
lret
out
sub
ror
cmpsl
mov
ret
testl
adc
incl
jge
adc
sub
push
hlt
push
stc
inc
and
mov
sub
add
xor
xchg
push
rorb
mov
frstor
cmpsl
in
mov
jae
clc
sbb
xchg
enter
pop
clc
testb
jmp
and
das
movl
add
inc
inc
outsl
movsb
mov
mov
aaa
sub
popf
add
call
push
shlb
or
or
pop
mov
xlat
inc
mov
ds
jle
mov
pushf
or
rcl
mov
xor
sub
stc
sbb
call
add
std
xor
push
xor
jl
dec
decl
neg
movsl
addr16
pop
popf
mov
sub
pop
mov
cmpsb
mov
and
mov
ljmp
lret
push
js
rorl
imulb
scas
mov
mov
popl
xchg
mov
dec
adc
nop
in
cmp
imul
mov
call
mov
pop
incl
rolb
decb
cld
cltd
adc
mov
cmp
xchg
call
xchg
es
mov
out
dec
mov
xor
push
sub
jnp
pop
aaa
into
pop
lcall
jo
mov
lcall
int3
test
mov
rclb
negl
and
push
fisttpll
jno
jl
shll
dec
addb
mov
aas
mov
call
mov
mov
mov
jns
add
imul
dec
jmp
rcrl
aam
jmp
xchg
ret
mov
incb
jnp
or
inc
test
jno
push
lds
lret
dec
xchg
push
jmp
mov
inc
je
mov
cmp
lahf
or
test
dec
aaa
mov
incl
in
dec
leave
sub
inc
je
mov
inc
cmc
fwait
stos
fistps
repnz
xor
jne
cmp
incl
test
aas
dec
mov
jbe
in
mov
gs
sub
or
pushf
cmpsb
pop
clc
movsl
adc
movsb
incl
sti
mov
cmp
cmp
movsb
push
repnz
adc
fs
sti
popf
adc
je
aam
mov
imul
jg
add
insb
jb
and
xor
pop
cmp
aaa
inc
xor
pop
popa
pop
mov
or
mov
stos
pop
jmp
fmuls
mov
lds
out
mov
lods
inc
mov
in
sbb
mov
xchg
xchg
fsubrp
add
jmp
jae
scas
inc
rolb
xchg
cld
movsb
lds
pop
jmp
or
lods
pop
push
or
ss
mov
jmp
jae
xor
and
arpl
fs
call
and
in
and
jmp
pop
cltd
pushf
xchg
or
mov
in
stc
xor
jg
std
cwtl
js
push
orb
ljmp
enter
or
push
cmp
inc
loope
cmpsl
push
adc
xchg
insl
test
mov
dec
inc
call
xor
iret
push
mov
sarb
sub
out
iret
addr16
or
lcall
push
adc
arpl
and
pushf
lret
mov
or
into
data16
xor
stos
xchg
sub
pushl
dec
mov
xor
movb
jg
repz
bound
mov
std
les
adc
les
pushl
jno
push
addl
sub
repnz
inc
adc
out
inc
dec
addr16
ljmp
dec
adc
add
movsl
mov
or
pusha
sbb
xchg
xchg
mov
ficomps
jmp
pusha
push
inc
lds
in
out
inc
and
out
popf
fwait
lcall
jnp
cmp
std
adc
gs
addr16
js
sbb
adc
shll
xchg
lock
ljmp
pop
mov
cmp
ss
test
jmp
cli
fnstenv
jo
sahf
sarl
out
inc
lea
jb
pushf
incl
dec
mov
jmp
rorl
mov
lcall
les
push
aas
mov
dec
leave
xchg
mov
mov
test
repz
ljmp
dec
dec
jnp
les
jae
cmpb
inc
dec
mov
lods
mov
adc
scas
mov
testb
addr16
stc
pop
movsb
lret
add
push
push
cld
adc
cmp
ljmp
repz
ud0
ljmp
jae
push
cmp
jnp
xchg
fisubs
mov
xor
and
jl
rol
pop
or
call
sbb
and
jg
jmp
pop
mov
inc
mov
insl
notb
adc
push
inc
das
lahf
jno
pushl
or
sub
call
mov
int3
pop
mov
imul
outsb
pop
ja
lock
mov
jbe
test
scas
inc
repnz
push
dec
push
pop
adc
mov
call
clc
movsb
int3
fmul
push
push
dec
loope
sbb
lods
int3
mov
das
xchg
dec
out
cld
mov
ret
sbb
insb
into
mov
mov
pushl
fdivr
repnz
and
dec
imul
cmp
cmc
imul
mov
push
call
out
jbe
add
out
loope
xor
in
mov
call
and
cmp
daa
sti
mov
testl
or
jmp
push
jp
inc
or
mov
nop
shrb
push
rcr
sti
cs
idiv
pushl
adc
push
jbe
and
lcall
loop
in
rcrb
out
clc
or
mov
mov
int
test
inc
icebp
adc
sbb
pop
les
outsl
mov
xor
jg
cwtl
imul
mov
mov
je
sahf
mov
in
push
pop
pause
jecxz
mov
xchg
mov
repnz
pushf
mov
jl
call
mov
xor
ja
ret
in
mov
cmp
jmp
aam
push
inc
dec
into
fiaddl
in
sbb
push
jne
mov
adc
dec
and
inc
or
mov
or
mov
jg
aaa
sarb
bound
sbb
je
test
int3
jo
ret
mov
gs
cld
fcomi
or
insb
cmp
sbb
mov
sub
negl
dec
clc
dec
rorl
iret
adc
lcall
fldt
fnsave
andl
sbbl
leave
or
xchg
xorb
add
mov
xchg
push
clc
fwait
pop
jne
out
mov
aaa
or
decl
xchg
pop
scas
jne
add
dec
sub
ja
mov
sar
pushl
aaa
push
lea
aad
aam
or
push
push
dec
mov
bound
pop
dec
xor
mov
hlt
mov
pop
cwtl
jns
xor
jmp
pop
mov
cli
inc
or
cmpsb
mov
pushl
xor
and
mov
or
xor
in
ds
sbb
ljmp
lea
and
aaa
fldcw
adc
add
mov
dec
in
xchg
sbbb
pushl
dec
out
pop
repnz
ficoms
sbb
push
inc
leave
dec
outsl
xchg
mov
lcall
sbb
nop
and
inc
mov
sbb
xorl
ljmp
cmp
inc
add
sbb
lock
sbb
clc
cltd
popf
ss
data16
dec
sub
aam
sahf
inc
orb
addr16
sbb
out
std
cli
mov
js
jle
rcrb
xchg
call
bound
mov
cwtl
pop
pop
stos
or
jl
add
notb
add
mov
cmp
pusha
xchg
sahf
jmp
loop
inc
mov
dec
ljmp
clc
decl
outsl
jne
popa
cltd
lods
pop
jno
adc
xor
mov
pop
lods
lcall
xor
mov
lret
repnz
mov
xchg
xchg
imul
call
leave
jle
dec
xchg
sbb
sbb
mov
cmp
rcl
and
lea
incl
lcall
jbe
sub
shll
lea
lock
ljmp
dec
jns
cmp
js
jge
aas
mov
sbb
inc
jns
adc
call
loopne
jmp
jecxz
repnz
jne
pop
push
out
imul
xor
jmp
bound
cltd
inc
pop
inc
stos
ret
test
mov
les
cmp
stos
es
cmp
decl
push
stos
rcrb
xchg
stos
mov
mov
and
xchg
jo
iret
xchg
inc
les
lahf
and
aad
mov
mov
xchg
daa
orb
sti
dec
cltd
out
ljmp
sub
cmp
outsb
data16
mov
inc
mov
aas
lcall
jmp
and
out
addr16
sub
pop
jo
xor
std
push
iret
or
imul
and
incl
out
mov
insl
test
icebp
mov
pop
dec
loopne
or
jbe
lret
fstpt
push
jae
push
pop
mov
pop
pop
or
dec
mov
negl
mov
cmp
loopne
push
lret
jno
xor
jmp
popf
push
dec
xor
xchg
push
jl
adc
std
incl
and
mov
popf
push
mov
or
jmp
roll
mov
rep
imul
fisubl
aaa
repnz
insl
iret
mov
insb
in
adc
shlb
cmp
mov
in
mov
cmp
jmp
mov
ret
mov
adc
mov
popa
in
cmp
xlat
vcvttpd2dq
call
add
ljmp
clc
push
pop
or
mov
gs
push
inc
inc
cs
pusha
loop
mov
fidivrs
bound
decl
push
mov
add
call
jp
lock
mov
mov
inc
outsl
fstpt
ljmp
adc
aas
push
mov
out
ret
loope
sarl
mov
ljmp
and
lods
call
jae
inc
adc
icebp
pusha
mov
jle
and
cmp
xchg
bound
pop
jne
ljmp
sarb
push
decl
test
int
pop
sti
pop
dec
inc
pop
call
cmp
data16
call
sbb
test
xchg
mov
fldenv
mov
inc
jg
or
dec
adc
iret
test
mov
push
mov
mulb
ss
mov
andb
imul
call
fimull
xchg
dec
push
sub
push
push
scas
mov
xchg
cmp
inc
incl
add
xorb
sub
and
jle
fnstcw
add
sbb
shlb
or
xlat
faddl
pop
lea
jp
mov
xor
loop
mov
test
jnp
adc
and
fwait
icebp
jns
inc
lea
fs
cmp
int
das
movsl
fcompl
jns
shll
notb
jmp
out
pushl
or
or
test
ja
int3
push
xor
cmp
aas
and
int
call
mov
ljmp
lea
std
pushf
and
xchg
les
add
dec
in
fildl
ljmp
cmp
gs
jb
dec
sarb
clc
out
mov
mov
inc
cmpsb
ja
add
sti
lahf
scas
inc
ror
roll
adc
inc
incl
push
inc
adc
adc
loop
sub
pop
in
sar
mov
push
mov
loope
sub
stos
imul
jmp
or
pop
xchg
jg
xchg
fs
dec
dec
dec
imul
mov
mul
adc
leave
in
shlb
jge
sahf
sbb
rolb
jle
lods
push
jb
mov
xchg
decl
mov
int3
int3
stos
fcomp
and
mov
xchg
int
jle
pop
lock
out
ljmp
iret
dec
movsl
out
fcompl
push
cmp
lea
fdivrl
xchg
pushl
inc
fnstenv
ret
pop
vandps
lcall
ret
cs
out
ljmp
xchg
pop
gs
mov
xor
xchg
mov
push
test
xor
dec
in
and
mov
jecxz
mov
nop
xchg
arpl
sub
orl
mov
mov
insl
jg
imul
jnp
mov
jns
xor
outsb
rcll
lcall
push
loope,pn
pop
push
hlt
rclb
sub
or
push
test
sub
testb
ljmp
cmpsb
lock
push
xor
sbb
call
mov
call
push
pusha
test
cs
aas
mov
insl
pop
dec
mov
daa
dec
bound
incl
icebp
popf
xor
out
mov
and
push
and
mov
ds
ret
ss
leave
repz
mov
mov
or
add
push
mov
call
pushl
movsb
or
das
movsb
arpl
repz
mov
mov
loopne
adc
out
pushf
cltd
test
push
jnp
jmp
xor
rorl
mov
and
movsb
ficoms
cmc
outsl
mov
loope
dec
fisttpl
cmc
mov
push
mov
mov
and
adc
jns
imulb
lahf
mov
or
mov
jmp
pushl
fsubl
sbb
enter
sbb
out
jb
and
add
push
cwtl
adc
ljmp
sbbb
mov
push
hlt
cmp
inc
xchg
bound
lret
iret
fisttps
xchg
lods
ficomps
and
sbb
push
mov
sub
push
pop
dec
inc
xor
mov
jne
lock
jg
cmp
fmull
pop
sbb
cs
inc
ret
scas
or
sahf
push
xchg
in
sar
decl
sbb
inc
fwait
cmp
xlat
push
shll
and
repz
enter
push
into
or
les
stos
cwtl
imul
push
jno
insb
inc
cmc
cmpsl
jne
mov
nop
lods
xchg
lcall
xchg
or
adc
pop
dec
sub
clc
das
adc
fldenv
dec
fisttps
mov
sahf
push
xchg
sub
pop
lret
outsl
xchg
pusha
lahf
test
sub
pop
pop
les
push
push
gs
lcall
daa
sbb
out
push
jmp
sbb
outsl
pop
test
stos
or
xchg
cs
adc
inc
mov
mov
outsl
outsl
in
sub
mov
push
rorb
jg
cli
jbe
cltd
push
add
in
add
mov
in
and
scas
std
xor
decl
mov
fmul
xor
js
push
sub
fcoml
test
aad
daa
pop
sti
int
pushl
adc
mov
scas
inc
inc
popa
xchg
xor
xchg
fcomi
lret
pop
les
dec
adc
popf
in
mov
lcall
cmp
add
shll
mov
int3
loopne
rcrb
sbb
push
out
sub
fnstsw
mov
jle
cmp
stos
fwait
loop
addr16
data16
mov
insl
dec
and
cmpsb
ss
call
insb
lahf
ds
shll
mov
inc
sub
aas
out
mov
enter
mov
stos
pop
and
lcall
mov
push
xor
fwait
jmp
fcomps
cld
pop
hlt
cmp
jno
xor
rcll
popw
pop
xchg
jmp
push
fldt
decl
cwtl
xor
jp
jmp
out
mov
mov
data16
dec
jmp
insl
iret
loop
sub
in
lahf
sub
fcomip
ret
js
rcrl
aaa
stos
add
mov
imul
fisubrs
mov
sub
add
add
or
sub
mov
cltd
fistl
sub
inc
mov
sbb
popf
jl
cmp
lcall
push
mov
inc
jmp
lock
pop
iret
movl
decl
lock
stos
jp
xchg
test
in
xchg
dec
cli
icebp
xor
jne
decl
pushf
mov
test
add
jl
lds
test
decl
mov
aam
repz
jl
mov
jge
ds
cwtl
nop
mov
push
push
xor
dec
xchg
popf
sbb
mov
cmp
stc
inc
pop
scas
outsb
push
mov
sub
mov
ds
add
ret
lds
sbb
dec
ficomps
mov
fwait
pop
sahf
xchg
mov
filds
je
dec
cmp
mov
ljmp
lock
cmc
cmp
or
mov
inc
mov
loop
push
add
mov
sbb
adcl
dec
clc
cli
push
loop
jg
dec
ror
push
add
repz
mov
or
sar
push
gs
or
cmpsb
ret
popf
push
dec
aad
push
inc
cmp
jnp
jne
dec
pop
in
dec
test
pushl
jecxz
inc
test
xor
xorl
mov
inc
sub
push
xchg
or
mov
call
add
sub
xchg
dec
lea
push
daa
lret
sti
mov
out
adc
mov
pop
cwtl
sarb
xor
loopne
sbb
jp
dec
lcall
sti
repnz
or
sub
xor
mov
mov
cmp
fwait
jg
pop
loopne
pushl
adc
rclb
push
jg
mov
movsb
jne
aam
decl
sbb
push
push
dec
inc
insl
and
cli
lahf
and
pop
mov
cmp
scas
sub
and
adc
xchg
cmp
subb
clc
jns
jnp
mov
mov
movsl
test
pop
cmp
add
push
leave
loope
in
incl
es
lods
fcmovbe
sbb
mov
dec
and
repz
call
lret
pop
xor
stos
andl
ror
fisttpll
in
mov
in
ret
xchg
cmp
stc
fwait
and
lcall
adc
xor
xchg
inc
insl
movsl
pop
cmpb
xor
rol
js
out
in
xchg
movsb
icebp
mov
icebp
cmc
adc
inc
incl
pop
mov
js
cs
lods
adc
add
das
push
sbb
xorl
js
xor
shrb
inc
lret
fimuls
jmp
mov
dec
xchg
pushf
jne
mov
sub
mov
mov
insl
push
ljmp
lret
add
and
sbb
mov
add
mov
mov
lahf
fsubrs
incl
mov
mov
popa
loop
nop
test
scas
push
mov
popa
testb
std
pop
loopne
shll
mov
ret
js
out
lret
lret
lcall
pop
lahf
movsl
add
push
xor
dec
cli
dec
cmp
xchg
xor
fdivrp
pop
lock
add
test
and
cmp
xlat
out
jp
hlt
lcall
int3
add
cmp
movsb
lcall
out
jge
movsl
dec
cld
mov
fisubl
inc
sub
adc
inc
cmp
jecxz
inc
rcr
or
adc
orb
call
cs
cmp
fists
dec
xor
lea
dec
pop
mov
push
push
jbe
test
pushl
dec
insl
cld
lret
push
push
cmp
cmp
push
dec
sub
ss
mov
sub
dec
dec
xor
xchg
sbb
sahf
pop
push
mov
fimull
mov
push
out
push
inc
cmp
inc
movsb
in
lods
clc
pusha
ret
mov
jb
jns
or
push
lods
hlt
fnstenv
xchg
les
adc
out
add
push
shl
popa
cmp
push
aas
out
clc
lret
popa
xchg
and
bound
push
mov
push
nop
ret
add
or
cld
or
test
test
loope
xchg
stos
rol
inc
cmp
sbb
inc
ja
sbbb
out
and
mov
cmp
jmp
lret
inc
xchg
jb
in
inc
mov
adc
test
addr16
pusha
sbb
push
ljmp
mov
fwait
jnp
dec
icebp
jmp
lods
fmull
xor
test
leave
cltd
mov
cwtl
pop
cmp
dec
fwait
adc
sub
sahf
mov
xrelease
lcall
lcall
lret
mov
add
in
mov
mov
lcall
mov
jl
or
or
imul
ja
mov
incl
cmpb
adc
imul
xchg
inc
jo
shl
daa
and
lcall
out
shl
xabort
outsl
in
adc
test
xchg
jo
xor
decl
inc
jo
clc
dec
pop
repz
sbb
xchg
filds
dec
mov
mov
in
cmpsl
shrb
stos
push
fs
leave
mov
mov
mov
popa
into
add
cmp
inc
inc
stc
scas
rcr
jp
call
mov
mov
incl
shl
pop
and
mov
fs
jmp
xor
ficoml
seta
mov
jmp
decb
dec
retw
cli
incl
jo
mov
out
sub
cmp
add
push
dec
add
in
int
aas
lock
or
mov
mov
mov
cld
or
jecxz
stos
sbb
data16
mov
insl
pop
hlt
jae
loop
in
xlat
mov
imul
decl
int3
mov
mov
sbb
sbb
outsl
ja
es
lcall
out
push
xor
inc
rol
loope
sub
fistps
fmul
adc
and
mov
cmp
cmpsl
add
add
loopne
in
aam
popf
and
popa
outsl
rcrl
cmp
call
ss
ja
ljmp
and
inc
mov
das
pusha
loop
jns
pusha
aam
and
inc
cld
pop
pushf
jbe
repz
and
insb
leave
outsl
mov
ja
sahf
addb
inc
into
cmpsl
sub
lret
in
xor
divl
adcb
xor
mov
fnstsw
mov
sbb
pop
je
pop
jo
out
cmp
outsl
push
incl
stc
dec
mov
sbbb
mov
adc
gs
outsb
add
scas
subb
loopne
inc
and
push
mov
and
jge
mov
cld
xor
cmpsl
decl
mov
sar
and
pusha
push
xchg
cmpl
cmp
ljmp
dec
xor
ret
mov
xchg
pop
lret
cld
push
mov
call
mov
jnp
decl
mov
popa
inc
fimuls
rorl
sbb
lret
stc
mov
fmulp
call
call
mov
outsl
dec
dec
and
mov
imul
cmp
fdivl
arpl
sub
inc
iret
loope
jne
adc
pop
xchg
sub
cmp
hlt
dec
jnp
mov
or
js
xor
lcall
pop
cmc
sbb
inc
mov
jg
jg
ret
fnstcw
or
fbld
in
jecxz
stos
or
add
orb
mov
popf
cli
mov
adc
pop
sbb
std
movsb
ljmp
mov
sbb
push
mov
fisttpll
push
mov
aam
xchg
mov
mov
mov
xchg
ret
scas
pusha
cmpsl
xchg
and
shr
push
fs
cmp
ret
ret
inc
mov
sub
std
shr
js
jge
fisttpll
leave
pop
rorb
test
sbb
sbb
push
or
pop
imul
dec
fs
jg
or
adc
jmp
mov
cld
dec
inc
and
mov
adc
mov
sub
xchg
imul
cmc
or
cli
imul
xchg
mov
push
lods
xor
mov
jg
dec
cmp
xchg
sub
cmp
test
sarb
rclb
aas
test
shl
sahf
lock
lock
inc
js
outsl
call
ljmp
and
cmpsb
insb
gs
cmp
jo
movl
aas
stos
loop
inc
xchg
arpl
xchg
call
in
and
lahf
mov
pushl
dec
pop
out
fstps
mov
ret
push
sub
loop
mov
fisttps
cmpsb
aaa
cmpb
cmp
imul
sub
lcall
incb
insb
test
inc
ljmp
jbe
add
adc
fcompl
dec
insb
lret
jnp
test
sub
loopne,pt
mov
and
in
lods
pop
and
dec
out
and
jae
or
jmp
shll
rolb
add
pop
stc
test
and
dec
add
in
scas
and
push
xor
mov
popa
jle
fmuls
push
insl
gs
mov
add
pop
mov
test
mov
jmp
sbb
fcomi
ljmp
cltd
in
movsb
in
push
orl
rclb
outsl
xchg
mov
and
fists
or
push
or
pop
orb
mov
inc
mov
adc
sub
scas
insb
xor
xor
jg,pt
xlat
inc
ss
cwtl
pop
push
aad
lea
or
ljmp
jmp
xor
mov
and
imul
testb
dec
push
pusha
sub
fcmovb
pop
shrb
pushl
adc
and
or
icebp
lea
mov
sbb
inc
adc
popf
popa
jnp
jne
jb
imul
cmp
adc
mov
mov
movsb
mov
outsb
lods
fwait
jmp
xor
jle
mov
dec
mov
mull
mov
fstpl
push
pop
xchg
xor
pushf
mov
push
arpl
pop
test
cmc
cmp
sub
repz
pop
in
test
ljmp
test
scas
and
pop
inc
add
xchg
jo
jle
mov
push
movsb
aad
jae
cwtl
data16
mov
les
daa
jo
jns
mov
xor
jno
fwait
add
cmp
mov
mov
dec
and
cmc
inc
out
jnp
nop
mov
and
sub
lcall
pop
fs
inc
jmp
cmpsl
inc
pop
cmp
xchg
stos
arpl
call
call
inc
loopne
mov
xor
pushf
cld
scas
sti
stos
fldcw
add
jmp
mov
push
aaa
test
rclb
hlt
cmp
pushl
jmp
outsl
mov
scas
jmp
inc
xchg
testl
in
add
ljmp
ljmp
into
mov
clc
pop
in
scas
js
mov
mov
jg
test
insb
adc
jmp
fldenv
jmp
loopne
ss
mov
mov
add
data16
cmp
add
loope
shlb
aam
mov
ljmp
loope
cmp
or
in
push
adc
call
mov
shrl
inc
call
out
aam
aam
push
adc
cld
mov
jmp
lock
mov
gs
or
adcl
xchg
xchg
icebp
xchg
out
cli
mov
out
pop
out
out
pop
insb
mov
fcmovne
add
ljmp
sub
push
call
rclb
jno
popa
or
xchg
mov
lods
and
jmp
mov
jno
hlt
xchg
stos
mov
inc
push
sbb
push
movsb
mov
pushl
dec
pop
das
clc
xorps
jnp
shrl
cmp
test
loopne
test
loop
lcall
das
adc
outsl
jmp
test
rol
mov
mov
cmp
js
mov
dec
decl
lock
js
adc
test
stos
inc
lods
cltd
xchg
rorb
mov
pushl
push
dec
mov
pop
pop
dec
sarl
sub
jle
xor
call
outsb
cli
loop
adc
cmp
lea
lahf
push
cwtl
adc
mov
pushl
dec
sti
scas
loope
or
xor
movsl
arpl
fs
incl
aad
cmp
les
mov
jecxz
jbe
out
ret
popf
adc
sub
adc
pop
mov
jle
cmp
pusha
pop
pop
push
aad
mov
cltd
or
sbb
mov
push
adc
adc
lahf
mov
int3
lcall
push
pushl
clc
inc
add
addr16
and
or
rorl
xchg
pusha
lea
dec
out
shlb
decl
dec
pop
mov
rclb
add
mov
inc
sti
sbb
ljmp
push
mov
inc
dec
and
lock
jbe
pop
jl
or
push
and
add
adc
mov
mov
dec
in
mov
jmp
cmp
and
in
xor
testb
aaa
test
xor
inc
adc
addr16
shl
inc
nop
xor
repnz
mov
and
mov
inc
imul
decl
inc
mov
popl
push
xchg
dec
xor
and
add
jmp
pop
or
shll
cltd
ja
inc
jge
lret
out
pushf
sbb
rol
les
jg
push
int
xchg
pop
xchg
test
jo
cmp
sub
mov
je
sub
pushl
aam
sub
inc
sbb
sub
enter
clc
scas
fiaddl
adc
int
sbb
mov
js
add
call
pushf
call
mov
ljmp
xchg
pop
pop
sub
add
mov
loop
inc
out
push
ss
enter
pop
orb
enter
and
outsb
sub
int3
loop
cld
or
lcall
jmp
push
mov
and
mov
dec
pop
push
adc
add
test
mov
loop
ds
dec
lcall
fwait
jecxz
in
add
sbb
mov
pushl
out
icebp
sbb
adc
push
ljmp
xchg
lahf
mov
cmp
lock
jnp
jecxz
pop
pop
addb
cmp
inc
frstor
daa
sbb
xchg
dec
jge
sar
jmp
std
push
cmp
sub
jmp
daa
mov
or
or
enter
adc
fistpll
or
adc
lcall
int
test
or
out
les
fwait
ror
xor
jg
mov
aas
es
xlat
ljmp
or
push
mov
sahf
pop
sbb
in
mov
lcall
out
cltd
pop
out
out
in
ljmp
jbe
add
out
dec
js
outsb
xor
repnz
add
and
addr16
int
daa
mov
jb
xchg
shlb
nop
or
sarl
mov
xchg
icebp
fadds
daa
inc
add
mov
and
inc
add
ljmp
xor
clc
pop
inc
push
pop
dec
mov
mov
lcall
xor
ja
movsb
cld
shrl
stc
in
mov
push
call
lcall
lret
push
sbb
mov
xchg
loope
fwait
sbb
ljmp
call
movsb
cmp
push
out
mov
mov
ja
daa
xchg
rclb
ret
pushl
fnsave
and
cmp
adc
xchg
add
pop
mov
sbb
add
decl
insl
cmp
out
test
jbe
adc
jg
add
jne
xor
push
divb
push
add
and
jg
leave
lret
mov
push
inc
ret
cmp
daa
enter
cmpsb
scas
fmull
enter
add
jno
ja
fdiv
xchg
rorl
fsubrs
dec
xor
push
pop
insb
daa
xor
xchg
cld
sbb
ljmp
jae
dec
mov
add
push
mov
push
incl
out
or
pop
mov
test
xacquire
or
in
inc
incl
push
in
nop
roll
mov
idiv
sti
jnp
leave
inc
push
xchg
lods
aaa
pop
or
dec
inc
popf
ja
mov
dec
test
shll
leave
xor
decl
cmp
fcoms
mov
mov
mov
test
iret
xor
call
repnz
jg
lret
mov
sub
cmp
mov
push
sbb
xchg
pop
jno
hlt
pushl
pop
mov
sbb
xchg
mov
mov
adc
movsl
add
adc
push
cwtl
clc
fildll
lock
jne
shr
insl
ja
inc
sub
mov
xchg
adc
call
jle
rcrl
filds
push
fwait
stc
addr16
xchg
stos
mov
std
dec
xor
std
xor
call
xor
xor
das
xor
int3
dec
sub
or
cltd
es
jo
fucomp
xor
jns
scas
test
push
fisttpl
xchg
mov
jge
fprem1
mov
fistl
xorb
pushl
or
mov
sahf
add
fsubl
addr16
jle
decl
and
push
and
stos
nop
iret
mov
or
lret
ds
sar
sbb
cld
push
cmp
inc
xlat
xchg
aam
push
out
call
xchg
dec
lock
lods
mov
push
dec
mov
adc
cwtl
aad
or
jecxz
incl
jno
cmpl
movsl
xchg
xchg
in
mov
call
lret
mov
dec
aas
test
dec
jp
xor
cmp
mov
pop
mov
clc
push
inc
movsl
xlat
imul
xlat
sub
sbb
push
aam
jp
call
adc
mov
xchg
sbb
push
das
and
dec
cltd
leave
mov
mov
pop
call
arpl
ss
xor
add
insl
fimuls
pop
je,pn
pop
xchg
mov
call
adc
es
adc
push
jmp
lahf
std
add
push
call
notb
cs
xor
sub
call
mov
jnp
mov
sahf
in
movsb
mov
and
adc
push
addr16
nop
fwait
lret
xchg
je
call
jbe
in
inc
icebp
dec
pop
dec
call
outsl
dec
cld
lcall
out
clc
add
mov
adc
adc
mov
jns
fstpt
insb
inc
leave
inc
mov
sti
out
cwtl
repz
jmp
incl
sub
mov
sub
rcrl
mov
mov
jmp
jecxz
nop
js
lahf
call
mov
in
out
and
or
lods
and
imul
inc
mov
jmp
rcl
dec
sbb
push
xor
sub
or
cld
lods
psubusw
clc
lea
addr16
sbb
adc
jle
lock
pushf
repnz
ljmp
loope
xor
mov
shlb
imul
leave
jno
int3
cli
pusha
out
xchg
cli
decl
cmp
jmp
imul
lods
pop
lock
push
repz
arpl
out
xchg
ret
movsb
dec
cwtl
jp
pop
mov
cmp
call
jbe
mov
orl
dec
int
ljmp
jmp
mov
sbb
into
subb
jle
stc
popa
ret
jge
fnstenv
fisubrs
in
insb
mov
bnd
inc
mov
jns
aam
lcall
aas
or
dec
pop
in
sbb
inc
mov
ljmp
push
pop
call
ljmp
jns
and
and
add
cld
in
scas
shlb
jl
pop
or
lret
mov
rcl
cmpb
adc
fmull
jge
icebp
and
jmp
jns
mov
inc
sub
adc
push
and
mov
fidivs
je
incl
lods
xchg
push
or
stc
clc
xlat
sub
mov
aaa
cmp
cmp
ljmp
in
int3
push
mov
dec
sub
dec
inc
scas
pop
sub
cwtl
out
and
lock
lcall
hlt
adc
sub
bound
lcall
cwtl
aam
dec
pop
iret
adc
mov
add
jmp
js
dec
mov
js
decl
pusha
mov
fstpt
cwtl
push
fs
rolb
mov
cmp
jmp
mov
add
jg
aas
mov
and
xchg
xor
add
jb
and
dec
pop
xor
pushl
scas
sbb
mov
sub
push
sub
jno
int3
pop
sub
in
fistpl
pushf
lds
jle
ljmp
pop
cmp
sbb
adcl
outsl
or
xchg
mov
inc
push
add
push
sub
pushl
pop
pushl
xchg
incl
pop
push
or
cmp
out
sub
pop
xchg
lock
dec
mov
sar
xor
aas
fidivrl
fmul
inc
adc
add
cmpsl
es
pop
int3
mov
out
hlt
jmp
and
and
inc
iret
adc
std
mov
inc
mov
jo
dec
jle
and
sbb
mov
cmc
sub
das
jo
incl
sub
std
xchg
xchg
repz
pop
jle
xchg
iretw
sub
repz
jmp
ss
sti
dec
repz
mov
lea
add
sarl
mov
jns
clc
xor
call
xor
aam
inc
xchg
xchg
fadds
gs
fdivs
or
mov
lcall
lcall
das
xlat
scas
and
lds
push
mov
xchg
or
jg
pusha
daa
jge
inc
ss
push
aad
lahf
das
mull
sub
nop
aas
pop
lods
inc
ret
cmp
xchg
jl
lret
add
iret
addr16
fnstsw
push
xchg
mov
jg
subl
mov
sahf
push
inc
in
daa
mov
clc
sub
mov
pop
jg
xchg
sbb
mov
lcall
cmpsl
mov
insl
out
add
icebp
mov
aas
push
lcall
mov
aad
in
pop
jno
stos
lret
testb
sarb
lcall
repnz
xor
cmc
sbbb
jg
pop
push
test
mov
sbb
mov
inc
inc
lds
mov
push
cltd
addr16
add
int
and
cwtl
aaa
and
clc
sbb
pusha
mov
add
xchg
cmpsl
push
cmp
ficoms
push
lcall
dec
push
xchg
dec
je
mov
xchg
aas
nop
test
pop
cmc
clc
std
ret
lods
jnp
lcall
gs
jmp
push
roll
pop
cmp
lahf
dec
aaa
add
insl
stos
jl
shl
and
popa
lock
decl
sbb
xchg
daa
in
or
test
push
mov
pop
add
out
and
sub
iret
push
adc
icebp
and
es
ljmp
lock
mov
dec
sbb
adc
mov
jmp
pop
jg
decl
test
jp
and
sub
cmp
adc
call
repz
outsb
loope
lldt
xor
push
jge
push
sbb
std
push
mov
inc
mov
mov
call
in
dec
out
ret
fcoml
fs
mov
cmc
lcall
sbb
aaa
pop
mov
idiv
mov
stc
push
ja
je
andb
jns
mul
sub
lods
mov
push
and
aaa
jnp
movb
mov
jno
rcrl
loopne
roll
bnd
inc
push
outsl
cmp
adcl
pushl
popa
inc
cli
dec
adc
cmp
lds
cli
add
add
jb
cmp
jmp
push
mov
imul
lret
or
std
std
adc
aaa
incl
pop
leave
sahf
stos
hlt
lcall
bnd
lahf
arpl
mov
xor
ret
jmp
outsb
rorl
sti
or
push
dec
push
xor
out
ficompl
cmpsl
pushf
mov
push
imul
fcoms
mov
movsb
shl
sub
mov
out
inc
adc
lea
jb
ds
sbb
jp
mov
sub
xchg
push
sub
test
sub
or
cltd
cli
and
xor
out
mov
cmp
test
sbb
out
mov
jb
cli
jmp
jp
scas
aaa
xor
sub
addb
xchg
imul
out
ficomps
movsb
loopne
aad
call
daa
test
dec
adc
mov
xchg
shrb
or
xchg
popl
xchg
lods
push
cmc
or
repz
je
movsl
dec
cmp
les
pop
fwait
std
out
scas
cmp
mov
rclb
aaa
jno
lahf
icebp
mov
iret
testl
mov
push
in
adc
jnp
in
xorl
xchg
add
cs
mov
push
data16
push
mov
data16
lods
popf
inc
mov
mov
jmp
jo,pn
bound
adc
xchg
stc
mov
xor
out
scas
les
xor
in
daa
bound
jmp
mov
pop
cltd
sbb
aas
imul
outsl
movsb
in
lods
and
in
repnz
aaa
jmp
pop
je
push
cmc
scas
sbb
adc
xor
dec
adc
jno
pop
bound
lret
hlt
lods
sar
incl
sub
jge
ret
push
sbb
rcr
ffreep
push
mov
dec
addr16
xor
jmp
ret
pop
ljmp
movsl
in
pop
data16
sbb
add
sbb
push
pop
cmp
jmp
push
pop
inc
rolb
add
imul
outsl
inc
inc
and
pop
int3
or
outsl
fadds
jbe
mov
rol
jno
pop
adc
stc
add
lods
xchg
push
out
decl
lret
dec
repnz
mov
mov
mov
incl
cld
add
cmp
out
jnp
mov
mov
lcall
outsb
pop
enter
or
lcall
std
test
and
cmpsb
lcall
jne
cli
cmp
xlat
pop
and
cmp
xor
or
cmpsl
das
pop
in
hlt
sub
mov
pushf
xor
iret
push
aaa
out
cli
decl
add
iret
mov
sbb
sahf
pop
jno
aaa
dec
push
mov
cmp
pop
std
lcall
mov
inc
pop
adc
mov
pminsw
scas
lds
push
cld
lcall
or
mov
test
fsubrs
xchg
and
sbb
inc
fdivr
inc
int3
mov
ret
inc
xchg
or
push
lods
int3
inc
adc
dec
cmpsb
addr16
push
push
sahf
enter
lcall
aaa
test
or
add
pop
test
mov
xlat
stos
fdivr
lcall
adc
dec
or
and
cwtl
scas
loopne
arpl
sbb
ss
into
mov
les
xchg
mov
mov
ljmp
ficoms
cli
sub
clc
test
dec
lods
xchg
pop
in
call
jnp
push
decl
cmp
jae
pop
xor
and
sar
jg
in
popf
xor
push
xchg
cmp
xchg
push
xor
add
call
add
push
adc
pop
adc
jmp
imul
mov
cmp
int
je
loope
insb
stos
fdivl
pop
cmp
data16
scas
daa
dec
jl
fldz
pop
xor
cltd
fs
jnp
adc
inc
ror
dec
addr16
cmp
xchg
mov
sbbb
call
incl
mov
sub
ja
stos
lahf
rcrb
sbb
cmp
sbb
lcall
es
scas
ss
sub
nop
clc
iret
and
or
push
sbb
stc
insb
mov
fimull
incl
cmp
aaa
dec
clc
into
dec
cmp
mov
outsb
imul
mov
dec
sub
scas
mov
outsl
les
mov
sub
repz
imul
push
dec
test
jg
int3
push
stc
pop
adc
or
into
xor
fs
pop
repnz
jmp
ljmp
test
and
or
shr
test
push
aad
mov
inc
mov
or
adc
out
adc
sbb
loopne
imul
push
pusha
jge
jmp
dec
dec
sbbl
dec
rclb
stos
jp
add
test
jae
lods
xchg
dec
cmc
jmp
pop
loop
loop
dec
out
aaa
inc
xchg
jge
mov
cmp
inc
cmp
lcall
mov
dec
cwtl
mov
pop
and
push
lret
inc
cld
sub
fsubl
pushf
lds
ljmp
cmc
mov
xchg
ljmp
ja
jmp
outsb
es
aad
sub
ja
lcall
in
jle
xchg
leave
in
inc
daa
jo
push
daa
call
and
lcall
lret
imul
add
scas
test
enter
xchg
xor
pop
cmp
mov
insl
or
cmpsl
orl
cltd
adc
out
insl
test
daa
ljmp
rclb
ret
xor
xchg
jmp
push
data16
mov
nop
rcr
mov
sbb
movsl
xchg
inc
decb
lds
or
xchg
push
xlat
insl
jp
in
push
sub
clc
xlat
dec
lret
mov
jge
fdecstp
pop
dec
mov
lret
push
jmp
sub
outsb
repnz
dec
jle
mov
ret
out
inc
dec
rclb
mov
adc
lods
imul
fcmovbe
lock
out
cli
mov
jecxz
popl
mov
scas
cmpsb
movsl
adc
sahf
mov
mov
subb
or
hlt
cs
dec
cmp
roll
mov
fistps
xor
outsl
mov
sahf
dec
inc
push
scas
push
pop
inc
outsl
sti
cltd
xor
decl
xor
dec
jo
jle
inc
dec
lret
shll
pushf
jo
mov
sbb
add
sub
jmp
pop
stos
dec
mov
and
xorl
push
adc
xor
incl
out
jmp
sbb
add
cmpsl
into
push
and
int3
movsl
mov
push
push
mov
pushl
xchg
xchg
add
xor
testb
add
jl
imul
xor
push
insl
mov
lret
jmp
push
sbb
sbb
inc
sub
nop
adc
jmp
clc
ljmp
in
scas
sbb
mov
aam
push
out
in
jmp
es
pushl
dec
cmp
repz
mov
out
stos
mov
pushl
and
shll
sub
pop
ret
mov
in
or
mov
stos
pusha
testl
pop
mov
addr16
insl
std
out
fs
addr16
ljmp
sub
rorb
cmp
and
ljmp
and
call
mov
jg
mov
fcmovnb
pop
cmp
and
rol
mov
icebp
jb
xchg
pushl
pop
mov
pushf
jne
shlb
jle
push
pop
les
mov
add
jo
mov
jmp
sbb
inc
sbb
das
mov
dec
imul
cmpsb
mov
scas
cmp
mov
fcmovb
paddq
incl
enter
out
sti
mov
imulb
negl
and
aam
or
and
ljmp
mov
lods
inc
pushf
gs
cli
inc
dec
mov
mov
mov
pop
add
cmp
push
scas
leave
test
inc
or
push
xchg
jecxz
cmp
adc
test
xchg
jo
sub
repz
mov
loop
mov
mov
insl
jmp
lock
jmp
lcall
cmp
scas
jb
jb
clc
and
stc
hlt
add
popa
out
cmpsl
and
jle
fcoms
mov
xchg
mov
pusha
sarb
xchg
aas
and
pop
jecxz
in
fbld
jl
fs
ljmp
leave
addl
das
dec
incl
dec
dec
lods
sahf
adc
or
movsb
popl
bound
inc
and
mov
adc
lcall
xor
inc
sti
adc
add
rcrb
push
lcall
lcall
cli
fimuls
push
jmp
xor
lods
into
loop
outsb
or
ss
cmp
add
icebp
incl
rcr
pop
sub
cmc
ret
cmp
mov
fsts
bound
lret
decl
xor
push
cmp
jle
mov
in
test
subb
imul
xor
sub
lods
aam
pop
testl
rolb
pushl
mov
aaa
lock
popa
stos
popa
lock
xchg
shlb
mov
adc
call
or
push
lret
mov
call
mov
and
arpl
shll
lcall
fbld
pusha
add
fidivs
scas
inc
cli
stc
pop
iret
mov
fldt
sbb
lock
dec
orb
call
loope
mov
or
stc
ss
leave
leave
gs
xlat
sbb
push
decl
jl
sub
or
add
mov
mov
js
push
stos
pop
adc
ret
mov
arpl
jns
fadd
push
test
mov
xchg
and
sbb
out
adcb
in
sub
xchg
int3
pop
loope
fcomip
outsl
incl
xor
mov
mov
aas
adc
push
mov
incl
or
pop
inc
mov
dec
lret
mov
hlt
jmp
jg
dec
addr16
mov
jg
lods
mov
ljmp
movsb
and
add
lcall
xor
out
lcall
jmp
cmp
icebp
rcrl
imulb
cmpsb
das
repnz
pop
push
xor
movsb
jle
inc
lret
ds
mov
sub
mov
lcall
mov
sbb
fiadds
hlt
add
mov
xchg
rorl
adc
ja
test
xchg
pushl
jbe
popfw
fucomip
xchg
cmpb
pop
adc
xor
and
cmp
ss
es
and
mov
adc
mov
repz
js
jg
pop
fstp
repz
cmp
mov
ret
out
popf
dec
inc
ljmp
pushl
std
bound
push
push
xchg
loop
jno
jns
mov
lock
adc
ror
jecxz
push
sub
dec
pop
jne
or
outsb
imul
call
jnp
xor
inc
scas
mov
cltd
mov
test
js
test
test
fdivl
mov
and
push
add
stc
loop
lcall
adc
inc
pop
call
mov
xchg
shlb
and
shr
push
pop
pop
js
movsb
adc
fildl
inc
adc
push
repz
cmp
sti
xchg
test
xor
andl
pop
movsl
xchg
in
mov
enter
cmp
xchg
stos
movb
jno
movl
decl
ljmp
inc
inc
pop
in
pop
inc
pop
in
jnp
jno
jno
push
dec
lock
hlt
xor
jmp
rcl
sbb
push
stc
insl
mov
test
and
inc
scas
inc
sbb
pop
and
push
mov
mov
adc
stos
test
inc
pop
std
pop
xchg
in
aad
jmp
outsb
aam
and
out
outsl
add
test
hlt
aad
or
mov
int
aad
mov
lods
mov
dec
pop
lods
or
lock
jg
pop
jno
ret
repnz
jb
out
sbb
ret
pop
push
pop
dec
out
push
stos
jae
and
fidivrs
cmp
call
and
pop
push
sti
adc
adc
sub
sti
pop
pop
jge
or
xchg
jg
scas
orb
frstor
cmp
mov
mov
cmc
mov
loope
push
push
push
or
and
add
mov
imul
aad
cld
jle
into
mov
pushf
inc
dec
xchg
jge
enter
dec
jno
ret
mov
and
ds
jb
ffreep
outsb
push
inc
inc
pushl
lret
bt
jbe
scas
lret
cli
mov
cmpsb
outsl
clc
pushl
mov
sbb
adc
out
std
dec
mov
bound
cs
push
sub
lcall
and
inc
insl
scas
jo
mov
xor
jg
lcall
add
decl
pop
outsb
into
imulb
cli
mov
std
cmp
xor
loop
ret
cwtl
shrl
or
incl
enter
into
aas
dec
xor
ret
aaa
jmp
jg
in
dec
lret
fwait
pop
lcall
into
cmpsb
in
add
rcrl
sub
testb
xchg
call
pop
lock
test
jle
add
loopne
jbe
out
jp
dec
movl
scas
decl
test
sti
iret
nop
push
sbbl
jl
out
es
add
iret
ljmp
imul
push
je
pop
imul
mov
sbb
or
cwtl
and
push
lea
clc
push
push
lret
xchg
bound
add
repz
xlat
inc
cmp
lahf
movsl
pushf
lcall
call
int
xchg
dec
cmp
cmp
outsl
sbb
iret
lock
pushl
lea
fcoms
mov
jle
outsl
xchg
mov
inc
sbb
call
dec
push
jp
fistl
stos
out
test
jnp
popa
fs
mov
sahf
roll
repnz
sarl
call
adc
push
mov
aad
mov
sbb
aas
repz
xchg
xchg
lcall
or
push
scas
enter
iret
out
xchg
mov
pop
cmp
jne
andb
daa
nop
mov
ljmp
push
mov
jle
inc
inc
jno
sbb
mov
pop
mov
rcl
xor
loop
lcall
mov
jns
sbb
xchg
and
popa
lret
xor
pop
dec
inc
dec
sbb
cmp
stc
jmp
lods
das
gs
scas
jbe
pop
adcl
adc
adc
mov
adc
aad
data16
push
jnp
lret
lock
lock
fdivs
sbb
fmul
ret
fcoms
out
cmp
xor
incl
cmc
jne
xchg
sarb
addr16
sbb
aam
jmp
push
or
cmp
pop
push
pop
repz
insl
lret
push
bound
and
fmul
sub
jno
shlb
jmp
jmp
out
pushf
rcl
adc
pop
jb
adc
cmc
cmp
jle
popa
and
incl
out
out
pop
push
test
loopne
in
adc
aam
dec
imul
jnp
push
adc
dec
xlat
je
incl
cmpsl
sub
add
movsb
repnz
clc
push
cmp
add
test
imul
lcall
enter
cmc
in
mov
and
push
sti
lret
jle
push
dec
mov
sti
inc
adc
jmp
ja
mov
sbb
and
add
push
std
mov
xchg
or
fld
or
clc
rcrb
pop
pop
js
int3
inc
mov
fucomi
lds
hlt
in
adc
icebp
xor
xchg
pop
aaa
std
push
mov
movsb
sbb
adc
addr16
shll
clc
or
nop
out
out
ljmp
push
cld
mov
out
pushf
or
popf
dec
movsl
fs
pop
je
xchg
test
decl
stc
pop
mov
xor
or
fsubrl
sbb
push
push
shrb
js
add
rclb
lret
outsb
scas
or
jo
lcall
arpl
out
xchg
arpl
cld
xlat
arpl
cld
push
mov
jnp
and
xchg
jmp
or
mov
mov
mov
inc
or
mov
xor
ljmp
and
mov
ss
orb
jle
cwtl
mov
int3
cmpsb
push
fxam
sar
pushl
xchg
leave
lret
dec
push
daa
jbe
imul
sub
cs
xchg
mov
pusha
cwtl
ljmp
mov
dec
into
pop
pop
adc
cltd
mov
or
sti
add
idiv
ja
inc
shlb
mov
cwtl
mov
sub
add
mov
lcall
addw
scas
es
movsb
mov
out
jle
fcomps
hlt
mov
iret
or
mov
in
stos
stos
inc
fistpl
and
mov
mov
adc
pushf
insb
hlt
loope
fldcw
mov
inc
int
pop
pushl
xchg
addl
dec
sub
xchg
mov
mov
dec
ds
push
sub
nop
nop
inc
jmp
add
lcall
cmp
adc
lcall
dec
gs
lea
xchg
dec
int3
js
clc
dec
mull
add
jnp
push
pop
cmp
jae
jbe
cwtl
cld
jg
icebp
loope
insl
aas
ds
xor
jnp
aaa
into
or
cmp
call
mov
push
out
jne
into
add
pushf
mov
int3
mov
sbb
cmp
scas
dec
lods
inc
push
sahf
and
ljmp
mov
daa
pop
jge
lret
out
fsts
shll
out
jae
outsl
clc
fildll
fsubs
aas
mov
mov
in
pop
or
out
test
cmp
push
outsb
rcrb
adcl
mov
ffree
adc
pusha
sahf
jb
daa
sub
push
mov
ret
sbb
std
test
mov
mov
cmpsb
or
loopne
popf
jnp
and
call
dec
mov
out
into
fwait
jb
pushl
mov
ret
ja
mov
je
adcl
add
test
xor
cld
rorb
frstor
sbb
pop
rorb
cmp
subb
shlb
out
add
jno
mov
jb
pop
pusha
push
fcmovnb
pop
sub
lock
cmc
outsb
push
out
and
loopne
jmp
cmpsl
rclb
and
cltd
stc
xor
pop
fisubrs
inc
insl
xchg
lods
mov
xor
imul
sahf
lahf
icebp
push
sbb
aam
jl
ljmp
push
std
ljmp
ret
xchg
cld
cmp
jl
inc
cld
cmpsl
mov
std
lds
sbb
cs
mov
jmp
jae
sub
cmc
dec
inc
fstpl
sbb
aad
lcall
adc
mov
into
addr16
push
ds
inc
xor
iret
add
mov
std
dec
addr16
or
cltd
hlt
sbb
mov
adc
loop
mov
cli
call
xor
lods
add
out
in
pushf
str
rcrb
xchg
xlat
xor
das
fs
scas
or
loop
call
aas
je
add
clc
bound
int3
or
shll
lret
popa
les
pop
sbb
incl
push
nop
or
dec
loopne
dec
xchg
mov
cmpsb
jl
or
push
mov
lock
mov
mov
in
in
cmpsl
das
stos
and
call
push
ret
sahf
stos
fsubl
jno
push
loope
insb
adc
cmpsb
pop
cmp
lcall
jg
pcmpgtb
mov
or
mov
cmp
pop
rclb
jno
xchg
pushl
andb
sbb
jmp
inc
das
lods
imul
dec
out
adc
repnz
mov
stos
testl
stos
or
add
incl
cltd
leave
loopne
test
or
mov
jmp
adcl
push
push
jbe
or
test
in
inc
jne
xchg
pop
fists
lret
sar
decl
fidivrl
icebp
sbb
scas
xor
movsl
movsl
mov
jecxz
jecxz
inc
sub
add
jg
popf
or
dec
fstpl
adc
repnz
out
aad
movsb
sbb
jae
rclb
lods
scas
pop
aad
pop
pop
cmp
test
popf
vpaddsw
jmp
push
loop
jle
mov
fisttpll
or
cltd
ljmp
jb
mov
cmp
lcall
mov
jge
out
xchg
cmc
push
push
add
fsubrs
or
jb
clc
call
pop
adc
clc
mov
rcrb
stos
mov
stc
scas
add
cmpsb
ljmp
cmp
xor
jbe
fwait
pop
fists
popa
aad
sbb
jge
mov
jmp
adc
mov
in
jnp
lret
imul
int3
cmp
js
add
fcos
ljmp
outsb
pushf
or
jl
pop
std
clc
or
adc
subl
xor
pop
ljmp
and
roll
rcl
ffree
cmp
incl
push
dec
movsb
pop
dec
jb
scas
adc
xor
in
jb
adc
mov
mov
dec
sub
xor
pop
sbb
sub
push
pop
cli
xchg
or
cld
decl
lock
fstl
popa
or
push
push
ret
out
outsb
cmp
mov
xchg
add
les
and
mov
pop
lret
lcall
in
loopne
mov
movsl
xchg
mov
and
mulb
adc
mov
adc
xchg
push
jae
stos
cmpsb
js
test
cli
jbe
mov
lcall
stos
push
ja
lock
push
mov
pop
sbb
out
es
js
or
std
sahf
int
hlt
pop
cltd
mov
jg
ss
mov
jmp
jnp
mov
push
xchg
inc
fwait
xlat
or
mov
or
cmpsl
les
andb
adc
and
adc
mov
and
push
xchg
das
adc
call
lea
aam
xchg
and
lret
xchg
mov
xor
ljmp
stos
push
and
repnz
nop
mov
mov
mov
dec
cmc
int3
int3
cmp
fidivl
dec
das
andb
cmp
pop
ljmp
call
sarl
and
ja
dec
push
pop
xchg
mov
sub
scas
scas
xor
inc
lods
in
xchg
gs
call
std
xor
lret
arpl
nop
out
xchg
push
andl
idivb
xchg
incl
fcoms
icebp
in
push
mov
push
inc
fildl
adc
cmp
lods
cwtl
call
decl
ret
out
dec
call
scas
imul
call
call
movsb
loop
into
loope
pop
scas
aas
dec
sbb
sub
lea
jmp
lods
pop
xor
sahf
push
push
into
xor
mov
imul
xor
mov
mov
xorb
call
cli
sbb
mov
sub
xchg
fs
stos
add
dec
iret
or
cmp
insl
mov
jg
cmpsl
test
jno
mov
dec
ss
xchg
push
xchg
and
jg
in
xchg
jae
sti
mov
decl
sarb
pop
xor
cltd
inc
decl
jne
xlat
icebp
cmp
sub
cmp
push
cmp
pusha
hlt
or
ret
lret
sbbl
mov
cmp
decb
push
into
shrl
or
daa
dec
cli
mov
cli
jo
jo
add
sub
mov
adc
mov
pop
sbb
push
mov
in
sti
int
call
inc
clc
mov
shrl
and
cmp
push
ror
dec
and
inc
call
and
shl
icebp
cmc
dec
fs
and
jo
or
int
xor
jmp
lcall
inc
andb
shl
pusha
stc
into
push
hlt
sahf
mov
mov
push
jns
sub
dec
cmpsl
xchg
xchg
iret
mov
in
mov
or
std
or
outsl
xor
jp
jmp
lods
add
mov
push
cmp
or
nop
mov
pop
icebp
orb
mov
movsl
es
xlat
jnp
cmpl
jns
hlt
ljmp
mov
xor
test
popa
sti
test
mov
decl
jle
orb
ja,pt
insb
push
mov
arpl
bound
pushl
xchg
or
adc
or
in
sbb
cmpsb
in
into
movsb
loope
xor
cmp
mov
dec
or
rcr
mov
adc
dec
add
loop
jecxz
cmp
insb
ljmp
pushl
out
push
ss
shll
cmp
out
jnp
dec
inc
mov
sbb
incl
add
pop
push
dec
das
jo
jbe
movsl
xchg
cld
ja
mov
les
sbb
sbb
jne
rclb
push
ds
fisubl
xchg
addr16
call
mov
lret
jns
push
pusha
pop
mov
adc
ret
xchg
mov
lret
outsb
testb
pop
or
fdivr
subl
pusha
shl
leave
cs
jb
or
xor
into
aas
lcall
sbb
push
arpl
lahf
pop
stc
iret
insl
test
outsb
xchg
je
mov
mov
pop
ret
or
mov
inc
jns
pop
cltd
push
adc
inc
mov
inc
push
into
cs
adc
insl
xchg
push
repnz
push
lahf
cli
mov
mov
or
movsb
add
dec
cwtl
icebp
jb
push
pop
mov
adc
mov
mov
pop
push
pushf
mov
mov
add
jb
stos
xor
and
add
call
jge
out
sub
out
mov
fsubr
subb
fsubrl
pop
xchg
lock
dec
jb
xchg
flds
sbb
mov
shl
and
ss
cmp
lock
xor
mov
jb
lret
call
popf
jecxz
into
pop
arpl
mov
les
stos
xor
sub
imul
jb
dec
mov
ret
mov
lcall
push
push
jnp
bswap
xchg
xor
adc
fcmove
and
adc
mov
xchg
jnp
pushl
fdivl
adc
into
stc
aas
push
fs
shll
outsb
add
mov
test
stos
sar
incl
xor
lea
jb
pop
dec
xchg
test
dec
es
aaa
inc
lcall
mov
cmp
stos
mov
daa
adc
cmc
lds
mov
das
adc
push
popa
mov
aad
pop
decl
adc
mov
fcomps
mov
sar
add
inc
or
adc
shll
fsubrl
jae
clc
hlt
out
sub
dec
pushf
xchg
lcall
mov
cmp
nop
sti
orb
dec
inc
pusha
lcall
cmc
ret
mov
mov
sti
sbb
in
inc
inc
mov
aas
xchg
popa
mov
pushl
fldpi
stos
arpl
in
xchg
or
cmp
push
fisttpl
jmp
mov
sarl
and
inc
mov
frndint
or
call
aam
int3
in
adc
shrb
imul
inc
roll
jo
mov
fwait
dec
push
sbb
xchg
push
hlt
decl
notl
sbb
test
dec
bound
filds
pop
xor
std
adc
add
stos
cmp
decl
dec
push
and
jg
in
push
jmp
dec
flds
sbb
mov
ljmp
clc
call
push
sti
daa
jl
testl
or
insl
mov
cld
out
clc
mov
es
orb
lods
ficompl
add
pushl
push
int3
mov
outsb
aad
add
add
pop
add
add
ljmp
mov
ret
stc
inc
inc
outsl
int
dec
push
mov
jl,pt
mov
ljmp
push
dec
sbb
push
push
movsb
stos
scas
adc
lods
pop
add
sub
in
xchg
pop
js
in
or
decl
lock
fadds
fstpt
gs
dec
pop
and
ret
cmp
add
cld
call
scas
popa
and
push
lea
mov
aas
hlt
in
push
push
add
inc
dec
add
js
sbb
xor
nop
add
js
jge
cmp
aas
aas
js
lea
mov
call
cmp
test
push
adc
fisttps
pop
ret
xor
or
jg
popa
popf
pop
pop
inc
fs
pop
add
out
fmul
lahf
scas
push
xchg
add
clc
std
mov
outsl
add
call
pop
leave
sub
xchg
fdivl
fcomip
pop
xor
cmp
notb
xchg
and
sub
jmp
dec
sahf
mov
pop
into
lret
test
cmp
ss
xor
pushf
xchg
in
xchg
push
pop
cld
imul
mov
mov
cmp
cmp
pop
push
ficoml
inc
jp
in
cltd
stos
std
adcb
push
lret
jle
cmpb
lcall
mov
xlat
iret
js
inc
sbb
sbb
jg
dec
sbb
cmp
test
mov
leave
out
xor
and
cmc
mov
out
lock
or
mov
sahf
cmp
jns
xor
test
jecxz
push
dec
loopne
mov
and
cmp
mov
rorb
mov
and
xchg
mov
inc
sub
sub
xchg
inc
jo
adc
push
push
and
jmp
daa
dec
imul
fcmove
data16
pushl
cmp
js
call
mov
out
stos
adc
int3
and
xchg
cmpsl
mov
push
loop
flds
cltd
jge
js
add
sbb
ljmp
add
xor
out
dec
jns
push
lahf
fdivs
sub
xor
aaa
mov
cmp
scas
out
aas
lret
mov
mov
push
push
shrd
sbbb
mov
pushl
andl
add
mov
and
dec
xchg
repnz
mov
pop
cmp
fwait
repz
in
adc
push
inc
aas
inc
fmull
mov
icebp
jns
mov
jmp
mov
out
mov
xchg
and
push
pusha
int3
or
inc
push
sub
inc
out
jecxz
in
arpl
aas
adc
or
sbb
mov
mov
mov
add
rcrb
dec
sub
je
repz
jge
incl
mov
mov
mov
jle
dec
jbe
mov
push
jecxz
push
sti
incl
jns,pn
mov
sbb
add
lods
pushf
dec
sub
in
adc
addl
hlt
xor
je
xchg
mov
stos
aam
dec
notl
mov
jns
and
dec
mov
roll
loopne
and
jl
ljmp
lcall
loope
push
jbe
mov
mov
sub
push
in
ljmp
cli
xchg
jl
push
shrb
enter
pop
aaa
push
mov
or
cmpsb
imulb
or
inc
push
jnp
xor
inc
dec
cltd
ljmp
call
jno
pushf
int
cltd
incl
test
sbb
mov
jg
sbb
and
iret
jo
js
or
or
pop
call
test
decl
fcompl
dec
shlb
xor
and
je
mov
insl
ret
lcall
xchg
popf
sbbl
lahf
inc
mov
mov
and
add
sbbb
and
or
out
xchg
jo
jbe
sahf
stos
lods
or
and
add
bound
out
cli
call
mov
mov
jecxz
and
adc
push
std
cmp
inc
pusha
mov
or
inc
sub
in
adc
cld
dec
or
rorl
call
or
data16
cwtl
leave
data16
pushl
sbb
cmp
xchg
pop
push
and
enter
sbb
les
inc
inc
mov
test
dec
fmull
sbb
aam
iret
lret
jg
pop
sbb
in
ss
outsb
imul
mov
call
and
aam
ja
jge
movsb
aaa
sbb
push
lret
adc
insl
cmp
call
dec
and
cltd
mov
repnz
cmpsb
mov
ret
sub
adc
mov
cmp
and
xor
ljmp
fnsave
daa
adc
or
xchg
fwait
arpl
add
mov
and
lock
sahf
test
clc
mov
xchg
xor
ss
loope
decl
pop
lds
sti
xor
test
jecxz
pop
jne
fcmovnb
sbb
mov
xor
sbb
or
sti
int3
sbb
dec
aas
sarl
cmp
loopne
cmc
push
mov
je
inc
mov
adc
lret
aam
and
adc
dec
xor
gs
decl
sub
pushf
cmp
jnp
push
repz
decb
push
inc
inc
jne
adcl
jmp
and
test
pop
decl
push
lods
xchg
xchg
sub
dec
shlb
push
pusha
push
icebp
sarl
vorpd
imul
data16
cwtl
lock
test
pop
xchg
mov
jmp
xchg
dec
xlat
mov
movsb
xor
lahf
and
jb
cli
xchg
call
test
mov
int
movsb
in
test
call
int
xor
inc
pop
fwait
lods
sbb
call
xchg
mov
outsl
bound
lods
stc
sub
mov
mov
add
sbb
lea
jmp
mov
movsl
gs
jle
gs
lcall
pop
clc
jge
mov
popf
cli
bnd
stc
mov
xchg
dec
xchg
push
or
incl
das
dec
xor
pop
lock
cmp
jle
mov
xchg
inc
sub
insb
sub
les
jno
fs
or
pop
xchg
fldl
fs
jmp
sub
mov
lret
fbstp
cmp
pop
std
ljmp
dec
push
pop
jnp
or
rol
inc
push
xchg
fnstcw
jno
lods
inc
iret
mov
jmp
out
dec
in
xchg
aad
and
mov
cli
mov
cmp
cmpsb
xchg
movsb
jge
sbb
in
decl
cmc
cmp
mov
dec
ret
clc
pop
stos
loope
xor
add
inc
aas
pop
jno
decl
shll
mov
test
dec
nop
sahf
mov
sub
mov
fidivrs
icebp
jecxz
out
push
jmp
ljmp
cmpsb
pusha
ret
and
test
fnstcw
ljmp
jo
decl
popa
push
mov
pop
xor
shl
mov
test
pop
popa
inc
push
insb
std
add
sbb
mov
sub
or
in
mov
inc
lds
cli
inc
inc
pop
in
push
mov
imul
cmp
dec
ret
jg
lret
cmp
and
insl
mov
das
lret
decb
inc
xchg
arpl
fcmovnbe
sub
jbe,pt
cmp
icebp
int
add
aaa
addr16
xchg
mov
sbb
popf
sub
ljmp
mov
loope
lock
jge
mov
rcrb
icebp
arpl
mov
shll
pushl
test
lahf
outsl
or
mov
inc
or
mov
dec
sbb
inc
mov
lcall
lea
inc
inc
and
jns
iret
pop
mov
fsubp
inc
aad
xchg
mov
stos
adc
insl
iret
push
stos
mov
jns
sub
adc
pop
ret
push
dec
cs
ja
xchg
sub
mov
popa
mov
jp
pop
xor
ljmp
incl
in
pop
test
mov
aam
inc
into
and
adc
push
clc
mov
call
push
xchg
or
and
in
addl
insb
mov
cmp
call
push
jg
decl
push
adc
sbb
add
mov
pusha
dec
dec
inc
rclb
cld
decl
das
aad
mov
data16
testb
les
dec
lods
fidivrl
call
fdivr
pop
xchg
iret
hlt
lds
bound
or
or
mov
std
outsb
inc
sbb
jnp
fs
mov
sub
jl
stos
repz
addr16
add
test
pop
sti
pop
in
inc
mov
ljmp
leave
jle
imul
cld
push
lret
xchg
js
add
daa
push
cli
movsl
fcomip
call
cmp
jae
inc
sub
lock
push
pop
xor
xchg
mov
loopne
incl
out
or
or
test
and
int
sbb
sub
dec
subl
inc
jg
jbe
mov
lods
mov
movsl
repnz
popf
add
push
or
pushl
pop
in
jns
xorl
jle
ds
es
pop
mov
lcall
cmp
xchg
pop
pop
insb
push
hlt
data16
cmpsl
add
sbb
adc
mov
cwtl
clc
std
xor
scas
test
ljmp
je
adc
sub
xchg
test
insb
ja
sub
pusha
idiv
lcall
push
jecxz
je
xor
test
xchg
out
jne
push
loope
jge
int3
sbb
inc
call
dec
data16
dec
scas
test
mov
orb
sub
fildll
loop
xor
push
xor
es
jns
and
pusha
cltd
call
repnz
in
rorl
adc
and
mov
fidivl
mov
lcall
jl
sbb
mov
sarb
insb
jne
stos
lock
mov
sti
xorb
jl
inc
and
xchg
inc
cmp
fldt
ds
inc
mov
sti
les
ljmp
stos
dec
pop
cmp
adc
cmp
insl
fsubs
int3
cmp
jp
mov
cmp
mov
lcall
push
fldt
ss
xchg
jl
adc
fnstenv
mov
add
loopne
add
loop
lods
std
dec
inc
enter
shll
adc
sbbb
js
call
scas
clc
or
add
negb
lock
out
push
scas
in
pusha
cmp
bound
xchg
hlt
jno
stos
xchg
push
sbb
sub
stc
sub
shrb
lea
int
or
out
loopne
jge
dec
pop
mov
push
aaa
ljmp
inc
xor
icebp
scas
jl
or
push
lds
xchg
mov
stc
jmp
adc
pop
outsb
pop
sbb
out
in
shll
xor
xor
cmp
mov
ja
mov
mov
hlt
jmp
and
mov
pop
decl
dec
sub
pop
ss
aaa
imul
cltd
mov
pop
fidivrl
aaa
std
decl
andb
test
add
out
inc
or
sub
ja
push
mov
loopne
or
mov
adc
xlat
adc
mov
push
sbb
push
movl
ja
enter
inc
cmpsb
xchg
call
icebp
rcrl
xor
lea
into
rcl
mov
xor
adc
add
mov
jnp
fsts
pop
pusha
pop
lods
rorb
je
jb
aad
decl
pop
push
stc
imul
loop
test
xor
jg
in
xor
and
cmp
push
xchg
popf
pop
inc
js
lcall
cmp
sbbb
mov
sti
out
inc
outsb
xor
sahf
xchg
je
lcall
decl
lahf
xor
in
std
xor
lea
adc
push
in
mov
das
ja
incl
or
add
std
and
repz
int
push
jb
arpl
incl
cld
cmp
popa
push
xor
cmp
rep
out
and
cli
xchg
in
dec
mov
sub
pop
aam
add
inc
in
cld
xor
test
push
orl
cmp
fs
adc
xchg
xchg
into
repnz
outsb
addr16
mov
pop
orb
cmp
sub
adc
ror
ljmp
pop
pop
inc
fidivl
mov
sub
dec
cld
mov
xor
stc
lock
in
out
lcall
cld
cmp
mov
jp
fcomp
xchg
scas
into
addl
lcall
xor
and
mov
repz
xchg
mov
and
call
jp
adcb
movsb
sarl
test
mov
sub
add
push
jecxz
dec
jne
sbb
pushl
mov
aas
jl
add
ljmp
pop
out
jns
imul
fdivs
mov
test
add
neg
out
sbb
ss
push
lock
pop
outsb
cmpsb
das
jmp
or
xchg
dec
decl
add
xchg
aad
or
divl
std
mov
add
mov
dec
loopne
je
ret
stos
push
jmp
test
scas
lret
les
jg
adc
enter
jmp
out
pop
pop
dec
pop
pop
jg
test
mov
jmp
jmp
lret
in
notl
rolb
shrb
fs
and
je
pop
pop
lret
push
adc
xchg
lds
lock
jecxz
hlt
incl
add
out
aam
rclb
orb
ljmp
js
inc
popa
das
imul
pop
jo
xchg
bound
xor
in
ret
mov
incl
pop
loop
in
mov
into
lahf
or
or
in
scas
gs
imul
fcomip
mov
jle
inc
loop
or
add
inc
movsb
cli
inc
push
rorl
clc
add
ljmp
imul
sub
fidivl
inc
in
sbb
sbb
ret
xchg
nop
fsts
cmp
scas
jnp
xchg
dec
fwait
pop
push
pop
enter
outsb
sti
pop
sbb
cmp
popf
push
scas
dec
jg
ljmp
imul
popa
stc
mov
or
mov
xchg
call
loopne
pop
cmpsl
or
fwait
jb
rcl
sbb
adc
mov
insl
sti
xchg
out
mov
iret
mov
add
cmpsb
push
cld
add
pushf
xchg
or
or
mov
out
ss
ljmp
int3
sub
or
mov
add
test
mov
jecxz
cmpsl
push
ljmp
push
or
adc
mov
xor
pop
dec
jmp
out
fsts
decl
test
pop
mov
outsw
in
jge,pn
pop
cltd
mov
and
mov
pop
or
decl
sub
rclb
scas
jle
jg
cmpsb
leave
call
cld
hlt
pop
or
lret
mov
daa
bound
aam
outsb
sub
push
testl
arpl
les
filds
mov
mov
jmp
and
popa
inc
jmp
inc
push
mov
jmp
push
pop
push
je
outsb
dec
add
lods
push
xchg
xchg
push
mov
sti
mov
mov
dec
scas
mov
dec
call
cltd
xchg
push
fisttpll
add
dec
scas
jecxz
hlt
in
jg
jmp
cmp
mov
dec
mov
mov
shlb
nop
cmp
ljmp
pop
imul
hlt
enter
ds
xchg
add
and
lcall
aam
dec
push
mov
cmp
push
xor
mov
jmp
mov
ss
out
xchg
int3
pop
mov
push
test
push
ss
mov
jbe
lret
pusha
sar
ljmp
sti
ss
adc
inc
repz
inc
jo
pop
pop
xor
inc
dec
push
notl
jns
lods
and
mov
mov
mov
insb
jge
lods
call
test
in
cmp
pop
adc
xchg
mov
xor
and
aas
push
jae
jg
pushl
and
mov
es
repz
mov
xchg
push
popa
jmp
bound
sub
hlt
pushl
push
mov
xlat
xchg
jmp
adc
sbb
mov
push
lods
lahf
ss
mov
popa
outsl
xor
jmp
mov
addr16
pop
sub
lcall
push
dec
pop
and
lock
pop
cltd
push
loop
jle
mov
sar
movsb
or
incl
imul
outsl
mov
mov
jmp
lods
pop
push
stos
mov
insl
jb
lods
das
and
lcall
adc
in
and
es
cmpsb
in
mov
sbb
scas
jp
lds
xchg
pop
jb
adc
sahf
jge
sbb
cmp
popa
mov
jb
addl
inc
in
inc
clc
and
adc
mov
ljmp
push
mov
je
pop
pop
ljmp
lock
or
cmp
aaa
push
push
cmp
lcall
call
cmp
mov
push
sub
pop
xor
cs
decl
lret
lds
mov
pop
dec
es
adc
test
fdivrs
aam
cld
inc
or
test
pop
mov
das
sbb
mov
incl
leave
sbb
and
lock
pusha
push
jg
xchg
sub
aas
xor
cmc
test
pusha
sbb
jmp
lods
insb
dec
sahf
mov
loopne
add
mov
mov
cmp
ja
test
sti
or
cmpsb
test
sti
lret
mov
pop
xor
mov
cmp
mov
pusha
cmpsb
push
jle
testb
in
pushl
notb
je
movl
call
cld
xchg
sbbl
sub
aad
outsl
ljmp
imul
lea
pusha
shll
pop
sti
xchg
repnz
lock
in
ljmp
ljmp
jnp
ds
xchg
testl
xchg
xor
sahf
test
stc
out
add
fiadds
and
incl
add
add
cmp
dec
test
lea
movsl
xchg
mov
inc
xor
jmp
sub
clc
imul
pushf
or
cs
stc
xor
subb
dec
into
push
push
insl
mov
outsb
popa
push
and
cmpsl
in
inc
in
lea
or
movsl
into
mov
ljmp
sbb
and
and
enter
push
iret
xchg
test
test
jae
lods
sub
cld
lcall
cmp
dec
stos
je
push
and
ret
loopne
jmp
lret
scas
add
pop
in
call
adc
in
sarb
scas
cltd
icebp
mov
fs
add
out
cmpsl
jbe
lock
fisttpl
lock
call
or
push
push
xor
enter
sub
movsb
decl
popf
leave
xor
mov
pop
jge
or
sub
sbb
inc
cwtl
addr16
std
xor
movsl
movsb
cmc
mov
pop
cmp
ret
jle
int
push
xor
fmull
lcall
lock
jp
jae
xchg
jge
test
jo
jns
decl
lret
adc
out
cmpsl
and
add
rclb
or
sahf
pop
cmp
clc
sub
lcall
cmp
nop
and
xchg
sbb
test
pop
pushf
std
dec
xchg
cltd
lods
jge
jg
push
arpl
outsb
jg
scas
mov
add
pop
test
and
fs
cmc
jp
es
decl
int
into
scas
ret
enter
sbb
push
mov
in
push
cs
or
mov
js
push
push
sti
mov
mov
mov
lcall
test
loopne
mov
lret
mov
pop
dec
cmpsb
mov
push
cltd
ret
adc
pop
test
mov
xchg
mov
cs
mov
xchg
add
fistpl
xchg
pop
out
cmpsl
sub
mov
in
ret
push
mov
fwait
xchg
and
insb
mov
fisubs
and
jle
nop
push
int3
in
sbb
push
sbb
clc
jecxz
into
dec
adcl
insb
pop
lock
incl
cld
jne
mov
iret
inc
cmp
adc
out
pusha
aad
inc
pop
rcll
and
inc
push
int
cmp
testb
inc
repnz
mov
jae
das
jp
lods
cmp
jmp
loope
push
xchg
in
cli
jbe
cltd
push
clc
sub
xor
nop
dec
push
push
subb
push
lret
js
gs
dec
ds
cmc
push
ret
data16
dec
mov
scas
call
js
add
mov
es
inc
mov
cmp
test
call
adc
pop
movsl
ja
fidivl
add
in
dec
and
outsl
sbb
pusha
subl
aaa
std
ljmp
and
xchg
ret
add
add
fldl
cltd
inc
xchg
ret
jmp
jg
popf
mov
xchg
inc
js
jne
ljmp
js
or
xchg
or
and
movsb
xchg
mov
mov
and
bnd
lds
sub
pop
insb
push
mov
pushl
inc
repnz
lods
mov
jns
dec
dec
stc
xchg
mov
test
xor
cmp
jns
cmp
call
xorl
push
push
push
rcl
push
cmpsb
insb
cmp
fs
out
movsb
mov
bound
je
push
aaa
adc
test
sbb
addl
push
popa
jecxz
or
inc
dec
gs
icebp
sub
iret
insb
outsl
test
call
loopne
iret
dec
jb
mov
cmp
mov
xchg
mov
fcomp
adc
pushl
push
outsb
jge
push
push
push
xchg
adc
popa
lods
xchg
jno
inc
push
mov
ljmp
into
hlt
mov
fadds
movsl
movsl
mov
loope
test
xor
mov
pusha
mov
stos
inc
mov
push
or
movsl
mov
call
jno
fldt
mov
int
pop
add
jle
mov
jno
mov
in
push
push
inc
inc
push
mov
jl
mov
js
jnp
sbb
ja
cmc
stc
movsb
sbb
cmpsb
cmp
insl
insb
cli
out
jmp
cmpsl
xor
cmp
pop
jg
cmpsb
test
jle
movsb
xor
adc
sub
xor
jge
lcall
pop
jl
jns
mov
sub
xchg
imul
bound
ss
loope
pop
xor
incl
push
mov
mov
cmp
pop
repnz
mov
lods
jmp
xor
adc
and
cs
cmp
push
out
push
jmp
icebp
insb
ljmp
imul
es
in
loopne
out
out
jge
loopne
cmpsb
push
inc
out
cli
cli
jb
out
cmp
cmpsl
test
mov
jp
jnp
shr
lret
stos
xor
lods
sub
sbb
pop
andb
inc
pop
sahf
lahf
fcoms
loop
incl
and
mov
cmpsb
pop
testb
ficomps
addl
dec
fdivrl
jns
jne
into
jecxz
jnp
pop
mov
adc
mov
popf
push
ja
adc
jmp
inc
and
dec
mov
add
pop
jne
lret
push
or
sub
mov
jmp
xor
pop
jno
cmpsl
add
les
push
dec
xchg
iret
scas
and
cwtl
data16
jg
cmp
repnz
cmp
int
adc
dec
inc
push
cmpsb
test
scas
jb
lods
mov
adc
int
sbb
inc
push
dec
pop
cwtl
fiaddl
test
cwtl
popf
xchg
outsb
pop
leave
jmp
imul
push
jns
ficomps
or
aam
xor
xor
inc
aas
mov
xchg
jg
lcall
sbb
mov
movsl
mov
hlt
jmp
sbb
jl
mov
xchg
inc
add
fadds
test
jg
inc
aas
mov
cli
cld
mov
ficoml
movsl
negl
dec
arpl
fists
mov
cmpl
test
xchg
add
leave
call
mov
mov
rcrl
push
imul
scas
add
rcl
gs
lds
lret
dec
ss
xor
xor
decb
cmp
push
shr
shrl
test
lcall
adc
ljmp
call
mov
rclb
ja,pt
rorb
test
shlb
rclb
xchg
inc
ljmp
sub
outsl
add
adc
jns
call
mov
test
pop
pop
push
push
pop
and
cld
movsl
inc
mov
mov
push
outsb
inc
push
or
or
addr16
mov
jo
sbb
cmpsb
adc
xchg
adc
sbb
xchg
adc
pushf
sbb
lds
fcmove
inc
mov
and
or
daa
add
mov
xchg
popf
jmp
mov
push
and
xor
mov
lods
repnz
xchg
xchg
dec
xchg
push
add
lcall
stos
xor
xor
ljmp
scas
jmp
test
ljmp
outsb
adc
call
popf
cmp
loopne
cld
mov
mov
das
jle,pn
mov
js
mov
jmp
inc
xlat
outsb
push
inc
mov
enter
stos
aam
inc
stc
call
push
insl
nop
cmp
fdivrl
call
cld
lods
xchg
mov
dec
into
mov
lahf
cli
mov
sub
clc
mov
jmp
or
or
ja
add
in
sbb
out
cmp
inc
xor
mov
jecxz
lcall
adc
jns,pt
cmp
cwtl
inc
or
mov
push
call
icebp
insl
into
gs
int3
sahf
out
jno
sbbl
push
sbb
mov
push
incl
mov
cltd
lahf
xor
dec
sbb
sub
ljmp
lret
pop
fistpll
lds
lds
mov
sbb
out
stos
mov
out
das
js
push
mov
push
dec
outsb
push
xchg
fwait
subb
or
outsl
scas
mov
decl
push
inc
bound
mov
test
mov
adc
cmp
out
xchg
push
jle
scas
push
cmp
jge
test
inc
lods
pushf
jbe
lret
xchg
pop
insb
stos
lds
cltd
mov
inc
fisttpll
jl
es
bnd
aam
mov
jmp
mov
cli
negb
int3
mov
mov
sub
incl
dec
add
pop
lret
ja
xlat
jbe
inc
jecxz
xchg
cld
in
ja
pop
sub
add
lcall
in
dec
lret
and
push
mov
cld
adc
xchg
jge
aam
loope
xor
jb
cmc
leave
shl
push
xchg
ljmp
cltd
or
add
addl
repz
push
mov
mov
ljmp
cmp
push
stc
sarl
pop
jae
fnsave
icebp
aas
or
jg
mov
push
icebp
inc
inc
add
gs
test
fiaddl
mov
lcall
outsb
mov
pusha
out
adc
sbb
push
pop
mov
jmp
inc
repnz
idivl
xchg
xchg
push
dec
inc
fnsave
call
sbb
and
mov
mov
leave
or
jbe
jge
sub
jg
stos
jb
push
scas
insl
movsl
sub
cmc
pop
cmp
xchg
jmp
push
sbb
xchg
adc
in
lahf
decl
cli
fdivrs
adc
add
adc
inc
dec
xor
push
addr16
repz
jg
daa
sub
mov
addb
sbb
inc
ret
pop
adc
ljmp
pop
imul
push
jmp
jge
jmp
inc
sub
popf
jecxz
mov
inc
sti
shrb
scas
js
dec
aas
fbstp
ljmp
and
sub
push
outsl
jmp
popl
or
lds
push
cmc
inc
lcall
push
lret
pop
mov
ss
push
aaa
out
adc
sbb
push
imul
cmp
in
scas
pop
adc
arpl
lods
add
xchg
enter
sbb
pushl
jle
push
add
lret
pop
push
outsb
fnstcw
ljmp
test
xchg
aad
sub
or
xchg
andb
add
sahf
out
jmp
dec
rcl
out
pusha
int
xchg
cmp
mov
pop
ss
cli
push
pop
cmovno
aaa
cmpsl
dec
pushl
jge
icebp
jp
shr
repnz
xchg
dec
repnz
mov
pop
out
cli
jne
xchg
out
xor
adc
inc
add
das
adc
ljmp
mov
std
xor
imul
jmp
lcall
fldpi
pushl
lret
mov
lods
inc
cltd
push
cmp
jae
adc
or
mov
push
sub
cltd
ljmp
or
addr16
outsl
and
insb
cli
push
adcl
outsb
bound
dec
fwait
or
or
in
add
je
xor
sub
fndisi(8087
and
jmp
stos
sub
jo
sub
jbe
mov
or
mov
call
je
fsub
pop
inc
aad
adc
jnp
dec
add
cmp
ret
sub
dec
daa
bound
orl
add
hlt
dec
and
xchg
fwait
or
mov
bound
inc
sub
ljmp
sub
mov
jg
cmp
pop
cmpb
nop
lock
addb
jns
clc
call
lcall
pop
xchg
sub
aaa
sbb
jmp
sbb
ficoml
cmp
test
dec
push
sub
and
call
jmp
fistpl
pop
pop
add
adc
movsb
push
rorl
scas
adc
test
shll
pop
adc
call
out
int3
sbb
add
insb
xchg
jno
ljmp
ss
lods
dec
add
pushf
pop
clc
jle
outsb
push
je
es
lds
outsb
adc
sbb
call
movb
sbb
xchg
dec
sub
ljmp
bound
xchg
xchg
movsb
or
jne
fs
inc
mov
push
mov
xlat
incb
call
xchg
pop
add
ss
call
sbb
xchg
ja
jmp
mov
out
int3
test
mov
jns
push
loopne
das
sar
dec
xor
inc
xchg
pop
shrl
lds
or
fdivl
sbb
popl
jae
fistl
sbb
xlat
mov
sti
sub
sti
mov
in
cmpsb
sahf
fadds
lock
mov
ljmp
aam
jo
pop
dec
mov
mov
mov
movsl
bound
int3
sub
rcrb
sbb
lds
add
iret
sub
and
lea
mov
inc
std
call
fldcw
test
jg
sbb
loope
push
xchg
bound
push
mov
cmpsb
mov
pop
mov
mov
push
ds
xchg
pop
clc
std
push
insl
les
nop
xor
cmp
mov
loopne
ljmp
adc
lods
das
inc
pop
out
bound
ror
call
scas
fdivr
add
push
adcb
fs
out
cmpsl
rcrl
scas
cs
jne
cmp
or
lcall
cmp
lock
dec
inc
inc
add
xchg
iret
gs
in
push
ret
cld
pop
inc
lods
push
jbe
incl
test
inc
imul
in
lock
pop
cmp
ja
jbe
icebp
clc
je
out
icebp
imul
ret
sahf
mov
ljmp
mov
in
ret
daa
mov
loop
mov
push
jmp
xchg
and
call
sbb
push
mov
xchg
les
ljmp
jecxz
int3
pop
mov
lods
mov
mov
and
mov
lcall
mov
inc
dec
cli
ficoms
in
inc
or
jmp
enter
push
inc
dec
mov
fisubs
movsb
fucom
in
mov
cmp
push
decl
lock
push
or
sub
jb
jp
xchg
idiv
pushl
sub
imul
push
jl
jae
int3
dec
pop
insb
sbb
ljmp
push
jmp
in
add
xlat
lcall
cmp
and
call
pop
pop
ret
and
mov
jns
rcrl
out
rcll
and
iret
jne
aam
incl
mov
jge
sub
lret
push
cmp
jle
lahf
jg
and
loopne
imul
sbb
das
nop
ficoml
mov
incl
jae
gs
jo
dec
jg
pop
lock
in
mov
clc
and
out
push
add
test
idiv
mov
test
rcl
mov
mov
out
sub
lock
mov
fwait
sbb
and
push
test
rcrl
lea
int
ss
loop
inc
jp
xchg
sbb
mov
adc
fwait
or
mov
decl
mov
push
loopne
dec
ja
adc
das
pop
dec
add
cltd
xor
cmp
xlat
ljmp
xor
pop
out
lret
jmp
jo
leave
sbb
push
addb
imulb
push
dec
popf
fs
aam
ffree
dec
push
jnp
decl
or
or
int3
or
add
xor
mov
ss
dec
add
decl
jno
mov
dec
lcall
fidivl
in
out
movsb
jle
incl
xchg
mov
imul
xchg
jnp
jo
adc
xor
mov
lcall
aad
mov
mov
pusha
shr
outsb
xchg
lret
cmc
sbb
mov
in
cld
lcall
pop
enter
dec
jo
and
data16
mov
insb
data16
pop
aam
incl
mov
mov
inc
pusha
jl
or
gs
ljmp
xchg
cli
out
push
mov
jmp
loopne
out
lock
or
xchg
inc
mov
add
decb
jecxz
cmpl
jb
sub
je
negl
jnp
stos
jge
ljmp
jo
xchg
inc
lea
in
inc
lea
dec
arpl
int
scas
out
sub
xchg
lcall
test
stos
sbb
pop
aaa
mov
sbb
push
pop
xor
stos
decl
scas
mov
jmp
repnz
bound
dec
ds
jg
pop
hlt
dec
or
push
mov
dec
imul
xlat
test
jg
push
lahf
mov
stos
fs
sub
addl
int3
les
mov
clc
sahf
ljmp
dec
sbb
fs
and
xchg
sahf
push
movsl
int3
bound
shlb
lcall
lods
jb
mov
add
ret
xchg
repz
jnp
jns
fs
sub
outsl
or
popl
roll
ss
cmp
pop
adc
mov
add
decl
test
jns
cmc
ljmp
pop
std
sub
sbb
ret
aad
bound
inc
lock
lcall
sahf
sbb
lea
add
jno
in
xrelease
inc
cwtl
add
incl
xor
sub
xor
divb
add
mov
dec
in
ljmp
push
mov
daa
pushf
sub
scas
movsb
hlt
rcr
aas
decl
lock
aas
inc
ljmp
fsubl
fdivrp
rolb
cltd
ja
cmp
lds
inc
ret
lahf
mov
ja
call
push
inc
push
dec
or
sbb
psrld
pusha
dec
cmc
ja
and
inc
clc
pushl
jbe
or
mov
dec
cwtl
ja
clc
call
xor
and
mov
and
inc
hlt
xchg
shr
addb
pop
inc
push
cmp
incl
popa
cltd
push
xor
mov
call
mov
cmp
jge
push
aad
outsb
outsb
sub
dec
inc
or
std
ljmp
sbb
aas
or
hlt
ljmp
out
sub
lcall
lret
jo
or
addr16
hlt
std
loop
push
pop
je
mov
fisubrl
call
mov
pop
inc
aad
pop
shr
in
ljmp
scas
test
push
outsl
cli
call
push
in
cmpsb
flds
scas
in
out
jns
jmp
cld
test
pop
jno
push
call
mov
test
mov
negb
mov
xchg
scas
jb
cmp
mov
pop
mov
aas
push
xchg
push
mov
mov
insb
shl
jae
mov
jl
inc
pop
mov
lret
inc
jle
ja
xchg
xor
pushl
shlb
push
loope
push
call
or
test
out
mov
addr16
pushl
push
std
pushl
pop
es
stos
sub
jne
mov
sub
pop
jno
jp
or
push
dec
fisubs
pop
jbe
dec
pop
push
popl
jbe
jo
int3
sbb
in
jmp
mov
shr
out
cmp
stos
lods
inc
bound
jg
decb
shl
cmp
orb
je
mov
or
incl
enter
cmp
test
inc
dec
sbb
mov
arpl
jle
xchg
es
adc
mov
add
movb
scas
fwait
adc
dec
xor
aad
aaa
inc
enter
inc
es
inc
daa
ss
cmpsb
jecxz
jg
mov
or
cmp
mov
aam
insb
add
ficoms
pop
rcr
mov
xchg
ljmp
cmp
push
lock
xor
iret
xor
push
or
mov
decl
inc
mov
or
or
pop
add
int
subb
xor
dec
cmp
pop
jnp
dec
xor
enter
mov
cmp
push
push
mulb
loope
and
dec
adc
sbb
cmpsl
das
pushf
push
mov
fs
repnz
lcall
jo
cltd
jns
pop
in
mov
mov
pop
fsubrs
mov
scas
test
icebp
iret
mov
mov
in
xchg
out
dec
adcb
shlb
xor
or
lods
mov
fidivrl
dec
and
notb
mov
lcall
lea
push
scas
das
cmp
ljmp
pop
lret
out
mov
div
or
xor
cwtl
push
and
sbb
je
cmp
scas
add
or
repnz
ret
lds
arpl
add
popa
xor
push
mov
dec
cltd
inc
jle
push
mov
arpl
cld
das
inc
flds
call
mov
adc
cmp
ss
and
loope
leave
push
fcmovnu
lcall
pop
push
inc
leave
popa
imul
push
movsl
inc
dec
ja
inc
xor
loop
or
fcmovb
and
xchg
jns
push
mov
sub
pop
fsub
xchg
mov
push
enter
jmp
negl
cmpsb
push
inc
adc
popa
pushf
cmp
shl
jno
sub
jp
outsl
inc
mov
pop
lret
xchg
fiadds
mov
cltd
fcomip
add
xor
cmp
iret
repz
outsb
mov
mov
fdivl
fdivs
inc
jge
mov
pavgb
scas
mov
decl
sbb
repz
sbb
adc
xchg
in
test
jo
lock
call
aad
add
jbe
sbb
loop
add
rcl
fimuls
add
add
sbb
jnp
call
jmp
cmp
adc
push
mov
cmpsl
mov
js
sti
leave
repz
jp
jmp
mov
rolb
mov
push
in
addb
fisubs
jb
cmp
repnz
test
das
pop
sbb
xchg
pop
shlb
cmp
aam
jne
jmp
push
or
jae
sub
leave
sbb
and
dec
loop
push
or
loopne
jg
lock
pop
or
cmpsb
in
jns
sbb
cmp
les
cmpsl
call
lock
cmc
sbb
fbstp
push
or
push
out
and
sar
decl
jbe
out
dec
sub
push
int3
test
jmp
std
dec
sarb
push
push
lock
push
mov
pop
push
xchg
imul
loope
add
cmp
mov
pushl
or
fidivl
or
jge
in
fbstp
ja
fbstp
pop
ss
repnz
dec
jecxz
call
outsl
lret
push
notl
xor
cmpsl
dec
arpl
mov
mov
mov
int
test
jle
pop
dec
into
out
push
xor
push
add
repz
and
sub
mov
add
jbe
mov
mov
add
push
into
xor
sub
jmp
addr16
into
jg
insl
fisubs
dec
pop
jns
jmp
pop
pop
movsl
ljmp
push
jecxz
mov
sub
add
mov
dec
fwait
out
push
imul
pushl
lods
cmp
dec
or
mov
cmc
ljmp
repnz
addb
shl
add
stos
bound
cmpsb
fldt
stos
std
filds
insb
loopne
xchg
sbb
ret
fwait
jecxz
arpl
inc
dec
push
ficoml
mov
fs
adc
movsb
pushf
in
test
std
sahf
rclb
stos
ja
decl
sti
stos
sub
gs
loop
mov
loopne
jg
ret
pop
sub
sbb
pop
adc
fstps
das
sub
lock
and
and
fs
inc
decl
movsb
lret
cmpl
int3
dec
imulb
fnsave
cmpsl
add
std
inc
enter
fimuls
sbb
mov
imul
aas
add
or
jbe
pop
or
lret
mov
fcmovu
push
aaa
cld
jmp
arpl
jp
pop
mov
xchg
scas
jnp
neg
pop
adc
ljmp
in
int3
sub
adc
fwait
add
aaa
mov
out
add
decl
ret
mov
or
inc
fcompl
push
faddl
int3
movsl
les
inc
or
decl
sub
sub
out
filds
stos
sbb
push
inc
inc
aaa
mov
dec
push
mov
or
aaa
mov
cltd
cmpsb
scas
lcall
lcall
jle
adc
and
popf
decl
adc
jae
pop
or
jmp
jp
push
dec
mov
sbb
xchg
add
mov
jmp
pusha
and
popa
mov
and
out
stos
pushf
fbld
or
repz
cmp
push
ret
lcall
cmp
sbb
adc
arpl
xor
ljmp
mov
stos
es
mov
sbb
inc
out
icebp
in
fcoml
inc
mov
xchg
jle
sahf
mov
add
ja
testb
jmp
sub
jbe
push
movsl
loop
clc
lods
pusha
inc
push
dec
and
add
jmp
cs
daa
shl
cli
mov
or
lahf
bound
test
mov
fnsave
jge
test
jl
gs
cmp
aad
inc
inc
pop
scas
cltd
xchg
call
mov
sub
insb
cmp
pop
enter
fldpi
push
pop
sbb
cmp
inc
jmp
mov
jmp
std
lahf
mov
test
cli
mov
std
xchg
inc
pop
or
mov
mov
call
cmp
adc
or
ja
fisubl
cmpsl
pushf
gs
sbb
nop
out
push
add
add
sub
and
jne
or
jmp
ljmp
push
and
jmp
js
call
adc
lods
sbb
lcall
out
push
stos
lcall
jnp
lea
lcallw
and
fildll
mov
in
mov
int3
mov
fneni(8087
adc
divb
xchg
mov
ljmp
lcall
popl
enter
cmp
push
fiadds
std
dec
adc
pop
sub
sti
popa
mov
add
and
push
push
lret
jg
shlb
mov
jecxz
xchg
icebp
fsubrl
xor
xchg
clc
push
imul
dec
pop
les
js
inc
push
repnz
adc
popf
and
mov
pushl
cli
xchg
and
in
add
push
das
mov
push
add
fs
xchg
les
orl
loope
stc
dec
std
adc
inc
out
inc
xchg
stos
cmp
and
psllw
mov
jg
cmp
mov
pop
sub
cs
jl
sub
jbe
clc
or
arpl
dec
cmp
add
push
add
and
mov
in
mov
lcall
inc
and
pushl
sbb
sbb
mov
fildl
lcall
sahf
pop
movsl
sarl
adc
int
push
cli
sahf
into
xchg
lds
lea
sub
ljmp
or
mov
pand
lcall
cld
shrb
xor
hlt
sub
pop
adc
mov
dec
inc
cmp
mov
arpl
int3
push
pop
dec
test
icebp
dec
imul
mov
xchg
mov
ffreep
decl
outsb
aas
stos
and
test
out
add
mull
repz
mov
lcall
test
mov
xchg
cmpsb
movsl
popa
xor
mov
jmp
jb
mov
or
adc
ficomps
movsl
daa
mov
fists
push
ljmp
jb
xchg
cmc
and
lret
dec
mov
xor
sti
mov
addr16
js
push
aam
mov
shlb
pushf
push
shlb
arpl
incl
test
inc
pop
inc
stos
add
js
fsts
insb
push
and
or
fildll
dec
out
repnz
xor
out
jl
xor
mov
shlb
fildll
test
ficomps
add
addr16
mov
call
sub
lods
mov
pop
push
aam
adc
and
mov
arpl
cmp
mov
test
fmull
ja
push
sub
in
sbb
decl
enter
pop
and
mov
sahf
jge
push
mov
mov
ljmp
push
push
mov
stos
jns
aad
dec
scas
inc
xchg
int3
mov
push
incl
lods
inc
repnz
fisubrl
add
fisubrs
stos
mov
mov
or
popa
scas
inc
xchg
rcrl
ret
mov
out
insl
ret
popf
mov
iret
repnz
ljmp
xor
mov
jmp
pop
jg
clc
cli
cmp
or
popa
xchg
repz
decl
lock
fldt
sub
fs
loop
adc
lcall
ss
jge
mov
jne
dec
xchg
lock
es
xchg
imul
test
daa
pop
into
cmc
leave
push
cmp
decl
push
jne
stos
pusha
xchg
orb
pop
mov
mov
aam
lret
sub
fdivl
imulb
or
xchg
and
inc
hlt
pop
sbb
add
addr16
push
adc
pop
stos
fs
or
mov
and
xchg
in
pop
push
jl
clc
icebp
add
xchg
fdivrl
fildll
inc
mov
test
push
jnp
sub
ss
jmp
jge
cmp
mov
decl
test
insl
stos
jmp
mov
jno
nop
or
mov
mov
test
jge
scas
push
call
fsubrl
mov
push
push
mov
fisubrl
xlat
rcll
loope
popa
xor
dec
add
push
and
std
jl
mov
adc
push
jl
ficoms
lcall
jae
test
cli
adc
cmp
xor
inc
rorl
jg
mov
mov
int3
add
aaa
stos
cwtl
xchg
fsubrl
pop
cmc
sahf
idivl
es
mov
incl
push
mov
jns
pop
and
mov
fs
xchg
and
lret
cmp
faddl
push
das
cmp
into
int3
ds
rcll
lea
mov
hlt
push
dec
mov
xchg
lahf
dec
cmp
test
test
sbb
andl
push
call
movsl
shrb
lds
mov
test
mov
xchg
cmc
mov
pop
fucomip
inc
iret
push
ljmp
aas
stos
loop
out
xchg
cld
scas
add
arpl
scas
and
lods
js
popf
inc
push
add
mov
fadd
dec
dec
sbb
ret
xor
mov
or
jmp
xor
pusha
mov
cmpsl
mov
std
lock
inc
mov
in
xor
push
mov
cmpsl
sti
dec
sbb
int
sub
pop
call
inc
mov
addr16
mov
mulb
mov
repnz
sub
lret
jg
mov
xlat
pop
popl
dec
xor
repz
jg
sbb
add
xchg
mov
sub
cmpsb
arpl
outsb
mov
mov
adc
mov
in
inc
dec
add
cwtl
leave
test
dec
inc
jb
aas
lods
in
lods
inc
popf
mov
in
hlt
aaa
add
or
in
cltd
lret
and
aas
jns
popf
or
sub
arpl
sub
xor
mov
and
sar
ljmp
adc
or
lcall
mov
xchg
pop
xor
das
cli
out
fsubs
not
xchg
aad
into
mov
or
sub
pop
ljmp
lock
pop
mov
pop
scas
mov
mov
in
sbb
mov
mov
mov
mov
sbb
jge
ret
movlps
mov
xor
cmp
push
in
mov
jb
cmc
adc
sar
jg
incl
sub
pop
mov
push
pop
xchg
lds
jp
cmp
cli
mov
xchg
jle
xor
addr16
icebp
lahf
aas
adc
xchg
mov
mov
sahf
or
add
rclb
cmp
incl
push
into
clc
and
bnd
sti
or
adc
mov
ljmp
jb
inc
data16
loope
cld
cmp
dec
test
daa
mov
lods
ja
dec
loope
xchg
pop
mov
jbe
out
push
adc
arpl
adc
inc
push
test
jp
call
dec
mov
cld
push
pop
cmc
jg
insb
lods
inc
mull
jnp
orb
andb
jne
mov
les
or
pop
sub
aad
or
mov
pop
fsts
pushl
mov
mov
repnz
arpl
cmp
aam
pop
pop
sub
jmp
cmp
je
repz
push
pop
aas
push
add
cmp
jg
incl
out
jp
jp
and
hlt
and
into
inc
dec
sub
das
jge
xchg
clc
and
push
stc
dec
pushl
or
cltd
inc
fmull
xchg
push
mov
jns
in
xchg
cmp
pushf
nop
outsb
scas
ds
ficompl
mov
cwtl
lahf
mov
or
cld
arpl
imul
dec
fstpt
push
decl
out
or
pop
dec
mov
mov
decl
insb
jge
push
xor
mov
loopne
jnp
cli
and
xor
fildll
cld
pushl
jbe
loope
cmp
out
dec
les
xchg
dec
jle
hlt
lret
pop
in
cmpsb
pusha
lea
pop
out
pop
lcall
xchg
cmpsb
adc
mov
ret
fimuls
xor
dec
imul
inc
dec
icebp
aad
decl
and
fs
add
mov
sub
call
popf
out
inc
xchg
mov
lods
dec
into
jge
adc
aam
and
mov
push
and
test
lock
mov
fmuls
mov
icebp
call
sarl
inc
data16
pop
mov
mov
xchg
ds
dec
pop
inc
pop
jecxz
fstps
test
out
sbb
out
call
push
loopne
clc
addl
sub
movsb
jmp
pop
loope
lock
jp
jae
shlb
sbb
jg
lcall
popa
cs
mov
push
sub
push
jno
lds
ljmp
dec
push
ljmp
in
cs
mov
ss
in
cli
jmp
inc
daa
jmp
xor
or
cwtl
ljmp
fidivs
outsb
dec
xchg
cs
les
ljmp
lods
mov
push
push
push
jns
push
adcb
jbe
inc
xchg
mov
repnz
sahf
pop
out
mov
cmp
in
add
push
xchg
xchg
mov
mov
adc
fcomip
decl
and
or
ss
in
cmp
or
adc
repz
insb
and
mov
repz
ljmp
add
dec
xor
cmp
mov
xchg
test
push
jecxz
adc
ljmp
jne
lret
lcall
add
int3
mov
inc
add
adc
and
dec
sbb
push
scas
fisttps
aad
or
out
rol
and
mov
xchg
xor
jl
popf
fwait
pop
scas
xorb
cli
shrb
push
dec
xchg
ljmp
jnp
push
and
mov
dec
cmp
pusha
sub
xchg
popf
inc
xor
inc
call
insb
pop
test
sub
mov
lahf
push
inc
fstl
es
call
jmp
sub
dec
nop
xor
or
xor
inc
mov
jp
xchg
outsl
fcomip
aas
or
sti
add
cld
fdivrl
sbb
xchg
pushl
xchg
stc
dec
xchg
js
outsl
mov
inc
mov
pop
push
xchg
addr16
adcl
xchg
and
xchg
scas
dec
inc
jns
ljmp
xchg
mov
fldenv
pop
add
icebp
call
loop
leave
cmc
mov
lcall
mov
dec
cwtl
loopne
mov
jmp
lds
cmpsl
test
imul
loop
inc
mov
mov
push
js
ljmp
mov
and
gs
in
lea
lret
adc
xor
xor
jbe
xchg
mov
out
clc
cwtl
leave
out
adc
sbb
jmp
mov
jge,pt
negb
call
sbb
cld
sub
or
pop
cmc
cwtl
mov
jmp
in
xchg
dec
pop
enter
out
insb
fidivrl
jmp
loope
mov
test
push
jb
jl
jle
lock
add
pushl
rorb
pop
sar
xchg
pop
dec
mov
fdivs
int
adc
mov
sub
lods
scas
add
insl
jg
mov
jne
cltd
ljmp
lods
mov
decl
xor
loop
adc
and
cs
cmp
loop
lcall
push
mov
jae
rclb
int
dec
test
fcomps
in
out
lock
pop
dec
sbb
jbe
fsubrl
dec
pusha
clc
inc
lds
push
fpatan
ficomps
dec
out
out
dec
jo
div
in
ret
into
push
fisttpll
repnz
sbb
push
ds
pop
jae
mov
pushl
adc
je
push
daa
jns
movsb
inc
cmpsb
mov
imul
negl
ljmp
push
idiv
sbb
das
push
push
ja
push
inc
dec
sbb
dec
push
mull
in
mull
xchg
add
insl
push
in
lahf
and
xor
jle
mov
icebp
in
jecxz
jmp
cmpsl
pop
iret
dec
inc
popa
lcall
std
mov
cld
incl
nop
jl
sbbb
mov
js
jno
lock
jo
in
cmp
les
das
arpl
mov
ret
out
push
add
inc
xor
adc
lods
fmuls
push
dec
incl
lea
push
dec
ror
push
std
xchg
sub
jno
dec
push
ljmp
les
in
stos
add
xchg
inc
enter
dec
jmp
pushl
cmp
lea
mov
jmp
mov
mov
xchg
mov
mov
adc
decl
xchg
les
je
andl
outsb
and
aas
cmp
ljmp
mov
data16
mov
add
push
movsb
incl
mov
repz
out
outsb
lret
sub
xchg
mov
ljmp
pusha
je
lcall
cmpsl
mov
js
xor
xor
out
clc
push
sarl
daa
and
aad
fcoml
or
mov
cli
ljmp
push
or
ror
inc
pop
mov
jns
or
sbb
mov
cltd
mul
test
jge
and
xor
pop
insb
jnp
xchg
popl
fsubrl
enter
xor
add
jmp
xor
add
add
sbb
pop
sub
jl
jnp
cli
or
jmp
sub
xor
decl
jle
fildll
arpl
cwtl
stmxcsr
jmp
fiadds
lcall
insb
aaa
sub
dec
sbb
cwtl
jg
jmp
loopne
inc
fldt
lock
ljmp
jno
push
push
dec
fs
push
pop
ja
hlt
aam
js
hlt
sub
adc
loopne
inc
outsl
xor
je
xor
test
sbb
push
clc
push
enter
cs
out
out
cli
cmpsl
xorl
pop
sar
pushl
jo
or
or
mov
loop
xlat
iret
pop
ljmp
mov
lea
lea
dec
push
sbb
out
aam
or
add
lcall
ds
pusha
loope
ljmp
icebp
inc
out
loope
inc
pop
or
push
or
lahf
aam
loopne
call
push
jo
rcrb
loopne
je
stos
daa
pop
mov
sbb
icebp
inc
mov
cmp
mov
fisubs
movaps
data16
es
inc
test
pop
ljmp
jae
lcall
pop
pop
jmp
pop
sub
negb
push
push
jb
inc
ja
shll
add
call
xor
dec
movsl
aad
mov
dec
mov
push
cmp
rcll
shrb
pop
mov
or
cmp
fs
cmp
std
repz
mov
xor
jg
cmp
rcll
adc
mov
ljmp
inc
scas
inc
push
push
pop
add
add
fisttps
scas
dec
sub
negb
dec
adc
pop
push
xchg
or
lcall
lock
xor
out
fcompl
ja
pop
xor
and
in
mov
lods
push
dec
cmp
push
orb
insb
test
mov
sub
or
ficompl
pop
pop
lods
ret
incl
jge
stc
rcl
repnz
addl
adc
and
inc
xbegin
pushl
push
push
cmp
aaa
loopne
mov
mov
rorl
mov
bound
adc
in
xor
jg
fbstp
shll
ljmp
cld
inc
lcall
push
xchg
push
mov
test
cmp
daa
clc
mov
or
xor
pop
adc
dec
lods
gs
roll
out
es
dec
imul
faddl
stos
sbb
fidivrl
sub
push
stc
data16
push
incl
je
std
in
mov
jp
lods
ljmp
cli
dec
ljmp
jb
or
stc
loop
decb
add
xchg
mov
popa
mov
sahf
push
cwtl
push
cs
and
decl
sbb
mov
loopne
mov
mov
jmp
dec
pop
int3
xlat
sbb
add
in
roll
iret
cmpsb
nop
push
repnz
mov
roll
bound
cld
jmp
hlt
add
and
adc
ficoml
in
pop
test
dec
pop
clc
push
data16
cmp
ljmp
decb
popa
test
jg
mov
int3
nop
frstor
das
mov
push
mov
mov
xlat
dec
in
roll
sbbb
inc
mov
jg
mov
decl
jo
sbb
lret
push
loop
adc
mov
pushl
roll
fisttpll
cld
stos
dec
aam
dec
in
mov
sbb
adc
fsub
pop
and
cmc
push
shll
dec
mov
mov
mov
call
aam
xchg
mov
mov
clc
outsl
sub
inc
jmp
jl
icebp
mov
stos
lea
stos
stos
inc
outsl
lret
gs
cmpl
out
pop
mov
jmp
call
lahf
sub
fmuls
push
push
orb
cmp
data16
xchg
xchg
stos
inc
ljmp
pusha
sub
xchg
and
or
sar
jl
fcompl
and
inc
cmp
inc
inc
les
sti
xchg
rcll
nop
or
add
jmp
push
lret
and
jnp
aaa
sti
cmp
loope
ljmp
mov
inc
lret
pop
test
decl
iret
mov
or
mov
xchg
mov
mov
cmpsb
jmp
jo
iret
test
cld
lds
sarl
xchg
cmp
pop
cmp
ljmp
mov
in
cli
mov
push
xchg
sti
sbb
int
push
push
or
and
jo
ljmp
int3
mov
cmp
das
push
testl
imul
push
jl
push
mov
xorb
jmp
mov
shlb
dec
xchg
ja
and
mov
jb
gs
jp
xchg
outsl
and
test
shrb
movsl
inc
xor
push
inc
test
insb
icebp
pop
dec
jnp
push
les
inc
pop
cmp
dec
pusha
decl
ret
sub
mov
mov
lds
out
pop
int
mov
jbe
mov
push
outsl
dec
pop
mov
add
and
pop
test
mov
xor
ss
mov
cmp
jge
lret
jmp
cmpb
dec
dec
inc
sbb
ljmp
jge
test
movsl
fs
test
pushl
cmp
or
test
roll
add
dec
push
and
lret
mov
add
sub
cmp
jg
cmc
mov
imul
mov
jle
arpl
decl
mov
dec
inc
cs
mov
lea
lds
test
iret
mov
mov
xor
xor
popa
adc
mov
fs
inc
adc
incl
andl
mov
pop
add
pusha
cli
pushf
inc
or
jg
repz
inc
std
jg
incl
repz
xor
cmpsb
adc
mov
sub
mov
xor
out
lds
out
push
lock
pop
xchg
insl
je
into
mov
mov
and
push
adc
cmpb
movsl
out
hlt
scas
gs
out
lret
loop
decl
adc
aad
psrlw
fs
adc
jge
popf
sub
jp
sub
arpl
fwait
pushl
cmp
sbb
sub
roll
or
popf
mov
aas
xor
jg
icebp
cmp
xchg
sub
sbb
mov
pop
and
fcomp
mov
call
adc
cs
subl
push
ljmp
lock
testb
or
sub
mov
add
cmp
mov
ss
shrb
jnp
xchg
out
ljmp
sub
pop
lcall
adc
fpatan
or
pop
in
nop
cli
pop
mov
pusha
stos
jb
jno
cld
cmp
loop
xchg
add
xor
fildll
adc
add
jo
insb
loopne
out
mov
jbe
fstp
jg
lods
cs
jnp
filds
out
xor
imul
movsl
dec
std
jmp
xor
xchg
and
adc
hlt
jg
pop
mov
cmp
cmp
push
add
sahf
sbb
popf
mov
cmp
fistps
add
mov
mov
in
outsb
dec
insb
scas
and
lahf
dec
call
lea
ss
hlt
mov
aad
ret
repnz
jp
add
ljmp
roll
jae
sbb
jne
push
mov
rorb
call
inc
movq
out
pop
jo
sar
incb
loopne
mov
call
ja
lds
shrl
mov
iret
sub
sbb
xchg
fwait
lahf
mov
xor
out
out
push
mov
push
adc
decl
mov
jle
addl
es
xchg
pop
movsb
adc
stc
mov
jl
lea
stos
pop
fwait
ja
add
xor
out
pop
lcall
fldcw
push
sub
clc
pop
out
loope
sbb
jl
xchg
movsb
andl
pushl
mov
lea
mov
fs
call
mov
add
xor
stc
mov
imul
adc
add
dec
ss
stos
xor
ljmp
jp
orl
xlat
scas
or
cld
sti
cld
jp
cmp
sbbl
jno
add
inc
es
repnz
or
mov
mov
jg
add
out
cmpsb
mov
push
clc
shlb
enter
loope
jl
or
or
decl
aaa
out
scas
push
and
xlat
mov
push
andl
mov
jge
cmp
or
pop
mov
inc
aas
mov
inc
je
xor
cmp
repnz
pop
ljmp
jbe
add
sti
xor
pop
icebp
lcall
outsl
and
stc
das
ja
cltd
ss
mov
jmp
mov
lds
int
fcomip
lcall
xchg
mov
jbe
dec
mov
shll
fimull
shrb
adc
cwtl
jmp
aam
pop
or
jns
or
xchg
pop
daa
push
inc
into
imul
fdivr
inc
pop
orb
jl
jo
je
xchg
ret
adc
cmp
cmc
dec
sbb
ss
lcall
pop
mov
iret
sar
mov
lods
in
dec
out
in
mov
in
lea
push
sub
dec
xor
mov
ret
imul
outsl
and
ret
mov
cmp
xchg
xchg
sub
scas
xorb
std
lcall
cmp
enter
jnp
lret
pushf
mov
cld
mov
scas
jp
jle
lods
lret
adc
xchg
sbb
xor
pop
inc
jmp
out
push
hlt
imul
jmp
fisttpl
ret
dec
sbb
add
add
cmp
sbbl
pop
sbb
idiv
lcall
jle
and
sub
ljmp
jae
mov
mov
dec
jmp
adc
aas
jae
loop
lods
mov
mov
shrb
lds
pop
add
lea
loopne
pop
shrb
sub
jg
adc
test
sbb
cmpsb
rcrb
dec
jle
sub
xor
mov
xor
add
pcmpeqb
scas
cli
lcall
mov
jmp
push
jns
inc
lret
pop
add
jp
cmp
das
clc
pushl
mov
sub
mov
or
jae
jl
sbb
jns
imul
ds
fnsave
and
pop
mov
out
mov
loopne
stos
xlat
add
call
std
mov
pop
in
clc
pushf
mov
sbb
mov
mov
pushl
xor
xorb
xor
mov
sbb
mov
cmc
pop
test
xor
lods
loope
dec
jae
mov
mov
dec
mov
jmp
call
fidivrs
movsb
adc
ficompl
fmul
jnp
inc
mov
sbb
cmp
fdivs
adc
in
pushf
ficompl
mov
mov
cmpsb
cmpsb
dec
hlt
pop
aam
push
or
aas
sbb
sbb
gs
call
loopne
dec
pop
inc
aam
and
into
add
pop
mov
or
lcall
sub
out
push
notl
es
sbb
mov
shlb
sub
jmp
sar
call
pop
jecxz
clc
adc
das
mov
xlat
pop
lret
cwtl
movsb
sub
bound
jg
sbb
pop
inc
push
hlt
dec
add
icebp
and
in
iret
cmp
das
or
imul
sub
out
jae
pop
ja
mov
decl
insb
cmp
out
sbb
cltd
stc
repnz
out
outsb
cmp
cmc
jmp
sbb
fsubrl
pushf
in
test
cs
sahf
rcr
adc
mov
std
data16
clc
push
sbbl
and
pop
push
cli
inc
roll
fldl2e
adc
cmp
jmp
movsl
pop
mov
pop
sbb
test
stos
icebp
mov
dec
fsubrp
cltd
cmp
outsb
stos
mov
pop
mov
incl
imul
lret
cs
dec
mov
adc
aam
inc
test
ds
insb
shll
push
mov
popf
int3
xchg
pushl
fists
in
iret
xchg
into
pop
or
repz
adc
aaa
lcall
rclb
mov
inc
dec
lahf
fwait
sbb
push
sub
pop
push
mov
xor
fidivl
xchg
dec
jbe
or
pushl
scas
jge
push
ss
insb
mov
jmp
rclb
xchg
je
cmp
push
and
push
cmp
lret
jl
jnp
incl
add
fildl
or
jmp
fimuls
xor
mov
pop
popa
or
push
mov
pop
in
cwtl
pop
pop
fwait
mov
push
push
mov
mov
mov
out
mov
test
sti
mov
pop
or
inc
xorl
and
pusha
pop
enter
jo
pop
aaa
addr16
ja
sub
cmpsb
fmull
inc
mov
ja
pop
je
dec
jmp
cltd
or
jne
and
test
mov
push
gs
incb
or
or
out
push
scas
sub
jle
sub
pop
xchg
cmc
add
mov
inc
sahf
cmp
mov
incl
and
lods
add
data16
mov
pusha
repnz
sar
std
cli
push
fistpl
data16
popf
nop
ja
or
call
mov
lcall
jmp
fs
insl
divb
stos
pop
mov
mov
xchg
loopne
ja
sbb
cmp
incl
out
adc
divl
rolb
out
mov
adc
sbb
mov
std
pop
popa
xor
test
repz
or
ja
inc
jge
jl
xor
shlb
scas
mov
mov
xor
mov
add
pop
loope
aas
fbld
lds
push
jae
sub
lods
push
xchg
shlb
mov
ljmp
mov
outsl
insb
popf
fcmovnbe
repz
jae
inc
fcmovb
fcmovu
cmpsb
push
xor
decl
pop
mov
jp
mov
test
mov
test
icebp
push
xchg
or
mov
jbe,pn
jb
std
inc
mov
dec
add
jbe
xor
jmp
fcomip
xchg
lods
jge
scas
in
jmp
sar
push
aas
push
xchg
pushf
adc
inc
cmp
mov
cld
lock
xchg
cmp
push
push
leave
adc
push
and
call
scas
pusha
xchg
mov
pop
jg
cmp
movsl
add
pusha
jg
add
test
mov
sti
in
push
cs
cmpb
gs
int3
add
push
gs
scas
js
test
inc
push
popf
fisubl
orb
ficompl
decl
loop
push
int
jns
cmp
pusha
sbbl
xchg
stc
or
and
mov
decl
inc
dec
ret
jbe
cli
push
call
sti
cmp
in
cwtl
decl
je
pushf
movsb
fcom
orl
pop
inc
xor
lods
sar
dec
imul
in
pushf
push
out
sbbl
cld
mov
imul
or
pushl
out
dec
imul
xor
or
mov
mov
jno
or
shl
shrb
push
stos
xchg
adc
rcrl
adc
int
push
fxch
xor
rcrb
mov
inc
sub
dec
idiv
push
inc
inc
fcomip
dec
mov
cmp
jne
testb
and
ds
sbb
testb
fadd
repz
bound
and
jge
scas
mov
jnp
inc
and
or
mov
mov
imul
mov
insl
adc
out
push
inc
pop
xlat
pop
aaa
aaa
mov
call
cmp
in
xchg
leave
dec
push
sbb
movaps
test
outsb
push
das
inc
test
jns
fsubrs
int
mov
cs
in
pop
add
cli
cltd
xor
sbb
incl
inc
nop
in
xchg
add
popf
ja
push
xor
jbe
in
subl
mov
sahf
xlat
dec
xchg
xchg
add
fstp
or
add
mov
out
insl
dec
lcall
mov
dec
sub
add
xchg
arpl
mov
xor
cmp
aad
repz
jmp
outsl
aas
lods
arpl
outsb
sub
fxch
inc
push
mov
out
int
push
mov
push
xchg
push
mov
scas
lods
pop
insb
cli
and
ljmp
pop
shlb
mov
das
jp
or
mov
loopne
pop
xlat
mov
fldcw
les
aam
rclb
mov
ljmp
cld
aam
iret
or
pushl
outsl
sbb
push
inc
orl
adc
or
dec
mov
ljmp
mov
enter
pushl
ljmp
adcb
xor
xchg
adc
push
xor
jne
mov
mov
push
mov
add
sbb
sub
mov
lcall
inc
pusha
cltd
jne
lods
push
cmpsb
lcall
stc
mov
xchg
cli
jmp
sub
mov
inc
cs
mov
inc
stos
inc
mov
data16
mov
cmp
insl
sbb
mov
mov
js
cld
call
mov
inc
jno
inc
push
addb
inc
scas
xchg
mov
cmp
jg
add
je
push
jge
xchg
ja
loopne
incl
in
xlat
sbbl
adcl
dec
pop
repnz
cmc
in
push
aaa
test
mov
mov
inc
mov
mov
pop
mov
xor
test
call
dec
or
cmpsl
dec
mov
and
push
lcall
cmpsl
inc
outsl
push
std
pop
cli
fs
fcom
sub
cmpsb
sub
movsb
cli
jge
push
ret
faddl
cld
lret
hlt
aam
nop
mov
sbb
lea
add
negl
dec
jae
and
or
sbb
cltd
add
push
loop
scas
sub
sub
inc
inc
xchg
add
jg
and
and
das
aas
inc
dec
ret
int
mov
outsb
ret
dec
cmp
jmp
jne
mov
in
lret
ja
repnz
xor
fistps
js
xor
imul
lods
xorl
pop
fmull
insl
ja
incl
jmp
mov
or
roll
ds
mov
and
lods
cld
jg
sub
push
aas
cld
push
mov
data16
test
inc
ljmp
jmp
cmp
mov
mov
cmp
sbb
popf
push
test
or
jmp
adc
mov
jbe
dec
arpl
inc
mov
xchg
mov
and
fnstenv
ljmp
pusha
mov
jbe
push
push
repnz
es
pusha
bound
and
push
aaa
xchg
outsl
cmpsb
or
sbbb
ja
dec
jo
outsb
repz
mov
fldt
mov
mov
pop
xor
sbb
loop
call
cld
push
jno
enter
adc
mov
add
jmp
pushl
decl
push
leave
xor
rorb
int3
pop
mov
sbb
sub
xor
call
imull
out
mov
jp
push
sbb
or
fs
lods
nop
fsubl
mov
in
fildll
push
mov
mov
pop
or
in
adc
mov
idivb
aam
xchg
repz
cmp
push
dec
and
fsubrl
xor
insl
mov
jmp
ficoms
xor
ds
add
movsb
push
ret
jecxz
mov
inc
dec
pop
in
out
push
jne
push
inc
jmp
scas
inc
jo
loop
jne
aad
mov
dec
in
dec
mov
and
adcl
or
cmp
inc
ret
lcall
mov
shrb
ss
dec
popf
xor
test
add
and
outsl
mov
jg
cmpb
daa
jne
push
xchg
int3
inc
or
mov
mov
mov
adc
jecxz
cld
test
cmp
inc
push
insb
lcall
jmp
cmpsb
pushf
leave
xor
xchg
add
fnstcw
inc
mov
in
jge
nop
mov
incl
inc
fldl
jnp
push
inc
fxch
stos
and
sub
popa
xor
jns
xor
jle
inc
lahf
fsubrs
sub
incl
out
lcall
adc
test
jae
pushl
nop
repz
cmp
inc
bound
fwait
pop
pop
lock
cmp
lcall
lret
lods
dec
pop
mov
or
popf
pop
les
and
cwtl
call
mov
int
stos
mov
dec
xchg
xchg
jg
sub
mov
movsl
pop
sub
lcall
xor
test
pop
fs
sub
addr16
pop
fiaddl
psubb
lcall
stc
stos
cmc
rorb
xchg
mov
testl
xchg
mov
call
push
sub
mov
clc
and
nop
push
sbb
push
aas
push
xchg
in
stc
outsb
addr16
jmp
dec
pop
test
or
pop
cld
lcall
loopne
in
ds
dec
or
mov
ja
outsb
jmp
pushf
jo
es
sar
mov
jo
sub
adcb
cmpsl
dec
stos
in
je
push
lret
hlt
or
ret
add
push
loopne
fs
mov
xlat
push
pop
jl
dec
sbb
out
adcl
movsl
popf
mov
scas
fistpl
or
pushl
fmuls
aas
cmc
jmp
xchg
neg
pop
pop
jbe
sub
xchg
fildl
cltd
inc
inc
lcall
mov
ja
xor
xchg
stos
test
xor
shrb
fwait
jne
imul
mov
ret
shll
or
dec
lahf
xor
sub
cmp
pusha
clc
jb
sbb
call
sub
add
or
out
ss
jne
icebp
addr16
xchg
mov
clc
dec
pusha
lods
fwait
xor
cwtl
mov
mov
out
and
gs
test
push
icebp
or
mov
stos
dec
pop
call
cmp
insl
xlat
ljmp
xor
popf
call
xchg
mov
jp
adc
or
out
call
cmp
jg
mov
mov
inc
jbe
popf
mov
adc
mov
pop
outsb
add
ljmp
popf
pop
ja
mov
sti
xchg
cli
adc
push
incl
cmp
xor
daa
xchg
mov
scas
sub
sub
cwtl
mov
incl
xor
pusha
push
sub
pop
ss
es
mov
insb
mov
cmpsl
call
cltd
or
xor
sub
popf
arpl
sbb
imul
pop
fmull
sti
decl
test
jg
in
xor
push
and
in
add
aas
jb
pushl
adc
pop
sub
jg
cmp
adc
pop
mov
pop
mov
jae
lods
decl
lock
dec
stos
daa
inc
inc
mov
and
jmp
mov
cs
sub
pop
mov
mov
sbb
push
add
lcall
mov
into
ret
xor
fists
push
jge
pusha
mov
decl
clc
jo
push
push
ss
imul
jge
sbb
sbb
scas
out
push
mov
ljmp
cmp
sbb
pop
movb
mov
mov
jb
jp
push
clc
mov
incl
lock
xchg
enter
jp
and
adc
cli
bound
adc
pushl
mov
inc
jge
sub
int
notl
jbe
pop
scas
pushl
call
lock
jns
pop
leave
xchg
sub
js
lea
leave
es
lret
sarb
lcall
incl
and
adc
jp
je
sub
cs
and
push
cmp
dec
mov
inc
jnp
dec
or
add
fisttpl
nop
dec
shl
jg
push
xor
stos
xor
test
in
fldt
test
push
cmp
xor
lahf
mov
loop
push
adc
sub
xchg
loope
jle
jmp
sahf
mov
jb
gs
shll
cltd
aas
or
jmp
sbb
iret
sub
or
pop
cmc
lcall
xchg
or
shlb
mov
call
mov
pop
pusha
imul
push
xchg
add
jp
ljmp
cwtl
sahf
lret
jo
mov
ljmp
mov
xor
outsb
pop
jp
pushf
lock
std
out
sbb
mov
push
out
gs
sub
rcll
ljmp
mov
cli
loop
pop
push
addr16
and
pop
xchg
xlat
js
enter
or
roll
pop
sbb
and
test
pop
mov
inc
ds
out
test
sub
mov
out
loope
push
jnp
xorl
xchg
jae
jl
movsb
pusha
lcall
daa
imul
xchg
icebp
add
sub
jmp
fwait
nop
lret
sbb
push
add
call
jno
or
push
aad
clc
ljmp
cmp
repz
xchg
jmp
mov
and
ljmp
push
gs
jmp
sub
cs
xor
ljmp
lret
mov
mov
jecxz
int3
add
pop
inc
adc
shrb
dec
push
or
pop
push
pop
adc
pop
xchg
xlat
jnp
insb
data16
push
nop
test
and
incl
setp
lods
jecxz
jp
lea
xor
ljmp
pusha
cli
movsb
xchg
xchg
mov
add
xchg
cmp
inc
cli
in
mov
jb
pop
cwtl
lods
dec
inc
cltd
and
das
rorb
cmp
cld
and
arpl
xchg
dec
push
icebp
ret
dec
mov
lcall
pop
imul
xchg
mov
call
jge
hlt
add
imul
jmp
mov
adc
das
mov
adc
mov
push
xor
fcmovbe
in
call
mov
iret
pop
ja
call
cmp
push
push
and
nop
jg
mov
int
pop
out
add
aas
dec
or
add
sub
push
lcall
stc
nop
notb
adc
lar
mov
sti
jo
fnstsw
scas
add
jnp
inc
lea
or
leave
ficomps
enter
hlt
mov
pushl
lcall
or
sbb
sub
ret
loop
xor
xor
mov
call
sbb
subb
mov
orl
inc
and
out
clc
ljmp
shrb
mov
pop
sbb
jbe
cs
fistpll
int
stos
testl
stos
adc
xlat
mov
xchg
xchg
inc
push
add
decl
popa
sarl
cmp
push
inc
sahf
rcrl
jmp
mov
cmp
adc
jmp
lods
repnz
movl
out
mov
mov
cmp
call
push
gs
into
insb
cmpsl
outsl
int
arpl
decl
cmc
outsb
xor
push
shrb
and
stos
mov
das
mov
lcall
lock
ljmp
mov
jne
jae
cs
lcall
rcl
fldt
mov
jg
and
adc
imul
pop
pop
aaa
fadds
cld
call
sbb
pushl
xchg
popf
test
xchg
ret
bnd
rorl
push
call
aaa
xchg
sbb
pop
imulb
mov
inc
push
idivl
push
je
pop
dec
dec
mov
sub
jmp
rcrl
jmp
jae
jmp
mov
xor
fnstenv
jg
lcall
sbb
sarl
push
push
jb
mov
cmpsb
push
in
fnstenv
inc
add
dec
lret
add
hlt
or
cs
incl
and
imul
and
adc
or
fimull
pushl
sub
jge
sbb
je
ss
neg
pop
add
jnp
jbe
call
cmp
outsb
lea
mov
xlat
push
inc
ret
xor
jno
shr
movsb
fstps
jo
ret
lahf
stc
xor
or
daa
punpcklwd
fcom
xchg
ljmp
mov
mov
addb
mov
cltd
and
mov
mov
mov
cs
jnp
push
inc
mov
outsb
aad
andb
mov
fnstcw
dec
and
and
ljmp
inc
ret
test
cmp
sbb
cli
aaa
cmpsb
fwait
mov
jnp
inc
aaa
ja
mov
fcomip
mov
ja
sbb
es
les
xchg
xchg
pop
sub
call
xchg
pop
insl
or
mov
enter
scas
jge
mov
loop
fsubp
sar
decl
jo
and
mov
cltd
ds
jp
mov
or
aad
sbb
daa
test
lcall
std
movsl
lret
mov
mov
or
ficoms
cmp
adc
lea
dec
pop
dec
mov
mov
aas
fnstsw
inc
loope
add
adc
leave
mov
addb
inc
gs
out
inc
push
scas
sbb
jmp
cmp
pop
mov
jmp
js
push
dec
shlw
test
out
mov
ljmp
aad
icebp
push
pop
pop
hlt
sbb
pop
xor
mov
adc
decl
test
push
ljmp
cmp
enter
test
push
outsl
cmpsb
in
jmp
jo
imulb
test
mov
sbb
mov
outsl
je
sub
cld
call
aam
pushf
call
xor
cmp
pop
add
sub
out
push
push
bound
sub
arpl
fs
xorb
stos
pusha
or
cmp
ljmp
mov
out
inc
test
mov
lret
out
mov
xchg
outsb
and
sti
jnp
fdivp
in
push
hlt
daa
mov
call
lret
fldenv
lds
inc
add
popf
lahf
add
aas
jbe
in
dec
or
sub
jecxz
push
lods
incl
cltd
aaa
nop
lock
sar
mov
dec
jae
push
sub
out
xlat
call
mov
xchg
imul
shrl
orb
pushf
and
cmp
cli
mov
mov
lds
popa
icebp
pop
es
sub
jge
and
mov
pop
push
mov
sbb
inc
mov
xor
xchg
jne
repz
xchg
jg
push
add
decl
movsb
outsl
sbbl
dec
movsl
jbe
sahf
xor
sub
mov
movb
repnz
scas
lret
cmp
mov
adc
xchg
clc
inc
inc
std
call
adc
cmpsl
push
stos
jl
and
push
fwait
sar
jo
jo
hlt
out
xor
ljmp
lds
jp
cwtl
lcall
int
dec
ja
jbe
fdivl
outsl
sbb
popa
movsb
test
icebp
sbb
lret
lcall
iret
lds
sbb
adc
sahf
iret
or
xor
aad
stos
dec
test
sti
jae
cld
jle
rcrb
jmp
fwait
sub
mov
in
ljmp
jg
dec
sub
jno
loopne
xor
adc
mov
pop
cmp
adc
nop
jne
std
lcall
cld
cmpsb
add
push
aaa
inc
mov
fwait
xchg
jecxz
mov
add
jb
out
mov
push
daa
dec
mov
lret
sbb
je
testb
scas
cmc
stos
imull
push
add
and
and
push
xor
fwait
add
int3
inc
sub
scas
in
push
inc
inc
xor
mov
data16
jmp
sub
fimuls
ret
pop
nop
pop
cmc
lret
add
cmp
int3
mov
aas
sub
pop
pop
ret
lahf
or
sahf
inc
inc
or
adc
push
pop
or
jle
loop
xor
xchg
inc
xchg
pcmpgtb
adc
add
xchg
lea
dec
cmpsb
cmp
add
sbb
mov
dec
adc
pop
ja
add
imul
xor
shlb
and
pop
xor
sub
sbb
mov
out
scas
inc
dec
jp
cs
cs
cwtl
jl
mov
fcmovb
lods
inc
mov
mov
mov
sti
pop
fisttpl
push
xor
sub
pop
cli
lods
es
jns
and
xchg
add
setno
jle
int
pushl
std
decl
sbb
jae
cwtl
aad
fwait
jge
daa
push
shl
mov
mov
cltd
cmpsb
call
push
jno
out
or
jne
jg
mov
lahf
cmpsb
or
mov
gs
cmp
xor
sbb
fcoms
push
out
outsb
push
cmp
sub
inc
and
mov
outsl
cli
cmp
adc
fs
jecxz
lret
adc
add
sub
test
cld
dec
cwtl
or
movsb
sbb
push
push
gs
sti
and
push
push
pop
sub
fwait
call
xchg
inc
mov
sub
push
add
cltd
dec
mov
or
into
incl
cwtl
jbe
test
and
shrl
icebp
fldcw
cmc
js
ret
lds
ret
pop
addb
push
stos
adc
ljmp
jge
xchg
pushf
pushf
imul
orb
cmp
mov
jge
fstl
and
adc
mov
push
xor
cmpsb
mov
ljmp
testl
mov
mov
cmp
gs
lret
jmp
jmp
stos
jmp
add
pusha
imul
mov
xchg
cld
fwait
sub
and
sub
lods
cwtl
out
adc
call
ret
pop
adc
rolb
pushf
out
xchg
pop
xchg
out
lahf
xchg
pop
imul
xchg
mov
cmpsb
xor
pop
cmpsb
adc
lcall
outsl
mov
fistl
pop
xchg
out
out
push
sub
sub
stos
jno
ret
inc
sub
jmp
jle
dec
push
prefetcht1
cmpsb
lret
popa
sub
sub
xchg
js
dec
call
mov
mov
sti
push
aas
mov
dec
pop
xor
mov
fwait
xor
ss
adc
fistpl
or
mov
mov
bound
pop
lock
jg
sub
imul
add
jl
and
mov
inc
jmp
insl
das
mulb
xchg
mov
jns
std
sbb
leave
pop
sti
mov
pushl
movsl
pop
aam
jg
les
test
loopne
enter
adc
pop
xor
add
arpl
out
adc
mov
dec
push
data16
pushl
cmpsb
in
lods
shll
inc
sub
ljmp
pop
mov
stc
and
rcr
call
out
in
leave
decb
ja
mov
in
jnp
pop
pop
jg
es
incl
cltd
aad
popf
jle
call
mov
test
sub
inc
push
jl
jne
incl
inc
jae
inc
fs
mov
jg
mov
pop
ret
scas
in
cmp
clc
or
call
pop
jns
xor
cmp
mov
bound
shll
in
pusha
ds
loope
sbb
incl
lds
xchg
je
adc
fidivs
not
dec
xor
xor
gs
sbb
pushl
jp
xchg
or
inc
mov
pushf
dec
and
xchg
cwtl
ret
sbb
bound
in
cmp
testl
and
sbb
and
ss
pop
out
push
movb
jmp
test
adc
adc
mov
sbb
stos
dec
andb
jecxz
es
fistpll
enter
mov
lock
mov
sub
mov
clc
push
inc
je
out
cltd
jo
xchg
mov
mov
sbb
cmp
inc
pop
lods
int3
push
cwtl
lods
push
mov
jecxz
add
xor
paddq
das
lcall
les
sbb
xchg
xor
js
insl
dec
jb
fimull
or
std
les
das
aas
cli
pop
jns
mov
scas
sub
loop
push
xchg
mov
stos
xor
sbb
jns
leave
outsb
mov
jae
mov
pusha
test
or
dec
xor
loope
sub
pusha
insl
dec
mov
jo
jne
push
dec
fmull
pop
and
adc
sbb
mov
data16
pushl
daa
xchg
jae
icebp
fistl
orl
lret
adc
cmpl
dec
sub
les
jg
lcall
fwait
sub
das
xchg
out
cwtl
lock
scas
pop
sbb
fcomip
call
add
repz
std
adc
inc
mov
inc
mov
iret
mov
cli
cmp
faddl
loopne
xchg
mov
pop
sub
ljmp
lods
dec
cltd
std
dec
cmp
and
rcr
fsts
jbe
ja
je
push
sub
insl
lock
ret
shll
loopne
xor
pop
dec
mov
jae
xchg
push
bswap
in
pop
mov
decb
imul
popf
outsb
mov
ficoml
cmp
lds
hlt
xchg
or
jmp
decl
subb
test
loop
lret
push
pop
push
add
xchg
int
loop
add
out
ret
imul
xchg
loop
jbe
dec
dec
addr16
out
mov
jmp
pop
xor
hlt
out
pop
shlb
stos
cmp
jg
fadds
jo
or
mov
testb
mov
jmp
xchg
xor
js
in
sub
pop
add
imul
jae
inc
int3
xlat
js
cmp
mov
sub
mov
lds
xor
dec
sbb
clc
ljmp
cmp
xchg
jbe
mov
or
xor
leave
scas
and
mov
ljmp
into
std
movsb
sbb
rorl
movnti
test
test
call
ja
cmp
lods
adc
xor
cmp
das
mov
mov
and
sar
pop
mov
addr16
add
aad
inc
jg
sbb
xor
xchg
add
shll
lcall
push
inc
xor
adc
xor
scas
pushfw
repz
and
xchg
icebp
in
dec
mov
int
mov
or
sub
sub
fidivs
fnsave
je
mov
adc
add
aas
rcrl
pop
rorb
inc
ljmp
fstpl
roll
mov
mov
pop
pop
in
xchg
rsqrtps
adc
jmp
enter
push
push
movzwl
adc
mov
rcr
or
pop
pop
push
in
sub
pop
lahf
jl
dec
out
lcall
stos
push
mov
push
inc
adc
cmp
push
out
movsl
xchg
cli
lret
push
sub
fmulp
roll
aas
pop
push
add
lcall
inc
xchg
pop
pop
xorl
add
ja
ljmp
ret
cmpb
mov
js
adc
jle
cld
or
ljmp
pop
mov
cld
rorl
jmp
cmc
add
push
test
ret
das
dec
push
das
mov
jge
shll
mov
pusha
jb
clc
jp
sbb
and
ja
clc
push
cmc
cmp
pushf
adc
adc
push
add
jmp
cmp
or
imul
decb
popa
sbb
std
add
mov
repz
jae
jmp
iret
stc
xlat
in
cmp
adc
jg
ljmp
loopne
es
popa
xor
lret
loope
pusha
mov
sahf
xor
jmp
out
adc
mov
dec
adc
out
sub
loope
add
cmp
repz
sub
mov
jns
ja
inc
pop
cmp
and
mov
lods
xchg
xor
cmpl
and
lret
mov
rorl
sbb
cmp
ds
cmp
movsl
adc
lock
decl
scas
adc
roll
pop
sahf
jp
ret
call
ljmp
xor
sbb
jns
adc
xchg
fisubs
mov
clc
or
jl
pop
ret
jecxz
call
jae
lahf
push
mov
cli
incl
test
pop
lret
xchg
cltd
mov
inc
xchg
into
fnstenv
adc
mov
cmp
jmp
xor
or
stos
cli
cwtl
aaa
mov
inc
and
enter
inc
flds
aas
pusha
xchg
roll
test
arpl
fistl
fcoms
xchg
lcall
cmp
mov
shll
xor
push
lret
fildl
incl
xchg
icebp
cmpb
je
mov
pop
movsl
sub
into
fnsave
pushl
std
lcall
mov
mov
jp
in
xor
lock
decl
xor
fmull
pop
iret
pop
sbb
unpcklps
js
pop
out
ja
imul
or
dec
ljmp
cli
aad
ds
xchg
fnstenv
mov
xor
lods
push
jno
pop
and
or
std
or
mov
cli
mov
pop
ds
dec
jne
xor
nop
jl
push
push
cmpsl
sbb
in
fwait
nop
scas
push
je
push
push
mov
pop
cs
ljmp
arpl
pop
mov
jge
adc
jno
ljmp
ret
out
cmp
lret
enter
push
push
xchg
inc
jb
shlb
cmp
push
jb
dec
pop
fdivrp
mov
adc
inc
dec
movb
loope
xchg
inc
lock
pushl
repnz
dec
dec
push
adc
xlat
cmpsb
add
inc
pusha
jl
push
les
lock
fildll
adc
push
mov
and
pop
clc
lods
mov
sub
out
jmp
push
iret
adc
imul
xor
lods
sbb
mov
mov
inc
push
mov
push
pushl
and
xchg
jns
mov
cmp
movsb
inc
bnd
loope
jg
push
and
in
cmpsb
mov
lea
cltd
pop
lret
fcompl
data16
stc
lret
cld
push
fs
cmc
ljmp
sub
xchg
enter
push
js
sub
mov
dec
mov
mov
add
int
sub
dec
loope
push
push
aaa
sbb
mov
loopne
inc
shlb
test
xchg
mov
fcoml
xchg
mul
cmp
ljmp
out
push
pop
mov
stc
add
ljmp
out
stos
xor
fs
mov
inc
sub
fcompl
mov
scas
sbb
cwtl
out
mov
sbb
dec
je
jp
loope
sbb
mov
outsl
clc
jmp
add
shlb
subb
inc
cmp
push
movsb
dec
pop
stc
mov
call
jbe
out
les
xchg
ss
test
xchg
call
adc
ja
pop
arpl
int
scas
xor
iret
out
mov
xchg
shr
mov
add
popa
mov
push
mov
push
in
int3
mov
mov
in
loope
lods
aas
ljmp
push
int
cs
jne
mov
mov
call
ljmp
loopne
fildl
xchg
xchg
mov
std
sub
xchg
jae
ja
pushf
sbb
adc
insl
push
lods
scas
clc
call
push
rcll
pop
aas
jmp
insl
rolb
test
fwait
or
ljmp
call
fidivrs
jbe
das
cli
mov
mov
adc
call
xlat
addr16
push
push
ss
jbe
jle
sub
aas
push
fisubl
jb
and
pushl
loop
pop
pop
popf
push
pop
sub
inc
pusha
jb
das
sbb
pop
jbe
divb
sbb
cmp
inc
mov
add
push
ss
ljmp
adc
call
into
lea
in
adc
imul
decl
push
call
add
push
fldcw
jno
sbb
push
stc
filds
dec
ljmp
out
js
je
in
mov
nop
xor
sbb
js
popf
xor
mov
clc
gs
push
fistpll
repz
fbstp
mov
mov
cmpsb
sar
pushl
add
jnp
mov
ret
and
cmp
pushf
jecxz
sub
dec
mov
call
repnz
repz
jae
cmc
jnp
or
clc
xchg
mov
sub
insl
lcall
mov
lret
push
xorb
mov
pop
or
and
lea
add
incl
fldenv
xor
cwtl
inc
push
pop
mov
pop
bound
jg
xchg
inc
push
sbb
in
xor
lock
dec
push
add
and
test
adc
sbb
and
or
call
movsl
cmpb
mov
fdivr
inc
pop
enter
pop
lods
push
cmp
fiaddl
ds
inc
fdiv
divl
dec
std
aad
das
rorb
adc
adc
adc
adcl
aas
shl
sbb
jg
js
push
ret
push
insl
sub
xchg
or
lret
mov
addr16
mov
or
and
mov
lea
ljmp
and
xchg
jecxz
arpl
xchg
fstps
xchg
incl
cld
ret
cmp
pop
faddp
cmpb
mov
mov
pushl
test
push
or
mov
insl
and
je
sub
pop
mov
mov
ds
clc
dec
call
push
enter
stos
aad
sbb
push
sahf
addr16
orb
std
sbb
mov
loopne
mov
ljmp
neg
aas
or
pop
xlat
cli
addr16
arpl
shrb
pop
pusha
loope
jmp
fbld
xor
push
xor
dec
outsl
jb
xor
shrl
mov
cmp
test
inc
out
or
iret
dec
add
pop
fs
lcall
or
push
mov
cmpsb
mov
sbb
arpl
movsl
mov
cli
xor
js
call
test
mov
jmp
pop
pop
and
mov
xor
out
clc
jle
sub
mov
cwtl
cwtl
out
mov
shll
incl
leave
fnstcw
fdivs
adc
xor
mov
adc
cwtl
pop
sub
call
imul
dec
testb
jmp
add
jl
add
ljmp
sbb
call
add
sub
out
jecxz
sti
pop
cwtl
pop
ljmp
push
outsb
inc
add
sub
leave
in
mov
push
test
imul
fnsave
es
xor
sub
cmp
dec
roll
in
sbb
aam
lahf
jg
jl
lds
iret
out
cmp
adc
call
aaa
addr16
mov
add
icebp
pop
pop
or
loopne
cld
mov
sbb
jg
repz
scas
testl
pop
dec
subl
sahf
lcall
outsl
mov
cli
lcall
inc
add
add
incl
mov
pop
push
scas
jae
mov
aas
mov
ja
lret
repz
std
dec
cmc
in
addr16
cmp
inc
decl
mov
in
mov
mov
cld
lcall
and
test
daa
mov
imul
in
fisubl
jo
or
and
nop
sub
mov
push
adc
cmc
leave
push
cmpsb
shlb
jmp
mov
scas
imul
sub
fisubs
xchg
imul
jmp
das
dec
aam
sbb
out
insb
mov
lock
mov
out
xchg
mov
scas
std
or
cltd
clc
mov
fidivrl
scas
sub
xchg
jp
push
pushl
cmp
fcomp
xchg
in
jno
adc
cmpsb
adc
push
push
or
fdivs
ss
call
loope
addr16
rorl
mov
popf
cmp
and
ljmp
jno
int
jnp
pusha
jge
cmp
cmpsl
add
and
mov
shlb
adc
push
mov
dec
cmp
push
push
movsl
cs
xor
je
cmp
fscale
mov
aaa
and
ds
lcall
adc
fwait
xchg
jl
sub
adc
iret
repz
xor
pop
and
lcall
xchg
testb
mov
xor
scas
leave
sub
hlt
decl
inc
mov
aam
vdivpd
cwtl
stos
pop
test
nop
ds
repnz
lcall
add
cwtl
adc
decb
dec
test
out
nop
das
mov
sbb
mov
and
and
cli
xor
jecxz
lret
xor
mov
push
out
mov
push
testb
idivb
xlat
mov
daa
adc
ds
dec
icebp
cmpsl
aas
decl
fisttpl
imul
push
dec
add
enter
fmuls
sahf
xchg
mov
pushl
jge,pn
and
mov
les
sub
push
mov
add
dec
arpl
xorl
mov
pop
mov
push
sub
and
inc
sbb
lcall
sbb
add
std
add
aaa
and
lret
js
lea
push
xor
in
jmp
les
and
icebp
jl
cmp
dec
into
cmp
fwait
lock
xor
decl
ljmp
add
in
sub
xchg
xor
sbbb
hlt
shlb
std
jle
push
xor
daa
lock
xor
das
lds
jbe
cmp
scas
and
jle
mov
mov
scas
sbb
pop
int3
push
hlt
fsubrs
or
loope
inc
cmp
jno
push
icebp
sahf
inc
mov
jge
popa
fabs
mov
dec
imul
outsl
push
inc
xchg
lock
sbb
xchg
mov
xor
notb
aas
sub
cli
sbb
inc
out
popa
xor
ljmp
sbb
js
in
cltd
movsb
push
mov
and
outsl
push
cmp
gs
cmp
leave
add
mov
cmp
xchg
pop
xor
test
scas
clc
xchg
sub
test
or
sbb
insl
xchg
cld
sub
ljmp
stos
out
sbb
in
jno
in
and
ss
lcall
cmp
mov
xchg
fistps
sbb
cmp
add
arpl
movsb
out
std
call
sbb
adc
pushf
movsb
pop
xchg
in
lods
sti
mov
pop
or
dec
xchg
mov
rcrb
aaa
jbe
loop
mov
pop
or
lcall
testb
lret
lods
mov
or
frstor
leave
pop
aad
mov
pushl
jecxz
mov
jl
in
xchg
sbb
dec
jmp
push
test
in
push
inc
andb
movsl
push
and
sbb
inc
mov
or
jmp
shll
mov
or
or
adc
out
int
repz
jle
jmp
push
pop
jmp
pushf
je
inc
inc
fwait
mov
mov
and
jmp
pusha
sbb
xorl
add
lcall
imul
pop
scas
add
or
and
nop
and
decl
ds
jp
out
stc
iret
mov
xchg
mov
out
jg
shl
xor
add
cmc
jg
jmp
lods
into
cmp
mov
fmul
fs
push
ficoms
in
lret
push
ds
call
mov
sub
fadds
mov
and
daa
repnz
push
fcomip
into
fs
push
int3
ret
sub
push
mov
mov
push
jle
mov
lcall
sub
xlat
push
insb
cmp
out
push
daa
or
and
into
mov
fistpll
jmp
sub
insl
push
sbb
sub
sbb
mov
xor
inc
iret
cwtl
mov
stc
imull
fldt
mov
rclb
add
icebp
xorl
push
xchg
fstl
sub
fists
mov
mov
pop
nop
sub
cmpsb
outsl
push
mov
mov
hlt
jle
daa
add
sbb
je
mov
shlb
fdivrp
cli
nop
xchg
jne
test
xchg
xchg
stos
mov
arpl
fidivl
mov
mov
sahf
orb
adc
decl
daa
push
ficoms
bound
sub
repnz
data16
ljmp
mov
sarb
add
or
incl
push
adc
sbb
and
rcrl
xchg
inc
push
lock
sar
cmp
sub
adc
scas
mov
mov
loop
jne
push
dec
int
xorb
out
push
inc
rorb
cmpsl
xchg
stos
in
pop
and
enter
loop
dec
negl
rcrl
jmp
sub
cmp
jne
jge
sub
adc
and
mov
cli
lret
jbe
dec
into
dec
pusha
xor
mov
fdivrp
popf
add
insb
pop
hlt
fs
mov
mov
fmull
ret
lods
popf
inc
cli
mov
pop
adc
pop
xchg
fisttps
push
fidivrl
aas
ljmp
rcl
sar
or
cmpsb
mov
sub
ret
mov
lds
mov
dec
dec
pop
inc
sarl
mov
mov
stos
shl
lcall
sbb
push
lock
incl
mov
dec
call
xchg
into
xchg
add
sub
jmp
inc
or
in
sti
popa
jo
lock
mov
push
stos
ret
inc
pop
mov
lret
or
add
inc
addl
dec
neg
test
xor
aad
mov
daa
cmpsl
bound
fwait
andb
add
imull
pop
ljmp
cli
ljmp
lcall
or
add
xor
mov
movsb
fwait
decb
lock
loope
lret
mov
mov
jb
xchg
mov
fldl
jl
je
xchg
das
push
adc
loop
adc
add
mov
decl
test
pusha
popl
inc
lea
jmp
test
push
idivl
or
jmp
push
cmp
mov
in
leave
movsl
xchg
loopne
mov
inc
pop
mov
cmp
mov
cli
ljmp
hlt
aam
jne
inc
sub
mov
movsb
xchg
sbb
adc
cwtl
mov
mov
test
in
mov
out
inc
pop
xor
sub
and
xchg
incl
lahf
addr16
dec
cltd
pop
loope,pt
test
rcr
shll
jle
jb
cld
test
cmpsb
dec
xchg
add
cmp
fisttpll
test
lahf
lock
pop
adc
dec
stos
sub
daa
push
call
sbb
dec
pusha
std
scas
rcll
sbb
sar
mov
subl
movsl
notb
mov
ljmp
popf
push
out
in
lds
mov
cltd
clc
test
pop
cmp
test
lcall
push
sbb
cmp
jmp
or
neg
dec
rclb
jmp
xchg
mov
sbb
sbb
test
hlt
mov
mov
dec
fucomi
push
jp
adc
aad
pop
aad
andb
cmp
jmp
rcl
icebp
fstpl
inc
cmp
add
mov
fisttps
call
sbb
fstpl
sub
jbe
fbld
loopne
push
mov
push
xor
jcxz
mov
add
outsl
std
jae
push
ds
cmp
les
jg
xchg
cmpb
bound
les
daa
frstor
sub
xor
cwtl
out
jo
or
scas
dec
incl
sti
xor
pop
adc
push
push
mov
add
les
icebp
adc
incl
jno
add
stos
mov
dec
inc
clc
lahf
mov
notb
test
or
ds
mov
in
inc
movsb
mov
xchg
stos
cmp
inc
lcall
outsb
and
lcall
add
jp
sub
cmp
xor
mov
ret
inc
mov
cmp
jmp
sub
sbb
lret
daa
cmp
push
adc
iret
in
sub
out
clc
pop
hlt
pushf
sbb
aam
and
xchg
adc
cmp
ret
dec
jmp
fldl
dec
fisttpll
iret
cmpsl
std
cli
outsl
push
xor
in
pop
aad
push
decl
mov
dec
lret
dec
jmp
push
jb
stos
gs
lret
push
dec
adc
call
or
cmp
adc
insl
jge
cmpsb
xchg
inc
adc
jl
lret
sbb
and
inc
push
decl
dec
jge
inc
sub
fcmovnu
lret
scas
jmp
ljmp
loopne
ss
aam
sbb
and
and
add
cld
and
mov
mov
stos
nop
ss
jmp
xchg
nop
leave
sbbb
add
pop
xor
lcall
lock
ljmp
das
sbb
add
dec
sbb
pop
outsl
mov
call
or
insb
sbb
push
sbbb
out
or
dec
cmp
lret
clc
and
jmp
adc
mov
pop
in
lods
and
leave
dec
xor
pop
stc
push
jp
insb
push
lock
pushl
jno
cmp
outsb
fisubl
addr16
xor
enter
mov
repz
pop
mov
incl
pop
mov
gs
scas
mov
xchg
jmp
pop
insl
fs
scas
pop
jmp
je
inc
dec
lds
cmp
xor
out
push
gs
pop
jnp
stc
arpl
js
insb
int
stc
in
fsubl
mov
in
mov
fistpl
sbb
in
mulb
cltd
xchg
cmp
lcall
cmpsl
insb
repnz
xchg
mov
loopne
adc
jecxz
inc
dec
andl
pop
repnz
push
cmp
out
nop
incl
cld
jg
ss
inc
cmp
ret
jecxz
std
add
ljmp
enter
mov
jmp
or
aam
cmp
xlat
pop
add
ljmp
ss
cltd
fisttpl
and
lahf
cmpsl
push
fadd
pavgb
movsl
incl
outsb
pop
mov
inc
cmpsl
cmp
stos
mov
mov
dec
or
lcall
jmp
std
add
jmp
out
jne
pop
ficoml
jo
stos
add
xchg
shlb
sti
out
std
mov
cltd
addr16
imul
scas
mov
test
pop
mov
imul
xchg
in
mov
pop
movsb
sub
test
push
adc
ljmp
mov
into
sbb
dec
pop
xchg
adc
shlb
push
ds
scas
and
and
or
jmp
ret
out
lret
popa
or
les
outsb
leave
add
lret
shll
push
in
push
pushf
pop
jle
push
pop
jne
push
sbb
js
cli
mov
xchg
and
inc
mov
mov
xchg
in
or
cwtl
loope
and
clc
cld
and
inc
jl
cmp
shll
jmp
call
mov
adc
loopne
jg
lods
jecxz
add
loopne
cmpsb
rol
inc
pop
cmp
jmp
aas
xlat
and
cwtl
add
dec
notb
enter
testb
and
test
jmp
or
push
sbb
flds
adc
sbb
hlt
cld
aam
lea
lods
jg
ljmp
push
imul
add
xchg
push
out
cmc
movsb
fs
or
sbb
mov
cmp
fisttpl
add
iret
insb
jbe
int
and
pushl
xor
jno
nop
pop
sbb
or
fnsave
imul
fsts
inc
je
xor
lcall
dec
repnz
in
inc
xor
and
xor
and
adc
or
sbb
leave
negb
jae
mov
test
subl
jmp
lret
sahf
adc
decb
dec
inc
pop
int
fwait
scas
or
jne
mov
jmp
cmc
jno
leave
scas
mov
cmp
pushl
test
daa
shll
test
mov
mov
leave
movsl
pushf
xorl
adc
mov
call
int
cmp
loop
xorb
imul
call
jmp
dec
rorb
adc
das
dec
bound
jl
fldt
ja
je
push
je
xchg
cmpsl
or
inc
push
aaa
push
cmpsl
pushf
dec
pop
and
ds
aad
pushf
xchg
mov
cmp
inc
sub
jmp
pop
inc
add
adc
insl
sbbl
mov
mov
fcomip
call
daa
mov
mov
add
mov
ffreep
jge
call
pop
push
mov
cld
pop
pop
or
repnz
ljmp
xor
pop
inc
aaa
outsb
negb
paddb
pusha
adc
adc
dec
mov
scas
jno
dec
les
std
adc
loopne
call
xchg
lcall
push
adc
dec
or
out
sub
jmp
pop
pushf
xor
push
xchg
rol
pop
mov
test
ficomps
jecxz
cmc
push
cmp
fwait
pop
rcrb
inc
testl
das
adc
sub
lcall
mov
push
pusha
push
call
out
dec
xchg
sahf
mov
andl
jg
mov
shr
push
inc
lea
pop
testb
out
adc
rorl
xor
mov
pop
out
fiaddl
shr
xor
icebp
cmpsb
jmp
sub
or
push
pop
push
mov
mov
movsl
addr16
test
add
mov
idivl
out
jecxz
xchg
loopne
std
call
cmp
push
notb
and
xor
out
xchg
sbb
add
aad
lods
xchg
insb
in
addr16
call
mov
lds
sub
js
aam
add
stos
insb
dec
mov
mov
sbb
mov
rcr
test
call
pop
incl
mov
jmp
lock
scas
mov
push
stos
inc
icebp
aaa
xchg
xlat
clc
shlb
leave
sub
xchg
clc
mov
lds
lret
test
orl
imul
xor
jle
push
bswap
adc
mov
pop
mov
jl
sub
pop
mov
adc
inc
adc
pushl
ja
jae
push
adc
mov
call
xor
movaps
mov
fsubrs
aas
mov
push
pop
xor
xor
test
cld
jge
mov
and
inc
call
imul
mov
mov
jne
add
outsb
jae
mov
ljmp
dec
std
adc
adc
nop
push
or
call
lods
adc
sbb
inc
test
popa
repz
xchg
stc
fstl
outsl
pop
pop
decl
dec
lcall
addl
rol
push
cwtl
aam
inc
popf
pop
push
mov
add
es
mov
add
idiv
xchg
rorl
push
dec
cmp
and
call
fmuls
add
int
xchg
in
pushf
test
lods
mov
jno
sahf
pop
jns
xchg
mov
aad
mov
inc
mov
les
cmc
lods
mull
sahf
aad
lcall
enter
pop
dec
push
jge
cwtl
or
xor
xchg
ds
jg
hlt
xor
scas
mov
mov
jecxz
repnz
add
incl
sbb
orl
mov
inc
mov
push
stos
cmp
mov
mov
mov
mov
out
pop
cmpsb
cmp
into
lds
enter
rsm
scas
loop
pop
stos
pop
lock
push
inc
hlt
sti
push
and
pop
enter
inc
push
jp
iret
jnp
shll
out
sti
jbe
int3
or
or
jle
ljmp
subb
cmp
out
cmpsl
sahf
xchg
idivb
mov
roll
jb
popf
and
decl
lds
push
js
xor
das
adcb
or
pop
dec
clc
test
popa
rclb
fcompl
sub
mov
fmuls
rclb
xchg
mov
shlb
inc
bound
add
cmpsb
cmp
mov
push
outsb
imul
clc
fcos
ljmp
out
divb
xchg
cs
inc
stos
fldt
mov
aam
out
jo
inc
std
jbe
fmul
cmp
ret
mov
sbb
pop
xchg
cli
popf
dec
shrb
push
jae
push
les
jmp
call
js
outsl
add
mov
dec
inc
cmp
loop,pn
fsub
jbe
arpl
dec
and
test
dec
or
lock
rorl
jne
push
mov
enter
cmp
idivb
addr16
cmp
mov
movups
int
xchg
add
pop
mov
inc
leave
ljmp
mov
push
add
add
lea
or
sbb
call
xchg
add
push
outsl
push
xchg
out
pop
push
adc
jae
xor
sti
xor
jge
mov
js
jl
icebp
sub
sahf
shrl
xchg
into
jp
jae
scas
in
xchg
add
pushl
psubq
sahf
sbb
mov
pop
ret
ss
push
pavgw
sub
repnz
pop
jo
cld
pushl
adc
mov
test
outsb
mov
lcall
ffree
dec
incl
cmp
and
iret
fs
shl
dec
imulb
call
aas
cmpsl
imul
cli
cs
cld
aas
xor
sbb
adc
and
mov
inc
dec
mov
mov
call
or
shrl
fucomi
jp
ret
dec
sub
jno
cld
pcmpgtw
call
fcomip
mov
adc
cs
loope
in
xchg
fimull
ret
clc
mov
cmc
lea
xor
mov
sub
insl
inc
or
mov
mov
lcall
and
fiaddl
push
cmp
out
sbb
incl
sbb
hlt
add
dec
inc
or
fs
cmpsb
in
call
inc
xchg
push
adc
jo
pop
fidivl
pushw
mov
push
pop
pop
pop
popa
pop
mov
jmp
cld
popf
sub
push
int3
dec
xor
inc
out
or
mov
lds
mov
pushl
xor
cltd
popa
cmp
arpl
lock
cli
mov
xor
or
pusha
sbb
adc
xor
enter
test
popa
push
call
push
das
in
pop
xor
xlat
js
or
ja
cmova
pop
push
test
loop
add
dec
dec
stos
pop
in
ficoml
fs
xchg
repnz
call
mov
push
cmp
negl
bound
add
rol
lahf
pop
sbb
jmp
mov
test
push
dec
mov
inc
cmpsb
shrb
adc
sbbl
cld
adc
out
jmp
cmc
xor
imul
jmp
jmp
in
push
sbbb
pop
jns
dec
in
sbb
lcall
mov
es
or
fdivs
mov
xchg
jae
push
cmp
decl
mov
push
pop
test
push
sahf
std
in
push
stc
in
push
fisttpl
jmp
pop
insb
mov
stos
mov
push
or
test
dec
xor
cwtl
push
shlb
adc
sbb
inc
cmpsl
loop
shr
mov
pop
inc
outsb
cwtl
jo
cmc
fildl
icebp
clc
mov
cli
out
fdivr
cmp
insb
mov
das
or
cs
imul
pop
cmc
imul
fiadds
movsl
adc
xor
pushl
repnz
inc
xchg
cmp
clc
and
outsl
jmp
xchg
stos
decl
pushl
mov
sub
mov
xchg
clc
add
pop
pop
adc
xchg
popf
jnp
int3
adc
std
call
ljmp
mov
fimuls
pop
cmp
add
mov
inc
rorb
test
ret
inc
cmp
pop
subb
outsl
mov
movsb
aaa
mov
cmc
mov
int
aad
sbb
mov
push
ljmp
ja
fs
and
sti
xlat
rcll
pop
pusha
xor
pop
jns
mov
pop
in
lods
test
push
out
data16
xchg
decl
mov
negb
incl
ret
clc
movhps
insl
xlat
mov
lcall
into
mov
xchg
add
outsb
dec
jl
aas
xchg
fisubrs
xchg
or
sub
jmp
int3
jae
inc
out
insb
or
sbb
lahf
arpl
cld
jmp
ss
daa
popl
cmp
test
mov
dec
dec
mov
incl
dec
punpckldq
sarb
xchg
xor
cmp
jl
sbbb
lcall
ret
and
pop
fmuls
out
and
enter
loope
arpl
cld
decl
lds
push
in
inc
aam
cmp
insl
jno
push
loopne
inc
scas
nop
inc
inc
imul
sub
push
pusha
xlat
xchg
cmpsl
mov
into
popf
lods
sub
mov
adc
addr16
hlt
lcall
in
jg
test
nop
add
outsl
jo
jge
test
xchg
pushf
sar
call
mov
mov
xor
mov
jne
and
scas
adc
inc
adc
pushl
pop
call
lea
cmp
lcall
mov
das
push
hlt
mov
popf
xchg
mov
sti
mov
push
sar
inc
jg
pop
nop
jg
fcomps
mov
in
jne
scas
orl
fistl
pushl
rcll
lret
add
inc
xchg
aam
or
repz
mov
fdivrl
aad
jno
incl
daa
popf
outsl
nop
xchg
mov
cmpsl
ss
mov
fldcw
ja
adc
inc
pop
rcll
dec
jnp
mov
rclb
or
add
jmp
cltd
sub
xchg
fldcw
or
scas
cmpb
cmp
shl
mov
cmp
out
or
lahf
pop
fcomip
jmp
mov
test
mov
movsl
xchg
movsb
outsb
xchg
cmp
xor
inc
inc
decl
fsubrp
mov
xorb
xchg
adc
cld
cli
xor
xchg
sub
dec
add
repnz
mov
flds
mov
sbb
cs
jne
sarb
decl
or
inc
sbb
lcall
cltd
jo
inc
lock
inc
mov
ljmp
xchg
aaa
gs
cmp
sbb
inc
movsl
mov
and
lds
jmp
imul
pop
sbb
xchg
in
repz
xchg
lcall
jbe
sub
ror
mov
add
sti
mov
mov
and
mov
add
adc
idiv
mov
lcall
int3
or
dec
or
stos
clc
or
cltd
call
rcll
jmp
jb
movsb
adc
into
sub
lds
mov
fcomip
dec
sub
fwait
test
iret
cli
js
mov
jmp
ja
mov
add
out
cli
icebp
xchg
or
add
xor
lret
mov
out
repnz
dec
mov
xor
mov
mov
xor
cld
pop
stos
add
mov
push
push
sarl
rcl
mov
sbb
mov
movsl
sub
ljmp
inc
and
sbb
aad
sbb
sub
mov
jmp
std
xchg
xchg
or
sti
push
cmp
sub
mov
lahf
dec
rcrl
fistl
jo
adc
js
fldt
out
or
push
and
movsl
sub
sar
incl
inc
cmp
mov
dec
fcomip
clc
push
ljmp
dec
scas
icebp
jbe
push
xchg
incl
jl
outsb
mov
stos
in
push
imulb
aaa
mov
imul
movsl
dec
pop
mov
mov
push
xchg
or
faddl
dec
mov
sub
sbb
ljmp
popf
out
push
jae
mov
pop
out
clc
decl
enter
push
dec
push
pop
adc
iret
add
ret
cmp
mov
sub
call
jle
adc
xchg
mov
sbb
xor
loope
inc
lcall
cmp
cltd
jp
sar
ljmp
push
push
orb
rorb
mov
insl
mov
std
xor
sti
pop
addr16
gs
cs
inc
xadd
jg
adc
xchg
mov
cwtl
push
sub
cmp
add
sahf
scas
and
cli
mov
in
xchg
imul
fwait
lahf
xor
out
jp
leave
ja
pushl
pop
xlat
sub
add
adc
push
xchg
inc
inc
sti
imul
test
cmp
mov
rcrl
dec
lods
out
sub
mov
xor
mov
adcl
and
jmp
popf
call
lods
pop
cmp
jne
adc
push
jb
sub
shl
or
dec
mov
out
push
lret
das
jno
call
scas
aam
call
scas
mov
fsub
dec
popa
sub
pushf
mov
adc
add
lret
pop
mov
pop
cmc
decl
jmp
popf
adc
movsl
rcrb
outsb
mull
cmp
std
lcall
in
jno
pusha
mov
shl
add
dec
sbb
lcall
sbb
fbstp
pop
js
sub
js
push
repnz
mov
int
cmp
ljmp
aad
or
pop
sub
push
fsubrs
mull
cmp
stos
pop
mov
mov
ror
ret
jle
jne
dec
inc
test
sub
stos
fxch
sub
xchg
push
in
call
leave
jb
fcompl
and
aas
mov
push
push
nop
and
fcomi
jl
sub
cld
jno
lcall
dec
cmp
mov
ja
ds
aaa
insl
inc
lods
dec
push
lret
push
out
push
jns
test
sar
decl
adc
sub
ret
shl
mov
fdivl
lds
mov
out
xor
aad
arpl
cltd
push
push
push
cmc
dec
xchg
xor
sbb
aam
ljmp
lock
jno
mov
fcmovnb
cmp
xorb
pop
add
cmp
js
add
fnstsw
jmp
sub
test
inc
mov
pushl
xchg
inc
or
cmp
and
enter
filds
cmc
jge
pop
ret
xchg
aaa
pop
add
jmp
xchg
jmp
jnp
ficoms
mov
subb
stos
mov
push
sub
xor
fldcw
sbb
test
xchg
rorb
rorb
mov
jle
push
stos
xchg
call
push
jnp
ljmp
cli
add
test
mov
xor
ret
fdivl
popa
pushl
or
lock
inc
dec
in
jb
mov
adc
push
add
shll
call
push
cmpsb
ss
scas
lds
data16
pop
int3
sbbl
jo
push
inc
ret
cmp
pop
lcall
decl
add
pop
dec
push
rcll
fsubs
je
adc
ljmp
cmp
cmpsb
adc
or
xor
ds
and
mov
in
mov
test
jb
mov
cmpsl
cli
lods
mov
and
sub
incl
mov
nop
pushl
mov
and
imul
cli
mov
mov
iret
cmp
pop
push
scas
out
sub
mov
inc
iret
xor
loop
push
jnp
mov
mov
hlt
data16
sub
loop
iret
arpl
xor
or
outsb
movsb
jmp
mov
cmpsb
repnz
aas
insb
or
in
leave
ss
and
bound
and
sar
ljmp
call
cmpsb
aam
cmp
icebp
or
jge
fdivl
mov
jg
in
repnz
enter
lds
out
stc
jnp
jg
lcall
ljmp
sub
shlb
adcb
or
jne
movsb
push
dec
jg
test
pop
mov
push
cmpsb
mov
or
jns
cmpl
sti
stc
sarb
mov
out
adcl
xchg
cmpsb
and
fwait
mov
mov
lods
jg
cmpsb
sti
xor
inc
ficoms
pop
ljmp
pop
in
daa
dec
xlat
xor
test
mov
cmp
sbb
jno
xor
imul
cmpsl
aas
es
cmp
fld
lcall
dec
sub
cmpsb
shrl
enter
lods
repnz
adc
ljmp
stc
movsl
dec
cmp
dec
test
pop
fdivr
popa
xor
std
dec
jg
pop
mov
ret
mov
xchg
sub
movsb
lock
push
sub
jne
test
xchg
daa
gs
dec
sbb
xchg
cmc
scas
popf
and
and
pop
push
sahf
or
in
jmp
sub
and
add
cmp
mov
shlb
jbe
sbb
movsb
cli
cmp
incl
ffreep
xchg
and
popa
or
out
movb
sbb
jmp
das
push
xlat
add
cld
cmp
cmp
dec
sub
and
jmp
ljmp
movsb
fwait
sbb
cwtl
pop
xor
adc
test
sti
ret
outsb
orl
cmp
mov
aas
pop
mov
push
rorb
out
loope
mov
xor
lcall
sub
push
rclb
adc
je
adc
test
mov
cmp
xor
cmc
cld
sbbl
mov
mov
call
mov
shlb
mov
loopne
sbb
mov
std
mov
insb
clc
dec
mov
push
push
in
insl
mov
adc
pop
outsb
sbb
movsb
bnd
xchg
aaa
push
ss
adc
xchg
mov
add
jge
icebp
sub
mov
sbb
push
inc
syscall
out
inc
cmp
cmp
icebp
test
adc
pop
test
in
jge
sub
mov
js
fdivrl
lods
adcl
je
mov
pop
and
repnz
pusha
mov
xchg
push
outsl
fwait
mov
cmp
mov
incl
mov
sub
xchg
js
das
xchg
rcrl
call
adc
scas
dec
push
pshufw
nop
aas
push
pop
mov
mov
fcmovb
cmpsl
sub
cmp
jmp
loopne
or
mov
push
jo
add
push
push
sbb
mov
aas
lret
sbb
or
dec
lahf
lret
sub
lods
out
je
aas
push
xor
das
ds
jp
fsubp
leave
sarl
ljmp
ss
sbb
inc
ljmp
adc
jge
pop
pop
mov
mov
mov
jg
ljmp
sub
and
sub
pop
xor
xchg
add
dec
fnsave
xor
idiv
sbb
sti
lahf
push
in
ret
lock
inc
movsl
daa
adc
scas
mov
adc
jns
lcall
sahf
int3
iret
aam
xchg
ljmp
jo
std
leave
sub
jg
push
sahf
iret
es
mov
cltd
xor
xchg
mov
stos
xchg
popa
dec
shlb
pusha
test
pop
mov
in
test
enter
outsl
xchg
test
cmp
pop
out
js
stc
ret
push
call
lods
adc
sbb
data16
inc
xor
js
aas
pop
imul
cwtl
xchg
sbb
jnp
inc
clc
call
cld
lods
mov
into
dec
jecxz
and
subb
sub
lock
ljmp
mov
fisttps
sub
inc
or
jle
xchg
daa
dec
addb
sbb
fcomip
ljmp
scas
mov
lahf
add
addr16
icebp
rorb
lret
cltd
call
pop
lahf
subl
cmpsl
xor
dec
push
push
sahf
out
jae
sbb
mov
or
cli
frstor
sub
push
jo
mov
shlb
ljmp
shrb
push
and
out
cmp
pop
push
rorl
fdivs
xchg
les
jo
sub
fsts
incl
xor
int
aas
in
sbb
inc
sbb
dec
daa
subl
cld
imul
jmp
jno
and
into
bound
lret
out
xchg
mov
ds
sub
out
ss
dec
ds
or
out
stc
add
lock
incl
cld
lcall
pop
mov
sub
enter
aad
mov
gs
pop
inc
scas
sahf
jecxz
xor
stos
loop
mov
adc
mov
mov
mov
imul
pop
aad
jae
adc
rcpps
decl
sbb
loopne
sbb
sub
mov
shrb
mov
push
xor
inc
mov
scas
jbe
and
jbe
xchg
add
or
sbb
jge
lock
mov
pop
stos
pop
pop
movsb
js
popf
xor
cwtl
clc
xor
xchg
xchg
or
ljmp
jo
mov
stos
fiadds
aaa
xchg
adc
pop
push
imul
fstpt
lahf
mov
xor
ret
fldcw
fbstp
lret
jg
decl
pop
fwait
loope
cli
cmpsl
dec
and
mov
mov
shlb
popl
jmp
pop
push
mov
mov
in
sbb
cmp
loop
xor
rolb
out
sub
jg
incl
repz
lods
mov
push
test
cmp
and
fstpl
dec
maskmovq
testl
mov
cmp
adc
mov
sahf
xor
mov
cmp
sub
lcall
pop
into
push
xorl
jns
decb
cmp
sbb
mov
jge
cli
ja
mov
incl
fidivl
testl
pop
gs
cmp
adc
or
call
loopne
jmp
add
stos
add
mov
cltd
andl
lahf
adc
cwtl
arpl
out
insl
pop
ret
add
cli
or
imul
in
rolb
icebp
cmp
insb
stos
pushl
mov
or
mov
dec
and
incl
shll
es
divl
ret
aam
inc
js
mov
mov
cmp
xchg
arpl
int
push
stos
inc
ret
ficoms
and
mov
xor
xor
mov
hlt
aas
pushw
pop
xchg
sub
ds
dec
sub
mov
inc
adc
jmp
pushl
add
jg
imul
fistpll
enter
xlat
test
pop
cmpsl
sahf
outsb
jmp
dec
jbe
dec
or
cli
fs
adc
mov
jecxz
mov
push
insb
jmp
jmp
pop
iret
inc
mov
shr
pop
jge
daa
pop
popa
push
or
mov
pushl
dec
stos
lret
push
in
cld
push
lock
out
sbbb
xchg
jbe
pop
data16
pop
clc
push
outsl
cli
xchg
pop
stos
imul
jge
or
insb
daa
sbb
mov
jmp
imul
mov
add
addr16
xor
and
xchg
xchg
xchg
mov
push
lret
xchg
xor
jge
jb
adc
or
and
jns
or
mov
je
cmp
test
push
mov
inc
fwait
cs
mov
cld
xchg
inc
out
out
xchg
mov
iret
inc
and
stos
hlt
in
mov
sahf
adc
out
mov
loopne
jle
sub
xor
jl
dec
rorb
jge
jecxz
jl
push
cmp
call
insl
hlt
orl
jp
ja
js
inc
movsl
frstor
cltd
ret
inc
pop
xchg
decl
push
ljmp
ss
or
inc
jge
or
fisubl
push
hlt
mulb
lcall
jp
xor
adcl
jecxz
sbb
movsl
cltd
add
push
pop
cmp
and
jnp
out
push
mov
shll
jo
fidivrs
ret
ljmp
jmp
pop
fs
pop
push
pop
mov
mov
mov
jbe
shr
add
incl
shl
stos
and
sti
dec
arpl
jo
sbb
adc
shll
les
and
jg
fadds
mov
test
lahf
mov
mov
adc
sbb
mov
ljmp
or
xchg
shlb
adc
inc
or
loopne
pop
xor
pop
jbe
cwtl
or
cli
xlat
mov
xchg
pop
push
roll
leave
pop
push
jp
and
js
bound
push
incl
mov
dec
and
scas
sbb
addr16
clc
cmp
pop
mov
xchg
mov
and
scas
pop
cmpsl
push
add
pop
je
incl
dec
out
fsubrp
test
repnz
jnp
aaa
or
rcll
lret
xor
lcall
ds
lods
sub
notb
mov
inc
pop
divl
scas
stc
test
mov
sub
pushl
push
mov
mov
rcrb
out
imul
fmuls
mov
lret
or
adc
ljmp
sbb
mov
repz
add
xor
add
ljmp
test
and
sub
mov
mov
push
mov
push
cld
bnd
or
popa
data16
sar
or
push
fistpll
jo
jb
test
mov
adc
call
sub
jne
or
push
adc
pop
scas
fisubl
lcall
hlt
adc
insb
popa
sbb
push
inc
inc
data16
inc
inc
xchg
lds
sbb
jp
cmc
adc
pusha
lds
mov
repnz
xchg
dec
pop
mov
rcrl
lods
inc
xchg
ss
jns
fs
inc
push
mov
inc
sbb
add
rcrl
xor
ja
fidivrl
mov
lods
decl
ss
push
mov
mov
push
jbe
mov
cmp
into
or
pop
jmp
adc
sub
stos
sub
jbe
cmp
test
adc
add
inc
test
fadd
xchg
ret
push
bound
lcall
stos
jmp
std
call
pop
imull
inc
or
push
xchg
sub
jl
mov
cld
scas
add
outsl
cmp
mov
mov
push
imul
lret
ljmp
add
or
lcall
jbe
inc
repz
mov
je
sub
nop
loope
jo
dec
imul
mov
icebp
mov
fs
mov
and
sbb
incl
fcompl
sbb
sub
inc
ljmp
jp
dec
jmp
dec
mov
or
in
daa
addb
mov
cld
sbb
jmp
lds
icebp
stc
xchg
das
int3
adc
push
je
pop
xor
jns
or
cmp
sar
push
or
cmp
pushf
outsl
rorl
mov
cs
dec
or
adc
jo
mov
adc
cmpl
mov
aam
jp
ljmp
cli
pushl
pop
pop
cmpsl
mov
movsl
ds
out
push
and
mov
cmp
jmp
gs
icebp
pop
xchg
fidivs
sub
lret
inc
sar
lcall
mov
jne
stos
shlb
jno
xchg
add
daa
insb
sahf
test
jp
push
jnp
push
call
pop
dec
xor
xchg
fmuls
pop
dec
mov
in
inc
sub
sbb
loop
mov
aad
sbb
idiv
mov
jmp
cmp
xor
jns
outsb
lods
cmp
ljmp
xchg
rol
xor
jo
jae
rcll
mov
jp
call
mov
decl
sub
dec
adc
push
lcall
cs
inc
imul
ja
mov
or
addr16
mov
cmpsl
xchg
push
adc
inc
cli
mov
cli
pop
cwtl
jne,pt
movsl
xchg
jno
inc
dec
in
je
add
xchg
out
ds
ljmp
cli
sbb
mov
out
xchg
loopne
mov
inc
in
sbb
or
dec
sbb
fcompl
lds
pop
mov
push
ds
pop
dec
loopne
mov
out
mov
call
cmpsl
and
jmp
fisubrl
jae
sbb
dec
sbb
pushl
ljmp
scas
mov
mov
call
mov
push
add
popa
scas
stos
dec
pop
loop
test
sub
dec
ret
dec
pmaxub
incl
imul
pop
adc
add
adc
add
mov
mov
mov
lahf
mov
enter
out
clc
xchg
sub
lahf
nop
jp
inc
test
into
adc
lea
fsubrs
adc
aad
dec
jmp
imul
push
mov
xchg
lcall
es
loop
dec
xlat
sbb
push
addl
lcall
imul
stos
pop
fsubl
inc
nop
inc
fimull
sub
fimull
xor
adc
pop
fwait
jns
push
dec
fwait
adc
fst
stc
xchg
xchg
and
cmp
jno
and
orl
mov
jae
or
jg
mov
fcompl
cvtdq2ps
jno
mov
les
mov
mov
incl
sub
mov
xor
push
mov
push
test
shl
sbb
dec
mov
pushl
xorb
pushf
mov
out
stos
pop
cli
cli
ss
lcall
xor
stos
std
mov
add
adcb
icebp
and
jl
call
fldt
xorb
lcall
jmp
push
inc
sbbl
pop
inc
push
sub
xchg
push
dec
cmp
cmpsb
mov
xor
mov
repnz
sbb
sub
lret
inc
pushl
or
insl
cltd
cs
cmp
ljmp
inc
fs
shlb
cltd
das
mov
sar
lock
jnp
fiaddl
cmpb
imul
fmull
incl
lea
xchg
enter
add
jge
into
and
in
incl
iret
cmc
sbb
mov
lea
xchg
bound
xor
push
jle
js
test
adc
jbe
in
loopne
mov
data16
pusha
lea
mov
in
outsb
mov
lea
popa
push
out
clc
adc
movsb
xchg
loop
jp
pop
sub
mov
lcall
lahf
hlt
insb
jb
bound
xor
ljmp
adc
imul
xlat
mov
adc
pop
push
mov
mov
adc
add
mov
stos
mov
mov
movsl
jp
push
jae
into
fwait
pushl
and
fdivl
out
mov
fcomi
inc
scas
mov
mov
das
in
and
in
lcall
adc
fs
pop
sahf
call
mov
inc
scas
fisubrs
lea
scas
mov
imul
xchg
loopne
out
cmp
and
pop
imul
push
sub
sbb
mov
adc
sub
jg
jbe
or
and
idivb
hlt
cwtl
je
push
aas
lock
fimull
aam
jl
test
push
scas
mov
ljmp
fcompl
or
in
pushf
aaa
hlt
sarb
aas
mov
fisubrs
jmp
and
push
add
popl
in
push
fwait
cmp
out
sar
pop
adc
pop
int3
mov
out
jo
inc
in
and
call
jae
addr16
into
jo
aaa
imul
scas
das
mov
pop
inc
cmp
jbe
into
mov
mov
push
xchg
adc
fldl
jp
dec
out
cmpsb
imul
sub
jmp
push
es
add
or
and
out
xchg
std
cmc
jg
rcr
jno
in
sbb
decl
lock
in
dec
stos
add
addr16
cmpsl
outsb
in
xchg
jne
and
jmp
sub
bnd
pusha
loope
adc
jmp
and
repz
sub
mov
inc
sbb
sahf
sbb
jb
sar
mov
ja
mov
popa
or
xor
cmp
cmpl
ret
and
dec
mov
jne
movsl
add
jnp
loope
jmp
mov
push
imul
daa
incl
mov
cmp
lea
test
inc
add
or
ds
inc
lcall
jns
lahf
lahf
test
xor
pop
leave
jg
test
or
ljmp
loopne
dec
leave
clc
jecxz
imul
cwtl
lret
cmp
punpckhdq
jmp
lcall
and
shr
fisubrs
mov
add
jns
popf
into
xchg
push
dec
xor
jmp
inc
imul
testb
xchg
pusha
fimuls
xor
js
stos
mov
push
call
sti
lods
add
cmp
push
push
or
inc
daa
and
jne
into
or
jne
xlat
dec
in
pop
lods
fistl
cmp
sub
pop
mov
mov
jg
repz
aaa
ret
mov
jae
mov
dec
shl
std
stos
xchg
outsb
push
cmp
and
sahf
fldcw
incl
cmp
push
pop
push
sub
push
cltd
ficomps
fidivrl
scas
and
in
adcb
popa
push
jecxz
cmc
pop
or
push
jno
push
and
dec
xlat
arpl
cmpsl
imul
or
sub
pushf
jecxz
add
xor
mov
popf
mov
cmpsb
inc
in
cltd
pusha
popa
jnp
add
inc
mov
hlt
xlat
das
xchg
mov
fidivl
sub
cli
mov
push
cwtl
ds
sbb
les
mov
decl
mov
sbb
fisubrl
mov
int
and
push
imulb
adc
ja
vcvttsd2si
jge
call
int
clc
mov
sub
mov
mov
and
push
mov
decl
adc
enter
test
not
xor
inc
mov
xor
sub
mov
or
or
and
aaa
or
out
push
push
negb
in
cmovp
scas
clc
pop
or
or
or
dec
xchg
ljmp
mov
cmp
shlb
or
ret
mov
pop
sub
jmp
sbb
iret
jnp
mov
jae
xchg
inc
sbb
sub
mov
dec
inc
test
sub
mov
mov
adc
out
test
and
mov
jb
mov
push
or
insl
lods
fcmovnu
mov
pop
adc
sub
inc
sub
incl
lea
call
xchg
cli
test
xor
test
lock
or
in
stc
jp
js
push
jo
ljmp
mov
addb
add
call
rcll
lcall
lods
lock
clc
add
lods
clc
cmp
ret
stos
and
ret
add
inc
push
dec
pushl
dec
xchg
xchg
out
xor
sti
imul
ja
push
push
fcomps
test
xchg
dec
loop
test
andl
and
inc
jne
enter
xorb
mov
pop
jmp
pop
cli
mov
ss
into
mov
out
sbb
pop
int3
test
dec
and
adc
jnp
ds
mov
push
add
adc
outsb
lcall
sahf
push
dec
jg
inc
push
xchg
jmp
cli
mov
fmull
call
jmp
add
in
aad
pop
das
inc
cmp
ljmp
adc
pop
sarl
sbb
cli
pop
xor
mov
lcall
add
leave
mov
frstor
ja
ficompl
cs
mov
ljmp
pop
sbb
cwtl
mov
mov
hlt
lock
fwait
lahf
push
in
add
mov
and
fidivrs
stc
xchg
add
lea
jae
xchg
inc
divb
call
adc
pop
or
je
hlt
add
iret
pop
gs
and
inc
gs
add
pushl
xchg
push
or
test
clc
pushl
inc
mov
adc
sarl
mov
push
es
mov
js
insl
and
sub
repnz
faddl
inc
outsb
push
shr
scas
mov
add
mov
push
jp
jae
lahf
sahf
cmc
in
inc
and
loop
incl
mov
jns
sarb
in
dec
push
les
cmp
add
rcll
mov
push
in
dec
jno
sbb
ljmp
pushl
bound
xchg
pop
push
push
xchg
push
out
cmp
pop
movsb
sbb
loope
icebp
lea
mov
jl
jnp
and
xchg
dec
sbb
mov
inc
jle
jo
and
fs
xchg
lcall
push
push
jbe
hlt
mov
adc
pmulhuw
js
out
or
sub
in
pop
std
adc
jns
xor
ds
mov
mov
rorl
mov
cmp
jg
call
add
mov
cmp
push
push
fidivrs
and
pop
jmp
aaa
push
int
nop
mov
mov
out
ljmp
mov
shl
movsl
fmuls
call
imul
adc
repnz
mov
inc
in
fwait
mov
or
inc
mov
add
push
dec
lods
adc
push
pop
jns
lods
adc
dec
notb
cmp
push
pop
cli
fucom
sbbb
mov
add
xchg
pop
dec
sub
xchg
or
mov
dec
scas
mov
int
add
loop
daa
ficoml
jae
sub
lock
add
cs
cmp
ljmp
xor
lods
test
fsub
icebp
stos
mov
rcll
in
sub
pushl
cld
out
dec
xor
jle
adc
inc
jns
mov
add
or
inc
mov
decl
mov
fwait
addr16
mov
je
jmp
clc
clc
sbbl
mov
mov
out
cli
daa
test
out
insb
fdivrs
out
pusha
sbb
pop
ret
out
es
inc
lock
xchg
shll
inc
scas
lods
enter
mov
adc
mov
mov
aam
push
fidivl
bound
push
fsubrs
ljmp
sbb
jecxz
aas
testb
jae
cmp
add
fdivs
cs
push
cmpsl
test
jge
lock
mov
pop
clc
adc
pop
test
andl
jg
lock
add
xor
in
mov
sar
lods
or
push
mov
test
test
idiv
jmp
out
or
push
cmp
dec
clc
inc
arpl
cmpsl
dec
xorl
aas
push
push
sbb
in
and
stos
inc
aas
fdivrl
in
loop
jg
cmpsl
rorl
data16
ljmp
shrb
roll
int
adc
push
inc
push
jp
xchg
sub
std
decl
jns
xor
into
and
mov
cmp
pop
push
jo
in
repz
push
decl
or
xor
mov
or
pop
test
adc
pop
xchg
popf
bound
out
mov
sub
movsl
jecxz
call
das
lret
sub
xchg
inc
inc
xor
mov
pusha
hlt
dec
decl
ss
dec
inc
jge
sub
mov
das
pop
aaa
xchg
rcrb
adc
cs
dec
inc
mov
insl
and
pusha
aas
cwtl
mov
imul
mov
cmp
sbb
rorb
dec
xlat
fisubrl
add
mov
lcall
nop
adc
mov
sbb
pushf
jge
sbb
insb
push
adc
sbbl
mov
in
cmp
aaa
cmpsl
jo
icebp
push
lcall
cmp
ljmp
repz
lret
andb
xlat
mov
jecxz
push
mov
out
cmp
aas
cmp
mov
xchg
mov
pop
pop
xor
inc
jmp
fwait
loope
outsb
dec
ds
lret
jo
test
incl
adc
mov
jne
dec
mov
dec
jle
pop
push
nop
aad
scas
mov
stos
jg
sbb
adc
scas
or
pop
ja
in
jle
dec
xor
arpl
pop
dec
sub
sbbl
stos
mov
imul
jmp
pop
out
loop
adc
push
lock
sub
hlt
inc
xchg
xor
sbb
iret
and
out
jae
out
sti
pushf
pop
lods
dec
pop
cmp
fdivl
jl
ljmp
fsubp
mov
js
aad
imul
fsubrs
ljmp
shll
fwait
adc
push
cmpsl
decb
cli
mov
incl
repnz
push
cs
repnz
jp
lahf
or
cwtl
mov
lret
movsl
in
cmc
sbb
lahf
jo
xchg
jmp
lock
into
jbe
cmp
mov
xchg
decl
cmpsl
xor
xlat
aad
das
add
mov
fstl
pusha
addl
lods
xchg
icebp
ljmp
test
push
out
sarb
add
mov
loope
jno
pop
scas
add
js
xchg
adc
sbbl
daa
mov
adc
mov
inc
dec
jp
mov
or
divl
incl
ja
sub
xlat
mull
add
push
mov
mov
imul
sbb
jb
jns
das
pop
cmp
mov
hlt
mov
or
pop
or
cmpsb
mov
jg
or
jg
xor
cld
les
cli
imul
inc
cmp
out
lods
jnp
lea
mov
sbb
cs
cmpsb
push
out
bound
xor
jecxz
push
mov
sub
aas
ret
xlat
mov
sar
fwait
cmc
pushl
sbb
testb
aas
out
sub
mov
stc
ja
test
fbstp
mov
jae
add
inc
fisttpl
dec
jecxz
lret
and
decl
sarl
lret
xchg
ss
pop
ret
ds
test
mov
fwait
out
sbb
out
push
lcall
mov
dec
push
and
push
outsb
sub
ja
sub
and
out
fnstsw
sub
pushl
lcall
xor
mov
inc
jg
sub
pop
loop
hlt
and
lods
pop
cld
adc
inc
dec
jle
inc
aas
addr16
fldl
call
aaa
cmp
inc
xlat
mov
push
into
mov
mov
popa
dec
mov
cmpl
decl
call
sar
adc
int3
lods
cli
out
push
adc
xchg
lcall
jno
ds
pushl
cmpl
xchg
fiadds
xlat
cmc
push
cltd
cld
pop
fwait
adcb
movsb
ljmp
shrb
and
xchg
test
insb
fs
sub
fildll
lea
aaa
jl
and
dec
jo
lret
mov
decl
stc
jne
sbb
xor
hlt
rcrb
shrb
aad
xchg
ljmp
jge
mov
outsb
dec
ja
iret
sub
add
repnz
incl
mov
xor
mov
pop
cmp
lret
xchg
sarl
lea
xchg
cmpl
pushl
add
jg
lds
xchg
cwtl
das
adc
jbe
inc
leave
scas
into
jg
pop
test
jg
add
andl
pop
mov
popf
lds
push
mov
xchg
nop
outsl
xchg
faddl
movsb
in
and
cmp
aaa
fbld
inc
sti
push
add
pop
icebp
jo
jecxz
push
add
jmp
decl
pop
outsl
inc
sbb
mov
mov
fcompl
push
in
stos
lcall
lret
popa
arpl
out
mov
push
nop
add
lcall
cli
outsl
push
ss
outsb
mov
es
or
cmp
inc
repz
mov
push
daa
jmp
mov
pop
rclb
lcall
lahf
mov
pop
add
js
cwtl
imul
lcall
fisubs
in
mov
fs
lahf
into
pop
std
fcmovne
ror
sub
mov
sbb
jg
and
jb
jp
cmp
adc
ja
inc
lods
in
decl
jge
mov
rcrl
pop
insl
mov
lods
test
mov
fcomip
xchg
pop
adc
insb
cld
adc
cmpsb
push
jno
jnp
jmp
and
lcall
and
sub
mov
js
dec
arpl
adc
jmp
push
adc
xlat
xchg
lods
sbb
add
nop
pop
mov
test
xchg
pop
and
push
cmp
call
loopne
push
or
push
test
lds
cmp
adc
outsb
cmp
ja
call
stos
dec
in
add
push
lcall
cmovs
lock
cmp
lcall
inc
in
enter
push
mov
out
stos
aas
cmpsb
add
test
stc
inc
pop
mov
and
push
ja
push
scas
out
out
je
add
pushl
push
push
ljmp
dec
aaa
add
dec
scas
jbe
lret
les
push
mov
xchg
icebp
incl
and
add
lahf
push
and
push
leave
bound
mov
push
popa
add
iret
dec
sbb
ljmp
mov
xor
push
jmp
cmp
jae
lcall
jg
lret
je
out
fiaddl
fstpt
in
sbb
lahf
pop
pop
jnp
cmpsb
imul
xchg
cmp
hlt
stos
mov
mov
pop
mov
mov
mov
sbb
jno
call
cld
mov
movsb
outsb
mov
mov
jge
andl
xor
mov
mov
adc
orl
movsl
out
push
cmp
cmp
ljmp
std
sbb
mov
test
popa
subl
shrl
mov
inc
push
or
sahf
mov
and
incl
test
inc
into
inc
dec
out
ret
pushl
sbb
mov
mov
insb
cmp
xchg
xor
pop
cmp
and
fcmovbe
sbb
jb
cld
sbb
out
mov
cmp
mov
mov
loop
push
cld
jmp
ret
rorb
imul
pop
inc
adc
cwtl
pushf
pop
and
dec
pushf
std
fcomip
icebp
and
das
sbbb
mov
adcb
pop
push
or
pushl
mov
stos
dec
stos
mov
xor
jmp
mov
sbb
mov
dec
movntps
push
mov
into
pop
or
insl
daa
add
nop
aad
xchg
mov
popa
loop
rolb
sub
daa
mov
xor
stos
insb
or
push
pop
pop
std
and
sub
ljmp
cli
adc
mov
mov
jmp
lock
call
jne
dec
jg
insl
and
dec
outsb
gs
fneni(8087
je
cmp
add
loopne
or
add
pushf
add
pop
call
mov
sbb
and
inc
xor
sbb
pop
je
mov
xchg
pop
xlat
mov
cmpsb
inc
jb
mov
push
cmp
decl
pushf
nop
mov
loope
inc
mov
out
ja
push
ret
mov
stos
addr16
mov
dec
cs
mov
rorb
idiv
pushl
xor
mov
pop
mov
loope
das
test
sub
ss
in
jle
pop
sub
decl
fs
test
mov
into
or
dec
push
push
xorb
fs
xor
ljmp
divb
pop
pop
mov
push
ja
pop
in
or
pushf
popa
aaa
sub
jle
sub
ljmp
dec
dec
iret
sbb
dec
push
out
mov
int3
mov
and
mov
test
int3
push
mov
lods
aam
gs
push
push
adc
decl
popa
pop
lahf
andb
mov
pop
adc
sbb
and
addr16
or
loope
sar
call
int3
mov
dec
mov
sbb
sub
adc
inc
mov
pop
aaa
cld
ljmp
into
loope
arpl
aaa
xchg
roll
sub
jmp
lea
pop
pop
in
decl
lock
shr
into
ds
mov
aad
pop
cltd
out
mov
mov
incl
movsb
xor
inc
mov
pop
outsl
call
mov
aam
mov
xor
out
clc
stc
pop
adc
shrl
into
mov
mov
ljmp
repz
aas
cwtl
enter
sub
pop
outsb
adc
fcomip
jmp
jns
cltd
dec
pop
cmp
xchg
mov
sbb
mov
add
ljmp
sbb
outsb
cmp
out
pusha
inc
into
shl
imul
inc
pop
push
les
inc
and
out
inc
mov
lods
mov
popa
dec
xlat
cmp
inc
pop
movsl
mov
out
cli
clc
int
mov
jge
cld
mov
jae
out
cmp
test
push
add
ljmp
jp
inc
dec
mov
jo
aad
adc
lock
loop
jnp
rcrl
push
push
out
pop
inc
out
inc
xchg
dec
jo
and
inc
outsl
popf
pop
les
xor
dec
outsb
incl
movl
ret
xor
ljmp
out
jg
decl
mov
in
addl
in
add
nop
call
xor
xor
or
mov
sbb
mov
add
leave
xchg
or
cmp
dec
and
mov
ljmp
push
inc
push
nop
inc
imulb
jmp
adc
hlt
test
out
jo
pushl
pop
idivb
sub
into
cli
je
addr16
xchg
out
fcomip
lcall
jle
stos
cld
mov
ficoml
dec
pop
xor
sub
nop
mov
enter
rcrl
add
fwait
and
or
xchg
pusha
xchg
xor
mov
into
fbld
pop
aam
or
imul
stc
xchg
and
push
jl
inc
push
inc
aad
sysexit
mov
inc
rclb
push
inc
adc
push
dec
pop
iret
call
push
jge
push
leave
jno
test
fwait
lcall
fldcw
or
cltd
adc
inc
ret
mov
inc
lods
xor
ficoml
lcall
daa
push
inc
in
push
push
lcall
hlt
jg
jae
outsl
and
jbe
xchg
dec
xchg
jb
sub
enter
popf
mov
mov
stos
out
ljmp
decl
pop
cmc
sbb
mov
fidivrs
add
add
sbb
in
sbb
cmc
decl
and
xchg
bound
cmp
movsl
test
jne
adc
add
sbb
pushf
imul
mull
cmpsb
fwait
jl
movsl
loop
cmp
pop
out
repz
pop
loop
ret
adc
mov
dec
jns
sbb
lds
dec
std
mov
aam
and
fdivrp
stos
mov
sar
mov
pop
rorb
leave
push
mov
movsb
imul
cmp
cmp
jae
rcl
lods
sub
cmpb
mov
pop
sbb
decl
add
lock
inc
loop
push
add
mov
fiadds
out
scas
es
sub
mov
jl
outsl
or
loope
jbe
pop
push
sub
mov
stos
repz
mov
in
js
pop
shl
add
push
stos
mov
lcall
es
insb
mov
mov
pop
bound
mov
loop
aas
out
shlb
sar
xchg
jae
ret
pop
push
movb
inc
inc
xor
pop
push
aam
sub
dec
jg
test
cltd
in
aad
es
shl
cmp
push
in
adc
jg
sbb
inc
or
leave
jp
out
inc
idivl
cmp
cmp
ljmp
jp
sbb
in
pop
push
aas
inc
lods
test
mov
sub
add
lcall
lock
enter
insb
xor
jns
es
testl
incl
int3
or
cmp
dec
nop
xor
lret
repz
cmp
div
imul
dec
inc
testb
sbb
pop
leave
adc
xchg
test
xchg
pop
lret
insl
rclb
cmp
mov
pushf
mov
mov
out
popf
out
xchg
enter
cltd
jl
pop
loopne
mov
loope
inc
sub
ljmp
aam
mov
decl
and
movsl
sbbb
ror
lods
hlt
mov
push
lahf
pop
in
out
mov
jmp
pop
xor
fcmovbe
mov
cs
add
mov
or
fs
mov
mov
cmp
cmp
xchg
aam
push
lea
xor
out
push
inc
fldt
xchg
dec
into
push
pop
mov
in
pushl
push
jae
pushl
call
cmp
fbld
mov
xchg
mov
repz
push
cltd
pop
shrl
xchg
pushl
dec
or
iret
out
pop
js
dec
inc
fsub
dec
aaa
push
jmp
jb
pop
jl
fs
in
test
fs
mov
stos
repnz
fstpl
lcall
fwait
sub
lds
jae
or
in
inc
ds
loopnew
sub
clc
lock
mov
outsb
je
pop
push
lods
sub
mov
or
sbb
mov
ljmp
pop
hlt
lret
mov
xchg
inc
push
sbb
adc
std
lret
jnp
xlat
push
sub
std
sbb
cmp
jl
clc
inc
pop
mov
decl
push
pusha
mov
ljmp
inc
loop
ja
mov
jg
orl
sub
inc
test
in
stc
rol
mov
insb
ror
stos
cmp
adc
dec
jb
xor
sarl
sub
jmp
push
faddp
xor
movsb
test
cs
aad
aaa
jo
hlt
jbe
mov
inc
lock
pushl
cmpb
mov
xchg
inc
fiadds
or
mov
mov
loope
in
xchg
idiv
sahf
sbb
push
pop
mov
out
dec
stos
or
mov
roll
lods
mov
sbb
adc
mov
cmp
cmpsb
inc
iret
nop
pusha
out
mov
sarl
aam
adc
push
aaa
popf
pop
lods
jge
jmp
or
mov
aaa
adc
stos
lea
ds
decl
xor
ja
stc
stos
test
adc
pop
call
xor
loope
incl
mov
mov
nop
sbb
les
jmp
jo
mov
je
scas
xor
mov
cmp
xchg
cli
xorl
sbb
ss
push
sti
sub
pop
iret
fdivr
pushl
std
sbbb
ret
mov
pusha
dec
pop
jmp
jp
pop
icebp
movb
ljmp
fistpl
mov
sub
pop
pop
jb
mov
scas
pop
outsl
ss
je
outsl
aam
daa
xor
xor
mov
incl
int3
outsb
and
jg
mov
lods
popa
dec
jb
or
adc
dec
cmpsl
jnp
mov
mov
push
cmpb
lods
mov
adc
jmp
sarb
sub
jge
and
sbb
loopne
repnz
rsqrtps
mov
sub
jmp
pushl
les
fiaddl
int
das
data16
ljmp
clc
stos
add
push
test
push
xlat
inc
sbb
outsl
mov
aad
lcall
or
sub
frstor
ficoms
dec
mov
cmpsl
pushl
push
inc
daa
inc
shrb
popa
mov
jbe
int
ja
mov
push
arpl
inc
and
enter
cmpsb
push
out
out
std
sbb
test
adc
jmp
mov
cwtl
push
arpl
shlb
fsubs
mov
xlat
jecxz
jno
jmp
mov
aad
pushl
mov
orl
outsb
and
sbb
sub
inc
jno
dec
xchg
dec
pop
lods
push
js
jg
mov
movsl
mov
stos
pop
push
out
test
cmp
add
fsubl
dec
pop
cmpsb
icebp
roll
xchg
into
clc
aad
aas
icebp
jno
cmpsl
fbld
lret
jg
mov
in
scas
sub
adc
mov
es
aaa
fdivrl
push
sar
lcall
fisttpl
and
pop
fcomps
xchg
pop
shl
dec
das
inc
jo
cmp
out
out
rcl
adc
cld
pop
push
mov
scas
inc
enter
adc
call
arpl
cmpsl
imul
cltd
out
pop
add
fsubrs
lret
cmp
mov
adc
lgs
ret
in
loopne
stos
lret
lahf
cs
and
ljmp
rcl
push
mov
push
xchg
fcoms
cs
inc
fiaddl
lods
and
ljmp
xor
pop
dec
inc
es
fs
dec
push
mov
popa
andb
sti
cmp
push
dec
mov
push
mov
sahf
pop
aad
cli
sub
mov
pop
loope
jmp
xor
in
xor
mov
fs
in
out
das
dec
pop
xchg
mov
push
rcr
inc
and
xor
cmp
xchg
cli
insl
push
fwait
push
cmp
dec
push
mov
aas
inc
and
xor
and
mov
enter
into
leave
loop,pt
call
pop
int3
xor
or
mov
push
ja
or
ds
rcll
loopne
add
ret
mov
dec
or
pop
adc
inc
adc
cwtl
mov
call
scas
lds
sti
fwait
outsb
cli
lcall
cli
mov
lds
dec
fwait
inc
pop
scas
enter
in
hlt
sub
decl
xchg
sbb
aas
mov
push
ljmp
mov
add
in
imul
xchg
aaa
lret
add
mov
into
les
push
inc
fimuls
jns
adcb
mov
pushf
loope
xor
decl
sbb
in
into
mov
ret
jl
daa
adc
sub
ljmp
int3
push
cs
jle
sar
cmp
ret
idiv
jmp
cmp
jg
or
mov
aas
loopne
xchg
pusha
xchg
inc
inc
xchg
lods
aad
mov
mov
pushl
xchg
sub
and
movsl
lret
inc
fisttpll
dec
mov
call
add
mov
push
mov
cs
push
test
bound
add
std
incl
test
xchg
popf
aaa
push
cmc
sub
adc
xlat
test
sar
ljmp
jae
lods
test
fisubrs
mov
mov
insl
js
pop
cltd
pop
push
jne
add
fisttpll
push
scas
or
out
pop
iret
ljmp
sarl
xchg
pusha
adc
in
fidivs
inc
mov
ja
dec
mov
ljmp
or
or
into
sbb
or
mov
int3
leave
aad
cmp
incl
adc
stc
and
clc
or
xor
idiv
push
loop
fidivrl
in
mov
mov
stos
mov
sbb
fdivs
mov
pop
dec
xchg
mov
clc
cmp
fsubrs
push
mov
sti
push
adc
clc
ficomps
enter
fdivrp
cmp
dec
gs
dec
cltd
ret
das
mov
inc
ficoml
push
lret
push
pop
dec
jg
jae
js
repnz
xchg
mov
and
xchg
loop
push
inc
fnsave
xchg
or
mov
inc
lds
leave
or
adc
popa
iret
fimull
cmp
mov
inc
mov
ljmp
in
idivb
or
int
or
mov
sbb
aam
jno
gs
int3
cmp
fiadds
fldt
outsb
sarb
xor
dec
jns
pushf
mov
or
sbb
cli
xchg
xchg
cmp
lcall
mov
cmp
out
repz
inc
xchg
pop
and
pop
adc
loope
lcall
ret
nop
test
hlt
xor
cmp
lret
and
pop
rolb
jns
mov
addr16
dec
xchg
jl
repnz
orl
shll
push
lds
imul
mov
inc
icebp
ret
push
mov
in
mov
adc
xor
repnz
incl
cmp
mov
iret
inc
cmp
arpl
addr16
push
dec
push
mov
jmp
decb
push
lods
xchg
mov
xchg
daa
lcall
out
dec
mov
add
mov
and
ret
push
ret
pop
jns
add
push
cmpsl
add
sbb
mov
cmpsb
push
adc
cwtl
out
mov
xor
pop
jnp
outsl
int3
pushf
aad
sub
push
push
mov
divl
pop
mov
cld
mov
in
clc
xchg
xchg
push
loop
arpl
cmp
jp
cmp
lods
inc
cmp
xchg
sub
cmpl
xor
cmpsb
xor
jg
hlt
fs
call
mov
mov
jg
imull
mov
int
push
inc
lea
xor
pop
fs
mov
subb
and
push
mov
stc
xchg
xor
lods
xchg
lcall
push
popf
mov
jmp
xchg
push
mov
aas
hlt
jmp
sub
popf
adc
dec
out
push
sarl
lds
mov
sbb
movsl
jg
ds
sbb
scas
out
or
imul
popf
imul
repnz
inc
cltd
mov
pushl
std
or
fs
cs
inc
cld
sbb
lahf
fnsave
add
decl
sahf
push
and
mov
fstp
lahf
icebp
cmp
or
add
cmp
mov
push
jbe
mov
test
sub
mov
aam
clc
mulb
or
pop
rcll
sbb
hlt
decl
push
stc
mov
scas
dec
xchg
mov
std
lcall
sti
dec
pop
add
push
sub
sub
call
sbb
lret
bound
sti
pop
outsb
xchg
loopne
aas
push
and
cwtl
push
hlt
incl
inc
es
cs
pop
lods
add
mov
jg
in
or
iret
fbld
movntq
imul
ds
lods
daa
jl
mov
gs
mov
enter
fcomip
xchg
icebp
xchg
xchg
fcmovb
push
and
xor
mov
mov
into
cmp
filds
pop
sbb
int3
mov
mov
dec
xor
xchg
jle
andb
push
repnz
jb
and
test
mov
cld
mov
push
cmp
push
xlat
in
xlat
imul
mov
ljmp
clc
ds
hlt
sub
cli
mov
add
mov
jns
mov
jg
push
imul
imul
or
add
push
jp
incl
fisttps
outsl
les
xor
fbstp
xor
sub
inc
xchg
leave
subl
scas
sbb
pushl
int
lock
stos
sub
inc
xlat
ss
mov
out
test
shlb
mov
jmp
xlat
out
sarl
sub
std
mov
enter
call
stos
insl
sbb
stc
mov
clc
mov
mov
push
adc
adc
aad
ljmp
sbb
std
aaa
outsl
adc
and
pop
adc
adc
ljmp
xor
mov
les
jmp
repz
lods
sbb
push
mov
mov
dec
sub
test
out
clc
push
mov
sub
dec
outsb
sbb
jecxz
pop
xchg
incl
cmp
push
xor
and
lods
in
fsub
cwtl
push
or
stc
adc
test
inc
push
sysexit
mov
arpl
sub
rcrb
push
sub
mov
std
xchg
in
sub
idivl
mov
incl
mov
stos
rcrb
sbb
shl
mov
add
lods
scas
lcall
sub
push
inc
in
aas
clc
sbb
adc
inc
xchg
push
inc
adc
das
cli
decl
aad
xchg
mov
das
sub
xchg
std
inc
subb
sub
aad
jmp
daa
les
push
xor
cli
jae
movhps
or
xor
push
cmp
or
sbb
ljmp
mov
lea
sbb
call
aas
mov
adc
adc
mov
test
xor
stos
mov
cmpsl
dec
mov
push
rcl
sbb
or
and
push
and
rcrl
lcall
jns
mov
scas
push
cmpsb
rcrb
cmp
inc
repnz
adc
xchg
int3
xchg
and
movsl
xor
lcall
loopne
out
int3
cwtl
mov
test
push
in
dec
xchg
add
mov
addr16
in
mov
mov
in
cltd
in
mov
pusha
iret
loopne
dec
cmc
mull
hlt
push
cmpsl
pop
mov
mov
aam
xchg
sub
ljmp
insb
jmp
jns
jmp
mov
stc
test
cmp
dec
cmc
orb
aad
pop
mov
out
popf
xor
or
xchg
xor
dec
xor
adcl
jg
aam
out
adc
popf
mov
das
flds
push
cmp
jo
fucomi
testl
lcall
push
xor
cmp
mov
lods
mov
xchg
popa
and
dec
incl
cmpb
out
insb
xchg
inc
mov
test
fnsave
xlat
inc
rcrb
into
cmp
jo
shlb
std
adc
movsl
insb
push
inc
and
mov
decl
or
xor
ret
xlat
jle
sbb
inc
shr
mov
bswap
cmpsl
add
sub
fbstp
cs
add
and
enter
mov
dec
jg
call
nop
push
mov
daa
pop
scas
les
repz
push
popf
dec
xor
sbb
jle
push
loope
add
and
sub
add
or
mov
cld
pushl
stos
or
lea
das
rcr
dec
jg
sahf
mov
daa
nop
mov
mov
xchg
loop
cmp
test
jmp
push
cld
decl
in
cmp
jmp
test
movl
sbb
call
shrb
loope
xorb
adc
sbb
outsb
and
cmp
mov
shlb
shlb
repz
mov
out
call
fwait
bound
aam
xchg
aas
adc
xchg
dec
mov
bound
pop
bound
outsb
ficomps
fcmovnbe
mov
rclb
jne
pop
loop
jno
push
cli
cwtl
cmp
or
stos
xor
decl
leave
int3
sub
push
mov
outsb
add
push
stos
aam
inc
int3
test
movsb
xor
push
imul
jl
xor
adc
add
iret
arpl
mov
clc
rcll
sub
out
in
inc
outsb
add
push
aam
sub
cmp
dec
inc
mov
es
cs
jmp
sbb
lock
mov
imul
popf
dec
push
sub
decl
ja
popa
test
rolb
dec
xor
sar
or
xchg
xor
loop
adc
mov
mov
sahf
ret
mov
incl
sub
test
dec
pop
sbb
mov
bound
cmpl
jmp
mov
mov
pop
push
arpl
xchg
aaa
orb
into
adc
add
mov
into
ljmp
jg
inc
or
setge
lods
popf
sub
nop
xor
decl
adc
xchg
lock
mov
or
push
fcomps
lods
inc
xchg
mov
cmpsl
pop
ljmp
lcall
push
mov
xor
pop
sub
and
adc
das
jnp
mov
jp
int
lods
inc
stos
lret
or
pop
into
ss
adc
inc
and
idivb
popl
gs
xlat
xchg
add
lret
xchg
pop
xlat
insb
xor
push
sbb
mov
dec
add
jecxz
dec
out
mov
out
pop
add
and
lcall
add
decl
fs
orl
mov
adc
jecxz
mov
outsl
clc
incl
mov
and
out
or
ret
lods
sub
add
pop
jg
lcall
cmp
addr16
or
and
sti
inc
add
jns
fcomip
decl
push
xor
fstp
outsl
sbbb
or
out
xlat
movsb
xor
or
jnp
mov
pop
xor
lret
cs
inc
lea
sub
sahf
xchg
mov
incl
push
mov
xor
cmp
xchg
mov
pushl
movl
add
mov
adc
mov
test
inc
and
jg
push
ret
mov
and
or
fwait
add
xchg
popa
push
mov
mov
dec
repnz
jmp
lret
dec
int
movsb
push
enter
sub
cmp
ljmp
lock
lcall
pop
js
gs
test
mov
out
aas
lcall
pop
ljmp
sbb
lahf
sahf
jg
clc
or
sbb
dec
aad
decl
idiv
pop
jge
xor
mov
push
imul
add
mov
and
lcall
jae
jne
icebp
mov
leave
xlat
dec
shlb
daa
outsl
mov
call
subl
xor
mov
or
call
jns
dec
movl
xchg
aas
fnsave
sbb
mov
dec
pop
shr
mov
bound
jg
ret
push
lods
sub
call
inc
cmc
nop
lret
pop
jecxz
push
das
cmp
xchg
xor
mov
jns
outsb
pop
add
repnz
push
pop
push
or
decl
adc
es
lret
cmpsl
stc
mov
loopne
lock
pushf
jmp
xchg
or
cmpsb
addr16
cmp
lds
and
jge
and
or
mov
jmp
xorb
fcompl
out
imul
mov
out
movaps
lcall
cmp
fisubs
sbb
inc
adc
xorl
push
repnz
push
daa
call
or
mov
mov
push
and
or
movsl
repnz
shll
xor
dec
sar
clc
jmp
aam
mov
cli
jae
divb
das
hlt
ss
ret
jle
cmp
push
and
das
cmpsl
mov
int3
negl
daa
mov
push
push
mov
rcr
aad
lcall
sub
dec
aas
divl
scas
jno
push
icebp
fwait
or
jl
inc
shlb
inc
adcb
ljmp
shrb
or
pushf
xchg
or
les
xchg
pop
stos
mov
ljmp
mov
adc
xor
cmp
jae
stos
outsb
pop
cmp
push
daa
gs
mov
push
xchg
xchg
pusha
sahf
rolb
sarl
pop
and
mov
call
cmp
fdivr
in
sbb
out
pop
pop
push
xor
addr16
xor
out
lock
dec
cmp
nop
lahf
push
mov
pop
rorl
out
dec
xor
xchg
sbb
mov
rcll
xchg
jmp
xlat
xchg
jne
dec
or
xchg
dec
cmc
mov
mov
aad
jno
mov
lock
incl
and
mov
rol
push
inc
inc
negl
outsl
jle
push
jp
addb
pop
and
inc
int
push
adc
dec
push
pop
fnstenv
out
imul
into
dec
pop
xor
and
ds
gs
jl
xor
gs
push
int
sbb
out
loop
scas
test
add
pop
push
movsb
mov
dec
push
in
decl
push
roll
subb
inc
ret
loopne
sub
insl
xchg
aam
out
cli
hlt
push
aam
leave
mov
cmp
xchg
ds
divb
outsb
bound
addr16
loop
xchg
das
sar
leave
fdiv
cmpsl
ss
push
mov
xor
mov
call
shlb
adc
pop
jmp
add
out
mov
jge
sbb
shll
inc
icebp
int3
loopne
sbb
mov
fbstp
pop
adc
decl
test
inc
cmp
mov
sbb
jl
imul
mov
mov
mov
outsb
sbb
mov
mov
mov
sahf
cmp
push
lods
aaa
call
cs
orl
cmpsb
or
das
rolb
imul
jl
pop
cld
ljmp
xchg
inc
aad
mov
in
cwtl
out
cmc
je
mov
mov
test
xor
dec
pop
int
lods
stc
xchg
lods
add
idiv
fwait
int3
cs
sbb
xchg
mov
std
lcall
adc
mov
cmpsl
mov
or
inc
dec
fiaddl
lcall
arpl
pop
mov
pop
inc
aas
push
in
jg
subb
mov
testb
xor
popa
loope
mov
aaa
std
fcomps
leave
push
ja
cld
mov
mov
subl
or
outsb
decb
call
mov
cmp
cmc
icebp
jmp
es
imul
push
lret
sbbb
pop
xchg
xor
ljmp
daa
mov
shl
fwait
stc
push
lcall
dec
dec
test
imul
push
imul
lahf
scas
scas
lcall
fisttpl
mov
pusha
ljmp
or
fldenv
or
movl
scas
mov
push
pop
fs
icebp
je
neg
aam
cmp
fsubs
cmp
cmp
daa
lahf
mov
push
jecxz
fsts
mov
jl
jno
and
incl
bound
adc
loopne
vucomiss
test
jp
or
xchg
sarl
pushl
adc
lret
rclb
inc
and
jle
or
out
jle
sub
lret
jo
pushl
cmc
push
inc
stc
pop
add
fisubrl
movsb
lret
sbb
fcoms
jge
jg
mov
mov
imul
mov
mov
push
lds
mov
adc
mov
mov
push
cmp
popa
mov
daa
xlat
jl
pushf
cmpsl
lock
and
je
aas
lea
bound
xor
arpl
push
outsb
test
shl
ja
stos
dec
dec
loopne
shl
lock
pop
stos
fwait
jge
mov
arpl
incl
sbb
fisubs
sub
leave
sub
jp
lea
sub
ljmp
jl
into
imul
sbb
repz
mov
movsb
mov
ss
jo
les
lcall
arpl
movsb
shll
andb
xor
xchg
mov
roll
dec
cmp
adc
cltd
dec
mov
shr
aas
loop
fwait
mov
pop
sti
mov
sbb
push
mov
jecxz
fdivl
std
inc
adc
clc
jg
decl
push
stos
mov
push
sub
in
mov
and
call
lock
cmpsb
cmp
ljmp
cmc
jge
adc
add
stc
ficoml
pop
jo
out
pop
add
lret
mov
fstp
mov
adc
push
hlt
ljmp
sbb
mov
jbe
fimuls
cwtl
call
pop
les
pop
in
jp
in
push
movl
and
incl
jns
pop
push
aaa
and
lcall
scas
cmp
stc
or
cli
mov
shlb
jmp
push
mov
xor
jns
jp
mov
sbb
ljmp
jmp
cli
cli
add
popl
lds
and
mov
mov
loope
ljmp
fiaddl
jnp
push
les
in
add
dec
xor
scas
push
mov
xchg
jnp
scas
lret
jb
lcall
adc
xchg
out
fildl
jmp
cld
dec
push
cmpb
pop
mov
push
jae
push
int
and
movsb
comiss
mov
call
sub
stos
pusha
cli
adc
aaa
outsb
outsb
stos
push
adc
ja
shll
xor
cmpsb
rcrl
xchg
incl
cld
mov
int
adc
movsl
xorb
mov
add
test
call
cmp
pop
cmc
inc
inc
sbb
and
fstpl
or
lcall
aam
adc
outsb
sub
mov
sub
push
mov
mov
js
rorl
outsb
sar
xor
mov
scas
outsb
test
add
push
or
fidivl
inc
aas
orl
jmp
inc
mov
pop
sbb
inc
pop
bound
sbb
out
in
xor
add
scas
mov
scas
lcall
sub
pop
jbe
xor
sbb
out
call
pushf
adc
add
dec
and
cli
movsl
daa
mov
mov
pop
push
pop
cmp
pushl
xchg
xchg
cmp
cs
ds
in
insb
adc
mov
sub
or
pushl
fidivs
out
pop
ret
sub
sahf
push
push
gs
or
mov
ret
push
divb
mov
mov
or
cld
mov
adc
std
mov
xor
cmp
dec
ljmp
mov
stos
repz
adc
in
pop
fisubs
scas
test
es
scas
add
fistpl
xchg
ljmp
out
xor
xlat
cmp
std
cmp
xor
in
pop
and
fcomip
addl
or
lret
test
mov
pop
call
adc
decl
dec
scas
insl
sbb
clc
inc
cmp
sbbb
popf
stos
outsl
addr16
sub
mov
jns
je
sbb
and
rcrb
mov
decl
lds
scas
dec
and
loop
xor
loopne,pt
in
out
mov
or
pop
cs
add
or
xor
idiv
fcomip
sti
test
insb
xor
cmpsb
sbb
cld
mov
mov
lcall
fwait
push
mov
cmp
mov
popf
lahf
inc
adc
pop
cmp
mov
lret
jmp
sub
aaa
xor
je
inc
pop
call
cmp
mov
xor
adc
loop
jb
out
mov
incl
pop
popa
or
pop
notl
pushf
mov
add
push
pusha
in
out
clc
inc
push
scas
in
fcmovne
movb
mov
std
mov
pop
loopne
pop
orl
jns
pop
push
add
push
push
push
fwait
repz
sbb
jmp
mov
push
lret
fxch
fcompl
pop
sbb
roll
pushf
dec
test
or
outsb
jmp
cmp
ljmp
leave
push
daa
add
pusha
push
pop
jecxz
movsl
sarl
call
add
insl
mov
imul
fisubrs
jne
jo
stos
inc
fildl
ds
int
mov
push
xchg
push
test
dec
xlat
pop
sub
push
mov
lcall
test
mov
mov
fcomps
jp
scas
out
mov
or
inc
push
stos
in
jnp
cmpsb
jmp
sar
mov
adc
hlt
into
cmpsl
out
and
movsb
dec
and
clc
dec
shll
ljmp
pop
fildll
sbb
icebp
into
das
lock
out
mov
fs
lcall
test
xchg
inc
call
loop
sbb
rclb
je
mov
call
dec
xchg
lret
not
mov
xchg
je
stos
out
xor
sub
decl
scas
cli
lock
test
adc
dec
lret
cmpsb
pop
stc
insb
add
das
cli
or
dec
xchg
mov
decl
and
out
inc
jne
mov
and
mov
inc
cmp
lcall
ret
mov
iret
sbb
mov
push
orl
pop
xor
js
dec
adc
sbb
icebp
out
js
xchg
fcoml
mov
outsb
push
in
jne
lock
adc
sbb
cltd
sbb
jmp
enter
lock
dec
push
shll
movsl
or
adc
sub
inc
aaa
loope
stos
in
inc
push
mov
aad
incl
mov
mov
and
mov
pop
add
mov
jg
lcall
ljmp
push
mov
pop
jns
mov
into
sub
mov
xor
mov
sahf
ss
js
push
lcall
decl
mov
mov
shlb
pop
dec
dec
loope
jne
sbb
xchg
mov
fwait
dec
mov
sbb
jo
adcb
pop
sbb
pop
test
jae
insb
xchg
fcoms
push
inc
pop
ljmp
imull
push
push
addb
lret
test
nop
pusha
xor
mov
add
mov
shll
inc
js
mov
ljmp
mov
and
cli
stos
jno
rolb
or
dec
mov
test
cmp
out
clc
clc
int
ds
pop
scas
dec
pusha
cli
or
cs
in
and
push
mov
dec
adc
jmp
fimull
xlat
xchg
inc
sbb
inc
sahf
aaa
xor
in
add
xor
push
cs
lcall
bound
push
or
and
shlb
call
test
dec
dec
ljmp
sar
mov
adc
sub
and
pop
dec
mov
test
ljmp
in
in
and
mov
mov
jmp
cli
mov
and
lret
cmpsb
sub
cmp
adc
xor
dec
mov
inc
lock
subl
cmp
mov
adc
inc
fldenvs
aam
data16
sub
clc
mov
fistps
xlat
adc
das
or
mov
out
push
push
jbe
arpl
mov
icebp
movsb
icebp
decl
rcr
sub
outsb
mov
lahf
aam
cmp
outsl
insb
sub
aam
dec
out
decb
loop
mov
sar
pop
fdiv
push
xlat
pop
inc
mov
inc
cmpsb
loope,pt
in
cmpsb
and
or
dec
lcall
fidivrs
inc
das
test
out
mov
sub
outsl
and
inc
test
cmp
mov
and
mov
fs
sbb
addr16
dec
rclb
xlat
mov
cli
cmp
incl
dec
or
outsb
or
or
sahf
dec
inc
psrlw
sub
mov
xchg
negb
stc
fimull
lcall
dec
push
pop
bound
sbb
dec
shrb
sub
sbb
mov
pop
xor
jmp
daa
xchg
aas
in
dec
xlat
lock
int3
sbb
push
repz
jp
inc
popa
clc
sti
xchg
inc
mov
gs
push
mov
test
mov
adc
mov
lcall
ret
or
mov
aam
sahf
fnstcw
mov
mov
decl
out
insb
movsb
ljmp
addr16
add
cmp
lds
xor
call
stc
pushl
jb
sbb
dec
shlb
jecxz
inc
shrb
in
sbbb
and
cld
jno
adc
cmp
insb
in
out
xor
loope
lods
jbe
decl
lock
cmp
xor
push
lret
or
aas
inc
and
popa
cld
stc
test
int3
jge
push
lock
ljmp
jne
adc
imul
lds
xor
sarb
inc
jns
fisubrl
mov
push
decb
push
jbe
in
adc
ljmp
push
in
sub
or
mov
lahf
daa
or
lds
lahf
mov
std
decl
mov
sbb
daa
addb
fcoml
ret
incl
jb
cs
andb
out
xchg
ret
adc
inc
aas
or
fimull
lcall
adc
mov
mov
negb
sti
outsb
sbb
add
jmp
imul
outsb
lahf
inc
inc
push
aad
cli
push
sub
add
mov
and
mov
push
pop
lret
lock
jg
dec
pusha
inc
push
insl
iret
int3
pop
push
xchg
sbbl
sub
pop
xor
sbb
xchg
xchg
mov
std
mov
cmp
loopne
cld
push
dec
push
mov
std
stos
push
xchg
aas
shrb
pop
lahf
das
adc
std
in
xchg
decl
addr16
stc
fcoms
es
sbbl
jno
pushl
das
xchg
in
test
xchg
dec
fnstsw
loope
repnz
int3
fcomps
xor
pushl
and
jne
fadd
rcrl
mov
shll
lahf
and
add
dec
mov
cmp
into
js
lahf
and
xchg
push
test
jmp
out
not
dec
pop
fcomip
jmp
insb
mov
ret
push
adcl
pop
jg
dec
add
cli
hlt
ss
pop
and
ljmp
push
les
mov
fmul
xchg
push
jne,pn
push
or
loopne
stos
xor
clc
stos
dec
or
in
fiadds
ds
add
js
jmp
mov
jae
mov
jmp
sti
sbb
in
cmpsl
lock
jmp
and
into
mov
lea
and
jmp
sbbl
pushl
notb
addl
rolb
popa
popa
jns
lods
cmc
mov
imul
cmc
in
imul
mov
push
or
dec
les
add
popl
pushl
or
push
addr16
jnp
mov
insb
cld
ljmp
sub
popf
or
fadds
aaa
mov
push
test
imul
fucomp
inc
sarl
xchg
cld
dec
in
aas
pop
mov
incl
push
mov
inc
inc
ds
test
ja
scas
fdivrs
pop
aad
fstpt
or
fadd
dec
enter
lock
ljmp
imul
test
aaa
enter
lcall
bound
stos
dec
or
addr16
test
je
jnp
imul
lcall
inc
mov
dec
enter
sbb
stos
daa
lock
fisubl
sarl
std
dec
fcmovu
or
not
or
mulb
inc
test
out
aas
push
mov
sub
pop
pop
sub
dec
xchg
fimuls
or
outsb
sub
das
xchg
dec
or
jl
adc
mov
jmp
xor
or
fwait
and
pop
mov
ret
testl
cmp
pop
mov
stc
imul
cmp
imul
aad
in
pop
cmp
or
inc
dec
bound
mov
fsts
xchg
mov
jl
jg
mov
adc
push
mov
mov
push
mov
cmpsb
or
ljmp
dec
push
mov
in
je
pop
jmp
ret
mov
push
add
sbb
cmp
lcall
sahf
enter
movb
movsb
sbb
in
mov
sbb
div
and
xchg
out
pushl
incl
js
aas
shrl
pop
cwtl
cmp
stos
sbb
hlt
cmp
lret
insl
scas
inc
mov
fldln2
and
orl
scas
mov
mov
mull
repz
hlt
arpl
setle
push
xchg
scas
fildll
jne
jmp
fsubrl
sbb
iret
int
adc
and
decl
jmp
mov
mov
adc
ret
hlt
shlb
js
adc
xchg
dec
add
pop
dec
loop
incl
stos
mov
xor
movsl
mov
add
cmp
inc
mov
mov
dec
inc
cli
decl
inc
push
shlb
popa
stc
imulb
pop
pop
ret
jno
shl
add
addr16
push
push
addl
addr16
inc
and
mov
fwait
mov
push
push
pop
popf
pop
cmp
enter
and
mov
and
arpl
sub
add
insb
cmpsb
push
sbb
ret
mov
loopne
and
push
and
jg
ja
add
sbb
push
insl
mov
inc
xchg
sub
xchg
ds
jb
pop
adc
mov
push
lock
popf
pushl
aas
fdivs
and
arpl
lahf
push
jge
pop
mov
addr16
xor
shrl
and
jmp
outsl
dec
add
inc
jp
mov
les
jmp
pop
lock
add
xchg
gs
inc
push
sub
loopne
mov
and
jg
mov
mov
fwait
incb
and
xor
pop
mov
jge
mov
inc
mov
decl
add
xchg
shrb
lds
cltd
out
sbb
inc
scas
xchg
cmp
lea
push
xchg
pop
push
jmp
jge
int3
loopne
stc
fdivrl
ljmp
inc
cwtl
mov
fnsave
and
aad
pop
test
cli
adcl
and
lods
lcall
out
test
daa
aas
stos
inc
lock
divb
push
test
js
mov
push
test
or
jl
push
ljmp
dec
jmp
xchg
jno
sbb
mov
loop
pop
mov
jno
lcall
mov
jmp
mov
xor
cmp
subl
inc
push
std
mov
movb
xor
sbb
jne
and
xchg
xlat
sub
inc
js
lcall
sbb
and
pushf
dec
push
popa
pop
stos
push
add
or
jmp
jmp
pop
iret
subb
int
mov
jmp
ja
xor
ret
into
hlt
out
lahf
dec
or
add
mov
dec
leave
sbb
stc
loope
xchg
test
and
dec
shll
leave
or
jns
sub
incl
bnd
and
sti
adcl
pop
lahf
add
mov
or
xchg
or
roll
push
jmp
jle
lods
enter
jae
and
and
insl
ljmp
fsubs
xor
insb
loope
cmpsl
icebp
jmp
sti
ret
hlt
ja
mull
imul
jg
out
pushw
clc
es
inc
adc
es
lahf
pop
sub
decl
outsb
inc
icebp
xlat
ret
scas
jmp
aad
mov
cmp
ds
fistps
ljmp
shr
lds
jge
push
call
negb
push
icebp
sbb
adc
call
or
fmull
or
xor
pushf
cmp
pushl
aas
incl
pop
jp
push
ljmp
arpl
rorb
jecxz
in
push
xor
dec
shll
lods
stos
jmp
sbb
stos
add
push
push
add
test
push
decl
sub
scas
mov
pop
bound
mov
imul
or
in
or
out
or
fstps
insb
or
mov
lock
popa
sti
popa
in
lret
push
call
fsubs
icebp
lods
pop
data16
sub
xlat
inc
sbb
fldcw
call
pop
out
cmp
adc
insb
mov
push
fdivrl
cltd
xor
fcomps
or
adc
ljmp
cwtl
lar
jb
xor
outsl
mov
loopne
add
sbb
and
mov
mov
out
cmp
enter
or
push
sahf
add
push
jmp
cmp
popa
lret
pop
jo
js
maxps
jle
or
aas
lods
int3
jo
sub
insb
xchg
out
incl
popf
sub
ret
jp
std
sahf
mov
inc
loopne
es
pop
xchg
cs
lods
pushl
cld
lcall
call
out
jno
adc
mov
push
clc
fcomps
jg
jmp
icebp
or
mov
cwtl
push
stos
sbb
and
fdivrp
outsl
cli
ljmp
xor
push
jae
ret
fwait
rcrl
rolb
push
out
decl
mov
insb
push
xchg
pusha
gs
adc
jmp
sahf
pop
inc
std
scas
jge
add
andb
sbbb
pusha
roll
mov
fistl
ds
fsts
xor
mov
sub
cmp
mov
insl
inc
adc
push
mov
call
pop
dec
loope
inc
lds
push
into
ljmp
dec
arpl
push
adc
jae
sbb
xchg
flds
mov
js
push
lcall
xor
jbe
ficompl
xlat
pop
inc
shlb
ljmp
jg
shr
test
daa
jp
mov
rorb
xor
xchg
cmpsb
mov
decl
or
lahf
pop
insl
push
cli
cli
jmp
mov
lret
adc
paddusw
or
inc
mov
addr16
jmp
clc
pushl
or
outsb
sub
ss
test
decl
mov
mov
mov
sub
add
inc
lcall
mov
sub
inc
jno
adc
out
loopne
je
cmpsb
mov
sub
and
ljmp
in
jp
mov
and
rol
cmp
call
movntps
in
loopne
cmp
incl
pop
fsubr
dec
cs
mov
lods
lock
sub
into
insl
xor
fimuls
fidivrl
aas
xor
das
jae
icebp
out
arpl
sub
sbb
test
jmp
mov
push
fadds
lods
rcrb
ficomps
lcall
xchg
mov
leave
cmp
ljmp
insb
cld
or
push
imul
and
sti
sbb
mov
pop
xchg
push
out
loopne
sub
xor
popa
das
cmp
mov
push
dec
sbb
fiaddl
ljmp
rcll
adc
loope
outsb
pop
fdivrl
cmpl
mov
ljmp
add
repnz
pop
fs
es
xchg
aad
sub
jns
test
imul
call
in
push
push
xchg
repz
in
mov
and
cmc
add
lcall
xchg
call
lods
mov
cmc
enter
loope
hlt
scas
pop
add
jg
mov
inc
das
stos
or
ret
sbb
jge
dec
add
cli
into
fstpt
std
test
call
lods
adc
push
ficompl
push
shlb
std
femms
call
mov
fldenv
ljmp
xor
lcall
mov
je
pop
adc
adc
out
mov
das
xor
in
lcall
popf
lret
arpl
push
dec
sti
daa
xor
jo
xchg
sbb
add
cs
in
push
das
jmp
fildl
mov
mov
sub
repz
jo
imul
ds
idivl
inc
inc
push
pop
pop
and
fimull
jle
loope
fs
call
movsb
adc
sbb
mov
mov
out
into
add
adc
sbb
fcmovb
dec
cmp
frstor
xor
pop
popf
mov
inc
call
push
pop
dec
xor
push
daa
add
out
pop
sub
pop
jmp
dec
inc
fchs
sahf
xchg
data16
fbstp
xor
cmp
xchg
into
into
addr16
mov
add
sub
and
or
fsubs
lret
xor
add
fdivl
push
push
rorl
xchg
mov
and
ret
movsb
aas
adc
decl
jmp
pop
std
cmp
xor
lahf
add
xor
test
or
lcall
dec
cmp
mov
adc
rcl
cmp
xchg
cmpsb
aaa
cmp
jg
inc
inc
push
lock
inc
xchg
cmp
xor
push
cmpsb
out
dec
mov
lret
xchg
cmp
incb
andb
lcall
pop
mov
jmp
mov
data16
and
dec
dec
addb
call
sbb
sbb
daa
jo
mov
xchg
stc
out
jle
jbe
and
rcrl
fwait
push
bound
rcrb
pop
xor
fwait
mov
mov
outsb
jb
and
mov
add
mov
ss
jmp
lcall
into
inc
cmpsb
pop
sub
adc
jne
and
xchg
add
pop
jl,pt
xchg
test
or
mov
ljmp
jmp
arpl
push
fiaddl
popa
nop
movsb
mov
dec
sti
scas
jbe
jbe
negb
sbb
imul
cmpsb
xchg
push
clc
ss
xor
mov
pop
addr16
dec
pop
movsl
push
mov
jle
cltd
jecxz
fdivrl
pop
sbb
pusha
mov
mov
mov
ljmp
pop
out
jg
cmp
les
mov
mov
enter
mov
cmp
push
mov
arpl
push
or
add
add
ljmp
in
loop
push
adc
nop
icebp
insl
lret
out
mov
aad
add
sub
and
stos
gs
inc
cmp
push
sub
je
jmp
pop
sub
push
dec
jle
out
push
das
jle
cmpsl
push
mov
adc
inc
dec
bound
jecxz
fwait
adc
mov
incl
aaa
sub
sbb
push
adc
dec
fstps
test
xchg
int3
push
xchg
aas
sti
into
xor
mov
mov
inc
call
cli
iret
jg
pushl
ret
incb
cmp
test
sub
inc
inc
fistl
dec
mov
dec
test
jg
mov
fcoms
mov
mov
inc
pushl
cmp
pop
cltd
lcall
ret
cld
in
insl
cmpsl
mov
jb
out
repz
inc
jmp
cmp
sub
ret
test
popa
dec
cltd
dec
inc
call
inc
pop
cmpsl
cmp
jl
stos
pop
mov
pop
imul
xor
pop
xor
stc
test
mov
daa
test
push
inc
insl
mov
inc
mov
sub
xor
incl
mov
fsubr
mov
stc
add
lock
lods
jmp
cld
ljmp
jl
mov
cmp
jp
sub
mov
dec
adc
test
scas
push
pop
dec
aaa
inc
cltd
xor
sub
mov
inc
jmp
cmpsb
push
push
or
jg
pop
cmp
sub
mov
pop
imul
popa
jbe
int3
and
call
pop
xchg
or
or
addr16
push
jmp
cltd
loop
fistpl
mov
dec
pop
xchg
adc
addr16
jmpw
xchg
mov
xchg
fwait
mov
test
in
dec
dec
enter
mov
inc
and
mov
jecxz
outsb
adc
add
jo
inc
pop
adc
push
sub
mov
dec
enter
pop
mov
cmp
cmp
push
movsb
jns
add
lcall
sbb
and
and
jl
test
or
dec
sahf
jae
test
out
and
push
pop
push
inc
int3
mov
cmp
dec
jno
cs
adc
push
inc
ljmp
inc
and
sbb
push
gs
xor
inc
ja
fsubrp
lods
pop
or
sub
push
loopne
pop
loope
mov
mov
lods
sub
nop
jg
cmp
fmuls
jo
jns
mov
xchg
cmpsl
lret
dec
ljmp
xchg
fdivr
ljmp
int
mov
sub
repz
aas
sub
mov
mov
pushl
dec
mov
rcll
aam
xchg
sub
dec
jb
lcall
mov
mov
fdivl
xchg
mov
or
add
imul
push
hlt
imul
fisubl
jp
outsl
aad
call
loopne
repnz
les
pop
xor
mov
out
ljmp
iret
sbb
xchg
mov
xor
push
push
out
mov
daa
lret
add
adc
mov
jmp
sub
dec
fsubs
ljmp
cwtl
adc
cli
push
xor
mov
add
aaa
ud0
div
addr16
adcb
outsl
sub
xor
and
pushl
aam
or
stos
and
rorb
or
inc
out
mov
test
ljmp
fsubp
sub
and
pop
cld
frstor
cmp
lea
push
xchg
sub
mov
jmp
dec
and
mov
fstpt
mov
pop
cwtl
shlb
jmp
mov
adc
shr
aas
push
pop
out
mov
pop
imul
jp
cmp
mov
fstp
ret
jno
mov
fdivrp
fisubl
in
mov
ja
ljmp
dec
cld
or
jle
fwait
insb
ret
sbb
sub
idiv
cmp
ds
incb
or
scas
fists
int3
ficompl
add
cs
mov
push
or
aad
inc
adc
jne
insb
push
add
faddl
lea
xchg
and
push
ret
adc
pop
cmp
insb
adc
pop
mov
in
insb
decl
enter
xor
mov
mov
cli
mov
or
jbe
xor
adc
xchg
jne
push
outsl
pop
xchg
dec
jecxz
jo
lcall
add
subl
das
iret
outsb
sti
or
push
dec
sbb
push
pop
and
scas
mov
pop
repnz
xor
test
loop
clc
mov
aaa
imul
faddl
mov
insb
fdivrp
jle
into
shlb
int
rcll
jne
sub
cmp
movl
cwtl
ja
repz
repnz
subl
xlat
sbb
pushf
xlat
push
mov
push
push
jg
mov
sbb
out
cld
sbb
dec
repz
outsl
repz
aam
loope
shrb
clc
jmp
add
or
pushf
jnp
popf
in
xchg
mov
decl
call
pop
or
xchg
ja
xchg
adc
add
mov
jmp
mov
cmp
inc
outsl
inc
mov
add
adc
inc
pop
push
rcr
ljmp
lcall
out
mov
test
sarb
out
jne
mov
dec
es
cli
cmp
pop
mov
jno
in
in
xor
pop
jl
insl
push
sbb
or
stos
or
mov
mov
push
sbb
jae
es
nop
cmpsl
jno
outsl
jo
outsl
and
pop
stos
je
sub
fwait
xchg
pushf
sub
mov
or
scas
cmp
adc
icebp
xchg
dec
lcall
cli
es
lcall
xchg
repz
in
sub
dec
inc
dec
cld
aam
gs
lcall
movsb
jmp
int3
ljmp
mov
and
add
mov
in
popf
mov
insb
mov
jecxz
jle
in
hlt
sbb
inc
push
scas
jge
sbb
add
mov
incl
mov
leave
js
jmp
mov
insb
mov
dec
clc
jg
jns
or
pop
cltd
push
push
aaa
cmp
xor
xor
xchg
lds
dec
popf
sbb
hlt
pushl
fdivrs
pop
les
push
ss
out
xchg
mov
push
xlat
jg
fcomps
push
xchg
cs
pushf
out
mov
js
mov
pop
inc
sub
flds
das
cli
cmp
icebp
lds
mov
aas
inc
fcompl
adc
pop
or
add
and
sahf
sbb
ret
jecxz
mov
mov
adc
loop
dec
movsl
pop
mov
popa
adc
aad
pushl
xchg
sub
adc
outsl
add
cld
or
stc
lahf
lret
jg
hlt
aaa
js
or
mov
test
xorb
incl
scas
xchg
popf
jb
mov
pusha
inc
call
test
stos
mov
in
xchg
jae
sub
pop
and
sbb
mov
or
dec
test
fdivl
fdiv
testl
pop
hlt
les
xorb
insl
adc
icebp
test
movsb
shl
lcall
xlat
jg
in
xchg
bound
ja
notl
push
push
cmpsb
das
mov
ljmp
lock
push
mov
xor
mov
cmp
repnz
shr
ja
push
inc
mov
inc
fidivs
lret
adc
jg
add
loop
out
das
lods
andl
dec
insb
pop
incl
and
shll
fidivrl
hlt
mov
inc
cwtl
repz
mov
fdivr
jg
decl
ret
adc
rorb
jecxz
ficoms
or
pop
jge
decl
bnd
stos
xchg
loopne
adc
jbe
cltd
test
pop
adc
inc
sarb
push
jg
mov
je
in
daa
ja
dec
jns
or
cmc
bound
lcall
mov
incl
icebp
pop
insb
daa
test
ds
stos
into
add
fldenv
in
xor
cwtl
adcb
sub
jmp
gs
loope
sahf
repz
out
mov
call
test
ret
mov
movsb
or
fcmovu
dec
out
lods
jl
jmp
pushl
sub
pop
mov
daa
sub
addb
scas
jg
push
imul
enter
jno
dec
ljmp
cld
das
addb
xchg
push
inc
aas
xchg
addr16
adc
jg
jmp
jmp
cmp
xor
pop
ja
imul
and
outsb
mov
mov
push
into
sub
inc
popa
test
pop
inc
int3
call
out
add
inc
ret
lret
in
roll
cmpsb
mov
mov
test
das
cmpsb
decl
and
hlt
test
mov
sub
jbe
pop
in
add
and
adcl
pusha
push
test
loope
jg
sub
adc
fmull
ror
push
or
xchg
cmp
cmp
xchg
insb
fsubrl
nop
imul
pop
dec
jnp
mov
pop
stos
push
pop
push
xchg
test
jne
sub
and
fldcw
test
aaa
sbb
pop
lock
lret
out
inc
insl
loop
pop
pushf
dec
rcrb
pop
mov
mov
and
dec
pop
mov
sti
addr16
lods
nop
dec
lcall
dec
je
fs
lret
push
sub
xchg
push
aas
test
call
or
rcr
pop
test
pushf
cmp
adc
jg
add
mov
and
mov
adc
std
rorl
pop
shlb
ds
insl
adc
decl
pop
jge
sarl
lret
cmp
rolb
pop
pop
add
sub
bound
gs
decl
sub
and
aam
lret
sti
nop
push
jmp
cltd
dec
push
push
pop
fistl
inc
fdivrp
mov
sbb
shl
std
je
mov
aaa
xor
sbb
stc
jo
inc
inc
loop
jmp
je
jmp
inc
adc
mov
lcall
mov
imul
lahf
leave
cmpsb
xlat
and
cld
ja
push
imul
hlt
sahf
leave
push
stc
mov
lods
mov
imul
jp
pop
cmpsb
fdiv
test
lods
ljmp
enter
jmp
fdivs
popa
add
loop
sub
hlt
push
lret
movsb
cmp
push
out
pushf
dec
add
push
cmp
or
call
mov
adc
shl
sbb
das
je
mov
xchg
pop
das
test
xchg
into
or
decl
call
add
outsl
pushf
cli
mov
pop
inc
pop
jnp
les
jge
fisttps
mov
daa
inc
pop
jecxz
adc
sub
mov
fwait
stc
xor
fwait
decb
and
pop
fs
xchg
adc
aad
test
insl
mov
xchg
loope
pop
repz
jns
xor
incb
xor
jne
mov
mov
push
xchg
fs
cs
scas
clc
ljmp
mov
vcmpps
lods
adc
outsb
int3
out
mov
xlat
mov
xchg
fnstsw
decl
and
fistl
mov
ss
popa
dec
imul
jg
pop
je
pop
loop,pn
roll
xchg
lahf
sti
pop
or
sub
jg
imul
fcomip
inc
xor
and
push
add
xchg
xlat
decb
xchg
icebp
aam
or
push
les
xchg
inc
fnstcw
cld
xor
add
loope
sahf
jmp
pop
jle
cmp
mov
mov
inc
pushl
mov
imul
push
push
lret
clc
ljmp
mov
xor
xor
dec
js
add
pushl
and
cmpsb
jge
stos
das
pop
sbb
push
jo
mov
jnp
sbb
cmc
pop
cmc
call
jnp
cltd
mov
fildll
cmp
in
or
fildll
jns
sarb
add
cld
js
les
out
xchg
or
int
ljmp
and
mov
aas
call
xor
cmc
jns
pop
dec
call
daa
or
mov
adc
sbb
jge
cmp
fldcw
inc
lret
mov
pop
mov
call
rorb
sbb
add
adc
inc
pop
js
outsb
into
sub
lcall
dec
add
mov
daa
xchg
test
xor
xchg
and
pop
xchg
movsb
dec
sub
jmp
stos
mov
inc
push
add
and
lds
shlb
adc
mov
leave
je
push
inc
dec
insl
test
les
lods
cmc
insb
adc
stos
pop
fisubrs
mov
pop
scas
and
xor
decl
jecxz
lahf
xchg
fisttpl
sub
xor
mov
jle
sub
dec
adc
sbb
call
das
inc
fdiv
rorl
fiaddl
adcb
or
sub
mov
cltd
or
call
pop
jo
je
stc
mov
sbb
pop
mov
daa
stos
in
inc
shlb
or
js
xchg
dec
push
xor
fcomp
jmp
mov
mov
aad
ljmp
push
adc
push
xchg
jnp
arpl
inc
sub
mov
dec
or
inc
inc
adc
test
in
dec
adc
test
inc
in
jmp
xor
fnstsw
mov
adc
jae
add
incl
cmp
sbb
loop
scas
jne
sarl
jp
insl
pop
jbe
jns
insl
bound
jno
fsincos
stos
dec
inc
inc
sahf
xchg
les
fstl
notl
loopne
aas
std
jo
inc
and
lret
inc
mov
repnz
mov
jmp
test
mov
outsb
lock
rcll
xchg
hlt
mov
lcall
out
pop
sub
add
leave
adc
inc
enter
mov
add
lods
cltd
ljmp
cli
push
pop
and
mov
ljmp
pop
jg
mov
orb
sarb
ja
mov
adc
fdivp
push
add
lcall
cmp
xchg
test
cmp
mov
pop
inc
fmuls
or
dec
call
inc
ret
int3
mov
inc
je
ljmp
mov
xchg
lret
push
shll
push
and
mov
and
sbb
test
sbb
add
lock
mov
cmp
repz
adc
daa
push
int
jge
and
inc
stos
or
xlat
jg
decl
inc
pusha
mov
lea
adc
adc
jo
mov
call
mov
push
lods
cmp
jge
lret
pop
jo
cmpsb
push
lock
outsb
aad
dec
out
fimull
hlt
call
je
outsb
ljmp
or
and
and
dec
sub
jecxz
decl
daa
pop
push
push
push
cmc
lods
rcrl
xor
sbb
fsubrs
sub
out
aad
and
ret
std
xchg
jecxz
into
test
jmp
lods
mov
pop
or
testb
sbb
sub
in
adc
jg
sub
mov
data16
test
popf
pop
push
jg
dec
and
jno
shr
inc
sbb
xchg
daa
scas
dec
xor
dec
sti
fcomip
push
jne
imul
adc
sub
adc
dec
mov
mov
jnp
mov
push
adc
push
loop
cltd
push
add
test
out
and
scas
pusha
into
pop
mov
jl
jle
lcall
inc
hlt
sbb
xchg
int3
xor
push
mov
addb
jg
leave
or
jmp
sti
lcall
sbb
ljmp
adc
push
dec
cmp
jg
mov
mov
inc
push
outsl
mov
jecxz
add
mov
mov
icebp
in
adc
push
or
sub
pushl
mov
dec
push
pop
lret
in
push
lods
stc
lret
call
repnz
fcoms
sti
mov
aad
pop
mov
or
loopne
xor
sub
mov
and
xchg
jo
je
cmp
std
test
pop
ljmp
jmp
movl
sbb
repnz
dec
out
cmpsl
mov
aas
sti
or
sub
decl
ja
xchg
mov
inc
cwtl
negl
xchg
inc
scas
sub
lahf
stos
cmp
je
xchg
mov
mov
es
dec
mov
lcall
fiadds
xor
sbb
mov
addr16
inc
mov
sahf
cmp
test
or
out
ljmp
popf
insb
or
into
int3
fbstp
push
roll
add
sahf
clc
dec
jg
and
inc
out
subb
mov
xor
xchg
and
repz
fnclex
add
aad
call
imul
divl
lods
xchg
lahf
and
and
bound
xor
jmp
cltd
test
sbb
mov
inc
dec
out
dec
pop
adc
push
lcall
jbe
or
push
sti
inc
sub
xor
push
lcall
xchg
icebp
or
mov
xor
test
or
dec
inc
popf
jae
stos
fnsave
out
nop
aaa
fdivr
ljmp
cmp
dec
jne
jmp
fs
cmc
adc
fwait
pop
lret
mov
add
out
int
push
mov
int3
cltd
aam
mov
inc
add
xchg
clc
jp
push
dec
andl
mov
mov
pushl
lret
fmull
mov
movsl
insl
cmp
sub
das
xchg
push
mov
aas
push
fucomip
xchg
add
loop
js
adc
fistps
sub
dec
scas
or
push
pop
fiadds
sbb
add
lret
push
jg
pop
sbb
and
xchg
movsb
mov
jmp
sti
outsb
shlb
sti
lret
dec
mov
xor
jg
pushl
or
lret
push
inc
aas
mov
push
xor
sbb
add
adc
decl
pop
fildll
sub
mov
mov
mov
les
sbb
fidivrl
fldenv
sbb
out
xchg
push
mov
cmp
sub
mov
ljmp
xor
xchg
dec
xor
shr
and
cmpb
mov
jl
inc
mov
lcall
fbld
xorl
mov
in
out
pop
gs
rcrl
mov
mov
jg
xor
mov
addr16
cmp
sbb
add
jnp
sbb
mov
mov
mov
je
cmp
or
jmp
loopne
fisttps
push
iret
outsb
movsb
or
and
mov
cmpb
gs
cli
outsl
das
mov
scas
mov
in
jp
les
sbb
jp
rclb
stc
scas
lret
mov
mov
inc
call
ljmp
sbb
xchg
and
adc
jge
cmp
push
fwait
pop
xchg
xor
into
jae
int
movsl
or
test
ret
ljmp
push
xor
scas
das
lcall
mov
imull
mov
ja
repnz
xchg
out
jg
scas
xchg
pop
je
inc
pop
scas
fwait
xchg
outsl
insl
imul
pop
scas
mov
or
cmp
incb
sub
xor
inc
jle
mov
xor
dec
cli
int
mov
mov
jmp
inc
cmpsl
cltd
xor
movsl
jge
push
cmovge
ret
movsb
adc
ds
cltd
sbb
inc
js,pn
lcall
iret
imul
xor
mov
aam
lret
lret
std
iret
jmp
mov
rol
jmp
dec
sub
jns
pusha
rclb
cmp
fnstcw
xchg
stc
and
call
sbbl
xchg
add
sbb
jle
jb
shll
xchg
decl
pusha
dec
daa
mov
lea
sub
sbb
inc
and
dec
in
scas
pop
dec
xchg
sbb
mov
lcall
push
or
addr16
ds
repz
add
inc
les
lods
or
push
sub
mov
lahf
mov
ret
xchg
push
sbb
ss
inc
push
out
xchg
addb
sub
jmp
push
hlt
flds
push
int3
dec
cld
cld
sub
jmp
pop
aas
adc
in
sub
add
add
xor
mov
icebp
cli
popf
bound
push
jnp
data16
nop
aas
fistps
sbb
cmp
jg
dec
dec
into
test
add
pop
add
or
rcll
cwtl
xorl
mov
test
xor
xchg
ds
xor
add
sar
cmp
mov
xchg
sub
inc
cs
mov
push
or
jae
xchg
fdivrs
pushl
pusha
mov
std
cmp
out
shr
jge
jne
insl
in
aaa
inc
inc
fnstenv
icebp
inc
xor
ror
mov
dec
bound
das
outsb
pop
fmuls
fnstcw
sub
sbbb
insb
ljmp
mov
jp
xchg
xor
jmp
ljmp
xchg
dec
cmp
jmp
dec
stc
add
data16
dec
xchg
inc
sti
mov
adc
in
mov
ljmp
iret
inc
and
jns
test
repz
pop
movsl
inc
or
jmp
imul
aaa
test
loop
cmp
lahf
lock
jbe
push
pop
inc
enter
mov
decl
and
lcall
inc
fidivrs
jle
xchg
jmp
push
jnp
push
sub
fs
cmp
iret
gs
in
dec
mov
sbb
ljmp
inc
arpl
adc
jmp
dec
scas
push
pop
lods
mov
pushl
push
jb
and
int3
add
movsb
test
add
and
jmp
addr16
mov
insb
clc
mov
sti
push
test
pop
jo
add
negb
jnp
xchg
cmp
scas
fimuls
ss
sbb
int3
push
add
xchg
int3
xor
pop
sbbl
decl
fcomps
dec
lcall
add
and
out
gs
and
mov
or
scas
xor
outsb
mov
mov
xor
decl
push
lcall
sub
sbb
push
ljmp
ja
sar
jl
loopne
and
cmpsb
pop
mov
push
inc
fmull
mov
jp
dec
sbb
in
sbb
and
into
sub
pop
mov
push
mov
jg
add
dec
add
mov
mov
scas
push
hlt
add
loope
shrb
imul
mov
call
hlt
xor
scas
lods
cltd
xchg
and
dec
pushf
lcall
sub
push
sub
pop
xchg
adc
adc
in
shr
lods
inc
call
std
fcmovnb
jg
mov
decl
sub
imul
or
sbb
in
and
adc
add
stos
scas
hlt
gs
fs
jge
cwtl
add
nop
movsb
lret
decl
or
sub
pusha
int3
aam
cmp
sbb
xor
aaa
lcall
adc
add
daa
std
xchg
sub
shlb
mov
mov
pushl
dec
call
test
les
cld
mov
ret
mov
dec
ja
fcmovne
mov
push
hlt
incl
test
scas
sbb
fs
dec
sbb
inc
push
lahf
mov
lcall
loopne
sbb
int3
outsb
fcompl
sbb
sbb
adc
cmp
scas
clc
stc
gs
mov
jmp
jbe
iret
call
movsl
stos
shlb
jecxz
lods
cmp
push
inc
xor
mov
inc
shlb
cmpsb
mov
call
jmp
in
push
lea
sbb
inc
inc
sysret
je
pop
ss
inc
jno
faddl
call
test
mov
jo
ljmp
pop
ljmp
inc
std
or
jge
daa
or
dec
orl
add
pop
jb
lds
jg
movsl
mov
pop
add
ljmp
daa
sahf
xor
jmp
mov
mov
push
aaa
das
mov
push
mov
ret
cld
clc
mov
lret
cmc
into
fisubrl
hlt
lock
incl
lods
mov
sbb
sub
lret
cmp
mov
scas
mov
cmp
add
sbb
push
pusha
jl
cmc
je
ljmp
mov
pop
push
pop
sub
test
clc
loope
in
mov
sbb
clc
mov
lods
cmpsl
fwait
pop
or
lock
ss
mov
mov
mov
ljmp
jb
daa
pop
nop
loopne
es
iret
jne
sti
adcb
ret
rcrl
pushl
mov
into
push
mov
cs
inc
cmp
roll
jg
pop
rcll
popa
adc
ret
jge
cltd
mov
andl
add
call
jne
fcmovnbe
mov
push
inc
fisttpl
xor
sub
mov
ss
mov
lcall
lods
sar
call
sbb
xchg
cmpsb
and
mov
jp
jmp
cmp
out
pop
enter
incl
mov
sbb
in
mov
sub
fldenv
or
pushl
and
in
jno
push
dec
call
repnz
mov
scas
int3
test
imul
or
xchg
xchg
js
adc
decl
outsl
bt
iret
sarl
outsl
or
sbb
in
jno
inc
movsl
inc
or
arpl
cmp
cmc
rolb
mov
movb
icebp
test
sub
in
jg
sbb
lahf
inc
sub
xchg
addl
xor
cli
dec
mov
cmpsb
sar
imulb
jo
mov
mov
pop
out
ret
cmp
dec
push
cld
ror
jbe
mov
lret
mov
mov
push
pop
jns
lcall
mov
push
xchg
add
mov
stos
cli
gs
jecxz
ljmp
inc
push
int
push
mov
mov
insl
sahf
push
pop
filds
clc
iret
sbb
pop
loopne
jmp
hlt
dec
push
insl
xchg
in
jnp
fstps
js
aam
rorb
cltd
jns
adcb
inc
add
push
mov
call
mov
test
xchg
fs
out
sbb
lds
fbld
lods
cld
fmul
shl
jg
ljmp
add
insb
outsb
je
stos
sub
jbe
mov
or
pushf
fwait
xchg
clc
mov
add
stc
das
adc
push
dec
jns
fs
pop
cmc
incl
or
or
pop
add
fwait
ljmp
mov
icebp
je
mov
dec
xor
out
not
ljmp
hlt
imul
sub
das
sub
jbe
sbb
icebp
push
jb
dec
das
test
aad
loopne
pop
sahf
cli
xor
xor
pop
movsl
aas
fwait
sbb
pop
ret
pushl
scas
std
mov
pop
in
dec
jl
xchg
adcl
fistl
lea
in
inc
dec
xchg
decl
outsl
pushf
mov
insb
adc
mov
imul
push
jo
push
int3
jge
daa
inc
lcall
rol
ja
jns
inc
xchg
jno
repz
cltd
subb
cmp
jge
stc
roll
mov
cmpsl
or
js
adc
out
lea
cmp
mov
decl
xor
aas
into
adc
icebp
setl
xor
fwait
pop
lods
xchg
inc
bound
outsb
movsb
cmc
stc
iret
xchg
ret
jle
je
mulb
or
in
ffreep
cltd
push
ljmp
mov
push
hlt
add
sti
shll
sbb
incl
sub
mov
out
sub
in
mov
xor
test
push
pusha
pop
cs
and
incl
je
lock
jb
repnz
sbbb
sbb
test
cmpsb
dec
fstl
decl
xor
es
adc
arpl
cmpsb
or
pop
push
sbb
mov
call
sbb
leave
xchg
ret
mov
ret
ror
lahf
cmpsl
cmp
and
sub
or
push
test
xchg
gs
mov
adc
insb
cmpsb
mov
hlt
aaa
or
jle
decl
and
jg
pop
call
or
stos
sbb
and
push
adc
lds
shll
inc
mov
mov
mov
nop
sbb
ret
mov
xlat
pop
sub
push
cmp
xorl
add
or
push
sub
cmp
push
xchg
test
inc
jle
jmp
mov
sbb
push
iret
les
xchg
hlt
pushl
jmp
inc
inc
xor
jno
dec
adc
push
shl
mov
or
lods
icebp
pusha
xchg
stos
fdivl
ljmp
jbe
cmp
stc
jno
out
jo
xchg
xor
pop
adc
arpl
aam
pushl
clc
into
mov
adc
in
add
adc
mov
out
jnp
sub
mov
xchg
add
shlb
idivl
lods
mov
push
adc
fcoms
cs
cmp
mov
dec
sbb
pop
inc
xor
cltd
push
mov
repnz
cs
in
call
sub
push
fiaddl
jae
lea
or
ljmp
test
mov
lcall
pop
mov
jg
sub
pop
mov
test
imull
out
mov
fsubrl
and
int3
jl
jl
and
sbb
addl
scas
or
jmp
daa
fidivrl
out
add
mov
cwtl
orl
mov
push
incl
inc
jg
sbb
mov
repz
lahf
data16
or
lcall
adcb
pop
test
push
sbb
mov
xchg
push
sbb
inc
stos
jecxz
loopne
pop
jmp
mov
fldlg2
mov
push
dec
cs
xor
or
mov
or
cltd
out
xchg
into
and
and
xchg
repnz
incl
call
call
neg
push
pop
and
inc
les
or
sbbb
or
and
mov
mov
call
rcr
mov
mov
into
jno
inc
pop
dec
cmp
pop
loopne
dec
jmp
scas
xchg
rorb
fimuls
pop
jo
xchg
fdivs
sar
aaa
pop
ret
sahf
hlt
out
push
add
mov
mov
decl
inc
aam
insb
pop
lret
into
or
pusha
test
fisttpl
pushl
xor
adc
aas
aad
insl
pop
leave
jbe
and
sub
xchg
sub
cmp
cld
and
and
sbb
cmp
sub
lock
lret
imul
decl
pop
loop
xor
fcompl
adc
in
cmpsl
mov
insb
mov
push
jmp
lret
jbe
mov
incl
rclb
push
xchg
inc
insl
cmp
jg
sub
mov
sub
cmp
fdiv
fisubl
jnp
lea
mov
mov
ss
inc
sbb
in
test
mov
loopne
mov
ja
cmp
xor
test
adc
pop
or
cli
call
repz
xor
outsl
add
int
mov
es
incl
mov
xor
pop
xlat
ror
and
cmp
inc
pop
jno
fisttps
in
xchg
nopl
mov
mov
xchg
push
insl
jnp
fnstenv
xchg
lret
fs
iret
or
xchg
mull
testb
ljmp
lcall
dec
inc
jns
cmp
mov
inc
jo
repnz
adc
call
push
movsb
mov
icebp
cmp
sahf
sbb
jle
xor
fs
decl
ret
data16
sbb
divb
jl
scas
icebp
fdivp
adcl
xor
mov
fnstcw
or
xchg
xchg
pop
cmpsb
or
ss
cmp
insl
loopne
pop
mov
xchg
into
cwtl
sbb
sti
into
lds
sub
pop
mov
std
int3
out
clc
jmp
push
adc
pusha
xchg
xor
push
mov
dec
pop
movsb
mov
pop
sbb
lcall
pop
adc
addl
dec
scas
leave
shr
fdivp
mov
push
incl
cmpsl
cmp
add
lds
sbb
in
jae
decl
shrb
out
mov
xchg
mov
aas
mov
cmpsb
in
jg
outsb
pop
rol
test
and
test
push
lret
movsb
scas
jecxz
inc
lret
lcall
mov
and
lcall
dec
push
sbb
cmpsb
aad
int3
int3
daa
or
cmc
rolb
in
or
aad
test
std
mov
mov
jecxz
pusha
repnz
xlat
and
in
mov
cmp
xchg
and
leave
ja
fwait
jle,pt
inc
fildll
scas
into
add
stc
fdivl
inc
jae
subb
xchg
cmp
arpl
lods
cmovg
into
push
inc
mov
repnz
xlat
mov
icebp
mov
cmp
mov
bound
bswap
into
es
pop
jp
int3
in
inc
mov
movsb
dec
sbb
scas
cli
sbb
or
std
and
lea
pop
nop
popf
repnz
and
cmp
dec
inc
sbb
pop
fdivr
sub
or
mov
das
inc
xchg
gs
mov
lahf
stos
ljmp
adc
push
outsb
push
sub
daa
inc
push
ret
fisttpl
add
ljmp
in
dec
mov
push
xor
pop
das
push
and
movsb
popf
or
cmp
fs
mov
mov
ljmp
mov
aad
inc
and
popf
mov
std
imul
push
scas
xchg
test
clc
xchg
mov
paddsb
inc
xor
jge
push
jg
pop
mov
jbe
movsl
fsubrl
jae
test
jmp
call
jmp
mov
and
push
add
lea
out
cld
ret
mov
jg
stos
outsb
data16
mov
ljmp
sahf
test
filds
pop
cli
rol
jae
testb
enter
jmp
dec
int
sbb
pop
cli
imulb
cmp
jbe
je
sti
shr
sbb
add
xchg
xor
int
pushl
push
arpl
js
popa
dec
cli
rorl
xor
and
sub
lea
test
aaa
add
hlt
dec
call
popf
lahf
jbe
jne
cmp
shrb
mov
shlb
pushf
cs
or
or
mov
repnz
sarb
scas
push
mov
jae
cmpsb
ret
in
jge
cld
ljmp
mov
xchg
into
dec
enter
lret
or
mov
stos
pusha
dec
pop
add
sub
xor
pop
std
mov
pusha
xor
cmpsl
mov
xchg
sbb
dec
ds
out
cltd
dec
add
inc
addb
cli
movsl
adc
push
inc
and
jge
std
mov
xorb
mov
or
adc
sbb
lcall
mov
pop
rcll
dec
pop
fs
dec
or
xchg
stc
mov
sub
imul
mov
and
dec
frstor
cmp
arpl
mov
adc
dec
ficomps
js
and
xchg
mov
jnp
jno
cwtl
leave
xchg
out
lret
inc
jg
mov
arpl
ror
mov
ss
decl
mov
mov
mov
cmp
xor
cmpsb
pusha
call
test
push
sbb
mov
out
sbb
xchg
xchg
inc
jmp
jecxz
in
fcmovu
push
xor
inc
cmp
outsb
enter
and
jne
pushl
and
lds
lods
fwait
cmp
pop
sbb
cmp
jmp
and
mov
jl
xchg
and
sahf
cld
pop
xchg
pop
mov
adc
jg
push
mov
push
push
mov
xchg
push
or
lods
jae
mov
incl
mov
andl
into
leave
or
sbb
sub
mov
fistpl
xorb
pop
repnz
loop
mov
pop
push
cmp
scas
cmpsb
hlt
je
scas
cmpsl
and
movb
sar
pushl
cmp
pop
mov
test
flds
aas
xor
ljmp
lds
icebp
jae
insl
roll
and
adc
test
pushf
cmc
sub
imul
mov
jle
adc
jmp
arpl
push
adc
pop
lods
mov
icebp
call
sub
mov
rcll
outsb
cmp
mov
mov
pushl
cltd
sarl
daa
sbb
lahf
rcrb
fistpll
and
dec
bound
mov
xor
mov
fists
mov
out
inc
push
cmp
rorb
imul
loope
dec
xlat
inc
mov
sbb
rclb
jge
xchg
dec
sbb
add
cwtl
add
lods
outsl
ljmp
decl
jne
adc
cmp
add
pop
pushl
push
imul
lods
outsb
lret
imul
ljmp
test
sbb
loope
test
arpl
inc
xor
mov
and
xchg
add
fcomip
mov
cmp
pusha
adc
push
stos
and
enter
push
cmc
incl
idivb
push
xor
mov
incb
es
out
pop
xor
push
and
pop
mov
test
std
pushl
rcll
lcall
int
rcrb
inc
and
jg
in
push
cmc
ss
xlat
jecxz
mov
ss
daa
imul
cmpsl
xchg
ljmp
decl
mov
mov
jmp
fistl
adc
or
orl
cli
xchg
jmp
jns
xor
pop
lds
cmp
dec
daa
add
iret
lea
mov
out
mov
pop
cmpb
add
mov
mov
movsl
jo
aaa
cltd
cli
dec
mov
testb
sub
cmp
sbb
pop
xchg
scas
jae
xchg
decl
int
xchg
xor
dec
or
out
cli
lahf
pop
notb
or
xor
xor
push
jmp
cmp
rcr
sub
call
push
mov
mov
push
ret
push
imul
adc
sub
pop
sub
or
popf
mov
fs
sub
push
dec
jo
gs
pushl
call
mov
iret
stc
call
mov
aas
xor
jmp
push
push
imul
mov
pop
sti
test
add
mov
test
dec
sub
xchg
inc
pusha
aas
insl
and
ja
cli
sti
xchg
xchg
les
add
fcomip
stos
cmpsb
aaa
fidivrl
and
jmp
call
sub
push
ficomps
cmp
mov
push
xchg
cs
add
pop
lods
js
mov
push
mov
mov
mov
pop
mov
push
bound
xor
jae
ret
mov
mov
loop
xor
mov
mov
das
into
or
adc
mov
and
sbb
jbe
xlat
popf
lods
pop
mov
jns
pop
xchg
dec
mov
jmp
sbb
push
in
popf
jns
leave
jmp
dec
cmc
inc
xchg
mov
xor
pop
cmp
nop
incb
outsl
dec
popf
pop
or
mov
ret
jmp
lcall
mov
insl
aad
cmpsb
dec
das
mov
mov
call
sahf
cli
mov
lahf
jbe
adc
repnz
test
mov
bound
cmp
xchg
negb
dec
scas
jb
push
jo
andb
xchg
or
cmc
pushl
mov
imul
xchg
mov
push
pop
decl
dec
xchg
cld
call
inc
sub
jg
ret
pop
and
arpl
and
pop
outsl
aad
in
xchg
jno
jmp
jle
mov
fldt
incl
and
sti
fstps
push
xchg
xchg
in
call
mov
mov
scas
lock
dec
mov
mov
test
cwtl
cmc
sar
push
js
pop
rorb
push
pusha
xor
decl
inc
push
jb
test
mov
fs
xchg
push
scas
jno
hlt
ret
lcall
call
mov
bound
cmp
lcall
jb
cmc
out
cmp
insl
pusha
aam
or
insl
or
push
push
xchg
adc
mov
jmp
int
or
pushl
mov
rcrl
add
insb
dec
ljmp
lcall
inc
imul
movsl
mov
cwtl
inc
xchg
repnz
shlb
adc
out
outsl
cli
jmp
add
jmp
push
je
aam
out
loopne
je
mov
pop
jg
repz
inc
xor
shl
iret
jnp
repnz
cs
and
pushl
lret
les
mov
mov
add
sub
mov
and
pushl
subl
repz
dec
cmp
aam
int
xchg
inc
incl
lods
jmp
xlat
mov
mov
xor
fstpt
cld
insl
fs
lcall
pop
pop
pop
dec
daa
sub
sbb
xchg
cmp
ret
dec
movsb
call
stc
cmc
mov
fwait
test
xchg
pop
leave
cmpsb
js
xchg
or
xchg
and
dec
icebp
sub
mov
arpl
inc
mov
mov
sahf
out
xchg
loop
dec
stos
xchg
xor
mov
lock
lahf
inc
test
test
push
adc
mov
in
fmul
in
jbe
movsb
loopne
adc
mov
mov
add
push
aaa
lods
dec
ljmp
jecxz
loopne
out
and
jno
adc
decl
jmp
lods
xchg
mov
pop
ds
xor
imul
and
sar
and
bound
add
mov
inc
xchg
mov
jnp
sbb
sub
fisubl
adc
cwtl
lcall
inc
push
dec
leave
in
jmp
faddl
ja
ds
in
xchg
mov
jg
or
lret
mov
push
xchg
loopne
jmp
sub
scas
loop
ljmp
repz
xor
decl
stos
test
and
xchg
mov
in
cmc
xor
out
jg
push
cmpsb
mov
ret
cmp
xor
or
fwait
outsl
daa
push
in
xor
pop
pop
or
ljmp
fisttps
sub
adc
sub
popa
fsubs
clc
ljmp
adc
test
idiv
aam
imull
outsb
fwait
mov
fldl
inc
cmp
decl
pop
sub
ror
jmp
cmp
roll
stos
mov
ljmp
fwait
pop
jae
adcl
dec
adc
test
aad
mov
cmp
adc
jl
or
icebp
fwait
cwtl
int
mul
mov
loopne,pn
jg
jo
rcrl
xchg
push
fisubrs
push
mov
jo
lcall
lock
shll
scas
cmp
loope
jg
mov
inc
das
xor
jbe
shlb
pop
ja
pop
sti
or
popa
cwtl
cmp
fildll
inc
mov
les
xchg
jo
lret
jb
lods
pop
lcall
leave
les
jae
push
sarb
sahf
xchg
ficoms
mov
in
mov
fcomip
xor
mov
es
mov
xchg
mov
decl
clc
mov
aaa
sbb
dec
mov
lret
jno
push
in
idivb
fstpl
mov
test
mov
or
inc
push
push
popf
repz
aas
bound
loope
push
lahf
sbb
inc
add
mov
add
call
sbb
out
fisttpll
sub
inc
and
test
jmp
adc
and
dec
pop
pop
add
addb
addb
or
add
out
movsb
mov
add
mov
add
or
push
jg
add
pop
push
xchg
js
and
add
add
in
lods
nop
mov
addb
inc
inc
test
pop
mov
push
nop
cmp
adc
xchg
enter
jle
rdpmc
insl
pop
sub
add
setle
imul
aad
dec
xor
pop
mov
pusha
or
jnp
xchg
iret
fildll
push
daa
add
xchg
dec
and
cmpsl
push
and
jnp
jnp
es
push
movsb
push
movsb
inc
scas
push
and
into
iret
cmc
add
test
and
imul
ficomps
push
push
inc
pop
pop
add
mov
lods
stc
out
pop
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
lcall
add
insb
or
lret
imul
imul
imul
mov
mov
adc
lcall
int
pop
stos
pop
stos
mov
rcl
add
aam
push
mov
push
shll
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
outsb
or
mov
outsb
pop
push
ret
je
fidivrs
out
push
sti
in
cmpb
mov
xorb
ljmp
mov
jg
movsb
push
add
mov
sbbl
push
mov
cmp
arpl
push
push
push
add
jne
int
xor
push
ret
add
fsubp
cmpsl
push
mov
push
pop
dec
add
jbe
push
data16
ficomps
jo
xchg
cs
push
jge
mov
shlb
lret
stos
aas
add
out
mov
push
push
xlat
jne
add
cmpb
aad
push
xlat
ja
js
aam
jge
push
jns
push
jp
jp
sub
mov
jns
ja
sub
push
fldl
ret
jmp
mov
adcb
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
cmpsb
hlt
add
fadd
out
repz
out
push
hlt
clc
stc
cmp
repz
sti
cld
std
mov
ret
jo
add
mov
jae
add
cltd
int3
data16
popa
push
add
pop
xor
add
pop
add
add
les
mov
test
mov
out
pop
addb
push
mov
add
add
or
or
scas
jge
stc
test
test
or
push
pop
cmp
sbb
adc
insb
cmpsb
movsl
pop
adc
lods
add
pusha
aaa
punpcklbw
femms
lods
lods
pop
fcmovne
and
scas
add
scas
insl
shrl
lods
pop
pop
adc
and
pop
cmp
lods
adc
sbb
jbe
scas
sbb
scas
scas
scas
scas
int
enter
mov
mov
and
mov
pop
push
mov
and
and
dec
and
notb
enter
mov
mov
and
mov
sub
push
and
mov
pop
sub
pop
sub
mov
mov
incb
sub
lret
and
mov
repnz
push
es
xor
pop
aas
cmp
jbe
cmp
pop
in
ljmp
fdivs
cmpsb
add
mov
pop
xor
xor
push
or
add
jg
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
lcall
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
add
test
mov
xor
jbe
cmp
jl
jge
jno
jg
mov
add
pusha
pop
pushw
dec
dec
cmpb
jo
incl
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
movsb
repnz
je
push
bound
js
imul
cmp
je
or
adc
xchg
lret
jo
dec
add
add
pusha
outsb
pop
pop
scas
aas
inc
movsb
adc
idiv
jge
jb
mulps
add
push
mov
mulb
cmpsb
push
mov
xor
xor
ja
push
ja
push
mov
cs
xor
mov
pop
in
push
dec
adc
pop
jbe
dec
sbb
fnstsw
mov
xchg
jo
ret
pop
push
inc
mov
cmp
mov
inc
inc
sti
sbb
enter
xchg
jp
inc
push
popf
inc
jle
pushl
xchg
jno
lret
push
bound
mov
aas
out
cmp
mov
inc
push
sahf
mov
incl
mov
add
outsb
add
xchg
xchg
pop
push
test
cmpsb
mov
cmpsl
mov
movsb
jae
add
jb
shll
das
pop
push
mov
push
rorb
add
lcall
fwait
testl
into
dec
mov
add
ja
sahf
adc
jg
jbe
fistpl
imul
mov
int
stos
push
add
and
es
js
mov
testb
mov
shrl
insb
pop
outsb
lret
repz
outsl
ror
push
ds
add
jge
push
jg
fiadds
call
add
mov
add
jle
add
bound
out
arpl
lcall
iret
sahf
jae
jnp
mov
jb
out
pop
or
jg
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
imul
adc
faddl
pop
fwait
mov
dec
addb
sbb
test
test
mov
test
in
mov
push
xchg
into
nop
and
out
xchg
in
xchg
lock
sub
xor
in
push
sub
imulb
insl
mov
roll
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
jl
lods
es
pushf
cmp
imul
aam
jle
lock
nop
loop,pn
jo
test
sahf
out
mov
xchg
jp
jbe
stos
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
pop
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
mov
add
add
pushl
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
inc
fs
das
pop
ljmp
mov
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
cli
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
addl
out
push
rolb
add
shlb
incl
push
push
add
cmc
repz
mov
ret
sub
jbe
add
aas
add
xchg
pop
cmp
test
add
mov
add
mov
mov
mov
fnstsw
repnz
inc
add
repz
add
add
mov
push
in
lcall
jge
push
arpl
mov
push
push
ljmp
fsubrs
lret
js
into
xchg
add
mov
fistpll
loopne,pt
test
scas
xchg
js
in
and
out
mov
nop
sub
sub
xchg
push
sub
mov
fsts
nop
sub
xchg
xor
xchg
xor
cmp
outsb
lcall
leave
jbe
div
fisubs
sahf
in
fidivrl
shlb
iret
push
lret
inc
adc
loopne
push
std
into
incb
inc
sub
imul
mov
insb
mov
add
test
jg
jle
jge
inc
inc
add
add
inc
adc
dec
dec
jmp
incl
or
pop
or
add
push
dec
or
adc
cmp
in
outsl
xchg
adc
dec
or
add
push
adc
sar
dec
inc
add
or
pop
pop
cmovg
sti
mov
add
sbb
inc
adc
fscale
dec
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
pushl
cs
xor
sub
sub
aam
stos
push
lods
mov
addb
mov
pop
subl
mov
mov
andl
mov
push
outsl
push
mov
add
adc
add
pusha
addb
add
mov
pusha
pop
adcb
into
incl
roll
push
inc
push
clc
sbb
sbb
xor
scas
push
incl
outsb
sysret
adcb
mov
add
testb
stc
sysret
and
jns
in
lock
or
or
or
adc
jg
adcb
sub
aaa
outsl
and
mov
data16
jg
test
inc
or
mov
into
jg
lods
pusha
mov
cli
mov
cli
shlb
mov
or
push
or
cli
pusha
and
push
xchg
adc
jg
sti
jg
or
mov
sub
mov
or
jg
push
stos
add
jg
and
adc
adc
sbb
cmpsl
notb
lods
and
push
cld
jg
add
adc
jo
jle
and
std
ja
jg
inc
dec
sub
jg
repnz
dec
out
jg
mov
pop
mov
jle
lods
or
add
adc
fs
incl
adcl
lret
dec
xor
incb
xor
sub
sub
mov
nop
incl
add
xor
jg,pt
xchg
sbb
push
jbe
insb
mov
add
add
jmp
cltd
lea
call
add
jmp
lods
pop
mov
stc
jle
lret
imul
addr16
orb
and
mov
dec
xorl
cmp
jbe
add
shlb
data16
add
push
pop
sbb
outsb
imul
xor
bound
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
ljmp
sbb
test
enter
test
test
pop
jle
lcall
scas
test
mov
fnstenv
mov
push
push
jne
pop
push
jbe
dec
or
push
push
jp
fwait
adc
dec
jbe
mov
add
mov
mov
popf
jmp
jbe
es
adc
test
push
outsb
notrack
jp
test
jle
inc
jbe
test
incl
ss
push
or
call
dec
ja
xchg
test
testb
fiadds
mov
mov
fldt
dec
mov
and
sahf
inc
out
mov
xchg
sbb
scas
cs
aas
popf
inc
push
pushf
push
inc
outsb
fwait
cmp
data16
or
xor
xchg
xor
mov
push
sub
sub
nop
daa
ss
out
mov
dec
xor
nop
fstpl
pushl
push
or
push
xor
dec
add
pop
fnsave
xor
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
adc
push
in
movb
ja
push
jg
xchg
aaa
mov
add
and
mov
add
leave
les
test
adc
mov
add
inc
mov
push
repnz
adc
or
inc
aas
jns
mov
push
adc
pop
push
orl
lea
iret
sbb
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
adc
xor
in
add
mov
aam
jne
decl
or
add
xchg
cmp
jmp
xchg
adc
push
push
test
jnp
push
push
mov
xor
adc
jle
sti
pop
adc
add
into
arpl
call
add
mov
incb
add
pop
jge
adc
xchg
pop
lcall
or
mov
jge
call
cld
pop
in
sbbb
adc
cmpsl
sbbb
out
adc
xchg
pcmpeqd
adc
lcall
or
loope
push
push
mov
mov
call
inc
flds
incl
decl
decl
sub
gs
push
addb
pop
decb
cmpsb
pushl
lcall
mov
scas
dec
jae
inc
outsb
decb
mov
and
inc
clts
add
sub
lods
iret
jle
adc
stos
insl
xor
sti
out
jbe
push
inc
xchg
cmpsb
push
incb
dec
or
pop
push
jb
arpl
incl
adc
mov
arpl
fdivrp
mov
sub
push
sub
jbe
xchg
pop
sti
push
std
ljmp
and
mov
call
inc
xor
mov
sub
push
inc
test
arpl
xlat
jg
mov
idiv
loop
push
dec
dec
xchg
and
sbb
lcall
incl
ficoml
pop
pop
inc
seto
ficoms
aaa
mov
stos
push
push
shll
jecxz
mov
roll
dec
testl
incl
ljmp
movsb
ljmp
lahf
inc
fidivl
inc
inc
pop
inc
pop
fildll
insl
mov
movsb
dec
fidivs
push
popf
inc
cmpsb
dec
dec
inc
xlat
xor
fs
dec
mov
mov
add
and
insb
ds
push
out
push
shrb
rcl
outsb
shrb
dec
rorb
jb
repnz
ja
sub
pop
daa
outsl
pop
dec
push
dec
imul
lcall
jne
push
cs
call
mov
dec
pop
add
ficompl
int
repnz
call
popfw
cmp
aas
cltd
and
ss
cwtl
xor
dec
cmpsb
push
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
xor
xlat
push
xchg
xchg
push
fisubrs
ja
mov
ljmp
dec
sub
pop
pusha
fimuls
stos
movsb
jg
push
or
std
faddl
addr16
fstpt
push
jnp
jp
or
jl
cmpsb
shrb
or
jl
push
jge
int3
jle
fnstcw
es
jbe
adc
fidivrl
push
dec
int
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
mov
out
add
in
add
int3
outsb
nop
test
mov
stc
subb
outsl
lods
cmp
nop
xlat
push
adc
adc
pop
and
mov
addl
es
addl
xor
sub
sysret
jg
and
xchg
out
push
sub
iret
aaa
aam
aaa
out
mov
cli
pushl
test
clc
push
idiv
push
mov
out
jb,pt
sub
jg
mov
icebp
dec
pop
out
push
push
dec
cld
daa
jno
push
adc
fstpt
mov
icebp
xchg
mov
je
daa
jg
mov
adc
enter
loope
xchg
adc
bnd
jp
es
xchg
out
subl
aaa
incb
in
rorb
in
mov
sbb
jg
dec
in
sarb
adc
dec
and
xor
jge
idiv
lea
push
fsub
test
push
inc
push
int3
mov
jle
mov
fisubl
jne
out
jg
arpl
clc
jbe
and
push
pop
push
pop
aam
in
into
push
pop
or
scas
decl
push
xchg
mov
lcall
jns
pop
in
call
push
jmp
xchg
jmp
mov
push
xchg
mov
cmp
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
ja
aas
test
adcb
cmp
imul
movsl
insl
mov
sbb
loop
pop
mov
cli
movb
add
sbb
push
jmp
sbb
or
xchg
push
xor
mov
add
lret
adc
ss
adc
sub
insl
cli
inc
test
pop
push
sbb
push
sbb
xor
in
push
and
outsb
sbb
push
sbb
outsb
or
mov
and
call
mov
add
mov
adc
fists
bound
push
xor
rolb
pop
inc
add
inc
push
gs
jo
add
add
dec
insl
orb
sbb
lcall
and
sub
shll
sbb
sbb
xchg
pop
jnp
dec
loop
mov
pop
pusha
xor
xchg
pop
lock
sahf
adc
ret
aam
jo
das
popf
ds
sbb
sbb
add
imul
mov
push
adc
insl
aas
sbb
lcall
xchg
dec
mov
sbb
adc
pop
inc
es
es
add
aad
add
sbb
cmp
mov
sbb
mov
adc
add
insl
and
insl
pop
pop
movsl
pop
popf
in
xlat
push
shlb
in
insb
inc
xlat
xor
jb
mov
and
add
mov
addb
rol
add
add
xor
inc
filds
mov
bound
gs
pop
mov
add
add
xchg
pop
jo
add
aas
imul
dec
idiv
sbb
xor
jae
push
cmc
inc
stos
and
jno
pusha
fists
outsl
shrb
jo
xor
dec
or
loop
and
cmpsl
mov
xor
pop
sub
xchg
dec
adc
fwait
ljmp
pop
pop
dec
insb
out
add
incl
sub
sbb
sbb
in
pop
dec
cmp
insb
jne
addr16
push
mov
add
or
inc
mov
inc
sbb
push
inc
or
lea
arpl
insl
adc
fistpl
je
mov
add
xchg
mov
fcoms
fidivl
sbb
popf
xchg
and
popa
xchg
mov
pop
aad
cmp
icebp
jne
je
jne
add
add
divb
pusha
sbb
mov
jo
je
push
dec
in
and
mov
xchg
sbb
orl
mov
push
mov
xchg
cmp
add
inc
add
add
jbe
add
imul
addl
pop
push
push
fwait
popa
pop
adcl
dec
or
imul
sbb
push
adc
jb
sub
push
mov
cwtl
movl
cmp
imul
je
jbe
or
bound
mov
mov
cmp
and
xchg
xchg
sub
sbb
or
orb
push
sbb
add
and
xor
rorb
add
xchg
pop
inc
xor
add
sub
test
inc
mov
outsb
inc
pandn
jae
sub
xchg
xor
add
push
scas
xchg
push
pop
lods
ret
out
dec
das
out
adc
ja
mov
pop
test
pop
inc
and
adc
loop
mov
xor
mov
push
jne
mov
loop
inc
mov
aas
loopne
inc
outsl
jae
loop
outsl
clc
jp
xorl
sub
push
cmpsl
push
add
push
bound
fisubl
ds
dec
mov
inc
arpl
mov
mov
sub
xchg
popf
aas
movsl
cmpsb
mov
xchg
loopne
pop
sub
mov
cmp
sbb
xor
test
mov
adc
fbld
push
inc
aaa
push
push
subb
pop
imul
xchg
insb
jne
arpl
inc
sbb
jae
imul
and
es
sbb
and
and
imul
xchg
mov
sub
imul
inc
jne
fs
or
xor
popa
rcpps
js
sbb
xor
jb
inc
inc
mov
push
popa
xchg
or
fs
jmp
imul
lds
push
sbb
push
xorl
fdivs
push
cld
sub
mov
add
inc
cmpsb
in
push
mov
jno
je
add
inc
add
xchg
add
push
cmpsl
out
push
jg
mov
sarl
lock
push
mov
xorl
or
ss
jb
xor
xor
ficomps
pop
xor
mov
adc
popa
or
xchg
mov
dec
nop
pop
inc
sbb
pusha
mov
and
icebp
aaa
ret
inc
je
insl
dec
outsb
dec
std
lea
xor
das
xor
inc
sub
fcmovu
out
push
js
add
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
shll
add
movlhps
xor
rcll
mov
xlat
xor
mov
push
loope
repz
nop
push
in
enter
movsb
outsl
xorl
and
lods
sub
inc
outsl
inc
lcall
dec
test
insb
sbb
out
test
fwait
shlb
ficomps
stos
daa
es
out
dec
adc
into
loope
inc
cwtl
mov
mov
jmp
inc
insb
scas
cli
test
push
mov
outsb
xorl
sbb
out
xchg
les
inc
loopne
or
sbb
add
subl
xchg
pusha
push
mov
mov
movsb
add
and
lods
andb
je
outsw
cmp
in
sbb
jge
les
mov
shlb
push
xor
lods
or
hlt
and
ret
push
jbe
xchg
sbb
push
push
pop
pop
jle
mov
xlat
inc
inc
xor
mov
cmp
sub
adc
lea
ret
mov
popw
xlat
add
xor
loopne
mov
xor
dec
adc
inc
test
xor
add
push
enter
and
aaa
jo
cmp
outsl
and
mov
push
cmpsl
inc
ret
push
mov
in
lods
outsb
jbe
cmpsl
mov
aas
push
adc
inc
pusha
and
mov
in
mov
xchg
xchg
pop
xchg
dec
insl
dec
inc
push
mov
sub
fs
rol
pop
shll
cld
xchg
ret
push
addr16
mov
sub
test
pop
test
popa
push
xor
jmp
arpl
mov
inc
cmc
inc
sbb
mov
inc
push
mov
fistpl
xchg
mov
cmp
jns
sbb
and
inc
xchg
push
out
push
mov
cmp
daa
outsb
pop
pusha
push
popa
fistps
fildl
inc
cwtl
sub
pop
add
lods
mov
xchg
jbe
enter
and
adc
push
mov
outsl
cmp
sbb
push
inc
jecxz
xchg
xor
incl
sub
xchg
xor
sbb
rclb
or
cmp
jo
pop
dec
push
sub
outsl
out
inc
test
dec
dec
ja
imul
pop
xor
jo
aaa
sub
loope
mov
sub
sbb
cmp
ss
mov
cmp
leave
pop
add
dec
repnz
roll
cli
add
daa
adc
cmpsb
adc
pop
adc
mov
and
add
nop
mov
add
sbb
sahf
insb
pop
cltd
push
imul
dec
dec
sbb
rorb
pop
ds
clc
add
aaa
rcll
and
add
mov
push
add
enter
cmp
test
pushfw
push
xlat
shrb
and
hlt
dec
xchg
loope
add
jp
push
ficompl
dec
inc
add
ss
or
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
