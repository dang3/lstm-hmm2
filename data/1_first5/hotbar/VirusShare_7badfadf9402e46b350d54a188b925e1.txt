divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
add
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
dec
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
xchg
adc
push
jge
pusha
outsl
adc
test
mov
fcomps
sub
dec
xor
dec
and
or
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
sbb
add
push
jle
call
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
xchg
mov
call
lcall
dec
and
add
dec
adc
pop
xlat
fistpl
scas
push
sbb
push
or
sbb
push
scas
bound
fisttpl
sahf
add
push
jnp
mov
aas
fadd
push
pop
divl
mov
pop
pop
push
jno
lahf
out
aad
pop
add
pop
or
push
push
sbb
outsb
or
sub
icebp
mov
mov
cmp
push
mov
clc
nop
mov
aaa
xchg
xor
sarl
loop
ficoml
push
mov
cmp
insl
je
or
jge
insl
ds
fildll
cli
mov
mov
xor
mov
pop
ret
push
push
das
push
cltd
inc
rol
push
pop
jae
popf
popa
cmpb
int
inc
sub
mov
ja
inc
clc
sub
enter
loopne
jge
push
inc
ss
push
add
or
cvtps2pd
outsl
jo
das
lods
inc
test
jne
push
pop
testl
jmp
add
or
inc
clc
jg
mov
adc
adc
ret
pop
dec
jo,pt
add
jp
pop
movsl
pop
xchg
or
push
and
in
inc
decl
sub
push
mov
sar
imul
cld
ja
adc
pop
clc
stos
push
dec
dec
clc
add
push
loop
shr
adc
inc
sbb
push
in
sbb
cmpsb
adc
or
aam
out
sbb
enter
leave
ret
mov
ret
adc
cld
clc
fistpll
iret
jle
mov
cmpl
idivl
pop
push
out
jmp
push
cmp
jge
sti
testb
push
jle
add
pop
cltd
jge
mov
push
aam
push
sahf
xchg
add
push
sub
or
push
jne
test
incb
add
xor
xlat
adc
jbe
mov
add
ds
inc
add
inc
add
lea
push
add
push
push
lea
cmp
inc
or
adc
xor
into
mov
aam
pop
insb
hlt
cmpsl
cmpsl
jo
fsubrs
out
sbb
pop
adc
cld
fdiv
jbe
mov
stos
mov
decb
ret
imul
jge
test
jle
fld
ficomps
cmp
mov
inc
mov
fistpl
jle
sbb
pop
xchg
pop
jmp
push
push
or
lock
loop
cmp
and
sub
fsubr
mov
inc
sbbl
addl
mov
xchg
arpl
pop
sbb
lcall
sbb
adcb
and
sti
jbe
push
and
cmp
or
not
sbb
cmp
notb
shl
cmpsl
cmp
adc
cmp
jle
mov
inc
or
or
cmpl
je
push
cmp
cmp
jae
push
cmp
push
mov
inc
xchg
pop
pop
adc
ror
or
add
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
adc
push
push
sarb
cld
rcrl
mov
jmp
xchg
call
insb
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
add
incb
rcrl
or
cmp
call
stos
sub
lea
cmp
jne
push
push
sti
mov
fdivp
push
push
pusha
in
js
scas
push
mov
mov
or
pop
pop
pop
pop
mov
push
mov
roll
test
mov
jge
mov
jne
cmp
add
sub
pop
iret
ja
mov
cmp
and
jno
add
jae
mov
cli
add
outsb
push
mov
nop
sub
imul
lahf
cmc
push
mov
pop
fdivl
lahf
testb
sbb
in
stc
or
add
imul
popa
jne
stos
or
pop
push
pusha
jo
mov
add
nopl
cli
movl
or
push
incb
dec
lea
aaa
clc
sbb
xchg
push
fisubs
out
out
fs
sbb
pop
add
dec
lcall
lock
mov
jb
push
lea
lods
enter
xor
cmp
cmp
mov
push
mov
xor
or
mov
outsb
daa
cmp
pop
sub
mov
mov
cs
loopne
scas
aas
roll
xchg
add
push
cmp
je
fidivrs
stos
bound
adc
or
jne
call
fisubl
jl
pop
xlat
mov
or
adc
cmpb
push
leave
jb
mov
out
sarb
loopne
push
fucomp
pop
cmp
cmp
fcmovbe
fcmovb
dec
or
mov
out
in
out
fildll
push
sbb
call
arpl
mov
push
add
or
jl
jg
xor
or
mov
outsb
int3
push
sbbl
or
stc
sub
add
or
and
push
rorb
or
dec
sub
add
nop
xchg
lock
push
ja
lock
mov
ret
pop
mov
mov
lahf
insb
out
xchg
loopne
addb
pushf
jb
lods
sbb
out
icebp
adc
adc
xor
cvtps2pi
shlb
adc
sub
add
mov
inc
lea
lods
ret
shrl
mov
mov
fistpl
insb
call
insl
or
out
popa
inc
lret
xchg
jo
leave
lahf
addr16
push
aas
mov
inc
or
push
mov
dec
in
sub
and
les
inc
and
mov
add
sbb
mov
js
jecxz
fs
sub
mov
adc
lahf
push
xchg
int3
or
jne
pop
inc
mov
sarb
es
orb
arpl
sub
lcall
mov
cmc
sbb
rorl
sub
jns
pop
and
push
test
insb
outsl
js
and
adc
popa
add
sti
clc
push
je
add
je
lock
es
fcomps
sar
inc
adc
jg
aad
andb
add
nopl
test
push
sarl
pop
imul
mov
mov
mov
bound
cmp
out
das
push
and
cmpb
mov
test
adc
jl
jo
jmp
or
incl
sbbb
adc
repz
aaa
mov
add
sub
and
repnz
and
outsb
sarb
jl
ret
pop
adc
fmuls
ja
fcmovnu
mov
xor
pop
sub
pop
mov
out
or
dec
rorb
inc
xchg
mov
fs
xor
enter
xor
sbb
xlat
and
gs
lcall
je
cmp
andl
or
add
or
push
or
push
sub
mov
std
pop
pushf
and
in
addb
jo
adc
sub
sub
jo
int3
mov
dec
add
adc
jb
iret
inc
out
and
sbb
je
scas
adc
lahf
xchg
mov
mov
sub
scas
sbb
adc
push
push
or
mov
xor
push
in
mov
clc
lea
repnz
mov
push
insl
in
sub
lcall
add
cmp
cmp
dec
xor
pop
xor
rclb
in
jle
jo
jne
lods
or
sub
mov
punpckhbw
das
push
loop
into
movsl
ss
imul
fadd
fistpl
test
popa
jbe
dec
std
in
test
add
push
adc
repz
fsubrp
sub
push
mov
push
mov
into
fsubrl
or
push
pop
sbb
push
adc
ret
sbb
mov
mov
ret
jno
bound
cmp
inc
jl
loopne
lods
lock
xchg
and
imul
aas
mov
fidivrs
aam
jge
aas
mov
push
push
cld
das
cmp
push
push
and
lock
add
loopne
clc
nop
dec
lock
rclb
fldt
mov
ja
push
aam
jnp
mov
cmp
test
push
pop
pop
adc
add
in
jecxz
cmp
stos
push
ljmp
mov
jmp
xor
push
pop
js
inc
pusha
je
sbb
pop
in
sub
mov
push
xor
add
js
fnstcw
dec
and
lods
stos
mov
test
dec
enter
loopne
in
test
mov
push
sbb
scas
jp
sub
fistpl
fistpl
jae
ret
je
popf
shll
push
stos
and
outsl
fcmovnb
shlb
nop
jb
gs
nop
les
xor
dec
sahf
inc
or
pusha
dec
mov
adc
push
jo
sbb
lock
xor
sbb
mov
pop
jnp
and
pop
lock
push
nop
or
in
enter
push
shlb
inc
cmpsb
ror
cmp
inc
aad
jl
cwtl
xor
lea
jno
pshufw
mov
fldcw
fdivp
push
xor
sub
les
inc
mov
hlt
fcoml
xor
mov
jge
out
sti
cmpsb
xchg
out
push
mov
pop
and
mov
mov
and
mov
lea
test
adc
and
cwtl
mov
enter
jo
jns
mov
enter
pop
les
xchg
and
les
adc
mov
dec
dec
arpl
xchg
and
iret
sbb
xchg
inc
movsb
sbb
jmp
shlb
inc
scas
movsb
insb
sbb
in
sbb
xlat
mov
shll
and
jmp
inc
rcrl
sub
mov
ss
hlt
sbb
jnp
jo
loopne
mov
in
jge
jmp
jle
adc
sub
push
xchg
test
fisttpl
pusha
and
push
sbb
adc
lds
add
add
sbb
adc
jnp
hlt
lock
adc
and
add
mov
in
js
btsl
and
push
mov
and
and
mov
sti
movsb
and
push
aaa
adc
xchg
jmp
inc
je
jo
xchg
call
clc
fs
lods
adc
xchg
fsubl
je
jne
add
test
xor
outsb
pop
je
sub
test
ret
and
pop
dec
loopne
int3
adc
push
ja
shr
aam
add
mov
xor
adc
aad
mov
nop
sub
push
jle
dec
xor
add
jne
mov
fcmovne
push
xlat
pop
enter
jmp
loopne
insb
roll
aad
xor
shll
mov
adc
test
push
or
lcall
or
adc
xor
mov
call
das
xchg
insl
test
or
sbb
shll
mov
mov
push
scas
jmp
push
lea
and
or
add
mov
pop
jecxz
inc
xchg
sarl
test
mov
mov
jo
and
pop
push
adc
icebp
aad
insb
inc
adc
shrl
inc
xor
jno
shrl
sbb
out
xchg
pop
out
into
adc
cmc
es
inc
adc
shlb
idivl
add
sub
push
add
push
or
cltd
cmp
subl
fs
push
xor
sbb
add
fistpl
sbb
pop
inc
jne
pop
sub
cmp
mov
sbbb
xor
push
xchg
in
cmpsl
jl
popf
sahf
sbb
jecxz
or
cmpb
adc
sahf
les
mov
and
nopl
xorl
fs
testl
imul
add
stos
push
xlat
inc
push
push
or
cmp
xor
inc
ds
ret
pushl
adc
mov
movsl
push
inc
adc
mov
psrlw
ret
or
add
jl
mov
mov
mov
lods
jl
push
stos
xorb
jle
test
cmp
add
aaa
push
push
fs
sahf
loopne
loop
sbb
test
ljmp
pusha
mov
movsl
lock
adc
add
cld
int3
inc
sbb
lock
std
xchg
ja
add
stos
and
test
mov
push
sahf
sub
loopne
lret
sub
push
and
inc
adc
and
cmp
push
call
bound
das
add
ret
ret
mov
fadds
jnp
add
sbb
test
ss
std
daa
cmp
negb
pop
rcr
xchg
add
incb
imul
and
push
adc
outsl
cltd
test
or
mov
in
push
icebp
mov
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
sbb
shll
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
mov
sbb
xchg
ljmp
ss
pusha
sub
sbb
movsb
mov
loope
inc
and
movsb
sub
imull
mov
lret
pop
mov
adc
sbb
adc
inc
aad
icebp
xor
lret
push
or
sarb
scas
add
sbbl
cltd
stc
jmp
test
adc
sub
test
sub
imul
mov
fsubrs
mov
andb
cmpsl
mov
fmull
or
inc
push
fsubs
popf
cmp
stos
inc
and
cmp
dec
mov
push
bound
sub
popa
call
sub
mov
mov
inc
popw
enter
in
cmp
sbb
xchg
daa
or
sbb
outsl
pop
xchg
pushl
jnp
xchg
dec
nop
sbb
sub
shlb
inc
imul
lock
inc
sbb
outsl
inc
sub
jnp
xor
sub
fldt
inc
cmp
fldcw
jae
mulb
add
popa
nop
add
sbb
pop
mov
xor
sbb
push
movsl
js
inc
pusha
sbb
ret
push
cli
push
sbb
xchg
sbb
and
jae
sub
sub
inc
sahf
add
cmp
and
test
xor
and
or
mov
jmp
push
push
ret
shll
add
adc
inc
xor
add
adc
add
popf
sbb
pop
cmpsb
fisttps
stos
test
jecxz
fistpl
adc
icebp
movb
push
add
imul
and
sub
and
fdivrs
sub
ret
xor
sbb
jo
jo
xchg
int
push
inc
mov
loop
mov
pop
jge
jge
adc
je
sub
fcomp
push
pop
dec
pop
push
lock
dec
adc
mov
and
fcoml
jg
and
push
sub
mov
insb
pop
mov
je
mov
adc
bound
mov
xchg
push
mov
stc
adc
bnd
daa
push
add
jge
mov
add
adc
mov
mov
jo
stos
lcall
mov
add
xchg
push
aaa
xchg
les
aam
mov
mov
mov
icebp
cs
cs
adc
push
inc
cwtl
pop
popf
movsl
sbb
cs
add
and
mov
in
jbe
std
lock
push
inc
jns
cmp
loope
sub
add
in
into
cmc
mov
pop
xor
jno
test
mov
add
loop
lock
dec
setne
mov
xchg
pushf
or
mov
sub
push
data16
decl
in
gs
pop
out
jne
or
je
rorb
cs
push
imul
xchg
and
xchg
das
mov
sub
in
push
rclb
faddl
out
pusha
dec
out
add
orl
cmc
add
lods
push
jne
or
test
cmp
test
add
lret
pop
test
lcall
mov
not
add
push
lahf
je
mov
add
push
push
cld
sub
inc
jnp
fsub
push
out
inc
out
push
je
push
jo
or
icebp
lahf
sbb
mov
imul
shrl
pusha
scas
jne
aad
jb
leave
mov
iret
push
mov
dec
sub
addr16
mov
dec
imul
push
mov
or
pop
push
pop
mov
icebp
ds
inc
int3
add
mov
aad
mov
or
fsubl
dec
dec
mov
push
ror
push
loopne
insl
adc
mov
hlt
movzwl
test
xor
add
ss
out
dec
pop
pop
jmp
jge
imul
push
jmp
adc
mov
mov
daa
sub
int3
mov
lcall
or
push
mov
dec
mov
mov
add
aas
inc
ret
sub
test
or
mov
mov
xor
inc
mov
sarl
add
jae
out
push
pop
dec
dec
push
mov
jl
jae
ret
cmp
jle
inc
mov
cmp
fisubl
test
pusha
ret
add
jp
mov
inc
mov
add
ja
movsl
and
cmp
mov
mov
add
or
mov
mov
jae
add
or
mov
mov
add
adc
fcompl
dec
scas
leave
sti
add
push
mov
filds
jge
push
and
lea
push
into
out
mov
lcall
daa
iret
into
or
jne
loopne
sbbl
and
push
popa
or
inc
icebp
test
sub
cmpsb
and
lods
in
setns
mov
fcoms
shlb
cmpsb
cltd
fisttpl
dec
outsb
loopne
mov
out
int3
mov
add
push
iret
dec
test
out
push
add
inc
cmp
enter
pop
es
cmp
inc
sub
es
or
out
das
jnp
call
sub
or
shll
icebp
jmp
fadds
test
incl
push
lods
aam
lods
pop
data16
subb
mov
cli
jg
fwait
push
test
pmulhuw
sbb
and
push
push
mov
adc
or
iret
fcoml
in
pop
mov
outsl
cmp
loopne
mov
ja
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
aas
xchg
add
movsl
add
mov
mov
push
lahf
addl
loopne
lea
push
add
in
push
clc
push
push
call
and
sbb
addl
iret
add
ss
lret
sahf
mov
sbb
jmp
call
push
inc
std
or
cwtl
leave
mov
jbe
mov
or
xor
setbe
cwtl
xor
insb
adc
cmp
mov
adc
or
inc
sahf
mov
and
sub
cmpxchg
jge
icebp
addb
jbe
retw
or
add
fs
mov
mov
push
and
cmpb
mov
movsb
fcoms
sahf
lahf
imul
loopne
add
and
mov
mov
xor
sub
pushl
call
and
ret
shr
movzbl
mov
adc
push
ret
push
push
inc
push
sbb
inc
mov
repnz
imul
mov
das
mov
jl
cmp
mov
pusha
arpl
adc
xchg
jbe
add
je
cmp
gs
mov
xor
mov
jecxz
xlat
cmp
icebp
addl
or
push
ror
cmc
add
mov
jmp
lahf
mov
jmp
sar
xor
dec
enter
inc
push
push
mov
cmp
jg
mov
leave
clc
inc
adc
jge
leave
rorl
sbb
negb
pop
xchg
cmp
cmpsl
aaa
cs
push
popf
xchg
enter
mov
scas
nop
enter
out
popa
cld
or
mov
mov
ljmp
push
jne
jmp
mov
insb
cs
dec
ret
popa
dec
movsb
mov
mov
push
pop
pop
and
ret
cmp
in
and
popa
mov
hlt
test
aaa
mov
outsl
inc
xlat
push
mov
aam
dec
in
mov
mov
jg
lea
cmp
jae
mov
incl
xor
cmp
pop
add
jp
and
loop
div
jmp
lea
pop
jb
cmpl
mov
fbld
sbb
sub
sahf
imul
add
int3
loop
cmp
add
repnz
mov
push
mov
icebp
sbb
flds
cld
ret
lcall
je
nop
add
mov
sub
xor
sbb
jp
dec
add
lea
and
push
push
sbb
pop
mov
dec
push
push
adc
dec
cmp
and
xchg
add
lock
mov
sub
inc
push
mov
insb
mov
cmpsl
mov
dec
popl
cld
dec
mov
ljmp
or
es
push
aas
je
test
js
push
hlt
jg
in
cs
or
push
sub
dec
jmp
cmpl
insl
sub
loope
mul
dec
jae
xor
add
inc
xchg
loope
outsb
push
push
push
pop
or
push
push
xor
adc
mov
xchg
push
inc
lahf
pop
notb
inc
adc
mov
test
cmp
jl
repz
push
or
add
mov
push
push
push
cmp
inc
mov
push
cmp
shll
adc
adc
jae
ja
mov
fdivs
sbb
xchg
push
dec
cwtl
dec
mov
lcall
mov
pop
hlt
lea
xchg
movsl
lods
stos
cmpsl
mov
or
scas
test
ss
inc
scas
jl
pop
rorb
mov
clc
shrb
push
mov
cs
jbe,pt
cmp
cmp
sbb
loop
pop
mov
add
jg
add
or
add
push
add
mov
mov
sub
frstor
mov
adc
mov
cli
inc
shrl
outsb
ljmp
sbb
std
and
adc
jle
mov
mov
movsl
test
pop
ja
adc
sarl
xchg
sub
insl
cld
or
in
xchg
jg
cmpsl
push
je
fildll
cmp
jne
cmp
negb
pushl
movb
test
jmp
push
push
push
and
inc
lfs
insb
mov
jecxz
push
ja
sbb
pop
inc
leave
push
and
jno
mov
xor
sbb
push
sbb
sub
setne
shrb
outsl
pop
addr16
inc
inc
jne
jecxz
outsl
call
add
aad
push
test
adc
js,pt
in
adc
loop
clc
jg
mov
jbe
inc
daa
call
shll
icebp
std
push
ds
sti
ret
aad
adc
sub
adc
outsl
ss
xor
cli
cmp
jne
scas
mov
add
pop
ficomps
add
pop
push
jl
insl
and
lock
cmp
clc
jge
movsb
push
out
sbb
hlt
push
addb
add
add
or
sarb
push
pop
add
ss
inc
shrb
and
inc
push
push
or
sbb
push
cmp
add
pop
sub
jle
mov
sub
shr
fwait
jg
sar
or
pop
jg
aas
sbb
xchg
sub
mov
lock
add
insb
cld
cmp
lea
jbe
mov
push
inc
add
test
push
inc
add
ss
test
mov
int3
mov
scas
roll
call
movl
pop
fdivl
adc
cmp
cmp
add
movsl
cmc
les
popf
push
fwait
push
mov
xlat
in
pop
inc
fsubl
ds
mov
test
add
sub
add
mov
aas
and
or
addb
jle
mov
scas
mov
daa
push
cmp
int3
sbb
lcall
sub
lods
add
add
sbb
pop
or
sub
mov
dec
or
cmp
sbb
incl
popa
testl
imul
pop
sub
mov
cmc
mov
mov
cmp
cmp
aad
add
push
cmp
xchg
jmp
js
dec
mov
mov
dec
jb
popf
call
in
ja
add
fsubrs
push
inc
test
cmp
add
pop
pushf
dec
test
aad
dec
xorb
in
jo
push
inc
cmpsb
sbbb
add
add
mov
add
rcl
jmp
mov
pop
les
push
push
into
cs
pop
cmp
clc
inc
and
insb
add
xchg
dec
push
inc
jmp
mov
sbb
jmp
xchg
pop
and
and
leave
adcl
mov
push
repnz
cld
mov
inc
pop
lock
dec
dec
sti
mov
or
je
pop
add
dec
popf
xor
push
pop
and
cwtl
mov
dec
cs
mov
inc
inc
in
or
pop
push
out
mov
adc
fwait
hlt
ds
sahf
sub
lcall
push
dec
jns
xor
sahf
mov
out
cs
push
enter
scas
push
int3
inc
add
ljmp
movsb
add
clc
loope
push
leave
repz
mov
and
mov
repnz
lock
sbb
mov
inc
add
and
clc
sub
inc
inc
push
shrl
adc
inc
push
jns
adc
sbb
xlat
mov
call
mov
add
or
sub
mov
sbb
mov
push
adc
pop
or
sbb
in
sbb
mov
loop
inc
and
int
daa
cmpsb
mov
ret
adc
mov
and
push
lea
jb
sub
negl
push
adc
sub
dec
adc
leave
rorl
xchg
adc
and
pop
in
mov
push
and
in
fmul
mov
inc
sbb
cmp
and
sbb
sbb
stos
outsl
push
cmp
test
loop
push
lcall
xchg
push
test
jle
mov
and
enter
xor
stos
or
stc
jg
rclb
sbbb
imul
stc
adc
cmp
popf
mov
jge
inc
pop
sbb
push
cmp
mov
ret
shrl
pop
negl
mov
push
adc
sarb
roll
jle
push
mov
sbb
into
pop
mov
cmpps
sub
or
dec
add
pushf
push
jbe
mov
jne
data16
mov
sbbb
clc
je
pusha
jmp
or
sub
dec
je
mov
je
sub
adc
fsts
test
ss
wbinvd
sub
dec
push
jmp
mov
mov
loop
fwait
sub
jne
and
mov
jecxz
jne
lock
lret
push
add
push
mov
cld
pop
rcl
or
lea
inc
call
sbb
mov
jp
fcomps
xchg
or
pop
out
fscale
push
mov
mov
sbb
loopne
dec
inc
mov
mov
iret
xchg
mov
insb
push
xor
push
push
mov
jg
daa
pop
pushl
js
insb
outsb
sub
sub
imul
inc
sbb
sarl
cmp
je
cmp
in
scas
imul
jmp
inc
sbb
leave
adc
stc
sub
cli
mov
sbb
fstpl
jge
cmp
jmp
sbb
movsl
inc
xchg
push
and
jmp
and
icebp
rcrb
movsb
jmp
xchg
sbb
loope
cmp
pop
bound
lea
lods
rorl
pop
sbb
dec
out
repnz
std
push
fcomi
pop
decl
or
adc
and
icebp
das
pop
push
in
sbb
inc
sbb
fstl
lea
enter
pop
adc
sub
mov
or
int
push
xchg
es
mov
xchg
out
push
push
push
or
xchg
xchg
daa
movsb
cld
js
jge
pop
decl
inc
push
mov
mov
mov
lea
push
lea
push
push
push
push
add
push
lea
sub
xchg
mov
jne
inc
cmpsb
add
dec
mov
inc
test
fwait
xor
mov
pop
test
or
xorl
pop
push
push
pop
or
pop
repnz
arpl
sbb
jnp
shrb
and
scas
push
je
xchg
scas
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
cmp
xchg
test
sub
ret
lods
push
popa
jp
rorb
dec
adc
dec
adc
cmc
adcl
mov
dec
xchg
jne
movl
outsb
jo
jno
jle
ss
in
or
push
jno
jmp
sahf
pusha
and
cmp
repz
xchg
insb
sub
testl
sub
push
add
shll
inc
dec
and
or
or
xchg
je
mov
aam
or
push
enter
imul
pop
stos
xchg
call
in
in
inc
xchg
pinsrw
icebp
in
push
dec
pop
popa
ret
mov
push
lock
xor
arpl
mov
or
aas
arpl
mov
push
mov
sub
push
push
push
into
imul
cmp
jbe
mov
jb
adc
rolb
flds
cmp
je
add
jecxz
jbe
xor
cmp
mov
les
push
xchg
clc
push
add
aam
push
loopne
lds
jnp
popa
and
push
cmp
loop
push
stc
add
inc
mov
imul
adc
add
jle
cli
fucomi
lods
adc
outsb
inc
add
cmp
xchg
fmull
or
xchg
rorb
adc
jecxz
int3
cmp
setno
out
jne
push
sub
xor
pop
pop
inc
adc
fdivrs
enter
mov
or
je
lea
push
loopne
add
rorb
lret
jo
and
std
cmp
push
sbb
cmp
jne
call
push
pop
int
ret
adc
and
push
pop
xchg
sub
or
sub
les
jbe
mov
lock
div
fidivrl
push
dec
je
dec
push
outsl
aam
rcrb
jge
je
movsb
sub
sub
push
push
pusha
cmp
lcall
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
iret
and
pop
xor
dec
stos
rcl
loopne
fcomi
jge
push
shlb
or
repz
rep
push
in
in
jno
and
or
adc
jecxz
into
daa
mov
sbb
mov
pop
neg
sbb
dec
sbb
fildl
mov
add
inc
out
pop
sbb
xor
mov
movsb
in
imul
push
pop
divl
adcb
push
idivb
push
sub
mov
xor
ret
je
mov
into
in
mov
sbb
and
push
push
lds
sahf
sub
out
insl
pop
mov
pop
out
jl
mov
test
push
test
pusha
sahf
jl
dec
mov
scas
and
add
pop
inc
ja
dec
cmp
adc
punpckhdq
xor
jne
push
pop
out
imul
or
jp
or
test
xchg
pop
insl
or
loop
pop
pop
jns
mov
lock
ret
loopne
idivl
rorb
loop
jle
cmpl
jo
mov
jne
pushl
sbb
int
push
sbb
push
adc
fcomps
je
outsl
fcoml
mov
add
sbb
test
fmuls
and
dec
cmc
add
pop
stos
inc
loopne
xor
sti
je
cmp
cmp
rcrl
push
lcall
shl
or
and
pusha
test
add
inc
mov
ret
mov
in
push
dec
aam
jmp
xor
sbb
icebp
jg
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
fldz
xor
push
loop
ret
cwtl
sahf
jo
jle
xor
adcb
repnz
mov
jp
cmp
lea
lea
mov
lret
sub
cmp
dec
sbb
or
mov
mov
loopne
sti
dec
mov
or
popf
sub
mov
out
inc
rorb
sbb
push
sbb
es
add
push
pop
pop
ret
dec
rcl
push
mov
cmp
ja
loope
iret
push
adc
enter
cltd
add
shrl
out
push
mov
push
fsub
jl
std
jmp
add
add
mov
mov
ja
je
sub
test
pop
cmp
sarl
js
sbb
dec
inc
push
push
push
lea
cli
adc
js
push
shlb
xchg
mov
adc
sub
push
push
lret
jl
xchg
andb
cmp
cmp
jbe
xor
popf
test
mov
adc
and
inc
adc
cmpb
dec
xor
clc
test
enter
mov
cmp
inc
outsb
imul
aaa
inc
fldl
fmull
dec
pushf
push
out
popf
mov
push
add
rcll
mov
movsl
and
fdivl
adc
adc
cltd
cli
les
sub
add
out
mov
inc
add
js
incb
add
insb
inc
jae
mov
pop
movsb
popa
in
and
loop
ds
or
sbb
cmp
adc
mov
cmp
adc
fmuls
dec
rorl
dec
and
xor
pop
or
aam
or
cmc
jmp
nop
dec
xchg
push
and
shl
stos
mov
adcl
adc
lds
push
jle
cld
icebp
iret
popl
xor
aaa
push
pop
cmp
pop
inc
ss
push
es
push
std
pop
nop
pop
jne
cs
sub
push
push
out
out
fstps
add
jmp
adc
sbb
and
jp
jbe
repz
mov
or
fisubrs
add
mov
loopne
fidivrl
push
cli
or
push
icebp
into
subb
push
xchg
pusha
adc
push
gs
push
jmp
cmp
popa
add
push
lods
push
push
cltd
sub
push
jecxz
popf
adc
fidivl
divb
or
out
jo
addr16
out
mov
inc
lea
icebp
add
xor
xchg
jle
in
adc
inc
mov
push
xor
and
xor
cltd
mov
inc
inc
and
lea
ret
shr
fcmovnb
decl
orl
rcrb
and
mov
cwtl
mov
jge
mov
lahf
fisubrs
idiv
push
mov
push
push
mov
and
push
ret
xor
idiv
xor
mov
out
mov
jp
fstpt
mov
stos
xor
push
test
push
pop
divl
cmp
andl
sbb
clc
pop
mov
or
aam
mov
hlt
lock
fucomip
or
out
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
aaa
add
lea
cltd
idivl
fistl
jp
xor
pop
sarb
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
out
stos
mov
mov
test
jns
faddl
adc
sub
loopne
enter
fdivrp
mov
sub
mov
lea
test
mov
inc
fidivrs
cmp
add
pop
sbb
push
insl
add
or
clc
fidivl
jmp
add
dec
subl
cli
outsb
lods
iret
xor
push
pop
mov
shr
pop
pop
movb
push
adc
test
jmp
mov
mov
jp
pop
add
mov
cli
stos
ljmp
clc
lea
dec
xlat
and
cmpsl
je
sub
in
mov
jne
push
gs
sub
je
or
in
dec
jecxz
pop
and
xor
shrb
cmc
push
xchg
dec
mov
or
into
pop
leave
movsl
and
ds
aad
sbb
scas
push
out
pusha
stos
sub
js,pn
nop
sub
add
imul
call
sub
repnz
data16
imul
fs
mov
mov
testl
and
rorl
mov
mov
inc
jne
sti
inc
das
jle
mov
push
movsb
sbb
fldpi
adc
push
fisttpl
pop
leave
xor
sub
shrb
ljmp
lea
push
sbb
sbb
inc
mov
adc
push
lods
dec
shlb
mov
ja
test
roll
or
add
inc
dec
cmpsb
mov
dec
in
adc
inc
pop
pop
mov
das
pop
adc
sub
js
test
insb
scas
jle
sub
add
outsl
pop
jge
imul
call
push
sbb
scas
leave
sub
sbb
jb
xor
sbb
inc
ljmp
adc
inc
pop
dec
shlb
lods
dec
mov
pop
int3
out
pop
rorl
xchg
and
push
add
repnz
stc
lock
adc
test
mov
addr16
inc
cli
and
loop
leave
push
cmp
sti
and
pop
aaa
and
mov
pop
mov
and
in
dec
or
sbb
popa
inc
rcll
push
sub
clc
fs
fisttps
mov
sub
inc
cld
mov
shrb
mov
clc
setb
test
pop
add
add
mov
sub
cmp
add
lock
mov
dec
adc
data16
push
lea
push
mov
fisttps
aaa
cmpb
jle
je
push
loope
mov
pop
pop
pop
lcall
insl
dec
shlb
in
add
shll
inc
dec
adc
adc
imul
je
dec
imul
sti
xchg
add
shrl
inc
cmp
or
mov
das
push
mov
jp
pop
mov
push
adc
sarb
push
cmp
jl
inc
aaa
sbb
or
jp
fdivrl
xor
mov
cmp
jo
mov
inc
cmp
add
icebp
xchg
ret
push
das
mov
cmp
jg
imul
stos
add
push
push
lock
sub
enter
xlat
cltd
sbb
or
jo
fs
sbb
sarb
out
adc
out
das
sub
pusha
sbb
xor
jg
add
pusha
jmp
push
adc
fisubrs
or
test
pop
cmp
push
fs
pop
in
shll
and
push
and
adc
push
mov
cs
fisubs
insl
sub
or
cmp
or
sbb
mov
xor
add
scas
adc
into
xchg
insl
loopne
and
rorl
hlt
outsb
arpl
aam
les
imul
adc
pop
cmpsl
inc
ss
lods
xor
les
enter
push
test
les
jle
push
enter
test
dec
shrl
pop
in
out
add
leave
xor
fadds
insl
adc
testl
repnz
arpl
insb
fmull
xchg
addb
fisubs
out
xchg
xor
aaa
pushl
push
imulb
sub
and
les
or
cmp
fstl
sbb
scas
test
add
call
push
das
jle
gs
mov
orb
xchg
add
adc
sbb
push
mov
and
and
push
adc
push
cwtl
pop
bound
pusha
mov
call
xor
push
adc
movsb
pop
push
or
jo
inc
lock
testb
outsl
and
cmp
hlt
imul
or
pop
lods
imul
and
or
xlat
push
or
adc
sbb
mov
or
xor
jbe
inc
mov
adc
jnp
imul
mov
test
or
dec
xor
mov
sbbb
dec
sbb
xchg
push
pushl
pop
les
adc
out
adc
pop
xor
arpl
dec
cmp
das
mov
xor
xor
ret
je
scas
dec
jae
sbbb
cmp
jmp
decl
mov
jmp
dec
mov
sub
sbb
push
mov
lcall
dec
add
dec
inc
pusha
inc
xor
mov
cmpsl
xchg
sub
ficoml
js
mov
sub
mov
clc
jg
js
cmp
jge
mov
mov
jl
movb
or
cmp
jle
sub
xor
int3
or
cld
mov
std
push
xor
xchg
pop
push
inc
movl
or
mov
mov
mov
and
insb
sbb
fmul
aad
dec
ja
xor
dec
dec
mov
cmp
in
mov
enter
add
and
cmp
sete
cmp
fistl
sbb
loope
and
je
movsl
add
arpl
and
stos
push
or
lods
mov
test
insl
invd
cwtl
jno
dec
out
les
stos
mov
jge
mov
dec
adc
subb
pop
rolb
mov
ljmp
rcrl
repz
push
sbb
push
aam
pop
loop
xchg
jl
add
clc
push
mov
add
add
add
sbb
pop
int
pusha
jo
pop
loope
mov
xor
and
jo
je
add
and
fstps
dec
sti
mov
jecxz
js
push
cli
fsubs
adc
enter
ret
pop
mov
fcmovu
push
iret
ss
xchg
cmpsl
push
outsl
mov
popf
jae
mov
cmp
push
pop
or
loopne
push
or
aam
pop
xchg
sti
add
push
jo
xor
mov
inc
mov
out
cmpsl
sahf
outsl
mov
jne
mov
adc
push
pop
loop
push
in
adc
dec
imul
pusha
xchg
aaa
sbb
fldcw
lock
or
repz
sahf
jo
pushf
call
xchg
push
fdiv
in
and
rolb
pop
jl
pop
or
arpl
dec
movsl
imul
in
test
xchg
jle
testb
cmpsb
enter
or
jbe
sbb
enter
enter
scas
or
jp
xor
xorl
popf
shlb
enter
xorl
mov
jl
xchg
loopne
cmpsl
xchg
fnstenv
sarb
or
jg
mov
dec
movsl
jbe
movzwl
jp
push
push
jne
jecxz
pop
ds
pop
dec
test
jb
push
jecxz
cmp
push
push
call
test
sub
dec
adcl
mov
into
clc
aam
pop
test
push
sbb
ret
mov
lods
sbb
mov
jecxz
lahf
adc
movb
mov
std
lds
addr16
rorb
xor
inc
lahf
xor
push
push
popf
pop
imul
or
dec
nop
popf
add
insl
push
or
inc
loopne
cmp
and
into
push
repz
mov
and
mov
test
mull
jge
addl
pop
mov
sub
xor
inc
push
inc
imul
out
shl
sub
push
adc
mov
inc
je
push
mov
push
sbb
push
and
or
ret
mov
ja
andl
mov
add
add
repz
pop
fsts
sub
ret
add
outsb
clc
addr16
movl
dec
lea
xchg
dec
sub
add
loop
movsb
sub
and
xchg
pop
loop
push
xor
push
mov
les
cmp
push
add
inc
imul
movsb
subb
leave
int
sbbb
stc
pop
ljmp
adc
test
jp
mov
sbb
out
daa
das
nop
sbb
xchg
mov
cmpsb
rcll
inc
add
inc
inc
jg
test
mov
jmp
mov
mov
pop
xor
jae
push
cmp
pop
or
js
fneni(8087
push
add
inc
test
lock
xlat
or
inc
sub
ds
xchg
addl
sub
test
adc
in
add
aam
dec
js
call
and
ficoml
jbe
dec
cmp
and
inc
nop
or
inc
push
jb
nop
fnstenv
jno
inc
pop
call
inc
push
add
stc
adc
js
imul
shlb
ja
dec
or
mov
mov
orl
sbb
je
xchg
jb
outsl
pop
cmpb
cmp
add
add
or
jae
add
dec
or
nop
sub
ljmp
cmp
ljmp
pop
dec
add
in
dec
push
ja
or
inc
inc
add
fcmovnb
shlb
in
add
adc
mov
inc
adc
mov
rcrb
pop
stc
sub
test
xor
fstps
push
sub
add
loopne
adc
sbb
loopne
sarb
sbb
inc
or
lret
es
data16
sbb
punpckhwd
lcall
or
stos
mov
mov
mov
mov
cli
push
push
mov
mov
test
jp
or
xor
push
std
js
or
addr16
loopne
sub
popf
jl
inc
lock
ficoml
add
xchg
lea
ret
mov
push
add
repz
lea
fisubrs
dec
mov
xor
cmp
pop
mov
fwait
sbb
add
push
lock
inc
dec
mov
test
leave
aad
in
xor
pushl
js
stc
cs
sub
cli
lods
xchg
popa
mov
pop
imul
xchg
xchg
lods
ret
rdmsr
sub
push
sbb
in
je
outsl
pop
dec
lock
cmpl
faddl
jp
jecxz
mov
popf
push
shl
sub
sub
ds
loope
sbb
out
pop
icebp
sbb
mov
sahf
pusha
push
jg
adc
cmp
or
rclb
insl
fnstenv
dec
dec
mov
ja
push
sti
push
jno
testb
mov
push
push
push
and
das
mov
stos
push
or
push
add
shll
sarl
push
call
xor
cmp
orl
pop
lret
stos
push
lock
mov
jne
inc
lea
icebp
adc
scas
rol
subl
je
mov
mov
cwtl
nop
out
and
sbb
out
pop
in
cmpsl
sbb
xor
cs
jns
adc
or
fs
and
push
dec
cs
stos
add
test
or
xchg
dec
pop
push
inc
jb
dec
int
popf
int
js
rcrb
mov
and
adc
add
add
mov
push
mov
cmp
mov
sub
test
xor
mov
popf
adc
sbb
pushf
movzwl
pop
iret
shrb
mov
nop
je
fbstp
xor
cmp
jecxz
xchg
test
inc
popf
pop
int3
mov
jl
xor
inc
test
jbe
rorl
xchg
shlb
jge
push
jp
std
sarl
mov
push
outsl
mov
add
test
cli
rcr
test
fs
xchg
outsl
or
push
lock
inc
divl
das
daa
mov
push
cmp
sbb
mov
sahf
xchg
inc
in
add
cmc
inc
ret
sbb
cmp
fdivr
sub
movsl
jb
js
cmp
push
sbb
inc
mov
sub
pushfw
stos
loop
or
push
add
loopne
popa
icebp
scas
stos
out
mov
lea
push
mov
mov
in
pop
setg
cmp
add
add
popf
in
pop
mov
mov
lock
mov
cmc
mov
inc
mov
xor
fdivr
mov
loopne
insl
sub
xchg
pop
adc
xor
mov
adc
mov
cwtl
jno
dec
xchg
aam
pop
mov
rolb
mov
or
aas
dec
out
rol
push
push
adc
jg
pop
pop
mov
add
inc
out
sbb
xor
inc
aam
push
loope
test
dec
push
fisttpll
aam
add
push
repnz
les
add
or
mov
aas
inc
popa
dec
sub
jnp
enter
push
outsl
add
mov
xchg
or
clc
jbe
xchg
mov
mov
aam
in
xor
cmpsl
aam
fnstenv
inc
pop
adc
push
popa
insl
popf
or
xor
and
jns
mov
call
fiaddl
push
gs
fiadds
fisttpll
adc
dec
pusha
int3
xchg
jno
inc
fmul
adc
js
loop
aaa
les
imul
pushf
lods
xor
repnz
push
fsubl
adc
repz
gs
or
add
jecxz
enter
jmp
das
mov
lods
loope
push
mov
test
jae
inc
xor
lcall
and
mov
mov
mov
adc
rorl
cmp
add
mov
bound
das
push
popa
xchg
and
pop
loop
popf
mov
test
dec
and
pop
pusha
pop
popa
cld
stos
add
rcrl
push
and
xorl
jecxz
inc
ret
sbb
mov
movsl
sub
lds
or
icebp
lret
sub
jne
pop
loope
add
jge
inc
xchg
push
add
cli
mulb
and
sti
push
sbb
fadds
jns
pop
testb
inc
xchg
mov
cmp
jg
insl
je
push
push
stos
arpl
xchg
xchg
pop
push
adc
das
pushf
inc
pop
push
sbb
pop
sub
jbe
addb
add
popa
pusha
and
pop
imul
xlat
jnp
push
pop
add
inc
or
xor
sbb
sbb
stc
shlb
outsl
jno
xor
or
rcrb
jno
cmc
lds
cmpsl
mov
jne
push
pop
cmp
les
push
mov
xor
mov
pop
ss
and
cmp
mov
movsl
xchg
xor
movb
pop
add
and
and
add
cltd
fiaddl
and
lea
and
add
mov
cmp
inc
sbb
jl
and
or
rcll
pop
es
mov
sub
or
sbb
cmc
fdivl
daa
int3
sub
pcmpgtd
and
jge
xchg
mov
mov
lock
cmpl
sbbb
sbb
jl
fcoms
aas
aam
mov
dec
jle
daa
das
insb
inc
xchg
xchg
das
fcoml
sub
rcrb
sub
push
xchg
or
out
insl
mov
int3
xor
dec
mov
sub
dec
paddusb
in
adc
inc
push
xor
mov
sub
push
repnz
fdivr
sarb
xor
add
pop
sub
sub
insl
sub
test
out
jecxz
out
ja
push
mov
or
mov
jp
push
les
or
popa
pop
add
loope
ljmp
mov
js
add
push
push
clc
push
push
pop
mov
rcl
or
mov
cmp
ret
mov
loop
mov
ljmp
leave
test
adc
ss
or
add
loopne
data16
scas
adc
fcompl
cmp
cld
xchg
test
sbb
mov
incl
push
add
sub
or
add
xchg
mov
popf
or
or
add
or
fisttps
and
mov
jno
inc
out
repz
xchg
pop
or
sub
push
xor
lea
inc
movl
xor
or
inc
and
ja
dec
subl
lock
jnp
or
fwait
lret
add
and
cli
inc
call
addr16
jmp
cmpl
push
mov
and
adc
xchg
adc
int3
int3
push
mov
fildll
es
xchg
adc
out
divl
mov
nop
mov
push
add
dec
loopne
out
mov
insb
xlat
jno
add
imul
or
or
sub
add
js
push
stc
sub
push
xchg
jmp
loopne
lock
cmpb
outsb
sub
push
push
pop
imul
jecxz
add
mov
popf
fadds
mov
xor
or
push
sub
popf
cmp
aad
push
sub
mov
inc
loopne
jecxz
add
mov
sub
pop
sahf
sbb
int3
orl
ficomps
adc
push
adc
shlb
sub
push
loopne
jbe
push
sub
dec
imul
out
jno
nop
int
mov
daa
imul
mov
adc
or
push
jno
js
imul
sahf
or
leave
cmp
mov
jae
div
mov
inc
lret
dec
pop
add
lods
sub
or
cmpsb
adc
pushl
mov
out
mov
xor
sbb
ss
outsb
clc
mov
pop
sbb
add
or
mov
mov
ret
sub
mov
sbb
out
xor
dec
shlb
dec
or
inc
push
aam
js
frstor
mov
inc
inc
push
popf
xchg
or
jnp
adc
jle
xor
fs
push
push
mov
jmp
push
push
jne
push
pop
jmp
lods
and
cmp
in
or
enter
mov
lds
std
mov
or
adc
xchg
jns
inc
call
add
push
mov
lcall
addr16
mov
mov
lret
push
or
sbb
imul
movsl
and
add
pop
out
and
or
push
and
ret
in
test
adc
and
pusha
adc
mov
fsub
xorb
stos
push
aaa
push
mov
sbb
pop
popf
xorps
xor
mov
je
je
xor
dec
dec
hlt
push
pop
mov
loop
out
cmp
push
add
sbb
mov
stos
roll
and
push
bound
xor
cmpsl
cli
pop
ret
mov
xchg
fistl
stos
jg
lret
cmp
jl
insb
mov
int3
xor
cmpsl
sti
idivb
sarl
pop
sub
cmp
jle
mov
cmp
jne
repz
push
lahf
sbb
push
add
outsl
pop
push
mull
ss
pop
movsb
dec
out
loope
mov
dec
cmp
je
sub
mov
push
loope
push
js
xchg
fcmovu
cld
ret
xorl
dec
fstps
sti
xchg
adc
sub
pusha
dec
jmp
pop
in
bound
in
pop
adc
ret
mov
lahf
in
xor
out
fldcw
fisttps
dec
ret
in
out
push
dec
or
in
out
leave
inc
aam
xorl
cmpsb
push
xchg
movsb
out
mov
fstl
call
dec
xchg
insl
xor
pop
fwait
add
ja
adc
loopne
or
push
adc
ds
push
mov
add
cld
sub
and
push
add
and
fistl
or
les
jbe
or
addb
or
je
mov
mov
jne
xchg
push
faddp
xchg
lock
lea
sbb
roll
or
or
sbb
xor
cmpl
jb
cmp
adc
xchg
push
aaa
nop
jns
adcb
pop
outsb
push
hlt
scas
xchg
lret
mov
adc
jp
addr16
or
sub
ret
or
mov
or
aam
mov
imul
cmp
dec
dec
shll
test
imul
adc
add
dec
shlb
test
mov
push
in
adc
inc
mov
mov
mov
xor
cmp
cmp
fdiv
pusha
cmp
mov
and
cwtl
mov
push
movsb
pop
sbb
stos
fnstenv
rclb
pushf
sub
imul
ret
or
cs
push
xor
das
test
sub
lods
add
aas
mov
faddp
jmp
inc
es
mov
sbb
push
std
cli
jmp
mov
jle
or
negb
inc
cmp
ret
jae
add
ds
insb
cmp
jmp
jp
mov
ret
cmpl
cmp
mov
lea
push
pop
fildll
fidivs
cltd
insb
sub
mov
inc
test
loopne
hlt
jmp
push
sub
ljmp
mov
dec
jns
pop
sub
fistl
lret
xchg
scas
popa
fs
dec
or
mov
xor
lock
jae
fucom
mov
inc
adc
inc
cmp
add
mov
orl
push
mov
jbe
dec
and
push
xor
ret
in
movsl
add
imul
push
push
popl
outsl
push
or
dec
sub
pop
mov
hlt
jmp
imul
push
mov
mov
jmp
fs
cs
mov
sbb
add
mov
cmp
pusha
sahf
sti
xchg
dec
enter
movl
inc
jmp
ret
cmp
lea
push
mov
cmp
je
ret
icebp
dec
mov
mov
or
push
stos
pop
gs
xor
je
dec
rclb
xchg
ret
and
or
or
jge
data16
push
add
inc
push
jl
mov
inc
ficoml
test
data16
icebp
add
jmp
push
clc
cwtl
in
sarb
xchg
mov
and
cmp
out
sub
jecxz
push
cmpsb
lock
xor
je
ret
jecxz,pn
out
adc
cmpsl
xor
roll
out
mov
jp
popf
bound
and
mul
gs
dec
out
loopne
add
mov
jbe
sub
jno
push
or
ret
mov
cli
jp
or
out
jne
pop
pop
add
test
adc
add
mov
cmc
fmull
int
sub
pop
push
xchg
stc
mov
xchg
add
lods
xor
movsb
dec
fbstp
pop
sbb
inc
mov
je
bound
dec
push
xor
cmpsl
addl
fdivl
lret
out
xchg
xchg
or
pop
fisubrl
scas
and
jne
int3
jnp
or
add
pop
mov
xor
pop
sbb
jne
dec
xor
mov
or
dec
cmp
sbb
mov
movsb
daa
popa
lock
add
jl
pusha
iret
movl
sub
fstpt
aam
jae
push
or
pop
rolb
std
test
adc
notb
pop
sub
data16
mov
mov
sub
jmp
pusha
mov
or
mov
shrl
push
lock
push
je
popf
add
loopne
push
aam
sbb
js
jl
add
outsb
cmp
xor
int
add
mov
sbb
les
push
add
shll
push
push
inc
pop
jg
pop
divb
or
pop
pop
push
or
xor
js
xchg
pop
sub
nop
arpl
inc
push
je
jo
mov
push
cmp
popf
in
dec
cmp
cmp
sub
xchg
rcll
dec
or
int3
push
mov
push
pop
leave
ret
push
int3
sub
lock
loopne
mov
xchg
jno
test
sub
cs
adc
mov
test
sub
add
je
orl
push
dec
lahf
xchg
push
cmp
dec
rcll
or
mov
mov
cmp
sbb
mov
mov
or
mov
jg
pop
cmpb
mov
jne
fwait
test
sbb
dec
adc
dec
sbb
pusha
or
scas
mov
mov
popf
dec
push
inc
loopne
lahf
cmp
inc
rcll
xor
mov
andb
mov
mov
loope
mov
test
popa
lods
mov
push
fucomp
push
cmc
adc
jmp
repz
lea
add
add
and
push
outsb
and
scas
and
sbb
push
and
or
sub
add
shrb
and
test
dec
adc
adc
push
mov
aam
inc
jb
push
rcrl
ret
pop
repz
or
punpcklbw
mov
shl
jbe
mov
xlat
ljmp
sbb
adc
mov
jl
cmc
enter
inc
xor
and
adc
leave
ret
jb
push
push
xchg
pop
out
out
popa
pop
insb
xor
ds
sub
mov
shll
in
sub
leave
lea
jg
mov
push
adc
cltd
fldl
fmuls
mov
cld
push
dec
xor
js
rorl
ret
fadds
push
cmp
add
in
cmp
outsl
sbb
jae
loop
orb
xor
xchg
fsubs
fisubrs
or
jno
movsb
out
in
or
icebp
aam
jmp
aaa
push
sahf
inc
lcall
inc
dec
mov
mov
mov
dec
sub
dec
push
lods
add
sbb
hlt
lea
push
or
outsl
iret
cltd
sbb
insl
ss
push
mov
mov
loop
mov
xor
cmpl
ret
dec
and
inc
or
lahf
xor
xchg
pop
dec
inc
cmpsb
fnsave
sbb
and
cmpsl
and
inc
nop
add
sbb
lock
jo
leave
mov
adc
iret
cmovle
push
push
pop
xchg
pop
pop
push
mov
push
sub
pushf
mov
inc
lcall
xor
sbb
xchg
push
cmp
inc
fmull
movsl
loop
popa
jg
sti
faddp
call
cmpb
fs
ret
jo
test
sub
inc
inc
pop
jmp
insl
or
loopne
fidivs
add
mov
aad
mov
push
sub
adc
xor
stc
mov
enter
add
dec
xor
daa
std
lods
add
shll
sbb
iret
sbb
adc
and
lret
jbe
int
inc
aas
pop
push
dec
jbe
jmp
mov
sub
pop
push
cld
dec
loope
and
push
pushl
mov
outsl
adc
repz
xchg
add
adc
mov
inc
push
push
or
sbb
mov
or
sbb
xorl
scas
and
in
es
mov
pusha
loope
inc
jle
add
cwtl
pop
mov
xchg
icebp
test
push
popa
push
pushf
sbb
push
cmpsl
push
inc
sbb
test
inc
dec
cmp
in
popf
or
add
shrb
lea
out
aas
sub
dec
lea
dec
sar
js
loop
hlt
in
mov
mov
cmpsl
adc
cwtl
add
fnsave
push
xor
lea
sahf
push
push
arpl
ss
mull
or
or
pop
adc
add
dec
movsl
and
cwtl
xchg
sub
test
nop
xchg
add
shll
dec
xlat
or
jbe
sbb
or
icebp
adc
mov
or
inc
jp
add
subb
or
xchg
add
loop
imul
sub
inc
pop
mov
mov
jbe
inc
inc
xor
push
test
idivb
jno
sub
mov
shll
mov
jo
sbb
mov
mov
mov
sbb
xor
stos
daa
mov
sahf
test
jo
in
or
or
or
divl
pop
mov
fwait
add
adcl
jmp
dec
xchg
jo
mov
call
adc
idivb
xchg
xchg
push
int3
ret
jle
mov
push
lret
bound
in
add
push
lea
sarb
fmuls
jnp
cmp
inc
mov
shrl
pop
adc
sbb
pop
ret
aaa
negb
mov
out
inc
scas
in
leave
ret
negl
mov
int3
and
sahf
sbb
arpl
push
add
leave
pop
lods
icebp
andb
outsl
cwtl
mov
aas
xchg
push
daa
int
push
call
sbb
push
pop
test
mov
mov
mulb
ss
aas
es
mov
mov
lea
test
pusha
cmpsl
test
pop
xor
icebp
sti
add
test
or
stos
shl
jno
adc
fstpl
ret
dec
adc
pusha
push
cmp
repz
loopne
andl
enter
xchg
test
rorl
aas
xchg
jnp
stc
adc
dec
cs
mov
mov
pop
dec
dec
fdivrl
pushf
sbb
and
and
xor
mov
xlat
push
adc
movsb
adc
dec
and
aad
inc
sub
and
aad
pop
xchg
enter
mov
arpl
lcall
mov
test
mov
imul
imul
add
or
in
cmpb
int3
pop
mov
scas
pushf
push
dec
or
hlt
mov
jl
ud0
shlb
inc
into
adc
inc
je
inc
sub
adc
push
lods
mov
cmp
sbb
sub
or
add
dec
mov
pop
clc
pop
xor
mov
mov
dec
out
test
dec
dec
xor
dec
insb
test
test
and
cmp
or
repz
test
jns
cmp
int
loopne
in
mov
andl
cmpb
push
push
mov
or
and
jmp
jb
out
adc
pop
and
dec
test
lods
gs
cmp
pushf
mov
mov
lock
cmp
jae
fistl
loopne
inc
adc
fsubr
aam
out
cvtpi2ps
shlb
mov
fwait
pop
sbbl
add
jmp
cmp
pop
test
xor
dec
push
fwait
push
aas
cld
push
out
add
test
hlt
dec
popa
sbb
nop
cmpsb
invd
jnp
loopne
std
dec
sti
dec
rclb
dec
insb
push
push
push
cmp
mov
sub
dec
jo
jmp
adc
cmpsb
arpl
push
cmp
sbb
xchg
add
jno
lcall
movsb
jmp
lds
ss
adc
push
jp
xchg
sub
mov
enter
adc
test
adc
inc
dec
xor
pop
test
loope
incl
cmpsl
mov
nop
inc
adc
or
or
mov
and
cmpsl
adc
xchg
or
movsb
pop
adc
adc
ds
enter
inc
adc
orl
mov
mov
stc
dec
or
imul
mov
xor
movsb
adc
pop
nop
addr16
xchg
insl
mov
out
dec
cmp
imul
xchg
push
cmp
xor
insb
arpl
add
add
push
es
movsl
mov
xor
or
sbb
out
sbb
jo
xchg
sbb
test
mov
mov
cmp
dec
xor
sbb
movsl
lret
push
fs
pusha
mov
dec
sbb
xchg
stos
add
mov
aad
sbb
mov
in
dec
add
mov
cld
lret
inc
add
push
stc
or
pop
cmp
push
sbb
inc
cmp
pop
jge
or
mov
xlat
clc
divb
xchg
jecxz
pop
orl
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
bound
imul
or
adc
inc
fimuls
mov
xchg
add
clc
inc
bound
and
push
jp
sbb
adc
add
cmp
and
cmp
call
cmp
mov
dec
jno
fcom
lret
mov
cmp
mov
sub
mov
mov
add
add
subb
mov
ror
push
sti
add
dec
cmp
sub
je
lods
call
inc
or
sarb
cmp
mov
imul
adc
xor
out
and
mov
dec
imul
out
lahf
lods
es
popa
sub
adc
enter
mov
xor
or
xor
mov
cmpsl
jmp
nop
lcall
push
dec
jo
jmp
add
rolb
jle,pt
testb
sub
popf
jb
pop
add
mov
xor
scas
mov
adc
or
movl
push
lcall
ljmp
pop
push
inc
cmp
mov
xor
xorl
pop
mov
jns
in
push
mov
add
ret
rcl
cmp
out
andl
add
addl
cmpsl
sbb
inc
sbb
js
inc
adc
jno
inc
mov
and
shl
adc
aaa
adc
je
dec
jne
jo
int
loope
jo
clc
adc
add
push
sti
movsb
xchg
lcall
push
insb
and
add
jecxz
leave
fiaddl
xchg
outsl
cld
lcall
mov
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
jnp
arpl
pop
add
or
inc
movsb
mov
daa
xor
sub
cmp
jne
and
jp
cli
jb
lea
or
mov
add
jno
dec
outsb
or
jmp
lea
lcall
pop
lock
ja
xchg
ss
sub
andl
pop
je
mov
cld
ljmpw
and
mov
out
adc
test
xor
out
cmp
or
iret
mov
xorl
popf
dec
add
adc
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
adc
mov
dec
push
mov
aam
or
aam
or
cmpb
popf
loope
data16
pop
and
ret
or
or
xorb
or
dec
lea
push
jae
sbb
cmp
pop
xorb
adc
stos
jbe
aam
and
mov
dec
adc
in
and
lods
cmpb
mov
pushf
cmp
push
push
les
cmp
incb
icebp
or
jl
mov
mov
aaa
movsb
xchg
sub
nop
adc
push
shll
sbb
push
hlt
push
add
push
xlat
mov
adc
sbb
cmc
jg
out
and
jbe
add
adc
sti
or
pop
add
cwtl
das
add
push
adc
and
sub
and
pop
push
stos
inc
or
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
jmp
inc
popa
popl
adc
adc
mov
inc
sbb
push
inc
movsl
or
loopne
cmp
jge
loope
xchg
push
adcb
or
imul
cmp
lds
test
inc
pop
out
movsb
mov
dec
add
popa
adc
sbb
andb
addr16
or
sbb
inc
js
es
jp
test
lods
icebp
sarl
adc
xor
movsb
mov
lea
rorb
mov
mov
and
xchg
sarl
pop
pop
ja
push
sub
ss
xchg
push
mov
or
push
pop
addr16
mov
jae
inc
sub
add
sbbl
mov
mov
sbb
into
push
mov
mov
inc
cmp
cmpb
je
sbb
jmp
or
dec
arpl
jnp
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
sbb
arpl
or
xchg
ret
aad
imul
mov
aam
pushf
jecxz
in
jmp
rorl
je
and
and
mov
jae
push
xchg
movsl
std
mov
sub
adc
fistps
inc
ficompl
sub
xchg
push
add
daa
push
loope
sbb
cmc
add
or
incl
cmp
jmp
test
sbb
push
add
aas
repz
inc
enter
movsb
pop
xor
pop
and
push
sub
subl
push
faddl
push
sub
pop
sahf
int
int
add
mov
into
icebp
ja
sbb
lods
call
add
inc
dec
jl
jns
shll
mov
mov
jle
dec
mov
es
and
dec
inc
insl
and
cld
sbb
sub
rorb
pop
push
test
jbe
inc
rclb
lea
add
sbb
mov
lea
mov
dec
xchg
sbb
test
data16
hlt
sbb
dec
lahf
xor
adc
push
outsb
push
xchg
movsb
jb
cs
aad
sub
cmp
mov
imul
daa
pop
stos
pop
xor
add
adc
ja
out
adc
dec
data16
pop
sbb
std
mov
mov
mov
jb
jg
scas
push
test
cmp
std
push
popf
pop
lock
dec
cwtl
jnp
jno
test
add
jle
testl
and
pop
insb
adc
xchg
push
push
aas
adc
inc
pop
and
cli
ret
dec
insb
cmp
shlb
sbb
movsb
or
jmp
mov
xchg
jge
call
inc
test
jge
cmp
movsb
lret
and
fwait
xchg
cmp
mov
sbbb
jecxz
inc
adc
sbb
pop
shlb
movsb
add
pop
and
jl
in
sbb
in
dec
inc
sub
dec
lcall
or
xchg
mov
insl
sub
je
nop
add
imul
out
pop
imul
and
push
and
inc
mov
adc
add
andl
pop
in
mov
lock
pop
orl
fistl
fistps
xor
xchg
adc
into
and
pop
inc
and
or
xor
rolb
xor
xor
and
xor
dec
cmp
sti
and
pop
cmp
dec
ret
std
aas
movl
lret
pop
push
pop
mov
xchg
adc
popf
push
xor
sbb
out
or
sub
push
mov
push
push
imul
cmp
and
and
aad
and
gs
jb
or
dec
pop
imul
pushl
jns
add
cld
pusha
movsb
mov
push
int3
js
mov
loope
pop
sub
xor
jne
mov
push
or
sub
inc
mov
idivl
pop
mov
or
push
cmp
jo
sub
and
sahf
aaa
jmp
mov
add
xchg
xchg
pop
je
pop
mov
out
ret
loopne
or
out
rorb
xchg
das
push
clc
xor
add
xor
je
mov
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
pop
dec
cmp
je
jae
rcrl
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
sub
cmp
dec
inc
dec
inc
push
xor
cltd
cmp
jge
or
movsb
outsl
jecxz
inc
cmp
mov
insb
dec
or
mov
addb
xchg
mull
add
jne
mov
adc
outsb
add
testl
and
pop
jmp
fimuls
sub
ja
cmp
push
push
es
rcrl
add
inc
sub
scas
push
mov
sbb
jo
mov
les
mov
les
inc
cltd
scas
pusha
movsb
pop
bswap
add
and
pop
clc
mov
adc
dec
push
xor
pop
pop
mov
mov
push
mov
mov
fs
cld
repnz
cmp
decl
ljmp
pop
into
sub
mov
push
inc
push
inc
ffreep
jg
nop
xchg
dec
cmp
jne
cld
pop
test
mov
lahf
sbb
sahf
into
xor
jmp
loope
ret
dec
mov
dec
jg
push
pop
mov
sub
cmp
push
jbe
test
sbb
cwtl
mov
cmovs
lahf
mov
pop
dec
int3
test
movsb
loopne
or
bound
arpl
mov
sub
loopne
push
ficompl
cmp
dec
scas
test
xor
adc
adc
leave
mov
xchg
in
or
and
or
push
add
cmp
or
add
push
sub
mov
movups
sub
pop
dec
std
push
mov
pop
gs
adc
cmc
or
xchg
push
fnstenv
clc
divb
mov
add
pop
cmpsl
into
les
lock
or
or
mov
push
pop
and
pop
jge
hlt
or
lea
adc
mov
push
mov
push
or
or
mov
cmpsl
fcmovnbe
mov
in
mov
out
push
mov
mov
mov
push
pop
cs
xchg
and
push
xor
cmp
cmp
sbb
aam
cmp
test
cmp
adc
mov
xor
fimuls
sbb
in
push
push
pop
addr16
test
popa
das
push
inc
adc
aad
es
popa
pusha
aad
in
push
test
out
lea
mov
dec
dec
or
lcall
test
subb
push
sbb
sbb
test
mov
xchg
or
nop
sbb
jb
inc
jb
xchg
sbb
xor
inc
sbb
jecxz
jl
iret
mov
push
pop
push
adc
ss
push
jne
inc
dec
mov
dec
mov
dec
lds
scas
inc
sub
push
xor
adc
and
sub
inc
and
mov
leave
xor
and
pop
xchg
hlt
inc
or
dec
xchg
daa
inc
jb
sbb
mov
and
adc
pop
aam
sub
sub
mov
sub
dec
and
xchg
push
xchg
nop
dec
iret
inc
dec
jo
lods
pop
insl
andb
call
xor
ret
cmp
pusha
add
test
popa
test
test
add
inc
lcall
sub
add
mov
or
add
addl
xor
enter
sbb
ret
xor
jne
add
and
rcll
push
xchg
lahf
add
call
push
nop
repz
dec
scas
inc
ret
popf
sbb
inc
ret
add
roll
ja
les
rcrb
or
pop
xchg
adc
mov
popf
roll
xor
xor
cwtl
mov
cmp
movsl
push
rcr
ja
and
sahf
lret
sub
push
cmp
lahf
dec
repnz
sar
addb
push
repz
test
fyl2x
xchg
cmpsb
loop
push
add
xchg
in
aad
sbb
adc
flds
jnp
pop
rcrl
into
jae
jle
test
js
in
fdivrl
sbb
lea
mov
and
jno
xor
loopne
xor
or
inc
es
lock
jl
fiaddl
add
ja
into
inc
cmp
and
or
cmp
or
lods
lods
adc
sub
dec
daa
mov
pop
mov
test
stc
push
cmp
add
add
push
movsb
sub
cmc
outsl
xchg
cmp
jle
data16
inc
add
outsb
mov
cs
scas
jl
shlb
loopne
ret
in
adc
in
and
xchg
mov
push
sarb
push
add
xchg
hlt
jno
cmp
rorb
add
cmp
pop
sbb
xchg
jl
mov
push
lock
loopne
fs
or
lea
dec
cmpsb
scas
or
daa
stc
cmpsb
dec
adc
inc
add
jmp
lea
or
sbb
pop
xchg
push
cmpsl
adc
into
lock
mov
sbb
push
insb
mov
push
hlt
jnp
push
ret
mov
lret
pop
mov
inc
inc
add
add
lea
sub
lret
sub
das
push
dec
in
add
movsb
les
inc
data16
xlat
pop
cltd
shll
inc
cltd
add
mul
insl
jle
mov
cmp
mov
xor
pop
sub
pusha
pop
or
mov
sbb
test
or
push
loop
pop
xor
push
jno
lret
push
adc
mov
pop
mov
ss
dec
or
notl
loopne
movsl
mov
sbb
adc
mov
les
inc
jecxz
cmp
pop
and
mov
iret
inc
nop
mov
js
cmp
dec
fs
jecxz
jbe
cmp
adc
adc
push
mov
popf
adc
fadd
jg
add
xor
jmp
sbb
popf
int3
and
pushf
pusha
xchg
jbe
jbe
popa
ds
pusha
jo
xchg
fwait
je
pop
mov
movsb
mull
inc
pop
cmp
out
mov
push
adc
shrb
sbb
lds
or
aad
cmp
call
ret
adc
enter
mov
jle
dec
xor
pop
and
mov
fstl
xchg
adc
jmp
lea
sbb
sbb
inc
test
adc
pop
and
fwait
xlat
mov
push
xchg
adc
adc
mov
dec
adc
arpl
pop
movsb
push
pop
sti
add
stos
add
jo
rolb
insl
out
cmpsl
lret
enterw
orl
pop
cltd
dec
out
lea
inc
hlt
pop
push
xor
int
and
mov
pop
xchg
rcll
inc
loope
push
sbb
pop
in
pop
sbb
push
xor
add
in
call
pop
jl
jnp
push
push
xor
sbb
push
imul
stos
push
jno,pn
push
notl
lret
enter
mov
je
stos
incl
or
xor
add
fstl
lock
les
adc
je
das
jae
xor
mov
fs
cmp
popa
js
movsb
pop
adc
cmc
or
movsb
xchg
out
adc
or
inc
dec
movb
movsb
adc
cmpsl
or
push
or
lsl
push
lods
movsl
mov
repz
add
xor
dec
cmpsb
or
repz
inc
popa
dec
adc
add
xor
dec
repnz
mov
mov
inc
xchg
mov
call
mov
sub
js
and
cmp
cmp
sbb
lret
inc
arpl
or
or
sub
enter
hlt
jge
sub
pop
sub
iret
clc
imull
cmp
ja
add
jmp
test
push
jge
add
ljmp
stos
mov
cmp
adc
sbb
jge
fs
test
pop
xor
arpl
test
cmp
sub
xchg
inc
xchg
pop
fisttpll
dec
dec
adcl
out
out
inc
sub
and
inc
fs
xor
pop
loop
cmpb
inc
and
xor
sbb
push
adc
mov
mov
push
mov
fwait
insl
movq
pop
andl
push
ret
pusha
xor
cmp
hlt
mov
adc
push
mov
rcr
add
inc
xchg
inc
add
sub
cmpsl
and
pop
popa
dec
dec
and
xor
push
or
cmp
scas
jns
jno
int
add
sbb
jnp
push
sub
or
push
push
pushf
cmp
and
push
adc
push
xbegin
test
les
in
test
js
nop
outsb
sbb
aas
lods
in
sbb
adc
f2xm1
jmp
pop
push
push
je
into
scas
shr
push
cmpsb
cmp
xchg
enter
xchg
adc
pop
bound
js
leave
sbb
mov
xchg
add
ja
push
dec
jne
int3
add
adc
dec
jmp
jne
cltd
jmp
test
pop
or
jae
or
fstl
jmp
adc
fadds
es
sub
dec
shl
mov
add
movsb
ret
popa
and
xor
scas
rolb
push
inc
je
add
push
mov
add
cmp
and
pop
out
sub
fimuls
push
dec
add
movb
mov
push
pop
sub
inc
jge
sbb
dec
inc
add
insb
fstps
xchg
in
or
mov
fstps
sub
in
mov
sbb
test
jl
cwtl
pushf
into
push
movl
adc
movl
iret
xchg
subl
mov
dec
loope
fmuls
sbb
sbb
subl
push
ret
mov
sbb
insb
and
mov
addl
arpl
push
scas
push
pushf
pusha
xorb
loope
push
mov
pop
sub
mov
outsl
and
call
mov
cmp
push
push
sbb
xor
nop
insb
insb
mov
push
and
push
cmp
mov
push
pop
clc
loop
scas
inc
dec
pusha
stc
xorl
push
dec
add
xor
inc
sub
adc
enter
aas
enter
adc
mov
adc
inc
in
insb
hlt
cmc
mov
icebp
mov
pop
dec
loopne
fcoml
sbb
out
or
xor
dec
push
loop
mov
cmp
testl
mov
stc
xor
xchg
lock
leave
add
scas
jle
jnp
js
mov
mov
sbb
lret
mov
jnp
mov
adc
and
aas
xchg
adc
add
mov
add
movl
enter
shr
dec
shl
sbb
ret
cwtl
testb
pop
je
dec
loopne
add
push
ret
or
inc
or
iret
sti
lds
test
xor
xor
cmpb
sar
add
imul
cmp
mov
mov
lock
fistps
scas
mov
jae
out
push
sub
mov
nop
clc
pop
add
or
jne
nop
add
push
call
inc
movsl
in
mov
dec
sub
std
sub
insb
leave
ret
xor
pop
add
shlb
xchg
outsl
fistps
cmp
or
push
sbb
adc
test
sbb
or
add
push
cld
pop
outsl
test
les
pusha
adc
adc
add
mov
or
mov
fcoml
std
jl
jl
xchg
add
inc
or
jmp
fcomip
ljmp
popa
add
data16
mov
sbb
mov
hlt
jne
and
or
pusha
movsl
jb
or
fwait
dec
inc
push
cwtl
dec
mov
mov
xor
cmp
scas
insl
hlt
push
inc
jecxz
push
fisttpl
rolb
mov
adc
dec
ds
je
push
inc
cmp
stos
or
push
hlt
out
push
shll
pushf
ret
lea
daa
mov
xchg
nop
add
shrl
push
loopne
adc
cwtl
lahf
addl
inc
cmp
cmpsb
sub
cmp
sub
ss
mov
sbb
lea
and
mov
push
sbb
imul
ja
inc
push
shll
mov
xchg
cmp
dec
sbb
dec
add
sbb
loopne
inc
pop
add
xor
das
int3
out
fwait
push
sbb
shlb
and
lcall
das
jo
es
enter
rcrl
ss
push
or
and
and
aaa
imul
sbb
lcall
adc
mov
and
push
sbb
cmpl
jl
adc
and
lahf
push
xlat
mov
inc
pop
jp
adc
sub
lret
movsb
add
dec
or
repnz
iret
adc
push
lret
imul
in
lods
or
sbb
fs
push
bound
mov
inc
test
out
jle
clc
and
and
xchg
das
push
add
push
and
push
aam
mov
fdivp
aam
or
xchg
mov
shl
imul
js
pop
out
cwtl
and
mov
xor
mov
push
add
rolb
push
clc
xor
mov
jecxz
mov
inc
jmp
int
call
add
sahf
insb
and
imull
xor
idivb
add
push
fiaddl
call
xor
mov
push
enter
ret
inc
in
stc
fadds
movb
movzbl
dec
int3
mov
loope
daa
std
jnp
pop
movl
pop
inc
sub
or
mov
shl
fs
adc
mov
movsl
inc
and
or
andl
std
inc
bound
and
mov
into
xchg
clc
mov
adc
mov
xor
pop
sbb
clc
or
jno
sti
jmp
pop
sbb
adc
and
mov
inc
sub
inc
sub
xchg
rclb
cli
jge
inc
dec
mov
push
loopne
lea
push
jle
aam
js
or
les
pop
push
dec
mov
sub
and
roll
ljmp
jbe
das
and
mov
push
xor
popa
sbb
jbe
cmp
cs
push
outsl
aas
scas
jge
add
sub
incb
bound
movsl
add
rcll
push
or
inc
jle
pop
aas
dec
adc
and
xlat
mov
ljmp
or
ss
pop
loop
push
stc
movsl
std
aas
sbb
push
add
push
push
push
push
pusha
in
mov
xor
ret
in
pop
rcrb
je
inc
lcall
test
push
jne
mov
call
test
push
or
or
push
cmp
jne
dec
cmpsl
xor
jle
jl
rorb
lds
popl
cmp
lea
nop
mov
push
movsb
push
sub
test
sub
xor
dec
xchg
nop
sbb
adc
cmpsl
loopne
pushl
pushf
nop
loopne
fiaddl
int3
jmp
and
sahf
mov
and
add
adc
or
sub
ds
jp
je
sbb
movsl
cs
in
xlat
mov
jbe
inc
cwtl
lcall
dec
or
ljmp
lea
add
lea
cmpsl
lds
in
js
mov
dec
fnstsw
mov
incl
pushf
cmp
jle
cmp
js
rcrb
add
xor
pop
nop
jnp
xchg
xchg
jbe
mov
cwtl
push
popf
enter
adc
cmpsb
inc
cld
sbb
jnp
xlat
cmp
hlt
push
imul
jne
adc
std
ss
cmp
test
pop
inc
and
icebp
pop
pushl
lret
nop
lods
addb
inc
xor
lcall
fwait
pusha
xor
sub
sbb
inc
shll
scas
stos
mov
imul
enter
stos
xor
mov
scas
sbb
andl
jae
xor
xor
mov
push
sarl
push
pop
rol
add
adc
jle
fistps
push
inc
cmp
addr16
in
in
pop
jg
shll
and
push
cmp
jge
or
xchg
and
inc
jne
inc
clc
jo
or
jnp
in
cltd
ret
test
mov
into
insb
and
mov
adc
loop
push
jecxz
lea
fildll
mov
xchg
add
fs
mov
nopl
mov
push
in
jg
jnp
lcall
inc
or
outsb
pop
xor
sub
pop
add
ja
cmc
adcb
popa
and
cltd
call
push
roll
cmp
rcrb
loope
mov
pop
leave
or
inc
fcmovbe
add
cmp
es
push
jg
pop
in
into
sarb
cmp
cmpsb
cmpsl
std
jb
dec
jmp
and
dec
mov
popf
sbb
scas
push
int3
test
cmp
cmp
cmp
or
in
hlt
jae
adc
add
sti
dec
or
mov
xor
and
adc
inc
shrb
adc
lock
int3
je
int3
push
int3
pop
loop
add
in
adc
out
sbb
push
add
add
fdivl
pop
xor
push
jmp
das
cmp
and
or
xchg
or
daa
dec
xchg
add
mov
fdivs
xchg
cmp
je
test
sbb
jle
enter
iret
mov
fsubl
inc
repnz
sbb
cmp
add
les
sar
pop
push
scas
add
aas
xor
dec
dec
add
push
adc
lret
cmpb
int
xchg
jae
lcall
arpl
insl
dec
mov
jmp
mov
cli
mov
jns
push
xor
pop
xchg
into
aas
inc
popf
loope
jecxz
es
shlb
push
imul
xchg
xor
sub
clc
loopne
cmp
push
loopne
lods
pusha
bound
and
push
lret
mov
add
jge
in
es
cltd
push
pusha
push
fldcw
pusha
lret
or
pop
fisubs
xor
loopne
push
subb
dec
and
push
fildl
add
adc
sub
idivl
add
cmpw
sbb
cmp
hlt
outsb
aad
adc
add
fucomip
or
pop
mov
add
sar
mov
jmp
es
push
je
repz
lcall
adc
pop
jns
adc
mov
add
cs
pop
and
or
lea
fwait
inc
and
les
fcomps
dec
dec
dec
jl
int3
test
jp,pn
sub
jmp
outsl
add
mov
movzwl
outsl
out
dec
sub
add
pop
or
or
xor
xchg
sbb
cmp
or
add
add
fisubl
cmp
inc
fwait
mov
xchg
das
adc
jae
xorl
adcl
nop
add
add
icebp
inc
outsl
cmp
std
pshufw
imul
sar
xor
jb
and
pop
and
loope
enter
mov
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
lods
rorl
mov
cmp
fdivl
and
or
imul
push
mov
pop
adc
and
icebp
push
sbb
mov
js
and
je
add
push
psllw
jge
sbb
roll
sbb
in
pop
subl
dec
jge
addl
xor
mov
jne
push
adc
stc
fldl
pushf
or
adc
push
fs
nop
xchg
xor
bound
lock
test
mov
adc
or
adc
mov
shrl
mov
js
xchg
or
insb
dec
inc
iret
mov
push
push
mov
pushf
xchg
pushl
mov
or
in
add
ja
xchg
scas
movl
and
sub
or
dec
mov
rorb
and
fwait
nop
arpl
shll
dec
lods
pusha
or
sbb
mov
scas
sbb
stc
sbb
in
sbb
push
sbb
stos
add
add
dec
cmp
mov
pop
je
pop
jmp
push
pop
dec
insl
std
adc
daa
push
push
cmpl
cmc
and
pop
jo
or
add
pop
adc
and
and
imulb
mov
mov
dec
sti
mov
inc
sarl
clc
cli
mov
loop
stos
push
negl
mov
hlt
fadds
dec
jmp
mov
push
mov
into
test
shr
mov
dec
pop
jne
test
popa
movsl
add
adc
mov
xchg
loope
fwait
nop
push
xor
or
push
roll
andb
cmc
scas
orl
repz
mov
cmp
je
jge
ss
adc
mov
loopne
push
pop
in
push
fldl
sahf
out
nop
sbb
pop
pushl
loopne
das
test
cmp
xor
sbb
fyl2x
fcoml
sbb
in
aad
sbb
pusha
inc
and
xor
insl
push
jnp
or
xchg
dec
loopne
adc
leave
scas
push
popf
mov
test
inc
jle
cli
sub
push
aam
pop
mov
push
dec
lods
and
out
lock
adc
lahf
in
jge
xchg
mov
mov
dec
jo
jecxz
push
in
cmp
shrl
mov
stos
imul
addb
inc
pusha
mov
popa
dec
jae
sub
adc
ljmp
push
inc
pop
ret
aaa
movsl
cmp
pop
jmp
push
push
das
rclb
jo
lcall
xor
sbb
inc
cmp
cwtl
adc
ljmp
in
addr16
xchg
mov
insl
arpl
pop
not
add
adc
dec
sub
adc
orb
cmp
inc
add
cwtl
nop
xchg
xor
push
xor
pop
fs
cmp
imul
or
jns
or
and
add
xchg
divl
adc
mov
outsb
inc
mov
sbb
push
xor
mov
dec
test
inc
push
clc
inc
push
sub
sub
xor
add
js
test
jo
sahf
addr16
shlb
sub
mov
out
popf
outsl
push
add
mov
popa
iret
cmpb
inc
inc
dec
push
jle
and
scas
test
out
cmp
adc
and
jne
push
call
sbb
or
sub
adc
sahf
loope
mov
rol
or
cmp
repz
push
pop
dec
xchg
adc
sbb
dec
mov
dec
push
cmp
dec
jbe
lea
sub
inc
notl
loope
test
adc
mov
insb
xor
loopne
incb
popf
adc
imull
adc
cwtl
jge
mov
mov
int3
push
jle
inc
into
ror
roll
enter
fidivrl
push
xchg
mov
mov
and
lods
rclb
mov
scas
pop
subl
loopne
repz
xchg
or
add
sahf
stos
push
test
mov
call
inc
or
insb
sbb
dec
cmp
inc
xorb
or
or
inc
jp
dec
in
add
jmp
fisubl
mov
shrb
popf
data16
pop
in
push
jmp
rolb
cmpb
adc
add
lret
in
daa
lods
mov
sub
in
test
aaa
adc
xorb
push
jle
and
ret
adc
push
adc
mov
add
pop
add
dec
and
or
mov
pop
pop
cmpsl
gs
and
popf
or
sub
sub
add
int
push
gs
fsubrl
add
bound
icebp
cmpsb
xchg
mov
stos
sbb
jl
xor
jmp
rclb
aas
mov
shll
or
pop
mov
push
push
push
push
adc
jo
add
mov
inc
outsb
adc
sbb
lods
popf
iret
adc
ret
std
incl
jg
lea
xor
je
cmp
jbe
adc
jmp
outsl
lods
cmp
jmp
push
jg
lods
push
repz
cmp
jb
dec
pop
mov
xor
pop
rorb
and
addl
xchg
sub
jecxz
adc
arpl
sub
dec
and
mov
jle
negl
stos
movsl
and
jl
call
bound
or
xor
and
jmp
cmp
jne
xor
insl
mov
int
sbb
jmp
ss
shlb
or
clc
cmp
cmp
jne
push
jmp
std
divb
cmp
cwtl
loopne
cmpsl
push
pushf
jne
push
push
and
les
into
mov
mov
mov
seto
neg
or
push
pop
sbb
in
aam
add
adc
notl
fstpl
cmp
repnz
jge
jbe
popa
fwait
enter
shl
fcoms
jbe
mov
xor
jle
mov
lret
je
mov
mull
mov
mov
ljmp
jecxz
popa
push
int3
mov
mov
add
inc
inc
and
mov
subl
pop
mov
cmp
into
adc
adc
pop
inc
xchg
xor
add
push
sbb
lcall
cmp
insb
mov
in
pushf
inc
mov
les
or
cmpsl
repz
adc
inc
mov
dec
add
sub
jns
adc
or
cmp
incl
andl
mov
lcall
mov
jno
or
enter
cld
mov
or
jo
or
fisubs
adc
pop
sbb
sbb
adc
mov
push
push
mov
push
and
adc
andl
mov
insl
or
test
scas
add
pusha
dec
loopne
mov
jno
and
dec
push
or
adc
sbb
add
push
lds
repz
xchg
outsb
inc
add
aaa
or
ljmp
cmp
xchg
out
pop
adc
mov
sbbl
gs
add
and
and
inc
rcrb
dec
mov
in
add
ffree
leave
aaa
stos
scas
sub
adc
jl
sub
outsl
dec
xor
mov
pop
ret
movsl
xorl
orl
scas
adc
clc
push
sarl
and
sbb
orb
in
pop
add
imul
xor
cwtl
cmp
es
mov
js
inc
test
push
and
add
xor
cmpb
cltd
pop
dec
scas
and
xor
add
popf
or
popa
sbb
mov
cmp
adc
pop
sbb
pop
add
add
mov
imul
xor
xchg
add
stos
or
cmp
inc
mov
lea
mov
insb
fs
fildll
jb
movb
or
pop
adc
movups
or
das
inc
cmp
lret
pop
pop
movl
dec
inc
sbb
jbe
popa
cmc
or
sbb
add
push
inc
add
negb
sahf
xchg
popf
les
or
dec
push
or
pop
enter
adc
jge
adc
nop
and
mov
fwait
adc
mov
sbb
dec
push
pushf
shrb
jmp
pop
jge
cmpsb
push
or
imul
jb
xchg
addl
mov
mov
add
mov
popf
les
sbbl
add
lea
sbb
dec
inc
mulb
cwtl
sub
sbb
xor
push
sub
pop
iret
mov
sbb
xchg
push
lea
in
movsl
pop
cmpsl
adc
push
ret
pop
popa
cltd
subl
xchg
inc
push
add
xor
adc
xor
add
sub
andl
mov
rcrb
xor
sbb
and
xor
fwait
mov
fs
je
cli
call
push
cmp
mov
ss
sub
push
insb
inc
pop
xor
or
and
daa
add
push
cltd
mov
shlb
arpl
scas
loop
xor
jns
adc
and
sub
add
daa
popf
cld
icebp
mov
xchg
add
and
stos
in
push
mov
xchg
enter
ss
sub
bound
out
xor
jae
jb
punpckhbw
ss
cmp
mov
inc
arpl
xchg
lock
leave
test
sahf
or
jmp
pop
popa
fdivr
mov
sbbb
rolb
ret
or
pop
in
push
pusha
xor
or
pop
movsb
ljmp
and
rorl
lock
dec
shrb
sub
and
daa
pushf
jae
ja
push
movsb
sub
or
xchg
ficoms
add
out
mov
lea
das
push
scas
jecxz
lea
push
insl
or
out
and
call
mov
dec
and
and
in
addb
add
rol
mov
orl
int3
ret
and
add
mov
outsl
adc
lret
ret
pop
or
shll
cs
cmp
cwtl
jecxz
data16
push
fs
lea
dec
jb
or
ss
bound
iret
cmpsl
lods
pop
addr16
sbb
and
fistl
dec
int
roll
or
mov
mov
add
sbb
mov
test
scas
xor
sbb
lock
xor
aam
cli
repnz
adc
push
pop
and
setne
mov
aaa
jae
dec
push
sbb
test
dec
inc
adc
adc
in
push
or
jno
stos
cmc
or
cmp
push
fs
cmc
mov
add
ret
repz
and
fistl
add
xchg
jmp
ja
lods
sub
sbb
add
adc
xor
orb
xorl
sbb
adc
rorl
cmp
add
movzwl
add
adc
or
pop
sbb
test
outsl
movsb
jb
sbb
inc
sbb
adc
push
or
or
xor
and
xchg
push
fimull
test
or
adc
inc
daa
push
ret
jne
outsb
cmp
es
adc
sub
mov
jo
mov
push
mov
cmp
je
push
mov
leave
cmp
mov
or
sbb
sbb
cmp
fmuls
jge
daa
mov
jg
es
xor
aaa
cmp
jne
mov
sub
hlt
nop
inc
xor
fbstp
mov
iret
push
sbb
push
push
xor
or
psubsw
sarl
inc
rolb
push
sbb
es
add
in
and
add
add
into
ds
and
jle
clc
xchg
es
ds
cmp
adc
sub
sbb
sub
dec
inc
or
insl
mov
and
sbb
cltd
sub
dec
rcl
cmpsb
les
scas
mov
clc
mov
fisubl
push
jbe
pop
int
adc
pop
mov
mov
adc
test
ret
cmp
mov
rcrb
mov
jp
add
ficomps
sbb
sub
or
adc
adc
das
les
xlat
pop
pop
jae
arpl
test
popa
fdivrs
aam
dec
mov
jae
repnz
push
add
adc
shlb
shl
adc
pop
or
adc
add
fdiv
out
add
sbb
inc
pop
dec
out
xchg
and
mov
adc
cwtl
xor
and
adc
jno
mov
rcll
add
fcomps
imul
fldl
loop
dec
divl
xor
jns
das
icebp
push
add
fstl
mov
and
mov
daa
push
push
inc
pop
jmp
in
mov
xchg
xor
jae
in
jno
or
adc
add
enter
and
gs
inc
es
stos
sub
jb
and
sbb
aaa
xor
or
jno
arpl
sub
dec
adc
adc
pusha
sub
test
jae
aaa
sbb
push
cmp
shrb
inc
jge
mov
cpuid
push
ss
sbb
pop
rolb
pop
fildl
int
cmp
push
dec
lock
push
ja
rcll
push
movzbl
stos
and
in
adc
sbb
xchg
hlt
iret
nop
in
jne
push
dec
imul
sbb
test
and
ja
in
repz
sbb
mov
cmp
mov
test
je
test
or
insb
shrb
ret
mov
push
rol
xchg
and
shll
mov
mov
jge
addr16
mov
push
mov
sub
test
cmp
jne
mov
pop
cwtl
cwtl
fisttps
lds
mov
jne
cmp
mov
ss
push
aad
scas
imul
shrb
jne
shrb
xchg
popa
pusha
cmpsb
push
push
and
add
je
pushf
lds
adc
dec
dec
test
je
or
and
in
or
adc
and
push
iret
test
cltd
sti
add
xchg
sub
dec
test
cmp
ljmp
test
sbb
daa
cmpsb
inc
mov
or
and
nop
js
lea
daa
xor
add
xor
push
sbb
jge
and
mov
add
hlt
dec
add
fldt
je
and
out
inc
hlt
jne
js
xor
dec
ret
int3
outsl
add
mov
outsb
sbb
adc
movsl
cwtl
jg
ficompl
popf
ficoml
adc
addl
jns
add
mov
dec
or
lea
inc
bound
or
in
leave
rolb
xchg
mov
jmp
dec
sub
mov
adc
mov
lcall
popa
push
mov
add
aas
and
push
add
ja
mov
sbb
push
fisttpl
arpl
cltd
lods
xor
bndstx
sub
mov
pop
imul
xchg
mov
into
les
add
insb
or
push
sahf
popa
leave
sbb
mov
add
sbb
or
dec
movsl
lock
pop
pop
or
call
jne
inc
mov
in
stos
and
push
jl
push
test
sub
adc
enter
stc
sti
push
nop
and
movsb
lea
inc
push
jle
jno
cmp
push
das
fmuls
push
adc
leave
jne
fdivs
push
adc
mov
push
mov
push
jg
push
adc
loopne
sub
fcomps
stos
jno
adc
inc
out
sbb
rolb
icebp
jne
mov
int
or
sbb
shlb
cmp
je
xchg
xchg
inc
push
mov
ret
loopne
xor
inc
or
jmp
push
pop
mov
dec
push
mov
test
imul
add
jnp
jbe
scas
cmp
sub
or
filds
test
lock
and
adc
push
sub
jle
shll
fs
push
jg
or
inc
loop
push
push
fld
jmp
push
inc
inc
sub
cmp
sub
insl
or
test
xchg
jne
push
jmp
imul
stc
or
and
nop
rolb
push
lahf
in
in
xchg
sahf
pop
sbbb
push
add
jb
dec
faddl
rclb
outsb
in
sub
and
pop
jnp
mov
enter
and
sbb
ljmp
sbb
test
mov
push
roll
mov
inc
cmp
roll
push
sub
pop
adc
mov
dec
sti
mov
leave
mov
sub
inc
cmp
jb
iret
push
sub
lea
pusha
dec
loopne
add
mov
dec
inc
sub
adc
push
loopne
inc
and
popa
daa
test
cs
hlt
adc
movl
in
shll
cmp
push
rorl
and
sbb
sbb
add
push
push
pop
lcall
pop
xor
cwtl
fs
adc
xorb
xchg
mov
mov
mov
and
mov
dec
adc
lret
fisubs
movsl
push
cmpsl
mov
fdivl
inc
jno
sub
dec
pop
cli
cmp
push
jmp
and
pop
fstpl
test
pop
or
sbb
inc
cmp
xor
push
dec
push
pop
sbb
adc
in
pop
or
mov
fisubs
xor
aad
leave
mov
icebp
je
push
out
jbe
std
adc
rclb
sub
fcmovbe
pop
lock
adc
jne
cmp
fistl
jns
clc
mov
sahf
lret
or
mov
leave
pop
dec
mov
push
test
orl
push
mov
call
xchg
movl
or
lods
rcrb
movl
or
sti
push
stos
pop
and
add
jge
pop
imul
cmp
and
sub
addl
push
mov
adc
xchg
cmp
push
sbb
mov
push
push
mov
or
lea
or
push
ret
ret
adc
add
push
sbb
push
push
shlb
add
test
sub
lea
mov
fisttpll
sub
sarb
loopne
cltd
and
xor
ljmp
inc
test
sbb
call
call
jecxz
loopne
and
mov
movlps
mov
jg
pop
push
bound
hlt
mov
fstps
iret
outsl
mov
add
push
cmp
push
cmp
jle
cmp
jp
cmp
repz
cmp
cmp
inc
add
add
incl
leave
rclb
movl
test
daa
mov
enter
mov
decl
push
cltd
pop
idiv
js
jne
lock
cmp
imul
or
adc
dec
push
test
aam
cmp
dec
subl
into
jl
add
cmpsb
xorl
inc
call
hlt
cmp
outsl
xor
dec
mov
data16
pop
xchg
stos
xchg
adc
xor
insb
push
xor
fwait
imul
dec
movsl
or
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
mov
sbb
daa
int
cmp
add
add
push
testb
sahf
add
cmpsl
add
xchg
add
js
scas
fs
stos
iret
pushf
or
adc
popl
pop
les
xchg
stos
pop
pop
pop
sub
xor
les
pop
and
and
insl
or
in
mov
aam
inc
and
enter
arpl
pushf
cmp
imul
dec
add
and
insl
je
mov
je
mov
jl
outsl
mov
aaa
mov
movsl
adc
les
daa
xor
movsb
fwait
xor
arpl
sbb
dec
pop
mov
dec
push
sub
test
test
pusha
push
add
mov
cmp
xchg
sbbb
inc
dec
sbb
push
mov
or
and
push
add
xchg
dec
leave
jmp
push
add
popa
xchg
stos
push
and
adc
mov
sub
hlt
pop
ret
push
sbb
movsb
test
outsb
or
xor
xchg
sub
push
lods
jne
add
sub
in
or
and
sbb
sub
inc
sbb
in
sub
add
or
push
sbb
add
inc
fwait
test
mov
push
inc
sbb
stc
add
xchg
nop
mov
xchg
pusha
in
push
push
outsb
and
jnp
sbb
push
fstpl
sarl
inc
xchg
iret
adc
inc
cwtl
mov
adc
inc
cltd
rcrl
push
pop
mov
lods
cmpsl
std
sub
movsb
lds
test
inc
divb
data16
loopne
cmp
add
adc
popf
adc
imul
add
mov
leave
dec
cs
adc
adc
orb
add
or
cmp
xchg
adc
mov
subb
or
dec
ret
push
lock
mov
cld
cmp
in
jo
out
pop
mov
push
and
xor
jge
push
in
sbb
lret
mov
or
jo
xor
push
loope
and
xor
and
pop
xor
mov
enter
aam
and
sbb
rol
push
sub
and
cli
ficoms
nop
out
imul
pop
int
jae
ss
stc
sbb
sub
add
sbb
jbe
mov
sti
cltd
or
adc
das
cmp
xor
xchg
out
sarb
add
stos
sbb
xor
lock
add
xor
add
ret
pop
or
stc
xchg
xchg
nop
inc
outsb
and
lods
mov
arpl
and
fwait
adc
adc
xchg
sbb
dec
leave
xchg
testb
or
inc
jno
adc
icebp
adc
xor
cmp
cmp
ljmp
jbe
pop
mov
xchg
mov
adc
inc
dec
cli
push
rcrb
xor
ret
int3
inc
std
dec
popf
inc
and
inc
xchg
or
xor
mov
jb
mov
and
std
jb
test
inc
cmp
sbb
flds
adc
outsb
xorl
stos
push
inc
inc
lock
sbb
imul
les
in
cmp
stos
jge
cmp
popa
mov
jne
pop
mov
sbb
outsb
jns
scas
lock
add
pop
stos
push
rcll
push
cmp
pop
addl
xlat
pop
pop
in
cs
xchg
add
roll
mov
adc
sbb
add
xchg
mov
add
inc
shrl
add
xor
add
push
push
sti
mov
adc
push
leave
lock
ficoml
pop
adc
dec
lods
popa
push
add
push
imul
je
add
adc
ss
nop
or
adc
loope
dec
jno
lea
mov
int3
orl
and
push
es
cmp
je
cmp
jle
push
es
jecxz
add
or
jbe
jecxz
add
inc
int
loop
sbb
loopne
pop
pushl
jecxz
mov
cmp
add
dec
sbb
bound
pop
js
imul
int
inc
push
and
mov
xchg
xchg
push
mov
xor
or
mov
adc
popa
negl
in
pop
daa
loop
xchg
out
inc
dec
push
add
or
jge
mov
xchg
xchg
fldl
pop
mov
les
nop
mov
add
inc
inc
mov
push
fldl
push
sbb
cmp
invlpg
sbb
and
cmp
fstpl
into
loop
in
jge
push
pop
mov
pop
or
adc
and
pop
fsub
pop
fsubrp
sub
daa
fwait
sub
sub
jp
popl
movl
xchg
or
neg
ss
idivb
aaa
inc
adc
inc
sub
mov
cmp
push
add
imul
roll
ljmp
xor
mov
jge
mov
lahf
fidivs
loopne
movb
cmp
roll
cmpl
add
pop
jo
cmpb
insb
cmp
outsb
outsl
mov
ret
ja
loopne
xor
push
mov
movsb
jo
loop
adc
xor
and
insl
idivl
mov
push
std
ret
add
mov
nop
hlt
andl
sqrtps
mov
push
insb
mov
outsl
dec
loopne
fwait
mov
pusha
or
lea
mov
ret
nop
push
cmp
xor
clc
jg
fcomip
xor
or
lock
stos
xor
shld
add
cs
push
ja
jb
lret
inc
ja
lea
push
push
and
push
sbb
popa
ret
popa
dec
and
add
push
leave
adc
cmc
in
push
mov
push
adc
push
push
pop
addr16
jecxz
ret
or
sbb
mov
ret
push
int3
mov
push
lcall
ror
test
dec
mov
inc
dec
push
dec
roll
add
dec
push
mov
adc
ja
xchg
decb
clc
push
jne
dec
shll
add
adc
pop
mov
cmpsb
mov
popf
mov
push
sbb
jb
cld
ja
pop
dec
inc
cmpw
jne
mov
cld
sahf
repnz
inc
inc
cld
cmp
sti
push
xchg
dec
push
push
jl
mov
mov
inc
xor
lea
cmp
or
insb
leave
out
push
loopne
or
or
push
push
ret
adc
and
imul
dec
pusha
sbb
lods
sbb
sbb
push
push
cmpsl
lods
aaa
scas
add
push
mov
pop
add
mov
xor
and
sbb
sbb
push
sbb
pop
sbb
add
sub
mov
scas
mov
shll
cmp
dec
ss
cmp
gs
xchg
arpl
mov
xor
cld
lods
or
adc
popf
or
mov
dec
stos
inc
sbb
inc
sbb
jp
dec
jno
movsb
std
aaa
and
pop
icebp
ljmp
mov
nop
dec
sub
inc
sbb
scas
stos
sub
lods
mov
sub
mov
movsl
push
cmpsl
sbbl
ret
dec
and
gs
cmpsb
insl
popa
mov
out
or
movsl
sub
dec
jo
or
add
test
pop
and
sbb
mov
xor
xchg
arpl
orl
mov
sbb
aam
cwtl
mov
rcr
pop
sbbl
jb
xor
cmp
pop
ret
pop
add
xor
fcoms
xchg
ja
shlb
movsl
xor
dec
add
lock
into
inc
ret
jmp
popa
jno
xor
add
adc
add
insl
aaa
push
lcall
cs
hlt
fdivs
and
pop
ret
and
pusha
adc
sarb
movsb
pop
inc
cmp
cmp
inc
or
pop
mov
and
outsl
xor
cmc
cmp
jbe
mov
ret
jge
sub
push
cmp
fs
in
test
lods
and
and
add
stos
fstps
insb
or
mov
insl
mov
test
add
adcl
lods
add
test
adc
cs
mov
loopne
sub
and
lcall
add
and
rcl
outsb
cmp
mov
mov
fimuls
loop
or
int
or
mov
or
inc
pop
pusha
jp
or
test
sbb
push
ja
sub
dec
mov
outsb
mov
jg
jbe
fmuls
mov
lock
cwtl
jmp
mov
aad
and
pop
add
rclb
inc
pop
mov
je
loopne
ret
je
sub
dec
sbb
cmc
dec
roll
sbb
dec
jne
cmp
int3
dec
push
repnz
repnz
out
adc
jmp
push
push
push
push
adc
pop
push
jne
adc
xor
add
dec
shrl
pop
jmp
in
rcr
cmp
shll
push
pop
fadds
loop
xor
jmp
push
push
por
mov
push
scas
adc
xchg
sahf
pop
movsb
sbb
aam
data16
mov
cmpsb
inc
arpl
jbe
add
idiv
loop
insb
inc
ja
or
adc
adc
cmp
add
xchg
push
or
inc
adc
push
inc
dec
jo
jns
sbb
cmp
sub
inc
ficoms
pop
inc
inc
inc
cmp
cmp
sub
pusha
inc
in
push
sub
daa
adc
mov
and
mov
push
neg
je
pushf
dec
jnp
addr16
jo
insb
loopne
cld
mov
dec
daa
icebp
add
mull
jae
orb
xchg
cwtl
dec
jp
aas
mov
inc
mov
push
fildll
dec
imul
and
sbb
sbb
jo
jg
sbb
cmp
lahf
in
push
mov
push
sahf
xlat
lock
sbb
jl
xchg
cltd
mov
jns
out
iret
frstpm(287
icebp
iret
repz
sbb
inc
dec
cmp
repz
outsl
jns
repz
repz
cltd
mov
cmp
ror
loope
negl
push
or
jo
jns
xor
sbb
orl
pop
push
roll
and
scas
and
aad
jp
jle
mov
xchg
xor
popf
mov
pop
loop
mov
imul
adc
and
sub
jp
int
shr
jno
add
sub
ja
daa
adc
pop
or
aas
insb
sub
fwait
jmp
jl
mov
sub
xor
pushf
push
imul
in
inc
cmp
popf
cmp
cmp
xchg
push
nop
or
inc
adc
xor
std
xor
mov
xchg
xchg
arpl
je
add
inc
or
xchg
inc
xchg
cmpsl
xor
push
pop
add
enter
or
push
cmp
cwtl
and
sub
dec
test
pop
jo
adc
adc
inc
jo
movsb
xchg
push
ds
cmpsl
or
int3
sahf
idivb
push
ja,pt
rorb
cmp
pop
sti
sbb
js
push
xor
cmpb
test
push
mov
add
push
add
imul
lea
out
cmp
adc
js
rorb
pop
andl
xor
scas
mov
fstl
andl
push
xor
clc
daa
int
xor
stc
jl
pop
inc
popa
and
outsb
sub
sbb
or
and
imul
sub
sub
adc
pop
jo
enter
sar
cmc
xor
sub
je
cli
stos
dec
pop
inc
pop
push
inc
adc
mov
inc
dec
xor
jnp
mov
test
pop
push
fcmovne
lea
add
out
jnp
imul
xlat
shlb
push
lds
push
pop
or
mov
adc
jno
or
sbb
push
arpl
inc
and
adc
jns
call
lea
or
sbb
fcompl
jne
int3
rcrb
shlb
les
test
movhps
sub
notl
fwait
je
mov
inc
icebp
mov
es
in
xor
xor
loop
rolb
sub
sarb
and
icebp
push
ds
jge
xor
cmp
enter
enter
pop
dec
aas
sub
mov
gs
sbb
sub
bound
push
jbe
push
and
std
cmp
cs
les
mov
push
sbb
bound
out
fimull
xor
mov
xor
sbb
xor
xor
sub
sub
sub
enter
or
sub
xor
xor
popf
inc
or
scas
jnp
int
jns
xchg
adc
xchg
faddl
ret
or
loope
aaa
ret
xchg
xor
push
insb
inc
sub
xlat
sarb
xor
repz
xor
dec
mov
rolb
loope
inc
inc
cmp
sarb
cmp
jbe
inc
cld
cmp
jnp
mov
cmp
sbb
rclb
out
fwait
sbb
and
sub
dec
sbb
sbb
mov
movsb
test
and
push
and
aas
and
sbb
push
jg
sub
movsb
sbb
negb
add
test
sub
lcall
icebp
loope
mov
hlt
lock
and
jmp
pop
fdivr
ja
pop
jo
jecxz
xor
fstl
jge
pop
frstor
dec
inc
ss
popf
mov
push
sbb
aaa
out
insb
mov
sbb
push
mov
js
push
enter
sbb
mov
xor
hlt
push
scas
rorl
mov
pop
push
xor
fmul
ds
enter
dec
push
iret
and
mov
cmp
enter
test
push
lahf
push
lret
sub
push
xor
orb
cs
mov
stos
xchg
jl
nop
and
jmp
or
ds
aaa
cmp
repnz
mov
jnp
inc
inc
mov
inc
push
sbb
cmpsb
enter
cltd
rolb
mov
mov
aaa
daa
cmpsl
aam
xchg
cmpsb
inc
outsb
rclb
inc
push
dec
dec
xchg
fwait
inc
pop
mov
inc
xlat
inc
or
inc
ret
ret
push
je
or
stc
pop
out
sbb
sub
repnz
pop
inc
ss
pusha
inc
inc
ret
and
adc
lea
sbbl
adc
mov
jp
dec
dec
add
push
fwait
inc
cmc
cmp
inc
xchg
push
gs
cmpsl
std
fdivrs
push
in
mov
rorb
fnstenv
and
pop
pop
fisubrs
or
sbb
adc
and
add
dec
loop
inc
ljmp
dec
and
es
mov
pusha
xor
dec
mov
arpl
and
mov
fmuls
mov
ret
dec
loopne
sbb
cmc
xchg
movsb
sbbb
and
xor
out
push
pop
inc
divl
sub
outsl
outsb
xchg
les
repz
add
pop
pop
dec
outsb
cwtl
pop
cmp
xchg
out
iret
xchg
mov
or
add
js
scas
inc
rorb
jo
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
dec
adc
inc
adc
aas
add
or
faddp
aas
dec
adc
push
mov
es
ficompl
lock
enter
inc
outsb
pop
inc
adc
cmpsl
mov
push
push
push
fwait
nop
fwait
pop
xchg
push
pop
and
sbb
push
dec
enter
push
movsb
push
dec
rol
jl
lods
push
test
jl
push
pop
or
int
pop
mov
clc
dec
adcb
mov
mov
cs
outsb
inc
push
in
test
movsb
loope
lods
inc
sbb
or
jl
movsb
test
and
adcl
test
pop
xchg
adc
add
sub
jno
fdivrs
adc
mov
cld
not
inc
xchg
adc
test
movsb
mov
push
cwtl
roll
mov
pop
cmpsl
mov
int
mov
rorb
or
push
pop
pusha
push
pop
inc
loopne
and
fdivl
adc
push
push
add
int
mov
mov
xor
pop
inc
cmp
push
mov
leave
inc
xchg
movl
pop
inc
lock
lock
push
add
xor
mov
int3
test
mov
pop
add
xor
sbb
add
aaa
cmc
insb
pop
test
pop
inc
or
mov
in
dec
data16
cmp
call
jns
mov
add
add
pop
or
call
rclb
mov
stc
or
and
pop
jo
xor
pop
adc
or
or
xchg
xor
push
pop
lret
pop
mov
rorb
cmp
mulb
scas
cmp
inc
out
adc
pop
adc
shlb
push
loopne
lcall
xor
xor
or
cmp
xchg
xor
arpl
push
xchg
ja
pop
mov
adc
sbb
pushl
or
mov
pop
inc
mov
jp
sbb
subb
inc
cltd
sub
jge
adc
sbb
rorb
scas
sbb
test
imul
ret
rol
push
add
and
int3
sbb
mov
push
and
or
nop
fwait
and
mov
sahf
sub
adc
test
add
es
rorb
mov
test
mov
mov
and
sub
mov
in
push
pusha
cmp
xchg
daa
xchg
ss
loope
add
ss
ret
jbe
sbb
and
int
push
push
aam
push
cmpl
pshufw
add
mov
adc
push
sbb
cmp
dec
es
add
pop
xchg
andl
test
movsb
xchg
int3
les
daa
mov
jo
or
and
push
push
fs
sbb
dec
clc
test
sbb
or
push
adc
lods
adc
adc
push
test
mov
ja
cmpps
push
mov
or
jge
inc
jp
bound
push
shll
or
push
push
pushf
push
jp
pop
subb
sbb
xchg
outsl
loop
pop
dec
or
and
sbb
lea
sbb
daa
insb
sub
ss
and
add
test
loop
aam
jno
add
lock
cmp
cmp
xor
fisubrl
jae
pop
dec
movsl
jmp
push
cmp
lock
jo
add
loop
sbb
inc
lahf
cs
jl
jg
lret
rcll
xchg
dec
sbb
orb
jo
or
popa
add
test
or
mov
cmc
stos
nop
lret
jbe
in
pusha
nop
xchg
and
dec
jmp
and
jl
mov
xor
dec
andb
aad
cmc
lea
cmp
push
rclb
mov
stc
xorb
mov
loopne
cmp
aaa
sbb
incl
aad
inc
adc
pop
dec
clc
lock
out
sub
in
add
fsubrs
ljmp
clc
jno
adc
add
push
xchg
and
mov
ds
inc
loope
mov
lcall
addl
movsb
or
pop
es
and
leave
lea
jmp
xor
pop
cmp
mov
cmp
jbe
add
cmp
jne
inc
xchg
sub
jb
jl
add
and
inc
xlat
pop
xchg
push
push
hlt
subl
or
iret
jne
mov
adc
inc
pop
repz
jae
fmull
test
nop
cmp
xchg
jp
sub
or
iret
je
mov
dec
sar
movsl
jmp
std
xchg
mov
jmp
adcl
sub
cmpsb
jle
pushl
or
mov
es
mov
cld
or
dec
add
adc
jg,pn
push
and
xorb
jo
ja
jo
push
fsubs
fs
dec
nop
aad
xchg
cmp
aam
or
test
inc
or
dec
mov
mov
push
push
adc
mov
dec
sbb
jne
stos
pop
dec
lods
push
jmp
or
mov
sahf
sbb
nop
and
add
cmpsb
popf
andl
jl
pop
or
mov
adc
fadd
and
ret
or
out
pop
in
push
inc
insl
xor
mov
imul
inc
push
jae
jmp
aaa
xor
and
jg
ud0
jg
cmp
add
and
mov
movb
movsbl
shr
mov
adc
mov
and
mov
nop
add
mov
jne
pop
mov
movsl
mov
imull
in
pop
add
add
or
add
fsubp
pop
and
cmp
sub
ljmp
jno
scas
test
into
imul
enter
sub
or
inc
aaa
push
sbb
adc
in
stos
adc
das
xor
sub
pop
add
insb
loopne
shrl
sbb
lods
addl
mov
ss
mov
pushl
sub
cmpb
je
dec
and
test
fmull
popf
orb
loope
cmp
into
push
dec
popf
pop
stc
fwait
mov
rclb
test
shll
sub
adcl
add
das
adc
into
cmp
mov
lcall
das
call
and
sub
shll
jb
push
arpl
xor
cltd
nop
jne
pop
cmpb
loop
ret
scas
inc
dec
movsl
pop
ret
sbbl
dec
add
ss
shrb
push
mov
cmp
je
adc
push
dec
adc
jbe
mov
in
xchg
push
add
add
adc
push
jmp
ja
or
push
mov
cmp
push
xacquire
sub
push
jns
and
adc
cwtl
or
add
dec
adc
jo
icebp
sbb
pop
add
cmp
rorl
mov
sbb
outsl
movsl
mov
push
add
add
xor
push
jl
out
cmpsl
dec
xchg
xchg
ljmp
mov
mov
pop
push
sub
lods
pop
rcl
push
and
xorl
xor
xchg
adc
or
add
and
mov
aas
mov
fcomps
push
jne
sbb
nop
lret
add
inc
aad
sbb
or
mov
movsl
outsl
mov
dec
mov
xor
aam
push
clc
and
outsb
orb
dec
mov
push
stos
test
xchg
mov
sbb
lds
rcrl
adc
and
or
sbb
dec
push
adcl
push
pop
push
dec
adc
inc
and
jmp
out
into
orl
addb
das
xchg
add
adc
push
rcll
dec
pop
mov
orl
adc
xorb
mov
push
inc
sbb
add
jmp
pop
adc
loope
ret
adc
xchg
lock
inc
gs
xor
and
call
aam
lea
or
imul
int3
pusha
pop
lret
add
xor
and
shlb
inc
xchg
sbb
xor
gs
sub
and
push
add
mov
pop
dec
and
push
mov
mov
sbb
sbb
fwait
or
cld
cmp
jns
and
loopne
popa
or
pusha
push
jmp
dec
add
imul
xor
aaa
mov
das
cmpsl
jo
jecxz
sarb
sbb
insb
je
andl
fwait
call
lock
sub
pop
rcrl
cmp
cli
sub
and
fstpt
mov
sub
jmp
xor
jno,pt
mov
dec
iret
cli
aam
sbb
les
je
mov
sbb
jmp
in
cmp
mov
adc
pop
push
out
xor
cmpsb
inc
add
or
or
mov
dec
repz
mov
jnp
scas
push
lret
je
cmp
adc
ret
or
mov
pushf
xchg
mov
hlt
lock
pop
test
mov
mov
dec
push
xor
sbb
std
cmp
je
inc
push
cmp
jl
jl
sarb
lods
insb
lods
sbb
mov
jno
cmp
xchg
mov
data16
sbb
iret
test
adc
mov
inc
cwtl
test
adc
pop
bound
pop
and
movntps
lret
inc
push
enter
cltd
or
fildl
adc
jbe
mov
xchg
pop
ret
lea
mov
fldl
cmp
inc
jne
fs
imul
pop
mov
mov
pop
fs
add
cmp
dec
mov
cmp
mov
xor
or
out
stos
insb
sub
call
jl
mov
ret
rcl
xor
sbbb
pushf
jbe
mov
xor
adc
sub
dec
enter
xor
imulb
daa
clc
inc
das
je
jge
push
testl
jbe
push
lcall
xor
das
mov
and
movb
test
cmp
test
jne
es
add
lock
jno
lods
sbb
in
inc
mov
sbb
insl
and
int
jno
es
sub
and
inc
xchg
je
jecxz
push
sub
push
push
dec
test
lea
clc
and
sbb
adc
repz
mov
xlat
mov
popf
inc
xchg
xor
sub
gs
fldl
rorb
cli
mov
jg
push
cmp
outsb
add
ja
mov
cs
sbb
or
mov
push
mov
sub
inc
or
add
or
sub
movsl
subb
inc
sbb
inc
add
mov
sbb
pop
pop
ret
ret
dec
shlb
stc
shlb
mov
mov
sub
pop
and
pop
sbb
mov
sbb
inc
cmp
cmp
adc
jne
daa
aas
iret
iret
mov
or
jne
or
jne
and
cmp
clc
push
mov
and
roll
pop
fcomp
and
mov
aad
lock
rolb
push
lea
movl
into
pop
sbb
pop
dec
push
jecxz
fildll
inc
in
fstl
mov
cli
ss
pop
mov
fstpl
xor
call
lea
pusha
aaa
mov
rorb
movsb
cmp
jae
faddl
mov
jb
cmp
hlt
add
jns
sbb
xor
jae
or
mov
repnz
push
mov
jae
aas
jne
inc
and
adc
divl
or
jne
fstl
fsubrs
loopne
rorb
adc
sbb
in
adc
mov
jne
adc
movd
lret
inc
cmp
mov
rcrl
outsl
mov
clc
pop
faddl
or
mov
xor
in
or
xchg
insl
mov
lret
mov
mov
jmp
orl
xchg
dec
pusha
pusha
xor
xor
mov
mov
inc
xchg
fs
inc
dec
fs
push
and
pushf
into
xor
xor
fs
sbb
ficoml
popf
mov
pushl
mov
cmp
jmp
mov
mov
fisubrs
dec
push
jno
jo
flds
xchg
or
lods
shr
add
xchg
pusha
out
or
adc
outsb
ss
push
jae
pop
fucomi
add
shlb
sub
fmuls
xchg
out
inc
adc
or
or
into
jecxz
incb
subl
inc
andb
xor
faddl
push
add
and
in
inc
insb
insl
cmpb
and
cwtl
movsb
nop
xchg
enter
mov
pop
mov
jge
pop
xor
mov
push
mov
or
ffree
push
stos
les
loope
sarl
insb
xchg
pop
push
pushl
enter
jp
cmp
sbbb
add
ss
cmp
icebp
dec
ret
adc
or
mov
mov
add
aas
jnp
cmp
dec
fisubrl
lods
xor
les
subb
divl
loopne
xorl
repz
xchg
jecxz
fadds
mov
movsb
xsave
dec
sti
fwait
and
add
xchg
sti
pop
sahf
popf
xchg
push
ja
sbb
orb
shll
xchg
sbb
mov
sbb
dec
xchg
sbb
jne
popf
rolb
and
sbb
mov
adc
int
lahf
rorb
xor
stos
pop
sbb
enter
pop
adc
and
daa
xchg
and
daa
xchg
inc
adc
dec
movsb
fldenv
jno
xchg
xchg
inc
mov
inc
adc
jns
sbb
sub
nop
cltd
xlat
leave
pop
xor
push
sbb
push
cltd
dec
sbb
nop
mov
adc
push
in
xchg
xchg
push
add
adc
adc
adc
and
mov
mov
dec
adc
inc
cmp
sbb
daa
and
or
xor
sbb
shlb
xor
jmp
dec
sbbb
xchg
rolb
roll
mov
adc
fisubrl
and
lea
shr
mov
fs
nop
mov
mov
add
inc
and
add
data16
lods
dec
jle
or
out
push
mov
mov
test
mov
sbb
or
add
mov
jb
xor
xor
and
js
mov
scas
and
je
push
push
pop
lea
push
aam
add
movsl
inc
sbb
fmull
sbb
sbb
or
push
xor
cld
movsb
xor
aas
pop
jne
movsb
clc
out
cmpsl
push
and
rolb
push
add
add
push
or
lret
or
das
add
lea
les
adc
fisubrl
sbb
add
inc
cmp
call
je
cmpsl
jmp
adc
in
rclb
add
add
xchg
sub
popf
inc
cmp
cmpsb
cmpsl
adcb
loopne
out
push
xor
call
push
fcompl
and
dec
add
inc
lock
adc
push
sub
mov
je
call
mov
xchg
xor
and
and
sbbb
add
xchg
cmp
cmpb
popf
pop
pcmpeqd
xchg
insl
dec
pusha
xor
mov
sbbb
jae
xorl
std
leave
testb
jno
cmpsl
sub
nop
je
imul
push
fildl
lcall
xchg
sbbb
syscall
pop
mov
loopne
cs
rclb
pop
push
addr16
pop
ljmp
sub
jne
mov
ljmp
and
pop
xchg
js
or
jne
push
xor
bound
xor
fstl
cld
push
call
mov
push
xchg
in
dec
ret
mov
orb
ss
jmp
fistl
sbb
sbb
sub
push
mov
shl
cmp
jo
sbb
lret
clc
imul
js
or
push
or
adc
stos
cmp
add
mov
lcall
jnp
mov
shlb
stos
jl
addb
jb
sbb
mov
cmp
popf
add
mov
xchg
pop
loope
sbb
adc
push
loopne
bndstx
call
jmp
xchg
sbb
out
je
fisubl
call
adcb
xor
xor
mov
adc
int
adc
js
mov
pop
popa
outsl
ds
add
jmp
imul
mov
sbb
or
and
rorb
jp
jne
and
rcl
push
stc
cmp
lods
cmp
mov
cmpb
push
add
aad
sub
push
xor
add
add
int
or
test
addr16
add
popa
sub
mov
xchg
cs
fdivs
fmuls
or
mov
add
shlb
or
lock
add
dec
pop
sub
sub
push
mov
in
or
inc
orb
std
clc
loop
mov
add
ret
or
aaa
and
shrl
inc
sub
jo
dec
lock
outsl
push
je
xchg
leave
mov
ja
or
or
addr16
xor
cmp
je
jle
cmp
divl
rolb
sbb
inc
lcall
cli
push
rcr
cld
pop
push
cmpb
ret
add
pop
sarl
jae
movsbl
sbb
daa
in
xchg
sbb
or
scas
xor
add
sbb
lcall
enter
ret
incl
decl
mov
shl
or
add
inc
cmp
jl
jecxz
lods
mov
les
inc
cltd
and
add
sar
add
jle
scas
cmp
xor
ss
subb
cmp
jecxz
sbb
inc
jne
push
jg
or
adc
or
add
fs
sbb
sub
cmp
pop
arpl
pop
dec
xlat
adc
xchg
les
mov
xor
pop
jo
ucomiss
movsb
ret
or
inc
adc
mov
sbbl
and
or
decb
test
or
jle
push
sbb
add
mov
mov
lock
cli
js
inc
mov
pop
incl
add
dec
jne
xchg
push
mov
jg
mov
test
loope
cmp
pop
aam
repnz
daa
jns
ss
ret
add
xchg
les
mov
cld
scas
adc
adc
fs
leave
fs
inc
cmpsb
pop
cmpsb
push
mov
movsb
decl
cwtl
rclb
gs
insl
imul
mov
push
cmpsl
push
xor
in
push
xor
notb
cmp
push
aam
or
in
and
and
inc
cmp
xchg
mov
sbb
in
mov
and
push
ret
bound
ss
cmpb
loopne
hlt
push
jecxz
push
loopne
jmp
cli
sub
push
cmpb
push
cltd
mov
mov
outsb
pop
enter
mov
pop
add
leave
and
pop
jmp
push
add
orb
in
push
push
fsubrl
add
push
scas
push
and
or
sbb
mov
or
stos
test
movzbl
dec
js
fmul
mov
into
dec
inc
rcrb
pushf
pop
ss
jns
sti
or
sub
stc
int3
inc
ljmp
fbld
out
rcll
popa
jle
repnz
push
pop
mov
push
lea
inc
das
in
popa
test
cmp
sub
xchg
insl
adc
jns
inc
iret
push
mov
adc
xchg
cmp
xchg
ds
sub
xor
add
dec
push
movsl
jae
popf
sbb
mov
inc
popa
add
adc
shll
dec
push
inc
decl
and
ret
dec
sub
mov
adc
push
or
xchg
addr16
ja
dec
push
mov
scas
mov
rcrb
cmpl
adc
int3
add
aam
or
test
shl
pop
add
mov
inc
adc
js
fimull
add
movsb
sbb
insb
sbb
aam
xchg
enter
jl
mov
in
nop
xor
push
push
pop
aam
xor
enter
mov
leave
jp
jo
adc
adc
push
and
clc
jmp
mov
cs
shlb
or
adc
movsb
adc
pop
mov
adc
add
sub
xchg
jbe
cmp
int3
or
mov
sbb
lock
mov
jo
jg
push
pop
cmp
sarl
daa
pusha
shl
je
hlt
xorb
adc
dec
mov
les
dec
sahf
out
and
and
outsl
inc
or
filds
xchg
or
ret
xchg
jle
inc
enter
mov
pop
and
cs
nop
lea
aam
xchg
insb
cmp
xchg
lds
cwtl
rclb
mov
and
aam
and
gs
clc
push
mov
mov
push
lods
mov
fdivrl
pop
jge
sub
cmp
or
sbb
sbb
movsbl
rcrl
ret
call
imull
mov
add
mov
sub
nop
or
mov
test
sbb
lret
mov
sbb
sub
xchg
jae
repnz
dec
rolb
inc
xchg
and
fcoms
loop
dec
pop
loope
shlb
cmp
adc
add
push
pop
xchg
ds
dec
push
roll
jno
inc
mov
add
popf
fsubl
ljmp
ret
lea
stc
mov
cld
mov
js
jne
lods
xchg
xor
test
jae,pn
xor
loopw
fldenv
add
rcll
pop
xor
cmp
add
adc
rclb
loopne
lret
mov
mov
notl
lock
fisubl
cmp
dec
jae
popa
mov
adc
mov
jbe
xchg
mov
mov
clc
pop
sbbb
pop
mov
das
mov
sub
fimull
jmp
xor
inc
aad
sub
or
cmpsb
jl
hlt
pop
or
pop
push
dec
mov
xchg
mov
add
mov
add
movzbl
mov
inc
mov
mov
cmp
jl
push
clc
addl
pusha
outsl
push
mov
sarb
sub
push
icebp
or
orb
std
scas
xchg
add
add
shlb
sbbl
add
and
bound
cld
push
leave
push
xor
mov
inc
jl
ljmp
or
aad
xchg
stc
lahf
jb
jl
push
out
xchg
pushl
stos
jbe
mov
hlt
mov
adc
or
rclb
rorl
adc
pusha
add
hlt
xlat
push
or
push
sbb
cmp
dec
in
test
lahf
adc
in
mov
mov
mov
jl
shl
inc
bound
fsubl
bound
mov
cmp
fldcw
and
ja
into
sub
mov
lahf
lret
cmp
add
mov
les
jnp
imul
outsl
mov
jo
pop
dec
or
pushf
in
aaa
into
cli
ret
popl
call
fisubs
jmp
lock
lods
and
xchg
adcb
sbb
sbb
test
lret
push
xchg
xchg
mov
mov
pop
mov
mov
in
mov
mov
add
pop
movsl
ja
pop
call
test
mov
sub
subl
cmp
jbe
cmp
jbe
mov
sbb
mov
ret
mov
notl
jne
test
out
clc
sbb
pop
stc
or
add
sub
aam
orl
mov
out
sbb
std
or
jne
push
fldcw
sbb
xchg
mov
cmp
xchg
inc
jmp
mov
pop
sti
push
mov
cmpsb
arpl
pop
ret
and
enter
sbb
mov
pusha
ljmp
mov
adc
clc
arpl
mov
les
call
repz
sti
sbb
pushf
lea
loop
dec
mov
xchg
push
push
xchg
sub
push
mov
das
test
xchg
push
pushf
data16
and
adc
adc
andl
dec
adc
add
jg
in
adc
scas
test
nop
stos
mov
add
pop
add
dec
iret
out
fwait
or
jo
jb
movsl
sub
cmp
add
jmp
xchg
outsl
add
jae
xor
movsl
jl
adc
es
sbb
ljmp
and
mov
fldenv
jle
pusha
and
and
sbbb
dec
mov
sub
cmc
push
pop
pop
pop
and
cmc
sbb
sub
jno
push
mov
push
testl
dec
enter
cwtl
lahf
pop
add
jmp
inc
or
cmp
jle
xor
xlat
inc
adcb
add
sbb
mov
stc
xor
loope
add
fstl
mov
fisttpll
sarl
mov
sbb
scas
sbb
rcrl
loopne
shrl
mov
sti
dec
push
jmp
lcall
add
jge
push
loopne
mov
call
add
add
fbld
insb
aas
push
aam
dec
and
scas
out
add
shr
dec
add
adc
mov
sbb
fdivl
mov
je
pop
adc
flds
jl
les
mov
cmp
xlat
or
mov
maxps
pavgw
mov
inc
push
add
loope
mov
push
mov
fcoml
push
lahf
enter
movl
aas
push
in
add
sarb
cmp
adc
mov
sahf
hlt
or
jae
fdivl
cmp
add
leave
add
sti
or
sub
add
inc
cmp
xchg
out
scas
mov
aaa
fcomps
pop
je
imul
popa
out
add
in
pop
pop
add
dec
aam
xlat
mov
iret
popf
stc
rcr
rorb
sub
je
sub
inc
push
testb
or
add
cltd
sahf
addr16
sbb
jns
jg
pop
out
int3
ret
and
sbb
xchg
adc
shr
push
lock
pop
inc
incl
shrb
push
mov
mov
or
add
incb
mov
data16
jmp
mov
add
mov
pop
loopne
test
or
push
mov
lahf
gs
push
push
push
pop
inc
sub
jle
pop
int
subb
daa
jne
sbb
xor
lahf
imul
mov
fwait
sbb
ja
xor
xchg
sbb
jg
mov
jne
cmp
jbe
or
sub
cmp
or
out
add
sbb
or
xchg
shrb
mov
mov
push
adc
loop
lret
out
xor
xchg
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
movsb
push
daa
hlt
push
iret
push
pop
mov
movsb
dec
mov
lret
jecxz
sbb
xlat
cld
rcrb
dec
orl
call
mov
jmp
push
push
mov
mov
push
adc
enter
push
push
call
cmp
sbb
sub
jmp
add
enter
mov
ljmp
insb
arpl
mov
adc
mov
inc
stos
and
or
cmp
jae
dec
out
mov
inc
jmp
add
inc
and
mov
dec
jp
ret
pop
jmp
aas
aaa
cwtl
sbb
add
out
mov
pop
sbbl
mov
mov
dec
dec
sub
pusha
mov
cmpsl
aaa
sub
movsl
imul
push
fs
add
xor
mov
xor
inc
and
xchg
jge
fs
xor
add
xchg
and
add
adc
ds
sub
sub
call
cmp
sbb
inc
sti
xchg
and
mov
cwtl
cltd
push
jae
in
pusha
inc
shlb
mov
jmp
cmp
sahf
bound
cmp
pop
adc
fstpl
sub
mov
and
mov
arpl
cmp
nop
mov
xchg
xor
test
ret
test
inc
push
cmp
adc
push
and
jmp
mov
and
sbb
out
push
jae
test
or
adc
and
push
cs
or
adc
sbb
mov
sbb
sub
lcall
cmpsb
addr16
xchg
push
adc
ds
outsb
dec
popa
and
sbb
outsl
add
bound
adc
dec
or
or
xorl
dec
loopne
xor
ja
jnp
sub
add
cmp
cwtl
adc
dec
int
xor
push
cmp
jne
loopne
outsb
shlb
nop
sub
jne
hlt
xchg
orl
aam
imul
ljmp
xor
shll
add
loopne
sbb
xchg
cmp
jb
and
dec
adc
sub
adc
pop
mov
adc
sti
sbb
push
test
or
sub
or
sub
mov
sarl
cmp
pop
popf
rorb
jp
mov
mulb
sub
dec
loop
jecxz
jb
stc
add
movsb
movsl
std
push
push
jnp
pop
inc
cs
push
or
sbb
cmp
pop
mov
dec
dec
sti
ret
in
ret
sbb
pop
pop
dec
xor
shlb
add
inc
add
dec
xchg
cmpl
test
sbb
cwtl
sbb
xchg
push
sub
cmc
inc
sub
adc
sub
xor
pop
xchg
enter
lahf
xchg
lods
mov
inc
lods
or
jo
sbbb
and
or
mov
ret
push
ret
add
int3
add
ret
rolb
test
ja
sbb
cmpsb
ret
pushl
push
push
cld
pop
jne
adc
adc
dec
addr16
mov
push
jecxz
out
push
add
jbe
fcompl
jmp
mov
jmp
insl
ror
jle
sbb
gs
cs
push
data16
mov
pop
dec
mov
cwtl
stos
add
push
xorb
leave
mov
int3
iret
xchg
dec
call
lock
push
scas
subl
cmc
dec
add
rcrl
xor
test
fnstenv
icebp
pop
ljmp
pusha
subl
push
push
mov
xor
cmp
dec
mov
pushf
cmp
sbb
inc
aaa
popa
pusha
es
push
ret
es
imul
je
add
push
sbb
mov
lock
insl
pop
push
push
pop
push
inc
ret
xor
sub
stc
hlt
andl
addb
dec
div
xor
negl
out
jmp
aaa
in
xor
xor
das
je
or
mov
cmp
pop
sahf
idiv
addr16
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
cli
mov
pop
dec
xor
fbld
or
cmpsb
mov
sub
inc
adc
je
testl
lods
cs
xorl
jbe
push
lea
in
fdivr
aas
inc
cmp
je
sub
inc
jmp
inc
and
xchg
pop
xor
pop
mov
mov
test
call
sub
mov
mov
loopne
cmpsb
repnz
je
aam
mov
add
jo
jp
adc
into
inc
add
add
add
hlt
xor
fisubrl
mov
cld
inc
xchg
cmp
add
mov
fbld
insb
outsb
hlt
cmpb
cmp
insb
push
clc
cmpsb
dec
push
push
jb
sub
ljmp
jb
sbb
xchg
sub
push
nop
adc
pop
lds
jne
lea
rclb
mov
js
mov
sahf
lds
arpl
and
fimull
push
pop
add
cmp
dec
movzwl
data16
add
inc
add
jae
iret
data16
addl
inc
shrb
ror
mov
fsubr
adc
aas
insb
sti
and
cmpsb
and
or
dec
jl
cmp
negb
test
jne
xor
mov
rorl
test
mov
fdivrs
push
pop
jae
mov
jmp
dec
mov
xor
and
and
push
roll
call
inc
mov
or
push
or
insl
lret
int3
inc
sti
add
fstpt
or
jge
pop
xor
jge
jae
and
es
sub
sub
and
pop
push
inc
jae
or
jl
or
adc
pushf
inc
mov
int3
jbe
lea
cmp
jbe
orl
jp
pop
arpl
pop
inc
lock
dec
add
je,pn
test
jne
pop
add
sub
jb
or
push
mov
xor
adc
movb
inc
xor
xchg
fs
sub
cwtl
push
mov
pop
sarb
add
mov
add
and
push
sub
add
fs
clc
out
or
loopne
add
daa
call
pusha
dec
inc
imul
cmp
hlt
clc
mov
rcll
adc
enter
jp
push
enter
mov
jo
push
adc
test
add
leave
sbbb
test
nop
pop
ret
or
add
xorb
pop
xor
xchg
push
xor
into
push
push
sahf
test
outsl
mov
add
imul
pushf
lea
jl
mov
jg,pn
fnstsw
sbb
in
jmp
cld
addl
push
or
adc
cld
cmp
popa
and
or
add
ret
popf
loopne
push
adc
push
mov
sbb
cmp
lock
xor
mov
lcall
xchg
add
mov
loopne
pop
lea
push
add
fwait
repz
jne
orl
mov
cmp
dec
xchg
sti
jmp
andl
rcl
mov
dec
cltd
aaa
jp
xchg
and
mov
pushf
adc
push
sbb
add
xor
push
movl
push
adc
dec
or
ss
xlat
xor
push
lahf
jbe
mov
add
jae
addl
data16
incb
push
mov
stos
mul
insb
mov
pop
cmpb
add
outsb
xchg
cmp
add
pop
adc
jmp
cmpl
mov
rclb
add
outsb
je
add
xchg
pushl
sti
subl
outsb
add
imull
xchg
jo
cmp
mov
lock
je
in
mov
pop
aam
mov
psubd
lea
push
in
or
mov
xor
pop
push
inc
sub
rcrb
fbld
mov
int
jbe
mov
jle
push
gs
add
inc
inc
imul
cld
pop
inc
pop
add
push
loope
aas
fsubrl
je
cmpsl
popf
jge
mov
mov
mov
push
roll
movsl
xchg
stos
pop
adc
xor
xchg
sbb
cmp
pop
je
test
dec
push
mov
inc
jmp
xor
addb
push
fs
add
leave
dec
adc
inc
push
nop
xor
push
push
dec
mov
add
cmp
cltd
mov
cwtl
popa
or
mov
test
clc
mov
mov
lea
sbb
mov
inc
addl
push
or
push
inc
push
in
mov
or
push
cmp
inc
and
addr16
push
aaa
les
xor
add
push
add
add
pop
adc
sub
les
jns
adc
xor
push
mov
mov
inc
or
test
push
ret
or
pusha
sti
pusha
jb
push
mov
add
inc
and
daa
push
sbb
sbb
popl
out
dec
xchg
mov
mov
jne
cmpsl
cmpsl
das
push
and
lret
inc
cmpsb
inc
gs
mov
or
push
ljmp
sar
notb
add
push
clc
jo
sti
sub
and
jle
aas
cld
inc
inc
push
push
popf
test
in
pop
xchg
addl
rcrb
xor
fimull
jae
push
lea
or
push
mov
loope
fisttpll
push
frstor
dec
leave
xor
or
xchg
adc
xchg
fs
push
fsubrs
xchg
push
shrb
fsts
jae
call
sub
idivb
faddp
push
bound
xchg
push
decb
in
dec
or
int3
shlb
out
cs
enter
sub
sbb
ret
test
add
cmpb
je
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
js
rcr
fwait
jo
push
push
push
lret
test
and
jne
jge
sub
xorl
ljmp
add
movl
mov
push
loopne
into
cmpl
rcr
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
sub
pusha
ret
or
xchg
cmpsl
or
bound
and
push
cmp
mov
push
add
or
or
jne
adc
into
lods
push
popf
jne
push
push
shlb
sbb
cmpsb
scas
inc
jp
inc
test
pop
mov
push
sbbl
std
test
dec
imul
adc
push
adc
mov
in
mov
cmp
add
out
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
repnz
xchg
fwait
mov
loopne
fsubs
xchg
mov
cmpsl
mov
cmp
push
aas
je
cmp
add
mov
aam
cmpsl
jle
loope
jne
push
imul
jne
repnz
call
inc
movl
insl
in
xor
mov
mov
jne
jmp
sbb
sub
fcomps
pop
call
mov
sbb
mov
xchg
sub
rorl
shr
jnp
loopne
ret
jne
lea
sarl
pop
in
cmp
sub
mov
push
xchg
sbb
inc
cmp
arpl
mov
adc
int
sub
jg
add
xchg
xor
addb
sti
inc
enter
enter
decb
adc
or
adc
or
pop
push
adc
xchg
pop
pop
dec
sub
lcall
pop
pop
cmc
shl
fs
push
add
decb
rcrb
ret
push
bound
adc
rolb
push
mov
mov
cmp
std
mov
pop
loopne
mov
add
repz
movsl
ret
fstpt
add
inc
arpl
mov
mov
push
add
in
or
push
jno
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
fs
mov
loope
mov
cmpsl
jo
dec
cmp
xor
add
ret
xor
ss
ja
mov
sub
aad
or
pop
push
push
push
dec
push
sub
cmpsb
add
lea
jmp
push
shll
lret
mov
sbb
flds
push
leave
clc
popa
sbb
or
inc
adc
mov
in
dec
int3
adc
test
sbb
sarb
fcmovu
push
push
mov
jbe
or
cmpsl
lcall
or
xor
enter
es
pop
jo
js,pn
scas
sbb
ljmp
ss
xor
or
incl
pop
inc
inc
fwait
cli
jp
push
pop
jmp
je
pop
imul
sub
enter
push
sbb
or
sti
and
add
xorb
xchg
mov
pop
and
push
push
fwait
sbb
fstpt
or
lock
cmc
fstpl
aam
dec
mov
or
gs
aas
push
xor
sti
es
sti
jnp
adc
addr16
fsubrs
in
sbbl
iret
xor
xor
mov
js
and
mov
mov
push
test
sbb
sahf
xchg
cmp
lods
test
mov
je
push
outsl
add
and
push
mov
je
mov
add
add
dec
add
ss
in
pop
dec
sbb
pop
loopne
fstps
or
je
jg
inc
addb
mov
adc
je
sbb
cmp
and
pop
sbb
gs
mov
test
insb
jge
inc
pushf
add
pop
sbb
insl
loope
inc
pop
add
das
sbb
inc
xor
std
loopne
lock
jl
cmovs
sbb
push
inc
mov
aam
imul
jp
outsl
arpl
push
and
push
add
add
in
in
fldt
or
xor
shlb
or
or
pop
adc
mov
ficompl
cmp
mov
mov
sbb
nop
iret
sti
dec
mov
je
or
daa
mov
or
push
jae
aad
dec
aas
js
bound
and
pop
xchg
adc
add
incl
cmp
push
push
cmp
adc
xor
xchg
stos
mov
sub
mov
push
in
cmp
dec
shll
push
xor
mov
in
clc
mov
cmovne
cmpsl
push
cltd
mov
jnp
xor
add
xor
mov
movsb
ret
jle
or
push
inc
add
jo
addb
adc
jmp
jmp
subl
push
outsl
test
jns
adc
inc
hlt
mov
lock
add
arpl
push
mov
mov
call
add
add
mov
sub
push
rcl
pop
int
orb
jb
and
mov
sbb
adc
adc
add
call
outsl
mov
and
popf
sub
sbb
push
ficompl
cli
add
lock
popa
dec
push
loopne
lea
test
sub
orl
int
and
cmc
mov
mov
cmpl
imul
jne
addr16
shrl
rclb
hlt
test
sbb
je
arpl
es
inc
and
loope
mov
out
adc
cmp
fimull
scas
xchg
push
add
xor
jns
cld
jns
addb
adc
adc
lods
and
mov
cs
fsubl
jno
or
loopne
and
push
addl
or
sbb
push
and
push
sub
adc
in
adc
cmp
dec
pop
sbb
push
sub
and
push
test
pusha
es
push
xor
ja
je
adc
jp
loope
bound
adc
cmp
inc
adc
cli
jns
and
clc
jmp
sub
mov
inc
pop
adc
push
xor
sbb
inc
add
test
loopne
mov
dec
rorl
adc
clc
insl
and
mov
add
jo
inc
adc
mov
and
xchg
in
sbb
inc
lods
insb
xchg
bound
orb
loop
rcrl
xor
xor
inc
cmp
cmc
or
dec
jne
jns
setl
jmp
mov
sbb
xor
daa
cmpb
lds
in
loopne
adc
jmp
mov
add
daa
lock
movsb
mov
dec
mov
int
adc
mov
inc
jae
xchg
iret
aam
lret
xor
sub
mov
cmp
cltd
insb
std
loopne
movsb
in
lods
insl
sub
mov
inc
aam
jo
insl
icebp
ds
mov
xor
sub
insb
cltd
sbb
lret
je
push
rcr
inc
xor
mov
mov
shrl
outsl
push
cmp
mov
daa
inc
mov
or
jl
jmp
pop
or
push
push
cld
mov
fwait
cmpsb
push
incl
cld
clc
sbb
add
add
nop
test
add
aas
mov
dec
pop
xchg
cmpl
xchg
sbbb
fsubl
sbb
jo
xor
xchg
mov
movsl
xorl
ss
ds
aad
xor
lea
mov
sarb
movsl
nop
pop
sbb
pushf
les
and
and
cmpsb
sbb
stos
xor
int3
mov
adc
lock
jmp
or
loop
clc
inc
out
mov
xchg
mov
and
inc
out
orb
clc
lret
push
push
adc
out
or
fiadds
stos
mov
jmp
push
cmp
fimuls
rol
mov
mov
pusha
dec
jmp
je
cmp
js
ret
clc
add
or
dec
je
mov
cmp
sbb
add
cwtl
hlt
sub
into
xchg
push
mov
cmp
push
jecxz
in
push
int3
push
pusha
mov
pop
xor
ds
das
or
ret
daa
bound
fcmovb
dec
sbb
push
dec
test
cltd
push
data16
inc
pop
mov
xor
inc
push
lahf
add
xlat
mov
or
inc
negl
jae
sbb
popa
pop
leave
cli
imul
stc
cmp
js
fisttps
pop
push
push
fs
or
icebp
cmpsb
fdivs
push
inc
and
idivb
jp
adcl
mov
pop
jmp
push
add
sub
push
fmuls
inc
dec
cmp
repnz
shr
xchg
shrb
pop
push
test
or
idivl
jne
fmull
push
mov
dec
nop
push
add
push
jo
insl
add
loopne
mov
adc
jo
mov
sbbb
mov
adc
push
clc
pop
ja
into
std
popa
or
iret
add
mov
push
add
in
call
inc
cmp
aad
add
push
and
daa
push
lcall
ds
inc
inc
pop
add
lock
adc
pop
arpl
int3
mov
shrl
push
stos
xor
xlat
mov
dec
loopne
xchg
popa
testl
mov
dec
xor
bound
or
or
sub
or
dec
pop
inc
jle
enter
cmp
xchg
cmp
mov
in
sbbl
xor
scas
sub
jo
cmp
or
cmp
mov
mov
cld
dec
dec
shlb
pop
cmpsl
addb
push
cmpsl
mov
stos
ret
dec
cmp
adc
cmpsb
add
test
jmp
jo
test
inc
add
lods
lods
push
jb
loopne
movsl
jle
repnz
adc
add
xchg
mov
or
data16
in
push
mov
fdivl
dec
subl
sub
adcb
iret
or
adc
pop
adc
or
adc
add
popa
adc
pop
mov
dec
or
cli
incl
imul
sbb
stos
into
pop
in
mov
push
pop
sbb
adc
or
inc
jp
xor
addb
pop
adc
imul
test
mov
arpl
push
jmp
scas
add
sub
outsb
pop
clc
mov
or
or
add
pop
push
lahf
imul
es
adc
dec
sbb
xor
cmp
pop
inc
shll
and
mov
sub
movsb
add
hlt
xor
sbb
popa
lret
or
mov
fcoml
add
cltd
shl
dec
jb
movsl
rcrb
in
push
push
popa
pushf
pop
js
lea
and
xor
ja
or
jnp
dec
mov
push
dec
daa
mov
mov
push
test
dec
lods
stos
loopne
repnz
xchg
adc
in
or
aam
orb
lahf
sti
sarb
rcrb
push
js
fxch
enter
cmpsb
dec
int3
lret
or
mov
enter
pusha
int3
fdivl
mov
add
jo
or
cmp
lods
mov
sub
shlb
push
xchg
lret
jg
jg
inc
ss
or
cmp
gs
pop
iret
mov
mov
mov
and
sub
add
daa
xchg
dec
lock
test
and
imulb
push
es
inc
bound
cmp
push
xor
push
sahf
pop
mov
mov
inc
sub
push
sti
outsl
or
push
cs
test
sub
and
push
inc
mov
xchg
dec
dec
mov
xor
clc
cmp
mov
jb
and
sub
or
add
dec
xchg
dec
push
pop
xchg
and
mov
js
in
or
jo
mov
sub
adc
add
sub
dec
lcall
add
and
rcrb
movsl
jbe
call
push
in
enter
push
sub
xchg
mov
insb
pop
and
push
push
xlat
add
adc
aaa
les
movsb
add
lret
jae
cmp
push
adc
subl
insb
andl
push
ss
movsb
adc
jbe
jecxz
in
jl
push
enter
rcrb
mov
mov
xorl
push
jnp
nop
sbb
ja
movsb
jmp
jge
adc
loopne
add
pop
sub
mov
jnp
mov
sbb
imul
fdivl
ljmp
data16
xor
add
and
fadd
push
adc
or
push
arpl
ret
jno
jg
xor
pushf
lret
jnp
add
mov
shlb
sub
inc
addr16
shll
dec
test
mov
and
cmp
pop
movsb
inc
pushf
adc
lret
mov
mov
inc
lods
add
cs
int
dec
lods
or
xor
inc
sbb
dec
inc
stos
push
jno
cwtl
push
xor
sbb
xchg
test
inc
sub
jp
inc
pop
rcrl
dec
pop
sbb
enter
mov
cs
mov
push
sub
mov
aam
es
cli
rclb
xor
cmp
or
stc
enter
pop
and
pusha
jne
andb
shlb
repz
jle
jge
bound
test
xchg
mov
mov
adc
dec
shrb
clc
call
fcoms
dec
xor
pop
data16
dec
pop
cmp
inc
jbe
adc
imul
dec
or
out
xor
sbbl
loope
mov
sahf
mov
iret
mov
push
push
xor
ljmp
aam
in
sti
push
stos
sahf
pop
jbe,pn
fdivl
ret
lcall
test
insb
add
dec
sbb
popa
je
pop
lock
jp
xchg
mov
shll
mov
mov
push
mov
lods
stos
lods
adc
mov
mov
enter
mov
cmp
jne
cmp
push
fsubr
adc
and
or
xorl
add
movsb
mov
pop
shrl
inc
adc
mov
jno
add
sub
sub
adc
nop
inc
add
jl
or
ljmp
pop
mov
mov
js
push
cmp
pop
rcrl
pushf
aas
das
cmpl
adc
add
jb
jmp
mov
dec
int3
pop
inc
adc
sub
and
mov
test
jp
or
sahf
ljmp
cs
fwait
add
inc
add
movsl
bound
cltd
cltd
push
or
sub
in
xor
or
or
sbb
es
test
push
test
push
divb
or
daa
mov
or
mov
adc
dec
icebp
out
fs
add
or
mov
les
pop
fdivl
or
ret
and
je
adcb
adc
jge
mov
and
jne
in
mov
sub
jmp
cmp
push
pop
push
add
lods
and
mov
sbb
adc
push
sbb
shl
or
rcll
sub
cmp
rcrb
lock
pop
jbe
sub
add
xchg
testb
pop
or
xor
xchg
push
mov
bound
inc
push
ljmp
cmp
jb
mov
pop
aad
dec
js
incl
dec
or
imul
push
movl
mov
jge
jp
imul
cmpl
leave
cmpsb
pop
inc
js
jmp
add
jl
or
mov
je
sub
ds
sub
add
out
xor
call
dec
add
pop
js
shlb
jne
dec
movsl
push
and
xlat
or
add
das
int3
or
and
xor
add
out
outsb
and
cmc
push
mov
cmpsl
dec
jne
ret
pop
rcll
mov
sub
adc
add
pop
adc
push
sahf
mov
and
arpl
lock
push
test
pusha
xchg
sub
fs
mov
mov
in
adc
inc
dec
insb
lods
es
xchg
cmc
pop
or
ror
mov
jle
add
pop
add
add
lods
mov
lret
lods
push
sub
ss
nop
push
or
ds
add
pop
xchg
shll
ficomps
testb
rclb
jno
pusha
jge
cld
push
inc
xchg
xchg
jnp
loop
mov
dec
mov
mov
sahf
jne
add
nop
pop
add
rorl
xor
lods
mov
sarb
fmul
mov
push
adc
xor
cmp
push
inc
add
mov
inc
mov
xchg
and
xor
jae
or
mov
adc
sbb
in
shl
adc
push
es
adc
adc
and
adc
adc
mov
flds
adc
inc
inc
or
adc
push
jle
dec
jae
add
sub
mov
cmp
fsubs
pop
mov
cmpw
je
cmp
jb
fadds
test
pop
sbb
cmpsl
and
in
push
xor
neg
leave
mov
cmp
fmuls
fidivrl
sbb
and
jl
mov
sub
jo
push
xlat
pop
sbb
mov
add
inc
fnsave
test
lock
sti
adc
insl
xchg
inc
in
jl
inc
and
jg
xor
jmp
cmp
sti
jge
fdivl
sub
cmp
bound
cwtl
sub
adc
or
push
fimull
movsb
pusha
es
negb
cs
lea
in
mov
add
or
test
test
dec
movsl
jle
cmp
mov
xorl
pushf
push
cmp
mov
push
mov
into
aaa
push
imul
popf
loopne
mov
outsb
nop
xor
lock
inc
popf
movb
test
sub
fidivrs
sub
ficompl
and
testb
sub
dec
pushf
aad
add
hlt
add
jb
add
pminsw
xchg
pop
add
inc
xor
jne
mov
jp
call
repnz
jo
jge
cmpl
sbb
push
out
mov
js
in
inc
inc
sbb
mov
pop
inc
testb
pusha
adc
call
iret
loopne
ret
mov
aad
mov
mov
xor
pop
adc
mov
in
pop
lods
cmp
jmp
mov
mov
inc
mov
dec
cmp
mov
orb
lods
test
cwtl
push
andb
adc
mov
out
mov
sub
mov
add
dec
popa
pusha
inc
dec
sti
pop
testl
call
es
stos
jl
inc
add
cmc
push
sub
out
jb
jg
push
add
mov
or
shlb
cmp
and
xor
cmp
icebp
out
cs
add
ja
out
ja
scas
pop
xchg
fldl
pop
add
sub
sbb
or
or
xchg
push
and
lock
ss
pop
and
pusha
dec
repnz
adc
cs
push
inc
cwtl
cs
sub
into
pop
ds
fldt
sbb
jmp
pop
lock
clc
in
sbb
cmpsl
mov
test
sbb
cmp
and
ror
pop
add
or
loope
cmp
or
adc
pop
flds
daa
hlt
push
les
je
movsl
or
sub
movsb
ja
sbb
cmp
je
mov
test
cltd
jbe
push
add
add
adc
jp
fstps
ds
inc
inc
cmpsb
inc
je
push
hlt
add
sbb
imul
xorb
out
test
push
js
sbb
out
mov
push
and
ljmp
lret
push
cmp
cmp
push
jne
mov
mov
mov
push
pop
mov
sub
orb
lock
xchg
push
dec
sub
adc
or
stos
mov
frstor
jmp
std
inc
mov
lcall
adc
mov
mov
movsb
in
test
dec
cmc
xor
inc
jns
sbb
inc
leave
inc
loope
adc
or
ret
ljmp
popf
repnz
cmp
mov
lea
loope
loopne
sbb
pop
mov
lea
mov
inc
push
inc
sbb
xchg
std
pop
rcrl
jb
add
cmp
inc
dec
adc
roll
push
cmc
jg
push
mov
cmpl
push
mov
inc
mov
lods
or
mov
add
sub
xor
sbb
gs
lret
pop
rorl
aad
cmp
or
int
and
push
mov
add
push
pop
jl
loope
jp
xor
cmpb
fsubrs
push
movsl
pop
hlt
std
xor
in
hlt
stc
clc
mov
xor
push
lret
jmp
xchg
push
scas
rorl
cmovp
inc
push
dec
jmp
mov
test
arpl
mov
push
mov
push
jo
jne
xchg
imul
sub
xor
mov
inc
lods
mov
jb
cmp
ja
inc
add
repnz
js
pop
jno
enter
xor
scas
dec
fadd
lea
push
or
sub
cmp
jne
orl
inc
das
movsl
jecxz
shrb
fimull
cli
mov
adc
imul
push
lods
add
adcl
mov
xor
adc
pop
xchg
adc
cmp
pop
insb
or
adc
test
cltd
mov
jecxz
adc
mov
fs
mov
rcll
lea
push
mov
lret
mov
jns
sub
inc
push
inc
call
test
mov
out
adc
inc
mov
xchg
dec
or
add
pop
xor
dec
xchg
push
jne
enter
lcall
jl
outsl
sub
in
adc
sub
push
aas
or
add
insb
stos
jp
xchg
adc
sub
cltd
fisttps
sbb
cmp
xor
pop
jne
pop
jnp
cmp
jg
sbb
add
dec
test
clc
pop
add
push
jecxz
sbb
cmp
subb
data16
bound
or
jge
test
or
addl
in
repnz
push
ljmp
xor
adc
sbb
dec
adc
mov
dec
xor
fnstcw
icebp
outsl
pop
xor
mov
and
adc
jmp
in
out
inc
adc
sub
hlt
leave
or
cwtl
movsb
mov
jl
jmp
addr16
cmp
test
adc
xchg
ss
push
gs
pusha
xor
sub
cmp
push
in
decl
fs
enter
inc
orl
and
lret
fadds
pushf
rcrb
jbe
mov
pushf
jae
lea
popf
lea
cmp
inc
cmp
jbe
inc
aam
push
mov
out
mov
push
xchg
in
outsl
mov
and
mov
inc
rcll
mov
sbb
sub
sbb
cltd
lock
xor
sahf
push
sbb
add
sbb
mov
movb
sub
dec
push
mov
movsb
movsl
mov
ficompl
test
pop
popa
repz
inc
or
pop
fwait
add
sbb
or
int3
sub
push
fmuls
cmp
cmp
fnstenv
xor
inc
inc
test
roll
popf
test
cmp
sbb
or
sub
cmp
sti
add
sbb
lods
push
nop
popa
sbb
pop
add
int
push
adc
mov
es
pop
test
sub
shr
mov
fs
or
jg
inc
mov
dec
bound
and
inc
push
jl
iret
pop
mov
je
add
mov
gs
push
mov
or
arpl
push
and
popa
cmp
das
jbe
and
push
je
mov
push
movsb
jg
xor
jno
mov
outsl
jmp
test
arpl
xlat
xchg
js
add
sub
xchg
jns
outsb
or
jns
fildll
test
hlt
push
mov
test
push
stos
mov
mov
inc
cmp
add
sub
pop
shrb
test
cmp
sbb
add
jae
and
rcl
out
aas
and
add
and
aad
xor
and
imul
pop
or
or
enter
add
and
enter
or
sub
inc
xchg
push
add
xchg
andl
popf
pushf
hlt
js
xchg
add
pushf
stos
clc
mov
push
pop
dec
adc
adc
cs
loope
jecxz
and
jno
dec
cmp
aas
clc
mov
or
push
push
inc
cmp
and
mov
adc
lahf
dec
and
cmp
xchg
add
sbb
push
cmp
sbb
mov
jnp
adc
fnsave
je
pusha
dec
push
cmp
fldl
in
data16
fnsave
pop
cwtl
or
cmp
cld
je
jns
adc
jne
in
aaa
jnp
mov
push
test
cmp
dec
or
sub
mov
sub
out
orl
cld
cmp
stos
es
add
out
dec
in
xchg
adc
xchg
sbb
xchg
mov
hlt
ret
enter
jns
or
lds
xor
xor
inc
pusha
sub
cmp
call
fadds
or
sbb
pusha
je
push
fxtract
jne
push
js
sbbb
scas
fistl
cld
loopne
fnstenv
mov
cld
lods
push
mov
dec
add
xchg
cltd
xor
stos
dec
inc
ficompl
pushf
xor
mov
data16
dec
ja
push
cmp
xchg
inc
in
maxps
sbb
lea
push
jnp
in
add
lods
or
ret
pop
pusha
push
shlb
movsb
cmp
jnp
hlt
neg
sbb
and
bnd
push
mov
push
sub
push
adc
sub
mov
leave
dec
out
and
xor
adc
je
adc
imul
mov
in
adc
cltd
scas
add
lods
loopne
inc
mov
add
mov
mov
xor
fs
movsb
xchg
add
movb
cmp
jbe
or
jne
push
neg
mov
in
push
jnp
js
mov
ljmp
lods
mov
and
cli
push
fwait
popa
jbe
jmp
cmp
jl
add
movsl
xchg
xor
test
setb
jbe
sbb
ja
lea
jmp
ds
xchg
add
adc
mov
in
arpl
push
push
imul
jp
jl
cmp
ret
add
std
sub
insl
adc
and
faddl
js
mov
jbe
cmp
push
add
add
leave
js
sub
jno
mov
pxor
xchg
xor
and
mov
xchg
push
mov
stc
add
shrb
add
movaps
and
pop
sub
scas
enter
adc
faddl
hlt
push
inc
loopne
rorb
test
pushf
fwait
inc
sbb
rclb
loope
mov
cmp
push
inc
adc
or
je
cwtl
adc
add
fadds
int
f2xm1
inc
adc
cmp
sbb
loope
sahf
adc
sbb
movsb
and
fildll
jae
andl
leave
ret
mov
pop
andl
or
das
imul
js
daa
add
data16
ffree
sub
aad
xchg
cmp
test
inc
scas
sbb
sbb
int3
cmp
inc
xor
in
in
int
inc
jg
xor
or
cmpl
xor
mov
jbe
mov
push
inc
mov
rolb
xor
sbb
out
xor
mov
cld
jge
mov
pop
push
leave
outsb
sbb
adc
cli
das
or
sub
pushf
sub
or
xorb
jns
and
jae
inc
dec
movsb
aad
jmp
xor
or
insb
xchg
xchg
xchg
fiaddl
repnz
cmp
fstpl
inc
cmp
jae
cmp
and
mov
inc
shll
cmp
pusha
jae
test
xor
std
pushf
xor
xor
jne
cmpl
insb
jg
jb
push
jae
adc
addr16
prefetch
or
orl
test
xor
jl
mov
lock
xor
cmp
xchg
in
cli
and
cmpsl
adc
sbb
pop
xor
sbb
mov
xlat
sbb
mov
jg
outsb
xor
mov
std
lock
mov
faddl
jae
imul
fsubs
cmp
arpl
xchg
and
adc
rolb
and
sub
mov
jmp
outsl
cmc
push
arpl
cltd
sahf
rcrl
je
jmp
push
xchg
in
into
jne
daa
jp
dec
mov
fnstcw
mov
adc
cmp
add
pop
sub
inc
nop
icebp
scas
mov
test
loopne
or
and
dec
cmpsl
pop
call
xor
pop
call
insl
cmp
test
sub
or
or
xor
and
icebp
ret
add
pop
xlat
xchg
cmp
addr16
and
ficoms
push
int3
pop
jl
xchg
xchg
xorl
or
or
and
pusha
shll
lea
ds
or
outsl
sub
add
inc
sbb
pop
push
imul
xor
mov
xchg
insl
je
mov
mov
inc
mov
push
clc
shll
ror
into
in
subl
out
add
push
aam
add
or
sbb
push
sbb
sbb
fmull
cmpsb
push
add
push
jle
ret
shll
mov
mov
push
popf
sbb
nop
xchg
inc
aas
mov
jp
pop
or
mov
add
mov
pop
test
mov
jl
fdivrs
cmp
push
xchg
jo
add
xor
add
shl
jb
pop
ja
lock
mov
mov
inc
push
sub
lea
xorb
add
or
outsb
cmp
lods
adc
push
sbb
subl
dec
cmp
jb
pop
jae
pop
mov
adc
adc
fidivrl
mov
ds
lea
filds
mov
imul
cmp
popf
pushf
mov
or
imulb
and
mov
or
sbb
pop
je
dec
adc
loopne
fidivs
jae
lea
ja
sbbb
sbb
aas
or
or
out
js
call
or
popf
adc
sub
jae
pop
xchg
add
stc
push
and
sbb
cmc
bound
rorl
mov
sbb
push
dec
mov
sti
cmp
dec
mov
and
ret
iret
lea
je
shll
jbe
adc
scas
xor
sbb
xor
jmp
push
inc
sub
dec
mov
mov
shr
push
push
nop
fnstcw
xchg
xchg
stos
sbb
push
adc
ret
mov
sarl
orl
or
mov
add
je
cmpsb
pop
push
sbb
add
push
mov
mov
and
or
out
mov
je
mov
push
outsb
mov
stos
scas
pushl
adc
or
adc
fldl
testb
cli
adc
mov
das
dec
and
sub
dec
insb
and
inc
push
lods
and
xor
nop
sbb
push
rorl
jge
inc
add
in
jle
movsl
sub
add
insl
mov
cli
ja
pop
adc
div
outsb
cmp
mov
scas
jo
imul
inc
es
add
stos
outsb
inc
add
xor
push
pop
insb
xor
dec
lahf
nop
fmull
dec
mov
push
push
test
adc
pop
mov
add
xor
mov
push
add
mov
fsubr
xor
push
std
ds
pusha
and
inc
cmpl
sub
cmpsl
adc
pop
scas
xor
pop
or
xor
je
data16
lock
data16
sarl
push
push
add
jns
adc
mov
or
int
pop
pop
lea
cmp
in
les
orl
mov
push
push
mov
scas
jbe
out
sbb
jmp
add
incb
adc
jl
pushl
mov
sbb
push
test
pop
pop
pop
sub
add
push
mov
daa
bnd
mov
mov
sbb
icebp
mov
js
dec
ret
push
jae
addb
push
sub
sbb
je
add
push
bound
sbb
mov
inc
ja
adc
ret
inc
push
adc
sub
or
and
or
test
loopne
adc
insb
les
jg
mov
cmpb
xor
fnstenv
inc
jmp
push
leave
cmpb
sub
jg
sahf
aam
orb
xor
adc
add
add
add
push
jge
jb
sub
sub
jmp
push
xor
or
mov
out
insb
imulb
call
mov
push
cmc
dec
in
xlat
insb
pop
aaa
rorl
add
jae
sub
mov
pop
sub
ja
aam
scas
enter
mov
test
and
jbe
jb
or
out
test
lock
sbb
cmp
cmpsb
imul
dec
sub
cmp
mov
xchg
xor
adc
jae
cmp
push
test
or
out
jmp
push
inc
add
test
sub
movsb
in
in
lahf
inc
cmp
and
out
mov
adc
xorl
mov
loope
fdivl
cmp
add
das
or
ror
xsaveopt
jp
cmp
jb
inc
dec
cmpb
jge
imul
vmread
mov
pop
mov
cmp
sub
mov
inc
or
add
and
add
ret
pop
and
push
icebp
sti
ret
and
andl
mov
and
add
dec
add
std
jno
aas
push
and
mov
mov
add
aas
das
add
cmp
arpl
addr16
jmp
daa
inc
cmpsb
imul
imul
sub
and
sub
sbb
pop
in
and
loop
and
fiadds
jbe
push
pop
addl
mov
add
push
repnz
add
fiadds
inc
inc
arpl
mov
in
pushf
xorl
mov
cmp
jl
dec
push
cmp
mov
xchg
jmp
and
fadd
not
jae
sbb
pusha
sub
lea
lock
dec
shlb
xor
rep
fadds
adc
push
push
ffreep
and
sar
add
sbb
adc
and
jmp
mov
jbe
cmp
jno
sbb
ret
dec
jg
dec
xchg
clc
dec
cmpl
pushl
xchg
in
xchg
and
adc
fsts
jo
adcl
or
and
inc
pop
lock
imul
push
pop
adc
mov
jp
popl
addl
dec
cli
inc
sub
sbb
adc
or
adcb
out
movsl
rcll
push
push
inc
mov
ds
pop
imul
adc
dec
inc
gs
icebp
fcompl
mov
add
mov
dec
test
mov
sub
sub
add
movsl
mov
and
adc
mov
push
or
inc
inc
sub
mov
jmp
inc
fistpl
mov
pop
adc
push
pop
or
or
push
sbb
cmp
inc
ljmp
mov
or
mov
jb
add
les
push
lret
pop
xor
xchg
loope
dec
xchg
mov
fists
ljmp
mov
mov
loope
or
rclb
push
dec
jmp
and
xor
cmpl
xchg
mov
dec
mov
test
ficompl
daa
or
and
pop
cld
loop
shlb
call
jne
and
jne
sbb
mov
mov
sbb
int
popa
lret
lock
lret
or
clc
jp
arpl
outsb
outsl
push
call
rcrb
fdivs
jae
sub
sbb
leave
icebp
fiadds
inc
cmp
mov
add
mov
je
and
sbb
push
sub
inc
add
xor
scas
adc
and
and
cld
std
outsb
or
inc
dec
imul
loopnew
push
test
fstp
cs
pop
stos
adc
adc
push
jp
inc
adc
and
fs
and
inc
xor
add
sbb
jecxz
rcll
xor
add
sub
xchg
outsl
das
or
dec
jecxz
int
imul
inc
out
sti
data16
icebp
jp
loopne
adc
fdivs
pop
das
push
icebp
ficomps
xchg
cmp
jne
pushf
xchg
adc
fwait
jge
cs
mov
add
data16
insl
loopne
or
pushf
and
cmp
fwait
ret
xor
popf
dec
push
push
xchg
push
cmp
push
out
in
xchg
sub
aam
cmp
add
push
adc
cmp
mov
inc
add
push
jge
loopne
jp
or
xorb
push
lea
mov
es
jmp
add
mov
cmpl
scas
push
mov
xchg
add
sbb
das
jmp
cmp
popl
clc
push
push
sahf
or
adc
mov
jo
sub
push
xor
sub
push
add
mov
fidivs
add
sbb
rorl
test
jmp
pop
and
mov
jecxz
sbb
and
inc
test
adc
jl
js
fucomi
lock
shlb
faddl
sub
daa
je
push
or
aam
enter
mov
inc
clc
mov
xchg
shl
pusha
ljmp
mov
leave
jbe
push
push
pop
stos
mov
jns
and
test
add
or
mov
movsl
addl
test
or
imul
push
fcom
add
mov
add
mov
jl
and
adc
lods
nop
xchg
in
cmpsb
ret
push
lea
data16
pop
push
and
or
xchg
add
cltd
dec
fs
mov
cltd
filds
js
mov
push
dec
fdivr
fs
hlt
test
cmp
std
push
into
idivb
mov
add
js
fwait
sub
and
orb
dec
clc
pusha
or
hlt
push
popa
dec
int3
dec
div
xor
fisubl
push
pop
lcall
mov
scas
push
mov
push
aad
push
jns
clc
clc
popa
or
fmul
jle
mov
adc
cmp
addl
xor
adc
pop
sti
enter
push
subl
mov
mull
sub
adc
mov
test
jns
mov
lods
sbb
mov
pop
popf
into
sbb
gs
shr
mov
outsl
push
or
push
mov
jle
dec
and
sub
int
fmuls
jge
jg
adc
test
pop
jmp
or
pushl
or
sub
jg
ss
dec
add
inc
or
mov
into
lods
cwtl
lock
mov
ret
sbbb
cmc
std
xor
icebp
adc
repnz
mov
push
adc
int
pusha
subl
fisubrs
push
dec
push
cmp
sti
fcoms
inc
das
call
push
sub
add
fmuls
pop
clc
sub
frstor
mov
mov
into
out
push
loope
loopne
js
shll
mov
rcll
dec
xor
xor
cld
sub
cmp
clc
test
push
add
or
push
xor
inc
call
jne
inc
lahf
fistl
pop
adc
and
aaa
mov
leave
sub
es
inc
leave
icebp
or
xor
mov
mov
cmpsb
in
fiadds
jmp
pop
adc
lret
mov
add
push
shrb
mov
adc
adc
shlb
inc
add
test
ljmp
add
shl
rclb
pusha
rorl
fcoml
dec
in
mov
or
xor
or
je
jo
jo
inc
ljmp
mov
xor
xchg
jl
movsl
mov
ret
pop
fcomip
mov
and
sbb
pop
or
jle
add
aam
inc
push
pop
sub
xor
or
dec
std
scas
sbb
shl
xor
notl
add
dec
push
sub
andb
mov
mov
mov
out
adc
out
xacquire
push
roll
movsl
test
mov
inc
push
xor
jo
jo
lcall
xchg
mov
xchg
jmp
pushl
sub
jne
mov
jle
inc
xor
push
dec
loop
xor
inc
pop
push
cmp
push
jnp
xchg
inc
in
push
cmpsb
orl
mov
aaa
test
and
inc
adc
int
lock
xchg
dec
enter
sbb
inc
push
push
pop
sbb
and
cmp
mov
dec
dec
sbb
icebp
sarl
loop
adc
push
mov
adc
adc
mov
mov
ffreep
test
add
outsl
sar
ds
xchg
jne
andb
shll
hlt
or
cmpsb
iret
jbe
mov
jne
push
pop
fisubl
xor
jno
add
jne
xchg
popa
mov
pop
mov
hlt
not
jne
or
jne
mov
hlt
mov
adc
push
ljmp
cmc
int3
adc
fists
lahf
cmp
frstor
cmp
and
lea
sub
mov
jae
push
or
and
sub
pop
sbb
rcrl
xchg
pop
insl
repnz
cld
adc
popa
inc
add
adc
daa
dec
add
ljmp
push
dec
jle
loope
push
xchg
push
inc
mov
adc
jno
jge
push
ds
mov
xor
xor
cmp
sub
mov
pop
out
mov
mov
test
mov
cmpsb
loopne
test
dec
shrl
testl
mov
popfw
popf
add
lcall
inc
dec
fbstp
aam
pop
mov
jg
dec
mov
mov
jg
cwtl
pop
enter
mov
divl
pop
push
and
imul
hlt
push
lock
mov
clc
pushf
cmp
or
popf
hlt
push
icebp
flds
sub
xor
pop
test
pop
dec
and
loopne
hlt
push
shrb
test
pop
dec
adcb
andl
sbb
mov
jmp
jne
dec
aad
orl
insl
jne
sub
dec
repz
imul
add
cmp
jne
push
push
je
xor
lock
repz
sbb
dec
insb
jne
or
xchg
and
jne
scas
aaa
cmc
out
daa
and
mov
xchg
xor
lret
and
dec
jo
xchg
or
push
and
cmp
je
test
push
or
jne
cmpsl
mov
loopne
imul
adc
imul
mov
aas
and
push
aaa
scas
movsl
push
xchg
or
jnp
out
inc
inc
mov
cmp
push
ficompl
cmpsl
push
cmp
fdivrl
jl
mov
and
lret
jo
icebp
push
fucom
inc
lcall
in
shrl
cmc
push
push
call
pop
xor
and
out
scas
rcrl
push
test
add
outsl
fsub
push
pusha
inc
data16
jg
xor
clc
stc
lds
mov
adc
mov
or
dec
mov
pop
cmp
sub
or
push
sbb
add
int3
add
call
or
inc
or
push
or
loopne
add
sub
pop
rcrl
inc
jb
add
subl
aaa
sub
cmp
lret
arpl
or
das
add
sbb
inc
sbb
sub
xor
fisubl
push
mov
push
add
and
cmpsb
imul
adc
pusha
cmpsb
imul
add
or
cmp
or
mov
andl
pop
addl
adc
lcall
sub
mov
imull
add
loopne
mov
ja
nop
in
jle
movb
sbb
adcl
out
pushl
or
or
test
js
or
xorb
or
insb
push
or
push
cmp
adc
idivb
cmp
aaa
xor
inc
sub
sbb
cmp
fsub
inc
pop
add
addps
mov
insl
or
jo
xchg
xor
mov
sbb
es
push
addps
sbb
push
jp
inc
add
inc
fcompl
mov
fwait
repnz
add
rcrb
pop
lea
and
mov
push
test
test
add
shlb
les
sbb
add
cmp
cmp
and
push
ret
sub
es
mov
daa
push
add
jo
loope
xor
pop
mov
test
loopne
repz
push
mov
and
mov
fiaddl
sub
out
loopne
sub
test
and
xchg
add
add
imul
xor
test
add
je
sbb
xor
frstor
jne
das
xorl
cmp
cmpsb
cmpsb
pop
jne
orl
loope
idivl
adc
imul
mov
lcall
mov
jmp
and
xchg
mov
jns
mov
cmc
dec
mov
enter
stc
fldl
sar
xor
dec
ja
das
add
testl
xor
aaa
push
clc
push
arpl
inc
xchg
les
sub
testb
mov
stc
push
jne
mov
push
rolb
xchg
xor
data16
je
xor
pop
lea
xorl
insl
bnd
fwait
pop
lahf
and
cld
jo
dec
xlat
or
dec
mov
rcll
xor
push
ljmp
sbb
and
popf
pop
ret
or
movsb
andl
sbb
into
cmp
mov
inc
jnp
push
inc
cmp
adc
push
popf
lock
fcmovb
dec
mov
dec
std
push
sbb
jo
cli
out
fidivrs
pushf
push
adc
or
jge
pop
mov
nop
in
ret
jae
movsb
adc
fidivrs
cmc
arpl
or
aam
sub
jnp
add
fists
push
inc
adc
fdivl
sti
add
xor
xor
outsb
mov
mov
cmp
test
sub
enter
daa
call
sub
xchg
nop
push
out
sub
js
nop
mov
rorb
je
adc
lea
out
rol
stos
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
push
pusha
int3
lock
inc
inc
inc
cmp
hlt
mov
notl
and
sbb
je
cmovle
sti
mov
je
xor
add
and
orl
enter
out
test
icebp
or
mov
jo
lea
xor
push
dec
mov
pushf
cmp
cli
je
popf
enter
add
lds
mov
lds
hlt
sbb
adc
cmp
push
hlt
sti
push
sub
dec
icebp
push
fwait
inc
and
test
jne
or
add
mov
add
or
outsb
dec
adc
xchg
adc
pop
jnp
lock
mov
lock
in
mov
sub
jmp
push
mov
push
pop
in
repz
adc
sbb
cmp
pusha
adc
rcl
sbb
push
mov
mov
ret
add
mov
stc
cmpsl
loopne
nop
cmp
lret
sub
xor
cltd
cmp
cmp
xor
xor
inc
in
inc
std
and
pop
xor
pusha
push
push
test
or
xor
test
cmpsb
xor
test
add
pop
pop
mov
sbb
call
and
add
cmp
push
adcb
sahf
mov
sbb
and
fimull
sub
dec
fucom
mov
jne
jbe
add
mov
movsb
mov
add
xor
cmc
je
push
aas
jne
outsb
out
imul
mov
outsb
cmp
idivb
mov
fistl
popf
rolb
fidivrs
mov
sub
mov
cmp
pusha
or
je
sbb
repz
lock
xchg
push
and
adc
xchg
cwtl
push
sub
lods
out
adc
insb
jno
inc
sbb
dec
push
or
cwtl
cmpsl
or
sbb
mov
lret
enter
pushf
fs
or
and
les
push
loopne
popa
add
adc
mov
push
or
out
push
pop
add
test
in
lods
js
pop
arpl
arpl
test
add
test
outsb
cwtl
scas
and
lock
inc
loopne
or
sbb
inc
adc
add
ds
pusha
jbe,pn
and
sub
testl
adc
pushw
cmp
push
sbb
pop
dec
sub
in
outsl
std
flds
ss
push
ret
jge
int3
mov
pop
xchg
xor
stos
push
rcrl
arpl
mov
rolb
jae
lret
jne
and
and
and
xchg
adc
or
cmp
mov
test
push
or
sub
mov
loope
jmp
or
or
mov
pop
cmp
pushf
rol
or
push
movsl
movsl
cltd
ret
adc
xor
xchg
dec
int
adc
mov
daa
and
push
lea
and
mov
cmc
xor
stos
push
or
shl
push
push
push
mov
inc
xor
cmp
mov
mov
inc
pop
mov
mov
cmpl
pop
movb
cld
ss
lret
shlb
sbb
addr16
test
add
mov
cvtpi2ps
psadbw
fmull
jge
pusha
insb
inc
dec
mov
orl
lcall
xor
mov
jb
xor
dec
pusha
popa
push
jo
xor
mov
movsl
add
ss
adc
dec
mov
cld
popa
lock
sbb
and
push
insb
frstor
jo
popl
dec
jmp
daa
addb
add
cmp
addl
repz
movsl
in
or
sub
sub
pop
loopne
push
imul
cmp
and
dec
popw
pusha
icebp
sbb
fdivp
fs
fnstsw
test
jne
aam
xor
imul
sbb
je
or
divl
push
and
imul
orl
pop
inc
dec
jge
push
std
jp
cmp
lret
test
push
lcall
sub
pushf
mov
sub
pop
push
pusha
mov
fucomp
jne
adc
jp
inc
push
sahf
test
aas
adc
pushf
jnp
push
fsubl
sub
cmp
push
or
and
insl
andl
rolb
popf
inc
jg
adc
int
shl
sahf
xor
adc
push
xchg
jo
or
adc
cld
push
ljmp
loope
fs
subl
sbb
mov
test
pop
or
imul
jmp
push
and
pcmpeqd
adc
shlb
add
movsb
add
test
cmp
fimull
cmp
push
imul
mov
test
andb
xor
call
or
push
mov
and
dec
ror
push
xor
ret
pop
sub
dec
jge
pop
cmpsl
mov
out
xor
adc
push
cmp
popa
rcll
pop
or
sarl
mov
cwtl
int3
add
push
sbb
xor
jbe
pusha
add
sbb
xorb
add
or
sub
or
xor
push
inc
xor
xchg
mov
add
pop
ficoml
ja
mov
fwait
les
in
pop
mov
mov
js
clc
movsl
fnstsw
pop
mov
pop
les
shll
xor
xor
pop
jo
adc
iret
nop
sbb
mov
incl
ljmp
jecxz
or
push
dec
pop
sbb
sbb
jo
inc
and
ret
sbb
daa
xchg
xor
fistps
mov
lods
stc
mov
cmp
aas
fadd
sbb
pushl
or
push
pop
mov
pop
ds
cmpsl
loopne
add
sub
mov
idivl
sahf
mov
inc
nop
fwait
xchg
jnp
shll
fdivrl
inc
lahf
or
into
pop
inc
aam
test
inc
negb
or
xor
mov
add
mov
jl
andl
in
in
adc
mov
into
mov
sub
movb
inc
imul
jecxz
icebp
fs
or
dec
xor
pop
adc
not
jo
push
mov
and
inc
xor
add
push
fcoml
push
shll
fildll
test
scas
test
hlt
mov
xor
aas
adc
xchg
hlt
pushf
sub
add
dec
xlat
push
movsb
mov
pusha
loopne
fdivr
push
push
lds
adc
lods
dec
jl
and
or
sbb
cmpsl
xor
icebp
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
mov
fcomps
cmp
sub
hlt
mov
movsl
add
pop
pop
sub
movsl
divb
add
push
shll
rolb
add
adc
and
outsl
pop
xor
cmp
cmp
cmp
add
imul
mov
aaa
ret
testb
je
aaa
jecxz
push
fdivl
cmp
decl
dec
jl
loope
xor
push
fildl
pop
pop
adc
test
and
xor
fs
fisttps
shrd
inc
mov
leave
jge
push
xor
xchg
cmc
pop
jae
test
cmpsl
cwtl
jl
daa
sub
add
nop
and
inc
mov
aas
mov
sbb
or
jge
push
pop
pop
leave
xor
add
sarl
aaa
add
add
mov
movsl
movsl
cli
sub
frstor
mov
loopne
rol
mov
test
test
or
incb
pop
add
loopne
jl
test
add
pop
bound
shr
jb
sti
or
or
cmp
adc
pop
ds
in
xchg
sub
mov
data16
xlat
and
push
xchg
mov
and
lret
mov
test
neg
adc
or
mov
add
test
push
inc
cmc
sub
inc
pushf
jmp
es
xlat
out
adc
dec
fwait
mov
pop
js
rcrb
push
push
inc
push
push
outsl
lcall
imul
idivl
push
orb
jbe
lds
mov
push
in
xchg
lods
add
add
adc
adc
pop
ret
push
push
mov
mov
ds
mov
mov
movsb
scas
iret
adc
xor
adc
pop
sub
push
dec
inc
lods
out
addl
aas
movsl
add
xchg
and
xor
xchg
outsl
push
mov
mov
xor
sbb
add
testb
repz
add
or
push
bound
aas
or
adc
xor
pusha
ljmp
sbb
adc
add
int3
data16
cmp
mov
mov
dec
andl
cmp
stos
loope
les
mov
cmp
adc
mov
push
imul
add
sub
cmp
sub
adc
cli
xor
outsb
sub
sbbb
sbb
inc
mov
sar
movsl
fdivl
push
or
jae
insb
dec
test
mov
xor
or
adc
dec
insb
loopne
jg
addr16
inc
in
cmp
shrb
dec
mov
das
test
dec
mov
mov
dec
insb
add
push
hlt
hlt
jnp
adc
mov
mov
sbb
adc
sbb
cmp
setns
inc
cmp
adc
sbb
cmp
sbb
lods
xor
loope
cwtl
ss
call
add
push
add
push
enter
push
sbb
push
mov
inc
mov
mov
jno
rcl
adc
and
aas
imul
mov
jbe
cli
pmaxub
imul
cld
aaa
xchg
add
pmuludq
movsl
jge
movl
mov
fucom
shr
inc
add
out
push
ret
loopnew
adc
cmp
sbb
add
test
mov
je
jp
insb
std
jg
mov
add
imul
jno
in
sbb
stc
pop
fistl
push
insl
out
in
sbb
cmpsb
fucomip
jae
movsl
mov
es
mov
or
sbb
in
scas
inc
mov
arpl
pop
adc
loopne
lret
push
inc
lock
mov
dec
jns
in
xor
add
cmp
mov
dec
add
jne
sbb
xor
shrl
push
or
lds
push
adcl
loope,pn
sbb
arpl
adc
sbbb
fdivrs
shrb
inc
xchg
add
mov
adc
test
pushf
pop
mov
pop
adc
or
cmc
arpl
add
mov
mov
movsl
rol
insb
insb
lds
sub
lods
adc
push
ljmp
jg
push
adc
dec
add
or
inc
test
mov
inc
xor
jb
dec
adc
inc
scas
xor
loopne
lock
pop
pop
arpl
loop
sbb
jg
add
mov
cwtl
adc
dec
mov
shrb
jl
jmp
push
fmull
jae
push
loopne
pop
mov
push
lea
loope
das
adc
jle
aas
inc
adc
movb
es
addr16
mov
pop
repnz
cmp
jbe
es
cmp
mov
jne
repz
js
repz
mov
inc
sbb
cmpsb
sub
cmp
add
jo
sti
dec
sbb
cmp
push
xchg
or
in
and
adc
lods
or
pop
hlt
mov
adc
je
inc
add
mov
sarb
inc
adc
adc
xchg
arpl
mov
and
sub
xchg
test
loopne
test
movb
rolb
jp
mov
outsl
loope
sbb
push
inc
pop
cli
and
test
aas
sbb
jae
jecxz
fwait
pop
fs
sarb
xor
mov
rol
arpl
lcall
cmpb
cmp
mov
or
mov
cmp
push
pop
xchg
mov
test
cmpl
inc
jae
pop
and
push
pop
or
mov
sub
push
lock
repnz
pop
testl
push
je
cmc
dec
jns
push
push
es
fsubrp
inc
and
add
mov
fldl
dec
or
adc
jmp
lods
pop
dec
pop
leave
pop
xchg
or
adc
fcoml
dec
pop
aaa
sbb
jp
loop
push
inc
loop
sub
dec
or
fistps
add
into
xor
inc
cwtl
add
je
push
pushf
mov
mov
jl
popa
jbe
jmp
sub
cwtl
or
js
loope
testl
cmp
mov
adc
or
xor
lahf
ret
daa
movsl
mov
rcll
and
and
fsts
ss
fidivl
jno
xchg
add
push
push
push
pusha
mov
jae
push
push
jae
movsb
sbb
fs
movl
pop
pop
push
push
je
lock
or
dec
ss
fwait
push
xor
mov
pop
loopne
add
cmc
push
xor
dec
dec
call
push
mov
clc
dec
imul
testl
xorl
lret
adc
dec
sub
clc
and
push
and
sub
jle
ret
popa
ja
fmull
fistpll
mov
cmp
add
add
lret
mov
jno
addl
rcrb
loopne
divb
mov
mov
jbe
sti
cmpps
push
aas
insb
pop
add
adc
jno
das
in
daa
cwtl
clc
adc
pushf
in
loopne
sbb
dec
pop
push
insl
cmpsl
sub
inc
aad
add
xor
mov
outsb
mov
lea
adc
insl
push
add
pop
rcll
ds
inc
pop
inc
mov
add
ret
push
cmp
inc
shl
xchg
in
lahf
ret
xor
ret
mov
je
bound
test
rcrb
push
and
sbb
or
fcoms
andl
aam
out
nop
dec
popl
je
mov
sub
sub
sub
inc
mov
das
adc
rorl
jns
cmp
test
movsl
push
or
add
cli
js
jne
sahf
push
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
ret
xor
ja
add
adcl
xlat
rorb
jbe
mov
cmp
adc
push
aam
add
jae
or
mov
mov
sub
lock
adc
adc
or
push
pop
fcomps
sbb
adc
pop
jb
xor
adc
and
cmp
andl
push
aad
dec
or
pop
popa
icebp
bound
or
incl
sbb
ret
and
imul
addl
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
aas
push
or
or
xchg
lods
daa
pop
ds
in
fistl
insl
inc
cmp
or
popa
stos
cmp
mov
sbb
data16
dec
mov
push
pop
and
sbb
pushf
loopne
or
nop
pop
ljmp
dec
or
and
sub
inc
inc
lds
imul
loopne
and
fsubl
dec
or
ret
out
inc
or
repz
push
loope
and
or
mov
push
cli
sub
push
mov
push
jge
rorb
xor
push
pop
sbb
rorb
push
inc
movsl
add
bound
push
and
addb
test
jbe
das
or
out
shll
lcall
inc
xchg
cmpsb
add
fcompl
push
cmp
push
das
add
sbb
xor
lea
cli
xor
cmp
icebp
and
cmp
and
pop
add
mov
pop
in
jns
inc
sahf
fadds
dec
cs
in
dec
mov
ret
cli
leave
in
add
insb
jge
mov
les
push
or
inc
add
and
xchg
sbb
fcoml
jo
cmp
fsubrp
push
xor
rcrb
int
push
ret
sbb
hlt
mov
mov
fsubrs
or
shlb
aam
fbstp
inc
lcall
or
adc
fisubs
push
mov
cmp
mov
sub
mov
dec
aam
cmp
sub
sub
in
pop
push
jnp
xchg
push
xchg
dec
adc
mov
sbb
mov
sub
lods
rol
push
jmp
negb
cmp
movsb
push
movsb
mov
in
in
sahf
sbb
or
adc
push
cmp
adc
or
and
adc
xchg
cli
xchg
icebp
cmpsl
fidivl
xor
inc
dec
inc
jl
movsb
xor
push
cs
mov
dec
loop
pop
mov
fidivrs
jns
sbb
mov
and
xor
jo
pop
ret
testl
xchg
jge
in
call
lahf
ds
neg
xchg
rcrb
stc
hlt
or
lret
les
pop
stos
js
fdivs
dec
or
add
jb
add
sub
outsb
test
outsl
pushf
and
test
dec
je
xchg
jb
adc
dec
scas
mov
mov
ret
mov
pop
stc
xor
andb
aam
or
outsl
data16
icebp
push
nop
fstps
lea
pop
cli
xchg
jle
pop
sbb
inc
rcrl
sub
mov
pop
fldenv
or
f2xm1
inc
sbbl
or
pop
inc
inc
inc
inc
add
out
push
cltd
or
mov
testl
scas
mov
sub
popa
pop
es
jg,pt
fdiv
pusha
mov
or
or
cmp
cmpsl
mov
push
sub
mov
aaa
hlt
adc
gs
mov
enter
leave
je
lret
pop
rcl
add
outsb
popa
fdiv
or
sahf
cwtl
in
add
test
xchg
push
sub
sub
xor
sub
repz
inc
xor
cmp
or
divps
shl
adc
in
mov
lea
cwtl
les
jae
jnp
adcb
mov
or
sub
sbb
add
pop
aaa
mov
ret
aaa
sarl
nop
cmp
sbb
inc
mov
gs
fdivl
add
push
mov
xor
out
sbb
xor
mov
or
pop
adc
or
test
mov
dec
adc
add
cmp
cmp
sub
adc
out
add
jp
es
dec
xchg
lods
mov
xchg
jae
dec
mov
outsl
sbb
mov
jbe
jne
cmpsl
insb
adc
add
xchg
mov
add
aas
add
add
push
sub
jp
push
inc
dec
pop
movsl
in
lret
adc
and
cmp
or
mov
cli
xor
adc
adc
inc
push
xor
clc
mov
or
sub
adc
jg
hlt
jb
js
adc
or
subl
xor
enter
jne
ficoms
push
cwtl
push
pop
cmpsl
push
les
sub
mov
aas
pop
ljmp
sbb
sub
jne
test
and
cmc
jp
or
loope
or
mov
cmp
jmp
jle
out
push
cs
mov
lock
or
jl
sbb
loop
sub
xchg
pop
sub
imull
push
sbb
jmp
xor
ja
std
and
adc
adc
push
sub
inc
movl
orl
cmp
sbb
adc
xor
adc
push
popa
arpl
dec
add
insl
arpl
jl
jb
add
add
imul
push
lret
inc
adc
inc
jge
sbb
and
pusha
popa
das
sub
pop
jno
lahf
sub
sub
into
jle
std
test
mov
pop
popl
sahf
jbe
xor
sbb
lcall
xchg
aam
adc
or
pop
sbb
and
fsub
dec
add
nop
push
sub
add
cbtw
xor
orl
dec
js
and
lea
ljmp
fldl
xchg
ret
add
arpl
test
xchg
xor
cmc
mov
xor
xor
and
imul
int
ret
dec
jbe
in
addr16
cmp
dec
xchg
lock
xor
lock
sbb
jmp
cmp
das
xchg
and
or
or
shr
add
dec
out
lock
xchg
lock
add
sbb
adc
push
sete
or
and
push
repnz
cmp
daa
subb
je
mov
push
aad
add
lret
cmp
je
loopne
push
mov
popf
mov
rcl
mov
loop
dec
mov
add
add
movsl
scas
cltd
or
sti
and
push
dec
fisttpl
dec
fwait
push
inc
dec
lods
xchg
jle
dec
xchg
sub
je
stos
je
sbb
rorb
add
insb
call
inc
out
divb
fisubs
cld
pop
dec
sub
push
aad
push
adcb
sbb
and
cmp
leave
mov
add
adcl
sub
cmp
cs
outsb
cmc
xor
mov
loopne
xor
cmpb
lea
data16
cld
pop
push
test
mov
sbb
mov
fstpl
cs
push
jo
pop
filds
cmp
fistl
js
add
inc
xchg
jb
mov
adc
stos
cltd
push
mov
add
push
outsb
xchg
pop
xchg
push
mov
mov
lahf
push
mov
mov
xor
dec
or
je
fwait
scas
jmp
ss
imul
inc
and
push
in
imul
jmp
ds
lcall
or
mov
imul
add
sbb
imul
dec
add
sub
xchg
cmp
push
inc
scas
pusha
and
sub
xor
int3
jae
mov
xor
cmp
imul
cmp
out
mov
cmp
sbb
inc
xchg
fsts
enter
jne
fsts
enter
lret
imul
and
xchg
push
dec
es
add
sti
gs
push
dec
and
jmp
push
mov
push
mov
ss
add
push
in
insb
or
xchg
mov
lahf
cmpsl
insl
lahf
jno
add
pop
jp
pop
push
pop
xchg
das
popa
out
fbld
push
or
inc
add
jno
mov
adc
push
addl
call
call
dec
push
rclb
add
pop
adc
pop
mov
push
into
js
inc
sbb
pop
adc
and
mov
push
jg
loope
jno
pop
inc
sub
xor
movsl
xor
test
mov
adc
rorb
fcoml
fldenv
mov
sbb
push
xor
movsl
bound
sbb
insl
or
test
sahf
iret
dec
mov
jg
jo
or
and
or
dec
fsubrl
jle
jb
js
and
call
hlt
cltd
fdivl
xor
into
clc
inc
xor
iret
in
add
push
in
aam
mov
mov
movsl
sbb
frstor
dec
pop
int
push
mov
push
push
add
aad
mov
sbb
shl
dec
adc
imul
fidivrs
sbb
pop
aas
loopne
loopne
xchg
in
add
xor
push
in
and
xchg
jl
sbb
stos
mov
jns
mov
incl
jne
cmc
add
pop
and
xchg
and
sub
loop
mov
bound
sbb
popf
add
sub
inc
pop
sub
adc
add
jecxz
inc
push
in
int3
push
adcb
int3
jne
sahf
or
fs
daa
add
xor
loopne
xchg
dec
mov
mov
pop
in
shrl
es
daa
dec
mov
add
das
and
cmp
adc
icebp
inc
mov
nop
in
inc
xlat
xor
xor
add
mov
inc
and
push
pop
dec
insl
cli
ret
xchg
cmp
loopne
add
into
and
mov
sar
push
mov
adc
and
pop
andl
inc
adc
mov
insl
add
shlb
cmp
sbb
mov
push
out
shlb
cltd
adc
xor
xchg
mov
dec
or
adc
mov
in
stc
add
jne
xchg
dec
or
ja
cmp
push
inc
and
dec
lahf
mov
test
xor
loop
mov
mov
push
add
adc
xchg
mov
loopne
jmp
cld
sub
adc
or
add
call
xor
lock
into
shl
xchg
sub
fidivrl
in
in
inc
cmp
call
cwtl
or
xor
pusha
mov
in
or
inc
lcall
orb
and
pop
pop
and
jno
ror
or
enter
call
subl
push
cmp
xor
pop
push
sbb
sub
int
xchg
inc
xlat
mov
clc
sub
outsb
adc
jge
adc
adcl
mov
sarb
js
out
das
mov
pop
add
push
and
cmp
loop
add
movsl
lea
lds
and
stos
sar
lods
lock
rcrb
inc
mov
sbb
add
pop
or
adc
mov
in
in
xchg
sub
cmpsb
lret
rolb
in
mov
lahf
rorl
add
push
xor
or
das
jecxz
test
mov
push
xchg
fwait
inc
mov
ljmp
idiv
add
shll
push
leave
push
xor
add
movsl
es
push
cmp
or
cmp
jno
pop
push
subb
adc
inc
lock
mov
xor
dec
dec
pop
lods
sbb
popa
leave
dec
pop
movsb
mov
adc
sbb
orl
mov
addb
push
push
dec
stc
add
test
push
insl
sbb
mov
jo
lahf
mov
out
dec
cmp
push
cmp
add
mov
pop
push
xchg
gs
js
adc
movnti
xchg
inc
pop
xor
or
sarb
sub
push
shlb
repnz
mov
adc
test
or
loop
fs
dec
push
icebp
sub
cltd
adc
lock
add
xor
enter
mov
pop
aaa
aas
ja
push
pop
add
cs
lret
or
stos
shrl
pop
test
dec
mov
clc
or
add
lods
push
or
andl
sbb
push
fs
lds
pop
imul
lcall
lods
mov
ret
in
pop
les
inc
lcall
andl
pop
push
sbb
movsl
in
imul
mov
scas
aad
lock
mov
mov
leave
push
out
inc
inc
cld
je
and
insb
mov
mov
pusha
cmp
das
pop
mov
sub
cli
outsl
dec
sbb
xor
cmp
or
mov
jle
clc
inc
and
jbe
push
lret
cli
ja
clc
hlt
sub
push
rorb
xor
inc
sbb
push
mov
mov
sbb
jno
sbb
rorl
add
int3
mov
push
enter
nop
pusha
cmpsb
push
jb
inc
dec
push
ds
add
inc
inc
or
push
enter
push
mov
push
lea
xor
leave
mov
rcl
loop
pop
mov
and
and
loopne
mov
lds
fadds
mov
movsb
enter
out
add
xor
fimuls
mov
leave
movsl
sahf
mov
inc
fisttps
lds
mov
dec
stos
xchg
push
dec
adc
movsb
sbb
xchg
dec
inc
mov
sub
inc
push
fs
out
inc
and
or
push
sbb
or
inc
mov
inc
les
adc
scas
out
ficoms
bound
or
xor
push
mov
jl
shlb
rcl
pushf
mov
dec
dec
xchg
inc
nop
pusha
mov
mov
or
fs
cmp
dec
dec
faddl
fsubs
or
jb
push
and
rcrl
popa
dec
cmp
adc
adc
push
sub
and
add
jle
rep
sti
mov
mov
cmp
ret
pop
push
pop
ss
aaa
xor
and
loopne
cwtl
mov
cmp
or
pusha
out
jae
sub
bound
jecxz
or
sbb
add
dec
and
add
loope
mov
or
push
hlt
xor
xor
adc
mov
pop
ret
push
shlb
sbb
add
and
jne
add
cmp
cmpsl
cmp
orb
mov
push
loopne
mov
push
push
fisttpll
and
andps
add
sbbb
jg
push
cmpsb
xor
ret
push
mov
or
or
sub
insb
pusha
sub
pop
mov
push
scas
movb
and
roll
xchg
in
arpl
lea
mov
imul
lcall
fsubrl
cld
sub
pop
sbb
sub
pop
add
sahf
inc
and
jbe
sub
lea
loopne
dec
push
xor
push
mov
jb
xor
sub
ret
sbb
setb
test
add
roll
mov
addr16
sbb
int
outsb
cmp
dec
mov
shlb
or
popa
xor
sub
mov
inc
xor
aaa
inc
lret
cltd
inc
popa
push
ds
sub
inc
mov
in
add
sti
jl
test
cmpb
jg
lcall
sarb
sub
mov
push
ret
pop
mov
push
and
mov
inc
jle
dec
add
jmp
mov
cmp
imul
pop
push
sbb
out
lock
dec
fmuls
es
xor
push
ljmp
lcall
xor
inc
add
jns
fstps
inc
sub
xor
mov
adc
cmp
inc
dec
inc
pusha
push
mov
aam
lock
push
and
mov
add
jecxz
push
push
movl
movl
pop
dec
lds
adc
mov
inc
mov
sub
dec
xor
add
or
or
sbb
adcl
adc
push
xor
mov
push
mov
andb
xor
mov
add
movl
jb
and
xor
cs
mov
push
add
imul
roll
insl
inc
adc
cmp
adc
ficoml
sbb
add
jb
data16
syscall
push
ret
mov
pop
xchg
shl
gs
enter
add
pop
inc
mov
xor
or
lea
cltd
sub
and
mov
dec
loop
or
cmp
js
test
xor
mov
xchg
mov
cs
and
cmp
idivb
dec
sub
adc
dec
adc
or
shrl
cmp
xor
test
xor
jge
je
mov
adc
pop
cmp
and
test
or
pop
push
mov
sti
rep
rcrl
daa
push
inc
xor
or
adc
fcmovne
sbb
jmp
sub
jae
cmp
icebp
fiadds
shlb
add
inc
sbb
add
mov
mov
push
jmp
jne
push
push
inc
push
push
jecxz
dec
mov
cmpsb
xlat
push
and
push
mov
push
pusha
mov
dec
adc
jle
push
inc
xchg
sub
incb
arpl
std
adc
adc
and
adc
aas
xor
out
mov
mov
shrl
andb
in
fsubl
jle
or
and
cs
pop
mov
sub
jo
push
and
inc
or
repnz
ds
fs
daa
movsb
inc
scas
push
iret
test
or
das
cwtl
mov
jae
out
jnp
pop
adc
sbb
push
push
jmp
sbb
and
add
and
xchg
push
pusha
adc
push
xor
cmp
lock
or
pop
sub
mov
push
sbb
dec
sarb
push
push
inc
adc
orb
loop
inc
push
mov
aas
jl
cmp
sbb
push
push
push
dec
sbb
fildll
push
cmp
out
lret
mov
adc
adc
add
xchg
cmc
ret
pop
popl
inc
cmp
dec
sbb
sbb
imul
sarb
dec
jne
outsb
loopne
mov
jo
gs
bound
pop
wrmsr
push
inc
sbb
pop
les
or
mov
and
dec
xor
js
push
ss
push
call
jno
gs
add
adc
jl
cld
mov
dec
sub
jno
sub
jb
mov
inc
inc
clc
adc
mov
adc
add
cmp
or
call
jb
add
and
imul
add
repnz
jne
and
add
xor
test
adc
xlat
loope
stos
xor
or
or
xchg
cltd
push
mov
shlb
cmpsl
push
or
cmp
in
sahf
add
adc
inc
cmp
addb
dec
shlb
add
into
add
je
sbb
orl
inc
cld
movsl
sub
sar
fsubrp
cmp
jb
ret
cmp
or
movsb
jmp
pusha
or
dec
mov
xor
rcrl
sub
jecxz
or
jbe
insl
insb
adc
xchg
jb
ret
cli
imul
jmp
jnp
lock
arpl
inc
or
ret
sahf
pop
aaa
or
ja
test
mov
cli
xor
pop
mov
mov
shll
sahf
shrl
js
cmp
ficompl
int3
add
ret
call
xor
and
shr
loop
adc
mov
stos
adc
fistps
or
ja
mov
notb
outsb
aam
lds
std
imul
or
rcrl
and
inc
test
xor
mov
mov
or
adc
push
sbb
sbb
cmp
inc
clc
outsb
test
mov
add
shl
sbb
push
pop
xchg
mov
sub
mov
aaa
enter
rclb
xor
adc
mov
inc
jmp
dec
imull
mov
orl
jne
mov
dec
test
fsubrs
incb
mov
adc
pop
cmp
inc
mov
add
jb
jae
rorb
push
ja
push
push
jl
lea
hlt
jae
pop
jae
or
add
pop
out
mov
jo
ret
and
xchg
and
js
mov
push
mov
daa
inc
mov
je
push
inc
push
push
clc
sub
pop
and
call
jecxz
add
inc
push
sbb
imul
jecxz
dec
jnp
mov
movsl
adc
inc
pop
xor
push
andl
mov
inc
ss
or
add
and
inc
es
nop
sbbb
lock
sbb
insb
and
rolb
pusha
adc
outsb
xchg
arpl
and
cmp
mov
push
add
mov
sbb
enter
or
fsubl
xchg
jae
xor
inc
jo
push
or
insl
cmp
lahf
jae
arpl
or
sbb
cmp
mov
arpl
jmp
arpl
fs
test
loope
pop
jae
and
clc
jae
inc
xorb
test
mov
or
frstor
push
test
mov
xorb
add
mov
addr16
and
or
mov
arpl
push
and
or
pop
pop
sub
add
inc
and
sbb
mov
mov
mov
mov
dec
ljmp
addr16
push
and
add
inc
call
pop
enter
imul
nop
add
and
enter
pop
es
hlt
sub
enter
cwtl
sub
pop
enter
insb
xchg
add
sbb
jae,pn
leave
sarb
sub
lods
push
fdivrl
xor
push
scas
mov
cmp
inc
push
sbb
and
test
xor
shrb
pop
jne
cmp
pop
mov
mov
mov
dec
fisttpl
enter
fidivrl
or
adc
mov
or
pop
fstp
testl
loope
arpl
adc
sbb
call
daa
test
inc
fdivl
nopl
test
adc
insl
ret
inc
sbb
jne
aaa
mov
stos
xor
cs
test
rorb
jge
add
ja
or
or
stos
fstp
push
sahf
inc
jae
add
or
out
ss
sti
adcb
lds
xchg
imul
mov
imul
cmpsl
cltd
movsb
lahf
enter
push
xor
inc
out
jns
loopne
in
aam
arpl
push
mov
mov
or
mov
or
cs
add
ret
mov
mov
mov
dec
push
push
int3
push
std
je
jle
hlt
push
or
or
xchg
sti
xor
adc
push
add
rolb
mov
pusha
jno
aam
adc
in
push
mov
pop
fistl
enter
xchg
mov
imul
add
in
push
dec
pop
lock
dec
add
pop
sbb
imul
andl
or
mov
jg
in
inc
les
adc
and
testl
daa
push
stc
ret
js
inc
lock
popa
addl
sahf
mov
jecxz
call
push
mov
cmpsl
mov
roll
imul
fsubl
xor
push
inc
icebp
cmp
outsb
std
cmp
or
je
cmp
push
add
xchg
shlb
adc
addb
mov
or
jbe
mov
jmp
cmp
push
xor
push
fisubs
fs
sbb
movsb
inc
jne
lret
jb
push
cs
xor
out
dec
xor
jb
adc
xor
les
mov
cmp
and
xchg
jns
inc
and
popa
aam
mov
stos
pop
and
sub
xchg
es
arpl
mov
cmp
inc
xchg
test
sub
jne
sbb
cmp
add
cmp
add
jns
xchg
push
add
out
jo
pop
add
ret
dec
sub
xchg
pop
rorb
mov
mov
add
dec
outsl
sbb
push
clc
lock
dec
or
jmp
rorl
xchg
push
and
int
fistl
add
fwait
inc
pop
out
test
push
xor
pop
fmull
pop
pusha
jne
js
lret
sub
mov
push
xor
mov
cltd
stos
mov
dec
xchg
add
mov
ja
xchg
roll
mov
adc
or
dec
push
stos
call
jp
rcll
aam
pinsrw
jae
shlb
xor
cmp
gs
sbb
jo
pop
cli
jmp
xchg
pop
shll
dec
push
xchg
sub
or
adc
pop
cltd
push
sbb
stos
sarb
adc
fadds
xchg
xchg
cmpsl
adc
les
in
loopne
xlat
xlat
mov
mov
cmp
insb
sub
in
or
sub
or
cwtl
or
les
mov
mov
clc
jl
mov
adc
in
popa
fidivrl
pop
lock
jmp
adc
stos
cmp
or
add
add
xorb
ja
lea
ja
sbb
sbb
add
scas
lods
push
push
test
cs
ja
push
inc
sub
mov
fldl
dec
add
mov
add
sarb
or
mov
clc
pusha
mov
je
out
subb
add
fdivrs
xchg
add
add
aas
and
jne
xchg
push
nop
mov
js
rorb
xor
fstpt
dec
sbb
mov
pop
xor
push
gs
jo
ret
loop
faddl
push
push
hlt
add
aas
push
addr16
push
sbb
call
push
jle
cwtl
bound
insl
iret
xchg
xor
jae
clc
in
dec
lds
lock
mov
add
fwait
je
xchg
sub
loope
jmp
loope
gs
test
mov
mov
sbb
and
xchg
mov
shll
rolb
ret
pusha
test
mov
pop
pushl
sahf
push
mov
or
lock
lock
xchg
push
nop
movsb
push
popa
inc
pop
in
or
xchg
insl
ss
xor
mov
pop
in
imul
imul
in
int3
push
pop
dec
or
push
sbbl
mov
movsl
fsubs
rcrb
xor
add
cmpsb
xchg
insb
mov
lea
lods
push
xchg
dec
stos
ret
mov
sbb
jb
sbb
or
movsb
mov
lcall
aas
dec
push
dec
add
xorb
xor
pusha
and
int3
and
or
xor
movsl
mov
bnd
mov
icebp
fadds
imul
addb
cs
fiaddl
loope
mov
add
fdiv
push
pusha
sub
sbb
push
dec
enter
push
lock
cmc
xor
push
sbb
add
push
cmpsb
aam
sub
adc
jg
jbe
push
icebp
pop
dec
pusha
jne
loopne
xchg
sub
pushf
mov
xchg
js
mov
push
or
add
xor
lahf
rolb
xor
repnz
mov
push
adc
dec
scas
pop
outsl
popa
add
sbb
outsl
push
test
fwait
outsb
pusha
loop
xchg
xor
inc
jne
pop
pop
cmp
dec
pop
xor
das
and
xchg
or
and
inc
dec
jmp
jo
or
fs
push
sub
sbb
mov
cwtl
xchg
xchg
or
popa
adc
push
pop
lahf
cmp
adc
mov
sbb
or
push
cmpsb
pop
jo
push
mov
cmp
sbb
and
inc
rcrb
sub
push
push
lahf
push
add
mov
xchg
mov
inc
inc
push
test
aas
pushf
xchg
jnp
int
or
inc
inc
mov
adc
mov
mov
adc
lock
push
adc
jae
pop
dec
lret
ret
add
push
dec
rorl
std
xchg
mov
cltd
jge
adc
or
xchg
addb
cmpb
lcall
sbb
add
mov
sbb
add
xchg
jecxz
pop
sub
cmc
push
inc
xchg
push
popa
or
pop
repnz
xchg
or
mov
push
mov
push
sbb
or
add
mov
cmpsb
enter
inc
stos
lahf
in
ja
pushf
xor
dec
mov
add
stos
inc
int
test
and
push
add
and
push
adc
hlt
jecxz
cli
cmp
stc
pop
call
dec
mov
in
push
push
mov
push
mov
jg
pop
ss
inc
bound
call
test
mov
iret
add
nop
icebp
gs
and
sub
in
rorb
and
xchg
shl
aas
incb
pop
xor
xchg
mov
sbb
sbb
aad
push
roll
fadds
loope
mov
jbe
imul
mov
and
lea
mov
ljmp
test
pop
or
call
pop
mov
pop
jle
les
ds
sub
jecxz
cmp
push
pop
les
lret
test
clc
dec
jne
dec
xorl
lret
orps
or
or
fwait
inc
in
insb
enter
sub
hlt
xchg
fimull
js
dec
cmp
mov
pop
lods
or
add
std
popa
inc
dec
enter
or
enter
rolb
jo
daa
push
lods
or
pop
inc
call
jnp
or
xchg
pusha
cmc
mov
push
mov
jle
fwait
stc
lock
and
clc
adc
add
in
je
sub
and
dec
pop
and
test
sbb
test
jnp
cmp
test
mov
nop
or
in
xchg
cwtl
pushf
aam
inc
rcll
or
mov
pusha
loope
lods
cmc
push
inc
and
loopne
sbb
jmp
dec
js
scas
fsubrl
add
and
nop
push
cmpsl
lea
cmp
popf
mov
arpl
pop
daa
into
xchg
hlt
enter
rorb
sub
mov
popa
or
sti
movsl
jge
andb
jmp
cmp
cmp
sbb
in
or
sub
mov
jo
loope
xlat
lea
sbb
test
dec
adc
call
std
pop
dec
cld
jge
lea
pop
roll
rcll
scas
andl
test
mov
outsl
pop
mov
mov
cmp
adc
lods
out
rol
mov
test
push
or
mov
mov
mov
jge
repnz
lods
jno
push
add
jbe
in
or
lods
xor
add
sbb
mov
push
cmpsl
mov
arpl
jge
jne
push
out
out
or
adc
repnz
mov
xchg
fldt
jno
inc
sbb
popa
mov
and
loop
push
inc
loop
out
add
mov
mov
sub
adcl
cmp
xorl
repz
or
push
test
loope
cmpsl
push
push
aas
shrl
xor
loope
cmp
pop
add
jno
mov
rorl
xlat
nop
push
std
cwtl
mov
ljmp
mov
popf
push
je
rol
cmp
nop
aaa
xchg
int
or
pop
push
movsl
push
icebp
lock
add
fldcw
jg
js
iret
add
hlt
and
les
in
andl
clc
fdivrp
push
sbb
xchg
jle
loop
scas
inc
sbb
pushf
sub
int3
fimuls
mov
lock
mov
es
add
mov
push
xlat
sti
push
mull
scas
popf
fdivl
or
lea
loopne
jo
aam
push
mov
mov
movzbl
add
addr16
lods
mov
aad
and
daa
adc
dec
cmpb
in
test
incb
push
push
sub
sub
push
jl
sbb
mov
pop
and
scas
pop
jb
mov
pop
or
mov
mov
jnp
insb
push
in
rcrb
add
xchg
sbbb
dec
add
mov
fildl
jnp
push
sub
inc
xor
mov
add
push
and
and
or
pop
push
mov
mov
dec
mov
push
inc
and
into
inc
in
mov
mov
dec
lock
aad
mov
inc
fcmovb
jns
or
or
cmp
xor
cmp
mov
mov
outsb
jo
lea
clc
ss
push
ljmp
and
and
add
push
sti
and
js
or
sbbb
xchg
push
add
mov
push
cmp
or
dec
add
push
push
fadd
fstpl
pop
add
or
add
lea
add
pop
sbb
in
or
movsl
pop
or
loope
fsin
test
decb
dec
cmp
or
pop
pop
adc
fcmove
aaa
or
jmp
outsb
lock
es
leave
repz
loopne
mov
stos
dec
popa
lock
cmpsb
jmp
es
inc
inc
mov
fidivrs
inc
in
mov
mov
icebp
cmp
inc
hlt
loop
xchg
push
cmpsb
enter
add
dec
insb
mov
push
jns
test
jle
xchg
sarl
outsb
std
mov
stc
sub
pop
rol
adc
je
data16
out
rcl
mov
xchg
add
dec
adc
cmp
jg
outsb
adc
mov
fildl
cmp
or
outsb
add
mov
jge
push
jle
xchg
mov
push
or
jp
psubusb
bound
out
adc
call
inc
fstps
push
lock
bnd
or
cmpsl
xor
je
push
cmpsb
dec
cmp
mov
shlb
jp
sbb
and
pop
je
sub
data16
inc
inc
jmp
sahf
push
fisubs
cli
incb
call
and
jne
add
insb
loope
push
xor
or
add
push
out
push
lds
or
adc
adc
lret
push
xor
jmp
pop
cmpsb
mov
or
enter
cmpsb
xchg
push
sub
fisubrl
fadds
testl
sbb
or
arpl
call
push
pop
in
cmp
ret
std
lock
sahf
dec
sbb
push
pop
push
out
dec
roll
adc
push
mov
add
mov
cwtl
adc
or
lods
fadds
push
push
aas
add
adc
test
aam
or
js
sub
pop
mov
sbb
incl
cmp
push
pop
push
sub
add
shrb
xor
out
fcoml
in
push
add
mov
out
push
aaa
cli
or
pop
push
fcomp
sbb
clc
inc
sub
je
insb
or
mov
pop
sbb
les
fwait
sti
rcl
andl
test
jae
and
or
enter
pop
rorl
or
add
add
and
and
xor
push
dec
sahf
and
into
sahf
shlb
xorl
das
jl
adcb
fidivs
push
imul
adc
inc
xchg
xlat
add
cwtl
sub
daa
inc
adc
test
divb
inc
inc
jmp
fcomi
lods
pop
push
and
pop
outsl
push
add
ljmp
nop
sbb
adc
and
fldcw
add
mov
ds
iret
cmp
shlb
mov
and
jns
and
shrb
clc
insb
mov
js
into
fsub
pop
or
sub
or
in
lock
cmp
enter
fwait
mov
dec
add
and
mov
shlb
addl
gs
mov
add
movsb
mov
xchg
and
mov
test
pop
test
sub
test
aas
rcll
xchg
imull
leave
pop
mov
dec
vxorps
sub
mov
pushf
and
push
lcall
jno
subl
xor
pop
roll
jne
popf
dec
pop
out
jno
inc
and
je
pop
ss
cltd
test
adc
mov
xchg
inc
rol
dec
sti
xchg
jo
sub
xor
mov
sub
xor
std
sub
add
cmp
inc
cmp
push
mov
shll
fimuls
push
xor
jno
or
add
push
es
int
mov
push
xlat
and
addr16
pop
imul
push
pop
fcmovb
fdivrs
mov
xor
cmp
mov
push
outsl
mov
call
rorb
cmp
add
cmp
testl
cmp
push
dec
xor
insl
lea
in
add
add
fmuls
aaa
outsl
push
adc
add
test
push
scas
sbb
jb
mov
insl
nop
add
lret
ret
push
test
xor
mov
mov
shr
cmp
jbe
add
jmp
add
stos
sarb
fistl
and
dec
loopne
xor
inc
jbe
jl
sbb
and
mov
or
outsl
or
dec
ret
icebp
push
arpl
add
jp
nop
cmpb
or
add
or
loopne
sub
xor
xchg
test
and
ss
gs
lret
imul
out
add
aaa
sbb
rclb
jno
stos
jl
mov
push
and
push
pop
push
arpl
mov
insb
add
inc
sahf
movsl
cli
es
sbb
cmp
cltd
and
bound
dec
pushf
jne
xor
jo
mov
or
mov
aaa
adc
push
jb
push
push
rcr
pop
xor
fsts
push
les
pushf
cwtl
jg
dec
or
outsb
test
xchg
and
mov
mov
imul
je
in
jmp
mov
sbb
add
add
in
or
pop
fidivl
and
mov
insl
and
stos
divb
mov
lock
je
leave
adc
add
and
jecxz
sub
pop
xor
fmull
jp
nop
and
add
loope
push
cld
jns
mov
or
int
adc
rcrb
xchg
sbbl
xchg
adc
add
out
adcb
jg
add
lahf
push
clc
ror
call
jp
repnz
jae
push
pop
sub
sub
adc
mov
stc
lret
dec
loopne
jnp
ret
push
push
add
fldl
jb
cmp
push
loope
push
jmp
insl
add
push
mov
sub
add
or
inc
pusha
and
loope
and
pushf
sub
je
pop
xrelease
popa
fsubrl
imul
outsb
push
and
mov
test
dec
jo
xor
xor
inc
cs
popa
and
fs
or
loope
mov
in
clc
mov
push
movups
lahf
pop
outsl
fadds
hlt
cmp
aam
push
mov
sbb
adc
je
adc
cmpb
push
daa
sub
lods
repz
push
pop
out
aam
adc
test
adc
push
push
testb
out
inc
and
xchg
push
mov
or
daa
mov
xorl
stos
add
les
movsl
adc
adc
push
les
das
sbb
lret
test
xor
and
pop
push
inc
and
adc
fdivrs
xchg
lcall
sbbl
sbb
test
negl
add
jno
sbb
fsubrs
movsb
adc
xor
fdivrl
nop
andb
repz
addb
lcall
inc
sub
pop
dec
push
push
and
xor
or
push
iret
es
push
pop
or
or
adc
xor
cmp
out
xor
add
mov
fs
int
stos
gs
lds
mov
lods
xor
push
pop
jecxz
mov
dec
jnp
int3
push
lock
lock
mov
mov
cli
int3
mov
or
or
inc
mov
push
out
ret
dec
test
jecxz
imul
popl
add
mov
push
xchg
add
or
adc
mov
and
test
movsl
test
mov
push
push
dec
nop
mov
fldt
or
lock
or
mov
stc
mov
push
jns
int3
cwtl
shlb
rolb
cmp
cmp
push
lea
inc
pop
andb
add
addl
cmp
addb
movsb
xchg
cmpsl
fsts
or
jge
out
adc
jbe
or
cmp
dec
xchg
sbb
add
movsb
inc
shlb
xor
mov
mov
jne
or
cltd
mov
out
or
xchg
add
add
es
rcrb
js
rclb
push
xor
sub
adcb
int3
cli
dec
mov
add
add
fs
xor
push
cltd
call
add
inc
fwait
xor
add
js
imul
push
test
mov
adc
cmpsl
add
mov
fidivrs
jge
je
sbb
xor
mov
pop
clc
and
mov
hlt
or
or
mov
mov
mov
push
fst
and
out
sub
test
xor
rorl
ror
repnz
add
fsubr
or
bound
shrb
inc
sbb
add
lcall
push
pushf
or
lods
push
pop
and
sub
sub
inc
cmp
and
pop
int
push
cmp
test
movsb
setbe
lcall
push
push
mov
rolb
test
pop
rclb
out
test
test
push
push
push
jge
iret
dec
and
jle
test
and
ja
jne
fwait
cmp
add
test
mov
add
in
loopne
dec
adc
insb
adc
pop
add
lods
shlb
jl
test
js
and
mov
jae
mov
notb
lock
imul
addl
mov
dec
pop
mov
adc
push
xchg
pop
and
test
inc
mov
lahf
xor
pushf
jne
jmp
inc
adc
testb
or
daa
xor
test
jl
adc
jns
adc
sbb
and
mov
push
add
mov
jne
inc
push
mov
insb
inc
inc
cmc
loop
push
jne
test
push
arpl
xor
loope
mov
mov
xor
add
push
pusha
testl
xor
dec
les
add
imul
push
add
inc
and
or
repz
sub
ljmp
add
shll
mov
or
add
push
aam
repz
call
ret
dec
sahf
enter
inc
cmp
aaa
test
inc
mov
aas
or
movsl
push
push
movsl
pop
sar
mov
push
clc
psubusb
mov
sbb
fnstsw
gs
fldl
mov
clc
pop
fsubr
pop
faddp
andl
sbb
adc
ja
lret
add
cs
jecxz
pusha
cltd
adc
pcmpgtw
loopne
lods
push
mov
xchg
dec
jo
mov
jle
push
ret
fists
adc
inc
push
sbbb
mov
imul
mov
arpl
sub
rcrl
sbb
jp
sbb
test
iret
sub
aad
add
in
xor
push
or
lea
cmpl
loop
lret
sbb
or
sbb
lret
cmovl
les
inc
dec
pop
xchg
jecxz
in
mov
sbb
add
dec
add
in
mov
jae
push
sahf
dec
sbb
imul
jp
jne
pop
in
adc
cmpsb
mov
insb
in
mov
sarl
dec
add
mov
into
enter
mov
fwait
xor
xor
dec
hlt
jge
adc
mov
dec
inc
jnp
pop
push
jecxz
sub
inc
adc
adc
ud0
xchg
add
or
sbb
jnp
inc
shrl
lods
push
mov
xchg
push
shl
push
cwtl
xlat
adc
mov
test
cmp
js
add
cmp
sbb
mov
adc
out
sbb
pop
pop
fwait
xchg
xchg
mov
std
dec
adc
shrl
into
inc
add
jb
add
ljmp
add
dec
jns
mov
mov
adc
dec
jp
pop
add
add
and
mov
mov
fs
stos
mov
jmp
divl
fs
sti
and
outsb
ja
mov
dec
inc
sbb
adc
dec
and
pop
ret
dec
pop
push
loopne
cmp
outsl
dec
or
jne
push
test
mov
xor
jno
repz
addr16
pop
mov
xor
jle
cld
xchg
adc
and
rorb
push
xchg
add
adc
sub
and
jno
dec
cmp
jno
lret
das
cmc
movsb
outsb
and
push
adc
adc
pop
mov
xchg
daa
test
subl
mov
movntq
out
xorb
pop
cwtl
xor
cmp
push
inc
dec
sbb
movsl
fcoms
lock
sbb
mov
sub
xor
ret
jne
lods
mov
ret
lock
insb
adc
add
mov
shlb
mov
lret
pusha
loop
mov
mov
xchg
sbb
cmp
sub
test
xor
jle
mov
jbe
outsb
cwtl
push
and
adcb
push
sub
js
mov
and
fsubl
sti
adc
pop
dec
add
jmp
pop
mov
sub
or
jae
sahf
xor
push
imul
rorl
push
push
push
hlt
push
pop
push
mov
vpextrb
in
push
scas
mov
cmp
hlt
leave
hlt
sbb
idivl
loop
xchg
cmpsl
lret
lock
or
inc
lock
and
jns
ffree
mov
push
bound
fwait
and
rolb
gs
les
stos
or
out
or
mov
xchg
dec
dec
xchg
jno
lea
push
pop
xor
les
adc
pop
mov
mov
xchg
jl
push
pop
loope
add
jecxz
insl
pusha
daa
or
sub
leave
sbbb
or
clc
subl
imul
in
lret
das
xor
pop
adc
sub
pushf
jmp
notl
mov
jb
sbb
add
add
push
repz
jnp
mov
mov
or
mov
fst
scas
rcll
add
pushf
rolb
or
movlps
xchg
arpl
xor
fs
stos
leave
out
mov
push
stos
sbb
faddl
mov
lcall
jno
sbbb
scas
popa
mov
cld
adc
inc
or
loope
call
sub
inc
pop
fsts
dec
movsl
sbb
add
pop
arpl
jg
mov
inc
into
aad
addr16
push
ljmp
jne
xchg
mov
or
mov
test
jl
js
inc
cmp
pusha
lret
mov
addr16
mov
push
insl
loopne
test
mov
test
xchg
mov
or
shrb
movsl
idivl
pop
loop
movb
jno
sbb
sbb
xchg
adc
mov
mov
mov
fbstp
xor
sub
rcrb
leave
xor
sub
clc
mov
and
dec
cmp
and
ss
mov
popa
test
push
add
es
movsb
adc
push
mov
mov
das
popa
add
jp
ret
jl
sub
sub
scas
inc
xchg
inc
loopne
test
xchg
lods
jo
fstpt
pop
je
es
add
cmp
popf
or
xor
cmp
pop
jne
jo
ret
cmp
add
mov
movsb
nop
in
test
or
push
push
movsl
xchg
cmp
test
dec
ljmp
cmpb
pusha
insl
gs
imul
int3
push
mov
cmp
push
in
cmp
orb
pop
push
shll
xchg
aas
xor
addb
daa
je
into
or
xor
fmuls
ss
inc
pop
pop
fldenv
add
add
push
cmp
sbb
push
cmpxchg
cmp
cmp
sub
push
xor
stc
inc
mov
push
push
add
or
mov
mov
sarb
movsb
inc
add
cmp
mov
test
loop
or
and
mov
clc
xchg
aam
in
inc
push
mov
dec
jmp
into
pop
aam
mov
cmp
inc
push
xor
shrb
cld
or
xchg
or
mov
add
test
adc
clc
sbb
push
sahf
in
sbb
faddl
fmuls
xchg
xchg
call
sbb
push
faddl
insb
push
sbb
sbb
pop
icebp
jne
lcall
sub
pop
mov
jbe
enter
or
sub
popa
add
rep
jns
or
add
std
add
push
sbb
test
push
lds
sbb
push
fcom
pop
std
cmp
dec
clc
orb
loopne
clc
jl
sub
push
add
sbb
repz
loopne
adc
dec
shlb
dec
aam
push
in
leave
loopne
inc
dec
or
and
fwait
sbb
lret
xor
repz
push
nop
xchg
les
add
push
testl
sti
sbb
dec
xchg
or
lcall
xchg
xchg
add
dec
aaa
sarb
push
mov
inc
pop
or
cmp
xor
push
inc
and
insb
insb
jb
inc
xor
mov
data16
pop
push
sbb
in
imul
or
stos
push
stc
cmc
bound
xchg
add
imul
jmp
sub
cmp
mov
icebp
lret
jo
movsl
or
les
cmp
mov
lock
setg
push
or
adc
add
dec
inc
push
add
push
hlt
jge
inc
pop
pop
lock
or
das
movsb
bound
xchg
adc
adc
shll
xchg
loopne
call
add
inc
in
sub
shl
mov
mov
add
sub
mov
inc
pop
fsubr
sarb
adc
jmp
xchg
and
mov
popa
push
ffree
add
pop
inc
cmp
sbb
xor
pop
and
mov
xor
adc
lods
push
ss
aad
adcl
push
cmpsb
divl
cmp
jmp
call
pop
ret
ficompl
mov
aad
into
sub
sbb
sbb
cmp
sbb
leave
cli
pop
sub
lea
adc
icebp
and
mov
push
adc
ja
mov
push
jns
test
ljmp
pop
ret
or
sarb
dec
je
sub
fmuls
shll
lret
xorb
or
mov
pop
shll
add
mov
jmp
cmp
push
inc
and
test
sub
in
shrb
mov
sti
and
sbb
adc
cwtl
jnp
add
push
xlat
sub
dec
push
sbb
rcll
and
mov
data16
in
xchg
sbbl
faddl
test
sub
insl
rcr
push
inc
jmp
adc
mov
sub
cmp
sbb
addl
mov
mov
cli
int3
push
jnp
aam
push
mov
dec
orl
add
in
fbld
data16
out
add
and
clc
icebp
push
dec
xor
lods
aas
je
lods
dec
lea
call
cmc
mov
test
and
mov
add
adc
xlat
dec
cmp
add
jnp
jl
push
inc
inc
dec
push
push
pop
sub
leave
cmp
or
dec
sub
cmp
xchg
icebp
sbb
inc
or
or
xchg
addb
fistl
clc
lea
loopne
push
fidivrs
mov
xchg
sub
push
inc
loopne
and
inc
rol
inc
shlb
mov
jge
ljmp
enter
jno
aas
orb
sbb
adc
sbb
cmp
or
sbbl
inc
push
or
mov
pop
xchg
push
push
jg
in
out
add
cli
std
sub
test
or
cmp
in
cmp
addr16
jo
sbb
leave
repz
xchg
pop
and
sub
jb
add
or
xchg
and
pop
mov
enter
shrl
cmp
pop
sbb
mov
push
sub
addr16
leave
cs
pop
xchg
pop
push
bound
pop
rorl
add
or
inc
test
inc
clc
inc
inc
ss
and
sub
jle
and
aas
inc
mov
incl
in
incl
or
inc
pop
adc
ljmp
adcb
xchg
enter
sbb
pop
cmp
add
in
push
push
inc
std
dec
cmp
jmp
add
in
push
push
inc
mov
cld
inc
push
pop
cmp
test
push
loop
adc
and
xchg
push
test
sbb
add
jb
sbb
dec
mov
lret
sbb
adc
dec
sub
movd
cmpsl
add
je
sub
jl
je
orl
mov
jo
or
incl
cmp
jl
xor
lret
into
pusha
repnz
adc
inc
dec
xchg
mov
push
cmp
pop
ja
sub
add
xor
loopne
push
fiadds
insb
into
jl
push
and
out
shrl
pop
enterw
mov
cmp
jnp
sub
push
pop
je
push
vmread
cmp
adcl
fldenv
and
sti
or
cltd
jo
mov
je
or
jns
pop
sbb
or
push
jmp
push
sbb
jno
mov
dec
sub
popa
jmp
int
stos
xor
cmp
push
jne
jl
cmp
mov
insb
push
dec
push
jge
lret
xor
push
mov
insb
lea
shrl
jne
loope
sub
sbb
pop
sub
mov
pop
stos
xchg
mov
cmp
es
mov
adcb
inc
dec
movb
jl
inc
or
stc
sti
and
pop
in
pop
push
pop
test
nop
mov
mov
xor
js
add
inc
fldt
ss
dec
push
daa
adc
mov
movsl
daa
stos
xchg
dec
cld
ds
rcrb
lock
push
movsb
add
fs
stos
or
test
push
clc
mov
and
push
add
movsl
jmp
jbe
aaa
push
mov
mov
dec
xchg
and
push
mov
dec
push
sbb
in
xchg
or
dec
and
sarb
pop
popf
sub
push
dec
add
out
add
and
les
scas
xor
mov
mov
jae
push
xchg
push
jecxz
out
jecxz
mov
mov
outsb
fstpl
stos
push
jmp
cmpl
je
cmp
mov
mov
xor
insl
jno
push
popa
out
xlat
push
movl
pop
cmpsb
lcall
rolb
sbb
data16
xchg
andb
xchg
dec
add
setnp
inc
xor
stos
lods
imul
cmp
jnp
js
sbb
adc
jne
insl
loopne
add
mov
jmp
fdivrs
shr
mov
jno
movsl
out
and
std
inc
mov
pop
push
push
mov
mov
in
popa
adc
repz
mov
push
inc
or
jge
aaa
lods
test
or
xor
pusha
sbb
push
push
arpl
pop
fadds
dec
fdiv
je
and
add
cmp
or
push
sbb
push
jp
mov
ss
adc
adc
leave
jne
push
jmp
cmp
nop
mov
xchg
movsl
mov
and
adc
andl
push
and
bound
inc
inc
je
cltd
in
cmp
inc
addb
pop
jb
xor
adc
and
jl
pop
push
adc
pop
pop
add
mov
sbb
xchg
xor
test
repnz
enter
outsl
pop
inc
stos
mov
xchg
mov
adc
loop
mov
push
les
mov
mov
mov
pop
pushl
sub
pusha
cmp
cmp
sbb
imul
jae
dec
test
dec
sahf
mov
mov
iret
add
jecxz
dec
int
scas
add
jne
mov
lea
out
nop
pop
xchg
inc
dec
aad
inc
pusha
rorb
add
dec
push
mov
jp
push
or
or
andb
sub
lret
cmpsl
das
fwait
adc
and
jns
push
stos
int3
xor
scas
popw
movsb
mov
mov
adcl
sbb
notl
dec
pop
inc
lods
stos
xor
out
ss
add
ljmp
dec
add
movsb
and
add
jp
lds
hlt
and
push
movsb
xor
aas
mov
fnstcw
popf
sbb
or
xor
ja
into
mov
push
gs
inc
jge
ret
push
inc
fucom
mov
push
mov
inc
mov
adc
adc
inc
sub
adcb
add
dec
inc
mov
rorb
push
jle
sarl
cltd
out
xor
mov
rorl
cmp
jb
and
mov
loopne
pop
in
xchg
inc
dec
das
adc
adc
ret
addb
loope
sbb
pop
and
push
fsubrs
addr16
jmp
std
js
outsb
jns
ja
mov
sub
and
and
xchg
daa
add
dec
cmpsb
mov
adc
std
lods
daa
lock
or
test
cmpsb
and
lods
dec
es
dec
jg
orb
sub
imul
sub
sti
iret
or
mov
jge
or
cmp
add
adc
or
clc
adc
scas
sbb
popa
adc
sub
dec
and
pop
adc
xor
lds
shll
sbb
jns
add
jbe
and
adc
mov
pop
and
or
rolb
adc
outsb
loope
mov
pop
add
mov
fcompl
je
imul
add
inc
idivl
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
out
mov
mov
jmp
push
in
lret
push
lods
jmp
stos
mov
jno
pop
dec
xchg
inc
js
cmp
jl
push
push
push
sbb
sub
test
bound
add
adc
iret
in
int
and
push
hlt
stos
cli
enter
pop
jmp
outsl
test
xchg
test
push
sub
pop
push
in
jmp
jbe
cmp
icebp
add
iret
loop
imul
adc
dec
shl
sbb
sub
add
insl
adcl
or
add
fisttpl
enter
lahf
push
repnz
call
scas
rolb
mov
and
cmp
movsl
xchg
lahf
outsb
mov
shr
push
mov
pop
int3
push
cltd
movsb
xor
fcomp
in
and
sbb
or
sub
and
add
addb
xor
movsl
dec
lods
dec
cld
cld
push
lods
adc
add
sar
rorl
outsb
adc
pop
pop
sahf
lcall
xor
and
or
add
push
adc
xlat
add
cmp
nop
fcomp
add
jle
mov
repnz
out
sub
lock
enter
loope
movb
or
jmp
sub
push
push
shr
push
nop
add
sub
sub
add
push
push
add
push
mov
and
or
lcall
hlt
adc
xchg
inc
and
cmp
ret
push
and
test
pop
add
jo
cmp
lret
movb
jb
or
cltd
cmp
adc
test
dec
repz
sbb
insb
sbb
add
xor
test
add
mov
int3
add
fscale
daa
sbb
jp
iret
adc
leave
push
sbb
inc
jp
or
push
dec
add
mov
in
sti
lcall
or
inc
cmpsb
ret
repz
and
and
rcr
jne
mov
std
adc
and
jbe
sbbl
orl
add
ss
mov
mov
lahf
mov
aad
mov
cmp
stos
mov
out
jecxz
inc
dec
jecxz
lea
inc
scas
in
jmp
push
out
out
add
leave
xchg
cmp
jb
and
jg
push
xor
push
imul
xor
pop
push
xor
ds
or
fsubs
mov
push
sbb
js
jmp
adc
inc
in
or
add
push
or
push
gs
lret
pop
hlt
aas
pusha
push
push
xor
or
add
loopne
and
jb
adc
add
call
sub
or
push
enter
or
and
pusha
rorb
dec
or
lcall
add
mov
dec
push
cli
ss
xorl
adc
sbb
js
std
daa
in
or
movsl
push
sub
add
jb
pop
hlt
jne
push
push
pop
jb
add
femms
or
or
ret
xchg
and
or
dec
std
xor
mov
add
pop
xor
adc
jmp
int3
ds
or
or
sub
and
das
hlt
push
cld
sbb
sub
pop
outsl
mov
cmp
push
ret
adc
inc
subl
nop
sub
adc
lock
js
and
fiaddl
inc
lock
mull
push
fwait
addb
pusha
lahf
inc
loopne
mov
add
xor
mov
and
loopne
addps
sbb
ja
mov
pop
dec
jns
imul
add
orb
xchg
pop
addl
mov
sbb
dec
aad
inc
push
stos
iret
dec
push
add
sbb
ret
imul
mov
loopne
call
subb
stos
xchg
enter
stos
cmp
test
dec
lock
sbb
add
or
xchg
adcl
hlt
push
jmp
in
fildl
push
lea
es
nop
addl
aaa
arpl
add
lret
sbb
add
jmp
test
das
push
test
and
adc
pop
or
cwtl
jne
cli
fsubl
sti
inc
test
lock
adc
popa
out
dec
mov
outsl
sub
pop
push
aaa
adc
fadd
dec
fcomps
xor
lret
fsubrl
imul
or
jmp
xor
inc
int
data16
pop
mov
loopne
lds
fstpt
ret
rorb
push
out
xchg
out
adc
stos
enter
mov
inc
lret
stos
inc
in
inc
loop
add
hlt
add
shll
jbe
fsts
movsb
and
adc
add
movsb
out
rol
mov
or
pop
xor
cmp
lea
or
jecxz
sbb
mov
out
les
add
movsb
adc
lods
and
out
inc
cmp
lock
add
pusha
pop
mov
mov
mov
ja
or
cmp
test
push
push
xor
or
sbb
jge
out
or
adc
pop
push
orl
gs
or
mov
pop
jo
insl
std
xchg
aad
pop
orb
into
add
pushf
pop
jae
mov
push
aam
adc
jnp
mov
xor
mov
xor
fistpll
cli
add
sbb
xchg
mov
jnp
pop
out
and
mov
add
cmp
data16
outsl
mov
sbbb
push
lock
rep
ds
clc
xorl
rolb
pop
fcom
nop
jns
inc
test
stc
addl
shr
push
pop
mov
pop
out
and
add
pop
push
sub
stos
mov
notb
push
push
mov
push
push
fwait
mov
dec
push
sti
cmp
rorl
or
push
lods
shl
push
mov
mov
mov
cs
movl
jbe
in
movzwl
xchg
mov
pop
sbb
mov
sbb
add
std
dec
lret
jl
cmp
nop
jecxz
pop
jno
sarb
mov
lds
dec
in
mov
int
ja
mov
push
cmp
frstor
and
sbb
subb
inc
mov
loopne
repnz
fcoml
daa
cmp
jne
jbe
js
add
test
mov
loope
xchg
jp
js
rolb
outsb
lds
push
popf
hlt
or
loope
inc
loope
repnz
add
inc
inc
xchg
rcl
or
int3
inc
cmp
adc
sti
xor
mov
aas
lods
push
in
and
add
loopne
je
sbb
nop
cli
add
repz
push
adc
clc
sbb
sbb
adc
cld
movsb
std
or
dec
bound
rolb
sti
outsb
std
shr
mov
mov
inc
sub
jmp
cmpb
or
adcb
adc
jmp
adc
push
aad
push
mov
mov
push
sbb
jne
pcmpgtw
fidivrl
in
sub
out
mov
adc
jbe
push
paddb
ja
push
mov
cs
dec
call
sahf
xor
push
mov
xchg
aas
push
pop
ljmp
add
pusha
xchg
mov
inc
cli
pusha
jl
cld
adc
lahf
bound
inc
add
pop
pop
in
cli
sub
in
and
call
cmp
je
push
pop
push
and
pop
cmp
jl
dec
movsb
jle
cmp
mov
inc
push
jns
js
or
xor
xchg
xchg
mov
mov
stos
add
cmpsl
test
sbb
xchg
cmc
xor
adc
add
xchg
push
hlt
add
jl
pop
and
sbb
rcrb
jp
push
fs
ja
xchg
out
fld
repz
push
mov
clc
ficompl
ljmp
add
push
pop
or
jae
jae
or
jnp
or
jbe
jmp
or
jae
push
jmp
por
jmp
adc
pop
jae
jae
adc
push
adc
dec
adc
dec
adc
jae
push
jmp
pop
jmp
sbb
xor
jae
jae
jmp
sbb
es
and
jae
push
jmp
pop
jmp
and
or
andl
and
pop
hlt
inc
psrlq
sbb
jo
xor
mov
shll
sub
push
jl
icebp
repnz
es
cs
repz
inc
dec
push
pop
repz
rep
jae
jge
repz
addb
out
lcall
jns
out
mov
out
sahf
out
xlat
fsub
out
push
sbb
add
push
pop
or
and
lcall
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
dec
sub
and
inc
dec
mov
rcr
roll
cmp
ja
inc
sub
test
mov
inc
adc
ret
fsts
js
fnstcw
jbe
inc
pushf
les
cmp
jo
sub
jo
jo
insb
push
aam
add
pop
jl
pop
aam
and
mov
rcrb
rorl
cmp
xorb
int3
jmp
jb
inc
lea
cwtl
nop
pop
lcall
call
adc
inc
sarl
out
inc
dec
xchg
out
add
add
daa
enter
dec
js
adc
int3
jle
neg
mov
cwtl
cmpsb
jbe
cmp
ja
jb
xchg
roll
leave
ds
cmp
aam
mov
inc
jmp
xchg
xchg
xor
add
aad
iret
mov
in
loope
pop
cmp
aaa
and
es
sub
out
sahf
push
test
das
jae
sub
mov
inc
cmp
jae
sbb
ljmp
or
inc
adc
mov
bnd
inc
fidivrl
sbb
mov
ret
js
cmp
cmp
cmovp
add
add
add
or
xchg
fcoms
pop
pop
sbb
xor
call
sbb
jae
mov
push
inc
or
stos
cmp
jecxz
ficoms
fistpll
popa
mov
mov
mov
or
decl
or
ds
dec
sub
lea
rorb
pop
mov
dec
movb
mov
sbb
js
ret
movl
mov
push
add
cmp
jbe
fmull
ljmp
popa
inc
fdiv
add
cmp
sub
subb
out
or
xor
cmp
ds
or
xchg
sub
out
and
stc
ja
lea
imul
cmp
ja
push
stos
mov
idivl
dec
mov
stos
ret
and
inc
and
sbb
rolb
or
lret
adc
or
dec
inc
das
in
xor
sub
clc
rorl
incb
xorb
or
or
sub
xor
or
bswap
add
pop
mov
push
and
test
or
loop
pop
pop
icebp
bound
movlps
fs
sbb
stos
xchg
mov
sbb
or
ss
fdivs
mov
push
sbb
pop
and
lock
adc
sub
aam
add
add
mov
xor
xlat
mov
mov
and
xor
lret
add
loope
push
cmpsb
jmp
bound
adc
cmp
sbb
push
and
pop
xorl
cltd
pop
rcl
adc
xchg
lret
pop
int3
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
mov
add
inc
bswap
and
push
inc
imul
and
and
adc
aam
ljmp
out
adc
push
loope
cmp
jl
xchg
rolb
adc
test
jno
mov
sbb
cmp
add
outsl
xor
dec
lea
cmp
xor
or
jne
or
mov
or
js
xor
movsl
mov
or
insb
xchg
aad
or
xor
cmpb
std
push
dec
pop
mov
dec
cmp
jl
jge
in
dec
adc
js
jmp
xor
dec
movsl
and
test
jb
nop
mov
pushf
cli
fists
cmp
jae
movzbl
push
push
pop
fldt
je
inc
cwtl
jno
scas
js
and
adc
jmp
mov
inc
or
or
xchg
pop
push
inc
in
addb
or
jl
imul
ret
mov
and
cwtl
sub
movl
sbb
and
lods
add
pop
ret
inc
push
lahf
cltd
ja
jmp
push
jbe
cwtl
push
pusha
mov
and
call
ret
cmp
movsb
movb
test
in
add
fwait
or
push
mov
es
pop
or
add
js
jne
fadds
add
cmc
jmp
dec
les
sbb
lock
clc
add
xor
cmp
js
dec
call
add
shr
xchg
sbb
movsl
es
or
jo
cmp
sub
sarl
add
icebp
or
sub
inc
adc
cmp
add
int3
add
and
icebp
push
cmp
push
orl
adc
add
cmp
popa
cltd
rolb
inc
mov
inc
pusha
scas
in
jmp
sahf
push
sub
add
div
ss
daa
dec
mov
sbb
rcll
fsts
outsb
pop
lds
lods
xor
in
jno
mov
icebp
mov
rolb
add
ja
mov
mov
push
ljmp
push
jmp
std
adc
fistps
or
decb
cmpsl
jg
jle
push
mov
aas
push
add
push
cmpsl
lea
js
sahf
and
popa
clc
je
jmp
push
pop
bound
test
adc
aas
es
or
dec
mov
mov
lock
inc
inc
addl
loop
sub
sbb
sbb
inc
push
mov
loope
cmp
mov
xchg
shrl
push
sarb
add
jg
insl
cmp
inc
mov
xor
dec
sub
daa
pushf
dec
inc
addr16
ret
mov
aaa
or
lock
ss
jo
lea
inc
adc
pop
sbb
ljmp
or
jmp
xor
js
cmp
cmp
xchg
inc
cmp
mov
loopne
and
xchg
clc
push
pop
adc
cmpsb
je
sub
pop
ret
rcl
fs
or
loope
in
pmaddwd
xor
in
pop
insb
dec
sbb
mov
push
outsl
xchg
nop
bound
cmpsb
lds
or
sbb
mov
and
jecxz
adc
adc
test
inc
subl
lret
and
mov
imul
push
cmp
and
cmp
mov
loopne
push
inc
adcb
loope
aam
xor
icebp
mov
adc
xor
or
inc
imul
xlat
cs
cmp
inc
inc
ret
movsb
inc
rcrl
inc
aad
iret
stc
pusha
cmp
push
sub
push
mov
loope
xchg
add
pop
mov
or
xor
pushf
lcall
adc
imul
cmpsl
adc
jae
pop
aam
fdivl
flds
push
sub
ret
and
mov
cld
cmp
and
cmpl
push
adc
pop
rorb
inc
cmp
push
or
sbb
adc
inc
or
jmp
sbb
daa
sbb
pusha
xchg
sbb
sub
loop
mov
and
cwtl
mov
adc
call
data16
sbb
shrl
cwtl
xor
sbb
popa
cmp
ss
push
test
mov
test
push
push
adc
adc
jmp
sbb
sub
ret
sbb
add
lcall
sub
adc
or
jecxz
negl
push
orl
cmpsb
or
call
sbb
sbb
xor
aaa
nop
push
pop
ss
mov
jnp
sub
test
les
mov
adc
fstl
mov
daa
addl
loope
sbb
fcoms
loopne
inc
dec
inc
push
ds
nop
xor
ds
js
arpl
stc
in
xchg
inc
pusha
inc
xchg
sub
dec
ret
cmp
ds
lds
mov
xor
lock
andps
cmpsb
xchg
mov
push
sbb
cmpl
dec
sub
js
sbb
and
mov
insb
adc
insb
dec
imul
xor
out
xchg
bound
push
cltd
pop
sbb
and
mov
in
sub
xchg
xor
mov
loopne
sbbl
movsl
mov
mov
and
and
push
out
push
test
add
cmp
out
sub
in
nop
mov
xor
xor
fldt
jg
mov
xor
and
dec
dec
push
mov
mov
in
push
insl
mov
push
xor
addr16
mov
test
imulb
lea
sbb
add
pusha
test
jb
inc
and
inc
enter
or
jb
ss
sbb
mov
push
and
and
andl
ret
sbb
int
mov
push
pop
dec
adc
cmp
fistpl
add
pop
fcmovne
leave
add
sbb
pop
dec
sub
xchg
shl
add
xorl
push
cltd
ja
cmp
pop
stos
jp
add
and
mov
inc
or
movsb
fs
jl
adc
sub
mov
inc
jl
dec
and
sbb
mov
mov
test
and
push
insl
push
xchg
add
test
mov
mov
icebp
mov
sbb
jne
imul
ret
adc
sti
dec
adc
aas
jg
popa
mov
dec
dec
sbb
int
cmp
jne
push
mov
lds
cmpb
mov
mov
jmp
testl
je
cmp
out
pop
push
xor
jp
push
push
es
cmp
mov
rcll
and
fildll
mov
sub
dec
mov
mov
mov
dec
int3
subb
or
ret
jmp
sub
mov
fwait
or
adc
pop
add
jmp
push
arpl
jnp
pop
push
scas
or
shll
insl
aad
push
pop
adc
je
xor
cs
fidivs
adc
stc
add
adc
xchg
mov
pop
fcoms
lret
arpl
sar
push
push
xchg
fcoms
repnz
data16
pushf
add
and
and
movzbl
loope
xorb
je
and
sti
fwait
test
push
cmp
pusha
cmp
cmp
loopne
cmp
imul
mov
shrb
adc
cwtl
push
aad
lret
insl
ret
push
lea
daa
xchg
xchg
jle
push
pop
shrl
ljmp
icebp
push
cmp
jge
mov
rolb
leave
ljmp
add
cmp
xor
testb
loope
jne
loopne
mov
sub
mov
dec
or
lock
clc
clc
cld
cmp
jne
jae
movl
xor
push
add
add
lcall
push
and
ja
popa
jno
add
dec
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
mov
or
mov
sub
mov
mov
test
jg
or
sbb
mov
gs
cmpsb
adc
aad
and
fists
or
je
push
add
out
loop
and
test
les
out
xchg
repnz
sub
add
lret
sub
mov
push
mov
push
add
jne
sbb
adc
dec
test
cmp
out
or
xor
add
or
int
clc
xor
inc
add
inc
pop
lret
je
jmp
sbb
cltd
divl
inc
inc
imul
data16
jb
repz
mov
out
shrb
add
push
fimuls
je
mov
add
or
cmp
mov
stc
push
or
add
adc
push
aam
sbb
push
lock
add
mov
pop
jbe
inc
test
jmp
daa
pop
xor
mov
icebp
in
xchg
out
push
xor
repnz
leave
cld
insl
addr16
jae
mov
lcall
sbb
push
ds
jne
decb
jle
in
xor
pop
je
cmp
xchg
clc
lcall
pop
cmp
je
cmp
jne
inc
jne
mov
sub
or
andl
mov
pusha
and
cmpsb
add
mov
ret
jb
mov
nop
cmp
cmpl
into
add
dec
add
sub
pop
lods
loop
cmp
jne
mov
call
cmp
or
cltd
gs
push
fwait
adc
xor
sub
fnsave
xor
cmp
mov
aaa
lahf
push
and
popa
push
jmp
inc
jl
loopne
cs
inc
jg
aaa
push
add
shl
shrb
xor
jmp
mov
xor
mov
es
idivl
les
outsl
adc
test
or
mov
dec
jl
rolb
ret
rcrl
cld
and
or
sbb
pop
ss
sbb
shrb
scas
dec
push
lret
cmp
push
push
pushl
out
adc
push
inc
cmp
fbld
add
xor
std
out
imul
mov
mov
roll
enter
daa
std
mov
fistps
orb
sub
or
test
lods
push
mov
mov
jge
dec
in
jae
movsl
pop
das
xchg
xor
xor
or
jbe
fsubs
inc
cmpb
mov
lock
sub
add
dec
idivb
fsubr
inc
inc
inc
out
mov
in
shrb
pop
rcll
adc
adc
or
test
cld
mov
mov
or
add
cmp
cmp
pusha
pop
cwtl
popf
dec
addb
inc
inc
dec
dec
cmpsb
or
cmp
je
cmp
je
add
testb
push
jo
pop
movb
jne
andl
adcl
out
clc
inc
in
cld
push
sub
jne
mov
mov
or
jmp
pop
xchg
subl
inc
lods
insb
mov
lods
mov
popf
or
mov
and
push
xchg
or
pop
mov
loopne
adc
adcb
aaa
add
das
pop
int3
jo
pop
sbb
mov
push
sahf
jmp
dec
clc
andl
add
jp
mov
or
dec
int3
lock
push
dec
pop
lods
mov
push
adc
add
xor
repnz
push
lock
sub
jge
jne
shr
adc
dec
sub
and
push
sbb
pop
push
add
cmp
pusha
jns
ret
pop
or
and
mov
mov
jo
loop
fisubl
pop
cwtl
sbb
bound
sub
lds
pop
inc
add
xchg
insb
xchg
rcll
or
sub
call
pop
add
std
jbe
push
adc
inc
xor
icebp
cmp
inc
rolb
mov
or
dec
xlat
test
add
push
sbb
and
cmp
push
inc
dec
adc
imul
jge
add
je
push
or
add
pop
arpl
push
cwtl
add
cld
cmp
movb
push
sub
mov
fidivl
orl
push
cmp
push
adcb
loope
cld
clc
lods
cmp
nop
cmp
lea
out
sub
sub
test
push
ret
ret
cmp
inc
imulb
roll
in
sub
stos
xor
cmp
shll
pop
push
mov
push
mov
lods
jno
or
push
loop
repnz
mov
imul
movsl
and
enter
sub
or
cmp
ret
movb
jbe
mov
adcb
orb
add
inc
sbb
lods
jg
cmpb
jne
imul
mov
imull
mov
lahf
sbb
mov
inc
mov
pop
fstps
fldenv
clc
adc
add
jbe
add
fwait
mov
aas
add
mov
popf
lods
aam
je
lcall
cli
inc
dec
xchg
stos
insl
inc
or
mov
rcll
test
dec
insl
loope
adc
and
inc
xchg
jecxz
ja
mov
fbstp
insl
and
or
sahf
mov
test
int3
pop
repnz
push
mov
arpl
jp
mov
les
push
addb
rcrl
cmpsb
inc
rorl
lock
movsb
mov
jle
add
lock
mov
dec
dec
or
sub
inc
jne,pn
xchg
and
or
je
mov
mov
or
adc
enter
or
push
inc
insb
je,pt
inc
xor
frstor
lock
push
xchg
and
and
jecxz
cmp
rcrb
lods
jne
les
mov
cmp
xlat
add
bound
fildll
shlb
lock
repz
lock
scas
push
pop
mov
mov
adc
sbb
mov
xlat
add
cmp
js
lret
push
jo
fimuls
push
jl
or
ss
adcl
rcrb
call
push
loopne
sbb
cltd
dec
popa
jl
lret
mov
hlt
call
inc
jmp
cmp
ret
sub
jo
inc
fists
mov
pop
js
xchg
mov
push
mov
add
das
rcl
cwtl
cmpsb
insl
xchg
or
mov
aam
adc
imul
push
sahf
xchg
inc
imul
loope
jae
out
jb
scas
adc
push
cli
ja
test
add
xor
cmp
jb
mov
jmp
push
dec
incl
ss
add
add
rorb
je
ret
mov
addb
addr16
jecxz
adc
ret
in
push
mov
aaa
mov
push
hlt
jne
sarb
xchg
xchg
pop
cltd
push
sarb
pusha
push
loope
cmpsl
or
mov
cwtl
pop
dec
jne
out
or
and
and
inc
je
cmp
popa
adc
mov
adc
cmp
adc
cld
cmovge
aas
cmpb
mov
lea
or
imul
inc
push
lahf
push
inc
inc
or
jge
movsl
xor
mov
test
add
pop
outsb
adc
cmp
mov
adc
and
dec
push
add
dec
and
cltd
pop
fcomps
xor
nop
mov
add
push
sti
add
ret
fnstenv
push
add
inc
cltd
mov
fstp
or
or
pop
add
xor
loope
adc
leave
xlat
add
das
sti
mov
jns
add
popf
inc
filds
arpl
je
adc
daa
jne
jo
adc
or
and
sbb
inc
jmp
push
add
add
jmp
xor
mov
outsb
aaa
add
dec
hlt
in
fisubrl
push
shlb
mov
daa
mov
inc
inc
jne
insb
xchg
ljmp
mov
addr16
xchg
sbb
sbb
dec
pop
dec
pusha
faddl
pop
dec
push
mov
ret
or
xor
sub
xchg
push
sahf
out
in
stos
inc
sub
inc
vmovntpd
mov
mov
lret
mov
cmp
adc
and
jle
or
mov
mov
mov
push
out
cmp
or
int3
shlb
and
mov
or
lds
movsb
or
mov
sbb
mov
mov
movsb
cmp
pop
lock
mov
push
lahf
bound
mov
call
das
or
lahf
xchg
sub
add
xor
xchg
and
pop
mov
mov
cvttps2pi
dec
mov
gs
push
sbb
jo
enter
add
loopne
ds
add
jno
out
dec
andl
jo
pop
clc
inc
add
push
out
xor
ret
loope
loopne
jo
mov
mov
jo
sub
loope
sub
sbb
idivb
mull
je
movsb
mov
or
mov
movsb
jmp
andb
js
push
pop
mov
in
dec
push
cmpsb
push
in
and
cmp
xor
sub
push
popf
mov
clc
add
out
test
int
sbb
fsubr
mov
pop
xchg
and
dec
mov
add
sub
bound
test
push
cmp
adc
sub
sbb
mov
fldenv
pop
js
icebp
sub
mov
es
test
ret
ficoml
xor
push
add
mov
adc
aam
xor
add
adc
push
sbb
or
test
adc
in
and
add
jne,pt
and
pop
mov
movsl
fs
movsb
mov
cmpsb
in
and
sbb
ljmp
mov
or
jg
push
and
fwait
cs
push
stc
ret
xor
mov
jl
xor
sbb
inc
adc
mov
push
xor
popf
pop
sub
mov
sub
adc
js
cmc
inc
cmpb
cs
lea
and
das
mov
dec
xor
sub
sarl
sub
or
lret
and
and
call
xor
jmp
arpl
inc
inc
pop
dec
mov
mov
dec
mov
add
push
xchg
mov
fistl
ss
add
fldt
adc
inc
pop
inc
bound
jns
pop
adc
pusha
cmp
mov
cmp
pop
push
ret
outsl
mov
pop
jg
jno
das
jecxz
mov
adc
test
add
dec
lods
adc
or
add
mov
ss
cmp
enter
lds
and
pop
dec
jne
fadds
loope
xchg
icebp
add
pusha
add
lea
inc
test
adc
or
jns
xor
xchg
xchg
fimull
lods
pop
mov
cmp
mov
cmp
or
pop
push
lods
or
and
pusha
ss
push
out
adc
sub
notb
jno
mov
inc
or
jo
repz
or
shll
adc
in
arpl
mov
sub
sub
bound
dec
mov
xchg
ja
pop
addr16
fbld
adc
mov
xchg
sub
inc
or
inc
sarb
push
jge
lods
sbb
jns
push
lahf
and
push
mov
and
adc
loope
cmpsb
rclb
adc
mov
add
mov
cmp
cmp
icebp
mov
out
push
inc
mov
add
jg
int3
mov
jl
pusha
inc
inc
test
jbe
inc
jmp
pop
mov
shr
sub
mov
mov
mov
movsb
adcl
and
push
les
arpl
cs
pop
lcall
or
sbb
adc
fdivs
scas
xor
hlt
jmp
lea
int3
mov
sub
lret
inc
push
or
mov
cmpl
js
pop
sub
pusha
sbb
or
mov
add
xchg
push
add
push
pop
xchg
and
divl
fldenv
xor
inc
push
in
cmp
and
les
cmp
js
mov
jge
jo
mov
js
push
ret
push
xor
jl
rorb
aam
call
mov
dec
stos
and
sbb
jecxz
cmc
push
cs
adc
xor
jmp
xchg
repz
push
push
adc
mov
hlt
adc
fcoms
pop
out
sub
je
in
jae
cmp
pop
mov
sbb
dec
xor
fisubrs
xchg
push
fstps
cld
sub
push
and
es
xor
sahf
aaa
cs
or
lea
rorb
or
shr
rep
or
inc
in
adc
data16
movsl
or
fdivl
sub
movl
orb
les
xor
frstor
pop
inc
pop
mov
cs
stos
pop
jg
js
cmp
inc
sub
xchg
sbb
pop
fmuls
xchg
jae
dec
fisttps
cmp
ja
xor
icebp
mull
outsb
imul
insb
mov
xor
dec
imul
mov
cmp
mov
mov
pop
cmp
inc
call
test
jnp
add
or
cli
mov
inc
daa
movl
mov
push
incl
adc
je
lds
cmp
js
test
movsl
outsl
jl
xchg
push
cmp
pop
js
js
insb
dec
cmpsb
mov
nop
lock
inc
mov
mov
adc
decl
stc
loopne
cmp
insl
loopne
dec
faddl
neg
ret
pop
or
inc
and
insl
add
pop
popf
rcll
mov
in
xchg
scas
or
dec
loope
call
fiaddl
ret
enter
xor
adc
sbb
adc
add
sbb
out
cmp
rolb
pop
mov
jno
add
cmp
sbb
dec
test
je
pop
push
js
outsb
sbb
repz
sbb
inc
jb
inc
or
push
add
adc
rcrl
popa
add
xor
loopne
and
adc
mov
cmc
data16
add
in
or
and
or
sbb
aad
xchg
into
mov
pop
cmp
loope
adc
pop
in
mov
and
xor
sub
repnz
xor
and
or
ja
inc
jmp
subb
andb
lcall
aam
push
fcmovnbe
clc
imull
movsb
loope
add
popf
cmp
jle
inc
xchg
xor
jo
andl
stos
mov
fdivr
sbb
or
sub
loopne
flds
mov
sbb
test
pop
adc
xor
add
mov
pop
cmp
pop
nop
push
pmulhuw
je,pt
sar
out
mov
xor
push
and
jge
cmp
mov
lcall
fmull
and
ljmp
jg
or
ljmp
or
mov
mov
out
xchg
adc
xor
sub
jg
push
outsb
loopne
mov
idivl
mov
pop
imul
push
cs
push
adc
andb
dec
popfw
nop
and
btc
mov
sub
add
fiaddl
mov
push
jmp
add
sbb
add
mov
incb
loopne
lret
push
nop/reserved
mov
jmp
or
lret
mov
dec
xor
test
ret
int
lcall
push
mov
jg
lock
pop
inc
loope
ljmp
add
add
pop
or
cmp
icebp
outsb
jle
sub
outsl
mov
dec
insb
pop
lock
or
push
cmp
insl
hlt
xchg
jo
jp
cwtl
lods
jnp
sbb
cmp
cmp
pop
jecxz
lds
jo
ljmp
cwtl
add
jo
push
cmp
pop
add
mov
adcb
pop
addb
aam
cmp
rcrl
aad
mov
mov
mov
add
push
sub
sbb
sub
pop
ja
shll
in
mov
xor
jne
push
jle
or
mov
xchg
or
jbe
pop
aas
dec
jne
push
sub
fcomi
ss
cmp
and
in
push
mov
jle
push
xor
pop
div
pushf
subl
std
jb
lea
test
xchg
xchg
jmp
lods
push
dec
xor
sub
fcoms
inc
fidivrs
xchg
les
mov
shr
or
sub
pusha
xor
cli
gs
pop
cmp
mov
adc
les
or
ret
cmpl
sbbl
jl
mov
gs
in
add
cmpsl
jecxz
mov
xchg
sub
xchg
add
mov
add
or
imul
or
dec
repnz
inc
xchg
out
cmp
fwait
scas
pop
or
sbb
adc
sub
cmp
insb
hlt
sub
jne
bound
adc
mov
rorl
cmpsl
test
jle
mov
clc
dec
inc
lods
and
out
shrb
pop
jge
adcl
push
dec
int3
fisubrl
mov
push
fisubrs
rol
rcr
stmxcsr
adc
cmpb
sbbb
psubusw
fstpt
push
and
clc
jg
fs
test
std
jmp
movq
movaps
push
clc
jns
insl
aaa
jae
xor
jle
xor
cli
shlb
lret
je
cmp
fwait
in
pop
jge
repz
or
jg
dec
mov
xchg
jnp
cli
fcmovnb
adc
jnp
mov
push
insb
mov
aam
ret
or
push
and
cmp
sbb
fisubl
out
xchg
repnz
roll
jbe
and
xor
mov
mov
int
push
fdivrp
fldl
sbb
sbb
enter
out
scas
sub
imul
ljmp
adc
orb
inc
inc
test
sub
or
in
xor
lods
js
and
shrb
pusha
pop
and
sahf
bound
cmpsl
and
add
adc
or
sbb
icebp
add
and
test
inc
sbb
icebp
mov
xor
loope
dec
js
inc
and
sub
addr16
jno
xchg
test
pop
nop
push
mov
push
push
movb
test
ret
sbb
pushf
pop
addr16
loope
and
sbb
xor
sbb
inc
or
and
adc
rcrb
ret
roll
aam
pop
insb
cmp
and
xchg
sbb
jnp
je
dec
adc
jecxz
jne
xchg
xlat
mov
movl
dec
adc
jecxz
and
mov
cwtl
pop
cmp
add
pop
jb
dec
andnps
and
add
js
fidivrs
jne
orl
pop
mov
or
subb
xchg
xor
mov
push
loopne
addr16
and
andb
mov
mov
or
cmp
roll
adc
pop
and
arpl
push
push
cmp
int3
shl
jno
dec
out
in
movsb
aas
mov
in
repz
sbb
addl
inc
sub
and
dec
push
insb
ja
inc
jb
or
sub
xchg
inc
xchg
mov
movsb
shlb
nop
sbb
je
data16
aas
data16
xchg
mov
add
pop
or
pop
movsl
sti
mov
inc
ret
add
je
jae
push
dec
rcrb
add
outsb
test
inc
je
jae
cmp
movsl
ds
jns
adc
jne
test
pop
rcll
inc
test
jmp
sbb
loop
icebp
int
and
mov
lret
and
rclb
inc
pop
adc
das
mov
adc
pop
aaa
mov
or
insb
pusha
loopne
adc
ret
leave
and
pushf
and
sub
shrl
adc
mov
rolb
sbb
mov
jle
sub
cltd
jg
adc
push
jmp
cmp
decb
in
neg
push
sub
adc
lods
ds
loope
test
mov
pop
pop
push
je
cmp
push
fdivr
push
jne
inc
cmpb
out
subb
sub
push
cwtl
ret
adc
lock
and
adc
or
add
insb
or
mov
imulb
cs
in
pop
daa
mov
flds
inc
inc
ret
and
popa
push
mov
and
pop
push
push
pop
jmp
ds
xorb
les
in
jmp
mov
ret
shl
inc
xor
adc
shl
xchg
rol
loope
or
cmp
mov
or
mov
jne
inc
aaa
push
lds
jg
or
data16
leave
adc
pop
adc
cltd
cmp
push
pop
add
jne
lret
push
or
inc
sbbb
sub
mov
dec
mov
sbb
inc
call
jae
gs
imul
xchg
test
mov
push
cld
xor
lods
in
push
adc
fidivs
sub
rorb
fisttpll
add
push
jb
je
push
mov
sub
rorl
sbb
sbb
in
add
add
dec
xchg
js
inc
adc
ret
daa
es
or
sub
daa
xor
je
shlb
movsl
push
sub
cmp
xor
rcl
inc
outsl
add
pusha
imul
add
outsb
shlb
add
pop
sbb
push
and
enter
xchg
repz
jb
or
call
mov
add
pusha
ret
and
icebp
mov
fwait
in
lods
jb
and
dec
mov
imul
sbb
sbb
push
inc
sub
cs
push
cmp
mov
adc
fildl
dec
push
and
jmp
bound
dec
aaa
pop
cmp
pushf
mov
cmp
into
lea
inc
fmul
les
sbb
lret
sub
rcr
fwait
mov
sbb
push
adc
or
add
inc
mov
jne
pop
sub
sbb
popa
jb
push
sub
pop
loopne
sbb
je
jne
lods
add
dec
add
pop
into
xchg
roll
sbb
xorl
rcr
mov
loope
dec
inc
mov
sahf
pop
add
mov
cmp
cmpl
push
mov
or
inc
mov
stos
add
outsb
fadds
jbe
ss
adc
add
sub
movsl
add
and
adc
sbbl
std
dec
loop
xor
arpl
stos
int
cltd
dec
mov
mov
and
and
clc
or
pop
inc
cmpsb
outsl
add
int3
testb
loopne
mov
cmp
pop
shrb
add
add
or
fnsave
or
cs
push
or
stos
mov
int3
push
push
xchg
xor
mov
inc
adc
mov
xchg
inc
inc
std
cmp
lea
sbb
test
rcl
jp
push
pushf
std
pop
arpl
pop
xor
add
add
lods
lahf
frstor
xlat
insb
and
mov
pop
js
push
ljmp
in
mov
add
sub
mov
sub
push
mov
push
sbb
mov
je
or
sub
je
jmp
in
fs
pop
add
cs
or
fiaddl
sbb
add
push
pop
icebp
adc
idiv
push
mov
xchg
clc
pop
ret
push
fidivrs
sbb
pop
jbe
lea
adc
sbb
xor
dec
jp
cmpsb
roll
and
leave
push
sbb
pusha
add
dec
dec
iret
int
push
clc
jbe
add
and
fcoms
xchg
out
or
push
outsb
es
test
jmp
loop
cmp
mov
jmp
push
add
sbb
lods
pop
scas
addb
xorl
push
lods
ret
jbe
divb
sbb
xor
mov
pushf
pop
pusha
add
adc
dec
sbb
lret
add
stos
cld
pop
icebp
js
pop
and
push
inc
xchg
fdivl
add
loop
push
dec
add
and
xor
ds
add
push
adc
add
and
aaa
add
call
jo
mov
sub
push
shl
insl
push
subb
inc
js
test
mov
test
or
shrb
mov
inc
dec
push
rolb
push
test
shl
ret
test
inc
data16
and
lock
lods
cmp
pop
pop
mov
jb
dec
ret
out
dec
repnz
into
daa
jmp
xor
sarl
dec
lret
jnp
push
mov
jbe
rcrl
lods
jne
add
push
lcall
ret
sub
add
dec
test
add
mov
mov
dec
jne
jmp
xchg
repnz
icebp
dec
sub
push
rcr
dec
jne
mov
adc
or
pop
inc
push
add
pop
mov
xor
test
xchg
mov
sub
push
repnz
pop
jno
sub
jle
xor
push
sar
jae
sbb
push
outsb
into
into
adc
fwait
icebp
add
cld
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
push
ss
adc
or
sub
jb
mov
iret
imul
or
adc
jmp
std
fxch
stos
cmp
xor
cld
cld
jmp
fcomi
jg
sbb
adc
in
adc
adc
inc
inc
inc
adc
push
test
xor
or
repnz
or
pop
pop
in
sub
push
sub
xchg
cmpsb
xorb
repnz
and
or
fbstp
aaa
xchg
push
mov
fwait
or
inc
mov
xor
lea
ret
or
push
xor
jl
add
mov
add
adc
std
xchg
or
or
dec
or
cmpsb
dec
and
pop
xchg
or
xor
inc
inc
sub
dec
aam
pop
leave
in
sbb
xor
add
fmulp
adc
push
or
add
jg
add
adc
ja
test
mov
add
pop
add
xlat
inc
jnp
cli
xchg
pop
insb
or
adc
add
or
jg
inc
or
hlt
add
mov
xor
or
rorl
pop
ret
call
push
push
pushf
cltd
mov
mov
or
push
mov
jg
js
mov
jg
jb
lea
push
mov
jge
and
and
rolb
test
adc
jo
and
xorb
pusha
pop
xchg
pop
pop
js
mov
cmp
or
xchg
sbb
add
fsts
mov
xchg
push
cmpl
xor
lock
or
gs
push
hlt
inc
mov
xchg
mov
mov
mov
pop
lods
dec
aam
mov
xor
add
adc
xchg
cmpsb
inc
lea
jbe
push
push
decb
cmp
or
cmpsb
clc
or
lea
add
add
fistpll
inc
and
pop
fmuls
lock
and
sub
inc
sub
and
cmp
inc
mov
mov
add
fsub
sub
add
xchg
sub
lock
push
adc
sub
mov
push
adc
insb
pop
inc
jae
arpl
inc
or
jmp
cli
sar
stc
and
mov
inc
je
sub
push
sub
stc
shll
or
add
jmp
or
mov
inc
inc
push
sahf
out
fildl
push
fisttps
scas
mov
pop
add
mov
inc
cmp
or
stc
jb
add
shll
mov
jl
add
inc
loope
fcomps
lea
adc
push
or
hlt
mov
mov
mov
ret
push
insb
je
iret
pop
push
sub
or
pop
pop
cli
ret
shl
push
adc
mov
ljmp
jg
mov
xor
xor
xor
jo
and
or
xorl
add
out
jne
or
dec
inc
scas
and
jg
dec
or
jecxz
daa
sahf
out
hlt
test
je
xchg
and
fdivl
sti
jns
aam
xchg
pop
addr16
outsb
mov
std
cld
aaa
sbb
test
and
mov
xor
xchg
xor
js
xchg
lock
pop
cmpsb
cmp
ljmp
add
jg
and
pop
mov
add
inc
cmp
mov
sarb
inc
lock
inc
dec
add
xor
inc
jnp
cld
sub
jmp
cmp
sbb
jmp
adc
sbbb
sub
sub
xlat
fcom
ljmp
mov
cmp
rcll
fcoms
mov
cmp
je
cmp
outsb
sub
adc
add
repz
adc
pop
fmuls
fmuls
sbb
adc
mov
sbb
sbb
rclb
mov
and
je
lret
sbb
push
or
mov
pusha
jp
sub
jmp
mov
add
or
xor
pop
movsl
les
jbe
push
add
pop
xor
dec
shlb
xchg
lods
mov
xor
scas
inc
push
rclb
shl
cld
std
mov
sbb
sub
jecxz
adc
push
mov
pop
sbb
xor
fsubrs
mov
add
sbb
insb
or
dec
fcoml
jmp
push
mov
mov
pop
xor
les
sub
mov
jle
inc
or
xor
jne
mov
or
jl
lock
mov
inc
inc
loope
dec
mov
dec
jne
fs
add
pop
add
adc
and
in
je,pt
adc
pop
js
jae
shlb
xchg
sbb
sub
lds
add
sub
add
lcall
adc
cmp
cwtl
ret
dec
or
adc
dec
cmp
add
add
add
pop
xor
xchg
nop
ljmp
jne
lock
push
xor
push
xchg
cmp
inc
cld
fwait
in
adc
push
add
xorb
inc
sub
dec
cmp
lea
push
adc
inc
popa
cmpsl
fisttpll
adc
pushw
pop
cmp
mov
adc
mov
cmp
nop
ret
and
or
andb
pop
les
adc
pop
or
inc
pop
sub
jne
or
js
inc
inc
mull
lds
aaa
or
pop
lret
call
pop
testl
test
adc
test
jb
lcall
or
mov
add
ja
or
mov
push
mov
ret
and
mov
push
pop
call
cld
add
mov
jo
and
mov
mov
jp
and
cmp
pop
clc
in
inc
jb
hlt
xor
jne
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
test
lret
cmp
ret
testl
sub
mov
mov
inc
shlb
add
inc
fmulp
xchg
sbb
push
clc
rcrb
cmp
daa
fucomp
inc
pop
shll
loop
sbb
rcll
faddl
add
push
push
clc
ljmp
sbb
lods
add
or
add
mov
mov
les
pop
jp
in
ja
cmovg
inc
mov
and
push
push
xchg
pusha
dec
xor
sub
aam
scas
jb
out
sbb
add
jbe
mov
jmp
movl
inc
popf
adc
dec
lods
mov
loop
lret
je
push
insb
push
add
xor
pop
addl
icebp
jnp
decl
cmp
pop
lret
sbb
sub
mov
jbe
and
outsl
stos
cltd
pop
idiv
decl
mov
or
stos
add
mov
pop
stos
push
jne
punpcklwd
xor
into
xor
adc
rcll
xor
imul
ficoml
dec
loopne
dec
or
push
add
add
push
pop
push
pop
aam
mov
ret
out
sbb
in
push
loop
mov
int3
jmp
fdivrl
loop,pn
ljmp
sub
jle
adc
or
repnz
sahf
out
hlt
add
or
fiaddl
or
cli
xchg
loopne
mov
xchg
xor
mov
test
mov
aam
les
pop
test
or
push
push
jmp
xchg
add
mov
push
in
mov
loopne
adc
adc
or
add
addl
es
jne
cmp
call
push
hlt
stos
pop
dec
addb
jmp
adc
out
mov
faddl
push
or
cmp
clc
adc
cmpsl
pusha
popa
loope
jg
ljmp
inc
je
inc
cmp
or
jo
mov
movsl
fimull
jbe
jo
jmp
dec
je
add
mov
dec
jne
push
pop
inc
mov
or
push
inc
push
inc
add
inc
xor
adc
dec
push
fisttps
or
adc
sbb
jg
test
push
push
cmp
inc
or
vcmpss
imul
mov
out
inc
xchg
lock
push
push
fildl
jne
mov
addr16
add
dec
pop
inc
dec
add
and
jne
inc
mov
inc
test
push
divb
cmp
and
mov
cmp
cmovp
lds
xchg
or
pushf
push
push
sub
insl
push
pop
adc
mov
icebp
loopne
pop
iret
or
js
jbe
pop
jns
imul
out
pop
sti
xchg
pop
lods
rorb
add
dec
inc
lds
push
jmp
sub
ret
inc
jne
dec
mov
mov
pop
icebp
sbbl
or
cmp
xchg
cmp
outsb
popa
add
add
idivl
mov
jmp
cmp
jae
stos
arpl
int3
repnz
push
mov
adc
push
and
xor
subb
push
mov
and
int3
inc
sub
mov
loop
inc
ljmp
add
sub
push
sbb
xchg
int
outsb
push
push
shr
rclb
pop
call
insb
xchg
xchg
rcr
test
adc
test
jns
sbb
dec
jo
popa
shll
out
cmp
sbb
clc
mov
pop
mov
mov
adc
pusha
pop
scas
lods
xor
xchg
cli
or
lea
in
dec
sub
xchg
and
dec
dec
jae
nop
xchg
jo
addr16
ss
xchg
push
pop
int
add
mov
xor
or
jle
xor
add
sub
push
pop
or
pop
dec
mov
push
cli
pop
xor
push
pop
sub
insl
test
push
cmc
or
push
push
out
sti
dec
je
xchg
or
sbb
imul
mov
into
cmp
lret
push
push
add
xor
popf
push
inc
lods
movsl
in
jle
subb
insl
or
cld
add
jbe
sarl
ret
adc
add
dec
jmp
xchg
out
inc
in
data16
push
inc
cmp
inc
jb
ljmp
xchg
clc
push
mov
stc
mov
stos
xor
mov
cmc
mov
notb
imul
add
mov
jge
insl
xchg
mov
imul
pop
push
fiaddl
or
arpl
pop
sub
cs
add
cmp
fucomp
les
mov
jmp
dec
or
mov
cltd
pop
inc
mov
popf
pushf
cmp
mov
fwait
rolb
sahf
sub
sbb
shrb
xlat
je
cmc
mov
inc
and
insb
insl
aad
sub
sbb
jbe
cwtl
push
push
sbb
sub
int
push
mov
cmp
in
push
add
jl
js
aam
fstpl
add
jnp
subl
mov
js
mov
lret
inc
dec
xchg
jo
add
loope
jne
pushf
ret
lock
rorl
xlat
sub
xchg
scas
mov
adc
lods
push
dec
and
les
aaa
insb
cmp
mov
xor
adc
js
shl
enter
mov
jp
loopne
push
xchg
and
mov
xchg
and
stc
mov
mov
inc
jmp
push
imul
fbstp
sbb
pop
jno
pop
jnp
icebp
adc
lcall
dec
add
movsb
sbb
ret
movsb
mov
or
add
leave
inc
mov
jecxz
xor
xor
push
xor
and
jo
inc
sub
inc
lods
in
adc
xorl
dec
pop
pop
rclb
mov
in
or
adcb
mov
or
add
imul
pusha
add
cltd
insb
sub
in
movsl
ja
dec
cld
jmp
adcb
push
jne
sbb
js
rclb
jecxz
faddl
aad
je
cmpsb
add
scas
sub
mov
add
sub
ss
cli
rorl
loopne
or
dec
inc
pop
shlb
cmp
push
lock
mov
adc
push
or
mov
out
xchg
stos
ja
leave
cmp
sbb
mov
repnz
jle
cmp
mov
fsubrl
mov
clc
faddl
mov
cltd
push
adc
add
adc
jg
push
into
je
pushf
insl
out
aad
pop
jne
mov
les
dec
add
in
es
jp
dec
add
inc
and
add
and
push
daa
dec
leave
add
jns
cmpsb
dec
xchg
or
jmp
es
dec
lret
mov
mov
mov
ds
jae
aad
mov
push
cmpsb
fs
out
inc
ljmp
dec
or
mov
jge
sub
aas
jo
add
cmp
push
clc
jb
adc
inc
cmpsb
sarl
adc
out
fwait
enter
pop
pop
jne
push
or
aas
test
loop
call
or
rep
jmp
popa
orl
jb
ss
insl
cli
add
test
mov
xor
es
adc
and
push
adc
pop
shr
fiaddl
or
lods
adc
stos
das
in
and
je
sbb
cmpsb
nop
inc
xor
nop
dec
jae
xchg
mov
fiadds
fs
jns
push
push
mov
mov
call
out
in
lock
or
jns
hlt
clc
clc
cld
push
loopne
push
add
lcall
jmp
inc
js
fdivs
cld
nop
shll
and
cmp
and
lea
xchg
sub
jl
cld
pop
and
std
jb
lret
cld
out
cmp
neg
fimuls
or
daa
stc
sub
in
mov
nop
push
push
je
pushf
fiaddl
sub
mov
add
sahf
inc
push
out
lods
pop
push
jns
add
dec
lds
out
mov
jbe
loop
mov
push
clc
iret
repz
or
adc
and
repz
mov
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
js
dec
lcall
adc
js
pushf
sub
in
push
adc
mov
dec
call
cmp
lahf
push
or
push
lahf
hlt
or
fs
je
mov
sub
jmp
testb
jne
pop
movl
add
pop
bound
mov
js
sar
pop
loope
or
push
out
xor
or
pusha
xchg
add
lods
sar
testb
jne
push
sbb
sar
shll
push
loopne
push
popa
adc
xchg
mov
and
or
mov
dec
shlb
mov
pop
xchg
rcr
push
arpl
sub
push
movsl
sbb
dec
sub
sbb
sbb
sub
push
std
or
jmp
divb
popa
jge
pop
adc
shrl
mov
inc
fisubl
fmull
xorb
movb
sbb
or
repnz
fcomi
lock
xchg
scas
cmpsb
fldl
movsl
popa
fs
or
insb
rolb
sbb
fwait
xor
fnstenv
scas
push
mov
aam
push
shl
mov
inc
inc
call
fbstp
aam
and
rcll
and
and
call
and
sbb
and
sbb
inc
push
jmp
daa
mov
shll
and
or
nop
mov
mov
rorb
pop
and
lret
jmp
mov
xor
iret
std
add
out
mov
test
or
fwait
add
jo
int
or
mov
sbb
cmp
or
dec
stc
adc
rorl
add
adc
inc
inc
adc
ret
dec
jnp
fistpl
xlat
inc
and
xlat
movsb
adc
push
scas
cmp
cmp
mov
add
add
shr
call
add
fisubrl
add
sahf
outsb
add
or
idivb
je
rep
mov
dec
ljmp
push
pop
sub
mov
or
gs
jo
insb
in
in
data16
sbb
repz
and
popl
stc
imul
mov
fcomps
test
in
movl
cmp
es
mov
adc
sarb
pop
fstpt
sub
fs
hlt
adc
testl
sbb
movsl
pop
lcall
ret
imul
aaa
dec
inc
push
rorl
leave
mull
ret
adc
sub
mov
sti
sbb
loopne
ret
movsl
xchg
dec
insb
movsl
je
inc
adc
or
loopne
pop
push
xor
lret
pusha
sub
fmul
lret
xchg
fcomps
int3
pop
pop
jle
jle
clc
or
test
pop
movsl
shrb
out
imul
hlt
fistps
aam
aaa
dec
cld
xor
sbb
dec
jo
das
and
shll
in
xchg
push
int3
rcrb
push
jne
pop
mov
jmp
sbb
in
mov
or
sbb
sub
cs
imul
dec
dec
adc
add
lcall
int3
push
cmp
mov
je
xchg
cs
das
les
test
jl
loope
inc
or
dec
or
call
pop
push
outsb
xor
ret
jecxz
xor
add
scas
push
clc
test
cmpsl
rcl
movb
lcall
adc
jbe
push
inc
cmc
mov
mov
push
xor
or
inc
sbb
fstpl
negb
push
insl
leave
frstor
divl
addr16
mov
je,pt
into
sbb
clc
dec
xor
xchg
adc
sbb
test
mov
mov
dec
ljmp
lret
stc
roll
adc
ror
insl
push
rcrl
xchg
add
shrb
pop
movsl
and
and
mov
inc
fsubl
das
sahf
or
push
add
sbb
loope
fnstsw
out
inc
fadds
popa
or
test
mov
xchg
or
adc
or
in
mov
in
mov
cs
hlt
fdivrs
jnp
cmp
popf
dec
push
popf
bound
gs
imul
call
in
or
xchg
loopne
cmp
fcompl
pop
fs
pop
add
cmpl
push
sar
lahf
cs
loopne
inc
loopne
pop
ja
push
cmp
clc
cli
movsbl
pop
jno
mov
sbb
pop
sar
pop
lods
movsb
in
in
sub
es
add
shl
adc
orl
pop
cs
dec
mov
cmpl
call
push
or
insb
aam
test
into
dec
pushf
in
fldpi
pop
or
add
cmp
sbb
dec
jecxz
and
or
sbb
ss
mov
adc
js
sbb
xchg
jo
add
insb
std
loopne
adc
push
imul
shrl
mov
inc
or
ja
movsl
mov
adc
lods
add
in
sub
jae
adc
stc
fidivl
push
lcall
xor
ficoms
mov
ds
jle
sub
or
pop
and
push
ss
js
add
mov
fmull
das
call
into
insl
shlb
incl
insb
cmp
movsl
mov
jne
dec
jae
js,pn
pop
adc
inc
adc
add
call
dec
jge
imul
cmp
add
or
sbb
sub
adc
or
mov
ds
mov
mov
inc
adcl
lods
adc
mov
test
adc
and
cmp
push
arpl
imull
xor
and
xchg
add
dec
pop
add
jbe
mov
adc
mov
mov
ds
dec
and
in
cmp
sub
mov
xchg
push
mov
sub
in
mov
mov
mov
add
push
clc
stos
mov
xor
inc
inc
push
insl
cmp
xor
arpl
adc
jmp
xchg
push
shl
xor
repnz
cmp
dec
ss
cmp
cmp
inc
jae
ret
push
dec
mov
test
or
push
stos
mov
popf
pop
inc
loope
fistpll
xchg
pop
mov
inc
lods
xlat
mov
sbb
pop
dec
mov
dec
jp
mov
inc
mov
xor
mov
je
or
cmp
cmp
push
add
pop
mov
mov
sub
mov
gs
add
mov
xchg
pusha
je
or
mov
outsb
mov
ss
xor
insl
push
enter
sub
mov
aaa
xchg
rcr
test
mov
or
jo
xchg
add
cs
jb
pop
je
mov
or
jo
les
test
stos
stos
add
add
daa
in
scas
aaa
mov
xchg
movsb
addr16
mov
jmp
ja
fistps
jle
popa
mov
ja
clc
and
pop
push
or
js
mov
sub
rcrl
add
adc
add
xchg
and
add
jmp
push
insb
push
pop
aam
shlb
xorl
adc
test
sbb
jo
push
push
xchg
sub
inc
sbb
jb
push
aam
jle
rorb
adc
stos
sbb
mov
push
inc
scas
data16
data16
adc
sbb
inc
inc
sbb
aas
sub
inc
xchg
mov
stos
push
das
fnstcw
mov
mov
cld
push
cmp
pusha
cld
or
mov
cmp
daa
add
add
fiaddl
pop
lock
gs
push
push
into
xor
fisubrl
jbe
mov
shll
rcll
dec
adc
push
loope
jl
inc
cld
jmp
or
test
sub
cltd
adc
imul
push
or
js
jl
jae
adc
in
enter
fidivrl
jecxz
xor
pop
je
outsl
js
jnp
or
sbb
loopne
and
mov
adc
add
and
jo
mov
das
sbb
data16
push
stc
cltd
push
mov
loope
shll
dec
repnz
cmp
dec
jmp
sub
sub
movb
mov
aam
push
pop
imul
lods
fwait
pushf
dec
shlb
sbb
movb
inc
jmp
nop
mov
cmp
dec
aad
jmp
dec
sbb
sub
repnz
sar
xor
and
ret
fildll
pop
std
push
sub
xchg
pop
and
sub
test
mov
shlb
add
in
fmuls
xor
or
sbb
sti
in
jle
cmp
cmpb
sub
add
rolb
mov
add
pop
push
lcall
xor
add
xor
inc
aam
adc
loopne
imulb
jle
aam
data16
scas
inc
mov
dec
pop
sbb
and
pop
out
sub
pop
lock
ret
jg
jmp
sub
shll
push
pop
int
fld
cmp
add
xor
cmp
arpl
adc
push
imul
mov
movsl
daa
pop
mov
mov
push
loop
movsb
addl
pop
sbb
sarl
loopne
sub
testl
inc
out
ds
add
push
test
insb
push
pop
andb
sahf
movsl
lods
ss
add
shlb
ja
jbe
inc
xor
jb
ja
imul
imul
ja
ja
ja
and
nop
jns
cmpsb
jns
inc
js
js
xchg
xchg
js
jns
pop
xchg
js
dec
shll
jns
lcall
pushf
add
pusha
ds
aam
subb
mov
std
movsb
shll
scas
adc
loopne
push
jno
mov
lods
pop
ljmp
pop
adc
hlt
int3
in
loop
ret
js
add
adc
nop
fidivs
mov
pop
add
jae
push
pop
fldln2
or
pop
pushf
in
loop
sub
xor
xchg
jp
inc
push
lcall
pop
add
rorl
xchg
push
popa
dec
in
mov
pop
mov
call
in
or
push
or
and
lcall
mov
test
in
mov
testl
mov
add
xchg
aam
mov
mov
ficompl
js
ficompl
imul
cmp
xchg
add
sub
push
fsubs
insb
pop
mov
jl
cwtl
add
inc
es
mov
frstor
in
int3
push
nop
mov
rcrl
lahf
pop
call
rcl
add
adc
ja
push
pusha
mov
sub
bound
mov
mov
mov
aaa
insl
sbb
fidivrs
and
lahf
xchg
test
jp
adc
jne
cmp
je
mov
lods
mov
stos
mov
push
sbb
or
adc
adc
jmp
inc
loopne
loopne
gs
xchg
lock
rcll
jmp
sbb
ret
adc
imul
mov
mov
test
xchg
cmpl
sub
and
push
pop
sbb
mov
xchg
icebp
inc
popa
nop
or
push
out
inc
xchg
ffree
mov
out
lds
shlb
add
cmp
cmp
xchg
jbe
add
fmull
sub
cs
add
add
cmp
aas
out
pop
std
pop
and
nop
jo
or
cmp
cmpsl
dec
ss
adc
push
pop
push
int
out
insl
sbb
sub
add
inc
movsb
call
mul
les
mov
push
mov
add
outsl
flds
ja
daa
xchg
xor
jbe
sbb
or
lea
into
inc
sar
and
sub
imul
stc
or
aam
sub
insb
and
pushl
mov
xchg
push
pusha
sub
jge
pop
pop
push
add
subl
sub
data16
jo
jl
inc
sbb
mov
adc
or
sbb
divb
xchg
xchg
mov
jge
enter
and
or
mov
imul
or
adc
inc
leave
jecxz
sub
or
loopne
lods
add
xchg
movsl
add
fnop
or
dec
fstl
xchg
push
jmp
sub
mov
fstl
lret
pop
jl
cmp
fldt
jl
sbb
hlt
or
insb
int3
push
xchg
loopne
shrl
push
loopne
adcb
mov
sub
add
lea
xchg
test
mov
js
mov
scas
inc
mov
lock
mov
subl
in
cmpsl
aad
leave
xchg
xchg
mov
adc
mov
shrl
xor
cmp
repnz
sbb
adc
movsb
mov
add
xor
push
sbb
mov
orb
negb
push
aam
inc
data16
sbb
push
imul
or
lods
pop
shr
sti
sbbb
ss
fs
dec
xchg
mov
inc
inc
inc
cmp
xor
insb
mov
add
jg
xchg
orb
addb
mov
and
adc
or
xchg
jo
popa
add
cmp
rorb
xor
dec
sub
and
mov
jo
mov
mov
push
inc
testl
test
or
lcall
sub
ja
fmuls
and
adc
or
inc
mov
outsb
xlat
or
dec
adc
mov
sbb
mov
movsb
mov
and
add
and
add
sbb
fldenv
outsb
test
sub
mov
push
jmp
or
and
and
dec
and
adc
jecxz
ds
jp
iret
inc
cmpl
jne
push
cmp
aam
and
nop
insl
das
nop
jge
adc
jno
and
out
rorb
shlb
add
xchg
inc
ret
fdivl
jno
sub
shlb
mov
xchg
lock
lret
movsl
pop
stos
ret
or
les
scas
subb
dec
add
ja
add
cmpb
cmp
jbe
jecxz
jge
loopne
pop
ja
enter
or
jo
mov
push
or
or
pop
cmpb
rorl
pop
push
jb
push
sub
or
ja
sbb
xorl
shlb
xor
ret
es
negb
fwait
cmpb
add
add
jge
xchg
sbb
mov
add
stos
ret
sub
imul
rclb
leave
mov
shrb
sbb
and
stc
push
lea
iret
adc
push
mov
cmp
jbe
xor
adc
push
mov
sbbb
jnp
dec
mov
jno
mov
sub
adc
xchg
xchg
xchg
dec
inc
cmp
subl
pop
inc
or
dec
adcl
adc
inc
lcall
rcll
cmp
xchg
mov
mov
fwait
jmp
adc
and
call
dec
adc
mov
pusha
sub
jnp
divl
test
jnp
push
sub
push
inc
mov
dec
gs
int3
mov
int
inc
enter
xor
call
inc
cmp
dec
dec
add
jnp
repnz
add
add
lret
jb
in
and
xchg
rclb
push
insl
call
inc
scas
or
in
push
repnz
mov
sub
cli
mov
mov
xchg
cmp
cld
jp
stc
pop
mov
lret
repnz
cs
call
test
xchg
mov
adc
and
and
ja
adc
xchg
rolb
sub
or
push
scas
xchg
lret
enter
ds
fdivrl
and
cmp
call
fcompl
lods
pop
dec
cmp
or
push
nop
lret
mov
fcompl
nop
dec
push
fcompl
or
in
call
or
imul
enter
in
mov
add
sub
fcoms
imul
nop
lret
sti
dec
cmp
imul
sbb
adc
in
mov
test
add
aaa
daa
pop
lods
inc
call
ja
adcl
or
jb
in
lds
fwait
adc
fadds
cmc
fisttps
in
inc
imul
add
push
jae
sbb
insb
arpl
or
cmp
pop
es
outsl
repnz
cmpsl
and
imul
sub
lock
pop
cld
lret
int3
push
push
dec
mov
dec
rcll
insl
arpl
mov
add
fwait
rcll
outsb
repnz
jne
mov
mov
ret
adc
mul
and
adc
mov
mov
mov
adc
or
dec
or
adc
and
add
adc
jmp
jmp
pop
shrb
mov
jle
sbb
push
ljmp
in
ja
add
add
or
or
je
or
add
sub
add
insb
push
lret
cmpsb
xor
rorb
jo
sbb
sar
subb
add
xchg
push
sbb
fidivrl
push
add
add
out
xor
add
jnp
jmp
sub
sbb
fidivrs
je
dec
cmpsl
lods
and
out
cmp
adc
cwtl
push
jns
or
lock
icebp
xor
aam
test
xchg
rcrl
lret
roll
nop
push
stos
add
jle
aas
pop
sub
mov
mov
inc
fbstp
sbb
out
nop
ret
push
out
add
cmp
sarb
mov
gs
mov
orb
add
out
cli
mov
adc
movzbl
sbb
rolb
push
sub
mov
xchg
or
dec
pop
add
mov
push
negb
jbe
loopne
call
push
notb
fdivl
jb
cs
mov
or
cmp
pop
dec
jae
inc
cld
and
and
shlb
xchg
int
push
orb
std
push
sbb
lods
jmp
and
sub
cmp
push
push
outsb
lock
pop
mov
lea
mov
out
leave
sub
mov
cmp
and
adc
or
and
sbb
shll
add
push
adc
sub
cwtl
cmc
imul
or
jo
jg
dec
jecxz
add
mov
cli
fidivl
mov
mov
dec
daa
jmp
or
add
and
call
and
jecxz
cmp
jnp
xchg
mov
push
pusha
cmpsl
addr16
dec
scas
xorb
movsb
imul
add
xor
mov
sbb
jne
movl
mov
inc
pop
cmp
std
jne
subb
lods
jmp
sub
add
jmp
call
rolb
push
push
and
int
repnz
sbb
push
test
in
add
and
xor
lock
hlt
fadds
adcl
jmp
lock
add
xor
dec
ficoml
push
and
aaa
push
xchg
xchg
jo
xchg
push
aas
stos
dec
loop
inc
inc
jnp
jae
cmp
jbe
addr16
roll
or
bnd
test
cmpsl
cmpsb
addr16
inc
push
leave
inc
cmc
and
int
leave
jecxz
scas
mov
loopne
mov
aaa
jmp
subb
outsb
enter
cmc
std
std
mov
mov
cmp
fisubrl
movb
mov
jo
inc
mov
mull
xorb
sbb
pusha
mov
sbb
inc
rolb
mov
xor
push
or
cld
mov
sahf
push
dec
jne
mov
lea
inc
subl
sbb
jge
idivb
or
push
mov
push
mov
inc
dec
jne
popa
cld
cmp
mov
jmp
pop
addb
icebp
lret
cmpsl
cmp
rcrl
adc
js
in
push
subl
mov
or
mov
pop
push
sub
and
jne
rcrl
fistl
mulb
and
xchg
into
movsb
test
movl
pop
sbb
arpl
pop
push
fiaddl
cmp
ljmp
call
testb
insb
ljmp
add
add
add
outsb
subl
push
or
inc
ret
aas
int3
xor
clc
add
out
outsl
mov
sub
sub
jmp
xor
or
mov
mov
add
scas
add
pusha
sbb
sub
or
insl
adc
mov
sbb
inc
cmc
test
xor
cltd
jge
and
adc
loopne
inc
imul
movsl
push
and
xor
mov
xchg
in
negb
sti
xor
push
sbb
movsb
mov
dec
pushf
lea
or
cmpl
aaa
ret
or
jl
jnp
je
pop
ret
inc
ja
test
movb
add
mov
xor
pop
sub
sub
leave
xor
or
in
roll
call
outsl
cmp
mov
and
xor
lcall
lods
xor
imul
mov
sbb
das
adc
int3
ljmp
jnp
jl
mov
ljmp
or
icebp
xchg
imul
fimull
or
pop
sbb
cwtl
daa
sbb
dec
ljmp
jle
jg
sarl
push
imul
cld
loop
push
dec
inc
add
add
adc
jns
ds
sbb
and
nop
shr
push
mov
fstp
fcomps
addr16
call
cmp
nop
sbb
lea
pop
pop
jb
daa
flds
cwtl
lock
jle
push
loope
add
scas
or
aas
sbb
dec
pop
decl
sub
jb
jo
les
or
add
test
pushf
sbb
adc
sbb
or
inc
cwtl
in
xchg
jno
cmp
je
adcb
push
inc
out
mov
mov
fdivrl
push
scas
pop
cmpl
mov
aas
pop
sub
inc
movl
or
add
adc
fstps
fidivrl
or
add
mov
add
sahf
xchg
mov
inc
ret
push
mov
sub
push
dec
shlb
push
xchg
loope
arpl
mov
push
sbb
add
inc
jo
rorb
andl
ret
in
mov
loopne
insl
mov
xor
mov
cld
lahf
jle
daa
cmp
loopne
movsb
and
cmp
xchg
fld
inc
xor
xchg
imul
std
or
mov
fnstenv
not
fcompl
pusha
movsl
addb
bnd
mov
adc
mov
or
add
and
sub
push
in
sbb
in
push
in
inc
dec
or
subps
roll
sbb
push
mov
sar
push
dec
mov
push
adc
xchg
cmpl
pop
cmp
lods
adc
xchg
rorl
fimuls
insl
pop
test
lds
jge
add
mov
mov
inc
sub
or
mov
cmp
mov
mov
mov
mov
cmp
cmp
cmp
cmp
mov
rcrl
dec
lahf
roll
aam
mov
mov
add
sbb
ja
test
push
and
rcl
or
sbb
xor
sbb
xor
fistpl
mov
aad
pop
jl
out
push
arpl
fwait
inc
fwait
mov
shlb
push
xchg
sbb
add
mov
pop
pop
stos
mov
leave
sbb
adc
mov
add
sub
imul
dec
loopne
or
vmovaps
mov
cmp
pop
sub
mov
into
std
jle
push
jmp
sbbl
pusha
in
push
in
inc
lahf
insb
fs
or
in
adc
add
sbb
or
and
cld
sub
add
dec
icebp
aas
jl
pop
push
bound
test
add
mov
outsb
push
mov
leave
and
adc
sub
test
jmp
push
or
shll
enter
or
ret
shl
dec
shl
clc
add
clc
testb
dec
jbe
shll
adc
insl
cmp
jl
mov
adc
data16
imul
push
add
sub
test
xchg
clc
sub
fdiv
add
xchg
les
xchg
xor
mov
fdiv
ret
dec
mov
test
adc
inc
jnp
ss
call
lock
mov
ja
into
or
xchg
cmp
enter
insl
lret
mov
jno
xchg
pop
js
cmpl
lods
repnz
inc
sbb
inc
jo
into
das
mov
adc
jg
sbb
outsb
dec
sub
dec
add
and
sbb
sahf
fbld
aam
add
clc
cmc
mov
lock
andl
std
sbb
pusha
pop
cmp
call
js
sbb
mov
or
stc
cmpsl
add
les
inc
mov
pop
xor
mov
pop
in
aam
mov
xchg
inc
push
les
dec
cs
lock
jl
pop
mov
fmull
fstl
shl
rorl
push
jl
hlt
xchg
jne
lea
xor
inc
lock
nop
mov
repz
rcll
cmp
repz
cs
adcb
std
push
lcall
pop
xchg
mov
mov
sub
testl
stos
add
mov
push
or
push
orb
cmp
mov
pusha
push
and
pop
loopne
mov
pop
ljmp
push
cltd
jmp
inc
faddl
inc
mov
and
sar
push
jmp
test
dec
push
jmp
rcr
jg
xchg
and
ret
and
push
push
test
sbb
adc
mov
enter
xchg
mov
mov
iret
popa
mov
jge
lahf
jg
sbb
mov
orb
cltd
nop
adc
js
adc
cli
mov
add
push
jl
popf
fcomps
lret
test
mov
enter
das
cmp
std
lods
std
lahf
dec
test
jle
jne
fstpl
push
dec
mov
je
ljmp
mov
mov
xchg
xchg
je
out
fwait
jmp
stc
orl
jno
idivb
incb
mov
xor
jno
cs
inc
or
mov
xchg
out
pushf
lea
push
mov
dec
mov
inc
jb
pop
cmp
mov
mov
pop
ficompl
dec
insl
xchg
dec
fcoml
or
shl
jl
and
test
xchg
dec
jne
or
inc
lret
in
add
adcl
pop
add
mov
pop
cld
pop
cmp
lea
mov
mov
sub
loope
mov
xor
leave
test
call
jo
xchg
push
mov
or
push
out
adc
adc
lahf
adc
pop
sub
in
jne
inc
sub
adc
mov
ss
cmpb
movl
ja
cmp
inc
xor
xchg
inc
imul
repnz
push
jmp
outsl
loope
fnstcw
pushf
cmpsb
rcl
pop
leave
mov
dec
cs
stc
andl
add
cmp
test
pop
stos
in
mov
lea
test
pop
or
arpl
fs
push
pop
or
clc
nop
push
xchg
cli
cmp
out
ret
push
xchg
jle
push
or
je
enter
inc
mov
cmc
push
aad
inc
aas
inc
lea
lods
popf
ret
pushf
adc
cmc
popf
ret
xchg
lcall
sub
adc
in
cwtl
iret
cmp
inc
es
xchg
stc
mov
jo
out
aam
sbb
sbb
js
mov
dec
cmpsl
xor
pop
cmpl
cwtl
xorb
stos
lds
mov
cld
xchg
inc
cmp
push
jne
movsl
add
stc
push
pop
enter
mov
jmp
mov
sbb
movb
push
xor
cmpsb
add
adc
fsubrl
addr16
push
and
mov
mov
sub
push
pop
inc
outsl
movsl
repz
sahf
pushf
cmp
mov
in
jp
lcall
aaa
and
xor
sub
insl
dec
shl
sti
icebp
sti
cmp
mov
sahf
icebp
mov
lds
subl
inc
filds
notb
shlb
jne,pn
cmpb
popf
mov
fsubrl
and
cmpl
mov
gs
rolb
mov
pop
mov
mov
mov
in
imul
dec
mov
sub
aad
pushl
push
int
sub
mov
and
sub
push
or
push
cmpb
dec
inc
dec
cmpsl
dec
enter
out
mov
cltd
mov
dec
add
jb
lock
loope
or
add
and
scas
jns
jo
inc
add
jb
sub
xor
lret
jae
jo
fists
sub
nopl
inc
adc
xchg
push
inc
dec
mov
add
or
and
inc
outsb
dec
adc
or
xchg
aas
pop
dec
imul
test
inc
std
sub
inc
pop
inc
setnp
repz
mov
pop
inc
sbb
sub
sub
movsw
lock
sub
mov
cs
rolb
fcoml
xor
repnz
mov
pop
dec
popa
fs
testl
sub
lds
xor
push
cmp
popa
aas
sub
sbb
jmp
test
jnp
movsb
cwtl
sbb
jg
int3
cmp
adc
sub
test
jne
loopne
inc
dec
jmp
dec
pop
or
pushl
mov
rclb
loope
pop
lods
daa
mov
pop
push
sub
add
pop
jmp
fwait
cli
lea
insb
xor
fstpt
sbb
mov
loope
pop
daa
je
push
push
mov
mov
xchg
int3
nop
dec
push
ret
pop
jmp
sub
dec
rorl
shr
pop
cli
lcall
and
into
inc
mov
inc
pop
add
add
je
pop
add
or
adc
test
adc
daa
pop
mov
mov
mov
adc
std
lea
xchg
in
mov
icebp
sbb
push
sub
dec
cmpsl
sarl
inc
add
push
jge
daa
cmpsb
xor
popa
jl
js
testb
and
add
or
push
add
add
or
roll
add
push
xor
mov
sub
dec
mov
in
mov
lea
rcrb
mov
lods
pop
xor
sub
leave
lds
or
push
sbb
lds
out
jo
pop
in
enter
jnp
add
inc
mov
xchg
int3
mov
push
jecxz
or
add
add
out
mov
repz
stc
add
pop
cmpsb
lods
in
pop
add
mov
add
push
arpl
in
mov
in
scas
movsl
mov
xchg
jns
out
scas
xor
out
mov
stos
icebp
push
xor
jno
dec
out
in
adc
adc
and
insb
push
out
inc
out
and
aad
inc
out
in
in
xor
and
aad
lds
aam
popa
inc
aaa
add
mov
push
enter
inc
repnz
inc
push
icebp
ljmp
sbbl
seto
pop
aad
repz
sub
nop
mov
push
jecxz
mov
and
int3
es
push
and
and
push
xchg
pop
pop
cmp
in
cmp
xor
jecxz
xor
xchg
xchg
dec
or
in
fsubrs
xor
xchg
cmc
enter
and
and
nop
and
stos
in
dec
inc
sahf
add
mov
mov
test
add
pop
leave
inc
and
and
jb
pop
ret
xchg
xchg
and
inc
dec
dec
and
cmp
adc
mov
arpl
ds
ljmp
out
xor
nop
dec
aam
push
out
xchg
pop
and
test
jb
leave
inc
lods
lods
lods
jbe
movb
js
rorb
rorb
lea
mov
add
jbe
mov
sahf
out
mov
jo
ss
add
loopne
xor
pushf
or
xchg
push
mov
inc
add
or
sbb
clc
xor
lods
add
pop
je
addb
adc
cmp
xor
add
outsb
pusha
mov
push
xor
xchg
enter
or
pop
lcall
and
pop
lods
or
inc
and
pop
test
outsl
rcrb
push
stos
lods
xchg
adc
aad
jge
scas
or
aaa
in
test
sbb
ja
push
imul
push
jg
roll
mov
mov
sbb
xor
pusha
arpl
imul
push
jb
ljmp
sbb
lahf
movsb
pop
testb
rol
test
jo
cltd
adc
sbb
jns
mov
dec
es
popf
or
roll
iret
ds
mov
mov
out
add
or
add
push
add
clc
ret
or
call
int
jb
test
mov
add
or
out
sbb
icebp
je
jmp
outsb
lret
sub
ret
xchg
adc
std
cld
xchg
ss
sbb
lret
subb
lods
cmp
outsl
mov
push
pop
and
xor
andb
dec
cmp
je
or
addb
ljmp
and
jle
popa
add
sub
mov
sbb
mov
and
stos
bound
inc
cmp
dec
gs
add
sbb
adc
or
hlt
mov
test
jne
push
jecxz
sub
jl
test
xchg
push
cmp
fildl
addl
or
scas
and
or
push
pop
orb
inc
mov
dec
clc
sbb
pop
sub
enter
sbb
mov
or
popf
std
add
push
dec
or
ror
push
imul
sub
xchg
jno
add
or
bts
jmp
scas
repz
out
cs
pop
xor
dec
mov
mov
add
scas
lock
ret
jne
cmpl
jne
mov
cmp
je
cmp
and
lock
pop
cmp
lock
movsb
mov
ss
in
cmc
rorb
or
xchg
std
dec
test
cmp
lock
std
pop
popa
sbb
imul
add
xor
ret
mov
lahf
sbb
fnsave
jne
fcmovnb
adc
lock
clc
push
es
scas
cmpsl
pop
pusha
mov
mov
add
push
test
pop
call
cmp
ljmp
stc
mov
fs
stc
fnsetpm(287
inc
cmpl
pop
or
cmp
xchg
push
push
mov
lea
in
and
imul
push
cmp
mov
mov
mov
fs
or
sub
jmp
test
jo
rcll
pop
or
and
adc
mov
jo
jmp
or
xor
xor
mov
sbb
mov
xchg
fsubl
adc
call
push
mov
inc
cmp
sbb
and
test
mov
push
clc
cmp
mov
es
popa
rorl
insl
mov
push
inc
scas
shlb
push
sbb
jp
rcrb
xor
outsl
mov
jbe
add
mov
mov
pusha
sahf
mov
jb
in
mov
lea
pop
hlt
vandps
push
loope
imul
push
adc
fldt
mov
pop
pop
test
dec
jo
push
xlat
adc
int3
shlb
and
out
inc
xor
mov
or
shlb
stos
add
xor
pushf
aaa
push
push
pop
pop
push
push
mov
and
in
push
dec
and
pop
xor
icebp
cmp
enter
mov
or
dec
mov
inc
daa
push
mov
sbb
addr16
add
dec
or
out
sub
fidivrl
movsl
insl
es
adc
jmp
or
clc
loopne
inc
cs
je
cmp
lret
sub
or
push
aaa
jmp
js
and
cmp
push
out
ljmp
push
or
xchg
pop
jle
in
sbb
ficompl
sbb
sbb
sub
mov
scas
or
insl
push
mov
and
es
gs
rolb
sahf
sarb
mov
ds
and
mov
orl
sub
inc
xchg
sbb
pop
mov
rcr
shl
xor
xchg
lock
scas
mov
in
xchg
pop
clc
int3
cmp
rcrb
jbe
sbb
adc
dec
data16
lcall
js
aas
lea
add
add
inc
loop
pop
es
lahf
pop
fdivrs
lea
push
xchg
rcl
fisubs
mov
pop
fiaddl
or
loopne
loopne
enter
je
call
pop
cltd
enter
push
sub
lea
add
dec
push
fldenv
sub
int
mov
dec
mov
fisubs
push
pop
push
int
sarl
mov
lea
daa
push
popa
sbb
lock
fwait
negl
movw
mov
adc
movb
xor
cmpsb
das
xchg
pop
dec
inc
add
out
push
or
jb
push
push
int
inc
mov
call
and
sub
push
inc
add
dec
das
push
fidivrs
frstor
cmp
fs
push
or
or
add
arpl
fbstp
daa
faddl
add
or
aas
cmp
or
inc
aas
js
rorb
and
into
sub
shll
cmc
mov
xor
adc
inc
std
nop
fstpt
in
jmp
pop
push
mov
ljmp
fmuls
fs
sbb
pop
cmp
pop
ret
add
xor
jb
hlt
or
jns
popa
or
add
ret
add
movsl
gs
inc
jo
sbb
dec
jne
push
clc
mov
std
sub
xlat
test
push
orb
jmp
pop
clc
sbb
negb
or
arpl
loopne
dec
push
inc
inc
sub
push
fcmovnbe
add
mov
jne
sahf
test
inc
jmp
call
fchs
push
daa
je
push
mov
movl
sbb
add
loop
sub
lods
inc
add
cmp
jmp
icebp
test
cmp
add
push
push
fistl
dec
movsb
movsb
adc
push
jno
mov
in
out
mov
push
push
inc
test
das
add
div
shlb
push
das
cmp
sub
shl
mov
adc
lock
cmp
jmp
cmp
int
nop
adc
and
mull
jbe
adc
mov
test
sbb
adc
bound
lock
not
push
lret
mov
outsl
hlt
push
test
jb
jae
mov
sub
adc
jecxz
pop
mov
jb
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
jle
or
mov
in
shll
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
sarl
fbstp
jmp
mov
or
jl
orb
or
and
and
test
jns
pop
adc
stos
sub
lret
lahf
xor
xor
inc
js
cmpsl
repnz
sahf
cmp
inc
adc
adc
mov
pop
mov
imul
loop
rcrb
out
insb
test
movsb
pop
pop
rclb
in
std
ja
and
iret
jmp
addr16
sub
add
movb
fiaddl
leave
push
clc
stc
add
popf
jo,pt
mov
lea
and
rcl
pop
pmulhuw
hlt
push
lock
cld
mov
and
push
add
inc
adc
js
sarl
and
idivb
push
insb
ja
jg
adc
ds
out
cmpl
aas
sbb
pop
inc
or
jne
pop
xchg
dec
jnp
inc
dec
and
add
sub
aas
adc
jne
xchg
sbb
cmp
jle
lret
sbb
dec
inc
pusha
xchg
imulb
imul
popa
mov
push
sbb
pop
and
or
js
mov
sub
sub
sbb
aad
and
into
add
insb
mov
inc
aad
in
cld
sti
std
mov
adc
idivl
cwtl
sbbb
hlt
jmp
adc
jno
inc
xor
lods
pop
hlt
in
out
jecxz
outsb
dec
fcmovnbe
loopne
xor
push
es
mov
cmp
xchg
or
cmp
icebp
fwait
loopne
sub
mov
adc
mov
inc
jns
cmp
push
in
inc
loope
movsb
je
movl
or
negb
aas
les
cs
sahf
clc
lock
jb
pusha
daa
add
and
or
push
jmp
dec
mov
xor
loopne
sbbb
adc
pop
lea
adc
test
lds
mov
xchg
leave
lock
sbb
aas
push
hlt
mov
and
fdivs
enter
les
loope
je
jb
mov
pop
xchg
fadds
ret
sub
cmp
push
sbb
in
add
push
adc
sahf
push
or
fcoms
imull
lock
mull
lsl
jmp
push
sar
mov
shr
rcr
shr
rcr
or
mov
inc
loop
div
pop
dec
mov
lock
pop
jb
cmp
or
cmp
or
jns
add
xor
and
adc
stos
mov
fcmovbe
lret
mov
pop
imul
clc
dec
sbb
or
adc
mov
lahf
push
mov
add
mov
push
push
mov
jecxz
ss
inc
in
addb
sub
out
cmpsl
jge
jge
xor
add
inc
clc
or
cmpsb
fidivs
sub
shr
loopne
jo
icebp
cli
xchg
push
aam
dec
or
adc
popf
dec
popf
inc
mov
mov
mov
test
icebp
inc
ret
lcall
mov
mov
cmp
or
mov
push
sub
cmp
insb
lock
push
fs
call
jmp
push
push
sbb
es
insl
push
clc
testb
lret
jmp
dec
and
inc
pusha
sbb
movnti
sub
js
sub
or
sarb
push
jp
xor
mov
sbb
js
cmp
add
dec
push
xchg
adc
and
mov
jne
xchg
test
pop
add
and
pop
inc
sub
xchg
cmp
mov
insb
loopne
daa
daa
xchg
test
pop
pop
pop
es
adc
push
cmpl
dec
pop
dec
add
test
push
pop
adc
fstpl
out
sub
add
add
hlt
pop
inc
enter
pop
clc
mov
mov
pusha
adc
jns
jp
sub
sub
add
jecxz
xchg
cs
and
or
add
testb
rcrb
xchg
fdivrl
lods
fsubrs
adc
fwait
loope
sub
enter
iret
decl
mov
adc
clc
mov
ds
les
adc
jo
adc
push
mov
lock
cmpl
xor
mov
jmp
mov
popa
push
sub
mov
add
push
mov
fisubs
mov
and
cmp
pusha
inc
xor
add
shlb
dec
mov
sarb
sbb
jno
add
add
sub
cli
sbb
lock
loopne
add
push
inc
dec
or
or
fs
xor
and
fwait
inc
or
movsb
pop
fwait
jge
pop
aas
jmp
adc
outsl
push
xchg
outsl
sub
enter
adc
jo
push
cmp
or
xchg
fwait
push
dec
rorl
fdivrs
inc
ret
pusha
mov
inc
mov
mov
inc
fidivl
das
jmp
sbb
mov
movb
push
or
inc
js
ja
push
lea
shlb
xorb
sub
cmp
push
xor
cmp
inc
jmp
cli
fdivs
inc
pop
lds
jecxz
notb
add
push
inc
mov
jge
aas
sbb
cmp
dec
enter
in
test
sbb
pop
je
dec
pushf
sbb
jmp
dec
je
mov
loope
inc
lock
xor
icebp
xor
jmp
sub
jbe
insb
jne
push
adc
and
or
incl
cmp
mov
stos
xor
shrl
ljmp
jg
ljmp
inc
cmp
subb
dec
adc
add
repz
pop
xor
lahf
iret
jg
jg
outsl
inc
or
jbe
jg
jle
xor
jg
jg
jg
jo
loop
nop
shll
jne
mov
push
repnz
in
rclb
mov
ffreep
lea
lea
inc
out
xchg
subl
ss
xchg
add
dec
sbb
call
or
insb
das
add
inc
inc
push
negl
incl
inc
ret
mov
lret
ret
push
div
push
mov
shr
dec
sbb
xchg
pop
les
inc
jno
pop
push
rol
hlt
mov
pop
cltd
pop
inc
adc
push
inc
push
inc
call
dec
lsl
cmp
and
dec
push
and
mov
cwtl
xor
sbb
pushf
sbb
dec
loope
in
in
and
and
ljmp
shrb
push
and
jo
add
cli
and
jo
negb
shl
sbb
clc
or
cmp
sbb
jnp
mov
adc
pop
add
lret
cmp
loop
iret
mov
xlat
pop
inc
push
dec
adc
mov
ds
divb
es
jecxz
push
pop
rcll
mov
jecxz
sub
inc
outsb
pop
push
or
inc
pop
movsb
sbbb
or
orl
inc
out
push
outsl
test
shlb
pop
pop
cmp
icebp
sbb
rcl
mov
pop
ja
sub
movsl
stc
loopne
addr16
rorb
inc
push
dec
lock
test
lock
add
sub
out
and
push
inc
and
xor
mov
and
or
xor
mov
or
je
xchg
cli
adc
outsb
jg
and
lea
lea
or
xchg
rcrb
adc
push
jl
btc
and
cmpl
or
sub
arpl
jmp
pop
je
cmp
fiadds
addr16
outsl
les
sbb
roll
dec
pop
inc
mov
cmpl
add
ret
pop
jno
push
dec
lret
xor
loop,pn
mov
mov
sub
xor
pop
sub
dec
or
fiaddl
fidivrl
inc
cmp
ds
icebp
xor
add
jbe
sub
ds
es
shlb
inc
or
adc
or
fnsave
add
add
add
jnp
adcb
pusha
rclb
leave
or
fs
ja
aad
dec
je
test
cmp
imul
jne
push
jnp
mov
add
xorb
add
pop
nop
ljmp
lods
add
mov
jg
xchg
push
ja
bound
popa
dec
mov
pop
or
je
iret
xchg
fisubl
out
data16
es
pusha
xchg
ss
pop
pop
mov
je
xorb
rcrl
or
in
je
sub
push
mov
sub
pusha
push
test
ss
cmp
mov
xor
loopne
mov
jmp
addb
pop
jo
jl
loope
add
insl
mov
jmp
lret
das
xor
sbb
xor
pop
icebp
arpl
gs
adc
add
pop
pop
inc
sub
and
cmp
dec
cmp
add
movsl
into
lods
adcb
ss
jmp
jl
jge
or
jbe
or
add
adc
push
push
stc
sbb
inc
add
inc
mov
test
das
flds
xchg
bound
push
clc
leave
or
push
push
or
fmuls
test
sysexit
jp
sti
cwtl
loope
fsubr
popf
mov
jmp
mov
cli
popf
pushl
leave
icebp
mov
or
ret
cmp
fbld
push
jbe
xor
dec
sub
add
xor
xor
xchg
or
mov
inc
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
xor
orl
jbe
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
add
ja
loope
movsl
mov
outsb
dec
iret
and
adcb
je
pop
dec
cmpsb
mov
sub
xchg
push
cmp
adcl
sub
add
inc
fdivl
or
stos
jl
into
incb
rorb
adc
jmp
sbb
push
jo
jb
test
stos
popf
add
inc
push
dec
mov
roll
lods
push
fdivrl
or
push
xor
inc
jle
sub
cmp
xor
pusha
clc
push
xchg
jmp
dec
push
in
mov
dec
cmp
xchg
add
cmp
out
int
lock
jo
sub
jo
adc
sbb
mov
sub
add
mov
pop
jge
push
push
shrb
mov
mov
movsb
jne
lret
sti
lods
dec
dec
dec
jae
imul
sbb
nop
or
push
jmp
and
pop
and
mov
push
mov
bound
rcrb
sbb
or
xchg
test
cwtl
or
mov
int3
pop
outsb
push
and
mov
sub
cmp
mov
addb
mov
lahf
xchg
stos
loopne
je
mov
push
jge
mov
subb
xor
js
mov
jg
push
add
inc
testl
mov
jecxz
fldl
pop
push
rclb
mov
iret
pusha
adc
mov
mov
fisttps
and
test
lea
cmp
xchg
sarl
jecxz
push
push
shll
mov
push
mov
icebp
sub
dec
mov
dec
dec
xor
dec
hlt
sbbb
fdivs
jne
adc
cmp
stos
pop
stos
pushf
push
fsubrs
cwtl
jge
push
mov
repnz
mov
lcall
cmp
cmp
mov
mov
add
ss
cmp
cmp
jle
xor
flds
jle
jne
loopne
adc
dec
ljmp
loopne
dec
push
fsubrp
lods
sarl
add
mov
mov
adc
imul
add
mov
push
inc
jge
movsl
and
mov
lea
enter
es
mov
adc
or
fdivs
or
and
or
test
mov
inc
dec
pop
push
push
rcl
jae
stc
jne
aas
mov
push
or
mov
rcrb
ja
mov
jmp
ds
inc
testl
adc
jne
lods
dec
loope
out
les
xchg
int
rorb
sub
jne
inc
or
test
sub
sbb
push
cmc
int3
or
insl
xchg
pop
dec
or
ljmp
cli
xchg
test
fistl
ret
fcoms
inc
add
sub
fsubl
or
adc
jle
add
ret
std
dec
mov
jb
mov
loopne
aam
push
inc
ja
add
incl
cmpl
insl
mov
inc
pushf
mov
mov
or
sbb
sti
jg
add
mov
xor
or
dec
sbb
mov
cmc
lcall
aam
gs
call
testb
shr
inc
shr
aas
or
push
clc
pop
mov
bound
or
adc
inc
mov
adc
inc
sub
add
test
lods
idivl
inc
cmpsb
push
shrl
shl
shr
or
mov
shl
call
pop
jne
outsb
inc
xchg
pop
inc
mov
mov
insl
or
ja
push
xorl
sub
jne
push
cmp
sub
sub
rcr
jo
jnp
fiaddl
mov
mov
ljmp
jmp
pop
sub
lods
mov
or
outsb
les
nop
test
add
xchg
dec
int3
int3
jmp
jp
jp
out
or
daa
mov
and
lret
into
jmp
lods
movsb
icebp
add
or
mov
dec
and
les
int3
and
pushf
sbbb
xorb
lret
mov
xchg
pop
jns
mul
test
sbb
add
pushw
push
movups
les
pop
mov
inc
mov
inc
in
push
js
xchg
xchg
add
cmpsl
mov
test
inc
add
push
and
repz
cmpsl
push
cwtl
shl
cmp
dec
sub
ljmp
rcll
sbb
add
testb
adc
sbb
mov
sarb
subb
movsb
clc
lods
lods
sbb
jg
inc
sub
outsl
lcall
cmp
mov
popa
pusha
xor
or
pop
push
push
ret
dec
nop
cs
or
sub
mov
arpl
sbb
jo
cmpb
out
lahf
jne
out
stc
in
and
cmp
fwait
and
or
jns
sbb
ret
in
xchg
sbb
add
xlat
or
mov
or
mov
push
lea
out
pop
imulb
cmpsb
cmp
adc
int
mov
rclb
and
push
in
lea
xor
fwait
pop
xor
stos
pushl
je
add
testl
push
pxor
shll
popf
inc
jne
data16
mov
aaa
adcl
movsl
sti
push
inc
adc
and
ror
lahf
out
inc
inc
inc
jo
mov
shrb
aaa
mov
out
and
inc
jg
adc
divb
sub
xor
xchg
add
sub
add
loopne
jne
cmc
jbe
sbb
cli
pop
pop
ret
loopne
mov
rorl
mov
bound
add
out
outsb
dec
cli
shr
add
call
or
and
add
std
lods
ret
or
cld
adc
inc
rcrb
popl
jo
movsb
dec
xlat
jmp
outsl
into
cmp
mov
push
or
sub
pop
nop
icebp
icebp
push
adc
sbb
jmp
lea
call
into
mov
cmp
sub
cli
jmp
loopne
mov
or
sub
mov
jg
mov
ret
rorb
movsl
pushf
mov
imul
sbb
dec
fcoml
aam
xchg
fdivrs
loopne
sbb
jmp
gs
push
dec
mov
mov
sahf
mov
push
add
add
in
loopne
inc
pop
cmp
xor
fdivrl
pop
jmp
ds
dec
inc
loope
push
lea
sti
insl
jmp
add
leave
shlb
and
mov
pop
mov
sbb
adc
rcrl
sub
cmp
adc
xchg
mov
xor
xor
or
shll
add
push
xor
pop
ret
test
ret
insb
aam
outsl
adc
ljmp
mov
sub
pop
pusha
rorl
stos
ds
cmpb
push
push
jo
or
imul
lock
and
sbb
add
sbb
test
addr16
testl
and
mov
enter
xchg
fdivr
sbb
lahf
adc
push
hlt
mov
andl
lock
adc
mov
loopne
adc
sbb
out
lret
add
cld
cmp
inc
mov
fsubs
lret
push
push
loopne
scas
push
ret
or
jmp
bound
dec
inc
outsb
and
pop
adc
adc
hlt
pop
pop
jo
pop
lea
icebp
or
push
lods
jnp
movsl
sbb
pop
dec
cmp
jo
test
inc
pop
jo
cmp
js
movl
add
fidivl
mov
imul
push
cwtl
divb
jbe
mov
int
push
test
ja
or
add
addb
sbb
loopne
add
add
add
xor
cmp
shll
sbb
sbb
mov
mov
repz
push
jmp
push
push
adc
call
js
out
test
push
jae
push
loop
pop
sbb
and
pop
mulps
aas
mov
jb
neg
dec
xchg
push
mov
inc
mov
sbb
sbb
cmp
pusha
mov
setnp
dec
std
ret
sub
lea
scas
loope
fs
xor
jae
mov
outsl
popa
mov
cli
or
shufps
stos
insl
and
mov
push
addl
push
addr16
xchg
lock
lahf
fwait
mov
fisttpll
in
push
inc
pop
jne
mov
daa
ret
sub
enter
or
cwtl
pusha
jne
push
dec
mov
movsl
pop
jbe
lock
jae
in
pop
jns
subb
add
jg
fcom
push
in
add
cltd
mov
mov
test
sub
and
movsb
inc
cmpl
add
inc
xor
daa
movsl
jne
roll
push
lea
int
lahf
cmp
jmp
add
add
mov
test
and
gs
xor
or
sub
lods
notl
or
mov
add
add
ficoms
stos
mov
and
ljmp
int
mov
jg
jmp
inc
gs
adc
adc
push
outsl
sbb
sbb
push
adc
ret
ret
and
fstpl
lcall
scas
lahf
adc
sub
jne
popa
xchg
mov
fidivrs
jno
xchg
cwtl
inc
je
adc
sub
cmpb
aas
and
addr16
dec
xor
or
jmp
sub
jecxz
sbb
jmp
xor
clc
jmp
test
fstpl
rolb
cmp
or
inc
ret
or
jecxz
sub
sbb
popa
jecxz
lock
mov
adc
mov
lds
mov
adc
adc
fisubrs
or
xor
xor
inc
add
test
sub
xchg
adc
mov
jbe
and
and
fs
les
fimuls
push
or
fcompl
push
push
mov
dec
cmp
mov
and
cmp
mov
xchg
add
cmpsb
adc
and
lods
sub
loop
mov
xlat
adc
xor
or
scas
lock
insb
inc
fisttps
xor
mov
mov
cld
data16
add
push
jmp
test
push
mov
ds
cmp
pop
jl
sbb
fcos
stos
jmp
addl
js
pop
sbb
fst
clc
jmp
js
add
push
cltd
inc
call
and
and
mov
mov
mov
jb
and
and
ret
dec
add
adc
aas
add
clc
dec
pop
or
cli
adc
push
ret
xchg
aad
mov
in
pusha
push
ret
cwtl
enter
dec
and
loope
or
dec
add
lret
fbstp
int
xor
jge
mov
lods
and
jl
push
sub
rclb
movsl
mov
pop
mov
and
xlat
dec
jecxz
pop
add
fsubs
mov
stos
xchg
data16
add
adc
mov
js
testl
les
inc
fstpt
es
mov
jecxz
pop
loope
loopne
shl
mov
dec
dec
jl
mov
lea
dec
in
and
sbb
add
or
and
shll
out
lds
push
andl
ss
cmpsb
loope
sbb
mov
daa
loope
mov
cmp
dec
arpl
mov
icebp
or
fcoml
cwtl
ror
fldl
push
jne
push
aas
out
sti
test
inc
int
xor
pop
and
aas
xor
rcr
push
push
rolb
xor
les
inc
inc
mov
xor
scas
push
inc
clc
adc
insl
push
std
sub
adc
pop
sbb
sbb
sub
sbb
movhps
jne
push
imul
or
pusha
sub
add
lea
add
push
push
mov
jne
pop
xor
outsl
ss
inc
aaa
arpl
jl
sbbb
test
int3
testl
movsb
mov
imul
add
lds
sahf
js
jb
imul
dec
mov
rol
or
cmp
sub
xor
pop
adc
lock
or
jg
cmpb
out
lock
ror
or
jne
orl
js
xor
fwait
mov
push
mov
or
or
xor
mov
and
pcmpeqb
xor
pop
or
and
adc
mov
pop
jmp
mov
mov
daa
or
lea
add
mov
paddusw
sbb
pop
lods
add
outsl
xchg
push
adc
cld
cwtl
jl
test
fbld
mov
push
inc
pusha
jne,pn
xchg
mov
movl
pushf
cmp
mov
les
test
cmp
mov
mov
push
adc
cli
fsubr
fst
popf
mov
xchg
mov
scas
fadds
fs
cmp
pop
jmp
cwtl
cmp
add
or
xchg
and
mov
roll
push
adc
cwtl
mov
inc
fs
or
pushl
adc
pop
fldl
int
cmp
roll
lret
out
xor
fadds
cmp
lcall
xor
subb
mov
jno
or
jo
fdiv
push
xchg
stc
jb
push
inc
pop
and
flds
xor
mov
ljmp
pop
push
adc
notb
int3
push
inc
mov
xorb
adc
ret
repz
adc
jo
mov
fadds
mov
xor
or
inc
and
lcall
adc
repz
xor
sbb
shrl
addl
mov
xor
mov
decl
jp
lock
add
push
jnp
ret
nop
adc
cli
push
mov
jne
push
xchg
jbe
iret
outsl
dec
dec
addr16
nop
xor
cmpb
addr16
pop
or
adc
push
push
scas
mov
xchg
test
enter
mov
jnp
fsubrs
mov
pop
push
dec
or
in
jno
mov
or
into
adc
aaa
lcall
xchg
push
push
sub
xchg
jp
sbb
dec
dec
adc
popa
cld
cmpsb
imulb
aad
adc
cmp
adc
inc
andl
xor
xchg
imul
fucomi
mov
ja
cwtl
xor
ja
out
inc
mov
fcompl
or
mov
cmp
and
add
mov
mov
pop
inc
mov
dec
jne
lret
add
pop
stos
out
shl
or
cmp
add
pop
xchg
cmpsb
stos
pop
shrl
or
adc
je
stos
cmp
sbb
stos
push
xchg
add
arpl
inc
sub
and
adc
sbb
cwtl
sbb
dec
jg
cmp
jmp
outsb
es
inc
popf
push
xchg
test
icebp
push
in
mov
in
loop
sbb
fstps
xchg
ret
cmpb
and
dec
fldl
xor
cmp
push
xchg
xchg
xchg
xchg
rorl
or
outsb
mov
xchg
adc
ss
dec
dec
dec
sub
xor
dec
dec
dec
sbb
cmp
dec
fimull
cmovs
push
pop
daa
daa
daa
pop
add
daa
daa
daa
daa
insb
jo
js
mov
daa
jl
cltd
fs
negb
adc
mov
xchg
cwtl
xchg
dec
es
pushf
mov
fs
shlb
dec
xor
enter
xchg
or
mov
xchg
dec
fsub
in
xchg
dec
xor
in
aam
dec
xor
lock
clc
cld
daa
cmp
and
add
add
cmpsb
or
adc
and
sbb
xor
and
and
sub
and
dec
xor
leave
adc
xor
gs
xchg
imul
push
dec
es
fs
pop
pop
add
pop
pushl
mov
shlb
add
je
test
or
mov
mov
xor
xchg
xchg
pop
roll
xchg
or
adc
or
xor
adc
sbb
sbb
and
xchg
push
xor
int
test
cli
lods
int
xor
inc
mov
mov
dec
xor
dec
mov
sarb
cmp
mov
pop
notl
mov
sub
rorl
push
ret
fildll
dec
xor
and
call
mov
inc
inc
movsb
dec
mov
cmp
or
jecxz
xchg
fsubl
add
bswap
and
mov
xchg
dec
add
in
xchg
je
push
test
and
sahf
popa
xchg
xchg
add
or
adcl
push
and
dec
shlb
enter
dec
xor
adc
or
cmp
jmp
loope
es
lret
and
paddb
out
ret
js
lock
xchg
xorl
add
xchg
test
add
shll
inc
sbb
je
or
or
push
mov
fwait
les
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
fwait
out
jmp
xchg
jmp
test
cmp
and
stos
jp
or
aaa
jge
je
pop
push
xchg
flds
and
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
and
insl
dec
in
fstp
ds
sub
mull
pop
cmp
scas
in
roll
testb
cmp
adc
sti
add
or
fists
xor
mov
xor
outsl
ss
ret
mov
push
mov
dec
jne
orl
sub
push
and
dec
divl
dec
xor
add
out
and
orb
push
jb
sbb
lods
mov
ret
or
loope
adc
inc
push
fstps
jmp
fisttpll
sbb
ds
fucomi
inc
add
cmc
ret
adc
orb
xchg
push
fnstenv
pop
sub
shl
fcomps
inc
adc
xor
test
mov
cmp
xchg
push
or
and
inc
hlt
pop
dec
push
sub
mov
insb
sbb
ret
punpckhwd
cli
dec
jmp
into
mov
sub
jmp
sub
in
jp
push
or
pop
or
dec
psubusw
jg
sbb
adc
mov
scas
add
xor
mov
and
jnp
outsl
test
mov
pop
in
mov
mov
cmp
loop
and
repz
pop
sahf
and
in
inc
rorl
sbb
push
cli
bnd
or
adc
movsl
or
pusha
loop
and
cli
shrl
mov
pop
orl
fchs
lcall
push
cld
xchg
pop
lds
pop
jmp
pop
push
push
nop
pop
add
icebp
pop
sbb
cmp
loopne
cmpsb
dec
inc
sub
daa
add
push
lcall
push
and
adc
jg
xor
int
or
fisubs
sbb
cmpsb
lret
lock
pop
adc
mov
xchg
repnz
or
add
sarl
add
add
ret
call
inc
cmp
je
mov
adc
or
pop
cltd
cmpsb
imul
and
hlt
push
rclb
movsl
and
out
and
mov
iret
and
xchg
cmp
jge
sti
lds
repz
pop
fstpl
add
in
imulb
jno
aad
or
and
loopne
push
xor
push
add
push
cwtl
and
test
pusha
xor
or
orl
pop
mov
jno
ret
insl
scas
adc
mov
adc
lock
in
push
mov
inc
add
push
clc
or
aas
pushl
cld
sub
icebp
js
fcoml
sar
das
adc
add
jecxz
and
xor
xrelease
cwtl
imull
test
or
mov
lock
xchg
faddl
jo
lea
and
sbb
inc
cmp
hlt
sbb
mov
incb
inc
xor
push
sub
call
pop
lret
sahf
mov
lock
or
mov
and
decb
out
cmp
sarb
and
pop
rcrb
jmp
add
into
pop
lods
sbb
test
in
or
enter
add
rcr
pop
fstps
jnp
lock
neg
lods
push
xor
test
mov
imul
mov
icebp
das
cmc
dec
in
outsl
test
jp
gs
or
imul
push
or
add
out
mov
push
iret
jle
stos
push
xor
push
in
push
cmp
nop
fsubl
sbb
rcrl
jbe
sub
push
push
mov
sbb
adc
xor
gs
dec
ljmp
setnp
jge
movswl
sbb
xor
fnclex
and
lcall
not
dec
xor
in
lods
dec
sbb
mov
insl
or
lock
leave
push
push
mov
or
sub
push
aam
test
fwait
xchg
jbe
cltd
fsubs
outsb
fwait
sbb
pop
mov
repnz
jo
icebp
jle
movsb
fldpi
xor
jo
js
xor
shll
xlat
dec
jecxz
add
inc
je
sbb
mov
scas
xsaveopt
push
inc
xchg
pop
mov
xchg
ja
or
andl
sbb
or
inc
call
mov
jl
icebp
pop
shrb
or
push
sbb
aam
jecxz
xlat
jg
fistl
mov
test
pop
jne
fldt
imul
gs
add
imul
out
inc
lret
push
ja
movsb
or
outsl
inc
test
clc
inc
mov
fwait
pushf
scas
cltd
mov
inc
and
mov
xor
adc
or
jo
mov
push
nop
lret
je
inc
or
fdiv
mov
shll
push
stc
push
mov
jbe
shlb
test
shrl
negl
cmp
xchg
or
or
fs
mul
cmpsb
push
or
inc
add
loope
rcrl
les
cmp
mov
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
push
and
add
cmp
and
inc
mul
pop
test
pop
mov
jl
xchg
rcr
jne
lahf
lock
stos
jp
pop
pop
int
jmp
sub
cli
clc
inc
sbb
dec
push
mov
adc
cltd
sbb
pop
add
lcall
scas
scas
fwait
mov
incl
add
inc
lea
pop
xor
lret
dec
movb
rolb
ljmp
not
test
bswap
and
add
pop
repz
outsb
mov
pop
and
mov
out
sbb
mov
inc
adc
iret
cmpsb
mov
mov
mov
sub
or
or
cmp
inc
lahf
jmp
xor
dec
cmp
or
jp
or
jae
add
adc
dec
decb
sub
jns
fsubrl
sarb
push
and
fdivrs
enter
mov
jge
je
inc
mov
mov
cmp
cmpb
inc
stos
inc
std
push
dec
cmp
or
or
dec
xor
cmp
movb
das
lahf
push
jnp
sub
loopne
mov
shl
sub
sub
mul
lea
mov
and
loopne
or
ds
push
or
or
cs
aam
out
sub
mov
jecxz
and
inc
shl
push
xchg
inc
faddl
sbb
or
lock
or
dec
jns
mov
push
adc
dec
lds
faddl
cli
push
sbb
test
push
pop
mov
rol
jle
mov
into
loopne
shl
test
lcall
cmp
aas
or
mov
lods
fsubr
pop
pop
push
push
jb
inc
jae
and
repnz
incb
jno
clc
aam
mov
dec
jns
cmp
and
pop
movsl
mov
cmc
hlt
push
pop
lock
aas
mov
mov
pop
daa
xchg
bound
cmc
cmp
sbb
adc
xorl
add
popa
sbb
and
cld
dec
add
push
cmp
andl
out
into
lea
jo
out
loop
fwait
call
and
mov
and
and
in
sbb
sub
mov
inc
xchg
jge
testb
shl
test
xor
add
shl
or
fidivl
or
add
cmp
sub
lret
scas
test
and
or
mov
add
add
sub
push
xchg
inc
add
cmpsl
inc
cs
inc
inc
add
les
or
ss
je
dec
mov
inc
dec
pop
xchg
lea
adc
jne
mov
mov
pushf
jmp
inc
stos
xor
inc
mov
loop
rcrb
cmp
mov
inc
push
jb
mov
push
xchg
push
inc
mov
mov
shll
subb
jp
pop
or
insl
lds
add
pop
stos
adc
xchg
xchg
adc
inc
lods
std
pop
jnp
cmc
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
lock
inc
mov
mov
int
inc
add
call
subl
pushf
lret
sub
add
and
mov
test
in
dec
sbb
jmp
xor
js
sbb
xor
mov
xchg
pop
or
inc
push
add
adc
jno
add
adcb
jecxz
xor
andl
jne
xlat
fists
inc
loope
dec
fdivs
or
add
jno
cmp
adc
push
pop
sbb
jge
mov
dec
mov
cmp
test
sbb
popf
sbb
push
cmpsb
adc
aas
sub
sub
lea
out
jle
pop
sub
insb
pushf
cld
mov
icebp
add
sbb
add
add
lods
rorb
cmp
fiadds
nop
push
pop
push
or
movsl
push
shr
je
rorb
ret
inc
inc
push
mov
mov
jg
dec
dec
jns
neg
movb
rorb
jl
cltd
push
enter
int
mov
lock
add
fisubs
ror
jne
push
rorb
fisubl
push
push
dec
add
sub
popa
fadds
inc
mov
aam
out
ret
sbb
adcl
ret
rcl
and
sbb
pusha
mov
pop
jg
ret
jmp
add
mov
or
fnstenv
adc
adc
cmp
rclb
or
sti
cmp
xor
and
sbb
xlat
jo
and
rcrl
jecxz
and
outsl
addr16
aaa
push
jmp
xor
mov
pop
mov
push
jne
jae
or
leave
pop
data16
push
fadd
sub
sbb
xor
jno
bound
xor
movsb
sub
jge
adc
and
jb
mov
les
or
dec
ss
or
mov
addb
dec
enter
sub
xchg
sahf
adc
adc
adc
cld
push
and
push
lret
mov
loopne
ss
imul
xchg
incb
pop
dec
loope
pop
push
fmull
sub
jae
enter
and
divb
push
jbe
xlat
dec
xor
inc
xor
dec
and
add
mov
loope
adc
push
js
into
mov
jg
dec
and
add
insb
movb
or
pop
shrb
je
jge
inc
dec
push
inc
popf
neg
sbb
subl
fs
push
pop
mov
nop
ret
or
jne
adc
mov
xor
xor
js
ljmp
inc
xor
in
call
jmp
inc
xor
mov
jb
sub
xlat
push
add
sysexit
shll
fisubs
push
or
xorb
nop
mov
add
dec
inc
adc
and
lods
mov
inc
and
ret
sbb
sbb
dec
movsl
pushf
ss
jbe
fs
das
cmc
insl
cld
add
hlt
shrd
sbb
sub
dec
cmp
add
test
push
movsl
clc
cwtl
xor
jb
add
pop
push
insl
clc
inc
and
xor
out
dec
arpl
xchg
cld
sub
xor
cmp
cmc
loopne
lcall
pop
mov
add
jno
or
shll
sbb
jnp
mov
and
lock
sbb
js
jg
leave
js
fdivl
xor
jmp
dec
shrb
adc
xor
cmp
sarl
mov
jae
push
shll
xorl
add
mov
push
lock
mov
mov
push
jg
mov
mov
enter
dec
xor
or
or
sbb
cmp
rorl
jnp
in
push
mov
sbb
and
cmpb
es
cmp
xchg
outsl
mov
mov
adc
or
dec
hlt
data16
scas
jp
imul
ja
jle
in
push
sbb
je
xlat
ss
jmp
lock
inc
sahf
fwait
fwait
xchg
adc
mov
call
loopne
js
cli
ret
aaa
push
sbb
sub
xor
jle
push
mov
push
add
add
rcl
das
push
repnz
je
adc
and
and
jbe
add
in
jl
into
rol
add
sbb
adcb
sarb
fistps
loop
or
nop
adc
cmc
orl
pop
push
divb
jmp
enter
nop
push
xchg
xchg
inc
inc
sub
inc
dec
sub
adc
leave
xor
enter
jle
mov
push
orl
dec
out
mov
cld
jl
loopne
jge
sbbb
popa
push
mov
inc
push
add
add
and
jmp
xor
lea
sahf
clc
gs
fbstp
outsb
outsb
or
pop
data16
cmpsl
cmp
scas
add
ss
inc
popa
je
inc
je
dec
or
fsubr
xor
or
pop
add
sub
dec
imul
sbb
popf
ljmp
mov
cmp
pop
sarl
push
add
sub
and
xor
inc
rolb
push
pop
cmp
je
push
xchg
mov
inc
test
dec
or
cmc
mov
xchg
lret
daa
push
adc
lret
test
adc
xor
jp
testl
jl
xchg
sarl
and
hlt
int3
lds
fs
test
push
and
sub
aam
test
sbb
cmp
notl
sbb
je
cmp
jle
push
jbe
push
sbb
daa
mov
popf
cwtl
push
cmc
add
inc
lea
push
pop
pop
das
lea
mov
adc
das
push
mov
cmp
ret
mov
mov
adc
shll
es
pop
aam
aam
jg
mov
cld
pop
inc
arpl
dec
cltd
mov
push
shll
icebp
fnstcw
push
push
push
dec
pop
xor
dec
ljmp
pop
sub
sub
fdivrl
insl
outsb
dec
or
push
cmp
movsl
add
or
xchg
dec
ljmp
inc
rol
test
jmp
insl
push
push
iret
test
sub
mov
cmpl
xor
push
or
push
call
mov
push
mov
ss
or
mov
dec
add
jmp
push
mov
pop
int3
push
cmovge
out
mov
sub
or
aam
scas
nop
icebp
mov
add
inc
jb
ss
or
add
mov
fcomip
jg
sub
je
dec
je
dec
push
push
jmp
or
jmp
pop
test
fs
and
cmp
cltd
orl
pop
adc
jmp
imul
jno
add
aad
inc
or
sbb
data16
lret
and
jo
mov
push
and
add
sbb
add
inc
addl
cmpsl
add
adc
sbb
and
inc
xchg
fwait
jp
mov
or
test
rolb
or
insl
mov
add
push
fimull
fcoml
pop
adc
adc
xchg
adc
adc
into
sub
inc
sub
xor
sbb
mov
pop
pop
pop
xor
cmp
jecxz
xchg
sbb
cmpl
xchg
pop
cmp
cwtl
test
adc
pushfw
and
es
inc
ficomps
data16
insb
dec
add
inc
add
xchg
add
call
adc
call
adc
or
inc
decl
cmp
xor
shr
add
or
mov
push
add
shr
or
mov
les
adc
test
and
add
mov
insl
xor
lock
xchg
cs
mov
hlt
jp
pop
pop
or
jbe
jle
ja
add
jl
in
sbb
cmp
test
adc
or
dec
pop
pop
sbb
push
pop
or
mov
and
inc
adc
test
bound
xor
lret
mov
mov
lret
pusha
xorb
mov
jmp
push
pushf
stc
rolb
dec
pop
inc
movsl
out
mov
xor
nop
mov
inc
sbb
inc
pusha
cmpsb
and
ror
aam
xchg
es
mov
or
ficoms
nop
push
sbb
shlb
add
push
add
shlb
test
dec
push
cmp
pusha
roll
xchg
mov
pop
inc
mov
shll
pop
inc
imul
sub
imul
fs
nop
test
dec
rolb
pop
sub
add
call
je
adc
mov
dec
shl
dec
enter
pop
enter
and
loope
pop
cmp
sbb
rorb
repnz
or
pop
or
enter
lret
xorl
cmp
sub
int3
test
movb
andl
adc
push
sbb
sub
sbb
sahf
sub
and
stos
fisttps
scas
imul
adc
fs
loope
orl
loope
and
sbb
fcmovnb
rcrb
or
setbe
andb
sbb
rcl
or
cmp
pop
push
adcl
jp
outsl
sbb
loop
add
sub
jle
mov
push
nop
mov
inc
xchg
and
xor
mov
js
or
and
mov
and
pop
adc
shlb
scas
sbb
js
add
mov
movl
add
mov
sub
js
mov
xor
dec
arpl
orb
ja
lret
jne
ficoml
mov
mulb
add
mov
lods
and
ds
imul
sahf
ss
add
call
pushf
movb
jns
add
dec
incl
xchg
or
mov
inc
fstpl
insl
call
sbb
in
mov
cmp
jle
or
rolb
inc
rorb
xchg
aam
pop
lcall
or
fidivrl
je
out
adc
pop
mov
adc
cmpb
jl
xor
inc
add
xor
inc
aam
add
adc
push
shrd
push
pop
cmp
push
in
jmp
fcoml
or
push
imul
add
mov
ds
mov
ficoml
jne
mov
or
sub
dec
cmp
and
or
adc
lret
popf
negb
add
jmp
dec
add
dec
push
loope
test
shl
or
or
cltd
or
adc
fprem
out
roll
leave
add
in
js
je
mov
iret
adc
orb
mov
call
shl
imul
loop
inc
add
sahf
jne
mov
movsw
sti
int
adc
cmp
pushf
daa
or
loopne
add
stc
sbb
mov
bound
mov
mov
and
add
mov
push
je
xlat
clc
daa
add
jge
inc
inc
push
test
neg
sbb
sub
add
xchg
mov
sbb
sbb
adc
sbb
push
xchg
or
push
inc
and
fsts
fcomi
sbb
xchg
mov
xchg
adc
sbb
and
adc
dec
add
push
jbe
fwait
dec
jne
pop
pop
pop
fldt
add
int3
cmp
or
jae
mov
rcl
ljmp
shr
add
test
cmpsl
jg
push
push
idiv
and
maskmovq
xorl
xor
sub
xor
add
addr16
dec
or
aaa
icebp
inc
into
add
jbe
lods
jae
aam
dec
adc
push
xor
push
enter
incl
xor
and
push
xor
inc
cmp
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rorb
jp
adc
inc
sub
outsb
cmp
add
inc
cmp
js
sbb
shlb
sbb
cmpsb
or
mov
jo
scas
mov
dec
test
xchg
cmp
orb
decl
xchg
stos
cs
ljmp
cld
inc
test
aaa
dec
xchg
dec
and
sub
xlat
mov
push
inc
jns
cmp
ja
cld
xchg
aam
and
mov
push
popl
lock
sbb
enter
popa
mov
xor
cltd
xor
ss
sbb
ffree
jg
or
push
xchg
mov
sbb
and
jmp
mov
je
adc
mov
cmp
jb
cmp
ja
add
cmp
adc
in
dec
sbb
cmp
jne
shll
leave
adc
mov
sbb
add
jl
pop
mov
inc
test
je
insb
and
cmp
xor
mov
imul
jb
lret
loopne
or
rclb
mov
push
test
and
sti
aas
scas
or
out
outsl
pop
push
movb
jmp
or
cmpl
sbb
imul
and
loopne
xchg
ret
xor
in
aaa
pusha
movw
jb
add
or
rcrb
add
push
adc
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
push
add
pop
mov
stc
inc
jb
or
xlat
jge
sub
andb
xor
cmp
inc
push
pusha
or
add
pushf
add
jmp
push
sub
cld
loope
sub
push
imul
call
decl
rorb
or
inc
sbbb
lret
push
int
mov
xchg
insb
es
ljmp
cwtl
mov
test
mov
call
sahf
inc
xorl
push
cmp
add
and
cwtl
mov
loopne
jbe
push
add
in
or
jl
adc
incl
add
fimull
jle
repnz
stc
pushf
loopne
pop
sub
mov
outsl
or
test
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
inc
jle
mov
mov
inc
sbb
ret
dec
mov
mov
and
or
jns
ds
testl
iret
push
push
fsubrl
adc
xlat
or
inc
fnstenv
loopne
lea
rolb
xorb
inc
mov
outsl
dec
scas
les
dec
or
movsb
mov
dec
mov
or
xchg
dec
push
sub
add
nop
push
movsb
cmpsl
inc
ja
mov
cmp
lods
rol
ficoml
in
pop
push
insb
cltd
pusha
data16
xchg
mov
mov
mov
mov
ss
fnsave
rol
add
repz
shl
cmp
bound
shll
mov
add
shr
or
and
pop
cmp
rorb
sbb
xchg
jmp
push
lret
decl
loopne
mov
sub
lods
adc
mov
adc
int3
shrl
loope
shr
or
push
test
mov
dec
mov
sbb
mov
push
sti
lock
adc
loope
stc
pop
imul
testb
out
lods
mov
cli
notb
push
adcb
sahf
push
test
xor
popf
sub
sahf
xor
test
mov
mov
sbb
adc
jnp
xor
call
fiaddl
push
or
mov
cli
filds
fldenv
enter
add
sbb
or
je
dec
divb
imul
mov
xor
and
dec
sbb
imulb
or
pushw
sbb
inc
shll
jge
icebp
xor
xchg
enter
sub
daa
xor
in
mov
inc
daa
adc
mulb
push
or
es
pusha
hlt
xchg
out
jne
fdivrs
aam
sub
jbe
dec
sub
cmpsl
or
shlb
dec
ljmp
xor
adc
or
jns
sahf
or
lret
fcmovu
add
mov
jmp
test
cli
mov
int3
jg
add
xchg
add
or
add
je
notl
adc
jg
or
adc
or
jb
lock
push
sbb
jge
das
nop
or
lock
and
mov
cmp
add
movsb
jne
or
fnsetpm(287
loopne
rorb
nop
sbb
lret
mov
pusha
add
sbb
sub
popa
mov
mov
div
popa
aas
and
inc
add
inc
mov
and
aad
or
adc
pop
outsb
call
add
lea
pop
adc
sub
xchg
inc
xor
inc
mov
sahf
mov
cld
vmovups
neg
and
fstl
xorb
imul
icebp
mov
adc
loopne
fmuls
dec
jbe
pusha
lea
push
and
mov
push
in
pop
js
push
fisubs
and
add
lock
sar
mov
inc
les
enter
or
cmpsl
xchg
xchg
pushf
mov
and
xabort
in
inc
dec
mov
push
cmc
enter
sahf
mov
and
sarb
add
sub
test
call
es
add
inc
lock
sbb
or
mov
inc
ljmp
jmp
daa
orb
ret
jmp
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
mov
mov
repnz
inc
dec
add
add
fadds
dec
les
and
in
and
cmp
add
or
jo
rorb
cmp
pop
aad
test
jbe
ret
adc
loop
add
push
mov
lods
loopne
adc
adc
mov
push
add
add
add
test
sarb
adc
stc
lret
ret
inc
mull
or
push
push
adcb
mov
movsb
adc
adc
or
enter
pop
or
jne
or
push
pop
scas
je,pt
cmp
ret
sbb
adc
mov
je
mov
sub
xor
and
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
pop
sub
mov
fisubrl
and
sahf
fld
aam
pop
jbe
pop
adc
ret
prefetchw
sahf
inc
ret
or
aad
cwtl
push
loopne
adc
inc
add
imul
push
or
push
lcall
push
adcl
je
inc
sbb
add
je
jmp
pop
jle
pop
or
out
or
add
mov
jle
jne
and
mov
add
test
pusha
aaa
loope
add
shlb
ret
filds
push
cmp
scas
popa
dec
sbbl
xchg
sub
pop
push
jo
rcr
nop
clc
mov
dec
mov
inc
test
sbb
pusha
lock
push
scas
adcl
cmp
subl
xchg
mov
rcrb
jge
loopne
sbb
rolb
ldmxcsr
add
cltd
and
dec
sti
into
or
add
or
cs
mov
add
push
push
mov
mov
sbb
repz
and
sbb
inc
jg
into
jge
lret
into
mov
call
mov
pop
or
faddp
loopne
sahf
pop
mov
sub
sbb
and
or
and
dec
sbb
stos
sub
pop
loopne
and
push
push
fs
sub
lcall
pop
enter
xchg
out
adc
sub
into
add
movsb
fisubs
push
and
or
test
mov
and
cltd
and
popf
ret
cwtl
sbb
or
sub
jmp
pusha
sbb
mov
lret
fsub
lret
push
cmp
xchg
loop
sbb
pop
mov
add
cmpsb
adc
and
xchg
mov
ds
sub
push
add
xchg
sbb
fsts
sub
mov
mov
push
xor
add
das
popa
in
hlt
ljmp
test
jmp
lret
dec
add
jo,pn
add
and
lock
xchg
push
sahf
ficompl
dec
les
inc
mov
movsl
sbb
sbb
mov
add
or
out
je
mov
ljmp
hlt
mov
cmp
jb
cmp
jbe
ror
adc
in
mov
fbstp
movsl
pushf
xchg
loopne
mov
cs
cmpb
fisubrl
sub
ljmp
shrl
and
fadd
sbb
jle
add
repz
and
adc
test
jne
inc
and
add
sbb
sub
dec
roll
jmp
pusha
adc
pop
mov
jno
and
push
push
mov
es
or
in
rcrb
sbbl
fmul
addb
movsl
test
pop
cmpl
ret
sahf
mov
lret
xor
jb
xor
xor
pop
push
movups
aam
ljmp
insb
sub
push
mov
aam
inc
push
aaa
sbb
dec
js
add
jle
mov
or
pop
cmp
test
sub
add
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
movsb
add
push
mov
stos
notl
add
stos
and
jl
adc
aaa
lds
fstpl
lahf
xor
aaa
xchg
dec
pop
inc
test
test
mov
hlt
push
sbb
je
and
push
ret
ss
js
push
push
inc
sub
xor
insb
cmp
pop
and
mov
test
mov
xor
mov
push
cmp
imul
in
xchg
sub
cli
jnp
outsl
pop
xchg
jne
jg
and
sbb
xor
sub
scas
push
mov
rol
mov
roll
lahf
xchg
aad
popa
pop
enter
dec
push
js
lea
inc
enter
push
enter
in
adc
paddd
out
sbb
lret
mov
push
mov
jecxz
fidivrs
clc
sub
dec
dec
fs
inc
sarb
in
ss
jnp
outsl
jae
ja
xor
fidivs
or
cld
call
out
dec
push
push
xchg
push
test
gs
jmp
xor
push
adc
mov
movb
mov
ss
cmp
push
mov
dec
adc
mov
ret
adc
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
aad
pop
mov
push
and
pop
or
mov
xor
mov
adc
xchg
cmp
repnz
mov
in
cmp
jo
mov
add
jb
pop
pusha
mov
ja
fcomps
int
xchg
fsubs
loope
adc
incb
jge
jmp
mov
test
hlt
add
shll
sbb
lret
fwait
adc
pop
dec
sub
frstor
push
mov
movsb
jmp
mov
mov
and
clc
addr16
jo
outsb
add
pop
or
movsl
sub
in
lahf
mov
inc
mov
out
ret
sbbb
add
or
sub
mov
push
adc
add
dec
je
sub
dec
push
rcrl
xor
sbb
mov
push
and
or
and
sub
sub
and
lods
pop
rol
shll
stos
push
mov
mov
cmpsl
aas
or
loop
mov
cmpsb
mov
pop
cwtl
sahf
xor
in
mov
cld
and
xor
call
or
cltd
ret
mov
add
sti
gs
in
adc
adc
push
add
push
push
mov
icebp
push
add
iret
dec
mov
jmp
or
and
loop
rorl
mov
inc
add
sahf
mov
aad
insl
cld
mov
loopne
pop
pop
xchg
loopne
sub
fsubs
adc
inc
xchg
clc
pop
mov
add
ret
add
adc
test
add
jp
scas
cld
adc
inc
loop
dec
cwtl
mov
xchg
dec
mov
rcl
pop
out
or
push
ret
or
into
inc
mov
lods
or
adc
push
xchg
in
jns
adc
or
enter
stos
and
adc
add
mov
lock
int
mov
xor
repnz
cmpsb
popf
gs
sbb
sbb
push
hlt
mov
dec
or
fisubrl
pusha
sub
insl
clc
pop
mov
or
popf
iret
dec
stos
rolb
aad
sar
pusha
insl
inc
out
addb
push
aas
push
aam
push
add
or
add
add
test
movsl
xor
adc
fisttps
imul
paddw
movl
add
push
or
xlat
shlb
adc
fisubl
xor
hlt
and
mov
gs
or
loope
gs
int3
cmp
out
sub
imul
ficompl
int
lret
push
fsubrp
sub
pop
inc
xlat
outsl
and
mov
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loopne
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
adc
jle
dec
push
add
mov
popl
aad
xor
jp
sub
push
dec
adc
test
jg
adc
lock
out
fwait
add
pop
mov
lret
je
lods
mov
icebp
cmp
push
pop
pusha
adc
shlb
sub
dec
pop
xchg
push
into
lock
fadds
in
out
mov
popf
repz
dec
mov
icebp
lea
sbbl
push
popa
or
repnz
in
or
inc
push
sbb
xlat
or
sub
inc
lea
orb
push
adcb
mov
fstpl
and
push
ficoml
dec
add
pop
fs
jnp
fisttpl
in
sub
lods
shll
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
int3
or
and
mov
and
mov
jmp
dec
cmpl
inc
mov
scas
into
dec
sub
cmp
bound
sbb
jp
ja
test
push
xor
push
insb
mov
cmp
adc
out
or
pushl
mov
push
sub
adc
jno
lahf
test
jmp
idivl
in
test
rcrl
sub
adc
push
cmp
std
lcall
and
and
test
sbb
push
and
add
data16
xor
inc
xchg
inc
iret
dec
mov
inc
push
mov
test
adcb
sbb
sub
dec
cmp
sbb
dec
repnz
or
inc
add
adc
xor
test
mov
add
add
nop
cmp
sbb
add
dec
push
loop
mov
sbb
pushf
sbb
inc
pop
add
push
rorb
bound
add
xchg
mov
or
fildl
ds
jg
dec
add
fs
stos
aas
push
pop
jl
testb
xchg
je
jo
sub
inc
outsl
xchg
jae
iret
loopne
shlb
cmpsl
adcb
clc
sbb
loopne
push
pop
cld
xor
popa
push
pushf
addb
movsb
cltd
add
push
fs
or
scas
mov
scas
lret
insl
sbb
pushf
fucom
adc
aaa
outsl
lret
mov
xchg
or
cmp
lods
inc
lods
pop
outsl
dec
xchg
outsl
jo
roll
mov
pusha
popa
mov
fmulp
cmpl
dec
cmpsb
pop
adc
cmp
jae
inc
mov
mov
outsl
mov
jle
cmp
jg
push
dec
shrb
xor
das
sbb
and
mov
adc
add
jns
cmpsb
jmp
orl
sbb
lock
outsb
cmpl
rol
push
mov
shrb
fcoms
stos
cmp
iret
adc
mov
movsl
and
lcall
sbb
scas
out
ret
fisttpl
or
shll
cmp
pop
movsb
imul
in
sti
test
or
adc
dec
dec
es
xor
andb
xor
cli
es
inc
mov
pusha
dec
inc
cmp
cmp
jbe
dec
push
stc
repnz
mov
cmp
sbb
adc
ss
cmpb
test
je
popf
and
loopne
mov
push
call
mov
cwtl
jmp
push
ss
jmp
cmp
or
enter
je
xchg
je
mov
enter
sbb
jmp
outsl
sub
lea
or
iret
add
pop
sbb
add
fiadds
gs
sbb
push
xor
jno
push
sti
lret
ret
inc
std
repnz
sar
in
mov
or
adc
addr16
pop
cmp
leave
aas
out
push
je
dec
jne
push
arpl
add
and
push
or
sbb
rclb
cmp
and
cmp
add
mov
fmull
mov
pushl
sub
xlat
rorl
mov
aaa
lds
enter
mov
adc
fmuls
mov
push
daa
cmp
adc
mov
sub
mov
jmp
loopew
or
repnz
inc
sbb
jg
mov
mov
xchg
stos
and
add
xchg
lods
js
insl
les
inc
hlt
push
or
jo
cli
push
jb
cmp
or
addr16
xorb
pop
punpcklbw
aaa
jl
addb
shlb
testb
push
push
in
push
hlt
push
cmpb
sub
add
and
popf
and
hlt
out
inc
sub
cwtl
fcmovb
mov
lret
imul
add
fmuls
push
push
mov
add
dec
or
jl
enter
mov
ret
jmp
loop
mov
pop
mov
push
xor
xlat
jb
or
add
shrb
adc
ror
xchg
push
mov
rorl
stc
push
ss
add
pop
fdiv
jne
adc
fisttpl
jmp
out
or
push
mov
mov
dec
cmp
imul
test
pop
inc
fs
js
pop
lock
jle
sahf
dec
add
dec
ret
sbb
jp
mov
jne
call
adc
sub
push
or
or
sti
rolb
sub
push
movsl
add
test
cmp
inc
inc
repnz
dec
imul
rcr
and
fimull
lock
mov
cli
cmp
jg
adc
pop
cld
mov
mov
pop
fiaddl
and
addr16
push
add
add
test
pushl
fldt
fstl
orl
jg
jmp
adc
roll
es
sbb
pop
mov
and
and
loopne
call
push
rclb
jb
or
or
cmpsl
push
lock
sbb
pop
scas
gs
mov
and
xchg
xchg
jg
jae
mov
das
adc
or
inc
test
push
inc
adc
lods
bound
addb
sbb
or
add
es
lret
push
test
js
pop
sti
sub
add
inc
insb
and
mov
push
mov
and
sbb
aas
push
movl
das
lock
cmp
enter
je
cmp
cmpsb
push
call
and
cmp
jb
testb
xchg
sbb
or
testb
cmp
add
ret
jge
push
outsl
add
and
push
ss
and
jb
je
cmp
push
mov
xor
cmp
jbe
push
sbb
scas
adc
inc
add
gs
cmpsb
inc
stc
shr
jmp
das
dec
fnsave
inc
jne
or
test
ljmp
and
je
mov
js
shlb
pop
es
sub
dec
inc
jmp
pushf
pop
pop
mov
pop
pop
lods
xchg
cli
cmpl
mov
mov
mov
jb
test
or
ret
or
andb
fisttpll
add
hlt
mov
ret
inc
inc
xor
lret
dec
and
sbb
ja
jne
xchg
repnz
mov
sub
stc
add
inc
mov
pop
mov
adc
add
add
cmc
nop
jge
jne
in
and
pop
pusha
mov
test
nop
xor
dec
mov
push
sbb
inc
mov
pop
pop
inc
sub
mov
fdivs
and
adc
push
pop
pop
je
pop
and
mov
rcr
fbld
pop
fdivs
insb
or
cmp
jmp
cwtl
ss
jl
or
xor
ss
rolb
ret
mov
pushf
jmp
cmp
fcomp
mull
jbe
cwtl
adc
ret
fstps
add
pop
sbb
push
in
or
mov
leave
mov
mov
push
or
fcomps
enter
xor
lea
mov
sarl
outsb
mov
mov
mov
test
add
pop
rclb
rorb
enter
dec
dec
adc
xchg
scas
add
scas
popa
and
cwtl
dec
jmp
pop
and
fldt
daa
ss
pop
in
jns
int
leave
mov
enter
int
ret
subl
cmp
xchg
sbb
jmp
add
cmp
dec
xchg
xchg
call
inc
push
in
lock
and
fdivrs
add
mov
inc
adc
leave
xor
int3
and
pop
lcall
pop
jmp
inc
cld
and
faddl
cld
shrl
mov
pop
not
inc
sbb
mov
pop
pop
xchg
mov
jo
and
sbb
je
roll
test
push
jae
sar
and
cmp
xor
cltd
add
inc
in
fsubs
in
ds
dec
in
shlb
adc
sbb
fsubr
xor
jo
in
mov
lock
xchg
test
sub
testl
insb
and
cmpsb
enter
pop
mov
js
fnstenv
outsl
testl
imul
inc
fwait
in
lcall
add
add
call
inc
lock
popa
adc
pop
test
pop
jb
push
or
jnp
jl
filds
or
pop
nop
mov
mov
nop
fistpl
dec
arpl
sarl
dec
cmc
mov
xchg
or
in
ficoml
leave
mov
cld
mov
orb
dec
mov
sub
fsubl
add
pop
cmp
dec
or
pusha
leave
mov
cmp
shr
outsl
aam
rcr
sbb
les
fs
test
push
xor
lcall
adc
add
inc
nop
pop
adc
shll
movsl
mov
adc
mov
push
jno
leave
and
adc
and
dec
insb
jo
add
add
inc
sbb
call
adc
ficoms
or
lea
fs
es
adc
rolb
ja
inc
mov
and
push
mov
mov
in
sti
adcb
cmpb
inc
stc
xor
imul
mov
dec
repnz
sbb
shrl
sti
mov
jne
dec
and
push
inc
mov
pop
pop
ret
sbb
lahf
pop
or
stos
add
ret
popf
adc
rorb
loopne
out
xchg
dec
push
lods
add
sbb
lock
dec
push
jp
lock
push
rorl
movsb
loopne
stos
adc
sub
inc
mov
xor
push
jnp
cmp
and
adc
or
enter
aam
adc
in
jb
insb
loope
sub
cmp
or
inc
ss
jmp
das
ret
push
int3
popf
sub
insl
cltd
lock
push
and
popf
sub
loop
or
add
dec
sub
lock
jb
mov
mov
fs
loopne
int
and
in
loop
inc
jecxz
or
leave
push
xchg
imul
pop
dec
aam
mov
movsb
and
xchg
shlb
cwtl
xchg
ret
xchg
dec
xor
lea
jo
push
mov
sti
fcompl
sbb
in
test
xchg
movsl
ss
jl
imul
in
ret
shl
sbb
out
in
pop
and
mov
and
gs
xchg
pop
mov
pop
je
xchg
inc
sbb
cmpsb
in
jno
clc
aas
call
sbb
out
xor
adc
or
testl
mov
mov
jecxz
cmp
dec
lock
sbb
sbb
cmpsb
addb
or
or
pop
xor
or
das
sbb
repnz
out
loopne
push
mov
pop
cmp
add
ret
cmpsl
or
add
adc
cmpsl
push
call
dec
call
add
call
pop
jecxz
addr16
add
mov
fdivl
xor
gs
lock
adc
addl
adc
inc
sbbb
sub
sti
add
shrl
or
fsts
loop
or
xchg
and
jbe
ja
mov
fiaddl
and
add
shrl
iret
mov
pop
cmp
or
jae
ljmp
repnz
inc
mov
mov
or
or
scas
loopne
lock
icebp
sbb
das
ret
inc
call
adc
and
cs
loopne
mov
in
aam
push
lds
lods
pop
dec
roll
ss
and
jo
push
jg
movsl
sbb
test
ljmp
mov
cs
fwait
mov
nopl
dec
loopne
xchg
adc
jmp
mov
and
es
scas
cmp
or
xlat
cmp
movd
xlat
pop
nop
popa
xchg
clc
test
xchg
movd
sbb
xor
xchg
insl
pop
sahf
and
push
in
in
push
xor
jecxz
or
mov
add
sbb
add
fadds
or
xchg
movsb
sti
repnz
ds
mov
add
mov
add
mov
out
adc
add
xor
je
arpl
out
jecxz
and
fs
popa
lcall
pushf
mov
mov
lock
movsl
leave
std
in
sub
xor
sub
add
loope
push
sar
stos
test
or
or
in
inc
or
or
nop
inc
or
or
or
sbb
cwtl
mov
icebp
enter
and
aad
sbb
fdivs
mov
xchg
test
repnz
mov
movsb
icebp
or
enter
or
adc
leave
orl
cmp
icebp
adc
rep
or
and
inc
inc
push
mov
orb
mov
push
rcll
pop
cmp
xchg
pushw
and
adc
imul
mov
jns
rep
fildll
lret
dec
ret
sbb
sub
or
mov
cs
push
jl
fdivl
test
sub
fadds
aam
sub
inc
pushf
adc
sub
xchg
arpl
cwtl
test
push
or
or
ret
mov
jnp
out
ret
sub
sub
xchg
xchg
loopne
or
outsl
sbb
pop
sbb
inc
insb
cmpxchg
bts
test
test
sbb
cmc
and
dec
cmp
and
ret
adc
xor
insl
shlb
pop
xor
ret
fmuls
das
sbb
or
jne
and
add
imul
mov
pop
dec
xor
xorb
insb
adc
mov
mov
subb
ja
test
pop
mov
repnz
or
dec
testl
movsl
or
xlat
inc
stos
loop
or
add
test
loopne
mov
loopne
and
clc
or
es
mov
stos
mov
dec
xchg
std
movsb
popl
movb
mov
fs
popa
inc
in
inc
mov
les
or
add
inc
mov
clc
jne
insb
xchg
leave
loope
fdivrs
pusha
fldt
daa
mov
stc
cli
pop
sbb
inc
mov
fdivs
sub
push
push
jge
sub
jge
sbb
xchg
pop
cmp
push
mov
inc
mov
rcll
xor
in
pusha
lock
in
cli
fadds
test
iret
sbb
push
test
ss
sbb
inc
aaa
mov
inc
mov
sti
pop
mov
fsubs
ret
adc
roll
sbb
es
xchg
out
dec
or
orb
or
and
add
or
adc
push
mov
xlat
adc
xchg
dec
cld
cld
xor
cmpl
loope
lea
in
pop
dec
add
sbb
adcb
sbb
repnz
add
sub
mov
in
loopne
sub
stc
cwtl
stc
xchg
orb
mov
push
inc
push
cmp
sbb
bound
mov
sbb
loopne
scas
mov
adc
mov
lods
pop
push
sub
iret
mov
test
leave
or
and
pop
enter
mov
xchg
inc
pop
inc
push
xchg
in
or
add
ja
cmovbe
cmpsb
ficompl
iret
enter
mov
mov
mov
mov
pop
push
mov
dec
dec
adc
push
rolb
or
pop
inc
les
mov
add
push
in
popf
mov
mov
xchg
std
cmp
or
sbb
xchg
pusha
xlat
push
insb
les
inc
jge
pop
add
nop
xlat
jl
add
mov
fcoml
push
and
fsubs
push
xor
fsub
aam
pop
xchg
sbb
aam
add
xchg
aam
ror
push
or
adc
inc
ret
cvtpi2ps
push
add
dec
js
shll
iret
lock
inc
pop
dec
adc
sbb
insl
add
or
mov
rorb
adc
cmpsl
dec
lcall
sbbl
aas
add
pop
xchg
add
dec
add
loopne
pop
call
xchg
shlb
je
xchg
mov
fwait
mov
inc
xor
popl
out
mov
add
inc
adc
ret
dec
pop
cltd
mov
add
push
cltd
mov
nop
shll
sbb
dec
test
pop
movsl
pop
dec
outsb
cmp
imul
cmp
mov
int
push
jge
subl
lods
insl
ja
sbb
hlt
and
test
sub
fdivr
enter
and
dec
add
lcall
fsubrs
xchg
popa
daa
in
pushf
sbb
in
dec
push
imul
jb
mov
xchg
pop
imul
ror
cmp
sub
lods
inc
adc
add
push
mov
jmp
xchg
arpl
hlt
movsl
add
and
xchg
sbb
pop
inc
xchg
mov
pusha
sbb
je
mov
jnp
shll
fadds
push
or
hlt
lea
sbb
jp
add
dec
add
adc
nopl
pop
cmp
push
xor
and
loopne
xchg
push
loopne
xchg
pop
push
or
cmp
inc
dec
fs
add
test
lds
insb
psubw
adc
in
mulb
sub
sbb
adc
or
cmp
xor
sbb
and
xor
jl
jne
sub
sub
mov
lcall
dec
push
les
or
shll
inc
xor
in
jne
stc
lock
sub
adcb
adc
dec
insl
push
sbb
add
or
mov
pusha
add
stc
adc
std
mov
shll
sti
aaa
xchg
ret
pop
mov
mov
or
and
jo
pushf
xor
jb
jno
push
or
dec
faddl
fadds
and
fdivr
push
fcoms
mov
push
and
and
call
mov
cmpsl
or
cmpsl
mov
cmp
je
loope
ret
xor
pop
nop
insb
int3
push
and
orl
xor
orl
daa
int3
mov
cmp
imul
fsubr
rorb
test
fcmovnb
fimull
push
aam
ret
mov
vmptrst
stc
push
stos
add
jno
sbb
in
xchg
loopne
push
inc
and
jo
jecxz
or
and
xor
mov
or
push
es
stos
and
pusha
xchg
lret
cmp
and
mov
int
rclb
adc
mov
shlb
mov
int3
gs
fdiv
rcrb
or
add
adc
mov
push
outsb
dec
jns
cs
nop
mov
cmp
xchg
mov
push
mov
inc
add
or
mov
enter
test
enter
int
push
in
mov
lret
les
daa
sbb
call
mov
adc
push
pop
inc
xor
jns
fcoml
jnp
add
mov
inc
xor
mov
xor
stos
les
xor
and
sti
leave
aam
mov
lds
inc
sub
xor
sub
test
test
pushf
pop
mov
test
pop
insb
rcrb
icebp
adc
aas
cwtl
sub
loop
dec
out
aas
pushf
push
pop
adc
adc
les
pop
xor
into
xor
fadds
push
push
jbe
push
ljmp
sbb
sbb
mov
xchg
fmull
das
mov
or
sahf
xor
add
clc
cwtl
push
mov
ret
add
xchg
push
enter
mov
and
adc
leave
pushf
cwtl
fsubs
cmp
sbb
test
popf
xchg
inc
lcall
or
icebp
pushf
mov
pop
cmp
dec
mov
xor
dec
xor
sbb
enter
cmp
or
out
or
adc
fsubs
inc
xlat
cmpb
rolb
jl
jl
and
dec
jl
xchg
jno
cltd
subb
test
fcomp
sbb
test
xchg
mov
mov
inc
sbb
mov
adc
das
jns
sub
sbb
sub
and
iret
jo
sbb
or
fwait
or
adc
xchg
decb
jecxz
outsl
mov
std
mov
sub
enter
or
popf
lods
push
inc
sbb
mov
jb
lods
or
push
or
xor
leave
and
mov
add
out
aam
xor
je
jmp
add
inc
movsl
inc
std
dec
xor
push
cmp
or
sub
les
inc
test
sarb
mov
or
test
add
pushf
js
sbb
xchg
jl
aam
test
in
xchg
push
fs
xlat
lock
lea
push
xor
stos
xchg
fisttpl
mov
js
xor
call
jae
insb
shld
aam
adc
xor
or
pop
pop
xorl
inc
ret
popf
in
test
cmc
nop
popa
mov
lea
dec
in
dec
adc
dec
pop
clc
pop
test
clc
xchg
ret
nop
and
cwtl
mov
or
test
enter
xchg
idivl
sbb
sbb
pop
out
insb
adc
fs
push
insl
mov
out
cltd
fs
push
pusha
adc
dec
es
cmp
dec
es
sbb
and
cltd
fs
cmp
cmpsb
pusha
xchg
sub
xor
push
cmp
fdivr
syscall
test
push
sbb
lods
or
mov
cmpsb
mov
enter
lods
cs
movsb
and
dec
and
and
or
or
stc
aam
inc
fcoms
rcl
push
add
pop
mov
pop
stos
or
dec
les
xchg
xchg
andl
cs
shlb
shr
or
push
ret
inc
adc
sub
dec
push
fs
or
and
lods
test
inc
sbb
xchg
jg
jne
orb
call
nop
orl
xchg
in
mov
push
gs
inc
popa
xor
mov
mov
pop
rcll
dec
fmul
push
pop
adc
les
js
daa
adc
pop
dec
daa
fwait
and
jbe
pop
pop
adc
push
frstor
add
aam
shr
push
add
movsb
push
aam
inc
sub
cmpsb
sbb
inc
in
xchg
mov
add
fmull
cmpsl
movsl
sbb
imul
jl
imul
popa
dec
mov
pop
je
adc
push
xor
add
jns
arpl
sti
sub
and
movsl
aam
test
push
or
mov
ja
stos
push
sub
subb
subb
xor
mov
sbb
adc
push
dec
sub
or
mov
in
add
fnstsw
push
push
xchg
inc
or
sbb
test
xor
std
aam
push
xchg
xchg
mov
inc
push
stc
mov
arpl
push
loopne
push
xchg
dec
jecxz
cwtl
cwtl
or
sub
push
rclb
inc
sub
mov
sub
xchg
rclb
or
and
push
notl
sub
enter
ficoml
pop
mov
dec
push
loope
xor
sub
mov
fbld
lods
push
cmpsb
dec
shrb
in
push
push
sub
shrl
jmp
das
inc
insl
mov
lcall
inc
pop
mov
and
mov
jmp
mov
stos
add
dec
mov
in
push
xchg
xchg
jmp
cltd
fmuls
xor
sti
add
dec
dec
xor
lea
xlat
sti
imul
or
xorb
xchg
daa
xlat
cmpsl
mov
inc
xchg
mov
push
loopne
fmuls
out
xor
lock
xor
pop
aam
or
or
outsb
mov
pop
aam
mov
aam
loopne
fdivrs
xchg
insl
shr
fildll
pop
mov
stos
adc
mov
jg
repnz
sbb
cltd
pushf
out
cwtl
xor
scas
les
insl
mov
test
dec
push
icebp
inc
pusha
ficoml
xchg
lock
xchg
inc
pop
and
inc
mov
ret
ffree
mov
mov
shll
js
xchg
dec
aam
mov
mov
sub
mov
ss
fisttpl
xor
fisttpll
jl
dec
push
sub
enter
movsb
lods
mov
enter
int3
arpl
lea
inc
push
in
cwtl
js
xchg
nop
push
call
sbb
fs
mov
das
jb
subb
dec
dec
js
pop
leave
leave
leave
insl
nop
bswap
les
lods
movsb
pushf
outsb
push
xchg
fistl
dec
outsb
push
dec
test
pop
xor
daa
mov
paddusb
das
adc
dec
jb
pop
cmp
pop
pushf
pushf
inc
mov
or
fisttps
imul
jecxz
mov
xor
inc
sbb
out
push
xor
cmpsb
and
jns
lods
sub
psubw
push
stos
jmp
or
mov
ret
lods
neg
sbb
lret
dec
or
push
push
enter
dec
inc
icebp
loope
aaa
sbb
mov
andb
inc
sbb
std
cmp
movsl
sub
mov
lock
mov
push
xchg
loope
push
dec
shlb
dec
inc
xchg
sbb
cwtl
mov
sbb
inc
dec
cwtl
mov
lock
lds
push
and
and
test
rclb
pushf
mov
inc
lcall
mov
jo
push
mov
test
cwtl
mov
ret
lods
movsb
or
cs
xor
bound
jbe,pn
js
mov
ds
cmp
mov
mov
enter
rorb
dec
cmp
and
ja
fwait
and
lcall
cmpsb
jge
sbb
pop
dec
movsb
stc
popf
ss
adc
or
mov
cwtl
pop
xlat
insl
fcomps
jbe
inc
push
cltd
sub
mov
add
dec
shll
sub
add
lds
fadds
inc
cltd
push
sub
addr16
and
adc
sbb
sub
inc
mov
test
int3
adc
push
ja
loopne
push
arpl
nop
inc
or
inc
sbb
outsl
loopne
subl
adc
daa
nop
clc
aas
mov
or
pop
push
and
ja
dec
inc
aam
leave
lods
es
test
decl
sbb
dec
addb
push
sub
inc
pop
adc
cwtl
nop
mov
mov
sbb
rolb
mov
shlb
add
nop
les
mov
adc
add
mov
fwait
pop
mov
fdivs
int3
stc
pop
andb
add
adc
add
movsb
adc
pusha
mov
pop
popf
or
pop
cmc
cwtl
rorb
mov
enter
movsb
add
xchg
fs
enter
add
pop
sub
push
mov
pop
adc
pusha
pop
leave
out
push
jbe
sub
sub
inc
dec
fwait
test
orb
mov
sti
fs
lods
adc
jns
repnz
xchg
repz
sub
mov
repnz
mov
sub
sbb
orb
pushf
mov
dec
sbb
addr16
in
push
mov
or
push
sub
sbb
cmp
jnp
mov
ret
mov
and
dec
or
inc
or
lret
lock
fld
xchg
dec
rclb
sub
in
adc
and
inc
push
and
cmp
hlt
cltd
inc
cmp
dec
add
repz
insl
sub
ret
and
in
sti
leave
add
mov
fists
orb
and
adcb
sub
movsb
sbb
push
in
les
clc
pusha
test
cltd
scas
es
in
cltd
add
icebp
jns
mov
repz
inc
or
cmpsb
or
cmp
adc
dec
cmpsb
aam
int3
sti
rol
push
dec
test
sbb
lds
and
adc
xor
mov
jno
nop
pop
mov
out
xchg
sbb
cmp
and
inc
lea
shrb
arpl
xchg
imul
inc
int3
ds
aaa
fs
push
aas
in
mov
ss
jbe
popf
inc
mov
faddl
outsl
ret
test
sbb
out
idivl
inc
int3
dec
add
and
push
mov
int3
sub
jae
out
sub
ficomps
xchg
or
aad
dec
pop
hlt
jmp
dec
sbb
fiaddl
subl
subb
stc
adc
xor
add
leave
xor
sub
push
test
adc
mov
jmp
adc
testl
lods
aam
divl
pusha
adc
fstps
push
movsl
lods
call
jne
orb
fwait
mov
jb
xorl
xchg
mov
enter
insb
inc
test
movsb
pop
aaa
test
or
adc
add
cmp
inc
mov
or
dec
addr16
sbbl
mov
adc
jb
xchg
test
sbb
push
inc
aam
adc
fldt
lods
cmp
cmp
jno
fdivrl
xor
adc
mov
mov
xor
xor
fimull
fstpt
sbb
push
icebp
inc
mov
adc
orb
push
in
nop
xor
rcrw
fisttpl
stc
xchg
ret
xor
std
xorl
add
pop
xor
stos
fstpl
in
mov
xchg
stc
xchg
pop
or
dec
popf
push
insl
mov
call
daa
sbb
xlat
negl
sbb
push
and
cli
inc
adc
jp
cli
mov
dec
cmp
push
stos
adc
jmp
test
mov
cwtl
xlat
push
cmp
jecxz
jl
repnz
sbb
adc
xor
inc
add
imul
dec
ret
inc
add
mov
cmp
push
push
sub
sub
subb
cmpsb
arpl
js
jo
xchg
dec
or
es
or
cmp
mov
or
mov
sub
cwtl
mov
addb
dec
fnsave
sub
add
loopne
mov
jbe
inc
int
mov
sub
stc
jb
imul
pop
sbb
nop
xchg
enter
push
push
mov
dec
cmp
pushf
adc
or
sbb
or
ret
inc
add
push
fsubs
pop
ret
pop
insl
cmpsl
je
or
cmc
test
xchg
push
roll
dec
jo
or
insl
shrl
mov
and
scas
and
cmpsb
dec
xor
mov
lods
mov
call
decb
mov
inc
push
sbb
mov
fwait
pop
iret
or
sub
push
adc
add
or
das
pop
imul
mov
in
lods
push
in
cltd
orb
or
push
push
je
and
cli
push
loope
adc
push
xlat
shlb
int3
in
out
jno
dec
and
jle
sbb
mov
out
test
cwtl
imul
lods
loopne
fidivrl
shrb
sub
cltd
inc
fldt
and
add
sti
inc
pusha
out
cld
adc
add
clc
cltd
notb
adc
push
mov
and
push
nop
push
and
mov
lods
jmp
lea
insb
adc
scas
cmp
mov
pushf
mov
cmpsb
dec
xchg
fs
addl
std
popa
mov
mov
sub
fs
sbb
enter
fs
aam
mov
dec
sti
movsl
sbb
push
mov
and
loopne
jmp
outsb
mov
lcall
lcall
or
and
push
stos
pop
adc
xlat
pop
adc
pop
mov
call
jmp
inc
add
push
cmpsl
fnstcw
jmp
pop
sahf
out
sahf
push
loope
cmp
jns
pop
outsb
xor
lods
pop
fwait
add
sub
xchg
push
jnp
std
xor
mov
mov
cmp
outsb
push
or
add
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
and
pop
push
jbe
xor
out
dec
and
and
iret
sbb
es
popl
push
pop
jbe
add
aas
rdpmc
add
pand
in
aad
incl
sub
sbb
mov
and
insb
outsl
arpl
imul
mov
movsb
test
sub
popa
arpl
jne
out
imul
jb
outsb
je
add
das
add
push
insl
adc
out
dec
add
inc
js
je
jb
jbe
mov
jae
or
outsl
add
add
add
xlat
out
idivb
les
inc
and
pusha
repz
and
and
add
addl
mov
es
inc
xor
jnp
mov
inc
push
add
aas
xlat
popf
inc
icebp
push
add
pop
dec
add
sub
imul
push
insl
xchg
je
je
and
mov
das
dec
fisttpl
jl
xlat
mov
cmpsl
insl
push
push
jl
adc
jae
bound
push
mov
push
lret
sbb
popa
fidivs
xor
insb
outsl
cmp
or
mov
mov
out
bound
jmp
mov
jmp
jo
mov
dec
xor
stos
insl
sub
jmp
jae
push
imul
cmpl
shll
inc
push
data16
sub
mov
outsb
mov
sub
fs
lock
sub
insb
lcall
repz
lahf
popa
jns
sbb
push
outsb
inc
arpl
inc
or
daa
cmp
sbb
dec
jbe
fbstp
maskmovq
push
outsb
bound
jnp
sub
push
arpl
xor
xor
scas
xor
sbb
inc
mov
fcoms
fisubl
sbb
aas
cs
and
daa
mov
and
andl
arpl
popa
sub
inc
ret
or
outsl
orb
jg
mov
iret
fistps
lods
inc
push
ss
or
jne
sbb
sub
jbe
jb
jne
aaa
stos
aad
pop
jbe
in
pop
test
stos
bnd
fisubrs
sbb
pop
or
cmp
push
jo
lahf
xor
aas
or
arpl
sbb
push
mov
dec
push
mov
xlat
aaa
out
roll
jecxz
stos
mov
scas
fs
imul
shll
ret
xchg
test
cmpsl
jl
lock
das
loope
or
mov
pop
jge
mov
stos
pop
insl
lret
je
adc
cmp
lea
mov
sbb
subb
out
pop
jecxz
push
push
sub
push
inc
sbb
shlb
dec
int3
xor
fs
add
xlat
insb
add
inc
or
iret
sti
jle
and
enter
orb
sub
sarl
push
adc
iret
sarl
sbb
sahf
out
ds
jmp
mov
idivl
push
pop
xor
lahf
sahf
sarb
mov
fsub
js
jns
jns
jns
jp
push
cld
cmpsl
out
pop
push
lcall
pusha
dec
aaa
ret
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
icebp
and
insl
insl
cmp
add
mov
and
jns
add
das
das
jns
call
jle
push
dec
push
inc
inc
arpl
bound
push
call
jbe
dec
arpl
inc
jo
in
jge
ret
sub
addr16
xor
insb
xchg
outsb
das
jle
pop
xchg
inc
jo
imul
shlb
cwtl
inc
popa
outsb
adc
out
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
imul
int
sbb
dec
outsl
outsb
and
out
mov
ja
pop
dec
inc
mov
je
aas
add
out
dec
or
sti
push
add
insb
jae
jl
shrb
push
push
inc
push
popa
insb
jne
inc
and
inc
xchg
inc
mov
sbb
ljmp
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
jecxz
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
clc
add
mov
pop
pop
pop
pop
pushl
adc
popa
bound
gs
imul
jo
xchg
aaa
sbb
xor
js
jp
jl
jle
dec
ror
in
insl
adc
lcall
loopne
jge
pop
sub
add
orb
sar
inc
faddl
jno
pop
pop
outsl
ljmp
or
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
roll
outsl
das
cmp
dec
lcall
jo
xor
popa
js
addl
sub
push
fstpl
outsl
ja
ret
push
testl
int3
aaa
mov
jnp
add
add
adc
add
add
icebp
scas
push
fiaddl
push
pop
and
push
pop
inc
pop
sub
aaa
xor
hlt
xlat
in
cld
fldenv
push
add
pusha
push
add
out
lods
mov
or
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
pop
mov
fldcw
lods
pop
into
jo
add
shrb
mov
ja
and
das
xor
or
dec
lret
adc
or
adc
iret
in
mov
pop
sbb
daa
iret
lea
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
shlb
orb
cmpsl
shr
in
mov
mov
pop
lods
aad
mov
mov
jp
pop
scas
add
sbb
shll
cmp
ret
fnstsw
cmp
rdtsc
ss
js
dec
dec
arpl
in
inc
dec
inc
adc
notl
pusha
xchg
mov
mov
mov
rclb
dec
bound
je
outsb
data16
jbe
sti
xor
ss
out
je
xor
jnp
or
push
xchg
daa
pop
lea
fidivrl
mov
outsl
js
push
xchg
xchg
jl
push
and
insl
jo
jo
and
fcmovnbe
xchg
cmp
dec
xchg
shlb
aaa
insb
les
mov
imul
mov
lods
add
ds
cmp
dec
inc
jb
jns
ss
and
ss
jns
mov
insb
and
not
or
jne
addr16
cmp
outsb
jle
jbe
divb
fnsave
mov
jo
or
jb
and
fisubs
je
xchg
pusha
inc
jbe
push
in
add
push
push
lahf
fs
insl
add
lods
jp
pusha
adc
push
popl
fadds
mov
cmp
push
adc
rcll
pop
daa
mov
dec
adc
mov
adc
outsb
mov
pop
pop
pop
push
push
jae
or
mov
aas
cmp
call
push
hlt
clc
addr16
sbbl
xor
outsb
gs
mov
data16
cmp
bound
push
push
push
dec
testl
xor
push
push
in
lods
fisttps
push
ds
inc
or
sub
nop
xchg
push
imul
push
pusha
wbinvd
pusha
jg
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
andb
popa
sbb
push
insb
roll
push
pop
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
imul
or
ds
jns
imul
push
das
push
sub
js
sahf
jl
push
addr16
jle
imul
add
cmp
sub
pop
or
nop
ret
sbb
das
push
jb
pop
aaa
aaa
and
push
mov
xor
addr16
xchg
xchg
xor
pop
pop
jne
stos
addr16
push
jbe
pop
addr16
sbb
jo
ss
gs
inc
subl
imul
adc
sahf
sbb
dec
sbb
sahf
out
mov
out
pop
sub
popa
sub
push
jl
out
mov
xlat
incb
push
sub
imul
std
lock
xchg
enter
jns
shrb
sahf
mov
lods
push
pushf
cwtl
out
iret
repz
nop
mov
jns
in
cmpb
cmp
or
push
int3
jo
push
sahf
out
sahf
push
push
jns
out
push
dec
dec
inc
inc
out
sahf
out
cmp
sub
out
sahf
and
add
cld
fdivrl
repz
test
push
repz
sti
les
pusha
push
dec
inc
dec
repz
xor
or
cli
in
sarb
repz
mov
or
sahf
cmpsl
stc
lock
int3
test
push
mov
stc
jg
push
add
lock
jle
add
and
mov
push
cltd
nop
sbb
add
and
cmp
xlat
es
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
daa
or
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
std
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
or
mov
and
mov
stos
test
sub
and
dec
lea
popa
and
mov
outsb
gs
popa
data16
pop
mov
cmpsb
pop
jns
push
xor
movsl
xor
data16
add
in
les
jo
dec
arpl
jne
insl
aas
inc
insb
fs
sbb
mov
cmp
mov
or
lahf
push
outsl
lods
push
setl
gs
xor
push
inc
adc
push
fdivrp
xlat
add
push
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
mov
inc
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
shrl
andb
leave
hlt
mov
sahf
xchg
dec
add
les
lods
dec
lock
xor
pop
mov
pop
aas
and
in
repnz
and
test
mov
flds
sbb
push
nop
fwait
pop
dec
inc
mov
adc
push
loope
or
sarb
fildl
sub
mov
add
add
xchg
and
lods
cmovg
inc
shlb
out
xchg
pop
and
das
and
pop
fwait
imul
outsb
addr16
jbe
xchg
ja
push
jae
lret
mov
and
adc
in
data16
scas
orl
add
cmp
out
mov
lock
adc
aas
inc
mov
pcmpeqw
jl
push
fdivrp
or
shlb
daa
daa
je
xchg
jo
sub
insb
add
je
xor
xor
jmp
xchg
lret
test
cmp
ret
mov
testb
add
aad
jae
test
cs
cmp
or
jl
adc
outsl
imul
inc
and
jae
jae
insl
xchg
arpl
fs
pop
fadd
xorb
imul
jmp
cmp
push
jg
push
fcoml
fbstp
sub
aaa
lock
adcl
jg
mov
mov
push
push
daa
jnp
cmpsl
mov
jbe
cmp
ret
xchg
inc
jecxz
inc
mov
ret
dec
sbbb
jns
inc
dec
aaa
sbb
xlat
jg,pn
dec
sub
js
jmp
cmpsl
lock
dec
xlat
adc
jmp
xor
push
call
fidivs
mov
call
adc
iret
in
ret
xchg
sub
popl
dec
mov
divl
aad
and
cmp
rolb
jecxz
loop
mov
inc
xchg
insl
and
dec
dec
outsl
or
xlat
pop
jmp
ret
cmpsl
xchg
lock
pop
dec
jp
add
dec
ja
ja
pop
adc
jmp
jecxz
jg
or
stos
rorl
iret
dec
mov
pop
addr16
je
ficompl
pop
aas
shr
outsb
arpl
daa
pop
arpl
das
push
cmp
sti
push
sahf
mov
sub
repnz
push
lock
xchg
pop
jmp
js
mov
imull
dec
sbb
mov
fwait
jae
mov
popl
push
or
push
ss
push
popa
adc
cmpsb
sub
pop
rcrb
push
and
mov
inc
xor
add
xchg
cs
inc
aas
jle
das
outsb
sbb
push
push
xchg
je
cmp
mov
push
loop
lods
popf
jl
mov
push
arpl
les
adc
jae
fs
or
push
sub
cmp
into
or
dec
out
cmc
jne
dec
mov
sbb
dec
ficoms
ficomps
adc
aaa
inc
cmpl
xor
fsubl
cwtl
arpl
cmp
push
jne
sub
adc
popa
hlt
xchg
push
mov
outsb
shll
xor
jne
add
dec
loope
lcall
push
dec
mov
repz
notb
pop
push
test
mov
jp
and
push
jne
jo
popf
sub
sbbb
or
fwait
subl
push
sub
outsb
fstpl
testl
out
pop
pop
jno
pop
push
lret
and
pop
js
adcb
aaa
shll
sbb
pop
out
inc
xor
xor
addb
mov
cmpsl
shll
xchg
outsl
push
mov
mov
mov
push
sti
ret
pop
cs
loop
pop
xchg
adc
fwait
ds
dec
jecxz
shr
pop
ja
es
xchg
fnsave
pop
ret
scas
out
inc
push
inc
mov
imul
shll
je
testl
testl
sbb
mov
dec
out
mov
fistl
faddl
aaa
mov
dec
inc
mov
stos
xlat
xchg
es
je
pop
dec
sbb
insb
sti
cmp
push
sub
pop
scas
inc
bound
dec
cmpsl
mov
sub
dec
out
pop
pcmpgtd
cmpsl
xchg
inc
arpl
inc
add
cmpsl
pop
outsl
push
aas
and
lcall
out
mov
push
mov
inc
mov
jl
jg
jl
imul
push
and
sbb
addr16
bound
pop
outsb
out
push
das
ja
loopne
mov
xor
mov
mov
xchg
jo
mov
out
fcoml
jl
xor
adc
sbb
into
sbb
insl
inc
mov
add
ja
loopne
sahf
push
jmp
outsb
jo
addr16
pop
popa
pop
arpl
jp
xchg
call
subl
xorb
lret
jl
jo
js
jo
bound
jns
loopne
and
mov
push
sti
sarl
arpl
inc
mov
loope
loopne
daa
fs
mov
imul
hlt
adc
jl
les
sbb
xor
loope
pop
iret
sbb
cmp
mov
inc
addr16
or
push
outsl
pop
and
mov
stos
push
mov
insb
sub
pop
xchg
add
push
fistpll
pop
jmp
daa
jl
daa
ds
daa
icebp
mov
jns
jecxz
sbb
daa
jae
jo
inc
test
aas
dec
push
inc
add
loop
cmp
or
mov
xorl
cmpsl
lods
ret
pop
pop
cmpsl
sbb
lcall
jge
aaa
push
xchg
add
mov
or
xchg
mov
or
pop
aaa
pop
pop
fwait
push
pop
popa
inc
aas
lcall
and
loop
sbb
sub
push
add
imul
inc
add
dec
push
loope
pop
xlat
jl
dec
sbb
dec
and
push
sbb
mov
inc
add
xor
mov
pusha
pop
enter
dec
data16
aas
bound
dec
fcmovnu
mov
jmp
push
push
in
dec
jl
fwait
out
mov
push
and
push
and
fidivrs
xor
xlat
push
push
push
push
ret
out
jg
push
xor
cs
add
imul
sub
xchg
mov
test
pop
data16
cmp
pop
mov
ds
mov
filds
jecxz
xor
lock
repz
add
push
and
push
arpl
jns
jmp
addl
push
test
cmpsl
lcall
push
loope
push
push
jmp
mov
aaa
dec
and
stos
mov
mov
test
pop
sbb
and
xchg
adc
inc
not
pop
inc
pop
cmpl
sub
pusha
cmpsl
cs
insb
pop
aaa
mov
jae
aas
loopne
push
push
add
in
push
push
and
nop
mov
gs
insl
pusha
push
popa
jne
or
mov
shll
imul
bound
xor
sbb
and
mull
push
push
jb
je
xchg
push
int
jns
xchg
enter
dec
cmp
repz
mov
lcall
outsb
out
jge
out
sbb
pusha
pusha
sahf
bound
jne
shrb
pop
test
adc
ds
gs
je
cmp
loope
sub
sahf
xchg
jo
jb
testb
and
ss
popf
mov
inc
sbb
and
and
sahf
mov
arpl
das
adc
fs
adc
or
icebp
cmp
bound
push
sahf
and
or
or
ss
cmp
fildl
or
outsl
sub
jae
data16
sar
imul
adc
push
mov
add
test
decl
push
scas
imul
xchg
push
xor
push
push
pop
push
mov
push
inc
inc
push
daa
inc
pop
inc
mov
push
lahf
add
js
dec
xorb
popa
aas
inc
sbb
mov
out
pop
pop
add
sbb
addr16
adc
adc
enter
jmp
imul
cmp
pop
mov
rorl
add
hlt
adc
add
sbb
fsubrp
add
mov
icebp
add
jbe
sbb
mov
inc
sbb
ja
out
fnsave
and
add
or
xchg
movb
xlat
jae
mov
test
aaa
push
add
inc
fs
push
xchg
pop
xchg
popa
and
sbbl
mov
xchg
inc
mov
sar
jg
ret
sub
lret
cmpsb
mov
bound
inc
lock
adc
fildl
push
or
das
push
and
test
inc
outsl
add
mov
xor
or
pop
outsl
jg
cmp
loopne
push
dec
pop
js
lock
dec
dec
sti
les
mov
inc
xorb
sti
xorl
dec
mov
cmp
fimull
jnp
mov
rcl
pop
imul
add
jg
jae
and
cmp
mov
imul
or
and
ja
es
iret
pusha
mov
inc
xchg
imul
push
jae
imul
data16
popa
fildl
sbb
mov
bound
add
arpl
jae
call
scas
sbb
fs
add
addr16
push
mov
sub
xor
out
mov
addr16
fimuls
pop
shll
fidivl
add
test
add
lcall
cmp
pop
mov
jae
push
xchg
dec
rolb
push
xchg
out
pop
mov
fsubs
xlat
push
arpl
aam
add
sti
pop
add
aad
add
sahf
jg
push
call
inc
aas
inc
push
fisubrl
mov
push
stos
mov
pop
adc
fisttpl
or
mov
jg
add
pop
xlat
pop
jb
vmwrite
jno
insl
pop
sub
pop
lods
mov
push
je
jns
or
sbb
scas
adc
and
arpl
push
sub
pop
and
mov
sub
mov
dec
imul
je
inc
fwait
and
adcl
jb
rorb
jnp
push
cmpsb
sbb
imul
cmc
push
cs
cmpsl
push
cs
xor
cmp
jmp
mov
inc
test
pop
fisttps
sub
fisttps
out
and
xlat
jbe
or
push
imul
aas
imul
adc
pop
inc
pop
mov
add
add
cmpsl
aaa
inc
jno
frstor
das
mov
aaa
gs
rolb
sbb
mov
adc
mov
xchg
mov
xchg
inc
addr16
push
icebp
nop
inc
dec
jns
mov
imul
arpl
jae
sub
fists
divb
test
subb
popa
mov
xchg
push
daa
shll
mov
pusha
loopne
push
xchg
dec
imul
shrl
mov
push
ficoms
mov
adc
mov
shll
jmp
pop
jmp
inc
imul
xchg
lods
pop
fildll
ss
aad
es
roll
xchg
xor
pop
sbb
and
cmp
xchg
iret
push
mov
mov
aas
push
xchg
and
xor
mov
aas
incl
cld
les
mull
sub
jmp
fs
loope
sbb
jne
arpl
imul
pop
cmp
addr16
insl
jp
push
push
movsb
or
add
sbb
hlt
ret
xlat
jnp
pop
aad
add
push
mov
sbb
add
int
mov
imul
negl
sub
xorb
xor
mov
pxor
les
loopne
stos
mov
fs
hlt
clc
mov
jle
sub
imul
or
inc
pop
imul
xor
imul
data16
lds
push
lahf
xlat
popa
hlt
test
xchg
mov
cmp
lret
xor
call
ret
arpl
jo
lods
add
dec
and
mov
or
cmp
or
push
xor
dec
xor
test
push
mov
movsb
sbb
aaa
mov
test
or
test
ss
cs
xor
ja
push
pop
cmp
jnp
xchg
xor
rcr
ja
sub
dec
das
hlt
adc
and
cmp
pop
popa
add
ficoms
psubsb
pop
js
inc
addr16
push
pop
ficomps
dec
shlb
push
push
mov
clc
cmpsb
adc
pop
minps
adc
xchg
push
jmp
jbe
outsb
add
add
add
push
mov
cmpsb
adc
push
sahf
push
lret
xchg
and
jg
fs
dec
and
cs
or
outsl
iret
jp
dec
pop
inc
pop
addr16
mul
jmp
fwait
arpl
sbb
pop
xchg
arpl
or
clc
aam
sub
and
or
add
out
adc
je
jmp
imul
add
iret
push
jbe
cmpsl
xor
clc
push
and
stc
out
adc
xor
cmp
jg
cmpsl
fstps
mov
aam
push
and
cmpsl
stc
cmp
pop
add
jp
stc
xor
or
movsl
push
or
or
int
or
or
xor
inc
sub
mov
mov
scas
bound
mov
pop
xor
inc
mov
arpl
out
inc
mov
arpl
les
jg
fsubs
pop
pop
out
jmp
adc
divl
push
jae
shll
inc
pop
pushf
pop
addl
adc
push
lahf
pop
test
pushl
popa
les
pop
push
inc
test
out
pop
adc
mov
mov
arpl
mov
add
mov
adc
cmpsb
insl
mov
ljmp
fdivs
push
mov
out
or
xlat
jo
adc
bound
gs
lahf
mov
push
out
inc
fildl
xchg
out
push
pop
cmp
and
or
mov
cmpsl
xlat
pusha
and
add
daa
mov
mov
push
pop
sbb
and
in
clc
fisubrs
mov
rcr
imul
add
xor
out
ret
fistpll
jge
rcr
sub
mov
push
and
fs
adc
and
jle
mov
outsb
sbb
cmp
xchg
fcmovne
pop
mov
mov
adc
aas
aaa
pop
or
adc
adc
cmp
pop
push
mov
insl
arpl
bound
psrlq
pop
pop
or
lods
xor
in
or
push
jb
std
inc
push
jae
push
add
leave
push
fldt
cld
stos
inc
lods
xchg
pop
and
sub
stos
insb
dec
and
test
xchg
and
test
scas
xchg
test
xchg
mov
xchg
push
leave
cmp
cmpsb
xchg
repnz
and
dec
sub
test
xchg
stos
in
add
mov
adc
mov
scas
adc
mov
jo
enter
xchg
mov
repnz
lahf
orb
push
xor
sahf
stos
in
cltd
nop
cmp
and
xchg
inc
sub
in
pushf
cwtl
and
lock
push
jb
dec
pushf
dec
scas
xchg
test
pop
repnz
and
sbb
ret
adc
pop
sbb
sbb
mov
dec
sbb
jg
pop
clc
imul
push
sbb
xchg
dec
bound
xchg
inc
push
and
rolb
pusha
lods
aas
adc
mov
pop
fildl
int
inc
pop
iret
dec
or
sub
das
mov
shlb
pop
pop
or
lods
mov
pop
arpl
adc
aaa
mov
dec
add
fwait
add
mov
inc
data16
sub
push
mov
imul
sbb
insl
pop
xor
cmpsl
insl
xor
inc
aaa
mov
push
mov
popa
push
sub
and
jo
sbb
add
insb
sbb
cmpsl
das
mov
outsl
pop
add
cmp
push
scas
addr16
data16
push
sub
xchg
fildll
inc
mov
inc
mov
jg
or
out
jo
aaa
inc
je
shlb
imul
push
dec
inc
mov
mov
test
add
nop
mov
in
aaa
arpl
bound
aaa
xor
mov
outsl
sbb
pop
xor
bound
xor
outsl
jecxz
sti
test
bound
lahf
xor
cli
test
cmp
js
add
cmp
add
dec
push
xlat
adc
jg
xor
shll
ja
mov
push
mov
subb
iret
inc
dec
push
add
pop
jp
dec
fwait
ret
test
cmp
push
pop
push
les
jbe
push
sbb
mov
cli
lods
xlat
bound
addb
xchg
jae
and
or
jmp
es
and
sbb
dec
rolb
arpl
or
rcll
scas
fisttpl
or
add
sub
pop
ficoms
sarl
sub
or
popl
dec
and
dec
aaa
sbb
xchg
sub
jo
dec
jne
addr16
je
fs
gs
xchg
insl
je
mov
outsb
popa
xor
xor
xchg
les
loop
jo
cmp
push
addr16
pop
xchg
pop
fistl
fnstenv
lret
data16
les
jmp
popa
testb
add
bound
jae
xor
pusha
js
outsl
dec
js
mov
lea
adc
movsb
pop
jecxz
add
sub
adc
shl
imul
jge
or
pop
jae
mov
lea
adc
mov
iret
repz
sub
repz
loopne
push
stos
add
jns
xlat
adc
jnp
mov
test
incb
int
push
push
subl
push
sub
add
cli
pop
or
shrd
pop
xorb
pop
arpl
mov
cmpsl
xor
mov
push
jnp
or
and
xchg
aad
adc
push
outsl
push
and
xlat
xor
push
adc
sbb
lds
stos
movsb
xor
sub
rclb
jne
dec
mov
inc
and
or
lods
push
adc
mov
add
movsl
xor
addr16
cmp
js
xor
ljmp
pop
fwait
outsl
stos
subl
inc
jecxz
ja
adc
inc
jae
cmp
outsb
and
testl
pop
psrld
xchg
psubsb
lcall
dec
rol
cmpsl
push
scas
mov
stos
xlat
pop
adc
ljmp
xor
dec
push
cmp
scas
test
das
pop
addb
imul
xchg
pop
ljmp
bound
push
jnp
shr
push
push
cs
cmp
xchg
jnp
movsl
inc
xor
out
es
add
push
sbbl
pop
dec
push
insl
xchg
xchg
out
mov
mov
jns
xor
mov
fs
dec
stos
push
in
loopne
jnp
into
xor
jecxz
pop
fimuls
shlb
mov
inc
lock
out
or
xor
jne
push
inc
cmp
out
dec
test
xchg
jbe
dec
or
ja
jnp
inc
push
mov
ss
pop
pop
in
fimull
dec
mov
bound
xor
loop
incb
add
ja
mov
outsb
scas
pusha
stc
jecxz
cmp
push
xor
movsl
sysret
ret
pop
xor
mov
fidivs
fimuls
shlb
sub
arpl
fs
add
inc
mov
lock
mov
dec
daa
scas
fnstsw
inc
xor
push
mov
add
mov
packssdw
mov
pop
pop
mov
push
es
ss
pandn
ja
pop
push
push
xor
dec
jb
xchg
jl,pt
inc
pop
dec
es
das
add
loopne
mov
fbld
data16
inc
pop
lock
xor
dec
cs
lock
inc
lock
push
outsl
push
push
cli
push
push
insl
sub
push
neg
jnp
insl
mov
inc
ja,pn
xor
lods
js
mov
push
jp
ds
jmp
cmp
push
dec
jg
fimuls
xor
das
sbb
outsl
dec
xor
in
fisttpll
xor
mov
inc
outsl
imul
add
push
dec
jg
jecxz
inc
popl
push
or
fildll
int
stos
mov
repz
sub
jmp
fst
mov
inc
mov
shl
pop
cltd
test
xor
inc
dec
cmp
mov
jecxz
and
add
sbb
mov
iret
sbb
push
inc
inc
imul
adc
rcr
xchg
xchg
xchg
or
pop
xor
popa
or
add
and
sbb
movntps
mov
mov
test
mov
imul
das
or
and
pop
mov
add
iret
sbb
dec
xchg
arpl
mov
mov
inc
stos
scas
sti
add
bound
xor
leave
jmp
or
subb
daa
and
inc
ljmp
mov
sti
mov
dec
inc
or
xor
mov
mov
subl
sbb
cmp
mov
add
push
addr16
fiaddl
and
sub
mov
dec
cld
add
insb
outsl
popa
fs
outsl
cld
pusha
je
outsl
call
mov
imul
push
jg
fs
loope
sub
add
pop
mov
adc
adc
scas
test
movsb
inc
cmp
sbb
add
js
sub
sub
sub
add
add
inc
outsb
outsl
nop
push
or
fs
addr16
inc
sbb
icebp
jmp
sti
jae
loope
sub
in
lcall
pop
pop
push
outsl
dec
jmp
mov
data16
and
mov
push
mov
add
adc
out
push
cs
cwtl
add
mov
movsb
stc
cmp
mov
imul
pop
pop
jge
shlb
jne
push
push
ss
mov
pop
ja
xor
xor
push
xorl
lods
mov
das
fadds
xchg
dec
les
je
push
loope
mov
outsl
call
push
add
lahf
sub
sub
xchg
mov
sbb
sub
push
sub
add
xorl
jg
fildl
pushl
jg
ret
inc
sub
pop
dec
arpl
mov
iret
daa
xchg
popa
roll
mov
movsl
cs
fsubs
push
inc
or
lods
stos
cmp
ret
stos
mov
ret
das
and
test
add
iret
inc
mov
pop
popa
pusha
clc
lock
repz
push
sub
lds
lahf
mov
xor
pop
pop
testl
jmp
out
inc
fildll
test
ja
dec
adc
push
jl
sub
daa
jns
or
shlb
xlat
iret
fists
pop
je
daa
mov
xchg
xchg
outsb
dec
arpl
lea
inc
addr16
jbe
or
mov
lea
lods
push
scas
push
das
xchg
xor
sub
fisttps
sub
ljmp
mov
adc
cmp
nop
outsb
xor
mov
add
dec
xlat
jle
sarb
shld
sbb
dec
add
das
pop
ss
imul
inc
inc
mov
sub
push
jo
addr16
aas
sub
inc
mov
out
int
cmp
out
add
fucomp
in
sub
or
negl
push
sbb
xchg
outsl
xor
cmpl
add
dec
cltd
xor
or
pop
push
add
or
ss
int
adc
adc
sbb
and
inc
cmp
xor
inc
mov
mov
ja
mov
mov
popa
xchg
add
mov
fldcw
test
sub
shrb
jl
int
xchg
pop
adc
pop
add
ss
sbb
fldcw
lret
str
add
mov
stc
das
incl
mov
push
push
adc
pushf
mov
outsl
add
adc
pop
bound
xor
testl
aas
mov
mov
out
push
and
ljmp
ljmp
mov
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
roll
ss
adc
cli
mov
sub
sub
decl
sbb
mov
sbb
mov
ds
lahf
in
pop
enter
lods
sub
and
jle
jo
jmp
sti
fsubs
sbb
mov
add
xchg
cmc
pop
dec
xchg
jecxz
dec
push
pop
sbbl
test
jg
pop
push
rcrb
shlb
cmp
loop
sbb
roll
imul
dec
sahf
push
mov
roll
inc
xlat
push
xchg
clc
addl
inc
stos
fsub
add
mov
pop
xchg
out
and
xchg
dec
dec
sahf
sub
sbb
jae
mov
xor
cmp
iret
leave
xor
cmp
inc
pop
jb
pushf
mov
ret
jae
dec
mov
add
repnz
xor
lahf
push
adc
or
jbe
xor
dec
xorl
shlb
xchg
xchg
shll
push
mov
pop
mov
pop
cmp
sbb
mov
jnp
cmp
ss
cmp
sub
mov
cmp
push
jp
sbb
or
stos
inc
xor
fsubp
cmpsb
jp
mov
cmp
bound
mov
call
push
cmc
add
sub
mov
pop
daa
bound
je
bound
imul
and
ds
mov
adc
sbb
popl
push
mov
mov
adc
test
sub
mov
movsl
pop
push
jo
dec
sub
fisubrl
push
scas
testl
je
add
sub
inc
loope
xor
and
xchg
hlt
mov
and
push
dec
jmp
out
incl
jp
push
mov
add
outsb
or
incl
and
movsl
dec
shlb
cmc
add
cmp
mov
fstpl
gs
or
jg
adcl
pop
or
test
shll
js
xor
outsl
fcoms
pusha
jbe
outsl
ljmp
loop
shll
dec
outsl
inc
add
add
dec
movsb
imul
jl
mov
ret
test
pop
push
sti
outsb
int
fs
addl
jne
scas
xchg
jns
orl
inc
mov
sahf
jbe
iret
addb
xchg
sbb
sahf
inc
xchg
lahf
addr16
and
or
iret
fwait
imulb
mov
xchg
cmp
test
outsb
pop
ss
pop
inc
rcr
mov
es
ja
in
push
xchg
mov
mov
out
outsl
inc
popl
int
jb
push
out
inc
fiadds
jecxz
es
fmull
jmp
and
fidivrs
fbld
mov
adc
mov
enter
and
dec
shl
xor
notl
shr
push
enter
inc
cmpsb
mov
mov
repz
fs
mov
ja
push
push
sarl
or
dec
insb
adc
inc
fcomi
cmp
pop
jle
js
or
mov
aas
es
jnp
aaa
mov
inc
fs
xor
mov
out
push
fildl
loop
repnz
leave
repz
xor
push
dec
insb
je
cmp
fwait
jge
jge
pop
mov
cmp
cmpsl
stc
adc
inc
mov
push
cmpsl
les
push
mulb
sysret
mov
xchg
ljmp
fsts
inc
xlat
cmp
xchg
inc
jecxz
out
jns
jnp
aaa
push
fildll
ss
push
pop
mov
aas
push
sbb
adc
cmpsl
sahf
cmpsl
jge
pop
jg
outsl
push
mov
es
popf
xorl
mov
out
mov
adc
push
ror
repz
xor
xor
sahf
cmpsl
stc
cmp
push
ss
pop
lock
ds
jge
aaa
push
cmp
pusha
sub
pop
xor
repz
xchg
push
push
jno
out
fcomip
shl
cmp
iret
sarl
std
and
inc
xchg
fiaddl
cs
sahf
out
jl
cmp
xor
sahf
out
push
jbe
lods
leave
repz
out
cmp
int3
cwtl
bound
clc
lcall
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
sbb
pop
pop
mov
and
push
mov
pusha
loope
add
idivb
lahf
negb
adc
push
and
pop
sbb
enter
pop
enter
inc
repnz
iret
pusha
or
and
shlb
add
outsl
push
pop
adc
sub
push
dec
insb
mov
aas
pop
pop
push
inc
xchg
inc
rolb
ja
emms
imul
popa
nop
out
out
js
xor
popf
sub
gs
cmp
popa
popf
xor
test
sbb
sarb
mov
push
test
imul
mov
mov
rorb
dec
js
cmpsl
push
dec
ljmp
les
popa
je
mov
inc
and
cmpsb
mov
pop
jl
scas
pop
inc
mov
push
jbe
outsl
out
pop
push
ficoml
imul
arpl
daa
jb
movsb
outsb
add
push
and
dec
lea
inc
cli
and
add
pop
scas
adc
pop
sub
sbbl
lahf
push
out
inc
sub
push
shrb
mov
out
lods
inc
loope
scas
mov
add
jmp
icebp
jo
inc
scas
movsl
mov
jecxz
dec
incl
lea
insl
xchg
ror
mov
dec
ret
bound
push
dec
fmuls
fs
out
jb
xor
dec
adc
and
jbe
adc
iret
lret
inc
pop
adc
iret
fs
repz
push
push
arpl
mov
adc
xor
mov
add
add
cmp
sysexit
bound
sub
xchg
jp
imull
sbb
test
jbe
jo
xor
cmpsl
push
test
jge
push
outsl
imul
jnp
xchg
add
pop
pop
cmpsb
jecxz
dec
getsec
push
test
jnp
outsb
or
rcrb
add
mov
pusha
add
test
dec
mov
push
xchg
add
aas
xor
mov
js
inc
outsl
push
mov
push
adc
aas
inc
push
insb
gs
xlat
loopne
rclb
cmp
inc
dec
scas
push
or
sbb
push
dec
arpl
push
adc
addr16
sub
cmp
sbb
ja
iret
fs
sub
xor
das
pop
lods
and
push
cmp
and
imul
inc
loopne
jne
xchg
push
mov
mov
sub
sbb
xchg
push
add
sbb
jg
push
mov
scas
outsl
test
imul
loope
fcomp
jmp
gs
imul
pop
das
testl
iret
out
popa
rclb
pop
mov
xchg
das
cwtl
adc
pop
sbb
mov
je
push
mov
pusha
insl
mov
mov
xchg
sub
xor
dec
push
sbb
ret
inc
ret
pop
shlb
mov
orl
arpl
lret
cmc
add
scas
out
insb
and
mov
add
test
pop
sbb
fdivs
add
add
sbb
inc
jg
rol
loope
push
xor
sbb
ss
test
mov
sub
push
negb
scas
aaa
pop
mov
push
aad
imulb
dec
jae
cmp
daa
inc
cmp
adc
mov
mov
pop
es
orb
ss
inc
mov
adc
aaa
jnp
dec
or
mov
sti
inc
push
xchg
mov
inc
ss
inc
pop
fistl
add
inc
loope
sbb
xor
je
cmp
add
cmpsl
push
push
fcmovu
push
out
ret
pop
out
push
adc
testl
lods
addl
dec
inc
arpl
push
aaa
jns
cmp
jno
outsl
ja
add
push
xlat
cmpsb
repnz
xchg
jno
aas
das
adc
and
aas
int
xor
popa
insl
jo
aaa
shr
jbe
insb
je
add
addr16
loope
mov
sbb
pop
jno
outsl
xor
push
xor
xor
aaa
jae
mov
add
incl
xrelease
je
jne
or
mov
mov
lahf
inc
call
out
aaa
mov
fdivrs
xchg
and
insl
mov
ss
inc
fwait
pop
rolb
or
loop
je
imul
push
inc
add
popa
int
pop
xlat
inc
sub
xor
ret
repz
and
lock
dec
imull
pop
mov
adc
pop
mov
push
push
cmp
loopne
iret
dec
sbb
mov
mov
jg
xchg
or
fcompl
inc
pop
pop
test
into
dec
jne
mov
push
pop
dec
jmp
xor
adcb
pop
inc
sub
pop
cmpsb
pop
movsl
jp
mov
adc
lcall
mov
xchg
fidivrl
jb
or
ror
pop
fcmovu
adc
dec
pop
or
add
mov
sub
out
inc
outsl
outsb
or
aaa
inc
push
cmp
sysret
pop
push
mov
jecxz
loope
mov
decl
dec
lret
out
push
arpl
add
imulb
aas
inc
push
dec
inc
dec
push
xchg
loop
and
xor
pop
ja
andl
fiadds
jg
ret
cmp
jle
add
and
push
dec
into
add
add
test
jb
mov
add
insb
andl
js
cmp
shrb
pop
ja
popa
in
into
cmp
and
ds
das
sbb
cltd
orb
add
pop
daa
cmp
push
and
push
divl
lcall
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
imul
ja
and
push
or
inc
pop
pop
jmp
popa
outsl
pusha
insb
pop
gs
lods
xor
daa
out
ds
loopne
xor
popw
push
clc
push
fadd
sbb
push
add
dec
dec
sbb
xor
into
push
pop
adc
and
inc
push
lahf
fdivrl
push
fsubl
add
mov
cli
es
xor
lahf
push
fdivrs
outsb
inc
push
mov
sbb
int3
jl
pop
lahf
xchg
shl
lahf
outsb
lea
inc
mov
data16
push
cmc
sbb
push
jne
push
psrad
mov
or
add
and
push
pop
add
es
cld
fadd
push
mov
iret
outsl
in
mov
outsl
xor
daa
dec
lahf
mov
enter
dec
and
jl
lea
xor
xchg
daa
or
lds
dec
divl
ret
jbe
ja
out
push
imul
ja
rcl
xor
and
lock
and
bound
cmp
push
cwtl
sub
jns
popa
mov
insl
fs
and
mov
stos
pusha
dec
decb
inc
fisubrl
out
and
xor
and
pop
or
push
cmpb
cltd
test
dec
inc
push
and
add
pusha
lahf
push
push
pusha
fdivr
mov
insl
outsl
fs
gs
jo
jns
iret
sbb
pop
mov
jmp
pop
outsl
insl
jne
lds
fiadds
or
or
addr16
cmp
fcoms
je
sub
pop
gs
inc
insb
cmovnp
aas
fbstp
pop
lea
imul
sbb
aaa
xor
pop
sbb
jo
std
push
outsb
or
sahf
dec
sub
mov
adc
xchg
inc
or
inc
xadd
sbb
inc
cmovo
dec
xchg
mov
arpl
cmpb
aas
nop
jo
maxps
inc
adc
loopne
jg
hlt
cs
mov
and
push
mov
or
adc
sub
bound
das
sbb
and
inc
sbb
push
sbb
ds
sahf
fimuls
in
push
inc
push
addr16
dec
push
neg
adc
daa
fisubs
push
mov
pusha
inc
add
in
and
add
test
xchg
iret
inc
loopne
daa
clc
add
jbe
adc
inc
xchg
mov
rep
test
daa
xchg
sahf
or
xchg
push
nop
push
rcr
fstp
repz
or
push
je
int3
scas
lock
inc
ss
ret
pop
lods
out
push
mov
test
in
xchg
xchg
mov
cmpxchg
ret
or
xchg
jg
xchg
outsl
xchg
mov
add
or
scas
jo
js
imul
lods
ss
jl
ror
push
pop
adc
clc
aas
mov
and
inc
xchg
inc
pop
jb
arpl
xchg
clc
cmp
addr16
ds
xchg
push
pusha
jl
or
cmp
xchg
push
nop
mov
pop
and
jae
in
clc
xchg
clc
pop
enter
sub
cmp
pop
pop
addr16
hlt
jo
pop
lock
daa
hlt
stc
pusha
insl
subl
movsb
mov
loopne
and
inc
add
pusha
fstpt
and
jbe
daa
outsb
xchg
jl
xchg
idivb
jo
sar
cs
fisttpll
lahf
push
les
lahf
or
mov
xchg
inc
jo
xor
pop
shr
xchg
inc
adc
add
and
ja
negb
mov
jbe
cs
je
loopne
pop
imul
dec
xor
movsb
daa
negl
scas
mov
adc
divl
in
hlt
addr16
push
jb
out
aaa
mov
in
pop
inc
xchg
mov
mov
daa
pop
addr16
or
jl
cwtl
mov
jl
jnp
repnz
push
mov
in
xchg
adc
mov
es
les
sub
xor
rcr
loopne
daa
addr16
mull
fs
fs
je
mov
lds
nop
xchg
sub
jmp
push
fisubrl
cmp
jnp
pusha
in
hlt
cld
mov
in
out
dec
push
lahf
mov
pop
cmp
dec
push
jl
shll
lods
mov
aas
or
mov
lahf
sarb
sahf
mov
jl
int3
fsubrl
nop
or
hlt
int3
es
and
sbb
sub
insl
pop
sti
push
cmp
lahf
dec
lahf
ja
enter
push
insb
jl
and
repnz
jae
iret
test
jb
pop
enter
outsl
inc
ds
test
fwait
sbb
sub
add
test
sbb
dec
rcrb
xchg
andb
test
jb
cld
mov
inc
ds
rcl
movsl
cld
fnstcw
add
pop
in
mov
push
aam
push
addr16
lcall
mov
js
pop
jb
dec
push
pop
js
iret
test
mov
or
lods
jnp
repnz
push
and
fiaddl
mov
jg
test
cmpsl
fcoml
or
fs
pop
sarb
mov
int3
or
and
test
cld
mov
out
push
lods
cmpsl
out
cs
cmp
push
push
sahf
pusha
je
stos
mov
inc
es
imul
movsb
daa
addr16
les
dec
add
out
hlt
add
adc
inc
cs
or
out
inc
lahf
push
fs
pop
and
call
dec
repz
xchg
movsb
mov
pop
in
push
dec
lahf
xchg
stc
pop
enter
hlt
add
inc
cs
or
jge
xor
movl
push
xorps
jg
enter
cwtl
mov
lods
mov
pop
enter
fsubr
cs
aam
mov
es
add
pop
push
push
push
mov
cmp
mov
cmpsl
xor
test
xor
pop
jb
pop
fsub
mov
jmp
call
add
mov
xchg
sub
cmp
dec
mov
insl
inc
inc
jg
sarb
out
mov
jb
cmpsl
jl
rclb
out
loopne
mov
in
push
cmpsl
rorb
clc
es
mov
aas
stc
push
insb
dec
cmpsl
jg
orb
in
js
mov
pop
enter
add
pop
repnz
push
enter
loopne
outsl
inc
sbb
add
out
adc
insb
mov
adc
aad
dec
lcall
lds
sbbb
clc
loopne
pop
push
inc
repnz
adc
and
repz
insl
ja
nop
pusha
movsl
cs
jo
test
aam
nop
jns
mov
jg
mov
mov
lahf
mov
add
xchg
clc
adc
cmpsb
push
sub
sbb
cmpsb
lods
cltd
pop
or
daa
addr16
lods
dec
add
out
test
mov
jne,pn
push
inc
test
nop
out
pusha
cld
or
nop
or
cld
jnp
repnz
push
jo
pop
and
rol
mov
int
pop
mov
pop
sub
push
repnz
inc
lock
iret
mov
jg
adc
insb
jmp
xchg
test
les
mov
jl
or
xchg
test
movsb
mov
push
das
push
inc
and
add
jg
sub
or
inc
call
lods
cmp
out
push
pop
push
lods
inc
lods
sahf
outsl
insl
jg
fmull
addr16
lahf
faddl
lcall
fdivrl
pop
stos
outsl
push
iret
lds
test
cmpsl
xor
mov
inc
inc
lahf
dec
iret
insb
insl
adc
sbbb
nop
mov
addl
jl
pop
enter
and
xor
inc
stos
lahf
test
sti
push
ja
aam
jo
pop
repnz
adcb
ja
sahf
shrb
test
loopne
ds
lahf
ja
xor
mov
imul
ja
push
jmp
sahf
fs
daa
addr16
mov
stos
in
outsl
aas
mov
decl
sahf
or
pop
and
lods
loopne
mov
lcall
mov
mov
das
enter
and
mov
call
daa
iret
nop
clc
call
pop
jg
or
xchg
lods
addr16
dec
enter
test
lods
rcrb
push
inc
scas
fadds
fisttpl
pop
mov
cltd
loopne
test
push
sbb
jae
int
daa
sub
mov
in
or
xchg
fadds
hlt
or
fcmovb
incl
scas
mov
or
pop
inc
lcall
cmp
push
push
mov
call
pop
enter
jmp
push
jl
int3
ja
js
outsb
mov
outsl
pop
lcall
pop
mov
adc
sbbl
sbb
xlat
data16
scas
push
es
lds
orb
addr16
aas
pop
out
cs
pop
xor
in
dec
daa
call
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
xchg
negl
call
mov
jl
lcall
mov
sahf
out
xor
mov
lcall
mov
mov
stos
cmp
cwtl
push
inc
sub
iret
repz
cwtl
inc
sub
imul
push
pushf
andb
insb
push
xor
enter
ljmp
mov
xchg
inc
xchg
dec
hlt
insb
movsl
addr16
inc
push
bound
aas
dec
inc
repz
lcall
mov
jae
dec
pusha
add
add
fdivs
shlb
rcrb
fs
call
clc
les
pop
leave
mov
add
sbb
add
mov
ret
dec
xchg
jg
xchg
fmul
xchg
or
adc
jns
xchg
mov
pushf
mov
and
inc
push
lock
xchg
sub
xchg
mov
or
outsl
add
insb
and
jns
daa
inc
pusha
mov
popa
dec
sahf
jo
outsl
add
cmp
filds
pushf
or
mov
xchg
adcl
mov
add
jmp
sub
outsl
out
in
in
sub
cmc
push
test
mov
inc
xchg
or
push
mov
aam
push
xor
decl
sub
in
xchg
or
xor
popf
fbld
pop
enter
jo
xor
jl
outsl
add
jnp
ret
fildll
mov
add
cmp
dec
xchg
scas
in
dec
test
push
in
mov
mov
dec
xor
enter
and
lahf
mov
rol
jg
insl
mov
mov
pop
jg
jb
and
sub
fwait
nop
pop
sbb
sub
cmp
sub
add
and
in
and
fs
js,pn
jmp
pop
push
shrb
scas
and
rolb
hlt
mov
cmp
lock
add
xlat
rclb
getsec
rcll
out
add
or
daa
jns
xor
call
pusha
add
adc
mov
xor
mov
push
enter
jg
adcb
call
je
fs
push
xchg
mov
and
mov
ss
mov
cmpsb
lahf
xchg
push
dec
and
ja
lahf
and
mov
sbb
stos
outsl
jg
mov
xchg
daa
movsb
outsl
and
push
fs
scas
push
aam
push
mov
ja
jbe
mov
enter
stos
dec
xchg
mov
test
mov
in
mov
pop
insl
or
or
imul
test
add
ss
fst
or
dec
lock
je
movsb
mov
pushf
hlt
mov
or
mov
push
inc
outsl
and
mov
add
pop
push
push
mov
scas
rcr
loopne
negl
pop
pop
in
aaa
mov
xor
ja
stos
sbb
add
mov
cmpsl
mov
push
xor
dec
mov
enter
mov
sarb
in
pusha
mov
adc
iret
aam
movsb
jg
shlb
ss
jb
push
jg
addr16
or
mov
cs
xchg
pushf
add
sub
jnp
adc
call
push
mov
arpl
rol
das
outsl
add
stos
push
imul
aaa
pop
mov
pop
roll
shll
enter
cwtl
push
jl
aaa
add
and
idivb
add
ret
iret
cld
out
xlat
jo
push
xor
sahf
iret
aad
sub
daa
mov
xchg
pop
leave
in
mov
daa
or
xor
leave
add
or
sahf
testb
push
les
xor
cmp
sarl
test
cmp
adc
lcall
je
scas
lahf
or
ret
mov
cs
xchg
addr16
ret
xor
and
inc
push
ret
imul
pop
or
fbstp
loopne
cmpsb
nop
fwait
xchg
add
in
leave
adc
dec
add
adc
scas
push
lcall
test
mov
movsl
les
scas
add
and
pushf
outsl
out
adcb
adc
sub
lahf
jo
add
mov
roll
jb
or
out
xchg
fsubr
out
daa
or
js
pop
add
cmpsl
mov
mov
push
lods
daa
aas
sbb
sbb
outsl
xor
push
fists
sahf
add
clc
es
addr16
and
mov
dec
divl
or
xor
push
inc
add
jo
inc
call
jb
mov
je
mov
cmp
dec
in
fadds
fs
ss
add
adc
nop
repnz
inc
enter
push
pusha
lods
mov
push
ja
enter
or
push
lods
push
hlt
das
mov
mov
inc
call
in
fsubrs
loopnew
pop
mov
xchg
rcl
push
nop
and
inc
push
std
dec
out
cmp
sbbb
adc
lahf
out
sahf
inc
jnp
int3
repnz
xor
jae
ret
out
sahf
cmpsl
stc
or
pop
ja
repz
out
or
cmpsl
stc
cmp
popf
ret
out
popa
jbe
idivl
pushf
lret
bound
push
jo
xor
out
xlat
and
rcrb
push
push
std
and
dec
repz
inc
pushaw
addl
jns
out
and
jl
into
repz
repz
inc
push
iret
mov
mov
repz
in
or
dec
arpl
out
repz
call
jno
repz
movsl
rcrb
sbb
jl
cmpsl
stc
adc
adc
rorl
xchg
mov
out
sahf
out
outsl
sub
repz
add
daa
dec
xchg
fisubs
int
jns
jno
lods
sbb
sahf
out
cmp
faddl
jae
leave
ds
sarl
insl
mov
lahf
out
cmpl
jbe
fists
ja
repz
out
fidivs
pop
xchg
repz
iret
loopne
jns
jp
mov
jns
out
jnp
xchg
mov
stc
clc
cmp
sub
push
outsl
stos
jl
jge
out
fiadds
push
iret
cli
ss
stc
cmp
out
xchg
adc
lret
pop
xor
sahf
cmpsl
dec
mov
out
dec
hlt
push
adcl
dec
repz
daa
test
test
lahf
out
sub
add
jecxz
mov
ljmp
push
xchg
mov
iret
roll
sbb
push
shl
mov
imul
lea
out
cmp
and
dec
repz
fs
add
jl
xchg
popf
das
xchg
pop
scas
loope
repz
xchg
inc
sahf
cmpsl
stc
cmp
adc
ds
sarl
dec
shrb
imul
stc
cmp
repz
jb
clc
dec
cltd
repz
cmpsl
mov
inc
lcall
sub
repz
dec
shll
cmp
ds
ja
add
cltd
jns
out
xlat
xor
imul
mov
repz
out
aam
movsl
push
test
cmpsb
ds
mov
cmpsl
dec
cmpsb
ds
repz
xor
out
mov
test
sarl
mov
stos
mov
jg,pt
scas
ljmp
cmp
cld
inc
scas
jl
fnstcw
repz
cmpsb
push
and
xor
cmpsl
ret
testb
dec
mov
ds
mov
mov
sahf
mov
mov
mov
insb
ss
out
push
int
insb
aas
enter
dec
mov
adc
int3
incb
iret
jp
shrl
aam
mov
dec
int3
nopl
cmpsb
inc
pop
push
aas
aam
repnz
push
sub
xor
popa
mov
inc
and
cmp
out
cmp
or
or
inc
and
push
pop
aaa
pushf
mov
repz
mov
ds
ds
inc
repnz
mov
or
shlb
fdivr
jle
add
fidivl
lds
dec
ss
jg
arpl
aas
mov
jg
and
xchg
mov
aas
into
mov
xchg
push
fwait
inc
pop
inc
and
cmp
dec
negb
fdivs
cmpsl
mov
scas
dec
mov
adc
es
mov
adc
in
das
fs
and
xchg
repnz
fcomi
add
pop
inc
nop
cmp
jo
aas
data16
inc
jnp
and
and
in
pop
jnp
enter
mov
insb
mov
daa
nopl
sarl
sahf
pop
push
xchg
adc
jmp
pushf
popf
pop
or
rorb
sarb
inc
pop
adc
lock
in
rorl
sub
shlb
pop
dec
sahf
popa
dec
leave
test
pushf
shrb
sbbl
mov
ja
inc
lock
cmp
push
bound
pop
cmp
xchg
ds
adc
shll
jns
imul
mov
lcall
loopne
add
in
sub
pop
xor
cmp
or
inc
enter
mov
dec
mov
inc
scas
les
xchg
mov
cmp
in
je
leave
cmp
sub
daa
dec
scas
fcomp
xchg
negb
dec
or
out
and
inc
addr16
ja
pop
aaa
fistpll
jb
addr16
gs
fbstp
jb
pop
lock
sahf
pusha
fwait
dec
pop
sub
les
pop
xor
daa
push
out
mov
pop
pop
adc
or
and
inc
jae
xchg
call
imul
jo
pop
xor
popf
sub
mov
mov
mov
aas
ficoms
in
jb
add
adc
in
and
xlat
out
add
push
add
sbb
mov
aaa
scas
inc
fcomps
inc
nop
xchg
scas
test
daa
mov
in
xchg
pop
lcall
push
push
daa
fcom
out
fadds
add
push
loop
push
sti
add
mulb
fadds
push
fstpl
pop
or
add
in
mov
test
mov
sahf
xchg
hlt
add
add
pushf
xchg
xchg
dec
add
jne
fnstcw
xchg
xchg
xchg
cmp
pop
out
push
pushf
pop
pusha
xchg
inc
push
mov
sarb
ficomps
fcmovu
sbb
dec
lahf
popa
xlat
or
out
add
pop
pop
push
lahf
push
add
jnp
das
cmpsl
push
inc
mov
imul
xor
jbe
addr16
push
mov
inc
mov
clc
rclb
in
popa
and
xchg
test
jmp
push
xlat
fistl
ja
jmpw
andb
mov
xchg
out
cmpsb
jl
pop
or
cmpsl
scas
push
bound
adc
fisttpl
in
fdivl
jmp
push
iret
xchg
xchg
cli
add
in
cmp
sbb
in
dec
nop
cmpsl
add
cmp
dec
push
pop
mov
in
mov
nop
cmpsl
cwtl
pop
mov
ret
in
jbe
pop
mov
fnsave
add
addr16
sbb
jb
stc
add
femms
mov
sbb
and
iret
repz
or
or
or
cmp
push
or
imul
cs
cwtl
fstl
push
pop
das
leave
xchg
add
popa
insb
adc
push
daa
fisubrs
lock
movsl
adc
xchg
xchg
xchg
fisubs
orl
dec
cld
sbb
in
inc
repnz
inc
fs
fists
das
jbe
cmp
enter
gs
cmpsb
and
sbb
gs
in
ret
xchg
gs
decl
mov
in
data16
cmpsl
loop
das
pop
cmp
cmp
adc
and
cmp
es
pop
mov
jnp
loopne
daa
daa
pop
dec
sahf
cmpsl
stos
mov
jno
out
push
add
add
mov
jmp
cmovg
testb
sahf
xchg
pop
je
pop
clc
dec
dec
and
loope
jcxz
insb
mov
inc
push
aas
inc
dec
sbbl
jb
leave
imul
rcrl
xchg
daa
and
mov
jb
push
loop
jmp
mov
push
xchg
mov
mov
fmul
sub
jo
daa
loop
loopne
aaa
leave
and
adc
daa
xor
pop
push
fs
mov
mov
add
nop
jecxz
xchg
je
in
xlat
dec
push
or
sbb
daa
cld
add
cmp
jmp
inc
ja
mov
xchg
mov
dec
dec
data16
dec
imul
add
mov
push
jns
inc
in
add
cltd
in
test
aaa
mov
pop
bswap
repnz
addr16
cmp
leave
sub
inc
push
adc
cmp
mov
lock
pushw
dec
pop
xchg
testl
out
in
dec
sbb
inc
out
dec
scas
inc
jg
mov
iret
jl
pushf
adc
mov
hlt
xor
loope
cltd
bt
lods
mov
push
add
ja
pushf
test
loopne
ja
cmpsb
sbb
imul
addr16
out
shl
dec
outsb
mov
addr16
add
add
xchg
insl
mov
pop
adc
repnz
out
cmpsl
pusha
call
in
call
pushf
cmp
sub
mov
sbb
mov
push
sub
xlat
popf
mov
dec
push
pop
push
out
sahf
out
add
imul
jns
jbe
addl
mov
xlat
or
add
addr16
xchg
das
fisubl
xor
or
lahf
insl
xchg
ljmp
out
pushf
dec
and
fwait
pop
mov
mov
mov
pop
leave
jae
mov
hlt
mov
insb
insl
addr16
addr16
dec
shll
addr16
push
fs
sbbl
pop
insb
lods
cwtl
adc
outsb
dec
and
clc
dec
jb
pop
sbb
and
xchg
call
leave
inc
xor
push
insl
test
mov
xchg
or
xchg
jmp
add
cmp
pop
jo
in
inc
push
jmp
inc
jb
jb
addr16
pop
in
imul
add
push
jno
femms
xor
lods
cmp
push
nopl
in
das
fcmovb
filds
add
mov
popf
mov
jmp
repnz
cmpsb
mov
mov
iret
pop
mov
fst
divb
add
sub
lahf
fsubr
int3
out
in
out
cmp
scas
xor
or
add
and
xlat
inc
out
push
inc
fmul
dec
jb
push
mov
popf
xchg
mov
xchg
out
xlat
daa
mov
outsl
xchg
push
add
test
mov
mov
jb
into
jb
scas
test
rorb
nop
scas
jecxz
daa
nop
add
add
test
xchg
dec
lock
jbe
fstpl
push
push
insb
lock
pop
daa
sbb
jae
xor
jns
jae
jae
jae
pop
sahf
out
lahf
jo
push
jge
push
mov
je
and
dec
and
cmp
scas
and
pop
aas
cld
scas
pop
je
not
je
outsl
fnstcw
mov
pop
push
out
nop
ja
fldcw
mov
mov
bswap
icebp
cmpsl
mov
addr16
jbe
adc
fistpll
and
add
add
je
fnstsw
aas
pop
mov
push
add
das
gs
jns
daa
iret
add
mov
cmpsb
jne
pushf
jne
outsb
adc
add
fisubl
in
add
xchg
cmp
jbe
pop
jbe
mov
mov
push
pop
fnstsw
add
bt
iret
push
loop
pop
xor
decl
xchg
dec
push
cli
jbe
ja,pn
mov
pop
inc
push
leave
in
mov
ja
xchg
mov
or
mov
leave
imul
cmc
sbb
daa
mov
out
stc
add
or
inc
repnz
loopne
js
add
dec
fisttpl
fists
mov
jle
ja
jo
mov
mov
ja
addr16
getsec
cmpsl
push
push
hlt
mov
inc
pop
add
es
cmpsl
jp
cmp
ss
inc
jns
insb
pop
add
dec
div
je
jbe
jg
pop
jg
fwait
cmpsl
into
leave
mov
jns
stos
push
mov
das
int3
outsb
pop
cmp
or
out
das
in
lahf
out
repz
or
add
push
jp
repnz
sbb
and
leave
addr16
adc
jp
test
stos
pop
jno
outsb
push
pop
jp
fwait
dec
scas
push
mov
dec
xor
int
out
fdivrl
ja
pop
decb
jns
add
push
jnp
jnp
iret
sbb
pop
push
daa
push
jnp
or
outsb
and
xchg
testl
dec
push
fdivl
mov
mov
in
out
clc
lods
push
jne
jnp
fsubs
xchg
jnp
jnp
jnp
jo
testb
jl
push
jl
and
add
outsl
lahf
std
pushf
out
push
jns
stc
sbb
daa
push
inc
xor
sub
add
jbe
ljmp
inc
test
xchg
mov
in
stos
scas
hlt
in
lock
in
cli
mov
xchg
jl
and
into
lcall
in
xchg
aad
cmp
fisttpll
add
out
xlat
testl
add
or
ficoml
push
inc
out
sub
jbe
jns
jne
push
addr16
push
add
cmpsl
cs
add
jmp
fisttps
inc
les
rcl
ljmp
xlat
addr16
das
xchg
dec
loopne
jle
dec
and
unpcklps
mov
movsl
jg
daa
xchg
dec
and
scas
mov
das
rorb
add
inc
iret
repz
testb
test
mov
mov
das
paddd
rorl
pop
bound
mov
mov
test
jg
jg
jg
in
and
out
insb
daa
daa
icebp
cld
ja
ret
mov
ja
sbbb
ja
pop
movsl
aaa
aas
push
add
inc
subb
subb
inc
lds
jge
push
xchg
xchg
out
inc
jmp
mov
push
outsl
jl
xchg
xchg
js
stc
iret
add
shl
adc
outsb
aaa
arpl
pop
cmpsl
jg
pop
dec
xlat
popf
xor
push
xchg
pop
push
out
jns
add
in
dec
sahf
or
mov
cmp
out
nopl
movsb
push
lods
mov
out
sahf
xchg
mov
sahf
out
xchg
aam
adc
and
or
in
cmpl
mov
xorb
or
js
pop
das
xor
in
and
call
movntq
insl
xchg
push
cmp
andl
pop
xchg
les
cmp
cmp
aam
push
dec
lds
xchg
orl
test
pop
test
xor
dec
addr16
add
addr16
leave
leave
add
popl
pop
movsb
stos
add
ja
out
ret
dec
dec
mov
dec
or
jns
jns
loop
ljmp
test
cli
push
jne
out
xor
sbb
test
inc
jg
pop
cmpsl
jbe
xor
ja
pop
shrb
clc
pop
push
or
out
pop
jne
pop
or
push
mov
leave
repz
adc
dec
adc
outsl
adc
push
pop
pop
mov
push
fnsave
mov
out
sbb
daa
cmp
sbbb
xor
pop
push
add
jb
popf
imul
iret
leave
leave
add
daa
pop
jb
add
daa
lods
pop
mov
ret
jmp
icebp
xor
jmp
add
repnz
pop
call
neg
cmc
scas
add
cmp
jbe
push
push
mov
push
out
dec
movsb
add
pop
enter
out
out
pushf
jb
out
nop
push
add
mov
lods
push
iret
mov
jmp
int3
push
or
or
xor
aad
push
testb
inc
popf
pop
sub
xchg
xchg
xchg
push
xchg
jae
out
xchg
xchg
push
xchg
pop
mov
or
movb
call
xchg
or
or
xchg
mov
sbb
mov
and
out
cmp
push
inc
filds
in
mov
and
sahf
xchg
popf
mov
push
movsb
jne
mov
push
xchg
xchg
sbb
xchg
jl
add
inc
fisubs
jns
pop
fdivr
and
in
jbe
loop
fimull
ror
aaa
push
out
ret
pop
xchg
frstor
push
iret
mov
jo
mov
add
pop
mov
dec
xor
iret
insb
cmp
test
incl
xchg
xchg
scas
mov
addr16
pop
cmp
in
push
mov
mov
inc
pop
lock
insl
sbb
dec
or
rcll
mov
jnp
jb
imul
fnstsw
das
aaa
repnz
outsl
push
pop
xchg
mov
sahf
or
inc
cli
xor
dec
dec
cmp
mov
sbb
cmpsb
mov
pushf
push
daa
int3
mov
sbb
mov
or
add
mulb
or
xchg
inc
push
ss
pop
ja
inc
push
aas
ja
dec
ss
scas
mov
jg
xor
dec
mov
das
fcmovne
repz
mov
cs
out
mov
xor
icebp
or
or
sbbl
add
ss
sbb
pop
in
jbe
push
cmpsl
pop
ja
jb
mov
mov
stos
call
jb
fstpl
mov
in
mov
cltd
bound
adc
pop
jecxz
and
cmp
pop
mov
ja
push
jb
sarl
xchg
sarb
lea
call
ljmp
dec
and
pop
or
cmp
test
outsb
fnstsw
jnp
add
pop
and
push
shl
repnz
add
push
fwait
pushf
ljmp
pop
rcr
xchg
outsb
push
iret
subps
pop
cmpsl
jg
xchg
adc
cmp
push
pop
rclb
push
push
out
roll
add
leave
sbb
push
nop
es
sahf
out
outsb
pop
cmp
inc
add
cmp
lret
cmpsl
cs
pop
popf
cmp
repz
jae
jmp
or
add
out
rsm
mov
shll
push
wrmsr
xchg
repnz
outsb
outsb
aaa
psubb
xchg
pop
add
xchg
invd
fidivrl
jns
adc
sbb
das
movaps
cwtl
jno
xchg
aas
or
inc
pop
iret
jae
cmp
insb
add
outsb
daa
xchg
xchg
add
in
mov
out
dec
pop
sahf
xchg
aas
idivl
mov
pop
xchg
adc
or
and
mov
sahf
and
leave
fmuls
mov
js
shll
pop
adc
lea
scas
push
outsl
mov
mov
nop
push
jg
push
pop
and
inc
or
mov
sub
add
iret
add
gs
push
loop
jo
jnp
mov
mov
scas
xchg
call
jmp
jmp
fisubrs
stc
out
add
jge
xchg
adc
dec
sbb
in
cmp
cmp
lods
adc
ja
fisubrs
xchg
pop
push
aas
push
cs
out
iret
xchg
out
dec
mov
mov
enter
cmpsl
rclb
cmc
std
add
dec
jb
xchg
call
adc
call
push
xchg
iret
pop
cmp
lods
cmp
arpl
imul
iret
leave
repz
jnp
orl
xchg
xchg
xlat
cmp
cmp
pop
mov
cmp
xchg
iret
les
sahf
add
adc
ja
xchg
xor
cpuid
movsl
adc
xchg
incl
outsl
emms
jg
add
add
xchg
stos
mov
mov
xchg
imul
sbb
std
xchg
jg
xchg
pop
test
xchg
pop
xchg
cmp
xor
inc
jae
jbe
addr16
leave
jae
jae
sub
scas
mov
xlat
dec
outsb
movsbl
xchg
pushf
pushf
fsubl
jmp
pushf
loopne
repnz
sbb
out
and
arpl
inc
push
xchg
fists
test
dec
xchg
out
pop
lea
lahf
cwtl
lcall
mov
enter
push
xchg
sti
jno
out
add
push
dec
call
iret
pop
lock
xorb
cvtpi2ps
fwait
mov
leave
jae
cmp
xchg
pushf
fsubrl
movsl
out
lods
lgs
shll
pushf
fildl
cld
in
ss
lcall
stc
dec
icebp
daa
lcall
loope
imul
out
pop
in
lcall
jns
test
mov
xchg
fcmovne
in
and
jmp
aam
out
sbb
fwait
ja
jae
and
sub
outsb
pop
mov
inc
dec
push
out
in
pop
outsl
jp
out
sahf
or
dec
dec
dec
dec
stos
mov
iret
cmp
in
adc
out
adc
fmulp
out
std
into
adc
pop
dec
and
dec
push
pushf
sbb
fwait
push
push
mulps
add
sbb
jns
add
loope
add
mov
adc
in
sbb
loopne
xchg
hlt
xor
lahf
das
popf
mov
pop
and
jg
ja
popf
jne
ja
das
push
decl
lar
out
pop
pop
push
or
fisttpll
out
or
movq
or
mov
and
push
cmpl
lcall
pop
sub
scas
pop
testb
out
cwtl
mov
sbb
daa
push
insl
scas
pop
xor
out
pcmpgtw
in
cs
push
xlat
xchg
push
jns
fnsave
sahf
push
iret
cmpsb
sahf
decl
cwtl
in
mov
sbb
cs
call
dec
into
lock
add
das
or
pop
adc
pop
pop
loop
lahf
mov
inc
in
xchg
jo
aas
lahf
daa
mov
gs
dec
pop
push
maxps
xchg
imul
mov
xchg
jo
fmull
cpuid
das
push
insl
stos
jecxz
lcall
dec
lds
in
ror
aad
fucom
aad
mov
xchg
in
pop
clts
cmc
dec
pusha
xchg
xchg
lahf
std
lahf
pop
pop
or
popa
mov
and
loop
mov
push
leave
test
pop
push
enter
lods
pop
in
hlt
add
adc
mov
push
and
in
mov
mov
inc
push
rcll
dec
push
addr16
aam
mov
aas
jmp
enter
pop
sub
out
add
repz
pop
push
or
or
leave
repz
or
repz
push
cmpsb
setle
inc
push
fidivs
adc
out
rclb
fstl
out
sahf
out
repz
pop
sahf
idivl
sbb
pop
sbb
dec
aaa
jns
prefetcht1
leave
leave
leave
leave
push
adc
leave
leave
adc
adc
mov
or
subb
mov
daa
mov
pushf
push
jns
jne
iret
loope
and
adc
mov
daa
mov
ja
out
cwtl
mov
call
mov
sbb
push
jp
mov
and
enter
and
sahf
add
cwtl
mov
mov
out
push
loop
mov
mov
dec
mov
sbb
sahf
push
push
into
pop
mov
je
movl
addr16
shrl
lahf
jmp
testb
or
add
adc
jns
out
sbb
and
dec
sahf
xchg
pop
add
add
sub
iret
mov
jns
cmp
inc
sahf
xchg
pop
pop
dec
movsb
adc
in
mov
outsb
movsb
and
pop
xchg
iret
cltd
movsb
out
mov
in
pop
add
ja
insb
mov
xchg
mov
idiv
pop
pop
das
pop
mov
movsl
repnz
cmp
add
xchg
out
dec
xchg
add
ja
jne
jge
pop
xor
roll
das
mov
pushf
pushf
mov
xchg
bswap
dec
sahf
out
push
add
jns
out
pop
loopne
or
or
repz
cmp
or
cmpsb
push
or
fimuls
push
adc
or
mov
sarl
adc
xor
outsl
xchg
inc
add
subb
sub
outsb
cmp
cmp
add
scas
lcall
aaa
adc
mov
pop
adc
push
daa
pop
pop
jo
pusha
xchg
fsub
psubsb
mov
verr
aaa
jns
add
adc
sbb
or
and
or
jbe
daa
stc
test
sub
rcr
and
pushf
push
sub
cmpsl
outsl
loopne
pop
push
xchg
jle
xchg
mov
daa
or
sub
dec
and
int3
xlat
ja
test
into
sub
xchg
inc
cmpsb
test
sbb
and
lahf
test
js
test
dec
test
leave
insl
push
subb
mov
jbe
iret
int
push
dec
scas
call
test
sub
test
jb
shll
data16
sub
rorb
cwtl
iret
mov
mov
lsl
cltd
test
mov
sub
aaa
mov
inc
outsb
fst
inc
and
inc
daa
pop
or
xor
or
es
push
or
inc
iret
int3
les
sahf
fmull
in
test
and
sbb
stos
sbb
jmp
inc
daa
adc
dec
add
push
lea
into
in
test
das
fdivrs
fstpl
out
push
aas
push
xchg
mov
pop
pop
clts
daa
daa
xor
rorl
or
sbb
cmp
daa
and
or
es
jb
inc
push
stos
xlat
adc
jae
incl
subl
sub
cmpsb
stos
push
jmp
iret
rcr
pop
jecxz
dec
dec
and
mov
sbb
loope
push
pop
push
scas
sbb
daa
pop
leave
repz
xor
cmp
invd
dec
push
push
or
in
es
imul
cmpsl
lods
pop
dec
and
pop
insb
cs
aas
outsb
daa
daa
xchg
cwtl
cs
sbb
and
sbb
lods
pop
cmp
loopne
or
and
pop
stos
jno
pop
dec
inc
test
inc
adc
out
subb
daa
inc
xchg
cmp
iret
mov
hlt
mov
push
ja
jb
push
aaa
dec
lods
push
lods
pop
lods
xor
inc
outsb
xor
imull
inc
repnz
cmpsl
push
cld
adc
pop
fldt
pop
inc
ret
push
xor
scas
pop
pop
leave
mov
ja
arpl
dec
outsb
addr16
lahf
addr16
xchg
mov
xchg
mov
fisttpl
add
leave
fdivrl
xor
jb
xchg
scas
aas
push
scas
push
scas
pop
ja
aaa
es
add
xchg
ss
add
ds
inc
cmp
cmp
or
jns
out
or
cmp
fisttpll
or
data16
sbb
outsb
scas
adc
js
or
xchg
push
xor
les
mov
pop
push
dec
aaa
mov
clts
std
cmp
daa
add
in
bnd
ds
dec
cmpsl
mov
dec
imul
divb
pop
out
pop
test
outsb
dec
iret
in
mov
mov
out
imul
dec
push
insl
pop
pop
pop
push
jo
fimuls
cwtl
adc
dec
aaa
jns
movups
jb
jb
fsub
call
jae
sbb
pop
pslld
out
sbb
sbb
dec
sahf
outsb
mov
sub
and
mov
dec
inc
push
es
iret
repz
push
sub
cmp
repz
sub
jo
cmp
repz
xor
fcmovne
mov
xor
pop
add
andl
mov
inc
pop
das
mov
in
int
sbb
inc
hlt
xor
add
xchg
xor
xor
and
out
mov
cmp
stos
addr16
mov
mov
int3
or
mov
mov
mov
outsl
daa
insl
daa
daa
ja
xchg
cmpsl
cltd
loopne
push
xor
movsb
or
cmp
insl
fnstsw
push
cmpsl
enter
mov
or
out
out
dec
mov
paddd
out
sahf
out
cs
adc
sahf
out
sahf
adc
dec
adc
sahf
out
adc
adc
sahf
out
pop
lea
xchg
sahf
out
sahf
sbb
jns
out
sbb
sbb
sahf
out
pop
in
out
sahf
and
and
and
mov
iret
repz
adc
iret
repz
daa
xor
ds
repz
sub
push
sub
addr16
outsl
pop
ja
jg
fsubrp
in
jbe
mov
jmp
out
lods
and
sahf
out
enter
sahf
out
sahf
fcomps
sbb
sbb
sahf
out
lock
pop
iret
repz
adc
or
repz
adc
or
mov
mov
and
je
push
jns
dec
js
mov
xchg
mov
mov
pop
jns
movsl
mov
mov
pop
ret
out
or
or
or
fldcw
divb
ja
push
push
adc
push
sahf
out
sahf
adc
adc
adc
sahf
out
adc
push
adc
pop
push
fs
jno
out
sahf
sbb
mov
xchg
jns
out
sbb
jns
out
push
rcrb
mov
xlat
loope
jmp
jo
jbe
popl
scas
movzwl
cmp
repnz
mov
mov
pop
xor
push
cmp
jo
out
push
adc
pusha
and
sahf
andl
adc
jo
js
iret
dec
test
or
cmp
pause
or
xchg
push
or
push
cmc
cmp
push
ss
je
out
cmp
inc
into
icebp
jbe
das
sti
mov
add
sbb
fldt
mov
sahf
mul
push
cs
popl
add
dec
push
pop
pop
or
add
dec
imul
scas
enter
nop
pop
nop
mov
jb
mov
mov
mov
shr
aas
hlt
pop
jb
bnd
mov
in
sbb
and
xor
jns
out
cmova
push
xchg
fcmovne
in
pop
pcmpgtw
jne
xchg
xchg
xchg
jge
lea
popf
movsl
lods
sbb
das
sahf
xchg
out
ret
into
pop
scas
mov
and
cld
mov
xchg
mov
pushf
fcompl
sbb
add
iret
xor
ds
cmovle
cmp
push
push
movd
iret
mov
outsb
jbe
jle
fcmovne
repz
adc
lahf
enter
adc
cmp
leave
rorl
add
jmp
sahf
add
decl
or
cmp
fwait
popf
lahf
pop
mov
sub
repz
out
inc
mov
jbe
pcmpgtb
movq
iret
jae
jne
adc
iret
jae
cmpsb
mov
mov
cmp
rcr
sbb
jns
cmp
repz
or
adc
pop
and
fcmovne
repz
xor
xchg
xchg
xchg
xchg
push
popa
insb
ja
xchg
xchg
xchg
orb
test
mov
pmaxub
mov
mov
enter
mov
iret
mov
or
xor
pushf
cmp
dec
push
pop
repz
pushf
pushf
fs
je
jns
fcmovne
jl
pop
mov
cmp
dec
sahf
out
lods
sbb
iret
mov
pop
add
xchg
fisttpll
out
invlpg
or
sbb
sbb
ret
xchg
sub
mov
mov
dec
das
push
mov
in
jbe
jl
xchg
daa
daa
out
pop
addr16
push
add
lahf
stos
mov
ret
out
fsubrp
push
or
or
jbe
in
prefetch
adc
pop
daa
mov
jbe
mov
dec
rcpps
adc
sahf
out
pop
adc
js
cmp
dec
inc
fdivl
repz
sbb
jg
sbb
repz
push
js
and
test
fucomi
jbe
pop
fwait
jg
lahf
mov
mov
mov
cmpxchg
aas
cmp
repz
sub
sub
sub
cmp
repz
in
iret
das
xor
jae
repz
xor
lahf
push
jns
neg
xor
aas
call
lahf
out
cmp
sarl
outsb
mov
fistpll
dec
push
shll
mov
sahf
out
aas
inc
inc
dec
inc
fisttpll
out
inc
addr16
jg
cmp
mov
xchg
pop
push
aad
rorl
hlt
dec
dec
fimuls
inc
dec
xor
adc
inc
testl
jg
sarl
jg
shl
inc
xchg
testl
push
and
iret
repz
or
sahf
out
outsb
pop
pop
or
sahf
out
je
dec
sahf
out
adc
pushf
cmp
rcll
xchg
out
sbb
clc
lsl
jbe
mov
sbb
popf
cmp
inc
push
and
punpcklwd
cmp
fbld
addr16
ror
dec
push
fistpll
ret
les
ja
in
nop
insb
mov
repnz
dec
icebp
std
ret
pop
or
pop
push
fcmovne
repz
sub
iret
cmp
xor
aas
dec
dec
or
repz
pusha
or
or
cmp
orl
rep
shld
scas
adc
unpckhps
lds
shlb
cmp
pop
fistpl
out
cs
bnd
sbb
sbb
lds
push
pushf
fmull
sbb
xor
cmp
repz
and
jns
imul
push
daa
in
sahf
out
sub
fsubrp
xchg
shrd
mov
repz
lds
xor
inc
cmp
test
sbb
repz
ret
push
add
repz
xor
int3
rcr
dec
aas
push
pop
xchg
test
incl
mov
xchg
jb
fstpl
leave
iret
aam
fisttps
and
sahf
pop
ljmp
add
push
or
push
or
dec
sahf
out
or
repz
inc
adc
dec
adc
cmp
leave
pop
gs
adc
jg
mov
xchg
sbb
leave
repz
sbb
iret
sbb
sbb
repz
pop
repz
rcr
enter
iret
push
enter
adc
fisubs
enter
add
sahf
testb
pop
testb
dec
loop
movsb
mov
sbb
push
out
lahf
cmp
pop
lar
jge
or
inc
pop
push
add
xchg
enter
inc
pop
mov
shl
iret
repz
or
or
or
repz
call
push
adc
inc
ds
adc
adc
out
pop
fs
leave
push
adc
adc
cmp
inc
adc
pop
push
push
gs
outsb
daa
jo
jnp
xchg
sbb
jns
xchg
sbb
popa
sub
js
pop
push
pop
push
add
add
cmp
sbb
lret
lret
iret
sbb
push
pop
xor
or
inc
or
cmp
out
or
aas
popf
cmp
jbe
movd
adc
out
adc
adc
cmp
jae
sbb
iret
sbb
sbb
sbb
sahf
out
daa
out
push
out
pop
testl
lret
xor
dec
lret
outsb
cmp
push
fs
add
imul
dec
push
jg
mov
iret
repz
or
cmp
rorl
int3
jns
out
adc
adc
lahf
out
in
clc
adc
int3
push
cmp
jns
int3
das
sbb
adc
push
repz
cmp
ds
das
sbb
repz
cmp
inc
sbb
ficomps
pop
push
out
sub
xchg
sahf
out
sahf
and
and
add
dec
rorb
int3
aas
sub
add
call
and
scas
xchg
aas
insb
dec
pop
dec
enter
push
jl
sbb
sbb
jb
and
sub
xor
dec
int
popa
mov
int
mov
sbb
push
mov
stos
outsb
cmp
cmp
repz
add
or
testl
jmp
or
jns
fldt
cmovne
push
adc
sahf
xchg
out
data16
jl
jns
out
aam
fistps
lea
ljmp
repnz
out
sbb
sbb
repnz
pop
dec
and
push
in
dec
sahf
and
jns
out
es
daa
aam
rorb
sub
pop
das
popa
jns
out
ljmp
push
push
push
sahf
aaa
fisttpll
pop
aas
cs
iret
cmp
aaa
push
ss
dec
out
js
movq
sahf
xchg
in
mov
xchg
popf
push
push
cmp
out
aas
scas
leave
into
inc
adc
mov
lods
addr16
repnz
das
out
push
icebp
sahf
divb
das
or
unpcklps
pop
in
in
dec
sub
mov
push
adc
outsb
in
in
daa
jns
adc
fistpl
sbb
enter
loopne
insl
in
pushf
clc
push
add
push
bswap
repz
sbb
and
jae
jns
fstpt
das
and
cmp
jae
sub
daa
iret
sub
rcrl
leave
repz
cmp
inc
out
jns
push
push
xor
xor
in
xchg
jno
sahf
xor
mov
xchg
fnclex
paddsw
add
hlt
xchg
dec
outsl
sar
sete
push
leave
out
das
inc
inc
dec
out
cmc
or
pop
add
push
aam
dec
lcall
mov
rcl
pminub
adc
xchg
insl
sub
das
invlpg
dec
push
aam
es
or
mov
push
aad
inc
mulb
xor
mov
out
xchg
xlat
push
iret
or
inc
push
mov
fbld
cmp
push
in
push
lahf
popl
push
push
mov
or
pusha
add
add
add
lock
fdivl
nop
add
aas
inc
push
test
iret
dec
pop
mov
push
shrb
inc
dec
add
outsb
pop
add
dec
aaa
pop
xchg
aaa
insb
or
movl
ss
push
xlat
repz
push
push
or
or
or
in
sub
or
push
add
adc
daa
adc
xchg
xchg
fcmovne
and
push
addr16
das
push
xorps
out
insb
das
insl
xchg
jbe
sbb
sbb
push
pop
and
jbe
orl
xchg
xchg
out
pop
xchg
sub
mov
fbld
bound
xchg
xlat
sbb
data16
orb
sbb
or
pop
adc
add
inc
or
adc
add
mov
mov
test
mov
or
xor
adc
and
movsb
add
scas
jl
in
cmpsb
fisttps
mov
cld
inc
jle
push
push
std
pop
test
shll
mov
inc
mov
inc
adc
cmp
mov
call
fucomip
jle
adc
push
ficompl
push
pop
fisubrl
xor
sub
fcomp
loopne
jb
jle
inc
sbb
sub
movsb
js
je
insb
cmp
repz
fs
push
dec
repz
repz
xor
and
repz
sbb
or
add
cmpsl
stc
cmp
cld
repz
hlt
lock
out
call
pop
out
sahf
testl
mov
sahf
mov
sub
or
mov
jns
out
cmp
sub
sbb
jns
dec
push
cld
repnz
fadd
sahf
out
sahf
mov
cwtl
nop
mov
js
push
repz
push
dec
inc
xor
cmp
sahf
cmp
clc
icebp
mov
fmul
ret
cmp
repz
mov
jl
push
push
inc
icebp
pusha
and
jns
add
and
xchg
mov
pop
add
jo
fildl
roll
push
pop
add
cmpsb
divl
pop
mov
jge
popa
mov
dec
aam
aas
sbb
fsub
imulb
push
pop
push
adc
jecxz
adc
xor
aam
int
pop
icebp
call
push
mov
push
inc
jg
jp
loopne
int3
mov
pop
sub
aad
rolb
add
call
jg
inc
adc
mov
add
or
sbb
add
add
jo
mov
sbb
push
testl
adc
mov
mov
sbb
jnp
adc
loopne
pop
and
mov
pop
in
pop
lods
add
js
rorb
pop
sub
es
xor
push
fimuls
adc
pop
fcmove
dec
jecxz
sbb
add
dec
or
repz
inc
fisttps
mov
cmc
aas
lock
bswap
jnp
repz
xor
cmp
jns
mov
mov
repz
or
or
adc
mov
sbb
jns
ror
push
sbb
lret
cmp
pop
push
sahf
out
sahf
and
and
and
jo
out
and
daa
xlat
adc
clc
fdivs
fwait
shr
pop
imul
daa
xor
fs
sbb
sbb
sbb
xorl
fistl
cmp
out
push
pop
js
mov
mov
xor
dec
insl
add
repz
cmp
pop
ja
mov
cmp
sbb
jae
das
push
dec
insb
and
and
stc
fcoms
mov
in
ds
or
or
ret
pslld
and
adc
mov
xchg
sbb
leave
sbb
into
sbb
rorl
and
sahf
pushl
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
mov
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
call
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
popa
cld
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
enter
mov
aaa
popa
sar
mov
call
lock
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
mov
test
int3
add
fnstsw
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
loop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
xchg
xchg
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
jmp
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
ljmp
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
scas
mov
decl
call
test
pop
pushl
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
ljmp
adc
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
in
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficoms
into
ror
add
cmpsb
fmuls
sahf
mov
xor
add
repnz
inc
mov
cld
rcl
push
inc
inc
je
inc
inc
lcall
add
push
dec
inc
push
pop
and
dec
dec
inc
push
xor
testb
aas
jg
xor
lods
ljmp
fldln2
decl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
stos
adc
sub
mov
aas
sbb
insb
imul
dec
push
pop
movsb
insb
mov
cmp
in
lds
inc
jbe
je
dec
xor
add
push
inc
dec
push
loop
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
pop
bound
inc
rolb
arpl
loopne
xor
mov
or
bound
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
mov
rorl
cmpsb
das
pusha
add
push
fs
adc
xchg
aas
rcll
dec
out
dec
inc
mov
xchg
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
mov
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
gs
dec
bound
jbe
push
push
or
dec
test
push
mov
xchg
rclb
sbb
mov
popf
and
mov
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
data16
add
movl
or
inc
xchg
push
stos
jbe
add
push
rcl
fnstsw
cli
dec
sub
mov
insl
shl
or
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
lods
sub
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
std
sbb
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
pop
movsl
pop
test
sub
es
dec
dec
xchg
fwait
add
xchg
xchg
mov
pop
jae
xchg
mov
mov
dec
outsl
push
shr
mov
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sbb
outsl
addr16
cmpsb
iret
ss
lea
push
roll
and
and
xlat
pop
insl
mov
enter
adc
scas
push
lods
xchg
js
iret
repz
cmp
adc
lea
out
loopne
lods
je
push
movsb
sahf
out
sub
mov
sahf
out
dec
faddl
and
ljmp
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
decl
dec
mov
mov
sub
mov
sbb
dec
jno
repz
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
incl
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
mov
mov
jl
das
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
push
mov
pushl
aam
call
xor
test
xchg
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
or
cmp
push
or
or
push
in
mov
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
mov
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
dec
add
mov
das
es
lds
or
sub
mov
cmpsl
call
inc
xor
shlb
sbb
ret
es
pushf
mov
insl
add
jmp
push
jmp
addr16
jb
push
mov
dec
mov
loop
sub
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
decl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
std
mov
sbb
xchg
sub
aaa
mov
or
sbb
push
xor
add
add
pop
xchg
add
xchg
mov
bound
cmpsl
xor
test
inc
jne
ja
fistpl
push
imul
insb
imul
xlat
idiv
and
lahf
pop
inc
jbe
push
jns
arpl
arpl
dec
pop
xor
ja
push
inc
das
subb
jns
inc
jne
dec
adc
addr16
inc
insb
mov
fildl
fcom
cwtl
mov
jp
mov
push
jne
mov
jle
add
cmp
dec
inc
js
inc
insl
bound
dec
or
inc
inc
sbb
test
dec
xchg
pusha
pop
ret
orl
jno
fistpll
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
fistl
xor
xor
bound
jnp
adc
pop
mov
fmuls
cmpsb
fs
mov
mov
inc
xor
adc
sbb
inc
or
push
and
dec
or
test
subl
mov
push
or
ss
jbe
arpl
or
inc
aas
mov
les
enter
inc
sbb
mov
sbb
aaa
ljmp
insb
popa
jns
mov
dec
insb
roll
or
popa
xchg
cmp
js
mov
aas
pusha
inc
adc
push
lret
mov
add
xchg
push
jae
popf
int
xchg
xor
pop
inc
aas
push
cmp
mov
and
sbb
sbb
divb
inc
pop
pop
idiv
sub
jae
inc
inc
inc
add
fsubs
mov
sbb
lcall
jg
iret
int
push
dec
dec
lea
xchg
sbb
mov
jle
sub
outsb
jne
mov
xchg
aad
sub
addr16
ss
add
add
or
add
jbe
aad
ss
clc
xchg
into
not
add
pop
inc
cmp
scas
inc
adc
popa
mov
push
shrb
or
or
mov
xor
dec
xchg
jo
mov
mov
ficompl
xlat
and
mov
xchg
add
jb
add
orb
icebp
dec
popa
jo
lahf
rcll
aas
push
outsl
outsl
test
mov
inc
bound
push
jno
cmp
test
stos
lds
and
nop
test
pop
cmp
sbb
inc
sbb
nop
or
pop
or
jo
xor
xchg
pop
mov
outsl
insb
jns
das
mov
push
push
inc
and
adcl
inc
push
in
add
adc
inc
mov
test
jo
add
inc
push
bound
add
addr16
mov
mov
divl
stos
add
inc
xor
popf
xor
push
cwtl
add
add
sub
inc
sbbb
pop
mov
mov
out
mov
xlat
dec
add
add
scas
imul
testb
and
aam
adc
mov
pop
movsb
adc
sahf
aas
push
sub
mov
sub
test
dec
gs
xor
orb
aaa
mov
mov
jb
add
or
inc
adc
push
xchg
and
push
addl
adc
adc
fdivr
loopne
adc
add
dec
inc
dec
sbb
sti
mov
fstpt
add
add
or
ljmp
or
pop
push
or
or
or
or
or
adc
adc
mov
adc
hlt
add
pop
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
or
xchg
add
add
adc
push
add
aam
add
rclb
adc
or
inc
jb
lcall
iret
imul
ds
xor
adc
pop
and
in
call
adcl
shl
and
bound
js
or
xor
rclb
push
add
or
rol
dec
mov
adc
test
and
lds
test
mov
inc
or
adcb
add
pushf
pop
add
add
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
inc
repz
lods
or
xor
adc
sbb
loope
icebp
mov
mov
add
or
push
xor
js
push
and
sar
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
xor
jmp
clc
cmpl
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
es
lcall
leave
mov
jp
push
out
or
decl
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
lcall
out
jae
shrb
shlb
out
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
mov
std
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubrl
add
fisubl
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
ljmp
dec
adc
lahf
mov
or
out
lcall
fistpll
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
sbb
lock
or
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
fs
mov
jne
or
cmc
mov
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
fidivrs
leave
inc
lods
movsb
or
repnz
mov
aad
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
lock
adc
jmp
hlt
dec
mov
jg
mov
aas
mov
jg
mov
incl
fmull
addr16
sbb
cld
daa
jp
std
adc
mov
fildl
or
mov
ret
nop
cmp
das
incb
add
lock
pop
pop
div
cld
idivl
fs
xlat
and
loope
jae
jmp
shrl
je
jge
idivb
mov
add
out
icebp
pop
and
mov
loope
mov
cmpsl
popf
sti
mov
test
ja
push
xchg
outsl
das
jge
outsl
ss
call
cmc
pop
mov
dec
push
adc
mov
and
ret
or
out
cltd
cmp
add
incl
cmp
inc
add
fs
cmpsb
loop
pop
aaa
std
fisttps
jnp
cmp
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
into
icebp
mov
jg
mov
fidivrl
mov
pop
clc
loope
loope
mov
lahf
xor
add
xlat
rcll
je
xchg
fldenv
iret
fdivrl
and
lcall
decb
jo
pop
gs
adc
jg
pop
out
jg
jno
ret
cmpsb
stos
movsb
and
arpl
mov
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
cld
ljmp
ds
inc
mov
in
sbb
xchg
imul
pop
inc
orl
jmp
std
mov
inc
add
faddl
mov
or
lcall
imul
pop
stc
push
dec
out
fstpt
mov
add
popf
pop
stos
adcb
fsts
dec
adc
and
add
movsl
data16
push
sti
push
sti
pop
inc
add
aaa
enter
push
nop
mov
jmp
and
add
dec
fsub
push
cltd
jmp
scas
push
push
jns
xchg
jne
inc
xchg
dec
insb
sub
mov
inc
mov
sub
decl
lds
add
jecxz
sub
pop
cmp
data16
mull
xor
aas
mov
add
push
push
and
xor
cwtl
jno
mov
xlat
jecxz
in
mov
call
push
roll
into
test
lock
push
leave
fists
mov
ljmp
in
jmp
cwtl
mov
mov
hlt
arpl
inc
fdecstp
enter
incl
sbb
sub
or
mov
test
sbb
shr
mov
pushl
fwait
lret
dec
leave
jne
push
mov
mov
cmp
jmp
cmp
incl
mov
leave
pop
mov
mov
pusha
cwtl
sub
inc
xor
inc
push
movsl
lods
outsl
push
mov
in
cwtl
jmp
int3
dec
orb
dec
outsl
iret
stos
repz
pop
dec
push
in
sub
and
lret
pop
call
lds
mov
inc
sarl
rolb
dec
aam
mov
lcall
out
push
adc
bound
mov
imul
or
lret
jle
pusha
sbb
mov
xor
popa
enter
add
into
icebp
jg
lds
scas
clc
call
mov
cmp
xor
outsb
aad
aad
fildll
jmp
dec
data16
enter
cmpsl
bound
xor
mov
jg
in
leave
loop
test
or
mov
adc
xchg
scas
and
fists
pop
sbb
jmp
jae
mov
xchg
je
jne
or
shr
pop
jnp
scas
mov
lcall
jne
and
pmaxub
rcrl
mov
pop
frstor
sub
clc
daa
sbb
cli
call
loop
inc
mull
fadds
and
mov
mov
into
jnp
mov
out
pop
mov
mov
inc
push
hlt
pop
in
cmp
bound
movsl
sub
jmp
loope
and
bound
ss
mov
inc
or
xor
xchg
xchg
mov
inc
jle
cli
cmp
scas
test
cwtl
sbb
jp
sbb
jno
dec
jnp
jmp
mov
stos
mov
lds
iret
push
mov
mull
fidivs
jp
pop
lret
fs
cld
sub
mov
jne
fildl
call
or
mov
and
in
pop
pop
mov
daa
insb
mov
gs
ss
push
ljmp
sub
xchg
cmp
jae
add
out
jo
rcrl
push
nop
subl
xor
inc
notb
adc
dec
into
lahf
sbb
xchg
jmp
ds
xor
stos
xor
push
stos
aam
incl
add
stos
scas
loopne
out
sbb
les
nop
push
lds
jecxz
adc
lcall
sub
xchg
mov
push
test
hlt
sbb
nop
pop
or
mov
js
inc
aaa
and
dec
in
xorl
cmp
sbb
fwait
stos
cli
sub
xor
or
sbb
lcall
adc
inc
push
fcmove
icebp
adcb
mov
dec
ja
imul
lcall
fs
jns
cmp
mov
pop
insl
loop
pop
gs
mov
cld
mov
cmc
out
dec
sub
shlb
mov
add
jge
dec
xor
cmp
popf
pop
dec
pusha
decl
jo
xor
into
add
aas
sbb
adc
in
mov
cmpsl
test
adc
mov
fcompl
pop
sbb
aas
xor
icebp
or
arpl
sahf
push
mov
lcall
int
lods
pop
imull
mov
xchg
inc
stos
add
rol
rorl
call
sbb
inc
inc
je
nop
stc
push
shr
mov
cli
loope
inc
movsl
int
jg
and
mov
mov
sahf
sbb
cmpsl
push
dec
dec
mov
insb
adc
cld
ljmp
pop
add
mov
cwtl
shll
jns
inc
scas
in
and
dec
and
fcmovnbe
jbe
cmp
test
sbb
xchg
push
mov
jmp
xchg
mov
je
popl
in
pop
push
mov
mov
cmp
sbb
xchg
push
adc
mov
arpl
mov
dec
jmp
jbe
push
sahf
ficoms
loop
adc
xchg
push
jle
pop
movsb
sbb
jmp
mov
clc
xchg
adc
push
xchg
fisubrl
std
xchg
or
aad
gs
inc
push
aad
or
testl
jp
incl
cmc
nop
mov
push
iret
jg
add
mov
push
aad
outsl
jae
jl
jg
outsl
je
lcall
fidivrs
imulb
dec
jg
incb
test
or
aam
scas
inc
popf
cmp
inc
arpl
aad
lods
outsb
call
xor
cli
ret
xchg
mov
xor
frstor
jmp
rolb
out
or
xchg
push
jp
out
mov
mov
mov
adc
jl
lock
inc
xor
test
cmp
xchg
sbb
mov
inc
inc
iret
add
in
es
ret
inc
scas
clc
dec
iret
cmpsb
add
sbb
fcoms
out
xchg
mov
lcall
jo
push
xor
mov
sub
inc
fst
shll
push
leave
add
call
jb
lret
xchg
cmp
mov
mov
stos
ja
popf
mov
negl
decl
scas
lcall
shrb
pop
out
push
dec
rclb
lods
adc
sti
mov
out
cli
shll
jbe
or
sub
fldcw
into
mov
mov
mov
inc
and
lahf
das
mov
sub
dec
cwtl
pop
aad
xchg
repnz
xlat
cwtl
ljmp
xchg
inc
scas
push
loopne
cmp
mov
mov
push
aad
lret
lock
push
adc
or
cld
sti
icebp
inc
jns
push
sahf
out
mov
inc
push
cmp
pop
push
loopne
lock
or
fwait
scas
ja
out
xlat
mov
ds
add
cs
lcall
add
mov
ja
mull
cmpsl
stos
outsl
cli
movsb
arpl
or
notb
dec
inc
mov
push
xchg
mov
cmp
cmp
ljmp
shlb
mov
clc
or
sbb
decl
cmp
mov
lcall
and
add
leave
orb
pushl
adc
rolb
mov
jl
dec
jns
mov
sub
jb
cwtl
incb
decl
jmp
adcl
xchg
mov
pop
aad
sbb
jo,pt
jle
cmc
es
inc
addb
stos
arpl
xor
or
in
or
dec
inc
push
add
faddl
push
cmp
insl
push
pop
call
dec
inc
xchg
xor
call
cld
lods
sti
addb
js
xor
das
dec
comiss
in
push
pop
jmp
fcmove
movsl
jp
lds
ret
leave
sub
jne
int
test
out
mov
or
cwtl
mov
xchg
inc
sbb
jne
rclb
xor
decl
mov
loope,pn
mov
pop
test
pop
adc
push
xrelease
nop
incl
lcall
add
mov
dec
test
inc
mov
pushl
js
test
shr
inc
mov
mov
jns
lret
jno
hlt
cmp
idiv
jmp
call
pop
mov
loopne
cmp
xchg
dec
out
lret
std
mov
lcall
cs
mov
jo
jnp
ret
sub
test
addb
arpl
xchg
call
cmp
xchg
push
shrb
mulb
mov
pop
pop
inc
cmp
pop
hlt
jmp
push
shlb
cs
fcoms
iret
dec
daa
mov
cltd
jl
call
fs
mov
pop
cmpsb
jo
cmp
decl
out
fnstenv
mov
mov
xchg
xchg
add
xchg
jb
repz
into
mov
adcl
push
pushf
outsb
je
inc
leave
test
sbbb
int
nop
adc
stos
or
pop
dec
mov
sub
mov
add
shlb
idiv
int3
mov
jb
pushl
enter
hlt
push
aaa
lcall
add
xchg
xor
je
mov
mov
push
pushf
cmp
inc
adc
lcall
jmp
jle
mov
mov
cltd
frstor
repz
lods
bound
pop
xchg
jmp
lods
fucomip
jne
in
mov
cmp
inc
jne
and
or
out
push
clc
lcall
das
mov
fistpll
push
inc
jecxz
push
notl
outsl
hlt
loop
push
repz
lcall
mov
cmc
pusha
jae
nop
imul
imul
pop
xchg
ljmp
mov
lods
mov
sbb
xor
dec
xor
stc
push
das
in
lods
mov
pop
cmp
aad
push
inc
jbe
sti
cmp
incl
jecxz
fsubp
mov
rorb
loop
sub
add
mov
fnop
mov
pop
out
xor
mov
mov
fwait
jg
pushl
imul
aam
jmp
cmpb
frstor
decl
sahf
dec
sbb
mov
xor
cmc
dec
mov
inc
repnz
push
push
sti
aas
rorb
cmp
dec
lods
jnp
out
movsl
mov
jmp
test
pop
add
mov
sbb
movsb
or
sub
sub
int
call
jne
mov
mov
clc
sarb
imul
nop
and
idiv
mov
in
and
test
push
pusha
aam
pusha
or
inc
cmp
push
fdiv
cmp
inc
jo
cs
mov
pushf
xchg
das
push
shlb
xor
mov
sub
push
push
test
lcall
lods
adc
push
add
clc
fldenv
fwait
or
fisttps
mov
pushl
push
inc
xor
dec
test
fsts
push
and
jnp
incl
sub
lods
dec
pop
cmp
push
jns
outsb
push
aaa
pop
std
sbb
shll
sar
push
push
dec
fiaddl
mov
lds
out
adc
mov
cld
lret
jg
mov
cmp
stos
pusha
or
lods
jo
test
push
jge
popf
mov
dec
jbe
sub
adc
mov
push
orl
jmp
add
test
mov
decl
mov
mov
out
subl
add
rorl
repz
testb
lcall
scas
pop
ljmp
and
imull
xchg
mov
cmp
fildll
mov
mov
jnp
daa
in
xchg
insb
inc
xor
adc
ljmp
clc
ljmp
dec
xchg
mov
sbb
inc
fnstenv
insl
pop
out
jmp
mov
jmp
cwtl
pop
int3
movsb
test
jp
adc
div
or
das
je
dec
pop
imul
incl
cmp
push
int3
inc
repz
hlt
sub
pop
dec
jno
push
push
test
cwtl
inc
adc
sbb
lahf
dec
and
adc
push
in
ljmp
push
orl
aam
stc
dec
cmp
dec
dec
mov
out
cmpsb
pop
sbb
inc
sbb
sbb
or
inc
movsl
mov
mov
lahf
jns
loop
scas
xchg
dec
movsl
es
or
jmp
sub
lods
loope
or
or
fiadds
cmc
jge
loope
out
mov
or
imul
fnstsw
into
in
outsb
cmp
std
call
jge
xchg
insl
out
addl
inc
sti
daa
mov
push
and
loope
leave
les
sub
jns
fisubrs
mov
jg
sbb
mov
jge
movsl
call
and
ljmp
pop
mov
pop
in
dec
fwait
adc
ljmp
lods
mov
fwait
leave
cmpsl
rclb
or
cmpsl
mov
cwtl
xor
mov
sub
mov
mov
mov
loope
pusha
cwtl
fcomip
test
mov
call
sbb
ss
jb
sub
ja
fcoms
or
js
pop
mov
jae
pushf
sbb
sahf
lahf
aas
popf
fisttpll
in
pop
xchg
inc
mov
xor
inc
cmp
cmpsb
xchg
pop
insl
jl
inc
fwait
ds
aas
xchg
lcall
out
rclb
push
xor
xchg
dec
nop
mov
call
mov
or
dec
loopne
pop
adc
push
push
or
or
je
lods
pusha
sar
pop
rep
push
movsl
int
mov
mov
leave
mov
mov
jge
dec
dec
movsb
fldt
aam
mov
lock
out
pop
std
lcall
mov
jne
or
cmp
xor
ljmp
clc
or
dec
jmp
mov
hlt
outsl
sbb
mov
dec
fildll
sbb
fdivs
push
ljmp
cmp
in
lea
bound
insb
add
rcll
call
sbb
andl
sbb
fisubs
arpl
aad
cmp
icebp
jecxz
mov
punpckldq
in
lcall
decl
push
mov
mov
leave
rclb
imul
ficompl
jb
inc
mov
inc
lret
aaa
push
stos
arpl
add
dec
xrelease
pop
pop
inc
jle
cmpsl
inc
icebp
incl
pop
sarb
dec
test
pushf
icebp
insb
inc
lods
dec
mov
dec
sub
test
adc
lods
ljmp
addr16
dec
mov
xor
inc
out
sub
lahf
enter
insb
sbb
std
pusha
jmp
cld
xor
out
inc
dec
mov
in
ljmp
push
mov
sbb
imul
lcall
xor
adc
adc
cmpsb
sbb
test
dec
cmpsb
stos
or
pop
ds
das
xchg
dec
divl
lods
es
sbb
xor
inc
icebp
cmp
test
mulb
jnp
dec
jnp
push
outsb
cmp
add
lods
cmp
mov
call
imul
push
mov
and
or
mov
or
mov
or
xchg
adc
mov
cld
incl
je
ret
xor
and
lcall
mov
sub
incl
push
inc
adc
pop
jns
add
popf
scas
lds
xorl
mov
pushf
ret
in
nop
mov
shl
push
cmpsl
push
jmp
stc
scas
loope
or
outsb
fisubl
jecxz
dec
push
cmc
and
lcall
mov
jle
cs
dec
stc
mov
mov
movsb
outsb
pushl
mov
call
mov
mull
cltd
pop
rcll
imul
pop
inc
lea
push
in
jnp
sbb
jae
dec
test
mov
test
js
call
clc
mov
scas
adc
loop
fwait
daa
jbe
push
addr16
mov
cmpsl
out
pop
bound
popf
aas
xor
dec
loopne
jg
push
mov
in
jmp
push
inc
cmc
push
sub
not
aam
call
test
pop
mov
cmovbe
push
cltd
cmp
aaa
test
add
call
mov
mov
mov
push
es
sub
imul
stc
decl
mov
std
jecxz
jmp
and
sbb
jge
aaa
icebp
inc
sub
call
std
dec
xor
inc
adc
sahf
inc
dec
xchg
adc
or
ret
xor
fwait
ret
testb
pusha
pop
sub
jle
sbb
lock
orl
lods
xorb
add
je
jge
sar
ljmp
ljmp
add
inc
mov
popa
call
arpl
sub
enter
mov
decl
cmp
das
or
outsb
lcall
push
adc
sub
out
mov
in
pop
les
add
stos
and
jo
xor
jg
inc
cmp
xchg
xor
add
fwait
sub
push
mov
adc
std
or
mov
jns
aaa
int3
add
js
sbb
pop
xchg
shl
cmp
insl
fadd
aad
or
fistpll
nop
jae
xor
sbb
jb
mov
pop
inc
jle
jmp
idivb
test
imul
loop
cmpsb
jle
mov
cmp
jecxz
jns
cld
aam
dec
arpl
fwait
cmpsb
arpl
fwait
mov
and
cltd
adc
adc
decl
or
and
jecxz
dec
push
inc
enter
in
into
or
push
fadds
pop
stos
xchg
pop
out
pop
aam
ljmp
inc
mov
xchg
push
aam
cmpsb
mov
xchg
fldcw
adc
aam
call
jg
mov
sbb
roll
insb
push
cs
fisubl
cmc
inc
mov
mov
pop
sbb
pop
xchg
xchg
jmp
xchg
sti
lea
into
dec
or
int3
daa
std
aad
decl
push
vpsubsb
jl
lahf
adc
xchg
adc
mov
xchg
or
jmp
scas
xor
push
cld
in
cmp
mov
leave
dec
dec
rcr
mov
les
decl
xchg
pop
in
xchg
sub
sbb
mov
adc
cmpsb
int3
fcomi
flds
fcomps
std
pop
lret
sbb
cmpsl
idiv
inc
mov
mov
cmp
push
xchg
call
jns
mov
test
mov
push
popf
cmpsb
insl
clc
mov
push
mov
pop
sub
mov
pop
iret
les
xchg
jp
pop
cmp
ret
or
push
jl
inc
std
jns
mov
aam
data16
mov
aas
stos
xchg
push
or
pushf
xorl
cmp
mov
sbb
dec
fcmovb
adc
in
inc
stos
fs
out
pop
ror
jns
sbb
sahf
cmc
lcall
mov
out
push
pop
sbb
or
and
mov
add
cmovg
call
cmp
sbb
fiaddl
and
subl
test
mov
incl
sub
cmp
xchg
sub
jae
mov
stos
adc
adc
in
lods
lahf
icebp
cmp
lcall
cmp
arpl
test
insw
xor
mov
pop
jecxz
cmp
scas
dec
into
sti
and
cmpsb
mov
stos
lods
adc
push
movl
lcall
ljmp
out
xchg
pop
pop
pop
push
rol
insb
mov
imul
loope
pushl
mov
test
adc
fbstp
mov
jb
incl
mov
sub
les
pop
sbb
js
xchg
sub
fstps
imul
mov
icebp
adc
adc
shl
sti
dec
loopne
inc
mov
call
sbb
jbe
or
cmp
jmp
lret
iret
test
mov
mov
lods
es
int
lods
sub
add
sbbl
sub
jp
icebp
jle
adc
xchg
mov
fs
pop
pushl
std
decl
push
cmpl
push
pop
push
in
pop
cmc
inc
add
push
stos
insl
xchg
test
jg
aaa
mov
fistpll
jecxz
adc
lahf
push
add
notl
xor
aad
call
sub
psraw
mov
xchg
pop
pop
mov
shr
lret
outsl
add
into
test
and
lea
adc
cwtl
mov
loopne
nop
fld
jmp
fmulp
jns
adc
mov
sub
jmp
aad
imul
jo
mov
jo
ss
in
pushl
fldl
inc
push
aad
mov
xchg
call
sub
fcomip
mov
sbb
sbb
outsb
jecxz
arpl
insb
pusha
sub
popa
rorl
lcall
call
mov
mov
lret
std
loopne
aas
insl
push
or
insl
loop
decl
jmp
push
jnp
xor
xor
test
xchg
mov
mov
jmp
es
inc
xchg
mov
fs
imul
mov
imul
pop
push
inc
imul
or
jne
mov
aam
or
mov
or
jmp
or
jmp
in
cmp
jne
jns
test
out
loop
lea
fs
inc
inc
dec
add
add
decl
or
inc
lcall
fwait
popf
cmp
jl
xchg
roll
xor
negl
add
sbb
add
call
or
cmp
mov
out
dec
aam
adc
imul
dec
pop
mov
lcall
fnstcw
lea
sub
insb
lcall
nop
adc
movsl
xchg
in
gs
fidivrl
jmp
fwait
dec
into
fisttpll
dec
pop
iret
pushf
daa
inc
scas
jae
jnp
mov
jmp
test
or
pushl
adcl
inc
mov
and
mov
sbb
pop
cld
popa
xorl
inc
fstl
mov
scas
mov
mov
incb
xchg
repnz
movsl
in
pop
aaa
mov
call
xchg
into
fisubs
jo
clc
fwait
mov
fsubs
imul
lcall
mov
jp
add
mov
stos
pushf
sbb
ficoml
fildll
inc
sub
repnz
jmp
and
jl
xchg
out
iret
out
fstps
hlt
cmp
iret
scas
jae
addb
push
fimuls
pop
hlt
hlt
pop
or
repnz
dec
jp
shll
sbb
call
jge
les
xor
fstp
pop
jb
lods
mov
loope
xor
jg
call
or
subl
mov
and
sbb
cld
lcall
inc
aam
or
and
dec
stos
jnp
enter
mov
inc
fsubrs
incl
xchg
gs
mov
call
out
sbb
lods
gs
xchg
cmp
call
mov
shll
pop
jns
in
sbb
add
and
test
outsb
dec
dec
scas
push
jle
cmp
fcomip
decl
mov
inc
and
push
dec
inc
jb
sub
shlb
lcall
pusha
sbb
dec
std
ss
mov
mov
loop
and
subl
call
repnz
pop
and
dec
pusha
add
jb
fs
xchg
push
scas
flds
dec
enter
sub
subl
scas
add
jg
mov
jmp
call
xchg
mov
daa
outsl
inc
in
test
mov
push
cmp
outsl
dec
jg
push
pop
lcall
mov
iret
push
leave
add
push
popf
jmp
jmp
mov
cltd
lds
scas
fwait
fwait
push
js
mov
jbe
mov
mov
imul
imul
pop
and
adc
pushf
cmp
push
popa
cmpsl
cmp
xchg
xchg
cmp
dec
cltd
pop
pop
sub
fstl
dec
xchg
push
les
idiv
repnz
cmpsb
data16
mov
xchg
movsb
dec
out
xchg
pop
lock
pushl
mov
lahf
imul
outsl
jg
cvtpi2ps
inc
xchg
cmp
or
xchg
xor
outsb
lret
imul
and
xchg
cli
sub
repnz
sahf
jae
cmp
and
adc
cmp
clc
push
dec
mov
in
mulb
ss
push
int3
aaa
push
sbb
mov
push
sbb
shl
incl
and
push
adc
lret
mov
push
mov
sub
movsl
lcall
rorl
sub
mov
roll
xor
insl
xor
fs
jl
sbbb
ljmp
pop
adc
cmp
pop
fldenv
out
xlat
aas
bound
sahf
into
call
jle
or
pop
ret
inc
xchg
xor
stos
std
pushl
and
ret
jnp
fwait
idivb
shlb
addl
sbb
stos
xor
ret
fldt
xchg
inc
int3
out
cmpsb
ret
clc
pop
lock
cmp
adc
add
xchg
out
or
lcall
add
xchg
lods
jo
idivl
ja
aam
sbb
pushl
xor
inc
imul
test
push
loopne
mov
xchg
xlat
call
cmpb
or
decl
jecxz
push
imul
xchg
ss
daa
push
inc
gs
push
sbb
aaa
or
aas
jo
popf
xchg
out
call
out
mov
loop
add
repz
xchg
jg
sub
sbb
rcl
or
jns
fidivrl
and
inc
lcallw
xor
outsl
ljmp
rorb
test
cld
incl
sub
cwtl
push
lret
mov
test
mov
push
push
stc
push
dec
pop
jnp
push
lret
and
imul
jecxz
push
lcall
add
stos
xchg
aaa
lret
es
mov
call
lea
or
in
dec
xchg
cltd
int3
fs
jl
jmp
xor
mov
jg
dec
mov
dec
aas
push
insb
stos
xchg
call
mov
mov
out
pop
jg
iret
ljmp
xchg
sbb
movb
repz
movhps
hlt
mov
mov
andb
scas
mov
push
add
decl
xor
fidivrl
std
pop
mov
in
enter
out
mov
push
jbe
sub
pop
and
xor
sbb
jns
in
test
ljmp
push
cmp
sub
add
pushf
push
data16
data16
jge
and
mov
mov
inc
js
in
rolb
jmp
popf
stos
out
ret
incl
sbb
pop
dec
divb
add
push
mov
fdivrs
pop
icebp
fcomip
lahf
sub
xor
daa
fstps
jb
jg
pop
and
clc
xchg
mov
mov
pusha
xor
push
movsb
add
lret
push
inc
sub
sbbb
out
jle
imul
stc
lcall
ljmp
xchg
outsl
xchg
pop
and
mov
pop
mov
das
push
in
lahf
cmp
push
cmc
sbb
lods
sub
pop
mov
loop
mov
pop
or
popa
jge
inc
pop
popf
movsl
into
jmp
mov
sub
mov
or
call
mov
pop
icebp
mov
ror
inc
fidivs
mov
fcomi
pop
cmp
out
mov
in
sahf
mov
pushf
mov
sbb
and
xchg
jbe
ljmp
xchg
jmp
xchg
mov
xor
mov
xor
sbb
data16
jmp
adc
pop
in
pop
sub
loop
mov
dec
or
xchg
pushl
pop
and
test
cmp
xchg
aam
mov
sub
add
and
jmp
push
loope
ret
loop
test
data16
test
sub
decl
stc
mov
mov
lahf
cltd
sbb
js
insb
or
cmpsb
or
mov
pop
fcomi
or
jg
cld
push
jmp
in
push
add
xor
shll
in
lods
mov
sub
sbb
aam
push
in
int3
lods
sbb
and
arpl
lcall
inc
xchg
mov
and
xchg
ror
mov
inc
mov
or
lret
inc
jns
insl
adcb
adc
cmp
dec
nop
aam
enter
movsl
fstpl
jb
mov
and
cli
sbb
insb
rolb
lock
pushf
lret
cmc
lret
setp
andb
mov
or
cs
sub
cmp
or
clc
out
add
cmp
and
shlb
incl
fwait
movsl
pop
test
lahf
mov
mov
std
mov
mov
mov
mov
mov
cmp
in
roll
popf
sub
xor
roll
sar
incl
fsts
mov
jo
mov
sub
lcall
movsb
jne
lock
nop
fwait
popa
xor
dec
fwait
test
mov
into
adc
xor
lcall
imul
jmp
scas
and
cmp
and
and
mov
adc
jmp
adc
ljmp
mov
adc
inc
sub
inc
ss
jmp
enter
call
incl
xor
or
scas
xchg
add
rcr
ficomps
orl
mov
jg
lea
pop
sbb
or
ljmp
sub
bnd
dec
aad
scas
sub
repnz
iret
cwtl
inc
sub
cmpsb
cmp
xchg
push
out
jecxz
lcall
cld
mov
cmp
sub
lods
sbb
loope
arpl
or
scas
mov
ficomps
in
pop
movsb
iret
pop
and
iret
shlb
jge
pop
cwtl
mov
stos
out
loope
call
std
insl
pop
arpl
int
pop
filds
mov
mov
add
cmp
mov
ret
or
es
lahf
xor
or
pop
fmuls
dec
or
decl
data16
or
mov
bound
scas
xchg
lea
add
decl
dec
aam
pop
or
loopne
pusha
test
adc
mov
sub
sbb
inc
call
fisttps
jmp
lods
ljmp
pop
and
cmpsb
cli
ds
jbe
clc
decl
cmpsb
aas
cmpsl
jae
adc
ja
mov
fisubs
jecxz
xor
lcall
incl
je
cwtl
jg
jb
ja
mov
cmp
iret
ficoml
std
dec
inc
decl
clc
nop
scas
xchg
cmp
mov
mov
jg
jmp
xor
call
das
or
mov
pop
ja
push
cs
flds
test
call
repnz
add
pop
loopne
imul
push
sbb
insb
dec
sub
ret
sbb
push
jg
lcall
dec
fidivrl
cmp
pop
push
repz
clc
sub
xlat
stc
out
mov
pop
push
rcll
shlb
and
push
or
dec
aaa
dec
adc
in
insb
dec
dec
mov
in
push
mov
mov
stos
dec
jmp
negl
xchg
out
pop
push
and
mov
in
fbstp
repnz
ja
mov
mov
sbb
pop
and
ret
das
dec
jmp
mov
repnz
decl
pop
insb
mov
call
call
das
xor
pop
pop
inc
insl
jb
dec
cli
iret
sbb
mov
push
mov
bound
leave
imull
clc
ljmp
mov
and
sarb
mov
push
mov
cmp
pop
decl
lock
rcrl
and
cmp
inc
jp
pushf
xor
mov
popf
insb
ss
dec
dec
mov
dec
ret
das
in
sbb
out
mov
sub
lahf
sbbb
aaa
std
cltd
xor
sub
mov
push
ret
jg
in
jb
adc
push
cld
push
jg
sbb
jnp
jno
pushl
mov
test
add
and
mov
mov
push
nop
cmp
out
push
sarb
sarl
cmpsl
jns
jb
decl
mov
lahf
adc
sbb
jb
xor
xchg
daa
shll
rcl
jno
xchg
pop
incl
cld
ljmp
out
mov
cmp
sub
jl
mov
es
decl
rol
into
inc
das
das
sbb
sbb
movsb
shrl
xor
sbb
outsl
adc
imul
jne
pushf
sbb
jmp
jnp
push
movsb
sub
jns
shr
rcr
dec
xor
or
mov
push
cs
dec
js
arpl
and
dec
lea
js
lret
dec
test
mov
fs
sub
lds
insl
xchg
lods
sbb
jle
outsl
faddl
pop
mov
rcrb
lret
push
mov
jge
push
push
jne
lcall
cs
adc
aaa
pop
xor
mov
cld
pop
loope
xor
es
sbb
outsb
mov
fs
xchg
nop
dec
xchg
and
xor
mov
fcomip
loope
fistpll
mov
lahf
cmpsb
mov
fildl
sub
data16
jno
jne
dec
xor
out
cmpsl
mov
ljmp
mov
mov
ljmp
rol
mov
dec
test
inc
pusha
repz
mov
js
jg
incl
xchg
insl
mov
inc
inc
push
test
aam
popa
jg
loope
mov
decl
mov
cmp
aaa
cmp
jmp
push
stos
push
mov
xor
dec
loopne
jg
lods
push
or
or
push
push
adcb
ljmp
xchg
sbb
std
xor
mov
xlat
testl
fwait
adc
inc
popf
push
dec
jns
adc
push
pop
xchg
mov
loopne
je
lret
inc
jae
and
sti
incl
push
inc
mov
jp
scas
and
mov
stos
stos
incb
jg
mov
xchg
jne
pop
fnstcw
nop
fists
mov
mov
pop
jmp
adc
fs
sbb
push
jecxz
jecxz
pushf
pushl
icebp
jb
sub
sar
mov
sbb
mov
lea
fsubp
adc
fstl
das
or
xchg
inc
cmp
insl
ret
jp
inc
dec
inc
dec
dec
sub
icebp
mov
in
jns
add
shl
popf
pop
shr
xlat
add
data16
mov
xor
push
imul
adc
jl
adc
divb
mov
push
dec
cmp
nop
cmpsb
and
fisttps
mov
pop
jmp
xchg
inc
ror
mov
sarb
xchg
xchg
cmpsl
jno
fisubl
mov
dec
incb
jnp
into
shl
aad
jnp
mov
outsl
dec
cmp
sbb
imull
mov
inc
jl
decl
xor
imul
lea
loop
aas
mov
into
mov
xchg
dec
aad
jg
and
lret
xlat
cmpb
cmp
inc
xor
repnz
jo
call
pushl
popa
lret
leave
ret
cmp
out
mov
mov
push
ljmp
out
pop
shrl
push
push
jecxz
pop
jge
jmp
mov
jecxz
sti
cmp
les
nop
add
adc
jno
or
jne
sar
out
xchg
mov
out
jns
shlb
sub
stc
in
rcrl
jae
add
adc
mov
sti
cltd
cmp
jge
pushf
test
dec
out
test
repnz
jecxz
cld
call
les
push
lea
or
push
in
pop
jp
push
mov
lret
cmpsb
mov
fiadds
sbb
cmp
sbb
pop
shl
lcall
xor
repz
mov
xor
mov
mull
icebp
js
push
cmp
mov
mov
xor
ljmp
out
hlt
mov
push
out
negl
js
sbb
inc
mov
test
dec
iret
scas
or
mov
adc
push
cltd
lds
call
mov
ja
fwait
in
sub
dec
mov
aam
fbstp
stos
std
stos
mov
hlt
lcall
dec
push
dec
push
mov
ja
ds
js
mov
mov
pop
lock
clc
cwtl
bound
mov
push
imulb
push
pop
js
and
mov
lret
incl
inc
push
loope
in
mov
enter
call
popf
mov
call
jle
dec
xor
mov
test
cmpsl
imul
int3
insl
rcr
mov
mov
ljmp
inc
mov
ljmp
inc
xor
out
sahf
xchg
push
sbb
stos
cmpsb
sarl
fstpl
jae
aaa
mov
sbb
adc
cmp
pop
dec
add
and
je
movsl
call
stc
sarl
jl
pop
adc
bound
lcall
xchg
fcomip
sbb
adc
sbb
add
sbb
cmp
add
jl
negl
xchg
xchg
ja
cmp
lcall
jl
dec
jae
pop
jecxz
pop
inc
sbb
icebp
xor
lock
inc
push
fmull
aam
fwait
dec
pusha
pop
les
and
data16
dec
mov
sbb
iret
jnp
shrb
add
adc
jg
jmp
clc
popa
jnp
ds
ret
aas
filds
clc
in
add
incl
lods
lock
add
fsubs
je
loopne
adc
push
addr16
decl
ret
pop
cmp
lcall
xor
adc
aas
mov
pop
decl
hlt
jge
dec
daa
out
jl
inc
dec
ficomps
or
je
decl
adc
xor
aad
fisttpll
sub
or
call
push
jecxz
sahf
sub
ror
outsb
sbb
pop
enter
mov
je
test
call
push
cmpsb
andl
sbb
icebp
test
pop
mov
xor
inc
jne
aas
test
xchg
call
shrb
xchg
cmp
xchg
pushf
jae
inc
jl
mov
ljmp
inc
insb
sahf
insb
fnstsw
jnp
pushl
leave
fcoms
incl
data16
insb
push
sbb
or
ret
fwait
movsb
pushf
fisubrs
bound
lock
incl
test
sub
das
test
push
in
sbb
scas
call
pop
pop
or
ljmp
daa
xchg
inc
pop
sbbl
add
or
imul
das
mov
cmp
cmp
stos
adc
xchg
lcall
lret
cmp
cld
das
adc
mov
jbe
mov
leave
pop
sbb
lods
mov
mov
cmpsb
testb
mov
jno
das
or
imul
push
std
lds
aas
adc
pop
cmpl
ret
mov
fistpl
clc
pushl
std
or
aas
fadd
shll
sbb
mov
lods
xor
xor
nop
jne
incl
mov
sub
dec
daa
inc
push
adc
push
ficoms
ljmp
sub
xchg
sbb
cwtl
xchg
xchg
mov
jbe
test
je
or
jg
xlat
and
rcrl
add
mov
jge
fidivrs
in
das
lock
pushl
es
cmp
adc
shl
aaa
arpl
add
mov
ljmp
pop
mov
outsb
dec
out
loop
sti
mov
iret
in
cmp
out
incl
xchg
std
idivb
dec
mov
fstpt
fwait
add
jns
xchg
mov
incl
cld
lea
das
push
mov
dec
fs
daa
pop
and
push
dec
outsb
mov
imul
scas
int3
inc
add
pop
aaa
jg
out
lock
in
bound
push
cmp
outsl
jmp
pop
lock
cs
pop
sub
inc
mov
in
adc
lahf
xchg
test
sub
or
push
decl
sbb
lods
in
jl
lret
cltd
sub
outsb
dec
lods
pop
test
mov
test
es
repz
pushl
fcomps
mov
lods
jl
icebp
xor
pop
mov
loope
dec
cld
push
sub
gs
jmp
movb
jnp
test
cld
loope
jg
xchg
mov
call
gs
xchg
pushf
ret
mov
adc
iret
popa
xor
mov
dec
scas
das
pop
subl
or
shrb
sub
pop
ss
cmpsb
lcall
inc
push
iret
pusha
sahf
cltd
mov
adc
nop
aaa
and
mov
xchg
lods
push
pop
push
pusha
loope
std
fs
lret
push
movsb
inc
xor
je
fcomip
fisttps
push
shl
bound
push
outsb
icebp
call
inc
mov
mov
pop
pushf
std
cwtl
into
and
push
aam
add
int
fsubrp
mov
jg
addr16
mov
and
ljmp
mov
or
push
mov
mov
test
jg
fiaddl
mov
repnz
adc
insb
xor
into
mov
mov
sub
out
hlt
sbb
inc
lret
lock
ja
xor
daa
jl
adc
mov
fsqrt
xor
clc
outsl
mov
pop
cwtl
addl
ljmp
insb
sarb
inc
mov
sbb
in
int
test
js
sahf
call
lcall
out
ds
and
push
pop
add
in
push
decl
stos
xlat
dec
adc
inc
or
add
mov
ljmp
or
mov
mov
out
push
shlb
push
mov
inc
aas
shr
xchg
icebp
add
ja
jge
dec
or
mov
xchg
pop
dec
outsl
jbe
cmp
add
sbb
sar
jecxz
fcomip
lea
and
test
sub
sbb
mov
push
xorb
sti
out
clc
inc
mov
xchg
jo
sbb
test
push
inc
mov
mov
adc
ljmp
xor
call
mov
mov
xchg
sub
repz
or
inc
and
shrl
jmp
cmp
in
adc
and
inc
shlb
test
scas
xlat
and
outsb
sbb
call
imul
mov
fs
ret
mov
or
jno
cltd
jg
decb
push
lods
fsubl
lret
push
and
sub
lret
imul
std
pushl
add
sbb
sub
ffreep
cli
test
adc
xchg
cmp
jns
inc
sahf
in
and
xor
shl
mov
orl
stos
pop
ret
addr16
sbb
hlt
mov
pushl
std
data16
push
clc
xchg
adc
adc
xor
pop
aam
addl
jl
mov
incl
pusha
add
mov
lea
xchg
sbb
in
shrl
jmp
test
insl
adc
add
sub
xchg
cmpsl
dec
out
jg
inc
fcmovnb
pop
lock
jbe
in
add
mov
pushl
xchg
adc
cmp
into
or
jo
mov
dec
xorb
dec
mov
lea
xchg
movsb
scas
push
and
and
scas
mov
icebp
in
fs
ljmp
rcl
lahf
xchg
int
mov
imul
mov
mov
inc
ljmp
incl
scas
cmp
xchg
and
aaa
test
cwtl
arpl
jg
call
pushl
cmpl
sbb
fdivrl
inc
aas
in
cmp
push
in
lahf
leave
mov
jmp
cmpb
cmp
mov
pushf
push
sub
sti
inc
sti
dec
mov
repnz
push
test
pop
ds
pop
aam
push
pop
pop
xor
dec
xchg
mov
push
dec
lods
jbe
test
dec
cs
test
aam
stos
adc
and
cmp
sub
in
pop
clc
jg
pushl
push
pop
enter
mov
sub
iret
leave
stos
pop
icebp
ljmp
cld
or
xlat
push
mov
lock
fbstp
leave
in
inc
and
fnstenv
pop
pop
mov
cmp
nop
ret
cld
xor
lret
sub
enter
popf
jns
mov
mov
push
adc
mov
mov
mov
aad
or
adc
xlat
ret
imul
decl
adc
xchg
jge
popf
dec
adc
orb
add
mov
pop
ja
dec
and
xor
cli
js
les
pop
int3
mov
or
fdivr
pushl
inc
mov
or
inc
adc
push
mov
add
arpl
clc
add
decl
call
mov
push
dec
jbe
push
push
aas
inc
mov
mov
das
cli
incl
push
adc
sub
fiadds
insb
or
sbb
decl
std
push
add
ret
test
fiaddl
lds
pop
and
cmpsl
lahf
adc
call
xchg
sbb
or
popa
sti
and
lods
sti
pop
add
adc
decl
js
loop
outsl
and
jecxz
pop
adc
or
inc
push
call
adc
lcall
rcrb
stos
dec
test
std
or
dec
mov
clc
jb
outsb
movb
cld
mov
shlb
out
movsl
arpl
out
push
jp
ret
jnp
popa
lret
imul
or
sbb
mov
jg
fwait
stos
cmp
cmp
shll
mov
mov
in
mov
pop
mov
push
aaa
fdivp
jmp
push
fcmovnb
gs
js
push
shr
adc
inc
dec
inc
cld
pushl
pusha
inc
sub
adc
sub
mov
je
inc
jl
pop
lds
jg
gs
popf
sbb
and
dec
push
fmuls
jmp
dec
xchg
je
mov
jle
jle
loop
shll
xor
sub
xchg
test
mov
push
pushf
es
mov
mov
sbb
dec
xchg
inc
inc
scas
fcomip
pushl
xor
jge
shll
or
push
mov
sbbb
jle
aam
testb
imul
jne
lcall
pop
fsubp
shlb
aas
jp
inc
pop
inc
xor
imul
cmc
outsb
roll
cmpsl
adcb
mov
je
cmpl
enter
into
cmp
popa
lods
cmp
pop
sar
out
out
jmp
into
arpl
dec
fwait
cli
adc
dec
push
adc
mov
mov
insl
mov
lock
mov
and
fistl
les
lcall
mov
pushf
repnz
adc
adc
and
in
adc
les
bound
lcall
jbe
and
cmp
aaa
push
femms
stc
fsubrl
mov
cs
ja
jmp
pop
loop
jmp
clc
pop
xor
sub
dec
dec
in
loop
and
adcl
xchg
adc
call
jge
ss
pop
inc
popa
sbb
xchg
inc
push
xchg
loop
inc
cld
cli
scas
lcall
shr
lock
outsl
or
out
and
imul
mov
pop
or
and
pushl
adc
inc
andb
in
mov
mov
push
cmp
aas
push
sub
add
push
mov
xchg
repnz
pop
mov
out
roll
fwait
jmp
testl
push
js
pop
xor
int
in
jae
mov
xchg
adc
movsb
mov
mov
xor
add
out
icebp
or
imul
lcall
and
xor
iret
push
ja
cmpsb
cmp
pop
imul
inc
jg
xchg
je
mov
hlt
mov
cmp
mov
pop
cmpsl
cmp
call
sahf
xor
repnz
test
out
std
xor
stos
push
pop
inc
aas
dec
sbb
mov
mov
adc
std
add
mov
scas
mov
repnz
mov
jno
sub
gs
gs
push
dec
lcall
incl
pop
aaa
cmp
aad
mov
inc
popf
mov
testb
hlt
sub
and
adc
ret
adc
test
add
les
cmp
call
aaa
ljmp
ds
inc
adc
xor
or
jno
adc
mov
xorb
mov
in
out
cmp
cltd
push
ret
in
and
inc
fdivr
call
popf
fsubs
rorb
push
and
rolb
pop
inc
inc
or
js
mov
pop
hlt
incl
rclb
lods
cmp
cmpsl
in
notl
adc
jle
xchg
adc
xor
ret
sub
call
hlt
xor
lret
out
out
aaa
fs
mov
mov
jg
mov
jo
xchg
sub
adc
aad
cmp
fs
adc
scas
push
mov
rcl
decl
pushl
nop
xor
in
cmc
mov
mov
pop
pop
loope
add
ljmp
test
sahf
pop
pop
mov
xor
jns
cld
sub
cmp
pushl
adc
cld
xchg
jne
add
or
xchg
insb
cwtl
jge
rolb
push
jns
or
test
call
mov
cmp
push
rolb
xchg
mov
push
lods
mov
js
xor
fidivs
mov
fdecstp
mov
out
repz
repz
mov
xor
test
aam
lock
divl
aad
repnz
jno
shll
inc
lahf
test
mov
push
adc
cltd
mov
test
mov
decl
adc
nop
in
fidivl
int3
loopne
imul
in
mov
ret
adc
test
jmp
cltd
stc
or
int
xor
add
ljmp
test
pop
fisubs
fwait
pop
scas
jb
sbb
loop
pop
lock
jmp
mov
rsqrtps
inc
cld
clc
sbb
jb
je
sub
jnp
jmp
jg
mov
mov
rcl
inc
stos
pop
xchg
xchg
in
cmp
aaa
mov
xchg
fnsave
test
and
inc
mov
lds
decl
test
orl
add
fbld
push
mov
jg
insl
rol
or
mov
cmp
xor
cwtl
icebp
xchg
mov
mov
mov
jg
mov
lcall
daa
cmpb
push
dec
call
pop
decl
inc
arpl
xchg
cs
push
pminsw
xchg
ret
mov
fsubs
push
pop
xchg
push
sbb
mov
sbb
pushl
push
or
add
sar
lds
push
loopne
pop
cld
insb
aas
nop
faddl
pop
fdivrs
loop
icebp
clc
mov
gs
leave
sub
jne
lret
push
fildll
adc
cld
inc
scas
cli
movsb
popf
fs
dec
out
add
pop
loop
push
adc
mov
lret
aas
mov
in
or
lea
call
inc
push
lock
sahf
mov
neg
or
es
adc
lahf
mov
test
lcall
mov
icebp
arpl
sahf
popa
fs
sub
leave
cmp
push
fistpll
cmp
decl
decb
mov
xchg
xchg
xchg
mov
jmp
cmp
negb
xchg
cmc
fcomi
and
movsb
pushl
adc
hlt
ss
cmc
mov
push
push
loop
lcall
test
js
fstpt
sbbb
das
shlb
mov
sbb
insb
pushl
lcall
daa
sbb
stos
je
sbb
outsl
scas
ja
add
pushl
icebp
faddl
mov
das
xor
cli
push
xor
inc
addr16
into
add
dec
or
add
push
pop
in
outsl
outsl
push
cltd
inc
push
gs
and
adc
cli
mov
mov
pop
mov
mov
add
insl
cs
aas
popa
in
jle
mov
pop
xchg
push
cmp
mov
sti
repz
xchg
mov
mov
cmp
pop
adc
ljmp
rolb
ja
aam
fcoms
adcb
adc
pusha
fwait
jnp,pn
fdivrp
dec
jge
xchg
insb
ljmp
jnp
loope
xchg
icebp
dec
add
int3
lcall
jle
lahf
adc
mov
jb
cwtl
repnz
mov
dec
fstpt
sbb
xchg
ljmp
mov
lret
idiv
rol
je
mov
jmp
adc
push
jmp
scas
and
fsubr
fsubrs
notb
dec
xor
mov
lcall
mov
clc
inc
inc
mov
pop
ret
aaa
dec
in
fcmovnu
xorl
jge
das
inc
ret
fs
push
push
inc
imul
inc
ljmp
pop
test
clc
lds
repnz
scas
std
ficomps
sti
das
push
mov
jmp
cmp
imul
je
push
andb
into
mov
dec
dec
test
jg
incl
pop
pushl
out
jnp
ljmp
shlb
sub
jg
jb
pop
das
cmp
sbb
mov
popf
data16
aaa
clc
lret
int
cmpsl
pushl
in
jp
es
cli
pop
push
xor
xchg
pop
imul
or
lods
lods
sbb
add
and
call
bound
push
in
mov
int
imul
pop
out
mov
fimull
xor
push
pop
adc
aaa
and
movsl
icebp
jae
sub
loopne
sar
int3
push
mov
adcb
lcall
pop
js
inc
push
lret
out
arpl
je
inc
jecxz
mov
daa
push
pop
stc
pusha
subb
data16
pushl
flds
popa
xor
xor
stc
ret
ffreep
movsb
pop
jle
decl
xchg
push
cltd
scas
and
sub
push
decl
inc
pop
fsubrl
pop
xchg
insl
sub
pop
cli
and
dec
xchg
aaa
xchg
xchg
cld
xor
call
lods
sbb
aaa
xchg
mov
test
insl
insb
cmp
cli
int
mov
pushl
iret
and
sahf
movsl
and
imul
jle
cwtl
jne
sub
lret
and
pop
xor
ljmp
sub
fmuls
fsubrs
into
lcall
jb
pushl
jge
sbb
pop
mov
icebp
call
push
xchg
add
add
dec
adc
in
xor
push
mov
call
out
jle
je
jmp
ljmp
push
pop
cltd
movsb
test
dec
sub
add
push
pushl
dec
jmp
jle
sahf
xchg
fxch
pusha
test
clc
dec
inc
ja
cli
and
pushl
dec
push
mov
idivl
je
jb
sarl
jge
mov
xchg
xor
sbb
stos
dec
and
xchg
hlt
in
insl
push
ret
fcmovnbe
sbb
xchg
cmpsb
pop
insb
sub
dec
pushl
jb
jne
es
jne
sub
pop
insb
xchg
fbstp
adc
xor
ja
jg
or
sti
mov
add
mov
jbe
sub
pusha
or
jge
repnz
aam
pop
xchg
jmp
cli
mov
jmp
sarl
or
mov
add
test
and
xor
pushf
pop
add
cmp
icebp
je
inc
jg
jmp
mov
flds
mov
fisttps
cmp
cltd
mov
faddl
cmp
pushf
inc
inc
mov
sti
mov
cmc
or
jecxz
jb
add
inc
lcall
mov
pop
sub
cltd
sub
cld
in
cld
mov
push
jae
aas
sti
inc
popa
pop
ret
dec
jbe
nop
icebp
ljmp
sti
push
add
pop
flds
punpckhbw
lods
lcall
lahf
in
jge
mov
sub
loope
xchg
lods
sbb
jns
mov
sbb
lock
leave
scas
cmp
push
cld
or
call
xchg
pop
es
jns
addr16
or
push
fisubl
pop
fldcw
inc
mov
inc
xor
int
int
xchg
popa
ret
incl
fists
inc
fwait
outsb
addr16
xor
icebp
xchg
jns
call
out
test
jg
outsb
jmp
mov
mov
jbe
inc
pop
mov
xchg
inc
loop
xchg
sbbl
mov
xchg
inc
and
ds
lcall
addr16
cs
cmp
je
mov
popf
cmp
mov
filds
loopne
loop
das
clc
ljmp
adc
jae
pop
and
and
jmp
lcall
add
cmp
sbb
pop
movd
iret
jp
call
incl
mov
mov
lods
cli
enter
mov
out
aaa
xchg
fmull
lcall
xor
dec
pop
sub
adc
pop
aas
mov
das
testl
push
mov
addr16
es
ljmp
stos
insl
addl
sbb
loope
fisubl
cld
das
sti
ja
aad
aas
hlt
fcomip
lcall
inc
mov
iret
sub
xor
ror
in
out
dec
dec
adc
mov
xor
dec
push
fbstp
push
call
and
loop
fadds
cld
insl
sbb
clc
test
leave
loop
mov
dec
and
cmpsb
shrb
dec
sub
sbb
cmp
pop
cmp
adc
cmc
sub
je
arpl
aam
pop
add
lcall
cld
pop
daa
fstps
ja
lcall
decb
in
mov
hlt
fstps
jecxz
push
mov
sub
dec
rcll
imul
lret
ss
push
data16
das
decl
fs
dec
inc
mov
sbb
push
pop
pop
mov
dec
aad
or
std
shl
xor
dec
mov
js
out
add
shlb
movl
ljmp
pop
cmp
shr
rorb
cmp
inc
jle
nop
jp
nop
push
in
pop
decl
testl
cmpsb
push
sti
or
or
jle
psrlw
fdivr
lcall
notb
mov
xchg
add
ds
fdivl
mov
push
repz
dec
push
rcl
adc
lret
dec
out
pop
incl
add
push
leave
loopne
mov
inc
ret
ljmp
es
fimuls
call
mov
push
push
xchg
test
or
mov
aaa
decl
mov
cmpsl
stos
jmp
and
xlat
mov
pop
imul
decl
jns
inc
mov
cwtl
pop
jo
jecxz
jmp
push
mov
jp
jne
ljmp
jecxz
dec
push
cltd
jno
jno
orb
mov
push
lahf
mov
dec
pushf
or
dec
mov
cmp
cmp
sbb
cwtl
jecxz
adc
xor
clc
cld
sub
into
inc
and
sub
fdecstp
decl
mov
and
enter
popa
popf
inc
push
ret
jb
aad
into
xchg
cli
call
loopne
or
lods
mov
jg
xchg
pop
clc
gs
ljmp
sbb
aas
repnz
fidivrs
mov
jge
mov
mov
int
iret
mov
int3
ret
pop
in
nop
fsubr
and
xor
mov
adc
insl
and
mov
decl
and
test
int
aam
sti
dec
or
out
mov
xchg
sti
stos
lods
xchg
jl
push
cmp
lcall
mov
testb
adc
test
mov
fcoms
lcall
pusha
push
cmp
pop
push
pusha
shl
test
lcall
cmp
cmp
pop
xor
sbb
inc
test
jns
adc
stos
fnsave
push
mov
out
push
or
cmp
mov
xlat
mov
or
fs
insl
popa
stc
enter
mov
mov
test
stos
cli
mov
fucom
jno
fdivrp
pushl
adc
test
or
mov
or
xchg
mov
outsl
mov
lods
incl
jmp
cld
insb
dec
pop
pop
divl
pop
mov
inc
add
js
out
pop
std
jmp
fmul
push
pop
xchg
add
popf
je
or
xchg
add
or
cli
hlt
lcall
lcall
fisubrl
sbb
dec
xchg
mov
dec
lods
jne
incl
imul
jo
out
lock
pop
xchg
nop
push
inc
push
into
idivb
xor
xor
fs
stos
sbb
out
call
pop
stos
imul
pop
adc
dec
hlt
jl
dec
in
sbb
xchg
and
mov
adc
lcall
outsl
add
les
dec
and
test
in
fsubl
dec
dec
scas
mov
decb
out
and
dec
xchg
mov
push
out
test
les
gs
es
lret
outsl
fs
call
and
mov
cmp
rcl
loope
es
out
movsl
imulb
push
lahf
adc
xchg
jecxz
and
pushl
mov
mov
jle
sub
insl
cmpsl
inc
xchg
pop
push
push
ljmp
lods
and
dec
cmp
or
popf
out
mov
stos
shrb
decl
imul
shl
ret
outsl
in
into
fcmovne
mov
ljmp
scas
or
dec
addr16
push
mov
lods
jno
push
cli
call
or
mov
pop
mov
mov
dec
es
cmpsl
std
mov
int3
jl
decl
push
push
cld
mov
mov
cltd
repnz
fistps
add
adc
ja
cwtl
cmp
je
xlat
mov
lcall
cwtl
out
pusha
ds
push
xchg
jecxz
int
xchg
inc
test
repnz
call
pop
push
adc
iret
sub
fsubl
dec
fistl
stc
mov
jne
push
movsb
scas
clc
jmp
cmpsb
mov
mov
insl
bound
outsl
insl
add
xor
add
cmp
xor
sbb
das
outsl
sbb
jb
mov
sub
push
and
fistl
loope
call
and
jne
add
and
jmp
popf
pop
int
mov
xchg
dec
insl
popf
pop
inc
mov
xor
rcr
mov
call
inc
faddp
or
pop
xor
paddusb
fs
mov
and
mov
jmp
pop
sbb
jp
or
jnp
stos
pusha
pusha
jbe
fsubrl
arpl
incl
xchg
mov
xorl
mov
call
loope
mov
add
jg
jmp
shll
pop
iret
sbb
sahf
and
int
fwait
sub
cld
mov
sahf
xchg
jle
xchg
push
xchg
cmp
cltd
sub
loope
ret
clc
decl
rcr
rcr
mov
push
jno
dec
push
xor
jmp
mov
cmp
insl
cli
mov
out
int
and
pop
fcomip
sti
jle
xchg
loopne
call
or
or
addl
inc
cmpsb
out
nop
xchg
cmp
dec
jmp
sub
mov
lods
lahf
push
mov
call
dec
dec
and
ja
std
cmp
pop
cmp
imul
fstpt
hlt
push
xor
roll
popa
jae
fsubs
daa
xchg
jo
insl
and
cmp
sbb
call
pusha
and
and
mov
jg
mov
test
inc
add
mov
jg
pop
add
cmpsl
xchg
test
jnp
orl
pop
dec
test
out
lea
inc
xor
sub
push
push
cli
incl
cmp
idiv
mov
mov
push
je
pop
pop
mov
incl
adc
mov
dec
sub
rclw
pop
je
or
cmp
pop
cwtl
xchg
jne
add
in
mov
addb
cmp
push
lods
and
popa
bound
shl
sub
cmp
or
add
adc
jge
sbb
call
jmp
mov
xchg
push
outsb
dec
dec
das
mov
dec
in
mov
xor
cld
popf
mov
call
test
push
mov
mov
lods
fucomi
cmp
inc
mov
pop
ja
hlt
xchg
jp
pusha
shr
in
cmp
call
mov
sar
mov
jle
fwait
lcall
mov
mov
rcrb
daa
and
leave
adc
sbb
incl
lds
cltd
jecxz
push
sbb
int
stc
pop
imul
jne
fistpl
push
pop
rclb
sbb
in
push
lock
pop
adc
push
incl
and
push
xorl
sti
jl
jb
mov
popa
aam
mov
hlt
pop
icebp
decl
push
pop
bound
mov
mov
mov
pop
loopne
lcall
imul
into
adc
les
adc
mov
icebp
push
repz
pushf
add
mov
call
and
clc
adc
or
mov
cmp
dec
mov
xor
pop
add
inc
rorl
aad
add
pop
rcl
inc
aam
fiadds
mov
in
sar
scas
cli
test
loopne
sarb
dec
and
frstor
call
jle
mov
jns
pop
ret
xor
push
sahf
mov
jg
ss
sub
cmp
sbb
cltd
lds
sub
cs
jg
pop
shlb
cmp
lcall
sarl
dec
xor
push
cmp
sbb
xlat
push
mov
xchg
jg
aad
fnstenv
test
and
xchg
ljmp
mov
dec
out
mov
lret
xchg
sub
int3
movsb
repz
dec
push
mov
push
xchg
jg
lcall
lret
sbb
push
mov
ffree
sbb
test
decl
mov
popf
push
scas
push
scas
js
xor
out
xchg
push
jge
out
incl
xchg
imull
cmpsl
xacquire
jle
xor
dec
sbb
repnz
or
aam
fisubrs
cli
mov
orb
jno
add
icebp
clc
popa
nop
lret
adc
xchg
jmp
or
out
fwait
les
je
das
in
loope
and
adc
call
sbb
adc
out
mov
dec
enter
adc
add
out
out
push
out
jmp
jmp
icebp
shrl
loop
xor
ja
inc
add
dec
inc
negl
lret
xchg
fldenv
test
pop
decl
xor
scas
mov
adc
mov
ds
mov
sahf
mov
les
push
ret
iret
mov
xchg
push
jp
adc
dec
xor
call
data16
scas
inc
xchg
lret
test
xchg
jg
jp
xor
pop
sbb
jg
jge
jmp
ds
fcoml
or
inc
pop
mov
fucom
pop
call
movsb
and
or
jmp
inc
pop
add
adcl
xor
std
data16
enter
pushf
movsl
add
push
into
lcall
sub
sahf
adc
decl
sahf
cmp
push
or
decl
shrb
and
bound
loope
or
adc
xchg
xchg
shr
push
andb
pop
xchg
out
cmp
aad
pop
xor
add
cmp
nop
adc
fsqrt
inc
pop
fisubs
or
add
test
pushl
loopne
dec
stc
cli
pop
xor
sar
enter
xor
mov
pop
jmp
mov
mov
lods
sbb
hlt
mov
jns
into
sbb
sub
xchg
cmp
clc
xchg
pushl
ljmp
pop
add
cmp
push
repnz
xor
pusha
jns
push
jg
jmp
jo
cmp
jne
sub
iret
mov
es
pop
xorb
adc
sbb
mov
push
jo
fcom
inc
scas
or
cwtl
sub
xchg
outsb
push
sub
cmp
dec
aad
mov
or
in
add
repnz
and
ficoml
and
adc
pushl
xor
enter
jae
nop
ror
mov
stos
inc
pop
or
jg
adc
jns
or
jg
ljmp
cli
sub
pop
push
or
pop
sub
arpl
leave
shl
call
repnz
gs
add
add
mov
xlat
cmpsl
icebp
stos
pop
mov
sbb
decl
pop
pop
push
sub
pop
push
mov
jns
dec
les
incl
sub
cmp
mov
jmp
pop
in
inc
into
or
lahf
sub
lahf
xchg
out
mov
je
inc
int
ja
mov
gs
sub
hlt
std
clc
cwtl
mov
aas
or
push
mov
ljmp
jnp
cmpsb
ljmp
and
cmp
mov
std
out
es
dec
shlb
clc
stc
popf
lods
daa
in
sub
adc
jecxz
lods
dec
cld
xor
inc
gs
pushf
es
sti
stos
lahf
jnp
loope
dec
push
push
jns
and
ret
call
or
test
or
loope
shlb
popf
dec
jno
pusha
mov
incl
xchg
cmp
test
movsb
xor
insb
stos
sbb
aad
in
sub
adc
mov
fs
lods
lret
iret
mov
push
jbe
or
ret
lods
ret
loop
hlt
inc
movsb
mov
clc
sbb
cmp
mov
mov
pop
das
jns
lods
fiadds
adc
in
incl
sub
dec
repnz
jbe
sub
sub
daa
insl
xchg
adc
sbb
push
enter
sbb
cmp
test
roll
bswap
jnp
mov
lods
xor
arpl
sbb
fisubl
in
dec
sub
jnp
addl
test
or
pop
push
mov
or
push
jge
test
stos
cmp
daa
ficomps
push
xchg
lahf
dec
cltd
pop
pop
mov
push
lods
decl
xor
mov
inc
lods
pop
jp
mov
cmpsb
mov
mov
pop
pop
je
decl
sahf
mov
push
pop
test
leave
xchg
loopne
sub
push
mov
ret
and
inc
outsb
fidivl
cld
out
rorb
imul
and
mov
insb
adcb
adc
cmp
shr
or
pushf
call
lods
lods
imul
out
ds
into
sub
mov
cmp
dec
xor
push
insl
pusha
test
push
leave
out
jg
data16
into
call
jl
orb
cmp
call
push
pop
les
sarl
fimull
lea
adc
rcrb
pop
inc
sub
incl
popf
shll
inc
repnz
test
nop
fstp
sti
inc
mov
pushf
js
sbb
insb
mov
jmp
cmp
cltd
xlat
sti
testl
lods
outsl
pop
and
cltd
scas
je
cmc
pop
ljmp
mov
dec
je
mov
adc
icebp
popa
inc
movsl
cmpsl
mov
add
rcll
jno
stos
lcall
in
xor
xchg
dec
jg
call
int
and
addr16
dec
jbe
push
push
fsubl
fcompl
data16
dec
mov
ljmp
mov
fmull
pop
jle
sbb
sub
push
mov
xchg
push
or
pushl
sub
iret
pop
xchg
mov
sub
push
fisubrl
cltd
lods
jecxz
repz
in
dec
sub
sub
dec
cmp
sbbl
ljmp
ja
sbb
xor
scas
push
call
lods
pop
fbstp
mov
xchg
jmp
fbstp
fs
jns
loopne
popf
sti
sti
fadd
push
hlt
ljmp
shll
add
dec
mov
rorb
sbb
popa
ljmp
adc
bnd
push
pop
mov
loopne
push
int
aas
xor
inc
adc
jmp
ljmp
sbb
shll
mov
mov
mov
pop
xchg
pop
sti
add
lret
or
imul
pushf
insl
daa
loope
data16
mov
mov
lcall
xor
xchg
inc
pushl
pop
cmc
xchg
addl
rorb
sbb
call
cmpsb
incb
pop
test
mov
add
sahf
pop
push
add
sub
incl
sarb
sub
sub
or
xchg
xor
or
ljmp
jge
sub
sub
xlat
insl
push
fistl
or
ljmp
orl
sbb
cmpsl
jae
mov
repnz
lahf
inc
enter
mov
or
mov
sub
cltd
and
hlt
shll
and
sub
adc
aad
sbb
inc
cs
jmp
ljmp
mov
mov
rolb
popf
mov
lock
cmp
fstpt
out
inc
pop
pushf
subb
jg
lcall
adc
push
xor
xchg
scas
call
inc
dec
daa
xor
inc
pop
cmpsl
inc
xchg
in
outsb
aad
popa
add
dec
pusha
adc
sbb
xor
hlt
xchg
sbb
call
scas
movsl
sbb
xchg
shlb
stc
rcl
mov
stos
mov
push
in
mov
aam
xor
pop
add
jbe
fdivl
aas
adc
cmp
incl
or
xor
test
inc
mov
mov
and
decl
mov
inc
push
jge
cmpl
mov
cmpsl
adc
in
jmp
or
call
cli
xor
fucomp
push
mov
jmp
adc
push
or
mov
aad
add
dec
pop
outsl
aaa
js
orl
add
jmp
push
mov
daa
mov
xchg
push
mov
pop
pushf
ja
mov
jae
mov
lcall
cmp
hlt
cmp
insl
scas
into
es
clc
test
xchg
cmp
pushl
inc
fwait
lea
push
decl
lret
inc
mov
scas
cld
sub
add
filds
pop
lds
jo
push
push
leave
stc
out
cli
outsl
pop
lds
data16
inc
js
xchg
js
in
js
sub
pop
push
mov
incl
sub
xchg
loope
push
pusha
dec
aam
cmovbe
aad
leave
inc
loopne
sub
xchg
repz
lcall
sub
add
stos
pop
mov
mov
inc
popa
xor
clc
mov
dec
sbb
in
movsl
push
push
adc
inc
cmpsb
loop
mov
push
xchg
in
cmp
cmc
outsl
out
fwait
testb
inc
scas
fstps
loopne
push
add
notb
inc
push
in
or
add
pop
cld
jnp
cmpsb
fimuls
xlat
mov
loopne
out
clc
dec
andl
xor
pop
sbb
sti
xchg
sbb
stos
mov
xor
jns
ja
incl
cmpsl
and
xor
xor
mov
jo
or
scas
cli
lcall
inc
inc
sahf
mov
mov
xchg
jb
pop
push
or
add
cs
lcall
loopne
dec
push
push
push
popf
xor
xor
xchg
jmp
js
pop
inc
test
dec
cmpl
jg
jmp
mov
pop
mov
rorb
les
fists
mov
incl
icebp
aad
push
imul
add
mov
outsl
popa
xchg
in
call
fprem
out
shll
in
pop
into
mov
jo
ret
cmp
nop
jmp
cltd
or
faddl
mov
sbb
outsb
cmpb
mov
add
jecxz
pop
xchg
pusha
lcall
fwait
push
xchg
lret
mov
jle
xchg
in
xor
test
and
insl
popa
orl
pushl
mov
cltd
push
scas
xchg
test
mov
or
cmp
mov
push
outsl
fs
push
dec
scas
pop
cwtl
cmp
mov
into
sbb
shll
repnz
in
das
aaa
adc
inc
mov
rcl
dec
les
jle
hlt
ja
pop
mov
inc
mov
adc
inc
cmpsb
pop
jne
xchg
lret
lret
lea
jg
adc
dec
pop
imulb
cli
lock
imul
inc
outsb
ss
out
fs
and
fimuls
idivl
mov
idiv
std
daa
repnz
in
icebp
add
mov
inc
aam
adc
aad
sbb
in
pushl
or
xor
icebp
sbb
jno
jbe
sub
jg
ljmp
push
xchg
jge
insb
repnz
int3
mov
decl
push
push
mov
jl
push
sbb
fcom
mov
inc
xor
mov
test
cmp
fstpt
mov
xchg
adcl
in
je
xor
scas
jns
incl
pop
test
mov
xchg
test
mov
jmp
and
push
pushf
imul
add
in
push
push
bound
inc
in
mov
shrl
jg
loopne
in
cmp
xor
iret
xchg
gs
push
insl
fidivs
mov
cmp
js
jmp
cmp
cltd
loop
mov
mov
mov
dec
sub
add
inc
in
sbb
out
loope
mov
stos
adc
dec
push
lds
cmpsl
mov
push
daa
mov
cmc
cltd
in
shll
je
adc
iret
sub
rolb
incl
gs
push
lahf
cwtl
push
adc
jmp
ss
cli
mov
popa
lret
xor
mov
xchg
add
push
addl
imul
mov
out
xor
mov
cmc
push
js
xlat
lret
xchg
mov
xchg
fisubrs
jmp
mov
push
xchg
mov
out
and
or
sarb
push
enter
pop
add
pop
xchg
mov
fildl
ljmp
ljmp
xor
jg
push
dec
std
push
pop
out
pop
lock
lea
cmpb
dec
aad
pop
sbb
jg
into
cmp
sbbl
dec
jbe
lods
pop
add
test
fmull
xchg
mov
inc
jns
ds
in
mov
cmp
mov
jle
jp
jmp
add
lret
sbb
pop
or
dec
xor
in
in
and
push
jecxz
jl
lock
adc
add
lds
call
leave
aaa
push
into
adc
fiaddl
test
xor
stos
adc
inc
jb
lret
add
inc
imul
in
sti
div
fwait
cmpsl
outsl
insb
xor
imul
loopne
push
sbb
adc
dec
addr16
mov
decl
adc
in
mov
jb
insb
incb
scas
inc
xchg
mov
std
jg
dec
insl
dec
cs
in
and
dec
adc
mov
inc
repz
or
mov
dec
mov
add
push
mov
insl
push
xor
xchg
out
insb
fwait
inc
enter
cmp
add
lcall
mov
xchg
fcmovnb
call
movsb
sbb
nop
jno
lds
jmp
aas
les
pop
cmp
cli
cmp
sub
addr16
sub
jns
mov
sarb
adc
mov
adc
adc
int3
filds
out
xchg
daa
ret
setno
lahf
icebp
jl
mov
mov
aam
or
sbb
jmp
repnz
push
das
adc
cmp
scas
icebp
dec
pop
test
je
mov
sub
mov
mov
cmpsl
fdecstp
arpl
push
jbe
cmp
mov
jmp
mov
push
js
jnp
in
testl
mov
aam
pushl
divl
add
sub
dec
jbe
inc
icebp
in
aam
in
or
fistpll
push
mov
sbb
mov
mov
pop
adc
ret
loop
int
pop
sub
call
xor
and
dec
lods
jns
in
ret
sbb
repz
shrb
xchg
fiaddl
mov
incl
mov
xchg
das
push
bound
lock
addr16
movsl
jge
xchg
inc
pop
or
leave
add
dec
add
outsl
dec
ljmp
cmc
fstps
pusha
sub
lods
jle
ljmp
jg
sub
xor
xchg
movsl
ficoms
sbb
jle
stos
aam
data16
aam
daa
pushl
or
rolb
fwait
jne
mov
cmp
aad
fwait
mov
call
repz
clc
mov
clc
loop
scas
and
cmpsl
cwtl
sbb
decb
sbb
add
jmp
pop
dec
jbe
cli
fwait
dec
dec
fildll
sub
insb
mov
out
and
in
test
sbb
fcoms
int3
je
or
lcall
fsubrl
dec
push
pop
jle
jne,pt
xor
pop
mov
pop
cltd
ljmp
lcall
mov
or
stos
or
dec
js
add
mov
cmp
jae
scas
xor
fidivs
test
lret
mov
jmp
ljmp
orb
xchg
cwtl
mov
lock
push
lcall
in
mov
dec
mov
clc
call
cmp
mov
mov
scas
in
andl
xchg
jmp
jno
pop
inc
sar
or
popa
movsb
shlb
fcomi
insl
call
sbb
aam
fldcw
sar
xchg
push
xchg
leave
jge
and
jne
mov
xor
add
insl
inc
aaa
inc
mov
cltd
and
xchg
lods
inc
stos
inc
imul
add
mov
inc
imul
ja
or
inc
pushw
jns
and
inc
xor
pop
fiaddl
cmpb
inc
jns
and
pushf
clc
inc
xchg
mov
ss
dec
insb
cld
mov
call
movsb
cmp
cwtl
jo
jl
sbb
mov
add
popa
push
adc
mov
inc
mov
call
mov
mov
movb
and
push
and
adc
imul
inc
jne
adc
lods
enter
push
pop
repnz
add
dec
lret
sahf
fs
inc
addr16
and
repz
pop
dec
inc
clc
push
and
or
push
push
mov
inc
popa
dec
cmpsl
mov
xor
lcall
and
inc
sahf
mov
aaa
iret
aaa
insl
into
add
and
jae
sbb
pop
xchg
mov
mov
in
mov
xor
xchg
mov
sar
mov
cltd
sarl
jo
dec
pop
push
mov
lcall
pop
dec
xchg
sbb
add
xor
shlb
roll
incl
sahf
or
fwait
andb
adc
inc
xor
addr16
cmpsb
pop
adc
fistpl
dec
pop
stos
jp
add
xchg
dec
in
adc
enter
fcmovu
fdivrs
jl
xchg
das
jg
mov
xchg
les
xor
popf
mov
out
xchg
in
dec
cmp
stc
fs
jb
movsb
xchg
sub
hlt
inc
cwtl
gs
les
adc
xchg
dec
xchg
mov
call
sbb
mov
mov
ljmp
inc
push
negb
fcmove
mov
or
decl
hlt
js
adc
jle
cmp
lock
pop
pop
xchg
rorb
cmp
sbb
loopne
ljmp
and
pop
and
xchg
and
mov
ljmp
mov
pop
push
incl
cmp
mov
xchg
xor
popa
mov
divb
daa
das
shlb
nop
sbb
fistpl
mov
popf
insb
dec
inc
xor
dec
sahf
repnz
sub
jl
mov
mov
sbb
ficoml
dec
jp
jg
dec
adc
xchg
hlt
iret
data16
gs
mov
int
shll
cmp
and
xchg
aaa
adc
dec
std
cmpsl
mov
jmp
push
and
mov
rclb
out
bound
jae
cmp
or
daa
push
shlb
ljmp
inc
inc
mov
in
clc
test
je
dec
rorb
test
push
inc
xor
ds
jnp
stc
jbe
addr16
add
gs
sub
insb
jne
push
push
pushf
add
test
jb
pusha
test
adcb
push
inc
mov
add
cmp
cld
sbb
in
jecxz
imul
ljmp
dec
xchg
pop
dec
les
mov
add
jns
data16
xchg
cmpsb
lea
idivl
call
jmp
adc
lods
in
dec
repz
push
pinsrw
mov
or
inc
in
lock
ljmp
mov
mov
jae
sub
add
clc
ficoml
dec
mov
mov
or
jb
add
add
push
pop
xchg
decl
call
mov
popf
out
jns
mov
inc
std
jmp
jge
bound
xchg
aaa
aaa
addr16
sub
arpl
fisubrl
out
push
xchg
in
call
mov
das
sub
out
cmp
push
xor
clc
adcl
add
clc
cmp
pusha
scas
shlb
xchg
adc
lds
fdivs
pop
movntq
out
fcomip
jmp
mov
adc
loope
mov
lret
and
jl
mov
stos
push
ljmp
pop
lcall
sbb
cltd
fsubr
ret
insb
addr16
into
xor
enter
sub
pushl
mov
mov
pop
jmp
jl
outsl
pop
add
mov
sub
sbb
loope
fwait
jb
out
pop
int3
sub
jns
inc
add
decl
imul
sub
sahf
dec
loop
sarl
fstl
sub
jg
mov
jb
inc
mov
mov
dec
sub
adc
add
mov
mov
jno
int3
subb
icebp
sub
or
or
add
cld
add
pushf
cmp
jp
cmc
jnp
into
aad
mov
or
call
imul
dec
popa
imul
scas
jno
ja
cmp
push
mov
dec
pop
cs
les
pop
add
or
rolb
mov
cmc
mov
inc
dec
pop
xchg
add
inc
mov
and
in
in
mov
lahf
sbb
xor
clc
jmp
dec
int
push
pushl
push
mov
fucomi
mov
test
mov
inc
scas
or
push
ds
and
jg
jmp
mov
cmp
jmp
or
fisubrl
sub
jg
xchg
add
sub
mov
fsts
adc
ljmp
outsb
add
lahf
pop
and
pop
lret
mull
shlb
aaa
stos
incl
insb
fisttps
aad
or
aam
and
mov
into
decl
hlt
sbb
ret
add
icebp
dec
arpl
cmp
jo
call
jmp
cmpsb
push
sub
jmp
scas
jne
xchg
mov
push
push
fwait
dec
inc
lods
mov
in
mov
jp
fbld
mov
addr16
cmpsl
mov
dec
dec
mov
xor
call
and
clc
out
mov
or
inc
insl
into
fstpl
mov
stos
hlt
pop
xor
sahf
pop
or
sar
ljmp
loop
daa
jge
dec
and
aad
mov
lret
in
test
popf
insl
in
pop
pop
js
dec
int
add
pop
aam
push
jp
jbe
add
loop
jmp
movsl
ret
mov
mov
jae
mov
mov
mov
pop
dec
notl
rcrl
and
or
mov
mov
mov
xor
cmp
popa
inc
sbb
imul
aad
aaa
mov
lcall
sbb
orb
add
sub
test
repnz
mov
xor
xlat
cmp
cmp
add
out
push
call
cld
pushl
popf
scas
jns
add
adc
les
cld
dec
ja,pn
shll
mov
jae
adc
in
mov
and
dec
and
dec
aas
nop
add
cmp
js
push
mov
xchg
and
inc
stc
shll
leave
and
cld
jg
cmp
xchg
mov
int
movsl
in
js
mov
cwtl
lret
cmp
jmp
in
and
adc
cs
xchg
sbb
push
scas
cli
mov
out
jge
ljmp
cmpsb
dec
and
adc
inc
dec
lcall
mov
inc
out
ret
cmpsb
xchg
hlt
fs
add
shr
in
idiv
test
jb
out
pop
and
sbb
mov
pop
decb
ja
jnp
pop
cmp
dec
gs
mov
call
xor
aaa
push
sub
sbb
imul
jmp
or
pop
fimuls
pop
test
cltd
in
adc
enter
mov
hlt
fstl
ljmp
jp
xchg
in
add
cltd
nop
sub
inc
stos
jge
addr16
pop
push
jge
push
jl
or
or
cmpsl
inc
sti
rcrb
sbb
mov
add
scas
mov
jl
pusha
test
mov
out
cli
pop
and
fiaddl
mov
inc
out
cmp
out
fsubrs
cmp
repnz
into
jge
call
add
push
mov
jecxz
mov
jp
mov
push
adc
mov
ljmp
insl
fcomip
jmp
sub
cmpsb
fidivs
cmp
mov
cmp
lret
add
loopne
decl
popa
int
shl
repz
dec
push
jns
into
aaa
and
mov
fbld
xor
mov
test
mov
out
lods
pop
adc
mov
out
aaa
xchg
inc
aam
pusha
das
cmp
xchg
in
stos
xchg
add
lds
inc
rcr
cmp
sarl
cmp
mov
jns
xor
mov
fcomip
decl
stos
or
xor
sbb
xchg
and
xchg
mov
cmp
sub
movsl
sbb
pushl
pop
fs
pop
scas
inc
rolb
adc
out
adc
hlt
sbb
leave
das
inc
sar
pushl
mov
rclb
jmp
push
arpl
cmpsb
mov
lods
test
dec
iret
sbb
lcall
outsb
adc
popf
adc
orl
or
jl
rolb
in
pusha
ljmp
cmp
roll
adc
jns
dec
jb
mull
add
mov
das
stos
je
fdivr
jmp
xchg
test
add
pop
fwait
jo
shll
inc
shr
dec
jge
int
pushf
xor
int3
sar
jg
adc
xor
es
rorb
push
clc
mov
mov
xlat
in
push
sbb
rol
jg
or
cli
stos
into
shl
inc
sub
lods
lock
call
cltd
pop
add
pusha
jg
xor
stc
add
jae
in
mov
pop
jle
call
jmp
insb
inc
sub
lea
into
movsl
les
mov
repz
ret
call
out
in
mov
add
push
out
cmpsb
loop
sub
ljmp
mov
pushf
jle
mov
sbbl
in
sbb
js
and
incl
push
rorb
cmpsl
inc
mov
dec
ror
fs
dec
cmp
cmp
cmp
and
insb
sbb
frstor
out
push
sahf
pop
gs
outsb
clc
clc
js
dec
hlt
jbe
jns
cmpsl
test
jge
lods
sub
ljmp
in
fimull
cmpb
int3
cltd
sbb
lcall
jg
sub
call
add
dec
ficomps
jae
jb
movaps
incl
mov
jl
shl
jecxz
inc
jns
insb
fisubl
adcb
sbb
xchg
lahf
push
in
test
jnp
cli
jg
sbb
jne
pushf
sub
dec
or
xor
insb
aaa
iret
xchg
fwait
ljmp
push
add
stos
cli
or
mov
or
and
stos
push
inc
scas
push
iret
aas
push
jl
call
xorl
mov
xchg
pop
aad
push
push
sbb
pop
into
insl
cmp
cmp
pop
jl
jg
roll
aad
cmp
cmp
subb
fisubs
clc
mov
mov
xchg
jne
mov
out
mov
decb
icebp
cmp
ljmp
cld
mov
inc
movsb
inc
mov
cmc
cmpsl
and
insl
clc
out
loopne
inc
sbb
sbb
push
fcomip
leave
loop
imul
mov
aaa
cltd
inc
icebp
mov
icebp
int
stos
pushl
cld
inc
scas
test
mov
pusha
dec
and
xor
jnp
cmpsl
sbb
lcall
dec
jb
addr16
xor
lcall
es
lods
mov
enter
fnstcw
xchg
dec
push
add
loop
hlt
aaa
into
xchg
jmp
xchg
pushl
inc
cmp
sub
jge
jmp
cld
rcrb
cmp
iret
mov
cmp
xchg
mov
sete
dec
stos
ljmp
bswap
arpl
or
out
or
sbb
pop
sub
ljmp
add
es
enter
xchg
sub
enter
aaa
add
pop
dec
add
cmp
andl
cs
lcall
imul
mov
js
mov
data16
lea
outsb
out
push
mov
inc
jmp
std
and
shr
fwait
mov
push
lcall
jge
pop
sahf
test
fldlg2
jecxz
xchg
adc
mov
into
repnz
pop
scas
hlt
pop
lahf
adc
sar
inc
int3
push
push
inc
sbb
in
lods
lods
insl
jp
cmc
enter
lock
decl
out
stos
lret
scas
outsl
fists
orl
insb
ds
or
ljmp
and
ljmp
cs
scas
lret
sahf
jno
or
pop
jmp
mov
mov
xchg
shll
sub
adc
mov
cmp
aad
in
clc
mov
xchg
pop
inc
scas
add
fmul
mov
loope
pusha
lea
std
aaa
test
add
popf
adc
popa
cmc
cmp
push
pushl
inc
jecxz
rol
sub
iret
lds
push
lds
push
mov
loope
xchg
lcall
inc
dec
adc
js
push
mov
or
mov
push
sbb
pop
mov
lcall
addb
out
dec
std
incl
cmp
cli
inc
pop
cmpsb
lret
lret
add
mov
jg
push
jg
ret
and
or
push
sbb
mov
sti
call
dec
scas
add
jnp
lcall
dec
cld
stos
outsl
rorb
and
cmp
xor
lcall
mov
inc
inc
xchg
inc
jp
jge
lcall
cltd
xlat
xchg
cs
lcall
push
pop
movsl
xor
fldcw
imul
inc
jbe
mov
inc
adc
rorb
jne
pop
rclb
inc
xchg
cmp
xchg
incl
dec
cmpsb
pop
cmp
mov
inc
mov
cmp
fisubrl
lret
ljmp
cld
xor
fidivl
outsb
push
jo
movaps
nop
mov
std
ret
lds
pop
popa
xor
call
inc
enter
mov
add
scas
into
loop
push
lret
push
cli
mov
call
pop
cmc
fwait
pusha
mov
cmpl
sbb
in
or
call
icebp
pop
aad
add
inc
pusha
out
pop
shr
incb
mov
mov
icebp
pushf
decl
cmp
dec
add
adc
cwtl
inc
arpl
sti
sbb
lret
sbb
ljmp
mov
nop
and
shlb
gs
ret
out
inc
inc
pushw
in
movsl
jbe
inc
inc
xchg
rorl
test
xor
roll
js
ljmp
je
fsts
fwait
push
out
sar
jle
and
jno
xchg
pop
daa
jno
movsl
in
out
push
mov
cltd
imul
das
dec
mov
jmp
cmp
adc
aaa
xchg
repz
call
xor
xorb
adc
dec
jae
scas
pop
decl
inc
vpmaxub
fists
cld
loope
mov
pop
ret
mov
and
into
scas
sub
in
mov
insb
clc
decl
fcoml
enter
loope
jle
push
fimull
adc
pop
and
notl
jb
lods
push
popf
mov
fists
insb
in
push
ds
mov
or
push
ret
fwait
sub
dec
sub
add
jmp
mov
and
dec
push
adc
mov
xlat
xchg
inc
out
mov
aaa
decl
clc
mov
js
cltd
call
push
sbb
sti
xchg
push
stc
adc
inc
test
cs
es
cmp
data16
mov
lock
inc
jp
sbb
adc
dec
dec
mov
incl
ljmp
fdivrl
imul
sbb
lea
clc
mov
mov
shlb
lea
andb
sub
mov
insb
fdivs
cwtl
out
popf
jnp
mov
ljmp
sbb
loopne
stos
fistl
pop
in
add
in
rorb
jg
lcall
xor
popa
loope
leave
dec
push
and
int3
xchg
xor
fdivr
mov
sbb
adc
xor
je
jmp
pop
inc
inc
push
pop
das
push
mov
pop
and
cs
xchg
lahf
dec
mov
dec
pop
adc
call
scas
aaa
add
pop
cmpsl
outsb
out
sbb
clc
pop
scas
test
cs
xor
adc
shrl
mov
rcrl
dec
cwtl
iret
xchg
sbb
dec
or
in
ret
and
ds
jne
mov
test
ljmp
jb
jg
test
loope
aad
scas
jp
cmp
shll
sub
add
mov
repnz
popf
adc
fdivs
test
mov
push
and
imul
faddp
mov
fcompl
scas
mov
fstpt
and
mov
sbb
add
lcall
fimuls
out
out
es
xchg
leave
lock
fdivr
call
lret
iret
fidivrs
fidivs
dec
divl
lcall
adc
ficoml
cmp
repnz
xor
dec
pop
inc
test
mov
insl
pop
outsl
lods
adc
and
fcoms
test
pop
std
js
mov
data16
call
test
push
lds
int
in
adc
push
inc
in
mov
mov
mov
dec
mov
lcall
mov
mov
addr16
push
jnp
adc
sub
test
clc
xor
xor
fsubrl
jae
xchg
in
mov
push
stos
add
lcall
inc
inc
jno
sub
ficomps
and
clc
jmp
mov
jp
push
cld
dec
sbb
add
pushl
xchg
stc
push
cmpsl
jecxz
cmpsb
pop
setae
mov
mov
decl
clc
lea
mov
fidivl
pop
nop
lcall
xlat
test
xchg
rol
andl
je
dec
mov
fcompl
int
lret
lcall
or
cmc
ds
pop
std
pushl
loopne
test
mov
sub
xchg
mov
imul
ljmp
fildll
dec
call
sub
dec
pop
push
adc
fistpll
adc
pushl
fldcw
int3
icebp
cmp
sub
jg
adc
decl
mov
je
xchg
fs
cwtl
clc
dec
inc
pushf
fcos
add
test
das
iret
dec
mov
jmp
pop
xchg
xchg
popf
mov
repz
mov
mov
inc
cmp
incl
daa
xchg
adc
mov
mov
push
push
cmp
mov
mov
dec
ret
sbb
push
stos
inc
int3
andb
andl
arpl
inc
insl
xor
lods
arpl
fucomi
clc
call
mov
and
and
in
sarl
push
sbb
repz
incl
jmp
push
das
fiadds
rolb
mov
repnz
xchg
ljmp
mov
fmull
mov
mov
fisubrl
icebp
jmp
xor
idiv
dec
jecxz
or
verw
pushl
rol
dec
daa
add
leave
in
add
jg
ljmp
mov
loop
incb
and
cmp
sbb
mov
mov
sbb
addb
lea
adcb
pop
repnz
std
lods
mov
lcall
adc
or
jns
call
dec
std
sub
es
cmpsb
mov
repnz
lcall
outsb
lret
mov
push
pop
adc
in
lea
mov
insb
lock
adc
movsl
pop
out
mov
push
mov
adc
mov
into
rcrb
dec
push
lods
pop
jns
aaa
inc
movsl
mov
mov
push
daa
mov
jmp
pusha
shlb
cmc
imul
adc
stos
fadd
xorb
sti
shrl
cmpsb
or
sysenter
xor
mov
or
rcr
jbe
subb
pop
mov
enter
call
xchg
mov
rorb
jnp
stos
jge
rol
or
push
push
adc
mov
pop
inc
or
lret
mov
cmc
xor
jg
add
into
dec
aas
jg
cmp
hlt
imul
add
cmc
jmp
jns
pop
shl
mov
into
cmp
ja
mov
sub
jg
idivb
xor
cmp
call
jo
inc
xor
pop
mov
sub
fidivrs
or
and
outsl
mov
jnp
cltd
aaa
jae
mov
fs
and
xchg
sbb
and
loopne
cmp
test
dec
mov
imul
ljmp
jnp
ds
bound
pusha
sbb
pop
in
push
ds
inc
jle
sbb
call
sub
dec
cltd
lds
daa
mov
jnp
cmp
push
mov
ljmp
sbb
imul
push
loopne
lahf
stos
push
in
add
movsl
xchg
rcll
xchg
int
hlt
int3
sub
jmp
push
mov
push
iret
add
ret
popa
jo
jmp
or
in
xchg
jmp
dec
sub
out
scas
in
js
gs
mov
jle
pop
pop
xor
pop
sahf
test
adc
sub
ds
jmp
jb
mov
orb
stos
push
sbb
push
xor
xchg
out
test
dec
push
pushf
pop
mov
test
aam
test
clc
outsl
xchg
movsl
cmp
xchg
das
pop
mov
pop
jle
push
jmp
and
xchg
dec
icebp
jo
call
jle
add
jg
sbb
ljmp
sbb
mov
mov
push
push
xchg
movb
test
or
fnsave
jns
jmp
stos
data16
mov
cmp
adc
div
nop
ret
xchg
dec
dec
jmp
int3
push
jle
test
lret
rcrb
mov
mov
andb
dec
stc
lods
gs
mov
jge
fcmovnb
mov
stc
pop
push
arpl
cmp
in
mov
and
cwtl
or
outsb
pop
out
enter
mov
mov
cmpsb
and
call
mov
stc
dec
dec
cmpsb
sub
arpl
shll
xchg
scas
and
les
ljmp
jnp
mov
movsl
rcrl
xchg
or
cwtl
decl
dec
xchg
jo
fsubr
es
out
cli
mov
mov
inc
loopne
fcmove
iret
lahf
dec
jge
mov
jecxz
sub
decl
adcl
sbb
mov
dec
add
cmp
push
mov
les
inc
std
outsl
les
orb
gs
jg
xchg
mov
jle
outsl
mov
or
mov
out
psubw
mov
sbb
add
out
cli
mov
or
fisttpl
and
data16
mov
ret
pop
lcall
out
inc
or
dec
enter
ficomps
dec
xchg
cmpsl
notl
dec
inc
xor
cmp
cld
sbb
pop
in
or
inc
shr
sahf
fwait
adcl
arpl
das
cli
jmp
addr16
mov
mov
or
shrl
ffree
clc
cld
xchg
jns
mov
adc
add
loope
jg
xchg
fimuls
ja
mov
shl
pop
pop
cmpb
pop
lret
mov
mov
stos
decl
inc
xchg
subb
int3
fsubrs
xor
push
lret
movsb
dec
ret
adc
and
fcomps
jnp
cld
mov
or
aad
cmc
popf
movsb
das
inc
pop
sub
push
iret
decl
pop
xchg
in
xor
add
mov
mov
mov
flds
cmp
jno
aad
call
xor
push
sahf
sub
push
mov
int3
call
or
cmpsl
xor
call
pop
enter
fwait
cmp
dec
int3
dec
mov
scas
decl
cmp
iret
mov
jo
xlat
shrl
lcall
mov
fistps
cld
mov
jmp
add
dec
mov
in
pop
sub
inc
scas
and
iret
in
cmp
mov
repnz
ljmp
lcall
test
inc
push
shlb
xchg
mov
les
ja
aaa
or
xor
jbe
xchg
jnp
in
leave
add
and
cmp
pop
sbb
mov
mov
mov
repnz
gs
lret
pop
sub
and
xchg
lcall
mov
aad
cmp
sbb
int
hlt
inc
pop
fadd
orb
jle
mov
cmc
test
sarb
or
scas
or
pushf
cmpsl
shlb
addr16
adc
stos
repnz
lcall
and
popf
push
and
inc
mov
sahf
mov
shl
mov
lock
rep
fwait
out
out
adc
push
in
mov
lcall
mov
clc
aad
adc
mov
aad
push
sbb
add
loop
push
inc
stos
and
jg
lcall
gs
in
popa
ret
cmpsb
pop
in
and
jle
cs
addl
push
adc
test
inc
jb
pop
call
xor
cmp
sub
or
repnz
push
imul
inc
push
cmp
xor
mov
les
lret
rol
xchg
jle
and
decl
scas
out
dec
dec
or
call
pop
kandnq
mov
inc
mov
mull
decl
rorl
pop
aas
aam
adc
imul
movsb
jp
or
push
adc
dec
hlt
mov
cmp
cmc
mov
adc
jmp
adc
sbb
cld
out
mov
loop
and
mov
add
movsl
and
mov
inc
cs
pop
cli
mov
or
rcll
or
sbb
fcompl
mov
adc
push
push
outsl
push
mov
push
pop
sar
out
and
fsubp
iret
les
xlat
cmc
andb
stc
xchg
mov
pop
mov
insb
xchg
jge
ljmp
jns
icebp
mov
cmp
jmp
pusha
adc
pop
jmp
add
sub
jecxz
push
fucomp
xor
aam
leave
lret
dec
mov
decl
mov
movsb
inc
ljmp
jecxz
in
in
xchg
pop
iret
jmp
mov
dec
mov
imul
and
xor
push
lcall
ret
scas
mov
ljmp
pop
gs
lods
int3
mov
sub
lods
sub
pushl
jg
inc
push
lahf
fistpl
imul
fs
je
pushl
push
lret
adc
mov
lret
xchg
ret
jl
pop
xchg
add
sahf
mov
fstpt
popa
lods
jecxz
fs
and
insl
iret
sub
aad
outsl
stos
gs
std
test
lahf
imul
cmpsb
push
add
mov
push
xchg
popa
or
repnz
jo
cmpsb
inc
pushl
addl
popf
xor
mov
ret
push
inc
push
xor
call
cmc
outsl
ds
out
repnz
dec
je
sub
in
int3
add
lret
lods
aaa
repz
aaa
std
pushl
test
mov
shlb
std
mov
cmp
decl
test
pop
cwtl
sarl
lret
std
push
push
scas
or
aas
sbb
scas
enter
and
les
cs
clc
loop
pop
jecxz
jo
test
inc
mov
and
pop
test
cli
je
mov
mov
mov
cli
jmp
xchg
imul
xchg
xchg
mov
mov
vpunpcklbw
incl
dec
sub
inc
push
mov
and
xor
sub
dec
and
mov
imul
fnstsw
or
nop
sbb
lcall
push
jge
fwait
mov
fnstcw
lret
cld
push
negb
fidivrl
push
cmp
mov
inc
lock
int3
mov
mov
fwait
push
fldenv
pop
mov
scas
xor
cwtl
sahf
push
pop
jmp
iret
ret
xchg
push
mov
dec
scas
fstl
pop
dec
sub
stc
lret
xor
roll
test
adcb
cmp
mov
test
test
das
clc
push
inc
aaa
cli
inc
movsb
test
push
mov
push
jns
xchg
dec
clc
nop
aad
mov
outsl
outsb
mov
jge
shll
cli
repz
add
mov
or
and
mov
mov
inc
mov
in
xor
mov
ss
sahf
push
xchg
das
sbbb
xor
stos
das
cld
adc
jmp
stos
sbb
pusha
test
mov
cmp
dec
test
pop
andl
jmp
dec
xor
sbb
jne
dec
popa
lcall
inc
test
fldcw
mov
decl
sub
lods
mov
shlb
jb
fcmovnb
enter
in
cli
push
dec
add
jg
decl
jns
sub
pusha
mov
cmp
or
frstor
lcall
mov
lods
out
sub
xor
imul
ljmp
addl
sbb
sbb
call
mov
jbe
mov
adc
inc
dec
lahf
xchg
inc
xchg
or
xchg
adc
push
insb
mov
adc
test
aad
sarb
inc
push
jo
loop
add
stc
push
in
lahf
pusha
les
out
xor
rcl
mov
repz
sub
jle
or
pop
mov
mov
in
and
in
int3
aaa
push
test
out
incl
inc
xchg
jmp
lcall
stos
sub
and
repnz
scas
lcall
scas
push
std
mov
dec
push
mulb
loopne
add
shlb
popf
ja
ret
jns
rcl
loopew
daa
sub
test
in
mov
lea
and
push
mov
inc
out
inc
lods
inc
adc
xchg
jmp
push
popf
and
inc
mov
call
outsb
add
cld
loop
lcall
ja
mov
jg
xor
adc
xchg
clc
stos
push
add
jne
pop
bound
jns
pop
daa
push
xchg
lock
adc
sbb
fisubs
sahf
stos
ljmp
xchg
jns
lret
jbe
out
pop
jne
jo
shll
mov
push
nop
cmp
ret
stc
pushl
and
inc
sbb
pop
iret
pusha
mov
and
je
xchg
adc
outsl
aas
jge
call
xchg
aad
std
sbb
mov
add
repz
add
test
jp
xor
cmpsb
ret
insl
add
cmpsl
sti
mov
mov
jmp
mov
jecxz
push
or
xchg
or
incl
cld
mov
cmpsb
cmp
pop
pushf
sbb
lcall
filds
adc
stos
xchg
lods
je
jne,pn
idivl
movsb
jbe
pop
setl
jae
ret
pushl
push
pop
mov
scas
pop
leave
mov
mov
es
loop
mov
cmp
pop
cmp
cmp
call
xchg
pop
add
sahf
fstps
outsl
nop
test
addl
lods
push
mov
lcall
pop
pop
das
enter
popa
jbe
and
icebp
notb
jmp
pause
ret
out
push
pop
sub
ds
hlt
mov
js
sti
mov
ljmp
or
push
adc
jo
incl
adc
js
jns
mov
xchg
insb
mov
xchg
hlt
jg
aad
dec
cli
shll
xor
add
push
fisubrl
ret
adc
mov
fidivrs
jo
xchg
jecxz
jp
and
hlt
imul
loop
fcomps
ljmp
test
jmp
fwait
jmp
shlb
xor
cmpsb
inc
dec
mov
lock
outsl
push
incl
mov
pop
inc
stos
aas
sub
push
mov
call
fists
sahf
mov
jae
fs
aad
loop
xlat
push
push
in
sub
jecxz
call
ja
or
sub
loop
je
cltd
stc
add
test
inc
mov
mov
in
push
push
push
jge
lods
inc
dec
pop
xchg
gs
sub
or
call
mov
add
cmp
cld
inc
mov
leave
fdivr
jg
mov
fadds
push
out
lods
sub
jg
lods
pop
dec
and
les
ljmp
fucom
nop
sbb
mov
adc
jno
or
ljmp
push
out
incl
or
or
cmpsb
push
adc
push
lds
mov
call
mov
cmp
mov
sbb
insl
xor
jg
cmc
jmp
fs
pushl
pop
mov
adc
push
jb
sub
push
adc
mov
push
test
enter
ficoml
jae
shr
xor
fs
mov
negb
mov
jmp
push
and
sub
add
cmp
fwait
pop
dec
cmp
pusha
movsb
pop
pop
dec
inc
loopne
in
inc
xchg
mov
ljmp
add
jl
popf
addl
cmpsl
xchg
and
mov
jnp
mov
fisubrs
push
xor
cmp
cmp
aaa
sti
adc
push
aas
push
stos
pushl
scas
stos
int3
push
cmp
movsb
or
cld
jge
xchg
loop
cmpsl
in
mov
call
fstl
sub
push
xor
xchg
stc
xor
pop
push
jb
or
jg
addr16
movsb
imul
jo
fidivs
sbbl
jle
daa
xor
fnstcw
adc
inc
popf
lcall
push
jg
fistps
pushf
mov
push
mov
popa
inc
jg
xorb
les
push
mov
ljmp
xchg
lods
push
sbb
neg
mov
pushf
dec
jno
loop
lcall
fdivrl
cmp
mov
push
out
cmp
xchg
dec
nop
jae
dec
pop
les
lret
add
popf
cmp
fisubrl
out
insb
xchg
jb
jg
sarb
jnp
ret
adc
aaa
push
dec
lea
int
adc
mov
jmp
cs
outsb
ljmp
nop
icebp
dec
dec
test
pusha
inc
lock
sar
popf
popf
test
mov
xchg
leave
mulb
icebp
int
mov
mov
pop
dec
xor
rorl
xor
sti
test
lret
or
hlt
sbb
lret
xchg
in
mov
mov
daa
jae
call
mov
mov
jmp
cmp
inc
add
std
fsubs
hlt
inc
and
ljmp
xor
mulb
pop
add
aad
and
dec
aas
push
fcom
call
aaa
icebp
lea
push
clc
mov
jmp
xchg
sub
dec
mov
call
inc
cmp
and
cmp
sbb
mov
hlt
gs
inc
jg
push
sub
mov
adc
insb
dec
cltd
sbb
mov
jmp
loope
js
and
dec
inc
rclb
ss
inc
out
sbb
mov
popf
inc
in
jp
and
ds
inc
in
clc
inc
pop
inc
mov
stos
in
testb
cmp
jl
inc
mov
test
dec
test
jp
and
push
aaa
dec
mov
mov
mov
sbb
js
mov
jg
bound
pop
inc
into
hlt
jbe
test
data16
mov
jb
pushf
add
andb
jle
cmp
movsb
into
xchg
jmp
xchg
testl
decl
and
std
jae
mov
shl
mov
out
jmp
ficompl
sub
cld
incl
mov
fdivl
or
fdivs
sti
dec
pushl
xchg
insl
jg
mov
repnz
cmp
or
cmpsb
push
cmp
addr16
jg
lcall
xchg
jns
jle
insl
cwtl
push
xchg
pusha
xlat
shrl
test
pushl
mov
aas
and
fsubrl
push
sub
sub
out
pop
cwtl
icebp
bound
loope
movsl
add
jmp
enter
xor
fwait
adc
popf
push
dec
inc
hlt
shl
dec
lock
push
mov
out
pop
dec
push
mov
adc
push
mov
dec
mov
jg
jno
dec
mov
hlt
negl
fisttps
in
cmp
xor
rep
mov
xchg
decl
cli
cld
push
out
notb
popa
push
push
std
add
sub
xchg
inc
mov
mov
loope
jmp
out
mov
add
push
frstor
xor
mov
jmp
test
pop
sub
sbb
mov
lret
repz
push
mov
stos
fstpt
jo
push
pop
sti
dec
push
into
mov
shll
hlt
cmp
fdivrl
sahf
sahf
push
imul
scas
pop
xor
mov
xorl
add
push
test
cmp
sar
lcall
mov
jno
push
scas
mov
jo
pop
cmpsl
sar
mov
mov
mov
setnp
dec
adc
fs
inc
sub
xchg
repz
inc
xlat
movsl
jmp
in
or
jne
add
or
inc
mov
mov
mov
ret
pop
dec
add
cmp
dec
aam
xchg
out
ljmp
dec
fisttpl
mov
push
sarl
loop
sbb
arpl
jecxz
loop
ljmp
rclb
sub
repz
outsb
fs
sub
mov
mov
pop
and
in
cli
and
xor
dec
ja
faddl
sbb
pop
pop
mov
mov
sbb
ss
insl
cltd
mov
mov
mov
std
call
fldt
sahf
stos
xor
push
dec
lcall
cmp
in
xchg
inc
dec
mov
push
inc
std
lods
jp
and
fsin
aaa
mov
inc
stos
sahf
loop
popa
rolb
adc
rclb
cld
ljmp
pop
gs
jp
fadd
arpl
push
std
movb
in
ljmp
add
sub
jo
cmp
scas
pop
fmull
jmp
and
stc
or
leave
je
and
mov
movsl
popf
jnp
jnp
scas
xchg
shrb
scas
pop
jp
std
dec
cmp
inc
xchg
mov
pop
inc
lods
int
imul
sbb
dec
inc
leave
ljmp
pusha
arpl
aad
inc
ret
push
loope
loop
mov
pop
xchg
xchg
enter
push
andb
loope
ljmp
scas
repnz
test
into
out
xlat
mov
inc
scas
cmpsl
hlt
or
lcall
add
and
xchg
sub
xchg
bound
dec
sbb
dec
add
jno
repnz
lret
xchg
mov
cmpsl
mov
sbb
or
pushl
mov
daa
adc
jl
and
xchg
dec
fwait
xor
ljmp
stos
insb
cs
cmpsb
pop
shll
lds
mov
pop
and
mov
jmp
arpl
jmp
push
outsl
cld
push
adc
mov
scas
nop
mov
pop
pop
hlt
insb
incl
pop
scas
pop
mov
nop
das
cmpsb
mov
popa
cmp
clc
daa
cmp
cmpsb
cmp
fdivrp
mov
push
cld
decl
pop
or
add
sahf
cs
xor
xchg
cmp
cli
cltd
idiv
out
cli
clc
sub
fcoms
bound
mov
dec
repz
ror
in
popa
xchg
adc
adc
mov
dec
out
sub
in
outsl
jno
xchg
call
adc
ljmp
mov
cmp
ds
test
fxch
jg
sahf
ret
adc
cmp
dec
movl
pushf
pop
rcr
push
xor
cmp
pop
sar
push
and
scas
movsb
xchg
lds
push
cli
xchg
adcl
loopne
mov
std
sub
lret
mov
fnstsw
test
add
shll
ljmp
and
adc
mov
mov
adc
mov
lock
add
dec
add
or
icebp
sub
stc
sub
inc
or
jg
insb
gs
insb
xchg
mov
xor
xchg
inc
cmpsb
mov
andb
clc
or
mov
xor
stc
fcomp
scas
std
add
xchg
inc
rcrl
rol
jne
pop
push
pop
ret
cli
mov
les
ljmp
mov
pop
xchg
fldt
xchg
stos
test
loop
imull
xchg
mov
movsb
add
incl
jmp
imul
cmp
scas
add
call
roll
xchg
pushl
push
orl
lahf
cmp
push
dec
out
ja
pop
int3
push
or
jle
fmulp
jo
and
in
push
mov
pusha
add
ja
inc
dec
dec
clc
push
insb
push
xor
test
fcmovbe
loopne
cmp
cmc
aad
lahf
fcomip
jl
movsl
or
test
jle
pop
adc
mov
leave
xor
call
dec
push
mov
jbe
mov
xor
mov
sub
decl
sahf
stc
mov
jg
popf
in
data16
and
mov
mov
cli
outsl
loopne
sbb
sahf
jl
jae
test
jp
add
mov
ljmp
sub
cmp
mov
sbb
fisubs
hlt
scas
call
xchg
push
ja
pop
add
cmp
stos
stc
mov
mov
xlat
scas
sbb
mov
lcall
sub
adc
filds
imull
xchg
push
cltd
shll
cld
jno
mov
mov
nop
lret
pop
mov
xor
or
xchg
fisubrs
push
repnz
lcall
and
inc
dec
fsubs
in
push
sub
addr16
in
mov
cmp
lcall
lea
je
repnz
push
loopne
ret
and
test
mov
shrl
lock
icebp
fs
fcmovu
xchg
fsubr
add
mov
or
repnz
notb
test
in
xchg
and
ret
jmp
sub
jp
push
xchg
lcall
pop
cmp
adc
jne
adc
shr
je
or
movsl
cmc
in
pop
lea
sbb
rorl
lods
jbe
and
pop
stos
mov
loop
pushl
mov
jl
mov
xchg
push
fdivl
and
xor
xchg
jo
adc
mov
out
int3
sbb
inc
ja
mov
das
mov
add
and
xor
push
fstp
mov
inc
dec
push
sub
lcall
dec
test
sub
ja
pop
dec
add
cltd
or
mov
jne
sbb
sbb
jmp
mov
mov
cltd
dec
mov
cmpsl
call
adc
mov
jg
decl
jp
mov
ljmp
or
lret
dec
adc
clc
call
dec
sbb
inc
cmp
push
inc
pop
pushf
and
dec
jmp
cmpsl
add
sbb
dec
imul
mov
pop
aas
shl
ljmp
jmp
imul
std
std
lods
dec
sar
dec
jle
inc
or
into
xchg
fcomip
mov
fisubrl
arpl
push
and
cli
sbb
adc
mov
mov
cmp
xchg
imul
in
jns
jle
pop
fcmove
sbb
push
mov
out
cmc
decl
xchg
pop
mov
xor
cmp
out
jmp
cld
lcall
cmp
sbb
es
sub
out
mov
sub
outsl
jmp
popa
adc
stos
xor
pop
sbb
fwait
jns
mov
cld
or
pop
mov
scas
clc
decl
cmc
xchg
pop
call
inc
lcall
jnp
jl
adc
das
clc
decl
int
cltd
fildll
xor
in
or
ljmp
arpl
sbb
cmc
ljmp
add
xchg
arpl
cmp
into
mov
dec
sub
iret
test
pop
fdiv
fmuls
ds
xor
pop
jae
pop
mov
inc
loope
mov
int3
stos
xlat
aas
inc
push
add
jo
pop
pop
mov
ljmp
push
push
clc
pop
pop
add
mov
xchg
cmpsb
scas
movsb
stos
fidivrl
ds
in
lcall
incl
jns
mov
or
or
jno
iret
frstor
push
subl
decl
mov
inc
ljmp
leave
ror
imul
pop
mov
adc
sub
out
lods
sbb
in
mov
sar
pushl
jge
pop
fstpl
adc
testb
sbb
push
xor
jbe
pop
mov
lods
adc
cwtl
push
aad
aad
ret
mov
or
ret
arpl
xchg
mov
pop
push
orl
adc
mov
scas
and
incl
mov
and
enter
daa
cli
lcall
pushl
lock
scas
fstpl
iret
mov
push
inc
rorl
fwait
gs
inc
fdivrp
sbb
subl
xchg
lcall
jg
aad
adc
aam
sbbl
out
mov
mov
lea
jle
rclb
mov
and
fcomp
pop
push
cmpsl
cmp
cltd
stos
mov
adc
into
push
push
ss
je
jl
cmp
push
adcl
jp
gs
push
and
out
and
jle
stos
fadd
pusha
mov
lret
pop
lock
clc
mov
adc
adc
stos
sbb
adc
jae
cmp
test
mov
stos
inc
mov
cmpb
cmp
rol
out
sub
push
push
or
ljmp
int
out
clc
sbb
test
sti
in
adc
and
loop
shll
push
adc
std
xor
sub
enter
lcall
sbb
frstor
hlt
or
sbb
and
adc
decl
push
sbb
jb
pop
xchg
mov
out
push
shl
lcall
test
sti
scas
xchg
dec
cmp
sub
cmpsb
sbb
lahf
jg
sbb
lock
dec
inc
jbe
xchg
cmp
add
jb
das
aaa
icebp
mov
cld
int
or
dec
lcall
mov
sbb
enter
adc
cmovae
jns
jb
xor
rclb
xor
sbb
dec
mov
or
cmp
dec
cmp
mov
das
jg
loop
fisubs
mov
sarb
mov
jle
int
fabs
mov
dec
jge
or
jmp
jno
xor
loop
ret
add
ljmp
scas
cltd
push
in
pop
mov
or
mov
add
xchg
push
cmp
adc
call
mov
pop
jnp
or
nop
cmc
test
repnz
push
cmp
sti
in
ret
sti
cmpsl
add
stos
cmp
rolb
xor
out
loopne
adc
lods
pop
sub
shlb
push
adc
inc
sub
and
rorl
aas
fmulp
adcl
pop
lcall
jmp
out
cltd
data16
imul
and
repz
in
test
cmp
pop
shrl
call
pop
addl
pusha
cmp
xchg
stos
call
cmpsb
inc
addl
cld
clc
jp
lret
rcrb
mov
or
shl
mov
lcall
add
mov
mov
outsb
and
or
sahf
add
loope
inc
stos
inc
xchg
rcll
dec
es
xchg
ds
pop
lock
push
mov
out
sbb
adc
pop
xlat
pop
and
sub
sbb
dec
out
dec
mov
je
in
rorb
mov
push
in
cli
cmpsl
or
cmpsl
out
out
mov
decl
xchg
xchg
cmp
and
lahf
inc
out
sbb
cmp
jg
sub
xchg
xchg
cmp
sbb
and
dec
out
testb
call
xchg
clc
xchg
scas
loop
jne
popf
and
add
push
fsub
cltd
adcl
shrl
daa
adc
mov
into
sbb
mov
push
ds
jo
sub
mov
add
fs
jg
inc
inc
es
mov
inc
mov
inc
ret
push
movsb
mov
divl
dec
enter
sub
lods
fimull
xchg
bound
ret
in
nop
leave
icebp
add
daa
andb
pop
lcall
xchg
pop
xchg
push
rcll
rcrl
mov
mov
sbb
lcall
cmpsb
ret
mov
push
and
fldl
fdivrl
pusha
mov
and
frstor
sub
mov
lret
push
sbb
sbb
divl
add
cmp
decl
les
out
mov
adc
addb
add
hlt
adc
cmp
punpcklwd
mov
das
clc
inc
mov
loop
dec
sbb
sbb
pusha
int3
out
pop
imul
call
pusha
push
ja
jmp
psrlq
in
xchg
or
adcl
jl
and
lcall
popl
jg
lds
in
int3
mov
pop
lcall
xor
mov
imul
cmp
mov
ret
in
cmp
sub
loop
decl
ss
dec
jle
pop
add
mov
das
les
jae
jmp
inc
jae
fcmovbe
stos
pop
sahf
sbbb
xchg
push
pop
ljmp
mov
cmp
fiaddl
lods
popa
jmp
js
loope
mov
add
loop
mov
xor
call
ret
push
or
loop
dec
mov
or
fisubl
bound
movl
pushl
mov
add
in
add
popl
flds
mov
and
inc
mov
imul
lret
pop
incl
push
jb
pop
idiv
js
lock
icebp
dec
mov
stos
mov
daa
xor
fldl
and
mov
shlb
cmp
fprem1
inc
or
fisubs
jmp
ret
inc
pop
or
imul
push
fs
mov
out
icebp
lcall
stc
jne
xchg
test
rcl
shlb
or
push
xchg
negl
sub
daa
fstpl
data16
add
xchg
lcall
mov
das
aad
cld
xor
inc
pusha
mov
cmpsb
dec
fwait
in
inc
incl
mov
ljmp
xchg
mov
and
cld
push
cmpsl
rcrl
int
dec
cli
pushl
cmpsl
mov
cmpsl
pushf
jle
jle
mov
cmp
mov
dec
mov
out
stos
sub
lahf
mov
inc
and
mov
loope
scas
push
jle
dec
movsb
dec
mov
sar
ljmp
mov
jmp
jmp
inc
push
and
pushl
mov
into
int3
rclb
rcll
push
test
mov
decl
fwait
or
dec
cmp
xor
jmp
lret
jle
dec
pop
xchg
sti
cmp
inc
add
xchg
push
mov
arpl
xchg
inc
and
mov
push
dec
cltd
enter
and
pushl
int3
jae
xchg
push
mov
outsl
aas
adc
inc
dec
mull
sub
clc
xchg
adc
or
decl
xchg
cmpsb
repnz
cli
cmp
incb
lods
mov
inc
mov
xor
test
jno
push
jb
cmpb
xchg
ret
lcall
xlat
out
add
arpl
fsub
jmp
fcmovnu
mov
cmp
imul
mov
clc
lcall
add
das
sbb
adc
jns
jns
sub
lea
scas
mov
scas
pop
and
mov
sti
add
and
mov
mov
xchg
mov
jae
xor
call
or
clc
cmpsb
outsl
pusha
ljmp
jne
enter
sti
ja
das
xor
and
and
scas
inc
jp
jl
lock
decl
cli
push
push
aam
jb
imul
std
sbb
mov
fs
outsb
and
incl
push
jge
out
or
mov
test
jp
and
enter
cmp
incl
xor
ds
imul
xor
dec
faddl
test
shrl
in
call
nop
data16
adc
sub
in
sbb
popa
sbb
cmp
decl
lock
icebp
cmp
ss
cmpb
cld
jmp
ja
dec
out
fildll
xor
imul
scas
xchg
push
sbb
sub
ret
test
pop
mov
roll
mov
jmp
cmp
jae
arpl
mov
mov
sarl
es
jg
repz
push
inc
cmp
add
cmp
jae
pop
cmp
mov
jo
sbb
push
mov
mov
jbe
movsl
test
ficoms
xor
iret
out
mov
inc
dec
xchg
aaa
test
xchg
iret
mov
mov
jae
inc
jo
sar
incl
lods
inc
js
in
sahf
shr
cs
pop
xchg
fsubrl
mov
pop
dec
rcrl
dec
shlb
mov
movsl
lds
out
inc
pop
outsl
stos
addb
sbb
imul
pushl
aaa
arpl
jbe
mov
dec
mov
popf
in
jg
add
ljmp
std
or
push
js
add
ret
mov
cli
sbb
lahf
shlb
dec
xchg
jmp
xchg
mov
mov
out
xchg
xchg
dec
sbb
mov
pushl
pop
addr16
insb
push
cwtl
fcmovnb
loope
loopne
ret
out
pop
and
cmc
mov
or
inc
loop
sub
pusha
in
adc
or
out
sar
add
mov
ffreep
pop
add
mov
fs
or
pop
mov
shlb
and
xor
sahf
mov
xchg
mov
popf
pop
inc
mov
cs
sbb
je
jl
lods
adc
jg
jne
sbb
jp
push
lret
arpl
jle
dec
sbb
mov
pop
push
test
je
sti
ret
insl
mov
decl
shlb
mov
jecxz
sbb
add
into
mov
add
mov
loop
lret
jge
pop
les
pop
jmp
lret
fs
dec
and
call
loopne
adc
or
popa
fcomps
je
lcall
adc
xchg
dec
fwait
popf
cltd
outsl
cmc
daa
dec
xor
xor
adc
mov
mov
or
inc
push
stos
cmc
stc
shl
enter
push
mov
cmpsb
clc
inc
sbb
push
mov
clc
mov
pop
mov
adc
ja
iret
orl
es
sub
sbb
ljmp
adcl
in
scas
test
dec
fldenv
lret
jb
mov
imul
clc
sub
inc
shrl
popa
dec
cmp
jno
xchg
xor
das
push
fisubrs
cmp
pop
inc
xchg
push
es
and
ljmp
imul
decl
cmp
cmpsb
adc
sti
add
in
mov
cltd
mov
push
ljmp
jo
push
xchg
addr16
push
outsb
pop
data16
mov
mov
call
movsl
cmp
inc
cmp
ss
in
add
mov
lahf
or
lcall
sbb
jl
aaa
sub
cmp
subl
cmp
jle
shrl
or
mov
cmp
ljmp
and
data16
pop
dec
daa
push
mov
cmpsl
cli
outsb
loopne
enter
in
jg
call
adc
xchg
mov
push
lea
adc
jp
lods
jg
lcall
add
mov
xlat
aas
sub
pop
pusha
mov
ret
mov
incl
int3
in
cmc
push
jmp
xchg
lods
pop
xorl
or
fldcw
mov
cmp
das
sub
push
fcoml
mov
fildl
out
pop
sub
push
stos
and
pop
js
sub
in
mov
mov
jmp
out
icebp
imul
pop
aaa
xor
nop
imul
imul
xor
lcall
mov
push
adc
in
xlat
push
mov
cmp
mov
push
jmp
fisubrs
xchg
fldt
scas
mov
or
ret
dec
push
test
popfw
in
int
clc
sbb
dec
mov
mov
adc
xor
ss
enter
mov
incl
inc
stos
loop
loop
cld
mov
xchg
notb
and
ljmp
and
ja
mov
push
out
adc
xor
xchg
scas
cld
in
add
mov
decl
jns
add
subb
xor
mov
stc
jg
push
test
pop
jno
jge
mov
jp
hlt
mov
shll
int3
xchg
ljmp
pop
and
xstore-rng
insb
fisubl
lea
rcrb
hlt
jg
call
faddl
aam
nop
sub
jne
fiaddl
ss
xor
lret
xor
scas
inc
mov
js
insb
fsubrl
dec
stc
insb
sarb
decl
xchg
dec
dec
mov
int
and
xor
and
outsb
cli
popa
pushf
or
mov
lds
push
int3
fsub
fildll
lret
jmp
stos
add
incl
push
sub
aad
test
mov
xchg
jae
adc
lahf
cs
lret
das
push
cmp
clc
lods
sub
jo
mov
mov
dec
pop
push
sbb
mov
in
div
test
call
fucomp
jns
sbb
cwtl
cmp
in
or
and
das
test
std
mov
test
mov
hlt
fmul
jg
mov
inc
mov
movsb
fs
jb
mov
mov
movsl
ds
lcall
insl
sub
ja
pop
sbb
cmp
mov
dec
arpl
mov
jg
dec
cmp
jecxz
inc
dec
xor
inc
add
add
jg
lret
dec
imul
in
cmp
addl
jmp
lds
sub
iret
xchg
repnz
cmp
cmpb
or
jle
xor
mov
adc
mov
lods
movsl
lock
aad
ljmp
dec
jecxz
sti
gs
adc
and
insl
add
jecxz
fadd
cmp
into
sub
scas
clc
call
leave
xchg
jp
xchg
mov
into
movsb
fnstenv
sti
out
mov
ljmp
popa
aam
sub
lret
cltd
cmp
icebp
stos
cld
push
leave
or
mov
and
out
push
sub
jecxz
mov
ja
out
xlat
ljmp
or
decl
repz
xchg
push
dec
hlt
mov
jo
in
decl
loope
dec
dec
pop
mov
inc
jl
push
xchg
fstp
out
xchg
ds
outsb
jecxz
in
cmpsl
movsl
jg
ljmp
sub
xor
loop
pop
out
nop
cld
cmpsl
or
xchg
cli
jmp
ss
fadds
pop
jae
out
lret
sub
sub
mov
sub
dec
push
dec
jmp
jne
mov
push
cmp
fistps
shrb
iret
push
daa
jmp
xlat
jmp
repnz
es
lds
jge
and
push
jmp
imul
movsb
pop
fucomip
out
inc
mov
jne
sbb
or
xchg
push
inc
fcomip
jmp
fildl
mov
cmp
mov
les
jmp
test
test
repnz
cmp
sbb
and
jo
pop
mov
jg
push
loopne
js
xor
inc
pop
jmp
gs
or
in
adcb
and
pop
decl
rcl
leave
inc
jo,pn
scas
inc
jb
test
cltd
lahf
sahf
in
ror
and
jg
and
or
shlb
adc
ret
dec
test
imul
jge
and
pusha
sub
mov
xor
mov
and
out
sbb
call
in
cli
push
mov
stos
rcr
jno
mov
rclb
add
jns
xchg
ja
inc
cmpl
iret
rep
jns
rcr
cltd
insb
inc
dec
out
add
cmp
aas
lods
es
dec
nop
int
mov
out
xor
add
std
push
xchg
dec
mov
ljmp
add
xor
ljmp
adcl
call
xchg
mov
add
iret
jl
xor
fcompl
jmp
popa
clc
in
xor
ljmp
push
loop
add
jmp
or
int3
mov
rcrl
sti
addb
dec
jb
fcmovnbe
cmpsb
jb
iret
test
xchg
popf
gs
aas
add
fs
jmp
mov
mov
hlt
rcrl
mov
out
enter
je
lret
test
lcall
jle
and
shlb
nop
mov
adc
lods
testb
pusha
lcall
xchg
shl
mov
mov
test
mov
mov
xchg
jo
push
in
sbb
lcall
loop
test
cltd
xchg
lods
mov
cmpsl
pop
and
sbb
dec
or
lock
clc
ljmp
fwait
sbbb
cmp
out
loopne
dec
inc
or
and
jg
incl
pop
push
jne
pop
jns
jne
lods
enter
or
add
lock
add
cmp
cs
scas
in
movsl
mov
shlb
call
mov
cmp
loope
test
sbb
mov
push
pop
mov
inc
decl
push
inc
mov
jl
sbb
xchg
js
subb
pop
bswap
pop
xchg
popa
or
incl
daa
inc
ja
mov
sbb
js
xchg
mov
rcl
push
cmc
fdivrl
icebp
mov
or
mov
ja
hlt
xchg
movsb
inc
jg
pop
adc
sbb
rcl
fidivl
push
test
xlat
jae
pushl
aas
call
cmpsb
out
daa
jb
repnz
movsl
push
mov
cltd
mov
fists
jmp
lahf
or
loop
or
sub
addr16
mov
loop
dec
mov
ficompl
addr16
pop
lret
add
lock
xor
int
push
pop
mul
jnp
lds
sbb
xor
out
sbb
pop
jmp
loopne
dec
aas
dec
in
jecxz
cmpsb
hlt
cwtl
mov
fimull
cmp
movzwl
ud0
ljmp
adc
mov
jbe
push
inc
sbb
adc
mov
jae
adc
roll
decl
and
mov
sub
mov
push
jbe
pop
push
sti
fwait
jo
testl
xor
xor
in
pop
add
jnp
and
xchg
mov
mov
dec
fnstcw
cmp
pushl
adc
inc
sub
repz
xlat
mov
stc
fistl
and
jge
jecxz
lods
incl
jne
int3
push
mov
lret
sbb
in
test
cld
or
jmp
decl
adc
pop
jo
pop
jae
test
mov
pop
shll
mov
pop
cmpl
es
add
sub
sbb
sub
movsl
mov
dec
ret
xchg
cmp
call
mov
loope
xchg
jl
pop
jnp
jmp
lahf
sbb
inc
push
leave
jmp
pushl
int3
bound
rorl
iret
and
int
out
lods
mov
sub
jge
pop
outsb
decl
xor
inc
sub
add
loop
out
xor
leave
pop
fidivrs
in
adc
pop
mov
das
sub
insb
movsl
mov
mov
sahf
adc
pusha
outsl
fbstp
popa
or
mov
mov
or
mov
test
decb
lock
xor
inc
sarb
ss
incl
dec
push
aas
jp
aam
scas
pop
push
incb
mov
movl
decl
adc
jns
xor
ss
push
sahf
lcall
sub
cld
fldlg2
xor
jg
sub
jo
dec
ljmp
push
jnp
inc
and
jl
or
fbstp
ret
loope
in
sbb
push
xor
xchg
cmp
cld
decl
ret
jae
sbb
sbbb
pop
push
push
js
js
sub
pop
mov
lock
lret
mov
arpl
adc
lds
lret
or
add
incl
inc
call
adc
jle
mov
xchg
dec
mov
incl
push
es
pop
insb
dec
arpl
dec
mov
call
pop
or
call
jecxz
out
addr16
xor
gs
iret
pushf
pop
lret
jmp
jmp
call
sbb
jbe
sub
cmc
dec
lods
mov
hlt
addl
cmp
jmp
nop
into
cmp
mov
jg
xor
daa
mov
stc
dec
mov
roll
repnz
idivb
jb
pop
call
sub
int3
lods
jae
loopne
outsl
jbe
mov
mov
aam
ljmp
mov
std
loop
out
mov
dec
ja
pusha
pop
stos
in
mov
jnp
test
ds
pushl
mov
andl
push
mov
repnz
xchg
in
or
stc
sbb
mov
inc
mov
fcmovnbe
and
mov
jo
mov
push
xchg
add
cltd
out
stos
arpl
dec
push
out
int
xchg
imul
incl
ss
outsb
loope
mov
fnstcw
cmp
in
mov
dec
or
push
cmp
in
loope
adcb
xchg
in
mov
test
push
xchg
test
and
mov
leave
cmp
or
push
sbbl
ljmp
jle
and
mov
das
daa
mov
test
test
xor
lcall
fadds
or
xchg
xchg
and
aam
adc
fisttpl
stos
js
mov
ret
xlat
xor
inc
aas
fwait
sbb
stos
das
push
dec
dec
lods
add
pop
sbbb
sub
xor
out
cltd
pop
std
lods
adcl
decl
mov
into
test
dec
cwtl
insl
xor
lock
fbstp
hlt
cmp
or
ror
push
sub
jg
add
inc
outsl
mov
ljmp
call
test
ss
sbb
pop
stos
push
insb
and
pop
sub
mov
dec
dec
lock
test
dec
sbbb
lea
xchg
mov
call
iret
lret
push
scas
outsb
xor
idivb
cmp
pop
dec
xor
movl
ljmp
xlat
dec
cwtl
xorb
int3
out
push
mov
jl
cmp
cmc
jns
xlat
mov
aas
xchg
push
out
dec
lods
stos
mov
lock
push
push
xlat
insl
push
sub
ds
loop
mov
xor
call
xor
mov
loopne
lret
sub
jnp
xor
mov
out
clc
or
jmp
lds
push
inc
fistps
push
pusha
bnd
mov
sub
pushl
jo
push
adcb
clc
pusha
jae
push
jl
and
push
cli
loop
test
pop
loope
inc
add
sbb
ljmp
nop
js
popf
mov
xor
mov
ljmp
adc
insl
ljmp
aaa
or
lret
rclb
fists
hlt
pop
pop
test
pushl
push
mov
push
je
mov
cmp
fwait
pop
xor
cli
decl
rep
aad
rorl
lods
nop
mov
repz
arpl
cmc
jo
adc
imul
mov
lahf
pushf
test
and
enter
xor
ret
and
sub
mov
add
or
in
push
mov
adc
or
ljmp
jl
fst
mov
mov
repz
pop
ret
mov
popl
lcall
jecxz
jb
ds
adc
pop
shll
adc
jp
cmp
je
dec
mov
decl
divl
icebp
fcom
xchg
test
mov
add
sbb
dec
imul
inc
pop
decl
and
mov
jle
decl
cmp
enter
push
jns
dec
roll
jle
or
data16
call
popf
mov
inc
xor
repnz
mov
jo
lret
repz
lds
and
jg
pop
push
in
notl
sub
or
ret
cmp
icebp
lret
test
lcall
push
lcall
test
mov
adc
f2xm1
or
sub
insb
push
push
add
incl
lock
addb
pop
xor
leave
mov
outsb
cmp
sbb
subl
sub
or
dec
fsubr
sbb
xchg
mov
stos
jg
add
rolb
scas
orb
push
mov
loope
sti
and
push
and
dec
scas
inc
xchg
push
inc
mov
call
test
incl
dec
xchg
ficoml
cmp
jne
pushf
insb
call
sti
sti
insl
xlat
sarl
xchg
mov
adc
cmp
stos
cmpl
decl
cmpsb
orl
sti
inc
inc
or
js
mov
test
mov
pushl
aam
xchg
ds
adc
lea
loope
mov
cmp
mov
incl
xorl
scas
icebp
jmp
pop
rolb
push
bts
pop
cli
dec
jl
mov
leave
hlt
sbb
fstp
std
decl
lcall
mov
jle
repnz
mov
adc
dec
jg
pushl
sbb
mov
repnz
mov
mov
pandn
incl
aaa
cmp
mov
mov
xchg
xchg
push
push
pop
into
lahf
xor
push
cmp
mov
fs
push
add
stos
inc
lods
jp
jmp
clc
xor
cmp
std
mov
int
stos
jl
pop
mov
sbb
xor
push
enter
ljmp
jecxz
adc
addr16
imul
mov
mov
scas
push
aaa
sbb
push
mov
ret
test
jle
dec
push
dec
nop
incl
and
in
push
xchg
out
repnz
sti
out
mov
and
lock
lcall
mov
inc
jb
cmpsl
mov
adc
cmc
gs
fbstp
outsl
sub
decl
out
rclb
fistpll
jb
push
in
jnp
push
sbb
fmull
ljmp
adc
pop
or
sbb
cmp
mov
mov
xchg
pop
imul
mov
dec
rcrb
pop
arpl
cld
cwtl
jno,pn
rcr
cmp
add
stos
jl
and
jmp
xchg
cltd
arpl
dec
in
mov
cld
imul
push
cld
jmp
inc
sbb
inc
pop
sbb
cwtl
jle
pop
jg
jae
sbb
test
push
mov
lret
sahf
imul
cld
std
fcompl
fcoml
cld
leave
add
mov
adc
xchg
pop
and
ret
mov
mov
clc
imul
inc
or
outsl
mov
mov
add
in
sub
je
ljmp
inc
testl
adc
and
mov
jno
ficomps
jmp
jmp
in
aas
cmpsl
push
cmp
in
stos
sarl
arpl
cwtl
dec
bound
pushf
stos
mov
cltd
mov
mov
pop
popa
lock
outsb
fimuls
or
sti
call
cmc
add
pop
dec
or
dec
inc
aas
fs
shll
mov
push
sub
xchg
xchg
mov
decl
mov
leave
push
push
mov
into
sarl
mov
fs
clc
loope
icebp
jmp
iret
mov
jb
add
dec
in
loopne
das
mov
call
sti
lods
push
aam
pop
sbb
int3
aad
pop
outsb
ret
cmp
inc
cmc
dec
cmpsb
sarl
roll
into
aaa
cmpsl
inc
data16
and
std
xchg
xchg
inc
test
mov
add
jge
or
out
cmp
std
mov
daa
cmp
decl
or
lret
sub
sarl
ljmp
mov
pop
ljmp
in
mov
in
jl
movsb
vpcomub
incl
sti
push
xor
xor
inc
mov
and
pop
cmpsl
out
mov
push
ja
pop
pushl
jns
sub
and
inc
jp
std
mov
int3
sti
jecxz
outsl
in
imul
cmp
pusha
cwtl
pop
xchg
or
out
xlat
sub
pop
inc
daa
call
int
jmp
lods
cli
arpl
xor
xchg
fbstp
sub
nop
lcall
es
sbb
jp
out
push
jle
in
and
and
fs
std
dec
shrl
in
mov
mov
adc
mov
push
cmpsl
out
fistps
call
mov
aad
push
mov
imul
mov
add
ljmp
clc
add
push
push
and
int3
inc
xchg
cwtl
daa
sbb
inc
bndstx
shrb
cmp
lods
pusha
fisttps
call
nop
pushf
xlat
inc
mov
mov
mov
sbb
das
clc
decl
gs
jle
or
loope
je
jp
or
mov
shrb
sbb
pop
sub
push
std
fidivrl
pushf
mov
and
mov
sbb
or
mov
ret
loope
sub
inc
xchg
dec
aam
incl
push
adc
fs
mov
call
lret
lea
pop
inc
cmpsl
lds
hlt
inc
cwtl
inc
sub
mov
aas
jmp
jmp
adc
and
lahf
xchg
mov
fistps
mov
dec
outsb
adc
dec
leave
jb
orb
std
gs
push
outsl
or
or
push
pop
sub
in
mov
idiv
fsubrs
and
iret
cmp
aaa
flds
loop
jg
decl
push
mov
arpl
lahf
push
loopne
rorb
movsb
mov
lcall
push
push
xchg
fmulp
shrl
mov
mov
sub
xchg
sahf
mov
jge
xor
xor
cmc
inc
fcmovu
pop
push
fnsave
push
mov
pop
jmp
aaa
lods
hlt
pmulhuw
mov
pop
push
cli
aas
mov
xor
es
jns
mov
out
loop
jecxz
mov
jo
std
imul
dec
lods
xor
jb
sar
incl
xchg
cmp
bound
xchg
mov
mov
incl
sub
in
and
sti
call
sarb
out
jl
jg
inc
imul
mov
arpl
push
fxch
inc
sti
xor
ljmp
mov
stos
int
xchg
mov
lea
dec
lret
xchg
mov
idiv
decl
and
xchg
into
lods
jno
aas
xchg
rorl
rorl
sub
push
cwtl
sbb
scas
clc
call
push
pop
cmp
out
pushf
adc
xor
push
cmc
and
and
iret
nop
aas
mov
nop
add
sti
push
pop
or
cmp
jbe
hlt
inc
adc
call
add
repnz
js
popa
aad
mov
lcall
icebp
xchg
cmp
sahf
xor
push
roll
xor
push
mov
cmp
shrb
aam
mov
xchg
mov
movsb
nop
mov
xchg
aaa
mov
clc
jmp
mov
mov
add
inc
jl
clc
inc
aam
pushl
subb
vpandn
pop
mov
hlt
dec
mov
dec
dec
adc
call
fistps
dec
jnp
pop
jp
pop
jb
xor
xchg
jne
xor
pop
movsl
mov
decl
push
mov
iret
or
into
sbb
xor
ljmp
cmp
sub
mov
lahf
popa
out
or
dec
shr
adc
xchg
cmc
pop
ja
mov
ljmp
pop
dec
jl
sub
mov
cmp
pusha
xchg
add
adc
jmp
rcrl
mov
pop
mov
data16
or
ljmp
sub
dec
scas
fwait
stc
enter
xor
aaa
movsl
imul
sbb
fdivrs
clc
mov
sub
test
or
mov
cmp
sbb
lcall
insl
mov
jle
call
in
arpl
sub
dec
push
aad
pushaw
addr16
mov
test
pushf
clc
subl
incl
repz
pushl
mov
call
adc
mov
aas
cmc
or
cmpsb
cmc
out
das
push
cmp
leave
movsb
stos
out
leave
adc
fcomip
lcall
lret
dec
pop
sub
jp
xchg
inc
xor
inc
push
mov
incl
inc
lret
push
je
push
push
in
iret
paddw
pop
pop
in
je
mov
loope
ret
es
lahf
aas
mov
pop
pushf
mull
and
inc
or
bnd
mov
jp
mov
rclb
stc
loope
test
jmp
nop
cmp
fcmovu
fidivrs
or
and
cli
add
mov
mov
sahf
lock
xchg
les
mov
out
call
and
bound
lods
or
out
push
fwait
xchg
cmp
das
es
jno
lahf
outsl
insb
and
in
ret
jmp
je
insb
add
pop
xchg
ljmp
ds
xor
xchg
inc
pop
mov
mov
cmp
xchg
rcrb
out
movsb
mov
add
inc
lea
mov
cmp
ficomps
addr16
jbe
hlt
mov
sbb
pusha
orps
pop
lods
shll
lcall
or
out
mov
xor
mov
cs
loopne
sahf
pop
rcll
mov
fdivrp
mov
ljmp
xchg
cmp
dec
add
icebp
add
inc
cwtl
fildl
cmp
pusha
icebp
jmp
test
je
mov
stos
xor
mov
mov
push
stos
lods
xchg
xchg
add
data16
dec
xchg
dec
in
mov
negl
cld
js
ljmp
add
pop
or
inc
out
xchg
cmp
pop
dec
dec
imul
incl
jge
jb
mov
jb
subb
movsl
fstpt
lds
jb
and
mov
mov
mov
push
pushf
stos
lahf
and
xor
popf
ljmp
jae
pushl
cmc
sub
int3
out
jge
dec
mov
int3
pusha
or
and
test
jmp
lea
gs
jle
mov
clc
ja
lret
dec
lods
adc
adc
das
inc
dec
cwtl
in
inc
xlat
scas
adc
dec
leave
imul
mov
enter
jg
push
dec
fsubl
xchg
mov
xchg
jp
jl
enter
pushl
enter
dec
rcrl
mov
lock
out
fstpl
mov
shrl
push
dec
and
lcall
lcall
fsts
push
dec
or
mov
mov
jg
jg
and
insb
hlt
aas
cmp
push
cmpsl
cmpsb
test
pop
bound
test
mov
cld
push
mov
call
dec
das
mov
jae
out
xor
adc
jg
sub
pop
inc
or
mov
push
sub
das
sub
aad
popf
fisttpll
xor
jecxz
add
xor
inc
push
add
jg
clc
pop
sub
sub
stc
jl
mov
loopne
pop
xor
adc
es
decl
mov
lods
sub
in
mov
and
mulb
or
das
and
incl
dec
xor
cmc
repnz
jg
fistps
fwait
or
jmp
or
xorl
arpl
xor
idiv
pushl
sbb
lcall
in
mov
sbb
scas
arpl
jp
xor
add
jmp
xchg
outsb
sahf
hlt
sbb
inc
add
xchg
incl
cmp
adc
sarb
push
adc
call
jb
jo
ret
push
push
inc
mov
and
imul
clc
mov
dec
gs
imul
dec
pop
sub
cmpsb
notb
popf
enter
cmp
outsb
jbe
adc
cmp
dec
jmp
cmp
add
sub
in
in
divps
push
int
sbb
jns
mov
or
stos
add
lcall
jnp
pop
call
into
divl
mov
mov
push
jl
lret
ja
ss
bswap
pop
jb
cmpsb
roll
clc
adc
cmp
fdivr
cmp
adc
mov
sbb
mov
mov
add
pop
push
dec
hlt
jecxz
hlt
lcall
dec
pop
sti
dec
shrb
repnz
fs
call
sub
push
sti
bound
orb
dec
mov
and
pusha
mov
add
jmp
xchg
shrb
mov
arpl
sbb
sub
decl
and
daa
push
mov
push
mov
ds
mov
pop
fadd
dec
ret
xlat
push
dec
xchg
push
add
xor
cmp
in
pop
es
jmp
testb
sti
mov
out
cmp
add
cmp
addr16
sbb
push
cltd
decl
popf
xchg
inc
stos
mov
test
mov
mov
je
jecxz
out
call
leave
test
outsl
jno
outsl
jae
repz
cmp
add
negb
lahf
or
inc
mov
outsb
ja
aaa
jge
pop
cwtl
mov
mov
stos
inc
mov
xlat
pop
and
int3
mov
iret
pop
aad
pop
mov
nop
push
jns
loopne
imul
jbe
jle
sbb
push
div
dec
in
dec
ljmp
nop
sbb
dec
jne
pop
fsubrl
outsb
mov
arpl
mov
stos
dec
ds
pop
das
cmp
xor
call
dec
imul
aas
leave
ss
xchg
sbb
sbb
mov
int3
xchg
in
mov
dec
inc
pop
in
aam
or
xchg
cmpsl
mov
add
mov
jge
jg
ror
imul
mov
mov
scas
fstps
inc
jp
pop
and
outsl
push
mov
adc
mov
cmp
xchg
hlt
xchg
popa
das
pop
ss
sahf
pop
flds
inc
adcl
into
sub
iret
icebp
mov
mov
mov
adc
lods
sbb
loopne
mov
or
mov
fidivrs
ja
adc
mov
decl
aas
mov
out
fsubl
add
fmull
movlps
jae
cmp
and
int3
adc
fmull
ljmp
rolb
push
xlat
sub
sbb
into
cmp
icebp
pop
fsubl
and
pushl
cmpsl
mov
out
xchg
std
jecxz
adc
mov
xchg
xchg
sar
lcall
dec
inc
cmc
sub
rol
stos
pop
add
in
add
push
push
cmp
xchg
dec
sti
out
lahf
insl
push
inc
adc
mov
mov
cs
cmp
mov
jl
dec
incl
repz
lret
push
sahf
jbe
add
nop
das
stos
aad
mov
outsl
bound
cmc
stos
ss
ret
mov
and
dec
xchg
mov
decl
jbe
repnz
mov
inc
outsb
jns,pn
sub
pushl
inc
or
dec
test
dec
xor
mov
clc
in
std
insl
sub
add
mov
mov
jmp
popa
sete
add
push
jp
imul
aad
clc
call
ret
push
push
cs
push
arpl
pop
pop
add
pushl
test
pop
nop
clc
test
xchg
cmp
push
mov
cmc
mov
sub
out
push
xchg
jb
dec
stos
push
mov
pop
xor
or
sub
adc
mov
mov
jae
bound
int
sti
aam
sahf
adc
dec
sub
call
mov
lea
or
in
xchg
out
mov
popf
shlb
cmc
lea
sbb
pushf
mov
mov
outsb
push
insl
repnz
stc
or
cmp
or
or
jecxz
push
loop
pop
cmp
lcall
mov
mov
push
mov
adc
adc
cld
cmp
cmc
pop
adc
cmp
cltd
pushl
sub
ds
jmp
or
shlb
in
das
push
jle
push
fistl
sub
inc
cmc
push
lds
pop
cmp
dec
and
cmpsb
out
into
pushf
jmp
in
cmc
and
dec
dec
sub
add
cmp
add
ljmp
in
add
subl
mov
ficoms
aas
sbb
lret
inc
inc
and
or
xchg
push
icebp
es
repnz
xchg
inc
xchg
loop
mov
daa
xchg
cmp
lcall
dec
out
outsl
insb
subl
xchg
cmp
inc
sbb
jbe
pop
push
loop
ljmp
sub
add
std
outsb
incl
repnz
xchg
movsb
jbe
mov
jo
mov
loope
js
fiadds
xor
ret
ljmp
insl
mov
into
and
fcoml
cmp
push
mov
callw
fisubrl
incl
lods
or
inc
iret
jne
lahf
ret
lcall
cmpsl
sbb
push
imul
fcomip
fucomip
addr16
pop
inc
dec
xchg
mov
ja
sub
out
fwait
ljmp
pushl
fadds
dec
mov
loopne
inc
nop
roll
push
push
xor
lods
mov
pushl
in
jb
mov
scas
adc
lret
or
sbb
daa
and
jo
or
add
call
pop
js
inc
rcr
jne
ds
or
dec
sbb
popa
fprem
xchg
outsl
decl
call
cmp
js
sbb
out
outsb
adc
shrb
jmp
lret
in
lods
mov
std
sub
or
jle
call
sbb
in
call
subb
inc
or
jle
or
adc
imulb
and
cmp
mov
insl
mov
in
xchg
lcall
push
out
push
js
push
daa
dec
sahf
dec
pop
jge
and
push
inc
insl
xchg
xchg
ljmp
fs
inc
nop
lret
int
sub
mov
jne
icebp
pop
or
mov
jecxz
mov
adc
js
adc
push
pop
mov
outsb
in
int
scas
push
sbb
push
fmull
cmc
andb
mov
lahf
test
jne
xchg
test
lcall
sub
mov
sub
push
push
mov
imul
lret
pop
mov
mov
jmp
cmp
icebp
xor
neg
cmpsl
push
shll
aaa
xor
ljmp
xor
test
or
xor
call
mov
add
inc
inc
mov
insl
sahf
enter
adc
call
jp
jbe
jns
int3
js
pop
insl
jb
fisubl
jmp
xchg
add
jg
sub
mov
subl
mov
or
dec
aas
pop
add
push
decl
aas
jo
cwtl
xor
cwtl
insb
inc
rcrl
add
mov
icebp
sub
sahf
xchg
adc
rol
lock
stc
or
sbb
push
lea
xor
in
es
lock
js
adc
pop
mov
stos
cmp
mov
inc
jnp
mov
insl
lcall
cmp
jns
jge
cmova
mov
xchg
or
test
sahf
jno
fdivr
ljmp
into
pushf
xchg
inc
testb
mov
fisttpl
cli
loope
adc
push
mov
push
pop
jmp
loope
incl
pop
rcll
xchg
pop
inc
fadds
pop
xor
dec
mov
loope
cmp
loopne
mov
inc
sub
cmc
fcoms
cwtl
add
clc
pop
sti
int
sub
setae
pop
sar
aaa
outsl
insl
lcall
or
mov
mov
xor
dec
imul
cmp
and
ja
outsl
clc
call
sbb
fs
lock
mov
mov
pushf
icebp
jecxz
add
scas
cmp
jmp
pop
mov
fwait
jecxz
sub
mov
sub
movsl
jp
mov
pop
dec
or
incl
jmp
jnp
adc
adc
mov
mov
inc
inc
icebp
mov
sub
mov
popa
lock
cli
in
xchg
xchg
cmp
insl
jo
lcall
rol
xor
sub
mov
adc
cmc
mov
movsl
jg
cmc
std
sub
jp
cmp
fldl
inc
addr16
enter
clc
mov
jb
add
inc
jo
sbb
ljmp
mov
add
xchg
popf
mov
mov
int3
cmpsl
imul
test
pushl
xchg
mov
xor
test
or
not
int3
loope
push
and
push
imul
fstl
in
cmc
sbb
lcall
aad
push
add
push
add
jmp
jno
or
test
imul
mov
lcall
std
dec
or
push
add
jno
pop
adc
cmp
decl
push
add
cmp
mov
cmp
ja
sub
push
pop
dec
mov
mov
aas
pop
es
pop
sbb
lods
in
sbb
mov
pushl
adc
sbb
icebp
or
test
and
or
dec
bound
pop
nop
in
or
scas
call
repz
roll
cmpsl
fsub
jno
aam
stos
mov
scas
jmp
or
stc
testl
aad
daa
mov
mov
and
fistl
xlat
and
xchg
int
mov
fisubrl
ret
pop
add
cmp
fdivp
sub
adc
adc
call
cld
mov
shll
sarb
imul
std
testb
mov
jnp
das
lods
filds
cmc
inc
dec
pop
stos
jb
lea
sar
call
pop
sub
adc
imul
pop
pop
or
and
inc
aad
and
das
cli
sti
in
ja
ss
aas
aad
hlt
sbb
lcall
stos
push
inc
int3
sti
cs
and
add
mov
ljmp
insl
repnz
mov
les
push
xorl
iret
push
add
xor
pop
sarb
xlat
dec
pushl
std
adc
rcl
xchg
out
jo
inc
xchg
xchg
aad
data16
xor
lcall
lret
bound
sub
ja
popa
xor
adc
jp
subb
ljmp
call
mov
cmp
test
jmp
sbb
xor
aam
stc
pop
sahf
lea
lret
les
loopne
and
daa
push
jg
decl
test
dec
es
ror
xlat
repz
sub
xor
sub
mov
fs
jl
dec
mov
nop
ljmp
xchg
out
clc
dec
pop
imul
hlt
mov
sub
cli
ret
scas
mov
into
lcall
ljmp
mov
mov
add
out
mov
enter
int
pop
mov
cmp
inc
add
fucom
push
pop
outsl
out
xchg
in
jl
mov
pushf
call
cld
mov
inc
cmpsb
imul
or
nop
pusha
in
adc
push
inc
lret
dec
int3
inc
mov
lock
call
jl
js
adc
lahf
les
idivl
mov
xchg
xor
jg
jmp
ljmp
movsb
jle
sbb
cmp
mov
jg
mov
jle
dec
mov
outsl
lock
rcll
popa
jo
retw
cmp
repnz
add
ljmp
clc
cmp
push
inc
cltd
mov
fwait
mov
and
jle
mov
xchg
lahf
sub
and
sti
or
cs
loopne
icebp
test
xor
mov
add
xchg
and
shl
sbb
iret
push
outsl
pusha
out
inc
jle
cmp
cli
jg
adc
jmp
lods
mov
ds
in
stos
push
sbb
sub
cmp
mov
fucomp
push
outsl
xchg
inc
movsb
lcall
movsl
xchg
in
add
sub
test
pop
jb
in
clc
push
push
pushf
pop
xor
add
loope
pop
mov
mov
ret
lea
sub
negb
jo
or
mov
xchg
lret
ljmp
cli
sbb
pop
repnz
aas
pop
pop
out
push
mov
adc
mov
xlat
fcomip
std
dec
adcl
sub
js
mov
enter
cld
xor
repz
push
dec
push
inc
leave
in
jecxz
jl
pop
and
ljmp
pop
cmpsb
loope
xor
decl
jb
mov
fs
jp
shrb
pushf
adc
movsl
roll
or
pushl
mov
daa
adc
leave
mov
lret
cmp
frstpm(287
aam
adc
test
mov
mov
sub
ficompl
addb
inc
add
cmp
or
add
push
add
mov
mov
and
jg
add
pop
jb
movsb
add
dec
push
popa
push
inc
add
test
xor
or
push
sub
iret
and
test
and
mov
jle
imul
inc
add
mov
cs
nopl
dec
test
repz
dec
decl
or
jnp
data16
xchg
xchg
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
imul
and
movsb
push
movsb
inc
scas
push
mov
push
and
idiv
jbe
push
test
and
imul
push
inc
aas
ljmp
scas
pop
dec
lods
push
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
mov
adc
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fnstenv
fdivs
pop
insl
call
stos
mov
shlb
ss
add
outsl
fcmovnbe
jo
mov
push
shll
add
outsl
push
shll
fidivrl
mov
push
ret
mov
fidivl
and
jge
fisttps
add
dec
in
ljmp
movsb
push
pusha
fcmovnu
push
out
jl
stc
mov
shlb
mov
repz
arpl
push
push
push
add
jne
aaa
fcmovnbe
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
jbe
push
data16
jns
ffree
inc
xchg
cs
push
divb
push
lret
stos
aas
add
mov
push
push
xlat
jne
add
outsb
or
fdivs
push
aad
push
xlat
ja
js
mov
testb
push
jp
jp
inc
push
mov
mov
fidivrl
sarl
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
jne
ss
xchg
xor
xchg
push
setbe
xor
mov
inc
xchg
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
fcomi
loope
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
outsl
mov
mov
push
jecxz
push
imulb
jmp
std
fadd
add
cld
out
out
push
hlt
clc
cmp
repz
cli
sti
cld
std
add
inc
jo
fidivs
inc
jae
add
imul
xor
add
pop
add
pop
jo
insb
add
pop
mov
add
repnz
mov
jnp
add
or
add
add
iret
jbe
or
or
test
test
subl
xchg
push
test
pop
pop
adc
xorb
add
pop
xchg
sbb
stos
femms
lods
lods
pop
mov
sbb
scas
add
scas
insl
lods
add
mov
pop
adc
and
sub
pop
sbb
outsl
push
cmpl
mov
aaa
inc
and
and
inc
mov
push
mov
push
sbbb
and
pusha
push
and
push
mov
pop
and
mov
and
add
pop
or
ss
sub
mov
pop
das
ret
sub
sub
inc
dec
xor
mov
or
pop
or
sub
cmpsb
pop
dec
pop
cmp
pop
shll
inc
mov
xor
xor
cltd
insl
push
pop
pop
or
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
fbstp
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
incl
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
pushl
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
jmp
cwtl
sahf
mov
pushf
fwait
lcall
mov
repz
xchg
xchg
sub
dec
ja
jns
dec
push
bound
xchg
jb
adc
xor
jne
mov
pop
jg
add
adc
bound
adcb
add
mov
aas
sub
lods
pop
outsl
dec
mov
xchg
pop
push
dec
add
push
mov
cmpsb
pop
sti
divb
sub
js
xor
xor
ja
push
ja
jb
insl
mov
dec
xor
mov
add
add
mov
and
out
out
outsb
and
mov
xchg
jo
sar
pop
push
inc
mov
cmp
mov
inc
add
jae
xchg
jp
fildll
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
addr16
iret
push
bound
mov
mov
and
out
inc
push
sahf
mov
insb
ss
sub
roll
mov
insl
fcmovne
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
add
jae
add
jb
shll
outsl
pop
xlat
pushl
rcrb
fwait
imul
lcall
rcrl
into
dec
mov
add
ja
add
out
push
jbe
fistpl
imul
mov
push
add
and
es
js
int
popa
pusha
mov
test
imul
insb
pop
outsb
push
outsl
rolb
push
ds
jno
add
jge
push
test
fisttpll
lock
or
mulb
add
xchg
adc
mov
mov
out
arpl
push
loopne
mov
sahf
mov
jb
dec
adc
int
xchg
in
push
jle
or
or
push
aad
push
sub
push
fildl
imull
int
adcl
mov
shll
push
test
test
sbb
test
fldcw
in
mov
push
xchg
nop
and
out
xchg
cmpb
lock
sub
sub
outsb
fiaddl
imulb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
outsl
cmpsb
pop
cmp
jle
and
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
fadds
stos
into
gs
std
shll
lgs
mov
shll
rorl
rcl
mov
ret
sahf
and
or
into
add
addr16
xchg
jne
pushf
dec
out
je
add
daa
cltd
sub
mov
and
femms
or
or
jg
lcall
or
es
push
adc
push
add
fstpt
adc
adc
ds
add
test
mov
xor
ds
mov
mov
mov
mov
sti
aad
testb
mov
add
and
or
ds
mov
mov
stc
lods
aas
and
push
out
aas
xor
or
mov
aas
cmp
pop
sahf
sub
cmp
and
mov
sbb
inc
jbe
cmp
push
cmp
inc
jle
cmp
mov
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
push
in
imul
xor
pop
mov
mov
sti
jg
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
mov
ds
xor
sub
sub
sub
sub
fcmovnb
xor
ss
and
inc
pushl
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
ljmp
pop
imul
nop
cltd
mov
mov
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
adc
test
jb
jae
jo
outsb
pushf
sti
cmp
and
jmp
push
add
filds
mov
incl
addl
pop
out
or
push
push
add
cmc
repz
dec
xor
sbb
add
xchg
pop
cmp
test
add
mov
add
outsl
mov
add
mov
push
mov
fnstsw
repnz
sub
adcl
gs
jecxz
pushf
add
mov
push
in
lcall
bound
push
arpl
mov
push
jg
rolw
lret
js
into
xchg
add
idiv
add
mov
mov
test
scas
xchg
js
in
and
out
add
jmp
push
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
ficompl
fst
es
push
lret
loopne
mov
std
into
fdivrp
fstps
popa
adc
add
jg
jle
jge
inc
mov
add
pop
repnz
or
dec
dec
dec
dec
dec
dec
inc
decb
pop
or
add
push
dec
or
adc
cmp
arpl
dec
or
add
push
adc
add
enter
inc
or
pop
pop
cmovg
inc
push
dec
aas
in
lcall
and
adc
outsl
jmp
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
aaa
sbb
cmp
daa
and
sbb
and
adc
incl
sub
xor
xor
sub
sub
push
add
push
sti
stos
lods
mov
addb
mov
pop
mov
mov
pop
mov
mov
ss
add
outsb
or
fnstenv
add
and
jg
cmp
bound
sbb
or
add
push
cmpsl
xor
or
dec
into
incl
inc
sub
push
inc
xlat
shll
fstpl
incl
or
jnp
outsb
sysret
mov
es
xchg
shlb
ds
fidivs
pop
stc
sysret
in
lock
stc
hlt
pusha
push
push
jg
add
pop
push
push
lock
aaa
outsl
shrb
pop
sahf
test
sub
jg
lahf
push
add
xchg
out
cli
add
mov
mov
cli
filds
adc
push
pop
pop
add
xor
jg
addr16
adc
cli
push
les
or
xchg
jg
sub
sti
jg
das
pop
pop
add
sti
mov
jle
adc
mov
insl
sar
pop
xchg
ret
jg
add
bound
xchg
call
les
dec
test
jg
in
push
push
cld
jg
and
bound
cmpsb
std
ja
add
or
out
roll
push
jg
dec
les
xchg
test
orl
data16
mov
inc
incb
or
pusha
mov
call
adc
xor
xor
push
incb
and
fidivrs
jg
inc
arpl
adc
sbb
add
loope
push
jbe
sbb
jno
sub
jmp
sbb
scas
incl
add
jmp
pop
xor
in
jle
lret
imul
adc
adc
add
sbb
lcall
popa
mov
add
mov
addr16
add
push
adc
lea
data16
mov
add
jg
sub
add
xor
or
jg
xor
movb
cs
cs
fldcw
cmpsb
ljmp
jnp
mov
pop
add
daa
mov
insl
sbb
aaa
pop
pop
mov
pop
jle
int3
loopne
dec
add
or
test
mov
jle
sbb
call
cwtl
adc
dec
xchg
push
ja
cmp
bound
add
mov
comiss
daa
push
arpl
or
mov
arpl
out
cmp
decl
dec
or
pop
pushf
push
xor
ljmp
dec
je
jle,pt
or
call
dec
push
cmp
push
jne
push
push
jne
pop
push
mov
and
jbe
out
push
jnp
push
insl
adc
jp
push
js
dec
jbe
out
popf
add
add
mov
mov
jbe
es
inc
popf
nop
popf
push
outsb
incl
or
jle
enter
dec
incl
ss
mov
lcall
dec
ja
xchg
nop
mov
jns
or
test
xchg
adc
int
push
mov
addr16
fwait
jbe
sahf
inc
out
mov
insl
and
cs
aas
popf
inc
inc
enter
pushf
cmp
mov
and
cwtd
mov
xchg
xor
imul
push
sub
sub
nop
daa
ss
cmp
je
cs
mov
xor
aaa
outsb
incl
mov
and
jg
pop
fnsave
xor
adcl
sahf
and
inc
movb
es
sbbb
cmp
ja
xor
and
xchg
mov
pop
pop
ja
pinsrw
add
stos
mov
or
adc
in
subb
push
sbb
mov
sahf
sub
pop
or
dec
aas
iret
jmp
pop
push
adc
pop
push
orl
lea
jns
jno
popf
push
imul
out
mov
sbb
test
push
lock
inc
lods
pop
rolb
cmp
cmp
icebp
idivl
or
imul
add
mov
jmp
test
dec
out
pop
jns
adc
dec
push
mov
and
jbe
push
push
sbb
xor
cmp
xor
dec
push
jle
sti
std
sar
push
sub
jmp
syscall
mov
sub
xchg
insb
push
sbb
pop
xchg
dec
sar
es
lcall
or
mov
sub
daa
cld
pop
das
pop
push
inc
fildl
add
push
adc
out
sub
and
vpcomub
lcall
or
pop
adc
xor
adcl
ds
mov
ljmp
or
inc
incl
sahf
or
lret
sub
jmp
int
add
mov
cmpsb
call
sbb
sub
ljmp
jp
xchg
out
add
sub
inc
dec
mov
nop
pop
adc
iret
data16
incl
imul
out
mov
or
pop
add
xchg
jo
or
incl
in
push
and
xlat
ficoms
nop
decl
sub
or
sti
inc
pop
in
in
std
ljmp
or
mov
call
call
jmp
sbb
pop
cmpsl
pop
in
mov
pop
stc
lgdtl
call
jg
cmpsb
mov
out
cli
notb
loop
inc
pop
mov
cwtl
inc
call
dec
push
jmp
call
es
addl
rcll
lods
mov
xorps
adcl
mov
pop
jnp
push
shll
roll
rorb
inc
and
ret
pushl
dec
out
adc
adc
ljmp
insb
push
mov
push
inc
inc
fcomp
mov
pop
inc
pop
mov
mov
movsb
dec
push
stos
push
popf
inc
sub
mov
inc
cs
scas
imul
add
and
cmpsb
add
push
out
push
shrb
shll
shrb
es
shlb
add
push
push
in
das
push
iret
insl
pop
and
out
int3
daa
outsl
pop
imul
push
push
push
stos
movsb
sub
ljmp
incl
inc
ljmp
mov
jge
pop
add
repnz
xchg
aam
jmp
pushf
cmp
insb
and
aas
decb
cwtl
xor
dec
inc
push
xchg
jmp
push
aaa
push
lcall
insl
es
push
xchg
es
xchg
xchg
xchg
notb
sub
push
xchg
aam
pushl
sub
inc
jmp
mov
fimuls
xchg
hlt
ljmp
fidivl
aad
or
faddl
data16
fstpt
push
jnp
jp
or
jl
push
fimull
or
jl
push
jge
fldcw
xor
jg
es
jbe
adc
fidivrl
push
mov
repnz
repnz
jae
pop
fidivrl
push
addb
push
loope
out
push
jb
scas
push
jl
cli
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
mov
xchg
out
push
sub
iret
xchg
mov
cli
ljmp
clc
push
idiv
ss
inc
sub
jg
mov
icebp
dec
ffree
and
pop
cld
daa
or
mov
fstpt
mov
icebp
bnd
ret
je
daa
jg
mov
inc
push
jns
ja
loope
xchg
and
mov
jp
es
xchg
jge
add
jge
and
jmp
mov
and
sarb
shrb
and
jge
idiv
xchg
cmpsb
nop
sub
lcall
push
fsubl
pop
push
inc
push
push
dec
adc
jle
mov
push
jmp
mov
jmp
push
pop
push
pop
cmp
or
scas
ljmp
incl
lcall
push
jns
shl
sub
addr16
mov
jmp
xchg
jmp
mov
push
xchg
mov
jle
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
stos
in
xchg
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
mov
fs
imul
subl
movb
mov
lret
xor
inc
adc
inc
jecxz
inc
lahf
aaa
orb
lret
adc
repnz
cmp
inc
inc
test
pop
push
sbb
xor
in
ja
sbb
push
or
and
or
inc
or
push
add
stos
push
stos
call
dec
mov
add
sub
add
cwtl
jbe
adc
out
add
push
sbb
add
inc
pop
or
xchg
push
push
adc
jb
xor
inc
arpl
lock
pop
popa
enter
dec
mov
or
or
lods
jae
push
pop
inc
bound
mov
lcall
ret
in
int
insb
push
ss
das
pop
ret
sbbl
and
jns
outsl
push
pusha
jnp
push
imul
push
popa
imul
outsl
jb
and
add
imul
jg
inc
hlt
jb
fisttpll
adc
inc
sbb
xor
pop
movsb
push
add
dec
sarl
pop
mov
scas
sbb
cmpsb
insl
andb
adc
mov
lea
push
jo
aas
aaa
add
subb
mov
js
test
inc
push
and
jbe
repz
push
mov
out
sbb
push
dec
in
cltd
fbld
or
sahf
lret
gs
xor
cmpsl
jmp
push
outsb
adc
sbb
jge
std
outsb
jbe
push
and
jp
xor
mov
stos
xchg
imul
jo
inc
dec
sar
mov
jne
push
das
std
jae
cmp
fadd
int3
mov
push
rcrb
push
sbb
out
push
ja
outsl
dec
inc
xor
ja
xor
fimull
gs
das
popf
subl
jns
pop
insl
cmp
xchg
cmpsb
jno
jge
mov
fldl
push
outsb
nop
fildll
jp
gs
cmp
cmp
lods
mov
fldcw
jb
lcall
sahf
sbb
inc
dec
into
sbb
or
mov
and
jo
xor
shll
pop
andl
in
dec
push
fimull
rcrb
psrlw
sahf
lcall
aaa
lcall
mov
mulb
inc
imul
das
sbb
movsb
jecxz
pushf
cmp
pop
arpl
push
sbb
subl
mov
pop
sbb
sub
and
inc
ficoml
sub
lock
inc
dec
fistl
inc
psubusb
adc
xchg
lea
bound
xorb
adc
push
adc
cmp
leave
xor
inc
sbb
lsl
and
and
cmp
jnp
jne
je
sti
popa
es
push
sbb
xor
fsubrs
adcl
test
dec
or
mov
push
lods
cmp
xchg
in
insl
or
int
dec
insb
cmpl
sub
dec
push
mov
push
outsl
cmp
data16
jno
adc
mov
ja
dec
outsl
xchg
and
sub
inc
push
adc
in
sbb
pop
adcl
rcll
mov
xor
sbb
dec
push
add
scas
mov
mov
je
call
and
ja
dec
and
insb
repz
mov
cmp
pop
xchg
jns
ja
popf
repz
sbb
fildl
xorb
fsts
adc
push
cmc
jge
adc
stos
jne
jbe
cmp
mov
inc
mov
pop
jbe
inc
and
sub
arpl
inc
movsb
sub
je
add
add
orb
inc
xor
push
dec
int
push
jbe
mov
jno
daa
or
fcoms
roll
mov
in
shrb
out
fistl
imul
cmpsl
cmp
bound
test
push
sub
cmp
push
test
pop
in
jno
cmp
sbb
cmp
push
pop
roll
scas
gs
rolb
loop
dec
xor
add
cmp
addr16
clc
inc
jne
sub
js
push
mov
xchg
ja
xor
in
mov
dec
gs
inc
arpl
lods
movsb
lock
iret
sub
or
add
sub
and
mov
mov
dec
out
into
popa
lret
or
mov
mov
insb
xchg
jg
and
test
push
pop
shll
imul
loop
dec
popa
jae
cmp
push
jae
xlat
inc
sbb
movsl
popf
pop
and
lret
ficoms
flds
inc
sbb
sahf
lds
sbb
outsb
push
or
pop
add
shr
dec
sub
pop
xchg
imul
sub
pop
jl
insb
rcpps
js
mov
sub
jb
inc
inc
xlat
mov
fs
mov
cld
in
inc
imul
xor
mov
insb
push
sbb
xor
sbb
scas
xor
imul
outsl
sub
fs
mov
stos
dec
and
data16
and
outsl
xchg
out
jmp
dec
jne
jns
shll
outsb
fs
sti
js
inc
xchg
inc
rcr
add
and
mov
fldcw
pop
push
mov
mov
inc
out
sbb
xor
xor
imul
and
bndldx
jne
outsb
inc
imul
push
sub
or
lea
and
adc
xor
xor
aad
add
jae
sub
sub
push
ss
mov
sarl
int3
sar
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
iret
xor
inc
or
push
lcall
adc
mov
xchg
pop
add
es
setl
cmp
repnz
andl
or
ds
adc
and
pop
mov
loopne
mov
insb
mov
and
sbb
cmp
adc
daa
out
mov
je
jo
sbb
inc
out
push
imul
addl
lods
test
or
nop
mov
sbbl
inc
sbb
loopne
out
cmp
jecxz
or
push
int3
arpl
sbb
add
dec
jno
jge
jl
out
cmp
mov
xor
mov
lcall
jne
xchg
push
add
sub
or
fidivs
nop
adc
sbb
int3
mov
scas
aas
ss
outsl
test
sbb
adc
ret
and
sbb
mov
jle
inc
sbb
scas
cmp
ja
pop
jo
mov
lock
sub
repnz
mov
das
jg
mov
fsubl
xlat
adc
or
mov
fdivs
mov
fstpt
arpl
xchg
xor
inc
mov
enter
out
push
imul
mov
cmp
cmp
mov
jbe
sbb
add
mov
cmpsl
addr16
sbb
adc
js
inc
iret
mov
test
mov
cmovns
mov
push
push
sub
adc
sbb
jo
daa
dec
cld
addr16
adc
arpl
test
pop
xor
and
mov
adc
adcl
inc
sbb
addb
mov
js
insl
mov
push
jecxz
scas
sbb
dec
hlt
cwtl
add
push
movl
push
mov
push
sbb
xlat
outsb
pop
push
jo
rcll
aas
xor
imul
jne
xor
pop
mov
push
lods
mov
sub
test
add
outsl
or
js
xchg
cmp
rorb
mov
incl
push
inc
xchg
mov
add
sub
mov
sbb
xchg
cmp
jbe
add
pop
dec
mov
out
jmp
pop
outsb
inc
test
lcall
shll
add
in
and
pusha
aaa
sub
or
inc
js
rolb
cmpsb
dec
sarb
cmp
pop
jo
dec
movsl
dec
in
call
dec
add
adc
fisubrs
scas
inc
or
or
enter
add
sbb
push
adc
loope
out
mov
lods
inc
xchg
nop
psubq
jne
adc
cmp
xchg
jbe
inc
adcl
inc
jnp
push
push
int3
jmp
test
fadds
shrl
push
lock
add
dec
push
mov
or
bound
push
and
add
and
fmull
push
add
mov
xchg
fmuls
cmp
out
inc
cs
mov
or
add
pop
push
dec
out
mov
jae
arpl
dec
lahf
ds
sahf
xchg
xor
xchg
push
lods
lock
push
mov
or
inc
inc
ss
jg
mov
and
xchg
test
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
