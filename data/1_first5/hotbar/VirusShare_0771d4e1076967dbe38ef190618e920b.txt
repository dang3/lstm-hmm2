fcomp
decl
jo
inc
add
mov
or
push
add
mov
add
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
jp
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
and
fstpl
mov
in
adc
push
mov
les
jge
cmpl
clc
hlt
dec
push
push
faddl
xor
or
loopne
push
adc
mov
mov
pushf
push
push
sbbl
popf
out
std
ficoms
jno
and
push
add
xor
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
loop
cmp
mov
mov
sbb
hlt
push
push
adc
push
jbe
dec
push
andb
cmp
xchg
push
lds
adc
add
leave
or
leave
ja
and
or
inc
lock
wrmsr
mov
in
sub
mov
inc
mov
and
add
sub
mov
mov
push
leave
or
fldt
sbb
mov
mov
in
adc
imul
jne
push
jle
add
cmp
ss
ret
cmpsl
push
push
push
call
cmpsb
xor
sub
dec
jae
sete
into
mov
fisubrs
in
inc
xchg
mov
mov
dec
cmp
mov
mov
push
push
mov
mov
enter
nop
or
leave
les
and
pop
fsubp
je
add
ss
add
and
in
or
mov
int3
xor
xor
inc
les
sub
inc
decb
mov
lea
or
xchg
cmpsl
out
std
mov
dec
sub
js
dec
xor
inc
enter
sbb
add
and
pop
inc
xor
notb
inc
pop
sub
push
in
and
cmp
lea
lea
cmp
jge
mov
xchg
pop
iret
lock
sbbl
in
ret
xor
mov
dec
mov
push
inc
push
insb
getsec
enter
push
add
mov
cmp
jl
lea
add
xor
xor
jg
sti
loop
stos
cmp
ja
ret
mov
adc
test
in
std
inc
push
mov
insb
or
mov
sbb
inc
hlt
movsb
jne
jmp
bswap
sub
lock
cmp
push
int3
cmp
cmp
cltd
mov
sbb
fsubr
adc
cmp
fcmovnb
jmp
dec
or
adc
push
jne
mov
mov
dec
incl
mov
pushf
hlt
call
mov
test
psraw
mov
mov
or
adc
out
stos
loopne
fdivrs
bound
xchg
cmp
cmp
insb
add
pop
or
iret
and
hlt
push
and
cltd
or
mov
and
and
sub
add
push
mov
nop
push
adc
pop
pop
aaa
sbbb
add
mov
rorl
in
sbb
lcall
xor
dec
push
add
aam
popa
addb
lcall
lcall
push
add
sub
negl
and
adcb
push
sbb
loope
stc
add
cmp
pop
imul
inc
xchg
je
in
rorl
or
inc
or
je
in
xor
xor
mov
or
xchg
stos
add
xor
jg
push
lea
push
sub
pop
pop
jg
mov
inc
push
push
and
ja
sbb
pop
push
orb
scas
enter
pushf
mov
fdivp
push
sbb
int3
mov
inc
rol
sbb
inc
nop
add
mov
popf
push
and
add
sub
es
daa
ja
pusha
cmp
aad
xchg
movntq
sbb
and
insl
test
je
adc
jae
jne
bound
ds
mov
js
add
in
in
xor
push
add
loope
lds
cmp
sub
je
push
pusha
sub
sete
test
test
fs
push
sbb
xchg
sub
sub
cs
add
dec
and
stos
push
xor
loopne
ret
adc
pop
insb
xor
xor
repnz
push
jmp
adc
inc
test
fisttpll
psadbw
push
add
test
adc
jnp
xor
orb
sbb
adc
inc
mov
dec
pop
push
push
lock
mov
push
push
xchg
sbb
inc
push
xchg
push
cmp
push
dec
leave
or
and
push
push
cwtl
sbbb
cmp
js
loope
movaps
in
or
add
push
pop
leave
outsb
bound
push
push
je
xchg
dec
fcomps
jge
sbb
sub
pop
testl
shlb
adc
add
testl
xchg
push
add
iret
fs
sbb
das
or
sbb
outsb
or
inc
sub
mov
cmp
cmp
xchg
out
jae
inc
arpl
sub
mov
cmpsl
movsl
sbb
movsb
sbb
sbb
jge
lcall
sbb
inc
sbb
inc
push
loopne
pop
cmp
lods
dec
mov
adc
adc
leave
mov
movb
lods
mov
add
or
sti
lahf
add
push
int3
mov
out
push
push
ja
rep
mov
xor
pusha
mov
cltd
add
shrb
mov
mov
cmp
out
popf
loope
mov
pop
clc
mov
mov
popf
cmp
icebp
nop
movsl
ss
add
faddl
stos
or
sti
or
lea
data16
push
test
or
sub
mov
add
hlt
add
test
out
test
dec
adc
dec
adc
pop
mov
pop
add
adc
adc
cltd
in
das
adc
sarb
cld
rolb
lcall
inc
test
sti
add
adc
add
mov
rolb
outsl
or
cltd
sti
pop
mov
adc
adc
das
add
pop
fnstcw
push
adc
das
mov
das
je
outsb
sub
mov
cmp
and
mov
mov
add
mov
dec
in
mov
push
repnz
fstps
and
test
adc
pop
je
daa
lea
int3
add
jge
adcb
pop
or
in
mov
mov
adc
mov
add
sub
inc
es
xchg
loop
adc
mov
movaps
in
jg
and
cmc
lea
mov
flds
pop
and
scas
sti
in
add
push
jge,pn
xor
push
push
aad
scas
inc
negb
iret
cmp
jb
inc
fisttps
mov
xor
push
movsl
sbb
shl
adc
sbb
popa
lds
inc
cmp
add
push
rcrb
incl
aas
adc
outsb
hlt
jne
push
adcl
mov
pop
arpl
jge
dec
test
push
adc
sub
sbb
push
mov
cmp
je
sub
cmp
je
js
gs
xchg
add
shll
xor
iret
call
mov
jo
aam
push
clc
test
mov
inc
or
adc
mov
dec
in
stos
test
sti
int3
add
sbb
fmulp
push
mov
xchg
fwait
icebp
push
push
inc
jg
call
push
adc
call
inc
cmp
jl
add
incb
ret
outsb
lea
jne
jnp
push
fisttpl
cmp
jbe
insb
push
mov
mov
int
movsb
inc
cmp
imul
rolb
xchg
sbbl
and
int3
push
rcr
pushl
movzwl
push
lods
mov
jnp
loopne
sub
push
int
pushf
jmp
in
clc
cmp
sbb
test
jne
sub
mov
push
mov
andl
hlt
sbb
add
inc
mov
nop
mov
push
jne
lods
push
mov
mov
ret
jo
add
pop
and
enter
lock
mov
cwtl
or
add
testb
loop
hlt
jl
xchg
fldl
mov
or
pop
mov
in
pop
inc
adc
call
mov
hlt
mov
jecxz
insb
popa
sbb
pop
adc
add
push
popa
pop
mov
pop
inc
or
inc
lahf
dec
sbb
push
mov
mov
mov
sub
push
jge
mov
or
adc
inc
pop
imul
jb
cmp
xlat
cmp
pop
pop
test
push
sub
dec
clc
lea
sub
or
jge
mov
fbld
mov
add
jmp
add
call
push
push
add
or
push
daa
pusha
jl
pop
js
mov
clc
jg
mov
movb
mov
sbb
lret
pop
ret
aas
mov
lea
cmp
js
cmp
das
fdivrl
sub
add
cld
mov
push
stos
push
sbb
es
pop
or
ja
mov
push
mov
aad
loope
addl
sarb
push
push
jle
ficompl
or
mov
jne
dec
dec
pusha
fldcw
fsubrs
fiadds
push
xchg
jb
hlt
mov
sub
fimuls
push
push
push
cmp
ja
sbb
push
sbb
pop
in
jmp
ss
sbb
clc
push
cmp
jl
mov
outsb
fcoms
xor
mov
pop
add
pop
mov
mov
mov
les
dec
hlt
ss
cmp
jno
fisubrs
adc
dec
lods
add
aaa
pusha
push
add
addl
pop
push
mov
push
mov
fbstp
pop
add
add
roll
or
xlat
push
movb
in
mov
dec
jl
jae
fadd
lcall
push
inc
aas
push
push
pop
cltd
pop
dec
cmp
cmpsl
jo
push
mov
dec
xlat
pop
pop
fsubrs
test
icebp
pop
sbb
inc
or
mov
push
nop
sbb
icebp
pop
divb
push
std
and
push
cmp
je
cmpl
lock
mov
push
jne
push
call
cmp
std
pop
dec
test
push
mov
push
lock
pop
pop
pushf
pop
sub
mov
mov
pop
or
inc
clc
outsb
mov
add
and
and
pop
enter
fdivs
jle
dec
mov
shlb
adc
sbbl
xchg
add
jns
add
jo
rolb
loopne
mov
add
add
push
fdivl
mov
movsl
pop
push
push
mov
xor
imul
adc
ret
lea
mov
jle
push
mov
lcall
sahf
ret
out
push
dec
jge
jmp
inc
add
sbb
mov
adc
outsl
adc
mov
lea
mov
add
xchg
loopne
push
sub
hlt
jne
dec
sub
shll
or
or
int3
out
test
mov
pop
mov
cmp
add
out
fiaddl
rcrb
rorl
sbb
pop
cwtl
add
mov
sti
jl
jge
push
adc
push
push
jecxz
orl
ret
pop
mov
pop
xor
fidivs
push
cmc
iret
andl
dec
lock
jge
lea
push
mov
cwtl
mov
add
push
pop
pop
dec
call
sub
and
lahf
add
push
push
jl
sub
cwtl
inc
push
add
or
or
xchg
int3
pop
jbe
mov
mov
pushl
jg
fwait
mov
out
xor
or
jmp
mov
decb
repz
xor
std
imul
pop
pop
pop
addr16
pushf
mov
lods
fstpl
inc
push
rcll
pop
sbb
fxch
sbb
fistl
test
lret
mov
xchg
dec
xor
cmpb
pop
push
pop
jmp
pop
xor
mov
and
mov
insb
pop
inc
jno
pushf
js
xchg
or
sbb
push
clc
dec
push
mov
arpl
lret
push
sbb
cmp
or
cmp
int3
push
and
and
sbb
nop
sbb
test
inc
orl
jl
shl
add
int3
in
fiaddl
mov
cmp
push
push
pop
lea
sbb
mov
mov
sarl
sbb
lock
and
push
jmp
ret
jne
xor
jb
lea
mov
inc
cmp
iret
push
lods
pop
mov
nop
or
sbb
lahf
sahf
sbb
call
and
mov
cmp
inc
add
lcall
cmp
repnz
adc
push
ret
inc
icebp
mov
push
adc
pusha
mov
outsl
jnp
sub
loope
push
add
or
inc
scas
nop
fistpl
adc
sbb
and
and
pop
and
sbb
pop
sbb
arpl
add
add
lahf
or
mov
into
rcrb
or
je
pop
les
outsb
dec
enter
push
ds
insl
or
aas
mov
xchg
inc
cmp
mov
ja
push
clc
and
and
test
femms
or
jne
insl
mov
push
add
aam
jbe
push
rcrb
ret
stos
pop
popa
mov
cld
mov
pop
testb
adc
mull
push
push
sub
in
cmp
in
sbbl
inc
pop
sbb
and
jle
lock
out
dec
or
in
mov
jmp
ret
pop
add
jne
test
push
or
mov
add
cmp
fidivrs
repz
cmp
cmp
jecxz
mov
pop
jl
mov
or
js
adc
inc
add
fidivl
jmp
mov
push
mov
sar
mov
icebp
push
aas
insb
xchg
xor
dec
cmp
mov
movb
jno
add
loope
sub
inc
or
inc
mov
outsl
dec
adc
jg
pop
cmpl
cmp
push
js
push
sti
mov
and
adc
inc
jle
mov
mov
mov
sub
mov
in
sti
mov
pop
push
mov
movhps
idivl
int3
jo
mov
movzbl
neg
sbb
and
mov
adc
mov
scas
xlat
mov
imul
in
jmp
in
out
daa
adc
int3
cs
call
pop
adc
mov
adc
loope
std
movsb
shlb
outsl
xorl
mov
pusha
cmpsl
int
push
mov
mov
std
cltd
jle
out
movl
xchg
mov
push
sbb
sbb
insl
das
xchg
scas
sub
lods
aaa
sub
scas
mov
scas
dec
sbb
xor
aaa
clc
fwait
push
or
pop
sub
iret
repz
pop
ret
cmp
dec
repz
push
and
pop
push
add
mov
or
and
cmp
mov
push
pusha
lea
imul
adc
and
popf
icebp
iret
iret
in
mov
movb
pusha
sbb
dec
loop
adc
scas
add
push
push
lahf
popf
mov
jo
push
dec
mov
mov
ret
xor
pop
push
lea
push
push
push
add
push
lea
mov
dec
cmp
sahf
xchg
inc
je
dec
aam
adc
cmp
ret
add
pop
cmpsl
mov
in
jg
orl
sbb
push
fdivr
adc
add
shrb
aad
aad
rorb
sub
jle
add
gs
rcll
mov
mov
loope
into
mov
nop
xchg
aad
fcompl
adc
test
add
call
adc
push
push
push
jle
fcmovb
stos
out
lahf
cwtl
movl
fwait
test
mov
cmp
mov
inc
lods
mov
or
xor
mov
sub
rcrl
mov
mov
or
push
dec
dec
and
mov
add
fadds
xchg
dec
jmp
xchg
mov
call
sbb
xchg
in
mov
push
mov
js
cmp
sbb
out
xchg
sbbl
repz
daa
push
and
or
rol
sbbl
add
enter
divb
andb
xor
mov
jno
jecxz
lea
pop
xor
fimull
nop
push
adc
mov
push
push
push
push
cmp
xor
cmp
je
lds
push
inc
pop
das
lahf
adc
pushf
push
mov
lahf
gs
jle
sahf
pop
pushf
fsubrs
add
ret
add
sbbl
and
jne
mov
repnz
cmp
adc
add
inc
mov
xor
rcll
lret
mov
fcoms
xchg
outsl
popf
jne
sub
jg
call
mov
mov
insb
push
dec
dec
mov
push
push
xor
push
push
lea
sti
or
repz
inc
inc
insb
xchg
out
lcall
sub
cltd
sub
sar
add
sbb
inc
iret
jle
imul
and
jmp
mov
add
sahf
andb
inc
mov
cmp
sub
fistps
bnd
xor
xor
mov
mov
xchg
xchg
rol
jns
ret
add
sbb
sbb
repz
imull
push
adc
xor
adc
inc
or
lds
sahf
sub
dec
loopne
lds
in
push
push
ret
adc
pop
pusha
roll
fistps
cmp
pop
out
and
add
ja
add
push
sbb
push
fadds
xchg
pop
jg
mov
sbb
mov
cmp
xor
push
dec
ret
je
ffree
push
shlb
push
imul
add
movzbl
add
push
incl
mov
push
lret
jns
and
loop
xchg
mov
fisubl
pusha
lock
mov
fiadds
adc
adc
or
add
stos
cwtl
add
jmp
lret
xor
inc
add
push
and
jbe
push
inc
mov
pop
cs
jo
lret
push
mov
jne
xor
sbb
and
xchg
pushf
mov
adc
xlat
loop
lret
jle
call
jg
aas
add
clc
add
je
or
jl
aad
cmp
sub
aad
sbb
mov
jmp
pop
or
push
push
sub
mov
test
rcrb
mov
lcall
mov
out
fldz
fdivp
jb
add
call
push
cmp
jbe
loop
dec
es
push
rcll
mov
pushl
repnz
mov
sbbl
add
push
xchg
popa
lea
mov
sub
push
jne
push
mov
sahf
push
xchg
inc
and
mov
pop
sub
outsl
jo
or
xor
pop
clc
pusha
xchg
movb
sbb
xor
mov
push
mov
sub
xchg
or
test
push
enter
inc
mov
and
sub
lods
mov
mov
xchg
push
cwtl
inc
sub
jg
frstor
nop
add
dec
lea
push
sbb
sub
mov
je
push
dec
push
inc
push
push
sub
frstor
push
push
addb
mov
inc
lahf
push
rclb
lock
test
push
das
lock
inc
push
cmp
pop
sub
push
push
lea
mov
fsubrl
dec
loope
dec
fs
push
or
add
push
lcall
js
jmp
out
or
cmpb
cmpsl
addl
mov
pusha
push
jb
push
sub
add
inc
inc
imul
add
enter
cmpsb
sbb
add
xor
test
cmp
test
push
mov
mov
and
push
fisttpll
stc
daa
inc
xchg
addr16
push
sbb
int
push
je
js
je
push
test
js
mov
int3
call
jge
aaa
aam
enter
sub
cwtl
imul
inc
inc
ret
scas
sarb
pusha
fmull
add
xchg
mov
pop
les
add
les
fildl
lahf
push
mov
adc
cmp
xchg
dec
inc
mov
popa
dec
adc
add
inc
addl
mul
and
ds
js
inc
aas
push
xlat
cmp
or
aaa
adc
insb
add
push
inc
xchg
mov
out
mov
loop
and
mov
push
push
call
dec
push
add
push
mov
scas
in
or
in
inc
push
pop
jl
mov
inc
lock
andb
adc
orl
push
insl
loope
ljmp
inc
roll
sbb
test
pusha
adc
mov
add
inc
adc
push
inc
mov
mov
xchg
test
cmp
ficompl
movsb
mov
cwtl
add
sbb
fdiv
and
push
mov
sbb
add
hlt
cmp
shlb
cmp
mov
jge
enter
lods
lock
push
enter
das
cs
sub
push
pop
inc
test
fs
nop
in
int
dec
push
mov
pop
jnp
push
push
and
pop
cmp
out
ret
bound
call
loope
ret
mov
cmp
xor
push
push
movsl
or
pushf
rorb
dec
sbb
call
adc
loope
push
cmp
divl
lods
outsb
cmp
dec
cmp
rcrb
or
inc
neg
jo
inc
inc
push
sbb
mov
pop
and
adc
adc
jge
push
sub
les
push
out
dec
push
adc
cltd
push
enter
roll
popf
adc
leave
add
jo
sub
sbb
dec
mov
inc
pop
xor
in
mov
and
pop
popa
add
cmp
popa
or
mov
dec
add
cltd
and
sar
mov
addb
in
and
int
pop
adc
jl
push
mov
add
adc
fincstp
enter
mov
ds
rorl
adc
add
out
sar
mov
shr
add
mov
imul
push
mull
ret
insb
adc
fisttpl
mov
in
add
imul
adc
enter
dec
repz
mov
mov
enter
mov
in
mov
sub
sub
jo
lock
mov
cmp
je
cmpl
inc
loope
outsl
or
xor
jne
xor
jmp
dec
cmpsb
mov
jo
mov
push
arpl
cmp
cmc
lea
or
push
lods
ja
and
add
xor
js
jl
jl
js
sbb
lock
inc
lock
adc
insl
loop
enter
rcll
inc
and
inc
dec
pusha
and
inc
or
sarb
fldz
inc
fstpl
push
int3
je
ret
sub
add
ss
jl
out
lods
aaa
mov
cltd
idivl
push
push
es
inc
sarl
sub
cmp
stos
push
add
jl
insl
arpl
aaa
mov
push
jle
cmp
mov
outsb
cmp
mov
adc
sbb
xchg
sbb
and
push
or
insb
add
popf
imul
imul
jno
jae
dec
sub
imul
js
mov
fwait
pop
jl
jbe
fistpl
dec
nopl
faddl
push
mov
mov
sub
xor
mov
fdivrp
out
addl
xor
sbb
cmp
mov
xchg
add
jns
inc
loope
push
push
cmp
outsb
cmp
add
fbld
mov
clc
and
or
adc
je
sub
mov
sti
shrb
sahf
add
mov
enter
dec
inc
testl
pop
mov
mov
icebp
mov
jge
dec
addl
cli
enter
push
cmpsb
mov
adc
mov
sbb
stos
mov
cs
cmp
add
je
xchg
mov
call
adc
and
xchg
xchg
or
mov
adc
xor
or
aam
cmpl
fildll
insl
add
insl
rcrl
ss
test
xchg
mov
adc
sar
push
jno
sub
punpcklbw
out
aam
push
cld
inc
dec
inc
jg
push
and
sbb
add
xor
lret
add
xchg
mov
add
or
inc
in
pusha
mov
pop
les
jb
xchg
outsl
loopne
lods
inc
jns
jmp
xor
push
sbb
pop
sbb
jae
or
jne
and
inc
mov
out
add
sbb
or
add
pop
clc
or
sbb
or
pop
dec
mov
push
mov
add
in
add
push
aaa
ret
pop
cmpb
push
push
sub
push
enter
xchg
or
push
jg
push
add
push
sahf
xor
mov
mov
xor
fnstsw
mov
cltd
xchg
fstpl
inc
cltd
sbb
movl
sahf
adc
pop
push
pop
inc
pop
and
sbb
cmp
cmp
and
inc
sbb
aas
pop
jl
adc
inc
pop
inc
cmpsl
fidivrs
pmulhuw
shrb
es
lock
pop
add
push
push
icebp
mov
sbb
popa
or
cmp
pop
cmovns
xorl
xchg
lahf
or
adc
and
inc
sub
aas
pop
and
or
mov
pop
ret
lahf
mov
and
push
fwait
and
push
push
fisttpll
loope
mov
and
dec
and
clc
adc
sub
clc
setb
stos
mov
mov
sub
cmp
setae
pushf
sub
push
inc
mov
stos
lock
jecxz
movl
hlt
or
loope
pop
fnsave
mov
and
decl
leave
pop
iret
sub
cmp
mov
push
inc
and
xlat
mov
movmskps
add
and
and
pop
pop
pop
ret
inc
xchg
jnp
je
rorl
xadd
inc
cld
jecxz
xchg
rcr
mov
xor
push
push
loopne
or
mov
dec
inc
push
push
fmuls
adc
aam
mov
xor
mov
xor
aam
inc
adc
ss
jb
or
push
inc
push
push
add
jb
and
pushf
in
sub
lahf
dec
mov
sbbb
cs
mov
push
add
in
mov
sub
movzbl
or
les
outsl
mov
inc
mov
xchg
aaa
insb
jns
inc
dec
add
add
adc
sub
add
adc
or
pop
adc
shll
xor
adc
pop
dec
and
daa
inc
and
xchg
mov
jbe
ret
aas
or
aas
adc
adc
shll
adc
push
dec
jmp
mov
inc
es
pusha
jmp
push
insl
xsha256
cmpsb
pop
xor
cmp
pusha
xor
push
cli
xor
scas
test
int
mov
add
inc
fstl
popa
push
scas
and
test
jle
xor
je
jo
pop
push
xchg
mov
shlb
cmp
xchg
rolb
movsb
pop
lods
nop
les
pop
jg
ds
mov
sbb
bound
push
nop
mov
out
push
dec
call
dec
stc
pusha
sbb
add
insl
lock
push
js
rcll
add
and
je
dec
sub
scas
sbb
outsl
mov
sbb
fsubrl
push
out
shl
or
push
ja
sahf
fildll
jo
fdivs
rorl
jmp
subl
push
adc
gs
pop
and
dec
push
pop
inc
jb
xchg
or
arpl
cltd
mov
add
sub
and
sub
pop
push
mov
pop
ret
push
inc
out
xlat
addb
pop
jecxz
xchg
fistps
out
push
test
je
shll
popa
notb
ret
mov
jg
jne
push
push
in
pop
test
and
dec
lds
movsl
jmp
pop
and
out
mov
daa
lahf
incb
push
sbb
dec
and
lahf
jne
pop
cmc
out
cs
popa
or
dec
mov
or
dec
aaa
popa
cli
fs
pushf
dec
cmp
aad
add
jle
cli
loopne
test
fistpll
adc
xlat
inc
sub
push
xchg
push
xor
mov
iret
js
cmc
push
and
and
dec
pop
push
pop
add
cmp
inc
add
xorb
xor
or
add
mov
mov
push
add
inc
lahf
push
push
add
pop
mov
sbb
sub
xchg
int3
sbb
mov
push
ljmp
push
sbb
je
inc
mov
je
lcall
add
add
fistpl
in
dec
and
int3
sti
add
pop
xchg
sbb
push
add
jl
enter
push
pop
mov
arpl
or
adc
add
xchg
sub
or
cmp
jne
frstor
add
and
push
inc
add
push
faddl
fildll
mov
lods
push
or
xchg
jl
fcomps
mov
add
push
sub
incb
mov
push
add
push
push
aas
inc
inc
or
or
jl
or
push
lods
leave
lds
iret
in
add
xlat
push
add
fdivl
jnp
rorb
inc
ss
es
pop
movl
adc
add
jne
xor
sub
out
repnz
mov
or
dec
add
push
pusha
sub
add
add
xchg
jl
insl
inc
jno
push
notl
out
leave
or
sub
mov
push
in
adc
push
mov
fs
mov
cmp
push
aaa
movsl
push
xchg
es
hlt
and
mov
pushf
and
aaa
dec
adc
cmpl
pop
push
jl
sub
aam
jae
xchg
mull
sbb
adc
retw
popf
push
cmc
icebp
push
sbb
int3
xor
push
adc
mov
sub
xchg
cmp
sbb
jo
dec
and
sbb
inc
in
sub
scas
mov
notl
and
adc
push
out
xchg
fcompl
push
pop
js
gs
jns
or
push
loope
add
aad
fnstcw
adc
pop
fnstcw
mov
cmp
dec
stos
push
xchg
pop
add
ljmp
stos
leave
cmpb
clc
dec
adc
pop
dec
pop
cmc
lahf
add
cmp
pop
jl
insb
stc
in
cwtl
mov
mov
adc
push
rorb
adcl
movl
push
push
outsl
or
mov
imul
add
shrb
roll
popa
push
sub
cmp
and
mov
fmull
push
jge
and
mov
mov
fs
fs
pop
sub
pop
mov
add
or
xor
stc
sbb
sbb
cmp
inc
mov
add
xchg
insb
jne
mov
inc
and
movsb
ja
sub
fsts
or
test
fisttps
mov
and
mov
and
push
cltd
push
sbb
loop
dec
clc
sbb
cld
cmp
cmp
ds
pop
rcrl
sbb
movsl
fcomi
inc
adc
sbb
shlb
imul
xor
push
xchg
loopne
xchg
mov
sub
push
xchg
cmpl
pop
xchg
sbb
xlat
xchg
adcl
sub
cs
push
or
js
push
push
and
mov
into
in
push
add
xor
fdivrp
xor
ret
call
inc
xor
std
push
sbb
pop
jp
add
add
add
jo
or
add
pop
push
add
or
sub
inc
sbb
push
push
aad
inc
shrb
sub
leave
or
mov
add
lret
inc
adc
push
dec
cltd
pop
xchg
dec
mov
sbb
add
movsl
shlb
and
sub
jo
xor
mov
xor
sti
pushf
adc
sbb
add
xchg
and
popf
popa
mov
push
and
fimuls
fucomp
lret
fwait
lods
dec
push
push
pop
and
pop
mov
push
add
push
cmp
pop
addr16
inc
and
jnp
sbb
pusha
outsb
sbb
push
mov
mov
sbb
rorb
mov
pusha
adcl
fisubs
add
jb
or
sahf
add
lcall
inc
xor
pop
push
cmp
mov
ret
or
jp
add
mov
push
gs
mov
adc
adc
adc
jle
sub
pop
and
mov
pop
enter
test
enter
jb
repnz
stc
xor
push
rorb
push
adc
push
pop
or
pop
pop
mov
push
bound
sbb
js
lods
in
punpckhbw
cmp
cmp
push
movsl
add
push
jle
adcl
roll
lock
cli
xor
cld
add
xor
sub
mov
xor
and
and
or
xor
jecxz
mov
nop
sub
arpl
adc
adc
enter
jmp
pop
mov
cmpb
and
adc
adc
je
in
clc
push
test
in
test
push
and
sbb
sub
inc
inc
xor
lock
stos
mov
adc
mov
movsb
sub
daa
je
mov
shrb
lea
repnz
shrd
add
test
adc
popa
inc
pusha
mov
leave
fadds
test
cld
or
jmp
push
sbb
insl
pop
jge
je
or
add
or
jne
movl
jbe
push
and
adc
xor
dec
cmp
addr16
xchg
add
cmp
xor
sub
pop
lcall
lods
mov
fsubs
inc
xchg
sbb
pop
add
test
dec
push
mov
cmp
sub
sub
xchg
ss
inc
or
mov
sti
sbbb
mov
jle
inc
inc
movb
cmp
sbb
pushf
mov
xor
in
adc
cmp
mov
xchg
cld
mov
aam
movsb
das
loopne
sbb
mov
jbe
imul
hlt
inc
lahf
and
mov
pop
xor
and
add
sahf
lcall
or
push
fmull
in
push
aad
jb
push
mov
lods
pop
fcompl
push
push
outsl
add
popf
aam
mov
mov
outsb
and
push
mov
sub
cmp
stos
mov
cli
pop
es
or
jnp
adc
jns
andl
imul
mov
xchg
push
or
sbb
sub
pop
lret
add
aam
adc
sbb
xor
mov
dec
jno
inc
sub
and
add
into
push
inc
movsl
loope
loop
xchg
jle
or
es
int3
sbb
jo
xor
xchg
xorb
popa
fstps
out
pop
lds
aam
loopne
lock
inc
xor
sub
pusha
rclb
pusha
daa
repnz
out
mov
push
setle
jge
mov
lea
pop
push
add
les
pop
add
push
std
cmpl
add
dec
sarl
push
les
add
xchg
cmp
push
mov
push
ljmp
cmp
and
sub
iret
sahf
mov
pop
jp
mov
imul
orl
addr16
push
pop
pushl
in
push
mov
test
je
adc
jecxz
mov
dec
ret
cmp
adc
scas
jle
rcrl
dec
push
sbb
or
mov
add
icebp
int3
jo
jp
dec
pop
in
sbb
xchg
js
lret
xchg
ss
push
mov
or
dec
ds
push
and
ret
sub
test
dec
imul
cmpsb
out
test
push
cmp
push
sbb
xlat
add
add
inc
push
setae
mov
and
or
lea
or
es
repnz
std
sti
jo
push
and
pop
inc
or
in
repz
cmp
pop
cmpsb
xchg
dec
and
fmull
pop
pop
cltd
inc
push
adc
adcb
scas
adc
dec
dec
sbb
imul
dec
out
xor
add
adc
cmp
adc
pusha
nop
lret
popl
cmp
push
ds
sub
dec
enter
adc
test
mov
roll
jo
push
inc
dec
rorl
and
lret
inc
insb
mov
scas
or
mov
mov
loopne
test
adc
ds
fstpt
mov
dec
mov
jecxz
dec
fs
sbb
adc
adc
or
js
push
add
lods
fsubrl
nop
inc
test
inc
sub
pushf
push
test
xor
inc
test
xor
push
out
movsb
inc
add
inc
jb
cmp
in
pop
enter
push
imul
add
popa
jo
nop
add
jae
test
pop
push
popf
bound
push
xchg
mov
loopne
jo
inc
sbb
imul
mov
lea
push
mov
mov
push
fldl
clc
add
push
loopne
sub
mov
mov
les
ret
xor
fcomps
cmp
and
repnz
leave
test
sbb
cwtl
jmp
pusha
cmp
shll
add
dec
add
adc
mov
fisubs
ror
ds
add
jb
push
xchg
arpl
jae
pop
sub
je
inc
enter
inc
push
scas
and
movl
idivl
or
je
rorl
fs
ds
movsb
jne
sbb
bound
mov
add
add
sbb
fs
fisubl
cwtl
js
cmp
or
mov
lock
cmp
add
cld
jg
push
jnp
pusha
xor
pop
pop
inc
cmpsb
sbb
push
push
push
pop
enter
push
push
pop
sbb
xor
add
sub
add
jo
cld
out
jnp
sbb
push
add
push
movl
std
icebp
jl
inc
sbb
rol
push
mov
and
les
test
push
add
dec
mov
inc
pop
or
les
fs
pop
or
ret
sbb
and
dec
xor
push
mov
push
or
nop
adc
mov
inc
and
xor
mov
or
add
and
add
fisubl
hlt
dec
clc
aas
sub
push
iret
mov
negl
dec
pop
push
add
xor
jb
push
adc
clc
jg
add
fcoml
mov
add
aas
adc
push
pop
xchg
pop
jl
test
lahf
cmp
stc
ljmp
xor
std
jg
shll
aaa
jmp
sbb
imul
push
xor
mov
iret
cmpl
push
leave
add
das
gs
scas
imul
mov
dec
je
std
mov
cmpsl
sbb
jno
cmp
or
adcl
inc
mov
xchg
mov
pop
out
cmp
lea
jl
mov
jle
push
cmp
sbb
push
addl
mov
cmp
inc
and
and
and
addr16
test
or
test
es
push
inc
or
sbb
repnz
sbb
push
inc
sub
fldcw
cltd
lret
add
sub
in
dec
add
sbb
add
movsb
inc
xor
adc
jp
sbb
lods
add
mov
pushl
test
icebp
sbb
loope
add
fistl
pusha
cmp
popa
inc
add
or
add
push
push
or
mov
pusha
add
sbb
lds
or
clc
out
jmp
movsb
inc
sbb
mov
std
xor
xlat
or
mov
mov
add
push
mov
inc
jmp
mov
push
jnp
xor
inc
jbe
iret
shrl
sbb
cmp
mov
pusha
arpl
jo,pt
cli
mov
xchg
cmp
or
jecxz,pn
cli
js
dec
mov
cmp
add
mov
sahf
xor
push
mov
xchg
pushf
jl
add
add
sub
push
or
scas
negb
ss
test
shlb
pop
sbb
in
inc
xor
iret
fs
aad
hlt
sbb
sarl
jl
mov
or
xchg
push
imul
in
shll
push
stos
adc
push
xor
push
and
sub
popa
stos
aaa
push
scas
mov
jp
jle
inc
testb
add
int3
cld
sbb
jp
lahf
add
cld
lea
sub
outsl
into
rol
imul
mov
push
cld
xchg
or
jo
sbb
ret
or
aas
xchg
cltd
popa
xchg
lds
rolb
mov
sub
add
cmp
xor
inc
test
test
add
gs
push
pop
add
pusha
mov
loopne
cltd
xor
or
push
fistpl
or
std
or
xor
or
push
mov
mov
mov
adc
ret
jo
femms
jo
dec
les
sub
adc
sub
or
adc
lods
nop
stos
push
push
or
mov
ds
inc
leave
adc
loopne
mov
sbb
rorl
stc
mov
push
call
pop
sub
xchg
or
xchg
mov
xor
or
pushf
fldcw
add
pop
or
subb
dec
movsl
loope
insb
mov
push
sub
aad
mov
pop
hlt
data16
je
cli
verw
sbb
push
push
aaa
mov
push
cmp
divl
mov
test
aaa
sbb
ja
cmpsb
cmpsb
or
push
jg
insl
and
loopne
mov
imul
add
xchg
inc
cmp
sbb
lock
sbb
mov
xor
cltd
in
pop
mov
add
cmp
inc
lods
xor
imul
inc
inc
and
and
and
and
scas
fs
push
in
adc
mov
mov
pop
hlt
lock
add
mov
fwait
inc
add
mov
sbb
mov
push
fstl
add
cmpsb
push
arpl
xchg
bound
mov
rolb
and
bound
rcll
add
clc
mov
sbb
and
push
es
lret
pop
xor
loopne
add
or
nop
loopne
jnp
js
push
push
mov
or
xchg
rorl
sahf
cmp
push
xchg
test
inc
or
mov
popa
in
sbb
sbb
orb
xchg
dec
pop
and
xor
xchg
adc
inc
fsubp
mov
push
adc
out
pop
xchg
cwtl
or
push
jmp
inc
aas
bound
dec
setge
lea
jo
inc
notb
sub
or
ljmp
lahf
jne
push
xchg
out
inc
rol
inc
rorb
and
loope
or
clc
xchg
xor
or
popf
lldt
dec
test
dec
jge
and
movsl
rcll
shlb
icebp
popa
mov
testb
je
sbb
stc
add
xor
cmp
call
mov
rclb
lods
es
lods
pop
mov
jnp
push
in
adcb
daa
mov
push
sub
cld
pop
loopne
inc
jecxz
test
dec
dec
test
push
insb
or
pop
add
xchg
xchg
or
lret
enter
push
fisttps
push
push
dec
fldenv
fidivs
and
dec
cli
enter
push
push
push
pushf
nop
xor
inc
or
mov
test
push
inc
inc
push
mov
inc
imul
mov
inc
adc
add
pop
mov
inc
stos
mov
or
add
add
add
stos
sbb
lock
and
scas
push
push
mov
ret
ret
mov
adcb
push
mov
or
aas
rcrl
inc
into
cmp
push
dec
mov
test
mov
mov
jb
pop
and
mov
add
push
orb
movsb
sbb
push
cmpsl
sbb
out
stos
movsb
sbb
fsubrl
mov
dec
inc
dec
pusha
pop
mov
loope
ret
je
push
xchg
xor
lods
inc
lds
lods
rorl
jo
pop
jb
call
add
ljmp
ja
add
jmp
xor
add
cmpl
cmpsl
cmp
mov
mov
xchg
sbb
sbb
es
jp
mov
mov
mov
aaa
out
push
test
daa
lods
adc
pop
shrb
cmp
mov
lock
xchg
jne
mov
lea
mov
mov
mov
lea
mov
lea
jge
mov
pop
add
push
hlt
sub
out
ret
jo
add
fdivrp
pop
ret
cmp
mov
cmp
jne
mov
or
cli
add
jl
out
xorb
test
xchg
pop
call
sbb
jmp
push
pop
loop
xchg
sbb
push
and
pusha
les
imul
add
xor
sbb
mov
mov
push
mov
or
mov
inc
sysret
mov
mov
cmpb
mov
cltd
dec
lcall
push
sub
mov
ss
push
lcall
stos
decl
adc
jle
test
jg
hlt
push
out
mov
cmp
sahf
adc
or
or
lock
scas
adcl
in
add
sub
add
testl
mov
push
add
pusha
add
mov
push
push
pop
shlb
xor
jge
addb
push
flds
inc
push
icebp
movsl
in
test
mov
xchg
mov
push
adc
out
gs
je
adc
xlat
xchg
fisubrl
push
es
ret
outsb
add
pop
mov
mov
add
rcr
sahf
jl
mov
push
jg
push
add
push
or
icebp
jmp
ret
pushf
fildl
mov
fucom
loop
sub
or
xor
es
out
adc
pushf
ret
pop
pop
jmp
jae
cmpsb
pop
xchg
push
ret
mov
test
leave
and
pop
push
jbe
icebp
dec
les
stos
mov
push
or
or
lods
loope
jae
outsl
pusha
push
push
pop
andl
lcall
add
xchg
add
add
inc
scas
adc
jle
popa
cmp
popf
sub
rcrl
adc
or
dec
jb
add
inc
add
add
cmp
push
push
mov
adc
cmp
jle
iret
jno
rolb
cmp
add
mov
push
xor
frstor
hlt
scas
push
push
mov
pop
jb
add
and
movsl
ret
incl
adc
cmpsb
leave
sub
and
sbb
push
mov
addr16
adcb
aaa
xor
mov
jl
mov
lds
fwait
dec
lea
cmp
jle
pusha
sub
cmp
jle
jp
inc
pop
lock
lock
sbb
pop
mov
jo
dec
add
sbb
fst
push
mov
mov
pusha
ja
push
lea
rorb
jmp
dec
and
enter
data16
push
push
xor
jb
rcrl
aad
in
mov
and
mov
push
add
out
int
mov
and
pop
test
scas
add
lea
adc
enter
sbb
inc
add
push
cld
lcall
inc
or
in
sub
adc
inc
aam
jmp
ja
and
jle
xchg
pop
add
mov
add
dec
mov
push
dec
loop
cmp
pop
xchg
mov
pop
pop
lahf
xchg
jo
add
mov
pop
push
add
addr16
stos
dec
fmuls
je
lea
xor
dec
es
insl
clc
lods
push
sbb
andl
add
addl
xchg
mov
sbb
dec
lods
loope
aaa
adcb
js
sbb
pop
jo
add
xchg
mov
push
push
in
mov
ss
or
and
cmp
shl
sbb
sbb
leave
sbbb
xor
je
push
jg
mov
cmp
icebp
out
and
lahf
xchg
jl
xor
mov
xor
inc
dec
pop
push
xchg
mov
push
sub
test
xor
sub
xor
stos
fcmovnb
outsl
loop
fldl
bts
loopne
inc
test
mov
and
jmp
push
ja
or
cmp
cmp
subl
cmp
jne
test
movsb
cmp
inc
scas
fildl
sbb
add
jge
cld
sbb
xchg
inc
rcll
int
dec
push
imul
inc
mov
jb
leave
mov
ret
push
sub
adc
lret
jo
aaa
push
jmp
sub
imul
je
dec
scas
movsb
push
lods
pusha
sbb
push
add
sub
decb
sbb
adc
adc
add
push
xchg
sbb
or
pop
addb
add
mov
pop
push
mov
add
adc
es
jb
sub
in
xchg
sub
push
sub
push
icebp
and
mov
lods
lea
sbb
cld
jne
cli
aam
xchg
push
jnp
push
pop
dec
loopne
in
dec
imul
fldcw
xchg
or
and
sub
dec
outsb
add
xor
inc
adc
mov
mov
ljmp
and
cmc
inc
inc
push
pop
popa
xchg
add
shrb
mov
movsl
mov
and
aam
inc
stos
sbb
test
xchg
fimull
xor
out
add
fwait
sbb
test
add
roll
inc
scas
add
pop
pop
or
fwait
sbb
xor
xlat
jmp
mov
pushl
mov
enter
pop
mov
scas
sub
sbb
push
mov
cmp
pop
inc
scas
xchg
testl
lds
add
adc
dec
dec
ds
hlt
and
es
cmp
cs
xchg
fists
ret
sub
ja
movsb
pop
inc
push
push
cmp
sub
movsb
ret
or
sti
mov
adc
sub
subl
adc
pop
jl
push
xchg
or
add
daa
jmp
sbb
sbb
subl
test
in
pop
xor
jno
fnstsw
pop
add
jns
ret
push
xor
into
push
ficoml
mov
cmp
cmp
add
inc
sub
add
push
jo
add
addb
push
scas
push
ds
mov
inc
jle
jo
or
out
leave
hlt
mov
dec
inc
inc
or
adc
add
or
in
pop
cmp
push
cmp
mov
push
andb
in
inc
mov
inc
and
orb
mov
fsubs
lock
sub
cmpsb
pusha
add
fadd
mov
shr
or
adc
xchg
mov
jb
insb
pop
sub
push
add
adc
sbb
xchg
icebp
loope
insl
sbb
test
or
add
arpl
mov
inc
in
sub
das
push
mov
cmp
push
push
jo
inc
lea
mov
flds
and
adc
inc
push
push
and
xchg
mov
pop
cmp
pop
and
jno
xor
hlt
sub
or
nop
xchg
push
orb
inc
jb
push
adc
and
test
test
aaa
xchg
push
adc
mov
xor
or
add
das
nop
mov
add
cmp
out
jg
mov
cmpsb
or
lods
adc
and
das
movsb
nop
test
rcll
xor
push
mov
inc
xchg
nop
inc
scas
dec
add
sbb
add
icebp
inc
adc
push
sbb
mov
sbb
pop
adcb
mov
sbb
push
fimuls
jno
push
pop
sub
cmc
sub
mov
or
outsb
lahf
cmp
adc
adc
sti
pushl
mov
dec
clc
or
inc
push
sbb
inc
lock
fldenv
cmpsb
sbb
imul
sub
and
xchg
sbb
add
scas
lods
xchg
into
subb
insl
mov
xchg
test
mov
aad
das
test
or
repz
xchg
out
mov
notl
ds
add
mov
andl
bound
shlb
push
inc
mov
cmpsb
loope
and
jge
lea
bound
inc
and
and
icebp
mov
xor
xchg
xchg
int
dec
stos
add
sbb
loope
push
mov
dec
addb
push
xor
lcall
sub
cmp
jge
clc
test
cmp
pop
lds
clc
xchg
cmp
sti
push
js
or
pop
out
mov
jmp
add
sahf
stos
in
add
cwtl
push
inc
mov
adc
sub
mov
mov
iret
rcrb
loopne
adc
inc
jb
incl
or
into
dec
pusha
adc
add
ret
cmp
call
dec
mov
add
test
aaa
push
clc
adc
xor
adc
or
fld
adc
lcall
sbb
repnz
outsb
std
pop
cmp
clc
jb
pop
pop
clc
jg
mov
or
pop
jmp
incl
lea
push
push
inc
sub
add
aam
pop
xor
dec
imul
lea
cmp
lods
ret
mov
imulb
xor
adc
imul
add
in
pop
dec
rorb
mov
clc
sub
lret
add
mov
inc
xor
lea
pop
out
xor
push
ret
push
dec
popa
jns
mov
jo
fimuls
cs
imulb
imull
cmp
mov
add
pop
push
out
inc
lcall
pavgb
push
or
mov
ljmp
add
mov
xchg
xor
andl
lods
mov
push
cwtl
adc
std
insb
sub
and
add
or
gs
dec
or
adc
add
mov
ret
adc
inc
jb
pusha
popa
jg
push
in
std
and
lea
jmp
out
ffreep
mov
pusha
dec
mov
mov
in
rorl
ret
ret
jbe
shl
jb
mov
push
orb
and
jbe
push
in
push
int3
push
mov
or
pop
loop
lea
ret
pop
jp
xchg
sub
insb
adc
push
pop
pushl
jno
dec
or
popa
cmpsl
sub
fwait
sti
push
or
adc
adcb
ss
or
pop
jo
jmp
int3
add
nop
or
out
inc
cmp
pop
mov
add
inc
add
out
add
pop
dec
add
jne
add
lea
cmp
or
je
adc
mov
add
movl
or
mov
gs
andb
lock
pop
sbb
not
call
jae
es
lods
adc
push
push
fimull
push
mov
pop
imul
and
in
push
js
pop
stos
insl
inc
aad
sbb
add
push
lods
sarl
mov
jge
xor
test
adc
pop
das
add
sub
inc
ss
into
pop
sbb
rcr
pop
xor
pop
push
pushf
pop
es
add
cld
dec
add
shll
dec
cmpb
xor
iret
int3
sbbb
inc
push
xor
sbb
aas
inc
clc
cmp
call
push
nop
fadds
cmpsb
push
mov
push
rorl
decb
mov
sbb
push
add
test
pop
out
xor
sbb
fiaddl
sahf
ja
in
xor
negb
dec
inc
es
inc
sbb
add
dec
and
sbb
scas
lea
mov
ja
sarb
ret
sub
push
mov
add
inc
and
xchg
cli
ret
or
or
rclb
mov
leave
mov
aas
mov
inc
add
rol
ret
ret
add
sti
mov
lock
push
pop
sub
push
push
rcll
push
dec
cmp
dec
bound
jle
arpl
clc
es
fcompl
pop
ret
sbb
testl
fisttps
jle
shrl
mov
add
or
hlt
add
push
push
and
push
xor
xor
xor
push
mov
decl
cld
adc
lock
xorl
mov
in
and
cmp
cmp
sti
add
ret
mov
pusha
push
fs
jle
lock
and
mov
inc
dec
push
and
inc
jne
aad
inc
push
cmp
in
stos
mov
div
popa
push
stos
or
pushf
pop
mov
fsts
inc
inc
jnp
cmp
mov
jnp
jae
mov
loop
pop
mov
sbb
mov
add
jb
pop
lea
popa
push
popf
add
imul
insb
jl
mov
testl
pop
and
dec
add
in
sub
mov
loope
cmp
sub
mov
jmp
cmp
aas
xchg
dec
sbb
and
add
sbb
add
mov
and
add
dec
inc
pusha
rol
pushl
and
cld
ret
mov
or
fimuls
mov
sub
nop
cmp
lea
jne
push
fadds
cmp
add
je
push
orb
push
pop
adc
cmc
mov
mov
fcoms
ret
cmp
fsts
sbb
shlb
sbb
aaa
lods
mov
les
mov
in
call
mov
clc
es
xlat
testl
movsb
adc
xchg
imul
ret
ljmp
outsl
dec
or
leave
mov
inc
aas
mov
cmp
cmp
adc
sbb
xor
loope
mov
push
or
dec
or
mov
jg
and
cmpsb
sahf
xor
outsb
imul
xor
pop
inc
add
mov
xchg
add
or
hlt
jl
int
movsb
mov
enter
cwtl
pop
fcomps
or
push
or
call
arpl
push
dec
adc
and
push
xor
dec
aaa
or
jecxz
ja
sub
in
inc
inc
mov
mov
pop
outsl
or
loope
mov
movl
or
sub
or
dec
push
dec
cmp
pop
xchg
hlt
mov
movl
or
hlt
jle
fdiv
xchg
sbb
int3
lea
push
xchg
cld
jg
inc
js
ret
jge
mov
test
fbld
pusha
sbb
ret
jb
jmp
mov
sbb
cltd
push
mov
mov
adc
lret
jbe
outsb
pop
cmp
sbb
pop
sub
pop
add
loopne
fwait
cs
xor
sub
lret
je
cmp
pusha
enter
xchg
roll
add
adc
push
sahf
imul
mov
mov
mov
jo
xchg
and
add
mov
movsb
subl
jl
push
inc
mov
movsb
cmp
ret
repz
jp
adc
dec
out
cmpsl
mov
pop
daa
mull
mov
or
sbb
mull
inc
imul
jge
add
std
or
push
adc
out
sti
mov
insb
pushf
xchg
cmp
ficompl
leave
shll
sub
push
add
pop
and
mov
push
mov
pop
fisttpl
call
jecxz
sbb
fcmovb
adc
stos
iret
sub
mov
sbb
imul
in
xchg
fisttps
xchg
icebp
mov
pusha
fwait
mov
sti
test
and
lods
aas
add
push
test
push
pop
movsb
cmp
daa
in
or
pusha
test
inc
lret
mov
dec
lods
or
mov
sbb
adc
enter
outsb
loop
lods
push
out
cwtl
outsb
pusha
les
add
dec
leave
pusha
loopne
rcll
lods
mov
ret
jne
dec
or
sbb
inc
or
jo
mov
loopne
push
mov
push
mov
repnz
xchg
dec
add
xor
sub
mov
push
mov
mov
inc
xchg
or
fdivr
or
scas
shr
sub
push
mov
mov
adc
sub
sbb
fs
leave
inc
mov
dec
jmp
push
arpl
mov
fcompl
or
loopne
lock
push
fdivl
es
pop
rclb
jl
sbb
xor
pop
es
repnz
xor
dec
or
mov
aaa
xchg
in
or
lret
and
mov
mov
add
fiaddl
out
fdivrs
jne
push
loopne
mov
lcall
sub
and
inc
out
lcall
sbb
ffree
or
push
sub
add
push
imul
nop
lret
add
xor
sub
xchg
adc
repz
or
mov
xchg
test
adc
movsl
adc
out
hlt
pusha
sahf
xorb
shlb
sub
lret
mov
push
add
push
add
pop
insl
lea
sbb
or
mov
mov
lret
js
std
ret
mov
or
sbb
push
aam
pop
cmc
cmpsl
xor
out
sahf
and
adc
fdivl
adc
jno
adc
push
sbb
push
shrl
push
pop
cmpsl
ror
mov
mov
sbb
popf
adc
mov
loopne
adc
mov
dec
fstl
dec
sbbl
dec
mov
mov
mov
in
push
add
rorb
imul
add
outsl
cmp
shlb
adc
xor
and
mov
xor
mov
inc
fidivrs
cmp
fsub
outsl
mov
mov
cmp
push
sbb
push
popf
mov
jne
mov
lret
scas
fnstsw
mov
xchg
sbb
pusha
cmp
sub
mov
loopne
insb
adc
int3
jp
xchg
sar
jno
test
push
push
mov
inc
orb
imul
sbb
cmp
out
pop
pop
imul
je
mov
sbb
jl
cmp
rcrl
adc
adc
inc
call
pop
xor
scas
jne
div
jmp
jae
lea
mov
add
adc
push
mov
es
and
test
pop
add
xchg
cmpsb
push
hlt
adc
push
or
sbb
xchg
stos
xor
test
aad
dec
pop
ret
cmc
test
and
inc
mov
pushf
mov
push
and
or
cmc
nop
or
enter
popa
mov
cmc
sbb
push
jle
mov
sbb
leave
daa
adc
sub
and
orl
test
jae
xchg
ss
push
sub
pop
and
pop
mov
add
aad
push
jge
lea
mov
lret
pop
fadds
test
xlat
inc
add
pushf
in
fwait
sarb
ljmp
insb
xor
je
mov
sbb
or
and
sub
insb
test
movl
popa
pop
sbb
inc
mov
lods
push
pop
cs
dec
push
push
sbb
pop
xor
popa
push
dec
or
scas
add
pop
pop
pop
repnz
in
xchg
inc
outsb
xchg
xor
xor
xor
leave
push
mov
inc
shlb
or
pusha
xchg
and
pop
lea
ds
jo
mov
xchg
xor
enter
adc
sub
mov
xchg
pushf
cmp
push
xor
add
xchg
mov
push
test
incl
mov
addl
mov
icebp
mov
stc
into
ja
pusha
lock
lock
push
push
cltd
mov
push
push
push
jmp
ljmp
xchg
pop
rolb
jo
aaa
mov
mov
cld
les
jo
cmp
cmp
data16
xchg
pop
mov
scas
xorl
add
movsb
cmp
in
add
xchg
add
or
and
pop
push
xorl
mov
cmp
mov
popf
sbb
lret
dec
ja
outsl
xchg
out
xor
mov
pop
shll
push
mov
cmp
and
orl
mov
mov
jmp
repz
andb
std
adcl
je
movntps
scas
aam
add
movsb
adc
xor
push
sub
addb
mov
xchg
movsl
mov
nop
cmp
push
sub
xchg
ss
das
dec
or
sub
push
inc
adc
movsl
mov
pop
push
jecxz
sti
push
mov
cli
xor
mov
ds
xor
lea
sub
xchg
scas
sbb
mov
cmpl
push
sub
sub
out
and
mov
mov
repnz
mov
inc
adc
sbb
cmp
mov
jne
xchg
inc
mov
ss
movsb
scas
mov
xor
mov
aaa
xor
mov
jl
ret
adc
mov
ja
jnp
lods
inc
inc
mov
jecxz
push
inc
leave
nop
loopne
aaa
loopne
mov
pop
rolb
pop
push
pop
mov
jp
in
test
outsb
xchg
ret
xor
inc
pop
andl
push
fmuls
inc
add
dec
inc
sbb
push
rcrb
mov
push
mov
cld
sub
ljmp
push
add
xchg
mov
repz
xor
sbb
adc
insl
sbb
leave
cld
sub
pop
cmp
out
add
or
adc
mov
add
mov
pop
dec
cltd
or
pop
add
xorb
pop
aas
sbb
imul
clc
push
mov
lret
xor
iret
adc
bound
repnz
or
adc
xlat
mov
sub
aam
pushf
xor
das
es
mov
nop
push
pop
jmp
jne
mov
push
lds
jmp
fucomip
sub
or
in
popa
pop
popa
mov
jmp
or
mov
and
xchg
or
pop
test
push
sbb
or
xchg
loopne
push
add
add
inc
andl
push
aad
pop
test
jp
jge
or
mov
push
push
aam
lock
sub
js
dec
and
cmpsl
lahf
insb
int3
les
les
push
xchg
pop
sbb
xor
cmp
jmp
mov
sub
push
xchg
nop
xorps
test
decl
repnz
push
ret
or
push
jmp
subps
mov
jo
and
push
inc
inc
push
pop
add
add
add
inc
sbb
fstpl
adc
scas
jb
dec
or
jno
xchg
pop
imul
insb
in
mov
push
xor
sbb
inc
adc
jo
push
adc
jns
shll
fistps
or
popa
loopne
pop
popa
cmp
mov
rorb
mov
popf
mov
pop
pop
dec
test
push
add
add
cmp
mov
jb
sub
sbb
push
dec
inc
push
mov
xor
cmp
lods
adc
mov
test
in
hlt
lock
cmp
wbinvd
push
fadds
inc
push
lods
inc
sub
add
mov
test
sbb
mov
nop
adc
cs
jmp
pop
mov
push
add
add
sbb
jnp
fsubr
mov
and
leave
push
cltd
and
jg
int3
inc
sub
leave
mov
scas
orb
mov
push
sub
jo
loop
mov
out
dec
sbb
scas
mov
cmp
ds
stos
pop
inc
leave
push
xlat
jmp
lea
push
or
repz
push
popa
test
pop
call
loop
insb
or
fldl
cmp
push
sub
int
adc
aas
into
call
ja
rclb
push
outsb
mov
and
outsb
ret
mov
mov
daa
jle
ret
jle
fs
aaa
xor
dec
ja
imulb
mov
mov
int3
mov
dec
shll
cmp
pop
sub
and
sbb
arpl
mov
and
or
xchg
xchg
lock
mov
or
shlb
in
push
pop
and
ret
or
pop
sub
sbb
pop
repz
pusha
pop
lods
sbb
icebp
add
lea
insl
push
orb
ljmp
push
or
lret
std
add
sarb
or
adc
inc
push
mov
nop
add
sub
pop
decl
pop
or
sub
xor
push
push
sub
shr
mov
pop
add
mov
xor
es
pop
mov
inc
pop
inc
loop
pop
mov
ficompl
jne
jnp
sub
mov
test
pop
cmp
in
xchg
and
inc
int3
dec
or
fmull
icebp
mov
pusha
lock
movsb
bound
push
xchg
hlt
adc
xor
clc
lea
xlat
push
mov
xchg
push
and
shr
movzbl
shr
movsb
addr16
adc
push
push
rcll
push
push
pop
sbb
jp
imul
mov
ret
inc
add
fimull
cmp
jne
mov
push
cmp
sbb
add
das
pusha
sbb
jo
push
pop
lea
insb
dec
jbe
popa
jl
adcl
fwait
arpl
int3
mov
jmp
jne
lahf
and
push
mov
fsubrs
fwait
mov
lahf
test
and
jle
xorb
and
sub
sbb
insl
push
push
mov
jns
test
and
test
nop
inc
dec
popa
and
mov
stos
sub
sahf
and
and
adc
daa
cld
scas
xor
stos
decl
or
mov
cmp
jg
dec
push
push
xchg
mov
mov
adc
xchg
ret
and
or
cli
into
cmp
insl
push
daa
dec
lods
jl
mov
rcl
push
mov
bnd
or
adc
push
imul
adc
or
ljmp
inc
insb
jge
cmp
jne
push
adc
inc
jno
adc
and
ret
addr16
pop
testl
daa
fistps
clc
adc
push
cltd
fstpl
pop
cmp
popa
mov
filds
xchg
inc
cld
lea
je
cmp
je
clc
sar
pop
movl
xor
incl
hlt
imul
mov
cld
cmpb
push
jo
push
mov
and
adc
push
pop
les
push
cmpsb
dec
divl
scas
push
stc
sub
inc
adc
xor
inc
cmp
inc
vorps
push
std
aaa
adc
call
out
mov
or
sbb
mov
dec
adc
les
repz
cs
stos
imul
xchg
sbb
push
sub
dec
cmp
into
push
cmc
jecxz
mov
jl
clc
push
dec
pop
mov
repz
cmc
xor
push
add
ret
xor
mov
pop
mov
sub
add
sbb
hlt
add
cs
push
add
sbb
into
dec
hlt
sub
stc
inc
dec
lock
cmpsb
mov
jge
pop
inc
aam
fildll
add
adc
push
inc
push
and
jge
and
and
and
adc
cmp
mov
xor
outsl
cltd
and
sbb
xor
xor
cmp
loope
xor
test
xchg
ljmp
mov
cmpb
xlat
mov
mov
ds
and
mov
pop
jb
push
cld
adc
cmpb
call
inc
pop
jnp
cltd
cmc
hlt
or
repz
sbb
or
push
xor
mov
or
aam
cltd
mov
push
mov
je
mov
add
and
add
and
adc
aam
cmp
push
adc
hlt
lods
stos
or
js
iret
jmp
dec
hlt
add
mov
mov
jae
jg
sbbb
clc
cmp
cmp
dec
xor
xchg
jae
repz
or
or
sbbb
inc
push
adc
sbb
cwtl
and
stos
jg
test
inc
or
cmpsl
xor
push
lock
add
xor
outsl
daa
adc
icebp
sbb
dec
das
jmp
pop
aaa
xor
ret
cmp
mov
pop
push
into
scas
sbb
sbb
push
lret
mov
andl
dec
add
jo
popf
cmpsl
addr16
scas
jl
inc
movsl
movb
mov
or
pop
inc
or
xor
je
es
inc
mov
inc
inc
add
and
xor
js
loop
and
je
sbbl
and
stc
mov
add
dec
jae
rorb
cbtw
and
xor
mov
mov
jl
mov
pop
dec
adc
mov
xor
mov
int
js
clc
mov
push
mov
sahf
push
out
push
test
adc
movl
test
cmp
enter
push
nop
aas
sub
adc
sbb
ss
in
push
sub
add
pop
push
into
add
scas
cmp
or
test
adc
stos
inc
inc
mov
xchg
or
adc
push
jne
jne
push
sbb
add
push
pop
and
punpckhbw
push
xor
mov
push
push
mov
mov
movsl
push
adc
xchg
in
les
js
hlt
push
jno,pn
adc
adc
adc
sub
sub
popa
test
sahf
adc
jp
dec
lcall
ret
pop
cwtl
pop
inc
mov
mov
mov
pop
and
movsb
xchg
adc
lret
lret
and
xor
inc
lea
mov
and
push
dec
jb
adc
or
cmp
cmp
popf
jmp
sub
imul
adc
or
mov
or
test
popa
bound
out
aaa
add
fsts
xorl
dec
je
mov
mov
push
mov
ss
nop
je
cmc
scas
add
into
pop
hlt
jecxz
push
mov
out
jb
adc
add
mov
scas
orl
loop
sbb
sub
mov
in
pop
or
dec
sbb
cld
adc
mov
push
je
pushf
mov
adc
loopne
add
xchg
into
shrl
push
and
mov
mov
movsb
mov
and
jl
jo
test
rol
fidivs
sub
pop
testl
inc
add
push
je
add
flds
xor
cltd
inc
push
jne
cmp
mov
push
in
pop
jg
or
pushf
mov
jmp
push
push
fcomip
nop
pop
lea
in
outsl
scas
subl
mov
sbb
leave
sub
push
xchg
push
xlat
dec
outsl
mov
xchg
cwtl
mov
mov
push
jp
push
push
jp
fldenv
mov
dec
adc
aad
leave
rcll
sbb
mov
leave
and
mov
dec
mov
sub
mov
mov
js
das
mov
addb
jmp
add
dec
push
or
test
leave
add
add
cmp
stos
movsb
add
adc
mov
adc
test
push
cmpsb
es
addps
into
clc
inc
enter
push
mov
cmp
push
lahf
aam
adc
ret
xor
adcl
pushf
dec
sbb
fs
push
shlb
add
and
and
inc
lea
cmp
push
mov
lret
pop
pop
lret
push
push
popa
push
xchg
dec
cwtl
pop
xchg
push
push
mov
rcrl
and
rcl
gs
push
mov
dec
push
icebp
inc
mov
mov
cmp
xor
xor
jne
mov
lods
sub
aaa
push
xor
dec
sbb
in
adc
sbb
mov
push
pusha
xchg
sahf
fcmovne
lret
push
popf
and
adc
xchg
stos
rcll
push
adc
imul
stc
rcl
and
pop
adc
divb
out
movb
push
push
icebp
adc
or
sahf
mov
icebp
bswap
aam
gs
push
in
sbbb
test
add
imul
test
or
sub
arpl
add
and
ds
outsb
add
xchg
adc
and
test
rol
and
push
sbb
push
inc
loop
mov
push
movl
in
push
notb
cmpsb
lods
stc
sub
outsl
or
aas
pop
or
adc
pop
sub
inc
sbb
movl
jmp
sbb
and
dec
and
aam
jge
icebp
pop
clc
adc
incl
test
cmp
and
sub
pop
in
jp
push
mov
scas
fdivrs
mov
and
dec
pop
add
movsl
inc
push
test
lret
and
jno
imul
push
inc
mov
in
push
and
nop
inc
push
sbb
lock
lret
push
lea
insl
and
sbb
out
leave
aam
aad
inc
fcoms
sti
push
sbb
insl
sub
stos
and
jl
mov
ficoms
lea
mov
push
test
and
popa
cmp
add
xor
andl
mov
cmp
fwait
sbb
sub
and
xchg
or
mov
push
or
pop
int3
mov
pop
repz
enter
push
rorb
sbb
loope
in
xchg
int3
xor
and
incl
dec
add
frstor
aas
sub
and
push
push
push
lea
pop
std
push
jle
jbe
pop
pop
mov
mov
fsts
rcl
int
push
test
lds
cmp
push
pop
bound
mov
rol
adc
add
mov
cmp
adc
fsubl
push
lahf
or
test
adc
imulb
test
fxch
push
sub
mov
jno
xrelease
popa
test
nop
lock
lcall
scas
dec
cmp
je
cwtl
adc
sbb
in
inc
mov
mov
addr16
aas
and
push
test
sahf
loopne
add
xchg
mov
fs
add
fcoms
lea
cmp
jne
cmp
aaa
ret
shlb
push
sbb
add
sbb
jg
jle
dec
addl
outsb
sti
adc
outsb
outsb
push
push
jmp
cmp
fcomps
aaa
mov
add
ret
jae
js
push
jg
inc
es
mov
jle
jo
xor
push
mov
xor
sbbb
push
dec
out
xor
into
xor
sbb
mov
sbb
jmp
inc
cmp
je
inc
add
cmp
jl
jmp
shl
mov
repz
loopne
inc
hlt
insb
xor
shlb
sbb
sbb
push
jnp
and
inc
mov
sbb
xor
sbb
add
testb
shlb
pushf
add
inc
push
sbb
pop
lock
add
cmc
out
jne
out
add
add
push
sub
mov
aas
add
mov
shrl
add
inc
aam
sbb
cmp
push
push
js
fidivrl
nop
xchg
pop
in
push
sbb
ret
std
test
mov
adc
sbb
std
and
lock
das
inc
cmpl
or
test
mov
sub
je
aas
sbb
cmp
add
mov
mov
push
xor
cmp
adc
add
frstor
sbb
sub
push
pop
sub
fisubl
adc
and
mov
out
mov
mov
or
push
and
add
loope
add
sbb
push
adc
xchg
mov
push
mov
dec
int
xor
call
push
sbb
loopne
mov
mov
das
and
and
mov
testl
cmp
pop
ret
pop
xor
outsb
sahf
xorb
and
push
jmp
rolb
clc
adc
push
push
xchg
add
xchg
testb
add
sbb
sub
hlt
adc
add
cmp
outsb
jl
rorb
js
or
and
jp
inc
mov
pusha
nop
jno
dec
stos
andl
mov
jl
xor
xchg
cli
push
mov
sbb
out
push
fimuls
fmull
push
push
in
sub
test
push
pusha
mov
cmp
sub
mov
rolb
adc
daa
shll
and
stc
jp
pop
mov
adc
mov
pushf
jl
adc
fdivrs
push
cli
test
stos
push
mov
rolb
int
add
push
nop
push
push
push
cmp
loope
sbbb
jp
loope
xor
jnp
ljmp
push
xor
adc
adc
ficoml
mov
add
lods
xchg
cmp
xor
or
or
adcl
push
cmpsl
push
or
adc
fcoms
pop
or
add
mov
mov
sub
movsb
dec
inc
jnp
inc
adc
mov
sbb
dec
and
outsb
adc
mov
shlb
cmp
or
rcr
cmpsb
int
jne
cmp
jb
sbb
add
cmp
jns
sti
jae
call
lods
mov
jmp
xor
mov
call
add
ja
push
push
push
inc
or
mov
call
dec
pop
sbb
mov
fnstsw
std
jl
adc
adc
add
inc
loop
push
xor
cmp
shrb
and
jle
aad
sub
cld
push
add
cmp
jl
pop
std
adc
adc
rorl
mov
inc
cwtl
mov
stos
adc
loop
sbb
lahf
jl
jl
adc
push
movb
notb
mov
sub
pop
add
adc
xor
mov
ds
mov
out
inc
add
mov
mov
mov
sub
add
push
stos
push
pop
sarb
and
mov
ret
lret
jo
leave
dec
push
pop
adc
xor
enter
int3
add
or
insl
dec
or
rcrl
inc
cmp
das
inc
add
cmp
push
pop
dec
and
test
jo
scas
inc
add
lds
loopne
mov
les
mov
sbb
pop
das
xchg
mov
and
js
data16
dec
fcoml
inc
adc
mov
iret
cmp
jns
push
inc
cmpsb
inc
pop
or
push
jmp
or
mov
mov
dec
ljmp
nop
into
sti
lds
or
xor
int
dec
add
push
xor
adc
add
add
or
inc
dec
or
adc
and
jns
fsubrs
adc
adc
push
mov
rorl
enter
push
sbb
adc
and
add
adc
scas
cwtl
mov
dec
test
or
in
pop
adc
and
sbb
sbbb
sqrtps
call
or
or
or
cltd
adc
int3
cmp
mov
adc
jae
outsl
xlat
push
jle
dec
sub
sbb
jmp
jmp
call
in
xor
andb
jb
inc
lock
addl
movsb
jge
loop
mov
inc
les
call
pop
push
mov
add
push
rol
or
cmp
leave
mov
je
lock
sbb
add
loope
jno
sbb
push
push
ficoms
or
jl
push
dec
mov
mov
loop
mov
loopne
add
scas
leave
pop
xchg
mov
dec
adc
loope
mov
cmp
adc
pop
movsl
test
pop
mov
rolb
push
inc
test
push
mov
push
scas
and
push
mov
xor
sbb
orl
mov
fmull
push
or
pop
or
rorb
push
xchg
inc
sub
adc
stos
dec
adc
adc
sub
adc
sbb
pushl
ljmp
and
sbb
sub
add
enter
les
dec
fmull
test
loop
inc
mov
dec
lds
ficompl
dec
fidivs
aaa
sti
adc
sub
jae
aad
dec
add
jae
cmp
add
jb
push
leave
sub
jg
adc
dec
add
add
xor
bound
sub
and
jle
push
push
dec
int
and
sub
push
or
lret
sbb
adc
adc
xchg
add
add
sub
dec
gs
xor
add
inc
xor
push
push
nop
lret
cmp
add
or
xchg
inc
push
dec
lar
add
mov
push
jo
jmp
cmp
jg
adc
in
jl
sahf
mov
mov
sbb
xchg
xor
adc
enter
test
aam
shlb
add
pop
push
or
and
fsubrs
push
movl
testl
sahf
in
popa
and
inc
or
nop
arpl
adc
in
cmp
add
add
add
stos
movlps
das
pop
fstpl
daa
pop
lods
inc
lea
out
cmpsl
dec
cmp
xchg
in
push
shlb
sbb
rcrb
pop
rclb
int3
pop
and
adc
lea
les
or
adc
adc
sbb
pop
or
lea
setne
inc
data16
push
dec
or
inc
or
imul
data16
xor
xchg
data16
pop
sub
sub
push
and
sub
xchg
and
imul
data16
or
or
imul
mov
sub
push
fmull
xchg
pushf
mov
add
mov
sbb
and
cmp
rolb
xor
cmpsb
sbb
popf
sub
mov
or
daa
add
sbb
sbb
and
mov
pop
int
scas
divb
sbb
sbb
dec
jecxz
sub
push
mov
ret
xchg
mov
and
icebp
mov
and
pusha
clc
and
jl
sub
int3
mov
sbb
mov
pop
push
loopne
dec
fnstenv
mov
push
add
add
or
out
pushf
sbb
ret
adc
or
add
loope
jecxz
sbb
roll
shll
ja
ljmp
dec
dec
stos
mov
and
jb
xchg
and
pop
and
outsb
loope
fildll
pop
mov
mov
jo
mov
pop
in
dec
and
inc
push
sub
cmp
test
data16
sub
xor
adc
inc
loopne
out
mov
pop
inc
add
sub
sub
sub
adc
addb
sbb
aad
inc
sahf
inc
push
cmp
dec
pop
mov
shlb
push
dec
nop
lds
cmp
imul
dec
sahf
mov
or
xchg
cmp
jne
enter
push
shr
add
and
mov
inc
inc
inc
pop
xchg
int3
and
call
cmp
inc
sub
mov
mov
and
xor
clc
mov
aam
and
pop
das
push
hlt
dec
add
pop
xor
inc
sub
mov
imul
rorb
leave
sbb
and
test
and
sbb
ficoms
test
mov
inc
sbb
adc
xchg
or
ret
sub
sti
add
push
cltd
mov
or
mov
sbb
mov
out
stos
push
out
fs
ja
dec
mov
push
stos
adc
push
sti
xor
outsl
sub
fcoms
inc
cmc
sbbb
push
bound
cmp
jno
xor
mov
adc
xchg
clc
adc
mov
fisttpll
aaa
jnp
xor
cmp
mov
je
mov
and
adc
hlt
cmp
or
or
sbb
inc
xchg
scas
xchg
sub
add
xor
xchg
add
inc
jno
jne
pop
test
push
cmp
push
sbb
fsubrl
daa
or
or
add
or
movl
repz
inc
mov
cmp
inc
movsl
push
ljmp
pusha
sub
add
adc
and
xor
dec
inc
push
adc
mov
pop
jb
xchg
jg
aad
pushf
xor
subl
test
jmp
push
pushf
and
push
push
cld
fisttpll
aam
mov
pusha
sbb
sbb
cmpsb
aas
call
dec
or
jns
scas
mov
dec
fcoml
lock
sbb
loopne
dec
push
pop
jns
loopne
incl
xchg
push
outsb
fidivrs
pop
enter
movsb
push
push
jle
mov
je
sub
js
push
pop
in
xchg
jne
pop
sarl
mov
cmp
testl
sub
mov
pop
or
dec
xor
addr16
lods
or
dec
popa
cmp
inc
add
jbe
mov
rorl
dec
sub
mov
and
subl
popa
add
les
inc
push
pop
jp
add
sahf
in
sbb
inc
mov
fstpl
adc
sub
or
adc
cld
movb
xchg
es
stos
ljmpw
gs
pop
add
hlt
clc
adc
fstpl
pushf
jmp
lea
push
mov
push
inc
pop
xlat
and
xchg
or
xor
pop
fisubl
dec
add
aas
sbb
jle
cmp
push
pop
or
add
cmc
sbb
push
incl
jge
jae
push
sbb
sti
jmp
mov
nop
mov
jo
lahf
xor
lret
subl
and
fs
sub
add
xor
adc
incb
dec
sbb
cmp
popa
push
and
fcomps
add
sbb
xchg
jo
movsb
cmp
and
dec
and
and
push
outsl
push
sub
push
ss
pop
or
mov
test
sub
jo
or
and
and
flds
push
jl
je
adc
rol
xor
or
cmp
jns
xor
push
repnz
movups
movsb
adc
adc
and
xchg
bound
and
fwait
inc
pushf
dec
or
inc
push
in
inc
test
and
xchg
popa
cmp
stos
inc
sub
add
push
insb
xor
xor
leave
push
cmpsl
add
fs
ret
sub
pop
adc
dec
add
dec
data16
or
add
test
pop
sub
sbb
cmp
xchg
xchg
out
xor
add
lods
add
cmp
sbb
jb
pop
stos
inc
div
add
jb
movb
int3
insl
jmp
mov
ret
and
sbb
pop
aaa
push
dec
adc
pop
adc
cmp
pop
push
cmp
pop
xor
into
pop
mov
ret
add
xor
ret
pop
adc
add
addr16
adc
pop
lret
les
daa
xor
mov
mov
or
mov
and
movsl
lea
push
sub
mov
testl
pop
repnz
repz
cmpsl
js
cmp
xchg
fdivs
ljmp
mov
gs
or
ja
or
adc
pop
loop
push
push
hlt
push
fstps
popa
jnp
and
cmp
dec
push
cs
and
dec
add
inc
xchg
xchg
inc
mov
sub
dec
and
movsb
jo
mov
cmp
xlat
xor
incl
push
idivb
je
or
clc
jl
mov
mov
je
or
hlt
outsl
mov
test
call
mov
loopne
stc
dec
sahf
int3
inc
cmp
rolb
add
adc
scas
mov
sbb
pusha
loopne
subb
xchg
sbb
test
mov
xor
loope
jg
mov
mov
jge
pop
push
or
sti
sahf
dec
push
push
movsl
lock
stc
xorl
dec
in
sub
jno
js
xchg
inc
js
mov
xor
mov
adc
cmp
aas
rorb
cmp
mov
cmp
hlt
adc
scas
sarb
cwtl
sub
sub
push
xchg
dec
sub
push
jmp
xor
lcall
add
pop
xor
add
ja
inc
xchg
lea
rcrb
pop
aam
ss
mov
inc
push
jnp
loopne
fnsave
sbb
mov
push
mov
push
mov
xor
add
xchg
or
or
rorl
push
pop
lds
lea
sbb
add
inc
adc
push
cmpsl
or
pop
cwtl
lret
sti
add
lds
mov
pushf
test
mov
cmp
les
loopne
aaa
dec
mov
xchg
cmp
or
push
push
loopne
stc
push
xchg
adc
add
mov
add
and
jmp
insb
jne
push
add
mov
push
in
or
adc
rorb
cmpsb
and
cs
jae
lock
adc
sarl
push
hlt
mov
pushf
or
fs
dec
sbbl
in
cmp
lret
adc
mov
inc
flds
push
mov
test
xor
test
aas
push
mov
mov
loop
xlat
add
cmp
sbb
ret
mov
pop
ret
mov
pop
rorl
lret
rorl
and
xor
loope
addr16
cltd
cli
and
das
lock
jmp
imull
sub
mov
test
or
fcoml
sbb
adcb
dec
jmp
into
aam
and
cmp
push
cmc
jle
mov
je
or
mov
cli
movsb
nop
test
cmp
inc
cld
adc
cld
add
inc
shll
push
pop
mov
dec
jne
lock
cltd
xlat
cltd
lods
mov
movaps
jmp
pop
mov
dec
cmp
mov
outsb
push
mov
add
sarb
adc
pop
mov
mov
nop
movsb
adc
flds
ja
ljmp
sbb
enter
adc
out
jmp
ss
pop
dec
xor
add
adc
cli
mov
icebp
adc
call
adc
aas
push
adc
or
or
push
pop
dec
leave
in
sbbb
push
inc
jb
or
push
pushf
sbb
dec
push
fidivrs
cmp
mov
inc
or
faddl
in
insl
dec
and
pusha
sbb
or
inc
in
cmp
sbb
aas
pop
inc
jb
xor
add
push
pop
and
jg
data16
pop
pop
and
dec
push
adc
data16
aad
or
pop
daa
mov
ret
push
fucomip
stos
rcrl
iret
lds
cmc
adc
mov
sbb
push
mov
xchg
sbb
cmc
pop
jnp
rorl
inc
or
inc
cmp
mov
cmpsl
and
dec
outsl
pusha
adc
adc
adc
inc
sbb
sub
es
adc
and
sbb
ud2
add
push
sbb
aad
call
mov
insb
add
and
andb
cmpsl
cmpsl
dec
or
test
mov
lret
xchg
sbb
es
fldcw
xor
dec
ret
das
add
add
enter
sbb
and
ret
and
mov
xchg
mov
movsl
dec
inc
test
mov
into
and
cld
icebp
imul
dec
insb
inc
inc
jns
xchg
nop
push
adc
cmpsb
and
mov
cs
xor
sti
ret
mov
sub
dec
movsl
andl
adc
add
sbb
inc
push
ret
pop
mov
and
or
push
out
add
fs
arpl
mov
add
decb
in
mov
or
or
mov
rol
add
mov
cwtl
and
adc
enter
into
push
addl
enter
push
push
nop
or
pop
dec
or
shll
cmc
push
movsb
inc
jp
and
cmp
popa
out
push
jmp
jns
bound
jle
outsb
push
ret
xor
sub
mov
sbb
popa
enter
and
mov
scas
das
inc
dec
push
aam
xchg
sbb
pop
sar
out
and
cmp
and
imul
inc
clc
cltd
push
push
push
xchg
xor
fldcw
adc
xchg
test
loop
mov
or
aad
lock
jb
ficomps
push
xchg
or
xchg
mov
sub
mov
or
add
push
push
imul
mov
pop
add
fistps
pop
xchg
or
inc
and
dec
push
pop
mov
sub
cmp
inc
jle
imul
int
ret
sub
or
xor
sbb
push
movzbl
movsb
and
insl
lods
push
xor
sub
pop
sub
shll
push
or
dec
push
inc
repz
aad
push
inc
fs
cmp
aad
pop
cmp
xor
mov
in
inc
nop
aas
sub
adc
sub
sub
xlat
or
and
and
add
and
pop
sbb
fisttpll
mov
pusha
fnsave
push
cld
or
inc
hlt
push
push
mov
in
add
adc
inc
jns
sub
push
mov
arpl
dec
and
lds
pusha
mov
push
and
fistpll
mov
xchg
cmp
push
pusha
sbb
clc
xor
scas
mov
sbbl
and
ljmp
mov
sub
push
and
sbbl
xor
aam
imul
sbb
mov
ret
pop
cmp
jmp
imul
add
dec
add
idivb
sbb
js
ret
je
es
jo
lock
movsb
add
xor
push
or
pop
outsb
pusha
add
xchg
push
mov
jmp
inc
xor
and
lahf
cli
pop
and
or
ret
int3
sub
rorb
cmp
insl
cs
sahf
rclb
push
std
adc
adc
je
mov
lock
xlat
jb
scas
fsubrs
push
and
ret
cmp
jae
pop
push
insb
sub
cmp
call
and
lock
cmp
push
lods
cwtl
pop
and
mov
cmp
ss
pop
adc
and
and
cmp
mov
jl
adc
js
xor
js
sub
cmp
in
and
or
or
notl
aaa
loope
aad
jecxz
add
add
add
adc
imul
sbb
loopne
sbb
cmp
dec
adc
sbb
movsl
xchg
adc
jo
xchg
mov
add
pop
and
mov
sbb
or
add
xchg
cmp
dec
pop
pop
cmpl
push
movups
jmp
mov
fstl
test
jae
inc
add
js
aam
stos
mov
nop
push
lret
and
cmp
pop
jo
cmp
in
notl
cmc
jne
mov
test
and
test
sbb
sbb
inc
decb
in
decl
adc
mov
mov
push
test
decb
aam
cmp
mov
pusha
enter
ret
mov
push
push
les
xchg
add
lret
test
dec
mov
imul
incb
roll
push
into
ret
lret
mov
dec
aam
pop
mov
sbb
iret
add
sbb
pop
add
dec
ds
adc
mov
aam
inc
pop
dec
fsubr
mov
sub
dec
cmp
jae
adc
cmp
ds
lock
sub
sbb
mov
fwait
push
scas
cmpsb
out
pop
sti
cwtl
jns
mov
jge
adcb
pop
push
or
aad
adc
inc
push
repnz
jp
hlt
repnz
pop
adc
in
mov
add
cmpl
in
add
or
mov
mov
test
iret
test
xchg
and
dec
xor
sub
adc
add
push
or
pusha
mov
test
rcrl
outsb
nop
pop
lds
and
cmpl
add
stos
or
mov
in
dec
mov
jp
adc
fcompl
dec
enter
jge
movzbl
push
add
les
ss
decl
cmp
push
push
rol
stos
or
and
xor
pop
lods
imul
nop/reserved
and
jo
rcll
pop
aaa
pop
dec
xor
sub
xor
jp
test
sbb
loope
inc
lods
or
inc
push
data16
es
add
out
pop
bound
add
inc
xchg
cmpb
pop
push
and
adc
rolb
mov
les
jbe
push
add
cmpsl
push
pushf
clc
imul
add
xchg
cmc
in
pop
mov
push
and
or
call
stos
push
sub
mov
inc
jbe
push
and
mov
pop
lcall
arpl
ja
mov
add
add
call
lods
mov
sbb
rcrb
test
sub
inc
les
add
movsb
inc
and
pop
pop
inc
fnstenv
es
leave
imul
mov
mov
sub
js
pop
movsb
push
inc
mov
push
jp
rcll
push
test
xchg
jae
adc
sub
mov
pushf
out
add
push
inc
sti
cmp
jae
inc
sbb
adc
pmullw
sbb
push
in
notb
mov
jns
ret
sbb
and
pop
movl
or
rcll
sbb
xchg
mov
mov
rcl
cmp
flds
in
inc
or
add
or
adc
jne
cmc
outsl
and
cmp
jg
shll
xor
dec
and
xor
push
push
arpl
pop
xor
pop
lea
push
add
pop
jne
add
pop
inc
jo
je
inc
pop
enter
mov
add
orb
or
xchg
ja
and
sub
and
or
sbb
lahf
adc
sub
mov
jb
test
dec
push
adc
mov
inc
mov
pop
sbb
fcomp
int
push
pop
inc
dec
test
xor
lea
jecxz
call
push
imul
xchg
in
sub
ljmp
fiaddl
inc
or
xor
inc
rolb
cmp
pusha
ret
ficoml
xchg
inc
pop
add
cwtl
dec
dec
push
or
int
sub
nop
mov
add
inc
sub
dec
lods
cltd
dec
adc
pop
sbb
pusha
lods
sub
movsl
arpl
sbbl
add
sub
int
adc
sbb
and
pop
inc
add
xorb
in
mov
add
and
test
add
xor
in
or
add
mov
setge
insl
pop
sub
xchg
adc
mov
pop
rolb
add
inc
nop
jmp
xchg
jns
inc
pop
rorb
cmp
xor
cmp
aam
push
cld
push
push
push
or
fwait
sub
adc
aam
sub
inc
inc
xor
es
push
dec
jg
pop
nop
fwait
ret
out
inc
clc
rol
mov
cmp
ret
lahf
in
outsl
lock
outsl
xor
orl
lea
lods
and
add
mov
xor
sti
jle
push
les
push
arpl
or
sbb
dec
aaa
and
pop
pop
rclb
cmp
testb
lret
les
dec
daa
xor
pushl
xchg
comiss
dec
sbb
push
loopne
push
mov
sbb
jecxz
mov
dec
inc
jne
pop
dec
andb
or
xchg
mov
cmp
push
jo
sbbb
aas
and
lea
xchg
pcmpeqb
mov
cltd
pop
cmp
dec
arpl
stos
pop
push
push
xor
inc
jne
clc
adc
cmp
js
mov
cmpsb
pop
hlt
mov
sarl
pop
dec
insb
sbb
and
xchg
xor
mov
add
subl
adc
cmp
pop
addr16
fsts
pop
sub
cmp
mov
aas
mov
test
jo
mov
ja
cmc
xor
popa
mov
and
mov
in
add
cmp
cmp
insb
xor
sub
je
push
jne
lea
icebp
mov
mov
fucomip
xor
adcb
cli
sbb
jbe
pop
adc
push
add
shlb
xchg
ss
jo
insb
fmuls
xor
enter
js
jo
je
xor
or
outsb
pop
sbb
ret
push
adc
jle
hlt
push
adc
dec
movsl
pop
je
mov
lea
push
mov
sbb
inc
sbb
out
mov
lea
test
andb
inc
adc
ret
clc
aad
jle
fs
and
es
pop
add
sub
data16
imul
ret
mov
sbb
or
add
push
push
pop
pop
inc
test
jns
push
pushf
and
aam
into
shll
dec
or
xlat
lock
push
jl
sub
pop
frstor
rcrb
push
cmp
int3
sti
sbb
mov
test
addb
fisubl
popf
xor
into
pop
fs
adc
xchg
cmp
jmp
cmp
shlb
jnp
adc
sub
push
inc
and
sbb
and
and
add
dec
loopne
fcompl
mov
adc
test
sbb
mov
aam
cli
sti
push
loopw
insl
js
and
adc
mov
jno
cmp
xchg
inc
mov
ror
xchg
das
lea
xor
dec
adc
adc
movsb
push
mov
push
adc
jl,pn
out
mov
mov
mov
xor
or
sbb
mov
mov
or
inc
sub
roll
jl
loope
mov
adc
cmp
gs
cmpsl
ljmp
cli
dec
int
test
jns,pn
sbb
movsb
jmp
mov
push
add
stos
or
jae
push
push
pusha
dec
and
or
aaa
insl
jae
jmp
es
or
imul
inc
icebp
mov
gs
dec
das
push
lea
lret
push
jb
xchg
sbb
mov
loopne
mov
xchg
mov
xchg
lahf
nop
scas
aaa
enter
cltd
out
lea
add
cs
fwait
jne
add
xchg
sbb
rol
jmp
pop
loopne
mov
mov
mov
push
jl
adc
push
clc
add
lods
pushl
dec
repnz
loope
inc
sub
cmp
adc
jecxz
lods
les
cmp
mov
lcall
xorl
adc
push
mov
push
stos
rorl
mov
sbb
bound
mov
push
rorb
push
fnstenv
xchg
imul
add
aaa
loope
xchg
jno
pop
push
or
sbb
push
dec
dec
cmp
imul
pop
jb
sbb
orb
and
shll
jmp
mov
imul
mov
mov
jo
push
std
and
lcall
and
das
dec
or
inc
inc
add
push
add
push
je
cmpb
sbb
fsubrs
pop
pushf
inc
xor
test
dec
movsb
sbbb
mov
jmp
jne
cwtl
sbb
movsb
and
es
daa
inc
lds
int
daa
movsb
inc
rorb
dec
inc
pop
and
and
je
cmpl
test
xchg
xchg
cmp
popa
decl
dec
leave
pop
mov
push
xchg
and
andl
rclb
jl
cmp
into
mov
xchg
sbb
inc
lret
xor
sub
mov
xor
pop
jmp
pusha
sub
mov
sbb
add
inc
icebp
subl
cmp
gs
bound
mov
mov
daa
sub
inc
push
stos
mov
leave
push
fwait
mov
add
push
shl
nop
xchg
dec
push
sub
ror
mov
inc
xchg
pop
aad
sub
jne
inc
adcb
sbb
or
push
pusha
test
dec
jo
mov
add
cmp
in
dec
into
xor
push
daa
mov
stos
enter
dec
ret
push
adc
dec
movsb
dec
sbb
adc
pop
xchg
dec
pop
jb
movsl
or
or
daa
push
pop
jb
add
bound
inc
loop
xor
negl
sbb
mov
mov
loope
push
or
push
shrb
add
movsl
add
push
popa
sub
loopne
das
xchg
sbb
or
inc
xchg
lret
adc
lret
and
cmpsl
xchg
xor
add
cltd
add
add
push
xchg
inc
cs
xor
mov
icebp
in
fsubs
test
rolb
ret
xchg
mov
js
mov
loope
fidivrs
push
je
lods
stos
inc
cmp
fidivl
imul
stos
add
sbb
or
aaa
add
push
testl
daa
sub
add
iret
add
int
mov
push
sub
test
inc
arpl
xchg
and
loopne
mov
test
adc
and
sub
push
adc
aad
and
sub
sub
insb
and
jl
sub
cwtl
imul
or
and
add
sbb
sub
stos
cmp
xor
mov
or
rcrl
scas
inc
pop
or
or
mov
and
or
fnsave
sbb
aad
jmp
dec
cmp
sbb
inc
or
and
xor
inc
subb
xor
push
jb
or
jecxz
iret
push
ljmp
inc
mov
xchg
jge
cmpsl
or
or
xchg
inc
inc
arpl
mov
adc
cmovl
dec
sub
add
add
mov
adc
pop
repz
in
mov
sbb
icebp
repnz
scas
or
arpl
xor
lcall
fistps
pop
jge
dec
push
in
add
adc
and
push
xor
addb
inc
dec
es
test
push
insb
push
mov
lock
sub
and
adc
adc
inc
orb
adc
leave
adc
mov
jb
or
push
inc
repnz
add
pop
push
or
sub
lret
sbb
lods
stos
dec
inc
arpl
inc
or
or
inc
pop
pop
and
fdivrl
inc
xchg
in
dec
add
faddl
or
and
cld
jne
mov
jno
sbb
jo
sbb
mov
daa
xor
or
push
adc
lret
push
stos
jmp
jne
cli
ljmp
mov
push
xor
inc
xor
ret
fstpl
dec
cmp
adc
bound
sub
mov
stc
inc
pop
push
mov
and
stos
xchg
sti
rorl
dec
jb
adc
and
and
cli
es
add
sbb
inc
sbb
sub
mov
aad
cld
push
out
cwtl
test
inc
insb
inc
das
sub
or
sbb
dec
and
xor
popa
test
pushf
popf
shll
or
fs
xchg
mov
sub
inc
repnz
fsubrs
sbb
dec
lret
xchg
xor
leave
xor
and
leave
or
inc
push
pusha
flds
popa
xor
adc
add
add
inc
add
dec
ljmp
add
daa
je
cmpsb
test
adc
sbb
pop
pop
nop
xor
jne
lcall
xchg
mov
push
push
adc
push
xchg
lret
xchg
cmpsl
daa
push
add
sub
or
mov
cmp
and
cmp
ret
ja
inc
adc
loope
cmp
aad
xorl
push
das
enter
add
push
pop
add
and
push
inc
nop
sub
sbbb
push
add
popl
lea
fwait
sbb
aad
and
add
hlt
push
add
push
jne
push
adc
imul
pop
and
popa
loopne
mov
mov
and
aam
mov
jbe
icebp
je
sub
addb
lods
inc
jge
int3
cmpsl
and
or
pop
xchg
xchg
loopne
xchg
int3
jns
inc
movsl
mov
sahf
aam
xchg
or
sub
call
sbb
inc
fdivl
inc
flds
pop
push
enter
sbb
lcall
add
sub
xor
cmp
and
test
mov
sub
mov
and
fistpll
sbb
push
out
sbb
cmp
cmp
dec
pop
inc
sbb
adc
or
mov
shlb
mov
push
inc
call
daa
ss
daa
push
fmuls
shlb
jg
or
out
push
push
or
and
nop
push
mov
pop
or
jge
bound
mov
or
mov
push
inc
int
inc
cmp
xor
jb
push
xchg
mov
cs
pop
lea
sahf
scas
call
dec
and
or
movsl
dec
or
or
jae
cmp
or
or
pop
cmp
mov
mov
add
adc
sub
adc
cmpb
adc
xchg
mov
iret
adc
aam
dec
adc
and
push
aam
mov
add
jecxz
push
nop
in
lods
mov
xchg
call
jp
xchg
aam
xchg
loopne
pusha
nop
inc
xchg
add
inc
cs
push
int3
sbb
lods
pop
aam
xor
and
mov
xchg
fcomp
sub
sbb
push
xor
fcoml
nopl
sbb
lret
and
sbb
pop
jb
push
enter
repnz
or
out
adc
jle
adc
in
and
lods
or
jns
inc
sahf
and
and
add
aam
or
mov
sub
addr16
cltd
sub
xchg
enter
mov
subl
cmpl
jnp
cs
jae
jmp
mov
sahf
mov
add
std
shrb
dec
jge
dec
push
push
in
pop
inc
inc
pop
jne
test
shlb
adc
loope
dec
mov
inc
adc
sub
jo
sahf
mov
sub
jns
add
cs
jne
lds
mov
pusha
lods
jmp
outsl
xor
je
pop
shrl
jg
or
sub
xor
inc
rolb
sarl
arpl
push
loope
or
popa
addl
fimuls
mov
mov
bound
mov
cmc
add
mov
ret
aaa
push
mov
sbb
or
mov
fsubl
add
xor
push
push
push
mov
js
add
push
call
addr16
movsl
ret
inc
xor
inc
hlt
cmpsb
les
jne
push
sub
cltd
dec
adc
sbb
sbb
adc
add
dec
jo
nop
ss
cs
push
aaa
dec
or
movsb
pop
ss
stos
ret
leave
adc
cmp
adc
movsb
lahf
sbb
lods
or
xchg
or
push
ret
mov
mov
movsb
dec
cmp
adc
or
or
jns
adc
es
adc
in
ds
cmp
sbb
aaa
arpl
aas
mov
xor
inc
push
arpl
dec
sbb
dec
sub
cld
movb
xor
add
inc
arpl
pusha
mov
add
inc
roll
mov
pop
sbb
add
cmpsl
adc
cmp
or
jecxz
in
or
inc
adc
push
push
cli
adc
ret
jmp
sbb
stos
and
out
rcrb
and
fmuls
nop
ja
inc
push
mov
inc
rolb
add
cltd
add
pushf
test
movsb
cmp
cli
dec
cmp
cltd
dec
mov
cmp
cmp
push
add
mov
movsb
xchg
inc
clc
lea
leave
dec
mov
xchg
pusha
inc
add
sub
fisttps
push
sub
adc
push
sarb
mov
mov
je
test
inc
xchg
pop
mov
pop
enter
jp
mov
mov
push
mov
adc
inc
inc
test
insb
inc
stos
sbb
shrl
inc
mov
xor
leave
mov
push
push
push
dec
addr16
add
and
xchg
xor
push
xor
mov
dec
adc
push
jae
imul
in
push
cmp
mov
or
mov
mov
popf
jo
jge
test
sub
push
in
dec
inc
sti
mov
stos
cmpl
lock
dec
sbb
push
adc
pop
stos
mov
dec
aas
test
test
cmp
stos
adc
dec
dec
pop
sbb
test
dec
cmp
sbb
mov
push
test
dec
outsb
flds
pop
jno
movsl
bound
push
inc
dec
dec
xchg
cs
cmpsl
fldenv
daa
roll
cmp
imul
std
or
adc
jns
ret
cmp
mov
and
inc
es
fs
stos
clc
mov
adc
loope
push
sbb
daa
mov
movaps
jo
or
xchg
data16
push
push
or
scas
add
es
push
dec
xor
mov
push
add
inc
dec
icebp
sbb
mov
inc
and
cmp
or
inc
jnp
xchg
xor
push
mov
push
shll
or
xchg
repnz
je
add
mov
mov
jge
push
and
xchg
lds
or
inc
dec
push
pop
mov
and
scas
add
lahf
dec
sbb
sbb
adc
push
adc
pop
dec
jne
push
lahf
pop
push
ljmp
pop
rol
and
dec
jecxz
jle
sti
js
popl
sbbb
sub
nop
inc
pop
mov
sub
push
outsb
jmp
int3
mov
sub
mov
pushf
sub
mov
and
and
iret
or
sub
arpl
nop
push
dec
jns
jb
int3
stos
iret
pop
pop
or
test
inc
es
cmp
nop
fstpt
pop
or
mov
cmpsl
pop
add
gs
sbb
sub
adc
pushl
inc
in
and
push
rorl
sub
ds
lea
mov
xor
bound
out
or
push
mov
loopne
adc
xlat
mov
pop
dec
lcall
cmpsl
sub
pop
mov
in
je
iret
adc
sahf
stos
in
insb
adc
pop
stos
or
rcrb
xor
adc
adc
push
dec
sub
or
adc
pop
inc
les
inc
dec
push
dec
dec
stos
inc
pop
add
out
mov
push
test
mov
sbb
xchg
int3
inc
popa
test
mov
cmp
adc
fiadds
inc
adc
dec
xorl
pop
mov
push
test
jo
push
loopne
xor
sub
and
movsb
or
cld
xchg
mov
lcall
adc
add
repnz
out
ds
jl
cmp
jae
fidivl
addr16
xchg
cmp
dec
iret
fwait
das
xchg
sbb
mov
out
jnp
push
pop
cmp
jp
dec
bound
mov
xchg
into
cmp
or
stc
xchg
adc
or
add
add
xchg
xchg
inc
addb
xorb
dec
jno
dec
ja
lea
outsl
mov
sub
dec
popa
mov
test
lds
cld
idivl
pop
and
add
sub
popa
cmp
out
imul
clc
aaa
pusha
shll
jmp
adc
add
or
loop
add
inc
jo
push
inc
call
adc
sub
and
mov
pop
add
or
adc
int
jle
add
daa
or
daa
jne
push
add
add
dec
addr16
mov
add
add
mov
fwait
inc
in
mov
add
add
loopne
adc
test
lds
mov
add
orb
leave
dec
popa
and
dec
enter
inc
inc
push
mov
nop
andl
inc
cmp
push
cltd
push
push
and
add
mov
mov
dec
adc
inc
sbb
lea
adc
inc
xor
rcll
xor
mov
adc
push
dec
mulb
adc
mov
push
pop
ficompl
pusha
xchg
mov
aas
and
add
mov
popf
mov
and
adc
cmp
xchg
rcr
pop
aaa
and
push
mov
xchg
sbb
inc
add
lahf
mov
pusha
push
and
sub
add
and
push
add
cmp
push
dec
sub
push
mov
or
dec
jecxz
call
cmp
and
sarb
mov
inc
inc
sbb
scas
push
leave
inc
cmp
xor
xor
sub
jg
movsl
inc
imul
mov
mov
dec
enter
adc
add
add
test
fildl
push
and
cmpsl
lods
inc
dec
adc
jl
and
lret
mov
inc
mov
roll
dec
adc
inc
ret
adc
imul
shrl
mov
adc
daa
adc
add
shlb
std
and
mov
out
and
scas
lret
cmp
jae
mov
xchg
adcb
out
add
xor
sbb
std
jl
in
sbb
lock
scas
jno
call
xchg
rcrb
xor
imul
xchg
mull
ja
fucomi
outsb
add
jbe
mov
sbb
add
add
add
sarb
mov
add
cmpl
sub
jle
gs
mov
jmp
icebp
push
push
test
pop
mov
fildll
ret
mov
in
sti
fsub
jae
add
sub
ja
or
std
pop
mov
add
pop
mov
jns
jmp
rcrb
lock
jg
adc
dec
movb
pop
dec
popf
cmp
andl
mov
mov
fdivs
push
add
movsb
push
in
fsubl
adc
sbb
mov
xchg
pop
popf
lods
push
repnz
insb
mov
pop
pop
fisttpll
push
test
inc
lcall
sti
pop
sbbl
mov
add
dec
adc
cmp
leave
inc
inc
xor
push
inc
subb
push
pop
pop
pop
and
pop
pusha
flds
mov
fs
insb
fstps
sub
sbb
pop
add
mov
sahf
or
and
adc
xor
and
or
sub
push
mov
pushf
push
gs
jle
add
xor
push
insb
movsb
add
mov
push
das
xchg
and
fiadds
inc
cmp
jae
insb
mov
pusha
and
add
and
filds
xchg
cld
xor
insl
test
sub
pop
mov
fisubl
cmp
xlat
sub
push
cs
sbb
insb
mov
sub
nopl
xlat
es
out
cmp
pusha
xlat
adc
or
pop
pop
dec
push
roll
pusha
or
leave
cmp
sbb
sub
cld
sbb
and
and
test
and
or
cmpsb
xchg
adc
xor
aas
fildll
lea
mov
mov
jbe
test
add
mov
pop
inc
nop
adc
adc
insl
cmp
sbb
fistpll
les
jb
push
mov
in
insl
xor
push
inc
setns
std
add
test
loopne
add
lahf
js
add
fdivl
or
ret
sbb
testl
popf
aas
mov
lea
xchg
ss
push
fsub
mov
movsl
and
adc
push
inc
sbbl
adc
jno
or
setno
outsl
adc
lods
rcrb
sbb
mov
outsl
pop
push
xorb
movsl
mov
pop
imul
into
es
adc
outsb
add
adc
insl
iret
daa
js
mov
dec
pop
dec
ret
pop
dec
or
movsb
lea
scas
jge
clc
sub
dec
pop
or
test
in
xchg
dec
sar
movb
call
or
enter
in
cmpsl
xchg
rclb
movb
push
mov
push
aam
inc
push
jp
nop
add
dec
pusha
sub
add
xchg
sbb
push
and
adc
or
jo
sbb
addr16
add
mov
iret
out
call
adc
je
cmp
je
cmp
je
cmp
je
push
inc
sbb
mov
push
mov
jl
mov
sub
jmp
mov
dec
hlt
jne
inc
add
inc
cmp
pop
outsb
push
daa
inc
xchg
outsb
or
dec
rorb
roll
stos
mov
popf
test
ljmp
mov
arpl
pop
sbb
call
mov
lcall
sub
sub
mov
add
loop
jbe
in
and
pop
insb
adc
aam
imul
sbb
push
shll
push
mov
adc
push
xor
jo
xchg
and
add
or
adc
pop
out
fcom
adc
inc
fldl
loopne
ja
xchg
lret
cmp
out
jge
sbb
xchg
mov
sahf
pushf
cmp
jecxz
mov
sarb
push
lock
movsl
stc
mov
les
xorb
push
aam
xchg
test
aam
xchg
dec
enter
jb
xchg
inc
xchg
mov
mov
adc
lock
sbb
in
sti
mov
aam
arpl
inc
rcrb
loopne
sarb
adc
or
adc
cmp
clc
sbb
aas
pop
imul
jmp
aam
sahf
sbb
imul
int3
push
mov
and
jb
dec
lock
subb
or
dec
mov
adc
and
out
pop
xor
clc
popf
gs
mov
test
dec
pop
pop
daa
jmp
or
jo
sub
mov
lock
stc
int
inc
sub
jo
push
mov
pop
xorl
shl
mov
sahf
ljmp
xchg
xchg
jne
adc
xchg
and
cltd
lock
ss
out
int3
es
add
es
push
push
les
pop
jle
into
adc
jne
and
and
inc
adc
and
adc
loope
lea
loopne
bound
cmc
inc
jmp
movsl
nop
fildll
or
repz
mov
mov
sbb
mov
aas
push
xor
bound
push
sarb
push
rorb
in
pop
and
adc
inc
mov
push
push
call
adc
mov
mov
ficoml
in
loop
and
mov
push
jp
and
mov
aam
dec
sub
sbb
mov
rclb
xor
int3
inc
sub
fdivl
dec
xor
sub
das
xchg
out
test
mov
je
jecxz
mov
xchg
add
jns
jnp
rclb
sti
pop
mov
pop
clc
jge
test
aas
bound
mov
push
fcompl
popf
xchg
add
popa
jg
inc
mov
mov
or
pop
hlt
fwait
cmp
push
fstl
enter
mov
call
mov
and
cmp
je
mov
mov
dec
fadds
mov
pavgw
lods
cmpb
xchg
cwtl
mov
xchg
outsl
jae
inc
ljmp
shr
cmp
sub
gs
xor
pop
or
sahf
mov
les
es
and
push
push
cmpb
or
imul
push
pop
push
pushf
mov
push
xchg
adc
cwtl
mov
mov
dec
pop
mov
gs
adc
pusha
push
inc
cltd
add
lods
orl
int
rclb
lret
ret
jne
loopne
lahf
mov
cwtl
pusha
lea
lods
dec
xchg
pop
xor
dec
push
jns
mov
push
jne
cmp
and
jns
out
mov
or
jns
push
push
incl
adc
mov
cli
mov
mov
dec
cmp
push
pop
call
movl
loope
inc
dec
out
ret
and
lahf
test
int3
push
cmp
push
jecxz
sbbl
les
cmp
rorl
or
outsl
or
mov
pop
xor
lds
mov
and
in
sbb
inc
xor
adc
fs
inc
add
xchg
pop
movl
or
mov
inc
and
cmp
scas
ss
cmp
jg
mov
xor
adc
push
shrb
add
ds
and
mov
xchg
pusha
mov
rcrb
xor
int
dec
vmsave
push
sub
aaa
jo
rcrl
cmpsl
push
rcrb
jl
push
push
inc
push
sub
icebp
sti
push
jbe
inc
sbb
pop
cmpl
adc
cwtl
dec
add
add
cwtl
popa
or
cmp
pop
push
leave
sbb
xchg
mov
shll
pop
mov
or
push
sub
sub
and
ds
and
mov
sbb
sar
dec
cmp
xor
push
lret
insb
pushf
or
add
pop
mov
or
mov
mov
cmpb
call
xchg
in
jge
jne
cmp
jne
push
jp
call
sbb
pop
cwtl
es
scas
ja
cmp
inc
cmp
adc
daa
sarb
sbb
das
mov
or
jl
dec
ss
adc
and
sub
sahf
add
xor
xor
add
cli
fdivrs
mov
out
push
or
or
add
pop
jae
mov
dec
mov
xchg
push
insb
inc
xor
pop
aam
or
jmp
mulb
popa
loopne
je
and
and
pop
mov
nop
lret
inc
test
jecxz
cmpsb
push
pop
jo
js
inc
scas
mov
insb
sub
jnp
inc
rcl
mov
movsb
mov
test
sbb
cmp
scas
mov
add
ds
test
xor
mov
jae
arpl
or
lret
lods
loopne
aad
cld
adc
push
dec
dec
fldenv
adc
movsb
mov
mov
push
push
push
stc
data16
pop
mov
les
jle
adc
and
sub
adc
push
lea
gs
pop
shlb
sub
ss
fbstp
stc
sub
push
push
push
movsb
adc
inc
adc
push
cld
lret
inc
add
movb
int3
pop
or
and
addr16
or
gs
pop
lea
add
push
ja
movsb
sbb
test
hlt
andb
scas
mov
push
mov
cmp
movsl
mov
cs
cmp
inc
add
mov
inc
shrb
adc
jl
shr
out
jae
push
ss
icebp
mov
inc
dec
add
jnp
or
out
pusha
arpl
insl
mov
inc
pop
xchg
dec
dec
cmp
je
xor
call
dec
sbb
add
xchg
xchg
push
cmp
fcomps
and
rol
es
add
add
adc
std
pop
push
jb
cmp
add
rcl
flds
lahf
imul
push
jo
mov
clc
jo
and
jnp
sbb
cs
xchg
adc
rcr
or
inc
sbb
nop
cmp
addb
or
lret
push
pop
lahf
push
xlat
mov
lock
jg
mov
cmp
jne
test
je
mov
cmp
push
test
fisubs
in
add
fdivrs
popa
rolb
mov
adc
sarb
adc
hlt
jg
sbbl
pop
or
sub
pop
sub
das
or
or
inc
add
test
push
xchg
sarl
loop
inc
fwait
aad
or
inc
dec
into
add
out
push
cmp
out
and
stos
cmpsb
or
add
mov
je
push
push
xchg
cs
jbe
adc
push
cmp
sbb
sbb
jl
jmp
or
fbstp
cmp
xor
add
insl
leave
pop
into
adc
mov
push
add
shll
loopne
or
sub
dec
adc
xor
jno
add
dec
xor
add
outsl
add
or
inc
inc
test
mov
cmp
faddl
mov
jg
lock
sub
cmpsl
in
mov
inc
and
fistps
push
mov
sub
jno
pop
dec
mov
jmp
push
add
pop
jo
mov
in
insl
push
gs
dec
push
push
xchg
aam
or
pop
sbb
mov
test
movsb
push
fs
sti
xor
sub
jns
or
xchg
test
mov
inc
push
and
pop
test
in
test
imul
stos
enter
xor
add
xchg
in
fwait
and
incb
mov
sbb
ret
stos
jl
adc
push
dec
hlt
scas
into
jle
lret
and
pop
stos
outsl
push
sub
test
test
lahf
add
adc
shrb
inc
push
imull
adc
xor
punpckhbw
jbe
mov
dec
adc
pop
fs
sbbb
lret
add
insb
cmp
xor
push
push
sub
inc
add
addl
ja
lret
loopne
adc
pop
das
jl
sbb
daa
and
test
add
xor
pop
or
push
push
movb
cmp
add
aam
xor
ret
stos
fs
adc
mov
pusha
es
jno
ja
mov
push
sbb
in
add
inc
sub
xchg
imul
xor
daa
xor
movb
add
lds
bound
iret
pushf
orb
sub
pop
or
int3
add
add
test
push
or
int
sub
pop
inc
stos
in
arpl
fwait
dec
adc
sbb
sbb
sbb
idiv
das
aad
dec
push
jne
cmp
jb
sub
jmp
push
dec
movzwl
fprem
sub
pop
jp
setl
movzbl
out
test
fisubrl
sub
push
mov
fnstenv
add
nop
pop
inc
mov
aam
arpl
sub
add
lods
lock
sub
mov
cmp
pusha
nop
loopne
adc
sarb
dec
push
push
push
pop
cmp
aam
int3
push
and
push
rol
jmp
push
sti
out
jne
gs
xchg
cmpsb
add
jno
call
repnz
imul
mov
es
in
fldl
or
jmp
sbb
call
pop
les
aaa
lret
add
mov
push
pop
sbb
jno
lcall
cld
dec
ds
mov
cmp
cmp
inc
aas
aas
roll
pop
or
pop
push
jp
andb
dec
xchg
cmp
mov
sub
lret
add
pop
inc
pop
test
in
adc
dec
rcrb
cltd
sbb
xor
and
adc
pop
and
shrb
sub
sahf
jl
or
popa
adc
shl
mov
push
shll
lock
mov
jl
cmp
dec
sub
and
ret
xchg
addl
lea
jb
clc
dec
push
mov
mov
pop
das
sbb
aam
push
nop
xchg
cmp
inc
add
sbb
add
xor
xor
mov
mov
aam
bound
in
nop
xor
sarl
sub
and
xor
or
cmp
push
push
push
push
push
nop
push
movb
jno
push
rcrb
lret
lret
add
dec
xor
cmp
mov
loopne
adc
nop
sbbb
push
sub
sub
jbe
fcoms
sbb
sbb
fistpll
jns
imul
and
jle
add
xor
outsb
inc
jl
or
push
sbbb
ljmp
sbb
pop
adc
fcomps
ficoms
push
testb
jge
sbb
push
and
mov
xor
dec
or
jne
push
cli
iret
cmp
rclb
aas
fcomp
jne
add
or
loope
orb
adc
faddp
jmp
mov
js
mov
dec
add
jns
jg
mov
and
sub
or
sub
rolb
mov
inc
jecxz
mov
add
ret
xchg
mov
ret
mov
jne
mov
cmp
jle
lea
cmp
jl
sub
push
cmpb
jne
mov
push
adc
sbb
pop
cmp
dec
push
mov
mov
les
sbb
xor
add
unpckhps
arpl
push
add
fsubrs
pusha
loope
xor
xor
add
sub
push
push
out
sbb
cmovge
xchg
ret
and
push
cmp
inc
push
or
mov
push
add
inc
adc
or
lock
lods
and
addl
push
inc
ljmp
and
loope
or
decl
push
rolb
and
pusha
and
add
mov
push
mov
addl
pop
dec
push
push
out
insl
mov
dec
sub
cmp
and
sarb
push
mov
lea
and
lahf
cmp
fstpl
or
or
push
xchg
outsl
jle
push
movsl
push
outsb
mov
push
jne
ltr
imul
sbb
pusha
xchg
lea
push
adc
inc
inc
xor
adc
test
jg
push
or
nop
jg
call
jg
push
mov
dec
mov
push
pop
or
inc
daa
push
adc
push
push
and
dec
sub
jne
enter
mov
jg
inc
pop
mov
pop
repz
cltd
mov
pop
pop
mov
inc
sahf
xchg
aam
mov
pop
enter
mov
push
out
aas
push
imul
incl
jl
lock
push
mov
inc
sbb
es
and
sbb
cmp
jmp
and
nop
lret
pusha
dec
mov
push
push
push
sbb
add
pop
icebp
sub
dec
ret
sti
mov
sub
pop
sub
pop
xchg
adc
loope
je
add
loopne
stos
ss
push
inc
or
std
jo
xor
dec
and
movaps
jcxz
add
les
jb
loop
je
xor
and
adc
or
push
or
push
imul
adc
add
loopne
dec
mov
fsubs
or
xor
cmp
sub
push
xor
xchg
les
lds
ret
push
mov
ret
dec
imul
fmuls
outsl
xor
or
or
push
dec
xor
inc
ret
mov
adc
or
es
outsl
sbb
aas
or
cmpsl
cmp
fucomp
into
cmpsl
jbe
adc
inc
jns
mov
js
sbb
pop
add
orl
sub
cwtl
pop
xchg
xchg
adc
icebp
jl
cwtl
inc
out
mov
insl
xchg
std
xchg
push
pusha
sub
add
mov
pop
insl
xlat
loopne
inc
dec
pop
lahf
push
cs
xor
cmp
xor
in
movsb
push
push
data16
sub
add
lods
inc
sahf
or
inc
cmp
xchg
mov
aas
mov
cmp
enter
push
or
sub
jae
ss
dec
or
adc
daa
enter
sbb
cwtl
push
cmp
inc
cs
add
cmp
clc
xchg
stos
add
je
std
push
xchg
push
mov
test
pop
ds
fiaddl
and
push
push
adc
rolb
and
test
lea
filds
imul
inc
dec
loop
and
or
push
shll
imul
xor
push
lods
xor
push
push
js
test
push
dec
in
leave
adc
inc
adc
mov
arpl
jp
mov
sub
mov
fildl
inc
lods
dec
jae
leave
shrb
or
push
imul
test
pop
mov
adc
sub
push
popa
rol
fcompl
pop
mov
sub
mov
push
push
lock
mov
push
into
in
xor
inc
out
pusha
push
add
cmp
add
cmpsl
daa
xor
lock
mov
lret
xchg
fwait
cmc
or
push
sub
sub
pop
test
scas
sub
inc
or
andl
stos
cmpsl
cmc
sub
add
cmp
nopl
adc
adc
cmp
lock
add
into
sbb
gs
shlb
sbb
pop
sub
jmp
cmp
mov
mov
lods
inc
mov
imul
icebp
aas
inc
mov
hlt
pop
mov
ljmp
into
jle
mov
add
jne
inc
jp
pop
ret
jne
mov
dec
fstl
not
or
popa
add
push
lcall
push
add
stc
sub
movsb
jge
ds
jl
je
test
jl
sbb
and
push
repz
and
out
push
je
cmpb
dec
xchg
pop
mov
push
lea
add
sarb
mov
movzbl
push
push
push
add
rep
subb
push
adc
cld
es
nop
sub
imul
lret
aaa
test
stos
sub
popf
jb
jae
test
push
filds
shl
test
shll
mov
out
push
xchg
outsb
add
or
sub
and
sti
push
push
push
aad
es
pop
ret
test
enter
sbb
mov
in
sub
or
mov
inc
ja
loopne
mov
ret
div
ljmp
jbe
adc
pop
mov
and
mov
addb
ret
pusha
xor
xchg
push
adc
push
or
or
jmp
arpl
fstl
dec
xor
mov
xor
and
and
movsb
or
test
or
inc
popa
mov
incl
add
clc
and
and
adc
mov
sbbl
loopne
push
mov
fsubrs
push
sub
cmpsb
inc
inc
out
mov
add
notb
inc
add
mov
cmpsb
mov
cmp
movsl
cmp
inc
jp
mov
cmpsb
xchg
adc
mov
jge
insl
inc
mov
push
mov
sbb
adc
clc
push
int
mov
seto
aaa
neg
adc
dec
les
enter
clc
into
sbb
mov
sahf
cwtl
jne
pop
aam
jp
jbe
mov
mov
mov
add
pushf
fs
lods
push
mov
in
icebp
lock
adc
mov
jnp
add
push
xor
and
jae
jns
dec
in
nop
cmp
test
shrl
adc
mov
push
mov
daa
or
mov
mov
push
incb
xor
cwtl
mov
cmp
int
cmp
dec
or
out
mov
mov
fiaddl
roll
or
and
lea
repz
push
nop
loope
bound
mov
xchg
cmp
in
or
fstp
push
push
imul
xchg
fdivs
fldcw
mov
add
in
dec
or
fldcw
stos
pop
shll
mov
or
adc
filds
add
pop
inc
rol
stos
test
or
cmp
stos
and
jle
sbb
incb
mov
pop
mov
add
push
test
inc
loopne
cmpsb
outsl
and
mov
shl
dec
insb
mov
shll
hlt
sarl
push
sub
push
ss
mov
jo
out
push
mov
js
adc
xchg
call
es
int
call
inc
in
adc
call
and
dec
or
call
push
fcompl
cmp
cwtl
mov
cs
cmp
jbe
or
out
pusha
adc
pop
inc
sbb
addb
fbld
adc
sub
or
mov
sub
sbb
repnz
mov
pop
push
lods
jmp
mov
push
mov
fildl
mov
inc
adc
add
mov
les
fmulp
push
cmpsb
inc
icebp
lret
leave
iret
les
ljmp
fmuls
push
sbb
sbb
sar
or
adc
sub
adc
divb
add
clc
sub
jns
pop
jae
pop
into
push
cli
inc
movl
insl
or
or
fstp
cwtl
cwtl
jp
or
cmp
jne
inc
rcll
sbb
push
add
push
or
cmc
and
or
xchg
dec
inc
popf
inc
movsb
add
jg
adc
pop
cmp
outsb
sbb
push
jnp
ss
movb
and
add
rorb
sub
fsubl
push
sub
cmc
lret
mov
jmp
mov
or
jl
lret
cmp
pushf
shlb
std
icebp
jle
xor
add
cwtl
stos
add
xlat
mov
mov
lea
into
aaa
mov
enter
or
and
cmp
push
mov
adc
data16
push
push
and
or
inc
rolb
pop
push
lods
es
cmpsl
xor
adc
rolb
cltd
dec
sbb
push
call
pop
push
insb
push
sbb
mov
in
xchg
sbb
add
adc
push
lea
sbb
into
push
fmull
in
pop
mov
cmp
dec
cld
xor
xor
in
mov
push
dec
pop
ret
push
sbb
push
iret
punpckhdq
pop
js
lock
adc
xchg
cmp
sti
jne
jg
sbb
pop
je
push
dec
mov
loop
mov
mov
or
mov
inc
push
xlat
push
push
cld
mov
cmp
je
sbb
add
xor
cltd
inc
sub
add
fdivrl
jg
mov
mov
dec
add
jns
pop
add
fidivrs
pop
jmp
fists
je
cmpl
push
push
inc
cwtl
pop
cmpsb
cwtl
cmp
clc
pop
popf
mov
jmp
push
adc
iret
cmc
push
rorl
mov
fsubl
xchg
push
sbb
add
cmpsb
fisubrs
jg
and
pusha
mov
fsubs
pop
add
dec
dec
test
ficoms
or
inc
cmpl
ror
jmp
push
and
sbb
dec
clc
cmpw
jne
mov
je
test
push
test
or
push
mov
pusha
mov
pop
pop
clc
aas
gs
mov
push
push
call
adc
cmpsb
aas
jmp
cmpl
clc
jp
mov
cmp
cmpl
or
inc
add
lock
adcb
xor
bound
pop
test
clc
push
shl
sarb
sbb
mov
mov
leave
pop
inc
je
call
or
lds
xchg
add
loopne
lea
push
push
adc
jbe
bound
ds
dec
insb
insl
sub
push
push
jbe
sub
jp
adc
in
push
je
sub
mov
test
jmp
and
push
lret
push
jb
jecxz
sbb
js
leave
adc
push
shlb
push
lcall
jb
lahf
pop
inc
mov
jle
push
mov
mov
dec
push
push
mov
and
push
out
lret
orb
aam
iret
or
pusha
aaa
push
inc
mov
je
jmp
add
sub
aam
push
js
outsb
push
push
add
jle
call
mov
cmp
sub
mov
popa
or
sbb
inc
ss
rclb
pop
push
dec
inc
jbe
jp
aas
icebp
pop
fsts
xor
testb
and
repnz
add
movlps
call
icebp
insb
ja
or
loope
and
mov
adc
and
and
rolb
cmpsb
hlt
loopne
cld
sbb
test
pop
sbb
mov
shlb
push
icebp
fsubp
mov
cmp
fs
aaa
test
fcoml
or
push
adc
popf
push
and
add
pop
sbb
out
das
in
mov
jbe
adc
dec
fdiv
push
out
lock
sub
xor
mov
mov
rolb
xchg
cmp
cld
insl
loope
jne
jecxz
push
in
inc
add
pop
addr16
mov
out
mov
add
xor
pop
fsts
icebp
test
into
or
inc
dec
aam
cmp
or
xorb
adc
mov
inc
mov
lock
pop
add
jl
subl
mov
fwait
movsb
lock
jb
sub
and
in
adc
jne
xor
inc
out
bound
insl
inc
addl
in
sbb
stc
incb
or
rolb
hlt
inc
inc
xor
hlt
aaa
push
push
add
stc
push
mov
and
pop
inc
in
push
mov
stc
call
imulb
or
sub
push
sub
in
ljmp
in
outsl
sub
inc
or
mov
cwtl
nop
cmpsb
pushf
ljmp
leave
lock
add
push
fsubl
mov
loop
ljmp
ss
pop
adc
mov
test
aad
cmp
popa
popf
negb
push
test
outsb
push
sbb
inc
xor
push
mov
push
adc
xor
pop
ret
rorl
pop
and
fxch
inc
rorl
push
roll
and
inc
add
stos
fcomps
imul
cmp
push
and
pop
outsl
ja
add
jbe
push
movb
lods
push
fnstenv
bound
cwtl
xor
testl
imul
dec
push
or
cmp
add
hlt
inc
add
mov
std
and
out
push
idivb
scas
mov
push
mov
cwtl
sub
inc
jmp
jle
imul
push
xor
mov
in
insb
xchg
ret
xchg
inc
aad
xor
cli
inc
cwtl
lea
mov
sub
ss
sub
mov
je
or
ja
fs
pop
mul
xor
add
jp
add
xchg
shlb
pop
jne
rcll
int3
lcall
pusha
adc
or
imulb
jo
je
pop
inc
pop
inc
mov
jmp
adc
pop
cmc
bound
sub
or
andb
dec
push
xor
lret
out
mov
mov
mov
jbe
add
pop
inc
and
xchg
into
push
fs
in
gs
lcall
add
push
jge
mov
loopne
push
xor
pushf
xor
xor
js
jno
mov
pushl
outsl
sahf
and
pop
mov
test
adc
dec
sbb
push
sbb
pop
sbb
testb
bound
je
or
cmp
mov
adc
jge
je
and
adc
adc
fsubrs
mov
sbb
ret
sarb
lea
aaa
dec
es
xchg
inc
inc
cmpsb
lods
lret
and
pusha
add
add
je
push
cmp
or
sarb
xor
and
push
mov
imul
pop
out
mov
pusha
adc
xchg
xor
mov
jnp
inc
roll
cmp
test
adc
jnp
mov
mov
lds
or
out
sbbb
sti
push
dec
mov
cli
cmp
jb
push
push
or
cmpsb
adc
loop
or
xor
dec
jecxz
dec
add
xor
adc
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
push
lock
pushf
adc
xchg
movbe
jl
aaa
push
fwait
push
cmp
das
scas
loopne
add
mov
lahf
mov
jmp
cmp
cwtl
insb
roll
mov
jbe
orl
push
add
push
lock
xor
or
sub
push
inc
push
ret
jb
jl
and
shr
lret
push
arpl
fs
test
sub
push
push
xor
adc
fsubr
mov
in
inc
fidivrl
mov
add
int3
add
inc
addr16
shl
jae
fs
and
or
and
push
movsb
lock
jmp
jecxz
sbb
out
adc
ror
xchg
mov
mov
pop
divl
out
push
push
dec
test
sbb
ficoml
je
aam
loop
lahf
and
jne
scas
pop
jmp
mov
rorb
dec
lds
movb
not
jno
adc
aas
cmp
pop
fdivp
adc
insl
jne
cs
add
push
jae
arpl
stc
repnz
dec
push
imul
push
je
inc
or
push
or
sti
repnz
insb
jne
or
cmp
push
push
xlat
mov
mov
inc
sbb
js
inc
add
ret
hlt
inc
xlat
call
pushf
ds
popf
pop
cmp
push
cmp
dec
aam
pop
mov
jle
nop
int3
cmp
pop
das
icebp
or
fidivl
push
pop
pop
jp
sbb
in
mov
push
nopl
inc
shl
xchg
sub
out
rorl
add
cmp
sbb
sbb
adc
add
hlt
or
push
rcrb
jmp
push
mov
sbb
sahf
xchg
rclb
je
inc
out
or
pop
js
push
loopne
and
push
xchg
lock
pop
pop
cmp
sub
xor
push
mov
cmp
out
push
test
jae
xor
ret
mov
dec
out
mov
jb
cmp
jne
clc
les
cli
or
mov
mov
je
mov
mov
stos
inc
sub
jg
add
cmp
shlb
mov
or
or
sub
jbe
subb
and
ror
xor
movsb
dec
pop
dec
sti
add
sbb
loop
call
subl
add
cs
imul
add
and
mov
adc
push
lahf
adc
or
add
cmp
pusha
fs
insb
jo
js
dec
inc
sbb
out
out
mov
popf
idiv
dec
push
sti
or
push
mov
inc
int3
lods
int
inc
cmpsl
inc
mov
scas
xor
dec
in
and
jnp
add
les
inc
pop
mov
adc
and
ds
add
pop
ret
ret
pusha
xor
or
cmpsl
xchg
mov
rcl
lea
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
shlb
xor
jbe
push
lods
stos
fcmovbe
add
xor
test
ja
movsb
movsb
leave
cmp
jne
push
jne
xor
in
lret
stos
js
cmp
jne
mov
xor
incb
cltd
icebp
testb
sub
add
xchg
in
loope
aaa
lret
or
adc
mov
pop
mov
cltd
or
jne
cs
fucomip
pop
stos
mov
and
sbb
jns
iret
repz
pop
adc
sbb
shlb
or
mov
xor
or
inc
cli
cli
push
ja
or
mov
loope
mov
jb
mov
add
or
mov
dec
pop
cmp
cmpsl
mov
or
sub
and
das
cmp
orb
add
fmull
sbb
test
in
mov
bound
adc
pusha
push
pop
cmc
iret
mov
inc
roll
jo
rol
ljmp
and
dec
mov
add
fwait
movd
out
add
jne
jns
fbstp
lea
add
or
adc
jo
push
push
ja
notb
push
ds
ret
inc
sbb
cmpsl
filds
fdivrs
mov
lahf
adc
fsubrl
adc
or
in
pop
mov
pop
repnz
cltd
in
cmp
das
add
iret
sbb
cmp
stc
or
push
ljmp
push
clc
out
sbb
inc
gs
fcmovnbe
xchg
out
fnop
lods
je
dec
add
mov
xlat
adc
ret
mov
stc
lock
or
shlb
push
stc
je
fisubrl
push
icebp
jne
xor
jb
inc
xchg
ja
fwait
mov
mulb
cld
jne
push
shrl
sbb
dec
les
popf
pop
sub
and
push
repnz
jbe
inc
or
adc
mov
shrb
add
nop
mov
aad
jne
inc
dec
mov
add
push
lret
clc
mov
cmp
cmp
or
jmp
rorb
cmp
sahf
or
push
fcomps
int3
or
push
pop
shlb
cmpsl
test
adc
or
in
lock
dec
iret
or
pop
addr16
add
push
cmp
shlb
adc
inc
clc
fidivrs
pop
xor
push
or
nop
fcmovnu
jge
loop
mov
das
push
ret
pop
inc
or
mov
xchg
jmp
fcoms
lds
sub
cmp
xor
les
sbb
lea
imul
insb
cld
or
jo
pushl
mull
sbb
fisttpll
dec
xor
lock
add
add
fdivrl
inc
notl
xchg
inc
js
shlb
sbb
lods
mov
daa
add
sub
test
mov
xchg
inc
inc
pusha
insb
insb
cmp
fs
dec
sbb
adc
lcall
ret
ja
inc
arpl
and
in
dec
jo
out
mov
je
cmp
je
sub
ret
imul
add
mov
and
cmp
je
lods
into
test
adc
imul
push
sub
inc
dec
add
lds
xchg
jmp
lea
rol
repnz
dec
inc
xor
lock
andps
jne
lock
pop
and
cld
rorl
cmpsl
sub
dec
filds
push
push
adc
and
imul
fs
pop
out
dec
xorl
movswl
jbe
sar
jnp
mov
into
add
push
mov
cmp
mov
mov
sub
cs
cltd
jecxz
mov
leave
aam
adc
push
leave
inc
push
je
pushf
cmp
inc
or
orb
sbb
sbbl
inc
sub
push
jp
and
fs
and
dec
xchg
cmp
lock
sbb
adc
faddl
jecxz
outsb
pop
jo
subb
mov
inc
leave
sbbl
bound
sbb
jns
insb
push
imul
jge
jne
push
mov
mov
inc
mov
dec
xor
xchg
cs
xchg
popa
insb
fisubrl
mov
jne
outsb
and
dec
jnp
xor
xchg
add
insl
lds
divl
stos
or
int
sub
mov
add
sub
push
js
clc
outsb
test
sub
jo
cmp
je
jns
and
xchg
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
adc
nop
ret
add
lea
pop
sbb
sbb
dec
push
or
add
and
sbb
lods
rorb
lods
add
adc
xchg
fcoms
cli
subb
js
imulb
xchg
pop
xor
pop
rolb
or
inc
jne
push
roll
push
mov
push
fsubrs
mov
mov
pop
arpl
and
imul
shlb
loopne
add
shlb
mov
xchg
into
inc
std
mov
and
inc
add
jnp
cmp
scas
and
lock
push
dec
xor
jbe
incl
jns
sarb
pop
loopne
or
adc
ja
add
inc
lahf
mov
or
jge
sbb
pop
adc
jg
adc
test
mov
add
sub
ret
pop
mov
pop
sbb
jo
pusha
pop
movsb
mov
pop
iret
inc
ljmp
mov
adc
and
mov
sbb
leave
rorl
push
or
pop
ret
loope
or
push
pop
into
and
ret
xchg
enter
pushf
adc
xchg
int3
mov
ds
daa
mov
cld
inc
aam
lret
bound
clc
aad
stc
popa
and
lcall
stos
add
lcall
pusha
cmp
adc
or
xchg
push
inc
push
cmp
and
jmp
mov
notl
add
loop
test
addl
add
por
loop
mov
push
pop
shlb
sub
ror
les
sub
inc
mov
in
mov
mov
xchg
mov
pop
mov
movsl
add
idivb
je
mov
cld
mov
ret
push
pop
addb
loopne
or
andb
jne
mov
mov
cmp
push
push
push
push
xchg
mov
add
push
lock
test
mov
and
mov
mov
xchg
cmp
mov
push
ss
insl
aaa
cmc
ljmp
pop
aas
ds
popa
and
lods
movzwl
cmp
cmpsl
mov
jle
inc
mov
push
sahf
xchg
out
dec
push
rcrb
or
int3
daa
or
aas
aam
outsb
xchg
cmp
push
arpl
cwtl
cmc
repnz
push
xor
push
xor
lret
mov
rorb
dec
push
cwtl
jno
mov
pop
sub
in
xor
mov
aas
xor
or
pop
loop
pop
xchg
push
add
aas
cmp
sub
sbb
sub
addr16
mov
stos
sbb
mov
add
js
mov
movsb
addr16
and
jb,pt
dec
pop
xor
push
js
mov
or
ret
xchg
movb
imul
lahf
ds
imulb
hlt
jb
sbb
xor
testl
mov
xor
inc
popf
adc
push
nop
aam
mov
sub
jo
inc
xor
pop
cmpsl
inc
and
ljmp
sbb
sbb
xchg
jnp,pn
or
rdmsr
xor
fcmovne
sarb
subl
addb
mov
aad
in
rcrb
adcb
xor
call
mov
inc
adc
pushw
push
push
mov
bound
idivl
pop
cmp
or
insl
in
and
xor
test
rorb
push
addl
and
mov
cmp
fmull
jb
pop
push
or
inc
sbb
add
jnp
pushf
push
and
fbld
xor
xor
mov
mov
jge
mov
rclb
xor
or
cmp
sub
cmp
push
testl
inc
cmp
cmp
inc
insb
js
push
sbb
push
xor
xchg
les
punpcklbw
mov
sbbl
inc
push
inc
cwtl
test
fadds
adc
xchg
dec
jle
adc
push
ljmp
or
lret
inc
clc
push
jno
jl
aas
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
ret
cmc
ss
fldl
pop
cmp
rcll
outsb
test
mov
sub
or
in
out
dec
push
push
pop
call
jns
andl
pop
mov
mov
jl
andl
adc
mov
adc
push
test
cld
and
scas
hlt
inc
cltd
or
jne
aam
outsb
inc
or
scas
loopne
jecxz
fistpll
jno
cltd
push
pushf
dec
xor
pop
adc
push
sahf
push
xchg
dec
outsb
mov
mov
test
mov
xor
add
add
and
ss
aad
add
les
pop
test
loop
xchg
inc
jo
and
inc
mov
ret
ret
lods
pushf
fdivrl
in
test
push
mov
loopne
test
mov
ret
dec
cmp
xlat
shll
sbb
jl
or
lcall
adc
pop
je
popf
sbb
not
roll
mov
jmp
add
arpl
insb
dec
dec
adc
lock
jno
inc
push
inc
adc
add
bnd
fdivs
popa
pop
pusha
add
addb
jo
lods
jmp
es
pop
pop
fnsave
testb
loope
sbb
orl
xor
vphaddwd
inc
daa
push
loop
or
cmp
cmp
cmp
cmp
js
cmp
imul
pop
testb
je
and
outsb
xchg
rolb
les
push
pusha
pushl
dec
jl
loope
xor
xchg
push
sbb
movzbl
adc
ficompl
mov
dec
mov
mov
push
jle
inc
mov
mov
sbb
mov
lret
mov
mov
pushf
mov
add
addl
cltd
mov
mov
inc
cmp
subb
lea
cltd
xchg
popf
adc
movsl
mov
xor
aaa
add
add
add
sbb
int3
or
fstpl
mov
mov
test
pop
pop
stc
push
sub
dec
je
insb
scas
push
pop
sbb
push
cmp
filds
fstpt
mov
xor
cmp
add
mov
add
push
jmp
clc
push
push
movlhps
sub
add
aad
fisubs
daa
movl
dec
push
cmpsb
push
loope
data16
pop
mov
mov
push
outsb
cld
nop
jmp
gs
fcompl
insb
inc
push
pushw
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
or
lock
add
xor
out
pop
ret
add
jmp
xor
push
ret
push
loopne
jl
push
pop
cmp
xorb
test
dec
cwtl
inc
jp
inc
push
insb
mov
insb
mov
cwtl
mov
adc
pop
mov
adc
xor
inc
xchg
ret
push
xchg
js
cmpb
test
or
leave
pushf
dec
imull
mov
dec
icebp
add
mov
adc
add
xchg
cwtl
gs
xor
jns
dec
push
or
pop
enter
inc
inc
clc
add
pop
cmc
xchg
cmp
xchg
push
xchg
dec
pop
in
je
lock
movsb
adc
mov
daa
add
xchg
int
add
mov
addr16
rcl
movsb
xor
sub
inc
sarb
jae
add
jle
into
add
xchg
push
stos
adc
rorb
jo,pt
adc
push
sub
movsl
aam
adc
sub
jge
pusha
add
push
mov
pop
or
add
or
inc
inc
xchg
xor
cld
sbb
pop
and
jl
dec
jbe
and
mov
gs
dec
sub
mov
push
mov
std
push
cmp
pop
jae
mov
add
push
xor
mov
add
sub
orl
outsl
add
pusha
aad
andl
aam
mov
push
push
jmp
rorl
and
int3
adc
ret
xor
cmp
insb
test
cmp
fisubl
cmp
dec
jge
adc
aas
xor
pop
sbb
int
pop
cmp
sti
add
cmp
jne
mov
inc
pop
pop
mov
xor
test
call
das
pop
lea
loop
mov
rol
xchg
xchg
mov
xor
icebp
stos
or
sbb
les
adc
xchg
mov
fdivl
xlat
adc
sub
movups
xchg
push
sahf
test
mov
sub
cld
sub
outsl
sti
cld
cmpl
jbe
insb
shr
inc
add
aaa
xor
mov
dec
iret
inc
cwtl
mov
mov
or
sbb
push
mov
cmp
sbb
or
pusha
insb
std
mov
decb
mov
dec
fucom
es
adc
sbb
lock
mov
lock
cmpsl
and
push
shlb
imul
cmp
cmp
pop
adc
sub
lcall
sub
dec
scas
add
jns
sbb
loope
pop
dec
jnp
jge
push
add
lahf
sbb
int
or
inc
add
mov
mov
push
push
inc
ret
xchg
rolb
sub
subb
mov
mov
inc
mov
add
push
sbb
mov
lea
adcl
pop
jmp
outsb
fucomi
arpl
out
movsl
addl
insb
mov
adc
aad
fwait
jno
and
or
pushl
mov
jns
and
and
inc
xor
mov
sub
je
adc
sub
sub
ss
or
adc
sbb
subb
push
or
push
push
sub
push
pop
mov
scas
fildl
lea
ss
xor
getsec
jbe
mov
ret
push
dec
hlt
out
add
sub
or
sahf
inc
outsb
jmp
pop
loopne
add
imulb
add
mov
jo
push
loopne
inc
pop
in
insb
or
push
or
in
jbe
jo
out
cmpsb
mov
jmp
scas
xchg
sbb
push
add
in
hlt
inc
or
lods
mov
push
mov
push
xchg
pop
adc
sbbb
cwtl
mov
jmp
out
cmp
xor
pop
cli
adc
add
mov
jae
push
inc
shr
and
aam
popl
dec
cmp
lea
mov
lock
inc
push
dec
dec
cmp
xchg
sub
xchg
push
push
rclb
and
inc
push
dec
lret
lcall
cld
pop
mov
lahf
xor
lods
sbb
sbb
or
addb
cld
adc
lea
out
xor
icebp
dec
cld
adc
pop
mov
out
lcall
push
sbb
pop
stos
sbb
lahf
test
cld
mov
adc
pop
testl
add
aas
adc
sbb
push
jbe
repnz
call
and
pop
or
clc
push
idivl
fnstcw
fadds
push
xchg
sub
sbb
aad
sbb
cmp
js,pn
jne
dec
jmp
or
xchg
lock
or
loopne
push
mov
lret
add
test
scas
jmp
nop
adc
xchg
mov
fistpll
sub
adc
mov
testl
sbb
pop
nop
jle
xor
movsb
in
push
pop
or
inc
in
ret
rorl
pop
pop
lret
in
adc
mov
adc
shlb
popa
xor
lods
pop
bnd
mov
push
mov
aaa
pusha
and
jo
push
push
cwtl
lock
je
cmp
dec
jl
movl
cltd
push
push
push
test
aas
add
cmp
xor
inc
lcall
mov
pop
add
mov
outsb
dec
mov
lods
or
test
pusha
push
gs
loop
ret
push
testl
mov
or
jp
jae
cmpl
mov
push
rolb
arpl
pop
xor
idivl
pop
lods
push
xor
mov
xlat
add
and
mov
mov
xchg
add
bound
adc
pushf
or
testb
js
and
push
xchg
mov
mov
rcl
inc
ja
arpl
in
xchg
fnsetpm(287
pop
or
mov
and
xchg
push
cmp
or
or
mov
ds
xor
pop
mov
pop
xchg
mov
loopne
inc
push
push
sti
pop
es
into
loop
pop
dec
or
lods
sub
push
push
cmp
je
rorb
adc
inc
push
mov
dec
push
les
adc
add
div
les
cmp
lods
ficompl
pop
cmpsl
add
push
adcb
pushf
mov
mov
mov
jnp
data16
adc
outsl
or
mov
cli
out
sti
dec
ja
je
or
je
or
sub
xchg
rcr
sbb
cmp
cmp
jl
imul
ret
jl
add
sbb
js
jne
lcall
ds
jl
arpl
outsb
cmp
adc
xor
cmpsb
rclb
movsl
addr16
adc
sbb
pop
pop
ljmp
scas
movzwl
dec
fildll
push
and
call
lea
incb
ret
and
pop
hlt
and
out
or
add
push
fidivl
je
lcall
ret
movsb
push
push
or
adc
fsubr
adc
adc
inc
sub
rolb
and
sbb
cltd
mov
lea
insl
push
add
pop
dec
or
mov
pop
mov
adc
and
dec
je
sub
sub
mov
fs
add
mov
in
mov
mov
cmp
or
push
adc
inc
pop
xchg
push
leave
mov
jnp
jo
ds
add
fisttpll
dec
pusha
jge
inc
or
test
lahf
ja
imul
adc
adc
nop
jns
in
and
sbb
out
stos
or
cmp
cld
loop
push
in
cmp
rorb
shrl
xor
dec
jb
rorb
adc
pop
fcoml
pop
add
or
stc
sti
je
dec
or
xchg
shrb
sbb
inc
push
inc
mov
or
inc
clc
mov
sbb
cwtl
mov
ror
dec
xchg
pop
pusha
stos
fcomps
and
fadd
mov
loopne
enter
push
push
jecxz
cmp
or
faddl
sbb
ret
js
xor
xchg
loopne
fdivrl
mov
pop
xchg
mov
sbb
fcoml
adc
popf
sub
add
mov
test
xchg
les
sub
mov
dec
push
cltd
mov
imul
nop
sub
sbb
rorb
sbb
nop
add
push
lock
cmp
push
in
mov
call
sbb
outsl
inc
push
jnp
mov
jge
scas
je
jle
dec
sbb
sbb
ret
in
cmpb
xchg
fcoml
in
xor
add
push
and
jnp
sbb
xor
aam
dec
mov
int
aam
xor
bound
mov
xor
rorb
sbb
js
and
sbb
negl
adc
xor
or
idivl
les
adc
jmp
sbb
sub
stos
out
dec
fisubl
mov
xchg
cmc
cld
sbb
cmc
inc
sub
dec
rclb
pushf
jnp
or
sbb
cltd
mov
adc
or
add
dec
test
or
sub
adc
sbb
xchg
mov
xchg
inc
nop
sahf
add
je
push
and
addr16
dec
xor
xor
mov
push
fsubl
fsubs
xor
outsl
jecxz
push
mov
mov
lcall
imul
movl
and
and
ss
push
sbb
dec
in
fimull
popf
push
ss
in
cmp
in
subb
jno
sahf
cmp
add
pop
xor
rcll
push
jo
dec
leave
pop
and
and
nop
subl
daa
add
and
je
add
test
sbb
xorl
dec
jl
jne
cwtl
mov
or
or
push
and
pop
adc
adc
lea
popf
and
inc
out
or
sbb
pop
jp
cmpsl
xor
or
push
mov
xchg
mov
add
cli
cmp
adc
adcl
ret
leave
lcall
add
fsubrs
cmp
rcr
sahf
ret
or
push
aam
outsb
and
xor
shlb
push
add
add
fildl
inc
mov
xor
sbb
sbb
pop
incl
mov
sbb
sub
decl
sbb
xor
test
jl
mov
ret
hlt
mov
call
mov
movsb
pop
xchg
into
pop
jp
mov
pop
imul
pop
cmp
outsl
cmp
nop
dec
lahf
add
lea
sbb
dec
xor
xchg
push
js
dec
mov
fcoml
add
push
or
dec
mov
xchg
pop
ds
add
test
inc
inc
ret
cmp
mov
and
aaa
loopne
xchg
fcomps
add
test
pop
fs
ficompl
rorb
pushf
loopne
and
adc
das
pop
aas
stc
jae
in
add
add
or
movsb
push
fucomip
mov
dec
repnz
rorb
xchg
orl
sbb
or
bound
lock
jg
daa
push
addb
cmp
pusha
pop
cmpsl
push
enter
jne
stc
lods
mov
add
aam
or
mov
ret
mov
mov
mov
cs
ds
jp
sbb
push
movsb
test
arpl
es
fidivrl
je
cmp
andb
lock
out
dec
or
js
mov
sarb
sbb
add
sbb
and
inc
adc
dec
cmp
add
in
add
popa
shll
push
arpl
dec
adc
and
inc
add
sbbb
imul
adc
push
xchg
cli
adc
xor
and
lahf
cmp
clts
fiaddl
adc
jae
xor
push
push
cs
movb
cwtl
sbb
inc
mov
mov
mov
inc
sub
jle
push
push
adc
icebp
sbb
sub
mov
mov
in
jbe
notb
adc
mov
adc
fcoms
test
sbb
dec
fimull
outsb
push
push
inc
sub
push
sub
pop
inc
jbe
loopne
orb
inc
add
notb
pop
sbb
inc
les
aad
test
sbb
stc
icebp
cmp
fisubrs
push
test
mov
shr
stos
leave
dec
push
sub
mov
adc
xchg
mov
dec
test
sbb
hlt
mov
dec
adc
adc
adcb
cli
call
jb
add
shrl
fsts
adc
cmp
and
jne
and
or
shlb
fldt
dec
rorb
movb
and
add
push
loopne
adc
push
dec
lock
loopne
dec
push
sub
lock
pop
sbb
push
cmp
push
lock
dec
inc
adc
inc
inc
and
sub
cld
mov
bound
dec
sahf
sub
or
jo
inc
cmp
mov
or
push
push
pop
jmp
dec
adc
movsb
xchg
fsin
in
add
outsl
ja
mov
aam
inc
add
inc
push
add
stos
add
sbb
sbb
add
adc
and
mov
push
or
pushf
adc
push
test
cmp
nop
and
sti
mov
rcr
mov
jmp
cltd
push
and
int3
adc
push
sub
subl
add
sbb
mov
xor
iret
mov
in
dec
or
je
dec
push
push
lahf
ja
adc
sub
lock
sbb
popa
jnp
push
xchg
add
xchg
cmpsl
inc
sbb
out
xchg
inc
sbb
push
push
cwtl
nop
sbb
daa
and
scas
int3
xchg
xchg
or
sub
inc
gs
in
and
and
bnd
push
sub
mov
sbb
jp
cli
or
xchg
add
rep
push
movsl
or
nop
push
push
sub
jb
lahf
ja
adc
inc
xor
cmp
add
or
and
xor
nop
lahf
xor
nop
iret
sub
and
push
sbb
cmp
push
ret
repz
cmp
dec
or
xor
push
dec
enter
inc
and
or
pop
cs
inc
ja
inc
jb
add
mov
add
inc
sbb
inc
push
dec
dec
in
enter
adc
sbb
dec
clc
ljmp
mov
aam
add
mov
cmp
lahf
icebp
push
mov
out
jmp
mov
inc
add
fnstenv
xchg
and
push
imul
std
aaa
inc
cmp
frstor
cmp
sub
ret
dec
push
adc
movsl
mov
jne
push
flds
add
dec
xor
popf
call
xlat
mov
mov
les
push
sub
add
sbb
insb
add
push
inc
mov
aaa
dec
ficoml
dec
test
rclb
adc
jo
jecxz,pt
outsl
lret
dec
loopne
roll
shlb
test
fdiv
cld
lcall
loopne
jbe
push
sbb
add
push
movsl
dec
arpl
inc
xor
sbb
and
cmp
push
daa
testl
cmp
loopne
xor
or
jecxz
mov
dec
mov
add
loopne
sub
int3
xlat
mov
sahf
ficoml
adc
repnz
pop
pop
pop
pop
pop
into
js
inc
stos
hlt
out
test
stc
mov
mov
push
in
test
in
call
xchg
call
cmp
cli
dec
pop
cmpsl
testb
push
bound
orl
adc
jp
push
xlat
jo
mov
lock
jle
sbb
add
inc
and
cmp
xor
xor
push
push
pop
inc
out
jl
or
push
loopne
push
sub
pop
add
lds
xchg
push
or
xor
mov
test
push
mov
inc
int3
jns
xchg
add
xor
cwtl
sub
xchg
in
add
push
cmc
push
aaa
dec
dec
xchg
das
dec
js
mov
jo
int3
or
jbe
aaa
push
rcrb
pop
jo
dec
je
mov
or
loope
sub
xor
test
mov
ret
cmpsb
cmp
rorb
push
sbb
jns
test
rolb
lock
cmp
xchg
push
mov
lock
cmp
repz
cmpsb
imul
mov
dec
cld
jge
mov
cmp
push
add
lock
pop
inc
aam
sbb
adc
mov
cli
mov
mov
jns
dec
cmp
repnz
out
push
cli
sbb
inc
adc
jne
push
andl
sub
pop
add
lcall
inc
jp
jb
sub
inc
mov
in
inc
and
idiv
jae
scas
in
or
add
add
fs
mov
xor
out
push
out
pop
cmp
jne
sub
aaa
loopne
call
sti
jecxz
adc
cmp
dec
pop
mov
mov
xchg
ficompl
rclb
loopne
and
ret
cmp
adc
jge
ja
cmp
jmp
cmp
bound
cmpl
xor
add
call
imul
jns,pn
jno
aaa
or
or
sbbb
and
mov
je
push
int3
push
int3
sbb
pop
and
mov
pcmpeqb
adc
or
xchg
jae
add
jle
cmp
and
js
test
push
pop
xor
loopne
addr16
mov
xor
push
sbb
or
jbe
mov
jnp
mov
jbe
push
or
sbb
xchg
push
push
sub
decl
adc
dec
out
aas
push
adc
aam
sbb
or
or
add
ja
add
cltd
xor
aad
movsl
sbb
and
cmp
push
test
jmp
inc
dec
test
mov
add
rorb
ja
mov
into
std
decl
call
jbe
push
xlat
push
fsubrs
cmp
sbb
adc
jp
or
lods
fstps
mov
sbb
mov
fnstenv
dec
sbb
adc
bound
and
sub
dec
inc
pop
enter
imul
or
loop
xchg
jp
roll
dec
sbb
rolb
mov
jle
adcb
jne
adc
add
cmp
sbb
cli
add
push
and
inc
push
sub
pop
adc
inc
adc
nop
int3
cmp
mov
pop
fwait
cmp
sub
repnz
je
dec
inc
add
mov
push
sub
mov
and
mov
mov
jmp
ljmp
inc
jb
movsb
pop
push
adc
push
ret
and
mov
inc
mov
dec
stc
cmp
stc
add
cmp
mov
leave
add
testl
push
movsb
push
scas
jl
pop
loope
test
push
mov
outsl
out
mov
inc
pop
and
push
sub
xchg
add
lret
pop
lds
push
add
shr
push
loop
scas
in
cltd
pop
enter
and
bound
jns
das
sbb
pop
pop
xor
add
add
sbb
test
insb
sbb
or
in
push
and
xorb
pop
cmc
dec
js
push
push
enter
push
cmp
jb
lea
cmp
sbb
and
add
inc
jmp
xor
and
aaa
cmp
add
cmpsl
inc
push
push
sbb
mov
add
mov
mov
sub
jmp
ficompl
jle
pop
cltd
or
je
push
or
inc
adc
aas
mov
aaa
inc
cmp
fdivs
subl
push
and
and
rcrl
sbb
cmp
cs
or
lock
inc
xchg
aaa
adc
push
or
movsl
and
jb
fcomp
test
adcb
fcmove
push
jb
inc
out
jns
jo
dec
lea
mov
push
out
ror
in
test
push
adc
ss
sbb
or
out
xchg
xor
add
jecxz,pt
mov
inc
adc
sub
jle
bound
sbb
pop
sahf
sub
dec
or
cmova
inc
adc
aaa
mov
pop
negl
imul
dec
jae
scas
and
push
lods
xchg
xchg
inc
push
and
neg
inc
xchg
push
push
and
or
cmpsb
shlb
addb
lret
jb
add
pop
pop
xchg
lahf
jmp
movsl
adcl
push
hlt
fcoml
pusha
xor
xor
popf
movsl
ficomps
lods
rorb
and
add
inc
dec
cmp
jecxz
mov
js
inc
cmpsb
sbbb
push
inc
movsb
imul
loopne
push
push
aam
gs
adc
push
adc
push
sbb
mov
push
pop
mov
rep
pop
sub
cmpsl
loopne
pop
sbb
insb
and
in
aaa
adc
mov
movl
pop
inc
inc
fwait
pop
fisttpl
xchg
and
sbb
or
add
sarl
adcb
dec
sub
ret
adc
jecxz
nop
inc
pop
ret
push
mov
mov
push
rolb
mov
xor
inc
fs
and
jne
loope
jl
xor
gs
inc
xchg
inc
in
fs
mov
dec
add
test
push
push
sbb
and
dec
sbb
push
mov
sbb
andps
cmp
add
fcoml
or
push
pop
jg
xor
ds
cmp
fdivl
cltd
shll
inc
hlt
add
in
add
cmp
insl
addr16
fdivr
jnp
leave
jl
push
clc
std
add
mov
outsl
shr
movsb
cs
adc
into
cld
sub
mov
pop
sbb
lods
mov
pop
add
inc
mov
xor
cmp
adc
insl
jbe
sub
lea
ret
push
push
push
push
inc
inc
cmp
jb
repnz
jg
dec
cmp
cmp
xor
sub
cmpl
popa
mov
jmp
lods
sbb
pushf
xchg
stos
sbb
mov
fadds
lret
out
lea
inc
mov
aam
xor
mov
mov
xor
ret
movsl
xchg
int3
cmp
mov
inc
je
cmp
push
dec
jp
inc
push
call
mov
sahf
mov
test
int
std
mov
je
xor
lret
test
sub
mov
jb
sub
mov
inc
push
pop
sbb
mov
sti
jl
test
in
mov
cmp
cmpsb
inc
or
movsb
jle
je
or
ret
mov
push
and
sub
jge
orl
push
lcall
mov
shr
not
pop
xor
nop
pushf
push
push
aas
dec
out
rclb
out
and
jnp
int3
push
shll
push
xor
in
je
dec
scas
pop
gs
fs
lods
addr16
add
inc
in
aaa
decb
xchg
xchg
xchg
fbld
xor
xor
lret
lret
lret
cmp
pop
inc
jo
add
lret
dec
xchg
dec
in
sbb
aas
lds
push
pusha
pop
or
test
add
add
add
insl
jle
imul
cld
int3
push
sbb
inc
add
or
repz
inc
movl
scas
or
cmpb
lods
fisubrs
add
xor
inc
and
ljmp
add
adc
push
mov
sbb
iret
out
mov
sub
icebp
fldt
imul
xchg
es
mov
push
or
in
imul
scas
ret
testl
stos
sub
mov
or
xchg
xor
add
mov
adcl
es
mov
adc
mov
shlb
sub
mov
xchg
cltd
gs
mov
je
jbe
repz
je
or
je
cmp
je
cmp
cmp
dec
push
outsb
mov
pusha
and
outsl
adc
cmp
insl
inc
xor
ss
or
adc
mov
xor
or
test
daa
pop
cmp
adc
adc
sub
sub
pop
mov
push
add
pop
inc
ss
mov
cmpsb
inc
xor
or
fisubrs
sub
jmp
sub
jae
cmp
cmpl
shlb
add
dec
les
leave
andl
or
adc
pop
push
push
and
push
shlb
imul
repz
dec
adc
in
outsb
or
inc
dec
and
push
out
xchg
adc
push
adc
xor
jb
loope
cmp
xchg
js
inc
mov
xchg
testb
sahf
rol
ljmp
imul
inc
orb
xchg
adc
xor
and
xor
andl
adc
enter
and
add
sub
mov
arpl
and
push
mov
or
sbb
scas
lahf
xchg
sete
pusha
fwait
pusha
and
adc
cs
mov
jl
inc
repz
and
cld
add
add
xlat
pop
hlt
or
mov
sub
mov
inc
faddl
mov
and
orb
adc
js
xor
add
lret
loop
xor
in
mov
push
push
cmp
aaa
call
dec
sbb
pop
dec
push
notl
adc
mov
mov
xlat
mov
dec
or
hlt
push
popf
push
orb
mov
test
and
fs
leave
add
inc
add
jge
adc
jno
incl
test
jecxz
lea
dec
rclb
or
fisubrl
adc
xlat
mov
adc
arpl
add
mov
mov
outsb
lcall
mov
lea
sbb
mov
xor
cmp
fadds
fildl
bound
js
inc
add
bnd
rorl
movl
mov
jno
pop
jp
mov
ljmp
and
je
add
and
fisubs
mov
cmp
cltd
cmp
dec
and
fidivrs
sbb
cli
jo
push
jo
sahf
sub
sbb
push
icebp
subb
cld
enter
jb
push
xor
sarb
jb
lods
bound
js
jo
dec
mov
and
adc
mov
dec
mov
sti
leave
adc
inc
jb
inc
add
pop
mov
add
dec
rorb
lahf
jge
add
inc
cmp
adc
lods
xchg
cmp
mov
adc
movsb
or
mov
sub
das
dec
push
sbb
inc
push
mov
jns
pop
mov
adc
push
jmp
bound
inc
adc
add
mov
add
jle
mov
jl
xor
push
insb
loope
movsb
add
jnp
push
adc
shll
dec
fwait
outsb
or
cmp
adc
pusha
push
cmp
xchg
add
dec
loopne
or
std
shll
mov
je
rclb
shlb
outsl
out
adc
pushl
lcall
clc
add
clc
jbe
jmp
jb
mov
jmp
xchg
dec
inc
pusha
mov
addl
lods
jecxz
dec
push
sbb
faddl
cmc
xchg
repz
aad
sbb
mov
pop
enter
pop
add
adc
inc
rcl
imulb
test
inc
or
sarb
push
lea
mov
movsb
sub
loopne
lock
pop
pop
dec
insl
mov
or
xchg
cmp
inc
je
sarl
xchg
pop
divps
jnp
in
sub
xchg
lea
cmp
mov
pop
addr16
push
jns
dec
mov
or
push
nop
pop
sbb
xchg
lods
xor
ret
or
andl
dec
loopne
mov
mov
cmp
sbb
or
pop
es
adc
call
add
leave
mov
dec
or
xor
mov
cmp
pushf
testb
inc
sbb
rcrl
stos
enter
arpl
dec
add
call
jne
sub
lea
jp
sub
mov
mov
add
inc
call
ljmp
push
ja
pop
or
pop
jmp
add
mov
clc
jae
adc
mov
push
add
and
add
mov
add
adc
pushf
repz
or
aaa
add
pop
cmp
loop
mov
push
cs
or
xor
repnz
pop
rol
fwait
xchg
push
pusha
cmpb
js
fisttpll
adc
jle
push
bound
sarb
adcl
pop
or
ret
pop
lock
pop
xor
jmp
test
test
sub
lea
sub
test
inc
xor
add
adc
inc
and
xchg
sub
or
dec
add
add
mov
add
add
pop
and
xchg
and
cmp
scas
xchg
or
pop
sbb
ret
dec
andl
ljmp
and
push
sub
and
leave
and
dec
mov
mov
cmp
mov
dec
outsb
xchg
adc
fisubl
xchg
dec
or
adc
outsb
sub
or
fldt
shll
inc
dec
or
push
insl
repnz
sbb
ret
pop
mov
and
adc
pmulhuw
fwait
daa
add
sbb
xor
fmuls
xchg
cld
or
sbb
jecxz
lock
jo
mov
jne
xor
xor
hlt
inc
je
loopne
mov
pop
and
cmp
shl
sahf
nop
jmp
mov
dec
fwait
movsl
push
out
mov
cmp
xor
pop
pop
cmpsb
sbb
push
iret
shll
mov
push
int3
push
and
sub
rcr
mov
les
and
add
and
add
add
adc
in
cmp
and
push
es
in
sub
mov
cmp
sub
sbb
sbb
subb
push
fcomps
jnp
dec
cmp
scas
sbb
push
pop
push
adcb
push
iret
xor
or
xor
mov
mov
mov
adc
adc
inc
leave
jmp
in
xchg
xchg
cmpl
xchg
and
sbb
pusha
push
scas
xor
jb
push
add
jb
mov
or
leave
adc
jg
pop
mov
mov
sub
sbb
add
or
dec
mov
adc
fbstp
inc
or
cmp
movsb
jns
xchg
lds
and
adc
data16
lea
sub
dec
lret
adc
adc
xchg
int
xor
sbb
inc
lea
adc
adc
mov
adc
paddsw
cmp
jae
jne
mov
jnp
xor
add
jb
push
sti
mov
and
cltd
xchg
loope
sbb
or
add
and
jbe
fldl
enter
and
or
pop
movsb
adc
mov
xor
addb
dec
out
and
xchg
mov
ret
and
int3
ja
xchg
sahf
sub
adc
sub
pop
sub
sub
mov
or
push
enter
pop
test
jne
xchg
mul
in
push
fsubrl
push
and
ljmp
repz
push
pop
inc
xlat
imul
mov
rcll
nop
lahf
mov
xor
jne
push
les
inc
add
cmpl
rcrl
inc
orl
call
xor
xchg
imul
jno
xorb
ret
push
or
cltd
loopne
scas
repz
stos
lock
xor
aad
sub
test
idivb
shll
add
out
push
movsb
call
add
sbb
inc
scas
cmpsb
mov
cmp
je
ret
insl
mov
push
xor
imul
mov
mov
into
mov
push
cmpb
jae,pn
fnsave
xchg
outsb
pop
int3
ss
ficompl
adc
out
jecxz
mov
stos
jg
cmp
jmp
int
or
push
pop
push
jmp
cmp
test
lret
cmc
ja
test
xchg
mov
lock
clc
pusha
jmp
loop
or
add
or
in
jle
mov
add
std
xor
in
in
cmp
jg
outsl
pop
iret
push
xchg
popa
aaa
and
sbbb
sub
push
add
faddp
and
aaa
cmp
add
pusha
xlat
push
pop
and
mov
addb
pusha
outsb
pop
orb
mov
pmulhuw
es
loopne
out
add
insb
or
sbb
cmp
jl
inc
push
mov
stos
mov
xchg
outsb
je
add
clc
xchg
orb
push
pop
lea
add
loope
imul
pushf
inc
sbb
cmpsl
test
insb
in
lock
inc
jg
jmp
add
or
cmpsl
sarb
inc
sub
xchg
or
push
or
and
add
or
fmuls
fdivl
js
dec
jl
fs
mov
or
inc
cmp
leave
jmp
mov
lods
cmpsl
pop
lahf
inc
sbbl
push
addl
or
dec
or
stc
call
xor
mov
pop
xor
fs
movsb
xor
xchg
jo
es
push
pop
enter
testl
ret
push
jecxz
add
push
ret
movsb
adc
fiadds
xlat
jmp
jl
es
mov
sub
cmp
enter
push
movsb
prefetch
mov
sbbl
xor
pusha
mov
rcrb
in
rcrl
add
adc
add
sbb
or
jge
ss
adc
cmpsb
in
add
lret
add
add
jle
xor
aas
iret
add
ljmp
rcr
ja
pop
push
mov
cmp
jl
cmp
jle
cmp
push
jp
push
ss
or
pop
ret
aas
stos
mov
out
xchg
andb
cmp
ss
test
pop
and
cmp
jl
je,pn
cld
push
repnz
pop
push
push
mov
lcall
pusha
test
imul
or
popf
and
sbb
cld
imul
add
push
leave
jns
inc
or
push
mov
add
mov
sbb
jg
mov
es
hlt
mov
cmp
jl
jecxz
push
ja
cs
mov
jl
mov
incl
mov
jmp
push
js
jge
test
loope
pusha
dec
pop
jp
jne
mov
inc
mov
dec
cmp
sub
vcvtsd2ss
or
xchg
sbb
out
inc
add
outsb
jmp
sub
lock
jmp
and
inc
push
add
flds
cmp
add
dec
jno
adc
mov
dec
xor
out
enter
jl
push
popf
stc
add
push
outsl
jne
adc
sbb
call
lods
lret
cmp
cmp
mov
clc
xor
icebp
sub
push
fstl
divl
push
loop
mov
cmp
push
adc
push
mov
push
or
or
in
fs
sub
loopne
adc
out
ret
movsl
sub
jb
in
fimuls
fmuls
mov
inc
lret
add
in
xor
inc
ret
xor
lcall
dec
mov
mov
movsb
dec
lea
fwait
cmpsl
mov
push
call
add
pop
hlt
jg
pop
sub
inc
inc
dec
push
and
es
add
aam
push
shlb
and
or
shrl
shlb
xchg
dec
xor
nop
lret
das
sbb
add
jb
adc
es
push
pop
cmp
pusha
fs
or
das
int3
pusha
out
add
outsb
adc
jge
cmp
xor
inc
fiadds
xchg
jne
sub
push
ds
inc
dec
adc
add
add
mov
xchg
mov
and
cmp
push
cs
sbb
sub
dec
mov
or
pop
and
shrl
movb
xor
xor
mov
or
cmp
test
jge
imul
push
pop
jne
inc
mov
xor
cli
lret
jae
shlb
addr16
xchg
add
jbe
jns
lret
push
xlat
int3
mov
pop
jp
sub
jle
and
imul
sub
jb
scas
lock
test
and
mov
and
push
push
cmp
and
inc
push
sbb
loopne
xchg
or
pop
push
ljmp
and
movq
mov
jmp
cmp
and
js
inc
inc
adc
xchg
cld
pop
lods
out
cmp
jbe
pop
mov
test
dec
mov
jmp
inc
shrb
jmp
cmp
dec
sti
insl
lds
popa
or
mov
orb
cmp
les
popa
stos
popf
sbb
sahf
push
mov
add
cmp
push
or
lret
pop
cs
or
pop
ret
mov
les
pop
je
fmull
adc
fldl
add
pop
sbbl
fucomp
std
and
fwait
mov
sti
fsubrl
pop
xor
cmp
loopne
movsb
popf
pop
add
aas
xor
hlt
dec
dec
shrb
pusha
xor
cmpsl
mov
cli
xchg
jns
fmull
jmp
inc
test
adc
dec
xor
lcall
mov
cmp
je
or
je
cmp
sub
adc
and
add
push
add
pop
sub
and
add
lea
clc
clc
or
nop
jl
mulb
lret
fcomi
jne
xor
in
rolb
push
jle
inc
and
sub
je
pusha
jne
adc
jecxz
in
mov
push
pusha
movsb
or
push
pop
mov
jle
mov
sub
test
xchg
mov
mov
pusha
shlb
push
in
repnz
call
fs
inc
bound
lcall
sbb
lea
shrl
fmuls
xchg
lcall
adc
cmp
lods
roll
ret
std
repz
mov
add
enter
insb
nop
test
pop
sub
movsl
pop
and
adc
mov
mov
mov
mov
shll
mov
adc
sub
in
stos
adc
or
jle
xchg
daa
jo
insb
sbb
adc
mov
pop
lret
cmp
ss
or
cmp
add
pop
fstpl
jle
sub
sub
inc
mov
push
cmp
push
daa
mov
add
push
mov
pop
sbb
mov
fwait
sub
jl
add
mov
adc
mov
add
adc
pop
add
into
pop
rcrl
inc
sub
or
jmp
cmpb
pop
lret
xorps
fimuls
clc
test
pushf
adc
cwtl
push
fsts
test
hlt
sbb
jl
rorb
in
pusha
pop
mov
ret
popa
shrl
jg
dec
fdivrl
push
jg
mov
pop
xchg
mov
cmp
je
mov
mov
test
aaa
xchg
mov
mov
imul
inc
mov
mov
in
push
movsb
or
jns
jb
mov
addl
rorb
pop
add
add
or
addr16
or
add
push
pop
or
sub
cmp
sahf
jmp
test
jne
or
sub
fldl
dec
xor
in
icebp
pop
fsts
aas
mov
cltd
mov
leave
int3
mov
mov
fucompp
leave
mov
pop
fcomp
jae
sbb
pop
ficoml
out
dec
ljmp
repnz
add
push
js
sbb
jmp
andl
lret
mov
ds
mov
pop
fdivrs
xor
add
imul
mov
rolb
add
sub
in
jmp
add
jnp
or
mov
sub
lea
lds
cwtl
dec
jns
iret
jae
call
and
push
jae
jae
je
and
mov
cmp
cmp
ret
add
pusha
incl
sub
hlt
lds
sbb
mov
adc
dec
je
or
or
sub
rcll
sub
and
fsubrs
cli
cmpsb
adc
fisttpll
je
fldl
mov
test
fstpl
add
insl
or
testl
jne
adc
adc
lahf
out
jne
push
divb
or
jne
and
jne
or
or
mov
fldz
adc
cli
and
pop
andl
push
push
rcll
and
scas
sarb
push
leave
and
test
mov
adc
or
andl
outsb
dec
add
pop
jecxz
mov
mov
xchg
sbb
cmp
jl
jo
imul
xor
xchg
idivb
insl
cmpsl
sbb
rolb
insb
dec
push
addb
lds
push
sbb
cmp
stos
mov
aam
sub
inc
inc
andb
pop
xchg
insb
cmpsb
add
aam
pushl
inc
fisubs
lods
inc
aam
push
or
jge
ja
fimuls
sti
movsl
pminub
test
clc
sbb
mov
push
and
nop
adcl
push
dec
add
sbb
sbb
sbb
movsl
in
pop
cmp
add
cltd
and
loop
mov
int3
dec
fsubrl
xor
nop
add
add
stc
mov
and
sbb
push
add
ror
jge
and
ja
ljmp
fildll
jg
pop
push
add
dec
loope
cld
adc
cmp
mov
mov
in
out
pop
push
fs
dec
and
add
pop
roll
leave
sub
push
addl
sbbb
adc
mov
lret
pop
cmp
mov
adc
xchg
xchg
push
pusha
cmc
sbb
xor
pop
mov
outsb
mov
cwtl
or
adc
movsb
ja
and
xchg
add
cmp
inc
xchg
sub
inc
xor
sub
xchg
add
mov
das
or
mov
pop
pusha
mov
and
pop
rorl
jo
sub
test
mov
jno
shlb
add
sbb
lods
or
add
mov
imul
dec
enter
pop
enter
mov
add
jge
or
loopne
xor
leave
enter
adc
insb
xchg
xor
add
and
jno
lods
jg
and
mov
loopne
lea
enter
in
call
movsb
popa
sub
add
in
mov
xor
inc
sbb
dec
ror
enter
leave
leave
sarb
mov
test
icebp
sbb
cld
sbb
pop
pop
and
cmpsl
sbb
xor
add
lock
test
or
push
sbb
popa
sbb
test
popa
loope
adc
push
outsb
rcrb
xor
adc
pop
ret
cs
dec
mov
or
jnp
lret
inc
cmp
jle
mov
pop
fiaddl
es
lret
shlb
xchg
or
add
mov
pop
or
sti
jle
adc
cmc
sbb
push
adc
repnz
pop
mov
add
add
mov
pop
arpl
mov
and
fdivr
push
cmp
lock
jl
push
push
arpl
lea
shll
jnp
nop
and
sbb
stos
js
add
lock
xchg
sub
add
mov
or
or
jle
xlat
scas
inc
or
push
loope
ss
dec
mov
arpl
mov
and
mov
xchg
cmp
call
sbb
popf
push
lahf
data16
or
add
mov
test
lods
or
aam
jl
pusha
mov
cmp
dec
xchg
mov
jbe
mov
mov
cmp
xchg
xchg
push
lods
mov
repnz
add
js
jae
cmp
push
inc
push
inc
and
push
add
js
lods
fdivs
mov
or
xchg
inc
mov
push
jbe
pop
fdivs
and
es
inc
and
mov
sbb
mov
inc
out
pushf
shll
mov
out
fsubr
mov
cli
and
leave
fdivrl
xor
and
push
or
das
adc
sbb
rcl
ret
cmpb
sbb
pushf
mov
jle
popf
push
pop
and
jle
and
adc
dec
or
cmp
mov
push
notb
je
pop
add
pop
xchg
arpl
add
inc
cmp
call
pop
xchg
adc
mov
jno
jne
lock
movsl
cs
sbb
jge
or
mov
mov
pop
lret
int3
dec
fcoms
nop
ljmp
test
adc
mov
inc
mov
ret
adc
test
or
add
xchg
push
jne
push
mov
sbb
loope
sub
lds
shl
mov
ja
pop
xor
push
adc
push
inc
sbb
subb
into
jnp
dec
cmp
fs
fmull
mov
dec
pop
dec
inc
mov
movsb
int3
xor
fcompl
add
dec
cld
cmp
int
or
add
jb
mov
pop
loope
sbb
aad
add
in
xchg
add
ret
dec
clc
int3
ljmp
add
repz
stos
add
mov
popa
xchg
push
cmpsb
cmp
pop
push
xchg
js
push
mov
adc
jl
xorb
adc
pop
jne
adc
push
mov
sub
popf
fnstsw
and
inc
adc
sbb
cmp
test
ret
add
icebp
pop
mov
in
mov
push
push
pop
ja
add
shrb
ljmp
push
and
jae
lock
subl
xchg
sub
aad
popf
mov
pop
movsl
inc
lods
mov
popa
mov
mov
dec
imul
dec
or
pusha
mov
mov
mov
insl
mov
aad
mov
sub
sub
mov
and
or
jg
mov
sbbb
in
daa
push
rol
in
lock
adc
movsl
fxch
jne
hlt
add
jmp
add
mov
dec
out
pop
pop
sub
outsl
xor
and
add
aad
pop
push
nop
icebp
adc
mov
mov
js
push
mov
mov
mov
sub
and
jnp
add
loopne
or
js
lods
cmpsb
sahf
dec
out
cmpsl
rcrb
pop
xchg
jp
add
jg
inc
cmpsl
dec
ja
clc
and
dec
test
xor
add
sbb
sbb
in
pop
pop
pop
push
or
popa
and
mov
sub
or
or
ja
xchg
test
fistl
sti
bound
pop
jecxz
add
sub
adc
or
pusha
test
sbb
and
add
mov
not
aaa
cmc
lret
jno
insb
adc
das
push
xor
daa
push
xchg
ret
repz
orb
xchg
inc
je
data16
dec
mov
orb
push
inc
push
jge
mov
aaa
mov
mov
sub
push
movsb
lock
out
and
cld
jns
xchg
push
mov
and
or
test
ret
lea
dec
push
dec
inc
mov
adc
jnp
cmp
xorb
mov
add
mov
mov
js
cs
movsb
ret
mov
fwait
pushf
data16
xchg
mov
push
xor
push
pop
int
sbbl
lods
fadds
ror
pushf
ret
or
inc
scas
cmp
int3
mov
adc
mov
adc
push
lea
or
jno
cs
in
mov
lods
scas
std
shl
aam
or
fisubl
lods
stc
or
mov
in
sahf
jmp
incl
lea
mov
iret
popa
ret
out
aaa
jnp
xor
ljmp
sbb
pop
lds
jg
insb
add
adcb
adc
outsl
jecxz
push
pop
loopne
loopne
jle
mov
jno
cmpsl
clc
jno
in
dec
movsl
and
mov
pop
push
pop
cmp
loop
cld
adc
or
cwtl
aas
fidivl
inc
and
jnp
and
stos
push
rcrl
push
cmp
adc
or
fs
test
push
pop
ret
lcall
dec
mov
cmp
dec
cmc
sarl
or
and
pusha
mov
push
test
add
cltd
mov
int
jo
jne
inc
sbb
pop
pop
inc
inc
cwtl
loope
sub
pushf
push
push
ret
inc
or
lcall
in
push
or
aaa
mov
es
cmp
ficoml
fcoms
aad
sbb
and
in
jp
shlb
add
out
adc
addb
and
dec
push
test
xor
mov
mov
add
xchg
sbb
hlt
xchg
fstpt
fs
dec
jmp
fbld
ret
movsb
push
add
je
or
js
fisubl
or
iret
dec
lea
scas
add
popa
iret
nop
es
add
sbb
addb
sbb
xor
pushf
push
pop
pop
jns
sub
jns
stos
xor
cmpb
jo
pop
enter
cmp
out
in
aaa
je
xchg
xchg
xor
xor
xor
and
adc
mov
or
push
adc
cmp
iret
jns
sub
and
or
inc
test
add
push
fists
jnp
pop
hlt
mov
and
ljmp
mov
mov
jp
lret
cmpsl
hlt
lcall
cmp
and
adc
xor
notl
inc
sahf
push
jbe
cmp
inc
mov
inc
fldt
adc
push
in
dec
subl
add
pop
mov
out
js
sti
and
out
jno
or
adc
push
arpl
mov
push
and
dec
sub
pop
les
pop
lock
or
adc
sbb
pop
out
dec
ret
mov
int
pop
roll
sahf
nop
xchg
in
mov
int3
std
sbb
in
roll
and
cmp
sub
sbb
lcall
sbb
scas
pop
fldcw
scas
push
sbb
daa
push
das
and
lret
xor
sub
sahf
mov
cmp
popf
adc
and
daa
and
gs
nop
inc
and
pop
inc
ret
test
ficoms
adc
ret
mov
inc
and
mov
jle
sbb
insb
nop
and
mov
pop
sub
push
subl
cmp
addb
int3
and
jl
js
aas
mov
popa
mov
inc
add
push
jnp
adc
pop
mov
sbb
push
pop
out
jge
jo
add
outsb
add
data16
and
cmp
test
cmp
testb
leave
mov
push
push
jnp
push
aam
pop
test
xor
pop
inc
loope
xor
add
or
xor
sbb
daa
popf
cmp
addl
sbbl
rcrb
lea
xchg
les
mov
and
push
xor
or
inc
push
or
fsub
sahf
jge
mov
dec
mov
mov
nop
sbb
cmpsl
xor
add
lods
pop
xor
mov
or
neg
add
jg
int3
add
push
and
lea
pushf
push
int3
add
adc
pop
rorb
int3
and
sbb
adc
ficoml
lahf
outsb
in
aas
je
shll
cld
xchg
pop
lret
push
mov
popf
jne
sbb
add
push
pop
jnp
mov
add
fcomps
pop
shr
inc
push
sti
xor
add
xchg
scas
xor
fstps
sbb
adc
in
add
daa
push
xchg
sbb
out
sbb
sub
mov
jne
mov
lock
mov
insb
pop
push
xchg
push
xchg
aas
pop
shlb
push
jnp
add
dec
loopne
pop
add
imul
data16
xor
pop
jne
push
fimull
sub
iret
mov
cmp
leave
lahf
jae
fs
push
and
push
dec
lock
js
lret
adc
add
sbb
adc
pop
mov
dec
ret
add
add
and
dec
add
add
je
lcall
inc
in
push
cmpsb
sbb
stos
inc
jge
scas
sti
mov
stc
ljmp
inc
cmp
jb
pop
pop
pushl
scas
adc
test
or
push
jl
aaa
add
mov
movsb
jle
pop
mov
test
adc
push
lret
sbb
bnd
mov
or
add
divb
cmp
sub
push
push
cld
sub
test
icebp
inc
cmp
and
aas
andb
testl
enter
lea
cmp
into
sbb
and
inc
lcall
das
in
mov
cmp
jne
jmp
pusha
cmp
xchg
xor
aas
rorl
cmp
adc
inc
icebp
and
jno
loope
shlb
mov
inc
data16
out
xor
fstpt
call
push
cmp
push
add
jmp
or
test
and
and
int
dec
popa
mov
push
mov
in
in
push
pop
inc
dec
mov
push
scas
jge
or
je
pop
pop
ror
pop
adc
mov
jno
popa
pop
daa
lret
lods
andb
lcall
leave
or
addb
cmc
jo
dec
add
jecxz
xchg
or
mov
sbb
fldcw
adc
data16
cmp
sbb
push
cmp
enter
ret
xchg
mov
mov
clc
imul
movsbl
add
inc
mov
pop
add
sbb
push
mov
test
jp
mov
cmp
pop
fld
aas
int3
or
data16
add
push
jp
iret
nop
add
push
icebp
cwtl
jp
sub
loope
mov
jmp
insb
and
or
cmpl
inc
push
test
pop
push
lcall
push
or
adc
ret
repz
jg
push
inc
in
jmp
dec
mov
insl
cmp
and
loopne
adc
pop
or
xor
sarb
lret
jp
jecxz
jbe
dec
fs
or
add
jno
and
mov
pop
push
movsl
js
push
mov
mov
xchg
adc
clc
cmpsl
test
mov
sti
mov
popa
push
sbb
add
cmpsb
lcall
je
and
jp
xlat
add
push
shrl
xor
and
add
enter
jne
fcoms
movsl
aas
inc
xchg
bound
sbb
fsubrl
push
jnp
pop
xor
add
cmp
lds
std
out
add
dec
and
pop
fsub
pop
fsubrp
pop
movsl
mov
jbe
inc
inc
inc
xor
mov
clc
or
insb
sub
push
ss
pop
add
xor
dec
add
push
mov
fs
pop
and
test
sbb
and
out
lcall
cmp
je
add
es
mov
push
out
mov
inc
fcoms
jmp
push
out
iret
out
ss
push
jns
push
mov
push
ret
mov
test
add
jnp
cmpsb
inc
fisubrl
mov
into
mov
fisubrs
out
push
sbbl
dec
enter
jne
lods
and
pushf
or
push
out
ss
push
sbb
repz
sbb
xchg
pop
and
push
into
push
cmp
dec
aaa
and
sbb
adc
leave
xchg
daa
lea
ja
clc
dec
cmpsb
loopne
mov
jbe
clc
gs
and
mull
scas
or
push
push
and
or
push
adc
push
scas
or
lret
push
push
enter
add
test
scas
or
jge
and
sbb
adc
sbb
sbb
sbb
and
loop
adc
daa
fldenv
lret
xor
and
jno
sub
orps
fwait
push
jecxz
xorb
and
ret
dec
and
js
add
inc
aad
pop
je
data16
enter
mov
mov
fstl
cld
mov
mov
push
jbe
jbe
and
lret
rolb
xchg
xchg
and
inc
sbb
jb
push
adc
cld
sub
fcoms
cwtl
cs
adc
push
push
jns
inc
adc
sbb
push
nop
or
cmpsb
and
sbb
push
or
add
and
in
pushf
punpckhbw
lods
cmpxchg
cmpl
pop
inc
mov
lret
push
xor
and
lret
clc
in
sub
and
dec
and
loop
xchg
cmp
out
push
inc
mov
cltd
cmp
pop
shl
jns
mov
mov
arpl
test
lahf
out
cld
or
iret
repz
addr16
lcall
int
out
add
adc
xor
sahf
out
data16
cltd
stos
out
sahf
out
int3
fucomp
decl
cmpsb
adc
adc
je
aaa
test
jno
ret
dec
dec
leave
jmp
mov
push
loopne
mov
test
mov
add
or
or
adc
cmp
or
pop
adc
pop
mov
push
cmp
push
lods
add
inc
sub
sub
push
push
subb
es
add
imul
jl
nop
gs
or
mov
mov
std
pop
cmp
repnz
mov
or
movsb
cmp
ret
je
adc
test
mov
ds
add
ret
inc
push
mov
enter
int
rcll
sub
adc
addl
js
into
sub
scas
inc
scas
sbb
stos
nop
sub
xchg
xor
roll
or
mov
inc
call
add
add
fsubs
dec
in
cmp
mov
mov
adc
inc
aam
fs
xchg
xor
or
adc
js
in
fwait
cld
imul
mov
add
dec
aas
mov
inc
fimull
mov
mov
pop
or
or
arpl
inc
dec
ret
add
jl
add
loop
pop
dec
in
mov
push
flds
adc
pop
cmpb
movsb
in
loopne
nop
sub
call
call
ja
add
cwtl
mov
push
mov
or
push
mov
push
in
call
cmpsb
test
mov
cmpb
push
in
stos
pcmpeqb
pop
leave
scas
inc
adc
shlb
and
xorb
stc
adc
scas
and
push
and
sbb
test
pusha
pop
sbb
add
pop
loop
or
jo
test
cmp
mov
hlt
ss
or
mov
inc
orl
imul
jno
xor
add
xor
sub
test
push
dec
xchg
cmpsb
push
ret
sarl
out
jo
pop
xor
push
stos
and
dec
push
push
mov
sub
sbb
cmp
es
sbb
aad
pop
sbb
cmpsl
push
sbb
cmp
pop
sub
sbb
pop
call
xchg
pop
mov
adc
push
push
shlb
or
ret
and
add
sbb
enter
mov
jbe
pop
dec
mov
orl
shll
stos
cmp
nop
vmread
mov
lock
push
sub
inc
and
sbb
shrl
cmpsb
mov
addl
dec
push
in
add
arpl
pop
mov
xor
adc
outsl
adc
dec
icebp
mov
push
stos
dec
add
stc
xor
roll
push
pusha
add
addb
xor
mov
add
inc
or
jb
into
jno
and
push
inc
pop
add
ret
sub
in
or
jbe
cmp
and
add
call
imul
inc
sub
xchg
bound
popa
popl
or
adc
cltd
jns
into
jno
cld
pop
leave
and
aad
add
and
add
add
nop
mov
or
dec
dec
add
adc
xchg
push
sbb
imul
jne
sbb
test
test
jo
inc
adc
jne
jge
or
sub
adc
push
aad
mov
push
push
lahf
rolb
mov
sub
push
js
in
xchg
movsl
dec
sbb
cmpsl
adc
imul
loopne
mov
add
mov
mov
mov
addr16
nop
xchg
or
push
pop
sub
dec
inc
or
mov
cmp
push
push
dec
fwait
adc
or
mov
sbb
pop
sub
mov
test
imul
pop
adc
add
es
mov
or
int
dec
mov
mov
add
nop
movsb
cmp
push
push
leave
adc
or
movsb
in
push
sbb
pop
cmp
stos
push
inc
cmp
aas
outsl
cwtl
xor
add
stos
add
sub
cmpsl
xchg
xchg
or
outsl
sub
add
add
xor
xchg
xchg
add
lahf
dec
dec
les
andb
out
adc
mov
xor
sbb
inc
pop
mov
and
sbb
or
push
sbb
cmp
pop
dec
cmp
mov
push
pop
push
inc
add
ret
xor
in
or
cmp
mov
xchg
or
lods
rcll
mov
dec
and
jmp
lea
test
addr16
dec
clc
dec
add
xchg
sbb
mov
and
add
movsb
sub
push
and
sub
push
or
push
push
jns
inc
mov
inc
pop
mov
pop
push
mov
cmp
dec
fisubs
xchg
xor
pop
adc
enter
add
fcoml
ret
shll
andl
mov
or
pop
pusha
popa
je
push
icebp
imul
movsb
orl
movsl
adc
bound
xchg
lea
jp
push
mov
aad
dec
add
nop
out
pop
or
xor
xor
sub
sub
fists
jne
fldl
stos
add
push
lock
ret
mov
cmpsl
adc
out
or
fildl
sbb
adc
sbb
push
cwtl
adc
add
add
push
push
test
push
test
stos
flds
push
or
mov
ljmp
aaa
icebp
ret
orl
dec
rcr
pop
sar
and
jp
rol
inc
popa
cmc
mov
mov
cmc
addl
jmp
pusha
loopne
iret
dec
sbb
addl
jne
and
adc
add
cltd
add
inc
sub
adc
es
add
in
push
lret
and
mov
jno
or
or
and
adc
pop
pmaxsw
cmp
call
pop
jo
and
dec
xchg
mov
out
dec
jo
aam
daa
push
sbb
hlt
lds
call
fsubrl
mov
adc
sbb
sub
add
jns
sbb
push
adc
xor
cmp
xchg
dec
jmp
dec
jnp
aas
lods
dec
pop
sbb
add
pop
sbb
xchg
adc
push
mov
fadd
mov
adc
add
adc
inc
stc
mov
call
aaa
test
aam
dec
popf
shll
imulb
ret
or
mov
or
shr
and
cli
inc
jl
or
sbb
popa
sub
add
cmp
je
mov
mov
pop
dec
clc
decl
add
inc
jmp
movb
mov
push
cltd
xor
stc
movsb
mov
push
fmul
cmc
lds
andb
push
pop
xchg
out
imul
lret
xlat
cmp
jecxz
or
inc
push
scas
ret
fbld
pop
pop
test
add
incb
test
xchg
fidivl
test
test
xor
decl
push
dec
add
dec
inc
push
in
mov
in
in
incb
push
call
in
add
iret
cmp
mov
xchg
xchg
fdivrs
dec
push
cmp
ret
arpl
mov
sub
push
inc
inc
imul
incb
ja
pop
mov
bound
test
dec
jp
rolb
and
sti
mulb
popf
les
int
and
mov
arpl
mov
mov
jns
push
fstpt
push
clc
les
mov
insb
mov
fidivrl
sbb
test
je
sbb
mov
sbb
xorb
xlat
mov
xor
call
xchg
test
sbb
sarb
lahf
outsl
sbb
xchg
mov
idivb
pushf
adc
push
in
imul
push
push
push
cmp
mov
cmp
hlt
lods
sbb
mov
jp
mov
push
out
push
iret
in
and
bound
push
push
mov
pop
jb
xor
mov
jbe
test
filds
dec
xor
jge
rcrb
dec
loopne
xchg
aas
lahf
sbb
loopne
fcoml
lods
pop
sbb
cmp
or
cwtl
or
sbb
les
ja
mull
sbb
nop
fnstenv
push
mov
enter
inc
sbb
inc
xchg
or
adc
jmp
in
push
icebp
fsubs
mov
xchg
pop
rcrb
lret
lret
mov
icebp
push
imul
loope
sbb
mov
leave
outsl
pusha
pop
into
jae
push
sbb
jg
test
lods
nop
imul
aad
daa
jns
pop
lret
jne
cmpsb
mov
xor
sub
and
enter
ror
or
mov
pop
and
mov
fs
pop
nop
inc
mov
cmp
cmp
es
in
js
jo
ss
xchg
xor
xchg
mov
lods
in
in
movsb
pushf
xchg
mov
in
test
jno
xchg
les
test
and
call
sahf
int3
sub
bound
shlb
add
push
xchg
testl
out
je
out
aaa
jecxz
mov
or
mov
and
lea
cs
adc
je
cmp
das
push
and
faddl
or
fs
adc
cmp
pushfw
sbb
dec
movsl
adc
inc
xor
xorb
mov
inc
mov
or
mov
dec
clc
adc
inc
loop
adc
pop
pushf
or
cmpsb
jle
faddl
add
movsb
daa
mov
adc
mov
es
mov
cmp
sub
jl
movsl
or
loopne
jecxz
iret
sub
rolb
sub
jl
aad
push
out
push
scas
in
rolb
jp
fsubrl
es
xchg
push
fsubrs
dec
imul
int
fmull
xor
adc
inc
mov
inc
sbb
nop
icebp
sbb
lahf
test
ret
or
nop
bound
mov
int3
orl
push
cmp
into
orl
sbb
mov
shr
or
shlb
shl
bound
pop
adc
mov
cmpsl
and
pushf
pop
cli
dec
cmp
mov
nop
ss
es
es
xor
movsb
xchg
jnp
xchg
hlt
bound
out
icebp
nop
ret
mov
nop
movsb
mov
cs
adc
sbb
andb
inc
or
jp
and
inc
outsl
daa
hlt
pop
aam
neg
sub
ds
xorb
in
pop
dec
repnz
or
mov
test
inc
mov
add
popa
ds
pop
shlb
cs
pop
sbb
sub
and
ljmp
and
jns
enter
add
outsb
shlb
and
push
jecxz
push
adc
es
pop
or
push
pop
daa
and
push
fwait
push
psraw
and
sub
add
sahf
mov
sbb
cmp
mov
sub
lret
inc
sub
mov
ror
in
inc
adc
sbb
cmpsb
cwtl
in
push
push
xchg
jbe
mov
push
adc
sub
aam
xor
popf
add
xor
pop
rorb
pusha
jmp
xchg
push
add
jns
add
pop
or
adc
xchg
fwait
mov
add
hlt
jge
mov
mov
and
ja
jge
lock
int3
sub
in
iret
lods
popf
add
mov
lds
insb
cmp
sahf
or
pop
rorb
clc
or
loope
xor
std
mov
push
pushf
fisttpl
cmpsl
adc
stos
cmp
sub
aas
ss
xchg
and
pop
adc
loopne,pn
fiaddl
xchg
xchg
add
or
popa
jo
xchg
pop
mov
fildl
lock
or
insb
sub
dec
scas
inc
loop
inc
push
popf
sbbb
add
cmp
or
out
shlb
inc
popa
test
or
test
mov
scas
and
or
popa
loopne
mov
cmp
mov
ret
mov
xor
out
fcomps
pop
or
call
mov
lods
rorb
loopne
push
sbb
push
fwait
dec
repz
cli
or
adc
jge
call
or
mov
sti
inc
cmp
add
adc
outsl
add
xchg
orl
lods
mov
push
cmp
mov
pop
in
push
aam
or
inc
mov
fcoms
or
ss
seta
pop
mov
sub
adc
enter
inc
ret
dec
mov
test
push
cmpsb
fldl
ret
icebp
mov
lret
adc
adc
pop
movsl
arpl
inc
jmp
adc
cmp
shlb
and
inc
dec
enter
push
fcoms
xchg
xchg
adc
dec
inc
loopne
pushl
push
push
cmp
inc
fistl
xorb
sub
shrb
xor
enter
jge
add
add
xor
and
mov
add
jne
mov
sti
vphaddbq
pop
mov
xorl
pop
aaa
inc
inc
sbb
rcr
mov
in
and
mov
or
and
rcl
cmp
fwait
or
dec
and
inc
cmp
mov
es
add
jmp
shrl
push
sbb
repnz
es
pop
push
lock
ljmp
popf
lcall
and
fld
xor
popf
xor
mov
lods
mov
mov
jge
mov
or
jl
js
fistps
sub
pop
mov
dec
in
add
iret
in
push
xchg
adc
or
pop
mov
gs
push
cmp
push
push
cmp
inc
cmp
in
cmp
sub
cmc
iret
sub
pop
cmp
adc
jp
lret
mov
mov
cli
cld
push
xor
add
pop
int3
mov
in
pusha
xor
leave
cltd
lret
sbbw
jp
or
out
clc
popf
sbb
and
repnz
imul
rclb
inc
mov
dec
aam
xor
lods
xchg
leave
mov
xchg
into
xor
jle
cmp
outsb
mov
sub
inc
shr
hlt
jl
cmp
jne
inc
jne
push
or
rorl
and
push
inc
movsl
adc
add
mov
adc
or
movb
or
repnz
and
xor
add
push
adc
ljmp
pop
xor
sbb
adc
adcb
pusha
loop
add
adc
mov
jo
mov
add
or
popf
xor
push
xchg
out
or
or
add
mov
or
adcb
xchg
popa
lret
or
add
or
mov
or
adc
lock
lret
pop
pusha
jmp
jmp
mov
and
sbb
xchg
add
jl
sub
scas
loop
adc
fdivrl
outsb
pushf
popa
inc
xchg
cmp
pop
js
lock
ja
add
in
push
pop
in
stc
in
fisubrs
push
jo
das
mov
pop
mov
or
jns
je
adc
sbb
or
stc
jb
push
or
jo
pop
inc
hlt
cmp
movsb
inc
push
aam
je
rolb
add
test
dec
xchg
iret
adc
sub
or
mov
outsl
mov
sbb
outsl
fisttpll
pop
sti
jp
sbb
mov
lock
fistpl
movsb
jne
inc
add
stos
jnp
push
pushf
addb
fdivs
adc
cmpsl
adc
fcom
push
scas
adc
add
test
xchg
or
push
push
add
outsl
dec
popf
mov
adc
cmp
jo
adc
and
adc
ret
lret
mov
repnz
xchg
mov
das
add
sbb
cli
add
insl
mov
js
test
pop
push
dec
ds
movsl
lods
pop
fldt
xor
gs
mov
xorl
add
jmp
or
repz
adc
adc
addl
test
mov
xchg
mov
inc
pusha
bound
test
mov
adc
inc
mov
test
inc
sti
sub
sub
xor
mov
fs
iret
xchg
and
xchg
sbb
xchg
stc
jmp
jo
mov
and
sub
daa
inc
xor
daa
push
add
or
or
pop
cld
mov
in
clc
adc
sbb
rclb
ljmp
jp
dec
xchg
mov
and
jbe
push
sbb
lods
mov
arpl
cmp
into
fcompl
shll
mov
sahf
sub
push
addl
mov
jg
dec
lea
test
andb
pop
sbb
enter
add
in
mov
xor
cmp
and
addl
or
jb
dec
call
dec
jb
xchg
roll
adc
or
nop
xor
sub
adc
jl
sub
je
adc
pop
fcmovnb
fbld
mov
jmp
or
pop
and
mov
lahf
incb
hlt
mov
jne
inc
fdivrs
in
outsl
cli
push
fcoml
nop
roll
out
pop
sbb
jg
mov
cli
pop
push
pop
pop
pop
mov
sbb
movsl
xor
xchg
pop
into
mov
je
xchg
outsb
pop
enter
add
and
leave
lea
xchg
sub
out
jg
cmc
mov
cmpsl
jne
mov
nop
stos
mov
in
cmp
pop
cmp
clc
pusha
dec
push
fisubl
push
mov
xchg
mov
js
and
xlat
mov
push
inc
and
xchg
iret
ja
aaa
add
ds
push
dec
add
sbb
push
add
imul
push
or
xchg
ljmp
jg
das
jge
movsb
or
addb
aam
add
fiaddl
mov
mov
sahf
or
int
or
add
mov
and
sbb
mov
test
jge
int3
loopne
pop
pop
pop
pop
mov
add
xor
or
je
adc
pop
pop
lds
ja
test
and
subb
loopne
outsb
test
les
ds
addl
jle
jne
add
and
add
mov
xchg
adc
add
out
std
pop
cmp
fnstsw
pusha
or
add
inc
popa
out
mov
addl
les
ficomps
mov
enter
aad
xchg
sbbl
fldcw
sbb
nop
mov
addr16
xor
scas
daa
sahf
add
stc
hlt
and
pop
fs
sub
fs
sub
pop
inc
pop
add
inc
pop
ret
push
mov
xor
and
jne
das
push
add
sbb
and
dec
mov
scas
push
dec
adc
xchg
lea
negl
inc
pop
and
lods
mov
ds
xor
sbb
mov
and
inc
add
pop
add
xor
es
xor
loop
aaa
sbb
xchg
adc
or
cmc
movl
xor
jae
jmp
mov
int
adc
popa
jne
cmpsl
es
and
push
add
push
lahf
and
sbb
pop
adc
sub
mov
push
mov
dec
into
lahf
mov
stos
pop
lods
push
mov
pop
mov
mov
rcrb
test
mov
aam
imul
jecxz
lock
sbb
add
adc
xor
dec
push
sub
sbb
movl
pop
loop
mov
rcl
aad
cmp
jmp
aaa
jae
in
into
or
or
ja
js
sbb
and
inc
or
and
pop
or
push
pop
shlb
push
in
decb
mov
sub
rclb
or
loope
orl
adc
std
xchg
mov
cmp
int3
sti
add
lock
or
lock
push
incl
and
inc
inc
rolb
shll
pop
mov
xchg
rorl
data16
xchg
dec
inc
mov
jno
adc
xor
les
pop
push
cmpl
cmp
sub
sub
es
pop
js
je
adc
and
fisubs
stc
mov
push
xchg
adc
mov
mov
dec
in
cmp
or
jno
add
mov
pop
jg
shr
mov
adc
daa
popa
push
cmp
add
add
scas
adc
leave
inc
pop
punpckhbw
add
sbbb
test
jmp
ja
and
mov
call
sbb
js
inc
movsl
dec
push
sub
or
dec
roll
inc
inc
xor
mov
or
fiadds
xchg
add
inc
scas
or
add
pop
pop
loop
mov
jns
jo
add
inc
jp
and
sub
lock
sub
js
stos
cmp
or
jg
xchg
mov
bound
and
dec
sub
adc
push
jmp
or
push
lds
jecxz
add
or
out
push
mov
sbb
mov
jecxz
stos
sbb
mov
mov
or
dec
push
sub
js
xor
jl
dec
into
mov
dec
cmpsb
xor
dec
xorl
je
outsb
loope
ret
push
hlt
nop
xor
mov
or
jmp
adc
push
jmp
loope
inc
and
testl
sub
in
jne
sbb
orl
loop
and
mov
mov
push
mov
daa
stos
push
mov
rcll
sti
pop
dec
jmp
sbb
sbb
xor
and
adc
push
sbb
outsb
frstor
xor
xlat
dec
xor
lods
lds
mov
imul
xchg
inc
pop
mov
fwait
xor
cmp
data16
and
sub
and
cmp
and
pop
int3
dec
je
ret
rclb
je
push
xchg
mov
jmp
mov
mov
and
sti
sub
jo
add
pop
and
adc
mov
ljmp
insb
sbb
cs
add
push
dec
pop
into
xor
jo
lret
xchg
and
cmp
xchg
cmpsb
mov
sbb
les
add
xor
jmp
lea
and
dec
fsubr
xor
lds
into
dec
add
and
test
add
jne
in
mov
cmp
add
aam
inc
ss
and
movsl
in
in
pop
inc
stos
mov
cmpsl
sub
adc
push
cli
xchg
gs
or
or
pop
cmpl
in
lcall
or
push
adc
add
adcl
int
and
inc
xor
cmpsl
sbb
js
pop
add
xor
jo
in
sub
addl
xor
push
std
shlb
popa
cmp
sbb
movsl
in
es
test
hlt
add
pop
cwtl
pushf
add
jmp
cmp
dec
add
sbb
adc
mov
icebp
jbe
stos
sub
int
movsb
sti
lods
cld
fwait
push
add
push
inc
sbb
das
inc
shlb
sbb
mov
add
add
add
shrl
add
pop
mov
mov
xchg
dec
js
testb
or
pop
incl
xor
jbe
add
sbb
xor
mov
adc
jbe
lock
outsl
jnp
sbb
gs
cmp
pop
pop
ucomiss
sbb
fcmovnu
dec
andb
xor
add
or
sub
sub
mov
lock
setl
push
add
or
ds
insl
jmp
cmp
push
push
call
pop
sbbl
xor
pmaxub
data16
ja
or
sbb
dec
loope
push
repnz
mov
add
inc
cwtl
adc
jne
mov
cmpsb
popa
lds
mov
add
or
mov
adc
add
xchg
sbb
and
cmp
mov
sub
adc
sub
cmpb
push
add
sar
sti
add
out
mov
pop
std
mov
mov
test
inc
or
push
inc
push
xchg
cs
pop
fwait
in
cmp
jb
jmp
xchg
cmp
sub
and
add
cli
cmp
xor
xchg
loopne
jne
lods
or
pop
ret
dec
pop
push
jne
mov
mov
push
or
pop
push
sub
push
scas
or
mov
insb
adcb
loopne
dec
jns
xor
pop
pop
pop
and
inc
dec
sarb
lods
test
or
or
inc
rorb
cmp
mov
or
cmp
popf
adcb
cld
test
add
push
xor
das
dec
in
std
and
jae
jp
add
xor
in
mov
addl
or
push
push
cs
outsb
mov
daa
push
xchg
jo
inc
fmuls
jge
sbb
inc
and
push
mov
nop
xor
mov
and
push
adc
dec
adc
in
push
pop
repz
inc
xlat
and
adc
cmp
clc
xchg
jbe
je
mov
add
imul
inc
dec
hlt
adc
sbb
call
mov
jne
stos
pop
add
xchg
idivb
pop
xor
mov
out
pop
repz
addr16
mov
pop
scas
add
push
dec
mov
mov
ret
xchg
movsl
push
add
les
xchg
ss
adc
dec
ljmp
dec
dec
cmpsl
ds
push
pop
ret
mov
lock
and
pop
in
lock
xchg
popa
or
fmull
xor
and
loopne
call
jp
ret
packssdw
adc
ss
call
or
xor
arpl
mov
or
rcl
cmp
mov
jmp
xor
add
loope
pop
push
push
pop
add
incl
fneni(8087
pop
jbe
xlat
mov
sarb
adc
cmpl
popf
cmp
adc
add
dec
pushf
cmp
popf
jmp
bound
lock
outsb
clc
or
fsub
fdivrs
mov
incl
dec
shlb
gs
scas
or
jb
jo
mov
mov
pushl
sbb
inc
jmp
lea
or
cltd
roll
arpl
test
shrb
pop
mov
lret
add
in
ss
loopne
lret
pop
push
inc
mov
in
testb
addb
inc
add
imul
lret
inc
and
cmc
repnz
nop
in
push
adc
and
or
rolb
xchg
jg
jae
inc
jmp
ljmp
ljmp
mov
fsts
lcall
inc
mov
add
rorl
inc
mov
sbb
and
add
sub
jo
movsb
push
out
add
rcrb
dec
shr
or
inc
inc
sti
adc
add
call
pop
or
mov
fcompl
cmpsl
xor
xchg
mov
lods
mov
pop
dec
in
or
adc
pop
loop
cli
stos
push
mov
xor
xlat
sub
jb
add
cmp
je
mov
loopne
pop
add
mov
push
stos
jmp
iret
addr16
loope
add
add
aam
fsts
nop
mov
cmp
xchg
movsl
loopne
or
adcl
data16
adc
loopne
in
loop
call
xchg
call
pop
sub
call
or
dec
adc
dec
inc
dec
inc
lock
loope
divl
inc
xlat
cmpb
cwtl
data16
mov
inc
push
push
and
mov
rcll
popa
and
inc
loopne
clc
call
sarl
jle
xor
incb
add
sub
add
sahf
in
or
out
mov
gs
fadd
mov
push
jbe
pusha
adc
cmp
jl
mov
shlb
jae
adc
pushf
out
sub
xchg
das
hlt
or
xchg
daa
xor
push
enter
ror
add
push
icebp
push
mov
pushf
in
insb
and
rcll
push
outsl
mov
or
and
arpl
mov
pop
setge
sti
sarb
sub
xor
aam
xor
rcll
xchg
sbb
icebp
xchg
push
leave
test
add
push
sub
xlat
daa
dec
or
pop
je
sub
lock
and
or
repnz
ss
cwtl
out
or
pop
dec
mov
lock
adc
mov
jmp
fiaddl
outsb
mov
lods
xchg
or
flds
inc
movsl
push
jns
inc
mov
out
push
or
in
in
outsb
sub
call
pop
or
loopne
fmull
in
cmpl
shll
or
add
and
daa
push
fprem1
daa
roll
mov
aas
sbbl
mov
push
adc
push
sub
ljmp
lock
rolb
aad
test
stos
out
lahf
adc
imul
push
mov
add
movl
rolb
xchg
and
push
push
lea
insl
mov
dec
mov
imul
mov
sbb
or
mov
test
add
pop
or
int3
sti
cmpl
mov
addr16
or
fldl
cmp
jbe
cmp
jbe
mov
jg
lret
lea
mov
add
into
fimuls
sarb
mov
cmp
rclb
mov
leave
add
and
mov
push
mov
out
inc
or
cmp
push
pop
fistps
cpuid
sti
jne
push
aad
movsb
mov
cmovp
in
jl
xor
pop
jmp
push
sub
mov
sub
scas
jmp
call
sbb
inc
push
mov
insl
lds
or
push
fisttpl
sub
mov
addl
jbe
xchg
dec
and
dec
pop
xor
out
dec
push
push
sbb
cmp
jmp
mov
jbe
xchg
or
jg
xchg
out
roll
ss
push
leave
cmpb
cltd
adc
and
push
imul
or
sahf
xor
add
add
movl
jp
and
adc
and
mov
loop
cmpb
mov
push
jmp
xchg
dec
divl
subl
shll
or
movsb
add
mov
add
rol
pop
and
and
add
mov
xchg
andl
loopne
sub
mov
shlb
adc
sub
and
adc
ret
mov
add
pusha
add
sbb
sbb
and
inc
mov
loopne
push
adc
mov
and
aad
aas
or
adc
mov
xchg
in
sbb
cld
dec
clc
xor
adc
aam
loopne
jo
ja
into
lock
cwtl
mov
add
lcall
and
and
cmp
insb
repnz
insb
and
jle
sarb
push
mov
cs
jl
sbb
jno
fmull
push
hlt
jne
sub
mov
sub
aas
jbe
test
xchg
loope
aaa
pop
in
setp
xor
ret
pop
adc
sub
pop
cmp
aad
xchg
xor
sbb
adc
fsubr
xchg
gs
mov
loop
in
pop
pop
add
loopne
or
rolb
xchg
push
adc
cmp
jae
popf
lods
inc
leave
pop
mov
out
mov
lret
pop
xor
arpl
inc
inc
mov
push
nop
sahf
fldenv
rep
pusha
xor
xor
pop
mov
mov
rcrb
sub
in
lahf
enter
push
rcl
enter
int3
int3
int3
sbb
or
andl
adc
icebp
pop
pop
fs
add
out
add
and
popl
rorl
ret
sub
repz
mov
cmp
adc
mov
rol
imul
in
cmp
adc
movsb
jmp
lahf
stos
sbb
andl
loop
pop
mov
add
push
inc
mov
in
xchg
or
aaa
test
sub
ret
add
lahf
dec
pop
xchg
arpl
inc
sbb
push
jge
xchg
add
popf
or
add
das
test
mov
inc
shll
je
push
or
adc
inc
sbbl
dec
ret
fcom
out
mov
lock
adc
or
loopne
pop
lock
jmp
mov
push
sbb
xchg
xor
movsb
fwait
pushf
push
mov
and
add
nop
je
cmc
jbe
mov
inc
enter
dec
imul
push
mov
dec
test
mov
jmp
and
cmp
sbbb
inc
dec
subl
mov
jmp
lcall
lods
les
add
les
sbb
test
imul
push
aaa
rorb
xor
sub
xchg
adc
adc
gs
cli
shlb
and
jae
aam
add
mov
dec
mov
fcomps
dec
imul
rcrb
inc
aam
mov
xor
inc
dec
cld
mov
inc
in
push
loop
or
cmp
cmp
pop
pushl
dec
mov
mov
mov
sbb
xchg
push
fidivrl
in
daa
dec
insb
shr
shll
mov
inc
xlat
test
mov
clc
fildl
movsb
push
mov
adc
push
push
push
push
push
mov
inc
add
decl
pop
xor
adc
xor
les
sub
mov
loopne
roll
test
xor
adc
movsb
js
sbb
add
mov
fwait
inc
clc
jl
cmpl
sub
mov
sub
hlt
xor
jmp
test
shrb
sbb
mov
testb
hlt
sub
rol
cmc
es
sbb
mov
pop
clc
jne
loopne
in
push
icebp
loope
cmpl
mov
adc
xor
push
loopne
and
mov
xor
clc
push
out
inc
sub
push
or
and
push
pop
gs
and
and
mov
sub
push
out
inc
sbb
adc
fwait
jbe
sbb
adc
jle
jns
out
and
push
inc
enter
fistpll
rorb
fistl
push
in
mov
scas
sarb
or
jns
fsubl
push
pop
dec
das
adcb
push
jbe
or
jecxz
ret
push
call
paddq
les
cwtl
ror
or
sub
xchg
enter
or
hlt
mov
pusha
xor
push
jp
cmpsb
add
push
xor
or
shl
rol
push
ds
lock
push
pop
push
and
or
test
popf
mov
or
xchg
mov
push
add
mov
add
subb
dec
out
xchg
xor
jae
xor
cmp
mov
pusha
or
inc
mov
ror
mov
lock
push
fidivrl
mov
mov
mov
in
ret
scas
shlb
add
mov
nop
sti
xchg
gs
loope
inc
mov
dec
mov
addb
movsl
rorl
jge
aam
fwait
push
cmp
jbe
mov
call
adc
mov
mov
mov
into
sahf
loop
sub
js
xchg
aad
fimull
jl
mov
and
loope
push
lock
mov
pop
lret
xchg
sub
cld
pop
fwait
xorl
mov
adc
adc
fistpl
push
cmp
out
cmp
push
cmpsl
fstp
xorps
mov
or
cmp
testl
add
xor
movsl
movsl
scas
cmp
out
dec
push
or
pushf
push
ja
lret
sub
or
sub
adc
push
fidivrl
jl
jge
sbb
adc
in
hlt
cmpsl
repnz
loopne
add
jns
sbb
je
push
scas
inc
loope
shrb
call
loope
or
loop
hlt
or
cmp
adc
imul
outsl
dec
fistpl
mov
jl
mov
or
cmp
repnz
xchg
push
jb
push
mov
add
sbb
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
xchg
jecxz
mov
cmpsl
dec
out
mov
adc
ljmp
or
mov
jg
out
mov
adc
movb
cmpb
mov
es
pushf
add
xchg
mov
and
roll
mov
cmpb
mov
hlt
test
xchg
ss
push
sbb
adc
and
push
cld
xchg
mul
je
push
push
inc
xchg
xchg
pop
mov
add
pop
add
clc
jp
xor
xchg
or
sbb
rcl
out
test
xor
push
insl
xchg
sub
add
pusha
lock
cmpb
sti
mov
pop
pop
subl
push
push
sbb
cmp
cmp
jl
add
sbb
xlat
arpl
mov
mov
mov
add
sbb
popf
xor
and
xchg
xchg
aad
cmc
ss
push
pop
mov
in
xchg
push
cmp
pop
adc
mov
sahf
loope
inc
sub
or
rorb
adc
or
mov
and
add
or
out
fwait
mov
adc
cmp
imul
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
push
and
add
adc
out
sahf
mov
add
add
test
leave
xorl
std
iret
sarl
in
fs
jb
cmpsl
and
scas
mov
cmp
repz
iret
xlat
stc
cmp
repz
hlt
stc
incb
and
jns
cmpsl
or
out
sahf
and
sub
xor
jns
inc
dec
dec
push
out
sahf
out
pop
bound
lahf
std
ja
jb
add
add
push
pop
or
and
or
or
push
decl
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
popa
adc
leave
push
leave
mov
rolb
cltd
jno
push
cmp
mov
orb
shlb
jecxz
xchg
pop
dec
rol
pop
ret
mov
xchg
shr
aam
xchg
mov
mov
inc
sbb
push
or
cmp
out
cmp
xchg
adc
pushf
cmpsb
jo
sub
push
and
add
lods
mov
ss
aad
jge
in
les
pop
or
push
insl
cmpsl
jb
loopne
ret
adc
inc
in
call
push
mov
lret
mov
dec
fildl
mov
jl
cs
push
add
enter
sbb
cltd
xchg
xchg
nop
push
sub
or
xor
in
push
mull
cmp
mov
push
fdivl
push
std
mov
mov
add
scas
or
add
and
mov
jmp
roll
les
or
mov
mov
mov
cmpl
dec
popa
pop
stos
inc
pop
lods
fmulp
inc
inc
clc
loopne
test
dec
fidivs
rcrl
js
lock
mov
nop
mov
xchg
repz
sbb
lcall
js
add
imul
pop
enter
mov
gs
pop
mov
pop
sub
pushf
hlt
pop
test
repnz
andl
imul
fidivrl
pop
test
inc
mov
or
push
push
push
imul
jmp
js
adc
cwtl
xchg
icebp
xchg
mov
fnstcw
mov
daa
lock
sbb
sub
push
cmp
fcom
scas
sub
or
mov
sbb
data16
add
mov
test
jnp
out
push
jecxz
inc
jno
leave
clc
push
test
adc
jne
das
and
add
test
aaa
pop
rcll
scas
jno
or
inc
pop
adc
mov
cld
push
paddb
push
pop
inc
xchg
cs
aaa
js
push
lock
pop
or
adc
into
xor
cmp
cmp
fimull
arpl
mov
and
or
sbb
push
add
dec
xor
dec
ficomps
jge
jmp
pusha
xor
cmp
sbb
scas
inc
push
mov
add
sub
inc
cs
pusha
cmp
pusha
arpl
dec
push
push
sub
aaa
lea
pop
push
xchg
xor
mov
push
add
mov
test
inc
xchg
popf
sub
inc
push
add
push
add
sarb
popa
nop
loop
mov
cmp
enter
mov
adc
dec
xchg
sub
in
in
decb
aad
dec
ja
stos
mov
sbb
aad
sbb
xchg
xchg
or
jmp
sti
les
es
test
inc
scas
sahf
out
flds
mov
jns
rorb
je
fmul
stc
faddl
xor
loopne
int3
enter
movsb
xchg
xor
dec
adc
pop
or
sbb
sub
inc
icebp
dec
js
mov
cmpsb
add
popa
xchg
push
jne
pop
lock
jbe
cmpb
jo
and
pop
inc
aas
sbb
cmp
jne
jp
cmp
or
xor
sbb
clc
xor
push
fisttpll
sbb
jp
aam
ss
repnz
inc
sub
lods
mov
mov
xchg
xchg
mov
call
bnd
and
jmp
mov
inc
cmp
add
es
or
mov
jae
sbb
cmp
dec
push
cltd
nop
loopne
loopne
sub
xor
sahf
enter
push
sbb
dec
jae
int3
or
inc
sbb
idiv
add
enter
das
sti
std
sbb
cmpsb
xchg
dec
shl
sbb
cmp
ret
adc
rolb
push
sbb
cmp
pop
push
test
adc
push
mov
inc
push
xor
pop
mov
mov
popf
pusha
rcrb
mov
int3
out
mov
pushl
lock
shlb
gs
cltd
addb
popa
cmp
add
lahf
dec
arpl
or
sub
mov
out
push
cltd
push
lret
dec
or
call
push
xchg
add
gs
loop
mov
shll
int
mov
punpckhwd
push
and
xchg
test
call
and
stc
jno
mov
and
sbb
fmuls
divb
mov
pop
pop
repnz
inc
push
pop
dec
mov
xchg
fdivl
push
pop
int3
js
es
shlb
jmp
in
roll
sarl
jne
rorb
adc
sbb
xchg
inc
pop
fsubl
popa
faddl
push
aaa
lret
mov
push
test
pop
orb
aas
pop
ds
add
dec
pop
dec
mov
add
loopne
popf
sub
enter
ja
sub
sub
cvtps2pi
and
mov
mov
dec
push
add
ret
and
repnz
dec
out
push
adc
mov
push
cmp
std
mov
out
dec
adc
call
loop
adc
je
test
test
xor
adcb
rcll
push
daa
and
lock
jbe
jge
in
mov
call
jg
lea
and
xchg
adc
scas
add
call
add
adc
jno
jle
mov
push
ja
sbb
pop
jne
shlb
std
jmp
cmp
je
push
inc
cmp
xchg
pop
mov
paddsw
scas
cld
ljmp
xchg
test
shl
into
adc
push
pop
cmp
sbb
and
pop
jns
aas
scas
lock
jge
in
or
push
nop
jecxz
adc
sbb
subl
xlat
hlt
rcrl
aas
push
dec
add
mov
xchg
cltd
jbe
sub
xor
pop
and
xchg
cmpsb
hlt
lahf
ljmp
sub
add
push
sbb
and
aad
movsl
div
push
rorl
aas
cmp
xchg
cmp
sahf
adc
jns
add
push
and
xor
add
dec
pop
inc
sub
and
rcr
ret
adc
out
xor
cli
cmpsb
or
dec
data16
push
inc
rcrl
lds
xchg
pop
rorb
adc
test
push
or
pop
mov
inc
sbb
add
cmp
mov
push
int3
pusha
add
loop
in
cltd
xlat
roll
leave
jecxz
pop
pusha
or
jns
enter
add
cmp
and
or
xchg
xchg
lret
or
sbb
push
jns
or
cmp
add
xchg
dec
and
xor
xchg
adc
push
adc
and
cmp
add
fwait
cli
out
jmp
jecxz
pop
or
xor
rcrb
mov
or
test
adc
movzbl
or
adc
sub
lods
xchg
ljmp
ds
dec
out
shl
inc
add
cld
pusha
cs
subl
fs
cmp
cs
ja
outsb
js
xor
jl
subb
mov
xchg
and
xorl
aaa
dec
pushf
mov
sbb
lcall
dec
mov
mov
mov
rol
decl
aas
dec
call
movb
cmp
mov
add
pop
xor
es
incl
sbbl
sbb
add
movsl
dec
iretw
in
out
je
sub
or
jg
or
sar
or
incl
cmp
jl
sub
dec
sahf
flds
jl
hlt
jbe
cmp
jne
inc
cmp
xor
cld
xor
inc
sti
je
out
xor
xor
inc
mov
cmp
sbb
add
clc
clc
jl
jmp
imul
xchg
outsb
shl
enter
add
xchg
jo
sub
aad
or
pslld
in
push
iret
or
mov
mov
fldenv
testb
add
je
repnz
fmuls
mov
jmp
mov
mov
inc
sbb
hlt
push
jl
in
sti
and
shll
jmp
xchg
pusha
inc
fsubrs
clc
addl
xchg
mov
fadds
adc
popf
clc
cmp
mov
xor
sbb
iret
bound
jge
mov
in
sub
je
into
enter
or
inc
sbb
xchg
cmpsb
cmpsl
ffreep
ret
add
out
push
pop
cmp
pop
or
mov
push
lret
addl
jl
jle
adc
cmp
mov
lret
mov
xchg
js
negl
sbb
xor
scas
pop
add
push
mov
sbb
pop
addb
sub
sub
hlt
push
push
pop
lock
fists
adc
mov
js
add
pop
jne
push
inc
pop
inc
orb
sbb
push
movsl
xchg
pusha
mov
sti
mov
push
cld
mov
mov
loop
jge
mov
push
lret
push
mov
adc
sbbb
mov
outsb
xor
xor
shlb
dec
bound
jns
push
mov
xor
int3
xchg
push
sub
aad
imul
rcrb
xor
jne,pn
or
adc
insb
mov
dec
out
cmp
add
mov
pop
xor
enter
cmp
inc
fsubs
and
call
xchg
inc
ja
shlb
push
aaa
jecxz
pop
nop
sub
cmp
std
push
gs
stc
xorb
cmp
pop
jecxz
pop
lret
and
mov
es
in
cmp
clc
or
je
stos
inc
in
add
mov
ljmp
test
mov
loope
inc
mov
repnz
xor
in
or
sub
xchg
and
sbb
bound
leave
in
popf
pop
neg
call
cmp
cmp
jne
data16
mov
fisubs
lock
jb
or
mov
jb
or
jmp
adc
cmp
xchg
dec
shll
and
jmp
inc
add
aaa
cmp
mov
add
xor
inc
mov
ret
cmp
cs
xchg
or
test
es
ficoml
out
pop
push
or
imul
or
imul
fs
mov
lcall
or
and
mov
add
dec
shrb
xor
sbb
lret
imull
jno
sbb
push
dec
sub
rcll
pop
ds
gs
mov
add
ret
and
inc
ja
stos
mov
jle
add
outsl
or
push
and
mov
adc
mov
or
adc
ret
push
push
add
dec
pusha
jmp
mov
add
mov
jmp
mov
jo
test
and
adc
in
add
loopne
cmp
pop
mov
mov
or
add
cmp
or
sub
data16
cmp
fisttps
mov
cmpsl
das
imul
loopne
rcrl
ss
cmp
clc
rclb
stos
inc
cmp
adcb
fcoms
push
insl
add
jne
or
lret
mov
inc
shr
adc
test
lea
cltd
cmp
jp
mov
jle
rorb
test
test
iret
inc
pop
adc
push
dec
add
sub
adc
mov
int3
fisubl
orl
daa
xlat
and
jmp
insl
or
add
mov
jg
orl
push
sti
addb
lea
push
adc
inc
mov
xor
or
movsb
cltd
pop
lock
sub
jg
shrb
add
add
ret
cmpl
dec
or
movsl
scas
add
jmp
lcall
push
push
push
cmp
push
rclb
cmp
sub
out
jnp
mov
sbb
sub
add
adc
rolb
or
movsb
push
sub
dec
jp
cmp
xchg
xchg
cld
cld
adc
mov
daa
loope
lret
sub
cmp
mov
movb
mov
cmovle
jl
out
jo
cmp
dec
fwait
add
add
inc
mov
xchg
and
dec
test
mov
lods
fdivrs
rorb
cmp
jae
sub
sbb
sbb
push
sub
mov
xor
add
inc
pop
and
adc
fildll
push
mov
push
adc
pop
cmp
xor
push
inc
cmp
jbe
push
and
in
sbb
sar
cmp
or
xor
mov
and
ljmp
or
adc
cmp
sbb
in
sub
xchg
out
mov
mov
xor
mov
repnz
jno
push
sub
push
sti
or
mov
cmpsl
xor
test
mov
push
repnz
push
pop
adc
xor
or
mov
imul
lds
push
test
jl
xorb
inc
push
or
cmp
clc
cmpsb
mov
cwtl
rcr
rcll
iret
lock
enter
dec
xor
or
push
mov
push
mov
cmp
cmp
inc
mov
repnz
push
movsl
arpl
push
adc
test
push
rorb
shrb
and
pop
sti
xor
cld
sub
pusha
pop
pusha
jecxz
mov
mov
sbb
jb
cmp
lea
cmc
pusha
sub
mov
pop
add
sub
neg
pop
and
mov
adc
mov
pop
cwtl
xor
bound
jne
push
xchg
movsl
mov
pop
xor
xchg
or
ja
jne
inc
pop
and
or
outsl
cmp
mov
jo
pop
jnp
insl
pop
inc
add
add
mov
xor
or
mov
sbb
in
sbb
lds
jmp
and
jmp
mov
test
lret
nop
pop
iret
adc
lock
test
mov
rorb
pop
jns
adc
sbb
paddsw
inc
cmp
jl
gs
push
popa
push
pop
sbb
mov
into
adc
lods
adc
push
mov
pop
icebp
cmp
push
rcrl
cmp
daa
mov
bound
lods
lcall
ja
or
jle
add
mov
bound
pop
jmp
xor
idivl
and
dec
les
lea
push
add
faddl
bound
push
cmp
push
pop
push
push
cmc
dec
jmp
pop
mov
loope
sub
loopne
and
call
add
inc
sub
or
jl
loopne
mov
fsubrs
cs
cmp
sti
inc
cmp
mov
lods
push
ret
movsl
xor
and
loopne
push
jecxz
dec
and
jle
push
lcall
xor
mov
jl
inc
aam
push
notb
pop
inc
mull
and
adc
and
call
mov
mov
cmp
cmp
bound
cmp
pop
in
and
mov
cmp
mov
in
rclb
push
ss
mov
ljmp
push
subl
mov
dec
sub
shrb
and
xor
jmp
push
mov
aad
inc
push
inc
lea
daa
push
loopne
repnz
roll
fbstp
cmp
dec
div
ljmp
mov
roll
ljmp
jnp
and
repz
push
in
je
aam
or
sub
outsl
mov
jae
mov
inc
hlt
fsubrl
push
xchg
sbbb
lea
lcall
mov
or
inc
sub
inc
jmp
rcrb
push
jmp
add
add
stc
mov
mov
shr
shl
add
and
shl
xor
mov
mov
add
jge
jne
movsw
movsb
mov
das
adc
out
dec
sbb
js
jge
test
into
push
filds
cmp
cmp
inc
cmp
push
fs
lcall
push
sub
or
sub
fisubrs
dec
je
mov
push
in
add
loopne
jl
mov
es
or
pop
mov
jo
add
fwait
inc
push
or
and
or
mov
faddl
fstl
fldz
fcomp
fnstsw
or
lods
mov
mov
roll
pop
add
push
std
inc
add
pop
adc
int3
sub
shl
imul
add
inc
pop
inc
ljmp
outsb
scas
lock
lock
push
imul
cs
hlt
jbe
cmc
or
je
dec
adc
ljmp
rcl
nop
push
add
ret
sub
jge
cmp
enter
add
ja
mov
fistpl
and
in
add
and
lock
daa
sbb
adc
dec
cmpsl
inc
jb
mov
jne
cmp
cltd
test
adc
cmp
imul
test
pusha
sub
jnp
stos
and
movsl
aam
jmp
fldl
adc
sbb
and
lcall
stos
add
jmp
loop
xor
repz
in
loop
or
dec
sti
fimuls
enter
loopne
cmp
shll
loopne
in
aam
lock
and
xchg
jne
mov
mov
aad
cmp
stc
into
mov
sarb
inc
mov
hlt
jnp
pop
and
or
mov
adc
pop
sub
mov
cmp
dec
data16
cmp
cwtl
mov
bound
jne
and
sbb
mov
mov
dec
ljmp
push
sub
push
or
orb
pushf
mov
sbb
ret
in
adc
lds
xor
cwtl
add
xlat
inc
ret
test
and
or
je
push
or
cmpl
shlb
pusha
and
arpl
nop
pop
loope
mov
jecxz
loope
and
mov
inc
push
adc
dec
movsl
sarb
movl
sub
add
movsb
mov
adc
jae
jbe
add
pop
mov
ret
aad
dec
cmp
pop
mov
pop
fnstsw
movsl
and
add
mov
adc
outsl
adc
or
xor
dec
cmp
sti
sti
test
adc
add
mov
mov
test
add
or
pop
mov
dec
testl
call
push
mov
aam
test
pop
mov
jp
lods
and
call
add
call
mov
adc
adc
inc
dec
mov
enter
push
clc
or
adc
xlat
test
xor
sbb
fs
and
stc
push
lock
xchg
and
push
or
mov
sub
push
push
sbb
ja
mov
sub
rcrl
or
cmp
mov
inc
mov
push
sub
pop
inc
hlt
lahf
rorb
push
idivb
pop
adc
adc
mov
adc
rcrl
push
insl
sbbl
ret
sub
add
or
movsl
fiadds
push
sub
mov
movsb
hlt
add
aaa
mov
add
pop
fimull
je
xor
xor
jmp
cmp
out
xor
cmp
push
push
inc
in
pop
adc
rcrb
xor
cmc
sbb
adc
je
push
dec
movsl
jne
adc
fsubrl
or
and
ss
lock
xor
add
cmp
pop
push
or
mov
test
loope
inc
push
fcomps
je
cmp
jb
cmp
xor
test
jnp
push
pop
push
jbe
loopne
or
push
dec
cmp
mov
inc
daa
add
aas
fs
dec
gs
push
and
ficoml
push
push
imul
rorl
mov
push
dec
jbe
inc
cmp
cs
outsb
fwait
and
movsl
arpl
push
and
mov
jmp
inc
or
cld
xor
jo
xor
mov
mov
cmpb
test
add
mov
push
rcrl
sbb
call
testl
jg
dec
ret
push
inc
mov
je
popf
sbb
pop
push
push
xor
aaa
leave
enter
sysexit
push
and
js
push
insb
pop
adc
insb
shlb
jl
xchg
mov
and
or
arpl
scas
mov
push
mov
shlb
mov
das
leave
jmp
loop
push
jbe
das
and
dec
in
jbe
fs
jo
mov
xchg
sub
pop
es
rorb
inc
xchg
lock
aad
ja
clc
cmp
jbe
rclb
ja
push
push
or
mov
mov
push
and
int
ss
pop
dec
js
pop
pop
ret
in
mov
fdivl
xchg
xor
sub
and
push
je
cmp
inc
clc
into
jo
adc
and
or
push
ficoml
in
add
dec
xor
les
test
add
sbb
dec
ss
pop
or
cmp
jmp
add
xchg
adc
insl
dec
addl
pop
sahf
or
jno
dec
fwait
adc
scas
movsb
push
stc
xor
test
xchg
dec
or
dec
imul
sbb
jecxz
pusha
stos
test
inc
add
sbb
test
xor
adc
jo
test
hlt
movsb
inc
sbb
stc
scas
shlb
push
dec
xchg
push
push
call
sbb
or
xor
add
int3
sbb
mov
adc
adcb
xlat
and
or
or
add
cltd
pushf
jge
test
dec
jp
leave
and
sbb
mov
push
cli
cmc
inc
popa
mov
insl
and
in
je
jmp
and
sahf
push
add
cmc
add
add
xor
daa
test
sarl
inc
je
push
cmp
mov
jecxz
adc
mov
cmpsl
lret
jl
push
push
sub
xchg
push
or
fcomip
rolb
cmp
lcall
ret
cmp
pop
jnp
or
arpl
pop
mov
cmp
sti
cld
movsb
rolb
into
adc
loop
mov
add
aam
inc
push
add
mov
into
lcall
ljmp
sub
mov
add
cwtl
insb
pop
out
push
push
xor
mov
mov
cmpsl
test
push
inc
sub
jl
cmp
adc
adc
push
or
inc
orb
xor
dec
bound
fcom
xor
sbbl
push
or
pop
pop
ret
rorl
add
add
push
xor
pop
jnp
dec
jb
rcrb
inc
jle
or
cld
push
push
loopne
mov
pop
mov
or
cmp
sbb
into
rcrb
into
xchg
xor
push
pop
pusha
push
addb
inc
loopne
adcb
add
fdivrp
mov
sub
pop
call
mov
xchg
in
cmp
push
repnz
fiaddl
pushl
jnp
sbbl
xor
push
dec
jmp
ljmp
push
push
add
inc
insl
add
gs
das
sub
sbb
or
imul
lds
ror
arpl
mov
jle
add
or
add
push
mov
les
in
inc
fisttpll
adc
clc
and
sti
add
jl
subl
dec
dec
leave
and
imul
shrl
fsubl
dec
mov
test
mov
sahf
push
aaa
call
xchg
dec
mov
ss
adc
add
test
mov
int3
in
fimuls
push
inc
add
pop
mov
pop
push
mov
lcall
enter
or
lahf
mov
mov
push
call
xchg
fsub
push
jle
pop
adc
or
es
enter
loopne
mulb
or
lret
negb
inc
ret
decl
push
out
leave
inc
imul
adc
and
xchg
xchg
xor
cmp
jne
cli
pop
mov
mov
adc
pop
adc
ljmp
test
sub
std
add
xor
push
sti
lea
or
xchg
xchg
test
fdivs
xor
or
adc
or
or
jnp
lea
insl
adc
adc
sub
mov
mov
push
dec
push
movsl
mov
jne
fcoms
cld
inc
mov
imul
mov
pushf
int3
inc
or
mov
ret
push
add
sub
test
xor
xchg
ja
and
add
negl
jg
pop
pop
mov
pusha
cmp
and
subb
add
shll
adc
fwait
and
pop
or
push
and
add
inc
rcr
shll
pop
push
inc
lret
xor
or
pop
sbb
pop
cmp
faddl
fdiv
movsb
or
and
push
adc
xor
sbb
adc
adc
sbb
outsb
mov
lock
sbb
cmpsl
jle
or
adc
add
pop
nop
add
add
adc
and
add
fwait
sub
test
push
out
sbb
je
in
test
sbb
jo
pmulhw
mov
dec
inc
and
pop
and
hlt
jge
push
daa
mov
shrb
cmp
add
and
jne
rol
sbb
pop
jns
bound
in
pushl
adc
lds
sub
jne
test
dec
push
sbb
addr16
lods
pop
cltd
mov
imul
mov
sbb
lds
ja
cmp
je
roll
jge
push
sahf
nop
jns
and
sbb
arpl
add
push
push
mov
push
rcll
xchg
mov
mov
je
sub
cs
push
mov
or
and
inc
leave
push
xlat
inc
cmp
dec
and
jmp
stos
ljmp
adc
jnp
je
fwait
les
sbb
movsl
add
bound
jns
aaa
icebp
xchg
xchg
mov
lea
insb
pop
stos
mov
leave
outsb
jo
arpl
loopne
insl
inc
jp
jo
jge
in
adc
add
mov
arpl
int3
cmpsl
or
jb
jne
dec
sarb
cmp
mov
xor
mov
data16
push
inc
adc
adc
sbb
add
jge
push
mov
lock
jl
mov
rorb
or
mov
aam
test
add
mov
test
dec
add
rcrb
idivl
loope
or
roll
pop
jo
jge
inc
push
mov
test
and
mov
or
and
inc
xchg
sbb
sbb
xchg
aas
test
stos
aam
sbb
push
mov
rcrb
or
arpl
int
or
push
inc
dec
lea
dec
std
loopne
pop
sti
or
push
lret
jmp
jecxz
or
xchg
cld
mov
pop
notl
mov
scas
adc
cmp
cmp
enter
push
je
clc
cwtl
add
je
dec
and
cwtl
xorl
popl
in
jbe
repnz
mov
decb
loopne
cmp
and
pop
test
adc
mov
push
and
ror
push
mov
and
dec
out
mov
xchg
pop
mov
sahf
push
jmp
sub
scas
xchg
mov
and
pop
out
xchg
pop
cmp
dec
aaa
and
test
mov
jb
mov
push
cmp
xorb
sbb
add
aas
pop
dec
movsb
mov
js
inc
sub
xor
ret
sbb
pusha
dec
sbb
cmp
sbb
popf
jl
jo
push
cld
movl
jge
inc
mov
lea
mov
jo
xchg
shlb
inc
lret
cmp
mov
mov
test
or
jo
cmp
fwait
lret
rol
adc
shl
pushf
popf
ja
int
and
decb
push
pushf
push
incl
push
js,pt
add
pop
cmpb
out
adc
arpl
pop
fistl
jge
add
mov
das
xchg
mov
xchg
rolb
jo
shlb
popf
mov
pusha
add
adcb
enter
pop
sbb
fisubl
aaa
iret
inc
xor
out
sub
jne
insl
mov
sbb
jne
js
movsb
jg
lahf
push
shrb
or
out
adc
inc
movsb
ljmp
mov
pop
mov
subl
popa
cld
cld
or
rep
jge
mov
inc
icebp
cmp
jne
push
add
movsb
adc
rolb
push
add
jg
add
or
lret
inc
mov
mov
push
jl
push
stos
xchg
ljmp
jge
jns
adc
xor
out
movb
lea
jns
jno
jle
out
or
mov
inc
and
mov
jae
lods
cmp
adc
jbe
lods
mov
pusha
push
and
ljmp
inc
add
pop
jb
mov
shll
cs
sub
mov
imul
loopne
sbb
das
pushf
pushf
jecxz
movsl
scas
jmp
push
mov
jge
dec
mov
mov
push
xchg
push
pop
pusha
lods
or
fildl
inc
sbb
adc
loopne
inc
dec
aam
jne
jne
movsl
int3
and
adc
mov
dec
popa
nop
mov
sbb
push
pop
push
addr16
mov
mov
or
jecxz
pushf
mov
cwtl
mov
test
std
inc
mov
imul
lret
es
push
inc
inc
inc
mov
add
fmull
cmpsl
xchg
dec
shr
sbb
call
or
cs
inc
xchg
lret
jb
sub
sub
and
and
jne
test
adc
call
out
call
sub
sti
add
dec
sbb
movb
sbb
dec
xchg
push
add
or
sub
aas
and
push
andb
aaa
stos
adc
inc
aas
push
and
and
repz
movsb
das
push
add
jge
adc
sub
add
cli
in
add
movsl
outsl
push
pusha
js
aam
mov
cmp
push
pusha
add
mov
and
push
loopne
call
aam
jne
xor
add
push
in
and
push
test
mov
ficomps
mov
mov
dec
or
pop
jne
cmp
enter
jmp
sub
sbb
push
adc
xchg
lret
stc
pop
sbb
ret
mov
jmp
add
notl
lock
xchg
xchg
push
and
cmp
jecxz
movsb
xchg
mov
bound
push
adc
push
imul
dec
pop
add
lea
jmp
lea
and
xorl
loope
cmp
in
addl
or
icebp
mov
sbb
pop
mov
sub
xchg
and
sub
sbb
aaa
jl
add
push
sbb
xor
pop
mov
pop
sbbb
or
push
imul
enter
pop
xor
xor
pop
test
pop
dec
jae
push
add
inc
xchg
test
in
mov
cmp
add
sub
hlt
mov
bound
lock
inc
arpl
aas
cs
jg
movsl
add
or
je
xor
pusha
inc
or
fwait
mov
lcall
fidivrs
fs
cmp
jg
mov
mov
cmp
or
pop
add
cmp
aaa
push
inc
adc
pop
mov
mov
inc
fcompl
xchg
test
pop
rcr
dec
hlt
cmp
jae
dec
fnstcw
jl
arpl
ja
imul
sbb
jle,pn
mov
push
lcall
fildll
std
fs
or
je
cmp
jne
inc
inc
jmp
inc
pop
in
repnz
and
movsb
sub
add
add
xor
and
test
mov
push
sbb
cmpb
and
movntps
iret
jo
push
sub
enter
das
xchg
sub
mov
js
jecxz
push
hlt
and
mov
shr
cmpsl
jl
sbb
sbb
outsb
lahf
mov
in
xchg
in
and
aam
mov
aam
adc
ret
in
mov
nop
cltd
and
in
or
test
imul
shll
xor
je
fcoms
shrl
subb
cmpsl
xorb
cmc
push
pop
push
inc
mov
les
popf
add
dec
adc
sub
fcompl
or
orb
or
or
imul
and
inc
movsb
cmp
sbb
imul
les
in
aam
or
test
inc
insl
push
add
mov
xor
mov
es
test
add
lods
je
imul
aam
fld
jbe
hlt
push
mov
lods
ret
cs
loope
inc
push
adc
mov
sub
jl
or
in
push
or
mov
jle
loope
jle
xor
mov
sbb
push
lods
test
mov
mov
pop
rclb
mov
fwait
xor
lcall
call
arpl
pop
sub
mov
dec
enter
aas
lahf
mov
mov
out
mov
sub
sub
in
fs
or
mov
adc
call
push
fldl
insb
xor
aas
out
mov
cmp
cmc
add
enter
rolb
movsb
push
adc
jecxz
and
insb
dec
movsb
adc
lea
ret
jmp
andb
push
out
pop
mov
xlat
in
or
xchg
add
inc
sbb
sub
fcompl
stc
cmc
call
imul
cs
lret
push
mov
jne
rclb
lock
xchg
add
pop
jnp
in
dec
jne
ss
imul
lret
scas
test
xchg
ret
rcrb
pop
leave
xor
je
sub
adc
mov
dec
cmp
int3
mov
out
sub
sub
jnp
add
jmp
push
adc
cmp
xchg
sbb
das
pop
sub
dec
mov
test
push
test
jl
xor
sub
push
mov
adc
fadd
out
xor
jo
adc
jb
test
enter
and
sbb
pop
movzbl
movsb
mov
fildl
or
inc
jbe
xor
inc
cmp
inc
cmp
mov
aam
popa
or
mov
pusha
into
mov
mov
clc
mov
shlb
fcmovb
jmp
clc
adc
lea
fs
adc
in
xor
sbb
not
cld
lea
test
pop
stos
fs
xor
sbbl
data16
jbe
ss
cmp
aaa
jmp
add
mov
and
shrd
sbbb
mov
lods
dec
xchg
shlb
hlt
add
sahf
add
pop
cmp
push
adc
and
sbb
sti
or
sar
xchg
push
pop
add
sbb
add
push
inc
xchg
pop
aaa
lea
fiadds
orb
mov
add
clc
pusha
iret
sub
xorb
add
les
jne
sbb
jg
mov
jb
push
xor
lods
int3
nop
popa
enter
in
push
fs
andl
loopne
ret
scas
loopne
xorl
pop
add
push
sbb
nop
daa
add
sub
mov
in
sbb
dec
insl
cmp
fmuls
mov
in
mov
add
imul
test
and
fidivrs
ret
les
pop
dec
or
xchg
inc
mov
aad
add
adc
pop
dec
loope
mov
je
out
and
sbb
pop
je
aam
loopne
xor
adc
mov
les
iret
xor
in
cmp
mov
jnp
arpl
sti
cwtl
add
or
and
push
add
mov
cmp
clc
je
push
add
loope
and
jp
imul
adc
xor
fimuls
adc
jae
xlat
push
adc
add
adc
and
add
cwtl
insb
add
xor
jg
dec
pop
sbb
sbb
je
and
push
adc
cmp
popf
mov
daa
iret
and
sbb
test
add
hlt
and
ret
ljmp
and
sbb
ret
ficoml
add
or
sub
push
push
xchg
xchg
js
add
xchg
mov
push
pusha
cmp
inc
xorb
sub
push
mov
push
xor
adc
inc
mov
fsubl
and
xor
sub
aaa
and
sahf
clc
aas
sbb
and
push
ficoml
push
push
push
xlat
or
xor
or
or
outsl
pop
imul
rorb
xor
loopne
rorb
nop
sti
lahf
or
test
push
pushf
cmp
push
cmp
adc
movsl
rcrb
add
inc
inc
mov
jge
addb
xor
xchg
push
adc
and
clc
sbbl
les
sbb
dec
and
mov
xchg
or
imul
fists
jns
dec
mov
sbb
xchg
jp
dec
or
and
or
and
test
in
clc
or
in
inc
dec
adc
adc
jl
and
sbb
mov
xor
pop
or
outsb
adc
in
xchg
xchg
pop
lods
add
push
and
xor
adc
test
dec
xlat
fucomi
xchg
push
cltd
sbb
sub
xorb
stos
mov
jge
test
adc
nop
aaa
rcrb
hlt
filds
xchg
arpl
inc
sbb
and
sbb
adc
pop
add
push
adc
xor
push
mov
adc
push
mov
cld
ret
push
shll
pop
sub
push
dec
sub
mov
push
dec
adc
or
js
adc
mov
mov
and
cld
mov
and
sbb
in
cmpsl
aaa
add
dec
and
add
add
flds
add
cmp
sbb
jecxz
sub
sub
push
loope
mov
mov
rclb
sbb
adc
jno
mov
fs
les
fsubrl
mov
movsl
imul
sub
adc
shlb
jae
cmp
push
adc
and
push
addr16
sub
mov
cmp
nop
xor
mov
je
adc
mov
xchg
sub
sub
sbb
or
ss
or
mov
push
sub
movsb
test
sbb
mov
cmp
fstpl
mov
insb
movsb
mov
daa
adc
mov
mov
mov
out
cltd
or
mov
pop
or
pop
test
xor
les
add
mov
in
int3
popf
push
or
sbb
sbb
jge
mov
ljmp
cmp
push
cmp
outsb
cltd
icebp
and
inc
repnz
pop
das
xor
dec
cmp
ret
add
or
xchg
mov
adcb
xchg
sar
stos
add
push
add
jno
js
and
nop
pop
insb
xorb
cmp
push
insl
and
add
mov
rdmsr
loopne
push
sbb
mov
test
inc
fisubs
push
sbb
jb
fmull
ljmp
sbb
mov
fs
cli
push
test
push
xor
nop
sub
pop
mov
insl
inc
xchg
adc
call
xor
andb
loopne
adc
clc
in
test
daa
lret
cmp
pop
sub
add
or
jle
jecxz
stc
loop
push
test
cmp
xchg
sbb
cmp
add
dec
dec
adcl
and
fsqrt
jmp
push
lods
iret
lods
je
sub
in
push
dec
push
fstpl
nop
das
in
jmp
push
inc
or
lfs
movsb
xchg
push
repz
add
jmp
add
pop
add
mov
pop
filds
pop
add
stos
pop
ss
test
or
test
std
cmpb
test
jno
push
jnp
and
fs
cs
jno
repz
adc
sti
daa
dec
mov
lea
shlb
dec
sbb
xor
xor
lods
int3
rcrb
xchg
xchg
inc
sub
mov
out
and
inc
outsl
mov
imul
jge
loopne
jmp
cli
outsb
vmptrst
or
pushf
pop
imul
lcall
xor
outsb
aam
jns
jmp
adc
jae
xlat
jl
jb
loope
jp
and
inc
aam
mov
sub
sub
push
cltd
or
adc
add
pop
aam
es
out
and
inc
movsl
sbb
out
jae
xchg
ss
jne
jne
sbb
mov
add
sbb
rclb
loopne
lds
fnsave
push
cmp
daa
lock
add
popf
or
cmpsl
mov
push
push
sub
ljmp
subps
jp
dec
scas
inc
ss
ja
addl
pop
xor
je
inc
inc
xchg
movsl
push
test
ds
movsl
mov
outsl
sbb
push
jne
jns
loopne
xchg
sub
xchg
jnp
sbb
stos
pop
outsl
leave
or
fsts
arpl
inc
pusha
mov
stos
test
cs
sbb
jle
push
fmuls
movsb
imul
rcrl
xchg
jno
pusha
fisttps
xor
test
adc
or
jge
mov
xor
ret
push
mov
or
pop
hlt
xchg
add
dec
insl
xor
cmp
add
repz
sub
sub
inc
lea
aam
add
push
add
adc
and
mov
mov
xor
or
add
inc
mov
sbb
cld
jl
outsb
jno
inc
and
mov
add
ret
inc
mov
mov
add
xor
sarb
int3
mov
cmpsl
decl
inc
adc
jmp
nop
shll
add
mov
test
inc
dec
adc
pop
and
clc
push
cmp
cwtl
mov
pusha
adcl
add
dec
cmp
cld
mov
pop
mov
rclb
mov
fldl
adc
inc
pop
adc
jp
adcb
test
xchg
xchg
rol
or
inc
mov
pop
popa
mov
pop
nop
mov
push
push
in
mov
cmpsb
adc
ret
int
inc
sub
je
bound
mov
jo
daa
cld
insb
push
fsubrs
mov
jne
push
adcb
sub
cmp
inc
lcall
push
or
or
xchg
dec
jg
sbbl
cmpsl
pushf
mov
aas
or
sbb
sub
and
pop
mov
leave
jg
dec
add
mov
add
nop
addr16
cld
mov
mov
add
xchg
jno
push
cwtl
lea
jo
sub
movb
mov
push
sbb
imul
push
inc
cs
pop
inc
mov
push
add
mov
cmp
jns
and
xlat
inc
je
cld
push
inc
xlat
pop
cmp
add
popa
jmp
xorb
xlat
push
hlt
sarl
std
and
inc
adc
ret
and
xor
inc
add
pop
or
int
cmp
or
sub
pusha
cmp
sbb
cmpsl
inc
cmp
pusha
jne
int
faddl
inc
sbb
sub
inc
test
xchg
nop
jmp
test
pop
pop
inc
pop
sbb
add
out
ds
mov
push
push
jmp
mov
aas
fsubrs
adc
xor
jle
cmp
push
sbb
enter
in
dec
test
aam
addr16
cmpsb
push
pushl
xchg
test
rolb
and
enter
xchg
cltd
and
jb
nop
adc
out
push
in
ja
jl
shlb
out
or
xchg
push
dec
or
fs
movb
lret
je
push
lea
mov
out
ficomps
sub
add
movups
sbb
inc
adc
push
sbb
pop
arpl
fmull
cmp
inc
fmuls
xor
dec
add
cmp
and
subl
cmp
pop
in
cld
push
faddl
mov
imul
dec
das
push
push
jmp
es
or
mov
cld
push
repz
push
cwtl
jae
sbb
add
jo
aaa
cwtl
addr16
xor
push
or
xor
inc
add
fwait
mov
bound
add
cld
jbe
gs
adc
push
dec
xor
adc
je
push
push
dec
inc
ret
and
or
adc
push
dec
jmp
adc
gs
jne
mov
in
cmpsb
mov
cmp
or
and
add
push
jecxz
mov
aam
test
adc
mov
hlt
jg
jo
and
lahf
or
fmul
sub
sbb
aas
jmp
je
popa
pusha
call
fs
dec
push
push
in
loopne
xchg
mov
loopne
shll
push
and
loopne
jb
adc
add
scas
subl
adc
into
jmp
pop
mov
movb
push
mov
pop
push
lds
ret
or
les
cmc
aam
ss
ret
imul
gs
bound
sub
mov
push
pop
mov
mov
data16
add
enter
mov
sbb
mov
aam
push
movsb
lock
mov
cmp
jo
adc
or
icebp
mov
mov
push
andl
add
lea
out
ds
jo
add
xor
rorl
xorb
dec
incl
sub
xor
pusha
mov
rol
mov
ror
xor
shr
sub
jnp
fld
ret
or
or
icebp
add
add
add
mov
cmp
adc
ret
mov
push
or
and
fiaddl
sti
add
fsubrs
js
outsb
sub
jge
jl
mov
push
shrb
mov
fisubrs
testl
cli
and
and
xchg
push
outsl
loopne
adc
mov
data16
xor
movsl
xor
mov
mov
and
not
ret
shrb
add
add
add
add
xor
xor
fsubr
addr16
xchg
lret
call
rcll
sub
ljmp
rol
rol
out
add
cs
cmpsb
imul
push
loopne
loopne
add
call
in
shl
in
repnz
cmp
punpckldq
xor
mov
push
bound
pop
push
and
mov
pop
aaa
mov
subl
xor
cltd
xor
dec
shr
xor
cwtl
loopne
xchg
lret
in
in
and
nop
loopne
cmp
dec
lcall
in
mov
or
pop
or
int3
mov
xor
in
push
xor
and
and
pusha
lret
iret
or
xor
in
xor
hlt
xor
add
loopne
add
inc
adc
fwait
loopne
inc
mov
inc
jo
je
or
jo
ficoms
cmpsb
inc
mov
jl
dec
shll
adc
push
lock
pop
iret
loop
mov
add
add
jle
fadds
pop
jbe
call
sub
ret
lret
push
clc
jp
push
cmpsb
bnd
add
gs
fdivrs
imul
and
psllq
inc
mov
mov
xor
cli
nop
or
jmp
aam
dec
shll
aaa
cmp
adc
xor
sub
mov
xor
in
hlt
inc
shr
rolb
rcll
inc
aaa
cli
xor
xchg
add
fcom
aaa
or
inc
or
cmpsb
sub
dec
loopne
in
pusha
in
clc
lahf
jo
add
movsb
loope
inc
push
sbb
adc
xor
and
nop
data16
add
das
push
xor
dec
xorb
sahf
leave
leave
and
adc
int
push
pop
cmp
push
xorl
sub
push
sahf
push
add
or
push
or
mov
pop
imul
inc
pusha
sub
pusha
cs
popa
xchg
xchg
movsl
mov
xchg
inc
rorb
adc
add
fs
cmp
shr
subl
add
adc
fs
dec
enter
dec
icebp
stc
stc
adcl
adc
adc
or
or
out
dec
ljmp
adc
adc
sbb
jo
adc
in
add
and
add
pop
jg
mov
add
dec
faddl
clc
pop
push
clc
shrl
mov
and
incl
cmp
jb
mov
lea
pop
add
cld
sub
lea
add
xor
out
or
clc
sub
mov
xchg
lock
mov
lcall
jo
lock
rorb
shrl
addl
and
sub
aaa
pop
cmp
aas
lea
jmp
rcll
loop
sub
out
mov
pop
lcall
mov
lahf
mov
mov
dec
jne
pop
add
loope
lock
fcoms
inc
inc
jl
sub
mov
out
sbb
adc
or
imul
add
dec
adc
mov
inc
add
jae
push
pop
fadds
adcl
sub
stos
or
mov
inc
lods
cli
cmpsb
ljmp
std
fldt
push
pop
loopne
ror
mov
clc
push
ljmp
es
dec
adc
fdivl
inc
pop
add
jb
cmp
ja
dec
sub
jns
xchg
cmpsl
sbb
inc
aaa
popa
data16
cmpb
sub
xor
dec
je
add
push
or
mov
cmp
cltd
cmpsl
std
insb
or
push
inc
adc
pop
insb
mov
pusha
sub
ljmp
push
add
jg
push
add
lods
je
mov
mov
dec
jecxz
out
inc
or
je
or
movsb
shlb
adc
pop
popa
cmp
jne
xor
cltd
inc
sbb
jns
std
pop
sub
inc
lea
inc
mov
pop
dec
xor
orl
add
cmp
or
popa
fcomps
cli
es
test
insb
adc
cmp
fs
dec
inc
push
inc
and
or
or
jp
add
xchg
sbb
cwtl
push
inc
add
mov
cli
sub
insb
cmp
sbb
mov
lea
ljmp
mov
and
in
cld
or
dec
sub
or
jbe
sahf
mov
fwait
pop
lods
pop
cmp
jne
notb
mov
insb
loop
in
adc
je
jp
pushf
outsb
filds
cmp
jb
or
ja
pushf
nop
sub
pop
cmp
push
add
push
pop
inc
stos
adc
push
push
jmp
jbe
inc
test
fstpt
jne
mov
into
andb
xchg
xchg
data16
fnsave
aaa
jb
cmp
rol
shl
add
jmp
cwtl
aas
je
jae
les
inc
orl
mov
dec
xor
je
fs
jne
xor
adc
lock
test
insb
je
push
mov
or
add
stos
mov
push
jae
mov
jmp
dec
shlb
movsb
xchg
cs
add
push
push
sbb
push
arpl
push
add
push
mov
shrb
jae
sti
cmp
jg
or
jge
and
jle
out
jae
es
sub
sub
and
pop
cmp
jl
inc
insl
movsb
ficomps
adc
inc
test
lahf
add
jp
jb
jbe
mov
orl
popa
test
fwait
and
or
clc
pop
cld
cld
je,pn
test
jne
je
outsb
and
push
mov
add
je
xor
clc
sti
adc
mov
xchg
into
adc
rolb
loop
aam
adc
add
test
jno
scas
push
add
and
je
mov
cmp
jmp
mov
cmp
add
push
mov
cmp
loop
xchg
adc
lahf
mov
lret
pop
push
mov
cmp
out
xchg
outsb
roll
es
xor
pop
jmp
loop
add
call
xchg
dec
pop
pushw
add
mov
bound
cmp
jb
test
test
dec
mov
pop
xchg
xchg
imul
add
xchg
ljmp
mov
cli
jbe
aaa
call
pushl
sub
push
push
push
and
jge
add
pop
jb
sbbl
lock
or
cmp
mov
dec
fs
loopne
inc
das
mov
or
xchg
sbb
pop
cwtl
or
pusha
mov
fiaddl
stos
dec
daa
mov
add
cmp
push
push
dec
fadds
inc
and
jae
je
xor
mov
cmp
je
test
adc
dec
in
sahf
push
fsts
sti
mov
mov
or
or
mov
xor
add
jle
jbe
arpl
or
add
push
ss
add
push
rorl
dec
loope
pop
pop
pop
roll
movsl
and
es
jbe
lret
mov
lidtl
es
xor
push
or
mov
data16
mov
jg
scas
push
or
mov
cmp
lock
xchg
mov
test
hlt
inc
sub
xchg
xchg
push
gs
pushl
add
mov
push
mov
movsl
sub
je
pusha
sti
pusha
jb
cs
lock
or
jbe
clc
fcomps
add
inc
fisttpl
sbb
lea
mov
push
sub
lods
pushl
or
cwtl
sbb
push
mov
push
outsb
jmp
rorl
add
push
shll
mov
push
jmp
xchg
pushf
lods
sbb
jne
lahf
jne
addl
xchg
xchg
xchg
xchg
push
adc
xchg
jbe
das
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
sbb
and
or
movsb
xor
test
aam
add
or
mov
loopne
cmp
jge
xchg
movb
sahf
rcrb
les
add
jnp
fbstp
mov
rorb
clc
mov
cs
mov
fmuls
loopne
jne
fnstsw
mov
in
sub
fs
cmp
and
and
pusha
testb
adc
push
pop
insb
in
adc
je
cmp
das
nop
or
inc
add
bound
in
add
daa
into
cmpl
adc
xchg
inc
cmpl
add
xor
mov
shlb
in
fcomp
sbb
and
cmp
je
mov
cmp
mov
inc
inc
inc
int
sub
xchg
jl
cmpl
and
inc
mov
das
lods
jbe
les
fwait
dec
mov
out
cmpsl
dec
imul
add
push
fsubrs
pop
test
push
lea
roll
mov
dec
sbb
jmp
insb
jne
jl
sub
pushf
arpl
fwait
rorl
jae
jo
sub
adc
call
in
ret
pop
sarb
cmp
jne
les
aam
adc
jmp
cmp
cmpsb
or
mov
inc
inc
fld1
out
cmpl
dec
xor
icebp
mov
insb
test
movsb
push
adc
in
out
jb
sub
lret
loope
cmp
cmpl
adc
jp
jo
and
mov
fadd
jae
push
jns
nop
mov
lods
test
add
out
loope
enter
aas
add
lds
nop
jmp
inc
push
jnp
sub
sbb
cmp
je
pop
or
lock
add
shll
cs
adc
inc
mov
add
jne
cwtl
mov
push
mov
xchg
mov
sub
and
lcall
xor
cmp
or
sub
movsl
jns
or
test
pusha
ret
push
mov
push
cmp
add
xchg
ficoml
xchg
add
das
mov
rcll
imul
xchg
cmpsb
pop
xchg
pop
lcall
imul
and
out
xchg
inc
and
mov
fadds
mov
xor
cs
lret
in
xor
cmp
or
and
sub
orl
movsl
xor
push
adc
data16
imul
push
sti
xor
pop
je
cld
mov
push
std
lds
call
add
xor
sti
fsubs
aam
mov
sub
push
push
add
cmpsl
popf
dec
and
push
int3
sbb
or
es
pusha
xor
shlb
jbe
cwtl
inc
push
je
jno
loopne
add
dec
xor
fs
sub
sbb
addl
sahf
or
or
push
repnz
add
fiadds
push
cmpl
loop
and
xor
add
push
xchg
notb
cli
xor
jne
sbb
dec
xchg
inc
pop
outsb
sub
dec
rolb
fadds
add
movzwl
mov
inc
inc
adc
out
pop
mov
mov
jnp
jne
sub
jmp
lret
xor
test
insb
jbe
mov
sub
sbb
hlt
xchg
mov
int
loope
sub
pop
inc
shll
js
xchg
inc
cmp
inc
sbb
clc
bound
pop
mov
push
pushf
pusha
inc
insl
cmp
mov
xchg
push
sbb
sbb
lock
push
out
shrb
push
jbe
data16
rsqrtps
loop
pop
out
push
xor
bound
push
xchg
fs
and
xlat
inc
or
popa
stos
orb
inc
ret
scas
push
rcl
shlb
fstl
stos
dec
push
insl
or
sbb
sub
cld
lock
pop
data16
mulb
test
iret
xchg
pop
pop
daa
clc
aam
or
add
enter
roll
ja
pop
loope
push
movsb
or
loopne
sbb
addl
sahf
lds
mov
lahf
movsl
lahf
or
lea
add
popf
movsl
sahf
enter
lods
sbb
rorl
aam
sbb
or
fimull
add
dec
xchg
loopne
in
sbb
mov
and
lods
xorl
test
jge
cld
or
nop
ds
xchg
sbb
mov
pop
popa
push
dec
in
adc
pop
or
scas
fnstsw
test
dec
cld
aam
inc
notb
aaa
ljmp
and
movsb
stc
fcomp
sub
push
pop
sbb
imul
aad
pop
sub
pop
push
pop
mov
mov
pop
inc
adc
mov
adc
or
shrb
dec
xor
push
lods
mov
mov
dec
sbb
push
xor
lcall
and
adc
jae
dec
adc
mov
sahf
push
loopne
lods
push
cmpsb
add
xor
jecxz
fwait
jbe
pop
ja
adc
inc
add
dec
lea
jg
ja
mov
lea
xor
mov
mov
xor
int
mov
mov
dec
in
pop
pop
pop
mov
xor
pop
inc
cmp
cmovs
test
and
stos
stc
insb
or
or
push
gs
mov
cmpsb
pop
add
mov
sub
in
jae
in
and
or
add
arpl
adc
js
push
popa
faddp
jo
mov
andl
sbb
lcall
dec
dec
or
dec
add
dec
add
insb
cmp
es
addr16
ja
sub
add
adcb
adc
sub
aas
sub
mov
sub
cmp
pusha
ljmp
cmpsb
jne
and
sub
and
pop
inc
xchg
mov
inc
or
add
or
adc
repz
and
rol
pop
fsubl
cld
dec
aad
inc
inc
inc
mov
mov
mov
mov
fldcw
push
or
inc
sub
clc
clc
add
rclb
adc
rorb
sub
xchg
xchg
xchg
arpl
xor
fdivrs
pop
cmp
cmp
sub
and
pop
fldl
jbe
mov
and
incl
and
mov
push
xchg
rorb
adc
out
rcr
and
adcl
call
inc
inc
nop
pop
arpl
sahf
dec
sub
jbe
jmp
push
adc
pop
pop
inc
cmp
pop
xor
mov
sbb
mov
and
pop
mov
pop
shlb
xor
inc
and
mov
in
sbb
faddl
add
es
mov
insl
push
mov
rclb
cmpsl
jmp
xor
mov
rcll
and
jae
mov
shlb
xor
add
push
mov
jecxz
adc
or
lahf
adc
scas
push
dec
and
dec
cmpb
fwait
lock
inc
mov
push
jne
fsts
cmp
stos
inc
movsb
dec
pop
cmpsb
xor
insl
xchg
xchg
mov
jo
push
add
and
enter
mov
jl
test
stos
jge
sub
pop
inc
shl
add
dec
push
mov
adc
insl
rorb
pop
mov
clc
testb
mov
inc
bound
inc
push
sbb
sbb
and
pushl
inc
cmp
xor
jmp
or
test
mov
jmp
push
aaa
push
pop
inc
add
push
frstor
cmpsl
cmpsl
lods
cltd
mov
pop
add
sub
mov
out
mov
imul
xchg
mov
cmp
push
mov
push
cwtl
mov
add
push
stos
fimuls
inc
mov
and
adcl
jmp
cmp
dec
js
imulb
and
sti
bound
sbb
push
dec
out
adc
sub
push
pop
icebp
fildll
inc
sub
je
cmp
jbe
add
jl
mov
insb
jmp
jbe
out
push
mov
jbe
xorl
push
ret
mov
push
push
jp
in
xchg
aas
mov
inc
inc
and
inc
adc
bound
cmpl
pop
clc
repz
flds
imul
xor
clc
or
cmp
jbe
mov
aam
push
lea
les
mov
pop
mov
mov
pop
mov
adc
cmp
cmp
out
push
add
in
or
push
add
sub
cmp
push
cmp
imul
add
add
lcall
insl
mov
dec
push
xchg
jae
ret
jle
push
sbb
mov
sbb
pop
mov
ret
jmp
sbb
shll
xchg
mov
and
jae
add
dec
push
sbb
cmp
jmp
inc
sbb
subl
lahf
cmpl
adc
andl
xor
jp
or
pushl
and
xorl
in
in
push
out
add
icebp
inc
arpl
mov
call
adc
iret
subl
and
jne
bound
jne
ret
ret
cmp
xchg
xor
fsubr
mov
mov
push
mov
xchg
inc
or
push
jmp
cmp
jle
adc
or
sbb
adc
cs
orl
add
sub
cmp
cmc
ja
and
lret
jbe
sub
add
add
or
sahf
push
sub
pop
lcall
xor
fld
push
mov
adc
sarl
fidivrl
adc
scas
fldenv
imull
push
mov
popa
rcl
popf
loop
shll
xchg
or
dec
sbb
mov
jne
inc
dec
ret
sbb
sub
sar
daa
mov
xor
and
jmp
scas
jo
cmp
je
xor
xchg
mov
roll
or
test
mov
lods
sub
or
push
cmp
addl
dec
or
push
repz
xchg
adc
inc
shlb
fadd
mov
or
or
xor
mov
pop
ret
js
jmp
icebp
popf
lods
pop
inc
shlb
add
outsb
jp
cld
add
popa
pusha
js
cmp
in
or
jmp
int3
inc
xchg
adc
sub
loopne
aad
jne,pt
ds
orl
mov
mov
stos
dec
hlt
mov
ret
jne
sbb
add
cmp
je
push
test
sbb
adc
add
inc
mov
xchg
cmp
ret
pushf
push
or
dec
push
lret
adc
dec
pop
cmp
mov
add
jmp
sub
outsl
cmp
or
pop
xor
sub
lea
push
sbb
pop
add
mov
fcompl
or
pop
scas
sub
imul
jmp
inc
push
int
add
js
pop
inc
and
cmp
sub
stc
ja
and
jne
loopne
and
sbbb
loopne
mov
adc
jle
sub
cmp
mov
inc
push
add
or
ret
push
loope
or
pop
mov
cmpsb
hlt
mov
js
and
push
and
add
stos
dec
loop
lea
dec
in
int
int
notl
cs
dec
cwtl
xchg
xchg
sub
add
inc
gs
lea
or
mov
lods
xor
mov
pushaw
rcrb
and
enter
or
jo
mov
loopne
lahf
les
lock
bound
mov
pop
fdivr
xor
add
jl
inc
jmp
pop
xor
inc
cmp
rolb
pop
insb
push
inc
sbb
hlt
call
hlt
push
sahf
cmpb
xor
insb
cmp
push
or
cmp
shlb
pop
in
mov
repz
ja
arpl
mov
in
or
ja
cmp
cmp
lock
xor
add
mov
push
add
push
mov
xchg
pop
cmp
jne
jbe
shrl
push
lret
ss
sub
push
rcr
pop
cmp
lea
mov
push
jno
mov
cmp
pop
pop
dec
dec
cmp
mov
loop
push
jbe
jnp
cltd
ss
xchg
ds
pop
jmp
xchg
popf
pop
push
addl
shlb
ds
cmp
push
xor
mov
imul
dec
jle
les
xchg
xor
add
inc
das
js
and
xchg
xchg
imulb
and
sbb
jp
push
cmp
mov
adc
mov
adc
adc
loopne
jne
loope
pop
push
aaa
cmp
mov
and
femms
xor
mov
dec
mov
or
mov
dec
push
stos
xchg
push
sbb
push
sarl
mov
mov
pop
cmp
cmp
cmp
out
jl
cmp
add
fldl
ja
jmp
or
mov
mov
pusha
test
push
add
or
cld
push
popa
jo
pop
sbb
sbb
lcall
or
push
in
mov
test
sbb
call
ja
repz
push
push
adc
in
andl
adc
pop
inc
inc
push
inc
adc
mov
or
pop
mov
pop
inc
clc
dec
sbb
decb
jle
adc
sbb
inc
xor
cld
add
push
cmp
call
mov
orl
sub
xchg
add
jl
cmp
pusha
mov
rcll
lret
cmp
lahf
test
pop
je
add
push
sbbb
cmp
out
sbb
or
into
push
adc
xchg
pop
inc
cmpsl
jo
mov
test
mov
es
shl
inc
add
aas
cli
dec
mov
and
sbb
jno
mov
rolb
sbb
push
test
jo
xlat
sub
or
out
add
add
push
mov
fistps
and
adc
mov
and
inc
adc
nop
xor
dec
and
sub
mov
pop
pop
js
dec
inc
and
int
out
xchg
inc
lods
popf
add
xchg
lods
cmp
stc
sub
push
add
insb
test
hlt
jl
add
mov
addr16
cmp
loopne
loopne
lock
test
loop
add
cmp
sbb
and
cmp
ret
jmp
ss
jmp
push
test
inc
scas
sub
out
mov
sbbl
adc
pusha
mov
test
fs
push
xchg
or
subb
or
cmpsl
push
add
mov
mov
repz
loope
test
daa
pop
push
sbb
inc
push
cs
mov
xor
and
sbb
pop
mov
fimuls
leave
ret
pop
arpl
out
add
mov
adc
or
push
inc
orb
adc
clc
push
leave
mov
mov
ja
cmpsl
sti
push
jecxz
jnp
push
lea
insl
cmp
dec
or
xor
pop
sub
and
pushf
mov
arpl
and
popf
add
add
mov
xbegin
jmp
fisubrl
push
arpl
push
cmp
call
stos
dec
ret
sub
add
das
mov
cmp
shr
rcr
sbb
ljmp
rorb
xchg
add
mov
int3
cmp
pushf
cli
ret
lds
cltd
push
shlb
inc
out
lea
mov
inc
adc
adc
sub
or
js
bound
cmp
adc
sbb
mov
jne
xchg
xor
add
jle
add
jo
and
xchg
cmp
mov
xor
cmpsw
mov
cmp
add
xchg
and
mov
in
jmp
push
add
inc
mov
enter
out
out
daa
or
rclb
mov
add
fdivrs
pop
cmp
je
mov
mov
into
lahf
sbb
and
and
adc
or
and
sbb
leave
xchg
orl
fcom
das
add
and
inc
in
out
mov
loop
or
sbb
and
pop
add
or
insb
cmp
sarb
mov
into
movsl
jns
jl
sub
jb
mov
daa
inc
adc
mov
icebp
es
mov
out
cld
pusha
cmpl
leave
mov
add
out
jl
sbb
jne
jle
hlt
dec
push
jecxz
adc
pop
popa
loop
mov
fs
push
sbb
adc
subl
xor
lret
and
fcmovnbe
int
add
fs
or
xchg
mov
adc
hlt
push
push
lods
mov
jecxz
pop
xchg
push
xchg
add
in
lahf
pop
push
insb
push
in
push
incl
ret
jmp
adc
mov
int
mov
adc
push
rcll
pop
popf
add
jl
int3
push
imull
jge
leave
mov
jae
inc
popf
out
inc
pop
sbb
add
lret
shlb
sub
sbb
dec
incl
sub
cs
test
mov
pop
add
mov
xchg
add
and
bound
pop
repnz
outsb
and
fdivrl
sahf
addl
mov
rcrb
sbb
and
mov
or
and
shrb
int3
cmp
dec
call
mov
mov
and
pop
mov
test
enter
cmp
je
adc
divl
mov
jmp
sub
enter
test
in
mov
xchg
sub
dec
or
call
push
ljmp
mov
and
loop
sub
sbb
fisubl
dec
fcompl
shlb
dec
add
mov
inc
lea
sub
and
add
add
outsb
test
and
and
cmp
cltd
test
rol
and
aam
dec
pop
add
movsl
push
add
add
fidivrs
mov
std
lcall
addb
cmpl
lea
xchg
stos
sbb
push
mov
push
adc
inc
inc
outsl
ret
fadd
adc
or
pop
jb
jbe
and
xchg
jo
jns
add
shl
negb
cmp
outsl
test
adc
sahf
pop
xor
xor
pandn
inc
adc
push
jnp
sarb
or
mov
jb
je
mov
in
loop
pusha
pop
insb
in
cmp
fs
and
inc
iret
mov
pop
jns
dec
dec
clc
jne
mov
push
push
xor
test
cmp
push
js
fdivrs
sub
ret
xchg
push
pop
dec
stos
es
sbb
dec
pushf
xchg
sbb
lret
and
enter
mov
xchg
stos
fs
hlt
hlt
jns
inc
cmp
in
pop
lock
mov
dec
xor
mov
adc
call
insb
test
mov
lret
mov
hlt
jne
push
js
lock
fistl
cld
loopne
fnstenv
out
mov
mov
ss
xor
in
data16
add
ficoml
pushl
xchg
add
push
loope
adc
adc
add
push
or
cld
sti
mov
sbb
ror
xchg
or
into
iret
in
xor
inc
movl
pop
sbb
add
hlt
hlt
mov
daa
ss
mov
loopne
dec
or
sub
jnp
pop
inc
fs
fistpll
xchg
push
rcll
adc
dec
loope
cmp
test
push
sub
rolb
cmpsl
sbb
add
or
add
dec
jge
jmp
jne
jns
dec
std
ficoml
push
dec
xchg
pop
pop
or
outsl
gs
cmpl
clc
sarl
dec
jbe
push
cmp
adc
call
pushf
ss
popa
js,pn
loopne
aam
bound
dec
stos
and
cmp
push
sbb
subb
in
add
jmp
xor
pop
mov
outsb
in
mov
and
push
test
lea
dec
fldt
pop
shlb
add
cmc
fisttps
dec
lea
mov
insb
leave
add
push
push
pop
loopne
fisttpl
movsl
mov
jne
mov
cmpsb
adc
icebp
ret
les
rorb
xor
rcrb
mov
xchg
xchg
dec
adc
cli
loopne
fs
inc
adc
dec
mov
and
loope
adc
mov
mov
pop
add
xorl
subl
mov
sub
shl
pusha
aad
add
movsb
mov
inc
mov
mov
sbb
cmp
inc
mov
les
add
pop
cmpsb
test
sarl
cmpb
mov
cmp
adc
inc
addb
jl
jmp
push
push
subb
dec
mov
or
aas
pop
jle
imul
xchg
mov
add
shlb
pop
das
sbb
lock
mulps
es
or
stos
fcomp
add
pop
add
mov
adc
stos
aam
mov
test
das
xor
xacquire
push
pop
jns
gs
insb
push
pusha
mov
jb
addr16
xchg
dec
mov
and
dec
pop
cmp
mov
bound
jle
xlat
cvtps2pd
and
mov
outsl
mov
pop
pop
cmpb
sub
push
jae
aam
lea
dec
fists
sahf
jo
scas
xchg
inc
or
pushf
ret
aas
add
and
cmp
xchg
lods
addr16
xor
ja
add
mov
sbb
je
push
sub
inc
adc
std
aaa
icebp
movsl
scas
pop
pop
iret
and
roll
adc
lea
sahf
mov
adc
pop
leave
rorb
loopne
pop
adc
pop
pop
or
or
shlb
pop
xchg
add
add
int
jp
jmp
mov
inc
sbb
out
dec
mov
cld
and
gs
mov
xchg
repnz
rclb
daa
push
mov
pop
loope
loopne
xchg
mov
push
popf
ret
mov
pop
inc
andl
mov
adc
mov
test
adc
lods
dec
add
sbbb
push
cmp
jmp
sub
sbb
cmp
push
outsl
outsb
xchg
in
in
out
push
push
iret
jl
cmp
test
dec
pop
movsb
sti
out
push
mov
decb
enter
and
cmp
insl
test
mov
jmp
add
dec
inc
gs
mov
in
clc
add
push
cmpl
lods
loopne
or
incb
or
repz
and
sbb
or
jns
push
lret
sbbl
and
in
xchg
inc
repnz
lods
inc
adc
mov
movsb
scas
les
popf
rol
test
popf
xor
shl
fmuls
ret
and
sub
xchg
pcmpeqw
fcoml
jl
dec
push
hlt
add
popa
xchg
in
sbb
jnp
xchg
and
cltd
test
inc
loopne
adc
inc
fsubp
test
pop
push
mov
rorl
movswl
outsb
jo
test
cmp
xchg
notb
insb
loope
push
test
adc
ret
pushl
jmp
mov
arpl
cltd
jmp
lods
popf
xor
in
push
add
xchg
add
jnp
add
pop
ret
test
lea
dec
jnp
rol
int
lea
loopne
sarl
pusha
sbb
into
push
push
cmp
shlb
mov
negb
sahf
xlat
mov
gs
fcoms
rolb
fadds
into
insb
loope
dec
andl
adc
imul
sbb
inc
sbbl
je
dec
adc
out
xchg
mov
mov
sti
in
cmp
inc
and
xchg
cmp
fxch
or
sbb
call
andl
rcrb
pop
addr16
sub
sbb
sbb
fs
ss
cmp
imulb
or
mov
push
mov
and
jae
sub
xor
icebp
int
or
enter
int3
rolw
add
sbb
fcomi
push
pop
sbb
add
repnz
or
adc
fwait
gs
jecxz
ficomps
pop
incb
mov
xor
imul
fnstenv
or
mov
into
lahf
sub
xor
rcll
push
rcrl
cltd
mov
sub
shl
push
sti
and
mov
add
cmp
shl
xchg
ljmp
pop
pop
test
lds
sub
cmp
lea
cmp
mov
add
mov
push
xor
cmp
in
das
sti
into
ds
add
test
jo
mov
rcrb
push
or
xor
pop
fildl
jp
cmpsb
shrl
cmp
mov
aad
push
dec
addr16
roll
int
in
sbb
movsl
sbb
sub
insl
or
add
sti
or
adc
fiaddl
dec
loope
add
sbb
or
mov
mov
js
jge
and
inc
pop
dec
adc
lret
jmp
rolb
adc
push
sbb
xor
jp
xor
mov
pop
xchg
jle
pop
loopne
stc
out
adc
mov
int
jae
sbb
or
cmp
add
ret
or
jae
lea
push
sub
sbb
fstl
add
mov
int3
inc
adc
dec
pop
ret
pop
rol
orb
or
and
xorl
fcomps
sbb
popa
xor
push
push
rcrl
cmp
push
cmp
jae
inc
jmp
push
jp
sbb
xor
sub
fs
fisttpll
lea
inc
pusha
pop
jge
sub
mov
movb
ret
jo
call
push
jmp
addr16
add
jp
add
scas
iret
fdivrl
imul
pop
inc
push
pop
adc
push
xor
push
and
ret
js
in
movb
dec
mov
jns
sub
cmp
sbbb
inc
jge
xchg
add
ret
push
push
sbbl
lahf
fiaddl
cmp
push
push
xchg
jne
lea
insb
pop
push
inc
xchg
inc
cmp
jo
dec
or
jl
fwait
or
fldt
test
inc
mov
cmpsb
test
inc
pop
add
or
or
addb
cmp
fisubl
shrb
movsl
sbb
or
mov
add
imul
adc
push
cmpb
push
xchg
pop
mov
rorb
pop
xor
sbb
add
pop
or
in
fildl
pop
pop
inc
cs
push
fdivrl
xor
clc
invd
add
sahf
pop
imul
cmp
sub
push
push
clc
jmp
or
add
cmpb
enter
mov
popa
or
lahf
in
mov
mov
in
cli
adc
shlb
dec
imul
sbb
adc
ret
xchg
sbb
inc
jmp
testb
or
xlat
mov
popa
fs
or
adc
inc
and
jmp
xchg
push
addr16
cmpsb
imul
imul
fildl
dec
push
add
shlb
cmpb
inc
jne
cmpsb
jne
mov
jbe
push
dec
mov
xor
cld
or
push
mov
pop
sbb
cltd
loope
or
sub
psubsb
fnsaves
and
ja
or
inc
inc
cmp
and
push
and
mov
dec
mov
inc
outsl
sub
daa
leave
sbb
mov
or
icebp
popa
and
es
xor
test
or
notb
adc
mov
inc
jns
ja
es
sbb
cmp
push
push
add
adc
add
les
fmuls
dec
sub
xor
adc
push
adc
pop
push
inc
add
lret
testb
jl
jmp
hlt
cmp
add
or
enter
xor
movl
movsb
icebp
add
cmp
mov
cmp
push
mov
es
adc
mov
push
mov
push
arpl
nop
adc
inc
mov
fimull
mov
mov
outsb
adc
cmpl
xchg
ret
mov
cmp
mov
pop
pushl
mov
cmp
in
lahf
inc
add
cmp
xor
pop
ret
inc
inc
das
jo
adc
jp
ret
push
inc
adcl
mov
fidivl
or
adc
pop
push
add
inc
daa
cmp
les
xlat
enter
out
or
pop
fimull
xchg
aad
add
push
rorb
test
fcmovnu
xchg
stos
ljmp
lods
or
xor
ljmp
add
push
dec
jne
mov
adc
outsl
mov
pop
lock
ja
scas
pop
pop
push
mov
lret
jecxz
push
sbb
mov
enter
mov
pop
outsl
popa
pop
ds
sub
into
insb
jnp
popf
jg
fwait
mov
and
outsb
movsb
xchg
jmp
push
jo
cmp
cwtl
test
popf
dec
sub
inc
pusha
cmp
rclb
mov
or
mov
pushf
out
fs
mov
jo
add
sbb
jle
orb
pop
outsb
pusha
or
and
adc
pop
in
sbb
in
fnstcw
xchg
mov
xor
test
stos
cmp
xor
pop
xchg
pop
xchg
lods
push
gs
or
cltd
adc
leave
mov
or
stos
xor
or
pop
sbb
mov
or
add
rcl
pop
lods
push
mov
push
test
out
push
or
jmp
push
and
adc
rolb
test
push
jo
cld
push
sub
xchg
loop
jbe
pop
cmp
xchg
or
cmp
xchg
iret
cmp
stos
jne
xchg
cmpsb
cli
or
lret
stc
push
mov
bound
xor
pop
sub
xchg
sarb
idiv
mov
xchg
cmp
pushf
or
andl
mov
pusha
gs
push
push
notb
mov
stos
jl
xor
scas
lcall
adc
adcb
jecxz
bound
ljmp
cs
or
push
test
jge
pop
push
cli
jbe
ss
jmp
push
js
std
and
xor
call
mov
inc
insl
sbb
js
cmpb
jnp
add
add
shll
stos
inc
or
sbb
jecxz
jl
pop
subb
push
sahf
testb
and
mov
adc
jno
jae
xchg
sub
dec
or
mov
mov
lret
jne
or
loope
mov
jmp
sbb
sub
stos
jae
pop
mov
mov
addl
and
fisttps
testb
sbb
pushf
sbb
dec
dec
xor
add
cmp
nop
mov
pushw
sbb
mov
popa
and
sub
rol
adc
pop
ret
add
sbb
pop
cmc
jl
add
jmp
rorb
pop
pop
and
sarl
pop
in
addb
sub
popa
jns
ret
inc
add
mov
shrl
xor
mov
mov
adc
push
adc
dec
sub
and
cmp
nop
xlat
subb
jns
nop
out
adc
xchg
sarb
mov
sub
int
aam
pop
jae
adc
stos
xor
inc
xchg
lds
inc
xchg
jecxz
iret
flds
cmpsl
or
push
and
into
pop
sbbb
xor
cmpsb
xor
dec
mov
push
push
mov
mov
lods
ds
push
inc
jnp
adc
and
push
shlb
adc
mov
dec
clc
or
imull
xor
push
fldl
lret
bt
cmp
pop
imul
mov
lret
jo
and
mov
pusha
mov
cld
call
mov
pusha
lods
add
cmp
fcom
push
cltd
sbb
dec
mov
jno
shll
lret
loope
pop
icebp
cmpl
push
or
xchg
test
jo
add
or
pop
xchg
shr
mov
pop
push
std
cmpsl
xor
push
adc
es
cwtl
push
fdivl
inc
sub
jo
fcompl
pop
nop
popa
xor
add
mov
cmp
jb
inc
inc
add
adc
loop
mov
adc
sbb
inc
test
cmpsl
mov
or
add
add
push
inc
add
push
and
dec
and
es
mov
and
inc
and
sub
jle
jle
push
pop
cwtl
inc
or
mov
mulb
js
inc
inc
cmp
inc
jne
jl
pop
mov
frstor
pop
cmp
mov
loop
jo
adc
fwait
push
insl
add
mov
push
pop
push
pop
lea
jno
jmp
jne
repz
pop
nop
pop
pushf
add
clc
ret
add
pop
arpl
aas
lret
mov
or
and
loopne
lahf
mov
mov
pop
mov
jo
adcb
dec
dec
nop
lcall
mov
aas
or
add
jnp
add
testb
subl
or
add
sarb
xlat
jmp
jae
int
pop
inc
ret
in
stos
hlt
gs
sbb
xchg
push
adc
cli
add
mov
xchg
call
xor
movl
or
push
loop
sub
jo
push
das
loope
es
je
cmp
je
push
lret
fwait
les
mov
sbb
adc
stc
mov
push
cmp
mov
add
xlat
dec
inc
sub
out
shll
inc
mov
outsl
loope
sbb
loope
enter
dec
popa
xor
pop
jo
cltd
or
aam
arpl
ret
cmp
inc
adc
subl
add
loopne
test
adc
jae
test
dec
and
icebp
jmp
xor
ds
xchg
dec
mov
mov
sbb
sarl
xchg
mov
push
add
lods
mov
dec
dec
hlt
push
inc
add
cmpl
addb
sbb
es
xor
mov
pop
xor
pop
nop
int
hlt
xor
push
mov
inc
shll
icebp
inc
mov
add
divb
xor
jno
jo
push
push
add
cld
jbe
out
sub
push
enter
loope
sbb
inc
mov
mov
push
mov
iret
pop
mov
sbb
add
jae
lcall
push
fs
jg
lea
testb
or
adc
adc
or
jb
lahf
mov
add
cmp
leave
jmp
mov
push
add
out
sbb
jne
adc
dec
cmp
mov
leave
lret
into
jne
data16
ret
mov
out
adc
loopne
nop
or
jmp
mov
add
sbb
jmp
push
and
adc
xor
adc
or
inc
add
cli
or
pusha
popa
ljmp
int3
sub
cmp
jl
movb
inc
push
imul
add
mov
add
sbb
ret
inc
mov
aad
cltd
jmp
dec
mov
and
adc
pop
push
mov
and
xchg
lods
pop
es
cmp
dec
repz
push
sbb
outsl
and
xor
cmp
mov
sbb
sbb
fcmovnu
shrb
inc
mov
sti
mov
push
pusha
jnp
loopne
xchg
movsb
add
pusha
sub
jbe
push
or
lock
mov
push
mov
pop
jmp
and
inc
mov
sub
push
mov
inc
pop
dec
inc
inc
call
fwait
pusha
fwait
add
inc
pop
xchg
and
loopne
out
xlat
or
mov
cmp
mov
jbe
daa
and
jmp
push
push
and
rorb
adc
and
push
xchg
add
mov
cmp
insb
jne
jnp
pop
aam
leave
and
adc
or
cmp
push
xchg
ret
xor
jecxz
cld
sub
sbb
cmp
push
mov
ljmp
add
test
or
leave
add
pusha
fldcw
pop
adc
push
adc
mov
mov
or
pop
or
loopne
jmp
mov
add
fildll
arpl
loopne
jg
xor
imul
mov
and
ja
ss
and
ret
test
xor
inc
push
repnz
push
and
clc
fisttpl
sub
aad
aaa
popf
push
push
test
adc
sbb
adc
aam
mov
inc
and
scas
and
in
outsb
in
adc
sub
xchg
pushf
leave
push
mov
loopne
lock
imul
loopne
clc
aas
ss
adc
mov
dec
and
inc
sub
mov
pop
push
in
dec
mov
push
mov
insb
mov
adc
push
movsl
repz
pop
sub
loop
test
in
fwait
popa
lods
push
pop
dec
dec
inc
and
sbb
dec
pop
ljmp
insl
pop
aad
pop
ficompl
xchg
leave
shr
clc
ja
in
jmp
add
cli
xor
xchg
jmp
inc
dec
xchg
pusha
lret
daa
push
fwait
pop
mov
imul
push
mov
test
nop
xchg
aaa
in
jno
jb
fildl
push
and
fidivl
cmpsb
je
adcl
dec
hlt
pop
ds
jb
aas
fisubrs
fbld
jbe
insb
out
push
ja
lds
or
clc
jae
mov
popa
and
lgdtl
test
rorb
in
stos
adc
inc
je
sar
loopne
fadds
mov
or
xorb
mov
jo
scas
xor
shlb
xchg
test
pop
js
xorl
daa
fidivrs
sbb
ret
sub
ret
push
add
lds
xchg
out
cmp
js
call
add
loop
push
xor
inc
shlb
push
adc
cmp
gs
inc
push
add
jb
add
sbb
shl
es
pushf
cs
mov
lods
sub
or
scas
pop
xchg
mov
dec
cmpsl
cld
mov
dec
add
mov
jbe
test
push
fmuls
sbb
lods
push
imul
mov
gs
cld
dec
movsb
jbe
or
cmp
les
mov
inc
inc
cwtl
lock
xchg
add
pop
jb
cmp
cmpl
lahf
jnp
shll
int3
outsb
and
push
orb
clc
pop
mov
adc
mov
jge
pop
add
pop
daa
pop
into
mov
outsb
mov
push
cmp
push
bound
aas
push
add
push
mov
jno
inc
jb
cltd
clc
cmp
je
inc
in
fptan
sub
rol
mov
fiaddl
out
jne
mov
sbb
push
adc
xor
or
sbb
adc
adc
movsl
or
nop
and
jns
or
pop
je
jmp
or
push
je
cs
push
dec
push
or
and
mov
cs
sbb
xchg
push
push
lcall
cli
jg
jmp
sub
pusha
dec
cwtl
cltd
and
inc
fucomip
cli
push
xor
and
pop
icebp
jnp
mov
bound
dec
mov
and
sub
aaa
mov
scas
pushf
cmp
es
push
mov
pop
sbb
outsb
dec
inc
pop
pop
and
push
sbb
and
addb
mov
adc
inc
adc
jl
jecxz
repz
jl
cli
mov
or
dec
and
sub
mov
sbb
adc
movsl
xor
mov
dec
push
cmp
cwtl
sub
jmp
popa
arpl
inc
cld
dec
aad
mov
dec
pop
in
pop
loop
lahf
pushf
push
jge
cmp
push
push
push
stos
push
loope
mov
jmp
or
mov
push
dec
add
adc
repnz
outsb
sbb
pop
pop
jne
cmp
daa
sbb
cmp
pop
les
jo
mov
jne
and
cs
fldlg2
sarb
les
mov
jge
pop
ja
dec
je
dec
add
jno
add
mov
xor
stos
adc
pop
dec
sbb
adc
shll
sub
add
les
mov
je
movl
test
repz
jbe
movb
or
cmpl
sbb
pop
inc
js,pt
xor
sbb
dec
add
sbb
js
mov
sub
mov
add
jmp
xchg
std
adc
aam
stmxcsr
sbbb
ret
or
jne
sub
sbb
add
and
clc
jg
pushl
xchg
out
dec
test
movd
movaps
and
jae
xor
jle
adc
outsb
xor
cli
rcl
lret
mov
xchg
ljmp
and
lret
sub
xor
jg
fcmovu
xchg
ss
lock
adc
jnp
mov
fisubrs
mov
aam
ret
or
add
adc
pop
lock
or
add
fadd
roll
add
imul
addps
int
add
push
sub
ret
adc
dec
sbb
xchg
pop
fcomip
xor
test
and
dec
push
jne
clc
ja
adc
and
loop
push
push
sub
adc
xor
inc
mov
push
mov
xchg
inc
roll
movsb
adc
aam
pop
xor
mov
dec
push
push
ret
jge
mov
push
loop
dec
add
in
pop
divb
mov
or
mov
adc
ja
xchg
dec
xchg
mov
mov
mov
cltd
and
cvtps2pd
bnd
sub
push
xor
js
ret
pusha
rcr
mov
dec
mov
je
clc
sub
divl
mov
mov
cmp
sbb
adc
xchg
lods
push
jg
test
and
out
rorb
inc
mov
inc
inc
fdivrs
mov
call
jp
mov
js
add
cmp
jne
add
xchg
sub
les
shll
mov
testl
ja
sub
les
add
cmp
rclb
xchg
cmp
sti
mov
push
sti
rorl
sub
or
jne
popf
ficoml
sbb
mov
enter
cli
add
stc
xlat
mov
push
push
cmp
pop
das
shl
hlt
fcomi
arpl
fcoms
in
cmpsl
loopne
imulb
push
jb
ret
popa
mov
fdivs
pop
add
push
test
cli
push
mov
ja
lods
sbb
mov
push
adc
lcall
push
inc
cmp
dec
xor
movsb
mov
orl
aam
pop
data16
adc
cmp
fadds
and
sbb
das
clc
test
push
dec
psubusb
pop
mov
inc
cmp
cmp
movsb
pop
cli
aad
addb
sbb
jae
dec
adc
push
add
out
cmp
lret
dec
jnp
arpl
es
or
push
or
and
cli
push
sbb
pusha
inc
mov
imul
sbbl
cld
or
imul
icebp
scas
or
cmp
loopne
test
cld
adc
sub
ror
mov
sbb
adc
out
shl
shlb
dec
leave
sbb
cmp
out
or
inc
pop
cmp
mov
mov
mov
push
rol
push
fmull
inc
cmp
aam
lret
jne
sbb
pop
jmp
imul
or
cld
push
or
mov
add
jle
and
jbe
add
xor
mov
outsb
call
rclb
and
stos
and
mov
loopne
gs
out
testb
or
orl
and
cmp
pop
mov
sbb
daa
xchg
ds
loope
cmp
pop
das
xchg
cli
xor
cmpsb
or
rclb
inc
and
rorb
xor
pop
in
xchg
fiaddl
pushl
test
jge
stos
mov
pop
inc
sbb
mov
xchg
stos
dec
or
adc
lock
jmp
fmuls
xchg
adcb
adcl
les
and
data16
xor
idivb
lea
jmp
push
mov
cmp
push
or
xorb
cmpb
adc
dec
or
scas
mov
push
dec
mov
out
lods
inc
enter
add
push
inc
push
sub
ret
add
add
cmpsb
lock
xor
cwtl
sub
rclb
lock
jle
and
shll
dec
decb
test
jl
jg
outsl
inc
xchg
jbe
fs
pusha
pop
jle
sarb
xor
push
push
xor
int3
inc
movsb
inc
shlb
xor
pop
div
js
inc
mov
dec
enter
scas
dec
adc
cwtl
pop
dec
and
or
xchg
push
je
in
incl
adc
fidivs
sub
sub
add
icebp
sbb
xchg
push
daa
xorb
frstor
cmp
ja
ficomps
sbb
mov
shll
call
subl
gs
je
fwait
jle
push
and
jns
aad
push
loop,pn
iret
popf
add
pop
incl
lcall
lock
imul
fcmove
push
enter
ja
mov
ljmp
inc
rorl
in
mov
cmp
sbb
push
mov
jl
or
and
sub
shrb
fmull
fnstsw
fwait
inc
push
mov
or
add
inc
jle
jl
dec
sub
scas
fmull
mov
shl
or
sbb
das
xchg
shrb
cmp
adc
mov
inc
mov
mov
pop
cmpsb
movsl
mov
lds
sub
dec
mov
loopne
out
add
sub
divl
xor
xchg
ss
jp
jnp
pop
jnp
test
je
scas
or
push
cmpsb
faddl
lock
adc
lahf
push
andb
xchg
pop
push
ss
cwtl
push
add
sub
lds
lds
cmp
jmp
lea
inc
mov
sub
sbb
pop
addl
fistl
jbe
or
cs
stos
or
mov
adc
sub
test
pop
pop
sub
loopne
lods
xchg
lock
insb
mov
mov
mulb
xor
mov
mov
sub
or
sbbb
xchg
sbb
dec
jmp
addb
or
scas
mov
ds
push
aas
push
or
jb
pop
push
jmp
cmpsl
add
or
sub
push
outsl
scas
fnstsw
sbb
adc
jno
lock
in
cmp
xchg
push
dec
push
lcall
mov
ret
mov
or
in
adc
out
jbe
pop
push
addl
and
dec
xorb
pop
ret
pop
leave
add
shld
ret
int
xor
movsb
inc
or
jno
pop
in
add
or
cmp
faddp
mov
jl
push
inc
and
xor
inc
loope
xor
cmpl
call
or
jo
call
leave
push
ljmp
mov
outsb
test
lock
xchg
js
call
and
add
out
pop
pop
push
pop
ljmp
or
dec
push
and
cmpsl
imul
sbb
xchg
movb
mov
push
cltd
mov
mov
push
pop
mov
mov
or
imul
or
push
inc
in
test
jns
jo
dec
enter
adc
mov
adc
sbb
inc
and
add
call
mov
popw
fcoml
stos
cmp
dec
or
jo
shlb
stos
mov
mov
imul
push
and
xchg
push
and
pop
pusha
add
adc
in
divl
fcoms
insl
rolb
mov
xor
add
int
cwtl
dec
adc
cmp
adc
in
jo
xor
xor
xor
sub
aas
add
bound
ret
fisttpl
pop
rcrl
adc
imul
and
insb
pop
add
add
iret
xor
daa
add
adc
arpl
dec
add
ficompl
pop
cmp
jle
pop
push
and
add
flds
add
inc
add
sbb
inc
xchg
pop
push
pop
xchg
cmpsb
repnz
or
or
jb
cmp
dec
or
pop
enter
or
xor
pop
or
mov
add
or
jns
pop
enter
or
in
cwtl
push
push
inc
push
inc
push
ja
push
pmaxub
cmp
adc
pusha
adc
xor
fwait
sub
adc
push
inc
push
or
adc
in
cmp
add
adc
pop
lcall
lcall
adc
xor
push
push
push
sbb
iret
enter
xor
movsl
mov
sbb
enter
sbb
call
add
sbb
in
jb
sbb
sbb
dec
sbb
je
pop
sbb
cmpb
add
cmp
xor
push
inc
incl
pop
jne
add
add
sub
mov
cli
lods
sti
fcmovb
add
xor
jmp
fimull
mov
mov
stos
mov
hlt
popa
mov
cmp
je
lcall
push
in
repnz
lea
add
aad
cmp
mov
out
fwait
out
ret
out
enter
enter
je
ja
inc
fsubrp
nop
adc
jb
mov
ljmp
jmp
jmp
push
push
and
in
in
out
repnz
inc
in
repnz
sahf
out
out
enter
jge
sbb
push
imul
lock
cmp
icebp
icebp
inc
sahf
xchg
add
repnz
mov
repz
pushf
lcall
or
in
sbb
pusha
fwait
mov
cmp
pop
jg
notb
repnz
idivl
fsubs
dec
in
std
clc
clc
clc
cltd
add
inc
push
adc
inc
stc
sbb
iret
in
cld
cli
cli
iret
jns
sbb
sti
sbb
stos
cld
xchg
aaa
jb
cld
cld
je
cld
push
vmwrite
mov
xor
in
sahf
sub
adc
pop
inc
or
ret
inc
mov
dec
inc
add
mov
mov
lahf
fsub
rcll
mov
cmpsb
sbb
inc
lcall
mov
std
sti
in
in
mov
jb
icebp
inc
mov
stc
daa
xchg
sti
pusha
adcl
sbb
out
cmp
sbb
outsb
call
sub
xchg
sub
sbb
pop
jmp
jmp
adc
in
in
add
mov
mov
cmpsb
jb
sbb
pop
and
insb
out
cltd
push
lock
cli
push
cli
lcall
repz
push
mov
repz
sar
in
mov
adc
xchg
stc
fstpl
sarb
fwait
jns
xor
adc
bound
and
clc
cmp
lret
sti
sti
cltd
inc
fmulp
add
fistl
pusha
mov
mov
adc
stc
cli
dec
dec
and
sub
xchg
push
cld
sub
pusha
loop
loop
fucom
adc
in
mul
pop
shl
mov
mov
mov
sbb
out
adc
enter
pop
pusha
leave
mov
inc
mull
notl
sti
imul
ljmp
negb
pop
leave
and
lret
adc
sbb
inc
pop
pop
jno
negb
mov
notb
xacquire
mov
dec
push
jno
pop
xchg
cmc
xchg
pop
dec
cmc
out
imul
fwait
sbb
pop
add
add
cltd
inc
clc
clc
jecxz
lret
scas
stc
popa
cmp
pop
lcall
mov
hlt
inc
add
pop
push
hlt
sbb
cmp
push
data16
hlt
test
push
jo
sti
addb
pop
lahf
dec
shl
jmp
adc
loope
pop
es
loope
push
loop
dec
push
jno
scas
repz
sub
repz
jno
imul
cmp
pop
andl
push
adc
push
sbb
rclb
cmc
call
repnz
repnz
sbb
pop
in
in
cmc
call
repnz
addl
sbb
cmp
icebp
js
divb
dec
push
and
leave
mov
test
xchg
cmpsb
jb
cmp
mov
adc
cmc
add
cmp
leave
jecxz
ffree
lock
pop
adc
loop
sar
cmc
jne
mov
lock
pop
xchg
xchg
sbb
in
and
test
push
and
ss
jne
pop
add
ret
sbb
pop
in
cmovno
cmpb
add
add
nop
add
test
jnp
cltd
or
adc
add
pop
shll
cmp
out
enter
add
sahf
and
jmp
jae
mov
mov
decl
jp
push
arpl
inc
add
push
popa
daa
int
fldt
out
push
and
es
out
lcall
sbb
cmpsl
and
data16
sbb
sarl
xchg
and
sub
cli
pop
push
into
repz
ja
icebp
mov
test
xor
mov
add
xor
sti
orb
out
add
in
xchg
or
jle
rolb
fiaddl
add
add
sbb
jb
test
mov
mov
je
int
jb
stos
jo
cmp
adc
std
lcall
push
or
les
mov
rorb
jecxz
dec
jmp
cmp
mov
mov
movsb
cs
mov
push
and
jmp
mov
mov
adc
mov
pop
pop
lock
adc
shll
out
lea
adc
lea
cmpsl
mov
push
fdivs
fnstsw
cmp
push
fcmovnu
inc
add
mov
testb
dec
adc
enter
inc
inc
roll
adc
pop
int
add
cld
inc
inc
stos
add
fisubs
ret
mov
cmp
push
mov
pop
pop
jb
cmpl
pop
faddl
scas
out
or
pop
xor
fldcw
push
adc
je
sub
mov
add
lock
jl
mov
push
rorl
lret
push
je
rep
mov
icebp
xchg
dec
ljmp
mov
fsubs
lea
sub
lods
adc
jge
mov
push
add
xchg
cli
imul
pop
xchg
adc
jne
pop
ds
test
bound
inc
pop
mov
or
stc
mov
pop
add
mov
pop
inc
inc
mov
adc
cmp
aaa
jg
out
jb
pop
ja
add
lock
sub
inc
inc
inc
inc
add
cmp
or
dec
inc
enter
jbe
ja
in
xchg
mov
push
inc
and
mov
mov
iret
jno
nop
hlt
push
mov
and
sbb
jbe
or
sbb
xor
cmpsb
or
rol
inc
or
repnz
je
pop
or
sti
push
roll
sub
inc
inc
aam
lret
cmp
enter
add
or
cmp
pop
stos
jae
fwait
test
or
mov
enter
sub
jmp
adc
sbb
and
fldt
inc
pop
or
or
jl
or
mov
lods
push
mov
push
lea
adc
lahf
test
pop
jb
test
into
fwait
inc
mov
ret
xor
ja
mov
inc
jmp
cmp
jne
sbb
fnstsw
jne
sub
mov
xchg
adc
dec
xchg
cwtl
aas
mov
adc
cmp
add
ds
sub
in
test
dec
ss
jmp
mov
xchg
push
stc
cs
or
and
adc
out
out
outsb
insb
adc
pop
jne
dec
add
add
lds
push
or
test
add
add
div
push
fdivl
xor
sbb
vmovdqa
je
mov
sub
cmp
cs
xlat
loopne
enter
dec
adc
sbb
mov
es
jb
movsb
push
and
mov
and
pop
inc
aaa
test
and
cmpsb
pop
or
pop
pusha
adc
pop
neg
mov
cmc
mov
sbb
add
faddl
xchg
ja
lret
mov
sbb
jbe
inc
mulb
cmc
stc
clc
mov
and
sub
pop
sbb
pop
les
cmpsb
cmp
in
rolb
sbb
mov
inc
dec
add
push
std
call
add
xor
add
mov
dec
popa
bound
push
popa
dec
lock
cli
cld
fisttpl
pop
cmp
and
push
cmp
jne
jnp
sub
or
test
fwait
out
add
out
std
push
insb
push
cmp
jne
mov
push
cmp
jne
out
outsb
sahf
es
jne
call
test
insl
ljmp
sbb
jmp
adc
out
jns
jmp
std
std
jmp
cld
cmp
sub
test
mov
inc
frstor
adc
push
sqrtps
and
mov
or
and
lock
iret
mov
insl
adc
repz
mov
cmpsb
cmp
pop
leave
push
mov
adc
or
mov
aad
test
inc
enter
inc
sub
and
add
push
jle
adc
cmp
xorb
or
sahf
fnstsw
lret
xchg
and
adc
imul
mov
and
cld
push
test
or
sbb
fimull
pusha
or
inc
inc
add
dec
jne
jo
ret
test
shl
xor
sub
sbb
adc
pop
mov
je
push
jmp
push
cmp
adc
jne
inc
shr
or
mov
push
jmp
sbb
or
dec
outsb
out
jns
mov
xchg
add
pop
dec
mov
pop
sahf
out
mov
and
lcall
movb
sbb
nop
cmp
push
roll
adc
and
les
add
ss
cmp
dec
cmp
imul
cli
push
dec
std
testb
push
sub
pop
hlt
jae
ret
pop
shlb
pop
lret
clc
or
mov
call
mov
ss
sub
insl
mov
imul
stos
add
testb
inc
rcll
fstpl
les
mov
sub
mov
jp
rcrl
mov
test
push
mov
xor
je
mov
inc
adc
add
push
mov
add
dec
sbb
add
cmpsl
icebp
cld
or
or
xor
jecxz
loop
lret
xchg
mov
add
cmp
jbe
cmp
andb
stc
mov
push
pop
and
int3
mov
cli
cmovs
scas
push
mov
inc
jg
mov
adc
bound
rep
call
adc
inc
adc
outsb
or
mov
popf
bound
xor
enter
dec
fxch
sub
lea
test
cmp
lods
sahf
testl
mov
or
inc
add
add
notb
lea
dec
dec
sub
int3
add
movl
addr16
add
add
or
out
lock
call
push
cmp
enter
in
inc
in
jns
out
call
out
sahf
out
hlt
clc
clc
cld
testb
inc
push
lea
lock
fnstcw
add
sub
sub
cmp
adc
mov
subl
pop
sti
and
jbe
or
sbb
lea
and
fmul
jl
cld
or
scas
cld
out
mov
neg
adc
pusha
xchg
mov
xor
stc
sub
pop
nop
les
call
add
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
or
push
je
iret
repz
test
cmp
aaa
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
icebp
jns
xchg
or
push
fsubr
cmp
imul
add
mov
pop
ja
pushf
add
sub
repnz
push
xor
mov
mov
incl
inc
decl
cs
in
lea
movmskps
nop
outsb
inc
sub
stos
xor
jbe
push
cltd
pop
idiv
add
mov
pusha
or
adc
add
fidivl
mov
mov
das
xchg
xor
mov
jmp
cmp
jae
dec
xor
pop
jae
pop
jbe
mov
dec
les
pusha
add
sub
push
call
hlt
lods
or
gs
adc
or
mov
mov
aaa
dec
sbb
gs
orb
adc
dec
or
sbb
dec
dec
jb
les
and
xlat
je
imul
insb
adc
negl
das
jecxz
jbe
xor
pop
decb
sti
inc
shrb
rclb
inc
xor
xchg
out
je
cmp
das
arpl
and
mov
jo
mov
fistpll
enter
push
jl
xchg
add
push
pop
addb
add
adc
sub
push
push
test
cmp
imul
mov
mov
stos
push
sbb
mov
mov
xor
pop
cmp
enter
ja
insl
lock
or
aas
jge
js
in
pop
push
push
cltd
pop
idiv
cmp
inc
call
xor
xchg
inc
out
cmp
add
mov
push
jmp
or
inc
inc
in
push
jle
push
pop
aas
jns
xchg
sub
fs
push
sar
push
out
imul
add
jmp
jl
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
sbb
xchg
jae
je
add
inc
rcr
stos
adc
dec
adc
cmp
lock
mov
incl
pop
sti
in
dec
pop
jl
sub
cmp
xchg
sbb
inc
or
or
and
test
mov
mov
fiaddl
push
mov
or
xor
ja
les
jmp
jge
pop
je
sbb
popl
xor
jl
fs
mov
sti
pushl
jg
adc
outsl
sbb
int
int3
dec
mov
in
pop
je
dec
inc
pop
jp
inc
push
jne
mov
jo
mov
mov
mov
dec
and
adc
push
js
pop
cmp
pop
popl
fstl
or
and
fcmovnb
dec
pop
xchg
or
inc
mov
push
aaa
orl
adc
jns
cmp
push
mov
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
jb
lds
sbb
pop
inc
pop
or
mov
sub
push
je
mov
flds
cmpb
jp
pop
adc
cmpl
sbb
and
jge
sub
in
xchg
push
push
lock
call
push
data16
iret
mov
inc
adc
or
out
ret
or
add
aaa
hlt
fucomi
jecxz
sbb
sbb
pushl
pop
aas
dec
ljmp
xchg
rolb
jg
sub
pop
adc
lock
or
or
js
loop
jo
ljmp
push
mov
aam
add
sti
push
decl
inc
jg
jbe
mov
jl
je
gs
push
adc
adc
popl
movsb
mov
mov
cmp
icebp
loopne
add
mov
inc
inc
cmp
je
xchg
mov
sahf
fs
orb
mov
sbb
adc
add
aam
pop
ret
fidivrl
dec
je
and
mov
sub
ret
or
sbb
adc
pushf
adc
mov
ljmp
decl
xor
push
push
inc
sbb
icebp
or
xor
jne
sbb
lods
mov
xor
inc
mov
insl
sbb
add
dec
push
mov
stos
push
mov
xchg
sub
adcb
push
or
xchg
cli
mov
mov
addr16
test
adc
test
cmp
cmp
adc
adc
sarl
mov
int3
push
pop
inc
or
add
push
and
jl
pop
inc
int
imul
imulb
add
je
sbb
dec
frstor
sbb
imul
jb
jns
insb
cli
imul
sbb
adc
loopne
push
fs
xchg
in
rcr
iret
add
pop
addr16
rcl
lea
mov
and
jmp
cmpl
or
xor
push
nop
psubusb
cs
dec
jmp
dec
ds
push
sub
jl
inc
sub
jne
and
xor
jecxz
sbb
clc
or
iret
xor
in
es
test
pop
test
lods
sub
ret
int
out
sbb
inc
dec
adc
xchg
popa
xchg
add
jp
lahf
jge
test
loopne
outsb
jns
and
push
add
mov
sarb
test
orb
sbb
mov
lods
push
scas
mov
or
nop
mov
bound
sahf
out
sbb
inc
push
jmp
cmp
pop
mov
shlb
or
inc
inc
out
test
dec
aam
pusha
mov
xorl
sbb
sub
cltd
or
xchg
pop
pop
stos
call
xor
pop
xor
or
sarl
jmp
ja
lods
or
pop
inc
jmp
aas
pop
add
xor
shrb
add
in
pop
jb
in
mov
cs
jne
add
nop
add
add
repnz
sub
jne
add
pop
fidivrl
pop
fldz
mov
add
push
inc
repnz
pop
and
jp
dec
push
sbb
adc
fimull
ja
int3
xor
inc
mov
push
in
mov
or
or
or
dec
cmp
and
nop
into
jle
mov
shufps
lea
neg
mov
jg
xor
enter
add
mov
push
adc
adc
inc
aas
lods
jbe
jo
push
cld
jb
xlat
aad
pop
fidivl
lahf
mov
dec
js
mov
data16
dec
mov
inc
inc
bnd
clc
push
and
or
adc
inc
shlb
xor
dec
sbb
jmp
arpl
sbb
aad
cmp
int
fists
push
subl
dec
subl
and
xchg
fs
scas
data16
cli
movsl
cs
je
adc
mov
fisttps
or
adc
or
jg
scas
push
and
add
or
std
cmp
adc
fwait
mov
sub
clc
xor
dec
test
and
cmp
push
xor
in
jae
mov
fdiv
and
adc
inc
or
mov
test
cmp
sbb
loopne
xchg
push
cmpsb
add
xor
lock
subl
mov
pop
adc
push
jecxz
sub
lds
sub
bound
gs
dec
lret
adc
test
imul
shl
shll
ret
xchg
xor
pop
xchg
mov
inc
inc
data16
nop
lcall
dec
ljmp
int
add
jle
inc
sbb
inc
nop
sub
in
push
adc
push
inc
fimull
pop
dec
ss
add
sbb
push
or
jecxz
cmp
lret
aam
cwtl
add
xlat
out
mov
es
sbb
es
mov
xchg
xor
or
or
add
test
jmp
outsb
push
outsb
orl
adc
das
or
or
jmp
pop
movsb
mov
int3
rolb
icebp
jae
mov
add
adc
in
xor
pop
call
dec
pusha
pop
sub
adc
jge
sbb
cmp
or
loope
cmpsb
mov
xor
mov
and
loopne
adc
push
add
call
push
or
add
leave
sub
cmp
add
add
notl
add
cmp
adcb
adc
movsb
and
and
add
mov
cmp
rcl
sub
push
cmc
adc
lahf
sbb
into
mov
in
cmp
mov
rolb
cli
mov
mov
insb
push
lea
loopne
xor
or
cwtl
lds
pop
adc
ss
push
mov
push
and
loope
ret
fwait
xor
dec
sbb
push
subb
add
and
jae
inc
xchg
imul
ficoml
hlt
gs
outsl
xchg
sub
incb
dec
add
iret
xor
rcrl
mov
test
jbe
testb
push
roll
push
call
pop
notb
add
repnz
sbbb
sub
fildl
dec
xchg
rclb
adcb
sbb
lds
pop
dec
jmp
jl
jg
je
lock
fmulp
push
and
cltd
and
and
cmpsb
jno
xorl
xchg
ss
leave
sahf
cmp
fdiv
ret
fsub
inc
inc
cmp
into
lcall
sbb
shr
loop
and
adc
movsb
push
sbb
pop
or
mov
rorl
inc
and
daa
test
xchg
cmp
mov
jecxz
sub
push
or
push
lods
lret
pop
mov
adc
in
addr16
cmp
cmp
sub
sub
mov
sbb
and
das
mov
push
or
add
das
and
popl
adc
lods
cmp
add
inc
mov
mov
movl
cmp
xor
sarb
and
mov
movsb
adc
inc
push
mov
or
dec
push
es
push
or
subb
inc
push
mov
pop
rol
dec
xor
jns
loop
mov
or
add
xchg
ja
or
push
or
xchg
hlt
mov
and
pop
repz
sbb
andb
fimuls
add
adc
mov
or
loope
fdivrs
stos
add
xor
into
mov
push
add
testl
or
es
add
aam
call
shll
sti
adc
jnp
mov
out
sti
hlt
mov
and
lea
fiaddl
sub
sub
lods
adc
and
aaa
or
addl
pusha
rorb
ficoml
inc
pushf
dec
ljmp
pop
repz
mov
std
push
cmp
jb
add
ljmp
xor
push
orb
popf
jecxz
adc
and
je
and
mov
mov
mov
fwait
jp
and
lahf
ja
mov
pop
mov
cmp
push
add
pop
and
loop
lret
orb
jmp
cmp
push
and
and
and
or
cs
mov
and
aas
leave
add
clc
dec
int
clc
mov
xor
idivb
add
movsb
push
cmp
test
and
insl
push
sbb
jbe
aaa
inc
add
xor
mov
jecxz
and
jno
lods
daa
sub
mov
insb
push
cld
add
outsb
loope
inc
mov
movsl
inc
push
or
dec
mov
fsts
sub
mov
cmpsb
push
sub
dec
out
cmp
movsb
inc
lahf
add
jne
fsubr
fistpl
cld
stos
inc
add
jmp
bound
push
sub
sarb
loope
add
dec
adc
mov
xor
sub
sub
mov
mov
sbb
nop
xchg
repz
cmp
or
movsl
fnsave
push
jmp
aad
movl
push
and
xor
subl
les
out
cmp
setne
rolb
xor
lea
mov
mov
pop
fldl
leave
inc
inc
lds
mov
imul
adc
mov
jnp
add
into
sub
setne
jmp
loopne
adc
or
mov
inc
cmp
ljmp
inc
adc
outsb
and
push
jge
add
jb
mov
jg
sub
push
out
dec
or
or
adc
pop
sbb
xor
mov
inc
inc
inc
dec
jne
mov
xchg
loope
jbe
add
idivb
mov
xor
jo
mov
loopne
mov
inc
dec
jne
sub
clc
cmp
or
hlt
lret
add
jnp
and
test
xor
adc
mov
dec
ss
sbb
loopne
adc
add
jbe
mov
pop
push
fwait
mov
daa
fs
or
inc
pop
mov
jmp
inc
sbb
inc
sbb
pusha
lock
push
jns
inc
pop
clc
xchg
xchg
faddl
mov
pop
cmp
cltd
inc
cmpsb
cmp
inc
adc
push
in
add
dec
cli
add
jns
xor
pusha
xor
and
fs
out
mov
pop
faddl
jp
inc
adc
clc
jle
sbb
lret
pop
sub
jmp
xor
add
mov
mov
add
sbb
rolb
out
arpl
xchg
aad
pop
add
sbb
mov
stos
dec
inc
mov
xor
mov
and
cs
clc
pop
cmp
cld
sub
add
xchg
mov
pop
in
ret
mov
or
push
movsb
jne
mov
int3
or
adc
mov
ds
gs
int3
adc
sbb
das
adc
data16
mov
sbb
sub
ret
ss
test
rorb
cwtl
rorb
push
pop
sbb
jo
sub
sub
inc
push
pop
inc
out
jle
in
stc
mov
or
push
cmpl
add
push
ret
pop
cmp
sahf
inc
filds
mov
sub
jne
add
xor
in
fstl
xchg
notb
mov
mov
mov
mov
lea
jnp
mov
aaa
xorl
push
mov
pop
ret
add
adc
movsl
sub
or
adc
sub
sub
movsb
dec
xor
inc
adc
aam
sub
dec
sub
je
push
rclb
mov
rcrb
pop
loope
ds
add
jbe
cmp
stos
gs
lock
xor
sbb
jo
loope
nop
add
and
jb
shlb
lods
inc
rorb
sbb
jmp
push
jb
adc
mov
pop
mov
mov
and
add
sub
rol
andb
daa
mov
cs
jns
adc
sbb
hlt
adc
ss
shrb
add
ljmp
cld
add
outsl
dec
lret
call
ret
sbb
cwtl
sub
lea
and
adc
push
push
push
mov
jo
xor
mov
or
out
inc
push
enter
jb
pop
jge
sti
xchg
movsl
lds
pop
call
adc
cwtl
and
ret
mov
jecxz
sti
lret
inc
push
cld
pop
arpl
fistl
test
jbe
mov
push
jne
movsb
xchg
dec
dec
loope
dec
inc
imul
jae
mov
in
push
bound
dec
flds
shll
push
outsl
add
inc
cmp
pop
aas
inc
sub
inc
lock
push
adc
cmp
dec
sbb
xchg
dec
mov
sbb
aas
dec
insl
dec
mov
lret
add
jmp
xor
es
xor
rol
int
dec
lcall
and
andb
pop
imul
clc
cmp
and
sbb
in
push
xor
inc
inc
push
in
inc
dec
test
data16
pop
cmp
add
unpckhps
and
push
dec
testl
mov
lahf
insb
and
pop
cmp
je
jle
cmpsl
mov
mov
ss
sti
mov
or
sub
ret
inc
sbb
pop
scas
pop
add
repnz
mov
bt
gs
adc
cmpl
jbe
mov
pop
lcall
fisubs
into
movsb
shll
test
ds
negl
dec
ja
or
dec
xchg
mov
and
add
pop
xor
push
inc
mov
pop
pushf
cwtl
mov
and
fxch
rcrl
jb
mov
push
xchg
pop
inc
ret
jne
sub
add
test
rorb
cs
pop
das
xor
outsl
sarb
add
mov
sub
dec
jp
and
xchg
inc
and
mov
sbb
mov
xor
sub
loopne
sub
sub
aam
shrb
mov
data16
popf
enter
das
test
movsl
shrb
test
movsb
lock
imul
call
cmp
dec
cld
adc
sub
aam
push
popl
xchg
adc
aam
lea
mov
cmpsb
scas
mov
movb
inc
sbb
dec
in
icebp
mov
sti
js
jmp
jge
push
mov
sbb
pop
fists
add
adc
dec
xchg
add
daa
mov
addl
mov
and
mov
jae
test
mov
pop
pop
in
jb
arpl
aam
dec
jl
repnz
pop
call
arpl
arpl
arpl
fisubrs
xchg
mov
repz
js
sub
add
pop
fsts
inc
loop
sbb
faddl
call
cmpl
fldt
xchg
nop
je
cwtl
push
shlb
adc
fstl
and
pusha
gs
iret
repz
or
push
and
xor
inc
or
and
push
gs
loop
fimuls
jo
js
mov
pop
test
pop
xor
icebp
cmp
test
cmp
cs
push
push
call
xchg
call
out
out
and
jne
movl
and
popa
adc
add
es
insb
lret
jne
xor
fisttpl
mov
rorl
jge
inc
mov
pop
inc
test
sbb
jne
mov
pusha
dec
push
dec
call
addb
ficoms
repnz
dec
add
lock
and
xor
idivl
aas
lods
add
and
mov
hlt
fdiv
mov
js
or
xlat
xchg
or
fwait
xor
add
inc
jb
jne
loope
enter
idivl
leave
mov
inc
or
je
xchg
sbb
dec
push
cwtl
ret
cmpsl
mov
jae
push
fimull
imul
sub
adc
imul
sbb
add
add
mov
or
insb
inc
xchg
data16
or
push
mov
push
mov
outsl
rorb
add
stc
mov
mov
and
loope
inc
xor
lock
push
or
enter
jge
mov
imul
rolb
inc
outsl
push
pop
mov
jo
test
mov
or
push
sub
push
mov
and
test
ja
enter
movsl
xor
je
movl
xor
dec
xorl
mov
hlt
jecxz
jmp
loopne
jo
pop
mov
push
inc
and
adc
lock
jnp
test
sub
aad
xchg
sbb
mov
lret
mov
hlt
test
cmp
mov
movsb
loopne
adc
or
ret
dec
mov
add
sbb
inc
push
dec
mov
inc
in
sbb
lea
inc
cmp
stos
ds
shl
mov
pop
push
pop
popa
add
lds
push
pop
cmpsb
imul
shl
push
inc
inc
or
daa
jmp
or
mov
pop
adc
lret
lock
call
in
add
add
loop
sub
rcr
sbb
icebp
inc
mov
dec
clc
or
or
test
jno
andb
js
data16
or
rclb
jecxz
and
push
rclb
ss
xchg
add
sbb
and
mov
dec
loope
xor
push
inc
test
mov
push
pusha
outsb
pop
xchg
inc
fbstp
sahf
inc
ret
rcrl
js
xor
mov
jbe
in
int
inc
xchg
xor
dec
add
js
sub
dec
xchg
cli
jle
push
cmp
aam
cmpsl
cmp
and
and
add
jns
or
push
movsb
or
push
jmp
fwait
inc
loopne
mov
push
add
inc
push
jp
mov
cs
push
and
fidivs
push
and
addb
ljmp
xchg
push
push
or
or
fstl
mov
rolb
pusha
mov
xchg
aam
push
dec
sbb
inc
add
fdivrs
call
jbe
orl
mov
pop
call
mov
xchg
dec
pop
or
addb
sub
sbb
call
jg
aaa
hlt
mov
jne
repnz
jmp
push
fsub
push
inc
inc
jns
sbbl
sub
xor
pop
mov
push
mov
mov
sbb
scas
jno
inc
lea
popf
in
jb
lods
mov
jle
xchg
lret
fadd
fsubs
mov
jne
xor
pop
push
mov
push
inc
pop
mov
cmp
imull
xchg
push
and
repnz
mov
leave
test
in
mov
mov
js
push
fs
clc
pop
leave
ret
orb
pop
stos
push
shlb
lea
push
loope
sub
ja
mov
movsbl
psubsw
divb
aam
test
call
clc
sub
mov
pop
lea
add
xor
dec
test
cli
mov
pop
cs
aam
clc
fcomps
addr16
lret
mov
ss
jne
jmpw
scas
pushf
pop
or
jb
in
push
pop
add
xor
sbb
adc
nop
cli
xchg
sub
inc
cmp
sub
aam
out
mov
xchg
aas
mov
mov
sub
pop
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cmp
push
or
inc
insb
je
adc
into
pusha
lock
test
adc
ds
loopne
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
inc
fs
mov
mov
push
sbb
movsb
dec
jecxz
pop
ret
fs
dec
cmp
mov
cmp
cmp
adc
or
add
mov
ret
add
hlt
sbb
loop
fdivr
fisubrl
lock
sub
push
jae
xor
mov
lods
inc
mov
rcll
pop
das
mov
cmpl
mov
and
fdivrl
sub
dec
xchg
lock
enter
mov
mov
test
xor
mov
mov
ljmp
mov
cmpsl
subl
shlb
push
sbb
bswap
negl
xchg
adc
sbb
je
fs
xor
dec
aam
cmpsl
add
fdivs
ljmp
sti
push
jmp
mov
movb
loop
aas
push
xor
test
ja
setp
hlt
mov
inc
mov
hlt
mov
pop
inc
xor
mov
dec
shlb
jecxz
dec
push
mov
adc
shlb
cs
sbb
pop
xor
das
sub
loop
call
push
add
addr16
mov
push
outsb
je
cmp
xchg
mov
sbb
aaa
std
xchg
xchg
je
aas
add
pusha
add
movsb
xor
xchg
test
jl
mov
or
lods
add
shrb
daa
sub
test
pop
sub
jecxz
pusha
aaa
pop
adc
mov
into
adc
or
addr16
out
jge
mov
jmp
cmp
jle
insl
cmpl
incl
add
xlat
mov
xchg
sub
xor
int
or
adc
mov
out
call
mov
adc
dec
push
cmc
mov
stos
subb
push
push
clc
or
popf
test
mov
and
lcall
pop
add
cwtl
inc
scas
popf
or
sbb
dec
add
ds
inc
dec
lds
bound
hlt
cmp
mov
shlb
adc
mov
addr16
decb
mov
dec
inc
daa
add
adc
sbb
pop
data16
push
sub
test
push
lret
clc
dec
aad
scas
jne
push
sbb
add
int3
adc
mov
or
cltd
jmp
push
xor
fdivs
int3
je
cltd
insb
push
xchg
jp
dec
sub
jl
subb
jae
dec
shll
neg
jecxz
jle
nop
pop
fimull
mov
or
popf
jmp
dec
notl
decb
or
jne
and
jo
fidivrs
das
sbb
inc
adc
lods
sbb
mov
push
add
lcall
push
nop
xchg
clc
sahf
add
dec
icebp
pop
lret
mov
dec
jmp
pop
xchg
sub
inc
cwtl
loop
mov
ljmp
cltd
mov
addb
shlb
xor
ss
cmc
push
jmp
loope
pusha
ret
fld
or
xchg
neg
imul
clc
roll
je
gs
jecxz
fldcw
sub
push
mov
xor
push
sub
push
test
dec
and
mov
adc
adc
cltd
sub
sub
pop
rcl
adc
mov
cmp
dec
into
shll
pusha
mov
jns
pop
xor
push
jbe
jno
or
dec
sbbl
jne
add
add
jno
aaa
cmp
stos
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
or
add
cmpsb
fcmovnbe
push
dec
mov
ret
push
sti
push
and
or
jl
testl
push
xchg
adc
adc
or
movsl
daa
pop
mov
in
mov
mov
add
mov
movsb
cmp
xorb
pop
addl
xchg
cmp
int
mov
outsl
inc
add
insl
push
or
imul
jo
jmp
push
xchg
shrb
inc
cmp
cmp
and
adc
sub
call
cmp
int
idivb
fmull
sbb
imul
push
lea
cld
hlt
cmp
subps
dec
fptan
scas
leave
or
shl
pop
add
test
push
adc
lcall
sahf
aam
daa
cld
and
or
rcll
fstpt
or
or
jl
push
pop
int3
fldl
add
and
sarl
out
daa
add
lds
push
xchg
and
pop
dec
test
dec
inc
and
in
nop
mov
cwtl
ds
cmp
ss
test
sbb
inc
add
mov
jne
repz
sbb
jmp
push
fstl
xchg
imul
push
adc
shlb
imul
or
cs
rorl
dec
jns
lock
push
or
inc
sbb
sub
add
push
mov
xor
jnp
adc
or
or
popa
or
imul
add
jmp
add
or
mov
xor
pushf
jmp
sub
jns
jle
inc
inc
xchg
mov
xchg
out
add
shr
ja
mov
imul
inc
mov
shlb
push
dec
or
clc
dec
add
sbb
xor
sbb
mov
pop
inc
aaa
xchg
mov
adc
lcall
sar
dec
cmp
jbe
push
pop
mov
mov
loopne
jne
rolb
mov
shr
lea
ljmp
pop
mov
push
and
aaa
push
push
mov
xor
adc
push
pop
push
mov
push
dec
pop
add
gs
add
pop
and
add
icebp
or
data16
mov
fimull
pop
clc
and
mov
das
sub
and
sti
add
lds
cs
pop
cmp
fiadds
mov
imul
sub
xor
jno
jmp
mov
mov
shr
not
and
xor
je
sub
repnz
loopne
mov
xor
cltd
jle
pop
dec
add
clc
fs
xchg
mov
add
aam
xchg
or
mov
mov
mov
sub
pusha
mov
sub
sbb
inc
mov
mov
inc
jle
xchg
lods
push
clc
lock
inc
dec
or
jmp
cmp
cmp
lods
dec
push
mov
ljmp
inc
fstl
xchg
inc
xor
sahf
jmp
push
add
repz
inc
enter
pusha
push
mov
js
inc
mov
fsubrs
loope
add
scas
jp
push
call
aas
rol
sti
mulb
or
sbb
insb
cmp
sub
dec
inc
adc
dec
adc
add
and
pushl
push
push
loopne
rcrb
ja
jp
ror
add
mov
es
sub
dec
inc
cmp
lea
push
dec
jl
cli
add
std
push
cmp
adc
add
jle
mov
mov
inc
out
pop
adc
dec
jo
push
imul
push
adc
imul
popf
cwtl
outsl
push
addr16
and
sub
add
std
cltd
dec
stc
negb
les
cwtl
and
addl
ret
scas
and
ja
lods
xor
adc
adc
iret
xor
jp
mov
xorb
push
dec
incl
mov
and
ljmp
je
sbb
inc
fs
inc
ljmp
rorb
incb
pop
rolb
mov
jne
or
add
dec
aas
lret
sbb
popa
outsl
and
lea
test
cmp
sub
shr
pop
decb
dec
clc
incl
inc
fdiv
lea
push
int3
inc
cld
mov
sbb
call
dec
jne
ret
mov
dec
arpl
adc
rorb
add
sub
sub
fs
inc
mov
sahf
pop
mov
mov
icebp
pop
inc
mov
test
loopne
inc
jne
or
adc
jle
lds
not
and
les
pop
scas
inc
dec
or
adc
mov
xlat
sub
pop
push
pusha
and
shr
jb
cld
into
rolb
movsb
mov
adc
xchg
and
lock
shlb
push
push
rcl
mov
int3
push
pop
fcomps
xchg
cmpsb
add
lret
popf
iret
clc
rolb
or
add
cmp
nop
mov
or
mov
sub
into
add
movsb
and
mov
das
jae
adc
xor
lcall
out
add
pop
hlt
lea
push
xor
xor
or
mov
xor
pop
dec
pop
pop
push
pop
lcall
sbb
add
adcb
pop
dec
xlat
jmp
aaa
js
test
or
sbb
adc
int3
aad
inc
insb
xor
mov
mov
mov
and
clc
jl
push
or
mov
cld
loop
inc
dec
insb
pop
xor
push
sar
dec
jp
loope
pusha
and
mov
stc
cmp
jo
inc
cwtl
xor
cmp
pusha
sbb
iret
dec
je
fisttps
add
push
fnstenv
ja
ja
dec
xor
pop
ficoms
add
mov
loope
sbb
arpl
or
mov
and
aaa
inc
jbe
mov
inc
lods
push
cmp
lods
push
mov
mov
dec
in
rdmsr
cmp
mov
inc
and
jmp
cld
or
jp
insb
and
js
rol
add
lock
inc
loop
cmp
push
push
push
jge
push
dec
jo
js
out
adc
orb
jle
rolb
out
fldcw
push
push
cmpl
cmp
and
decb
xlat
nop
ret
adc
adc
cmp
call
jnp
jg
sbb
jne
out
int
cmp
or
jae
je
mov
xor
aaa
arpl
mov
mov
and
ret
jno
jmp
outsb
and
xor
std
fimull
jle
pushl
sbb
in
cli
jle
ret
fiaddl
jl
loop
sbb
sub
mov
mov
push
inc
and
xchg
xor
ljmp
repz
insl
out
mov
mov
and
jne
mov
push
pop
outsb
js
or
leave
inc
push
pushf
mov
sub
push
and
icebp
sbb
sub
and
dec
cmp
dec
pop
xchg
sbb
and
push
inc
cmp
add
out
and
mov
decb
jne
jmp
repnz
jmp
push
out
fnstcw
mov
out
xor
jne
dec
push
and
push
clc
into
xor
dec
mov
jno
out
sub
inc
mov
or
cltd
mov
das
pop
xor
sub
jge
movsl
or
subb
cmp
or
mov
or
or
mov
in
mov
or
ljmp
or
adc
add
jbe
ljmp
push
lea
loope
or
sbb
push
ds
sbb
lea
leave
sbb
imul
shl
jge
sbb
loopne
out
xchg
pop
jb
or
xorl
cmp
pop
and
mov
out
xor
push
jl
cmp
test
push
cmp
or
nop
ret
inc
pop
nop
nop
mov
add
je
jp
and
test
mov
cmpsl
lret
sti
add
movswl
test
cs
flds
inc
cmp
cmp
sub
add
push
mov
add
add
cmp
test
repnz
gs
or
push
push
enter
test
mov
push
fisubl
add
mov
lret
call
lret
adc
ficoms
sti
ficompl
jbe
fwait
adc
adc
dec
in
mov
push
adc
xor
divl
sbb
lock
pop
jne
push
sbb
std
pop
cmp
insl
and
sbb
jns
dec
sbb
pop
stos
es
mov
enter
inc
push
and
jns
push
jmp
test
in
inc
filds
mov
pop
jl
imul
or
call
hlt
and
insb
dec
popa
dec
loope
push
add
imul
xor
sub
and
rcl
lea
mov
call
rcl
hlt
mov
inc
mov
aad
xor
aas
rcll
adcl
iret
es
add
adc
jge
jmp
xchg
out
xlat
movzwl
sub
in
int3
movsb
inc
push
cs
sub
into
shlb
cli
cmp
cmpsl
xor
mov
fbld
jg
movzbl
imul
gs
dec
fadds
add
test
pop
lcall
xor
pop
xchg
add
xor
and
movsb
mov
sarb
dec
inc
push
cmp
add
xchg
xchg
or
std
lods
or
pop
xor
faddl
arpl
sub
sbb
add
dec
ficomps
or
in
in
or
and
hlt
ficomps
pop
roll
in
out
sbb
pushf
or
fisubrs
adc
in
sbb
sbb
adc
and
pop
nopl
jg
add
and
and
sbb
or
cmp
notb
or
push
movsl
xor
and
loope
adc
and
les
std
xchg
push
mov
sahf
aaa
int
ret
test
shll
enter
jle
leave
jl
xchg
sbb
inc
call
xor
test
sub
aaa
sbb
mov
in
sbb
mov
leave
inc
leave
adc
mov
enter
xor
subl
subl
enter
lret
and
add
sub
and
repz
xchg
inc
push
jns
mov
mov
lahf
add
mov
mov
jg
stc
or
sub
fwait
test
mov
cmp
mov
in
rep
popf
or
push
hlt
xchg
repz
sub
and
and
jge
nop
add
or
mov
ret
push
enter
and
enter
or
xchg
xchg
in
mov
les
add
in
xchg
add
ljmp
lahf
call
cld
insb
js
cmpsl
enter
cmp
rolb
mov
sysret
jb
or
push
push
xor
cli
hlt
mov
mov
cmpsl
flds
push
mov
rcll
cs
loopne
mov
xchg
popf
add
mov
stos
icebp
daa
cmp
push
or
adc
lea
cltd
js
mov
push
imul
mov
push
xor
das
clc
xchg
ret
outsb
or
xchg
outsl
rcrb
je
xchg
pop
rcll
xor
push
xor
cmp
pop
lret
or
add
orb
and
cmp
or
or
fs
lods
inc
mov
das
mov
or
lret
mov
and
dec
test
push
push
sbb
sahf
pop
pop
shr
lds
fs
jns
ret
cld
sbb
cmp
jne
push
cmp
shlb
mov
je
lock
repz
add
sub
add
dec
leave
sub
bound
mov
xchg
sub
rcl
add
xchg
mov
mov
rcrb
mov
push
add
add
jns
mov
dec
add
addb
mov
shlb
dec
js
add
or
scas
popf
dec
mov
push
adc
sti
pop
inc
add
std
jne
orb
add
hlt
or
shr
fnsave
push
ds
adc
mov
inc
mov
dec
cmp
rorb
adc
xor
orl
jnp
add
sbb
or
and
not
and
out
aam
push
cmp
dec
jno
adc
sub
test
inc
sahf
repnz
imul
dec
pushf
mov
inc
adc
or
gs
imul
adc
cmpsb
stos
hlt
mov
inc
lret
je
pop
sbb
mov
jmp
rcll
dec
sub
sbb
dec
mov
sti
xchg
xchg
mov
add
jno
je
push
cmp
sub
dec
aam
fmuls
fdivr
fstp
lds
fldl
or
fucom
xor
mov
or
xchg
repnz
mov
les
add
push
in
xchg
neg
leave
pop
jmp
jo
push
jns
mov
xor
mov
xlat
das
mov
sbb
lcall
xor
sbb
scas
xor
sti
fnstenv
out
neg
insl
ljmp
sbb
xchg
fcomps
addb
in
sbb
sbb
stc
fwait
add
pop
xor
test
push
jns
outsl
xchg
adc
xchg
mov
je
push
loopne
push
sahf
adc
fdiv
inc
sbb
cmp
push
push
shl
push
loop
int3
xor
aaa
jne
arpl
jbe
das
and
inc
lock
jbe
cwtl
inc
mov
hlt
std
push
cltd
movntq
sbb
test
daa
iret
sar
mov
and
lods
xchg
fsubrl
adc
mov
inc
mov
push
or
mov
mov
test
adc
test
in
jle
push
jle
xor
ficoms
inc
or
cmovs
push
push
xchg
push
pusha
jo
jmp
inc
faddl
fbstp
call
or
aas
push
in
aad
sbb
clc
push
fmull
and
jp
cmp
outsb
push
in
push
push
adcl
lea
jle
popa
ret
js
or
sub
mov
iret
pusha
xchg
jns
jne
mov
cmpsb
mov
xor
jmp
add
xchg
mov
pusha
push
aad
mov
xchg
lret
gs
int3
call
rol
and
jb
xorw
das
xchg
dec
idivb
adc
jecxz
cmpsl
pop
mov
mov
mov
sar
lret
sub
add
outsl
scas
testb
jne
dec
sbb
pop
sar
fistpll
dec
lea
testb
fimull
rorb
mov
mov
mov
shll
test
inc
pop
ds
mov
pusha
push
sub
xchg
and
or
mov
mov
pop
cs
xchg
std
lods
pop
cmpsb
jb
mov
mov
nop
leave
rorb
xchg
pop
shl
enter
fs
or
sbb
idivb
gs
pop
or
add
shlb
add
jno
add
ret
mov
cmp
fsub
into
ficompl
stc
or
pop
mov
std
jb
in
adc
xor
mov
xchg
mov
fcmovnbe
push
jb
mov
push
or
xor
cwtd
inc
repnz
fidivrs
dec
cmp
inc
sub
mov
push
sbb
pop
and
ss
sbb
cs
out
jne
inc
jne
push
filds
cmp
inc
xor
hlt
inc
cld
aad
push
imul
rclb
mov
fwait
xor
call
leave
mov
test
mov
mov
mov
arpl
jmp
push
in
adc
sbb
movsb
mov
push
ret
pop
push
call
pop
lret
je
sbbb
enter
orb
roll
inc
cmpsl
pop
adcb
and
cmp
mov
in
mov
mov
inc
pop
xchg
in
inc
add
loop
pop
cwtl
add
xorb
xchg
stc
mov
jcxz
jg
testl
movsb
loopne
sub
subl
imul
daa
mov
sahf
add
imul
xor
mov
mov
loopne
lret
inc
add
mov
enter
imul
push
sub
dec
aaa
dec
nop
jno
or
push
push
mov
xor
lds
gs
add
in
lcall
pop
jb
ret
in
xchg
cmp
cmp
test
mov
lret
insl
pop
xor
cmp
lock
aaa
addr16
xor
iret
das
lock
fdivr
add
lods
aaa
adc
xchg
in
jo
add
mov
shlb
and
rcl
pop
pop
or
shlb
cmp
orl
popf
mov
call
call
push
in
rol
push
mov
es
std
push
mov
push
cmp
rcr
jge
mulb
stos
lcall
mov
loope
jnp
leave
nop
std
lds
jmp
out
or
lea
push
mov
out
imul
push
roll
or
pop
sub
mov
cmp
jl
imul
cmpsl
sbb
sbb
in
jecxz
cld
mov
lahf
mov
leave
std
out
imul
add
movb
dec
scas
shrb
aas
dec
addr16
dec
xor
roll
addr16
xor
mov
inc
fldt
scas
dec
xchg
iret
push
arpl
ret
js
inc
mov
mov
lock
sbb
fwait
ss
and
xor
xchg
dec
pop
mov
ljmp
mov
in
cwtl
cmc
push
popa
fwait
push
fdivrp
popa
fcompl
dec
data16
dec
ret
hlt
sub
pop
enter
jmp
popa
enter
inc
mov
push
cmc
lods
push
ss
stos
sar
lock
pop
dec
jno
xor
push
sub
jmp
mov
sub
or
frstor
jge
int3
cmp
jmp
sub
mov
test
push
mov
jae
mov
inc
cwtl
dec
dec
cmpl
xor
data16
bound
cmp
sbb
adc
xor
mov
push
inc
shl
push
lret
jne
cmp
xchg
addr16
cmpsl
mov
hlt
or
pop
mov
dec
mov
jae
push
dec
pop
jno
xchg
nop
lret
je
jb
dec
xchg
jo
loope
ret
adc
sub
pop
add
fsubrl
into
mov
xchg
shrb
fisubl
loop
push
cltd
div
cmp
dec
xchg
ret
inc
add
and
lds
push
pusha
adc
pop
imul
or
inc
adc
inc
push
es
loopne
and
mov
adc
repz
fs
fists
cmp
out
loope
or
xchg
push
mov
sbb
mov
in
jno
cmp
xor
adcl
push
sbb
lahf
stos
icebp
push
out
adc
sub
cmp
ja
inc
test
xor
jns
cmp
sub
sub
pop
pop
or
add
ljmp
outsl
cmp
lock
ficomps
jns
or
mov
or
sbb
aaa
xchg
add
xor
mov
pop
test
jb
sbb
mov
mov
es
mov
pop
leave
and
mov
in
mov
mov
or
mov
xor
xor
int3
les
imulb
lret
or
mov
mov
test
sbbl
xchg
push
cmpsb
outsb
movsb
and
pushf
inc
leave
and
repnz
xchg
int
lods
test
mov
sub
es
mov
xchg
es
cmp
icebp
jbe
adcb
xchg
push
sub
mov
loope
mov
jne
cmp
fwait
mov
sbb
test
cmc
int
cltd
dec
cmpsl
add
mov
mov
lahf
inc
enter
pop
inc
lea
dec
and
and
adc
rorb
mov
pushf
sbb
icebp
inc
and
mov
dec
xchg
loopne
mov
aaa
fs
lods
push
or
in
movsb
imul
dec
aaa
into
adc
or
inc
pop
inc
lahf
int
nop
add
inc
xchg
push
aas
dec
push
nop
or
test
adc
leave
test
jb
dec
mov
pop
pushf
pushf
nop
and
jb
nop
pushf
jb
leave
adc
lods
lods
test
cwtl
rclb
inc
cmpsl
fdivrs
jg
push
outsl
push
adc
stc
dec
xchg
rorb
dec
sti
push
sub
inc
add
push
mov
ds
test
or
sub
adc
repnz
rolb
adc
or
sahf
jne
sub
mov
mov
mov
push
or
or
and
testb
popa
jl
icebp
into
push
ja
or
insl
or
add
inc
adc
in
fildl
mov
mov
mov
xchg
adc
adc
sub
popa
push
and
xor
push
mov
sub
inc
mov
and
mov
jge
test
adc
fmulp
xchg
dec
out
test
push
jl
dec
or
inc
int3
inc
mov
decl
mov
jmp
or
lret
jno
test
je
mov
pop
fisttps
bound
ret
cmpsl
cmp
shrb
or
pop
clc
fldenv
jne
lea
cmp
lods
fsubs
cli
sub
in
scas
loop
mov
sbb
je
jmp
bound
jl
lock
mov
inc
in
ret
sbb
or
imul
lahf
les
cld
lods
or
mov
jb
out
and
xchg
mov
sub
stc
movl
aaa
fidivs
es
iret
dec
mov
inc
push
gs
dec
push
ss
and
xor
pusha
add
fistpl
mov
push
addr16
sub
inc
push
insl
loope
or
lahf
or
dec
outsl
dec
and
fildll
out
int
rolb
fisttpll
add
je
hlt
daa
mov
inc
push
inc
sbb
jae
mov
or
jecxz
add
repz
sub
lret
test
adc
jp
rol
adc
or
sbb
das
imul
vpaddsw
popf
rep
pop
test
ficomps
movsb
inc
add
testb
jbe
inc
cltd
hlt
mov
lock
loopne
sbb
adc
push
pop
jae
jns
and
adc
and
add
and
jne
xchg
mov
stc
cld
xchg
rcrb
pop
jmp
push
clc
movb
inc
adc
and
das
cmpsl
daa
push
adc
push
dec
bound
shrb
adc
push
and
rorb
push
jcxz
mov
mov
das
push
out
inc
pop
mov
pop
mov
jo
sarb
xor
divl
mov
xchg
xchg
sbb
add
add
pop
sbb
adc
sbb
cmp
xor
fwait
sbb
push
shrl
movsb
shll
or
int
shll
sahf
sub
push
push
orb
sub
andl
test
or
xchg
movsl
mov
xorb
mov
push
sbb
mov
sbb
cltd
lods
xchg
jne
and
sub
fdivr
add
fldl
pop
push
leave
lahf
lods
fcmovb
lea
and
or
aad
or
inc
inc
aas
add
pop
mull
add
pop
push
adc
adc
mov
shr
loopne
mov
daa
iret
push
cld
call
jmp
rcr
or
jne
div
mov
fs
inc
idiv
divl
mul
add
jb
cmp
or
cmp
add
icebp
inc
sbb
cmp
push
mov
nop
mov
jae
les
lret
sbb
icebp
out
dec
pop
fimuls
lea
addr16
dec
push
cmp
push
xchg
or
jb
inc
add
pop
dec
inc
and
inc
cmp
xor
icebp
add
cmpl
movsb
adc
push
test
orb
pusha
bound
test
or
push
jp
loopne
aam
lcall
pop
push
or
mov
rcrl
cltd
xchg
adc
fs
or
and
test
mov
push
xor
cmpsl
or
push
and
inc
and
shlb
sub
and
shll
jbe
nop
imul
arpl
mov
push
pop
mov
add
rorb
pushf
add
jnp
mov
pop
or
inc
jb
imul
xchg
push
inc
inc
ret
xor
xor
dec
pop
inc
or
fistpl
inc
hlt
xchg
cmp
pop
sub
movsb
mov
dec
pusha
adc
js
rclb
jp
shlb
test
xchg
lock
scas
clc
add
jge
imul
jle
andl
cmpb
repnz
and
sarl
loopne
adc
inc
fs
pop
sar
inc
sbbl
pop
mov
dec
cmp
xchg
lret
push
test
cmp
sbb
push
cmp
xchg
pop
adc
rclb
fs
fwait
test
rorl
pop
leave
push
sbb
lock
mov
out
mov
adc
frstor
xor
out
push
fisubs
push
xchg
mov
inc
rol
add
hlt
add
pop
leave
test
mov
push
inc
es
xchg
out
push
and
mov
mov
sti
or
dec
sarb
ret
pop
fwait
out
pop
shll
fs
flds
scas
imul
movsb
cmc
pop
sbbl
movsl
mov
pusha
pushl
xor
fdivl
xorb
mov
mov
dec
je
mov
jmp
and
mov
mov
mov
popf
or
push
xchg
pop
adc
idivb
xor
cmp
les
and
mov
sbbb
or
or
je
fistpll
push
push
clc
mov
aam
inc
pusha
jne,pn
mov
mov
movl
fwait
jbe
ret
pop
sub
adc
cmp
insl
or
or
push
xor
sub
fucomi
xor
aaa
out
xor
add
xchg
sbb
push
push
dec
jmp
mov
insb
inc
loopne
mov
ss
mov
adc
int
lcall
jmp
pop
add
xor
cmpsl
dec
pop
imul
pop
data16
xchg
xor
pop
addl
xor
imul
je
push
push
or
test
mov
fs
mov
fcoml
pop
es
jl
adc
iret
inc
push
mov
out
pop
jmp
fadds
jo
shl
push
adc
daa
orb
stc
xor
jbe
jg
add
xor
push
and
or
and
mov
out
jne
pop
adc
or
inc
xor
push
out
cmp
je
push
out
sarb
and
faddl
aam
xchg
pop
push
inc
ficomps
or
cld
mov
xchg
fists
movsb
repnz
mov
es
pop
or
sbb
mov
adc
shlb
movsb
push
pop
pop
orb
sarb
lea
cmpl
pop
mov
and
and
cmp
ljmp
fsubrs
xor
sub
jno
mov
in
xor
inc
and
push
sub
pop
inc
push
scas
repnz
addb
and
daa
shrb
dec
xchg
mov
jmp
push
pop
inc
xchg
rcrb
jb
cmc
fcoms
fsubl
mov
dec
cmc
mov
cmp
jbe
push
lahf
ret
jle
sarb
pop
add
inc
arpl
xchg
mov
out
outsb
dec
adcl
popa
sbb
cmpb
pop
je
in
xchg
mov
pushf
pop
push
cmp
sub
negl
mov
cmpsl
sti
cmc
and
adc
xchg
inc
insb
jae
jb
ficompl
dec
add
icebp
in
inc
push
imul
push
dec
push
out
mov
push
lds
or
insb
jne
mov
add
adc
fdivs
lock
inc
and
cmp
imul
push
rorb
and
push
stos
inc
mov
adc
or
or
int3
movb
mov
rcr
adc
cli
xor
test
aas
and
jne
xchg
add
lret
test
fcomp
ja
test
sub
sbb
repz
jmp
xor
pop
adc
shlb
inc
inc
sub
push
adc
add
lods
and
fdivl
inc
inc
inc
pop
je
pop
es
shr
jbe
int
or
fiaddl
adc
andl
pop
shr
mov
dec
stc
add
cwtl
icebp
xchg
roll
push
xchg
inc
or
push
mov
dec
je
sarb
bound
leave
add
mov
jle
mov
xor
inc
pop
mov
je
inc
repz
pop
add
adc
dec
xchg
and
add
pop
xor
nop
sti
cwtl
dec
rorb
sbb
pop
aad
pop
inc
mov
aaa
dec
dec
mov
sbb
sub
nop
push
shlb
scas
in
push
es
push
jge
mov
inc
stos
push
rol
xor
mov
add
dec
shl
xchg
sub
psubsb
push
imul
sub
sti
les
push
push
orl
or
imul
xor
xor
enter
pop
shrl
loopne,pn
mov
and
adc
jo
push
out
dec
add
scas
adc
sbb
sahf
insl
in
jmp
cmp
dec
inc
inc
or
jne
repnz
add
push
sar
testb
add
das
mov
mov
and
call
aaa
cs
dec
dec
aam
aas
inc
fstps
ret
ret
mov
jb
jmp
mulb
fildl
roll
jb
ljmp
or
out
push
stos
ja
int
pop
addb
cltd
mov
mov
mov
xchg
and
mov
push
jmp
jl
aam
jg
xchg
push
pop
push
dec
add
and
add
mov
xor
fldt
or
or
or
or
imul
or
cmp
fsubrl
outsl
add
shrl
into
mov
xchg
inc
jl
jle
cmp
es
mov
add
pusha
push
das
pop
add
push
sbb
sbb
lock
adc
sbb
and
lea
or
andb
and
mov
push
hlt
adc
cmp
popa
jl
or
mov
pop
and
insl
sbb
lock
movsl
mov
mov
add
push
mov
mov
xor
push
mov
xor
scas
lcall
out
add
xlat
jge
push
inc
add
mov
cmp
and
or
out
incl
hlt
inc
adcl
or
loopne
xchg
cmp
pop
xlat
xor
xor
push
orb
imul
negb
ret
adc
and
clc
pop
subl
push
mov
ljmp
mov
jne
rcll
mov
add
or
je
and
popl
add
add
mov
hlt
je
scas
pop
notb
inc
lods
push
xchg
pop
adc
mov
dec
in
add
jle
sbb
inc
mov
test
shlb
and
dec
and
xor
pop
adc
lock
rcrb
dec
lock
sarl
int3
sbb
sarb
test
inc
mov
loopne
or
xor
not
pop
xchg
pushf
push
roll
loop
pushf
add
enter
aaa
cmp
mov
and
jb
rcrl
add
mov
sub
push
in
jge
sbb
jmp
add
jnp
sbb
je
jg
jg
adc
and
inc
lret
rorb
pusha
jo
pop
daa
and
and
inc
loope
pop
adc
add
sbb
orb
out
roll
lret
sub
or
mov
nop
scas
subb
inc
add
out
push
push
push
hlt
rep
ss
ja
jmp
neg
subl
push
lret
pop
test
xchg
scas
or
hlt
mov
enter
data16
mov
paddsb
add
pop
in
mov
cmc
xchg
and
push
mov
imul
pop
pop
dec
popa
mov
fmull
cwtl
dec
test
fdivr
arpl
jl
ret
push
add
bound
pop
daa
int
jae
jmp
lods
xchg
out
movsb
mov
dec
inc
mov
jns
mov
or
ds
cs
in
ja
loopne
pop
hlt
pop
stc
sub
clc
xor
adc
add
add
cld
imul
adcl
mov
push
inc
xchg
loop
or
repz
pusha
mov
push
add
daa
fsubrs
jb
out
push
dec
adc
push
and
ja
fisttps
push
pop
outsl
inc
or
jbe
push
test
sahf
outsl
ja
cmp
mov
adcl
hlt
xchg
rclb
test
ret
ror
loope
js
lret
loope
or
mov
adc
test
jl
jg
into
and
call
sub
mov
jbe
sub
ja
pop
and
mov
shrl
shll
fsubrs
fnstenv
cli
lcall
inc
rep
add
ss
push
jne
add
adc
adc
ss
and
xchg
push
or
push
sbb
ss
pop
stc
cwtl
dec
cltd
or
outsb
xor
add
mov
and
sbb
in
sbb
push
sub
push
lods
xor
jno
mov
mov
xchg
mov
jp
or
nop
dec
stos
in
inc
mov
xor
sub
enter
and
in
jne
subb
lods
or
faddl
mov
bound
insl
xor
ljmp
and
and
loopne
sub
decl
or
popa
cmp
fs
pop
mov
je
xor
mov
jno
fcoms
faddl
jmp
push
xor
and
pop
mov
cmp
outsb
dec
mov
xor
dec
add
jmp
adc
or
lock
dec
enter
aaa
xchg
popa
inc
mov
sarb
add
fiaddl
pushf
mov
sub
cmp
ret
xor
mov
lcall
outsl
fsubrs
test
and
and
push
and
xchg
int3
jmp
adc
xchg
int
and
mov
jmp
adc
insl
or
add
jae
lods
push
mov
add
or
sbb
mov
lods
fsubrs
push
xchg
mov
mov
cmp
lret
dec
int3
dec
xor
aaa
mov
ret
mov
xchg
jb
ret
or
mov
and
and
cmp
jl
cmp
sbb
adc
out
fs
pop
push
ret
sub
cmp
imul
jle
push
ret
cmc
or
sarb
sbb
dec
enter
and
adc
cmovge
inc
scas
inc
dec
sbb
adc
or
fstpt
inc
push
mov
mov
xchg
xchg
fcoml
sbb
mov
push
xor
jne
and
or
rcrl
shrb
cmpb
sub
arpl
rcrl
or
test
sub
inc
adc
pop
shll
mov
cmp
int3
add
adc
sub
inc
lcall
mov
rclb
add
push
lsl
jmp
sbb
push
and
int3
push
inc
sbb
sub
or
cmp
or
aas
dec
or
sbb
adc
or
fidivl
fcmovb
and
fxch
jo
rorb
xor
adc
fadds
les
ret
adc
dec
pop
or
mov
test
push
mov
ret
ret
dec
push
lock
es
or
cwtl
mov
xor
sbb
insb
int
mov
dec
sbb
rorb
shlb
shll
cmpb
xor
dec
adc
push
pop
cld
ss
pop
pop
and
sub
inc
and
enter
push
movsb
data16
mov
cmp
jne
roll
cmp
jl
incb
add
int
adc
or
out
sbb
mov
mov
add
xor
cmp
xor
sub
dec
dec
sub
mov
jl
mov
pop
mov
cld
sbb
subb
mov
leave
xor
push
push
add
or
sbb
jno
mov
push
push
sbb
addr16
inc
xlat
popf
outsl
leave
bound
jle
js
sub
sbb
push
je
xchg
cli
adc
notb
jp
lea
lea
or
dec
in
add
jo
jae
imull
icebp
mov
mov
popl
add
mov
out
add
mov
mov
rclb
push
mov
adc
into
inc
or
inc
or
jp
mov
mov
cld
dec
and
pushl
add
sub
or
mov
rcrb
ljmp
jo
mov
shrl
ret
inc
cmp
xor
out
das
insb
ret
imul
lcall
dec
test
push
inc
or
inc
adc
mov
push
cld
push
cltd
dec
pusha
test
xchg
or
push
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
push
or
inc
and
inc
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
fidivl
mov
cltd
mov
xchg
cwtl
pushf
mov
dec
test
sub
pop
dec
push
cmp
outsb
mov
add
inc
jbe
enter
inc
and
jle
inc
fiaddl
and
nop
data16
sbb
or
sbb
pop
and
and
push
fs
pop
enter
pop
adc
sub
push
jo
add
cmp
inc
ret
out
sub
rclb
fistpll
mov
dec
jne
out
dec
cmpsl
mov
or
lret
sub
add
mov
adc
mov
adc
cli
cmp
add
adc
cmp
aam
xor
je
sub
and
cmp
xchg
scas
movb
fdivrl
aad
dec
int3
dec
jge
xor
leave
inc
pushf
repnz
add
or
xchg
add
addl
mov
and
sbbb
les
dec
mov
adc
add
in
xchg
mov
push
lea
je
adcb
je
sti
jbe
movsl
or
xor
ret
lret
leave
lds
fcmovnb
mov
fidivrl
add
fmuls
push
xchg
jp
in
push
popf
movsb
push
imul
loopne
inc
pop
sbb
cwtl
sbb
ds
test
lcall
into
aam
dec
pop
je
push
pushf
testl
inc
sbb
mov
push
dec
and
loopne
push
insl
outsb
jne
sahf
or
push
outsl
sbb
mov
push
push
test
in
sbb
movsb
mov
or
adc
fidivrs
cmp
jb
add
lret
mov
and
lret
fwait
push
push
xor
jae
in
ret
jne
jb
adc
jg
mov
ret
mov
clc
cmp
sbbl
mov
jl
adc
fmuls
pop
mov
add
cmpsb
dec
or
addb
adc
xor
pop
add
add
loopne
cmp
or
xor
xor
and
adc
lcall
jnp
or
ljmp
loopne
mov
cmc
dec
push
pop
les
int
fildl
clc
sbb
and
and
push
scas
jmp
add
lea
or
xor
inc
shrl
mov
push
and
cmpl
jle
mov
or
mov
push
adc
add
xchg
call
fwait
lret
lret
push
push
loopne
pop
mov
sbb
mov
notb
call
mov
add
mov
mov
sub
in
cmp
sub
jo
in
or
cmp
xor
push
jle
gs
adc
mov
lea
mov
push
lea
or
and
out
ficompl
or
sar
mov
stos
popa
or
add
je
imull
mov
aad
jl
popa
push
add
and
outsb
test
xor
pop
popf
add
jo
mov
inc
sbb
push
insb
lods
dec
push
or
add
mov
mov
jns
push
out
dec
pusha
dec
sub
push
bound
inc
pop
data16
dec
inc
popf
pop
addl
pop
or
jae
sbb
mov
movsb
xor
mov
pop
cmp
in
lods
mov
loopne
inc
dec
sti
adc
push
hlt
mov
jmp
add
lods
test
jmp
sahf
pop
inc
add
test
xchg
add
jne
mov
mov
lret
and
push
clc
loopne
addr16
call
jmp
push
aas
test
lret
dec
inc
lea
push
add
mov
data16
add
mov
pusha
jns
add
cmp
cmp
popf
test
rcll
dec
sub
or
sarl
cmp
test
push
iret
out
jl
and
sbb
push
test
shll
push
add
std
icebp
cmp
sarl
xchg
cmp
jne
movzwl
rolb
mov
shll
dec
inc
int
push
jmp
pop
movsl
dec
je
leave
cmp
cmp
add
sub
pusha
jns
out
pop
cmp
decb
xchg
sbb
jb
adcb
or
jnp
lods
jo
inc
mov
sbb
dec
xchg
mov
sbbb
push
pop
test
mov
dec
and
jmp
jbe
popl
xchg
mov
andl
sub
cmp
cli
pop
divl
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
mov
sub
and
out
loopne
sbb
inc
add
sub
daa
jmp
pop
xchg
cli
or
add
in
jl
or
movsl
dec
add
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
popf
loopne
out
add
push
xchg
mov
pushf
sub
addb
test
and
or
je
push
ret
fstps
push
pop
lock
scas
mov
mov
sub
adc
and
fstl
in
movsl
out
jge
lret
test
add
push
jo
lret
jmp
or
bts
and
pop
mov
sbb
lea
sbb
sbb
xor
cmpsb
cmp
inc
ja
loopne
mov
fdivrs
jne
ljmp
dec
cmp
adc
push
fsts
xor
jnp
adc
filds
lcall
sbb
and
xor
ret
or
jae
lock
mov
movsb
sub
leave
pop
mov
flds
cmp
aaa
push
xor
int
mov
loope
ret
in
stos
or
loop
outsb
mov
incl
inc
loopne
jns
inc
jne
les
or
sbb
jmp
sbb
xor
jo
loop
add
andl
or
or
cmp
adc
fdiv
inc
push
test
sbb
or
nop
push
push
negl
mov
adc
mov
ss
xorl
push
orb
scas
into
xchg
xor
adc
pop
add
movups
push
cltd
sbb
add
or
and
mov
pop
test
sbb
out
sub
or
int
sbb
and
ljmp
pop
inc
nop
push
mov
out
push
inc
pop
or
dec
adc
mov
xor
mov
insb
js
or
mov
jg
or
rolb
mov
xor
pop
mov
xchg
push
push
and
jns
adc
sbb
sub
rolb
mov
les
xor
push
push
mov
and
add
notl
xchg
js
mov
sbb
imul
repz
push
or
cmp
lods
jg
xchg
pop
jl
pop
mov
mov
jge
rorb
add
add
dec
push
test
sub
xchg
sub
or
leave
test
and
nop
cmp
push
lea
pop
lods
pop
dec
pop
pop
ss
lret
inc
and
jg
sbb
add
pop
rol
fwait
xchg
add
clc
je
xor
xor
gs
pop
sub
inc
rorb
insb
lock
sbb
push
mov
js
cs
cmp
ret
and
jp
aam
aad
testb
and
mov
mov
je
inc
cmp
shlb
mov
pop
inc
test
add
js
pop
sbb
mov
int
push
add
nop
mov
scas
vrsqrtps
enter
inc
ds
sub
adc
and
inc
adc
out
cmp
mov
and
outsb
test
adc
sarb
lods
push
dec
dec
int
orl
push
dec
jp
cmpsb
jecxz
add
cmp
add
mov
les
push
into
push
dec
call
pop
adc
xor
gs
cmp
mov
sbbb
push
cmp
into
and
or
jnp
jle
aaa
or
cmp
adc
ss
fildl
mov
mov
cmp
mov
lods
fcmovnb
popa
jbe
or
inc
sub
push
xchg
jg
inc
mov
sub
jmp
adc
inc
test
nop
sub
jmp
cmp
mov
arpl
into
das
mov
lret
in
ljmp
dec
pop
mov
mov
das
push
call
or
sbb
dec
test
popa
jmp
addl
pop
aam
enter
cmp
add
jb
sub
push
addb
jbe
pop
mov
orl
dec
scas
lret
inc
mov
mov
inc
xchg
sbb
adc
dec
cmp
jbe
pop
add
repnz
das
sbb
cmp
leave
inc
rclb
into
jl
mov
jle
adc
clc
jle
add
jmp
or
xor
pop
mov
popf
inc
push
jae
pop
ret
inc
and
add
mov
sbb
or
push
xchg
mov
jmp
xor
or
andb
xor
jo
mov
push
jbe
sysenter
cld
xor
popa
mov
fadd
mov
pop
push
dec
or
ror
shlb
adc
xor
add
and
pop
add
sbb
bound
mov
push
cmp
pop
lcall
push
popf
pushf
pop
sub
je
push
popf
dec
scas
shll
or
aad
mov
jne
jecxz
pop
idiv
add
push
push
pop
movsb
dec
sbb
pop
rorb
js
outsb
dec
xor
mov
or
rcrl
or
bound
push
lock
push
mov
xchg
test
and
movsl
or
add
or
iret
and
mov
and
shll
dec
xor
adc
or
inc
outsb
aas
and
shr
es
jmp
rolb
pop
and
and
xor
lock
test
adc
or
add
xorl
adcb
sbb
lock
or
or
sub
sub
xor
clc
mov
leave
add
std
or
jmp
inc
and
mov
mov
movsb
pop
and
aaa
jecxz
fcmovne
int3
pushf
jge
add
or
mov
sub
inc
rcrb
pushf
or
or
and
jge
mov
out
sti
push
sbb
add
fstps
aas
pusha
mov
dec
call
flds
sub
dec
and
add
fstp
jmp
pusha
pusha
push
shrb
push
arpl
repnz
pop
push
fiadds
arpl
adc
sti
fists
add
test
test
pop
imul
xor
sbb
dec
jne
orl
pop
jb
pop
mov
ret
jle
scas
push
adc
testl
cmpsb
insl
cmp
je
jb
dec
mov
sub
and
inc
add
adc
in
adc
inc
push
fnstenv
pop
and
push
test
or
lock
fstpl
mov
adc
test
adc
pop
sbb
jge
sub
fsubp
repnz
cltd
adcb
xchg
popa
and
xor
lods
ja
cmp
test
pop
dec
mov
iret
enter
push
aaa
sbb
test
fcompl
jle
mov
les
add
jmp
sub
sub
jmp
sub
cmp
lock
push
sbb
test
push
adc
testb
sub
repz
cmp
xor
andl
mov
jp
fstpl
das
outsb
or
cmp
sbb
sbb
repz
in
push
mov
inc
ljmp
sbb
mov
enter
addb
enter
jmp
mov
addr16
push
test
enter
adc
sbb
jp
dec
in
jbe
xchg
push
rcrl
shl
out
mov
push
jno
jp
push
sahf
jmp
pop
loopne
add
pop
in
xchg
inc
dec
xor
std
test
rcll
decb
push
and
sbbb
mov
add
out
adc
jle
push
add
pop
add
sbb
pop
or
dec
test
push
jmp
or
add
pop
add
and
pop
aam
and
and
adc
es
hlt
dec
sbb
fs
jl
or
or
call
or
sbb
sbb
add
adc
or
and
sub
sub
push
hlt
push
pop
sbb
and
pop
pop
jl
cmp
add
or
fwait
imul
jno
mov
jnp
mov
inc
adc
push
mov
ficoms
pusha
jmp
pop
mov
jo
imul
fildl
sub
mov
das
loopne
mov
fsubrl
shrb
imul
dec
or
sar
add
cmp
and
or
lods
sbb
loopne
and
sub
xchg
cmp
xlat
es
outsl
push
add
loopne
int3
loopne
popa
loop
mov
ja
mov
or
cmp
mov
pusha
add
jg
jae
mov
sbb
mov
push
push
int3
pop
cld
adc
test
xlat
out
outsb
data16
cs
push
call
ret
sahf
aad
push
push
mov
loope
sar
jg
or
dec
inc
mulb
ljmp
outsl
rcrl
mov
push
les
sbb
adc
inc
data16
push
pop
fadds
into
cmp
push
in
adc
addl
add
xchg
cwtl
out
mov
test
pop
aad
dec
pop
or
mov
movsb
adc
sbb
fisubl
push
or
in
or
mov
push
or
push
out
mov
dec
insb
and
adc
inc
cmp
sbb
xor
push
add
in
sbb
fsubrs
sub
ljmp
mov
ljmp
mov
fldl
inc
aaa
or
mov
ficoml
sbb
loop
inc
fld
adc
mov
and
xchg
xor
or
insl
or
clc
mov
pop
push
mov
fldt
pop
in
fcmovne
fwait
sahf
adc
int3
and
sbb
js
and
jle
call
or
jb
mov
xchg
cwtl
fdivl
push
cmc
adc
je
mov
xor
or
ldmxcsr
sbb
ja
xchg
and
inc
fsubrs
loope
test
dec
adc
mov
icebp
sbb
shl
cmp
jbe
out
add
push
mov
pop
inc
pop
push
sub
sbb
xchg
imul
shlb
push
xchg
sub
mov
push
mov
shlb
dec
sub
add
imul
or
sbb
xor
sub
or
fwait
mov
jnp
xor
aam
add
test
cmpsb
imul
dec
adc
cmc
push
rolb
jo
inc
enter
test
and
jp
je
cmpsb
mov
scas
xor
add
sti
jbe
in
orl
mov
adc
in
adc
enter
sti
or
loope
sahf
mov
ret
inc
add
add
adc
test
decl
inc
outsl
jae
xor
cmp
inc
inc
cmp
dec
jp
adc
ret
push
push
lock
push
sbb
xor
in
xchg
movsl
dec
and
cmp
fsubrp
push
dec
push
or
cmpsb
add
push
and
clc
in
sub
sbb
daa
adc
mov
loopne
add
add
scas
cwtl
pop
in
mov
test
jne
push
add
out
push
xchg
clc
stos
stos
repnz
pop
pop
inc
inc
mov
jecxz
mov
sarb
xor
std
or
cltd
and
add
xchg
pop
pop
jo
inc
or
jns
dec
xchg
loopne
lea
or
mov
pop
lock
inc
shl
pusha
cmp
in
les
je
jg
shl
not
test
add
push
hlt
add
repz
dec
cltd
insb
pop
and
mov
inc
and
into
loopne
push
into
aam
data16
jbe
dec
mov
add
jmp
or
jb
cmp
mov
cmp
dec
cmp
ret
mov
incb
jae
shl
gs
mov
adc
test
mov
push
js
test
and
jge
push
inc
lret
add
loopne
mov
jnp
add
inc
ljmp
sti
cmp
dec
dec
stos
inc
in
add
ss
cmp
xor
dec
xor
cmp
rorl
or
addb
jb
push
mov
out
and
push
cld
div
add
pop
popf
je
mov
and
add
ds
push
or
sub
jne
shl
rol
sub
cmpb
out
mov
sub
sarb
sbb
xchg
mov
xchg
test
pusha
jb
out
push
sbb
pop
in
mov
sbb
shlb
adc
and
loop
adc
lea
daa
lret
mov
cli
xor
data16
add
adc
lcall
aad
mov
stos
iret
dec
jns
or
movsb
inc
lock
add
es
inc
mov
jecxz
inc
pop
push
jmp
cmp
inc
imul
mov
rcll
jo
mov
xor
mov
cmp
idivl
pop
andl
push
or
or
jl
mov
ret
cltd
lea
out
and
sub
xor
arpl
sbb
jge
addb
adc
sbb
shl
nop
pop
xchg
add
flds
push
or
push
push
bound
enter
add
or
push
loop
ds
stc
and
rcrb
pop
pop
xchg
inc
pop
adc
lods
rep
xor
pop
pusha
pop
sub
inc
nop
mov
and
cmp
xor
rep
mov
and
inc
enter
jp
pop
adc
add
sti
push
in
adc
push
adc
mov
or
add
movsb
mov
mov
cwtl
jne
inc
pop
inc
or
nop
cli
cmpsl
test
push
lods
mov
or
mov
pop
or
jmp
loopne
fidivl
or
xchg
add
mov
pop
mov
sub
cmp
ja
adc
jmp
fs
dec
fucomi
adc
add
add
pop
lahf
push
add
loopne
je
fisttpll
pop
jmp
pop
mov
shlb
jmp
andl
mov
cltd
cmpsl
mov
orb
dec
adc
ljmp
inc
jle
jg
cmp
jle
cmp
push
xor
jecxz
int3
push
jmp
dec
push
hlt
lods
fadds
and
xchg
sub
cmp
idivb
jmp
add
and
jae
mov
ret
mov
rclb
jmp
adc
sti
sahf
xorl
mov
push
mov
movsb
jne
clc
dec
or
lahf
jae
imul
sbb
mov
mov
outsb
xor
inc
jo
call
js
adc
out
push
sub
mov
or
lods
pop
or
orl
pop
jbe
clc
add
mulb
stc
sub
cmp
push
stos
push
test
mov
sub
xchg
scas
call
divl
mov
jge
addb
mov
mov
loope
add
js
adc
add
inc
testl
mov
jmp
fisubs
push
sbb
pop
dec
dec
sub
and
cld
insb
pop
mov
imul
mov
sub
stc
outsb
notl
cld
adc
or
jecxz
add
pushf
jmp
fsts
shlb
icebp
xor
dec
mov
dec
imul
clc
ds
test
inc
add
jb
fcos
add
adc
push
cwtl
jge
neg
add
imul
inc
sbb
dec
les
int
test
cmp
bound
jge
mov
pusha
in
or
cmp
push
enter
mov
in
into
sub
xor
add
les
inc
cld
add
mov
sarl
add
inc
test
inc
mov
mov
popf
outsb
cli
das
and
add
mov
orl
cmp
add
mov
sbb
mov
jg
icebp
mov
ret
and
mov
mov
sar
imul
mov
std
mov
mov
mov
or
push
pop
mov
pop
movb
xor
icebp
inc
testl
push
test
enter
jne
test
int
inc
inc
into
jne
inc
or
cmp
add
or
xor
push
and
lcall
paddsw
subb
add
test
rcrb
xor
add
shll
push
inc
or
sub
inc
sysenter
test
dec
lock
ds
mov
ja
data16
push
mov
subl
imul
xor
call
jg
add
or
test
mov
sub
aam
jg
ret
bound
jmp
ss
or
push
in
cld
gs
mov
jg
or
adc
inc
mov
sbb
add
sahf
add
imul
dec
pop
jne
je
adc
idiv
outsb
movsb
dec
fcom
insl
fadd
loopne
shr
or
mov
or
dec
repz
shrl
dec
cs
mov
push
mov
enter
and
pushf
mov
jbe
dec
jge
cmp
mov
adc
sbb
sar
aas
sbb
add
fiadds
stos
pop
push
push
call
gs
fdivs
shlb
inc
jno
test
push
fmull
sahf
nop
dec
ja
shll
add
cmp
mov
or
sub
mov
lods
lret
into
jmp
scas
mov
ljmp
cmpsb
movsb
mov
movsb
int3
test
cmp
int3
mov
jne
push
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
shlb
inc
mov
inc
rclb
loopne
push
push
mov
out
inc
add
push
aaa
add
repz
sti
push
push
inc
shlb
lods
mov
or
or
je
or
jmp
mov
rcrb
cmp
add
lea
xchg
scas
inc
mov
mov
mov
or
rorl
in
pop
cmp
aad
mov
in
mov
or
sbb
pop
pop
sti
scas
mov
xchg
adc
inc
testb
inc
ss
cmp
je
or
pushl
rorb
cmp
je
mov
lock
pop
jne
dec
mov
inc
inc
mov
out
cmp
fldz
call
add
add
fprem1
rol
sub
je
andb
inc
into
add
je
or
es
mov
loopne
xor
call
loope
sti
repz
clc
fimull
and
mov
notl
inc
and
and
sti
pop
std
push
add
or
sbb
andl
jecxz
add
mov
scas
inc
jbe
or
add
movsl
aam
rcll
xchg
mov
inc
jl
push
je
setg
sub
in
clc
add
mov
dec
cld
push
lret
push
push
aas
sub
movb
xor
cltd
xor
inc
jle
cmp
mov
or
push
inc
aaa
cmp
add
xor
mov
es
cmp
add
mov
add
add
lcall
pop
adc
call
nop
pop
dec
repnz
repnz
mov
jp
cmp
dec
add
inc
pop
and
inc
dec
jns
mov
es
xor
pop
idiv
xor
jne
dec
in
or
add
testb
xchg
add
push
sbbb
lss
xorl
mov
test
sbb
dec
mov
push
jo
mov
add
push
insb
push
xchg
push
add
add
jne
clc
sbb
outsl
pop
ret
jbe
jl
sbb
dec
adc
jge
pop
add
rcll
adc
iret
xor
shlb
stc
add
xchg
push
sbb
arpl
lock
add
hlt
sub
adc
data16
mov
cltd
inc
xor
pop
popl
or
and
jl
repnz
mov
and
xor
mov
add
jge
pop
pop
inc
into
or
imul
pop
loopne
sbb
xchg
fnstcw
mov
movb
lods
push
es
jmp
push
xchg
push
xor
inc
lods
push
roll
mov
adcb
push
and
adc
and
and
mov
add
mov
dec
dec
sar
lea
ja
dec
fdiv
mov
pushf
jnp
dec
adc
inc
sub
ret
repz
push
or
add
push
inc
and
inc
enter
dec
and
add
cld
xchg
push
cmp
scas
cld
std
pop
mov
xor
leave
and
add
mov
and
icebp
jle
or
je
ret
or
dec
fwait
mov
inc
neg
sbb
jecxz
mov
jg
adc
inc
daa
xor
or
jne
pop
cmp
sahf
pop
sub
rorl
cmp
repz
js
scas
test
cmp
and
inc
add
add
or
or
lea
ja
sub
gs
testb
and
or
dec
sarb
movswl
les
sbb
adc
lock
jbe
add
mov
cld
add
dec
shrd
push
jle
xchg
sbb
cmp
xlat
inc
sti
jge
jge
sbb
clc
mov
dec
push
xor
incl
xchg
or
scas
inc
add
dec
jmp
xchg
clc
and
clc
push
push
sbb
rol
xor
incb
push
or
lock
xor
rolb
lock
rcrb
jb
out
push
sbb
rcr
or
sarl
jg
jb
push
sub
or
pop
push
cmp
fidivrl
rorl
hlt
add
mov
push
mov
pushf
add
pop
adc
add
mov
test
pop
test
cmc
jl
jg
lods
jb
fs
pop
jnp
dec
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
add
cmpsb
stc
mov
jno
in
cltd
lahf
es
lods
insl
scas
rcrl
loope
lds
pop
je
int
adc
mov
push
sbb
jp
loopne
jb
jp
popf
pusha
inc
and
or
push
sbb
jl
or
add
or
andb
add
xchg
inc
sub
loopne
jge
mov
jo
jne
jne
jl
adc
popa
push
mov
add
mov
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
imul
xor
je
push
shl
jne
ljmp
add
push
sub
dec
add
aam
dec
test
xchg
addl
popf
sbb
enter
push
or
jmp
insl
cmp
cld
cld
jl
adc
or
or
lock
mov
inc
rcrb
loop
mov
pop
je
jge
std
add
pop
or
pop
add
sub
fwait
fwait
bnd
add
je
inc
je
std
bound
sbb
add
jmp
xor
clc
jmp
dec
mov
inc
roll
pop
dec
jo
or
pop
call
fwait
adc
bound
repz
inc
jl
add
idivb
adc
fdivl
fmull
insl
push
pop
clc
or
or
or
sub
repnz
push
add
enter
repnz
rol
add
or
xchg
push
xchg
shlb
divb
insb
pop
arpl
and
lahf
sarb
or
je
adcb
or
dec
inc
jo
sbb
add
ja
mov
and
rcl
jmp
jb
sbb
cmp
add
push
cmc
test
inc
add
xchg
sar
bound
mov
jmp
int3
mov
hlt
push
adc
clc
push
rclb
mov
push
mov
movsl
lea
ja
inc
jbe
and
push
push
test
cld
stos
add
cmp
ret
dec
int3
rolb
pcmpgtd
add
cmp
mov
sub
dec
insl
outsb
outsl
mov
jbe
adc
mov
mov
add
mov
pop
shl
sub
inc
mov
adc
add
int
mov
sbb
cmp
cmpl
pop
movsb
jo
push
pop
outsb
push
or
push
ds
testb
push
mov
cli
pop
and
fiadds
mov
push
push
imul
pop
pop
pop
pop
push
xchg
imul
and
adc
mov
cli
add
lret
mov
bound
push
jnp
lock
add
out
in
pop
lods
jle
xchg
cwtl
pop
and
je
and
fidivs
int
lock
xchg
push
pop
out
pop
cmp
bound
mov
mov
dec
insb
popf
lret
jnp
pop
xor
gs
xor
lds
sbb
decl
adc
hlt
jmp
or
jmp
testb
je
push
incl
adc
pop
sbb
add
and
movb
and
stos
lea
cmp
sbb
mov
and
or
fdivrs
push
in
add
add
testl
jmp
icebp
rcll
mov
push
sbb
sub
insl
add
in
inc
and
ficompl
cltd
push
cmp
jg
data16
mov
or
inc
or
or
into
push
mov
adc
push
aad
add
test
fnstenv
call
adc
sbb
lods
or
or
xor
jp
jo
push
sbb
pop
xor
rcrb
jne
adc
iret
mov
loop
push
insl
outsl
sub
imul
movb
aam
push
popf
and
jns
push
push
lds
inc
dec
jecxz
lea
mov
add
adc
mov
test
pop
in
jg
xorb
nop
jge
cmp
sahf
jge
not
and
enter
cmp
push
sbb
xchg
mov
jb
jecxz
add
mov
lcall
mov
fiadds
cmp
push
mov
push
adc
sbb
inc
jmp
addr16
nop
and
jno
movsb
pop
insl
in
xchg
mov
aaa
or
stc
inc
inc
test
lods
inc
in
fisubrs
lock
pop
cmpsb
adc
cmp
loopne
test
outsb
sbb
or
std
mov
jmp
or
inc
cld
jo
mov
sbb
or
mov
aaa
adc
mov
fstpl
cmp
adc
inc
divb
in
adc
repz
sub
cmpb
adc
sbb
dec
loope
ret
fsubl
or
jge
dec
fs
xor
cmp
lods
imul
mov
cmp
or
jbe
add
jmp
inc
mov
adc
xorb
lock
sahf
ljmp
scas
mov
mov
stos
sbb
cmpsl
mov
mov
movsb
inc
mov
nop
adc
mov
sub
sbb
sbb
xor
loope
es
notb
ljmp
xor
test
inc
pop
or
push
sbb
push
bound
inc
sub
mov
int
cmp
xor
cmp
push
lock
inc
jmp
pushf
dec
out
inc
mov
les
dec
int3
es
or
jno
lods
rol
and
js
inc
jno
inc
jl
jge
adc
adc
adc
or
andl
loope
mov
xchg
loop
pop
add
mov
scas
insb
cld
inc
and
lea
or
fdivp
rol
pusha
cld
out
pop
add
or
into
imull
sbb
sub
pop
sti
or
leave
shr
or
mov
add
add
or
bound
scas
push
js
or
lods
sti
in
test
jecxz
stos
mov
cmp
addl
pushf
cltd
fildl
lcall
int3
cld
push
scas
add
add
clc
fnstcw
dec
mov
sub
les
add
xchg
or
jg
or
mov
shr
cmp
mov
mov
test
fimuls
dec
push
push
jp
adc
mov
sbb
jae
adc
dec
pusha
xchg
and
dec
adc
iret
adc
pop
add
movsb
out
rolb
mov
mov
jns
in
insl
or
cmp
ficoms
cwtl
inc
cli
test
adc
iret
shl
sbbl
adc
mov
es
fiadds
sbb
incl
cmp
loope
or
test
test
adc
test
je
dec
call
mov
cmp
cmp
das
cmp
or
fistpl
movsb
mov
push
dec
leave
xchg
sbb
repz
pushw
lock
test
sub
push
add
inc
and
dec
mov
cs
fwait
add
sub
jne
add
call
pusha
push
ljmp
inc
adc
stos
or
mov
or
mov
push
mov
adc
lcall
push
jle
or
pop
push
xchg
fdivs
stos
add
ds
jle
mov
lret
xor
lret
clc
mov
gs
xor
dec
cmp
lock
dec
fcos
xchg
jl
cmpb
jl
xor
cmpb
push
sub
je
mov
xor
sub
in
push
inc
add
add
push
lods
inc
subb
adcl
adc
push
enter
jp
cmp
adc
inc
adc
fstps
and
adc
or
cmp
imul
and
jb
call
jo
sarb
jbe
pop
insl
adc
add
and
sbb
adc
enter
out
or
jmp
add
test
jne
lret
fldenv
call
shll
rcrl
push
je
mov
movsl
inc
scas
or
popa
cmpsb
mov
add
loop
in
sbb
adc
cltd
and
jp
movsl
movsw
xor
mov
loop
sub
outsb
push
sbb
add
aam
pop
rclb
push
sub
xchg
sub
pop
ljmp
mov
sub
inc
inc
daa
test
inc
out
neg
div
fadds
mov
sbb
inc
sbb
int
cmp
inc
push
sbb
adc
sbb
jmp
fcoms
inc
and
dec
addr16
xchg
fcomi
sbb
and
sbb
test
dec
jns
fwait
dec
jne
movsb
daa
add
pop
mov
and
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
or
mov
sub
decb
jmp
lcall
xor
pop
adc
bnd
add
add
cli
pop
mov
sbb
cwtl
rcr
sub
add
mov
adc
rsqrtps
push
jne
sbb
xor
push
loop
repnz
gs
int
add
into
jbe
add
mov
jns
aas
and
mov
mov
adc
fnstcw
cmpsl
jne,pn
pop
test
aam
inc
cmp
adc
repz
sbb
pop
adc
pshufw
mov
adc
test
sub
aad
adc
ss
dec
mov
push
pop
or
pop
scas
clc
cs
outsl
sbb
sahf
and
and
xor
xchg
dec
pushl
dec
hlt
sbb
jno
lods
add
or
cmp
movb
sub
adc
ror
sub
jne
and
testb
pop
push
decl
jmp
sub
leave
je
xchg
call
shlb
mov
je
fisttps
and
push
cmp
ja
add
cmp
xchg
cmp
jne
sarl
je
xor
adc
mov
movsb
sahf
xor
cmp
pop
mov
rol
xor
push
push
fbstp
push
cmpsb
ret
outsl
push
arpl
cmp
in
popa
pop
mov
sbb
fstl
sub
add
sbb
lea
jmp
not
je
push
xor
fmuls
xor
add
and
lea
or
test
jecxz
jmp
dec
dec
fwait
lock
xchg
test
test
mov
cltd
cmc
push
pop
cld
adc
sbb
jge
ja
faddl
mov
add
pop
adc
movsl
add
sbb
test
cmpsl
mov
inc
sarb
push
pop
test
fwait
sbb
and
pop
mov
inc
xchg
or
sub
sub
call
in
or
push
imul
add
arpl
adc
sbb
jl
dec
adc
add
push
lret
inc
and
pop
push
jg
mov
iret
repz
push
rcl
rcl
aad
cmp
repz
xlat
fcomp
and
add
call
xor
notl
add
nop
js
and
into
data16
sub
push
daa
ss
enter
pusha
mov
or
adc
mov
adc
js
sbb
adc
sbb
fs
cmp
ds
pop
or
test
test
lock
cmp
xlat
std
into
cmp
das
or
push
and
push
inc
push
mov
adc
orl
mov
imul
or
pushl
dec
sbb
dec
lea
sar
inc
mov
movswl
je
test
loope
inc
pop
dec
inc
dec
mov
sarl
xchg
clc
into
ja
sti
mov
sub
sbb
adc
mov
rcrb
cmp
sar
fisubs
addr16
mov
jp
mov
clc
or
test
add
insl
pop
or
dec
leave
push
or
xor
popa
cwtl
add
hlt
lcall
icebp
cmp
push
leave
add
xlat
and
and
lea
pop
sbb
mov
jae
gs
ja
mov
add
and
jns
or
push
loopne
inc
testl
in
ljmp
loopne
inc
or
cmp
rorb
sub
test
push
pop
inc
mov
test
rolb
push
mov
imul
loopne
push
loopne
fimull
mov
fimuls
test
insb
enter
jns
je
and
cmp
push
shll
inc
lds
addl
ror
fwait
cwtl
mov
jge
jl
test
test
rol
add
lret
jle
jle
shrb
mov
shr
movb
rolb
shl
mov
cmp
rorb
outsb
loope
dec
dec
push
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
mov
out
mov
lret
pop
pop
sbb
dec
rolb
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
inc
adc
xor
xor
mov
jmp
or
sub
sbb
adc
pop
xchg
aaa
mov
or
xchg
mov
cmp
scas
scas
nop
in
leavew
mov
xor
mov
icebp
js
and
and
out
je
xor
mov
imul
mov
xor
and
dec
ja
lds
divb
or
pushw
sub
shll
jge
adc
mov
inc
out
inc
adc
or
inc
hlt
ret
xor
call
xchg
push
push
or
loopne
sub
cmp
ss
sbb
mov
test
dec
ss
inc
test
push
cld
lods
dec
mov
mov
add
or
call
inc
inc
mov
push
adc
sub
fnstcw
pop
icebp
insl
lcall
lods
lods
mov
mov
inc
inc
and
into
repz
idiv
sbb
mov
sbb
test
rcll
in
negb
test
lret
lock
fs
add
out
or
jge
loop
sbb
inc
lock
sbb
in
movsb
adc
cmp
jne
jne
mov
movsb
repnz
fnsetpm(287
loopne
push
xchg
push
push
inc
into
mov
pusha
mov
jge
mov
sub
insb
sbb
out
inc
add
inc
mov
pop
int3
mov
push
add
push
nop
sbb
cmp
aaa
test
pop
jle
out
adc
out
decb
sub
hlt
pop
loop
popa
pop
shr
pusha
fisttpl
adc
push
shll
test
jne
sbb
neg
and
sub
sub
call
imul
imul
addr16
pusha
call
push
pop
add
pop
ret
and
add
cmpsb
mov
shl
push
adc
sti
les
daa
push
jo
and
push
xor
or
xchg
mov
ljmp
subl
mov
add
cmpsl
out
into
or
adc
nop
lret
pusha
sbb
xor
cmp
xabort
pop
cmc
mov
lcall
xor
xor
notb
jae
add
out
adc
roll
outsb
jne
cmp
sbb
testb
lock
inc
ljmp
push
xor
aaa
jmp
dec
nop
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
jb
add
dec
add
add
fadds
add
adc
inc
pusha
ret
pop
lock
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
add
or
add
add
jne
test
and
ret
dec
out
fidivs
push
mov
xchg
lret
xchg
and
insb
loope
push
je
jb
cmp
pop
ljmp
int3
pop
fisubl
nop
push
je
push
add
or
push
test
add
adc
push
ret
mov
xorl
add
push
ret
xchg
dec
lret
ficomps
add
mov
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
xor
jmp
mov
rcrl
add
int3
sahf
and
add
mov
or
or
push
push
dec
pop
jg
sbb
mov
inc
push
pop
imul
or
or
jo
dec
push
add
add
inc
or
add
mov
cmpsl
inc
or
mov
jle
in
xor
or
jp
mov
add
je
jl
jne
and
shll
test
jge
sbb
mov
mov
data16
add
pop
sub
push
push
and
out
xchg
cld
cld
addb
sbb
mov
stos
jg
inc
jo
add
xchg
ret
dec
add
out
or
pop
inc
mov
stmxcsr
add
inc
or
bound
cltd
sbb
fcmove
or
add
or
jae
data16
adc
xchg
stc
mov
pusha
mov
cmp
out
and
sbb
inc
jg
into
aad
jb
into
into
mov
stos
adc
pop
sub
push
pop
sarl
nop
pop
cwtl
pop
mov
push
mov
not
and
les
rcl
pop
std
daa
je
sub
sub
pop
lcall
imul
lahf
lcall
adc
add
add
sbb
add
test
movsb
stc
and
sbb
je
and
and
xor
sub
jmp
push
push
push
and
lret
mov
xor
subl
and
scas
adc
push
dec
xchg
add
rolb
pop
xchg
popa
and
dec
jae
rolb
mov
cmp
mov
cmp
mov
inc
mov
sbb
pushf
outsb
jno
or
and
es
and
mov
add
cmp
jle
and
daa
or
and
push
jge
pusha
insb
mov
xchg
in
ljmp
dec
pushf
stc
add
mov
ret
dec
orb
sti
xchg
mov
xor
and
aas
push
mov
push
adc
mov
cwtl
orb
andb
jmp
loopne
mov
mov
subb
add
mov
cwtl
fnstsw
out
je
out
mov
rorb
lret
inc
inc
push
outsb
aas
adc
sbb
xor
sbb
imul
jl
xor
push
mov
jo
cmp
iret
dec
cmpsl
adc
jmp
sbb
dec
and
icebp
pop
mov
or
aam
fisttps
mov
mov
mov
sub
mov
test
push
dec
sbb
shlb
test
or
aam
add
sahf
inc
jmp
lock
stos
cmp
js
jle
pushl
ficompl
das
and
in
je
test
push
xor
frstor
push
push
mov
aam
rol
pop
pop
popf
pop
xchg
rcr
push
loopne
pop
pop
mov
or
and
cmp
out
jge
xor
cwtl
or
cmp
inc
sbbl
push
fldt
je
mov
adc
push
lahf
nop
push
out
hlt
dec
mov
fldcw
xchg
inc
sbb
sahf
inc
pop
xchg
clc
jmp
add
sbbb
or
sub
enter
imul
scas
push
adc
imul
pop
add
sub
xchg
sub
sub
es
pop
dec
imul
sbb
add
push
mov
adc
mov
cs
push
mov
push
and
jae
inc
loope
stc
jmp
test
sub
mov
das
inc
push
mov
sbb
enter
add
mov
sar
loope
cmp
pop
jmp
xor
adc
dec
dec
and
jl
inc
arpl
adcb
notl
call
adc
shrb
add
xchg
dec
jo
mov
jmp
cmp
xor
or
test
add
mov
outsb
lret
sub
cwtl
loope
xchg
add
sub
xorb
lret
ret
dec
add
cmp
aaa
fcoms
mov
or
mov
sub
mov
and
sbb
and
dec
rcl
fimull
aaa
push
clc
xor
mov
push
sbb
fs
sbb
xor
mov
call
push
sub
pop
inc
push
pop
jl
adc
test
jbe
or
int3
ret
push
xchg
xor
js
daa
and
mov
lock
dec
mov
pop
nop
xchg
jae
fmuls
mov
or
jle
push
jmp
dec
loop
inc
rcrb
inc
add
jne
out
ss
push
js
sbb
adc
xchg
mov
je
loope
ror
sbb
inc
js
inc
add
and
inc
sar
fcompl
sbb
das
roll
xor
rorb
dec
out
add
sbb
pop
and
je
push
or
lret
cs
xor
push
ljmp
and
push
adc
cmpsb
inc
hlt
xor
in
sub
add
push
push
mov
mov
or
out
testb
dec
testb
xorb
mov
enter
push
or
mov
sbb
add
mov
sbb
xor
add
or
sub
pop
fwait
pushf
or
in
add
dec
sarb
test
inc
add
mov
les
adc
popa
int
stos
cmp
or
cwtl
shlb
std
cli
xchg
sbb
inc
or
inc
or
or
test
and
push
xchg
mov
or
and
mov
dec
rcrl
jl
and
pop
iret
sub
ss
clc
mov
cvttps2pi
mov
aaa
jle
jmp
nop
sub
je
test
lods
movntq
out
fld
flds
xchg
fildll
or
push
fstpt
or
test
jns
fstps
add
push
lahf
jnp
sub
pop
add
shl
sub
jbe
enter
ficoml
test
adc
pop
rcrl
mov
loop
cld
mov
xor
dec
out
fwait
add
loopne
add
fsubr
pop
pop
xchg
sub
fs
push
and
or
clc
in
insb
sub
les
ret
sarb
mov
pop
test
dec
popf
add
cld
adc
mov
xor
inc
and
fmuls
push
mov
pusha
mov
mov
test
into
xchg
mov
and
jbe
adc
adc
adc
jmp
push
dec
aas
and
mov
icebp
daa
push
add
shll
and
aam
fsubrs
cmc
push
mov
out
sub
nop
push
mov
sti
js
push
xchg
sbb
lock
arpl
rcr
and
stos
jecxz
add
enter
addl
shlb
and
push
aam
add
push
aam
pushf
enter
icebp
mov
sub
leave
or
pop
pop
mov
jbe
movb
dec
or
and
imul
data16
inc
and
cli
ret
cmp
jl
mov
sbb
adc
add
lret
gs
cmp
out
lock
test
xor
add
out
das
std
cmp
cld
movsl
loopne
push
arpl
imul
cmp
icebp
lcall
ss
sbb
sbb
push
or
add
fsubl
jge
cmp
in
add
add
sbb
add
test
and
xor
ja
jbe
pop
fisttpl
sbb
xor
cmpsb
cld
pop
cmp
mov
imul
inc
xchg
decb
jle
bnd
pop
and
jg
adc
mov
add
icebp
mov
rcl
sbb
push
pop
rcl
pop
pop
jmp
xor
pop
cmp
shl
hlt
and
sbb
into
call
push
mov
xor
ss
or
inc
mov
push
or
hlt
or
fsubrl
fs
push
mov
mov
and
cmp
dec
mov
xor
ret
inc
mov
fstp
hlt
test
and
xor
in
aad
lds
int3
pop
and
mov
inc
aad
scas
popf
test
inc
daa
push
sahf
cld
lea
movsb
mov
inc
movl
sbb
and
pop
xor
das
push
cmpsl
push
add
push
or
aas
int
aam
mov
and
inc
shrl
mov
testb
testb
jae
inc
inc
bnd
add
or
push
or
out
mov
popa
in
dec
dec
inc
mov
fs
pop
mov
sub
mov
cltd
mov
or
add
sbb
add
mov
lcall
jg
or
enter
pop
lods
sub
pop
insl
inc
stos
stos
pop
jge
jne
je
test
cmp
dec
mov
loopne
dec
or
jbe
enter
loopne
std
mov
mov
pushl
ja
enter
sub
add
fcom
aaa
and
mov
out
jmp
popf
jge
xor
cmp
movsb
xor
push
in
ret
and
and
cmp
in
xchg
nop
ret
out
adc
and
or
xor
jne
inc
sbb
pop
dec
aas
inc
inc
mov
sti
fs
mov
sub
aam
nop
jle
sub
cmp
jb
call
clc
ret
cmpsb
jns
fnstcw
jno
mov
aaa
orl
adc
xchg
fadds
inc
fildl
mov
push
jl
popa
ret
imul
xchg
mov
add
add
outsb
or
jg
addb
push
aas
cmc
jle
les
and
dec
sbb
pushf
sbb
add
sub
add
inc
dec
adc
and
adc
add
adc
jg
jmp
jg
dec
or
fs
pop
jl
add
gs
sbb
and
xchg
inc
jne
sub
fdivrl
sahf
lret
loopne
mov
inc
jo
inc
sbb
sbb
adc
add
cmp
ret
gs
les
fistps
inc
push
mov
xor
gs
or
mov
cs
shl
aaa
popf
mov
outsb
loope
fdivs
aaa
inc
mov
iret
dec
cmp
push
test
xor
in
sub
enter
mov
cmp
sbb
push
fcomp
pop
cmp
push
aaa
or
inc
or
sbb
inc
mov
inc
je
nop
jle
loopne
mov
sarb
dec
rcrb
imull
mov
fnstcw
inc
and
or
add
adc
cmp
push
xchg
xchg
xchg
jo
outsb
fcomps
pop
mov
mov
rolb
sub
mov
jecxz
lret
push
pop
cmp
adc
pop
movsb
push
jns
insb
cmc
ljmp
mov
ds
cmp
pop
pop
inc
in
fdivs
testl
dec
inc
inc
cmp
cmp
int
mov
or
test
testl
mov
or
lret
mov
incl
dec
mov
dec
repnz
cmp
and
flds
cmp
cmp
cmp
push
adc
into
cmp
dec
scas
mov
dec
xchg
les
pop
stos
mov
adc
jg
inc
lcall
jp
int3
mov
push
push
sbb
fs
pop
jnp
popa
xchg
je
mov
fisubl
sbb
jmp
outsl
sub
iret
cmp
sbb
add
inc
xor
pop
add
dec
popf
push
jne
es
add
nop
scas
dec
cmp
or
mov
sub
adc
and
sbb
leave
cmp
mov
jne
push
pop
ja
add
fcoms
jmp
xor
pop
add
inc
popf
push
dec
mov
xchg
je
adcl
cmp
cwtl
gs
sbb
add
lcall
aaa
push
icebp
enter
inc
loope
inc
cs
ss
mov
or
cmp
or
xchg
jns
sbb
pop
push
cli
push
test
mov
xchg
fists
aas
sbb
addl
sub
movsb
nop
or
xor
rorb
bound
inc
lcall
push
ljmp
cltd
xor
mov
jg
or
jae
push
cmp
jl
mov
inc
ret
sbb
int3
dec
adc
movsb
dec
hlt
scas
ja
lcall
jne
lea
testb
jne
clc
push
mov
adcl
into
movsb
xchg
into
push
push
ljmp
and
push
sbb
inc
add
mov
xor
xlat
add
loope
shrl
pop
mov
sub
leave
mov
icebp
cmp
lods
pop
cltd
add
mov
fstps
add
sahf
adc
or
mov
cmc
push
add
insl
lods
mov
mov
add
mov
or
and
xchg
jb
xlat
scas
imull
jns
jne
jmp
frstpm(287
loopne
out
or
push
arpl
loope
insb
jl
sbb
fstpl
ss
pop
movsl
arpl
pop
jle
or
add
ret
in
inc
nop
mov
xor
inc
jp
adc
cs
inc
rorl
jl
subl
xor
dec
push
ret
repnz
pop
mov
cmp
and
push
and
xchg
jecxz
lret
clc
dec
inc
add
adc
push
lock
xchg
add
and
cmp
jl
and
add
sub
aam
mov
mov
in
pusha
jbe
add
sub
loopne
lret
sbb
cmp
mov
xor
dec
jg
adc
orl
ja
mov
hlt
ss
icebp
rcrb
aad
mov
or
rolb
inc
jg
adc
mov
add
or
std
pop
mov
pop
xchg
cld
pop
std
jb
test
mov
test
test
adc
sub
out
cmp
imul
jne
or
ljmp
jo
mov
push
dec
or
mov
pop
data16
lock
jbe
inc
lret
subb
mov
push
mov
sarl
cmc
adc
push
les
xchg
or
scas
adc
or
mov
xlat
loope
psubb
cli
repnz
shll
testb
jp
and
add
int3
xor
sub
sbbb
mov
mov
sbbl
je
data16
mov
jb
cmp
jbe
mov
push
or
lret
mov
pop
les
push
call
call
out
pop
shlb
aas
mov
and
dec
jge
push
push
or
loop
xor
or
ja
call
fstpl
pop
jmp
dec
loop
push
jbe
dec
jmp
pop
pop
pop
pop
pop
or
mov
xorb
lea
imul
aam
push
sbb
xchg
xor
insl
in
int3
add
and
dec
push
dec
imul
dec
add
jnp
int
lcall
push
jb
imul
jb
orb
call
fiaddl
adc
inc
enter
or
in
inc
mov
jns
cmp
dec
add
xchg
xor
ret
add
xor
in
and
enter
scas
mov
ret
nop
mov
sub
fmuls
sbb
xor
test
inc
bnd
nop
inc
jne
fmull
leave
inc
cmp
mov
sub
insb
das
adc
jl
sbb
jne
cmp
es
inc
inc
adc
repz
dec
std
xor
sbb
and
loope
rcrl
mov
xor
cmpsl
cmp
or
sub
add
insb
pop
lea
push
cbtw
ss
xchg
sub
fsubrl
fstpl
dec
pop
push
adc
mov
leave
inc
xchg
or
and
lret
cmp
jno
adc
lret
nop
fs
xchg
test
sarb
les
cmp
fidivl
xchg
in
fidivl
xchg
fsubrs
pop
shll
fwait
in
movups
sysenter
inc
adcb
xchg
sub
insb
sbb
ficoms
and
lcall
xor
dec
test
jge
xor
mov
jb
mov
and
dec
xchg
fdiv
mov
pop
hlt
add
sbb
test
jo
push
cmp
je
xlat
inc
loopne
bound
inc
sbb
or
loopne
add
stos
sbb
loope
lods
dec
push
add
jno
and
ds
in
dec
and
sub
pop
pop
jbe
cltd
mov
add
mov
pushf
fwait
addl
or
jne
stos
outsl
dec
daa
xor
dec
or
jg
stos
adc
dec
fcom
and
je
adc
imul
loopne
and
xchg
xchg
aam
mov
and
jae
dec
sbb
jl
imul
add
dec
cmpsb
sbb
dec
es
fs
and
cltd
fs
and
xor
fs
dec
cmp
fs
dec
es
dec
fs
sbb
add
in
cmp
movsl
jnp
inc
add
mov
push
cld
into
sbb
lods
pusha
add
and
jb
int3
rorb
loopne
push
jb
lcall
movsb
jmp
clc
movsb
je
iret
and
pop
popa
push
xor
adc
fs
dec
ss
faddl
push
jl
popf
fs
aam
and
adc
mov
sbb
int3
or
leave
arpl
daa
sbb
dec
shl
adc
or
inc
mov
xor
in
andb
pop
push
pop
push
inc
in
in
or
xchg
movsb
fcmovbe
xor
out
insb
mov
ja
cwtl
cmpsb
sbb
pop
bound
xor
insb
mov
aas
jg
push
dec
jb
sarl
adc
pop
sbb
inc
rorl
lock
rorb
or
mov
call
imul
addl
add
add
fs
enter
or
js
inc
inc
lds
push
jns
loopne
dec
push
sub
lods
jns
push
adc
in
dec
adc
outsl
in
in
nop
stos
pop
leave
call
sbb
xchg
jp
in
jp
inc
je
mov
dec
mov
adc
jnp
jb
jl
mov
in
addb
in
jo
test
xor
dec
call
jns
sub
in
and
jnp
cmpsl
cs
cld
jnp
and
dec
cs
jl
mov
mov
lock
mov
add
nop
ret
jo
jg
push
mov
mov
xlat
addr16
push
adc
cmpl
add
ret
repz
dec
xchg
test
in
leave
dec
sub
enter
push
lods
cmpsl
push
cld
push
dec
jnp
mov
dec
adc
scas
in
and
lds
add
mov
cmpsb
movsl
stos
push
mov
repz
test
int3
out
mov
jbe
aam
and
xor
jns
dec
out
add
push
xchg
cmp
sub
xor
arpl
pop
fcom
mov
cmpsl
cmp
jg
jbe
les
scas
neg
inc
aam
cmp
mov
test
lods
mov
daa
daa
daa
mov
mov
daa
enter
sbb
popa
addl
movsb
inc
and
adcl
jl
out
ret
sbb
add
adc
cmpsb
shll
orl
or
addl
in
out
inc
sub
int3
cmp
push
lds
pop
sbbb
aas
vmptrld
fmull
addl
dec
andl
sbb
test
inc
rorb
popa
cmp
dec
inc
ret
shlb
unpcklps
mov
shlb
push
xor
jp
les
arpl
clc
test
sub
mov
mov
ss
mov
ret
imul
xor
inc
mov
lea
cltd
pushf
or
add
or
in
pop
sbb
imul
xchg
fdivr
sub
pop
filds
dec
inc
and
insb
dec
jecxz
ss
pusha
mov
jo
ss
pop
fldenv
jmp
sub
dec
shrl
sub
sub
out
xor
pop
xchg
pop
outsb
rcrl
push
jo
xor
imul
xchg
pop
inc
mov
dec
and
adcl
cmp
add
push
add
xchg
in
mov
or
insl
sub
or
lock
mov
in
lock
push
mov
adcb
clc
push
in
sbb
lods
jg
fnstcw
mov
xchg
cld
cmp
je
add
nop
add
push
cmp
ret
mov
xor
test
mov
pusha
cmpsb
sub
pop
pop
cmp
adc
std
or
sbb
mov
cld
mov
or
add
dec
add
pop
cmp
in
nop
jmp
and
daa
sub
lcall
clc
cmpsl
or
sbb
pop
push
or
dec
rcrb
imulb
push
xor
or
mov
in
and
or
in
inc
push
or
or
or
xor
mov
adc
push
daa
in
aaa
call
xor
test
scas
or
adc
or
test
and
es
mov
gs
mov
test
cmpsl
add
jns
adc
add
mov
inc
ret
js
xchg
and
mov
push
mov
sub
ss
loopne
loop
stos
pop
and
add
scas
push
add
pop
cmp
repnz
xchg
jl
orb
add
xlat
aam
cmp
or
xchg
mov
adc
mov
jg
js
inc
test
pop
jb
push
lds
rcl
adc
std
cmc
in
dec
push
xchg
sub
cmp
shll
mov
xchg
push
ss
add
adc
push
jmp
ret
inc
cmpsl
pop
outsl
call
and
push
sub
jb
xorl
mov
jne
addr16
fcompl
xchg
sub
les
pop
test
xor
add
sub
sbb
xor
std
int3
jae
inc
mov
or
lods
and
testl
xchg
leave
rclb
jnp
mov
xchg
jb
daa
sbb
xchg
push
outsb
sbb
adc
inc
jo
xchg
mov
int3
xlat
enter
inc
ret
mov
cmpsb
or
or
es
adc
xchg
lods
nop
pushf
pushf
pushf
fmull
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
xchg
cwtl
mov
mov
mov
add
pop
shrb
or
int
sbb
lcall
ljmp
test
enter
mov
mov
mov
imul
sbb
push
mov
outsb
shl
popa
daa
xchg
lods
xchg
movsb
and
lcall
inc
add
sar
xor
cmp
bound
push
inc
mov
add
pushf
cwtl
rcrb
test
jmp
lcall
jns
movsb
shll
imul
and
adc
das
add
or
and
inc
pop
fmull
roll
cmpb
pop
xchg
movsl
orb
sub
mov
fnstcw
push
mov
ljmp
adc
fists
pushf
loopne
aaa
test
lds
nop
stos
imul
push
xor
and
or
dec
shrl
cltd
dec
rorl
mov
cltd
decl
cmpsl
push
movsb
sub
insb
out
dec
out
mov
adcl
in
or
nop
call
dec
stos
bound
out
in
stos
jmp
adc
pop
outsl
test
mov
sub
std
jb
jbe
jne
inc
add
or
pop
xor
bound
fwait
adc
shll
fs
fwait
andl
adc
inc
in
mov
and
in
je
mov
mov
fcompl
js
jnp
dec
add
bound
inc
int3
ficoml
mov
imul
movsb
gs
flds
push
enter
mov
xor
je
sbbb
xor
test
inc
xor
inc
shr
push
or
addr16
mov
movsb
add
dec
out
or
std
mov
xchg
mov
or
push
add
sub
and
add
insb
cwtl
es
fisubl
push
nop
dec
nop
mov
cld
loopne
jne
push
cmpl
cmpb
sub
mov
loope
inc
mov
fdivl
push
xor
fadds
dec
inc
push
imul
dec
inc
fcoms
adc
cmp
mov
jecxz
xchg
sbb
mov
mov
movsb
cltd
fs
stc
mov
fcompl
xchg
dec
and
lods
mov
sub
sub
outsl
std
shll
lods
pop
or
subl
mov
loopne
push
dec
movl
adcb
mov
mov
sbb
pop
push
xchg
cmp
push
rorb
pop
mov
inc
mov
fisttps
lea
cmp
cmp
pop
in
mov
dec
jno
iret
movsb
adc
in
push
dec
pop
rolb
mov
add
movsb
out
and
aam
pushf
inc
ds
sar
int3
sti
pop
movsl
inc
jl
sbbl
push
pop
pop
dec
cmp
push
push
dec
jne
pop
out
into
fsubs
and
iret
sub
mov
out
fidivrs
lods
pusha
jne
add
pop
mov
popf
dec
mov
push
outsl
sarb
lds
int
push
rorl
ficoml
lea
loopne
cltd
test
jl
mov
pusha
push
mov
call
fwait
int3
mov
fadd
dec
fcmove
insb
out
dec
adc
jo
out
insl
mov
push
fs
adc
pusha
ret
pusha
out
out
cwtl
and
test
loopne
test
push
test
std
rorb
bound
adc
push
add
mov
and
sub
and
jnp
test
int3
das
dec
push
add
add
addl
mov
pop
xchg
sub
test
xchg
mov
fs
movsl
fisubrl
jae
inc
push
loop
xor
cwtl
nop
mov
lock
test
adc
jbe
shr
testl
adc
mov
pusha
sub
cmpsb
push
xchg
sbb
fwait
mov
mov
dec
and
xor
sbb
and
xor
pop
pusha
inc
mov
dec
xchg
test
aam
mov
mov
cs
je
js
xchg
dec
cs
add
mov
fcomi
xchg
lods
lods
fstpt
adc
les
dec
xlat
test
sbb
mov
inc
outsl
inc
or
push
nop
adc
mov
push
pop
adc
fadd
adc
cmpb
sub
or
add
mov
jns
shlb
or
aam
in
das
xchg
scas
roll
sbb
fwait
sarb
scas
mov
call
iret
add
les
shlb
ja
cs
ljmp
push
imul
push
dec
adc
adc
inc
aam
enter
mov
imul
rcrb
push
jns
ror
rcrb
lods
loope
xchg
fsubs
stc
or
mov
psraw
mov
xor
push
mov
or
das
push
adc
add
in
mov
sbb
insb
xchg
lods
xchg
or
les
cs
clc
mov
and
or
mov
pop
insl
inc
add
loopne
js
pop
pop
push
les
bound
mov
fdivrs
fmul
les
fdivl
stos
sub
fimull
push
popf
pop
jne
mov
mov
js
fisubs
push
decl
add
js
dec
dec
stos
xor
xor
enter
std
aaa
ret
cmp
or
rorb
orb
movsb
adc
xor
int
nop
and
add
mov
fmull
sbb
gs
arpl
shld
push
inc
aam
add
adc
mov
jb
enter
inc
in
xchg
insl
jg
insl
inc
or
test
push
or
mov
jl
xchg
and
insl
mov
add
add
sbb
test
loopne
and
pop
mov
xchg
je
jbe
lods
les
add
xor
pop
fcoms
faddl
add
and
mov
add
xor
or
add
or
nop
imul
mov
inc
mov
adcb
mov
push
dec
in
mov
addr16
insl
inc
push
lock
cs
pop
enter
pop
add
jo
sbb
add
and
sbb
das
pop
insb
je
sub
dec
addr16
mov
lods
stos
imul
orl
cmp
xchg
mov
adc
xor
leave
and
pop
cwtl
xchg
loope
jb
sbb
adc
cltd
inc
add
push
jo
pop
les
mov
mov
mov
inc
sub
mov
bound
push
adc
or
dec
jo
or
xor
int3
add
add
and
jb
test
notl
xchg
out
and
mov
jge
inc
inc
js
inc
mov
pusha
fimuls
xor
lock
push
popa
push
int3
shll
mov
stc
test
cmp
sbb
nop
or
add
sti
leave
sbbb
notl
pusha
lahf
sbb
mov
adc
and
or
sbb
xor
sbb
stos
mov
mov
pop
repnz
add
mov
cmp
xchg
bswap
push
insb
mov
pop
das
fildl
or
push
mov
and
mov
aam
or
add
cmp
and
aas
iret
jno
andl
add
or
jg
or
mov
inc
inc
or
ss
mov
add
or
in
jecxz
add
mov
and
insb
add
jb
push
nop
in
adcl
data16
rolb
xchg
ret
cltd
mov
aad
lock
lds
sub
pop
xor
pop
movsb
repnz
in
adc
or
mov
rcrl
push
nop
arpl
dec
push
les
mov
push
xor
dec
cwtl
adc
push
mov
lods
les
mov
bound
inc
xchg
cmc
test
clc
rcl
and
pusha
push
inc
aam
pop
rcll
mov
sub
and
in
mov
dec
ret
test
pop
sbbb
jo
cmc
or
push
gs
ret
insl
pop
and
push
nop
mov
dec
or
xchg
dec
mov
fistl
mov
test
adc
inc
add
or
imul
sub
and
push
adc
aam
xchg
leave
jb
loopne
call
sbb
ss
sti
mov
dec
adc
in
cmp
dec
movsb
adc
sbb
mov
jl
in
bound
in
mov
add
sub
lahf
mov
push
pop
enter
push
icebp
mov
mov
les
jo
leave
mov
pop
insl
pusha
push
enter
pop
dec
inc
adc
push
cltd
and
icebp
dec
lret
mov
lea
mov
sbbb
dec
bound
xor
aaa
add
rol
jne
xchg
dec
xor
in
xchg
dec
sahf
leave
mov
nop
mov
popa
mov
insl
mov
dec
mov
jns
aam
enter
xchg
test
or
add
dec
pop
adc
rorb
push
xor
mov
loopne
popa
and
pop
test
orl
int3
mov
push
incl
pop
enter
sub
pushf
inc
bound
aad
test
mov
fiaddl
or
pop
sbb
pop
les
sbb
dec
push
xor
and
mov
shlb
sbb
aas
nop
test
cltd
mov
pop
sub
mov
mov
cmpsl
in
adc
outsl
ja
movsl
aad
pushf
nop
int
sub
fwait
and
dec
loopne
dec
clc
mov
or
xchg
push
push
jns
fdivs
shll
aam
mov
scas
fdivrl
clc
xchg
xchg
and
and
add
iret
cltd
in
pop
sub
icebp
adcb
imul
mov
scas
test
les
adc
sbb
enter
ror
mov
loope
xchg
add
leave
repz
popf
test
cmp
in
adc
add
xchg
dec
cmp
cli
xor
cwtl
push
xchg
ret
ret
push
test
cmp
popa
xchg
add
divl
xor
leave
push
and
mov
add
loopne
aam
fcompl
cltd
loopne
clc
fadds
cmp
cmp
jo
aam
lock
add
push
pop
fwait
in
daa
jecxz
and
dec
mov
hlt
dec
or
aaa
mov
add
jmp
push
dec
xchg
lds
adc
adc
mov
or
hlt
lock
rolb
sbb
jg
sbb
loop
and
incl
inc
adc
fsub
aad
xor
push
jae
lret
shlb
push
inc
and
roll
sub
rorb
sbb
imul
jl
add
add
stc
test
mov
cmpsb
lea
adc
sbb
leave
adc
mov
and
mov
pusha
cmp
xchg
dec
xor
push
mov
add
js
jbe
sbb
sub
push
sbb
dec
clc
cli
insb
inc
and
cmpsb
dec
add
push
cmpsb
or
cli
cmp
push
and
pop
sbb
in
mov
movsl
jae
sti
xchg
jae
fiaddl
in
cli
call
or
test
jno
push
ret
xorb
in
bswap
jo
or
ljmp
jne
pop
cwtl
inc
outsl
pop
cmp
push
test
nop
shrl
inc
outsb
pop
mov
or
pop
add
sub
faddl
lret
iret
call
mov
inc
or
push
fcom
loope
fdivs
invd
inc
push
or
or
imul
xchg
add
sub
pop
loopne
adcl
aas
xchg
sub
in
rorl
enter
push
dec
mov
sub
insl
and
cmpb
and
push
sbb
mov
rcrb
mov
leave
push
test
inc
push
std
and
add
jle
adc
add
jo
dec
push
lret
mov
and
loope
push
and
jecxz
push
rclb
mov
jne
pop
cmp
hlt
xor
es
andl
push
cmp
push
dec
jae
cmovp
insb
push
cltd
push
lods
and
mov
pushf
dec
aas
adc
sub
add
std
je
mov
sbb
xor
in
out
aad
sbb
aaa
jmp
fisttps
sbb
enter
xchg
ret
push
lods
cld
mov
in
in
cmp
pop
xlat
mov
daa
in
add
adc
add
or
inc
add
insb
ds
repz
gs
mov
into
shll
pusha
add
mov
fdiv
aas
fldcw
xlat
std
inc
cs
inc
add
shr
jbe
or
mov
jmp
mov
mov
ljmp
add
fistpl
or
jnp
mov
mov
stos
pop
and
xadd
inc
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
out
ds
push
pop
xchg
jns
out
lods
fs
xor
lcall
outsb
je
jb
outsl
arpl
fs
outsl
jo
sbb
jns
dec
imul
push
insl
es
gs
xor
cs
insb
push
bound
and
pop
push
enter
je
outsl
outsb
push
dec
inc
inc
add
add
aas
scas
divb
adc
add
pop
insl
repz
cmpsb
fs
mov
inc
inc
fldt
outsl
jb
js
je
jb
gs
cmp
or
inc
rcrb
add
dec
add
and
cwtl
jb
cmp
push
pop
jo
je
nop
inc
jne
jb
stos
inc
imul
fldt
outsb
dec
xor
xor
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
bound
pop
mull
daa
dec
outsl
jbe
dec
arpl
push
jo
ja
mov
sub
addr16
dec
jne
xchg
stc
push
push
xchg
roll
jb
insb
dec
popa
jb
push
bound
inc
insb
adc
into
mov
out
jae
xchg
xchg
addr16
lock
fstl
xor
outsb
int
and
daa
push
mov
sbb
jle
fsts
dec
andb
jne
xchg
outsl
pop
dec
inc
mov
das
jo
or
filds
jno
lock
or
cwtl
mov
dec
push
sbb
adc
jmp
daa
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
test
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
add
push
push
push
or
out
ss
pop
pop
pop
pop
je
popa
bound
gs
imul
insb
insl
outsb
sbb
js
ja
xor
jnp
jge
jg
add
inc
dec
imul
sbb
divb
mov
adc
push
call
insb
jae
out
push
jmp
push
push
jne
inc
inc
jnp
test
jge
lock
insl
and
sti
lds
ret
ss
dec
push
push
sbb
aaa
scas
dec
dec
inc
sbb
and
stos
ss
outsl
add
xor
sbb
xor
imul
and
jae
insl
push
mov
cs
mov
and
negb
mov
xorb
and
fs
test
push
aas
out
imul
int
mov
insb
xorb
inc
popa
and
data16
jne
pop
xor
ja
loopne
and
insl
push
xchg
sbb
aas
xor
rcll
dec
rolb
sub
insl
in
sbb
out
es
or
or
and
sub
cltd
lret
imul
sbb
fs
inc
pusha
push
addr16
push
jbe
je
addl
in
ds
fs
popf
jb
loope
mov
mov
mov
rcll
dec
inc
scas
inc
lock
add
sub
arpl
cmp
arpl
dec
popa
sub
mov
fiadds
inc
xchg
sub
in
inc
imul
xchg
imul
or
push
lcall
xchg
inc
push
xchg
idivl
jns
push
fistps
movsb
pusha
push
cs
insl
lock
adc
xor
bnd
aas
xor
hlt
pop
dec
nop
or
dec
add
pusha
out
dec
aaa
ja
or
ss
in
stc
jae
fs
push
hlt
cli
jbe
add
inc
jbe
je
xchg
push
mov
jo
andl
push
and
lds
xor
xlat
outsl
push
or
arpl
cmp
outsl
push
push
xor
inc
aaa
ret
or
mov
dec
xor
imul
in
push
mov
rclb
shlb
leave
nop
inc
insl
imul
cmp
stos
sbb
popa
in
or
xchg
cmp
je
add
push
and
pop
push
cmp
push
pusha
test
addr16
jae
push
addr16
xor
fsubl
sbbb
add
sub
je
cmpl
or
sub
lret
inc
sub
pop
jge
add
jmp
jo
in
push
lods
push
and
cmp
cwtl
ja
lods
vcvttpd2dqy
inc
and
dec
cmp
cltd
fisttpll
lcall
loopne
out
ss
add
ds
in
push
rol
das
lret
jno
icebp
ret
repz
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
push
test
out
xchg
add
add
xor
insl
stc
fldl
js
jae
je
mov
fidivs
dec
pop
add
add
jb
sbb
sub
xor
mov
xchg
adc
adc
add
pop
movsl
jge
add
add
add
and
push
pop
push
push
pop
icebp
pop
or
aaa
ds
push
pop
hlt
and
or
cltd
divl
js
or
sub
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
jmp
into
jo
add
adc
add
icebp
xchg
push
stos
int3
js
jo
xchg
test
jge
add
sub
pushf
mov
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
lret
fmul
scas
pop
push
adc
push
inc
or
xor
js
or
test
dec
add
and
dec
adc
loope
data16
cs
test
out
test
jnp
add
sub
sub
dec
add
inc
scas
in
test
mov
add
or
movsb
stos
mov
and
or
push
movsl
add
add
add
add
ja
or
mov
je
adc
aaa
add
test
mov
pop
rcrl
sub
out
and
jg
loope
addb
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
adc
dec
clc
stc
cli
sti
cld
std
inc
add
lea
adc
lds
rol
aas
jmp
xor
mov
push
fs
cmp
jae
jb
bound
dec
jbe
cmpsl
mov
dec
popa
mov
lods
xchg
repnz
pop
fstpt
lea
dec
mov
outsl
js
push
push
inc
push
insb
rolb
push
dec
dec
and
insb
fistpl
outsb
out
mov
dec
jl
daa
add
insb
in
dec
imul
idivb
inc
mov
imul
les
inc
jns
daa
pop
fsubrs
push
test
and
mov
aad
lcall
addr16
cmp
orl
sub
arpl
add
inc
jbe
cmp
fisubs
jns
and
data16
mov
inc
sbbb
xchg
sti
cmp
push
pop
or
mov
pusha
xor
es
dec
and
mov
pop
dec
cwtl
xchg
cmp
cmp
sub
sbb
cmp
call
ja
imul
ja
adc
adc
or
xchg
inc
push
push
push
push
dec
testl
repnz
js
stos
cmp
cmp
fildll
or
js
lods
mov
imul
call
and
outsl
inc
push
shll
fs
in
push
pop
mov
xchg
jg
popa
mov
shll
mov
pop
jns
pusha
push
pop
das
je
cmp
xchg
daa
xchg
cmpsl
cmp
popw
pop
cmp
repz
es
cmp
push
das
push
sub
sub
inc
jl
jle
imul
addr16
loopne,pt
divl
push
cmp
scas
xchg
inc
jmp
cmp
call
xlat
stos
pushf
fimull
pop
cwtl
jb
sbb
push
outsb
jmp
xorl
das
jo
ss
xor
mov
xchg
push
lods
ds
cmp
fs
xor
sub
sub
jl
lahf
sub
mov
jns
div
inc
add
jns
dec
inc
xor
in
dec
xchg
jmp
cmp
cmp
fs
sub
push
repz
inc
add
push
or
imulb
iret
add
hlt
out
lock
push
aas
sub
sahf
in
call
cmp
xlat
insb
push
mov
fs
jnp
repz
push
push
aam
fidivrs
cmp
int3
push
enter
shl
in
mov
sahf
out
sahf
test
mov
sahf
out
je
push
cmp
repz
repz
out
fdivrl
iret
pop
cmp
lock
aam
out
sahf
sarb
out
jo
inc
and
in
sahf
out
ficomps
lods
andb
or
jge
jmp
push
test
cmpsl
pop
aam
push
movsb
aam
lcallw
push
outsb
push
xor
add
dec
sub
stos
ret
cmpsl
pop
push
scas
xchg
fistpl
insb
fs
sbb
je
into
xor
xor
es
jg
mov
sub
add
push
and
sarb
inc
incl
dec
jae
lret
mov
pop
stc
mov
dec
inc
push
dec
inc
dec
xor
inc
dec
dec
dec
push
lret
enter
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
sub
adc
pop
lret
call
rclb
mov
jnp
std
das
scas
xor
jnp
inc
loop
mov
ds
pop
adc
in
stc
pop
clc
lret
sbb
jb
xchg
jge
arpl
enter
cmp
adc
dec
scas
jp
adc
fisubrs
mov
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
popa
shrl
andb
shrl
ljmp
outsb
mov
xchg
dec
aam
lods
loope
dec
pop
push
xor
cmpb
or
icebp
and
in
pop
pop
repnz
stos
jle
aas
and
es
sbb
add
xchg
sub
ds
xchg
insb
mov
jns
mov
dec
test
push
mov
jo
push
inc
inc
or
outsb
jbe
and
add
push
lock
jae,pn
aas
sub
mov
cmp
sbb
dec
pop
add
add
dec
and
aas
into
das
inc
dec
and
push
sbb
dec
and
add
sbb
imul
dec
xor
pop
inc
mov
dec
add
dec
dec
inc
pop
cmp
idivb
mov
jb
jbe
cmp
sbb
aaa
sbb
xchg
add
pop
cmp
sbb
and
inc
sbb
dec
dec
sub
mov
stos
push
pop
cmp
aas
cmp
pop
sbb
mov
push
add
push
pop
or
sub
adc
mov
ljmp
push
adc
sub
cmp
pop
or
sbb
inc
pop
pop
add
out
dec
pop
sub
jnp
out
decl
push
pop
lsl
cmp
inc
cmovo
pop
cmp
pop
push
jne
fisttps
inc
pop
inc
or
cmp
push
cmp
adc
push
inc
pusha
add
xchg
jge
insl
dec
adc
push
push
sbb
aad
dec
repnz
sbb
cmp
or
dec
sbb
mov
je
loopne
xor
sub
pop
xor
cmp
push
insl
mov
pop
cmp
cmp
mov
xor
sbb
inc
sbb
dec
cmp
fisubrl
add
dec
xor
fucom
pusha
imul
xor
sub
subl
add
jle
insb
add
push
into
dec
sbb
adc
js
sub
add
cmp
movsl
jb
push
push
cwtl
mov
sti
sbb
cmp
es
pop
push
gs
lcall
dec
or
push
inc
pop
sub
pop
inc
dec
sbb
divps
stc
cmp
pop
pop
paddsw
dec
lock
inc
inc
inc
push
inc
or
jg
scas
testb
ja
inc
pop
cmp
dec
ss
in
icebp
inc
pop
add
sub
add
lcall
fs
adc
dec
cwtl
in
push
cmp
lock
out
lods
or
adc
push
xor
mov
ds
push
push
push
jo
mov
xchg
lock
jle
xor
push
inc
pusha
xorb
cmp
into
out
shlb
dec
and
add
idivl
hlt
push
scas
sbb
cwtl
xchg
loopne
cmpb
or
sbb
push
mov
xor
cmp
outsl
insl
mov
loopne
pop
xchg
popa
es
push
and
enter
or
int3
lret
add
imul
fsubp
ja
push
xor
cvttps2pi
sub
dec
push
scas
loopne
lock
shl
sbb
push
pusha
push
mov
jns
aaa
loopne
adc
inc
nop
mov
rcl
ss
jo
stc
mov
pop
push
inc
cs
lock
push
shlb
pop
jl
loopne
pop
sub
add
xor
rcl
sub
pusha
cmp
scas
sbb
sbb
push
jmp
inc
add
cmp
xor
ss
stos
xor
je
pop
cmp
inc
out
jo
jbe
mov
addps
push
inc
push
sbb
push
inc
aaa
add
nop
or
jmp
sti
jp
inc
fisttpll
inc
and
pop
notb
pop
cmpsb
push
add
add
cmp
clc
icebp
push
int
mov
cmp
in
movsb
pop
push
jb
cmp
pop
das
push
insb
mov
mov
push
cmp
push
xchg
inc
lock
cmp
lods
sub
mov
pusha
sub
inc
rcpps
mov
pop
cmp
dec
pop
inc
sbb
mov
push
and
imul
push
dec
out
cmp
leave
aam
mull
ret
mov
xor
out
pop
sbb
pop
push
ss
dec
add
arpl
jge
fs
subb
cmp
outsb
scas
dec
dec
mov
pop
pop
sbb
rcrb
daa
pusha
popa
push
pop
scas
out
loope
ret
movlps
jae
sbb
xor
cs
xor
xor
inc
inc
das
push
add
push
cmp
cs
sub
cs
and
clc
pushf
add
mov
cltd
mov
xor
sub
cwtl
gs
or
daa
and
inc
in
sub
cmp
inc
dec
and
adc
pop
aas
sbb
ret
jle
mov
scas
xor
xor
rcrl
add
outsl
add
xchg
loop
xor
loope
dec
mov
dec
push
add
or
sbb
stc
and
outsl
das
adc
sub
push
push
xchg
xor
add
sbb
push
add
adc
xor
xchg
inc
mov
clc
pop
mov
add
jae
in
add
xor
dec
push
imul
xor
das
dec
aas
out
pop
pop
push
mov
scas
daa
push
adc
xor
in
mov
mov
mov
sbb
loopne
xor
sbb
jb
insl
lahf
mov
iret
dec
mov
divb
movsb
sbb
mov
or
or
pop
lcall
ds
or
jbe
and
push
cmpsl
pop
cli
or
sbb
hlt
inc
or
add
mov
cmpsb
ret
cmp
andnps
lock
or
jg
insb
jne
sub
sysret
lcall
sub
dec
xor
in
dec
inc
or
shrb
cmpsb
mull
mov
inc
jo
push
cs
mov
addb
or
aad
sub
or
push
xor
bound
xchg
push
or
dec
sbb
loop
or
sbb
mov
inc
daa
add
fildl
mov
pop
lods
mov
cmp
daa
add
push
fdivs
cmp
jb
test
xor
fldcw
add
leave
or
pop
icebp
inc
mov
mov
dec
shl
inc
dec
lods
cmp
and
xor
imul
xorl
pop
aas
adcl
aas
pop
cld
pop
dec
dec
aaa
das
aaa
push
cmp
pop
pop
push
sbb
jmp
mov
and
inc
pop
push
jae
popa
push
call
xor
stc
pop
inc
or
inc
pusha
or
cs
mov
xchg
je
jns
popa
jne
push
into
sti
sub
add
sahf
int3
loop
and
add
decl
dec
decl
adc
xor
dec
push
sbb
jo
or
cmp
sbb
xlat
ret
push
cltd
or
sub
add
and
out
pop
push
icebp
lahf
sub
lods
jp
mov
mov
xlat
daa
mov
inc
push
or
or
addb
ret
add
pop
daa
xor
push
lea
push
inc
into
xchg
dec
jg
inc
das
out
and
daa
das
cwtl
push
mov
adc
jae,pn
imul
cmovge
push
cmp
scas
or
adc
adc
cmpsl
into
dec
sbb
xor
sub
mov
push
data16
lahf
je
push
insb
outsl
jb
bound
inc
or
push
push
je
add
push
push
cmp
jb
mov
and
mov
and
and
or
jo
add
dec
jae
adc
mov
mov
idivl
adc
push
push
xor
mov
xor
sti
jg
or
adc
xor
sub
adc
loop
daa
mov
push
dec
pop
inc
cmove
pop
cmp
sbb
bts
sub
inc
shlb
inc
xorb
sbb
cmovle
push
dec
cmpsb
or
push
cmp
dec
nop
fidivs
mov
push
shl
xor
or
push
push
add
cmp
cli
cmp
mov
sub
dec
push
push
add
mov
push
outsl
xor
ljmp
adc
sub
xor
jbe
mov
adc
or
inc
add
adc
cmpsb
shrb
inc
push
popa
cwtl
sarl
enter
pusha
xor
pop
add
inc
fiaddl
dec
sbbb
loop
addr16
push
pop
pop
and
xor
sbb
fs
cli
push
push
pop
or
and
mov
mov
add
sub
loop
mov
sarb
add
pop
pop
and
pop
inc
sub
jl
cmp
cmp
or
outsb
adc
sub
adc
add
or
dec
cmpsl
sub
dec
mov
adc
add
adc
mov
dec
and
fidivs
adc
push
push
inc
pop
call
repz
cmc
daa
jo
mov
imull
sti
cld
push
std
daa
and
push
jno
stos
mov
mov
pop
das
dec
loop
lcall
in
push
jo
ja
dec
push
cli
pop
push
das
and
cwtl
dec
push
gs
mov
sub
xor
xor
sbb
or
in
enter
dec
out
push
rolb
xor
push
dec
ret
pop
add
fimuls
or
jnp
mov
aaa
jg
pop
lock
das
and
ret
add
adc
sbb
push
pop
ja
or
or
cltd
cmp
pop
cmp
adc
sbb
inc
outsl
xchg
fmuls
adc
and
push
mov
rolb
fstps
dec
pop
pop
notl
adc
push
mov
iret
dec
mov
pop
dec
mov
daa
xchg
dec
testb
jno
and
testb
dec
sub
and
jnp
adc
mov
enter
push
loope
aaa
mov
and
xchg
adc
outsl
pop
popa
pop
daa
xor
adc
push
das
dec
sub
into
fstps
and
cmp
sbbb
dec
sub
movsl
push
lcall
adc
xchg
sub
pop
gs
push
loopne
call
cs
outsb
pop
push
push
add
cmp
sub
xor
add
insb
jne,pt
xor
or
js
arpl
addl
xor
push
jg
adc
inc
or
sub
add
cmp
or
push
add
xor
fbstp
add
xor
dec
push
dec
cmp
cmpsb
add
dec
ds
sub
pop
push
sbb
add
test
sub
movsl
sub
popaw
jo
mov
call
sbb
pop
out
lds
fimuls
xor
or
adc
outsl
in
ret
inc
cmp
and
mov
rcrb
add
adc
add
push
mov
adc
sbb
sti
push
and
and
sbbl
cmp
push
push
imul
popf
push
xchg
testl
push
lea
sbbb
adc
pusha
fldt
sub
add
push
dec
outsb
jnp
add
sub
mov
mov
test
push
xor
push
or
xorl
dec
movsl
movsl
push
aaa
adc
cmp
and
sbb
stos
mov
and
mov
sbb
mov
sbb
mov
daa
outsl
jo
push
dec
fwait
and
push
andl
sub
add
sub
and
xlat
clc
pop
or
push
adc
or
stos
dec
repz
xor
xchg
dec
xchg
push
xor
fs
add
pop
stc
mov
adc
xchg
scas
xchg
push
das
push
xor
inc
daa
popf
dec
dec
lods
adc
leave
add
pop
imul
push
or
add
inc
or
add
push
and
xorb
pop
add
jg
or
scas
sbb
push
ja
push
add
sub
loop
xor
es
inc
and
mov
cmp
cmpsb
add
push
xchg
or
pop
add
pop
push
test
cs
scas
add
sbb
cmp
and
sbb
dec
test
rolb
sub
pushf
popf
push
xor
pop
adc
bound
daa
mov
sub
fisttpl
xor
mov
inc
sub
xchg
add
jns
add
push
pop
or
xor
push
maxps
movb
xor
push
push
negl
mov
insb
fadds
icebp
aaa
mov
test
pop
push
xchg
sub
aaa
es
mov
cmp
ss
inc
pushl
add
iret
ja
fs
push
std
push
cmp
pop
gs
push
shlb
std
push
push
bound
add
pop
add
imul
and
inc
popa
stos
pop
test
inc
jb
mov
or
mov
repz
jecxz
loopne
inc
add
mov
xor
mov
rolb
rep
lahf
xchg
shll
ds
dec
jnp
fcmovne
ss
rcl
push
nop
mov
out
repz
lock
dec
fbstp
out
data16
jmp
test
add
pop
loop
dec
push
dec
dec
pop
pop
xor
shlb
mov
mov
scas
mov
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
nop
cli
inc
ds
pop
sbb
insb
inc
jle,pt
jo
fsubs
jmp
sbb
pop
test
xor
dec
xchg
pop
shl
lds
in
dec
push
adc
adc
mov
aaa
and
lock
xor
dec
cmp
addb
inc
cmp
and
inc
pop
push
ret
rcr
add
inc
jb
sub
adc
imul
xchg
out
pop
lock
loopne
in
dec
dec
rol
das
and
daa
iret
in
cltd
mov
pop
mov
pushf
cmp
addb
jae
leave
dec
pusha
push
dec
loopne
add
inc
inc
mov
insb
inc
js
jae
in
scas
cmp
push
pop
add
push
or
int3
loop
cs
insl
and
pop
or
jg
call
jnp
cmp
xor
sub
xor
inc
xor
inc
xor
inc
push
xor
inc
xor
popa
xor
xchg
stos
jne
cmp
insb
push
outsb
add
in
test
push
jb
sub
and
xchg
das
js
or
pop
jno
shrb
loope
fildll
jp
cmp
je
dec
push
jb
jo
add
je
bound
loopne
clc
lret
mov
cvtdq2ps
jo
insb
push
and
and
xlat
addr16
fcomps
and
inc
push
das
jbe
insl
sti
mov
sbb
rcrb
add
es
add
mov
out
xchg
sahf
add
lds
mov
orb
daa
dec
inc
out
or
loopne
dec
cli
aaa
mov
or
pop
dec
test
adc
sbb
cmp
loopne
sbb
dec
shlb
jbe
xchg
cli
imul
dec
ss
pop
aas
or
and
inc
aas
loop
ja
xor
jns
or
add
mov
lahf
push
add
insl
xchg
xchg
loop
nop
pop
scas
and
test
imul
in
dec
inc
das
add
shrl
sti
xchg
push
xor
dec
dec
mov
leave
add
push
cs
inc
add
fistpl
sub
pop
das
pop
add
in
rcll
popa
push
pop
out
xor
repz
incl
je
int
into
cmp
sahf
lret
fisubs
mov
inc
push
cld
mov
jmp
scas
push
out
push
push
push
nop
lods
popa
inc
in
in
jnp
int3
xchg
sbb
lcall
pop
mov
es
aam
ds
push
push
mov
sbb
and
cmc
cmpsb
mov
sti
mov
adc
cwtl
dec
push
dec
push
adc
fstpt
inc
mov
test
mov
test
scas
aaa
push
pop
cld
push
scas
mov
call
cli
mov
dec
dec
inc
aad
lahf
pop
mov
pop
sbb
adc
into
std
cmp
push
adc
and
mov
push
out
test
repz
cmpsl
ret
or
iret
repnz
pop
or
inc
nop
pop
sti
fmulp
cmpsl
xchg
out
sbb
sahf
push
adc
daa
negb
dec
adc
pop
push
divb
repz
ret
mov
push
dec
push
pop
lcall
scas
sbb
int
pop
sbb
sbb
cmpsb
sub
sbb
jl
iret
repz
pop
sub
sahf
idivl
jl
pop
rorb
in
cmp
push
cmp
sti
push
xchg
aaa
clc
mov
and
out
mov
xlat
rclb
xor
inc
iret
repz
imull
dec
push
repz
negl
dec
dec
push
pop
test
jl
jns
idivb
lret
xchg
mov
out
cmp
dec
subb
jns
hlt
movsb
push
dec
adc
out
iret
in
sbb
pop
in
dec
cmp
mov
clts
cld
testl
add
insb
sahf
es
ds
repz
test
in
into
adc
shrl
push
jg
iret
jns
out
lock
xor
fnstcw
mov
adc
out
sahf
cmpsl
cmp
jo
cmpsl
jns
jge
push
inc
pop
push
push
test
out
enter
mov
shll
xchg
aad
pop
dec
sbb
scas
decl
add
cs
adc
stc
add
adc
loop
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
push
sub
inc
mov
dec
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
pop
push
pop
push
push
inc
dec
pusha
pop
or
inc
es
fisubrl
outsb
cmp
sti
ss
scas
aas
inc
push
je
pop
lods
lcall
ds
or
aaa
push
mov
pop
sub
push
fisubl
push
fidivrs
divb
dec
cmp
fisubrl
je
push
rolb
mov
insl
pop
cmpsb
dec
andl
in
lea
pop
je
scas
xor
push
fistps
loop
out
or
das
push
repnz
mul
sbb
inc
imul
pop
ja
push
pop
retw
outsb
xor
dec
or
dec
mov
ja
cld
pop
pushf
das
cwtl
lock
call
aam
and
and
pop
xor
outsl
test
mov
ds
add
das
adc
nop
mov
popa
insl
jo
xchg
pop
insb
je
push
push
stc
sti
leave
addr16
jo
jae
es
outsl
aas
js
xor
test
push
sub
lods
fstpl
lcall
cld
call
xor
xor
xor
xor
xor
cmp
sub
in
cmp
push
xor
xor
cmp
push
add
add
in
dec
sbb
or
and
std
fimull
dec
or
sbb
pop
add
lock
push
dec
or
xor
add
cmpsb
or
jne
mov
xchg
add
daa
pop
sub
or
or
or
adc
push
in
xor
call
mov
sub
outsl
cmp
dec
xchg
sub
ljmp
jbe
jne
pushf
jp
pop
popl
sbb
and
repz
ret
and
dec
enter
xchg
dec
push
pop
dec
or
lds
sbb
dec
cmp
or
cmp
push
cmp
ja
scas
jbe
in
push
movsl
inc
int3
data16
cltd
sbb
mov
loope
push
fwait
pop
sbb
and
inc
add
adc
mov
repz
test
inc
push
aas
jbe
and
push
jl
rcr
xor
dec
or
sarb
push
push
sbb
repz
test
sahf
mov
subl
add
sub
mov
sbb
cmp
mov
and
pusha
mov
or
xor
insb
stos
popa
inc
rcl
inc
aaa
xchg
adc
lea
pusha
lcall
mov
add
daa
push
das
jo
lea
or
mov
mov
xor
fidivl
lahf
scas
sbb
cmp
lea
and
mov
pop
cmp
loopne
xchg
dec
lea
movsl
insl
daa
lods
daa
bound
inc
loope
das
lea
pop
das
negl
iret
add
pop
inc
cmp
idiv
pop
push
pop
inc
test
cmp
fldt
imul
popa
daa
pop
adc
push
das
dec
sub
push
pop
pop
popf
jecxz
pop
test
pop
dec
pop
repnz
dec
shlb
inc
loop
dec
sub
ja
pop
loopne
int3
pop
pop
rcrl
pop
mov
sub
daa
lea
xchg
insl
or
outsb
popl
and
add
outsl
int
addr16
pop
jg
mov
movsl
push
test
mov
lahf
push
mov
push
pop
mov
shrl
pop
mov
xor
aaa
outsl
or
dec
mov
push
adc
push
outsl
push
leave
sub
ret
dec
js,pn
jl
inc
xor
jl
movb
test
aas
out
iret
mov
xor
or
mov
push
cmc
mov
or
sub
js
mov
add
xchg
outsb
cmp
clc
pop
mov
xor
aad
outsb
ficoms
xchg
add
cmpsl
shrl
jecxz
gs
push
inc
sub
jno
test
pop
sbb
sbb
es
push
dec
xor
ljmp
je
cmp
das
scas
xchg
sbb
daa
pop
sbb
xor
or
loope
add
pop
out
and
iret
test
fcoms
fsubl
pop
or
sahf
call
ds
sub
popa
test
in
push
push
aaa
cmp
ds
data16
pop
jb
push
filds
dec
imul
adc
pop
adc
xchg
mov
shll
cmp
sub
les
test
xor
push
push
inc
popa
inc
into
add
push
push
pop
movsl
ret
int3
xchg
or
or
sbb
outsl
or
dec
pusha
dec
dec
aaa
xchg
dec
and
icebp
inc
pop
mov
adc
scas
jb
cltd
xchg
pop
pop
add
add
sub
lock
sbb
or
das
push
add
test
adc
add
les
rorl
aas
les
gs
adc
pop
fcmovb
mov
xor
jmp
or
adc
mov
sub
dec
sub
and
xorb
cmp
push
sbb
xor
dec
mov
pop
xor
cmp
jns
inc
pop
dec
lret
xchg
inc
ja
mov
aas
arpl
loopne
dec
push
pop
sbb
dec
push
test
xchg
adc
sbb
ret
test
sbbb
dec
or
and
xor
fcoms
testb
cmp
xor
in
rorl
aas
enter
sub
adc
xor
cmp
or
rorb
data16
dec
inc
test
adc
lret
loopne
inc
and
or
ljmp
cmp
sbb
es
xor
inc
das
inc
scas
test
sbb
fdivl
push
pop
inc
pop
ja
icebp
adc
pop
sbb
inc
xor
or
and
icebp
lds
insl
cmpsl
inc
mov
pop
pusha
ret
fildll
pop
jmp
and
repnz
xchg
sub
pop
popa
cmpsl
rorl
or
push
cmp
out
sbb
push
push
adc
inc
inc
jl
push
pcmpeqd
rolb
xchg
mov
pusha
mov
daa
jo
fmull
sbb
mov
aas
xchg
push
pop
imul
inc
aas
xorb
adc
mov
bound
scas
out
repz
inc
mov
pop
adc
adc
push
lods
xor
fistl
pop
add
ds
push
pop
push
jg
lcall
cmovb
cmp
dec
cmp
pop
xor
inc
pop
push
pop
aaa
adc
or
dec
cld
pop
pop
comiss
push
dec
cmp
or
sub
inc
das
aas
aas
push
pop
pop
push
push
push
and
adc
add
or
push
cmp
adc
sub
dec
push
roll
pop
repnz
push
mov
out
pop
sub
sub
and
adc
pop
dec
mov
push
sti
jg
sbb
sbb
cmp
pop
cmp
adc
cmp
pop
pop
lcall
sbb
dec
push
cmp
sbb
or
dec
cmp
push
or
adc
call
xor
xor
sbb
or
adc
adc
daa
mov
add
sub
jne
push
cmp
in
mov
dec
or
popl
xor
and
das
cwtl
pusha
cmpsl
cmp
dec
dec
push
sub
mulb
cmc
rcrb
mov
push
mov
addr16
adc
sub
aad
adc
add
sbb
adc
repz
add
dec
xor
push
mov
sub
repnz
sub
dec
stc
xchg
push
push
dec
test
push
outsl
inc
jo
inc
sub
xchg
add
pop
dec
les
pop
pop
pop
sub
xchg
roll
pop
adc
lock
push
inc
shlb
inc
cmp
push
out
int3
mov
and
push
dec
inc
dec
pushf
inc
and
xlat
add
or
xor
outsl
mov
push
rcrb
outsl
into
scas
dec
ret
inc
sub
add
add
pop
push
push
push
daa
inc
mov
dec
sub
aaa
pushf
pop
jo
push
aaa
and
push
shlb
sbb
aas
inc
inc
rcrb
ja
pop
outsb
in
orl
in
mov
cmp
pop
push
pop
and
mov
adc
adc
mov
cli
cmp
cmp
xor
in
push
xor
inc
add
xor
xor
xlat
popf
in
pop
xor
xor
adc
out
xor
and
aaa
inc
push
inc
cs
scas
fldcw
inc
ss
cmovb
pop
ss
test
or
lahf
ss
and
incl
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
lcall
stos
cwtl
stos
pop
fmuls
adc
jge
push
je
mov
sbb
incl
je
fwait
rol
fwait
in
inc
mov
ud0
pushl
and
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
incl
mov
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
ljmp
push
jae
gs
leave
ret
sub
xchg
mov
data16
decl
mov
call
cltd
test
push
push
shll
ja
decl
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
dec
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
ljmp
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
push
mov
push
xchg
jb
jg
scas
jp
outsl
and
cmp
jae
loopne
pop
inc
inc
pop
cmp
cmp
inc
dec
and
push
xor
mov
pop
inc
jno
aas
and
or
push
decl
inc
jne
sub
xor
inc
imul
push
aaa
jnp
jge
sub
cmp
insb
pop
and
decl
push
dec
daa
imul
cmp
inc
ds
push
mov
cmp
push
shlb
or
es
add
or
pop
add
add
cmpsl
ret
scas
bound
adc
cli
inc
aas
add
push
out
out
adc
popf
sub
cltd
mov
pop
xchg
pushf
fnstenv
dec
pusha
ss
dec
into
push
scas
in
add
push
in
cmp
enter
sbb
orb
imul
int3
mov
mov
sbb
cmp
cwtl
cmp
orb
mov
inc
adcl
adc
aas
jmp
sbb
push
jp
iret
cmp
add
push
and
mov
inc
push
pop
pop
xor
sbb
sahf
dec
mov
push
sbb
je
loope
stos
fsubs
sbb
imul
sbb
add
mov
inc
mov
xor
and
add
xor
inc
push
sbb
xor
push
scas
negb
andb
std
mov
rorl
sub
dec
add
xchg
mov
sbb
xchg
outsb
pop
inc
nop
mov
add
pop
fs
mov
stos
mov
jecxz
out
inc
xor
mov
cmp
mov
xor
mov
jmp
xor
push
inc
ljmp
adc
out
adcl
outsl
fistps
and
or
push
fcoml
test
xchg
push
sub
lds
or
or
mov
test
or
add
cmp
je
xor
xor
xor
jae
jbe
jle
insl
gs
cmp
push
mov
jno
mov
lret
and
push
inc
aad
sub
idiv
xor
insl
cmp
aad
loop
cmp
dec
out
jno
aad
es
pop
inc
outsl
insb
add
push
popa
je
jecxz
aaa
jle
mov
sub
idivl
aaa
push
cmp
pop
adc
push
sbb
inc
out
push
gs
pop
jmp
push
out
sbb
xor
or
movsb
xchg
inc
les
outsb
test
mov
xor
and
xor
les
inc
cmpsb
pop
sbb
pop
and
fs
fidivrs
and
ja
fcomp
dec
dec
cmc
cmp
rorl
jb
imul
stos
sbb
mov
and
mov
ds
lds
push
sbb
lret
or
clc
pop
mov
inc
insb
pop
das
pop
and
dec
jle
push
push
or
dec
inc
aaa
push
fcoms
subl
adc
push
dec
popa
dec
or
push
insl
lods
pop
push
data16
jb
pop
adcl
add
pop
inc
jne
mov
xchg
pop
scas
gs
xor
sbb
xor
and
enter
test
dec
das
and
mov
bound
test
rcl
ds
aaa
push
test
jge
push
negb
adc
push
adc
or
call
cmp
and
daa
lahf
movsb
rcrb
loop
fs
and
imul
jp
stos
push
outsl
imul
sbb
push
cmpsb
inc
daa
inc
out
push
and
xlat
add
xchg
inc
outsb
test
icebp
ror
out
push
std
or
incb
rcrb
scas
add
arpl
and
cmp
or
rclb
rcl
dec
or
sbb
adc
test
cmp
dec
push
popf
push
dec
mov
cmp
mov
andl
pop
lahf
and
or
inc
inc
inc
and
inc
sahf
ds
pop
stos
inc
popa
nop
jbe
xor
mov
cli
jb
jg
mov
subb
and
or
iret
scas
pop
and
lea
or
outsl
dec
xor
xchg
jle
push
push
xchg
xor
inc
dec
or
push
xorl
dec
push
aaa
inc
aaa
dec
imul
shlb
insb
adc
mov
imul
cmp
insl
fidivrl
adc
out
pop
pop
arpl
pop
stos
rolb
push
inc
sbb
sbb
fs
pop
dec
pop
movsl
mov
aam
ss
pop
repz
push
dec
popa
cli
cs
sub
roll
inc
testb
out
stos
or
std
xor
cmpsl
pop
inc
addb
rorb
lock
add
cmp
aas
pushf
aas
add
sub
inc
dec
inc
pop
fistpl
lock
inc
and
inc
add
or
loopne
data16
cmp
ficoml
jne
cmove
push
push
jne
or
push
sub
pop
outsl
xchg
mov
stos
jb
sub
adc
pop
and
addr16
popa
lret
mov
adc
xor
xchg
mov
inc
inc
aaa
nop
jbe
cmpsb
punpckhwd
dec
outsb
push
sub
pusha
mov
rol
adc
mov
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
pop
repnz
xchg
mov
jb
gs
push
stos
fisttpl
daa
inc
je
mov
pop
daa
dec
pop
or
push
dec
jb
inc
inc
add
lret
xor
lcall
loop
and
enter
jle
ret
add
mov
mov
and
mov
adcl
mov
or
ret
jb
add
sub
mov
adc
push
push
out
insl
pushf
ret
xor
sbb
outsb
jnp
scas
jae
pop
addr16
push
dec
add
add
out
je
add
push
push
push
shl
inc
pop
add
cwtl
xor
out
cs
jbe
add
pop
inc
ja
cmp
cmp
idivl
xchg
sbb
gs
lahf
dec
or
pop
rcrb
or
or
or
pop
add
in
cmp
xchg
out
add
pop
sub
and
dec
dec
mov
mov
inc
cmp
inc
inc
inc
add
and
inc
mov
push
or
jge
add
add
jns
inc
pop
and
arpl
add
xchg
mov
sarl
xor
cmc
popf
or
push
inc
cmp
push
push
lahf
lea
aaa
sti
push
xchg
pop
or
cmpsl
pusha
sbb
pop
stos
arpl
ret
pop
push
sub
test
in
or
loop
sbb
dec
adc
pop
mov
ret
fsubrs
popf
mov
outsl
push
push
mov
dec
add
push
or
call
outsl
or
je
sub
mov
dec
push
push
push
das
xor
xor
dec
addr16
into
push
adc
sbb
inc
mov
inc
aas
into
stos
mov
push
jb
inc
addr16
inc
outsw
insl
pop
xor
dec
cmp
inc
divb
das
push
mov
ljmp
inc
mov
outsb
jmp
lret
sbb
cltd
lods
push
testl
fwait
dec
mov
outsl
imul
push
movsb
mov
outsb
mov
push
imul
lds
nop
out
and
push
out
inc
adc
pop
sahf
out
sahf
sbb
push
jl
out
andl
jl
iret
rorl
or
xchg
flds
add
add
pop
fldt
or
adc
sbb
data16
fisubs
sub
xor
inc
mov
neg
jnp
mov
mov
mov
insb
ss
int
xchg
sbb
sub
add
data16
das
or
adc
mov
insb
ds
add
add
fwait
int
push
push
dec
str
mov
insb
or
and
das
incl
sbb
xchg
or
pop
aas
mov
orb
dec
inc
xchg
cmc
cmpsl
outsb
xadd
cmc
inc
aas
add
ja
mov
inc
fidivs
arpl
lock
adc
cmpb
aas
clc
outsl
fcmovnb
mov
pop
pop
inc
jno
inc
add
sahf
add
push
jl
inc
jg
dec
add
divb
add
xchg
mov
dec
inc
xor
cs
inc
pop
cmp
into
xor
outsl
in
push
addr16
and
daa
add
out
cmp
fsubl
jo
mov
clc
outsb
mov
inc
aaa
or
add
sbb
push
lds
divb
aas
repz
fsubrs
addr16
outsl
pusha
sbb
pop
inc
daa
dec
inc
xchg
sub
mov
sub
sub
fs
es
js
stc
sahf
xlat
out
push
sub
lock
lods
repz
dec
push
mov
les
cmpsl
stc
cmp
in
nop
je
dec
ds
repz
pusha
inc
sub
dec
jns
out
mov
ds
sahf
ja
out
dec
dec
push
fs
ds
jns
adc
sbb
inc
imul
dec
inc
sbb
sub
add
pop
add
out
call
jo
jae
scas
cs
add
mov
repz
lcall
xchg
out
and
jnp
dec
mov
pusha
hlt
push
arpl
jae
js
aaa
out
pop
inc
mov
add
cmpb
aam
lods
sub
xchg
popa
pop
leave
add
mov
pop
and
scas
fs
enter
dec
add
orb
push
pushf
dec
insb
and
add
and
push
xor
inc
and
pop
jb
add
dec
leave
and
cmp
test
pop
add
outsl
cmp
push
repnz
mov
push
lods
xchg
pushf
scas
fadds
xchg
add
sbb
daa
push
xor
xor
in
jns
dec
test
dec
or
pushf
push
fs
pop
push
lods
fs
scas
add
xchg
or
insb
outsl
out
xchg
sub
orb
mov
decl
leave
aad
xchg
dec
outsl
fcomip
and
and
aam
push
js
push
push
xchg
cmc
dec
sahf
out
dec
loopne
clc
dec
nop
pop
xor
sbb
mov
loopne
ficomps
fmull
sbb
push
adc
mov
xlat
or
add
andl
popa
and
ss
xchg
out
sahf
dec
lods
add
xchg
fsubrl
and
xor
out
dec
push
adc
outsl
and
nop
push
pop
dec
pop
and
mov
add
test
add
cmpsl
enter
push
dec
jo
fcom
cmpsl
test
push
aaa
push
lods
jb
iret
cmpsb
add
faddp
mov
inc
dec
pop
push
push
pop
mov
add
inc
lods
imulb
aaa
mov
outsb
imul
mov
lahf
cmpsl
ret
inc
push
pop
xchg
push
jg
dec
jnp
cmp
and
mov
mov
decl
pop
sbb
add
hlt
xchg
adcb
sbb
je
test
ja
enter
sbb
mov
mov
push
outsl
jnp
adc
adc
pop
test
or
push
jecxz
jl
hlt
push
push
fs
dec
mov
out
xor
test
cld
push
loopne
jo
sub
or
jo
or
hlt
sub
dec
mov
pop
pop
and
or
int3
push
fcoml
cmp
xchg
and
add
daa
pop
lock
or
xchg
adcb
and
push
lahf
mov
and
pushf
push
pop
and
jbe
push
mov
sbb
and
out
fidivs
add
cmp
dec
push
push
scas
pusha
push
popa
addl
call
mov
shlb
and
xchg
xorl
cmp
icebp
dec
shlb
and
ret
or
push
out
sub
xchg
fs
sahf
or
je
xor
mov
mov
es
cmp
lock
enter
adc
add
push
es
and
sub
add
rorb
test
sub
push
leave
mov
mov
push
das
outsl
add
pop
nop
ss
jecxz
mov
xor
call
roll
or
aaa
and
cs
addl
ret
dec
iret
mov
mov
popa
xlat
add
iret
daa
and
sub
daa
or
push
sub
pxor
pop
push
push
les
mov
mov
sbb
lods
dec
pop
cmp
mov
test
push
cmpsl
jno
scas
inc
or
and
in
dec
aas
or
push
hlt
xchg
popa
jmp
outsl
add
or
rcrb
dec
fbld
push
enter
add
mov
add
roll
pop
lahf
insb
jo
ret
lock
pop
pop
scas
sbb
push
xor
sub
leave
push
lock
out
loopne
mov
add
sbbb
inc
pop
xchg
push
push
or
sbb
out
scas
in
je
or
int
in
push
and
mov
es
je
inc
das
sub
mov
pop
pushl
push
add
lcall
add
mov
cmpsl
enter
xchg
cmpsl
clc
cmp
sbb
inc
fsubl
clc
pop
das
or
daa
xchg
add
xor
pop
inc
pop
ficoms
outsl
jl
xchg
insb
sub
jl
test
data16
pop
mov
bound
sub
or
leave
jae
call
or
addr16
dec
mov
xor
out
pop
daa
subb
inc
pop
pop
push
push
pop
pop
insb
xor
xchg
outsl
sbb
jo
push
aam
add
add
iret
repz
inc
jo
mov
jns
push
dec
outsl
xchg
lods
enter
jns
or
aas
insb
cmpsl
push
sahf
testl
jns
mov
mov
stc
cmp
repz
lcall
cmpsl
cmp
iret
repz
adc
bound
imul
fstpl
stc
cmp
repz
add
aam
pop
out
sahf
cmpsl
das
jae
jecxz
out
cmp
sbb
imul
popa
lahf
out
sahf
dec
js
mov
bound
iret
repz
mov
sahf
out
mov
imul
or
repz
out
mov
ss
cmp
lcallw
iret
repz
rclb
cmp
ficomps
imul
jge
push
push
pop
imul
out
sbb
roll
outsb
mov
stc
pop
outsl
sahf
enter
out
xor
rolb
inc
sbbl
jne
cmp
out
mov
jmp
repz
push
fwait
in
jbe
sarl
loope
ja
mov
dec
js
les
jns
jl
out
jg,pt
scas
push
pop
jnp
add
iret
sarl
jo
xor
jle
mov
xor
push
in
xor
out
lcall
sub
mov
sbbl
test
mov
lock
adc
ds
xchg
fmuls
mov
imul
mov
iret
repz
mov
loopne
cmpsl
fnstcw
roll
cmp
lahf
cld
aaa
mov
repz
dec
aad
nop
cmp
rcrl
test
xchg
sahf
out
xor
into
add
sarl
mov
push
cmpsl
stc
cmp
jg
loopne
xchg
pop
cmpsl
fnstcw
mov
dec
out
jl
js
inc
fwait
mov
pushf
cmpsl
stc
cmp
xor
jo
sarl
stc
sub
repz
movsl
fdivr
enter
dec
repz
outsb
mov
dec
test
mov
clc
sub
repz
repz
mov
mov
jns
iret
xor
ds
lods
mov
fwait
iret
cmp
mov
repz
repz
mov
xor
mov
jnp
mov
pop
enter
inc
es
inc
stc
rcr
and
int3
fbstp
or
in
inc
fwait
push
pushl
add
or
dec
inc
push
aas
pop
bound
mov
or
mov
mov
mov
pop
jb
jns
adc
mov
push
imul
subb
inc
out
in
es
aas
int3
jg
push
mov
fimull
pop
inc
pop
and
jbe
dec
fmuls
pop
insl
jb
fisttpll
push
fcomip
jns
iret
adc
pop
das
xchg
xor
fimull
xchg
aas
popf
mov
xlat
pushf
bound
iret
adc
test
insl
mov
fucomip
ss
das
fs
xchg
aas
mov
iret
dec
mov
and
jo
jbe
adc
in
mov
inc
cmp
ss
in
ficoml
or
and
mov
das
bound
sub
int3
mov
xchg
jmp
inc
sub
rorl
daa
sub
mov
mov
push
sbb
pop
jnp
cmp
xchg
insb
sbb
cs
adc
jo
inc
adcb
into
repz
add
arpl
sarb
les
or
sahf
jg
pop
aam
leave
xorl
les
enter
sub
add
in
dec
push
push
out
xor
inc
sub
mov
fnsave
mov
lret
or
inc
xchg
xchg
aaa
jnp
fisttpll
push
pop
push
push
xchg
iret
insb
add
or
add
push
sub
xor
cmp
mov
xchg
inc
insb
addr16
add
cmp
mov
jns
bound
je
leave
and
imul
in
in
scas
mov
jo
nop
xchg
dec
pusha
and
inc
repnz
ds
in
push
jns
pop
les
push
and
daa
cmp
pop
cwtl
dec
cs
xchg
pop
movsb
xchg
mov
jb
inc
iret
pop
push
inc
andb
push
inc
push
cmc
inc
outsl
add
leave
xor
or
add
sbb
ljmp
lock
ds
scas
insb
mov
in
mov
mov
leave
push
jo
xor
pop
sub
insb
inc
and
cmp
push
push
push
adc
jns
out
push
add
add
add
cmp
xchg
iret
add
or
xchg
or
insb
and
in
hlt
incb
insb
pop
bound
lods
insb
int3
scas
sub
adc
add
and
push
es
insl
mov
inc
repnz
pop
insl
jmp
push
mov
adc
sbb
in
enter
pop
das
pop
xchg
pushf
pushf
pop
and
pop
gs
out
insl
cmpsb
add
adcb
xorl
outsb
cmpsl
cmpsb
daa
daa
daa
daa
scas
mov
pop
leave
and
enter
stc
add
pop
xchg
dec
jb
adc
pop
test
loopne
ja
push
cmove
in
jbe
pop
push
subps
jae
dec
sahf
pop
cld
push
add
xchg
mov
pop
outsl
mov
loope
popf
mov
add
pmaddwd
cltd
cmp
pop
out
add
mov
inc
andl
mov
sub
jo
add
push
mov
iret
insl
test
cwtl
mov
adc
loopne
daa
cmp
mov
pop
pop
ljmp
and
pop
mov
and
sub
aas
ja
add
xchg
insb
jno
push
inc
aaa
jb
inc
mov
mov
jg
add
xchg
imul
push
sub
or
push
scas
leave
pop
test
rcr
and
jo
pop
push
iret
andb
push
ret
xchg
out
idiv
daa
cmp
pop
clts
pop
push
pop
mov
and
pop
xchg
inc
pop
dec
pop
adc
push
xchg
add
enter
lea
inc
pop
jae
add
dec
jae
jae
pop
repnz
mov
mov
repnz
fistps
cmc
pop
repz
add
iret
repz
push
or
or
or
aaa
push
inc
cmovge
cmp
repz
arpl
iret
repz
outsb
adc
adc
xchg
push
movsl
pop
mov
bswap
repz
sbb
dec
sahf
sbb
ficompl
mov
inc
pop
adc
inc
xlat
add
out
or
jne
pop
add
sub
andl
pop
hlt
es
push
or
mull
daa
test
add
enter
movl
xchg
jne
mov
dec
cmp
xchg
pop
fwait
cld
push
sub
pop
and
daa
lahf
daa
pop
add
cmp
in
dec
jbe
imul
rcrb
jb
dec
enter
inc
adc
jbe
cld
pop
inc
cs
xchg
ja
push
fs
push
les
add
mov
inc
ret
dec
dec
cmp
fdivs
ss
pushf
in
pusha
or
nop
mov
cwtl
femms
fistps
cmp
fisubrs
mov
das
mov
pop
leave
jae
cmp
rdmsr
leave
mov
push
xor
inc
jb
inc
jo
cmp
pop
mov
xchg
popa
fucomi
sub
repnz
xor
sbb
in
enter
inc
mov
nop
scas
cwtl
pop
add
pop
das
into
popa
jg
pushf
pushf
cmp
fmul
add
lock
and
rolb
jp
bound
push
bound
pop
push
bound
lods
roll
pop
call
inc
jp
cmpb
adc
rol
enter
outsb
xchg
mov
mov
in
inc
adc
push
leave
and
push
push
arpl
arpl
pop
arpl
mov
xor
push
jb
iret
or
jl
sbbb
jl
push
pop
testl
fs
mov
in
leave
push
push
fs
movsb
mov
mov
loopne
inc
repnz
jne
jge
push
loopne
jmp
mov
fbld
cmp
cmp
cmc
cmp
mov
xchg
push
sub
cmp
in
mov
dec
orps
xchg
mov
iret
jns
dec
dec
shl
and
fstpl
and
jb
jle
jle
jle
cmp
dec
rolb
add
outsl
or
dec
sahf
fxch
and
xchg
add
mov
jg
shl
xchg
adcl
and
jns
mov
jg
loop
daa
nop
jg
data16
daa
cmp
mov
add
add
sub
repnz
addr16
addr16
addr16
addr16
addr16
addr16
bnd
js
andb
repnz
addr16
addr16
addr16
mov
mov
dec
dec
dec
dec
or
dec
dec
dec
or
pop
push
dec
dec
dec
dec
add
cmp
mov
jns
xchg
and
in
out
cmp
xchg
jl
jmp
mov
push
push
dec
lock
xchg
push
lcall
in
fs
dec
shr
pop
stc
imul
pushf
dec
and
xchg
sub
fldt
enter
imul
mov
or
movsb
ret
insl
in
imul
leave
mov
fsubrl
call
dec
ja
in
fiaddl
jo
iret
lods
push
aad
xchg
pop
or
xchg
and
cmp
push
cmp
push
mov
push
rsqrtps
cmp
or
rorl
push
mov
xchg
das
jb
cmovle
push
loope
dec
pop
xor
pop
xor
jnp
aas
movsl
add
pop
daa
mov
inc
pop
or
je
jne
adc
or
shl
in
mov
mov
mov
pavgw
cmp
repz
or
xchg
lret
or
in
pop
cmp
push
and
xchg
imul
in
cltd
mov
jns
mov
add
add
or
pop
rorl
loopne
cmp
and
insb
or
and
mov
insb
sub
insb
aas
cltd
dec
ds
mov
dec
xchg
cmp
cmp
mov
movsb
scas
push
push
mov
repz
rorb
fcmovne
repz
or
or
or
cltd
cmp
push
insl
jg
dec
and
inc
insl
aas
cmp
enter
insl
pop
insl
imul
insl
jg
mov
or
ss
ja
pop
mov
leave
addr16
pop
and
add
xchg
loopne
lahf
outsb
fldt
enter
outsb
imul
cmp
jns
addl
movsb
or
outsb
pop
mov
xor
mov
xchg
cmp
loopne
add
addr16
outsl
xor
outsl
leave
inc
fwait
in
outsl
rclb
leave
mov
or
shrb
in
add
add
cmp
jb
jo
jo
sbb
and
jb
and
jo
xor
in
pop
adc
pusha
push
add
xorb
das
mov
xchg
iret
in
mov
loopne
fmull
jmp
ja
fs
pushf
call
cmp
xor
push
xchg
imul
je
jl
daa
scas
add
cld
in
add
mov
frstor
aam
daa
adc
leave
in
andb
pop
mov
mov
lret
loopne
jmp
loop
xchg
jno
jno
jb
or
fcomp
and
sbb
out
dec
xchg
and
push
jb
cmp
pop
jb
jb
jb
jb
dec
inc
mov
in
jns
push
or
xchg
stos
ftst
out
jb
enter
jae
jae
jae
daa
sbb
es
jae
cmp
sahf
ja
cmp
mov
add
and
add
nop
push
dec
fiaddl
mov
cs
sub
pop
fimuls
out
and
ja
pop
adc
sbb
smsw
xchg
into
lock
xchg
je
jg
sahf
out
inc
xchg
cs
add
lahf
cmpsl
je
scas
je
mov
insl
fcom
shlb
leave
xchg
adc
jne
fimull
jne
movsb
add
ret
mov
leave
stos
ja
gs
fisttpll
mov
ret
into
push
add
ja
jbe
jmp
jbe
sbb
dec
sahf
aaa
and
add
str
xor
jbe
jmp
dec
push
or
or
sahf
out
or
push
iret
fsubl
xchg
lret
xchg
testl
or
cmp
stos
xor
out
add
sbb
adc
sbb
mov
dec
add
xchg
dec
outsb
ja
mov
dec
test
hlt
sub
leave
cmpsl
scas
sub
cltd
rcr
loop
sti
jbe
push
outsl
das
adc
pop
sbb
xor
xchg
addr16
pop
imul
mov
js
cs
das
pushf
js
js
in
xchg
xchg
mov
in
out
test
daa
movd
push
lahf
sbb
xchg
jae
and
sub
xchg
xlat
jb
enter
dec
jns
jns
out
xor
add
cs
cmpsl
scas
jns
jns
stc
lahf
mov
mov
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jp
push
daa
daa
mov
or
pop
or
or
daa
daa
daa
pop
push
add
daa
add
sbb
repz
repz
sbb
sbb
repz
das
sbb
xchg
cmpsl
fwait
cmp
mov
out
sahf
xchg
push
pop
and
and
outsl
es
ja
sub
and
setb
dec
ja
ficoml
pop
jo
test
paddsb
cmp
add
lahf
pop
jnp
mov
cmp
repnz
dec
bound
pop
pop
and
in
push
cmpsl
push
cld
nop
mov
mov
in
dec
cmovle
and
enter
ds
je
leave
loopne
pop
prefetch
or
lds
pop
jnp
adc
add
xor
xor
and
out
push
mov
push
cmp
xchg
dec
inc
push
xchg
xor
pushf
out
push
daa
pusha
inc
nop
xchg
out
pushf
fwait
cmpsb
push
add
mov
mov
in
mov
push
scas
das
or
call
push
add
cmpsl
aas
and
jge
iret
daa
iret
sarl
cmp
dec
sahf
xchg
xchg
or
dec
xchg
or
dec
push
scas
pop
jmp
jns
jns
outsb
jge
jge
jge
jge
jns
jns
jge
jge
jge
jge
jns
jns
jge
jge
jge
jge
jns
jns
jge
jge
jle
jle
fs
call
adcb
jle
out
jle
dec
mov
jle
jle
cwtl
outsl
ret
xchg
fistl
mov
mov
aam
loop
ljmp
and
pop
push
dec
add
lea
or
jg
mov
push
nop
in
ljmp
jg
sbb
jg
cmpsl
and
xchg
out
add
inc
cltd
popf
pushf
pushf
dec
nop
fwait
cmpsb
mov
jns
out
add
add
add
fiadds
mov
cmpb
and
push
aas
mov
xchg
sub
in
push
pop
pusha
pusha
repnz
lock
push
dec
shrb
lcall
fwait
adcb
subb
jo
mov
int
mov
out
int3
out
xchg
lcall
lcall
inc
lahf
push
lret
xor
sbbl
fwait
inc
push
mov
sub
fwait
seto
and
cmp
jb
sbbl
mov
xchg
xchg
movsb
lsl
out
inc
xlat
ror
out
das
or
and
xorb
sahf
fcmovne
sbb
add
add
add
cmp
push
pop
or
iret
jae
jns
jne
jge
test
jae
cmp
lea
repnz
popf
movsl
subb
and
enter
in
repnz
jmp
jb
dec
pop
pop
add
ss
xchg
out
pop
popf
or
inc
popf
xor
dec
aaa
cmp
subl
sbb
mov
repnz
sbbl
add
lret
lret
and
scas
add
rolb
fildl
orl
subl
js
dec
jecxz
comiss
sbb
iret
jae
daa
push
jb
jp
and
addb
lgdtl
rcr
add
push
xchg
pop
lahf
fisttpl
test
push
das
lods
fldl
lahf
and
cmp
data16
pop
dec
push
or
cld
push
loopne
inc
or
add
repnz
jecxz
mov
jo
fdivrl
xchg
pop
cmp
sub
lahf
fwait
pop
mov
movsb
fwait
lar
test
test
test
pop
rorl
enter
fstpt
test
iret
adc
push
out
xchg
add
aaa
jns
out
pop
aas
add
add
aaa
sysret
push
pop
push
or
cmp
in
outsl
or
mov
or
xchg
les
cmpsl
xchg
mov
push
mov
jns
push
jmp
repz
popf
in
dec
add
mov
mov
xchg
push
pop
push
jbe
inc
mov
ja
push
add
fcmovbe
das
push
jl
pusha
ror
dec
test
ret
roll
jle
and
fiadds
or
cmp
int
insl
in
push
cmpsl
inc
mov
jns
mov
fsubs
push
dec
mov
and
pusha
in
mov
pop
nop
cwtl
mov
mov
cmp
dec
mov
and
enter
inc
into
ror
or
jg
aaa
jb
fmuls
push
lock
movsb
fisttpl
dec
adc
mov
adc
adc
adc
sbb
jbe
fstpl
inc
movsb
cmpsl
cmp
mov
daa
movsl
sbb
and
jo
or
push
pop
inc
push
push
rorl
fs
push
and
pop
aas
loopne
call
enter
mov
mov
mov
inc
das
adc
xchg
fiadds
in
lcall
and
or
daa
nop
cmpsb
inc
mov
push
je
fimuls
push
mov
mov
push
mov
iret
insl
in
mov
enter
sahf
cmp
fmuls
repnz
inc
lock
xchg
adc
xchg
cmpsb
add
pushf
mov
movhps
xchg
mov
aaa
mov
xchg
in
call
mov
popf
xchg
mov
and
in
daa
rorl
xchg
or
add
push
mov
mov
dec
das
mov
dec
xor
decl
fldt
cmpb
stos
iret
mov
outsb
daa
daa
mov
lret
sahf
out
pop
rorb
fimull
push
lea
jns
jns
scas
lcall
mov
lahf
out
repnz
cli
adc
lea
cmp
leave
jnp
adc
adc
push
and
or
popf
sub
xor
inc
mov
test
daa
pop
fcmovne
pop
pop
push
out
lea
dec
ss
jo
push
push
dec
test
lea
cmp
mov
add
add
fcmovnb
dec
lret
rorb
fdivrl
repz
in
in
or
xchg
outsb
repnz
lret
addl
mov
ss
lret
lret
pop
mov
mov
mov
mov
bound
ljmp
jb
bound
mov
aas
inc
andps
mov
mov
inc
adc
iret
or
or
xchg
dec
repz
stos
in
and
or
fucomi
in
lds
int
aad
je
out
fldl
in
add
fsubrp
mov
pop
stos
lea
mov
in
ja
aam
push
daa
adc
data16
mov
xchg
cmp
stos
pushf
fmull
inc
mov
xchg
js
addr16
lock
mov
push
pusha
nop
push
push
add
xchg
je
pop
lods
ja
push
xor
nop
nop
push
sub
clc
pop
fwait
jmp
or
adc
add
lods
or
fisttps
pop
lsl
mov
xchg
cmp
xchg
or
inc
xchg
dec
xchg
push
dec
ss
mov
lods
xchg
paddusw
inc
dec
scas
cmp
es
xchg
scas
pop
scas
xchg
aaa
jb
inc
jb
scas
rclb
data16
xchg
aas
call
sbb
clc
xchg
pop
or
pop
adc
out
or
or
sub
xor
cmp
inc
dec
rcpps
pop
push
loopne
pop
adc
arpl
fld
scas
xchg
addr16
dec
and
add
jo
pop
push
pushl
leave
leave
inc
lock
clc
mov
ja
jns
insb
fs
xchg
xchg
push
add
int
aaa
push
fisttps
push
push
xchg
fisubrs
inc
pop
xchg
arpl
imul
lcall
xor
sub
xchg
call
lock
pop
clc
xchg
xchg
adcb
mov
xchg
sbb
outsb
xchg
xchg
xchg
mov
pop
xchg
jmp
imul
pop
vmlaunch
xchg
xchg
out
mov
leave
mov
inc
in
fcmovne
mov
xchg
int3
push
das
xchg
out
aam
xchg
pop
repnz
daa
xor
cmovl
xlat
fimull
fists
mov
xchg
inc
sti
fisubl
addr16
addr16
dec
jb
add
aas
daa
mov
inc
xchg
cmovo
dec
jb
xchg
notl
push
xchg
inc
jb
in
cmp
pushf
cmpsb
mov
mov
pop
shlb
out
fadd
call
adc
jns
dec
sahf
add
es
push
jns
inc
out
outsb
or
clc
cmpb
loope
icebp
push
repz
in
xchg
pop
prefetch
pushf
in
push
sahf
push
add
nop
xchg
cwtl
xchg
mov
daa
mov
leave
jmp
fmuls
psllq
psubq
jb
jnp
cwtl
femms
push
xor
push
jae
mov
jb
jb
fdivr
and
inc
push
out
jbe
cmp
orb
out
cmp
fmuls
and
lock
mov
decb
lcall
lcall
test
lcall
adc
xchg
xchg
xchg
or
inc
repnz
mov
leave
leave
leave
out
idiv
or
aas
fistps
fwait
sub
inc
loopne
mov
xor
enter
fwait
jb
and
jb
mov
adc
or
in
int
add
daa
fucom
das
push
pushf
sahf
ja
stc
outsl
push
pushf
push
pushf
push
push
or
jns
out
or
or
or
jns
out
or
add
jl
sahf
push
push
pmaxub
adc
jb
stc
push
lahf
mov
push
add
in
in
cltd
mov
jns
out
enter
ficomps
jns
pushf
negb
jns
jns
popf
pop
popf
daa
popf
das
popf
jns
jns
aaa
popf
aas
popf
inc
popf
dec
popf
stc
cmpl
aas
jo
jns
jns
jnp
xchg
out
sahf
ja
push
pop
lods
and
and
jns
out
and
and
sahf
out
daa
clc
sub
jns
mov
add
cmovge
and
sub
dec
loope
dec
xor
mov
push
pop
inc
sahf
es
jae
dec
pop
imul
jmp
sbbl
sahf
setle
inc
inc
sahf
iret
aad
setl
or
sub
sub
sahf
pop
push
add
add
dec
dec
dec
sahf
add
cmp
dec
dec
dec
dec
test
dec
dec
xlat
cmc
std
add
sbb
or
adc
leave
repz
add
fistl
jno
lods
sbb
sbb
cmp
daa
fsub
pop
call
push
mov
jae
mov
inc
es
cmp
subl
xchg
repnz
iret
sub
cmp
jbe
movntq
das
out
neg
enter
mov
repnz
sysenter
push
pop
pop
mov
xchg
cwtl
mov
in
mov
mov
mov
mov
in
enter
psubsw
and
in
icebp
out
add
int
dec
sub
imul
xchg
xchg
xchg
mov
mov
outsl
sti
push
sahf
xchg
xchg
iret
add
movsb
adc
jbe
in
xor
pop
dec
sahf
out
dec
push
or
cmp
rorl
or
je
xchg
out
mov
mov
scas
adc
sahf
xchg
iret
ficoml
in
pop
jo
out
sti
movd
repnz
xchg
movsl
adc
cmp
iret
jae
pop
cmp
jae
push
pop
add
mov
jg
mov
xchg
cmp
rclb
loopne
adc
xor
repz
mov
mov
sahf
pop
push
add
xor
add
cmp
leave
cmp
push
inc
pop
cs
loope
dec
push
cmpsb
out
pop
cmpsb
pusha
jne
out
das
push
push
in
sahf
out
js
adcb
out
cmp
nop
push
adc
repz
test
add
and
sbb
rclb
filds
sbb
mov
fistpll
enter
add
sub
inc
cmpsb
punpcklwd
inc
out
cmpsl
sahf
cmpsl
cmpsl
mov
and
bndstx
cmp
out
mov
pop
pcmpgtd
leave
sbb
mov
fmull
xchg
test
leave
inc
int3
aam
fcoml
leave
mov
in
xchg
mov
xchg
test
nopl
add
movsb
inc
lret
in
das
getsec
push
test
xchg
iret
insb
test
or
ret
fmull
jb
ja
insb
jb
roll
movsl
lods
cs
out
mov
add
fsubrs
psubsb
xchg
ret
adc
jg
cmovp
inc
cmp
jbe
inc
outsl
dec
orps
add
leave
repz
data16
jbe
push
in
cmp
xchg
jo
pushf
je
xlat
test
pushf
pushf
ror
cmpsl
push
xchg
xchg
mov
fdiv
cld
xor
pop
les
decl
les
stos
out
jns
inc
xchg
add
jns
cs
je
jp
iret
in
in
orb
mov
stos
pop
mov
jb
stos
cmp
les
mov
in
jbe
paddsw
cmc
pop
std
filds
stos
pop
or
sbb
bound
lds
inc
es
stos
stos
dec
sahf
xchg
out
add
lods
cmp
cmp
mov
clc
into
loopne
jbe
pmaxub
cmp
imul
and
pop
mov
ja
push
addr16
cs
repz
pop
popl
xchg
pop
pushf
cmp
lahf
add
cmp
loopne
ret
cs
adc
sbb
push
sbb
adc
daa
cmp
lods
mov
mov
ja
daa
daa
pop
leave
in
mov
je
leave
add
syscall
mov
push
push
repnz
std
lods
mov
scas
adc
jp
mov
scas
dec
pop
push
scas
lret
lret
lret
pop
pop
pusha
scas
imul
lret
subl
lret
lret
lods
scas
mov
scas
lret
lret
lret
lret
fldcw
cli
scas
jb
stc
fiadds
sbb
sbb
jb
sbb
sbb
jae
jb
push
adc
cmp
adc
sub
fidivs
push
das
cmp
popf
je
fwait
rdmsr
aas
inc
push
jns
iret
mov
push
jns
out
cmp
jns
cmp
jns
out
sarb
inc
iret
repz
loope
in
inc
outsl
in
cmp
inc
add
out
jns
sbb
dec
cs
sahf
out
cmovp
cmp
dec
cmp
repz
pop
dec
gs
jo
cmp
repz
jnp
xchg
pop
pushf
cmpsl
mov
bnd
out
enter
jbe
jb
fsubrp
hlt
fisttps
aas
lock
int3
dec
mov
repz
add
outsb
daa
iret
add
orb
pop
jns
fcmovne
nop
cwtl
das
loopne
call
or
clc
push
cs
fimuls
out
cmpxchg
fcmovne
cltd
dec
enter
fmuls
cmp
adc
push
das
or
pop
ficoms
mov
sub
mov
push
lret
inc
mov
iret
sbb
dec
mov
push
add
daa
iret
repz
pusha
add
das
mov
int3
and
push
and
jo
dec
jb
push
daa
int3
jb
xor
enter
test
call
pop
clts
lock
xor
sahf
xchg
xchg
mov
add
sbb
mov
mov
pop
mov
sub
or
pusha
mov
push
mov
xorb
mov
pop
jae
dec
push
mov
pushf
pushf
fdivrl
fninit
mov
mov
cmpsb
sbb
sbb
roll
mov
push
movsl
loope
iret
add
ucomiss
pop
in
mov
push
pop
pop
out
sahf
out
or
daa
daa
mov
jl
pop
xchg
popf
test
cmp
daa
mov
adc
cmp
fimull
aam
cs
repz
cmc
inc
repz
mov
push
push
sbb
cmp
es
sbb
sbb
dec
sahf
out
aaa
inc
and
xchg
fcmovne
repz
and
vmwrite
in
mov
outsl
push
daa
lcall
mov
jg
js
cwtl
push
adc
clc
mov
mov
mov
push
stc
nop
jg
mov
sub
add
xor
mov
clc
iret
iret
fs
test
push
xchg
popf
add
mov
cmp
repz
push
mov
test
movsb
add
mov
and
fbstp
mov
sahf
sti
fiadds
mov
movups
adc
out
sahf
out
and
adc
aaa
push
inc
dec
pop
pop
outsb
repnz
sbb
outsb
setnp
xchg
push
jns
push
test
cmp
cmpsl
and
jl
daa
iret
and
mov
adcb
mov
aas
out
sahf
negl
sub
out
out
sub
pushl
mov
aas
daa
sahf
sub
shrl
pusha
shl
rcrl
xchg
es
daa
iret
mov
insb
ja
dec
sahf
out
cs
nop
pop
fwait
cmpsb
repz
mov
out
daa
iret
or
aam
push
fistpll
jbe
pminsw
out
adc
xchg
jl
shlb
mov
inc
mov
dec
mov
dec
sahf
out
add
jns
out
or
and
sahf
or
out
mov
mov
xchg
jae
sarl
ret
jb
mov
fs
cld
fistps
fcom
mov
mov
jae
cmp
repz
add
outsb
mov
jg
setnp
or
shll
xor
out
jae
lahf
out
imull
fcomi
jl
add
or
or
or
sbb
and
inc
sahf
xchg
outsb
mov
pop
adc
jns
dec
gs
jnp
repz
sahf
pop
xchg
jns
fldt
sbb
lret
push
in
enter
out
and
and
fistl
nopl
iret
repz
adc
dec
sub
cld
lea
arpl
pushf
dec
ds
das
cs
mov
xchg
and
mov
mov
mov
push
out
stc
cmp
iret
pop
idiv
or
mov
push
movhps
push
es
sahf
out
adc
repnz
adc
out
dec
mov
push
mov
mov
out
jns
outsb
push
sbb
sbb
jns
jle
xchg
push
xchg
sahf
out
daa
sahf
push
and
in
and
in
dec
into
es
fisubrs
sub
leave
repz
sub
testb
fimuls
cmp
dec
push
push
cs
iret
jae
push
push
push
xor
cs
repz
ss
ds
iret
repz
push
sub
pushfw
fsubrl
outsb
pcmpeqd
jle
fcmovne
repz
mov
xor
aad
or
or
int
pop
lds
scas
xlat
push
jg
xchg
cmpsl
sbb
inc
mov
dec
inc
repnz
fcoms
mov
aas
mov
rorl
inc
push
dec
dec
mov
les
scas
mov
sbb
push
call
stc
or
cmp
push
mov
inc
and
jns
adc
and
in
stos
or
jge
push
inc
pop
adc
aad
add
hlt
xchg
pop
pop
dec
push
xlat
inc
cs
inc
push
fiadds
xchg
sbb
aas
movsl
xchg
push
dec
jbe
mov
inc
aaa
fadd
or
test
ret
les
in
out
in
call
loopne
fcom
jns
out
ror
sarb
mov
test
jl
je
insb
repz
repz
out
cmp
dec
inc
cmp
push
sub
out
sahf
and
add
xlat
lock
repz
loopne
rorb
xchg
mov
and
jo
jae
jns
pop
push
push
add
iret
repz
sbb
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
ret
xchg
fildl
sbb
data16
popa
popa
dec
or
mov
andl
pop
mov
push
and
and
call
inc
pop
sbb
pop
test
or
pusha
ljmp
movsb
add
in
lods
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
mov
xchg
jle
in
inc
les
fcomps
jnp
sub
add
cmp
inc
mov
jle
sub
inc
call
fdivrs
insb
sub
incl
xchg
insb
xor
das
mov
pop
add
aas
std
movsb
rclb
inc
pop
jle
inc
fistps
push
adc
repz
push
adc
add
sahf
out
ds
sbb
jns
cmp
add
icebp
repnz
jle
fdivrl
repnz
and
sub
inc
mov
mov
push
jns
jp
jecxz
int
push
cld
mov
incl
pop
sbb
add
call
mov
outsb
loopne
aam
inc
pop
mov
pop
mov
add
sub
add
les
inc
cwtl
outsb
daa
lcall
push
push
push
rolb
mov
mov
inc
and
mov
or
scas
pop
jb
pop
aas
pop
pop
mov
gs
pop
dec
push
xor
dec
and
arpl
pop
and
sgdtl
imul
aam
daa
lds
es
les
enter
sbb
mov
adc
repz
ds
push
test
fs
cmp
adc
jo
idivl
adc
insb
and
cmp
or
or
repz
push
je
pop
adc
out
push
push
sbb
inc
out
sahf
out
cmp
xor
sahf
out
sahf
xor
and
aam
sbb
insb
inc
into
test
jnp
jg
paddq
daa
xor
inc
cld
xorb
inc
cmp
xorl
jg
cmp
sahf
out
sahf
pop
js
mov
repz
sarl
xor
add
cmpsb
ret
cmp
ja
fidivs
sbb
bnd
das
push
dec
xor
add
xchg
cmp
shrl
mov
add
nop
or
or
ret
enter
hlt
adc
mov
repnz
add
leave
sbb
into
sbb
rorl
and
sahf
mov
ljmp
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
push
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
clc
incl
xchg
test
mov
cmp
mov
popf
sti
jmp
stos
call
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
pushl
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
les
add
out
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
jg
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
scas
push
xchg
jge
pop
ficomps
frstor
xchg
pop
outsl
pop
out
inc
dec
popa
push
xchg
pop
inc
add
in
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
jg
cli
test
xor
leave
mov
insb
fdivs
jne
filds
or
mov
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
lcall
movsl
mov
sub
mov
and
or
adc
ljmp
sub
fdivl
jno
add
aad
mov
mov
and
jmp
aam
call
xor
decl
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
fdivs
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
mov
ljmp
cmp
mov
inc
movsl
fisttps
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
leave
jl
fnstsw
add
daa
adc
or
and
test
or
mov
lcall
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
ljmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
inc
std
fisttps
pop
jge
xchg
shlb
jg
or
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
dec
mov
popa
lret
sbb
outsl
and
ja
int3
add
mov
mov
es
lds
or
add
mov
mov
xlat
ret
shlb
scas
ficomps
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
out
mov
jmp
mov
xor
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
cwtl
icebp
call
or
filds
sub
sub
or
cltd
fiaddl
sub
les
sbb
bound
pop
cmp
into
pop
hlt
sbb
in
pop
adc
popf
aam
in
adc
push
xlat
sahf
out
sahf
fcomp
fcmovu
dec
sahf
out
fsubp
jecxz
sahf
out
sahf
in
jmp
sahf
out
in
repz
cmc
mul
jns
out
clc
stc
cli
sti
hlt
or
cld
pop
adc
aas
pop
cmpl
adc
nop
inc
dec
sbb
adcb
push
xchg
mov
shlb
push
addr16
orb
lods
jbe
inc
out
sub
fwait
inc
insl
bound
push
xorb
call
inc
xor
fistpll
and
cmp
adc
xor
inc
jno
xor
pop
inc
in
decl
bound
xor
xor
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
scas
cmp
inc
jbe
pop
insb
imul
data16
gs
push
dec
inc
leave
aam
jae
add
push
inc
lret
nop
cli
ret
inc
call
or
mov
gs
mov
or
je
ss
jbe
sbb
enter
or
inc
aas
push
aad
lea
inc
push
loope
mov
push
add
or
add
aaa
adc
adc
insb
popa
jns
push
mov
orb
insb
test
or
cmp
je
aaa
rcl
pop
aas
inc
push
bound
add
sarb
add
pop
insl
dec
mov
and
jae
sub
add
pop
ret
pop
inc
aas
sbb
mov
inc
fisubrs
inc
sbb
inc
aas
push
add
pop
pop
je
jo
inc
push
add
ds
mov
scas
add
call
iret
int
push
dec
mov
inc
mov
xor
lods
fistpll
enter
outsb
jne
push
fistl
stos
pop
pop
in
jge
mov
adc
arpl
add
out
mov
push
clc
xchg
in
imul
pop
jo
in
pop
cmp
fs
cmp
or
aas
aaa
jb
jmp
cltd
dec
jl
sub
addb
pop
ss
adc
pop
mov
lahf
dec
aam
sbb
fwait
mov
mov
push
mov
jmp
mov
jb
sub
andb
inc
and
popa
jo
lahf
test
sahf
xchg
mov
rorb
pop
in
movsb
push
jno
stos
cmp
push
mov
xor
pop
in
jno
cwtl
sbb
test
pop
cmp
adcb
sub
mov
or
mov
pop
jo
push
sub
test
insb
jns
add
inc
jb
push
push
shrl
ss
inc
call
arpl
insb
lfs
push
bound
ja
pop
dec
push
inc
jbe
xor
jg
push
dec
sbb
les
fldt
movl
or
push
inc
push
sub
jg
dec
and
dec
add
popa
pop
or
arpl
dec
mov
adc
stos
inc
inc
loope
mov
sbb
push
xor
sbb
sbb
push
mov
inc
push
inc
dec
mov
pop
bound
outsb
arpl
je
data16
adc
push
lock
inc
pop
sub
and
adc
out
subb
daa
add
push
adc
mov
adc
and
inc
or
add
push
push
xchg
dec
mov
inc
push
add
mov
jmp
mov
inc
sub
jbe
adc
pusha
add
cmp
add
add
or
fisttps
or
pop
push
or
or
or
or
or
adc
adc
push
in
aam
adc
or
pop
sbb
adc
adc
adc
aaa
in
jbe
add
data16
or
add
inc
add
mov
mov
jo
add
add
sahf
add
std
add
les
add
movsl
outsb
addl
shlb
imul
lcall
ds
xor
adc
pop
and
xor
inc
sbb
in
pushl
lock
bound
js
lods
outsl
lret
dec
push
rolb
add
mov
or
adc
outsb
or
and
fcoml
xorb
cmp
mov
add
pop
adc
adc
scas
pushf
into
add
stos
add
pop
pop
pusha
fstpl
scas
cmp
adc
push
adc
pop
lcall
and
adc
xchg
mov
lock
or
icebp
mov
or
cwtl
xorb
adc
stos
scas
push
and
dec
lock
sub
sar
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
inc
lcall
cmp
inc
or
pop
les
fsts
dec
cmpb
add
jecxz
incl
pop
pop
pushf
ret
ja
out
cmp
xor
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
jl
xor
xchg
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
loope
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
inc
clc
jmp
clc
cmpl
jg
or
ljmp
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
ljmp
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
outsl
cli
cmp
mov
scas
mov
pop
pop
mov
popl
movb
xchg
lcall
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
dec
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
incl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
in
outsl
call
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
mov
call
sarl
xor
hlt
and
xchg
jmp
sbb
xchg
outsl
repnz
pushl
cld
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
mov
scas
sbb
arpl
dec
jp
push
gs
jg
idivb
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idiv
test
fisttpll
sbb
scas
fadds
icebp
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
aam
subl
jb
adc
push
lock
lods
jp
testb
pushl
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
je
hlt
es
aas
std
cli
push
push
push
idivl
jg
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
incb
aas
sti
punpckhbw
cmpsb
orb
mov
lock
jmp
xchg
pop
clc
pop
fistpll
xor
movsb
add
lea
jg
jmp
lock
std
xorb
jg
aad
adc
ret
das
ljmp
sar
pop
pop
shlb
out
sarb
sbbl
jno
or
jg
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
pushl
cld
call
js
cmp
scas
lods
hlt
cmp
call
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
jg
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jmp
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
pusha
imul
add
mov
cmp
xchg
mov
fidivl
pop
xchg
ftst
jbe
xchg
and
ljmp
shrb
shlb
out
aas
stc
add
out
gs
incl
mov
call
adc
pop
cld
addl
adc
and
repnz
cmp
fmull
enter
jecxz
and
lahf
iret
scas
sub
in
pop
mov
pop
sbb
mov
dec
incb
fisubrl
aas
mov
add
or
cld
inc
or
pop
jg
add
out
pop
mov
jg
mov
aad
test
mov
jle
iret
push
jbe
push
sbb
incl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
repnz
jg
sarl
adc
loopne
sar
orl
pusha
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
mov
jo
aas
repz
outsl
lock
in
jmp
stc
out
je
ret
aaa
clc
push
std
mov
add
test
lds
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
in
xor
or
pop
in
mov
inc
add
cltd
mov
or
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
xchg
fldenv
sbb
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
jno
cmp
sub
arpl
out
iret
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
jbe
pop
add
lahf
mov
jl
icebp
push
lahf
sti
inc
pop
imul
pushl
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
inc
aam
lcall
repnz
add
push
sti
pop
inc
leave
dec
lods
or
mov
push
mov
mov
int3
pop
iret
and
das
mov
add
mov
sub
fwait
mov
pushl
pop
dec
aam
aad
inc
rorl
in
push
push
pop
arpl
sub
adc
gs
jle
sub
sbb
xchg
sbb
xor
pop
rcl
mov
mov
mov
es
and
jmp
cltd
mov
push
fnsave
mov
cmp
repnz
pop
or
jo
into
mov
lcall
pop
sti
sub
sarl
scas
leave
push
mov
fmuls
inc
jge
ljmp
push
aas
lcall
pop
gs
xchg
fidivrs
jne
lods
xchg
xor
aam
incl
in
lods
fcmovne
ds
inc
push
shll
cmpb
jge
loop
dec
push
push
in
add
jno
clc
adc
incl
outsl
into
sub
das
cmp
add
pop
jbe
and
out
lds
pop
lock
jl
negl
js
loope
cld
mov
ss
jne
rcll
jmp
inc
or
xchg
push
or
push
scas
lcall
xchg
pop
stc
stos
lods
in
push
pop
lock
js
shl
sbb
popa
xchg
xchg
add
jno
push
cld
or
mov
jp
xchg
mov
mov
sub
lret
add
ds
sub
lret
add
or
icebp
in
cld
lcall
sub
push
stos
sbb
jge
and
lahf
sbbl
cmc
popa
fwait
fmuls
in
lret
mov
rcrb
imul
cmpsb
push
jo
mov
pop
ss
xchg
call
inc
aad
lcall
stos
ret
divb
jmp
scas
scas
out
pop
push
pusha
in
cmc
cmc
xlat
in
jnp
fidivrl
adcl
ljmp
pop
xchg
fucomip
push
fxch
or
shlb
aaa
mov
stos
cmpsl
push
add
rorb
incl
xchg
ljmp
aam
adc
call
pushl
shrl
xor
cmp
outsb
roll
mov
decl
mov
lea
push
je
cmp
xor
adc
mov
jmp
mov
incl
enter
push
xor
jnp
das
rorl
popa
inc
push
pushf
inc
fldcw
call
mov
mov
mov
loopne
mov
cs
unpcklps
mov
dec
fwait
fs
fcoml
hlt
fsts
out
out
and
popf
ljmp
cmp
incl
dec
arpl
cwtl
loopne
cmp
outsb
fwait
popa
out
shlb
cld
test
mov
clc
or
push
jns
jbe
pop
repnz
inc
leave
sub
xchg
pop
push
popa
testl
lret
cmpsl
dec
jecxz
shll
jmp
ds
adc
out
sahf
cli
fbld
scas
idiv
js
inc
outsb
es
xor
setle
fldl
add
lahf
add
xchg
lds
incl
shll
arpl
test
pusha
jmp
fwait
lcall
inc
outsb
dec
xor
pop
adc
sub
gs
popf
mov
adc
sbb
jmp
push
pop
xor
adc
aas
adc
rcrl
sbb
inc
cmp
mov
call
pop
test
cmpsl
cmc
call
js
or
or
pop
xor
xor
roll
add
fmull
lcall
ret
int
xor
or
mov
add
pusha
sahf
or
xchg
popl
jmp
or
fwait
out
xor
dec
mov
sub
jmp
pop
test
add
das
pop
lock
push
xor
push
dec
push
add
ret
sub
cmp
jle
out
mov
push
or
jbe
push
sbb
stos
or
jl
sbb
je
das
cli
mov
outsb
xor
mov
es
andl
lea
jno
lahf
adc
jmp
xchg
insb
fsubs
xchg
mov
sbb
pop
cmpsb
xchg
sub
mov
fwait
xchg
jge
inc
data16
mov
sbb
lcall
xchg
push
and
xchg
clc
test
nop
mov
repnz
call
ret
inc
mov
cmc
aad
aas
pop
and
cwtl
add
add
je
test
outsb
mov
lcall
sub
mov
in
sub
mov
lahf
lret
push
jb
cmpsb
push
jg
push
cli
jo
cmp
inc
cwtl
jge
fucom
lods
icebp
jmp
sbb
dec
adc
clc
cld
pop
in
mov
cmp
decb
rorl
cli
sbb
mov
pop
scas
fmuls
or
jl
lcall
cwtl
sahf
pop
pusha
add
xor
sbb
icebp
fcompl
decl
lock
adc
mov
or
icebp
loop
jb
out
cmp
push
xchg
add
cmp
or
cmpsw
fstpt
and
lcall
ret
clc
mov
shr
out
mov
enter
and
mov
mov
and
jecxz
xchg
leave
xor
mov
loop
out
fwait
xor
mov
xchg
movsl
rcl
sti
and
dec
hlt
les
loopne
dec
pop
in
mov
mov
jmp
imul
imul
ljmp
push
jp
mov
loop
scas
sub
xchg
sti
cmp
jnp
scas
clc
jmp
pop
push
and
dec
pop
ss
mov
xchg
and
jmp
push
xlat
fildl
adc
cmp
mov
scas
pop
pusha
pop
ret
shlb
aad
gs
aas
inc
decl
sbb
fidivs
pop
lret
ja
pop
test
cli
mov
in
push
mov
sbb
jl
nop
clc
cli
cmp
cmp
sbbl
push
in
ljmp
cmp
cmp
xchg
cmp
mov
ljmp
rolb
xor
dec
jl
out
stos
ss
sahf
xchg
jne
movsl
cltd
add
movsb
inc
xchg
push
loope
test
or
mov
loop
rcr
cmp
dec
test
outsb
pop
test
lcall
mov
cld
sub
cmpsb
xor
rcrl
in
or
int
mov
adc
arpl
inc
inc
mov
lock
dec
and
cmp
aaa
jnp
cmp
lcall
ljmp
ljmp
dec
fwait
outsb
insb
xchg
add
xor
or
cli
adc
mov
cmp
gs
and
adcl
ljmp
incl
adc
gs
shlb
insl
lret
dec
and
mov
sbb
jg
int3
ds
stc
sub
push
mov
jl
xchg
cltd
int3
xchg
dec
mov
and
rcll
mov
jmp
cs
xchg
dec
movsl
jb
jnp
jo
push
aam
inc
pusha
pop
mov
repz
sbbb
call
inc
mov
hlt
pop
pusha
cmp
xor
mov
sbb
je
inc
sub
cmp
mov
inc
int3
test
mov
in
mov
ficompl
int
mov
pop
pop
add
fisubrs
in
ficomps
lea
dec
adc
lcall
out
cli
pushl
or
jae
lods
jmp
push
mov
jg
shrb
ljmp
xchg
out
inc
and
enter
std
fistpll
test
pushl
sarb
sbb
out
insb
inc
xchg
scas
add
decl
push
xorb
mov
dec
fstl
add
mov
sub
xor
int3
ret
decl
mov
pop
push
xor
adc
cmp
or
push
and
push
call
inc
jae
int
push
xchg
mov
lret
inc
outsb
mov
and
fwait
xchg
in
jae
out
sub
pop
lds
mov
push
jmp
pop
xor
add
pop
bound
jmp
inc
push
dec
leave
mov
lahf
js
adc
inc
mov
push
or
fs
incl
iret
subl
test
cmp
daa
add
sbb
xchg
dec
std
pop
nop
cmp
adc
xchg
sti
out
lcall
sub
pop
aaa
xchg
lret
sub
fld
mov
dec
test
and
sbb
and
adc
insl
repz
out
ret
aas
insl
push
xchg
and
imul
push
sbb
push
mov
mov
lock
mov
push
lea
icebp
outsl
das
aaa
cmp
arpl
aas
call
xor
cli
sub
mov
add
xchg
test
push
inc
xor
loop
xchg
push
decl
clc
pop
fsts
push
out
cmpsb
rolb
lock
cmpsl
push
loop
pop
dec
roll
ja
mov
xor
pushl
add
cld
aas
pop
pusha
and
dec
fisubrl
ljmp
lcall
mov
fnstenv
sub
lea
test
jle
nop
push
push
inc
pop
sbb
jge
cli
jo
mov
jp
dec
ds
repz
mov
popa
adc
mov
inc
cs
lods
lcall
mov
sbb
movsb
cmc
mov
pop
adc
sbb
mov
fisubs
sbb
xor
outsl
jmp
fstpl
dec
mov
out
add
nop
shll
loope
add
in
loopne
mov
imul
imul
inc
loopne
repz
jns
out
in
test
jmp
jl
hlt
mov
jo
ss
sub
mov
pop
pop
add
mov
aad
push
aas
pop
decl
notb
in
shld
push
mov
rcrl
cmc
xchg
cmp
xchg
sahf
adc
mov
incl
push
jb
cmp
inc
incl
mov
cli
push
test
xchg
fs
mov
ljmp
mov
out
idivl
roll
pushl
std
cld
in
sbb
cltd
je
dec
call
adc
inc
or
sti
xor
mov
xchg
pop
cmp
scas
mov
out
jne
test
ja
adc
outsl
cli
lcall
pop
cmp
jb
fwait
iret
lods
sbb
mov
dec
int
dec
dec
cmpsl
and
stc
out
add
mov
mov
jge
mov
in
into
inc
call
test
mov
fscale
ret
cmp
jecxz
sub
push
mov
cmp
pop
cmp
lret
adc
pop
mov
jmp
jge
mov
adc
cmp
loop
or
mov
jg
insb
in
cmp
xor
mov
aam
lods
or
add
jb
aaa
shll
inc
iret
mov
mov
add
pop
sub
push
jmp
ret
cmp
sbb
cmc
scas
loopne
test
addr16
inc
mov
mov
and
adc
cwtl
and
mov
jne
dec
sti
iret
jnp
mov
in
jmp
lods
movsb
adc
inc
call
push
jp
pushf
sub
dec
push
push
inc
adc
xlat
test
shlb
jmp
sarl
scas
bound
mov
inc
adc
call
cmp
fwait
and
inc
enter
decl
mov
outsl
sub
jns
movsb
fidivrs
xchg
adc
test
inc
in
xchg
out
outsl
hlt
enter
ljmp
mov
loope
pop
dec
xor
cltd
jle
or
int
shll
cli
jg
in
je
cltd
or
ret
add
arpl
test
fcomip
incl
dec
jge
sbb
fs
out
es
mov
lea
insl
jno
ljmp
sub
push
ss
dec
jg
retw
push
nop
lock
movsl
notl
call
aas
add
sub
sub
mov
jae
lahf
or
mov
hlt
mov
ljmp
and
cwtl
loop
mov
cld
add
out
add
aam
lahf
cltd
and
outsl
call
dec
movl
sub
test
dec
cltd
loope
clc
mov
mov
cmp
pushl
sbb
pusha
lods
fistl
sarl
pushf
rclb
js
insb
mov
push
pushf
fstps
dec
stos
incl
lret
imul
inc
pop
rcl
xchg
test
ja
sbb
sbbl
and
lcall
bound
jne
xchg
xchg
mov
or
sarb
add
in
mov
mov
jge
or
lret
mov
pop
sub
or
mov
pop
fucomp
pop
js
aad
mov
xorl
in
push
and
xchg
push
cld
jecxz
aam
call
sbb
jl
inc
and
or
inc
std
inc
sahf
or
mov
scas
pop
sahf
sbb
das
outsb
jb
lds
cltd
cmp
sbb
ret
xchg
jmp
pop
mov
inc
and
and
xchg
pop
jg
loopne
inc
adc
sub
dec
ljmp
cs
xor
push
xchg
sbb
dec
popa
jns
int
out
int
and
push
rorl
push
dec
adc
pop
jns
jg
cmp
push
mull
int3
fs
stos
scas
clc
shlb
push
push
scas
cmc
out
xchg
sub
aaa
std
xchg
jbe
jle
mov
push
and
push
call
mov
hlt
lcall
andb
mov
mov
int3
into
mov
and
das
stos
xor
std
incl
pop
mov
cmp
ds
in
adc
dec
test
icebp
push
sub
pushl
xchg
push
and
pop
jb
sbb
fidivl
inc
pop
cwtl
push
pop
shll
stc
pop
mov
cmpsb
out
sahf
mov
or
cmp
sbb
jg
jno
fbld
insl
out
inc
and
aaa
or
and
sub
adc
mov
push
mov
mov
and
dec
insl
dec
pop
dec
mov
adc
adc
jg
cmp
cmp
inc
gs
outsb
jge
ss
jge
test
fsubl
call
jns
xlat
out
dec
in
punpckhbw
push
test
pop
imul
xchg
jmp
shll
xchg
cmpsl
ret
lds
inc
adc
inc
mov
jg
sbb
inc
cmp
and
dec
cmp
jl
ret
mov
cmp
push
jno
adc
out
push
and
test
mov
adc
xlat
mov
mov
push
clc
jmp
hlt
ror
leave
lods
pop
sub
stos
out
cwtl
lods
add
dec
sbb
cmp
call
pop
xchg
sub
mov
decb
call
dec
mov
mov
pushl
or
xchg
cmpsl
test
xchg
js
inc
es
fisttpll
dec
std
mov
fdiv
inc
add
cld
cs
inc
int
mov
cmpsl
cs
lock
jg
and
mov
pop
stos
jns
pop
in
mov
sub
add
pop
or
push
jecxz
lods
dec
xchg
dec
or
ret
pushl
xchg
dec
stc
movsl
imul
push
sub
dec
into
xlat
fcomps
cmp
mov
cld
pop
fnstsw
sbb
aad
jg
adc
fs
mov
inc
aad
dec
shl
cmp
inc
xlat
cmpsl
decl
int3
xor
lcall
in
mov
mov
std
mov
pusha
call
aas
outsl
orb
push
das
dec
xor
lahf
dec
mov
cwtl
sub
cmpsl
sub
or
insb
popf
sar
jmp
xchg
jae
rcrl
sbb
insl
dec
aam
ja
scas
loopne
pop
addb
pusha
das
adc
mov
and
sbb
imull
ljmp
andb
insb
add
or
sub
aad
and
jg
lea
int3
mov
decl
es
in
xlat
cmp
jg
in
or
sbb
sar
adc
fwait
mov
test
lcall
xchg
xor
test
push
and
in
cmp
sub
add
pushl
or
dec
push
hlt
mov
inc
repnz
je
cli
push
sbb
jae
push
mov
dec
mov
out
in
sbbb
std
xor
pushl
jne
divw
or
add
loopne
pusha
cs
and
pop
fwait
jmp
cmc
jmp
lahf
lock
sbb
cltd
jb
call
in
sub
cmc
sbb
decl
sbb
xchg
std
sub
xor
cmp
int
xchg
mov
push
cmc
mov
xor
and
stos
xchg
fdivrp
out
cli
mov
push
data16
add
mov
push
inc
and
add
ljmp
adc
lock
jb
jo
add
sbb
push
adc
push
call
fwait
out
out
clc
stc
in
pop
push
dec
lds
xor
dec
mov
cmp
lock
dec
out
loop
jo
scas
push
add
lods
sbb
add
mov
mov
arpl
test
into
or
adc
ljmp
in
and
add
sbb
xor
adc
aaa
loope
mov
cwtl
ja
pushf
xor
pop
test
sti
and
xor
push
movsl
or
shr
mov
jp
das
xchg
cltd
mov
mov
mov
mov
add
test
imul
ret
imul
push
imul
jnp
mov
cmpsl
cld
lds
outsl
or
mov
decl
out
mov
and
push
pop
and
faddp
adc
xchg
mov
inc
inc
pop
iret
mov
lcall
push
loope
mov
cmc
cmpsl
mov
inc
es
notl
stc
lock
mov
clc
ljmp
adc
pop
cmp
ret
mov
jns
inc
mov
jp
xor
inc
sub
dec
int
in
inc
cmp
jb
dec
pop
jnp
dec
lcall
test
push
cwtl
mov
xor
ja
xchg
cmp
es
stos
push
shl
shr
test
cmp
fwait
xor
cmp
xor
jp
insb
mov
in
jnp
or
jns
popa
cs
addr16
std
lcall
arpl
mov
les
cmp
mov
pushl
clc
in
pop
nop
push
push
ret
mov
dec
mov
add
sbb
and
cmp
outsl
ja
inc
push
into
jnp
aaa
gs
in
adc
inc
dec
lret
and
movsb
call
lret
not
pushf
mov
push
fs
out
jmp
mov
hlt
mov
cld
mov
lcall
data16
loop
data16
cs
std
jmp
stos
lahf
pop
int
ja
mov
and
add
sub
pusha
add
notb
and
or
out
mov
aaa
add
ja
mov
jmp
mov
in
pop
jge
nop
mov
ljmp
adc
lds
int3
in
or
or
mov
jae
mov
hlt
bound
add
push
jl
dec
rolb
fnstenv
fnstenv
pop
push
cmp
ljmp
in
call
icebp
imul
orl
popa
jnp
and
adc
addr16
sub
incl
push
dec
jg
pop
dec
mov
shlb
or
ljmp
cld
jle
ss
call
push
jb
jno
ret
mov
gs
scas
decl
or
adc
lcall
je
dec
xlat
pop
stos
call
dec
pop
aam
xchg
add
and
outsl
dec
loope
fldt
xchg
xchg
das
testl
outsl
mov
pushl
mov
es
scas
push
add
sbb
fsubl
lock
rclb
jns
cmc
mov
sarb
lock
dec
rorb
fdivl
fsub
mov
cli
jge
fs
adc
ljmp
sbbl
sar
lret
movsl
mov
mov
lds
sbb
pop
mov
xchg
jb
rcr
aad
shll
dec
push
nop
mov
sti
icebp
inc
pop
out
sbb
ss
jmp
loope
inc
cmp
xor
sbb
push
das
hlt
xor
dec
jp
mov
pushf
or
jmp
in
inc
add
pusha
pop
mov
and
inc
aaa
in
decl
pop
rorl
or
out
aaa
inc
divb
nop
push
fnstenv
in
sbb
shrb
hlt
mov
std
pushl
xor
fistpll
cmp
cli
ret
fdivrl
jg
clc
dec
inc
add
xchg
cld
aam
inc
stos
fdivrs
adc
out
mov
push
dec
and
dec
fs
imul
xor
loope
lods
pop
mov
addb
or
das
clc
mov
dec
ja
test
add
hlt
call
push
pop
ror
ja
adc
dec
inc
sub
pop
push
sub
cmp
push
mov
cs
out
nop
mov
lcall
ljmp
aas
int
sbb
ret
sbb
ljmp
ret
mov
in
xor
pop
cmp
cmp
repz
ljmp
sub
dec
arpl
jns
push
jmp
add
adc
xchg
out
cmp
cmp
cmpsb
je
roll
ljmp
dec
adc
aas
add
scas
dec
ret
ret
push
in
pop
popf
inc
dec
mov
in
arpl
pop
rolb
sbb
mov
mov
outsb
lods
and
fildl
xor
fsubl
xchg
dec
xchg
xor
cmp
jb
addb
mov
fists
jno
or
adc
pushf
ret
mov
adc
loope
std
ljmp
jb
mov
pop
shlb
push
testb
mov
in
lret
movsb
clc
pop
int
add
push
ds
adc
pop
add
mov
dec
repnz
mov
cmp
sbb
lcall
mov
clc
cmc
xorl
xor
sub
imul
lcall
ljmp
pop
fcoml
adcb
in
fwait
dec
pop
out
pusha
scas
jge
xchg
jb
xorl
test
lret
sub
jecxz
dec
bound
outsl
cmp
and
loop
pushl
and
mov
push
sti
dec
insb
sarb
adc
cmpsb
ret
pop
sub
lock
sub
mov
dec
out
sub
call
fcmovnb
lods
fs
in
in
negb
sbb
push
popf
xchg
jmp
sub
ret
ljmp
fsubrl
sub
xor
ja
rclb
movsb
sub
ljmp
pushf
insl
mov
inc
ljmp
push
sub
fistps
dec
enter
in
nop
push
push
pop
into
sub
ljmp
clc
sbb
or
jns
into
jns
outsl
iret
in
pop
push
cmp
cmp
rcll
dec
inc
mov
in
fimuls
xchg
mov
sub
arpl
mov
int3
stos
in
jg
shlb
in
push
add
add
cli
stc
int3
xchg
jbe
rcl
sub
int
call
xchg
movsl
push
cmp
jo
cmp
cmp
jbe
mov
lcall
inc
shr
jne
call
xor
outsb
jge
xchg
out
sbb
lcall
mov
fwait
jmp
mov
and
jge
sbb
xchg
pop
imulb
jle
ds
fimull
leave
popf
xor
mov
push
stos
jg
or
call
ret
xor
jne
jp
lahf
imul
pushl
imul
int3
loopne
es
mov
cmpsb
inc
mov
inc
movsb
in
scas
test
ljmp
dec
push
push
std
push
clc
push
and
add
or
sbb
in
incl
rclb
mov
push
mov
xor
dec
jl
sbb
push
decb
enter
call
or
inc
pop
jmp
and
pusha
xchg
pop
mov
in
cmp
xchg
cmpsb
jg
cmp
dec
inc
and
fbstp
leave
mov
mov
fnstcw
mov
sub
mov
mov
scas
mov
out
popa
xchg
lcall
push
icebp
mov
sub
out
icebp
xor
inc
push
mov
std
mov
cld
ljmp
lock
jne
fsqrt
std
mov
dec
pop
xchg
es
jmp
orb
xchg
mov
ss
xchg
cmp
aas
xchg
pop
jo
sbb
jmp
cmpsb
gs
sahf
daa
pop
aas
repnz
ss
ja
mov
mov
mov
clc
xor
dec
jg
and
mov
testb
ds
fwait
add
jmp
ja
iret
pop
inc
cmp
or
ja
das
sub
subb
jg
push
aad
xchg
ds
add
in
movsl
mov
stos
add
sbb
in
sahf
mov
lds
ljmp
xorb
dec
xor
xlat
mov
push
das
cli
std
icebp
movsl
dec
dec
das
xor
mov
inc
mov
jae
cld
jecxz
push
call
inc
mov
push
in
dec
xchg
and
scas
fwait
cmp
int3
jmp
mov
mov
mov
outsl
push
lea
movsl
je
xchg
xchg
lock
dec
pop
mov
jnp
ss
sbb
stos
std
jno
cs
add
test
int
clc
call
insl
add
mov
cmc
lahf
lods
roll
or
sub
mov
cltd
push
dec
insl
pusha
mov
fcomip
sbb
jle
aas
aad
cmp
jb
jg
sub
xor
cmp
xor
sub
cwtl
aam
lds
out
in
lods
enter
push
dec
xor
push
decl
jne
ror
inc
adc
push
js
xor
push
cmp
pushl
inc
pop
fistps
stos
int3
lods
jg
dec
scas
clc
out
mov
lret
sti
lods
mov
popf
aam
fcomip
incl
dec
xchg
and
sahf
or
adc
or
mov
jmp
xchg
push
lahf
cmp
aaa
or
inc
lods
fldt
sbb
sbb
call
loopne
in
xor
sahf
cwtl
cltd
and
pop
jns
xchg
inc
mov
push
out
call
scas
sbb
cmp
pop
pop
adc
mov
jns
push
push
sub
jg
ljmp
xchg
leave
sar
cltd
or
mov
shll
jge
cltd
stos
and
out
mov
incl
lods
cmp
adc
gs
pop
push
xor
scas
ljmp
adc
jge
and
ljmp
hlt
jnp
cld
leave
insl
cs
sbb
in
test
dec
clc
ret
sbb
xorb
inc
jns
loop
pop
data16
pushl
jno
stc
outsl
test
rcr
cmp
mov
cs
jl
pushf
ljmp
cmc
call
je
mov
ljmp
movsl
decl
mov
xchg
cmp
inc
dec
loope
push
jp
and
or
xchg
cmp
jbe
inc
int
outsb
cmp
in
fisubrl
int3
imul
nop
bswap
jg
mov
out
mov
js
mov
cltd
push
add
xlat
adc
jg
out
outsl
push
push
sub
mov
dec
imul
into
add
sub
call
inc
push
adc
leave
xchg
and
popl
out
out
clc
lds
or
lock
sub
pop
out
ds
cli
int
ret
xlat
mov
push
or
mov
mov
loop
mov
jno
outsl
notb
mov
add
call
pop
push
popf
pop
int3
mov
jle
pop
pop
repz
outsl
xlat
add
add
jg
add
data16
repnz
dec
mov
add
icebp
repz
dec
cltd
das
leave
aas
stc
pop
push
ret
movsb
cmp
sbb
sarb
sbb
in
sub
call
dec
xor
xchg
mov
ja
pop
outsb
push
test
dec
sub
cmp
pop
jo
dec
mov
int3
es
cltd
cmp
leave
adc
pop
ret
xor
fnstenv
push
mov
pop
andl
inc
fstpl
in
xlat
lcall
jecxz
add
or
cmp
neg
sti
iret
popf
aad
imul
pop
or
mov
iret
mov
mov
pop
andb
sbb
mov
aad
idivl
add
sbb
ljmp
movsl
sbb
sub
sub
sbb
scas
packuswb
ja
ret
sub
push
cmp
bound
or
movsb
or
pushf
loope
loop
add
movsb
stos
mov
leave
jle
sbb
sarl
cltd
and
imul
ret
leave
push
cmp
cmpsl
pop
cwtl
in
and
jmp
dec
dec
das
sbb
mov
ds
and
lock
add
add
lcall
lds
push
addl
into
shr
adc
dec
push
mov
lcall
insl
mov
daa
push
cmp
jno
add
test
push
push
cli
mov
sub
std
xchg
ljmp
or
sti
or
idivl
movsl
inc
push
push
and
dec
lcall
jecxz
jo
adc
dec
push
or
call
rorb
rcrb
stos
call
or
inc
cmpsl
je
repz
xor
clc
ds
insl
movsb
sbb
call
sub
mov
popf
pop
adc
repnz
xchg
data16
inc
xor
nop
pop
mov
sbb
int3
std
sbb
mov
out
pop
lods
jo
imul
push
lcall
ljmp
xchg
adc
add
or
outsb
add
in
test
and
jmp
xchg
adc
cmp
and
pop
fdivl
popf
mov
call
int
leave
or
jno
xchg
mov
adc
mov
int3
sbb
and
popa
es
ret
mov
push
into
js
push
mov
cmp
in
cltd
lods
mov
in
sub
lds
bound
jmp
push
xorb
mov
rcll
mov
jge
or
cmc
sbb
ja
call
xchg
outsb
out
mov
push
adc
jns
pushf
adc
popa
dec
jle
push
cmp
dec
int
daa
pusha
fwait
out
insb
add
incl
mov
mov
out
pop
js
fisttps
std
imul
scas
mov
fmull
fwait
int3
arpl
sub
flds
call
in
cmp
cld
data16
adc
lds
mov
mov
stc
push
or
dec
inc
loope
ljmp
fstpl
arpl
jp
hlt
call
inc
fisubrs
cmp
out
jae
xlat
jle
or
xor
xchg
pop
pop
js
ja
rcr
ljmp
xor
dec
pop
ficoml
data16
jp
aas
jb
cmpsl
imul
jmp
insb
pop
rorl
dec
addb
call
out
cmc
jecxz
add
sti
mov
pop
fistpl
repz
enter
loope
and
es
cmp
adc
jns
xor
or
and
xchg
scas
xor
mov
movsl
xor
mov
jno
sbb
cmp
cmc
adc
movsl
or
and
sbb
call
in
sub
push
sbbl
sbb
sbb
xor
loopne
subl
incl
stos
jbe
ljmp
out
adc
mov
std
test
dec
mov
imul
pushl
dec
jb
cltd
jns
fcomi
inc
jl
les
pop
sub
mov
push
pop
sar
inc
or
movsb
jmp
lahf
ljmp
in
add
idivb
mov
adc
int3
xor
add
xor
add
push
jmp
mov
call
cwtl
test
pop
decl
and
mov
cmp
test
rcrl
pop
push
call
lret
pop
mov
adc
dec
les
or
stos
mov
ljmp
fisttps
stc
push
les
aas
into
jo
mov
dec
push
repz
push
jl
inc
xchg
pusha
test
insb
add
add
mov
out
inc
test
jmp
push
testl
in
repz
xchg
sahf
fnstenv
fstpt
lcall
cltd
push
addr16
mov
inc
or
icebp
fnstenv
int3
mov
xor
push
loopne
aad
std
lock
inc
out
jle
fistps
xor
xor
sub
cmp
and
dec
cmpsl
shll
or
jmp
xor
flds
pop
xchg
loop
out
sub
pop
data16
aam
lahf
or
inc
inc
pushl
stos
int3
xchg
movsl
pop
in
sub
adcl
sbb
lahf
outsb
add
icebp
decl
dec
mov
mov
shr
sub
test
xor
test
mov
lcall
mov
jp
shll
je
inc
ja
inc
arpl
in
xchg
aas
or
xchg
ljmp
or
stos
repz
jp
outsb
cli
dec
rcrl
dec
jmp
cmp
int
mov
inc
icebp
cli
jge
cmp
icebp
dec
andl
call
fwait
cmp
inc
jno
jecxz
dec
out
add
fistpll
jbe
push
jmp
mov
ljmp
ror
imul
inc
rcr
pop
outsb
jp
push
js
arpl
jmp
cld
out
pop
mov
xor
push
pop
aas
test
inc
stc
adc
xchg
lds
mov
sar
imull
push
mov
dec
sbb
aad
sbbb
mov
dec
push
jne
xchg
xchg
fcom
adc
scas
test
jecxz
stc
lock
fs
call
out
push
sarl
jo
stc
or
cli
cwtl
mov
mov
loop
bound
hlt
lods
adc
sub
add
repz
xor
pop
push
push
out
jge
arpl
incl
xchg
aaa
xlat
movsl
rclb
iret
pop
repnz
and
call
mov
xchg
mov
xchg
cmp
dec
xor
push
enter
hlt
xchg
cmpsb
xchg
mov
lahf
fldt
imul
xor
popa
inc
jmp
cli
sub
xchg
push
sub
fcomi
ljmp
cli
pop
ljmp
sub
movsb
mov
psubsw
fbstp
mov
sti
fs
or
or
push
mov
and
jb
mov
mov
mov
dec
addl
jge
lcall
sbb
inc
movsl
inc
popf
xchg
jle
sbb
ljmp
jge
push
sbb
cltd
xchg
incl
insl
jle
ljmp
rcr
jns
repnz
sub
sub
cwtl
iret
add
fidivl
popf
inc
dec
in
jae
jno
mov
fmull
test
xchg
push
movsl
mov
aaa
dec
jg
fiaddl
sub
pusha
cmpsl
xchg
mov
pushf
icebp
fidivrs
scas
daa
fcmovnbe
into
cmp
and
lcall
pusha
movsb
cmp
or
ret
lea
shl
gs
jns
sub
inc
jo
call
and
xor
fucomip
xor
add
inc
xchg
outsl
test
adc
pop
decl
in
nop
clc
ss
mov
test
dec
xor
and
ret
adc
fdivr
pop
cmp
fldl
mov
rcrb
imul
imulb
scas
mov
mov
addr16
push
mov
hlt
pusha
cmp
jmp
cmpsb
xchg
pop
cmp
aaa
add
dec
jno
shll
xor
mov
test
or
decl
int
fnclex
iret
shrb
or
inc
std
pop
loopne
push
mov
int3
lahf
or
jg
add
mov
xchg
push
sub
sub
popf
mov
fnstenv
je
out
out
data16
lods
sbb
repnz
pop
lock
mov
inc
dec
in
hlt
in
nop
or
incl
xchg
stos
out
stos
les
int3
pop
and
fistpll
ret
sub
pushl
inc
jb
in
xor
incl
dec
xchg
push
inc
iret
pushf
pop
repz
adc
push
in
xchg
pop
stos
lock
repz
inc
cli
xor
decl
jbe
and
xchg
in
call
ret
jecxz
ljmp
rorb
pop
fwait
or
lcall
stc
sbb
inc
mov
jns
push
sahf
daa
pop
mov
enter
clc
outsl
scas
hlt
rclb
hlt
movsl
xlat
mov
mov
mov
push
sub
call
adc
pop
sbb
std
test
int
mov
jg
cs
mov
sub
lock
or
popl
insl
insb
sbb
ja
int3
inc
fldenv
jo
mov
jb
push
jne
fbstp
fisubl
cmp
jb
xchg
add
decl
push
cltd
lock
mov
mov
mov
sar
incl
out
xor
dec
out
mov
aam
mov
cmpsl
ss
inc
inc
imul
jns
scas
pop
ljmp
jl
or
test
lret
push
icebp
popa
jb
in
iret
popf
xor
mov
mov
iret
lret
or
pop
sbb
cmp
sar
sti
dec
ljmp
inc
pusha
test
movsb
cmpsb
fs
lds
mov
jmp
adc
cltd
aam
add
add
mov
and
dec
enter
mov
enter
ljmp
movsb
rclb
and
cwtl
dec
sub
lods
adc
mov
jle
incl
clc
sbb
push
push
lcall
fsubp
add
xor
inc
daa
dec
out
dec
dec
fbld
jg
adc
repz
add
jmp
mov
repnz
jae
jb
faddl
bnd
popf
add
jmp
mov
bound
jns
jmp
inc
push
out
movsb
lock
pop
sbb
lds
pop
mov
push
xchg
jno
adc
loope,pn
stos
incl
mov
ljmp
repnz
inc
mov
sahf
or
xlat
call
data16
push
shrl
or
call
in
xchg
jae
sub
jg
jmp
enter
push
mov
fs
out
cli
call
inc
sti
ss
adc
cmp
add
loop
mov
fs
ljmp
idiv
dec
iret
mov
ljmp
and
jbe
sbb
cmp
mull
insl
stos
loope
inc
gs
jp
fistps
clc
lahf
xchg
mov
jl,pt
xor
test
dec
loope
sub
imul
pop
jp
xor
in
lcall
clc
mov
dec
push
add
cmp
cmpsb
jae
lods
push
mov
hlt
ret
hlt
lods
add
dec
data16
inc
pop
inc
sbb
push
fnstcw
jle
jno
movsb
cmp
bound
xor
loop
pop
enter
cmp
add
test
inc
dec
xchg
pushl
roll
clc
js
js
jl
call
lret
cmp
xor
enter
pushl
jmp
push
stc
and
mov
push
test
jnp
inc
inc
fldcw
mov
mov
sbb
dec
xchg
fisubrs
std
stc
sub
aam
mov
out
sub
leave
clc
dec
add
inc
shl
shrb
insl
movsb
pop
mov
cmpsl
aad
xlat
cwtl
mov
pop
cmc
cs
mov
mov
mov
xlat
pop
dec
sub
iret
mov
push
iret
sub
jmp
mov
inc
jb
daa
leave
arpl
insl
jno
or
ret
call
fidivs
mov
push
push
fdivrs
inc
and
iret
les
cmpsl
aas
int
cli
sub
das
push
sbb
jg
push
loope
mov
sub
sti
outsb
mov
sar
ljmp
insb
js
icebp
es
ret
ljmp
jg
fucomip
decl
xchg
rorb
mull
pop
mov
sub
and
divl
add
mov
movsb
sahf
cld
inc
aad
sbb
in
pushf
dec
sub
push
movsl
mov
push
lods
add
mov
add
in
jno
je
and
and
jle
movsl
push
dec
lcall
pop
adc
cli
dec
sbb
xchg
lcall
shll
cmp
incl
shlb
lcall
jge
mov
mov
leave
in
aam
xchg
dec
and
lods
incl
pusha
ljmp
jo
insb
dec
cmp
cs
fwait
xchg
lock
fsubs
dec
cld
push
rcr
in
push
popf
das
xchg
pushf
push
imul
rorl
inc
jle
or
pop
std
filds
fwait
js
sbb
xchg
dec
cmpsb
lcall
mov
jb
push
jmp
or
jb
and
in
jge
mov
push
cmp
mov
push
popl
sti
daa
andl
rclb
call
frstor
cmp
aaa
add
push
or
sbb
ret
gs
cmp
mov
cmc
mov
push
mov
xor
jmp
push
int
pop
addr16
push
or
popf
negl
mov
icebp
fdivr
decl
iret
or
and
pop
xor
lret
push
repnz
inc
std
pusha
pushl
nop
test
mov
pusha
out
cmpsl
push
push
xlat
in
rcrb
lods
repz
mov
hlt
stc
in
scas
cmp
cwtl
fstl
outsl
test
jg
or
pop
in
leave
sub
filds
and
jp
push
fnstcw
divb
fdivp
ljmp
call
dec
in
jmp
push
fdivs
or
insl
out
lock
pop
cld
pop
cld
dec
jle
shl
cmp
enter
mov
fcomip
incl
or
adc
push
jl
push
addb
push
popf
aas
leave
popa
out
test
push
scas
and
add
popa
mov
mov
sti
mov
push
adc
push
cmp
lcall
mov
pop
xchg
jmp
out
sbb
push
addr16
pop
stos
stos
sub
adc
push
ret
movsb
xor
mov
jno
sbb
or
lret
adc
or
incl
andb
pop
fwait
push
inc
repz
jbe
cmp
loope
xchg
out
dec
ljmp
icebp
pop
pop
fnstsw
out
inc
in
out
inc
lahf
insb
jo
jb
mov
jg
pop
incl
data16
loope
sub
fcoml
adc
in
inc
mov
push
call
and
in
xchg
fcoms
andb
stos
iret
lahf
xlat
movsl
cmp
dec
fdivrp
decl
rcrb
sub
sbb
ret
xor
mov
syscall
loop
or
mov
call
cmpl
daa
mov
cli
jg
mov
lea
lods
rorb
negb
pop
imul
decl
jl
test
dec
jno
outsl
aas
clc
popf
dec
cmp
dec
loope
aad
dec
ljmp
jmp
mov
jae
xorb
sbb
dec
cld
add
jmp
add
xor
cmp
pop
pop
and
aam
mov
sbb
mov
arpl
sbb
addb
mov
outsl
cltd
cld
cmp
inc
aas
mov
mov
std
jmp
push
in
pop
push
push
test
movsb
data16
sub
xchg
imul
cltd
popf
and
pop
push
pop
mov
ljmp
dec
lret
test
push
mov
mov
xchg
mov
aaa
push
ljmp
fbstp
sbb
aas
test
call
ljmp
inc
enter
mov
fs
sub
add
push
jg
loopne
fstpl
or
jg
call
lds
jne
pop
cmc
cmp
popa
sbb
adc
mov
decl
xchg
enter
popa
sahf
adc
push
cs
mov
cmp
loop
push
mov
mov
pushf
leave
dec
movsb
ljmp
movsb
cmp
in
nop
add
cmp
pop
sbb
aam
fsubs
outsb
mov
mov
adc
test
in
or
ret
xor
testl
sahf
repz
cmpsb
jb
sahf
adc
pop
into
sbb
insl
push
test
arpl
jp,pn
mov
aad
cmpsb
xchg
xchg
out
shlb
aas
shrd
lcall
mov
cld
sub
mov
icebp
out
clc
loop
aas
jmp
mov
in
stc
das
daa
pop
jmp
cmp
cli
call
in
jmp
int3
dec
push
lret
lret
xchg
lret
nop
jmp
push
jg
call
clc
je
or
out
pop
sub
int
out
cld
jmp
test
pusha
cs
test
xor
scas
push
jle
dec
scas
adc
add
sbb
pushl
pop
repz
repz
mov
insl
cli
cli
adc
sbb
fmuls
jmp
or
add
jbe
cli
lods
cmp
dec
cld
sbb
mov
hlt
repz
cs
push
test
cs
test
xchg
fistpl
faddl
sbb
outsl
pop
cltd
scas
pop
out
inc
xchg
cli
fucomp
stos
lret
test
adc
pop
mov
cs
out
cmp
pop
or
pop
add
outsl
sbb
outsl
mov
inc
mov
add
ljmp
clc
ja
jmp
add
xlat
sub
jecxz
das
ficompl
loope
cwtl
push
test
ret
push
ljmp
sahf
mov
jge
out
lcall
in
arpl
xchg
call
cld
out
cmpsb
mov
mov
push
xlat
loope
push
cmp
pop
pop
adc
cmp
call
pushf
xchg
pop
enter
cmp
fs
adc
cmpsl
decl
lods
jbe
call
add
das
into
scas
insl
ss
faddp
mov
daa
inc
out
scas
mov
dec
ret
mov
fcomip
int
pop
jb
lret
or
rorl
into
fisttps
jp
cmp
add
adc
adc
bnd
add
das
movsl
dec
mov
xchg
fcos
lcall
add
push
add
sbb
icebp
or
jmp
call
add
int
jnp
lret
xchg
scas
inc
insb
adc
jg
pop
in
mov
je
orb
xchg
adc
add
add
cltd
mov
movsl
hlt
dec
and
or
mov
aam
adc
dec
lea
out
sub
aad
ljmp
xchg
inc
in
adc
jecxz
xlat
in
mov
addr16
insl
xchg
incl
cs
clc
dec
sbb
jb
out
add
inc
mov
add
sbb
aad
jmp
pop
insl
jp
fldenv
inc
jmp
out
or
sbb
mov
add
xor
and
les
mov
xor
pushl
dec
bound
les
mul
call
mov
and
push
jbe
pop
decl
lock
adc
sahf
out
jne
jno
mov
cmp
jne
sbb
incl
jbe
sub
pop
adc
xor
lock
popa
or
push
push
push
jg
jp
adc
loopne
gs
shll
dec
ja
xchg
adc
cli
shrb
loop
jnp
stos
aas
cmp
mov
adc
pop
dec
outsl
repnz
jbe
mov
ds
push
inc
inc
mov
xor
mov
push
inc
mov
sbb
repnz
xchg
push
outsl
mov
popw
into
outsb
subl
pop
std
push
int
sbb
pop
xor
mov
cmp
or
sarl
cmpsl
in
fsubrl
mov
in
xor
mov
add
pushl
ficomps
or
cmp
lcall
scas
fnstenv
lcall
sbb
mov
pushf
dec
jae
lds
cmp
fldcw
stc
xchg
out
cmpsb
inc
jno
inc
push
inc
fidivl
int3
es
sbb
fs
lcall
fists
test
loopne
stos
sbb
int3
dec
das
push
inc
icebp
movsl
cs
sti
xchg
inc
mov
inc
out
push
mov
test
xor
ljmp
jmp
mov
push
iret
mov
test
cmp
mov
scas
test
into
js
mov
lahf
sbb
test
data16
jg
push
jp
popa
out
scas
clc
shld
mov
and
pushl
not
sti
or
xchg
dec
out
push
inc
lret
int
push
cld
incl
aaa
mov
repz
js
rcrb
pushl
nop
cs
jp
ljmp
mov
fisubl
mov
sub
decl
sar
push
pop
insb
aad
ret
punpcklwd
mov
inc
pushl
pop
jle
stc
mov
adc
jo
imul
loop
jae
call
out
clc
mov
jmp
or
testb
fimull
jle
dec
mov
mov
jge
lods
les
call
fistpl
cmp
loope
shrb
sub
jno
jae
jg
pop
stc
movsb
sti
aas
ret
push
jno
mulb
mov
stos
jg
mov
rolb
cmp
stos
fisubl
repz
lds
inc
sbb
pushl
mov
jns
pop
mov
sbb
push
pop
test
cmovae
iret
mov
jge
out
lret
jmp
mov
hlt
test
mov
jne
mov
dec
sbb
jmp
cmp
imul
dec
jle
rclb
mov
adc
std
incl
enter
das
fildl
dec
pushf
jg
xchg
and
pusha
inc
nop
xor
pop
pop
das
scas
adc
xchg
or
adc
pushf
ds
xchg
repnz
decl
lcall
xchg
mov
inc
mov
enter
push
outsl
inc
mov
jmp
fimuls
mov
mov
and
in
sbb
dec
pushl
ret
sbbl
in
inc
mov
ret
pop
ss
lcall
cmp
mov
mov
movsb
divl
orb
jbe
xchg
imul
cmpsb
push
ret
jp
out
fdivs
in
or
stos
clc
insl
out
ffree
stos
shrb
mov
loope
sub
jle
addr16
or
sbb
jmp
inc
rcll
in
and
push
fwait
gs
pop
call
and
in
sbb
shll
pop
push
cmp
sbb
adc
jp
or
aam
icebp
push
lcall
ret
mov
inc
cwtl
add
out
inc
push
lods
and
and
dec
push
call
lods
cwtl
and
sar
iret
gs
or
or
dec
and
jns
ret
add
lds
and
aas
adc
mov
mov
js
lds
decl
push
and
fxtract
in
das
fdivs
cmp
and
mov
ja
fiadds
and
ds
push
testb
pop
mov
cmp
pop
imul
jnp
cltd
xchg
lret
loopne
incl
inc
lret
mov
and
mov
dec
pop
sbb
push
or
dec
call
push
pop
cld
arpl
bound
push
das
popf
enter
push
inc
ljmp
repz
repnz
xor
pop
pop
and
pop
xor
sti
mov
xchg
jg
loopne
push
das
mov
sub
jmp
push
std
cmp
xchg
inc
inc
in
negl
push
mov
or
xchg
std
jae
inc
cmp
inc
icebp
xor
nop
mov
mov
cmp
push
mov
ret
pop
fs
hlt
test
fldcw
addr16
inc
test
mov
incl
mov
mov
pop
xlat
or
xlat
add
inc
xchg
aam
cs
incl
sbb
mov
in
xchg
dec
add
dec
shll
jge
ljmp
call
adc
fs
aam
sub
lret
ret
xchg
xor
decl
mov
inc
sub
aas
enter
es
sub
cmp
push
lret
jge
leave
and
adc
pop
std
call
mov
inc
xor
push
and
fidivrs
inc
in
mov
xor
call
adc
sub
mov
jnp
cmp
dec
push
mov
call
ljmp
inc
mov
aas
dec
inc
icebp
aaa
lcall
in
rcrb
cld
aas
push
xchg
sub
and
pop
sbbl
addr16
mov
pop
sub
mov
dec
adc
insl
loopne
lret
sbb
sub
jne
inc
shll
shlb
loopne
in
ljmp
pop
jmp
jp
pushf
lahf
in
push
es
push
ret
rcll
dec
dec
pushl
ja
cmpsl
stos
in
and
cmpsb
push
mov
push
clc
movsl
das
mov
decl
pop
aam
loop
mov
into
pop
mov
sub
cmp
jge
mov
push
sar
incl
sub
mov
pop
ss
cmp
xchg
in
inc
pop
pushl
mov
pop
cmp
inc
add
adc
testb
incl
ret
xor
xchg
hlt
ljmp
mov
cmc
mov
test
push
lahf
scas
push
lds
jmp
pop
in
movsl
jg
pusha
dec
jp
stc
mov
div
mov
add
incl
sbb
cs
subb
std
mov
jge
mov
cltd
clc
mov
and
adc
call
std
incl
ja
push
lds
mov
sub
cmpsl
jnp
scas
ljmp
ss
cmpl
push
fs
push
xchg
adc
cmp
mov
decl
mov
pop
xchg
pop
add
jge
mov
cmp
xchg
iret
jecxz
sub
pop
in
loop
cmp
rorl
or
push
pcmpeqw
shlb
cltd
and
icebp
icebp
lcall
decl
jmp
cmp
lods
or
dec
outsb
les
out
aad
mov
clc
fcompl
leave
jecxz
in
ret
jae
adc
sahf
orl
or
lcall
cmp
jno
fidivl
cmpb
sbb
lret
bound
hlt
incl
vminps
xorb
pop
addr16
push
pop
movsl
mov
mov
push
mov
rclb
or
or
in
xchg
xchg
lods
jl
rcll
cld
incl
mov
stos
stc
mov
sahf
dec
adc
in
sti
lret
lcall
out
incl
mov
std
pop
pop
popa
sub
adc
lret
adc
idivb
cld
push
cmpsb
js
mov
jp
fistps
or
out
leave
dec
cmp
lcall
lahf
adc
cmp
aas
ja
ret
push
jb
or
pushl
loop
jp
mov
ja
mov
outsb
mov
pop
sub
cld
lcall
icebp
and
faddl
lcall
cmp
pushf
and
add
js
sbb
lods
nop
push
int3
sbbl
and
push
ret
mov
and
pop
xor
gs
inc
orb
cld
incl
cmp
dec
ret
mov
lods
je
lods
xor
enter
daa
pop
add
sbb
jg
or
cmp
enter
xchg
xchg
lcall
xchg
mov
les
fwait
je
movsl
xchg
fnstcw
daa
xor
ljmp
inc
pop
cli
add
push
int3
aas
or
sbb
fmull
add
out
xor
push
jge
std
jmp
in
cltd
jmp
daa
into
push
or
jl
loopne
jecxz
shl
imul
or
sbb
js
xchg
or
das
imul
mov
les
fidivrl
and
sbb
in
lret
int3
lcall
inc
xchg
lods
aas
inc
lahf
and
and
xor
popa
or
repz
movsb
test
cwtl
adc
jmp
push
sbb
ljmp
pop
xor
mov
push
int
mov
jge
adc
incl
add
jle
jb
leave
sub
pop
mov
xlat
jle
and
sarb
dec
or
sar
jbe
cltd
cmp
addr16
mov
orb
mov
out
and
aaa
sub
add
jo
pop
repnz
add
scas
pop
mov
dec
sbb
lods
lea
je
adc
loope
addr16
mov
push
inc
jl
mov
leave
add
adc
loope
mov
std
pop
fisttps
aad
dec
dec
pushl
movsl
and
pop
shr
rclb
pop
dec
and
lcall
int
pop
sub
adc
std
inc
in
dec
js
sub
lods
in
or
ljmp
idiv
jl
push
fldl
or
fwait
test
mov
bound
enter
push
add
call
in
xchg
std
xchg
mov
or
in
lds
mov
popa
movsb
and
fwait
stos
xchg
cmp
out
aam
icebp
stc
sub
mov
insl
jno
mov
xchg
out
hlt
sbb
ss
cli
pop
sbb
mov
decl
test
ljmp
mov
incl
add
mov
movsl
jno
ret
lahf
stos
jae
xchg
adc
lcall
inc
ret
test
fiadds
add
sahf
inc
sub
jno
sub
scas
lods
lret
add
jnp
fstpt
lcall
dec
shll
adc
scas
pop
enter
adc
pusha
jns
dec
je
rcl
loop
cmp
lcall
je
push
jl
xor
pop
push
cmp
sbb
mov
int3
pusha
sub
mov
mov
nop
sub
add
add
hlt
inc
dec
and
scas
cli
call
cmpsb
dec
push
jo
scas
xor
faddl
jns
xchg
stc
jo
outsb
rol
incl
into
xchg
test
push
sub
out
frstor
xchg
jae
loope
cmp
test
jb
add
mov
fwait
cmp
and
icebp
ljmp
push
jne
aaa
inc
jle
pop
divb
adc
ja
add
jne
call
adc
mov
xor
push
inc
dec
and
pop
lods
rcll
or
mov
jnp
cmp
movsl
popf
dec
jmp
mov
inc
mov
jbe
pop
sub
and
incl
test
sbb
sbb
jl
jle
sahf
cmp
mov
push
addr16
jae
jp
popa
xlat
je
fmull
fadds
outsb
mov
call
xor
hlt
xchg
dec
mov
imul
pop
xor
mov
and
icebp
call
cli
div
jle
inc
fnstenv
adc
popa
xor
dec
pop
out
scas
fdivrp
decl
clc
and
and
cwtl
adc
sub
mov
data16
inc
fdivrp
mov
scas
sbb
add
aad
push
sub
adc
mov
in
jo
lret
mov
adc
jno,pt
call
cmp
fsubp
punpckhdq
or
mov
fldcw
filds
or
and
dec
push
jg
into
in
jne
push
or
push
fstp
mov
sbb
or
aaa
mov
jne
mov
dec
and
xchg
fdivrs
idivl
jg
dec
add
push
mov
xor
rcll
and
lcall
sub
adc
lock
mov
test
dec
dec
mov
pop
push
pop
mov
sub
inc
xor
js
cld
filds
cmp
test
mov
decl
imul
xchg
xor
insb
dec
xchg
testl
or
or
sbb
stos
lret
dec
or
scas
and
lret
jecxz
repz
jo
sub
pushl
loop
sti
repnz
sbb
lds
mov
adc
or
inc
mov
int
je
jg
pushl
out
out
fwait
hlt
cmpsb
xor
adc
fisubrl
add
shlb
lcall
pop
mov
repz
repz
adcb
nopl
faddl
incl
outsb
inc
arpl
imul
inc
adcb
jno
bound
jns
ret
stos
popa
add
jb
leave
idivl
outsb
or
and
sbb
incl
cld
ljmp
sbb
fdivs
xor
outsb
cli
fcomip
inc
push
jle
mov
cmc
sahf
les
add
imul
orl
fmul
inc
je
mov
cmp
pop
bound
mov
popl
call
or
mov
sbb
inc
push
and
clc
sbb
lcall
jg
in
fidivs
fmuls
clc
aam
mov
test
jae
jae
xlat
pushf
call
data16
xchg
dec
mov
test
mov
popf
add
pop
mov
pop
cmp
jnp
mov
push
sub
pushf
sbb
lcall
ret
rolb
mov
stos
xchg
shll
lcall
daa
sub
sub
sub
mov
mov
push
mov
imul
outsl
jno
adc
outsb
sbb
ds
rcrb
ljmp
mov
lret
rcrb
xorl
mov
or
push
call
scas
lods
cmp
add
fstpl
std
test
shrb
xchg
dec
mov
jnp
mov
fnstsw
test
mov
cmp
addr16
lods
bound
dec
call
mov
xlat
pop
push
mov
stos
xor
adc
pusha
push
sub
push
xor
cmp
push
push
pop
mov
mov
stc
xchg
xchg
push
mov
xor
jp
test
data16
jg
in
adc
cmp
cmc
repnz
adc
ror
clc
nop
adc
inc
shrb
rcrb
jmp
mov
dec
jmp
test
push
add
ret
shll
cmp
decl
or
sub
cltd
popa
mov
inc
dec
jle
jo
daa
push
jno
decl
and
and
jecxz,pt
xchg
ficomps
xchg
pop
test
lcall
adc
cld
xchg
stc
push
mov
mov
sub
cmp
popa
in
mov
adc
add
push
mov
out
stos
cs
xor
cmp
insl
jno
cmp
ud2
cmp
fists
sub
xor
cltd
outsb
adc
stc
std
das
dec
mov
push
fidivrl
jmp
lret
fs
or
sbb
xchg
cmpsb
cwtl
xchg
fmuls
dec
dec
loopne
add
xchg
incl
jecxz
pop
push
xchg
jg
test
fucomi
out
aam
addr16
das
mov
adc
push
decl
js
movl
and
push
dec
xor
pop
jmp
adcb
int3
call
imul
imul
repz
xor
jmp
shll
adc
ja
idiv
pop
xchg
add
dec
xchg
push
in
dec
mov
lods
cld
pushl
add
mov
push
push
sub
pusha
dec
mov
jge
lds
add
rclb
pushl
and
pusha
ficoml
lock
scas
cmpb
mov
adc
call
incl
xor
sub
xchg
mov
push
pop
xor
nop
aaa
orb
mov
mov
push
add
xchg
sarb
ret
lds
shlb
jno
loopne
mov
lods
xor
call
dec
mov
or
incl
jae
add
ss
loopne
call
ja
ret
pop
xchg
and
test
mov
cmp
jmp
clc
int3
mov
xor
push
out
inc
sbb
lcall
pop
xor
incb
ss
rcrb
xor
jmp
jg
pop
sahf
mov
clc
fcomip
mov
cmpsl
mov
mov
ret
and
mov
jbe
ljmp
inc
repnz
dec
pusha
aaa
push
jo
push
adc
outsb
outsl
repnz
dec
out
shlb
mov
push
xchg
sbb
xchg
adc
xorb
adc
sar
fcomip
call
cmpsb
mov
loopne
sub
arpl
cmp
push
xchg
push
xor
test
adc
jl
and
hlt
dec
push
mov
adc
das
packsswb
pop
ret
std
jmp
fisubs
arpl
and
insb
aam
xchg
js
mov
pop
stos
sbb
dec
mov
xchg
pop
dec
or
mov
stos
inc
imul
bound
xor
scas
or
incl
sbb
push
loopne
loope
push
mov
jnp
or
and
mov
call
inc
dec
inc
or
hlt
notb
jns
stos
andl
xor
dec
push
popf
sub
lret
shl
rorb
cwtl
roll
cli
mov
not
or
jle
cmp
decl
push
push
aad
jge
xor
jb
sbb
das
lds
ja
in
add
ljmp
seta
dec
dec
aad
dec
cltd
ret
or
in
stos
fists
les
fadd
jge
xchg
lcall
jmp
aad
jno
dec
mov
inc
loop
es
add
dec
movsb
mov
jmp
cmpl
jg
jg
cltd
sbb
cmp
das
fistl
daa
cli
daa
cmp
ret
jle
and
lcall
push
stc
jo
ds
pop
fdivl
mov
bndstx
jmp
add
adc
clc
decl
jp
mov
popa
mov
andnps
stos
loope
xor
sbb
mov
test
mov
mov
pusha
test
push
dec
call
push
or
and
lcall
jg
in
aad
or
adc
in
popa
ficomps
test
and
sbb
push
or
pushl
inc
in
idivb
pop
and
xor
mov
out
in
cld
mov
push
rorb
ret
adc
loop
add
push
cmp
sti
loope
js
out
data16
mov
adc
incl
push
aam
add
jmp
test
sbb
jecxz
mov
jmp
popa
inc
iret
mov
decl
test
and
cmp
mov
sbb
imul
incl
jne
fcoml
push
xchg
gs
outsl
aad
iret
fldcw
jg
je
popa
inc
pusha
jle
pop
shl
adc
mov
jbe
fldl
mov
scas
jge
sbb
add
and
jge
adc
cmpsb
mov
arpl
xor
cmp
mov
mov
inc
call
xor
dec
jbe
push
mov
and
incl
mov
cld
jl
pop
mov
push
push
cmpsb
jg
and
setno
daa
ret
out
sbb
adc
cli
sub
aad
xor
sbb
jnp
daa
stos
mov
pushl
popf
cs
dec
shlb
adc
into
inc
js
out
cmpsl
jle
push
dec
sbb
inc
xor
enter
scas
cmpsb
mov
mov
or
call
movsl
js
out
mov
idivb
jns
xchg
dec
stos
aas
outsb
mov
and
in
cmp
mov
arpl
xchg
insb
clc
lcall
fwait
cmpsl
and
mov
pushl
fimull
leave
and
lock
mov
xchg
jecxz
add
push
push
sbb
inc
js
iret
inc
in
repz
jp
adc
adc
jle
jmp
pushf
gs
call
imul
pop
jg
push
outsl
jmp
test
sub
imul
push
jb
out
call
xor
es
mov
aam
std
pop
lret
push
out
pop
les
mov
pop
mov
into
or
xor
fs
push
add
scas
fsts
jb
dec
into
mov
xchg
sti
ds
clc
push
cmc
call
sbb
aaa
xchg
cmp
dec
lcall
inc
jmp
test
incl
adc
or
in
push
adc
mov
add
lock
shl
imul
fistps
fimuls
adc
jno
or
push
dec
ret
ret
jp
pop
inc
xor
std
stos
push
or
repnz
es
int
scas
movsb
cmc
outsl
xor
dec
mov
sbb
inc
mov
loop
jmp
pop
sbb
ja
in
pop
push
mov
push
stos
cmp
adc
mov
daa
mov
jo
test
clc
or
pop
mov
dec
mov
aam
mov
cmc
xchg
jmp
jmp
and
dec
out
mov
sbb
or
xchg
decl
rolb
mov
mov
je
lods
shll
add
faddp
mov
mov
outsb
mov
lcall
imul
outsb
enter
scas
in
mov
mov
in
sbb
call
subb
jmp
or
mov
inc
out
clc
inc
inc
popa
pop
je
pop
or
or
popa
push
movsl
test
ljmp
fldt
jmp
or
js
sbb
push
mov
test
mov
sar
aaa
std
incb
out
jo
js
popf
inc
cmp
xchg
adc
out
bnd
sbb
xor
lock
popf
ljmp
sar
fstp
xorb
test
push
xchg
mov
shl
adc
ror
out
xchg
jno
dec
jg
jmp
mov
in
mov
cmp
or
mov
add
jge
fimuls
in
popa
add
es
into
ficoml
lds
aas
mov
es
in
cld
ljmp
test
imul
aaa
jle
cmp
and
mov
mov
or
pop
mov
iret
mov
ja
mov
dec
aaa
mov
out
out
push
iret
int3
jne
pop
ljmp
sub
inc
mov
sahf
jbe
daa
dec
mov
out
shl
in
pop
add
mov
jmp
mov
jae
aaa
jecxz
stos
sub
mov
and
sbb
ljmp
jmp
mov
sbb
insl
subb
dec
adc
xchg
faddl
inc
adc
pushl
jb
or
jecxz
mov
sbb
insl
mov
mov
fbstp
in
or
popf
xlat
sbb
sub
inc
and
dec
lock
out
xlat
daa
mov
add
enter
add
pushl
lea
mov
xor
ret
call
ja
mov
inc
into
xor
lcall
call
cld
out
inc
std
xor
stos
lea
dec
fsts
in
enter
add
test
ljmp
cwtl
dec
mov
jg
xchg
call
lds
jle
xchg
jg
std
cwtl
ret
sub
sarb
pushf
xor
repnz
sub
ljmp
lret
cwtl
mov
arpl
cmpsl
sbb
je
aaa
jmp
add
add
inc
lcall
and
push
inc
adc
test
mov
rorb
test
xchg
add
pop
repnz
rorl
es
adc
mov
pop
iret
movsb
jge
and
dec
xor
pop
fcmovnbe
sub
ljmp
adc
sub
shll
test
ljmp
add
mov
outsl
ljmp
popa
ljmp
mov
lcall
mov
test
jge
addb
fcom
decl
das
xlat
div
mov
inc
fcmovnbe
dec
in
lret
out
cld
call
adc
stc
in
dec
adc
mov
mov
ja
int
mov
xor
aaa
subb
lods
mov
mov
outsl
movsl
cmp
shrb
and
sub
pushl
pop
les
iret
mov
push
call
mov
rclb
in
push
mov
decl
mov
mov
mov
fstp
ja
mov
xchg
out
sub
sarl
or
int
cmc
mov
sbb
fstpl
mov
cmc
jb
mov
jmp
adc
xchg
mov
hlt
loope
add
xchg
pop
shrl
sub
dec
add
loope
fisubrs
mov
jno
call
add
leave
jecxz
idivb
shl
sahf
xor
addr16
sbb
cli
loopne
out
leave
int
mov
or
sub
and
pop
sub
mov
pushl
xchg
ds
mov
iret
cmpb
movsl
dec
lcall
mov
xchg
and
push
es
sub
sbb
fs
jbe
dec
movsb
call
pushl
add
jno
pop
out
test
mov
shll
adcl
fsubl
cmp
movsl
ljmp
fbld
jns
pop
and
add
stos
ss
in
adc
cmp
fdivr
out
mov
icebp
dec
testl
hlt
lcall
cld
call
inc
mov
pushf
add
icebp
jmp
cwtl
stos
arpl
or
ljmp
jns
jg
pusha
jbe
test
inc
ds
cmpsl
jbe
cmp
pop
sar
adc
push
mov
imul
cld
pushl
scas
and
push
fdivr
movsb
adc
jp
das
out
call
and
inc
inc
pop
test
cs
add
mov
and
rcrl
cmp
lcall
mov
ret
jns
push
adc
push
or
out
std
sbb
lret
xchg
loopne
ljmp
sbb
adc
nop
in
iret
sbb
push
add
mov
fdivrl
ret
mul
pop
inc
movsb
cmpsl
inc
mov
pop
mov
orl
jo
call
pop
jecxz
jmp
mov
movsb
mov
mov
pop
lock
cmp
out
movsl
aas
out
loopne
pop
sbb
sub
shlb
dec
cmp
pushl
loopne
outsb
pop
mov
in
pop
inc
cmpsb
jnp
jl
shll
pushl
aas
xor
and
or
movsl
pop
nop
pop
push
ret
add
call
bound
lock
sbb
mov
fsubrs
mov
and
cmpsb
adc
not
mov
frstor
or
loop
decl
mov
pop
mov
pop
adc
inc
and
cmp
cmpb
xchg
adc
push
dec
insb
data16
dec
in
xorb
inc
dec
and
mov
or
xor
repnz
cmp
cmc
dec
jno
shlb
rcll
mov
loop
jbe
call
roll
movsb
xlat
es
mov
xchg
xor
dec
sub
enter
or
or
mov
pushl
inc
es
stos
push
insb
add
jge
popf
mov
ret
jg
sub
mov
in
dec
pop
cli
dec
mov
sbb
sub
pusha
sbb
xchg
xchg
in
jmp
pop
mov
rclb
inc
jo
adc
pop
push
ds
mov
dec
cmc
pushl
scas
and
cltd
xor
cmp
out
sbbl
mov
add
icebp
imul
or
fnstcw
jmp
bound
gs
push
xor
xor
sbb
inc
push
jne
xchg
mov
incl
mov
cli
adc
out
xchg
push
cmp
aad
imul
es
mov
outsl
cli
lcall
cmp
add
cltd
out
xchg
imul
inc
es
bound
jmp
mov
pop
popf
lock
or
ds
cmp
adc
lret
sub
push
xor
push
push
call
mov
repz
push
jg
cmp
push
jbe
jge
mov
pusha
iret
xor
outsl
mov
das
out
es
into
inc
imull
pushl
fs
in
push
sbb
or
ja
imul
out
lcall
ljmp
inc
mov
inc
jno
js
cmpsl
sub
xchg
fsubs
inc
mov
fldenv
or
decl
mov
int
sbb
add
incl
into
mov
insb
fbld
dec
ret
ljmp
outsb
jno
in
lea
xor
in
pop
mov
inc
inc
mov
rcll
or
pushl
in
pop
stos
pop
or
cli
dec
mov
and
mov
pop
add
pop
mov
sbb
xchg
pushf
mov
xlat
pushl
fsub
dec
int
xchg
jb
lea
pop
mov
andl
sbb
fwait
js
sbb
pop
sub
mov
shl
out
or
fwait
and
les
fsubs
decl
into
xlat
dec
out
jge
sbb
push
rorl
movsb
xchg
gs
loope
sub
jl
lock
fs
and
fisttps
je
xor
pushf
shl
arpl
inc
shlb
push
inc
incl
clc
sti
inc
ret
cli
mov
push
pop
push
nop
fstl
adc
pushl
xchg
scas
xlat
sub
sub
test
xchg
jg
pop
mov
cs
test
push
jmp
jmp
in
setae
mov
and
inc
sub
adc
hlt
mov
mov
aas
shr
add
fucomip
int
mov
xchg
inc
jne
inc
mov
mov
out
stos
pusha
incl
pop
push
xor
xlat
sbbb
pop
mov
rcrb
clc
or
aaa
inc
int
inc
push
add
cmc
xor
leave
jo
out
bound
fmull
pop
mov
aam
lcall
pop
dec
push
inc
inc
cmpsl
adc
fsubs
leave
mov
push
xor
scas
prefetch
jmp
sbb
lock
pop
mov
xchg
xor
js
mov
cld
fisubl
mov
jmp
imul
in
dec
cmp
and
and
mov
leave
sarb
sub
decl
or
mov
cmp
jmp
sbb
std
push
outsb
lods
rcrb
mov
sbb
jno
in
gs
negl
cmc
adc
pop
cli
pushf
mov
cld
insl
fcomps
adc
mov
push
repz
out
ffreep
shl
lea
push
lcall
decl
in
xor
sbbl
aaa
adc
pop
outsb
jp
test
lcall
rcl
jle
mov
out
sub
in
sub
push
add
outsb
pop
lret
add
jae
push
cltd
aad
cs
test
ja
add
pop
ret
and
push
mov
scas
add
or
push
xor
stos
out
cltd
push
out
addb
inc
adc
jl
test
bound
adc
fstl
jne
jo
imul
ja
push
insb
or
ds
push
imul
jne
add
out
adc
and
lods
test
rol
lock
pop
inc
cmp
mov
push
pusha
lds
and
inc
sbb
xchg
pusha
xchg
xchg
pop
inc
or
dec
pop
push
outsl
insl
imul
in
outsl
insb
push
push
xchg
jo
push
push
ret
and
gs
push
iret
mov
int
sbb
mov
shlb
je
xchg
and
sub
adc
imul
dec
ret
std
dec
jne
js
mov
pop
inc
fists
outsb
adc
pop
inc
stc
outsb
mov
inc
jns
push
imul
popa
jb
inc
loope
in
add
or
testl
insl
insl
push
addb
addl
int3
pop
adc
sub
addl
mov
outsb
dec
xor
or
insb
sbb
or
cmpsb
rcrl
sub
ficoms
adc
outsl
jp
add
inc
icebp
inc
addl
inc
jo
rcrb
fsubl
pusha
sbb
push
pop
loopne
loop
ds
insb
jne
mov
jne
dec
pop
fadds
push
xchg
outsl
mov
add
dec
call
jo
inc
push
fildl
adc
inc
mov
push
jo
or
pop
push
out
popa
addr16
jl
push
je
ja
popa
sub
push
stos
mov
lock
push
push
and
inc
push
iret
int
gs
mov
cmp
lods
adc
adc
aad
popa
pop
insb
rcll
push
jo
mov
pop
or
addr16
push
pop
mov
inc
outsl
mov
jo
push
dec
inc
dec
sub
inc
popa
sbb
fstpl
jns
jae
arpl
stos
clc
pop
aad
scas
arpl
insb
mov
shll
pop
add
inc
in
pop
inc
repz
int3
push
xor
popa
inc
in
mov
mov
pop
sub
or
leave
push
clc
outsl
popw
push
call
ss
fdivp
jge
jo
pop
push
cmp
push
jne
arpl
push
xor
sub
sbb
inc
mov
dec
jae
enter
icebp
add
mov
adc
mov
lea
adc
jb
popa
mov
mov
ljmp
fs
xchg
lods
roll
das
lds
test
pusha
aaa
adc
pop
push
cwtl
loop
mov
xchg
shlb
sbb
xor
jo
lds
inc
loope
xchg
imul
in
jae
ret
mov
in
adc
cwtl
and
add
insl
jno
sbb
pushf
daa
mov
mov
pop
xchg
outsl
jns
int
es
sbb
pusha
stos
push
push
sbb
and
cs
ss
pop
pop
repz
rcr
mov
mov
ret
inc
je
push
inc
inc
push
sub
mov
adc
shlb
push
sub
sub
insl
sbb
jno
insl
add
sub
push
imul
mov
mov
xor
inc
push
or
or
push
jns
loope
sbbb
push
cmp
mov
mov
js
lods
adc
adc
adc
stos
or
outsb
pop
pop
faddl
or
cmp
push
jne
inc
adc
out
in
inc
out
pop
jecxz
inc
inc
inc
and
sbb
jae
xor
jo
or
cmp
and
shrl
mov
jo
sub
add
sbb
xor
mov
popa
filds
cmp
mov
push
cmp
inc
lods
repz
leave
dec
push
pop
sub
in
push
outsl
ja
jb
cmc
dec
sbb
or
jbe
sbb
xchg
fadds
or
movq
cmpsb
repnz
insl
fisubl
mov
add
pop
push
leave
push
or
mov
rcll
ds
js
add
aad
mov
xchg
rcrb
push
mov
arpl
cli
xor
pusha
add
adc
lret
adcl
push
mov
imul
xor
sbb
sbb
jo
sub
loopne,pt
into
and
movsl
jns
ss
or
sbbl
shll
jne
inc
popa
push
and
mov
add
pop
jbe
add
outsb
fisttps
ja
adc
nop
popa
ffreep
xchg
pusha
fcmovnb
jmp
fs
fs
mov
je
and
ret
lock
outsl
push
inc
jb
and
or
inc
push
data16
sbb
inc
lds
stos
insl
xor
std
or
jecxz
inc
imul
loop
push
xor
mov
jecxz
add
fs
out
sbb
jle
punpckldq
inc
dec
stos
mov
jp
je
jae
mov
imul
test
sbb
jne
push
sti
lret
jl
js
enter
xorl
stos
pop
add
jle
scas
add
inc
addr16
loopne
rcll
and
xor
push
pop
xor
jnp
and
adc
in
pop
xchg
pop
cmc
mov
adc
and
and
jnp
or
add
outsb
dec
in
jl
sahf
cmp
ss
ret
jg
lcall
dec
add
mov
mov
adc
xchg
movsb
dec
adc
dec
rorl
movhps
push
rcrl
inc
add
add
test
adc
les
ret
scas
or
add
and
div
mov
xor
inc
jo
fs
cmp
pushf
bound
xor
adc
push
push
jb
inc
jae
inc
popa
pop
and
cmp
icebp
and
jb
and
and
imul
jne
das
mov
jmp
cwtl
jns
sahf
add
inc
rclb
push
js
xlat
inc
pop
stos
daa
adc
and
and
ds
cmp
outsb
sbb
pop
push
aaa
cmpb
pop
lock
test
test
mov
in
xchg
pop
mov
aaa
sub
es
insl
addr16
add
adc
scas
mov
sbb
sub
mov
jbe
jb
jo
icebp
pop
arpl
adc
push
cld
xchg
cmp
pop
cs
lcall
xor
dec
fistl
ljmp
dec
jno
pop
or
out
jmp
jb
xchg
gs
jl
orl
js
dec
jg
inc
insb
mov
outsl
ret
cld
popa
imul
sub
loope
shlb
sarb
cmp
hlt
and
xchg
popa
add
fstl
mulb
dec
sub
push
ja
push
imul
lock
xchg
addb
enter
dec
insl
pop
xor
mov
std
or
adc
pusha
mov
dec
ljmp
in
loope
pop
inc
mov
mov
sub
sub
push
xor
mov
cmp
mov
cmp
outsb
aas
or
pop
sub
or
xchg
stos
loope
icebp
pop
adcl
outsb
mov
dec
inc
outsb
fistl
xchg
addl
sub
hlt
insl
insb
and
inc
loope
imul
fs
inc
fnsave
xchg
or
xchg
scas
add
pop
jmp
insb
sbb
cmp
js
inc
sbb
mov
cmp
inc
cmp
mov
sbb
popa
dec
arpl
addr16
pop
xor
pop
les
inc
mov
lahf
loopne
add
sarl
loope
shrb
inc
xor
sbb
mov
push
mov
imul
jbe
int
in
subb
pushl
mov
and
cmp
out
test
dec
mov
inc
inc
push
jne
xor
jecxz
data16
ffreep
in
fdivrs
sub
mov
ds
es
imul
xchg
cmp
imul
inc
fiadds
add
add
dec
and
lret
push
pusha
or
inc
pop
test
mov
or
cld
insl
call
rolb
mov
push
lcall
cmp
push
cs
iret
push
pcmpeqw
add
out
push
add
adc
rorb
inc
mov
dec
addb
fbld
mul
loopne
mov
and
add
and
outsb
push
cvtpi2ps
jb
popa
adc
jge
mov
out
inc
cs
out
aaa
mov
or
push
dec
mov
sahf
jae
arpl
xlat
pusha
dec
mov
pop
lahf
or
mov
dec
js
hlt
pop
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
