divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
sbb
es
aaa
add
addl
movsb
xor
daa
repnz
std
clc
or
repz
pop
mov
int
mov
pop
add
pop
and
popa
insl
dec
add
adc
pop
add
mov
jne
and
and
fistpll
or
dec
shrd
popa
incl
pop
decb
push
lea
in
bswap
mov
test
jmp
jmp
repnz
in
push
pusha
ljmp
pop
fxch
ss
cli
push
cld
push
imul
lahf
daa
test
shll
dec
daa
loopne
add
or
or
jmp
ja
push
daa
aam
cmp
add
pop
mov
and
add
fdivrp
ret
mov
add
sbb
add
xchg
or
push
mov
mov
jbe
adc
sub
push
mov
sbb
pusha
push
add
pop
add
cs
cld
cltd
add
movb
or
add
jb,pn
mov
sub
fidivs
nop
inc
fs
cs
mov
sub
mov
or
loopne
outsb
inc
rcrb
cmpsl
test
out
add
or
sbb
cmp
inc
xlat
inc
pop
inc
cmp
js
adc
adc
inc
jmp
jno
adc
add
cli
mov
mov
lea
add
test
cltd
clc
subl
pop
or
add
xor
and
mov
ret
xchg
dec
std
cmp
or
in
push
push
sbb
jo
xchg
rcrl
test
call
sbb
faddp
ja
jne
icebp
dec
dec
out
jmp
mov
mov
mov
shll
xor
in
xchg
arpl
ljmp
jnp
cmp
add
insl
adc
jne
or
push
jbe
jb
xchg
add
mov
rcl
mul
adcl
or
push
es
xchg
clc
cmp
hlt
adc
in
stos
pop
jnp
xchg
xorps
out
and
push
sbb
push
movzbl
or
rcll
loope
mov
les
xchg
movsl
mov
leave
sub
jnp
inc
xchg
mov
sbb
loopne
jbe
mov
jecxz
pop
aad
push
sub
pop
es
mov
cmp
nop
ljmp
in
push
sub
ret
xorl
loopne
jp
xchg
jns
xor
out
in
inc
call
push
rcrb
pop
xor
xchg
xor
outsb
ja
je
adc
mov
clc
pushf
and
aad
fisttpl
push
es
jne
push
inc
pop
mov
sti
imul
add
adc
bound
imul
arpl
subb
push
dec
cmp
inc
xchg
jne
push
dec
sti
and
mov
xorb
and
adc
out
shlb
mov
movsl
popa
ror
add
jl
hlt
lea
clc
cld
add
xchg
add
jle
push
imul
or
imulb
push
push
push
in
adc
add
dec
in
push
insb
adc
cmp
push
xor
call
or
pop
add
dec
cmp
xchg
dec
add
ja
push
push
outsl
push
loope
lods
jae
or
inc
dec
outsl
push
pop
sbb
mov
dec
add
push
ret
scas
and
dec
mov
xlat
pop
nop
sbb
jle
xor
lea
test
mov
dec
pop
movsb
add
add
sub
addb
cmp
mov
push
aam
je
fidivrs
decb
sbb
movb
dec
adc
add
fdiv
or
push
mov
aam
lea
dec
out
or
lds
xchg
mov
push
sub
push
push
or
rcrl
pop
cmp
andb
add
mov
popf
je
rorl
adc
cmp
fiaddl
dec
lock
or
jecxz
pop
pusha
rclb
add
dec
cmpsl
lea
ljmp
jno
push
fnstcw
movsl
testb
xchg
mov
int
jbe
sbb
and
or
xor
and
popf
outsb
faddl
dec
and
jnp
les
push
fnstsw
cwtl
mov
dec
call
enter
push
push
insb
fdiv
sub
dec
inc
shrb
add
sbb
sbb
mov
xor
xchg
xor
ds
ss
jl
inc
dec
xor
sbb
popa
outsl
sarb
push
cltd
gs
sbb
jp
into
test
rol
push
push
sqrtps
pusha
cmc
push
pop
jbe
xlat
pop
jp
push
or
inc
or
lock
fisubs
pop
xchg
sbb
dec
inc
inc
pop
test
ja
adc
add
out
mov
push
jnp
int
ret
mov
popa
adc
sub
lds
pop
lea
ret
cmc
mov
jmp
add
mov
call
in
push
add
repz
push
ljmp
jo
xchg
inc
add
scas
add
outsl
adc
cmp
or
xchg
sarl
lods
sub
movsb
lret
enter
clc
cmp
push
and
mov
add
je
call
jle
pop
push
call
in
or
call
jne
jb
arpl
push
es
xor
or
addl
lea
cmp
sbb
jmp
add
out
test
push
or
inc
lock
add
xchg
cmp
sub
dec
adc
call
subl
lods
or
ja
or
or
jmp
xchg
and
xchg
sbb
ja
jnp
dec
call
in
dec
xor
push
inc
mov
push
mov
dec
or
or
sub
mov
cs
movsb
mov
mov
and
iret
sub
or
in
dec
nop
test
shl
or
cwtl
pop
cmp
xchg
push
xchg
xor
adc
clc
loope
fwait
clc
sbb
repnz
lret
or
add
ret
xor
shrl
or
jnp
in
mov
push
jecxz
inc
xor
mov
add
sbb
test
movl
insl
lods
in
fstps
aas
test
popf
mov
lds
and
push
pop
lahf
mov
movsl
cltd
mov
pusha
gs
pusha
push
inc
rcll
incl
bound
or
std
and
push
hlt
push
shlb
mov
mov
and
loop
sbb
push
jo
in
rorb
jne
push
push
jl
dec
pop
ss
lret
loope
xchg
xchg
xor
jmp
push
pop
lcall
jns
mov
jne
ds
xor
push
push
sbb
sbb
sub
pusha
loop
fdivr
sub
roll
scas
jb
mov
push
mov
push
push
dec
fdivrl
sbb
ja
imul
sub
pop
pusha
push
int3
call
mov
cmp
les
or
jp
je
cmp
sub
add
andb
cmp
xchg
adcl
insl
stc
and
add
cmp
dec
fcompl
lods
jnp
jge
cmp
xor
std
push
mov
je
cmp
into
adc
addr16
xchg
xchg
test
pusha
jo
jne
in
push
lea
push
adc
inc
jbe
cmp
sub
imul
lds
or
and
mov
sub
rorb
mov
imul
mov
or
mov
dec
fidivrl
push
faddl
cmpsb
imul
adc
mov
xlat
call
pop
lds
xor
fdivr
mov
leave
sub
sbb
sbb
movb
xchg
fildl
decb
mov
add
jmp
ds
xchg
loop
aas
xor
adc
inc
call
mov
mov
or
mov
scas
shlb
adc
and
imul
mov
push
pop
pop
sub
and
repnz
enter
int
mov
add
add
pop
imul
int3
and
pop
mov
xchg
cltd
mov
shll
jle
rcll
aas
mov
and
iret
scas
dec
call
adc
fbstp
hlt
push
add
sub
pop
xchg
and
mov
xor
mov
test
sub
packuswb
rcl
shlb
or
xor
mov
inc
mov
push
ljmp
outsl
push
jb
push
popf
jo
je
ljmp
cmp
pop
push
pop
pop
inc
or
mov
je
popa
pop
sbb
cmpl
push
aas
repz
je
mov
adc
scas
sbb
mov
push
addl
pop
push
xchg
cmc
pop
cmpsb
push
xor
add
sub
jb
adc
xchg
pushf
lea
push
ss
imul
into
rcl
divb
add
ret
lret
xor
jo
push
loopne
shlb
inc
mov
jne
hlt
sbb
mov
in
repz
das
fisubs
sub
adc
je
enter
push
adc
xchg
mov
and
or
insb
or
and
push
add
mov
dec
adc
or
cli
mov
sahf
loopne
adcl
jae
and
enter
cmp
jle
push
mov
adc
adc
xor
mov
jno
loopne
dec
int
xchg
xchg
in
in
push
add
adc
sub
jmp
daa
xchg
or
inc
sti
xor
dec
sub
push
gs
xor
or
loope
and
mov
dec
in
inc
fldenv
in
add
in
pop
jno
push
or
imul
enter
push
insb
cmp
adc
or
sub
mov
adc
xchg
lods
mov
fsub
add
mul
jmp
mov
pop
mov
push
adc
stos
bnd
mov
cltd
insb
ret
mov
mov
mov
mov
cmp
mov
jne
je
in
arpl
aam
fsub
push
and
adc
mov
jge
fadd
push
add
lcall
je
pop
cmp
addb
imul
or
imul
es
cmpsl
adc
pop
insl
fistpll
push
fists
ficomps
daa
dec
jp
sbb
jne
mov
pop
inc
sbb
jne
lods
lods
push
sbb
mov
ficoms
ret
cmp
xor
sbb
push
popf
punpcklbw
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
adc
fcomp
jne
sbb
inc
test
inc
enter
push
or
cwtl
adc
orl
jb
out
add
mov
mov
sbb
lcall
aad
mov
lods
dec
xlat
push
push
mov
jecxz
repz
test
push
mov
dec
int
sbbb
jb
fstps
pop
pushf
in
dec
adc
cmp
and
xor
add
cmp
xchg
xchg
in
add
jne
clc
inc
nop
adc
fsubrl
call
loop
test
cld
sub
mov
arpl
sbb
dec
mov
test
in
loopne
inc
cmp
orb
mov
or
mov
icebp
or
nop
aam
jnp
pusha
ljmp
push
add
add
out
enter
icebp
call
nop
aaa
cld
movb
fnstsw
add
clc
es
or
or
dec
ss
inc
and
jmp
addr16
xchg
popa
inc
dec
pop
jg
ja
and
je
or
or
je
mov
into
test
lock
or
nop
outsb
loop
cmpsb
push
test
inc
push
outsb
sub
or
jmp
push
fs
ss
add
call
mov
adc
xor
xlat
add
mov
and
xor
lcall
pusha
popf
rorl
stc
cltd
insb
cld
adc
test
push
and
or
gs
sub
mov
add
push
rcrb
les
jns
aam
stos
hlt
lods
jbe
xor
repnz
inc
jne
xor
neg
cli
sbb
outsb
outsb
sbb
inc
adc
add
jns
mov
cmpl
mov
cmp
push
fdivrs
cmp
adc
push
mov
lods
and
fildl
mov
adc
xchg
add
repnz
test
adc
dec
inc
das
insl
mov
rorb
mov
pop
hlt
or
shr
pushl
or
cmp
pop
mov
xor
stos
std
std
movhps
and
cld
cmp
cli
popa
sbb
adc
inc
rcl
out
inc
mov
cmp
call
sub
sub
or
enter
mov
or
push
push
add
in
testb
adc
cmp
mov
jo
xchg
pop
push
lock
sub
lret
and
dec
adc
std
out
pop
adcb
push
ds
sbb
cmp
outsl
push
fildl
dec
and
and
imul
test
add
mov
push
dec
add
mov
and
andb
xchg
fstpt
imul
push
sarb
sbb
push
out
je
test
mov
sub
lock
pop
lock
cmp
jmp
mov
add
add
mov
dec
cmp
cmc
imul
mov
and
js
nop
ret
int3
lods
or
sbb
cmp
inc
aam
inc
push
imul
stos
daa
mov
cmp
cmp
je
iret
xchg
pop
pop
cmp
push
xor
add
cld
popf
mov
into
mov
movsl
iret
adc
xor
push
pushl
rcrl
mov
repz
push
push
call
pop
pop
pop
outsb
mov
jbe
mov
es
je
decb
sbb
sbb
xchg
sarb
pusha
cmp
push
or
insb
or
in
enter
outsl
jne
xor
adc
std
jmp
fldt
and
xor
add
leave
inc
sbbb
and
jnp
lods
or
or
xor
sarb
cmp
iret
rcl
mov
fnstsw
lock
jb
cmp
shll
add
addb
push
xchg
fs
and
popf
mov
rorb
mov
in
test
inc
aaa
sbb
cmp
inc
xchg
dec
in
test
movsl
insb
sbb
jl
pop
sahf
cmp
rclb
mov
or
jne
mov
jmp
or
push
shll
sbb
or
or
into
jp
xchg
add
dec
xchg
clc
sub
cwtl
xor
push
or
test
dec
sub
push
inc
pusha
sbb
push
adcl
iret
xchg
and
inc
lds
inc
inc
push
add
call
fldl
cmp
push
aaa
mov
xchg
ljmp
push
dec
test
shll
loop
loopne
mov
cmp
ss
faddp
in
mov
test
ss
loop
dec
mov
mov
arpl
mov
testl
sbb
sub
popaw
pop
fsubr
xchg
stos
push
xchg
aad
call
cmp
jbe
rolb
aad
movsb
xchg
jne
or
cld
mov
sbb
push
and
std
pop
inc
xor
jbe
cmp
lock
sbb
push
loopne
dec
shl
xchg
push
inc
or
pushf
cmp
adc
adc
sbb
xor
and
jo
pop
loop
test
xor
cmp
shr
je
jo
adc
imul
pushf
sbb
js
popf
xchg
mov
popa
jb
clc
mov
add
int
rorl
xchg
mov
xor
test
rorl
pop
and
fwait
jmp
push
mov
sub
jo
push
sbb
dec
mov
pop
or
in
mov
into
lcall
lds
lods
sbb
push
sbb
adc
add
es
stos
loopne
dec
inc
pushf
lret
sti
push
je
movsl
pop
addb
fldl
addb
dec
in
xor
add
psubb
test
js
pop
push
lea
lds
fs
and
pop
adcb
ret
je
jl
enter
push
icebp
xchg
aam
xor
int
mov
push
push
inc
stos
adc
cmpsb
aam
in
das
outsb
cmp
inc
cmp
cwtl
popa
fsubrl
push
mov
call
loope
dec
pop
add
push
push
push
xor
rcl
pop
mov
dec
je
jae
js
dec
fmull
lret
mov
imul
add
or
push
dec
mov
adc
add
and
mov
shrl
or
or
xchg
in
dec
rep
shrl
movzbl
mov
rcrb
leave
add
lock
addl
mov
dec
leave
jmp
add
push
pop
in
mov
jne
hlt
mov
push
adc
gs
add
mov
ss
clc
mov
cmpb
push
sbb
inc
test
mov
or
mov
outsb
jmp
sub
inc
roll
rcll
dec
roll
sub
shlb
or
subl
cmp
cwtl
loop
test
mov
call
ficompl
or
movsb
call
iret
call
lea
mov
pop
mov
push
imul
pop
addr16
pop
sbb
sbb
in
xor
sbb
jne
into
cmp
mov
jae
addr16
ss
movb
es
xchg
loopne
mov
or
je
int3
jecxz
fwait
pop
in
decb
outsl
pop
pop
icebp
pushf
xorl
jmp
nop
xor
orb
push
sahf
jae
push
add
sbb
das
outsb
jns
icebp
call
cmp
cmp
scas
sub
ljmp
in
push
setb
sbb
cmp
xrelease
add
movsb
sbb
call
jp
add
lcall
dec
jl
js
xor
stos
push
negb
nop
out
mov
dec
xor
adc
jecxz
fxtract
jmp
pop
sub
popf
jecxz
sbb
inc
or
mov
or
fisubrl
pusha
movl
push
pop
sbb
sbb
add
shlb
popa
mov
out
jnp
jp
xchg
jne
add
push
call
sbb
pop
fucomi
movsb
jmp
js
sbb
insb
jns
je
and
insb
negb
adc
mov
sbbl
int3
je
call
int3
add
or
jbe
icebp
mov
ror
push
dec
into
and
add
bound
mov
stc
sub
sbb
fiadds
out
push
cmp
push
sbb
mov
fdivl
or
mov
cwtl
or
popf
pushf
or
fucomi
les
mov
and
xor
loopne
fs
inc
mov
mov
clc
inc
mov
adc
andl
cmp
jg
push
ret
cs
lea
adc
sub
orb
mov
mov
xor
mov
icebp
pusha
and
imul
adc
add
push
decl
or
test
sub
inc
inc
dec
jne
movzbl
add
je
jecxz
xorl
fwait
xor
mov
jbe
xchg
mov
mov
jecxz
ret
lea
sbb
xor
dec
sub
es
popl
lods
and
mov
mov
push
cli
sub
sbb
shr
add
and
ja
or
out
jg
mov
lea
inc
xor
inc
pop
rclb
jecxz
std
nop
movsb
or
rol
xor
and
xor
jp
imul
cltd
imul
xchg
add
xchg
mov
call
and
les
cld
dec
push
push
call
pop
mov
shrl
dec
sbb
rclb
dec
dec
leave
push
xor
stos
inc
je
cmp
and
clc
cmp
leave
cmp
daa
dec
mov
dec
xchg
out
mov
cwtl
and
mov
lds
inc
sub
sub
push
je
xor
jmp
adc
shrl
mov
or
add
push
sub
sub
or
sub
enter
inc
inc
adc
fs
shll
adc
rorb
pop
mov
sarl
or
mov
shr
xor
roll
xor
mov
jmp
add
lds
push
add
sub
pop
orl
sbb
add
shll
dec
push
mov
and
sub
mov
add
jmp
in
adc
and
or
xchg
dec
cmp
dec
imulb
test
imul
add
and
addr16
cli
or
or
dec
add
out
call
mov
cmp
callw
pop
call
call
xchg
mov
popa
js
dec
aam
inc
adc
inc
push
jns
cmp
call
pop
mov
adc
int3
mov
push
inc
pop
xchg
cli
jmpw
movsb
dec
pop
leave
or
out
push
rcrl
cmp
or
dec
mov
mov
or
pop
jge
call
enter
scas
pop
and
das
insl
jmp
in
push
and
jb
cmp
jmp
cli
xchg
mov
pop
xchg
sbb
dec
inc
xlat
xchg
inc
sbb
mov
sarb
cmp
clc
push
cmpsl
loopne
enter
pop
push
lds
int
into
cmp
xor
dec
dec
jge
dec
dec
jmp
sub
inc
jmp
adc
and
ljmp
push
mov
repnz
es
cmp
or
adc
leave
test
add
and
or
pusha
lock
sub
pop
arpl
lods
mov
inc
fiadds
sub
incb
mov
mov
es
cmpsb
add
add
ret
movsl
push
and
add
into
cmc
add
je
ljmp
sbb
ret
push
push
es
inc
and
shufps
pop
fisttps
outsb
iret
ss
iret
dec
push
and
or
in
ficomps
or
xorb
mov
js
ljmp
int3
rcll
enter
inc
push
imull
push
xor
adc
enter
inc
push
test
js
mov
loope
sbb
or
jle
repnz
xchg
pop
aaa
dec
rcrb
jp
arpl
movsl
adc
add
inc
pop
int3
pop
and
adc
and
inc
inc
orl
adc
push
inc
add
mov
xchg
pop
rolb
sbb
or
call
inc
rcrl
fisttpll
mov
and
add
fs
pop
inc
adc
and
mov
cmp
mov
sub
and
mov
in
sub
add
fs
inc
lret
inc
movsb
repz
loope
jmp
ss
rcl
dec
out
lods
mov
push
inc
scas
bound
push
dec
out
inc
out
jnp
data16
pusha
nop
push
in
nop
je
mov
push
out
xchg
add
inc
dec
out
out
fldl
inc
or
push
sub
jmp
adc
add
add
sahf
xlat
loopne
jmp
imul
mov
adc
pushf
adc
or
out
inc
daa
inc
out
fstpl
add
and
dec
dec
cs
dec
out
xchg
sbb
insb
out
fldl
xor
out
mov
or
push
mov
ror
mov
cmp
out
aaa
ret
add
or
push
adc
sbb
jns
out
test
add
adcl
test
jmp
lcall
xchg
adc
test
mov
loop
or
insb
and
jo
cltd
adc
dec
pushf
fildl
cld
std
push
pop
jmp
cmp
je
mov
add
sub
push
scas
repz
lahf
ret
lea
adc
add
pop
add
or
add
add
add
inc
cmp
movsl
sbb
std
jo
cmp
je
xchg
add
pop
leave
sbb
test
xchg
sbb
push
push
push
gs
pop
inc
or
dec
fisubs
sbb
and
cld
add
lock
fisttpll
or
mov
jns
or
xchg
or
sbb
or
scas
in
push
int
add
adc
pop
adc
adc
sahf
lret
stos
cmp
or
popa
in
adc
adc
pop
lcall
xchg
adc
push
inc
scas
adcl
in
push
push
inc
xchg
or
sbb
pop
and
pop
leave
mov
sbb
jb
iret
pop
mov
mov
sbb
mov
sbb
sbb
sahf
ja
je
push
sbb
xor
xor
sbb
iret
push
push
inc
negb
pop
push
and
ret
sub
cmp
pushl
sub
add
and
dec
mov
pop
xchg
and
lods
pop
lcall
xchg
push
in
push
in
imul
add
sub
rcl
ret
sub
xlat
in
in
out
sahf
sub
mov
add
call
pop
repnz
call
mov
jmp
iret
enter
push
cs
jb
jmp
jmp
inc
lcall
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
ss
jae
lock
dec
and
inc
icebp
cmp
das
addr16
call
repz
das
nop
repz
std
hlt
hlt
lret
stos
cmp
hlt
xchg
std
iret
enter
cmc
cmp
xor
mov
sbb
and
add
cmp
push
sar
aas
stc
stc
and
cli
cli
pop
enter
sti
sti
fisubs
aaa
xchg
cld
cld
cld
je
cld
push
push
repnz
nop
shlb
mov
xor
sbb
in
cld
xor
inc
ret
pcmpgtw
ficomps
sub
jb
lahf
roll
dec
xor
shr
out
imul
or
jecxz
adc
jecxz
xor
ja
cmp
push
push
mov
idivl
mov
mov
inc
or
and
movsb
out
xchg
scas
call
cltd
sti
adc
push
adc
or
cs
jmp
in
aad
daa
in
cltd
or
andb
jmp
cmpsb
jb
cli
out
out
out
xchg
pop
push
lea
cltd
cmp
cli
or
aas
repz
stos
xchg
sbb
push
cli
stc
imul
stc
div
inc
scas
data16
mov
xchg
clc
push
and
test
jb
push
stc
xchg
adc
sbb
push
xor
sti
xchg
or
and
jmp
mov
cmp
mov
dec
mov
push
jne
adc
clc
mov
shrl
dec
loop
loop
pop
push
lea
loope
clc
or
dec
inc
lcall
out
jne
mov
xchg
fdiv
out
pop
repnz
negl
and
push
and
ljmp
xchg
pop
notl
negl
hlt
imul
out
xchg
adc
into
negb
and
test
scas
notb
dec
or
push
imul
in
aad
loope
divb
push
or
mov
xchg
cmpsb
div
testb
int3
scas
test
mov
clc
push
and
clc
cmp
or
pop
cmc
cli
cli
sub
cmp
cmp
pop
push
loope
cmc
cli
hlt
call
xlat
inc
mov
lock
push
add
mov
push
mov
jae
cmp
sti
mov
loope
loopne
mov
loop
sub
nop
mov
rclb
mov
hlt
in
mov
loopne
pop
repz
paddq
mov
test
xchg
repz
jmp
shlb
dec
repz
or
cmp
movsl
in
mov
jne
repnz
repnz
test
cmp
push
repz
xchg
pop
and
mov
adc
push
pop
repnz
xchg
icebp
cmc
cmc
mov
icebp
mov
pop
repnz
stos
lock
cwtl
icebp
dec
jae
and
jb
sbb
mov
adc
stos
jne
and
jecxz
cmp
adc
jmp
dec
sub
pop
push
sub
ffreep
push
inc
jge
push
and
cmp
dec
sahf
xchg
stos
cmp
lods
push
in
adc
mov
pop
mov
in
sbbl
push
dec
icebp
dec
add
movsb
xchg
push
cltd
and
jmp
xchg
pop
ja
sar
cmc
jmp
mov
sub
nop
push
jns
repz
adcl
push
aaa
or
push
stc
xor
dec
add
jp
ss
int
sub
push
jecxz
repz
mov
imul
out
data16
aad
in
xchg
gs
dec
xchg
into
jnp
outsb
or
mov
add
and
mov
xor
sbb
dec
sub
lea
inc
cmp
and
xchg
aam
nop
lret
test
push
mov
test
fldl
xchg
or
dec
bound
jmp
jg
cmp
repz
push
adc
adc
inc
jmp
lea
loope
push
or
lea
movsb
sub
push
mov
push
mov
test
sbb
sbb
shll
add
testl
inc
test
mov
adc
push
inc
popa
dec
shr
sbb
ret
nop
loopne
aam
in
jmp
ror
pop
push
push
ror
add
sbb
push
push
and
xchg
cmp
andl
clc
adc
out
jmp
mov
xchg
pop
insl
adc
jmp
adc
dec
dec
cmp
jno
in
divb
jno
or
mov
lahf
mov
jno
mov
cmpsb
js
pop
xor
mov
adc
push
rcll
add
hlt
psubsw
cmpsb
add
int
adc
and
jb
cmp
inc
imul
jns
xchg
lock
shr
inc
add
sub
sbb
mov
add
dec
js
add
adcb
lds
dec
mov
jo
xor
xchg
mov
dec
xlat
xorb
xor
dec
push
and
or
mov
dec
xchg
and
mov
or
sbb
inc
adc
adc
dec
pop
mov
inc
pusha
add
scas
adc
add
add
mov
or
leave
inc
mov
rorb
in
mov
cmpsb
mov
inc
cltd
inc
popf
fnstenv
in
xor
xor
adc
xor
add
or
insb
dec
out
xchg
cmp
sbb
call
pop
mov
sbb
mov
sarl
sbb
aam
loopw
pop
xor
dec
nop
push
test
cmpsl
lahf
sub
sti
iret
les
xchg
and
pushf
push
lahf
push
xor
data16
mov
xchg
pop
test
lahf
sahf
and
lock
dec
and
xchg
fcomps
and
lret
in
sti
and
xchg
dec
xchg
lahf
mov
out
adc
lahf
and
fwait
in
rcll
jmp
repz
test
mov
adc
dec
nop
or
sbb
bound
jp
lahf
popa
cltd
xchg
mov
inc
leave
test
add
or
sbb
jmp
out
or
add
and
inc
mov
data16
pop
lcall
lahf
lcall
dec
xor
inc
inc
sahf
cmp
daa
daa
daa
xor
and
xchg
inc
sub
shld
ds
cld
push
out
imul
xor
pop
mov
lahf
mov
sub
sbb
es
mov
inc
outsl
inc
and
in
sbb
or
pop
push
orb
adc
movsl
or
or
pop
fldl
and
xchg
and
inc
push
mov
jo
inc
ds
cmp
dec
inc
test
or
and
pop
ret
imul
test
ja
insb
xor
aam
andb
add
dec
and
dec
sahf
jmp
and
and
lds
push
cmp
sahf
loopne
xchg
xchg
mov
sbb
es
das
push
subl
mov
xchg
and
cltd
xchg
sub
xchg
cmp
jmp
push
cwtl
xchg
push
add
shr
xchg
fdivrs
and
test
test
jno
xchg
add
sub
pop
cltd
xchg
cmp
popf
popa
stos
pop
inc
cmp
lods
fs
imul
add
xorl
arpl
dec
dec
push
in
mov
in
cmp
mov
and
mov
imul
inc
push
mov
pushf
xor
dec
nop
sahf
mov
je
repnz
pop
xor
int3
and
dec
xor
mov
xorb
cmc
pop
add
inc
dec
cmpsl
test
jecxz
push
dec
xchg
cmpsl
scas
sub
or
decl
imul
hlt
jle
add
xchg
and
add
mov
std
popa
daa
mov
and
pop
fwait
mov
push
xor
add
xor
inc
sbb
inc
lods
movzbl
in
jo
sub
movb
mov
cmp
pushf
mov
cs
daa
mov
pushf
aam
rclb
in
add
add
daa
sub
jmp
mov
es
fsubs
orb
nop
nop
push
roll
hlt
movsl
cmp
xor
push
xchg
and
in
movsb
sti
shr
data16
data16
movsb
lds
fndisi(8087
mov
or
test
pop
iret
dec
int
cmp
aad
bound
pusha
push
cmp
iret
lock
popa
aas
xlat
xor
jns
je
popa
dec
dec
sub
nop
push
mov
cmp
inc
mov
loopne
and
cmp
std
xor
inc
adc
fnsave
cmp
nop
push
adc
fs
cmp
into
dec
aam
pop
sbb
vorps
aaa
fsubl
dec
mov
pop
hlt
cwtl
loopne
cmp
xchg
mov
and
ja
inc
dec
mov
ss
inc
dec
mov
mov
and
lea
inc
ret
or
dec
mov
jl
mov
mov
movsb
jmp
mov
data16
loope
xchg
jo
dec
inc
sub
sbb
rorl
push
sub
mov
dec
inc
subl
test
or
sub
movsl
sub
sub
xchg
mov
cwtl
imul
cmp
mov
js
je
loopne
mov
mov
rcl
fucomp
sbb
lahf
call
jge
sub
or
xchg
mov
jno
xchg
ljmp
pop
test
pop
insb
adc
dec
in
loope
dec
inc
addr16
sub
sbb
sub
dec
inc
stos
lahf
aam
sbb
xchg
lret
sub
call
rcl
mov
inc
cmp
int
mov
pop
sub
pop
sub
adc
mov
sub
sbb
mov
sbb
sub
xor
sub
inc
leave
stos
cwtl
imul
cmp
test
xor
cmp
je
int3
sub
sub
inc
aaa
int3
xor
les
sub
ss
int3
xor
sbb
push
xor
push
sub
push
hlt
ljmp
sarl
and
ret
js
sub
xor
lcall
sbb
inc
aaa
rorl
jo
cmpsb
aad
sub
xor
icebp
cmpsb
and
or
cltd
xchg
int
je
sub
popf
das
mov
or
xor
push
xor
cmp
mov
xor
stos
fisttpll
sub
imul
cmp
data16
cmp
xchg
xchg
std
pop
movsl
xchg
data16
add
imul
in
insb
push
ds
pop
jp
cwtl
imul
sbb
pop
sub
push
sbb
push
js
imul
int3
xor
mov
sub
jo
mov
addl
xor
or
cmp
int
sub
mov
adc
sub
cs
lcall
xchg
mov
cmp
inc
sbb
imul
enter
sbb
in
fwait
cwtl
sub
and
fwait
nop
and
adc
mov
sub
dec
sub
push
aam
nop
cwtl
imul
hlt
mov
xorb
rcl
dec
sub
je
dec
inc
sub
add
xor
push
call
out
adc
ret
sub
cmp
jae
data16
test
loopne
int
adc
add
gs
xor
push
call
or
int
dec
mov
loope
enter
loope
inc
sub
out
mov
in
mov
or
xor
or
sub
mov
add
mov
fwait
sub
inc
call
sub
dec
inc
imul
mov
or
sbb
sub
rcl
iret
cs
fwait
add
lret
outsb
sbb
rcl
test
mov
sub
jbe
mov
stos
or
cwtl
adc
cmp
xchg
and
pop
xchg
dec
inc
sub
data16
and
mov
mov
adc
out
xor
sub
cmp
out
dec
jp
adc
inc
stos
xchg
mov
je
bound
xor
rcr
sub
xor
or
mov
dec
imul
xor
cltd
xchg
jg
into
imul
jl
out
push
sub
sbb
sbb
sbb
js
push
sbb
sbb
pop
dec
dec
pop
cmp
dec
and
dec
inc
sub
inc
loope
dec
call
adc
push
int
je
popa
jo
sbb
push
lods
cli
cmp
cmp
call
fdivs
mov
jno
ds
pop
xchg
icebp
leave
jmp
cmp
imul
and
inc
shlb
dec
add
mov
lds
icebp
mov
repz
push
jno
ret
pop
xchg
mov
cmp
mov
or
es
mov
out
push
dec
dec
inc
sub
push
dec
pop
ret
sub
mov
bt
sbb
dec
lock
jbe
enter
lods
ret
mov
imul
add
sbbl
mov
stos
ja
add
ja
aad
mov
mov
or
add
sub
inc
dec
inc
mov
and
inc
add
imul
mov
jp
push
add
xchg
add
xlat
jae
mov
sti
add
les
sbb
and
pop
adc
mov
movsb
cmp
movsb
dec
jo
cmpsl
jo
pushf
or
sbb
gs
in
xlat
dec
mov
add
in
push
sub
xlat
dec
orb
xchg
movsb
repz
js
test
subl
dec
shlb
out
add
push
dec
insb
cmp
mov
adc
push
xchg
fsubs
das
jae
popf
push
push
cmp
adcl
mov
inc
adc
ror
ret
inc
push
sbb
jne
out
or
mov
pop
punpckhbw
mov
inc
cmp
add
in
cli
rcl
sub
stc
mov
outsb
adc
adc
scas
pop
xchg
and
mov
nop
scas
test
mov
leave
xchg
push
or
shlb
xchg
sub
pop
add
rcl
dec
pop
fwait
insl
rclb
xchg
mov
and
out
or
and
shll
dec
adc
or
ss
add
notb
and
inc
cmp
push
jl
ror
out
sbb
or
cmp
inc
mov
je
push
sbb
insl
dec
pop
popa
call
out
ret
pop
call
movsb
stos
out
fimuls
call
jge
inc
jmp
and
inc
mov
shrl
push
cwtl
mov
insl
dec
inc
push
shll
movsb
inc
sub
outsb
inc
inc
push
inc
xchg
ret
ljmp
push
insl
inc
rcrb
add
movsb
sti
ss
mov
jmp
dec
mov
movsb
sbb
and
outsb
loop
movsb
inc
mov
notl
add
test
nop
inc
and
jne
rolb
inc
xor
sbb
inc
loopne
dec
jno
rolb
inc
cmp
loopne
jae
xchg
shr
push
imul
mov
dec
call
loopne
and
scas
xchg
lret
scas
fistl
mov
mov
call
sub
mov
or
xchg
test
xchg
test
and
mov
pusha
adcb
mov
and
aaa
pop
mov
dec
enter
inc
inc
dec
fsub
or
call
ja
mov
dec
enter
lea
mov
mov
xchg
nop
shrl
push
mov
push
nop
pop
push
mov
and
push
push
mov
cmpsb
adc
sbb
dec
mov
jae
push
xchg
mov
push
mov
dec
test
rcll
adc
mov
cmp
lea
jle
push
cmp
adc
add
sbb
loop
call
in
hlt
and
jl
je
xchg
jno
mov
cmp
add
xchg
insl
sbb
cmp
xor
adc
xor
lds
mov
cmp
cltd
rcl
sahf
adcl
pusha
addl
pop
enter
or
aas
push
cmp
xor
sub
repz
jg
adc
pop
and
adc
mov
push
es
loopne
mov
push
sub
out
push
dec
and
mov
or
call
jo
lcall
mov
jne
cs
mov
sbb
inc
and
cmp
pop
jb
test
inc
mov
xor
push
inc
call
insl
inc
cmpl
jmp
add
inc
rcr
push
subb
xor
mov
cmp
or
jne
aam
cli
sbb
movb
mov
push
or
insb
cmp
add
test
inc
jmp
dec
jmp
xor
add
loopne
inc
inc
adc
mov
jmp
inc
inc
inc
pop
je
es
stc
pop
es
fsubs
and
cmp
add
or
mov
jle
adc
add
js
mov
mov
xorb
sbb
inc
or
je
aas
ret
xchg
cmp
and
cmp
leave
rclb
insb
or
mov
inc
movsl
sar
inc
add
lea
xor
inc
jmp
mov
xchg
arpl
jmp
in
lods
pop
fstps
gs
xchg
roll
sbb
mov
gs
std
enter
inc
faddl
sbb
call
popa
push
mov
outsb
push
sbb
mov
mov
lock
test
call
or
xlat
push
push
div
lods
inc
aam
pop
mov
out
js
jb
cmp
repz
and
jge
push
push
or
sti
dec
mov
into
roll
and
cmpsb
pop
jo
in
add
ja
cmp
xor
lock
push
add
ret
push
sar
inc
mov
adc
xlat
ret
dec
and
mov
sub
push
hlt
dec
inc
sbb
push
sub
int
mov
push
out
arpl
pop
lret
cwtl
nop
jmp
mov
inc
rorb
sbb
sbb
xor
or
push
jno
pushf
movsb
mov
call
add
fists
xor
test
push
rclb
add
add
mov
stos
add
sbb
in
push
enter
ja
mov
das
out
push
inc
gs
das
or
add
lret
pop
mov
lock
cmp
adc
cltd
nop
inc
add
nop
push
xchg
lret
rolb
add
add
dec
gs
xor
mov
lret
adcb
out
nop
sub
cmp
dec
rol
mov
js
sarb
imul
push
jbe
popf
fadds
lret
in
call
scas
or
movsb
mov
add
dec
sub
cmc
fists
and
or
test
test
xlat
sbb
mov
mov
mov
movsb
mov
push
lea
inc
pop
imul
dec
loopne
cmp
or
xor
aas
daa
imul
push
int3
or
push
lea
fcoml
jmp
jge
xchg
insb
dec
cmpsb
or
push
jbe
pop
repnz
pop
add
pop
add
push
pop
fwait
inc
sbb
inc
xor
inc
sbb
pop
ret
add
cs
mov
pop
fwait
mov
ss
lea
mov
or
adc
jae
jmp
cltd
popf
add
es
xchg
or
sarl
adcb
nop
xchg
xor
imul
dec
or
pop
jmp
nop
xchg
inc
movsl
add
jge
pop
push
jg
jae
insl
movl
test
mov
cli
pop
pop
repnz
lcall
jne
aad
rclb
or
or
pop
inc
xchg
push
scas
add
and
movsb
mov
cmp
stos
pop
or
es
or
or
out
roll
and
test
jns
imul
nop
xchg
xchg
or
pop
mov
stos
mov
mov
pop
jecxz
dec
push
mov
sbbl
mov
inc
cmp
loop
inc
orl
sub
aaa
sbb
jns
shll
mov
nop
xchg
test
cmp
xchg
jb
mov
mov
or
and
mov
and
xor
add
bound
xchg
or
add
jmp
mov
or
andl
in
push
ljmp
enter
faddl
repnz
xor
lcall
loopne
jecxz
xor
xor
gs
addr16
ret
adc
add
pop
add
add
add
rclb
sbb
sbb
enter
mov
xchg
sbb
inc
cmp
andb
inc
push
xchg
pop
rorb
out
sub
pop
add
jecxz
mov
arpl
xorl
sbb
push
jecxz
cmpsb
sbb
loope
add
jmp
push
mov
nop
sbb
inc
inc
in
dec
scas
movsb
xor
rorb
imul
outsb
dec
jp
leave
inc
rcr
xchg
dec
inc
inc
dec
xor
jo
in
pop
or
push
js
add
xchg
add
std
fwait
pop
shlb
mov
and
in
and
and
in
sbb
xchg
shlb
add
jmp
push
cmp
loopne
xorb
add
test
add
sbb
jge
sbb
sub
cmp
push
fsubrl
jmp
push
daa
outsl
and
sbb
jb
adc
and
outsb
mov
dec
test
push
add
mov
rsm
sub
movsb
or
testb
dec
call
jecxz
jo
adc
and
lock
mov
mov
sbb
mov
and
sub
xchg
dec
adc
jecxz
call
jmp
fsts
roll
mov
int3
inc
mov
push
dec
mov
leave
out
pop
and
ret
icebp
xchg
lds
call
ret
mov
daa
pop
sub
andb
pop
adc
fdivrs
push
mov
or
loopw
mov
inc
lea
iret
sarl
rcrb
mov
outsl
mov
ss
sbb
loop
sub
adc
out
jecxz
mov
loopne
or
push
ret
inc
popa
inc
addr16
mov
or
dec
call
mov
pop
lock
add
mov
addr16
mov
or
js
jo
cmpsl
jo
add
sbb
or
cmpsl
add
sub
es
xor
adc
inc
sbb
or
sub
inc
push
mov
sub
scas
mov
pop
lods
fnstsw
pushf
es
mov
adc
or
out
adc
mov
daa
jl
push
pop
movsb
fs
stos
mov
adc
shlb
mov
dec
je
xchg
insb
pop
cmpsl
repnz
push
pop
mov
mov
and
adc
pop
pop
push
sub
inc
pop
add
mov
xchg
and
mov
loopne
add
mov
and
dec
inc
or
shrb
mov
aam
pop
call
aam
dec
dec
hlt
out
mov
xlat
push
inc
push
and
and
jns
sbb
adc
push
xchg
nop
shl
jns
inc
data16
pop
dec
enter
cmpsl
push
and
scas
jns
data16
adc
sub
jns
push
test
loopne
cmp
push
and
idivb
sarb
rorb
adcb
enter
lret
xchg
xchg
stos
dec
js
dec
push
call
test
xor
add
inc
xchg
rcll
pop
adc
ret
lods
xchg
adc
jns
ret
call
xchg
nop
jmp
ljmp
push
jns
xor
xchg
shlb
call
mov
int
rcl
imul
mov
push
xchg
jns
or
mov
in
mov
sbb
jns
std
xor
jb
or
mov
jns
fadds
adc
jns
pop
mov
mov
and
fcomi
jno
adc
and
daa
jp
mov
inc
jns
push
xchg
test
movsb
xor
add
mov
inc
push
and
add
jns
mov
xchg
nop
mov
jmp
nop
push
inc
push
jns
jl
or
xchg
jns
lcall
adc
test
push
test
sub
jns
mov
xchg
nop
aad
jns
test
add
xchg
rorb
mov
add
lods
and
inc
push
jns
inc
test
jns
mov
aaa
push
and
adc
jmp
ja
inc
inc
jns
jg
or
inc
adc
inc
rclb
mov
add
push
popf
sbb
and
sbb
call
pop
loope
xchg
mov
adc
cmpsl
loopne
imul
or
je
add
fs
and
outsb
push
xchg
rclb
jns
mov
cmp
test
pushf
sbb
xor
jecxz
mov
pop
inc
inc
jns
mov
inc
jns
inc
push
xchg
nop
pusha
jns
adc
popa
add
push
enter
int
call
in
test
jns
cmpsl
push
push
and
mov
inc
ja
mov
add
xor
outsl
insl
pop
mov
leave
rcr
cs
call
mov
dec
xchg
or
sub
dec
add
lds
sbb
pop
push
leave
rcrb
cmp
test
pop
and
mov
cmp
pop
push
sub
dec
xchg
or
pop
in
sub
xor
pop
clc
cmp
xchg
dec
roll
inc
pop
cwtl
cmp
mov
pop
fldcw
and
repz
mov
sbb
mov
or
jge
xchg
sub
fiaddl
pop
xchg
cmp
or
call
pop
jae
sub
mov
mov
dec
cs
fcoml
push
adc
jns
test
stc
mov
dec
das
fs
pop
or
inc
cs
cmp
xchg
pop
lcall
pop
enter
rclb
xchg
test
das
xchg
and
mov
mov
inc
shlb
and
cmpsl
xchg
das
sti
mov
ret
push
push
dec
inc
out
mov
test
das
call
push
das
mov
ljmp
xchg
test
fs
xor
xchg
and
pop
push
xchg
nop
jge
mov
or
push
xchg
rcrb
xchg
rorb
fldt
inc
mov
fdivrp
add
and
loopne
jae
stos
xchg
ret
dec
pop
mov
pop
fsts
pop
inc
adc
push
and
testb
sbb
fs
nop
sub
sbb
loopne
nop
mov
mov
sahf
adc
ss
enter
nop
add
inc
fs
rsqrtps
mov
and
sbb
pop
xchg
or
jmp
sbb
or
ss
xchg
pop
xchg
push
mov
or
test
test
mov
xchg
testl
adc
mov
mov
imul
pop
out
cmp
in
mov
les
mov
xchg
push
dec
sbb
enter
lock
and
sub
in
push
cwtl
sarb
ret
mov
adc
push
push
push
inc
out
xor
daa
mov
push
popa
push
cmpsb
rclb
pusha
cmp
dec
call
mov
mov
adc
xor
sti
adc
test
add
add
push
or
out
and
call
pop
in
outsl
nop
adc
mov
dec
push
add
push
push
pop
pop
adc
je
push
out
test
gs
int3
je
test
sbb
lds
mov
mov
stos
sub
xor
sub
push
and
push
mov
rcrb
out
out
sub
std
dec
aam
or
inc
stc
imul
call
adc
das
stos
out
scas
pusha
shlb
call
lret
xchg
das
jg
and
adc
call
mov
call
lock
call
adc
pop
cmp
fdivr
repnz
outsl
int
inc
call
mov
lret
pop
shll
call
repnz
call
fs
lret
xchg
das
pop
insb
call
je
and
pop
jl
push
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
inc
and
xorb
xor
inc
and
inc
std
insb
and
mov
xor
sahf
dec
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
adc
and
arpl
and
shrb
push
movsb
adc
adc
xorb
shlb
xchg
je
mov
lcall
dec
sub
xchg
inc
and
jo
add
pop
push
mov
dec
or
mov
mov
ljmp
pop
stos
mov
dec
and
shlb
fistpl
stos
mov
adc
and
adc
movsl
pusha
push
aaa
and
xchg
rcll
sbb
dec
fdivs
or
sub
cmp
cli
or
aad
pop
adc
popa
sbb
or
xlat
or
add
pusha
xchg
xchg
inc
add
stos
mov
pop
sbb
sarl
add
je
test
movsb
mov
shlb
call
test
out
loop
adc
adc
adc
mov
dec
xchg
sti
sbb
xor
mov
xchg
and
pusha
push
mov
mov
xor
pop
or
add
aad
das
sub
mov
dec
xchg
stc
mov
mov
add
pop
sbb
xchg
push
or
rorl
jno
add
sub
nop
push
int3
adc
aad
cs
mov
mov
aad
adc
or
sbb
xor
push
rcl
fildll
pusha
enter
cmpsb
ret
mov
pusha
fs
fisubrs
jmp
fs
ret
push
or
mov
ljmp
dec
aam
cmpsl
sbb
pop
inc
test
outsb
mov
xchg
sbb
sub
fld1
jmp
cmp
push
pop
sbb
dec
jnp
out
mov
mov
dec
aam
orb
insb
mov
cli
sub
lds
repnz
in
push
adc
inc
pop
mov
push
dec
pop
sbb
cmp
mov
fnstsw
adc
mov
movsl
or
lods
pushf
sub
and
jmp
xchg
in
push
gs
jge
lret
ljmp
push
cltd
adc
jnp
adc
dec
push
ret
fcoml
rclb
or
xor
imul
rclb
rclb
iret
cmp
cltd
rorb
ja
sub
rcrb
dec
adc
push
cltd
adc
test
jnp
cwtl
sub
repnz
je
adc
push
cmpsb
je
adc
cmp
adc
loope
sub
xor
adc
fcoml
xor
and
daa
stc
sbb
fwait
shlb
dec
sub
dec
add
or
inc
inc
cmp
stos
inc
inc
ja
rorl
push
cmp
pop
outsb
inc
cmp
sti
call
mov
and
cmp
and
inc
adc
pop
lods
cmp
adc
fnsave
inc
cmp
cmp
mov
call
dec
js
jmp
mov
xchg
mov
dec
jl
lods
shrl
mov
push
stos
mov
add
nop
mov
sub
or
nop
adc
das
stos
inc
add
ja
test
push
outsb
dec
sahf
adc
xor
inc
pop
mov
or
inc
cwtl
jmp
adc
pop
rolb
cwtl
push
inc
cmpl
orl
or
fs
adcl
xchg
push
xor
xorl
sub
int
sub
andb
loopne
mov
or
jmp
enter
orl
sub
sub
dec
mov
and
or
leave
test
out
push
je
nop
mov
int
or
imul
gs
inc
inc
fsubr
mov
popl
repnz
lods
mov
negl
call
add
in
push
mov
lea
sub
jecxz
xor
inc
shrb
adc
inc
sarb
pushf
push
je
push
mov
popf
aaa
xchg
jno
aaa
rolb
scas
cmp
jo
sub
cmpsb
pop
rorb
mov
jl
popa
adc
mov
add
cmp
or
imul
xorb
cmp
jl
aaa
call
aaa
aad
inc
jbe
jmp
aaa
cmpsl
add
popf
push
je
xor
jb
nop
dec
mov
or
je
push
add
cmpsl
add
push
or
pop
stos
adc
sub
int3
xchg
add
inc
outsb
add
mov
aaa
lds
jb
push
fsubs
shrb
iret
dec
adc
iret
add
and
test
xchg
mov
mov
iret
dec
inc
and
push
cltd
and
and
mov
dec
pop
iret
mov
cmp
add
call
sub
sbb
fisttpll
aaa
and
add
test
lea
fmuls
inc
pop
aaa
and
jmp
mov
xchg
inc
mov
cmp
adc
aaa
lea
outsb
inc
addr16
dec
andl
aaa
rorl
jmp
adc
addr16
rcrb
mov
ret
add
cmpsl
cmp
and
push
cmp
pop
scas
push
sub
sbb
xor
mov
push
cs
push
movsl
add
pusha
pusha
mov
dec
push
xor
rcrb
sbb
sub
adc
push
adc
nop
mov
push
pusha
pusha
nop
popa
jnp
add
jo
mov
add
sub
lods
pop
xorl
daa
cmpsl
cli
push
adc
and
in
push
mov
or
mov
dec
inc
jecxz
mov
aaa
and
cmp
adc
push
or
add
jns
sahf
jg
sbb
mov
and
jmp
jp
inc
sub
xchg
repz
add
push
sub
lret
shlb
imul
outsb
xor
mov
test
and
mov
xor
or
daa
mov
fs
mov
out
pop
xchg
push
lret
nop
dec
sub
adc
nop
roll
push
lret
repz
ret
mov
insb
xchg
cmp
pop
fdivl
pop
dec
push
repz
xor
push
stos
imul
sahf
sbb
adc
inc
or
imul
mov
fistpl
jg
mov
push
mov
add
nop
mov
iret
jle
mov
popa
push
popf
push
push
push
xor
and
push
call
pop
xchg
sub
and
mov
cmpsb
in
jno
pop
fstl
dec
ja
inc
xor
add
xor
xor
movsl
hlt
add
jb
push
je
sub
mov
mov
jne
fistpl
adc
sbb
mov
pusha
pop
jne
push
sub
call
test
or
test
add
sub
jb
loope
add
sub
add
inc
sbb
mov
repz
adc
mov
jo
repnz
xlat
fwait
push
int3
xor
add
sub
dec
rdtsc
mov
mov
lea
call
mov
movsb
cmp
les
insl
adc
inc
and
push
sbb
jnp
xchg
lock
xchg
and
jnp
ret
fcom
jnp
lcall
adc
xlat
ret
test
icebp
sub
mov
and
or
mov
or
adc
mov
enter
mov
cmp
dec
mov
inc
nop
push
ss
and
mov
cmp
or
cmpsb
dec
mov
jb
mov
add
jo
push
xchg
movsb
adc
cmpsl
xchg
cltd
adcl
inc
nop
outsb
sahf
mov
jmp
or
out
imul
int3
or
or
and
mov
fwait
sbbb
or
and
add
and
xor
out
or
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
xor
lret
idivb
xchg
push
jbe
push
scas
test
mov
insb
adc
or
push
push
lret
adc
pop
jo
les
jne
dec
sub
pop
jle
sub
mov
push
icebp
mov
gs
dec
push
je
mov
or
push
outsl
push
push
or
loop
ja
cs
adc
sbb
push
fcoml
daa
add
xor
add
dec
pop
jae
outsl
and
push
ret
ss
imul
addr16
bound
outsl
xor
add
xchg
xor
mov
iret
jl
push
dec
cmp
scas
or
das
mov
imul
add
mov
or
sub
outsl
inc
mov
sub
out
mov
push
ret
push
mov
pusha
pcmpeqd
and
bound
shrl
and
add
add
pop
dec
sub
or
mov
jbe
pop
data16
add
out
jo
xor
mov
or
sarl
add
lock
je
aas
test
mov
das
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
dec
rorb
cwtl
xchg
jb
inc
cmpsb
or
shll
sbb
pop
dec
mov
fwait
and
pop
dec
imul
mov
sbb
pop
inc
jne
outsb
je
jg
test
pop
inc
js
jbe
les
jnp
inc
xor
outsl
filds
sub
sub
sub
inc
inc
xor
xor
xor
sub
aaa
jge
xor
xor
inc
xor
xor
ss
std
xor
fs
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
sub
mov
das
lret
jo
add
sets
test
fnstcw
mov
cld
shll
push
fidivrs
cmp
pop
adc
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
jl,pt
rolb
arpl
push
jne
popa
xor
dec
and
cmp
ss
pushf
xor
add
lds
add
outsl
mov
dec
rcll
cmpsb
loopne
test
xchg
in
in
scas
data16
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
cmp
repz
sub
out
cmp
aaa
mov
in
in
mov
lods
sahf
add
movd
hlt
sub
cmp
cmp
xor
inc
push
and
jg,pn
lret
cs
insb
outsl
xor
les
test
fwait
mov
je
push
push
cwtl
mov
sub
push
inc
cmp
push
xchg
sbb
fmull
pop
mov
stos
add
mov
rcll
fldt
inc
cs
subl
idiv
inc
arpl
insb
mov
push
ss
ficoms
ret
lret
rcll
xchg
fld
cmp
and
xor
test
arpl
add
insb
popf
pusha
mov
inc
cltd
cmpsl
addl
lods
adc
jp
xchg
inc
and
stos
inc
jne
mov
out
push
and
lock
lret
jnp
pop
sub
mov
push
imul
bound
sub
daa
scas
scas
je
dec
fs
lods
popf
push
imul
push
jo
mov
adc
insl
sbb
movsl
cmpsb
add
xchg
dec
popa
movsb
jmp
pmovmskb
fwait
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
ja
fs
cmpsb
shlb
dec
fsubl
push
popa
imul
add
or
fcomps
fdivl
xor
call
add
mov
dec
xchg
adcb
nop
rclb
repnz
pop
inc
push
xorb
aas
sub
dec
aaa
xor
aaa
sbb
jbe
sbb
push
or
mov
inc
addr16
movb
xchg
pop
pop
xor
xchg
xor
inc
dec
pop
cmpsl
push
cmp
fadds
repz
xor
orb
or
add
mov
das
push
adc
xchg
adc
push
sbb
enter
jnp
out
sbb
std
sbb
push
das
cmp
pop
nop
cld
and
dec
repz
cli
js
jns
stc
cmp
repz
jp
push
cld
fdivr
mov
cmpsl
xor
les
cmpsl
push
mov
stos
mov
les
popa
cwtl
out
mov
and
outsl
sub
mov
les
sub
mov
mov
repz
cmp
mov
xchg
or
push
andb
iret
sarl
or
cld
or
in
cmp
repz
les
jecxz
pushf
push
xchg
call
xor
mov
mov
jl
insb
push
sahf
pusha
pop
mov
cmpsl
cmp
repz
inc
inc
cmp
sahf
out
sahf
xor
sub
and
jns
out
sbb
adc
or
jl
out
add
cld
or
iret
repz
hlt
call
cmp
repz
nop
jo
xor
out
adc
pop
int3
mov
out
sahf
out
inc
sub
adc
repz
or
push
fcom
les
js
sub
jns
cmpsl
stc
aam
mov
aaa
ret
out
cld
add
call
pusha
and
repz
jl
cwtl
cbtw
cmp
pop
and
sub
lods
add
or
inc
mov
stos
cmp
inc
xor
fnstsw
lret
sub
adc
add
adc
fidivrs
pop
push
inc
dec
cmp
les
and
and
add
or
mov
xorb
push
jecxz
mov
mov
add
mov
inc
mov
adc
add
aas
sub
dec
pop
roll
and
mov
adc
push
jmp
insb
mov
aad
jno
inc
pop
or
cmp
pop
data16
sub
jecxz
mov
and
mov
and
dec
sbbl
call
shrb
mov
pushf
andb
rolb
ret
jns
mov
add
out
pusha
cmpsb
and
lcall
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
push
or
mov
add
and
pop
jne
pop
sub
or
sbb
lods
jmp
jne
imul
xchg
fisttpl
or
pop
outsl
mov
and
pop
jb
pop
push
or
jmp
and
jo,pn
bound
pusha
dec
daa
loopne
notl
das
inc
scas
pop
inc
mov
add
jbe
mov
pop
pop
fadds
jg
das
loopne
xchg
out
add
popa
add
out
push
and
mov
dec
sbb
sbb
cwtl
popf
nop
outsl
xchg
cltd
nop
pop
sbb
aas
jg
fcoms
cmp
mov
lds
aas
sete
daa
fimull
cltd
int3
data16
ljmp
add
in
cmp
jns
pop
push
enter
fisttps
into
mov
ss
lcall
and
test
adc
or
push
popf
jl
cmp
loopne
in
push
aas
sbb
jg
cmpsb
jg
mov
ret
lcall
inc
repnz
shlb
mov
aas
vmptrst
in
sbb
aas
mov
sbb
cmp
iret
mov
cmp
shlb
int
shl
adc
xchg
mov
aam
insb
adc
fs
and
xchg
dec
mov
imul
loopne
daa
sarl
dec
enter
add
pop
shll
stos
xor
mov
adc
sahf
mov
mov
pop
add
cltd
xor
inc
je
dec
imul
sbb
rorb
cltd
sub
push
jb
push
lcall
xor
push
and
icebp
fistps
push
push
add
push
outsl
ja
xor
jmp
xor
sbb
push
add
out
add
dec
fsubrp
daa
movsb
and
pusha
in
xor
orb
cmpsb
cmc
into
or
lods
adc
lret
fucomip
cmc
pop
repnz
and
add
add
inc
cmp
jbe
push
jb
insl
adc
adc
inc
add
adc
shrl
dec
pop
outsb
push
add
push
imul
mov
cli
add
jae
fcompl
add
ret
rcll
test
ficoms
mov
xor
ss
mov
out
das
mov
ficoml
push
sub
push
inc
out
mov
mov
add
add
and
dec
lock
add
mov
xchg
dec
mov
inc
push
mov
aam
scas
xor
das
push
mov
xchg
or
cmp
push
jo
jb
lret
lock
jns
imul
movsb
sbb
roll
push
push
lods
cmpsl
xor
jb
pop
adc
sbb
imulb
packuswb
cmp
adc
into
inc
imul
inc
pop
mov
inc
pusha
inc
and
or
cmpsl
and
inc
pop
sub
and
xchg
xchg
mov
xor
sbb
pop
add
pop
in
sub
cmp
inc
add
fisubl
add
fbld
jne
xchg
inc
or
lods
mov
addb
mov
addr16
movb
es
pop
push
xchg
and
dec
jmp
dec
jecxz
push
nop
pop
ds
call
inc
lahf
xor
mov
xor
dec
loope
adc
icebp
push
popf
xor
inc
cs
das
xor
adc
jle
and
sub
adc
cmp
or
lahf
outsb
xor
add
and
add
mov
aas
das
pop
outsl
push
mov
or
ljmp
out
push
add
push
lcall
orb
mov
add
push
dec
dec
dec
lds
mov
pop
addr16
inc
jns
imul
xchg
xchg
fs
lds
inc
mov
ss
mov
and
push
outsl
cmp
cmp
dec
and
add
stos
loope
add
push
and
xchg
add
cmpsb
cmp
add
sbb
lock
jae
mov
rolb
sub
add
imul
rorb
xorb
arpl
subw
push
jbe
mov
dec
pop
or
and
lods
xchg
jnp
out
mov
jecxz
stos
enter
gs
push
xor
fadds
addb
mov
lea
add
jo
add
add
xchg
add
outsl
inc
dec
andl
inc
jo
sub
dec
xchg
ds
data16
dec
pusha
push
jo
jno
jnp
imul
loopne
arpl
scas
into
pop
or
fcmovbe
roll
in
xchg
inc
leave
xor
ljmp
dec
imul
add
jmp
pop
add
lret
xor
sbb
out
outsl
hlt
gs
ss
cmpsl
add
push
mov
loopne
loopne
imul
push
push
or
jns
insb
bound
inc
jae
adc
add
mov
divb
add
jecxz
outsl
xor
and
push
add
sub
or
rolb
xchg
mov
cmp
dec
jle
push
jae
das
sub
nop
xor
sbb
cmp
fbld
lret
fbld
insl
jge
jp
ficomps
mov
push
popa
xor
push
sbb
insl
inc
subb
aam
es
jg
jecxz
add
push
pop
in
jp
add
sbb
jae
loope
inc
fisttps
jge
filds
pop
push
insb
push
sbbb
or
test
repz
mov
and
ficoms
icebp
addb
cmp
pop
mov
jns
pop
dec
mov
incl
xlat
fadds
inc
dec
push
mov
inc
cmp
pop
xchg
js
inc
xor
sti
fsubrl
lods
add
ss
sbb
pusha
jmp
pop
cmp
mov
cmpb
or
adc
add
andl
andb
fs
and
push
and
mov
lcall
iret
repz
mov
or
sahf
out
ds
out
lock
out
enter
mov
repz
out
test
pop
mov
repz
nop
mov
jo
pusha
push
pop
push
out
sahf
out
cmp
and
adc
sahf
sbb
cld
in
lock
sub
fcomps
enter
cwtl
jns
out
mov
cmp
jns
out
sub
sbb
iret
sarl
add
in
hlt
in
in
iret
repz
int3
mov
cmp
int
xchg
push
mov
js
push
lahf
out
iret
inc
sub
and
or
jmp
xchg
cmpb
sbb
or
dec
cmpsl
sbb
xchg
mov
push
mov
mov
lcall
jne
shl
lock
jo
lock
push
nop
fimull
adc
aaa
cmp
and
orb
maskmovq
testl
lret
jbe
orl
inc
dec
pop
lds
fs
inc
dec
pop
inc
add
and
adc
pop
not
mov
and
or
sarb
aaa
dec
mov
test
data16
inc
subl
leave
xor
addb
fstpt
mov
push
pop
jo
add
mov
cmp
mov
mov
inc
addl
push
rclb
or
jae
inc
push
lret
sub
jecxz
es
cmp
insl
jbe,pn
and
fbstp
add
xlat
lahf
xor
xor
adcb
cld
or
je
das
mov
xor
jae
imul
in
add
xor
gs
imul
sbb
cmp
mov
sub
and
add
or
add
push
xor
jb
jne
xor
sti
loopne
jae
popaw
insb
into
mov
or
dec
jns
das
sti
add
sbb
aaa
push
sbb
inc
add
fstpt
pop
adc
fildl
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
incl
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
ljmp
xor
xor
xor
xor
dec
xor
xchg
shll
ljmp
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
pushl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
jmp
push
add
adc
and
dec
xor
xor
xor
js
popf
xor
xor
xor
xor
sar
pushl
push
xor
xor
xor
xor
xor
xor
out
sar
jge
xorl
xor
jge
mov
xor
xor
fidivl
cltd
clc
ljmp
xor
fnsave
out
xor
call
ss
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lea
cmp
pop
cmp
incl
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
nop
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
jmp
pop
cmp
cmp
jae
mov
pushf
cmp
cmp
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
pop
std
lcall
aas
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
decl
xor
xor
xor
xor
pop
xor
jo
xchg
xor
ljmp
xor
xor
xor
xor
mov
sbb
xor
aaa
ss
clc
loop
cmp
cmp
jmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fwait
adc
cmp
xchg
aas
inc
aas
pop
aas
ja
icebp
and
ret
push
or
cmp
pop
jg
pop
xor
push
xor
xor
xor
xor
xor
loopne
inc
lock
xor
ret
xor
xor
jg
lcall
hlt
xor
xor
xor
test
mov
mov
nop
xor
cwtl
xor
lock
clc
xor
cmp
fistpll
lods
cmp
cmp
cmp
cmp
cmp
cmp
inc
pop
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
cmp
xchg
adc
sbb
jmp
cmpb
ds
aas
jmp
outsl
clc
add
and
cmp
ss
ss
xchg
cmp
lcall
cmp
mov
mov
mov
cmp
es
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
pop
pop
lcall
xchg
xor
adc
add
jmp
mov
scas
xor
xor
jmp
shll
or
and
xor
xor
mov
xor
aas
cli
ljmp
shlb
ss
add
lcall
lods
decl
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
aaa
cld
ljmp
outsl
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
call
std
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
icebp
mov
cs
cmp
dec
cmp
popa
cmp
cmpb
cmp
cmp
cmp
cmp
or
cmp
cmp
push
cltd
sbb
cmp
cmp
cmp
bnd
adc
ljmp
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
pop
cmp
scas
clc
decl
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
out
cmp
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
xlat
aaa
dec
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
xor
mov
xor
scas
dec
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
sbb
xor
xor
scas
jno
xchg
xor
xor
xor
cmpsb
cli
pushl
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
call
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
cmp
cmp
mov
sbb
pop
fimull
nop
cmp
cmp
cmp
test
mov
xor
push
or
call
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
incl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
inc
add
lock
mov
pop
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
pop
pop
inc
xor
mov
xor
xor
push
pushl
push
ss
fiadds
aaa
ret
mov
jmp
repnz
or
cmp
call
cmp
jae
jge
mov
cmp
cmp
jbe
xchg
cmp
mov
cmp
mov
and
cmp
cmp
mov
ds
aas
jne
mov
or
pushl
jg
mov
fwait
xor
xor
dec
or
loope
clc
or
sub
aas
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
idiv
sbb
call
ss
in
and
cmp
cmp
cmp
inc
add
mov
sbb
sub
push
cmp
pop
push
imul
cmp
test
stos
sarb
mov
cmp
dec
cmp
cmp
mov
aam
fnstsw
jecxz
imul
mov
cmp
cmp
sub
push
cmp
sarb
inc
cmp
orb
call
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
loope
sar
or
lds
xor
aad
jg
out
cmp
or
xor
xor
xor
xor
xor
mov
cmc
pushl
inc
ss
lcall
ds
dec
aaa
pop
aaa
js
loopne
lock
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
lcall
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
icebp
push
out
pop
rclb
sub
jne
outsl
ret
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
stos
push
js
xor
xor
sbb
adc
loopne
call
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
test
in
ljmp
arpl
scas
xor
aaa
into
xor
lock
cmp
inc
xor
xor
lcall
decb
lods
xor
int3
sbb
mov
in
test
lods
xor
pushl
xor
xor
cmp
sub
sub
xor
cs
mov
cmp
cmp
cmp
xor
push
test
cmp
fidivs
cmp
cmp
adc
lahf
inc
test
mov
mov
enter
ret
mov
cmp
cmp
mov
cmp
inc
push
push
pop
inc
lock
dec
cld
push
add
or
jmp
stos
sbb
and
and
sub
sub
jecxz
jo
xor
cmp
inc
cmp
cmp
aas
lcall
push
cmp
loope
cld
jl
cmpb
push
mov
nop
xchg
cwtl
dec
clc
mov
mov
sub
xor
inc
mov
ret
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
hlt
sti
shl
loopne
clc
jbe
push
or
xor
mov
xor
xor
xor
inc
xor
xor
mov
nop
xor
xor
fsubl
cmp
mov
xor
ret
add
xor
pusha
xor
ds
fimuls
xor
ss
aas
std
decl
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aaa
sbb
and
and
std
jg
aaa
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
or
sar
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
jl
mov
aaa
cwtl
into
mov
dec
cld
call
loope
aaa
mov
mov
aaa
enter
shlb
aam
fdivs
fdivrl
in
out
aaa
hlt
push
loop
test
cld
aaa
hlt
add
or
adc
adc
js
sarb
out
mov
ret
fdivrl
js
rorb
clc
cmp
pop
call
incl
jl
cwtl
cmp
cmp
sub
cmp
cmp
stos
push
cld
in
cmp
cmp
push
cmp
filds
cwtl
cmp
movsb
cmp
mov
mov
mov
inc
clc
cmp
movsl
sbb
mov
push
push
sar
aas
push
add
movsb
fs
jg
in
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
iret
xchg
mov
aaa
stos
mov
push
lret
aaa
ljmp
or
push
aaa
mov
pop
push
shlb
push
imul
push
add
imul
addb
out
adc
outsb
icebp
add
add
add
sbb
sub
test
out
and
or
push
pushw
negl
dec
add
xchg
out
das
and
dec
mov
cwtl
loopne
xorb
dec
adcb
adc
imul
das
adc
add
fs
cmp
pop
adc
sub
inc
jno
push
mov
daa
imul
mov
ret
jl
push
xor
and
xchg
sub
gs
xchg
pusha
pop
or
inc
or
xchg
ss
push
mov
inc
dec
fcmovb
dec
popa
adc
dec
fidivl
sbb
call
popf
add
inc
call
fildll
cmpl
idivb
push
sub
imul
je
jae
xor
inc
or
aaa
jle
cld
sbb
inc
add
jl
or
incl
jb
mov
cmpsb
xor
mov
add
sub
dec
adc
mov
sub
setbe
ret
incb
insl
das
leave
jbe
call
aaa
or
add
es
jmp
mov
mov
aas
dec
jge
je
mov
sub
filds
movsl
mov
lahf
jp
or
dec
std
push
mov
mov
fdivl
sbb
cmp
and
or
jmp
inc
loopne
pop
in
adc
es
add
adc
jbe
pop
push
inc
ret
les
pop
adc
add
sbb
fidivs
xchg
insl
arpl
pop
std
push
or
adc
sahf
cmpsb
lret
leave
xchg
into
or
mov
sarb
push
jno
inc
cmp
jne
idivb
or
std
adc
addl
jmp
outsb
and
push
cmp
call
outsl
sbb
inc
nop
ljmp
sbb
or
inc
jmp
or
adc
adc
fistps
aam
int
pop
push
add
dec
add
loope
outsb
dec
xor
pop
add
test
mov
pop
or
test
or
mov
dec
inc
loop
sbb
lret
adc
hlt
and
movsb
xor
loope
dec
cmp
xchg
mov
fldl
dec
clc
or
outsl
push
mov
repz
fildl
aas
lea
sbb
dec
ss
clc
fnsave
cmp
fcoms
xchg
mov
insl
dec
cmp
pop
ret
sub
xor
pop
pop
sub
ror
or
sahf
xorl
and
adcb
jb
adc
lea
push
fisubs
mov
fcmovb
js
jecxz
pop
add
xchg
or
push
mov
push
fisubl
pushf
nop
add
fimuls
and
mov
jecxz
and
add
inc
push
xor
add
sub
ret
xchg
test
adc
push
pop
rorb
push
and
adc
cmp
xchg
adc
adc
mov
lock
mov
mov
subl
pop
ja
or
pusha
or
mov
pop
push
cmpb
cmpb
or
pop
int3
loopne
and
pop
adc
xchg
or
leave
adc
sub
scas
mov
add
mov
add
sbb
cmp
cmp
or
fildl
rorb
sarb
xor
dec
rcrb
add
lds
stc
sbb
test
enter
push
rolb
cmp
inc
cmp
loopne
lods
sbb
test
repnz
add
sbb
adc
lea
verr
pop
out
cmp
cmp
jge
inc
rolb
jnp
mov
add
inc
lahf
jmp
jns
dec
inc
lret
sub
gs
add
test
xchg
jne
mov
jle
lret
pop
sbb
sub
and
sbb
xchg
loope
mov
outsb
push
push
mov
outsb
mov
lods
add
sbb
ret
adc
fiaddl
stos
imul
aas
pop
sbb
and
leave
jp
jnp
mov
call
inc
leave
jnp
and
mov
addb
cmp
sub
icebp
out
mov
xor
cmc
lds
mov
adc
push
inc
test
dec
sub
sbb
jbe
rol
jle
pop
cli
sbb
lahf
loopne
dec
sbb
inc
mov
std
pop
xor
loopne
mov
jl
dec
mov
divb
call
mov
repnz
scas
ret
call
call
nop
pop
sahf
jbe
jmp
push
push
mov
and
and
sub
negl
pop
call
and
cwtl
pop
adc
and
inc
push
lods
pop
movsb
fildl
sub
and
and
fimuls
or
sti
mov
mov
mov
push
mov
orl
and
gs
and
push
add
inc
add
mov
and
gs
fwait
stc
and
or
sbb
and
sbb
mov
push
gs
add
and
jg
gs
pop
sbb
mov
icebp
mov
fistps
adc
gs
adc
mov
or
gs
sub
inc
ficoml
or
das
das
das
add
adc
rclb
fimull
sub
out
fidivrl
add
inc
ficoml
add
mov
add
xor
fidivrl
add
mov
popf
notl
sbbb
and
dec
pop
pushf
das
insb
push
cmp
inc
scas
add
sahf
inc
mov
pop
leave
mov
and
pop
pop
ret
and
out
call
mov
add
daa
mov
sbb
fstpt
fisubl
aam
and
inc
int3
mov
and
test
movsb
and
out
push
fidivs
push
and
es
add
xchg
xchg
sbb
dec
lret
sbb
jb
jg
iret
repz
push
insb
fs
push
movsb
sub
cmp
inc
orl
mov
push
xchg
jns
test
mov
mov
sub
lret
fstps
jg
and
out
in
out
xor
pop
nop
inc
push
fs
mov
je
cmp
and
adc
push
addr16
out
fdivl
lock
lret
cmp
jae
push
or
and
sbb
mov
push
push
push
lods
add
xlat
push
inc
xchg
cltd
jle
mov
mov
xchg
mov
mov
and
jb
popa
hlt
and
addr16
xchg
mov
in
cltd
clc
adc
add
cmpsb
pusha
les
pop
push
mov
mov
pop
or
leave
repz
stos
sub
call
adc
push
ret
cmpsl
mov
sub
lcall
mov
daa
es
daa
pop
and
es
daa
or
add
daa
daa
imul
inc
lcall
xor
daa
daa
daa
daa
daa
test
add
sub
out
sub
sub
sub
and
sub
sub
shlb
sub
cmpsb
test
sub
addl
cmpsl
and
dec
testb
and
cmp
cmp
addl
aaa
adc
sbb
add
inc
stos
fcomi
subb
js
lods
andl
fldl
inc
sbb
mov
pop
cmc
push
int
xchg
push
jp
or
clc
fs
dec
enter
sbb
pop
add
nop
call
psubsb
cwtl
adc
inc
sub
jo
call
push
add
inc
sub
and
add
add
mov
sub
cs
addr16
dec
mov
sub
cwtl
push
nop
addr16
jle
push
nop
dec
bound
pop
inc
inc
mov
xchg
in
je
subb
data16
rolb
adc
cmp
addr16
addr16
dec
test
imul
push
shlb
sahf
xchg
test
xor
data16
popf
filds
mov
cmp
or
add
inc
inc
addr16
adc
adc
ret
call
xor
addr16
test
xchg
cltd
mov
inc
inc
mov
jp
inc
loopne
jmp
or
inc
mov
test
scas
pop
mov
in
loop
mov
addb
test
mov
push
adc
aas
jl
cltd
cwtl
pop
push
call
nop
add
ljmp
push
les
dec
add
cltd
mov
xor
enter
cltd
or
cwtl
mov
cltd
pop
xorb
nop
cltd
pop
sbb
push
adc
sbb
cltd
sbb
insb
aaa
or
sti
sbb
test
adc
cltd
outsl
and
push
adcb
xchg
and
addl
xchg
pop
cltd
faddl
and
aam
adc
push
pop
adc
inc
movsl
inc
or
mov
popf
pop
adc
mov
imul
xchg
push
xor
adc
jne
cs
jmp
outsb
adc
sbb
movsl
inc
fstl
or
gs
icebp
push
test
and
push
or
fidivrl
rorb
adc
sbb
aam
bound
adc
sub
lds
jo
inc
enter
mov
lds
cmc
cmp
les
xchg
adc
stos
aam
xchg
push
adc
sbbb
rcrb
jo
inc
movsl
inc
adc
mov
mov
jbe
cmp
in
fiadds
push
pop
adc
test
inc
pop
addr16
aam
push
pop
add
inc
ljmp
inc
pop
jb
sub
push
adc
inc
call
and
pop
ss
push
pop
adc
pop
adc
sbb
and
pop
jmp
pop
or
stos
mov
orb
imul
test
adcl
adc
popa
push
imul
das
push
xchg
adc
xchg
aad
or
xchg
pusha
dec
sub
mov
pushf
pop
adc
mov
mov
in
shlb
pop
inc
movsb
sub
fldl
xchg
fstpt
or
clc
mov
add
xor
sub
lea
inc
pop
mov
mov
pop
enter
nop
in
inc
mov
add
pop
xchg
or
pop
and
dec
aaa
mov
pop
push
xor
sbb
pop
mov
sbb
push
add
cmp
adc
sbb
pop
and
xor
sub
pop
push
add
xchg
xchg
aam
inc
mov
pop
add
mov
xor
shlb
pop
mov
inc
xor
movsl
hlt
pop
xchg
enter
cltd
sbb
xor
enter
cmp
inc
enter
pop
inc
dec
dec
popf
into
loop
inc
pop
cmp
sub
and
mov
fstpl
add
cld
pop
push
call
and
jg
pop
dec
adc
lods
jnp
fdivrs
fdivs
lds
out
inc
cmp
stos
loop
mov
adc
pop
dec
or
flds
call
fs
nop
xor
add
bt
jb
mov
jo
nop
rorb
movsl
addb
daa
xchg
sub
faddl
adcb
ss
jb
xorl
jno
rcll
cmp
xchg
fildl
imul
lods
inc
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
call
out
outsb
je
push
add
and
pop
sahf
lahf
xor
sub
xchg
and
and
xchg
cmp
aas
push
andb
cs
pusha
ss
mov
lret
repnz
ffree
loop
dec
shrl
lret
repnz
fdivl
mov
ss
adc
arpl
in
das
pop
cmpsb
xor
or
mov
add
pop
int3
pop
and
in
inc
fdivl
fdivl
pop
ss
adc
mov
jecxz
or
jo
pop
lret
mov
les
jns
jb
push
mov
dec
lock
out
pop
test
mov
mov
fcmovnu
mov
inc
push
or
sbb
pop
inc
dec
int3
xor
fimull
add
int
sbb
sahf
sub
popa
sbb
push
mov
loope
pushf
int
push
add
cwtl
popa
cmp
loopne
nop
loopne
and
loopne
pop
mov
iret
in
in
add
addr16
in
or
add
or
and
daa
rclb
sub
add
in
cwtl
adc
xchg
cmpsl
or
dec
daa
jnp
add
rolb
js
roll
stos
sbb
cltd
loopne
mov
shlb
and
cltd
dec
inc
xor
mov
push
dec
mov
xchg
push
js
cmp
jp
inc
mov
fcoml
outsl
adc
shrl
and
clc
adc
mov
push
stc
sub
mov
pop
and
push
inc
jmp
sbb
dec
adc
std
sbb
inc
popf
fisttpll
xchg
iret
and
cwtl
test
in
pushf
mov
mov
cmpsl
and
push
daa
cltd
inc
ljmp
jns
push
mov
fdivr
loope
nop
cmp
mov
sbb
lahf
mov
xchg
jmp
jle
mov
pop
leave
add
or
mov
repnz
add
add
mov
add
fdivl
gs
daa
inc
push
xor
or
subb
and
sub
inc
pushf
mov
aam
outsl
push
add
inc
adc
call
test
popa
mov
insb
xor
lods
pop
pop
sbb
ds
and
mov
das
xchg
lea
add
mov
jmp
ret
call
push
jns
mov
xchg
and
je
xchg
xor
push
add
ret
mov
xchg
js
jl
push
cmpsl
rorb
addb
mov
or
xchg
inc
push
mov
add
mov
inc
inc
icebp
gs
or
and
and
pop
cmpb
jl
xor
test
push
inc
adcb
addb
jp
sub
pushf
inc
pop
inc
sub
jge
add
or
out
or
mov
dec
pop
arpl
mov
sbb
sbb
insb
ret
popf
jecxz
jne
xchg
adc
filds
sbb
or
adc
stos
and
filds
filds
inc
cltd
sbb
ss
cmp
in
xchg
pop
dec
pushf
push
cmpsl
xchg
inc
xchg
push
fadd
cmc
shrb
adc
sbb
cmp
xor
inc
sub
mov
jae
dec
fsubl
xor
mov
out
mov
fiaddl
pop
push
xchg
adc
pusha
inc
adc
inc
insl
xchg
sub
pusha
inc
insl
xchg
sahf
es
push
inc
xchg
into
enter
xchg
lret
fstps
jns
js
cmp
sahf
push
fldcw
inc
insl
roll
jns
rcrl
sahf
in
aam
xchg
or
cmc
rcrb
push
test
xorb
and
add
mov
or
add
mov
or
repnz
leave
rclb
cmpsl
pop
xchg
inc
mov
imul
leave
rorb
insl
fdivrl
rcrb
xor
dec
out
jns
xchg
imul
sub
add
ljmp
cmp
mov
lcall
dec
xchg
xchg
mov
movsl
pop
mov
xchg
lods
jl
add
jmp
js
dec
call
pop
mov
sub
sub
xor
pusha
bound
stos
lret
orb
jbe
lcall
adc
push
int
fldl
or
test
jb
sub
aam
fcoml
cmpsl
lret
and
pushf
or
adc
ss
inc
push
cmpsb
in
ds
lea
cmpsl
mov
aaa
mov
loope
xor
int
inc
lods
jne
repnz
leave
call
adc
push
int
sbb
loopne
jb
jge
int3
push
pop
das
push
in
mov
dec
int3
pop
insb
push
aad
ljmp
jmp
shrl
jo
push
inc
andl
pop
mov
lods
inc
cmp
cmp
dec
inc
fldl
test
adc
and
sub
ss
lcall
cs
pop
xchg
mov
inc
or
pop
loopne
mov
add
fildl
xchg
xor
not
lds
add
lods
adc
aaa
add
enter
mov
and
mov
push
das
push
push
and
fistl
xchg
inc
and
pop
iret
ret
xchg
mov
in
xchg
xchg
mov
fistl
sub
add
push
pop
cmp
ret
add
fildl
imul
inc
or
or
inc
or
mov
fidivrl
mov
sub
push
cmpb
jno
in
dec
loopne
aaa
out
jns
push
push
rcl
test
push
or
daa
fildl
fldt
call
mov
je
fildl
mov
or
xchg
mov
fisttpl
or
aaa
ret
shlb
jle
or
add
or
mov
test
add
loopne
daa
xchg
outsb
filds
sub
sbbb
dec
jno
fcoms
fucomip
in
xor
push
iret
leave
roll
mov
sub
lock
iret
loope
push
mov
int3
add
sub
adc
pop
aas
dec
pop
mov
xchg
xchg
xchg
xchg
mov
adc
xchg
mov
hlt
mov
xchg
mov
aam
int3
nop
xchg
xchg
xchg
mov
mov
repnz
mov
xchg
mov
mov
jno
repnz
repnz
mov
xor
and
sbb
and
add
push
jb
and
mov
enter
mov
stos
mov
lahf
mov
pop
jb
mov
and
cmp
gs
nop
sbbl
mov
enter
and
in
pop
cmp
mov
jb
sbbl
mov
inc
pop
mov
mov
pushf
mov
push
jb
cmpl
mov
enter
dec
mov
in
cmp
jb
mov
and
cmp
mov
sub
mov
inc
mov
mov
and
call
jp
repnz
rcrb
xor
mov
mov
fistl
and
jb
mov
enter
sbb
sbb
xor
daa
cli
mov
jb
mov
cmp
int
dec
cmp
cmp
mov
pushf
xor
inc
inc
mov
rolb
cli
dec
in
jae
jl
dec
dec
push
pusha
sub
add
lock
and
mov
or
push
test
movsb
rolb
add
dec
or
addr16
push
adc
inc
add
push
cwtl
sbb
adc
sbb
lods
or
dec
push
leave
xchg
stc
sub
jb
aam
push
jb
repnz
cmc
pop
adc
jmp
loop
add
or
test
and
mov
cmp
inc
enter
mov
icebp
roll
mov
orl
dec
lods
push
add
adc
sub
daa
dec
cmp
add
inc
and
mov
lods
cwtl
xchg
jns
sbb
push
insl
sub
sub
adcb
sbb
stos
mov
mov
punpcklbw
inc
movsl
gs
hlt
ror
dec
psrlw
inc
mov
and
sub
and
xor
mov
inc
mov
mov
jl
mov
jbe
gs
pusha
sbb
sub
out
adc
sarl
jmp
push
sbb
cmp
movsl
mov
dec
sub
imul
mov
sub
xchg
sysexit
push
sub
inc
mov
inc
mov
sbb
packuswb
xor
xchg
jo
shrb
ficoml
push
fwait
mov
push
loope
add
inc
addl
jmp
pop
addr16
and
sub
inc
xchg
xor
int3
dec
stos
mov
movsl
sub
cmp
scas
or
test
and
sub
sbb
or
shl
loopne
movsb
lcall
or
aam
mov
or
int3
test
sub
sub
gs
test
sub
or
in
mov
xchg
movsl
shr
pop
or
lret
add
cmp
pop
mov
push
or
int
dec
sbb
inc
scas
push
cmp
xchg
outsb
or
addb
inc
movsl
sub
mov
fucomp
insl
or
movsl
sub
jo
fmull
mov
js
cld
or
loopne
ljmp
cmp
push
call
das
gs
and
lret
out
mov
jns
orl
sub
mov
and
mov
scas
jnp
or
xchg
mov
sbb
pop
sbb
and
dec
ja
sub
popa
lods
mov
inc
sub
out
adc
movsl
sub
adc
mov
or
sbb
sub
pop
dec
push
add
js
mov
inc
sub
push
lea
and
sbb
sub
sub
cmp
cmp
mov
movsl
aad
sub
out
sub
jecxz
xchg
push
cmpsb
push
or
jecxz
push
or
fwait
sub
ss
lret
xor
imul
lcall
mov
ja
pop
cmp
je
nop
imul
push
scas
sbb
rcrb
notb
or
sub
shl
xor
and
sbb
sub
pusha
loopne
xchg
or
xchg
scas
inc
scas
scas
xor
push
sbb
inc
test
imul
aad
loopne
ret
xchg
xor
rcll
or
sbb
sub
or
sub
push
or
and
test
movsl
mov
mov
mov
out
dec
js
sub
loopne
xchg
mov
inc
or
or
or
mov
xchg
movsl
mov
xchg
dec
xlat
stos
or
push
or
inc
dec
add
or
cmp
or
xchg
cmpl
mov
or
ret
movsl
sub
lock
xor
dec
sub
and
dec
negl
call
inc
sub
xchg
mov
dec
pop
cmp
pop
dec
xchg
mov
sahf
or
lahf
pop
push
test
add
push
pop
xchg
sub
push
loop
rcll
mov
dec
rorb
xchg
movsl
or
mov
push
jp
or
push
stos
andl
or
or
or
scas
mov
js
or
cmpsb
les
outsb
test
fwait
adc
inc
popa
mov
data16
inc
sub
pop
jmp
or
subb
cmp
pop
dec
les
push
or
out
push
lret
mov
jo
in
addb
add
or
and
xchg
pop
stc
sbb
pop
xlat
test
rolb
adc
mov
push
leave
xchg
push
shlb
mov
dec
cmp
aaa
xchg
out
push
dec
push
test
pop
das
cmpsb
in
add
test
jmp
or
mov
dec
adc
xchg
inc
adc
mov
jmp
inc
inc
ja
fstps
bound
jle
mov
in
xor
dec
rclb
sbbl
mov
dec
ja
cmpsl
mov
or
test
cwtl
fs
and
sbb
jnp
addr16
mov
dec
push
push
mov
cli
sahf
arpl
movsl
xor
cmpsb
js
mov
rcrl
adc
loopne
push
mul
jns
out
cmpsl
push
sub
mov
out
sahf
pushf
mov
faddl
sbb
iret
repz
ss
push
pop
repz
rep
adcb
iret
enter
or
push
ds
repz
pop
jb
mov
repz
pushf
mov
out
push
sahf
out
lcall
jns
out
pusha
jbe
test
sahf
ja
out
call
sbb
jns
out
xor
dec
pop
insb
or
add
add
sbb
fimull
push
adc
and
pop
int
and
push
inc
xor
add
ret
imul
pop
sbb
push
push
mov
repz
dec
sbb
mov
insb
ss
add
push
clc
mov
pusha
xor
rorl
and
inc
mov
mov
xorl
clc
mov
iret
repz
mov
add
sub
out
test
adc
adc
repz
jnp
adc
xchg
sbb
sbb
jns
out
xchg
js
or
mov
push
push
pop
sahf
mov
sarl
and
and
js
repz
xor
sbb
addl
call
xor
les
dec
push
mov
test
int3
inc
or
orb
adc
test
pop
jns
push
rorb
cmp
jns
out
adc
add
xchg
iret
repz
in
loopne
fcom
int3
cmp
repz
sarb
test
mov
iret
cwtl
xchg
nop
mov
cmp
jl
je
repz
rep
push
repz
pop
push
push
dec
dec
inc
cmp
repz
cmp
xor
repz
repz
adc
add
jns
out
nop
fmul
test
int
jns
push
pop
cmp
repz
jl
push
dec
stc
cmp
repz
xor
or
mov
jns
cmpsl
in
shlb
jl
cmp
int3
test
mull
cmp
xor
jg
push
add
insb
inc
out
lock
mov
addb
das
pop
mov
adc
and
dec
add
push
aaa
xor
cltd
shl
push
push
add
and
aam
inc
xor
inc
or
mov
test
jne
aaa
or
inc
mov
iret
inc
pop
mov
push
lea
mov
fdivrs
daa
add
and
and
sahf
mov
push
rorb
daa
out
lods
insl
iret
xlat
push
mov
inc
add
outsl
sarb
jnp
imul
fwait
repz
inc
pop
shll
mov
insb
leave
jbe
add
cmpsb
mov
das
nop
adc
test
das
fs
pop
shrl
aaa
cmp
into
mov
pop
rorl
cmp
loopne
xchg
push
pop
scas
inc
ffreep
xchg
sub
mov
inc
lahf
inc
jg
or
jle
pop
xor
inc
dec
mov
aas
sti
push
int3
mov
andb
fsubl
push
dec
mov
xchg
xor
mov
movnti
imul
test
leave
push
sub
in
cltd
andb
mov
sbb
in
ret
insb
pop
xor
cmp
pop
stos
insb
cmpsl
sub
lahf
inc
outsl
ds
outsl
out
into
mov
subps
xor
test
je
loopne
int3
aaa
rolb
imulb
dec
cmpsl
mov
xchg
add
pusha
xchg
mov
scas
or
sarl
inc
iret
sti
xchg
jno
pop
outsl
jne
notb
fs
in
imul
add
imul
push
jae
inc
sub
inc
xor
xor
lret
add
fs
movsl
xchg
xchg
stos
xlat
mov
sub
inc
loop
adc
xchg
adc
mov
pop
stos
lods
push
out
push
lcall
fwait
dec
add
sub
sbb
add
lret
pop
adc
xor
add
lea
and
or
andl
inc
sub
xor
xlat
sub
adc
daa
pop
add
xchg
sbb
sbb
lahf
jno
sbb
pop
arpl
sbb
adc
push
inc
addl
pop
lea
xor
xor
inc
shll
add
adc
add
sti
pop
lea
add
adc
inc
out
lea
pop
cmovo
add
scas
add
lea
pop
mov
add
sbb
xor
pop
push
aaa
add
ja
sbb
ficoml
outsl
or
mov
aam
daa
push
inc
add
data16
pop
push
pop
inc
cmp
and
pushf
cwtl
repz
repz
nop
mov
je
pop
push
pop
dec
inc
jns
out
inc
cmp
xor
out
sahf
out
sub
sbb
repz
sbb
add
xchg
hlt
xchg
sahf
out
outsl
in
push
in
enter
out
mov
test
mov
outsl
je
mov
push
fs
push
dec
mov
out
sahf
cmpsl
push
and
add
in
xchg
jns
out
push
enter
test
jns
out
cwtl
nop
mov
js
jo
pop
inc
cmp
repnz
push
adc
lock
repz
shl
int3
mov
cmp
xchg
insb
pop
xchg
add
outsl
out
sbb
xchg
scas
and
push
cwtl
ret
sbb
popf
mov
neg
mov
push
adc
inc
push
push
pop
dec
cmp
mov
sub
in
push
aad
fistl
cs
clc
mov
fwait
push
jg
cld
pop
enter
push
or
mov
lods
xchg
push
inc
xor
adc
gs
inc
mov
inc
test
leave
add
add
jge
sarl
inc
xor
rcr
xor
xor
out
test
dec
cmp
ss
ss
nop
adc
mov
ss
or
mov
sub
xorl
aaa
adc
sbb
pushl
push
cmp
cmp
ja
xchg
fwait
es
insb
loop
xchg
lret
cmp
cmp
cmp
cmp
lcall
cmpl
adc
xor
cmp
cmp
mov
ds
ds
ds
fdivr
ljmp
popa
add
ds
ds
ds
ds
aas
pop
aas
and
sub
cmpsb
sbb
into
push
and
jmp
jbe
jnp
cmpl
movsb
aas
mov
sarl
negb
cld
or
lahf
push
xor
jl
xchg
cmpsb
mov
jl
xor
sbb
push
xor
xor
push
pusha
adc
clc
inc
xor
jecxz
mov
xor
xor
dec
xor
pusha
scas
cmp
xchg
mov
cmp
xor
xor
pusha
je
rolb
outsl
xchg
sbb
xor
outsb
cmp
mov
xor
lcall
xchg
xor
xor
xor
xor
xor
xor
dec
inc
incl
mov
ss
adc
mov
xchg
mov
mov
adcb
outsb
sbb
jle
cmp
cmp
add
pop
cmp
jecxz
cmp
mov
add
cmp
xor
xor
cmp
mov
sarb
inc
push
pop
cmp
pusha
jl
push
outsl
cmp
or
sbb
inc
mov
sbb
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
jecxz
or
outsb
ja
jle
test
pop
cld
pop
add
cmp
hlt
cmp
inc
ds
xor
ds
ds
jmp
add
push
cwtl
xchg
xor
xor
pop
ljmp
xor
xor
xor
push
xor
fs
filds
shll
xor
xor
xor
xor
lcall
xor
xor
outsb
xor
loopne
repnz
dec
ss
lcall
bound
xorl
ss
ss
decb
sbb
fnsave
jecxz
clc
ss
ss
aaa
or
sbb
push
xor
aaa
addr16
mov
mov
push
cmp
sbb
push
rclb
cmp
pop
aaa
leave
clc
outsb
cmpsb
test
mov
cmp
push
jmp
sbb
cmp
cmp
cmp
cmp
clc
pop
mov
adc
sbb
and
es
cmp
cmp
pop
push
cmp
jns
icebp
push
xor
jle
xchg
mov
xchg
dec
lahf
cmp
out
xchg
ret
push
add
decl
cmpb
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
ret
xchg
push
cltd
push
dec
sbb
push
sub
mov
dec
aas
outsb
es
icebp
pop
inc
cmpl
aas
ret
aas
iret
dec
fmull
adc
xor
inc
adc
jp
xor
pushl
xor
xor
xor
xor
xor
jo
in
pop
xor
fisttps
push
or
cmp
insb
outsl
xchg
ret
xor
xor
adc
push
pop
std
lds
ss
ss
arpl
stos
add
ss
mov
cmc
xor
aaa
jne
jle
icebp
inc
xor
or
sbb
sub
andb
cmp
mov
sarl
fnstcw
jmp
cmp
cmp
cmp
clc
jecxz
sbb
arpl
outsb
push
ja
ret
fnstsw
push
shrl
ds
or
cmp
lret
mov
adc
xor
xor
ja
call
cs
xor
xor
xor
xor
xor
xchg
sar
pushl
fdivl
out
xor
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
ss
sbb
push
cltd
push
push
into
and
xor
sub
jb
loop
ud0
cmp
pop
cmp
lcall
divb
jg
cmp
and
ds
imul
leave
clc
mov
adc
lods
cmp
rcrb
jl
sbb
mov
mov
fnsave
mov
xor
out
sub
push
cli
cmp
cmp
dec
cmp
pop
cmp
cmp
xchg
outsl
cmp
inc
call
xor
xor
xchg
div
loopne
sbb
or
pop
dec
es
jno
xor
push
das
adcl
aaa
pop
pusha
out
mov
adc
sbb
mov
inc
test
aad
mov
jle
or
jp
ret
shll
push
xor
popa
je
pushf
pop
lods
mov
popf
push
mov
inc
daa
inc
fdivrl
in
pop
xor
or
cld
cmp
push
int3
adc
sbb
andb
mov
push
mov
jl
sbb
mov
or
stos
mov
mov
xor
mov
fsubrp
cs
cmp
xor
or
or
adc
adc
scas
test
xor
xor
and
sub
cmp
inc
xor
je
mov
push
xchg
pop
xor
xor
je
push
xor
es
ljmp
popa
lret
mov
mov
nop
xor
rcrl
mov
or
mov
mov
fwait
sarb
fdivs
push
loopne
sbb
xchg
je
js
nop
xchg
xor
xlat
jbe
dec
or
sbb
cmp
push
fcomip
lock
xor
outsb
jo
bound
xchg
fdivs
sarb
cmp
mov
clts
addl
pop
pop
incl
pop
daa
cwtl
out
shl
ljmp
sub
mov
push
insb
xor
xor
xor
xor
xor
aaa
push
xor
add
sub
dec
call
xor
pop
xor
xorb
xchg
sbb
popa
sbb
jb
xor
ucomiss
pop
fsubrl
in
and
cmp
xor
xor
xor
xor
inc
add
mul
mov
push
sbb
xor
push
cmp
inc
xor
xor
xor
push
xor
aas
cmp
mov
xor
xor
xor
xor
incl
mov
nop
push
scas
pushf
xor
xor
xor
xor
push
pop
pop
cld
xor
xor
xor
into
shlb
int3
fcmovbe
addb
inc
mov
xor
jno
xor
cmp
outsb
sbb
cld
xchg
mov
adc
add
pop
inc
ljmp
inc
and
lcall
pusha
cwtl
mov
add
add
or
pop
pop
push
or
mov
decl
or
or
or
or
adc
adc
push
adc
imul
xor
add
pop
sbb
adc
adc
adc
pop
mov
data16
or
inc
loope
inc
add
add
and
add
sahf
add
les
push
out
dec
add
dec
outsl
dec
inc
mov
push
cmpsb
loopne
jb
imul
ljmp
movsb
cmpsb
add
push
adc
pop
and
in
call
adcl
shl
and
bound
js
or
leave
dec
xor
and
mov
mov
dec
or
inc
mov
xchg
xchg
dec
popa
adc
dec
nop
pop
push
adc
adc
scas
pushf
into
add
stos
add
pop
pop
pusha
fstpl
scas
cmp
adc
push
adc
pop
mov
jno
and
adc
mov
or
xor
adc
shrl
icebp
mov
push
xor
shll
sbb
dec
dec
mov
stos
js
incl
or
add
lds
cld
cli
and
jg
jmp
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
cli
pop
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
incl
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
decl
sbb
int3
lcall
mov
push
pop
mov
pop
pop
mov
jg
popl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
incl
test
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
decl
int
arpl
push
out
or
aas
fadd
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
in
ljmp
std
sarl
xor
hlt
and
xchg
jmp
sbb
rcll
xchg
add
dec
mov
call
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
loope
in
in
outsl
sbb
mov
sar
andl
aas
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
jg
scas
cld
or
push
inc
sbb
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
in
decl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
mov
aaa
dec
push
push
push
idivl
cmp
sub
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
pushl
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
add
orb
mov
cmp
imul
jmp
xchg
pop
clc
pop
hlt
lret
in
stos
movsb
add
lea
jg
gs
std
xorb
cld
lcall
outsl
adc
ret
das
pop
pop
pop
shlb
push
std
incl
out
sarb
sbbl
jno
or
sarb
std
pop
call
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
incl
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
ljmp
arpl
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
std
aad
fcmovnu
rorl
insb
stos
arpl
ljmp
loop
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
jle
call
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
pushl
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
clc
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
outsl
incl
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
pushl
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
notb
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
mov
cmp
fmull
enter
aas
lahf
cs
in
pop
mov
sub
mov
cld
aas
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
das
testb
or
pop
jg
add
mov
std
fistpll
mov
aad
test
mov
mov
std
mov
mov
push
push
sbb
stos
icebp
pop
incb
nop
dec
jno
adc
push
inc
jecxz
sbb
sarl
pop
fdivr
jnp
inc
clc
xorl
mov
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
add
incl
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
jg
das
in
loopne
shrb
rcl
jg
adc
xor
pop
rcr
dec
mov
push
pushf
lea
jp
jnp
jecxz
adc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
mov
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
or
mov
movsb
insb
or
and
xchg
sub
insb
test
aas
repz
sbb
clc
lods
add
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
loopne
iret
or
cmc
mov
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
inc
in
cmpsb
mov
pop
cld
or
dec
ss
pop
in
in
inc
lods
movsb
or
repnz
mov
pop
add
cmp
imul
mov
or
pop
in
cmp
jmp
mov
lcall
popf
jmp
hlt
dec
mov
incl
sti
sbb
xlat
inc
aas
mov
jg
mov
sub
das
sar
mov
sbb
cld
daa
jp
std
adc
cltd
push
mov
mov
ret
nop
cmp
das
incb
lock
and
pop
pop
div
cld
idivl
shlb
inc
and
loope
jae
jmp
shrl
je
jge
jg
ljmp
jg
stc
add
out
icebp
mov
loope
inc
mov
fisttps
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
push
rolb
lcall
xor
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
pop
sbb
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
call
mov
ds
inc
mov
in
sbb
xchg
imul
call
outsl
jmp
std
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
popf
pop
add
fsts
dec
or
add
sti
pop
inc
push
cltd
mov
or
nop
imul
popf
test
and
filds
jne
and
pop
mull
pop
leave
testb
xchg
pause
roll
cmp
lret
fcomp
sub
sbb
sahf
lods
mov
cld
inc
addr16
push
add
jmp
xchg
adc
xchg
xor
pandn
xor
fldt
dec
ficompl
push
les
ficoms
inc
add
dec
dec
push
push
je
xchg
mov
hlt
jecxz
decl
shlb
sbb
test
jnp
pop
fcomp
imul
mov
sub
ljmp
mov
inc
imul
mov
adc
or
and
call
cwtl
add
es
cmove
imul
call
popa
adc
addr16
ss
dec
jle
test
sub
push
sub
mov
mov
mov
xchg
cltd
movsl
mov
test
pop
shlb
pop
popf
sahf
push
mov
xor
movsl
add
cmp
mulb
inc
out
pop
into
decl
xchg
sti
xchg
int
rcr
shrb
cld
loopne
and
pop
ljmp
in
jp
pusha
pusha
out
call
lahf
mov
adc
insl
les
cmp
std
and
push
xorps
sbb
ss
lcall
mov
int
cli
stc
mov
push
dec
cmp
xchg
cmp
jmp
movsl
hlt
mov
aaa
mov
and
outsl
addr16
inc
and
sbb
sarl
xchg
sbb
decl
xchg
cmpb
push
cmp
add
dec
lods
mov
inc
incl
cli
into
xor
jg
std
inc
mov
sti
or
loop
and
mov
and
add
ljmp
xlat
inc
cwtl
in
pop
add
repz
add
adc
daa
pop
dec
dec
push
adc
inc
jl
sbb
int3
loope
pop
idivl
rcl
sbb
pmaxsw
repnz
ds
in
push
fcmovnb
mov
outsl
outsl
shlb
dec
cmp
cmp
int
dec
push
xor
imul
rorb
jae
mov
jmp
xchg
sub
sbbl
scas
xlat
mov
movsl
clc
not
inc
dec
mov
or
cmp
mov
inc
ds
push
adc
je
mov
xchg
sbb
lcall
lahf
mov
xchg
fwait
push
sbb
movsb
sbb
js
in
mov
jecxz
dec
xor
decl
mov
pusha
jbe
mov
in
ljmp
jb
insl
std
dec
cmp
jge
pushl
aam
or
lret
pop
sarl
idivl
pop
lcall
pushl
adc
sbb
scas
movsl
ss
imul
adc
xor
hlt
cs
jecxz
ljmp
dec
dec
or
mov
vmread
xchg
or
frstor
push
and
add
jg
decl
lock
dec
mov
fucomi
dec
push
mov
loop
pop
cltd
repz
dec
lods
mov
lods
pop
mov
xchg
cmp
mov
mov
in
ja
icebp
es
out
ss
jmp
sub
xchg
pusha
aad
stos
scas
sbb
mov
jge
fs
mov
jge
cmp
test
aaa
adc
lods
inc
int3
scas
cs
pusha
xor
xorl
decl
adc
add
sbb
enter
pop
lcall
iret
and
outsb
sub
sbb
pushl
sub
mov
cs
pop
cwtl
cmp
imul
pop
rcr
push
lods
insl
imul
call
mov
jnp
pop
sbb
pop
sub
xchg
jmp
pop
lods
or
sbb
cli
nop
mov
test
ret
scas
inc
jmp
packuswb
inc
push
cld
pop
cmp
stos
cmp
jmp
fdivrl
xchg
jp
xor
cmp
sti
push
mov
mov
out
push
mov
aaa
xchg
sbb
mov
outsl
adc
cld
pop
out
int
jns
decb
gs
in
lock
flds
cmp
xchg
std
mov
push
jno
fidivrl
push
push
push
cmpsl
jmp
dec
call
repz
outsl
out
shll
mov
mov
stos
testb
jg
inc
xor
jns
inc
mov
ds
cmc
into
cli
mov
aam
inc
movsb
out
cwtl
pop
out
idivb
decl
fldt
or
fwait
ds
xor
ja
icebp
aas
fnstenv
mov
sub
mov
paddusb
movsl
adc
ret
mov
mov
dec
ficoms
pushl
stc
repz
subl
ss
jle
push
inc
lods
dec
cmp
sbb
xchg
jg
ljmp
js
xchg
cmp
pop
push
adc
cmc
mov
fwait
test
cmp
dec
sbb
adc
xchg
std
cmpps
lcall
imul
scas
mov
add
push
and
adc
cli
call
inc
punpcklbw
xchg
or
dec
push
je
mov
push
inc
jg
push
in
ret
andb
es
jns
mov
inc
or
adc
scas
shr
push
dec
jne
xchg
mov
push
sti
push
int
dec
xor
push
cmp
dec
fistpll
sti
in
rorb
mov
mov
jmp
ss
xor
add
xchg
lcall
inc
push
decb
adcb
lea
cmp
mov
ret
mov
clc
sbb
es
dec
cmpb
jae
jp
and
xchg
sbbl
std
ljmp
adc
cmp
int3
jno
out
mov
fdivrl
push
orl
xchg
incl
faddp
insb
in
inc
sub
cltd
lahf
jp
or
int
mov
push
mov
mov
xchg
adc
flds
jmp
insl
insb
push
and
das
dec
cld
mov
int
mov
xchg
xchg
das
aaa
std
decl
and
pop
into
cwtl
repz
outsl
and
lahf
xor
fiaddl
jg
adc
mov
mov
pop
in
lods
mov
inc
pop
mov
mov
mov
lds
add
lds
or
cltd
push
fcomip
ss
mov
add
leave
repnz
or
mov
mov
call
call
add
dec
je
stos
and
imul
push
sbb
pushf
call
cmp
sahf
leave
aad
mov
or
add
repz
xor
lcall
inc
mov
fdivr
push
mov
test
xchg
sbb
push
pop
xchg
mov
lret
jg
mov
shlb
adcl
into
mov
cmpsl
in
call
mov
sbb
dec
int3
movsl
or
pushf
leave
jl
cmp
and
iret
cmc
aad
in
scas
dec
add
sti
lea
stos
adc
ja
mov
call
xrelease
lock
add
fildl
sbb
imul
adc
lret
sti
dec
inc
stc
aam
jae
cld
fs
lock
jnp
addb
cld
ljmp
loopne
jg
pop
int3
std
es
mov
dec
dec
sbb
mov
or
insl
and
outsb
scas
scas
sbb
mov
mov
in
jmp
lcall
jnp
sub
imul
call
shlb
mov
cltd
cltd
out
cmp
std
mov
std
sub
or
push
xchg
les
pop
lods
cli
lcall
adc
adc
mov
xlat
sub
dec
rcll
leave
pop
pop
and
adc
inc
pop
bound
mov
pop
push
sbb
ljmp
xor
dec
cmp
add
or
jmp
cmp
mov
push
adc
je
rclb
pop
cmpsb
std
inc
orb
test
gs
pop
inc
dec
xchg
pop
ljmp
mov
addr16
test
mov
push
cmp
and
pop
xor
mov
icebp
adc
mov
pusha
mov
sahf
stc
shl
lahf
fisubrl
mov
push
ss
push
pop
aaa
jmp
mulb
push
arpl
xchg
ret
rorl
cmp
mov
jmp
lahf
push
aad
scas
imul
cs
stc
icebp
insb
cs
inc
and
outsb
test
std
pushl
pop
lcall
pop
aaa
sbb
push
clc
jg
cmp
sub
mov
jg
sub
xchg
push
mov
adc
mov
pushl
dec
mov
pop
in
ficompl
mov
pop
mov
movsb
pop
loop
outsl
push
ljmp
subb
dec
or
and
mov
fimull
push
jmp
mov
rorl
mov
mov
mov
jge
cwtl
or
popf
sti
pop
xorb
push
std
lret
inc
or
pop
rcrl
push
movsb
add
dec
cmc
push
fistps
xor
fstp
outsb
push
fildll
adc
add
xlat
jg
pop
xor
aad
outsb
mov
insl
pop
push
mov
jae
and
ljmp
shll
cmc
loope
repnz
fadd
out
xor
xchg
nop
jg
decl
shr
lret
fwait
adc
sbb
je
mov
mov
fstpt
mov
les
aad
mov
int
in
jmp
lods
mov
mov
insl
std
incl
pop
adc
push
dec
mov
add
jg
xchg
es
pushf
rcr
int
in
adc
mov
jecxz
and
xchg
test
or
push
push
pop
jge
sar
xchg
std
ljmp
call
test
incl
add
and
sub
inc
loop
es
jmp
cs
push
loopne
outsb
fsts
loopne
das
jmp
jp
sbb
rorb
frstor
sbb
pushl
ljmp
pop
jnp
das
mov
or
dec
and
or
das
sub
pushl
mov
cmp
or
sub
inc
loop
cmp
ficompl
jo
mov
ds
ljmp
stos
pop
sbb
stos
xor
out
jg
mov
dec
pop
lock
in
pushl
std
repz
dec
in
std
dec
mov
inc
ret
mov
sub
mov
stos
int
or
mov
enter
push
aam
fucomip
xchg
and
fs
push
sbb
cld
adc
test
sbb
sub
mov
aaa
int
xor
jg,pn
js
push
jmp
incl
cli
cmp
pop
dec
sahf
cli
aam
jg
fcomi
ret
adc
sarb
mov
ljmp
incl
mov
stos
or
add
jne
outsb
adc
jmp
adc
xchg
fcomip
push
scas
mov
jo
mov
arpl
cmpsb
mov
fistps
sbb
dec
pop
cli
sub
scas
mov
mov
mov
add
out
subl
sub
incl
mov
inc
xchg
fadds
inc
jnp
imul
shrb
mov
mov
arpl
out
sub
or
cmp
ljmp
into
pop
js
out
sub
push
out
cmp
shl
movsb
pop
ss
cld
xchg
ds
ja
and
test
pop
xchg
sub
ljmp
test
or
iret
lahf
adcb
xchg
nop
mov
ljmp
cli
lods
cmp
rcrb
ljmp
push
or
add
ret
stos
idiv
fs
push
and
lahf
lods
pushf
pop
mov
sbb
imul
test
adc
mov
mov
xor
out
jp
dec
and
mov
xorb
push
push
push
dec
rcrb
xor
add
mov
mov
divl
jl
cmp
dec
push
cltd
out
inc
cmp
mov
sbb
lcall
stos
dec
enter
sbb
cli
stc
cld
fldenv
rorl
gs
lcall
cld
mov
mov
in
dec
xor
imul
leave
mov
shlb
pop
pushl
dec
xchg
ljmp
xchg
push
aad
clc
jo
filds
add
sbb
das
dec
scas
cmp
call
push
insl
xorb
int3
ja
mov
mov
decb
or
xchg
jmp
aam
push
lcall
loop
cwtl
fwait
sar
call
testb
std
cmp
daa
dec
rorb
stos
xchg
es
xchg
and
rorl
jle
mov
sbb
xchg
or
xor
fidivs
xor
cmp
incl
push
cmp
inc
mov
sti
push
adc
pop
outsl
mov
xor
sbb
fs
or
incl
or
shl
int3
or
loop
into
mov
das
gs
out
int3
dec
sbbb
and
decl
dec
out
shlb
xor
jbe
lcall
cmpsb
xor
orb
or
ljmp
lods
test
push
decl
into
sar
jbe
js
arpl
nop
adc
out
xchg
mov
xchg
pop
call
ficompl
out
mov
cmp
int
mov
dec
enter
imul
or
cmpsl
repz
pusha
ds
inc
call
jne
clc
int3
out
mov
icebp
das
aad
mov
lods
jecxz
ss
inc
ja
sbb
decl
mov
ret
sub
mov
cmpsl
mov
pop
pusha
lock
sub
iret
xorl
jbe,pn
mov
jle
popf
mov
or
das
cmp
ljmp
inc
cwtl
jle
jmp
cmp
imul
inc
repz
stos
pop
xchg
xchg
je
jno
loopne
ljmp
fsubs
mov
mov
xchg
mov
push
add
push
call
call
push
lret
dec
into
dec
pop
arpl
cld
inc
lcall
sub
xchg
fiadds
jmp
push
mov
adc
sbbb
in
mov
int
mov
and
pushl
xor
cmpb
stc
fldenv
jg
addr16
scas
inc
jb
sbb
decl
dec
mov
adc
in
fidivl
pushf
ret
jno
mov
hlt
decl
jne
dec
xchg
lahf
sbb
call
sub
cmpsb
adc
popf
push
in
decl
jg
lds
hlt
mov
sbbb
jmp
mov
aaa
jo
movsb
int
cmpsl
dec
and
jp
ret
push
fildl
push
sbb
outsl
incl
dec
fcoms
repnz
push
adc
or
cmp
mov
xor
or
andl
sub
notl
fidivrs
lea
pushl
pop
dec
mov
shlb
push
divb
xchg
into
pop
es
pusha
xor
push
clc
and
sub
push
mov
jge
out
inc
sbb
les
cmp
je
xor
fistpl
sub
xchg
pushl
add
cmc
jecxz
adc
test
jnp
movsl
je
push
faddl
clc
call
push
scas
add
stos
ljmp
and
push
bound
cmpsl
mov
mov
mov
xlat
push
lea
icebp
jbe
fiaddl
jae
sub
jbe
or
xor
and
int
pusha
add
adc
fnstenv
push
add
xchg
push
xchg
pop
mov
fistpll
stos
stc
sbb
bound
mov
xchg
pop
push
mov
fcompl
arpl
xchg
xor
jmp
ja
cmp
mov
mov
pop
popa
mov
pop
xchg
dec
xchg
xlat
ret
mov
jg
push
pop
test
cli
loope
xchg
xchg
subb
jmp
or
dec
ret
shll
test
inc
sbb
test
test
rcrb
decl
fs
push
scas
pop
adc
adc
xchg
ds
std
ret
les
push
rol
decl
mov
push
add
out
push
jo
cmpsb
aas
popf
jecxz,pn
std
inc
jo
lock
jg
fisubrs
dec
jno
enter
inc
mov
arpl
nop
repnz
jl
aam
outsl
push
test
jp
cwtl
dec
mov
popf
imul
nop
lods
sub
adc
or
decl
fnstsw
fbstp
mov
mov
cld
mov
push
ficoms
add
ja
in
nop
ret
fbld
jg
jge
ljmp
mov
cmp
lods
out
mov
cmp
fldt
lret
enterw
das
jns
ss
pop
and
jp
loop
and
mov
iret
sarb
dec
mov
jge
call
or
xor
stc
sub
decl
or
mov
xchg
sub
mov
cmp
scas
xchg
sub
cmp
out
pop
xchg
icebp
and
push
jmp
and
dec
ret
addb
cmpsl
hlt
mov
push
fistpll
fstps
push
test
jg
push
neg
aad
fstpl
fwait
bound
push
cmp
call
fs
cli
data16
jecxz
xchg
decl
aaa
mov
lock
jo
mov
pop
aaa
jg
mov
sub
push
mov
mov
push
pop
adc
jne
jl
cmp
inc
jno
cltd
jae
adc
push
or
scas
popa
inc
lock
rcll
lea
jmp
stos
dec
push
int
mov
mov
xor
pop
pop
pop
and
push
mov
xchg
decl
lds
add
mov
xchg
pop
mov
inc
pushf
xor
loope
pop
mov
inc
fcmovb
test
mulb
mov
cwtl
jmp
je
sub
xchg
imul
or
stc
lods
and
pop
mov
or
jnp
or
and
mov
mov
scas
loop
test
jg
aam
jo
out
lahf
or
lret
push
inc
dec
mov
call
loopne
mov
int
or
dec
jg
dec
lock
sbb
and
push
mov
jmp
rol
jp
mov
cmc
fucomi
cmp
push
and
jmp
mov
popf
push
push
dec
cltd
xor
jg
jmp
jnp
cmc
mov
dec
lcall
cmp
decl
test
and
sbbb
loopne
loope
in
or
popf
insb
cmpsl
lock
incl
mov
fcomps
push
mov
movsl
aam
xchg
push
int3
inc
pop
inc
cld
fisttps
dec
lea
xlat
lds
xchg
jcxz
cmpb
pop
sub
inc
les
jne
movsb
ret
jg
lods
add
out
insl
iret
lock
scas
lods
add
popa
mov
lock
mov
inc
ljmp
cwtl
cli
fists
add
xor
adc
in
bound
cmp
enter
aam
mov
dec
je
out
insl
and
push
sbb
aam
outsb
iret
std
lcall
cmc
ret
icebp
test
or
jge
or
daa
pop
sub
mov
call
pop
nop
cmc
cltd
sub
dec
mov
fs
imul
pop
or
jmp
in
out
dec
pop
adc
dec
pop
jns
andl
fwait
cmp
fwait
loopne
or
mov
or
in
test
popa
pop
nop
imulb
repnz
jp
sub
fdivr
call
imul
clc
je
rorl
jne
xchg
cmp
sbb
jns
add
imul
call
addb
mov
jge
inc
jl
sbb
clc
pop
mov
xorb
jg
dec
aad
daa
xor
sbb
cmp
push
and
call
idiv
ljmp
shrl
mov
addb
and
mov
lcall
out
pop
jg
aam
mov
pcmpeqd
fucomp
cmpsl
mov
sbb
pushf
and
in
lret
aad
fistpl
sub
insb
dec
xor
add
imul
push
xor
es
jg
inc
add
popa
lods
dec
cmp
mov
cmp
js
sbb
incl
add
pop
pop
cmp
xchg
or
mov
mov
jb
mov
mov
mov
sub
fisubrl
jbe
push
lcall
dec
scas
aad
lods
cltd
out
xchg
push
or
es
push
sub
stc
xchg
mov
ja
dec
dec
mov
enter
inc
dec
aad
movsl
rorb
or
decl
jl
xchg
ret
xor
mov
jl
arpl
jmp
popa
arpl
jae
mov
andb
cmpsb
cmpsl
sahf
xchg
dec
outsl
call
js
dec
inc
jp
arpl
dec
jge
pop
out
test
incl
daa
cmc
pushf
mov
and
bound
adc
les
pop
stc
in
subb
incl
inc
adc
inc
loopne
mov
in
xor
mov
out
inc
or
jp
cmp
or
mov
jno
incl
cmp
and
loopne
fs
cmpsl
pushf
ret
add
sbb
mov
xchg
xor
inc
lret
loopne
dec
cmc
inc
xor
js
les
jno
and
jae
aaa
cltd
addl
cmpsl
xor
mov
adc
sbb
imul
cwtl
roll
add
dec
in
pushl
push
orb
inc
mov
xchg
sarb
xor
out
add
aad
and
xor
ljmp
insl
mov
imul
mov
sbb
aas
das
in
jle
std
in
pusha
push
mov
idivb
lcall
shrl
pop
push
pop
add
push
data16
mov
lcall
loope
dec
pop
ds
shrl
pop
mov
pop
ret
jmp
mull
enter
incl
insb
sbb
mov
xchg
cmp
cltd
hlt
and
call
add
jp
pop
adc
ret
adc
mov
lahf
xchg
loopne
dec
adc
cmp
push
pop
push
xchg
jb
pusha
ss
adc
sub
fistpl
inc
mov
insl
dec
pop
mov
scas
sti
in
mov
mov
orb
mov
scas
decl
stos
js
and
stos
mov
cld
out
mov
in
sbbb
scas
int3
lock
pop
into
inc
jg
pop
sbb
repnz
inc
lret
cmpsb
mov
push
in
mov
dec
xchg
lret
call
fbld
xchg
push
mov
xchg
lret
cs
pushf
mov
push
jmp
iret
xor
jmp
jns
xchg
pop
aas
mov
jbe
scas
pop
cli
test
mov
lret
cli
or
lcall
out
out
popa
arpl
xor
stos
clc
test
xlat
fnsave
test
dec
incl
cld
call
pop
subl
pusha
mov
inc
jo
and
incl
sub
xchg
insl
push
mov
cltd
push
int3
imul
pushl
mov
sub
adcl
mov
pop
out
rol
lcall
mov
lods
insl
mov
mov
cmp
or
adc
jae
aaa
jmp
hlt
push
jne
and
mov
push
int
and
test
dec
xchg
dec
pop
lret
jmp
mov
stc
iret
mov
push
inc
push
shrb
add
jb
incl
xchg
repz
fs
les
sub
jle
xchg
les
cld
dec
xlat
xor
out
rcl
jmp
cmpl
dec
repz
ljmp
mov
int
mov
or
push
int
decl
scas
sarb
lock
xchg
pop
or
pop
stos
test
cmp
js
sti
rcrl
pushl
cli
shl
test
insb
or
pop
dec
je
mov
sub
rcrb
jnp
jmp
pop
dec
fdivrs
faddl
lock
movsl
and
fwait
or
call
iret
add
in
mov
cli
pop
je
add
shlb
or
sub
pushf
pop
add
ljmp
pushf
mov
xor
je
push
insl
loope
inc
dec
test
xchg
push
xor
lcall
jge
jae
aaa
in
mov
sbb
jne
xchg
test
add
add
imul
cmp
insb
hlt
pushl
add
cld
cmp
mov
inc
lods
and
rcl
in
cmp
cmpsl
and
call
dec
movsl
fmul
cmp
add
xchg
lret
js
sti
int
call
cmp
dec
mov
sbbb
dec
sti
repz
cmp
shll
xlat
jns
sub
adc
icebp
test
mov
xchg
lds
mov
icebp
movsb
insb
movl
xchg
jg
call
xchg
inc
adc
div
je
sti
or
fdiv
loope
test
shl
push
jno
call
inc
dec
add
xor
test
mov
shlb
mov
sbb
popf
xor
ljmp
lock
loopne
sub
pop
fbld
pop
xchg
lcall
mov
in
lds
jmp
mov
mov
fnstcw
push
inc
pushf
adc
fisttpl
dec
ds
add
xchg
sbb
xchg
cmp
ljmp
decl
lret
sub
shl
jo
xor
ret
jbe
pop
pop
outsl
cmp
stos
inc
out
mov
mov
cli
push
jne
pop
lret
jnp
sbbb
adc
repz
pop
push
rcrb
loopne
rcrb
rclb
lcall
xor
testl
mov
add
cwtl
add
aaa
movsb
jbe
cmp
insb
into
insb
inc
sbb
stos
mov
mov
clc
jmp
sti
mov
jl
mov
push
or
jmp
xor
cs
cltd
sbb
fdivp
pop
sar
ljmp
xchg
adc
adc
icebp
xlat
dec
out
outsb
jmp
ljmp
push
sub
incl
mov
xchg
adc
movsl
mov
clc
enter
repnz
jecxz
xlat
lret
rcrb
shlb
testl
addr16
xor
ljmp
mov
arpl
xchg
inc
xor
test
outsl
dec
xchg
jne
jnp
aam
mov
scas
push
cmp
mov
lret
sub
dec
ljmp
in
shl
jb
xchg
mov
mov
adc
dec
xlat
mov
mov
shll
mov
mov
addr16
inc
out
dec
jne
lods
pandn
push
pushf
push
mov
out
and
subl
rorb
cli
shlb
aaa
cld
decl
jbe
xchg
mov
shll
sbb
cmpb
fidivrl
pushl
jno
in
adc
jae
aam
mov
cmp
mov
xchg
push
cltd
sbb
mov
ljmp
out
mov
pop
popa
push
int3
dec
lods
xor
xchg
ret
loope
fisttps
ds
inc
mov
add
push
jmp
mov
in
dec
pop
movsl
pop
mov
decl
je
jmp
xor
or
fcmovbe
cmp
adc
call
sub
icebp
jae
dec
mov
jns
cmc
lcall
mov
pop
add
pushl
or
icebp
adc
test
sub
loop
or
pushl
sbb
cmp
loope
aaa
dec
cmp
cmp
lods
les
cltd
sub
lcall
lret
inc
scas
out
test
loope
fstl
lods
lret
lcall
cmp
nop
pushf
scas
out
ret
xor
dec
mov
repnz
mov
test
out
bound
stc
mov
push
lret
mov
mov
incl
sbb
or
fldenv
add
sub
mov
jno
call
aaa
fidivrs
sti
mov
std
andl
jge
std
stc
inc
loopne
cmp
fdivrs
cmpl
mov
loopne
int
push
cld
inc
xchg
outsl
roll
stos
add
mov
sarl
gs
pshufw
incl
and
movsb
repz
sub
mov
shr
data16
inc
fisubrs
jg
inc
movsb
andl
mov
inc
movsb
xchg
jbe
jmp
stos
in
lock
and
pusha
jbe
lods
mov
mov
pop
mov
pushl
sub
inc
inc
mov
jge
push
out
push
dec
inc
lahf
rcrb
xor
fsub
ds
ljmp
lock
scas
pop
test
jo
arpl
or
mov
mov
cmpsl
frstor
xchg
xchg
jle
pop
pop
mov
xchg
mov
cld
or
fistpll
out
mov
popf
xchg
into
loope
xor
dec
rcr
pop
pop
lds
inc
mov
dec
push
mov
aaa
fcomps
stc
push
hlt
outsl
out
cmp
movsb
std
cmp
mov
and
xchg
cmp
fisttps
add
jno
scas
and
test
das
clc
ljmp
sbb
punpcklbw
gs
fbld
push
dec
inc
sub
inc
das
insl
jle
loop
push
stos
sub
lods
loopne
ficoms
loop
in
xlat
mov
ljmp
mov
out
jg
jp
repz
outsl
xchg
ffree
dec
lea
and
test
pushl
inc
inc
test
mov
in
dec
mov
or
adc
enter
in
jmp
hlt
incl
jae
mov
pop
jg
je
ret
lcall
fwait
dec
mov
cmpsb
nop
mov
out
sbb
iret
mov
xlat
jbe
stos
add
fcomip
add
push
lret
icebp
jp
xor
scas
imul
pop
fstpt
mov
dec
cmc
ret
sbb
decl
ror
cmpsb
and
mov
mov
or
adc
int
xchg
in
xlat
push
jle
aas
sub
xor
inc
mov
push
fldenv
ret
bound
and
lcall
sub
jb
scas
jle
jb
pop
ss
adc
add
idivl
lcall
sub
lods
adc
icebp
or
pop
cmpsb
inc
leave
enter
int
mov
jno
js
je
mov
mov
loope
xchg
test
xor
ljmp
ret
jp
and
xchg
loop
lahf
jnp
lahf
mov
cwtl
incl
dec
cmp
jns
into
sub
in
mov
xor
loop
hlt
ljmp
xchg
mov
pushf
dec
inc
sarb
xchg
cmpl
jg
lcall
mov
imul
cs
and
pop
shll
std
decl
xor
repz
mov
inc
xchg
xchg
lods
jbe
xchg
fcomp
push
xchg
aaa
pop
enter
call
sub
jg
push
xor
xor
insl
shlb
aad
iret
jecxz
pop
jbe
ljmp
decl
jl
outsl
mov
adc
lea
movsb
xorl
nop
push
and
mov
dec
add
adc
js
mov
xchg
xchg
add
dec
jg
pop
repnz
cmp
dec
push
xor
or
iret
cmp
stos
jle
mov
imul
test
cld
xchg
inc
call
push
lcall
adc
mov
out
repz
test
pop
jo
mov
jg
fldt
add
lcall
sub
sub
clc
std
xchg
inc
das
mov
mov
call
xchg
jnp
mov
loopne
dec
push
add
decl
ja
pop
mov
xchg
cmc
inc
jnp
cmp
lock
fwait
scas
push
ljmp
mov
lods
adc
xchg
mov
scas
mov
xchg
cmp
mov
mov
add
pop
adc
push
ret
adc
sbb
fcomip
gs
int3
add
dec
imul
xchg
test
decl
fwait
jae
imul
lods
adc
inc
cltd
popf
scas
sbb
negb
pop
push
pop
loop
das
ret
leave
and
adc
xor
add
addb
and
es
clc
pusha
repz
jnp
repnz
shlb
mov
pushl
outsb
stos
in
mov
push
lahf
jns
movsb
sbb
decl
sbb
mov
lret
xor
jmp
dec
xchg
cmpsl
and
xor
lock
std
or
inc
lock
jbe
cwtl
insl
inc
stc
shrb
fnstsw
mov
add
fs
daa
pushl
int3
mov
std
clc
neg
imul
add
mov
clc
sbb
and
lcall
out
mov
xor
pop
cmp
jb
imul
cltd
cwtl
outsl
sub
xchg
incl
and
mov
or
cli
adcb
sbb
lcall
fdivrs
fbld
fsts
cli
movsl
xor
sbb
dec
pop
jbe
call
ss
pushf
addl
ret
lock
mov
cmp
call
mov
inc
push
xorl
loopne
add
inc
lret
sarl
decl
xor
xorb
cmp
push
push
xchg
mov
mov
pop
insl
sub
scas
scas
dec
xor
mov
into
pop
nop
xchg
into
fisubl
es
xor
dec
jge
leave
adc
outsb
sar
pushl
xchg
addb
dec
add
sbb
push
sbb
ss
scas
cmp
jg
cmp
push
pop
push
pop
or
jge
stc
push
or
sbb
mov
je
addr16
jg
js
adc
lods
fsub
stos
xchg
pop
or
jl
shll
cmp
mov
push
call
call
cmp
out
push
mov
std
or
dec
cmp
test
push
mov
ljmp
adc
sti
cmpsb
cmpsl
daa
std
ret
test
jp
fcomp
xor
lcall
add
shrl
call
lcall
lds
sub
jmp
test
and
jnp
adc
cmpsl
rol
jns
cmp
jmp
mov
mov
mov
jns
jp
pop
lock
out
inc
aad
sub
shrb
fsubrp
sub
mov
sub
sub
shrl
mov
popf
adc
mov
in
push
insl
push
ljmp
hlt
xchg
lret
loopne
mov
or
add
inc
imul
std
xchg
leave
testb
ljmp
subb
mov
aad
lods
cmp
decl
xor
movsb
imul
pop
lret
outsl
leave
mov
and
fnstenv
das
cmp
in
jl
xor
lret
pusha
pop
cli
sub
out
nop
nop
pop
hlt
push
icebp
call
mov
aad
addl
dec
in
fwait
mov
mov
fidivs
lcall
leave
aad
jbe
jge
push
inc
cmpsl
sbb
jnp
adc
jp
cmpsl
ret
mov
mov
sahf
pop
dec
add
inc
outsl
cmc
faddl
out
gs
int
mov
jb
aaa
push
lret
mov
lock
clc
nop
insb
jnp
jns
pop
call
lahf
xor
dec
sbb
xchg
sub
in
add
xchg
inc
fs
pop
push
imul
decl
cltd
scas
rorb
sbb
jno
mov
xor
cmp
call
fcoml
mov
adc
ss
sahf
sbb
mov
std
lret
xchg
cmp
call
sbb
fadd
out
leave
std
rcrb
pusha
cmp
stc
nop
fdivrs
dec
mov
sar
jg
arpl
fisttps
mov
sarb
cmp
xor
lahf
and
mov
xchg
mov
fildll
sub
push
notl
scas
adc
jnp
add
ja
notl
push
pop
cs
cli
fildll
xlat
ja
push
xchg
cmp
notl
inc
or
rcl
jmp
inc
xchg
or
push
lret
insb
adc
or
jp
inc
movsb
lahf
inc
int
dec
lods
jb
outsl
cli
jg
cwtl
decl
dec
jle
jmp
cli
sub
mov
mov
cmpsb
jbe
ljmp
int
xchg
mov
in
sbb
pop
cmp
mov
xor
incl
push
fldcw
nop
das
in
outsl
mov
inc
adc
movsb
cmp
sub
decl
std
je
xor
mov
aaa
das
mov
push
lea
mov
aad
inc
fwait
jg
dec
mov
loop
mov
dec
stos
cmp
inc
mov
arpl
mov
gs
jns
push
in
sbb
and
cmpl
jae
das
mov
int
and
inc
sarb
push
into
add
subb
cmp
mov
or
mov
loopne
fdivrl
fldcw
add
jecxz
std
jg
test
pusha
adc
pop
aam
jmp
mov
pushl
pop
inc
sbb
cmp
in
mov
outsb
jne
sub
ret
decl
sbb
std
insb
clc
movsb
in
into
les
decl
push
imul
sub
movsb
mov
push
sub
addr16
jg
ljmp
fdivrp
cmpsl
repz
ljmp
jecxz
jne
dec
sbb
pop
push
and
gs
inc
insl
adc
in
pop
and
sub
xor
adc
and
decl
call
cmc
addr16
outsb
mov
mov
and
mov
das
or
cmc
xchg
shl
call
cli
nop
jg
mov
jecxz
popaw
mov
scas
cli
jmp
xor
pop
loop
into
cwtl
sti
mov
popf
imul
inc
push
xor
pushl
fbstp
jmp
adc
bound
dec
and
lcall
or
dec
std
movsb
dec
dec
cmpl
call
cld
decl
negl
sti
fwait
cmc
and
jp
faddl
xor
pop
loop
or
sbb
push
ljmp
add
fildl
sbbb
pop
sbb
loopne
imul
cwtl
ss
call
mov
pop
push
ret
inc
inc
mov
insb
or
in
jno
mov
pop
mov
int3
cmp
or
xchg
push
repnz
dec
insl
test
nop
adc
popf
jge
jmp
dec
jne
mov
outsb
cmc
sub
out
xchg
or
iret
adcb
or
pushl
cld
jmp
adc
adcl
lahf
mov
mov
fistpl
pop
jmp
sub
je
mov
sub
inc
imul
cmpsl
hlt
out
fdivrl
sbb
xchg
mov
mov
fildll
adc
lret
fdivrs
jle
push
fisubrl
mov
call
pop
insb
call
and
cmpsl
mov
jns
jecxz
adcl
sbb
jmp
pop
or
ja
in
xor
push
loop
rorb
adcb
inc
mov
daa
ret
mov
cmp
or
mov
pop
lods
jle
sub
sub
mov
pop
pop
inc
adc
add
decl
enter
cli
push
into
mov
xchg
inc
and
and
sti
scas
mov
add
fisttps
cltd
rcl
frstor
jb
ss
cmp
or
incl
dec
mov
mov
fidivl
pop
aas
loope
cmp
dec
popa
int
inc
shll
add
dec
hlt
xchg
test
mov
push
xchg
inc
enter
sub
popf
mov
push
mov
and
and
decl
hlt
xor
cmp
pushl
and
dec
ljmp
mov
lret
lods
inc
cmp
stc
jmp
cli
add
clc
pop
decl
fdiv
je
out
xor
lret
das
jb
pop
loope
call
loopne
mov
pop
jno
pop
jbe
fistps
jp
outsb
sbb
imul
mov
mov
inc
adc
int3
sbbl
inc
movsb
jae
mov
sub
sub
leave
stc
popf
out
clc
call
pop
aad
xchg
aam
int
jbe
jns
hlt
and
and
movsb
movsb
out
addl
lcall
mov
pop
gs
das
inc
das
and
adc
push
jmp
add
iret
pop
mov
and
shld
cmp
imul
call
sahf
out
pop
mov
jns
xor
cmp
dec
or
add
dec
xchg
cs
stc
cmc
test
dec
out
lret
xor
lret
jo
sub
sbb
shr
push
sub
leave
cmp
jns
rclb
push
cs
ljmp
decl
mov
adc
mov
inc
mov
cmpsb
popf
lret
cli
xchg
push
ljmp
push
dec
stos
movsb
jo
outsl
rorb
cld
ss
insb
es
jb
movb
lcall
dec
push
and
add
dec
shl
leave
vmovdqu
leave
xor
push
stc
int
ljmp
incl
inc
jmp
mov
addr16
dec
test
jo
stos
outsl
inc
xchg
add
call
mov
int3
sub
es
sub
dec
mov
push
add
lcall
ljmp
sub
push
add
dec
test
shrb
cmp
mov
out
lcall
dec
addr16
mov
adc
jbe
and
out
push
cltd
fisubrs
xchg
out
test
out
int3
test
cld
mov
stos
ret
xor
icebp
out
xchg
popf
andb
adc
test
in
imul
mov
sbb
das
fidivl
addr16
mov
mov
mov
call
push
imul
sbb
pop
popf
loopne
jle
or
cwtl
in
fists
mov
xor
int3
sub
out
inc
jae
adc
mov
pushf
pop
push
js
sub
jg
fildll
loope
xor
lcall
stos
or
std
icebp
xor
movsl
adc
lods
add
pushl
push
insl
adc
and
add
add
inc
aas
cltd
mov
lcall
mov
mov
ret
or
inc
loop
dec
sahf
push
inc
std
lret
cmpsb
stos
sbb
in
dec
mov
clc
mov
pop
pop
aad
mov
jb
call
cmp
mov
in
or
fsub
or
adc
fyl2xp1
clc
mov
outsb
pop
xchg
lcall
sbbb
sub
inc
movsl
pop
sbb
fmulp
cmpsl
jge
pushl
daa
mov
xor
jno
mov
daa
push
fnstsw
adc
sub
incl
pop
jg
dec
notb
mov
mov
out
xor
repnz
cmp
pushl
nop
sbb
hlt
in
cltd
add
pop
add
mov
inc
pushl
in
mov
insl
out
dec
ret
in
data16
mov
sbb
dec
pop
inc
rcrb
pop
incl
add
clc
push
or
in
das
and
in
xor
fistl
cmc
xchg
arpl
mov
jmp
push
cmp
leave
in
stos
pushl
inc
sub
mov
xor
pop
outsl
jnp
mov
or
jno
lock
and
sbb
addr16
incl
or
stos
mov
sbb
movl
shrb
cmpl
jmp
dec
dec
and
push
add
dec
push
jl
imul
incl
mov
or
icebp
mov
bnd
mov
ret
test
sarl
dec
mov
mov
xchg
xor
pop
lret
sahf
enter
xorb
cmp
mov
incl
lds
push
loopne
mulb
dec
pop
aaa
and
rolb
enter
sub
mov
adc
jg
inc
or
lret
rorl
negl
cmc
jge
xor
repnz
dec
iret
test
pop
jbe
jmp
adc
orb
pop
int3
cmp
sbb
ret
inc
pop
add
dec
xlat
lahf
mov
cmpsb
xchg
xor
xchg
out
jecxz
clc
dec
cmp
int
pop
adc
pop
shr
stos
mov
or
dec
cmc
sub
adc
imul
mov
jl
mov
cmp
cld
insb
sub
mov
mov
ljmp
enter
xchg
adc
jnp
movsb
fistpl
pop
push
xor
adc
xor
or
arpl
push
xchg
pop
call
mov
frstpm(287
fs
call
out
nop
adc
xlat
or
leave
fisttps
push
out
mov
pop
cmp
aam
and
pop
call
cmp
lahf
call
or
cmpb
in
gs
mov
mov
out
mov
out
sub
cmpb
int
jo
ret
pop
incl
dec
push
mov
jp
add
ret
cmp
mov
movsl
jmp
pop
mov
xchg
xchg
std
dec
jb
or
lods
xor
mov
mov
jo
inc
add
jmp
js
inc
lea
adc
bound
add
or
sti
hlt
inc
dec
hlt
xchg
pushf
ljmp
inc
sti
push
sub
mov
xchg
dec
mov
sbb
jmp
pop
movsl
mov
ljmp
lcall
lahf
sbb
rcr
xchg
movsb
adc
jns
lods
insl
subb
cmpsb
aas
mov
popa
and
lcall
ja
sti
gs
call
add
repnz
sub
dec
push
ljmp
mov
lock
push
negb
aad
popa
out
cmc
out
cmp
lcall
lret
cltd
adc
fimuls
xor
dec
test
lea
pop
add
clc
arpl
in
cwtl
iret
dec
fisttps
inc
cltd
int3
pop
cmp
daa
ljmp
out
add
dec
mov
fstpl
pushl
out
shl
and
jb
in
sbb
xor
mov
mov
jmp
xlat
mov
ret
hlt
test
xchg
cmp
adcb
mov
inc
outsb
dec
insl
pop
push
push
push
mov
pop
in
enter
push
daa
jle
incl
ficomps
mov
icebp
in
enter
cmp
dec
out
and
add
loopne
inc
ljmp
sbb
cmp
cmp
mov
inc
insl
test
pop
jo
dec
in
and
lret
lcall
repnz
sub
mov
je
std
cmp
push
sti
pushl
push
sahf
outsb
stos
loope
pop
xor
pop
mov
sub
jg
bound
data16
jg
mov
sbb
lret
mov
cld
ljmp
enter
cmp
incl
mov
js
push
or
gs
jns
test
pusha
stos
in
ss
scas
out
jnp
push
imul
out
pop
jnp
movsb
repz
cmp
mov
inc
cmp
je
dec
push
in
adc
xor
sub
mov
lcall
es
push
dec
sub
lds
daa
aaa
inc
decl
jno
ljmp
idivl
mov
cli
add
dec
inc
cmp
sub
sbb
fistps
pop
jl
fwait
jmp
push
int3
mov
out
dec
das
inc
adc
incl
lret
sbb
jno
rorb
mulb
ja
int3
fnstcw
jo
scas
adc
lahf
pop
decl
dec
call
or
inc
out
xchg
into
rcll
es
sub
or
ljmp
clc
and
sub
sub
cs
mov
mov
mov
movswl
mov
ficoms
idivb
divb
jge
xchg
cltd
mov
jae
cmp
xchg
push
imul
xchg
jne
dec
cmp
xor
aam
inc
mov
jle
lcall
movsb
out
mov
cmc
ljmp
xor
fidivs
inc
pop
sbb
add
shr
or
pop
gs
loop
fstpt
mov
mov
mov
jle
scas
inc
adc
push
arpl
push
ljmp
call
inc
add
fsubrs
adc
imul
mov
cmp
into
adc
lods
mov
js
nop
add
cwtl
xchg
in
loop
jmp
pop
jo
push
jp
cmp
test
dec
mov
push
inc
push
xlat
and
daa
popa
stos
scas
or
mov
mov
sbb
or
aam
icebp
ljmp
sub
xchg
or
testb
push
in
inc
cmp
das
cmpsb
jnp
push
and
pushl
stos
dec
dec
stos
nop
pop
and
add
xchg
sbbl
call
adc
pop
sbb
enter
and
cmp
mov
mov
ds
repnz
test
or
dec
jmp
ljmp
inc
mov
ljmp
inc
pop
addr16
in
mov
incl
inc
lahf
int
sub
jb
leave
sbb
mov
sub
sbb
fs
push
add
dec
je
out
mov
fdivs
loop
mov
cli
iret
cmp
sti
out
mov
pop
loopne
jmp
jne
cwtl
and
rorb
in
out
lahf
ljmp
pushl
jg
stos
xchg
xchg
xchg
sub
push
aam
lret
pop
into
xor
mov
insb
or
clc
mov
test
lret
lods
and
sbb
xchg
xchg
adc
std
ljmp
xor
adc
rorb
sar
incl
xchg
stc
mov
cmpsl
pop
cmp
mov
movb
cmc
pop
pop
dec
gs
aaa
cmp
call
mov
imul
bound
xlat
mov
xor
movsl
pop
data16
pushl
jnp
jge
push
sub
and
inc
dec
inc
sahf
cltd
pop
shlb
lcall
lcall
pop
nop
loopne
les
pop
test
out
mov
lret
push
cltd
repnz
std
dec
cld
xchg
lret
cld
mov
arpl
sbb
push
xchg
and
sbb
jo
jmp
and
mov
out
add
inc
imul
test
adc
fisubl
dec
mov
aad
int3
out
and
ljmp
shlb
and
jmp
cmp
pop
shr
out
repnz
mov
mov
adc
inc
adc
pop
push
xor
and
dec
mov
pushl
loope
dec
into
jae
pop
xchg
push
std
and
call
mov
int3
mov
insb
sub
cmpsl
jnp
rolb
xchg
pop
cmp
aam
and
dec
pop
and
ljmp
pop
add
or
sub
or
or
mov
call
jg
das
js
ds
mov
inc
or
sub
jne
push
sti
jns
gs
add
clc
call
mov
xor
cmp
mov
stos
sbb
pop
xchg
shll
mov
jmp
ljmp
xor
push
cmpsb
inc
aad
shll
pushf
outsb
sbb
mov
mov
pop
cli
jl
fildl
jbe
and
or
shr
and
push
xchg
ljmp
fisttps
xor
xlat
insb
aam
test
jns
insb
sbb
lods
or
lcall
add
push
sbbb
add
dec
and
jle
xchg
xchg
stos
mov
sti
adc
roll
fcmovu
lcall
cmpsb
jmp
scas
insl
aaa
pop
addl
aad
add
mov
xchg
ljmp
stos
mov
cmp
jno
add
aas
in
adc
subb
jmp
call
xlat
pushf
repnz
push
sbb
mov
xchg
mov
add
cmp
jg
incl
sbb
fdivrp
push
jp
or
out
lock
in
ljmp
cmpsb
repz
imul
imulb
add
rol
clc
sub
outsl
es
decl
stos
stc
jp
ljmp
mov
movsb
push
mulb
ljmp
je
dec
push
fs
push
pusha
scas
out
or
test
lock
mov
or
jl
mov
loop
fs
xchg
pmulhuw
ja
andb
push
loopne
mov
sbb
mov
mov
mov
fbstp
jbe
xchg
pusha
inc
cwtl
shll
adc
jle
ljmp
pop
shrb
or
out
int3
sti
ja
xor
push
subb
xchg
mov
jg
jg
ret
or
pop
fcomi
fwait
xchg
or
stos
mov
test
scas
test
sub
loop
aam
xor
sub
xlat
lahf
into
or
fnsave
fxch
mov
pushl
lahf
lahf
pop
dec
xor
mov
mov
ss
add
xor
cld
pop
adc
scas
mov
xlat
cli
sub
inc
or
inc
test
ljmp
and
cld
pop
xor
lret
stc
xor
std
outsl
jne
outsl
clc
incl
push
rcrl
jae
daa
jae
jmp
adc
sub
fwait
icebp
mov
pop
insb
arpl
mov
fucomip
inc
jb
es
stos
lret
pop
push
fs
dec
out
les
es
inc
decl
addr16
add
add
je
sub
jl
leave
mov
cs
lods
xchg
jmp
incl
cld
call
xchg
mull
out
inc
cmp
pushf
mov
pusha
jp
out
daa
lods
scas
cmp
pop
aad
imul
jo
inc
cmpsl
cmc
into
ljmp
push
xchg
sti
mov
xor
out
cmp
cli
testl
or
movsl
mov
pushl
int
inc
mov
sub
stc
xchg
fcoml
sub
mov
lret
std
push
add
mov
fndisi(8087
setb
stos
leave
pop
test
jbe
gs
mov
cmpl
lcall
mov
mov
arpl
out
insb
mov
iret
xchg
and
insb
cmp
clc
add
xor
lock
cmpsl
jb
push
push
mov
lret
mov
ss
push
popa
mov
dec
pushf
and
lea
das
mov
jmp
xor
jo
decb
cmp
add
xchg
rorb
insl
mov
nop
push
cmovg
ljmp
clc
jge
cmpsb
mov
fdivrs
lods
and
lods
mov
movsl
sbb
call
pushf
ficompl
and
push
cmpb
add
add
or
push
daa
adc
lret
add
push
or
or
sti
push
pop
pushfw
mov
imul
adc
push
push
ret
push
cmpsl
adc
xor
faddl
subb
loope
pushl
test
test
pop
dec
xchg
xor
sbb
fcmovbe
mov
lods
sbb
pushl
cmp
pop
pop
rorl
fmul
shlb
shr
aaa
sub
pushl
out
movsb
adc
leave
sub
xchg
sub
pop
or
arpl
push
in
in
jecxz
mov
fistl
mov
ljmp
inc
into
das
cmp
or
or
sub
dec
test
sbb
test
jmp
fwait
adc
mov
test
test
shl
iret
push
sbb
xchg
sbb
decl
and
loop
lods
or
sub
aad
mov
xor
mov
mov
incl
rorl
sub
ss
jecxz
jb
xor
or
mov
jo
fiadds
mov
jge
ljmp
roll
arpl
mov
incl
int3
pusha
lea
sub
repnz
inc
ficomps
rcrb
push
mov
mov
incl
or
sti
xchg
enter
xchg
into
pop
imul
daa
negb
ss
lcall
inc
aad
into
cmc
xor
push
loopne
push
pop
add
fcoms
pop
sbb
test
mov
jmp
cmp
mov
mov
xchg
adc
pop
enter
ljmp
mov
mov
popa
shlb
jle
xchg
fildll
fists
scas
sbb
xchg
andl
cmp
inc
std
mov
xor
mov
incl
fnstsw
lret
sbb
fst
fsts
out
pop
cmpsb
loope
xlat
cmpsb
inc
push
xchg
scas
cld
add
jecxz
mov
xchg
inc
lret
arpl
in
lahf
jbe
push
stos
mov
mov
test
hlt
jmp
incl
pop
shrb
imul
pop
jp
lds
push
int3
mov
jle
loope
jge
jge
push
enter
loopne
outsl
orb
sbb
sbb
fdivs
mov
in
add
sbb
mov
adc
sbb
aad
push
gs
aas
xchg
sub
or
mov
sbb
hlt
loope
outsl
mov
pushl
fmull
fisubrl
adc
lock
and
call
adc
int
pusha
int
sub
fwait
push
sub
mov
pusha
rcl
mov
js
into
push
popf
sti
mov
jmp
push
popf
or
add
imul
xchg
pop
lcall
xchg
or
sbb
xchg
push
cmc
outsb
xor
cmpsb
lahf
add
adc
mov
data16
in
pop
das
dec
pop
cmp
cmpsl
xor
jo
inc
adc
iret
adc
ds
lea
sti
call
mov
push
test
mov
push
cmp
mov
mov
mov
and
ja
sbb
incl
jg
dec
fiaddl
ljmp
mov
push
sbb
call
jbe
loopne
mov
sbbb
test
sbb
adc
int
pop
and
push
xchg
mov
push
outsb
in
sahf
adc
mov
jg
cmc
mov
out
int3
int
and
jp
lcall
pop
icebp
lcall
jns
cltd
inc
fwait
outsb
or
pop
lea
mov
cmp
or
and
adc
jg
test
push
adc
ficomps
leave
aam
stos
xor
cmpsl
sub
jp
lods
enter
jmp
mov
and
cwtl
cwtl
jno
mov
clc
out
mov
clc
sahf
scas
mov
ljmp
lods
imul
js
cmp
sbb
call
push
jnp
pop
inc
shll
movsl
dec
les
xor
and
decl
test
xor
add
cltd
inc
push
and
dec
and
jg
enter
incl
clc
ret
stos
je
mov
cmc
scas
cmpl
push
leave
jns
jno
mov
mov
inc
jns
mov
ljmp
stc
out
dec
jg
pop
jo
adc
lcall
pop
mov
pop
cli
pop
rclb
dec
hlt
pop
cmp
pop
adc
mov
js
sarl
adc
xor
jnp
sub
icebp
sub
pushl
dec
test
in
sbb
or
lcall
loop
out
fmuls
adc
jg
jmp
mov
imul
cltd
inc
fmuls
ret
jmp
aas
cltd
iret
mov
or
jmp
inc
cmp
add
orl
loope
js
inc
popa
in
iret
fstpl
out
iret
mov
lahf
and
enter
jp
dec
sub
dec
add
xor
mov
sbb
jns
stc
or
jnp
cs
and
sbbb
fnstenv
icebp
xchg
hlt
out
add
mov
mov
cmp
cmpsb
cmpsl
sbb
xlat
mov
pushl
enter
rcll
jl
lds
call
orl
dec
pop
push
jp
dec
rcll
clc
call
mov
cld
jg
mov
cli
jmp
test
jbe
ljmp
imul
loope
sbb
rol
mov
orb
out
dec
and
xchg
inc
out
ss
in
cmp
fcomi
jg
int
jp
into
or
leave
mov
push
mov
je
into
call
jmp
ljmp
xor
or
xchg
insl
xchg
jnp
shl
mov
push
pop
bound
std
jg
xor
mov
je
enter
sarb
pop
sbb
mov
mov
cmp
mov
insb
idivb
sbb
dec
sub
test
std
incl
jmp
mov
lock
nop
in
scas
sti
xor
out
mov
jecxz
fiaddl
jg
or
mov
je
adc
rclb
cmp
into
mov
sub
push
mov
ljmp
out
call
cmpsl
inc
call
hlt
jbe
pop
lds
ds
pop
in
inc
mov
or
ljmp
xchg
pcmpgtd
fldcw
mov
testb
push
or
pop
nop
xchg
mov
enter
jo
incb
and
jmp
pop
push
or
cmpxchg
sbb
mov
ss
insl
jmp
mov
mov
cmp
sub
xchg
cmp
out
add
mov
std
sti
sbb
jp
aad
decb
push
mov
mov
fidivs
adc
ljmp
adc
fisubrs
mov
ja
ds
stos
call
mov
mov
pop
leave
subb
call
std
ljmp
aad
dec
dec
fisttpl
fbld
push
fisubl
or
imul
and
jbe
inc
cmp
cli
mov
jge
call
sub
mov
pop
mov
ret
pop
push
imul
mov
sbb
inc
fisubrl
sub
ljmp
jl
mov
xchg
test
pop
scas
pop
outsb
xor
pop
dec
or
ljmp
push
in
dec
fs
aam
arpl
hlt
pop
in
and
enter
fstl
mov
fcoml
mov
cmovge
push
lods
in
lret
sbb
lcall
xor
pop
rcll
mov
or
add
xchg
push
fcmovbe
ja
pop
jge
jmp
rcrb
adc
lods
stos
inc
arpl
in
sti
mov
shrl
mov
sub
mov
incl
sub
aam
fadds
lret
xchg
std
xchg
mov
scas
test
add
loop
jmp
mov
mov
cmp
icebp
ss
pushf
in
pop
mov
xchg
shrb
jmp
and
push
and
inc
jnp
popl
mov
clc
loope
cwtl
xchg
pop
ret
repz
mov
incl
in
push
xchg
adc
lret
pop
mov
inc
mov
xor
and
ljmp
push
mov
fistpll
mov
mov
pop
lock
bound
sub
loope
pop
xchg
loope
fistpl
daa
out
xor
jle
lcall
pop
shlb
jp
pop
mov
jg
jmp
cmp
fildll
add
add
pushl
xchg
daa
insl
subl
sbb
pusha
dec
adc
mov
mov
cmp
push
in
nop
cmc
fcomip
decl
adc
pop
test
add
push
addr16
clc
pop
add
pop
pop
daa
es
inc
mov
dec
lock
jmp
lret
push
lock
xchg
cmp
inc
enter
jle
push
or
xchg
dec
lcall
lcall
imul
sbb
mov
les
fwait
jle
call
gs
cs
add
enter
rcl
pop
call
popf
std
jl
fisubrs
mov
aam
mov
lret
fildll
jbe
stos
add
jne
push
es
pushf
cmp
or
or
inc
ja
lret
lods
jae
lds
loope
cmp
lcall
jb
mov
popf
aaa
pop
scas
or
xor
orl
fcmovb
jmp
push
stos
sbb
push
cmp
sub
inc
mov
push
out
mov
jg
mov
in
pushf
sub
out
push
scas
xor
dec
popa
adc
mov
popf
push
push
das
and
ds
pop
into
pop
fsubp
adc
test
inc
mov
jmp
push
nop
lods
out
clc
inc
pusha
fldl
jb
cmc
call
cltd
iret
outsl
es
scas
int
xor
sub
pop
cmp
aas
xor
mov
jle
loop
out
dec
outsl
loope
pop
imul
mov
das
addb
mov
xchg
pusha
popa
mov
je
lcall
das
leave
pushf
cld
mov
addr16
adcb
add
inc
out
xor
and
sti
je
lcall
or
js
push
stos
mov
into
sbbl
add
decl
loopne
pop
add
hlt
outsl
xchg
dec
xchg
outsb
dec
add
js
pop
inc
xchg
decl
nop
inc
aas
jecxz
fcoms
je
sarl
cwtl
insl
mov
push
aas
cmp
push
and
imul
xor
das
sub
mov
sub
icebp
xlat
mov
mov
and
fnstcw
ljmp
nop
cmp
cmp
aad
jmp
mov
xchg
loopne
pushl
jl
icebp
push
pop
pop
ds
int
into
sti
sub
daa
pusha
and
cltd
call
call
test
add
repnz
push
push
inc
adc
push
xchg
cmc
sub
lret
fcomip
in
js
jmp
dec
or
mov
clc
fs
adc
insb
stos
dec
in
mov
mov
cmpb
leave
or
push
popf
cmpsb
and
add
lcall
inc
xor
sub
and
jge
notb
jne
sbb
pop
sahf
mov
movsb
inc
inc
push
inc
xchg
adc
lcall
ds
xor
xor
inc
mov
push
pop
fsts
jno
push
push
pop
lock
dec
cltd
xorb
xor
mov
fxch
fwait
mov
lret
mov
cmp
call
xchg
adc
cmc
jae
aad
mov
fstl
add
cs
jg
mov
pop
cmpsl
pop
jle
bound
pop
or
das
or
xor
jmp
push
mov
fpatan
or
adc
testb
ljmp
sbb
in
jmp
sbb
xorb
push
and
sti
fists
fdivrl
aam
add
cmp
pushl
icebp
es
sbb
in
je
ss
popa
mov
xor
decl
or
mov
xadd
sbb
push
push
push
lcall
bnd
dec
idiv
decl
and
sub
and
andl
hlt
adc
lcall
jmp
add
cltd
jl
int
sub
jg
mov
jne
push
xchg
lcall
or
test
xchg
add
pop
mov
movsl
mov
hlt
sub
jmp
dec
xor
lret
lret
push
adc
pop
out
int
sbb
jp
fsubrs
push
jle
ljmp
cli
inc
daa
sbb
lret
cld
les
cltd
movsl
pop
lea
xchg
dec
in
mov
mov
jmp
pop
adc
xchg
sti
ds
pop
icebp
cmpsb
push
mov
or
rcrb
dec
push
lcall
sub
es
jb
hlt
mov
lds
es
clc
leave
icebp
add
jns
lcall
out
subb
insl
add
idivl
in
mov
inc
mov
add
ljmp
lods
test
cmpl
in
pushf
ret
insb
inc
sbb
jbe
div
in
lcall
cmp
sahf
aad
test
push
adc
push
mov
and
push
call
ljmp
sbb
subb
sbb
mov
sub
pushf
fimuls
ss
decl
xor
adcb
sub
xor
icebp
xchg
pushl
incb
or
lcall
pop
adc
push
and
mov
ljmp
repz
sbb
jns
aas
xlat
pop
add
inc
imul
fisubrs
inc
push
or
pushf
ljmp
dec
inc
and
adcb
or
jecxz
xchg
push
sarl
decl
gs
mov
cmpsb
dec
mov
cmpsb
loopne
jg
mov
push
mov
and
dec
sbb
mov
repnz
cmp
lret
add
mov
nop
adc
dec
add
xor
xchg
dec
pop
push
mov
std
sbb
scas
xor
push
mov
push
ljmp
js
push
enter
cmpl
out
and
jp
jne,pt
insb
xchg
call
fs
in
cld
adc
lret
pop
mov
outsl
mov
adc
decl
mov
xor
dec
leave
cwtl
adc
ret
mov
sub
ljmp
jnp
ret
movsl
xchg
sbb
xor
jo
adc
xchg
dec
pushf
mov
lcall
lcall
rol
pop
nop
pop
test
rcll
push
and
mov
ds
jg
popa
sbb
in
add
cli
sub
clc
jge
popf
std
mov
fldln2
data16
cld
or
jne
lret
cmp
xor
xor
or
xchg
fistpll
lds
inc
adc
or
out
dec
lods
xchg
outsb
or
mov
shrl
insb
iret
in
in
jmp
mov
pop
or
push
mov
nop
push
xchg
clc
xlat
pop
es
fimull
cmpsl
sbb
rolb
sbb
mov
stos
pop
fs
inc
adc
rcrb
adc
jb
pop
aaa
add
cmp
and
fidivs
lret
jo
mov
and
or
push
fs
leave
inc
inc
dec
sbb
mov
mov
aas
into
ljmp
mov
lock
add
test
and
int3
lret
xor
mov
and
decl
push
or
fcomps
cmpsl
test
add
xchg
lods
or
lcall
inc
int
sbb
sub
lret
xchg
repz
xchg
jb
popa
aad
push
and
mov
dec
jge
test
sbb
dec
mov
push
cld
add
roll
inc
mov
cmp
lcall
dec
mov
push
bound
test
xor
mov
mov
adc
inc
or
scas
incl
adc
mov
push
cmp
mov
nop
and
clc
pushl
insb
mov
dec
nop
sti
push
adc
cmp
sub
mov
mov
jmp
add
scas
jge
adc
out
hlt
dec
pop
xor
mov
loop
repnz
adcb
cld
cmpsl
xchg
ja
test
jle
sub
pushl
mov
mov
mov
int3
out
cmpsl
popa
stos
adc
pop
pushf
dec
in
cmp
imul
incl
sbb
and
cmp
mov
outsb
int
dec
js
lcall
mov
dec
out
jne
push
ds
int
mov
lods
loope
xchg
mov
decl
lcall
dec
add
add
incl
mov
mov
xor
aad
mov
shr
sub
and
ficompl
pop
sti
xor
add
in
and
xor
ret
pop
nop
cmp
push
out
cli
jne
inc
or
mov
hlt
ss
sarl
push
jmp
inc
call
sub
mov
pop
xlat
mov
ss
mov
das
int3
lods
jno
pop
aaa
cli
mov
push
mov
std
lcall
lahf
test
arpl
test
scas
dec
push
fidivrs
lret
stos
inc
call
cmp
sub
or
das
sar
mov
loope
push
jae
pop
mov
pop
pushf
lcall
out
mov
insb
testb
mov
jnp
imul
sbb
rorb
icebp
mov
rcrl
incl
outsb
not
mov
push
ret
mov
xor
mov
dec
rorl
call
mov
test
lret
adc
insb
sti
cmpsb
fsubrs
and
fmull
jae
xlat
repz
cs
mov
test
lods
jle
ficoml
ljmp
xchg
mov
out
mov
int3
movsb
cmp
fs
pop
cmc
mov
pop
outsl
and
aas
inc
nop
mov
cld
mov
add
xor
int
dec
popw
cli
sub
mov
int3
sub
xor
rcll
lcall
lcall
cmp
adc
test
insl
mov
movb
inc
jbe
aaa
sbb
pop
or
push
repnz
push
lcall
xchg
int
pop
push
insb
push
xchg
lret
and
sub
adc
xor
mov
jne
lds
dec
sbb
xor
adc
pop
fnstcw
sub
sbb
mov
inc
insl
jo
sbb
inc
ljmp
inc
xchg
cmp
lahf
xchg
sbb
lahf
in
ss
pop
mov
es
jge
xor
fistpl
sbb
xchg
adc
xor
adc
push
sbb
std
ja
cmp
xchg
cmp
mov
ficomps
pop
pushl
cld
sbb
aam
sarb
and
mov
or
ljmp
mov
imul
sbb
and
jg
xor
stos
xor
ret
inc
int
sub
sar
fbstp
sub
out
ds
mov
xchg
mov
icebp
adc
enter
add
mov
icebp
xlat
jbe
xor
lock
jns
shll
lods
or
fildll
lods
shlw
fistl
call
mov
pop
or
cmp
adc
cmc
daa
lret
pop
mov
cmp
jae
mov
cmp
xchg
pop
divl
mov
adc
mov
sub
ss
inc
decl
ss
adc
ljmp
and
sbb
pushl
movsb
mov
xchg
jae
mov
notl
or
add
bound
popa
lock
cmpsb
ljmp
dec
cmp
lret
jecxz
and
outsl
xchg
outsl
cmpsb
jnp
or
std
jne
sbb
andb
pusha
jecxz
in
stc
sub
mov
out
mov
push
ret
outsb
insb
adc
xchg
orl
into
stos
sbb
fiadds
push
jnp
mov
add
rcr
push
or
sbb
sub
cmp
push
cli
push
lods
push
hlt
xchg
and
dec
js
xchg
ret
lcall
mov
push
jae
sahf
loope
sbb
decl
mov
insl
ret
mov
mov
scas
iret
push
lods
test
push
sbb
jecxz
call
push
shrl
sti
and
sar
add
fcomi
inc
popf
push
in
adc
aas
out
dec
shrb
mov
insl
jge
popf
jg
jecxz
xchg
dec
mov
iret
jb
add
jns
decl
adc
cs
arpl
dec
push
mov
repz
in
scas
pop
inc
sbb
ret
leave
inc
ds
jo
xchg
lcall
jmpw
push
ret
add
das
sbb
je
jecxz
js
jge
inc
fwait
push
adc
xor
xchg
iret
ds
stos
mov
add
push
cmp
lcall
add
movl
enter
hlt
dec
insb
cmc
xchg
adc
fildll
fnstsw
stos
jl
add
lret
mov
mov
mov
lods
out
sahf
xchg
lock
mov
cmp
xchg
je
push
incl
jg
hlt
mov
mov
adc
mov
cmc
sub
mov
aam
scas
lcall
hlt
pop
arpl
and
sub
rol
mov
mov
stos
dec
int
cld
pop
shlb
dec
ror
lods
leave
ljmp
pushl
and
push
push
push
icebp
xchg
ds
aaa
call
lods
iret
stc
and
adc
out
and
cs
push
sbb
jo
into
sbb
mov
sbb
test
out
xor
inc
fistpl
sbb
aad
sahf
arpl
decl
sub
cli
inc
jno
inc
add
rolb
jl
out
jmp
push
movsl
mov
mov
mov
push
sub
dec
outsb
jbe
xchg
add
pop
mov
add
xor
push
pop
js
inc
sahf
fistpl
fucomi
dec
sub
push
int
int
jnp
dec
cmp
mov
jbe
inc
stos
mov
jnp
lret
mov
mov
dec
test
scas
and
cmpsb
imull
or
push
int3
test
xor
mov
sub
rcrl
arpl
pusha
cmc
ficompl
xor
jge
test
and
incl
out
stc
add
push
std
fdivrl
xchg
jne
cld
xchg
dec
rorl
add
lcall
mov
inc
mov
into
lds
push
ljmp
sub
add
outsb
int3
int3
js
xor
rcr
push
push
stos
push
lods
outsb
mov
cli
decl
sbb
mov
repz
pop
leave
mov
xchg
test
lcall
popa
jp
imul
repnz
cmp
loop
pop
add
mov
jmp
cmc
insb
mov
mov
push
jecxz
adc
ljmp
cmp
jmp
push
xor
lods
fsubrp
enter
cltd
in
sub
or
or
fnstenv
popf
imul
js
loop
jno
add
andb
inc
fcomps
into
xchg
pushl
add
add
stos
pop
testl
out
clc
lcall
dec
filds
jmp
stc
adc
cmp
sub
sbb
pop
scas
mov
call
pop
loop
jge
sub
mov
adc
push
mov
data16
es
les
dec
test
mov
mov
fnstenv
cmpb
add
xchg
fcomp
clc
push
pop
or
insb
sbb
hlt
test
in
fnstcw
lcall
push
sub
cmc
push
outsl
sbb
out
addr16
stc
outsl
decl
call
flds
add
int3
and
dec
aam
stc
lods
loopne
das
cli
mov
sti
jmp
xchg
and
jo
hlt
add
lcall
test
mov
mov
jns
cmp
pop
jnp
xchg
leave
call
sub
mov
jae
mov
push
fdivp
xor
out
iret
sbb
test
jecxz
pusha
lcall
sub
dec
sarl
pop
shll
jg
pop
hlt
js
out
xchg
lret
test
cwtl
mov
enter
out
sub
sub
mov
loop
js
mov
jno
lods
mov
dec
xor
add
add
push
dec
push
xchg
inc
mov
jg
jmp
cmpb
mov
cmp
fldl
aad
inc
ljmp
or
cmp
loope
jp
sbb
sbbl
xchg
in
xchg
jmp
pushl
xorb
dec
fists
js
mov
pop
jo
enter
dec
cs
mov
pushl
sbb
mov
imull
ret
xchg
test
ljmp
xlat
int3
nop
inc
xchg
push
hlt
jmp
aas
push
xchg
mov
push
scas
jno
insb
ss
and
push
mov
inc
call
lock
mov
cwtl
addb
mov
lods
fcom
push
decl
inc
jl
leave
test
repnz
pop
pusha
fstl
xchg
or
scas
mov
push
mov
pusha
fimuls
scas
adc
mov
pop
and
shlb
inc
pushl
mov
popa
or
mov
push
push
xlat
dec
cli
xor
stos
xchg
call
sbb
pop
test
dec
mov
test
inc
sti
mov
popf
incl
aad
in
imull
sahf
shlb
and
xchg
movsl
in
aaa
stos
mov
sbb
pop
cld
mov
rcrb
filds
mov
hlt
insb
aam
jl
fs
and
mov
add
in
xchg
adc
orb
mov
push
ja
inc
jecxz
jmp
pop
or
adc
xchg
mov
adc
pushl
bound
fdivs
ret
cwtl
add
pop
loop
sub
stos
leave
fcos
incl
call
add
add
addr16
in
cmp
push
jne
das
ret
adc
lea
jge
movsb
movsb
sahf
or
inc
or
inc
pop
movsl
ljmp
fcoms
push
cld
aas
aam
cmpsl
lds
insb
ret
in
mov
jg
jns
sub
lods
popa
sahf
out
stos
popf
or
add
adc
pop
jp
push
pop
popf
stc
lret
xor
loop
and
clc
add
aaa
lahf
dec
imul
sub
decl
mov
xchg
enter
stc
ljmp
ljmp
fistl
cmovns
ficoml
sub
push
fidivs
dec
mov
xor
in
mov
test
repnz
mov
xchg
cmp
ljmp
adc
push
imulb
cmp
inc
xor
inc
inc
inc
shlb
outsl
nop
pusha
lock
pop
gs
mov
cmc
xchg
leave
outsl
adc
decl
fadd
rorb
or
into
leave
ret
lahf
lret
int3
in
dec
push
mov
repnz
jno
push
inc
lcall
aaa
mov
or
cmp
imulb
mov
mov
lea
inc
lret
push
dec
pop
add
or
push
repz
test
sbb
dec
cmp
scas
pop
mov
decl
dec
aam
test
mov
in
js
out
je
xor
mov
or
scas
add
decl
bound
rcrl
imul
jo
fbstp
lret
cmp
scas
ljmp
popa
adc
and
fucom
hlt
lcall
mov
lret
pop
dec
xchg
mov
scas
mov
mov
mov
adc
mov
andb
stc
fsubr
rcll
fisttpl
xchg
jg
call
jge
iret
mov
push
test
insb
ja
cmp
or
sahf
push
pop
add
incl
in
cmp
imul
sub
movsb
mov
push
xorb
or
outsl
sbb
cmp
loop
js
clc
push
adc
push
test
cmpsb
das
jg
insb
sbb
pop
and
call
stos
cmp
jnp
mov
sbb
jmp
xor
mov
movsl
iret
aas
fiaddl
add
decl
mov
pop
nop
in
rolb
lcall
cmp
push
gs
aam
call
mov
cli
clc
popa
cmp
int3
je
out
sub
lret
mov
push
incl
test
mov
sbb
push
pop
mov
jmp
scas
xchg
test
popa
outsl
cmpb
xchg
js
lods
lret
pushl
std
dec
and
lods
mov
movsb
adc
test
xlat
jae
cmp
fnstenv
decl
pushf
out
rclb
in
lret
jnp
lock
cmp
addb
sub
cli
mov
hlt
loopne
enter
mov
ja
fcmovnbe
xchg
ret
lcall
xlat
fcom
mov
sub
xchg
mov
mov
sti
and
ljmp
decl
or
fstpt
push
inc
xor
xchg
ret
sbb
jb
ljmp
mov
idivl
cmc
mov
ja
fwait
mov
lods
inc
lcall
test
or
dec
aas
add
fisubrl
add
mov
xchg
test
or
pop
imul
xchg
push
in
and
daa
fdivp
sub
loope
push
pop
and
jmp
enter
das
sar
mov
cmp
popa
les
ds
dec
mov
lds
bound
jp
jmp
xor
mov
test
dec
pop
shr
ss
sbb
in
ficoms
jg
cmp
mov
jecxz
out
jl
sti
into
xchg
mov
imul
xor
xchg
aaa
cld
scas
sbb
pushf
sar
insb
test
test
and
call
repz
sub
ds
je
neg
sub
mov
ljmp
scas
out
jns
aam
push
adc
mov
in
repnz
xchg
lods
adc
decl
mov
js
dec
sbb
dec
roll
jl
addr16
jno
fbld
sbb
addr16
mov
mov
push
pop
mul
iret
xor
and
mov
mov
push
test
orl
outsl
inc
cmp
cmp
fmull
scas
xlat
nop
daa
lret
inc
lods
jmp
mov
scas
or
dec
xchg
incb
rclb
xchg
ret
jg
pushl
sti
setbe
jae
xor
adc
or
xor
push
orl
adc
insw
cs
stos
add
adc
sbb
mov
or
adc
jp
mov
aad
rcrb
call
std
jnp
stc
dec
inc
enter
jno
out
repnz
or
lcall
inc
jmp
inc
aaa
push
sub
mov
pop
jmp
xlat
leave
lock
sbb
int
inc
mov
nop
outsl
cld
mov
ret
lcall
jbe
xchg
aad
mov
adc
inc
mov
sbb
stos
push
pop
insb
cmp
sub
ljmp
nop
int3
or
cmpsb
scas
and
push
stos
clc
mov
mov
test
mov
shl
iret
mov
lds
jecxz
ljmp
jae
push
ja
pop
pop
pop
mov
stos
adc
addl
and
pop
mov
mov
stos
push
fisttpll
std
cmp
jne
and
xchg
inc
add
sar
decl
cli
loopne
xor
lods
imul
cmp
addr16
xor
rcr
loop
fadd
mov
nop
sub
cmpsl
and
orb
xrelease
and
out
sbb
xchg
cmp
ss
jmp
cltd
lcall
adc
pop
in
jecxz
jge
xor
gs
lcall
pop
je
add
in
mov
sbb
mov
mov
std
hlt
decl
std
xor
mov
cmpsl
je
pop
arpl
jmp
aas
xor
in
ljmp
jo
js
dec
stc
pop
fisubrl
out
cmp
mov
mov
xor
adc
sahf
push
dec
scas
push
test
pop
pop
dec
xor
push
add
orl
decl
xchg
divl
mov
pop
ss
inc
subb
pushl
and
fcoms
push
pusha
cmc
pop
pop
sbb
es
imul
imul
notl
or
decl
jns
pusha
add
shll
jmp
add
jmp
sub
and
xchg
adc
mov
jmp
cmpsl
add
push
mov
or
pop
jmp
inc
sub
inc
mov
dec
mov
orb
jmp
idiv
decl
andb
or
lods
cmp
scas
and
ret
adc
fcomip
ljmp
push
inc
mov
sbb
cmp
mov
xor
movsl
cmp
lret
decl
sbb
fs
pop
fisubs
jg
ljmp
fs
jmp
fstpt
cli
into
lea
inc
jb
sub
mov
adc
cmp
jnp
jl
mov
movsb
into
push
dec
ss
mov
inc
pop
in
inc
jle
mov
pop
int
sub
xchg
push
push
shrb
add
popa
clc
jo
sub
dec
pop
mov
lcall
push
movsb
and
cmp
push
sub
and
nop
mov
icebp
pop
and
addr16
aam
jg
call
into
imul
adc
rcrl
mov
outsb
imul
ljmp
daa
iret
jle
imul
shrb
lds
rorl
decl
sub
in
and
adc
xchg
cmp
movsb
outsw
in
lcall
dec
scas
roll
xchg
inc
mov
inc
ljmp
jae
jle
xor
test
hlt
ljmp
fs
in
pop
xor
fistps
pop
xchg
or
mov
fwait
aad
ljmp
adcl
adc
sbb
lcall
rolb
ja
in
pop
fisttps
fs
pop
incl
lds
or
outsb
xor
sub
lahf
outsb
adc
repnz
fildll
mov
ljmp
mov
mov
inc
pop
or
lock
xor
sub
scas
mov
xor
mov
clc
push
dec
leave
mov
fildll
mov
les
divb
sbb
popl
ret
nop
pop
jno
jle,pn
inc
dec
outsl
push
fdivs
andb
pop
cmpsb
xchg
cmpsb
push
clc
fstl
cltd
xchg
lds
dec
mov
xchg
lcall
jb
cmp
jg
mov
fldl
push
xchg
add
jae
addr16
pushl
mov
mov
in
pop
ja
or
cmp
mov
push
mov
js
mov
sbb
scas
aaa
ficompl
mov
test
xor
mov
test
loopne
jg
jmp
and
aam
sbb
mov
jmp
popf
or
leave
loopne
xchg
pop
sub
lcall
lods
clc
rcrb
jo
sbbb
test
adc
pop
insb
test
pushl
movsb
mov
icebp
push
fdivrl
pandn
ja
or
push
xor
mov
mov
mov
pop
shl
jo
sbb
sar
fcomip
cmpsb
ja
das
imul
mov
dec
outsl
movsl
mov
pop
add
cmpsb
pushl
mov
xor
push
gs
mov
mov
add
hlt
mov
loope
jns
out
sti
sbb
mov
cmp
and
lcall
call
loopne
inc
or
sarl
in
push
pop
loopne
sub
push
mov
mov
push
push
sub
push
mov
jle
aas
fbstp
cmpsl
rorb
lret
ds
pop
dec
jge
mov
xor
jno
lcall
xor
mov
mov
mov
call
fldcw
icebp
aaa
mov
into
js
pushf
or
push
push
xchg
hlt
popf
sub
das
jg
pushl
std
pop
add
or
push
lret
lret
or
or
pusha
and
iret
out
ljmp
cli
ljmp
dec
adc
ljmp
sub
jo
test
testb
cld
xor
cld
sahf
mov
push
adc
sbb
sar
cmp
mov
mov
push
fs
leave
sti
imul
loop
ret
fnsave
mov
jmp
mov
iret
aas
test
and
mov
xchg
pusha
in
lods
ljmp
xchg
movsb
out
das
dec
and
xchg
jg
xorl
xor
lds
or
mov
lcall
mov
sub
dec
ja
xchg
out
or
cmp
inc
stos
cwtl
out
popa
push
and
mov
inc
repz
xor
out
aaa
leave
movsb
dec
cmp
lcall
ffreep
stos
fiaddl
xchg
or
mov
xor
pop
ljmp
ret
mul
in
jmp
push
aaa
push
push
push
xor
loope
mov
or
xor
stos
mov
xor
mov
push
lret
xorb
cmp
mov
mov
inc
loop
std
loop
xchg
and
mov
popa
fiaddl
lret
mov
mov
out
mov
lods
push
pop
test
rcrl
xor
clc
xchg
fcomps
je
push
pop
sub
xchg
lock
push
daa
je
data16
stos
pop
stc
cltd
js
sbb
jecxz
cli
incl
sbb
inc
fwait
adc
and
aas
jl
sbb
cmp
sub
decl
ror
jb
push
icebp
add
mov
ljmp
and
dec
shl
mov
jp
mov
sbb
shll
cmp
je
sar
sub
aad
adc
push
hlt
js
shrb
mov
je
mov
imul
jno
stos
adc
mov
pop
mov
xor
mov
lcall
push
test
iret
push
pop
mov
dec
inc
and
int3
imul
and
or
scas
into
push
dec
sub
aas
out
mov
loop
xchg
inc
lds
push
stc
ljmp
rcrl
ret
inc
data16
mov
dec
pop
in
push
call
xchg
or
test
mov
out
xchg
jmp
xchg
sahf
jno
iret
test
jmp
imul
ficoms
push
testb
movsl
fidivl
dec
sub
dec
dec
lcall
insb
lcall
iret
jne
jb
lods
rcl
pop
lods
mov
jmp
mov
stos
fxch
inc
xor
loop
repnz
sbb
pop
ss
shr
add
dec
int
ss
std
cmp
xchg
data16
jns
das
cltd
inc
add
push
inc
xchg
fsub
loopne
jmp
sub
add
rclb
pop
or
cmpb
jae
push
and
jmp
adc
std
inc
mov
decl
and
adc
pmulhuw
mov
and
out
stos
mov
mov
dec
sub
bound
mov
in
into
mov
movsb
mov
xor
lods
test
push
stc
icebp
xlat
add
cwtl
mov
adcl
jge
ds
or
pop
cld
incl
cld
dec
mov
mov
dec
jge
sbbb
inc
std
cmc
jnp
sar
sub
or
adc
and
call
jo
jmp
fstl
cmp
sbbl
gs
sti
inc
imul
daa
mov
adc
adc
jg
in
sbb
inc
cmp
and
dec
aaa
dec
dec
and
cltd
insb
fdivp
sbb
and
add
in
repnz
mov
dec
mov
scas
adc
mov
push
addb
daa
pop
iret
addl
aam
ret
jo
out
nop
rcl
mov
cld
xchg
add
adc
xorb
inc
jle
stos
jae
or
mov
jmp
lods
adc
sbb
std
sub
push
mov
inc
push
sbb
pop
lcall
aas
stos
xchg
mov
leave
inc
fdivr
repz
int3
imul
rcrl
fstpt
jmp
mov
ffreep
adc
popa
lds
sbb
mov
in
lods
test
or
decl
fnstenv
mov
mov
out
fstps
xor
adc
iret
and
lcall
out
mov
call
lret
imul
add
mov
mul
mov
imul
insl
cmp
inc
ss
xlat
filds
fidivrs
jg
call
fimuls
mov
cmpsl
jle
add
inc
mov
ds
sub
mov
pop
jnp
mov
cmpl
jno
cmc
call
nop
mov
inc
cmp
push
fists
sbb
mov
dec
data16
lds
push
arpl
lcall
push
sbb
es
mov
ds
out
sbb
inc
lahf
rcrl
jbe
xor
movsl
es
lcall
inc
pop
sti
fnsave
pop
dec
rolb
pop
jo
jg
sbb
add
lret
scas
int
fstps
fiadds
je
pop
pop
xrelease
mov
mov
adc
stc
mov
loope
cmp
insl
ret
sub
mov
pop
dec
loope
push
hlt
inc
lret
xor
mov
cmp
test
push
ja
add
pushl
hlt
xorl
or
test
fdiv
inc
inc
fldt
ljmp
bound
or
imul
pop
push
ljmp
mov
pusha
push
and
sbb
adc
shr
jne
mov
lock
pop
cmp
push
pusha
aas
repnz
or
mov
or
out
mov
pop
inc
cld
pop
pop
and
imul
in
and
jmp
sahf
inc
inc
sarb
xchg
ss
inc
pop
dec
jmp
cmp
popf
inc
push
aaa
fucomp
fdivrs
rcr
ljmp
and
and
add
stos
sbb
fld
andb
ss
xor
jg
inc
mov
outsl
xor
in
subl
xchg
fimull
mov
repz
dec
test
fldcw
adc
rcrb
test
sbb
xor
das
jae
xor
aas
jle
pop
xchg
sbb
lcall
jge
addr16
ret
mov
mov
fcmovbe
pop
xor
decl
mov
call
mov
mov
adc
or
test
xchg
mov
bound
daa
dec
jae
add
scas
std
push
in
mov
or
cld
ja
movsb
daa
fdivr
decl
xor
outsb
and
jge
cmp
inc
sbb
mov
ret
mov
jl
ljmp
pop
inc
cmp
cmp
mov
addr16
jne
ja
inc
inc
mov
cwtl
jecxz
push
jg
mov
adc
or
fnstsw
scas
mov
pop
and
pushl
jmp
xor
inc
push
ret
inc
jb
or
loop
sbb
mov
mov
mov
xchg
dec
test
adc
jmp
sbb
repnz
mov
mov
lods
xor
jae
cmp
sub
sub
pop
fxch
push
aas
xor
in
mov
nop
xchg
lret
test
jnp
imul
stos
ljmp
push
mov
call
call
pusha
in
mov
fs
xchg
mov
loopne
mov
xchg
shlb
clc
lcall
push
in
add
dec
mov
lahf
inc
push
xor
clc
sbb
popa
decl
add
xchg
incb
pop
push
int3
sub
push
cmpsl
dec
mov
loopne
cmp
dec
lds
outsb
icebp
adc
das
popl
stc
aaa
cmp
decl
ret
xchg
sbb
popa
or
lcall
rcll
push
cld
dec
test
decl
in
loope
loop
jns
cmp
mov
mov
mov
scas
clc
pop
push
xor
out
jl
adc
jg
push
pop
add
adc
push
jnp
xchg
repnz
and
mov
xor
dec
out
and
pop
push
outsl
outsl
cmp
imull
decl
mov
in
inc
cmp
pop
sahf
jb
push
das
xchg
popf
adc
lea
out
ss
decl
sbb
dec
and
pop
pop
mov
adc
test
incl
out
andl
jmp
jle
inc
add
scas
stos
sti
arpl
out
cli
jg
imul
jbe
notb
daa
or
inc
lahf
decl
in
inc
aad
daa
pop
push
sub
dec
or
je
fdivrl
sub
incl
pop
xorb
xor
mov
or
popf
mov
cmpsl
repz
test
in
out
outsb
in
sub
nop
inc
stos
cmpsl
adc
ds
push
xchg
or
fstp
sbb
jae
cmc
pusha
pop
dec
scas
push
loop
ljmp
test
or
iret
cmp
ds
mov
repz
push
int
call
push
sub
sub
out
jp
in
lcall
popf
push
outsl
call
push
cmp
loop
mov
lods
xor
out
inc
sub
ljmp
fcmovnb
cmpl
cmp
in
in
rorb
lcall
or
stos
push
into
call
enter
ss
fsubrl
and
mov
gs
cmpsb
aad
mov
push
pushl
sub
aad
push
jp
int
mov
jmp
ljmp
sbbb
lock
xor
es
repnz
ss
fwait
out
jp
mov
pushl
lods
je
out
test
push
adc
fisubrl
subl
dec
ljmp
ja
sub
decl
xor
pop
pop
xchg
in
lds
dec
xchg
lret
cmp
push
fistpll
mov
push
and
dec
adc
imul
mov
mov
push
jns
lea
daa
mov
addr16
mov
int3
xchg
fwait
decb
test
add
jnp
push
push
add
decl
fs
jns
dec
inc
enter
sub
mov
mov
sbb
jne
ficoml
imul
call
jg
cmpsl
popa
rcr
test
fldcw
cmpxchg
lcall
outsl
mov
mov
hlt
call
out
insl
mov
push
in
cmp
dec
loopne
iret
in
lods
push
pop
ja
push
incl
out
push
hlt
outsl
jg
divb
test
popa
inc
sahf
add
in
adc
jg
mov
negl
xor
imul
ret
stos
out
cmp
icebp
les
mov
pop
xchg
js
jle
test
fsubrs
inc
pop
jle
cmp
fcoml
je
ret
icebp
test
lea
sub
jge
lds
incl
push
add
mov
pop
dec
scas
cmc
inc
movb
in
add
ret
xchg
xor
pop
xchg
mov
in
lret
mov
adc
loop
insb
clc
adc
cmpsb
mov
cmp
cmp
cltd
push
inc
ss
ljmp
loop
insl
outsl
mov
popa
mov
inc
inc
repnz
ret
pop
xchg
filds
ljmp
push
out
add
ljmp
mov
stc
add
sahf
and
cmp
ljmp
loopne
sbb
fisubs
ud2
jg
inc
jbe
sbb
test
pop
call
ret
add
pusha
std
jle
mov
jmp
outsl
push
cli
pop
inc
imul
int
pop
sbb
test
lea
inc
clc
ja
fwait
push
into
adc
lret
aaa
imul
fnstsw
or
ret
std
xor
fisubl
test
call
pop
fstl
lret
jns
enter
fldenv
stc
fadd
fs
add
fwait
addr16
ljmp
les
jnp
sub
bound
xchg
call
jg
mov
sub
sbb
in
orb
in
imul
ljmp
sub
imul
add
ss
adc
adc
int
int3
xor
dec
cld
sub
incb
adc
nop
cmc
jbe
jg
loope
ljmp
mov
int3
dec
pop
xchg
pop
push
arpl
dec
cmp
jae
popf
xchg
jb
mov
sub
decl
jbe
outsb
ds
cld
mov
push
or
es
clc
cmp
lret
clc
ljmp
push
xchg
sub
cmp
in
or
pop
xor
fsub
xchg
pop
dec
or
fdivs
cmp
fistps
arpl
lea
stc
mov
pushf
push
pushf
mov
adc
inc
mov
sub
pop
cli
clc
jb
fildl
bound
jg
and
dec
pusha
call
push
jbe
jb
je
mov
insl
and
call
call
hlt
sub
xor
fimull
lods
cmp
mov
cmpsb
pushl
cmp
fs
adc
roll
bound
jno
sbb
jg
cmp
decl
and
sbb
jbe
mov
rorb
gs
decl
ret
mov
fwait
mov
scas
cmp
mov
test
leave
jmp
pop
mov
addr16
mov
insb
jg
cmp
mov
lahf
push
xlat
xor
pushl
ljmp
adc
fwait
aam
xor
xchg
inc
aam
xor
adc
insb
mov
cmc
mov
mov
push
sahf
stc
inc
call
mov
dec
out
mull
mov
sub
push
jns
xor
xchg
pop
lret
xchg
add
pushl
dec
push
in
cmc
fst
mov
mov
sub
imul
cld
sahf
into
and
push
paddd
add
or
mov
fdivs
mov
pop
dec
movsb
sbb
xchg
aaa
fidivrl
fcomip
js
mov
cmpsb
xchg
loope
jmp
jnp
sbb
push
adc
cmp
mov
adc
sub
and
pop
loopne
mov
inc
cltd
testl
lods
mov
insb
call
dec
cmp
cld
or
fcoml
and
insb
xor
xor
lods
in
dec
jno
cmp
decl
or
mov
mov
mov
out
pop
push
xlat
cmp
out
dec
push
sbb
ljmp
mov
mov
fwait
mov
xor
movsl
sbb
imul
ljmp
clc
repnz
insb
mov
push
enter
lea
lcall
xor
jo
mov
jmp
notl
pop
dec
ret
cmpsl
sahf
loopne
arpl
lock
decl
mov
insl
jge
outsl
into
mov
adc
incb
and
sti
add
cmp
add
sub
xor
lods
xor
push
jecxz
ds
dec
inc
lods
pusha
ss
mov
fsubrp
mov
iret
jp
insb
or
cs
sahf
dec
iret
mov
xchg
xchg
scas
xor
dec
inc
push
xor
push
imul
jmp
adc
fwait
sbb
movsl
out
scas
dec
pushf
fsubr
int3
nop
push
adc
iret
push
cmp
cmpsl
dec
lock
lock
jbe
cs
jns
dec
pop
stc
mov
ljmp
decl
cmp
add
outsl
dec
fidivl
jns
shlb
mov
aaa
fdivr
cmpsb
lcall
xchg
xchg
mov
pop
cmp
ret
sub
movsl
mov
pushl
and
mov
inc
pop
jnp
in
inc
data16
cltd
lcall
jmp
push
outsb
xor
mov
add
popf
sbb
mov
mov
call
lea
cmpsb
inc
sti
add
mov
mov
fwait
into
xchg
cmp
call
or
xchg
sbb
js
fsubr
cmp
std
js
mov
push
ret
insb
aad
andl
pop
jp
xchg
inc
and
mov
jg
and
add
xchg
inc
inc
mov
imul
xchg
sub
pop
das
sar
pop
mov
shll
jae
xor
fwait
sahf
rorl
aaa
std
inc
test
cwtl
jb
and
movsb
pop
rorb
outsl
adc
lds
mov
decl
aaa
add
popf
cmpsb
sbb
repnz
lcall
decl
jb
nop
int3
rorb
xchg
mov
clc
icebp
xchg
fs
idivb
mov
and
xchg
pop
cmp
out
dec
sub
repnz
dec
popf
fnstsw
out
mov
or
dec
adc
repz
or
mov
push
pop
aaa
imul
jl
ljmp
rolb
lcall
popf
mov
or
ficompl
pop
mov
in
in
xchg
stos
fnstenv
push
dec
push
ss
or
dec
push
nop
cli
dec
idivl
mov
das
adc
incl
jmp
outsl
cwtl
es
mov
dec
std
shrl
and
pop
push
decl
push
push
mov
test
aas
iret
shlb
data16
cmp
add
adc
pop
jbe
dec
dec
sub
clc
fnstsw
add
cs
dec
push
jg
icebp
decl
fs
and
popa
outsl
shlb
sar
push
andb
mov
jmp
sub
cmc
aaa
adc
call
leave
test
xor
mov
cltd
jnp
loope
pushw
mov
ja
test
sbb
decl
jmp
and
lods
dec
xchg
shrb
shll
mov
stc
cld
jnp
int3
incl
xchg
inc
aad
lret
rcrb
nop
mov
and
inc
sub
sub
pushl
push
jl
sbb
gs
cmc
fincstp
pusha
pusha
xor
shl
loope
sub
pop
hlt
push
insb
pushl
jmp
test
jl
jb
js
xorl
aad
and
fidivrs
dec
or
imul
pop
xorb
shl
jg
das
call
sub
movsb
fidivl
aam
stos
xor
mov
inc
in
addb
cltd
and
lret
movsb
outsb
fcos
cmp
in
stc
inc
xchg
ds
adc
lods
jae
jb
imul
sarb
adc
lcall
dec
jge
imul
pop
sub
and
dec
or
scas
sbb
incl
iret
and
inc
fcompl
mov
imul
into
mov
xor
lcall
into
fisubrs
idivb
inc
push
mov
adc
scas
stos
daa
cmpsl
fidivrl
and
add
rorl
lcall
xchg
sahf
fs
bound
lods
xchg
insb
fmul
in
add
incl
das
stos
and
xor
icebp
xchg
icebp
and
fsts
ss
jge
sbb
sarb
decl
and
mov
jo
push
pop
into
lock
hlt
push
lcall
out
xlat
shll
adc
shll
cld
xor
mov
or
notb
jg
push
add
xchg
jae
xchg
nop
leave
fcom
popl
xlat
or
and
mov
xchg
dec
mov
push
adc
cmp
into
fisttps
sarb
pop
in
ljmp
jbe
lods
lods
sbb
cmp
xor
clc
out
mov
dec
push
sbb
ljmp
daa
pop
js
mul
inc
fcom
push
inc
or
inc
jns
push
jmp
loop
jg
fildl
adc
scas
pushf
mov
fsubl
mov
mov
dec
in
test
cli
scas
pusha
fsubrl
cmp
or
outsb
jp
hlt
dec
aam
jg
jmp
movsl
sbb
sbb
out
add
enter
lcall
loop
incl
mov
fisubrs
aad
std
lods
adc
into
fs
fiaddl
sub
call
incl
loop
mov
icebp
scas
popa
mov
sti
add
inc
movsl
dec
stc
ss
mov
incl
notl
in
add
inc
cwtl
pop
mov
js
or
cmp
push
xchg
test
and
out
in
ljmp
cli
or
repz
xchg
imul
jnp
data16
mov
jmp
mov
jno
sbb
xchg
fucom
aaa
cmp
pop
xchg
lock
add
mov
lods
orb
stos
aaa
push
popf
cmp
dec
lcall
js
aam
dec
adc
cmpsb
les
in
int3
pusha
movsl
in
repz
mov
mov
dec
and
stos
mov
and
sbb
ljmp
into
fidivrl
xor
push
ret
cmp
int
sbb
fsubp
jle
incl
xor
inc
fxch
insb
ret
iret
sbb
flds
jmp
in
jo
sbb
mov
ss
push
outsl
lods
shlb
push
cmp
pop
imul
xchg
sbb
push
out
jge
lret
dec
cmp
or
cmp
shll
jo
lds
sbb
adc
lret
and
lret
decl
xchg
sub
std
popa
subb
cmp
in
xchg
xchg
jp
and
fcomip
sbb
xchg
dec
or
xchg
fists
dec
push
test
mov
mov
ljmp
mov
xor
insl
and
mov
sub
jle
jg
stos
push
xchg
insl
addr16
cmp
or
push
aas
ljmp
aaa
cld
cmpsb
cmp
mov
pop
pop
mov
incl
es
mov
cmp
xchg
loop
fistpl
or
icebp
mov
mov
lcall
out
xor
push
mov
mov
imul
sahf
out
imul
mov
adc
push
dec
out
outsl
and
test
cmp
mov
push
les
ljmp
inc
lahf
sbbl
inc
dec
stos
in
push
cmc
test
std
jp
test
mov
mov
cmp
xchg
dec
mov
sbb
popa
mov
jmp
jb
adc
mov
leave
cmp
jle
pop
lea
xchg
sub
decb
sub
cli
lcall
fsubr
imul
rclb
inc
or
mov
mov
jp
and
add
scas
aaa
imul
xlat
scas
mov
push
mov
jbe
push
sarb
or
scas
mov
push
adc
and
mov
jmp
daa
repnz
jae
imul
call
cmpsb
mov
mov
aad
inc
orl
ljmp
jge
loope
pop
mov
xor
inc
xchg
stos
je
imul
add
jbe
dec
aas
jp
fisubrl
cltd
and
mov
lods
push
fwait
jae
pop
aas
jl
loopne
lcall
bound
or
or
jge
push
out
adc
fmull
sbb
ljmp
pop
jl
out
rcr
sbb
sbb
push
mov
jmp
mov
mov
lcall
sub
add
push
add
pop
les
test
repz
stos
push
sub
decl
xchg
sbb
xchg
add
dec
xlat
jb
lock
add
subb
pushl
xor
sahf
mov
lret
add
inc
movsb
loopne
cmp
xchg
adc
cld
punpckhdq
icebp
pop
shl
sbb
jmp
arpl
out
push
pushf
shrb
loop
mov
and
pushl
hlt
pushf
insb
jno
sti
jbe
push
shrl
adc
imul
ffree
call
cmp
lods
pop
fcmovu
adc
ret
int
sbb
gs
push
pop
hlt
ljmp
pcmpeqw
mov
adc
or
xor
popa
mov
jnp
mov
fists
jno
dec
int
sbb
inc
pop
fucomip
rolb
cwtl
insl
cmp
scas
call
sub
sti
inc
push
inc
iret
pop
and
mov
jg
dec
enter
fcompl
call
add
mov
mov
or
push
movsb
mov
imul
jnp
jne
push
xor
push
jno
enter
xchg
dec
je
cmp
hlt
adc
mov
cmpsl
sub
mov
push
loop
xchg
addb
adc
inc
lcall
mov
push
or
out
ljmp
shl
subb
lret
inc
mov
lcall
pop
xchg
pop
into
xor
inc
jmp
fdivs
bound
movsb
add
or
pushl
mov
insb
testl
sub
fs
popf
mov
mov
mov
lcall
push
cmp
movsl
pusha
pop
lock
cmp
sar
out
pop
mov
stc
push
std
jb
or
arpl
aad
push
pusha
rcl
push
test
jnp
scas
shl
dec
outsl
fadd
jnp
or
pop
ljmp
clc
pushl
or
mov
test
add
mov
das
lcall
mov
cmp
and
fdivr
test
dec
dec
adc
add
xor
sbb
xchg
lea
call
and
sbb
dec
pop
sub
scas
loopne
mov
int
fwait
pushf
push
ss
and
xor
push
xor
cmc
or
je
loope
imul
decl
push
int3
fidivs
mov
jp
leave
cmp
mov
mov
mov
mov
pop
and
mov
mov
jbe
sarb
jle
out
add
loop
pushf
sub
jmp
xchg
imul
push
mov
lock
rorb
aas
jecxz
outsl
cmp
fs
push
jmp
cmpsb
mov
cli
pushl
mov
mov
fstl
push
cmp
fs
ljmp
data16
scas
add
jmp
rcll
push
xchg
xor
aad
xor
inc
decl
jo
fcoml
jmp
pop
mov
sbb
push
pop
idivl
pushl
ret
xchg
scas
cld
mov
mov
ds
push
pop
mov
jmp
dec
insl
adcb
jb
movsb
adc
dec
in
sub
mov
add
movntps
add
mov
push
sub
sbb
xchg
sti
cmc
loopne
fwait
mov
decl
mov
inc
pusha
sbb
jnp
mov
adc
aaa
xor
dec
mov
mov
fisubrs
inc
xchg
aad
mov
push
jae
and
jae
lret
incl
lret
popf
jge
addb
and
bound
sti
xor
mov
rolb
or
mov
scas
inc
adc
lock
fucomi
cmpsl
pop
push
inc
mov
fdivrl
xorb
cmp
mov
pop
fimuls
inc
inc
shrl
das
or
shl
outsb
push
lcall
cmp
faddl
pushl
cmpsl
int
mov
jne
fistpll
adc
mov
xchg
jns
arpl
pushl
mov
data16
cmp
adcb
data16
dec
or
fcomip
fiadds
xchg
ljmp
sbbb
adc
gs
repnz
lcall
lcall
dec
fidivrl
cmp
sbb
dec
inc
cmp
add
cld
decl
lock
sub
cs
xchg
mov
xchg
dec
add
scas
fisubs
push
inc
inc
add
aam
dec
ret
xchg
es
push
outsl
addr16
loop
ljmp
pop
ja
icebp
nop
xchg
scas
and
or
imul
push
jnp
jmp
gs
call
jmp
test
out
cs
or
sar
pushl
xor
xor
inc
jp
mov
pop
lea
es
out
cmp
jbe
loop
dec
movsb
call
jle
lods
xor
lock
pushf
test
cmc
cmc
aaa
or
jmp
outsb
repnz
jg
jmp
out
ret
mov
or
and
xchg
lcall
sar
fwait
xlat
in
fs
push
jno
adcb
stos
mov
loopne
cwtl
into
cmp
je
pop
jmp
out
pop
rol
sti
daa
pusha
mov
fdivrp
jg
aad
and
inc
xchg
mov
fwait
inc
cld
fwait
mov
popa
hlt
sarb
shr
ljmp
and
mov
jmp
or
push
lret
push
push
sbbl
mov
lock
ret
fwait
imul
mov
leave
lods
adc
mov
arpl
imul
decl
imul
push
test
ds
push
pop
push
xor
sbb
pop
cld
stos
xchg
arpl
mov
bound
push
bound
in
call
pusha
sarl
imulb
test
dec
push
lret
sub
out
adc
mov
out
mov
jb
xchg
and
mov
int
jp
rcrb
test
enter
outsb
lret
push
or
movsl
xchg
rcrl
movsl
xchg
mov
inc
loope
xor
out
lcall
add
int3
stos
cmp
or
data16
sbb
je
out
cs
sub
dec
aas
lret
fwait
mov
add
pushl
cmp
shl
push
repz
fidivrl
pop
enter
sub
xchg
add
dec
clc
adc
gs
mov
inc
std
pushl
idiv
sahf
fistps
insl
repz
pop
icebp
rcl
dec
xchg
fcomip
decl
jle
stos
cmovge
fisubrl
scas
sarl
mov
inc
clc
movsb
inc
push
push
mov
and
insb
push
dec
sar
cmp
ljmp
mov
add
cmp
inc
jg
jnp
adc
ds
icebp
inc
data16
mov
fldt
mov
sbb
cmpsb
jns
mov
cmp
push
test
loopne
and
xor
push
pop
fwait
xchg
fwait
jmp
pop
pop
insl
ret
push
mov
arpl
mov
cltd
cmpsl
xor
movsb
jae
aad
out
lret
dec
imul
pop
inc
lcall
rclb
mov
push
xchg
mov
push
std
ljmp
test
addl
jbe
lock
mov
stos
movsl
mov
loope
dec
cmpsl
pop
insl
xor
cmp
hlt
and
lcall
pop
or
xlat
cwtl
rcrl
in
xchg
pop
push
into
lods
stos
jmp
je
in
pushl
hlt
test
repz
sbb
sub
js
cmpsw
sub
shrl
ljmp
jnp
lea
test
test
sbb
pop
addr16
mov
repnz
aas
ret
ljmp
nop
adc
mov
mov
mov
idiv
inc
mov
hlt
in
mov
in
sar
sub
shl
leave
inc
js
test
inc
jle
clc
mov
incl
icebp
jbe
pop
adc
les
ret
adc
fs
ljmp
inc
and
push
test
lods
sbb
lcall
repz
jnp
adc
sbbb
cli
fdivr
push
pop
push
icebp
sbb
or
mov
lcall
dec
add
mov
cmc
xchg
and
pusha
imul
sbb
std
add
test
fbstp
rcrb
lret
popf
ja
cltd
push
sub
sub
fdivs
push
cld
ljmp
xchg
add
inc
push
notb
sbb
jmp
mov
push
jns
hlt
dec
movsl
cmp
and
push
and
jge
cmp
enter
rolb
rcll
mov
std
jle
movsl
insb
push
shlb
pop
out
cwtl
dec
adc
scas
ret
mov
push
add
mov
inc
lahf
aam
fadd
aaa
sub
xchg
cmc
addr16
pop
dec
jecxz
lods
icebp
stos
stos
out
clc
add
add
lea
pop
movsl
aas
out
lds
stos
scas
out
pushl
mov
dec
mov
out
add
sub
inc
stc
sbb
mov
test
ljmp
pop
in
mov
js
das
cld
repnz
aaa
dec
pop
mov
add
out
out
pop
pop
iret
decl
je
test
jl
mov
cmpsb
jo
nop
jnp
arpl
into
push
ret
stos
bound
adc
sar
pushl
push
sub
cmp
hlt
mov
iret
inc
dec
in
adc
popa
push
jg
hlt
orl
lods
scas
cmpl
dec
lret
xor
push
scas
fmuls
das
sbb
mov
jmp
pop
sbb
mov
rep
mov
add
nop
rorb
in
cli
inc
loop
or
fs
mov
pop
loopne
dec
inc
jb
adc
inc
sub
fucomp
sub
sbbb
jecxz
pop
mov
mov
int
mov
ds
inc
pop
mov
cli
call
mov
mov
outsb
sub
jnp
add
push
push
fsincos
xchg
repnz
test
subl
mov
jns
iret
sbb
inc
xor
out
adc
sti
sub
stos
adc
and
inc
mov
cmpsb
add
pushl
les
mov
scas
cmpsb
popf
stos
jno
cwtl
leave
loope
pop
addl
cmp
daa
out
pop
jmp
das
add
lret
pushf
imul
inc
push
sarb
mov
lcall
xor
cmp
out
ja
mov
inc
sub
mov
popa
add
mov
ljmp
xchg
neg
popa
movb
or
lock
xor
jae
inc
xchg
sbb
int3
shrb
push
or
adc
popa
lahf
jmp
or
jo
add
xchg
arpl
cmp
incl
inc
pop
test
xchg
pushf
shrd
pop
stc
imul
orb
rcr
mov
pop
fdivrl
loopew
cld
xor
push
push
movsl
fwait
inc
xlat
stos
std
pop
popa
daa
xor
std
add
pop
xchg
lds
push
jb
pop
xchg
adc
sbb
mov
pop
movsb
pop
mov
je
aas
pusha
sbb
push
aaa
adc
jb
adc
dec
aad
dec
lcall
push
or
cltd
lods
outsb
popf
fldt
or
cmp
ret
mov
lcall
repz
inc
cmc
pop
dec
in
jno
dec
fimull
push
shrb
fimuls
mov
ljmp
jmp
fwait
cwtl
pop
mov
add
pop
mov
add
inc
mov
ds
dec
divl
jl
jnp
push
xchg
inc
mov
les
inc
mov
xchg
iret
das
clc
add
pop
pop
cmp
and
cmpsb
insl
pop
decl
fcomps
adc
ret
imul
lcall
cmp
ror
xor
js
lock
movsl
xorl
inc
nop
jb,pt
inc
fdivp
dec
dec
inc
pushl
out
sbb
mov
sti
pop
and
lret
add
sub
add
addr16
out
inc
ret
ja
out
pop
loopne
mov
mov
and
into
pushf
rolb
lcall
fs
xchg
dec
jae
sbb
xchg
adc
mov
notb
cmc
shlb
lods
stos
mov
scas
cmp
rclb
fidivrl
outsl
pop
mov
rolb
pop
adc
rol
gs
sarl
sub
jle
fwait
push
xor
inc
dec
repnz
ljmp
out
xrstors
sbb
xor
jge
repz
xchg
mov
and
stos
fmull
mov
lods
fsubrp
jl
jg
lock
std
int3
pop
adc
scas
stos
mov
cmc
sar
or
fadd
outsb
xlat
mov
xchg
stc
lds
stc
dec
outsb
sub
outsl
or
or
or
jg
xor
imul
and
scas
push
pop
push
rorl
hlt
sub
inc
lods
hlt
mov
imul
sar
fwait
decl
xchg
loopne
sub
fcmovb
lcallw
pop
test
sub
lcall
cmc
popa
roll
inc
out
ss
add
pop
jne
shr
js
call
jp
push
pop
push
dec
ret
push
fstpt
sbb
pop
xchg
jae
cs
add
cmpsl
ja
or
jns
inc
push
dec
aas
or
pop
cmp
mov
sbb
adc
in
or
dec
inc
imull
jns
mov
pop
jne
aas
adc
sbb
cwtl
xor
movsb
sar
orb
mov
fcomip
jmp
stos
in
adc
inc
into
fstpt
xor
js
cmpl
jmp
bound
gs
outsl
xchg
daa
dec
es
push
lret
adc
and
ss
inc
inc
ss
pop
inc
xchg
in
daa
enter
xor
clc
mov
out
adc
inc
xor
add
clc
inc
xchg
cmp
pop
dec
pop
pushf
mov
dec
push
push
ljmp
push
arpl
ficomps
outsb
leave
imul
imul
mov
shll
mov
mov
ljmp
cli
decl
in
jle
xchg
sbb
stos
xchg
adc
push
jnp
jl
std
repnz
std
daa
sub
jle
pop
mov
jp
popf
adc
cmp
xor
sbb
test
mov
add
cld
decl
push
ds
or
and
jp
daa
sbb
pushl
jmp
in
dec
in
in
jg
pop
int3
jp
shl
inc
mov
sti
aas
adc
xor
ljmp
jae
cmp
pop
fdivl
mov
sahf
jne
mov
shlb
ret
adc
pop
fcomip
cmp
jb
or
inc
mov
aam
or
sub
sbb
pushl
dec
and
cmp
and
jbe
cmp
ds
loopne
jge
mov
ret
lods
inc
jmp
jmp
sub
add
jg
pop
push
icebp
pop
push
fmull
or
incl
pop
jge
jle
jno
std
jmp
cltd
movsb
jp,pn
xchg
popf
mov
xchg
out
jmp
insl
mov
pushl
mov
out
and
repnz
add
clc
repz
scas
or
out
cli
std
xchg
jge
pop
or
sahf
aad
data16
test
lcall
mov
popa
mov
mov
inc
mov
pop
daa
test
mov
rolb
test
das
aaa
cli
sub
dec
cmpsb
mov
mov
lcall
pop
jb
lahf
cmp
cld
loopne
les
lock
clc
cmpsl
addr16
mov
or
xchg
ret
addr16
negb
mov
scas
mov
shrb
sub
ljmp
decl
and
movsb
repz
pop
scas
pop
movsb
push
add
call
pop
push
inc
pop
aam
jnp
inc
push
es
cld
pop
mov
xchg
int3
or
cmc
mov
jp
push
pop
mov
mov
outsb
loop
jbe
in
cmp
icebp
in
inc
pop
cmp
imul
add
dec
jge
test
dec
je
movsl
in
push
push
aam
insb
xchg
mov
push
lret
xor
inc
mov
addr16
dec
mov
rcrb
nop
dec
lret
sbb
arpl
mov
test
aaa
subl
push
test
divss
push
adc
lret
push
cs
jg
mov
imul
xchg
arpl
cli
iret
leave
jo
pop
jp
or
inc
ret
jo
and
repz
insl
iret
out
aas
in
push
mov
not
xor
aaa
imul
add
jg
fldenv
mov
addr16
jbe
jg
jg
xchg
outsl
out
xchg
mov
adcl
jmp
fsubr
outsl
jg
cwtl
mov
loope
sub
inc
mov
push
std
push
jl
cli
jp
pop
xor
cltd
lret
pop
pop
insb
loopne
repz
add
movsl
aas
mov
mov
lea
mov
pushf
jns
lds
enter
inc
xor
out
pop
cmpsl
pop
sbb
dec
cld
rolb
mov
cmp
jb
sub
outsl
orb
sub
mov
cmp
in
jecxz
push
mov
aaa
sbb
mov
scas
orl
loope
popf
add
icebp
xchg
movsb
incl
sub
mov
adc
cld
inc
cld
les
adc
push
aad
fdivrl
imul
or
cmp
push
adc
mov
mov
add
jae
cmp
xchg
dec
lods
je
test
or
loopne
lcall
out
sub
pop
pop
mov
scas
ss
loop
pop
cld
inc
jl
and
xchg
data16
incl
sbb
ja
testb
pusha
dec
inc
scas
mov
int3
xor
loopne
lcall
pop
pop
enter
or
lret
jne
cmp
xchg
test
push
dec
loope
je
imul
aaa
cld
decl
in
inc
std
xlat
mov
ljmp
cmc
ljmp
in
insl
xchg
jb
add
or
mov
scas
push
in
pop
movsl
push
sar
jmp
inc
pop
fsubrl
fstps
fnsave
imul
adc
fs
into
int3
jg
inc
jnp
adc
fwait
sbbl
xchg
into
pop
popa
dec
sub
cmpsb
pop
push
push
je
test
lcall
push
sub
test
mov
fstpl
in
mov
int
jl
pop
outsb
jg
jne
sub
mov
cmp
loop
pop
cmpsb
ja
jbe
hlt
scas
adc
mov
mov
fidivrs
fisttpl
mov
hlt
fisubl
xchg
or
pop
inc
fwait
xchg
inc
add
jbe
lret
or
cwtl
ja
add
mov
cmp
dec
ret
sub
fdivrs
jp
scas
lea
in
or
dec
icebp
sub
inc
shlb
jbe
xor
notb
pop
leave
out
iret
fneni(8087
or
jno
call
pop
in
xor
hlt
lcall
xchg
bound
out
in
pop
push
jl
mov
lahf
dec
mov
dec
and
mov
lcall
xchg
cmc
sbb
mov
idivl
rclb
es
mov
sbb
pop
push
jmp
das
mov
lds
xchg
popa
hlt
sub
outsb
mov
pop
mov
cmp
sbb
adc
cmp
or
mov
out
sbb
fcomip
outsl
shl
add
fwait
lcall
jl
push
scas
cmp
mov
loopne
jle
push
rol
mov
hlt
call
dec
mov
xor
push
ja
call
xor
stos
leave
pop
sbb
js
pop
ds
jg
outsb
sub
fistpll
loope
std
mov
int3
sbb
sub
stc
call
ret
jae
jg
mov
mov
shrb
mov
testl
ficompl
ljmp
jnp
cwtl
jbe
fisubrs
femms
in
dec
pop
or
fwait
stc
scas
dec
jbe
jns
pop
jno
shrb
lods
daa
cmp
jg
pop
aas
movsb
sbb
cmp
xor
decl
sti
shlb
pop
sub
xor
fwait
jne
pop
or
decl
pop
les
inc
push
or
ljmp
add
cli
nop
test
mov
mov
push
pop
mov
aam
pop
insb
or
lcall
inc
or
ret
out
pop
iret
push
out
insl
push
out
setne
je
pop
lods
mov
ljmp
sbb
pmullw
int3
jns
lds
imulb
jge
sbb
cmc
pop
call
daa
mov
mov
fdivs
xchg
inc
imul
test
mov
jns
stos
scas
cli
in
jmp
shl
sbb
xor
xchg
mov
dec
mov
mov
aas
sahf
imul
incl
je
xorl
sub
fs
push
inc
imul
cmpsb
lods
and
push
daa
jge
incl
xor
scas
stos
adc
mov
ud0
push
fs
mov
and
leave
mov
mov
jns
xor
jns
pop
ds
jmp
in
insl
and
movsl
or
loope
sub
push
stc
mov
pop
sub
mov
imul
xchg
lock
and
daa
jecxz
adc
sahf
mov
movsb
xor
mov
push
je
add
inc
and
repnz
xor
push
adc
jo
jnp
out
adc
pop
loopne
jecxz
mov
sub
decl
and
cmp
ljmp
xor
insb
lcall
mov
lret
sbb
jo
or
jecxz
jns
shll
pop
lcall
pop
test
inc
lds
inc
mov
popa
dec
mov
fldl
out
jmp
lods
int3
cmp
std
and
or
notl
cld
or
dec
les
call
or
mov
fdiv
mov
pop
mov
pop
mov
push
es
fcoml
sub
daa
mov
cmp
std
push
cmp
lret
mov
add
lret
mov
cmp
fnstsw
lcall
sbb
mov
push
aas
test
scas
adc
push
inc
cmp
cmp
pop
gs
fbstp
imul
push
clc
push
push
pushf
ljmp
cli
push
mov
mov
clc
aaa
mov
mov
inc
shll
xchg
std
ljmp
shll
xchg
push
es
pop
pop
push
iret
pop
jo
stos
daa
sbb
call
shrb
dec
jg
dec
out
dec
sbb
icebp
dec
dec
test
test
dec
mov
jo
outsb
cmp
sbb
add
test
int3
pop
mov
out
scas
pop
in
pusha
mov
jmp
xor
xchg
push
push
fcomps
ljmp
mov
rorl
stc
dec
out
jmp
adc
sub
mov
int
cs
or
decl
jmp
cmpb
cmc
fsubrs
or
inc
dec
adcl
jl
jle
incl
push
repz
sub
xchg
mov
out
dec
ret
jne
addr16
lcall
call
aam
mov
movsb
cmc
rdmsr
int3
mov
loop
and
loopne
inc
mov
cld
flds
mov
or
pushl
mov
sub
loope
ja
inc
push
cli
pop
xchg
jmp
stc
xorb
in
ss
int3
shll
mov
lods
loop
mov
incl
or
add
loop
out
jae
or
sahf
ss
pushl
cmpsb
mov
ja
rcrl
push
iret
jbe
int3
push
rorb
test
incl
pop
enter
sbb
idiv
in
or
in
mov
sub
mov
jmp
inc
stos
mov
lods
jle
leave
sub
das
push
mov
mov
loop
lds
jmp
inc
add
int
jle
pop
test
repnz
jns
repz
lock
cmp
mov
rol
jle
mov
and
outsb
jmp
mov
mov
sbb
ljmp
rcr
mull
push
mov
adc
mov
push
fcomps
mov
js
scas
addr16
lea
or
and
lahf
xor
sbb
mov
sbb
stc
and
das
subl
nop
div
mov
inc
iret
lods
cmp
decl
push
addr16
jns
cld
ficompl
dec
les
push
adc
les
push
adc
mov
in
mov
call
inc
daa
divl
cmc
lahf
mov
incl
dec
lea
scas
movsb
scas
lock
jge
fwait
pusha
in
jno
adcl
ret
or
adc
ljmp
xor
outsb
faddl
push
das
frstor
insl
lcall
jbe
pop
icebp
aaa
adc
into
sbb
lock
add
add
stos
pop
cmpsb
and
in
jecxz
pushl
xor
repnz
jnp
sub
rcll
sti
das
and
sbb
inc
sub
cld
cmovne
jbe
push
and
das
pop
aam
aad
inc
lcall
test
js
popa
cltd
pop
faddl
jno
xlat
stc
sub
cmp
arpl
arpl
incl
add
movsl
bound
add
leave
pop
fstpl
mov
jg
sub
fs
lahf
dec
xchg
roll
mov
divb
adc
and
icebp
clc
and
adc
mov
cmpsl
inc
or
cmpsl
test
test
mov
pop
ret
popa
push
sahf
fs
sbbb
push
push
adc
lret
pop
test
lcall
mov
push
jae
stos
push
jle
ret
push
mov
cli
xchg
sbb
leave
out
aam
mov
pop
incl
mov
cli
mov
jmp
mov
fidivrs
inc
out
cli
pop
lcall
lods
insb
or
test
mov
xchg
xchg
cli
std
lahf
add
decl
in
addr16
lret
xor
lcall
mov
test
cmp
xor
fnstenv
and
sbb
ljmp
out
jns
mov
into
cmpsl
mov
pushf
shlb
test
and
mull
js
lods
xor
arpl
push
push
insl
mov
decl
push
cli
lock
ljmp
dec
jno
sti
fwait
in
js
popa
xchg
inc
sbbl
incl
loope
sar
gs
aam
adc
ljmp
notb
add
je
sbb
pusha
mov
pop
sbbl
cmp
xor
aas
fidivl
sbb
inc
inc
out
outsl
call
fs
fistpll
add
aad
jno
jle
aas
mov
loopne
xor
mov
call
mov
dec
and
xor
cld
pop
daa
xchg
adc
lds
inc
cmp
cld
sub
gs
xchg
dec
jmp
pop
out
scas
jo
int
ret
jae
arpl
sar
ljmp
clc
incl
mov
insl
dec
jnp
dec
mov
stc
or
filds
mov
lcall
add
mov
je
ljmp
jne
xchg
jns
incl
movsl
pop
xor
inc
sti
test
jge
adc
out
mov
pop
les
imul
call
fxch
ja
dec
mov
shrl
inc
cmp
jecxz
dec
jg
cmp
jmp
sahf
adc
sahf
add
push
dec
fdivrp
jmp
adc
lret
xor
mov
jb
pop
jg
in
lods
aad
lcall
xchg
xchg
and
scas
mov
lahf
mov
sub
pushl
jl
mov
xchg
stos
mov
push
ss
packsswb
filds
sbb
add
dec
push
das
sbb
cmp
outsl
movsl
cmp
stos
call
into
jmp
jg
pop
mov
push
dec
stc
push
pop
cmp
pop
or
xchg
daa
arpl
scas
adc
hlt
call
inc
jo
aam
imul
cltd
xchg
nop
clc
stc
push
inc
push
pushf
pushf
xor
gs
or
cmc
dec
dec
pop
mov
push
xchg
das
jbe
sbb
sbb
mov
out
mov
and
nop
pop
or
or
or
jns
mov
adcl
cmp
ljmp
adc
mov
mov
push
out
pop
lcall
lods
mov
jmp
pop
pop
xchg
clc
fcomps
push
mov
jae
rorb
mov
push
add
sbb
in
call
insb
popf
mov
inc
iret
xchg
pop
bnd
fadds
push
sbb
jns
inc
aad
mov
mov
out
dec
insl
sub
or
int
and
scas
xor
outsb
lods
icebp
pop
lds
pop
push
icebp
test
push
xchg
mov
push
pop
lret
push
inc
decl
movsl
mov
dec
and
inc
gs
pop
dec
pusha
and
int3
pop
jmp
and
test
incl
adc
or
aam
or
es
cmpsl
sub
inc
aaa
inc
jbe
incl
subl
cmp
push
push
jle
cmp
inc
sbb
xorb
xchg
shll
mov
add
inc
ds
add
jbe
and
lds
pop
jo
testl
push
mov
pop
lea
cmc
mov
cmp
dec
dec
cld
add
decl
lahf
lcall
pushl
mov
xor
sub
in
jmp
xor
inc
in
outsl
dec
jnp
in
loopne
adc
fwait
xchg
pop
insl
jae
adc
shld
popa
inc
inc
xchg
jg
jmp
repz
rorl
ret
dec
cmp
xchg
push
int3
push
mov
jg
repz
out
scas
data16
aad
push
clc
mov
call
cmp
jmp
or
inc
fcompl
and
popf
cli
lcall
ljmp
jb
call
adc
push
and
ss
jbe
or
test
je
jb
mov
jmp
push
jne
stc
xor
sub
lret
jl
shrb
stos
clc
dec
clc
in
ljmp
fsub
movsb
sub
inc
rclb
imul
mov
pushf
fsubr
or
decl
adc
and
out
stc
js
ss
dec
mov
ds
ljmp
rorl
push
mov
mov
adc
push
xchg
mov
sub
test
pop
inc
mov
adc
xor
lcall
call
mov
add
jns
arpl
fisttpll
out
sub
pop
insl
sbb
call
std
pop
adc
pop
cltd
push
daa
neg
stos
add
out
in
aas
lcall
faddl
iret
add
inc
adc
jnp
fists
adc
jecxz
push
call
add
es
out
int3
insl
push
jl
jmp
arpl
cmp
jnp
imul
jg
call
mov
cltd
push
flds
iret
jle
pop
adc
scas
out
or
jns
fstl
lcall
fisubl
xor
cltd
into
mov
xor
jmp
lods
inc
nop
or
pop
mov
popa
iret
addr16
addl
adc
mov
bound
pop
inc
or
inc
popf
insb
cmp
mov
xchg
decl
call
inc
inc
adc
pop
in
mov
cmp
scas
mov
jle
cwtl
lret
inc
call
cli
imul
stos
xchg
sbb
adc
and
fildll
pop
std
sbb
loopne
scas
std
or
mov
pushl
test
jmp
pop
xchg
jnp
adc
push
xchg
movntps
inc
ficoms
add
sbb
loopne
incl
xchg
stos
pop
loop
cmpsb
and
xor
cwtl
test
int
pop
aaa
dec
decl
lock
out
rorl
nop
loope
cmp
das
add
gs
in
fnstcw
push
sub
das
clc
sbb
stos
sbb
js
jnp
mov
test
incl
or
xchg
mov
cmp
mov
inc
insl
mov
pusha
cs
xchg
call
inc
fisttpl
popa
adc
adc
cmc
insb
rolb
push
pushl
dec
xor
or
out
xchg
xlat
lods
rep
lods
sub
cmp
xchg
test
lods
aam
mov
adc
cli
lahf
mov
lods
outsb
sti
add
inc
fisttps
fnstsw
add
inc
insl
lds
enter
ljmp
xchg
lret
jmp
jp
adc
lcall
ljmp
orb
out
clc
or
in
icebp
mov
imul
xchg
pop
loope
lea
popf
xchg
jecxz
cmp
pop
icebp
ljmp
cmp
dec
shrb
push
loope
push
adc
fnstenv
jmp
jl
mov
out
lret
jl
mov
cmp
fdivr
out
dec
mov
cmp
repnz
call
pop
push
negb
push
mov
cs
pop
repz
cmpsl
out
int
das
push
sahf
push
adc
cmpsl
int3
dec
incl
and
xchg
dec
jmp
imul
fs
push
lcall
decl
test
cmp
push
popa
rcr
clc
mov
xchg
mov
xchg
jne
pushl
adc
inc
mov
into
imul
movb
ljmp
push
aaa
mov
call
push
outsl
xor
int
xchg
mov
adc
rolb
jbe
mov
sbbl
jle
mov
cld
repnz
mov
or
and
sub
fdivrl
popl
jmp
mov
pushf
je
fmull
ja,pt
or
mov
pop
jp
sarb
adc
add
lcall
fldenv
lods
push
jae
jg
mov
lahf
xor
lds
add
mov
sti
outsb
jg
cs
cli
popw
in
aad
adc
pop
and
lock
mov
fcmovne
aaa
cltd
clc
jg
pop
mov
cmp
pushf
fnstenv
lock
js
and
adc
cmp
push
mov
push
sbb
xchg
sbb
lods
hlt
je
push
xchg
mov
loope
std
mov
lds
mov
sbb
mov
jnp
cmp
lret
adc
xchg
and
scas
xchg
lods
mov
inc
mov
decl
xor
cld
and
pop
es
and
out
lret
bsr
lods
lret
mov
cli
call
fstpl
hlt
push
dec
das
xlat
sbb
add
shrb
ljmp
test
add
cmp
cld
sub
sbb
pop
sbb
lret
enter
jmp
call
dec
repz
sbb
lahf
jge
dec
jge
dec
cld
decl
in
jmp
adc
cmp
sub
lcall
psubsw
xchg
jb
pop
sbb
ret
out
arpl
and
mov
sti
into
arpl
arpl
mov
fdivs
xchg
shrb
mov
add
out
clc
jecxz
add
repz
inc
dec
stc
or
sar
jecxz
fistpll
insl
sub
xor
ljmp
stos
or
les
jo
pop
jmp
mov
in
enter
sub
inc
repz
in
imul
ds
call
lret
subb
lcall
xor
subl
seto
les
push
pop
mov
mov
lea
xchg
and
mov
jae
gs
inc
popa
dec
lcall
xchg
fisttpl
movl
icebp
adc
xchg
adc
dec
mov
sti
fildll
mov
stos
sbb
scas
or
cmp
idiv
jnp
test
lret
xchg
aad
pop
xor
imul
cmp
add
out
inc
ljmp
dec
lods
pop
js
dec
and
mov
fs
add
mov
xchg
dec
out
mov
push
test
popf
xchg
arpl
xor
cmpsl
rclb
and
push
adc
inc
bound
testl
shll
icebp
mov
loopne
xor
movsl
mov
call
scas
out
aas
shlb
out
les
les
cs
mov
xlat
fcomip
pushl
jno
aas
mov
sbb
inc
jg
xlat
xchg
insb
xchg
out
adc
stos
cmpsb
push
jp
jl
or
sbbb
icebp
icebp
scas
test
out
test
nop
aaa
ja
ss
fldt
xchg
sub
push
mov
push
ljmp
testl
movsb
enter
or
in
and
loop
sbb
pop
cmp
xor
pminub
stos
push
jg
mov
dec
lret
mov
lock
sub
fs
icebp
in
fiadds
pushl
iret
in
xchg
add
hlt
rclb
push
iret
xchg
push
aas
in
mov
ljmp
out
xchg
push
test
es
test
jno
and
mov
adc
incl
mov
jne
push
mov
cmp
cmp
or
xchg
js
inc
jne
addr16
sub
mov
xor
mov
stc
out
or
paddb
mov
fdivs
ret
adc
push
das
xor
sub
jmp
mov
jg
pusha
mov
sbb
mov
loopne
sbb
add
push
rorb
jno
inc
in
das
pop
mov
in
outsb
bound
dec
stos
xchg
orps
jno
push
dec
or
push
stos
mov
mov
inc
in
cmp
mov
imul
lcall
push
stos
jecxz
into
nop
stc
shlb
xchg
mov
inc
rol
pushf
xchg
fs
push
pushf
and
xchg
adc
sbb
inc
nop
jnp
lds
cmpsl
push
jo
fbld
inc
je
int3
push
jmp
mov
shlb
imul
sbb
xor
cmp
inc
int
jb
adc
mov
int3
leave
add
bnd
inc
shl
out
dec
ljmp
jbe
lea
jnp
lock
mov
mov
outsl
iret
pop
mov
inc
fiaddl
mov
mov
xchg
cmp
mov
jmp
in
xchg
cmpsl
or
decl
out
mov
and
push
repnz
mov
inc
int
pop
jmp
xor
call
ljmp
xor
jno
pop
and
ret
sbb
shll
incl
xchg
jmp
mov
adc
xchg
inc
push
data16
andb
cltd
inc
mov
lods
cmp
in
call
jmp
or
push
fstp
add
inc
outsl
cmpsl
out
adc
pop
lret
aas
test
cs
dec
ds
and
mov
addr16
adc
pop
and
in
push
cs
std
cmp
ss
or
das
incb
rolb
addb
fxch
shl
push
adc
pop
call
pop
jmp
adc
or
add
or
inc
sub
loopne
std
ljmp
neg
xlat
push
inc
push
arpl
push
cmp
mov
clc
call
push
ret
scas
mov
popa
cld
jo
lods
subb
mov
mov
imul
sub
gs
arpl
test
lahf
out
cli
inc
pop
push
mov
cmp
in
orl
shlb
sub
mov
jmp
mov
jne
cwtl
in
mov
xor
rcr
adc
pop
stc
push
jg
mov
fisubrs
cmp
mov
sub
data16
shlb
push
dec
xlat
sub
jb
lret
bound
mov
loopne
adc
dec
push
subl
lea
adc
enter
push
shl
mov
mov
xorl
pop
addl
les
scas
xlat
mov
push
movsl
adc
mov
mov
lods
mov
insl
pushf
out
sbb
pop
inc
mov
ja
popa
arpl
int
lcall
dec
sahf
int3
stos
pop
sub
popf
stos
popa
inc
dec
sbb
sub
ret
inc
jno
pushl
push
outsb
sbb
lret
call
das
fsts
jne
decl
iret
jae
jge
loope
pop
in
loopne
fsubs
pushf
test
cmp
adcb
or
push
cmpsb
das
lods
jecxz
mov
ret
fmuls
scas
dec
shr
test
inc
ja
out
test
xor
fiadds
loope
cmp
cmpsb
mov
xor
mov
shlb
jbe
jmp
mov
ret
sbb
pop
loop
or
mov
lcall
add
cmpsl
inc
pusha
inc
jo
mov
jns
pop
xchg
js
push
incl
or
sub
dec
pop
enter
dec
or
andl
and
cmc
push
mov
push
adc
add
dec
ja
stos
insb
push
adc
decl
xchg
fnstenv
mov
inc
or
mov
fbld
ret
xchg
call
neg
fcmovu
mov
mov
js
mov
stos
pushl
dec
pop
fsubl
mov
pop
inc
jno
mov
leave
stos
stos
dec
mov
pusha
mov
push
cmp
and
mov
dec
andb
sbb
push
dec
push
fwait
pop
dec
and
into
dec
jp
mov
jbe
push
mov
call
int
movsl
std
ror
lock
shlb
mov
xor
arpl
aaa
std
jno
push
dec
imul
jp
and
aaa
fistps
jmp
stos
or
sub
mov
push
scas
or
cli
jne
pop
cmp
lret
fs
jns
sub
push
iret
mov
cld
insl
testb
adc
in
out
push
cmpsb
and
dec
xor
cld
lcall
in
dec
jnp
and
push
mov
push
repnz
cltd
test
scas
cli
jmp
out
pushf
cld
fnsave
dec
or
std
mov
ret
cmp
cltd
or
fbstp
inc
mov
rorb
lods
mov
jae
push
inc
pusha
xchg
mov
lcall
mov
stc
mov
xor
stos
pusha
int3
popa
out
fs
out
call
dec
mov
xchg
inc
sar
arpl
push
cmpb
ret
fwait
dec
sbb
mov
stos
pop
push
inc
es
mov
mov
mov
inc
aam
cs
les
dec
test
ficoml
arpl
jg
dec
sahf
ja
lea
inc
and
or
cli
incl
into
test
aad
mov
fildll
sbb
inc
out
aam
insl
into
jl
xchg
insb
xlat
mov
sar
aas
push
jecxz
ljmp
insb
daa
mov
lods
ret
xchg
mov
das
pusha
aaa
bnd
in
cli
xor
mov
pop
movsb
lds
mov
testb
push
mov
pop
sub
mov
mov
pusha
and
jmp
andb
iret
mov
cld
test
xchg
icebp
call
jg
mov
mov
or
decl
mov
jmp
mov
jo
ss
je
push
inc
inc
xchg
ljmp
sub
popf
adcl
mov
frstor
add
ljmp
clc
pop
fcmovnbe
lahf
mov
hlt
cwtl
rcl
icebp
push
data16
fiadds
loopne
fcomip
out
ss
mov
ss
dec
in
insl
push
dec
inc
ljmp
mov
lods
cli
dec
mov
push
jb
loope
xlat
hlt
dec
xchg
cmp
cmp
jmp
repnz
pop
test
jb
adc
imulb
mov
pop
cmp
scas
insl
test
xor
inc
jb
cmp
xor
ljmp
repz
ja
push
inc
and
pop
clc
sub
pop
fdivrp
scas
cli
incl
js
cmpsl
in
dec
in
sbb
cmp
incb
das
mov
cmp
call
out
std
mov
push
xlat
xchg
movsl
pop
arpl
int3
std
mov
fistps
pop
push
cltd
bound
jno
dec
add
xchg
mov
cs
pop
stos
jne
lods
jge
mov
stc
std
push
insl
out
pusha
les
lods
test
imul
sub
lea
sar
incl
mov
scas
iret
and
and
inc
add
decl
mov
push
mov
adc
jge
das
les
jns
jecxz
jmp
dec
int
push
mov
xor
inc
dec
adc
aam
inc
pop
jmp
jg
mov
mov
js
mov
dec
sar
dec
ljmp
jmp
mov
decl
mov
mov
mov
sbb
adc
xchg
and
adc
incl
inc
mov
test
mov
push
js
rcr
sbb
jg
pop
es
in
inc
xchg
push
mov
mov
jge
cmp
call
test
sbb
xchg
xlat
cmp
pop
pop
repz
call
push
jns
cmp
enter
lret
mov
adc
jmp
hlt
addr16
mov
fs
add
xchg
push
cltd
xchg
xor
push
push
mov
sbb
out
aad
push
adc
out
arpl
scas
inc
mov
xchg
dec
push
pop
mov
pop
xor
push
pop
xor
dec
jge
scas
clc
call
sub
pop
loop
sbb
jbe
xor
or
jg
jg
mov
aas
dec
inc
inc
inc
mov
clc
ljmp
inc
icebp
add
rcrb
pop
sub
sub
push
nop
jmp
pop
sbb
dec
mov
jbe
add
and
imul
ljmp
cwtl
xor
cwtl
jmp
sarb
int3
loop
mov
outsl
push
mov
add
xlat
test
mov
push
sub
push
mov
and
jle
ret
cmp
mov
jb
push
cmp
inc
fwait
cmp
jl
xchg
push
mov
xchg
cmpb
jo
jns
ficoml
mov
mov
and
mov
imul
inc
cmp
out
out
xchg
not
push
pop
jle
pop
xchg
imul
cmp
fwait
dec
lea
adc
xchg
add
push
mov
lds
incl
xchg
adc
adc
lds
mov
in
imul
aam
inc
push
mov
sar
stos
inc
cmp
sub
fs
dec
mov
addb
jecxz
ds
iret
xor
outsl
filds
imul
std
sub
push
loop
aad
loopne
mov
xchg
leave
and
fdivr
jg
data16
leave
push
fsts
aam
int3
sar
lcall
pusha
xchg
adc
je
push
push
sbb
test
andl
test
inc
xorb
mov
ljmp
outsl
sbb
loopne
push
xor
inc
mov
push
inc
mov
jns
xchg
icebp
sub
subl
clc
jmp
adc
xchg
out
mov
mov
sbb
aad
sbb
mov
jmp
out
imul
ret
mov
in
jnp
sub
das
icebp
das
jg
dec
mov
add
cmp
lock
or
lret
imul
incl
sar
insb
out
test
cmpl
add
cli
jg
decl
les
adc
fdivrs
mov
mov
sub
sub
hlt
ljmp
leave
mov
sahf
pop
movsl
sub
push
std
pop
or
ret
sahf
fldz
call
push
mov
mov
xchg
mov
xchg
push
fcmovbe
xchg
loope
popa
xchg
shll
aam
cmp
pop
cwtl
std
lock
outsb
add
nop
shlb
roll
popf
xor
inc
imul
xchg
out
and
out
mov
pop
stc
jmp
stos
loop
out
inc
enter
pushf
ret
mov
decl
push
inc
dec
lahf
fistps
push
lods
pop
jge
jmp
shl
pop
pop
lea
js
mov
jle
fistpll
cltd
inc
pop
mov
enter
inc
dec
xor
aam
sub
mov
out
lock
cli
test
mov
dec
cmc
movsl
loop
pop
rorb
mov
lds
clc
sbb
call
stc
cmp
stos
sub
push
lea
add
xlat
mov
jmp
add
daa
dec
cmp
sub
fstps
lods
or
ljmp
lcall
stc
orl
clc
fsub
jg
sbb
xor
inc
mov
leave
arpl
push
pop
mov
push
nop
adc
mov
ret
iret
or
mov
icebp
jne
jmp
mov
dec
push
xor
jp
jns
ljmp
cmpsl
je
mov
nop
cmp
mov
lcall
sbb
scas
test
cmp
jl
mov
loope
pop
mov
decl
cs
dec
lods
leave
adc
shrb
xchg
sahf
lea
faddp
les
icebp
out
popa
adc
ja
dec
push
movsl
dec
xlat
xchg
or
mov
add
sarb
loope
and
dec
stos
out
stos
mov
sarb
inc
les
lods
adc
mov
mov
mov
and
and
icebp
fsubl
fmulp
jge
int3
lcall
mov
dec
out
jmp
xchg
push
sbb
push
inc
test
fs
loopne
jns
and
pop
inc
in
cmpsl
popa
push
pop
pop
sti
and
popa
add
xor
xorb
sar
aaa
push
or
lea
sub
fnsave
stc
mov
cltd
mov
hlt
roll
in
nop
decl
int3
sub
lahf
std
outsb
movb
dec
or
fimull
mull
jnp
adc
decl
push
pop
fstl
divl
fwait
leave
mov
jae
outsb
cmp
movsb
lcall
repnz
imul
hlt
dec
sbb
push
inc
xor
sarb
mov
mov
stc
and
lcall
loopne
iret
pop
loopne
decb
movsl
lea
cld
iret
mov
les
stos
lcall
pop
jle
dec
sbb
nop
push
sub
rorl
push
pop
repnz
ljmp
jne
rclb
call
fists
jne
inc
jnp
mov
sub
js
mov
std
out
push
sub
mov
cmp
mov
sahf
mov
adc
pop
lret
imul
lahf
arpl
mov
fiaddl
movsb
and
pop
xor
sbb
mov
dec
pop
and
push
add
dec
add
popa
jg
mov
aas
cli
push
and
pop
mov
xchg
mov
jno
cmp
mov
in
cs
jl
insb
loope
or
std
insb
stos
mov
dec
xlat
movsl
incl
or
nop
push
lods
jge
xor
push
leave
int3
sub
sarl
add
incl
pop
pop
mov
fcompl
stos
and
call
dec
add
adc
aas
movl
jl
insl
mov
stc
adc
pushl
or
ds
dec
push
mov
aad
push
add
push
int
fcmovne
scas
inc
mov
mov
fwait
jg
pop
movsl
call
push
sbb
push
fldcw
jmp
loope
test
sub
out
mov
scas
pusha
lods
out
cli
aad
incl
mov
pop
aas
mov
and
nop
mov
jns
pushl
lock
and
pushf
fstps
movsl
jmp
and
dec
xor
pop
stos
xchg
dec
pop
lods
pushl
and
lahf
test
pop
mov
popf
testl
jmp
jae
xchg
sbb
pop
or
add
cmp
sbb
mov
popl
push
sbb
out
add
jge
push
add
cltd
sti
pop
sbb
pop
rcll
pop
ljmp
inc
shr
sub
incl
outsb
push
pop
adc
and
push
js
nop
sti
shl
dec
or
mov
xor
mov
jnp
cmpl
shlb
push
mov
xchg
les
insb
loop
repz
sbb
push
into
cmpsl
call
or
mov
mov
std
cmp
aaa
lret
call
imul
test
rorb
cmp
push
mov
das
es
test
jbe
mov
leave
dec
dec
aad
ss
notb
ljmp
push
insb
pop
dec
std
mov
xchg
dec
adc
stos
das
cmp
loope
pop
in
mov
pushl
jp
cmp
aaa
bound
movb
mov
dec
inc
push
add
decl
adc
fwait
movsb
gs
jmp
cmp
movsb
imul
add
xchg
pop
push
movsb
fs
sub
xor
sub
sub
lods
je
or
jmp
das
enter
jmp
ljmp
outsl
cmp
pop
fildll
dec
hlt
dec
nop
add
jmp
in
divb
pop
sar
pop
fsts
addb
mov
or
adc
hlt
jmp
call
adc
mov
test
iret
int3
and
dec
sub
jle
test
ljmp
imul
cmp
or
daa
cmpsl
std
xchg
loope
addl
pushl
lret
sub
dec
adcb
mov
lcall
ljmp
jo
pushf
lods
shl
pop
xchg
dec
sti
jg
roll
ret
push
es
fs
and
cmp
add
out
push
jecxz
subl
setae
mov
dec
je
aaa
cmpsw
mov
cld
pop
loopne
imul
add
add
mov
mov
or
aaa
lret
push
add
dec
pop
ret
adc
out
clc
lcall
add
xchg
or
in
call
xchg
mov
orb
lods
add
pushl
sarl
jns
pop
or
lds
xlat
fneni(8087
xchg
popf
add
movsl
pop
addr16
lcall
lock
ljmp
lahf
cld
ja
loopne
mov
cmp
jg
adc
push
test
decl
sub
pop
xchg
cmp
movsl
push
xchg
pop
push
and
mov
xchg
ss
or
push
sbbl
and
scas
jns
js
ret
test
mov
jmp
inc
ret
and
mov
sub
ja
pop
popf
mov
push
mov
decl
add
or
xor
repz
and
pop
rorb
lcall
mov
mov
fs
mov
add
sbb
add
incl
cmp
into
push
cmp
loopne
jl
sar
loope
mov
or
adc
jae
mov
jo
insl
fidivrl
stc
adc
xchg
cmp
pushf
inc
cmc
ret
ret
andl
pop
imul
out
mov
xor
arpl
xchg
push
cvtpi2ps
mov
push
dec
add
push
cltd
sbb
jo
push
test
in
ss
fstl
jge
pop
lahf
sahf
or
sbb
pop
or
and
repnz
loop
mov
push
mov
push
jnp
incl
xchg
sub
lock
data16
xchg
out
dec
ja
xlat
add
lcall
clc
xorl
fs
es
cli
loopne
int
push
mov
jb
and
cmp
add
andl
inc
insl
imul
jle
cltd
das
sbb
mov
lahf
loope
sub
mov
push
mov
mov
adc
test
add
movsb
rcl
mov
test
pop
mov
rcl
pushl
punpcklwd
push
aad
lock
loope
mov
loopne
andb
xchg
pop
jg
nop
icebp
mov
mov
sbb
stos
nop
mov
nop
push
cmp
or
insb
jg
sub
loopne
sbb
fcoms
sarl
sbb
int3
popa
std
call
int
sbb
enter
leave
movsb
sahf
out
faddp
leave
jl
add
jns
aas
andl
pop
ljmp
pushf
ljmp
sub
push
nop
shll
icebp
add
jae
mov
out
test
ds
push
das
mov
xchg
cld
or
sbb
mov
lahf
shlb
test
les
ljmp
test
mov
out
cwtl
lods
enter
je
in
loope,pn
test
jae
lds
decl
push
and
mov
imull
jno
dec
dec
lock
sbbl
int3
cld
or
adc
sar
adc
outsl
lcall
fnsave
enter
int3
rorl
bound
mov
pop
and
gs
pop
andb
add
in
adc
lcall
lret
lahf
mov
out
adcb
out
cwtl
add
dec
movsb
leave
push
push
and
nop
mov
call
push
sub
jmp
mov
adc
jg
add
pop
mov
jg
jmp
pop
push
std
mov
sbb
stos
js
push
jge
xorb
call
outsb
cmp
idiv
jecxz
sub
sti
fdivrl
leave
scas
mov
enter
jmp
or
test
push
sbb
mov
mov
pop
in
call
test
inc
call
jnp
andl
or
fstps
enter
in
jmp
loope
inc
aas
push
jg
adc
out
jns
int
aaa
push
push
pushl
fcompl
out
int3
lret
pop
loope
and
icebp
push
aas
fisttpll
cwtl
pop
movsl
or
incl
and
popa
jne
dec
mov
xor
imul
in
mov
jmp
insb
mov
adc
loopne
testb
insl
fiadds
dec
mov
jne
aaa
pop
je
mov
sub
jne
mov
add
nop
in
or
decl
aaa
out
lcall
mov
rolb
loop
shl
and
cmpsb
jns
jg
push
xor
jmp
pop
dec
xor
pop
test
es
mov
inc
mov
mov
inc
scas
out
cmpsl
out
xor
push
lea
int3
lds
mov
lret
ljmp
shrb
lock
push
popa
pop
test
sbb
iret
inc
fs
jg
jmp
pop
mov
inc
add
xor
scas
cmp
ljmp
ficoms
fnsave
hlt
gs
and
xchg
jg
pushl
inc
xlat
nop
mov
push
dec
out
repz
and
movsbl
pushl
outsl
fcmovbe
sbb
roll
cmp
or
push
cmc
int3
cmc
fisubrs
jbe
pushl
shll
ja
add
xchg
push
pop
jp
and
cmp
imul
xor
mov
out
call
or
pop
push
aaa
jmp
cltd
cld
fdivl
sub
mov
jo
dec
push
lock
pop
cmp
rolb
xor
lret
decl
es
subl
and
jle
test
nop
push
inc
mov
cld
cmp
adc
xlat
cwtl
pop
mov
xor
or
inc
lret
or
mov
cmp
jmp
xchg
scas
aas
push
cmc
xchg
xor
lods
popa
xor
int
fs
pop
incl
dec
pop
pusha
and
out
fcomps
sub
out
jb
mov
outsb
dec
inc
push
push
and
in
aam
pushf
nop
sub
aaa
in
push
fisttps
lret
xchg
hlt
pop
outsl
in
test
call
leave
push
push
mov
xchg
jns
cmpsl
adcl
xchg
out
sbb
pop
popa
push
decl
and
nop
push
call
mov
stos
mov
xchg
xchg
sbb
fidivrs
enter
ss
xchg
enter
into
mov
hlt
mov
data16
push
lods
outsb
pop
icebp
aad
imul
mov
lcall
jbe
scas
dec
rclb
mov
jnp
push
fbld
jb
mov
push
das
inc
cmpsl
mov
int3
fcmovu
pop
sarl
push
rcrl
cmp
mov
push
in
pushl
std
hlt
or
mov
sbb
std
mov
dec
mov
imul
lods
fiaddl
push
push
ljmp
add
shlb
cmp
xchg
lcall
or
inc
ja
test
pop
jp
push
inc
jns
adc
jne
into
out
cld
push
jnp
incl
test
arpl
fdivs
push
fildll
pop
addr16
sbb
hlt
ja
in
andl
clc
cmp
jp
cmp
sbb
mov
push
test
inc
ljmp
push
jnp
test
int
push
cmpsb
sbb
pop
lock
jle
inc
outsl
inc
mov
dec
jmp
cmpl
imul
cmp
push
scas
jae
int
inc
lret
pop
pop
cmp
test
mov
mov
lcall
hlt
sub
rcrb
dec
ret
pusha
scas
mov
cltd
add
fisubrl
adc
and
jmp
ds
sub
xchg
mov
pushf
sbb
sub
mov
mov
nop
scas
pop
jnp
jle
pop
sbb
call
mov
push
orb
ret
add
cmp
ret
mov
jbe
clc
sub
scas
clc
ljmp
cmc
xchg
mov
mov
push
or
pop
mov
or
stos
mov
ss
fiaddl
je
aam
negl
js
push
push
gs
fisubl
icebp
mov
ljmp
test
cmp
bound
in
push
and
sub
mov
mov
cmp
call
sbb
setae
adc
lcall
lcall
pop
nop
jp
sub
jno
lods
dec
push
cltd
js
mulb
and
mov
arpl
pushl
shrb
inc
loopne
mov
pop
ret
inc
int3
cld
inc
mov
test
jbe
call
jmp
idivl
mov
jo
in
mov
lret
frstor
push
idivl
xchg
test
pop
lcall
fs
sbb
fcoms
into
dec
insl
inc
pop
cmp
call
out
fwait
loop,pt
fdiv
in
sbb
insb
fnsave
xchg
and
loopne
jb
decl
in
push
or
jbe
in
nop
jmp
ss
mov
in
ljmp
mov
mov
bound
xchg
and
incl
push
and
pop
clc
push
jge
dec
je
mov
cmp
lcall
popf
mov
push
sub
out
mov
addr16
or
std
loopne
cwtl
add
push
pop
aad
ficoml
fildl
xor
inc
inc
mov
ror
xor
xchg
dec
and
mov
imul
negl
call
inc
call
sbb
filds
mov
ljmp
insb
push
repnz
icebp
pushl
push
rolb
out
lahf
mov
inc
stos
test
push
js
mov
jge
cmp
cli
lahf
fucom
cmpsb
testl
push
fistpll
call
gs
out
jnp
fdivp
adc
adc
sub
loopne
sub
call
pushl
sub
inc
fs
stos
lret
add
xchg
fnstenv
inc
cmc
addr16
sub
divl
cli
arpl
call
mov
cmp
fnstenv
and
xchg
mov
neg
add
mov
jbe
dec
loope
push
add
imul
outsb
adcl
fdivrp
pushl
and
xchg
rcrl
mov
jb
cmpsl
shll
cltd
sarb
mov
scas
cs
lea
jg
dec
outsb
cmp
ja
push
dec
xchg
add
je
push
or
adc
xchg
std
and
mov
pop
sub
das
cs
mov
jge
mov
push
push
imul
push
ljmp
leave
push
scas
inc
push
jns
mov
test
sbb
jb
cmpb
mov
pop
idiv
call
les
stc
mov
rolb
sub
jle
cmp
cmc
test
inc
lods
es
push
lcall
lahf
xor
repz
add
in
sub
gs
cmp
fsubp
test
jnp
scas
clc
jmp
rolb
jmp
into
sbb
xchg
lcall
dec
pushf
push
movsl
pop
hlt
pop
orb
out
fstps
push
lock
incl
ficoms
out
ror
in
inc
pop
ret
sbb
shll
and
push
xchg
xchg
or
decl
jecxz
lods
cmc
dec
inc
ss
je
cwtl
shll
ss
stos
ds
xchg
push
icebp
aad
imul
mov
daa
lds
and
lret
test
rcll
out
mov
stos
aaa
push
cltd
not
inc
xor
decl
push
lea
pop
jecxz
cmp
stos
cmp
aaa
sbb
fwait
scas
push
std
jmp
mov
sbb
cmpsb
lcall
sbb
mov
adc
decl
pop
fiaddl
xchg
sub
mov
aad
mov
inc
jbe
xchg
push
add
ljmp
imul
cmp
rcr
pop
jg
movsl
cmp
push
das
jg
fldenv
lcall
mov
imul
push
mov
repnz
leave
rcr
xchg
sub
sbb
jl
ja
or
mov
xlat
jg
fisttps
inc
insb
les
xchg
ljmp
clc
push
ret
out
shl
sub
fisttpl
xor
sbb
iret
daa
ljmp
clc
mov
dec
and
sub
mov
aam
daa
inc
and
pushf
xor
xchg
add
or
test
xchg
xor
in
das
xor
mov
das
test
cwtl
jmp
pop
testl
out
aam
call
aaa
pop
dec
mov
mov
pop
clc
lcall
and
dec
dec
adc
xor
sub
popf
in
incl
les
add
inc
ja
fsub
push
leave
ja
sbb
cmp
fldt
jecxz
mov
rol
ja
addr16
add
mov
mov
mov
pop
insl
mov
inc
xchg
out
push
mov
pusha
leave
sti
and
loop
roll
mov
sbb
xchg
call
pop
or
cltd
loope
push
mov
into
cmpsl
mov
pop
adc
ret
pop
dec
loope
out
movsl
arpl
or
arpl
jg
and
repnz
jmp
mov
stos
cmpb
mov
lret
inc
add
mov
mov
out
inc
dec
rclb
pop
aad
pop
ret
sub
call
xor
mov
pop
pusha
cmp
sub
xchg
dec
xor
je
ja
jp
dec
mov
pop
dec
jmp
aad
xchg
push
inc
jns
push
sbb
adc
pusha
push
add
inc
and
je
push
ljmp
outsl
lods
gs
int
push
sub
sub
incl
mov
add
call
loopne
rep
and
pop
rcrl
dec
test
jle,pt
xor
push
cs
cld
pushl
ljmp
cld
jp
mov
adc
out
in
ss
lcall
or
int
push
cli
hlt
push
jecxz
xorl
cmc
add
inc
sti
pop
pop
andb
cvtpi2ps
mov
jg
dec
mov
mov
push
xor
sub
test
insl
sbb
add
outsl
pop
and
negl
fbld
stos
fdivl
pop
repz
test
push
pop
lock
imul
lahf
nop
mov
in
clc
adc
jg
push
mov
and
xchg
hlt
inc
sub
add
mov
sub
lods
inc
dec
orl
mov
xchg
jecxz
sbb
aam
adc
xchg
xor
mov
cli
bound
mov
sbb
xchg
jne
cltd
nop
shrb
jg
mov
jnp
sub
arpl
incl
jbe
jecxz
lahf
mov
lret
jno
test
xor
clc
in
decl
outsl
jle
dec
and
fnsave
sub
dec
in
pop
adc
cli
inc
jnp
mov
fwait
ja
mov
jmp
cmc
jnp
jg
pop
mov
pop
dec
sbb
add
in
nop
xchg
mov
inc
jg
mov
xor
pop
divb
decl
cmpsl
xor
pushf
ds
cltd
add
incl
aam
adc
mov
mov
jg
shlb
sbb
call
stos
or
shlb
aas
push
call
and
or
lahf
lret
xchg
insl
pushl
rcrb
push
mov
aaa
dec
xchg
sbb
popa
js
jp
out
pusha
hlt
shl
jb
jne
scas
dec
cwtl
cmc
jns
adc
push
pop
push
xor
or
outsb
mov
and
mov
ljmp
nop
sub
lea
sub
out
lret
out
xchg
sub
data16
mov
icebp
std
inc
xchg
or
out
imulb
jns
push
cmp
fwait
lods
pop
xchg
rorb
xor
enter
xchg
and
mov
ret
scas
inc
daa
dec
xor
push
xor
fldl
insb
std
lcall
fcompl
xor
mov
jmp
arpl
or
dec
mov
call
je
test
ret
pushf
insb
fwait
adc
daa
mov
mov
jge
sti
jg
call
orl
and
lods
jl
xor
incl
inc
inc
add
dec
mov
mov
lds
popa
sahf
mov
xchg
pop
adc
ljmp
cld
rclb
dec
xlat
fisubrl
iret
les
jb
push
aaa
inc
in
pushl
mov
mov
or
inc
jmp
push
sbb
pop
mov
jmp
sti
sub
add
push
test
pop
fisubl
ret
loopne
and
mov
call
or
pop
mov
mov
sahf
into
xchg
pop
and
aad
sub
and
ret
add
and
jmp
lods
and
sub
idivl
mov
mov
mov
xchg
cmp
sbb
xor
cmp
dec
inc
std
adc
lret
rcrl
into
dec
pop
sbb
ljmp
sbb
add
xlat
call
xor
popa
pop
pop
sub
cmp
push
push
iret
in
ljmp
sti
xchg
mov
add
jp
pushl
mov
fldenv
cmc
or
mov
rorw
je
mov
in
movsb
xor
mov
incb
repnz
adc
decl
mov
dec
xor
shll
inc
ds
sbbl
call
incl
mov
cld
and
sub
ss
mov
cltd
call
sbb
jmp
jg
stc
mov
mov
fldl
enter
push
inc
sbb
bound
cmp
push
jge
out
cmp
aad
ret
test
dec
loopne
jmp
out
icebp
mov
mov
les
mov
cld
sub
loope
push
mov
xchg
dec
imul
stos
dec
loope
stos
sar
ljmp
lods
mov
inc
bound
dec
clc
ds
jl
inc
mov
add
pop
or
mov
pushl
addr16
mov
fisttpl
dec
dec
sub
scas
jmp
sub
mov
cmc
test
push
jecxz
pop
scas
inc
cmpl
fildll
and
or
and
fwait
clc
jg
bnd
jle
pop
inc
push
pop
fwait
mov
xor
pop
ss
rclb
loope
jl
pushf
call
sbb
and
mov
movd
and
iret
mov
decl
enter
ret
lods
movsb
ret
rorb
xor
adcl
sbb
cmp
adc
lds
mov
in
jae
fcomip
out
pusha
push
jp
cs
in
push
pop
loopne
sub
pop
push
orl
scas
imul
cmp
sub
jg
jo
inc
divb
mov
shll
mov
ljmp
jno
test
and
stos
jbe
mov
xor
ds
decl
out
ret
iret
loope
push
mov
adc
push
jo
hlt
jo
jmp
dec
cmc
xchg
fs
leave
dec
push
lods
mov
lret
int3
pop
jns
inc
xchg
push
lahf
decl
mov
negl
fildll
bound
fcomps
pop
pop
imulb
add
out
scas
or
mov
mov
iret
sub
or
ss
test
lret
jo
sarb
lcall
mov
xor
inc
nop
cltd
dec
dec
fldt
lcall
mov
fdivrp
jmp
addl
cmp
pushf
int3
test
loopne
xchg
push
rclb
enter
dec
call
xchg
or
inc
jmp
mov
cmp
xchg
testl
mov
iret
add
pushl
cld
cmp
sbb
mov
shrb
clc
mov
push
lods
xor
aaa
ja
stos
dec
adc
mov
or
jmp
push
push
mov
and
jmp
popa
inc
arpl
cmpsl
sahf
dec
adc
xchg
outsb
sbb
pop
adc
mov
adc
aaa
call
imul
rclb
jb
in
mov
sbb
fstps
lret
sahf
pushl
in
fnstenv
mov
out
outsb
fbstp
push
mov
cmpsb
or
sub
lcall
fstpl
aas
jo
mov
pop
cmp
pusha
push
fcoms
mov
pop
cmc
pop
dec
push
jmp
xchg
aaa
pop
ficompl
out
aad
inc
clc
fcmovu
mov
xor
ret
frstor
push
adc
aad
int3
push
popa
push
fwait
mov
ljmp
xchg
ret
xchg
inc
add
add
pop
movsb
lds
es
mov
cmp
subb
sub
sub
jmp
sub
and
or
cwtl
cld
loop
mov
mov
dec
cmp
add
cmp
fs
es
jle
popa
or
jmp
and
icebp
shl
ja
cwtl
cmpsb
cld
and
call
lods
fsubp
scas
lods
js
aas
pop
and
xor
lock
insl
dec
fldenv
pop
cmpsb
or
add
addr16
pop
hlt
sbb
xor
add
cmp
mov
dec
sbb
bound
lcall
push
sbb
mov
icebp
dec
dec
push
sar
lcall
or
and
repz
xchg
push
js
js
mov
ljmp
jl
sbb
and
aaa
add
pop
push
scas
xor
mov
enter
cmp
decl
lret
pop
dec
insl
xchg
xchg
movsl
flds
push
pop
je
fwait
loop
sub
push
sti
icebp
pop
xorb
inc
incl
into
or
mov
in
int3
aam
and
jo
fstl
ror
xor
les
dec
adc
pushl
dec
clc
movsb
iret
test
test
add
mov
sarl
cmc
lcall
pop
mov
inc
sbb
hlt
adcb
mov
jmp
jge
lods
push
sub
sbb
jecxz
lock
dec
and
sub
jnp
jmp
cli
dec
sub
dec
sub
addr16
dec
scas
jnp
pop
shl
jb
cmpsl
in
lea
mov
fnstenv
or
ja
mov
cmpsb
mov
outsl
cli
jmp
push
pop
dec
add
mov
xchg
sub
ret
pusha
inc
popa
mov
hlt
sar
mov
pop
insl
loopne
lods
rcr
mov
add
mov
ljmp
jne
mov
fistpll
dec
push
mov
sbb
adc
mov
mov
call
adc
aaa
and
add
in
jle
clc
das
out
clc
xor
nop
test
jmp
cmp
cmpsl
call
sbb
cs
pushl
fidivrl
push
jae
rol
out
lods
ja
pop
ret
mov
push
loop
and
jecxz
in
dec
pop
call
adc
add
sahf
aaa
test
cmp
mov
push
mov
repz
and
call
gs
sub
ja
pop
lds
dec
jg
aas
mov
jg
or
lret
xchg
pop
mov
mov
cmp
cmp
inc
test
out
jbe
sbb
loope
or
lock
mov
imul
in
cli
das
daa
jg
decb
scas
fcomp
sub
cld
mov
xor
push
cmp
outsl
push
xchg
mov
stc
xchg
xor
jne
fwait
push
cmpsl
mov
push
xchg
mov
pop
lock
cli
ret
js
jge
call
xor
cmp
xchg
add
lcall
outsb
cmp
stos
es
sub
lock
pop
jbe
daa
push
pop
and
cs
jecxz
pminub
sub
adcb
call
sub
shll
cmpsl
mov
bound
mov
inc
lahf
lcall
mov
call
test
and
test
xchg
and
mov
fisttps
cmp
mov
sbb
imul
sbb
mov
ja
daa
les
jmp
jb
pop
xor
out
fs
jnp
add
xchg
daa
movsl
push
cmp
pop
pop
mov
imul
inc
push
sti
mov
xorl
lcall
push
pop
sub
dec
push
xchg
hlt
pop
xor
cmp
xchg
push
adc
decl
stos
sub
cmc
outsb
fucomp
and
cwtl
stos
call
fistl
in
push
jg
jno
mov
loope
mov
fistl
xor
sub
dec
push
inc
dec
std
xchg
cmp
stc
mov
xchg
add
movsl
notl
popf
lods
lods
test
mov
scas
stos
xor
shl
stc
cmc
pop
cmp
dec
out
leave
lret
loopne
imul
fwait
sub
fcomi
xchg
pushl
loope
stos
or
lods
jmp
movsl
lret
and
fldcw
cmp
cwtl
insb
test
sbb
adc
pushl
lret
insl
xor
jb
cli
pop
bound
out
lds
push
loop
cs
push
mov
cmp
int3
and
icebp
dec
ljmp
and
inc
cmp
xor
cs
xor
jg
sbb
adc
ja
cwtl
ss
mov
dec
in
mov
mov
jmp
adc
incl
sub
push
push
ja
scas
lcall
cmp
test
dec
lds
mov
stc
decl
jns
roll
call
fcomip
cld
int3
lret
lcall
xchg
ffreep
rorb
lret
loopne
leave
and
pushl
mov
push
mov
jns
cmc
jmp
adc
ret
cltd
int
dec
fdivr
decl
add
popf
dec
or
xor
xlat
clc
xchg
aas
inc
lahf
add
inc
in
mov
cld
call
xor
dec
jne
mov
push
loop
decl
mov
push
lds
insb
sub
adc
cmpsl
testb
or
call
cli
in
dec
negl
sub
call
stc
ja
imul
or
shlb
inc
mov
mov
inc
lods
aaa
push
pop
jmp
ljmp
lahf
rolb
jb
loop
mov
mov
mov
xor
mov
insl
pop
pop
mov
dec
xchg
cli
cmc
jp
add
dec
es
dec
imul
ljmp
je
lahf
mov
or
add
push
cmc
test
in
lds
inc
adc
inc
jp
pushl
cmpl
or
das
sbb
jnp
sub
dec
dec
mov
adc
fcos
jmp
loop
adc
push
push
sbbl
xor
adc
decl
mov
jbe
fsubrs
cld
inc
sbb
sub
outsb
jmp
cltd
movsl
or
mov
test
jmp
sbbb
mov
gs
adc
das
les
mov
ret
pop
test
sar
mov
and
dec
in
std
stos
push
shrl
add
mov
ds
outsl
mov
popa
lods
jo
dec
ds
es
insl
jbe
incl
pop
dec
lea
das
adc
andb
add
addr16
sub
ljmp
mov
aam
sbb
inc
lea
mov
andb
dec
pop
lock
fistpll
xor
xor
hlt
jp
test
xchg
xchg
jmp
mov
call
xchg
orl
pop
or
fdivrs
loop
nop
in
in
sub
jecxz
push
ljmp
dec
pop
stos
jns
sub
test
fisttpl
std
push
icebp
rolb
mov
arpl
sbb
stos
push
aad
add
mov
cmp
test
imul
xchg
cwtl
jne
call
xor
pop
int3
call
scas
je
sbb
mov
repz
divb
adc
clc
decl
inc
sub
cld
addr16
dec
std
mov
jmp
scas
push
lods
cs
out
cmp
push
enter
dec
in
lcall
xor
cli
mov
xor
outsb
xchg
pop
js
cmp
loope
cmp
or
add
iret
testl
call
cmp
push
xchg
fs
pop
cwtl
rorl
cmp
inc
int
test
das
sub
call
jle
test
clc
pop
repnz
and
inc
xor
adc
inc
push
ljmp
fcompl
pop
pop
or
pushf
pusha
jne
cmp
into
or
gs
into
mov
jnp
jmp
pop
sbb
lods
les
mov
inc
in
mov
dec
mov
mov
sbb
lcall
mov
inc
test
push
sub
add
daa
sub
test
xorl
push
fistpll
repnz
adc
icebp
cmp
aas
shlb
outsl
pop
hlt
pop
repz
jno
mov
loope
aas
fwait
call
xor
pop
lods
add
test
or
into
inc
cli
out
test
mov
lret
sub
dec
add
jp
sbb
add
inc
nop
push
adc
ljmp
sbb
clc
ret
pop
mov
shr
je
das
mov
test
inc
cmp
lock
jo
call
loope
xchg
pop
jno
aaa
sahf
adc
push
pop
inc
jle
pop
sub
jo
popa
mov
pop
dec
mov
push
lcall
sub
daa
ss
jbe
sti
pop
push
popf
or
out
mov
adc
loope
xor
loopne
inc
dec
jb
cmpsb
fldt
cmpsl
push
sbb
jg
enter
nop
xor
jo
aad
sub
ljmp
inc
pop
in
out
out
mov
jmp
loopne
test
cmp
cli
cs
jo
pop
nop
mov
incl
cmp
jmp
bound
pop
pop
lds
mov
mov
in
incl
mov
stos
mov
std
xor
sbb
xchg
leave
push
or
push
sbb
cmc
xchg
out
or
sbb
clc
repnz
scas
mov
decl
jl
out
test
jge
xor
aas
inc
mov
xorl
inc
sbb
hlt
xor
lds
fistpll
xor
fadds
push
add
fistl
aad
adc
loop
mov
stos
jbe
xor
data16
and
mov
fildl
lock
in
frndint
aas
ljmp
xor
cmpsl
repz
sub
xor
pop
add
pop
mov
lcall
cltd
adc
jbe
xchg
jecxz
push
sub
andb
inc
scas
sbb
pop
aad
insl
ficoms
loopne
stos
mov
dec
add
sbb
fildll
callw
popa
loope
fimuls
lret
or
fcomip
ljmp
dec
mov
in
or
mov
push
pop
loope
pushl
fstps
popa
lea
sub
mov
xlat
jl
ja
mov
mov
and
add
mov
arpl
test
lcall
loopne
cltd
push
and
sub
fsts
push
dec
mov
es
ss
test
lcall
cmc
xlat
int3
add
xor
sbb
pushl
in
aaa
std
pop
rorb
inc
pop
aas
ja
cmp
pop
jecxz
push
popf
dec
sbb
decl
dec
dec
jecxz
jl
ss
jb
aad
call
xlat
std
pop
add
inc
fisubrs
xor
mov
sahf
xor
mov
mov
and
mov
loop
lret
jge
mov
xor
lcall
push
ds
nop
xor
adc
push
jp
aas
lret
mov
adc
ja
lcall
lock
xor
xor
scas
lret
mov
incl
inc
negb
lods
mov
cli
add
ja
inc
xor
adc
mov
fcomip
push
rcr
cld
das
push
call
xor
mov
pushl
mov
movsb
mov
mov
jns
dec
loope
xchg
and
push
popl
int
decl
inc
das
cmpsb
icebp
push
popa
ss
or
imull
call
ss
adcl
ret
jecxz
push
fidivrs
shl
sub
mov
jne
scas
mov
incl
inc
fimull
gs
sti
lret
in
mov
mov
push
loopne
jmp
jnp
mov
inc
mov
fdivp
fadd
arpl
pop
sub
hlt
nop
loope
xlat
mov
jae
js
cmp
rcl
xor
and
add
pushl
jmp
sub
loope
push
pop
jl
test
mov
cmpsl
leave
push
lahf
or
pop
push
push
inc
into
jb
call
scas
outsl
fsubl
das
push
push
cmp
cmpl
or
add
pop
cmpsb
mov
hlt
decl
lods
fsub
rcrl
sub
jne
mov
push
push
push
mov
dec
sbb
and
adc
ds
es
mov
clc
lcall
mov
sbb
test
ret
cmc
xlat
insb
loop
xor
xchg
pusha
pop
icebp
incl
fld
add
mov
mov
cld
and
outsb
pop
rolb
and
add
loope
shr
mov
ljmp
cmp
inc
jnp
xlat
and
fs
pop
add
sub
cmp
aaa
sbb
sbb
mov
dec
out
inc
scas
lock
mov
jg
sti
fidivrl
cmp
jmp
pop
in
decl
add
push
or
mov
xchg
cmp
je,pt
push
jns
sti
fmuls
shll
cmp
mov
xor
mov
mov
cmpl
ljmp
nop
mov
jle
dec
pushf
push
dec
shrl
call
mov
jmp
add
mov
ficomps
jne
xor
pop
jge
jnp
lcall
hlt
out
aas
js
mov
mov
jge
test
cmp
pop
movsb
jmp
mov
pop
or
pop
inc
call
sub
mov
rclb
shrl
enter
or
or
add
fs
call
fidivs
push
add
push
push
push
daa
push
mov
mov
fnsave
jmp
dec
clc
mov
sahf
mov
popf
shlb
loopne
ss
aam
jmp
jne
mov
incl
aad
iret
pop
push
cmp
stos
mov
xor
pusha
jp
dec
bound
pusha
mov
insl
jne
jg
sub
mov
jl
jb
mov
out
sub
xchg
jmp
mov
lods
lds
bound
stos
or
cltd
popa
cmp
int3
mov
aaa
std
cmp
xchg
dec
out
mov
push
sahf
or
idiv
lcall
call
cmpsl
flds
adc
out
adc
inc
cli
push
test
outsl
cli
call
ljmp
gs
inc
in
adc
js
lea
jl
out
je
imul
out
movsl
jmp
jno
rorl
and
loope
pop
or
faddp
aas
lods
shll
mov
cwtl
outsl
addl
mov
fldl
and
fcompl
push
cld
inc
stos
pop
jmp
inc
std
rclb
sub
mov
mov
or
repz
insb
inc
cltd
jne
lcall
sub
jbe
js
xorb
ud0
inc
push
sbb
sbb
fwait
out
loope
gs
les
push
hlt
fs
inc
lock
sub
or
adc
movsb
iret
add
sub
add
outsb
xchg
add
pushl
mov
mov
adc
dec
rcrl
pop
negl
or
cmpsb
cmp
decl
mov
push
sar
insl
inc
xchg
dec
and
outsl
out
mov
clc
jbe
pop
data16
sbb
sbb
and
fildl
dec
mov
xchg
ljmp
pop
fiaddl
push
adc
mov
jg
in
jl
cmpsl
out
inc
mov
pop
push
jbe
push
mov
incl
mov
out
pop
jmp
mov
movsb
scas
cli
ja
dec
push
out
stos
push
sbb
fmul
sbb
and
out
sub
ret
cmp
push
and
mov
sti
incl
rolb
sti
pop
arpl
int
cld
cmpsl
adc
xchg
ljmp
incl
inc
aam
repnz
adc
ja
cld
clc
fwait
jmp
dec
cmp
in
out
fidivrl
das
push
cmp
jmp
hlt
or
fiadds
push
sub
rcr
jbe
add
add
mov
xlat
cmc
add
mov
insl
jg
je
mov
adc
adc
jns
inc
in
ret
or
fyl2x
or
std
rcll
decl
addr16
mov
xor
adc
ljmp
adc
data16
cmpb
data16
add
ret
pop
mov
sub
cltd
lret
mov
mov
mov
add
cmp
jbe
mov
repnz
sbb
inc
inc
ljmp
clc
jmp
sub
fucomp
enter
js
lock
loope
dec
or
scas
aaa
lcall
jae
lods
xchg
sti
dec
or
add
xchg
ds
jne
fsubs
mov
mov
call
adc
aam
ds
leave
lods
js
sbb
decl
push
xorl
or
popa
xor
loope
jle
nop
mov
inc
pop
je
call
cld
push
pop
jg
lea
stos
sbb
jmp
dec
sub
mov
cmp
in
pushl
psadbw
in
jnp
cmc
xor
aad
mov
loope
xor
and
or
jmp
loop
pop
jmp
outsb
mov
ss
dec
cmpb
jo
mov
push
lahf
sub
aaa
ja
pop
push
scas
aaa
mov
testb
fwait
lret
add
mov
fwait
push
mov
or
adc
dec
xchg
out
int
cmp
mov
adc
mov
add
loop
push
bound
sti
or
lcall
jle
pop
in
cmp
bound
mov
test
push
loop
sub
daa
dec
push
cli
loope
lcall
adc
push
leave
ret
sti
cli
adc
incl
lock
sahf
mov
or
fiadds
mov
jl,pt
je
pushl
inc
cld
pop
pop
fwait
mov
jle
cmp
pop
repz
outsb
push
cltd
popf
imul
ss
fdivs
in
and
mov
mov
hlt
out
fimuls
and
popf
and
push
int
hlt
and
push
jbe
pop
std
std
gs
xchg
sahf
inc
daa
leave
loop
cmp
cmp
movsl
das
jae
xor
pop
enter
test
cmc
dec
ljmp
adc
pop
mov
hlt
mov
out
add
mov
jne
lret
lock
repnz
add
jbe
mov
inc
dec
jg
call
sbb
mov
jae
inc
xchg
mov
ljmp
pop
inc
pop
mov
lret
lahf
push
loop
fnstsw
pop
neg
std
push
push
jmp
xchg
clc
cmpb
daa
test
jecxz
mov
data16
ljmp
sub
dec
inc
mov
jl
cmp
xchg
idivb
into
dec
dec
pushf
mov
in
dec
mov
daa
add
mov
mov
fstpt
or
aam
xorl
and
or
inc
movsl
mov
sub
jns
push
push
out
xor
and
decl
lret
and
jecxz
jo
cmp
fs
or
lcall
call
mov
push
lcall
leave
sbb
or
cmp
jmp
add
inc
or
sbb
adc
stos
pushf
jge
inc
ret
fucom
lods
add
sub
pmaxsw
lods
repnz
aam
jg
push
test
jg
mov
dec
xchg
les
sbb
icebp
cmp
fiadds
lods
sub
call
ret
mov
loopne
push
mov
test
cld
ret
mov
pop
popa
out
faddl
sub
pop
or
dec
lds
divl
aad
adc
and
cld
jmp
ljmp
sbb
out
and
icebp
xchg
sub
cmc
fnsave
and
xchg
dec
clc
cmp
in
mov
jno
and
lock
cli
decl
fwait
pushaw
pop
mov
fisttps
or
inc
loopne
in
sub
push
cwtl
sti
mov
sub
cmpsl
pop
test
and
scas
aam
shlb
insl
pop
inc
jnp
jae
inc
pop
mov
mov
sti
add
insl
shlb
test
mul
inc
mov
lcall
push
and
das
inc
gs
das
add
inc
and
mov
lock
sbb
not
dec
test
bound
jp
ret
ljmp
rep
mov
arpl
push
cmc
andl
jmp
xchg
and
lea
cmp
dec
dec
stc
cmp
pushf
push
sub
cmc
push
sub
lods
aam
pop
pushf
push
and
mov
push
mov
scas
xor
incl
icebp
or
js
sub
stc
sub
out
mov
cld
je
cmc
popf
lret
cmc
decl
lods
bound
or
rcr
insl
mov
int3
out
push
popf
shrb
pop
push
push
sbb
mov
jg
add
xchg
out
repz
ret
pop
in
fisttpl
imul
xor
push
fldt
lcall
mov
xchg
mov
mov
dec
xchg
daa
rcrl
and
incl
outsb
push
loop
out
outsl
movsb
pop
insl
mov
inc
mov
xor
cmpsb
mov
daa
mov
jecxz
mov
sbb
out
testb
sti
sub
dec
and
fcomp
call
push
test
pushl
mov
jge
aaa
sbb
les
jb
lcall
ljmp
aad
mov
add
das
push
repz
adc
ljmp
js
add
movsb
xchg
ljmp
ss
test
loop
decl
std
leave
jecxz
xchg
jo
test
mov
bound
xchg
outsb
xor
ss
jmp
ljmp
les
popa
mov
pop
fsts
inc
in
mov
sbb
xchg
lcall
fucom
imul
jb
test
xor
stc
fmull
cmp
incb
into
scas
jbe
fists
mov
das
mov
lcall
dec
dec
lret
stos
addr16
jne
rcll
aaa
in
xchg
add
mov
xchg
pop
or
xchg
and
xor
mov
inc
push
ffreep
fbstp
jmp
and
gs
push
pop
aam
leave
mov
into
test
out
jne
xchg
ret
testl
jg
jnp
jb
sub
adc
mov
pop
jbe
leave
fst
mov
push
mov
insl
jle
xchg
dec
mov
movsl
arpl
mov
ljmp
arpl
ficompl
cmp
xor
lods
fcmovnb
nop
bound
push
xchg
sbb
incl
sub
dec
inc
out
inc
loopne
adc
mov
cmpsb
mov
jg
or
pop
adc
and
mov
das
add
out
out
dec
into
andl
scas
mov
jns
pop
rorl
push
ss
mov
cld
jo
lret
jb
ficoms
mov
pop
jmp
test
or
adc
loopne
mov
cmp
adc
push
xor
mov
repz
pop
push
clc
popf
jo
adc
incl
jmp
ja
dec
mov
dec
mul
clc
out
xchg
lods
loop
insb
std
scas
cmp
jmp
fcomip
incl
imul
dec
stc
out
and
aam
pop
ret
mov
mov
hlt
stos
cmp
push
inc
mov
xor
fists
or
loope
gs
fsub
add
pop
pop
mov
pop
mov
shll
cmpsl
test
mov
pop
mov
jmp
adc
mulb
jbe
mov
push
cld
pushl
aas
imul
adc
xor
mov
bound
pushl
scas
sub
cld
loopne
sbb
nop
loope
sub
add
push
jecxz
cmc
or
adc
jmp
imul
aam
into
loopne
aas
push
into
and
inc
xchg
out
into
push
mov
repz
cmp
cwtl
sub
jo
mov
pushf
sbb
ss
adc
call
pusha
sbb
cli
fidivs
or
mov
ds
jle
push
dec
scas
pop
aad
jecxz
jno
into
data16
outsb
sahf
stos
loop
out
ljmp
adc
pushl
sbb
fsubl
mov
cwtl
movsb
out
push
jbe
repnz
mov
loop
and
ljmp
mov
movsl
in
jno
repz
fnstenv
add
inc
mov
insl
cld
shlb
decl
xchg
cli
ror
test
insl
lock
inc
jne
imulb
inc
cmp
incl
enter
cmp
pop
into
mov
outsb
clc
adc
mov
ud0
xchg
ja
enter
push
sub
xor
push
ret
pop
sub
jle
pop
fbld
cmp
xor
hlt
mov
jle
dec
insb
and
mov
js
hlt
mov
dec
into
enter
jg
mov
push
test
xchg
les
int3
cmp
or
daa
adc
and
incl
gs
into
mov
lds
std
arpl
sbb
fdiv
sar
xor
add
jmp
scas
pop
xchg
push
movsb
cld
lock
adc
mov
daa
cmp
in
jge
pop
cld
cmc
xchg
out
jecxz
clc
adc
lods
das
cmc
jns
in
nop
jp
pop
xchg
dec
sti
push
aad
push
xor
stc
cmp
negl
push
jl
pop
lcall
scas
cli
jg
mov
sbb
adc
leave
mov
fstps
adc
jbe
in
cli
fistpll
ljmp
cli
out
sbb
xlat
aam
clc
xlat
scas
jne
pop
add
add
or
xor
xor
lret
shll
call
aam
add
pop
sbb
adc
inc
sub
ljmpw
inc
testl
push
fistl
dec
push
jmp
popa
pusha
push
stos
aas
sub
lret
fdivrs
inc
mov
pop
ret
xlat
clc
pop
insb
ljmp
clc
aad
fidivs
loopne
pop
push
pop
fldenv
jmp
jecxz
mov
divl
push
lret
dec
filds
decl
dec
push
sub
in
push
add
inc
inc
push
jp
les
mov
lds
pop
sub
cmp
push
adc
push
ss
mov
mov
add
pop
ret
cli
call
xor
mov
push
mov
jl
push
call
jne
out
rorb
dec
ss
shl
jmp
out
outsl
dec
gs
push
rcll
jp
jo
dec
and
push
adc
pop
push
rcr
jmp
mov
cmp
pushl
mov
xchg
cmp
push
sahf
xor
add
mov
lcall
clc
push
sbb
mov
jmp
jmp
andb
in
pushl
xor
outsb
negl
sbb
roll
leave
popa
cmp
fisubrs
push
pop
out
xor
ljmp
addr16
outsl
mov
mov
mov
lock
push
cmp
add
sub
lcall
rsm
pop
fs
cli
fimull
push
cmp
js
and
inc
inc
and
pushl
popf
add
int3
roll
dec
and
push
sar
lcall
cmp
adc
aaa
add
cmpb
shl
pop
lods
sbb
mov
inc
incl
lock
shr
movsl
out
mov
xor
add
test
push
enter
jp
push
sbb
aaa
adcl
pop
mov
jne
jge
xor
incl
xor
gs
jg
call
out
fwait
push
jl
cmpsl
push
adc
xchg
jle
cmp
bound
xchg
xchg
mov
in
decl
stos
je
adc
add
jno
cld
jne
sti
lcall
pop
dec
push
jmp
lcall
or
add
pushf
jmp
sbb
mov
call
sbb
pop
add
scas
scas
jbe
push
or
out
jp
sub
inc
mov
ljmp
jne
in
outsb
push
mov
shlb
mov
pop
xchg
lods
lds
jge
push
or
decl
push
je
ljmp
jne
push
or
decl
adc
dec
sbb
adc
inc
pop
jg
inc
lock
movl
mov
iret
xchg
or
mov
pop
scas
js
mov
mov
dec
movsb
fbstp
pop
adc
jns
jp
repz
fcom
jb
or
aaa
test
orb
in
lock
lcall
and
add
test
cli
fsubrl
shll
xchg
mov
fbld
adc
testb
mov
sub
test
test
cwtl
fisubs
jl
xor
xor
movsb
xchg
push
arpl
clc
or
ret
mov
lods
fildl
call
add
mov
cmp
inc
pop
loopne
jnp
push
or
decl
inc
add
push
fisttpl
xor
lods
xchg
mov
mov
adc
lods
or
inc
loope
mov
data16
leave
jo
jg
shlb
out
jns
mov
scas
decl
lock
and
lds
cmc
or
xchg
testb
incl
pop
jne
stos
imul
aas
xchg
mov
push
xchg
sahf
stos
shlb
jg
lock
push
outsb
jnp
mov
cmc
add
test
and
cmp
pop
sbb
call
pushaw
push
xchg
dec
mov
push
mov
hlt
insb
mov
dec
subb
pop
inc
xor
out
decl
dec
xchg
and
nop
cld
stc
jnp
add
dec
mov
push
adc
out
jbe
dec
xchg
cld
decl
aam
sub
or
push
repz
call
or
cmp
dec
push
inc
pop
andl
addb
inc
push
mov
add
jp
jns
mov
pop
xor
push
add
in
mov
jmp
js
push
hlt
push
gs
pop
les
fldenv
push
adc
push
inc
mov
xchg
js
xor
xchg
lcall
sbb
push
xchg
stos
imul
repz
jmp
push
seto
mov
cmpsb
pop
aad
push
sub
sbb
movsb
adc
sub
incl
xchg
fistpl
lret
cmp
inc
addr16
or
push
cwtl
in
cld
mov
jns
fs
xchg
add
jo
add
adcb
xor
imul
lea
ljmp
hlt
je
lcall
mov
dec
adc
aam
call
xor
decl
mov
bound
cmpsb
mov
popf
and
and
jo
aas
add
fcos
jg
jmp
mov
inc
jp
mov
aas
mov
or
mov
xor
lcall
cmp
add
fdivl
mov
mov
popf
lods
or
dec
push
and
loop
call
or
xchg
or
arpl
inc
push
movsl
out
addr16
andb
cmp
mov
sub
jl
sahf
jne
icebp
and
gs
pushf
jno
lcall
subb
lret
jl
int
fwait
jne
popa
call
mov
incl
outsl
xchg
sbb
cmp
sbb
clc
dec
mov
neg
lods
sbb
scas
ffreep
jae
ficomps
or
mov
mov
push
sbb
iret
scas
mov
je
iret
jmp
decl
call
cmpsb
sbb
inc
ds
movsl
pop
dec
ljmp
or
hlt
sub
call
loopne
jmp
mov
inc
fcoml
lret
pop
pop
out
lcall
pushf
jae
jnp
mov
out
adc
cwtl
xor
pop
in
pop
dec
jno
in
pushf
mov
loopne
jb
orb
add
lahf
stc
jmp
xchg
ljmp
pop
rorb
aam
mov
jo
popa
jb
adc
enter
push
sub
call
dec
ljmp
gs
or
cmp
mov
cmp
pusha
lret
xor
cli
imul
inc
pop
xor
imul
mov
stos
out
mov
mov
lods
loopne
outsb
pop
inc
add
in
decl
test
inc
mull
push
or
add
insb
test
ja
mov
call
out
rcll
and
adc
insl
cmp
aas
decl
in
stos
hlt
add
out
xor
cmp
mov
xchg
adc
pop
dec
jle
mov
sarb
and
addr16
scas
dec
icebp
mov
sbb
mov
push
pop
rcl
mov
iret
mov
adc
ljmp
test
mov
add
loopne
inc
or
push
mov
loope
imul
sub
jmp
arpl
sbb
int3
xchg
xchg
decl
ss
jg
in
iret
xchg
dec
pop
xor
mov
inc
dec
lret
aas
js
dec
push
mov
es
pop
push
jmp
stos
pop
lock
push
and
lcall
orb
aad
sbb
out
mov
pop
mov
lods
pop
into
flds
or
incl
imul
shrl
sahf
sbb
adc
enter
call
ret
in
mov
mov
es
sbb
repz
mov
imul
push
incl
cmp
xor
or
pop
fidivs
add
lret
cmp
test
push
inc
jmp
pop
push
sbb
rclb
inc
cmp
cmpsl
inc
imul
rolb
jp
gs
out
cli
dec
or
std
cmpsl
sbb
scas
hlt
pop
xlat
inc
push
dec
ja
xlat
sub
jmp
cmp
sti
mov
inc
cs
adc
inc
dec
iret
movb
mov
push
hlt
lret
pop
lea
stos
cltd
mov
out
incl
int3
jmp
jnp
dec
jecxz
lahf
dec
push
ja
push
std
mov
adc
popa
and
decl
adc
in
dec
in
and
jle
clc
lret
int
or
inc
sub
cli
dec
fs
push
sbb
xchg
repnz
mov
jp
sbb
call
pop
jbe
mov
push
enter
push
sarb
push
mov
cmp
jg
cs
push
xchg
adc
mov
ret
mov
cmpl
mov
mov
cmpsb
pop
jae
inc
fsubr
jg
mov
gs
push
rclb
popa
push
subb
cs
or
mov
fdivs
fldcw
xlat
js
lcall
jp
ljmp
mov
fisttpll
and
push
xchg
inc
dec
shrb
scas
push
jl
dec
shl
sbb
push
jnp
fadds
push
fildl
adc
cmp
mov
sub
out
into
add
iret
movsl
push
test
clc
ljmp
outsl
loope
or
add
and
stos
pop
sbb
add
out
mov
add
cmp
popa
mov
rorb
out
in
jne
loope
addb
cmp
mov
into
cmp
xchg
mov
inc
aam
mov
adcb
dec
mov
jg
cli
inc
insb
push
popa
es
push
jo
mov
int
mov
js
sti
and
decl
stos
mov
pushf
bound
sub
cmpsl
test
push
loopne
insl
sub
mov
mov
jmp
decb
test
into
sub
scas
and
lds
adc
or
push
fcomip
decl
cli
test
test
ds
fdivrp
rcr
mov
jmp
jne
shl
shrl
dec
push
mov
sbb
mov
fstps
mov
pushf
movsl
rcr
scas
outsl
nop
in
and
jnp
test
lea
lock
pop
mov
add
push
mov
inc
xor
jg
lods
dec
test
sub
and
xchg
jl
inc
cli
fdivl
push
xor
sbb
sbb
imul
outsb
cmc
ljmp
shll
sub
cli
xor
mov
adc
dec
push
mov
mov
daa
subb
pop
cs
ret
mov
icebp
ljmp
mov
dec
mov
das
fdivs
mov
mov
mov
push
pop
pop
test
lret
mov
cmp
sarb
nop
pop
mov
mov
pop
adc
jns
cmpsb
fisubrl
cmp
push
pop
in
test
fiaddl
or
mov
into
xchg
mov
add
and
jmp
repz
pop
ss
lcall
pop
insb
lods
cltd
movsb
je
into
mov
dec
fs
std
jge
mov
fwait
adc
hlt
mov
lret
call
add
ret
dec
mov
clc
js
or
fcomip
cmp
arpl
mov
lahf
inc
cmp
fs
outsl
movsl
dec
ficomps
mov
add
ds
and
add
incl
test
sahf
xor
add
xchg
ljmp
ljmp
mov
sbb
loopne
and
dec
xchg
in
sbb
add
call
cld
adc
aam
fs
dec
push
test
ljmp
or
and
sub
xorl
sub
insl
lods
sub
jmp
cmp
daa
xchg
mov
iret
dec
mov
mov
lock
testb
shll
dec
scas
jno
or
daa
dec
in
xor
jmp
jle
nop
les
movsl
dec
ljmp
psubsb
daa
cmp
add
jnp
push
fwait
pushl
xor
mov
fwait
add
xchg
outsb
in
cli
mov
adc
movsb
data16
ljmp
mov
imul
push
inc
scas
adc
mov
xchg
sbb
ror
fcomip
pop
pop
insb
scas
mov
sbb
adc
dec
and
inc
jp
add
mov
int3
jns
test
loopne
pushl
inc
testb
ljmp
mov
movsb
sbb
pop
ret
mov
inc
enter
or
push
pop
mov
jno
inc
sub
filds
call
add
dec
mov
adc
dec
inc
xchg
mov
enter
stc
xchg
lret
mov
jae
ljmp
inc
imul
mov
ja
cmp
dec
pop
movsb
and
and
sbbb
rcll
push
sbb
mov
ds
pop
and
xlat
jb,pn
or
ret
mov
push
mov
ss
lods
add
sahf
cmp
dec
sbb
shrb
mov
mov
xchg
or
dec
fidivl
call
jo
dec
ret
adc
xchg
dec
sahf
rol
or
jbe
mov
inc
rcll
fisubrl
test
icebp
inc
out
pop
inc
divb
cs
lods
fs
or
jl
xchg
call
cmpsl
es
insb
or
push
lcall
jne
mov
fmuls
in
adc
subb
cli
xchg
xor
mov
repz
jg
sub
test
dec
adc
push
jge
adc
ljmp
pop
push
jb
loop
fsubl
in
cmp
cli
in
lock
push
mov
lock
inc
test
push
das
test
sbb
test
mov
jne
add
sti
adc
add
ljmp
jmp
cld
sahf
in
push
xor
mov
cmp
pop
fcmovnb
arpl
std
cmpsl
and
jl
xor
test
mov
jge
add
inc
imulb
sbb
jg
jns
mov
call
jl
push
pushf
imul
or
jmp
jmp
int3
dec
out
lahf
ja
jmp
mov
iret
dec
adc
popf
cmpsl
inc
pop
loope
mov
cmc
jmp
lret
adc
xor
push
pop
stos
jae
pop
push
cmp
into
or
adc
mov
ljmp
outsb
vmovdqu
mov
std
mov
fcomip
or
xor
and
jle
rclb
aam
mov
fbld
push
pop
ret
sub
jl
jne
imul
dec
jno
adc
sub
pushf
cwtl
mov
ljmp
push
scas
and
aam
jle
daa
pushf
dec
sar
push
mov
sub
aaa
lods
std
clc
jmp
sahf
cmp
mov
repnz
je
cmp
aam
and
idivb
mov
jmp
loop
push
cmp
dec
fcomi
mov
sarl
cli
out
cmpb
sub
out
mov
popa
dec
dec
jp
sub
cmpsb
cmpsl
pop
ja
push
mov
jle
pop
jbe
or
dec
xlat
bound
insb
inc
adc
inc
jl
jmp
in
mov
pop
ljmp
pop
xorb
fdiv
out
rcll
xor
das
sbb
ljmp
cmpsb
push
pop
sbb
in
sbb
out
jne
or
push
mov
negb
in
sbb
call
sbb
or
mov
inc
repnz
data16
cli
cmp
call
adc
sbb
cmp
das
popf
ja
filds
int3
out
mov
mov
or
push
add
or
hlt
jae
call
cmp
test
adc
sbb
ret
js
fistpl
mov
das
push
mov
and
stc
inc
sar
incl
inc
xchg
push
xor
lret
lock
aas
fadds
push
push
stos
jecxz
ljmp
dec
lcall
dec
fs
pop
ljmp
pop
mov
lock
lcall
int3
jg
shll
jp
clc
das
push
or
sub
lahf
mov
push
xor
popf
out
inc
cwtl
iret
dec
jmp
fsubrs
decl
jmp
int
xor
sub
inc
mov
xor
decb
and
jp
mov
jp
and
sub
lret
xor
mov
test
jg
lcall
or
and
or
loopne
mov
nop
jb
sbb
insb
call
arpl
jnp
cmpsl
or
outsb
push
inc
pop
dec
adc
loope
std
outsl
jmp
fimull
loopne
cmpsb
out
fildll
outsl
movsb
popa
push
cmp
sahf
xchg
mov
pushf
in
push
imul
pushl
hlt
test
jecxz
sbb
mov
mov
dec
das
sbb
sti
leave
in
out
push
push
jnp
sub
clc
add
cmpsb
repnz
sbb
aas
stos
pop
mov
lcall
negb
clc
xchg
xor
in
aas
or
lods
fdivrp
out
loope
jge
cmc
ljmp
xchg
mov
andb
xor
adc
mov
jnp
fadds
mov
xchg
std
hlt
insb
fistl
ss
add
lods
inc
mov
dec
lret
push
fwait
push
push
lods
ret
sbb
and
jne
push
or
pop
push
addr16
pushl
sub
push
imul
clc
fsubs
xchg
xchg
inc
inc
in
inc
fbstp
call
orl
jns
add
dec
mov
inc
push
mov
jg
mov
sub
shl
jle
mov
mov
rcrl
fdiv
mov
cli
es
xchg
mov
jae
adc
or
rcr
or
fisubl
bnd
loopne
xorb
jg
cmp
xor
ja
out
lods
lcall
repnz
stos
add
incl
aas
lret
jns
jne
test
int
mov
cmpb
adc
shrb
std
fcoms
cmp
push
jne
mov
sahf
inc
cmc
ss
xchg
jecxz
lret
jecxz
jb
incl
cld
addr16
push
orl
ljmp
dec
pop
loop
or
sbb
clc
outsl
faddl
jge
and
push
fwait
xor
popf
fcoml
pop
adc
outsl
mov
lds
data16
mov
in
fs
or
je
test
cltd
mov
lret
arpl
call
mov
subl
and
out
icebp
in
loope
inc
push
mov
or
and
data16
inc
out
mov
lcall
mov
ds
xor
incl
add
xlat
push
mov
enter
cmpsb
jge
lods
cmp
mov
inc
mov
loope
lcall
iret
xor
add
push
mov
add
sub
jge
mov
leave
sub
mov
daa
in
fcomip
pop
mov
adc
test
sbb
jg
xor
stos
dec
mov
jp
ss
lret
jb
mov
out
jp
push
sahf
cmp
decl
cmpsb
data16
push
push
das
ds
jae
and
inc
adc
mov
call
cld
call
jno
cmpsb
enter
lods
jnp
adc
jge
inc
jmp
dec
fcmovu
stos
outsl
shrb
xor
bound
out
popa
jne
call
decl
mov
lock
pop
imul
adc
mov
jmp
mov
mov
xchg
or
andb
lods
push
cltd
push
sub
push
ds
pop
loopne
ljmp
pop
push
testb
iret
cmpb
push
jbe
and
call
test
popf
pop
and
pop
add
add
pop
mov
pushl
xchg
xor
push
dec
mov
popf
push
dec
and
cld
ret
enter
adc
insl
shlb
xchg
add
pop
xor
add
sbb
call
cmp
pop
and
in
insb
fldcw
and
mov
lea
xchg
push
lock
incl
inc
xor
aad
arpl
sbb
int3
test
out
scas
mov
fbld
arpl
add
arpl
sub
xchg
decl
mov
popf
ret
cli
movsl
mov
lods
pusha
cli
lret
mov
lcall
xchg
push
jmp
fdivrs
sub
js
jg
add
insb
loop
inc
dec
or
mov
sub
push
adc
loop
fbstp
dec
rcrl
les
ja
cli
xchg
call
stc
jmp
enter
dec
nop
popf
adc
dec
nop
pop
push
dec
jo
call
decl
or
or
mov
or
cs
push
aad
lcall
rclb
inc
cli
inc
mov
jb
lock
and
or
daa
ja
sbb
test
sti
fwait
cmp
add
push
and
decl
or
and
lock
push
aas
jbe
fldcw
sbb
push
incl
mov
cwtl
fnstsw
daa
pusha
pop
pushl
repnz
roll
mov
iret
fimuls
shl
repz
pusha
fstps
add
test
jecxz
adc
lcall
aaa
sarb
inc
icebp
and
pop
sub
cmp
pop
sahf
pop
xchg
scas
mov
flds
push
int
je
pushf
add
stos
fs
rol
add
ror
jge
adc
incl
mov
idivl
sbb
rcll
lods
into
scas
mov
sahf
fwait
das
jno
int
inc
jmp
lods
std
dec
movsb
shr
xor
insb
shrl
ss
addb
aam
push
scas
fldcw
sahf
xor
mov
or
add
cmp
xchg
pop
push
stos
and
lss
call
mov
jmp
mov
sbb
inc
jl
ja
lcall
int
xor
jno
push
mov
mov
std
sub
inc
ljmp
fwait
call
aad
loope
sarl
mov
loopne
mov
icebp
pop
inc
call
jg
in
xchg
pusha
enter
fs
in
or
daa
sbb
lret
lret
xor
jg
lcall
pop
and
mov
call
gs
testl
jno
pushl
clc
test
test
je
adc
push
iret
decl
cwtl
das
pop
cmp
mov
add
cmovns
rolb
dec
lret
incl
mov
iret
or
mov
icebp
or
mov
sbb
pushl
add
lret
cwtd
out
jb
fbld
into
cmp
or
push
push
push
cmp
push
jmp
pop
jl
push
jge
xchg
ficoml
imull
xchg
cwtl
cmpsb
fidivs
sbb
popa
mov
mov
ret
inc
call
adc
mov
jl
arpl
imul
popa
shlb
and
lret
jmp
jno
js
addb
cwtl
ss
mov
mov
mov
ljmp
push
andb
jno
popf
add
pop
std
das
fwait
pop
jg
xchg
push
inc
out
in
call
lret
lea
call
push
in
xchg
dec
enter
in
out
lods
jmp
jnp
mov
jae
fdivr
inc
cmpsb
shrl
inc
test
cmp
scas
call
imul
or
pop
inc
dec
sbb
and
loopne
out
cmp
or
cmp
clc
sub
mov
clc
pushl
lret
push
lds
jns
push
or
mov
cmp
add
lret
add
cmp
dec
fistl
adcl
aas
inc
dec
and
jbe
add
stos
in
mov
or
stos
inc
inc
je
cmc
mov
lock
incl
mov
mov
shlb
mov
shl
jae
and
cmp
cmc
pop
repnz
sub
dec
mov
sbb
xchg
data16
lcall
cld
stos
sbbl
ljmp
pop
dec
les
xorl
mov
loop
rorl
decl
adcl
cmp
sbb
sub
cmp
sbb
pop
fs
mov
sbb
push
sub
dec
nop
ja
cs
sub
movsl
cli
cmp
cld
lcall
mov
inc
push
popa
cmp
sbb
xor
mov
shlb
and
push
call
jl
sbb
std
mov
push
test
mov
mov
jb
inc
mov
cmpsb
sbb
lea
mov
mov
jmp
xchg
cmp
rcrl
es
xor
aas
xlat
mov
mov
push
or
mov
mov
sbb
mov
outsl
xlat
jp
pop
gs
add
mov
loope
jmp
mov
push
out
and
lcall
adc
jns
push
or
incl
shlb
jecxz
jb
adc
inc
fcmovbe
test
pop
lret
daa
mov
inc
add
cli
repnz
out
inc
adc
or
pop
cmp
decl
lock
lock
imul
sti
fucomp
cmp
mul
decl
stos
int3
jmp
sub
mov
fcompl
sbb
jns
jb
aam
jg
push
ret
push
repnz
loop
pop
outsl
dec
mov
push
stc
outsl
movsb
loop
pushl
hlt
and
jmp
sbb
aad
jmp
or
stos
push
pop
fbld
fdivrs
fisttpll
aas
or
push
sub
idiv
mov
je
ja,pt
cmp
jne
inc
push
add
mov
cmp
gs
dec
mov
ficoml
icebp
stos
in
in
test
pusha
push
inc
xor
jg
movsb
popa
lea
push
and
or
jae
dec
mov
add
ljmp
pop
fwait
mov
clc
mov
push
scas
add
xchg
jp
pop
inc
ret
imul
pop
ret
js
rorl
aad
aam
test
dec
and
cmp
jns
daa
mov
add
stos
pop
xor
xor
xchg
add
xchg
jne
je
push
ds
ficoms
int
out
jl
sbb
adc
in
xchg
icebp
addr16
sbb
dec
dec
jg
das
idivb
test
and
loopne
dec
dec
add
cli
pop
cli
ljmp
cmpsl
into
adc
dec
ljmp
push
push
dec
imull
aaa
jo
xorl
scas
pop
ljmp
inc
sarb
mov
ljmp
mov
dec
jno
dec
xchg
neg
inc
mov
pop
loope
fcomip
jmp
out
lds
xchg
inc
pop
out
mov
jae
lods
adc
ljmp
mov
adc
rorl
scas
sbbb
lods
mov
cmpsb
call
shll
lods
pop
insb
xor
adc
pushl
push
push
push
popf
mov
jns
pushf
js
das
or
arpl
adc
scas
shll
jmp
xor
xchg
mov
cmp
jle
or
mov
in
cmp
lock
sub
loope
pushl
sahf
lret
xor
out
enter
cmp
scas
mov
imul
cmp
dec
dec
mov
ljmp
pusha
sub
dec
ror
xchg
out
iret
dec
push
stc
sarl
js
ds
mov
inc
call
push
sbb
sbb
pop
xchg
int3
cltd
cmc
add
sub
jbe
push
xor
pop
and
std
decl
push
inc
stos
clc
and
ja
pop
in
ljmp
add
enter
stos
sbb
fsubs
and
insb
shrl
push
jg
call
and
sub
cmp
lea
xor
cld
jg
call
jnp
gs
out
xchg
roll
jbe
in
lock
rorb
dec
or
cmp
ds
sbb
mov
mov
hlt
dec
out
inc
repnz
aaa
imul
xor
sub
dec
mov
fisttps
hlt
or
shl
in
cmp
inc
sbb
daa
test
call
popa
xor
mov
std
pop
dec
inc
pushf
fmull
add
stos
nop
ljmp
out
jo
addr16
das
test
lock
xchg
cmp
push
fildl
lods
mov
xchg
lds
mov
push
jbe
arpl
hlt
aaa
cld
incl
adc
insb
xor
lock
jno
lahf
popf
mov
pop
fwait
mov
movsb
jo
aad
aad
add
sbb
fsubrp
xor
outsb
pushl
hlt
ret
adc
adc
xor
push
fldt
push
pop
lret
xchg
add
cld
out
dec
pushf
ja
je
in
repz
mov
out
fidivrs
or
jmp
cmp
pop
jmp
jge
lahf
ljmp
inc
push
cmpsb
adc
mov
jp
add
sar
clc
push
lock
popf
mov
xchg
shll
pop
xchg
loopne
push
jae
jl
incl
arpl
push
sbb
adc
lock
xchg
fmull
dec
lcall
add
aam
stos
inc
enter
test
and
into
adc
stos
xor
loope
ljmp
out
inc
into
fstpl
fdivs
jns
add
jns
in
cmp
mov
cmpsb
fnsave
adc
dec
outsl
or
add
jp
mov
ja
int
jp
jnp
loop
negb
into
inc
aam
aaa
cld
lcall
and
inc
cmp
mov
hlt
pushf
jne
cli
or
call
adc
stos
pop
and
es
jae
pop
enter
fidivrl
aaa
jge
pop
adc
push
test
adc
mov
jge
xchg
outsb
add
add
sbb
mov
call
xchg
mov
or
jo
es
pop
popl
cmc
ret
mov
sti
adc
cmp
stos
mov
cli
in
test
cwtl
out
pop
daa
xchg
inc
loopne
lcall
mov
dec
mov
sub
lods
orb
sbb
cmp
mov
fldcw
decl
sub
outsb
test
cwtl
push
pusha
icebp
mov
out
mov
and
inc
xor
jmp
mov
and
bound
and
sbb
hlt
clc
dec
aam
jp
xchg
mov
movsl
call
shll
mov
jl
mov
pop
and
sub
bound
popa
push
and
mov
ljmp
test
cmpsb
loopne
insb
xchg
mov
jbe
inc
fcmovbe
or
dec
pop
mov
std
lds
xchg
dec
push
in
repnz
fisttps
mov
pop
dec
decl
mov
xchg
inc
sub
andl
inc
icebp
or
add
incl
push
out
xor
aaa
mov
popa
sub
inc
shr
mov
std
addr16
stc
scas
jle
mov
leave
mov
sbb
adc
jbe
push
xor
call
adc
cmp
mov
jg
sbb
push
jge
int3
xor
inc
xchg
mov
incl
scas
push
scas
cmp
stc
push
insb
lcall
xor
add
fisttpl
icebp
push
dec
xor
enter
jnp
push
adc
shrb
cmp
add
ds
jmpw
mov
cmp
ljmp
gs
pusha
call
sub
outsb
les
add
adc
pop
and
jmp
ret
notl
push
dec
imul
mov
rorb
and
scas
cli
pushl
into
cs
fiadds
fs
mov
int3
je
push
adc
pushl
sub
loopne
imul
out
fisubl
outsl
and
sbbl
and
jg
xor
adc
cmp
xor
arpl
icebp
push
mov
sub
addb
lcall
rcrl
cmpsb
pop
test
jb
push
shlb
mov
mov
mov
adc
pushl
push
mov
xor
or
pusha
cld
mov
add
adc
adc
sbb
fs
sahf
or
dec
xlat
mov
xchg
cmpsb
and
fsubrl
push
ret
mov
inc
lea
mov
pop
mov
cs
sbb
sub
dec
call
and
sti
or
fs
adcb
or
rolb
pop
jb
mov
pop
cmp
mov
andb
mov
sub
call
push
lcall
pop
sub
pop
lods
sarb
subb
sbb
cli
push
xor
pop
adc
inc
sbb
jo
xor
jmp
cmpsl
aaa
out
fdivrs
mov
xchg
cmp
mov
jg
add
or
call
imul
rcl
jmp
fadd
stos
lcall
lret
ljmp
push
fbstp
sbb
std
cmp
mov
imul
jge,pn
add
jecxz
mov
or
scas
and
outsl
clc
ljmp
pop
lds
sbb
sub
call
je
arpl
inc
loopne
rorl
movsl
or
sub
push
dec
popf
fimull
mov
mov
sbb
loop
sub
sbb
jae
and
loopne
add
bound
lock
mov
xor
mov
andl
jg
cltd
std
adc
xor
inc
jmp
fnstcw
inc
test
data16
cmp
lds
or
push
or
lret
call
ja
in
mov
loopne
js
xchg
xchg
add
mov
dec
cmp
shrb
inc
popf
dec
pop
test
cmp
scas
inc
nop
push
or
ja
push
jo
or
incl
loop
sub
xlat
pop
and
lds
leave
pop
sbb
lret
jmp
fistps
or
cwtl
jbe
iret
sub
xor
popa
in
sub
jle
movsl
lods
fsubr
push
sbb
lahf
je
decl
pop
add
pop
sbb
icebp
outsb
aas
das
stc
addr16
pop
cmp
mov
sub
ficomps
jge
mov
in
faddl
mov
scas
or
jmp
inc
hlt
daa
ret
mov
in
sbb
pusha
into
dec
insb
outsl
shlb
loope
mov
add
std
call
inc
push
scas
test
mov
fcoms
fidivrs
pop
mov
test
incl
aas
xor
lcall
outsb
inc
cmp
xchg
and
jmp
ds
in
insl
cmp
decl
fnsave
jne
add
loop
pop
sar
rcll
cmp
ljmp
movsb
ds
jae
shlb
fmuls
rcr
pop
sbb
outsb
mov
sahf
popf
decl
sahf
fistl
mov
cmp
push
clc
pop
sti
mov
ds
pop
pop
cmp
lcall
jmp
or
push
pop
xchg
mov
jo
and
cwtl
shlb
push
sub
ja,pn
movsl
push
xor
incl
cld
subl
mov
adc
sbb
xchg
ljmp
mov
mov
orb
xchg
and
and
dec
mov
daa
jns
mov
jle
mov
xchg
mov
test
stos
xor
dec
js
mov
icebp
call
push
sbb
lahf
test
ror
push
pop
push
mov
push
popa
fbstp
lcall
addr16
in
ss
sbb
mov
es
out
cli
mov
loope
call
ret
insb
fwait
gs
mov
movsl
movb
dec
dec
and
jp
clc
scas
dec
call
aam
dec
mov
pushf
push
in
repz
daa
pop
cmp
or
add
scas
loop
call
orb
cs
out
int3
push
push
push
mov
and
sbb
mov
arpl
out
jmp
lea
inc
dec
push
stos
outsb
stos
push
jge
or
ja
ds
push
in
test
add
clc
sbb
cmp
rorb
sub
adc
jmp
repnz
or
sahf
nop
pop
mov
shlb
jnp
popa
pushf
push
dec
stos
stos
js
aam
jnp
cli
and
test
sbb
scas
clc
push
sub
mov
mov
lods
sub
pop
push
mov
cmp
sti
popa
sahf
mov
dec
loope
stos
add
xor
test
arpl
adc
mov
jmp
cmp
cmp
lods
adc
test
das
push
sahf
out
xor
rorb
lcall
test
ljmp
jae
cld
dec
mull
mov
into
and
rcr
adc
decl
xlat
adc
sub
and
fistpll
addb
fs
dec
push
scas
out
mov
ljmp
sub
cli
jo
incb
out
mov
test
jg
mov
lods
leave
dec
jb
mov
lret
cltd
sti
sti
in
shrl
leave
sti
jle
sbb
mov
inc
push
xchg
jnp
adc
mov
lret
idiv
incl
dec
gs
rorl
rcll
push
mov
inc
mov
mov
sahf
inc
stc
data16
lea
pushl
loopne
and
mov
in
push
insl
cltd
push
lret
mov
pop
adc
decl
push
pop
adc
sub
xor
mov
mov
lea
call
ret
push
call
arpl
sub
mov
sbb
mov
lcall
inc
xor
add
inc
stos
ja
das
add
adc
jp
mov
push
mov
subb
mov
xor
in
in
fdivr
incl
xor
push
lods
filds
icebp
hlt
nop
adc
xor
je
jmp
sbb
add
pop
push
jbe
insl
hlt
xor
arpl
xor
outsb
add
push
notb
adc
mov
incl
das
test
cwtl
add
fmul
push
stc
xchg
in
xchg
inc
and
jns
movsl
xor
push
nop
aas
mov
mov
ljmp
or
xchg
or
das
mov
cld
inc
lea
pushf
add
call
fisubrl
pop
jp
aad
xor
mov
ljmp
xchg
fwait
repz
add
cmp
or
and
fidivrl
lods
decl
mov
test
bound
add
incl
cmpsb
mov
lahf
lret
je
out
fs
push
insb
mov
fistpl
rcrb
iret
mov
pop
jmp
cltd
fildl
xchg
es
jmp
jo
fdivrl
insb
test
ljmp
lods
jno
sub
mov
and
mov
jne
xchg
je
andl
add
xor
xchg
ljmp
sbb
movsl
cld
mov
mov
mov
xchg
pop
ljmp
sbb
pushl
mov
jg
sarl
xor
pop
cmp
dec
into
loope
lock
loopne
xchg
incl
loop
pop
cmpsb
xchg
dec
sbbb
stc
sahf
push
jg
in
loope
movsl
in
jne
in
pop
xor
adc
out
jnp
mov
jmp
inc
mov
cld
insl
gs
jbe
sub
push
ljmp
aam
mov
add
ds
arpl
sar
decl
sbb
adc
mov
enter
aas
js
add
call
cwtl
fcomps
cmp
fdivrs
and
dec
and
or
dec
enter
call
inc
dec
adc
ret
jmp
adc
test
xchg
lea
fcomip
call
pop
pushf
fpatan
psrlq
dec
test
mov
rcrb
ljmp
aad
popf
and
pusha
negb
fidivrl
shrl
rcll
pushl
add
mov
pop
xchg
inc
outsl
push
addb
xorl
add
jmp
sub
stc
mov
hlt
lea
in
push
arpl
fwait
dec
fwait
push
das
mov
mov
inc
adc
mov
cmp
mov
daa
jp
repnz
mov
mov
fsubl
cmp
std
dec
sbb
call
add
xchg
add
enter
out
push
fs
lock
mov
call
ror
xor
xor
xor
mov
jne
cmpsb
dec
stos
out
add
sbb
push
out
xchg
xor
inc
pop
sbb
ljmp
pop
push
lea
push
dec
add
cli
pop
lcall
push
das
xchg
xor
fisubrl
lds
adc
cmpsb
xlat
popf
xor
xchg
jecxz
mov
sub
push
xchg
push
out
mov
push
jmp
popa
pushf
aam
adc
push
in
adc
decb
into
xchg
xchg
sub
mov
scas
dec
or
pshufw
incl
loope
add
inc
cwtl
xor
int3
bound
or
sub
pusha
sahf
jb
xchg
mov
push
pusha
dec
sub
push
sbb
mov
push
push
cld
leave
adc
adcb
mov
push
adc
xchg
cmc
sub
sbb
xor
mov
pop
mov
test
inc
fwait
in
sub
push
sub
or
cmp
xchg
mov
mov
cmp
rcrb
mov
imul
sbb
pop
std
jmp
push
das
popa
or
fcomps
in
mov
mov
pop
loopne
lret
inc
mov
subps
add
loopne
out
sahf
mov
mov
inc
rcrl
dec
cmp
pop
aam
stos
imul
mov
mov
push
dec
dec
lret
lock
cmp
orb
push
movsb
aas
or
push
call
push
in
in
popa
out
fs
lcall
sub
int3
xorb
decl
dec
fwait
mov
mov
pop
add
fadd
mov
lock
mov
sbb
stos
cmovl
xchg
and
cmp
sub
add
repz
push
jmp
adc
insl
adc
inc
mov
add
ret
clc
lret
inc
cmp
or
pushl
mov
add
pop
and
sub
insl
pushf
dec
or
push
adc
pop
das
cltd
adcb
dec
test
fmuls
xor
outsb
pop
out
out
test
or
pop
mov
cwtl
je
cmp
fninit
insl
outsl
mov
lahf
call
cld
lcall
pop
inc
iret
push
jae
cmp
arpl
xchg
leave
mov
ljmp
daa
pop
add
adc
pop
push
notl
fiaddl
push
movb
outsl
arpl
or
lahf
shl
decb
cmpsl
push
dec
xlat
imul
lcall
out
ss
and
and
push
div
fsubs
push
dec
lahf
nop
xchg
fxtract
dec
mov
sar
cli
fstl
cmpsb
testb
adc
mov
insb
popa
rcl
inc
inc
in
call
cld
jp
cwtl
sti
lods
les
movsl
int
rcr
jns
decl
popf
jno
in
std
aad
loopne
rclb
xor
xchg
shlb
outsb
jp
dec
repz
stc
lahf
mov
sbbl
mov
out
insl
in
adc
ss
sub
aad
fimull
lahf
mov
enter
aas
dec
fisubl
mov
sub
lcall
inc
jb
add
dec
inc
jo
sub
repz
and
das
cli
decl
js
or
adc
ret
pop
shrb
and
shlb
ljmp
dec
or
movsl
enter
jnp
mov
xlat
push
inc
cmp
call
cmpsl
faddl
xlat
jb
imul
sbb
fidivrl
mov
pop
pop
xor
xor
pushl
and
push
cmp
es
mov
xchg
jg
cmp
shr
aad
mov
mov
sbb
loope
enter
scas
call
dec
xlat
mov
dec
loope
jp
int
xchg
hlt
div
mov
push
imul
cmp
aam
mov
fistpll
jae
cmp
pushf
dec
outsl
ret
fisttpll
push
shrb
js
adc
or
push
addb
cwtl
jg
sbb
ret
pop
ja
jnp
repnz
mov
cmp
jb
dec
fisubs
mov
jg
dec
incb
cmpsl
out
jge
pop
sub
jp
mov
inc
xchg
or
sar
call
inc
lods
sbb
data16
scas
into
dec
xor
in
add
jno
rolb
mov
mov
add
cmp
rcrb
xchg
sbb
mov
xor
lea
fwait
sbb
dec
adc
pushl
test
sbb
lret
rsm
jp
mov
adc
ljmp
pop
lret
sub
cld
cmp
adc
sub
add
daa
sar
aas
dec
repz
jl
pop
jno
jge
fldl
xchg
push
add
jg
sub
inc
sbb
push
cmpsb
into
or
fistpl
sbb
xchg
fbstp
out
jmp
push
pop
ret
repnz
loope
pop
pusha
add
pusha
leave
mov
or
jns
or
mov
ljmp
push
mov
push
pop
roll
mov
xchg
fsub
adc
scas
sbb
sub
mov
incl
mov
sti
inc
pop
xlat
cmp
movsl
idivb
ret
in
or
jnp
test
mov
pushl
test
xchg
imul
rcr
ljmp
pop
pop
sbb
dec
jae,pn
jp
dec
int
nop
les
adc
pop
in
outsl
cli
jl
jae
xchg
cmp
sub
leave
daa
push
in
rcrl
gs
sub
lcall
mov
add
popf
add
scas
adc
fs
shll
jmp
jg
ja
dec
or
sub
sbb
jg
lods
out
lret
jmp
mov
inc
fsubrl
pop
push
pop
adc
fstl
movsl
or
mov
mov
inc
ret
sarb
push
xchg
fmull
push
jmp
mov
scas
cli
jae
push
in
mov
pop
push
icebp
stos
xchg
xchg
sub
cs
mov
xchg
sub
push
scas
test
nop
insl
or
sub
cmpsb
mov
sar
inc
pop
cmpsb
shlb
sub
orb
mov
inc
add
movl
mov
pop
shlb
sahf
out
fcoml
shlb
lods
xlat
jmp
shlb
test
fwait
lea
fdivr
in
inc
mov
push
fdivrl
call
cmp
je
sub
ds
jp
cmp
push
movsl
jle
mov
xor
ljmp
xor
repnz
bound
in
dec
retw
std
ljmp
int3
iret
jb
push
jbe
ss
jge
pop
shll
push
insl
testb
or
push
call
pop
movsb
mov
jnp
mov
inc
cmpsb
lock
lahf
clc
pop
mov
je
je
or
lcall
mov
fmul
cmp
cwtl
mov
cmp
xchg
add
jmp
cmpsb
jecxz
fcmovnb
pop
hlt
xor
mov
lcall
mov
jle
dec
mov
sub
dec
out
jl
mov
sbb
dec
pushl
pop
pusha
lahf
push
sbb
jle
mov
mov
ret
and
sub
enter
push
xchg
xor
or
aam
in
out
bound
sar
dec
dec
jnp
in
add
pop
aam
lds
lea
loope
fsts
testb
jge
sbb
sub
mov
or
gs
in
clc
cmp
jecxz
cwtl
stc
ret
xor
std
std
ljmp
mov
adc
rcr
das
push
out
and
fldenv
ficoms
gs
outsl
clc
aaa
pop
in
out
xchg
popf
xchg
fsubrl
jecxz
ss
cmp
call
ljmp
sub
jns
push
fmulp
pop
mov
int
inc
filds
stos
ds
mov
pushl
push
add
pop
shrb
xchg
jg
jle
stos
loope
ss
loope
and
mov
lock
or
incl
push
xor
bound
jle
test
bound
xchg
fcomps
sub
pushl
lahf
xor
out
sub
aam
mov
fcoms
sbb
inc
inc
dec
jae
pop
loop
loop
lcall
pcmpeqw
dec
jp
push
ja
sbb
xor
mov
cmp
pop
push
popf
jmp
idivb
testl
adc
jecxz
adc
mov
mov
scas
cli
imul
movsb
cmpsb
rolb
xor
add
call
pop
add
lret
sub
cmp
loop
arpl
mov
xchg
jmp
xchg
int
or
mov
push
jns
pop
push
loope
and
mov
es
rcll
jge
js
div
dec
cmp
sar
lcall
dec
xchg
cwtl
test
xchg
push
imul
cwtl
nop
lock
jg
add
mov
adc
in
jge
call
aad
xor
fdivs
daa
outsl
adc
xor
cs
iret
dec
dec
pop
addr16
pushl
sub
fidivs
in
xchg
push
in
scas
cld
sti
dec
cmp
mov
xchg
pop
cmp
push
cmp
mov
or
add
dec
out
rcrl
dec
jmp
xchg
lea
jg
jb
push
inc
popf
mov
adcb
sub
sar
stos
and
mov
insl
mov
adc
jno
xchg
push
mov
cwtl
mov
add
and
arpl
arpl
ljmp
cli
jnp
sti
sub
rclb
pusha
pop
inc
push
push
dec
shlb
sub
inc
push
jl
scas
cmpsl
add
lock
cmp
add
loop
xchg
ret
ret
push
add
inc
mov
inc
jo
sub
mov
mov
pushl
lods
in
inc
add
and
add
dec
xor
sub
mov
jp
enter
xor
neg
cld
jg
sbb
xchg
popa
mov
int
mov
imul
xlat
xorb
incl
xchg
mov
push
cmp
in
jo
cld
cwtl
cld
add
aad
scas
adc
test
popf
push
mov
inc
cmp
es
push
fiadds
ret
pop
clc
fwait
test
decl
mov
lahf
gs
mov
dec
scas
xchg
inc
adc
or
lahf
mov
fdivl
das
out
jge
call
in
sbb
jno
mov
clc
mov
xor
push
daa
inc
orb
push
lds
dec
inc
fildll
adc
mov
push
rorb
sbb
or
fcomps
mov
adc
js
inc
mov
popf
fcmovb
std
ljmp
cmpsb
mov
fs
xchg
shrb
sub
mov
mov
cmp
test
test
aam
inc
data16
jg
pop
adc
mov
movsb
sub
sub
sub
inc
call
loopne
add
sbb
xchg
sbb
xchg
xor
xor
xchg
call
mov
jno
inc
inc
mov
or
cmp
mov
or
adc
incl
add
cmp
lods
adc
lock
push
ljmp
adc
jo
ss
or
sbbb
dec
repz
call
dec
and
in
or
sar
mov
stos
sub
movsb
mov
inc
or
jg
pushf
orl
out
xchg
cmpl
jecxz
dec
push
cltd
idiv
xlat
out
or
into
and
mov
gs
mov
das
mov
jae
mov
add
or
repz
mov
into
je
mov
mov
or
dec
cmc
iret
adcb
pop
cmp
call
push
mov
shll
dec
repnz
or
mull
lea
popf
inc
lcall
push
cmp
fists
xchg
or
push
push
add
lea
jmp
push
cli
mov
fcoms
ljmp
adc
mov
test
sub
cld
imul
and
mov
mov
sbb
add
fisubrs
mov
mov
incl
mov
sbb
divb
push
out
cli
in
push
test
push
popa
xchg
hlt
mov
fbstp
mov
dec
dec
daa
lods
xchg
loopne
loope
sbb
incb
sbb
jmp
in
jecxz
dec
imul
cld
add
xlat
std
stos
dec
adcl
std
mov
decl
les
jecxz
mov
pop
xchg
sbb
xor
jb
incl
lea
lds
daa
imul
inc
movsl
aam
testl
decl
fidivl
outsl
sbb
into
adc
insb
fdivs
or
jo
sub
sbbl
insl
cmc
mov
sub
add
sub
pop
inc
and
movsl
fcmovu
inc
hlt
or
sub
insl
jno
pop
dec
add
stos
push
ljmp
cmpsb
aad
inc
fcmovb
mov
lods
fsubp
xchg
jmp
xchg
sbb
cwtl
ljmp
outsl
xor
dec
add
js
jg
int3
or
adc
fcoms
popf
test
or
gs
call
xchg
sete
xor
mov
jnp
push
loop
ja
mov
xor
xor
cmp
icebp
mov
dec
pop
adc
pop
sbb
xor
jo
push
cmpsl
call
js,pt
cmp
loopne
and
mov
mov
loopne
inc
sbb
inc
push
aad
lds
fcomip
pushl
aad
jno
cli
or
dec
repz
popf
call
jmp
outsb
jns
jge
cmp
lret
fsubrs
in
arpl
or
dec
mov
outsb
imul
lcall
in
jns
lods
pop
nop
fs
cmc
jno
popf
sub
testb
loope
dec
aas
or
sti
popa
call
cld
aam
sahf
fs
es
adc
pusha
mov
adc
adc
add
dec
repnz
call
xchg
fs
cmp
ret
mov
add
mov
movsb
gs
scas
incl
mov
mov
mov
scas
adc
insb
xor
in
rcrb
xchg
out
lea
in
mov
addr16
adc
pop
push
add
stos
mov
pushl
std
fwait
pushf
mov
push
enter
fsubl
mov
adc
mov
stc
outsw
leave
push
js
popf
or
inc
and
xor
jl
movsl
cld
out
cmp
and
out
call
pop
mov
push
hlt
xor
out
aas
add
push
into
inc
ljmp
xchg
int
cmpsb
sahf
mov
scas
xchg
scas
and
gs
inc
in
out
dec
aad
mov
fsubp
mov
cld
imul
dec
popa
shrl
int3
push
shlb
add
mov
cmp
jp
push
out
xchg
neg
mov
and
mov
int
lock
outsl
add
lock
xor
xchg
sub
in
repnz
cli
pusha
das
mov
xchg
xchg
mov
dec
mov
adc
inc
clc
mov
jne
dec
push
out
cmp
adc
jnp
push
or
jl
adc
mov
adc
sub
hlt
fstps
mov
push
std
mov
xchg
adc
push
add
cmp
je
out
jnp
in
add
rcrb
shrb
addr16
jne
out
push
cmp
push
jle
cltd
adc
jae
xchg
lock
sub
sub
in
pop
aas
xchg
jg
and
mov
sbb
repz
xor
dec
leave
scas
iret
xchg
jmp
xchg
in
popa
gs
xor
mov
es
inc
cmp
pop
pushf
je
decl
notb
es
les
mov
and
jmp
in
sahf
incl
sbb
jle
mov
hlt
adc
push
mov
aam
jmp
lds
sub
push
repnz
test
rcrb
mov
stos
pushf
insl
mov
mov
pusha
in
fnstcw
and
icebp
cwtl
popa
lcall
mov
scas
cli
mov
imul
jecxz
pop
clc
lock
mov
mov
pushl
adc
leave
call
mov
aas
or
data16
shrb
mov
mov
lock
scas
sbb
fwait
cmp
sub
loope
xchg
cmpsl
test
jmp
mov
inc
mov
push
nop
pop
gs
mov
ss
popf
jle
pop
iret
pushl
js
xchg
push
clc
loope
cmpsb
jno
jb
push
pop
std
outsl
pushf
daa
lods
in
cmp
sbbb
call
dec
mov
shr
jecxz
cmp
in
pop
add
aaa
mov
jmp
in
sub
ljmp
and
pop
or
fcomps
xchg
aaa
loop
and
leave
xor
ljmp
pop
adc
int3
repz
inc
popf
int3
pop
jb
pushf
add
mov
das
movsb
decl
sarb
lahf
and
pop
add
mov
cwtl
ud0
jmp
out
sub
push
mov
xchg
mov
lret
xor
sub
inc
pop
or
mov
xor
lcall
and
mov
push
lea
imul
mov
inc
sbb
pusha
clc
dec
cmpsl
adc
mov
mov
in
aas
mov
dec
repnz
mov
scas
cli
mov
jg
loopne
pop
fstpl
sub
int
popf
sti
lea
push
cwtl
clc
sti
mov
in
or
add
push
fxch
aad
stos
jp
push
push
fs
ljmp
daa
xor
lret
cmp
add
mov
ja
mov
or
aas
push
ljmp
or
sub
fbld
sub
cmp
cmp
fisubs
or
outsl
incl
out
fdivs
jae
cmp
mov
push
push
jns
clc
cmp
xchg
pop
dec
je
jae
idivb
push
add
inc
les
jmp
inc
jb
xchg
push
push
xchg
int
and
iret
adc
ss
pushl
test
xor
popf
aaa
sbb
fwait
mov
sbb
mov
push
or
xor
push
loopne
pop
lock
inc
pusha
add
mov
lds
push
fnsave
in
or
pop
mov
pop
cmpsb
sarb
imul
enter
je
mov
or
loop
or
mov
bound
xchg
xor
decl
and
jmp
sub
into
lret
cmp
iret
sbb
popf
mov
mov
bound
call
sub
fsubrp
cmpsl
push
cmc
in
mov
sub
incl
fs
icebp
icebp
inc
mov
cmp
push
adc
pop
stos
inc
adc
push
icebp
jo
jnp
cmp
xchg
aas
mov
mov
sbb
in
cmc
leave
push
add
rep
movsb
sbb
dec
loopne
in
adcb
incl
fwait
int
popf
sahf
lds
int
ja
es
mov
in
adc
mov
or
decl
repz
sbb
nop
sub
mov
ljmp
popa
int3
icebp
mov
das
enter
xchg
pop
insb
shr
call
pop
call
test
add
jle
outsl
lea
stc
dec
mov
cwtl
sub
inc
mov
movsl
pop
cmc
call
shlb
mov
dec
dec
insb
push
movsl
ljmp
mov
mov
fdivrl
inc
in
mov
cld
lods
dec
out
or
aas
cmp
cmp
sbb
pop
fdivs
cwtl
inc
pop
push
cmp
cmp
aam
subb
testl
mov
jmp
xchg
adc
adc
xor
data16
loop
icebp
sbb
imul
out
dec
mov
pop
push
add
inc
out
mov
push
xorb
cmp
lcall
out
std
les
push
xor
loopne
sbb
adc
mov
push
or
mov
or
cmpsl
or
cli
mov
cs
adc
inc
mov
mov
push
lcall
add
filds
adc
dec
inc
jmp
cwtl
sbb
int3
in
adc
mov
push
test
mov
aaa
mov
pop
inc
fbstp
push
imul
cmp
mov
jbe
dec
out
cmp
push
shrb
popf
sbb
or
mov
dec
cmp
aas
push
cmpsl
mov
and
add
mov
je
repz
adcl
lcall
bound
rcrb
push
jmp
ds
or
fcoms
shr
jmp
and
mov
mov
cmpsl
clc
cmc
cmp
and
stos
dec
mov
cmc
cmp
call
enter
xchg
mov
pushf
dec
push
daa
ljmp
mov
dec
xlat
xlat
push
rep
push
lcall
dec
pop
lds
xchg
je
ret
frstor
pop
rol
ljmp
fiaddl
mov
inc
sbb
cmpsb
xor
mov
push
cld
jmp
pop
cld
jmp
pop
dec
rcl
mov
sbb
ljmp
aad
loop
jo
bound
xor
jle
lcall
add
pop
jae
xor
mov
leave
inc
iret
call
decl
mov
sub
and
jg
inc
mov
mov
popa
add
int
decl
jg
mov
xor
je
jnp
and
inc
mov
or
mov
jmp
xor
jmp
jg
stos
sbb
lahf
lret
sub
sbb
test
push
das
cli
decl
sbb
cmp
sub
xchg
push
pop
mov
pushl
fs
or
or
stos
jecxz
mov
sbb
add
cld
mov
mov
cmp
ljmp
pop
xor
and
mov
setl
push
cmp
hlt
xchg
enter
decl
xchg
jns
fcmovne
inc
mov
jg
inc
mov
scas
add
push
cmp
sbb
jmp
notb
int3
movsl
mov
mov
in
mov
cmp
test
stos
ljmp
mov
ja
icebp
fidivrs
xchg
fldcw
cmpw
test
fists
push
dec
nop
mov
cmp
cmp
ljmp
jle
or
into
shr
jno
and
jbe
push
test
mov
rcrb
adc
jno
ss
cmp
imul
cmpsb
jmp
dec
andb
enter
shlb
loope
xor
std
or
dec
or
xor
shlb
in
movsl
cmp
icebp
jno
xor
sub
data16
call
xchg
or
hlt
push
lahf
dec
add
dec
xor
inc
pop
jne
call
les
cli
adc
and
lods
or
stc
outsl
push
xchg
xor
dec
call
std
or
js
xchg
cwtl
sub
cli
and
jae
lods
jmp
dec
aam
stc
arpl
shlb
js
clc
daa
rol
push
imull
insb
inc
jae
xchg
adcb
xchg
adc
or
dec
jle
push
outsb
mov
int3
add
leave
xchg
fcomps
decl
mov
dec
movsb
mov
xor
iret
aam
fimull
decl
outsl
and
push
imul
cld
loopne
ds
lcall
mov
out
push
movb
aaa
cmp
popf
repz
stos
pop
dec
and
xlat
push
call
daa
and
insb
sahf
fstl
sub
aas
add
push
push
jbe
out
stc
push
in
mov
test
fdivrs
mov
lock
cld
jmp
add
enter
pop
jl
add
mov
push
cmpsb
dec
push
or
leave
fists
lcall
sahf
xchg
inc
mov
push
dec
inc
cmpsb
push
out
incb
sbbb
iret
dec
mov
imul
dec
fwait
inc
cld
cmp
jns
faddp
aam
pop
loopne
lcall
or
jmp
test
mov
mov
decl
lock
jl
cmp
lods
cs
ja
movsb
fs
push
sbb
call
repz
outsb
dec
test
xor
call
inc
dec
push
fdiv
xor
cmp
mov
mov
fldl
mov
arpl
sti
cli
movsl
inc
andb
clc
mov
decl
pop
test
leave
jno
or
imul
jmp
decl
add
repz
pop
and
nop
dec
pushf
movups
call
call
push
mov
and
mov
inc
xor
pop
jae
adc
or
xor
shrb
es
ljmp
add
int
cli
rolb
test
mov
xchg
into
or
fsubp
jbe
and
adc
fiaddl
adc
jne
bound
or
scas
cwtl
scas
pop
cmp
push
mov
notb
jp
das
in
sbb
push
clc
sbbl
inc
cmp
xchg
std
pushl
lea
mov
std
in
stos
ret
sbb
test
fdivs
or
ljmp
call
push
push
push
and
fs
mov
out
imul
call
lcall
call
fisubs
lods
add
fisttpl
mov
xor
cmpsb
xor
jle
jp
mov
mov
sbb
mov
arpl
cmc
out
call
and
rcll
fnstcw
js
lock
enter
nop
xchg
pop
cltd
outsl
lcall
popa
mov
mov
ljmp
inc
sub
or
dec
and
lahf
fsubrl
xlat
push
icebp
add
or
cmpsl
add
mov
pushl
cmp
andl
xchg
mov
and
push
jge
pop
addb
xchg
icebp
out
pop
xor
cli
xchg
test
add
aaa
lcall
push
mov
loop
cs
push
pop
cmpsb
add
xchg
mov
sub
mov
in
int
call
mov
insb
orl
mov
rcr
data16
ffreep
jns
dec
test
lcall
outsb
ffreep
mov
stos
sub
xor
cmp
jecxz
sarl
lods
add
push
mov
mov
in
push
mov
daa
dec
aaa
add
shrd
jg
pusha
arpl
sub
xchg
adc
sub
inc
mov
popa
ljmp
xchg
decl
push
or
stos
pop
pop
int3
je
pop
mov
cmp
frstor
lock
push
aam
jle
test
pop
dec
std
inc
mov
push
outsl
cltd
cmpsb
imul
out
cmpsl
call
roll
mov
mov
stc
sbb
sub
cli
xor
sbb
xor
roll
in
dec
mov
pop
in
pop
push
dec
lahf
sub
je
mov
fs
mov
pop
jne
xor
loope
fcomps
lcall
mov
mov
gs
addr16
sti
mov
jle
dec
cmp
lahf
call
mov
xchg
cmpsb
or
or
xchg
mov
jne
xor
jo
jmp
jnp
add
jg
add
pop
mov
cmp
pop
push
cmpsl
fcmove
inc
lods
jg
decb
ficoml
or
or
lock
addr16
jb
inc
testl
and
icebp
xor
mov
cmp
jae
sub
dec
mov
je
nop
jmp
jp
scas
jae
mov
arpl
push
bound
aaa
sbb
stc
aam
leave
inc
bound
jmp
adc
fxch
sub
xchg
mov
cwtl
pushf
mov
mov
cmpsb
sbb
cmp
adc
cltd
call
mov
dec
rol
nop
aaa
push
popf
pop
push
cs
lret
jae
cmp
loopne
mov
insl
cld
rorl
inc
scas
out
adc
lahf
inc
xor
cmp
add
in
clc
pop
lret
mov
add
in
cld
sub
mov
push
xchg
cwtl
mov
adc
mov
rcrb
pushl
mov
popa
push
mov
nop
add
enter
popf
call
mov
incl
jl
cmp
sub
dec
out
dec
dec
dec
xchg
scas
arpl
imul
call
repnz
dec
ss
pop
cli
pop
sub
jno
rcrb
outsl
inc
rcll
dec
lock
mov
jmp
xchg
mov
scas
mov
xor
incl
jnp
ret
imul
push
insb
cmp
scas
std
out
testb
test
fs
mov
out
push
ja
and
bound
test
add
popf
adc
add
in
clc
pop
sbb
push
nop
jg
call
jnp
or
sahf
xor
dec
mov
loopne
and
pusha
sub
incl
rolb
push
push
adc
push
leave
rolb
testb
ljmp
and
fwait
stos
arpl
fisubrs
decl
cmc
lcall
adc
mov
mov
sbb
std
test
sbb
jmp
lret
stos
adc
insb
outsl
sub
sarl
imul
push
adc
hlt
sahf
dec
std
iret
xor
inc
mov
inc
push
outsb
mov
jmp
loope
add
xchg
data16
xchg
jg
mov
sbb
cmpsb
xor
lcall
push
loopne
add
in
insb
push
pop
push
arpl
es
jo
sahf
in
popf
pop
sub
jg
je
xchg
or
lods
jl
pop
cs
sub
mov
sbb
jmp
pushf
ljmp
or
mov
push
lock
mov
or
or
pop
or
lret
dec
stos
lods
push
or
xchg
mov
pop
xor
lods
nop
xor
daa
jg,pt
adcl
cltd
sbb
add
cmovs
xchg
wrmsr
loop
outsb
cmpsl
jae
push
leave
and
ljmp
fsubl
in
pop
js
ljmp
lcall
mov
fs
stos
addl
insb
pop
dec
adc
cmpsb
jmp
out
xchg
cwtl
dec
leave
pushf
stos
scas
scas
mov
enter
xchg
stos
cli
pop
dec
ret
xchg
push
ljmp
stos
jbe
lret
pop
mov
inc
adc
lret
jo
xor
xchg
cmc
mov
adc
dec
jno
sbb
xor
jmp
and
adc
filds
jmp
sahf
movsb
cmp
aaa
test
jb
mov
cmp
add
icebp
ljmp
adc
loope
dec
ljmp
ds
inc
add
in
out
rcr
std
cmpsl
in
inc
inc
inc
push
mov
add
push
mov
and
mov
pop
leave
rcrl
add
lret
mov
daa
xor
loopne
mov
pop
adc
jae
push
jg
add
sub
or
call
jo
int
xor
mov
inc
and
jo
repnz
jl
adc
cmp
stos
mov
call
icebp
or
xlat
xchg
xor
push
cmpb
jg
test
mov
test
pop
adc
nop
mov
ds
mov
lcall
or
imul
mov
cmp
xlat
icebp
ljmp
cli
inc
xchg
push
jae
xor
dec
add
xchg
mov
gs
push
cmp
loop
ret
xchg
mov
es
scas
ljmp
loope
lahf
mov
lea
rcr
inc
push
adc
dec
pushf
inc
jo
incl
out
push
pop
dec
mov
mov
mov
pop
cmp
leave
inc
xchg
xor
jmp
adc
or
or
movsl
mov
test
xchg
aas
xchg
inc
push
incl
scas
into
push
sbb
les
pushf
inc
dec
adc
pop
xorb
cmp
call
ja
jle
or
add
cmpsb
andb
cmpsb
neg
imul
gs
jmp
adc
jo
ljmp
add
mov
pop
mov
xor
aam
or
call
bswap
aaa
iret
clc
jge
mov
stos
push
xchg
cmp
push
sbb
incl
int3
pop
cmpsb
jecxz
int3
jle
fcomp
cmp
pusha
cmp
push
xchg
dec
out
arpl
sub
mov
push
mov
data16
int3
push
sti
daa
out
jp
mov
jo
clc
std
jns
cmc
lods
aaa
xchg
shlb
imul
popa
pop
sbb
loop
hlt
incl
inc
das
sbb
lods
inc
lahf
aam
xor
and
dec
aaa
cld
lcall
adc
test
mov
dec
push
outsb
dec
scas
aas
inc
mov
mov
pop
lret
pop
and
mov
in
adc
dec
outsb
cmp
add
sbb
outsb
prefetchnta
xor
fdivr
pushf
xor
add
xchg
jl
or
adc
pop
fdivp
ljmp
call
adc
sbb
dec
push
and
dec
xchg
xchg
les
daa
lret
jae
adc
add
sub
fisubl
xchg
xorb
mov
scas
aam
cmpsl
rol
or
paddb
mov
and
cmpsl
pusha
jg
push
fadds
mov
cwtl
sbb
or
push
insb
sub
fst
and
fbld
sub
sbb
outsb
add
ret
pushf
push
das
add
mov
cmpsb
mov
cmp
push
and
mov
bnd
aad
or
imul
inc
jno
mov
outsb
lds
mov
pop
clc
aaa
mov
andl
repnz
ud0
cld
push
je
loop
lea
sub
push
dec
inc
cmp
ljmp
mov
shrl
adc
xor
rcrb
repnz
jmp
mov
inc
shll
imul
cmpsl
xor
adc
cmpsl
add
jnp
lahf
cld
dec
pop
pop
cmpsl
push
mov
jg
cmp
cli
sarl
xor
sub
dec
lods
fdiv
push
jbe
lcall
and
inc
repz
mov
push
push
ja
mov
cmpsl
push
jb
outsl
push
ljmp
and
and
mov
push
outsl
aad
cmpl
incl
inc
bound
aad
aad
inc
int
loope
xchg
ret
lret
movb
xor
orb
ja
imul
inc
ljmp
out
inc
pusha
push
add
xchg
jbe
fiadds
or
out
stc
mov
sti
sbb
sub
pop
movsl
inc
shlb
bound
mov
ja
inc
cmp
jo
lods
dec
adc
add
mov
mov
cmpl
decl
imul
cli
add
pop
shrb
out
loopne
jmp
js
movsb
pusha
adc
inc
dec
push
ret
repnz
imul
cmp
cmp
inc
jmp
int3
outsl
lods
inc
mov
dec
mov
jae
adc
stos
add
mov
in
mov
inc
loopne
iret
xor
mov
xchg
cmc
repnz
add
decl
daa
lahf
insb
inc
xor
inc
mov
push
mov
je
daa
stc
mov
outsl
cmp
lcall
sbb
je
in
addb
iret
mov
scas
mov
decl
out
xchg
dec
xor
jae
cmp
icebp
mov
sub
in
sbb
cs
cmpsb
decl
arpl
loope
adc
jns
adc
aam
dec
int3
add
or
pushl
std
cmp
add
add
xor
cmpsl
pop
dec
sub
decl
insb
cmc
pop
mov
addr16
add
xchg
das
mov
jecxz
inc
call
cmp
popa
ja
xorb
fistpl
pop
adc
arpl
mov
out
pop
mov
push
incl
cmpsl
xor
dec
scas
scas
adc
mov
jl
pop
in
or
adc
popf
shll
mov
ljmp
jnp
and
inc
repnz
shlb
xor
cld
jg
pushl
lahf
test
and
push
and
jno
and
push
fwait
cmpsl
lret
pushl
cli
cmp
dec
movsb
repnz
adc
test
xlat
dec
mov
mov
mov
loopne
add
jle
fwait
test
rcll
incl
cmpsl
pop
icebp
pushl
push
das
pop
inc
push
adc
aad
inc
in
mov
decl
loop
in
cmp
repnz
push
mov
in
mov
sarb
push
scas
inc
and
pop
and
sub
call
fmuls
sub
mov
and
arpl
or
out
movsl
sub
dec
dec
into
and
in
mov
and
or
std
ds
pop
fildll
push
stos
mov
xchg
jbe
inc
xchg
or
in
jae
and
xchg
xchg
mov
out
push
xchg
pop
call
push
movsl
adc
add
ret
lcall
push
fnstenv
jnp
jmp
leave
in
sbb
das
cli
jl
mov
jmp
jmp
mov
jg
or
incl
incl
jne
repnz
mov
xchg
outsb
or
fwait
int
sub
incl
xchg
and
arpl
scas
cmpsl
movsl
sbb
popf
mov
xchg
fcmovu
jmp
cmp
lock
aaa
out
outsb
sub
pandn
push
lahf
or
sbb
sbb
rcll
sti
into
dec
in
aad
jle
adcb
lret
pushl
clc
sahf
mov
shrl
addr16
cmp
fists
adc
int
jb
decl
dec
add
mov
xlat
rcll
fs
call
xor
adc
jae
jg
dec
cmpb
or
addps
lock
cmp
stos
add
pop
push
dec
ljmp
jo
sub
rcrb
pop
jg
ljmp
pop
jb
aaa
or
cltd
push
loop
scas
xchg
xchg
pop
fmuls
cmp
mov
call
lcall
fdivl
call
pop
lods
ljmp
fists
jbe
movsb
rolb
sbb
jae
add
cs
lret
jg
ds
iret
pop
mov
mov
outsb
adc
addr16
sti
mov
inc
inc
sub
call
out
cmp
arpl
mov
scas
pop
cmp
jmp
mov
adc
clc
out
test
mov
movsb
lcall
sar
cld
jae
call
in
mov
or
sbb
lret
xchg
out
pop
jge
mov
or
out
xor
les
jne
xchg
and
dec
enter
add
jg
data16
and
out
sub
jbe
or
push
fcomip
mov
jae
mov
lahf
jmp
dec
xchg
lret
mov
icebp
or
sub
push
cwtl
test
lret
mov
cmpxchg
lock
mov
sub
test
or
loope
push
test
and
pusha
xchg
fiaddl
iret
sar
ljmp
decl
xlat
push
push
frstor
and
shlb
clc
fnstcw
arpl
pushl
lods
imul
sub
in
aaa
xor
jne
add
push
jg
int3
loop
into
les
adc
mov
cmp
adc
jl
mov
pop
sbbl
iret
stos
or
jb
aad
jmp
lahf
sub
pop
push
jae
testb
jne
cli
pop
shll
in
decl
clc
mov
xchg
aam
dec
dec
or
and
inc
enter
or
loopne
insl
data16
in
inc
xlat
int3
sub
in
leave
push
and
mov
lcall
lods
out
and
sar
pop
cmp
fdivrl
pusha
dec
sahf
and
push
popf
inc
insb
xor
mov
jmp
insl
mov
adc
ret
lcall
lods
mov
pop
arpl
ja
and
fcomip
inc
imul
mov
lret
xlat
fnsave
sti
xor
xchg
inc
loopne
xor
xor
pop
fdiv
imul
ja
sub
inc
cmp
in
fs
jmp
arpl
iret
cli
sahf
inc
add
mov
cmp
negb
inc
xchg
outsl
mov
xchg
js
push
mov
mov
jmp
mov
cmc
out
mov
jb
cmp
daa
mov
js
add
icebp
rcl
mov
xchg
lcall
cmp
outsb
aaa
outsl
push
mov
out
jnp
cmp
jmp
push
xor
incl
xchg
cmp
push
std
inc
shrd
cmp
test
scas
add
jle
jge
adc
pop
ljmp
out
mov
enter
xorb
cmp
les
adc
outsl
dec
sub
and
xor
dec
add
xor
pop
lret
incl
bound
andl
mov
mov
loopne
enter
call
sbb
push
jo
lahf
adc
into
imul
movzbl
in
nop
pop
daa
mov
incl
mull
add
cld
pop
lahf
mov
mov
sbbl
fwait
or
incl
cli
aas
data16
lret
push
and
test
lock
or
push
movsl
test
jg
loop
cli
mov
lods
and
pop
in
popa
dec
mov
mov
decl
xlat
test
insb
fstpt
pop
mov
mov
je
push
lret
repz
clc
decl
xor
test
pusha
xchg
push
mull
pop
fs
cmp
inc
es
mov
pop
pop
xor
hlt
mov
and
jbe
neg
xlat
enter
test
fidivl
push
sub
sub
fsubl
cmp
out
fcomip
or
xchg
loope
push
xchg
adc
xchg
jp
out
mov
add
mov
or
test
cli
sbb
pop
je
xchg
lea
decl
hlt
jmp
push
lret
out
and
jg
lds
and
push
dec
mov
lcall
les
imull
xchg
adc
mov
adc
out
lret
mov
loope
cld
and
mov
movsb
ds
cwtl
cmpb
decl
out
mov
das
addr16
incb
jae
popf
cmp
in
fcom
sbb
popa
mov
or
xor
cmpsl
lea
rolb
pushl
std
jl
arpl
mov
pop
cmp
xchg
sub
movsb
xchg
push
leave
gs
not
repz
lcall
movsb
mov
rolb
jg
inc
or
jmp
sarl
fstpl
sbb
stc
scas
icebp
loop
aas
adc
rcll
sub
and
xor
int
adc
push
std
decl
cmp
roll
lcall
xchg
pop
push
xor
inc
and
push
shlb
jg
loopne
cld
outsl
pop
ljmp
addr16
cmpsl
fstps
inc
cmpsl
aaa
dec
rolb
sub
xchg
mov
pop
inc
sbb
jb
jle
cs
adc
pushl
lock
xor
mov
test
jo
nop
into
mov
movsb
add
lcall
decl
bswap
movsl
gs
sbb
xor
push
imul
incl
test
xchg
rcll
clc
ficomps
leave
fcomip
jge
dec
into
sub
cmp
pusha
addr16
cmpsl
test
xor
or
int
xchg
adc
decl
icebp
add
rorb
dec
push
sub
sbb
aad
fcoml
fidivl
stos
decl
mov
inc
push
jb
dec
or
ss
jg
jge
pop
test
ljmp
or
xchg
data16
push
lahf
ss
dec
or
aad
jmp
pop
jne
mov
hlt
ret
fsubs
xor
cs
pop
push
sub
jp
int3
mov
inc
mov
lods
leave
sti
ds
xchg
cmp
loope
inc
stc
nop
add
dec
mov
jno
sbb
mov
in
push
jae
xor
cli
ljmp
repz
sub
cmp
je
cltd
fldcw
sahf
fsubrl
std
pushl
fsqrt
dec
popf
and
fbld
jp
sahf
andb
add
xchg
sbb
lret
pop
pushl
sub
push
fsubr
ja
push
imul
push
dec
xor
push
pop
inc
lcall
mov
fcomip
pusha
hlt
push
mov
arpl
lods
inc
sbb
call
pop
jmp
fwait
incb
sbb
out
sub
xor
jb
xchg
xchg
jmp
lcall
scas
pop
pop
subl
repnz
in
in
addr16
call
lock
scas
add
lcall
dec
mov
jecxz
mov
cld
roll
xorb
loope
mov
xlat
mov
inc
fildll
ds
add
mov
fnstenv
jns
cld
stos
jns
orb
dec
dec
push
and
adc
leave
cmc
ja
clc
xor
test
cmp
pop
mov
repnz
dec
repnz
mov
ljmp
sbb
sbb
ljmp
mov
lods
add
or
xchg
pop
mov
mov
and
decl
lahf
cmp
daa
lahf
jle
lods
gs
ret
jno
icebp
std
xorl
pop
test
in
mov
inc
jp
in
sub
jge
add
outsl
xor
dec
add
call
roll
xchg
mov
and
push
mov
aaa
mov
scas
adc
mov
mov
bnd
icebp
adc
xchg
push
mov
xchg
sbb
pushf
lret
mov
test
jmp
jb
movsb
jp
mov
push
dec
divb
push
pop
call
mov
mov
sub
rorl
mov
push
adc
ljmp
mov
mov
cmpsb
cmpsb
mov
add
jns
mov
movsb
cmpl
or
inc
lods
sub
shrl
cmpsl
pop
inc
stc
sub
call
dec
pop
rcr
pop
stos
pop
inc
cmpsl
pop
push
pop
or
dec
mov
xor
xor
je
mov
lcall
sub
loope
mov
inc
jmp
push
icebp
ficompl
jge
adc
jnp
mov
sar
enter
push
xor
mov
or
pop
fdivr
scas
push
dec
jae
jmp
xor
pop
cs
xchg
stos
jns
cmpsl
insb
repnz
sbb
les
out
inc
dec
mov
lcall
or
push
pop
and
bound
das
xchg
in
or
cmc
nop
or
jno
jp
fcomip
sub
pop
ret
cmpsb
sbb
pop
sbb
lock
nop
jo
sub
sub
cli
aad
or
dec
outsl
es
incl
popa
jl
fisttpl
aad
call
cld
push
push
lods
adc
mov
popf
ljmp
loope
lahf
imul
outsb
sub
jbe
pop
sub
add
stos
sti
les
ss
call
insl
popf
insl
scas
and
out
mov
cmp
and
or
or
ret
push
call
sbb
sbb
push
cld
ja
shll
jmp
mov
mov
fisubrl
cmp
incl
dec
mov
popf
sub
fsubrs
sub
lret
adc
ljmp
jl
mov
pop
insl
jns
push
lock
jecxz
sbb
in
jmp
in
sbb
sbb
imul
les
das
sbb
sbb
scas
pop
clc
fbld
mov
fwait
ret
test
lahf
insb
sbb
lret
test
cltd
imul
pushl
addl
jns
pop
cmpsl
xlat
ret
sbb
ljmp
outsb
xor
dec
add
mov
test
leave
push
sbb
jb
dec
gs
push
or
dec
cmp
gs
int
cmp
xchg
mov
fcomip
mov
dec
ds
aam
dec
movsb
xor
les
push
aas
cmpsl
sar
mov
call
push
cltd
sti
pop
push
daa
in
scas
ljmp
adc
std
jle
jmp
enter
inc
sbb
adcb
sbbl
cmp
pusha
lods
je
or
ljmp
lahf
mov
in
gs
loopne
jb
hlt
in
dec
aad
ljmp
inc
adc
fdivrs
sbb
fs
stc
and
push
dec
cwtl
cmp
test
jg
cwtl
xchg
in
push
scas
outsb
jnp
lods
push
dec
movsb
mov
and
stc
ds
mov
lds
outsb
pop
dec
dec
incl
testl
loopne
std
cmp
push
pusha
push
arpl
call
push
pop
adc
stos
xchg
dec
loopne
push
insb
aaa
dec
add
jg
xor
pushf
push
call
iret
les
nop
cmp
dec
xchg
lea
xor
std
push
xchg
ljmp
mov
add
aad
sahf
ret
push
shrb
pop
or
push
pop
cmp
pop
mov
jns
pop
iret
dec
adc
dec
call
cmp
mov
pop
dec
mov
out
arpl
imul
scas
inc
and
jmp
decl
lods
ss
adc
pop
iret
cli
pushf
lods
or
mov
fs
pop
inc
scas
jb
mov
mov
imul
jle
xor
xor
inc
sti
xchg
daa
sub
fcomip
mov
dec
lea
jne
xchg
dec
test
or
jae
or
mov
xor
inc
mov
jp
hlt
dec
push
scas
jg
out
loope
sub
pop
sub
adc
xchg
cmp
std
jl
mov
jb
sbbl
out
cli
icebp
jg
inc
pop
push
lods
ret
adc
pop
cli
jg
xchg
inc
ud0
call
es
xor
mov
or
mov
fdivrl
fwait
push
lahf
imul
pushl
add
pop
pusha
mov
fidivrs
push
mov
loop
ljmp
mov
popf
fistps
push
and
push
jmp
add
xchg
jb
pop
out
call
and
hlt
mov
adc
insl
push
iret
out
into
xchg
pop
enter
sub
decl
addr16
pop
mov
lret
xchg
xchg
outsb
ja
hlt
jo
jbe
jg
jae
add
sbb
add
decl
rorb
cmpsl
aam
mov
cmpl
dec
addr16
lea
jo
mov
xlat
sbb
dec
imul
repnz
jb
mov
or
dec
fisttpll
outsl
fisttpl
rorl
lcall
outsl
aaa
mov
imul
outsl
test
jp
push
and
jne
hlt
aam
sub
pushl
mov
xor
in
jp
pop
mov
add
or
or
xor
jmp
stc
lret
hlt
mov
sahf
and
fstsw
lret
in
loopne
je
out
dec
push
decl
fucomp
lds
outsl
in
imul
decl
fidivrs
dec
pop
inc
daa
dec
pushf
mov
sub
push
or
mov
ja
mov
call
mov
and
push
bound
decb
outsb
or
lret
xchg
out
fisubrs
jmp
inc
xor
shll
dec
pop
gs
mov
cmpsl
and
sub
pushl
es
imul
mov
call
xchg
and
add
adc
aad
cwtl
cmc
aam
pushl
stos
inc
jb
rorl
pop
cmc
das
inc
addr16
mov
fwait
push
out
ljmp
or
mov
cmpl
out
xchg
je,pn
decl
lahf
xor
and
jecxz
xorl
inc
push
je
shll
dec
jo
cmp
push
or
ret
or
mov
clc
mov
jne
inc
xchg
addr16
mov
out
lahf
cli
inc
inc
xchg
jp
scas
sbb
pop
ja
fs
push
in
xlat
cld
jmp
add
lock
aaa
or
aam
lea
lock
cld
loop
sub
add
js
and
pushl
xor
cmp
jnp
inc
cmpl
adc
and
xchg
inc
aas
xor
sar
decl
cld
pop
adc
rcll
adc
push
add
inc
lahf
cmpsb
mov
jecxz
mov
lods
fucom
sub
lock
les
movswl
mov
fsubrs
lcall
add
push
jp
pop
mov
aas
test
sub
ljmp
jge
lods
mov
ud1
push
dec
or
sub
decl
xchg
sub
add
out
stos
sti
inc
xor
popf
test
clc
lcall
dec
and
push
xchg
aad
sbb
pop
jmp
cmpsb
add
mov
dec
adc
stos
jge
cmp
enter
lcall
loope
adc
add
movsl
repnz
pop
sahf
jbe
enter
loope
mov
sti
data16
in
rcrb
xor
dec
out
insl
xlat
jne
push
sbb
mov
or
jmp
mov
pop
pop
aad
adc
jle
inc
mov
mov
add
ljmp
inc
stos
mov
js
insl
decl
adc
cld
es
sarl
jmp
call
pop
cmpsb
inc
cmp
push
push
fstps
cs
sub
cmpsb
clc
ljmp
mov
sub
xor
into
push
dec
fucomip
adc
lahf
pop
popf
out
lock
incl
pop
jg
hlt
cmp
jb
jbe
pop
push
push
imul
orb
or
pushl
add
dec
push
dec
outsl
ja
hlt
push
test
cmpsb
mov
call
scas
inc
sbb
pop
in
rcrb
and
pop
mov
mov
ja
stos
pushl
into
adc
sahf
test
sbb
icebp
sbb
scas
cmpsb
or
incl
pop
lods
and
or
mov
push
mov
dec
idivb
decl
mov
jae
or
fdivrl
sub
mov
inc
mov
pop
pop
popf
mull
push
mov
pop
or
push
mov
ljmp
jl
shrb
pop
nop
jne
lcall
in
pop
in
xchg
test
sbb
dec
dec
fdecstp
dec
je
xchg
mov
fidivs
loopne
and
or
jnp
ljmp
jmp
jb
popf
je
sahf
dec
iret
xor
or
add
dec
mov
loope
xlat
pop
xor
call
inc
mov
sub
movsb
jo
addr16
jmp
std
icebp
test
das
imul
ljmp
inc
jo
popl
jg
dec
jecxz
lea
add
push
test
idiv
jb
in
addr16
mov
ds
push
enter
mov
push
or
aaa
sbb
in
cmc
stos
add
lcall
aad
mov
xchg
movsl
add
ss
fldl2e
pop
push
mov
inc
sahf
add
xor
and
sub
or
xchg
addr16
jg
ljmp
jb
mov
push
inc
dec
lret
xor
cld
popa
lret
sbb
push
std
and
mov
sbb
lea
sub
lcall
xor
inc
cmpsb
push
mov
mov
sahf
pop
mov
incl
lret
jge
lcall
dec
cld
mov
fstl
dec
xchg
pop
push
jmp
inc
sub
popa
sbb
sar
sub
fcoms
and
test
jg
jg
gs
daa
nop
jno
std
jns
aam
adc
aas
and
mov
mov
xor
ret
shl
cmpsl
sbb
mov
push
js
lcall
mov
fsub
into
iret
hlt
jmp
dec
adcb
daa
push
lcall
sub
shll
test
and
inc
nop
pop
push
pusha
mov
dec
ljmp
daa
mov
setb
mov
cld
mov
mov
adc
daa
jmp
sbb
pop
notl
fsts
sti
mov
test
push
and
cmp
lcall
pop
dec
mov
leave
enter
daa
pop
or
rorl
enter
mov
call
pop
mov
dec
pop
into
mov
std
xchg
test
js
mov
imul
pushl
xchg
mov
pusha
pop
dec
sti
xor
cmp
shrb
ljmp
dec
xor
insb
or
cli
push
mov
outsb
cmp
xchg
sbb
sub
dec
pushf
jle
and
incl
cld
pushl
cmp
jecxz
xor
loope
dec
cld
jp
cmp
in
jae
mov
xor
sar
pusha
pushf
aam
mov
fiadds
xchg
jno
lcall
xchg
insb
addr16
cmpsb
mov
roll
or
pop
jmp
push
jp
push
ret
pushaw
cltd
cmpl
xor
lea
sti
fidivs
or
ljmp
jbe
cmp
aaa
lcall
insb
push
rcrb
xchg
pop
jl
and
leave
fwait
inc
in
or
jp
xchg
icebp
cmp
stos
jl
jp
into
xor
mov
and
aas
movsb
push
mov
push
sub
lcall
xchg
lcall
xchg
jecxz
sub
pushf
enter
mov
fs
cmc
movsl
call
push
enter
popa
sub
fwait
pop
cltd
add
push
mov
adc
fcoms
ret
sbb
clc
pushl
dec
pop
jns
int
pop
cmp
dec
out
xchg
arpl
jo
inc
lcall
push
push
in
iret
das
xchg
dec
xchg
aam
xchg
icebp
fmul
ljmp
push
out
adc
sbb
aaa
pop
hlt
push
pusha
lret
test
loope
cmp
or
adc
and
insl
out
out
leave
or
lahf
mov
jns
fsubrl
xlat
ret
fiaddl
call
add
into
xchg
xchg
inc
iret
shr
cwtl
jbe
cmp
lds
inc
cmp
lret
adc
push
imul
into
add
cmc
or
dec
int
mov
testb
fbld
sarb
xor
mov
sub
mov
cmp
adc
push
or
mov
jp
xor
ret
stos
repz
sub
lret
ljmp
les
test
nop
jb
pop
sub
inc
into
aad
nop
xchg
pop
jbe
pop
imul
pushl
imul
xchg
mov
mov
inc
fcomp
rolb
call
sub
fmuls
ss
inc
scas
sub
add
xor
imul
bound
gs
jmp
lock
xchg
mov
xchg
aas
xchg
scas
or
cmp
mov
lods
movsl
stc
push
stc
test
xchg
jg
add
cmpsb
sub
and
jl
pop
lds
ljmp
mov
mov
and
mov
lahf
incl
pop
in
ds
jg
lods
mov
ljmp
out
xchg
cmp
xchg
enter
fwait
adcb
sti
or
leave
fxch
cmp
pushl
aas
mov
sub
mov
xorb
cs
xchg
sub
scas
or
mov
movl
cmp
jae
mov
adc
out
mov
stos
fcomps
jne
xchg
push
js
sbb
xchg
and
sbb
ljmp
rcll
add
je
or
dec
xchg
pop
sbbl
or
jae
incl
sub
xor
push
xor
dec
push
mov
std
fildll
hlt
push
in
cmp
int
in
pop
jb
mov
push
cmc
xor
or
mov
mov
mov
dec
clc
jmp
push
or
add
sub
decb
outsl
mov
lods
in
mov
dec
fnstcw
test
dec
or
stos
jg
jbe
imul
mov
leave
insl
push
sub
inc
mov
daa
mov
test
jg
inc
pop
mov
lea
ret
pop
sbb
sub
ljmp
push
cmpb
dec
dec
mov
add
jp
bound
cld
xchg
daa
mov
mov
std
xorl
adc
sahf
out
test
jb
jg
xor
iret
mov
dec
mov
push
inc
xor
gs
in
cli
lcall
xchg
push
fisubl
mov
enter
stos
ja
jge
cwtl
cltd
or
ljmp
lock
jle
mov
dec
push
or
nop
jecxz
jmp
cwtl
sbb
cmpsl
rorb
or
fistpll
lret
xchg
pop
fcomip
push
xor
andl
jge
rcl
or
sbb
fdivrp
jg
jmp
xor
adc
jg
stos
shrl
pop
and
sub
adc
sti
aad
sbb
pcmpeqw
mov
and
clc
rcll
push
push
push
xor
push
sub
cmpsb
icebp
jmp
mov
inc
xchg
adc
push
movsl
pop
or
mov
test
orb
rclb
dec
push
jmp
lcall
in
lea
outsb
repz
xor
mov
and
stos
in
repnz
fdivl
fdivr
mov
push
loope
sbb
ret
lret
add
and
cwtl
icebp
sbb
lret
add
ljmp
mov
cwtl
and
jno
mov
xor
xchg
add
call
xchg
ret
fiadds
dec
pxor
cmp
jp
dec
scas
mov
or
out
ret
jno
cmp
inc
ljmp
fwait
jae
rcrb
add
ds
or
cli
js
inc
shl
or
xor
inc
mov
mov
test
sbb
and
rdmsr
mov
outsb
mov
push
push
dec
mov
mov
stc
sub
mov
push
push
mov
cmp
decl
sbb
jp
sub
fidivl
jmp
lods
dec
xchg
ljmp
push
fists
or
sub
jne
xchg
call
das
push
std
xor
call
push
sub
addl
sub
ljmp
or
jg
xchg
dec
loope
and
jmp
loop
out
jno
lods
shlb
pop
pop
ficoml
xchg
xchg
fldcw
jp
adc
inc
fisubs
aam
jecxz
ds
pop
mov
test
imul
enter
orl
mov
mov
dec
inc
call
mov
push
mov
incl
ss
jnp
add
test
jge
xor
adc
punpckhbw
inc
xor
ss
mov
mov
fnstenv
dec
inc
jle
pushl
outsl
stos
in
mov
push
xlat
stos
pop
sub
movsb
lock
clc
jmp
xchg
mov
clc
out
pop
loope
stos
xlat
push
aad
inc
mov
xchg
fdivl
cwtl
outsl
insl
fwait
cwtl
int3
push
ja
gs
out
dec
add
xchg
aaa
or
lods
dec
je
mov
out
mov
or
mov
adc
ficompl
nop
mov
lea
bnd
and
add
pop
sbb
aam
ret
jg
call
xchg
movsl
lock
jno
lds
je
adc
js
xor
inc
gs
inc
ds
js
mov
add
cmpsl
fiaddl
es
insl
xor
pop
decl
ljmp
pop
in
adc
shll
push
js
insb
sbb
pop
aad
sbb
jg
inc
mov
mov
xor
loop
bound
cmpsl
jb
and
jmp
lock
or
mov
stos
xor
cli
mov
lea
and
fistl
adc
lahf
xor
and
daa
outsb
insl
inc
xor
std
ljmp
fdivrs
adc
loope
or
push
xlat
pop
mov
inc
aad
clc
mov
and
sti
sub
pop
or
icebp
mov
cli
pushl
inc
xor
loope
inc
pusha
adc
imul
and
incl
inc
outsl
imul
mov
add
call
sbb
ljmp
mov
inc
jno
aad
lret
inc
mov
push
rcrb
push
das
sbb
incl
cld
or
jmp
mov
jns
addr16
lcall
outsl
jecxz
mov
stos
cmp
or
ljmp
pop
xor
rclb
hlt
mov
cmpsb
xorl
jne
cmpb
mov
push
push
mov
fldcw
into
rorl
les
fldcw
cltd
shlb
rcrl
mov
cmp
call
push
jno,pn
inc
dec
aam
ret
mov
loop
test
bound
lcall
cmpsl
mov
dec
cmpsl
sub
mov
xor
call
dec
fs
int
cld
add
inc
mov
xchg
aad
inc
mov
jg
movsb
add
nop
lock
or
xor
sahf
pop
or
rolb
lcall
mov
or
dec
sarb
stc
jecxz
push
data16
jo
ljmp
jg
and
add
movsl
sahf
mov
add
incl
repz
inc
jnp
and
pop
int
push
mov
cs
mov
inc
fildll
xchg
xor
rcll
cmp
push
jbe
push
loopne
sti
gs
and
mov
jno
xchg
cmp
repz
cwtl
push
mov
mov
sti
pop
roll
or
push
ret
and
aad
dec
out
movsb
xor
outsb
sub
sub
inc
add
xchg
add
inc
pop
stos
push
pmovmskb
and
rcl
pop
hlt
imul
xor
stos
push
cmp
adc
lea
sbb
inc
pop
das
out
inc
lret
lret
fwait
pop
dec
movsl
leave
out
mov
push
mov
imul
push
clc
orb
sub
lods
fstpt
lahf
mov
jmp
clc
or
pop
inc
iret
out
mov
push
bound
int
lock
dec
scas
in
ret
lahf
les
fistpll
adc
lds
fldl
arpl
sbb
jecxz
inc
xor
outsb
dec
and
mov
idivl
push
stos
mov
fnstenv
out
add
call
push
ljmp
sbb
pop
cmp
cmp
mov
aaa
jmp
popaw
int
hlt
mov
orb
stos
pushl
adc
and
mov
in
or
gs
jl
or
mov
idiv
decl
and
xchg
mov
cli
in
mov
test
or
fnstcw
ds
pop
jg
push
jecxz
or
xlat
xchg
clc
enter
fsubrs
add
jmp
sub
incl
in
xchg
lea
dec
test
jno
adc
dec
sub
cmc
in
std
add
jmp
fldt
idivb
jecxz
sub
cmp
lcall
jmp
sub
hlt
pop
into
or
fisubrl
xchg
pop
call
mov
out
int3
das
call
jecxz
jmp
mov
push
aas
and
lock
pop
xchg
ficoml
sub
xor
fistpll
dec
aad
mov
mov
cs
jg
jmp
sbb
mov
in
pop
pop
ss
pop
nop
in
mov
sub
test
in
stos
movsl
incl
sub
popa
iret
push
jecxz
sub
enter
sub
fisubl
or
outsl
push
test
sbb
cmc
cwtl
lods
lcall
sub
mov
jb
push
pop
pusha
push
add
jl
fisubs
sti
jnp
mov
mov
jae
mov
fcoms
loopne
adc
fs
mov
mov
rcll
loopne
pop
mov
in
sub
scas
mull
or
dec
xchg
je
cmp
pop
or
cwtl
rcrl
aaa
cld
into
xlat
xchg
loopne
decl
dec
mov
in
adc
pop
stos
fs
loopne
hlt
mov
test
loopne
jne
lcall
cli
mov
or
mov
cli
xchg
xchg
xchg
mov
pop
mov
add
aam
std
fidivl
out
dec
pop
pop
xchg
ss
iret
dec
adc
xchg
lods
push
push
cmp
lds
pop
sbb
inc
outsb
push
decb
je
push
loop
xchg
fistpl
mov
ljmp
inc
test
cmpb
mov
mov
mov
jg
push
cmc
push
lds
icebp
dec
pop
inc
jge,pt
dec
pop
in
fadd
std
push
dec
jb
fcomip
aas
shlb
decb
mov
shrl
sub
cli
adc
ljmp
lods
das
add
ds
loop
mov
or
mov
faddl
outsl
or
add
out
jb
mov
pop
add
or
aas
ja
mov
pop
or
dec
out
testl
out
sbb
roll
por
mov
insl
call
sbb
xorl
sub
mov
roll
lods
into
push
mov
lcall
lock
dec
jmp
add
bound
xlat
dec
sub
cmp
push
push
add
cmp
mov
xor
cmp
imul
inc
ss
mov
push
out
cmp
fdivr
pop
loopne
aam
nop
and
cmpl
ljmp
dec
dec
movsb
jg
enter
mov
inc
xchg
pop
xchg
inc
test
hlt
insb
inc
dec
xor
outsl
and
lock
pushl
fwait
rcll
jne
sub
out
fisttps
imul
out
xor
stos
adc
sbb
pop
filds
lret
shr
fwait
push
mov
mov
ljmp
movsb
gs
inc
and
pop
cltd
jecxz
push
inc
jmp
adc
mov
fcomip
pushl
xchg
cmp
addr16
addr16
add
mov
push
fmull
sub
mov
xchg
icebp
sub
adc
and
lods
inc
fsubr
incl
scas
sbb
faddl
cmp
inc
mov
pop
sar
mov
cmp
add
push
xor
mov
mov
push
sub
cmc
cmpsb
mov
xchg
lcall
out
movsl
into
jnp
les
jne
jecxz
cli
push
or
jg
sbb
stos
mov
cmp
jmp
mov
popa
jge
ret
clc
rcrl
mov
mov
sub
jno
mov
ljmp
jnp
xorl
mov
ja
div
push
stos
fs
add
mov
mov
ja
ret
outsb
lds
pop
xor
mov
call
inc
insl
xchg
dec
cmc
jno
lcall
cmp
xchg
jb
cmp
cmp
sub
mov
dec
daa
test
cmpsb
dec
add
mov
repz
test
jecxz
loopne
call
pop
sbb
dec
bound
cmc
arpl
dec
push
into
fildl
sbb
pop
jmp
sub
fmuls
idiv
pop
in
pop
lods
repnz
insl
fistl
pop
ret
adc
push
sub
incl
xor
mov
mov
pop
mov
loop
inc
jne
dec
jbe
jns
push
fmull
jg
xor
cltd
cmp
in
mov
xchg
adc
pop
pushf
inc
push
mov
jg
js
mov
push
cltd
movsl
cmpsb
nop
sbb
enter
out
incl
repz
xor
loop
test
and
push
dec
mov
cmc
xor
lods
cmpl
sahf
cld
out
mov
dec
es
imul
ljmp
cmp
test
pop
mov
lahf
enter
adc
sbb
mov
push
lock
jmp
mov
addr16
jle
mov
sti
and
jg
mov
pop
adc
rcrb
xlat
cli
cwtl
adc
cltd
ds
incl
push
inc
int
inc
push
push
andb
and
xchg
fisttps
pop
mov
ja
decl
sbb
sub
fs
mov
and
lret
cld
pop
loopne
mov
ficoms
xchg
sti
dec
pushf
xor
mov
movsb
cli
pushl
mov
into
xchg
and
dec
dec
xor
inc
mov
jae
xchg
jl
xorb
outsl
cld
mov
sub
jl
dec
ja
ljmp
jmp
xchg
adc
dec
inc
sahf
lods
outsl
xor
jo
lret
popa
jecxz
and
jecxz
xor
in
inc
xor
or
fsubs
mov
sub
dec
icebp
and
outsb
mov
into
dec
outsb
test
dec
jbe
cld
mov
out
xor
push
ret
repnz
mov
jae
jl
das
test
cmp
shl
inc
imul
decl
gs
outsb
cwtl
lret
cmp
stos
popf
lods
mov
repnz
lds
scas
mov
sbb
les
fidivrs
mov
fdivrs
out
cs
cmp
test
jbe
inc
leave
cmc
add
incl
test
arpl
pop
aas
cmpsl
mov
cmp
or
into
sub
pushl
scas
in
int3
push
gs
cs
pop
rcrb
add
mov
mov
sub
sbbl
cltd
insl
xchg
pop
es
cs
test
repz
pushf
xchg
fildl
movsl
push
push
scas
jbe
jl
pop
cmp
push
stc
and
mov
sbb
nop
js
pop
push
pusha
adc
enter
lcall
dec
stos
or
xchg
push
sub
add
test
push
notb
incl
aas
mov
xchg
fimuls
stos
adc
push
in
decl
hlt
sub
call
cmp
mov
or
cld
mov
pop
pushl
inc
push
shl
leave
mov
sub
dec
das
mov
mov
mov
cmc
lds
ja
mov
call
cmp
xchg
sbb
fmul
push
aam
out
xor
cmp
outsb
sbb
cmp
mov
lcall
aad
mov
or
fbstp
aas
incl
int
out
jnp
notl
aam
insb
pop
mov
adcl
push
jle
dec
add
mov
mov
mov
rorl
adc
in
jmp
call
out
loope
mov
cld
addr16
cltd
mov
sahf
adc
fstpl
mov
mov
lcall
dec
cwtl
sahf
pop
cmp
inc
inc
insb
xor
outsl
scas
jns
enter
push
cmp
enter
call
and
and
add
es
mov
out
mov
push
sub
pop
out
push
inc
pop
lods
cmpsl
or
adc
and
icebp
decl
sbb
mov
xor
sbb
cmp
imul
push
mov
sbb
cld
add
hlt
mov
mov
jl
inc
clc
into
mov
mov
jg
jl
loopne
std
jp
mov
and
int3
xchg
stos
out
pop
push
out
loope
ljmp
scas
loope
imul
xchg
lret
ret
sub
lds
or
ljmp
loopne
pop
lahf
cvtps2pi
aam
pop
mov
push
xchg
and
mov
pushl
ret
pushf
jmp
das
jge
jle
out
loopne
arpl
jns
incl
xlat
repnz
aam
jmp
sub
jecxz
adc
in
dec
test
sbb
call
js
ja
push
mov
sub
in
lods
jne
rcr
and
incl
sbb
je
mov
sub
cmp
mov
lahf
and
insl
ljmp
test
test
fistpll
inc
xchg
icebp
rcr
inc
aad
adc
adc
dec
out
jns
andl
mov
dec
mov
xchg
aad
fistps
xchg
mov
inc
ja
out
clc
lcall
xchg
pop
or
or
cmc
ds
insb
sub
and
lods
decl
sbb
es
inc
mov
jbe
or
xchg
bound
pushl
mov
icebp
mull
pop
push
cmp
test
inc
in
hlt
pop
inc
mov
cmp
incl
xor
sub
jnp
push
adc
lea
fwait
xchg
sbb
aas
mov
mov
jne
or
pop
pushf
push
les
lds
xor
or
push
shll
push
jae
fadd
push
sub
shlb
xor
loop
lock
decl
xchg
lods
loope
cltd
cwtl
push
dec
mov
in
add
or
pop
decl
jae
aam
movsl
shlb
mov
jp
pusha
repnz
push
jg
clc
pop
lcall
push
mov
arpl
rolb
inc
mov
mov
pop
jns
ss
jmp
xlat
sti
or
fcmovbe
mov
mov
ja
push
data16
incl
add
xchg
inc
sbb
fldcw
nop
insb
arpl
sub
mov
pushl
sbb
xchg
inc
sub
jge
fwait
orb
mov
lcall
outsl
gs
sti
or
sbb
dec
sub
mov
push
out
pop
clc
dec
and
mov
cwtl
js
pop
mov
mov
sbb
loopne
mov
cmp
incl
fistl
xchg
inc
push
mov
fwait
clc
pop
ja
out
mov
movsb
dec
lock
sbb
xor
xchg
lock
incl
jb
into
sub
sub
pop
in
xor
test
mov
cmp
jle
push
xlat
push
pop
cmp
add
fs
cwtl
aaa
pop
les
loope
decl
xor
fwait
pop
jmp
fstl
insb
jno
pop
jno
lods
js
and
lea
mov
jl
ret
and
and
ret
popf
dec
sarb
arpl
and
add
fisubrs
push
mov
pop
push
enter
bound
push
out
sbb
inc
push
dec
sub
add
cmp
bound
cmp
inc
lock
mov
arpl
mov
outsb
pop
mov
pop
and
mov
leave
add
cmpsl
loopne
lahf
les
add
jo
je
fwait
fldenv
clc
stc
mov
lods
fcompl
repnz
pushf
xchg
idiv
pushl
mov
mov
mov
imul
xor
adc
sti
sub
push
jnp
jg
incl
dec
dec
push
repz
jmp
or
xor
cld
imul
stc
pop
xchg
addl
imul
sbb
pop
cmp
xchg
adc
test
call
mov
xor
push
in
cs
xchg
stos
or
xchg
icebp
mov
push
popa
int3
jae
call
outsl
into
jmp
mov
pop
xchg
sbb
aad
ss
cmc
cmpsl
hlt
gs
call
int3
mov
pop
adc
xchg
sub
add
jb
out
inc
cmp
test
xor
sar
incl
and
movsb
push
pop
outsb
mov
mov
stos
roll
mov
inc
imul
out
mov
test
push
aad
out
xor
dec
jmp
adc
fdivr
lcall
mov
fmull
test
aaa
popf
dec
addb
ljmp
push
inc
adc
cltd
xor
xlat
rorl
mov
imul
lcall
rorl
movsb
adc
cld
xchg
mov
aam
cli
adc
fnstsw
and
call
xchg
mov
jmp
add
jno
push
fnsave
xlat
mov
sub
int
in
lcall
repnz
sbb
into
ss
mov
fwait
jae
adc
xor
gs
decl
mulb
cmp
hlt
es
adc
mov
mov
jp
push
je
scas
nop
lods
stos
xchg
sahf
cltd
xchg
mov
dec
aas
mov
adc
pop
jo
sti
pop
push
outsl
fadds
aam
fcomip
in
enter
std
pop
lcall
inc
mov
ret
stos
mov
insl
repnz
aas
xchg
mov
add
ljmp
fmuls
fiadds
mov
push
call
aaa
icebp
mov
pop
xor
jl
inc
les
push
jg
sbb
sahf
sub
sarb
mov
adcl
lret
rcl
subl
xchg
sahf
sbb
or
movsb
pop
clc
test
loope
bound
jmp
call
mov
xor
dec
adcb
and
pop
xlat
imul
mov
mov
sbb
gs
xchg
ljmp
std
jl
sbb
mov
fisubs
jbe
sbbb
aad
icebp
test
ljmp
shrb
fisttpl
cmp
imul
sub
ljmp
dec
dec
and
mov
mov
jno
repz
stos
push
lods
mov
lcall
mov
sbb
dec
stc
lock
pusha
pop
stos
mov
xor
add
incl
pop
clc
push
adc
std
push
dec
sub
inc
aas
imul
cmp
ss
or
decl
ja
cmp
pop
out
in
push
pop
imul
test
cmp
jmp
cmpsb
out
test
dec
mov
jbe
lods
mov
xchg
and
jmp
lods
mov
mulb
and
inc
into
xchg
adc
mov
ss
fs
add
or
in
xor
jle
loop
jmp
das
into
cmp
test
fs
push
mov
pop
push
sub
mov
into
and
dec
inc
scas
mov
jns
das
pop
mov
in
jmp
jo
mov
incl
fistpl
inc
popa
popf
test
mov
outsl
sbb
add
pop
xor
outsl
clc
decb
std
pop
sub
sbb
or
outsl
mov
incl
aad
stos
and
xchg
jb
dec
push
mov
fisttpll
decl
sbb
pop
xchg
and
dec
rcl
fisttpl
mov
lahf
icebp
fiadds
jmp
fnstsw
jbe
sub
add
cld
xchg
lahf
lcall
xchg
scas
adc
mov
add
je
pop
and
dec
push
loop
scas
orb
test
push
popa
ret
arpl
jg
mov
mov
enter
xor
add
in
dec
cmp
push
ljmp
jmp
pop
fildl
sbb
dec
lret
mov
add
sti
sbb
cmpsb
cwtl
divb
call
lcall
inc
xor
pusha
dec
add
bound
mov
mov
lcall
jmp
or
adc
loopne
fidivl
pop
test
out
js
call
es
mov
xor
push
mov
ljmp
xor
inc
xor
cmp
in
push
fistpl
mov
mov
and
or
ljmp
mov
enter
cwtl
cmp
pushf
adc
pop
pop
cmp
imul
xor
int3
js
imul
jl
cmp
sti
mov
mov
jns
xchg
or
call
test
in
push
lds
xchg
ja
ljmp
push
in
sub
xchg
push
enter
inc
mov
push
mov
fisttpll
mov
push
mov
adc
incl
mov
pop
mov
mov
ja
add
cli
rcll
mov
decl
inc
sub
adc
rolb
and
or
mov
das
or
adc
sti
pusha
arpl
sar
cmpsb
xchg
ret
or
cmp
adc
xchg
pushf
mov
das
dec
push
incl
rorb
mov
pop
push
push
lods
xor
dec
lret
dec
scas
inc
jo
decl
and
pop
inc
sub
scas
testl
inc
fwait
ja
sar
mov
into
bound
sbb
insb
outsl
cmc
incl
add
nop
clc
push
sbb
imul
dec
bound
push
xchg
cltd
data16
lcall
nop
int3
and
out
push
lods
or
cld
add
dec
inc
adc
mov
test
inc
adc
ljmp
push
inc
sbbl
sbb
lcall
mov
hlt
in
lea
mov
nop
imul
jg
dec
fsubs
stos
jne
cld
jmp
mov
sub
jb
mov
stc
inc
clc
mov
pop
mov
mov
incl
or
mov
add
sbb
aas
push
out
hlt
adc
movsl
arpl
add
pop
loop
pop
icebp
int
mov
call
cmp
ja
out
adc
dec
clc
gs
lret
std
out
cmp
or
jl
shlb
cli
push
incb
out
cli
ja
imul
fidivl
jo
mov
out
push
pop
lock
stos
call
dec
cmpsb
pop
push
lcall
jg
ljmp
adc
sahf
inc
and
sbb
movsl
shl
loope
mov
xchg
out
push
jge
jg
add
andl
into
fsubrs
lcall
repnz
cmp
sti
sbb
cwtl
push
adc
call
cmpsl
push
es
push
cwtl
jle
out
and
out
xchg
in
rcl
cmp
inc
inc
jmp
or
fmul
jne
nop
nop
cmp
add
sbb
rcl
pushl
stos
push
fstp
push
jae
mov
imul
das
mov
mov
add
mov
mov
jg
lcall
dec
mov
and
pushf
xor
and
jno
cmpsb
jle
fprem
call
push
bound
int3
adc
loop
mov
dec
shlb
mov
dec
test
popa
xchg
adc
fsts
enter
jmp
dec
clc
ljmp
sahf
jne
xor
mov
jbe
push
nop
push
loop
pop
cmc
ja
scas
mov
shrb
pop
xchg
jbe
ds
push
sbb
sub
nop
inc
mov
shr
stos
out
dec
mov
lock
jmp
push
mov
lds
jl
movsb
dec
es
mov
push
lock
push
sub
call
call
sbb
data16
jne
sub
ds
jl
pop
jle
and
lods
sub
mov
dec
mov
sub
into
popf
push
ljmp
clc
dec
mov
xor
jbe
roll
fstpt
xchg
sbb
adc
ljmp
clc
imul
dec
scas
or
clc
das
sti
outsb
push
out
icebp
pop
mov
sti
scas
sub
popf
and
incl
inc
sbb
cli
pop
jae
mov
mov
ljmp
cmp
ret
popa
adc
jb
cmpsb
loope
pop
sub
push
pop
ffree
lahf
adc
jns
push
pop
cmp
dec
lods
lcall
pop
pusha
xor
pop
outsl
nop
mov
pop
fisubs
decl
js
sarb
inc
int
cmp
sbb
inc
pop
inc
push
fdivrl
mov
jo
cmpl
lret
lock
stos
jp
cmpsl
inc
and
ljmp
mov
mov
push
mov
jp
shlb
push
add
mov
jmp
mov
lcall
loope
sbb
or
mov
subb
push
outsl
push
fsub
scas
push
jge
aas
ret
pop
pop
int
popa
lods
sub
xlat
xchg
decl
fucomip
jb
add
mov
in
or
nop
loope
ljmp
decl
push
ds
dec
cmp
xchg
xchg
jno
pop
cmp
or
adc
or
incl
fsubrl
aad
movsl
and
inc
jns
push
fs
lock
xchg
xchg
scas
sbb
jae
std
push
jmp
dec
mov
cmp
cmovns
add
loopne
sbb
add
mov
jno
pop
add
jmp
mov
bound
pop
dec
sub
xchg
int3
adc
add
jne
mov
pop
jno
push
lahf
fcomps
stos
repz
mov
movl
or
ljmp
mov
js
lea
cltd
aad
or
decl
mov
mov
jne
adc
cmp
repnz
adc
dec
decl
or
outsl
ljmp
push
cli
push
call
or
jl
lcall
inc
ss
adc
pop
fidivs
dec
movsb
lahf
and
add
js
sbb
jg
call
mov
sahf
mov
push
adc
sub
mov
repz
ljmp
sub
inc
adc
in
stos
push
dec
jne
test
or
lret
jge
rcll
jmp
js
popf
insl
dec
fwait
or
pop
mov
xor
dec
mov
or
aam
das
cli
jg
jne
out
test
mov
aaa
test
scas
add
popf
test
xchg
lcall
fidivrs
cwtl
pop
fnsave
pop
adc
shrl
cltd
jle
jb
mov
lea
test
jg
xor
xchg
lock
pushf
sbb
xchg
jg
mov
nop
enter
subl
cmp
aaa
fwait
cmp
cli
decl
lret
push
out
mov
shrb
shrb
dec
enter
add
in
jb
xor
jl
jno
dec
fiaddl
scas
cmp
fstpl
mov
lcall
in
ja
fisubrs
mov
xlat
pop
dec
out
sub
mov
lahf
fidivs
pop
sar
dec
adc
mov
ds
and
push
jecxz
lret
lds
inc
xchg
icebp
int
sbb
xor
shrl
or
je
gs
xor
push
incl
popf
mov
mov
fldl
cmp
dec
cmp
ficomps
jp
add
sub
pushl
sub
into
popa
lods
rol
movsb
cs
xor
sbb
push
add
aaa
xor
cmp
push
popa
sbb
mov
mov
loop
dec
jg
adc
inc
inc
xor
pop
int3
repz
mov
es
out
mov
movl
fisttps
and
jae
lods
bound
stos
pop
test
test
ljmp
orps
cmp
fprem1
mov
mov
pop
mov
imul
sar
dec
sti
std
cmp
ficoml
pusha
incb
xor
jnp
aas
push
loopne
mov
jg
ljmp
in
leave
mov
out
fbstp
enter
mov
andl
xchg
lcall
imul
cs
push
sbb
add
fistps
lcall
je
inc
pop
cmc
xorl
dec
out
imul
shrb
incl
mov
aad
rol
sti
ja
mov
lret
fldenv
sub
push
cmp
fsubrl
aaa
inc
loop
inc
and
movsl
addl
cwtl
dec
push
ret
push
mov
push
mov
repz
int3
lds
push
std
inc
pop
xor
loope
repnz
dec
inc
push
cld
outsb
aad
lock
icebp
lcall
stc
mov
inc
mov
insl
xchg
mov
shlb
sbb
sub
mov
out
dec
mov
push
movsb
add
imul
dec
gs
fdivs
cmp
push
cld
xor
cs
pop
jb
jae
std
cltd
call
orb
sbb
out
pushf
cmp
bound
jnp
or
push
or
mov
imul
adc
cs
mov
movsb
mov
sbb
jg
push
aam
and
movsb
cmp
xor
and
jecxz
jno
mov
call
push
cmc
push
dec
shlb
loope
push
jp
das
cmp
incl
cmp
test
and
xor
stos
aas
je
call
stc
mov
incl
int
xor
ja
dec
jge
xchg
and
pop
mulb
fistpl
data16
call
add
ja
fbld
sub
popf
in
unpcklps
mov
push
sbbb
scas
mov
movsb
lret
ret
into
jmp
jae
xchg
into
xor
fimuls
pop
sub
lcall
idivb
push
mov
dec
mov
push
mov
leave
cld
pop
out
sahf
cmpsb
lods
inc
cmp
pop
ret
lcall
dec
add
int3
jbe
andl
idivl
lcall
lds
jl
sub
incl
out
jae
mov
or
leave
pop
or
in
xchg
test
out
and
out
xchg
lcall
jmp
mov
frstor
shlb
inc
jb
cwtl
ljmp
ljmp
adc
mov
cmp
and
idivb
adc
rolb
dec
add
pop
sbb
pop
pop
lods
dec
pop
pop
adc
sti
mov
sub
and
call
or
popa
je
jl
popf
test
int
sbb
mov
int3
cmp
lea
dec
les
dec
cld
push
std
inc
ds
sub
inc
decl
sub
lahf
xchg
nop
sbb
pushf
push
testb
push
and
inc
inc
decl
cmpsl
pop
repnz
add
ljmp
out
clc
xor
repz
and
loop
lahf
mov
push
aam
lea
jge
frstor
decl
lahf
mov
xor
inc
xchg
pop
inc
add
xor
andl
pop
adc
adc
dec
sar
jge
mov
pop
jne
inc
jg
test
popl
lock
int
inc
mov
incl
inc
push
insb
leave
dec
xchg
ret
stos
popf
js
cmp
addb
mov
loopne
mov
stos
adc
imul
xor
mov
into
aad
xchg
ds
daa
jo
ljmp
pusha
adc
les
scas
mov
adc
inc
jo
inc
mov
ljmp
rcrb
add
bound
cmpsl
or
std
sti
mov
popa
mov
or
push
aas
daa
pop
data16
insb
subb
sub
hlt
adc
dec
enter
fwait
xorb
cs
lock
pushl
cwtl
mov
stos
dec
ret
lret
mov
aam
in
xchg
fnstcw
sub
sub
fcomip
decl
hlt
dec
push
mov
lahf
sbbl
push
cmp
jmp
repz
xor
ljmp
aad
push
test
lret
fwait
outsb
hlt
xchg
push
repnz
sbb
fstps
decl
les
and
dec
aaa
ds
mov
or
jae
cmpsl
inc
in
lcall
jnp
stc
push
loope
lock
pop
cld
mov
mov
movsl
out
xchg
pushl
lods
xchg
mov
f2xm1
lods
scas
addr16
sub
jg
call
test
fidivs
adc
fldenv
jl
mov
jbe
add
outsl
pushl
mov
mov
push
stos
stc
sub
inc
mov
inc
jmp
movsl
cmpsl
cltd
mov
mov
popf
jg
pushl
sub
cmp
jmp
mov
cmpsl
dec
nop
into
negb
sbb
incl
add
push
sbb
mov
lock
jbe
fistpl
adc
mov
jmp
ljmp
add
adc
mov
lds
in
mov
shlb
push
fwait
mov
dec
add
lret
ja
mov
pushl
inc
jp
insb
jno
mov
ss
inc
push
sub
enter
push
leave
ret
leave
fdivr
xchg
pop
jl
call
jg
pop
sahf
ja
cmp
adc
sbbb
lret
push
in
adc
call
testl
call
push
xchg
mov
pop
loopne
sahf
ret
call
adc
inc
movsb
xor
addr16
ljmp
in
lea
dec
dec
xor
imul
call
insl
leave
xor
xlat
loope
inc
adc
js
insl
out
jbe
jmp
mov
decl
sbb
movsl
insb
and
mov
rorb
dec
xlat
sbbb
cld
mov
repnz
sbbl
sbb
cs
dec
sub
hlt
ljmp
xchg
adc
jle
jmp
scas
xchg
mov
mov
loopne
dec
adc
movsb
add
or
mov
xor
lcall
jbe
sbb
loopne
inc
xor
pushf
pop
arpl
jmp
dec
jae
adc
or
sbb
lahf
pop
and
rcrl
xchg
lods
out
sbb
or
and
mov
add
cs
fistps
sub
mov
cli
call
cli
lock
nop
push
insl
enter
pushf
fcomps
fld1
xchg
pushl
test
filds
add
pop
push
pop
aas
pushf
mov
movsl
jo
pop
cmc
mov
decl
movl
das
shrb
sbb
cmpsb
mov
push
jo
outsb
gs
jg
rcrl
xor
in
jmp
ljmp
aaa
cmp
mull
add
sbb
mov
adc
adc
in
push
xor
incl
pop
test
sbb
sbb
cmp
lcall
pop
cmc
ffree
pop
xor
in
call
pop
xlat
test
add
sub
into
out
push
daa
mov
sbb
mov
dec
jb
mov
decl
add
fs
mov
xor
popa
sub
add
jmp
mov
loopne
jl
rorl
xchg
dec
pop
pop
insl
sub
inc
jne
jns
call
jmp
xchg
stos
mov
lods
jnp
frstor
jbe
cmpsb
vpslld
cltd
mov
mov
dec
mov
clc
push
inc
stos
shrb
mov
shl
cmp
mov
dec
mov
sub
jg
mov
cld
sub
xchg
sar
adc
xchg
xorl
decl
xor
std
rolb
mov
cmp
fidivrs
es
jns
jle
int
dec
jl
mov
dec
jno
test
ret
frstor
outsb
xor
add
clc
adc
push
pushl
std
dec
dec
repnz
push
push
mov
das
test
mov
jns
sbb
mov
mov
shlb
popa
lea
cli
rol
test
adc
ljmp
jp
xchg
cmp
icebp
gs
xlat
rclb
loope
xchg
iret
outsl
inc
jo
mov
add
or
pushl
mov
adc
sbb
xchg
jne
jmp
outsl
aam
mov
adc
ljmp
fistl
pop
sbb
adc
aad
or
xchg
sahf
cmpsl
jp
insb
mov
ret
inc
sub
adc
jbe
inc
and
decl
and
xchg
mov
ds
jns
je
jo
sbb
inc
in
in
push
outsb
call
fisttpll
sub
fxch
xchg
enter
test
mov
call
lret
pushl
mov
subw
sbb
int3
repz
push
cltd
fmull
sarb
jp
and
jl
outsb
mov
aam
xor
cld
fcomip
cs
mov
ds
inc
popl
or
cmp
test
and
inc
dec
test
cmp
pop
mov
push
rorl
lcall
pop
lret
out
mov
outsl
imul
sub
adc
inc
inc
xchg
outsl
xlat
fwait
push
incl
dec
int3
sbb
int
push
pop
pop
sub
jnp
mov
push
push
xorl
adc
ljmp
insb
mov
sbb
sbbb
jl
icebp
repz
xchg
jmp
xchg
imul
lods
mov
inc
push
shl
cmpsb
popf
out
push
inc
movsb
push
icebp
decl
lret
mov
jmp
xchg
sti
movsl
mov
bound
sarl
cmpsb
adc
scas
ficomps
notb
test
lcall
push
adc
jge
fcmovnu
xor
repnz
push
cltd
int3
test
push
aas
aad
cli
ljmp
cmpsl
test
mov
mov
rcrb
jmp
lcall
lahf
mov
inc
repz
cmp
fwait
cmp
push
jae
push
and
addb
hlt
add
loope
fstpt
mov
fdivrs
adc
push
lahf
pop
lock
add
pop
mov
mov
int
push
mov
mov
add
push
mov
mov
fildll
push
push
cmp
mov
jg
loop
je
mov
xlat
enter
adc
pop
test
cmpl
push
dec
mov
mov
inc
mov
mov
mov
jmp
cmpsb
add
jns
ret
and
sub
iret
fs
ljmp
add
repnz
in
sbb
adc
mov
add
mov
jnp
xor
inc
jge
stos
lcall
cmc
push
js
cli
idiv
ret
mov
into
adc
mov
mov
fstpl
gs
lock
and
mov
shll
pop
hlt
jmp
cmp
adc
aam
int3
mov
mov
mov
dec
sub
decl
inc
mov
ss
scas
jne
in
cltd
mov
testl
xor
mov
sbb
pop
stos
arpl
jmp
mov
mov
mov
decl
test
xchg
xor
mov
pop
mov
mov
push
push
pop
cli
call
lcall
xor
je
adc
insl
xor
bound
gs
xchg
lock
into
movsl
ja
sub
mov
push
mov
xlat
pop
loopne
push
ret
in
cmp
cli
rorb
mov
es
cmpsb
mov
xor
adc
dec
aam
pushl
movsl
push
jns
and
mov
cltd
mov
lret
push
mov
sarl
rol
icebp
dec
js
aaa
inc
into
pop
test
inc
and
push
call
pop
daa
imul
imul
pusha
out
dec
cmp
xchg
jg
scas
dec
pop
aad
sbb
std
scas
sbb
cmp
jne
mov
subb
loop
or
inc
and
pushl
cmpsb
adc
repz
mov
xor
or
in
mov
dec
jp
jge
in
add
jecxz
fs
inc
aam
loope
cmp
xchg
scas
ja
pushl
bound
lahf
lods
sub
pop
push
out
loope
or
sub
scas
inc
jb
pushl
rcrl
adc
pop
and
adc
ret
add
fiaddl
and
push
jle
hlt
notb
pushl
xor
lret
cmc
scas
hlt
addr16
ficompl
rorb
fmull
mov
repz
decl
imul
pop
leave
sub
das
or
test
cli
fcoms
mov
mov
cs
call
movsl
jo
mov
stos
test
mov
xchg
mov
arpl
in
mov
test
ds
popf
lcall
adc
inc
pop
inc
xor
add
pop
mov
mov
ljmp
xchg
je
cmp
adc
sub
call
add
into
inc
ficompl
add
or
add
incl
cmp
stos
add
ja
jo
mov
jg
add
mov
add
pop
popa
push
jb
jg
inc
add
add
dec
orb
outsl
add
sub
mov
inc
mov
scas
jle
push
mov
jno
jg
sub
sahf
imul
test
repz
dec
mov
dec
xor
popf
data16
xchg
pushl
mov
jnp
xchg
movsl
push
daa
add
mov
add
cs
cmc
mov
push
movsb
inc
scas
push
jbe
and
stos
push
and
push
test
and
xchg
imul
push
inc
pop
pop
add
repz
sbb
mov
sbb
add
fimuls
mov
pusha
sbb
mov
adc
mov
mov
insb
or
lret
imul
imul
aaa
int
punpckhwd
into
mov
pop
and
fsts
jae
sub
pop
stos
mov
js
jb
ss
add
jo
mov
push
shl
mov
clc
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
ss
push
push
ret
je
fidivrs
out
test
fisttps
add
fwait
inc
mov
mov
add
mov
sbbl
push
mov
push
push
arpl
push
push
push
add
out
data16
lcall
ret
add
outsl
lock
mov
push
pop
dec
add
into
loopne
outsb
jbe
push
data16
scas
cmp
aaa
add
push
push
mov
jno
lret
stos
aas
add
neg
flds
add
push
xlat
jne
add
rcr
fdivs
push
aad
push
xlat
ja
js
sarl
mov
push
jns
push
jp
jp
inc
push
insb
push
jl
fidivrl
sarl
ja
fldl
les
je
jmp
out
outsb
fidivl
nop
sub
xchg
sub
xchg
in
xchg
sub
fiaddl
push
xchg
push
setbe
xor
insl
push
ds
aaa
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
jl,pt
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
in
ja
xchg
push
mov
push
imulb
pop
add
fadd
scas
out
sahf
out
sbb
clc
stc
cli
jg
out
sti
cld
std
incb
jecxz
mov
sbb
arpl
inc
jae
add
imul
pop
add
cltd
int
add
pop
add
push
mov
add
cmp
xor
ja
push
add
or
add
add
fldcw
or
or
test
test
nop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
rcrw
adc
mov
pop
stos
femms
lods
lods
pop
stos
insl
addr16
sbb
scas
add
scas
insl
and
imulb
scas
lods
push
and
adc
sbb
int
nop
aaa
sbb
sbb
out
in
scas
mov
and
or
or
mov
xchg
or
lock
in
mov
mov
and
and
mov
and
inc
jo
sub
pop
sub
mov
gs
and
mov
cmpsb
cld
pop
daa
mov
aaa
add
push
es
test
aas
cmp
pop
cmp
cmp
add
idiv
adc
xor
pop
xor
pop
or
cltd
fstps
pop
pop
insl
pop
pop
in
mov
cmpl
das
push
cs
xor
add
xor
das
pop
push
push
xor
decl
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
call
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
aas
jae
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
in
decl
mov
sub
dec
ja
jns
dec
mov
bound
js
imul
cmp
je
add
push
adc
test
mov
jo
test
add
push
aaa
pop
pop
scas
aas
and
mov
mov
pop
push
dec
add
push
mov
sti
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
sarb
push
jb
cs
xor
mov
imul
mov
pop
negb
mov
out
fimuls
outsb
and
mov
xchg
add
pop
push
inc
mov
cmp
mov
inc
mov
std
sbb
add
xchg
jp
inc
push
popf
inc
imul
jg
imul
add
xchg
jb
bound
mov
lahf
ja
insl
mov
inc
push
sahf
mov
pushl
add
outsb
add
xchg
xchg
pop
push
test
fdivr
rcr
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
pop
sub
mov
push
rorb
add
lcall
int
add
outsb
mov
dec
push
add
ja
or
mov
fistpl
imul
cli
data16
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
pop
outsb
in
cmpsl
jns
outsl
ror
push
ds
insl
fisttpl
jle
add
push
jg
fiadds
call
xchg
out
data16
add
mov
add
test
add
push
loopne
iret
sahf
cmp
add
jb
out
add
push
jle
jecxz
or
fiadds
fnstcw
aad
push
divb
xor
outsl
push
fildl
adc
push
adcl
addb
sbb
test
mov
sarb
test
in
mov
push
xchg
outsb
push
insb
addr16
and
out
xchg
in
xchg
lock
sub
cwtl
add
push
sub
imulb
adc
mov
cltd
xor
cwtl
push
cmc
sahf
push
rcl
test
fwait
cmpsb
mov
cmp
clc
add
lea
push
cmpsb
scas
jo
test
sahf
fildl
jbe
stos
into
shll
fmul
mov
lgs
int
mov
mov
ds
mov
sarb
sarl
rcl
mov
into
add
add
mov
push
dec
and
dec
out
je
dec
daa
nop
add
add
mov
mov
femms
or
or
or
es
push
adc
cmp
push
add
add
ds
cmpsb
std
inc
incb
mov
mov
mov
xor
ds
xchg
push
mov
and
sbb
mov
shrb
push
add
and
loopne
out
pop
jnp
cs
mov
aas
and
sub
xor
jns
stos
or
aas
aas
cmp
cmp
aaa
add
push
roll
scas
cmp
fcmovbe
out
mov
jle
cmp
ja
lock
mov
dec
in
sti
insb
in
aas
adc
ds
xor
dec
mov
test
mov
scas
sbb
add
out
decl
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
stos
test
test
mov
mov
ds
xor
sub
imulb
sub
sub
sub
insl
sbb
sub
dec
and
inc
mov
push
push
push
push
push
imul
ljmp
push
pop
push
push
push
imul
pushl
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
aas
std
incl
nop
test
insl
popf
mov
jge
jns
jns
jle
jmp
test
jb
jae
jo
outsb
pushf
sti
popf
shlb
divl
push
rolb
cs
mov
add
incl
push
or
push
push
add
cmc
repz
mov
add
add
aas
add
xchg
pop
cmp
test
add
mov
add
mov
push
mov
fnstsw
incl
stc
cmc
repnz
inc
add
gs
pushf
add
mov
sti
fucomi
ret
push
in
lcall
or
mov
pop
jo
or
jae
js
jge
pop
into
xchg
add
mov
mov
test
scas
xchg
pop
add
js
in
and
out
nop
nop
sub
cmp
push
xchg
push
sub
nop
sub
out
xchg
xor
xchg
outsb
lcall
jnp
es
jbe
negl
fcmove
int3
out
shlb
iret
push
lret
loopne
push
std
mov
and
fdivrp
neg
insb
lea
test
jg
or
add
jge
xchg
pop
mov
push
decb
jns
dec
dec
dec
dec
dec
dec
add
pop
fbld
incl
add
dec
or
adc
cmp
adc
dec
or
fcmovnu
dec
inc
add
push
adc
add
or
pop
int
in
pop
cmovg
inc
push
dec
sbb
lahf
mulb
inc
adc
inc
inc
adc
sbb
dec
add
mov
mov
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
sbb
and
add
dec
ss
xor
sub
sub
fs
push
add
mov
add
add
add
ss
add
outsb
mov
push
add
sarl
push
add
and
pop
test
roll
outsl
mov
cmpsl
add
mov
inc
sarl
orb
jmp
adc
mov
fstpl
incl
andb
outsb
sysret
mov
es
xor
dec
ret
jmp
sbb
lock
pop
inc
jb
hlt
cmovbe
push
or
push
jg
push
and
ja,pn
pusha
inc
add
int3
inc
sbbb
jg
sbb
ret
push
push
lds
add
out
cli
mov
xor
pop
cli
fists
adc
adc
and
addr16
test
mov
inc
xchg
jg
fdivrs
das
sti
jb
adc
mov
jle
sbb
sbbl
sti
add
xchg
and
jg
inc
and
inc
jg
pop
cmp
mov
inc
idivb
inc
cs
push
cld
jg
loopne
add
jle
in
and
cmpsb
std
ja
nop
pop
inc
add
adcl
and
std
dec
dec
mov
pop
jg
enter
jle
add
inc
pop
data16
enter
sub
xchg
mov
push
decl
add
add
add
jg
add
arpl
mov
jg
pusha
xor
sub
add
jg
push
pop
add
pop
mov
fsubs
sbb
inc
jmp
sbb
scas
incl
add
incl
repnz
mov
lret
imul
add
add
mov
adc
stos
push
add
pop
add
andl
rorb
push
data16
mov
sub
jg
rorb
inc
shrb
push
adc
inc
cmpsb
sub
inc
inc
pusha
cmp
and
push
ss
pop
mov
jg
cs
cmp
fisubrs
stos
mov
pop
push
stos
pop
stos
fisubrs
pop
pop
pop
add
daa
add
fstpt
aaa
pop
pop
add
outsb
mov
pop
jle
add
xor
stos
pop
inc
push
sbb
mov
or
add
test
push
dec
xchg
push
bound
ficompl
mov
fcmovnu
neg
das
pop
daa
push
arpl
sbb
inc
insb
pop
push
mov
xlat
out
incl
or
push
inc
iret
xor
lcall
pushl
daa
push
or
ljmp
ds
rclb
inc
jle
jle
call
or
jmp
fnsave
idiv
fnstenv
add
push
jne
enter
pop
push
jbe
out
test
insl
push
jnp
push
jp
fdivrs
fisttpl
js
dec
jbe
pop
add
out
pop
xlat
lea
es
daa
fs
push
outsb
xor
push
ljmp
jle
jae
popf
rorb
inc
outsb
inc
test
mov
scas
ljmp
xchg
out
test
int3
ja
test
inc
cmpsl
xchg
mov
and
fiadds
mov
xor
push
mov
mov
push
sahf
inc
out
int
fstps
mov
xchg
insb
fwait
aas
popf
inc
push
pushf
cmp
dec
enter
cltd
mov
xchg
xor
xchg
xor
sub
sub
or
ss
cs
xchg
ss
mov
xor
test
push
call
mov
incl
jg
pop
fnsave
loopne
lcall
pushf
rolb
sahf
movb
xchg
pusha
enterw
dec
or
insl
cs
add
rclb
dec
xchg
push
int3
push
xchg
movb
xor
aaa
stos
test
clc
mov
add
add
xchg
push
mov
push
addb
adc
mov
add
mov
test
pop
adc
xchg
addr16
adc
push
adc
pop
push
and
repz
orl
jns
mov
ficomps
inc
and
cmp
lock
sbb
outsb
dec
cmp
cmp
icebp
fdivrp
and
imul
add
stos
sbb
incl
out
pop
in
push
inc
idiv
mov
mov
pop
sbb
mov
push
sbb
xor
test
in
inc
or
hlt
cmpsb
testl
and
add
cmp
addb
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
fdivr
xchg
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
cmpsb
pop
cmp
inc
pop
mov
push
pop
sahf
movsb
dec
push
stos
push
popf
dec
out
fwait
inc
cmpsb
dec
dec
inc
cmp
push
cs
dec
mov
and
and
push
shrb
enter
rcl
outsb
shrb
es
xchg
int
push
push
jb
xchg
and
imulb
push
iret
insl
leave
je
cmpsb
pop
daa
outsl
pop
imul
push
and
decl
push
xchg
lcall
xor
pop
add
repnz
movsb
es
jmp
adc
pushf
cmp
aas
decb
cwtl
xor
mov
push
inc
push
xchg
outsl
mov
xchg
push
push
aaa
push
lcall
xor
push
xchg
es
xchg
xchg
xchg
notb
sub
lcall
inc
test
inc
jmp
mov
fimuls
jecxz
add
or
mov
dec
cli
std
faddl
jge
push
jnp
cmpsb
jns
addr16
or
jl
or
insl
sub
fdivrl
jge
jg
es
in
pop
jbe
adc
fidivrl
push
dec
push
dec
repnz
repnz
in
out
xlat
jae
pop
fidivrl
push
mov
jnp
sub
jge
cmpsb
add
int3
outsb
sub
sub
sub
adc
or
pop
add
add
lahf
mov
jns
push
adc
adc
repnz
push
addb
jnp
lahf
dec
es
addl
lcall
pop
jg
and
xchg
out
push
sub
iret
inc
int
inc
out
mov
cli
call
repz
clc
push
idiv
sbb
out
ret
push
jb
sub
jg
mov
icebp
dec
outsb
popa
xchg
je
cld
daa
add
inc
sub
jg
mov
icebp
stc
mov
je
daa
jg
mov
and
loope
xchg
xchg
das
aas
inc
cld
jp
es
xchg
ds
addb
cmpb
push
lea
jmp
mov
xchg
fnstsw
dec
xchg
inc
movsl
icebp
dec
ja
hlt
or
orl
mov
icebp
notb
adc
push
push
dec
pop
fmuls
in
push
movsb
or
push
inc
push
int3
decl
sub
mov
fidivrl
arpl
clc
jbe
sbb
mov
push
pop
push
pop
shr
sbb
push
pop
or
and
dec
sbb
cli
jge
push
ds
lcall
push
jns
roll
mov
push
mov
jmp
xchg
jmp
xor
push
xchg
mov
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
xchg
or
jns
fadds
mov
add
ja
inc
or
mulb
push
cmovno
mov
or
js
sub
mov
dec
pop
repz
push
pop
inc
lcall
lret
add
adc
add
js
xor
push
inc
lahf
add
lret
adc
adc
adc
sub
inc
push
add
xor
into
pop
push
sbb
push
sbb
rcrl
and
mov
sbb
outsb
or
cmp
adcb
inc
push
adc
test
test
or
mov
nop
mov
test
add
add
inc
js
or
gs
jo
add
add
xor
data16
adc
cltd
jo
or
jl
inc
dec
xchg
push
imul
aaa
xchg
pop
out
insl
xor
add
shll
dec
lock
jnp
rcr
inc
jmp
or
arpl
popf
sbb
inc
insl
inc
ret
add
imul
out
sbb
pusha
push
xchg
dec
movsb
insl
aas
add
imul
push
es
sbb
inc
insb
adc
adc
aad
fwait
les
or
add
add
sbb
jmp
es
mov
dec
or
test
insl
and
mov
jne
pop
popf
in
pop
mov
shlb
xor
xchg
jb
shrb
xchg
xlat
add
je
jae
or
inc
pop
add
add
add
pop
mov
das
mov
es
es
inc
pop
test
add
dec
dec
xchg
sbb
aas
mov
pop
loop
idiv
sbb
push
cmc
adc
xchg
shrb
jo
xor
dec
push
and
ss
outsl
loop
and
sahf
mov
and
subb
dec
dec
push
shrl
arpl
mov
pop
pop
dec
insb
out
adc
sub
sbb
subl
sbb
icebp
je
popa
addr16
push
and
cwtl
or
or
add
push
or
inc
bound
sbb
call
ss
arpl
dec
movsb
fistpl
sarb
pushf
adc
add
add
fiaddl
cmc
popa
sti
popf
xchg
pop
adc
xchg
pusha
sbb
push
rol
je
jne
adc
add
not
insl
adc
mov
es
je
push
dec
in
mov
xchg
mov
add
mov
sbb
cmp
adc
xchg
add
xchg
xor
pop
jbe
dec
adc
test
push
adc
push
cmp
push
xor
dec
sub
sub
cltd
dec
push
push
jb
mov
cwtl
jmp
pop
adc
imul
je
inc
iret
test
pop
mov
cmp
cltd
xchg
mov
lods
pusha
adc
adcb
adc
pop
test
jbe
lds
jo
packuswb
and
xor
add
add
add
add
sub
adc
sbb
sub
es
pop
push
dec
es
push
jae
xor
add
push
scas
mov
adc
nopl
mov
mov
dec
das
fldt
inc
imul
inc
ja
xor
pop
test
pop
inc
and
push
test
and
das
mov
scas
lahf
mov
iret
mov
ja
push
jne
xlat
ret
inc
mov
xchg
adc
jae
loop
outsl
loope
sub
mov
mov
cld
add
xor
xchg
xchg
dec
popf
add
movsl
inc
mov
xor
insb
sub
mov
hlt
loopne,pt
das
sub
add
xchg
lcall
push
sbb
dec
mov
cmp
gs
mov
sti
mov
jnp
push
mov
and
aaa
push
pop
dec
or
popa
inc
pop
sub
insb
jne
arpl
add
cmp
adc
inc
jbe
inc
es
push
das
sarl
sub
xlat
and
and
stos
imul
pop
mov
fstpl
dec
sbb
push
ds
or
push
fsts
and
xor
mov
inc
xchg
jne
mov
or
fs
jmp
imul
lds
insb
push
sbb
push
mov
daa
push
mov
xchg
jo
push
cld
sub
mov
push
pusha
fs
fwait
push
loope
xor
lea
mov
stos
dec
inc
add
xchg
add
mov
out
push
jg
jns
popf
push
or
lock
push
jo
lods
xor
movsb
and
push
les
test
std
addr16
subl
mov
push
push
not
xor
and
arpl
mov
pop
sbb
sbb
push
sbb
lods
inc
pop
and
mov
insl
dec
outsb
dec
std
lea
shlb
push
and
mov
sub
push
push
fidivs
pop
js
add
pop
add
add
sbb
mov
mov
sbb
movsb
dec
adc
lcall
lcall
adc
mov
xchg
pop
add
es
daa
pushf
dec
pop
pop
add
inc
add
mov
sbb
and
imul
jp
rclb
inc
jo
sbb
sbb
pop
out
test
popf
or
es
cmp
lcall
push
push
cmp
sbb
inc
insb
dec
mov
mov
sbb
nop
or
cmp
add
sbb
out
xchg
sub
les
inc
popl
push
dec
nop
sbb
add
rorb
sbb
push
adc
mov
scas
or
and
jne
sbb
add
je
mov
sbb
jge
xor
push
mov
pop
sahf
pushf
xor
xor
push
dec
pusha
and
ret
push
mov
xor
dec
sbb
divb
mov
push
mov
jne
roll
sub
mov
xchg
fcoml
mov
mov
popw
xlat
das
test
lock
inc
add
fistl
and
dec
push
enter
sbb
inc
aaa
outsl
andl
mov
push
cmpsl
inc
ret
lods
mov
add
outsb
jbe
cmpsl
jb
stc
jno
adc
and
mov
pusha
pop
popf
scas
push
mov
sbb
mov
inc
push
xorb
push
and
loopne
pop
shll
ret
xchg
loope
cld
addr16
pop
xchg
push
arpl
test
pop
inc
mov
xor
jmp
arpl
mov
jb
inc
sbb
addl
nop
js
insl
fs
mov
sbb
mov
sbb
in
inc
inc
xchg
and
cmp
push
out
mov
push
xchg
cmp
daa
outsb
pop
mov
mov
sbb
insl
xchg
scas
inc
mov
push
jne
xor
js
xchg
lods
mov
xchg
jbe
enter
nop
sbbb
cmc
push
loop
sahf
out
sbb
push
inc
icebp
fimuls
inc
cmp
movsl
fmull
xor
sbb
pusha
push
or
arpl
xchg
pop
and
pop
dec
sub
out
inc
test
mov
dec
ja
imul
lods
xor
jo
aaa
sub
sub
lea
jp
fimuls
dec
call
dec
in
orb
addr16
mov
add
add
push
daa
cld
add
adc
inc
subb
mov
add
or
mov
add
add
sahf
shll
add
add
mov
addr16
clc
add
pop
add
dec
lock
push
mov
enter
mov
pushfw
push
repz
xlat
out
cld
pop
add
dec
cmpsl
or
cmp
mov
mov
or
add
cmp
or
add
sub
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
