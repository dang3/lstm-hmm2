fcomp
decl
and
add
mov
or
sbb
cmp
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
and
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
mov
insb
and
push
push
js
test
roll
pop
sub
dec
jno
outsb
push
sbb
rorl
and
dec
mov
notl
sbb
push
and
push
cmp
push
add
stos
sbb
add
cs
dec
cltd
adc
bnd
pop
mov
push
xchg
dec
add
cmp
je
sbb
jle
add
push
adc
lock
dec
add
mov
add
xor
xor
sub
jo
hlt
push
and
nop
testl
sbb
imul
push
mov
adc
popf
addl
fldl
leave
or
inc
lock
lret
inc
add
lds
insb
mov
add
loopne
ret
cmpb
adc
mov
push
and
fldt
mov
xchg
push
roll
mov
add
lods
push
push
imul
jo
dec
add
ss
push
push
outsb
clc
inc
in
in
or
mov
sete
push
imul
into
mov
jle
or
leave
mov
cwtl
ficoml
mov
xlat
cmp
fcompl
fidivrs
les
add
push
push
mov
inc
in
pop
jb
call
add
enter
add
sub
cli
push
mov
fwait
push
loopne
push
rol
imul
xor
mov
push
daa
sbb
sbb
aam
xor
push
push
pushf
sbb
xchg
dec
push
mov
lea
or
imull
push
mov
dec
or
pop
sahf
add
sbb
cmp
lret
add
add
pop
mov
dec
test
mov
sub
sub
out
pop
jg
mov
and
mov
cmpsl
dec
jg
mov
addl
and
adc
pop
cmpsb
mov
pop
ret
xor
mov
inc
push
dec
dec
push
sub
push
insb
insl
push
add
fmul
loop
faddp
jl
mov
cld
lods
je
les
decl
lock
lahf
cmp
jae
mul
clc
mov
sub
push
mov
dec
lea
mov
fldenv
or
in
pop
inc
and
add
sbb
mov
sub
mov
in
push
int
add
pusha
push
add
cmpl
clc
mov
push
iret
je
cmpsl
sbb
lods
fildll
out
adc
add
dec
in
dec
xchg
orl
inc
mov
andb
aas
fldl
mov
or
pop
mov
pop
shrb
or
jle
pop
push
movsb
sbb
inc
hlt
nop
test
mov
mov
mov
or
dec
push
mov
cmp
mov
testl
pop
inc
xor
lds
inc
cmp
mov
je
or
cmp
and
xor
xor
mov
lock
add
gs
inc
push
lea
push
push
movsb
fsubrs
cltd
fistps
ds
xor
cmpsb
add
stos
jge
subb
sti
shl
push
jg
dec
or
test
push
adc
rol
add
sbb
pop
nop
add
or
pop
mov
jb
sub
mov
pop
sbb
dec
in
sbb
addps
cld
or
sub
jb
icebp
cli
inc
arpl
xchg
dec
cmp
mov
pusha
push
push
clc
mov
push
or
ret
add
popa
mov
or
mov
inc
sbbl
dec
jbe
popf
sbb
sete
test
test
push
mov
or
sub
arpl
sub
and
sub
xor
dec
mov
pop
insb
pop
aad
or
and
sbb
cmp
inc
stos
pop
inc
sub
pusha
lds
punpckhbw
jne
mov
js
addb
jne
push
xor
cmp
je
adc
jne
in
rorb
or
push
push
mov
mov
sbb
rorb
ja
mov
fmuls
pop
mov
mov
shlb
loopne
or
popa
push
or
xor
enter
cmpsb
jo
push
ljmp
lods
xor
cmp
testl
mov
test
mov
push
mov
jmp
jmp
push
inc
cmp
pshufw
sub
xor
mov
push
pslld
inc
cmpsb
mov
out
xor
add
int3
sti
mov
dec
cmpsl
movsl
sbb
sbb
cmp
mov
mov
popa
lds
mov
push
add
mov
fstp
fdivrp
adc
leave
mov
test
mov
mov
mov
test
or
push
mov
xor
aas
or
mov
inc
pop
test
and
push
jmp
and
mov
xlat
int3
xor
push
mov
cmp
mov
adc
cmp
pop
jno
xor
nop
test
dec
inc
imul
fs
pop
push
mov
or
movlhps
mov
sbb
data16
or
sub
mov
js
or
rolb
test
xchg
jl
ljmp
push
mov
pop
rcrb
adc
push
je
aaa
ljmp
icebp
add
push
mov
cmp
outsb
sub
testl
mov
push
inc
mov
mov
xchg
sbb
adc
jo
aaa
mov
sbb
notb
enter
jle
or
xchg
sarl
das
insb
or
insb
sti
clc
jae
mov
cmp
and
mov
mov
mov
leave
in
push
mov
xorb
adc
inc
movsb
ret
aaa
push
in
cs
jae
in
jecxz
mov
pop
pop
icebp
jns
mov
or
inc
lods
and
sbb
mov
mov
sub
and
xchg
jne
mov
dec
push
push
lods
mov
addl
jg
xchg
sbb
fmuls
outsl
mov
and
punpckldq
out
les
xchg
orl
and
adc
sub
outsb
aas
and
imul
mov
mov
sahf
imul
inc
ret
sub
jmp
add
cmp
or
cmp
jne
mov
insb
mov
inc
xor
mov
dec
mov
inc
lods
sbb
jmp
push
dec
cmp
je
sub
cmp
in
cmpsl
scas
aad
scas
ljmp
lret
enter
or
cmc
push
or
mov
insb
cli
test
test
mov
add
les
ret
add
mov
add
add
aaa
loopne
lcall
sub
cmp
ss
push
cmp
call
adc
add
pushl
push
call
inc
cmp
jl
xlat
ret
adc
push
jb
fs
push
js
jne
mov
push
push
add
push
xor
jle
rorb
gs
mov
xor
inc
push
dec
mov
push
ds
push
aaa
adc
ss
roll
movq
add
and
and
add
into
pushl
movzwl
and
add
je
push
cli
into
mov
jmp
ss
push
std
jmp
mov
lea
add
inc
test
jne
sub
push
push
inc
sub
in
cs
adcb
sbb
xchg
int
dec
lock
out
int3
insb
rorl
cmpsb
mov
iret
ret
push
lea
fbstp
iret
cmp
jg
inc
movsb
add
pop
cld
push
jge
xor
mov
cmp
jl
repnz
outsl
or
insb
pop
pop
ret
mov
cs
movsb
push
pop
adc
inc
getsec
mov
sbb
push
jl
shll
jno
outsl
push
or
lahf
push
xchg
pop
movsl
pop
jnp
xor
jne
pop
mov
sbb
loopne
push
or
mov
adc
lea
pop
movsl
imul
loope
orb
scas
fisttpll
hlt
std
sbb
jge
push
call
pop
adc
pop
nop
lahf
ret
mov
pop
dec
clc
jle
mov
mov
cmp
pop
fdivr
arpl
and
inc
clc
mov
lea
faddl
push
mov
or
cmp
jl
clc
sbb
cmp
ja
add
jmp
insb
fcoml
add
push
fildl
bound
insl
pop
gs
jo
jg
mov
movb
pop
ds
adc
or
or
lods
pop
lock
push
cmp
or
subb
sub
pop
sub
add
inc
push
insl
aas
cli
movl
or
aad
and
add
sbb
sbb
rclb
pop
cmpl
or
mov
push
ds
cmp
out
in
in
lret
pop
pusha
cmp
notl
mov
test
mov
test
repz
cmp
ja
sub
add
push
clc
lea
push
push
push
mull
or
sbb
clc
push
add
cmc
sub
adc
add
or
arpl
loop
mov
mov
adc
cmp
push
sub
loopne
add
sbbl
imul
mov
stos
pop
enter
push
js
loop
pop
xchg
stc
push
push
push
or
mov
sbb
push
push
lea
sbb
mov
pop
add
int
subl
jmp
pop
or
or
jo
jbe
js
xor
pusha
icebp
sbb
pop
sbb
movsl
jecxz
dec
lds
int3
ja
lcall
or
je
in
add
std
or
mov
xor
jg
test
lahf
mov
aaa
movsb
sub
hlt
divb
cmp
je
cmpl
lea
jl
mov
push
jne
push
out
stos
or
add
shrb
cmpb
in
cli
stos
xchg
pusha
xchg
pop
push
hlt
push
push
mov
daa
or
insb
popf
adc
mov
inc
push
or
inc
or
add
xor
push
idivl
dec
and
add
out
cmp
loope
lahf
ret
push
fisubrl
dec
jo
pop
lret
sbb
or
jb,pn
lret
push
adc
push
sbb
push
icebp
ret
lods
dec
inc
push
jo
add
arpl
dec
repnz
adc
loope
mov
ljmp
sub
dec
push
mov
push
ret
loopne
movsb
and
jnp
mov
jmp
pop
push
push
in
mov
add
clc
mov
lds
push
pop
mov
mov
xor
stos
mov
loop
adc
lret
lods
xchg
mov
loopne
call
push
sarl
jge
call
lea
inc
dec
adc
adc
push
xor
pop
mov
lea
test
sub
or
inc
mov
in
dec
or
push
pop
fisubl
mov
repnz
loop
pop
jle
mov
jmp
lcall
add
jle
add
shlb
ret
or
pop
mov
inc
loopne
rorl
adc
push
idivl
cmp
add
mov
or
les
add
mov
mov
or
add
test
in
ret
push
jae
scas
pop
pop
daa
dec
mov
sbb
jge
push
jle
mov
mov
fiaddl
pop
xor
push
dec
jbe
push
hlt
sbb
in
cmp
cli
lret
rol
fidivl
pop
dec
sar
rorl
or
ret
cmp
rorl
or
mov
jb
add
lock
mov
jecxz
mov
lahf
inc
mov
mov
push
lea
add
push
add
push
inc
shlb
call
mov
add
add
inc
pop
pop
mov
xor
sub
jmp
mov
jg
add
inc
cmp
jb
mov
push
mov
dec
repz
outsb
add
pop
pop
mov
lret
ficoms
pop
pop
jne
pop
push
push
pop
repz
sub
sbb
sub
pushf
lock
sub
imul
lea
push
movsl
xchg
pop
ss
add
pop
insb
adc
dec
push
xlat
jg
xor
mov
pop
pop
sti
frstor
flds
xchg
mov
lea
jne
jl
inc
adc
xor
adc
cmp
mov
daa
or
cmp
cmp
xchg
push
test
push
sbb
sub
aam
push
call
add
cli
fdivrl
int3
mov
sbb
pop
xor
movsb
push
push
mov
rclb
pop
sbb
mov
js
imul
and
dec
es
or
mov
loopne
sti
jne
xor
push
push
dec
pop
fisttpl
outsb
or
sbb
repnz
push
lea
add
cmp
aad
inc
fistps
mov
test
jge
pop
mov
aas
mov
pop
repnz
or
clc
addl
sbb
push
push
cmpsl
shll
cmp
mov
inc
fs
cmpsb
mov
pop
xor
fistps
sbb
fucompp
xchg
pop
and
stos
pop
repnz
or
aas
sbb
aas
roll
bound
xchg
xchg
jno
cmp
into
rcrb
or
call
das
outsb
mov
ds
pop
jp
inc
or
inc
cmp
movsb
data16
inc
clc
and
je
jp
mov
or
push
or
jne
fisubl
push
push
push
inc
test
mov
insl
movsl
add
ret
sbb
pop
testb
adc
out
dec
mov
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
out
dec
or
addr16
jmp
ret
pop
add
jne
mov
cld
push
adc
sarb
rcr
jle
repz
popf
cmpsl
fisttpl
dec
jecxz
mov
and
xor
outsl
pop
adc
inc
incb
push
loop
je
je
pop
cmp
cmp
mov
cwtl
jecxz
xchg
jne
jle
cmp
sahf
in
sbb
mov
bound
imul
add
repz
inc
inc
or
push
movsb
jge
pop
inc
dec
adc
scas
rorb
pop
add
repnz
std
xchg
jmp
dec
divl
shll
shrl
rorb
std
jnp
xchg
cwtl
pop
push
mov
sub
jb
out
cmp
mov
add
movzbl
neg
sbb
and
mov
stos
adc
mov
into
lea
fbstp
iret
pusha
rorb
jp
sub
cmpsl
cmpsl
jg
push
lea
adc
flds
push
push
mov
sbb
adc
sbb
xor
stos
mov
loopne
std
fidivs
lds
mov
fldcw
sbb
xchg
fisubrs
jg
out
movl
xchg
push
push
int3
out
lret
mov
stc
sbb
enter
sub
pop
xor
je
xchg
mov
xchg
aaa
in
lcall
iret
loop
cmp
jns
out
orb
pushf
out
insb
popf
pop
adcl
mov
add
pop
or
shl
jo
or
movsb
fstl
loope
outsb
pop
pop
mov
and
sahf
in
push
je
fistps
adc
mov
sbb
dec
ljmp
adc
xchg
xchg
xchg
inc
xchg
sahf
arpl
maxps
stos
push
dec
mov
sub
push
pop
push
lea
push
ficoml
add
push
lea
mov
xchg
push
and
out
aam
in
pusha
les
pop
sahf
nop
pop
fmuls
xor
xchg
aas
enter
popa
or
movl
sbb
jbe
or
bound
xor
testb
mov
add
fiaddl
gs
inc
cld
xchg
in
sub
xchg
pop
adc
test
fdivrl
add
add
lock
push
lahf
mov
push
push
jle
ficompl
add
mov
shrb
mov
fs
or
aam
or
outsb
sub
loop
or
cltd
and
xor
ret
jle
rcll
mov
push
mov
dec
sbb
add
push
outsb
rolb
sbb
mov
lock
push
rolb
inc
call
pop
out
sbb
xchg
inc
fisubrl
sbbl
nop
mov
cmp
fidivl
jbe
mov
test
push
mov
lahf
lock
pop
aas
arpl
testb
shrb
mov
andb
ss
and
jno
xchg
push
mov
int
pop
dec
in
lret
adc
push
push
push
push
inc
test
das
cmp
inc
pop
cmp
je
lea
add
addb
stc
lods
mov
inc
xchg
pushf
loope
pushf
push
mov
mov
sahf
mov
subb
mov
dec
or
ret
movsb
shlb
loop
clc
pop
mov
jne
mov
cli
adc
ret
sbb
in
pop
xchg
adc
aad
xor
sub
fcoms
xchg
and
lods
mov
ss
adc
push
mov
mov
insb
mov
clc
out
push
dec
dec
mov
push
push
xor
aam
dec
add
rcrb
out
sub
ds
inc
push
ret
add
inc
mov
pop
mov
lahf
xor
sub
data16
push
mov
add
sahf
inc
add
mov
cmp
icebp
add
xchg
ffree
and
cmp
es
push
push
inc
jbe
pop
jl
test
shrb
mov
iret
sbb
push
adc
xor
sahf
out
jns
cmp
inc
or
jle
xor
sub
into
push
push
arpl
xorb
icebp
add
or
fistps
dec
mov
out
cld
call
push
sarb
sahf
mov
push
sbb
sub
add
outsb
or
cmp
xor
push
cmpsl
popa
cmp
fnstsw
dec
jno
sub
test
add
jecxz
call
movzbl
in
repz
mov
lock
mov
push
lret
mov
fimuls
xchg
cmp
ja
cwtl
push
fsubl
and
mov
mov
inc
test
xchg
adc
or
adc
call
sub
je
push
push
mov
negl
push
push
and
push
add
mov
aam
jl
cs
jo
lret
push
mov
mov
xor
sbb
and
pop
push
loope
das
xchg
hlt
mov
lret
fwait
pop
xlat
loop
pop
or
in
fistps
mov
add
addl
out
mov
or
int3
lock
mov
lea
jmp
pop
in
add
shl
test
mov
xchg
cwtl
jb
pop
cmpsl
mov
xor
sbb
jecxz
push
or
call
popl
mov
hlt
test
adc
add
xchg
xchg
push
orb
adc
inc
push
flds
mov
sub
ret
call
nop
sub
push
mov
push
xchg
or
mov
cmp
sub
test
incl
jne
push
mov
icebp
or
pop
pusha
and
cs
sub
stos
or
push
jb
sub
pop
push
fstpl
shufps
mov
fwait
imul
aad
dec
cmp
and
in
rorb
enter
loope
add
sbb
adc
jns
lods
and
sbb
les
adc
adcb
mov
pushl
nop
add
dec
push
xchg
sbb
push
dec
sbb
dec
mov
mov
push
push
sub
mov
inc
push
ret
pop
xor
push
rclb
push
pusha
lods
ret
mov
push
push
sub
push
nop
cmp
pop
sub
push
push
lea
jo
fildll
cmp
xor
pop
js
lahf
push
mov
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
je
cwtl
adc
cmp
push
je
cmp
rcl
mov
inc
xor
mov
dec
add
ss
int
add
or
mov
mov
adc
adc
and
push
push
in
ja
push
and
jo
push
je
xchg
sbb
add
push
push
je
push
mov
bound
adc
xor
call
faddl
stos
jno
enter
shrb
xor
pop
cmp
fldl
fmull
incl
mov
push
pushf
test
cltd
or
es
push
adc
jns
mov
adc
imul
add
scas
add
add
cmpl
dec
ds
push
roll
and
xor
push
lds
pop
push
push
mov
jl
ja
push
cmp
bound
mov
decl
mov
dec
inc
push
add
push
mov
jno
ljmp
add
or
or
push
and
clc
shl
dec
jp
loop
lock
dec
sahf
imul
in
or
es
adc
rcll
arpl
cmc
aam
xchg
push
add
sbb
jns
xchg
add
add
pushf
data16
xor
xorl
mov
push
addb
push
arpl
push
push
lds
pop
shll
arpl
cs
repz
xchg
add
hlt
cli
sar
je
mov
jge
xchg
lock
jmp
stos
dec
cs
xorl
loopne
or
inc
test
or
fs
dec
push
in
dec
fiadds
dec
lea
add
xchg
add
push
iret
add
add
cmp
fdivl
enter
mov
insb
push
mov
fmull
sbb
mov
int3
dec
push
push
push
or
movsl
lods
test
push
jmp
xchg
mov
ror
add
fistps
sub
adc
andb
js
push
ret
call
jl
pop
dec
mov
fs
dec
xor
sub
sbb
out
movsl
mov
enter
and
pop
sbbl
xchg
adc
imul
xor
add
xor
add
adc
cmp
dec
int3
add
cltd
and
mov
xor
push
sar
push
adc
jl
dec
mov
push
push
add
push
add
mov
mov
lahf
ds
imul
sar
mov
shr
add
mov
imul
lock
push
push
lahf
nop
popw
call
in
jle
in
imul
add
jmp
or
push
adc
cmc
sub
mov
stc
filds
dec
repnz
push
sarl
push
enter
lea
sub
adc
push
cmpl
push
or
dec
cld
push
cmp
jne
push
icebp
and
lea
call
fisubl
dec
xor
ficomps
shr
imul
loopne
icebp
lea
or
adc
mov
outsl
sbb
xor
pop
sbb
or
dec
sbb
push
rolb
lea
jmp
add
xchg
push
cmpsl
sbb
inc
cmp
cli
dec
mov
out
data16
push
dec
cmp
lods
sub
mov
int3
sbb
stos
call
je
test
jl
lcall
insb
ja
arpl
inc
push
aaa
ds
outsb
outsl
xor
and
mov
cmp
jbe
popf
mov
push
test
arpl
mov
in
jle
fidivrs
cmp
add
xor
sbb
inc
test
pop
and
mov
add
imul
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
sbb
push
faddl
ja
xor
sub
xor
mov
fdivrp
rorl
xor
sbb
cs
cmp
cmp
inc
push
lock
xchg
xchg
cmp
add
inc
bound
mov
loope
xlat
inc
sbb
out
fidivl
adcl
andl
rorb
sbbb
in
sbb
pop
movb
imul
leave
jge
and
mov
adc
adc
pop
mov
push
mov
add
inc
mov
cs
cmp
mov
in
xchg
mov
call
test
xchg
mov
js
sbb
lret
xor
or
aam
cmpl
mov
insl
rcrl
xor
fdivl
cmp
inc
mov
adcl
sub
xor
adcb
jp
inc
sbb
inc
dec
jo
jge
lea
nop
bound
or
push
pop
test
test
or
sub
inc
add
inc
fildl
push
pop
lods
mov
xor
loopne
popa
ret
sbb
jmp
jecxz
inc
jo
add
pop
add
mov
xchg
cmp
jne
and
adc
xor
xor
lock
rcrb
scas
pop
clc
cmp
sub
rcrb
or
outsl
cmp
mov
addb
pop
or
add
push
sbb
mov
pop
addb
xchg
push
push
nop
notb
adc
fisttps
aas
lea
push
push
insl
sbb
mov
push
xor
jg
pop
sbb
data16
fstpl
inc
mov
jbe
lahf
add
subl
adc
dec
mov
adc
push
bound
repnz
jl
push
sub
ficompl
push
inc
dec
xchg
pop
mov
push
adc
mov
pop
and
jmp
cmp
push
rol
push
inc
cs
or
pop
sbb
or
pusha
cvtdq2ps
dec
mov
mov
mov
xchg
or
jns
sbb
xchg
push
push
mov
or
ret
lahf
or
or
sbb
andl
ret
jp
mov
sar
push
sub
clc
setb
pop
cld
filds
mov
sub
cmp
setae
lcall
and
add
mov
xor
xor
push
or
add
aam
outsl
inc
pop
les
push
push
sub
add
inc
push
cltd
xorb
push
pusha
mov
push
aad
push
movsl
push
adc
pop
pop
pop
pop
lock
jo
lahf
rcll
lods
jecxz
aaa
loopne
mov
xor
push
adc
or
pop
cmp
imul
push
xchg
adc
or
add
sbb
mov
add
inc
adc
cs
adc
push
push
inc
cmpsl
test
dec
push
aam
cmp
inc
aas
push
inc
lods
in
dec
jg
sbbb
incl
orl
sbb
jge
mov
jns
outsb
push
pop
jns
inc
xlat
cmp
mov
ja
movzbl
ret
sbb
or
push
pavgusb
sti
scas
inc
adc
in
add
repz
push
icebp
sti
add
add
adc
pop
cmp
sub
add
dec
mov
push
adc
sbb
mov
mov
gs
ds
inc
and
adc
inc
xor
push
bound
or
ffree
add
lahf
xor
enter
pusha
jmp
scas
sbb
sbb
xor
sbb
xor
pop
adc
lret
mov
mov
and
and
add
add
inc
push
enter
mov
fcomps
sub
sbb
add
inc
js
adc
or
and
dec
dec
rorb
rolb
cmpl
add
in
jecxz
stos
mov
sahf
add
mov
xor
roll
xchg
or
mov
mov
sbb
ss
rorb
add
sbbb
jle
nop
dec
or
add
fdivl
dec
mov
mov
xchg
dec
call
jo
mov
jmp
je
popf
rcl
adc
vmwrite
push
pop
xchg
imul
pop
cmp
dec
sbb
imul
imul
pusha
inc
pop
ret
aaa
movsl
pop
sub
sbb
sub
sub
stos
dec
in
or
leave
es
push
sbb
jo
shrl
dec
jecxz
mov
in
or
jne
push
push
push
push
cmp
jmp
bound
sti
mov
adc
std
in
rcrl
pop
std
xchg
mov
loope
push
add
mov
xchg
or
add
push
or
add
xor
outsb
cwtl
mov
dec
cld
int
mov
jge
mov
xor
int3
test
jg
mov
aam
arpl
adc
add
pop
test
dec
and
jb
sub
xor
xchg
and
lea
inc
in
sub
cmp
test
cs
dec
add
push
push
pop
push
loopne
mov
cltd
int3
sbb
sub
push
or
ljmp
mov
or
dec
call
add
adc
mov
jmp
xor
cmp
das
fsubr
sub
xchg
or
sub
pop
pop
push
fistl
push
sub
dec
dec
fisttpl
adc
add
and
je
fwait
in
xor
cmp
and
mov
push
add
jne
adc
mov
sub
and
jl
cmp
ljmp
sbb
pop
ret
xchg
int3
mov
fwait
test
inc
test
adc
jno
shrl
fcmovu
push
and
loopne
or
add
push
cmc
sbb
sub
or
roll
mov
add
mov
mov
add
loop
sbb
cmp
ss
jae
mov
js
pop
movl
jne
pushf
push
sub
rclb
push
add
js
push
data16
mov
pop
sub
lds
insl
sbb
iret
push
repnz
into
leave
xor
or
mov
push
push
ljmp
int3
test
mov
adc
dec
jge
out
pop
enter
enter
rcll
sbb
xchg
bound
mov
and
adc
imul
out
cmp
fists
jae
imul
lahf
int
xchg
aam
adc
shrl
add
or
dec
jno
or
sbb
insl
xchg
or
push
mov
pusha
shlb
xchg
popf
mov
or
cmp
popf
push
adc
movsb
push
ficompl
movsb
sub
adc
adc
mov
sub
add
pop
xor
and
test
push
mov
dec
iret
xor
mov
shr
pop
ficoms
adc
call
ds
adc
xor
sub
arpl
adcb
in
add
and
sti
mov
int3
add
test
adc
mov
pop
cmp
maskmovq
imull
sarl
into
adc
push
stos
adc
std
stc
cmp
pop
push
pushf
dec
mov
push
fcoms
fdiv
jb
les
jmp
das
push
cli
arpl
movl
fmull
pop
in
jge
jne
loope
sbb
xchg
lods
lods
mov
dec
andps
xchg
fsubrs
sbb
sub
aad
sbb
adc
add
fldl
test
push
push
jb
or
je
movsl
add
cld
pop
or
add
push
cmp
xor
and
inc
mov
or
shll
jne
dec
pop
loope
das
mov
push
adc
dec
cmp
push
mov
xchg
inc
add
sbb
dec
repnz
test
das
je
mov
dec
sbb
push
ds
out
add
lcall
roll
nop
maxps
lret
sub
lahf
jecxz
shr
push
fmull
mov
lret
stos
xadd
sahf
cmp
push
sbb
pop
imul
dec
inc
push
popa
cmp
adc
adc
cld
sbb
or
adc
shlb
clc
jbe
repz
mov
cmp
and
loopne
sbb
sbb
xchg
roll
add
adc
jns
push
xor
push
add
and
mov
sbb
add
dec
push
add
and
adc
pop
mov
inc
into
pop
addl
and
in
cmp
insb
push
and
pop
jne
xlat
test
cmp
jmp
sbb
jne
adc
xchg
cmp
addb
push
pop
cmc
add
add
jne
mov
bound
xor
lret
in
xor
and
dec
repnz
and
xor
and
stc
push
cs
bound
dec
and
icebp
dec
and
nop
lock
jmp
add
sub
add
pop
or
dec
and
enter
xor
ljmp
repnz
loope
test
and
mov
adc
or
loopne
jb
movsb
add
sub
jecxz
imul
cltd
inc
xor
lds
and
add
call
push
push
scas
sub
xchg
test
push
les
push
sub
add
aaa
sbb
push
sti
and
out
arpl
add
hlt
mov
xor
mov
pop
sbb
adcb
inc
push
adc
inc
daa
pop
rolb
faddl
das
leave
sub
sbb
mov
adc
cli
add
cmpsb
cld
or
aaa
adc
push
addl
inc
cltd
sbbb
jnp
push
add
ds
jb
cmp
xor
and
push
fwait
lods
fwait
add
lcall
xor
pushf
loope
add
xor
lahf
pop
push
sub
xchg
push
nop
xor
push
or
xchg
inc
ds
inc
add
pop
leave
sbb
pop
add
push
adc
mov
xor
pop
scas
in
push
pushf
jl
sub
mov
or
cmp
cmp
cmp
je
push
scas
aaa
push
loop
or
or
pop
cs
pusha
cmp
push
sub
aam
jns
gs
wrmsr
shll
fidivl
in
loopne
pop
add
movsl
jnp
dec
inc
mov
testb
inc
adc
es
xor
or
dec
and
data16
inc
cmp
cmp
iret
inc
cmp
xchg
stos
cs
push
cmp
daa
or
pop
inc
pop
stos
cmp
sub
test
test
testl
shrl
sub
std
xor
into
in
mov
push
outsl
fwait
test
in
or
lods
lds
push
or
rclb
pop
or
movl
adc
dec
and
mov
dec
inc
es
cmp
sub
movsb
adc
ret
cmpsb
inc
cmp
jmp
or
mov
dec
mov
sbb
mov
mov
addl
add
inc
mov
fdivrs
jo
pop
sub
mov
add
push
daa
mov
jg
ds
xor
ja
cmp
leave
test
add
lods
mov
fldt
cmp
out
adc
jmp
pop
xchg
daa
pushf
mov
and
subb
enter
ret
iret
js
and
lcall
adc
call
and
add
or
data16
mov
bound
pusha
test
add
and
adc
cmp
xchg
adc
xchg
jp
pop
cmp
enter
sub
data16
aam
clc
movsb
lock
movsb
adc
or
jmp
hlt
push
popf
mov
in
arpl
push
movsb
dec
test
adc
fidivs
in
pusha
mov
push
sbb
xorl
jmp
jno
fs
outsl
sbb
into
cmpsb
push
clc
mov
mov
and
cltd
push
into
adc
stos
sarb
push
jp
je
pop
mov
and
dec
inc
cmp
out
or
jl
push
mov
fwait
int
xor
scas
mov
lds
inc
dec
mov
mov
adc
mov
adc
test
or
cmp
push
push
rclb
push
jp
into
lea
enter
inc
aad
out
sub
pop
xor
ret
push
movsl
negl
imul
cwtl
hlt
test
or
dec
pop
push
push
or
int3
popa
add
jge
shlb
or
and
jns
inc
xor
aas
xor
fs
jbe
daa
or
ds
mov
or
cmp
inc
jl
push
adc
add
loopne
dec
push
into
ja
xchg
sub
notl
js
xorb
sbb
mov
pop
push
ret
lds
xlat
cmp
test
jmp
fists
push
push
mov
cmpsb
xchg
mov
loopne
shrl
enter
add
or
iret
pop
js
sub
pop
pop
lcall
je
out
jmp
nop
add
test
pusha
rclb
pusha
adc
add
push
jns
add
int
sti
and
mov
or
sub
sub
nop
push
adc
adc
or
push
nop
pop
push
xchg
fadd
cmp
sub
nop
mull
mov
andl
or
pop
xlat
add
adc
sbb
push
stc
xor
sub
adc
loope
mov
sub
or
and
inc
aad
imul
movntps
es
lock
or
lcall
andl
out
enter
mov
adc
inc
and
in
adc
pushf
mov
pop
mov
loop
js
adc
and
js
adc
or
sbb
xor
subb
adc
mov
lar
nop
or
cmp
add
nop
cwtl
push
and
or
xor
je
xchg
insb
jo
inc
xchg
xor
nop
or
push
push
sub
add
lea
pop
jl
lds
sub
adc
and
mov
adc
and
pop
add
pop
xor
loope
js
loop
push
addr16
pop
or
sbb
mov
test
sbb
lea
mov
xor
jl
add
ja
rcrb
addr16
adc
mov
sbb
iret
jnp
cs
mov
dec
loopne
cmp
xchg
leave
and
jno
insl
xchg
cmp
sbb
iret
sbb
in
mov
daa
xor
add
or
pop
jl
xor
jmp
ja
mov
inc
movsl
xchg
cmp
cwtl
rcl
lea
adc
xor
push
into
out
cmp
mov
std
and
rclb
lea
lret
sbb
stc
inc
xlat
push
ret
adc
and
cs
pop
imul
andl
inc
imul
imul
and
xchg
lea
sub
add
fs
pop
or
outsl
mov
aam
push
ret
add
xchg
mov
movsb
jmp
push
or
adc
jmp
mov
dec
adc
adc
loope
popf
test
sbb
cmp
jae
icebp
loopne
hlt
or
outsl
xchg
lret
stos
inc
and
xchg
outsb
add
pusha
sub
into
and
imul
jmp
pop
pusha
stos
dec
adc
out
xchg
nop
dec
pop
pop
je
xchg
xor
lret
xor
enter
mov
insb
mov
push
enter
sub
xor
pop
add
dec
push
dec
xchg
dec
xor
push
jns
lds
xor
mov
mov
or
mov
mov
sub
je
pop
out
je
dec
iret
jb
push
pop
frstor
outsl
jo
in
add
add
add
in
inc
out
adc
mov
adc
in
aaa
loopne
lea
pop
stos
and
clc
icebp
decl
sub
sub
or
jge
fsubrs
iret
les
push
mov
push
sti
and
mov
jle
jg
mov
xchg
movb
and
mov
push
mov
movsl
push
add
adc
push
in
shlb
insb
add
add
rorb
jne
jns
popf
add
jmp
mov
gs
dec
outsl
add
inc
sub
in
mov
xor
js
mov
push
mov
pop
pushf
test
inc
fnsave
inc
call
jno
push
cld
sub
clc
loop
or
inc
add
lods
pushf
lcall
loopne
add
addb
mov
sub
loop
icebp
in
sub
mov
or
add
pop
test
jne
xor
test
mov
arpl
aas
in
sti
jle
pop
push
jno
sbb
shlb
push
ret
add
add
push
push
test
jle
sub
and
insl
inc
dec
xchg
mov
out
inc
rclb
dec
mov
les
jg
scas
add
pusha
sbb
icebp
test
das
or
xor
dec
ss
cmp
adc
adc
mov
pop
pop
add
add
cmp
mov
jnp
adc
sub
mov
cmc
push
mov
inc
pusha
or
lds
push
or
dec
jae
sub
pusha
or
mov
in
jo
add
add
xchg
jle
mov
mov
js
push
sbb
sbb
lret
call
push
movsl
addl
jo
subb
hlt
aam
push
xchg
test
jbe
xlat
jecxz,pn
orb
pop
imul
cmp
jle
add
rcrb
mov
ss
push
add
lock
sub
or
test
jecxz
adc
hlt
add
inc
hlt
out
push
jg
xor
decb
lods
push
aad
lret
das
out
add
outsb
rorl
lock
push
mov
mov
push
cld
mov
xchg
cmp
push
jae
sub
mov
or
adc
pusha
pop
dec
push
xchg
pusha
ja
popa
roll
rcll
insb
jle
aas
js
add
xor
mov
cld
lea
lock
sub
mov
jo
pop
sahf
ljmp
sub
pop
shl
adc
xor
outsl
ljmp
mov
mov
aad
adc
aad
inc
and
dec
xchg
je
dec
xor
adc
test
cmpb
aaa
inc
jg
add
fdiv
add
mov
pop
mov
add
pop
or
ljmp
add
push
or
mov
jmp
repz
negb
sub
int
test
femms
aad
or
aaa
test
stos
and
subl
leave
adc
add
mov
fisubs
rorb
push
adc
and
movsl
adc
popa
daa
jo
icebp
dec
xor
movsl
jmp
stc
sub
das
mov
lods
add
sbb
dec
xchg
and
aam
jmp
stc
xor
sub
cmp
push
or
adc
fstpl
add
mov
rol
lahf
pop
hlt
push
adc
add
ret
je
cld
mov
mov
into
push
aas
push
push
cmp
orl
mov
push
test
push
push
in
pusha
push
adc
and
stc
cmp
fcoml
mov
adc
sti
rclb
andb
sbb
popa
leave
jae
mov
and
push
popa
and
pop
mov
popf
xor
inc
stos
mov
adc
sbbl
or
jg
inc
add
jns
js
sete
mov
pop
push
push
sbb
test
ficompl
test
inc
push
or
pop
sub
nop
add
push
movsl
adc
lods
rol
loope
jle
sub
inc
xor
xor
stos
jne
mov
inc
sbb
sbb
jmp
sub
and
fists
mov
cmpl
add
outsl
popa
push
in
loopne
jg
pop
mov
add
stos
movsl
push
rcll
adc
jnp
mov
mov
daa
outsl
or
fsubl
sub
shl
sbb
mov
inc
inc
push
pop
and
mov
stos
adc
dec
dec
iret
scas
push
dec
js
or
or
out
and
out
jecxz
sub
sub
stos
inc
rorl
dec
inc
add
inc
mov
mov
cmp
dec
dec
and
dec
mov
adc
and
out
xor
push
xor
push
rorl
sysret
pop
fdivs
adc
das
cmp
sub
mov
lds
sub
inc
add
sbb
repnz
repz
dec
lock
jle
jl
and
dec
mov
sub
inc
dec
pop
lods
pop
dec
mov
cmp
sbb
pushf
pop
leave
xor
push
or
mov
mov
inc
leave
sub
or
lret
pusha
sbb
cmp
test
and
test
ss
jo
inc
or
movsb
sbb
pop
add
adc
adc
fwait
movsb
dec
mov
inc
mov
mov
je
sahf
mov
add
sbb
sbb
mov
xchg
inc
push
sbb
ja
xchg
jno
jmp
mov
and
call
push
and
add
dec
and
add
push
and
bound
in
adc
gs
adc
push
cmp
test
xchg
mov
adc
push
push
dec
loope
mov
stc
inc
push
push
pop
jo
add
fsubrl
and
inc
popa
nop
add
scas
popf
ds
je
push
leave
xchg
lea
mov
addr16
adc
adc
das
push
pop
sarb
or
adc
rcl
test
jno
stc
or
mov
pop
bound
test
outsl
or
pop
and
leave
sbb
jbe
pop
lds
mov
testl
dec
pop
in
loope
out
mov
mov
or
fcoml
mov
inc
push
inc
add
push
jle
ret
cmp
cmp
shlb
adc
xor
mov
sbb
push
ja
fdivrs
add
xor
dec
push
dec
pop
rorl
xor
push
mov
rclb
push
mov
mov
and
mov
loope
cmc
mov
adc
je,pn
pop
clc
mov
sub
leave
xor
fwait
add
mov
ret
incb
and
add
jmp
dec
push
cmp
add
repnz
shl
rolb
hlt
cmp
jne
sbb
dec
je
push
inc
les
into
iret
das
filds
bnd
fsts
add
out
cmpsl
adc
aaa
int3
loope
pushf
mov
add
jp
cmpb
adc
xchg
sub
cs
sub
sbb
pop
and
adc
xor
inc
movsb
out
adc
add
sub
or
lea
jge
push
xchg
imul
sub
pop
inc
push
bound
incb
out
jb
adc
sub
mov
add
out
xchg
xor
pushl
mov
fsts
lret
sub
jg
mov
lock
lcall
std
insl
test
bsr
jae
jo
arpl
mov
dec
push
pop
mov
and
push
dec
dec
jb
add
fisubrs
mov
sahf
jb
movsl
xor
lds
dec
aam
je
jae
jb
int3
aam
sar
ja
add
bound
push
rcrl
pusha
cmpb
pop
fildll
lea
add
cmp
push
push
jl
add
adc
aaa
sub
sub
int
adc
mov
xorb
lret
lret
add
mov
push
cmp
lock
mov
dec
hlt
jge
mov
cmp
xchg
inc
inc
xor
daa
adc
and
fwait
popa
movl
into
sbb
es
outsl
jno
enter
and
sub
push
es
mov
rorb
mov
repz
adc
sahf
jl
mov
push
jg
push
add
push
pop
inc
jl
repz
push
ret
enter
das
push
push
bound
rolb
cld
sub
loope
lea
inc
movsl
or
mov
shr
adc
cs
mov
jo
into
inc
lds
mov
hlt
sub
push
test
adc
scas
push
adc
decb
stc
adc
mov
test
jo
dec
mov
adc
lods
mov
pushf
loope
mov
scas
mov
xchg
hlt
movsb
jns
push
adc
shll
pop
xchg
sbb
jns
push
inc
das
ret
jg
enter
cmp
inc
ja
sub
pusha
and
imul
mov
xchg
lds
stos
push
adc
cltd
into
imul
adc
jnp
js
insl
inc
jle
jg
or
or
add
js
filds
add
sbb
orb
cmp
pop
imul
or
aas
rolb
ret
jmp
stc
mov
dec
xchg
add
adc
mov
leave
or
add
adc
adc
negb
cwtl
in
add
xlat
push
xchg
and
sbb
jecxz
sub
push
inc
js
and
das
test
decl
testb
jl
mov
and
xchg
scas
clc
adc
cmp
jle
lock
inc
add
sub
inc
imulb
lock
loop
sub
push
out
mov
jo
sbb
or
or
or
add
iret
push
xor
cmp
or
lea
cmpsl
push
lea
rolb
jmp
dec
inc
cltd
or
adc
inc
push
and
aaa
mov
scas
push
push
std
and
outsb
push
add
and
or
xchg
shl
pop
push
add
fucomi
mov
mov
pop
hlt
xchg
cmp
xchg
sub
or
mov
sbb
in
imul
pop
mov
or
jl
add
ret
sbb
xchg
int3
insb
add
sbb
sbb
mov
sbb
add
popa
inc
or
ds
push
adc
inc
jae
pop
rcl
jg
push
add
push
fimuls
test
push
jb
lcall
dec
inc
add
mov
add
rorl
jp
stos
mov
push
mov
add
je
cs
cmpsb
push
mov
popl
jb
add
pop
sbb
sub
nop
ds
or
or
or
aas
iret
repnz
es
mov
or
mov
lock
arpl
test
inc
pop
mov
imul
movsb
xchg
mov
fmul
loopne
ljmp
or
xor
sbb
daa
pusha
and
push
lds
sbb
shll
dec
insl
lods
cmpsl
lret
pop
pop
test
icebp
push
dec
shrb
popf
push
iret
xor
lods
shlb
pop
sub
jmp
inc
subl
sbb
setge
add
sbb
movl
pusha
dec
lret
push
repnz
jmp
les
outsb
aas
in
cmp
adc
add
sbb
mov
jecxz
push
push
jb
inc
jo
idivl
call
xor
xchg
jl
adc
ds
cmpsb
nop
daa
xchg
cmp
daa
sub
push
xchg
adc
add
arpl
push
xchg
decb
or
dec
add
test
push
push
inc
dec
and
movsl
testl
fstl
jl
sbb
add
push
cmc
adc
mov
or
add
dec
xchg
jmp
aaa
loope
inc
or
imul
aam
xchg
into
orl
push
dec
ret
mov
pop
cmp
sbb
xchg
xor
adc
sub
xchg
pop
repnz
icebp
fisubrs
mov
add
int
cmp
push
sbb
fsubl
cmp
sbb
insl
in
push
loopne,pt
xchg
shlb
xchg
loopne
push
mov
and
inc
leave
dec
lods
mov
call
pusha
gs
xorl
xor
sti
je
xchg
inc
popa
add
popa
jne
xor
es
je
mov
xchg
mov
dec
ljmp
add
xchg
or
add
dec
mov
sbb
and
setle
std
push
push
movsb
push
xchg
mov
int3
addr16
xor
and
sub
add
jmp
sub
adc
imul
pop
mov
and
shll
jb
pop
js
push
cmp
add
jne
cld
cmp
mov
lds
ja
add
mov
test
cmp
sub
pop
push
je
dec
adc
pop
xlat
add
mov
push
faddl
and
cmp
cmp
push
aad
sbb
mov
sbb
adc
sahf
sub
xorl
cmp
test
mov
jne
push
int3
sub
push
cltd
int
imul
pop
jne
mov
dec
insl
or
dec
js
pop
repnz
adc
in
mov
mov
arpl
add
or
movl
lea
push
cltd
out
hlt
push
add
jl
sub
sub
fidivrl
push
add
iret
mov
lahf
or
and
repz
sub
adc
leave
rep
or
adc
and
xchg
xor
loope
sub
dec
or
pop
aaa
and
jle
jo
adc
add
test
jae
inc
enter
jae
stos
and
pop
sub
and
mov
adc
mov
mov
test
jecxz
nop
inc
ret
js
add
into
insb
add
xchg
sbb
test
stos
jg
bound
xor
stos
inc
daa
cmp
adc
inc
push
dec
dec
mov
xorl
push
and
adc
inc
imul
push
sub
ficoml
inc
push
push
pop
inc
daa
sub
pop
push
rclb
setns
xor
mov
popf
and
add
dec
push
add
cmp
sub
sub
push
popa
je
in
leave
jo
js
test
sbb
add
sbb
push
insl
pop
dec
or
pinsrw
pop
das
adc
or
pop
pop
mov
jo
inc
es
pop
or
fsts
pop
sub
test
int
pop
push
or
stos
jle
add
and
or
adc
inc
add
test
inc
add
sbbb
xor
stos
in
fsubl
cmp
xor
xchg
and
mov
fstps
xor
pop
and
pop
ror
sub
hlt
add
insl
sti
in
int
out
dec
add
push
mov
lret
subb
xor
test
inc
push
jecxz
jecxz
stos
pop
add
push
fisubl
fisubs
ret
aad
and
scas
add
jl
std
dec
pop
mov
mov
js
xor
sbb
repnz
pusha
push
inc
or
pop
and
and
mov
ds
mov
test
sbb
jp
aaa
xchg
fwait
int
or
je
dec
xchg
pop
inc
mov
pusha
inc
insb
push
push
xchg
outsb
adcl
xor
adc
int
shr
in
roll
je
xor
pop
mov
and
inc
dec
and
dec
lcall
xor
cltd
dec
stc
and
popf
cwtl
dec
push
push
jo
mov
sub
cmp
or
or
sub
sub
mov
ljmp
or
sbb
jmp
dec
cmp
jl
incl
inc
test
fldz
or
sbb
test
fucomip
lea
pop
cmp
jb
pop
pop
or
int
jg
je
push
cmpsl
std
sbb
lea
push
push
inc
sub
adc
sbb
adc
and
pop
push
loopne
add
jl
mov
ret
pop
orb
std
imul
add
in
test
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
insl
xor
add
sbb
rolb
fucomip
scas
cmp
sahf
test
push
and
or
bound
rcrb
sub
sub
lea
add
add
jp
pop
push
push
push
push
int
clc
and
test
outsb
test
inc
fs
jnp
push
add
add
push
movb
mov
rol
xor
mov
sbb
lds
sbb
push
mov
andb
push
js
orb
js,pn
jg
ja
imul
mov
sbb
xor
push
sub
lcall
jns
orl
push
sbbl
movsb
adc
add
fisubs
and
push
in
push
ret
scas
dec
jno
das
sub
or
lcall
in
mov
add
inc
push
push
xor
int
stc
lds
adc
call
inc
add
or
mov
jnp
dec
sub
mov
pop
inc
push
rorl
ret
inc
popa
addl
push
mov
mov
add
or
push
je
rcrb
fs
sub
sbb
mov
or
ret
mov
ret
adc
add
push
mov
iret
inc
add
inc
add
lea
add
jmp
icebp
dec
add
sbb
xchg
ret
add
cmp
cmp
add
or
add
add
sub
or
add
pushf
movzwl
inc
lock
fstps
loopne
xor
icebp
push
push
and
lods
mov
ds
sbb
push
es
push
adc
pop
and
sub
pop
inc
add
inc
in
pop
loopne
xor
mov
bound
shl
sahf
jne
out
inc
insb
mov
jge
inc
jl
inc
add
jae
dec
pop
das
pop
popa
rcl
subb
sbb
or
pop
xor
ret
adc
cmp
clc
jl
push
mov
add
shll
mov
pop
iret
dec
mov
les
mov
jl
clc
je
sbb
mov
pop
js
or
xlat
push
push
xlat
jge
add
add
adc
cmp
shrl
sub
mov
cmp
pop
ds
addl
ja
in
mov
xor
negb
jns
add
sbb
sbb
add
dec
enter
pop
out
pop
and
mov
fnsave
sahf
pop
out
ds
cmp
in
xor
jle
push
cmpsb
and
test
sbb
fimull
mov
pop
mov
rorb
ret
or
or
fs
shlb
dec
jbe
mov
pop
fcoms
mov
ret
push
js
fcmovu
loopne
icebp
ds
add
push
or
shrb
lea
push
pop
xor
fnstenv
push
dec
cmp
pusha
bound
add
push
daa
sbb
push
bnd
inc
pop
cmp
adc
pop
ret
lahf
std
loop
pushf
sbb
mov
stos
or
lcall
ret
in
add
sar
push
imul
xor
xor
push
jo
add
jae
gs
or
cmp
enter
js
js
mov
cs
push
push
mov
testb
dec
lock
xor
cmp
sbb
jb
jo
add
sub
inc
push
sbb
fucomi
push
repz
cld
cs
je
jnp
cmp
jae
call
aaa
ret
cmp
les
aas
sbb
add
add
mov
pop
lea
pop
les
insb
popa
push
rcrl
jl
mov
cmp
and
pop
inc
and
mov
jb
cmp
imul
fdivrl
sub
push
sub
sbb
push
cmpsl
push
and
movl
loopne
mov
or
add
addb
xchg
popf
xchg
sub
inc
or
shl
rorb
dec
icebp
cmp
lea
jne
push
push
cld
mov
les
dec
sarl
test
cmpsb
mov
mov
push
push
jnp
loopne
dec
xchg
imul
push
add
mov
movsb
cli
rclb
pop
pop
sahf
call
mov
sbbl
out
movl
pop
pop
ss
sub
ja
mov
add
pop
add
and
mov
sbbb
cmpsb
ror
ret
test
push
repnz
inc
adc
hlt
xchg
outsb
mov
mov
movzbl
xchg
loopne
pop
ja
adc
movsb
rcr
movl
stc
and
or
neg
dec
mov
xchg
sub
push
add
in
lods
mov
add
daa
dec
and
pop
aas
add
adc
clc
pop
ja
and
ret
or
mov
add
jo
cmp
mov
out
dec
and
sub
cmp
pop
or
lahf
xlat
mov
dec
sbb
jg
sarb
insl
jl
mov
enter
mov
push
aad
push
repnz
outsb
xor
cs
mov
je
or
adc
popa
mov
jne,pn
mov
inc
je
or
lea
dec
cs
out
fwait
mov
pop
decl
cmp
or
int
test
jmp
cmpb
stos
mov
test
and
add
or
cli
add
inc
mov
sub
inc
icebp
outsb
or
jmp
inc
and
mov
adcl
mov
mov
pop
test
sarl
sbb
cvttps2pi
cmp
xchg
inc
fiaddl
orb
je
das
icebp
iret
and
mov
mov
inc
dec
adc
jo
push
and
shlb
fdivrs
cmp
gs
cmp
sbb
int3
jl
jb
dec
push
xchg
adc
sub
movsb
imul
xchg
mov
test
ja
add
sub
inc
push
cmp
ljmp
cli
cmpsb
push
mov
cld
push
push
out
sbb
adc
fimull
mov
xchg
mov
cli
and
fsubrl
roll
push
leave
insb
shrb
cli
ljmp
filds
xor
cmp
ja
pushw
shlb
xor
sub
cmp
cld
aaa
out
inc
ja
and
ljmp
cmp
xor
add
int
insb
cmp
cmp
aaa
popf
lods
or
xchg
mov
sahf
add
mov
xchg
mov
mov
aas
xchg
negl
ret
fsubr
push
cwtl
aas
or
aas
xor
and
lcall
or
je
add
stos
jne
aam
xchg
ret
push
test
xchg
push
or
scas
incl
jae
mov
inc
divb
pusha
aas
adc
jo
and
loope
jne
adc
mov
test
dec
call
xor
or
inc
add
sbb
cmc
jne
lret
cmp
adc
out
mov
test
aas
and
test
adc
je
test
cmp
inc
jne
into
sub
jb
lds
xorb
dec
cmp
clc
fwait
leave
inc
and
add
add
inc
fcoml
xchg
push
notb
rcll
cmp
lret
movb
je
scas
jnp
pop
mov
inc
and
mov
and
cmp
add
int
mov
dec
imul
adc
push
push
imul
add
inc
pop
jbe
add
mov
ret
jp
es
jo
ljmp
pop
les
ret
cmp
jecxz
iret
adc
cmpl
mov
lcall
xchg
mov
mov
pop
imul
cmc
sahf
adc
fiadds
push
xchg
adc
sub
ljmp
jl
mov
pop
add
repz
dec
mov
out
cmpl
scas
aam
push
imul
lock
mov
or
push
neg
push
movsb
xor
push
cmp
je
cmpb
and
inc
mov
jbe
pop
inc
fs
dec
out
add
or
and
imul
sub
jo
dec
xor
or
cmp
aam
pop
add
mov
call
sub
push
xchg
imul
add
daa
adcl
fdivr
sub
je
cmp
je
xchg
jae
rcr
daa
jecxz
add
es
dec
cmp
and
imul
and
jae
cmp
pop
jmp
clc
popa
orps
decl
xor
lods
aas
loop
loope
mov
xchg
mov
pop
add
pop
divb
lea
sbb
xchg
or
roll
lock
les
psubb
add
sub
adc
hlt
mov
dec
test
dec
mov
mov
pop
jb
jmp
xchg
test
inc
mov
push
cmp
je
push
rcll
scas
jo
stc
add
inc
or
imul
cmp
loope
cli
out
inc
push
xor
xor
mov
adc
addb
je
into
cli
clc
scas
sbb
pusha
jb
mov
push
jb
js
cmp
xchg
sbb
xor
pop
clc
pushf
cmp
je
lea
mov
popa
mov
mov
dec
mov
sbb
or
mov
xchg
dec
imul
push
ret
scas
lahf
mov
mov
add
push
arpl
adc
jge
or
mov
mov
int
lea
loopne
adc
push
gs
les
jg
subb
dec
js
or
dec
or
push
push
lea
inc
xchg
push
in
jnp
mov
add
repnz
addb
incl
mov
or
xchg
inc
inc
es
push
dec
push
mov
or
add
andl
cmp
or
out
inc
jg
fimull
cmp
and
and
cltd
in
push
sub
pop
or
movsb
add
enter
sti
xor
jnp
cld
testl
mov
or
and
dec
rolb
aam
pop
jbe
sub
inc
inc
fsubrl
imul
test
adc
jne,pt
cwtl
mov
mov
xor
mov
test
pop
aam
push
or
pop
jae
cwtl
cmp
jne
jl
mull
rol
inc
in
jne
popa
repz
push
cmp
mov
add
sub
cmp
jne
or
iretw
rorl
mov
add
inc
mov
ret
adc
cmp
add
push
shrb
mov
or
sarb
inc
jmp
xor
xor
out
add
and
cmp
je
insl
sti
fnstcw
orb
push
inc
inc
inc
jne
insl
sbb
xorb
lret
test
cmp
icebp
bound
push
nop
xlat
pop
push
lods
adc
shll
push
mov
inc
lcall
xor
push
fidivs
sbb
pop
leave
and
sub
mov
in
cmp
jle
push
sahf
and
and
sarl
cltd
das
clc
jmp
pop
jb
push
push
push
xchg
push
and
in
pop
mov
arpl
mov
jmp
lock
cmp
test
sti
aas
je
cmpb
cmp
jne
pusha
sbb
adc
gs
cmp
jecxz
shll
adc
mov
inc
icebp
movb
mov
adc
mov
push
test
jne
les
sbb
loopne
xchg
scas
call
cmp
add
xchg
aaa
shlb
mov
out
stos
out
clc
sub
cmp
or
cs
push
mov
pop
inc
inc
mov
outsb
test
int
mov
sarl
cmp
rorb
jbe
incl
xchg
and
lcall
inc
insb
jne
in
xchg
pop
cli
and
dec
adc
or
ljmp
mov
sub
int3
insb
xchg
fucomi
addl
add
test
les
jne
shr
sbb
mov
and
pop
not
adc
add
and
mov
mov
movsb
mov
mov
subb
cs
lret
movsl
or
xor
cmp
int
jg
or
rorl
and
jo
pop
sub
insl
and
sub
and
and
inc
inc
ja
fcoms
xor
mov
ljmp
lea
inc
fxch
dec
dec
cmp
sub
push
loop
adc
inc
xchg
or
mov
pop
popl
sub
mov
test
xor
xor
pop
cs
xor
cmp
test
mov
dec
adc
cmp
inc
xchg
inc
test
mov
in
xor
sbb
sub
scas
and
lock
cltd
mov
or
push
push
push
orb
inc
mov
fcmovb
xor
push
scas
and
push
pop
lods
cmp
xchg
or
mov
fsubrs
outsl
adc
loop
popf
pop
push
jns
in
push
ds
or
add
repnz
add
mov
and
in
sub
loopne
xchg
pusha
lahf
fwait
out
jno
add
or
imul
adc
push
push
push
fdivrs
mov
inc
lcall
xchg
pushf
mov
cmp
pop
mov
inc
fisttps
pop
inc
sbb
lret
mov
ret
nop
je
push
add
lock
cmpb
dec
mov
scas
loopne
lock
push
push
or
mov
fidivl
jne
cmp
je
mov
add
xlat
xor
sbb
outsb
punpckhwd
pop
push
pop
xchg
stos
cmp
jle
mov
sub
ljmp
xor
mov
fisubrl
dec
pop
sbb
mov
jo
in
xchg
or
dec
ljmp
or
mov
cmpb
push
je
mov
test
mov
lahf
push
enter
iret
xor
pushf
mov
mov
add
sub
pusha
or
push
test
loopne
nop
in
push
xor
and
mov
adc
lds
imul
in
rclb
or
inc
lock
jle
or
ret
loopne
xchg
into
pushf
push
mov
test
sbb
mov
fucomp
mov
push
jne
push
and
dec
cld
les
sbb
sub
aas
movsl
punpcklbw
mov
jb
js
sub
mov
push
sub
shrb
cltd
mov
popf
lods
rcll
ljmp
into
fimull
movsb
pop
jmp
xor
cmp
mov
loop
push
lea
push
popf
and
ror
shl
or
dec
or
jmp
repnz
ljmp
xor
rol
push
ds
pushf
mov
sub
insb
into
xor
hlt
adc
js
xor
js
pop
stos
sbb
aam
jno
es
sbb
and
and
mov
ret
rcl
jge
rolb
add
jne
xor
mov
push
jo
mov
les
mov
mov
ret
adc
sub
out
xchg
or
jo
or
faddl
jno
cmp
jl
xor
pop
xor
popa
andl
in
adc
aaa
push
cmp
jmp
lods
push
push
insl
cmp
or
or
xlat
push
inc
push
push
adc
cmpsb
cmp
or
push
cmp
mov
jo
clc
and
pusha
shll
pop
ret
xor
sbb
add
jmp
pop
mov
bound
push
lret
sub
scas
movl
inc
xchg
mov
xor
push
adc
dec
sbb
xor
ret
jbe
cmp
mov
lcall
xchg
popl
test
sbb
ja
mov
repz
fwait
movl
or
adc
fsubrl
dec
sbb
mov
scas
in
jge
test
or
inc
cmpl
xchg
cwtl
nop
pop
fistps
add
lret
sub
js
orl
rcr
pop
push
into
push
sub
ds
mov
dec
jae
outsl
or
hlt
cli
mov
shl
mov
sub
data16
and
popa
pop
mov
xor
mov
lods
int
pop
outsl
dec
lret
icebp
xor
xor
xor
cmp
mov
jne
dec
or
test
cwtl
sub
or
inc
inc
jnp
or
insb
sbb
lea
fwait
les
cmpsl
hlt
aam
add
clc
mov
hlt
cmp
mov
dec
inc
fdivl
lods
pop
pushf
jg
inc
js
imul
sahf
hlt
jl
rcrb
xchg
pop
bound
dec
shr
jmp
lods
and
sbb
hlt
xchg
and
mov
sbb
push
ljmp
test
sbb
inc
jecxz
in
clc
dec
sub
pushf
xor
jecxz
int
int3
and
loope
mov
push
and
rol
mov
mov
xor
mov
xlat
mov
and
mov
test
enter
or
jg
xor
push
and
mov
in
sbb
mov
inc
cmpsb
adc
mov
inc
push
jle
jmp
or
mov
adc
enter
into
and
fsub
pop
lock
ljmp
iret
sbb
test
pushf
or
add
clc
or
cld
lods
jne
inc
ja
mov
add
mov
xor
mov
mov
leave
addr16
add
enter
pop
cmp
mov
push
aam
sarl
or
fdivrl
xor
mov
cmp
shlb
pop
add
and
je
add
daa
icebp
lock
push
pop
les
lret
cwtl
or
outsb
das
or
ds
adc
pop
jp
adc
push
push
shlb
dec
xchg
aas
mov
inc
jae
add
mov
scas
mov
dec
into
arpl
or
pop
andl
mov
xor
rolb
jl
dec
sbb
or
add
mov
sbb
scas
xchg
out
xor
inc
mov
testl
and
adc
mov
loope
jae
xor
or
jb
or
xor
inc
daa
icebp
sbbb
lods
sbb
mov
and
adc
dec
ds
or
aaa
mov
mov
xor
mov
int3
sahf
in
dec
mov
fnstenv
cmpsl
sub
add
push
iret
int3
pop
xchg
and
cmp
fcoml
dec
and
push
outsb
ret
movsl
or
mov
neg
add
fs
aam
push
addr16
jbe
sbb
dec
or
mov
and
fs
fcmovnu
fldl
or
sete
mov
cmpsl
repnz
aaa
xor
or
pusha
fsubl
xor
push
add
jnp
ficoms
pop
pushf
mov
dec
subb
mov
cltd
jle
pop
push
roll
std
ljmp
mov
mov
je
add
out
ja
cmp
pop
sub
or
movsb
dec
lods
pop
pop
push
into
mov
int3
pushf
out
in
cmp
fwait
ljmp
or
lea
push
fldenv
orl
sub
fdivl
js
pop
int3
lea
inc
mov
pop
add
push
cmp
adc
in
adc
jmp
mov
xor
xor
and
and
push
lret
and
xor
xor
inc
aaa
pop
mov
lcall
and
push
sbb
push
dec
adc
cmpsl
movsb
icebp
jbe
fstpl
push
popf
xchg
jo
push
adc
push
jo
adc
loopne
or
xchg
xor
cltd
ljmp
xchg
movb
sbb
in
std
test
inc
and
push
pop
sbb
sub
into
push
inc
sbb
pop
inc
cld
inc
inc
pop
xchg
add
clc
add
movsb
and
ds
pop
sbb
andl
sbb
push
sbb
pop
adc
xor
stc
clc
mov
push
mov
adc
and
or
sub
cmp
pop
push
sbb
and
push
movsb
ljmp
sbb
xor
adc
pusha
cmp
mov
adc
lcall
jb
insb
lcall
or
adc
or
and
sbb
sbb
pop
xchg
adc
push
xor
pushf
pop
jb
pusha
push
xchg
and
ret
test
or
lret
pop
test
add
cld
cmp
adc
sub
push
das
push
push
push
shll
or
rclb
adc
ds
in
ja
or
ja
fadds
or
push
xor
mov
jne
add
sbb
xor
or
rclb
mov
cmp
push
mov
loope
lcall
fnstenv
aam
push
cmp
rorb
lds
and
loopne
pop
mov
dec
jecxz
in
ja
push
xor
pop
cmp
aas
scas
and
jge
in
cld
xor
cmp
pop
ja
rcr
mov
cmp
push
xor
aam
push
roll
jle
jge
cs
adcl
mov
sbb
jb
cs
and
shll
jl
push
outsb
lods
aam
rorl
push
sbb
sub
sub
push
add
mov
fsubr
sub
and
push
out
sub
mov
out
sub
sub
sub
push
jle
je
mov
mov
jmp
pushf
nop
and
jo
sbb
sub
scas
adc
and
pop
test
popa
mov
pop
jne
gs
dec
mov
push
or
mov
inc
add
cmp
filds
add
in
outsl
ret
out
sub
dec
fsubrl
mov
dec
add
lds
sub
mov
lods
mov
add
idivl
cwtl
sbb
dec
insb
and
sub
mov
add
cmp
cmp
sbb
xor
xor
dec
push
int
sbb
dec
test
push
stos
stos
xlat
add
dec
mov
mov
mov
sbb
shrl
fs
es
push
and
sbb
or
je
fdivl
cmp
insl
pop
push
jl
inc
dec
mov
mul
push
sbb
push
add
mov
dec
pop
xor
or
xor
and
mov
cmp
popa
add
cmpsb
sub
add
aaa
fidivs
sbb
or
fcos
pop
adc
imul
inc
fs
push
inc
adc
add
cmp
inc
adc
mov
sbb
cs
mov
and
lea
xchg
jle
mov
cmpb
mov
test
test
jle
adc
sub
clc
cmp
cmp
sbb
out
jecxz
repnz
jmp
push
and
int
mov
sbb
or
sub
fs
adc
cmp
sub
mov
jp
pushf
hlt
cmp
add
loopne
xchg
test
mov
and
sahf
test
ret
and
pop
and
in
es
add
adc
lret
in
inc
pop
aas
push
add
mov
or
and
inc
xchg
inc
dec
push
cmp
fidivrs
add
je
mov
fbld
jnp
mov
shll
push
hlt
add
clc
je
or
int3
mov
push
mov
pop
inc
aad
arpl
xor
pop
pop
adc
movsb
adc
test
pop
inc
int
shr
in
cmp
repnz
lods
add
xchg
or
add
cmp
push
xchg
sbb
andl
push
outsl
popf
stos
add
pop
or
orb
push
push
mov
pop
subl
imul
addl
and
adc
jo
pop
popa
push
pop
movsl
movsl
hlt
dec
adc
xchg
mov
stc
xorl
pusha
inc
loopne
sti
loopne
jnp
sbb
adc
pop
repnz
nop
sbb
or
mov
sub
sub
dec
push
or
mov
or
or
sahf
scas
add
dec
xor
gs
js
bound
loope
cmp
lea
inc
loopne
sbb
rol
add
lock
sbb
imul
push
push
xor
and
or
and
mov
xchg
pop
sub
aad
dec
or
insb
mov
or
add
and
and
add
pop
push
push
push
mov
mov
jecxz
push
fwait
jb
pop
dec
or
jge
push
sub
or
xchg
jo
add
bound
daa
push
inc
mov
and
inc
arpl
or
add
push
in
adc
dec
outsb
ljmp
int
pop
push
jns
or
in
pushf
out
repz
adc
add
sub
cmp
leave
xor
xor
cmp
xor
and
imul
pop
mov
in
push
sahf
mov
mov
cmp
xorl
sub
addl
push
cmp
xchg
idivl
rcll
adc
or
xor
pop
or
add
adc
add
in
dec
sarb
add
call
pop
xor
adc
sub
inc
mov
adc
dec
push
pop
imul
scas
aam
cmc
inc
test
mov
lahf
cs
outsl
pop
jne
cmpsl
sbb
xor
or
sub
xor
or
loop
and
and
lcall
repnz
dec
xor
adc
add
test
mov
in
cs
pop
aad
ret
pop
and
clc
push
popf
or
cwtl
mov
lock
inc
sbb
rcr
xchg
lock
inc
mov
adc
int
jge
jmp
je
clc
stos
lds
cmp
xchg
or
pop
mov
push
fcmovbe
or
sub
mov
xchg
or
pop
and
add
pushf
mov
mov
or
push
lea
ror
lea
pop
cld
cmpl
inc
mov
adc
xor
rcr
push
mov
add
mov
clc
stos
fucomi
das
lea
mov
sarb
inc
or
dec
call
lock
loope
jge
js
cmp
je
decb
pusha
and
or
and
sbb
or
or
adc
inc
dec
jge
cmp
orb
push
push
add
add
xlat
adc
or
and
hlt
adc
bound
daa
icebp
add
mov
pop
inc
movsl
dec
xor
and
jnp
lret
sub
sub
in
sbb
test
or
je
sbb
aam
inc
out
push
sub
add
push
mov
jo
mov
xorb
mov
pop
pop
loopne
pushf
xchg
stos
movsl
push
std
push
mov
shll
and
stc
cmp
out
adc
sub
push
add
cmc
add
scas
icebp
adcb
push
sbb
inc
sub
add
pop
and
outsl
and
scas
xchg
add
push
or
xchg
dec
and
add
pop
xor
clc
pushf
push
xchg
or
pop
mov
mov
cmp
adc
loopne
enter
in
mov
inc
jno
loopne
pusha
leave
adc
mov
sbb
adcb
pop
es
pop
mov
fsubrs
jge
gs
aad
mov
in
enter
push
sub
xor
cmp
aas
cmp
in
cmp
pop
inc
adc
or
dec
call
push
push
jmp
xor
notl
mov
mov
or
xchg
loope
cmpsl
fdivs
inc
aas
xor
adc
mov
mov
or
add
mov
dec
add
xor
mov
jle
movsb
add
roll
aam
ret
pusha
xor
mov
xor
or
outsl
sbb
mov
sbb
add
mov
inc
or
xchg
bound
call
mov
mov
cmpl
sbb
push
addr16
xchg
cmpb
in
ret
fistps
mov
add
add
jecxz
movsb
push
xchg
cmp
pop
cmp
ret
lods
daa
pop
adcb
lahf
daa
add
add
jo
lds
out
mov
jg
adc
fs
push
jae
dec
dec
scas
stc
dec
and
test
pop
sti
rolb
add
or
in
pop
dec
das
or
mov
out
or
adc
push
rcr
xchg
mov
push
adc
or
icebp
push
stos
test
push
jge
cmp
cmp
mov
dec
inc
and
mov
add
jmp
daa
adc
mov
adc
sbb
in
mov
dec
cmp
xchg
mov
push
lea
je
xchg
pop
aam
mov
sbb
add
daa
inc
out
pop
stos
andl
popf
imul
or
rclb
popl
es
xor
dec
adc
mov
inc
cmp
dec
fbstp
scas
adc
inc
cmp
or
push
sub
cs
xchg
insl
adc
enter
add
push
or
sbb
add
aam
push
cmpsb
or
pushl
xor
sbb
xchg
or
in
mov
pop
movsl
les
movb
mov
cmpsl
je
xchg
adc
push
push
xor
xchg
pop
icebp
add
lret
fisubrs
sub
xor
sub
insl
mov
push
pop
mov
rorl
push
fildl
addl
ret
faddl
clc
mov
cmp
jbe
cmp
xchg
or
sbb
in
xor
loop
call
push
stc
mov
inc
mov
cmp
bound
push
pushf
push
add
push
push
flds
mov
add
jb
mov
les
dec
add
and
imul
enter
jo
sub
inc
enter
add
and
or
sbbl
lea
lea
mov
cld
lea
push
adc
jle
les
or
inc
xchg
push
or
cmc
dec
xor
pop
add
jecxz
sbbl
fstl
enter
xor
dec
into
es
mov
sbb
mov
ds
mov
fdivrs
jl
cwtl
mov
pop
mov
aad
xor
loopne
je
sub
pop
xlat
insb
mov
inc
jl
sahf
lods
daa
lret
mov
and
push
pusha
xor
pop
sbb
aaa
in
sbb
xchg
or
push
push
test
mov
lock
ret
por
rclb
fdivp
xchg
ljmp
incl
push
lea
push
inc
push
arpl
dec
pushf
add
lods
dec
cmp
add
insb
daa
sbbb
add
fadds
inc
cmp
mov
test
jne
push
or
fsubs
mov
dec
stos
push
pusha
mov
jbe
pop
test
jge
inc
dec
add
cmp
xchg
mov
xchg
pop
pop
mov
cmp
jae
movzwl
add
mov
add
roll
gs
cli
push
add
sub
pop
push
mov
pushl
jno
mov
fbld
adc
mov
pop
push
lods
push
push
jmp
add
pop
lea
mov
mov
adc
push
dec
cmp
adc
cmp
ret
cld
xlat
lret
flds
adc
cmpsl
cmp
cmp
fistl
mov
sub
cmp
lods
cmp
out
inc
or
sub
ljmp
mov
sub
add
insl
ja
into
jecxz
jo
jbe
jge
aam
xchg
cmpsl
mov
pop
cs
or
adc
fcmove
scas
mov
lods
jno
repnz
dec
dec
pop
jl
test
lods
mov
lea
adc
lods
inc
sub
popa
add
dec
adc
les
pop
pop
or
lcall
ljmp
shlb
jecxz
les
add
dec
pop
mov
jp
add
or
push
push
test
outsb
cmp
adc
int
clc
push
leave
push
ss
repnz
jge
out
in
mov
roll
lcall
push
inc
dec
adc
mov
mov
and
and
lret
or
pop
faddl
je
mov
dec
in
mov
xor
xor
and
movsb
lock
sub
pop
lock
call
and
jb
dec
cli
out
adc
cmpl
test
push
imul
notb
jne
mov
push
lea
jl
cmc
mov
and
or
or
push
cmp
test
lret
call
mov
movsb
add
inc
push
daa
push
cmp
popa
sub
cltd
dec
shlb
push
popf
ljmp
xor
fildl
in
mov
dec
dec
mov
dec
or
call
push
out
sbb
add
push
iret
pop
fmul
push
jp
fabs
bound
in
loopne
add
xchg
test
sbb
das
adc
add
dec
enter
adc
insl
cmc
stc
outsb
in
cmpsl
loope
mov
mov
je
cmp
call
adc
mov
lcall
orb
or
aad
or
lock
sbb
enter
cmp
mov
pop
ret
sub
jmp
add
test
or
jl
stc
or
inc
pop
fadds
popa
inc
mov
pop
add
jae
jne
mov
push
subb
and
aas
inc
mov
test
xor
clc
or
push
cmp
jge
push
pusha
jle
mov
push
dec
loope
jo
repz
decb
fidivrs
pop
clc
jg
mov
xor
sbb
push
fcom
cmpsb
and
cli
mov
and
push
add
sarb
adc
mov
add
push
fistl
pop
inc
cmp
sub
mov
lret
jae
xor
adc
ja
stos
insl
and
push
cmpsb
add
stos
out
jmp
jno
push
mov
or
int3
bound
and
pop
mov
jmp
psrad
adc
inc
xchg
decl
sbb
lock
and
inc
inc
inc
mov
cmp
inc
loopne,pn
shll
int
push
lods
add
aas
and
pop
inc
push
mov
dec
in
dec
pop
push
iret
pop
pop
pusha
rclb
adc
or
add
mov
xor
sub
jae
xchg
adc
addb
adc
aas
mul
sarb
and
cmp
cmp
mov
es
sub
inc
sbb
and
testb
decb
dec
pusha
pop
cmp
sbb
add
out
mov
fiadds
out
decb
adc
add
lds
insl
push
or
add
xor
mov
sbb
aaa
mov
pop
cmp
stc
lret
jmp
jle
push
push
negb
inc
adc
xorb
scas
dec
addr16
arpl
xchg
cld
jns
outsb
ja
dec
movlps
mov
arpl
stos
cmp
enter
jo
fidivrs
adc
xor
jp
cmp
cmp
adc
out
cwtl
scas
pop
call
add
test
push
lods
push
fnstcw
jle
or
ret
pop
movzwl
jb
leave
or
push
sub
dec
add
jmp
arpl
call
add
lret
push
lock
sahf
push
cmp
sar
dec
push
add
cli
dec
shrb
or
mov
cmpsb
arpl
gs
jmp
adc
lods
adc
xor
sub
sti
add
sub
aam
and
push
push
fiadds
cmp
dec
lock
push
mov
push
ds
and
add
and
ds
dec
sub
or
adc
std
cmp
cmc
sub
sar
inc
lea
sbb
and
lea
push
push
ja
out
mov
adc
push
mov
stos
cli
clc
pusha
leave
dec
cli
jle
inc
and
push
xchg
adc
jbe
pusha
js
sub
cmp
mov
mov
or
pop
mov
repnz
cmp
jb
sahf
sub
push
adc
data16
je
add
icebp
and
dec
xchg
data16
add
lods
aaa
xchg
es
loop
sub
xor
lds
mov
xchg
pop
adc
sbbl
sbb
mov
sbb
incl
xor
js
jge
je
push
dec
popcnt
inc
aam
push
rolb
jmp
inc
mov
insl
jge
adc
roll
mov
mov
loopne
movsb
lcall
lea
or
je
scas
call
inc
jle
adc
sbb
test
and
mov
jp
dec
adc
push
push
sub
fists
pop
mov
cld
jne
inc
push
mov
out
push
sub
push
gs
loopne
mov
inc
push
lea
aaa
int
lods
lock
jne
adc
dec
fs
outsl
loop
les
push
sub
cmpsb
adc
jbe
mov
and
mov
scas
cmp
pop
inc
or
in
adc
ficomps
mov
jle
enter
add
stc
test
je
pop
sbb
jecxz
jmp
push
xor
jg
cmp
adc
lods
jmp
sub
jl
ljmp
push
mov
add
out
inc
hlt
add
or
push
cmpb
lods
and
or
jp
or
mov
push
sub
or
sub
push
cwtl
imul
push
push
or
mov
jmp
push
or
imul
dec
sub
ss
loop
pop
push
call
fbld
cmp
cmp
in
push
xor
fidivrs
shl
cwtl
scas
adc
dec
jno
pop
mov
loop
add
adc
adc
mov
or
lods
mov
push
xor
pushf
jno
int3
cmpsb
es
or
add
scas
xchg
fsubrs
outsb
sbb
cmp
fxch
add
or
sbb
mov
pop
xor
nop
inc
lcall
mov
push
fcoms
lds
test
sub
lods
or
in
je
xor
scas
loop
sub
cwtl
sub
jmp
pop
mov
xchg
sub
int3
addb
pop
lret
jno
in
mov
mov
mov
ret
and
jge
mov
jp
in
int
push
aam
and
dec
fdivrs
notb
pusha
idivl
pop
add
mov
ja
lea
shrb
add
sarb
loop
sub
push
test
es
int3
jb
push
loopne
adc
dec
jp
pop
push
inc
mov
lret
insl
testl
or
push
jmp
jmp
ret
or
std
aam
add
or
scas
xchg
xor
insl
aam
add
add
jo
jne
mov
push
inc
clc
push
add
mov
mov
jg
mov
push
mov
dec
fcompl
or
out
mov
outsb
out
popa
hlt
andl
adc
sub
or
jae
scas
lock
jne
mov
mov
and
dec
and
xor
in
xor
aas
and
mov
adc
mov
shl
add
arpl
inc
add
mov
xchg
pushf
or
jbe
pop
js
or
xchg
xor
mov
out
popa
or
mov
or
mul
seto
neg
or
or
adc
and
sahf
sahf
push
mov
cmp
int
push
daa
je
or
arpl
adc
jg
fildl
cld
or
fadds
or
jl
add
dec
imul
sub
push
iret
enter
sub
pop
mov
test
orb
push
cmp
hlt
ja
xor
or
push
je
shll
dec
dec
push
inc
push
add
inc
add
test
cmp
mov
decl
sbb
cmp
jae
xorb
sarl
gs
sub
or
imul
sbb
dec
jecxz
jg
ret
lahf
ret
lods
loop
adc
decl
jbe
mov
mov
add
cwtl
xchg
mov
sbb
add
outsl
xor
addl
or
cmp
mov
push
push
add
adc
jge
mov
mov
enter
test
sbb
sbb
cmp
cs
add
mov
pop
mov
add
and
es
or
jg
push
add
ret
cli
jns
mov
adc
jo
pop
paddusw
pusha
push
push
cmp
outsb
cmp
movsb
ret
push
add
fistps
nop
iret
and
sub
ret
rclb
gs
hlt
lcall
mov
mov
sahf
scas
push
fstps
or
and
add
adc
and
add
movl
sub
xlat
dec
shr
xchg
das
inc
fcompl
stos
jne
push
or
cld
fiadds
lcall
adc
mov
popf
rcrb
xor
and
jl
inc
mov
mov
push
adc
int
es
sbb
aad
and
push
pop
clc
xor
fmull
push
push
insl
jecxz
into
repz
rolb
shl
mov
sub
push
jns
imull
daa
or
add
mov
es
mov
pop
push
xor
lea
push
pop
push
or
pop
lahf
xlat
lock
xor
loop
push
stc
xor
shl
xchg
jb
andl
test
shll
addb
mov
es
movsb
pop
subl
jno
or
popf
js
or
popf
xchg
mov
pop
mov
xchg
cli
rolb
call
out
or
dec
inc
sub
inc
les
dec
fldenv
cwtl
mov
int
leave
cld
mov
mov
lea
cmp
je
test
in
stc
push
push
testl
xchg
sub
rclb
pop
in
inc
hlt
push
push
rcrl
fwait
push
jbe
roll
mov
mov
push
shrb
test
nop
inc
hlt
lcall
outsl
inc
jo
lea
sub
hlt
or
pushf
mov
test
dec
xchg
cmp
bound
xor
popa
add
aaa
cmp
ss
sbb
xchg
cld
adc
dec
xchg
and
sar
push
xchg
and
pop
dec
fidivl
leave
std
sbb
inc
xchg
cmp
gs
xchg
loopne
mov
xor
and
push
adc
dec
push
lcall
jne
sub
pop
push
fists
sub
pop
pop
push
aaa
sub
add
movsl
jbe
xchg
adc
jb
mov
adc
adc
push
push
fisubl
lods
add
push
cwtl
imul
mov
or
nop
cmp
fldt
add
xchg
or
out
in
aam
sahf
testb
adc
sub
xchg
mov
mulb
outsl
inc
or
push
mov
mov
cmp
xchg
test
mov
pop
sub
ss
sub
sub
je
pop
jnp
or
pop
or
pushf
push
cli
inc
adc
cmc
aad
cmp
jne
cmp
call
in
push
or
cmp
je
inc
add
add
icebp
xorl
mov
ds
aam
pop
sbb
xor
adc
xor
sbb
into
xchg
cs
or
or
and
xchg
jo
dec
sub
pop
ret
pop
xchg
ficompl
jbe
xchg
or
cmp
and
xchg
lds
add
mov
lods
add
popf
inc
testb
xor
js
inc
rcrb
cmp
jae
dec
sbb
dec
ret
inc
add
sub
and
jne
sbb
pop
add
push
adc
call
and
pop
insl
jne
or
cli
push
lds
testb
mov
inc
pop
xchg
or
ljmp
xchg
lret
inc
je
daa
xchg
jp
fsubl
ljmp
push
or
sbb
xchg
cmc
daa
loope
mov
mov
xchg
add
push
push
adc
or
or
jne
push
mov
loope
pop
imul
cmp
and
pushf
jb
dec
mov
and
rcll
xor
repz
scas
adc
xchg
dec
lea
mov
stc
outsb
dec
xor
cmp
mov
stc
pop
mov
mov
lcall
inc
mov
aad
push
fsubs
lea
sub
dec
sub
aam
adc
inc
mov
adc
adc
sub
push
adc
push
adc
add
pop
or
test
xchg
and
ret
mov
mov
movl
mov
adc
pop
in
lea
arpl
and
cld
pop
imul
sarb
sub
adc
loopne
or
add
xchg
int
loope
xor
xor
jl
mov
jne
add
add
push
adc
insl
pop
call
ds
divl
lea
add
shr
and
popf
fwait
jmp
lea
or
push
mov
sub
pop
add
sub
mov
sbb
push
flds
inc
adc
and
cmp
lock
clc
fimull
cmp
ljmp
in
inc
pop
mov
or
add
or
sbb
pop
call
xor
jne
lcall
fstps
dec
adc
add
add
les
add
xchg
ret
push
and
push
setne
push
mov
or
mov
push
jne
mov
cmp
push
imul
insl
mov
dec
fldl
mov
ja
lock
push
mov
stc
or
pop
pop
fdivs
pushf
push
mov
jg
pop
cltd
push
dec
ljmp
jne
mov
fidivs
out
adc
fnstsw
xor
or
push
sub
xor
loopne
stos
rolb
xor
inc
pop
pop
or
inc
pusha
cmp
test
jno
add
jo
clc
and
out
fnstcw
cmp
lock
aas
int3
aaa
mov
mov
mov
inc
cmpsb
and
pop
mov
jns
push
jge
test
inc
clc
mov
dec
in
jle
sbb
sbb
inc
cs
fisttpl
cmp
mov
dec
sub
jns
xchg
xchg
inc
into
je
jge
orl
jle
add
or
mov
outsb
pop
mov
lea
fidivrs
test
sbb
pop
jl
loopne
push
adc
push
push
push
std
push
sbb
dec
and
or
inc
adc
test
adc
sti
add
iret
jl
jmp
es
lea
jmp
add
loope
mov
enter
push
mov
mov
mov
or
jno
mov
mov
orl
mov
xchg
add
jb
out
mov
sbb
cmp
ja
aas
inc
ret
pop
or
inc
es
mov
push
mov
mov
xorb
aaa
adc
loope
mov
push
xor
sbb
cmpl
repnz
adc
xor
and
sahf
pop
and
test
adc
or
filds
add
mov
jp
xlat
cli
add
push
popf
push
mov
jmp
jno
sbb
in
inc
lods
mov
rcrl
jb
and
mov
sub
lea
enter
pop
xchg
and
sub
je
pop
sar
push
push
mov
ja
inc
orl
repz
pushf
push
push
pop
mov
push
dec
xchg
imul
mov
pop
jg
add
cmp
std
or
mov
jb
jae
push
push
xchg
ret
je
mov
or
xor
cmp
cmp
or
inc
mov
pushf
xor
and
andl
jle
mov
jae
cmpb
add
sbb
dec
sbb
in
lahf
sub
xor
inc
pop
imul
sub
imul
jmp
dec
and
sbb
pop
pop
aas
push
fcoms
lods
int3
je
inc
inc
popa
xor
xor
das
add
xor
fs
sbb
adcl
xlat
pusha
add
add
fsubs
sbb
cmp
sub
xchg
sbb
xlat
into
leave
outsb
imul
in
fsubl
out
movb
rorl
inc
mov
fdivrs
dec
testl
iret
jge
pop
inc
nopl
incl
jbe
lea
jmp
pop
or
pop
sbb
shrb
jmp
add
subb
aaa
inc
mull
rcr
sbb
jae
xor
loopne
xchg
in
xchg
test
ret
mov
rclb
hlt
ffree
addb
mov
dec
pushf
sub
lea
fcoms
insl
sub
sbb
xor
and
add
out
jge
mov
inc
loopne
cmp
decb
sbb
cwtl
inc
and
dec
push
js
pusha
cmp
mov
loopne
jae
dec
cmp
test
sbb
push
xchg
imul
call
js
add
jl
pop
sarb
cmp
call
xor
adc
shlb
push
sub
mov
mov
ret
jo
push
out
mov
xor
push
or
push
mov
xchg
jl
bound
fadd
sub
xor
mov
rol
jb
rcr
enter
movsl
mov
mov
in
inc
sub
and
mov
rclb
sub
sbb
out
inc
enter
add
jmp
push
and
sbb
mov
scas
enter
mov
test
xchg
pop
pop
rcll
add
or
ret
adc
inc
int
inc
mov
test
jp
sub
jne
mov
jns
jae
mov
xor
xchg
jno
pushf
test
push
mov
dec
in
popa
lods
push
xchg
xor
pusha
dec
into
pop
cmp
xor
adc
and
rorb
gs
aad
sahf
andb
xor
gs
mov
andb
inc
pop
or
add
xchg
adc
repnz
and
sbb
push
push
sarb
jmp
sbb
sti
push
int
xor
lahf
loope
das
mov
push
sahf
or
dec
shrb
mov
int3
push
pushf
dec
mov
inc
mov
loope
and
or
clc
ja
das
pop
pop
je
push
xchg
inc
lahf
fldenv
pop
dec
mov
and
loopne
xchg
push
push
mov
push
fsubrs
jge
dec
or
add
and
ret
mov
push
pop
sub
pop
mov
mov
fwait
ret
xchg
or
xor
inc
mov
cmp
jb
push
ficoms
mov
fcomip
add
sub
push
mov
dec
leave
shlb
jnp
push
fsts
je
add
mov
testl
mov
flds
sbb
and
dec
inc
je
pop
and
pop
mov
xor
lock
andl
addl
repnz
fidivrs
push
push
add
and
jbe
push
cld
insb
in
outsl
std
jmp
mov
cmp
sub
push
add
mov
insb
push
cltd
loope
or
push
fcoml
pop
enter
fadd
or
rorb
fnstenv
inc
js
jb
mov
test
ret
jecxz
adc
add
fnstsw
js
or
mov
add
mov
sub
call
bound
inc
cmp
jae
mov
jb
orl
add
ljmp
flds
inc
mov
decl
ret
repnz
jae
lea
push
cmpb
jne
cmpb
lcall
add
sarb
lock
ljmp
neg
sbb
and
outsl
and
dec
sbb
out
pushf
sbb
inc
ja
or
cmp
or
adc
cmp
fldcw
sub
add
push
adc
cli
fmull
fiaddl
out
and
cmp
pop
repnz
test
in
lods
sub
sub
js
fsubrs
xchg
testl
pop
and
adc
rcrl
imul
mov
dec
jmp
xor
jmp
jmp
inc
adc
stos
jbe
mov
push
cs
ljmp
rcll
sub
mov
inc
adc
outsb
andb
ds
adc
cmp
sbb
push
mov
inc
pusha
pushf
out
ret
fsubr
insl
pop
mov
and
pop
inc
test
icebp
lods
pop
push
mov
jecxz
negb
adc
xchg
in
gs
into
cmpw
mov
add
xchg
test
cld
ret
fisttps
test
rol
sub
into
fcoms
mov
cmp
sub
xlat
or
mov
jb
dec
mov
jne
or
test
jmp
mov
pop
inc
mov
aas
movb
outsl
dec
jmp
aas
mov
cld
cmp
jmp
or
and
call
aaa
sahf
lods
std
inc
jb
push
jae
jo
sub
arpl
mov
xor
adc
pop
push
mov
add
leave
ja
insb
push
lea
imul
ret
lods
jl
cmpl
testb
xchg
mov
or
mov
adc
sbb
rolb
push
fcmovne
jnp
test
lock
je
or
inc
jmp
push
sbb
xor
out
rolb
add
mov
mov
push
mov
test
push
lock
add
cmc
add
jb
sub
mov
xchg
xchg
pushf
jl
pop
push
lea
jno
add
mov
in
lea
push
push
mov
mov
and
insb
jnp
inc
lea
xor
js
jge
push
loop
sub
add
rcll
push
add
push
mov
jge
mov
push
orb
and
push
cwtl
or
adc
imul
push
sbb
adc
repnz
lea
jmp
loope
addb
xchg
pop
test
mov
testb
pop
push
inc
jge
mov
mov
pop
je
push
mov
or
jne
jne
add
or
jl
in
cmp
test
mov
or
lret
inc
sbb
mov
and
push
outsl
loop
xchg
sbb
aaa
sub
jg
push
pop
pop
jno
and
adc
xchg
aam
jb
inc
loopne
lcall
hlt
and
add
cld
inc
je
adc
dec
jb
sbb
lds
jge
xor
movsl
aaa
mov
xchg
rolb
dec
loope
add
mov
sub
jl
loop
and
jl
pop
push
pop
xor
add
cmp
jl
sbb
or
or
out
lock
ljmp
aas
adc
shlb
and
hlt
mov
in
into
shlb
adc
cld
xchg
push
stos
mov
adc
cmp
push
out
dec
lret
mov
adc
es
mov
or
or
sbb
shlb
lcall
xor
xor
mov
dec
movsl
ds
lods
push
push
mov
loop
imul
idivl
daa
dec
popa
cmpsl
adc
sbb
fiadds
lcall
je
xorl
cmp
fidivs
icebp
mov
in
jle
mov
mov
push
mov
call
outsl
or
push
or
or
jno
rol
mov
xchg
and
or
and
jle
pop
push
inc
jne
cmp
mov
add
adc
dec
jmp
cltd
mov
fidivl
cmp
dec
inc
or
stos
test
test
xor
inc
ds
cmp
pop
pushf
mov
mov
mov
arpl
ret
push
imul
dec
lods
clc
add
pop
jbe
mov
movsl
add
ja
or
je
mov
mov
insb
or
mov
ret
adc
pop
insl
insb
insb
lcall
js
or
sbb
jbe
push
or
lahf
xor
or
jmp
mov
dec
mov
movsl
cmp
jb
ret
or
mov
rclb
cwtl
xchg
push
cs
loop
cli
xchg
push
mov
hlt
js
ficoms
jg
out
sub
push
ss
jmp
shl
popa
adc
push
stos
sbb
adc
dec
adc
adc
mov
push
or
push
cltd
xorb
add
cmp
xchg
mov
cwtl
mov
push
cmp
cmp
inc
loop
sbb
or
pop
cwtl
add
popa
jge
push
mov
dec
sub
add
test
dec
pop
and
xlat
xor
jae
mov
lods
push
push
xchg
or
inc
imul
push
lret
adc
aad
xor
cmp
sub
inc
jg
and
sub
sub
imul
shr
mul
push
daa
push
sbb
mov
push
sbb
xchg
mov
shr
mov
lods
dec
jmp
add
add
push
mov
lea
das
cmp
push
aas
add
add
imul
add
adc
cld
add
sbb
push
and
adc
dec
or
ja
lcall
outsl
inc
sti
lret
mov
add
rclb
lret
jns
xor
sar
dec
les
or
addb
cmp
pop
mov
pop
and
das
cmpsl
sub
pop
sbb
subl
outsb
clc
outsl
pop
push
jl,pt
push
jg
cmpb
jne
inc
inc
xor
dec
or
pop
and
jne
cmpsb
cmp
js
loopne
aam
push
sbb
sub
and
dec
push
sbb
daa
pop
sub
fisttpl
lds
sub
iret
mov
sub
or
in
add
cmpsl
push
xchg
jmp
stc
jo
mov
adc
or
mov
sbb
jno
dec
fsubp
add
push
mov
push
clc
sub
dec
xor
mov
xchg
lret
inc
fld
bound
roll
vpsrld
sbb
mov
inc
test
xchg
cmpsl
add
or
int
fldl
and
cmp
es
aas
lods
or
mov
std
test
loope
fimuls
mov
push
call
and
add
iret
pop
jmp
inc
cmp
rorb
sub
and
mov
jl
add
push
das
sbb
inc
mov
orl
push
sub
xor
xor
leave
add
mov
push
sbb
incb
pop
push
xchg
sub
mov
addl
loopne
add
mov
add
mov
push
dec
loopne
jne
cmpsb
lock
stc
pop
enter
daa
push
fisubrs
daa
cmp
xor
shrb
clc
cwtl
mov
loope
push
sub
xchg
push
add
sub
jmp
lock
pushf
dec
dec
dec
push
sub
sub
pusha
test
adc
sub
sbb
imul
imul
js
push
mov
pop
push
pop
xor
movsl
iret
lahf
or
or
cmc
pop
xchg
and
pop
xchg
ds
test
jae
pop
dec
in
mov
cwtl
test
fsubrs
xchg
adc
inc
xlat
pop
cmp
inc
iret
cmp
jne
stos
xor
cmpl
mov
push
std
loop
push
add
or
and
mov
lock
sahf
sub
pop
push
jmp
in
inc
or
xor
cmp
push
cmp
sbb
push
sub
fistpl
addb
mov
arpl
clc
mov
sbb
in
imul
dec
faddl
loopne
sbb
insl
and
sub
add
mov
adc
and
popf
dec
sahf
sub
adc
arpl
nop
or
movsb
sbb
sbb
nop
pop
or
sub
ja
pop
cmp
mov
adc
dec
jmp
ret
pusha
pop
es
xchg
and
imul
push
xor
dec
mov
jmp
mov
jle
lods
or
lock
lods
mov
cmpb
mov
mov
jne
imulb
stos
xchg
js
jae
sbb
push
dec
push
orb
insl
dec
sub
add
xchg
in
nop
fbld
fwait
jo
fnsaves
in
cmpsl
inc
adc
push
sub
adc
dec
add
and
adc
or
add
jl
xlat
fistps
cld
cli
call
adc
and
pop
push
add
or
add
shrb
inc
add
lea
jl
mov
adc
push
add
xchg
mov
adc
add
xlat
lock
leave
andl
mov
pop
sti
mov
lret
pusha
add
outsl
push
fs
int
nop
sub
xchg
cmp
into
sbb
jno
xchg
sub
add
push
xchg
add
dec
push
cmp
xlat
xor
addl
inc
sbb
add
mov
xorb
adc
inc
test
cmp
and
movsl
or
push
insl
push
or
mov
sahf
xor
cmc
lsl
push
mov
cmp
dec
ss
pop
mov
fnstsw
add
pop
cmp
and
mov
push
bound
mov
dec
add
sbb
and
inc
sbbl
les
add
jo
movsl
cld
xchg
and
add
js
movups
push
push
pop
pop
ret
js
xchg
sub
adc
fistl
xor
fisubrl
xor
sarb
mov
fwait
xor
push
or
enter
adc
add
in
and
pop
lret
xchg
test
or
mov
fwait
inc
enter
ds
and
adc
sub
bound
sub
sub
rcrl
dec
imul
adc
sarl
mov
rcll
mov
leave
mov
inc
inc
mov
or
push
push
sbb
push
adc
mov
jg
das
mov
flds
push
dec
adc
stos
mov
imul
popa
mov
and
ficomps
sbb
or
orl
pop
adc
test
pop
dec
shrb
rclb
add
imul
pusha
sbb
jo
hlt
stos
imul
pop
adc
mov
push
scas
jge
mov
push
adc
mov
jnp
sbb
test
repz
mov
iret
sbb
fmuls
fistpll
fld
mov
pop
dec
arpl
je
shrb
mov
push
inc
cmpl
sarl
push
xorb
stos
pop
mov
sbb
mov
mov
jmp
or
icebp
sub
mov
push
add
xchg
adc
pop
int
push
and
adc
mov
clc
mov
pop
lcall
xlat
xor
mov
mov
inc
dec
jge
xchg
xchg
cmp
loopne
xor
xchg
daa
enter
mov
imul
imul
fldl
push
push
pusha
test
imul
inc
push
inc
stc
int3
sbb
loop
xor
push
or
jns
dec
leave
lret
sbb
jp
stc
mov
test
sbb
int3
and
inc
in
ss
pop
ret
sahf
js
pop
sbb
xchg
push
push
adc
rol
adc
or
daa
mov
and
into
test
push
loope
mov
les
ret
fwait
insb
scas
adc
xor
test
adc
lahf
movb
int
add
xchg
jne
xchg
xchg
int3
or
or
cld
adc
cmp
push
adc
lret
aad
cmp
and
movsl
hlt
test
adc
jo
mov
xchg
cwtl
nop
out
sbb
repz
adcb
repz
cwtl
adc
sbbb
mov
add
adc
ret
adc
adc
push
test
test
addl
pop
jl
push
add
add
jge
and
hlt
jne
cmp
mov
aas
push
sbb
gs
and
cmp
shlb
jecxz
ret
push
push
jo
and
sub
and
add
adc
xor
pop
cmp
mov
jl
push
les
xchg
test
mov
xor
mov
ljmp
les
and
add
cmp
push
add
and
ljmp
push
fstl
je
flds
push
sub
movsb
inc
or
in
sub
dec
pop
stos
ret
pop
add
sbb
xchg
xchg
in
lcall
nop
inc
xor
and
loop
addl
add
adc
add
add
aad
pushf
lret
push
repz
ja
loope
mov
sbbl
and
sub
sarl
push
sbb
dec
push
and
je
das
loopne
push
push
das
inc
mov
cs
cmp
hlt
mov
je
imul
data16
dec
mov
xor
cld
push
pop
xchg
sub
mov
jne
cmpsb
sub
sahf
pop
imull
mov
mov
cmp
in
dec
and
std
xor
add
lock
sub
jmp
aas
ret
jns
lret
xor
push
ja
mov
and
add
adc
stc
fmuls
push
dec
and
insb
push
movsb
in
mov
test
push
sub
and
lods
or
leave
or
lcall
and
xor
xchg
insl
bound
cmp
lock
add
sbb
ljmp
inc
or
gs
xchg
adc
fcmovnb
sbbl
js
push
loopne
and
add
jl
cmpb
mov
add
into
xor
imul
fwait
mov
inc
cwtl
mov
mov
pop
push
xchg
mov
add
cmp
lods
fs
pop
or
fwait
push
dec
daa
push
or
xchg
aas
and
lcall
mov
mov
data16
inc
loope
adc
jl
adc
je
push
lods
adc
cli
or
and
test
lret
rorb
push
dec
pop
cmp
lcall
inc
movb
xor
or
and
and
subl
adc
pusha
adc
cs
scas
lcall
dec
and
xor
sub
les
sub
sbb
inc
pop
lods
dec
sbb
add
cwtl
imul
mov
mov
cmpsb
icebp
testb
sub
mov
aam
and
or
inc
sub
jne
imul
add
gs
lock
cmp
jae
mov
xorl
rcr
je
cmp
sub
push
push
test
adc
push
sub
sub
add
inc
dec
mov
fldcw
lods
cmp
je
dec
dec
jecxz
je
add
das
inc
decb
xor
mov
jmp
cmp
jl
pop
outsl
add
test
sti
cs
fbld
mov
and
add
cmp
cmp
jle
pop
xchg
dec
fistl
or
add
push
sub
mov
sub
add
in
je
push
add
xor
jo
mov
fcoms
xchg
xorl
or
mov
mov
add
movsb
insb
mov
mov
ret
in
and
mov
roll
mov
cmp
add
adc
out
fldcw
insb
pop
and
dec
inc
add
mov
cmp
push
cs
ja
mov
pushf
cmp
aam
stos
adc
xchg
lock
scas
and
push
jle
xor
aaa
sub
sbb
inc
xor
js
xor
sub
adcl
add
stos
add
inc
xchg
shl
mov
cmp
hlt
inc
scas
ss
lock
insl
dec
or
xchg
or
jo
aas
jl
jge
shrl
dec
or
mov
xor
pop
inc
inc
jmp
push
rclb
repnz
xchg
pusha
iret
pop
or
dec
or
adc
xor
pop
das
and
mov
jl
jge
stos
sbb
pmulhuw
push
adc
xchg
add
adc
mov
and
push
inc
mov
mov
pop
add
xchg
sbb
mov
dec
test
push
loope
ljmp
outsb
sbb
cmp
or
xlat
jbe
dec
push
mov
fistl
mov
sbbl
dec
dec
fbld
jmp
ss
mov
ss
hlt
test
lock
leave
push
lods
sub
lods
jge
sub
mov
or
mov
inc
hlt
adc
adc
add
push
cwtl
test
lret
mov
bound
xchg
cmp
arpl
inc
sbb
xchg
push
dec
adc
popa
cmpb
xlat
xor
mov
roll
push
arpl
push
push
cmp
push
lret
lahf
sahf
inc
adc
lcall
push
cmp
ret
sub
add
cltd
hlt
pop
mov
add
push
seto
add
leave
dec
and
les
pop
sbb
mov
mov
imul
loop
cs
mov
in
add
adcb
push
xchg
mov
push
call
jnp
ficoml
dec
test
push
cmp
in
push
loopne
dec
adc
push
leave
jae
adc
insl
mov
lcall
and
xor
bound
cwtl
add
lcall
mov
dec
fcoml
add
loop
test
sbb
ficoml
dec
ficomps
stos
mov
sub
add
dec
xchg
cmp
leave
cmp
and
push
and
imul
lret
adc
add
add
aaa
daa
xchg
stos
mov
and
lcall
push
mov
add
add
inc
les
adc
or
sbb
add
add
nop
lret
add
movsb
xor
or
xchg
add
sub
add
inc
sub
xor
cmp
cmp
xor
inc
and
andps
test
and
sbb
sbb
sub
fimull
shlb
adc
mov
rcrb
les
adc
test
int3
or
inc
enter
dec
arpl
mov
or
dec
sti
mov
fsubl
dec
adc
sub
pop
out
in
push
xchg
incl
add
pop
mov
xchg
adc
mov
inc
mov
sbb
ficompl
xor
cmc
push
popa
nop
mov
lret
push
lds
sbb
inc
jae
test
xchg
mov
sub
xchg
rclb
int3
imul
shlb
xchg
mov
nop
pop
jmp
in
and
imul
inc
xchg
or
inc
or
data16
or
sub
xchg
cmp
xor
xchg
sub
xchg
data16
and
xchg
data16
add
data16
add
sub
xchg
adc
or
add
mov
jl
aad
sub
lret
or
mov
insb
or
rcl
add
inc
repnz
add
add
xor
in
shlb
ds
shll
mov
push
cli
lods
and
add
and
enter
and
or
pop
scas
loope
or
mov
and
inc
sbb
jne
orl
xchg
cmp
jo
movsb
push
mov
stc
dec
and
in
aam
sarb
fbld
daa
dec
mov
add
cltd
sub
sbb
add
push
add
inc
push
sar
int3
push
adc
and
rcrl
sub
push
out
sbb
in
xor
pop
lock
and
add
leave
and
mov
sbb
xor
sub
xchg
inc
roll
movl
sbb
inc
jb
jb
sbb
fcoms
orb
xor
sbb
ds
add
push
sbb
cmp
dec
pop
mov
test
call
es
or
push
cmpl
mov
dec
sub
sbb
mov
testb
inc
sbb
test
popl
loopne
xchg
addb
jmp
test
mov
mov
pop
push
mov
pop
sub
pop
sub
or
push
push
sub
movsb
repnz
popf
cmpsl
or
hlt
pop
lock
stc
cli
xor
cmp
mov
pop
mov
sbb
repnz
xchg
sub
push
mov
add
add
sbb
inc
xor
mov
adc
dec
or
pushf
or
or
sahf
or
dec
push
jge
lret
rcrb
push
lcall
or
or
js
insb
sub
add
mov
bound
xorl
sbb
xor
sbb
add
jmp
clc
adc
hlt
or
jge
stos
cs
add
and
xchg
inc
or
or
sub
cmc
clc
add
or
pop
mov
and
lea
sbb
push
push
push
nop
push
es
fildl
mov
adcb
cld
ret
cld
pop
fwait
aad
je
mov
cmp
dec
orb
das
andb
adc
adc
mov
xor
int
push
jle
jo
mov
and
add
jg
xchg
adc
xor
sahf
push
adc
jge
or
jle
sbb
jno
push
jle
adc
mov
insb
mov
in
lea
xchg
int
inc
xchg
jo
xchg
dec
dec
add
mov
xlat
insl
xchg
andb
xlat
rorb
aam
adc
sbb
mov
add
inc
cmpsl
push
add
movsb
sub
in
js
xchg
sarb
cmp
into
add
cmp
or
and
jmp
mov
and
rcrb
rorb
jp
pop
call
dec
faddl
inc
push
push
lret
test
cwtl
mov
push
push
inc
add
inc
lret
add
sbb
call
iret
pop
inc
push
lea
shlb
jg
xor
idivb
aas
mov
or
xchg
out
or
or
dec
insb
xor
cwtl
and
jne
aas
shr
lea
lea
sbb
cmp
mov
sub
push
mov
or
push
orl
pop
lods
inc
sub
call
mov
or
testb
or
test
adc
cmp
jae
push
lsl
jmp
push
repz
or
les
aas
clc
mov
lret
push
call
pushf
dec
test
ljmp
mov
test
mov
int
mov
inc
sub
push
in
jb
xchg
push
mov
dec
pop
xchg
xor
shrb
jg
mov
pop
fs
sbb
mov
mov
xchg
xchg
mov
or
sub
leave
jg
push
and
cmpl
pop
sub
fidivs
xor
mov
fiadds
cmp
insb
jmp
or
jae
xor
dec
or
mov
push
jne
in
and
sub
xchg
cmp
dec
pop
xlat
jmp
mov
rcrl
or
add
adc
daa
xchg
inc
and
jecxz
push
icebp
decl
sbb
xchg
sub
dec
adc
mov
xchg
sbb
mov
inc
and
push
insl
loopne
subb
dec
pop
movsb
int3
insb
add
jle
sahf
dec
rcl
fs
cmp
test
adc
imul
mov
mov
jge
jmp
ljmp
inc
adc
cmpsb
pushf
mov
add
adc
int3
inc
dec
ja
pop
ret
lds
add
xor
scas
or
jge
pop
out
in
push
cld
jo
and
imul
faddl
inc
and
leave
inc
bnd
fs
mov
movl
xchg
fidivl
mov
or
mov
imul
pop
js
adc
mov
push
adc
imul
push
jno
xor
outsb
ljmp
jb
push
aam
fisttpll
xlat
cs
sbb
fmul
daa
adc
leave
push
pop
pop
sbb
xchg
dec
and
cmp
xor
cmp
sub
and
sahf
mov
ss
dec
lcall
inc
push
sbb
push
xchg
lret
push
fistl
push
push
add
fnsave
add
mov
cmpsl
mov
dec
insb
jne
xor
mov
fnstsw
mov
and
filds
cltd
in
sbb
xchg
in
pop
push
lret
out
add
cltd
in
pusha
push
sbb
leave
xchg
add
pop
pusha
sti
add
push
pusha
sbb
push
pop
sbb
mov
cmp
data16
pop
or
xor
ret
cli
cmp
jp
lea
inc
movsl
adc
stos
aad
shlb
pop
lea
ds
insb
xor
lds
push
les
pop
add
dec
mov
jns
mov
push
dec
jmp
push
cli
dec
cmp
subb
mull
xchg
mov
lret
dec
outsl
inc
sbb
andl
inc
inc
mov
push
stos
jno
mov
or
popa
lea
and
repz
popf
sahf
sbb
cmp
mov
cs
arpl
dec
add
movsb
dec
xchg
adc
cmp
and
sub
stos
or
adc
mov
cmp
jno
lods
mov
dec
cmp
fwait
cmpsl
test
push
clc
jl
mov
add
xchg
sub
xchg
xor
movsb
sub
dec
xchg
mov
mov
adc
inc
sahf
sbb
or
sti
adc
mov
dec
inc
scas
add
mov
aas
and
add
push
push
mov
sub
add
adc
je
std
pop
mov
filds
lret
lea
cmp
jmp
pop
or
or
or
dec
mov
add
xor
or
ret
xchg
addb
adc
dec
dec
adc
test
mov
nop
mov
xchg
xchg
cmp
je
or
cmpb
pusha
add
jmp
sahf
add
adc
xor
sub
and
enter
push
mov
les
inc
and
testb
and
mov
mov
cmpsb
cmp
mov
loope
les
pop
mov
data16
ficoms
adc
fidivs
adc
fiaddl
inc
mov
lods
or
push
cwtl
pop
jo
pop
roll
mov
push
js
loope
mov
lea
or
add
nop
out
add
adc
es
movsl
pop
les
cmpsb
adc
pop
push
and
adc
pushl
ss
push
add
mov
add
ret
imul
test
pop
adc
dec
add
sbb
or
adc
cmp
dec
inc
aam
adcl
mov
in
cmp
jno
jp
sub
and
push
ret
xor
sub
mov
push
addr16
mov
and
movsl
xchg
cmp
and
cmpsl
shrl
and
xchg
xchg
inc
push
movsb
fcmovnbe
mov
jno
xchg
pop
inc
mov
cli
aad
cmp
or
pop
sbb
and
jmp
adc
das
push
or
and
sub
outsb
loop
xchg
ljmp
adc
mov
shl
into
xor
xchg
fucomi
sbb
add
pusha
insb
xchg
push
add
adc
out
and
jo
sbb
sbb
cmp
add
xchg
xlat
xor
ss
dec
aam
cmp
pop
stos
pusha
add
aam
notl
fildl
jmp
add
jb
les
sub
cld
clc
adc
or
jecxz
add
jno
push
inc
cmp
cwtl
fimuls
or
jp
js
adc
mov
mov
mov
enter
sbb
push
stos
adc
cli
xlat
xor
dec
mov
loopne
test
add
ljmp
mov
stos
jmp
jmp
loope
test
cmp
sub
int3
mov
add
jo
dec
mov
addr16
mov
add
sub
or
adc
pop
leave
add
daa
aad
and
adc
push
pusha
scas
add
xchg
cmp
adc
push
xor
push
sbbl
imul
rdmsr
jle
cmp
inc
jg
xchg
out
dec
pop
fisttps
js
mov
inc
inc
add
nop
lahf
inc
adc
push
pop
and
push
push
adc
nop
dec
smsw
or
aas
jnp
scas
and
add
nop
pop
es
out
nop
sbb
xchg
dec
xchg
pop
cmp
pop
incl
add
loopne
mov
xchg
inc
fs
insb
sbb
jae
add
nop
jnp
filds
xor
jg,pn
pop
in
sbb
popf
je
je
and
jo
jle
dec
pop
push
xchg
cmp
int
add
sbb
or
addl
xlat
xchg
mov
cmp
repz
ret
pusha
outsb
xchg
dec
subb
dec
mov
sbbl
or
in
xor
nop
xor
je
adc
xor
rcrl
mov
je
jl
mov
inc
xor
inc
lcall
pop
pop
lret
jb
cmp
test
sbbl
call
mov
pop
xchg
aas
jmp
mov
adc
push
sub
jmp
sarl
xlat
xor
sub
mov
mov
adc
dec
and
sub
push
pop
aaa
stc
nop
sbb
add
inc
add
test
pop
aam
insb
sub
cmp
push
sbb
push
into
mov
lea
inc
sub
outsl
xor
push
mov
mov
add
push
test
mov
and
pop
and
mov
cmp
mov
inc
add
negb
adc
dec
shlb
adc
decl
stos
movsl
pop
pop
xchg
cmpl
pop
inc
test
mov
mov
sarl
cmpsl
lcall
insb
sbbl
aad
xchg
inc
cs
test
rcr
mov
movsb
adc
addr16
inc
pop
sbb
mov
xchg
ret
add
sti
sbb
and
pusha
sbb
add
in
mov
movsb
xor
orb
dec
cltd
js
jo
pop
add
adc
mov
mov
sub
gs
cmp
mov
xor
addl
jne
mov
mov
fcompl
inc
xor
cmp
orl
mov
sbb
lods
add
leave
ret
xor
push
cmp
lods
mul
je
mull
decl
je
or
and
shrb
inc
push
ja
adc
or
mov
lods
jo
inc
lock
xchg
and
ja
dec
aam
add
fs
jecxz
push
cltd
add
mov
or
push
dec
or
das
or
or
push
push
inc
pop
push
adc
sub
pop
sub
lods
jecxz
cltd
cmpl
push
adc
bound
xorb
mov
xor
js
mov
cmp
inc
pop
and
push
lds
add
push
push
dec
and
decl
mov
cmpb
rclb
xor
sub
jmp
mov
and
test
pop
pop
adc
rorl
or
add
push
push
test
sbb
or
or
mov
das
inc
dec
add
sub
fadd
pop
push
add
rcr
sbb
sbb
iret
repz
and
nop
push
iret
lahf
stc
push
pop
cmpl
xchg
xor
lock
push
mov
cltd
jo
xchg
popa
cmc
or
mov
mov
sbb
and
pop
xor
sub
je
lock
pop
or
mov
jo
adc
test
nop
fs
and
enter
or
adc
movsb
arpl
or
push
lahf
and
jge
cltd
or
push
add
add
loope
sbb
or
loop
push
sbb
cmp
and
add
loope
fwait
or
and
pop
pop
or
mov
sbb
andl
out
and
nop
sub
cmp
add
push
loop
inc
add
pop
pop
je
mov
add
pop
mov
pop
xor
pop
das
ljmp
inc
push
dec
pop
pusha
jge
push
ja
scas
push
add
mov
jl
jns
mov
lods
dec
sti
pop
add
sub
push
data16
and
mov
fildll
pop
push
mov
push
xor
add
dec
mov
and
add
hlt
xor
ficoms
lret
fisubl
mov
mov
push
jb
decl
push
sub
lods
cld
jmp
je
lcall
dec
add
cmp
sub
cmp
jae
iret
gs
mov
adc
popf
test
mov
aam
sbb
push
cmp
rolb
mov
push
cmp
test
mov
mov
xchg
or
push
das
mov
sarb
mov
add
push
or
inc
sarb
movsb
push
xor
inc
dec
test
jns
ljmp
add
xchg
xor
push
sub
push
cltd
fucomi
adc
pop
jmp
push
push
fwait
sbb
and
iret
push
add
lods
dec
xchg
mov
inc
dec
inc
sbb
adc
in
dec
rclb
aam
push
inc
pop
or
xor
dec
add
sbb
inc
and
daa
adc
pop
cmp
jne
cmp
adc
sbb
inc
push
push
sbb
and
xchg
push
ret
addl
push
leave
outsl
adc
jg
dec
and
test
and
xor
daa
add
outsb
sub
sbb
jle
add
pusha
pushf
setge
test
or
cmpsb
aas
data16
sbb
sbb
outsb
sbb
mov
adc
popa
and
adc
jmp
cmp
jnp
mov
mov
cmp
in
add
cmp
out
mov
bound
ret
push
jne
call
inc
pusha
inc
xchg
inc
and
add
cmp
xor
jmp
fs
xchg
adc
pop
xchg
mov
cmp
mov
aad
cs
xor
pushf
cmpb
add
lret
adc
stos
call
inc
sarl
nop
jle
mov
push
fcoml
sbb
add
mov
fcoml
sub
push
add
idiv
mov
pcmpeqw
jl
sbb
inc
and
pop
sbb
cmp
sarb
jle
inc
repz
mov
fld
rclb
mov
lret
mov
mov
mov
pop
lcall
mov
fcmovnb
add
dec
dec
dec
inc
stc
xor
mov
std
mov
jecxz
inc
add
pop
and
icebp
gs
xchg
push
je
xchg
sub
jmp
popl
mov
daa
push
add
inc
or
aaa
adc
or
cmpsb
and
dec
push
cmp
jae
mov
test
and
lea
icebp
or
cmp
loop
push
cmp
test
pop
adc
pop
push
or
rol
orl
push
dec
push
inc
dec
cmp
rorb
dec
mov
lods
inc
lahf
aad
cmp
or
xlat
mov
stos
int3
ds
add
add
addr16
movsb
sbbb
addb
mov
inc
pop
adc
inc
add
push
cmp
daa
movsb
xchg
dec
imul
sub
or
xor
adc
dec
enter
sbb
mov
loopne
jl
inc
gs
add
add
sbb
inc
add
outsb
xor
aas
movsl
addl
pop
mov
test
popf
in
adc
orb
sub
and
test
push
daa
ljmp
lods
in
push
push
pushl
mov
out
push
sub
aaa
pop
pop
dec
sub
and
inc
push
sbb
imul
loope
mov
jmp
or
jecxz
xor
fbld
add
stos
xor
inc
cmp
jbe
sbb
pop
or
and
add
dec
adc
push
xchg
loope
nop
xor
ret
ja
inc
dec
ljmp
lods
push
lods
shr
sbb
pop
mov
xchg
cmp
imul
xchg
fists
pop
dec
aaa
xchg
mov
add
add
dec
lds
sti
mov
mov
mov
adc
filds
fcmovbe
adc
sbb
adc
rcrl
adc
aad
ss
std
or
pop
hlt
jle
push
aad
adc
dec
push
mov
mov
mulb
lret
mov
mov
bound
rorl
inc
or
imul
inc
daa
imul
fists
add
out
add
aas
sbb
push
repnz
fcomp
add
sbb
cmp
fidivl
xor
add
push
push
mov
adc
jecxz
lar
add
rorl
lret
shl
loope
test
jl
and
adc
mov
test
xor
or
adc
lds
mov
in
lea
jno
popf
nop
outsb
aaa
add
jecxz
lcall
xor
dec
mov
adc
iret
stos
imul
xor
push
mov
pusha
xchg
pop
sbbb
cmpl
insb
jo
mov
test
add
sub
xor
cmp
xchg
add
mov
not
mov
lods
and
and
shrd
adc
and
and
pusha
test
cmp
sahf
scas
es
mov
test
insl
inc
add
arpl
sbb
push
push
cmpb
or
mov
and
test
lods
out
cwtl
sub
das
mov
push
sbb
test
insl
mov
jl
sbb
js
inc
push
test
shlb
xor
or
inc
rolb
dec
insb
cmp
push
rolb
inc
pop
mov
int3
pop
dec
push
or
push
jae
jb
int
nop
mov
movsb
sub
inc
and
jmp
sbbl
add
add
sub
sub
aam
or
jns
lea
add
inc
adc
cmp
imul
xchg
jo
iret
nop
or
aam
sub
mov
pop
rcll
pop
xor
xchg
xor
cmp
cmp
mov
sbb
test
push
imul
nop
dec
daa
pop
and
xor
dec
ret
std
jl
dec
push
add
arpl
mov
adc
push
push
or
mulb
aad
mov
push
dec
cmp
sub
inc
rcr
push
mov
mov
xchg
dec
pshufw
or
xor
dec
in
int3
sub
pushf
add
jae
testl
add
and
aad
or
pushf
jle
inc
shlb
pop
sbb
mov
xchg
cmp
sbb
out
or
ljmp
or
les
lcall
cmp
mov
inc
add
mov
call
lea
aas
push
cli
cmp
loopne
dec
pop
cmpl
es
pushf
js
jle
es
cmpsl
add
lds
or
or
fdivrl
or
or
insb
lahf
push
les
rcll
xchg
pusha
cmp
cmpb
aad
movsl
sbb
cmpsl
adc
push
inc
adc
adc
mov
adc
sub
mov
pop
lcall
xor
fwait
inc
fmull
adc
xchg
add
imul
push
inc
push
sub
adc
inc
inc
daa
and
mov
inc
add
pushf
sbb
imul
pop
jae
sbb
popf
inc
sbb
popa
dec
xchg
mov
incl
movsl
mov
mov
jne
icebp
fnsave
test
fiaddl
aas
xchg
jbe
call
adc
leave
insb
cmp
ds
adc
addl
sub
or
xchg
mov
mov
jo
repnz
lods
pop
adc
je
pop
add
sbb
push
cmp
aaa
cmp
shrb
sub
je
push
orb
das
lea
and
rcll
testl
cmp
jmp
inc
fs
cltd
xor
aam
jg
mov
push
mov
push
push
sbb
xchg
mov
pop
mov
adc
insl
pop
insb
cmpl
nop
call
inc
sbb
testl
jne
lcall
jb
add
mov
dec
js
pushf
pop
test
jle
adc
sbb
pop
or
aaa
jae
adc
fimuls
sbb
inc
pop
sub
dec
les
je
mov
lret
sti
cmp
xlat
xor
cmp
add
sub
test
xchg
sbb
sbb
add
addl
lock
and
addl
pop
push
mov
mov
scas
jbe
dec
fs
sbb
pop
dec
cwtl
or
js
dec
push
sub
stc
decl
adc
mov
cwtl
pop
sar
call
jle
inc
mov
inc
aas
popl
lea
aaa
dec
jo
cmp
push
mov
imul
cmpsl
shlb
add
mov
sbb
push
inc
ret
test
and
mov
and
mov
mov
inc
cmc
cmovns
jge
push
shr
sub
sbb
mov
ret
push
addl
push
sbb
jl
mov
jmp
mov
rcrb
hlt
jo
mov
add
lahf
pusha
cwtl
push
rcl
inc
or
shll
rorl
fsubl
add
je
imul
push
sbb
add
cmp
lret
or
mov
and
jecxz
sub
inc
nop
mov
push
push
lahf
xacquire
mov
add
xor
and
orl
adc
mov
mov
mov
pop
in
sbbl
pop
je
dec
shlb
xchg
add
fs
adc
push
sub
popf
mov
aas
and
mov
dec
in
sbb
leave
add
xchg
pop
push
stc
lcall
jle
rcrl
shll
nop
pop
inc
mov
jns
xorl
jns
and
jns
enter
adc
sbb
and
dec
push
and
cwtl
xchg
in
mov
sub
push
and
dec
adc
movl
arpl
adc
sbb
and
std
andl
add
dec
xchg
jge
push
adc
or
dec
mov
fisttpll
add
sbbb
mov
sub
push
dec
lret
xor
dec
nop
rcll
mov
daa
movsb
mov
insl
scas
push
and
loope
jb
jge
cmpl
and
enter
sub
push
nop
rolb
xchg
cmp
add
loopne
arpl
lret
push
ret
adc
outsl
mov
add
mov
adc
loope
xchg
sarb
mov
and
push
sbb
sub
mov
add
movsb
in
fimull
cmp
das
sub
and
sub
dec
mov
popa
mov
cmc
shll
cltd
sub
xor
adc
push
sbb
stc
xchg
add
inc
fwait
push
push
cltd
in
sub
and
pop
dec
push
sub
ret
push
push
sub
lahf
or
enter
fwait
sub
lcall
lea
or
insb
pop
sub
lea
push
dec
xchg
dec
pop
mov
insb
sub
push
nop
add
push
and
push
mov
imul
adc
inc
and
jg
mov
cmp
or
jbe
in
pop
iret
es
sbb
sub
or
test
pop
inc
inc
sbb
cmp
rorb
mov
push
addr16
inc
push
mov
push
pop
sbb
pop
xor
loopne
dec
sbb
nop
pushf
mov
sahf
notl
adc
lods
xor
cmpb
mov
dec
xor
xor
xchg
jnp
aam
sbb
orb
add
sbb
iret
pop
test
adc
pop
ret
jbe
jae
call
lea
push
aam
push
sbbl
push
push
add
cmp
lods
in
cmp
sub
xchg
mov
sub
jecxz
xor
xchg
or
sbb
insb
loopne
je
adc
or
lods
push
pop
or
or
adc
sbb
mov
or
or
int
add
rclb
mov
fmuls
addb
nop
scas
push
mov
push
adc
sbb
mov
flds
mov
test
out
sub
aaa
xor
std
inc
add
xchg
mov
or
inc
rolb
xor
mov
adc
or
xor
mov
xor
pusha
adc
pop
xchg
or
sub
add
cmp
mov
push
or
dec
addl
inc
arpl
push
adc
in
push
or
xor
xlat
sub
call
movsl
mov
cmp
pop
scas
mov
sub
test
cmpsl
sub
add
sub
das
mov
imul
lret
in
int3
dec
mov
mov
add
pop
scas
push
adc
mov
mov
sbb
push
nop
adcl
push
and
dec
orl
adc
or
jmp
lahf
insl
lods
and
add
sub
and
adc
pop
test
or
out
in
and
push
cltd
or
pushf
push
leave
repz
push
mov
sbb
sub
mov
jne
scas
pop
adc
cmpsl
xchg
loop,pn
and
cmp
dec
popa
mov
imul
sbb
dec
inc
outsb
xor
add
adc
out
adc
pushf
push
sbb
add
jns
nop
sbb
lds
inc
es
push
push
fbstp
xchg
adc
lock
mov
lret
add
mov
dec
pushf
rcrb
and
adc
test
mov
push
pop
push
in
in
cmp
test
or
sbb
adc
mov
inc
and
sub
pusha
rclb
inc
add
pushf
xor
xchg
pop
sbb
daa
xor
ficoms
push
sub
enter
inc
insb
cs
dec
insb
and
or
jns
lods
nop
sub
je
fwait
adc
daa
test
es
push
leave
mov
and
xchg
xor
add
dec
sahf
fwait
popa
add
jo
add
pop
mov
stos
mov
aas
add
or
mov
filds
push
mov
fld
adc
add
add
pop
aad
int3
push
mov
ret
or
or
xor
mov
addl
sbb
sub
aas
mov
add
mov
js
or
jp
or
push
add
jno
je
sub
pop
sbb
rcl
mov
push
sub
jne
pop
insl
lret
cltd
or
sub
xor
das
enter
les
pop
add
and
push
inc
nop
sub
sbbb
push
add
popl
lods
inc
and
add
adc
outsb
or
decb
dec
inc
pop
push
xlat
outsl
and
push
int
pop
mov
ror
cmp
int3
add
xchg
fdivrl
and
add
js
sub
or
or
ret
sbb
outsb
repnz
je
inc
dec
jns
aam
lret
int
fsubr
nop
cmpb
xchg
inc
pop
add
imul
aad
shrb
push
xchg
cwtl
push
loope
mov
xor
push
dec
stos
mov
add
cmp
lods
pop
xor
sub
jns
mov
xor
add
add
dec
or
and
and
mov
enter
pop
inc
mov
and
or
dec
test
and
dec
adc
sbb
stc
mov
loopne
loop
cmp
jb
mov
push
or
jnp
or
repz
mov
and
jae
push
mov
lahf
inc
mov
rclb
fiaddl
adc
stos
add
push
push
sbb
sbb
in
jne
mov
fidivl
pop
add
jmp
xchg
or
in
dec
sahf
or
sub
subb
nop
adc
fmull
xor
dec
sub
cmp
pop
xor
jl
adc
and
adc
rcll
imul
mov
push
push
dec
adc
jmp
repnz
mov
push
pop
pop
leave
xchg
and
push
push
cmp
mov
nop
xlat
adc
xchg
push
stc
mov
xchg
push
nop
sub
push
sbb
int3
call
sbb
cmpl
add
push
push
sbbl
jl
add
sbb
xor
lsl
and
sub
xchg
and
jns
mov
in
add
pushf
sahf
or
les
jns
inc
es
add
cltd
daa
fsubrl
inc
sahf
or
add
sub
sub
mov
mov
daa
adc
sub
fldenv
inc
mov
mov
mov
inc
es
mov
jg
adc
xorb
cwtl
imul
test
aam
rolb
pop
xor
adc
cwtl
insb
sbb
dec
cmp
add
push
jl
xchg
mov
and
xor
in
jmp
int3
ret
lock
loopne
mov
or
jl
or
pop
or
or
xchg
aam
sub
loop
sbb
push
add
shll
xor
xor
xchg
xor
mov
or
in
push
mov
pop
adc
test
xchg
lods
or
sub
pop
jo
add
dec
cmp
mov
rcrb
push
es
add
cmp
and
sbb
or
mov
in
dec
sub
imul
enter
inc
cld
stos
mov
sbb
bound
hlt
or
inc
movsl
mov
pop
sbb
xor
cmp
inc
imul
inc
test
pop
jmp
mov
ret
jl
out
adc
and
ret
lock
iret
add
js
and
hlt
stos
adcb
sbb
aaa
add
pop
addl
inc
sahf
or
add
inc
mov
in
aas
lods
stos
or
dec
jns
xchg
out
dec
cmp
xchg
adc
sub
repnz
cwtl
xor
xor
cmp
mov
aad
sahf
and
inc
add
sahf
inc
lea
and
lea
push
inc
push
aam
dec
jmp
into
mov
js
xor
lret
pop
mov
sub
sub
add
mov
pop
aad
jecxz
dec
and
loope
cmpxchg8b
orb
jb
adcl
and
shlb
stos
inc
arpl
push
iret
jl
imul
hlt
xchg
cltd
add
sub
or
jb
enter
add
popa
push
clc
and
and
jnp
sub
pop
push
cmp
mov
adc
and
dec
add
mov
add
and
sbb
fs
push
in
mov
sub
or
adc
add
add
add
mov
add
push
push
mov
cli
cld
lock
or
fdivrl
adc
xor
inc
push
xchg
push
sbb
aas
inc
or
out
or
xchg
dec
into
scas
and
leave
add
lock
xchg
add
or
push
and
add
cltd
add
stos
test
lret
dec
add
push
add
repnz
cmc
push
add
mov
popa
mov
and
lock
fwait
sub
add
and
pop
dec
repz
and
xor
fcomps
or
dec
and
enter
and
add
adc
dec
dec
sbb
and
pop
push
call
and
mov
jno
dec
dec
inc
repz
sbb
sar
stos
push
or
push
or
fisttpll
lcall
lods
push
dec
dec
loop
dec
loope
pop
jno
lds
and
push
cli
sbb
cmp
adc
or
xchg
mov
sbb
pop
xor
leave
orl
adc
dec
xor
or
mov
or
dec
and
sbb
mov
and
sbb
cmp
mov
xor
and
shlb
dec
mov
cmp
push
cmp
ret
sub
push
push
jp
sub
pop
mov
loopne
mov
xchg
push
mov
dec
lea
cmp
movsl
adc
fsub
sub
adcl
inc
es
fisubrl
dec
mov
push
add
leave
mov
nop
mov
aad
add
push
add
mov
test
sub
inc
sbb
call
clc
popl
pf2id
int3
test
pop
adc
inc
aaa
push
rclb
fmull
and
movsb
pop
jne
mov
ds
add
dec
inc
push
ljmp
cmp
mov
jmp
or
lret
in
cmp
xor
inc
sti
lret
js
and
ja
lea
xor
pop
dec
dec
pop
inc
popa
in
push
popa
adc
mov
xchg
xor
push
out
xchg
cli
mov
imul
js
mov
or
jo
test
pop
dec
lcall
xchg
aam
sub
dec
lods
call
dec
cmpb
adc
adc
dec
pusha
adc
sub
push
jl
adc
test
jns
sbb
sub
int3
fcmovbe
cwtl
add
mov
sub
push
xor
cmp
push
sub
leave
inc
repnz
sub
lret
and
lods
and
lds
jb
stos
or
jge
pop
push
cs
xchg
andl
inc
cmc
and
or
push
in
pop
daa
in
push
and
add
pop
pop
mov
push
lods
or
jmp
in
or
push
pop
aam
insl
push
cmp
jae
call
repz
out
pop
jmp
mov
cmp
jae
mov
add
push
xchg
out
ja
inc
jne
mov
or
push
pop
jge
push
jns
subl
sbb
pop
sbb
cmc
cmpsb
pop
jp
sub
mov
jge
xor
addb
inc
add
add
inc
mov
in
inc
jecxz
out
add
cltd
mov
xor
cs
fwait
int3
and
jle
jmp
push
adc
push
adc
repz
push
push
xor
hlt
mov
xchg
mov
loopne
xor
or
xchg
or
or
add
xchg
jecxz
add
inc
or
push
push
or
mov
les
ljmp
push
add
fistpll
decl
adc
push
mov
add
lea
sub
and
test
xchg
pop
es
pop
imul
add
mov
push
or
xor
xchg
jno
lods
add
inc
sbb
repz
xchg
jnp
mov
das
inc
in
xchg
pop
mov
adc
adc
cmp
pop
arpl
and
xchg
out
push
lret
rcrl
dec
cmp
dec
sbb
adcb
dec
ds
mov
jne
push
push
lods
pop
sbb
jmp
sbb
push
cmp
es
sub
pop
lret
cmp
add
shl
inc
popf
add
loope
test
enter
divl
pop
and
adc
jmp
fstl
nop
pop
push
xchg
and
sub
add
aam
jmp
sub
mov
and
cmpsl
or
cmp
pop
pushf
test
sarb
push
or
sub
adc
movsb
ss
aam
adc
mov
dec
xchg
fwait
add
nop
or
in
or
and
or
cli
cltd
addr16
or
and
cmpb
jg
adc
cwtl
dec
stos
adc
imul
push
adc
pop
inc
add
inc
int3
cmpsb
fistl
adc
shrl
insl
loope
sub
push
or
add
out
xchg
sahf
cmpsb
sub
jo
xchg
and
push
adc
lods
sbb
fs
ret
inc
add
push
adc
add
inc
pop
das
out
mov
push
icebp
pusha
jmp
mov
cmp
jae
mov
cmpsb
add
push
add
or
xor
sbb
std
jl
add
aad
pop
mov
and
std
call
inc
insl
add
loopne
leave
sti
std
add
sbb
addr16
or
repnz
mov
push
add
add
jp
enter
xchg
hlt
dec
adc
fisubrl
sti
call
repz
inc
push
ror
das
je
in
dec
imul
push
adc
lods
sub
adc
pop
lahf
pushf
orl
test
insl
sub
dec
and
add
pop
addb
add
sbb
add
lcall
pop
push
dec
cmp
jo
fimull
add
insb
pop
cmpsb
mov
push
cmp
movsl
leave
pop
adc
flds
xor
and
verr
xor
or
cli
and
ret
dec
shrb
add
jmp
cmpsl
ds
lds
out
lret
xchg
push
push
inc
cmp
xor
bound
inc
insb
cmp
jmp
add
add
or
fidivrl
cmp
mov
push
cs
sbb
cmp
push
insb
inc
jns
mov
push
or
push
ljmp
adc
rcrb
fiaddl
mov
cmp
dec
orb
push
dec
je
lods
cld
insl
cltd
in
aas
incl
shll
movsb
and
mov
mov
scas
inc
xchg
adc
jbe
lea
xchg
mov
test
mov
add
mov
sti
test
push
pusha
jle
xchg
xchg
mov
dec
dec
rcrl
scas
fstpl
dec
add
test
jg
std
jbe
test
push
mov
loope
popf
lahf
lock
jnp
and
fcompl
jo
mov
clc
movsl
xchg
adc
test
jmp
push
mov
mov
je
mov
sbb
mov
or
push
xchg
mov
movsb
dec
fmul
popf
xchg
jne
jne
xor
js
cmpsl
pusha
shll
incl
mov
inc
push
test
pusha
enter
test
out
fnstenv
add
mov
les
fdiv
add
or
jae
adcl
mov
orb
mov
or
cwtl
dec
or
popf
scas
out
xor
das
mov
sub
pusha
push
lock
out
mov
movb
sbb
mov
hlt
add
loop
jbe
push
icebp
cmp
rclb
pop
push
add
push
push
mov
cmp
sbb
ret
pop
lock
sbb
and
push
push
pop
mov
arpl
mov
xchg
lock
sarl
hlt
mov
out
mov
adc
je
cmp
je
cmp
je
cmp
je
push
gs
data16
mov
add
xlat
lahf
jnp
push
fwait
lods
mov
mov
imul
lock
out
add
lcall
sti
jns
ret
jnp
inc
and
dec
inc
mov
xor
and
es
rorl
mov
pop
mov
and
test
pushf
loop
and
push
stos
sub
mov
icebp
and
stos
sbb
mov
inc
sub
out
insb
adc
pop
jbe
shll
hlt
loope
sub
mov
jge
cmp
mov
adc
mov
scas
iret
insb
and
and
push
push
movsb
js
inc
or
stos
adc
inc
dec
movsb
push
mov
sbb
add
test
push
pusha
xchg
push
mov
xchg
data16
mov
mov
or
inc
andb
inc
xlat
inc
mov
xchg
ret
jmp
mov
sub
sbb
mov
mov
test
ret
adc
and
je
jne
mov
in
mov
sub
push
mov
pop
mov
icebp
mov
jbe
icebp
in
mov
mov
addl
xchg
xchg
pop
and
cmpsb
mov
stc
mov
lret
stos
les
ds
xchg
ja
or
into
dec
test
jge
sbb
mov
repnz
sbb
sbb
inc
rorb
movsb
xchg
int
loop
jle
and
loop
cld
pmulhuw
pop
cld
adc
add
xchg
rorb
mov
shll
cmp
call
jb
and
data16
cmpsb
sub
and
xor
adcb
and
and
test
enter
lahf
ret
pop
pop
push
jl
dec
sub
push
xor
nop
js
pusha
enter
xor
mov
or
sub
add
icebp
and
mov
inc
stos
out
arpl
mov
orl
lock
sbb
cltd
push
aad
mov
push
adc
cld
roll
push
je
dec
adc
sub
jno
mov
mov
dec
lods
loopne
ret
push
fdivrl
pusha
push
and
es
pushf
and
mov
pop
mov
jb
or
inc
shrl
mov
repz
neg
adc
mov
and
test
cmpsb
push
pop
int
xor
adc
push
rorb
mov
adc
adc
inc
mov
push
icebp
outsb
movsb
adc
pop
dec
and
hlt
or
cltd
mov
inc
jmp
outsl
loopne
mov
arpl
push
push
adc
insl
sub
rclb
sub
inc
sub
daa
nop
inc
mov
or
add
xchg
pop
call
add
ret
mov
xor
add
jns
dec
icebp
scas
pop
imul
mov
std
mov
mov
imul
dec
push
cwtl
rol
mov
inc
add
sarb
nop
and
jmp
shr
nop
inc
push
in
call
mov
in
call
push
in
mov
sahf
hlt
xchg
jne
mov
add
cmc
adc
mov
xchg
lea
mov
sbb
adc
lods
inc
outsl
cmpl
mov
push
pop
mov
mov
aaa
mov
push
mov
mov
sub
xchg
aam
lret
sub
aad
sbb
dec
sbb
ss
outsb
pusha
cwtl
int
ljmp
pop
xor
dec
enter
ret
or
lock
adc
leave
sti
push
push
loop
xchg
scas
sbb
jg
roll
lcall
aad
dec
mov
push
push
mov
pop
movl
cwtl
addl
lahf
stos
popa
or
push
cmp
test
shlb
inc
arpl
xor
or
xor
mov
shr
sub
jo
push
nop
mov
pop
mov
xchg
xchg
push
adc
xor
push
in
inc
bound
push
cmpsb
and
inc
inc
sahf
movl
cmp
add
lea
push
and
push
les
jmp
sub
mov
pop
les
stos
and
push
jecxz
pop
lea
sbb
sbb
fisubs
jmp
add
sub
adc
cmpb
in
addl
push
lods
loop
adc
add
int3
xor
sub
and
xorb
mov
or
inc
daa
lea
adc
test
loopne
cwtl
cltd
cmp
std
and
inc
fs
sub
push
sbb
ds
sbb
out
dec
or
ret
sbb
sar
je
loope
jno
push
add
push
outsb
insb
test
mov
and
or
cmp
push
jl
fisttpll
ljmp
or
inc
cmp
clc
jg
jge
jne
cmp
jne
inc
in
xor
lods
add
mov
xor
inc
cmp
pop
adc
movsl
bound
jge
test
xchg
lock
inc
and
push
icebp
add
sbb
daa
xchg
sub
scas
subb
or
xchg
orb
and
xor
push
fs
sub
in
pop
lods
jecxz
jmp
cld
push
inc
add
mov
jbe
or
pop
cs
es
hlt
mov
test
push
jo
js
inc
jnp
dec
jp
and
adc
mov
test
das
pusha
pusha
aaa
mov
iret
and
add
pop
mov
push
rorb
add
mov
cmp
adc
loopne
icebp
xlat
xchg
cmp
mov
pushf
pop
adc
push
lock
push
sbb
or
sbb
fdivs
in
pop
sub
cmp
bound
cmp
cli
or
mov
xor
lock
ret
lahf
scas
sarb
bound
lea
test
cmpl
int
sbb
mov
ss
icebp
push
push
in
sbb
add
mov
push
push
aam
sbb
inc
add
movb
and
sbb
and
rolb
xor
adc
add
cmp
popf
shr
mov
mov
jmp
cmp
inc
add
inc
rol
inc
lods
mov
push
and
je
push
or
jecxz
jb
cmpsl
mov
inc
dec
add
adc
mov
adc
dec
and
dec
add
rorl
pop
cmpsb
int3
enter
dec
rolb
pop
mov
adc
push
xchg
push
cmp
cs
dec
int
pop
adcb
jecxz
inc
adc
cmp
jb,pn
cmp
dec
js
mov
push
dec
cld
dec
outsl
maskmovq
testl
lahf
mov
or
sbb
pop
mov
icebp
rol
add
push
or
xchg
push
andb
inc
test
aas
shl
mov
pop
and
cmp
adc
adc
push
mov
cmp
pop
and
roll
xchg
mov
lcall
push
or
xchg
xchg
or
sub
mov
je
xor
push
idivb
shrb
jae
test
or
pop
orb
das
das
test
add
test
and
adc
lret
mov
push
dec
in
aas
rcr
or
dec
jne
sbb
dec
push
mov
daa
loop
loope
push
and
xchg
hlt
xor
jmp
sahf
lret
vpsubq
mov
push
push
and
sbb
ja
insb
dec
fs
je
cmp
adc
pop
and
xchg
stos
rclb
ja
lods
cmpsl
insl
or
imul
add
test
add
dec
mov
or
sub
cmp
jecxz
adc
movl
aad
mov
cmpsl
lods
mov
or
cltd
mov
aad
inc
add
xchg
dec
sub
bound
jp
push
pop
jmp
and
adc
cmp
rorl
xchg
sub
adc
xor
add
dec
xchg
imul
js
or
or
pusha
pusha
ret
cld
jg
ret
loope
xor
inc
and
and
inc
cmp
bound
jns
push
sub
and
push
jl
inc
loope
aas
je
xor
jl
ret
jl
push
push
stos
adc
mov
rolb
sahf
into
jle
cmpsl
aas
addr16
mov
inc
sub
test
xor
xchg
insl
jp
pop
sbb
and
mov
int
fadds
xchg
repz
icebp
xor
inc
xor
xor
sub
or
jo
test
loopne
xchg
bswap
sbb
es
and
or
pop
dec
push
adc
or
push
push
mov
add
inc
xor
push
or
xor
nop
add
jmp
and
pop
mov
adc
mov
xor
pop
and
and
sarl
jnp
push
mov
xor
leave
lds
ret
xorl
icebp
decb
cmp
inc
inc
ds
sub
cmp
pop
cmp
mov
iret
clc
jle
add
jg
add
add
adc
xlat
inc
cmpsl
mov
adc
enter
add
sbbb
xchg
pusha
jl
mov
aaa
dec
rclb
push
scas
mov
lods
inc
pushf
sbbb
nop
jne
add
sbb
fstl
sbb
add
in
and
xor
cmp
inc
or
in
aas
dec
in
dec
push
jne
cmp
jb
sub
jmp
push
dec
mov
mov
pop
dec
push
jle
jle
setl
movzbl
mov
mov
adcb
push
push
push
or
mov
movsl
fiadds
insl
shll
xor
and
hlt
dec
push
sbb
ljmp
pusha
add
mov
lcall
add
dec
push
cmp
push
push
push
rorl
inc
jo
cmp
lahf
jmp
push
cmp
xor
jg
jle
push
or
addr16
mov
iret
test
mov
add
add
sbb
push
adc
sbb
jecxz
add
sub
mov
xchg
jb
cmp
test
adc
push
inc
lds
inc
mov
clc
mov
insl
add
push
fbld
mov
push
pop
aas
lret
sub
push
push
push
and
and
push
and
sbb
add
and
mov
adc
xchg
sbb
add
imul
xor
shl
cmp
or
or
loopne
movsl
test
add
lds
inc
sub
fs
inc
mov
ret
mov
cmp
ret
push
cmc
xor
mov
cmpsb
movsl
je
cmp
mov
xor
push
sbb
xor
stos
andb
and
test
mov
inc
xor
dec
sbb
inc
sahf
sbb
cmp
sub
imul
enter
xor
dec
sbb
loopne
or
or
push
or
fnstenv
push
xor
test
or
cmpsb
push
adc
rcr
sahf
pop
test
xchg
add
sbb
mov
push
sbb
pop
ficomps
xor
enter
into
pusha
add
mov
fcmovne
rol
xchg
ret
fstl
and
inc
pusha
daa
adc
jno
push
and
in
mov
jg
mov
xchg
or
in
xchg
sub
arpl
sub
add
adc
add
jo
fsts
cmpsb
sbb
push
sbb
or
dec
or
mov
je
push
aam
inc
orb
jbe
push
subb
mov
xchg
jle
test
jle
add
push
inc
add
rcl
ret
push
arpl
cmp
jo
mov
cmp
push
pfmin
mov
sbb
aad
inc
jo
sub
mov
inc
fstps
xor
add
xor
adc
xor
rcl
xchg
cmp
push
dec
lcall
or
addb
test
jo
lea
inc
add
inc
mov
inc
repz
cmpb
jne
insb
mov
movsb
xor
xor
mov
pop
fnstcw
xor
add
arpl
adc
leave
jl
add
shrb
fs
push
mov
sbb
mov
and
or
call
movl
test
sahf
pushf
sub
pop
lret
dec
popf
lret
inc
sub
cmp
sbb
jb
adc
inc
sbb
cmp
mov
add
adc
sub
sbb
sub
push
pop
repnz
xchg
and
dec
cmp
cmp
push
push
pop
xor
in
dec
mov
jge
add
leave
shll
xor
inc
dec
mov
and
js
jp
xchg
in
add
movsb
add
dec
or
daa
inc
or
sub
adc
push
cmc
aam
or
scas
add
push
loopne
pop
movsl
dec
ret
jo
inc
rcrb
mov
pop
inc
sub
in
adc
mov
and
sbb
cmp
or
push
insb
push
dec
pop
ret
push
pop
add
sub
sbb
jne
and
jp
orb
dec
sbb
ljmp
pop
xchg
fisttpll
jg
pop
mov
inc
sahf
shrb
enter
push
imul
jg
rorl
pusha
and
ficomps
jb
mov
sbb
push
xchg
pop
js
fadds
or
js
aaa
push
push
sub
push
add
pop
call
push
mov
push
dec
and
sbb
dec
inc
or
fists
xor
add
mov
pusha
xchg
loop
js
xchg
adc
sbb
push
add
dec
pop
or
jns
pop
into
popa
jmp
aaa
mov
cmpsb
pop
sbb
sub
push
mov
inc
pusha
sti
leave
push
adc
cs
pop
push
pop
mov
cmp
fisubrs
imul
js
or
inc
adc
dec
or
xor
inc
xchg
js
dec
and
int
push
dec
dec
es
popa
push
jo
jecxz
leave
adc
imul
mov
js
js
aaa
sub
enter
inc
or
cwtl
inc
dec
or
popa
cmp
rcrb
and
lcall
imul
enter
call
dec
inc
xor
addl
mov
lcall
mov
pop
mov
mov
std
sahf
inc
xchg
lret
repz
dec
and
dec
jb
repnz
add
xchg
outsb
or
in
scas
dec
inc
dec
sbb
inc
push
adc
mov
inc
cwtl
ss
jmp
enter
fwait
add
pop
test
add
nop
sub
xor
cmp
fs
sub
adc
sahf
rcl
add
or
jae
cmpsl
add
rolb
jne
fisttps
jmp
sub
out
aaa
pushf
testl
dec
dec
shrb
inc
sahf
out
push
pop
fs
in
jle
pop
or
xor
or
popf
outsl
shr
sbb
push
leave
repz
popa
das
mov
sbb
xor
iret
push
inc
mov
or
roll
mov
inc
aas
getsec
and
cmp
mov
mov
jno
or
or
mov
and
repz
adc
mov
xchg
sarl
dec
cmp
inc
push
sub
mov
cli
and
push
inc
ret
and
inc
sub
push
add
or
inc
sub
cwtl
add
shlb
sbb
dec
adc
out
cmpsl
pop
sbb
das
nop
fisttpll
inc
outsl
in
rclb
loopne
xor
or
or
adc
add
xchg
xor
sub
push
shrb
push
mov
sar
inc
pushf
testl
invlpg
call
or
and
push
dec
pusha
mov
mov
daa
xor
add
into
lds
pop
sbb
adc
rclb
enter
sub
cmp
mov
pop
pop
rclb
pop
adc
inc
jmp
pop
add
pop
movl
ss
push
lcall
add
es
or
nop
push
andb
cmp
or
daa
sbb
xchg
sbb
and
add
push
aaa
mov
fsubr
pushf
rcrl
jle
mov
mov
cmp
fimuls
test
cmpsl
lods
add
jmp
aad
lret
or
popa
add
add
lcall
incb
xchg
add
aaa
cmc
std
add
sub
fdiv
jl
lea
mov
push
mov
push
xchg
das
adc
adcl
mov
int3
pop
test
cmpb
xorb
inc
lock
xchg
dec
push
mov
mov
push
js
cmp
add
push
push
stos
test
xchg
lods
and
repz
roll
push
pop
fcomps
mov
sub
mov
sbb
repz
pop
scas
or
inc
sbb
je
or
adc
ficoml
sbb
or
mov
push
push
jo
icebp
fstpt
pop
ret
js
sub
pushf
push
ss
mov
pop
ret
rclb
in
cwtl
jo
ret
mov
lcall
inc
mov
cmp
sbb
dec
inc
xor
and
lret
sbb
test
data16
cmp
or
into
add
or
dec
pop
lret
shlb
add
xchg
lret
test
cmc
mov
add
add
adc
pop
mov
pop
cltd
mov
enter
pop
push
inc
stos
lret
rclb
jns
push
mov
cld
mov
or
mov
jno
sub
or
and
and
dec
or
push
je
cli
fcmovnu
lcall
test
pop
in
pop
ffreep
pop
flds
lods
add
add
and
pushf
mov
mov
fstps
flds
jp
in
adc
add
cmp
mov
rclb
jnp
fmulp
jmp
test
test
out
movsb
lds
fldcw
fmuls
push
cmp
addr16
dec
inc
sbb
mov
pop
adc
lret
cmp
flds
loopne
movsb
mov
pop
fistps
addr16
mov
and
or
push
stos
test
test
cmpsb
fsubs
loopne
add
push
or
push
test
cmp
cwtl
inc
mov
dec
je
jg
jl
cmp
insl
mov
add
sbb
insl
ss
add
jecxz
sahf
mov
push
test
add
movsl
cmp
jb
mov
cmp
mov
xor
mov
jmp
cmpsb
pop
adc
int3
in
jmp
adcb
and
rcll
gs
sarb
pop
mov
mov
lea
into
pop
xor
es
cs
push
adc
or
mov
test
and
adc
out
adc
xchg
insb
addb
push
lcall
or
pop
push
call
xlat
push
insb
jo
cmp
mov
in
push
icebp
jo
xor
sbb
mov
pop
mov
add
jecxz
aaa
roll
aam
aam
or
rorb
push
lea
icebp
lods
mov
sbb
call
or
mov
dec
cld
xor
cmpsl
mov
leave
ficoml
inc
inc
loopne
ret
push
punpckhdq
pop
int3
mov
mov
cld
loop
xchg
and
xlat
pop
test
sbb
pop
inc
push
dec
mov
stos
push
sub
push
mov
mov
fdiv
jne
push
push
cld
mov
or
aad
dec
push
and
sbb
adc
inc
jg
jl
jg
adc
ljmp
add
mov
or
outsl
cmp
pop
jmp
xor
adc
std
jg
and
fstl
push
inc
call
xchg
pop
icebp
mov
ret
xor
mov
push
shll
pop
push
adc
and
inc
sub
sbb
daa
pop
or
popf
add
mov
adc
lock
cmpsb
cld
fsubrs
xchg
cld
cld
repz
cmpsb
lock
inc
cmpl
jno
jbe
cmp
pop
xchg
sbb
clc
fwait
mov
inc
add
sbb
push
orl
mov
lret
pop
push
mov
out
sub
push
call
hlt
addl
pop
shrl
std
push
cmpl
or
inc
movsl
or
xor
cmp
jbe
loopne
mov
sarb
clc
rcll
ret
frstor
clc
lock
cmp
or
mov
inc
int3
test
in
add
fmuls
push
loopne
lea
push
push
jge
jl
adc
fnstenv
mov
cld
push
in
or
adc
adc
cmp
pop
cwtl
adc
adc
sub
aam
jbe
adc
leave
xor
pop
and
jl
pop
or
jecxz
sbb
in
or
cmpsb
les
js
dec
xchg
lock
jmp
insl
jle
loope
and
jno
mov
add
push
inc
test
and
push
insb
and
imull
mov
in
pusha
aaa
inc
sti
mov
fwait
incl
je
jmp
sub
cmpsl
add
sub
popa
outsb
das
add
push
push
add
jle
cmpsl
orl
aad
sub
pop
mov
add
inc
imul
outsb
add
popa
inc
pop
inc
push
shll
push
mov
mov
movl
cmp
inc
add
xchg
cli
clc
xor
or
or
imul
adc
fcomps
inc
and
sbb
push
pop
rcrb
ljmp
das
mov
pusha
sbb
inc
and
and
mov
shlb
sbb
loopne
push
cmpsb
jge
shlb
das
add
inc
push
imul
add
out
mov
xadd
pop
and
mov
push
xor
shl
ds
cmp
xor
add
mov
push
add
sub
push
aas
pop
je
cmp
cs
cmp
lods
push
inc
int3
cmpsb
or
jnp
jmp
mov
add
push
push
icebp
cli
int3
add
sbb
stos
push
dec
aam
roll
cmp
cmp
in
outsl
sbb
adc
add
or
insl
lock
es
insl
movsb
lock
jb
mov
xchg
pop
js
mul
mov
push
mov
sub
jne
xor
call
loopne
aad
std
push
inc
pop
mov
test
lods
nop
fs
repnz
pop
xor
call
js
adc
and
loop
inc
inc
lock
push
cmp
add
mov
aaa
push
jp
or
sub
sub
neg
je
push
movl
or
mov
cwtl
ret
popf
pushf
cmpsb
movsb
sub
cmp
cmc
pop
mov
add
shlb
push
push
xor
push
inc
les
ss
pop
push
push
push
cmp
adc
or
add
adc
cmpsb
push
jns
lock
push
mov
mov
dec
mov
ret
shrl
stos
in
jnp
xchg
fxch
fst
or
push
rcl
push
sub
pusha
sub
shl
dec
shr
imul
or
dec
into
jne
jbe
jae
push
repnz
push
fisttps
std
lret
inc
bound
mov
adc
add
imul
lods
push
in
dec
add
dec
or
popa
mov
pop
test
or
and
out
push
idivb
pop
call
mov
cli
adc
push
out
test
mov
nop
cwtl
push
xor
mov
pop
push
cmp
fwait
pop
cs
rorl
add
mov
inc
incl
inc
dec
movzwl
mov
mov
sub
jg
fwait
push
testb
loop
cld
adcb
cmp
cmp
setb
jb
shll
lret
sub
jp
add
or
xchg
jo
jp
xchg
test
xchg
shll
jmp
adc
addl
sbb
in
adc
adc
sub
dec
and
push
insb
push
cmpsb
mov
mov
xchg
jne
jbe
insl
pop
sub
int3
xor
sub
mov
push
lcall
cwtl
add
fwait
imul
mov
push
imul
rorl
lock
xchg
outsl
sahf
ret
cmp
or
mov
dec
sbb
pop
adcl
test
daa
bound
je
jo
js
outsb
mov
or
sub
or
mov
data16
push
xchg
ret
sbb
lea
aaa
dec
cmpsb
push
push
lret
add
adc
add
push
dec
sub
add
pop
cmp
push
fimull
dec
sub
xchg
sbb
les
popf
dec
loopne
add
sbb
insb
mov
push
xor
add
add
jbe
sub
mov
jo
test
leave
mov
mov
fistl
sti
loopne
pop
cli
cmp
imul
ret
movsl
ret
or
cmp
lock
xor
xor
mov
daa
cmp
lock
lahf
arpl
inc
leave
test
ret
jl
popa
or
sbb
pop
ficompl
pop
pushf
js
adc
test
pushf
jns
mov
jp
in
orl
mov
push
add
test
cmp
hlt
clc
jmp
mov
test
enter
pop
xor
xor
jl
and
push
jge
push
pop
in
cmp
in
cmp
push
sub
cltd
lock
xor
negb
mov
fcmovbe
ffree
mov
int3
xchg
and
pop
push
in
pusha
sar
cmpsb
jmp
sbb
in
and
enter
por
clc
in
pop
xchg
mov
push
mov
cmp
testl
jp
test
jo
push
and
and
sub
stos
pop
nop
mov
sar
sbb
imul
mov
push
cmp
fadd
bound
aam
push
pusha
push
enter
insl
aas
sar
xor
insl
jne
cs
add
push
sahf
das
iret
repz
arpl
push
idivb
je
inc
or
push
adc
dec
insb
jne
or
cmp
push
enter
push
sub
sbbb
cmp
ret
scas
leave
cmp
dec
push
jo
addr16
or
je
mov
ret
lock
mov
xchg
push
push
fidivs
or
int3
into
dec
outsl
cmpsb
push
lods
inc
movsl
cmp
mov
xchg
sub
enter
cmp
jnp
ret
push
movb
mov
sbb
xor
mov
mov
movsl
outsb
pop
add
in
jnp
xor
push
cmp
jmp
push
inc
and
cmp
je
rorb
adc
jp
dec
push
push
fcoms
and
push
imul
and
pop
xor
jo,pt
or
sub
loopne
adc
xor
xor
rorl
jnp
sbb
push
jae
add
ret
cmpsl
adc
jg
insb
inc
stc
mov
loopne
mov
clc
les
mov
mov
je
or
fsubrl
xor
sbb
fwait
rcrb
shrl
jmp
mov
jp
mov
cltd
add
cmp
push
stos
notb
mov
fisubrs
inc
jae
into
xor
mov
xchg
sub
sub
lret
orl
das
imul
mov
shll
push
pusha
fs
shll
js
data16
inc
fmuls
fsubr
adc
aas
aas
mov
dec
mov
pop
xchg
sti
or
push
mov
inc
int3
mov
xor
xor
addr16
mov
sub
push
and
pop
je
outsl
xor
add
xchg
and
imul
add
loopne
add
jbe
loop
pushl
xor
mov
rcrb
fadds
sbb
xor
add
and
xor
push
xor
cmp
shlb
and
lods
stos
sbbl
xor
shr
gs
dec
sbb
test
or
jne
xor
dec
cmp
jne
inc
nop
mov
xor
stc
cli
bound
pcmpeqw
movsl
icebp
or
adcb
inc
push
ljmp
add
int
imul
or
sti
and
adc
fbld
jmp
cmp
in
pop
and
sbb
aaa
adc
add
jne
sbb
inc
inc
repz
ror
test
lcall
add
cli
push
ja
sarb
push
mov
xorl
lret
or
mov
leave
lea
jne
lods
es
and
ja
or
inc
push
add
add
rolb
xor
add
les
in
repnz
inc
or
add
movsb
outsb
rcrb
decl
add
and
pop
decl
push
rol
ljmp
add
xchg
add
or
jmp
pop
addb
xor
mov
lock
add
or
adc
pop
rclb
lret
notb
in
or
ret
inc
sbb
test
push
fdivrs
pop
add
fnstcw
xor
adc
adc
adc
mov
stc
incb
repnz
xchg
pushf
je
out
add
iret
shll
aas
cmp
xor
shl
stc
xchg
mov
push
mov
out
fnop
dec
negl
add
ret
stc
push
adc
or
mov
and
pushf
lock
lods
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jnp
cmovp
lahf
sub
adc
pop
dec
mov
add
push
scas
ja
iret
movb
push
aam
in
div
lahf
or
fldcw
mov
or
lods
into
and
mov
push
lret
clc
pop
imul
movsl
cmp
or
jp
sahf
ljmp
js
sbb
cwtl
dec
xchg
aas
xor
insb
inc
sbb
sbb
cmp
push
dec
mov
decb
push
push
loopne
sub
push
jmp
es
push
cmp
sub
inc
sbb
cmp
cmp
adc
pop
push
push
or
push
jns
jge
loop
mov
and
or
test
enter
sar
enter
xchg
decl
or
adc
xor
push
pushf
dec
aam
add
sub
roll
pusha
push
adcb
or
dec
out
bswap
iret
scas
jo
pushl
loope
jbe
adc
fwait
add
push
lock
test
pop
xor
sarl
xchg
and
aaa
or
sbb
lods
xor
and
mov
je
nop
pop
sub
sbb
fs
insb
insb
push
push
aam
xor
aaa
inc
icebp
mov
ds
ret
ja
sub
icebp
and
xchg
fiadds
mov
je
cmp
je
testb
lods
aas
mov
rorl
lds
cmp
je
or
xchg
xor
adc
push
push
lock
push
sub
adc
push
mov
pop
lea
mov
out
sbb
push
sbb
leave
add
push
imul
jne
lock
dec
js,pn
into
adc
lock
dec
inc
cs
lock
lahf
movsl
out
jmp
jmp
rcll
test
adc
adc
push
out
jl
xor
dec
loopne
adc
ss
mov
and
mov
mov
sbb
add
add
push
mov
cmc
mov
into
lea
mov
sub
and
sbb
aas
or
push
je
andl
xor
pop
dec
pop
jl
testb
mov
inc
sub
add
add
and
inc
mov
dec
xlat
test
pop
js
fisubrl
sbb
cmp
out
xlat
add
scas
fcoml
push
leave
jle
mov
xchg
out
sbb
jns
nop
sub
clc
data16
lds
jge
jne
enter
xor
mov
xchg
cs
adc
push
ret
pop
das
popa
pop
sub
mov
std
aas
jne
outsb
or
insb
xchg
lods
clc
or
cwtd
addr16
xchg
xor
fildl
mov
fidivrs
roll
inc
movsb
push
test
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
adc
add
xchg
add
lea
sub
dec
push
or
mov
add
sbb
lods
add
adc
dec
cmp
test
xchg
jecxz
in
and
les
sub
mov
pop
xor
pop
and
popa
lock
adc
out
push
adc
push
add
push
fsubrl
mov
mov
lods
js
pop
arpl
and
popa
fs
pop
add
popa
ja
mov
inc
std
nop
ds
loope
inc
loopne
sub
or
fs
sub
adc
dec
lods
adc
mov
aad
cmpl
aam
dec
sub
cmp
je
aaa
jnp
push
add
hlt
fstps
mov
jge
mov
jg
adc
test
push
add
pop
rolb
pop
cmp
pop
test
inc
ljmp
mov
adc
and
fs
pop
lods
or
rorl
push
or
pop
ret
loope
or
push
pop
into
and
ret
xchg
enter
mov
mov
ds
daa
mov
insb
mov
ret
clc
aad
int
outsl
push
out
out
pop
add
pop
imul
lcall
pusha
cmp
adc
or
rolb
or
cmp
jl
lret
sti
jmp
mov
adcb
sbb
and
test
inc
popa
mov
cmp
rolb
jo
outsb
sub
mov
jo
lret
pop
movsl
pop
pop
pusha
shrb
ljmp
xchg
popf
push
dec
pop
mov
movsl
add
idivb
je
mov
pusha
xor
adc
loopne
out
adc
out
jo
push
les
jno
push
add
cli
lret
add
aaa
lea
ss
lods
add
and
jle
mov
mov
or
stos
sub
dec
mov
test
popf
push
int3
add
lods
pop
aas
cli
mov
add
test
mov
or
test
inc
xor
je
cmpsl
daa
jae
add
inc
lcall
sbb
dec
jae
inc
or
adc
mov
xchg
adc
cmp
push
or
pop
arpl
push
sbb
cmp
ret
out
jo
cmpsl
jne
push
sub
sbb
adc
stos
xchg
sub
inc
loop
pop
sub
adc
mov
imul
sti
push
int3
sbb
inc
aas
test
icebp
mov
out
add
and
insl
or
or
jl
or
sbb
les
pop
add
pop
sbb
and
test
cmp
or
mov
les
lods
xor
movb
push
mov
xor
push
cmp
adcl
xor
aam
lcall
adc
mov
cwtl
adc
addr16
inc
scas
xchg
loope
push
repnz
ret
xchg
cs
cmpsl
add
xor
mov
stc
aas
jmp
addb
sahf
sbb
fldl
xchg
dec
xor
call
mov
dec
stos
mov
shrl
aad
push
push
jo
bound
push
mov
pop
cmp
cmp
inc
stc
add
or
xor
push
sub
push
or
pop
testb
xchg
test
mov
or
push
loopne
add
lret
stos
rclb
lret
std
push
and
in
lods
jno
fbld
mov
les
in
sub
sub
adc
inc
and
mov
fs
push
cmp
ret
and
dec
xor
sub
adc
sarl
adc
mov
jp
insl
inc
sub
lods
adc
ja
jo
push
xor
in
dec
testl
adcl
add
inc
cwtl
shlb
lock
xor
pop
inc
xchg
dec
add
sbbl
inc
pop
xlat
mov
ror
push
jno
inc
outsb
jl
aas
sbb
or
jmp
pushl
ret
pop
mov
lea
pop
adc
pop
dec
ss
xchg
jne
mov
repnz
aas
mov
or
xor
ret
out
dec
push
push
sbb
ret
roll
jns
ss
push
push
push
jb
add
sbb
sbb
fistpll
gs
adc
aam
pop
sbb
movsb
shlb
pop
cltd
mov
add
or
pop
loopne
jecxz
lds
xor
cmp
xor
cwtl
flds
pop
sahf
push
xchg
dec
outsb
mov
mov
cmp
insb
xor
or
lahf
add
jmp
adc
aad
jbe
mov
push
test
paddsb
inc
mov
fdivrl
mov
test
push
mov
loopne
lods
and
inc
dec
cmp
jmp
xor
jl
or
or
adc
add
test
push
not
roll
pop
add
mov
insb
dec
dec
adc
in
clc
mov
inc
adc
and
inc
push
and
fdivs
mov
adcb
lods
jmp
es
pop
pop
fnsave
idivb
fs
pop
xchg
jp
xor
push
push
sub
dec
test
sbb
bound
stc
cmp
cmp
cmp
xchg
xor
add
sbb
or
testb
and
out
add
xchg
jno
mov
sbb
decb
and
xor
xchg
mov
sbb
cmpsl
sub
insl
shlb
pusha
dec
test
push
mov
mov
push
xor
scas
push
imul
lahf
sbb
in
stc
pushf
mov
sbb
addl
xor
xchg
jp
add
and
cmp
add
lea
xchg
into
mov
aaa
add
and
add
sbb
or
xor
js
push
adc
ret
mov
test
push
stc
je
insb
inc
push
cltd
add
fdivs
aad
lret
fbstp
add
mov
sub
pop
cs
mov
cmpsb
adc
mov
push
movhps
push
mov
cld
mov
and
push
push
push
inc
loop
xor
push
mov
aam
pushf
and
in
and
pop
mov
nop
and
cmp
dec
rolb
neg
xchg
pushfw
inc
xlat
adc
out
sahf
mov
dec
rcrb
mov
mov
call
xor
mov
sub
rcrb
dec
imul
jmp
xor
test
pop
push
jo
sbb
cmp
cmpb
idiv
sub
add
insb
mov
insb
mov
cwtl
mov
or
mov
adc
or
out
ret
or
lea
jp
mov
add
or
add
leave
pushf
cmpsb
jnp
dec
mov
dec
icebp
add
insl
mov
gs
cwtl
lcall
test
xchg
and
aaa
push
sub
sub
addl
mov
cmp
je
push
xchg
arpl
add
movsb
adc
loope
fldl
xchg
retw
adc
pushl
push
call
shrb
jle
into
add
inc
fmuls
xchg
movsb
mov
mov
lea
add
sarb
movsl
aam
cmp
mov
lods
fimuls
loopne
test
in
out
or
inc
adc
cmp
cld
sbb
pop
and
insb
test
jbe
and
outsb
adc
sub
xor
sbb
mov
xor
pop
jae
xchg
xor
sub
jo
aas
add
sbb
sub
orl
fwait
mov
in
adc
data16
imull
dec
push
push
scas
push
movsl
xchg
adc
lea
add
jbe
xor
cmp
and
push
mov
lea
mov
addb
adc
add
aas
leave
clc
xor
sub
cmp
ja
loopne
jne
mov
ss
mov
xor
or
cld
cmp
nop
and
pop
mov
push
lret
mov
add
and
mov
adc
or
sbb
rcl
sahf
push
pop
and
aas
xchg
inc
xlat
rcll
int
jbe
xlat
out
add
jne
js
ficoms
inc
cli
push
cld
mov
add
mov
dec
in
pop
cli
test
pop
adc
inc
insb
shr
sarb
test
popa
and
insb
dec
repnz
adc
adc
inc
xchg
push
sub
pop
or
std
mov
mov
dec
dec
insb
adc
fnstsw
or
out
and
xlat
fs
jb
subl
test
add
clc
lods
lock
cmpsl
bound
clc
mov
mov
sbb
push
pop
adc
icebp
mov
hlt
rcr
jmp
jne
add
jns
cmp
inc
inc
and
jge
and
dec
insb
or
xchg
inc
outsb
cmp
test
xor
push
inc
xchg
push
inc
sbb
scas
sbb
push
jno
shll
rclb
inc
mov
cmpsb
xlat
jbe
add
xlat
or
orl
push
insl
mov
out
movsl
orl
movsl
testl
jnp
push
pop
dec
jge
fimull
cmpb
outsl
movsb
jp
pushl
mov
inc
add
lahf
notb
inc
and
loopne,pn
popa
push
sub
adc
pop
adc
mov
pop
dec
sub
xor
pop
mov
sbb
stos
das
das
lcall
push
sub
push
pop
jbe
outsb
js
add
push
lea
and
push
mov
add
aaa
jbe
or
es
mov
hlt
out
add
or
dec
sub
jnp
lods
inc
or
push
rolb
jl
testb
jo
dec
in
mov
shl
aas
xchg
or
mov
hlt
in
push
jbe
into
dec
inc
loope
out
sarl
or
int3
push
pusha
or
outsb
mov
push
loopne
test
or
sbb
mov
popa
xor
push
jmp
arpl
mov
xorb
add
jbe
or
stos
outsb
mov
jae
push
test
inc
sub
jp
adc
in
lea
mov
repnz
ret
push
mov
test
fs
push
call
and
jge
push
clc
lret
and
sahf
dec
or
loopne
inc
jae
fs
inc
mov
clc
movsb
jo
inc
sub
filds
sub
inc
pusha
out
xor
hlt
dec
cld
adc
stos
mov
out
lahf
lcall
movsb
sub
pop
stos
sbb
cld
mov
pop
pop
in
loopne
pop
mull
add
lret
add
sahf
mov
cmpb
inc
mov
pop
or
and
aam
or
push
imul
or
mov
or
sbb
cmp
ds
fisubrs
jmp
or
xchg
inc
cmp
inc
sub
inc
push
bound
lret
add
aam
nop
adc
fnsave
shll
les
lock
mov
mull
xchg
nop
sub
xor
mov
push
adc
int3
add
jae
rorl
push
cmp
and
insb
dec
add
imul
or
or
or
mov
mov
bnd
push
into
std
xchg
pop
les
sbbl
xchg
fldpi
sub
pop
push
push
aam
or
insb
or
add
data16
xor
subb
or
imul
mov
mov
or
gs
pop
aas
inc
xor
jb
add
outsl
push
testl
mov
iret
jae
sbb
outsl
adc
pop
adc
inc
movsl
push
rolb
arpl
testl
pop
dec
loope
cmp
lods
push
push
mov
lods
xlat
add
pop
mov
xchg
add
dec
shrb
shlb
xchg
aaa
adc
mov
lcall
andb
xor
in
or
cmp
xchg
mov
in
outsb
adc
lods
test
push
ljmp
in
mov
xchg
mov
mov
ja
xor
xchg
mov
adc
push
in
push
mov
or
imul
out
adc
jbe
push
push
add
jp
rorb
mov
shl
add
ret
testb
lcall
add
inc
xchg
in
mov
push
imul
mov
and
xor
outsl
mov
hlt
ret
ja
je
or
std
out
sub
sub
sub
xchg
mov
cmp
stos
dec
jnp
jp
out
or
ds
xchg
jo
pop
sub
sbb
mov
jnp
pop
insl
test
incb
jmp
cmp
adc
adc
adc
movsl
xor
inc
adc
ljmp
push
rol
scas
addl
or
jbe
dec
cmp
cmp
inc
jmp
jg
mov
mov
add
mov
imulb
gs
add
je
loope
mov
ret
test
add
or
adc
push
addr16
lea
jbe
das
ret
test
scas
and
es
mov
faddl
add
push
mov
and
js
mov
inc
dec
mov
sub
sub
rorb
ljmp
add
adc
in
cltd
mov
insl
test
xor
daa
or
push
adc
sub
jno
dec
mov
adc
dec
in
mov
mov
sbb
mov
lea
pop
ja
push
dec
test
push
jp
and
xor
pop
and
pop
shlb
push
adc
push
add
dec
xor
sets
pop
cmp
pop
inc
and
jo
sbb
outsb
adc
adc
pop
fcoml
inc
add
add
je
adc
xchg
sub
jle
jbe
inc
push
inc
popf
jno
add
ficomps
add
nop
test
xchg
inc
data16
ret
and
push
sbb
sub
ret
cltd
add
pop
mov
stos
xor
jle
pop
call
mov
mov
faddl
pop
pop
test
and
push
and
mov
test
pop
lds
add
mov
lea
push
dec
push
xchg
push
and
mov
nop
and
test
dec
and
mov
mov
and
nop
sub
mov
nop
add
dec
call
cmp
cmp
out
call
loope
push
sbb
mov
in
call
xor
outsl
inc
cmp
aas
cs
pop
jge
scas
das
sbb
mov
and
add
in
and
push
xchg
xchg
fcoml
out
inc
sahf
in
pop
and
shll
mov
nop
cmpsb
aam
int3
aam
xor
cltd
and
or
push
fisttpll
popf
nop
sub
loopne
jne
mov
dec
je
dec
sbb
idivl
dec
addr16
mov
pop
test
loopne
or
js
or
and
cmp
sub
in
add
scas
mov
mov
sbb
push
jns
rorb
add
pop
rclb
jmp
dec
ficoml
or
popa
or
push
sub
rcrl
inc
push
push
hlt
push
mov
push
mov
outsl
xor
mov
mov
outsl
mov
les
hlt
and
enter
les
shrl
add
xor
inc
xor
mov
push
jne
push
testb
fwait
loopne
dec
in
dec
cmpsl
imul
lock
nop
loop
mov
test
out
mov
fcoms
jno
jp
push
aaa
sub
shll
outsl
shrl
inc
es
je
and
pop
rolb
test
add
inc
xlat
stos
xor
cs
movl
cmpsb
std
mov
or
mov
add
mov
mov
sbb
sbb
cmp
sbb
cmp
cmp
fs
das
hlt
dec
lea
pop
push
or
push
push
xor
push
xchg
mov
add
stos
inc
adcl
movsb
loope
call
mov
inc
adc
out
dec
loope
add
popa
cmp
xor
outsb
and
add
sbb
add
sbbl
add
hlt
call
xor
cmp
incl
pop
mov
xchg
faddl
or
inc
inc
inc
inc
dec
dec
pop
punpckhbw
aam
adc
add
cmpsl
or
into
pop
je
dec
mov
mov
cli
loopne
xchg
mov
inc
dec
jg
or
stos
mov
or
add
shlb
xor
pop
inc
loope
dec
pushf
loopne
pop
or
push
sub
mov
cmp
jl
add
cmp
inc
adc
fiaddl
lods
shlb
xor
cli
adcb
push
pop
loopne
xchg
add
test
or
and
jg
and
push
xor
jae
mov
in
pop
movsb
cmp
les
sbb
filds
inc
mov
insl
cmp
sub
mov
add
mov
or
or
adc
add
pop
add
inc
roll
jg
sti
fs
jne
es
mov
inc
add
in
or
mov
mov
dec
insb
pop
xchg
or
pop
mov
cs
adc
cli
mov
ja
jo
jl
push
movsb
jns
add
push
js
add
push
jg
repz
inc
out
dec
or
jge
mov
add
jl
lcall
xchg
setno
push
inc
adc
sbb
and
add
fiaddl
pop
out
stos
mov
mov
cmp
xchg
and
js
sbb
setl
pop
std
mov
inc
push
sbb
xor
dec
movsl
pop
cmp
ret
pop
cltd
adc
addb
xor
push
adc
stos
add
movb
sbb
leave
ret
sub
sub
jle
hlt
std
test
xor
stos
testl
je
mov
jo
aas
inc
sub
ss
mov
jge
push
adc
pop
sbb
ret
push
loope
fs
push
push
cmpsl
inc
mov
sub
sub
nop
sbb
xchg
adc
sub
pusha
mov
jl
sbb
stc
mov
and
sub
sbb
push
out
sbb
jno
add
pop
fisubrs
fldl
push
test
or
in
aaa
stos
jo
jl
or
adc
jge
xchg
mov
mov
lret
es
mov
mov
add
or
xchg
cs
movsl
sub
fadds
in
movsb
fsts
adc
enter
call
dec
ret
or
insb
and
or
rolb
sub
shr
mov
push
add
fstps
add
dec
push
xchg
nop
sbb
dec
cli
add
pop
je
or
push
cmp
mov
pop
push
xor
mov
mov
inc
pop
add
push
call
insb
pop
sbb
lret
dec
mov
jbe
lcall
aaa
and
mov
in
fs
je
out
xchg
sbb
sub
dec
and
or
sbbb
mov
cmp
mov
mov
mov
movsb
xor
pop
dec
and
pushf
push
adc
and
ss
mov
pop
les
inc
mov
aam
clc
push
cld
push
sbb
test
repz
jbe
shr
push
jmp
jmp
and
sbb
xchg
lods
inc
xor
jecxz
popa
mov
mov
and
sbb
aam
adc
sbb
and
cmp
or
je
dec
in
std
pop
out
add
push
daa
fnstenv
sbb
sbb
in
pusha
inc
sbb
sbb
test
sbb
push
andl
lock
and
jl
add
xchg
or
or
add
dec
mov
mov
jl
pop
sbb
push
push
mov
add
nop
sub
mov
push
call
cmp
ja
mov
enter
pop
and
jb
inc
push
push
sub
push
movsb
repnz
inc
xchg
xor
cmp
mov
xor
xchg
and
xor
push
into
push
je
mov
in
enter
push
jo
dec
pop
inc
ret
cmp
sub
addr16
or
xor
loop
fwait
inc
xchg
or
orl
inc
push
jns
repz
adc
sahf
sbb
mov
and
iret
sbb
dec
in
push
xor
dec
mov
pop
jns
cmc
dec
jmp
push
sub
mov
add
clc
fisubl
ds
mov
add
cmpsl
xchg
cmpl
out
push
int3
adc
test
xor
cmpsl
test
ds
cmp
mov
dec
in
aaa
mov
adc
pcmpeqw
hlt
add
test
dec
hlt
and
dec
inc
sbb
addb
push
sbb
sbb
adc
or
pushl
sub
sub
push
pop
clc
mov
lret
dec
loopne
mov
dec
fists
pop
mov
push
orb
loopne
inc
add
push
movsl
sub
cmp
sbb
stc
fadds
sbb
out
push
xlat
adc
inc
cmp
fadds
rolb
jecxz
loopne
loop
jae
loopne
adc
mov
shlb
pop
mov
dec
pop
push
push
inc
rolb
mov
loopne
adc
icebp
loopne
or
repz
dec
scas
sub
push
mov
call
pop
and
cmp
jle
and
add
orl
and
or
js
or
call
fiadds
aas
xchg
or
mov
lods
sub
lds
push
push
aaa
cmp
repz
call
out
call
push
lock
iret
lahf
loopne
sub
jne
pop
add
push
lds
and
mov
testb
cmpsb
adc
int3
mov
mov
pop
or
add
xchg
mov
add
cmc
push
dec
xchg
cmc
lcall
int3
or
jne
pop
dec
dec
mov
mov
shrl
movsb
jecxz
sub
imul
mov
call
pop
jae
mov
es
pop
pop
jecxz
sub
movsl
lea
or
aam
push
add
lock
pop
cltd
test
in
push
insl
lcall
mov
sub
and
add
jne
mov
jmp
add
out
je
lret
addb
loopne
add
ficompl
mov
imul
clc
ss
cmp
or
in
inc
adc
stos
and
sub
in
sbb
add
sarb
mov
adc
dec
push
push
pushl
mov
sub
adc
jl
cmp
jae
mov
test
inc
mov
and
mov
cld
mov
and
or
jne
pop
adc
push
pusha
xor
hlt
pop
adc
jg
icebp
cmp
cmp
fwait
movsl
movsb
pop
push
or
cmp
fadds
and
push
loop
dec
push
or
and
inc
sub
cltd
punpcklbw
mov
loopne
jl
repnz
mov
filds
add
call
xchg
pop
push
lods
sbb
ret
push
xchg
ficompl
mov
sbb
sahf
mov
adc
xchg
decb
add
aad
push
js
cwtl
and
xchg
flds
lods
fs
dec
or
jno
shlb
insl
xchg
pop
cli
and
pop
push
and
and
sub
or
xor
enter
sbbb
popa
xor
scas
js
cmp
sbb
ljmp
rcrb
pop
push
out
fcompl
add
enter
mov
fmuls
call
sbb
xchg
repnz
or
ja
mov
inc
fwait
pop
mov
sbbl
idivl
imul
dec
sbb
adc
sub
pop
inc
pop
enter
test
outsl
js
lock
add
mov
test
sbb
and
dec
or
sbb
in
mov
pop
xchg
test
mov
cmp
jbe
jo
int
mov
push
xor
xchg
mov
dec
dec
orb
pop
cmp
pop
nop
fiaddl
iret
cmp
jo
xchg
ret
popa
jno
movsl
imul
xchg
pop
stos
inc
jno
xor
push
or
test
xor
dec
jns
popa
add
and
push
daa
inc
cmp
clc
push
inc
pop
jl
xor
or
xchg
push
inc
dec
lahf
inc
lock
dec
stc
add
test
dec
loop
push
sbbl
jo
add
mov
cmp
push
sbb
ss
sbb
push
pop
adc
out
arpl
loopne
sbb
jmp
inc
mov
or
roll
ficoms
lea
xor
cwtl
sub
in
pop
adc
in
iret
mov
sbb
fwait
and
rcll
lods
xchg
pop
addr16
mov
add
je
fsubl
xchg
test
mov
add
sub
fbld
push
cli
inc
push
cmp
das
cmpsb
cmc
xchg
cmp
cmp
inc
pop
pop
stos
mov
xchg
std
xor
inc
jmp
xor
pop
aaa
subl
add
ja
push
push
push
inc
shlb
in
mov
inc
add
mov
ret
ret
cmp
pop
or
je
push
les
fs
shlb
push
dec
sti
dec
loop
insl
testl
popf
mov
pop
sbb
int3
adc
jo
xor
pop
jmp
mov
cmpsl
ror
test
andb
cmp
stos
or
inc
or
testl
xor
inc
or
arpl
mov
xchg
jne
fsubrl
sbb
push
cs
add
or
arpl
dec
or
xchg
mov
inc
and
stos
ret
inc
lahf
add
push
enter
out
cmp
push
adc
pop
enter
scas
lea
dec
push
sbb
lea
mov
cld
and
dec
rolb
or
mov
push
add
xchg
or
add
out
dec
insb
mov
add
cmp
stos
xor
mov
in
cwtl
jne
in
popa
mov
mov
leave
rolb
cli
inc
adc
outsl
pop
das
enter
iret
call
pop
ret
gs
test
ja
imul
test
xchg
rcrb
xchg
fiaddl
jecxz
sub
cmc
shrd
fisttps
andl
xor
popa
add
lret
mov
repz
lock
ficomps
inc
jecxz
adc
pop
movsl
aaa
movsl
inc
push
add
xor
push
mov
mov
sub
leave
xchg
outsl
mov
cld
adc
add
sub
inc
cmp
mov
rolb
dec
fdivr
pop
adcb
bound
hlt
xor
mov
mov
loope
aam
or
lea
push
cmpb
pop
mov
rep
mov
push
xor
fcmovu
aaa
mov
xor
call
cld
inc
pop
dec
data16
sbb
mov
push
sbb
add
add
sbb
cmp
mov
mov
shrb
jge
dec
xorb
insb
gs
pushl
leave
adc
jg
jl
ret
push
mov
loop
lret
push
or
cmp
adc
sbb
jne
pop
mov
pop
and
fwait
in
lods
jne
cmp
and
xor
push
or
add
inc
mov
sub
cmp
and
shlb
push
ret
xor
push
outsl
andps
and
adcb
sbb
add
jecxz
pushf
loop
pop
or
xchg
cli
ret
adc
cmp
adc
js
add
arpl
sub
xchg
cmp
cmp
or
jl
pop
js
imul
mov
push
std
ljmp
cld
clc
loop
call
js
sub
lods
lods
les
cmp
inc
xchg
repz
inc
and
jbe
sub
lea
ret
stos
cmp
imul
cmp
adc
popa
jb
enter
dec
dec
test
arpl
stc
and
cmpl
scas
jmp
call
nop
fadds
lret
and
inc
inc
and
mov
adc
add
cli
push
push
cld
push
xor
jo
les
mov
lock
sbb
inc
je
dec
jp
inc
cmp
xchg
cmpsl
inc
mov
adc
popf
xchg
cmp
icebp
jbe
cltd
push
int
jo
pop
push
sbb
shlb
loopne
je
xor
mov
push
mov
jno
call
push
bound
sti
jl
test
pushf
lods
imul
fbld
or
mov
sub
mov
sub
jns
mov
xor
jge
out
cmp
xchg
jle
add
dec
add
jmp
lea
or
sbb
xlat
jns
out
or
push
roll
mov
xlat
add
orb
addr16
or
aad
ja
nop
sub
mov
pop
sub
or
xor
pop
pop
pop
push
xor
cmp
imul
cmpsb
lret
sarl
push
daa
lds
jb
jl
push
adc
add
rolb
push
sbb
add
mov
inc
movsl
sub
xor
rcrb
pushf
push
sub
dec
cmp
add
sbb
or
add
xchg
push
lods
fidivs
or
push
mov
mov
inc
sbb
shlb
xor
jmp
pop
rclb
sub
jnp
jnp
mov
fisttpll
fisttpll
pop
or
movsl
mov
jmp
fsubrl
push
mov
scas
xor
add
stc
movsl
or
dec
loope
mov
push
inc
pop
jb
lods
jbe
add
inc
jmp
push
adc
mov
arpl
mov
and
les
test
adc
mov
xlat
popa
inc
icebp
ret
outsb
push
outsl
aaa
cmp
lret
int3
je
cmp
adc
cmp
inc
movsl
jmp
lock
add
pop
adc
sub
or
inc
adc
adc
test
and
adc
inc
xchg
sbb
daa
pop
cmp
sub
push
mov
repnz
dec
mov
sub
rep
bound
inc
xor
or
adc
arpl
in
or
sbb
cmp
jae
not
and
xor
inc
sbb
or
in
sbb
jnp
and
aas
push
adc
pop
push
push
push
push
cmpsb
and
cmpsb
xlat
push
mov
push
test
sub
inc
sbb
inc
inc
sub
pop
mov
sub
inc
sub
cld
xor
mov
or
xchg
testb
mov
or
movsb
jle
inc
xchg
pop
mov
cmpl
cmp
xor
fsubrl
xor
xor
xor
add
push
pop
sbb
push
rcrb
sub
jns
push
daa
fcoml
clc
push
mov
mov
and
xlat
sub
cmp
dec
adc
call
popa
pop
cmpxchg
jmp
mov
jl
stos
add
outsl
add
jecxz
stos
cld
sub
pop
and
or
xor
lret
cli
and
sti
dec
mov
mov
cmp
push
cld
clc
pop
sbb
xor
add
lret
mov
add
jnp
pop
adc
xchg
jb
les
xchg
shlb
call
push
jbe
lea
push
sbb
and
dec
add
inc
mov
hlt
fists
add
mov
mov
dec
push
mov
cmp
pushf
add
mov
mov
sti
inc
dec
jae
ljmp
das
mov
sbb
cmp
jecxz
scas
dec
rclb
mov
adc
mov
adc
push
push
and
add
jmp
add
or
inc
cmp
ret
push
sbb
pop
lock
cmp
xor
cmp
cld
loopne
dec
push
fdivr
mov
lods
mov
wrmsr
sub
push
pusha
sub
shll
add
int3
add
movsl
xchg
push
mov
mov
jge
je
mov
add
scas
testl
rcrl
cltd
cmp
jl
subb
or
add
push
cwtl
push
icebp
subb
mov
sbb
test
push
sbbl
test
inc
xchg
loopne
adc
adc
hlt
adc
mov
into
call
inc
pop
in
mov
mov
enter
xchg
in
sahf
and
mov
dec
inc
call
or
add
int3
adc
or
sti
cmp
xorl
push
pushf
xchg
add
imul
push
sub
add
mov
ss
add
jle
mov
pushf
arpl
sbb
popa
insb
loope
add
jp
insl
push
adc
rorl
push
pop
cmp
and
hlt
inc
xorl
lods
dec
push
pushf
aas
jge
mov
push
xlat
outsb
cmp
or
ret
push
shll
decl
or
push
clc
add
clc
jbe
faddp
pop
inc
or
add
jmp
pop
pusha
xchg
lret
dec
inc
mov
js
in
adc
sbb
push
cs
inc
xchg
push
sahf
shrb
mov
mov
inc
cmp
movsb
add
mov
outsl
sbb
and
fwait
movsb
jns
nop
les
push
js
xor
cmp
add
pop
insb
and
ja
lea
mov
fdivp
inc
xchg
subl
jmp
or
inc
jb
movsl
cmpsb
aad
mov
or
xchg
pop
push
jl
pop
in
aad
test
mov
and
lea
lea
mov
or
imul
notb
testb
add
int3
or
add
sbb
xchg
jbe
aas
nop
mov
sub
cmpsb
imul
pop
or
insb
xor
add
pushf
push
mov
enter
xor
and
add
and
pop
shlb
ret
pop
ljmp
mov
jnp
lods
enter
arpl
dec
add
int
push
mov
cwtl
outsb
sar
lea
jp
cmp
mov
adc
push
cmp
jb
pushl
pop
push
ja
mov
pop
or
pop
jmp
mov
es
jae
inc
test
or
in
dec
push
sbb
and
in
scas
mov
adc
adc
inc
inc
add
xor
xchg
std
imul
xchg
xorb
xor
out
sub
adc
addr16
jo
mov
dec
pop
xchg
lcall
adc
xchg
xchg
push
jecxz
mov
pop
add
stos
movsb
jle
movsl
inc
lcall
add
data16
outsb
mov
leave
sbb
sub
mov
add
arpl
icebp
daa
or
cmp
sbb
or
fcmovnu
in
daa
mov
enter
mov
or
sbbw
and
sbb
and
or
xchg
fisttpl
sub
sub
addr16
jo
daa
add
sbb
jmp
je
dec
pop
adc
mov
call
daa
jl
jns
mov
repnz
push
xchg
repz
cmpsb
push
scas
push
adc
jne
jnp
filds
jb
xor
and
push
pusha
and
xchg
mov
adc
inc
push
mov
dec
xchg
mov
nop
push
or
ficomps
mov
mov
mov
ss
mov
jl
inc
inc
stos
push
inc
and
sbb
in
fldl
sub
adc
aas
and
xchg
and
and
nop
add
nop
and
and
movsb
es
in
add
fmul
add
nop
daa
or
sub
add
sub
jb
add
test
cmp
cs
jmp
push
jb
pop
pop
push
rcrb
in
xor
hlt
add
aas
xor
or
xor
mov
mov
xchg
jb
sbb
sub
mov
out
push
cmp
mov
dec
xchg
or
jmp
rcrl
pusha
push
mov
lret
neg
lret
mov
adc
xor
rclw
or
sbb
jl
xor
pop
adc
xchg
mov
xchg
es
add
or
mov
icebp
adc
mov
mov
loope
mov
pop
adc
and
cmp
add
mov
mov
jo
mov
cmpsb
pop
or
cli
ja
ja
fs
adc
pop
mov
pop
pop
mov
dec
sub
xor
and
sbb
adc
popa
cld
xor
shrl
xchg
adc
in
fdivrl
ds
sbb
cmpsl
loope
insl
push
and
fcoms
and
roll
xor
sbb
xchg
xchg
movb
or
or
data16
jb
jns
and
hlt
js
ds
mov
cld
ror
mov
mov
xchg
fsubrl
dec
loopne
movaps
or
in
push
insb
jecxz
inc
or
pop
pop
push
inc
lock
cmp
xor
jne
push
pop
faddl
inc
xor
lcall
inc
push
orl
dec
lock
jmp
mulb
push
mov
js
je
mov
cmp
lock
pop
inc
dec
das
pusha
add
rcrb
sub
dec
and
movsb
sbb
jns
xchg
call
cs
rorl
jle
subl
je
and
mov
les
inc
cs
das
cmp
adc
mov
into
mov
push
cmpb
jae,pn
test
cmp
outsb
or
mov
pmullw
push
sbb
mov
add
jmp
leave
das
push
ret
cmp
add
cmc
pop
je
data16
jne
lock
cmp
nop/reserved
fildl
lock
movb
sarb
push
push
dec
loopne
int
cmp
jg
aas
jbe
sub
fmulp
xor
loop
dec
inc
pop
push
test
shrl
bound
mov
inc
add
push
je
push
cmp
leave
insl
call
sub
out
or
or
push
xchg
mov
sub
xchg
jbe
out
xchg
shlb
jns
xor
dec
or
push
add
fadds
lret
int3
dec
mov
pushf
inc
stos
mov
jp
out
cmp
jmp
add
pop
or
push
dec
loop
test
push
mov
push
xchg
or
push
andb
or
push
jns
test
xchg
loopne
cwtl
pushf
mov
or
out
dec
inc
cmp
lock
or
shlb
js
adc
jmp
xor
jns
pop
adc
xchg
stc
jmpw
push
cmp
push
popa
xor
fsubrl
mov
aas
or
cmpsb
rclb
pop
mov
jbe
xor
xchg
sbb
and
int
adc
ffree
dec
rorb
in
pop
shl
inc
sub
hlt
out
and
mov
enter
lock
inc
test
in
mov
push
aaa
and
or
dec
or
aas
pop
xor
push
push
sarl
dec
fadd
mov
lret
add
packssdw
lahf
xchg
jo
push
mov
mov
cmp
jl
cmp
jbe
sti
pop
jle
cmp
push
jp
or
pop
inc
cmp
aas
jmp
es
pop
xor
inc
pop
cmp
mov
mov
pop
and
cmp
jl
test
inc
je,pn
cmp
je
jne
pop
sbb
mov
pushf
rorb
fsubrl
jne
stos
cs
pop
mov
mov
cmp
mov
js
testl
add
dec
sub
or
and
mov
dec
add
adcb
lock
push
ljmp
pop
movsl
nop
shll
incl
ds
mov
jge
jbe
aaa
sub
daa
sub
mov
lea
icebp
gs
and
popa
xor
xor
jl
aaa
cld
dec
inc
add
loopne
add
cld
lock
push
pop
pop
pop
into
mov
pop
rorl
xchg
insb
repz
test
xor
inc
popa
or
mov
sbb
jp
movl
scas
sarl
es
mov
cmp
nop
cli
in
jo
push
ja
sahf
jle
stos
movsb
fnsave
mov
fst
rorb
out
mov
mov
pop
fs
sub
stc
fcompl
ss
adc
push
and
xchg
adc
sub
mov
mov
nop
icebp
imul
or
insl
call
jae
pop
add
sub
jle
and
sbb
cld
or
xchg
fdivrs
lea
mov
inc
test
aas
pusha
push
bound
popl
test
icebp
add
je
push
mov
je
adc
adcb
lds
pop
dec
add
mov
mov
ret
inc
mov
iret
or
or
sbb
or
and
fadd
add
pop
lret
sahf
or
push
pop
addl
outsl
fs
cmp
lcall
insl
faddl
int3
lea
sub
cmp
xor
inc
xchg
sbb
dec
inc
mov
dec
ret
ja
pushf
mov
cmpsl
adc
dec
je
adc
icebp
push
push
jne
push
add
sbb
pop
loopne
int3
lret
pop
je
pop
shlb
or
scas
loope
or
jae
mov
xor
ret
add
pop
inc
cltd
imul
xchg
sub
in
push
sti
imul
loop
rclb
ret
subb
dec
inc
cmp
inc
dec
jle
and
xor
or
push
push
imul
sbb
and
or
push
mov
arpl
cmp
or
out
sub
rorb
dec
cli
lock
adc
xchg
jbe
jmp
movsb
ret
add
push
por
sub
in
push
and
and
ja
cmpsb
sar
in
pop
xchg
add
sub
loope
mov
mov
jecxz
sub
dec
pop
fucomi
xchg
popa
icebp
jae
cmp
add
fdiv
repnz
mov
adc
inc
adc
add
xchg
popf
jnp
xor
mov
cmp
jnp
jmp
scas
inc
pop
and
add
adc
sub
int3
ljmp
sbb
jo
into
pop
xchg
fldt
jnp
or
mov
icebp
fwait
and
out
movb
fsubrl
jge
cmp
cld
in
xor
inc
stos
xorl
and
adc
popa
inc
sub
in
out
add
je
cmp
mov
push
adc
jg
pop
push
subl
jle
pop
mov
rol
xchg
xchg
rcrl
add
xor
and
into
clc
mov
je
imul
push
jle
dec
add
sbb
stos
lock
jne
in
insl
adc
add
or
push
inc
repnz
adc
sub
cmp
cmp
jnp
add
inc
insb
pop
je
fwait
sub
iret
add
push
or
fs
inc
int
loop
mov
add
mov
pushl
sbbb
or
adc
repz
mov
iret
imul
push
xchg
inc
sbbl
test
rcl
rcrl
mov
movsl
or
outsb
mov
cwtl
adcl
push
jmp
out
mov
jo
loopne
add
pusha
mov
fbstp
push
adc
cld
cmp
cmpb
fildll
outsb
add
pop
or
jle
enter
jle
repz
inc
loop
clc
ds
insb
push
or
push
mov
inc
and
ret
push
pop
cmc
and
test
pop
addr16
movl
sub
and
cmc
mov
jl
cmp
jg
mov
mov
negl
cwtl
pop
lock
aas
xchg
inc
or
add
jmp
mov
lock
ret
orps
lcall
je
xor
gs
adc
lock
add
dec
sbb
sub
lea
add
mov
pusha
pop
mov
cs
ret
xchg
jg
push
and
push
lock
daa
push
xor
sti
int
xchg
cmc
cs
adc
shrl
subb
mov
xchg
shlb
dec
jns
jb
add
test
ss
adc
testb
aad
add
or
mov
data16
cmc
sub
or
sbb
push
shll
in
pop
cmp
sbb
aam
dec
sub
pop
mov
jle
ja
mov
inc
test
ds
jp
mov
push
pop
pusha
cmp
inc
ret
arpl
cs
into
add
ja
and
clc
outsb
shr
sbb
jmp
popa
ret
xchg
jae
xor
sub
int3
fistpl
sub
mov
rolb
pop
or
jmp
mov
jg
rorl
jmp
mov
mov
fmull
mov
pop
push
or
or
or
mov
push
mov
inc
mov
fwait
add
out
jmp
ljmp
inc
and
fisubrl
lods
jo
adc
out
sub
jo
xchg
cmpsl
inc
sbb
insb
push
das
jmp
xchg
sub
sbb
add
adc
inc
dec
cwtl
dec
mov
adc
dec
cmpsb
push
xor
jle
inc
popa
test
mov
insl
sub
je
sub
or
sub
scas
hlt
push
fsubrs
movsl
push
pop
je
fldl
rcll
fstpl
mov
in
ss
pop
iretw
repz
inc
jne
adc
adc
jne
push
idiv
cmp
iret
jne
or
jne
or
jne
pusha
mov
repz
scas
leave
inc
lock
dec
scas
push
fldz
into
fstpl
andl
xor
and
je
pushf
fdivs
lds
iret
and
mov
pop
pusha
fcmovnbe
andl
adc
jecxz
pusha
jp
xchg
scas
mov
or
lea
movsl
push
and
insb
jl
cld
fstpt
les
clc
cld
inc
cmp
pop
ss
sbb
inc
inc
enter
imulb
dec
push
lods
mov
out
pop
adc
ficomps
pop
xchg
ljmp
aam
shll
nop
pushf
loope
pop
jge
jne
cmp
inc
in
out
lret
dec
loop
or
fimuls
outsl
neg
mov
movsl
pminub
push
push
pop
add
dec
xor
or
arpl
and
xchg
adc
je
sub
ja
cmovnp
fmull
add
push
mov
test
outsb
pop
and
enter
push
jbe
pusha
movsl
roll
fidivrl
out
sbb
or
sub
popf
and
push
ret
dec
mov
add
add
scas
pushf
add
xchg
add
popa
sub
enter
hlt
mov
cwtl
leave
mov
or
xor
inc
sahf
pop
add
cs
push
push
repnz
repnz
enter
add
sbb
fmull
push
sub
pop
push
mov
xor
ds
roll
in
imul
push
sbb
pop
add
ja
mov
clc
pop
and
popa
sub
adc
and
mov
mov
js
xchg
lods
push
xchg
pushf
repnz
out
pop
pusha
mov
add
les
int3
push
jno
mov
sbb
xor
pop
faddl
inc
imul
push
and
xor
pop
enter
sbb
jo
adc
enter
or
shlb
and
inc
pop
mov
imul
aam
or
pop
mov
ja
stos
pop
inc
jo
loopne
and
ss
in
call
adc
fs
sub
add
add
mov
enter
dec
sarb
mov
test
jbe
xor
pop
jge
pop
push
and
inc
xor
mov
aaa
xor
out
adc
xor
shrb
sub
nop
jp
imul
and
cmp
mov
ret
jecxz,pn
mov
add
ret
fiadds
push
pusha
or
cmp
xchg
ret
jle
int3
popl
fidivrl
and
cmp
orb
fcomp
aam
test
and
mov
and
sbb
je
cmp
lods
pop
out
or
push
add
add
data16
cmp
mov
jbe
leave
sbbb
loope
shlb
cld
cmp
jl
aad
xchg
xor
cmpsl
pop
cli
xor
jp
inc
inc
push
ret
pop
or
push
clc
push
call
sarb
push
and
dec
sbb
and
and
adc
xchg
or
or
mov
xor
push
fldl
cltd
bound
mov
and
aas
and
call
jo
push
push
lcall
dec
add
insl
xchg
cmc
push
les
test
mov
xchg
dec
jb
cmp
pop
inc
outsl
xor
lret
in
add
inc
cwtl
xchg
mov
sbb
cmp
je
movsl
or
push
pop
cmpl
push
aas
xor
orb
sub
popa
xchg
test
loopne
mov
mov
out
jne
cmp
cmp
mov
jae
push
cmp
sbb
mov
add
arpl
sub
mov
or
and
xor
mov
mov
mov
push
adc
inc
das
push
add
mov
or
jbe
xchg
leave
call
aam
add
pop
jle
pop
shr
rcrb
and
lcall
arpl
mov
scas
push
adc
xchg
xchg
xlat
pop
repz
mov
and
inc
inc
adc
push
sub
cltd
jne
cmp
mov
loope
pop
sbb
adc
out
mov
inc
shl
nop
or
inc
lods
or
push
xor
cmp
add
and
xlat
out
fsubs
jge
je
imul
ljmp
xorl
iret
fiaddl
pushf
scas
push
dec
xchg
pop
xor
shrb
push
mov
das
mov
sarb
mov
lea
sub
sarb
cmp
fisubrs
jo
inc
sbb
mov
jne
push
pop
iret
pop
in
test
or
push
scas
push
inc
adc
add
dec
clc
ja
notb
outsb
dec
clc
enter
sbb
in
fadds
inc
or
cwtl
pushf
andb
inc
mov
push
das
loop
or
fcomps
das
cwtl
sbb
pusha
pop
and
adc
push
adc
mov
aas
loope
sbb
icebp
pop
push
jle
movsb
fsubs
push
jg
push
fsubrl
jle
cmc
ret
add
in
stc
mov
pop
inc
xchg
imul
mov
lds
or
pop
inc
jmp
icebp
jg
push
and
inc
mull
cmpsl
push
jae
lods
in
ss
add
ret
lahf
adc
or
pop
and
test
stos
test
dec
les
daa
xchg
adcb
push
outsl
xchg
ret
push
mov
test
arpl
fadds
sbbb
or
push
add
js
cmp
pop
insl
add
lret
lahf
or
mov
nop
adc
dec
repz
adc
adc
or
pop
shrl
pop
dec
pop
push
scas
push
in
popa
loope
into
fistl
scas
jo
in
lock
js,pt
nop
shlb
test
pushf
inc
out
mov
jg
jae
les
inc
sbb
or
arpl
sub
notl
mov
mov
pusha
add
xchg
jo
popf
dec
adc
adc
enter
push
out
mov
ja
sbb
ret
insb
jecxz
push
lret
cmpsl
add
sbb
icebp
rcrb
test
int
push
lcall
aas
ja
push
lods
xor
std
pop
sbb
sub
arpl
hlt
pusha
adc
xchg
mov
xchg
jo
mov
mov
call
mov
mov
cmp
test
push
mov
dec
mov
dec
fidivrl
into
inc
push
jl
jmp
ret
ljmp
push
add
mov
mov
push
xchg
ret
lods
ja
cwtl
mov
test
call
pop
negl
xor
fisubl
push
getsec
mov
jl
mov
aam
jl
cmpl
lock
testb
sub
sub
dec
xor
add
jge
mov
push
jno
or
inc
in
sahf
adc
iret
push
mov
and
inc
cmp
aam
lcall
nop
xor
clc
xchg
in
sbb
mov
dec
sub
xchg
sub
loopne
les
aas
into
cmp
addr16
enter
lock
loopne
out
rorb
add
pop
jmp
popf
pop
or
pop
addr16
clc
cli
dec
add
inc
pop
xchg
subl
sub
mov
lahf
lods
add
sub
adc
outsl
xchg
dec
lcall
in
fwait
dec
jp
mov
push
pop
xor
sahf
sbb
jne
push
fistl
push
daa
mov
jge
cmp
push
orl
xchg
insl
test
sub
sbbb
push
jmp
pop
lock
insl
addb
add
clc
jno
fisubrl
adc
dec
cmc
and
push
jmp
pop
jle
cmp
fcoml
sub
shlb
adcl
lret
cld
out
pop
cmpsb
push
test
cltd
push
pop
dec
call
mov
movsl
mov
sbb
pop
dec
add
decb
test
lahf
ja
bound
push
mov
scas
cmp
fwait
cmp
loopew
out
sarl
pop
sbb
and
inc
push
push
inc
test
jmp
inc
or
jge
sahf
pop
add
inc
fs
pop
cmp
mov
pushl
pcmpeqd
add
lods
shrb
inc
lock
sti
pop
loopne
or
decl
jmp
sti
xor
pushf
sub
sbb
popa
sub
jo
hlt
in
filds
mov
mov
and
dec
and
aam
and
add
mov
dec
xchg
in
mov
add
movsb
test
sub
push
movsb
add
test
pop
xchg
push
test
xor
pop
xor
orb
iret
rolb
or
cmp
enter
or
push
pushf
pop
xchg
lret
pop
xor
fisubrl
sahf
lods
or
push
jns
jo
pop
rolb
and
or
outsb
dec
cmpl
or
and
jns
sub
pop
xorb
push
adc
sub
sub
sahf
repz
or
dec
dec
dec
dec
dec
push
mov
hlt
mov
and
mov
clc
mov
add
cs
dec
nop
inc
adc
sub
faddl
rcrl
pop
or
xchg
push
dec
push
cmp
add
push
sbb
push
sti
xor
pop
pushf
sbb
sbb
fs
and
push
mov
lea
je
popa
cwtl
inc
dec
pusha
icebp
sbb
and
jbe
imul
or
pop
mov
je
adc
add
out
test
sbb
ja
sub
or
and
xchg
adc
adc
lret
push
and
pop
sahf
xchg
push
cwtl
and
push
mov
icebp
int3
sub
pushf
cmp
lea
mov
sbb
and
push
or
sbb
lea
sub
add
push
js
aam
in
inc
lea
test
add
insb
pop
cwtl
sub
xor
subb
push
out
sbb
pop
add
add
popf
insl
test
add
adc
jge
sbb
icebp
sbb
add
idivl
adc
adc
and
jbe
out
mov
nop
cmc
clc
into
mov
sub
mov
sbbb
in
add
mulb
jnp
or
or
bound
enter
fildll
add
ret
inc
push
mov
mov
cmpsb
outsl
fs
adc
adc
mov
rcrb
or
lock
add
sbb
push
pop
pop
aaa
and
or
fldt
inc
mov
inc
add
and
dec
dec
gs
adc
fmull
inc
call
icebp
lods
inc
loopne
jmp
adcl
add
arpl
pop
mov
push
sbb
inc
inc
mov
push
xchg
outsb
in
mov
imul
pop
mov
jae
push
pop
pop
adc
pop
jnp
pushf
jne
mov
add
add
push
data16
adcb
lods
fs
jbe
xchg
fnstcw
int3
or
incb
pop
or
nop
adc
adc
push
and
testb
sbb
or
sub
adc
adc
cmp
push
hlt
ss
mov
sbb
xchg
push
dec
inc
push
jl
sub
jne
jmp
fstpt
js
es
sbb
cmc
sbb
adc
mov
mov
xor
nop
jge
lock
mov
or
mov
xchg
lods
sbb
jns
je,pt
aas
push
subl
and
sub
stos
sbb
lret
aad
mov
mov
stc
pusha
out
repnz
inc
push
movsl
jg
loope,pt
pop
pushl
cltd
popf
push
xor
jge
and
push
pi2fw
insb
push
sbb
dec
mov
jle
inc
or
movsl
xchg
inc
mov
xchg
loop
shr
rorb
jo
adc
sbb
ret
shll
sub
popl
jp
or
xor
adc
in
jne
std
daa
and
fsubrs
cmp
jae
and
inc
sub
mov
sbb
pop
push
mov
push
popw
or
ret
and
outsb
mov
jge
leave
mov
lock
ret
jg
loopne
or
pushf
pop
mov
cmp
movb
out
inc
xchg
mov
cmpsb
push
call
in
inc
imulb
nop
dec
leave
aaa
cwtl
shll
imul
test
rorb
adc
dec
cli
dec
insb
pop
mov
imul
clc
mov
xchg
sbb
xor
push
pop
sub
inc
popa
or
and
add
push
jecxz
push
inc
fdivs
pop
test
pusha
xorb
pop
and
out
popf
xchg
push
sbb
add
xchg
mov
adc
inc
loope
sbb
push
inc
cli
inc
pop
mov
cltd
fstl
data16
xor
test
push
sbb
mov
inc
sub
repnz
sub
call
or
or
and
mov
inc
stos
fcmovnb
mov
or
imulb
add
or
push
cmp
je
or
xchg
cmp
shlb
push
nop
cmp
enter
adc
xchg
lds
push
mov
or
pop
fbstp
jmp
mov
and
add
sbb
add
lea
cmpsb
repnz
mov
es
or
jmp
jg
cmc
inc
in
jmp
mov
mov
cmp
xor
loopne
dec
adc
or
icebp
cmp
cwtl
xor
or
cmp
je
dec
cmp
inc
notl
and
or
push
icebp
lret
js
push
cmp
fsubrl
imul
aaa
jecxz
push
pop
jge
mov
adc
mov
mov
ja
xchg
js
adc
cltd
add
loop
les
cmpsl
movsl
mov
jmp
push
dec
inc
cmp
lds
ja,pn
or
pop
jmp
fs
test
into
mov
push
popa
and
cwtl
push
adc
incl
xor
outsb
mov
dec
insb
mov
adc
xor
ds
sbb
xor
lcall
aam
leave
popa
pop
jne
in
adc
flds
fsubr
or
adc
sbb
in
dec
je
mov
outsb
fisttpll
popa
push
fstpl
fldl
stos
add
fnstsw
test
je
and
push
into
xchg
add
movsl
cmpsb
add
sbb
adcl
pop
mov
mov
ljmp
fsubrl
and
clc
push
andb
mov
jge
jge
sbb
xchg
dec
and
fsub
pop
fsubrp
push
mov
mov
dec
push
pop
jns
push
and
jno
out
addl
and
add
push
shlb
add
mov
fucomi
xor
adc
sub
dec
je
add
es
or
lcall
rcrb
cmp
in
sbb
cs
ss
xor
ja
scas
sub
push
push
push
dec
xchg
add
cmp
hlt
clc
fistl
push
dec
nop
aam
push
add
stc
iret
mov
xchg
push
js
aaa
push
inc
in
iret
dec
sub
addr16
dec
dec
jne
int3
mov
push
cld
jnp
notl
outsb
mov
ss
mov
insl
push
movsl
enter
pop
sbb
std
in
and
cmp
sbb
and
adc
leave
adc
lea
ja
clc
rclb
inc
aad
dec
xor
vmwrite
and
and
push
in
and
push
repnz
nop
cmpsl
pop
mov
push
inc
sahf
pop
adc
and
xor
pop
ja
enter
lret
out
xchg
pop
daa
jns
clc
xor
xor
adc
pop
sbb
sub
push
leave
sbbl
push
xor
xchg
xor
push
insb
jmp
or
jns
jns
test
adc
stc
and
mov
mov
push
xchg
adc
xchg
pop
fmull
push
cld
nop
hlt
push
push
mov
dec
mov
ss
sbb
and
xchg
testl
or
inc
adc
idivl
sub
pusha
adc
xor
pop
repnz
jne
test
push
enter
push
push
vmwrite
cmp
in
xchg
daa
push
fmuls
push
sbb
xchg
add
cld
mov
sub
aaa
sbb
cli
and
aaa
repnz
repnz
cmp
mov
dec
repz
sahf
pop
adc
push
pop
sbb
xor
jns
enter
das
or
in
push
cwtl
push
push
or
xlat
mov
out
pop
mov
fsubr
dec
repz
mov
inc
push
fs
repz
xchg
out
icebp
add
adc
inc
push
push
jns
fwait
lods
mov
iret
sarl
adc
xor
repnz
repz
addr16
stos
leave
loopne
lcall
pop
inc
lock
mov
bound
and
add
pushf
jbe
dec
lock
push
sbb
push
and
and
in
sbb
cmp
or
xor
mov
call
add
das
sbb
push
roll
push
jo
pop
pusha
out
sbb
in
test
loope
scas
shll
pop
adc
sub
andb
and
push
mov
adc
jb
sbb
bound
and
inc
popa
adc
js
pop
jnp
push
push
dec
and
and
push
fiaddl
inc
xchg
add
dec
adc
xchg
push
pop
adcb
push
imul
sub
add
lcall
rclb
mov
enter
or
inc
add
shr
call
xlat
cmp
add
mov
jno
add
sub
adc
xchg
push
or
aam
xchg
sub
loop
filds
and
ret
jge
inc
ret
xchg
in
mov
outsl
pop
popa
sbb
dec
les
dec
hlt
mov
ret
enter
add
xor
xor
jl
pop
sub
scas
fldl
push
sub
pop
jo
add
aaa
jns
jns
sbb
ja
loopne
enter
push
popa
add
call
call
repnz
loopne
push
or
push
xchg
or
add
xorl
adc
outsl
in
in
mov
orl
jmp
mov
xor
adc
jle
or
dec
enter
mov
mov
lock
add
daa
mov
out
shlb
loopne
je
loopne
je
out
leave
roll
fiaddl
add
ret
or
add
or
pop
testl
adc
push
out
sbb
lahf
pop
or
or
or
xchg
xchg
in
in
stc
cld
or
xor
mov
nop
loopne
or
jb
xor
cltd
popa
pop
jne
inc
mov
inc
fwait
or
jle
jne
ret
mov
push
and
ss
push
adc
push
movsl
sub
mov
aam
and
shlb
leave
call
fdivs
pop
add
cmpl
xor
dec
mov
jo
mov
fcomps
add
ja
adc
cmp
lea
cmp
shrl
adc
sbb
in
add
shlb
lock
fsts
add
add
and
lock
jg
sub
inc
and
lds
cmp
cmp
add
bound
rorl
mov
and
adc
adc
mov
or
and
pop
pop
dec
fcoms
cmp
lgdtl
add
jl
cmc
add
xor
jl
sub
sbb
inc
mov
and
adc
pop
adc
push
faddl
jne
adc
push
inc
push
dec
inc
mov
mov
xchg
ss
sub
or
xor
daa
lret
or
xor
and
xor
push
dec
test
cld
adc
loopne
ret
pusha
test
xchg
push
sarl
add
inc
ret
mov
or
sbb
and
push
adc
dec
add
inc
mov
add
add
inc
add
inc
cmp
mov
call
push
sbb
or
enter
push
aam
xchg
and
xchg
scas
mov
loope
xor
test
cmc
or
and
inc
test
add
mov
dec
sarl
pop
add
loop
add
or
pop
sbb
call
pop
lahf
sbb
dec
es
mov
dec
add
popa
push
inc
test
cwtl
call
in
sbb
pop
nop
orl
adc
lods
mov
mov
adcb
xor
jl
or
subl
test
dec
sbb
jl
test
mov
mov
in
xchg
mov
mov
and
add
inc
pusha
es
mov
inc
or
ds
inc
xchg
andl
pop
cmp
sbb
xor
scas
adc
cli
sbb
jno
inc
or
test
pop
push
cmp
aaa
push
mov
les
ret
mov
or
jae
adc
test
shrb
nop
push
in
and
add
lods
mov
mov
add
cs
adc
adc
js
lret
add
jne
push
push
mov
push
lock
cmp
mov
cmp
push
jo
cmp
and
add
inc
lcall
push
push
in
js
and
lret
mov
mov
or
repz
cmp
pop
or
push
ljmp
jnp
dec
add
xor
xor
std
mov
add
adc
or
and
xor
and
cmp
dec
negl
ficompl
or
movsl
aam
pop
sarl
daa
decb
push
xor
cmp
xor
adc
stc
bound
mull
push
arpl
jne
or
gs
fs
inc
and
cmp
jecxz
test
rcrl
mov
pop
pop
mov
movsl
sub
xor
cmp
mov
jns
popf
icebp
sub
xor
add
adc
push
push
jo
test
sub
or
mov
mov
mov
adc
dec
lret
pop
test
jns
adc
push
rcrb
inc
pop
daa
js,pt
mov
aaa
adc
push
jl
push
aas
xchg
pop
inc
mov
mov
or
lret
stc
dec
xchg
and
or
xor
add
pop
rorl
xor
in
ret
pop
dec
xor
rcr
testl
adc
sbb
scas
add
mov
xor
lahf
cs
pop
xor
in
mov
or
dec
adcl
enter
add
add
and
mov
test
mov
add
mov
inc
sbb
jl
inc
sbb
and
mov
movsb
sbb
pop
movl
mov
movsb
push
aam
add
jbe
scas
gs
dec
addb
cwtl
mov
cmp
jne
jns
mov
push
sbb
loopne
or
fcompl
xchg
add
add
sbb
aam
das
pusha
add
icebp
sbb
push
sbbb
adc
cmp
fdivs
adc
sub
pop
call
mov
icebp
mov
mov
inc
jmp
adc
add
mov
orps
dec
xchg
shll
pushl
imulb
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
ljmp
int
popa
jp
adc
cmp
cmp
je
mov
mov
adc
mov
inc
jmp
movb
mov
push
push
or
fs
pop
idiv
inc
repnz
ljmp
cmp
enter
inc
jle
xchg
cmp
pop
xchg
ja
sbb
lret
mov
dec
push
push
enter
cli
inc
stos
mov
mov
aas
rorb
mov
cmp
shr
add
sbb
dec
or
dec
inc
xchg
jl
xchg
push
lock
incb
xchg
in
sbb
add
iret
iret
in
stc
cmp
mov
dec
pop
push
sub
cmp
mov
lock
push
mov
pop
cmp
push
rcrb
lods
lahf
adc
enter
pop
dec
inc
mov
mov
dec
out
rolb
push
add
aaa
in
lea
sbb
sarl
and
add
mov
push
push
shlb
push
dec
ja
pop
outsl
cmp
fstl
test
jl
adc
xabort
pusha
stos
imul
push
cmc
pop
and
jl
dec
aam
pminsw
xchg
adc
pushf
mov
js
add
enter
stos
rcrb
xchg
push
push
lods
adc
int
dec
adc
pop
add
mov
mov
push
lret
gs
inc
push
xor
movsb
adc
pop
out
fs
cmp
daa
mov
sbb
xchg
js
daa
push
xchg
mov
mov
push
ret
into
ret
mov
jns
cs
enter
xor
sbb
dec
out
sbb
cltd
jne
xor
sbb
push
fs
pusha
sub
cmp
jns
call
sub
call
inc
lods
js
and
sbb
sbb
and
dec
es
pop
les
push
push
pop
xor
xor
dec
imul
enter
and
jne
jbe
jbe
enter
pusha
shr
jns
xchg
xchg
mov
jbe
dec
inc
sbb
imul
lods
loopne
test
and
notb
add
push
dec
in
mov
pushaw
mov
icebp
es
or
xchg
cld
daa
jns
ret
add
push
insl
sub
sub
push
sbb
inc
adc
rorb
and
leave
test
mov
dec
cwtl
dec
nop
pop
xor
leave
and
inc
xorb
int
leave
adc
lcall
mov
shld
test
cs
in
mov
or
iret
inc
or
fsubrs
mov
sub
je
adc
inc
mov
dec
push
xchg
push
sar
cmpsl
xor
add
mov
xor
xor
adc
jp,pn
fldl
iret
adc
mov
movb
in
fadds
push
rorb
adc
inc
imul
pop
shr
fldz
inc
xor
and
fcompl
sbb
data16
add
fmull
jp
scas
fildl
or
push
mov
mov
scas
push
in
fbstp
and
popa
add
cmp
movsb
pop
cmp
call
out
popa
xor
fidivrl
mov
pop
add
pcmpgtw
cmp
jns
cmp
or
mov
call
in
or
pop
arpl
imul
cmp
add
xchg
daa
and
pop
aaa
daa
jb
or
push
xchg
add
cmp
fcoms
or
xor
inc
add
sbb
cmpsb
jp
fsub
push
stc
or
or
or
lea
repz
and
dec
or
call
jle
repz
cmp
adc
mov
nop
pop
jb
mov
adc
mov
mov
shrl
stc
or
inc
jecxz
inc
aas
cmc
push
push
xchg
inc
or
pop
jp
xor
and
and
push
push
scas
sbb
cwtl
lods
adc
push
call
jl
or
fs
add
scas
mov
sbb
pop
mov
sub
pop
pop
dec
push
inc
bound
lock
sahf
jecxz
add
inc
pushf
fstl
pop
add
mov
jmp
neg
add
imulb
adc
cmpsb
mov
xchg
adc
dec
sarb
lcall
add
frstpm(287
pop
lret
js
sbb
and
and
mov
mov
xor
dec
xor
das
lea
adcl
je
xchg
cmc
sub
nop
inc
push
dec
fs
adc
cmp
pop
fisubs
mov
pop
xchg
insb
or
and
dec
dec
or
addr16
push
xchg
clc
cwtl
imul
test
scas
sub
mov
test
and
adc
sbb
and
test
push
sti
inc
pop
stos
ret
push
add
out
and
sbbb
push
les
stos
jb
pop
aas
or
sub
xlat
jbe
out
rorb
mov
add
loopne
lea
sarb
std
lods
mov
pop
ja
fcomps
outsl
or
jns
sub
add
ljmp
movsbl
lcall
pop
pop
cmpsb
clc
jge
lret
adc
jb
cs
aaa
loopne
in
stos
aam
repnz
push
jge
mov
int3
add
outsb
sub
cmc
loope
shrb
pop
imul
jno
inc
call
add
pop
incl
jl
xchg
flds
xchg
inc
jbe
test
sbb
ss
add
or
jmp
mov
outsl
cs
pop
std
adc
and
ss
fs
or
add
je
or
mov
adc
xor
or
cmpb
fisubl
mov
xor
sti
or
loopne
dec
movsl
push
and
sbb
jl
mov
push
imul
out
jmp
add
add
sbb
in
inc
imul
sub
ljmp
fisubrs
mov
xchg
iret
push
jp
cmp
enter
loopne
popa
jo
mov
xchg
movsl
push
movsl
jp
jmp
cli
lcall
js
int3
xor
in
rcll
test
aam
fsubrs
mov
icebp
iret
adc
adc
movsb
pop
pop
or
sbb
jmp
cs
ss
test
addl
icebp
or
or
or
push
cmc
cs
clc
into
sub
cwtl
or
adc
mov
inc
push
push
pushl
mov
adc
outsb
adc
mov
shrb
aam
cwtl
inc
sbb
int
andb
nop
loope
adc
pop
ljmp
fcmovne
faddp
mov
pop
dec
sbb
mov
and
pop
sbb
nop
fwait
xchg
inc
je
xchg
or
mov
pushf
das
xorb
pop
out
aam
in
idivb
sub
mov
mov
xor
les
xchg
dec
and
inc
cmp
mov
std
nop
add
mov
pop
xchg
mov
cmpsb
or
mov
push
push
cmp
aam
aaa
dec
add
xchg
movsb
jb
xor
cli
cmp
xor
mov
jbe
push
insl
pop
push
stos
push
daa
popa
jne
ja
add
jmp
out
xorb
mov
test
iret
adcl
jp
rorl
cmp
sub
aam
cmp
scas
pop
mov
dec
cmp
cmp
push
xor
ljmp
cld
mov
negl
cmp
adc
cmp
movsb
add
push
push
ret
push
insb
test
jne
adc
cmp
mov
add
add
jle
push
and
jmp
push
mov
cmp
push
jmp
xor
loopne
and
and
loop
inc
jge
and
mov
sbb
stos
add
cmp
push
inc
cli
adc
add
lret
add
ds
test
aaa
mov
or
cld
aas
je
xchg
mov
cmp
push
dec
xor
lret
sbb
push
mov
push
cld
mov
jne
push
std
in
aaa
mov
xchg
sbb
mov
sbb
es
sbb
int3
lods
add
adc
stos
leave
dec
xorb
adc
pop
inc
fs
add
adc
lock
movsb
int3
call
movsl
push
movsl
jne
outsb
ret
mov
shrb
fimull
fwait
add
sbbl
fstpl
pushf
add
pop
pop
mov
out
mov
clc
push
cmp
jne
and
pushf
cmp
roll
mov
xchg
mov
call
jae
pushf
aad
cld
enter
push
push
or
and
loop
mov
or
ret
jne
addl
sbb
mov
or
cwtl
or
test
aaa
push
or
xorl
leave
data16
cmp
mov
dec
xchg
push
mov
inc
loope
or
sub
or
xchg
sub
and
xchg
sub
movsl
push
sbb
sti
in
jle
cli
mov
xor
mov
mov
mov
push
leave
xor
mov
js
push
jno
and
dec
testb
icebp
aam
fmull
inc
in
addr16
in
test
or
mov
push
pop
xor
je
mov
aam
and
inc
lahf
test
and
add
or
mov
ret
lods
mov
in
ja
or
mov
cmp
push
push
add
loope
push
or
cli
es
inc
js
xchg
cwtl
rolb
push
loopne
adc
push
or
loop
adc
and
pusha
mov
test
add
mov
sbb
inc
lock
push
xor
sub
jbe
mov
mov
inc
sbb
popf
jo
es
jo
gs
xchg
daa
push
pushf
sbb
dec
add
add
or
rorb
jmp
call
mov
push
add
adc
ret
jge
sub
mov
jp
sbb
sbb
sbb
ljmp
aam
add
push
xor
push
mov
and
cmp
add
cs
sbb
push
loope
mov
mov
push
add
push
cltd
jb
and
stos
pop
push
or
or
mov
adcb
mov
xchg
jle
mov
cmp
adc
addl
jne
shl
movb
dec
inc
dec
cmp
test
dec
push
add
lahf
nop
fdivl
inc
sbb
jae
mov
js
sub
rcrl
inc
xor
add
jmp
mov
lret
mov
mov
fidivrs
clc
lea
push
es
push
negl
ret
mov
xchg
push
rclb
push
ret
test
push
pop
pop
pop
ret
lret
inc
stos
xor
or
cmc
push
mov
in
aam
je
dec
sub
dec
push
leave
sbb
add
dec
repnz
mov
pushf
or
cmp
lahf
push
mov
cmp
sbb
adc
add
sub
mov
and
jecxz
clc
pop
pop
and
fisttps
aam
pop
add
mov
arpl
hlt
rcl
push
idiv
out
jp
pop
xchg
ljmp
stos
add
je
enter
and
cmp
fstl
outsb
addb
sbb
orb
jae
andl
sarl
xlat
in
cmp
xchg
add
dec
mov
loope
out
jge
push
dec
fisubrl
adc
cmpb
jae
push
jne
or
or
xchg
and
adc
decl
test
mov
not
dec
ja
push
scas
pusha
and
adcb
rcl
xchg
xchg
inc
push
inc
and
adc
push
xchg
lret
cmpb
fsubr
imul
popl
je
pop
or
or
push
clc
cmp
and
push
cmp
push
dec
lcall
push
stos
or
xor
xor
inc
push
mov
push
inc
in
int
and
ucomiss
inc
dec
pop
add
nop
es
cmpsb
fiaddl
jl
cmp
cmpsl
pop
mov
pop
ret
lret
or
cltd
push
mov
cli
add
pusha
add
pop
pop
subb
into
inc
sub
popf
pop
inc
or
add
push
or
pop
xlat
orl
mov
push
lcall
out
add
movsb
lret
aaa
jmp
je
hlt
add
out
inc
test
cmp
sbb
mov
pop
cld
dec
and
add
imul
fildll
notb
push
jne
insl
sbb
movsbl
dec
jbe
fisubrl
cmp
mov
ja
and
andb
sarb
inc
pop
jae
pusha
ret
repnz
pop
mov
insb
or
fstpl
mov
testb
stos
inc
pop
jge
cmp
dec
mov
xor
or
pop
sti
or
insl
jne
cmp
out
jb
test
sub
push
or
inc
stos
add
and
add
or
sub
or
dec
push
cmp
xor
dec
mov
inc
gs
jmp
push
lods
pushf
adc
mov
loop
sahf
das
js
aad
lds
mov
ds
mov
or
pop
call
add
out
jb
adc
enter
add
and
xor
mov
xlat
pusha
mov
loopne
pop
or
sbb
and
cmp
mov
scas
cmp
or
xchg
add
rcr
std
sub
jo
stos
repnz
loop
push
push
xchg
adc
mov
add
loopne
inc
loope
movb
sbb
jae
xor
sub
fwait
pop
jbe
dec
cmp
in
fwait
pop
push
scas
inc
scas
push
inc
xchg
inc
xor
sbb
jno
cs
push
ljmp
add
mov
loope
push
pop
nop
mov
jl
nop
adc
add
in
in
ret
mov
push
add
insb
test
mov
mov
dec
je
inc
push
mov
imul
mov
xchg
or
leave
mov
mov
into
and
pusha
xor
ja
pop
and
subl
jbe
fbstp
leave
cwtl
fwait
cmp
add
push
add
sub
and
sbb
dec
and
std
xor
popf
and
loopne
mov
pusha
scas
push
lods
push
sub
cmp
pop
in
iret
cmpsl
xor
adc
adc
jo
inc
shrl
testl
fildl
dec
lret
shll
insl
or
jp
sar
mov
lea
test
sub
dec
es
adc
jmp
lds
sub
cmp
in
daa
leave
jecxz
lods
dec
and
or
sbb
sub
sub
xor
cmp
mov
xor
lcall
xchg
in
lods
nop
pop
aas
mov
or
cmp
repz
pop
inc
aam
sub
jl
pop
push
sbb
pop
sub
sbb
andb
cmc
sub
outsl
or
ret
mov
lods
test
add
jns
insb
out
xchg
xchg
push
add
lahf
and
xor
cwtl
sub
inc
test
les
xchg
push
mov
sub
add
jo
or
mov
in
add
add
jns
pop
push
test
xchg
adcb
aas
push
mov
shrb
mov
orl
popa
xchg
shr
push
aad
ds
dec
jae
lahf
or
mov
lret
insl
jl
test
stos
xor
dec
ret
jmp
pop
sbb
popa
and
or
adcb
add
rolb
sub
push
subl
rorl
push
add
jmp
jne
jno
xor
inc
jns
dec
fnstenv
push
ret
fs
mov
add
int3
add
sub
xor
pop
dec
lret
lods
cld
mov
add
push
sub
pop
or
lods
cld
mov
addb
das
das
sbb
dec
add
mov
xor
loope
add
fidivs
add
push
and
scas
repnz
dec
cmp
test
lret
adc
insb
lods
xlat
mov
xchg
mov
incl
push
rclb
pop
xor
sbb
mov
jnp
inc
xor
adc
add
out
outsl
jne
gs
cmp
pop
fsts
out
jns
nopl
insb
add
sbb
std
or
decl
sahf
sub
rorl
adc
mov
nop
or
ds
cmp
dec
or
add
popa
imul
pop
push
mov
clc
cmp
nop
bound
aas
or
jg
sbb
dec
loop
in
lahf
mov
inc
outsb
mov
repnz
movsl
push
mov
or
jo
mov
add
push
loope
loope
dec
pop
psubw
ja
inc
imul
sbb
mov
loopne
xchg
add
mov
loopne
gs
stos
test
js
push
sbb
sub
xor
jbe
add
dec
push
pop
xchg
int
sub
inc
fdiv
icebp
mov
icebp
jb
jmp
push
mov
ds
add
xor
or
popf
ret
dec
jl
jne
mov
je
push
mov
cmpb
movsl
stos
mov
add
in
into
jne
or
sbb
inc
and
pop
std
mov
mov
sub
mov
into
pop
xchg
add
fists
dec
add
out
mov
jmp
adc
jo
rclb
movsl
out
addl
std
test
add
dec
test
xchg
insb
pop
fiaddl
jns
es
add
pushf
dec
sub
andl
cmp
and
add
mov
loop
rorl
inc
fmuls
test
and
fs
fwait
pushf
adc
test
sub
icebp
mov
push
cld
std
cs
sub
pop
inc
pop
add
test
mov
push
or
cmp
push
call
lock
mov
add
xorb
add
call
int
movsl
les
xor
pop
sarb
or
xor
push
mov
dec
xlat
jge
adc
sbb
int3
and
sbb
scas
add
mov
notl
hlt
inc
pop
sbb
mov
mov
dec
add
pop
push
pusha
mov
xchg
shll
pop
push
push
std
or
and
push
mov
inc
or
ret
clc
rolb
dec
sarb
jne
mov
push
push
mov
mov
jns
les
popf
enter
stc
or
rolb
out
cmpl
stos
mov
das
dec
rcrl
push
mov
stos
scas
inc
cmp
adc
add
into
insb
sub
rclb
mov
lret
imul
adc
jb
inc
lea
mov
cmpsl
xor
dec
ret
insl
or
xor
js
sub
mov
cli
orl
sbb
mov
scas
cmpl
pushl
fidivl
jmp
popa
fwait
sbb
adc
ds
movsb
lock
jecxz
inc
and
pop
xor
fstps
les
push
inc
dec
mov
rorl
push
push
aaa
dec
lea
pushf
mov
add
leave
pop
pop
popa
push
lea
or
add
addl
iret
in
sbb
pop
add
inc
jmp
pushl
push
add
pusha
xlat
and
stos
or
faddl
jo
xchg
and
push
mov
iret
inc
adc
dec
imul
repnz
in
rorb
mov
testb
and
test
xchg
aam
fdivs
imul
shrb
test
pop
mov
adc
enter
insl
lret
std
in
adc
push
shl
les
sub
sbb
push
mov
sub
push
push
or
and
rclb
imul
mov
ret
mov
arpl
popa
daa
fisubs
cwtl
mov
iret
mov
sub
sbb
fidivrl
sbb
loope
mov
leave
ljmp
lods
insl
fdivl
or
shlb
aaa
jnp
dec
push
lcall
xchg
dec
test
inc
or
stos
mov
xchg
popa
push
jbe
fcoml
test
sub
adc
sbb
into
dec
cmc
ljmp
mov
bound
test
and
js
sbb
xor
and
sbb
push
adc
fists
aad
incb
lock
mov
jae
shl
ljmp
pop
xchg
inc
and
push
adc
shrb
sbb
mov
and
fmul
outsl
mov
add
sbb
adc
push
push
out
push
push
inc
mov
or
pop
loopne
insb
add
popf
pop
xor
xor
lock
push
filds
es
lcall
es
lret
push
aam
and
jns
or
add
push
insl
and
dec
leave
outsb
push
faddp
cmp
inc
inc
sbb
test
adc
or
inc
and
test
add
pop
jnp
adc
push
movsb
mov
ret
push
inc
dec
adc
ljmp
shr
mov
xchg
shrb
inc
pslld
sub
xor
sub
aam
mov
push
test
or
in
in
jmp
fwait
dec
movsl
ljmp
push
lods
fdiv
xor
popf
cmp
pop
out
lret
nop
add
inc
add
ss
pop
xor
push
push
sbb
mov
jno
push
push
push
lods
or
subl
cmpb
insl
loopne
sbb
clc
lock
idivb
add
xor
jae
shlb
pop
loopne
add
mov
inc
loop
pop
subb
in
nop
sbb
mov
fistpll
shrl
ret
push
and
xchg
rcrb
push
leave
adc
xchg
cmp
adc
pop
ret
xor
insl
inc
andl
scas
dec
movl
in
mov
int3
adc
rorb
pop
sub
ret
xchg
out
mov
pop
imul
insb
leave
outsb
mov
lods
cmpsl
hlt
add
lcall
add
or
ss
mov
adc
inc
add
adc
push
pop
adc
and
repnz
xchg
lock
lret
jl
hlt
mov
dec
push
push
and
jge
and
adc
sbb
xorb
or
out
lahf
mov
pushf
or
in
cld
aam
lcall
mov
rorb
xor
in
lret
dec
test
or
fiadds
jmp
test
nop
adc
jns
dec
addr16
adc
test
add
out
fstps
pop
shll
or
mov
imul
mov
mov
xchg
movsb
mov
pop
and
lock
xor
mov
dec
hlt
jne
xchg
nop
inc
ja
push
add
lea
lods
and
lea
and
adc
in
push
jb
xor
test
nop
or
or
outsb
sub
les
inc
mov
jmp
sbb
test
imul
aam
cmp
mov
rclb
test
pushf
fildl
loope
test
addl
insb
jmp
adc
push
in
jb
fiaddl
and
rclb
insb
pop
or
dec
bound
shlb
pop
adc
jb
sub
lret
rep
out
mov
push
mov
aam
loop
cs
andl
rorl
dec
pop
and
adc
loopne
mov
adc
mov
lcall
ja
jno
lods
cmpsl
push
adc
cmc
mov
xor
and
adc
insl
xorl
sub
mov
lcall
bound
cmpsl
andl
cmp
in
sarb
gs
jne
and
jmp
bound
in
jmp
jne
adc
push
shll
mov
adc
out
push
sbb
mov
xchg
adc
and
roll
ds
push
addl
add
pop
add
adc
inc
mov
add
iret
pop
dec
mov
cmp
out
xchg
sbb
jmp
ss
in
adc
loope
inc
sbb
in
mov
xor
ret
loope
pusha
pop
mov
push
adc
aaa
jns
cmp
lcall
jmp
dec
cmp
push
aas
jle
jo
push
mov
xchg
dec
jle
stos
mov
int
idiv
add
neg
pop
sbb
pop
inc
inc
push
inc
outsl
adc
and
loopne
mov
dec
incl
push
fwait
leave
inc
add
mov
pop
pushl
mov
xor
sbb
js
das
adc
inc
add
mov
sbb
push
jns
daa
cmp
cmpsb
movsb
mov
sti
repz
push
sub
lret
cmp
mov
jne
mov
or
jb
inc
ret
je
jb
mov
push
hlt
inc
lds
mov
test
sub
add
xor
xchg
push
pop
adc
psrad
ret
xlat
mov
ficoml
mov
add
push
hlt
pop
adc
dec
cmp
mov
in
adc
addb
cmp
sbb
adc
adc
hlt
xchg
scas
and
xor
xchg
push
cmp
std
adc
pop
clc
jne
loopne
jg
pop
jmp
cmpl
pop
and
sub
ljmp
and
mov
push
cmp
mov
xchg
clc
lods
nop
cmpl
mov
fsubrs
sbb
push
adc
popa
fmull
out
lcall
mulb
dec
adc
fwait
lahf
xchg
pushf
rcrb
push
lock
cmp
or
push
jg
inc
mov
pop
inc
inc
sbb
push
sbb
orb
cmp
cmp
jge
push
push
mov
inc
mov
imul
sbb
mov
divb
shr
enter
mov
sub
dec
mov
add
push
pop
add
in
or
xchg
xor
addl
repnz
lea
rclb
inc
fadds
and
sbb
push
fmuls
sub
or
mov
or
loopne
test
loopne
mov
mov
jp
sub
xchg
cmp
jecxz
stos
adc
push
jecxz
mov
inc
cli
add
or
sub
dec
fnsave
xlat
sbb
lock
cli
adc
and
mov
push
cwtl
push
mov
mov
dec
mov
addb
sub
enter
cmp
jbe
ror
lea
push
and
stos
lahf
shr
out
test
mov
in
mov
mov
jo,pt
adc
vmread
push
mov
and
jecxz
ret
in
or
push
or
insl
shl
push
hlt
sahf
scas
fisttpll
pop
dec
ret
cmpsb
push
sub
subb
lock
mov
inc
mov
inc
sbb
stc
lock
push
jl
cmp
jo
popf
fldt
pop
jp
adc
pop
cmp
push
movsb
xor
push
pop
mov
daa
push
daa
cmp
out
sub
ljmp
mov
mov
fisttpll
jns
push
cmp
adc
adc
in
lds
add
cmpl
sbb
ret
insl
xor
rolb
test
push
loop
cld
sbb
hlt
or
cmp
mov
mov
push
shll
mov
ret
fildl
jmp
std
pop
inc
mov
sub
repnz
cs
cld
mov
and
add
aaa
aaa
js
test
pop
mov
sti
rep
data16
gs
jmp
add
cld
movsb
mov
push
sbb
aas
std
decl
mov
adc
ljmp
or
mov
push
xchg
filds
movb
adc
cmpb
hlt
xor
mov
push
adc
jnp
loop
mov
pop
movsbl
xor
add
ss
push
xchg
add
and
jbe
fcoml
cld
je
push
push
ret
pop
sbb
push
or
dec
lret
mov
mov
cmpl
mov
xor
sub
test
xor
inc
add
or
mov
mov
mov
fsubs
subl
insb
or
and
or
outsl
xchg
pop
adc
sbb
mov
inc
data16
movsl
lahf
xor
sub
jbe
inc
adc
pop
dec
dec
or
add
add
imul
lock
adc
inc
test
inc
movsl
add
rclb
xchg
mov
clc
clc
dec
daa
sbb
fsubl
fildl
xor
nop
sbb
leave
leave
dec
jnp
jo
push
add
add
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
mov
push
mov
stos
lds
loop
testl
and
sahf
out
ficoml
push
pop
data16
jbe
jns
out
xchg
jns
out
lods
mov
mov
rol
rcl
fidivrl
out
jmp
lahf
out
std
add
cmp
adc
sbb
or
lahf
jge
add
mov
pop
or
and
or
or
push
movups
adc
adc
push
test
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
or
cld
repz
sbb
inc
das
ret
sub
sub
andb
clc
dec
dec
lcall
mov
idivl
mov
inc
or
sarl
pop
das
ljmp
js
xor
fdivs
sub
test
adc
fisttpl
lea
xchg
shll
cld
imul
jle
iret
les
push
adc
mov
jle
nop
push
inc
cmp
jbe
fisubs
push
mov
ret
sub
and
cwtl
inc
or
push
daa
mov
ja
rcrb
mull
test
mov
mov
mov
or
lods
jmp
xor
push
xor
enter
lods
jno
mov
xor
sub
pop
mov
adc
aam
mov
adc
or
neg
add
jp
inc
enter
fs
mov
nop
addr16
or
sub
push
sahf
sbb
sti
add
repnz
add
push
inc
enter
and
inc
stos
pop
sbb
or
adc
dec
loop
jne
and
sbb
iret
pop
inc
cmp
push
xchg
or
pop
mov
aam
repz
mov
mov
or
mov
adc
jne
jmp
mov
inc
mov
les
das
and
ret
insb
fstl
push
icebp
push
mov
cmp
in
dec
jae
sbb
inc
push
xchg
aaa
mov
or
test
lock
arpl
call
push
xchg
xor
enter
jg
test
orl
push
sahf
adc
pop
pop
and
jb
push
sti
movsb
pop
pop
xlat
mov
xor
ss
bound
sbbl
add
sub
mov
test
out
push
push
sbb
stos
or
push
and
xorb
int
push
inc
daa
xchg
pop
inc
jmp
inc
ja
pop
scas
add
sbb
xor
or
jmp
inc
popa
push
xchg
sbb
ror
xchg
xchg
inc
fs
loopne
push
and
mov
xchg
popa
add
addr16
mov
xor
or
sbb
push
dec
dec
inc
stc
or
inc
imul
lds
xchg
cmp
dec
xor
repz
lock
push
dec
imul
lock
clc
adc
pop
inc
or
inc
mov
or
fnsave
or
fsub
sub
adc
xchg
inc
push
or
sub
pop
pop
push
dec
mov
test
shll
sarl
add
xor
fbld
mov
fdivs
pop
xor
je
push
mov
inc
sbb
push
push
pusha
inc
pop
jmp
push
add
xchg
dec
cmp
je
popf
enter
rol
or
xor
mov
cmp
rcrb
fwait
mov
dec
mov
pop
push
test
cmp
movsb
jmp
aaa
hlt
jecxz
das
cmp
out
dec
cmp
mov
xchg
cmpsb
rcrb
mov
das
les
add
push
xchg
int3
push
cmp
test
gs
rorb
enter
imul
lods
imul
cmp
cwtl
add
add
inc
and
inc
pop
inc
adc
andl
loope
stos
adc
lret
jbe
jo
mov
movsl
mov
xor
lock
icebp
jne
dec
enter
ret
add
adc
jmp
xchg
sbb
faddl
les
stc
testb
inc
mov
and
xchg
dec
dec
xor
mov
loop
je
nop
push
adc
jmp
loopne
cmp
and
jo
js
mov
roll
sbb
and
enter
loopne
leave
xchg
or
shl
and
testl
enter
add
or
imul
xor
and
add
sti
ret
and
sbb
mov
jp
cmp
adc
add
push
add
jp
cmpxchg
fwait
xchg
pop
push
push
push
or
pop
push
push
or
sub
mov
add
mov
and
out
adc
ss
fwait
mov
stos
mov
insb
and
mov
call
ljmp
pop
push
mov
cmp
rolb
and
rcrb
xlat
add
mov
adc
je
leave
in
pop
jle
pop
mov
imul
imul
js
je
test
mov
push
sub
shl
push
lock
add
add
lods
pop
fidivs
movsl
push
xchg
adc
shrl
fdivl
loope
ret
insl
test
in
sub
ja
jmp
iret
pop
pop
ret
jge
pop
rorb
je
sbb
repnz
in
add
push
arpl
gs
inc
and
inc
xor
stos
test
cmp
add
dec
sub
nop
mov
cltd
or
inc
or
add
add
addr16
popa
lret
pop
dec
mov
adc
push
push
stos
pop
sbb
je
in
jmp
add
outsl
push
xorb
or
cmp
sbb
add
push
pushf
and
fsubr
dec
push
int
mov
cmpsl
xor
mov
rcl
sbb
ljmp
repnz
push
push
filds
sub
pop
jne
pop
jmp
cmp
je
mov
inc
push
adc
mov
lock
mov
jge
pop
push
xor
jbe
add
sub
lock
sbb
push
add
jns
in
or
mov
push
push
jb
mov
inc
xchg
movsl
jo
jbe
inc
jbe
ret
fildl
push
mov
inc
adc
mov
popf
cltd
jne
xor
cmp
sbb
add
jns
int
push
lods
mov
or
adc
pop
paddq
mov
jl
xorl
mov
xchg
push
dec
ret
pop
mov
pop
and
and
inc
sub
icebp
adc
and
push
stos
popa
loope
and
out
push
adc
add
pop
inc
pop
inc
mov
popa
loope
dec
push
dec
mov
xchg
mov
pusha
mov
sbb
or
cmp
xor
dec
jns
inc
shl
cmp
nop
dec
push
sbb
sub
jnp
dec
gs
or
sub
or
and
imul
push
push
in
sbb
or
adc
shrb
repz
inc
loope
dec
adc
sbb
push
push
loope
popa
pop
sub
fidivrs
or
in
inc
or
ds
sbb
dec
cld
inc
add
adc
inc
add
enter
inc
pop
inc
es
push
inc
cs
pop
jo
insb
inc
enter
je
jl
cmp
push
mov
add
test
inc
push
add
mov
lahf
jb
outsb
xchg
nop
xchg
pop
push
push
cwtl
fwait
movsb
fwait
movsb
sbbb
cltd
movsb
test
mov
or
es
cli
push
mov
inc
addb
int3
lock
or
inc
incl
add
pop
add
sbb
icebp
mov
femms
mov
test
cltd
cmp
je
sub
mov
and
or
sti
add
push
cmp
jl
sub
jns
xchg
inc
mov
add
js
idivb
push
or
addl
add
icebp
xor
addb
mov
mov
lods
sub
shrb
pop
inc
and
sbb
mov
pop
jl
jmp
out
xchg
add
inc
mov
lahf
loope
sbb
xchg
mov
sub
and
cmp
and
and
xchg
sbb
adc
nop
outsl
and
add
sbb
xchg
inc
rorl
xor
nop
or
push
sahf
andl
insb
je
ret
cmp
js
cmp
add
jl
outsb
sbb
push
fwait
cmpsb
bound
mov
xchg
int3
sub
or
push
jno
insl
call
xchg
push
ret
xor
jle
sub
push
pop
cmp
push
mov
dec
add
jle
mov
jle
es
lock
cli
outsl
mov
fistpl
sbb
mov
jo
mov
maxps
mov
pop
aaa
cli
xor
sbb
testl
into
or
sbb
sub
cmpb
jp
cld
jg
mov
js
add
pop
jne
push
inc
pop
inc
push
and
adcb
jo
ljmp
inc
cmpl
cmp
cmp
js
or
jo
movsb
aas
add
clc
mov
ljmp
or
push
adc
sbb
dec
adc
mov
mov
cmpsl
and
lock
inc
pop
ja
dec
add
lock
adc
xor
or
aam
dec
call
icebp
pop
popa
ljmp
push
test
xchg
adc
push
sub
loope
sub
jno
js
or
push
or
jbe
fwait
push
push
jnp
mov
sbb
ds
lods
jecxz
in
jge
ss
adc
mov
jne
stc
call
rclb
adcb
outsb
pop
cltd
popa
pop
inc
mov
test
dec
daa
cmp
clc
aas
jne
push
test
mov
scas
rorb
jl
mov
mov
add
dec
inc
lock
loopne
dec
pop
call
rol
cmp
cltd
inc
inc
insl
pop
adc
in
ss
inc
ja
push
neg
cmp
add
mov
or
jne
mov
fadd
mov
subb
mov
ss
or
add
or
loop
push
or
outsl
push
push
inc
int
or
jmp
inc
adc
xchg
rorl
test
lods
jne
cmp
inc
pop
adc
sub
arpl
sbb
xchg
lcall
or
or
sub
and
loopne
push
xor
pop
aad
pusha
mov
int
inc
or
mov
test
mov
out
testl
lods
mov
add
cmpl
push
ficomps
adc
cmc
inc
scas
or
xor
repnz
pushl
shrl
popf
push
adc
xor
adcl
popa
cmpsl
adc
and
jnp
imul
inc
clc
inc
push
jmp
jge
and
mov
inc
je
movzbl
in
mov
push
cld
or
mov
inc
xor
jge
cwtl
sbb
adc
xchg
dec
adc
xchg
ret
daa
hlt
jmp
lods
cmp
sahf
push
push
sbb
mov
imul
movsb
sbb
jb
add
or
or
in
mov
clc
xchg
and
nop
dec
xchg
push
rcll
insl
mov
lock
cmp
jmp
pop
insl
out
adc
xor
inc
jle
or
mov
and
cmp
or
or
inc
fsubs
mov
sbb
test
mov
add
mov
inc
sub
scas
sbb
jg
mov
lods
xor
jne
aam
adc
mov
aam
push
jne
outsl
mov
mov
les
mov
icebp
sbb
inc
movb
or
cmp
pop
xor
dec
ret
loope
roll
loope
call
dec
adc
xchg
sub
dec
addps
ljmp
jmp
inc
mov
xor
cmpsl
pushf
sarl
pop
jp
mov
adc
sub
insb
inc
rcrb
or
xor
xchg
leave
out
and
xor
push
daa
sbb
fists
push
and
xchg
mov
and
mov
push
pop
add
bound
push
fiaddl
in
push
rcrb
push
inc
pop
cmp
xchg
sbb
loope
sbb
sahf
jnp
inc
add
mov
sbb
lock
cs
jns
xchg
inc
outsl
and
test
bnd
push
addb
clc
xor
xchg
imul
pop
dec
dec
push
outsb
or
mov
sub
ja
push
add
fstl
or
fnstsw
dec
sbb
pop
fsubr
pop
faddp
dec
add
insb
push
or
pop
dec
adc
loope
sbb
add
or
hlt
xor
push
xchg
dec
jo
sub
dec
lock
push
or
xor
lock
fidivrl
inc
clc
or
cmpsb
adcl
test
add
xchg
sbb
xor
xchg
push
in
add
push
pop
sub
add
add
sub
popa
fwait
push
mov
es
mov
in
mov
js
test
xchg
xor
into
lret
cmp
adc
pop
push
or
clc
xchg
mov
xchg
insb
xor
incb
add
pop
push
call
outsl
jge
outsb
imul
push
pop
cmp
pop
push
in
mov
lea
scas
inc
adc
push
mov
repz
in
loop
mov
dec
sti
fimuls
enter
and
nop
cmp
loopne
in
nop
sbb
pop
lahf
jecxz,pn
pop
add
call
push
and
mov
stc
aam
sbbb
loope
jo
xchg
ret
imul
aad
jne
rclb
movb
loop
mov
cmp
arpl
mov
aaa
sbb
adc
notb
pop
xor
mov
sbb
xchg
ret
add
mov
mov
cs
lret
ret
mov
test
push
fistpl
pop
and
adc
addb
xor
pushf
push
testl
pusha
fdivrl
and
and
jecxz
ret
in
adc
cli
das
test
fcmovu
lret
sti
in
push
fldl
sub
pusha
sub
and
sti
add
and
add
or
aaa
add
popa
movsl
sub
ljmp
movb
push
fiadds
cli
sbb
jb
push
sub
cmp
and
pop
jb
cmp
shlb
or
je
or
mov
cmp
xchg
add
adc
fisttpl
adc
cld
pop
ret
js
call
cs
push
mov
testb
mov
adc
mov
sahf
mov
push
stos
jo
inc
jne
js
cli
icebp
test
ror
or
sbb
inc
inc
dec
leave
je
in
ja
push
inc
lea
and
test
jl
pop
adc
jo
sub
dec
in
fistl
ds
sarl
daa
sbb
and
dec
cmpsl
sbb
jbe
or
sub
mov
or
or
jno
mov
sbb
adc
repnz
cwtl
out
ljmp
in
movsb
divb
inc
inc
pop
push
es
adc
mov
ja
test
pop
adc
adc
mov
mov
push
rcll
lods
adc
add
cmp
add
sub
or
adc
pop
hlt
cwtl
js
and
addl
xor
fisttpl
pop
dec
les
mov
pop
fsubrs
je
xor
loope
dec
jl
jmp
sbb
adc
sub
jno
cmp
imul
add
hlt
sbb
or
ljmp
dec
cli
mov
ret
imul
ret
and
pop
ret
lret
arpl
aam
sti
fiaddl
in
lcall
or
jb
cmpps
jg
and
adc
push
mov
jbe
ss
stos
dec
push
dec
aas
dec
cs
cmc
push
push
dec
jl
jl
in
inc
add
push
push
aam
lcall
pop
das
push
enter
mov
push
push
dec
stc
or
dec
push
test
les
ds
cltd
dec
xchg
outsb
and
je
jbe
cld
idivl
adc
add
ret
in
inc
in
enter
dec
inc
in
shrl
push
dec
cltd
push
pop
and
sbb
push
mov
rcrl
push
push
pop
dec
loop
mov
daa
mov
aaa
shlb
dec
jns
mov
add
test
jmp
and
push
xchg
cmpsl
sbb
testl
xor
adc
inc
stos
mov
cs
and
sbb
movb
jae
cmc
rorb
loop
sbb
add
adc
mov
fwait
hlt
call
lcall
inc
inc
lock
daa
sub
push
dec
mov
fwait
lret
pop
outsl
add
jne
pop
mov
js
push
adc
lock
sbb
push
cltd
dec
enter
lret
mov
out
in
inc
xor
por
mov
jae
and
repz
adcb
pop
pop
shlb
or
ljmp
sub
inc
fcompl
sbb
inc
aam
lea
fcoms
lock
add
xchg
or
aas
repz
sarl
adc
clc
dec
scas
dec
xchg
mov
pop
and
push
sub
test
call
cli
pop
imul
add
mov
or
inc
nop
xchg
faddl
test
nop
movsb
out
xlat
xchg
dec
pop
cmc
sub
popf
or
xor
call
mov
loop
in
or
call
jno
mov
add
arpl
cltd
lock
mov
js
adc
ror
add
loop
out
sahf
adcl
xor
cwtl
mov
push
sti
xorb
mov
dec
ret
imul
mov
add
nop
jge
pop
enter
mov
jge
pop
int3
add
inc
imul
inc
in
cmp
jmp
ss
mov
mov
xchg
pusha
in
push
insb
add
mov
push
xchg
movsb
cmpl
push
add
inc
popa
sub
ret
push
fiaddl
mov
imul
mov
xlat
xchg
and
jnp
adc
push
pop
xor
adc
ljmp
jns
subb
dec
adc
addb
adcb
jne
dec
or
adc
jmp
out
and
push
mov
pop
add
out
xor
xchg
scas
ret
imul
inc
and
pop
and
inc
add
push
or
gs
mov
push
adc
movsb
test
roll
or
or
jae
or
shll
popf
scas
inc
rorb
mov
inc
push
jno
push
dec
adc
orl
lock
mov
xchg
add
or
aam
icebp
and
mov
pop
push
fs
or
dec
mov
daa
cmp
rcrl
add
mov
leave
repz
push
pop
pop
insb
jg
add
add
in
jae
xchg
push
js
fistl
mov
xlat
and
pop
xchg
in
inc
adc
cmpsl
mov
push
sbb
adc
in
addr16
jmp
sub
jl
mov
out
push
xor
clc
xor
icebp
incb
or
hlt
nop
xor
loopne
fstps
jo
add
loopne
pop
bound
ss
push
push
test
push
movsb
adc
out
movsb
data16
testb
or
push
xchg
in
xchg
jg
inc
inc
fsubrs
icebp
adc
push
adc
sub
add
data16
test
push
push
cmp
cs
push
sub
mov
iret
addr16
pusha
sub
lea
pop
push
push
lret
mov
jle
or
or
es
enter
loopne
mulb
or
lret
rcl
push
add
sub
fnstsw
inc
imul
insl
test
movhps
in
mov
cmp
push
adc
push
imul
lahf
jbe
mov
push
lock
cwtl
and
imul
sbbl
sti
and
or
addr16
scas
fs
mov
mov
xchg
in
pop
sahf
outsb
orl
mov
mov
add
mov
pop
mov
pop
push
sub
into
sub
mov
imul
mov
xchg
roll
xor
adc
and
stos
cli
sbb
ret
es
add
mov
movsb
sbb
push
xor
pop
dec
mov
out
iret
int3
pop
mov
jo
test
sbb
xchg
lea
test
pop
clc
jecxz
test
add
js
ret
enter
mov
cwtl
dec
and
add
mov
jle
push
ret
icebp
jmp
cmp
sub
ljmp
pop
movsl
pop
js
lcall
or
gs
lods
verw
pop
push
sbb
xor
out
push
add
mov
dec
jb
test
adc
inc
adc
dec
cli
pop
push
pop
mov
pop
push
adcl
addr16
movsb
jle
lcall
jmp
mulb
das
xchg
nop
add
xorb
leave
mov
aam
loop
push
jne
test
inc
ja
mov
push
or
inc
inc
pop
or
dec
mov
mov
cmpsl
push
or
movsb
movsl
sub
add
fnstcw
inc
mov
lea
std
adc
xor
mov
or
adc
inc
test
andb
cmp
push
dec
arpl
dec
fldenv
adc
dec
push
jne
add
cmp
sbb
push
xor
or
sbb
xlat
and
xchg
clc
cli
jnp
sbb
cwtl
adc
jmp
je
popf
adcl
lcall
cmp
je
mov
adc
xchg
add
and
sub
jb
xlat
inc
add
mov
sub
idivb
test
push
out
addb
scas
lods
mov
es
hlt
or
fdivrl
pushf
pop
bound
xchg
outsl
in
movzbl
sbb
cld
das
das
add
lds
mov
adc
and
jno
insb
push
jl
dec
lret
dec
push
or
test
sub
push
add
incb
jns
xor
sbb
mov
mov
scas
cmp
inc
test
js
clc
add
je
push
cmpb
pop
lcall
adc
aad
xor
jo
fs
in
jne
pop
mov
lahf
or
cmp
sbb
or
test
cmpb
inc
or
cmpsl
shlb
or
push
pop
xchg
add
mov
shlb
lret
or
jno
nop
sbb
sub
pop
jmp
out
rorb
push
aaa
enter
jne
outsl
dec
dec
inc
movsb
adc
push
je
or
je
ret
mov
std
sub
jne
mov
inc
shrb
dec
jnp
add
mov
rolb
inc
clc
sub
stos
sbb
mov
rolb
adc
cwtl
mov
mov
jo
push
stc
imul
add
jge
mov
mov
rcrl
pop
sbb
scas
arpl
inc
lea
sbbb
mov
pop
test
xor
sti
add
iret
pop
cmp
cmp
inc
mov
and
sbb
rclb
pop
aas
xchg
xor
setge
movsb
nop
es
pop
or
mov
test
pop
mov
lea
hlt
or
movl
ljmp
cmp
test
push
mov
lret
mov
fwait
pusha
js
sar
cmp
mov
mov
inc
divl
mov
test
sti
cmp
mov
cld
pop
cmpb
add
jmp
adc
insb
push
push
dec
nop
cmp
and
sub
dec
aam
adc
xchg
xorb
mov
xor
and
xchg
adc
push
jae
add
cmp
mov
rorl
in
rolb
aam
out
lea
loopne
fcoms
or
test
cmp
inc
jo
or
inc
cmpsl
sti
loopne
out
add
cld
or
lahf
loope
loope
movsl
mov
inc
idivl
sbb
dec
adc
imul
dec
sub
ds
cld
outsb
cmp
or
push
into
pop
popa
loop
les
jl
push
stos
xchg
jne
jnp
sub
fists
out
enter
call
and
enter
lea
sbb
jbe
add
lods
cmp
xchg
enter
cs
mov
rcll
and
mov
inc
pop
cmp
jg
sbb
mov
dec
js
setg
mov
push
add
mov
add
adc
sub
pusha
fistps
xchg
jecxz
aad
imul
outsb
mov
pop
inc
sbb
ss
pop
and
mov
push
inc
jle
and
mov
mov
nop
out
ret
out
pop
mov
mov
and
inc
lret
jb
das
test
rcll
or
test
push
gs
ljmp
jae
pop
or
cmp
ret
mov
out
lock
mov
mov
jp
adc
loopne
push
or
and
clc
jge
mov
sbb
sub
or
sbb
dec
mov
ds
push
push
pop
pop
push
fisubrl
in
jb
xchg
lods
mov
call
gs
rclb
push
adc
in
test
shll
imul
inc
cmp
loopne
mov
movsb
sbb
cmp
dec
clc
xor
mov
xor
and
das
push
sub
or
pop
pusha
ret
dec
cli
dec
xor
dec
or
call
repnz
imul
fldt
dec
adcl
fisttpl
scas
sti
call
loopne
add
mov
enter
add
loope
mov
mov
orb
popa
xchg
int3
adc
nop
mov
mov
adc
or
rorb
xor
mov
mov
ss
mov
sub
mov
sub
dec
pop
add
inc
xor
movsl
adc
pop
out
pop
clc
pusha
mov
jne
subb
sbb
dec
pop
fcoms
mov
subl
sub
and
push
dec
insl
and
imul
jns
dec
push
jmp
sub
pop
repnz
sahf
dec
fiadds
mov
xchg
or
inc
mov
push
mov
and
or
cmp
and
xchg
dec
inc
cld
xchg
rorb
xchg
or
add
rol
add
fsubs
sbb
xchg
inc
lock
xor
cmpsl
dec
xor
pop
mov
or
fisubrs
jl
sbb
pop
and
and
xor
xchg
jne
and
add
popf
mov
lods
cmpsl
mov
icebp
mov
mov
daa
xor
and
add
mov
test
das
and
ret
push
mov
dec
test
adc
test
popa
fmull
cmp
leave
iret
fs
addb
aas
inc
jp
mov
aad
ret
jg
mov
insl
adc
push
or
push
add
mov
jl
lea
jns
clc
pop
cmpsl
mov
and
pop
adc
pop
mov
ljmp
call
jbe
pop
pop
hlt
mov
push
mov
inc
sarb
xor
out
rcrb
or
pop
mov
test
sub
jne
dec
in
push
inc
inc
jmp
inc
fs
sub
lret
cmp
aas
cmp
hlt
sub
add
mov
xor
xor
push
test
inc
sub
repnz
or
sbb
sub
aam
dec
jmp
arpl
mov
push
pop
and
nop
es
push
add
adc
je
out
xchg
mov
push
or
sbb
xchg
and
push
pop
pop
lock
sbb
jae
pop
pop
in
mov
sbb
in
inc
outsl
sub
or
roll
dec
cmp
pushf
cmp
xchg
mov
sub
inc
jae
adcb
enter
push
inc
mov
ss
sub
jne
push
lods
inc
jns
inc
push
jg
push
mov
push
cmp
or
pop
add
add
push
mov
fcoml
jp
int
sub
rolb
enter
mov
jnp
jnp
in
aam
nop
nop
mov
mov
push
shll
imul
mov
mov
clc
or
je
mov
jl
or
outsl
add
int
ljmp
arpl
pop
sub
jp
mov
and
iret
xor
mov
pop
mov
andb
or
mov
mov
and
in
int3
push
xlat
sub
xchg
mov
int3
jne
jne
rorb
pop
test
mov
inc
test
gs
add
mov
dec
out
sub
out
gs
outsl
mov
call
add
cmpsl
xchg
in
inc
test
mov
cmp
sub
push
cmp
mov
inc
cmpsb
xor
aad
ja
scas
sub
cmp
xchg
xchg
xchg
jne
mov
jno
sbb
jbe
and
sub
push
dec
add
push
pop
inc
mov
cmp
bound
ficomps
test
pop
rorl
pop
add
xor
sbb
ret
cmc
xor
in
gs
setne
xor
inc
jmp
push
cwtl
les
jl
je
insl
or
inc
dec
fisubrl
dec
ss
popf
xor
test
mov
mov
dec
pop
cmp
cmpsl
scas
add
mov
sub
andb
sbb
int3
sub
int3
mov
mov
pop
jbe
divb
push
adc
jbe
cmp
dec
sub
push
push
ror
mov
mov
jl
in
dec
add
xor
rcl
push
xor
fstpt
fcomps
jo
adc
sub
jle
mov
dec
ja
and
lea
add
iret
mov
push
outsl
xchg
pop
push
shll
mov
mull
hlt
mov
out
mov
mov
add
ljmp
push
add
in
stc
and
cli
shr
xor
push
enter
cwtl
and
inc
adc
adc
fwait
dec
not
cld
clc
jmp
lods
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
jle
roll
pushf
pop
and
add
inc
push
adc
adc
adc
test
int
in
add
sub
pusha
add
xor
push
push
push
inc
inc
mov
add
in
add
mov
aam
lock
cmp
fimull
aad
cli
push
int3
fwait
jne,pn
push
mov
inc
loopne
addb
inc
jmp
dec
and
mov
lock
push
dec
scas
pop
and
jne
mov
inc
lds
add
jb
gs
fadds
pop
fs
std
cmp
mov
jmp
scas
add
jne
sub
xchg
add
xchg
adc
bound
inc
adc
insl
stc
pop
les
mov
push
push
xchg
cmp
and
iret
mov
and
scas
inc
loopne
inc
or
pop
dec
dec
mov
or
sub
loope
add
jnp
mov
push
push
pop
jl
pop
jmp
or
push
adc
adc
and
inc
cmp
and
or
cmp
pop
ss
pop
or
je
jg
iret
lcall
int3
and
dec
test
mov
push
push
repnz
in
xchg
rcr
push
xchg
add
fsts
mov
adc
lock
push
push
add
and
mov
and
add
nopl
or
cmp
sub
std
or
lea
xchg
mov
dec
xchg
adcb
adc
lods
es
adc
inc
sub
sbb
mov
add
popa
or
dec
aam
add
mov
nop
xchg
adc
ret
inc
mov
cmp
and
or
pusha
dec
pop
and
push
mov
or
mov
mov
or
shl
mov
xchg
and
mov
adc
mov
push
outsl
or
shl
sub
dec
dec
aam
adc
subl
sub
pop
sarb
pop
push
sub
sbb
lods
or
outsb
ja
jae
or
push
jo
push
push
xchg
je
movups
loope
sbb
je
aas
inc
push
mov
mov
pushf
loopne
sbb
in
cmp
cmp
adc
mov
fcompl
sbb
and
or
pop
xor
lock
outsb
mov
jmp
and
movsb
adc
dec
aad
and
add
push
cs
cmpsl
sub
sub
arpl
movsb
mov
push
aam
inc
cmp
jne
dec
enter
xor
dec
sbb
std
mov
test
cmp
xor
cmp
or
add
add
shll
sbb
dec
sahf
cmp
adc
or
inc
cmp
mov
xchg
add
fdivrl
or
or
shll
add
xor
inc
push
je
sbb
call
sbb
add
push
mov
xchg
es
or
mov
xor
imulb
xor
outsl
lds
inc
adc
dec
jbe
cmc
mov
shr
xchg
or
pop
mov
inc
leave
dec
popa
sub
stos
dec
sbb
lods
lea
dec
movsl
sub
mov
mul
lods
aam
and
xor
inc
andb
dec
add
push
xor
pop
jo
call
mov
push
in
repnz
daa
scas
es
sahf
ret
ficoml
test
dec
add
es
mov
jns
movsl
or
sbb
test
xchg
in
popf
pop
fidivs
adc
mov
cmp
sub
push
push
sbb
in
aam
shrb
mov
xorb
loopne
xchg
or
inc
sbb
xor
cmp
push
ss
movsb
xor
int3
in
jge
add
adc
dec
ljmp
pop
inc
jne
cmp
mov
mov
les
pop
imul
lods
jbe
push
push
dec
sbb
inc
adc
add
adc
ror
add
or
cmp
cmp
dec
and
sub
je
adc
jne
sbb
push
dec
add
sub
lret
mov
push
jo
cmpsl
in
or
jbe
lods
mov
repnz
test
add
loopne
mov
add
jmp
clc
scas
add
les
mov
inc
pusha
or
shlb
xor
push
add
lea
push
or
and
jmp
pop
insl
loope
fwait
lock
hlt
fisubrs
lock
cmp
outsl
adc
cmp
push
pop
jg
and
ret
call
fmull
jp
mov
dec
movsl
jmp
jmp
push
loop
cmp
push
pop
ljmp
movsb
dec
dec
lock
test
aad
and
pop
mov
jbe
psrld
popf
addl
sbb
shl
inc
adc
adc
out
cs
pop
add
pop
mov
stos
add
enter
loop
mov
or
and
sub
enter
cld
or
xchg
or
in
cmp
sbb
and
aam
dec
int3
daa
dec
rol
ljmp
mov
sub
sbb
add
dec
repnz
inc
repnz
and
add
dec
popa
int
fcoms
pushl
sub
cmp
jbe
dec
in
mov
cmpl
or
and
data16
movsl
cmpl
mov
ds
repnz
out
inc
aad
mov
rorb
test
sbb
nop
movsl
jno
movsl
push
in
push
sbb
xchg
stc
or
gs
arpl
es
call
sub
fldz
pushf
movsb
add
mov
lret
jne
push
jb
sub
mov
xchg
push
fstpl
xchg
pop
inc
sbb
jno
lsl
sbb
push
jo
and
xchg
add
shll
fs
popa
dec
or
push
in
fisttpll
fisttpl
sub
rclb
xchg
inc
dec
lahf
and
lret
add
movsl
xorl
pop
adc
xchg
adc
in
sub
inc
int
or
lea
pop
jge
inc
enter
fsubrs
xchg
pop
jle
cmp
push
insb
inc
rclb
and
jmp
aas
or
mov
and
xchg
sahf
sub
int3
int
push
pop
adcb
mov
inc
arpl
xchg
push
addr16
jb
bound
movsb
inc
repnz
add
push
std
ja
daa
aad
cmp
into
sub
inc
lea
push
fwait
and
ret
push
jmp
test
xor
pop
aas
sub
jo
pusha
daa
mov
xor
or
movsl
pushf
scas
xor
mov
jo
jl
mov
notb
outsb
jge
cmp
enter
pop
inc
cmp
sub
lcall
stos
sbb
sbb
stc
mov
bound
xchg
scas
dec
dec
or
int3
iret
push
mov
int3
jp
fistl
jl
adc
fs
fwait
shll
sbb
or
xchg
adc
jecxz
dec
enter
loop
pop
es
fidivrs
cmpsl
dec
testl
push
inc
adc
bound
mov
adc
jmp
adc
rclb
adc
fs
and
les
jbe
inc
and
adc
jno
pop
lock
dec
cld
inc
daa
fs
mov
xchg
bound
mov
ret
pusha
push
xor
int
mov
inc
mov
cwtl
push
les
and
clc
xor
mov
ret
ss
mov
mov
imul
mov
idivb
push
mov
jmp
out
sbb
xor
add
roll
add
ret
cs
sub
push
push
xor
in
dec
adcl
nop
out
add
cld
dec
dec
sub
xchg
sbb
and
xor
pop
push
int
push
movb
pusha
add
jo
mov
lods
gs
mov
pop
inc
mov
mov
push
push
sbb
jecxz
and
push
lock
shll
xlat
pop
cmp
shlb
repz
addr16
fbstp
hlt
jg
mov
test
mov
in
push
xor
adc
mov
inc
inc
mov
or
mov
inc
and
push
mov
add
bound
imul
in
push
stc
add
pop
pop
clc
repz
and
stc
mov
jmp
ror
push
add
popf
mov
push
outsl
push
sbb
jo
loop
or
mov
test
xor
loopne
nop
cmp
adc
jbe
outsl
add
test
pop
in
mov
mov
test
xchg
test
inc
sub
sbbb
aam
adc
lds
adc
push
in
addl
clc
dec
rorb
or
add
xchg
mov
sbbl
sub
mov
push
adc
jne
add
and
jbe
fsubs
xor
seta
es
inc
fcoml
daa
test
push
add
mov
sbb
nop
and
rcl
dec
jbe
shl
and
xchg
insb
mov
ja
clc
mov
je
push
push
jo
xlat
in
add
fisubrl
push
imul
pop
or
nop
repnz
xor
xchg
mov
push
jo
out
stos
sarb
add
cmp
mov
nop
mov
xor
push
xor
xor
std
call
jne
pop
in
or
inc
pushf
push
add
add
or
push
pop
int3
loop
mov
push
push
dec
inc
push
repnz
imul
xor
shrb
mov
dec
mov
mov
push
mov
push
fstl
add
pcmpgtw
inc
sub
aam
sbb
popf
mov
add
adc
int3
into
jp
fbstp
popa
shrb
fcomp
push
js
test
push
sub
pusha
mov
or
push
xor
xchg
mov
jmp
subps
push
add
loopne
mov
push
sbb
push
cmc
sbb
mov
int
in
pop
mov
mov
push
nop
lcall
mov
data16
insb
adc
ret
mov
insb
mov
push
hlt
dec
cmc
ret
imul
pop
aad
scas
jge
mov
movsl
in
add
lcallw
adc
adc
pop
cmp
xor
imul
add
add
fadd
add
xlat
cmp
or
les
cltd
lock
and
sbb
mov
mov
clc
mov
cmp
jo
dec
fcmovnbe
jo
pop
adc
outsb
test
mov
xor
cmp
pusha
mov
rol
mov
ror
xor
shr
xor
sub
inc
jnp
xor
shr
xor
add
add
add
mov
repz
iret
or
mov
push
or
and
xor
add
add
popl
pop
aam
sub
jge
add
adc
push
cwtl
repnz
cli
sti
jg
data16
jge
xor
and
and
xchg
test
xor
outsl
cmp
mov
repnz
repnz
sub
fsubr
mov
push
or
xlat
ret
subl
rcl
add
add
shlb
call
lret
aam
sbb
shll
xor
sub
scas
xor
mov
cli
mov
rol
rol
out
nop
cmpsb
imul
fdivs
rclb
loopne
and
in
call
in
shl
mov
cmp
in
push
cmp
repnz
repnz
push
bound
and
xor
les
subl
mov
xor
dec
rorl
loopne
loopne
add
xor
in
loopne
nop
xchg
in
loopne
cmp
cmpsb
cltd
xorb
mov
flds
in
sub
jo
int3
sti
test
ret
or
add
in
push
xor
and
mov
jle
loopne
or
push
into
add
and
pop
add
inc
adc
add
test
mov
push
pusha
fildl
jo
ret
push
jo
ficoms
add
mov
inc
daa
lcall
js
adc
adc
push
loop
mov
testb
cltd
sub
fadds
pop
jbe
dec
subl
fisubl
mov
or
clc
jp
push
and
mov
gs
fdivrs
inc
or
fs
call
in
xor
inc
or
insb
icebp
mov
xchg
jo
lods
push
clc
jo
cli
stos
xorb
inc
nop
pushf
aam
aaa
cmp
xor
rorb
inc
in
jb
xor
in
xor
cltd
lods
mov
add
inc
jo
aaa
cli
xor
xor
fcom
aaa
rorb
add
mov
call
add
jne
add
push
xor
and
cltd
add
push
dec
xor
in
movsb
push
inc
push
inc
lcall
dec
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
sub
push
xadd
or
movsb
sbb
dec
movsb
mov
and
sub
and
stc
enter
mov
or
stc
fcoms
adc
es
sbbl
push
imul
xor
push
stc
stc
stc
mov
clc
inc
pusha
aam
pop
dec
mov
push
jle
inc
dec
testb
xor
rcrb
fmuls
adc
adc
lods
xor
sbb
jo
adc
adcb
sbb
sti
mov
or
pop
es
outsb
or
push
out
pop
add
sub
mov
add
les
add
pop
lea
clc
pop
mov
pop
cld
sub
lea
pop
xor
push
xor
mov
notb
xchg
sarb
add
add
test
add
ror
mov
jne
cmpsb
mov
aad
movb
popa
and
mov
sub
push
xor
adc
push
jmp
add
sub
sub
pop
add
fstpl
mov
ret
dec
or
mov
dec
lahf
pop
insl
loope
ficomps
loope
lock
js
inc
jns
xchg
sub
mov
out
sbb
adc
or
mov
jbe
inc
inc
fisttpl
lea
sub
jae
shl
mov
fadds
rep
or
stos
fistps
sub
scas
or
insl
mov
rcll
mov
outsl
pop
loopne
shll
push
hlt
dec
mov
notl
cld
rorb
jb
xchg
movb
and
adc
push
shrb
lea
iret
dec
sbb
sbb
ja
adc
adc
popf
inc
add
mov
push
icebp
or
in
xchg
dec
push
mov
dec
arpl
imul
mov
movsb
jb
adc
pop
pop
and
dec
pop
pop
pop
sbb
rclb
insl
adc
inc
push
mov
sbb
mov
aam
test
scas
push
xor
adc
addl
pusha
leave
or
pushf
outsb
dec
jo
dec
ljmp
dec
mul
movsb
and
adc
jnp
mov
inc
dec
cmp
adc
or
add
dec
add
adc
jbe
insb
fs
outsl
jne
lds
outsb
mov
mov
dec
dec
adc
fbstp
out
push
stos
dec
lcall
aam
or
ljmp
or
and
sub
or
and
dec
inc
cli
inc
add
cmp
ret
addb
je
enter
out
das
and
and
sub
test
daa
stos
cmp
out
cmp
jno
rorb
sbbb
dec
imul
xchg
add
cmpb
fcompl
push
or
dec
push
add
or
rorb
cmp
jbe
cmp
test
sub
sti
loope
lret
and
adc
mov
xchg
dec
fsubs
add
addr16
cs
jle
es
rcrl
add
sbb
pop
push
push
add
or
xor
inc
arpl
test
enter
sbb
and
push
lock
sub
inc
and
mov
pusha
inc
xchg
xor
jl
lahf
adc
stc
pop
in
mov
cmp
xlat
inc
inc
sbb
add
xchg
sbb
mov
cmpsl
loop
push
jns
dec
jmp
gs
lock
and
adc
xchg
cmp
lds
add
inc
pop
ret
mov
jecxz
xor
add
push
fnstcw
and
and
or
testb
mov
and
cli
mov
mov
leave
sbb
jnp
pop
xor
nop
jo
jae
jo
out
cld
inc
pop
repnz
push
jle
push
and
pop
pop
jmp
inc
and
adc
loopne
sets
or
jbe
inc
mov
mov
and
xchg
test
mov
and
pop
pop
inc
mov
inc
shrb
pop
push
movsl
movsl
aas
push
adc
jae
mov
xor
dec
fsubr
daa
adc
or
adc
and
dec
clc
pushl
inc
push
test
arpl
mov
mov
push
add
mov
xor
push
cmp
jl
je
mov
lret
adc
xor
fmuls
rolb
push
leave
and
cmp
stos
mov
sub
cltd
push
rclb
sub
adc
sub
push
fimull
cmp
je
cmp
jbe
jns
lods
mul
jmp
sub
fs
mov
int
popa
jmp
and
jge
in
jg
lods
xor
in
and
and
and
push
idivl
mov
jnp
test
repz
adc
nop
out
orl
out
cmp
add
test
jbe
mov
sbb
push
push
dec
or
fcmovnu
adc
adc
cmp
cmp
lcall
add
sub
and
fdivr
fsubl
add
adc
cmp
sub
sbb
adc
cmp
add
adc
sub
sub
or
jne
push
addr16
push
ss
ret
pop
pop
mov
add
stc
fucomip
loopne
rclb
mov
pop
mov
push
scas
mov
mov
push
jae
push
adc
mov
out
jb
jmp
mov
adc
mov
push
scas
inc
imul
pop
addb
xorb
inc
push
cmp
shll
sub
xor
mov
mov
sbb
bts
or
ficompl
je
mov
ljmp
dec
call
or
in
and
aas
mov
pop
jne
jmp
and
ja
push
shlb
gs
add
add
dec
or
xor
add
sub
or
mov
inc
and
or
sbbb
cmpsb
and
andb
or
add
ss
jge
push
jl
adc
mov
add
loope
cmp
sar
sub
mov
into
rcrb
sub
add
orb
das
sahf
vunpcklpd
test
or
push
mov
push
nop
mov
adc
fdivrl
jbe
shlb
sub
xor
out
cmp
push
or
xchg
jecxz
sub
and
mov
pop
mov
test
inc
cwtl
ret
inc
dec
je
sub
add
stc
pop
inc
push
xchg
or
aam
cmp
xchg
outsb
adc
rcl
sub
or
clc
add
mov
fimuls
add
mov
repnz
mov
add
rcll
inc
add
or
js
mov
inc
add
sarb
adc
insb
and
enter
add
dec
xor
dec
pop
adc
xchg
shll
scas
je
cmp
ljmp
lret
add
inc
inc
lea
add
jmp
push
jl
mov
cmp
xor
ret
dec
add
sub
sbb
je
add
popa
pop
ret
lea
inc
push
add
or
push
aas
ret
inc
mov
inc
ss
cmp
adc
jp
pop
xor
inc
dec
and
cmp
ja
jae
cwtl
ret
ss
jb
sbb
mov
or
lret
notb
jle
sub
into
mov
inc
mov
dec
pusha
hlt
pop
or
xlat
inc
ja
push
jmp
jb
or
inc
test
idivb
pop
inc
xchg
or
jmp
ret
dec
outsb
adc
adc
data16
mov
jae
mov
xchg
mov
xor
mov
cmp
lahf
mov
jl
or
xor
inc
loop
inc
dec
xor
fadd
jmp
ficompl
test
int3
in
mov
xchg
cmpsb
xor
mov
mov
add
outsl
test
nop
add
adc
notl
rcrb
shrb
stc
mov
jle
adc
mov
push
or
sbb
out
push
inc
cmp
mov
movb
clc
sub
sbb
xlat
insl
test
sub
movzbl
adc
mov
pop
cwtl
xor
mov
jne
insl
pop
add
and
add
pop
dec
incb
out
mov
rorl
mov
or
repz
and
push
dec
add
jo
out
add
imul
sbb
mov
cmp
je
mov
inc
mov
push
or
adcl
add
outsb
jmp
cmp
push
inc
cmp
jl
pop
aam
dec
call
or
ljmp
xor
add
mov
call
data16
lock
adc
mov
fldcw
mov
mov
sbb
sbb
sbb
or
fcoms
push
ret
push
ret
addr16
add
mov
push
jl
jnp
lds
lret
out
sbb
inc
push
or
mov
adc
dec
pop
mov
cmpsl
add
adc
xor
in
inc
or
or
cmp
hlt
cmp
sbb
pop
adc
lea
stos
sub
sbb
sub
divb
or
jne
push
jle
inc
inc
ss
add
mov
in
pop
or
or
hlt
push
add
or
in
mov
std
adc
and
add
mov
enter
shl
js
incl
inc
out
and
shl
xor
mov
mov
ficoml
jl
mov
mov
add
and
jmp
jge
mov
fidivrs
cmp
dec
mov
push
add
push
shrl
fisubrs
dec
mov
cmp
mov
mov
add
inc
loopne
xchg
fninit
stc
sub
insb
push
sbbl
inc
mov
jae
adc
loope
sar
stos
call
inc
sbb
movsl
lret
imul
std
adc
sbb
jnp
sub
inc
popl
cmp
jl
and
je
add
andl
dec
sub
stos
mov
xchg
add
sbb
fcoms
cmp
push
sbb
adc
cmp
stos
xlat
out
shr
jo
adc
sub
xor
pop
mov
sub
and
ljmp
or
lods
or
movups
adc
mov
test
push
test
or
add
icebp
lcall
test
scas
or
daa
ljmp
cmpsb
adc
out
adc
xchg
in
jns
add
add
or
mov
les
pop
ficoms
repnz
xchg
jo
mov
inc
mov
mov
fwait
xchg
dec
lahf
xchg
cld
xor
or
inc
data16
test
push
xor
ret
adc
xor
sbb
into
aaa
inc
adc
fildl
cmpsb
stc
iret
mov
les
jle
out
xchg
cmpl
enter
lea
insb
jl
push
shlb
ss
and
jmp
push
js
cmpsb
xorl
in
xor
call
inc
fidivrl
les
sbb
mov
movsl
scas
add
adc
out
sbb
pop
mov
jae
push
dec
mov
mov
push
add
push
ret
mov
and
xchg
sub
dec
ret
cmp
loopne
lods
rcrb
push
lods
repz
jmp
sbb
adcl
lods
and
lcall
add
mov
inc
std
mov
add
dec
fiadds
clc
or
sarl
xor
test
sub
cmp
int
push
sbb
add
inc
or
mull
jo
pop
shlb
pop
ret
mov
or
jl
add
rorb
lods
mov
sbb
or
sarl
sub
sub
push
sub
mov
fldenv
rcrb
clc
lea
dec
add
out
lods
inc
pop
pop
outsl
movsb
mov
mov
cli
insb
and
addr16
push
push
adc
dec
push
push
cmp
xchg
mov
mov
sahf
inc
fisubs
adc
or
outsb
in
inc
or
mulb
out
sub
or
int
add
scas
mov
dec
mov
stos
xchg
scas
pushf
mov
iret
fwait
inc
add
or
js
inc
or
ret
xchg
jecxz
or
push
and
or
hlt
sub
inc
mov
and
adc
ffree
mov
jp
data16
and
lds
inc
mov
dec
out
lods
inc
int3
add
clc
in
mov
xor
mov
push
sbb
mov
cmp
mov
mov
je
inc
pop
xchg
mov
cmp
sbb
or
sbb
mov
xchg
test
repnz
add
js
mov
dec
pop
jp
hlt
dec
lea
addb
mov
loopne
mulps
cmpl
test
daa
cmp
fdivr
pop
push
out
icebp
shr
ficompl
mov
pop
push
movsl
cmpb
sbb
gs
push
and
pop
int
or
sbb
push
sarl
jle
add
int3
and
lods
test
aam
in
cmc
pop
add
xchg
xchg
add
pop
adc
cmp
pop
sarb
lods
dec
adc
cmp
cmp
cmpb
leave
add
ss
push
sub
or
inc
ss
inc
pop
pusha
push
xor
cmp
jle
push
and
ds
mov
movsb
xor
xchg
sbb
cmp
in
mov
ret
scas
xor
add
pop
mov
sbb
sub
push
cmpsl
jo
sub
or
sarb
ss
mov
test
cmp
pop
in
repz
add
push
pop
test
arpl
imulb
dec
insb
mov
or
in
insb
ret
jne
sbb
or
jo
fcmovnu
xchg
mov
dec
sbbb
insb
pop
cmp
sub
cltd
es
or
nop
or
lcall
jne
addl
jne
push
icebp
cli
es
out
push
dec
ret
lock
cli
imulb
push
mov
xchg
pop
dec
add
jl
cmp
lret
jne
mov
mov
push
add
add
add
push
ljmp
adc
mov
std
push
je
jge
std
je
cmp
je
clc
jmp
mov
or
imulb
inc
aaa
sbb
adc
stos
sub
cmp
pop
cs
ret
sub
sti
xor
adc
pop
add
add
mov
pop
sub
fs
cmp
or
push
sti
jge
sbb
add
adc
push
pop
pop
adc
cmp
sbb
add
pop
mov
push
add
sub
jae
dec
and
subl
jno
sbb
cmpsl
lods
xchg
sbb
push
mov
jne
jg
add
and
hlt
add
jecxz
loope
push
in
mov
cmp
insl
loopne
mov
movsb
and
add
imul
pop
jne
jecxz
jg
dec
addl
inc
hlt
push
push
mov
lea
mov
inc
shll
push
mov
test
dec
test
dec
mov
jo
adc
adcb
add
sbb
jbe
push
push
sbb
je
jne
add
pop
subb
inc
sub
push
cmp
in
dec
lahf
pop
mov
sbb
add
lcall
int3
lock
shr
clc
or
testb
or
es
add
repnz
roll
add
in
aas
pop
cmpb
leave
jmp
lea
aam
sar
sbb
dec
inc
and
dec
adc
inc
subb
add
leave
lret
mov
retw
loop
ret
sbbb
or
jmp
sbb
dec
arpl
lret
jmp
push
xchg
in
hlt
dec
pop
pop
xor
mov
lret
add
adc
jne
icebp
or
xchg
ljmp
jno
out
std
cwtl
nop
inc
mov
mov
fmul
clc
fstpt
push
jno
icebp
push
idiv
cmp
or
std
fs
pop
jl
fdivs
or
cmp
jne
push
test
sbb
push
adc
sub
and
adc
lds
adc
les
jae
jae
out
popl
lods
cmp
hlt
jmp
pop
test
or
add
sbb
fwait
push
nop
lock
jb
js
cmp
sbb
pushl
sbb
sub
sub
popa
call
or
daa
push
inc
sbb
push
xchg
arpl
or
mov
add
cltd
add
and
and
ret
push
pop
xchg
or
adc
pop
fwait
mov
inc
adcl
lock
rclb
and
cs
push
out
and
pop
lret
sbb
add
jae
rcr
or
inc
or
cmpsl
insb
repnz
adc
out
jmp
sbb
sub
push
lcall
push
jg
add
xchg
mov
mov
sub
dec
xchg
push
add
mov
mov
mov
loopne
bound
mov
leave
push
arpl
imul
adc
xor
outsb
or
mov
sub
inc
add
popa
or
adc
in
clc
add
cmpsb
out
mov
and
mov
arpl
loopne
ljmp
fadd
call
mov
adc
aas
pushf
jp
mov
push
jae
dec
insb
imul
sbb
xor
cmpsb
fisttpl
sub
aad
sbb
add
dec
adc
xor
mov
adcl
cld
and
pop
jl
outsb
insl
jle
mov
cmp
pop
insb
cmp
loope
cmp
cmc
stos
or
push
ds
popa
test
pop
add
adc
push
add
pop
xor
inc
enter
je
daa
lea
or
mov
repz
jbe
in
and
pop
inc
test
add
pop
in
cmp
in
jb
insb
dec
dec
pop
dec
and
ret
adc
add
xchg
cmp
push
adc
jmp
jmp
insl
xchg
test
add
inc
movsb
popa
rcll
add
pop
jnp
cmp
mov
jnp
xchg
aaa
xchg
cwtl
add
cmp
jbe
shll
icebp
adc
popa
and
outsl
xor
stos
pop
ds
fucom
int
testl
sub
into
jbe
cltd
shr
jb
sub
adc
pusha
fdivrl
clc
jae
ret
adc
movsl
or
add
mov
ljmp
inc
pop
lods
pmulhuw
je
jns
enter
shlb
jbe
mov
roll
and
mov
cmpsb
push
scas
jno
ret
ret
inc
pushw
sub
push
inc
sahf
cmc
dec
loop
mov
mov
ret
and
xchg
jns
or
jo
outsl
inc
sbb
xlat
add
lea
mov
add
add
rcrb
jecxz
daa
push
jnp
rorb
pushf
gs
xor
or
out
jb
loop
add
mov
jmp
jmp
xor
adc
les
scas
pop
ss
pop
cmp
adc
add
jl
inc
out
jmp
or
loop
lods
cmpsb
lods
push
imul
mov
fsubr
inc
ds
movsb
jbe
inc
push
movsl
pop
cld
mov
mov
test
inc
inc
lock
das
lret
jb
cmp
jmp
push
test
pop
lahf
jnp
push
xor
shll
cmp
or
rcl
jo
ret
add
je
rcrb
jge
pop
jo
das
adc
fimull
mov
cld
cmp
push
movsl
push
push
push
mov
cmc
push
inc
incl
and
jne
fisubrs
adc
push
aad
popa
mov
fcompp
in
push
mov
mov
push
lock
std
or
lods
loopne
dec
dec
adc
and
sub
mov
in
je
pop
sbb
sti
repz
je
jmp
or
push
dec
pop
jmp
dec
out
roll
or
es
sbb
loope
mov
jg
arpl
int
jmp
inc
cwtl
nop
jmp
add
push
cmpsb
push
xor
icebp
jnp
les
inc
cmp
mov
cmp
and
cltd
movsb
push
aaa
and
sbb
pushf
es
mov
mov
dec
inc
pop
pop
sbb
mov
test
dec
sbb
pop
cmpb
and
add
pop
pop
rolb
das
and
and
dec
sub
shl
inc
mov
dec
js
addb
sub
mov
dec
push
in
mov
mov
ds
add
adc
cmpsb
outsb
test
cld
ss
jb
pop
push
dec
mov
lahf
pushf
push
jge
gs
jl
repnz
push
push
mov
or
adc
repz
jmp
cmpsl
and
cltd
adc
add
add
lea
cmp
jno
gs
mov
arpl
or
and
and
mov
sub
dec
sbb
loop
shll
xchg
push
sub
addl
push
sub
jne
inc
mov
scas
mov
rorl
jbe
mov
adcb
and
pop
or
sub
cmp
mov
mov
je
movl
jo
mov
or
test
or
mov
and
jle
shlb
push
fcompl
js,pt
inc
repz
push
jle
add
jne
and
jo
mov
inc
xchg
cltd
dec
or
mov
pop
sub
jbe
or
or
jp
mov
push
lret
shl
loopne
clc
jg
dec
aaa
clc
imull
movsl
pusha
jmp
movq
movaps
mov
mov
shlb
jle
xor
test
rcl
lret
je
mov
bnd
and
lret
or
jg
jg
lds
fstl
jnp
mov
sbb
and
mov
mov
adc
or
cmpsb
adc
add
jns
loopne
imul
repnz
imul
add
pop
sti
roll
jo
addps
int
add
dec
jns
ret
adc
dec
sbb
adc
cmp
or
jmp
and
movsb
popf
outsl
clc
ja
scas
daa
pop
cmp
or
push
leave
in
adc
xor
push
cmp
xchg
js
pop
incl
dec
adc
pop
in
aam
fs
sub
inc
ret
aas
sub
ret
jge
mov
addl
pop
pop
cmp
mov
mov
xor
sub
je
cmp
inc
jbe
inc
leave
cmp
sarb
dec
mov
in
jb
mov
sbb
je
push
rorl
test
push
xor
hlt
push
adc
sbb
add
xchg
pop
adc
or
out
sarb
mov
inc
inc
sub
mov
ljmp
testb
jmp
mov
mov
cmp
jne
push
sub
les
lea
xchg
mov
mov
daa
sub
movsb
xor
arpl
mov
je,pn
cmpsl
rclb
sub
scas
mov
sbb
call
and
popf
mov
add
push
hlt
ret
popa
stc
dec
lock
push
loopne
pop
pop
mov
hlt
fcomps
rcr
lock
lods
sbb
adc
das
stc
add
test
jae
mov
mov
lcall
pop
add
push
xchg
inc
scas
sub
fs
mov
push
out
inc
inc
adc
adc
jne
inc
cmp
test
xor
ljmp
js
xchg
cmpsb
js
les
mov
jbe
adc
pop
mov
mov
das
inc
arpl
leave
rsqrtps
psubd
adc
or
inc
inc
push
add
xchg
add
mov
adc
add
pusha
and
out
dec
adc
push
add
push
push
lret
lcall
pop
or
rolb
mov
sub
xchg
adc
mov
jae
pop
andl
adc
mov
cmp
xor
mov
add
enter
sbb
sub
add
ret
xchg
shl
shlb
lahf
mov
testl
or
inc
pop
cmp
mov
or
loopne
rcrl
push
rol
inc
inc
cmp
aam
lret
jne
xlat
cli
dec
adc
imul
jg
jmp
jnp
adc
adcl
lcall
or
add
jmp
pop
mov
cmp
rclb
xchg
adcb
and
inc
or
and
out
add
je
add
cmp
or
sbb
jecxz
or
pop
fadds
add
lods
hlt
sahf
xor
jae
sub
mov
aad
bnd
shrl
dec
push
xchg
or
adc
lcall
sub
call
data16
push
push
lcall
roll
outsb
mov
push
push
add
inc
cmp
jno
filds
cltd
incb
mov
test
movb
sbb
neg
mov
jge
outsl
inc
push
add
add
xor
mov
test
pushf
jbe
mov
inc
negl
cmp
add
test
mov
dec
mov
mov
dec
dec
mov
inc
push
or
push
repnz
ret
adc
push
test
mov
jo
clc
or
add
bound
enter
or
push
jbe
cmp
sbb
mov
xchg
jp
pop
xor
call
mov
jb
lea
or
inc
orl
ja
add
push
cld
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
jmp
in
jo
outsl
cmp
insb
jb
jmp
adc
push
dec
jmp
out
stc
jns
jmp
std
std
jmp
sahf
popf
cmp
jmp
fimuls
push
xor
inc
pop
cmp
pop
pop
jb
push
push
movb
inc
aad
xor
add
xor
or
push
xor
insb
cmp
pop
ret
or
imul
or
mov
inc
inc
jbe
or
cmp
mov
repz
or
push
pop
into
rcr
add
push
scas
std
add
add
or
or
cs
push
cmpsb
add
push
or
andl
or
outsl
lods
cmpsb
inc
test
daa
jle
sbb
mov
adc
sub
jmp
mov
cmp
jg
add
mov
add
in
dec
sbb
or
adc
add
lock
movsl
inc
sub
repz
jae
inc
fcoml
and
pop
pop
jle
push
push
pop
div
pop
adcb
jb
push
or
push
jno
nop
cmp
jae
xchg
fwait
rcl
pop
sub
pop
adc
push
loope
mov
mov
es
negl
sub
rclb
mov
gs
and
adc
repz
int
imul
loope
mov
pop
xlat
in
mov
sbb
es
add
outsl
adc
ret
mov
cmc
mov
fldl
add
sub
sub
ror
leave
fwait
addb
push
adc
or
jl
aam
mov
lods
push
mov
inc
arpl
mov
xchg
js
clc
sub
fstl
xchg
jmp
inc
pop
mov
inc
jmp
cmp
je
ljmp
sbb
jmp
adc
jne
sub
shlb
pushf
jg
add
test
and
cmp
mov
push
xor
dec
or
xor
pop
xchg
jge
lret
adc
or
adc
test
repz
add
add
lds
js
ljmp
adc
lret
or
idivb
or
mov
jmp
test
mov
jg
dec
sub
cmp
ja,pn
xor
add
cmp
jae
push
or
jb
movsb
cmp
mov
inc
js
add
and
mov
or
je
aad
cmp
pop
cwtl
pop
bound
adc
cld
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
andl
or
or
sub
jbe
inc
mulb
add
je
fisttps
and
add
add
into
out
or
in
pop
stos
mov
rolb
jp
or
mov
pop
aaa
shr
mov
push
xchg
cmp
inc
adc
loop
add
sbb
in
xchg
add
mov
fisubl
sub
sub
add
inc
or
sbbl
les
loopne
data16
jge
add
movsb
icebp
stos
mov
mov
or
or
call
sub
ljmp
jno
or
push
fidivrs
and
shll
iret
data16
jne
idivb
test
or
xchg
cs
or
rcrb
push
pusha
or
or
adc
lods
pop
rcrb
push
out
adc
cwtl
sbbb
loopew
cmp
mov
sbb
jp
ds
testb
inc
mov
xor
ds
pop
adc
xor
lret
dec
jmp
mov
inc
pop
arpl
in
in
fisttpll
aas
push
repnz
push
jmp
xchg
sbb
popf
adc
dec
and
scas
mov
xchg
addl
push
cmp
xchg
test
push
jmp
ret
ja
inc
fmuls
cwtl
lret
test
loope
ret
je
mov
jmp
and
movaps
pop
out
pop
andb
add
movsl
dec
cmp
out
push
inc
push
je
mov
movsl
dec
push
orb
sbb
or
mov
push
addb
dec
adc
fmuls
sub
sub
or
lahf
adc
fidivs
sub
fsubl
jmp
movsl
push
test
incl
add
loopne
je
inc
cmp
jb
fisubrl
fisttpl
push
adc
push
pop
dec
ss
add
out
xchg
cmp
adc
jle
and
push
mov
jb
push
test
ror
push
ss
int
and
add
mov
pop
mov
push
mov
enter
add
adc
out
cmp
push
pop
shrb
push
sub
pop
pop
jmp
insb
pop
and
pop
popa
pop
xor
addb
push
push
mov
mov
add
xor
call
pop
sti
xchg
ss
pop
ljmp
loopne
xchg
pop
das
popa
sbbl
xchg
and
mov
test
push
and
xchg
add
movsb
stos
cmp
daa
icebp
add
xor
aam
or
dec
and
jg
mov
es
mov
inc
incb
sub
insl
and
lods
leave
sub
std
add
push
lahf
jne
arpl
outsl
rcrl
sarb
mov
xchg
mov
test
stos
adc
or
stc
xlat
roll
dec
pop
loope
insl
cmp
adc
ja
push
and
and
dec
pop
xchg
mov
insl
cmp
cmp
push
ja
ficomps
test
mov
inc
adc
popf
cmpsb
shrb
aam
fwait
dec
popa
popf
jecxz
adc
mov
mov
aad
push
popf
and
call
add
cmp
jns
add
lock
xchg
lock
add
jno
jmp
dec
adc
xchg
rorl
in
xor
repnz
sbb
mov
or
or
sar
jo
dec
enter
in
pop
pop
and
or
fadds
sti
dec
cmpl
inc
into
jp
pop
add
push
es
mov
push
dec
or
adc
clc
lret
ret
mov
xchg
mov
cmp
mov
mov
sbb
xorl
push
or
imul
sub
xchg
or
ja
sub
out
mov
divl
xor
in
sbb
ss
mov
push
iret
jp
and
xlat
test
mov
xchg
stos
add
push
sub
adc
cmpsb
ret
xchg
sarl
jmp
push
pop
pop
push
clc
pop
hlt
mov
sbb
and
lods
sub
mov
iret
or
cmp
and
imul
cmp
enter
pop
push
pushf
pop
rcrb
in
adc
pushf
or
dec
insb
adc
ja
and
sub
leave
cli
and
push
and
ret
shll
pop
xchg
sub
add
push
inc
or
and
inc
inc
nop
das
fcomps
and
test
add
push
push
dec
clc
lcall
or
fdivr
add
cmp
testl
inc
jne
mov
pop
push
mov
sbb
je
push
jbe
and
mov
adc
xchg
inc
inc
ljmp
ss
push
mov
mov
xchg
push
and
xor
mov
enter
rcl
jge
jl
sbb
pop
push
pop
inc
mov
push
cmc
rcrl
loope
pop
in
inc
and
imul
orb
pop
push
inc
or
adc
adc
add
push
push
ret
adc
cmpsl
pop
mov
cmpb
jne
call
or
jmp
ret
or
fcoml
jle
or
out
lret
mov
add
push
add
sub
mov
jmp
lods
mov
and
decb
out
orl
enter
lcall
int
aas
xchg
cmp
dec
mov
and
outsb
mov
mov
cmp
je
movzbl
add
sub
xchg
lock
ret
lea
jl
push
add
adc
imul
push
fcomps
inc
dec
add
sahf
addr16
daa
add
adc
inc
rolb
add
inc
dec
cmp
mov
add
add
enter
push
jb
jb
xchg
pop
push
pop
cs
in
jb
or
or
add
dec
or
push
nop
or
or
nop
addr16
pop
or
ja
sub
or
repnz
add
enter
push
test
sbb
nopl
mov
adc
pop
adc
mov
in
fwait
sub
adc
cmp
sbb
adc
adc
jae
out
adc
ret
xor
add
adc
adc
jns
pop
cltd
adc
pusha
in
push
push
push
cmp
xchg
push
pop
pop
xor
sbb
lcall
sbb
call
sbb
lret
pusha
sbb
sbb
fwait
sbb
je
pop
sbb
and
jmp
dec
jge
sbb
or
push
push
inc
jg
cmp
push
pop
pop
jne
add
add
or
dec
sub
cmp
jae
add
cmp
cmpsl
mov
xchg
push
and
or
aaa
xchg
das
lods
mov
cmp
je
lcall
cmp
ret
adc
aad
jns
add
cmp
mov
add
js
or
push
and
sbb
je
call
dec
pop
dec
dec
cwtl
jmp
inc
push
sub
pusha
in
jmp
jmp
inc
lcall
cltd
add
pop
push
mov
cmp
xchg
sahf
out
out
jge
or
sbb
sbb
pop
pop
enter
lock
cmp
icebp
icebp
seta
enter
out
std
repz
jns
cmp
leave
std
hlt
pop
in
cltd
push
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
push
nop
addr16
pop
imull
idivl
std
clc
enter
clc
clc
cltd
adc
inc
stc
lock
cli
adcl
sbb
sub
cld
cld
je
sbbl
cld
push
cmovl
jnp
xor
and
repz
adc
test
loopne
ficompl
dec
arpl
roll
lahf
sahf
adc
in
mov
or
xor
scas
cmpsb
cmp
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
mov
cmc
sbb
inc
sbb
out
cld
sub
mov
frstor
scas
lret
add
mul
pop
ret
xchg
pop
leave
shl
scas
idivl
inc
in
mov
out
out
xchg
add
out
out
xchg
pop
leave
and
and
dec
in
rcrl
and
sub
shl
das
xchg
inc
pop
pop
mov
xchg
notb
insb
out
xchg
inc
testb
sub
or
jno
imul
loop
push
mov
pop
xchg
cmc
jno
jns
jae
pop
jmp
push
push
dec
cmc
div
imul
cmp
int3
jns
and
cmp
clc
clc
jecxz
or
xchg
hlt
stc
popa
cmp
xchg
hlt
cli
cli
jno
jno
xchg
or
sbb
das
pushw
data16
cmp
out
push
push
jo
test
lahf
pusha
adc
xor
jb
xor
stos
out
loope
repz
xchg
inc
pop
subl
xchg
pop
pop
lcall
mov
repz
add
pop
push
sbb
xchg
bnd
and
mov
xchg
repnz
and
mov
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
ss
imul
mov
sub
out
xlat
push
xchg
mov
in
cmovno
jns
push
fcoms
inc
int3
add
les
add
inc
mov
jp
push
jnp
nop
mov
adc
jne
dec
jo
adc
dec
add
clc
mov
add
cmp
pop
inc
add
decl
and
mov
jns
xlat
insb
int
xor
adc
repz
inc
scas
dec
adc
cmpsl
fnstcw
incb
cmpl
outsl
nop
dec
hlt
cmp
inc
iret
repz
loopne
add
push
jb
out
mov
loop
mov
loop
loope
pusha
filds
fisubrl
adc
mov
dec
or
pusha
dec
and
scas
gs
add
push
les
jle
rolb
test
rolb
adcl
cmp
mov
xchg
rcl
push
je
int
lret
push
cmp
std
cld
orb
push
add
add
push
push
rorb
imul
aas
cmp
shld
adc
add
jge
or
add
fs
leave
jg
cmp
je
push
in
push
xor
nop
std
nop
mov
add
cmp
xor
inc
data16
mov
fdivs
fcomip
jbe
stos
pusha
cmp
sbb
mov
stos
fcmovbe
and
add
pop
sub
jo
sub
mov
pop
cmp
div
add
or
pop
cmpsl
mov
adc
or
pusha
push
xor
and
dec
pop
push
test
adcb
push
push
jg
jb
sarb
lods
pop
push
adc
add
mov
mov
movl
pushf
testb
adc
daa
add
lret
pusha
je
rep
mov
loop
mov
dec
ljmp
sub
dec
je
dec
pop
and
fsubs
add
aam
rolb
mov
push
sub
in
inc
jecxz
cmpsl
mov
loopne
aam
jge
in
in
lcall
sbb
daa
inc
clc
sbb
insl
testl
adc
cmp
add
pop
fadd
and
pop
rol
push
sub
inc
inc
inc
inc
add
push
adc
cmp
cmpb
jb
lock
out
mov
popf
inc
push
inc
and
gs
sbbb
cmp
dec
sbbl
or
or
add
dec
add
je
pop
rcrl
sub
in
add
sbb
pop
cmp
adcl
rolb
push
or
pmaxub
jmp
inc
sbb
sarl
lret
pop
xchg
outsb
call
loope
pop
mov
push
xor
inc
inc
add
inc
add
sbb
fimull
mov
add
in
add
repz
fs
sub
rol
js
mov
adc
sbb
int
movlps
inc
push
stc
aad
loope
jo
or
adc
lods
mov
adc
jne
mov
cmp
inc
cmp
sbb
push
or
add
out
dec
mov
mov
xchg
push
lcall
inc
adc
mov
cmp
ja
imul
and
inc
xchg
out
and
and
mov
adc
rorl
popa
mov
or
loopne
inc
add
les
jmp
lret
clc
aad
ss
out
or
push
loopne
js
ret
jmp
push
cmp
ljmp
sbb
add
sahf
repz
cmp
or
fimuls
jne
push
imul
pop
cmpsb
add
jl
and
xchg
stos
add
or
iret
mov
call
in
xor
das
jmp
notb
mov
rol
movb
dec
jp
roll
pop
push
mov
sbb
pop
and
cmovs
mov
or
cmpsb
test
add
call
pop
push
test
pop
xor
xor
adc
jb
es
fxch
insl
add
xor
xchg
push
sbb
es
clc
and
sbb
add
imul
int3
xchg
dec
add
movl
dec
inc
add
add
or
push
jns
out
dec
inc
cmp
inc
iret
repz
in
call
iret
repz
hlt
hlt
clc
clc
and
lea
sti
add
add
fldenv
jmp
loop
cmp
test
inc
pop
sti
and
cmp
and
lea
xchg
sub
jl
cld
or
push
cld
out
and
rclb
mov
push
fidivrl
mov
nop
xor
pop
push
sbb
push
jbe
sbb
out
add
and
xchg
sahf
inc
push
out
pop
mov
mov
mov
add
orl
mov
push
cmp
push
in
hlt
cld
add
out
icebp
cmp
pop
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
xor
cmp
dec
pop
dec
push
xchg
mov
push
add
add
outsl
pop
cmpsl
gs
ja
cmp
jbe
push
fmull
mov
mov
incl
inc
jmp
jne,pn
pop
pop
repnz
fwait
test
cld
cmp
xor
mov
jp
jbe
push
cltd
pop
idiv
pushf
push
pusha
and
sub
or
addb
aaa
dec
mov
fwait
and
fimull
push
jmp
sub
cmp
jae
dec
pop
call
pop
jae
pop
jbe
mov
dec
scas
and
dec
adc
mov
pop
sub
adc
hlt
pusha
pop
or
sub
clc
pop
imul
jp
jg
push
inc
test
dec
sbb
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
mov
insl
mov
mov
xchg
int
scas
imul
push
mov
xor
pop
das
jecxz
sub
or
pop
inc
lcall
in
cmp
add
sbb
add
ret
aaa
test
in
push
and
filds
fbld
xor
hlt
imul
dec
dec
jae
push
pop
sub
and
out
sarl
adc
pop
adc
mov
insl
adc
mov
xchg
pop
mov
dec
mov
mov
sbb
ja
insl
or
pop
lock
jl
jge
push
push
cltd
pop
not
lods
mov
decb
ret
jge
int
push
xchg
inc
out
cmp
dec
jb
shrb
jmp
or
lea
push
mov
imulb
pop
imul
bound
pop
jmp
push
fs
jmp
jl
mov
sbb
call
fsubl
je
insb
sub
sbb
push
mov
xorl
and
mov
fistpl
inc
jns
adc
cmp
in
jp
sub
incl
pop
pusha
pop
jl
cmp
cmp
pop
sub
loopne
mov
mov
xor
adc
loop
jae
cmp
jno
insb
pushf
push
mov
adc
xchg
push
cmp
icebp
inc
push
jmp
jge
pop
je
sbb
aas
push
enter
fs
in
jle
xor
decl
adc
mov
mov
mov
or
movsl
call
je
push
std
jge
insb
push
jne
mov
lds
fiaddl
rclb
inc
lretw
push
icebp
add
and
lcall
pop
popl
or
xor
lods
push
and
push
cwtl
cmp
xchg
inc
mov
out
aaa
subl
inc
pop
xor
or
stc
pop
push
lods
or
adc
lcall
ds
push
push
pushf
mov
jno
or
and
fmull
es
cld
sub
push
je
mov
and
mov
push
movsb
xchg
jge
mov
xor
insl
xor
sub
push
cld
ret
cmp
mov
push
adc
add
mov
push
inc
out
fdivp
adc
or
out
call
add
xchg
push
dec
in
and
pushl
jbe
dec
ljmp
insl
cmp
xchg
rorb
cmp
imul
daa
test
rcll
mov
hlt
dec
js
mov
sbb
scas
cmp
push
scas
xchg
jo
aam
add
mov
inc
jg
or
outsl
dec
dec
gs
mov
leave
inc
xchg
in
pop
mov
popl
movsb
cs
fcmove
loopne
clc
mov
inc
inc
cmp
je
xchg
dec
pop
stos
cmp
cli
orb
rclb
adc
add
ficoml
lcall
popa
cmp
jecxz
cmpsl
ficoms
sbb
push
add
int
add
xor
adc
push
fdivr
push
push
mov
push
xchg
xor
or
xor
daa
lret
pop
sbb
fisubs
or
bound
xor
mov
sbb
mov
ret
outsb
or
xchg
dec
push
adc
sbb
stos
add
dec
sub
or
mov
lret
insl
adc
addr16
xchg
push
cmpsb
icebp
rclb
test
lock
sbb
daa
je
mov
lock
mov
ss
mov
lret
inc
or
add
scas
add
push
pop
inc
int
inc
push
fs
fs
mov
dec
push
ja
sbb
frstor
xchg
mov
lods
sbb
dec
movsb
jb
jns
fistpl
sub
repnz
lret
mov
mov
sbb
orl
sub
cmp
add
roll
cmp
or
dec
xchg
je
jne
jmp
dec
or
jnp
movaps
push
jmp
das
scas
roll
repnz
jmp
dec
sbb
pop
into
xor
dec
jne
sbb
mov
insb
or
in
sbb
pushf
pop
shl
dec
ret
push
pop
xchg
in
xor
call
addl
mov
and
loop
in
or
aam
sbb
hlt
movsb
fbld
lahf
jge
bound
and
sbb
push
pop
stos
outsb
or
sub
mov
dec
pop
orb
push
add
and
mov
fdiv
inc
push
jmp
cmp
hlt
pop
jo
ja
or
inc
inc
dec
push
xor
mov
push
inc
push
ja
or
xor
mov
jecxz
jge
cltd
pop
sarl
push
mov
xor
add
push
and
and
or
call
filds
aas
xor
rolb
cmpsb
cmp
jmp
and
sub
jmp
cmpl
jmp
jmp
xchg
sbb
in
add
mov
inc
pop
and
xchg
sub
pop
fldz
aam
ficoms
push
and
push
cmpsb
sub
mov
add
jbe
cmc
rep
idivb
xor
shlb
neg
sub
and
add
mov
xchg
xchg
or
cmp
xlat
insl
pop
data16
stc
push
inc
ror
outsb
mov
pusha
xchg
fistps
sbb
loopne
arpl
xchg
push
push
fcmovbe
lret
fs
cs
icebp
fs
mov
dec
jnp
pop
sub
mov
mov
lock
push
mov
cmp
faddl
or
sbb
xor
ljmp
into
sub
and
cmp
sub
bound
dec
push
in
sbb
xchg
mov
pop
or
jbe
aas
loopne
hlt
pop
cmp
jge
and
push
mov
dec
jo
add
les
push
andl
fcompl
insl
std
and
bound
xor
shll
in
call
dec
in
and
stos
push
push
ret
into
sarl
xor
cmp
sahf
enter
pop
lret
stos
sub
or
rolb
jne
add
adcb
dec
jae
nop
out
push
aam
pushf
enter
mov
fmuls
dec
jmp
mov
shlb
cmpb
sbbl
adc
loopne
and
inc
and
stc
cmp
insb
jmp
push
das
sbb
adc
xchg
push
push
inc
jnp
js
xor
adc
ret
aad
xchg
mov
jae
pop
push
jg
jo
arpl
cmp
sbb
imul
cmp
lea
mov
jmp
mov
xchg
pop
or
add
push
imul
rcrl
add
iret
and
inc
or
cmpsb
mov
pop
fmull
inc
mov
sbb
inc
loopne
or
clc
jbe
add
js
ret
call
xor
out
push
sbb
imul
inc
jbe
test
cmp
or
repnz
inc
mov
dec
pop
xlat
in
mov
jg
adc
dec
sbb
in
lcall
adc
icebp
fstp
out
mov
xor
rorb
rorl
cs
shl
hlt
or
sbb
push
gs
int3
sbb
sar
mov
aas
movsl
push
pusha
sbb
jmp
ljmp
mov
or
jmp
loopne
or
fs
sub
mov
adc
test
inc
mov
ret
dec
push
push
inc
pusha
rcr
inc
les
push
push
ret
es
mov
pop
inc
inc
sbb
mov
imul
insb
push
inc
dec
inc
lahf
lea
loopne
cld
add
test
push
jb
jnp
fucomi
xacquire
inc
lahf
and
fisubl
add
xor
call
adc
sbb
push
std
xchg
clc
je
add
iret
xor
push
dec
mov
int
or
pop
jo
inc
inc
jecxz
cmp
loope
aad
mov
sti
and
push
lea
dec
xchg
jg
pop
mull
xlat
add
ljmp
mov
inc
pop
xchg
push
lods
fdivrs
add
and
add
and
pop
jo
movsb
pop
out
ret
or
xchg
adc
bound
push
dec
mov
mov
test
int3
call
push
or
sbb
pop
int
add
push
sbb
pop
test
or
orb
and
pop
cld
mov
cmp
lds
lods
lret
test
xchg
lock
sub
push
push
jbe
adc
or
sub
jg
cmp
push
or
jg
pop
pop
add
adc
popl
cmp
lods
cmp
add
inc
jge
pop
and
mov
push
movl
cmp
shrb
sub
cmp
xchg
rol
fucomp
sti
add
mov
adc
sbb
mov
dec
pop
andb
sbb
in
inc
pushf
xor
lock
inc
push
xchg
andl
ss
sub
je
pop
or
dec
mov
mov
or
dec
lahf
movsb
hlt
movsb
jae
inc
add
mov
bound
adc
mov
shll
lock
or
hlt
stos
add
shrb
into
mov
add
mov
inc
dec
jne
lea
add
xor
or
lcall
and
dec
xor
call
das
fucom
mov
sbb
int3
sti
mov
lea
out
mov
jge
movb
push
les
cmc
add
ja
sub
pop
and
in
lock
or
xchg
les
out
inc
cmp
cld
ficoml
dec
pushf
adc
push
push
aaa
mov
imul
shrb
sub
push
cmp
loopne
push
pop
inc
inc
cld
xor
sbb
inc
dec
and
cmpb
int
into
icebp
pop
fmull
orb
mov
je
imulb
xchg
adc
push
loopne
sbb
into
adc
add
mov
mov
lahf
lods
leave
sub
mov
shlb
mov
and
decb
sub
ja
lret
add
jmp
cmp
push
add
ljmp
push
mov
repnz
repnz
pop
push
push
and
mov
push
insb
or
ja
add
pushf
inc
outsl
adc
mov
adc
cmp
dec
ss
push
jg
xor
sub
cmp
pop
push
mov
and
dec
add
pop
insb
aas
es
push
cld
mov
mov
or
ret
jl
push
pop
outsl
pushf
cmp
decb
cmpsb
add
cmp
in
in
cmp
inc
std
dec
sti
or
jne
loopne
fldt
shrb
mov
les
xchg
pusha
lea
cs
sbb
sbb
push
cmp
mov
or
popf
pusha
mov
jnp
popa
mov
sbb
ret
lock
xchg
cmp
subl
push
jmp
xor
gs
push
add
in
sbb
jle
dec
lea
cmp
ret
dec
les
sbb
call
mov
lea
mov
ljmp
inc
out
xor
xor
pushf
loop
jmp
lea
pop
in
leave
add
ds
jmp
loopne
adcb
cmp
adc
inc
inc
mov
lds
pop
jne
outsb
incl
aas
adc
jge
add
jb
mov
xor
xchg
inc
outsb
push
mov
enter
adc
mov
inc
mov
hlt
add
inc
inc
inc
dec
jne
mov
inc
pop
cmp
and
pop
jl
sbb
divb
mov
inc
push
mov
inc
dec
jne
hlt
jnp
or
test
adc
add
div
gs
mov
jmp
cmp
insl
push
and
cmpsl
fisttpll
adc
mov
inc
insb
cli
orl
adc
lds
push
out
mov
aas
inc
loope
mov
inc
or
sbb
mov
xchg
mov
pop
pop
popa
mov
cld
aas
xchg
jo
sbb
push
dec
sbb
in
aam
add
int3
cmp
mov
adc
dec
test
cmpsb
push
push
push
add
repnz
sub
dec
std
and
fs
jb
mov
mov
test
add
loopne
in
push
fucomip
or
pop
sub
jmp
xor
stos
sbb
lret
mov
add
sbb
ss
push
out
arpl
mov
xchg
jno
stos
push
out
sbb
cli
jmp
and
add
cltd
fldl
cmp
test
lret
cli
pop
leave
cmpl
and
movsb
cld
popa
cltd
pop
movl
mov
outsl
push
fisubrs
cmp
es
pop
cmp
lods
fld
pop
sbb
mov
imul
sub
nop
mov
call
out
lods
das
adc
push
les
or
subb
and
lods
sbb
jl
mov
pusha
mov
test
sbb
cwtl
sub
inc
in
add
inc
ss
jle
out
inc
sbb
push
push
cmpl
or
lds
add
pop
cmp
xor
add
faddp
inc
or
or
sbb
or
in
push
add
jbe
xchg
ljmp
mov
adcb
mov
mov
xchg
fidivs
cmpl
push
pop
pushf
jnp
rol
adc
movsl
sub
add
adc
or
nop
xorl
inc
lea
dec
xor
cltd
adc
je
push
hlt
inc
arpl
xor
and
ss
pop
in
push
sti
enter
arpl
jbe
xchg
test
ret
mov
sbb
jo
nop
add
loope
es
dec
mov
adcl
insl
xchg
add
rcll
inc
ret
push
and
mov
jne
ss
lea
mov
scas
arpl
push
cmp
shlb
add
daa
mov
pop
lar
jb
mov
push
xchg
ss
sarb
add
inc
jb
or
test
mov
ror
cmp
jle
cmp
and
pop
xor
loope
cmp
push
push
push
mov
mov
xor
mov
fnstcw
cs
or
enter
adc
aam
rolb
dec
pusha
adc
mov
int3
xchg
pushf
cwtl
and
sbb
cmpsb
xchg
popf
mov
or
cmc
xchg
inc
or
push
push
push
push
pop
movsb
xchg
push
mov
add
lahf
xchg
jecxz
insb
cld
mov
jbe
bound
mov
fnstcw
outsl
add
and
dec
inc
cmp
ds
inc
sub
inc
imul
rol
dec
push
sub
xor
push
sub
xor
push
movsb
pushf
xchg
push
push
cmp
das
add
add
or
mov
into
jnp
not
movsb
pop
aaa
imul
adc
adc
repz
push
inc
and
pop
sub
sub
sub
inc
push
in
cmp
pmulhuw
inc
dec
pop
cmp
xchg
and
ret
xlat
jle
pop
sbb
call
push
dec
push
jge
cs
and
jle
push
jg
pop
cmp
je
jle
or
jmp
es
mov
jo
insl
jg
mov
push
addl
add
push
cmpsl
subl
fisubs
test
mov
cwtl
popf
jnp
mov
pushf
cltd
pushf
cmp
push
cmc
pop
dec
rcll
or
into
movsb
shll
test
mull
addr16
dec
ja
cmp
imul
mov
clc
xor
jbe
mov
mov
je
es
fnstenv
inc
jne
rcrl
gs
xchg
mov
sub
addb
add
nop
call
and
movsb
jp
inc
sub
push
sarl
andl
sbb
inc
pop
sbb
mov
cmp
push
scas
sbb
or
lret
lret
xchg
fcomps
lret
out
iret
mov
clc
or
jecxz
lret
lret
test
movsl
shrb
outsl
and
sub
pop
add
rcr
pop
ficoml
enter
dec
cld
adc
pop
dec
in
sub
aam
sub
jecxz
xchg
mov
loopne
or
dec
fcomps
cmc
jno
mov
push
test
mov
jne
sbb
sti
or
in
js
jmp
jge
lock
shrb
add
mov
mov
clc
push
popa
or
jmp
mov
cld
inc
and
es
mov
jae
js
adc
popa
loop
xor
mov
jle
jg
jle
and
xlat
pop
or
pop
and
jg
jns
mov
sub
push
adc
nop
clc
xor
add
jle
call
sbbb
jmp
dec
push
pop
insb
jg
or
enter
addb
jg
nop
in
adc
addb
cmpb
mov
or
out
fimuls
mov
inc
dec
jl
sbbb
mov
call
and
test
imul
test
lret
pop
jo
test
cmp
cs
sub
jecxz
shr
out
push
das
and
cwtl
shr
jno
jne
movl
jle
cld
ret
add
dec
mov
add
inc
insb
lret
jne
cmp
rorl
jge
inc
mov
pop
rolb
fistps
movsb
popa
test
ljmp
push
pop
and
push
pop
and
or
repnz
enter
mov
cmpl
lods
scas
sbbl
negl
add
jb
mov
add
and
and
dec
loop
dec
mov
daa
fwait
xor
daa
and
sub
sub
sub
decb
testl
or
dec
adc
and
lods
jle
dec
jl
or
xor
gs
mov
or
pop
mov
ret
xchg
and
and
jne
or
push
mov
push
mov
cmp
add
inc
lahf
add
push
bound
imul
or
xor
or
push
pop
out
jbe
ret
cmp
out
loope
add
popf
push
sahf
or
dec
ret
and
lds
or
or
loope
mulb
fsubrl
loopne
cmp
sub
loope
ret
ffree
pop
sub
mov
mov
out
push
sbb
sbb
dec
in
lds
hlt
jecxz
jmp
lock
cmp
out
sbb
and
pop
push
pusha
in
adc
push
out
mov
outsb
and
sbb
push
push
pop
add
xchg
inc
clc
les
adc
jno
inc
or
inc
sbb
pop
loopne
adc
ret
sub
sbb
cmp
xor
test
push
popa
jne
or
cmpsb
lea
inc
sub
mov
or
inc
and
push
or
push
pop
cmp
jbe
int
loopne
bound
push
inc
inc
in
jo
or
js
jmp
inc
ss
or
push
incl
and
in
push
shrb
ret
cmp
jl
dec
inc
mov
fdivl
mov
test
xchg
rolb
push
dec
or
or
push
clc
arpl
sub
dec
rclb
ss
sub
test
fsts
pop
xchg
aam
mov
adc
lea
jmp
jbe
push
inc
loopne
loopne
cmc
adc
test
in
in
or
in
xor
inc
ret
aad
aaa
sbb
cmp
inc
pop
divl
or
xchg
loopne
mov
mov
imul
push
mov
dec
pushf
scas
xchg
mov
push
inc
pop
add
popl
test
cmpsl
ljmp
add
or
add
push
sub
pop
scas
sar
push
push
add
mov
andl
push
jg
dec
mov
ret
and
xor
add
or
rclb
xor
pop
sbb
dec
jmp
pslld
and
loop
mov
loope
inc
sahf
xor
test
mov
sti
jl
or
xchg
lret
in
aam
fadd
mov
call
mov
sbb
push
mov
mov
mov
mov
cmpsl
and
leave
movzwl
dec
sub
or
jle
cmp
mov
cmp
mov
pop
in
mov
rcrb
jle
cmp
cs
ja
mov
movsbl
arpl
adc
vmread
test
push
sbb
pop
sar
pop
mov
fsubrs
mov
stc
xchg
inc
cmp
lea
lret
in
or
aam
clc
fcoms
xor
sub
dec
or
mov
add
ds
je
sbb
mov
push
push
pop
add
sub
dec
add
lock
cli
sub
or
sub
or
in
leave
add
je
mov
add
sub
push
imul
or
inc
or
ja
movsl
cltd
nop
imul
cmp
or
movsl
hlt
insl
push
and
push
or
sbb
int
inc
insb
je
lock
ficomps
inc
subb
js
test
pusha
sub
in
fidivl
mov
div
ss
or
xor
mov
pushf
xchg
xchg
aaa
dec
xor
movsl
cmp
add
dec
fs
or
int
adc
pop
outsl
cmc
dec
xor
mov
js
push
imul
movsb
mov
push
cmp
jmp
xchg
push
mov
rorb
push
neg
icebp
xor
cmp
adc
fcmovbe
inc
cltd
or
ret
mov
ret
add
push
test
xchg
hlt
fdivr
inc
jmp
lock
scas
dec
nop
and
jae
dec
testl
inc
fisubrl
jl
aaa
cwtl
das
xchg
stos
out
mov
adcl
pop
sbb
outsb
sbb
sub
xchg
or
xor
mov
mov
mov
mov
mov
add
mov
clc
stos
mov
add
push
insl
cmp
xor
cmp
int3
negl
lea
sbb
movsb
dec
lret
aam
push
add
adc
adc
xor
test
sti
add
push
mov
movb
push
and
aas
push
push
add
mulb
jge
lcall
mov
inc
mov
dec
mov
pop
loope
je
cmpsb
cmp
xor
add
sbb
mov
or
cmp
cmp
push
pop
pop
ret
out
pop
clc
test
icebp
xor
outsb
jo
add
add
add
or
mov
scas
push
or
repnz
outsb
je
test
outsb
ljmp
aas
add
or
xchg
pop
test
mov
mov
movsb
fimuls
je
add
adc
jo
xorb
sbb
or
addb
mov
push
stos
add
push
add
dec
ficompl
ret
jg
jne
mov
jne
mov
jmp
lahf
out
pop
mov
insl
cmpl
incl
adc
add
int
xchg
adc
insl
xlat
out
jl,pn
call
cld
adc
sti
movsb
jne
inc
fcomi
mov
sub
lock
js
mov
test
lea
movsb
fstpl
lcall
push
mov
inc
call
pop
cmp
addb
push
xor
adcl
inc
sbb
hlt
outsb
mov
inc
xorb
cld
sub
shrb
mov
addr16
inc
daa
add
adc
push
xor
sbb
or
hlt
sub
in
push
lret
roll
adc
inc
fs
popf
stos
fbstp
inc
push
dec
sbb
add
cmpsb
jmp
out
es
mov
or
je
cltd
nop
sbb
dec
sub
rclb
or
push
shlb
in
aaa
je
pop
pop
fimull
jge
addr16
ds
testl
jne
and
mov
lret
or
jmp
fs
inc
je
mov
cltd
push
add
sarl
cmp
push
nop
icebp
pop
lcall
lret
mov
dec
jmp
add
sub
inc
cmp
loop
aas
je
mov
cmp
test
mov
movb
inc
jmp
cmovl
or
jmp
dec
mov
dec
push
inc
inc
jl
sub
and
adcl
gs
movsl
bound
mov
mov
xor
add
push
jmp
orb
jmp
in
test
test
cli
and
pop
rcll
cltd
sub
sub
inc
adc
push
xchg
jnp
enter
xchg
mov
fcompl
lea
or
jae
dec
adc
push
jbe
lcall
fdivs
rcrb
push
sub
cld
cmp
fistpll
push
rcll
mov
pushf
test
punpckhbw
mov
jg
pop
xor
insb
dec
pushf
sbbb
push
and
inc
dec
jo
and
add
push
jo
mov
adc
testl
insl
mov
or
mov
sub
movsb
js
daa
sbb
add
js
enter
xor
test
mov
inc
loope
mov
repz
push
aam
mov
idivl
jle
shl
ss
push
xchg
rolb
mov
mov
mov
sahf
sbb
or
mov
ljmp
mov
pop
or
test
add
pop
ret
jle
cmp
push
inc
sbb
test
repnz
or
and
sarb
adc
test
and
ret
xor
xchg
and
xchg
adc
daa
movsb
add
and
ljmp
push
rcll
sbb
dec
test
jl
js
inc
jl
push
pop
mov
ror
fstl
add
out
pop
in
sahf
xor
pop
or
xor
scas
and
jge
pop
ret
repnz
loopne
push
mov
xor
ss
cli
popa
cmp
ss
outsb
push
test
jne
dec
loopne
and
or
shlb
push
adc
or
repz
insb
sub
mov
jmp
and
mov
or
or
fcoms
or
jnp
cwtl
movsl
sub
jne
adc
jnp
or
or
adc
enter
sub
jb
cmpsb
inc
insb
mov
nop
rclb
int
and
xchg
jp
rorb
xor
sub
cld
jmp
cmp
out
jnp
mov
inc
mov
push
dec
or
dec
gs
lret
push
lea
mov
mov
test
call
adc
jg
in
dec
jne
sar
dec
cmp
jbe
push
pop
daa
lock
or
adc
fildl
mov
shr
lea
not
and
decb
jne
pop
cmc
pop
add
sbb
lea
xor
mov
push
pop
add
mov
dec
pop
add
add
pop
and
shll
push
or
push
pop
sbb
mov
jecxz
jle
push
and
shlb
and
sti
add
fimuls
pop
cmp
mov
fimuls
and
cmp
ss
shlb
cmp
sti
pop
mov
shr
not
and
add
and
xor
push
mov
das
mov
xor
push
cmp
pop
dec
add
mov
push
or
in
push
pop
fimuls
ficoms
or
mov
sarb
or
loope
ret
cmpsb
adc
mov
mov
inc
mov
adc
mov
mov
ret
inc
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
mov
sbb
mov
xor
push
insl
or
sub
repz
enter
add
and
stos
pusha
push
sbb
jg
test
shl
add
scas
sti
divb
call
aas
gs
push
or
push
cmp
push
flds
sub
dec
inc
adc
inc
or
lret
cwtl
pusha
add
and
xchg
mov
push
push
mov
orl
call
mov
push
call
adc
or
hlt
sbb
sub
outsb
call
push
jbe
insl
or
mov
pop
or
mov
add
pop
xorb
imul
loopne
outsl
or
cmp
rorl
or
js
add
or
jg
negb
les
aaa
pop
or
inc
adc
push
push
stos
add
mov
push
ss
push
xchg
jl
adc
push
fucomi
fwait
orl
xchg
sbb
add
sbb
and
xchg
mov
ja
dec
shll
add
inc
ljmp
aad
rorb
pop
ja
out
incb
or
xor
xor
mov
mov
mov
testb
int
mov
lea
into
jo
cli
ja
xabort
push
clc
sub
shr
mov
incl
sbbb
sub
mov
push
mov
xchg
inc
cld
lock
call
ljmp
je
clc
add
clc
xchg
daa
adc
pop
or
add
inc
arpl
pop
mov
mov
lock
clc
aad
call
or
lds
not
and
sti
or
mov
out
and
pop
clc
mov
sub
pop
shr
pop
adc
pusha
jb
cld
test
or
mov
and
pushf
xor
mov
test
inc
call
cmp
scas
add
stc
add
mov
int3
add
pop
mov
pop
call
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
jge
es
add
inc
std
lret
lods
or
incl
jns
add
fstpl
lea
aad
pop
xchg
add
adc
jle
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
pop
xor
out
outsb
add
mov
and
xor
and
clc
or
rolb
lea
mov
sub
pop
xor
push
sar
dec
shlb
pop
and
fistl
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
roll
ja
dec
ficoms
add
mov
loope
lea
mov
pop
ret
lods
or
jbe
mov
mov
push
cmp
sub
bswap
mov
push
cmp
rdmsr
sub
jns
dec
dec
ficoml
jp
sbbb
je
add
js
xlat
add
pop
and
loopne
push
inc
cmp
push
push
push
jge
or
out
adc
mov
or
in
or
lock
stos
dec
or
or
and
and
or
jne
add
mov
cmp
jb
push
jne
mov
addb
jne
jmp
jnp
add
jns
jae
xor
aaa
arpl
outsl
add
mov
and
push
sub
inc
mov
sub
pop
add
xor
or
cmp
je
mov
xchg
test
in
cli
and
mov
mov
dec
pop
iret
jne
push
jno
mov
and
pushf
xchg
jp
mov
in
jmp
fcmovu
mov
mov
and
jne
mov
jns
jle
push
pop
outsb
leave
inc
test
inc
push
ficoml
sbb
sbb
fdivrl
cld
dec
dec
inc
mov
dec
pop
xchg
or
sbb
iret
push
push
cmpl
cmp
je
aam
xor
pushf
mov
decb
jne
jbe
rorl
repnz
jmp
jp
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
fnstsw
into
xor
dec
jp
cs
sub
xor
fidivrs
inc
mov
or
lea
mov
cmp
ss
pop
rorl
out
or
dec
cld
or
adc
pop
push
in
mov
mov
out
or
dec
aad
nop
sub
mov
call
loopne
js
shrl
aad
lods
test
lea
ds
jne
cmp
into
xor
ds
or
mov
repnz
sbb
loopne
or
sti
add
in
jb
or
xorl
test
or
and
xchg
or
fs
test
icebp
cmp
mov
cli
fs
add
and
outsb
or
mov
dec
nop
xlat
mov
test
push
movb
mov
push
add
inc
pop
or
jnp
lahf
jge
dec
filds
cmp
cmp
sub
add
in
add
mov
outsb
push
negl
and
rcll
or
cwtl
push
out
loope
xor
mov
popf
leave
clc
adc
cwtl
xchg
test
add
push
push
push
in
add
push
andb
loop
fdivr
outsb
dec
dec
xor
lahf
pushl
adcl
push
cmpsl
push
ds
adc
push
in
adc
inc
andl
mov
or
mov
mov
mov
es
lahf
sub
cmp
scas
ja
movsl
inc
js
push
or
pop
call
inc
mov
cmp
dec
or
jle
xchg
rcll
fists
lahf
insb
int3
push
xorl
mov
mov
push
mov
pusha
aaa
xor
test
mov
dec
ret
add
fmuls
pop
xchg
xor
fcoml
ret
inc
testl
out
pusha
fiadds
or
je
cmpl
add
sbb
loopne
jmp
dec
insb
push
je
inc
jns
adc
or
sub
xor
cmpsb
mov
aam
stos
and
sub
adc
xor
popf
call
inc
cltd
movsb
hlt
mov
sub
pop
xor
shlb
mov
sahf
jg
inc
adc
push
or
mov
or
int3
test
push
pop
jns
in
je
in
or
dec
dec
inc
out
nop
pop
rorl
subb
jo
push
mov
xor
sub
adc
pop
lcall
mov
pop
add
icebp
xchg
jae
scas
faddl
sahf
cmp
shl
or
mov
add
xchg
adc
xchg
mov
push
outsl
pop
mov
outsl
sbb
xchg
add
or
arpl
or
insl
rorb
ss
cmp
jb
jb
cmp
add
fisubrs
hlt
or
icebp
push
jb
jae
push
inc
pushf
mov
aas
insb
jne
jp
jo
jbe
or
pop
and
xor
pop
adc
and
cmp
xor
fldt
xchg
sbbl
or
push
push
sbb
loope
addb
mov
xchg
dec
xor
int
cmpsb
mov
test
shll
lea
and
xchg
ficoml
add
sbb
xchg
pop
pushf
mov
xlat
xor
dec
aaa
test
push
dec
dec
call
enter
and
mov
inc
inc
push
pushf
mov
add
and
daa
xchg
neg
lret
adc
cmp
scas
dec
sbbb
outsl
inc
call
push
pusha
inc
sbb
and
mov
adc
sahf
int
add
fimuls
cld
fwait
data16
push
mov
push
test
cltd
mov
in
in
shr
and
xchg
or
mov
iret
scas
jbe
mov
hlt
xchg
inc
push
lods
push
cmpsb
in
in
lods
inc
mov
rclb
inc
push
call
sub
lods
and
and
ret
push
and
les
xchg
pop
shlb
loopne
loop
in
add
add
les
nop
and
xchg
inc
dec
test
popa
inc
jb
test
fwait
mov
int3
test
xchg
repnz
mov
mov
pop
mov
sysret
lds
or
sbb
jmp
mov
cmpsb
movsb
push
mov
mov
movsl
inc
xchg
fbstp
loop
aaa
test
cmp
out
int3
jbe
push
dec
lea
cmp
add
adc
lret
pop
js
ret
mov
mov
clc
xchg
ret
lock
and
xchg
jne
sub
add
xchg
movsb
je
shll
add
adc
leave
adc
mov
mov
or
fwait
and
push
pop
or
pop
js
push
cld
sbb
das
mov
push
push
mov
cmpsb
mov
push
dec
sub
es
add
mov
adc
cmp
mov
lds
mov
clc
cmp
aas
popa
test
cmp
jne
sub
push
cmp
and
cmp
inc
nop
mov
adc
push
xor
xchg
sbb
shrl
pop
dec
sbb
add
xchg
int3
inc
xchg
movsl
mov
add
cs
je
movsb
call
xor
cmpsl
lds
add
add
sbb
and
popa
or
jg
and
pop
mov
push
adc
jno
orb
std
jne
popf
push
inc
inc
add
hlt
mov
mov
aaa
inc
cld
push
and
adc
inc
subb
dec
cmp
inc
sub
push
adc
mov
xor
int3
or
pop
dec
icebp
mov
aaa
js
push
or
shll
enter
mov
adc
add
loop
sub
shrl
sub
dec
shll
call
cwtl
cmp
inc
bound
adc
sbb
add
adc
mov
jg
lret
je
pop
sbb
cs
fstps
add
in
sarl
sub
sbb
dec
mov
jle
movsb
insl
ljmp
dec
je
mov
or
insb
inc
fdivs
jno
push
enter
std
or
fstpl
push
fldl
or
fldl
or
dec
jae
lock
push
mov
aad
movsb
insl
pop
cmp
lcall
jns
pop
jmp
jo
push
dec
xchg
imull
mov
mov
call
dec
xchg
dec
je
inc
fsubrs
sbb
lods
repnz
adc
xchg
insl
jae
insl
mov
sbb
mov
mov
pusha
or
loope
jmp
rcrl
stc
xor
insb
fwait
add
inc
test
jno
mov
mov
test
mov
lock
adc
pop
sbb
mov
fdivrl
fstl
push
add
lock
shl
push
lret
jbe
loop
aaa
jne
das
and
inc
lock
or
push
fs
out
insl
jbe
or
hlt
mov
xchg
mov
test
andl
adc
sahf
fnstcw
data16
inc
push
sbb
or
loop
add
push
insb
leave
sbb
xor
hlt
lods
push
pusha
xor
jne
ds
and
sbb
xchg
jle
push
jle
iret
sarb
stos
and
inc
or
or
mov
ret
fucomp
fs
faddl
into
sub
adc
and
or
aas
test
adc
or
pop
jnp
cmp
inc
jp
cmp
test
jne
push
push
orl
out
jle
pop
sub
mov
sub
mov
xchg
mov
sub
adcl
aas
xor
cltd
nop
add
orb
xchg
or
divl
lock
lret
in
call
pop
pop
and
dec
mov
into
jne
shlb
mov
clc
leave
adc
sub
add
incb
mov
or
lcall
testb
jne
dec
sbb
pop
hlt
mov
mov
dec
lea
testb
add
sub
fldln2
dec
cmpb
loopne
jge
cs
rolb
jo
add
ds
fstps
lret
mov
xor
pop
insb
aam
ja
movsbl
jbe
mov
push
hlt
jb
xor
xchg
std
lods
int
jge
js
jb
mov
leave
rcrb
lock
cmp
jnp
imul
push
pop
or
add
xchg
lret
and
mov
mov
add
dec
mov
cmp
fdivl
notb
stc
or
popa
cmp
push
cmp
mov
and
lods
es
xchg
test
mov
fdivrl
push
cli
insl
subl
hlt
decb
jne
inc
sub
pop
shll
or
adc
and
xchg
mov
sbb
sbb
filds
sbb
movsl
lods
ror
hlt
inc
push
imul
outsl
rclb
lds
js
sub
cmpsb
pop
lods
cmp
mov
mov
fwait
cs
leave
addl
mov
lea
lods
sub
in
arpl
inc
daa
iret
imul
repnz
sub
pop
jecxz
add
js
orb
or
popf
es
adc
inc
sti
push
inc
cmp
enter
in
push
jmp
out
std
dec
inc
pop
lods
sub
inc
pop
cwtl
add
imul
rcll
push
jno
push
adc
mull
enter
jmp
sub
push
pop
lods
add
mov
sahf
mov
daa
mov
sahf
adc
loopne
lds
cld
das
in
push
xor
mov
mov
pop
enter
mov
addl
sub
jno
or
je
mov
pop
or
sbb
je
test
subb
dec
add
lock
adc
std
scas
lock
dec
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
adc
std
aaa
addr16
cltd
iretw
das
lock
fdivr
mov
adc
ret
out
pop
mov
lods
insb
jge
test
cwtl
fldenv
sub
jno
inc
dec
pusha
scas
mov
inc
mov
mov
cmp
stc
shr
std
call
jno
jns
rol
push
mov
mov
push
mov
ret
dec
mov
fdivrs
daa
push
dec
mov
aam
std
inc
mov
lock
popf
mov
nop
std
lds
sub
gs
pop
mov
and
data16
xchg
imul
dec
cs
mov
cmp
ds
mov
jbe
push
push
lods
pop
inc
outsb
xor
xchg
adc
shll
adc
in
out
sahf
mov
lcall
cmp
bound
aad
mov
out
int
lret
adc
repnz
xchg
loope
sbb
adc
mov
fwait
jne
cmpsb
inc
adc
fs
dec
ljmp
and
sbb
call
enter
std
xor
jmp
lea
test
xlat
scas
cmp
xor
sub
frstor
cmp
push
popa
fwait
push
fdivrp
mov
ds
cs
sbb
lcall
adcb
sub
dec
ja
ljmp
cmc
xchg
lret
shrl
jmp
cs
std
xor
push
sub
jge
mov
sub
or
sti
lods
adc
mov
or
or
jmp
sbb
add
repnz
scas
lahf
add
add
mov
std
dec
inc
cwtl
dec
dec
cmpl
xor
data16
bound
cmp
sbb
adc
inc
jmp
inc
push
inc
xor
sub
sub
sbb
mov
jp
jne
fdivr
push
loop
sbb
push
dec
pop
jno
and
xor
je
sbb
push
fs
std
std
int3
add
xchg
adc
mov
das
into
cmpsl
xorl
jae
xor
aas
nop
fdivrs
push
or
jl
mov
testb
inc
shl
jns
shlb
adc
push
add
lods
orb
jbe
and
or
adc
adc
dec
or
push
jecxz
pop
loope
mov
movsb
test
inc
dec
push
mov
and
inc
sarb
cmp
cwtl
in
insb
loopne
in
js
jecxz
push
mov
aad
adc
sub
cmp
ja
pushf
and
or
loopne
mov
lea
mov
test
or
int
ljmp
mov
xchg
jo
xchg
ljmp
dec
push
lock
arpl
add
lret
mov
or
mov
out
and
mov
dec
es
add
call
aaa
or
pop
enter
andl
inc
xlat
adc
in
aaa
xchg
and
iret
mov
dec
cmp
and
imulb
fmuls
sbb
test
mov
mov
leave
and
repz
xchg
and
inc
mov
nop
mov
lods
dec
in
mov
mov
xor
es
cld
adc
rcr
cmp
adc
negb
adc
mov
xchg
xor
fwait
mov
or
mov
mov
aaa
add
mov
mov
mov
or
subl
pop
repz
enter
pushf
repnz
and
mov
js
inc
xchg
add
mov
mov
mov
mov
and
cmp
inc
hlt
add
fisttpll
mov
cltd
pushf
movsb
bound
dec
push
aaa
add
cmpsl
leave
adc
test
enter
test
test
adc
pop
jb
adc
leave
enter
pushf
and
push
subb
or
add
push
jg
push
inc
dec
cld
inc
addr16
je
stc
aaa
push
xor
dec
in
sbb
ffreep
push
adc
insl
mov
movsl
dec
test
cwtl
in
mov
xchg
xor
iret
mov
pop
cwtl
and
xor
lea
mov
sub
loop
or
add
add
fsubl
jecxz
imul
dec
sbb
iret
aaa
sbb
fs
in
jmp
dec
enter
mov
or
jne
push
pusha
mov
fsubrs
dec
push
outsb
xchg
or
push
ret
sbb
or
mov
in
das
or
xor
lret
data16
insl
sub
dec
xchg
stos
repnz
inc
dec
call
add
mov
bound
ret
jo
xor
sbb
mov
xchg
and
jne
lea
popa
add
clc
std
mov
les
mov
push
mov
shll
or
jmp
bound
and
sbb
pop
les
or
les
cld
push
icebp
dec
dec
lods
or
mov
arpl
xor
add
mov
movl
es
dec
std
pop
adc
push
adc
inc
arpl
xor
add
fmuls
adc
inc
ret
ss
add
xchg
or
insl
movsb
and
xor
or
ficomps
je
hlt
daa
mov
cmpl
inc
sbb
jae
testl
into
xor
adc
mov
jno
lcall
mov
jecxz
dec
add
push
adc
mov
jae
add
push
sub
rorl
cmp
lock
fs
test
lsl
jmp
push
jg
ficomps
inc
shr
rcr
shr
rcr
or
jne
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
fdivs
push
jbe
dec
sub
sbb
ret
xor
or
fimull
rcll
fxch
mov
inc
and
jl
mov
inc
add
ja
enter
add
mov
add
mov
movb
inc
bound
inc
stc
adc
out
int3
rcll
daa
push
sub
adc
les
dec
adc
push
and
xchg
push
mov
rclb
sub
cmpsb
sbb
push
test
xchg
sbb
mov
xchg
adc
jecxz
lds
jno
or
dec
aas
xorb
leave
pop
jne
mov
pop
les
and
lock
sarb
les
jp
mov
out
lock
mov
shll
inc
pop
dec
sbb
xchg
dec
add
cmp
jle
out
insl
cld
add
lea
jb
ret
ret
bound
stc
aas
inc
aam
push
stos
fiaddl
jae
push
sub
test
mov
pop
xchg
ret
cmc
jne
enter
ja
jbe
lea
xchg
mov
sbb
adc
adc
pop
add
push
sbb
mov
xchg
push
pop
arpl
inc
jno
push
add
jl
dec
adc
dec
mov
mov
adc
cld
sbb
sbbb
mov
test
push
xchg
nop
sbb
adc
andl
add
xchg
pop
push
xor
dec
js
pop
xchg
movsb
stc
xor
pop
mov
out
add
movl
call
push
test
or
mov
aaa
dec
stos
add
push
push
test
outsl
js
mov
push
xchg
or
dec
lea
add
jp
xchg
xchg
mov
sbb
ret
lock
mov
sbb
sbb
jne
sbb
and
loopne
pusha
mov
cmp
aas
cmp
cs
fcoml
sbb
call
stos
in
hlt
lea
aas
inc
imul
and
cmp
push
mov
lds
mov
loopne
adc
call
or
js
fdivrp
iret
mov
negb
or
push
ret
shl
push
adc
popa
dec
loope
or
lret
movsb
lock
inc
stc
xor
sub
mov
ss
dec
xor
or
in
and
cmpsl
and
ja
push
je
push
out
cmp
je
jns
mov
ss
and
or
out
aam
xchg
pop
addr16
outsb
popa
add
in
std
cld
pop
test
add
sahf
and
scas
xchg
push
dec
inc
and
popa
mov
insl
out
std
sbb
sub
je
sbb
test
sub
iret
push
mov
mov
clc
pop
movsb
push
adc
sbb
icebp
repnz
dec
pop
and
mov
sbb
data16
enter
cmp
jb
inc
ffreep
and
push
fld
icebp
cmp
push
roll
mov
mov
mov
pop
jne
ficoml
jg
bound
lcall
push
fisttpl
jno
push
mov
adc
or
mov
or
jb
inc
insl
in
dec
jo
cmp
or
popf
lahf
test
add
mov
inc
leave
or
xchg
pop
push
lock
sub
daa
push
xor
cmp
pop
les
dec
push
mov
sub
pop
jbe
sbb
pop
jl
dec
and
mov
sbb
xlat
lret
movb
lock
imul
ja
mov
mov
imul
ret
inc
add
or
mov
mov
mov
lret
and
mov
push
inc
fisubs
add
sub
push
mov
pusha
rolb
add
ljmp
mov
cmp
mov
or
and
or
leave
and
cmp
std
rcll
add
and
sarl
inc
loopne
call
cmp
aas
aaa
mov
sbbl
pop
orl
xchg
test
cmp
and
cmp
loope
pop
sbb
mov
addb
shl
lock
leave
push
sbb
and
pusha
mov
inc
dec
mov
fwait
dec
mov
jmp
xlat
pop
push
adc
xchg
push
cmp
div
add
ret
imul
and
mov
in
hlt
add
pop
fs
add
push
sbb
mov
cmpsl
sbb
fcomps
jle
cmp
or
sti
nop
jo
repnz
push
adc
ss
or
fstps
jne
int
mov
inc
mov
ja
mov
lret
dec
pusha
mov
jmp
xchg
loopne
xchg
cmpsb
and
push
je
dec
je
dec
mull
inc
stos
jmp
mov
lret
push
mov
mov
push
shl
addr16
mov
fdivrl
pushf
test
ds
test
dec
mov
in
ret
mov
dec
scas
adc
andb
sti
movl
mov
jne,pn
sbb
fnsave
rol
inc
mov
out
jle
fcoml
mov
cmp
jge
mov
mov
push
or
fs
fcmovnb
cmp
and
rolb
fs
push
dec
jmp
jl
push
adc
xchg
das
test
aaa
xor
sub
arpl
xor
cmp
pusha
aad
push
pop
cmpsb
clc
jne
gs
or
je
xchg
mov
xchg
inc
mov
data16
pop
ror
loope
sbbb
imul
fildl
sbb
sti
andb
sub
outsb
push
sbb
and
and
loop
popa
pop
cmp
jp
shl
push
rclb
and
push
aas
arpl
mov
inc
sbb
pop
fmull
lret
mov
xchg
push
or
test
or
adc
daa
or
ret
inc
in
arpl
rcll
pop
inc
and
dec
rcrb
mov
lret
outsb
and
mov
daa
outsl
iret
sub
repz
mov
jge
push
dec
lock
in
sahf
cmc
lods
mov
dec
adcl
popa
movsl
mov
pop
je
push
sarb
ret
push
xor
mov
jp
jp
or
cs
dec
mov
mov
in
daa
imul
pop
add
and
or
dec
add
cmpsb
cmc
subb
in
je
mov
orb
mov
jb
add
call
cwtl
or
cld
dec
xor
adc
test
xlat
inc
and
cmp
push
rorb
rcl
ret
jb
push
pop
rorl
cmp
sub
add
inc
mov
pop
xor
fwait
movsl
inc
adc
or
imull
in
in
int3
adc
fbstp
xchg
add
inc
fcoms
js
sbb
fildll
aam
ss
jmp
xor
icebp
enter
inc
inc
adc
add
outsb
add
es
je
pop
mov
jbe
je
jmp
adc
pop
dec
les
mov
jmp
inc
dec
stc
add
test
mov
xchg
inc
or
sub
popf
sub
inc
sub
inc
mov
mov
out
inc
mov
test
pop
rclb
pop
call
arpl
xchg
and
pop
or
popa
inc
xchg
and
mov
loop
packuswb
push
mov
mov
mov
pusha
and
mov
pop
lret
addb
inc
or
jge
or
iret
nop
stos
or
jae
mov
loopne
shl
mov
jp
push
mov
cwtl
or
mov
jge
loop
dec
in
push
push
orl
or
rcl
push
and
mov
inc
orl
add
clc
sbb
inc
inc
xchg
adc
jo
test
icebp
sub
inc
mov
adc
inc
outsb
mov
pop
dec
inc
inc
or
jne
repnz
pop
mov
sub
push
sar
xor
lea
mov
mov
and
call
clc
or
dec
je
cld
in
and
sbb
add
xlat
push
ret
jmp
mov
shlb
addb
adc
jb
jge
push
or
sub
movsl
shr
out
int
pop
loopne
stc
and
jo
sar
insl
mov
and
dec
mov
mov
push
push
and
mov
rolb
push
dec
ret
ficoms
xchg
iret
or
or
rep
cmpsl
add
orb
or
or
mov
and
push
and
xor
ret
xchg
inc
mov
in
cmp
int3
mov
jge
mov
rorb
and
pop
jle
sub
fs
mov
push
adc
or
jmp
pop
sbb
jle
mov
rcrb
and
mov
rorl
pusha
push
subb
andb
add
fnsave
inc
cmp
mov
popf
dec
adc
or
adc
add
shr
repnz
or
jle
mov
push
test
or
decl
dec
pusha
mov
add
out
add
and
gs
and
inc
adc
lret
leave
lcall
hlt
inc
adcl
pop
xchg
test
xor
repz
add
and
and
push
pop
rol
dec
movsb
jae
add
shl
push
rorl
add
aaa
xchg
int
pop
xor
ds
add
js
xchg
stos
add
or
insb
jo
sub
mov
movl
add
jl
jb
loope
pusha
mulb
mov
test
sbb
mov
clc
dec
out
mov
test
clc
es
not
mov
xlat
adc
push
xor
rolw
dec
lret
loope
lock
mov
data16
mov
or
pop
fadds
adc
lock
not
and
into
push
roll
incl
enter
mov
enter
add
cs
and
loop
pop
xchg
data16
ret
sub
cmpl
cmc
or
dec
jmp
mov
shlb
jg
jg
adc
and
adcl
add
cmpsl
test
xchg
fcoms
orl
jle
cltd
or
sub
inc
xor
fildll
nop
dec
roll
lret
sub
jmp
pop
add
mov
mov
sub
dec
fdivp
jge
hlt
imul
filds
or
pop
adc
lock
push
push
sarl
inc
xchg
dec
or
loop
sbbb
popf
jae
xor
pushf
xor
mov
pop
in
mov
rcll
xchg
stc
ljmp
and
push
mov
lock
add
out
cmpsl
cmpsb
jns
add
test
or
cmp
test
sbb
jmp
pushl
add
stc
faddl
mov
adc
sbb
loopne
and
cmc
inc
mov
daa
test
std
and
loopne
movl
cs
push
push
stc
cs
test
xor
cmp
adc
pop
sahf
lret
andb
mov
cmp
mov
repz
pushf
sub
hlt
fsubr
shrb
mov
pop
mov
loop
dec
push
push
mov
aas
or
pop
adc
outsl
push
push
dec
adc
push
and
jl
xor
push
pop
out
std
outsl
inc
or
jbe
jle
pushf
imul
ja
mov
jno
inc
test
sbb
push
cmp
ret
mov
sbb
mov
xchg
loopne
loope
push
dec
cmp
ret
in
jno
test
and
call
inc
fmuls
dec
sub
adc
sahf
cmp
shrl
shll
rcrl
or
in
push
inc
pop
lock
rep
add
mov
jle
adc
scas
loop
mov
and
or
test
cmpsb
jmp
sbb
sbb
negl
sbb
add
aam
hlt
push
sub
mov
xor
push
inc
or
push
test
lcall
or
pop
inc
mov
cmpsb
push
push
ret
xor
and
fcmovnbe
fs
inc
sti
push
push
mov
enter
faddl
push
mov
sbb
outsb
add
push
jnp
add
in
push
add
fsincos
or
pop
fidivl
mov
inc
rep
in
mov
mov
dec
or
cmpsl
or
xchg
pushf
or
push
add
pop
mov
jl
js
xor
lret
and
push
push
clc
mov
and
popa
xor
into
mov
lods
popa
pop
mov
pop
sbb
cmp
cmp
add
add
fsub
and
fsubl
inc
or
lock
inc
jns
push
mov
cld
or
sarb
add
testb
fxch
fnstcw
add
sub
sub
adc
sub
les
and
out
push
sbb
push
ljmp
ds
int3
push
cli
enter
xlat
mov
enter
mov
mov
mov
jmp
adc
outsl
jo
lret
add
adc
fdivrl
imul
dec
xchg
ret
mov
outsb
push
fmull
and
mov
sub
xchg
loop
add
popf
enter
mov
push
or
or
add
rorb
xchg
cmp
mov
xor
cmp
adc
out
xor
push
ret
dec
jbe
jne
imul
lcall
movsb
inc
or
aas
sbb
dec
lea
dec
xor
in
cmovge
rcr
fsubs
popa
scas
inc
or
bound
or
fildl
mov
mov
xchg
xchg
testb
adc
xor
icebp
arpl
dec
mov
cmp
imul
and
add
adc
or
push
mov
cmp
sub
adc
imul
push
sbb
movl
mov
inc
cli
inc
addl
or
fisubrs
xor
or
xlat
xchg
push
cmp
testb
je
testb
je
mov
outsl
cmp
ljmp
fistl
rcr
cmp
dec
dec
inc
loopne
adc
mov
sub
mov
sub
inc
and
inc
negl
add
js
adc
xchg
jbe
mov
jg
sarb
jae
mov
mov
movsl
jno
jne
movsb
push
je
fadds
add
cltd
and
popf
fsub
adc
sbb
enter
loopne
or
mov
inc
push
pushl
jmp
xchg
icebp
add
in
cwtl
and
or
mov
loopne
jmp
adc
sahf
sub
push
sbb
ret
cmp
pop
addr16
mov
adc
and
in
rcll
jne
inc
sbb
jp
inc
aas
cmp
cmp
int3
sbb
dec
andl
dec
cmp
ficoml
rolb
pop
je
push
mov
xchg
mov
push
mov
or
xor
fs
or
jecxz
and
add
push
jl
push
or
les
add
add
xchg
push
mov
mov
fidivrs
int
add
jmp
jle
inc
dec
aaa
jmp
sbb
pushf
sbb
loope
jle
jp
add
shll
sbb
xor
push
adc
inc
adc
ret
push
fistpll
stos
xor
int3
inc
rcrb
addr16
mov
push
pop
fs
dec
hlt
cmp
jl
mov
sub
ret
movsb
enter
xchg
adc
pusha
test
push
loopne
add
cmpsb
fsubs
test
sbb
and
nop
clc
pop
ljmp
mov
enter
cmpsb
lock
xchg
repnz
push
out
jb
out
mov
mov
aaa
mov
outsb
lret
loope
fdivs
aaa
pop
xor
clc
add
inc
or
xchg
pop
jmp
mov
xchg
and
insl
xor
pop
cmp
popa
lret
ret
push
adc
cmp
jae
push
add
cmp
inc
aaa
adc
mov
dec
ror
pop
add
in
cmc
xchg
sub
fistl
test
clc
rol
jecxz
push
sbb
mov
clc
adc
push
sbb
push
pusha
cs
rcl
or
stos
inc
cmpl
inc
push
pop
cmp
adc
aam
push
mov
and
xchg
scas
and
loope
jo
xor
inc
adc
push
lret
sarl
cmp
adc
or
sbb
and
add
popl
adc
sbb
mov
inc
mov
mov
xor
daa
and
aam
pop
sbb
shld
inc
sbb
sub
test
je
outsb
jbe
in
cltd
aam
push
add
push
test
cmpl
test
orb
jl
jae
es
jmp
cmp
or
je
add
je
mov
sbb
cltd
neg
push
mov
lea
xor
pop
add
sub
and
inc
xchg
hlt
test
xor
push
jg
adc
pusha
ja
cmp
rorb
xor
mov
int3
aam
jg
pop
adc
adc
mov
jecxz
push
andl
jp
shll
fsubs
les
rclb
sbb
mov
jo
cmp
push
shrl
adc
out
fsubrl
and
jne
push
loope
push
add
xchg
ret
mov
shll
xchg
enter
cmpsl
sub
inc
mov
arpl
mov
dec
sub
in
arpl
jns
mov
test
mov
mov
filds
jl
lea
pop
je
dec
add
lea
adc
gs
or
lcall
pop
adc
inc
in
dec
ret
push
cmc
popl
fistl
pop
push
cmp
jl
mov
push
cmp
addb
adc
add
shrl
or
mulb
dec
testl
push
mov
mov
test
ljmp
jb
pop
mov
lea
movsb
sub
or
and
add
mov
pop
xchg
pop
sub
dec
dec
sub
enter
dec
leave
mov
icebp
cmp
scas
mov
add
mov
shll
data16
sub
out
or
adc
cwtl
xchg
xor
cmc
lods
mov
mov
xchg
lods
jl
mov
or
and
mov
xlat
scas
imull
jns
jne
jmp
frstpm(287
loopne
out
or
push
arpl
loope
insb
jl
sbb
popf
inc
mov
loope
lock
lock
pop
jle
xchg
or
mov
or
xor
test
or
inc
loop
fs
subl
adc
xor
aaa
sbb
jmp
pop
adc
adc
mov
push
jle
orb
xchg
outsl
jne
dec
inc
mov
arpl
cmp
adc
sbb
add
and
jo
jl
lock
add
fcoms
mov
adc
adc
in
pusha
jbe
push
subb
fstpt
lods
dec
sbb
dec
in
mov
dec
jg
adc
cmp
fsubrp
push
mov
and
pop
hlt
lods
loopne
out
js
sbb
xlat
or
rolb
sub
rorl
mov
cmp
push
mov
jae
and
sbbb
push
adc
test
or
dec
xor
and
notl
aaa
mov
jl
dec
js
push
push
dec
or
lock
jnp
es
xor
inc
lret
mov
push
jl,pn
push
mov
ljmp
add
or
inc
mov
mov
mov
into
mov
xlat
je
cmp
jecxz
adc
shll
testb
dec
xorb
loop
inc
mov
push
lcall
jnp
or
mov
movb
and
lds
lea
cmpl
sub
pop
adc
daa
mov
bound
add
or
add
gs
cmpsb
adc
das
outsl
fdivl
out
cmp
or
or
adc
add
push
push
inc
xchg
loope
dec
pop
push
push
insl
cld
mov
shr
push
or
es
jmp
add
nop
add
xor
push
inc
pop
pop
scas
push
sbb
les
and
inc
outsl
push
push
push
push
mov
pop
outsb
cwtl
sbb
icebp
adc
popf
and
sub
mov
jo
je
xchg
cli
decb
jbe
lea
lea
popa
mov
cmpsb
or
jno
push
mov
cmp
int
push
sbb
jmp
popl
and
das
add
or
mov
call
rorl
mov
cwtl
push
pop
dec
ret
jmp
inc
and
jl
cltd
icebp
mov
sbb
xorb
loop
rolb
push
mov
xor
mov
push
cli
pusha
call
pop
shr
pusha
sahf
mov
inc
cmp
xor
out
cld
sbb
mov
push
pop
sub
pop
pop
and
pop
stos
adc
cmpsb
inc
adc
xor
inc
cmp
lods
out
or
cmp
cmp
adc
ss
and
and
sub
in
in
xor
cmp
inc
and
leave
leave
leave
in
inc
cmovs
jb
leave
push
pop
add
jb
fs
jb
je
jl
imul
test
mov
es
pushf
mov
movsb
test
sub
shrb
lds
je
inc
popa
dec
mov
add
imul
lds
filds
xor
imul
or
call
inc
lcall
cwtl
nop
hlt
sbb
clc
enter
and
and
sbb
mov
pop
movsb
mov
mov
xchg
cmp
mov
xchg
ret
cmp
sarb
test
enter
jne
out
push
adc
rorb
pop
push
in
lret
sbb
inc
or
jp
shrb
cs
add
cmp
cmp
orb
popa
mov
xor
ljmp
jp
push
adc
sbb
cmpsb
gs
mov
rorb
mov
cli
das
nop
sbb
mov
dec
lcall
add
lret
mov
mov
or
and
mov
mov
hlt
cmp
out
inc
loopw
or
inc
sbb
lea
je
sub
mov
je
sbbl
ret
aad
inc
xchg
stos
mov
jle
and
nop
push
add
fmuls
mov
imul
lea
pop
int3
in
lcall
jp
mov
pusha
xor
or
sbb
jbe
cmp
dec
pop
je
push
rcl
rcrw
sub
and
sbb
xlat
test
add
stos
data16
data16
mov
sub
sbb
bound
mov
in
add
cmp
jmp
in
cltd
add
int3
add
and
push
repz
xor
outsl
add
or
enter
push
mov
les
lahf
push
push
adc
adc
push
inc
loopne
addr16
add
inc
orb
rolb
dec
mov
adc
and
dec
mov
jno
and
mov
lahf
mov
add
and
add
ja
xchg
enter
add
inc
ja
bound
sbb
adc
pop
jl
loop
mov
cmc
and
cmp
insl
sub
and
cmp
addb
and
mov
xor
add
xor
sub
aad
loope
orl
js
push
xor
fisubs
sub
add
xchg
mov
mov
rolb
mov
fwait
mov
mov
or
in
cmc
daa
mov
jnp
xor
pop
fbstp
jle
mov
mov
sbb
call
xchg
or
rcrb
cld
push
xchg
xchg
into
daa
jecxz
cmc
roll
clc
push
push
push
mov
xor
mov
push
and
out
jg
add
mov
add
sar
mov
sti
mov
add
pusha
mov
insl
or
test
jne
aad
xchg
test
inc
mov
into
xor
mov
mov
add
pop
loope
jae
sbb
mov
lret
lret
test
mov
mov
or
inc
pushl
mov
push
out
dec
ja
pusha
dec
sub
push
cmovg
inc
popf
pop
andl
push
cmp
mov
xchg
jno
in
test
cmp
mov
pop
cmp
in
lods
sbb
shlb
mov
cmp
call
mov
mov
sbb
stos
jmp
mov
mov
cmp
add
les
enter
push
push
cs
addr16
xchg
cmp
jo
ljmp
jmp
les
inc
lea
pushf
ror
jno
add
mov
mov
jnp
popa
pop
pusha
cmp
imul
movsb
push
sbb
lahf
xor
dec
sub
shll
mov
mov
cmpl
pop
imul
push
test
shlb
mov
push
add
stos
mov
pop
ljmp
push
cmp
xor
inc
push
or
sbb
cmp
bound
dec
jno
push
sbb
out
inc
int
add
daa
inc
movsl
iret
push
cmp
fmuls
push
hlt
addb
je
and
add
pop
cmp
push
push
xchg
pusha
sbb
adc
xchg
fisttps
cmp
sti
aam
sti
lods
shll
xor
mov
xor
add
pop
test
out
jae
fmulp
mov
mov
xchg
mov
andl
add
aaa
sahf
push
jmp
fstpl
xchg
cmp
jne
adc
cli
or
aas
movb
inc
mov
adc
orl
fmul
sub
sub
and
sbb
inc
add
mov
mov
cmp
jmp
sub
mov
dec
pushl
in
inc
jae
dec
add
add
inc
cmp
pusha
scas
dec
icebp
cmp
mov
imul
orl
pop
mov
inc
inc
sbb
push
pusha
fisubl
cmp
sub
add
test
add
add
inc
xchg
mov
mov
dec
stc
pop
xchg
cmp
cmp
cmp
add
xchg
push
xchg
xchg
pop
cltd
mov
sub
addb
dec
add
test
mov
cmp
jmp
scas
xchg
and
adc
ss
std
jno
inc
sbb
inc
fucomp
into
mov
jge
out
add
or
mov
jo
lret
jmp
adcb
pop
sti
and
mov
pop
or
push
sahf
xchg
jecxz
lea
xchg
pushl
lods
adc
lret
xchg
inc
ja
fdivrs
add
insb
ljmp
fidivrl
inc
jne
idiv
ret
xor
jnp
xor
mov
inc
cli
fcompl
aas
inc
cmpb
xchg
and
sbb
xor
or
loop
sahf
dec
cmp
pop
and
jns
jl
add
ja
xchg
xchg
mov
jb
mov
std
xor
mov
mov
imul
cmc
xor
ret
in
std
ss
xchg
mov
movsl
jo
xchg
or
ret
ret
push
fimuls
and
xor
jmp
sbb
xor
sub
andl
push
jo
dec
jmp
unpckhps
inc
and
sbb
or
jne
pop
sbb
sbb
aam
andl
sub
jo
sbb
cmc
xchg
hlt
push
push
pop
cltd
add
mov
into
mov
sahf
insl
sbb
or
dec
push
and
mov
aaa
xor
enter
sub
mov
shll
ret
aaa
mov
mov
pop
inc
xor
ret
les
pushf
cli
sbb
pop
sub
push
mov
pop
or
inc
js
sbb
inc
in
aam
xchg
cmpb
aaa
xor
xor
inc
cmp
nop
lods
lret
insb
js
repnz
into
sub
sbb
pop
subl
or
sub
xor
jge
mov
sub
out
push
xor
arpl
in
shrb
sbb
leave
in
add
rclb
insb
pop
adc
stos
jge
addr16
pop
dec
adc
adc
mov
sub
in
sub
pusha
xchg
ficoms
push
jae
fs
les
mov
js
pop
fs
adcb
push
pop
xchg
sar
pop
cld
pop
pop
mov
sarb
and
cmp
call
push
mov
add
clc
je
or
cmpsb
cmp
dec
cltd
into
lcall
lock
xor
outsb
push
dec
in
int3
mov
mov
and
jbe
inc
mov
jmp
push
and
rorl
inc
cmp
shlb
test
xor
js
pop
sbb
push
add
or
mov
adc
jecxz
sbb
enter
inc
loopne,pt
inc
push
cmp
jge
mov
gs
call
mov
cmp
pop
call
lret
rcrl
dec
sbbl
ljmp
loopne
jmp
icebp
xor
jecxz
cmp
es
mov
loop
jle
mov
test
mov
ret
mov
cmp
loope
push
rcrb
gs
cmp
inc
lds
fcoms
and
ja
push
add
push
fwait
jnp
jno
xorb
cmp
mov
jae
mov
push
cmp
rol
adc
mov
lods
out
jno
sbb
lods
test
xor
mov
dec
sbb
push
repnz
pop
sub
push
adc
dec
mov
sub
das
mov
nop
lret
xor
insb
dec
push
es
jb
pop
mov
mov
das
push
jmp
or
sbb
dec
test
and
sbb
sbb
push
pop
sub
inc
arpl
xchg
sbb
jecxz
push
orb
lret
pop
push
testb
loop
or
mov
dec
scas
xor
or
int3
cld
dec
mov
fisubs
ficomps
mov
inc
in
dec
xchg
outsl
rorl
bound
out
jle
fbld
inc
lahf
cs
mov
sub
mov
pop
push
pop
arpl
mov
dec
je
gs
imul
jne
or
inc
int3
jle
dec
aas
inc
test
dec
pop
jno
inc
xchg
cmp
outsl
and
dec
repz
add
inc
pusha
or
inc
adc
in
test
dec
or
ror
clc
ja
mov
adc
xor
and
arpl
mov
sbb
adc
dec
lods
rolb
icebp
dec
push
hlt
xor
push
popf
pushf
pop
outsb
bound
pop
push
popf
ds
cmp
stos
sbb
cs
scas
jecxz
shr
and
data16
pop
imull
je
dec
adc
xchg
cld
adc
pop
push
xchg
cmp
push
or
or
jb
aas
adc
loope
les
into
pushf
push
pop
idivb
mov
xchg
test
and
iret
mov
xchg
add
or
inc
adc
mov
not
xor
loope
xor
and
sbb
or
jmp
jnp
jmp
and
js
lock
or
pop
jns
lea
test
adc
test
pusha
jp
adc
test
xor
lds
xor
cmp
or
xor
or
or
or
jmp
fcmovbe
cmp
push
fucomp
outsl
pop
push
or
adc
lock
and
mov
les
and
aaa
jecxz
in
data16
jge
add
or
ret
xor
shll
cmp
and
sub
and
jge
add
sbb
loope
std
push
or
flds
and
pop
adc
pusha
mov
xor
jge
pusha
loope
pop
sub
dec
sub
xchg
andb
jecxz
pop
fstp
mov
pusha
pusha
fldl
cmp
orb
push
or
push
outsl
fnstenv
lea
or
hlt
es
adc
sti
fists
add
test
fistps
xchg
les
xchg
cli
loop
push
xor
dec
je
add
dec
jne
orl
scas
jmp
push
mov
mov
adc
testl
iret
pop
in
lcall
sbb
jmp
push
and
inc
add
xchg
fwait
cmp
cmpsb
push
flds
fldenv
rolb
dec
jns
mov
mov
std
out
adc
lods
mov
ret
inc
movsb
dec
pushf
or
cld
jbe,pt
in
pop
inc
pop
sub
fimuls
popa
adcb
enter
loope
xchg
shlb
sti
lret
fisubs
call
inc
aam
xchg
mov
xchg
xchg
push
aaa
sbb
or
sbb
add
les
sub
sub
in
into
xor
push
push
fimull
push
or
sbb
or
test
int3
adc
ds
repz
inc
jae
test
add
mov
add
push
xchg
subb
fstpl
mov
sub
cli
mov
mov
pop
loopne
or
or
rcr
mov
inc
stc
push
jo
mov
repnz
in
add
or
repnz
add
bound
test
test
ss
insl
in
sbb
orl
outsb
or
shl
pop
mov
adc
push
pushf
push
push
sahf
jmp
pop
movsb
or
in
aam
jo
adc
xchg
and
andl
out
pop
aam
sub
sub
sub
pusha
push
mov
inc
lcall
mov
sub
sub
test
jmp
popa
jno
loope
repz
jne
mov
or
es
mulb
movzbl
inc
inc
loope
add
mov
or
test
cmp
je
pop
and
adc
jl
mov
icebp
js
or
fwait
test
adc
fistps
mov
adc
or
pop
cmpb
pop
push
push
pop
cmp
loopne
stos
mov
pop
divl
add
lods
fsubrp
mov
jmp
jno
mov
or
jo
cmp
add
fs
or
or
cmp
adc
xchg
adc
or
ss
insb
dec
or
lret
jo
loopne
sub
mov
add
mov
insl
insl
adc
imul
add
inc
add
aas
and
cmp
and
or
or
sub
xor
inc
cwtl
and
or
adc
cltd
stc
int3
add
mov
jae
repz
aam
push
sahf
fnstsw
sarl
inc
adc
sub
rorb
data16
mov
adc
xchg
mov
sbb
dec
dec
jne
pop
cld
inc
inc
cmc
xor
sub
add
icebp
into
mov
rcrl
cmp
jge
lock
pop
cs
or
inc
and
add
mov
mov
inc
fsubl
ljmp
sbb
push
loope
lock
pop
fadds
into
cmp
and
dec
mov
cmp
xchg
or
push
fildll
ret
imul
pop
adc
or
in
arpl
or
or
xor
stos
inc
add
or
xchg
cmpsb
jle
out
mov
push
pop
jnp
or
mov
or
scas
add
push
add
mov
fsubrs
sub
ljmp
cltd
pop
sub
dec
aad
add
fcoms
push
inc
mov
loop
pop
sub
sbb
cmpl
xor
push
or
insl
or
push
mov
pop
push
hlt
or
sub
add
push
enter
fwait
int3
and
mov
dec
fwait
sbb
les
jo
aaa
sbb
or
call
stc
dec
je
mov
jo
js
push
add
mov
sahf
in
scas
pop
cmp
inc
je
sbb
and
mov
scas
push
inc
xchg
negl
jle
mov
or
lods
test
repz
aas
call
jbe
out
add
das
mov
sbb
aam
adc
jbe
dec
call
cmpsb
lahf
sub
sbb
dec
mov
adc
shlb
fwait
sbb
push
pusha
popf
lea
dec
insl
push
cmpsb
stos
test
mov
sub
jns
inc
jmp
push
ja
mov
jnp
or
repnz
add
xor
push
push
dec
adc
in
pusha
call
add
jo
jp
enter
pop
gs
mov
ss
pop
xor
psubq
pop
lods
ror
repnz
mov
pxor
adc
jg
or
or
pop
adc
mul
push
sahf
dec
in
adc
push
gs
mov
push
xlat
pop
xchg
and
rorb
rorb
inc
inc
subl
ret
mov
or
xchg
movsb
and
add
add
or
cli
dec
push
or
loopne
outsl
add
out
sub
inc
sbb
adc
mov
loopne
cli
sti
add
push
daa
mov
mov
inc
lcall
add
orb
jbe
stos
test
pop
pop
xor
mov
xor
xchg
jo
loop
call
rcrl
loop
add
lds
xor
lock
jns
loop
loopne
mov
add
mov
pop
pusha
dec
fmuls
sub
inc
shl
mov
shlb
inc
aam
loop
rolb
sub
dec
jmp
jmp
mov
cltd
insb
pop
and
mov
out
mov
inc
dec
imul
test
mov
pop
mov
repnz
nop
cmp
cmp
ljmp
dec
cmp
add
cli
repnz
pop
test
add
or
dec
mov
adc
jns
shlb
test
and
or
movsl
lret
xor
push
sbb
in
push
or
fdivrs
stos
inc
adc
xchg
mov
xchg
in
lar
inc
xchg
push
aam
xor
cmp
inc
movsl
inc
rorl
or
and
or
cli
out
lcall
cld
not
inc
pop
lock
pop
popf
je
mov
and
cmpsb
and
sahf
pop
ds
push
or
icebp
jne
shl
test
mov
or
inc
shl
clc
loope
inc
mov
jl
mov
lea
mov
test
inc
mov
pop
lahf
cltd
inc
jno
dec
mov
hlt
test
inc
jno
add
pusha
addb
mov
inc
sub
lea
sub
cmp
sub
mov
fs
push
pop
xor
jmp
xor
dec
lds
inc
lock
or
jecxz
popa
inc
or
lods
lcall
cmp
jl
inc
xor
pushf
mov
clc
dec
dec
hlt
lea
add
fcompl
gs
xchg
lret
mov
ret
daa
jmp
mov
push
jmp
or
inc
scas
cld
sbb
jge
and
rcl
sub
inc
pop
scas
shl
loop
rolb
add
ljmp
js
or
mov
or
cmp
adc
rclb
add
pushf
or
and
adc
cmpsb
inc
sbb
xchg
repnz
pop
sbb
jne
sbb
mov
in
sbb
add
add
and
and
pop
stc
test
clc
add
inc
xchg
xchg
mov
or
jl
or
pop
mov
scas
inc
push
and
and
sbb
aam
add
mov
xor
push
adc
jmp
pop
mov
shll
pushf
mov
inc
and
xchg
dec
jne
cli
xor
mov
and
cmpsb
mov
lods
mov
js
fidivrl
or
or
jmp
xor
ljmp
xchg
add
test
mov
sub
cmp
ja
push
dec
jmp
adc
sbb
and
mov
push
cmp
rolb
add
je
bound
mov
inc
adc
jmp
enter
shl
jmp
jge
out
xor
push
jmp
cmpsl
mov
jmp
lods
pusha
mov
and
sub
and
inc
lock
jbe
inc
jle
cmp
dec
adc
jg
jle
jmp
dec
push
mov
jne
jbe
lods
loopne
popf
or
sub
or
fs
inc
push
jmp
lcall
sbb
sub
or
sbb
push
pop
jge
pop
jnp
jae
cmp
test
aam
add
add
jne
stos
dec
jae
popa
inc
cs
imul
sbb
inc
jno
jge
jmp
and
outsb
mov
call
outsb
js
sbbl
pop
push
sub
ja
adc
gs
orl
lods
jnp
pop
pop
aas
push
and
andb
cmp
mov
jo
test
mov
je,pn
scas
call
mov
in
sub
mov
push
ss
fldenv
cmp
jnp
jg
adc
add
inc
testl
push
mov
rcr
hlt
pop
inc
inc
cmp
sbbb
mov
or
pop
cli
and
sub
sbb
rolb
or
jecxz
add
mov
jmp
push
cwtl
pop
mov
xor
mov
dec
and
pop
mov
hlt
pop
jo
in
mov
mov
aaa
dec
cmp
and
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
mov
mov
mov
or
stos
nop
sbb
ret
xchg
leave
mov
jge
jle
lock
mov
adc
push
lahf
push
and
out
dec
test
mov
add
pop
dec
addr16
inc
push
inc
mov
sbbl
mov
test
add
mov
dec
mov
cmp
xchg
mov
dec
or
fs
xchg
popa
insb
push
mov
mov
decb
ret
and
adc
xor
sbb
nop
sarb
mov
sbb
ja
or
or
sbb
lods
mov
es
daa
fiadds
inc
testl
outsb
aaa
mov
jne
or
jne
test
clc
mov
inc
into
jne
inc
or
cmp
lcall
push
hlt
int3
add
jne
sub
mov
test
bound
psrlq
pop
mov
dec
fcmovbe
or
les
lea
sub
push
es
sub
icebp
ds
cmpsl
inc
dec
lock
ja
pop
or
js
sbb
insl
mov
pushf
sub
xchg
stc
jg
add
stos
dec
mov
aaa
sarb
js
mov
aam
gs
jg
or
lods
add
or
shr
add
fldenv
or
push
out
mov
bound
or
adc
inc
mov
cs
mov
les
or
adc
jmp
or
fcom
insl
fadd
loopne
shr
or
mov
shl
call
jne
dec
sub
insb
mov
mov
push
push
ja
sbb
and
xorb
dec
jge
cmp
add
ficompl
cwtl
or
sahf
sar
pop
sub
push
aas
in
fiadds
push
call
fsubrs
mov
and
add
add
cs
mov
sub
ja
orb
cmp
or
sub
add
lret
into
jmp
or
mov
dec
and
les
test
add
jp
fmuls
pusha
push
lret
das
sub
add
mov
sbb
xor
adc
les
ret
add
bound
inc
add
xchg
add
das
inc
insl
push
sub
add
xor
out
js
les
or
jle
lods
fimull
shrb
jl
push
repz
inc
dec
pop
push
sbb
icebp
cmp
add
inc
mov
mov
mov
adc
sub
adc
mov
sahf
pop
cmp
or
adc
or
fidivl
adc
inc
cs
or
inc
and
ss
or
loopne
popa
xor
mov
dec
cmpb
je
mov
cmp
push
sbb
add
or
mov
out
jp
fbld
fcompl
addr16
pusha
xchg
push
fcomi
orb
sbb
mov
out
clc
cmp
scas
imul
adc
or
lahf
xor
cmc
and
xchg
xchg
push
and
movsb
das
movsb
push
push
xchg
testl
and
jmp
and
inc
dec
fadds
mov
testb
sub
push
jo
ficoml
loopne
push
mov
jbe
or
add
jl
data16
sub
adc
rcll
dec
jo
push
cmpl
out
clc
add
xchg
sub
and
sbb
mov
jne
movb
and
add
cwtl
mov
add
add
push
fisubl
xorb
mov
es
sahf
scas
test
pop
add
add
incl
lret
jmp
sub
add
adc
add
pop
aam
imul
add
sbbl
mov
inc
pop
inc
out
cs
dec
jns
les
sub
inc
fs
sub
cld
jo
jns
xor
push
or
add
dec
pop
sub
add
or
adc
sub
push
push
xchg
ret
addr16
mov
add
mov
sub
adc
fs
xor
add
pop
adc
clc
pusha
jg
cmp
insb
push
add
add
cwtl
jmp
ja
push
ret
jbe
push
clc
dec
adc
pusha
cmp
aam
sub
adc
lods
dec
rcrb
lods
xor
shl
sub
add
enter
insb
xchg
and
push
cmp
mov
jp
lret
in
add
push
mov
bound
push
push
mov
fidivl
out
and
cli
insb
mov
xor
cmp
xor
test
push
call
loopne
sbb
imul
pop
xchg
jae
cld
pop
fldl2t
call
ret
cld
sub
cmp
xchg
or
adc
or
add
lock
adc
lret
leave
lock
and
mov
imul
fsubrs
or
inc
rorb
sar
lea
mov
mov
faddl
enter
bound
push
popa
loopne
das
inc
add
push
or
enter
mov
loopne
js
push
pop
sbb
pop
decl
addr16
xor
leave
and
add
cmpsb
sti
add
xchg
and
popf
insl
loopne
rorb
dec
fwait
cmp
and
inc
neg
sbb
jecxz
out
jg
add
daa
xor
or
jne
pop
daa
cmp
adc
mov
out
test
push
scas
test
dec
push
jno
pusha
aam
sbb
sub
bound
mov
adc
xor
adc
sub
dec
xchg
fldcw
dec
insb
bound
push
dec
push
movswl
loopne
je
and
and
pushfw
or
imul
mov
ret
mov
add
add
mov
shrd
push
jle
vpaddusb
cmp
ss
imul
clc
mov
xlat
data16
or
cmp
xchg
stc
inc
ds
leave
add
jmp
xchg
clc
sub
mov
adc
add
push
js
inc
call
push
and
addb
add
sbb
lock
mov
out
and
pop
and
sub
sbb
js
jg
outsl
dec
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
xor
mov
filds
jb
mov
add
jl
xor
cmp
adc
jbe
shll
adcb
not
cs
fs
dec
inc
dec
pop
repnz
mov
or
pop
adc
stos
mov
cwtl
daa
mov
adc
jae
and
stc
mov
push
or
daa
aam
sub
jne
scas
sub
jp
es
int
call
push
jne
loop
loope
and
jb
js
sub
mull
sub
xchg
cwtl
lods
leave
orb
call
xchg
add
lock
adc
pop
xchg
inc
sub
loop
jge
mov
add
mov
loop
push
stos
popaw
push
mov
pop
push
movsb
add
xor
sbbb
mov
and
adc
xor
sub
pusha
xor
push
mov
xchg
je
push
cs
dec
inc
shl
jne
cmp
icebp
or
sub
inc
loopne
lcall
xchg
sbb
inc
rorb
add
mov
and
dec
adc
push
insl
push
jmp
insl
add
or
aaa
je
jecxz
jl
fisubrs
mov
inc
add
mov
inc
mov
pop
incb
shr
loop
mov
mov
sbb
jns
adc
jle
jne
sti
clc
gs
or
pop
data16
fwait
dec
jns
shr
sub
mov
int
push
inc
je
dec
out
xor
shr
repnz
sub
popf
ljmp
xchg
fcoms
loopne
dec
jnp
mov
cmp
sub
icebp
push
enter
movsl
sbb
adc
call
jne
fmull
insl
icebp
sub
clc
fstps
or
and
push
fs
movsb
loope
add
or
push
dec
rol
ret
xor
and
add
divb
add
or
and
inc
xor
cmp
sub
out
push
inc
add
fldl
inc
ja
cmp
fildl
sahf
pop
inc
sub
pusha
arpl
cmp
ds
rorb
push
sbb
ljmp
mov
hlt
sbb
dec
push
cmp
push
cmp
loopne
inc
lds
inc
cmpsl
hlt
sbb
jp
icebp
cld
lahf
pop
push
fs
dec
push
sub
into
add
das
sbb
aaa
dec
pop
push
xorb
aaa
xor
xor
add
mov
pop
cmp
push
imul
cmp
popf
insb
loop
sub
pop
cli
sub
jl
cs
lock
jmp
in
jmp
sub
and
mov
clc
jnp
xor
mov
cmpl
mov
cs
or
push
aam
pop
bound
dec
push
mov
and
add
mov
or
jp
pop
pop
out
pop
addl
test
mov
ret
lret
imul
mov
lret
mov
and
jbe
jge
mov
push
insl
pushf
pop
push
adc
xor
push
inc
cmp
and
js
or
int
lock
mov
mov
jl
cmp
inc
adc
jecxz
icebp
mov
xor
lret
nop
add
sub
iret
mov
out
outsl
or
adc
dec
jne
push
push
jmp
or
jmp
js
popf
cmpsb
testb
sub
arpl
mov
mov
pop
insl
or
sbb
and
xchg
cmp
xor
sub
test
mov
mov
hlt
cmp
popf
mov
lahf
xchg
lock
popa
loop
pop
push
sbb
loope
adc
inc
js
or
mov
push
jp
cmpsl
mov
or
or
push
adc
aad
jno
sub
js
sbb
and
inc
cmpl
in
mov
add
jecxz
push
sarb
cmpb
push
scas
xor
push
push
mov
cwtl
push
xor
ficomps
cmp
or
add
push
pop
adc
add
lea
jae
dec
jp
out
inc
xrelease
pop
pop
add
pop
and
xlat
rolb
pusha
lods
enter
or
jge
notl
jecxz
enter
cmp
push
pop
mov
or
push
inc
mov
sbb
das
add
jle
or
dec
fiadds
arpl
rolb
hlt
addr16
xor
cmp
sbb
inc
jmp
arpl
or
adc
mov
and
in
xchg
mov
cmp
inc
test
adc
mov
sub
push
push
cmp
xlat
and
outsb
test
jns
and
adc
add
push
lret
cld
jo
inc
sbb
rorb
xchg
sbb
pop
jmp
adc
cmp
pop
testl
leave
xchg
aam
pop
aaa
repnz
and
js
pop
fdivrl
pop
jp
mov
xchg
pop
imul
call
enter
lea
add
xor
movsb
cmp
dec
xchg
sbb
xor
push
xchg
test
adc
and
xor
mov
ljmp
sub
and
jae
push
mov
mov
pop
mov
or
loope
adc
mov
xor
sbb
inc
and
or
incl
aaa
xchg
sub
inc
xchg
push
sbb
ret
or
and
mov
xchg
sub
mov
sub
adc
fs
jo
adc
push
lock
out
pop
xor
jmp
sub
sbb
and
les
or
and
sbb
cs
pop
leave
adc
and
insl
sbb
adc
cmp
inc
or
lds
rclb
imulb
ja
inc
cmp
faddp
rolb
jg
mov
dec
cmp
lea
mov
lahf
or
xor
shr
add
or
xchg
add
adc
sub
notb
cld
mov
shr
or
mov
add
add
or
bound
push
sti
adc
stos
mov
cmp
or
mov
add
or
add
int3
pop
sbb
push
sub
clc
inc
fs
mov
xchg
sub
lret
add
or
into
dec
testl
cli
mov
add
stos
or
mov
inc
add
push
xor
mov
and
mov
ret
push
dec
test
iret
or
dec
cmp
out
inc
inc
loope
inc
jbe
pop
stos
sub
and
pusha
dec
in
es
ficoms
cwtl
add
adc
iret
mov
lock
andl
adc
leave
test
leavew
mov
add
pushl
stos
idivb
sbb
sub
or
test
test
mov
sbb
lret
je
dec
call
pusha
push
or
and
mov
xchg
movsb
ja
in
adc
push
adc
icebp
sbb
cmp
outsb
int
adc
and
push
add
mov
jmp
call
mov
sub
jne
inc
fidivl
pusha
push
ljmp
push
adc
je
and
test
inc
push
out
sub
jns
jle
mov
es
dec
push
nop
rcr
sub
je
push
jle
cld
inc
add
and
leave
push
les
or
add
mov
cmp
dec
adc
ja
mov
push
dec
xchg
std
fildll
jg
lock
jl
cmpb
jl
xor
add
mov
idiv
dec
xor
pop
mov
xchg
adc
les
push
rcll
adc
cli
mov
dec
inc
push
push
mov
push
push
and
pop
nop
iret
xor
inc
inc
adc
fyl2xp1
push
dec
sbb
aam
lock
or
inc
cmp
sub
and
adc
or
pop
cmp
dec
add
shlb
adc
enter
call
or
test
jne
lret
cmc
sbb
flds
repnz
and
shll
and
je
mov
xor
rorb
pop
add
xor
fwait
mov
or
hlt
rolb
into
mov
sub
movsw
xor
bound
inc
or
fsubrl
hlt
aam
addl
movl
fmull
pop
and
xchg
jg
jo
or
inc
inc
mov
neg
neg
sbb
sub
xor
sti
adc
sbb
sbb
adcl
and
push
push
inc
and
fsts
xor
jne
icebp
sbb
nop
mov
sbb
and
sbb
lret
cmp
dec
jns
ret
push
int
jnp
jne
pop
fistpl
rcrb
loop
stc
inc
jae
or
jae
mov
rcl
ljmp
shr
test
adc
mov
push
idiv
and
mov
je
mulb
mov
add
inc
pusha
cwtl
push
bound
mov
sub
lea
mov
jno
inc
adcl
or
xchg
ds
cs
or
push
mov
cmp
sbb
aas
cmpsl
sub
sub
test
ds
or
iret
mov
daa
push
or
adc
lret
push
cld
or
mov
insb
mov
mov
cmp
push
pop
and
lock
cmc
nop
dec
gs
add
mov
mov
or
cmp
push
int3
ljmpw
and
jo
enter
aaa
dec
fidivs
or
push
in
jge
dec
addl
fimull
mov
mov
testb
sub
push
sub
leave
je
wbinvd
incl
shll
and
xor
in
pop
je
movsb
and
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
shll
dec
push
shll
leave
adc
mov
xor
idivl
pop
add
nop
sbb
dec
insl
and
push
cmp
adc
cmp
mov
mov
push
xor
pop
pop
jne
push
es
scas
sbb
das
mov
jmp
idiv
fidivl
iret
push
push
pop
cwtl
jl
js
mov
inc
ljmp
mov
pop
and
sarl
movsl
dec
mov
stos
cmp
testl
xor
lea
inc
xor
mov
in
jmp
mov
dec
aaa
pop
mov
js
inc
inc
sbb
test
pop
cmpb
mov
jb
jno
cmp
push
xchg
xor
inc
jmp
sub
xchg
xor
push
inc
mov
adc
push
sbb
sahf
push
push
in
or
les
jns
cltd
add
xor
in
inc
sbb
add
sub
xor
pop
mov
or
pusha
sub
sarb
dec
mov
push
rcl
repz
repz
aad
xlat
inc
insb
ds
fcomp
fstpt
orb
data16
xor
movb
jmp
or
je
lea
into
data16
sub
shl
jl
mov
or
test
mov
mov
add
push
or
or
add
cltd
mov
aas
pop
sub
gs
outsb
or
je
test
and
call
cmp
es
push
xor
mov
pusha
push
jns
sub
push
bound
and
jg
add
push
pop
dec
jecxz
lcall
adc
or
idiv
jg
sbb
dec
lea
sar
inc
bound
aaa
js
mov
bound
or
fisttpl
mov
push
xlat
add
out
loop
push
pushf
push
mov
lock
sub
testb
push
mov
add
es
xchg
dec
or
jle
insb
jp
mov
jo
adc
les
dec
movb
es
push
or
sub
add
hlt
mov
dec
and
not
decb
or
mov
and
lea
pop
sbb
les
movsl
jns
jae
xchg
inc
adc
add
push
adc
push
inc
pop
pop
les
or
dec
testl
lods
loopne
and
inc
inc
or
push
rcrl
sub
mov
mov
jne
inc
notb
mov
dec
test
test
js
mov
imul
loopne
push
and
fimull
mov
fimuls
cltd
cwtl
dec
push
dec
enter
jns
je
sub
cmp
pop
shll
inc
repz
addl
ror
fwait
cwtl
mov
jge
jl
test
test
rol
add
stc
jle
jle
shrl
mov
shr
movb
cld
or
and
hlt
rorb
add
ds
push
push
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
in
lea
mov
or
dec
mov
pop
sbb
inc
lods
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
pop
adc
clc
inc
mov
ljmp
call
push
push
jnp
sbb
adc
mov
or
ret
sub
cmp
scas
outsl
mov
mov
xor
mov
icebp
js
and
and
out
je
xor
mov
imul
mov
xor
and
dec
cmpsl
add
jge
divb
or
pushw
sub
shll
jge
adc
mov
jb
dec
enter
add
or
sbb
xor
mov
sbb
dec
sbb
andb
ss
inc
arpl
fldl
sarl
cmpsb
push
sub
jl
mov
adc
or
call
out
xor
push
cmp
cld
lea
fisubl
mov
bound
pop
insl
xchg
inc
sub
lods
rolb
cmp
daa
loop
add
scas
xor
sbb
movb
and
sbb
sbb
orl
push
in
sub
or
jge
or
cwtl
mov
lock
jmp
add
nop
lret
jne
sbb
in
sbb
cmp
mov
and
mov
adc
push
xor
pop
sub
cmp
inc
add
xor
push
and
inc
add
add
push
nop
push
mov
cmp
cmp
push
adc
xchg
jle
out
adc
fs
mov
mov
popa
xchg
call
ljmp
push
rcll
cmpsb
mov
out
lods
das
sbb
neg
mov
fnstsw
inc
imul
jmp
cs
loopnew
fmuls
rclb
pop
add
and
inc
testl
adc
cltd
into
in
out
adc
pushf
rcrl
add
ds
repnz
mov
add
lahf
stos
xchg
or
out
enter
jl
or
sub
ljmp
push
movsb
xabort
mov
add
enter
test
ja
cmp
push
shlb
add
testl
jne
incl
mov
add
in
into
or
mov
inc
xor
add
pop
dec
aad
sqrtps
sub
nop
dec
add
decb
jge
cmpb
push
cmp
movb
dec
cmp
mov
mov
add
add
fadds
push
mov
mov
test
mov
jne
or
mov
jb
int
pushf
cld
sub
enter
inc
ret
and
add
push
rcll
add
xchg
jbe
add
rclb
mov
add
add
add
cmpsb
adc
and
popf
loop
mov
mov
je
push
mov
inc
jl
je
push
or
movsl
dec
loopne
or
dec
cmp
jmp
mov
sahf
mov
add
or
sub
add
nop
movsl
xchg
mov
sub
imul
mov
movsl
shlb
add
pusha
and
add
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
cmp
pop
and
pop
pop
cmpb
cmpps
jne
or
or
aam
jns
pop
or
sbb
dec
cmp
adc
lret
or
fsubl
add
adc
sbb
jl
insl
lock
mov
and
jns
pop
add
or
dec
pop
lahf
push
add
push
and
xchg
xor
and
enter
sbb
icebp
add
xchg
mov
nop
mov
test
push
jle
cmp
fldcw
mov
pop
nop
and
xorb
inc
es
or
inc
stos
add
or
add
ret
dec
cmp
dec
aam
adc
mov
sete
nop
mov
bound
data16
cmp
or
add
addr16
lcall
cmp
pop
jbe
jle
pusha
xor
pop
mov
xor
inc
jg
daa
daa
iret
lret
into
into
into
mov
pop
and
sbb
nop
pop
cwtl
rorb
mov
dec
cld
pop
mov
or
pop
pop
es
in
add
or
popf
pop
lcall
add
xchg
ja
mov
test
sbb
sahf
add
add
add
adc
or
test
and
ret
je
and
xor
inc
sub
or
fsubrs
jmp
jmp
daa
lret
push
xor
pusha
push
mov
xchg
incb
scas
sbb
push
and
adc
xchg
loop
inc
xchg
shll
pop
pop
fcomps
xor
cmp
or
idivb
xchg
push
sub
addb
and
cmp
sbb
sub
push
sahf
jle
xlat
push
cld
pushw
fimuls
adc
sbb
xlat
jle
and
xor
push
daa
or
and
or
jge
addr16
ljmp
ljmp
xor
clc
pushf
icebp
daa
push
xor
mov
and
pushf
dec
sbb
call
xlat
mov
push
adc
sub
pop
cltd
orb
sbb
inc
jmp
adc
xchg
add
add
fcompl
ds
je
pop
ret
jp
add
cmp
daa
loop
push
lret
inc
inc
int3
call
mov
cmp
inc
lds
out
ds
adc
out
mov
jo
jbe
ljmp
shll
cwtl
fwait
push
or
shlb
jle
hlt
aam
fildll
loopne
das
mov
jo
or
repz
push
loope
rolb
pop
xchg
imul
xor
xchg
inc
push
xor
leave
pusha
iret
mov
shll
mov
inc
pushl
in
or
test
popa
fldt
and
xor
mov
fnsave
aam
pop
popf
jb
dec
shlb
minps
nop
loope
call
scas
scas
jge
sbb
cwtl
add
mov
dec
shlb
fists
push
rclb
fcoml
add
adc
xchg
inc
push
gs
addr16
clc
jmp
cmpsl
xchg
mov
jge
andb
nop
lea
ret
xor
pusha
push
pop
push
imul
push
subb
imul
and
imul
adc
cmp
rcll
xchg
sbb
push
xor
dec
dec
sbb
mov
mov
leave
les
out
aas
insb
add
cmp
shrb
inc
sub
lds
jmp
push
adc
mov
push
dec
test
pop
les
sub
adc
add
mov
mov
fisubl
sub
pop
xor
and
iret
dec
inc
sub
or
push
jne
push
inc
das
lods
jp
cmp
movsb
outsb
imul
xchg
pop
leave
std
cmpsb
loopne
sub
mov
cs
stos
push
test
sbb
add
add
mov
cmp
cmp
scas
clc
add
rolb
fsubs
jle
pop
add
loop
sbb
clc
mov
cmp
aas
orb
mov
cmp
mov
sbb
dec
shrb
rcl
add
test
addb
jg
xchg
arpl
inc
jl
xor
push
lock
imul
sahf
insb
cld
add
mov
pop
jl
inc
dec
lea
ss
or
int3
add
fadd
test
js
push
or
in
inc
repnz
pop
nop
cmp
jae
fsubs
cmp
popf
bound
dec
loop
cmpb
add
lcall
test
mov
push
sub
js
std
addl
orl
mov
fcoml
js
sbb
jno
or
mov
pop
push
das
imul
push
sub
add
sbb
adc
mov
gs
hlt
incl
xlat
sbb
cmovg
adc
fadds
sub
add
push
or
add
adc
push
mov
xchg
pop
testb
jno
pusha
sbb
inc
inc
ds
orl
sbb
loopne
cld
sbb
xchg
mov
or
xor
add
push
dec
mov
dec
je
xor
or
ret
push
pop
xlat
xor
js
or
add
dec
sarb
add
inc
add
pop
mov
test
cli
int
ds
jg
data16
add
shlb
imul
lock
pop
inc
inc
or
dec
and
mov
or
add
mov
hlt
loope
call
pop
cmpsb
ss
scas
sub
or
outsl
out
cvttps2pi
mov
xor
lods
and
sbb
and
test
cs
popf
jbe
ret
lahf
xorl
sarb
fstps
nop
xor
adc
insl
mov
mov
sub
scas
sbb
adc
ret
addr16
adc
pop
sbb
lds
xlat
push
push
rolb
fucom
dec
popa
pusha
cmpsl
mov
int3
add
add
pop
dec
arpl
or
dec
in
jl
or
mov
push
repz
loope
inc
dec
or
out
aad
idiv
sbb
ret
addr16
ss
faddl
mov
nop
call
fs
cmpsb
insl
inc
gs
loopne
fadd
clc
mov
in
dec
insb
mov
aad
test
cmp
jbe
or
sub
cwtl
jns
xor
sbb
inc
test
sarb
xor
add
fcom
xchg
notb
or
shlb
add
fs
in
test
inc
jo
leave
cmp
inc
lock
or
adc
xor
mov
xchg
dec
xor
loope
inc
jl
pushf
xor
mov
rcll
inc
icebp
ret
repz
sbbl
add
fdivs
jge
cmpsb
in
xor
mov
nop
inc
jne
insl
and
add
jl
cld
adc
int3
add
and
cmp
push
aas
insb
pop
and
dec
in
les
xchg
outsl
sbb
inc
adc
insb
sbb
jne
cmp
add
and
adc
push
aam
pop
xchg
loopne
test
in
mov
xchg
orl
mov
orb
pop
xor
inc
inc
add
rcll
push
cmp
je
cltd
bound
dec
mov
sbb
shr
and
sub
mov
mov
jns
or
sub
sub
jnp
andl
call
xchg
popa
xchg
mov
les
push
and
stos
test
in
jo
dec
pop
xchg
in
jg
pop
mov
loopne
or
es
mov
push
in
inc
sbb
push
rcr
adc
fwait
push
cmpb
add
push
jb
xchg
in
in
scas
imul
and
stc
lods
pop
hlt
add
ret
dec
mov
mov
sub
add
jb
push
add
les
fdivl
ljmp
test
aad
popa
in
pop
test
cmpsb
mov
pop
mov
jmp
dec
or
aaa
mov
xchg
in
rcll
pop
sbb
stos
cmp
lods
mov
pop
pop
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
mov
pushf
xchg
iret
addb
sub
adc
add
leave
and
push
adc
and
dec
xor
and
sub
xor
xor
and
cmp
xor
and
inc
dec
fs
jne
insb
add
lahf
jge
sar
sbb
add
sbb
add
add
nop
enter
leave
add
aam
add
push
jb
data16
hlt
and
inc
cld
clc
jmp
xchg
inc
lock
adc
js
cmpl
movl
xor
mov
inc
rorb
bound
in
and
fadds
fwait
aam
or
fs
insb
inc
rolb
test
jge
rolb
mov
test
in
mov
push
push
mov
sbb
test
push
and
mov
shll
mov
int3
loope
mov
jmp
out
das
aaa
fimull
insl
call
or
nop
and
fsubs
inc
std
clc
jg
and
cwtl
sbb
add
int3
pop
clc
aam
or
loopne
add
rol
roll
jb
ds
in
adc
jne
rolb
push
test
mov
cmpsb
add
adc
add
pushf
testl
lock
add
mov
push
test
rorb
mov
call
pusha
fisubl
sub
or
mov
js
pop
dec
roll
lods
insb
shll
leave
stos
and
add
lea
cmp
out
lock
mov
xchg
pop
lea
sbb
jg
gs
loopne
enter
in
int3
dec
fwait
sub
cmp
in
and
xchg
cli
cmp
mov
fmuls
pop
push
aas
or
or
out
lcall
adc
xor
rclb
xchg
out
mov
mov
pop
or
in
add
pop
test
inc
and
mov
and
iret
fcom
xor
sbb
mov
lea
xor
xchg
xchg
xchg
fldt
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
scas
and
xor
iret
or
mov
sub
pop
js
pop
les
fbstp
clc
es
sbb
add
cwtl
adc
cmpsl
inc
xor
mov
push
inc
adc
or
lcall
test
inc
outsb
out
call
loop
push
cmc
mov
nop
call
pop
mov
pop
mov
xchg
or
inc
jo
insb
test
insb
ljmp
pop
enter
xchg
sub
jno
push
aam
ss
imulb
int3
xor
cmp
aas
inc
adc
or
fsubrs
dec
outsl
fsubs
das
rclb
or
xchg
data16
pop
fsubl
call
mov
popf
outsb
mov
xorb
cmp
fisttpll
sti
cmp
cs
int
pusha
xchg
outsb
xchg
mov
fstps
xchg
xor
in
pop
test
dec
adc
fdiv
sbb
pop
filds
dec
addb
jecxz
fnsave
pusha
pop
add
jo
cmpsb
outsb
lods
dec
mov
or
cld
pop
push
mov
xor
adc
cltd
insl
xchg
lret
insl
pusha
inc
add
cmp
dec
xor
jne
test
jg
nop
and
adc
mov
pop
mov
mov
push
mov
adc
lods
adc
jecxz
xchg
or
mov
pop
lock
scas
inc
test
inc
loopne
xchg
dec
add
or
imul
mov
gs
pop
sbbl
imul
inc
inc
dec
or
in
into
push
adc
lahf
push
nop/reserved
inc
and
sub
inc
test
adc
jl
inc
ljmp
cmp
add
daa
mov
aas
rcrb
lock
cld
lcall
mov
std
jmp
leave
subl
adc
mov
in
xchg
stc
cld
and
nop
or
insb
enter
stos
shrb
insl
or
shlb
inc
dec
mov
mov
mov
lcall
pop
enter
cmpsl
addl
pushf
push
cmp
or
or
in
inc
or
or
nop
inc
push
or
or
test
aad
in
sub
sbb
and
aaa
call
push
xchg
int
sub
clc
popf
insl
sub
lea
sub
loopne
popl
or
rorl
xor
ffree
rorb
xor
div
adcb
imul
in
jae
xlat
add
mov
call
ljmp
cmp
lahf
stos
add
aas
lods
jl
enter
rcrb
sarb
sbb
gs
jmp
mov
mov
add
mov
stos
movsb
xchg
in
xchg
dec
ss
popf
rolb
mov
aad
push
movsb
mov
xchg
lock
aam
sbb
sub
cmp
adcl
je
subb
push
or
mov
fidivs
icebp
dec
imul
adc
mov
adc
push
dec
jno
adc
mov
les
adc
mov
inc
push
popf
loopne
int3
fwait
nop
inc
pop
push
xor
jb
jb
enter
jb
jb
mov
jb
xchg
cwtl
mov
dec
outsl
sub
nop
movsb
lds
int3
xor
push
test
mov
push
rolb
add
movsb
test
aad
ret
test
cmp
jns
or
cmp
cmp
ds
xchg
sbb
inc
push
mov
and
test
movsb
xchg
nop
adc
mov
lods
popf
fsubl
out
daa
pop
daa
daa
push
pop
int3
mov
mov
pop
jo
mov
add
cmpsb
lea
jp
mov
lds
fbstp
push
add
lock
pop
xchg
fcoml
addl
loope
pushf
mov
cmpsl
adc
in
shrl
stos
jne
push
into
pop
xor
in
lock
sub
pcmpgtw
inc
and
fbld
add
mov
test
addb
dec
and
loopne
sete
out
insb
testb
sbb
and
call
and
or
lods
mov
je
push
pop
test
xchg
mov
mov
insl
data16
rorb
aas
ja
rorl
popf
push
rorb
fsubrs
mov
sbb
adc
xor
ret
fsub
or
add
sbbb
mov
rcll
or
inc
scas
loopne
sahf
xor
stos
in
fs
inc
adc
aaa
or
fsubs
xor
std
int3
jae
or
sti
movsl
or
xchg
sbb
fisttpl
inc
movsb
pusha
mov
lea
sarb
test
add
inc
aam
mov
sub
add
dec
and
inc
xchg
sar
xchg
sbb
fs
aam
enter
xchg
mov
mov
aam
lock
in
dec
cwtl
inc
lcall
rclb
aas
fmuls
cmp
lds
pop
xor
stos
in
lock
dec
dec
push
push
pop
push
arpl
cmpsl
fadds
or
gs
inc
and
and
xchg
scas
subl
fnstcw
ljmp
fstp
adcl
adc
and
leave
sub
pop
or
xorb
arpl
das
fistps
jmp
aam
sar
insb
jg
dec
jl
push
add
dec
in
insb
mov
pop
out
push
sbb
in
pop
mov
jle
xor
add
and
and
cld
sti
mov
shlb
pushf
add
pushf
aaa
or
in
push
faddl
pushf
mov
mov
scas
in
or
pop
int3
enter
or
shlb
out
in
mov
mov
nop
stos
inc
and
xor
push
dec
shr
mov
inc
aas
lahf
es
loopne
mov
scas
inc
mov
cs
adcb
cwtl
or
lds
test
stos
out
aas
hlt
jmp
les
inc
lds
out
shlb
cmp
or
inc
cmpsb
sbb
mov
push
dec
jnp
push
or
psubsb
adc
repnz
push
pop
add
imul
cwtl
movsb
sub
cmc
dec
sahf
xchg
and
insb
test
and
mov
nop
sbb
lods
mov
adc
inc
ficoml
outsl
aam
lret
lds
or
adc
faddl
inc
fiaddl
je
and
leave
xchg
jae
fcompl
popf
lock
xchg
adc
mov
in
pop
mov
mov
ret
int
adc
xchg
mov
and
dec
xchg
rorb
mov
push
rorl
and
pop
mov
les
cmp
decl
in
inc
movsb
lea
arpl
xchg
sarl
adc
xchg
mov
lock
lods
lods
das
ret
dec
push
mov
icebp
add
enter
dec
ja
test
push
jo
xlat
pop
mov
mov
out
adc
and
push
lcall
daa
addb
xor
mov
mov
fbstp
in
push
adc
xor
lea
xorl
bound
jns
mov
or
outsl
pop
push
adc
mov
aad
dec
rcl
cmpsl
cmpb
mov
decl
lahf
xor
mov
xchg
inc
out
jne
push
dec
cs
pop
sub
movsl
fwait
pop
test
inc
fs
mov
lods
adc
jo
mov
out
lea
mov
xor
out
pusha
or
mov
xchg
lcall
mov
mov
sub
unpcklps
popf
sbb
or
imul
xchg
mov
inc
push
scas
popa
push
call
inc
mov
or
xor
or
inc
mov
jne
push
stos
inc
mov
and
pop
jge
rcrl
mov
mov
mov
lock
or
and
dec
or
lock
xor
rolb
and
mov
add
outsl
movsb
jo
sbb
xchg
pop
int3
int3
dec
xor
cmp
fadds
mov
sbb
out
das
test
adc
mov
push
xchg
cmp
jecxz
mov
loop
jne
aad
and
adc
movsb
xchg
ret
cmp
repz
xor
das
adc
jmp
or
les
fists
cld
fsubrl
popa
jne
add
and
movsl
shl
test
pop
testl
push
sub
popf
shlb
test
adc
mov
jne
cwtl
incl
call
add
stos
aaa
sbb
push
jecxz
xchg
jle
adc
or
add
push
jno
xor
sub
jnp
and
cmp
adc
jl
dec
mov
call
adc
pop
js
adc
cld
jne
movl
mov
inc
pop
int3
pop
les
test
mov
mov
fisubl
les
inc
jae
movsb
test
jns
addb
inc
mov
imul
cs
sub
mov
fcompl
js
mov
inc
subb
rorb
xor
rorb
mov
add
pushf
dec
xor
adc
not
and
orb
xor
xor
fisttps
push
inc
lods
inc
mov
pop
mov
out
xor
add
test
aam
push
mov
add
test
sti
insl
dec
roll
xchg
or
mov
or
cwtl
xor
and
inc
adc
or
jl
iret
jo
xchg
fsubl
test
insb
mov
pop
repnz
pop
or
xor
cmp
xor
mov
les
dec
daa
cwtl
in
nop
leave
pop
pop
loopne
fsubr
das
in
xchg
out
sub
jbe
fdivl
repz
or
and
or
cmp
mov
xchg
sbb
mov
lret
loop
mov
inc
add
lret
jb
inc
sbb
popf
lock
jb
adc
mov
sbb
mov
dec
in
scas
jne
pop
shll
mov
pushf
fwait
mov
in
cmp
leave
mov
js
push
andb
mov
dec
dec
dec
cwtl
pusha
leave
xchg
or
in
push
dec
push
fsubs
test
lock
dec
push
fdivr
lock
aad
and
jecxz
call
int
loopne
xchg
loopne
inc
cltd
or
out
ret
mov
or
add
in
hlt
push
jg
cmpsb
add
or
in
xor
std
inc
es
add
or
cltd
nop
notl
out
mov
fs
mov
sbb
lods
ret
inc
inc
mov
ret
xor
push
mov
in
jo
push
cltd
xchg
movsl
or
sahf
mov
add
in
add
pop
add
stc
and
sbb
and
ja
or
dec
rcll
fsubrs
adc
ret
sub
in
test
and
in
inc
pop
or
inc
mov
lret
cmpb
repnz
movsl
fdivs
xchg
push
insb
mov
invd
pop
das
and
or
add
or
add
psubusb
xchg
sbb
sub
popa
add
pop
jl
mov
sbb
push
add
rcrb
rorl
pop
movsl
sub
and
jnp
js
fisttps
adc
in
roll
xchg
ss
add
imul
adc
in
add
cltd
mov
inc
inc
or
pusha
test
sbb
clc
xchg
mov
sub
xchg
adc
xor
mov
add
inc
popf
nop
rcl
mov
mov
pop
adc
dec
call
out
shr
shlb
aam
xchg
mov
sti
or
loopne
and
fadds
and
scas
inc
fs
jmp
pop
sbb
das
cmova
js
and
lods
aam
movsb
sbb
loope
and
add
sbb
test
add
test
cmp
add
jb
pop
adcb
mov
push
adc
or
push
pushf
or
pop
mov
inc
add
in
or
or
cmpsb
push
adcb
nop
mov
in
fmuls
adc
lds
push
adc
jo
adcb
stos
push
test
shr
in
shll
and
dec
insl
push
sti
pusha
gs
popa
sbb
xchg
out
add
lock
aam
es
popa
pop
inc
pop
mov
pop
pop
in
cwtl
or
fcmovnu
cmpsl
adc
mov
out
dec
out
fwait
mov
test
sar
xchg
cmp
imul
insl
pop
insb
fs
dec
es
pop
push
xchg
dec
es
js
dec
push
mov
fs
jo
mov
dec
rclb
inc
pusha
fsubs
cmpl
or
rolb
bound
outsl
aad
mov
les
xchg
enter
test
dec
leave
and
es
cmovl
and
push
js
dec
je
xchg
dec
xor
and
enter
xor
inc
mov
jo
dec
mov
pop
in
fisubrl
mov
xchg
jecxz
mov
adc
je
orl
mov
cmp
mov
lahf
inc
xor
dec
outsb
adc
lods
test
mov
lahf
mov
mov
mov
popa
lods
imul
clc
add
mov
pushf
movsb
js
fistpll
test
jno
fists
sub
jns
add
popf
aam
dec
loopne
xchg
mov
mov
adc
pop
das
mov
bound
daa
xchg
dec
inc
push
push
mov
or
cmp
mov
lahf
outsl
rcr
adc
mov
cs
or
or
stc
enter
pusha
adc
add
bound
arpl
clc
fistl
mov
pop
andb
imul
rclb
les
push
dec
mov
sub
mov
lret
lods
test
arpl
mov
mov
pop
jb
call
lahf
sbbl
dec
ret
rcll
sbb
andl
test
sub
cmp
mov
add
jp,pt
in
sub
add
nop
xor
mov
stc
inc
or
add
mov
jmp
mov
cld
inc
fldt
mov
push
mov
lock
aaa
mov
pop
add
push
pusha
add
cltd
dec
jne
mov
push
xchg
mov
adc
shl
pusha
sub
adc
dec
pop
mov
and
pop
and
pusha
out
lcall
inc
adc
inc
add
bound
sbb
fildll
cs
repnz
or
aam
or
sbb
dec
out
lock
test
ret
jle
roll
test
dec
sub
add
rolb
movsb
stc
fdivrp
mov
adc
stos
xchg
dec
sbb
cli
mov
mov
cld
cli
scas
fs
enter
cmp
dec
cmp
and
cmp
add
adc
js
in
inc
mov
lcall
shrl
cmp
and
adc
sub
xor
mov
fs
and
sbb
test
pusha
mov
sbb
test
ss
inc
nop
xchg
in
cli
call
popa
rcrb
fadd
int
imul
mov
fisubl
adc
shlb
scas
js
pop
adc
add
adc
test
adc
andl
in
nop
cltd
in
sub
push
test
mov
pop
adc
push
insl
dec
insl
adc
cmpsb
dec
cwtl
push
addb
addl
add
add
push
pop
insl
sbb
cmpsl
inc
xchg
push
push
mov
cmp
sub
pop
adc
or
test
dec
sbb
pop
aas
jo
dec
insb
or
inc
sub
cmp
mov
xchg
jbe
dec
mov
into
das
push
repnz
adcb
sbb
xor
enter
ror
mov
filds
jb
fsubrs
sub
imul
add
jle
sbb
pop
adc
add
aaa
int
in
fcmovu
test
jae
in
mov
sub
enter
loopne
cs
lcall
sbb
mov
lods
jne
sbb
xor
and
mov
mov
shlb
push
inc
sbb
ret
jne
lret
inc
and
push
cmp
and
int
lods
scas
dec
sbb
mov
mulb
sbb
push
mov
push
mov
out
mov
or
dec
lds
ds
lock
scas
insb
stos
cmp
ret
out
xor
add
push
or
lcall
xchg
stos
and
xor
jns
nop
add
pop
sti
sahf
negl
push
testl
insb
fwait
in
dec
xlat
adc
add
jae
pop
mov
or
and
fiadds
push
inc
add
pushl
cmp
dec
mov
fistpl
or
jnp
mov
add
or
pop
and
aaa
and
inc
xchg
sub
rcll
mov
mov
jns
mov
repz
test
push
pusha
iret
repz
pop
pop
dec
inc
cmp
or
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
lcall
push
pop
pop
popa
bound
gs
lock
ljmp
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
jg
cmpb
das
mov
gs
xchg
adc
clc
push
or
inc
jmp
cmp
rclb
cmpl
jnp
dec
push
push
add
or
sahf
int3
jno
call
je
mov
insb
outsl
arpl
fs
out
sbb
push
dec
imul
shll
jae
cmp
jb
gs
xor
std
repz
loope
fs
adc
popa
and
popa
je
outsl
outsb
fsubs
push
fistps
pop
lock
paddsb
pop
jbe
add
incl
sub
xor
or
inc
outsl
jb
js
out
outsl
fucomi
je
jb
gs
cmp
or
outsl
add
add
cld
or
and
push
gs
push
add
popa
mov
popa
jb
mov
popf
jbe
push
outsb
dec
xor
xor
mov
insl
insl
cmp
in
jne
and
adc
add
das
das
pop
lock
push
inc
inc
gs
insl
bound
jbe
and
dec
outsl
jbe
dec
arpl
ja
push
jo
sub
addr16
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
insb
jae
mov
scas
cmpsl
xchg
into
cmp
pushf
xchg
xchg
addr16
fcompl
inc
push
jne
xor
or
and
daa
push
scas
clc
in
cmpsl
cwtl
mov
dec
js
push
jne
cmp
pushf
mov
ja
pop
dec
inc
push
rcrl
das
jo
or
cmp
mov
mov
test
jbe
test
pop
sbb
xor
test
pop
mov
or
and
and
jmp
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
sub
jno
das
pop
pop
mov
insb
rcrl
jge
jg
cmp
inc
out
pushf
lcall
out
adc
or
adc
lock
push
inc
insb
jae
repnz
fs
mov
inc
mov
cmp
mov
xor
imul
and
dec
push
push
insl
in
inc
sbb
or
dec
dec
inc
sbb
lods
and
add
xor
sbb
aad
outsb
push
jo
imul
jae
insl
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
sbbb
gs
popa
dec
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
xchg
testb
imul
xchg
adc
xchg
push
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
test
hlt
and
or
pusha
add
mov
add
pop
sub
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
lds
pop
jo
inc
rcl
push
stos
int
mov
jo
pushl
fdivrl
sbb
repnz
lea
mov
nop
xchg
xchg
sub
xchg
pop
xchg
push
call
mov
adc
test
dec
sub
ds
or
cmp
pop
pop
add
pushf
jo
adc
cs
jo
or
data16
or
je
nop
repnz
push
or
mov
mov
mov
enter
sbb
add
xchg
dec
add
enter
test
pop
and
add
and
xor
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
jg
push
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
hlt
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
adcl
push
call
aas
dec
test
sar
cwtl
mov
xor
push
pop
outsl
ja
or
aas
das
inc
cs
jae
jb
bound
dec
jecxz
sbb
ss
popa
fisubrs
mov
inc
arpl
mov
sti
lret
pop
lea
dec
mov
outsl
js
push
push
inc
push
xchg
ss
mov
inc
sahf
fidivrs
jae
insb
gs
mov
dec
mov
push
test
aaa
insb
in
dec
imul
pop
jns
inc
mov
imul
popf
or
inc
jns
daa
pop
addl
push
jns
gs
rol
mov
test
jne
push
lcall
insb
push
sarb
pusha
les
push
mov
arpl
push
inc
jbe
test
push
push
lahf
adc
fs
and
add
cld
pop
lcall
push
adc
mov
sub
mov
lahf
lock
inc
or
pop
fisubrl
jae
cmp
dec
loopne
mov
pusha
insb
call
movsl
jae
addr16
subl
gs
dec
scas
jo
mov
xchg
arpl
push
push
add
mov
push
dec
testl
dec
in
loope
push
outsb
mov
lds
fildll
dec
jge
ret
adc
jg
imul
call
mov
xor
inc
in
nop
lods
sbb
popa
insl
or
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
cmp
cmp
cmp
push
das
push
mov
jnp
sub
es
jle
in
insb
sub
sub
addr16
sub
xchg
pop
push
cmp
jns
pop
jmp
cmp
inc
cmpsl
add
dec
mov
pop
cwtl
jb
sbb
push
jb
pop
addr16
imul
push
cltd
loope
mov
ds
push
and
and
cltd
es
jo
sub
push
aam
push
lahf
sub
or
inc
add
push
clc
add
loopne
enter
jns
mov
push
dec
adc
inc
idivl
imul
in
test
ss
out
mov
push
xchg
nop
add
test
sti
xor
shrl
sub
fdivs
push
mov
push
adc
mull
into
out
pop
pop
add
jns
out
mov
inc
inc
cmp
cmpsl
cmp
cmp
jg
out
and
add
incl
sahf
out
sahf
mov
fucom
jns
sbb
incb
mov
cwtl
jo
inc
inc
cmp
cld
std
lock
cmp
repz
lcall
jo
ljmp
aam
pop
pushf
mov
lcallw
jo
push
dec
jns
push
xor
aad
ljmp
jge
js
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
popf
xchg
push
insb
xorb
dec
jae
insb
inc
gs
mov
sbb
dec
inc
dec
xor
incb
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
inc
add
lcall
inc
push
das
adc
sub
adc
inc
outsb
fdivr
incl
popa
into
mov
mov
pop
jnp
std
adc
outsb
mov
ds
pop
adc
clc
in
stc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
dec
mov
jp
adc
fisubrs
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ds
leave
loop
mov
xchg
dec
xchg
ret
ljmp
mov
iret
adc
out
mov
pop
pop
repnz
or
xor
and
es
cwtl
flds
sbb
push
mov
outsb
jbe
call
and
aaa
nop
add
sbb
scas
push
daa
inc
ss
cmp
jge
sbb
push
dec
push
pop
mov
push
into
mov
in
call
and
dec
adc
pop
ds
dec
add
sti
cmp
sub
push
sbb
sbb
push
add
sbb
dec
push
sbb
dec
sbb
dec
or
add
push
dec
sbb
sbb
jb
jbe
jnp
out
fistpl
or
dec
or
xchg
add
push
inc
dec
add
mov
jg
and
pop
or
sbb
and
sub
pop
push
push
sbb
mov
std
mov
push
push
pop
pop
pop
sub
or
and
lods
aas
pop
or
mov
ret
add
ljmp
lock
or
add
and
or
sub
inc
pop
push
out
sti
jae
out
ds
rdpmc
or
daa
sbb
fucomi
and
xor
push
push
nopl
push
adc
sbb
loope
jge
inc
pusha
add
jge
insl
pop
dec
inc
sbb
dec
or
mov
dec
repnz
pop
aad
or
cmp
mov
es
test
mov
lea
push
aaa
cmp
and
pop
add
or
mov
dec
sub
push
sbb
sbb
notb
xor
sbb
sbb
lretw
jnp
sbb
xor
sub
push
sub
and
jge
mov
int3
or
or
sbb
sbbl
inc
sbb
mov
js
sub
or
cmp
push
pop
stos
push
push
mov
in
push
mov
inc
and
gs
mov
sbb
and
and
pop
and
or
push
push
push
xor
xor
inc
dec
push
dec
add
cs
loope
shll
ja
pop
dec
sbb
push
in
and
movsl
dec
pop
jnp
inc
cmp
lcall
fs
adc
dec
cwtl
in
push
cmp
shlb
ds
jmp
rolb
loopne
add
push
push
cmp
repz
adc
push
xor
cmp
iret
repz
pusha
push
inc
outsl
jg
jnp
ja
push
add
lock
popf
iret
adc
xor
or
or
mov
dec
scas
or
cwtl
add
hlt
adc
sub
dec
cs
jp
mov
or
cmp
outsl
insl
mov
inc
popa
outsb
adc
pop
xor
enter
mov
push
popa
loop
add
mov
push
bound
xor
insl
outsl
icebp
sub
push
or
inc
push
incb
mov
add
loopne
adc
push
pusha
idivl
jnp
push
nop
rolb
inc
push
ss
sahf
out
push
jo
mov
and
ja
push
and
push
lock
mov
rcr
ds
das
xor
lds
in
arpl
movsb
inc
shlb
int3
dec
push
push
push
pop
int
cmpsb
push
or
or
push
mov
filds
add
inc
add
mov
ret
ds
sbb
js
dec
jbe
scas
push
push
add
or
mov
loop
or
fimull
nop
cs
jmp
pop
iret
repz
pop
in
dec
sub
push
jnp
ficoms
push
cmpsb
dec
sub
dec
fcomps
stos
lcall
push
sub
jbe
icebp
or
jb
xor
pop
sub
popf
push
insb
push
xor
xchg
arpl
push
sbb
push
out
jo
cwtl
or
sub
dec
add
push
add
in
adc
sub
pop
shll
out
or
push
faddp
cmp
sub
sbb
test
jae
ss
ret
test
dec
sbb
dec
out
fs
jo
dec
inc
jecxz
sbb
mov
or
ss
xlat
push
push
xor
cmp
outsb
scas
ds
mov
dec
pop
or
inc
pusha
dec
popa
test
xor
in
dec
daa
xor
jo
popa
mov
jl
inc
cmp
or
xor
sbb
pusha
mov
or
push
xor
cmp
push
cmp
loopne
pop
push
daa
xor
aas
and
adc
lock
adc
xor
lock
pop
or
and
mov
and
out
mov
xchg
stos
pop
dec
and
rcll
push
es
jle
mov
sub
xchg
scas
push
cld
add
xor
loope
add
mov
es
mov
cmp
cltd
andb
lret
es
dec
pop
fmul
outsl
xchg
push
push
add
adc
xchg
inc
and
xor
adc
adc
mov
dec
sbb
es
fwait
mov
das
add
dec
subb
call
push
mov
in
gs
add
movsb
adc
pusha
push
notl
movsb
add
sub
enter
xor
xor
dec
out
inc
mov
mov
aaa
std
or
sbb
push
and
mov
jbe
mov
add
aaa
push
cmp
dec
sbb
cld
push
adcb
insb
jne
xor
or
add
or
mov
inc
mov
or
push
mov
jmp
sub
adc
jnp
mov
lcall
cwtl
push
jne
jg
xor
inc
ret
arpl
push
cmp
inc
jnp
add
or
inc
movsl
sub
jl
ror
mov
pop
push
push
push
push
dec
cmp
enter
add
popf
out
jo
push
xchg
and
das
jo
fwait
into
and
icebp
dec
ja
ss
xchg
popa
pop
sbb
or
or
cmp
adc
push
into
aam
sub
mov
pop
ds
pop
dec
push
xor
sbb
or
aas
loopne
fstpl
dec
sub
daa
add
cs
loop
xor
and
lock
movsb
sahf
sbb
adc
js
sub
call
repz
or
pop
xor
push
into
jae
insl
popa
imul
in
sbb
push
pop
outsl
jo
das
jl
outsb
data16
push
ja
or
sub
adc
adc
push
aam
sahf
mov
push
outsb
cs
add
fwait
xor
out
add
outsb
fnsave
mov
lods
pop
cmp
push
lock
cmp
add
dec
add
and
jnp
cmp
mov
dec
or
sub
inc
addr16
cmp
daa
pop
adc
mov
aas
adc
push
sbb
mov
adc
add
sub
cmp
mov
js
xor
dec
dec
and
dec
cltd
pop
sub
in
push
and
or
fsubr
lds
inc
inc
fs
daa
adc
ds
mov
dec
mov
ret
and
push
addl
push
sbb
add
dec
pusha
int
fstpt
pop
dec
push
imul
cmp
daa
xor
popf
adc
les
dec
jb
out
push
rcrb
aaa
push
ret
cmp
out
outsb
aaa
pop
sub
jb
scas
push
aam
cmp
add
and
mov
adc
es
sbbl
js
mov
pop
out
sbb
add
mov
pop
sti
out
decl
insb
outsl
jb
bound
popw
pop
push
push
je
and
loopne
daa
jae
popa
xchg
pop
andb
je
aas
es
fcomps
daa
push
das
and
xor
js
inc
insl
and
cmpsb
or
dec
fwait
xor
divb
push
cmp
imul
sub
mov
adc
pop
sbb
and
addr16
add
dec
dec
dec
repz
or
xchg
mov
test
or
mov
rol
xorb
jns
fwait
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
insb
shlb
add
test
sub
ss
int
add
or
adc
int
shll
pop
add
add
push
dec
str
add
stc
das
incl
jmp
push
push
push
das
xor
xor
dec
and
sub
cmp
test
lds
sub
addl
pusha
sub
xchg
pop
and
dec
dec
das
cmp
xor
je
mov
jae
push
push
adc
leave
mov
gs
cltd
jmp
aaa
shr
xchg
jb
outsl
imul
inc
fcmovbe
shl
arpl
cmpsb
add
nop
inc
in
add
lock
fiaddl
pop
mov
add
xor
mov
fdivrp
pop
and
xor
xor
and
ficompl
mov
das
cmp
cmp
jp
ja
inc
add
pop
add
sbb
add
stos
pop
into
jle
dec
pop
mov
orl
lret
mov
cmpb
mov
cmpsl
scas
add
sbb
sbb
sbb
jle
and
mov
aas
add
xor
ss
jle
aaa
dec
mov
mov
adc
add
xor
and
xchg
or
jae
lret
mov
inc
push
enter
pusha
cmp
cwtl
push
cs
or
add
ss
add
addr16
out
sub
out
push
fistl
lock
mov
push
mov
xor
sbb
sub
sahf
cs
pop
push
dec
push
cmp
dec
or
push
push
push
cmp
push
fdivrl
cmp
testl
sbb
pop
dec
xchg
sti
into
or
pop
inc
lret
inc
sub
insl
mov
pop
pop
xor
xor
das
add
jmp
or
cmp
dec
out
in
addl
jbe
push
adc
cs
or
mov
sbb
sub
and
push
or
push
lahf
call
or
testl
push
loopne
pushf
inc
push
push
mov
push
push
jo
push
pop
push
push
push
rcrb
mov
dec
push
mov
insb
sbb
mov
daa
sbb
xor
pop
push
cs
jo
mov
aad
and
lret
orb
push
xchg
loop
sbb
sbb
dec
dec
lea
adc
or
inc
inc
nop
jmp
mov
add
cld
pop
mov
dec
outsb
fwait
cmp
inc
clc
addb
mov
adc
dec
pop
push
lods
scas
push
pop
mov
das
or
and
inc
in
add
in
mov
repnz
adc
pop
push
adc
mov
js
pop
or
xchg
adc
fimuls
mov
sub
and
inc
lea
mov
add
cmpsb
adc
and
pop
pop
cmpsl
dec
mov
adc
sbb
xchg
jb
maxps
inc
add
pop
pop
sbb
int
jnp
daa
xchg
pop
test
push
and
add
lea
pop
mov
inc
cs
notb
sbb
sub
sub
stos
nop
inc
inc
add
and
cmp
cs
push
cmp
iret
push
pop
pop
pop
add
pushf
jnp
mov
and
adc
xchg
jo
loopne
rclb
sub
jle
or
sub
dec
fcompl
mov
push
and
mov
and
cld
add
data16
and
add
inc
data16
fisubl
push
or
jne
mov
jno
push
jnp
rolb
jge
and
mov
xor
sbb
sbb
adc
cs
pop
wrmsr
daa
pop
pop
push
lock
and
inc
xor
cmovs
daa
cs
and
data16
pop
cmp
adc
xor
adc
hlt
dec
dec
xorps
or
push
addl
push
ficomps
push
scas
dec
inc
dec
in
faddl
outsb
cmp
inc
cmp
shll
adc
or
mov
jnp
adc
and
and
push
adc
cmp
dec
cmp
cmp
push
aaa
out
aas
push
imul
jns
xchg
cltd
or
es
add
add
mov
shl
sub
jnp
nop
and
scas
mov
sub
das
sbb
push
jmp
sbb
jnp
push
stos
inc
sub
pop
xor
pop
subb
movsl
dec
aaa
adc
push
jae
and
idivl
adc
ss
sub
outsl
insl
xor
lods
push
scas
pop
fwait
cmp
fsubp
mov
popl
jnp
xchg
inc
push
dec
inc
jbe
testb
cmp
add
aam
inc
lea
push
je
adc
rcrl
mov
fidivl
add
push
mov
aaa
call
lret
shrl
arpl
jg
pop
lret
lret
sbb
decl
add
pushf
cmp
sub
pop
xorl
cmp
les
push
and
insl
sarb
ud1
jg
or
mov
or
push
add
pop
ret
cmp
sub
aas
dec
repnz
mov
and
js
int3
cs
pop
idivl
dec
aas
push
add
push
jp
and
imul
fimuls
dec
push
and
push
mov
lret
pop
daa
pop
and
pop
push
xchg
add
pop
fs
dec
adc
lcall
fisubrs
xchg
or
and
and
or
lea
popa
mov
adc
or
je
push
aam
inc
insb
push
inc
mov
mov
divl
mov
xor
aaa
fildll
rorb
jns
xor
fistps
je
jo
insb
gs
hlt
cld
mov
je
mov
pop
loope
and
lds
inc
jb
jmp
sbb
fwait
imul
adc
scas
pop
inc
add
sub
mov
sub
push
xor
xor
insb
ficoms
aaa
pusha
cmp
mov
ds
inc
es
push
mov
shl
rolb
dec
push
push
scas
xor
rol
imul
testb
sub
mov
fisttpll
ljmp
jbe
getsec
shlb
mov
mov
lcall
push
and
mov
add
adc
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
mov
ds
pop
sbb
out
cmpb
dec
fsubs
das
addb
xor
dec
xchg
roll
loopne
shl
dec
push
out
add
bound
cmp
adc
repz
and
xor
aaa
xor
cmp
mov
sbbb
xchg
imul
add
push
popa
add
and
testb
out
push
dec
imul
dec
push
inc
pop
xor
and
xor
mov
and
leave
jae
pushf
loopne
sarb
pushf
cmp
iret
rolb
mov
nop
dec
addb
inc
mov
insb
inc
js
cmp
cmp
xor
pop
add
push
dec
pop
int3
imul
loop
clc
pop
pop
inc
pop
or
jnp
icebp
in
cmp
xor
sub
sub
xor
inc
ret
mov
inc
xor
inc
ret
popa
add
jne
aam
adc
push
outsb
add
add
sub
out
sub
pop
lret
popa
dec
jp
xor
push
jb
jo
call
ret
bound
je
bound
mov
clc
adc
fimull
adc
inc
stos
or
and
and
and
cmpsl
aaa
jg
in
adc
mov
das
sub
inc
pop
cmp
push
cmp
dec
pushf
es
push
fs
inc
xor
and
or
aaa
fimull
iret
rorl
add
outsb
daa
pop
push
jg
sbb
inc
dec
xor
clc
outsl
inc
cli
dec
add
add
dec
or
out
sbb
cld
jo
rclb
lret
and
dec
xchg
xchg
neg
fidivrl
add
and
xor
jns
lock
or
dec
or
mov
into
movsb
test
push
mov
or
dec
shrl
or
das
cmpsl
inc
cli
inc
pop
dec
sbb
add
dec
leave
push
xor
mov
ficompl
addr16
push
lods
stc
lcall
es
cli
pop
sti
jle
in
add
push
xchg
mov
pop
mov
jns
mov
mov
iret
js
out
mov
push
xchg
xchg
xchg
iret
jnp
or
iret
leave
mov
rclb
scas
mov
pop
test
stos
mov
xor
xor
mov
or
cmpsl
mov
push
imulb
sub
punpcklbw
add
xor
pop
lods
popa
scas
cwtl
es
mov
pushf
adc
inc
pusha
int
cmp
fucomi
push
mov
push
add
lcall
mov
js
jns
cmp
sub
cs
ret
cmp
out
sahf
out
jns
push
outsb
lods
mov
pop
mov
inc
dec
int3
push
jns
dec
cmp
mov
sbb
enter
out
addb
jb
mov
push
iret
sarl
push
aad
mov
sub
fincstp
outsb
ja
push
aad
cmp
pop
pop
push
insb
idivb
out
jle
mov
out
pop
icebp
sahf
adc
dec
push
nop
div
xorl
mov
outsl
mov
fucomip
xchg
popf
mov
jl
and
dec
out
out
out
js
mov
out
jl
int3
mov
mov
push
push
fidivrs
xor
or
add
inc
xchg
es
data16
out
outsb
sub
mov
mov
mov
push
add
dec
repz
movd
repz
out
xchg
mov
push
jg
jns
dec
push
push
cmpb
cmpl
sbb
fwait
mov
outsb
push
add
dec
cmpb
sti
sub
lods
jns
iret
repz
sbb
inc
insb
repz
out
nop
xchg
sahf
out
xchg
inc
push
jbe
idivl
nop
mov
mov
pop
fiadds
add
cmpsl
loop
ljmp
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
testb
xor
adc
mov
mov
pop
push
lcall
loopne
mov
testb
adc
and
pop
sbb
pop
enter
cmp
adc
or
adc
jg
or
add
or
nop
add
push
cltd
jmp
add
outsl
pop
pop
adc
mov
fisubrl
fildl
mov
aas
sbb
and
inc
push
cmp
daa
inc
sbb
or
lods
jo
addr16
push
mov
mov
jae
fisubl
jp
mov
roll
add
dec
lcall
je
push
ljmp
cmpsb
dec
add
push
pop
lods
fstl
cmpsb
push
insb
pop
push
mov
aam
dec
pop
je
jns
sbb
ffree
push
fisttps
jp
das
push
mov
xchg
outsb
push
inc
jmp
sarl
outsb
iret
push
pop
retw
test
flds
mov
ja
lods
push
es
push
cwtl
push
jns
enter
test
push
sbb
and
push
ds
or
das
adc
es
insl
jo
out
pop
jle
outsb
insb
je
push
addr16
jo
jae
es
outsl
mov
das
push
and
cmp
adc
insb
cmp
or
cmpsb
mov
mov
xor
xor
xor
xor
xor
jle
outsl
mov
and
xor
push
xor
xor
cmp
push
add
or
imul
pushf
sti
mov
pop
add
or
add
inc
sub
or
pop
jo
add
pop
and
pop
xchg
or
cmp
cld
jp
inc
test
mov
sub
cmp
es
test
add
andl
adc
push
mov
lods
xor
les
inc
in
pop
fucomip
ss
add
sbb
jbe
or
add
lea
push
aas
push
push
adcl
and
test
in
mov
push
push
dec
or
sbb
js
lods
les
jne
int
call
sbb
sbb
add
sbb
fs
test
pop
and
adcl
pop
dec
or
push
adc
jnp
in
ds
call
or
sbb
outsl
xor
and
push
cs
iret
sarb
push
adc
and
mov
push
das
push
dec
sbb
xor
dec
mov
inc
das
sub
push
add
cmp
daa
adc
jge
xor
or
push
xor
inc
aaa
dec
in
push
or
out
aaa
push
ds
pop
sub
fwait
fwait
les
andb
pop
jo
jns
sub
mov
dec
in
xor
aaa
pusha
add
or
daa
and
insl
mov
jmp
mov
addr16
out
js
frstor
lods
daa
jge
pop
sbbb
push
pop
in
das
divl
les
fcmove
and
loope
adc
aam
push
ret
daa
pextrw
sub
fsubrs
xchg
pop
mov
das
dec
inc
cmp
js
js
test
xor
sub
pop
and
ja
sahf
push
cmp
xor
mov
das
mov
loopne
imul
pop
cltd
daa
jo
loopne
lahf
pop
xchg
outsb
pop
fwait
adcb
and
int
add
ficompl
addr16
arpl
out
adc
cld
xor
lods
aas
cmc
repz
pop
xor
sub
inc
lcall
push
aaa
outsl
lret
es
in
pop
pusha
les
and
aas
pop
adc
sub
xor
js
jl
icebp
xor
dec
jl
test
outsb
xor
jno
or
cs
ja
andb
and
push
aas
or
pop
add
dec
js
xchg
ja
mov
dec
ret
pop
adc
push
cmp
add
xchg
stc
sbb
inc
mov
adc
adc
test
lahf
inc
pop
es
push
inc
sbb
pop
adc
mov
jp
idivl
das
andl
subb
jecxz
push
testl
pop
xchg
xor
push
mov
pop
pushf
lsl
push
dec
ret
pop
nop
pop
aas
fcompl
dec
sbb
fisubs
das
xor
push
jp
icebp
dec
enter
addr16
addr16
aas
xor
add
dec
push
adc
pop
and
add
xchg
push
sub
dec
mov
xchg
dec
dec
adc
das
or
mov
cmp
dec
shl
dec
push
sub
jp
dec
sbb
test
xor
notl
adc
sbb
test
or
inc
outsb
loope
xor
xchg
and
ja
cmpsb
cmp
pushf
push
daa
cmp
inc
dec
shlb
xor
jae
ret
imul
outsl
into
adc
or
add
shrl
or
dec
lock
cs
rcll
cmp
sub
jmp
cli
out
mov
or
or
in
not
stos
repnz
push
inc
cmpsb
adc
push
xor
fldcw
ss
fcomps
aaa
fcoml
or
fs
xor
adc
cli
outsb
push
or
aad
aaa
cmp
fsubrs
jb
sbb
jno
int3
push
xchg
fs
dec
loop
xor
sub
dec
mov
addb
pop
test
push
xchg
insl
sbb
dec
add
faddl
cmp
jl
fst
pushw
sbb
aas
inc
hlt
adc
aas
das
stos
xor
push
xor
mov
fcompl
xor
and
sbb
xchg
push
mov
es
cmpsb
adcb
inc
push
push
xchg
roll
sbb
xor
xor
out
pop
repnz
push
adc
aas
or
icebp
popa
notl
or
cwtl
jb
pusha
push
loop
jno
xchg
dec
pop
mov
sub
sub
pop
xorb
mov
ret
test
push
or
comiss
add
add
adc
xchg
xor
xor
pop
jb
es
dec
fsubl
add
aaa
mov
arpl
cmpsl
pop
cs
lahf
inc
add
inc
cmp
and
aaa
inc
daa
xor
lock
lea
pop
dec
arpl
dec
jb
jo
or
movsb
punpckldq
mov
pop
sub
jbe
xorb
xor
clc
add
add
and
push
cli
or
pop
adc
or
add
add
add
call
cltd
ljmp
or
and
pop
sbb
mov
jo
push
add
xor
xor
adc
dec
es
decl
inc
push
inc
push
pop
add
cmp
pop
pop
es
push
adc
aaa
push
dec
and
pop
add
push
sbb
mov
and
ds
adc
push
incl
or
push
and
aas
dec
xor
dec
das
pop
adc
mov
push
pop
or
push
sbb
xor
mov
ljmp
dec
sbb
xor
push
dec
adc
push
add
or
hlt
call
pop
dec
sbb
xor
pop
es
pop
pop
push
pop
sub
or
xor
pop
pop
pop
or
jmp
pop
jecxz
dec
push
jecxz
fmuls
loope
out
push
adc
fcompl
adc
pusha
cmpb
push
cmp
sub
or
xor
pop
push
dec
dec
arpl
push
add
pop
dec
call
aad
jle
xor
into
adc
inc
inc
js
inc
out
push
add
xor
mov
shlb
xchg
and
xchg
mov
es
push
dec
pop
push
outsl
inc
mov
inc
cmpsb
rolb
mov
icebp
adc
rcll
adc
jne
lcall
add
add
inc
xlat
pop
sbb
jp,pt
inc
jb,pn
scas
movsb
push
adc
jns
ffree
clc
push
push
or
pop
push
push
inc
push
dec
inc
dec
push
dec
gs
xchg
daa
add
add
push
outsl
rorb
out
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
pop
dec
pop
call
pop
sbb
cwtl
stos
pop
fdivrs
and
inc
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
add
sub
fsubrl
stc
pushl
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
call
and
cs
insl
sub
adc
or
or
cs
ret
sub
call
dec
data16
mov
call
cltd
test
push
call
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
scas
lcall
out
orb
js
test
add
mov
mov
ljmp
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
loopne
ljmp
fwait
stos
flds
pop
outsl
inc
aas
push
addr16
inc
inc
inc
cmp
ja
pushl
cmp
sub
cmp
push
jb
add
inc
jns
decl
ja
and
sub
dec
xor
jp
daa
pop
sub
jno
insl
or
push
inc
xor
sub
outsb
push
js
push
dec
jo
pop
inc
dec
inc
jl
cmp
push
and
ss
cmp
into
mov
and
cmp
pop
pop
xor
pop
dec
mov
push
sub
les
testb
aas
out
aaa
jnp
pop
aaa
pop
dec
daa
pop
daa
inc
sbb
aas
sbb
and
jg
cmp
and
inc
xor
and
out
lods
push
push
aaa
push
xor
imul
add
inc
add
inc
xor
and
insb
or
push
inc
jbe,pn
imul
xlat
ss
cmovle
ss
cmpsl
mov
adc
ss
adc
add
or
movsb
or
xor
mov
hlt
sbb
pusha
adc
sbb
sbb
sbb
adc
or
bound
addr16
mov
add
push
mov
push
scas
aaa
es
adc
mov
pop
push
mov
xor
or
push
aaa
mov
sub
or
mov
jle
or
ret
xor
inc
sub
test
loop
inc
push
cwtl
lods
sbb
sub
adc
js
inc
loopne
int
or
xor
xor
or
sbb
jg
in
sub
aam
adc
ds
push
dec
or
jp
and
in
push
sbb
mov
fcom
int
enter
push
sub
or
nop
addb
add
or
sbb
push
adc
icebp
rolb
add
pop
and
pop
mov
loop
jbe
push
mov
sbb
jg
sbb
jge
sbb
cmpb
mov
inc
shlb
sbb
pop
dec
adc
jbe
add
adc
adc
xchg
dec
mov
hlt
push
sub
push
push
sbb
fldpi
test
mov
in
sub
sti
jmp
add
sbb
icebp
adc
sub
call
sahf
sbb
lds
adc
enter
xchg
add
xchg
stos
xor
test
or
add
sbbl
pop
outsb
outsb
je
sbbl
jo
jbe
jae
in
enter
gs
cmp
ret
loopne
and
outsb
xor
xchg
loope
inc
and
inc
aad
fistl
adc
pushl
insl
loop
les
and
lret
scas
outsl
or
outsl
insb
dec
push
popa
je
icebp
push
rclb
xchg
insl
fstp
clc
xorl
inc
sub
adc
push
or
out
push
gs
pop
push
xor
or
pop
push
or
sub
insl
dec
aaa
push
pop
lods
mov
or
lods
lret
adc
push
adc
and
arpl
mov
mov
ljmp
cs
pop
add
insb
lds
and
ret
mov
inc
daa
dec
stos
sub
xchg
mov
inc
and
ds
movsb
pop
movb
sahf
ret
mov
mov
loopne
pop
mov
or
pop
mov
push
das
mov
push
push
add
sbb
fnstsw
lock
push
and
or
dec
popa
dec
add
push
mov
popa
jb
pop
repz
sbbl
inc
jne
fisubl
sub
xor
cmp
ja
jno
pop
push
xor
mov
or
sbb
pop
dec
dec
push
test
mov
push
testb
pop
adc
mulps
sbb
imul
pop
fcoms
sub
dec
pop
enter
mov
mov
nop
mov
fs
jo
scas
or
test
xor
in
push
outsl
imul
push
or
xlat
mov
pop
pop
push
movntps
pop
cmp
push
aas
pushf
incb
or
and
xchg
das
scas
bound
push
test
and
pop
adc
xor
and
sbb
shlb
fs
push
sub
dec
inc
dec
pop
lret
es
add
iret
mov
adc
dec
and
mov
cmp
xor
inc
outsl
dec
aam
rcrb
outsb
ja
pop
xchg
pushw
dec
xchg
scas
pop
cmpsl
mov
test
cmp
sub
xchg
and
rclb
insb
jmp
aad
fcoml
sbb
or
inc
sbb
ffree
add
iret
imul
lret
movb
pop
pop
aas
sbb
ja
xchg
push
gs
sbb
js
mov
pop
pop
pop
or
or
mov
fdivs
dec
pop
movsl
pop
fcmovnu
xchg
xor
repz
test
cmp
cs
push
push
sub
dec
imul
xor
femms
enter
xor
adc
jno
push
pop
nop
aad
rolb
shll
add
outsl
stos
pop
fcompl
out
push
add
sub
push
lock
inc
dec
mov
sahf
adc
and
inc
sbb
pop
add
cmp
fs
rcr
xor
sbb
insl
fldcw
gs
push
sub
pop
inc
insb
fs
add
adc
fstpl
dec
jae
push
popa
sub
mov
adc
add
mov
inc
call
punpckhwd
dec
outsb
push
je
mov
popf
add
push
push
pop
xor
inc
pop
push
dec
inc
dec
inc
push
pop
mov
mov
mov
inc
xchg
daa
push
lock
push
inc
es
pop
daa
cmp
daa
dec
push
dec
jb
or
sbb
inc
inc
aas
dec
mov
adc
out
adcb
lds
rclb
and
and
xor
scas
aas
scas
and
and
sub
cs
sbb
mov
jno
mov
orl
ret
jb
in
popf
and
push
adc
mov
loope
add
dec
cmp
add
xchg
add
xchg
insl
es
add
rclb
add
xor
data16
dec
adc
insb
add
dec
inc
sub
xor
inc
ret
andb
cs
mov
inc
sbb
mov
mov
shll
cmp
or
inc
xchg
cmc
dec
movb
inc
add
push
aaa
out
lds
fwait
pop
pop
imul
xchg
sbb
fimull
lret
lods
xorb
test
lcall
insb
sbb
and
lock
mov
and
insl
xlat
iret
andb
push
repnz
push
insl
sub
push
lds
sbb
arpl
push
outsl
test
mov
and
negb
rolb
push
imul
stc
mulb
fbld
enter
and
mov
dec
add
dec
adc
inc
xadd
fwait
enter
inc
aas
mov
in
xor
inc
sti
fdivr
sahf
adc
cmpb
aas
mov
jo
movaps
insl
pop
pop
inc
dec
add
adc
dec
and
xchg
add
xor
mov
adc
push
aam
cmp
ret
fdivrl
add
test
cmpsb
jge
mov
dec
movsb
add
daa
add
push
and
cmp
inc
add
outsl
ror
cmpsl
in
lods
lods
jne
push
movsb
stc
pusha
daa
test
cwtl
test
and
jns
test
cwtl
pop
add
mov
hlt
pop
add
jg
xor
sbb
inc
push
daa
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
scas
rcr
push
xchg
cmpsb
test
fmuls
push
mov
imul
ss
je
pop
mov
jl
out
inc
and
pop
sub
iret
mov
xchg
test
pop
mov
pop
pop
ds
pop
push
test
iret
repz
sar
dec
repz
enter
pop
in
xor
push
push
and
fcoms
or
out
dec
inc
mov
push
fildll
mov
nop
dec
int3
imul
in
pop
test
add
sarb
add
add
mov
adc
idivb
inc
mov
insl
add
push
jg
pop
mov
push
test
inc
mov
add
in
xchg
mov
imul
inc
xor
or
shll
push
dec
pop
dec
outsl
add
mov
filds
sub
in
inc
inc
mov
jns
outsl
fbld
cmp
cmp
pop
ss
add
sub
adc
cmp
test
pop
add
sbb
popa
mov
jb
inc
mov
xor
dec
lcall
xor
cs
hlt
add
dec
push
xchg
or
rcll
scas
add
or
and
pushl
and
jb
xor
leave
jae
pop
enter
ficompl
mov
inc
repz
jl
call
fstps
test
scas
in
sub
pop
shll
je
mov
dec
xchg
mov
xlat
mov
xchg
and
out
inc
mov
clc
ja
add
dec
xchg
sub
fwait
nop
pop
xor
pop
pop
insb
push
push
xor
add
jbe
ret
fbld
outsl
and
pusha
adc
sub
and
mov
and
and
or
scas
add
pusha
xor
out
or
xor
mov
cmp
add
mov
scas
sbb
and
aad
push
aaa
mov
mov
hlt
sub
idiv
jb
cmp
pusha
daa
add
sub
mov
frstor
mov
inc
das
cmpsb
lahf
mov
add
push
jl
xchg
or
outsl
xchg
in
push
rclb
arpl
add
xchg
popa
dec
mov
pop
sbb
test
call
sub
xor
repnz
sub
pusha
popa
jo
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
rclb
testl
add
mov
rcll
gs
pusha
enter
mov
push
lods
nop
xchg
push
sub
and
or
pushf
pusha
jp
or
pop
jl
or
in
test
stos
popa
or
popa
mov
imul
add
xlat
or
lcall
push
mov
shrl
xchg
xor
fimull
pop
pop
arpl
testl
and
add
jns
sub
add
rolb
scas
adc
cwtl
push
and
dec
xchg
shrl
aaa
push
ja
push
cmpsb
xchg
or
aaa
mov
sbb
daa
in
call
loopne
sahf
add
xchg
mov
repnz
adc
and
jg
dec
sahf
or
push
repnz
insl
mov
fs
add
es
nop
jg
or
cmp
les
add
sub
fisttps
inc
jmp
dec
push
adc
xchg
sbb
das
outsl
add
aad
pop
pop
in
inc
mov
cwtl
popw
test
ss
fcoms
mov
rcl
aaa
hlt
xchg
inc
cmpsl
add
cmp
xlat
shlb
leave
add
pusha
daa
dec
out
int3
pop
leave
aad
lahf
or
add
cmovg
pop
push
cmp
sarl
or
add
imul
cmpsl
stc
call
xchg
test
mov
mov
push
xchg
or
xor
out
mov
movsb
push
mov
outsl
add
adc
xchg
pop
or
rorb
aam
lcall
and
mov
add
add
loopne
fsubrp
add
xor
shlb
roll
mov
nop
add
push
xor
inc
pop
or
addr16
mov
daa
add
ss
nop
add
push
repnz
loopne
in
and
outsb
lock
xor
or
xlat
sbb
insb
insl
and
mov
int
insl
daa
sub
push
cmpsl
js
push
insb
xchg
enter
out
push
aaa
ss
test
subb
ja
inc
lds
mov
outsl
stc
pop
jb
movsb
pop
add
sbb
push
push
xor
xlat
push
mov
add
pop
in
mov
nop
fsubrs
repnz
aas
addr16
pusha
fdivs
addr16
pop
mov
pusha
out
push
gs
pushw
loopne
jns
fildll
fdivrl
add
mov
repnz
insl
mov
imul
insb
dec
outsl
int
jns
xchg
mov
out
insl
ss
repz
jl
shl
jl
cmpsl
stc
adc
mov
add
ds
shll
push
push
jo
repz
out
pop
jno
jo
stc
cmp
xchg
mov
add
fucom
jns
dec
je
cld
and
jns
dec
repz
lods
je
or
insb
repz
out
fisttpl
jbe
cmpsw
stc
cmp
subl
lock
test
sahf
out
ds
inc
cmpl
js
aam
sahf
out
cld
pop
jnp
loop
jl
repz
outsb
push
pop
xchg
jge
mov
cmpsl
stc
cmp
sbb
xor
iret
sarl
dec
imul
sbbb
sbbl
sbb
test
push
jne
clc
and
jnp
sbb
int
imul
xchg
mov
lahf
out
lcall
mov
ret
sti
xor
jns
dec
mov
cmpsl
stc
and
mov
cmpsl
fldcw
push
xor
cmpsl
stc
or
mov
repz
xchg
pushf
ret
jl
out
aam
xchg
dec
out
xchg
xor
out
jl
xchg
mov
cwtl
aas
imul
cltd
dec
stc
xor
out
loopne
lcall
cmpsl
mov
clc
sarl
push
popf
nop
fcoms
sahf
addr16
lahf
jle
or
jns
loop
mov
out
int
mov
out
repz
scas
push
and
movsl
insb
ds
cmp
adc
cmpsb
cmp
push
subb
iret
mov
enter
cmpl
cmp
out
test
lods
mov
lahf
cmpsl
mov
push
add
jl
out
push
sbb
sahf
data16
push
mov
mov
mov
test
iret
sarl
pusha
xchg
cmp
ds
repz
repz
xadd
out
inc
jge
jmp
rorl
fidivrs
push
mov
adc
out
lcall
outsl
int
repz
jmp
add
jnp
lret
push
xor
push
jecxz
int
rep
int
into
add
bound
fldcw
shlb
in
add
ljmp
add
in
rorb
out
add
jbe
push
add
scas
dec
mov
fdivrl
fidivrl
jns
out
ja
add
add
enter
sbb
imul
mov
pop
pminub
xchg
aam
enter
inc
adc
stos
adc
cltd
int3
fbstp
or
mov
gs
ds
sbb
mov
and
mov
sbb
push
pop
jl
xchg
ja
pop
xor
aaa
xchg
inc
inc
pop
enter
lods
xor
scas
mov
ss
push
pop
mov
inc
add
les
dec
out
mov
outsl
scas
pslld
cmp
jg
jbe
mov
inc
pop
in
cmp
dec
push
mov
jle
fistpll
mull
inc
mov
dec
mov
mov
sub
iret
mov
iret
adc
inc
es
pop
xor
xchg
fnstsw
mov
sbb
aas
mov
and
movsl
nop
in
iret
pmaxsw
inc
dec
movsl
lock
jno
jge
scas
sbb
push
inc
pushl
mov
mov
aaa
pop
popf
out
mov
mov
push
daa
fdiv
test
mov
repz
or
dec
push
cmc
inc
add
aad
aaa
test
ds
or
lahf
xchg
xchg
sbb
mov
ja
sbb
dec
xor
mov
inc
mov
cmp
and
inc
jo
outsl
into
push
ss
je
incl
inc
roll
adc
mov
pop
popf
dec
push
mov
and
cltd
jo
aas
xchg
push
ret
out
js
jae
sbbl
mov
inc
jo
inc
inc
push
push
push
sub
iret
add
xchg
inc
roll
mov
inc
dec
je
push
jns
jns
jb
xchg
sbb
or
mov
fdivrl
in
mov
js
pop
cmpsb
inc
push
out
and
inc
and
jns
inc
jp
jp
fimull
test
push
jg
mov
ret
imul
jp
jne
and
add
push
pop
in
std
hlt
insb
inc
or
fsubs
mov
xor
cmp
xchg
mov
addr16
dec
cs
out
pusha
mov
push
sub
mov
pop
fisttpll
dec
enter
mov
cmp
cmp
and
xor
and
scas
enter
imul
addr16
cmpsl
push
leave
sarb
mov
adc
cs
inc
outsl
iret
gs
sahf
xchg
pop
sbb
xlat
or
add
movsb
dec
and
push
mov
popa
out
mov
repnz
jge
je
stos
adc
dec
mov
jb
push
push
fisubs
lock
scas
add
cmp
dec
jle
and
daa
cmp
dec
dec
cs
xchg
or
das
inc
in
or
popf
inc
sahf
pop
call
fmulp
xchg
jae
outsb
inc
outsb
dec
push
add
out
push
add
add
out
js
orl
cld
xchg
jg
mov
lahf
les
or
mov
aam
dec
inc
dec
ret
sub
inc
or
sub
loope
dec
and
cmc
mov
push
mov
outsl
cwtl
push
inc
outsl
pop
mov
outsl
push
outsl
pop
xchg
xchg
mov
les
xchg
xchg
popf
cmpsb
add
ds
push
or
cmp
out
idivb
and
and
sub
jo
jo
cltd
in
inc
jo
jo
out
scas
cmpsl
jl
test
in
jbe
jl
mov
and
add
mov
mov
ud0
inc
pop
mov
jno
jno
add
and
jno
and
push
loopne
aaa
leave
adc
add
daa
and
sbb
mov
mov
pop
fiadds
je
add
test
jns
or
cmpsl
stc
popf
push
daa
loopne
add
and
pushf
and
nop
adc
push
jb
mov
and
test
sbb
leave
test
push
xchg
inc
repnz
mov
add
jb
inc
inc
into
xchg
xchg
jb
jb
cmpsl
jb
dec
dec
jb
jb
test
xchg
loop
jb
in
hlt
xchg
cmp
addb
leave
aam
les
jb
push
cmp
sbb
das
das
aas
loope
jae
js
xorl
das
das
das
das
cltd
jae
jae
jae
jae
repz
lds
push
or
or
repz
or
or
jns
out
or
movntq
out
adc
adc
sahf
out
sahf
adc
adc
jns
out
adc
mov
sahf
out
sbb
xchg
cmp
negl
dec
rclb
adc
rcl
xchg
fs
pop
leave
jo
jne
mov
xchg
mov
popf
xchg
fbld
pop
dec
cs
jne
dec
adc
sub
and
xchg
mov
jbe
jbe
dec
push
je
mov
mov
bound
mov
scas
daa
cmp
mov
or
nop
and
pushf
jne
icebp
xchg
movsb
je
jbe
daa
xchg
push
pop
test
add
aad
enter
ja
das
and
in
sbb
ja
pop
aam
test
mov
inc
pop
xor
jl
aaa
inc
dec
cmp
pop
fs
negl
out
daa
daa
fldl
push
cmp
jo
ja
aaa
mov
daa
les
loop
loopne
pop
adc
adc
out
jns
add
lock
dec
and
js
mov
ret
push
pop
leave
and
xchg
pop
leave
and
leave
inc
jb
mov
inc
inc
jb
inc
push
jmp
jns
mov
aam
jns
das
or
imull
adc
cld
mov
sbb
frstor
cmp
pop
jp
lea
out
rorb
push
fmull
cs
lahf
addr16
leave
inc
repnz
pop
js
lea
repnz
inc
xor
and
inc
mov
jnp
mov
jns
inc
jnp
jnp
jnp
jnp
xchg
out
jo
add
dec
dec
test
fisubl
dec
cs
std
jnp
aaa
push
cmpb
cmp
in
add
and
iret
xchg
dec
jns
push
jb
pop
fsubrl
add
in
jbe
addr16
cmp
les
nop
pop
mov
mov
mov
mov
sarl
loope
mov
jl
jl
jl
jge
mov
adc
jge
jge
outsb
mov
pop
pi2fd
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
add
and
push
addr16
xchg
fucomi
insb
cmpsl
jns
xchg
pushf
xchg
leave
jae
dec
stos
push
add
mov
adc
inc
cltd
sbb
or
jle
add
ss
add
cmp
jb
jp
pop
and
addr16
xlat
popf
enter
movsl
jle
lods
jle
jle
jns
fstpt
push
push
aad
enter
or
in
in
push
and
or
call
addr16
push
xor
cmp
in
jmp
ja
nop
jae
scas
pop
arpl
int3
push
xchg
fcompl
dec
mov
push
mov
jns
dec
mov
or
jns
jns
or
psubsb
xchg
imull
enter
rolb
fmuls
jne
mov
inc
fistpll
add
js
inc
xor
pop
xchg
xchg
inc
sbb
or
adc
out
cmp
daa
rorb
sbb
or
xor
cmp
and
add
cmp
inc
push
dec
push
addb
inc
mov
xchg
mov
dec
outsb
out
cwtl
mov
fcoml
fcmovne
leave
jmp
orl
jns
lahf
adc
jns
push
outsb
and
cmp
push
sbbl
mov
xlat
test
inc
repnz
ror
ror
rcr
jmp
iret
jae
push
or
cmp
repz
sub
ss
iret
or
dec
or
in
orb
nop
xchg
iret
leave
repz
dec
dec
es
outsl
pop
shrb
mov
cmp
mulps
leave
repz
popa
push
imul
jns
jns
cmp
xchg
inc
xor
fistps
enter
cwtl
xor
dec
inc
pushf
cwtl
nop
xchg
int
testl
mov
dec
hlt
scas
add
add
in
add
jo
imul
inc
xor
outsl
xor
jb
jmp
cltd
push
push
jg
iret
sarb
lahf
pop
call
jb
movaps
push
or
lcall
adc
das
nop
lcall
stc
sbb
dec
test
pop
test
jns
test
enter
shr
fsubrs
daa
daa
loopne
lock
clc
test
mov
xchg
adc
es
movl
mov
mov
mov
ror
xchg
pop
leave
jae
fadds
add
filds
fcmovne
inc
repnz
dec
sahf
add
mov
lret
pop
js
xchg
mov
lret
lret
lret
mov
xchg
xchg
xchg
testl
pop
loope
adc
sub
mov
dec
mov
das
das
das
das
bound
xchg
mov
daa
daa
push
mov
shlb
daa
daa
daa
fucomp
repz
xor
xchg
daa
or
in
mov
test
cmp
mov
sbb
mov
in
push
push
mov
add
movsbl
jb
xchg
cmp
in
loope
mov
add
in
jns
inc
js
mov
dec
mov
repz
push
pop
addr16
add
ja
mov
xchg
lods
lahf
ljmp
mov
mov
leave
rcrb
hlt
add
mov
or
lahf
pop
mov
cmp
aaa
and
daa
dec
mov
fwait
cmpsb
mov
outsb
push
dec
push
jmp
mov
push
add
mov
add
or
mov
das
and
or
ud2
loop
repz
or
inc
mov
shlb
fildl
pop
mov
test
sahf
pop
and
in
daa
pushf
in
jb
mov
and
adc
cmp
pop
insl
xchg
lea
je
out
jns
xchg
dec
cs
jo
mov
inc
repnz
loopne
jge
fucomi
wbinvd
mov
push
add
sbb
mov
call
dec
mov
or
ss
scas
pop
out
xchg
xchg
out
fildll
jl
rclb
xchg
mov
movsb
mov
xchg
pop
mov
ud2
pop
or
xchg
xchg
xchg
xchg
or
push
add
add
add
les
out
sbb
sbb
sbb
jns
out
sbb
rorl
pop
hlt
mov
jns
addr16
or
adc
adc
lods
out
es
call
pop
mov
adc
movsb
orl
jne
movsb
mov
jb
repnz
mov
pop
inc
repnz
cmp
or
dec
sahf
ja
out
out
xchg
add
seto
sysretw
decl
enter
add
mov
xchg
pop
jne
popf
push
aaa
repnz
vmread
adcb
sahf
or
xchg
cmpsl
fisttpl
pop
cmpxchg
cmp
sahf
mov
xchg
mov
lock
fucompp
sbb
jg
cmpsb
ja
xchg
and
xor
add
cmp
repz
add
fs
jp
rcr
push
bnd
cmpsb
mov
mov
out
ror
sar
push
cmp
dec
jbe
inc
js
xchg
inc
or
push
daa
jo
mov
cmpsl
xchg
xchg
push
sahf
out
mov
add
mov
dec
ss
outsb
ds
inc
xchg
push
and
dec
test
push
jo
cmp
js
adcw
inc
jg
test
rcr
and
daa
dec
xor
xor
xchg
xchg
xchg
add
test
pop
push
adc
add
pop
mov
enter
icebp
xor
xchg
jb
adc
inc
dec
xlat
adcb
pop
leave
test
ss
out
loopne
call
cmp
pop
clc
add
cmp
sbb
or
or
jae
jns
cmp
inc
or
daa
iret
repz
push
push
pop
pop
daa
iret
repz
pusha
adc
dec
xor
nop
test
ss
lods
xchg
mov
mov
add
add
stos
mov
pop
enter
cwtl
stos
or
test
outsw
adc
scas
add
fisttps
in
add
mov
xchg
dec
je
and
stos
call
ljmp
ja
jb
jp
add
repnz
add
int
stos
and
pushf
dec
add
pop
and
das
xchg
xlat
lods
popf
mov
push
inc
push
aas
ljmp
pushw
or
test
jne
fisubrs
add
inc
lods
inc
loopne
out
das
or
daa
push
jae
subb
lods
pop
setle
xchg
mov
jo
dec
lar
cs
js
sahf
ja
mov
fdiv
or
out
add
std
xchg
or
cs
xchg
sub
add
out
sahf
fstpt
pop
inc
add
add
push
sysret
pop
pusha
push
iret
repz
sahf
or
push
or
fucomi
loopne
andb
nop
mov
cwtl
xchg
push
xchg
test
in
mov
cmpsl
adc
lods
lret
xchg
push
pop
fs
xchg
push
add
cld
xchg
add
or
mov
das
cwtl
aaa
push
pop
shll
scas
xchg
pop
and
sub
cwtl
mov
test
adc
pop
shrb
scas
shr
ffreep
leave
in
mov
cwtl
inc
ret
into
sub
cmp
scas
out
and
cltd
cltd
dec
scas
cltd
enter
lahf
cltd
movl
dec
mov
xchg
dec
ja
out
mov
jo
outsb
xchg
xchg
cltd
jnp
fisttps
fmulp
xchg
sahf
push
add
out
scas
cmpsl
or
in
add
dec
xchg
rcr
and
insb
pop
sbb
shll
add
lcall
sub
js
out
push
dec
pop
out
push
xchg
xchg
xchg
xchg
lcall
cmpl
mov
stos
out
nopl
xor
ret
lcall
mov
add
fwait
sbb
xchg
nop
sbb
ret
mov
pusha
fwait
das
push
and
js
sbbb
mov
fwait
inc
adcl
adc
lahf
shlb
and
and
aam
fwait
fwait
fwait
das
das
das
das
in
repnz
cli
fwait
add
add
inc
mov
pushf
and
xor
sub
pushf
testl
push
stos
addr16
pushf
sbb
pushf
inc
out
and
push
pop
sub
xlat
pop
mov
mov
mov
arpl
hlt
xadd
mov
in
subb
adc
add
popf
dec
mov
cld
inc
cmpsl
sbb
and
or
sbb
popf
popf
jp
outsb
mov
cmp
popf
in
and
pop
push
leave
leave
leave
mov
cmp
enter
pop
mov
repz
add
out
sahf
xchg
mov
and
cs
inc
sahf
dec
iret
in
in
lsl
cmpsl
push
pop
xchg
out
pop
and
jp
xchg
lcall
ss
ja
sahf
jb
pop
lret
filds
jae
sbb
xor
pop
pop
pusha
rorb
add
ds
push
lahf
in
test
push
jne
pause
cmp
lahf
mov
mov
xlat
addr16
leave
inc
repnz
jmp
xchg
stc
push
jno
sub
pop
push
aaa
clc
les
mov
outsb
mov
xchg
add
xchg
iret
add
mov
jg
xchg
aaa
jns
out
xchg
push
lahf
vmwrite
dec
add
mulb
in
lret
ja
xchg
xchg
rolb
adc
std
mov
push
mov
cmovno
mov
pop
outsb
ja
dec
cs
mov
fwait
xor
js
roll
and
mov
movsb
cmp
leave
insb
pusha
packssdw
mov
jae
inc
mov
out
jg
add
mov
fiaddl
pop
xchg
ja
lsl
mov
in
mov
das
hlt
mov
sbb
xor
loopne
mov
push
add
push
out
pop
fs
mov
outsb
cmp
pusha
push
push
adc
js
mov
mov
je
sub
test
ud2
sahf
ja
pushf
adc
mov
sahf
out
pop
enter
sahf
cmp
in
loopne
sbb
lock
push
cmpb
mov
test
daa
mov
movsb
xlat
adc
inc
in
mov
or
xchg
xlat
lea
test
repnz
cmp
mov
mov
push
movsb
movsb
xchg
adc
lahf
lock
in
fmulp
clc
movsb
movsl
pop
sysret
or
cmp
out
out
movsl
iret
rclb
jle
test
movsl
fbstp
cmp
add
fmull
ja
push
add
leave
xchg
leave
inc
repnz
clc
inc
mov
cmpsb
sbb
repz
add
push
outsb
cmp
or
mov
outsb
push
aam
iret
lcall
pop
paddd
cmpsb
xchg
outsb
mov
pop
clts
enter
ja
outsl
mov
in
cmpsb
loop
ljmp
jae
adc
cmpsl
or
adc
sahf
out
push
adc
push
and
and
test
das
sbb
mov
sub
inc
cmp
pop
sbb
mov
push
cmpsl
mov
and
cmpsl
test
fwait
addr16
mov
mov
cmpsl
aas
iret
repz
push
add
add
add
leave
repz
add
repnz
test
test
cmp
repnz
jge
dec
adc
sub
dec
test
test
test
stc
fsubl
xchg
shlb
icebp
mov
and
test
aas
jae
out
lcall
sbb
inc
pop
mull
sahf
jae
pop
roll
jo
fimuls
or
or
aad
out
mov
es
xor
test
sarl
mov
and
loopne
pop
mov
ja
pop
dec
jb
inc
outsl
out
push
mov
add
daa
adc
dec
pop
ret
repnz
add
pop
dec
sahf
aaa
sbb
add
sub
movsb
push
cs
dec
add
out
pop
pop
popa
or
jns
imul
dec
dec
sahf
xchg
add
iret
add
cltd
stos
addr16
mov
pushf
pop
aam
les
psubsb
int3
aas
ret
mov
mov
movaps
xor
es
iret
in
push
push
add
ja
cs
dec
cmp
fs
xchg
stos
push
iret
push
add
pop
aaa
jns
push
sti
stos
sbb
jb
add
push
cmpsl
repz
push
and
ds
xor
xchg
dec
js
lods
scas
pshufw
add
mov
xchg
out
fwait
das
mov
jmp
cs
jne
das
cmp
shlb
call
and
and
cmp
adc
sbb
mov
dec
lods
lods
pop
xor
scas
lock
cmp
dec
lods
rcpps
pop
lods
call
rol
in
inc
nop
lods
cwtl
lods
fsubl
adc
sahf
xchg
out
fcoms
xchg
pushf
mov
sbb
and
push
cmpsl
movl
scas
js
fwait
scas
daa
mov
and
iret
cmp
in
pop
push
xlat
sbbb
mov
leave
repz
repnz
repnz
cli
in
repnz
dec
adc
scas
das
repnz
jae
scas
push
scas
push
add
pushf
pushf
cmp
push
pop
push
pop
mov
add
mov
setle
pushf
in
mov
inc
dec
dec
dec
dec
dec
push
dec
dec
aam
add
aas
or
cmp
pop
inc
pop
imul
jns
iret
and
push
and
cltd
dec
movsb
mov
scas
mov
mov
cmp
push
add
cmp
mov
xchg
push
mov
cmp
inc
mov
das
pop
xchg
add
xchg
xchg
lahf
xchg
lods
add
mov
xchg
mov
mov
fbstp
test
add
inc
mov
mov
mov
mov
iret
in
enter
mov
pop
fs
pushf
pushf
pop
insl
xchg
pushf
sahf
cmpsb
scas
push
push
sahf
out
sahf
mov
mov
push
loopne
into
or
mov
mov
add
push
mov
lcall
dec
mov
or
add
and
pop
pop
mov
sub
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
xchg
mov
mov
out
cmp
lret
lret
icebp
mov
mov
mov
adc
sbb
sbb
sbb
iret
push
cmp
inc
and
iret
repz
push
and
repz
repz
and
iret
test
mov
xchg
es
repz
mov
in
cvttps2pi
xchg
iret
enter
jo
call
pop
daa
pop
pop
jbe
ret
jo
or
and
das
adc
fs
daa
dec
cmp
fs
pop
smsw
in
pushf
add
fidivs
dec
lods
nop
cmp
mov
mov
mov
enter
mov
wbinvd
xchg
xchg
xchg
xchg
mov
cmp
xchg
xchg
insl
xchg
xchg
vpmullw
mov
in
dec
adc
mov
hlt
jbe
syscall
mov
cmp
mov
outsl
das
repnz
jae
sbb
sbb
jbe
cmpxchg
sahf
and
and
add
aaa
sti
invlpg
testb
repz
das
pop
aaa
sub
cmp
leave
push
jae
jnp
cmp
leave
repz
iret
mov
push
xor
repnz
out
testl
lods
cmp
dec
and
cmp
push
mov
pop
ja
and
inc
dec
repnz
add
iret
mov
psubusw
dec
sahf
fndisi(8087
xchg
add
rcrb
sysenter
mov
push
popf
dec
and
adc
mov
sahf
xchg
xchg
out
add
rcr
add
xchg
out
out
repnz
aaa
jns
enter
or
push
pcmpeqd
cmp
or
or
aas
pop
dec
sahf
out
dec
pop
adc
sahf
out
jns
jns
adc
out
jns
lcall
sahf
sbb
jns
sahf
sbb
fcompl
out
pop
std
or
mov
add
mov
aas
mov
out
xchg
cmp
nop
push
add
and
mov
shrb
inc
or
out
mov
mov
clc
xchg
push
fwait
clts
mov
js
add
iret
cmp
sub
or
repz
jmp
push
cmp
inc
adc
jns
leave
dec
push
push
adc
push
out
es
adc
lar
inc
jo
pop
js
sbb
pop
mov
cmpb
xchg
and
push
sbb
shrl
mov
clc
mov
mov
pop
mov
dec
outsb
xchg
mov
sarl
pop
fstpt
js
xlat
push
mov
addr16
jns
add
es
das
xchg
pushf
dec
mov
pushf
fmull
xchg
imul
pushf
mov
mov
movsb
lods
xchg
cmp
in
adcb
out
ds
leave
leave
out
idiv
push
pop
shl
jns
or
in
xor
cmp
in
out
popf
pop
pop
xchg
dec
and
xchg
jne
sub
cwtl
pop
cmp
mov
insb
pushf
pop
jo
roll
stos
xchg
mov
mov
in
mov
movhps
add
es
dec
sahf
add
ss
or
icebp
inc
sar
call
xor
subl
xchg
cmp
mov
movsb
leave
jae
cmp
daa
daa
pop
xlat
out
repnz
xchg
adc
into
hlt
in
sbb
and
ret
ret
ret
dec
and
call
cmp
jns
pop
add
jne
cmp
iret
jae
add
leave
jae
xchg
or
daa
ror
rcr
fcomp
in
jbe
pop
loopne
call
pop
enter
mov
mulb
jns
fsubrs
ret
divl
ret
pushf
cmp
cmp
inc
xchg
add
in
and
pop
fldcw
mov
xchg
and
cmp
mov
leave
shll
arpl
stos
xchg
les
dec
jbe
cmp
les
aas
pop
inc
in
dec
sahf
add
add
lock
mov
push
nop
les
sbb
les
mov
jmp
fisttpl
adc
sbb
and
pushf
pop
mov
insb
ja
imul
popf
jbe
add
or
push
pop
lds
xchg
outsl
lods
lds
cld
mov
fld
in
rcrb
outsl
scas
out
lds
pop
pop
pop
outsl
adc
sbb
es
xor
pop
pop
pop
pop
cmp
inc
push
pop
pop
pop
pop
pop
push
mov
pop
pop
pop
pop
xchg
lahf
stos
mov
leave
dec
mov
nopl
aas
xchg
xchg
xchg
xchg
sbb
sbb
sahf
xchg
xchg
xchg
push
adc
sahf
out
sub
sub
out
in
in
push
xor
pushf
aaa
outsl
dec
inc
cmpsl
sysexit
jae
jmp
lar
repz
cmp
cmp
repz
cs
iret
repz
aas
dec
inc
pop
iret
repz
inc
gs
jo
jnp
sahf
out
inc
fiadds
iret
leave
repz
inc
rcr
dec
jmp
cmovnp
hlt
dec
cmp
xor
enter
and
cmp
repz
push
inc
in
in
dec
pop
push
bound
dec
sahf
out
pop
orl
leave
leave
leave
leave
mov
fstpt
popa
test
mov
leave
adc
mov
leave
push
leave
rep
xchg
xor
push
cmp
or
leave
setno
addr16
leave
pop
ror
leave
hlt
in
mov
aas
fcomps
pavgb
outsb
and
pop
pusha
leave
push
jns
leave
repz
adc
nop
cmp
out
cwtl
sbb
daa
iret
sbb
insb
sbb
and
fidivs
xor
xchg
lret
repz
sub
add
pop
pusha
lret
lret
adc
jmp
xchg
inc
jl
insb
push
daa
dec
xchg
dec
mov
dec
dec
ror
add
dec
sahf
outsb
cmp
pop
clts
loopne
jns
and
lret
sub
outsb
or
xlat
in
inc
fisttps
lret
push
repnz
movups
sbb
enter
cmp
push
lret
scas
pop
lret
mov
out
lret
scas
lret
lret
lock
pop
mov
fildl
mov
js
stos
mov
in
popf
mov
mov
iret
in
in
pop
pop
jg
int3
adc
insl
in
fistpl
pop
push
mov
int3
xor
loope
int3
pop
dec
int3
push
int3
popa
int3
cmp
ja
orb
mov
rcll
cs
ficoml
in
int3
mov
sti
int3
push
int
adc
sbb
jns
mov
push
daa
mov
and
in
repnz
pop
punpckhwd
cmp
jg
daa
mov
repz
sub
loop
cmpsl
clc
je
in
mov
into
mov
into
nopl
add
and
into
jg
jecxz
xchg
xchg
and
pop
cmp
xchg
orb
repnz
push
scas
pop
mov
xchg
add
into
inc
mov
into
in
lock
jle
repz
mov
adc
iret
push
xor
sahf
out
sbb
imul
jg
iret
repz
and
out
in
push
and
mov
rorl
lock
fmulp
iret
iret
repz
push
loop
ljmp
iret
push
movsb
imul
inc
add
sub
jo
int
in
and
es
xchg
push
aaa
push
xor
sarb
rep
pop
push
add
xchg
push
mov
rorb
shl
mov
cwtl
aas
mov
inc
cmp
or
add
sbb
das
pop
loopne
lock
clc
loopne
add
xchg
out
pushf
dec
push
shll
push
add
sahf
aaa
pop
inc
or
ja
aaa
jns
sysret
arpl
or
jle
in
dec
xchg
iret
xchg
rcrl
cmpsl
shll
mov
iret
sbb
sbb
rcl
ror
repz
outsl
sub
xor
add
add
inc
dec
sarb
cvtdq2ps
out
or
xorb
cmp
mov
mov
dec
outsb
out
mov
aas
int
cmpxchg
daa
dec
or
jecxz
out
shl
or
into
psubw
add
mov
cmp
sbb
or
leave
jae
xor
inc
leave
repz
push
push
pop
pop
addr16
jns
jb
sbb
aas
xchg
iret
repz
sbb
sbb
repz
lds
shlb
fcomi
jbe
cmp
out
ud0
cmp
repnz
or
adc
jns
imull
cs
inc
aam
lds
pop
aam
cs
ja
leave
call
push
inc
dec
icebp
pop
cmpsb
cmpxchg
das
mov
out
and
push
push
fldl
cmp
xchg
out
or
aam
or
in
addr16
adc
pop
pop
or
in
xor
push
sahf
out
sahf
popa
adc
adc
orb
aad
in
jbe
aad
das
scas
dec
in
iret
jae
mov
les
iret
sahf
outsb
repnz
fimull
and
mov
push
adc
leave
repz
pop
daa
sub
out
cmp
cmp
sub
cmp
pop
sub
jg
in
daa
xchg
push
xor
xchg
int3
jl
js
xlat
psrad
out
cmp
cltd
xor
add
jne
and
adc
test
arpl
xchg
mov
cmp
sbb
xchg
ficomps
push
add
aas
inc
push
sub
mov
sti
imul
inc
xchg
dec
aaa
mov
inc
push
dec
aaa
leave
push
sahf
ja
push
push
add
add
repz
add
add
leave
repz
or
or
xchg
fisttpl
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
jns
xchg
fildl
xchg
push
sub
dec
loop
sahf
mov
jo
cmpsl
mov
into
aas
xlat
xor
data16
fldl
add
repz
adc
push
inc
cmp
xor
repz
xor
and
or
sahf
out
ds
call
jns
out
aam
int3
iret
repz
out
rcrb
test
ja
cmp
cwtl
nop
push
mov
je
pusha
push
push
icebp
jns
out
inc
sub
or
sub
adc
push
mov
test
add
adc
jb
inc
add
adc
test
push
inc
int3
mov
sbb
dec
in
cmp
pop
mov
fsts
adc
sub
testb
add
fsts
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outsl
mov
xor
fcomp
loopne
jb
jle
sub
inc
xor
push
inc
inc
and
iret
or
sbbb
push
cmpsl
mov
hlt
fidivrs
outsb
cli
inc
daa
pop
jle
adc
pop
mov
xchg
fsubrs
sub
pop
das
mov
pop
movsl
add
arpl
idiv
fucomi
inc
out
scas
out
repz
pop
push
or
adc
out
iret
repz
adc
iret
repz
sbb
hlt
in
sbb
out
mov
lods
xor
out
cmp
fsubr
out
push
mov
jmp
or
js
ljmp
in
decl
repz
pusha
ret
cmp
lcall
into
xor
add
pop
clc
call
aas
aam
inc
pop
pop
inc
popa
add
insl
pop
or
add
cwtl
sub
fiadds
xorb
stos
jp
icebp
addr16
push
push
pop
inc
sarl
inc
push
xchg
lea
pop
pop
aas
pop
pop
xchg
arpl
pop
xor
test
cs
cmp
dec
lods
mov
add
lods
stos
ja
and
sub
adcl
out
pop
daa
and
ja
add
push
xchg
push
js
sbb
sbb
loopne
add
add
and
add
idivl
sub
or
mov
out
adc
lock
push
ljmp
in
push
and
lock
push
cld
adc
sahf
loopne
push
hlt
sbb
adc
jns
out
rcrb
enter
out
sahf
pop
mov
jns
out
and
and
push
out
pop
insb
inc
into
test
mov
aam
nop
xor
mov
mov
xorb
inc
cmp
xorl
jg
cmp
jns
out
pop
js
mov
in
repz
repz
xor
add
imul
lcall
push
stos
xorb
insb
addr16
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
mov
loope
jp
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
and
cmpsl
int3
add
sti
aas
jno
or
mov
pop
fs
fisttps
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
pushl
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
xchg
cmp
push
mov
xchg
aas
dec
loop
mov
pushl
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
pushl
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
xchg
clc
orl
pop
ficomps
frstor
loopne
pop
pop
pop
inc
inc
je
inc
jb
in
inc
push
dec
jnp
mov
jb
cmpsl
add
ja
popa
call
out
mov
les
hlt
push
xor
xchg
fs
xor
ljmp
and
jmp
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
add
movl
imul
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
fwait
call
add
std
test
movsl
cli
test
xor
leave
mov
fcomip
jmp
insb
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
dec
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
inc
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
mov
js
stc
aas
sub
push
loope
or
insl
or
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
cli
incl
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
jg
adc
ret
movsb
sti
hlt
shrl
imul
mov
sar
decl
jae,pt
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
pushl
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
pushl
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
sar
pushl
jns
imul
andl
shrb
rclb
or
add
sar
or
das
es
lds
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
scas
bound
test
jg
ljmp
or
dec
sbb
mov
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
push
push
pop
dec
xor
daa
iret
mov
pop
cmp
sub
pop
js
adc
add
inc
jns
out
push
xlat
fcomp
fcmovu
out
sahf
out
fstp
loop
jns
out
in
call
sahf
out
in
in
repz
sahf
out
sahf
cmc
div
clc
stc
cli
ret
jns
cld
daa
adc
aas
inc
adc
adc
push
mov
push
movl
fs
dec
bound
add
sbb
inc
insl
bound
inc
or
pushw
popa
je
pop
das
xchg
pop
stos
inc
in
cltd
out
and
enter
inc
dec
sub
push
push
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
divb
xor
or
xor
bound
aam
push
inc
popa
push
inc
jbe
cli
shl
pop
insb
imul
data16
gs
push
dec
inc
ljmp
or
leave
fs
mov
adc
fs
add
pop
or
or
push
je
scas
ss
fs
push
jbe
add
aas
fsts
scas
mov
xchg
push
and
push
xor
aad
adc
inc
push
xor
dec
arpl
add
inc
mov
popa
jns
cmp
pop
dec
insb
and
sarb
popa
xchg
cmp
movq
aas
inc
push
add
pop
push
and
sub
aas
cltd
and
cmp
daa
int
imul
pop
inc
aas
and
dec
pop
es
xor
pop
je
mov
jnp
jo
inc
inc
add
ds
xor
sarb
push
jae
mov
xor
rcll
cmp
inc
mov
add
insl
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
clc
mov
out
xchg
into
pop
jo
mov
or
insl
xchg
inc
cmp
aas
aaa
dec
scas
inc
cltd
dec
shlb
in
push
add
ss
and
push
outsl
pop
fidivl
orb
ljmp
cmp
mov
roll
pop
adc
rclb
inc
xorb
dec
add
frstor
add
push
xor
jo
lahf
sbb
outsl
test
mov
mov
mov
push
jno
jno
stos
sbb
push
lds
dec
xor
pusha
in
nop
test
pop
cmp
mov
mov
jae
add
sarl
jo
push
push
dec
adc
jns
and
push
popf
das
inc
jb
aad
or
gs
test
arpl
insb
aas
inc
mov
inc
push
bound
lods
popf
push
jbe
dec
pop
push
shll
addr16
mov
push
dec
xor
lcall
add
lock
call
ret
inc
add
push
add
push
xchg
jg
xorb
iret
inc
or
lods
inc
outsl
pop
mov
cmpsb
pop
inc
dec
or
cmp
xor
cli
adc
rorl
aas
adc
jo
sbb
jmp
inc
push
inc
dec
mov
sub
jns
arpl
xor
cmp
pop
pusha
add
insb
insl
aaa
adc
jne
push
pop
mov
push
dec
inc
xchg
fistl
enter
xlat
add
mov
loop
daa
sub
and
cwtl
adc
add
push
add
mov
push
hlt
scas
add
inc
inc
fdivr
loopne
adc
sbb
or
fs
adc
out
sbb
fistl
mov
add
or
pop
pop
push
or
or
or
js
decb
or
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
push
lods
fnsave
pop
adc
outsl
dec
or
inc
add
jo
add
and
add
add
les
add
lock
mov
rcrl
shlb
incl
jge
call
xor
adc
jmp
and
xor
inc
mov
adc
xor
cmpb
lods
and
mov
inc
add
cmp
adc
add
push
dec
jno
addl
add
inc
or
add
sub
add
and
add
or
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
mov
mov
lock
loope
icebp
or
push
or
mov
sbb
addb
loopne
scas
fiaddl
or
js
ljmp
adc
cli
sub
rcr
push
ret
xchg
jmp
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
adc
xchg
mov
inc
dec
test
mov
cmp
xor
cmp
xor
and
fistpl
jg
inc
add
std
push
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
inc
leave
push
add
adc
pop
std
or
add
lcall
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
cli
aad
std
movsl
jecxz
pop
mov
lods
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
cmpsb
fisubrl
in
mov
orb
int3
lcall
fs
scas
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
lcall
mov
pop
cwtl
int
arpl
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
roll
stc
xor
hlt
and
xchg
jmp
sbb
xor
dec
out
pop
jb
jg
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
loope
in
in
outsl
sbb
mov
sar
andl
aas
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
jg
scas
cld
or
push
inc
sbb
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
in
decl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
mov
aaa
dec
push
push
push
idivl
cmp
sub
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
pushl
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
add
orb
mov
cmp
imul
jmp
xchg
pop
clc
pop
hlt
sub
in
stos
movsb
add
lea
jg
gs
std
xorb
cld
lcall
outsl
adc
ret
das
pop
pop
pop
shlb
push
std
incl
out
sarb
sbbl
jno
or
sarb
std
pop
call
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
incl
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
ljmp
arpl
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
ljmp
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
mov
call
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
incl
adc
push
jo
pusha
imul
add
mov
cmp
xchg
push
ljmp
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
pop
insl
fsubrp
jae
shrb
shlb
out
aas
stc
add
notb
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
mov
cmp
fmull
enter
aas
lahf
cs
in
pop
mov
sub
mov
cld
aas
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
das
testb
or
pop
jg
add
mov
std
fistpll
mov
aad
test
mov
mov
std
mov
mov
push
push
sbb
stos
icebp
pop
incb
nop
dec
jno
adc
push
inc
jecxz
sbb
sarl
in
jnp
inc
sar
adc
pop
fcmovb
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubrl
add
fisubl
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
cli
ljmp
dec
adc
lahf
mov
or
out
lcall
std
rolb
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
and
add
pushl
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
outsl
lock
test
cld
paddsw
pop
stc
out
mov
clc
push
std
mov
jmp
test
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttpl
out
rolb
pop
or
or
fidivrs
les
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
incl
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cltd
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
cld
testl
sbb
scas
stc
adc
insl
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
incb
into
out
icebp
mov
loope
mov
cmpsl
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
decb
adc
cmc
decb
dec
adc
call
imul
popf
iret
bswap
and
or
mov
adc
add
push
pop
aaa
std
fistps
fisubs
adc
inc
sbb
mov
mov
aas
icebp
ret
ror
ja
or
sbb
aaa
inc
adc
mov
mov
sub
mov
pop
clc
loope
push
shr
ja
and
dec
add
arpl
mov
mov
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
iret
incl
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
jg
call
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
add
adc
add
mov
outsl
xchg
push
imul
pop
stc
push
dec
out
fstpt
mov
jo
in
movsb
enter
aas
adc
out
daa
push
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
mov
fsubrl
dec
add
mov
add
push
sti
pop
inc
dec
push
mov
sub
scas
xchg
push
cmp
int3
pop
iret
mov
or
in
ljmp
mov
cmp
scas
push
shrb
adc
jl
icebp
icebp
test
lods
adc
bound
and
lret
sbb
and
mov
pop
lods
sub
mov
mov
ljmp
xchg
xchg
aam
add
and
cwtl
mov
push
jae
mov
mov
pop
movsb
movsb
mov
pushl
insb
sti
jo
mov
push
cmpsl
mov
std
sub
pop
jl
jno
icebp
dec
xor
dec
xchg
out
mov
xchg
arpl
inc
mov
rcl
mov
mov
or
mov
decl
cwtl
outsb
xor
jo
insb
lret
push
popa
in
imul
sahf
sti
daa
ret
sub
out
ljmp
cs
sub
push
shrb
stos
mov
xlat
push
adc
and
xchg
decl
xchg
rep
push
cmpsl
in
test
shll
repz
shrl
testl
cld
jle
pusha
jo
pop
cmpsl
shrb
cmp
pop
outsb
hlt
inc
arpl
jge
lahf
loope
push
inc
std
jge
fbld
dec
push
dec
pushw
or
outsb
xor
leave
outsl
ljmp
ljmp
jbe
inc
cmpsb
sarl
add
sub
push
insl
jne
ds
gs
or
sub
mov
hlt
jbe
andb
decl
pop
pusha
outsl
aaa
fisubrs
mov
cmpsl
xchg
sar
and
pop
and
adc
jge
incl
call
out
sbb
inc
mov
or
dec
addr16
xchg
sbb
incl
mov
lds
pop
sub
das
mov
rcrb
addl
pushl
sub
popa
lods
xchg
bswap
xor
inc
mov
fisubs
out
push
mov
mov
aaa
jo
jmp
cmp
scas
dec
insl
add
and
daa
in
xor
imul
adc
rclb
jnp
push
lods
jg
push
inc
lods
int
pop
dec
xchg
in
xor
shll
inc
mov
push
pop
arpl
add
dec
xchg
xchg
mov
add
cmc
jbe
aaa
push
push
mov
jg
jge
lds
mov
push
sahf
addr16
cmovb
pop
push
jne
pop
mov
scas
inc
pop
neg
js
ret
fcoms
jle
decl
jge
jle
loope
sar
or
arpl
adc
fistpll
jl
pop
adcl
fistpl
insb
jp
xchg
pop
lods
pop
outsl
add
decb
mov
mov
fmulp
icebp
call
aaa
rcrb
pop
lods
aad
arpl
cmp
les
sub
jb
cmp
xor
xchg
ljmp
addr16
add
cmp
js
ret
xchg
push
and
mov
in
hlt
pop
ds
inc
jmp
inc
icebp
xchg
pop
loop
aad
jnp
adc
mov
pop
pop
or
test
into
push
incl
cmpsb
pop
imul
push
mov
fimuls
pop
cli
shll
lods
insb
je
push
test
jae
push
pop
out
jnp
pop
and
pop
cwtl
sbb
ret
adc
ljmp
mov
xchg
shrl
push
rcr
fdiv
scas
jg
repz
addr16
decl
outsb
rdmsr
js
sub
outsl
enter
ljmp
rcll
fcos
jmp
clc
testl
push
out
adc
lret
fistps
mov
int3
repz
int3
sbb
int3
dec
adcb
loope
cwtl
icebp
data16
mov
push
pushl
out
pop
cmpsb
xor
mov
fs
xchg
sub
jb
fsubs
and
movsb
xchg
stos
ljmp
xchg
clc
inc
mov
pop
sarb
lds
movsl
movsb
sub
jnp
push
decb
mov
and
mov
ja
xorb
pushl
mov
inc
sahf
pop
cltd
int3
xchg
cmp
les
call
dec
lcall
pushf
fisubs
pop
lods
sti
jge
icebp
xor
pop
cli
stos
rcrl
insb
sbbl
push
test
jb
xchg
out
cmpsl
in
rcl
test
test
std
je
push
mov
movsb
and
cmp
xchg
aas
pop
dec
mov
repnz
xchg
and
pop
sar
or
dec
add
stc
mov
aas
sub
incl
lret
das
stos
filds
shrb
jg
jae
push
rcll
test
scas
inc
mov
loop
das
add
outsb
imul
xchg
sbbb
roll
lret
call
sbb
sub
pop
fs
add
sbb
call
and
sbb
push
jge
or
cli
inc
xor
mov
arpl
sub
inc
sub
jae
dec
ja
mov
jg
mov
jno
xchg
das
fsubs
jb
fcmovbe
jg
adc
sub
jl
in
fistpl
dec
fdivl
test
es
das
out
mov
mov
adc
xchg
dec
pusha
mulb
xor
cmp
or
arpl
and
fs
aad
inc
inc
or
xlat
mov
ret
scas
push
sbb
test
mov
mov
fmul
loope
pushl
xchg
lock
je
xchg
insl
mul
xchg
cmpsb
and
movsl
sbb
dec
mov
mov
ljmp
shlb
pop
cli
rorb
mov
push
xchg
cmp
add
cmpsb
push
into
leave
cmp
ret
icebp
add
adc
fwait
push
cmpb
or
and
fstps
pop
jbe
or
jmp
mov
mov
leave
pop
pop
pushf
sbb
mov
arpl
or
sahf
push
and
decl
add
test
test
add
push
or
gs
lcall
pop
cmp
push
push
fwait
out
mov
call
add
psubd
mov
out
xchg
ror
in
xor
inc
xchg
aam
hlt
jmp
loope
lds
mov
jbe
fnsetpm(287
add
dec
cmpsl
lahf
sbb
pusha
jg
pop
xor
outsb
pop
xor
fwait
in
int3
inc
push
aad
xchg
cltd
jecxz
push
pushl
jno
add
push
sub
nop
mov
xchg
mov
pop
xchg
sbbb
decl
pop
sti
lods
and
ljmp
int
sbb
push
xchg
dec
es
jno
out
iret
mov
ficoms
aad
push
sti
jno
subb
mov
out
clc
dec
inc
ljmp
pop
lcall
fimuls
decl
sbbb
xchg
cmp
in
aam
popa
imul
jno
pushf
xchg
sub
leave
subl
dec
test
cli
ljmp
dec
inc
fwait
push
or
into
pop
add
cmp
jg
ljmp
lcall
ja
cmp
and
mov
jne
jecxz
idiv
stos
lcall
pop
cmp
push
sbb
mov
pop
ret
notb
inc
mov
mov
aaa
sahf
lock
push
in
or
dec
movsl
mov
dec
mov
pop
cmc
fucomp
push
xor
xchg
sub
ljmp
test
and
cmpsb
fcomip
pushl
jge
outsl
pushf
mov
in
xor
add
jns
lods
shrb
and
sti
mov
scas
adc
jnp
dec
popf
shrl
and
jl
push
dec
sub
or
adc
fcmove
pop
sub
jp
mov
or
nop
lcall
mov
cmpsb
sbb
inc
jle
mov
sti
stos
sub
repnz
loopne
sarl
gs
pusha
dec
mov
pop
inc
jo
xlat
push
cmp
outsb
ds
sarb
pop
lock
dec
clc
stos
push
jns
into
mov
int3
add
shll
dec
icebp
shlb
cld
lcall
cmp
mov
fcoml
es
mov
lods
repnz
add
rol
mov
pushl
inc
addr16
outsl
test
or
inc
dec
dec
int3
les
mov
or
xor
push
jmp
adc
dec
in
cmp
inc
push
mov
aad
lahf
jo
jg
shrl
aas
mov
mov
pop
lds
jg
pop
aam
mov
pop
mov
scas
inc
incl
jle
pop
add
pop
bound
outsl
mov
adc
fcomip
jmp
mov
movsb
rcll
mov
les
pop
repz
mov
fs
jo
dec
mov
lcall
add
shrb
pop
mov
xchg
sbb
jge
cmc
incl
jb
outsl
enter
mov
call
das
sbb
scas
incl
inc
pop
mov
std
add
cmovg
fwait
xchg
out
xchg
dec
popf
scas
insl
bound
clc
rcr
cld
mov
sar
xchg
and
add
pop
push
push
and
xchg
ficompl
incl
enter
sbb
in
cmpsb
in
add
jecxz
cwtl
xor
mov
lcall
arpl
or
xchg
add
inc
adc
xchg
cltd
sub
mull
pushl
fisubrl
andb
mov
repz
add
add
mov
call
adc
cmp
push
test
cmpsl
push
mov
xor
out
xchg
xor
addb
cmp
mov
jns
outsb
and
mov
push
push
mov
dec
dec
in
xor
imulb
loopne
push
pop
les
lock
cltd
loopne
lcall
ss
scas
jno
imul
dec
cltd
mov
sbb
sbb
inc
fistpl
lret
fldl
cmp
pusha
cmp
roll
fcmovnb
sbb
xchg
xchg
movsl
jp
test
jbe
fcomip
ljmp
inc
fwait
ret
mov
jge
test
ss
sar
adc
popf
xchg
scas
mov
test
and
adc
push
out
ljmp
or
sub
scas
scas
inc
mov
xor
inc
jle
add
testl
rcll
movsl
add
and
shrb
std
call
mov
mov
jmp
stos
outsl
icebp
push
sti
paddw
mov
std
mov
push
dec
sub
loopne
or
inc
add
pop
cmpsb
mov
mov
add
push
mov
adc
fdivl
in
lock
fists
mov
adc
cli
sbb
cmpsb
pop
popa
jbe
xlat
sti
cmp
push
std
jmp
je
pushf
mov
jae
mov
stos
jo
clc
stos
and
ljmp
fs
jmp
push
jne
jecxz
adc
jo
out
sar
sahf
cli
cld
aaa
mov
add
mov
ljmp
sbb
jge
sbb
sbb
in
movsl
pop
in
pop
nop
pop
pop
push
or
pusha
sub
div
call
fwait
imul
mov
pop
daa
inc
js
lcall
shlb
dec
adc
mov
dec
ret
pop
jae
push
stos
add
incl
and
adc
test
sub
fwait
sub
mov
xor
xor
lock
jnp
and
test
and
mov
inc
addl
inc
sbb
dec
jmp
push
pop
lahf
inc
mov
rep
sarl
jl
cli
aam
loope
add
adc
cmp
outsb
xchg
shll
out
ds
lods
inc
pop
js
into
pop
mov
ret
push
mov
test
cld
dec
xchg
fdivp
or
dec
adc
mov
imul
lock
mov
sbb
mov
loop
ret
push
jle
popa
int3
mov
repz
jg
sbb
fs
popa
inc
jnp
popf
sub
xchg
insb
lea
mov
xchg
sub
pop
and
jne
int
fsubs
jmp
mov
dec
into
jb
enter
jecxz
out
and
inc
mov
cmpb
ljmp
insb
aam
aam
insb
int3
push
adc
pop
clc
add
xchg
es
adc
stc
jmp
mov
test
test
sbb
roll
cmp
fs
or
incl
dec
insb
sar
out
jecxz
mov
mov
lcall
daa
cmp
call
jmp
cmp
bound
or
ljmp
or
lcall
mov
and
jecxz
xchg
xchg
clc
or
cld
inc
sbb
push
lcall
pushl
mov
adc
cmp
mov
fwait
mov
push
xchg
rcrl
loopne
cwtl
jg
cmp
cwtl
fwait
push
das
pop
decl
sbb
jae
loopne
mov
jmp
jbe
mov
mov
cld
ljmp
repnz
test
ja
movsb
add
mov
ljmp
ljmp
roll
dec
cmp
mov
lods
dec
in
or
insb
pop
clc
decl
fbld
pop
and
call
xchg
ljmp
cld
xchg
popa
dec
stc
xor
fimull
std
xor
mov
decl
sub
xchg
inc
out
jmp
adc
out
sbb
stos
xchg
lea
incl
cld
sub
in
scas
nop
dec
call
inc
mov
outsb
sbb
stos
popa
sbb
fmull
push
push
sar
or
ja
ja
aam
inc
ja
pushl
push
notb
int
lods
jns
rclb
mov
lock
ljmp
cwtl
addr16
lret
xor
dec
jb
mov
push
jle
sarl
adc
jmp
mov
jbe
xchg
inc
mov
fidivl
clc
xchg
inc
mov
out
icebp
inc
jne
cmpl
arpl
push
xor
aad
or
xchg
xor
cmp
inc
in
repnz
pop
ja
arpl
je
sbb
test
cs
mov
adc
ds
addr16
outsb
push
jl
push
mov
jl
leave
lcall
adc
xchg
or
dec
movsb
fbstp
adc
pushl
dec
cmp
call
divb
in
and
xchg
and
jae
or
outsb
stc
jg
push
or
jle
push
jl
push
mov
mov
xchg
xchg
or
data16
cmpsb
mov
mov
cmpsl
divl
sti
mov
fnstsw
dec
data16
call
push
in
sbb
inc
push
jns
decl
or
icebp
sbb
jno
sbb
into
loopne,pn
and
sub
ret
and
push
arpl
cmpsb
jmp
test
mov
outsl
sub
pop
sub
jbe
sbb
or
mov
pushf
sub
bound
mov
out
push
push
ja
icebp
cmp
ret
xchg
sub
scas
std
or
pop
movsb
shrl
xchg
jns
xchg
mov
dec
xor
mov
sbb
dec
incl
daa
stos
lods
scas
pop
test
or
jb
mov
popf
out
mov
pop
cld
jmp
int3
mov
adc
jp
jle
dec
aas
xchg
das
pop
xor
mov
sar
mov
xchg
push
loopne
das
pop
dec
jb
mov
jle
lcall
lcall
add
cmpsl
mov
ret
jo
push
and
outsb
mov
jo
and
pushl
ds
push
sbb
cli
xlat
dec
jmp
pop
clc
insb
pop
fsubr
clc
mov
or
push
ljmp
pop
incb
iret
and
adc
sub
test
cmpsb
popf
jmp
jg
ficompl
fisubl
sahf
xchg
inc
fbstp
fistpl
mov
addr16
call
cmc
lods
inc
lret
cmp
test
popl
mov
outsl
and
mov
orl
mov
lcall
leave
or
and
sbb
sbb
ss
es
stos
adc
jge
fs
sbb
iret
lret
stos
mov
inc
dec
xchg
out
xchg
add
test
adc
call
fisttps
xlat
iret
pushf
mov
imul
jne
inc
movsl
sbb
mov
pop
xchg
mov
call
push
pop
lret
mov
push
pop
mov
fadd
xchg
pop
jmp
dec
ficomps
fs
mov
inc
lcall
adc
stos
stc
aaa
pop
in
test
xchg
hlt
insl
leave
cmp
nop
std
bound
push
dec
pop
push
popa
pop
pop
incl
add
xchg
test
mov
lcall
cli
add
sbb
call
scas
test
pusha
add
ss
rcl
sbb
jl
mov
and
mov
xor
fcos
lcall
ljmp
jno
divl
test
mov
cld
test
lcall
lods
pop
sbb
ss
xchg
inc
or
mov
jg
cmp
jne
ret
mov
roll
sub
and
loopne
cmc
inc
loope
xchg
sub
fistps
rclb
and
inc
roll
xchg
inc
jmp
enter
cmpsb
or
bound
cmp
cltd
pop
dec
call
std
and
push
jge
lcall
dec
xor
call
mov
cmpl
mov
dec
mov
inc
leave
mov
arpl
mov
pushl
sarb
js
or
lods
fildll
adc
movsl
push
std
decl
pop
fmul
push
inc
mov
aas
add
testl
jecxz,pn
jo
add
cli
scas
mov
fisubrl
je
enter
loop
mov
jmp
fbld
lret
clc
rorb
stos
rcrb
int
int3
jo
movsl
scas
mov
lcall
iret
push
sbb
scas
sbb
xor
cmp
inc
mov
das
push
fsubs
mov
in
insb
xchg
ja
stos
orl
mov
cltd
xchg
fistl
dec
rol
inc
lret
pop
jecxz
mov
inc
rcll
pop
cld
pop
insb
into
das
xchg
mov
xor
test
jns
mov
cmp
mov
mov
cmp
aam
pop
inc
jg
int
stos
sub
xchg
dec
pop
dec
xor
ljmp
cltd
jb
cmpsb
lods
mov
add
ret
js
repnz
or
mov
mov
push
jl
pop
cmp
js
cmc
cmp
adc
mov
sar
incl
lret
scas
and
test
mov
into
into
mov
ljmp
mov
push
fcomps
lret
subl
lods
xchg
mov
stos
ljmp
repnz
push
push
dec
dec
ret
mov
pop
push
mov
jne
pop
loopne
or
or
jns
jae
das
clc
xchg
lea
mov
jnp
jns
adc
outsl
or
cli
ret
add
in
arpl
and
jno
xor
lret
dec
add
jg
incl
sub
std
into
imul
jmp
mov
iret
lret
sbbb
cmpsl
mov
push
mov
test
mov
inc
mov
jo
je
pop
popa
pop
mov
nop
sti
test
push
repnz
gs
lock
repz
mov
mov
cli
js
push
decl
std
dec
pop
xlat
mov
pop
mov
mov
sbb
adc
cltd
clc
cltd
dec
test
mov
sbb
shrb
or
andb
test
addr16
sub
ja
lcall
test
xlat
pop
scas
fucomip
pop
mov
hlt
push
rolb
movb
and
push
and
and
and
outsb
jp
lea
adc
decl
push
add
dec
pop
out
shll
stc
andl
dec
lods
sbb
add
mov
jge
pop
es
adc
leave
add
lds
fists
enter
push
jae
stos
testl
pop
rep
aam
addr16
lcall
jne
mov
sbb
arpl
cmpl
cmpsb
mov
xchg
inc
sti
leave
or
insl
sbb
adc
jo
cwtl
mov
adc
cmp
gs
shll
inc
or
push
sub
mov
push
pop
xchg
xchg
lds
xchg
fidivl
cld
ljmp
sbb
call
or
stc
jns
push
adc
pushl
pop
repz
outsl
pop
enter
ret
fisubl
pop
repnz
cli
adc
je
pushf
outsl
cli
pop
lock
aas
push
lcall
test
movsl
test
aad
rolb
decb
push
imul
add
add
mov
lods
add
or
popf
or
mov
pushl
and
repnz
xor
sbb
iret
movsb
adc
stos
in
decl
lret
cmp
stos
call
loope
push
insb
mov
cmp
decl
in
repz
sub
and
int3
subb
xchg
subl
repnz
das
add
push
push
push
jmp
sub
mov
sbb
movsw
fwait
fcomip
call
pop
inc
das
pop
xchg
mov
inc
mov
jbe
scas
lahf
sbb
jg
incl
aam
shrl
pop
movsl
push
clc
inc
imul
out
and
cld
call
pop
push
mov
rcrl
stc
fwait
xorl
push
inc
fwait
ret
clc
inc
cmp
push
gs
sub
shll
cmp
mov
pop
mov
sbb
fdivp
xor
js
add
add
xor
mov
daa
xchg
push
pop
inc
or
mov
or
push
mov
es
movsb
xchg
enter
pushl
xchg
into
lcall
or
push
or
push
ljmp
or
nop
cmc
int
lock
mov
addr16
fisttps
pop
mov
pop
xchg
inc
xchg
fs
mov
pop
cwtl
mov
fsubrl
jecxz
cmp
jae
xchg
das
mov
sbb
mov
incl
mov
cltd
mov
push
inc
test
mov
push
scas
popf
xchg
or
in
xchg
xor
movsb
add
stos
mov
in
xchg
in
inc
das
pop
jnp
scas
cwtl
int
and
mov
push
jl
fimuls
jno
fidivrl
scas
push
into
jo
clc
inc
dec
mov
fwait
decb
add
adc
xchg
jae
ljmp
test
add
cli
cmp
push
notl
jle
jge
inc
jl
mov
cld
adc
push
adc
xor
ljmp
test
mov
xor
clc
test
cli
cmp
cmp
pushl
mov
out
inc
test
in
sti
mov
jne
test
lahf
sbb
adc
and
jmp
push
inc
in
mov
mov
cld
fdivl
out
adc
sbb
aam
sar
mov
mov
pop
mov
or
xchg
pop
cmp
or
cmc
push
loop
stc
ljmp
lcall
mov
sub
sub
insl
sahf
cmp
push
pop
jp
daa
inc
fcomip
push
inc
xchg
cwtl
xor
test
shrb
int3
mov
imul
sbb
xlat
xchg
push
add
jmp
mov
cmp
in
mov
jl
adc
divl
jg
in
aas
js
loope
jae
sub
pop
sbb
jne
loope
cld
sub
std
or
push
xorl
mov
imul
mov
lods
mov
loop
pusha
sbb
stc
je
in
lods
aam
test
ja
rclb
add
mov
ror
push
shrb
jns
adc
pop
dec
pop
xor
call
hlt
lds
xlat
mov
ret
xor
ror
push
sbb
into
cld
xchg
fistl
gs
in
cmp
jmp
aas
push
lahf
add
mov
push
cld
lcall
fs
mov
loopne
adc
popa
push
stos
or
xchg
jne
pushl
mov
test
dec
out
or
push
add
ja
fnsave
push
add
mov
into
mov
xor
lods
sbb
inc
rol
dec
dec
sar
in
mov
enter
popa
pop
in
int
xchg
leave
int3
lahf
icebp
loop
push
mov
and
faddl
mov
jns
sbb
pop
shlb
outsl
outsb
rcll
fnsave
ljmp
ffreep
enter
cs
mov
push
push
ja
mov
push
xchg
dec
loop
aam
pop
aad
jl
decl
jo
push
inc
xor
dec
in
mov
jae
push
pushf
insl
jo
cltd
es
sahf
mov
pop
xor
cmpsl
fstpl
mov
xchg
std
icebp
cmp
sbb
pop
cmovns
inc
aaa
jne
jg
mov
xchg
lock
or
jmp
and
dec
fsts
incl
mov
mov
lds
cwtl
jecxz
sti
sbb
lods
bound
ljmp
pushl
sub
or
ffreep
frstor
fisubrl
add
shlb
iret
dec
lock
loope
mov
inc
lcall
pop
nop
push
push
jae
push
fcmove
lahf
mov
mov
in
mov
push
jecxz
iret
mov
inc
in
test
pop
jg
cmp
cmp
outsl
add
cmpl
fs
mov
pop
xor
mov
stc
and
inc
lcall
call
sbb
mov
jne
xlat
jmp
cmp
add
lds
ja
imul
mov
or
lcall
jmp
mov
jne
flds
arpl
and
inc
mov
sub
decl
bnd
push
je
stos
sbbb
and
movsb
sbb
in
add
lods
jl
dec
mov
sub
mov
lahf
cli
mov
flds
mov
mov
xchg
mov
andb
sbb
xchg
push
dec
push
incl
stos
sbb
and
mov
jl
dec
popa
scas
xchg
inc
xchg
sbb
incl
xor
sahf
xor
ss
sbb
push
dec
jb
cld
pop
add
idivl
movsb
and
sub
jne
sub
idivb
loop
sub
cmp
sbb
daa
jl
dec
scas
orl
or
outsl
call
shlb
lods
jo
icebp
ret
fcoml
mov
loopne
orl
pop
push
dec
lret
add
insb
sahf
sti
jp
adc
push
dec
aaa
out
adcl
pop
iret
call
mov
jg
mov
push
cmpsb
lahf
or
xchg
cs
cmp
xchg
hlt
jg
sub
adc
loop
cmp
sbb
rcrb
jae
imul
aaa
lods
js
cmp
inc
popa
add
dec
pcmpeqw
cli
mov
pop
sbb
dec
jg
and
pop
push
nop
mov
pop
jecxz
out
dec
inc
repnz
int
mov
cmp
jae
stos
xchg
test
movsb
int
data16
maskmovq
imull
cmp
push
insl
repz
push
fcomip
aad
push
pop
inc
aas
nop
jmp
fdivp
jle
fmuls
rol
jbe
inc
cmpl
lcall
adc
pop
add
push
arpl
addb
mov
dec
in
popa
or
jmp
das
pop
cmp
nop
test
sub
push
adc
push
or
imul
cmpb
add
inc
shr
imul
mov
dec
mov
or
mov
decl
push
inc
sbb
int
push
cmc
push
push
fcmovnbe
faddl
icebp
mov
add
mov
fwait
cld
xchg
idivb
fmuls
inc
xchg
cltd
cmc
dec
lods
clc
inc
mov
jg
mov
in
xor
iret
popf
xor
cmpsl
aas
decl
loope
pop
ja
adc
je
out
jge
sbb
cmp
fdivrs
decl
loope
pusha
fninit
dec
lods
fcoms
xor
clc
jmp
inc
lret
call
fcomip
scas
pop
and
mov
sti
in
imul
pushf
pop
mov
dec
jg
ljmp
push
sbb
arpl
andb
sub
clc
xor
pop
cmp
mov
jle
inc
adc
mov
cltd
jno
mov
jmp
inc
cmp
push
xchg
leave
mov
popl
icebp
xchg
movsb
incl
mov
je
sub
cltd
mov
inc
xor
and
adc
pop
clc
call
loopne
dec
mov
mov
cmpsb
adc
mov
dec
mov
outsl
lock
push
dec
mov
xchg
mov
adc
xchg
mov
mov
loopne
or
pushf
sub
pop
xchg
push
je
sbb
rol
or
rclb
mov
stos
xor
int3
pop
push
lock
ljmp
call
incl
pop
les
sub
sbb
std
dec
or
mov
mov
repnz
outsl
add
mov
subb
jg
lea
arpl
mov
fxch
pop
dec
mov
fwait
ljmp
call
pop
cmp
clc
xor
aam
push
sbb
ret
or
pushf
pop
rclb
pushl
dec
cld
sub
fdivs
fdivs
mov
insb
div
and
mov
fidivrs
test
or
lret
sti
test
fcoms
out
pop
outsb
cmp
sar
jmp
loope
xchg
jnp
cmp
shrl
xor
mov
fcmovnb
addr16
jne
mov
scas
cli
call
cmp
aas
jae
add
cmp
mov
jle
push
push
or
incb
subl
cmpsl
mov
or
xchg
jmp
into
out
push
in
out
fisttps
lret
push
addr16
fs
mov
mov
aas
pusha
cmp
ljmp
and
or
mov
in
lea
xchg
ljmp
leave
adc
fisubrl
push
cs
leave
push
ds
das
pop
aad
aaa
or
inc
pop
sti
paddq
pushl
mov
js
xor
lret
or
out
inc
mov
fisttpll
ss
add
lcall
mov
pushf
jb
push
cmp
sti
mov
push
inc
lret
ss
sbb
sar
mov
ss
xchg
sub
xchg
out
sub
jg
loopw
mov
xor
shr
lcall
xor
fsubrl
mov
lock
and
ja
incl
xchg
mov
int3
cmpsb
mov
mov
mov
cld
ljmp
sub
jno
add
iret
jne
mov
decl
lock
push
ss
sub
test
and
popf
add
jge
pop
adc
sub
mov
pop
jne
xchg
lcall
xchg
sub
outsl
outsb
in
mov
add
cmp
movsl
aad
incl
mov
mov
es
lret
sti
loope
sbb
push
mov
rorb
mov
inc
fcomip
jmp
das
sub
inc
xchg
xor
bound
mov
mov
xor
insb
imul
decl
arpl
sub
push
dec
pop
je
stos
mov
dec
or
xchg
sub
test
out
fcoml
pop
or
pop
ss
jno
adc
ret
ror
pop
dec
inc
ret
adc
inc
decl
pop
orl
insb
adc
outsl
jne
adc
repnz
adc
lcall
mov
mov
sbb
jbe
in
mov
mov
push
pop
lcall
adc
rcrl
loopne
and
mov
fs
xchg
pop
mov
cmp
lock
lcall
imul
jb
iret
adc
ds
mov
idiv
decl
cwtl
xchg
mov
stos
mov
in
xchg
and
sub
call
sub
inc
ret
fistps
cli
and
ss
mov
popa
adc
and
decl
fsubl
and
xor
or
sahf
push
movl
call
arpl
pop
lds
mov
sbb
pop
movsb
jp
cmp
in
daa
mov
pushl
and
push
popf
pop
insl
xchg
call
add
xchg
jb
mov
and
loopne
adc
fists
add
mull
jp
inc
insl
mov
sub
mov
movsl
mov
in
lret
dec
lds
pop
cmc
bound
mov
cwtl
xor
fs
scas
hlt
mov
repz
outsl
out
decl
adc
dec
shlb
stc
dec
dec
bnd
xchg
aaa
ret
pop
icebp
ljmp
xor
std
jge
stc
push
pop
sar
insl
xor
xor
push
push
shll
sub
int3
call
sahf
dec
in
fwait
leave
into
push
dec
nop
addr16
decl
dec
scas
shl
pop
addl
xor
ss
sbb
popa
or
fildll
xor
sbb
push
sahf
bound
enter
jae
xor
incl
mov
inc
pop
lret
mov
mov
sub
xchg
and
test
cmpsb
pop
std
push
cmp
scas
pushl
jno
mov
sub
fisubl
call
cmpsl
iret
jmp
test
sbbl
cmc
out
nop
xchg
ljmp
fiaddl
mov
jle
ds
int
shll
lds
inc
or
insl
sbb
jmp
cmp
loope
mov
xor
adc
pop
push
repnz
jne
imul
in
fdivrs
iret
inc
call
cmp
enter
movsl
push
jge
nop
adc
cmpsb
add
dec
cld
xchg
mov
and
aaa
js
lahf
jbe
sahf
ror
mov
rcrb
call
sbb
mov
mov
hlt
push
test
xor
push
jg
mov
pushf
iret
sbb
sbbb
pop
movsl
xlat
out
prefetch
or
sbb
cmp
push
int
test
aad
push
dec
inc
sbb
fcomip
pop
sbb
rcrb
mov
popa
mov
dec
xorb
jne
add
inc
pusha
enter
nop
jo
mov
in
jo
sub
jmp
push
lock
hlt
pop
jbe
out
stos
out
push
cmp
cli
call
sub
scas
mov
dec
jmp
sahf
out
nop
sbb
lcall
enter
mov
dec
fs
pop
push
jl
sahf
cmp
ljmp
inc
fadd
or
push
xchg
cmp
adc
sahf
lock
call
xor
add
cli
cmp
pop
xchg
jne
pop
mov
jo
loopne
lock
in
push
dec
jg
call
cwtl
dec
sahf
fisubs
and
fwait
rcrb
add
dec
or
out
pop
fidivrl
jb
lahf
enter
jno
das
cli
call
pop
cmpsl
push
push
dec
stc
dec
push
pop
mulb
sbb
divb
cld
fdivr
jle
test
nop
add
jbe
mov
or
imul
mov
outsl
cmp
add
jmp
jg
dec
mov
daa
jg
out
dec
js
sbb
sbb
lahf
aad
and
or
in
outsb
pop
xchg
in
jg
add
xor
cltd
lcall
inc
adc
jno
aaa
aam
scas
sub
inc
adc
imul
xor
xchg
aaa
std
inc
out
jo
call
dec
cmp
adc
push
mov
stos
scas
fwait
dec
mov
insb
icebp
call
mov
ljmp
mov
xor
xchg
adc
mov
and
xchg
ljmp
ljmp
xor
dec
lods
mov
sbb
out
lea
pop
and
mov
imul
pop
lcall
jbe
js
shll
pop
icebp
pushl
ja
js
gs
aam
pop
std
outsb
xchg
insb
cli
inc
dec
aaa
add
sarl
je
jb
gs
pop
scas
iret
arpl
mov
xor
cmp
lds
xor
mov
xlat
in
xchg
add
ds
in
psubusw
incl
call
cltd
lock
sub
push
mov
push
pop
in
mov
ljmp
push
fldl
nop
rcll
stos
jae
mov
adc
mov
aad
fbld
pop
or
pop
mov
mov
pop
jl
mov
in
ljmp
inc
jae
inc
jmp
push
pushf
ret
cmp
pushf
xchg
mov
sub
xchg
stc
jle
inc
sbb
mov
mov
mov
lods
arpl
mov
sub
mov
cmp
sbb
sbb
into
out
mov
adcb
push
in
cmpsb
notl
std
push
cmp
fwait
ja
xchg
and
loope
lahf
ds
popf
cs
into
arpl
mov
call
in
popa
cld
sub
outsl
rcr
xlat
insl
cltd
cmovp
outsb
xor
cmp
ljmp
pushl
lret
dec
adc
pop
mov
into
inc
xchg
xor
pop
pop
enter
lcall
inc
ror
dec
jge
ds
cli
mov
loope
subb
sbb
mov
or
pushl
nop
jl
nop
pop
gs
or
and
adc
test
stc
movsb
push
dec
inc
sahf
fmul
mov
ljmp
cmp
ljmp
stos
xchg
adc
mov
ljmp
pushl
pop
jo
pusha
popa
or
scas
mov
inc
mov
cli
push
and
and
ljmp
out
iret
pop
mov
pusha
push
loop
std
cmp
and
jne
imul
incl
call
jb
aaa
movsb
out
jl
add
lock
dec
cmp
push
shlb
cld
xchg
mov
mov
cmpsl
lods
jmp
shlb
dec
mov
stos
in
sti
out
sbb
call
in
pop
jp
clc
sbb
mov
sbb
and
fadds
dec
cli
test
pushl
call
jnp
aam
adc
and
or
sub
call
sbb
dec
mov
decl
push
jae
add
push
outsl
test
xchg
xchg
les
pop
leave
test
inc
push
pop
stos
incl
jg
lods
movsb
inc
pop
cmp
mov
scas
insb
jne
sub
mov
adc
idivb
lcall
mul
or
loop
xor
mov
inc
repz
sub
sbb
mov
sbb
inc
jno
sub
sti
sbb
mov
aas
mov
inc
lock
jb
pusha
lds
bsr
mov
inc
call
mov
nop
add
xor
pushl
push
cwtl
jge
push
add
aam
sub
test
sbb
sub
jnp
or
inc
push
ljmp
pusha
movsl
sub
outsl
xchg
movswl
sub
dec
and
mov
pop
xor
adc
jne
fs
int3
push
pop
add
pushl
testl
out
inc
lods
mov
inc
sbb
push
test
push
jmp
sbb
mov
lcall
sbb
ljmp
addr16
jmp
dec
outsl
std
cld
sub
inc
call
jmp
fs
xchg
lods
fs
das
cli
aam
or
sti
cmp
pop
xchg
cmp
lods
out
push
or
in
decl
and
imul
xchg
insb
jo
and
sbb
out
loop
pushl
sbb
jecxz
fildll
insb
inc
repnz
dec
loopne
and
mov
ljmp
stc
outsw
in
adc
and
jne
ret
lock
sub
rcll
jmp
jns
test
orl
aam
cmp
imul
not
les
mov
ljmp
shrb
push
add
outsl
mov
insb
or
ret
add
iret
inc
mov
and
sbb
mov
xchg
dec
jg
fisttpll
mov
xchg
push
or
or
xchg
std
je
lret
inc
addr16
decl
mov
in
mov
in
jle
fists
inc
mov
into
int3
fiadds
adc
clc
lcall
fsub
data16
scas
addb
shrb
jg
or
lods
push
or
inc
sbb
sub
inc
push
repz
inc
test
sti
cmpsl
lret
push
sub
call
and
jb,pn
push
xor
and
xchg
push
sahf
or
cmp
pop
shrl
jmp
lods
mov
cmp
cwtl
jae
cmp
clc
mov
dec
or
popf
cmp
imul
out
or
xor
xor
push
jbe,pt
icebp
out
push
sub
fdivs
add
xor
stc
cltd
leave
arpl
mov
cld
stos
cmp
decl
fsubrl
dec
adc
jge
aam
jecxz
sub
popf
and
ficomps
cmp
mov
loopne
loopne
jmp
cmp
mov
adc
pop
lds
push
mov
or
xorb
int3
jnp
dec
cmp
fyl2x
popf
add
clc
push
lcall
outsb
sbb
movntps
mov
mulb
push
inc
mov
cwtl
pop
in
es
aad
jmp
push
addb
call
mov
xchg
xchg
cwtl
push
xchg
bound
mov
test
jmp
je
arpl
or
int
adc
lcall
pop
and
mov
dec
test
push
add
xchg
mov
dec
repz
push
les
xchg
jno
faddl
dec
push
dec
leave
jmp
push
in
pushf
xlat
decl
pop
lret
sub
lcall
mov
lods
loopne
mov
push
push
jmp
repz
mov
mov
stc
testl
incl
dec
or
and
imul
xor
inc
and
int
out
sbb
and
lcall
mov
xor
sahf
ror
es
add
xchg
std
xchg
test
inc
enter
xchg
ss
cmp
int3
cmpsl
pop
out
into
fcompl
mov
jmp
dec
pop
sub
xchg
enter
enter
dec
xchg
movups
push
ljmp
push
add
stos
stc
imulb
adc
or
inc
dec
out
ss
outsb
mov
ret
shll
pop
cmpsb
pop
sbb
xorb
je
pmuludq
std
call
popa
dec
xchg
xchg
mov
aaa
mov
push
std
shr
mov
jne
outsb
ret
es
mov
mov
shlb
decl
pop
lock
mov
dec
js
gs
jmp
cmc
push
out
js
je
call
je
jmp
scas
xchg
inc
xchg
inc
dec
mov
insb
adc
mov
aas
stos
cmc
outsl
fildll
cld
stc
jno
in
dec
xor
xchg
jecxz
jge
and
loopne
add
ret
repz
fiadds
pop
or
and
push
and
add
push
repz
sub
imul
xchg
mov
ja
pushl
mov
add
or
mov
cmp
mov
pusha
cmp
dec
pushf
test
mov
xchg
loope
out
lds
xor
out
and
test
stc
sahf
push
jp
xchg
cmpsb
mov
cmp
push
rolb
xchg
fstps
int
mov
scas
cwtl
dec
call
sti
in
insl
jmp
pushf
lods
mov
je
push
mov
xchg
mov
call
icebp
in
imul
cli
es
fs
aas
add
lret
clc
jne
cmp
sbb
clc
decl
add
inc
fldcw
mov
mov
lods
out
ds
mov
fistpl
loopne
punpckhdq
and
call
scas
mov
mov
lock
ljmp
aaa
xchg
dec
in
test
push
mov
outsb
jno
jl
pop
imul
mov
fisubrl
rolb
into
lock
lcall
xchg
add
mov
cmpsb
out
ret
mov
ljmp
sbb
pop
dec
pop
scas
lcall
cmp
std
inc
test
iret
xchg
not
pop
gs
daa
imul
incl
sub
jnp
and
cmc
adc
cmpsb
mov
fcomp
jl
cmp
orl
pop
loopne
bound
cmpsb
les
sub
pusha
enter
xor
call
pop
scas
jle
dec
lret
ret
rorb
or
mov
imul
fimull
repz
decl
xlat
rcrl
or
mov
ja
insb
shrb
sub
test
xchg
xor
ljmp
gs
clc
mov
xor
pop
movsb
sbb
cmp
jne
push
fwait
mov
fs
popl
hlt
sub
call
mov
roll
sahf
movsb
idivb
je
sbb
in
loopne
xchg
pop
jp
insb
inc
insb
push
pop
into
dec
lods
xchg
clc
cmpsb
leave
push
dec
test
loopne
xorl
push
lret
jne
das
mov
dec
add
mov
mov
ret
iret
or
jnp
dec
into
cmp
adc
inc
or
sub
aam
jns
pushl
xor
sbb
inc
shlb
sbb
addr16
mov
jb
enter
call
shl
xchg
or
jns
dec
and
xor
pop
fldenv
xchg
push
das
push
dec
lea
add
bnd
shlb
popa
call
sbb
fwait
add
cmpl
test
daa
mov
mov
fisubrs
push
push
or
pop
sub
loope
test
cld
or
repnz
push
sbb
mov
aas
dec
pop
std
out
jge
aam
enter
or
dec
inc
push
xor
push
inc
in
jns
mov
std
ja
push
cltd
xchg
adc
xchg
sahf
push
push
pop
cli
xor
fidivl
fimuls
ljmp
addr16
dec
fwait
and
jb
mov
sbb
outsb
aad
pop
incl
jo
jge
arpl
jo
sub
jmp
xchg
sbb
push
fwait
divl
mov
and
leave
dec
pushl
push
cmp
jl
lds
or
inc
mov
nop
out
or
outsl
xor
call
jns
xchg
push
dec
pop
ss
mov
mov
push
imul
cmp
out
in
ja
sbb
cli
cli
lcall
mov
pushl
andb
jge
scas
aad
cmc
mov
loop
jo
leave
mov
pushl
add
pop
adc
or
bound
mov
call
add
mov
jp
mov
jmp
mov
pop
pushl
loope
mov
fcomi
mov
push
fildll
inc
mov
mov
cmpsl
imul
es
decl
insl
push
incl
lcall
test
out
and
fcompl
je
mov
xchg
mov
ljmp
leave
xor
mov
leave
fadds
push
inc
stc
into
lods
and
repnz
inc
xchg
repz
sub
sti
ds
pop
call
lods
cmc
jp
outsb
push
pop
test
es
pop
or
sar
jmp
mov
in
aas
icebp
adc
data16
push
hlt
push
mov
lcall
ss
pop
xchg
and
sbb
lcall
inc
mov
mov
jp
mov
scas
test
adc
jae
jo
jmp
jmp
inc
frstor
subl
mov
xor
cs
xor
mov
sub
mov
lret
cmp
jg
sbb
push
fimull
jbe
xchg
mov
adc
dec
std
loopne
cmp
fildl
lret
pop
sbb
movsl
aam
pusha
mov
outsb
jmp
iret
adc
fcoms
mov
into
dec
loop
lds
cmc
loope
in
int
shl
movsl
jmp
stc
mov
cmc
lret
loop
hlt
movsb
mov
sub
out
inc
mov
and
mov
cld
lock
ljmp
jo
jmp
and
pop
mov
pop
xchg
or
fcoml
hlt
outsb
ret
cltd
sub
rol
mov
sub
adc
in
imull
mov
mov
xchg
lcall
pop
inc
aad
push
pop
dec
inc
xchg
in
outsl
div
pop
les
fwait
ss
add
shlb
xlat
mov
shlb
mov
mov
js
and
mov
xchg
lcall
push
sbb
stc
mov
add
pop
push
mov
cli
pushf
and
hlt
xchg
jmp
jle
push
mov
mov
int3
daa
out
mov
xchg
sbb
adc
lods
jns
mov
ds
clc
or
pushl
push
imul
ret
in
popl
xor
jge
jl
ljmp
ljmp
rorb
idiv
fwait
and
dec
idivb
fwait
inc
out
sar
call
test
mov
btc
pop
mov
mov
test
sahf
scas
pop
nop
cmp
call
jge
mov
add
in
mov
xchg
mov
pop
movsb
scas
dec
cmp
enter
mov
rorb
imul
mov
inc
ret
movsl
lods
push
popf
mov
ljmp
jp
cmc
mov
lret
mov
mov
dec
fcmovnbe
dec
scas
mov
jg
ljmp
sbb
rorb
roll
lods
pop
xchg
xor
gs
cwtl
xor
cltd
and
adc
or
xor
inc
sbb
add
rolb
fwait
aad
mov
jmp
mov
sbb
pop
stc
pop
inc
movsl
jp
mov
ret
jecxz
sub
lea
incl
add
fwait
data16
lcall
mov
jnp
lods
lret
push
or
jg
data16
out
or
add
cmpsb
shlb
mov
dec
mov
shlb
sub
push
mov
repz
pop
iret
movsb
inc
hlt
js
adc
hlt
mov
lcall
adc
push
roll
enter
lods
ffreep
movsl
jae
or
lods
lret
mov
jge
xor
outsl
xchg
pop
pop
in
inc
inc
mov
cwtl
mov
adc
sahf
adc
incl
test
pop
jle
sub
insl
and
xor
pop
xchg
sbb
xlat
mov
incl
adc
mov
movsb
pop
jge
push
clc
lcall
pop
inc
xor
add
add
ds
gs
cld
push
fwait
dec
jmp
repnz
arpl
call
xchg
mov
out
iret
aam
mov
xor
push
push
stos
and
cmp
mov
repnz
adc
sub
ds
inc
in
add
std
push
stos
lods
pop
jg
scas
stos
call
cmp
push
scas
rcr
mov
arpl
outsl
subl
push
pop
mov
and
adc
push
sub
sbb
mov
add
decl
rcll
sub
lret
and
mov
stos
inc
mov
cmc
pop
fs
jmp
loopne
xchg
outsb
popf
movsl
shll
mov
shl
mov
fcomps
incl
cld
or
repnz
out
test
stos
ja
fsubr
jbe
neg
jmp
pushf
jnp
sub
shrl
out
lods
sub
xlat
lods
lcall
jne
xchg
cmp
test
and
jbe
dec
imul
push
pop
and
xchg
push
jno
fcmovnbe
xchg
xchg
in
ja
dec
xchg
jp
push
pop
add
iret
dec
push
lahf
in
rcr
jecxz
ljmp
mov
gs
stc
mov
inc
nop
movsb
and
aaa
test
or
xchg
out
ljmp
mov
dec
fs
sbb
push
faddp
fld
xlat
lret
ret
aas
sbb
mov
jmp
jle
adc
loop
sbb
mov
add
jmp
lret
imul
sub
pop
dec
jnp
test
ret
or
ljmp
mov
jns
adc
shr
pavgw
iret
hlt
inc
cmpsl
cmpsb
out
mov
sub
ja
outsl
cmp
decl
inc
pop
repnz
or
lret
inc
pop
cs
pop
outsl
lcall
insl
std
mov
aaa
std
lret
jp
out
cwtl
inc
andl
mov
imul
and
lcall
inc
add
xor
jmp
dec
cmp
push
adc
insl
aaa
scas
xor
push
jp
fsts
movsl
cwtl
jae
clc
jae
stos
sarl
repz
repz
cld
lret
jecxz
push
sub
mov
outsl
lcall
and
and
cltd
jb
dec
loopne
lcall
mov
std
ljmp
ljmp
push
sub
clc
je
pop
subb
xchg
and
mov
icebp
cmpsb
stos
xor
mov
fmull
and
pop
test
stos
mov
ljmp
stc
push
in
xchg
sbb
jmp
iret
xchg
mov
loop
inc
cmp
clc
cmp
mov
aad
fstpt
orl
int3
sbb
je
ret
ss
ljmp
xlat
clc
test
jne
scas
js
jmp
mov
add
mov
push
add
jecxz
daa
arpl
sbb
sub
int
add
call
mov
mov
mov
out
inc
mov
dec
push
xchg
dec
mov
pop
xchg
ret
dec
stos
ljmp
push
inc
mul
mov
mov
jo
mov
mov
add
add
push
pop
das
sbb
jecxz
cmp
xadd
adc
cli
inc
bound
cmp
dec
cwtl
mov
out
ds
out
pushl
orl
test
pop
mov
ss
fcos
decl
pop
dec
pop
aaa
popa
lods
mov
lahf
cmp
and
push
negl
femms
adc
orl
mov
in
jg
loop
jb
mov
jg
mov
jecxz
push
loopne
mov
addl
sbb
xor
roll
pushl
fdiv
sahf
mov
jmp
or
and
mov
dec
push
fdivr
jmp
sub
jg
pop
push
inc
mov
inc
iret
lcall
insl
xchg
sub
out
xor
ljmp
push
popa
mov
and
movsl
shl
add
dec
adc
imul
ljmp
mov
or
mov
mov
arpl
stos
daa
jb
cwtl
bound
jecxz
outsl
adcb
cmpsb
lock
jbe
inc
pop
add
adc
push
test
popf
and
and
pushf
pushl
jbe
pop
and
sbb
mov
out
mov
xchg
ret
js
das
mov
cli
lcall
stos
pop
sbb
leave
mov
clc
and
mov
pop
call
mov
xchg
ljmp
ss
imul
dec
sbb
sti
pop
add
loopne
adc
add
push
repnz
fisttpl
aad
jmp
outsl
jb
mov
xor
out
or
xchg
fdivrs
sbb
lcall
push
sbbl
aas
dec
mov
insb
inc
push
test
jne
out
loop
fnstenv
mov
lcall
das
stc
ds
pop
data16
out
pop
jg
xchg
ja
fidivs
mov
lds
or
ret
stos
decl
and
lods
jle
out
ja
lods
mov
subb
mov
jg
push
sti
daa
inc
or
bnd
lahf
push
push
test
imul
mov
jg
sub
jge
dec
outsb
test
dec
bound
lret
jno
sti
popa
or
shl
push
mov
decl
xchg
std
add
outsb
outsb
xchg
daa
vrcpss
rcrb
lahf
sar
jg
mov
and
sub
or
mov
andl
inc
clc
sbb
cli
jmp
mov
mov
inc
adc
lcall
mov
incl
hlt
movsb
sub
mov
test
sbb
or
sbb
sub
pop
mov
sbbl
ss
fdiv
movsl
cmc
cli
pop
gs
pop
fs
mov
push
or
stos
call
nop
ja
es
fists
adc
cmc
push
dec
add
lcall
sbb
cmp
mov
sbb
ljmp
pop
jg
pop
pushf
dec
lcall
jle
call
mov
orw
xor
mov
push
mov
test
mov
ljmp
insl
bts
push
push
fs
test
cmp
sarl
notb
and
add
push
cmpsl
sub
sbb
lret
jg
out
add
ljmp
out
xchg
shlb
mov
adc
mov
jmp
leave
jne
test
xchg
aad
call
loopne
fnstsw
jo
lret
fstpt
jae
push
mov
popf
and
aaa
jns
inc
fdivrl
push
bound
pusha
loopne
pushl
push
cmp
cmp
lret
dec
das
lds
test
fwait
outsb
test
jmp
mov
ja
jae
inc
jo
sbb
add
xchg
and
hlt
test
incl
inc
cmp
and
cmp
rcrb
inc
adc
xchg
in
push
out
ja
cmc
imul
push
inc
cwtl
push
jae
test
iret
push
inc
out
dec
ret
jbe
jno
sub
aad
cli
pop
test
aaa
lock
adc
or
enter
pop
or
pop
sar
push
insb
jmp
jecxz
shl
cmp
pop
aaa
and
pop
sahf
les
stos
scas
add
add
decl
or
out
lock
outsb
push
jge
leave
xchg
push
mov
aas
push
sub
incl
js
and
fsubl
imul
pop
out
imul
lret
mov
lcall
sub
pop
scas
push
dec
mov
cltd
jnp
push
out
push
ds
cli
inc
xchg
sarb
insl
jmp
adc
push
cmp
arpl
fimull
jecxz
mov
add
jg
dec
mov
fcmovb
cmp
cmp
mov
and
dec
inc
sbb
mov
pop
sahf
mov
adc
call
pop
dec
inc
mov
jl
repnz
jp
enter
xchg
pop
push
scas
das
mov
push
call
xchg
fs
mov
loopne
aas
xor
mov
incl
into
xor
inc
sarl
mov
dec
out
cmpsl
out
mov
add
cmpsb
inc
add
dec
movsb
mov
fisubs
sub
stos
int
lcall
jmp
shll
sbb
cmpsb
rorl
push
mov
lret
xchg
push
xchg
dec
sbb
push
call
xchg
inc
mov
testb
repnz
lcall
insb
popa
push
js
test
mov
movq
lock
pushf
xchg
mov
std
mov
pop
loopne
and
enter
out
les
lret
ds
fcoml
mov
js
aam
fisubrs
pop
sbb
test
pop
xchg
push
les
inc
mov
call
sarl
lods
loope
testb
jno
fistpl
dec
mov
scas
inc
add
xchg
or
jmp
pop
sub
push
repz
lds
pushl
inc
in
adc
fstpt
rolb
pop
push
insb
shr
ljmp
sti
xchg
push
pop
incb
mov
push
ja
xor
sub
push
lret
rorl
mov
inc
jns
xor
mov
ljmp
lods
sub
jg
pushf
xor
xlat
add
imul
cmp
shrb
and
or
cld
scas
scas
lahf
xor
fwait
movsl
cmp
push
test
jnp
jno
mov
mov
push
add
aas
mov
jnp
movsb
ds
cmp
cmp
cli
inc
pop
je
popf
jmp
inc
push
jne
divl
daa
and
sbb
leave
jnp
mov
test
popa
es
xchg
subb
decl
subl
inc
fwait
push
ret
pop
mov
xor
pop
mov
jmp
cmp
iret
fs
lcall
or
pop
cmp
bound
push
lods
sti
insb
sahf
inc
loopne
or
faddl
int3
popa
pop
cli
jae
mov
jmp
hlt
inc
or
inc
out
ds
push
add
mov
xchg
inc
popa
lcall
push
inc
mov
sbb
pop
nop
insl
addw
sbb
cld
sbb
daa
cltd
and
pop
ljmp
in
add
into
sti
inc
cmc
ret
clc
push
xchg
movsb
xchg
mov
push
sti
shlb
lea
lret
cwtl
add
jmp
outsb
jo
jb
lods
xchg
sbb
aaa
test
lea
addb
ror
pop
xor
and
clc
ljmp
mulb
or
mov
sub
xorl
sub
dec
pushf
decl
or
pop
push
push
cwtl
xchg
cltd
movsl
sbb
call
and
pop
sbb
popa
aad
pop
jae
dec
dec
push
std
pop
push
jg
insl
std
jo
mov
test
fdiv
inc
clc
cli
ds
pushl
subl
je
push
adc
addr16
or
mov
sbb
jle
into
cwtl
xor
shlb
pop
mov
fisttps
xorl
callw
lods
cmpsb
icebp
cmp
int3
fisubl
xor
ret
adc
xor
imul
filds
mov
and
inc
imul
adc
or
out
ljmp
cli
rcll
lds
sub
mov
inc
mov
adc
lcall
sbb
pop
inc
dec
lret
popf
pop
mov
sub
push
test
sub
and
das
aam
decl
xlat
aam
je
jnp
add
lret
sub
roll
xchg
and
call
in
cmpsl
adc
rcll
mov
inc
pusha
sahf
mov
and
adc
lcall
stos
push
pop
lods
outsb
mov
pop
sbb
mov
cs
mov
sub
fwait
out
js
xor
xchg
xchg
sub
imul
mov
or
add
aad
push
push
in
sarl
add
aam
fbld
idivb
adc
xchg
pop
out
hlt
jle
stos
cmp
sti
push
dec
sub
xor
jl
leave
cmpsb
repz
or
mov
xchg
inc
pop
orl
orb
pop
orl
into
add
xor
push
adc
call
lret
dec
or
push
cmp
pop
aas
das
ficompl
cmp
in
jp
cs
cmp
mov
ljmp
mov
or
sbb
stos
mov
and
sub
xchg
adc
decl
mov
add
jae
repnz
inc
andl
incl
inc
push
sub
or
ret
movsl
and
movsb
xchg
sbb
int3
das
jnp
sub
ljmp
fidivrl
test
icebp
mov
imul
sbb
cld
adc
xor
popa
mov
cs
ljmp
arpl
ret
jbe
and
lds
lea
inc
imul
test
in
stos
fildll
lcall
cmpl
ret
lods
mov
dec
jb
pop
adc
rcll
ljmp
sub
subb
hlt
repz
test
xor
push
lcall
insl
scas
into
decl
das
daa
shlb
xchg
xor
cs
dec
sbb
leave
loopne
jmp
push
incb
decl
andb
aad
mov
lahf
push
jb
or
ret
sub
imul
jge
fsubl
aaa
enter
and
out
pusha
inc
lahf
pop
jae
xchg
imul
adcb
enter
in
stos
mov
mov
sub
out
loopne
lcall
daa
push
daa
rclb
or
ljmp
aam
xchg
mov
cli
bound
cli
mov
cs
jno
dec
in
fwait
jmp
cli
jae
daa
mov
and
or
mov
repnz
fisubrs
sbb
jmp
xor
sbb
aam
outsb
movl
decl
add
xor
cmp
loop
decl
sub
andb
xlat
adc
popf
loopne
mov
mov
sti
lea
scas
js
adc
lea
imul
sahf
imul
outsb
iret
push
push
repnz
cmpsl
shlb
ror
pop
push
mov
gs
inc
int3
addr16
sbb
decb
imul
jmp
aas
cmp
clc
xor
out
push
mov
aas
cld
fwait
mov
dec
shrb
addb
fsubr
or
jnp
pop
outsl
nop
adc
or
mov
cld
mov
aaa
imul
or
pop
sub
cmp
ret
inc
loop
pop
push
dec
out
inc
xor
ret
jp
and
sbb
cmc
lcall
cmpsb
stos
fiaddl
mov
pushf
arpl
xor
popf
pop
int3
mov
faddl
repz
ljmp
jg
js
test
adc
jae
mov
pop
mov
add
cmp
in
popf
dec
jne
popa
jmp
sbb
jns
dec
loop
sub
sbb
dec
pop
cld
mov
cld
shr
lcall
cmpsl
bound
jg
cmp
sub
sbb
adc
inc
add
cmc
call
pushl
ljmp
movsb
sub
and
xchg
repz
and
bound
pop
mov
out
outsl
mov
or
lea
es
daa
daa
pop
sti
dec
sub
call
mov
data16
repnz
aas
xlat
adc
fistpll
xchg
jmp
mov
jne,pn
imulb
sub
in
incl
or
in
lock
in
xchg
dec
mov
scas
enter
dec
and
incl
imul
sbb
xchg
ljmp
loope
add
je
xchg
mov
in
subb
sbb
push
sub
outsb
sar
mov
xchg
mov
cltd
data16
xchg
lea
inc
cmc
mov
sahf
mov
jmp
rorb
mov
cmp
out
in
dec
inc
xchg
lods
cmp
call
rclb
push
cld
pop
xlat
int3
pop
out
fwait
in
test
int3
adc
leave
or
mov
movsb
pop
and
lods
mov
pop
ljmp
repz
cmp
mov
dec
loope
call
jle
adc
idivb
jno
nop
stos
divb
jp
ficoms
leave
aaa
push
sub
loopne
and
movaps
std
sbbb
mov
jnp
incl
xchg
pop
in
pop
out
ljmp
std
addr16
and
push
sbb
inc
inc
cmp
cmp
mull
adc
scas
cwtl
in
sbb
das
cli
js
sbb
decl
cmp
insb
or
adc
aaa
call
int3
dec
adc
incl
mov
xor
xchg
add
jbe
cli
aad
push
add
jo
addr16
dec
push
sbb
cmp
daa
nop
out
sarb
popa
jl
inc
xchg
push
lcall
pop
int
mov
xchg
fcompl
and
movsb
insb
cs
aam
jg
or
pusha
iret
dec
mov
ss
sub
xchg
push
push
jo
incl
pop
cmp
or
stos
fs
jl
stos
or
xchg
imul
ljmp
jmp
jl
stc
jnp
jmp
lret
add
out
clc
mov
dec
add
ss
cmp
lcall
outsb
push
xchg
pop
call
lods
mov
pushf
xor
in
repnz
insb
mov
push
jne
lcall
cltd
fld
cmp
mov
pop
or
add
pop
scas
imul
incl
cltd
jmp
pop
sub
out
dec
xchg
roll
sti
lock
in
out
es
push
orl
bnd
lock
sahf
negb
lahf
shlb
ljmp
clc
lret
pop
jmp
outsl
das
jecxz
jle
incl
cmp
mov
xor
sbb
jnp
call
mov
and
mov
pop
call
lock
jbe
jnp
mov
mov
outsl
xchg
iret
mov
xchg
iret
push
popf
adc
std
jmp
call
or
imul
lret
mov
sub
jae
pop
mov
data16
and
mov
in
gs
pop
xor
jl
inc
jb
mov
cwtl
jmp
inc
jmp
and
test
dec
enter
sub
scas
out
xchg
mov
push
push
js
gs
imul
and
mov
jle
pushl
mov
sbb
jbe
sti
xor
cwtl
out
push
or
lods
imul
fmulp
mov
inc
aaa
lcall
push
fidivrs
sbb
cmpsb
xor
bound
lea
cltd
adc
test
push
bound
shrl
gs
jns
xor
push
nop
in
movsb
adc
cld
pop
arpl
stc
cltd
adc
repnz
testl
pushl
enter
js
jne
cmp
mov
pop
sti
pop
dec
mov
nop
cmp
lcall
sarb
in
inc
mov
adc
push
ret
dec
mov
adc
lret
nop
mov
mov
dec
push
mov
aad
lock
push
jae
std
pop
pusha
sbb
cld
incl
sbb
lods
or
push
sahf
cmp
pop
ret
shll
mov
je
fnsave
notb
fstl
mov
jmp
or
inc
pop
mov
add
mov
fistpll
rcl
sbb
sbb
js
movsl
repnz
call
dec
test
cltd
ljmp
decl
mov
imul
fcmovu
inc
pushf
out
lret
out
jno
int
incl
sub
ss
xchg
sub
inc
fistpl
mov
mov
fptan
icebp
adc
clc
ljmp
pop
cwtl
push
inc
fwait
dec
xor
ss
shll
add
xchg
inc
xchg
je
adc
mov
mov
call
jl
push
dec
lret
push
push
inc
dec
call
adc
loop
jp
idiv
pushl
shl
addr16
imul
push
cwtl
js
push
xchg
xchg
js
lret
stos
mov
call
xchg
gs
adc
fwait
sbb
mov
std
ds
int
aad
mov
jns
rcl
sub
jae
scas
xor
adc
repz
fwait
incl
cmp
fistpll
cmc
pop
pop
rcr
pop
lahf
inc
daa
inc
jge
and
loop
jle
adc
xor
sbb
push
bound
sub
mov
int3
mov
adc
sbb
xchg
int
xchg
icebp
pop
pop
adc
out
repz
stos
icebp
movntq
sti
inc
dec
xchg
incl
pop
push
aas
out
int3
push
and
aaa
scas
xchg
cltd
cmp
decl
jno
clc
cli
repz
push
push
stc
outsl
mov
negb
mov
xchg
push
add
adc
outsl
lcall
xor
pop
mov
je
out
xchg
or
sbb
sar
pop
int
incl
iret
pop
dec
popa
xchg
dec
mov
dec
ss
jmp
lcall
jae
cmp
or
call
lret
adc
jb
cld
or
test
and
dec
int
jmp
movsb
cmp
inc
dec
push
or
mov
lahf
lock
insl
push
and
jns
gs
xchg
mov
add
lret
jp
fsubl
out
mov
test
pop
enter
mov
mov
psllq
and
pop
ljmp
sbb
nop
rclb
xchg
mov
mov
cmpsb
mull
lret
dec
cmp
pop
ret
jnp
jbe
inc
push
mov
jp
loopne
jp
adc
and
mov
addr16
in
inc
shlb
or
arpl
adc
jns,pt
or
insl
and
outsb
ljmp
push
xor
sub
leave
pop
add
test
test
mov
sbb
incl
aam
mov
add
sbb
mov
int3
adc
xchg
mov
imul
cld
int
xchg
incb
dec
dec
shlb
mov
jne
cmpsl
cs
std
sahf
and
push
inc
inc
test
mov
lcall
sar
popf
cld
inc
mov
pop
clc
cmpl
loop
mov
mov
and
jmp
pop
mov
xchg
and
sahf
out
sarl
dec
jmp
push
lret
popa
xchg
push
and
in
jnp
mov
movsl
call
test
lret
inc
mov
mov
jge
pop
jmp
shll
push
movsl
mov
and
mov
sahf
sahf
mov
push
lds
andb
decb
jecxz
in
out
fcomip
pusha
ret
mov
jmp
and
test
and
pop
xor
mov
call
cmp
and
in
adcl
pusha
dec
xchg
mov
dec
and
ljmp
mov
in
repnz
mulb
fwait
push
ret
sbb
fs
dec
cld
decl
fiadds
jecxz
ja
fidivrl
cltd
jns
jg
jp
xchg
pop
add
jbe
sbb
cmp
pop
mov
ljmp
pushl
sbb
test
push
lcall
pusha
push
and
adc
test
or
lods
pop
mov
add
mov
loope
leave
inc
out
and
fcomip
ljmp
mov
push
repz
cli
fs
mov
cs
mov
out
cli
adc
or
cwtl
push
sub
or
es
sahf
aam
xchg
sbb
lcall
add
shrl
push
data16
push
lahf
lret
jbe
lret
das
repz
push
pushf
into
out
call
add
mov
in
xchg
dec
jecxz
pop
mov
rcrl
divb
decl
cmp
or
rcrb
dec
test
sbb
add
sub
jg
ljmp
mov
or
es
stc
cld
xchg
and
js
mov
jns
je
decl
mov
ret
mov
les
cmp
pop
dec
add
pop
les
aad
ljmp
sbb
imul
and
push
outsb
jmp
test
jne
aam
js
xchg
push
adc
or
and
pop
cmpsl
sahf
test
sub
rcr
ficomps
push
pop
sub
call
lcall
xor
outsl
xchg
fbstp
icebp
aas
addr16
add
dec
mov
inc
mov
cmp
sbb
imul
popf
fadds
fmulp
addr16
ljmp
cli
mov
xor
jno
or
das
lret
clc
and
mov
adc
std
decl
mov
pop
lret
sub
xchg
sbb
mov
dec
aam
mov
inc
out
dec
push
aad
lds
push
lods
mov
and
aad
cmp
mov
nop
fcomps
jg
fidivs
sbb
sub
push
xchg
int
inc
mov
jp
stos
push
xlat
bound
lds
xor
mov
mov
popf
sub
stos
dec
call
mov
hlt
loop,pn
adc
jg,pn
stos
loope
enter
sbb
jb
cmp
cmpsb
cmc
out
in
pop
add
shrl
ljmp
ss
pop
jg
and
jae
sub
push
xchg
pop
push
bndstx
dec
shll
mov
and
les
jg
mov
rorb
mov
dec
sub
pop
mov
xchg
mov
loop
inc
xor
ljmp
adc
test
mov
cltd
out
roll
icebp
hlt
movsl
aam
out
inc
aam
inc
movb
pushl
test
sbb
dec
inc
les
jmp
fbstp
push
mov
rcr
fldt
lds
outsb
add
stos
mov
lcall
fsubr
and
jbe
fst
mov
mov
test
sub
push
adc
lods
push
adc
lret
bswap
inc
sbb
push
sub
loope
jg
incl
and
test
push
inc
pop
es
push
int
dec
mov
idiv
cmp
adc
sbbl
or
rcll
cli
lods
decl
pop
dec
lock
in
sbb
cltd
add
in
fsubrp
pop
fldenv
xor
cmp
call
mov
and
add
lcall
dec
push
outsb
aaa
adc
jle
clc
ljmp
repnz
daa
mov
sub
push
ljmp
pop
enter
push
leave
mov
or
imull
lret
decl
xchg
lock
or
cs
movsb
push
jns
jb
sub
int3
inc
jle
lcall
inc
ja
jne
mov
aas
sbb
int3
jl
clc
fisubs
decl
mov
mov
push
pop
inc
lcall
aaa
out
popf
mov
mov
out
pop
xor
dec
mov
incl
cmp
pop
into
dec
push
ret
bound
aam
inc
cmpsl
dec
sbb
mov
mov
pop
cmp
in
cltd
stos
ljmp
jo
adc
inc
das
inc
loopne
loope
call
pusha
lea
stos
cmp
or
cld
xor
popa
adc
inc
lcall
and
push
pop
push
sbb
dec
aad
inc
shlb
jnp
jge
call
adc
fimull
xchg
divb
aas
lods
lea
icebp
cmp
js
pushl
int3
jo
dec
or
add
mov
pop
add
mov
data16
sub
dec
cmp
fwait
gs
add
in
jmp
adc
sub
push
shl
jmp
inc
jnp
call
mov
mov
jle
sbb
adc
std
mov
loop
test
dec
out
push
test
imul
test
xlat
cmpsb
mov
mov
call
daa
dec
mov
mov
lret
scas
sbb
xor
dec
sbb
sub
push
decl
aam
pop
xchg
and
nop
cwtl
xchg
push
repz
adcb
cli
xchg
ret
call
rorb
out
xor
push
pop
pop
ss
cltd
push
mov
decl
je
mov
jl
out
imul
js
add
mov
insl
inc
lahf
popf
rcrb
loopne
cmp
lcall
inc
insb
mov
mov
decl
imul
jg
les
mov
imul
pop
fs
mov
mov
jmp
sbb
data16
mov
xchg
cmp
imul
pushl
push
hlt
adc
sar
gs
movsb
lahf
xor
dec
mov
test
into
jge
and
scas
and
clc
pop
call
jmp
jp
popa
repz
adc
mov
insb
jns
icebp
ljmp
inc
lret
xor
fs
das
fisttpll
fildll
int
sbb
mov
pop
or
outsl
cli
call
push
xlat
mov
mov
jmp
js
inc
cmc
pop
add
jg
lcall
pop
arpl
in
inc
cmp
dec
sbb
stc
xor
icebp
jl
les
out
cli
cld
inc
aad
adc
mov
aaa
mov
test
rcrl
mov
decl
cmp
jg
xor
jg
xor
iret
add
cmp
jmp
bound
dec
movsl
adc
mov
sub
cmp
inc
enter
outsb
fs
pushl
or
inc
aaa
xor
cmp
inc
jecxz
sbb
or
rolb
cmp
inc
add
dec
xchg
inc
push
test
ds
mov
decl
nop
sbb
push
cmp
sub
xlat
call
xchg
sbb
mov
decl
mov
lods
mov
lea
clc
and
xor
icebp
lret
or
repz
decl
inc
pusha
loopne
jnp
negb
jle
in
mov
lcall
xor
mov
stos
dec
ret
subb
sub
lcall
adc
add
nop
cmpsb
ljmp
mov
stc
icebp
add
pushl
shrb
mov
xchg
gs
outsl
mov
inc
jo
cli
ja
cmp
js
xchg
or
aas
add
ret
decl
sbb
loop
xor
sbb
ficoms
aad
jno
incl
sbb
pop
adc
sbb
ljmp
mov
fs
adc
sbb
or
mov
cmc
and
sbb
dec
inc
or
movsb
aaa
adc
sbb
adc
cwtl
xor
pushl
xchg
rolb
mov
add
mov
arpl
enter
jmp
les
jp
jecxz
inc
mov
vxorps
cwtl
mov
fistl
add
push
sub
and
mov
imul
stc
mov
push
clc
scas
lcall
and
icebp
in
fsubrl
enter
hlt
aas
or
push
ljmp
out
dec
pop
fwait
outsl
mov
sub
daa
or
sub
mov
inc
out
pop
test
movsb
sbb
add
out
insl
out
add
aas
fstpl
xchg
cmp
in
push
pushf
lods
dec
mov
push
pop
mov
adc
cwtl
mov
ret
xchg
dec
sti
or
incl
sbb
cltd
shl
int3
sti
mov
int
mov
iret
lods
xchg
sub
push
lods
and
fistpll
cmpsl
mov
aam
pop
repnz
test
mov
xor
shrl
jmp
jb
push
xor
mov
mov
scas
mov
insb
fistpl
lcall
inc
lods
jle
in
call
push
add
mov
aaa
mov
jbe
mov
jg
push
jbe
ret
adc
mov
aad
jae,pt
aaa
pop
sbb
outsl
sbb
dec
fcomip
call
add
or
cmp
and
int3
mov
int
ljmp
sbb
movsl
push
cmp
xchg
push
inc
lods
add
jo
jno
cld
outsb
dec
mov
fscale
js
ret
call
jne
popa
pop
sbb
das
jbe
cwtl
inc
popf
ljmp
dec
xor
jmp
cmp
fcos
mov
adc
in
arpl
jns
mov
mov
lcall
add
pop
orb
das
adc
mov
es
pop
mov
pop
aam
cmpsl
ljmp
push
sbb
out
push
outsl
push
lods
mov
leave
gs
jmp
xchg
bound
cmp
or
in
xchg
movsb
pop
insb
std
mov
fldcw
pusha
pushf
sub
and
add
decl
mov
xchg
push
aaa
test
push
dec
xorb
notb
idiv
je
data16
sub
xlat
jecxz
xor
sub
lret
dec
and
jnp
es
mov
out
sti
stos
cmp
fldl
mov
in
jg
mov
mov
inc
std
xchg
sub
mov
jnp
aaa
mov
jmp
testb
and
addr16
das
xchg
ja
call
xor
addl
stc
push
pop
sbb
outsb
adcb
jnp
xor
decl
fdivs
std
nop
and
and
aas
stc
sbb
bound
addr16
mov
fists
jl
mov
ljmp
jp
loopne
fldenv
divb
xlat
dec
scas
stos
scas
call
int3
xchg
seto
jg
cmc
pop
sahf
lods
jmp
gs
das
jp
test
xor
lock
pushf
push
xor
enter
fwait
rorb
jo
into
int
mov
call
pop
pop
mov
or
jle
add
add
or
sub
inc
test
out
add
adc
add
ficompl
xor
cmp
cli
dec
push
pop
rol
pop
pop
jge
mov
jmp
sub
mov
jg
pop
sbb
fcomp
ret
in
and
je
inc
rcll
or
ja
sub
jg
mov
add
outsl
sarb
dec
pop
test
push
mov
gs
pop
sub
leave
sub
inc
test
std
pop
icebp
dec
cmpsb
jmp
cmpsb
clc
jo
cs
jae
sahf
stos
dec
adcl
stos
push
arpl
dec
ret
and
mov
test
jns
stos
mov
jo
movsb
push
jnp
repnz
mov
sub
ss
cltd
push
sahf
aam
cvtps2pd
cmp
fs
out
add
xchg
mov
popa
imul
aad
adc
fwait
scas
faddl
xchg
jmp
cld
cmp
fidivs
pushf
adc
adc
adc
fcmovnbe
lock
lods
nop
mov
cmp
jmp
or
adc
mov
loopne
data16
lcall
xchg
repz
scas
sti
sahf
test
jmp
dec
push
int
ljmp
adc
cwtl
mov
cld
ja
fisubrl
or
arpl
fnstsw
dec
test
pusha
in
lcall
cmp
int
and
sbb
inc
leave
jne
out
jg
int3
add
or
mov
mov
jo
pop
xchg
shll
call
cld
xchg
out
stos
repnz
outsl
ljmp
lcall
xor
sar
jns
xchg
lods
jno
movsb
pop
push
xor
ljmp
jo
outsl
lcall
ljmp
decl
jno
in
push
es
xor
ja
or
loope
xchg
mov
std
aaa
std
addl
pop
dec
loopne
test
add
lods
cmpsl
rorb
ljmp
inc
jo
mov
shr
adc
cli
bound
leave
jnp
push
adc
and
inc
popf
fsubrl
out
or
das
sub
sti
inc
test
jne,pt
loop
aad
icebp
incl
test
pop
fcoml
push
sbb
cld
data16
dec
mov
mov
lret
stos
vcvtsd2si
popf
aaa
gs
fildl
push
hlt
test
andl
or
add
xor
popf
push
sahf
jp
inc
mov
push
icebp
mov
call
repz
or
push
mov
clc
cmp
mov
out
sub
push
mov
insl
sbb
into
sbb
cli
mov
push
mov
mov
gs
sbb
cmp
clc
xchg
jl
and
ja
xor
xlat
dec
hlt
sbbb
rcrl
addr16
adc
test
cmp
repz
inc
fcomip
jmp
pop
cmp
clc
xchg
lock
pop
cmp
adc
cmp
in
sub
pusha
cld
push
call
push
out
gs
in
pop
stc
mov
fnsave
mov
ds
bound
aas
dec
mov
and
lock
cld
dec
push
add
mov
inc
and
je
sub
ljmp
mov
inc
es
data16
mov
pop
or
in
xor
out
lds
adc
rcrb
gs
repnz
gs
mov
mov
in
xchg
bound
push
insl
ds
jmp
int3
and
pushl
ja
test
pop
xchg
jo
test
inc
call
cwtl
or
or
mov
add
incl
cld
decl
cmpsl
add
jmp
bound
pop
fdivrl
jnp
ljmp
arpl
inc
xchg
and
fstps
mov
scas
into
mov
fistps
pushl
ljmp
arpl
xor
adc
xchg
mov
aaa
inc
or
cmc
incl
movsl
xlat
and
mov
sub
test
pop
xchg
sbb
push
sub
dec
ljmp
add
mov
fstps
loopew
lock
popf
hlt
sub
movsl
sbb
mov
test
xchg
xchg
clc
aam
push
push
or
ljmp
movb
sbb
and
cmp
adc
lea
xorb
xlat
pushl
jle
orl
or
or
adc
mov
mov
call
lcall
cltd
push
enter
inc
mov
aad
add
jbe
mov
je
insb
out
push
lods
push
pop
jnp
pop
scas
fildll
sbb
dec
xor
sbb
je
pushf
sub
sbb
mov
cmp
je
pushl
push
push
mov
mov
imul
sbb
jle
aas
inc
mov
rolb
and
pop
fisubrl
xchg
fisubrs
push
das
mov
xor
aaa
jle
jno
das
fists
stos
jmp
loope
adc
popa
testb
push
xor
je
je
xor
jmp
clc
outsl
repz
push
xchg
cmc
sbb
out
xlat
sub
sbb
pushf
mov
mov
push
jmp
dec
inc
mov
mov
adc
aam
sub
inc
lret
loope
fisubs
cmp
dec
lcall
xor
and
stc
out
mov
xor
sbb
xor
ljmp
ljmp
fdivrp
push
clc
lods
push
les
mov
jns
stos
xchg
inc
pushf
push
aam
add
dec
inc
aam
cwtl
xor
stos
pop
mov
or
into
jg
and
jl
cmp
adc
faddl
jg
and
call
cwtl
lea
frstor
dec
call
imul
sbb
fnsave
xchg
xor
movsb
lret
into
leave
std
call
cmpsb
jle
push
movsb
imul
pop
ret
arpl
in
and
js
das
mov
jnp
lods
push
mov
inc
and
mov
jae
fstpl
fwait
mov
popa
das
ljmp
shrl
sti
and
fucomip
inc
adc
movsb
push
sub
lods
push
scas
int
fwait
jg
dec
call
fsin
mov
mov
pusha
fisttps
add
cmp
or
dec
pop
push
and
mov
mov
xchg
jl
ror
adc
sub
mov
outsb
push
push
add
sbb
cmpsb
pop
cld
ja
sub
inc
pop
pop
jne
pop
cmp
or
les
pop
stos
rorl
je
jns
and
mov
cmp
fldenv
or
xor
cmp
in
xor
adc
or
mov
andl
rcrl
inc
jmp
push
jb
push
mov
jecxz
xchg
cmp
mov
pop
mov
testb
sbb
mov
jmp
jo
inc
outsb
jmp
inc
fwait
dec
test
jb
imul
jmp
add
mov
incl
arpl
int
fstps
add
pusha
adc
icebp
pop
sbb
jg
pop
aad
js
pop
fstps
loopne
fidivs
xchg
mov
ss
incl
mov
sbb
pop
movsl
out
jae
clc
sarb
fcmove
inc
repnz
incl
pop
mov
mov
inc
add
or
cmp
and
push
xchg
cmp
popf
push
or
cmp
inc
ja
adcl
iret
xor
dec
mov
fdecstp
jae
stos
push
popa
and
cmp
and
call
mov
notb
jmp
cmp
ljmp
rolb
lret
stos
mov
decl
aaa
push
pop
es
ja
adc
divl
lcall
fdivrl
dec
movsb
enter
push
stc
outsb
pop
ja
shll
inc
dec
jnp
aam
int3
inc
fstpl
sbb
adc
dec
bswap
mov
mulb
cmp
decl
flds
push
pop
stc
dec
cld
inc
xor
ror
js
out
mov
loope
hlt
mov
sarb
mov
out
jbe
fucomp
lret
pop
fsubs
lahf
ljmp
mov
mov
xchg
pusha
shll
popf
xor
mov
add
mov
fiaddl
push
adc
sbb
xchg
fiadds
xor
cmpb
mov
inc
iret
pop
out
cmp
mov
call
sti
pop
jg
ljmp
maxps
xchg
clc
fidivs
jp
add
leave
cmc
pushl
mov
dec
icebp
aam
das
pop
jbe
test
adc
fldenv
xor
and
std
push
xor
sbb
repnz
ss
and
push
cmpsl
decl
inc
clc
sub
pop
adc
pop
cmp
or
out
incl
xchg
ror
enter
inc
push
stos
pushf
pusha
sti
xlat
pop
aad
inc
mov
mov
xor
aas
cmp
frstor
sbb
push
and
mov
pusha
pop
mov
fwait
nop
sbb
call
pushl
cmp
cltd
sub
mov
movsb
inc
lods
aaa
and
scas
aas
jmp
sub
ljmpw
ljmp
push
pop
loopne
pop
inc
shlb
ret
jge
cmp
dec
mov
xchg
pop
inc
or
in
daa
add
pop
jle
jnp
ljmp
dec
hlt
js
jle
fwait
dec
cmp
lods
fdivrs
sbb
call
or
pusha
jns
push
ror
iret
jo
mov
inc
jmp
js
or
jmp
cli
and
lret
adcl
in
xchg
mov
xchg
xchg
rol
fwait
cmpsb
jae
addr16
call
std
shll
test
aad
shlb
mov
das
sbb
xchg
jg
incl
cmpsl
sub
mov
incb
lcall
adc
sub
rcrb
pop
stos
sub
fimull
mov
add
incl
iret
pop
mov
call
test
jmp
call
xchg
or
jg
scas
out
nop
dec
pop
cld
xor
fwait
mov
int
jns
pop
jmp
jmp
and
sbb
arpl
sub
call
jmp
adc
inc
dec
add
cmc
and
add
cli
loop
outsl
push
incl
popa
mov
ror
leave
cwtl
push
cmp
mov
pop
aam
addr16
mov
jae
xor
lret
std
jmp
xorb
ljmp
sub
nop
daa
aaa
mov
or
dec
aaa
insb
es
lods
test
loopne
popa
mov
outsb
aaa
inc
shll
jp
push
test
cmpsl
sahf
outsl
out
mov
push
lea
adc
popf
sbbb
popa
mov
push
pop
std
cmp
mov
xchg
test
push
xchg
mov
xchg
iret
xchg
mov
lret
pop
inc
popfw
or
inc
and
in
pop
dec
sbb
mov
jg
mov
hlt
cli
ficompl
insl
lock
push
lret
in
call
arpl
cmc
sar
adc
call
negb
xchg
xchg
insb
jo
or
mov
xchg
xchg
testl
ljmp
jo
fcomps
sbb
popa
jg
jle
lcall
mov
ds
call
fwait
push
shrl
xchg
jne
and
ficomps
pop
sub
hlt
and
ret
fmul
out
rclb
jg
jmp
sub
cli
jne
push
das
xor
lcall
lea
daa
mov
sub
mov
out
adc
sub
incl
add
out
pop
orb
stos
jp
cld
dec
nop
fcomip
cmpsl
pop
cmc
out
sbb
add
jno
lea
push
clc
loope
cmpsl
mov
or
pusha
fnstsw
add
dec
popf
lods
inc
stc
add
jb
les
dec
dec
mov
hlt
add
test
in
into
pushf
sbb
mov
incl
lret
in
repz
and
pop
ret
sbb
test
and
lea
or
pop
fs
hlt
add
fsubs
ret
out
add
xor
jns
scas
clc
decl
and
in
sti
mov
jmp
and
and
add
lcall
fisubrl
push
bound
push
mov
jecxz
xchg
mov
repz
or
xor
sub
sbb
jp
cltd
mov
cmp
jnp
mulb
call
sub
mov
or
fisttps
shl
pop
cmp
sbb
pop
std
pushl
daa
xchg
pop
sbb
xchg
push
lret
gs
sbb
push
inc
lds
pushl
inc
lock
repz
mov
bound
insb
adc
pop
mov
sub
lds
add
push
add
outsl
movsb
mov
sbb
pop
jg
jg
cmp
icebp
test
ds
mov
inc
fdivs
sbb
cmp
fildl
jle
push
dec
icebp
bound
and
xlat
sub
jg
repnz
push
sbb
jmp
mov
mov
leave
push
jp
adc
mov
clc
pop
adc
leave
xor
mov
jae
pop
jmp
xor
aad
fildl
adc
imul
incl
cmp
mov
clc
inc
gs
imul
xor
ss
mov
mov
mov
cmc
cld
adc
xchg
andl
incl
jecxz
pop
push
jg
repz
mov
fbld
cld
testl
push
stos
std
xor
test
loop
cmp
sbb
loop
mov
ja
xchg
mov
jae
dec
outsb
out
xchg
in
xor
ljmp
mov
and
cmp
fadds
lods
adc
outsl
xchg
jle
rcll
cmp
xor
mov
int3
and
push
pusha
xor
imul
mov
jno
incl
add
add
js
negb
out
decl
popf
stos
pop
cli
in
mov
adc
jns
add
jmp
sub
addr16
jmp
testb
adc
insl
jmp
sbb
and
push
add
sub
ud0
clc
call
cmp
popf
jmp
inc
aad
jne
ja
jbe
testb
incl
dec
xor
dec
in
or
add
cmpsl
das
add
ss
lcall
in
dec
cld
and
sbb
aam
push
int3
cld
enter
jo
push
ljmp
jns
jmp
sub
sbb
push
fs
mov
leave
fbld
mov
lods
lea
add
aam
add
mov
push
inc
push
loopne
jg
jl
xor
dec
shl
push
mov
scas
sub
enter
cmp
pop
sbb
fdivrp
mov
sti
push
pop
xor
mov
inc
fldcw
daa
jo
fldcw
dec
lret
ljmp
push
and
cmpsb
filds
mov
xchg
adc
fdivrs
cmp
pop
xchg
xor
mov
push
in
movsl
ret
xchg
push
sbb
call
in
inc
movsl
jbe
xchg
fstpl
add
stos
sbb
outsb
pop
sub
arpl
pop
xor
pushf
fcoms
sub
dec
repz
mov
mov
out
mov
ljmp
lds
pop
test
shll
movsl
daa
shlb
call
les
mov
inc
cmp
clc
adc
mov
incl
jns
lods
imul
mov
sarl
jl
enter
adc
imull
mov
add
push
jbe
sbb
decl
in
pop
ror
cmp
loop
push
cli
addb
decl
mov
push
lcall
mov
mov
outsl
jmp
or
decl
aaa
or
add
lret
mov
clc
mov
fs
mov
fbld
repz
sahf
sub
movsb
xchg
movsl
ljmp
fimull
dec
icebp
fisubrs
lds
outsb
scas
cmpsl
clc
jno
loopne
jmp
insb
add
movsb
pop
and
jne
mov
mov
fiaddl
inc
hlt
in
cmp
sbb
sbb
xor
out
cmpl
ja
les
in
subb
decl
cmpsl
mov
in
cli
fisubrs
cltd
lock
fsubrs
test
icebp
movsb
int3
stc
ja
jmp
xor
out
dec
pop
clc
jmp
xor
pushl
mov
lock
dec
int
loopne
sbb
pop
fucomp
pop
out
addl
jmp
jb
mov
xchg
cli
imul
fcoms
jnp
decl
sahf
fsts
cmp
adc
std
add
jnp
jl
xchg
sbbb
pop
mov
jmp
fwait
mov
stos
jae
or
sbb
mov
cmp
add
outsb
decl
sbb
push
xor
iret
dec
mov
pop
xor
cmp
pusha
cmp
pop
mov
mov
xchg
mov
in
sbb
rol
mov
int
fwait
leave
seto
inc
mov
or
scas
sub
jmp
sbb
add
adc
sbb
pop
mov
scas
movsl
jns
mov
fs
dec
jmp
cli
dec
xchg
mov
push
out
aaa
sbb
cmp
mov
inc
jbe
xorl
cmp
or
dec
inc
inc
jle
lret
xchg
decl
pop
mov
mov
push
loopne
loop
add
int3
inc
sub
aam
stc
popf
adc
std
jmp
leave
sub
push
pop
daa
stc
mov
add
stc
xchg
sbb
xchg
xchg
lcall
jns
mov
mov
mov
ret
dec
scas
fsubl
adc
sahf
lret
int
fildl
notl
lcall
inc
adc
loope
xor
dec
sti
out
movsl
add
jb
inc
movl
fsubl
jg
rclb
cmp
add
filds
lds
cltd
mov
test
out
xchg
int3
incl
sahf
shr
test
cmpsl
push
idivl
cmp
jecxz
lret
popf
fs
je
idivb
shr
inc
push
jp
mov
mov
mov
fistps
mov
mov
jg
push
nop
cli
aad
pop
insl
add
jge
dec
xlat
jbe
mov
xorb
mov
lret
jb
xor
pushl
cld
mov
stos
adc
and
push
cld
push
frstor
mov
cli
pop
xor
inc
cwtl
push
push
adc
push
xor
ljmp
rorl
push
pop
cli
push
sbb
mov
inc
movsb
cmp
loop
out
ljmp
adc
in
rcl
cmp
mov
in
jp
dec
jecxz
ret
lea
pushl
push
jne
int
ret
mov
xchg
push
imul
pop
mov
xchg
mov
decl
jp
push
and
and
std
lret
subl
fbld
mov
mov
das
hlt
scas
mov
stc
ljmp
push
jb
incl
or
call
rcrb
paddd
incl
jmp
push
jecxz
outsb
ds
stos
testb
jmp
icebp
xchg
movb
ljmp
fidivl
ds
ja
jg
scas
clc
push
and
test
mov
stos
mov
xor
ljmp
cmpsb
lcall
mov
and
aam
inc
add
dec
into
cmp
pushw
std
call
stos
sarl
push
jecxz
fwait
xor
cmp
push
xchg
push
outsl
ljmp
jnp
insb
andb
les
mov
popf
dec
nop
in
adcl
ljmp
xchg
enter
cmp
nop
ja
ret
out
imul
sub
incl
cld
andb
inc
mov
cmp
out
mov
mull
xor
shll
incl
and
lock
fdivs
sarb
sbb
pop
andl
jg
ljmp
jg
adc
loope
repnz
inc
incl
push
shlb
inc
andb
ret
mov
xchg
popa
push
inc
stc
push
add
call
mov
je
cltd
shlb
or
xor
mov
xor
cltd
xlat
cmp
mov
stos
popf
add
pop
pop
mov
daa
cmpsb
dec
dec
mov
lock
mov
pop
lret
popa
fbld
sub
test
xchg
imul
test
mov
mov
aam
int3
test
push
xor
pop
cwtl
insl
rol
push
push
lret
mov
cmp
jmp
icebp
das
mov
cmp
roll
mov
jae
mov
rcll
daa
aad
pop
or
ja
mov
arpl
clc
decl
cmp
jbe
popf
sarb
sahf
push
pushl
call
xchg
and
sbb
enter
sub
sbb
lcall
ja
xchg
mov
lahf
outsb
dec
aam
rcr
cmc
out
adc
in
xchg
shrb
xchg
cmp
and
jmp
lea
mov
inc
pop
pushf
dec
add
sbb
mov
adc
xor
out
adc
int3
std
mov
ljmp
loop
dec
cwtl
or
test
sti
call
les
outsl
sub
and
test
call
insb
or
lods
cmp
dec
cmp
bound
pop
out
adc
mov
ljmp
rolb
lcall
cmp
mov
enter
insb
mov
jl
mov
pop
mov
ljmp
jno
mov
hlt
xor
jns
cwtl
pop
aam
nop
lahf
dec
movsl
mov
mov
inc
clc
inc
sbb
inc
xor
inc
adc
lret
pop
sbb
out
sarl
enter
mov
icebp
jg
mov
popa
cmc
jmp
ret
push
mov
dec
decl
sbb
lahf
mov
filds
xchg
dec
jge
repnz
xor
jne
push
incl
shll
fsubs
faddl
lcall
sub
cmp
in
call
inc
mov
xchg
popa
clc
add
xchg
dec
loopne
jmp
in
cmp
mov
iret
test
lahf
aaa
pop
loope
xchg
cmp
jl
and
call
scas
shrl
or
mov
lahf
mov
xor
cmovo
and
in
stc
adc
cmp
lcall
inc
wbinvd
mov
in
je
aaa
aam
jnp
xor
fbstp
mov
cmpsl
clc
lcall
and
popf
xchg
gs
jae
xchg
mov
or
pop
xchg
and
push
mov
mov
pushl
std
outsl
mov
ror
aas
and
mov
add
sub
jmp
sbb
cmp
enter
ss
lret
push
jecxz
inc
ljmp
jmp
stc
sbb
xor
into
ss
dec
adc
aas
jmp
fisubs
pop
inc
or
pushl
ror
lock
jl
mov
mov
jo
cmp
add
stos
je
lcall
pop
inc
fadds
cltd
aas
scas
sub
es
sub
sub
jmp
clc
lcall
mov
mov
imulb
insb
jno
inc
push
sub
or
inc
dec
ss
aas
test
in
int
sbb
popf
jae
roll
mov
push
dec
out
dec
pop
jb
inc
mov
imulb
add
xor
ss
inc
jmp
and
push
xchg
popl
mov
fwait
stc
daa
sbbl
cli
scas
call
xchg
push
pop
nop
mov
xchg
rcll
xor
push
in
std
pop
jno
out
or
popf
adc
and
aaa
sbb
roll
nop
call
and
mov
mov
cmc
jmp
fnstsw
mov
repz
cmp
dec
icebp
imul
jmp
je
jmp
stc
inc
push
gs
sbb
mov
incl
iret
lcall
and
ret
dec
mov
test
sarl
mov
in
decl
mov
movsl
and
mov
sahf
jb
pop
xchg
inc
in
iret
cmp
xchg
decl
nop
push
and
leave
push
pop
and
dec
scas
mov
arpl
jge
call
data16
adc
xchg
jns
ljmp
cwtl
pusha
call
jae
gs
lcall
inc
cmp
or
xchg
pop
adc
andb
xchg
push
call
mov
es
mov
jp
xor
mov
fwait
xor
push
repz
frstor
add
sub
and
mov
jl
jbe
push
mov
mov
rolb
sar
incl
cmc
mov
outsb
or
jl
fists
xor
mov
test
aam
ljmp
xor
push
push
mov
fldenv
mov
jl
mov
mov
enter
cmp
repnz
jmp
and
jmp
jae
sbb
inc
outsb
push
add
loopne
daa
cmp
loope
fadds
decl
jp
jo
jo
mov
sbb
leave
lahf
rcrl
cmpsl
lock
lods
pushf
fnstsw
fistl
mov
ret
ret
ret
outsl
aas
inc
aas
sbb
lods
dec
mov
rolb
sub
cmp
lcall
and
pop
or
xorl
pop
insb
pop
lret
xchg
add
inc
dec
mov
int
jmp
ret
xchg
inc
fisttps
jmp
mov
popa
pop
xor
push
iret
loopne
clc
incl
pop
add
and
into
bswap
iret
aad
sbb
repnz
xor
imul
out
js
mov
mov
scas
call
insb
std
push
sar
mov
pusha
shrl
insb
decl
mov
test
mov
out
and
mov
repnz
mov
lcall
js
stos
gs
call
cwtl
adc
xlat
sbb
ja
decl
lret
mov
pop
add
pop
out
xchg
pushf
push
mov
shrl
sub
add
cltd
xor
sahf
or
das
mov
stos
mov
push
pop
loope
mov
call
test
sub
sbb
add
xchg
rcrb
fistps
jge
push
dec
xor
jl
pop
loope
add
and
pop
sbb
mov
scas
out
pop
and
sub
sbb
jb
out
dec
pop
mov
sub
fildl
decl
jge
push
lock
sbb
js
or
push
cmpsl
ss
mov
inc
lock
jmp
jo
jns
incl
mov
adc
xor
dec
mov
xchg
mov
pop
jg
orb
popa
sbb
jmp
sbb
loope
lret
inc
xchg
or
mov
div
hlt
lcall
jmp
into
clc
scas
cmpsb
ror
icebp
bound
push
xchg
aaa
cmp
xor
daa
inc
aaa
std
lcall
fcomip
cmp
xor
das
rcl
sahf
mov
mov
pushl
outsl
dec
xor
jns
push
call
iret
mov
push
sub
test
outsb
lcall
inc
icebp
mov
movsb
cli
enter
xchg
mov
out
scas
rorl
push
add
sar
lcall
mov
adc
pop
popf
mov
fimull
fsubr
xlat
enter
incl
sbb
ds
dec
sbb
jl
dec
push
or
push
stos
sub
call
xor
jae
jbe
lret
mov
lods
icebp
push
in
jge
sbb
lods
test
add
jg
cmp
in
arpl
scas
dec
into
ss
adc
fiaddl
dec
scas
cli
lcall
mov
sbb
fisubl
add
and
jl
fwait
or
pop
rcrl
mov
mov
out
mov
test
ljmp
jl
mov
out
mov
loop
aam
jmp
pushf
add
sahf
cmpsb
ss
insl
push
sub
ljmp
bound
cmpsl
cmp
ljmp
rcrl
and
fdivrs
xchg
and
adc
xchg
or
push
jae
mov
lcall
lea
push
inc
add
cmpsb
hlt
cwtl
shr
jno
pop
add
xor
lcall
aam
inc
imul
jg
xor
nop
shlb
inc
pusha
jecxz
push
les
lods
inc
adc
sbb
push
fildll
es
pop
mov
push
and
jae
loopne
lods
pop
addr16
or
pop
aad
inc
inc
aam
push
cmc
and
sbb
mov
add
cmp
mov
dec
jb
inc
cmp
decl
sbb
xor
push
leave
lcall
fcmove
fmull
lret
push
xchg
or
xchg
pop
cmp
xlat
push
and
test
pusha
add
push
add
xlat
ss
inc
dec
xlat
sub
filds
dec
outsl
mov
mov
cmp
movsb
aam
arpl
dec
add
insl
out
mov
cmp
jg
out
jo
dec
aas
push
repnz
data16
xchg
inc
xchg
mov
mov
jae
lret
test
jecxz
inc
pop
push
sub
inc
push
mov
mov
adc
or
in
xlat
jmp
clc
xlat
mov
mov
fimuls
sbb
sbb
cli
jg
cmpsb
lds
sbb
adc
jne
sub
call
decl
out
inc
pop
inc
hlt
sbb
mov
sub
xchg
and
ret
inc
add
push
cmp
cwtl
mov
out
testl
jle
and
push
das
out
and
push
rclb
call
jne
adc
or
sbb
lock
dec
fwait
in
sub
rolb
repz
xor
idiv
call
aas
das
and
push
push
call
ficoml
sbb
lds
lret
add
das
clc
incl
xchg
sbb
sbb
addr16
jbe
sub
test
dec
push
jnp
call
mov
push
cmp
pop
or
shl
or
leave
push
out
std
lods
adc
call
pop
and
test
lahf
sahf
mov
mov
mov
push
jge
in
and
sub
push
rorb
xchg
js
xchg
xchg
orb
nop
loope
sbbb
add
pop
lock
and
push
pop
insb
push
inc
or
hlt
rolb
push
xor
lret
addb
inc
stc
mov
xor
adc
je
pop
mov
es
jo
imul
in
add
push
insb
or
ds
ss
add
and
or
out
dec
add
dec
inc
add
ret
sahf
add
inc
xor
xlat
std
data16
subb
xor
insl
mov
inc
and
dec
jo
daa
pop
cmp
mov
aas
and
pop
push
outsl
outsl
movsb
jo
sti
insb
push
push
outsb
popa
jo
push
or
jae
dec
insl
xchg
test
sbb
xlat
push
and
and
aaa
fildl
pop
and
aaa
cmp
inc
imul
dec
mov
js
arpl
xor
pop
inc
mov
mov
push
popa
je
sub
and
cmp
or
jns
push
imul
mov
inc
imul
cmp
dec
ljmp
dec
jecxz
and
shr
insl
and
dec
call
fimull
push
or
call
pop
xor
fwait
inc
jl
loopne
sub
sub
cmp
rorb
insb
stos
sub
push
mov
cwtl
sub
fmuls
pop
push
outsb
flds
sub
cmp
dec
inc
sbb
mov
adc
out
or
mov
cs
sbb
sbb
fisubs
mov
sbbb
push
pop
lock
mov
ds
insb
jne
addl
data16
in
inc
xchg
mov
mov
mov
push
inc
sbb
dec
push
jnp
jo
inc
push
fildl
in
filds
pop
fadds
mov
mov
and
push
jne
addr16
ret
subl
jb
cld
push
add
jns
outsb
xor
inc
jae
adc
cmp
sub
push
push
cmp
hlt
fs
inc
jecxz
or
nop
add
dec
cmp
ret
push
or
stos
pop
adc
popa
pop
subb
and
inc
or
jo
packuswb
xchg
imul
mov
or
inc
dec
sbb
pusha
pop
dec
adc
ret
dec
pop
dec
leave
push
std
push
arpl
fistpll
inc
stos
mov
push
xchg
test
xchg
outsb
orl
popa
shlb
sbb
mov
push
mov
ds
pop
and
popw
push
mov
mov
push
mov
inc
xchg
popa
orl
and
das
ljmp
jae
pushf
inc
or
mov
stos
pop
dec
inc
dec
or
inc
jb
mov
jae
mov
jb
stos
or
mov
fadd
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
xchg
jg
pop
mov
ja
sub
cmp
into
mov
inc
popa
es
jp
lods
ret
push
rcll
xor
push
jg
sbb
cmpsb
nop
cmp
mov
shlb
or
fcmovnb
movnti
outsl
jns
int
or
add
push
pusha
enter
xchg
and
jno
jne
stos
aad
adc
fisubrs
push
inc
nop
pusha
pop
outsl
inc
out
sti
sub
inc
fwait
sub
xchg
sub
mov
cmp
insl
adc
xchg
sbb
stc
mov
add
fldt
xor
xchg
adc
jns
mov
or
inc
stos
sbb
jo
cltd
ret
xor
push
jo
xchg
or
add
out
ret
pop
aaa
and
cmp
xlat
adc
jne
test
and
sahf
movsl
rclb
push
jne
sub
xlat
loope
fmuls
adc
push
mov
rcll
jo
jae
xor
scas
sub
mov
ret
pop
stos
roll
cmp
jnp
gs
xor
outsl
lcall
inc
js
ret
imul
in
lods
add
pop
outsb
push
outsl
and
add
mov
jno
inc
mov
sub
rol
jnp
push
cmp
dec
gs
jne
sarl
xchg
push
push
sub
mov
std
movsb
jp
ds
loop
rorb
jge
or
das
jg
add
mov
jp
jbe
pop
out
inc
sbb
and
sbb
sbb
lods
and
jo
testb
pop
mov
aad
popa
sbb
xor
sub
push
shlb
popa
or
pop
or
outsb
vcvtss2sd
push
dec
xchg
lock
jmp
loopne
jae
outsl
sub
inc
sub
jb
and
nop
nop
inc
cs
jo
out
push
inc
inc
gs
arpl
pop
sbb
push
jecxz
leave
mov
fstpt
jecxz
pop
mov
js
mov
jecxz
insb
push
inc
insb
jle
punpcklbw
and
push
fs
lcall
inc
jae
jno
aad
stos
mov
adc
jne
ret
push
insl
adc
js
inc
adc
cmp
inc
and
je
or
sbb
sub
cmp
rol
or
pop
dec
push
push
movsb
xor
in
lods
gs
push
pop
xor
shlb
inc
push
adc
enter
mov
push
push
adc
adc
ja
scas
dec
in
lods
pop
cmp
je
shll
or
dec
outsb
dec
push
scas
jl
xchg
lock
rcl
xor
pop
add
add
mov
mov
adc
xchg
movsb
dec
adc
dec
rorl
movhps
push
rcrl
inc
push
add
add
xor
dec
pop
adc
in
dec
rcll
lock
loopne
mov
inc
jb
and
test
mov
in
ret
xor
dec
sbb
int3
movsb
bound
inc
incb
jb
push
jb
inc
jae
imul
fiadds
push
shll
js
stos
inc
sbb
iret
push
repz
jo
xchg
pop
sub
jo
adc
rol
and
xchg
sbb
scas
repnz
or
je
cli
adcb
inc
and
add
adc
add
mov
lret
adcb
fisubrl
pop
mov
jb
push
and
mov
push
adc
xchg
adc
pop
adc
mov
pop
push
inc
call
test
cmp
rolb
hlt
xorl
add
sub
mov
mov
jb
movl
xlat
popa
and
rcrl
push
push
insb
mov
shlb
xchg
js
jb
push
repz
or
pusha
jge
and
out
sbb
dec
xor
push
andb
sbb
paddsw
notb
imul
mov
inc
xchg
ja
push
jo
or
inc
sbb
cmp
sahf
out
push
push
loope
lret
or
cltd
lret
push
popf
dec
mov
sub
test
adc
repnz
pextrw
dec
insl
or
insb
out
fs
dec
mov
arpl
ret
adc
push
outsl
sbb
movsl
xchg
cmp
xor
lds
mov
dec
and
out
sbb
pop
push
aam
push
daa
jbe
lds
shll
or
xchg
mov
jbe
sub
sub
dec
icebp
xor
or
fistpll
and
pop
outsb
cmp
data16
sub
lea
roll
xchg
lods
iret
inc
mov
sbb
mov
fcomps
push
push
or
mov
shl
mov
push
jns
fs
icebp
push
pop
fdivrl
outsl
push
sbbl
into
ja
addr16
lods
pop
mov
lahf
enter
sub
inc
arpl
adc
js
and
test
mov
jne
popa
test
push
push
inc
out
push
enter
sub
ljmp
push
pop
xchg
dec
push
sub
dec
jae
push
bound
test
push
jl
sub
insb
mov
mov
add
jae
idivl
sbb
inc
dec
jp
mov
mov
sub
inc
sbbb
popa
inc
and
dec
adc
fnstcw
add
add
add
sub
dec
adc
pop
xor
cmp
scas
jb
test
cmp
mov
mov
mov
jmp
add
adc
fdivs
and
mov
dec
push
add
push
sbb
pop
lret
xlat
add
add
stos
iret
and
jb
popa
adc
add
lock
shlb
dec
pop
push
pop
inc
cmpl
rcrb
imul
and
lahf
clc
or
and
pop
icebp
jg
xor
add
inc
and
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
