fcomp
decl
andb
lea
push
mov
or
push
add
repz
add
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
les
inc
sub
lahf
out
aas
push
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
and
mov
in
adc
push
mov
les
jge
cmpl
clc
hlt
dec
push
push
faddl
ds
push
mov
adc
mov
mov
pushf
pushf
cmc
dec
aaa
push
xchg
sbb
and
push
out
mov
jno
and
push
add
pop
adc
adc
lock
dec
add
mov
decl
add
push
mov
mov
add
or
js
push
inc
popa
mov
sti
out
xor
inc
hlt
push
push
adc
push
xchg
and
jbe
int
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
loopne
and
outsl
jo
sub
push
leave
or
fldt
sbb
mov
add
mov
and
in
adc
insl
cs
imul
sahf
push
fidivs
push
add
ss
test
push
call
cmpsb
xor
fsubs
sete
into
mov
imull
lahf
mov
inc
movsl
mov
adc
icebp
loop
add
push
mov
sub
jb
and
fs
push
sbb
and
cmpsl
add
ss
add
sbb
add
sbb
addl
xor
xor
fnsave
mov
sub
lret
jg
push
mov
lea
or
jmp
push
sbb
mov
push
dec
adc
sbb
cs
inc
add
and
cmp
inc
xor
notb
sub
sub
push
in
and
mov
xchg
pop
mov
lea
out
jg
mov
pop
jge
mov
xchg
pop
xor
pop
xchg
mov
pop
ret
xor
mov
das
push
cmp
inc
push
insb
ret
or
push
add
arpl
hlt
pop
cmp
jl
mov
xchg
xor
jg
mov
in
push
mov
xlat
nop
fwait
rcrb
or
add
outsl
push
scas
and
or
cs
push
mov
movsb
jne
cmp
add
sub
lock
loopne
mov
dec
jae
mov
mov
sub
sbb
out
adc
cmp
lock
mov
adc
push
jne
mov
mov
jg
mov
mov
pushf
hlt
call
mov
test
je
mov
or
adc
jns
push
dec
fdivrs
add
and
insb
add
movl
leave
repz
add
push
and
add
sub
sub
pop
cmp
out
insb
add
push
mov
and
js
add
rorb
pusha
push
xacquire
hlt
mov
je
filds
sbb
pop
jnp
inc
mov
clc
pop
or
push
aam
popa
addb
incl
push
jbe
push
add
sub
negl
and
in
jp
sbbb
cmp
pop
xor
xchg
ja
int3
stc
add
cmp
pop
imul
inc
xchg
cmp
je
je
jae
sbb
pop
and
xchg
xor
xor
mov
add
mov
stos
add
dec
enter
lea
push
mov
cmp
pop
xlat
pop
ds
inc
push
push
and
ja
push
jl
push
orb
sub
mov
fdivp
push
sbb
int3
mov
lock
sbb
adc
pusha
lahf
cltd
loope
push
popf
push
enter
sub
and
or
daa
ja
pop
mov
mov
ud1
sbb
sbb
insl
stos
and
jecxz
adc
nopl
adc
mov
je
jl
negb
and
push
or
push
add
cli
add
jo
bound
cmp
sub
sub
fimuls
scas
je
push
pusha
sub
sete
test
test
fs
push
sbb
leave
xor
push
add
movsl
nop
mov
stos
sbb
popf
out
push
loope
mov
jmp
insb
xor
ljmp
call
cmp
adc
inc
inc
push
das
xchg
scas
pusha
fldl
and
xor
mov
adc
add
jb
movsb
jb
sbb
adc
jnp
repnz
sbb
push
clc
frstor
xor
or
popf
sahf
test
push
xchg
push
sbb
mov
btc
dec
leave
or
xchg
hlt
push
push
dec
inc
push
and
cmp
mov
sub
repnz
add
add
in
bound
push
push
cmp
inc
xor
dec
fcomps
test
mov
jb
data16
pop
add
insb
test
addb
jmp
imul
xchg
test
xchg
out
push
sbb
das
push
inc
mov
outsb
or
mov
ret
sbb
sbb
mov
and
mov
and
and
rcl
lea
and
icebp
sbb
jge
scas
test
incl
inc
sbb
and
scas
pop
cmp
movsb
fcmovnu
and
adc
adc
leave
mov
movb
lods
mov
add
or
xchg
addl
pop
cs
mov
rolb
add
mov
sahf
ja
xor
pusha
mov
jmp
push
mov
cmp
mov
cs
pop
push
cmp
jecxz
xor
outsl
add
xchg
into
stos
or
lfs
lock
sti
cli
lea
data16
into
xor
sub
mov
add
hlt
mov
pop
testl
or
push
dec
pop
int3
sbb
adc
adc
mov
dec
adc
sarb
cld
rolb
stos
shrb
outsb
imul
lret
lea
das
xlat
adc
dec
mov
add
incb
mov
adc
adc
das
add
and
xor
push
adc
das
or
fiadds
das
je
outsb
pop
lea
mov
adc
inc
insb
jl
lahf
mov
shrb
add
mov
sbb
xchg
dec
in
adc
jmp
xchg
pop
pop
enter
lea
arpl
sbb
mov
dec
aad
cmp
pop
pop
dec
add
sub
mov
mov
or
jne
clc
pop
add
and
call
movaps
in
jg
adc
push
add
inc
cmc
adc
repz
jmp
mov
flds
jmp
loopne
int3
in
add
dec
mov
rol
adcb
push
xchg
std
xchg
adc
cmp
push
ljmp
dec
shl
push
jne
aaa
cmp
in
push
xor
les
xchg
add
inc
cmp
mov
cltd
iret
inc
add
add
add
mov
aas
loopne
ljmp
cmp
adcl
dec
test
push
pop
lods
loope
adc
adc
push
call
cmp
je
sub
cmp
je
lret
scas
xchg
add
add
adc
sub
pushf
xor
rorl
and
insl
mov
add
test
mov
lret
loopne
push
std
pop
adc
mov
push
imul
sti
int3
add
sbb
add
push
mov
jecxz
lods
push
push
push
std
call
push
adc
call
inc
mov
or
cmp
jl
inc
ret
outsb
lea
push
pop
jnp
push
fstl
cmp
push
add
pushf
push
xor
imul
decl
mov
imul
rolb
xchg
add
enter
and
cwtl
scas
cmpb
mov
push
lods
mov
negb
add
es
int
pushf
jmp
in
lock
jmp
sbb
test
jne
sub
mov
push
mov
inc
inc
sahf
fwait
hlt
sbb
add
inc
mov
nop
mov
push
jne
lods
push
mov
mov
ret
jo
add
pop
and
enter
lock
mov
cwtl
or
add
testb
loop
hlt
jl
xchg
fldl
mov
or
pop
mov
in
pop
inc
adc
call
mov
hlt
mov
jecxz
insb
popa
sbb
pop
adc
add
push
popa
pop
mov
pop
inc
or
inc
lahf
dec
sbb
push
mov
mov
mov
sub
push
jge
mov
or
adc
inc
pop
imul
jb
cmp
xlat
cmp
pop
pop
test
push
sub
dec
clc
lea
sub
or
jge
mov
fbld
mov
add
jmp
add
call
push
push
add
or
push
daa
pusha
jl
pop
js
mov
clc
jg
mov
movb
mov
sbb
lret
pop
ret
aas
mov
lea
cmp
js
cmp
das
fdivrl
sub
add
cld
mov
push
stos
push
sbb
es
pop
or
ja
mov
push
mov
aad
loope
addl
sarb
push
push
jle
ficompl
or
mov
jne
dec
dec
pusha
fldcw
fsubrs
fiadds
push
xchg
jb
hlt
mov
sub
fimuls
push
push
push
cmp
ja
sbb
push
sbb
pop
out
jmp
ss
sbb
clc
push
cmp
jl
mov
outsb
fcoms
xor
mov
pop
add
pop
mov
mov
mov
les
dec
hlt
ss
cmp
jno
fisubrs
adc
dec
lods
add
aaa
pusha
push
add
addl
pop
push
mov
push
mov
fbstp
pop
add
add
roll
or
xlat
push
movb
in
mov
dec
jl
jae
fadd
lcall
push
inc
aas
push
push
pop
cltd
pop
dec
cmp
cmpsl
jo
push
mov
dec
xlat
pop
pop
fsubrs
test
icebp
pop
sbb
inc
or
mov
push
nop
sbb
icebp
pop
divb
push
std
and
push
cmp
je
cmpl
lock
mov
push
jne
push
call
cmp
std
pop
dec
test
push
mov
push
lock
pop
pop
pushf
pop
sub
mov
mov
pop
or
inc
clc
outsb
mov
add
and
and
pop
enter
fdivs
jle
dec
mov
shlb
adc
sbbl
xchg
add
jns
add
jo
rolb
loopne
mov
add
add
push
fdivl
mov
movsl
pop
push
push
mov
xor
imul
adc
ret
lea
mov
jle
push
mov
lcall
sahf
ret
out
push
dec
jge
jmp
inc
add
sbb
mov
adc
outsl
adc
mov
lea
mov
add
xchg
loopne
push
sub
hlt
jne
dec
sub
shll
or
or
int3
out
test
mov
pop
mov
cmp
add
out
fiaddl
rcrb
rorl
sbb
pop
cwtl
add
mov
sti
jl
jge
push
adc
push
push
jecxz
orl
ret
pop
mov
pop
xor
fidivs
push
cmc
iret
andl
dec
lock
jge
lea
push
mov
cwtl
mov
add
push
pop
pop
dec
call
sub
and
lahf
add
push
push
jl
sub
cwtl
inc
push
add
or
or
xchg
int3
pop
jbe
mov
mov
pushl
jg
fwait
mov
out
xor
or
jmp
mov
decb
repz
xor
std
imul
pop
pop
pop
addr16
pushf
mov
lods
fstpl
inc
push
shl
xor
sbb
fxch
sbb
fistl
test
lret
mov
xchg
dec
xor
cmpb
pop
push
pop
jmp
pop
xor
mov
and
mov
insb
pop
jno
pushf
js
xchg
or
sbb
push
clc
dec
push
mov
arpl
lret
push
sbb
cmp
or
cmp
int3
push
and
and
sbb
nop
sbb
test
inc
orl
aad
shl
add
sbb
fisubl
jbe
xor
dec
cmp
push
push
pop
lea
sbb
mov
sub
mov
and
jno
je
dec
ret
sahf
add
outsb
out
sbb
into
ret
jne
xor
jb
lea
mov
inc
cmp
imul
iret
push
data16
or
jecxz
out
sbb
call
and
lods
enter
push
inc
fisttps
inc
add
push
aas
or
or
mov
xor
pop
adc
mov
add
cmp
push
mov
outsl
fimull
push
add
or
nop
sub
ss
adc
jb
add
lcall
sbb
mov
pop
and
pop
and
push
jl
sbb
pop
sbb
pop
ret
shll
jg
pop
js
pop
lock
or
cs
daa
sub
pop
pop
pop
cwtl
push
xor
outsb
adc
ds
fildl
aas
mov
xchg
inc
cmp
mov
or
push
clc
and
outsl
stos
divb
je
or
push
or
jne
sbb
push
add
aam
fnstsw
pop
mov
adc
push
fsubrs
sbb
mov
pop
testb
cmp
push
push
sub
in
cmp
in
push
out
xlat
std
cmpl
and
jle
lock
out
adc
jg
dec
or
jmp
ret
pop
add
jne
test
adc
sarb
rcr
jle
repz
dec
push
inc
jecxz
mov
push
pop
cmpb
jl
cmp
mov
je
add
jg
fidivl
jmp
mov
push
mov
shrl
xchg
jne
mov
ror
ret
xor
movb
jno
add
cmp
or
or
mov
dec
adc
jg
push
loopne
push
add
repnz
push
rcl
incb
and
and
adc
inc
jle
mov
mov
fwait
loopne
mov
sub
mov
cmp
lods
lock
push
mov
ret
test
idivl
int3
jo
mov
movzbl
neg
sbb
and
mov
sbb
dec
int3
fsubrs
scas
xlat
and
pop
sbb
push
cmpb
test
sahf
in
out
daa
adc
mov
shr
ret
into
push
test
adc
cmp
sub
stc
fcmovnu
xchg
xorl
mov
imul
adc
fldz
movl
fcomp
mov
in
xor
addr16
movsl
mov
sub
lods
aaa
sub
sub
faddl
pop
push
sarl
adc
aad
clc
fwait
push
or
pop
iret
repz
sub
ret
into
sarl
or
cmp
sbbl
repz
sbb
and
and
cmp
mov
push
pusha
lea
shlb
sub
popf
repz
out
icebp
mov
movb
add
and
or
out
push
jns
adc
nop
xchg
enter
aam
mov
dec
push
mov
mov
pop
push
lea
push
push
push
add
push
test
mov
dec
cmp
out
jp
je
dec
aam
inc
inc
push
inc
lret
imul
mov
jl
and
pop
sbb
sbb
push
fdivr
add
sbb
jge
sbb
js
jle
scas
andb
mov
movsl
popf
lret
xchg
mov
adc
test
in
add
add
lock
push
push
push
fnstsw
insl
jle
ficompl
add
pushf
fwait
mov
test
push
pusha
mov
pop
sbb
or
jl
rolb
dec
sub
loop
or
mov
insl
ret
jle
rcll
mov
push
mov
fs
add
lea
push
xchg
xchg
lahf
jbe
sbb
movsb
shl
mov
sub
inc
call
mov
out
sbb
xchg
and
rclb
and
enter
sbb
adc
cmp
rclb
dec
repz
lods
inc
sub
dec
ffreep
orl
xchg
add
enter
testb
addr16
je
ljmp
jecxz
insl
push
mov
in
pop
pop
dec
in
cmp
push
push
push
push
cmp
inc
pushf
cmp
je
lds
push
in
inc
inc
add
mov
xchg
pushf
push
mov
lahf
gs
jle
cmp
add
ret
add
sub
and
ret
or
jne
mov
cli
adc
pop
and
test
hlt
dec
fnstcw
scas
inc
mov
sub
rcll
and
inc
fcoms
xchg
cmp
pop
inc
sub
out
fistpll
inc
mov
insb
push
dec
dec
mov
push
push
xor
push
push
lea
sbbb
imull
inc
inc
insb
sbb
rcrl
rcrl
mov
ss
sub
xor
sub
mov
dec
mov
sahf
inc
add
mov
cmp
adc
add
push
pushf
in
fistpll
andl
rorl
test
or
push
out
out
repz
sbb
push
adc
xor
cmp
inc
or
jle
cmp
jae
push
stos
aaa
popf
test
jno
outsl
adc
or
inc
neg
cli
mov
sbb
out
and
add
sbb
push
sbb
or
jg
mov
mov
adc
cwtl
push
xor
adcb
push
sarb
adc
test
add
addb
pushf
lock
movzbl
les
scas
mov
repz
xor
and
sub
mov
iret
xor
adc
push
out
pusha
lock
adc
inc
mov
dec
inc
and
push
adc
data16
mov
mov
cwtl
add
jmp
lret
xor
cmp
push
pop
push
push
push
and
jbe
push
inc
mov
sbb
push
jo
lret
push
mov
xchg
loop
ss
and
lds
jo
xchg
pushf
mov
xchg
xchg
shlb
loop
pop
call
jg
push
sarl
clc
add
inc
pusha
pusha
pushl
cmpl
daa
call
sub
aad
jl
cld
jb
jg
jmp
pop
or
push
pop
sbbb
push
inc
pop
stos
adc
sarb
fs
mov
lea
push
and
inc
sahf
fldz
fdivp
jb
xor
adc
imul
dec
mov
sahf
pop
flds
popa
in
sbb
clc
and
ljmp
mov
int3
add
push
es
xchg
nop
sbb
sub
clc
inc
and
push
mov
stc
xor
sahf
sub
jno
xor
fsubp
pusha
and
or
stos
or
push
sub
cwtl
shufps
movl
imul
mov
addl
enter
adc
add
les
pop
jns
lods
and
xchg
xor
inc
sub
mov
nop
add
incl
mov
or
sbb
je
push
dec
push
inc
mov
push
sub
addb
fmul
js
inc
inc
lahf
push
shlb
fcoml
pop
push
pusha
adc
add
and
loopne
mov
sahf
push
cmp
pop
sub
push
push
lea
aam
fcoms
fsubrl
push
cmp
fs
push
add
add
push
out
mov
cmp
or
in
jnp
jg
cmp
addl
or
sbb
push
or
add
inc
push
pop
out
mov
shl
adc
enter
xchg
adc
mov
mov
test
mov
xor
aaa
inc
aad
push
push
push
and
daa
xchg
in
jns
push
sbb
xor
adc
je
push
mov
jbe
mov
sbb
test
aaa
xor
add
in
lcall
inc
lock
pop
fldl
fmull
add
xchg
ret
loope
add
inc
jl
add
inc
les
mov
or
dec
rcll
adc
push
xchg
adc
popa
shll
and
add
mov
popa
mov
enter
ds
pop
mov
aas
push
xlat
mov
addl
adc
insb
rorb
mov
xchg
and
mov
push
mov
pop
pop
dec
push
add
push
mov
sub
or
cmp
adc
inc
lock
and
adc
push
or
jp
xchg
loope
add
mov
sbb
test
add
mov
add
adc
push
inc
bound
insb
cmp
cwtl
sub
ficompl
movsb
mov
data16
push
xor
push
scas
pop
ss
xchg
add
mov
je
mov
jge
call
lock
push
loopne
or
or
sub
sub
push
pop
inc
test
add
cmp
fs
mov
push
push
and
push
dec
jecxz
ret
bound
call
loope
adc
loope
ret
xor
push
imul
inc
mov
inc
bound
aaa
movsl
outsb
test
addr16
push
push
loope
push
dec
out
or
outsb
cmp
adc
xor
sbbl
jl
lret
xchg
jge
jo
inc
inc
push
sbb
mov
pop
dec
subl
das
insb
movsl
lea
int3
test
dec
add
push
out
xchg
add
enter
xor
popf
test
pop
inc
jno
or
in
sub
jle
mov
and
add
cmp
inc
bound
sbb
mov
dec
add
cltd
and
sar
lea
in
and
daa
jl
push
mov
add
adc
idivb
mov
ds
rorl
sarb
sar
mov
shr
add
mov
imul
push
std
mov
sbb
jle
imul
test
imul
icebp
mov
divl
inc
testl
add
bound
mov
sub
sub
jo
cld
daa
mov
je
cmpl
clc
pop
pop
outsl
or
xor
jne
xor
jmp
sub
inc
dec
dec
xor
fisubrl
out
test
push
into
sbb
mov
stos
ja
and
jmp
or
jl
fistps
fisubrs
sbb
lock
inc
lock
inc
inc
pop
mov
inc
repnz
rcll
adc
test
sbb
or
hlt
pop
je
fldz
inc
fstpl
push
int3
je
jo
fisubrl
sahf
hlt
sbb
inc
roll
es
int3
jl
cmp
int
lcall
add
sbb
ds
inc
jo
xchg
sub
cmp
push
add
jl
insl
sti
or
mov
push
jle
cmp
nop
add
xchg
sbb
and
adc
ljmp
lods
pop
lea
cmp
or
out
or
idivl
jge
jmp
mov
pop
nop
sbb
dec
nopl
faddl
add
mov
sub
xor
mov
stc
sti
and
fdivrp
shll
mov
test
sbb
icebp
push
les
xchg
add
jns
inc
js
ret
adc
fsubrs
xchg
imul
js
bound
mov
mov
je
lock
adc
je
mov
jo
add
ds
dec
xchg
sahf
add
mov
enter
sar
push
pop
movb
imul
leave
jge
and
enter
add
subl
sbb
ljmp
mov
push
roll
mov
xchg
mov
call
add
or
xchg
xchg
add
and
adc
xor
ret
cmp
shrd
add
lock
pop
xchg
xor
daa
test
or
addb
mov
shll
les
pop
imul
sub
int3
push
cld
inc
dec
inc
jg
orl
sbb
add
xor
xor
and
xchg
jne
mov
fisttpl
sbb
mov
mov
or
jmp
rcrl
pop
xchg
pop
add
or
and
inc
mov
jns
rolb
xor
or
add
iret
pop
clc
ret
push
sahf
nop
sbb
or
xchg
adc
push
mov
add
push
push
add
mov
pop
andb
push
push
test
push
enter
popa
inc
xchg
fisttps
jg
push
add
push
or
nop
mov
mov
dec
or
lods
outsb
cmpsb
xchg
fstpl
inc
data16
cmc
cmp
dec
test
dec
sahf
adc
roll
push
fiaddl
or
inc
push
in
push
mov
sbb
push
pop
push
adc
inc
pop
inc
test
aam
pmulhuw
shrb
adc
push
xchg
sbb
fadds
push
cmp
dec
sub
jb
mov
mov
inc
push
jle
inc
leave
add
pop
adc
cmp
pop
and
inc
xchg
push
add
pop
ret
scas
inc
cs
lahf
or
or
aad
dec
and
fisttpll
clc
add
xchg
pop
and
dec
and
jle
dec
aad
and
cmp
setb
push
das
scas
push
mov
sub
cmp
setae
pushf
sub
fiaddl
inc
add
add
addr16
push
movl
hlt
mov
nop
or
insb
lret
jno
jno
pop
cmpsb
and
call
jl
pop
iret
sub
cmp
mov
xchg
enter
sub
push
push
cltd
add
push
aad
push
or
es
pop
pop
lock
je
pop
je
shl
lock
push
inc
cld
jecxz
mov
mov
xor
push
push
loopne
or
stos
outsb
subb
add
imul
mov
int
cmc
mov
adc
ss
pushf
xor
xor
inc
push
push
xor
push
inc
xchg
sbb
mov
pushf
jns
or
jp
or
daa
call
pop
mov
lret
in
pop
adc
mov
mov
incl
movzbl
or
fldcw
outsl
mov
test
lods
stos
adc
testl
add
add
jbe
adc
sub
add
movsb
loopne
aas
pop
push
enter
psrlw
push
mov
adc
adc
jb
pop
inc
and
dec
outsb
out
pop
ret
aas
or
push
rcll
mov
adc
shll
sbb
add
xchg
out
movl
mov
fs
es
pusha
jmp
scas
insl
jp
add
cmp
inc
xor
movsl
pop
xor
enter
sub
push
cmp
dec
jmp
idivl
jo
adc
cltd
popa
push
scas
nop
ljmp
xor
ror
jo
pop
push
xchg
sub
or
or
daa
xchg
sar
or
xchg
xor
popf
nop
cmc
daa
call
pop
ss
mov
ret
and
mov
scas
test
test
add
mov
aam
pop
and
push
adc
mov
push
lahf
lods
fldenv
ret
and
mov
repz
in
or
fsubrl
ds
push
ja
lahf
shrl
fmuls
mov
or
push
adc
roll
dec
push
and
inc
leave
pop
or
jbe
shll
mov
cltd
dec
add
mov
mov
sub
and
gs
and
pusha
sub
push
je
jnp
addb
pop
push
jg
cmp
cwtl
daa
xor
sub
push
sbb
je
shll
outsl
jmp
mov
jnp
out
mov
sub
and
pop
push
jl
jl
aad
cmp
mov
jmp
and
out
mov
outsl
mov
loopne
push
sbb
dec
and
lahf
jne
out
jle
cs
popa
or
hlt
jmp
push
cli
dec
aaa
cmpsb
dec
xchg
xchg
popf
pop
rcrb
dec
mov
push
popf
ljmp
mov
pop
sub
jge
test
xor
mov
aaa
pop
outsl
jo
and
and
and
or
add
push
cwtl
xor
xor
add
nop
add
mov
pop
push
xor
jns
add
add
pop
mov
add
or
inc
jmp
es
ja
push
sbb
daa
cmp
jmp
push
aad
add
xchg
add
add
fistpl
in
jb
mov
adc
push
add
cmpl
push
jb
pop
or
xlat
or
adc
add
xchg
sub
es
sub
aad
ja
pop
push
and
xor
push
push
xchg
pop
add
sub
or
mov
and
sub
and
imull
imull
mov
scas
inc
and
mov
inc
js
push
sub
pop
test
or
push
add
movsb
loopne
push
push
mov
mov
pusha
lock
jl
leave
lds
mov
jo
iret
in
in
adc
dec
add
fdivl
jnp
cmpsl
aaa
pop
sti
rorb
js
pop
movl
aas
pop
add
jne
xor
sbb
mov
movntq
fidivs
sbb
dec
add
push
pusha
sub
adc
and
mov
push
push
icebp
sahf
fdiv
or
adc
sub
xor
push
rol
lret
push
rorb
fs
jg
lock
cmp
jne
movsl
push
imul
sub
add
jg
lea
dec
adc
leave
pusha
movsl
cmc
cmpl
sub
and
jae
cmp
jns
and
xor
pop
rcll
sbb
pop
out
shl
lcall
mov
dec
sbb
jo
dec
and
and
in
pop
in
pop
sub
stos
sub
and
xorl
in
leave
jge
pushf
pop
dec
dec
xor
test
sub
aaa
cwtl
adc
xor
inc
xor
push
push
xor
push
in
push
lods
lcall
cmp
stos
inc
loopne
xor
aad
pop
inc
sub
lcall
mov
push
test
cmp
dec
adc
mov
add
and
nop
jl
push
stc
or
pandn
mov
adc
push
sarb
cmc
xlat
rdmsr
movl
push
js
or
mov
imul
pop
push
nop
or
andl
push
mov
in
rclb
stos
or
clc
and
adcl
inc
dec
inc
mov
sub
ja
pusha
inc
out
xor
int
psubusb
push
aaa
sbb
pusha
and
lahf
cmp
or
xorl
inc
and
ja
loop
movsb
fsts
or
test
je
push
mov
and
mov
repnz
lret
jle
cltd
push
sbb
mov
dec
mov
ljmp
ret
adc
mov
or
imul
mov
insl
out
mov
roll
mov
cmp
pop
inc
or
sbb
repnz
sub
push
orl
or
enter
mov
push
jp
cmp
jge
push
loope
pop
push
push
or
jo
aad
pop
xorb
loope
js
mov
insb
jl
add
fdivrp
xor
ret
call
inc
xor
std
push
rclb
sbb
or
in
js
cmc
divl
pop
add
pop
push
jnp
lods
add
jno
push
jno
push
aad
mov
or
sub
pop
sub
aaa
rolb
xor
adc
and
push
xor
xchg
cmp
mov
sub
xchg
push
stc
rcl
sub
test
xor
sti
pushf
adc
sbb
add
sbb
arpl
push
pop
add
xor
mov
and
and
jecxz
and
inc
in
loopne
fwait
lods
dec
push
push
fbld
inc
and
add
testl
adc
aas
pop
adc
mov
pop
sbb
popa
mov
lds
dec
adcl
adc
repnz
rclb
das
rcrb
int3
adcl
test
jns
push
mov
push
imul
lock
or
push
icebp
je
xor
sbbb
adc
sub
gs
rcrb
adc
or
adc
jle
sub
xchg
pushf
or
and
test
enter
scas
push
mov
push
movsl
push
push
rorb
push
inc
and
push
pop
add
add
notl
cmp
xor
sbb
js
xchg
adc
push
xchg
pop
jmp
mov
push
add
push
and
ds
jle
xor
add
push
xor
inc
stc
xchg
or
cli
xor
push
mov
or
fcomps
and
or
xchg
pusha
jecxz
mov
push
sub
rolb
jns
arpl
dec
xor
jmp
and
push
or
cmpb
nop
cmp
xor
test
push
inc
shlb
inc
mov
push
popa
cmp
inc
sbb
sbb
test
pushf
cmp
xor
lods
out
pop
pop
push
mov
xor
inc
dec
xor
movsb
lahf
shlb
shrb
lea
cmp
add
xor
leave
test
xchg
leave
fsubs
rolb
jg
lds
or
insl
pop
jge
pop
pop
movsl
lods
je
or
pop
movl
inc
sub
push
and
cmp
and
cmp
push
enter
ret
hlt
addr16
cmp
mov
sbbl
andl
in
xchg
adc
dec
push
pop
ljmp
mov
jo
fisubl
out
sub
sub
or
data16
mov
jle
jle
inc
cmovl
ja
cmp
pushf
add
pushf
mov
xor
in
adc
xchg
cmp
mov
aam
movsb
addb
ja
mov
cmpsl
sbb
jbe
mov
lidtl
mov
call
ja
pusha
add
fmull
in
push
lret
mov
xor
jno
push
push
xchg
push
push
outsl
add
sub
mov
popf
or
push
mov
sub
mov
ljmp
or
jnp
adc
mov
inc
das
or
outsb
or
push
insb
jo
xor
ljmp
push
jg
add
sbb
adc
aaa
inc
sbb
mov
int
push
inc
sub
and
cmp
into
adc
jns
and
fwait
pop
jle
mov
rol
mov
push
add
xor
lahf
popa
fstps
out
pop
lds
aam
sbb
xlat
pop
dec
inc
xor
sub
add
cmp
daa
add
out
pop
adc
push
push
xor
and
or
add
add
sbb
pushf
fstps
loop
push
mov
add
add
push
sbb
add
test
and
dec
stos
mov
out
notb
in
fs
sar
stc
and
es
sub
iret
sbb
sahf
mov
orl
shlb
pusha
fcmovnbe
xchg
cmpsl
push
pop
pop
push
mov
adc
or
test
je
popf
and
mov
dec
ret
cmp
dec
inc
mov
gs
je
dec
dec
push
sbb
ret
cmp
pop
icebp
call
jo
in
sbb
jl
adcb
mov
or
jl
pop
push
jmp
mov
scas
xor
or
xchg
sahf
daa
xchg
adc
push
jmp
add
push
sbb
xlat
add
or
ds
push
mov
add
pusha
jns
pop
aaa
jp
movsb
or
je
mov
sub
or
sti
jo
push
push
iret
cmpl
pop
cmp
dec
ds
dec
and
fmull
or
pop
adc
cmpb
scas
adc
imul
movsb
lret
adc
xor
xchg
cld
xchg
fs
pusha
cs
push
inc
and
filds
cltd
inc
lods
add
and
fs
xchg
aas
imul
adc
or
cmp
movsl
insb
out
jo
and
dec
push
adc
and
insb
mov
mov
push
adc
or
nop
adc
adc
andl
and
and
jae
dec
rclb
pop
adc
js
push
add
jb
inc
sub
ret
gs
movsl
mov
pushf
and
stos
adc
roll
pushf
adcl
leave
inc
cmp
std
in
pop
repnz
xchg
adc
cmp
sbb
dec
sbb
add
inc
or
adc
sti
mov
push
xchg
mov
pop
rcr
inc
sbb
pop
sbbb
inc
ja
std
and
push
mov
cmp
mov
clc
add
push
stos
sbb
sbb
cmpsb
xor
and
aad
lea
shl
lret
les
fcomps
cmp
sbb
jae
and
sbb
push
leave
movsb
pop
cwtl
push
orl
test
lods
rcr
jno
mov
sbb
xor
fiadds
clc
mov
push
mov
jge
dec
xchg
sub
sbb
push
or
inc
xor
push
imul
mov
jo
dec
enter
es
das
es
lock
xchg
ds
movsb
mov
hlt
jne
mov
or
add
sbb
cmp
cwtl
cwtl
js
cmp
shrb
push
xor
jg
push
add
pop
cltd
data16
push
push
push
pop
inc
push
lea
push
push
pop
sbb
push
lds
jmp
adc
add
ret
dec
mov
out
jbe
push
sub
or
push
add
sarb
shll
imul
sbb
rol
xchg
pop
and
push
pop
jl
les
pop
or
and
sub
mov
push
add
adc
xor
outsb
pop
adc
test
add
jo
push
sahf
push
shrl
xchg
xor
je
pop
push
shrb
imulb
push
test
bound
push
and
push
lds
shrb
mov
sbb
pop
xchg
and
add
inc
movsl
je
lods
jle
dec
clc
cli
inc
add
sub
push
iret
out
and
dec
pop
push
add
pusha
cmp
cmp
test
dec
shl
out
mov
jle
clc
jg
pop
jns
cmp
mov
add
lods
pop
imul
dec
psubd
xorl
jne
push
test
jg
jmp
sbb
inc
xchg
fdivrs
push
xor
mov
jb
cmp
or
enter
push
mov
scas
imul
cmp
aad
cltd
xor
je
lahf
jb
pop
std
mov
cmp
add
imul
add
mov
xchg
cmp
lea
jl
mov
jle
push
sub
or
push
addl
mov
xorl
xorl
addr16
cs
addl
sbb
je
jg
repnz
sbb
in
add
inc
sub
mov
dec
add
add
and
add
push
leave
faddl
jmp
lods
add
push
leave
call
lods
inc
jb
xchg
pop
icebp
test
movsb
sbb
fistl
adc
ss
cmp
or
shlb
push
sub
fadds
iret
pusha
add
sbb
daa
add
mov
or
lods
pop
lcall
mov
push
sbb
push
xlat
and
push
or
mov
push
je
jo
xor
ja
or
lret
push
loop
cmp
jnp
bound
jbe
mov
sbb
cmp
leave
push
shll
es
pop
movsl
jo,pt
cli
sbb
fmull
jecxz
or
adcl
sbb
std
cmp
jle
mov
push
sbb
pushf
jl
add
or
scas
rolb
sbb
push
adc
dec
scas
negb
fistpl
adc
ss
sbb
dec
rcl
pusha
mov
add
fs
aad
imul
sbb
das
jl
mov
sbb
pop
push
imul
in
ret
pop
test
ja
dec
leave
inc
pop
push
stos
addb
loop
sub
dec
mov
jle
pop
cmc
add
inc
add
int3
cld
cmpl
dec
cld
lea
sub
pop
mov
dec
jb
sbb
loopne
cmp
dec
push
dec
or
jo
cmc
or
sbb
or
pop
data16
mov
cld
mov
shrl
fsubl
cmp
enter
sbb
xchg
icebp
test
inc
push
rclb
or
adc
xorb
or
pop
cmp
nop
and
push
dec
add
fcompl
in
mov
xchg
std
stos
mov
inc
pop
not
push
jb
jno
cmp
push
xorl
and
fadd
or
push
test
inc
scas
stos
or
push
shrb
xchg
mov
dec
inc
leave
pusha
push
xorl
rorb
sahf
adc
mov
mov
dec
call
test
or
xchg
xor
inc
xor
lea
xor
cmp
add
aad
cmp
insb
mov
rcrb
add
inc
pop
hlt
data16
je
aas
add
cmc
sub
fsubr
push
push
mov
shlb
lea
push
push
lcall
push
rolb
mov
xchg
cmpsl
nop
cmpsb
sbb
add
jmp
cld
jbe
adc
insl
insb
ss
push
push
mov
push
and
xchg
movsl
mov
pop
push
fs
repnz
xor
rcll
push
jge
inc
jo
mov
and
push
in
call
in
mov
inc
add
mov
ror
fwait
inc
add
jle
test
push
sbb
mov
jg
cmpsb
sbb
ljmp
and
ret
push
aam
add
and
inc
dec
loopne,pt
pop
and
dec
add
clc
ja
mov
and
inc
sub
dec
push
sub
xorb
xor
or
inc
addb
test
dec
loop
rorl
sahf
cmp
stos
dec
ret
inc
or
adc
jb
push
push
sbb
xor
xchg
xchg
dec
pop
and
xor
xchg
adc
and
inc
cs
adc
ja
dec
cwtl
or
push
jmp
mov
dec
setge
lea
jo
insl
jnp
xchg
icebp
or
ljmp
dec
jne
push
dec
repz
mov
sbb
mov
or
jl
cwtl
jge
test
loopne
lldt
movsb
inc
mov
jge
and
shrb
shlb
clc
xor
out
testb
cmp
enter
sbb
sbb
imul
mov
subb
xchg
sub
in
mov
pop
mov
xchg
sbb
pop
add
push
push
bound
mov
xchg
test
pushf
dec
test
movsl
insb
or
pop
inc
xchg
sub
xchg
lahf
nop
xchg
sbb
lea
mov
mov
push
push
dec
mov
outsb
call
dec
cmc
xchg
adc
push
push
push
cmp
gs
test
mov
ret
mov
or
movsb
mov
pop
fiadds
inc
and
xchg
cli
add
pop
fs
push
mov
or
add
xchg
add
or
xor
loope
inc
mov
mov
xchg
adc
jle
xchg
xor
push
mov
or
aas
rcrl
inc
into
cmp
aaa
je
test
mov
pop
and
mov
add
xchg
orb
dec
cmp
xor
popa
mov
push
out
push
dec
xor
fsubrl
jnp
rolb
dec
inc
xchg
shrb
lahf
xchg
mov
ret
sti
fbstp
addb
mov
lods
rorl
jo
mov
add
aam
cmp
sub
sbb
mov
clc
xor
xor
add
jge
int
clc
add
es
push
ss
jl
je
ja
lock
rorb
mov
push
and
mov
add
aaa
pop
dec
inc
mov
add
call
das
cmp
mov
mov
pop
mov
jmp
mov
lea
lea
mov
pop
adc
ficoml
lea
ret
mov
jge
mov
push
or
push
hlt
sub
xchg
adcl
out
pop
add
mov
pop
mov
cmp
jne
mov
sbb
cli
dec
jle
jl
iret
xor
out
sub
mov
sbb
jmp
push
pop
loop
daa
cmp
push
and
rorb
leave
sbb
and
push
push
inc
or
sbb
js
mov
movsl
mov
push
mov
or
pop
orl
add
push
cltd
dec
xor
sahf
jne
call
mov
stos
lcall
push
decl
adc
jle
adcl
hlt
call
je
cmpb
pop
sahf
adc
mov
sbb
lea
add
cmp
scas
adcl
sti
jo,pn
sub
add
sub
sbb
loopne
lret
pusha
add
cmp
xchg
movsb
mov
inc
push
push
pop
or
cmp
jge
adc
adc
cmpl
scas
mov
inc
push
push
lds
pushf
xchg
mov
dec
mov
add
pushf
aaa
gs
je
inc
sbb
push
fisubrl
push
es
btc
or
pop
outsl
sahf
jl
mov
push
jg
push
add
push
cs
cmpsl
dec
add
push
ret
pushf
fisttpl
fists
fldl
or
enter
pop
out
adc
jb
add
pop
jmp
jae
cwtl
push
dec
push
ret
mov
test
pop
and
mov
lds
les
stos
ret
or
and
ljmp
jae
outsl
andb
lcall
push
adc
adc
dec
push
rolb
imul
xchg
pusha
rclb
pop
inc
dec
loope
popf
sub
rcrl
adc
add
xchg
jb
gs
adc
add
rcll
adc
mov
jns
mov
in
jno
addb
mov
inc
cmp
or
pusha
inc
push
and
dec
push
jmp
mov
sub
sub
or
inc
sbb
ret
incl
cmp
repnz
pop
and
sbb
add
mov
addr16
add
mov
jge
jae
outsl
add
mov
jl
mov
mov
divb
dec
lea
cmp
jle
pusha
sub
cmp
jle
jp
xorb
lea
loopne
xor
mov
jo
dec
or
pop
adc
aad
inc
inc
ss
mov
lea
rcrb
jmp
mov
or
jl
orl
pushf
in
rcrl
stos
dec
flds
push
add
and
jne
enter
add
into
cmp
int
mov
mov
inc
jns
push
mov
rcrb
or
daa
aaa
je
xchg
xlat
mov
mov
movl
and
cwtl
inc
or
pop
enter
movl
ja
dec
jle
sbb
jle
imul
pop
inc
mov
cmp
pusha
add
lcall
cmp
dec
push
mov
popa
pop
pop
lahf
sub
xchg
gs
mov
mov
add
jle
mov
addr16
push
xchg
mov
mov
aam
imul
lret
dec
push
insl
clc
lods
push
xor
filds
sub
sbb
pushf
add
decl
xchg
lods
and
mov
sbb
adcb
lock
sbb
pop
loope
push
mov
xor
push
push
push
ficoml
sub
test
or
inc
sbbb
xor
sub
push
xchg
xchg
add
adc
dec
sbb
push
sti
lret
out
jl
cmp
jecxz
xor
test
hlt
adc
xor
sbbl
sti
cs
imul
nop
stos
fildl
add
stos
rol
cmp
mov
test
jmp
push
out
sbb
push
adc
fistps
sbb
jno
loopne
ficomps
inc
pop
mov
xor
add
jge
clc
cmp
xchg
inc
rcll
int
cwtl
test
pop
sbb
adc
mov
xchg
mov
test
mov
adcb
add
aam
mov
push
xchg
mov
xor
and
push
test
pusha
sbb
mov
sub
decb
mov
unpcklps
mov
leave
or
add
inc
test
inc
or
inc
and
call
pop
or
push
rorb
xchg
out
dec
cltd
sub
sub
repnz
adc
push
push
sbb
icebp
adc
xor
xor
sbb
cld
cmp
jge
mov
push
jnp
push
sub
lock
dec
xor
xchg
dec
stc
adc
cmp
xchg
or
xchg
mov
jecxz
sub
aaa
add
adc
inc
xchg
xchg
inc
sub
sub
in
and
pop
popa
inc
enter
rolb
sbb
xor
sbb
rclb
mov
push
inc
stos
sbb
dec
adc
test
dec
fimull
xor
repz
mov
inc
add
sub
and
pop
pop
push
bound
fiadds
fwait
sbb
cltd
mov
jmp
add
xor
jne
mov
scas
sub
sbb
sub
cmp
mov
movl
add
stc
add
or
js
xchg
mov
hlt
and
adc
push
sbb
sub
pop
push
push
xchg
fists
loope
imul
adc
inc
push
lods
inc
push
push
cmp
sub
xor
popa
test
sti
mov
or
jne
adcl
inc
imul
pop
std
or
pop
add
daa
mov
sub
lahf
pop
rcll
push
or
push
xor
jno
out
fnsave
insl
or
movl
fs
sbb
inc
push
add
dec
pop
or
push
fcomps
lds
and
push
mov
or
inc
xor
mov
ds
inc
popa
jle
jo
push
enter
leave
jp
adc
mov
test
and
imul
in
pushf
dec
fwait
mov
pushf
sub
lds
and
jl
inc
and
mov
js
inc
pop
mov
lock
push
cmp
sub
push
xor
mov
push
mov
or
xchg
mov
mov
and
add
mov
jl
add
clc
jo
insl
sbb
test
cmp
add
daa
lds
inc
in
sub
das
push
fimuls
lret
cmp
push
or
pop
inc
lea
push
lret
xchg
flds
and
adc
inc
push
push
adc
dec
inc
xor
mov
cs
cmpsb
mov
xorb
xchg
shlb
xchg
cmp
dec
ret
test
movsb
push
rolb
and
cltd
sub
sub
adc
scas
inc
ret
call
leave
push
adc
mov
sbb
lock
sbbb
mov
enter
jae
or
repz
and
add
rcll
adc
mov
inc
shr
jne
pop
push
enter
adc
sar
push
mov
dec
mov
nop
mov
push
daa
add
sbb
add
push
jmp
popf
movsl
sbb
sub
inc
subl
push
push
pop
sub
cli
sub
mov
aaa
lahf
cmp
adc
or
sti
pushl
mov
dec
clc
or
inc
stos
push
add
shll
fmuls
movsb
in
inc
push
mov
ficoms
adc
add
ret
repz
add
xlat
dec
out
xlat
ss
pusha
mov
ror
jmp
stc
sbb
rcl
pop
aam
or
repz
ret
insb
out
mov
or
js
test
shll
bound
pusha
xor
adcb
inc
shl
or
xchg
sub
repnz
mov
dec
and
and
js
xchg
adc
in
xchg
xchg
int
dec
aad
inc
inc
or
pop
or
in
push
jge
mov
lock
push
lcall
subb
bound
inc
or
loop
cld
lret
cmp
cld
inc
js
or
push
popf
mov
add
iret
push
repnz
xor
pop
add
adc
nop
addr16
push
jo
dec
or
xchg
adc
cmp
incl
add
sbb
int3
and
cmpsb
push
push
nop
jo
cmpsb
es
ret
sbb
mov
inc
or
or
test
sbb
jl
divb
or
lea
aaa
test
add
rcr
or
rcr
jg
or
push
adc
incb
jb
pop
pop
clc
jg
jmp
jmp
mov
sub
inc
sub
add
or
pop
sbb
xor
pop
add
out
xchg
push
ret
mov
sti
aaa
or
sti
sub
imul
add
in
or
and
mov
adcb
push
clc
sub
lret
add
add
pop
mov
add
pop
out
sbb
punpcklwd
push
movsb
mov
cmp
cmp
imulb
imull
pushf
cli
pop
gs
pop
add
pop
push
out
and
cmovo
fwait
pop
lock
push
push
push
or
mov
ljmp
add
sbb
mov
dec
mov
inc
mov
mov
std
insb
sub
and
andb
sbb
sti
dec
or
add
xor
in
shlb
push
fdivr
inc
adc
lea
jmp
out
filds
dec
mov
mov
lret
inc
rorl
ret
test
hlt
in
inc
or
pop
adc
in
loopne
enter
push
mov
or
adc
ffreep
pop
jp
std
and
inc
insb
adc
and
ja
jecxz
pushf
adc
popa
cmpsl
sub
notl
mov
cmpsl
test
in
push
pop
jo
jmp
or
or
xchg
pusha
pop
pusha
pop
push
mov
inc
add
mov
or
pop
movl
jmp
add
sbb
faddp
add
cmp
or
je
sub
imul
mov
arpl
mov
lret
inc
in
mov
push
xor
xor
call
out
es
lods
adc
xchg
dec
test
push
fimull
push
outsl
mov
push
push
sub
inc
cmp
add
pusha
ds
insl
inc
aad
sbb
or
pop
pop
push
push
add
cmpsl
inc
mov
jge
pusha
cwtl
or
cltd
pop
das
or
push
mov
sbb
cmpl
pop
es
cmp
cmp
mov
dec
add
shll
fwait
add
mov
inc
sbb
sahf
cltd
add
push
xor
sbb
jg
lock
call
push
nop
fadds
xchg
ds
or
push
inc
xor
xchg
cmp
lret
push
mov
sbb
pop
sbb
xor
pop
out
and
bound
fiaddl
cmp
xor
xor
negb
cwtl
mov
inc
sbb
add
push
lea
and
mov
out
push
xor
push
cmp
pop
xor
push
push
mov
pop
jp
inc
and
mov
cmc
xchg
or
rclb
or
add
test
cwtl
pop
sbb
rolb
add
sti
sbbb
add
inc
call
pop
jbe
int3
push
rcll
push
dec
cmp
xchg
les
sub
push
out
rol
clc
es
fcompl
pop
ret
cmp
out
or
fistps
sub
mov
add
or
call
ret
mov
addr16
push
mov
xor
xor
push
mov
decb
cld
adc
lock
clts
popa
mov
jo
divb
sarb
ret
aam
push
push
mov
pusha
mov
jle
lock
inc
cmp
jbe
das
mov
push
and
inc
inc
jmp
stos
adcl
test
in
stos
mov
into
in
loope
stos
or
pushf
das
jp
push
inc
pop
fsts
inc
inc
jnp
cmp
and
or
xchg
mov
loop
mov
and
stos
jg
or
fcompl
inc
je
cmpsb
cmp
mov
jl
mov
sub
xor
and
cltd
add
or
push
ret
mov
mov
rclb
sbb
jg
xchg
sbb
and
add
sbb
sub
outsl
and
fadds
dec
imul
xor
ret
mov
or
fimuls
mov
push
cmp
lea
jne
push
push
mov
adc
mov
add
mov
mov
xchg
test
push
in
rcll
xchg
jge
add
pusha
in
mov
xchg
jae
les
incb
call
mov
sbb
or
xlat
testl
mov
imul
sbb
fsubrs
jl
loop
push
andl
leave
mov
lds
cmp
cmp
jbe
mov
xor
mov
test
jecxz
cmp
and
mov
imul
or
push
fcmovb
xor
inc
xor
aad
jge
mov
xchg
add
or
inc
jl
int
push
push
test
and
push
jbe
or
push
or
pop
mov
push
rcl
sbb
jp
dec
push
sub
push
xor
aaa
or
lods
sarl
in
sub
in
inc
je
insb
sub
out
add
sbb
pop
jecxz
add
cmpsb
xchg
jo
inc
inc
sub
push
shl
ret
dec
push
dec
add
addl
xchg
fxam
ret
lea
sarb
lea
push
xchg
cld
jg
inc
js
xchg
xor
jge
fnstcw
inc
lods
push
mov
imul
pushf
testb
out
je
inc
sbb
les
aam
or
mov
xchg
inc
call
cmp
xor
add
cmp
int
orb
cmpsb
sub
lret
daa
sbb
or
push
testb
rorb
pop
jmp
push
lcall
mov
sub
scas
in
test
and
add
jmp
sub
lret
movsb
cmp
xchg
push
insl
push
ret
repz
sub
push
xchg
cmc
mov
or
push
jp
dec
pop
mull
push
es
fidivrl
add
jle
mov
push
mov
insb
es
sti
pushf
cwtl
sbb
fildl
aas
push
bnd
dec
add
es
and
pop
add
test
xor
fstpt
pop
flds
or
dec
in
sbb
mov
xchg
xor
cmp
bound
adc
lcall
shrl
fistps
loope
dec
fldl
stos
popa
imul
psubb
stos
sti
test
and
lsl
jmp
js
sub
insb
stc
jo
lods
push
pop
movsb
cmp
fucomip
dec
mov
sub
push
scas
sub
pop
jmp
movsl
mov
in
iret
or
mov
sbb
and
movsl
fwait
mov
push
push
cmpsb
sbb
or
sub
shrb
sbb
pop
push
or
jo
or
sbb
sub
test
shrb
pop
loopne
push
in
mov
mov
hlt
test
mov
adcb
pop
mov
lret
stos
pop
enter
and
add
sbb
or
sub
or
shl
movsl
imul
adc
add
adc
bound
nop
fs
icebp
stc
into
into
leave
inc
loop
dec
adc
insb
outsb
sbb
push
pop
xor
das
or
mov
pop
loope
xchg
push
es
cmp
jl
subb
inc
mov
es
pusha
mov
xorl
repz
aaa
xchg
fcoms
sub
xchg
inc
push
and
into
inc
xchg
jo
add
fmul
divl
loopne
mov
roll
push
cmp
dec
out
and
ss
xchg
push
sub
add
adc
and
mov
adc
das
daa
repz
or
push
ljmp
daa
or
es
dec
out
hlt
add
mov
mov
sub
mov
cwtl
dec
add
inc
add
mov
test
pop
cmp
movsb
push
insl
fcoml
sbb
enter
icebp
adc
out
call
mov
dec
loope
testl
sbb
dec
push
inc
notl
cmp
lret
mov
mov
push
and
mov
adcb
and
mov
adc
push
rcll
nop
push
pop
xchg
sub
push
inc
bound
cmpsl
push
mov
dec
adc
push
popf
adc
push
inc
sbb
arpl
xchg
loopne
adc
cmp
test
dec
sbb
mov
dec
mov
aad
in
push
add
or
movsl
cmp
cld
std
mov
in
add
movl
jb
ja
adc
cmpsb
gs
inc
cmp
xor
mov
daa
sbb
cwtl
add
cmp
push
popa
fdivrl
push
popf
mov
lret
mov
subb
sbb
jo
jns
or
inc
sub
call
adc
insb
imul
adc
int3
lea
push
popf
movsb
sti
jecxz
sub
mov
aam
dec
xor
fs
cwtl
mov
jae
pop
imul
pop
out
mov
sbb
cmc
insb
cmp
mov
rcrl
shl
mov
push
sti
pop
pop
xor
add
imull
aam
call
lea
jle
add
xor
mov
es
jno
inc
iret
pop
cmpsb
add
sbb
hlt
cmp
push
stc
or
addl
stos
push
sbb
xor
and
xor
and
adc
mov
adc
cmc
and
or
push
sbb
and
les
and
lods
jmp
daa
xor
sbb
add
jle
insb
sub
insl
dec
xor
jmp
add
mov
dec
pop
or
inc
jo
jae
xchg
mov
insb
adcb
and
dec
mov
outsb
sbb
sub
or
aad
push
jge
push
add
sbbb
push
dec
fadds
lcall
jmp
outsb
sbb
sbb
ljmp
daa
and
int
xchg
sbb
or
xor
iret
inc
xchg
movl
mov
mov
stc
ljmp
pop
cs
adc
das
js
push
and
pusha
daa
sub
ret
stos
xchg
leave
loope
es
mov
in
xor
sbb
xor
js
push
lods
pusha
and
stos
sbb
xor
movsl
shrl
xchg
punpcklwd
mov
fs
xchg
xor
adc
cmp
push
push
insb
push
repnz
push
sbb
dec
test
xor
push
test
decl
mov
aas
mov
sarb
sti
jbe
stc
into
ja
dec
push
push
dec
shl
cltd
mov
push
push
push
int3
rcrb
ljmp
inc
insb
xchg
or
push
jo
aaa
jo
or
jmp
cld
les
out
cmp
cmp
cmp
int
xor
pop
jmp
xchg
pop
lret
in
out
and
add
mov
arpl
mov
dec
inc
push
dec
jecxz
push
cmp
cmp
mov
mov
sbb
push
pusha
out
movsb
lret
dec
out
out
fcomp
int3
xor
mov
push
mov
add
popf
lock
jo
cmpl
inc
cli
inc
mov
stos
push
repz
lds
xor
xor
movsb
je
inc
or
push
cmp
xchg
test
xor
and
ficoml
mov
lods
add
xchg
nop
lods
dec
sbb
js
sub
das
adc
lret
dec
xchg
pop
sub
push
inc
mov
mov
mull
push
lods
adc
push
xor
xor
xchg
pop
loop
and
iret
decl
or
arpl
add
or
out
dec
cmpl
fsubrs
and
mov
push
sahf
fwait
inc
lahf
repnz
adc
movl
jb
jo
test
adc
insb
jne
mov
push
pop
movsb
ds
mov
sbb
aaa
xor
dec
cwtl
ret
and
inc
inc
jl
inc
test
mov
or
jnp
test
mov
cbtw
insb
lahf
movsl
leave
nop
loopne
adc
pop
xchg
fstpl
pop
mov
lea
push
adc
xchg
xor
pop
add
dec
add
inc
add
loopne
sbb
add
xor
loope
inc
inc
cmpsl
adc
or
sub
ljmp
lods
outsl
xchg
add
xor
fcoms
adc
cld
pushf
fstpt
out
sub
pop
push
dec
out
add
push
divl
push
popa
adc
fimuls
xlat
mov
xor
lods
xor
cltd
or
cmpsl
add
pop
ret
add
push
cmpl
dec
clc
push
adc
lea
andl
add
pop
sub
inc
in
adc
test
mov
rcr
insb
scas
pushf
xor
das
daa
cmp
iret
pop
cmp
and
or
fs
inc
int
nop
insb
lret
mov
mov
in
into
push
inc
ret
pop
or
ret
pusha
xchg
pop
sbb
fs
or
mov
and
or
add
jecxz
pop
test
add
xor
cmp
push
stc
roll
push
xchg
mov
outsl
push
xor
push
mov
js
leave
adc
push
sub
xchg
dec
and
sbb
cwtl
mov
push
ficompl
push
jmp
mov
push
xchg
test
and
scas
and
jnp
dec
or
or
shrb
mov
add
pushf
jo
mov
add
inc
push
push
lret
pop
add
mov
push
sbb
pop
dec
adc
or
jno
imul
andl
mov
mov
fmul
ret
or
dec
mov
inc
adc
shl
push
adc
arpl
repnz
fistps
lret
rclb
adc
je
mov
popf
fisubl
or
pop
or
lods
fsubrs
inc
add
sub
repz
in
pop
sbb
dec
dec
inc
stc
and
loope
aas
add
inc
sbb
leave
mov
or
hlt
adc
lock
cmpl
push
fadds
inc
cld
aad
pop
sub
add
dec
imul
cmp
add
adc
test
add
add
pop
mov
jnp
mov
orl
xchg
and
push
pop
cwtl
sub
leave
mov
loopne
add
mov
mulb
mov
add
sbb
xchg
pop
or
leave
cmp
push
mov
lea
push
push
popa
xchg
lea
push
pop
or
cs
or
loope
jge
jge
cmp
add
call
mov
and
sbb
rclb
push
jae
jge
push
aaa
popa
pop
mov
andb
pop
add
mov
mov
loope
sbb
out
aaa
xor
pop
ja
inc
data16
imulb
mov
cmpsl
pusha
movsl
pop
push
add
push
cmp
adc
jnp
pop
sub
push
icebp
out
sbb
arpl
or
cmc
pop
xchg
lock
daa
enter
adc
xor
push
ret
add
add
cs
mov
adc
lcall
fistps
lods
adcl
lods
jecxz
sbb
mov
inc
movsl
sub
jns
add
pop
push
push
sbb
popa
pusha
loop
dec
iret
mov
mull
add
mov
and
xorl
add
stc
or
dec
mov
add
mov
movsl
cmp
lcall
mov
mov
in
inc
orl
leave
mov
mov
xchg
adc
inc
pop
mov
xor
cmp
inc
dec
xlat
jnp
enter
sub
xor
enter
push
pop
cmp
inc
adc
cmp
inc
int3
dec
or
pop
popa
shlb
xchg
push
push
lds
xor
lock
ja
xchg
hlt
adc
scas
int3
clc
push
clc
stos
inc
and
jmp
mov
shr
adc
push
push
rcll
push
mov
sbb
push
dec
and
popa
and
xor
insl
inc
clc
add
lds
fsts
mov
cmp
push
cmp
cs
mov
xor
mov
sbb
sub
push
add
mov
pop
push
int
xor
sahf
cmpl
push
int3
mov
jmp
jne
dec
pop
push
sub
in
adc
mov
xchg
icebp
data16
mov
sarb
xchg
lret
dec
aam
xor
mov
push
push
ret
mov
mov
add
xchg
pop
les
test
mov
jg
popa
cli
addb
and
and
cmp
push
adc
scas
sahf
jno
cmpsl
push
sbb
lcall
or
rclb
mov
push
cmp
ret
dec
mov
push
sub
inc
into
ret
xchg
xchg
jb
ret
stos
ret
rorb
popf
xchg
adc
jge
push
daa
dec
lods
jl
rcl
push
mov
inc
pop
dec
or
adc
push
stc
mov
push
gs
mov
add
push
and
call
push
add
xorb
adc
inc
enter
jno
adc
lods
jnp
xchg
mov
add
jmp
daa
xor
loope
dec
dec
or
fstpl
pop
fldt
xchg
mov
pop
lea
je
pusha
std
inc
je
scas
pop
movl
inc
sub
inc
icebp
outsl
mov
mov
cli
xor
mov
aad
jb
add
push
bound
aas
add
test
push
inc
loop
sbb
sub
inc
cmp
and
movb
vmovd
adc
push
sub
adc
call
xor
push
sbb
outsb
add
fbstp
mov
mov
mov
mov
sarl
hlt
imul
add
sub
mov
pop
jno
icebp
pop
aas
aad
xor
cli
jl
clc
push
or
sub
push
mov
pop
ret
xor
and
pop
fcompl
adcb
sbb
cs
push
cmp
andb
call
xchg
mov
dec
hlt
sub
stc
fbld
jecxz
lock
fidivrs
outsl
mov
test
repz
push
incl
push
lea
push
inc
push
and
inc
imul
lcall
xchg
rorl
adc
fsubrl
inc
dec
outsl
aad
push
sbb
enter
jg
mov
cltd
sub
xor
jo
cmp
in
pusha
xchg
mov
mov
mov
sbb
rcl
imul
add
es
and
xor
shrb
mov
sub
add
cld
mov
es
sbb
cld
fistl
and
push
movsb
ss
or
sbb
and
inc
inc
arpl
inc
js
or
dec
cmp
adc
pop
mov
add
and
adc
jns
lods
mov
cmp
and
mov
add
ds
mov
lods
stos
out
jo
cwtl
js
and
mov
add
cld
pop
mov
loop
or
jg
cmpb
jne
sub
add
xchg
out
mov
or
cmp
scas
jne
push
int3
mov
cmpsl
xchg
and
mov
adcl
or
call
lret
xor
push
aaa
clc
imul
daa
adc
cmp
jmp
mov
movsl
push
pop
aaa
xor
ret
cmp
mov
inc
mov
mov
add
lock
mov
adcb
dec
add
mov
fcmovbe
xor
sbb
movsl
movb
test
mov
inc
or
pop
bound
xor
adc
leave
in
add
mov
cmp
push
ret
pop
loopne
adc
pop
add
jmp
xchg
out
test
lea
xchg
call
mov
iret
pop
fdivs
stos
pop
dec
xor
mov
cs
mov
mov
xor
iret
daa
sbb
or
sbb
add
aam
jmp
popf
add
test
jne
push
popf
add
cmp
and
sbb
ss
add
pop
push
push
jb
sbb
push
xchg
sbb
jne
stos
inc
inc
mov
inc
add
xchg
lret
push
push
jns
jne
push
sbb
push
ds
pop
daa
push
nop
punpckhbw
seto
push
xor
mov
push
mov
aam
jns,pn
cmpsb
push
pop
mov
inc
push
adc
push
cs
adc
adc
sub
sub
dec
sahf
push
popa
adcb
dec
inc
push
test
sbb
pop
cwtl
dec
lcall
test
mov
movsb
xchg
loope,pn
pop
and
xor
lret
repz
xor
pusha
rolb
pop
int
cmpb
js
dec
jb
or
popfw
add
test
jmp
adc
mov
mov
jg
pop
or
jne
cmpl
add
popa
aaa
bound
jnp
rolb
andl
mov
mov
dec
inc
into
mov
and
ret
nop
je
cmc
pop
hlt
mov
scas
add
out
add
xor
jb
mov
adc
or
pop
cmpsl
dec
loope
mov
loop
sbb
or
or
dec
sbb
das
in
mov
push
add
pushf
mov
adc
and
shl
and
imul
mov
xchg
cmp
es
push
and
arpl
inc
sbb
jl
adc
fidivs
roll
fadds
cmp
testl
testb
xor
or
test
cmp
flds
inc
push
mov
fidivrs
jne
fistl
icebp
pushf
mov
jmp
push
pop
lret
lahf
sbb
popl
test
mov
leave
sub
fmuls
push
xor
dec
das
pop
cmpb
outsl
mov
or
shrb
pushf
push
xchg
xchg
cwtl
sub
sub
es
push
jp
adc
fnstcw
roll
or
leave
aad
push
ljmp
cmp
sub
sbb
add
add
push
fdivrl
xlat
mov
addb
push
or
push
jmp
add
leave
and
add
xor
cmp
adc
movsb
add
mov
sbb
inc
mov
and
push
cli
pop
testb
add
sub
cmpsb
inc
into
gs
push
in
pop
and
push
cmp
push
adc
pushf
dec
xor
jb
into
sbb
push
shlb
jno
in
fs
add
pop
inc
stos
addl
test
nop
cld
scas
mov
cmp
push
xchg
lret
pop
push
dec
cwtl
pop
mov
xchg
push
sti
push
rcl
rcll
gs
imul
and
mov
icebp
dec
adc
inc
mov
or
icebp
mov
jne
mov
dec
jne
push
lods
sub
adc
mov
push
sahf
sbb
aam
fcmovne
lret
cmpsb
pusha
xchg
push
adc
push
popf
dec
xchg
adc
shll
push
or
rorb
aas
shlb
mov
movb
pop
mov
jne
adc
lcall
leave
sbb
les
mov
xor
gs
pop
gs
add
and
and
add
sbb
mov
xor
adcb
into
add
sbb
test
rcrl
or
dec
fbstp
movsb
or
mov
xor
cmp
or
ja
mov
dec
pop
adc
loopne
ret
push
stc
sarb
mov
cld
outsl
or
repnz
add
push
loopne
icebp
sbb
movl
jmp
dec
fbstp
lods
add
js
clc
aam
jge
mov
addl
test
incl
mov
out
lods
sbb
mov
sbb
mov
or
mov
testb
test
dec
adc
das
adc
add
push
cmp
movsb
lods
int3
dec
and
jno
mov
push
xchg
cmpsl
test
stos
or
add
push
sbb
add
push
sbb
sbb
jg
adcl
aam
sbb
out
dec
and
leave
inc
fmuls
push
lea
sti
push
fsubl
dec
insl
sub
lods
dec
pop
jl
loopne
jnp
sub
xchg
cwtl
test
jmp
xchg
xchg
inc
mov
sub
sbb
aam
sub
xor
push
pop
pushf
dec
pop
fldpi
adc
inc
and
mov
scas
mov
lock
or
pop
loopne
mov
pop
int3
mov
pop
mov
das
cmp
out
add
push
sar
in
mov
sub
inc
add
and
shlb
aas
shl
repnz
push
push
lea
jl
push
jle
insb
xchg
pop
mov
clc
mov
push
mov
add
or
pop
push
mov
and
xchg
bound
mov
or
daa
dec
adc
add
les
inc
orb
jmp
icebp
mov
dec
push
push
adc
ret
imulb
hlt
or
int3
push
sub
push
jno
repz
adc
stos
or
and
lcall
cmp
je
cwtl
adc
sbb
dec
cs
mov
push
jp
addb
sub
sub
and
push
test
loope
add
jne
lea
sbb
fs
add
lea
cmp
jne
cmp
aaa
cmp
iretw
push
sbb
xlat
pshufw
mov
xor
xchg
mov
daa
ljmp
dec
adc
outsb
push
push
jmp
addr16
sbb
aaa
popf
adc
pop
mov
jg
mov
fs
es
xor
push
call
cmp
mov
and
or
test
mov
add
xchg
out
xor
push
xchg
mov
mov
and
xchg
inc
cmp
je
inc
add
cmp
jl
jmp
add
pop
mov
repz
add
pop
hlt
insb
xor
sbb
lret
call
mov
cmp
outsb
push
or
push
cmp
xor
lods
mov
mov
rolb
or
inc
push
sbb
jo
jg
add
out
push
daa
jmp
mov
rcrb
test
dec
mov
cli
push
nop
mov
mov
mov
test
push
js
fcmovbe
movl
push
sbb
ret
xchg
sbb
lea
rclb
std
and
add
fisubrs
inc
cmpl
ljmp
mov
mov
sub
je
not
mov
sub
fs
mov
or
dec
pop
and
test
dec
jb
add
sbb
inc
mov
mov
and
call
jecxz
jmp
jge
or
push
and
inc
adcb
add
xchg
push
inc
pusha
adc
xchg
mov
push
mov
mov
dec
dec
in
in
jb
in
inc
je
nop
loopne
adc
mov
and
adc
cli
testl
cmp
pop
ret
jb
xchg
in
sahf
shlb
pop
jg
push
jmp
sub
adc
push
call
and
inc
pop
imul
inc
add
sbb
popf
bound
inc
inc
add
mov
pop
outsb
adc
push
cs
sbb
and
jnp
inc
mov
clts
sbb
dec
stos
xorl
pusha
loopne
divl
notb
out
and
mov
int
push
push
push
push
sub
orl
mov
movsb
js
sub
jb
add
and
adc
and
xchg
scas
push
test
adc
sbb
jle
jmp
imul
sub
xchg
stos
insl
or
and
pop
add
or
fisubrs
push
or
mov
popf
adc
push
loope
xlat
cmpsl
xor
or
pop
pop
push
adc
push
xor
push
stos
xchg
push
or
rcr
and
xchg
imul
cmp
imul
scas
push
shrb
mov
test
movsl
mov
xchg
ret
add
pop
add
pushf
add
mov
mov
mov
out
inc
adc
mov
sbb
sbb
dec
and
lds
add
inc
cmp
or
shlb
js
mov
cmp
jb
sbb
add
cmp
jae
leave
xor
pop
call
mov
cli
jmp
xor
call
clc
stos
add
ja
push
push
push
adc
sahf
and
dec
sbb
add
mov
dec
lahf
add
call
adc
xor
push
xor
cmp
rolb
jp
and
outsb
add
das
mov
pop
push
jmp
inc
cli
cmp
jl
pop
ds
bound
mov
pop
mov
mov
xor
or
sub
ret
outsl
stos
call
jl
repnz
movb
dec
sarl
mov
sbb
pop
inc
ljmp
ret
and
xor
mov
mov
xchg
clc
pop
out
inc
add
call
mov
mov
stos
test
and
push
sarb
push
mov
dec
mov
jo
and
cmp
push
mov
mov
cmp
add
add
and
stc
dec
insb
inc
push
loopne
pop
cmp
das
inc
add
lock
pop
cmp
push
outsb
stos
imul
adc
mov
lds
adc
sarb
push
xchg
sbb
sbb
rclb
mov
and
sbbl
outsl
aad
xor
sbb
out
cmp
dec
and
iret
cmp
cmp
int
cmpsb
inc
pop
jmp
mov
mov
int3
push
push
faddl
dec
mov
pusha
sbb
jns
push
or
or
cmpsl
push
dec
add
call
mov
mov
add
or
add
and
pop
movsb
mov
aaa
lds
jl
pop
cs
adc
push
cmp
mov
rorl
push
sbb
jns
inc
push
adc
mov
cltd
or
adc
dec
test
sbbl
das
sbb
sqrtps
call
dec
pop
or
ret
or
aas
mov
mov
jbe
cmp
mov
inc
imul
push
xlat
push
jle
dec
movsl
sub
add
or
xor
popf
push
and
mov
inc
lock
xor
push
push
movsb
jge
pushf
out
or
mov
inc
pop
add
aad
push
addl
push
sbb
adc
xor
mov
pop
or
je
add
jl
dec
xchg
push
push
cmp
or
psrlq
mov
mov
xchg
fnsave
mov
xchg
sub
jmp
clc
mov
sub
loope
mov
enter
mov
adc
jle
mov
in
inc
test
dec
je
lret
repnz
jge
xor
xchg
arpl
mov
push
sbb
or
mov
mov
sbb
dec
fnstsw
xchg
inc
add
adc
mov
adc
dec
pop
and
pop
mov
outsb
ljmp
ret
adc
add
sub
jmp
cmp
les
dec
faddl
and
sbb
fidivs
ss
adc
sub
mov
cmp
and
push
shrl
jns
cmp
mov
push
sub
ret
add
xor
dec
dec
sub
sub
and
cmp
pop
add
push
push
xorl
and
or
add
push
xor
inc
sub
or
adc
adc
xor
and
xchg
add
test
inc
sub
dec
or
lret
sbb
or
push
push
nop
or
or
inc
push
dec
verw
xor
insb
push
jo
mov
cmp
jg
adc
movsl
popf
das
mov
fmuls
add
xchg
xor
sbb
enter
and
loopne
mov
jle
pop
add
pop
push
or
fsubl
dec
adc
sub
jnp
pop
mov
pusha
add
pop
mov
and
popa
or
jb
xor
mov
adcb
cmp
xchg
mov
xchg
subb
inc
loop
xchg
ret
stc
and
and
adc
pop
sbb
sbb
hlt
mov
xchg
dec
lcall
lcall
int3
stos
movsb
mov
mov
lcall
mov
rcl
sti
sbb
or
lea
setne
xchg
inc
fs
int
push
dec
or
inc
or
int
rorb
cmp
cmp
or
or
or
int
xor
sub
and
add
and
int
rorb
adc
adc
or
add
or
cli
push
mov
sub
push
pop
adc
or
xchg
xchg
sub
push
xor
and
clc
add
lods
test
lods
jbe
lea
adc
rclb
jo
inc
leave
xor
cmpsb
sarb
mov
clc
imul
sbb
test
push
lret
xor
rcl
jne
sbb
sbb
and
push
mov
fcoms
xchg
mov
and
pop
adc
mov
push
and
pop
jl
sub
cmp
adc
sbb
sbb
jo
xchg
sbb
pop
add
add
fnstenv
or
sbb
mov
add
addb
or
out
pushf
std
mov
adc
add
mov
push
shrl
mov
sbb
test
pop
shll
scas
or
cmp
sbb
stos
adc
xor
outsb
and
mov
add
in
and
add
xor
fistl
push
xchg
test
and
mov
sub
in
inc
sub
xor
inc
addr16
cs
mov
shrb
sub
sub
enter
mov
test
sbb
and
jae
sbb
enter
add
sbb
mov
in
or
push
dec
mov
push
add
aam
cmp
cmc
pop
jne
push
push
push
push
pop
mov
inc
pop
mov
ret
jne
enter
fiaddl
add
and
rolb
ret
inc
int3
and
mov
fmull
cmp
inc
and
fidivrs
cmp
shlb
sub
or
aam
xchg
jmp
hlt
dec
mov
cmpb
test
repnz
imul
sbb
popa
and
and
test
xor
sbb
enter
adc
mov
pop
sbb
adc
add
push
sti
inc
shlb
add
push
cmp
mov
out
mov
ret
push
out
insb
test
std
dec
mov
push
stos
adc
rcll
and
sti
mov
outsl
push
sbb
sub
inc
cmc
sbbb
push
or
dec
or
and
jno
test
mov
scas
mov
imul
xchg
clc
adc
or
jae
push
hlt
lods
or
jnp
xor
add
mov
je
mov
adc
hlt
cmp
mov
xor
mov
add
bnd
clc
add
inc
pushf
imul
aas
mov
cmp
push
lcall
push
mov
add
xlat
outsb
fucom
or
push
pop
mov
repz
lcall
ss
rcrb
inc
push
das
pusha
sub
add
adc
and
or
push
and
loope,pn
fmuls
add
pop
movaps
aam
xchg
jg
pop
pop
ret
addl
cld
add
xchg
sbb
push
jo
les
out
fs
test
sbb
add
fisttpll
inc
fstl
push
aam
lock
test
mov
cmp
scas
cld
cmp
out
dec
fcoml
lock
inc
loopne
dec
push
pop
std
nop
clc
push
hlt
push
loopne
incl
aas
pop
sub
loopne
enter
movsb
push
push
loope
in
ret
jne
je
sub
js
push
pop
in
push
pop
cmpsl
jns
mov
or
arpl
jne
mov
out
inc
sub
mov
and
dec
ds
andl
int
test
mov
call
inc
add
addr16
stos
pop
xor
push
dec
sub
add
adc
loopne
xchg
add
xor
adc
and
les
fadds
push
jmp
pop
adc
sahf
in
imul
and
sub
or
adc
cld
movb
dec
imul
ljmp
add
adc
cmp
dec
sarb
xchg
cmp
dec
jl
mov
orl
pop
xlat
add
lock
or
sbb
mov
mov
push
aas
mov
dec
mov
jle
cmp
and
cmp
cmc
sbb
jge
jae
ljmp
sti
jmp
mov
add
dec
lea
push
pop
loopne
sub
push
loop
jno
test
xchg
or
in
xor
push
pusha
dec
addr16
pop
ds
lea
push
inc
loop
popf
popa
push
xchg
shlb
add
clc
insb
pushf
adc
jo
nop
out
adcb
inc
aaa
add
adcl
inc
outsl
push
sub
dec
fnstcw
pop
or
sub
cmpsl
jo
out
mov
ret
pop
xchg
cmp
test
and
jl
rcrb
xor
or
cmp
inc
in
int3
add
cmp
leave
jae
movups
lods
nop
dec
adc
and
dec
sub
xor
pop
inc
push
and
add
pop
adc
loope
fldcw
pop
pop
insb
push
and
dec
xor
aad
aam
jo
push
pop
add
cmp
or
in
sarb
mov
int3
add
or
lahf
pop
sub
sbb
cmp
rcrb
sub
adc
cmp
sbb
ljmp
mov
lock
jb
movb
sub
cmp
push
imul
outsb
pop
lret
es
dec
adc
pop
dec
push
sbb
push
jecxz
sub
pop
push
pop
xor
xchg
in
in
pop
daa
ret
inc
cs
push
out
ret
pop
imul
adc
pop
mov
pop
pop
cmp
pop
dec
push
jp
imul
outsl
or
pop
xor
jo
int3
add
and
push
sub
push
push
pop
mov
pop
repnz
bnd
js
cmp
push
rolb
push
rcrl
push
add
dec
test
inc
ja
or
or
or
adc
scas
sub
or
hlt
push
inc
cmp
es
dec
push
daa
es
cs
dec
dec
add
inc
xor
add
adc
test
adc
adcb
mov
mov
cmp
lret
mov
je
or
jge
cmp
jl
mov
adc
rcrl
aam
sbb
hlt
outsl
push
cli
pop
and
cmp
xchg
call
mov
or
pop
pusha
pusha
leave
adc
addl
scas
jo
jl
jo
pop
outsb
push
xchg
add
or
cld
sbb
movsl
xchg
and
push
push
lea
pop
sbb
je
inc
es
jo
or
or
xor
sti
pop
sar
sub
stc
xorl
mov
or
adc
dec
cs
inc
js
shrb
popa
push
xor
mov
add
clc
mov
loop
pop
ret
dec
jge
cmp
or
add
rcrb
push
jp
inc
adc
cwtl
sub
rorb
sub
sub
xor
sub
sub
push
out
push
jae
add
fldl
xchg
call
lea
mov
pop
rcrb
rclb
inc
mov
add
sbb
mov
adc
pop
xchg
push
and
mov
adc
mov
out
cltd
add
xchg
ja
mov
clc
mov
loope
adc
sbb
pop
or
mov
int
add
js
xor
orb
add
pop
or
add
test
xor
sub
mov
jl
jb
aaa
dec
mov
inc
cmp
ret
scas
loopne
loope
add
push
jle
xchg
jmp
insb
jne
push
and
jp
data16
cmpsb
and
loop
pop
mov
xchg
xor
jg
sarl
push
adc
aaa
or
sub
nop
sahf
lds
or
jge
test
add
adcl
test
rcr
inc
dec
push
mov
in
mov
dec
ljmp
push
aam
aas
push
or
jp
add
xlat
add
jo
test
aaa
int
xchg
push
mov
lods
cwtl
cltd
fstpl
js
and
je
push
and
xor
mov
sbb
cltd
cli
and
add
sub
lods
xlat
pushl
shlb
or
cld
sbb
scas
mov
test
notl
fbstp
into
aam
and
cmp
mov
je
or
clc
and
mov
cli
movsb
nop
mov
jg
ljmp
mov
pusha
cs
xlat
cli
xchg
test
push
pop
mov
dec
add
sbb
jmp
jl
xchg
and
mov
inc
pop
mov
ss
jmp
sti
decl
sbb
orl
mov
mov
push
sub
push
movsb
add
pop
mov
notb
in
adc
adc
pusha
mov
sbb
mov
nopl
sbb
adc
ss
fs
call
add
jno
cmpsb
add
xor
ljmp
push
add
mov
orl
and
ret
push
pop
dec
pop
and
jb
addl
xchg
pop
push
dec
push
out
daa
daa
push
fidivrs
movsb
sub
inc
or
xchg
mov
faddl
in
insl
pop
dec
inc
sub
dec
or
aaa
dec
push
cltd
push
and
jns
or
dec
xchg
pop
push
nop
pop
fs
add
movsl
push
sbbb
push
adc
enter
data16
add
push
mov
aad
mov
push
mov
sub
sti
push
pop
cmc
adc
mov
repnz
dec
cmp
cmc
pop
adc
pop
and
mov
push
test
rolb
enter
jl
inc
repnz
js
imul
in
rolb
sub
lahf
int3
xchg
pop
mov
cltd
dec
pop
ja
rorb
test
sar
sbb
adcl
add
insb
add
xchg
and
or
add
pop
and
pusha
cmpsl
test
add
add
mov
insb
and
ret
cmp
mov
das
add
jecxz
xor
and
movsl
sbb
mov
xor
adc
and
imul
mov
sub
dec
cld
icebp
insb
and
inc
push
lods
imul
push
stos
out
sti
ret
dec
inc
aam
mov
add
lret
adc
addr16
push
ret
inc
push
and
jns
add
ja
pop
lods
fs
arpl
push
sbb
incb
test
sub
or
xchg
or
and
inc
lock
inc
inc
add
aas
cmpsb
or
repz
push
addl
rolb
movsb
fs
mov
mov
or
je
or
or
cmc
and
add
xchg
ds
out
push
jmp
gs
inc
pop
cmpb
xor
xchg
xor
sub
push
insl
loop
icebp
jl
sub
pop
sbb
scas
movsb
mov
push
sbb
pop
sar
push
add
add
stos
imul
pop
mov
push
lds
in
push
shrb
jno
inc
ljmp
mov
sub
cmpb
jle
jb
ficomps
push
imul
movsl
mov
fisttpll
pusha
add
push
sbb
das
jg
shrl
fistpll
ret
es
and
shl
fldt
xchg
mov
call
add
dec
xchg
sbb
in
or
aad
sbb
movzbl
pop
imul
movsb
and
or
insb
sub
pop
sub
insb
sub
dec
push
aad
push
push
mov
jl
fs
add
or
adc
xchg
je
inc
or
pop
sub
sub
push
sub
cmp
push
hlt
or
add
sbb
fisttpll
pusha
aas
add
xor
je
hlt
push
add
mov
or
das
push
dec
mov
add
push
mov
inc
mov
or
add
inc
adc
sbb
fistps
xchg
xchg
sbb
add
add
inc
shrb
sbb
loopne
push
loope
loope
push
push
lret
ret
fimuls
scas
mov
sbb
xor
cmp
xchg
mov
popf
mov
movsb
pop
mov
or
mov
push
dec
push
or
mov
inc
cmp
je
sti
and
add
es
inc
cmp
je
pop
outsb
movsb
bound
pusha
add
loopne
and
or
mov
jmp
inc
lahf
or
xor
cli
pop
enter
xchg
int3
sub
push
adc
test
shrb
clc
subb
cld
push
aad
lock
fstl
cmp
jb
sarb
mov
push
lds
sub
push
rclb
sbb
callw
cmp
push
lods
mov
inc
mov
jb
adc
mov
and
ss
push
push
adc
in
cmp
jne
mov
mov
js
js
mov
xor
lea
mov
test
add
or
leave
adc
add
lock
or
adc
add
adc
push
push
or
dec
xchg
push
es
add
adc
push
imul
stos
loopne
cmp
mov
push
stos
cmp
xor
movsl
xchg
jge
lea
out
notb
pop
sbb
or
add
dec
pop
add
or
jmp
cs
cltd
out
adc
adc
or
mov
add
jae
xor
aaa
jge
add
mov
jp
jns
nop
push
jns
push
cmp
in
ljmp
jl
ljmp
inc
adcl
js
loopne
dec
ret
test
mov
fisubl
lea
les
jae
cltd
clc
sbbl
mov
push
sub
pop
bound
add
and
mov
imul
cmp
push
lret
cmp
push
sub
aam
dec
nop
sbbl
or
pop
loop
pusha
fs
pop
add
test
inc
push
push
sbbl
outsb
sub
sub
fistpl
adc
inc
mov
cwtl
ds
lock
sub
push
or
jno
push
sti
xor
jns
dec
div
mov
adc
push
jne
pop
push
or
scas
ret
testl
inc
jg
mov
sbbl
xor
inc
inc
push
adc
cmp
cmpl
pop
and
push
pop
mov
xchg
daa
mov
inc
or
js
lods
xadd
mov
lea
iret
sub
sub
jle
fs
enter
test
or
mov
and
cli
sbb
outsb
nop
popa
jnp
pop
lds
or
pop
push
pop
add
mov
arpl
fsubl
int3
dec
jl
adc
push
movzbl
ss
enter
add
mov
push
rol
adc
cmp
stos
or
lcall
sbb
xor
push
push
adc
daa
sub
xor
aaa
pop
push
jp
pop
dec
movsb
sub
test
sbb
lods
xor
and
inc
push
icebp
add
adc
lahf
sbb
loopne
jg
push
push
sbb
pop
cmp
bound
inc
xchg
mov
push
ds
jbe
inc
adc
or
jbe
sub
stc
adc
push
pushf
clc
mov
sub
pop
xor
mov
pop
mov
push
and
or
lret
call
mov
inc
or
pop
inc
jbe
mov
ror
and
xchg
fists
loope
adc
insl
lsl
add
dec
jno
insl
sbb
daa
xchg
xor
inc
mov
mov
bound
inc
fadds
test
xchg
mov
push
and
test
je
leave
gs
lock
add
sub
sub
push
inc
mov
sahf
jp
rcll
push
movsl
cmp
push
pop
dec
push
lea
rorb
js
inc
sarb
cmp
jae
clc
inc
mov
inc
sbb
fcomps
push
movsl
loope
add
cmp
mov
mov
movsb
psubb
mov
add
nop
push
rol
in
push
inc
mov
cmpsb
and
adc
dec
add
add
pop
inc
or
add
or
mov
fldl
sub
outsl
and
cmp
xor
sbb
sub
xor
xor
sarl
dec
dec
push
push
arpl
pop
xor
loopne
push
aas
pop
lea
push
ja
jne
mov
add
jo
je
add
js
cmp
xchg
and
xor
xchg
ja
fisttpll
lods
cmp
add
and
les
or
sbb
lea
mov
inc
mov
lock
cmc
jno
add
pop
push
adc
dec
and
pusha
pop
cmp
jbe
rcrl
jle
sub
jle
mov
clc
dec
push
dec
mov
mov
dec
lcall
repnz
js
or
int
or
xchg
mov
shrb
xchg
mov
ss
ret
push
inc
pop
cs
ss
or
sbb
sub
add
mov
or
sbb
dec
push
adc
xor
or
sbb
lahf
ljmp
mov
aad
push
inc
adc
xor
and
pop
or
dec
mov
cwtl
call
and
add
inc
or
xor
inc
enter
cmp
cltd
xor
cmp
push
fucom
sbb
insl
pop
sub
ja
rolb
add
in
mov
xor
hlt
rclb
scas
sarb
pop
xor
mov
cld
push
push
push
out
jno
or
mov
jne
adc
sti
jne
mov
mov
xor
loop
fsubrl
mov
les
pop
add
gs
cmp
mov
jl
mov
fcomp
and
mov
lea
mov
or
jno
xor
aas
add
cmp
jle
push
arpl
pop
cmpsb
mov
push
mov
sub
rclb
mov
inc
cmp
add
shl
mov
mov
push
push
push
xchg
cmp
jmp
mov
decl
xor
sahf
xor
fcom
dec
cmpl
es
adc
mov
cmp
mov
fdivl
adc
sub
jo
dec
and
vmread
cmp
pcmpeqb
popa
inc
dec
adc
cltd
and
adc
in
cmp
push
xor
jp
push
xor
fst
test
sub
stos
js
hlt
mov
cmpsb
incl
pop
sub
sbb
mov
jg
mov
xor
adc
mov
or
adc
mov
and
nop
rcll
mov
aas
jl
inc
mov
cmp
jmp
loop
jo
mov
fwait
add
pmaxsw
popa
mov
add
fisubs
pop
push
cmp
sbb
push
inc
mov
xor
sub
je
push
jne
lea
pop
mov
mov
lock
mov
es
inc
mov
push
add
insl
in
and
pusha
jo
mov
push
cmpsb
pop
mov
fmull
imul
jno
jmp
outsb
pop
jno
mov
scas
push
adc
sbb
hlt
push
pop
je
shrb
push
xor
sbb
cmp
dec
sbb
inc
sbb
mov
lea
add
xor
mov
xchg
insl
pop
es
enter
add
in
xlat
push
push
lahf
ss
mov
sbb
adc
add
sbbb
jns
popf
cmpsl
cmpsl
mov
and
or
cmpsl
push
push
mov
sub
push
frstor
popw
xchg
push
loope
xchg
cmp
int3
sti
sbb
push
sub
push
mov
mov
test
jge
and
popf
loop
mov
pop
xor
cli
jmp
cs
and
sbb
adc
nop
inc
sbb
push
adcb
and
sub
rorl
pop
lock
add
inc
test
mov
cli
sti
fadds
jecxz
js
and
adc
lret
mov
repz
js
xchg
std
jl
out
mov
and
lea
sbb
xor
rorb
and
sbb
jb
mov
mov
mov
and
xor
inc
push
sbb
dec
ret
dec
mov
add
push
dec
pop
movsb
xchg
push
sbb
jl
push
inc
mov
jne
dec
adc
fcmove
call
xchg
sbb
mov
test
xor
mov
adc
dec
pop
and
insb
and
add
mov
pop
add
xchg
out
xor
adc
imul
xchg
jmp
es
or
mov
mov
mov
mov
pop
insb
push
lea
jg
std
push
lret
test
mov
and
sbb
lahf
nop
scas
nop
mov
out
lea
add
mov
add
lcall
and
push
pop
loopne
xchg
pop
dec
mov
sbb
push
jl
or
push
lods
pushl
aad
movsl
sub
jns
sbb
mov
out
dec
adc
ret
pusha
popa
icebp
add
cmp
lds
xor
xchg
push
xorl
adc
push
sbb
leave
adc
push
fwait
rclb
jae
mov
dec
rcrb
sbbl
sbb
fisubl
cltd
jno
sub
into
xor
push
inc
dec
cmp
push
mov
sbb
sbb
inc
and
dec
sahf
add
sbb
rcl
pop
jmp
clc
pop
xorl
or
mov
test
adc
loop
push
cmc
inc
loop
xor
dec
or
inc
inc
add
cltd
shr
push
jo
push
je
cmpb
in
sahf
mov
imul
xor
rcrl
lret
add
xor
pop
and
add
es
xchg
inc
daa
andl
aad
pop
add
mov
or
dec
mov
push
outsl
in
adc
inc
or
mov
sbb
cmpsb
push
jno
mov
lahf
dec
stos
push
aad
pusha
lods
andb
mov
or
sbb
push
into
mov
xchg
arpl
pop
xchg
sbb
sub
pusha
jno
push
lcall
push
jae
sub
sub
add
test
icebp
subl
aad
test
aam
loopne
sbb
sbb
xor
sub
xchg
setae
fcoml
push
jb
cmp
push
push
leave
and
pop
dec
push
sub
fwait
test
mov
mov
push
test
mov
adc
cmpl
dec
js
or
test
dec
jo
push
leave
shll
add
pop
xchg
je
cmp
xor
xchg
xchg
mov
inc
dec
mov
test
adc
dec
popf
cmp
and
pop
aad
or
or
movsb
push
in
and
fcmovbe
test
dec
xor
negl
inc
rolb
orb
aad
out
push
push
or
mov
rorl
mov
mov
push
repnz
push
pop
and
push
sbb
and
and
pop
outsl
sub
lcall
add
add
hlt
inc
add
push
pop
jb
xor
xor
leave
xor
icebp
mov
or
and
in
add
mov
jnp
fidivrs
push
mov
cli
je
fcomp
rcr
aam
jae
xor
jne
add
sbb
xchg
loope
adcl
add
sub
iret
xor
imul
and
adc
push
or
adc
add
xchg
and
mov
cmp
adc
mov
sub
aaa
mov
sub
or
nop
mov
push
sub
jl
mov
push
outsb
sub
push
mov
push
int3
leave
orl
sbbl
jne
stos
add
pop
and
push
movb
sub
xlat
adc
and
inc
dec
or
inc
pop
push
sahf
dec
aaa
xchg
jp
test
push
nop
adc
ret
hlt
outsb
xchg
or
addb
fsts
add
xor
xor
inc
andb
nop
stos
mov
xor
add
mov
jge
push
push
sub
inc
sub
pop
sub
sti
movaps
inc
lock
pushf
mov
repz
push
xor
mov
lock
popf
aas
add
movl
pop
dec
jecxz
ss
out
mov
adc
dec
jb
add
adc
push
leave
push
or
stos
sbb
pop
inc
orb
xchg
daa
xchg
pop
adc
adc
adc
sub
mov
test
sub
or
adc
and
in
adc
or
xchg
clc
add
nop
add
cltd
or
push
and
repz
or
push
push
fs
lret
sbb
push
push
movsb
inc
mov
mov
pop
or
sub
and
outsb
cmp
dec
add
outsb
inc
ror
xor
sbb
nop
sbb
sbb
xor
mov
and
adc
or
push
adc
sub
and
jne
jge
add
and
sahf
sbbl
mov
xor
loope
into
xchg
scas
mov
cmp
or
dec
mov
sub
mov
stc
inc
pop
push
mov
xchg
xchg
xchg
add
sbb
inc
or
sti
roll
cmpsl
movsb
adc
pusha
mov
and
and
jge
movsb
add
int
xor
and
dec
sub
push
cld
push
out
int3
ret
jbe
lret
inc
das
xchg
adc
jb
or
sbb
cmpsb
adc
cwtl
xchg
xchg
cmp
popf
mov
mov
sub
dec
popf
shll
add
dec
fs
lret
or
popa
add
call
lret
or
push
add
inc
jecxz
lcall
in
cmp
mov
mov
xor
sub
dec
popa
flds
adc
addl
lea
enter
and
test
mov
sbb
pop
das
enter
sub
call
inc
cmp
push
push
push
or
call
mov
rcll
pop
sub
add
lds
sbb
mov
and
cmp
ret
mov
loope
cmp
loopne
pop
fcmovbe
je
roll
push
pop
add
nop
dec
gs
add
roll
pop
push
add
movl
inc
mov
add
fwait
dec
aad
jp
incb
push
add
push
jne
orl
cmpsl
fstps
jmp
jg
out
and
test
aam
inc
sub
push
je
sub
pusha
pop
mov
and
rcll
add
dec
jo
lret
dec
mov
aam
cs
in
xor
and
je
dec
in
xchg
sbb
and
and
flds
pop
push
in
hlt
xchg
sbb
lcall
add
sub
xor
cmp
and
aam
shlb
pop
mov
sub
mov
nop
neg
popf
or
sub
out
sbb
cmp
or
cmpb
xchg
inc
or
inc
mov
lods
shlb
scas
pop
dec
cmovne
or
cmp
adc
or
fildl
push
or
jae
outsb
leave
push
push
or
adc
fdivl
mov
mov
add
mov
push
mov
js
xor
sbb
lret
cs
pop
inc
add
dec
scas
call
xchg
xor
or
push
dec
or
in
dec
sahf
or
xor
cs
pop
rorb
add
adc
jle
test
inc
jnp
aas
adc
jbe
cmpsl
xchg
xor
mov
cmp
sub
dec
dec
adc
nop
cmp
aam
lds
sub
enter
jnp
pop
jb
lods
mov
lret
call
cmp
xchg
loopne
xor
and
movsb
jb
pop
repnz
push
int3
sbb
sub
sub
nop
sub
fcomps
xchg
fcomp
jmp
xor
sbb
outsb
xchg
sbb
rolb
or
xchg
add
mov
sbb
add
dec
push
jns
push
adc
adc
adc
repnz
dec
mov
and
xchg
cmp
and
and
and
andb
iret
add
xor
shrb
cmpb
sub
xor
repnz
sub
leave
enter
pop
aaa
subl
inc
jl
jo
add
sbb
adc
das
jmp
xchg
ret
mov
jmp
add
std
push
or
sub
inc
pop
jne
push
pop
push
lock
add
mov
repnz
xor
pop
lret
mov
enter
jne
adc
cltd
fcmovnu
subb
xor
das
jg
sub
xor
or
icebp
sub
jecxz
fsubs
push
xchg
xchg
popa
pop
adc
or
mov
lea
adc
sub
andb
xchg
xor
add
aaa
push
push
mov
mov
push
push
sub
lock
pusha
xor
pop
test
push
push
push
ret
and
out
push
call
addr16
movsl
or
or
adc
sbb
or
push
sub
and
mov
lock
sbb
sbb
adc
push
or
pop
lods
ss
pop
inc
jmp
xor
cwtl
pop
push
aaa
dec
xor
adc
push
adc
out
adc
xchg
lahf
sbb
mov
lods
outsb
ror
and
loopne
dec
or
mov
stc
les
and
pop
jns
inc
jl
sbb
push
mov
add
xor
bnd
shlb
arpl
aas
mov
xor
inc
push
arpl
dec
jb
cmp
in
sub
lods
jns
add
call
outsb
jp
or
inc
roll
mov
push
xor
pushf
push
and
cmpsb
sbb
movsb
sub
or
mov
das
out
adc
push
push
call
psubsw
cmpsb
add
stos
and
out
dec
jae
andl
inc
fiadds
inc
push
mov
jns
inc
cwtl
or
cmpsl
es
sahf
movsb
cmp
mov
cmp
fs
cmp
add
cmp
pop
adc
xchg
repnz
inc
cltd
cli
xchg
pop
clc
lea
and
lea
fmuls
adc
lock
fbld
into
jp
dec
push
mov
xchg
in
adc
add
push
mov
mov
je
adc
test
add
push
jmp
cld
outsb
les
mov
push
clc
pop
roll
and
or
test
insb
add
mov
and
rcrb
das
pop
pop
push
inc
sbb
leave
add
sbb
ret
test
adc
jb
jp
adc
jae
movsb
cmp
sbb
dec
in
sbb
jmp
lret
scas
or
mov
lds
popf
jo
cmc
lea
push
mov
inc
sti
mov
lods
cmpl
imul
push
push
sbbb
ljmp
mov
cmp
stos
dec
call
bound
adc
xchg
fimuls
cmp
jmp
or
insb
sbb
leave
or
mov
push
inc
movsb
or
addr16
nop
mov
xchg
daa
cmp
mov
mov
push
std
push
and
or
lds
outsl
push
aam
sub
adcl
adc
std
adc
push
and
adc
dec
loopne
cmp
sub
icebp
sub
pop
mov
push
inc
xchg
mov
insl
jmp
dec
xor
jnp
add
repnz
icebp
sbb
push
pop
push
push
aaa
inc
dec
mov
and
pop
mov
xor
gs
andb
xchg
sub
mov
lahf
mov
ljmp
lds
dec
cmpsl
int
lds
inc
xchg
roll
scas
or
or
mov
lahf
push
lods
dec
jne
pop
push
mov
cmp
shlb
pop
dec
mov
js
jecxz
jle
popl
and
sbb
stc
pop
push
and
call
je
pop
out
movsl
fst
jns
int3
mov
cmp
ss
sbb
pop
jge
jno
aaa
and
jl
xchg
dec
fmulp
or
sub
push
cwtl
rorb
jns
iret
push
or
in
pop
dec
adc
push
lahf
jge
mov
sahf
xchg
add
mov
pop
or
mov
push
cmpsl
pop
xor
fidivs
jge
xor
push
push
es
push
cmp
sbb
mov
sbbb
add
popa
and
xchg
shll
or
call
push
inc
daa
insb
pop
dec
mov
and
aad
pusha
cmpsl
pop
and
push
scas
je,pt
pop
and
dec
insb
adc
push
repnz
xlat
into
push
repnz
inc
mov
adc
dec
lcall
cwtl
add
inc
les
inc
dec
push
add
add
sarb
add
jo
add
fwait
pop
xchg
sub
nop
mov
push
mov
test
pop
or
insb
jl
mov
test
pushf
pop
xor
jecxz
push
scas
mov
pop
jns
mov
or
xlat
add
fldenv
lea
test
les
xchg
or
sub
add
sti
xor
repnz
ds
jl
cmp
shlb
xor
cmp
jl
sbb
sbb
mov
jp
cmp
pop
cmp
dec
mov
mov
pop
rorb
lods
mov
mov
or
gs
pusha
leave
or
mov
xchg
pop
or
push
inc
jns
movsb
addl
push
nop
add
lea
sbb
push
outsl
push
add
mov
adc
mov
loopne
sbb
movsl
lds
cld
add
cmp
and
xlat
push
ret
or
xor
out
sub
inc
sbb
mov
shll
or
fadd
jmp
cltd
jg
inc
adc
aad
jl
js
jo
push
addb
es
push
sub
sub
cmpb
test
mov
mov
push
xchg
mov
call
jb
mov
adc
pop
jne
push
or
pop
xor
mov
jge
xchg
ss
mov
add
or
add
sub
cwtl
push
or
mov
add
test
nop
mov
push
dec
inc
add
push
in
popa
and
add
xchg
sbbl
and
loop
dec
inc
cltd
push
fsubrl
cld
adc
dec
sahf
test
add
pushf
xor
cmp
sti
bound
adc
xor
stos
and
mov
dec
lea
daa
lea
mov
movsl
xchg
mov
pop
jo
rcr
xor
test
xor
mov
add
cmp
inc
add
dec
add
lds
push
dec
popa
mov
xor
and
xchg
movsl
aam
sbb
dec
sub
sub
pusha
push
loop
sbb
and
pusha
push
insb
cmp
test
mov
add
push
mov
xchg
pushf
dec
jecxz
and
xchg
nop
inc
inc
adc
or
pop
xor
and
inc
sbb
or
cmp
adc
mov
pop
add
dec
jg
adc
add
push
sub
or
or
sub
dec
and
jle
xchg
dec
dec
adc
adc
and
push
cmp
insl
add
xchg
mov
sti
jl
inc
sub
and
imul
or
adc
outsb
or
aas
dec
mov
adc
sbb
pop
add
enter
or
xchg
adc
add
mov
add
icebp
jg
call
inc
cmp
jae
mov
add
or
xchg
ret
and
pop
add
xlat
in
movups
imul
cmp
nop
jl
pop
push
imul
and
add
mov
add
sub
mov
push
ret
xor
fs
adc
jle
ret
sbb
mov
inc
leave
das
jle
pusha
sub
add
push
pop
das
ret
jmp
test
lea
and
adc
mov
in
lahf
sbbl
add
sub
aas
rolb
ja
mov
add
pop
mov
sbb
in
aam
mov
mov
in
jg
add
fidivs
push
lods
xor
dec
dec
loopne
pop
inc
sbb
dec
fs
ljmp
shlb
sbb
push
in
orb
add
pop
adc
mov
add
xlat
lock
pop
insb
insb
ljmp
test
inc
or
lret
sbb
sbb
fidivrl
add
cmp
cmp
xchg
jb
je
add
push
xchg
sbbb
push
cmpb
dec
pop
pop
pop
pusha
flds
imul
mov
add
insb
mov
ds
fstps
sub
mov
adc
pop
add
rcrb
or
and
lods
xor
xor
and
mov
adc
add
neg
pushf
push
lret
inc
jle
add
hlt
sahf
mov
cmp
add
mov
pop
hlt
das
inc
push
or
sub
jno
iret
mov
jno
add
or
jmp
mov
data16
push
lods
cmp
xlat
imul
push
mov
push
or
and
xlat
ss
adc
pop
pop
dec
inc
mov
adc
fiaddl
cmp
roll
or
sbb
test
add
imul
lds
sbb
inc
test
pusha
adc
and
lds
lock
stc
dec
and
mov
test
xrelease
loopne
jl
js
scas
push
fistpll
jnp
shr
les
mov
xchg
inc
xor
out
pop
jo
push
inc
cmp
test
and
add
les
mov
rorl
je
cld
mov
xchg
sbb
jne
test
push
mov
mov
inc
lea
int3
in
push
jb
mov
xor
push
and
stos
mov
sbbl
ret
lock
mov
out
or
jns
push
rorb
push
xor
cmp
xchg
lods
daa
adc
mov
rolb
push
movsl
mov
adc
insb
movsb
mov
sbb
sbbl
outsb
add
outsl
jnp
jno
js
mov
sbb
mov
dec
dec
or
movsb
dec
sarl
ret
jge
clc
sub
or
fisubs
in
or
test
inc
add
add
or
inc
lahf
enter
rclb
jl
movsl
and
inc
pop
push
mov
xor
add
push
inc
loopne
mov
push
jp
dec
sbb
add
imul
test
and
mov
sub
mov
jmp
pusha
iret
push
jne
cmp
je
cmp
je
cmp
je
cmp
push
cmp
or
inc
cmp
and
pop
fnstsw
push
mov
mov
dec
hlt
jne
daa
loop
push
inc
add
mov
pop
cmp
dec
rorb
je
leave
js
es
mov
aad
test
dec
and
data16
pop
sbb
cmovne
jl
mov
rolw
mov
orb
pusha
push
sbb
repz
aam
ret
add
adc
push
pop
or
sbb
cltd
fcoml
jo
or
mov
shrb
xchg
outsb
xchg
xchg
rcll
lock
xor
inc
pop
sbb
lret
adc
cmp
out
xchg
sbb
xchg
mov
mov
lods
lock
pushf
cmp
sarb
jecxz
mov
mov
xchg
mov
push
xor
or
aam
xor
addb
enter
aam
cmp
dec
aam
lret
xchg
inc
mov
mov
lock
ret
and
aaa
in
and
aam
sbb
mov
mov
sbb
inc
push
sub
xchg
adc
inc
sbb
sub
mov
aam
sbb
cs
imul
mov
sbb
flds
adc
cmp
int3
push
and
and
sub
adc
lock
or
dec
mov
pop
pop
cmp
loope
clc
cs
cs
gs
and
xchg
cmp
jmp
sub
xchg
fs
xor
lock
jno
mov
stc
inc
sub
pop
sub
xor
push
mov
mov
pop
ljmp
fstl
jne
dec
es
outsl
adc
sub
xchg
xor
adc
mov
loopne
xchg
ss
add
or
push
jmp
les
into
adc
xor
or
mov
mov
shll
insl
out
adc
test
lea
mov
movsl
nop
loopne
inc
fildll
loope
jmp
or
mov
mov
fstps
mov
out
inc
sbb
push
aas
dec
dec
adc
dec
and
adc
xchg
and
mov
xchg
push
push
call
adc
ficoml
mov
or
and
mov
mov
and
adc
mov
aam
js
mov
cs
aam
sub
push
shlb
dec
xor
pop
sub
aas
out
fdivl
sub
test
sbb
xchg
test
push
je
xchg
mov
ret
fstpt
jp
xchg
dec
cmp
jge
aas
sti
pop
test
mov
push
cmp
popf
xchg
jg
inc
mov
rol
rorb
adc
fwait
xchg
push
enter
mov
pop
enter
mov
push
push
cmp
je
mov
scas
mov
scas
jne
dec
fcomp
mov
lods
addb
xor
inc
pop
xchg
push
push
fidivrl
jbe
shr
cld
jbe
cmp
nop
push
cmp
pop
or
les
and
sbb
push
es
pop
push
or
xorb
pop
adc
hlt
imul
mov
xchg
gs
pop
iret
inc
cltd
mov
inc
add
pusha
push
fwait
lods
pop
push
cli
les
lret
ret
xchg
rcrb
mov
das
lods
jne
cwtl
pusha
dec
xchg
lea
pop
xor
dec
push
push
into
ret
jne
push
stc
push
or
adc
stos
out
jns
pop
adc
incl
adc
push
push
mov
pop
mov
or
pop
movl
sbb
add
and
pop
mov
mov
push
cmp
push
mov
stos
xor
xchg
rorl
loope
cmp
push
outsl
sbbl
mov
pusha
push
movsl
and
test
inc
xor
adc
fs
dec
add
pop
movl
cmpsb
or
mov
pop
jecxz
inc
inc
scas
ss
cmp
xor
and
add
adc
or
or
mov
jmp
inc
sub
push
adc
lahf
pop
in
adc
in
int
jmp
pop
or
push
push
pop
rcrl
movb
adc
inc
mov
aaa
cmp
sub
inc
sbb
pop
cmpl
add
add
mov
pop
rorb
xor
cmpl
mov
mov
push
mov
shll
mov
arpl
xchg
push
dec
and
imull
sub
push
or
std
sub
sar
dec
cmp
or
fcoms
stc
push
outsb
insb
pushf
or
add
pop
leave
lods
push
jl
lds
mov
cmpb
call
xchg
in
jge
jne
cmp
jne
push
jp
call
sbb
pop
cwtl
es
scas
ja
cmp
inc
cmp
adc
daa
sarb
sbb
das
mov
or
jl
dec
ss
adc
and
sub
sahf
add
xor
xor
add
cli
fdivrs
mov
out
push
or
or
add
pop
jae
mov
dec
mov
xchg
push
insb
inc
xor
pop
aam
or
jmp
mulb
popa
loopne
jbe
and
and
pop
mov
nop
lret
inc
test
jecxz
cmpsb
push
pop
jo
js
inc
scas
mov
insb
sub
jnp
inc
rcl
mov
movsb
mov
test
sbb
cmp
scas
mov
add
ds
test
xor
mov
jae
arpl
or
lret
lods
loopne
aad
cld
adc
push
dec
dec
fldenv
adc
movsb
mov
mov
push
push
push
stc
data16
pop
mov
les
jle
adc
and
sub
adc
push
lea
gs
pop
shlb
sub
ss
fbstp
stc
sub
push
push
push
movsb
adc
inc
adc
push
cld
lret
inc
add
movb
int3
pop
or
and
addr16
or
mov
push
inc
add
push
ja
movsb
sbb
test
hlt
andb
scas
mov
push
and
nop
cmp
inc
notl
cmp
movsl
aad
ja
add
inc
shrb
repz
jl
add
je
fbstp
mov
xor
inc
dec
test
jnp
sub
push
adc
add
cmp
insl
mov
ret
movsl
add
mov
sbb
cmpsb
mov
mov
pop
clc
lahf
mov
jle
add
lods
push
and
and
push
es
add
sub
rolb
or
push
clc
cmpb
push
cld
dec
imul
testl
inc
cmp
jo
and
jnp
sbb
cmp
jae
int3
rcll
push
push
sbb
fdivrl
push
lahf
push
xlat
movsl
repz
sub
lret
loopne
mov
cmp
jne
test
je
mov
cmp
mov
cmc
xchg
movsb
add
pusha
xor
sub
push
cmp
inc
pop
or
aad
jne
out
inc
add
hlt
jg
in
inc
cmp
inc
pushf
cli
pop
or
and
pop
sub
addb
pusha
das
jg
mov
push
sub
xchg
push
in
sub
sarl
or
cmp
aad
or
inc
dec
push
sbb
adc
push
and
ret
and
and
pop
rcrb
push
add
mov
cmp
icebp
je
push
repz
and
shrb
and
sti
pop
iret
fisttpl
cmpsb
mov
inc
test
test
cmp
or
pop
into
add
js
adc
insl
rolb
add
xchg
andb
jo
push
push
xchg
push
push
divl
pushf
push
ficomps
aas
inc
push
popa
imul
inc
outsl
sbb
xchg
lock
jo
mov
cmpsl
in
mov
mov
sbb
pop
sub
mov
adc
mov
jmp
push
add
push
loope
add
lret
push
insl
push
push
xchg
aam
xor
test
or
fs
push
addb
sti
xor
sti
call
xor
xchg
out
dec
mov
xchg
je
inc
and
or
leave
es
push
leave
imul
or
pop
mov
xor
add
leave
and
dec
and
das
sbb
dec
push
push
and
mov
inc
rorb
xchg
ret
jle
popf
cmp
movsl
cli
cmpsb
sbb
push
sub
ds
test
aad
iret
add
imul
mov
add
xor
inc
jo
lock
mov
pop
fadds
adc
and
push
enter
or
add
push
dec
ds
xor
push
push
sub
pop
xor
xchg
xor
add
jmp
das
jno
mov
jl
add
pop
mov
or
push
gs
or
adcl
popa
cmp
stos
xorb
dec
ret
lret
or
stos
enter
sahf
jnp
icebp
push
aaa
add
and
outsb
pusha
ja
mov
shll
push
dec
mov
sub
and
imul
lds
or
jle
daa
xor
xlat
insl
vandps
icebp
and
sub
pop
adc
imul
add
push
int3
addl
popa
push
inc
mov
inc
mov
dec
sbb
sub
inc
and
arpl
mov
sbb
inc
push
aad
dec
push
jne
cmp
jb
sub
jmp
mov
dec
movzwl
dec
pop
cmpl
push
setl
movzbl
mov
movsb
fiaddl
clc
mov
mov
loopne
pop
loopne
test
nop
incb
sbb
pop
dec
orb
xor
pop
cmp
or
int3
xchg
adc
jae
or
shr
jg
add
lret
push
push
push
ror
adc
inc
push
adc
mov
imul
pop
push
sbb
sbb
cmp
cs
imul
fucomp
das
inc
stos
fs
pop
les
push
addb
push
mov
cmp
inc
leave
adc
arpl
or
and
add
or
or
aas
int3
add
push
add
movsl
movsb
daa
sbb
mov
fiadds
sub
cmp
push
mov
in
cwtl
add
add
sbb
cltd
push
sarl
sbb
add
je
adc
enter
add
adc
sub
or
lods
and
inc
adc
leave
mov
xchg
xor
push
push
rcrl
push
sbb
push
cmp
dec
pop
out
sub
and
ret
fst
mov
sbb
jb
dec
lea
pusha
clc
dec
mov
icebp
bound
sbb
push
cmp
cs
pop
pop
orl
cmp
mov
test
dec
sub
enter
fwait
mov
inc
inc
xor
and
push
rcrl
xor
mov
sub
mov
mov
xor
jmp
cld
icebp
or
sbb
popa
sub
mov
dec
xor
xchg
sbb
mov
test
add
aas
and
xchg
mov
sub
cmp
or
dec
jl
mov
jl
pushf
fiaddl
jns
cwtl
add
imul
sub
call
pop
jl
or
fidivs
sbb
mov
cmpsb
sbb
push
ljmp
pop
push
rclb
push
jae
dec
and
push
push
xor
hlt
fwait
and
hlt
add
push
pop
add
add
jno
adc
jne
add
or
add
adc
mov
sbb
in
xor
dec
dec
repnz
dec
jg
mov
add
cmp
jp
pop
xor
sub
push
cmp
xchg
mov
adc
ret
mov
mov
mov
imul
lea
cmp
jl
ljmp
cmp
pop
jne
mov
push
or
int3
jbe
xchg
sbb
cmp
addl
lahf
rolb
shll
cmp
mov
sub
faddl
mov
lods
invd
jne
ret
xor
pop
push
fldl
sub
dec
lds
mov
sbb
pmulhuw
ret
and
add
je
push
dec
ret
sbb
jo
popf
inc
cmp
xchg
mov
out
mov
add
dec
orb
lods
inc
or
dec
rolb
push
ljmp
pusha
sub
xchg
aam
testl
push
push
and
adcb
or
sub
orl
push
pop
pop
mov
mov
inc
dec
xor
inc
add
inc
push
add
aad
and
push
mov
imul
sbb
or
push
imul
push
push
add
aad
and
cmp
xor
pusha
xchg
cmp
push
mov
inc
testl
out
rolb
push
and
jg
add
jg
push
mov
fmuls
rolb
daa
push
adc
push
push
inc
jg
adc
dec
sub
jne
sti
test
dec
lea
mov
add
repz
xchg
fldl
cltd
jge
pop
mov
xor
inc
sahf
mov
xchg
pop
enter
push
imul
sbb
daa
jmp
jl
scas
or
loopne
sbb
push
or
aad
in
adc
xchg
lcall
add
test
pop
inc
pop
ja
mov
and
leave
inc
dec
and
and
pop
sti
dec
sahf
dec
enter
mov
mov
daa
mov
adc
xchg
je
add
scas
push
add
enter
mov
adc
into
std
jo
adc
sbbb
inc
ret
jle
ds
pop
les
je
and
xor
add
test
subb
push
imul
sub
xlat
testl
cmpsl
inc
pushf
push
scas
sbb
mov
insb
add
insl
mov
mov
cmp
mov
ret
xchg
xchg
push
push
push
outsl
sbb
movl
mov
jo
xor
sub
mov
add
jno
ret
fsubs
adc
or
or
jo
jg
push
jne
out
into
cmpsl
imul
push
inc
nop
out
fdivs
inc
js
ret
adc
mov
xchg
outsl
or
sbb
cmpsb
sbb
jbe
jp
xchg
sub
fisubrs
imul
iret
aad
or
pushf
outsl
cmp
addr16
and
dec
dec
mov
sahf
movsb
push
push
data16
sub
cltd
jbe
imul
push
lods
push
in
nop
push
inc
cmp
dec
sub
or
mov
andb
mov
pop
in
mov
and
pop
addr16
sarl
dec
enter
daa
enter
mov
ror
cwtl
dec
out
add
push
add
loop
nop
cmp
inc
aad
pop
test
push
enter
push
push
push
pusha
mov
mov
jb,pt
sub
push
adc
sub
mov
and
filds
push
mov
testl
jno
mov
inc
adc
push
or
insb
push
lods
xor
push
inc
popa
addl
dec
pop
dec
xchg
cmp
inc
sbb
mov
arpl
xor
sub
mov
fildl
jno
stos
jae
xchg
or
jb
lea
gs
pop
imul
xorl
int
xchg
dec
cltd
push
ss
inc
pop
mov
sub
and
jb
aas
add
inc
push
add
inc
out
pusha
push
xor
fldl
mov
adc
les
mov
lret
in
cmp
push
sub
or
iret
ljmp
push
jb
or
mov
std
dec
inc
incl
pop
pop
cmp
jbe
adc
adc
add
loop
cmp
sbb
gs
cwtl
inc
sbb
pop
push
dec
cmp
sub
insb
sub
mov
cmp
mov
hlt
pop
out
arpl
pop
add
dec
addr16
add
jne
lahf
and
mov
filds
and
or
popa
add
mov
int
decl
push
mov
inc
dec
stc
sub
adc
mov
je
test
jl
ljmp
jg
mov
adc
sub
pop
les
lock
sub
xorb
jle
dec
cmpb
dec
xchg
pop
mov
push
js
mov
decl
mov
push
push
out
add
cmp
adc
shll
push
adc
xor
aam
sub
lahf
mov
fcmovu
insb
lret
nop
fwait
aam
adc
jb
jae
or
shl
fcmovnb
push
pop
lock
mov
fiaddl
out
cwtl
or
add
hlt
xchg
test
sub
mov
pop
ret
test
sbb
mov
sbb
push
unpcklps
inc
loopne
mov
mov
div
ljmp
jbe
adc
pop
mov
dec
mov
adc
mov
xorb
mov
mov
xchg
push
loopne
xor
fimull
pop
or
mov
jmpw
fstp
xorl
mov
sbb
push
adc
or
sub
mov
ret
popa
jl
adc
ja
test
add
sub
cmpb
test
or
mov
adc
es
mov
jp
call
jb,pt
pop
out
ss
xchg
mov
je
call
iret
xor
add
mov
push
push
mov
sub
loopne
mov
stos
out
outsl
dec
cvtps2pi
jb
fcomip
push
jge
sub
mov
sbb
adc
fbld
and
shll
cmp
enter
push
loop
ja
jmp
mov
sahf
cwtl
jne
outsb
xor
jbe
mov
adcl
or
pushf
fs
pop
inc
jg
push
in
mov
shll
pop
or
xor
and
jae
rolb
inc
aaa
mov
jne
test
pop
and
stos
mov
enter
jl
daa
jp
pop
loope
daa
sub
call
rcll
call
mov
cmp
xor
or
out
and
fiaddl
mov
mov
push
pop
xchg
pop
inc
bound
jb
push
add
sbb
mov
jg
dec
testb
push
dec
das
and
fadds
or
lods
pop
sbb
add
mov
add
inc
movsl
cltd
pop
mov
insb
fildll
stos
pop
add
cmpl
adc
or
addr16
inc
cmp
push
jne
push
adc
pop
enter
pop
xchg
push
inc
and
adc
xchg
push
loope
pop
xor
cmp
jb
push
inc
dec
fs
loopne
test
and
push
shl
mov
shl
shll
imull
xchg
mov
mov
push
sub
push
add
outsl
sbb
bound
jns
push
mov
xchg
call
sbb
push
es
inc
and
popf
add
imul
push
or
cmpsb
push
fcompl
std
pusha
push
mov
clc
cmp
jbe
or
out
loop
pop
cmc
imul
cmp
in
and
push
adc
sub
mov
sub
sbb
pop
aad
dec
jo
and
push
pop
pop
mov
adcb
lret
adc
jg
sbb
flds
flds
cmp
les
aam
pop
jl
fmulp
lret
leave
iret
sbb
push
sbb
sub
fmuls
push
sbb
pop
out
dec
inc
sbb
jae
adc
lock
sbb
fdecstp
xor
push
lahf
movsl
aas
and
pop
jns
pop
add
add
jnp
adc
cmpl
or
adc
lcall
add
push
or
push
cmp
dec
inc
jb
addb
xor
pop
cmp
sub
jae
js
xchg
adc
jecxz
cmp
add
in
icebp
adc
push
mov
pusha
inc
push
pop
fnstcw
mov
jmp
mov
or
mov
adc
and
pushf
sarb
fdivl
aam
cwtl
stos
add
pop
repz
push
dec
xor
gs
iret
repnz
inc
adc
cmp
jl
adc
push
push
adc
data16
or
mov
shlb
jo
or
xorb
sub
push
xor
xchg
dec
sbb
pop
push
call
insb
push
sbb
ds
sbb
push
in
adc
cld
xor
xlat
sbb
lea
jmp
in
fmull
jae
or
and
xor
in
mov
leave
cmp
pop
iret
push
iret
ds
push
punpckhdq
pop
js
lock
je
sub
xchg
cmp
fnstsw
inc
lret
pop
je
push
dec
mov
vcvttsd2si
loop
mov
or
repnz
inc
ss
js
pop
inc
lcall
add
sbb
lods
adc
sbb
cmp
add
push
call
jmp
shl
jg
mov
loopne
in
iret
lea
fstpt
cmp
pop
jmp
ffreep
dec
mov
cmpl
push
push
inc
cwtl
pop
lea
arpl
jmp
push
cmc
pop
mov
push
rorl
mov
xchg
es
sbb
push
bound
jne
and
add
jg
test
ret
sbb
xchg
add
dec
clc
xchg
jbe
dec
test
push
push
sbb
sarb
cld
inc
and
sbb
lock
std
das
clc
cmpw
jne
mov
je
test
imul
sbbl
mov
loopne
xchg
dec
pop
push
mov
push
push
call
sbb
push
jmp
cmpl
xor
cmp
cmpl
or
sbb
push
lock
dec
ss
inc
add
call
popa
inc
clc
push
shl
shl
add
mov
mov
inc
daa
inc
je
call
or
pop
dec
jo
jmp
xchg
cli
pop
fdivr
add
loopne
lea
push
push
dec
sbb
adc
daa
mov
ds
cld
push
push
jbe
sub
xlat
bound
xchg
jp
adc
sub
sbb
cmpsl
scas
jo
push
jmp
andl
leave
in
sbb
loope
and
je
mov
imul
jmp
jle
adc
jle
push
mov
add
adc
push
mov
and
push
mov
aam
iret
aaa
xor
fldlg2
pusha
aaa
push
inc
incl
je
cmp
push
sbb
xlat
sub
push
sti
inc
loope
outsb
push
push
add
jle
mov
mov
pushf
jmp
iret
pusha
adc
xchg
xchg
and
inc
inc
inc
push
pop
push
cmp
adcb
gs
or
push
testb
and
repnz
pop
xor
dec
inc
or
and
ja
or
jmp
adc
rolb
lods
andl
xchg
adc
addb
adc
xor
jp
mov
sbb
test
pop
sbb
test
mov
call
loopne
sbb
repz
fwait
ret
fcoml
or
or
and
add
pop
push
add
cmp
out
das
mov
jp
movsb
fdiv
push
out
clc
rclb
sub
xor
mov
ret
loop
je
push
xchg
jg
mov
cmp
jne
jecxz
push
in
inc
add
push
push
aaa
mov
out
mov
add
lfence
leave
push
push
icebp
test
addr16
aam
cmp
xchg
int3
cmp
adc
pop
cmp
mov
lock
subl
mov
insl
movsb
lock
jb
sub
adc
sbb
jecxz
test
call
xor
and
ja
insl
inc
orb
out
add
incb
jmp
rolb
add
hlt
inc
inc
cwtl
popa
cli
sbb
dec
adc
add
jmp
push
mov
xchg
push
cmp
cmp
rcrb
mov
sti
push
mov
das
mov
sub
push
add
ss
out
or
popf
divb
sub
inc
or
mov
cwtl
nop
cmpsb
pushf
cmc
ret
add
clc
fs
cmp
add
push
outsb
adc
fs
pop
icebp
xor
cwtl
jp
push
ss
pop
or
pop
xor
xchg
mov
sub
and
inc
lcall
xor
adc
sbb
xchg
rorl
lods
adc
mov
int3
and
jnp
fst
or
push
rol
cmp
enter
inc
or
stos
fsubrs
sbb
je
push
and
scas
mov
cmp
out
das
push
cld
push
stos
in
add
bound
cwtl
xor
mull
sub
imul
dec
xor
adc
cmp
add
cli
and
add
pop
mov
and
out
push
idivb
scas
mov
pop
mov
cwtl
sub
inc
mov
pop
mov
push
xor
arpl
dec
jmp
cmp
inc
aad
xor
jge
int3
inc
mov
mov
sub
fwait
jae
adc
mov
je
push
mov
dec
fs
pop
mul
xor
add
jp
add
xchg
shlb
pop
mov
sbb
cli
sarb
jo
pusha
adc
or
in
lea
je
pop
push
cmpsl
mov
jns
push
xor
loopne
jmp
adc
add
shrb
in
adc
sub
sbb
dec
pop
insb
out
mov
pop
shr
insb
cli
add
push
or
jbe
scas
adc
loop
pop
into
push
jb
xor
in
sub
ds
add
push
jge
sbb
loopne
push
xor
insb
sbb
pop
filds
sbb
pushl
outsl
in
test
mov
test
data16
adc
sbb
push
cs
testb
bound
je
sbb
pop
jbe
mov
add
jge
adc
cmpsl
adc
adc
sbb
loope
data16
push
push
push
lea
aaa
dec
dec
mov
push
lods
lret
enter
add
push
dec
add
dec
rcrb
xor
and
push
das
cmp
imul
cmp
cwtl
jno
dec
xchg
mov
xor
jnp
je
into
mov
test
adc
or
outsb
lret
mov
lds
or
loopne
pushf
mov
adc
mov
cli
cmp
jb
push
add
loop
or
dec
xor
sarb
xor
mov
inc
lahf
sub
shll
inc
popf
clc
ret
jl
push
lock
add
xchg
add
or
push
sbb
leave
fwait
pop
cmp
das
scas
cmp
add
pop
loopne
sub
je
jmp
cmp
xchg
rclb
sbb
or
cmp
push
and
je
add
mov
jae
pop
xor
sbb
inc
jl
and
mov
icebp
mov
arpl
fs
ljmp
mov
imul
cmp
in
inc
fs
cs
int
insb
mov
pop
sbb
movsb
add
xchg
hlt
sbb
jae
fs
dec
fwait
pusha
or
and
andl
inc
add
mov
in
clc
mov
mov
pop
divl
out
push
aad
and
sbb
ss
js
and
shl
out
sbb
pop
jmp
mov
inc
push
mov
rcr
movb
not
jno
inc
stos
jecxz
pusha
aas
cmp
xchg
mov
add
or
jae
inc
add
push
jae
mov
add
push
in
je
inc
or
push
or
mov
and
jle
cmp
push
push
lods
sbb
sbb
push
outsl
push
sbb
cmp
ret
cmp
push
jo
pushf
pop
imul
pop
cmp
push
cmp
adc
int3
pop
mov
jle
nop
int3
dec
jl
or
fidivl
push
sbbl
cmp
sbb
xchg
sub
jnp
ret
push
mov
movb
cmp
sbb
xor
or
jnp
pop
cmp
pop
jb
push
mov
pop
sahf
xchg
shlb
lea
dec
je
inc
xor
push
outsl
and
jno
cmp
push
sti
clc
rolb
push
push
adc
xor
inc
add
xor
add
push
jae
nop
sbb
mov
dec
out
mov
jb
cmp
jne
clc
les
mov
cmp
pop
je
sarb
mov
push
stos
mov
pop
mov
add
cmp
shlb
int3
test
add
in
or
lods
xchg
mov
sub
andb
pop
sub
add
loop
call
outsl
add
pop
rorb
jb
arpl
cs
add
aam
add
inc
mov
dec
inc
test
lahf
adc
or
imul
mov
insb
jo
js
xor
faddl
popf
lahf
lahf
call
cmpsb
cwtl
jne
sti
sub
sti
or
push
mov
inc
int3
mov
cmp
cmpsl
inc
mov
mov
sub
push
and
pop
out
stc
add
mov
or
int
adc
and
ds
add
pop
ret
ret
add
xor
cmpsl
xchg
rorb
push
fadds
sbb
orb
je
or
orb
orb
pusha
push
dec
rcrl
mov
notb
stos
push
add
xor
mov
rcr
pushf
movsb
movsb
leave
cmp
jne
jg
into
clc
adc
and
imul
cmp
stos
loop
jo
insb
mov
xor
sbb
and
dec
pcmpeqw
add
add
in
test
adc
mov
and
sub
popa
add
fbstp
ljmp
sbb
pushf
in
repz
outsl
push
xor
xor
shlb
or
aam
lret
xchg
add
pusha
add
push
ja
jecxz
and
mov
lret
jp
inc
shll
mov
adc
adc
and
cmp
popf
lret
lea
mov
xor
sarb
mov
insb
cmp
sbb
pusha
mov
pop
cmc
iret
mov
inc
rorl
pop
fsubl
jo
rol
ljmp
add
xchg
add
lea
mov
out
add
jne
lea
loope
mov
add
or
adc
fnsave
push
ja
negb
js
adc
ret
inc
sbb
push
filds
fdivrs
mov
or
mov
out
jb
add
or
or
incb
repnz
addr16
xchg
out
out
add
iret
jo
or
cmp
pop
test
clc
out
sbb
inc
xchg
xchg
inc
outsb
dec
out
fnop
add
ret
roll
mov
pop
fistl
mov
sub
mov
pop
dec
jne
stc
lock
cmp
push
stc
je
imul
es
divb
inc
xchg
ja
fwait
lret
push
fildl
cld
aad
dec
add
dec
sub
das
je
add
push
scas
ja
xor
push
repnz
or
adc
in
jbe
shrb
add
nop
mov
mov
mov
fdivs
lret
clc
mov
cmp
cmp
or
jmp
cmp
pusha
scas
or
js
rclb
dec
xchg
aas
xor
lea
xchg
scas
push
inc
cmp
dec
shlb
jmp
mov
or
faddl
dec
iret
xor
arpl
cmp
arpl
inc
jecxz
out
cmp
adc
pop
push
push
or
or
add
shl
and
mov
enter
jle
or
mov
xchg
incl
fcoms
adc
mov
cmp
xor
adc
loopne
xchg
je
pusha
push
lea
imul
mov
xor
in
push
js
fstl
adc
cmpsb
shrb
int3
lock
or
int3
mov
dec
add
out
cmp
xchg
and
loope
add
sbb
lods
int3
push
pushf
or
sub
push
or
inc
push
sbb
insb
icebp
or
movsb
sarl
push
jl
jbe
je
ds
ret
ja
add
mov
shl
mov
je
cmp
je
not
mov
jne
mov
cmpl
call
sbb
adc
lds
sti
push
sub
inc
pop
and
pop
lea
inc
repnz
dec
add
inc
xchg
add
xadd
dec
push
add
lock
adc
pop
jb
lock
dec
das
jb
lock
cmpsl
addb
jmp
jns
push
adc
xchg
and
cmp
ret
jns
jp
dec
ss
mov
jbe
outsl
inc
out
mov
into
add
push
mov
dec
mov
into
lea
mov
sub
cs
adc
sahf
mov
and
push
leave
inc
push
je
jo
sbb
or
or
jl
testb
push
add
in
add
dec
push
jbe
call
or
inc
rcrb
adc
xor
jecxz
outsb
scas
sbb
adc
adc
in
lcall
mov
mov
movsb
fsubrs
push
jge
jne
push
mov
mov
inc
mov
and
sbb
cs
xchg
popa
insb
imul
mov
and
sbb
in
push
xor
xchg
add
mov
jg
divl
stos
or
ss
mov
fidivrs
inc
inc
lods
sub
push
test
mov
mov
fwait
sbb
or
cmp
data16
outsl
add
push
lea
push
pop
cwtl
push
adc
inc
or
sbb
insb
jno
sbb
lret
push
or
add
add
add
test
pushfw
xchg
fcoms
cli
les
mov
out
xchg
pop
xor
pop
add
pop
sub
popa
lock
pop
aad
push
roll
push
in
and
adc
fsubrs
mov
idivb
arpl
and
lods
rcrl
andb
inc
faddl
fwait
hlt
mov
xchg
into
inc
std
mov
xchg
rolb
or
sarl
adc
xchg
aad
aad
and
inc
jbe
incl
js
sarb
pop
loopne
or
adc
ja
add
inc
lahf
mov
or
jge
sbb
pop
adc
jg
adc
test
mov
add
sub
ret
pop
mov
pop
sbb
jo
pusha
pop
movsb
mov
pop
iret
inc
ljmp
mov
adc
and
mov
sbb
leave
rorl
push
or
pop
ret
loope
or
push
pop
into
and
ret
xchg
enter
pushf
adc
xchg
int3
mov
ds
daa
mov
cld
inc
aam
lret
bound
clc
aad
stc
popa
and
lcall
stos
add
lcall
pusha
cmp
adc
or
xchg
push
inc
push
cmp
and
jmp
mov
notl
add
loop
test
addl
add
por
loop
mov
push
pop
shlb
sub
ror
les
sub
inc
mov
in
mov
mov
xchg
mov
pop
mov
movsl
add
idivb
je
mov
cld
mov
ret
push
pop
addb
loopne
or
andb
jne
mov
mov
cmp
push
push
push
push
xchg
mov
add
push
lock
test
mov
and
mov
mov
xchg
cmp
mov
push
ss
insl
aaa
cmc
ljmp
pop
aas
ds
popa
and
lods
movzwl
cmp
cmpsl
mov
jle
inc
mov
push
sahf
xchg
out
dec
push
rcrb
or
int3
daa
or
aas
aam
outsb
xchg
cmp
push
arpl
cwtl
cmc
repnz
push
xor
push
xor
lret
mov
rorb
dec
push
cwtl
jno
mov
pop
sub
in
xor
mov
aas
xor
or
pop
loop
pop
xchg
push
add
aas
cmp
sub
sbb
sub
addr16
mov
stos
sbb
mov
add
js
mov
movsb
addr16
and
jb,pt
dec
pop
xor
push
js
mov
or
ret
xchg
movb
imul
lahf
ds
imulb
hlt
jb
sbb
xor
testl
mov
xor
inc
popf
adc
push
nop
aam
mov
sub
jo
inc
xor
pop
cmpsl
inc
and
ljmp
sbb
sbb
xchg
jnp,pn
or
rdmsr
xor
fcmovne
sarb
subl
addb
mov
aad
in
rcrb
adcb
xor
call
mov
inc
adc
pushw
push
push
mov
bound
idivl
pop
cmp
or
insl
in
and
xor
test
rorb
push
addl
and
mov
cmp
fmull
jb
pop
push
or
inc
sbb
add
jnp
pushf
push
and
fbld
xor
xor
mov
mov
jge
mov
rclb
xor
or
cmp
sub
cmp
push
testl
inc
cmp
cmp
inc
insb
js
push
sbb
push
xor
xchg
les
punpcklbw
mov
sbbl
inc
push
inc
cwtl
test
fadds
adc
xchg
dec
jle
adc
push
ljmp
or
lret
inc
clc
push
jno
jl
aas
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
ret
cmc
ss
fldl
pop
cmp
rcll
outsb
test
mov
sub
or
in
out
dec
push
push
pop
call
jns
andl
pop
mov
mov
jl
andl
adc
mov
adc
push
test
cld
and
scas
in
inc
cltd
or
jne
aam
outsb
inc
or
scas
loopne
jecxz
fistpll
jno
cltd
push
pushf
dec
xor
pop
adc
push
sahf
push
xchg
dec
outsb
mov
mov
test
mov
xor
add
add
and
ss
aad
add
les
pop
test
loop
xchg
inc
jo
and
inc
mov
ret
ret
lods
pushf
fdivrl
in
test
push
mov
loopne
test
mov
ret
dec
cmp
xlat
shll
sbb
jl
or
lcall
adc
pop
je
popf
sbb
not
roll
mov
jmp
add
arpl
insb
dec
dec
adc
lock
jno
inc
push
inc
adc
add
bnd
fdivs
inc
pop
pusha
add
cmp
and
pop
addl
pop
dec
push
sahf
pop
pop
fnsave
negb
or
push
pop
xchg
jp
xor
push
push
sub
dec
test
sbb
push
arpl
add
jne
sbb
push
lods
jnp
xor
add
sbb
out
idivl
testb
je
and
outsb
mov
mov
jbe
sbb
xor
and
xor
xchg
push
sbb
movzbl
and
mov
dec
pop
push
out
inc
sbbl
push
mov
ja
fisubl
scas
push
mov
jl
xor
sbb
pusha
repnz
addl
xor
add
and
jbe
out
push
push
xor
and
aaa
add
add
add
sarb
mov
mov
test
pop
pop
stc
or
bound
stos
cs
xchg
push
cmp
fisttps
ret
add
sbb
cmp
lea
inc
xor
mov
call
movlhps
push
pop
add
cld
mov
mov
in
push
and
movsl
cmp
push
dec
or
and
dec
xor
mov
aam
fdivr
nop
jmp
gs
fcompl
fmuls
pushfw
inc
xlat
adc
out
or
aad
test
test
push
mov
mov
mov
clc
push
out
leave
lock
add
dec
arpl
out
pop
ret
lods
add
fstl
jo
jmp
xor
movsb
mov
test
push
rorb
push
pop
cmp
sub
mov
sti
sub
rorb
mov
insb
mov
cwtl
mov
sub
mov
adc
and
sub
icebp
lea
jp
in
cmp
out
or
ljmp
shrl
mov
dec
icebp
add
insl
sub
nop
xchg
cwtl
gs
pusha
push
cmp
mov
push
xorl
lock
push
cmc
xchg
cmp
push
jno
add
xchg
mov
lock
mov
mov
clc
andl
add
xchg
fwait
or
mov
shlb
or
pop
pop
bound
push
out
add
jl
add
xchg
movsb
cmpsb
push
and
sbb
sbb
jge
rclb
mov
xchg
cmp
aam
sub
movsl
aam
daa
mov
scas
scas
sub
aad
adc
add
push
mov
lcall
jge
ljmp
sbb
pop
and
xor
sarb
cli
push
sub
mov
aad
mov
sti
movsl
cmp
pop
jae
ja
push
push
gs
push
bound
fcomps
ljmp
dec
insb
mov
xchg
cmp
pop
andl
test
dec
push
push
pop
rorl
inc
test
jo
cmp
fcoms
xor
mov
jp
cli
orb
jge
adc
jg
test
sbb
int
pop
cmp
fdiv
pop
loopne
jne
mov
inc
pop
pop
mov
xor
or
cld
cmp
cmp
int
pop
mov
push
mov
shlb
sub
jecxz
or
sbb
pop
mov
jmp
xchg
jnp
jmp
int
jbe
xlat
adc
stos
push
or
sub
or
cli
push
cld
mov
push
cmp
xchg
clc
push
aam
idiv
add
jge
movl
shr
inc
add
outsl
push
dec
sahf
xorl
repnz
adc
sbb
cmp
sub
mov
sbb
sbb
mov
test
sti
fimull
adc
fucom
dec
dec
test
pop
jb
inc
in
adc
sbb
lock
cmp
push
cmpsl
inc
movsb
sub
inc
sarb
cltd
sbb
sbb
jno
ja
push
pop
adc
sub
xor
sub
je
pop
lock
pop
cmp
push
jge
cmp
xor
sbb
repnz
or
cmp
adc
mov
sbb
xor
push
push
addl
and
orb
rclb
insl
pop
addr16
and
push
pop
lea
add
cld
loopne
adc
push
arpl
movsl
addl
insb
jo
sbb
sbb
aaa
jecxz
and
or
pushl
mov
repnz
inc
movsb
inc
add
add
add
inc
xor
adc
push
sub
je
adc
sub
push
add
pop
jo
daa
ss
or
adc
sbb
add
push
sbb
mov
mov
pop
mov
lock
lea
cld
insl
pop
mov
xor
push
aaa
jbe
sbb
test
out
push
dec
jmp
aas
or
cmp
dec
push
adc
mov
movl
fiadds
sub
push
jo
push
rorb
in
insb
or
lahf
or
enter
jo
out
dec
pop
inc
dec
dec
jmp
pop
setge
adc
cwtl
cmpsl
add
lret
or
lods
outsb
mov
push
add
cmpsb
rcrb
xor
cmpsl
jmp
out
cmp
popa
sbb
orb
push
hlt
and
add
mov
jae
push
inc
shr
dec
cmp
test
add
dec
int3
mov
push
loope
cmp
inc
push
dec
dec
ja
sub
xchg
push
push
adc
enter
test
inc
xor
rcrl
scas
lahf
xor
lods
sbb
push
or
orb
lea
out
xor
jecxz
clc
daa
xor
mul
lock
fs
dec
sbb
pop
push
xor
cld
mov
adc
pop
notl
add
aas
adc
js
xor
mov
in
add
inc
mov
inc
or
mov
xchg
fmuls
repz
cmpb
loope
xchg
inc
aad
xor
xor
pop
lock
ds
jmp
or
xchg
lock
adc
mov
lret
add
jl
inc
pop
xlat
nop
nop
adc
xchg
mov
into
in
mov
sub
daa
xchg
shl
inc
mov
testl
xor
pop
nop
jle
xor
dec
fnstcw
push
test
enter
xor
or
lcall
mov
and
shlb
loope
bound
xor
pop
mov
xchg
push
mov
outsl
rolb
jae
push
push
or
lock
insb
int3
jbe
xchg
jl
movl
xor
aas
add
lcall
mov
dec
in
cmp
xchg
sbbl
mov
fmull
lods
or
push
pop
pusha
push
gs
filds
jb
testl
mov
adc
or
iret
jae
cmpl
mov
push
rolb
arpl
pop
xor
out
inc
and
dec
pop
lods
push
xor
shlb
add
and
mov
add
lds
inc
aaa
adc
cmp
cmp
dec
lds
lock
mov
sti
sub
hlt
add
xor
test
xchg
cmp
xchg
fnsetpm(287
mov
mov
leave
dec
js
push
cmp
push
stos
pop
loopne
cmp
or
imul
xchg
jbe
lret
mov
pop
inc
push
push
divb
loop
pop
dec
adc
pop
push
xchg
sbb
jbe
push
push
jp
adc
add
pop
jnp
push
adcb
insb
shl
lcall
adc
add
div
les
jbe
add
pop
xor
add
push
adcb
sarb
adc
pushf
outsl
ja
data16
adc
outsl
or
or
fs
mov
dec
hlt
int
divb
je
or
je
or
sub
xchg
movsl
mov
scas
adc
adc
jne
stos
jl
imul
test
clc
cmpl
jae
xor
sahf
sub
sbb
lcall
ds
stc
mov
clc
push
jmp
cmp
adc
imul
xor
dec
iret
inc
push
inc
adc
xor
push
push
ljmp
scas
movzwl
dec
mov
jbe
call
push
adc
cld
add
and
cs
or
gs
add
movsl
mov
shlb
pop
or
rolb
or
ljmp
pop
jle
pop
inc
sahf
xchg
test
add
jge
movsl
and
xor
xor
ficoml
push
mov
adc
ret
push
jg
es
test
sub
sub
adc
data16
add
adc
xlat
push
adc
aad
mov
cmp
or
xchg
fisttpll
push
adc
inc
pop
xchg
push
xchg
insl
add
ds
add
push
fldl
mov
jge
inc
or
ja
imul
adc
adc
pop
and
sbb
int3
gs
or
jp
lea
cmp
loop
push
in
cmp
sbbl
sub
cltd
mov
hlt
rorl
push
mov
pop
fcoml
pop
add
sbb
nop
sbb
and
sub
xchg
or
inc
mov
sbb
clc
mov
loopne
push
xor
ror
cltd
sub
fs
call
jb
push
push
ss
xchg
roll
push
push
jecxz
fdivl
sbb
lea
in
icebp
stos
xor
xchg
movnti
mov
adc
fnstenv
fmull
adc
cmp
lea
add
add
mov
lea
adc
or
imul
and
dec
pop
and
sbb
push
sbbb
push
sbb
and
cmp
call
jns
push
enter
xor
jo
mov
inc
aam
testb
jge
scas
call
sbb
sbb
ret
in
xchg
add
push
call
pop
and
in
and
xor
mov
int
aam
xor
bound
mov
xor
rorb
sbb
js
and
sbb
negl
adc
xor
or
idivl
les
adc
jmp
sbb
sub
stos
out
dec
fisubl
mov
xchg
cmc
cld
sbb
cmc
inc
sub
dec
rclb
pushf
jnp
or
sbb
cltd
mov
adc
or
add
dec
test
or
sub
adc
sbb
xchg
mov
xchg
inc
nop
sahf
add
je
push
and
addr16
dec
xor
xor
mov
push
fsubl
fsubs
xor
outsl
jecxz
push
mov
mov
lcall
imul
movl
and
and
ss
push
sbb
dec
in
fimull
popf
push
ss
in
cmp
in
subb
jno
sahf
cmp
add
pop
xor
rcll
push
jo
dec
leave
pop
and
and
nop
subl
daa
add
and
je
add
test
sbb
xorl
dec
jl
jne
cwtl
test
or
or
pop
and
pop
adc
adc
lea
popf
and
inc
out
or
sbb
pop
jp
cmpsl
xor
or
push
mov
xchg
mov
add
cli
cmp
adc
adcl
leave
lcall
xor
cmp
ret
rorb
or
push
xchg
data16
xor
xor
push
outsb
pop
add
fildl
inc
rolb
shl
call
sbb
dec
pop
incl
orl
punpckldq
decl
pop
int
inc
inc
and
loopne
cwtl
or
dec
xchg
add
std
cmp
pop
jp
mov
mov
cli
outsl
cmp
nop
sub
push
inc
dec
les
lea
rorb
test
adc
dec
mov
mov
inc
lea
jo
push
mov
push
pop
ds
add
push
int
or
inc
inc
ret
imul
and
xor
aaa
push
xor
iret
fcomps
xor
int3
add
cmp
push
or
sbb
lods
shl
loopne
push
dec
jnp
cli
add
jae
in
sbb
cmp
adc
push
movb
push
fildll
pop
mov
cmp
dec
hlt
inc
adc
clc
dec
or
or
jg
rorb
add
push
dec
mov
sti
jle
repnz
jno
jne
es
push
add
aam
or
or
mov
push
xchg
dec
ret
mov
cs
pop
sbb
adc
sbb
out
mov
push
movsb
jns
out
add
js
js
dec
xchg
jg
repz
pop
out
dec
or
jge
mov
add
jl
add
loope
sbb
sahf
jbe
sbb
adc
jbe
fcoms
pop
subb
add
jecxz
into
ret
adc
and
push
add
cmp
adc
pop
push
cmc
and
xor
popa
fcoms
cmp
mov
mov
add
sbb
test
jae
jecxz,pn
sbbb
movb
sbb
mov
push
push
inc
mov
adc
xchg
sub
xor
js
adc
adc
mov
inc
and
xchg
inc
add
mov
sti
or
mov
adc
shrl
mov
pop
sbb
insl
movsl
ret
push
push
dec
xchg
inc
xor
and
adc
loopne
and
js
inc
add
notb
jge
and
sbb
inc
les
sbb
push
out
sbb
jecxz
add
push
mov
rorl
shr
stos
dec
xchg
leave
pop
inc
leave
add
cwtl
hlt
cwtl
adc
into
xchg
lcall
sbb
bound
dec
adc
addl
cli
movsl
push
imul
xor
jmp
adcb
call
jnp
add
jne
or
add
dec
jns
mov
es
rorb
mov
aam
add
sti
and
add
add
sub
adc
push
add
add
dec
dec
push
sub
lock
add
je
cmp
dec
shrb
adc
adc
adc
inc
inc
roll
movsb
and
push
sbb
sti
fsubl
sub
add
inc
or
into
inc
lret
or
jmp
mov
movsb
xchg
fsts
dec
adc
in
add
xchg
ja
mov
lahf
inc
add
or
inc
push
add
lea
ja
in
dec
jp
add
adc
and
daa
push
sbb
mov
pushf
mov
aam
adc
push
cld
push
cmp
jmp
outsb
mov
repz
stos
inc
cs
push
stos
in
or
outsb
xchg
sbb
push
jg
sub
cltd
nop
out
cmp
push
fisubl
add
in
imul
je
dec
push
and
mov
sub
add
sbb
xchg
add
dec
popa
jnp
xchg
cmpsl
inc
sbb
xchg
inc
push
add
push
and
xor
daa
ds
int3
and
sub
inc
in
in
and
pop
bnd
int3
pop
push
sub
lea
sbb
cmp
ja
enter
clc
push
movsl
or
sub
push
sub
lahf
ja
in
xchg
adc
inc
cmp
add
xor
and
xor
sub
adc
adc
sub
inc
cmp
or
sbb
or
lret
mov
cmp
inc
push
dec
enter
lret
inc
fwait
lahf
push
popw
inc
xchg
dec
or
pop
cs
inc
roll
inc
add
jae
add
push
mov
inc
push
in
inc
dec
dec
enter
in
adc
sbb
ljmp
inc
push
jl
paddq
dec
mov
sbb
clc
out
mov
inc
cmp
add
fnstenv
xchg
and
push
fwait
xchg
jl
imul
pushf
out
xor
frstor
cmp
test
add
pop
or
ret
dec
push
adc
mov
pcmpeqw
fxch
add
mov
popf
call
add
mov
in
or
add
pop
push
sbb
insb
inc
mov
pop
jmp
pushl
dec
dec
test
ficoml
imul
add
sbb
jo
lret
dec
loopne
xor
negb
loopne
cld
stos
jbe
push
and
lcall
mov
cwtl
push
movsl
dec
sbb
inc
add
or
dec
arpl
pop
push
test
daa
ds
push
arpl
mov
fmuls
mov
loopne
mov
iret
add
push
dec
loopne
sub
mov
mov
ficoml
adc
cmpsl
je
pop
pop
pop
sahf
divps
inc
cmp
stos
hlt
out
stc
mov
adc
mov
push
in
pop
mov
cmpsb
push
cs
jbe
xchg
call
dec
pop
out
cmp
fisttps
push
lock
sbb
enter
in
add
xlat
jo
popa
mov
lock
or
sbb
add
loope
cmp
lea
push
aaa
repz
jl
or
out
push
push
pushf
lock
and
push
xor
or
test
mov
adc
int3
jns
xchg
add
out
mov
jne
cwtl
sub
nop
add
pushf
loopne
push
aaa
in
dec
dec
xchg
js
mov
das
sub
int3
or
sub
push
dec
rcrb
pop
fmull
dec
or
loope
push
test
or
in
cmpsb
cmp
and
jmp
sbb
jns
inc
xor
addl
lock
cmp
lret
xchg
push
mov
cmp
loopne
repz
imul
mov
mov
sar
pop
cmp
jne
push
movsb
pop
mov
add
lret
sbb
ficoms
mov
xor
mov
jns
dec
cmp
out
push
mov
inc
adc
jne
push
pop
repnz
and
arpl
jns
mov
adc
pushf
jb
das
mov
inc
push
idiv
jae
or
mov
loopne
add
push
jl
cmp
mov
cld
out
push
shl
pop
cmp
jne
aaa
loopne
xor
adc
push
jecxz
pop
cmp
adc
cmp
dec
dec
dec
popf
sbb
pop
ds
push
add
add
xchg
lret
cmp
pop
popa
mov
push
xorb
loopne
hlt
add
jl
bound
sahf
jp
or
sub
inc
cs
add
call
jns
jno
mov
sbb
aaa
shlb
and
mov
je
push
int3
lock
push
stos
push
int3
mov
and
pop
pop
nopl
je
push
xor
mov
push
add
or
cmp
mov
xchg
mov
loopne
push
shrl
js
and
mov
call
push
xor
push
inc
outsl
sbb
and
jnp
or
jbe
push
or
les
and
out
push
pop
cmp
nop
push
lcall
xchg
sbb
push
add
into
adc
ja
pop
push
sub
or
sbb
aaa
into
stos
and
cmp
jmp
lods
jo
mov
mov
inc
add
mov
cmp
ja
mov
or
jbe
push
xlat
push
in
xchg
hlt
fsubrs
cmp
enter
clc
aad
into
cmp
or
flds
repnz
jge
sbb
adc
push
sub
inc
push
in
dec
sub
pop
adc
sub
push
roll
push
in
xor
xorb
mov
and
ds
por
adc
cmp
sbb
xor
lret
xor
cli
add
and
inc
push
bound
sub
and
repnz
imul
imul
jnp
inc
xchg
mov
pop
dec
inc
add
jmp
pop
xchg
sbb
dec
arpl
dec
push
imul
mov
shlb
pop
lret
dec
test
pop
push
adc
lahf
and
or
adc
adc
sbb
fists
dec
stc
add
cmp
mov
leave
mov
cmp
pop
cmp
jbe
cwtl
xor
or
lock
loope
pusha
pop
push
mov
outsl
out
andl
adc
outsl
bound
cmp
bound
pop
cmpsl
adc
movsb
sub
loopne
push
xchg
or
jno
push
xor
in
cltd
test
nop
inc
pop
enter
cmp
nop
das
sbb
cwtl
push
inc
xor
sbb
inc
scas
fs
add
ret
packssdw
pop
or
adc
pop
in
dec
push
pop
orb
push
in
mov
shlb
das
subb
cmp
jb
lea
cmp
in
add
sbb
fcmovnb
std
mov
rdmsr
or
jle
adc
aaa
cmp
shll
stos
xchg
add
sbb
andl
mov
lods
lahf
sub
or
jmp
add
int3
push
ficompl
or
je
fists
aas
push
or
inc
or
pop
rcrb
inc
cmp
xor
jne
andl
shl
mov
sbb
lods
repnz
mov
mov
pop
or
loop
xchg
or
mov
fcomp
inc
dec
cmpsb
nop
test
sahf
inc
jmp
leave
fcmove
push
insb
and
xor
lea
dec
pop
imul
out
shl
movsl
push
inc
lcall
and
and
ret
xchg
xor
out
fmull
xor
add
push
xchg
sarl
inc
adc
xchg
push
xchg
jno
jle
bound
add
or
fs
or
xchg
outsb
and
rcrl
dec
xchg
fimull
push
mov
adc
inc
movsl
mov
scas
and
dec
and
jne
push
dec
and
xchg
dec
pop
and
or
cmpsb
shlb
ljmp
or
mov
mov
xchg
rorb
lahf
jmp
pop
mov
js
rcrb
hlt
fcoml
pop
xor
into
shlb
into
ficomps
movsb
cmp
sub
mov
add
mov
and
or
shll
clc
push
rorl
inc
pushf
adc
and
loopne
xor
adc
push
adc
add
lea
pop
push
pop
mov
rep
fcoml
add
mov
xchg
loopne
mov
adc
in
aaa
faddp
pop
inc
adc
movl
mov
fistl
inc
xchg
sbb
add
test
mov
mov
jecxz
sub
mov
ss
dec
arpl
pop
ret
push
mov
and
or
push
add
fs
and
enter
xorb
inc
loope
gs
fs
inc
xchg
in
mov
scas
movl
push
push
sbb
lcall
dec
add
dec
sbb
sahf
jge
sbb
mov
andps
data16
andl
cmp
pop
jg
inc
sub
ds
cmp
or
stos
in
add
clc
je
pop
cmp
addr16
fsubs
and
add
push
clc
rcrl
in
movsb
std
mov
cs
adc
jo
sbb
cld
sub
cmp
lods
mov
lds
xor
adc
insl
mov
jbe
sub
lea
cltd
or
push
aam
inc
inc
cmp
mov
ljmp
repnz
mov
inc
sub
cmp
cmp
mov
jmp
imulb
mov
xchg
pop
fadds
lret
add
bound
mov
sub
test
push
push
cld
push
ret
movsl
xchg
xor
cmp
mov
neg
sbb
inc
je
dec
jp
inc
call
inc
mov
push
mov
pop
cmp
cltd
push
int
add
jecxz
int
xchg
mov
xor
xchg
mov
xor
mov
mov
in
inc
sbb
jl
test
lcall
jb
movsb
jle
pop
cmpsb
inc
or
mov
sub
mov
and
and
or
orl
mov
arpl
add
jmp
push
nop
lcall
pop
aas
push
sbb
out
jnp
int3
dec
and
shll
push
in
je
xor
dec
out
pop
xchg
fs
aam
addr16
mov
cmp
inc
in
aaa
xchg
xchg
fbld
sbb
xor
lret
lret
xor
sbb
cmp
add
lret
lret
inc
push
pusha
add
test
aas
xchg
push
pusha
sbb
or
test
int3
add
add
inc
add
push
imul
push
sbb
cld
into
mov
int3
add
decl
add
pushw
jno
scas
or
jns
inc
aaa
arpl
loopne
xor
sub
xor
incl
add
rolb
mov
mov
cmpb
imul
icebp
pop
or
mov
insb
insl
scas
in
ret
imul
shrb
scas
inc
push
inc
add
ret
addb
jecxz
xchg
or
xchg
mov
inc
sbb
mov
adc
lods
test
es
pop
mov
jae
fdivr
adc
shlb
add
sub
xchg
cltd
pop
mov
dec
ret
repz
je
or
cmpsb
sar
jbe
jl
lcall
cmp
outsb
add
add
add
insl
inc
xor
test
loopne
or
pop
jb
cltd
fidivs
repnz
push
arpl
adc
and
add
movsl
push
add
pop
pop
and
mov
movsl
bound
sahf
and
adc
jmp
sub
jae
or
shlb
add
les
adc
leave
andl
mov
adc
pop
push
push
sub
jae
push
rolb
cmp
in
aam
les
rol
stc
repz
dec
adc
xchg
data16
sub
out
jb
lcall
loope
cmp
add
mov
xchg
testb
adc
sbb
jbe
inc
jno
insl
adcb
jo
fistpll
adc
inc
xlat
push
xor
mov
and
xor
andl
inc
add
and
and
xor
adc
xchg
inc
sub
xchg
ds
and
push
mov
inc
sbb
sbb
cmc
shll
ret
inc
ljmp
add
mov
jmp
inc
fadd
add
push
ja
popa
inc
adc
and
add
cld
sub
cmpb
cltd
xchg
ds
mov
mov
mov
jnp
pop
mov
test
pop
adc
into
add
lret
loop
cmpsb
mov
mov
push
push
inc
sub
ljmp
ret
or
in
mov
mov
mov
call
call
lcall
mov
push
or
cli
push
mov
push
fiadds
and
add
pusha
sub
mov
adc
jno
incl
sub
movsl
icebp
out
jns
rclb
addl
pushf
neg
xlat
mov
adc
arpl
inc
insb
dec
mov
adc
push
add
fnstenv
xor
inc
lcall
push
sbb
add
xor
cmp
fildl
loopne
mov
lods
js
inc
xorl
jmp
xchg
xchg
push
roll
or
rcl
pop
jp
cmp
ljmp
xor
and
je
int
insl
add
fisubs
cmp
and
and
fidivs
pop
sbb
push
jo
dec
cli
jo
shrb
stos
sub
icebp
subb
dec
sub
sbb
jb
push
mov
enter
icebp
or
mov
sub
mov
inc
ret
pop
jo
dec
mov
into
call
push
or
dec
adc
mov
popf
xchg
sbb
rorb
add
jl
movb
add
cmp
adc
mov
adc
cmpb
int
call
sub
es
pusha
and
enter
pop
es
add
add
push
pop
popf
aam
mov
adc
add
stos
push
sbb
and
adcl
sub
pushf
sub
cmp
xchg
or
insl
push
adc
rorl
or
cmp
orl
push
cmp
xchg
add
push
add
dec
mov
je
and
mov
shrb
adc
fldt
push
clc
add
clc
jbe
movsb
cmpsl
ja
or
add
jmp
sbb
lret
dec
inc
pusha
fmuls
push
in
adc
sub
or
inc
xchg
push
aam
push
insl
repz
aad
je
cmpsl
mov
je
jecxz
lahf
pop
add
pusha
movsl
inc
roll
movsb
sarb
inc
or
add
orb
lea
mov
ficoms
pop
push
cmp
jp
out
sbb
adc
js,pt
mov
jl
pop
in
mov
add
lea
jmp
lea
mov
jne
mov
jns
dec
orl
xchg
cmp
nop
pop
sbb
sbb
mov
aas
ret
or
or
lods
xor
mov
loopne
pop
sbb
adc
cwtl
inc
dec
inc
ret
pop
int
cmp
repz
daa
sbb
and
pop
shlb
ret
pop
ljmp
dec
inc
sbb
inc
jnp
lods
enter
arpl
dec
add
int
push
mov
cwtl
outsb
sar
lea
jp
cmp
mov
adc
add
adc
push
aad
jae
jb
pushl
mov
jle
fmul
pop
or
pop
jmp
xor
jae
adc
add
adc
cwtl
loopne
rclb
adc
lods
xrelease
pop
aaa
add
addl
push
cs
sub
cmp
pop
xchg
add
mov
pusha
cmpb
loope
je
adc
jle
pop
mov
sub
shrb
test
pop
jmp
adc
and
ret
pop
lock
mov
xor
jmp
test
mov
lea
sub
xor
add
adc
inc
and
add
mov
xchg
jno
nop
xchg
movsb
mov
lock
mov
and
mov
jle
cmp
jb
pop
enter
sbb
dec
add
movsb
dec
push
jmp
adc
daa
or
jbe
cmp
sbb
popf
dec
push
test
inc
fdivl
cmp
mov
insb
insl
jb
fcmovnu
arpl
cmp
fmuls
ja
adc
jb
rcll
push
stc
adc
add
outsb
xchg
out
in
sbb
jmp
pop
adc
nop
inc
or
call
xchg
jl
mov
add
sar
add
or
mov
push
mov
fildll
jo
daa
xorl
popf
nop
filds
hlt
inc
je
loopne
xchg
sub
jne
and
fadds
jecxz
test
adc
lret
fisubrl
cmpsb
add
int3
xor
mov
push
sbbl
push
jl
mov
inc
push
cmp
lock
and
and
sbb
xchg
and
pop
sbb
xchg
test
xchg
xchg
and
adc
cs
lret
jae
jmp
push
xchg
add
pop
push
js
xchg
sub
xor
pushf
ss
dec
sti
xor
or
xor
mov
mov
add
fldt
push
sbb
lea
xchg
in
shl
jb
mov
cld
or
out
add
out
pusha
push
scas
push
popl
inc
mov
jb
or
shll
adc
adc
jmp
adc
pop
and
movsl
xor
and
push
ret
mov
je
add
or
adc
inc
popa
imul
pop
mov
sbb
lds
and
adc
mov
pushf
sub
or
push
adc
das
int
mov
xchg
add
dec
rcll
jae
inc
lea
rolb
or
adc
push
mov
dec
sub
push
jae
jbe
imul
inc
movsl
hlt
xor
add
or
subb
out
aaa
orb
xor
clc
add
and
add
fldl
and
repz
or
mov
add
and
sub
and
out
ret
xchg
ror
xor
adc
ja
push
adc
push
outsl
test
adc
incb
sub
outsl
adc
push
pop
jbe
push
xlat
test
jne
push
fsubrl
lea
or
and
xor
add
push
repz
push
clc
add
add
push
and
adcb
xor
jne
push
inc
loop
and
sbb
mov
inc
cwtl
call
daa
sbb
es
and
xorb
push
loope
or
rorl
lock
andb
xor
inc
sbb
mov
adc
repz
rcrb
call
sbbb
in
xchg
inc
push
sbb
call
je
ss
test
in
dec
pushf
sub
ret
ret
pop
push
lds
sub
into
xor
push
cmpb
je
sbb
jae,pn
outsb
pop
int3
inc
push
insl
ret
adc
jg
or
loope
cmp
leave
sbb
imul
mov
sbb
lret
ss
adc
lock
push
inc
jmp
and
cld
add
pop
movsb
or
mov
in
jle
mov
divb
loopne
cli
in
in
cmp
jg
cmp
or
xchg
popa
aaa
and
dec
inc
sbb
and
and
xor
push
push
aaa
inc
pusha
xlat
cld
ss
push
repz
push
add
gs
pop
or
pusha
inc
mov
sbbl
add
lods
out
jo
loopne
fs
jl
inc
dec
stos
shlb
push
es
outsb
enter
je
orb
push
pop
ss
out
test
add
aaa
imull
test
or
jae
sbbl
mov
fisttps
dec
inc
jg
jmp
add
or
add
push
mov
push
xchg
or
push
rcll
or
popa
daa
xchg
inc
es
xchg
loopne
and
push
mull
in
or
or
leave
jmp
mov
insb
cmpsl
pop
lahf
add
movsl
lock
add
sbb
sbb
inc
orl
add
pop
movsl
stc
push
xor
mov
pop
hlt
push
fwait
rcll
sub
test
sub
add
xchg
inc
sbb
push
arpl
sub
push
test
outsl
and
jmp
xchg
push
data16
mov
pop
js
add
push
pushf
lods
xor
rolb
rcll
addr16
lock
jno
aad
in
shll
ret
push
sbb
add
adc
enter
or
scas
jnp
out
ss
xchg
pop
add
adc
lret
fcmovnb
ss
xor
aas
mov
push
sar
push
loope
sbb
rcrb
add
jl
cmp
jbe
sti
pop
jle
cmp
push
jp
or
pop
ret
aas
stos
adc
int3
ret
mov
cmp
jo
jge
mov
pop
and
cmp
filds
repz
je,pn
cmp
je
jne
mov
loopne
pop
push
sbb
add
rorb
iret
imul
lods
cmc
jge
and
pop
and
pop
mov
pop
inc
sub
add
push
mov
push
dec
pusha
adc
mov
add
jl
xchg
js
inc
hlt
pop
clc
lret
or
enter
cs
mov
jl
mov
or
push
cld
incl
mov
js
jge
cmp
insb
test
pop
in
dec
push
jp,pn
jne
std
inc
add
aaa
mov
bound
sub
push
hlt
les
out
inc
add
outsb
jmp
sub
lock
add
cltd
mov
sbb
filds
jnp
inc
push
add
inc
popf
add
push
dec
jno
push
loop
push
xor
cltd
xchg
inc
dec
xor
lock
iret
pop
prefetcht1
inc
insl
adcb
sbb
adc
jge
xor
fld
lock
mov
add
mov
jne
mov
cmpsb
mov
adcb
mov
sub
aas
icebp
sub
push
push
in
add
fwait
testl
loope
pusha
daa
cmp
cmpsl
or
pop
cwtl
mov
loope
in
mov
jl
add
inc
mov
sub
jl
pop
pop
jb
pop
fmuls
mov
and
std
in
push
es
add
inc
sbb
inc
icebp
inc
dec
mov
xor
fmull
dec
or
push
call
shrl
dec
jg
cmp
jg
inc
mov
repz
add
xor
daa
or
xor
xchg
pop
sub
inc
lods
shll
das
sbb
pusha
add
movsl
add
adc
es
or
iret
repz
pop
pop
pusha
fs
lret
xchg
pop
es
imul
push
shr
es
push
jge
xor
xchg
xor
in
dec
or
pop
mov
sub
xor
lret
mov
dec
adc
add
add
jno
add
cmp
and
cmp
jb
sbb
sbb
xchg
test
mov
mov
loopne
pop
outsl
jp
pop
add
push
xor
imul
and
sub
shl
add
pop
jne
pusha
rolb
mov
jo
cli
in
cwtl
xor
dec
shlb
push
sub
xchg
add
daa
xchg
xlat
inc
lret
push
xlat
int3
je
movsl
mov
sub
jle
and
icebp
push
jmp
pushl
or
popa
mov
test
out
mov
and
cltd
sub
loope
xor
xchg
add
sbb
push
dec
xchg
or
loope
ljmp
std
iret
mov
movq
js
add
xor
cmp
cmp
and
xchg
add
lock
cld
push
xchg
sbbl
pop
inc
addr16
pop
pop
mov
fisttps
jmp
inc
shrb
jmp
and
adc
pusha
add
pop
jnp
cwtl
inc
or
ss
insb
push
cmp
cmpsb
fisubrl
sahf
push
dec
lret
and
add
push
inc
or
cmp
push
ret
rcrb
sub
loopne
push
je
lea
add
add
xchg
pop
pusha
push
mov
fisubrs
mov
fwait
mov
testl
add
dec
fimull
ret
orl
in
ss
push
dec
xor
cmpsl
mov
pop
fmull
jmp
and
hlt
mov
dec
jae
decl
mov
mov
cmp
je
or
je
fildl
ficoml
adc
jg
shl
inc
rolb
cmp
adc
xlat
push
cmp
push
add
mov
lea
nop
jl
mulb
lods
out
mov
xor
push
or
lods
and
je
push
xor
sti
jle
dec
add
and
jne
xor
outsb
pop
in
mov
int
and
and
or
push
fisttpl
jle
mov
sub
das
or
jne
es
dec
fnstenv
push
in
repnz
or
pop
inc
bound
pop
and
in
lcall
add
imul
and
push
and
add
arpl
cwtl
data16
or
fisubs
fwait
icebp
adc
enter
fsubs
or
mov
add
fisttpl
repnz
enter
fdivs
cltd
pop
fwait
inc
mov
and
push
pusha
in
push
sub
push
inc
icebp
jle
xchg
loopne
insb
sbb
and
and
mov
pop
lret
cmp
ss
sbb
popa
and
sub
pop
add
jle
sub
sub
inc
mov
shl
add
push
cmp
push
lds
mov
or
popa
xchg
mov
add
add
insb
sub
cmp
mov
add
xchg
adc
out
pop
xorl
ficompl
lcall
inc
loope
or
ds
icebp
xchg
adcb
push
mov
fimuls
cmpsl
test
clc
rcrb
fldcw
hlt
lahf
adc
and
cmp
sbb
pop
mov
daa
and
pop
lfs
jg
cvtps2pd
rolb
mov
mov
cmp
sbb
push
int
add
or
lcall
mov
imul
inc
add
ficoms
shr
sub
movsb
or
jns
jb
mov
or
notb
jo
add
cmpsb
mov
insb
in
sbb
add
or
add
icebp
add
inc
dec
loopne
push
divl
pop
push
jg
sahf
repnz
mov
jle
sub
adc
ja
in
jnp
nop
lds
xchg
int3
push
int
sub
mov
repz
cwtl
and
mov
push
ss
fdivs
sbb
push
les
fwait
inc
mov
fimuls
xchg
repnz
add
jb
jmp
andl
lret
sub
add
call
add
add
mov
sub
push
inc
addl
add
rolb
cs
cmpsb
push
sbb
sub
jmp
add
and
cwtl
ret
push
pop
and
dec
sarb
cmp
sbb
jae
cltd
pop
cwtl
test
sbb
push
inc
xchg
inc
in
jae
jae
aam
jp
je
sbb
sub
sbb
sub
ret
add
sub
inc
pop
push
stos
test
sub
mov
dec
push
jle
dec
sub
adc
mov
mov
rcll
sub
and
fcomps
fisttpll
je
movsb
fsubrp
push
fldl
pop
push
push
fstpl
add
sub
pop
cmp
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
insb
mov
push
fldz
fsubr
mov
fstpl
andl
push
push
rcll
mov
push
std
and
xchg
out
mov
clc
mov
daa
mov
aam
sub
lret
fstl
cld
push
adc
mov
jb
cmp
lea
movsl
cmp
imul
adc
movsb
mov
sti
mov
mov
cmp
inc
notb
mov
and
mov
aas
dec
lahf
push
sbb
scas
ret
or
pop
add
icebp
sbb
mov
fstpl
add
aam
pushl
mov
aam
push
in
ficomps
or
fimuls
sti
movsl
pminub
or
lock
imul
jno
cwtl
ss
push
inc
push
pop
inc
and
push
sub
lock
push
shrb
add
call
or
push
push
and
movsl
in
pop
cltd
sbb
aam
mov
loop
mov
pop
jbe
loopne
or
add
rcrb
fcmovbe
sbb
sbb
push
rorb
jge
and
popf
stos
mov
mov
cmp
test
jg
pop
push
push
pop
addl
fnsave
cmp
push
push
pop
inc
and
push
roll
popa
pop
adc
and
push
push
add
lods
push
shrb
sub
fcmovne
sbbb
mov
push
pop
leave
fwait
adc
sbb
mov
popa
or
pop
call
outsb
mov
fimull
lds
imul
ja
add
data16
add
mov
pusha
xor
inc
or
test
leave
sbb
lds
clc
aas
lock
lret
or
es
pusha
mov
pusha
sbb
rorl
push
sub
adc
dec
xchg
xchg
flds
mov
add
faddl
test
imul
nop
mov
xchg
push
les
pop
inc
es
push
jns
mov
or
cwtl
fs
rorb
or
mov
or
xchg
or
or
nop
add
inc
es
and
loopne
shrb
in
call
adc
dec
xchg
sub
add
push
mov
push
ror
enter
in
sarb
mov
test
inc
ja
rcll
pop
mov
lods
add
fcompl
rorl
cmpsl
mov
xor
add
movsb
aam
or
testb
add
fldenv
mov
or
rorb
loope
outsb
rcrb
adc
pop
cli
pop
pop
ret
cs
pop
cltd
cwtl
sub
mov
or
cmp
inc
inc
lods
sarb
ret
fiaddl
adc
lret
xor
in
xchg
or
add
add
inc
add
jp
pop
jge
je
or
sbb
adcl
pop
out
or
push
add
push
cs
push
and
xor
pop
mov
and
pushf
mov
mov
jl
push
xor
and
int3
nop
loopne
int3
add
adc
mov
inc
xor
or
and
lock
rorb
popf
push
xorb
mov
mov
jbe
ud2
aad
xlat
and
sbb
jmp
loope
sub
pop
cmpsb
mov
sub
gs
pop
sub
call
pop
lret
popf
push
inc
sahf
push
add
stc
data16
fidivrl
push
mov
adc
xor
jb
dec
jl
cmp
pop
pop
pushf
pop
sbb
jbe
mov
sub
push
mov
lcall
rorl
jne
cli
lret
pusha
jns
mov
xor
pop
mov
sahf
inc
push
xor
or
rcll
fisubrl
adc
push
aaa
push
inc
dec
ret
xlat
dec
mov
sub
rolb
pop
fdivs
loope
ret
mov
fisttpll
push
pushf
rcll
ret
fstp
ss
cmpsb
sbb
test
cltd
dec
leave
fdivrl
daa
je
aas
xor
in
or
or
lock
icebp
gs
cmpb
shll
sbb
push
ljmp
push
pop
jle
ret
adc
dec
jbe
or
cmp
push
xchg
push
loopne
pop
push
mov
dec
mov
mov
ja
or
xchg
adc
mov
and
jne
lock
dec
sub
lock
rcll
rolb
into
pop
adc
ljmp
les
jnp
mov
push
mov
cmc
adc
gs
pop
xchg
ss
jmp
mov
aaa
ret
push
xchg
adc
add
mov
into
iret
loope
and
jecxz
in
jmp
adc
push
repnz
add
sbb
and
test
xor
jnp
dec
cmp
mov
mov
push
mov
orb
mov
movsb
test
mov
pusha
dec
cld
cmp
lods
sbb
inc
or
inc
mov
pop
xor
add
clc
add
leave
ret
dec
clc
int3
inc
pusha
xchg
in
inc
mov
pop
fs
jecxz
xorb
push
cmpsb
xchg
or
loopw
int
push
cs
addl
in
adcl
into
add
popf
fstl
test
push
test
push
add
mull
in
lret
push
pop
cmpb
inc
xor
push
push
xor
into
xchg
pop
lods
add
mov
push
dec
xchg
pop
lret
and
test
lock
lock
mov
inc
popa
xchg
cmp
xchg
test
push
test
mov
sahf
pop
movsl
popa
rcl
aad
adc
push
dec
mov
arpl
mov
mov
add
call
sbb
sub
push
repz
mov
dec
mov
stos
push
xchg
xchg
mov
push
in
add
lahf
in
lock
mov
ja
adc
shlb
int
sub
and
lcall
dec
inc
pop
or
in
cwtl
les
out
pop
xor
and
or
add
or
push
icebp
aad
pop
cmpsl
lock
mov
je
cwtl
rolb
js
push
mov
jp
mov
imul
push
ror
test
add
push
ret
xor
js
lods
loop
mov
popa
iret
mov
lcall
mov
ss
and
and
fiaddl
imul
fmull
pop
pop
add
popa
sub
aad
and
sbb
mov
lds
sub
xchg
jle
lods
fcomps
dec
pop
and
les
xchg
sub
or
or
xchg
cltd
and
orl
mov
idivl
sbb
lret
add
das
aaa
adc
jo
mov
mov
inc
lods
mull
add
call
mov
std
dec
js
add
jl
ljmp
dec
mov
mov
popf
sub
mov
dec
pusha
in
enter
xor
rol
ret
sub
dec
loope
subb
lea
dec
push
dec
pushl
inc
adc
jnp
pop
adc
push
xor
add
bound
mov
xlat
js
mov
jmp
sbb
inc
movsl
pushf
mov
sbb
lea
pusha
test
mov
fadds
je
cmpsl
jo
xlat
or
nop
sub
in
jae
popa
ret
mov
adc
insb
js
add
fmuls
or
pop
add
sbb
sbb
push
test
cmp
adc
mov
ljmp
stos
xor
cmp
mov
incl
lea
pusha
iret
popa
jo
sti
lea
xor
ljmp
sbb
jno
jne
jg
pop
shrb
xchg
xchg
mov
adc
push
test
jecxz
push
pop
cmp
mov
add
push
fsubl
cmpsl
clc
jno
in
dec
movsl
and
pop
mov
push
aam
push
hlt
pop
loop
cld
adc
pop
ja
aas
fidivl
inc
dec
enter
leave
stos
push
roll
add
xchg
adc
add
push
test
push
pop
ret
lcall
dec
mov
cmp
cmp
add
xchg
dec
and
sub
cmp
push
test
add
mov
mov
faddl
jne
inc
sbb
inc
nop
loope
push
push
fdiv
sub
xchg
push
push
xor
sbb
pop
inc
ret
in
aaa
mov
es
mov
clc
or
adc
js
mov
ret
aad
xchg
jnp
je
repnz
xor
or
inc
andl
shl
add
daa
jno
push
mov
imul
mov
dec
add
rcl
mov
mov
add
imul
mov
in
repz
arpl
fdivs
movsb
leave
add
dec
inc
inc
inc
call
arpl
pushf
push
pop
pop
sahf
xchg
lret
pusha
lods
or
cmpb
jo
pop
xchg
push
add
enter
in
popf
das
xchg
xchg
xor
mov
inc
movsb
or
cmp
mov
mov
or
push
adc
enter
cmp
and
push
and
inc
inc
test
leave
dec
push
fists
mov
and
ljmp
mov
movsl
shl
sub
inc
jl
dec
jge
sub
int
je
sbb
xorl
popa
cmpsb
lods
inc
push
inc
mov
add
push
in
shl
sub
pop
cmpsl
xor
fs
cs
xchg
je
add
sti
dec
pop
in
sbb
sbbb
ret
call
and
sbb
inc
push
pop
lock
jno
insl
popa
mov
out
int
test
pop
xchg
sub
xor
std
or
adc
and
xchg
and
rclb
enter
sbb
scas
adc
pushf
adc
sarl
das
pop
sahf
xchg
lret
cwtl
and
icebp
int3
fildll
sub
repnz
sbb
insb
test
mov
lea
and
and
jno
sub
pop
inc
rcrb
push
add
cmpsb
mov
xlat
rcr
movsl
sahf
and
pop
xor
popa
sbbl
and
mov
add
mov
pop
sub
shr
sbb
and
loop
add
les
aas
in
sub
rorl
inc
cli
or
push
add
add
sbb
or
cmp
rorb
outsb
loop
cmp
test
rcr
pop
out
jecxz
mov
leave
rol
cld
mov
icebp
mov
xor
add
test
pop
inc
add
mov
inc
call
fwait
mov
adcl
mov
sbb
xchg
aas
mov
adc
push
movsb
cmp
or
add
push
int
xor
add
adc
mov
sbb
xchg
push
or
cmpsl
xor
stos
inc
lods
push
push
and
adcl
fs
faddl
jg
int3
add
mov
add
jge
sbb
push
adc
js
rcll
xchg
je
adc
int3
dec
push
sbb
sub
adc
outsb
in
and
or
lret
sar
cltd
or
xchg
jge
popf
jne
ljmp
cmp
mov
fisubrs
fdivr
add
push
stos
sub
or
das
push
push
xor
xchg
fcos
mov
xor
fstps
sbb
adc
adc
push
fiadds
ret
pop
mov
dec
sbb
sub
fs
inc
leave
loope
fistpll
mov
cmpsb
add
sarl
adc
insb
pop
push
lcall
push
jnp
cld
hlt
or
shlb
cmp
fdivl
mov
je
data16
xor
pop
sbb
sbb
iret
mov
jmp
dec
leave
lahf
jae
icebp
popa
mov
fs
dec
lock
sub
adc
add
inc
inc
pop
mov
daa
or
xchg
pop
and
das
or
or
je
lcall
jbe
push
cmpsb
sbb
adc
frstor
pop
gs
ljmp
inc
cmp
jb
pop
pop
pushl
scas
sub
or
or
pop
push
push
dec
mov
push
inc
jl
jle
cmp
test
shrb
xor
das
arpl
bnd
mov
nop
rorb
fcmovbe
jb
cmp
les
and
inc
fcompl
push
cld
das
test
mov
cmp
and
add
inc
cmp
jae
and
sbb
je
pusha
and
xorl
loope
lcall
das
in
mov
cmp
jne
xchg
mov
cmp
or
movsb
ret
add
inc
rolb
les
xchg
inc
pop
jno
adc
sbbl
fstpt
or
cmp
pop
add
data16
and
int
shrl
mov
xor
in
push
adc
push
scas
sub
push
cmp
dec
hlt
pop
pop
pop
pop
call
popa
pop
or
sahf
inc
add
iret
imul
daa
daa
sbb
subb
push
test
sbb
dec
add
or
mov
mov
das
pop
or
sub
push
sbb
push
push
hlt
sbb
cmp
ret
xchg
mov
mov
enter
clc
imul
movsbl
add
inc
mov
nopl
adc
icebp
push
mov
test
cmpsb
fisubrs
cmp
lods
insb
loope
int3
or
sbb
or
cld
push
cmp
loopne
js
cmp
lock
push
das
jne
jmp
insb
fs
test
and
mov
lea
in
popa
push
dec
stos
dec
lret
push
or
ret
aad
repz
das
push
inc
in
jmp
dec
mov
cmpsb
cmp
shl
mov
adc
pop
or
xor
sbb
sahf
or
cmp
jbe
dec
punpcklbw
fs
or
and
and
mov
xchg
xchg
scas
bnd
stos
adc
mov
mov
popf
test
cmpsl
out
mov
sub
int
xchg
pop
add
mov
clc
and
call
scas
add
dec
lods
pusha
pop
shll
in
sbb
dec
lods
clc
dec
jns
ja
sti
pop
sbb
adc
jmp
ds
sbb
out
inc
je
andl
ret
pop
aaa
mov
incl
fidivl
shl
paddb
push
or
xor
je
jne
xchg
jbe
jg
xor
cmc
jl
shr
dec
push
in
orb
sub
add
pop
pop
fstp
popa
mov
fstpl
fldl
loopne
les
int3
rclb
add
cmp
or
fldl
pop
dec
ror
cmp
cmp
push
imul
sbb
fstpl
and
insl
clc
push
dec
in
cmp
mov
out
fildl
cmpl
hlt
in
and
rol
or
pop
fsub
pop
fsubrp
and
loope
sbb
and
es
shlb
add
pop
add
xor
dec
add
ss
mov
and
and
pop
aam
ljmp
shrl
dec
je
add
or
add
cmp
inc
xor
fcom
jmp
lahf
pop
mov
and
out
ss
iret
lods
and
push
sub
push
mov
xchg
mov
pop
push
xchg
aas
lods
hlt
dec
test
push
imul
push
push
fwait
cs
idivl
out
and
pushf
or
divb
cmpsb
push
push
sbb
lahf
jns
mov
adc
sbb
xchg
and
cmpl
dec
aaa
and
sbb
daa
lea
stc
xorl
xchg
sub
fsubs
popa
sbb
outsl
lock
and
lret
add
mull
push
femms
xor
push
xor
and
scas
or
adc
push
pop
adc
aaa
mov
lret
push
add
mov
ret
lret
mov
and
notl
aam
push
repnz
push
ret
pop
xor
and
jno
sub
mov
sbb
push
jecxz
fs
and
pusha
sub
pop
and
ret
inc
and
ss
inc
aad
pop
insb
mov
data16
sbb
and
xchg
lret
push
push
lret
enter
xchg
lret
loopne
sub
clc
or
inc
push
or
sub
cmp
sbb
cs
sub
rolb
lea
and
pop
sbb
in
xchg
push
in
or
and
sbb
pop
or
adc
in
xchg
repnz
xchg
adc
sub
mov
mov
push
mov
lret
lock
or
and
cmpsb
and
out
push
je
cltd
cmp
add
xchg
pop
out
push
stc
mov
adc
sahf
out
inc
push
addr16
out
sahf
out
stos
mov
xor
out
daa
movsl
cmp
imul
cmp
lea
iret
repz
repz
adc
es
dec
pop
push
out
sahf
jnp
popf
scas
mov
jns
add
test
xchg
pusha
je
add
push
sti
mov
aam
push
dec
pop
add
leave
jl
lods
push
lock
pop
mov
jg
jns
ss
in
add
sbb
into
in
inc
dec
movsl
xor
add
mov
sub
push
jno
xchg
inc
pop
add
or
jne
xchg
push
subb
movl
push
data16
pop
outsl
nop
gs
filds
lret
scas
jae
mov
mov
repnz
mov
dec
imulb
push
js
and
cmpsb
mov
dec
mov
shll
push
sub
sbb
cmpsl
je
push
or
int
and
jo
push
cmpsl
adc
and
orl
sub
adc
xchg
adc
jb
enter
jb
jl
mov
add
lret
push
outsl
call
lcall
push
add
test
mov
adc
adc
sub
and
xor
popa
xchg
es
push
inc
pop
andnps
fwait
shrb
push
add
xor
and
lock
mov
test
enter
and
movsb
sbbl
add
jl
add
loop
jge
mov
pop
sub
jle
mov
push
mov
in
loopne
jb
icebp
add
add
call
call
out
sub
push
xchg
sbb
test
xchg
pop
sub
add
aad
dec
push
and
adc
rep
loope
pcmpeqb
test
shll
stc
push
enter
shrb
ja
add
lock
call
adc
faddl
and
push
and
stos
add
sub
mov
dec
mov
sub
mov
adc
mov
pop
out
lods
repz
or
xorl
leave
je
in
dec
xor
xor
xor
or
out
test
push
sete
mov
mov
roll
xchg
cmp
sbbl
push
aad
cmp
mov
push
rorl
cmpsl
mov
int3
lods
arpl
adc
test
push
sbb
and
add
cmpsl
push
mov
mov
dec
and
loopne
xchg
cs
sbb
adc
push
push
rcll
or
repnz
mov
adc
leave
mov
cmp
addb
adc
fs
cmp
stos
cmp
enter
loopne
inc
lock
xchg
and
inc
sbb
imul
mov
addl
dec
push
jb
add
adc
xor
jbe
mov
sbb
adc
outsl
or
mov
jo
icebp
pop
dec
fcoms
add
cld
cltd
cwtl
pusha
inc
in
push
xor
pusha
cwtl
dec
call
rorb
adc
dec
push
cld
push
xchg
jne
pop
out
push
xchg
jnp
lods
pop
push
cmp
loope
push
xchg
or
jbe
pushf
jb
sub
add
fwait
add
rcrb
xor
or
or
sbb
xchg
gs
xor
popl
add
adc
or
cmp
and
jecxz
mov
adc
add
add
out
pop
inc
xchg
movsb
dec
add
adc
push
sbb
imul
jne
sbb
test
test
jo
dec
adc
sbb
jmp
xchg
test
or
push
aad
mov
push
push
rcrl
and
test
add
addr16
cs
xchg
movsl
aam
lods
mov
in
or
or
cmp
pusha
push
xchg
add
mov
push
sbb
sbb
and
pop
sbbb
or
push
dec
inc
je
movsb
fwait
dec
bound
add
mov
mov
add
nop
mov
add
pop
push
imul
push
push
or
int3
hlt
inc
or
xor
sub
into
add
int
sub
stc
or
ret
stos
push
stos
push
mov
cmp
mov
add
or
mov
dec
leave
sbb
or
jo
stos
push
inc
notb
je
adc
popa
call
sub
sub
stos
mov
es
outsl
sub
add
gs
push
or
icebp
cmpsl
lahf
adc
cwtl
mov
add
leave
add
add
add
dec
shl
scas
cmpsl
loope
clc
loopne,pn
dec
sbb
and
ljmp
pusha
sbbl
xor
testl
jl
sbbl
loopne
stos
inc
addr16
add
and
imul
push
dec
cmp
jnp
shll
ret
stos
adc
or
sbb
xor
sbb
je
dec
xchg
loop
adc
pop
add
xlat
pop
nop
add
dec
inc
pop
rorb
sbb
test
xor
jge
mov
pop
pop
jne
inc
add
push
fs
sbb
pop
movsl
add
adc
lods
leave
mov
pusha
xchg
mov
inc
insb
sbb
in
popa
mov
pop
imul
je
push
icebp
add
sub
or
or
fs
mov
popa
xor
dec
pop
rcrl
lea
nop
mov
stos
movsl
cld
xor
into
pop
or
jmp
loopne
or
xchg
call
jne
fldl
ss
push
lock
dec
mov
mov
ret
push
sbb
adc
ret
sti
sbb
ds
cwtl
jl
add
mov
mov
cmp
aam
ret
lret
xor
or
popf
or
mov
repz
xor
and
mov
inc
cmpsl
dec
test
roll
lret
dec
test
in
mov
pop
aas
jp
inc
popa
xor
popl
test
cmp
mov
ds
loopne
dec
iret
dec
sbb
in
fsubl
loopne
lock
add
in
mov
adc
add
insl
and
cld
test
int
sub
and
or
daa
or
call
push
jo
and
jmp
mov
xchg
mov
pop
out
dec
jo
daa
push
dec
jle
sbb
sub
pushl
mov
cmpsl
sbb
adc
out
sbb
mov
add
cmp
insb
cmp
push
and
adc
cltd
lds
sub
lcall
cmp
popl
add
and
dec
mov
pop
call
aam
sbb
cmc
mov
mov
outsl
arpl
fxch
push
scas
xor
or
fadds
mov
ljmp
aam
dec
popf
shll
imulb
ret
or
xchg
jbe
call
jl
xor
jmp
cmp
jl
or
sbb
popa
jp
push
sub
jle
xor
cmp
je
mov
mov
call
inc
inc
jmp
movb
mov
push
cltd
pop
popa
es
repnz
pushf
jmp
inc
sub
test
push
or
pusha
fiadds
inc
mov
outsl
sbb
push
mov
movsl
pop
stos
fildl
int3
test
inc
sub
test
inc
incb
aas
insb
loope
in
movzwl
sub
jmp
orl
dec
add
push
mov
push
in
in
test
in
incb
es
or
or
iret
cmp
mov
lcall
cmp
daa
cmp
mov
xlat
test
lock
roll
push
in
jg
rorb
imull
in
std
aaa
ja
pop
jns
mov
jg
push
test
rolb
jmp
xlat
mulb
popf
and
adc
shrl
arpl
mov
jp
fldt
enter
or
loopne
inc
xchg
test
or
popf
mov
mov
or
add
orb
test
xor
fcoms
push
pmaxub
xchg
mov
mov
sbb
xchg
adc
inc
movsl
repnz
pushf
adc
arpl
jge
out
lock
jmp
pop
push
push
sbb
jl
out
push
cmp
in
jmp
loopne
dec
add
aas
jp
push
aas
push
in
sub
iret
in
pop
push
push
repz
jg
cmpsw
cmp
sbb
stc
push
pushf
fmull
jge
in
out
dec
loopne
sbb
mov
aam
push
inc
insl
or
arpl
ja
jns
testl
push
das
xchg
sahf
mov
inc
sbb
inc
jno
das
lahf
dec
shlb
jmp
push
cs
fcomps
pop
push
cltd
cmp
xchg
ss
fiaddl
jbe
or
dec
and
lods
lods
xchg
push
lock
lcall
jae
jg
stc
xor
dec
test
movsb
aad
rcll
inc
in
enter
push
mov
sub
mov
enter
push
enter
rorb
dec
jb
and
and
xchg
cwtl
pop
nop
dec
jb
leave
inc
mov
xor
fwait
pushf
cmp
js
fisubl
dec
jo
push
insl
mov
lods
movsb
pushf
xchg
fcmovne
leave
xchg
mov
fs
les
call
movsb
inc
mov
and
int3
sub
movsb
test
sub
sub
aam
sbb
add
pop
sbb
out
lods
movb
pop
cmpb
je
out
mov
add
mov
and
jb
sbb
adc
das
pop
or
jmp
int3
or
aaa
push
push
dec
xor
adc
dec
xchg
jle
mov
nop
les
out
and
int
inc
mov
pop
mov
sbb
aas
inc
mov
or
add
ret
add
clc
mov
and
inc
push
adc
mov
loopne
pop
dec
arpl
xchg
clc
sbb
and
mov
cmp
aad
sar
in
call
push
jecxz
iret
cmp
rorb
or
enter
jbe
mov
pop
insb
jp
fsubrl
dec
paddsb
imul
rcr
fmull
sub
loop
sbb
inc
sbb
or
ret
mov
and
jno
xor
mov
sbb
mov
jp
push
orl
mov
jns
gs
out
inc
mov
ret
push
call
mov
addl
shr
or
push
jo
daa
rclb
mov
mov
jne
nop
jp
cmpsl
adcl
cmpsl
sbb
movsl
mov
xchg
cmp
push
sbb
lds
mov
aaa
xor
push
dec
dec
adc
jnp
inc
jp
sub
js
fs
inc
dec
idivl
imul
add
pop
pop
sbb
dec
ror
mov
fldl
mov
inc
ljmp
sub
rcrb
jp
sub
ss
sub
test
cwtl
shlb
push
cmp
add
lahf
in
pop
shlb
in
es
dec
sub
imul
shll
mov
inc
sahf
add
outsb
rclb
push
and
sub
or
lods
test
mov
push
sub
pop
xchg
iret
inc
pop
fsubrs
add
push
jmp
sti
mov
or
mov
cwtl
rclb
cwtl
xor
test
cmpsl
jo
cltd
cli
pusha
mov
and
in
push
fcmovb
and
push
xchg
push
adc
and
add
push
push
pop
daa
andb
adc
dec
cmpb
and
mov
pop
scas
shr
add
lods
dec
rolb
hlt
jge
jne
mov
and
inc
ret
ja
push
mov
or
adc
or
iret
test
mov
clc
fistl
push
bound
js
movsl
and
imull
std
jl
dec
ret
pusha
loope
and
fisttpl
sbb
add
push
aas
ss
xchg
out
and
push
push
mov
pop
sub
add
or
push
popa
rorb
push
push
cmp
sbb
out
jp
sub
dec
sbb
inc
push
popa
push
jecxz
shlb
scas
sbb
popa
test
addl
xchg
xchg
and
or
popa
pushf
arpl
adc
dec
scas
pop
es
add
push
push
pop
ror
cmpb
std
inc
popa
fsub
call
mov
je
push
loopne
push
sbb
pusha
push
imul
xor
sbb
es
add
aas
test
sbb
xor
adc
and
into
jno
orl
imull
push
pop
or
adcb
mov
cmp
xlat
xchg
mov
and
es
imul
clc
sbbb
js
and
xlat
push
sbb
adc
adc
add
icebp
push
pop
pop
sbb
adc
add
pop
imul
ficoms
into
daa
push
int
sbb
enter
nop
pop
cmp
push
sbb
jl
push
pushl
jns,pn
pop
outsb
adc
pop
mov
push
dec
jecxz
gs
inc
or
pop
ror
sub
add
push
sbb
jge
add
add
push
mov
test
add
in
mov
and
mov
pop
test
dec
shrb
inc
pop
push
rcrl
aam
in
or
outsb
push
out
mov
idivl
shlb
sti
dec
and
inc
cmp
js
in
add
jmp
sbb
pop
mov
enter
rorb
stc
pop
push
dec
pop
xor
mov
add
inc
popa
adc
dec
and
and
xor
and
enter
pop
and
push
jge
mov
and
lret
mov
and
gs
insl
orb
cmp
cmp
repnz
push
pop
mov
rorl
cmp
xchg
sub
pop
cmp
push
cmp
in
cmp
cmp
sub
pop
sub
cmc
pop
cmp
in
xchg
sti
adc
pop
or
jl
adc
jmp
call
or
mov
dec
pop
add
imul
cltd
sbbl
pop
pop
insb
lds
pop
or
inc
mov
xor
mov
push
push
xchg
cmovle
clc
in
dec
sub
jne
mov
sbb
dec
pusha
leave
add
js
je
into
fidivrl
cmp
cmpl
je
adc
in
cmp
jne
inc
jne
rcl
and
and
mov
xor
add
mov
jo
add
cmp
mov
or
mov
xor
test
adc
dec
push
aad
cmp
aaa
stos
ja
aas
xchg
sbb
adc
dec
sub
mov
push
ljmp
add
cmp
sbb
aad
mov
adc
push
leave
add
and
dec
ja
or
or
mov
push
xor
adc
or
or
and
mov
mov
mov
dec
data16
lock
cmp
stos
lea
imul
mov
dec
dec
xchg
mov
and
jo
cwtl
mov
scas
push
mov
mov
push
mov
mov
dec
sub
js
lock
xchg
arpl
xor
insb
push
ror
cmp
in
stc
in
fsubrl
pop
js
dec
mov
or
pop
dec
in
cmp
or
or
and
xchg
stc
int
inc
cwtl
imul
pop
inc
xchg
sbb
add
sbb
xchg
shlb
or
cmp
mov
iret
adc
gs
push
mov
push
inc
fidivrl
outsl
lea
xor
or
xchg
fisttpll
dec
sti
jp
mov
in
xchg
xor
jne
outsb
arpl
aam
push
adc
rcrl
jo
pop
fistl
xchg
test
in
adc
icebp
aam
scas
adc
adc
sbbb
push
or
or
scas
or
sub
rcll
or
add
adc
mov
orl
enter
xchg
mov
mov
push
and
xchg
sbb
in
and
add
jl
shrb
sti
mov
sbb
repnz
xchg
cmp
xchg
imul
xchg
lock
add
push
and
shll
or
repnz
ret
xchg
add
daa
push
out
or
ljmp
or
insb
mov
adc
add
add
out
inc
or
jge
sub
jnp
push
sub
in
stc
pop
inc
sbb
jmp
jo
jns
inc
sub
sub
sub
push
xor
or
or
pusha
adc
adc
sarb
mov
inc
cmp
xor
inc
xchg
jle
int
jne
test
sbb
std
enter
pusha
ljmp
push
lods
mov
daa
pop
lret
test
xor
sahf
sub
lcall
push
jbe
mov
push
cltd
jb
or
and
js
lods
mov
and
loope
mov
fistpll
add
push
cmp
sti
ljmp
adc
push
inc
cmp
jb
dec
jg
push
ret
mov
or
flds
sub
jne
pop
testl
iret
mov
rcrl
add
fisttps
sub
sub
mov
arpl
and
jne
inc
fcoms
pusha
test
cli
push
faddl
fimuls
stos
nop
roll
out
pop
pop
pop
xchg
popa
jbe
inc
jl
pop
push
pop
pop
pop
cmpl
js
sbb
popf
inc
and
sub
mov
fnstcw
push
pusha
dec
jmp
mov
or
lea
les
out
inc
arpl
pop
sub
addr16
mov
and
daa
test
jo
mov
pusha
dec
push
mov
shlb
lods
mov
icebp
xchg
and
mov
hlt
push
jl
mov
pop
add
add
out
add
jge
push
dec
add
sbb
mov
pop
add
loopne
cmp
or
test
arpl
dec
insl
inc
icebp
pop
cli
sub
outsb
sub
xor
pushf
mov
mov
sub
rorl
int
dec
sbb
or
add
test
xor
loopne
cmp
mov
loopne
pop
pop
pop
loopne
mov
xor
or
call
xchg
or
aad
out
and
subb
rcll
test
les
je,pt
sbb
testl
nop
jns
sub
mov
les
add
ljmp
sbb
sbb
outsb
pusha
or
add
inc
ret
imul
push
mov
shrb
push
subl
xor
scas
daa
cmp
hlt
and
mov
enter
fs
sub
add
xorl
cld
scas
sbb
mov
add
and
and
shrb
adc
jae
push
les
jge
dec
mov
dec
xor
andl
lods
mov
cmp
pushf
jmp
add
jmp
gs
xorl
inc
add
add
pop
pop
inc
xor
sbb
mov
movsl
stc
cmpsb
lea
hlt
adc
sbb
insl
xchg
lock
fwait
adc
or
add
les
dec
add
push
bound
insb
add
in
rcl
int3
xchg
add
roll
inc
mov
enter
adc
push
mov
dec
into
lahf
cmc
mov
push
mov
mov
pop
mov
or
mov
mov
xchg
adc
mov
sub
scas
out
ret
dec
and
or
lock
push
jbe
fs
push
movl
inc
cmpsb
movsbl
sahf
adc
push
push
sub
rcll
dec
dec
loop
mov
jmp
sub
cmp
sub
and
inc
and
add
and
mov
xchg
mov
in
sbb
add
mov
sub
fs
add
lods
add
lret
or
mov
mov
mov
sbbb
or
pop
out
lock
nop
push
clc
cmpsl
push
incl
loopne
nop
inc
inc
and
lods
add
add
add
cmove
dec
xor
loop
inc
inc
mov
adc
xor
push
les
xchg
dec
xchg
test
inc
jl
sahf
stc
add
lock
es
and
pop
js
repz
xchg
inc
dec
fidivrs
mov
enter
xchg
dec
shl
pop
les
or
xor
inc
cmpb
in
sbb
adc
out
or
mov
adc
popa
add
pop
xchg
inc
scas
adc
aaa
ljmp
leave
leave
inc
push
call
dec
cs
popa
test
xor
sub
and
push
js
mov
jp
sbb
js,pn
imul
jae
sub
xchg
pop
sbb
or
add
or
add
add
addl
dec
adc
xchg
pop
dec
xor
loop
pusha
jns
fdivl
add
sub
sbb
mov
scas
je
mov
cmp
jge
lods
mov
in
addb
test
mov
add
std
mov
sbb
jo
xor
out
sbb
jno
outsl
and
cmp
mov
in
or
or
and
push
popa
push
jae
jne
pop
leave
cltd
or
lret
push
xchg
xchg
mov
imul
movsl
pop
ret
push
or
nop
xor
or
and
mov
shll
fnsave
push
popa
and
push
push
dec
add
sub
cmp
sub
sbb
mov
sbb
sub
fsubrl
xchg
adc
out
jecxz
push
cmp
gs
add
popa
adc
cmp
shlb
pop
dec
adc
sub
xor
adc
mov
daa
xor
adc
inc
js
movsb
lds
add
sbb
sub
add
sbb
xchg
fwait
dec
mov
push
roll
pop
pop
dec
cltd
jle
adc
push
fsubs
add
sub
sub
loopne
stos
aaa
adc
je
push
pop
in
arpl
jmp
push
cmp
out
xor
and
adc
aas
mov
pop
mov
leave
sbb
insb
sbb
add
push
pop
adc
mov
lret
out
xor
dec
push
inc
or
sbb
addb
push
jns
das
xor
js
in
loope
lock
gs
addr16
inc
cmc
addb
or
lock
cmp
lea
sbb
sbb
sbb
adc
arpl
push
push
sbb
pop
rorb
in
xchg
add
loopne
jmp
cli
dec
xchg
icebp
fsubs
or
and
rolb
push
push
rolb
or
or
fiaddl
adcl
xchg
push
and
test
sbb
test
lcall
dec
shrb
mov
fildll
ficomps
pop
inc
add
mov
cmp
sbb
adc
push
cmp
stos
jne
add
cmc
sti
in
pop
cwtl
xor
add
into
pop
fcomp
xor
fnsave
addl
outsb
imul
cld
add
push
fwait
inc
sbb
xor
sbb
test
and
mov
fnsave
jb
jg
dec
sbb
shrl
add
movsb
push
or
mov
cmp
mov
fadds
mov
incl
add
stos
xor
adc
cs
mov
ffree
jbe
test
inc
cmp
js
fstpl
or
in
lods
sbb
push
movsb
rolb
push
or
sbb
push
cltd
and
sarl
push
mov
movups
push
add
pop
or
ds
cmp
cmp
xor
sarb
fimuls
jmp
ja
jb
cmp
je
mov
mov
and
lock
lea
push
mov
mov
mov
bndstx
and
stc
in
pop
fidivs
cmp
inc
sub
into
sub
and
xor
adc
test
rol
sbbl
xchg
cmpl
xor
shrb
pusha
dec
push
jl
or
in
cmp
aaa
jl
icebp
jb
jmp
test
xchg
in
out
fildl
push
jg
add
adcb
mov
add
notl
mov
mov
das
dec
or
or
sub
adc
mov
push
subb
sbb
mov
rclb
add
or
add
or
dec
add
add
jmp
inc
sbb
dec
loopne
cmp
jecxz
lock
shr
pop
in
rcl
push
das
dec
test
cmpb
xchg
dec
jae
xor
jmp
push
mov
pusha
or
insl
icebp
add
push
mov
push
or
or
jo
iret
pop
mov
or
xchg
shll
push
adc
bound
jge
lds
decb
push
pop
inc
push
ret
adc
add
push
xor
je
add
xor
cld
xchg
and
or
push
inc
dec
pop
call
outsl
or
sub
les
outsl
ja
bound
push
sarb
push
mov
mov
sbb
push
push
or
add
jnp
int3
and
hlt
dec
pop
xor
push
imul
mov
pop
jle
pop
sbb
mov
mov
imul
fwait
inc
mov
in
push
mov
test
jl
mov
dec
pop
repnz
fsubl
clc
loopne
and
cmp
call
ds
imul
sub
mov
stos
or
call
into
aad
add
test
lea
fcompl
mov
mov
outsl
arpl
mov
popa
sub
mov
and
mov
std
pop
mov
shl
add
aam
mov
xchg
dec
fwait
jnp
jbe
sbb
fsubl
or
add
adc
sub
add
pop
rclb
jle
jno
mov
cmp
mov
mov
ret
pusha
std
popf
ret
rcll
or
lea
adc
mov
mov
aam
divb
dec
add
adc
cmp
jae
outsb
xor
scas
cmpl
pushl
movsb
xchg
aas
cmovae
fisttpll
jne
roll
out
sub
sbb
lret
pop
prefetchwt1
xlat
push
adc
fadd
ret
mov
and
mov
add
push
outsb
mov
jecxz
jae
add
push
dec
xchg
mov
test
pop
mov
movsb
icebp
xor
inc
sahf
aaa
ret
je
mov
pop
aas
add
in
mov
decb
jae
inc
xor
mov
jmp
incl
cltd
out
pop
mov
cmpsl
xchg
aam
orl
mov
mov
sbb
aam
arpl
mov
or
pop
push
or
mov
mov
adcl
test
mov
into
or
dec
mov
loope
sub
mov
lea
mov
inc
inc
insb
jo
push
ds
mov
pop
loopne
ret
adc
loope
mov
push
xor
jne
or
inc
loope
jecxz
xchg
pop
hlt
je
add
loopne
jmp
pop
ror
add
pushf
dec
add
sbb
and
leave
or
mov
cli
sub
fldcw
or
orb
sti
loopne
mov
mov
push
or
fldenv
and
or
fbld
push
xor
and
in
imul
sbb
dec
sbb
imul
daa
data16
lds
push
rclb
jnp
insb
xchg
test
sub
cwtl
or
ds
adc
adc
pop
and
jo
xchg
mov
shl
lods
repz
divb
xlat
xchg
add
int3
out
into
movsl
fstl
or
fmul
into
mov
mov
dec
pop
addr16
dec
push
and
xor
sbb
jl
or
imul
pop
mov
mov
or
xlat
das
jmp
push
in
fdivs
enter
jb
add
sub
pop
dec
cmp
or
test
push
or
inc
call
imulb
inc
mov
cmc
data16
out
add
pop
setge
cmp
ds
je
insl
add
jo
in
xor
aam
pop
icebp
xor
xchg
shl
call
add
xor
in
aam
popf
xor
add
sub
xlat
daa
mov
inc
movsb
add
lock
or
cwtl
sbb
and
pop
cmp
mov
dec
repnz
push
or
or
jmp
mov
cmpsl
xor
inc
dec
push
outsb
mov
dec
in
mov
out
push
or
in
in
jmp
test
call
testb
loopne
fsubrl
jmp
scas
jo
inc
adcl
add
sbb
and
push
mov
add
outsl
jo
push
or
push
and
outsl
daa
add
and
ljmp
lock
sbb
cmpsl
cmpsb
cmp
add
lret
cmp
icebp
push
imul
push
mov
add
movl
rolb
xchg
xor
cs
push
lea
out
mov
pop
mov
dec
mov
imul
cmc
mov
outsb
mov
andl
ds
movl
jp
jno
or
cmp
dec
out
pop
lods
insb
cmp
cmp
jbe
cmp
jbe
mov
sbb
push
xor
mov
add
into
xor
sbb
mov
xor
rclb
movl
inc
dec
pop
push
adc
pop
add
pop
adc
icebp
cmp
jnp
add
jne
push
ret
xor
jnp
int3
dec
in
push
adc
pop
jmp
push
sub
jo
lret
jle
scas
cli
jle
jmp
ds
cmp
jb
mov
mov
imul
push
cmp
outsb
mov
or
cmp
mov
cli
jbe
mov
inc
sbb
pop
rolb
xor
ficompl
pop
add
mov
add
shll
movsl
jnp
xchg
mov
push
push
xor
and
adc
or
test
adc
add
add
cs
sub
push
in
mov
xor
adc
enter
nop
pop
push
adc
repnz
or
push
mov
sar
cmpsl
mov
add
insl
mov
jo
add
or
jmp
mov
inc
es
dec
and
sbb
inc
outsb
mov
mov
sub
es
orb
test
lock
adc
cmp
sbb
xchg
cmpsl
push
mov
pusha
and
push
jb
push
sub
fsubrs
sbb
sbb
jmp
sbb
cld
adc
int
adc
aam
cmp
mov
or
into
cmp
es
adc
sbb
and
in
pop
pop
fwait
cmp
sub
leave
push
push
push
and
pmaxub
adc
fisttpl
push
outsl
jle
sarb
lods
mov
int
lahf
nop
cs
and
ljmp
and
adc
add
mov
nop
sbb
ret
mov
mov
push
in
setp
test
enter
push
popa
xchg
and
lcall
pop
stos
jno
imul
lods
mov
inc
out
xchg
mov
cmp
in
mov
add
data16
or
mov
sbb
jnp
loopne
add
lea
pop
and
leave
sbb
mov
mov
sarl
adc
cmp
mov
ss
pusha
mov
cmp
lret
xchg
test
xor
pop
mov
pusha
and
push
test
lahf
enter
nop
rcl
int3
sbb
int3
and
cli
add
mov
pop
pop
ret
xor
add
fists
inc
incl
popl
orb
cmc
sub
xor
aam
jnp
adc
test
idivl
jns
push
adc
fdivs
hlt
movsb
jmp
xor
or
int
out
mov
pusha
fisubrs
xchg
dec
or
ljmp
add
aas
arpl
out
jns
inc
sbb
ffreep
sub
or
lods
add
push
push
aaa
mov
lcall
xor
fmuls
adc
out
xchg
inc
xorl
lcall
xor
adc
or
sbbb
dec
adc
jmp
mov
fs
pop
mov
test
pushf
movsb
xor
cli
add
adc
xchg
dec
jbe
cmp
mov
and
pop
pop
xor
mov
cld
add
into
cmp
sbb
in
mov
bound
mov
jo
dec
and
or
loope
pop
es
movsl
sub
js
cmp
sub
adc
dec
adc
scas
sbb
das
test
aaa
and
imul
aaa
mov
loope
fmull
mov
rolb
out
aam
idiv
add
pop
cltd
rorb
neg
pop
sbb
pop
inc
inc
push
dec
pop
sbb
inc
pusha
cmp
cld
sbb
incl
pop
push
and
call
loopne
cld
call
dec
mov
jo
sqrtps
in
fisubl
push
sub
mov
lods
into
daa
dec
insb
shrb
push
xlat
dec
call
or
dec
ljmp
std
test
and
push
push
push
xor
and
decl
icebp
push
outsb
inc
jo
popf
test
inc
adc
pop
addl
add
and
js
sub
mov
inc
nop
clc
xorl
sub
sub
pusha
jl
fdiv
xor
jmp
push
insl
add
sbb
jo
ss
xchg
cmp
mov
sub
rcl
cmc
es
fsts
cmp
ret
fbstp
loopne
cld
push
icebp
loope
cmpl
add
inc
adc
sub
or
and
xchg
pushf
jnp
xchg
clc
push
and
push
inc
xor
add
pop
add
mov
shr
lret
or
int3
mov
rcrb
insl
in
fistpl
imul
xchg
jle
fistpll
push
ja
pop
push
cmp
mov
hlt
mov
sbb
xor
aaa
call
sarb
fsubl
push
xchg
ss
xlat
push
imul
or
or
jo
dec
je
push
aam
sub
sub
mov
enter
shlb
inc
or
push
xor
icebp
pusha
jbe
xor
mov
loop
movsl
xchg
orl
sarb
lahf
sub
pop
add
mov
imul
mov
call
imul
fnstsw
jo
cmp
pushl
shrl
push
sub
out
inc
or
es
mov
sbb
mov
mov
jns
add
lock
xor
dec
lea
xchg
fsubl
mov
aas
or
push
mov
imull
sarl
test
xchg
int3
pop
scas
mov
shr
push
push
and
mov
mov
in
mov
mov
fiaddl
into
sahf
sub
js
xchg
enter
and
call
push
or
insl
shl
push
aad
mov
lret
pop
dec
add
repnz
xor
cli
mov
or
movzwl
inc
mov
inc
mov
stc
lock
imul
pop
jp
adc
cltd
mov
and
cmp
push
xchg
or
push
xchg
popf
dec
jge
add
push
ret
test
dec
arpl
sub
jno
and
movsb
jl
loope
push
push
stc
mov
cmp
pop
adc
adc
in
jmp
loopne
add
enter
imul
inc
cmp
or
xchg
jo
call
loop
hlt
or
int3
mov
aas
cmp
cmpsb
in
mov
mov
movl
stc
sbb
orb
cmp
sbb
mov
pop
add
add
add
cli
int
pop
mov
mov
movsl
movsw
push
jo
add
cld
movsb
mov
movsl
or
or
mov
shr
mov
rcll
inc
mov
adc
movb
pusha
push
lea
cmpb
pushf
fldl
pop
bound
in
push
mov
in
stos
es
jp
lret
add
psubusw
xor
jl
push
mov
sbb
jb
and
in
fbstp
push
cld
je
push
push
xor
and
sbb
jl
inc
jmp
add
jp
adc
xchg
cmpsl
cmp
xchg
and
adcl
pop
xchg
pusha
test
jp
inc
add
jne
sbb
add
cmpb
stos
or
scas
cmpsl
js
xchg
cmp
jo
push
mov
jl
add
sbb
fwait
sub
dec
sbb
xlat
mov
add
sbb
inc
push
shlb
and
sub
cmc
lock
push
xchg
push
cmp
push
push
insl
in
bound
sbb
sbb
seto
nop
shl
rorb
xor
loope
inc
mov
pop
and
inc
enter
mov
in
pop
pushf
mov
push
test
adc
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
outsl
outsb
outsb
outsb
and
or
jmp
and
pop
hlt
bndstx
syscall
jmp
lea
test
sub
sbb
jbe
cwtl
push
fs
popf
push
shlb
jns
out
push
ljmp
add
or
sbb
iret
repz
and
xor
cmp
inc
inc
dec
push
push
repz
repz
pusha
gs
iret
repz
je
jle
mov
xchg
xchg
popf
and
add
dec
incb
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
and
sbb
and
aas
xchg
inc
popl
push
sbb
jmp
mov
xchg
inc
sbb
jecxz
and
dec
movb
dec
add
sub
lea
ret
enter
mov
cmp
movsl
shr
xchg
jge
or
or
insb
inc
fmuls
jnp
adc
or
out
loope
outsl
jo
mov
sub
push
xlat
cmp
dec
jns
add
dec
push
pop
aad
add
test
sbb
push
jb
dec
push
lock
ret
inc
in
dec
das
clc
aaa
lret
fmul
lret
or
mov
dec
mov
ds
fildl
adc
out
push
add
scas
jb
dec
lods
sub
sub
xor
push
jne
push
mull
icebp
add
cmp
push
push
mov
lods
mov
std
mov
push
adc
mov
fmull
mov
push
mov
or
jmp
les
or
xor
pminsw
jno
int
pop
mov
cmpl
adc
pop
fidivrs
inc
inc
clc
loopne
hlt
adc
lods
test
dec
cld
jae
adc
adc
sbb
lock
nop
cwtl
movsl
push
pop
nop
sbb
inc
jle
fcmovb
jno
add
mov
pop
add
pop
mov
push
pop
loopne
and
jo
gs
sub
pop
sub
xor
push
dec
xlat
andl
rcll
fidivrl
cmp
xchg
mov
enter
imul
inc
js
inc
add
daa
inc
in
adc
imul
or
mov
dec
sbb
je
loopne
pop
add
cmp
ss
stos
or
or
test
and
sbb
data16
adc
lret
test
scas
mov
add
cs
dec
pop
pop
inc
lea
add
xor
dec
and
add
or
inc
pop
lds
das
adc
push
paddb
adc
shlb
xor
and
aaa
js
lcall
jne
or
adc
cmp
cmp
dec
mov
mov
enter
les
adc
adc
inc
mov
push
pop
dec
ficomps
test
pop
or
int3
jge
mov
and
push
xor
rclb
jmp
cwtl
into
xchg
jge
jg
cwtl
loope
mov
test
ret
mov
or
push
xchg
pusha
lods
sub
push
add
sub
dec
ljmp
or
nop
mov
je
inc
adc
mov
sarb
sbb
push
imul
push
dec
mov
adc
pop
ret
xor
mov
ja
adc
stc
cmp
icebp
js
cmp
mov
loopne
sbb
jmp
dec
inc
or
les
es
test
inc
imul
push
jmp
sahf
out
loopne
popa
ds
dec
xchg
stc
xor
roll
shl
ror
imul
xor
push
push
inc
inc
mov
cmc
mov
test
test
icebp
andl
push
pop
in
out
lock
jbe
jnp
push
add
and
pop
inc
aas
lret
mov
cmp
jne
jp
cmp
pop
adc
int3
fsubs
andl
outsl
mov
or
dec
enter
xor
pop
repnz
cmpsl
testb
or
push
push
jmp
std
popa
mov
xor
incb
jnp
pop
push
cli
dec
jmp
gs
rorl
inc
cmp
add
dec
pusha
test
mov
pop
add
add
push
movsb
repz
loopne
inc
es
shl
add
sbb
out
add
enter
int3
or
xchg
push
xchg
pop
lret
idiv
add
add
sti
std
sbb
in
lret
mov
inc
mov
les
push
sbb
pop
push
test
push
arpl
cmp
add
mov
daa
sbb
pop
ljmp
xor
mov
fidivs
sbb
ret
sub
mov
dec
fldenv
loopne
add
cmp
add
rcrb
add
dec
test
ret
xor
jns
inc
cmp
in
repnz
call
push
in
add
sbb
add
mov
jmp
and
test
imul
inc
in
test
cmp
sbb
fsub
sub
push
sti
loop
adc
cmp
js
std
inc
dec
sbb
mov
add
push
pop
adc
pop
xor
nop
push
shlb
jmp
stc
daa
pop
add
cld
cmp
mov
test
les
mov
fsubl
popa
les
cmp
or
into
shl
aas
pop
ds
add
cli
dec
mov
aas
popf
sub
repz
and
daa
sub
mov
fldcw
mov
add
and
gs
dec
push
push
and
mov
ja
cmp
or
adc
mov
ja
push
push
push
cmp
std
push
or
push
dec
adc
call
rcll
mov
cmpsl
sub
shlb
lret
add
or
bound
push
daa
adc
push
jge
and
xor
mov
aaa
or
movl
lret
inc
inc
and
loopne
jle
inc
test
mov
add
mov
pop
jne
es
cmp
je
sbb
pop
cld
push
inc
cmp
jl
mov
mov
xor
add
mov
adc
dec
and
imul
fisubl
es
jns
inc
ljmp
fs
jns
inc
jge
in
or
pusha
sbb
lock
push
jo
push
xchg
fbstp
into
mov
xchg
rorb
mov
inc
push
cmp
xor
scas
mov
push
xor
cmpsb
hlt
out
cmpsl
jp
push
cmp
sub
add
jno
lock
xchg
js
inc
xchg
mov
pop
aas
cmp
xchg
cmp
mov
add
mov
and
dec
test
lods
fisubs
and
push
add
xor
mov
mov
test
and
stos
sbb
arpl
lock
and
cmp
push
loope
loope
sarb
jecxz
or
xlat
add
pop
pusha
or
push
jno
jae
cmp
enter
test
or
popa
add
or
adc
or
mov
aas
mov
sbb
push
jb
add
and
and
sbb
jne
pop
or
pop
sti
cmp
pop
sbbl
push
and
push
movzbl
or
xor
jns
cld
fidivrs
test
ds
inc
add
or
mov
enter
enter
das
jl
in
es
test
xchg
je
mov
nop
xchg
inc
add
nop
lret
and
icebp
fdiv
mov
je
repnz
das
test
lods
mov
sub
lcall
mov
and
and
lahf
int3
rcrb
inc
mov
addb
push
push
shrl
movb
cmovb
add
inc
clc
add
cwtl
hlt
sub
sub
adc
add
out
add
movsl
xchg
out
je
repnz
or
jg
incl
adc
jne
incl
cmp
jl
iret
lods
es
sub
sarb
jnp
es
push
jne
inc
cmp
insl
jle
jp
xor
sti
je
lea
shr
out
xor
xor
aaa
add
pop
cld
push
ss
mov
jl
jmp
imul
fistpl
rorb
cmp
push
pop
adc
sub
add
or
push
in
pop
jns
iret
or
mov
testb
andb
insb
xor
sbb
and
push
in
les
into
jmp
inc
sbb
fistpl
push
hlt
push
jl
in
sti
and
testb
jmp
xchg
inc
jae
and
clc
addl
xor
xor
dec
popa
in
outsb
xchg
js
sub
cmp
mov
xor
sbb
addr16
jge
mov
mov
into
or
adc
je
movsb
xchg
xor
cmpsb
cmpsl
pop
outsl
add
out
push
pop
cmp
jge
clts
pop
shl
jl
inc
mov
daa
mov
sbb
inc
add
mov
neg
pop
pop
sbb
xor
imul
scas
pop
add
push
mov
and
pop
add
or
roll
into
sub
dec
push
push
pop
inc
adc
out
sub
mov
js
add
pop
jne
push
inc
pop
inc
or
pop
je
push
call
out
jmp
mov
dec
push
cld
mov
jge
imul
and
or
push
clc
mov
push
sbb
adc
sbb
fisubs
mov
adcl
and
adcl
mov
mov
jb
addr16
dec
and
sbb
pop
js
jmp
jne,pn
pop
add
lret
mov
pop
add
jmp
mov
cmp
inc
xor
push
and
call
xchg
sbb
mov
push
aaa
xor
xchg
rclb
add
and
psubw
jo
push
or
sarb
pop
xchg
lcall
ret
es
imulb
cmp
dec
adc
xchg
andb
adc
cmp
testb
out
mov
mov
jne
push
adc
sbb
insb
jl
mov
sbb
adc
push
xchg
xor
mov
popf
pop
neg
call
cmp
sbb
xor
mov
fisubs
lock
popf
decb
mov
jb
push
or
mov
loop
push
mov
and
sahf
shll
adc
in
adc
jmp
inc
add
faddp
xchg
xchg
rorl
add
enter
fs
add
push
inc
push
loop
cs
xchg
stc
add
mov
and
les
add
cmp
fmuls
inc
mov
addl
lcall
jno
mov
popa
and
ljmp
loopne
jmp
add
add
mov
dec
adc
sbb
or
and
loop,pt
nop
mov
rorb
inc
or
cmp
xor
push
ss
lods
dec
sbb
mov
ret
mov
cmp
mov
inc
adcl
rcrb
jmp
sarl
mov
add
int
iret
fs
mov
movzbl
adc
jo
ja
loopne
jl
cmp
js
add
inc
icebp
mov
andl
js
ja
add
jmp
clc
loopne
stos
sbb
dec
xor
in
and
mov
xchg
je
add
mov
cwtl
bound
mov
add
shlb
add
mov
fsubrs
cmp
push
or
or
out
push
ss
mov
cmp
pop
or
add
mov
sub
dec
jle
lcall
cmp
test
test
add
inc
pop
dec
add
test
jae
or
adc
nop
jo
or
and
pusha
inc
ret
mov
push
adc
cmpl
or
add
push
in
or
ss
leave
ret
or
in
data16
mov
and
mov
lock
in
cli
mov
cmpl
pusha
or
jle
in
xlat
xor
movsl
xor
pop
inc
push
dec
dec
mov
lods
pusha
lock
or
cmp
sbb
shrl
nop
cmp
dec
xchg
fldl
push
aam
insl
mov
jmp
inc
or
repz
xchg
dec
add
push
jne
fnsave
xor
sbb
lcall
adc
sbb
orl
iret
ret
cmp
insb
bound
mull
add
pop
cmpsl
imul
cmpl
mov
or
add
add
idivl
mov
push
xchg
mov
mov
jmp
repnz
pop
lea
cmp
cmp
jae
sub
sbb
outsb
test
push
mov
lea
and
ja
xchg
sarl
lea
jg
jge
pushf
sub
movsbl
mov
mov
and
inc
cmp
jbe
in
sbb
arpl
movsb
add
repz
mov
cltd
ljmp
or
mov
mov
push
les
xor
mov
enter
cld
xor
jno
das
shlb
mov
mov
xor
xor
jmp
push
cmpsb
call
nop
xchg
out
js
or
cmp
leave
in
push
xchg
xchg
or
add
push
mov
add
mov
ret
into
rcll
sbb
xor
lock
fdivrs
push
xor
xchg
xor
and
xor
aad
js
push
push
jmp
mov
imul
add
add
lock
push
xor
jle
inc
or
sub
pusha
mov
mov
loop
loop
jo
adc
cmp
das
fisttpll
add
pusha
xlat
inc
loopne
sub
mov
push
sub
sarl
mov
adc
mov
fsubs
xchg
cwtl
xor
xchg
sub
mov
xor
xchg
or
jnp
sbb
pop
and
push
ficompl
or
mov
pop
jns
shll
inc
add
add
mov
mov
and
add
hlt
test
ret
xor
into
jo
sbb
jmp
fwait
lret
icebp
aaa
add
sar
pop
adc
push
pop
aas
or
sub
iret
cli
adc
push
mov
inc
mov
sbb
loope
or
inc
cmp
jl
gs
sbb
test
test
dec
jnp
push
mov
pop
icebp
xchg
add
add
rorl
bound
dec
jmp
dec
lock
popa
data16
adc
shr
jle
jle
add
mov
jmp
xor
idivl
andl
dec
icebp
icebp
lea
adc
push
bound
sahf
xchg
xor
dec
pop
cmpsl
gs
mov
mov
jp
bswap
loopne
arpl
xchg
mov
call
iret
bound
divb
int
fsubrs
cs
push
lods
inc
cmp
lods
push
ret
push
out
xor
and
movsl
ss
data16
and
jle
push
lcall
xor
mov
jl
add
mov
dec
adc
mov
ja
adc
push
movb
or
in
lods
sarb
xchg
xor
scas
in
mov
adc
add
cmp
inc
shrl
ret
std
fadds
xchg
add
or
and
popa
in
xor
sub
mov
jnp
mov
jmp
inc
lds
cmpb
mov
or
sub
imul
fbstp
sub
mov
mov
les
lcall
mov
sbb
pop
jmp
jecxz
dec
and
aam
jl
frstor
push
or
jne
push
mov
inc
xor
push
insl
hlt
fdivl
mov
push
pop
or
inc
jg
inc
cld
sub
mov
mov
popf
push
stos
shlb
add
add
ds
incl
mov
shr
shl
add
and
shl
xor
mov
mov
jne
and
sti
in
movsw
movsb
mov
mov
add
js
pop
lret
clc
lods
jge
fisubrl
into
push
fildll
xor
cmp
inc
cmp
and
dec
or
adc
nop
lock
xor
fisubrs
dec
je
mov
push
inc
jl
addb
and
or
std
inc
sbb
std
inc
cmp
sub
rorl
inc
int
pop
add
es
or
clc
incl
and
adc
fldz
fcomp
fnstsw
jmp
adc
or
jmp
adc
or
push
push
orl
adc
sub
shl
loop
leave
add
nop
cmp
or
cmp
jbe
outsb
add
lock
lock
jne
inc
test
xchg
dec
xchg
std
clc
hlt
add
test
inc
pop
je
sub
sbb
xor
xor
push
lret
cmp
ljmp
cmp
add
outsb
hlt
mov
fistpl
mov
jmp
cld
jbe
pop
or
test
loopne
sbb
sbbb
push
dec
and
or
cmpsl
inc
popf
push
ret
jne
cmp
stos
mov
sbb
mov
data16
or
sub
sbb
aam
inc
ret
jmp
fldl
and
or
cmp
sub
icebp
sub
sarl
out
in
hlt
sarl
int
fimuls
enter
dec
repz
loopne
int3
loopne
in
cld
lods
dec
cmp
cld
mov
or
loope
outsb
cmp
mov
mov
jle
cs
pushl
es
lea
xchg
mov
cld
inc
sub
mov
pop
mov
and
dec
mov
xchg
sub
in
sub
jne
and
arpl
pop
sbb
dec
pop
mov
inc
pop
cmp
movsl
dec
sbb
pop
sbb
add
jmp
push
mov
sbb
xor
cwtl
add
dec
cmp
push
xchg
jnp
jmp
and
or
inc
dec
cmp
cmpl
mov
and
lods
test
add
arpl
nop
pop
sbb
xchg
mov
and
and
sbb
cmp
gs
push
adc
test
movl
xor
dec
movsb
mov
subb
add
ss
pop
mov
test
or
cmp
pop
mov
fcoml
inc
cmp
push
add
mov
ja
sub
jne
xor
jle
in
pop
jb
dec
adc
mov
mov
icebp
or
adc
rcll
push
push
out
push
loopne
insl
mov
dec
neg
call
nop
add
xchg
ss
test
push
push
lods
and
or
aad
dec
add
popf
jbe
push
adc
xor
cmp
adc
test
jg
add
and
lea
test
or
mov
mov
lock
lea
inc
push
mov
mov
mov
lock
inc
fldl
sub
test
add
add
mov
sub
or
arpl
dec
mov
push
mov
add
arpl
out
and
out
pop
adc
adc
lret
xchg
mov
add
xchg
enter
push
xor
add
clc
and
inc
rcrb
aaa
fimuls
push
add
sub
pop
aaa
jo
add
and
sbb
sbb
push
xor
and
sbb
push
jmp
cmp
and
cmp
push
nop
mov
in
xor
icebp
xor
adc
es
andb
adc
ss
rcr
add
faddl
es
push
and
jne
mov
addb
and
push
inc
or
test
or
je
add
daa
cld
cmp
jb
cmp
mov
jnp
push
roll
xchg
add
mov
jg
push
lods
cmpsl
xor
sub
pop
push
and
add
insb
push
push
dec
inc
xlat
fldcw
or
dec
nop
mov
pop
jbe
movsl
or
leave
pop
inc
mov
rorb
adc
cs
in
pusha
subl
push
jo
push
xor
lahf
dec
mov
sbbb
dec
adc
xor
iret
mov
pop
fmuls
lret
mov
inc
rolb
pop
stos
push
mov
sbb
in
call
shl
dec
imul
xorl
leave
cmp
sub
or
lods
imul
movsb
xchg
mov
inc
pushf
enter
mov
insb
shlb
jl
xchg
sarb
sbb
add
aas
pop
adc
mov
mov
push
sub
sub
jbe
ss
cmp
das
out
mov
cmp
push
pushf
mov
cmp
cmc
sbb
and
inc
xchg
lock
shrb
mov
clc
cmp
push
daa
imul
push
push
xchg
dec
shufps
sbb
pop
pop
das
or
dec
inc
int
js
faddl
enter
push
mov
leave
ljmp
xchg
in
xor
fsubrs
and
mov
dec
cmp
inc
cmp
and
adc
sbb
cmp
loopne
jae
add
inc
dec
dec
test
and
fcmovbe
xchg
incl
sub
mov
imul
mov
or
pop
mov
inc
addb
in
sub
faddl
imul
sahf
or
and
fwait
aas
cmpsb
add
call
call
adc
sti
dec
imul
out
mov
lea
daa
pusha
stos
sub
add
sbb
dec
pop
mov
xchg
mov
bound
testb
fwait
adc
mov
ljmp
sbb
call
insb
lods
or
xor
push
pushf
adc
mov
imul
es
inc
sub
arpl
aaa
xor
and
cwtl
or
add
fs
mov
sbb
jp
inc
xchg
inc
sub
sub
outsl
pusha
push
push
cli
cmc
jmp
je
cmp
push
mov
inc
cmc
add
inc
mov
inc
adc
dec
inc
mull
mov
jecxz
ret
pop
sub
adc
add
cmpsl
lret
jl
mov
xchg
push
mov
aam
xor
rclb
and
push
xor
movsb
aad
mov
jnp
cmp
add
sbb
cld
in
sbb
inc
into
adc
push
sub
outsl
add
sub
inc
mov
xor
sbb
nop
ljmp
pop
sub
enter
cwtl
xchg
pop
push
les
mov
loope
push
sub
jl
repz
js
inc
imul
add
xor
pop
inc
orb
imul
test
xor
xorl
adc
ret
or
rorl
or
jbe
add
xor
imul
rcrb
push
inc
jle
shlb
xor
cmc
loopne
mov
mov
pop
mov
jns
enter
push
mov
into
rorb
pop
out
xchg
xor
push
or
adc
sub
sbb
lahf
andl
movsl
add
fdivrp
shl
add
push
xchg
push
negb
mov
push
mov
decl
add
inc
icebp
dec
rorl
pop
mov
ret
jl
stos
out
sub
push
add
jb
push
in
mov
xchg
rorl
sbb
sub
ret
mov
sbb
or
xor
lret
xlat
dec
clc
and
add
or
push
cmc
sahf
and
xchg
sub
in
ljmp
clc
fmuls
mov
mov
dec
ficoms
dec
push
and
imul
adc
mov
sbb
mov
je
call
js
dec
adc
fdivr
sbb
dec
dec
fistl
faddl
mov
pop
push
or
pop
push
mov
lcall
push
scas
sub
sar
inc
mov
xchg
jp
call
push
xor
push
xchg
rcrl
es
add
mov
enter
or
lret
sub
dec
xchg
idivb
mov
mov
mov
out
leave
inc
imul
adc
lods
mov
sub
daa
jne
cli
pop
sbb
mov
adc
nop
add
ljmp
mov
add
cmpl
cmp
sti
fstl
rcrb
push
into
fisubrs
adc
inc
add
adc
add
fwait
ja
cltd
push
jecxz
aaa
mov
adc
or
dec
sub
inc
cmp
into
cmp
leave
orb
push
or
cld
inc
sub
out
fs
sbb
add
loopne
sahf
mov
dec
adc
push
mov
andb
adcl
pop
lock
or
shlb
push
call
adc
shll
ret
xchg
mov
cmp
push
insb
je
push
adc
ror
add
adc
ret
sbb
pop
cmp
dec
sbb
cmc
movsb
push
fisttpl
and
push
lods
xor
and
add
jmp
add
xchg
xchg
data16
pop
cmpsl
jle
cmpsb
rorb
adc
pop
sbb
xor
sbb
pop
and
shl
dec
mov
jl
xorb
sub
out
sbb
lret
jge
sbb
push
fldenv
rsqrtps
cmp
movsl
inc
and
pop
es
push
adc
dec
jmp
insb
and
xor
sbb
add
scas
cmpsl
sbb
jo
call
xor
jp
mov
lds
jg
jne
notl
sbb
test
fcoms
mov
adc
cltd
into
or
mov
dec
enter
xchg
loopne
jne
adc
cmp
cmpl
jecxz
inc
loopne
or
dec
stos
daa
jns
and
pusha
xchg
je
dec
push
push
adc
push
je
sub
out
dec
push
rcll
xchg
loopne
inc
pop
pop
mov
je
inc
dec
mov
lods
mov
cmp
inc
pop
ficoml
pop
xlat
and
adc
fbstp
jg
mov
je
fwait
les
pushf
rcrb
sbb
push
add
bound
in
and
jmp
scas
pushf
sub
lea
test
rolb
aas
and
ja
dec
mov
insw
rclb
and
sub
in
sbb
xor
add
jnp
rorb
jb
jle
stos
ret
outsl
cmp
mov
xor
cmp
push
xchg
adc
adc
sbb
push
mov
fiadds
lock
jl
mov
aam
or
mov
cmp
sub
add
mov
test
sbb
mov
imul
idivl
jo
dec
cmp
inc
pusha
popf
add
lret
dec
fnstsw
xor
or
sbb
push
inc
or
inc
test
movsl
outsl
test
and
xchg
iret
sbbl
test
test
and
cmp
or
mov
lret
sub
imul
adc
push
sub
cli
sbb
mov
bound
dec
dec
rcrl
sub
movb
mov
sbb
adc
pop
daa
inc
repz
insl
insl
inc
cmp
push
je
xor
je
movsb
push
xor
and
sbb
aad
xchg
jecxz
repnz
mov
rorb
cmp
push
dec
xor
add
test
mov
std
stc
inc
sbb
adc
push
ds
popf
fisttpll
mov
xchg
pop
mov
aad
add
pop
dec
cmp
mov
and
lods
adc
pop
cmp
out
and
inc
imul
mov
push
add
add
add
inc
sub
xor
dec
sbb
mov
cmp
nop
xchg
xor
insl
pop
xchg
jl
sarb
jo
push
test
test
test
adcl
add
lea
cmpsb
jo
outsl
shlb
gs
cmc
and
mov
xchg
out
xchg
ljmp
sub
mov
or
addl
lods
sbb
add
mov
dec
insb
jl
decb
jl
dec
jl
test
lock
mov
pop
cmpb
jp
mov
es
cwtl
or
filds
push
pop
ljmp
pop
lret
in
xor
rolb
movsb
adc
cmp
inc
aam
movsb
popf
mov
dec
shrl
mov
addl
xor
aaa
iret
inc
ret
xor
fnstsw
popf
and
inc
sbb
es
mov
js
movsb
xchg
cmc
std
icebp
jg
mov
or
outsb
mov
adc
lds
pusha
cmpsb
fiadds
pop
mov
ds
cli
add
cld
or
rep
mov
cmp
cmpsb
inc
icebp
cmp
jne
adc
xor
inc
movsl
push
cld
xchg
mov
or
lret
inc
mov
inc
leave
fnstcw
push
stos
xchg
lods
push
jnp
adc
xchg
test
jns
adc
add
call
outsb
insb
aam
lea
jns
jno
jle
push
sti
mov
aaa
push
jae
xor
sub
lods
cmp
icebp
call
lods
mov
cmpsl
or
pop
inc
pop
cmp
pop
jb
mov
cs
pop
fwait
add
je
ja
add
sbb
das
dec
pop
mov
adc
push
add
movb
lods
sbb
notl
xchg
inc
pop
pusha
lods
mov
and
les
xor
mov
xor
jmp
sub
movsl
jmp
int3
and
nop
cwtl
enter
sub
sbb
stos
into
test
sbb
mov
mov
and
cltd
fs
pop
adc
jb
add
or
pop
std
push
lea
dec
test
lret
sbb
inc
fwait
lock
popf
les
enter
mov
shrl
in
mov
popf
test
push
or
sub
shll
test
sbb
jb
idivl
xor
inc
xor
mov
inc
and
loopne
gs
pop
inc
jne
jae
cmpsb
mov
lea
call
xchg
lock
daa
cli
or
mov
inc
or
insb
lods
cmp
push
adc
and
inc
push
xchg
movsl
loope
pushf
inc
fsubs
mov
cld
jns
push
and
adc
mov
stos
inc
repnz
push
popa
dec
pushf
and
jnp
add
sub
loopne
dec
fistps
pop
loop
in
push
popa
mov
orb
mov
hlt
cmp
xor
add
push
scas
push
add
add
cmp
jne
dec
and
sub
add
push
sbb
rorb
adc
fdivrs
test
xor
mov
mov
outsb
and
or
and
cmpl
jne
adc
jb
aaa
mov
xchg
jmp
push
test
mov
inc
inc
test
sahf
dec
pop
sub
inc
mov
cmc
cmp
mov
xchg
push
and
daa
loopne
sub
mov
ss
movsb
pop
add
cmp
push
outsb
push
sbb
jge
xchg
jnp,pn
mov
jo
add
push
iret
insb
jmp
sub
pusha
int
add
das
jmp
mov
addl
add
popa
test
push
add
je
adc
out
sarl
sete
sbb
dec
or
push
imul
ja
sbb
jmp
pusha
push
lahf
add
pop
mov
or
repnz
pop
jmp
pop
es
push
ret
xor
xor
mov
dec
inc
mov
lahf
gs
sahf
call
shll
xor
pop
scas
subb
jle
mov
jl
lret
shlb
fs
imul
pushf
sbb
dec
decb
cmp
je
xor
cmp
aaa
fcoms
sbb
das
mov
call
or
cmp
jg
mov
mov
cmp
or
pop
cmp
jl
push
inc
fnstsw
jmp
mov
gs
cmc
jns
sarb
lret
das
xor
cmp
xchg
jl
add
mov
cmpsb
sarb
jle,pn
rcrb
jmp
xor
std
fs
or
xchg
idiv
sub
fnstenv
inc
inc
jmp
inc
fs
and
and
add
cmp
jne
aam
dec
popf
rclb
adc
dec
in
add
push
outsb
adc
xchg
out
mov
jne
push
sub
xor
enter
mov
arpl
jle
push
mov
js
add
mov
adc
in
cmpsl
add
adc
aam
push
sbb
and
rcll
and
movsl
sbb
lret
aam
pop
in
mov
dec
out
and
pop
lret
imul
inc
outsb
cmp
adc
and
fcoms
test
loopne
data16
cmpsb
xchg
pop
push
add
inc
mov
les
add
sbb
dec
cmp
test
fmull
xchg
jnp
or
push
test
xchg
ljmp
dec
sahf
hlt
adc
sbb
jae
mov
and
adc
aam
rcl
add
push
sub
add
call
cs
adc
or
jo
cs
lods
je
sbb
popf
dec
fidivrl
outsl
stos
mov
ss
push
sub
jns
test
adc
mov
jne
ret
sub
dec
add
push
fldt
mov
jle
loope
stos
sti
fnstsw
xor
and
outsl
cmpsb
test
push
push
test
pop
mov
xchg
gs
aaa
jne
adc
icebp
mov
loopne
cli
mov
jge
mov
push
xchg
pop
inc
mov
pop
mov
sub
adc
inc
mov
jo
cmpsl
or
dec
xor
ret
sub
jns
nop
sub
sub
dec
imul
sub
add
mov
cmp
sub
dec
jp
add
adc
push
fnsave
insb
aaa
mov
or
inc
sbb
xor
push
out
mov
lods
pop
in
or
add
adc
aas
add
rol
mov
scas
add
mov
call
cs
xchg
call
mov
dec
clc
jne
rclb
add
cmp
xlat
pop
dec
jne
ss
mov
dec
nop
xor
test
gs
pop
cmp
mov
leave
sub
in
sub
jbe
sbb
pop
cmp
int3
test
and
mov
or
push
add
and
insb
and
adc
cmp
das
pop
testl
mov
mov
mov
sbb
insl
and
sub
mov
out
fcomp
sbb
jne
clc
cmp
inc
jle
pop
xlat
lahf
push
out
push
pop
popf
and
fcoml
movzbl
movsb
les
test
stos
mov
mov
enter
inc
cmp
mov
js
jl
mov
xchg
shll
leave
into
mov
nop
icebp
add
xchg
mull
xor
shr
xor
pop
ret
mov
in
not
dec
adc
sbb
xchg
pop
xor
xchg
cmp
jbe
add
jmp
add
mov
jb
decl
mov
movsb
shrd
push
xor
rolb
jno
imul
mov
add
xorb
cmp
push
push
add
jne
insb
add
cltd
xor
fsubrs
sar
xchg
test
inc
ljmp
adc
dec
fiadds
insb
or
cltd
aas
adc
mov
add
add
mov
or
mov
add
jne
je
xchg
xlat
mov
popa
add
push
jb
push
xor
xor
push
das
lods
int3
nop
mov
stc
outsl
cmp
xlat
xchg
or
loopne
loopne
or
test
push
push
sbb
xchg
orl
lock
aam
mov
lods
or
cmp
or
in
add
xchg
stos
pusha
or
sub
push
or
jg
add
aad
insl
mov
xor
lcall
sbb
inc
push
adc
inc
stos
xchg
lds
mov
add
mov
pop
sbb
sub
jmp
xor
and
mov
sbb
leave
pop
mov
and
pop
cmp
aam
sub
add
mov
dec
rorb
jmp
inc
cld
icebp
int
clc
cmp
jge
cmp
inc
cmp
add
sub
xor
rol
inc
and
and
xor
mov
jne
cmp
mov
and
addl
test
cwtl
or
xchg
nop
inc
fsubp
jg
pop
pop
sbb
sbb
add
adc
cmp
adc
stos
and
test
sahf
add
aam
ljmp
push
jo
xchg
mov
dec
imul
push
push
add
pop
cmp
sub
paddusw
push
push
mov
sahf
add
pusha
cmp
inc
push
enter
test
push
xchg
ja
push
xor
inc
in
or
push
push
test
jne
sbb
jb
out
inc
mov
xorb
dec
inc
outsb
clc
jno
in
jle
ficoml
push
push
inc
xor
or
enter
adc
rorb
fidivrs
push
xor
imul
lahf
or
daa
push
sbb
js
or
pushf
cmp
adc
adc
pop
dec
xor
arpl
or
add
call
xor
inc
mov
lock
push
cs
stos
xor
pop
rorl
sub
je
or
pop
addr16
mov
and
add
xor
mov
and
test
push
in
clc
or
and
pusha
test
mov
sahf
sub
pusha
das
sbb
xchg
je
and
and
aad
pop
clc
and
in
jne
sub
push
fadds
jno
mov
sbbb
pop
push
adc
sbb
leave
push
movsb
adc
dec
xlat
fcomi
dec
mov
cltd
sbb
sub
inc
lcall
mov
adc
sbbb
and
cmp
sbb
hlt
insb
inc
filds
adc
dec
sbb
fsubrs
scas
adc
pop
and
cltd
mov
push
push
adc
or
push
das
and
lods
adc
adc
or
push
dec
mov
sub
adc
je
ss
dec
mov
or
cbtw
inc
in
js
and
mov
and
test
add
xchg
xchg
xchg
sub
in
add
mov
test
lock
das
add
add
bound
cmp
mov
mov
and
inc
push
push
loope
push
mov
inc
adc
xor
mov
adc
push
daa
les
fsubrl
mov
xchg
mov
xchg
cli
call
inc
cmp
xor
lret
sub
rclb
push
or
push
sub
mov
cmp
fstl
nop
xor
mov
test
sub
sub
sbb
push
sub
sub
sub
sub
mov
daa
movsb
test
mov
sub
and
fst
daa
lods
cwtl
mov
movsb
cmp
adc
or
inc
aaa
test
jae
das
push
or
shrb
les
add
xor
enter
test
int3
repz
into
je
mov
test
inc
ljmp
nop
jle
xchg
sbb
cmpsb
cmp
and
roll
mov
pop
stos
add
ja,pn
push
sbb
add
or
mov
sub
sahf
xchg
sarb
xchg
inc
adc
push
inc
push
add
jno
rolb
xchg
icebp
mov
dec
and
sub
add
dec
cmpsb
pop
xchg
add
loopne
push
sbb
jge
mov
jo
je
sub
adc
in
test
jne
cmp
rcrl
test
leave
cmp
imul
ss
scas
sbb
adcb
pop
inc
mov
push
sub
test
sbb
andl
inc
push
sbb
in
ret
clc
repz
mov
shll
inc
sub
add
or
jns
or
mov
jns
lock
jl
leave
mov
test
cmp
jne
out
xor
jne
dec
push
mov
add
push
dec
aam
je
sub
xor
subb
enter
test
dec
mov
or
movd
push
inc
and
jno
sub
push
pop
andb
pop
cld
pop
mov
push
lods
jbe
adc
sub
cld
cmpl
test
pushf
or
cltd
test
inc
add
push
jl
movsb
jle
inc
mov
mov
pop
test
mov
aaa
sti
pop
jge
mov
jns
sbb
dec
movsb
adc
lahf
add
inc
popf
mov
mov
adc
and
xor
clc
push
xchg
inc
seta
sti
dec
inc
or
imul
movsb
mov
js
xlat
or
sbb
daa
jmp
repnz
outsb
jmp
gs
jl
jb
mov
mov
stc
add
nop
shlb
inc
cs
inc
aaa
xchg
sub
sub
push
sahf
mov
sar
add
add
aam
test
movb
sub
lret
das
sbb
rorl
subb
push
push
stos
or
inc
pop
nop
adc
jle
adcb
adc
lock
pusha
popf
ficoms
dec
inc
shl
imul
bswap
movaps
rorb
sub
lea
mov
push
or
xor
and
mov
xchg
movsl
push
loope
test
adc
clc
ret
push
loopne
xchg
push
pop
inc
xchg
or
add
cli
push
insl
add
add
xchg
int3
das
adc
pop
cli
movsl
dec
test
mov
daa
jle
push
cmp
add
mov
dec
pop
add
adc
add
xchg
mov
add
rol
or
popf
lods
add
cmp
dec
nop
sub
xchg
xor
mov
inc
mov
jmp
add
shl
jle
add
repz
call
add
sub
sub
inc
lea
orb
add
loope
cwtl
rolb
mov
inc
mov
lahf
adcl
pusha
or
cltd
lods
sbb
mov
stc
fidivrs
jl
push
mov
push
and
sbb
cwtl
sub
jne
jmp
mov
lods
subl
push
int3
mov
test
clc
cmp
dec
jl
cmp
or
mov
adc
add
shll
pop
pop
je
pop
sub
xchg
std
and
dec
psubb
pop
lock
add
lcall
js
paddb
jae
mov
in
adc
and
xchg
pop
nop
push
adc
orb
push
pop
pop
je
cmp
orl
mov
mov
pop
or
shll
mov
pop
cld
xchg
in
clc
ret
jb
mov
int
inc
je
bound
sub
mov
xor
cld
mov
or
push
jne
jecxz
out
sub
cmp
lcall
push
or
xchg
or
dec
cli
mov
jmp
aad
adc
xchg
pushf
mov
sbb
inc
sub
jmp
cld
push
push
mov
sub
adcl
addb
add
addr16
repnz
or
xor
mov
das
nop
out
pop
jo
inc
push
inc
sub
dec
sbb
out
movb
call
ss
inc
or
add
pop
inc
and
add
mov
addr16
cmp
jns
and
push
lock
inc
je
lock
push
inc
xlat
pop
popa
jmp
add
add
adcb
jl
mov
std
mov
adc
push
and
aas
inc
jle
mov
adc
sbb
shrb
nop
add
pusha
jl
rcrb
gs
cmp
pop
sub
rcrb
push
inc
out
mov
out
and
in
movsb
xchg
mov
push
add
mov
push
mov
jne
arpl
push
push
aas
adc
outsl
add
test
popa
dec
push
adcb
jbe
addr16
dec
mov
cld
cmpsb
push
pushl
add
fs
mov
pusha
push
enter
cmp
sbb
jb
push
in
ja
jl
jae
insl
push
cmp
or
rorb
std
and
andb
dec
sub
je
push
cmpl
push
sbb
push
or
adc
in
wrmsr
fmuls
mov
jmp
cmp
sbb
or
or
adc
ljmp
push
icebp
push
dec
sbb
xchg
nop
or
inc
dec
mov
test
or
cs
jnp
jb
js
cmp
push
subl
xlat
faddl
xchg
subb
push
repnz
push
jmp
xchg
lcall
repz
or
sbb
and
je
sbb
or
adc
xor
sbb
sahf
js
or
loope
shlb
xor
inc
test
inc
lods
add
arpl
inc
sbb
loopne
add
cld
adc
cmp
imul
cltd
sti
je
push
push
dec
inc
adc
adc
shlb
and
xor
imul
dec
xchg
data16
cmpsb
mov
sti
or
ret
dec
in
in
test
and
jns
pop
inc
jecxz
movsb
add
adc
shl
and
fnstsw
push
push
lahf
or
or
inc
add
xorb
cmpsl
push
pusha
ret
cmp
or
pop
mov
or
mov
lret
or
sbbl
mov
arpl
and
add
push
cmpsb
jnp
mov
mov
sarb
jmp
pop
mov
sbb
fs
push
and
stos
bound
icebp
ret
xor
rolb
dec
cmc
ret
fsubrs
imul
gs
mov
sbb
push
add
lcall
sub
jne
hlt
or
aam
push
movsb
sarb
ss
fsub
cmp
sarb
fstpt
loop
add
cmp
push
add
xor
jno
in
push
out
stc
shlb
mov
add
lea
xorb
loopne
sbb
and
leave
xor
pusha
mov
sar
cld
inc
push
mov
ror
xor
shr
xor
sub
jnp
xor
roll
jmp
incb
js
add
mov
mov
iret
or
fs
or
jae
pop
cmc
pop
push
or
and
fiaddl
sti
add
mov
js
outsb
sub
jge
jl
push
pop
mov
in
stos
repnz
mov
fisubrs
shrb
and
and
xchg
push
aam
aaa
jo
xor
push
fs
xor
repnz
repnz
movsl
rcrb
or
mov
neg
push
or
xlat
ret
rcl
add
add
push
rol
in
ss
add
xor
add
call
xor
dec
aam
call
push
scas
sub
ljmp
push
lcall
add
push
sub
dec
shll
fcomp
loopne
jae
imul
lret
xor
call
xchg
shl
in
push
cmp
jns
mov
sbb
push
bound
pop
mov
or
cmp
pop
aaa
mov
loopne
shll
cltd
call
xor
loopne
loopne
in
dec
in
call
jo
loopne
xor
sarl
rcl
xorl
xor
clc
or
xchg
movsb
in
jo
int3
loopne
mov
lcall
clc
and
and
in
sub
loopne
or
xor
hlt
xor
add
inc
and
dec
adcb
mov
cmp
jo
ret
push
jo
cmp
add
adc
je
push
inc
pusha
lcall
inc
adc
push
loop
clc
mov
add
add
pop
adc
imul
push
call
in
sti
rcr
lretw
push
clc
jp
push
and
stc
loope
add
gs
fdivrs
inc
shlb
in
hlt
cmp
adc
add
lret
inc
sub
mov
xchg
cmp
and
stos
sbb
aam
xor
shlb
cmp
sub
xor
inc
in
in
cltd
lods
mov
out
rolb
inc
jo
sbb
cli
xor
push
shrl
jge
shlb
shrb
movsb
test
inc
lcall
xchg
jl
sbb
xor
dec
xorb
push
xor
and
xor
sub
add
xor
adc
push
xor
test
rolb
cmp
add
push
xor
rcrb
cmp
in
dec
pop
sbb
pop
add
aaa
xchg
out
push
add
or
xor
inc
pop
mov
xor
data16
xchg
and
pusha
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
dec
sbb
cmpsb
jb
cmpsl
and
dec
dec
dec
xor
push
imul
pusha
aam
mov
adc
add
xchg
inc
pop
mulb
dec
ljmp
lcall
xchg
push
and
add
and
inc
add
pop
pop
in
add
dec
faddl
shrl
mov
dec
dec
inc
adc
add
adc
and
cmp
jb
fimuls
jnp
jg
add
sub
lea
mov
and
jle
add
decl
sub
and
adc
or
cmpsb
loope
rol
and
mov
adc
pop
insl
insb
sub
mov
inc
dec
fsubl
mov
or
cmp
aas
lea
jmp
add
cmp
sub
out
mov
add
in
mov
mov
dec
jne
pop
add
loope
xor
fcoms
inc
cltd
jl
in
xchg
sub
mov
cmp
jbe
or
rcrb
pop
fs
jle
push
adc
lea
sub
jae
push
pop
pop
and
sub
enter
or
mov
cmp
scas
or
mov
outsb
outsb
dec
push
pop
loopne
ror
fcoms
sti
mov
notl
lock
mov
adc
pusha
pop
into
cmp
or
lcall
cltd
cmp
jb
cmp
ja
xor
dec
mov
sbb
inc
aaa
popa
push
add
push
jg
pop
push
popa
push
pop
dec
je
add
ficompl
imul
add
mov
adc
or
push
inc
adc
pop
insb
loopne
dec
ret
push
push
add
jg
adc
je
mov
mov
imul
lods
adc
mov
cmp
je
or
ja
push
pop
popa
cmp
jo
cltd
shlb
sbb
mov
push
dec
inc
lea
inc
mov
pop
dec
adc
or
movsb
sub
jbe
xor
or
sbb
sbb
cli
add
popa
push
or
adc
inc
cmp
fs
dec
inc
push
inc
test
and
or
or
jp
insb
xor
adc
sbb
cwtl
inc
add
lahf
sub
insb
push
xchg
lock
or
out
mov
lea
xchg
clc
xor
shl
xchg
and
or
dec
fidivl
inc
xorl
sahf
lods
pop
cmp
jne
notb
jge
mov
in
nop
and
clc
je
outsb
filds
sar
push
cmp
jb
or
ja
sub
push
inc
pop
cmp
icebp
push
nop
in
add
push
pop
push
push
push
jl
jo
arpl
dec
jbe
and
inc
test
jmp
loop
jne
mov
into
andb
xchg
sub
mov
cltd
fldl
and
jb
lcall
pop
jae
mov
shl
add
jmp
cwtl
aas
les
dec
je
and
dec
hlt
xor
je
fs
jne
adc
and
lock
test
mov
mov
inc
rorl
call
cmp
dec
lds
push
sub
test
sub
push
push
push
or
inc
call
mov
mov
add
idivb
imul
stc
inc
jg
or
jge
out
out
and
jle
es
sub
dec
mov
and
pop
cmp
jl
pop
jle
pusha
or
nop
fidivrl
test
or
jb
pop
cwtl
aas
jle
push
adc
and
or
je,pn
test
jne
je
scas
add
jb
push
mov
imul
and
movb
into
push
sub
xor
cmp
or
inc
jl
lahf
enter
scas
push
push
and
inc
and
je
insb
mov
mov
jmp
mov
or
jae
add
inc
push
hlt
push
jbe
adc
push
adc
lahf
mov
es
pop
push
mov
cmp
mov
sub
lcall
mov
loope
inc
and
or
xchg
ret
call
dec
shrb
pushw
add
sahf
or
sbb
fwait
aas
out
add
cmp
xchg
shl
cmp
test
dec
mov
push
mov
xor
cli
jbe
inc
xor
js
sub
xor
push
push
push
sub
adcl
cmp
in
pop
push
cmpl
or
cmp
mov
and
inc
fld
std
jge
mov
or
xchg
sbb
pusha
sub
xor
mov
lahf
inc
mov
or
add
inc
arpl
push
inc
and
jae
xchg
imul
out
xchg
or
xchg
add
hlt
adc
adc
sti
mov
mov
jo
or
mov
xor
add
pop
mov
movsb
arpl
or
add
inc
ss
add
movb
and
pop
pop
xor
pusha
test
mov
es
mov
mov
lds
scas
jl
add
cmp
sbb
cmp
stc
inc
sbb
cmp
or
stc
scas
push
or
sub
fdiv
in
jnp
push
repnz
pop
add
hlt
inc
lret
add
jne
xchg
gs
or
mov
outsl
rcrl
fs
jmp
orl
jmp
mov
pusha
sti
pop
or
mov
adc
jbe
add
fwait
jecxz
dec
adc
mov
xchg
lea
cmp
bound
pushl
cmpl
push
test
inc
push
outsb
mov
jo
adc
and
add
shll
sbb
ret
out
xor
mov
lahf
jne
xchg
mov
cwtl
addl
xchg
xchg
rclb
xor
bound
or
lods
rorb
dec
xor
xchg
mov
mov
and
xchg
push
enter
inc
test
inc
xor
and
iret
test
push
pop
or
lret
addb
lcall
inc
mov
sahf
rclb
ret
sbbl
lock
sti
mov
rorb
mov
add
testl
jne
dec
or
in
sub
and
fiadds
jle
add
fadd
out
add
push
ds
hlt
subb
xor
jg
xchg
das
sbb
das
loopne
mov
bound
cmpl
dec
adc
dec
sarb
ljmp
push
xor
dec
dec
mov
fcoms
sbb
lcall
scas
das
xor
cmp
je
mov
cmp
sbb
inc
inc
inc
xchg
adc
cmpl
and
aaa
sbb
or
popf
das
lods
jb
ja
les
imul
add
mov
cmpsl
insb
or
dec
or
jg
inc
fsubr
cmp
jo
test
push
push
pushf
dec
aaa
and
inc
fsubp
insl
xchg
pushf
sub
fs
insb
jne
xor
xor
jbe
jp
mov
or
inc
sbb
xor
jae
sbb
rolb
arpl
bound
jne
adc
mov
or
jne
xor
loop
cmp
cmpsb
or
add
inc
fld1
loop
mov
jge
xor
push
jmp
test
sahf
ja
sbb
xor
jb
jge
cmp
pop
fchs
je
jl
rcr
js
add
add
xor
and
or
jo
cmp
cmpb
je
popa
das
lds
jmp
inc
push
sbb
lahf
popa
in
adc
pop
je
pop
movsl
inc
pop
loope
add
roll
pop
aaa
mov
rorb
jmp
add
rolb
push
jno
rcll
xchg
outsl
inc
sub
pop
jb
mov
orl
xchg
mov
pop
cs
dec
sub
xor
cmp
mov
dec
and
pop
insb
movsl
mov
push
mov
into
mov
push
push
cmp
and
xor
testl
lret
mov
pusha
imul
cmp
xchg
mov
dec
push
push
cmp
jbe
repnz
add
ja
and
fmull
fadds
stos
push
sub
pop
cs
sub
xor
xchg
lret
in
cmp
cmp
jo
cmpsb
loope
mov
adc
nop
pop
mov
mov
shlb
xchg
dec
inc
imul
lahf
cmpsl
push
adc
data16
test
inc
pop
imul
push
clc
mov
es
inc
mov
push
shr
cs
lds
and
push
push
imul
in
mov
sub
data16
jb
mov
push
inc
xchg
clc
xchg
lods
cmp
xchg
mov
or
sbb
jmp
xor
rolb
mov
shrb
test
jbe
cmp
lock
inc
push
je
add
push
pop
sbb
lea
hlt
sbb
xlat
xchg
ficomps
or
popa
daa
add
push
or
cmpl
mov
clc
inc
dec
xor
xchg
or
ret
push
cli
xor
movsl
std
out
jne
sbb
dec
adc
into
imul
cwtl
pop
jo
cmpb
je
xorb
push
movzwl
cmp
sub
fstpt
xor
icebp
jp
rolb
jnp
jne
je
add
mov
mov
xor
sti
xorl
mov
insb
jbe
mov
sub
mov
movsb
sbbb
xchg
mov
push
adc
and
lock
jb
inc
mov
push
cmp
bound
jno
sahf
dec
lods
adcl
lock
and
cmp
adc
jne
mov
jo,pt
sbb
push
insl
xchg
jno
cmp
data16
bound
cmp
mov
bound
adc
cmp
mov
xlat
stos
orb
insb
or
movsl
fsts
jnp
rcl
xlat
mov
xchg
xor
sub
cld
data16
mulb
push
pop
pop
test
mov
or
pushf
pop
fiaddl
bound
roll
adc
or
or
xchg
rclb
ret
push
cwtl
lea
cmp
inc
cli
cmpsl
cmpsb
leave
enter
add
ficoml
hlt
mov
dec
inc
inc
pop
or
rol
mov
sbbl
add
loopne
and
dec
pop
mov
movsb
xorl
imul
sbb
or
sbb
add
pop
popa
adc
pop
or
cmp
scas
dec
cld
aam
add
jge
inc
notb
aaa
jbe
push
arpl
jmp
jbe
sub
push
pop
sbb
adc
or
loop
push
cmpsl
add
cmp
orb
push
pop
mov
mov
das
test
adc
sub
push
and
adc
lcall
sbb
xor
cmp
adc
ret
and
jae
xor
push
xor
pusha
cwtl
pop
dec
dec
cmc
lods
push
push
call
rorb
adc
inc
add
dec
lea
mov
mov
divl
stos
dec
jnp
leave
int
mov
mov
pop
dec
pop
pop
pop
pop
sub
push
inc
cmp
cmovs
and
fiadds
inc
insb
or
or
adc
xor
add
mov
rol
xorl
rsqrtps
cld
add
lods
push
fisubrs
xchg
popa
faddp
sti
pop
mov
andl
sbb
jecxz
push
dec
loop
inc
dec
dec
or
add
in
and
dec
insb
jo
sbb
ja
push
jo
xchg
out
xchg
sbb
push
sbb
imul
mov
adcb
sub
adc
idivb
or
pusha
ljmp
xor
xor
sbb
pop
inc
xchg
mov
add
mov
fimull
xchg
inc
push
or
adc
and
mov
jns
rol
push
dec
les
outsb
adc
lea
push
and
mov
inc
fcomp
push
aam
xchg
push
fsubrs
rorb
cltd
and
clc
pop
add
loopne
loop
inc
adc
mov
jmp
xchg
xchg
dec
dec
leave
or
movb
ljmp
or
and
xchg
loope
adc
sbb
adc
sub
and
incl
and
test
or
dec
or
add
stos
adc
cmp
cmp
adc
insb
adc
pop
mov
inc
inc
mov
arpl
ficoml
sbb
add
lcall
sbb
mov
mov
decb
in
test
mov
pop
mov
in
sbb
pop
es
mov
rclb
cmpsl
jmp
adc
xor
xor
pop
and
and
lcall
adc
pusha
orl
dec
and
pop
or
lea
cmovl
fadds
stos
inc
movsb
sub
jae
dec
sub
shrb
sbb
daa
and
enter
loope
jl
test
stos
jge
sub
pop
leave
or
inc
dec
push
mov
insl
rorb
punpcklwd
mov
inc
mov
mov
add
or
adc
roll
lock
jae
stos
cltd
fcomp
inc
cmp
sbb
jmp
sbb
call
push
rcrl
push
push
jge
inc
cmpsl
scas
les
scas
mov
or
out
mov
or
mov
inc
or
dec
xor
sub
je
push
sbb
shrb
fstpl
stos
ficomps
enter
sbb
push
xor
ss
push
adcl
xchg
add
mov
inc
add
bound
sbb
scas
inc
shlb
imull
popa
add
pop
inc
sub
rcll
hlt
je
cmp
jbe
lds
jbe
pop
and
xchg
mov
xor
add
outsb
jnp
enter
push
push
jp
mov
mov
xor
push
inc
xor
sub
and
neg
mov
insb
sarl
jnp
test
repz
xchg
pop
inc
pop
cltd
or
push
and
mov
das
cmc
jbe
mov
dec
dec
les
xchg
pop
cwtl
loopne
push
dec
or
fcmovnu
xor
adc
cmp
cmp
out
mov
add
sub
xor
add
sub
push
enter
adc
cmp
pushaw
xchg
mov
lcall
mov
testl
and
xchg
popf
push
sub
push
loopne
cmp
pop
mov
or
push
xor
push
sub
pop
mov
add
jg
incl
cmp
jae
push
loope
sub
add
add
jb
jmp
xor
mov
lea
add
push
sub
push
scas
data16
push
movsl
adc
fsts
hlt
nop
sbb
dec
inc
push
cmp
add
pushl
rcrl
xor
push
add
add
add
orb
push
jp
or
testb
out
mov
mov
mov
jne
bound
jbe
push
mov
dec
dec
imul
mov
mov
ror
mov
jge
or
and
or
mov
and
lcall
adc
inc
add
adc
jns
inc
lock
adcl
aam
fstps
rcrl
cmp
cmp
jbe
sub
add
lods
add
sbb
push
push
mov
dec
clc
push
sbb
in
bound
ljmp
push
or
outsb
inc
fidivrl
adc
pushl
ljmp
iret
ficomps
test
ret
pusha
insb
add
icebp
mov
mov
add
movsb
arpl
mov
lcall
xchg
cld
daa
add
and
pop
xchg
jmp
scas
jo
mov
jecxz
cmp
xchg
mov
je
sub
push
lods
sub
or
ffreep
movsl
push
add
repnz
cmp
in
pop
pop
jo
or
repz
xchg
shlb
cmp
xor
or
sbb
push
and
test
push
mov
pop
ret
icebp
or
popf
add
and
cmp
sub
push
js
movsb
xchg
xor
neg
jmp
int3
inc
jl
ret
lock
inc
adcb
ljmp
orl
nop
add
fcomp
add
aas
pushl
rcl
es
ret
jne
jle
mov
sub
add
enter
mov
inc
pop
and
add
adc
add
inc
adc
cmpsl
fiaddl
add
mov
mov
fcmovnb
add
shll
icebp
xchg
pop
xor
or
inc
sbb
sbb
push
jb
mov
sbb
push
dec
fcompl
pop
stos
cmp
sbb
xor
push
int
or
lods
into
int
sarb
cmp
sub
stc
ja
and
xchg
mov
jae
ss
jb
sbb
test
mov
adc
jle
mov
inc
push
mov
push
loope
jl
add
cmpsb
mov
js
and
xadd
cld
push
stos
dec
loop
lea
mov
int
clc
cmp
mov
xchg
xchg
push
daa
fcoml
xchg
inc
jns
lea
adc
jp
fsubr
mov
and
push
mov
xorl
or
and
dec
cld
rorl
cmp
mov
cmpsb
pop
rcrb
clc
or
inc
jmp
rorb
aam
inc
add
pop
insb
push
jne
fwait
sub
leave
cmp
hlt
push
sahf
cmpb
and
stos
fsubrs
sbb
add
xor
push
pop
movsb
xchg
mov
cmp
movsb
mov
jbe
and
mov
gs
ret
mov
add
test
mov
lock
sbb
pop
push
in
push
jbe
lret
daa
xchg
jbe
push
rcr
clc
popa
adc
add
dec
and
loope
mov
test
stos
cmp
adc
int3
cwtl
jnp
sbb
imul
push
test
clc
dec
popf
add
sbb
pop
jg
lea
cmp
inc
dec
mov
je
xor
pop
test
jle
les
xchg
xor
push
cmp
jmp
dec
inc
das
js
adc
idiv
loopne
mov
adc
sbb
push
or
pop
dec
or
loop
mov
adc
jne
aaa
sub
sti
mov
adc
scas
sahf
movsb
push
inc
test
lret
xor
sbb
xor
mov
sarl
add
pushf
add
jg
xor
jg
cmp
jg
shlb
out
jl
cmp
add
arpl
add
aas
loopne
ret
pop
xchg
mov
sbb
les
test
push
pop
sbb
inc
xchg
and
push
loopne
imul
pop
lcall
dec
or
mov
dec
cmp
sbb
sbb
or
mov
pushl
push
jmp
push
push
in
ret
or
gs
or
push
pop
or
and
inc
or
or
inc
clc
dec
fimull
or
sbb
decb
jle
mov
add
cmp
inc
add
pop
sub
cmp
call
ret
imul
sub
mov
dec
adc
mov
mov
pop
popl
movl
add
add
sbb
add
mov
rorb
rclb
pop
adc
test
cmp
arpl
dec
loope
shlb
push
xchg
sub
cli
dec
mov
sbb
inc
add
fadd
dec
push
test
xlat
sub
push
adc
push
jb
add
adc
mov
add
and
adc
dec
das
inc
adc
or
and
dec
sahf
dec
add
cs
sub
mov
lock
mov
sub
mov
and
popf
xchg
xchg
xor
push
insl
test
sbb
jl
hlt
jno
fisttpl
es
dec
addr16
cmp
mov
push
test
daa
add
add
movsb
adc
and
pop
push
or
nop
inc
mov
pop
adc
in
jle
and
jno
sahf
scas
pop
fstl
test
divl
or
push
xor
scas
xchg
xchg
or
or
andl
push
xchg
mov
xchg
iret
mov
mov
adc
lahf
js
xlat
inc
push
mov
push
sub
sbb
pop
ret
jle
aaa
add
aaa
leave
ret
pop
mov
lea
dec
adc
push
jp
or
xlat
or
call
dec
adc
push
leave
imul
mov
ja
cmpsl
sti
push
mov
pop
out
or
inc
push
ret
in
and
and
adc
inc
rcll
mov
xchg
int3
stc
adc
shl
cmp
xbegin
movsb
in
mov
mov
arpl
push
repnz
stos
dec
ret
movsb
push
add
stos
inc
or
mov
aaa
in
inc
rcr
sbb
xchg
subl
sbb
jae
xchg
mov
daa
mov
jo
ret
lds
gs
rolb
mov
cmp
sbb
mov
push
pusha
adc
loopne
stos
add
dec
sub
push
sahf
cltd
aam
les
or
lods
add
jo
inc
test
das
mov
shr
fwait
cmpsl
mov
jecxz
cmp
das
inc
xor
into
add
mov
ds
jmp
push
add
inc
mov
and
inc
inc
out
nop
pushf
xor
inc
xchg
lret
add
pop
or
cs
pop
cmp
je
mov
loop
push
pushw
mov
into
jl
mov
dec
cmp
dec
and
daa
fwait
or
scas
dec
mov
adc
imul
repnz
adc
add
mov
jo
xchg
out
mov
mov
or
sbb
mov
insb
cmc
adc
sub
shll
cmp
sub
enter
lock
test
pop
inc
mov
icebp
es
jae
scas
popf
and
adc
pusha
cmpl
push
and
je
inc
add
out
bnd
and
pop
dec
push
out
sub
je
mov
mov
xchg
cltd
fs
adc
subl
xor
lret
sub
and
outsb
dec
adc
adc
adc
clc
cs
xchg
mov
cmc
jne
je
fdivs
pop
xchg
adc
in
lahf
mov
daa
xor
and
xor
lcall
add
popf
and
into
mov
xor
dec
orl
inc
shl
cmpl
sub
jge
repz
aad
lret
jae
outsb
pop
push
inc
pop
mov
adcl
lret
sub
test
pop
pusha
sbb
inc
incl
sub
incb
xchg
or
bound
sbb
adc
pop
repnz
adc
inc
fdivrl
sahf
leave
add
scas
or
and
and
or
push
push
inc
aaa
and
pushf
push
les
mov
call
mov
sbb
nop
loopne
or
popf
xchg
mov
inc
enter
cmp
je
shlb
push
fsubs
xchg
adc
lods
jle
mov
in
add
add
push
adcl
roll
or
xchg
sub
push
mov
test
adc
jne
push
rolb
lcall
loop
mov
call
fcompl
lds
mov
les
xchg
shlb
add
sub
mov
inc
les
inc
jo
push
pop
loop
cmp
cltd
insb
push
or
shl
adc
add
and
xchg
icebp
outsl
inc
xchg
inc
and
arpl
push
jmp
dec
xor
xor
add
loopne
xor
mov
aam
and
or
cltd
lds
insb
aad
adc
xchg
cmp
in
inc
jns
add
roll
inc
push
cmp
cmp
in
ja
dec
clc
pop
push
lods
sahf
pop
xor
testb
pusha
fistps
or
mov
cmp
jnp
cmp
jno
arpl
pop
insb
shrb
inc
in
cmp
sub
lahf
and
inc
jns
dec
dec
clc
js
fidivl
mov
push
test
cmp
in
sbb
inc
insb
sub
and
cmp
stos
es
mov
dec
stc
sbb
pushf
xchg
sbb
xchg
mov
hlt
hlt
sahf
ret
enter
or
mov
or
lods
dec
xor
outsb
cmp
inc
test
call
adc
sbb
fxtract
jne
and
push
js
fistl
sub
loopne
fnstenv
mov
inc
in
mov
push
sbb
mov
in
add
or
dec
xor
add
xlat
xorb
cld
clc
pushl
pop
or
or
add
pop
or
mov
lcall
iret
inc
xchg
mov
or
xor
sahf
pop
out
inc
movl
pop
and
jmp
dec
hlt
mov
iret
jo
jp
xor
adc
pop
jbe
mov
add
movsb
push
pop
fistpll
enter
iret
ret
cs
inc
inc
mov
xor
add
push
loope
mov
movsb
les
add
add
jne
cli
mov
sahf
jns
es
push
mov
or
add
pop
push
adc
mov
fmulp
add
cmp
cmp
cmpsl
push
cmp
adc
jmp
popf
popa
rorb
push
mov
aam
sub
add
aaa
cmp
add
sub
mov
push
mov
pop
enter
leave
push
movsl
mov
mov
test
push
xchg
inc
les
add
push
pop
cmpsl
jmp
andl
sbb
enter
bound
sbb
mov
inc
insl
leave
pop
sbb
add
add
sti
cmpsb
movsl
and
es
adc
jne
mov
mov
inc
icebp
rorb
xor
fnstcw
jns
mov
add
or
dec
hlt
rcrl
inc
popf
out
adc
clc
sbb
jp
push
sbb
cwtl
lcall
jo
subl
mov
sub
loopne,pt
jp
shll
pop
mov
fimuls
aam
adc
sarb
or
mov
sarl
cmpb
ret
jg
iret
test
adc
inc
addb
jl
jmp
adc
hlt
mov
ret
adc
xor
aas
daa
pushf
ss
or
mov
in
mov
sub
jl
cmp
nop
pop
das
push
xchg
push
ret
movsl
jo
pop
dec
xchg
es
or
ss
inc
stos
mov
and
cmp
mov
push
movl
test
test
dec
jecxz
xor
je
cmpsl
push
inc
and
mov
mov
jb
addr16
je
mov
shlb
cmp
dec
bound
pushf
or
add
pop
mov
and
dec
inc
es
xchg
pop
cmpb
sub
dec
cmp
add
or
test
ret
imul
pop
and
cmp
leave
jp
es
sahf
xor
pop
mov
push
mov
xor
je
push
sub
inc
adc
std
aaa
pop
jp
pxor
aad
rcrl
adc
mov
aaa
test
mov
loopne
es
mov
xor
ss
push
pop
jb
dec
pop
adc
fcompl
insl
js
fiaddl
loopne
add
add
nop
pop
in
into
test
sub
jp
inc
sbb
pop
imul
cld
jnp
mov
xor
or
outsl
inc
pop
loopne
loopne
push
push
mov
add
pushf
loopne
push
sub
mov
pop
push
push
cmpsl
push
jne
add
adc
pop
iret
add
adc
or
inc
and
jmp
sub
adc
cmp
xchg
in
cmpb
in
jl
cmp
test
mov
sbb
decb
enter
sbb
inc
mov
push
sbb
sub
bound
inc
add
inc
call
inc
orb
or
std
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
sbb
or
cmp
sub
adcl
or
sti
mov
xchg
xchg
xchg
add
lods
inc
adc
mov
call
rol
movsb
mov
into
test
in
fcoms
mov
loopne
or
imul
jne
dec
fsubl
push
mov
mov
rcr
mov
rcrl
cmp
movl
xchg
fsubp
test
pop
push
mov
shl
pop
jp
mov
mov
sbb
cmp
jbe
sub
loope
cmp
xchg
pushl
jmp
mov
into
pop
daa
xor
xor
in
cmp
mov
and
fcoml
imul
pop
ret
test
outsb
test
jnp
push
outsb
inc
lea
dec
pop
sti
loopne
sbb
notb
dec
add
mov
mov
adc
xchg
push
xlat
fiadds
fld
mov
mov
shll
dec
andl
push
pop
cmp
movsl
sub
or
sbb
jle
in
lret
push
dec
adc
out
xchg
mov
or
fstp
xor
xchg
cmp
fidivs
fbld
call
xor
fidivs
rcrb
pop
xor
into
nop
addr16
sub
fs
cmp
adc
mov
jmp
out
or
jae
sub
sub
xchg
xchg
mov
int
cmpb
adc
ljmp
mov
add
cmp
lret
push
mov
shl
adc
lahf
cmp
and
jne
inc
inc
mov
xor
jecxz
pop
leave
push
pop
repz
mov
or
mov
xor
lret
enter
ja
mov
fisubrs
jo
lea
push
lahf
sub
imul
mov
add
adc
xchg
cmp
test
pop
outsl
push
cwtl
es
lds
add
or
add
sub
fildl
push
pop
add
test
adc
xor
cmp
addl
add
inc
int3
mov
xchg
pop
push
jmp
pop
int3
adc
inc
adcl
shl
inc
je
mov
mov
aad
push
ror
push
xorl
rep
imul
int
pop
xor
je
fmull
dec
push
xchg
cmp
sub
rolb
mov
dec
pop
add
sub
mov
mov
cmpl
and
inc
lret
jmp
mov
fiaddl
sub
inc
sbb
xor
add
add
jle
out
or
add
xchg
movb
or
shrb
cwtl
or
cmp
add
ret
push
jae
lea
push
or
les
leave
sbb
fstl
xchg
or
sbb
fidivs
push
dec
pop
mov
or
jb
jbe
push
or
call
adc
popa
xor
xlat
roll
push
shll
push
jno
je
cmp
jae
inc
jmp
push
jp
sub
ret
xlat
push
lea
and
ret
push
inc
add
test
xchg
addb
ret
push
rolb
in
clc
addl
dec
addr16
add
jp
add
or
fdivrl
shrb
xchg
ja
and
jl
push
adcl
or
jne
xor
adc
cmp
les
mov
cld
cmp
jb
lods
mov
lret
push
inc
sub
inc
loope
iret
push
hlt
pop
call
push
cwtl
add
jo
push
jl
mov
push
push
mov
ja
push
movsl
orb
cmp
and
outsb
cs
xor
adc
mov
fwait
adc
add
out
or
add
push
dec
cmp
ret
dec
xor
push
lea
lods
aad
je
mov
pop
call
inc
mov
push
cmpb
push
es
jb
cmpsb
or
sbb
add
jp
pop
or
mov
adc
inc
test
push
push
jo
enter
invd
add
pusha
enter
lods
sbb
sub
push
inc
dec
loope
scas
or
add
roll
bnd
pop
and
add
dec
call
mov
jmp
mov
adc
shlb
lea
mov
cmp
or
xor
push
mov
movsl
pop
pop
addl
daa
mov
mov
cmp
fst
adc
nop
mov
add
adc
mov
jmp
addr16
mov
imul
imul
fildl
add
movsb
popa
mov
adc
push
addb
and
mov
xor
or
dec
mov
or
push
lds
sbb
or
or
adc
xchg
inc
mov
lods
sbb
and
add
les
jp
jne
add
dec
movl
mov
add
or
xchg
movsb
iret
xchg
clc
dec
inc
sbb
cmp
pop
or
or
or
adc
clc
mov
int3
xor
add
sub
cld
or
push
mov
or
stos
adc
cmpl
or
pop
or
fldl2e
jbe
cld
cltd
clc
inc
cmpl
pushl
sbb
pusha
sbb
fildl
xor
sti
cmp
pop
ret
rcr
adc
aam
seto
fmuls
mov
cmp
sti
inc
test
or
push
fldl
rclb
xchg
push
jbe
test
lods
call
orb
enter
pop
ficoml
xchg
int
inc
or
fdivrl
shl
ljmp
aas
inc
add
adc
add
xor
cmp
and
dec
jne
mov
push
xchg
xor
out
inc
cmc
dec
xchg
inc
cmp
push
int3
jb
ret
fstps
cmpsb
cmp
mov
sbb
mov
push
adc
mov
cmpsl
pop
sbb
pop
pop
sub
addr16
in
sbbl
adc
mov
cmp
mov
sbbl
mov
cwtl
sub
sahf
popl
and
and
sub
push
mov
pop
mov
imul
and
or
add
stc
js
jge
jo
sbb
arpl
lea
pop
or
rcll
and
test
fisubrs
jg
dec
movsb
jle
jne
insb
sbb
sbb
lret
sahf
xor
add
push
fnstcw
xchg
pop
cmpsl
lods
scas
inc
movsl
jmp
loop
scas
add
lahf
mov
adcl
sub
mov
inc
dec
call
or
subl
mov
or
fdivrs
fidivs
jmp
mov
sub
mov
jl
lods
sub
daa
and
cmp
mov
add
pop
add
mov
or
loopne
jns
mov
iret
js
sbb
dec
ret
stos
cli
or
lret
stc
mov
pusha
jmp
out
mov
xor
xor
sarb
loopne
mov
jl
or
mov
daa
pop
xchg
or
push
inc
cmpsb
xchg
test
mov
add
cmp
cmp
add
xor
xor
scas
stos
ret
aaa
inc
adc
insl
adcb
jo
fmuls
fildl
adc
push
dec
enter
pop
push
test
jge
jbe
ss
jmp
push
js
mov
and
mov
jmp
das
jo
mov
sbb
int
nop
test
int3
cli
mov
cmc
adc
push
cmp
push
add
data16
dec
ret
lods
xor
push
cmp
in
pop
mov
insl
cmp
cmpb
push
pop
inc
cmp
pop
push
ret
push
lock
mov
and
jno
jecxz
and
into
dec
lret
mov
fwait
jne
adc
push
call
sbb
movsl
cmpsl
xor
scas
add
xchg
outsl
add
fstpt
pop
and
fists
inc
adc
sahf
shll
pusha
sbb
add
and
std
imul
or
movsb
popa
and
adc
lods
fdiv
pop
pop
ret
mov
sbb
cmp
cmc
sbb
pop
jmp
xchg
lock
adc
cmpsb
adc
push
pop
imul
sarl
pop
in
and
popl
jo
sub
andl
mov
ss
test
sub
sub
dec
ror
mov
and
jmp
or
add
mov
inc
sahf
inc
pop
pop
or
out
outsb
in
or
loopne
sub
testl
dec
lea
mov
ror
or
in
sbb
mov
adc
push
lds
push
flds
inc
or
jmp
and
and
cmp
inc
mov
divb
and
push
out
cwtl
rcr
gs
adc
movsb
adc
adc
inc
arpl
addr16
lcall
clc
mov
js
fsubs
or
push
lods
bt
sbb
sbb
mov
sbb
js
mov
loopne
add
xor
sahf
scas
nop
adc
add
cld
call
mov
mov
ds
push
cwtl
and
add
es
pusha
pcmpeqb
movb
push
das
out
mov
test
pop
jne
mov
inc
and
daa
fcoml
inc
add
pop
push
incl
cmpsl
ret
fnstcw
mov
pop
jo
push
push
cmp
push
adc
adc
push
add
adc
imul
int
aaa
mov
incb
loope
inc
xchg
in
push
adcb
and
mov
adc
jne
push
sbb
cmpsl
mov
pop
jmp
xor
cld
xchg
push
inc
imul
mov
sub
into
add
inc
arpl
add
out
cmp
jle
push
aaa
pusha
and
movzwl
fildl
orb
cmp
in
mov
ja
sbb
pop
cmp
mov
pop
dec
jo
or
jmp
and
push
inc
xlat
stos
aas
imul
jne
repz
das
enter
inc
cmp
sub
mov
sub
or
pop
dec
insb
mov
or
bound
lock
fsubrs
pop
mov
jo
shll
fsubr
add
sbb
push
cld
aas
or
cmpsl
rolb
sub
inc
jo
pop
mov
add
add
and
cmp
xlat
movsl
xorb
or
xchg
stos
hlt
and
xorl
push
hlt
pop
push
sub
mov
fucomi
lret
jne
aam
ja
outsb
jne
add
add
add
sbb
adc
lds
sub
push
or
xchg
js
cld
sarl
sbb
or
mov
aaa
aam
testb
je
cmp
mov
lret
lea
cmp
or
sbb
jmp
sub
lcall
adc
add
adcb
or
sub
pop
pop
cltd
popa
jb
or
add
je
cmp
jbe
pop
push
clc
cmp
sbb
add
pop
mov
push
add
sub
fdivrl
adc
jae
dec
and
xor
xlat
jb
mov
faddp
mov
mov
int3
jg
aam
xor
jne
jg
add
pop
xchg
xchg
push
enter
jg
andb
addl
mov
jo
and
push
pop
pop
adc
sub
mov
push
sbb
push
push
mov
lcall
icebp
inc
mov
mov
adc
fadd
push
jno
push
and
mov
outsb
inc
or
push
push
push
mov
or
xchg
daa
pop
and
jo
out
pop
push
cmp
addr16
xlat
pop
mov
push
int
jg
dec
std
add
ret
ds
push
rorl
sbb
sbb
dec
stos
add
repnz
dec
roll
add
cmp
or
add
jae
shrb
movsb
or
adcb
mov
bswap
lret
into
jne
icebp
popa
shrl
out
jo
dec
jno
or
jmp
testb
xor
lret
jmp
push
pushf
mov
dec
pop
pop
xor
pop
and
pusha
inc
test
ss
sbb
cmc
shlb
inc
loopne
or
call
lods
inc
cwtl
inc
clc
add
xor
push
or
fstpt
fisubrl
insb
inc
pop
pushf
cmp
push
dec
fs
push
repz
jg
jp
jne
cmp
jne
push
mov
cmp
push
adc
sub
inc
cmp
sbb
idiv
pop
adc
shll
pop
xlat
sti
aaa
les
pop
and
sub
mov
inc
inc
sub
inc
sbb
js
add
pop
add
and
xor
pop
push
push
add
jecxz
mov
or
test
loopne
xchg
inc
jo
pop
out
mov
pop
sbb
fldt
or
xor
cmp
add
jo
loope
cltd
push
and
sbbb
addb
fisttps
sbbb
dec
and
xlat
sbbb
dec
cs
add
dec
ja
mov
sbb
and
or
xorb
outsb
dec
rorl
enter
dec
adc
and
mov
xchg
pop
add
dec
inc
ja
fs
dec
push
cltd
cmp
sub
mov
test
iret
jae
sub
cwtl
adc
xor
push
lock
pop
pusha
jo
bound
add
add
pusha
fnstenv
push
es
pusha
dec
adc
cmp
adc
adc
adc
in
sahf
cmp
ja
lods
add
and
cmp
insl
loopne
rorb
or
ret
decl
mov
gs
adc
xchg
nop
seta
xor
add
gs
mov
jb
fisttpl
sub
or
xor
lock
in
add
mov
das
fistpl
adc
js
lods
shlb
push
or
cmpsl
scas
jl
emms
bound
add
adc
lods
cmp
or
flds
jbe
jns
jne
sub
test
mov
cmp
subl
sbb
xchg
inc
push
or
mov
js
insb
mov
adc
cmp
mov
xchg
into
xorb
cmp
xor
andl
lods
pop
in
jle
popa
ret
inc
dec
dec
pop
dec
or
adc
jne
adcb
xchg
cmp
in
stos
fs
xor
loope
push
xchg
in
jo
ss
stos
fiaddl
push
and
cmpsl
or
mov
mov
adc
cmp
je
je
rcll
call
pop
cmp
or
subb
sub
xor
push
ja
jbe
adc
mov
push
ds
jae
mov
movsb
adc
pushf
pop
call
test
pop
adc
adc
inc
orl
sti
enter
outsb
xor
repz
pop
mov
shll
xor
imul
jo
ret
pop
dec
scas
xchg
ss
inc
sub
nop
cltd
lds
sbbl
sbb
daa
sbb
ret
fisttpl
or
ficoml
bound
mov
add
lds
mov
fstl
out
js
ret
dec
jnp
mov
adc
and
bound
out
jb
mov
mov
add
cmpsl
dec
add
inc
mov
pop
lods
scas
pop
inc
sub
dec
mov
xor
subb
pop
mov
icebp
sbb
fmuls
or
jne
sbb
js
les
mov
loopne
inc
test
mov
dec
movsb
jbe
fs
outsb
bound
inc
mov
add
mov
inc
push
cmp
in
pop
clc
mov
lods
push
das
in
lahf
sbb
jo
xorl
fdivrl
outsb
loopne
sbb
add
fiadds
ja
cmp
sub
data16
aam
sarb
or
push
push
cmp
push
jp
push
xor
push
push
mov
push
inc
cmp
je
inc
shlb
aaa
addl
fcompp
in
push
mov
lock
sub
jmp
sbb
dec
push
dec
adc
loopne
sbb
mov
movsl
or
sti
repz
inc
or
pop
je
jmp
or
pop
test
ja
dec
sub
mov
jmp
jns
push
popa
mov
sbb
mov
dec
sbb
fwait
cmp
and
cli
jg
nop
loop
ret
cmp
test
sbb
push
xor
icebp
jnp
mov
bound
dec
mov
pop
or
push
andl
or
sub
inc
pushf
es
cmp
fdivl
dec
inc
pop
pop
and
pop
mov
gs
add
icebp
and
push
push
and
pop
ret
inc
iret
and
jmp
inc
or
and
jo
sub
js
cwtl
inc
mov
dec
push
loope
dec
xchg
into
mov
repz
xor
popa
jbe
outsl
push
push
lea
jmp
sub
push
add
xchg
ss
jb
cmp
jo
xchg
sub
mov
cmp
push
push
push
test
push
sub
adc
xor
inc
jmp
cmpsl
and
add
cltd
adc
repz
insl
les
mov
jae
mov
and
cmp
adc
sbb
test
and
sarb
xor
dec
testl
je
sbb
mov
jmp
adc
dec
mov
and
push
inc
xor
mov
sbb
adc
shll
repz
adc
jle
add
mov
rcl
je
movl
enter
test
adc
insb
add
inc
mov
mov
test
rcrb
js
or
repz
add
mov
sub
jne
inc
in
dec
and
xchg
push
push
mov
in
push
xchg
or
aas
xor
popa
cmpsl
xchg
or
jne
ss
inc
pop
mov
and
clc
jg
fwait
dec
adc
dec
test
xchg
push
add
movd
movaps
push
clc
out
mov
jae
xor
jle
xor
cli
shrb
test
test
lcall
and
or
clc
fldt
adc
fstl
jnp
mov
fwait
xor
stos
cld
aam
push
jg
add
adc
push
add
adc
fisubrs
add
outsb
ret
mov
mov
xlat
xor
adc
addps
int
add
fdivrp
fcmovb
sbb
sbb
inc
mov
not
setge
and
insl
pusha
daa
insl
clc
ja
icebp
lret
lods
pop
xchg
mov
and
or
inc
xchg
xor
xor
push
inc
mov
incl
loopne
xor
aam
adc
test
and
push
ret
jge
mov
jg
sub
push
ret
jg
pop
sub
in
not
or
and
or
jb
and
add
insb
addr16
sahf
adc
push
enter
daa
mov
sbb
mov
push
test
bound
out
sbb
sbb
xchg
dec
push
stos
push
nop
mov
sbb
cmp
mov
inc
inc
sub
sbbb
jp
lret
outsl
decl
jmp
mov
mov
cmp
jne
push
test
pusha
sub
mov
mov
sub
xchg
sub
push
xor
loopne
scas
out
cmp
shrb
mov
cmp
enter
ret
mov
push
fdivrs
ss
pop
pop
pop
or
popf
xchg
loope
clc
push
inc
ds
dec
cli
add
cli
and
ljmp
jp
push
inc
hlt
fcomi
arpl
rcl
sub
outsl
in
pop
xchg
jmp
push
leave
adc
aam
sarb
push
pop
add
std
fs
lds
inc
dec
mov
popa
fisttpll
lods
mov
aam
mov
or
adc
jne
inc
cmp
dec
xor
loopne
dec
adc
inc
inc
inc
mov
push
push
adc
add
nop
in
push
mov
das
clc
repnz
mov
sub
sbb
or
pop
inc
inc
cmp
cmp
movsb
pushf
sti
push
adc
mov
xchg
es
lret
arpl
dec
adc
mov
add
push
push
lret
fcmovb
pop
popa
aam
adc
or
add
push
shlb
inc
sub
or
mov
out
pop
cs
and
push
or
inc
lea
push
inc
hlt
cmp
xor
mov
cld
pop
add
enter
sbb
sub
hlt
mov
loope
shlb
dec
leave
sbb
icebp
shll
and
or
inc
pop
cmp
mov
mov
mov
loop
cli
imul
inc
cmp
aam
lret
jne
loope
pop
mov
imul
jg
jmp
jnp
inc
das
pusha
and
mov
add
test
or
ss
js
das
je
add
jmp
pop
call
add
push
sbbl
add
out
divb
pop
insl
loopne
in
sub
or
sbb
cld
subl
scas
rcr
lods
stos
hlt
daa
mov
bound
jge
lahf
out
xor
and
decb
pop
repnz
push
scas
jbe
inc
xor
xchg
fiaddl
pop
pop
jbe
inc
push
pop
imul
stos
mov
enter
pop
mov
pop
rolb
jmp
adc
clc
fmuls
fnstenv
pop
inc
rcll
test
or
iret
data16
jne
idivb
xor
rcrb
cs
nopl
mov
sub
cmpsb
xchg
push
je
or
orb
add
add
mov
in
lds
ds
mov
add
xor
pop
add
je
inc
bound
inc
les
sub
push
sub
and
xor
daa
test
rclb
sub
jo
ret
sub
hlt
and
fldcw
jl
jg
mov
inc
xchg
jbe
push
and
test
and
or
int3
xchg
or
cmp
loopne
push
xor
pop
div
enter
xorb
inc
imul
icebp
and
push
cmpsb
cmpsl
pusha
test
and
test
add
cmp
adc
fidivs
sub
push
inc
pop
sub
or
cmc
outsb
rcll
rcr
add
rolb
jns
fcmovnu
pop
pop
jge
add
push
or
xor
aad
fcoms
je
fwait
nop
or
std
jle
push
addr16
out
aad
push
popf
add
incl
aas
movsb
js
aam
ret
adc
xchg
push
insl
insl
add
adc
jb
mov
mov
lfs
lret
movb
shld
cmp
push
lahf
fistl
push
lds
rep
xor
xlat
and
inc
or
cmc
xchg
int
inc
add
inc
push
add
xorb
fadds
jmp
jl
pop
aam
adc
add
dec
loopne
sub
ss
push
es
rolb
sbb
xorb
mov
sbb
cmp
sbb
fstl
pop
push
fadd
js
sbb
in
fsubrl
loopne
out
add
cmp
jb
xor
bound
sbb
ss
jp
fcmovu
sbb
mov
sub
xchg
pop
add
push
cmpsb
faddl
mov
lahf
push
mov
pop
push
mov
add
add
sub
sbb
in
push
cmp
shrb
xlat
jmp
push
lea
lea
cmp
sbb
pop
sbb
pop
fcmovnu
lods
in
ds
cli
push
jecxz
xchg
outsl
gs
or
push
add
jge
mov
add
pop
jmp
je
hlt
movsb
mov
ds
cmp
dec
scas
scas
rcrb
lods
mov
testb
inc
mov
inc
outsl
mov
sar
xchg
sub
dec
jmp
aaa
enter
je
inc
scas
mov
or
ds
jbe
test
push
aas
push
sbb
push
jmp
out
add
jbe
mov
adc
adc
aad
push
cmp
jno
lock
ret
cwtl
cmp
push
dec
push
xor
inc
cmp
and
mov
mov
movl
cmp
adc
pop
add
add
lock
pop
pop
movsl
cwtl
in
add
pop
dec
in
fiaddl
jecxz
inc
or
inc
out
sbb
ret
sub
add
lds
jl
push
inc
pop
lea
pop
lahf
inc
mov
push
adc
scas
test
add
cmp
sbb
push
ljmp
mov
cs
sbb
mov
in
push
jno
js
call
bound
sub
jnp
das
jo
pop
push
nop
outsl
movsl
push
xor
dec
push
and
push
mov
xor
xchg
xor
pop
dec
pop
mull
cmpsl
cltd
mov
mov
nop
or
mov
or
add
pop
sti
or
pushf
pop
push
inc
mov
test
dec
enter
inc
mov
mov
cmpsl
and
and
or
add
test
lock
sub
sahf
fcoml
stos
jns
xorl
fadd
shlb
iret
hlt
out
cs
push
or
adc
jl
adc
or
pop
popa
dec
mov
out
in
push
nop
push
idivl
adc
in
enter
popf
int
cwtl
dec
iret
sub
out
adc
push
pop
call
or
je
dec
xor
sub
aas
push
or
bound
ret
lea
dec
jge
push
adc
imul
add
dec
add
out
cmp
add
mov
mov
in
sub
icebp
cmp
jle
seto
lcall
enter
add
mov
xchg
pop
push
pop
dec
push
jns
jb
or
sbb
inc
sahf
or
dec
or
sub
or
sbb
inc
pop
or
pop
lcall
or
lret
add
lcall
enter
cwtl
push
push
and
and
ja
push
movq
adc
pusha
adc
sbb
pusha
fwait
sub
adc
mov
or
adc
repnz
push
out
adc
repnz
in
add
adc
adc
fmulp
add
cmp
cmp
push
push
mov
pop
xor
out
rcrb
sbb
sbb
sbb
cmp
lret
call
repnz
sbb
push
sbb
cmpsb
sbb
je
pop
sbb
inc
sahf
push
lods
add
cmp
sbb
push
inc
incl
jns
push
pop
pop
jne
add
add
test
hlt
sub
cmp
call
sbb
testb
cmp
xchg
test
fidivrl
pop
stos
mov
cmp
je
lcall
push
in
repnz
lea
xor
cmp
mov
out
fwait
out
popa
sbb
out
in
loopne
pop
add
call
and
nop
adc
cmp
jmp
adcl
sbb
sub
in
in
ja
rolb
cltd
mov
inc
push
nop
in
sahf
out
out
in
in
jge
sbb
xorl
pop
lock
xor
icebp
and
enter
repnz
pop
push
out
std
repz
dec
in
std
hlt
hlt
rorl
pusha
testb
cmc
inc
inc
sahf
xchg
add
testb
sbb
pop
idivl
insb
nop
cmpsb
repnz
clc
clc
clc
cltd
add
pop
adc
inc
stc
push
nop
out
lock
cli
cli
iret
cmp
push
inc
sti
sbb
stos
cld
leave
sbb
outsl
cld
push
bsf
or
ss
xor
repnz
xchg
sbb
adc
push
lcall
and
or
add
jmp
in
stos
cmpsl
les
movsb
or
shll
ret
sbb
jecxz
inc
fsubp
add
sti
in
in
pop
adc
mov
stc
daa
xchg
sti
mov
or
out
out
cltd
push
jno
sbb
call
xchg
mov
or
jmp
jmp
jmp
sbbb
in
repnz
push
cmp
cli
out
out
scas
xchg
add
out
cltd
push
lock
cli
push
cli
dec
in
rcrl
psubusb
repz
sar
jb
pop
push
stc
jb
imul
fstpl
pusha
pop
xchg
cmpsb
div
negl
fwait
cmp
sbb
xor
add
stc
xor
xchg
out
clc
cmp
lret
sti
sti
and
sbbb
in
mov
or
xchg
pusha
sbb
jge
dec
and
adc
cld
sub
xor
pusha
loop
mov
repnz
mul
pop
shl
les
jg
push
push
cmp
out
imul
cltd
out
mov
inc
repnz
mull
testl
imul
ljmp
negb
mov
adc
mov
insb
out
out
lret
and
sub
inc
imulb
xchg
inc
pop
pop
and
add
lret
and
pop
pop
lcall
mov
cmc
inc
pop
dec
pop
jae
pop
dec
repz
div
jns
push
mov
add
add
int3
inc
clc
clc
jecxz
in
adc
popa
cmp
sub
cli
cli
jno
inc
pop
lret
xchg
hlt
pop
jne
and
sbb
das
pushw
data16
hlt
cmp
idivl
jo
sti
inc
add
clc
jne
adc
adc
loope
repz
and
mov
repz
inc
or
test
mov
inc
repz
push
jno
andl
xchg
xchg
mov
bnd
imul
popf
dec
push
mov
xchg
repnz
and
sbb
dec
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
ss
inc
cli
ret
cld
jne
mov
push
sub
out
cmp
mov
ret
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
ljmp
dec
pop
add
insb
call
hlt
and
pop
inc
add
repz
fxch
sub
push
bndstx
fwait
int
mov
lods
sub
lcall
and
int
repz
mov
repnz
and
iret
repz
and
sub
dec
jo
iret
sarl
loopne
mov
loopne
cld
sub
pop
add
roll
insb
mov
add
dec
jnp
mov
and
add
cmp
pop
mov
mov
add
addl
ret
lea
adc
mov
in
and
lcall
inc
je
int
lret
cmp
nop
push
sub
adc
std
cld
xchg
xor
mov
xchg
stos
mov
mov
push
shl
or
adc
shl
mov
sbb
sub
jge
push
xchg
mov
xlat
outsl
test
xchg
xor
mov
pop
or
mov
dec
mov
andl
or
xor
test
fdivs
dec
arpl
fistps
cmp
fadds
ja
and
add
mov
push
dec
mov
inc
mov
and
add
fisubl
inc
jnp
xorl
shll
decl
or
imul
push
mov
cmp
loope
cmp
addb
dec
or
xor
fsts
cmpsl
pusha
xor
push
add
lahf
outsb
xor
testb
adc
sbb
xor
rep
mov
dec
mov
icebp
xchg
ljmp
add
lea
or
lods
jge
out
xchg
leave
test
add
xchg
cli
dec
in
in
mov
add
rcll
and
xchg
mov
xor
ficoms
mov
or
add
add
mov
and
sbb
test
sbb
mov
pop
ja
add
adc
pop
inc
inc
inc
inc
aam
add
push
sub
enter
jbe
mov
xchg
imul
jl
inc
push
mov
iret
hlt
mov
jno
nop
sbb
mov
adc
dec
clc
addr16
sbb
jne
cmpsb
or
or
roll
ficompl
or
sti
roll
sub
inc
inc
pop
adc
fmulp
cmp
enter
add
jae
test
pop
jmp
adc
sbb
xor
cmp
mov
cmp
enterw
sub
cli
add
mov
mov
or
jl
or
lods
push
test
or
jle
mov
adcl
into
pop
jo
mov
push
mov
xchg
mov
int
xor
mov
movl
add
sub
nop
sbbb
mov
xchg
lods
adc
cmp
sub
fmulp
push
xchg
push
jno
xor
pop
sub
push
nop
test
and
repnz
or
adc
dec
add
popa
rcr
jne
inc
lds
cmpsb
loopne
jb
xor
or
negb
mov
mov
pusha
fidivs
lret
sub
cmp
cs
push
sbb
cmp
jae
add
in
push
movsb
hlt
adc
jp
sbb
jmp
push
dec
xchg
inc
popa
aam
fldl
mov
aam
pop
jp
scas
pop
neg
jge
or
mov
sbb
mov
nop
xchg
fiadds
or
mulb
movsl
sub
jbe
inc
mulb
add
clc
push
movsl
jo
mov
and
pop
sub
stos
test
mov
sub
in
rolb
sbb
enter
mov
cmp
push
jmp
movsb
pop
xchg
pop
push
push
xor
push
into
and
int
cmp
push
les
or
cmp
pop
or
push
cmp
jne
jnp
pop
js
sbb
pop
push
adc
add
int
sti
scas
in
push
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
or
addl
push
mov
aas
repz
adc
into
repz
jmp
std
std
jmp
cld
jp
enter
fildl
mov
inc
inc
push
mov
add
aad
test
inc
sbb
pusha
lds
fstpl
lahf
repz
pop
jle
pop
adc
add
leave
sbb
jne
xchg
or
pop
inc
pusha
jns
aad
stos
jge
cltd
std
or
or
push
push
test
adc
add
adc
jb
outsl
pop
or
sahf
call
cmp
xchg
inc
lcall
daa
push
clc
fwait
or
sbb
fimull
rorb
inc
testb
jne
jo
test
xor
add
push
jae
jb
insb
cmp
adc
adc
mov
ja
stc
aad
hlt
push
jmp
rcrl
lock
add
rcll
jne
addl
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
or
out
dec
mov
test
mov
fisubrs
ja
mov
add
push
add
or
in
mov
sbb
ss
das
dec
cmp
mov
and
hlt
or
add
push
pop
hlt
jae
ret
jmp
lret
lea
sbb
in
xchg
call
fs
and
dec
stc
adcb
imul
stos
add
testb
or
sahf
mov
xchg
out
sub
or
test
cmc
rolb
adc
cld
jmp
adc
add
dec
cmpsb
ds
push
jecxz
cmp
sbb
dec
dec
mov
dec
inc
xor
das
int3
cltd
cmp
add
push
jg
cmc
js
lret
add
cmp
jbe
sbb
roll
cmp
fimull
pop
and
cmovs
invd
mov
scas
push
mov
sbb
add
or
repz
cmp
jmp
mov
add
ss
pop
add
xor
fs
stos
out
out
cmp
movsb
push
enter
mov
mov
or
scas
cmp
mov
mov
add
movsl
push
dec
add
movl
cmpsb
inc
add
add
jnp
push
mov
cmp
xor
sub
out
and
adc
mov
repz
xrelease
call
repz
lock
hlt
clc
clc
mov
xchg
lea
fdivrs
add
add
fldcw
insb
push
cmpl
and
sub
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
or
repnz
cld
out
lock
fsts
xchg
into
lea
subl
nop
push
push
int
in
mov
jl
mov
mov
mov
inc
push
jns
adc
push
add
nop
dec
dec
addr16
mov
cmp
add
push
je
repz
mov
or
push
mov
repz
cmp
aam
cmp
sbb
repz
sbb
sbb
adc
repz
or
or
addr16
enter
inc
add
fiadds
sbb
push
push
add
pop
mov
adc
ja
xor
bnd
push
sbb
jg
xor
mov
mov
incl
inc
decl
jne,pn
sub
add
out
mov
xor
fistpll
jbe
push
cltd
pop
idiv
add
mov
pusha
or
bound
jle
or
adc
fisttps
cmp
enter
cmp
jae
dec
mov
cmp
mov
jae
sub
lea
adc
dec
orl
add
sub
shrb
sbb
mov
ds
jg
add
test
dec
adc
push
lret
cmp
test
dec
outsl
pop
sbb
sbb
dec
dec
cmp
in
mov
cmp
jecxz
mov
jne
xchg
insb
adc
and
lods
xor
mov
xor
pop
decb
push
int
xor
push
push
imul
sbb
movb
inc
add
loop
xchg
mov
or
push
cmp
mov
test
push
pop
add
add
hlt
mov
test
xor
adc
ja
rcll
cmc
pop
jo
sbb
sbb
lret
jmp
fadds
sarl
add
ja
insl
or
jg
xor
push
cltd
pop
idiv
cmp
inc
es
xor
xchg
ljmp
cs
inc
or
sbb
cmp
or
cmp
imul
or
fs
lods
pop
sub
jmp
jl
mov
sbb
shll
or
or
pop
insb
sub
sbb
sbb
adc
sbb
add
cs
push
sub
inc
adc
inc
jns
push
pop
pop
dec
adc
cmp
add
mov
sahf
mov
pop
sti
cmp
xchg
mov
sar
fadd
inc
jecxz
les
adc
jae
sbb
add
push
or
jbe
mov
push
fdivp
daa
adc
xor
mov
enter
jg
insl
cmp
orb
jle
sti
ljmp
mov
divl
mov
mov
ja
int3
dec
jo
mov
je
adc
push
jne
mov
data16
test
push
adc
push
lahf
pop
dec
shl
loope
inc
or
xor
and
push
je
or
cmp
push
aaa
orl
sub
int
xchg
or
stc
pop
push
adc
insl
stos
add
jg
xchg
inc
jmp
push
pushf
inc
mov
push
cmp
mov
pop
adc
sbb
inc
and
mov
mov
je
mov
push
movsb
popf
sub
cmpl
sub
and
jge
cmpsl
insl
add
or
push
lock
mov
add
push
repz
pushf
ds
adc
adc
mov
jns
or
out
call
pop
xchg
or
outsl
insb
or
in
dec
pusha
fs
ljmp
inc
popa
movsl
xchg
rorb
jg
jp
and
push
pop
and
aaa
cld
inc
add
cmp
hlt
dec
js
loop
cmpsb
cmp
into
adc
scas
dec
adc
adc
mov
mov
sarb
decl
inc
jg
jbe
ja
gs
sbb
jo
sub
clc
mov
clc
mov
inc
inc
cmp
je
push
test
xchg
mov
lods
popf
dec
orb
adc
add
mov
fidivrl
dec
je
and
adc
xor
mov
sbb
mov
mov
fs
mov
incl
pushl
pusha
push
mov
push
inc
sbb
test
xor
lret
cmp
or
insl
xor
jnp
outsb
mov
push
add
dec
arpl
lods
das
push
inc
daa
add
fistl
movl
or
outsl
mov
xchg
mov
addr16
test
pop
js
xchg
adc
test
nop
orl
daa
and
inc
lock
xor
add
test
add
shll
xor
sub
mov
add
push
pop
inc
pusha
in
es
shll
pop
add
or
cli
frstor
fistpl
dec
movsb
jb
hlt
rcl
xor
js
add
inc
sbb
mov
adc
adc
inc
ror
adc
and
add
shlb
arpl
jo
push
lea
bound
jne
jmp
dec
or
sub
fs
jmp
das
cmp
push
dec
sbb
cmc
mov
push
nop
jns
sub
push
and
xor
or
push
sbb
test
ret
movsb
lds
cmp
es
mov
mov
movsb
out
sbb
in
or
xchg
arpl
mov
jp
lahf
jge
outsb
jns
and
je
push
mov
stos
add
push
cld
cmp
inc
pop
or
add
cmp
xchg
lcall
push
and
and
mov
idivb
cmp
or
inc
or
inc
inc
call
push
lcall
jge
test
outsl
inc
fs
or
mov
insl
and
sub
cltd
pop
stos
call
jmp
dec
xor
xchg
mov
pop
mov
jmp
ja
inc
jmp
rcrb
xor
pop
cli
mov
sub
sbbl
pmulhuw
adc
and
test
add
pop
enter
jp
ds
mov
fstps
add
pop
fldz
mov
ja
divl
add
push
sub
in
push
and
inc
cmc
test
or
fldenv
in
or
insl
adc
arpl
fmuls
push
cmp
pop
or
adc
pushf
mov
mov
mov
push
sub
adc
neg
mov
loopne
ljmp
dec
cli
or
add
jmp
push
adc
lcall
jecxz
loopne
jb
dec
fidivl
int
pop
fs
mov
dec
js
add
pop
inc
lock
sub
and
or
inc
out
add
adc
xor
mov
or
add
adc
jp
test
add
or
push
push
mov
lods
movups
popf
mov
test
push
adc
dec
pop
push
xchg
xchg
and
add
and
push
pop
sbb
cmp
fwait
mov
xchg
jb
test
test
and
lret
test
jmp
sub
out
neg
xrelease
pop
jle
xchg
sbbb
bound
adc
xchg
sub
or
jae
fs
jae
subl
push
clc
pop
adc
fdivl
push
jecxz
sub
push
sbb
dec
add
and
and
sbb
gs
push
lret
adc
add
enter
sarl
mov
shlb
push
clc
das
imul
jne
testb
dec
xor
fwait
dec
fs
xor
push
adc
std
mov
icebp
lea
push
adc
push
pop
dec
ss
test
sbb
jbe
add
enter
ffree
das
jl
dec
xchg
aam
cwtl
mov
movsb
push
inc
scas
and
inc
add
push
xor
imul
push
adc
sbb
xchg
or
ficoml
push
sub
or
shlb
push
lods
adc
das
add
mov
add
or
dec
jno
inc
div
jae
lods
cltd
addl
out
pop
ror
imul
ss
sub
adc
jge
sbb
ds
in
dec
mov
daa
and
cmpsb
mov
add
dec
cwtl
or
sub
loopne
adc
add
call
pop
jmp
cmpsb
or
cld
std
add
add
add
push
clc
add
or
jns
cmc
add
sbb
clc
sbb
jo
inc
je
mov
addb
xlat
cmc
push
fcoml
rcrb
loopne
popf
inc
add
sbb
xor
lods
sbb
loopne
mov
pushf
imul
push
add
inc
cmpsl
pushf
pop
xor
imul
stc
push
cmpb
push
mov
xor
incb
orb
jnp
fcmovbe
pop
sub
dec
add
iret
xor
imul
rolb
testb
aam
mov
call
add
xor
repnz
mov
mov
pop
ds
dec
xchg
push
inc
mov
add
outsb
adc
ret
sbb
jnp
inc
jg
lret
call
jnp
and
in
inc
add
xor
dec
lods
jo
jmp
loope
cmc
sub
dec
sub
fdivr
push
xchg
and
aas
or
inc
popa
popf
sysexit
and
or
and
sbb
ficompl
push
jmp
iret
and
mov
sub
orl
add
or
call
or
push
lods
lret
test
insb
aas
push
pop
sub
xchg
fnsave
inc
lods
xor
adc
xchg
xchg
sub
sub
push
or
xchg
inc
sbb
sbb
adc
popl
paddsb
out
mov
pop
test
outsl
or
add
gs
jbe
cmp
xor
ret
sub
cmp
out
nop
pop
fisubs
adc
cmp
sarl
leave
xchg
push
vmovaps
shrl
jl
push
and
ficoms
outsb
pop
subb
inc
push
and
pop
xor
push
je
mov
or
int3
imul
add
adc
or
nop
cmp
xchg
repz
popl
sub
inc
inc
cmc
mulb
xor
shl
or
stos
add
xchg
jnp
mov
inc
dec
jne
iret
cmp
xchg
and
or
sbb
xor
mov
ss
call
push
rcr
mov
outsl
add
add
or
out
push
movb
and
lea
sbb
test
add
dec
xchg
or
jmp
inc
mov
or
fdivr
dec
push
ja
ficoml
push
push
in
testl
add
push
xlat
push
adc
sub
in
sbb
xchg
dec
push
sbb
jmp
gs
push
mov
and
xchg
cmp
jl
add
aam
or
mov
std
adc
dec
mov
mov
mov
add
lea
sub
sub
pushl
ret
jae
pop
add
and
jmp
add
dec
push
pop
pop
ret
and
add
or
mov
mov
sbb
insb
add
rolb
not
and
stos
push
or
or
inc
repnz
cmpsl
ss
inc
jns
or
dec
pop
mov
dec
mov
insb
push
cld
add
dec
mov
lcall
mov
scas
mov
orb
cmpsb
push
sub
dec
out
cmp
xchg
inc
lahf
add
jne
fsubr
fistpl
cld
stos
inc
add
jmp
bound
and
loope
add
dec
xor
mov
xor
insl
lods
pusha
dec
sub
mov
mov
sbb
nop
xchg
repz
cmp
or
movsl
fnsave
push
jmp
aad
movl
push
and
xor
xor
xor
daa
pop
dec
les
movsl
add
setne
inc
rolb
xor
lea
mov
and
bound
pop
leave
inc
add
stc
mov
imul
add
add
into
sub
setne
jmp
loopne
adc
or
mov
inc
cmp
ljmp
inc
cmp
outsb
and
cmp
loopne
xorb
push
sub
or
mov
loope
push
mov
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
sarl
inc
ja
loope
mov
add
idivb
mov
xor
jo
mov
loopne
mov
inc
dec
jne
push
adc
clc
cmp
or
hlt
lret
add
jnp
and
test
xor
adc
loope
dec
add
sub
loopne
adc
add
mov
and
mov
sub
fs
mov
sbbb
jmp
inc
sbb
inc
cmp
loopne
mov
push
jns
test
test
aas
cmp
pop
cmp
cltd
inc
cmpsb
cmp
inc
adc
push
push
rolb
lock
cltd
dec
pop
sbb
repnz
pusha
xor
and
fs
out
mov
pop
int3
push
cmp
adc
jle
sbb
lret
pop
sub
jmp
xor
add
mov
mov
add
sbb
rolb
out
arpl
xchg
aad
pop
add
sbb
cmpsb
xor
xor
mov
and
mov
mov
add
push
clc
pop
cmp
cld
imul
pop
adc
push
bswap
ret
mov
or
push
movsb
adc
mov
adcb
pushl
into
int3
adc
sbb
das
adc
data16
mov
sbb
sub
ret
ss
test
subb
and
imul
rorb
push
mov
pop
cmp
push
pop
push
cwtl
sub
inc
jbe
js
aaa
out
jle
or
into
cmpl
fs
mov
js
pop
cmp
sahf
inc
add
xchg
or
decl
faddl
mov
add
dec
push
in
fstl
xchg
notb
mov
mov
mov
mov
lea
jnp
mov
aaa
xorl
push
mov
pop
ret
add
adc
movsl
sub
or
adc
sub
sub
into
dec
xor
inc
adc
aam
sub
dec
push
add
push
adc
push
rcrb
pop
add
and
enter
test
dec
push
inc
mov
lock
rolb
insb
loope
fstps
xor
clc
push
add
ds
std
jne
lret
add
cmp
rcll
movsb
rcr
int
les
cmp
jo
mov
mov
pop
fnstsw
and
push
cmp
call
roll
jmp
mov
push
jle
pop
add
xchg
aaa
sbb
rolb
ss
ljmp
cld
cs
out
popf
out
call
scas
sbb
cwtl
sub
rcll
mov
push
push
push
push
mov
pop
or
aas
push
inc
push
clc
sub
shlb
adc
dec
or
pop
call
repnz
adc
and
sbb
int3
xchg
lret
mov
mov
push
jo
cmp
lods
and
inc
mov
cmp
push
sbb
movsb
xchg
dec
subb
and
jbe
push
push
mov
jg
nop
jecxz
arpl
mov
sbb
add
jge
xor
sub
dec
cmp
add
mov
dec
push
insb
cmpsl
cltd
jge
xor
push
push
movsb
cwtl
add
pushf
xchg
mov
jns
dec
mov
mov
jmp
xor
not
les
dec
loopne
push
cltd
mov
adc
inc
pusha
pop
inc
nop
arpl
lods
sahf
and
sbb
dec
adcl
inc
loop
sbb
inc
dec
pop
cmp
xchg
and
jle
cwtl
data16
sahf
push
ud0
xchg
inc
jmp
ds
add
mov
mov
pop
cmp
je
jle
or
jne
inc
cmp
mov
cmp
mov
shll
addl
test
sbb
add
xor
sub
in
jbe
mov
cwtl
sarl
cmpl
leave
test
push
adc
pushf
add
and
daa
test
popf
dec
cmpsl
mov
pop
inc
dec
push
cmp
xchg
mov
subb
push
mov
add
mov
mov
dec
xchg
inc
inc
mov
gs
cwtl
mov
xor
fldenv
mov
jo
jb
push
xchg
mov
rorl
xor
mov
pop
das
jo
add
add
pop
mov
hlt
jp
inc
sub
andl
in
dec
lea
test
roll
rolb
dec
cmp
sbb
or
fmul
lret
xchg
fcomps
int3
lretw
lret
lret
out
mov
popf
enter
jmp
lods
mov
push
outsl
and
mov
add
rorl
pop
fidivrl
dec
cld
adc
jecxz
test
sub
aam
inc
add
aam
mov
cmc
loopne
cmp
fcomps
sub
mov
xchg
inc
mov
sub
mov
pop
jmp
jge
inc
cld
and
push
repnz
fadds
sbb
adc
add
insb
or
xchg
mov
es
mov
test
test
lcall
fs
jns
cmp
arpl
cwtl
arpl
or
dec
jl
js
pop
add
insl
test
iret
repz
out
push
loopne
ror
add
repz
mov
push
jmp
mov
mov
and
movsb
fs
divl
nop
mov
fadds
add
enter
mov
jnp
inc
mov
or
push
fs
mov
repz
jl
xchg
gs
ret
add
pop
inc
mov
adcb
fsubl
xchg
dec
or
jecxz
mov
test
jo
adc
cmp
cmp
arpl
xchg
mov
push
fstpl
pusha
jmp
iret
js
or
add
or
jle
cld
ret
or
call
negb
mov
pusha
rorl
jge
inc
mov
pop
xor
fistps
movsb
popa
test
cmp
ljmp
rcrl
mov
add
and
xor
adc
adc
repnz
add
loopne
popa
inc
or
and
push
fildll
idivl
aas
lods
push
pop
inc
and
cmpsb
hlt
fdiv
mov
jno
mov
xlat
push
popf
mov
es
xor
add
inc
jb
jg
rol
enter
testl
cmc
je
xchg
sbb
dec
in
test
sub
and
je
sbb
cmp
push
push
lret
jmp
imul
sbb
add
cmpl
adc
inc
mov
or
jne
or
push
inc
loope
and
filds
sbb
addr16
lods
ja
adc
inc
lcall
lock
or
or
enter
mov
outsb
cmp
out
mov
add
cwtl
xchg
xchg
iret
outsl
push
leave
push
test
cmpsl
loope
scas
aam
add
add
loope
divb
or
push
popa
jle
test
ja
enter
dec
popa
call
sub
out
and
or
add
outsl
or
push
fdiv
sbb
xor
add
and
inc
mov
push
inc
and
and
dec
in
mov
or
cmp
jl
test
mov
push
or
xor
loop
pop
xchg
fwait
adc
dec
loop
or
mov
mov
dec
loopne
adc
adc
test
test
icebp
add
xor
pop
inc
or
js
dec
mov
or
sbb
lea
inc
cmp
into
push
mov
pop
push
pop
ret
add
mov
out
shlb
inc
orb
daa
jmp
push
push
inc
or
mov
addl
out
in
add
mov
push
mov
push
arpl
dec
mov
test
adc
push
inc
or
test
jno
sbb
test
ret
push
jp
dec
mov
aaa
jecxz
push
dec
sub
lcall
dec
pop
xchg
mov
adc
mov
add
inc
test
popa
dec
call
adc
or
inc
ret
lea
cmp
mov
xor
inc
js
dec
inc
js
dec
xchg
push
dec
add
dec
pushf
andb
jle
push
inc
add
fldl
aam
add
and
jns
fwait
or
into
or
push
inc
loopne
clc
fisttps
mov
add
add
inc
push
sub
in
adc
or
and
dec
dec
scas
jbe
int3
les
ret
and
lcall
inc
mov
adc
and
sbb
test
mov
jo
or
xchg
iret
sbb
outsb
repz
aad
mov
jmp
push
decl
push
xchg
dec
or
cs
pushf
lcall
add
out
stos
inc
adc
fsts
sub
hlt
mov
jne
repnz
jmp
push
fsub
gs
je
inc
jns
sbbl
sub
xor
pop
mov
push
mov
mov
add
sbb
scas
jno
inc
lea
popf
in
jb
lods
mov
jle
xchg
lret
fadd
fsubs
mov
jne
xor
pop
push
mov
push
inc
pop
mov
cmp
imull
xchg
push
and
repnz
mov
leave
test
in
mov
mov
cmp
pop
ret
ret
lods
dec
mov
pop
stos
dec
rclb
lea
push
loope
sub
ja
mov
movsbl
psubsw
divb
aam
test
call
clc
sub
mov
push
lea
add
jno
inc
dec
test
cli
mov
pop
cs
aam
clc
fcomps
add
sub
dec
or
je
cmp
push
lock
sbb
pop
or
jb
in
push
pop
add
xor
sbb
adc
nop
cli
xchg
sub
inc
cmp
sub
aam
out
mov
push
aas
mov
mov
sub
pop
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cmp
push
or
inc
insb
je
adc
into
pusha
lock
test
adc
ds
loopne
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
inc
popa
loope
mov
mov
push
sbb
movsb
dec
jecxz
pop
add
dec
jnp
aas
sbb
sbb
cmp
cmp
adc
or
add
mov
ret
add
hlt
sub
loop
fdivr
pop
stos
push
cmp
dec
nop
and
lahf
mov
jae
shl
mov
lea
sahf
fucomip
mov
xchg
popa
lods
aaa
jne
das
mov
cmpl
mov
and
fdivrl
sub
jb
lock
enter
mov
mov
test
xor
mov
mov
ljmp
mov
ret
subl
shlb
jbe
and
addl
negl
mov
dec
xor
xor
loopne
aam
push
addb
cmp
fisttpl
inc
mov
push
mov
movb
icebp
or
aas
push
pop
fldl2t
push
pushf
mov
ja
setp
hlt
mov
inc
divb
inc
mov
dec
mov
pop
insl
cltd
loope
inc
dec
mov
mov
push
mov
addr16
jns
push
sbb
pop
jo
sub
outsb
jo
add
add
sub
add
addr16
inc
inc
xor
je
cmp
je
push
ss
lods
test
insl
cwtl
fwait
jle
xchg
je
aas
add
movsb
xor
roll
xor
mov
add
stos
movsb
or
adc
addr16
fld
or
add
mov
into
movsb
std
cmc
push
ret
gs
adc
hlt
jmp
push
cmp
jle
insl
cmpl
incl
andl
push
int3
int
or
out
mov
mov
out
call
cld
test
sti
xor
jbe
cmp
hlt
dec
sub
lea
push
clc
or
popf
test
mov
and
lcall
fs
cwtl
inc
call
sbb
dec
add
push
cld
cmpb
jne
and
sbb
bound
push
jne
inc
add
jae
addr16
hlt
shrb
decb
sub
daa
add
pop
or
sbb
pop
iretw
hlt
sub
in
push
lret
test
inc
cmp
jne
adc
inc
fbstp
inc
inc
xchg
orb
mov
inc
jmp
or
mov
inc
jecxz
add
push
pusha
add
jl
mov
and
adc
stos
neg
jecxz
nop
pop
fisubrl
clc
jne
cmp
rcrb
pop
lods
cmp
lahf
mov
or
jne
and
lea
out
sbb
sbb
mov
cld
loopne
loope
and
inc
das
shll
pop
in
cmp
push
nop
xchg
clc
sahf
add
popf
loop
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
xor
jmp
in
dec
shlb
xor
cmpsl
ljmp
loope
or
xchg
inc
inc
in
mov
sub
sub
mov
test
aas
mov
fisubrl
roll
sub
clc
data16
sub
push
test
dec
and
mov
mov
sub
sub
pop
cmp
push
jp
jl
leave
jns
loope
fdivrl
or
cmp
lea
sub
cs
jbe
dec
popa
pop
xor
push
fdivs
pusha
push
and
jno
aaa
add
add
cmp
call
inc
jae
push
rcll
pop
popa
jle
sbb
xchg
dec
add
jg
addr16
xlat
and
lea
jl
dec
rorl
and
and
cmp
add
push
cmp
das
xchg
adc
adc
icebp
sti
and
movsl
daa
pop
mov
or
ret
fidivl
movsb
cmp
add
and
adcl
je
push
loop
push
mov
out
fisubrl
push
cmp
add
outsb
push
dec
test
int
outsl
dec
pop
ss
push
cmp
shrb
inc
push
add
dec
adc
or
cli
mov
sbbl
mov
cld
mov
or
lea
hlt
cmp
jbe
nop
movsb
insb
repnz
or
and
shl
scas
add
test
and
xchg
mov
pusha
lcall
dec
aam
daa
jl
pop
jo
cmp
inc
push
cltd
into
push
rcll
in
pop
add
clc
or
push
pop
out
inc
add
jne
push
push
out
xchg
cmp
aam
lds
leave
xchg
lock
mov
cmp
fimull
dec
sbb
add
fdivs
cmp
ss
ret
adc
sbb
mov
jne
xor
push
push
fstl
ret
xchg
adc
inc
imul
add
insb
or
push
or
sbb
add
or
sbb
adc
inc
sub
add
sub
aad
lds
lcall
xchg
or
adc
enter
and
ljmpw
test
mov
rclb
and
jmp
add
sub
dec
mov
jns
cld
shr
inc
les
je
leave
cltd
mov
inc
shll
dec
outsl
jo
push
dec
or
aas
add
xor
sbb
fisttpll
xor
cld
sbb
insb
mov
loopne
ret
lcall
cmp
jbe
push
pop
fisttps
or
rolb
mov
mov
call
jmp
dec
add
shll
pop
mov
jle
pop
js
stos
sbb
lea
xor
add
push
pop
push
mov
push
pop
xchg
jno
dec
pop
add
add
pop
and
or
or
data16
cli
imul
jmp
clc
and
mov
pop
sub
and
sti
add
adc
mov
cmp
hlt
mov
mov
imul
loopne
push
jno
fwait
lret
cmpsb
data16
mov
shr
not
and
sbb
jo
sub
mov
dec
loopne
mov
xor
push
jle
pop
dec
add
lahf
sub
xor
add
ficoms
adc
mov
inc
mov
movsl
ret
cmpsb
rclb
pusha
mov
movsl
push
ja
dec
inc
mov
mov
insb
jle
xchg
lods
add
call
inc
dec
or
xchg
sbb
sub
lods
dec
push
and
xchg
mov
or
xchg
test
adcl
xor
enter
mov
cs
or
std
stos
pusha
push
xlat
xchg
ret
fs
testb
dec
inc
shl
add
scas
jp
push
call
aas
lcall
push
or
xchg
cmp
sub
dec
inc
jg
ror
adc
inc
mov
incb
mov
jne
rcrb
and
mov
cs
ss
adc
in
lea
sbb
sar
inc
cmp
cmp
add
or
mov
jbe
insb
das
mov
mov
mov
or
pop
dec
lock
or
popf
adc
push
sub
cmp
jae
cltd
dec
and
addl
and
inc
stos
xchg
aad
mov
inc
adc
scas
imul
xor
adc
mov
xorb
mov
incl
ljmp
or
inc
nop
push
test
in
rolb
xchg
ljmp
scas
mov
mov
add
or
hlt
xchg
jns
push
or
imulb
xor
sarb
int
outsl
lea
inc
rolb
sub
shr
push
fdiv
pop
incb
mov
adc
adc
out
mov
cld
lock
call
jmp
add
je
clc
add
dec
mov
sbb
sub
sub
fs
inc
mov
mov
mov
mov
lock
jle
icebp
pop
loopne
inc
jne
or
lds
not
and
les
cmp
cmp
adc
dec
and
pop
mov
mov
fstl
push
pusha
jb
cld
push
dec
iret
push
into
sarb
movsb
rclb
and
mov
or
andl
cmp
or
xchg
sti
xchg
rcl
gs
push
mov
int3
push
cmpsb
add
pop
fcomps
pop
add
sbb
clc
notb
nop
es
add
cmp
inc
or
lcall
add
push
jns
ret
mov
push
sub
add
int3
das
repz
pushf
int
mov
sar
dec
mov
cs
fstpl
jae
sbb
lea
pop
jg
xor
push
xor
jle
mov
pop
test
push
pop
adc
adcb
sbb
iret
xlat
fildl
js
and
and
js
sbb
imul
adc
inc
insb
xor
out
push
mov
shlb
cli
mov
sub
jl
loope
jmp
inc
jge
fisubrl
inc
dec
insb
pop
xor
push
sar
pop
or
orl
xchg
mov
sub
jl
push
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
xchg
mov
adc
lods
push
cmp
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
inc
sub
adc
push
addb
insb
out
push
mov
lods
pop
and
cld
call
push
dec
push
push
push
jge
or
out
adc
mov
inc
call
lock
stos
dec
or
or
and
and
or
and
bound
jae
add
jg
sbb
ror
jne
data16
add
jbe
pop
lock
aaa
arpl
orb
insl
push
xchg
jne
cwtl
and
jne
inc
sbb
xor
outsb
bound
outsl
cmpsb
test
push
in
cmp
je
mov
fcmovnb
mov
in
cli
and
cmovle
pop
inc
mov
inc
fsubl
dec
pop
iret
jne
inc
les
xor
jno
mov
add
or
mov
dec
mov
mov
into
jne
mov
push
pop
les
inc
test
inc
push
pushf
mov
sub
in
sub
icebp
sbb
shll
inc
in
xchg
dec
stos
inc
cmpsl
cmpsb
add
xchg
sbb
cmp
add
iret
push
inc
cmp
loop
mov
and
mov
decb
jne
cmp
and
jmp
jp
es
mov
cmp
jge
jne
dec
push
and
outsb
clc
into
xor
dec
inc
inc
mov
jp
xor
mov
or
inc
and
rcrl
or
cmp
ror
sarb
iret
or
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
push
std
and
nop
loop
or
adc
incb
shrl
and
lods
test
lea
cmp
sbb
pop
mov
push
ds
add
leave
jp
lock
repnz
cmp
cmpsl
cmp
clc
fnsave
pop
jb
or
xorl
mov
pop
jp
sbbl
and
fmull
sarb
jle
lea
fisttps
xchg
xorb
jp
daa
xor
jbe
or
ja
cmp
outsb
push
push
out
or
mov
and
sti
mov
adc
shlb
int3
mov
add
xchg
inc
xlat
orl
xchg
cld
xchg
cmp
sub
and
push
mov
in
or
je
pop
roll
or
in
fcoms
enter
xor
imul
dec
push
mov
pop
add
inc
lods
xor
dec
inc
push
sbb
cmp
adc
andb
test
std
lahf
pushl
adcl
add
divl
mov
jne
push
adc
pop
mov
or
pop
adc
dec
or
movsl
addr16
add
mov
es
push
mov
fdiv
push
ss
testl
jmp
cmp
inc
test
cmpsl
jle
inc
mov
ja
insb
dec
or
xchg
clc
hlt
and
cmp
fcoml
int3
push
push
sub
imul
mov
xor
shlb
lea
adc
hlt
or
mov
je
xchg
pop
xor
sarb
outsb
loop
call
jge
jmp
movzwl
sub
in
int3
test
sbb
xchg
je
data16
xor
into
fiadds
pop
add
cmp
mov
pslld
movzbl
or
xor
imul
test
dec
cs
add
mov
pop
lcall
mov
rolb
xchg
and
test
movsb
mov
cmp
testl
add
imul
cmp
clc
push
xor
adc
pop
add
sbb
xchg
arpl
sub
adc
pop
sbb
add
leave
sub
nop
fistl
repnz
sbb
ficomps
mov
pop
hlt
icebp
sbb
inc
pushf
fistps
xor
adc
sbb
pop
and
popf
nopl
jg
add
xor
xor
nop
arpl
cmp
jb
or
push
jmp
xchg
lret
int3
les
push
xor
push
sub
xor
jns
ret
in
shll
lea
adc
pop
in
jl
call
add
xor
mov
jo
test
test
sub
mov
gs
cmpsb
mov
call
dec
mov
leave
enter
inc
mov
jo
in
cmpsl
inc
subl
add
test
insl
and
sbb
adc
outsl
sbb
push
and
repz
add
in
loop
add
mov
mov
cld
xorb
js
test
mov
test
cltd
mov
in
in
shr
and
xchg
or
mov
iret
scas
jbe
adcl
xchg
repz
lods
push
cmpsb
in
in
lods
inc
mov
rclb
inc
push
call
sub
lods
and
and
ret
push
and
les
xchg
pop
shlb
loopne
loop
in
add
add
les
nop
and
xchg
inc
dec
test
popa
inc
jb
test
fwait
mov
int3
test
js
pop
mov
mov
pop
mov
sysret
lds
or
sbb
jmp
mov
xor
mov
pop
mov
add
ss
inc
aas
xchg
testl
daa
cmp
scas
jl
pop
push
testl
adc
lock
lret
push
js
ret
mov
sbb
clc
xchg
ret
lock
jne
jb
imul
shll
mov
rclb
dec
rcrb
lret
or
movsb
inc
sbb
test
je
test
push
daa
and
lods
inc
fistps
les
push
mov
add
shl
dec
dec
adc
rcrb
pop
push
adc
mov
dec
adc
lds
cld
add
test
cmp
in
data16
jne
push
cmp
and
add
inc
dec
sbb
add
or
dec
cmp
jne
pop
inc
inc
jp
nop
sbb
rcll
insb
adc
pop
fidivl
sbb
out
add
fstl
add
add
sahf
lret
mov
ret
rolb
add
lock
adc
lods
cs
int
insl
call
pop
inc
add
and
pop
pop
test
add
hlt
push
out
dec
add
mov
aaa
inc
cld
push
ds
add
mov
inc
mov
hlt
add
rolb
mov
imul
test
int3
pop
and
pop
in
mov
or
shll
enter
pop
mov
xor
das
cmp
sub
add
dec
pop
sahf
xor
sub
sti
adc
dec
sar
std
dec
inc
push
pop
inc
loop
xor
push
pop
push
pop
in
push
dec
mov
das
jecxz
mov
je
add
sbb
add
in
sahf
mov
rcl
js
rcrl
int
mov
add
add
je
dec
je
push
or
adc
mov
movsb
aam
pop
fstpl
sbb
fldl
or
fldl
or
xchg
mov
nop
testl
lods
ja
leave
pop
jmp
jo
fldt
push
dec
lea
lret
xchg
pop
mov
mov
lret
sub
je
dec
je
add
and
xchg
pop
and
sbb
sti
fnstenv
jns
test
insl
ljmp
cmp
cmp
pop
add
mov
outsb
inc
add
nop
stc
fwait
add
mov
jno
jns
lock
lret
xchg
adc
test
je
repnz
jo
adc
mov
xchg
push
push
in
sbbl
mov
adc
das
and
inc
lock
and
sub
xor
dec
repz
cmp
pop
cli
mov
addr16
jns
and
std
sahf
add
mov
test
mov
inc
mov
mov
mov
jo
gs
scas
test
push
xchg
in
jle
ficoms
sbb
and
and
xor
inc
or
jo
fimull
push
xchg
jmp
inc
faddl
pusha
bnd
or
popa
push
jmp
test
fadd
mov
and
cmp
pop
and
push
push
lea
push
push
or
movb
popa
xor
ret
js
sub
mov
iret
pusha
cmp
jne
pop
popa
mov
aas
xor
aad
add
or
or
jne
call
mov
mov
test
sbb
shlb
das
cmp
mov
lods
std
xchg
mov
inc
arpl
testb
pop
cmpsl
pop
mov
mov
clc
mov
pop
add
incb
dec
add
sub
testb
jne
dec
sbb
jg
adc
pop
sar
lea
ret
and
fisubl
mov
fabs
mov
mov
iret
movsl
sub
mov
push
mov
inc
pop
ds
push
std
scas
cmc
add
add
or
insb
mov
dec
pop
ja
movsbl
push
fs
call
loope
ror
lods
popf
cmpsb
jb
mov
mull
or
shl
mov
jo
enter
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
xor
mov
dec
lock
cmp
fcompl
stc
or
cli
and
pop
in
jb
xor
mov
es
mov
call
mov
push
or
inc
jne
lcall
bsr
repz
cmp
inc
sub
pop
mov
adc
and
ss
pop
xor
push
adc
cmp
movsl
pop
mov
hlt
push
test
aad
cmp
xor
cmpsb
rorb
int
lds
cmp
test
loope
ss
movsb
xchg
dec
rorl
push
leave
sbb
dec
test
xchg
inc
mov
lea
lret
in
adc
mov
xor
jmp
add
jmp
add
mov
pop
js
dec
xchg
icebp
je
or
add
push
lods
and
lea
jle
popf
in
mov
cli
cli
push
xchg
and
mov
lds
cmp
push
and
cmp
in
jno
push
adc
mov
mov
frstor
mov
sub
add
mov
faddl
mulb
mov
pop
in
sbb
sahf
add
jl
ret
inc
cld
xor
subb
neg
daa
in
pop
enter
mov
sub
jno
or
sbb
pop
or
pop
scas
leave
sbb
xor
cltd
adc
lds
mov
mov
or
ret
in
xchg
dec
dec
sub
xor
rcll
or
push
and
lock
aaa
lods
dec
mov
addr16
das
lock
sbb
dec
sahf
fdivr
adc
pop
ret
das
add
ds
into
mov
test
jae
movb
shlb
or
mov
cmc
jle
rol
gs
mov
inc
ds
shr
std
call
mov
dec
mov
push
mov
xor
xor
std
push
mov
fsubrs
rcr
jge
not
xor
gs
aam
std
inc
mov
ret
pop
sub
nop
std
lds
ja
or
lea
in
aad
lock
out
imul
push
shll
cmp
cmpb
cltd
cwtl
mov
cmp
dec
or
daa
jbe
push
mov
push
jecxz
out
sbb
sbb
mov
mov
push
dec
cs
out
cli
scas
stc
shrl
inc
add
movb
sub
popa
cmp
xchg
lcall
clc
xor
roll
adc
frstor
inc
adc
scas
dec
lcall
cmp
mov
fwait
call
xor
and
std
xor
fwait
imul
test
pop
loopne
mov
mov
inc
repz
daa
lods
push
ja
mov
popa
fwait
push
out
lods
mull
decl
fwait
ds
data16
adc
jecxz
dec
mov
hlt
sub
test
sub
pop
inc
cli
inc
jmp
dec
inc
add
push
cmc
shrl
movsl
pop
lock
xor
push
pop
jp
jmp
mov
sub
or
sub
lods
mov
mov
in
cmp
lahf
jne
loopne
addl
xchg
in
dec
test
sub
mov
aam
test
std
dec
xorl
mov
je
lods
mov
add
pop
insl
mov
movsb
adc
push
sub
out
arpl
dec
cwtl
inc
push
inc
lret
jne
cmp
jo
or
cwtl
cmovge
ds
jne
or
fdivr
clc
xor
inc
das
push
dec
pop
test
jl
je
pushf
je
or
xchg
loope
gs
and
xchg
aaa
fsubrl
into
cmp
adc
and
push
int
nop
test
test
cmpsl
push
fnstenv
popf
orl
add
and
inc
xor
sahf
pop
or
es
fcomps
loopne
orb
es
jno
nop
adc
fists
and
add
outsb
cwtl
into
or
fucom
pop
movsb
jb
xor
and
in
mov
or
add
cmp
cmp
lea
insb
loopne
in
lea
push
lods
icebp
lcall
lret
and
repnz
and
outsb
leave
sub
or
add
mov
loopne
cmp
mov
ljmp
mov
push
or
popa
push
push
ljmp
dec
push
lock
aaa
xchg
imul
xor
mov
jns
adc
push
scas
movsl
call
push
es
ja
cltd
mov
or
mov
mov
adc
and
jne
or
repnz
mov
lcall
lods
pop
lret
xor
mov
sbb
cltd
mov
dec
push
mov
dec
dec
es
outsb
movsb
ret
adc
test
inc
sahf
sub
pushf
xor
xchg
jmp
xchg
xchg
es
int3
fcomps
adc
jbe
pop
adc
push
sub
loope
xor
repnz
fwait
mov
or
jb
mov
int
add
mov
mov
lahf
xchg
dec
and
pop
inc
and
lea
mov
lret
rorb
mov
inc
push
nop
xchg
pushf
and
adc
xchg
outsb
lods
xchg
loopne
repnz
push
or
fs
mov
inc
imul
dec
pop
inc
aaa
into
movsb
or
inc
pushf
movsb
xchg
nop
add
aas
dec
or
leave
adc
scas
nop
or
dec
adc
pop
add
xor
xchg
nop
nop
nop
leave
adc
push
pushf
lods
movb
enter
addb
test
adc
push
addr16
je
aam
outsl
push
stc
dec
xchg
popl
push
sub
lea
jns
dec
sti
stos
inc
add
test
int3
out
or
add
js
iret
pop
test
sbb
pop
rcrb
or
loope
or
jne
gs
cs
lcall
or
inc
or
cmp
testb
cmp
mov
or
sbb
inc
ja
lahf
dec
clts
inc
gs
sbb
sub
movsb
ja
inc
ret
mov
dec
mov
mov
adcb
push
add
mov
popa
push
and
xchg
mov
nop
insb
ret
shll
adc
lock
test
into
test
test
xchg
xchg
inc
int3
dec
out
jl
dec
movb
or
inc
push
mov
data16
jmp
outsl
mov
test
je
mov
xor
cwtl
insl
icebp
inc
bound
ret
cmpsl
mov
sbb
and
inc
add
test
and
jle
popa
add
pop
pop
cli
sub
mov
sbb
push
nop
shll
fucomip
stos
bound
add
adc
loop
pushf
push
add
lahf
adc
popa
sub
cmpsl
and
out
push
push
xlat
xor
and
loopne
mov
movl
xor
mov
push
gs
fildl
mov
mov
add
add
loop
inc
pop
sub
xor
mov
or
fs
fisttps
or
or
in
sbb
push
add
je
hlt
daa
clc
inc
push
cwtl
push
push
inc
sbb
jae
testl
cmpsb
jmp
ss
cmp
jl
xorl
test
cmc
les
jp
mov
and
ret
xchg
adcl
loope
xchg
mov
lods
pop
cmp
adc
add
jbe
xchg
hlt
mov
cltd
jge
lock
push
adc
loopne
sub
pop
or
add
lock
pop
adc
test
ja
cs
and
push
mov
push
xchg
dec
or
stc
aas
adc
rcrl
movb
bound
nop
inc
out
cmpsl
daa
push
or
add
sbb
in
push
and
sbb
dec
push
push
jl
push
addr16
mov
push
inc
jmp
mov
jo
lcall
xor
mov
sub
mov
add
add
movsl
sbb
pop
sbb
repz
lret
sbb
js
cmp
push
mov
pushf
xor
imul
test
pop
jo
pusha
sahf
jp
dec
lock
fstl
push
test
test
xor
sbb
sbb
aam
and
jmp
mov
xchg
push
push
xlat
cltd
mov
scas
sub
push
xchg
gs
test
fdivr
add
loopne
pop
sub
loopne
sub
xchg
xchg
pop
fcmovb
lea
wrmsr
pop
out
aad
dec
subl
enter
pusha
xlat
add
rcrb
loopne
pop
push
adc
cltd
ja
notl
or
shr
loopne
mov
flds
jmp
rcr
or
jne
div
mov
fs
out
inc
mul
add
jb
cmp
or
cmp
add
or
lret
cwtl
or
adc
mov
xor
mov
jae
clc
xor
sub
jnp
addr16
out
dec
push
push
out
int3
loopne
dec
inc
cmp
sbb
jb
and
dec
sbb
lea
add
dec
inc
cmp
roll
inc
inc
inc
mov
dec
movsl
inc
aad
jg
xchg
orb
mov
sub
or
push
jp
push
and
sbb
orl
adc
mov
inc
fsubrs
cmp
adc
adc
aam
int3
lahf
sub
or
inc
inc
mov
loopne
mov
push
cs
adc
cmp
and
adc
xchg
push
jecxz
and
dec
pop
mov
inc
and
add
or
pop
pop
adc
and
mov
pop
adc
pop
mov
lret
or
sbb
imul
rcrb
ficoml
out
imul
ret
bound
or
cmp
out
sbb
inc
insl
lods
aam
sti
add
fisttpl
lret
cmpsl
in
dec
pusha
cs
and
push
adc
rolb
or
lods
roll
data16
jge
imul
jle
andl
fnstsw
or
cmp
and
sarl
mov
orb
aas
aaa
rol
out
jp
sbbl
xor
xchg
popa
pop
orl
push
mov
cs
lret
cmp
xchg
sbb
test
push
fwait
test
inc
rorl
pop
leave
add
movsb
mov
mov
adc
fucom
dec
mov
xor
out
push
push
xchg
imul
rol
add
jb
hlt
add
test
mov
fidivrl
leave
xlat
ret
outsb
push
orb
mov
add
and
or
sahf
ret
fwait
out
inc
pop
shll
fs
scas
imul
fnstenv
add
mov
iret
cmc
pusha
pushl
push
dec
lods
mull
add
pushl
mov
cmp
cmp
sub
sbb
pop
jno
imul
push
push
scas
je
push
mov
mov
xchg
add
pop
pop
xchg
xor
cmp
les
push
in
lock
or
sbbb
out
sub
je
in
sti
clc
mov
aam
inc
pusha
jne,pn
sbb
fnsave
rol
inc
mov
out
jle
fcoml
mov
cmp
jge
mov
mov
pop
mov
in
icebp
call
mov
scas
mov
sbb
push
push
or
adc
jmp
ljmp
adc
inc
xor
mov
sbb
xchg
push
adc
outsl
sbb
pop
add
inc
sub
fwait
test
fwait
mov
jmp
lahf
imul
addl
and
pop
mov
sub
ret
test
jge
mov
or
push
sbb
stc
xchg
js
cmpsb
adc
sar
je
xor
loope
pop
iret
pop
jmp
fsubs
shl
push
adc
arpl
add
xor
mov
dec
stc
xor
add
xor
aas
sub
loope
jne
sbb
je
lods
and
sub
les
leave
mov
aad
imul
daa
push
out
dec
jnp
repnz
faddl
mov
jmp
pop
addr16
outsb
or
mov
fildll
mov
xchg
mov
sbb
out
mov
lods
sub
std
sbb
adc
dec
aad
sbb
aas
mov
sub
mov
add
and
push
cmp
jne
jg
cmp
lods
hlt
add
inc
and
add
jno
addr16
pusha
cmp
cmp
mov
xor
dec
pop
daa
sbb
cmp
jo
ja
addb
and
dec
cmp
jge
andb
rcll
lea
js
jne
fsubrs
cmpsl
insb
xchg
mov
fsubl
mov
sbb
fdivrl
clc
stos
xchg
mov
add
sbbl
scas
mov
lret
adcl
popa
es
enter
pop
je
or
push
cmp
and
xchg
push
jmp
add
or
jmp
in
daa
test
jae
pop
xchg
jbe
enter
lock
aad
xor
push
dec
push
out
mov
hlt
push
icebp
mov
or
pop
fisttpll
push
add
adc
fdivs
lcall
and
jmp
lcall
push
adc
mov
mov
aam
mov
adc
or
ret
sub
inc
mov
inc
xchg
movsb
and
mov
test
lahf
dec
or
xchg
add
lret
popa
push
mov
popa
xchg
fisubrl
sbb
repz
jmp
push
push
stc
xor
xor
or
add
mov
mov
enter
pop
je
pop
es
sti
xor
pop
int
or
andb
and
rorb
push
mov
sbb
fistpl
in
ja
dec
stc
add
cwtl
icebp
lock
or
arpl
dec
je
sarb
bound
leave
add
mov
in
out
cwtl
into
inc
add
xor
inc
pop
mov
out
mov
arpl
sub
sub
pop
adc
jnp
dec
mov
sbb
mov
aad
pop
inc
mov
dec
adc
mov
pop
push
mov
mov
adc
movsb
mov
pop
rclb
in
or
aad
jge
mov
inc
stos
xchg
hlt
cmpsl
mov
aas
jae
ss
inc
dec
shl
movsb
sbb
inc
psubsb
push
lcall
sub
ds
jge
push
push
orl
or
sbb
push
xor
add
pop
shrl
cmp
inc
inc
dec
add
add
and
jo
xchg
cmp
push
add
jmp
enter
mov
jge
mov
cmp
dec
inc
inc
or
jne
repnz
push
add
push
sar
and
js
add
arpl
mov
or
psubd
and
nop
lea
or
dec
dec
aam
push
mov
lock
sbb
call
jb
jmp
negb
addb
xor
push
or
and
int
pop
loopne
mov
mov
in
mov
lock
xor
movsl
lret
les
jmp
addl
push
or
inc
mov
add
or
mov
xorb
inc
or
or
or
fidivl
or
cmp
loope
push
outsb
inc
mov
in
pushf
or
js
into
mov
test
loop
jle
cmp
push
mov
out
mov
push
push
outsb
inc
pop
pop
and
rcrb
jb
sbbl
xchg
add
jo
lea
loopne
lock
and
adc
mov
mov
inc
cmp
js
or
adc
rcrl
push
insl
out
addb
adc
or
insl
pop
or
dec
jl
cld
filds
clc
add
out
add
imul
pop
and
jnp
leave
fmuls
hlt
lds
in
inc
adcl
xchg
adc
xorl
jns
or
xorb
fwait
rcll
negb
jle
test
ret
mov
cmc
push
add
mov
inc
xor
inc
mov
aas
push
aaa
xor
xor
add
mov
sbb
sub
mov
add
push
add
add
mov
mov
sub
jmp
scas
pop
pop
or
pop
adc
cltd
cwtl
fadds
clc
cs
dec
out
mov
sub
xchg
or
mov
aam
inc
sbb
xor
lock
rcrb
rorl
push
sarl
xor
and
popa
jg
jmp
test
adc
loopne
or
xor
and
push
roll
fbstp
outsb
js
sbb
add
adc
jb
rcrl
rol
dec
add
ret
sub
or
jge
sbb
push
pop
or
jmp
mov
idivb
jmp
jg
jg
adc
and
adcl
inc
stos
xchg
and
ret
test
rcr
jle
cltd
lods
cli
sub
inc
xor
push
cmp
popa
std
sub
and
fs
je
sub
mov
mov
add
jo
addb
or
shlb
sbb
fcomip
stos
ss
neg
stos
sub
or
lock
push
je
push
xlat
hlt
push
lock
out
jmp
sbb
ljmp
adc
inc
dec
mull
pop
int3
mov
jo
jo
shr
ljmp
and
push
mov
jnp
jp
jae
mov
sbb
into
jbe
xor
mov
cmc
sbb
jmp
jl
gs
sub
dec
lcall
push
pop
and
std
cwtl
mov
inc
mov
jg
xor
in
lret
adc
sti
pop
sahf
lret
jle
mov
and
repnz
mov
pop
adc
xlat
rorb
xchg
mov
adc
mulb
xchg
fnclex
mov
cwtl
lods
test
adc
fsubrs
icebp
stc
mov
or
pop
xor
iret
notl
push
pop
outsl
inc
or
jbe
sub
lahf
pusha
jle
sahf
outsl
ja
push
movsl
test
mov
adc
out
sbb
hlt
and
adc
test
ret
ror
mov
mov
popa
pop
xchg
and
adc
test
out
and
call
sub
mov
sbb
sahf
pop
mov
xor
pop
add
sub
lock
in
lock
rep
add
sbb
add
adc
adc
ss
and
push
or
push
inc
fistl
jmp
pop
stc
dec
push
add
cwtl
or
add
lods
inc
pop
loope
leave
movb
lock
sub
adc
xor
jno
cs
xor
sti
or
and
mov
and
sub
and
dec
out
shlb
loope
sub
fdivrs
enter
insb
push
and
ret
out
testl
pushf
bound
pop
or
mov
arpl
dec
push
clc
and
pushf
or
push
sbb
test
je
xor
sub
inc
fsubl
push
faddl
mov
dec
inc
sub
xchg
mov
adc
xor
aas
add
jmp
adc
jl
sbb
push
enter
or
or
shr
rolb
sbb
addr16
push
out
aam
sarb
ret
xor
mov
mov
sub
orb
and
push
sar
sbb
push
mov
int3
imul
mov
jne
mov
or
pop
mov
jmp
adc
insl
mov
jmp
jae
outsb
movsl
repnz
inc
add
or
dec
jmp
idivl
in
fdivr
inc
jnp
cmp
int3
mov
sahf
inc
jecxz
mov
stos
cltd
test
aaa
mov
adc
ficoml
inc
or
call
and
es
or
jl
cmp
jg
inc
ljmp
hlt
pop
cmc
adc
sub
cmp
imul
jle
push
ret
cmc
aas
push
adc
sbb
dec
enter
adc
xor
cmp
rcr
fsubs
popa
push
jb
push
pop
adc
xorb
mov
adc
dec
movsl
std
jne
xor
pop
cld
cwtl
xchg
pushf
mov
cmp
pop
mov
push
ja
cld
and
fstl
ja
lods
mov
mov
lcall
filds
sbb
or
test
insb
adc
arpl
pop
rcll
or
nop
mov
add
cmp
add
adc
inc
lcall
add
add
push
mov
lsl
jmp
and
int3
sbb
push
inc
sbb
adc
or
cmp
jnp
push
jbe
dec
sub
sbb
adc
inc
adc
fimull
pop
cmpsl
add
inc
fxch
rorb
xor
inc
rcr
inc
add
mov
adc
add
dec
inc
leave
rolb
push
mov
add
mov
es
call
xchg
dec
xor
sbb
cmp
cmpsb
mov
pop
dec
sbb
inc
insb
sbb
loopne
add
inc
cmp
mov
cli
ja
jo
add
lea
inc
adc
stos
push
test
pop
sar
inc
and
jo
sahf
jl
into
jae
data16
cmp
ret
cmc
jne
mov
cmp
adc
adc
cmp
xchg
adc
pusha
inc
or
ss
aaa
mov
xchg
add
cwtl
pop
xor
xor
lods
mov
inc
dec
sub
sub
in
roll
dec
mov
mov
leave
xor
sub
add
pop
add
or
sbb
std
push
push
aas
icebp
push
out
mov
addr16
cwtl
or
lahf
inc
or
popf
outsl
loop
push
sahf
js
aam
jle
sub
sbb
push
test
je
xchg
cli
adc
jmp
pop
movsb
lea
lea
or
outsb
dec
neg
add
jo
in
or
mov
push
sbb
mov
popl
nop
push
clc
out
add
mov
push
xor
in
cmp
sbb
dec
mov
les
mov
push
cmp
pushl
and
sbb
push
test
loop
mov
clc
sbb
sub
gs
call
pop
ja
push
shrl
cmp
xor
es
shl
ret
adc
mov
push
repz
test
push
xchg
dec
dec
shrl
nop
subb
repz
cmp
or
adc
jbe
cmp
ss
in
in
sub
xor
loope
in
cmp
in
movsb
int
inc
and
inc
cmovs
leave
leave
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
sbb
sbb
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
sbb
sub
sub
sbb
clc
cmp
or
push
inc
sbb
xor
cs
mov
or
dec
rorb
adc
dec
adc
roll
adc
dec
dec
pop
and
lods
test
pop
enter
in
mov
pop
sti
adc
jns
jo
add
push
incl
cmp
cmpsb
rcrl
dec
jne
or
pop
data16
adc
inc
push
jmp
push
xchg
add
in
and
lods
stos
xchg
add
cli
cmp
cmp
adc
cmp
mov
xchg
rorb
aam
or
xor
les
adc
popf
mov
dec
int3
leave
inc
cld
push
jb
aam
xchg
xor
repnz
add
push
xchg
or
xchg
add
and
adc
push
pop
mov
loop
in
or
and
inc
pop
daa
dec
sbbb
pop
les
pop
inc
xchg
mov
cs
inc
ss
jnp
xchg
das
je
sub
movsl
or
xchg
sti
push
xor
push
jbe
ret
ret
lret
fistl
leave
lock
jp
pop
sbb
add
fmuls
in
push
mov
jbe
les
sbb
or
outsl
lcall
pop
sbb
sbb
dec
push
outsb
pop
je
push
pushf
jne
mov
dec
fildll
inc
push
dec
and
jl
pop
loopne
jge
or
dec
push
push
pop
mov
dec
test
xor
enter
or
push
push
sbb
jns
jbe
mov
cmp
jb
dec
adc
xchg
cmp
int3
lret
into
lret
fistl
sbb
push
xor
adc
xorb
and
lret
mov
push
sub
add
lret
in
dec
mov
adc
and
loop
dec
cmpsb
dec
arpl
xor
xor
je
mov
sub
sti
data16
loopne
or
add
cmp
adc
lock
and
push
push
scas
dec
sbb
ret
test
addl
andl
adc
cltd
mov
neg
add
jb
push
mov
push
test
add
inc
inc
rolb
lea
or
loop
push
inc
es
adcl
insb
pop
mov
xor
mov
push
icebp
add
xchg
push
add
les
int3
or
mov
sbb
hlt
orl
add
lahf
mov
in
add
mov
sub
jb
push
cmp
jo
in
cmp
add
or
jle
roll
gs
xor
mov
mov
hlt
adc
push
lea
or
out
out
jle
pop
xor
pop
and
fcmovnbe
sti
mov
or
popa
or
test
jne
insb
mov
mov
add
and
push
loope
test
adc
add
cld
add
mov
nop
sbb
insb
lods
dec
ljmp
add
pop
mov
test
mov
dec
push
out
dec
sub
inc
dec
inc
popf
xchg
cvtdq2ps
jae
orl
xchg
sbb
or
inc
inc
mov
lock
pop
dec
xchg
in
cmp
in
lods
mov
inc
loopne
das
and
mov
mov
lods
pop
rolb
add
stos
jmp
sarl
pop
pop
out
lret
inc
andb
push
mov
xchg
mov
lret
fistl
inc
dec
clc
addr16
push
clc
loopne
call
jmp
push
dec
inc
mov
test
lea
push
add
sub
mov
mov
lods
jnp
negl
cmp
jns
ljmp
movl
mov
fs
dec
jg
sarl
cmp
test
mov
push
iret
mov
cmp
test
rolb
cmp
mov
jno
add
incb
std
icebp
scas
sub
adc
cmp
jne
movzwl
addl
movl
out
inc
jl
outsl
sub
push
push
jmp
inc
or
test
dec
pop
lock
dec
je
out
add
es
xchg
pusha
jns
cmp
sbb
fisttps
cmp
mov
mov
adc
sarl
push
sysenter
sbb
dec
add
xchg
sbbb
ret
pop
adc
out
mov
and
jmp
xchg
jge
jbe
mov
andl
out
sub
cmp
cli
pop
pushl
adc
cli
or
inc
mul
in
adc
mov
adc
mov
mov
fsubrs
sub
and
mov
inc
add
lods
cmp
jmp
dec
adc
or
decl
add
cmpb
dec
add
push
nop
cmp
cmp
rclb
inc
lods
push
xorl
std
pop
push
or
inc
inc
sbb
or
and
mov
dec
dec
andl
movsb
inc
aas
mov
jl
xchg
dec
dec
stc
out
inc
movsb
inc
pop
xchg
cmp
add
roll
xchg
push
xchg
sub
mov
or
mov
je
push
push
sub
fstps
lock
scas
mov
add
ja
fs
std
addb
jno
movsl
adc
and
xor
jns
je
add
adc
lret
jmp
or
and
stos
push
sti
mov
repnz
lea
mov
cmp
fildl
xor
rclb
cmp
mov
insb
ljmp
je
inc
jne
mul
pop
push
fnstenv
fidivrs
xor
filds
inc
in
lcall
jg
jo
cmc
ret
and
jae
mov
mov
test
pop
test
mov
cmp
flds
cmp
push
xor
xor
mov
loop
loope
sub
and
scas
loopne
or
mov
cmp
daa
mov
jns
inc
push
add
or
sbb
popf
add
add
xor
add
xchg
jo
push
andl
les
outsb
dec
jmp
unpckhps
add
fdiv
and
sbb
or
adc
nop
push
sbb
cli
adc
sub
ss
addl
xor
adc
mov
into
xchg
jno
add
xor
or
call
mov
and
mov
xor
sbb
scas
js
out
sub
mov
shll
ret
sub
add
ljmp
mov
aas
push
mov
out
pushf
cli
or
pop
sbb
mov
insb
out
dec
adc
add
lock
xor
aam
testl
into
mov
xor
add
pop
mov
lea
jns
sbb
sub
test
les
adc
xor
or
popa
or
jge
js
xchg
add
fnsave
orl
pop
imul
cmp
push
jle
cmp
lods
jg
xchg
fnstcw
pop
jl
xchg
fdivrs
adc
jge
addr16
int3
add
test
add
test
xchg
pushf
or
push
or
jnp
mov
mov
pop
mov
lea
xchg
pop
dec
pop
pop
or
insl
xor
mov
and
cmp
call
mov
leave
pop
mov
xor
jmp
aam
inc
loopne
mov
lcall
andl
js
dec
xor
sub
mov
push
mov
push
arpl
inc
cmp
shlb
fwait
test
test
add
js
pop
sbb
push
add
dec
dec
loopne
popa
add
cwtl
and
icebp
enter
inc
ds
cs
and
cmp
outsl
adc
imul
mov
adc
outsb
or
cmpsl
mov
dec
cwtl
cmp
fisttpll
dec
jns
jmp
popa
mov
or
xor
jecxz
mov
mov
loop
jle
add
jl
and
ret
push
adc
sub
xor
inc
dec
fstl
icebp
pop
cmp
and
pop
add
jae
fcoms
shlb
adc
sbb
adc
daa
js
sub
rclb
xor
fistpl
cmp
cmp
sbb
mov
cmpsl
xor
jmp
pusha
cmp
sub
sub
rolb
popf
sbb
xchg
xchg
xchg
jo
mov
inc
enter
push
push
xor
das
mov
ljmp
dec
pop
mov
test
mov
xor
or
or
fnstsw
dec
cmp
daa
shl
jo
inc
sbb
inc
cmp
sub
sub
sbb
push
push
outsb
cmp
add
sarb
push
and
jne
orl
and
dec
scas
xor
mov
sbb
adc
dec
cmp
dec
xor
mov
dec
jnp
repnz
das
adc
xlat
push
inc
outsl
inc
sbb
jb
into
jl
or
or
mov
mov
out
jmp
or
or
pop
mov
mov
jbe
inc
gs
and
jne
sub
xor
into
inc
mov
add
mov
inc
and
push
pusha
popa
sbb
ja
dec
data16
adc
mov
and
xor
popa
pop
pop
pushf
fadd
mov
dec
or
ror
pop
gs
sarl
xor
std
jmp
fwait
xor
and
add
fisubl
push
add
push
pop
mov
lcall
mov
xor
pop
sub
je
push
popf
aad
scas
movsb
mov
mov
testl
clc
pop
test
add
push
push
pop
fistpl
dec
sub
repnz
hlt
add
lret
nop
outsb
dec
xor
or
rcll
sbb
push
or
adc
or
imul
mov
xchg
test
and
fsubs
and
cmp
and
nop
aas
mov
shl
not
xor
loope
xor
and
inc
outsb
and
shr
add
es
and
xor
pop
loope
fdivs
sahf
in
aaa
loop
cmp
test
adc
jmp
adc
test
xor
addr16
les
adcb
and
xor
xchg
lock
sub
inc
jmp
jp
incb
jmp
pop
mov
or
jmp
inc
and
mov
and
mov
movsb
jl
and
jecxz
jge
lcall
xchg
jmp
das
insl
mov
or
loope
pop
xor
sub
cs
xorl
sti
out
sti
fstl
sbb
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
movsb
dec
and
xchg
push
sahf
sub
pop
fstp
sub
sarb
pusha
pusha
insl
test
shrb
arpl
repnz
fiadds
xchg
adc
sti
add
fists
test
fisttps
lcall
pop
arpl
mov
jle
dec
jne
orl
mov
push
adc
add
jle
testl
mov
insl
cmp
adc
jmp
dec
mov
inc
add
adc
aaa
and
inc
flds
flds
fisttpll
test
or
fisubs
std
out
test
sub
ret
inc
push
or
adc
cmp
pop
sbb
pop
sub
fsubp
flds
push
cmp
js
sti
lret
ja
test
je
pop
xchg
or
pop
xchg
iret
enter
sbb
out
pusha
mov
test
fcompl
scas
jle
ss
jl
add
sub
sub
jmp
sub
mov
cmp
psubusw
inc
test
int3
sti
push
div
add
int
sbb
pop
dec
loope
mov
loopne
adc
push
andl
mov
fstpl
mov
or
jbe
or
jle
repz
faddl
push
add
inc
rcrl
repnz
add
jl
enter
add
mov
call
test
aas
mov
shrl
sbb
mov
ss
jp
dec
in
jbe
lock
out
mov
push
push
adc
mov
pop
movsb
mov
in
aam
or
add
test
xor
decb
push
and
in
sbbb
pop
sub
mov
push
push
add
dec
xor
dec
add
test
add
add
imul
sub
pop
add
and
test
loopne
add
mov
test
es
rorb
adc
dec
sbb
cmpl
pop
rcr
jecxz
or
call
xor
in
sbb
sbb
dec
pop
add
hlt
adc
or
movsb
subb
sub
pusha
push
hlt
push
sbb
lock
pop
pop
out
loope
sub
mov
pop
inc
clc
add
or
fwait
jno
ficompl
inc
and
push
adc
cmp
cmp
or
ficoms
pushf
stc
sub
pusha
jmp
insb
roll
idivb
scas
adc
mov
or
in
ficompl
xor
mov
push
out
add
sbbb
jg
pushl
lea
push
or
mov
sbb
sub
jbe
sub
cwtl
and
repz
pop
out
add
mulb
sub
out
mov
adc
push
jns
sbb
cmp
mov
andl
arpl
xor
xchg
jne
pop
cld
pop
test
pop
clc
data16
cmc
mov
dec
shl
hlt
mov
or
sahf
push
jle
mov
jg
or
push
xor
gs
ljmp
xchg
mov
push
sti
lock
add
ljmp
push
xchg
inc
push
pop
test
ret
add
into
cmp
add
pop
xchg
sbb
jo
out
xchg
outsl
mov
clc
test
cmovge
or
mov
aam
icebp
sbb
in
xchg
sub
or
push
or
jle
out
mov
cli
insb
and
adc
inc
sbb
or
xlat
xorl
dec
mov
fsubrs
sub
ljmp
mov
ljmp
mov
fisttpll
andl
sbb
xor
fnclex
and
int3
popa
or
repz
xor
jnp
sbb
or
push
add
pop
mov
inc
adc
fldt
test
adc
fldl
fwait
sbb
and
adc
fld1
fdivp
jb
out
xchg
pop
test
or
mov
dec
dec
shr
fsin
cli
and
inc
je
sbb
adc
test
clc
xchg
scas
push
repnz
jo
xchg
mov
xchg
test
push
and
cmp
repz
inc
outsl
mov
out
add
jnp
call
mov
jbe
imul
add
pusha
sub
push
movsl
or
jmp
fidivrs
and
shlb
mov
pusha
xchg
lods
mov
or
lock
mov
test
jns
inc
sbb
fisttpl
jae,pt
add
stos
lcall
dec
adc
xor
fsubrs
push
out
add
jo
jo
filds
divb
or
in
in
ficomps
cmpsl
xor
psubq
xchg
sbb
inc
push
lret
in
out
sbb
push
inc
adc
sti
pop
dec
aas
in
adc
enter
or
test
loope
or
inc
add
movsb
xchg
in
lcall
popf
jle
hlt
pusha
xor
cmp
rorl
push
add
ret
push
sbb
push
xor
jo
sti
in
xchg
xor
push
dec
or
fidivs
dec
push
or
nop
andb
cmpsb
add
in
sub
push
add
add
add
or
test
daa
scas
cwtl
pop
test
jne
push
mov
mov
pop
push
outsl
shrl
or
xchg
add
call
jle
or
fildll
rcrl
inc
fs
add
pop
or
in
add
dec
xchg
loopne
lea
pop
ret
mov
shl
les
add
not
test
xor
jmp
adcl
repz
int
outsb
inc
dec
cltd
insb
pop
and
mov
out
mov
hlt
or
inc
push
into
testb
jbe
dec
mov
add
or
sahf
cs
jb
cmp
sbb
ljmp
adc
and
fcomi
jb
incb
jae
dec
mov
or
adc
mov
and
xorb
push
jge
push
mov
test
roll
mov
sbb
sub
mov
loope
dec
stos
inc
in
inc
cmp
addps
pop
aam
xor
cmp
sub
push
imul
mov
jb
cli
out
cli
out
and
push
cld
not
sahf
inc
pop
lock
popf
je
mov
and
push
ds
fwait
dec
adc
push
or
and
lock
xor
and
addb
add
xchg
or
jl
mov
ss
jb
popa
adc
mov
popa
pop
jl
push
mov
hlt
test
adc
push
orl
lcall
lea
mov
cli
scas
jbe
sub
jge
cmp
pop
js
cmovnp
pop
xor
sbb
push
mov
fimuls
fiadds
pusha
xchg
nop
inc
mov
sbb
ret
jecxz
dec
sbb
mov
jecxz
loopne
cmpsl
cmp
mov
xchg
inc
mov
add
add
out
orl
andl
stos
stos
mov
push
out
loop
lea
outsl
xchg
mov
out
and
adc
xchg
sub
pop
cld
sbb
nop
data16
jge
jle
adc
es
scas
shl
jo
and
or
sbb
and
xchg
or
sahf
enter
cmpsb
push
push
in
sub
or
fdivr
and
mov
sbb
xchg
in
dec
cs
repz
pusha
fs
inc
jb
and
adc
jmp
sbb
sub
inc
jle
insb
repz
insb
adcl
jl
hlt
mov
inc
mov
leave
push
adc
into
mov
cwtl
or
test
mov
test
add
popa
lds
jmp
mov
or
std
fwait
cltd
push
ds
or
jmp
xor
add
mov
ja
call
sar
or
enter
cmp
ja
add
mov
fs
fwait
mov
mov
add
xor
push
call
or
fisttpll
xchg
scas
pop
ds
pop
pop
ficompl
mov
jmp
adc
push
lock
mov
or
or
negl
test
mov
mov
cmp
cmpb
cmp
jle
cmp
push
xor
xor
int3
push
jmp
dec
push
hlt
in
push
mov
mov
int
and
push
callw
jo
add
push
jmp
and
or
mov
jae
stos
popa
pop
pop
mov
ret
mov
sarl
jbe
pop
jge
pop
cmp
out
jge
mov
add
mov
dec
jae
imul
sbb
mov
jmp
and
mov
fisubrl
call
xchg
lea
cmp
mov
or
cld
mov
in
orl
jnp
sub
and
xor
add
stc
sub
cmp
mov
insb
xchg
mov
mov
xchg
scas
call
mov
fmuls
mov
mov
cmp
div
pushl
cmpb
jl
incb
dec
mov
jmp
cmp
repnz
adc
or
dec
cmpl
je
jmp
inc
adc
psubd
imul
mov
ds
cmp
dec
popa
mov
jecxz
add
pushf
jmp
push
cwtl
mov
xor
inc
pop
scas
push
mov
dec
push
add
seto
xor
inc
mov
cwtl
jge
neg
add
mov
cmpsb
push
sbb
test
aad
inc
jl
cmp
adc
lock
movsb
cmc
sub
push
cmp
out
in
test
enter
mov
xor
adc
stos
adc
pop
les
inc
in
dec
inc
les
addb
mov
mov
and
push
outsb
add
stos
call
cmp
jb
mov
dec
mov
cmp
or
pop
rorb
mov
mov
into
mov
mov
pushl
lock
and
and
adc
nop
frstor
lret
push
and
adc
sbb
ja
out
lret
ja
mov
pop
mov
out
push
sbbl
add
inc
int3
cmpb
jecxz
jne
enter
out
and
jne
test
into
jne
fwait
add
or
cmp
cmp
movsl
sbb
jne
jge
jne
add
adcb
hlt
shrb
test
rcrb
xor
cmp
add
les
movsb
push
add
sub
jns
hlt
scas
icebp
dec
lock
adc
loope
shlb
shrl
insl
lcall
data16
mov
stc
jg
sbb
imul
mov
mov
sbb
cmp
gs
insb
mov
testb
shr
dec
or
push
jge
xorb
into
and
pop
or
adc
inc
mov
les
jno
sahf
add
notb
je
out
cmpsb
fiadds
insl
dec
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
add
jo
loope
jne
insb
mov
das
int3
in
mov
mov
push
ja
aam
loope
add
sub
dec
cmpsb
insl
xchg
push
add
fisubl
cmp
pop
es
add
in
fiadds
push
call
movsl
jmp
fidivl
pop
pop
jle
jb
push
push
loope
adc
fmull
jo
dec
ja
orb
sbb
or
imul
sub
lods
lds
push
push
into
jmp
scas
push
jnp
pminsw
add
jae
jno
les
dec
cmp
inc
call
xorb
cwtl
fidivrl
lret
das
sub
add
jo
fiadds
sub
data16
add
adc
les
bound
inc
add
or
mov
cmp
pop
fdivrl
and
sahf
out
out
daa
push
cmp
sahf
out
pop
cmc
movsb
push
lods
inc
and
mov
jae
push
lret
fbstp
inc
sub
mov
jne
cmp
add
lea
xchg
scas
inc
mov
mov
mov
or
rorl
in
pop
cmp
aad
mov
in
mov
or
sbb
pop
pop
sti
scas
mov
xchg
adc
inc
testb
inc
ss
cmp
je
or
pushl
rorb
cmp
je
mov
lock
pop
jne
dec
mov
inc
inc
mov
out
cmp
fldz
call
add
add
fprem1
rol
sub
je
andb
or
add
hlt
cmp
call
add
adc
popf
xor
lock
and
xchg
cmp
je
divb
and
push
add
adc
jno
in
xchg
je
daa
and
lcall
sbb
test
add
pop
add
or
ljmp
inc
fdivs
dec
cltd
pusha
fisttpll
or
add
inc
adc
xchg
clc
cmpsb
test
movsb
push
push
jle
test
lahf
push
cmpl
addl
in
clc
add
mov
mov
mov
hlt
mov
mov
jne
movb
nop
inc
dec
jge
inc
jle
cmp
xchg
cmp
outsb
add
iret
dec
mov
add
inc
sbb
push
add
lcall
gs
test
sub
add
add
shlb
xor
jge
dec
add
pop
hlt
pop
mov
jb
inc
sub
mov
inc
dec
jns
les
mov
xchg
mov
lret
sub
xor
push
or
ljmp
add
bound
add
adc
mov
dec
nop
es
inc
scas
mov
push
into
jg
inc
adc
push
rcl
clc
popa
and
dec
add
push
rclb
out
outsl
pop
sar
sbb
loope
clc
cmp
dec
adc
jge
mov
ror
add
adc
dec
xor
shlb
enter
mov
xchg
push
sbb
dec
adc
and
push
adc
cld
flds
popa
mov
dec
mov
sbb
popa
sbb
or
stos
clc
adc
call
fbstp
pop
stc
mov
xchg
xchg
fldl2t
call
in
add
adc
sbb
cmp
adc
pop
xor
inc
cld
or
mov
and
es
test
mov
ljmp
loopne
jnp
xchg
mov
lock
sar
lea
push
out
sbb
lcall
testb
cwtl
sarw
enter
loopne
push
push
ret
or
xchg
add
push
xor
std
xchg
push
mov
add
ja
sub
dec
je
cli
mov
leave
and
add
mov
add
addl
xchg
xchg
and
push
into
pusha
jecxz
ret
jecxz
push
rcrb
sbb
pop
aas
mov
jecxz
mov
jg
ret
daa
xor
or
jne
mov
cmp
sahf
test
mov
lods
out
icebp
cmp
test
js
inc
mov
inc
add
cwtl
dec
and
or
or
adc
sbb
mov
ja
sub
lret
jbe
sub
adc
add
dec
jo
cmp
push
movswl
les
xor
xchg
loopne
push
mov
ret
mov
insl
cld
add
dec
shrd
push
jle
daa
xor
cmp
ss
xor
sbb
clc
mov
lea
cmp
nop
stc
inc
es
hlt
pop
add
dec
jmp
xchg
clc
dec
xor
jb
mov
xor
or
clc
incb
push
adc
and
push
add
or
pop
dec
in
adc
xorl
and
and
xchg
mov
pop
sbb
js
jg
jb
push
sub
or
cld
mov
shl
fidivrl
rorl
call
inc
shll
push
pop
popf
and
js
add
aas
sub
shll
push
or
jmp
jg
lods
jb
fs
mov
inc
dec
pop
or
out
inc
repnz
or
push
pusha
inc
fldenv
push
add
stc
mov
jecxz
fidivl
lahf
es
pop
insl
scas
cmpsb
cmp
popf
je
int
adc
arpl
adc
loopne
ret
call
loop
roll
mov
and
sub
mov
and
inc
ss
add
adc
sub
loopne
jge
mov
loopne
ljmp
outsb
scas
fisttps
push
mov
push
inc
sbb
or
fmuls
out
into
mov
and
adc
pop
nop
test
inc
or
mov
rcll
nop
je
push
in
fs
jne
cmp
dec
mov
dec
inc
lret
jbe
sbb
mov
inc
rorb
add
lea
mov
sbb
enter
fldl
rcll
push
jmp
insl
cmp
add
cld
jl
subb
sub
mov
ljmp
incb
adc
sbb
loop
mov
in
jmp
xor
ds
pop
dec
je
jle
gs
or
inc
dec
int
pop
data16
xchg
cmpsl
sbb
add
je
in
pop
sbb
inc
je
dec
add
jmp
xor
push
repnz
cmp
pop
dec
in
add
roll
dec
push
pop
or
mov
loopne
dec
fistl
repz
adc
mov
mov
dec
adc
call
jne
fmull
insl
loop
xor
sbb
in
push
cli
sub
repnz
inc
pop
out
shrl
icebp
dec
rol
ret
xor
nop
das
xchg
cmpsl
xor
xor
insb
pop
clc
incb
xor
inc
sub
pop
dec
push
add
add
ja
mov
dec
jmp
pop
or
shll
sbb
cmp
icebp
jp
pop
xor
and
and
add
hlt
int3
mov
pop
dec
adc
cmp
pop
dec
dec
xchg
add
pop
je
xlat
add
je
lods
dec
cld
ja
enter
push
sub
shrb
cltd
das
sub
sub
imul
setbe
add
mov
movaps
dec
out
mov
cmp
int
jbe
add
pop
jp
add
mov
popa
iret
rorb
inc
mov
adc
shl
jmp
insl
sbb
mul
pop
or
mov
cmpl
pop
movsb
out
push
or
push
ds
push
mov
fsubs
add
and
inc
add
imul
jmp
pop
pop
jp
mov
lods
dec
repz
sbb
mov
xchg
add
jnp
jns
lret
mov
pop
mov
sub
pusha
mov
dec
fs
lock
jb
jecxz
in
in
jle
or
mov
cmpsb
je
dec
add
jnp
sub
mov
pop
push
dec
out
pop
cmp
bound
mov
mov
mov
pop
xor
mov
xchg
xor
sbb
in
decl
or
adc
hlt
jmp
or
jmp
mulb
mov
hlt
cmp
incl
adc
inc
sbb
adc
test
ficompl
movsl
and
or
insl
cmp
jne
dec
arpl
xchg
in
rcrb
daa
add
movsb
int3
cwtl
jne
testl
test
ds
add
xor
pop
outsl
push
sbb
fwait
test
inc
pop
push
jo
inc
in
push
cmp
jg
ror
pop
push
or
mov
into
push
push
xchg
xchg
or
jbe
xchg
push
stos
fdivrs
jns
pusha
push
cmp
call
adc
out
outsl
ret
lods
or
dec
mov
jp
jo
push
dec
and
add
add
int
dec
pop
out
iret
mov
inc
pushf
push
sub
dec
add
mov
aam
push
fstpt
out
je
pop
and
imul
ret
jo
stos
jecxz
push
fwait
and
gs
in
xlat
call
jge
cmp
sahf
jge
imul
jno
in
jno
cmp
push
psubusb
xor
jb
wrmsr
sbb
sbb
lcall
jl
dec
fiadds
cmp
and
xor
adc
add
lcall
inc
jmp
xchg
inc
push
dec
addr16
ss
ret
ffree
dec
insb
or
stc
inc
and
inc
inc
mov
lock
sub
push
adc
jmp
jbe
test
outsb
mov
push
std
mov
jmp
adcl
cld
jo
sub
adc
push
fstpt
ret
pop
jne
mov
push
sbb
mov
adc
pop
testl
inc
sub
mov
adc
adc
fsubs
fmull
jge
mov
sub
lea
and
rclb
jo
xlat
jge
leave
clc
xchg
jmp
mov
dec
jbe
and
adc
or
mov
mov
pop
cld
adc
sysexit
ror
orb
ficomps
shl
loop
xor
mov
jmp
add
arpl
fwait
js
test
sub
sbb
xor
jno
test
jno
notb
inc
in
sub
xor
fadds
ljmp
inc
pop
or
add
sub
enter
lret
mov
insb
cmp
setbe
push
sub
dec
lods
jo
adc
fwait
cwtl
cmp
add
decl
jmp
xchg
xor
ret
and
es
inc
jno
outsl
sub
jge
adc
and
dec
adc
sbb
aaa
push
test
mov
and
push
xchg
inc
mov
pop
add
decl
js
lret
adc
add
call
pop
add
or
push
sub
mov
sar
cltd
leave
shr
or
mov
add
add
or
imul
imul
push
bound
sti
in
stos
mov
cmp
sbb
fildl
jo
inc
bound
cld
push
add
or
out
jne
fnstcw
inc
rolb
lret
loopne
in
add
lea
mov
shr
cmp
sub
jo
test
fimuls
or
push
push
addb
xor
data16
int3
xor
dec
adc
dec
adc
sbbb
out
xchg
adc
inc
rolb
out
xchg
and
in
roll
shr
adc
shrl
mov
push
cli
test
mov
or
shl
andl
adc
les
fiadds
xchg
call
stos
cmp
pop
pusha
imulb
or
test
adc
lret
test
je
je
mov
push
or
dec
adc
and
das
js
dec
inc
cmp
outsb
hlt
mov
popa
movsb
ficoml
popf
ret
cmp
leave
hlt
das
pushw
add
cld
jo
lock
divl
in
xchg
test
fldl
jb
cld
sub
jne
add
call
scas
push
ljmp
adc
dec
out
jmp
and
xchg
aam
dec
cmp
mov
jmp
adc
hlt
fucomp
mov
jle
push
xorl
ja
les
pop
adc
jle
add
lret
out
leave
inc
xor
dec
dec
cmp
lock
jl
fdivl
cmpb
jl
xor
cmpb
idiv
add
xor
add
push
mov
and
lds
scas
subb
loopne
iret
inc
and
mov
inc
adc
rol
push
and
adc
xchg
or
cmp
sub
jmp
in
adc
dec
add
add
call
fildll
stc
and
aas
sub
ret
enter
out
or
test
jne
cmp
flds
mov
or
mov
dec
pusha
mov
loope
dec
jo
or
hlt
scas
or
ds
aam
xchg
pusha
and
adc
jbe
jge
aam
adc
jl
push
inc
jne
movsw
xor
insl
leave
xor
outsb
rorb
or
les
or
xchg
out
xor
or
pop
mov
stos
xor
in
sub
inc
inc
out
sahf
loopne
out
neg
neg
sbb
sub
dec
repnz
sbb
cwtl
sub
adcl
push
lods
int
lods
push
inc
and
fsts
xor
xchg
fcomi
sbb
nop
mov
sbb
int3
pop
pop
test
mov
mov
dec
jne
pop
pop
pop
nop
nop
movb
js
mov
jae
or
jae
lods
rcl
ljmp
dec
and
mov
adc
mov
inc
pop
dec
idiv
and
cld
je
cli
and
bnd
rcrb
mov
add
mov
xorb
jmp
pop
add
sub
jno
sbb
adc
adc
inc
dec
dec
push
push
jne
inc
lahf
push
aaa
push
loop
xor
jp
mov
push
add
and
cmp
jbe
jns
aas
and
adc
aam
push
sub
sub
push
jp
fisubs
inc
pop
and
orl
add
pshufw
les
adc
adc
sbb
ret
adc
je
mov
mov
jnp
addl
push
sahf
and
fsubl
out
and
xchg
dec
pushl
dec
sahf
or
ss
and
cmpl
adc
or
add
fidivrl
sub
jne
and
or
jbe
testb
pop
aas
popa
std
bound
or
je
jne
lock
sbb
inc
mov
mov
dec
es
mov
je
lcall
mov
push
cmp
ja
add
sarb
out
out
adc
cmp
jne
jge
xor
adc
mov
push
mov
mov
sbb
icebp
sahf
xchg
pop
push
rcr
mov
or
cmpsb
ret
outsl
push
mov
ret
cwtl
push
pop
mov
mov
and
or
test
push
movb
icebp
or
jmp
not
je
mov
push
push
xor
mov
loopne
les
sub
lea
lret
xchg
push
adc
add
or
lea
fwait
add
cwtl
pop
dec
or
jne
movsl
push
repnz
xor
cltd
cmc
das
adc
js
cmp
xor
cltd
ja
arpl
aad
dec
sbb
pop
pop
and
sub
add
cmpsb
inc
sub
ljmp
sbb
cmp
push
xchg
fcom
call
movsb
daa
sub
xor
sub
inc
sbb
or
pop
sub
daa
addl
sbb
in
sbb
aad
shlb
loopne
cmp
add
sbb
add
jg
jns
cmpsl
std
mov
push
rcl
rcl
out
sahf
out
xlat
fcomp
dec
sub
aas
nop
mov
push
fiaddl
sub
loop
callw
xorb
sub
cmp
add
add
mov
sub
mov
dec
push
add
push
adc
inc
loope
add
and
jge
ret
orl
fs
add
in
cmp
call
cmp
es
push
xor
sub
insb
iret
push
push
fistl
sbb
push
pusha
xchg
nop
jo
add
shlb
insb
pop
or
imul
or
decl
lret
add
imul
lea
aaa
or
in
sar
inc
dec
movswl
popa
outsl
loope
hlt
fcmovnbe
xchg
push
outsl
loope
dec
mov
out
loop
repz
push
adc
loopne
push
mov
push
mov
dec
adc
or
sar
fisubs
insb
scas
dec
push
imul
sub
test
jo
mov
dec
inc
fmul
repz
or
cwtl
add
inc
or
ljmp
leave
add
push
loope
into
and
lea
pop
sbb
in
lods
fcmovnbe
jae
movsl
mov
ja
push
mulb
add
inc
mov
mov
mov
inc
negl
in
sarl
lods
loopne
inc
or
or
add
pop
test
jne
out
popa
shll
rolb
push
mov
inc
push
push
push
or
fsts
faddl
cmpsb
adc
dec
push
add
movsl
ja
enter
and
cmp
push
outsl
popa
pop
sahf
shll
cmpsb
jns
addl
mov
jge
jl
cmpsb
imul
and
rorb
loope
add
jle
and
add
jno
add
inc
rolb
shrb
mov
cmp
mov
or
dec
push
push
lret
int
pop
rol
inc
inc
das
lcall
daa
mov
inc
lods
ss
shrl
insl
adc
pop
mov
loop
jmp
or
dec
push
dec
jns
test
lock
repnz
repz
push
push
cli
cli
inc
cli
testb
mov
mov
or
loopne
jnp
push
dec
mov
jnp
sbb
push
movb
adc
inc
ret
xchg
mov
dec
dec
lret
jns
add
mov
mov
mov
rolb
xor
dec
dec
cmp
idivb
cmpsl
mov
xor
sbb
cmp
and
repnz
shlw
loop
out
out
shrb
mov
inc
out
inc
sbb
add
jb
mov
ret
xor
call
xor
push
or
and
shlb
fdivrs
aam
fldcw
test
dec
ss
popa
cmp
push
adc
lods
dec
pushf
adc
or
or
adc
call
cmp
push
add
ret
fisubl
lcall
test
es
insl
ret
mov
lods
rolb
cltd
add
in
idiv
sbb
mov
sbb
jb
inc
sbb
in
negb
xor
enter
lock
inc
mov
stc
jge
xchg
sbb
mov
dec
leave
pop
jmp
add
jne
add
in
movsb
aaa
lods
loopne
inc
popa
cltd
mov
into
mov
adc
sub
or
sub
insb
sbb
lahf
mov
scas
out
inc
add
btr
and
inc
add
add
push
nop
cmp
adc
out
pop
jle
out
adc
in
dec
andb
into
push
push
pop
shr
inc
loop
popa
loopne
or
mov
cmpsb
mov
test
jne
sbb
neg
and
sub
sub
call
inc
je
loopne
loopnew
pop
pusha
call
pop
add
and
cmp
mov
push
jo
mov
adc
sti
out
lds
daa
push
and
xchg
mov
ljmp
cmpsl
sub
or
mov
lret
pusha
add
enter
mov
adc
nop
sbb
push
mov
xchg
pushf
xabort
negb
mov
add
enter
mov
cmp
push
shlb
add
int3
out
adc
roll
jne
cmp
shll
sarl
in
into
or
mov
inc
ljmp
jmp
mov
decb
mov
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
and
mov
bnd
add
pop
xchg
sbb
dec
add
add
fadds
lar
pop
add
ret
ja
outsl
mov
jp
jne
dec
mov
jb
lcall
adc
clc
push
ret
and
add
push
add
jbe
iret
xchg
jge
add
pop
enter
sub
test
and
jp
xchg
mov
mov
xchg
lret
xchg
and
aas
ficoml
push
jb
addr16
test
scas
or
into
ror
mov
sbb
je
push
add
or
pop
pop
scas
add
xchg
sbb
dec
adc
lods
add
aam
add
mov
pop
testb
in
sub
add
test
inc
pop
mov
mov
iret
sbb
into
pusha
inc
icebp
pop
pop
adc
mov
rcrl
mov
testb
enter
shll
or
or
inc
adc
loope
ret
pop
mov
inc
push
imul
lret
or
push
lcall
push
subl
inc
add
or
mov
insl
sub
pop
pop
mov
mov
cmc
adc
xlat
dec
pop
outsl
push
fdivrl
mov
adc
xor
es
and
and
sub
inc
jge
js
adc
cmp
enter
scas
push
push
and
add
cld
cld
adc
xchg
xorb
add
and
inc
stos
jg
cmpb
sub
into
xchg
and
loopne
sbb
jge
dec
cld
or
mov
stmxcsr
pop
dec
pusha
xorb
pop
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
test
pusha
inc
pop
sub
fsubp
or
pop
cwtl
pop
imul
or
shlb
or
pop
std
daa
mov
push
mov
popa
lock
or
pop
lcall
add
leave
lahf
pop
test
xor
adc
add
add
bound
and
flds
test
sbb
je
and
push
test
and
lcall
sbb
lret
push
mov
lret
pop
or
xor
xchg
jo
xor
push
scas
adc
fidivl
xor
dec
xchg
sub
sub
sub
mov
fmul
cmp
pop
adc
push
mov
sbb
cmp
and
add
test
sub
jmp
es
fbld
into
stos
cmp
jle
and
daa
or
je
addb
loop
push
sbb
jl
shl
cmpsb
pop
or
fdivrs
mov
dec
fisttps
loopne
jp
xor
aas
stos
mov
aam
xlat
or
iret
or
push
adc
cltd
subl
cwtl
orb
adc
sub
jmp
mov
fmull
rorb
add
mov
out
je
add
call
rorb
lret
inc
inc
inc
lret
sahf
call
jle
inc
xchg
imul
xor
outsl
adc
or
cmp
loope
jmp
jmp
pusha
daa
leave
js
push
sbb
incb
aam
fisttps
jmp
out
add
test
rol
jle
stc
repz
inc
inc
movsl
and
mov
add
and
sbb
je
xchg
loopne
mov
pop
push
imulb
adc
andl
out
or
sub
ficompl
inc
pushl
and
rol
movl
rclb
push
mov
push
je
and
popf
ss
rcr
push
js
xor
or
fldenv
popf
iret
jge
sbb
sub
add
imul
jo
or
adc
push
hlt
sarl
and
cmp
lret
xchg
sub
in
cmp
sub
inc
xchg
sbb
pop
push
and
mov
jae
add
scas
dec
and
and
imul
in
adc
sub
push
lods
push
sarl
xchg
sub
call
cmp
adc
dec
push
lret
add
inc
addr16
add
sub
or
jae
add
add
stc
jmp
in
pop
or
mov
and
int
sbb
test
xchg
sub
or
inc
fsubrl
pop
pop
ret
jmp
xor
adc
jl
xchg
lcall
push
inc
add
add
lods
dec
lods
and
rclb
jmp
xchg
xor
loopne
dec
xor
add
subb
xor
mov
pusha
or
fcompl
movb
cmp
in
pop
add
xchg
jecxz,pn
mov
aaa
fcomps
ret
push
clc
mov
jnp
cmp
or
adc
mov
mov
cmp
imul
dec
shll
mov
lret
rcl
cwtl
aaa
pop
or
push
test
mov
fimuls
or
cwtl
ret
call
mov
or
add
push
pop
jl
adc
xor
loop
jne
ss
int3
jge
rcll
js
lods
in
sub
add
lock
dec
mov
lret
nop
shll
fsubs
jmp
cmp
shrl
push
jmp
dec
loop
jp
fs
fisttps
xlat
cmp
ss
push
dec
and
call
mov
sbb
sbb
sbb
inc
js
or
cmpsb
and
out
or
inc
sar
fcompl
mov
adc
xor
inc
jmp
sbb
mov
sbb
inc
pusha
fldenv
imul
shlb
push
or
loop
lcall
mov
adc
push
lock
popa
incb
rcr
sub
addb
lock
inc
inc
ds
push
mov
mov
and
or
cmp
test
or
sbb
into
rorl
sub
pop
xchg
dec
cmpb
add
xlat
push
push
daa
das
popl
mov
pop
and
test
cltd
shlb
dec
mov
push
mov
testl
cli
push
arpl
cmp
dec
ror
test
out
mov
push
jg
bt
jmp
pop
dec
rorb
sbb
scas
mov
cmc
int
xchg
in
mov
cvttps2pi
movsb
push
and
jle
mov
pop
pop
je
jo
cmc
popa
out
fld
fnstenv
fists
cmp
popa
fnstcw
fsubrp
test
jns
fstps
push
icebp
lahf
jnp
insl
incl
xchg
rolb
jmp
cmp
scas
sbb
adc
ret
addr16
adc
pop
aad
sbb
or
push
mov
xor
out
jbe
adc
arpl
or
mov
popa
push
dec
ret
add
xor
or
xor
pop
lcall
inc
add
dec
js
pop
pop
fidivrs
fs
cld
mov
cld
leave
inc
sbb
dec
add
dec
add
inc
bound
add
sarl
adc
inc
inc
das
pop
push
clc
inc
into
xchg
leave
into
mov
outsb
jbe
adc
adc
cmp
shr
inc
and
les
push
es
add
adc
or
rcll
inc
out
lods
lods
cmpsl
stos
sub
nop
xlat
in
mov
push
cmpsb
sti
sbb
ret
and
mov
arpl
stos
inc
xchg
pop
pop
nop
fldt
jp
shlb
addb
xor
sbb
mov
cwtl
es
enter
fstps
mov
push
dec
cbtw
pop
mov
outsl
mov
dec
or
mov
sbb
imul
imul
xlat
pop
test
negb
in
sub
or
sbb
js
int3
les
adcb
xchg
and
xor
cld
arpl
imul
xchg
xorb
cmp
icebp
js
loope
call
sbb
fists
popa
xchg
or
add
add
push
jge
test
add
inc
or
mov
sub
sub
lret
mov
sbb
icebp
cmp
ja
jbe
add
sub
sub
xor
push
push
push
jle
mov
cli
mov
mov
adc
jle
bnd
imull
cmp
adc
ror
sarb
sub
add
xchg
rcll
jmp
push
pop
rcl
cwtl
jne
sub
call
adc
lock
fadds
rcll
xor
add
sbb
push
mov
pop
pop
ss
cwtl
dec
clc
shr
inc
dec
in
sub
in
push
cmp
dec
lret
pop
sub
mov
mov
jb
mov
inc
pop
push
cmp
pop
push
ret
inc
add
fisttpll
stc
fcomip
add
inc
pop
mov
add
and
rol
aad
scas
sub
adc
daa
in
or
push
jg
loop
push
add
pop
test
mov
push
inc
imul
loopne
movsb
mov
or
mov
out
ret
xchg
sub
push
jmp
adc
and
push
mov
adc
add
addb
or
test
or
mov
in
add
dec
inc
loopne
sbb
test
mov
nop
leave
mov
and
add
sbb
mov
adc
xchg
hlt
or
jg
pop
xor
mov
jae
dec
add
and
pop
insl
push
aad
cmp
jne
je
test
cmp
fisttpll
push
jl
shl
dec
or
jbe
push
stos
pop
jbe
or
insl
cmp
adc
sbb
ljmp
inc
out
call
xchg
xorb
mov
test
dec
and
out
jmp
or
dec
jmp
sahf
test
sub
push
in
ret
dec
stos
or
in
cmp
mov
adc
in
cmp
mov
and
inc
sbb
jb
sbb
mov
sti
push
in
cmc
fs
out
hlt
adc
arpl
xchg
nop
enter
mov
xlat
and
cmpsb
ret
add
stc
jno
mov
lods
jne
cmp
cwtl
dec
lahf
xor
gs
push
sbb
fildl
mov
push
bndstx
jl
and
xor
or
add
add
outsb
or
jg
xor
or
pop
ss
sarl
testb
pushf
sbb
add
sub
add
xchg
pusha
lock
nop
enter
adc
test
pop
mov
or
add
lahf
jns
cmp
pop
jl
sbb
add
mov
lock
leave
xchg
or
fstl
test
movb
mov
fneni(8087
test
fs
stos
cmp
adc
fldcw
adc
add
js
inc
ret
gs
les
fistps
inc
push
mov
xor
or
fdivs
mov
mov
icebp
aaa
popf
mov
outsb
loope
fdivs
aaa
inc
mov
iret
pop
dec
je
test
int
sub
popl
cmp
pop
aaa
in
push
cmp
mov
adc
inc
ja
inc
or
sbb
or
je
nop
jle
sub
xorl
divw
in
xchg
xor
adc
cmpsl
xchg
adc
orl
inc
outsb
fcomps
cmpl
adc
cmpl
icebp
call
inc
push
pop
cmp
dec
xchg
fisubs
jns
ret
xor
fidivs
and
pop
hlt
fcomp
jb
mov
in
dec
mov
inc
jge
or
push
or
test
testl
mov
lret
fs
cld
or
fsts
add
mov
pushl
inc
cwtl
dec
repnz
and
flds
sbb
movsb
sbb
adc
cmp
push
into
cmp
xlat
pop
mov
mov
cltd
aam
stos
sub
cmpl
pop
mov
jl
fwait
imul
mov
ja
popa
xchg
je
mov
cmpsb
cmp
mov
dec
mov
sbb
inc
aas
inc
std
cmp
pop
add
inc
and
popf
popa
pop
dec
mov
inc
add
fisubl
clc
mov
gs
mov
push
and
sbbl
xchg
adc
sbb
leave
cmp
push
add
add
lahf
ja
bound
loopne
fcoms
jmp
xor
or
cmp
inc
pop
xchg
je
adcl
ds
sub
jne
ret
add
lcall
sbb
push
icebp
enter
add
cli
inc
cs
dec
or
cmp
or
addb
mov
test
mov
ficoml
in
aas
sbb
sti
pop
je
pop
cmc
and
pop
mov
cmp
movsl
ret
push
rorb
lcall
ja
push
test
push
ljmp
cltd
xor
mov
clc
fisttpl
jae
push
cmp
jl
mov
inc
sbb
cmp
dec
dec
adc
movsb
dec
hlt
scas
mov
jne
lea
testb
jne
clc
push
mov
lods
push
imul
jbe
ljmp
das
pop
xlat
movsl
sub
mov
loopne
out
inc
add
mov
xchg
mov
or
pop
sbb
stos
insl
inc
enter
icebp
cmp
data16
sub
mov
sbb
dec
mov
sahf
adc
cli
xor
outsl
or
adc
lods
mov
bound
psrlq
sbb
jno
pop
fcomi
jne
jmp
frstpm(287
add
ss
rcll
jl
push
out
gs
adc
jmp
mov
sub
sub
dec
into
pop
jle
ret
push
inc
pushw
and
popf
xor
inc
jp
mov
inc
roll
loop
subl
cmpb
push
sbb
xchg
aam
mov
jno
imul
sub
xor
xchg
sbb
lret
clc
dec
inc
push
and
cmp
xchg
adc
mov
inc
sbb
sbb
or
cmp
dec
ret
push
push
pop
rcl
mov
adc
in
pusha
jbe
add
loopne
sbb
lcall
xor
dec
jg
adc
orl
mov
lret
pop
hlt
mov
mov
loopne
addb
lock
adc
fadds
mov
mov
mov
add
inc
pop
dec
std
pop
inc
je
mov
sbbb
mov
pop
cmp
test
cwtl
mov
xor
cmp
testl
repnz
orb
movsb
push
aaa
fsubs
mov
jbe
inc
lret
stos
push
sbb
mov
push
mov
xchg
mov
sbb
dec
dec
movsb
imul
and
mov
adc
xlat
je
cmp
repnz
shll
testb
scas
aaa
pop
pop
xchg
testb
int3
sub
shl
or
or
push
jmp
inc
addr16
fidivrl
sbbl
je
data16
cmp
sub
push
push
or
lret
sub
push
call
call
and
dec
xchg
popa
and
dec
jge
push
push
or
loop
xor
push
push
push
pop
es
jmp
dec
loop
push
jbe
dec
jmp
pop
pop
pop
add
jmp
cmp
lea
imul
aam
push
sbb
aam
push
orb
int3
add
and
inc
push
jns
jb
aas
repnz
dec
adc
jnp
int
lcall
push
jb
imul
jb
orb
call
fiaddl
in
dec
inc
lock
es
inc
push
jb
jns
dec
imul
adc
adc
int
adc
mov
imul
push
adcb
mov
fdivs
jecxz
pop
cmp
push
je
sub
fadds
ss
inc
je
inc
sbb
add
fsubl
adc
imul
pusha
cmp
das
adc
dec
sbb
jne
cmp
xchg
sbb
outsb
xchg
pop
inc
inc
adc
repz
movsl
jb
pop
dec
dec
push
jmp
dec
xchg
shll
xchg
lcall
pop
xor
cmp
push
cmp
fcmovbe
mov
jl
dec
ret
inc
dec
cmpsb
test
lea
and
sub
insl
fisttpll
adc
sub
mov
jle
in
sub
inc
xor
test
call
gs
xor
ds
pop
test
xor
rcrb
dec
insl
cmp
test
adc
lcall
sub
insb
nop
push
ss
fmuls
or
mov
sbb
outsl
mov
sbb
in
cmpsl
push
stos
push
fwait
call
dec
jle
hlt
add
sbb
stos
push
add
in
and
loopne
adc
rcll
rorb
loopne
add
push
xor
push
loope
lods
or
popl
std
in
addl
xchg
js
cltd
ret
sub
dec
arpl
movsl
in
xor
inc
addl
sbb
adc
jb
ret
leave
call
xor
fcom
and
sub
xchg
fdivl
loopne
leave
mov
jecxz
stos
lock
aam
nop
imul
jecxz
ret
sub
cmp
imul
add
xor
and
adc
and
dec
sbb
and
xchg
dec
xor
xor
dec
xor
cmp
inc
dec
xor
and
fs
jne
insb
add
in
addr16
sbb
add
mov
or
add
cmp
aam
inc
xchg
add
sub
hlt
inc
or
push
and
push
shlb
clc
mov
sbb
add
push
loopne
add
xlat
sub
mov
lock
sub
shll
mov
decl
imul
call
int3
xor
sbb
dec
pop
test
rcrb
xchg
push
or
repnz
jbe
inc
push
call
mov
frstor
movsb
in
in
mov
rolb
les
or
pop
stos
dec
dec
mov
ja
nop
scas
sbb
jnp
inc
ja
bound
xor
jb
loope
jg
js
jb
ret
hlt
or
jp
js
push
or
leave
dec
lock
xchg
fisubl
mov
or
sub
jbe
andl
or
in
adc
cltd
ss
outsl
in
in
call
cmc
fsub
cmp
mov
jo
add
mov
cmp
cmpsl
dec
adc
jp
or
inc
push
outsb
enter
addb
in
hlt
dec
call
call
pop
and
jnp
jno
test
mov
push
jnp
mov
mov
loopne
scas
adc
fdivrs
adc
insl
mov
in
jl
movq
popa
cmp
in
or
sbbl
cmp
add
fmuls
jno
bound
cwtl
push
jge
cmp
dec
push
call
push
push
adcb
jnp
popf
dec
adc
add
cli
mov
stos
lds
sbb
add
cmpsb
movsl
cmp
mov
pop
scas
and
dec
out
jbe
add
inc
jmp
xchg
aam
dec
fcomps
sub
jns
out
test
arpl
push
xchg
cmp
xor
pop
fcom
filds
stos
sbb
push
and
jg
andl
dec
cmpsl
xchg
jmp
jg
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
int3
rcl
and
loopne
sarl
sbb
inc
add
cmp
and
cmp
ret
sbb
dec
loope
dec
add
inc
adc
test
cmpsb
movsl
mov
add
stos
push
and
orl
addb
subb
shll
mov
pop
aas
xor
or
inc
addb
sub
andl
adc
gs
mov
dec
add
ret
lds
xor
adc
dec
mov
push
inc
xor
mov
cmpl
cltd
mov
mov
adc
mov
stos
ret
lds
std
pop
xchg
fildl
fadds
jb
and
push
lods
mov
mov
insb
test
and
add
sbb
add
adc
add
jbe
movb
fwait
icebp
daa
lods
jg
adc
and
mov
pusha
iret
add
push
xchg
test
out
mov
movsb
aaa
fucomip
adc
mov
sub
fwait
in
mov
pop
cltd
dec
jb
dec
pusha
inc
add
jge
je
movsb
dec
cmpsb
adc
stos
and
and
add
shlb
stc
jbe
xchg
dec
test
add
add
pushf
jno
les
and
bound
push
sbb
mov
lret
or
dec
rolb
pop
in
and
lahf
lock
lods
das
dec
dec
and
imul
mov
fmuls
jmp
jl
cld
cmp
mov
add
nop
add
mov
mov
icebp
adc
test
push
inc
aas
sub
adc
cmp
les
dec
daa
inc
pop
popa
hlt
fcoml
push
xor
pop
sub
loopne
sbb
fmull
mov
or
add
fbstp
adcb
iret
dec
mov
fcmovbe
in
js
lahf
pop
incl
cmpsb
sbb
sub
and
and
sbb
popf
add
xor
cmpsl
arpl
call
dec
add
stos
hlt
add
push
cmpsl
add
cltd
cmp
or
sbb
enter
or
jb
and
and
cwtl
test
jb
push
loopne
inc
sub
daa
lret
adc
aaa
push
loop
mov
loopne
shll
adc
sub
inc
repz
inc
or
or
nop
imul
adc
xchg
dec
push
xor
call
jbe
xchg
sbb
or
sbb
lahf
lods
fsubrs
pop
scas
cs
icebp
adc
inc
in
add
test
dec
mov
mov
sbb
inc
lods
adc
in
cmc
je
popa
aam
xor
ficoms
movsl
mov
addb
jnp
leave
and
lds
sub
std
cmc
in
inc
pop
mov
call
pop
lock
pop
mov
add
nop
mov
dec
add
pop
es
movsl
popa
pop
pop
xchg
popa
daa
nop
outsl
call
loope
loopne
sub
add
loope
pop
cmpsb
sbb
arpl
inc
loopne
je
cmp
fdivrl
ficoml
enter
push
les
xchg
and
and
ret
xor
std
int3
aaa
in
shll
sti
movsl
add
enter
nop
andb
xchg
xor
and
inc
push
dec
cmp
lret
lock
fs
push
xchg
mov
pop
mov
mov
inc
es
xlat
or
and
enter
pop
sbb
or
or
or
enter
cmp
lods
dec
dec
outsb
adc
dec
dec
dec
dec
sarb
mov
cwtl
mov
pushf
xor
xor
pop
rolb
inc
pop
add
add
test
sub
push
inc
test
aam
pop
fst
mov
das
and
sbb
sub
mov
imul
imul
popa
daa
fstpt
movsb
xchg
xchg
nop
rclb
pop
test
xorb
inc
scas
mov
mov
stos
pop
pushf
cwtl
bound
inc
push
rolb
pop
mov
fcom
adc
pop
pop
or
imul
push
adc
sub
and
pusha
xchg
add
cs
adc
adc
std
hlt
aad
adc
add
push
mov
mov
and
cwtl
dec
mov
cmp
jne
pushf
loopne
aaa
pop
enter
xor
lods
dec
push
lods
jno
jmp
xchg
and
int3
and
cmp
mov
dec
add
adc
outsl
call
jp
cltd
lahf
test
leave
cmp
test
pop
rcrb
and
xor
call
push
sub
cs
iret
jl
add
mov
sub
in
fmuls
and
jne
je
stos
dec
inc
pop
fwait
pop
insb
adcb
or
push
in
jo
stos
mov
adc
pushf
mov
inc
in
inc
repnz
mov
mov
in
inc
or
fsubl
dec
add
js
popf
add
or
cmp
fistl
aas
in
dec
mov
dec
pop
xchg
lds
jle
test
orl
mov
call
mov
movsl
ret
xorl
adc
loope
xchg
xorl
insl
adc
adc
sbb
imul
iret
fs
mov
fidivrl
test
adc
add
dec
mov
mov
insl
xchg
cwtl
movsb
adc
and
lods
nop
mov
cld
dec
lahf
mov
dec
and
in
jl
test
add
mov
push
and
inc
adc
loope
fcoms
xchg
cmpsb
ss
mov
fadds
test
dec
shlb
fdivrs
add
xlat
xchg
mov
inc
rclb
sbb
mov
std
clc
ret
andl
mov
popa
xchg
mov
aas
fwait
jg
and
and
shll
adc
cwtl
push
es
mov
sub
dec
xchg
mov
or
ss
imul
xor
or
mov
ficoml
pop
les
pop
push
imul
mov
mov
push
and
bound
fcmovne
mov
inc
ljmp
push
mov
dec
sub
cmp
call
orl
push
stos
adc
cmp
int3
pop
es
ror
shlb
cmp
push
add
aas
enter
sahf
aam
sar
int3
sti
xor
lock
rorl
pop
or
arpl
and
fnsave
imul
cmpsb
iret
in
mov
lods
xor
cmpsb
stc
jmp
push
hlt
pop
mov
scas
outsl
sarb
xchg
mov
inc
adcl
adc
xchg
lea
imul
jl
es
roll
sub
call
inc
xor
fcmove
addb
dec
adc
inc
push
rorl
out
fs
pusha
insl
mov
adc
and
lods
pop
out
test
mov
dec
test
test
push
std
rorb
mov
cs
xor
imul
js
sub
adc
nop
cmp
test
ret
in
jmp
push
mov
fildl
sub
xchg
mov
and
je
fisubrl
test
gs
punpckhbw
stos
mov
mov
loop
out
fmull
inc
sbb
rcll
lds
sub
in
loopne
nop
or
cmp
pop
fdivrl
cmpsl
bound
pushaw
je
sub
in
adc
mov
sub
scas
xchg
mov
lock
filds
inc
pop
mov
dec
enter
dec
mov
pop
das
cmp
adc
adc
test
fcoms
sbb
push
scas
lahf
in
push
cmc
push
xor
push
inc
lods
sub
cmp
pusha
mov
fstpt
or
in
cmpsb
int
xor
xchg
jl
shlb
or
push
lods
movsb
scas
xor
sbb
cmp
mov
paddw
in
orb
xchg
pop
fstpl
enter
imul
mov
adc
shrb
cmpl
sbb
mov
ret
and
ror
rcrb
fdivs
sub
and
adc
pop
xor
shlb
inc
jne
inc
xor
mov
jns
and
aam
push
mov
pop
jl
fwait
mov
adc
dec
inc
jno
mov
jb
adc
aad
mov
or
sub
cmp
pop
insl
roll
loopne
mov
movsb
sbb
jae
jbe
xor
call
or
int
lahf
mov
mov
and
push
inc
or
mov
insl
les
inc
aad
mov
clc
je
cmpsb
cltd
dec
mov
pusha
decl
add
js
dec
dec
stos
xor
xor
enter
std
xchg
ret
cmp
or
rorb
orb
movsb
adc
xor
int
nop
and
add
mov
fmull
sbb
gs
arpl
shld
push
inc
aam
add
adc
mov
jb
enter
inc
in
xchg
insl
dec
insl
inc
or
test
push
or
mov
jl
xchg
and
insl
mov
add
add
xor
stos
xlat
movsl
jg
mov
and
movsl
sbb
sub
jnp
shlb
push
aad
adc
fcoml
mov
xchg
mov
add
int3
test
fs
push
or
ficoml
sar
in
push
dec
shrb
xchg
mov
adc
aad
or
test
cmp
movsb
inc
add
roll
rcr
movsl
rolb
sub
adc
dec
push
dec
fiaddl
insb
mov
xor
sub
mov
xor
dec
mov
leave
and
adc
js
fs
mov
adc
cmp
cwtl
xor
cmp
pusha
mov
push
inc
add
add
inc
xlat
mov
jns
sar
test
enter
mov
and
pop
test
push
xchg
jns
mov
sub
xchg
inc
and
loop
ret
sbb
shll
and
dec
pop
outsl
imul
nop
add
add
push
cltd
nop
sti
or
nop
or
fs
and
int
inc
or
enter
mov
int3
fwait
testl
aad
dec
insl
bswap
xor
cmp
and
add
sbb
sti
sbb
testl
sbb
gs
lods
mov
inc
out
mov
popa
and
push
push
addb
inc
xor
xchg
cmpb
dec
mov
mov
mov
xchg
mulps
das
fildl
sbb
xchg
lock
pusha
mov
movsb
imul
add
test
dec
jb
or
fcoms
fcomip
popl
push
inc
pop
pop
sub
push
inc
or
mov
or
mov
rcll
mov
loopne
or
add
xchg
sbb
and
add
dec
in
in
orl
cmp
adcb
lret
cld
cltd
mov
insl
lret
lock
mov
jbe
vmovntps
ficoml
add
xor
add
lahf
test
call
loope
mov
or
dec
js
outsb
loope
xchg
out
ljmp
and
adc
or
adc
dec
rorl
inc
push
pushf
rclb
aad
movsl
iret
enter
pop
or
adc
shr
or
data16
shl
jne
adc
leave
adc
or
in
add
ret
add
add
adc
pop
fadd
sub
ret
pop
ss
mov
pusha
push
inc
mov
xchg
inc
leave
test
cmp
insb
xor
or
adc
fmuls
sub
adc
pop
lds
test
lock
ja
jne
jmp
ss
xor
adcb
mov
dec
adc
and
test
mov
sbb
pusha
adc
je
mov
in
imul
adc
mov
push
xchg
fwait
mov
enter
fimull
inc
mov
imul
pop
insl
pusha
dec
es
fs
pop
dec
movsb
scas
or
loop
xchg
popa
xorl
clc
fmuls
mov
adc
push
loop
rol
jne
dec
xor
fsub
pushf
mov
movsb
lods
xor
mov
xchg
push
insl
mov
dec
adc
fs
aam
enter
cmpsb
sbb
jno
jo
pop
adc
pop
insl
push
nop
jb
inc
mov
scas
sbb
je
sub
dec
adc
pop
incl
je
cmp
clc
cmp
pushf
ljmp
pop
int
mov
or
inc
mov
arpl
int3
aam
lods
and
xor
or
iret
add
push
jnp
aas
add
cltd
mov
lret
xchg
inc
jg
cvtps2pi
test
rolb
sbb
pop
dec
ret
jg
adc
push
loopne
or
fmull
into
pusha
test
add
mov
sbb
jbe
movsl
shll
aam
mov
push
fdivrl
dec
inc
in
nop
clc
mov
mov
xchg
in
cltd
jbe
xchg
pop
enter
js
sub
xchg
mov
mov
xlat
inc
insl
les
adc
mov
push
shrd
push
test
iret
inc
xor
lods
in
sbb
adc
jge
es
in
dec
shl
mov
mov
cmp
cltd
sbb
xchg
ret
ret
ret
das
cmp
xor
in
divl
xor
sub
mov
orb
aam
fmul
jbe
xor
cltd
loopne
clc
in
sbbb
mov
sub
add
and
xor
sub
dec
mov
orb
mov
clc
jmp
cld
popa
xchg
xchg
and
xchg
sub
adc
push
xchg
xchg
add
hlt
lock
add
jne
sbb
push
add
fsub
xchg
push
aad
clc
sbb
push
xor
aam
mov
sarb
rcrl
mov
outsb
lods
mov
jne
xor
fmuls
in
arpl
stc
leave
mov
mov
pop
inc
es
ss
adc
in
push
xchg
mov
lock
cltd
pusha
xchg
dec
es
cmp
dec
shlb
cltd
fs
dec
add
mov
xlat
scas
js
sub
mov
dec
rclb
pop
sti
dec
clc
cli
fidivl
adc
and
pop
xor
add
hlt
cli
and
pop
mov
nop
pop
sbb
movsl
jae
push
fwait
mov
and
jb
cli
call
xor
mov
cmp
mov
cs
xchg
fmull
int3
or
mov
iret
dec
jmp
cwtl
cmp
inc
lea
enter
nop
pop
mov
mov
rcrb
in
test
push
mov
add
ret
iret
call
adc
or
adc
cmp
call
add
mov
inc
push
xchg
es
fidivs
xchg
lods
xor
sti
and
push
ret
and
xchg
lret
or
adc
cmpl
nop
xor
push
xorb
test
and
imul
xchg
les
cmp
sbb
add
insl
iret
mov
shlb
xorb
sti
dec
xchg
adc
sub
fucomip
or
push
pop
inc
adc
pop
add
in
jle
movb
int
fnstenv
push
loope
push
inc
es
cmp
lcall
sahf
dec
dec
push
inc
adc
sub
jnp
andl
add
test
and
push
jecxz
mov
sub
nop
lods
repnz
adc
jge
dec
rcl
inc
lcall
pop
sub
out
mov
sbb
test
mov
fs
cmp
push
lods
cld
stos
jmp
cmpsl
cmp
pop
xlat
mov
std
in
add
cmpsl
mov
inc
add
repz
mov
jo
or
rcrb
fisubl
push
pop
rcrb
sarb
mov
jnp
incb
pop
inc
add
cltd
push
outsl
out
out
add
sub
cmp
inc
dec
incl
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
sbb
stos
or
pop
and
xadd
inc
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
out
mov
cmpsb
loopne
lahf
out
imull
push
jnp
aas
out
mov
mov
je
jb
outsl
arpl
fs
outsl
jo
sbb
in
jb
push
dec
imul
push
jb
gs
xor
cs
insb
push
bound
and
pop
popa
popa
mov
divb
outsb
push
pusha
push
addb
fadds
xor
movsbl
in
aad
incl
sub
or
in
mov
inc
outsl
jb
js
je
jb
gs
cmp
popf
jg
push
jb
add
add
adcb
inc
jb
cmp
je
nop
inc
jne
jb
stos
inc
imul
mov
push
outsb
dec
xor
xor
dec
dec
cmp
out
stos
add
dec
and
jns
out
lcall
adc
push
dec
push
inc
mov
gs
insl
bound
daa
dec
outsl
jbe
xchg
je
adc
jo
sub
xor
mov
dec
jne
xchg
xchg
mov
inc
jo
imul
bound
cmp
insb
adc
cmp
scas
cmpsl
xchg
popl
xor
pushf
jg
addr16
push
jne
imul
adc
and
daa
int3
fimuls
mov
sbb
dec
into
fdecstp
push
andb
jne
xchg
int
pushf
jae
dec
inc
ds
popa
das
jo
push
push
lods
push
lock
jb
mov
sbb
add
push
cmc
lcall
es
sub
sub
sub
cs
xor
pushl
xor
xor
ss
cmp
cmp
cmp
ds
inc
mov
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
ret
xchg
je
push
push
mov
pop
pop
pop
dec
jg
hlt
pusha
popa
bound
gs
imul
jno
cmpsb
sbb
js
ja
movsb
jnp
jge
jg
lret
add
inc
dec
imul
into
dec
add
or
jl
jnp
dec
xor
push
inc
insb
jae
inc
divl
test
push
and
push
jne
dec
xchg
jl
inc
inc
jge
push
fstps
insl
and
jb
mov
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
xor
insb
imul
and
mov
je,pn
in
xchg
adc
and
xorb
clc
loope
mov
mull
and
inc
add
je
or
subb
inc
popa
and
daa
pop
mov
xor
and
insl
inc
lock
adc
inc
cs
loopne
ror
sub
mov
jmp
push
scas
mov
lcall
in
sbb
add
je
xchg
or
and
lret
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
inc
push
mov
add
and
push
add
cmpb
mov
mov
and
femms
aaa
cmpb
mov
inc
add
sub
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
sub
negl
sub
out
xor
int3
or
xor
cmp
push
lcall
xchg
loop
push
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
arpl
xchg
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
pop
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
mov
jg
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
daa
push
push
push
xchg
add
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
inc
jne
xchg
jecxz
xor
imul
xchg
adc
add
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
fnstcw
pop
hlt
and
or
pusha
add
out
int3
mov
or
sub
add
div
in
sbb
addb
add
xchg
mov
add
orb
fildll
cmpb
push
and
sub
jb
lods
fnstcw
adc
push
jo
add
mov
inc
add
mov
push
stos
cmp
inc
inc
int3
js
jo
add
add
loope
cmpl
dec
mov
push
rorb
add
cmp
lea
mov
nop
xchg
xchg
pop
rorl
mov
sub
and
ds
ret
sub
pop
add
daa
pushf
jo
and
daa
pushf
jo
cmp
pop
data16
jo
or
mov
pop
and
sub
dec
push
xchg
scas
dec
add
test
addl
adc
add
add
inc
stos
add
pop
ficoml
add
inc
cmpsb
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
ja
test
loope
addb
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
hlt
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
rorb
adc
and
call
nop
nop
call
shll
add
lcall
mov
push
outsl
ja
cmp
push
jae
jb
bound
jl
mov
ss
popa
fldt
arpl
xorb
fstpt
fstps
lea
dec
mov
outsl
js
push
push
rolb
inc
push
push
dec
dec
and
outsb
insb
sahf
insb
gs
mov
dec
in
sub
jl
daa
add
insb
in
dec
imul
sbb
inc
mov
imul
mov
and
inc
jb
jns
daa
sub
mov
enter
jns
dec
mov
pusha
aad
outsb
rolb
addr16
orl
push
mov
and
mov
add
pop
pusha
inc
aad
mov
push
push
lahf
and
fisubl
dec
clc
pop
dec
xchg
mov
sti
cmp
push
and
xor
pop
es
lds
lock
pop
dec
and
xchg
sub
push
push
jae
cmp
or
push
cmp
call
movsl
jae
addr16
subl
jmp
ja
mov
xchg
insb
adc
fnstenv
dec
testl
dec
cmp
outsb
mov
or
add
js
lods
cmp
imul
call
xor
popa
test
jae
inc
in
mov
inc
xor
jo
popa
jl
mov
jg
sub
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
cmp
push
das
repz
repz
sub
imul
sub
addr16
mov
dec
sub
sub
push
scas
xchg
loopne
inc
jmp
cmp
and
add
pushf
ficompl
cwtl
jb
jmp
adc
fs
jb
imul
mov
ss
lret
push
sarb
and
xor
jo
sub
mov
jl
lahf
jns
neg
sub
mov
inc
add
jns
out
dec
inc
xor
cmp
cmp
in
dec
xchg
jmp
fs
sub
sbb
inc
add
push
or
ds
repz
hlt
out
lock
sahf
divb
push
int
insb
paddb
push
xor
je
fdivp
cmp
loopne
push
push
jns
cmp
ds
xchg
idivl
push
sarb
repz
lods
test
mov
iret
mov
sahf
cmpsl
stc
cmp
cld
out
fdivrl
js
cmp
lock
repz
rcl
sarb
test
inc
and
cmp
ds
in
pop
push
lods
andb
iret
inc
sbb
jmp
push
test
cmpsl
jno
push
imul
lcallw
shlb
jns
push
xor
data16
xchg
shrl
cmpsl
pop
push
das
push
cmpsb
bound
fs
sbb
jae
jb
xor
aas
movsl
ficoms
shrd
sub
call
mov
add
sarb
inc
incl
mov
inc
dec
jae
insb
inc
gs
insb
inc
push
sbb
dec
inc
dec
xor
in
ljmp
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
das
adc
sub
adc
or
into
inc
call
rclb
mov
sar
pop
or
adc
outsb
mov
ds
idiv
cmpl
lret
sbb
jb
das
in
jg
jge
arpl
cmp
adc
dec
scas
jp
adc
in
fstl
mov
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
loopne
out
fcoml
or
scas
int
mov
pop
leave
loop
mov
out
xor
xchg
dec
aam
lods
push
das
fcoms
mov
iret
adc
or
icebp
pop
lahf
nop
adc
repnz
and
push
aas
fcmovne
es
sbb
lret
jo
xchg
sub
mov
out
mov
jns
mov
dec
test
push
push
inc
inc
sub
pop
mov
push
and
lahf
dec
popf
add
das
jae,pn
push
into
mov
enter
cmp
sbb
dec
pop
add
add
dec
and
std
call
dec
and
push
sbb
dec
and
add
sbb
xor
dec
pop
inc
mov
dec
add
dec
dec
inc
pop
cmp
or
imul
xlat
jb
jbe
cmp
sbb
aaa
sbb
xchg
add
pop
cmp
sbb
and
inc
sbb
dec
dec
sub
jg
cmpsb
js
stos
push
pop
cmp
aas
cmp
pop
sbb
pop
imul
divb
and
lods
push
pop
or
sub
adc
imulb
ljmp
push
adc
sub
cmp
pop
or
sbb
std
cmp
pop
add
out
dec
pop
sub
jnp
mov
pop
lsl
cmp
inc
cmovo
pop
cmp
pop
push
xlat
insl
jg
int3
inc
pop
inc
or
cmp
push
cmp
inc
push
test
add
pop
neg
mov
adc
push
push
sbb
aad
aas
leave
xlat
sbb
cmp
or
dec
sbb
addb
lea
xorb
sub
sbb
cmp
ja
mov
cmp
push
and
cmp
cmp
sbb
mov
sbb
dec
cmp
fisubrl
adc
dec
xor
jbe
andl
xor
int3
lods
mov
mov
add
jle
mov
shlb
sbb
mov
add
dec
jl
fidivrs
push
sub
cwtl
mov
scas
push
out
inc
and
gs
fbstp
shlb
push
xchg
cmovl
push
inc
pop
sub
pop
inc
dec
add
aaa
lss
push
cmp
paddsb
in
in
sub
push
inc
or
mov
sbb
add
ja
inc
pop
cmp
lds
decl
inc
movsl
inc
sub
ljmp
pop
adc
dec
nop
dec
cwtl
in
push
cmp
lock
rcr
xor
xor
adc
push
xor
mov
inc
push
push
push
push
jo
mov
jns
xor
jle
xor
push
inc
pusha
xorb
out
jl
xor
xor
pop
rcl
mov
adc
cmp
push
scas
sbb
or
mov
push
mov
ret
aaa
xor
cmp
outsl
insl
mov
outsb
mov
ret
mov
push
popa
adc
lods
or
xchg
add
imul
bound
xor
and
loopne
dec
push
scas
loopne
lock
enter
push
pusha
push
mov
jge
scas
loopne
adc
inc
nop
mov
rcl
ss
jo
jnp
jns
rclb
inc
cs
lock
push
shlb
lds
or
pushf
pop
sub
add
xor
pop
int
cmpsb
pusha
cmp
scas
sbb
sbb
push
mov
xlat
inc
add
cmp
xor
ss
addl
adc
js
scas
push
push
jnp
jbe
mov
addps
in
out
ja
push
inc
push
sbb
push
inc
aaa
add
nop
or
jne
scas
out
sahf
inc
fisttpll
inc
and
lods
cmp
pop
cmpsb
push
add
add
cmp
pop
pop
aad
jb
push
arpl
sbb
add
or
aaa
pop
das
push
pop
mov
cmp
pusha
cmp
push
cmp
lods
fnstsw
add
sub
inc
rcpps
sbb
add
mov
pop
and
in
pop
inc
sbb
mov
out
sbb
mov
testb
push
dec
out
cmp
leave
dec
jne
sbb
sub
ret
fwait
in
sbb
cmp
inc
out
pop
sbb
pusha
adcl
inc
dec
add
loope
jge
fs
cmp
outsb
scas
dec
or
scas
and
test
sbb
fs
push
xchg
mov
pop
scas
out
push
sub
jl
adc
jae
and
pusha
sub
rcpps
mov
and
sub
inc
inc
and
in
gs
push
cmp
adc
daa
sub
cs
mov
cmp
and
adc
cmp
pop
mov
cltd
pop
xor
sub
pop
jbe
fimuls
daa
and
add
sub
ret
popf
inc
dec
and
adc
pop
aas
sbb
fdivrl
mov
scas
xor
xchg
adc
adc
ds
xor
loope
dec
ret
inc
mov
lcall
or
testb
and
sub
push
push
xchg
xor
add
add
adc
xor
push
add
ja
pop
mov
xor
add
jnp
inc
loopne
es
push
imul
cmp
dec
aas
out
pop
in
sub
push
loope
test
int
xor
sti
mov
pop
push
mov
sbb
pop
xor
aaa
fdiv
mov
iret
dec
pop
gs
adc
xor
adc
xchg
push
ds
push
pop
or
cmpsl
pop
loopne
xchg
sar
hlt
inc
or
mov
lods
add
cmp
andnps
and
insb
jne
sub
jo
or
mov
or
xor
je
jo
stos
cmp
shrb
dec
adc
mov
pop
push
mov
cs
int
inc
or
loope
sub
jo
jl
xor
bound
xchg
push
rorb
dec
or
lea
mov
or
xor
or
push
inc
cmp
xor
cmp
jb
test
inc
add
fstps
add
into
pop
and
les
fcoms
lods
cmp
and
xor
and
adc
outsl
pop
aas
adcl
vsqrtsd
dec
dec
aaa
das
aaa
push
cmp
pop
pop
push
jge
negb
and
aaa
and
inc
pop
aaa
sbb
sub
jns
xor
loope
xor
or
dec
jl
inc
and
mov
push
or
mov
sub
cmpsb
mov
push
sti
sub
add
fs
jg
and
add
push
ret
or
add
xor
dec
push
cmpl
add
or
jnp
and
push
cmpsb
and
pusha
add
and
ror
or
icebp
lahf
sub
jmp
lea
mov
ds
mov
inc
push
or
xor
imul
ret
add
pop
add
daa
dec
les
xchg
sbb
sbb
shll
sbb
mov
jae
imul
repnz
je
cmp
test
cmp
xchg
adc
cmpsl
into
dec
sbb
sub
jmp
xchg
jmp
movsb
adcl
insb
outsl
jb
bound
mov
add
inc
pop
push
push
je
adc
mov
and
jae
popa
jbe
cmpsb
shlb
pop
insb
das
inc
jb
daa
outsb
das
or
or
mov
and
mov
add
dec
jae
fmuls
notb
adc
mov
idivl
adc
push
push
xor
mov
xor
sti
jg
or
adc
xor
sub
adc
loop
daa
mov
push
dec
pop
inc
cmove
pop
cmp
sbb
bts
sub
inc
shlb
inc
xorb
sbb
cmovle
push
dec
cmpsb
or
push
cmp
dec
nop
fidivs
mov
push
shl
xor
or
push
push
add
cmp
cli
cmp
mov
sub
dec
push
push
add
mov
push
outsl
xor
ljmp
adc
sub
xor
jbe
mov
adc
or
inc
add
adc
cmpsb
shrb
inc
push
popa
cwtl
sarl
enter
pusha
xor
pop
add
inc
fiaddl
dec
sbbb
loop
addr16
push
pop
pop
and
xor
sbb
fs
cli
push
push
pop
or
and
mov
mov
add
sub
loop
mov
sarb
add
pop
pop
and
pop
inc
sub
jl
cmp
cmp
or
outsb
adc
sub
adc
add
or
dec
cmpsl
sub
dec
mov
adc
add
adc
mov
dec
and
fidivs
adc
push
push
inc
pop
call
repz
cmc
daa
jo
mov
imull
sti
cld
push
std
daa
and
push
jno
stos
mov
mov
pop
das
dec
loop
lcall
in
push
jo
ja
dec
push
cli
pop
push
das
and
cwtl
dec
push
gs
mov
sub
xor
xor
sbb
or
in
enter
dec
out
push
rolb
xor
push
dec
ret
pop
add
fimuls
or
jnp
mov
aaa
jg
pop
lock
das
and
ret
add
adc
sbb
push
pop
ja
or
or
cltd
cmp
pop
cmp
adc
sbb
inc
outsl
xchg
fmuls
adc
and
push
mov
rolb
fstps
dec
pop
pop
notl
adc
push
mov
iret
dec
mov
pop
dec
mov
daa
xchg
dec
testb
jno
and
testb
dec
sub
and
jnp
adc
mov
enter
push
loope
aaa
mov
and
xchg
adc
outsl
pop
popa
pop
daa
xor
adc
push
das
dec
sub
into
fstps
and
cmp
sbbb
dec
sub
movsl
push
lcall
adc
xchg
sub
pop
gs
push
loopne
call
cs
outsb
pop
push
push
add
cmp
sub
xor
add
insb
jne,pt
xor
or
js
arpl
addl
xor
push
jg
adc
inc
or
sub
add
cmp
or
push
add
xor
fbstp
add
xor
dec
push
dec
cmp
cmpsb
add
dec
ds
sub
pop
push
sbb
add
test
sub
movsl
sub
popaw
jo
mov
call
sbb
pop
out
lds
fimuls
xor
or
adc
outsl
in
ret
inc
cmp
and
mov
rcrb
add
adc
add
push
mov
adc
sbb
sti
push
and
and
sbbl
cmp
push
push
imul
popf
push
xchg
testl
push
lea
sbbb
adc
pusha
fldt
sub
add
push
dec
outsb
jnp
add
sub
mov
mov
test
push
xor
push
or
xorl
dec
movsl
movsl
push
aaa
adc
cmp
and
sbb
stos
mov
and
mov
sbb
mov
sbb
mov
daa
outsl
jo
push
dec
fwait
and
push
andl
sub
add
sub
and
xlat
clc
pop
or
push
adc
or
stos
dec
repz
xor
xchg
dec
xchg
push
xor
fs
add
pop
stc
mov
adc
xchg
scas
xchg
push
das
push
xor
inc
daa
popf
dec
dec
lods
adc
leave
add
pop
imul
push
or
add
inc
or
add
push
and
xorb
pop
add
jg
or
scas
sbb
push
ja
push
add
sub
loop
xor
es
inc
and
mov
cmp
cmpsb
add
push
xchg
or
pop
add
pop
push
test
cs
scas
add
sbb
cmp
and
sbb
dec
test
rolb
sub
pushf
popf
push
xor
pop
adc
bound
daa
mov
sub
fisttpl
xor
mov
inc
sub
xchg
add
jns
add
push
pop
or
xor
push
maxps
movb
xor
push
push
negl
mov
insb
fadds
icebp
aaa
mov
test
pop
push
xchg
sub
aaa
es
mov
cmp
sub
je
jo
data16
push
fiadds
ja
fs
push
push
pop
gs
push
std
push
push
outsl
inc
add
or
xchg
xor
addr16
popf
add
pop
test
cmp
ss
cld
outsb
cmp
jecxz
mov
repz
jecxz
jns
ss
adc
sbb
sahf
sub
cmp
out
mov
cltd
fwait
int
stc
or
xchg
add
pop
push
add
lahf
lods
mov
push
adc
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
sbb
sub
mov
insb
add
das
or
insb
ds
adc
pop
add
int
mov
add
dec
str
add
stc
das
lods
in
gs
incl
arpl
xor
fdivrp
cmp
mov
rolb
sarl
ds
into
repz
mov
ror
rcl
push
nop
mov
repz
shl
loopne
dec
fbld
inc
aaa
sbb
xchg
cmp
sbb
inc
adc
test
out
add
cli
and
dec
push
dec
dec
dec
dec
aaa
sbb
ljmp
shlb
mov
mov
lahf
sbb
lcall
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
inc
cmp
mov
sbb
mov
ds
test
sbb
iret
out
jle
jo
fsubs
ljmp
sbbb
test
xor
dec
xchg
pop
shl
dec
push
mov
inc
adc
adc
nop
push
and
xor
dec
push
or
and
dec
cmp
inc
ss
popw
rolb
pop
jb
add
push
mov
jb
test
pop
shrl
imul
addr16
adc
leave
jae
dec
call
mov
das
sbb
test
in
cmp
mov
sahf
xchg
cmp
push
cmp
dec
cmp
mov
insb
inc
js
cmp
push
xchg
loopne
pop
add
test
loope
push
dec
pop
int3
rorb
sub
push
dec
ljmp
test
ss
cmp
xor
sub
sub
inc
sbb
sub
inc
inc
push
xor
sub
jge
lcall
adc
push
outsb
add
shlb
rcrl
cmp
outsl
jge
test
js
cs
insb
inc
arpl
dec
pop
dec
xor
jbe
push
jb
cmp
bound
je
bound
imul
test
cvtdq2ps
lret
or
roll
ret
and
mov
mov
mov
push
lahf
inc
mov
ret
pop
test
mov
das
xchg
insl
adc
xlat
das
stos
pop
icebp
mov
sub
out
add
adc
loopne
in
sbb
sbb
dec
es
mov
jo
xlat
das
xchg
orb
xor
add
movsl
aaa
scas
inc
cmp
pop
dec
xor
xchg
inc
sbb
cmp
dec
orb
jbe
push
sbb
mov
ljmp
pop
aas
or
and
inc
dec
cld
and
dec
jns
cli
inc
or
sbb
dec
loopne
inc
sbb
rclb
jae
mov
dec
pop
and
push
hlt
push
das
xchg
cmp
mov
jmp
cmpsl
push
pushf
out
rorl
add
add
jl
pop
pop
pop
jecxz
or
scas
pop
das
out
cmpsl
jge
pop
push
mov
pop
out
xor
int
jns
clc
push
inc
ljmp
jns
cmp
lahf
mov
inc
push
stc
imul
nop
lods
popa
inc
fcmovu
testl
lcall
mov
in
push
ds
push
push
data16
sbb
cmp
cmc
cmpsb
mov
iret
pop
cmpsl
push
aad
cs
dec
push
dec
ja
mov
inc
mov
test
mov
sti
loopne
sahf
test
adc
scas
dec
sti
add
mov
cli
cmp
dec
dec
inc
aad
int
repz
lahf
pop
push
sbb
fstpt
inc
mov
rclb
stc
mov
mov
push
out
test
repz
cmpsl
ret
or
iret
repnz
pop
and
inc
nop
pop
sti
fmulp
cmpsl
xchg
out
sbb
sahf
push
adc
daa
in
cmp
adc
pop
push
divb
out
pop
xchg
pop
lcall
scas
sbb
int
pop
sbb
sbb
dec
pop
push
sbb
add
clc
xor
out
pop
sub
sahf
idivb
nop
push
cld
inc
idivb
or
push
xchg
aaa
clc
mov
and
out
mov
xlat
call
inc
iret
repz
imull
dec
push
repz
mov
negl
dec
dec
push
pop
shlb
es
idivb
lret
lods
mov
out
cmp
dec
cwtl
imul
movsb
push
dec
adc
out
iret
in
sbb
pop
in
dec
cmp
mov
clts
cld
testl
add
test
repz
test
in
into
adc
shrl
push
jg
iret
jns
out
lock
xor
fnstcw
mov
adc
out
sahf
cmpsl
cmp
jo
cmpsl
jns
jge
push
inc
pop
push
push
test
out
enter
mov
shll
xchg
aad
pop
dec
sbb
scas
decl
add
cs
adc
stc
add
adc
loop
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
push
inc
mov
and
lahf
negb
pop
sbb
enter
adc
jg
cmp
iret
pusha
or
cmp
add
or
sti
push
or
dec
outsl
pop
inc
push
addr16
outsb
push
outsb
sub
jno
outsb
lahf
aas
inc
push
mov
daa
inc
sbb
or
aaa
push
xor
inc
imul
sbb
xlat
push
cli
das
sarl
aam
jae
dec
cmp
jbe
sbb
push
ljmp
cmpsb
dec
add
xor
push
xorps
aam
pop
lods
insb
pop
push
dec
pop
je
ret
mov
sti
jns
push
fisttps
jns
sbb
jp
das
push
repnz
sarl
add
inc
imul
mov
into
push
pop
retw
xlat
or
jae
dec
mov
mov
dec
adc
pushf
push
add
in
adc
pop
in
pop
jne
cmp
fcomps
mov
push
ds
fbld
sbb
testb
jns
sbb
xchg
insb
je
push
addr16
sub
popa
jo
jae
es
outsl
aas
js
mov
inc
add
and
inc
ljmp
or
incl
xor
xor
xor
cmp
cmp
dec
in
mov
cmp
ds
add
ds
sub
sbb
xor
and
dec
or
mov
add
add
add
add
or
and
add
xchg
or
mov
and
daa
pop
sub
jmp
fldl
jl
cmp
adc
call
or
jb
add
and
arpl
sbb
pop
sub
and
data16
sahf
cmpb
aas
add
clc
xor
cmp
add
push
jecxz
aaa
or
add
dec
mov
add
pop
dec
clc
xor
cmp
push
ret
sbb
push
cmp
addr16
cmp
add
ror
or
cmp
push
fdivs
pop
push
iret
inc
mov
and
inc
testb
addl
pop
jecxz
testb
sub
inc
mov
aas
jbe
adc
adc
jmp
outsb
xor
dec
or
cs
adc
loope
jecxz
pop
add
fistps
xchg
push
add
sbbb
jb
mov
xor
cmp
fadd
pop
ret
and
push
jnp
rclb
daa
mov
testb
inc
aaa
sub
push
cmpsb
cmp
ret
aaa
push
xor
dec
repz
push
das
jo
pop
or
mov
aaa
and
jnp
mov
stos
sub
adc
scas
ljmp
andl
mov
mov
add
stos
xchg
pop
pop
or
lods
daa
xchg
mov
das
or
and
mov
aaa
iret
push
test
icebp
repz
in
mov
push
mov
daa
lea
imul
popa
daa
pop
icebp
push
sub
xchg
sub
xchg
pop
dec
inc
push
cmp
test
pop
dec
pop
repnz
dec
push
dec
sub
ja
add
or
daa
and
mov
fiaddl
cltd
sub
js
lahf
pop
xchg
cmpsb
pusha
adc
outsb
popl
and
not
pop
int
addr16
pop
lea
addr16
jg
jnp
fadd
pop
xchg
push
cmp
stos
mov
pusha
inc
pcmpeqd
pop
mov
mov
mov
fwait
cmpsb
xor
aaa
outsl
xorb
lret
and
adc
push
pop
xchg
fcompl
sbb
xor
sbb
sub
shll
pop
dec
cmp
aas
xlat
imul
add
iret
std
popl
fwait
cs
xor
mov
xor
sub
js
inc
xorb
dec
ja
xchg
mov
es
pop
mov
mov
add
add
fmull
in
cmpsl
stc
cmp
in
mov
dec
aas
xchg
dec
js
out
pop
sbb
sbb
outsb
loope
loop
ljmp
je
jo
das
das
sahf
lahf
imul
sbb
inc
sub
or
mov
add
pop
out
and
push
fsubl
pop
or
dec
pop
sub
ds
sub
lret
loope
inc
aaa
cmp
ds
test
mov
add
pop
out
lock
pop
pop
dec
imul
xchg
jb
mov
mov
pop
test
and
das
push
inc
push
inc
test
push
imulb
jl
loope
int3
xchg
adc
pop
cmp
inc
xchg
fistpl
or
aaa
mov
sub
xchg
test
movsb
es
imul
pop
pop
add
jo
xor
lock
or
aaa
loopne
enter
cmc
jo
push
add
dec
sbb
sbb
dec
les
mov
cs
adc
fdivrs
dec
out
push
xor
adc
sub
std
sahf
mov
or
dec
sub
and
subb
mov
push
sbb
xor
dec
mov
ficompl
aas
sub
cmp
inc
inc
movb
lret
je
pusha
mov
outsb
mov
pop
sbb
dec
push
test
sbb
push
mov
sub
or
push
pop
sbb
sbbb
dec
or
add
sub
cmp
fcoms
ljmp
pushf
aas
and
inc
aad
rorl
aas
enter
cmp
adc
and
cmp
mov
int3
adc
data16
adc
cmp
iret
inc
lret
rorb
add
or
fidivrl
dec
adc
test
negl
aas
pop
adc
es
das
inc
lahf
cmp
adc
mul
sbb
sbb
inc
pop
push
aas
shll
inc
std
add
je
or
jb
das
mov
daa
jbe
test
pop
cmp
pop
dec
pop
lods
jno
fildll
pop
pushl
bound
bnd
push
xchg
sub
pop
sbb
insb
call
dec
push
push
loopne
xchg
daa
push
push
adc
clc
andl
loopne
out
cs
sub
and
jbe
mov
lock
mov
add
pusha
rorb
sbb
inc
movl
mov
addr16
je
cs
shlb
les
and
sbb
add
adc
pop
inc
fwait
sti
jl
loop
and
pop
pop
adc
pop
push
imul
push
add
jne
jp
add
fimull
pop
push
pop
and
inc
inc
ljmp
das
cmp
dec
cmp
inc
pop
push
pop
aaa
adc
or
comiss
ljmp
mov
cmp
or
aas
stos
aas
push
pop
pop
push
push
push
and
adc
add
or
push
cmp
adc
sub
dec
in
and
cmp
pop
and
push
rcl
outsl
jmp
sub
and
adc
pop
dec
mov
push
ss
popa
lcall
aaa
cmp
pop
cmp
adc
cmp
pop
pop
mov
dec
push
cmp
sbb
or
dec
cmp
push
or
adc
aas
add
insl
cld
pushl
push
xor
sbb
or
adc
adc
inc
push
jno
and
test
inc
mov
pop
xchg
add
push
shr
xchg
pusha
out
pop
push
push
and
cmp
dec
dec
push
sub
mov
dec
adc
insb
push
xor
jo
rorb
fisubs
in
and
push
push
andb
lock
add
ss
ret
xor
int
cld
cwtl
sub
adc
adc
sbb
les
push
outsl
inc
nop
inc
inc
mov
cmp
cwtl
pop
bound
add
shlb
inc
pop
sub
sbb
push
push
adc
jb
data16
pop
or
push
sbb
rolb
push
push
inc
push
dec
inc
dec
pushf
mov
add
add
dec
les
or
into
iret
inc
sub
add
add
das
loope
or
push
push
push
daa
inc
aaa
call
pop
nop
push
push
aaa
es
xchg
jl
cld
aas
inc
dec
sbbb
call
pop
aaa
testb
pop
add
push
ja
negb
cmp
pop
push
pop
and
aas
adc
adc
push
pop
out
mov
xor
xor
inc
add
xor
xor
xor
fstps
inc
pop
inc
xor
and
aaa
inc
push
inc
cs
pop
pop
lcall
pop
ss
lahf
ss
mulb
aaa
lcall
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
fcomip
cwtl
stos
pop
fmuls
adc
jge
push
je
mov
andb
lcall
shrl
xchg
out
popf
rorl
jg
outsl
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
lcall
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
cmp
jae
gs
leave
ret
sub
xchg
mov
data16
mov
ljmp
call
cltd
test
push
push
shll
ja
daa
mov
pushl
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
inc
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
inc
aam
decl
jg
push
push
mov
fwait
stos
flds
pop
fnsave
bound
and
outsl
call
stos
and
cmp
jae
loopne
pop
inc
inc
pop
cmp
inc
jg
decl
popa
jo
cs
xor
mov
pop
inc
jno
aas
and
or
inc
jne
ljmp
sub
xor
inc
imul
push
aaa
jnp
jge
sub
cmp
insb
pop
dec
dec
push
dec
push
sub
jmp
imul
cmp
inc
ds
push
mov
or
orb
sahf
push
outsb
inc
insb
and
and
test
sbb
nop
or
jbe
movsb
scas
bound
aas
or
and
push
frstpm(287
push
jno
pop
fldt
mov
arpl
fistpl
outsb
push
outsb
ret
pushf
out
push
iret
sbb
dec
mov
mov
sarl
inc
or
or
mov
imul
cmp
sbb
orb
mov
orl
sbb
dec
les
xor
jp
cmp
and
sub
push
or
daa
pop
push
ret
dec
sbb
jp
out
in
and
sbb
movb
stos
fcoms
xor
cmp
pusha
roll
add
mov
xor
add
xor
pop
cmp
jno
push
scas
test
js
ret
andb
fcomp
sti
in
pop
mov
dec
jmp
subb
mov
cmp
dec
mov
sub
jmp
add
xchg
shrb
fidivl
cmp
and
scas
adc
xor
mov
jmp
xor
push
je
push
sahf
popa
inc
xor
adc
sbb
push
outsl
lcall
add
cmp
sbb
test
xchg
stos
xor
add
or
or
stos
mov
fisttpll
aad
sbb
add
pushf
popf
fisttpll
rdmsr
imul
jo
mov
add
sahf
pop
insl
das
pushf
xchg
mov
cmp
pop
mov
dec
stos
shrl
push
dec
mov
mov
and
pushl
insl
loop
cmp
push
jecxz
scas
dec
out
mov
pop
dec
jp
outsl
insb
loop
popa
je
sbb
or
popf
insl
fimuls
pop
xchg
aaa
dec
sub
cmp
pop
adc
negb
aaa
add
sbb
adc
bound
push
out
fimull
pop
dec
push
and
xor
sbb
aaa
push
andb
les
pop
mov
mov
dec
sbb
adc
cwtl
gs
repnz
ljmp
pop
and
mov
fs
mov
pusha
push
ja
imul
and
ret
mov
cmp
ss
xchg
ds
inc
out
lcall
addr16
out
loopne
lds
push
sbb
lret
shlb
sbb
sub
scas
and
push
or
and
aad
sbb
add
sbb
mov
popa
dec
lods
pop
push
sbb
jge
outsb
ja
jb
pop
mov
incb
jne
cmp
test
xor
xor
fistl
push
xor
inc
jno
cmp
or
mov
or
push
jnp
call
sbb
xor
sbb
sbb
push
or
call
insb
mov
cli
dec
jb
stos
adc
fs
jo
xor
nop
mov
stos
or
stos
push
outsl
imul
sub
stos
push
inc
push
push
fisubl
and
xlat
xchg
dec
push
cmp
icebp
rolb
or
add
das
scas
aam
and
add
arpl
and
and
mov
adc
pop
insb
repnz
xchg
cli
test
aam
sub
pop
ja
adc
mov
sbb
xchg
and
andl
pop
add
dec
fstps
mov
push
ja
inc
mov
sahf
outsb
nop
jbe
push
pop
fiaddl
xor
cli
jb
loope
cmp
lds
aam
cmp
nop
sub
pop
iret
or
int
pop
aaa
push
outsl
sub
mov
jle
or
scas
push
push
addl
cmpsb
imul
or
xor
out
cmp
sbb
test
push
adc
push
ja
imul
repnz
jb
imul
mov
push
dec
xlat
sarb
lea
cmp
dec
pop
pop
pop
inc
pop
stos
arpl
fcmovne
rolb
dec
pop
dec
pop
divb
dec
movsl
mov
repz
cli
ucomiss
insl
insb
daa
lea
inc
jbe
pop
roll
sub
ljmp
stos
or
cmpsl
adc
lds
lea
and
add
add
cmp
sub
sub
push
lock
inc
dec
jo
out
inc
popa
ficomps
and
inc
add
or
add
cmp
test
jne
ficoml
cmove
lock
gs
stos
push
push
sub
mov
push
add
and
adc
fnsave
push
popa
cli
outsl
sarl
mov
dec
outsl
and
xor
xchg
mov
imul
sbb
sub
pusha
scas
pop
pop
ror
mov
into
rcll
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
or
dec
xlat
jb
gs
mov
daa
inc
xchg
gs
push
push
mov
push
dec
add
or
bound
mov
lret
xor
enter
and
cmpsl
pop
jle
mov
ret
push
mov
outsl
adc
push
push
js
dec
xchg
push
xorl
pushf
or
push
jb
push
adc
out
inc
add
adcl
mov
or
lea
nopl
push
jbe
sbb
dec
pop
sub
js
inc
outsl
adc
push
push
push
mov
ds
repz
add
pusha
add
xor
pop
pop
fnstsw
in
push
ja
pop
cmp
dec
fistl
out
icebp
mov
clc
sbb
dec
push
loop
push
sub
enter
or
pop
les
xchg
push
push
rorb
imul
mov
dec
dec
cmp
cmc
dec
add
stos
nop
jp
and
inc
add
push
dec
lods
inc
mov
add
xor
inc
jns
xlat
jge
bound
and
xor
xlat
xchg
fsubs
jne
xor
jge
lods
jno
push
add
pop
mov
push
cmp
inc
loope
sbb
dec
sub
adc
sbb
mov
arpl
push
pop
adc
or
stos
loop
enter
sbb
dec
test
and
outsl
test
pop
xlat
das
pushf
mov
pop
jg
inc
cmp
inc
outsl
scas
aad
pop
sub
pop
xchg
or
xlat
sbb
or
outsl
mov
ret
das
rorl
push
push
push
das
xor
xor
dec
and
into
cmp
mov
call
out
insl
mov
outsl
into
stos
jb
inc
addr16
outsb
jg
sbb
outsl
insl
pop
xor
dec
and
jnp
iret
divb
das
push
mov
dec
dec
dec
inc
and
popa
outsb
jae
outsb
mov
xlat
setbe
arpl
gs
xor
rolb
subb
into
aam
stos
mov
mov
in
imul
movb
push
adc
and
pop
shr
pop
dec
testb
movb
movlps
ljmp
es
addr16
xchg
inc
cmovo
dec
lock
adc
cmpb
aas
mov
nop
jo
maxps
mov
js
clc
shrb
mov
add
inc
push
mov
dec
add
mov
nop
mov
add
add
je
inc
pop
fsubrs
sbb
ds
xor
popa
negl
mov
add
push
push
repnz
mov
add
inc
iret
adc
ficomps
and
add
jnp
cld
daa
nop
sbb
pusha
push
outsb
aas
out
dec
aaa
jb
mov
pusha
sbb
dec
inc
push
jb
push
inc
cmp
sub
and
add
or
scas
daa
push
nop
repz
mov
adc
inc
and
or
ds
les
push
mov
lahf
cmpsl
stc
fidivs
sbb
cld
dec
test
mov
ds
repz
js
inc
in
dec
jns
out
rolb
or
dec
sahf
ja
out
dec
dec
push
jl
cmp
out
inc
sub
adc
cmp
sti
clc
inc
out
dec
inc
sbb
scas
sub
sahf
es
pop
movl
pop
xor
pop
cmpsb
repz
in
add
mov
in
pop
dec
add
dec
fadds
push
sarb
add
add
pop
iret
mov
js
push
nop
fdivp
cmp
sbb
mov
pop
movsl
imul
inc
cmpb
in
adc
jg
popa
pop
leave
add
mov
pop
and
scas
fs
enter
dec
add
cwtl
dec
mov
push
mov
insb
and
add
and
push
xor
inc
xchg
int
jns
dec
sbb
dec
xor
or
dec
cmp
mov
add
outsl
cmp
mov
add
stos
movsb
xchg
mov
adc
xchg
stos
loopne
out
xchg
inc
dec
scas
in
fs
enter
dec
test
dec
adc
outsl
inc
insb
push
mov
jl
pop
mov
add
sub
mov
outsl
out
daa
push
xor
xor
adc
dec
insb
and
add
and
and
aam
mov
push
push
xchg
cmc
dec
sahf
out
dec
loopne
adc
pop
xor
sbb
int3
dec
loopne
ficomps
hlt
push
xor
push
adc
mov
xlat
and
add
andl
leave
aad
nop
jg
int3
mov
push
jb
sub
out
negl
add
fsubp
dec
ret
push
xor
add
and
in
and
and
sbb
and
mov
test
jo
pop
adc
dec
xchg
add
in
and
cmpsl
loopne
add
or
pop
js
dec
xlat
cmpsl
int
xor
aaa
push
lock
xchg
sub
add
testb
pushf
pop
dec
pop
insb
push
je
inc
lods
fsubs
outsb
jnp
bound
pop
dec
js
je
rcrb
push
fisttps
aaa
es
jo
push
jg
push
cmp
and
push
add
mov
pop
dec
ficoms
add
inc
icebp
loope
faddp
sbb
mov
loop
pushf
push
divl
sbb
enter
push
push
jmp
push
push
outsl
jg
pop
pop
xor
mov
testl
dec
mov
push
insb
push
jl
pusha
enter
out
imul
push
xlat
scas
orb
mov
push
mov
mov
pop
pop
and
dec
enter
push
lahf
ror
aad
xlat
or
data16
and
add
xlat
cmpsl
loopne
scas
or
cwtl
push
xchg
sbb
jo
cmp
and
cmp
mov
pop
les
sbb
inc
xor
ficoms
add
out
test
add
push
scas
js
xor
mov
mov
test
mov
xor
add
or
sbb
outsl
add
scas
shlb
cmp
xor
xchg
sub
add
scas
in
pusha
jg
add
int3
ja
mov
insb
jb
add
jg
addr16
mov
leave
test
inc
push
add
or
xchg
nop
mov
call
sub
idivb
das
outsl
add
ss
xor
dec
adc
call
adc
push
sbb
clc
inc
inc
push
and
aaa
add
push
xor
ficomps
insb
push
lods
cmpsb
js
mov
xor
push
sub
add
or
daa
and
sub
daa
or
pusha
mov
add
xchg
inc
imul
fcompl
rcr
sahf
out
push
xor
les
aam
cmp
or
inc
cmp
push
cmpsl
adc
in
or
and
je
pop
enter
or
xchg
popa
inc
lcall
fwait
mov
or
in
pop
dec
fistpll
nop
fwait
mov
add
add
out
or
pop
add
ret
push
xchg
ds
pop
pop
scas
add
inc
outsl
xchg
pop
add
add
cwtl
lahf
xor
inc
pop
or
jns
out
push
out
scas
in
outsb
daa
or
fdivrs
lar
outsl
dec
push
mov
pop
das
sub
and
pop
ljmp
jns
addr16
add
movsb
jns
arpl
rclb
imul
xchg
add
mov
xor
inc
fsubl
adc
and
insb
mov
inc
inc
dec
ja
pop
pop
outsl
leave
fwait
mov
and
mov
mov
pushf
xlat
stos
push
ucomiss
add
negb
sub
xbegin
pop
pop
inc
aas
addr16
jbe
adc
mov
or
daa
pop
pop
pop
push
push
je
xchg
inc
xchg
ss
push
outsl
mov
inc
add
push
inc
pop
add
ss
inc
sbb
lret
lock
repz
push
push
push
mov
imul
fs
ds
repz
lods
iret
repnz
iret
sarl
loop
pop
ss
sahf
out
ds
pop
popa
mov
std
ds
sarl
jge
roll
pop
jns
out
xor
mov
out
adc
pop
shl
dec
repz
fsub
jns
out
pop
push
test
int
pusha
arpl
jmp
out
ds
popa
mov
repz
jnp
fbld
arpl
imul
stc
cmp
rorl
mov
jns
cmpsl
dec
subb
cmp
push
mov
sarl
shll
push
cmpsl
stc
cmp
sbb
lods
loopne
out
jl
push
add
into
idivb
insb
insb
scas
cmp
icebp
repz
out
outsb
fstps
outsl
jnp
ds
mov
jle
mov
int
imul
out
lret
je
outsb
jns
out
mov
jne
mov
repz
bnd
repz
out
roll
das
pop
repz
iret
icebp
adc
shll
jp
jns
data16
ret
jl
imul
jge
icebp
jns
out
jle
jg
push
add
dec
repz
sarl
clc
dec
addb
lcall
test
push
sbbb
xchg
xchg
jns
and
push
out
sti
rorb
lcall
jo
xor
dec
repz
mov
lret
mov
and
repz
inc
nop
incb
test
xchg
inc
int3
int
stc
cmp
scas
xchg
jecxz
xchg
inc
stc
mov
xchg
push
push
loope
xchg
repz
cmpsl
jns
mov
repz
push
cwtl
sar
mov
cmpsl
stc
cmp
pop
lcall
imul
jae
leave
and
data16
mov
cmp
iret
mov
sbb
repz
test
jl
cmpsl
pop
std
cmp
iret
out
stos
fs
cmp
jns
shl
lods
imul
push
mov
repz
push
loopne
xorb
fldcw
xorl
push
mov
mov
or
add
mov
in
imul
out
nop
pop
jb
dec
sti
int3
sbb
imull
xorb
incl
cld
jns
cmp
inc
mov
or
pop
bound
push
test
add
arpl
out
pop
inc
aaa
push
mov
fistpll
mov
nop
enter
mov
lcall
sarl
xlat
das
inc
bound
jnp
out
add
jg
in
inc
repnz
push
ds
aas
adcb
in
pop
inc
pop
fmuls
cmp
outsb
xchg
pop
dec
push
fbstp
mov
ss
outsl
xchg
jae
aas
in
inc
shll
xchg
xchg
aas
imul
fnsave
push
stc
inc
push
mov
shrb
or
mov
mov
mov
push
enter
fbstp
shlb
nop
sbb
in
inc
add
adc
testl
in
mov
sbb
push
pop
xor
repnz
inc
in
iret
test
sub
push
adc
add
pop
data16
mov
sbb
jo
out
daa
xchg
inc
nop
push
push
add
out
add
add
out
aam
xor
sub
pop
pop
mov
dec
in
scas
les
and
addr16
cmp
imul
fisubrs
xchg
and
out
movsb
xchg
push
jno
in
scas
gs
ret
fisttps
push
inc
xchg
xchg
movsl
sbb
adc
xor
iret
repz
push
add
dec
xchg
mov
mov
in
xchg
xchg
je
test
orb
inc
jb
lret
dec
dec
leave
and
bound
cmp
xor
sub
and
enter
loopne
xchg
pop
add
pop
bound
hlt
adc
scas
inc
mov
inc
pop
dec
push
cltd
xchg
pop
and
dec
movsb
iret
pop
enter
push
inc
movsb
push
inc
push
cmc
inc
xor
andb
jg
imul
in
cld
sub
mov
test
add
imul
les
call
pop
and
mov
cmp
aaa
jb
inc
push
push
push
pop
push
add
sahf
out
add
add
sahf
out
pop
xchg
or
dec
xchg
or
incl
nop
inc
add
insb
push
jb
repnz
inc
mov
xor
adc
std
add
insl
leave
jae
dec
sub
mov
push
pop
pop
pop
pop
fs
pop
leave
jae
outsl
xchg
xchg
jns
daa
daa
popf
movsl
lods
cmpsb
add
out
add
push
adc
jb
xchg
out
notb
push
pop
push
pop
and
and
pop
cmp
leave
leave
enter
pop
push
pop
jmp
inc
jb
jl
test
mov
xchg
setl
leave
adc
pop
pop
outsl
iret
in
jns
push
add
int
and
sub
sysexit
pop
pop
inc
pop
xchg
sub
pop
incl
negl
inc
mov
dec
jo
jo
jo
insb
jo
lret
push
mov
rclb
nop
adc
out
jb
pop
leave
lock
sub
popf
dec
dec
sbb
dec
pop
mov
dec
and
ja
or
add
jl
in
in
push
inc
enter
xchg
dec
add
mov
xchg
jb
push
cmp
enter
or
dec
push
leave
dec
inc
xorb
iret
and
cs
ss
rcll
inc
pop
dec
pop
fsubl
xchg
xchg
enter
orl
pushf
mov
xchg
add
push
and
js
lret
lret
lret
lret
loopne
call
pop
lret
lret
lret
lret
or
pop
pop
pop
sub
repz
push
or
push
cmp
repz
popa
or
or
ja
orb
iret
repz
adc
cmp
repz
mov
cmp
repz
push
in
repz
add
divps
out
xchg
cmp
inc
push
add
and
pusha
fmuls
add
jl
test
aam
inc
pop
aam
inc
mov
add
pop
je
out
pop
add
push
pop
xor
add
jne
mov
add
or
adc
popf
lcall
enter
fmull
push
push
les
jbe
dec
pop
lcall
loope
mov
push
lahf
lahf
cmpsl
addr16
xchg
lret
mov
enter
leave
push
pusha
add
dec
pusha
add
daa
cmp
xor
xor
cmpsb
in
pop
je
scas
fs
jbe
daa
test
and
js
add
adc
shrl
cltd
push
jb
add
adc
sbb
popa
enter
sub
xor
cmp
and
in
inc
popa
mov
je
popa
cmovs
and
xchg
xchg
inc
or
cld
js
popf
or
xchg
jns
mov
or
flds
add
add
jns
fsts
incl
bound
inc
dec
mov
movhps
fcom
add
push
hlt
pop
mov
add
dec
jg
data16
cmp
jp
pop
and
jp
inc
jb
mov
in
jb
pop
arpl
jnp
cmp
pop
push
arpl
addr16
js
inc
mov
inc
jnp
mov
pop
ja
pop
xor
add
sysret
pcmpgtb
sbb
fs
xchg
mov
je
or
dec
ficoml
fcmovne
leave
repz
out
add
add
leave
sub
adc
out
sbb
jmp
inc
cmp
addr16
xchg
pop
jo
iret
jne
adc
jge
or
call
mov
aas
ret
xor
repnz
gs
sti
gs
xchg
addr16
adc
xchg
add
cs
push
add
jb
jle
push
leave
add
mov
cwtl
mov
or
inc
sub
xchg
cmp
mov
cmp
sub
and
cmp
jg
push
addr16
daa
pop
insl
xchg
addr16
cmp
mov
dec
addr16
addr16
addr16
imul
mov
mov
addr16
addr16
addr16
addr16
outsb
mov
pop
pi2fd
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
xchg
pushf
dec
and
and
sub
leave
xchg
mov
pop
push
addl
mov
push
push
ja
xchg
mov
mov
ja
out
add
xchg
cmp
or
adc
scas
nop
imul
in
xor
imul
push
aas
pop
pcmpgtw
push
insl
sbb
icebp
pushf
jne
push
jge
test
jb
jmp
test
dec
or
cmpl
or
ja
push
lock
push
push
and
pop
es
push
popf
pushf
je
cmp
cmovo
mov
mov
or
mov
jo
das
pusha
push
cmovle
test
add
xor
sbb
sbb
aas
movsl
loopne
out
add
inc
loope
aad
pop
es
es
jmp
mov
jb
adc
mov
ret
psrlw
flds
loope
or
imull
rolb
imul
xor
imul
inc
imul
mov
xchg
cltd
pop
mov
iret
add
add
jns
sahf
pop
rorl
mov
imul
cmp
in
insb
xor
in
or
insb
pop
insb
mov
xchg
cmp
cmp
cmp
cmp
push
push
fiaddl
in
repz
or
or
or
mov
adc
or
or
sub
mov
insl
push
insl
enter
mov
insl
lahf
insl
adc
xchg
stos
iret
or
sub
outsb
jmp
dec
jb
adc
outsb
rolb
outsl
jns
add
jp
outsb
setns
mov
push
test
hlt
in
rorl
shrl
or
clc
xchg
outsl
test
xlat
inc
outsl
dec
outsl
dec
jb
enter
outsl
insl
outsl
mov
in
mov
ja
pop
and
add
loopne
dec
jo
loope
mov
adc
sbb
xchg
and
jo
jo
aas
cmp
jg
jo
jo
push
jo
push
loope
push
das
mov
add
lock
xor
xor
daa
jno
jno
xchg
addr16
add
pusha
repnz
imul
pushf
sahf
fcmovne
inc
mov
addr16
or
jno
cs
lret
stos
inc
cmpsl
daa
out
cmp
xor
push
daa
dec
das
das
or
sub
jb
and
das
aas
jb
jb
add
repz
pusha
add
add
repz
or
mov
daa
daa
daa
mov
dec
rcr
jmp
hlt
decl
jae
mov
jae
jae
jae
jae
dec
adc
or
mov
xchg
and
fs
jae
jae
jb
enter
jae
jae
mov
jbe
mov
out
or
push
popf
in
mov
jae
jae
lea
dec
push
call
je
mov
fs
repnz
add
data16
nop
mov
leave
inc
xchg
mov
fisubrl
and
fstpl
je
jne
jg
and
pop
jne
cmp
fisubrs
daa
jne
das
jne
mov
mov
add
mov
fwait
add
and
fmull
movsb
xchg
add
cs
and
jbe
cmp
push
daa
xor
inc
dec
push
add
stos
imul
jg
jns
leave
lcall
cmpsl
dec
add
mov
mov
ss
push
or
jns
cmpsl
or
or
ljmp
jg
xchg
adc
inc
nop
ja
scas
into
inc
push
out
addr16
leave
inc
repnz
xchg
cltd
mov
push
add
xchg
cmp
in
scas
hlt
pushf
push
sbb
ja
js
adc
lea
push
mov
leave
and
mov
daa
pop
jne
js
test
dec
cmc
ss
das
mov
pop
mov
repnz
lret
and
aas
sbb
das
jns
lret
lret
lret
aaa
jns
jns
jns
jns
jp
enter
dec
xchg
fucomi
in
mov
mov
mov
push
mov
cmp
mov
xchg
or
imul
jns
jp
enter
outsl
jp
xchg
das
pop
push
jp
jp
das
das
das
pop
jp
jp
jp
jp
das
das
das
jp
cmpb
xchg
jp
das
das
das
lcall
leave
leave
lods
fistpl
ud2
pop
or
leave
leave
leave
leave
or
push
add
add
add
mov
sbb
sbb
sbb
cmp
repz
jmp
mov
cmp
repz
add
or
adc
sbb
leave
repz
pusha
cmp
es
iret
add
xchg
jns
ret
jmp
dec
sbbl
in
jnp
jnp
pop
mov
cmp
or
push
mov
xchg
pop
xchg
xchg
mov
jl
jl
dec
dec
outsb
mov
jl
push
nop
pushf
fsubl
pop
pusha
jmp
mov
dec
push
iret
repz
addb
repz
cmp
cwtl
or
je
leave
mov
mov
es
xchg
cmp
call
stos
jno
jbe
xchg
and
nop
pop
test
sub
dec
dec
and
sbb
enter
in
daa
add
sub
jbe
jle
aas
xor
mov
das
leave
scas
shl
adc
dec
rcr
jge
loope
xor
subb
iret
sub
addr16
repz
or
xchg
or
lods
in
mov
jns
xchg
jle
and
add
pushf
jecxz
addl
cmp
jle
dec
jle
and
pop
jle
jle
jle
jns
enter
push
or
sahf
pushf
or
aas
sahf
out
mov
sarl
dec
and
sbb
inc
mov
jg
jg
ja
dec
dec
cs
dec
push
jg
sbb
jb
fs
jg
jg
jg
and
push
xchg
jg
jns
pop
push
or
out
mov
or
pushf
pushf
dec
and
call
popf
clc
xchg
pop
pop
mov
sub
inc
pop
pop
pop
push
andb
sbbb
mov
and
mov
xchg
jl
lcall
lock
clc
add
dec
sahf
add
and
and
addl
addl
leave
adc
xor
das
pop
jbe
repnz
or
jno
jge
sbb
fmull
fwait
lods
xchg
sbb
sub
or
push
and
pushf
scas
and
fadds
insl
jb
addl
sub
xor
cmpsb
jecxz
rorl
add
cmpb
cmpsl
movq
or
dec
jg
addr16
xchg
or
lods
jns
add
daa
lds
add
xchg
xchg
xchg
out
aad
in
out
sahf
in
or
or
cs
loopne
add
adc
repz
sbb
leave
out
sahf
xor
popf
mov
xorl
psllq
jae
add
aad
pop
add
mov
outsl
in
pop
push
sahf
or
adc
pop
orb
ja
jae
lods
mov
fstps
in
sahf
cld
push
test
fnsave
cmp
test
in
in
mov
test
pusha
test
push
or
orl
into
mov
push
mov
insb
lahf
jb
leave
inc
ljmp
js
test
mov
sbb
adc
in
push
add
pop
iret
pusha
pop
xor
test
js
xchg
mov
sub
fucom
cmpsb
add
mov
in
aas
psrld
fisttpll
or
scas
add
call
add
xchg
iret
sbb
enter
js
enter
fsubs
inc
dec
cmc
mov
xor
fistpl
lar
xchg
xchg
pop
pop
arpl
enter
imul
or
mov
repnz
iret
je
out
dec
xlat
push
add
pop
jo
out
pop
negl
incl
aas
pop
xchg
xchg
push
pop
repz
push
adc
xchg
iret
adc
dec
mov
xchg
pop
xchg
jnp
adc
repz
add
mov
pop
pop
xchg
xchg
loop
dec
mov
cmp
ja
shr
xchg
fdivr
mov
rorb
xor
inc
je
enter
mov
out
dec
cmpsb
mov
aas
inc
push
xor
xchg
push
pop
mov
xor
mov
fcmovne
ror
add
movsb
mov
dec
push
and
pop
sub
jbe
cmp
mov
push
das
pop
dec
jns
daa
fisttpll
add
das
or
jns
out
push
cmp
js
orb
xchg
or
cs
adc
cmp
adc
inc
aaa
sarl
jmp
repnz
daa
inc
movsl
adc
aam
movsl
jmp
or
sub
xlat
push
call
add
jo
js
orb
mov
sbbl
mov
js
lret
lcall
das
push
adc
sbb
fisttps
mov
mov
pavgb
mov
mov
inc
mov
dec
mov
pop
add
in
inc
cmp
mov
xor
inc
xchg
lret
pop
cmpsl
fisttps
cmpsl
loope
adc
push
push
xchg
out
cmp
cmpsb
add
mov
rcr
repnz
lahf
orl
inc
xor
rcrb
pop
mov
test
rcll
mov
lea
sahf
mov
or
iret
push
lret
pop
test
jbe
dec
lea
iret
outsb
sbb
jb
lea
push
pop
push
jns
in
dec
lea
or
orl
jns
stc
push
dec
sub
sahf
out
jns
lea
out
jns
lcall
sahf
push
mov
cmpps
sbb
in
in
jbe
inc
ja
in
out
std
pop
xchg
int
fmull
push
push
mov
cmp
mov
in
cmp
push
pop
out
fsubrp
push
dec
pop
push
or
sahf
out
sahf
insb
or
or
dec
aaa
jns
dec
or
or
ljmp
sahf
pushf
pop
mov
loop
repnz
repnz
and
mov
mov
or
or
adc
test
test
out
mov
inc
jb
adc
or
mov
stos
inc
xchg
or
and
stos
or
stos
jo
xchg
adc
cmp
cmp
fcmovne
dec
push
minps
gs
insl
push
jne
add
xchg
xchg
cmp
fidivrs
or
stos
icebp
in
dec
imull
push
xchg
cmp
popl
in
push
pmuludq
pop
call
nop
pop
push
fildl
mov
mov
pop
addr16
into
popf
addr16
push
clc
add
push
jg
push
cmp
daa
adc
fsub
add
mov
xchg
xchg
inc
dec
repnz
cmp
leave
pusha
push
sub
adcb
das
cltd
pop
lsl
mov
lods
or
mov
ss
icebp
repnz
psubusb
test
je
daa
xchg
das
xor
iret
xchg
xchg
push
add
pop
hlt
cmp
add
enter
xchg
leave
repz
push
or
pusha
xchg
out
fisubrs
or
js
cmp
js
orb
rclb
fwait
xchg
mov
mov
xchg
addr16
adc
out
xchg
scas
incb
inc
or
xchg
dec
push
cmp
jns
ja
xchg
cmp
es
sbb
xchg
jns
leave
xrelease
jo
push
add
push
decl
mov
xchg
mov
xchg
dec
sahf
or
mov
pop
jo
lock
clc
popl
xchg
aas
adc
xchg
int3
xor
in
or
fnsetpm(287
xchg
vmread
pop
pop
cltd
xchg
mov
jbe
mov
pop
lidtl
rcr
pusha
test
dec
adc
cmp
flds
xchg
cld
add
mov
inc
mov
add
in
dec
xchg
jno
pop
inc
pushf
add
xor
push
add
mov
int3
xchg
push
mov
sbb
clc
addr16
dec
mov
mov
sub
jo
jo
mov
fsubrl
xchg
pusha
sar
lods
in
pop
and
push
add
mov
mov
add
xchg
xchg
repnz
mov
add
sahf
ja
data16
push
xchg
pushf
cmp
repz
or
or
pop
mov
xcrypt-cfb
cmpsl
mov
pop
ljmp
dec
dec
cmpsb
rcr
loopne
jns
fimuls
lidtl
in
sub
add
dec
dec
outsb
mov
pop
inc
cmovle
dec
dec
dec
dec
xchg
mov
icebp
daa
and
stc
sbb
outsb
daa
test
test
sbb
dec
sahf
out
sbb
enter
mov
adc
dec
sahf
ja
push
and
ds
dec
test
stc
lock
mov
jae
push
ja
add
and
xchg
mov
enter
lcall
cld
xchg
add
hlt
das
fwait
dec
aaa
fwait
aas
fwait
dec
sahf
out
xchg
fwait
push
add
add
jnp
jg
or
mov
dec
dec
dec
into
fsubr
mov
cmp
stc
sbb
sub
inc
mov
das
inc
pushf
hlt
repnz
outsl
dec
pushf
push
pushf
pop
pushf
iret
repz
into
iret
pushfw
outsb
mov
jbe
fmulp
repz
or
mov
push
xor
jmp
sahf
pushf
adc
subb
roll
test
pushf
pushf
pushf
and
pop
comiss
das
mov
popf
push
popf
es
das
das
das
das
cs
ss
inc
popf
dec
popf
das
das
das
das
push
popf
pop
popf
addr16
outsl
popf
das
das
das
das
ja
jg
xchg
das
das
lcall
das
das
das
das
mov
popf
fstps
in
pop
in
and
imul
and
sahf
and
repz
sbb
iret
repz
daa
cmp
inc
fwait
cmp
repz
push
comiss
arpl
dec
imul
sub
sbb
pop
test
add
stos
jecxz
inc
rcrl
cmp
sahf
std
sahf
add
dec
mov
iret
adc
dec
ds
pop
ficomps
dec
inc
mov
pop
pushf
pushf
fmull
vmwrite
pushf
decb
inc
sahf
pop
mov
sahf
out
cmovge
push
pop
xchg
fcmovne
repz
adc
pcmpeqw
daa
mov
das
mov
in
sbb
sbb
or
daa
daa
sbb
pop
sub
dec
sahf
ja
and
emms
xchg
out
mov
movsl
out
jns
ret
sub
shrl
push
mov
xchg
icebp
cpuid
out
mov
push
das
das
aaa
out
jbe
cmp
aas
inc
cmovg
xor
sub
mov
mov
mov
mov
fadds
ja
mov
dec
mov
pop
or
movaps
fldz
xlat
xor
xchg
xchg
mov
nop
in
fisttpll
lfs
fs
xchg
xchg
mov
stc
add
mov
les
inc
push
pop
movsb
outsb
mov
lahf
jmp
pop
mov
in
dec
xchg
or
repz
or
mov
xchg
lret
jecxz
mov
stc
add
outsl
shld
leave
repz
pop
sbb
and
pushf
cmp
cmp
inc
sbb
repz
cmp
pop
sbb
iret
jb
jge
and
sahf
add
icebp
repnz
mov
sub
and
loopne
adc
xor
push
xor
push
dec
sub
movd
cmpsb
pshufw
js
pop
adc
push
outsl
cmpsb
xchg
xchg
dec
loop
outsb
cmpsb
cmpsb
mov
test
or
movhps
inc
push
mov
out
cmp
rorb
adc
loopne
adc
repz
call
clc
sub
and
sbb
dec
aad
inc
mov
jbe,pn
das
ja
inc
loop
out
inc
sbb
scas
and
outsb
xchg
pop
les
xchg
fimuls
aas
push
cmpsl
cvtdq2ps
rol
jle
sub
xchg
xchg
mov
jl
mov
cmpsl
push
sub
in
in
xor
rorl
fabs
xchg
pop
and
leave
jmp
sahf
pushf
faddl
nopl
test
pop
and
xchg
int3
dec
push
daa
mov
sahf
pop
test
addr16
outsl
ja
repnz
jg
xchg
xchg
xchg
mov
sbb
stos
mov
xchg
cmp
mov
mov
in
cmc
xchg
enter
sbb
ficoml
cld
repnz
arpl
add
fdivrl
xlat
addl
iret
leave
leave
mov
dec
dec
es
into
repnz
fisubs
in
add
push
stos
inc
xchg
cmp
push
stos
mov
pop
stos
xchg
dec
sahf
out
jg
add
dec
lahf
pop
cmpsl
add
jmp
stos
les
inc
or
repnz
mov
add
repz
pop
sbb
and
inc
loopne
stos
jg
stos
add
dec
sahf
ja
push
xchg
pop
gs
xchg
stos
xchg
add
jl
mov
test
mov
mov
jecxz
jmp
mov
xlat
lods
jns
xchg
pop
nopl
add
ficoml
cmpsl
pop
inc
repnz
add
fmulp
test
insl
stos
arpl
das
mov
mov
pop
iret
jg
pop
filds
out
scas
or
dec
mov
jecxz
pop
mov
addr16
pop
pop
ds
sbb
lods
ljmp
jo
inc
es
dec
lods
lods
sub
mov
inc
inc
lods
lods
scas
scas
cmp
syscall
daa
push
lret
lret
lret
cs
xor
lret
lret
lret
lret
push
scas
pop
scas
imul
mov
scas
pop
mov
mov
shrl
mov
in
scas
clc
scas
mov
scas
push
scas
sbb
mov
scas
inc
pop
daa
mov
sbb
sbb
daa
daa
daa
sbb
push
adc
adc
push
sub
popf
cmp
pop
sub
mov
xlat
rdmsr
mov
xchg
jns
ja
test
push
cmp
out
cmp
cmp
scas
out
sahf
cmp
cmp
fdivp
mov
aas
or
push
inc
out
sahf
out
inc
sub
aaa
sahf
out
sahf
inc
inc
das
dec
inc
pop
fucom
jns
arpl
cmovp
jns
test
repz
movsl
dec
mov
daa
daa
iret
repz
cmp
daa
daa
out
std
push
jns
or
pop
adc
sub
mov
jns
popf
fisttps
scas
pusha
cmp
xor
enter
out
iret
repz
mov
mov
rorb
pop
rcrb
cmp
fcmovnu
mov
dec
sub
daa
iret
add
loopne
push
call
clc
verw
jae
jns
or
adc
cmovo
cmp
push
dec
pop
ficoms
sbb
lret
sbbb
dec
nop
push
add
repz
add
push
mov
test
orb
pushl
dec
jb
push
daa
fmull
add
out
jne,pn
mov
add
bnd
sub
push
xor
sahf
ja
jb
js
outsb
or
add
push
or
push
repnz
mov
mov
int
cld
insb
cmp
mov
test
push
dec
dec
cs
mov
push
ja
jns
fmul
or
int
ficoms
lds
mov
mov
pop
pop
jle
or
mov
leave
inc
pop
sub
jb
mov
pop
mov
mov
pop
cmp
xchg
fldt
jp
seto
repz
repz
or
daa
iret
or
dec
dec
dec
call
leave
mov
or
adc
sub
xor
cmp
repz
sbb
popa
cmp
es
sbb
push
dec
sahf
out
ja
and
repz
and
in
mov
outsl
iret
push
daa
das
push
repnz
jecxz
mov
sub
call
add
fmulp
repz
add
push
add
jno
mov
or
iret
daa
daa
daa
push
mov
test
ja
cmp
fldl
repz
scas
aaa
jne
push
push
mov
mov
add
mov
in
das
pop
mov
sub
fnsave
inc
pop
movups
iret
repz
push
adc
insb
adc
ja
orb
cwtl
sbb
xchg
je
push
mov
repz
mov
and
arpl
and
sti
mov
repz
loopne
push
mov
push
sbb
out
fisubrs
push
daa
sub
sub
ds
lea
into
aas
mov
movsb
push
pop
aas
daa
into
sub
roll
enter
jo
lock
mov
pop
mov
pushf
cmp
mov
cs
jo
jns
rolb
psllw
mov
pop
lahf
cld
push
outsl
add
or
sahf
out
sahf
add
pop
cvtpi2ps
jbe
out
adc
rorb
mov
out
and
mov
out
dec
sahf
add
fucom
jns
or
or
sysret
daa
iret
shll
in
outsl
daa
lahf
push
mov
sbb
jb
mov
cmp
adc
call
dec
mov
lret
jg
add
insl
andb
add
rorl
push
and
fstpt
inc
mov
mov
xchg
mov
inc
dec
outsb
mov
jmp
lahf
or
or
ret
rorl
pop
or
arpl
outsb
mov
dec
pushf
cmp
fisttpll
pop
adc
pushf
mov
mov
out
rcrl
sbb
ljmp
sbb
add
cmp
ds
mov
mov
jns
and
divps
and
imul
jns
out
lea
cwtl
mov
iret
sub
pushf
stos
js
aam
lock
and
mov
iret
repz
push
push
cs
ss
cmp
or
bswap
leave
leave
in
push
pop
pop
data16
iret
repz
adc
xchg
mov
mov
in
ss
das
cmpsb
dec
into
stmxcsr
sbb
jae
mov
sbb
repnz
nop
fdivp
cmp
repz
and
and
and
iret
leave
idiv
and
mov
testl
sub
in
daa
iret
sub
ss
sub
leave
repz
inc
push
sub
popf
cmp
pop
xor
pcmpeqd
outsb
daa
iret
jae
xor
mov
xchg
mov
out
scas
sahf
push
cmp
jns
outsb
pop
mov
cltd
jecxz
pmaxub
add
loopne
inc
loope
dec
push
push
pop
push
icebp
ficoms
jg
cs
push
inc
sbb
jns
dec
fisttpl
frstor
fcoms
daa
je
sbb
cmp
mov
shl
adc
mov
jo
subb
mov
pusha
call
outsl
xorb
mov
leave
inc
in
dec
push
inc
xor
add
int
sub
hlt
out
jne
jmp
inc
push
xor
test
jge
sbb
aas
sub
sbb
pop
inc
xchg
fsubrs
jno
jg
imul
cmp
add
call
iret
repz
loopne
fcom
ror
cmp
mov
jns
out
mov
out
sahf
js
jo
push
jns
pop
push
dec
inc
repz
in
xor
sub
adc
imul
xlat
lock
pop
icebp
jns
loopne
rorb
out
xor
sahf
fcmovne
cmp
add
jns
out
add
mov
xchg
out
or
or
or
or
daa
popf
je
ja
push
adc
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
xchg
out
push
push
and
jb
fildl
orl
iret
add
sub
mov
sbb
aas
xlat
sbb
data16
or
dec
pop
mov
or
pop
mov
add
and
jb
add
and
and
adc
inc
int3
ss
dec
add
inc
test
lock
push
das
test
testb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
cmp
mov
rcl
add
fadd
stos
pop
add
cmp
inc
mov
jle
out
pop
popa
pop
es
pop
push
pusha
imul
xlat
incl
xchg
pusha
stos
popa
mov
pop
das
adc
or
pop
mov
filds
out
push
or
or
iret
repz
adc
add
jns
iret
adc
fstpl
pushf
sbb
sbb
add
mov
mov
mov
fsubrl
fildl
jns
rorb
jp
cmp
jns
cld
mov
incl
push
add
aas
call
mov
outsb
loopne
adc
inc
pop
rolb
push
vmread
mov
mov
cwtl
mov
jae
xorb
addr16
push
push
mov
inc
or
adc
out
and
pop
pop
imul
cs
cmp
xor
insl
sub
scas
pop
xor
inc
inc
sgdtl
dec
push
xor
add
daa
pop
and
es
scas
out
fisubs
loopne
push
sbb
sahf
mov
andb
sahf
idivl
push
ds
push
test
out
iret
jl
push
push
push
pop
adc
insb
and
out
jns
out
or
or
pusha
jnp
out
sbb
je
pop
adc
iret
repz
push
sbb
inc
pop
cmp
repz
and
xor
cmp
repz
and
cmpsb
into
sbb
clc
popa
adc
jnp
jg
outsb
xchg
movsb
adc
mov
lods
inc
cld
xorb
inc
cmp
cmpl
pop
iret
repz
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
movsb
imul
xor
xor
mov
jae
adc
cli
mov
add
jns
mov
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
fcomip
ljmp
loopne
jmp
xchg
test
mov
cmp
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
or
clc
ljmp
leave
fwait
xchg
and
and
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
add
filds
movsl
jmp
jg
sub
jge
mov
lcall
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
decl
xchg
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
mov
cli
add
cmpsb
fmuls
dec
pop
lods
push
dec
xlat
out
inc
mov
ret
ja
leave
leave
sub
jnp
jg
xchg
cmpsl
add
ja
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
xor
filds
or
shrl
push
ficoms
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
sbb
leave
pop
js
mov
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
pushl
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
lock
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
cli
pop
rcr
cmp
xor
dec
jg
adc
ret
movsb
sti
hlt
shrl
imul
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
push
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
fbld
push
inc
push
imul
xorb
sbb
push
imul
pushl
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
pushl
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
sar
pushl
jns
imul
andl
shrb
rclb
or
add
sar
or
das
es
lds
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
scas
add
test
jg
lcall
jmp
mov
xor
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
or
or
cmpsb
mov
ja
add
lret
or
push
jbe
push
movl
mov
in
int3
push
scas
adc
xchg
in
aad
push
xlat
cmp
repz
fcmovnu
repnz
repz
loop
in
iret
repz
in
jmp
iret
repz
in
repz
cmc
iret
repz
div
clc
stc
cli
sti
pop
cwtl
add
sbb
add
pop
xor
loop
push
adcb
push
mov
inc
inc
sub
je
push
dec
bound
cmp
stos
xchg
cmp
je
insl
bound
aaa
into
popa
je
push
fists
and
cmp
cld
in
cmpsl
pop
inc
jno
xor
pop
inc
cmp
pop
bound
xor
lods
insl
pushl
bound
arpl
cmp
arpl
or
xor
dec
insl
pushl
bound
and
popa
push
inc
jbe
pop
insb
imul
inc
insb
imul
sahf
or
inc
orb
push
inc
cli
inc
push
cmpsb
push
mov
xor
popa
or
push
mov
shlb
push
je
inc
xchg
mov
ss
jbe
mov
sar
push
inc
aas
sub
inc
push
xor
jle
gs
inc
or
js
push
nop
bound
pop
aaa
mov
xor
insb
popa
jns
test
or
xorl
aaa
fisubrs
sub
insb
aaa
aas
rorb
push
inc
push
sarb
adcb
adc
push
and
jae
sbb
inc
out
jne
daa
pop
sbb
adc
inc
aas
es
push
inc
shl
and
sbb
inc
pop
out
std
icebp
adc
je
jo
inc
inc
add
ds
mov
xchg
add
mov
iret
int
push
dec
cmp
insb
mov
lds
sbb
mov
mov
adc
jne
add
mov
xchg
dec
jge
pop
aad
pop
xor
xor
or
add
addr16
aaa
jbe
push
clc
xchg
into
pop
jo
subl
adcb
aas
mov
cltd
dec
add
and
ret
gs
outsl
add
pop
xchg
pop
mov
test
ret
lcall
es
mov
mov
aad
xlat
mov
movb
xchg
out
cmp
adc
add
add
loope
popa
jo
xor
or
lahf
lahf
sub
gs
outsl
outsl
test
nop
push
mov
bound
sti
mov
in
in
shll
sub
test
cmpsb
add
arpl
test
mov
ret
int
mov
call
xchg
orl
lret
sub
subl
jb
push
out
mov
gs
inc
outsl
arpl
fimull
mov
jbe
std
add
push
bound
ja
inc
jbe
dec
fbstp
jns
sbb
xor
les
fistpl
fdivl
das
xor
sti
push
inc
add
addb
inc
sbb
pop
pop
or
adc
or
mov
mov
jne
orb
sbb
daa
sbb
inc
stos
mov
push
push
sbb
jg
inc
push
inc
dec
pop
bound
inc
je
jmp
arpl
je
testb
pusha
in
insl
inc
or
lods
aaa
push
andb
inc
mov
ficoml
out
daa
add
add
test
orb
add
subl
inc
loopne
push
es
add
dec
jg
push
xchg
stos
inc
scas
int3
adc
jmp
dec
inc
into
add
adc
push
add
sub
inc
or
call
sbb
out
outsb
ja
mov
push
dec
inc
or
pop
adc
sub
add
ljmp
cmp
cmp
test
jnp
push
out
lock
push
xchg
lcall
out
xchg
lods
jmp
gs
out
and
insl
add
popf
fmul
test
enter
xchg
roll
adc
aad
mov
dec
call
sub
in
xchg
cli
pusha
cmp
jbe
pop
fimull
je
test
push
push
xor
mov
int
or
leave
xor
xor
adc
repnz
call
icebp
xchg
mulb
movsb
pop
cmp
dec
int3
push
dec
dec
inc
pop
outsb
add
out
enter
out
arpl
pop
das
mov
jl
test
or
mov
ds
pop
enter
das
mov
cmp
daa
bound
cmp
rclb
test
inc
clc
push
decl
sbb
dec
aam
xchg
sbb
jnp
out
insl
xchg
ljmp
add
jge
push
ret
adc
mov
cmp
xor
outsb
inc
adc
pushl
lods
jno
inc
sbb
aas
and
lret
in
stc
cld
fiadds
or
aad
cwtl
push
pushl
pop
and
push
popf
js
cltd
mov
mov
in
add
ret
sbb
stos
incl
mov
fsubl
mov
push
sub
mov
int
lods
mov
mov
fcoms
clc
repz
lods
in
hlt
popa
mov
cmp
rcl
cmp
mov
dec
adc
mov
gs
push
mov
push
mov
ljmp
xlat
push
mov
pop
jo
adc
mov
pop
adcl
cmp
xchg
lds
dec
movsl
add
popf
cmpsl
movsl
outsb
push
mov
stos
loop
adc
stc
decb
jns
mov
ret
xor
sahf
mov
xorl
insl
xor
shrl
scas
jecxz
in
jno
pop
dec
mov
xchg
pop
add
mov
sarl
call
popf
out
xor
xchg
stc
pop
fildll
pop
xorb
inc
sub
lcall
adc
bound
sbb
cli
dec
push
lock
lock
cmp
pop
std
decl
std
addl
jb
sbb
cmc
data16
aad
fsubs
xlat
adc
incl
push
pop
dec
and
outsb
mov
push
push
das
push
mov
add
dec
push
inc
cmp
pop
mov
insl
mov
mov
mov
aaa
iret
cmp
rorb
mov
ljmp
mov
imul
sarb
orb
call
lods
xchg
je
lret
incl
jmp
push
pop
test
mov
push
push
dec
ds
lcall
push
xor
bound
lock
jmp
inc
push
pop
or
mov
fstpt
lods
out
js
xchg
jnp
test
inc
enter
das
cli
incl
jecxz
test
sub
jp
push
adc
test
movsl
mov
pop
adc
and
and
pop
xor
lea
xor
pop
std
sub
push
sub
pop
sub
pusha
sbb
aad
nop
and
imul
mov
icebp
xchg
popf
xchg
jge
dec
and
push
dec
jo
sub
dec
mov
movsl
jg
pop
fimull
add
js
mov
jbe
jg
mov
ds
mov
xchg
push
pusha
in
push
mov
movsb
fstpt
repnz
ljmp
or
ljmp
add
add
push
std
shlb
addr16
fimuls
rorb
add
xlat
and
jmp
int
negb
and
cltd
ret
push
nop
sbbl
bound
jns
mov
dec
pop
addr16
fcoms
movsl
inc
xlat
loopne
cmp
or
incl
insl
xor
lods
jl
loop
aaa
sti
mov
jno
and
outsl
aad
sub
ljmp
out
iret
sub
daa
popf
loop
into
fnsetpm(287
inc
movsb
mov
adc
fisubs
imul
popa
aad
lcall
std
or
jl
sti
loopne
es
mov
pop
das
sub
push
or
pushl
pop
fidivrs
aaa
mov
mov
adc
fld
adc
call
cli
push
mov
xorps
pop
jg
daa
sub
sub
movsb
js
aaa
push
pop
movsb
or
lcall
dec
cwtl
pop
shrl
and
cmpsl
mov
mov
repnz
ret
mov
pushl
js
fisubl
mov
arpl
ret
adc
clc
mov
call
xchg
call
lds
pop
sub
xchg
loopne
rcrb
pop
xchg
xor
incl
int3
mov
cmp
faddl
daa
or
mov
push
and
adc
divl
mov
xchg
cmp
test
sti
xor
std
add
and
pop
pop
jae
jmp
sbb
stos
std
push
inc
and
jb
push
loope,pn
negb
in
cmp
call
outsb
daa
mov
sub
nop
and
inc
repnz
mov
jne
sub
sub
push
imul
inc
imul
pop
or
push
inc
scas
add
test
imul
fmuls
and
decl
xchg
mov
and
pop
inc
fldt
clc
movsb
pop
dec
inc
das
cli
add
into
adcb
mov
cltd
data16
pop
push
ret
jns
pop
cld
xor
push
out
add
jmp
mov
inc
xchg
not
sahf
mov
inc
cs
jnp
aas
out
adc
mov
call
sbb
sub
add
mov
por
test
fisubl
js
imul
cmp
cmp
xchg
adc
sub
leave
inc
push
ret
cmp
pop
test
pushf
and
push
jl
sub
aad
call
mov
imull
mov
les
repnz
int3
leave
cwtl
ljmp
call
xchg
jb
and
icebp
js
out
cmc
jns
inc
mov
mov
incb
shll
out
lcall
xor
inc
aaa
mov
aad
dec
aaa
cs
aas
mov
lahf
idiv
icebp
mov
into
nop
inc
mov
outsl
fsts
stos
scas
mov
push
in
push
pop
or
movl
add
nop
or
dec
insb
inc
sbb
push
repz
adc
cmp
and
pop
inc
inc
xchg
xchg
test
bnd
rol
incl
test
idivl
loop
cltd
sbb
in
mov
lret
stos
arpl
push
sti
dec
out
clc
pushl
aaa
loopne
inc
jmp
and
mov
outsb
xor
mov
or
call
and
or
or
jb
daa
mov
sbb
or
pop
sub
mov
jo
dec
mov
pushl
xchg
jo
adc
sahf
or
xchg
add
mov
ljmp
call
shlb
or
es
mov
sahf
push
std
jmp
inc
adc
mov
outsl
jmp
ja
idivl
push
mov
insb
lahf
or
fdivs
int
inc
or
push
jbe
ret
push
idivl
mov
call
daa
not
lods
imul
adcl
sbb
sub
repz
dec
xchg
adc
stc
rolb
iret
sarl
pop
arpl
mov
cmp
jecxz
xchg
cli
movsb
int3
add
dec
adc
sub
shrl
push
dec
in
mov
lds
xor
sbb
mov
push
mov
jae
fdivs
jg
incl
shll
imul
dec
jnp
inc
fcmovu
cmpb
popa
imul
pop
cmpb
mov
cmp
cmpsl
adc
or
push
jmp
jo
out
jbe
adc
sbb
adc
cmp
fcomip
pop
add
insb
pop
icebp
and
jbe
lock
std
mov
cmp
push
mov
fstp
sbb
scas
jnp
sbb
push
lahf
enter
mov
incl
outsb
stos
mov
lahf
and
in
and
shr
and
and
xor
lcall
out
lods
sbb
lds
xchg
shl
dec
lahf
mov
movsl
mov
push
incl
mov
or
and
roll
ficompl
xor
jmp
push
mov
fs
add
inc
push
xor
popa
je
or
pop
or
imul
sbb
out
aam
cs
stos
xlat
shrb
js,pn
or
jmp
lds
es
scas
push
rcrl
les
jge
inc
inc
addb
adc
and
xor
arpl
mov
rclb
xorl
hlt
subl
test
push
call
loope
lcall
decl
push
pop
rcll
or
cmpsl
scas
jb
repnz
sbb
inc
call
lret
nop
push
jmp
test
xchg
repz
add
ljmp
mov
rol
xchg
lcall
lds
pop
cmc
inc
sub
lcall
fdivrl
int
aas
cmpsl
cmc
jne
in
sub
daa
hlt
mov
jg
pop
sbb
scas
repnz
pop
je
das
rcr
mov
cld
fcomip
lcall
ficoms
ss
fildll
pop
add
cmc
jl
addr16
sub
nop
icebp
decl
jg
aad
fsts
inc
stc
cld
pushl
dec
xchg
sub
mov
mov
sub
fidivrl
ret
adc
aaa
adc
dec
fmuls
add
popa
add
call
fucom
fwait
lock
jns
cli
or
add
xchg
jle
mov
mov
aam
sbb
xor
cmp
stos
test
or
mov
ljmp
shrd
xchg
inc
daa
xor
jo
add
sbb
ret
jnp
decl
and
faddp
fldl
insl
sub
jmp
jp
lret
push
lret
repz
call
rcrl
and
xor
cmp
xor
mov
sti
lds
cmp
incl
in
subb
xchg
or
push
popf
aam
or
adc
pushl
mov
das
or
out
lcall
outsb
mov
lcall
lods
sti
movhps
mov
adc
sub
lock
sbb
adc
ljmp
cmp
dec
or
in
inc
or
xor
pusha
sbb
leave
mov
or
lcall
lea
or
jge
push
mov
push
test
repnz
inc
dec
or
dec
imul
call
iret
sbb
das
sub
mov
mov
cmp
ret
mul
cmpb
out
and
pushl
mov
dec
lret
outsl
out
loopne
mov
mov
loopne
pop
aam
lods
aad
inc
inc
sub
pushl
mov
adc
insl
test
insb
add
pop
sub
add
movsb
push
cld
arpl
stos
scas
cli
dec
cmp
or
insb
xor
sbbb
ljmp
push
gs
mov
mov
popa
mov
ret
sahf
movl
mov
iret
and
mov
in
ljmp
adc
lret
shll
movsb
push
cmpsb
add
and
imul
aad
inc
pusha
out
ljmp
pop
mov
and
loopne
ss
pop
movsl
and
arpl
ret
sarl
outsl
sbb
jl
sti
inc
and
mov
sub
loope
aaa
lcall
inc
cmp
jmp
mov
mov
rcl
mov
cld
jg
fdivl
jbe
inc
or
xchg
movsl
dec
repz
mov
or
neg
xor
lods
loope
test
jmp
jae
repz
and
xor
pushl
das
es
mov
rolb
adc
loop
push
adc
dec
mov
pop
and
imul
pxor
xchg
imul
cmp
and
gs
imul
add
ljmp
fsubrs
test
sahf
push
and
fdivs
mov
adc
mov
jg
ret
dec
int3
test
test
mov
je
rcrb
pop
pop
cmp
lcall
enter
push
mov
test
icebp
lahf
int3
rcll
or
bound
insb
repnz
or
pop
incl
mov
inc
test
adc
popa
out
sbb
pop
icebp
sbb
pop
cmpsb
test
ficomps
movsb
or
and
andl
jns
cmp
gs
mov
das
sar
fistpll
in
out
pop
cmp
push
lcall
push
inc
or
clc
decl
call
push
cmpsb
test
icebp
jp
xlat
lods
inc
mov
mov
jmp
jg
adc
es
xor
test
outsl
dec
cmp
pushl
sub
ret
pop
js
push
scas
mov
inc
push
inc
pop
shlb
xlat
push
std
lcall
xor
mov
add
int
rcl
mov
mov
push
or
scas
loopne
jno
leave
cli
out
add
sbb
dec
jo
jg
jmp
and
mov
mov
cmpsl
mov
mov
into
lock
les
pushl
lea
iret
sbbl
pop
xor
insl
cmpsl
lods
dec
pop
cmpsb
sub
xlat
cld
fildl
call
fsubs
leave
clc
std
nop
shl
nop
lock
and
cmpsl
lahf
adc
xor
sahf
inc
ss
decl
std
out
cmpsl
cmpsl
pop
pop
fs
xchg
mov
sbb
and
jno
popf
adc
inc
mov
jmp
add
xor
jp
pmaxub
dec
sbb
int
stc
movsb
and
jo
jle
lcall
cwtl
jecxz
pop
shrb
or
call
in
push
sub
inc
aas
int3
jecxz
fisttps
pop
mov
jl
push
jecxz
fstps
pop
shl
movsl
sahf
sub
gs
add
sub
push
fcoml
jg
mov
arpl
scas
cltd
sahf
dec
cmp
add
dec
call
loope
loope
sahf
mov
lcall
enter
stos
and
data16
imul
jno
cmp
or
ljmp
mov
movsb
push
negl
xchg
sub
call
loopne
das
rorl
jne
dec
push
fs
adc
cmpsb
les
mov
iret
stc
decl
scas
ljmp
and
sub
insb
push
shl
out
sub
inc
fcmovnu
cmp
sbb
call
test
movsl
pop
push
pop
dec
scas
mov
cmp
enter
jle
add
jo
mov
mov
push
jb
cmp
insl
mov
out
movsl
gs
shlb
out
orl
inc
lahf
cmpsl
bound
xor
or
scas
mov
sbb
es
sbb
or
sbb
incl
nop
dec
test
addl
cmp
xor
xor
ljmp
xor
adc
cld
mov
pusha
jecxz
mov
int3
ljmp
or
incb
pop
sub
repz
adc
or
lds
mov
push
lcall
add
leave
call
mov
fisttps
dec
fisubs
push
xor
shrl
pusha
loop
or
cmp
pop
shrb
aaa
or
enter
xchg
inc
out
pop
loope
mov
sbb
imulb
adc
data16
jmp
ljmp
dec
in
jne
pop
mov
stc
or
lock
cmpl
rcrl
cmpsb
push
jp
fcomip
pushl
lods
cmp
jecxz
jle
add
xor
xchg
add
lock
xchg
cmp
inc
vpunpckhwd
xor
sub
test
inc
mov
pop
xchg
jno
pushl
ret
mulb
lods
jb
xchg
and
or
popf
mov
ds
xchg
dec
enter
sub
jmp
mov
jle
jg
iret
sbb
mov
icebp
outsl
inc
and
mov
aad
mov
adc
and
or
cmp
in
repz
mov
pushl
push
xchg
cmp
aad
and
jno,pn
jo
push
iret
lahf
test
ret
mov
add
ljmp
dec
dec
gs
fidivl
jno
lcall
cmc
push
cld
mov
imul
gs
ret
popa
mov
test
inc
cmpl
dec
aaa
stos
dec
lds
mov
incl
test
out
pop
fistps
pop
jnp
insb
sbb
popf
add
push
mov
push
inc
aas
mov
test
shl
add
push
mov
jns
out
pop
popa
push
dec
pop
add
inc
cltd
lock
jle
xor
pushf
or
and
push
data16
sbb
add
jnp
stos
fwait
mov
xchg
and
sub
and
stc
cmp
ss
mov
lods
out
jmp
lods
cld
in
mov
pusha
push
cmp
ljmp
imul
icebp
jge
adc
jmp
lcall
pop
inc
pop
in
sbb
gs
xchg
cmp
sti
mov
pop
das
lea
pop
jle
mov
test
sti
fiaddl
jmp
jae
inc
cmc
pop
lahf
inc
std
jmp
jmp
sbb
lods
and
dec
xchg
clc
cmpsb
fsts
dec
andb
dec
arpl
sub
ljmp
es
into
aad
jnp
lods
out
cwtl
test
and
std
cld
test
testb
mov
xchg
mov
xchg
mov
cmpsb
mov
hlt
je
push
dec
push
cmp
pushl
rolb
push
adc
sti
incb
rcr
repz
sub
sti
push
pushl
lss
and
inc
fcomps
or
lods
xchg
jecxz
push
cmc
ds
mov
jmp
clc
jbe
dec
fadd
xchg
or
jecxz
and
sbb
sub
pushl
push
fs
or
lods
cltd
sub
add
das
xchg
add
jecxz
jns
push
leave
add
call
xchg
mov
lahf
in
clc
inc
push
in
and
cmp
fsubp
mov
jmp
out
ljmp
insl
push
mov
xor
lods
gs
loope
pop
cmp
mov
cld
jge
dec
int3
mov
adc
add
cld
mov
pop
push
cmp
pop
pushl
cld
stc
fcomip
loopne
push
or
repz
sub
aaa
popa
add
js
pop
js
cmc
xchg
adc
lret
fcomip
andb
into
jecxz
aaa
mov
sar
pop
pop
rep
lods
cli
jmp
std
add
xor
leave
bound
int
cli
jae
jae
out
fbstp
push
sahf
add
adc
dec
adc
cltd
mov
or
int
sbb
hlt
pushl
dec
arpl
jle
cmpsl
dec
fwait
push
lahf
pop
cli
jne
push
fldenv
test
rorl
scas
mov
insl
movsb
outsl
jnp
shrl
jo
jbe
sar
xor
hlt
jo
pushf
cli
cmp
mov
into
pop
xchg
dec
scas
cli
fcoms
call
lfs
ret
in
ljmp
add
pop
adc
or
insb
mov
dec
mov
mov
rclb
jmp
movsb
and
outsb
das
jmp
in
sbb
pop
pop
in
sub
pop
aam
stos
sbb
jmp
and
hlt
leave
sbb
jecxz
jne
fstl
push
daa
out
or
sti
xorl
xor
mov
pushl
cld
or
pop
jae
adc
and
fbld
sbb
nop
pop
mov
and
jmp
int3
gs
adc
daa
jae
mov
sti
ljmp
mov
das
jmp
dec
jmp
stc
xchg
xchg
push
xchg
xchg
fwait
jge
inc
out
push
inc
xor
lock
adc
push
or
fldcw
dec
mov
xor
sbb
jne
inc
cs
jae
add
into
mov
jecxz
cmp
push
out
cmp
fistps
pop
fnstcw
cmpsl
cmp
cmpsl
or
test
incl
mov
ds
mov
arpl
push
sti
cs
xor
arpl
pop
jge
cmp
icebp
call
lock
fwait
sbb
mov
adc
add
enter
lcall
in
popf
sbb
inc
bound
adc
mov
test
inc
dec
cmc
ja
cmp
loope
add
mov
inc
leave
inc
stos
ret
repz
lea
pop
xor
push
adc
dec
pushl
mov
xor
sub
mov
aaa
sub
mov
stos
leave
repnz
ljmp
pop
adcb
sub
adcl
sbb
lcall
into
and
call
lret
cmc
cli
push
cmp
je
xchg
push
ds
mov
sub
in
inc
jb
imul
cmp
mov
mov
test
les
mov
sbb
or
sarb
xchg
incl
jno
scas
push
dec
sub
adcb
xchg
loope
fs
inc
adc
push
ljmp
sub
out
xor
jmp
inc
and
cli
mov
jecxz
or
shl
out
sar
push
pop
clc
ret
pop
popf
jae
pop
pop
sub
push
add
mov
pushl
les
sub
psubsw
pop
or
mov
push
mov
mov
ljmp
mov
subb
sub
out
mov
mov
mov
push
pushl
cld
movsb
and
xchg
lcall
inc
rcl
cmpsb
stc
pop
out
mov
add
dec
in
mov
cmpsl
add
lret
xlat
mov
pop
xor
gs
sub
test
pop
test
push
cld
pusha
pushf
xor
add
test
xchg
shl
stc
dec
fst
decl
sub
fiaddl
sbb
xchg
push
inc
bound
movsl
xchg
mov
sbb
inc
cmc
ss
call
nop
je
xor
pop
dec
push
ret
cmc
loopne
popf
sahf
gs
and
xor
jns
mov
jmp
cltd
scas
in
pop
push
lret
lods
lret
shr
and
cmp
ret
int
jl
daa
sbb
scas
pop
sub
jns
fiadds
pop
jecxz
jmp
cld
out
jl
ret
and
cwtl
int3
inc
cmp
push
sub
call
cmp
fmull
sub
jns
and
pop
call
clc
pusha
inc
lds
mov
cmc
sarb
add
sub
mov
mov
pushl
popf
add
out
nop
les
add
les
push
pop
sub
stos
cmpsl
icebp
pop
and
fdivrl
sti
leave
ja
inc
pop
dec
dec
xchg
fimull
stos
int3
mov
ror
scas
jg
ljmp
mov
ljmp
mov
je
cmpl
neg
ret
incl
xor
mov
jl
int
iret
sbb
imul
ja
or
pop
pop
in
lcall
rolb
movl
popf
outsb
daa
insb
ja
adc
sub
pushl
adc
pop
sub
pop
das
jecxz
mov
adc
push
test
icebp
bound
inc
pushl
mov
inc
clc
lds
and
cmp
push
mov
mov
icebp
dec
xchg
ret
xor
jge
cmp
push
xchg
adc
mov
jae
mov
ja
cli
push
or
xlat
dec
mov
scas
ljmp
jb
adc
out
jae
pop
push
cld
aad
sbb
and
push
lcallw
mov
fstpt
fstpl
mov
and
push
push
mov
stc
jp
rcrb
jmp
sbb
push
cli
and
inc
fadd
int3
jns
cltd
adc
stos
arpl
push
mov
into
xchg
lcall
aam
lods
icebp
stos
scas
and
mov
call
xlat
sahf
xchg
mov
mov
mov
int
mov
test
scas
repz
addb
jle
mov
ret
push
and
adc
int
fsts
into
dec
lahf
push
in
xor
in
mov
aaa
and
mov
lds
xchg
ja
gs
call
dec
int
add
adc
pop
dec
sarb
pushf
je
movsb
lods
std
or
dec
cmpsb
bound
add
cmpsb
jo
pop
and
stos
ficompl
decl
dec
xchg
clc
mov
mov
adc
push
jge
hlt
std
mov
ret
and
inc
ret
fdivr
decl
jae
jg
mov
cmp
xchg
in
in
fbld
loopne
sub
jp
push
pushl
mov
movsb
sub
xchg
add
lahf
mov
jo
outsb
bnd
test
inc
adc
incl
inc
arpl
sub
test
dec
out
inc
test
mov
mov
push
sbb
dec
lock
scas
push
loop
push
dec
adcl
mov
push
push
adc
aas
in
and
cmp
stos
rcll
xor
push
mov
into
add
lcall
mov
push
sub
scas
daa
xchg
xchg
leave
frstor
xchg
jns
mov
pop
std
inc
mov
bound
mov
cmc
jb
or
jp
adc
jge
push
subb
outsb
int3
cmp
pop
inc
mov
popa
inc
or
into
sbb
cmp
jnp
hlt
in
lcall
jno
push
cmpsb
nop
sbb
pop
cmpsl
repz
ja
pop
ljmp
mov
dec
sbb
les
xor
das
cli
loopne
inc
outsb
jnp
std
ss
into
jns
adcl
mul
test
lods
popf
decl
pusha
out
fadds
inc
xchg
mov
das
es
out
push
les
ja
testb
fucom
outsb
xchg
sub
fildll
xor
fisttpll
fwait
add
stos
js
jmp
lahf
test
sub
cld
int
rcrb
test
mov
fwait
pusha
sbb
lcall
push
xchg
xor
add
mov
mov
inc
sarl
mov
xor
push
cmpsb
push
mov
mov
pushl
data16
pop
inc
and
mov
mov
mov
scas
insl
into
sti
sub
or
lcall
wrmsr
push
fst
out
in
mov
sbb
push
in
test
jg
jmp
test
repnz
mov
out
push
jmp
loope
std
incl
addr16
mov
dec
gs
outsl
ret
sbb
adc
pushl
loopne
mov
aas
inc
in
inc
lods
ss
add
dec
or
int3
pushf
xor
repnz
gs
es
lcall
popa
sub
xchg
or
mov
mov
jno
idivl
lods
jae
or
fstps
cs
dec
push
aam
mov
ret
sbb
loop
xor
adc
cmp
rcrb
fsts
jbe
inc
movsb
fmuls
ss
fcmovu
decl
sti
cs
pop
dec
push
mov
loop
jne
add
fidivrl
call
or
std
and
jecxz
pop
out
push
add
rep
leave
lcall
test
pop
mov
and
les
addl
add
sub
dec
jmp
in
adc
pop
jb
sub
call
loopne
xchg
and
mov
pop
imull
mov
sar
push
outsb
and
mov
push
sbbb
or
xchg
mov
inc
sub
add
or
scas
fcomps
cmp
imul
sbb
std
mov
cmc
int
sbb
push
add
in
call
inc
add
fnstsw
imul
mov
cwtl
mov
adc
insl
out
cmp
ljmp
call
inc
pop
lods
jns
jae
icebp
push
ds
inc
shlb
loop
jo
adc
mov
in
or
mov
std
fistpl
inc
push
pop
out
rcr
adc
scas
aaa
cmpsl
sti
rorl
dec
jg
ds
mov
int3
pusha
push
scas
sbb
out
push
dec
xor
sub
adc
xorl
in
fsubr
add
inc
scas
mov
ljmp
cmp
lahf
fwait
adc
bound
add
data16
pop
and
out
jbe
stc
adc
push
inc
mov
xorb
lock
mov
dec
jno
fsubs
out
cld
inc
push
add
and
cld
pop
dec
mov
dec
ret
cs
cmpsb
arpl
adc
shll
push
lods
jbe
decl
shrl
jno
push
int3
popf
rcrl
cmp
call
or
icebp
xchg
pop
and
shlb
incb
clc
hlt
pop
cmc
and
insl
cmc
xchg
xor
adc
and
addr16
and
cmp
lcall
pushf
divb
pop
sbb
xor
dec
dec
popa
push
out
pop
push
sbb
test
jns
leave
xor
xchg
mov
faddl
mov
mov
jno
cmp
mov
xor
stc
lods
fdivrs
push
push
lahf
adcb
or
incl
inc
stos
and
inc
and
test
mov
xchg
jg
aam
je
xchg
cltd
test
pop
hlt
jo
jg
xchg
outsb
jl
int
cltd
dec
aad
mov
add
imul
lahf
add
call
test
or
icebp
sbb
pop
mov
add
mov
xchg
cmp
push
cwtl
shl
jle
or
pop
mov
pusha
xlat
pop
and
pop
cmc
aad
ja
aas
pop
sub
lcall
decb
cltd
sbb
xlat
out
popf
in
sbb
sar
pushl
mov
scas
or
enter
jns
mov
or
fisubrs
pop
mov
mov
jecxz
incl
xchg
jp
outsb
cmpsl
push
push
push
scas
jns
std
cwtl
stos
test
jmp
ret
mov
xor
pushf
in
fidivrl
dec
xlat
dec
imul
sbb
scas
movsl
cs
das
lock
decl
sti
jle
inc
push
loop
or
hlt
and
inc
ret
sub
sbb
outsl
clc
cmp
aas
pop
mov
divb
lea
and
in
pop
mov
ljmp
mov
mov
iret
mov
add
jmp
jge
push
out
ret
mov
inc
repnz
mov
sbb
adc
cmp
pop
cli
xchg
xor
pop
incb
add
ja
and
cld
cltd
sbbb
add
dec
xchg
mov
jg
out
mov
nop
pop
clc
out
jbe
repnz
iret
mov
jne
rcll
sbb
fcom
decl
add
into
push
lods
addr16
insl
negb
dec
ljmp
in
aad
mov
popf
cmp
xchg
repz
fsts
cmp
xorb
sahf
cmp
mov
lea
jb
and
xor
sbbb
dec
fucomi
xchg
sti
incl
std
ljmp
xor
pop
addr16
sub
addl
into
mov
pop
icebp
lret
mov
xlat
gs
iret
ljmp
insl
jge
or
test
jnp
fidivl
push
and
iret
jmp
fcompl
inc
ficomps
pop
daa
adc
ljmp
dec
xor
cwtl
mov
shlb
lods
enter
dec
pusha
and
ljmp
jbe
cs
orl
push
les
xchg
pop
mov
lcall
xorb
push
mov
sbb
mov
aas
sbb
fisubs
cmp
call
in
and
jmp
icebp
mov
test
and
inc
push
and
aas
add
jmp
or
fwait
sbb
jnp
ret
imul
mov
dec
loope
fidivrl
cmp
jbe
cld
xor
xchg
adcb
out
test
fcoms
nop
xor
jg
into
popa
decb
scas
jmp
test
sub
aas
std
sbb
test
jmp
sti
and
jns
ja
dec
cli
shrb
inc
push
ljmp
fisubl
and
inc
sahf
or
inc
aam
bnd
aam
mov
cmp
inc
cmpsb
dec
pop
ljmp
mov
push
adc
or
imul
aaa
or
rol
inc
lods
add
aad
and
pushl
sbb
in
xchg
aas
cld
dec
ss
cmp
ss
repnz
test
int3
xchg
pop
and
pop
divb
mov
sbb
filds
les
and
pop
cmc
dec
into
rorl
stos
push
dec
cli
dec
test
incl
push
jae
loopne
imul
jmp
das
xchg
jbe
lret
fldcw
les
mov
in
popa
mov
ljmp
lret
add
pop
fstl
pop
sahf
push
mov
fiadds
lock
add
bound
mov
or
ds
inc
loopne
dec
xchg
xchg
repnz
inc
cmp
rorl
ja
imul
pushl
lds
popf
jp
push
sub
mov
xchg
push
out
xor
clc
pushl
jb
mov
scas
mov
loopne
jg
xor
ja
lock
ljmp
gs
inc
in
mov
push
xchg
inc
mov
and
mov
fsqrt
fistps
inc
adc
fwait
pop
inc
divb
pusha
fdivr
adc
xchg
cld
sbb
incl
jl
lcall
std
xor
xchg
push
ret
xor
jmp
and
xchg
lret
mov
lahf
jp
cmp
mov
pop
fsubl
sti
ds
cli
decl
fnstsw
mov
addl
mov
adcl
fwait
addr16
jmp
rcl
shll
and
mov
fldcw
cmp
pop
cmp
jp
or
in
aaa
dec
dec
aad
imul
lea
fcomip
sbb
ret
imul
xchg
add
pop
iret
push
enter
pop
scas
cmp
ljmp
xor
bound
ret
sbb
aaa
push
and
jge
cmpsl
fucom
xchg
mov
lock
ljmp
clc
lods
je
inc
mov
jae
negb
jp
mov
test
xor
inc
add
add
arpl
add
jbe
pop
in
jo
ficomps
mov
jmp
sbb
int
jg
fcoms
push
xor
mov
daa
icebp
ja
add
fmull
inc
xchg
lcall
jmp
cmp
into
test
mov
mov
ja
cmp
nop
inc
std
scas
cli
cmp
in
jle
and
movsl
and
ljmp
ljmp
mov
das
cmp
das
insl
inc
ret
dec
pop
hlt
out
push
rolb
mov
add
inc
imulb
sub
add
fwait
sub
fs
shrb
and
xchg
rol
stc
rorl
lcall
lcall
sbb
in
pop
bnd
sub
mov
daa
and
test
incl
xor
dec
loope
mov
pusha
in
pop
shlb
mov
icebp
pushl
imul
scas
add
add
ret
daa
mov
xchg
and
sahf
lahf
push
adc
lods
cmpsl
inc
add
jg
xchg
xchg
sti
movsb
and
in
and
jg
jg
xchg
int
les
mov
shll
jo
fcompl
inc
mov
data16
rcrb
ja
pop
xchg
mov
and
mov
jg
push
popf
and
jl
xchg
mov
xorl
hlt
sti
mov
jns
jne
aam
leave
and
mov
call
jae
daa
sbb
out
call
and
jae
js
in
push
insl
adc
push
int3
jbe
push
pushf
xor
cmp
ficoms
movsb
pop
mov
in
popf
jb
adc
iret
mov
dec
rolb
pushl
cmpsb
andb
mov
mov
sub
xor
sbb
mov
jae
icebp
cmp
add
xchg
and
out
cmp
lds
fistpl
fiaddl
std
sbbb
sbbl
adc
inc
sub
enter
lcall
aam
cli
mov
mov
adc
mov
cmpsb
push
mov
ljmp
dec
addr16
insl
and
cmp
in
enter
and
shr
pop
pop
ljmp
movsl
rcll
std
mov
push
stos
sbb
or
pop
xlat
pop
cmpl
mov
pushl
adc
push
in
push
popf
sbb
sbb
or
push
movsb
scas
sub
sub
fldenv
popf
xlat
pop
int
imul
out
cld
addb
lret
inc
lea
mov
ljmp
call
sarl
mov
mov
mov
mov
sub
lea
push
les
outsb
xchg
fsubl
subb
inc
sub
popa
xor
icebp
dec
insb
insl
movsl
xor
popl
pop
xorb
es
fbstp
xor
add
sub
aaa
cs
aad
push
pop
pushf
test
ds
jo
incl
shll
sub
mov
iret
popa
pusha
jge
sub
cmc
jmp
outsb
fidivs
add
lret
mov
stos
cmpsl
aam
mov
insl
roll
pop
pop
int
cli
cmp
xchg
in
ret
aad
cmp
incl
popf
push
push
repz
cmp
adc
popf
ret
mov
and
mov
decl
pop
jecxz
dec
test
lods
repz
lods
mov
jecxz
push
or
sarl
gs
and
mov
add
test
ja
fistpl
pusha
pusha
inc
xchg
incl
xor
fnstcw
mov
cli
mov
xchg
lcall
data16
or
jb
out
fdiv
fs
push
jo
dec
mov
mov
decl
mov
cli
ds
mov
xchg
popa
mov
in
inc
filds
cld
push
fldl
push
jb
rclb
add
ret
dec
mov
jmp
adc
mov
shll
fisttpll
xor
outsl
cli
dec
ljmp
mov
int
jb
insb
and
pop
sub
jmp
mov
pop
icebp
mov
jne
loop
repnz
xchg
arpl
fistpll
inc
mov
cmc
cmc
add
and
cld
add
loop
call
sbbb
or
out
cmp
mov
mov
push
gs
ret
in
sub
jne
outsb
adc
pop
push
lret
xor
mov
pushl
bound
inc
sbb
je
fsub
and
adc
ljmp
es
iret
jbe
sbb
and
jbe
cmp
clc
mov
out
clc
mov
mov
enter
sub
adc
xchg
jecxz
adcb
xchg
or
in
lcall
push
rcrl
ljmp
insb
loopne
cmp
jb
lret
mov
sbb
incl
jns
into
fcomip
int
xchg
jne
repz
mov
sahf
sbb
push
out
lods
or
ljmp
mov
mov
aas
jne
push
jmp
pop
push
sub
push
rorl
mov
scas
dec
mov
mov
pop
test
xchg
out
fwait
mov
loope
sbb
xor
mov
xchg
incl
mov
repz
fcmovne
cltd
push
das
mov
pop
mov
pop
push
scas
lods
enter
xlat
call
or
mov
pushf
sahf
mov
pusha
mov
sub
sar
incl
add
inc
loopne
aam
mov
inc
imul
sub
daa
mov
call
mov
dec
jle
popa
roll
xor
and
xor
in
push
pop
mov
std
sub
jle
das
cli
fiaddl
dec
ss
push
pop
xchg
arpl
push
ljmp
hlt
mov
add
mov
sbb
int3
dec
stc
sub
cmp
jg
rcrb
rcrl
lods
icebp
inc
movsb
cmp
pop
sbb
into
pusha
xor
cmp
data16
and
jg
test
call
jno
adc
pop
daa
lods
popf
pop
andl
mov
mov
mul
outsb
decl
push
xor
idiv
jp
ret
add
or
dec
out
jae
shlb
dec
jb
sub
clc
sub
ljmp
pop
add
jno
loopne
ja
inc
stos
mov
cmpsl
inc
pop
insl
stc
andb
int
inc
pop
and
mov
sar
rcrl
xor
dec
test
add
mov
pushl
js,pt
push
addr16
ja
inc
aas
inc
cmpl
mov
jno
inc
js
fmul
ret
das
xlat
inc
ds
sub
test
cmovb
sti
les
sbb
inc
cwtl
xchg
daa
xor
decl
pushl
aam
jae
lcall
scas
in
aaa
mov
adc
call
mov
sub
mov
mov
fimull
fwait
add
dec
pushf
fists
leave
lods
sub
jmp
or
mov
mov
push
jae
das
jnp
loopne,pn
jne
push
and
push
sbb
iret
call
fnstcw
adc
add
ss
les
push
mov
mov
mov
icebp
xlat
sbb
lcall
cmp
and
add
inc
or
repz
gs
add
ljmp
fs
std
sar
dec
mov
cmpsl
int
pushf
xor
aaa
adc
into
jg
cli
repz
ljmp
inc
mov
pop
fidivrs
mov
mov
dec
out
jmp
stc
xchg
out
lea
out
data16
roll
sub
xor
rorl
shlb
movsl
sbb
cs
call
xor
shll
and
scas
xchg
cmpsb
mov
es
les
das
dec
sbb
pop
sub
cs
ljmp
jp
dec
test
push
scas
mov
pushf
pop
xchg
shrl
aaa
cmpsb
mulb
push
not
inc
ljmp
loope
dec
xchg
mov
pop
insb
jecxz
lahf
xchg
lock
daa
rorl
negb
outsl
lock
call
xchg
rclb
cwtl
jmp
das
jp
jmp
sahf
loopne
nop
or
mov
or
add
loop
outsb
es
loop
and
inc
or
out
call
cmp
int3
mov
jbe
ja,pt
pushf
into
mov
mov
pop
aaa
xchg
push
ret
repz
or
xchg
xor
adc
aaa
sub
jno
fcomip
decl
and
idivb
and
sub
addr16
inc
es
or
pushl
cmp
fwait
jno
imul
cmp
cld
dec
push
add
insl
fucomi
mov
fstl
aad
mov
inc
adc
outsb
test
rcll
movsb
jb
into
inc
mov
imul
out
incl
gs
pop
hlt
push
ds
mov
leave
rclb
mov
inc
jb
cli
mov
push
jmp
pop
lock
fs
das
stos
scas
push
or
sbb
xor
adc
and
jmp
fnstcw
push
cmp
bound
xchg
in
rcrl
cmp
pop
loop
and
lcall
call
repz
sbb
adc
inc
or
adc
and
nop
rcrb
dec
mov
mov
cld
decl
jno
sti
mov
les
mov
rcl
lcall
cmp
jmp
jle
mov
aaa
inc
jbe
mov
test
call
stc
shrl
rclb
mov
push
cltd
jp
mov
call
mov
ja
call
dec
jge
shrb
mov
pop
es
ucomiss
movd
aad
sbb
xlat
and
mov
push
add
leave
adc
cmc
jg
gs
jle
incl
cwtl
sbb
ret
cmp
fidivrs
fisttps
fidivl
mov
or
jns
dec
in
lock
xor
fnstsw
shrb
cmp
decl
fbld
cmpl
leave
cmp
and
sahf
rolb
xor
clc
test
stos
mov
or
ret
add
mov
pop
out
loope
pop
xchg
push
pop
ret
dec
rcll
fadd
mov
clc
stos
sub
ret
jno
cmp
jl
pop
es
push
pop
push
mov
test
jle
dec
lock
clc
lahf
in
bound
test
out
rcl
push
sar
insb
xchg
dec
fdivs
decl
push
mov
cmc
fidivrl
dec
or
push
inc
inc
push
shl
jp
mov
sub
cmp
jmp
into
pop
out
mov
fstl
jecxz
mov
inc
adc
pop
dec
jbe
mov
decl
daa
imull
movsl
sub
pusha
mov
jge
fisubl
add
arpl
int
adc
adc
jmp
pop
add
pop
test
cmc
adc
sbb
mov
stos
clc
pop
les
add
jl
push
lret
add
pop
and
xchg
mov
fimull
fsubrl
push
sbb
cmp
loop
fcmovu
jg
jmp
shl
pop
into
mov
adc
movsb
les
dec
in
mov
sbb
xor
mov
cli
call
or
cmp
cmpsb
lret
cwtl
mov
jb
incl
or
bound
jmp
mov
aas
adc
inc
in
xchg
and
pushl
cmc
add
mov
mov
sbb
mov
sbb
stc
aam
sub
lock
mov
call
mov
ret
fs
mov
sbb
adc
rorb
mov
jmp
xchg
pop
out
dec
ret
adc
aad
or
int3
sbb
jae
enter
call
push
mov
jle
push
mov
ds
add
fildll
daa
mov
sahf
pushf
cmp
dec
mov
mov
push
in
push
rorl
sbbl
cmp
loopne
inc
mov
jmp
mov
jmp
sub
sbb
mov
jns
push
ficoms
divb
mov
add
call
jne
sub
cld
xchg
imul
shll
stos
out
sbb
pop
je
fdivl
std
inc
loope
rorb
test
cmp
sbb
fbld
test
cli
incl
adc
movsl
xchg
popa
repnz
adc
adc
ss
lods
xchg
ret
das
scas
out
pop
cmc
ljmp
mov
shrb
outsl
lfs
xor
fidivrs
sub
test
jg
bound
clc
les
cmp
lods
and
iret
or
pop
push
or
call
ds
fldl
xor
add
push
push
out
scas
rorb
cmp
pushl
imul
inc
cmp
jle
call
mov
out
incl
insb
mov
rolb
nop
xor
mov
aam
jnp
mov
adc
jmp
mov
mov
push
pop
lock
sbb
jns
cltd
test
mov
fs
push
fstp
add
dec
inc
repz
addr16
shlb
xor
ljmp
jo
popa
mov
mov
sub
lock
push
pop
sbb
adc
sbb
pop
cmp
cmp
cmc
stos
fmuls
mov
dec
lahf
xor
push
lcall
int
add
sub
push
mov
pop
xchg
and
dec
cmp
call
pop
sti
pusha
inc
sub
xchg
jae
mov
xor
xchg
fisubs
pop
icebp
or
ficoms
sub
iret
fs
icebp
nop
filds
call
pusha
mov
enter
pusha
pop
js
dec
nop
call
pop
mov
insl
clc
dec
mov
xchg
repnz
mov
add
cmp
lock
stc
leave
stos
mov
into
outsl
adc
int3
push
push
shlb
or
xor
fstpt
fsts
out
aad
in
std
in
leave
jb
test
test
faddp
mov
outsl
das
lret
loopne
adc
jmp
orl
movsl
mov
xchg
inc
bound
push
mov
fsubrl
mov
jle
int
fwait
dec
lret
scas
sbb
popf
loopne
std
jge
rclb
jne
push
sub
jmp
es
mov
xchg
rcr
repnz
cmp
sub
push
push
jb
mov
shrb
pushl
mov
sti
cmpsl
mov
lret
test
out
mov
push
jmp
popf
xchg
add
mov
add
xor
cli
call
rcll
sub
jo
push
aas
leave
leave
fwait
loop
and
push
decl
incl
lds
pop
lea
subl
pop
sub
xchg
gs
dec
das
iret
mov
cmpsb
ja
bound
decb
inc
pop
xchg
xor
ds
jnp
idivl
sub
in
cmpsb
mov
jge
arpl
pop
pusha
mov
xchg
mov
push
shl
pop
pusha
movsl
xchg
dec
mov
mov
push
mov
stos
dec
mov
jl
decl
push
add
pop
syscall
jmp
int3
add
hlt
pusha
fsubp
mov
inc
test
mov
stos
push
mov
pop
ljmp
xchg
bound
mov
sbb
lret
or
and
and
mov
cmp
cmc
jl
lret
lods
loop
pop
sub
cmpsb
mov
xchg
adc
mov
push
cwtl
cmp
push
add
or
xlat
cmp
xchg
cwtl
mov
hlt
and
arpl
push
push
jg
call
ss
rcll
pop
shll
pop
andl
pop
call
outsl
push
clc
in
movsl
ret
add
in
es
fdivr
mov
mov
mov
add
clc
or
gs
xor
pop
stc
push
pop
cli
xor
xchg
data16
fldcw
jo
pusha
sub
xchg
inc
mov
mov
sub
pop
adc
ljmp
add
jnp
pop
inc
fwait
adc
mov
cmp
shrb
ljmp
into
or
jecxz
sub
lret
jg
pushf
outsl
pop
xchg
pop
dec
int
outsb
xchg
add
decl
cmp
push
enter
lret
adc
mov
inc
nop
mov
enter
pushl
out
das
adc
xchg
out
xor
cld
dec
push
sub
pop
imul
ds
xchg
add
pushl
push
lret
push
add
pop
das
jne
fcoms
pop
push
or
sub
dec
sti
xchg
lret
out
js
cmc
sub
test
lods
and
adc
fimull
and
std
jl
clc
mov
jo
lds
test
movsb
lahf
jmp
mov
mov
sbb
dec
incl
push
subb
jmp
inc
out
clc
aad
incl
dec
pop
mov
data16
cmp
cwtl
ss
ss
out
testb
leave
sar
jg
rcrl
fmull
pop
inc
in
mov
clc
loop
and
push
ret
inc
sbb
mov
jl
jecxz
adc
je
addr16
mov
push
cmp
ljmp
pop
icebp
cltd
xor
shrb
lods
jg
mov
subb
inc
inc
or
push
add
xchg
jg
sbb
pop
fildl
xchg
insl
mov
sbbb
ljmp
mov
cmp
sahf
scas
and
mov
pop
daa
and
mov
sub
cwtl
pop
stc
adc
jp,pt
sbb
outsl
imul
lret
push
insl
pop
mov
fisttpl
std
call
ds
sbb
in
lock
jb
cltd
sahf
aam
lods
adc
sahf
sahf
cmp
adc
jg
and
pop
mov
stc
xor
ud0
decl
lahf
pop
movsl
subl
cmp
mov
jecxz
aas
mov
mov
xor
ljmp
ret
push
cld
mov
push
addr16
sbb
sub
nop
jns
ret
pop
pushf
fimuls
popa
ret
ljmp
dec
stos
mov
loop
mov
cmp
mov
or
test
add
sub
imul
call
nop
mov
aas
xor
int
adc
js
das
and
loop
repnz
call
fistpl
ja
and
mov
inc
mov
cmpsb
inc
gs
add
daa
cmpl
out
fisttps
pop
push
sbb
mov
dec
ljmp
xchg
sub
loop
pop
hlt
mov
js
adc
inc
faddl
clc
out
arpl
adc
movsl
mov
push
inc
fstps
orl
ljmp
cltd
ljmp
arpl
xchg
or
js
icebp
imul
lcall
dec
mov
lods
sbb
leave
repz
lea
xor
es
call
add
pop
and
test
in
sbb
subb
sbb
mov
pusha
loop
or
out
repz
dec
jle
addr16
stos
leave
pop
mov
pop
test
jg
sbb
dec
or
outsl
jbe
cwtl
mov
lret
push
es
push
mov
js
or
clc
inc
cld
or
jo
pusha
sbb
in
ljmp
mov
inc
push
fisttpl
cs
mov
int3
pusha
es
add
iret
sub
or
loope
aaa
push
lds
add
es
aad
loope
pop
popf
fs
roll
ficompl
mov
ljmp
fbld
and
pop
and
inc
scas
outsb
pusha
cmp
aam
and
push
jbe
out
pop
add
fwait
xchg
out
pop
pop
out
fbstp
jle
xor
inc
pop
subl
mov
mov
mov
add
pushf
mov
lods
jb
out
push
and
sub
cmp
stc
mov
ljmp
inc
cmpsl
adc
scas
xchg
je
mov
inc
mov
push
imulb
hlt
mov
pop
mov
es
je
shl
mov
mov
sub
pop
dec
dec
xchg
fistl
xor
aad
mov
les
mov
adc
test
idiv
incl
and
push
cs
aam
loop
test
adc
adc
ljmp
add
pop
fisubrl
hlt
mov
cs
and
cmp
dec
add
repz
dec
loope
cli
and
in
daa
jb
out
loop
std
call
ljmp
cmc
jae
jle
in
jbe
outsb
jle
pop
into
adc
pop
dec
push
xchg
add
shll
ljmp
cli
pop
mov
xchg
dec
ret
or
xor
shrb
pop
mov
repz
add
in
push
lods
int
icebp
sub
adc
cmpsb
fisubrs
add
pop
push
idivl
push
adc
aaa
adc
cmpsb
mov
mov
ret
out
ficoms
cmc
or
int3
loopne
repnz
call
shll
push
insl
call
jp
subb
test
sahf
imull
insl
push
jle
fwait
dec
jns,pt
inc
aaa
roll
push
pop
mov
movsl
fiadds
ljmp
xchg
int
fsubr
int
stc
decb
out
jg
add
jo
pop
xchg
in
xor
adc
mov
ss
inc
xchg
call
jns
dec
clc
dec
out
cli
incl
push
inc
nop
hlt
mov
loopne
mov
mov
jg
jge
lahf
jbe
jns
push
cmp
test
outsl
decl
dec
push
pop
popa
cmp
outsb
loope
adc
push
test
xchg
jo
mov
adc
rclb
mov
sbb
adc
repz
mov
and
js
xchg
out
or
bound
repnz
cld
lahf
mov
std
daa
into
xchg
cmp
lcall
inc
pop
or
push
cmp
mov
or
jle
pushl
adc
mov
adc
cs
push
out
out
dec
dec
decl
arpl
xor
mov
pushl
adc
push
mov
sbb
push
dec
cmp
mov
loope
call
pop
scas
jb
out
or
sub
pop
imul
mov
jmp
ljmp
xor
cmp
lret
mov
push
adcb
dec
mov
dec
sar
jg
fdivrl
rorl
lea
in
jecxz
or
loop
out
jmp
incl
xor
ja
dec
pop
add
sbb
push
loope
stos
push
sahf
movlps
pop
test
ljmp
jmp
mov
and
ficompl
test
adc
inc
js
push
mov
adc
hlt
lcall
inc
aaa
imul
and
fwait
mov
or
or
push
mov
in
and
mov
incl
scas
jp
pop
nop
or
jp
inc
inc
aad
cmp
call
cltd
mov
mov
xchg
enter
sub
arpl
xor
or
aam
aam
xlat
jge
aad
mov
decb
stos
ss
repnz
sahf
je
je
cmp
cmp
fcompl
pop
cmp
lcall
dec
ds
das
loopne
mov
pop
popa
mov
into
xor
dec
jg
ss
int
inc
faddl
xchg
mov
adc
jp
lea
hlt
ljmp
call
hlt
into
push
test
fsts
xchg
sub
xchg
and
rcrl
jmp
decl
out
ss
add
xlat
roll
popa
jmp
mov
je
icebp
sar
ljmp
ds
movsl
jl
fsubl
pop
ds
xor
leave
jns
mov
inc
mov
adc
negl
xchg
ss
ss
and
testl
movsl
rol
sub
lahf
fst
jns
sub
mov
mov
pop
cmp
jbe
add
cld
sub
jno
fdivrl
inc
fisubs
pop
in
cmpsb
pushf
test
dec
xchg
jne
mov
xchg
cmp
sub
jg
cmc
mov
jmp
cmp
and
into
jp
negb
jge
mov
inc
lahf
cmpb
arpl
call
lret
nop
in
jge
sbb
gs
imul
adc
pushl
sub
cmp
shlb
jno
dec
pop
ret
mov
sub
push
jmp
jmp
fcoml
xchg
inc
ja
push
cmpsb
or
movsl
jbe
mov
inc
pop
cmp
pop
cmp
clc
jg
popf
mov
inc
inc
dec
popa
push
hlt
or
dec
inc
xchg
and
xor
ret
ljmp
rcrb
ret
pop
push
mov
out
sub
pop
rol
xor
push
mov
inc
mov
insb
popf
jge
sbb
in
bound
bound
loopne
aaa
fcomip
push
and
xor
data16
out
not
ficompl
and
fistps
xor
cltd
xchg
push
cld
popf
and
sbb
mov
movsl
ret
nop
inc
lcall
adc
adc
pop
and
inc
add
movsb
sub
call
lods
fnstsw
fnsave
pop
xchg
fs
add
clc
fistpll
in
dec
out
ljmp
fldenv
frstor
imul
cs
adc
call
xchg
outsl
stos
sbb
ret
or
loopne
mov
js
mov
and
lahf
cli
adc
jmp
inc
jae
sbb
imul
jmp
adc
jge
cmp
inc
inc
cmpsb
in
pushl
std
stc
push
dec
leave
call
lcall
jb
cltd
and
pop
decl
and
inc
arpl
cwtl
ljmp
mov
call
mov
dec
lahf
adc
das
bound
pop
aad
adc
xchg
and
jnp
fdivrl
mov
sar
lcall
mov
adc
xchg
inc
popa
lcall
push
rorl
cmp
enter
dec
adc
push
inc
out
ljmp
mov
pop
push
pop
idivl
xchg
push
sub
adc
lea
scas
pop
daa
xor
dec
and
mov
push
pusha
cmpsb
inc
or
xor
xor
xor
rorl
mov
jle
ret
fbld
push
cmp
pop
shlb
lcall
cld
call
dec
in
fmulp
imul
pop
int
jb
aaa
pop
dec
call
xchg
clc
aad
push
jl
out
ret
jmp
leave
mov
movsl
mov
std
mov
cmp
pop
imul
icebp
and
pop
or
lcall
cmp
add
inc
call
fists
mov
inc
mov
outsb
scas
xchg
ret
sbb
mov
pusha
push
add
int3
movsb
jmp
pushl
popf
in
xorb
ja
lsl
fbld
jge
pusha
cld
sbb
fcoml
lock
and
cmc
dec
pop
imull
ret
cmp
sar
out
arpl
pusha
push
xor
fsts
and
decl
stc
loopne
jne
adc
mov
adc
ljmp
mov
lret
adc
or
das
xorl
and
sub
push
xlat
push
sub
outsb
push
test
lcall
add
jno
leave
dec
pop
icebp
fcoms
xor
or
dec
mov
jmp
aas
xor
cwtl
cmp
mov
jno
fildl
pop
subb
xchg
out
mov
dec
push
push
ss
sarb
int
rolb
jg
bound
xchg
mov
mov
fcompl
outsl
arpl
mov
mov
xor
sub
pop
vpsllw
dec
aas
les
lock
lret
jnp
cmpsl
pop
pop
enter
cmc
fsubrs
jp
iret
enter
mov
or
orl
mov
push
arpl
xor
lret
cmpsl
loopne
pushf
mov
test
jp
and
push
mov
ljmp
fcmovu
xor
add
mov
lret
jecxz
stos
imul
addr16
push
test
cmp
push
pop
mov
fwait
divl
mov
stos
xchg
popa
mov
dec
push
in
daa
jg
cmp
sar
daa
adc
clc
fs
xlat
cmp
cmp
jnp
gs
push
inc
popf
mov
cld
call
jle
jecxz
xchg
nop
enter
sarb
sub
adc
sbb
cmpb
pushl
loopne
mov
mov
jne
es
and
jo
les
scas
insb
and
std
xchg
jg
insl
cld
lret
mov
or
and
out
xor
push
sub
xchg
add
adc
lret
cltd
popa
jle
test
dec
dec
adc
mov
add
fs
dec
das
mov
pop
decl
insl
adc
mov
ss
sbbl
hlt
aaa
cmpl
and
out
gs
push
sbb
cmpl
insl
jmp
decl
or
inc
daa
mov
xor
rcl
int
cld
cli
loope
and
push
mov
mov
ljmp
scas
adc
add
dec
fsubp
xchg
adc
fldcw
fldcw
lods
jmp
icebp
inc
repnz
xlat
mov
mov
test
mov
shrb
sbb
push
imul
push
in
cmp
adc
mov
dec
ljmp
pushf
shll
add
inc
js
jo
mov
ljmp
add
pop
subb
and
or
and
cmp
out
push
cmpsl
ret
xchg
insl
mov
xchg
cmp
push
ss
add
and
jmp
loope
js
mov
pop
les
mov
loopne
xchg
test
lret
test
pop
icebp
jns
js
push
adc
sbb
inc
fcmove
gs
pop
xchg
stos
into
push
cmc
push
inc
mov
jmp
out
enter
mov
in
stc
xchg
cmp
lahf
gs
jno
jnp
mov
and
cs
sbb
call
push
push
cmpl
loope
xchg
inc
pop
push
out
daa
mov
mov
push
in
cli
mov
push
push
mov
sub
mov
int
test
inc
sub
decl
aaa
sub
testb
cmp
call
add
and
push
push
add
incl
and
notb
xor
mov
jge
jl
sub
jecxz
aad
pushl
add
fsub
or
imul
adc
jno
incl
jae
lea
bound
scas
push
and
leave
pop
addr16
mov
call
mov
jecxz
and
jmp
popa
decl
inc
scas
lock
mov
push
pop
mov
fldenv
call
xchg
pop
jnp
cmp
xor
shl
cld
adc
mov
mov
xor
test
loope
sti
je
popf
jb
stc
faddl
das
fcoml
xchg
fstl
cmpsb
sub
js
sbb
xchg
jnp
or
fnstcw
jmp
jns
shrl
das
inc
mov
mov
xchg
push
add
mov
dec
fwait
or
mov
jg
in
es
fistps
fdivrs
std
pop
push
jns
stos
stc
inc
and
adc
wrmsr
out
dec
push
jg
jne
stos
cmp
push
xacquire
push
sti
pop
adc
imul
decl
movsb
inc
dec
clc
stos
add
loop
and
repnz
out
mov
aaa
lcall
inc
push
sub
jns
push
pushf
or
sbb
lds
xchg
cli
lcall
dec
andb
dec
add
sbb
fists
test
fmull
jmp
cli
inc
push
lods
push
or
ljmp
int3
aas
push
cmc
fisttpll
fildll
cmp
inc
ss
imul
lret
test
mov
sub
sbb
cmc
in
popa
mov
cld
enter
jbe
push
pushl
cmp
incl
int
iret
push
mul
add
bound
sarl
xor
push
push
cmpsl
rorb
dec
shlb
aaa
std
in
call
ss
lds
push
inc
or
mov
outsl
cmpsb
pop
mov
xchg
decl
push
add
leave
sub
push
repz
xchg
mov
add
adc
pushl
xor
rcrl
pop
add
jne
mov
jns
push
jmp
repnz
adc
dec
push
jnp
lahf
call
cmp
decb
in
pushl
dec
jecxz
gs
pop
cmp
lret
rcrl
nop
popa
and
fidivl
xchg
cwtl
ret
sti
mov
pushl
xchg
mov
ja
fldl
test
xor
pop
dec
jb
aas
xchg
popf
movsb
fisubl
mov
sbb
ss
fcomip
adc
nop
xchg
push
sub
mov
stos
pop
fst
shlb
decl
cmp
adc
pusha
aas
mov
popa
fcoms
nop
mov
add
mov
push
pushl
mov
sub
pushf
test
jno
mov
mov
add
xchg
cmc
add
ljmp
inc
fisttps
jg
cmp
mov
jge
rcrb
loopne
decl
inc
call
mov
leave
push
rcr
push
sbb
imul
pop
mov
js
in
dec
insl
sub
pop
mov
pushl
cli
sbb
adc
inc
or
pop
xlat
mov
dec
ljmp
iret
daa
sub
jno
sbb
cmp
xchg
jmp
mov
enter
loope
sub
push
or
scas
jp
pop
push
push
ljmp
lods
cwtl
sarb
sub
mov
rcl
mov
cltd
mov
insl
pop
out
insl
movsb
xor
ljmp
jnp
mov
jle
xchg
mov
xchg
xor
ret
or
and
jns
daa
lret
dec
call
jg
sbb
push
outsb
or
lahf
outsl
pop
nop
adc
jg
jg
scas
mov
lea
mov
cmp
cltd
push
lds
fwait
lcall
xchg
scas
xlat
pusha
les
imul
mov
sbb
andl
jmp
and
cmp
push
inc
push
fdivp
rcrb
adc
fsub
sar
ljmp
mov
jge
out
scas
mov
or
insl
sbb
sbb
ret
mov
decl
cmpsl
aam
push
in
sbb
cltd
or
jl
add
shlb
inc
cmp
loop
stos
inc
adc
xchg
or
or
icebp
aas
cs
and
iret
pushl
adc
rcll
inc
or
inc
jle
frstor
dec
loopne
aaa
fld
bound
pop
repz
mov
jg
mov
inc
cmpl
dec
push
push
cmpsb
pushf
repz
incl
inc
int3
nop
loop
out
jbe
insl
arpl
aad
sbbl
lret
lcall
ss
dec
inc
mov
dec
outsb
jl
jge
in
xchg
ficoms
call
cmp
into
mov
fisubl
ljmp
mov
fldenv
xchg
add
mov
cli
pop
cmp
loopne
push
movsb
pop
lods
insb
imul
repz
int3
jmp
scas
ret
mov
mov
sub
xchg
pop
into
loopne
push
les
dec
xchg
push
scas
in
imul
pushl
jo
pop
cmp
aad
dec
notb
push
pop
ret
in
das
movsl
and
cmc
insl
sti
sahf
cmp
popa
addb
and
cmp
pop
sahf
xchg
insb
out
dec
aas
mov
cmpb
push
stos
es
pop
stos
inc
roll
dec
rol
fwait
imull
data16
dec
pop
inc
xor
into
pusha
xchg
pushl
inc
fisttpl
xor
mov
push
cmp
sub
xor
out
jo
mov
or
les
lret
sbbb
stos
sbb
lods
fidivs
jmp
pop
int
adc
bound
pop
or
cld
jp
popa
cld
lcall
aaa
sub
push
lods
add
mov
adc
ljmp
insb
and
lds
mov
cmpsb
mov
incl
cmp
or
jl
xor
inc
xchg
std
xor
jl
test
incl
repz
int
loope
call
loopne
je
loope
and
or
outsl
mov
mov
xor
lock
mov
pop
loopne
cld
gs
stc
cmp
je
fcmovne
mov
ljmp
pop
bound
xor
test
lcall
sti
or
lahf
lahf
clc
pop
aad
adcl
decl
lret
lods
cld
add
int
mov
xchg
mov
dec
insl
xor
movsl
jmp
jge
outsb
dec
in
aas
push
mov
fwait
jle
xor
in
sbb
cmc
jo
ljmp
xchg
xchg
std
xchg
inc
push
lret
mov
out
push
out
outsb
xor
mov
pushl
cld
pushl
mov
les
push
roll
out
pop
mov
repnz
out
cmp
clc
out
push
jecxz
dec
leave
pop
scas
push
sub
loopne
pusha
aas
decl
int3
pop
int3
cwtl
sbb
dec
les
xchg
inc
std
or
add
stos
adc
out
cmp
pop
lods
mov
ljmp
daa
push
mov
pop
mov
inc
xor
lcall
or
lret
sbb
mov
push
lar
enter
or
popf
ljmp
pushl
scas
and
insb
outsb
push
stos
sarb
add
xlat
push
pop
add
dec
mov
add
pop
int3
ljmp
daa
jge
insl
mov
mov
lock
test
jg
stos
push
mov
decl
mov
scas
push
mov
pop
in
and
lret
jle
test
push
sbb
in
mov
shll
push
add
int3
insl
add
sbb
inc
ljmp
jp
and
aaa
mov
lret
inc
paddusw
xlat
pop
pop
ret
ljmp
fidivl
adc
call
cli
leave
pop
and
je
pushw
jl
mov
and
sbb
push
loopne
call
jl
sub
mov
insb
dec
xor
cwtl
lcall
jg
sahf
jmp
hlt
inc
lcall
jle
sub
lcall
cmp
int3
mov
inc
adc
je
push
jae
into
add
int
insb
inc
js
stos
mov
add
cmp
add
imul
xchg
imul
call
popf
mov
aam
jp
pop
outsl
and
sub
and
repnz
mov
jmp
xor
cmp
add
cld
hlt
xchg
shl
or
stos
xchg
std
dec
jmp
in
lea
mov
cmp
cld
inc
mov
pop
mov
sbb
cmpsb
dec
and
xchg
cmpsb
jnp
ljmp
dec
out
xor
dec
dec
leave
cltd
xchg
or
xor
push
and
push
outsb
lods
adc
call
sub
fdivs
lods
inc
xchg
stos
mov
test
pop
xchg
scas
mov
jnp
cwtl
jbe
stos
aam
mov
cmp
add
stos
xor
dec
pusha
inc
imul
dec
repz
or
pushf
cmp
jge
or
ret
xchg
inc
sbb
inc
hlt
outsl
out
cli
mov
pusha
gs
pop
mov
sahf
sbb
pop
out
rcl
test
loopne
jle
push
call
sbb
xor
and
dec
mov
push
lahf
mov
faddl
jmp
stos
arpl
lahf
jmp
jae
andb
aaa
cld
mov
mov
push
repnz
sub
loope,pn
pop
pop
ret
xor
cmc
inc
mov
lcall
rorb
fmuls
mov
adc
ljmp
pushf
jecxz
jl
imul
loopne
sub
or
dec
int3
daa
fwait
cld
jmp
mov
lock
andl
idiv
or
popf
pop
cmp
xchg
outsb
inc
fadds
inc
cwtl
push
adc
imul
ljmp
stos
cs
and
pop
sbb
js
enter
lahf
mov
aas
sti
xlat
xchg
aas
pop
mov
in
inc
or
jle
enter
lock
out
add
ja
insb
push
idiv
sub
xchg
mov
hlt
cmp
popa
mov
push
pop
test
sahf
jne
or
les
sub
inc
loope,pn
incl
mov
push
pop
cmp
cmp
push
or
mov
cmp
xchg
movsb
xchg
std
mov
fwait
push
or
stos
or
faddl
jmp
push
inc
in
lret
pop
repz
addb
push
sub
scas
add
mov
mov
aaa
hlt
call
mov
cmp
and
ret
enter
adcl
mov
mov
movsl
mov
lcall
iret
pusha
mov
mov
fwait
leave
jo
mov
pushl
xchg
or
xchg
std
push
add
imul
shr
fisubrs
loop
mov
adc
cmp
mov
and
pop
mov
out
jg
cmc
loop
add
xor
testw
cs
xchg
mov
shll
mov
lock
fiaddl
jo
inc
cmp
call
cmp
orl
xchg
cltd
lcall
dec
adc
jmp
push
sbb
mov
add
push
mov
nop
push
add
daa
loopne
sub
push
pop
xchg
fisttpll
mov
rclb
bound
rcl
mov
imul
out
push
mov
add
mov
or
out
jge
cmpsl
mov
mov
out
mov
jl
jle
dec
dec
int
pushf
int3
dec
adc
fldenv
adc
into
aam
pushf
jne
push
out
enter
pop
repz
rcl
scas
dec
outsl
pushl
imul
sub
mov
sbb
mov
rcll
pushf
repz
inc
cs
dec
shll
popf
or
popa
add
lds
sarl
lahf
div
adc
imul
pushl
push
sarl
cli
inc
mov
ja
sbb
sbb
arpl
lcall
or
jns
ljmp
cli
fnsave
adc
scas
gs
aaa
idiv
xchg
dec
dec
jecxz
idiv
fwait
jg
int3
mov
dec
mov
mov
mov
cmpsl
cmp
sub
pusha
sub
sub
call
aaa
fisttps
cmc
inc
fucomi
vpunpckhqdq
push
or
and
pop
sub
decl
xchg
out
iret
aad
pop
sub
rol
imull
xchg
cmp
xor
cmp
inc
out
adc
sub
shll
mov
cmp
cmc
sbbl
cmp
xchg
scas
jle
popf
and
or
dec
rol
outsb
cmp
test
pusha
jmp
aam
jg
mov
mov
push
adcb
cmc
shlb
scas
lea
jmp
jg
scas
push
pop
icebp
lret
cmp
sub
aas
sbb
rorb
lock
pop
push
stos
mov
decl
sbbl
mov
lahf
sbb
cmpsl
push
fsubrl
mov
addr16
scas
mov
mov
pushl
lahf
lcall
pusha
movsl
je
test
lret
negl
cli
cmp
inc
jmp
movsb
mov
sub
pop
ffree
int3
push
rcl
pop
mov
push
jns
inc
ljmp
rcr
add
pop
test
es
jmp
shlb
iret
adcb
xor
daa
testb
push
xor
cli
sbb
ljmp
or
push
addr16
mov
mov
movl
mov
stc
imul
lcall
divl
mov
pop
test
mov
enter
jmp
lcall
mov
test
pusha
add
test
icebp
add
movsb
add
add
add
or
pop
pop
push
or
or
or
or
dec
fcomi
or
adc
adc
push
adc
jbe
aaa
cwtl
mov
push
adc
adc
adc
add
adc
aaa
in
data16
or
add
jle
rolb
mov
add
add
add
sahf
add
les
dec
mov
mov
xchg
stos
roll
add
adc
imul
add
add
push
adc
pop
and
xor
inc
mov
adc
loope
add
xor
cmpb
mov
adc
es
xchg
mov
push
jbe
mov
and
push
flds
xchg
xchg
mov
push
inc
imul
or
dec
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
xor
stc
out
adc
or
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
push
xor
xorb
scas
fiaddl
or
pop
gs
mov
dec
adc
sub
rcr
call
xchg
and
sub
std
cmpsb
xor
aas
imul
mov
cmp
inc
or
pop
les
fsts
dec
add
or
cmp
pop
and
out
cmp
xor
mov
cmpsl
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
stc
stos
pusha
inc
inc
xchg
pusha
add
std
or
decl
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
inc
and
mov
bound
movsl
jecxz
or
outsb
adc
mov
stc
decl
mov
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
incl
xor
lcall
fs
scas
mov
pop
pop
mov
incl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
jl
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
dec
jmp
cwtl
int
arpl
testb
mov
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
inc
imul
mov
out
pop
clc
fbstp
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
inc
adc
jb
adc
push
lock
lods
jp
testb
sbb
idiv
inc
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
jle
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
icebp
aas
std
cli
push
push
push
idivl
pop
sub
fstpt
sub
and
inc
mov
lcall
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
fistpll
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
das
rcr
out
sarb
sbbl
jno
or
sarb
jg
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
jmp
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
filds
ljmp
sbb
fadd
or
mov
xchg
sub
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
clc
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildll
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
inc
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
mov
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
incl
addb
add
jae
shrb
shlb
out
aas
stc
add
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
jl
mov
cmp
fmull
enter
jecxz
jl
mov
pop
mov
incl
push
or
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jg
inc
jecxz
sbb
sarl
adc
loopne
sar
push
mov
cld
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
bound
mov
xchg
lahf
or
push
rcrl
sti
or
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
fwait
call
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
xchg
jg
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
ljmp
cld
lds
fidivrl
push
stos
decl
dec
mov
sub
jge
xor
lahf
les
sbb
mov
push
cld
addl
sbb
mov
pop
or
lahf
outsl
int3
push
sbb
pop
mov
arpl
out
out
outsl
xchg
lcall
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
decl
aad
loop
lahf
mov
or
out
lcall
cwtl
cmp
shl
cld
mov
adc
stos
pop
jg
pop
mov
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
jmp
lea
jp
jnp
jecxz
adc
inc
lds
push
lcall
and
imul
or
inc
pop
xor
rorb
and
add
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
das
cld
push
movsb
insb
or
and
xchg
fidivrs
scas
push
test
aas
repz
sbb
lock
or
push
paddsw
out
hlt
aaa
clc
jp
jb
push
std
mov
or
scas
subb
lods
out
jne
or
cmc
mov
push
mov
push
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
xor
or
dec
in
in
inc
in
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
mov
add
cmpsl
lret
pop
in
cmp
fwait
mov
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
or
aas
das
rcrb
mov
sub
addr16
sbb
cld
or
adc
cltd
or
mov
ret
and
cmp
das
incb
lock
pop
pop
div
cld
idivl
inc
and
fs
loope
rcl
sbb
jmp
stos
cwtl
cmpb
fbstp
out
xchg
add
mov
jg
out
icebp
mov
loope
mov
cmpsl
popf
inc
outsb
clc
inc
sti
mov
fbstp
or
cltd
mov
outsl
das
rorw
cmpsb
cmp
jg
fwait
lock
xor
decb
adc
mov
sbbb
dec
adc
call
mov
iret
or
sbbb
mov
inc
add
rcrl
or
aaa
std
fistpll
dec
inc
sbb
xchg
rorl
sahf
mov
aas
icebp
ret
ror
sbb
enter
inc
adc
adc
sub
mov
pop
clc
loope
ficompl
in
loope
mov
lahf
jp
dec
add
xlat
cmp
push
adc
fbstp
xchg
flds
iret
fdivrl
xchg
lcall
decb
js
pop
gs
push
dec
shll
jg
pop
out
jg
or
mov
cmp
xor
arpl
out
iret
jg
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fmull
lock
add
mov
mov
add
cli
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
dec
xchg
pop
add
push
push
adc
daa
icebp
push
lahf
sti
incl
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
mov
hlt
sbb
aas
inc
pop
add
or
add
push
sti
pop
cltd
mov
inc
dec
push
mov
push
mov
in
sub
mov
int3
pop
iret
add
inc
popa
and
ds
add
pop
subb
nop
jg
add
sub
and
dec
xor
and
push
inc
out
push
inc
or
add
pop
adc
lret
sbb
or
xorb
push
or
push
aaa
and
jne
jo
imul
out
imul
add
cmp
sub
push
imul
adc
add
inc
out
sub
nop
adc
cmp
push
push
test
pusha
arpl
sub
adc
sbb
lds
and
mov
inc
sbb
sub
mov
inc
adc
scas
mov
push
ss
div
outsl
outsl
insb
push
push
xchg
jo
push
or
frstor
gs
push
scas
fcmovnu
pop
sbb
mov
shlb
orb
je
into
adc
push
adc
fisubrl
push
mov
test
mov
js
rolb
inc
fists
mov
nop
add
outsb
frstor
sbb
jns
push
imul
popa
jb
inc
test
enter
es
push
test
dec
rcll
outsl
insl
insl
push
subb
roll
dec
jb
out
or
sub
inc
rcr
inc
and
jle
ficomps
xor
xchg
sbb
add
xchg
adc
mov
jp
andl
icebp
inc
addl
pushf
bound
insb
adc
pop
lock
icebp
pop
ds
insb
jne
mov
jne
and
inc
test
xor
ret
mov
mov
push
add
dec
call
jo
inc
push
fildl
in
xchg
inc
mov
mov
pop
push
out
popa
loopew
push
arpl
sbb
popa
xchg
shrb
and
pop
push
push
mov
lods
push
push
and
and
jle
pop
addb
orl
adc
mov
pop
mov
mov
pop
inc
or
dec
pop
subl
pop
mov
test
mov
dec
inc
adc
mov
sbb
into
in
xchg
jns
jae
arpl
push
jl
ljmp
mov
shll
pop
add
xchg
inc
in
pop
mov
xor
popa
inc
push
addr16
testb
sub
pop
into
imul
outsl
popw
push
call
fwait
lret
fdivp
jge
mov
inc
xchg
push
jne
xor
dec
push
xor
adc
sbb
mov
inc
dec
jae
enter
shl
push
mov
adc
out
fildl
or
pop
inc
or
add
call
lret
ljmp
fs
xchg
lods
call
test
pusha
or
xchg
aaa
jne
pop
push
dec
jno
inc
sub
dec
loopne
inc
or
xor
and
xor
jo
bound
inc
mov
popf
in
jae
popa
jbe
mov
sbb
xchg
nop
cltd
mov
push
sbb
mov
cmp
pushf
daa
mov
fcmovnb
movnti
outsl
jns
int
adc
add
push
sti
and
sbbl
xchg
and
pop
imul
out
repz
insl
pop
mov
mov
loope
je
push
inc
inc
mov
sbb
iret
sub
pop
cltd
inc
sbb
push
push
sub
and
insl
add
sub
push
mov
pop
fsubl
sub
outsl
push
flds
and
and
add
outsl
push
pop
stos
sbb
loope
inc
sbb
xor
add
pop
jmp
jae
mov
fstpl
pop
outsl
or
cwtl
jne
push
mov
mov
dec
outsb
pop
pop
outsb
mov
xchg
gs
clc
sahf
and
aaa
inc
or
inc
out
jno
mov
pop
xor
stos
in
arpl
xor
cmp
in
mov
movsl
and
xchg
push
mov
and
jb
dec
sbb
fdivrs
popa
filds
popf
inc
sub
rcrl
pushf
push
cmp
inc
lods
repz
fs
stos
in
push
outsl
mov
dec
sbb
or
jbe
or
dec
in
test
dec
push
add
jmp
ss
and
add
or
inc
cmpb
or
push
scas
js
add
push
inc
test
xchg
shrb
andl
movsb
xor
or
cli
cmpb
andb
cmpsl
adc
in
or
lahf
sbb
push
pop
addr16
inc
sbb
cmp
push
xor
dec
adc
mov
jge
movsl
jns
fwait
pop
jnp
and
push
mov
fidivl
mov
mov
sub
sbb
outsb
add
pop
cmp
subb
outsb
fisttps
mov
popa
fbld
mov
sar
and
sub
fs
pop
iret
orb
popa
cmpsl
inc
js
outsl
push
inc
jb
and
pop
push
jg
in
inc
push
mov
mov
into
jo
inc
inc
lds
aad
sbb
mov
stos
icebp
mov
imul
loop
xor
pop
push
mov
fs
out
or
inc
insb
jle
punpckldq
sbb
testl
mov
je
jae
fdivr
xor
jno
lds
sbb
jne
xchg
jo
jl
js
enter
rcrb
and
sbb
andl
mov
loopne
ror
cli
sbb
loop
int3
fnstenv
shlb
inc
dec
push
push
pop
xor
shlb
add
jnp
enter
outsb
inc
push
push
adc
xchg
sbbb
pop
xchg
fcomps
je
andb
insl
dec
outsb
dec
in
ds
ss
ret
mov
dec
add
mov
mov
adc
xchg
movsb
dec
adc
cmpsb
imul
imul
add
add
push
cmp
les
loope
mov
inc
xorb
inc
jnp
pop
cmp
inc
jo
fs
sbb
adc
or
push
push
jb
inc
andb
cmp
js
inc
jb
and
nop
fimull
ret
or
jne
das
pop
imul
jmp
cwtl
cmp
iret
xor
rclb
push
js
xlat
mov
or
and
cmp
outsb
sbb
pop
push
aaa
cmpb
pop
lock
inc
hlt
test
fistl
or
push
push
adc
xchg
push
addr16
orl
mov
fsubl
imul
vpunpckhwd
sub
adc
lcall
or
push
cld
xchg
sbb
lcall
cltd
popf
fistl
ljmp
dec
jno
sub
mov
and
xchg
mov
mov
fnstsw
insb
mov
fwait
aaa
ret
cld
popa
imul
add
lock
pop
xor
jmp
hlt
and
enter
jmp
add
sub
sti
cmpsb
insb
adc
sub
pop
xor
jg
outsb
ja
push
imul
jne
popaw
imul
adc
cmp
mov
pop
sbb
sub
inc
std
test
mov
es
adcl
cmp
mov
sub
pop
sub
and
dec
sbb
jne
nop
mov
lds
outsb
aas
test
pop
sub
ret
ret
jbe
mov
lock
pop
inc
mov
cmc
popf
mov
mov
push
mov
mov
cmp
and
mov
lds
inc
xor
inc
outsb
pop
rcl
ret
outsl
sub
xlat
add
pop
jmp
or
add
sub
cs
inc
sbb
fisttpl
inc
inc
cmp
movsl
pop
sbb
mov
xor
addr16
lods
pop
loop
add
mov
lahf
loopne
add
sarl
jo
pusha
xchg
call
push
jns
mov
addr16
sub
fs
jbe
data16
sub
repz
sbb
inc
cltd
pop
test
ficoms
fdivrl
sbb
testl
inc
push
jne
sbb
jno
data16
fbstp
pop
mov
sub
mov
ds
es
imul
inc
push
sub
int
sub
inc
push
lcall
ficompl
and
push
add
mov
push
add
rolb
hlt
pop
push
fcmovb
dec
pop
cmp
mov
fcmovnbe
out
push
add
or
add
mov
mov
sbb
pop
dec
addb
fildll
dec
in
rol
add
and
fsubrl
cmpsb
popa
adc
sub
mov
dec
out
inc
sti
sbb
xchg
sub
push
dec
rcr
call
arpl
mov
or
lahf
ret
xor
es
jg
hlt
pop
add
and
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
