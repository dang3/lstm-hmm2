divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
rcrb
inc
aaa
add
dec
sarb
pop
nop
inc
movsb
xor
repnz
std
clc
or
pop
mov
int
inc
inc
repz
and
sbbb
add
lock
add
mov
jb
push
cli
pop
add
inc
dec
push
and
sti
fistpll
or
cmpsb
dec
shrd
popa
incl
lea
pop
decb
or
bswap
mov
out
psubusw
test
repnz
in
push
pusha
ljmp
lret
pop
dec
cli
push
cld
push
imul
add
in
test
rcl
mov
daa
ss
aas
loopne
add
or
or
push
daa
out
xchg
ja
cmp
adc
adc
add
mov
add
fdivrp
imul
adc
lods
jbe
pop
xor
adc
xchg
xor
jbe
pop
subb
or
loop
inc
mov
push
add
cmpsb
nop
insl
loopne
add
jns,pn
cld
cltd
popf
add
les
lods
add
add
inc
imul
aaa
nop
lret
cs
mov
sbb
add
aam
loopne
sahf
jae
arpl
xlat
out
cmpsl
test
add
jnp
test
push
dec
sbbb
inc
inc
rclb
pop
cmp
rcll
adc
jmp
xchg
jno
rolb
mov
or
rorb
add
rolb
mov
pop
or
dec
jne
sahf
mov
pop
or
mov
lret
sub
fsubl
imul
jbe
pusha
pop
ja
in
push
push
negl
xor
enter
xor
repz
gs
push
incb
add
or
sub
ja
cmp
or
call
pushf
xor
in
xchg
dec
cmp
into
int3
loope
pop
or
je
jnp
push
movsl
rcrl
outsb
hlt
mov
insl
adc
imul
jl
les
xor
rcrb
push
push
mov
xchg
clc
add
pcmpgtw
mov
in
inc
cmp
stos
out
out
mov
xorps
sbb
push
movzbl
mov
or
or
rcll
test
or
leave
mov
les
imul
push
mov
adc
cmp
jbe
mov
add
pop
dec
ljmp
pop
imull
mov
nop
mov
sahf
leave
roll
ret
or
adcb
loopne
into
scas
mov
and
mov
add
cltd
loopne
call
sbbb
push
add
outsb
and
sub
jbe
dec
or
adc
xchg
and
aad
or
mov
jne
push
inc
imul
add
adc
xchg
mov
mov
insb
sub
push
sti
push
xor
sbb
xchg
sub
dec
and
andb
jne
push
jecxz
mov
mov
and
and
cmp
test
sub
mov
mov
movsl
mov
push
lea
jl
hlt
cld
add
daa
shrl
cmpsb
xchg
push
sbb
in
imul
or
enter
out
adc
push
push
fstpt
add
dec
in
push
leave
push
xchg
es
pop
mov
cmp
pop
add
ja
and
sarl
movsl
outsl
mov
adc
cmpsl
loope
lock
outsl
push
mov
jp
dec
pop
push
ret
je
rolb
sbb
sbb
subl
pop
cltd
test
lea
mov
enter
xchg
mov
inc
or
test
push
mov
es
call
aam
je
inc
test
mov
in
jecxz
push
add
sbb
add
push
mov
jl
in
aam
lea
dec
out
or
lds
mov
scas
lds
push
jno
mov
in
shll
add
bound
popf
je
shrl
in
add
and
mov
push
or
ficompl
add
repnz
cs
xchg
addr16
hlt
or
mov
xchg
inc
repnz
mulb
aas
sbb
lcall
and
rorl
in
push
mov
jb
test
sub
popf
icebp
jne
or
and
xor
bound
inc
ljmp
dec
pushf
sbb
imul
pop
je
call
push
push
insb
add
cmp
fdiv
sub
adc
push
imul
mov
xor
and
adc
xchg
push
inc
or
pushf
out
ss
jl
sbb
lcall
or
stc
jp
popf
pop
es
push
cmc
loopne
pop
lds
jne
add
pusha
cmc
xlat
pop
jp
push
dec
jl
pusha
or
inc
or
add
sub
pop
mov
addr16
and
pop
xchg
sbb
test
ja
mov
add
pop
rolb
sub
mov
call
pop
out
outsb
push
jnp
int
push
adc
or
pop
inc
xchg
ret
sbb
jl
subl
pop
fchs
pop
call
or
cmc
mov
mov
add
in
add
add
pop
xchg
adc
and
add
scas
add
push
sar
ss
lcall
rcll
or
mov
enter
stos
lods
sbb
dec
cmpsl
jecxz
and
mov
ds
inc
sub
cmp
stos
push
call
call
sub
pop
jne
xchg
lea
and
mov
or
xlat
xorb
cld
mov
je
cs
mov
sbb
jmp
test
or
outsb
add
push
dec
inc
lock
xorb
dec
call
inc
add
dec
pop
sbb
shrb
mov
cmpb
or
ja
pop
mov
xor
jmp
xchg
xchg
sbb
dec
call
jnp
into
pop
in
dec
push
inc
inc
cmp
mov
loopne
aad
xor
in
dec
imul
push
fs
sbb
sbb
push
je
cmp
fdivrs
fsubr
shl
or
xchg
add
jmp
xchg
pop
sub
push
inc
push
xor
repz
sbb
cmpsb
sbb
mov
or
out
sbb
or
add
ret
sub
or
adc
push
xchg
mov
pop
mov
jecxz
inc
movzbl
sbb
add
mull
adc
clc
je
push
pop
or
pop
ret
aas
sub
movb
sub
lds
and
push
pop
pop
mov
lds
and
shll
pop
jbe
je
sub
push
loopne
adc
or
rcl
pop
ret
push
mov
sub
jnp
and
loop
jo
in
and
add
mov
sbb
shlb
push
pop
push
push
mov
mov
cmp
shll
or
ds
sbb
push
subps
jnp
aaa
sbb
sbb
test
popa
pusha
loop
fdivr
jecxz
sbbb
jb
xor
sub
mov
mov
push
push
dec
fdiv
es
cmp
pushf
sbb
jbe
xchg
pusha
push
fimull
mov
xchg
in
int3
call
or
pop
xor
or
cmp
jmp
mov
sub
fisttps
mov
adc
xchg
cwtl
sbb
insl
stc
shlb
xor
ja
add
push
jb
call
daa
les
aas
mov
pop
and
addr16
xchg
xchg
dec
xchg
test
in
mov
lea
adc
movsl
inc
jbe
mov
nop
add
add
lds
push
mov
mov
mov
mov
add
sub
daa
shlb
fildl
or
cmpsb
imul
fiadds
out
sub
push
out
repnz
sbb
call
cmp
hlt
fdivrp
xor
fdivr
andb
loop
ret
xchg
mov
xor
xor
decb
mov
add
push
sub
xor
ds
ss
aas
xor
mov
xor
call
mov
mov
idivl
or
mov
adc
sub
add
mov
push
jle
xchg
les
adc
pop
mov
pop
jb
andb
lea
push
repnz
enter
mov
repnz
xchg
push
pushf
imul
movsb
pushf
pop
sub
adc
or
push
cltd
arpl
stos
fstpt
jle
rcll
fisubs
nop
bound
adc
inc
in
lcall
add
pop
shl
sub
inc
and
push
repz
cmpsl
fisubs
mov
stos
push
pop
push
sbb
sbb
std
jo
shlb
push
mov
rolb
sbb
mov
pusha
ljmp
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
and
les
andl
or
sbb
cmp
push
clc
je
mov
sub
mov
sbb
inc
pop
adc
gs
push
push
xor
add
sub
pop
ficoml
or
fisubrs
and
fidivrl
cmpsb
into
rcl
fiaddl
mov
dec
imul
lret
sbb
inc
push
loopne
pop
aaa
sub
hlt
enter
sbb
in
or
mov
sbb
loop
std
sub
adc
sub
jnp
mov
adc
push
jnp
and
and
scas
dec
adc
imul
xchg
ss
mov
push
push
adc
call
mov
jle
jmp
mov
pop
dec
lcall
mov
loopne
fnstenv
in
in
sarb
push
push
add
and
and
or
jmp
fsubl
jb
inc
inc
ficomps
pop
and
and
in
xor
push
xor
loope
fdivl
jne
push
or
nop
dec
in
adc
sti
mov
or
enter
bound
pop
jno
cmpsl
imul
push
call
cmp
adc
dec
pop
xlat
jo
sub
mov
mov
cmp
inc
test
test
rcr
in
mov
insb
loope
pop
mov
roll
inc
cltd
bound
cmp
scas
cltd
je
inc
or
fdivl
lea
cmp
mov
sub
je
in
in
sbb
cmp
in
mov
adc
out
ret
mov
lcall
mov
adc
cmp
pop
imul
mov
shl
push
andl
jnp
pop
fists
push
ljmp
jne
clc
jne
movsb
mov
jne
mov
lods
push
cmp
arpl
push
or
xor
push
or
push
mov
mov
dec
mov
jae
xlat
mov
xor
jmp
or
add
faddl
call
inc
enter
push
lahf
insl
cwtl
adc
adc
sahf
les
movswl
pushf
adc
mov
fldl
mov
lods
lods
dec
xlat
push
push
cwtl
stos
xchg
pop
mov
jecxz
repz
pop
into
inc
call
xchg
mov
lea
jb
adc
add
cwtl
add
in
pop
pushf
in
dec
adc
or
mov
in
rorb
int3
dec
or
add
cmp
rcll
push
add
jne
jl
mov
add
push
fildl
adc
movl
dec
sarl
in
test
test
jne
cmp
add
fdivrs
mov
orb
push
pop
icebp
or
gs
jne
dec
dec
ljmp
push
add
add
out
enter
loopne
loop
shrb
mov
cmp
xchg
xorl
daa
cmp
or
and
inc
insl
jge
mov
mov
mov
in
inc
xchg
push
add
pop
and
je
push
mull
js
add
or
je
mov
lea
jmp
pop
dec
or
loopne
outsb
sbb
cld
inc
mov
adc
ficoml
xchg
xor
bound
jmp
mov
fs
imul
popa
adc
push
das
imul
or
lcall
sahf
scas
cmc
pop
pusha
popf
rorl
adc
inc
dec
or
nop
add
or
lods
cmp
mov
lods
pop
push
cltd
add
mov
mov
xor
lods
scas
add
inc
jne
xor
inc
add
inc
sbb
lods
push
add
popf
out
popa
inc
adc
mov
insb
add
mov
in
aaa
clc
mov
jne
push
loopne
cli
test
xchg
push
mov
mov
fists
push
inc
add
adc
ds
test
repnz
mov
inc
inc
xor
inc
call
rorb
or
shr
adc
mov
or
jnp
mov
ss
stos
std
std
enter
movhps
jb
cld
cmp
sarl
cmp
rorl
inc
rorl
push
mov
mov
and
aas
jmp
mov
dec
fisubrs
test
testb
and
gs
orl
inc
pop
push
xchg
jb
sub
dec
add
adc
std
adc
ds
nop
push
ds
jl
shrl
outsl
mov
jne
pop
fldl
jbe
test
add
sarb
sahf
lret
dec
add
mov
ljmp
cmp
or
jl
mov
adc
adc
sarb
add
inc
fcoms
or
sub
shlb
sbb
jmp
add
or
or
or
mov
jne
in
ret
dec
cmp
push
xor
fistl
fs
or
daa
jae
ret
inc
mov
inc
int3
lods
or
sbb
and
subl
out
mov
daa
pop
mov
adc
xchg
adc
cmp
and
hlt
jne
rclb
adc
popf
mov
or
mov
add
cmp
cwtl
inc
jecxz
aaa
imul
push
mov
push
call
lcall
ret
sub
inc
jbe
mov
mov
push
xchg
popf
push
dec
sbb
mov
xchg
xchg
sarb
jge
clc
push
or
enter
lret
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
ficoml
jle
or
insl
mov
xchg
js
in
mov
lahf
cwtl
xorl
fstl
or
mov
pop
inc
jb
cmp
popa
aaa
ret
xor
cmpb
fs
sub
sub
aam
sbb
sbb
rorb
je
dec
or
sbb
adc
xchg
and
data16
sbb
mov
cmp
xchg
jae
leave
push
mov
jl
imul
jg
jne
mov
jmp
or
xor
movsb
cmp
or
pusha
cwtl
mov
push
or
call
dec
cmpl
shr
test
add
mov
mov
and
pushf
push
insb
push
adcl
or
inc
sbb
addb
ja
inc
push
add
call
out
push
cmp
or
fisubrl
jne,pn
ljmp
and
test
shll
outsb
int
decb
ss
mov
test
inc
cltd
cmp
insb
inc
adc
dec
mov
adc
mov
mov
adc
push
mov
cwtl
or
popf
inc
bound
out
xchg
out
insl
push
out
push
fucomip
cmp
push
insl
pop
in
je
cmp
jbe
movsb
add
and
nop
cld
mov
subb
clc
push
inc
mov
fsubs
std
pop
jbe
sub
lock
fsubl
pop
cwtl
sbb
push
in
or
test
mov
hlt
pushf
cli
adc
push
popf
fadd
shlb
xor
pushf
loop
fwait
or
test
inc
jmp
xorl
mov
sbb
imul
sbb
mov
fmuls
rcl
dec
adc
or
fadd
pusha
mov
fimuls
fwait
jmp
push
mov
cmp
aas
fsubrp
jo
push
sbb
adc
adc
gs
adcl
or
sbb
adc
push
inc
adc
add
and
lods
stos
loopne
sti
push
and
je
test
inc
lea
aad
xchg
addb
dec
in
test
stc
xor
jo
jg
sub
icebp
sub
pop
push
lea
mov
mov
mov
push
jno
enter
jne
mov
sub
push
scas
dec
push
push
push
cmpsb
aam
cmpsb
inc
mov
in
sbb
cld
clc
loop
push
cli
call
push
jo
sbb
je
aad
filds
and
add
scas
fnsave
fwait
jae
js
push
push
lret
xchg
add
mov
or
push
jns
add
mov
adc
aam
lret
xlat
shrl
repnz
or
mov
pop
or
into
imul
mulb
mov
jmp
lret
and
leave
roll
enter
jo
sbb
jmp
in
xlat
adc
out
mov
loopne
pop
sub
lock
dec
push
hlt
ss
xor
mov
adc
jne
clc
and
cmp
jmp
rclb
cld
push
add
push
dec
mov
in
mov
cmp
mov
and
or
push
sub
xor
add
sub
mov
adc
ss
push
cs
push
add
sbb
xchg
or
inc
cmp
call
or
dec
ja
pop
movsb
call
inc
ficoml
mov
sbb
adc
push
stos
mov
or
jne
addr16
sbb
mov
push
int3
sbb
xchg
dec
cld
jne
into
cmp
xchg
or
jmp
ss
cmp
subl
jne
push
pop
and
or
je
push
sahf
jmp
decb
mov
mov
jo
adc
xor
es
jae
js
pop
add
sbb
loop
icebp
call
rolb
push
or
das
enter
and
push
mov
fisttpll
push
push
push
jmp
xlat
inc
mov
call
leave
test
inc
mov
lcall
dec
jl
js
negb
cmp
dec
push
nop
push
xor
out
imul
dec
mov
fxtract
jmp
and
insb
pop
xorb
movsb
mov
roll
outsb
mov
pop
dec
jl
movl
test
adc
add
movsl
popa
fdiv
add
and
xchg
jne
mov
imull
in
and
in
movsb
jmp
lret
in
js
sbb
out
xchg
and
insb
adc
dec
push
data16
sbbl
cmp
shll
jbe
imul
cmpl
insb
into
and
push
mov
push
stc
add
pop
sub
arpl
and
dec
sbb
mov
add
pop
test
fdivl
or
mov
dec
jl
out
cwtl
or
popf
pushf
or
cmp
fidivrs
lea
adc
stos
push
inc
dec
mov
fs
inc
mov
shll
mov
inc
mov
incl
cmp
jg
push
dec
lea
add
pop
mov
cmp
jbe
test
ret
fstpt
mov
add
jl
adc
pushf
ret
mov
push
decl
or
inc
inc
dec
jne
bndldx
fdivs
xor
adc
scas
aam
nop
mov
sub
test
xor
and
lea
incl
nop
sbb
sub
es
lods
jmp
decl
dec
lods
and
adc
cli
sub
sbb
test
xor
or
xchg
add
and
ja
xorb
xchg
enter
xor
inc
pop
rorb
pop
push
sbb
mov
fmuls
or
shlb
mov
xor
test
push
stos
aaa
and
loopne
dec
sbb
leave
js
dec
dec
fwait
adc
or
sahf
inc
cwtl
mov
fstl
call
popa
es
push
movsl
shrl
dec
aam
mov
test
and
jmp
or
je
test
mov
adc
or
lds
dec
jmp
mov
sahf
and
aas
enter
mov
or
add
aas
mov
mov
adc
xor
add
sbb
inc
or
sbb
mov
addb
cmp
call
cwtl
cmpb
test
shll
je
inc
add
and
adc
add
add
add
fcmovnbe
out
xor
rorl
mov
inc
and
inc
adc
or
lds
jp
add
mov
pop
mov
xor
add
add
or
mov
mov
rcrl
in
adc
push
xchg
push
adc
or
mov
fs
pop
popa
pusha
inc
nop
orb
push
dec
inc
inc
adc
andb
addr16
cli
or
or
jp
pmaddwd
jle
mov
callw
mov
call
call
sti
push
jmp
js
dec
aam
inc
adc
iret
cmpsb
jns
cmp
call
je
jmp
xchg
pop
int3
pop
outsl
sub
xchg
pop
outsl
cmpsl
sarb
test
out
rcrl
cmp
or
jle
and
mov
out
fdiv
pop
call
clc
scas
pop
inc
xchg
repz
andb
fnstcw
mov
jb
cmp
jmp
je
das
leave
mov
sbb
ret
xlat
xchg
rol
xchg
out
mov
addr16
jne
enter
pop
push
les
fmul
cmp
xor
dec
rcl
fisttpl
sbb
lds
shr
addl
and
pop
inc
add
ljmp
push
sbb
repnz
push
mov
adc
leave
test
pop
jo
test
and
mov
sub
or
pop
mov
xor
sarb
fiadds
sti
mov
xchg
push
push
es
adc
push
add
push
and
jns
adc
test
xor
shll
pushf
mov
push
push
or
dec
syscall
add
movb
adc
outsb
iret
dec
insb
adc
call
ficomps
cltd
mov
or
pop
add
or
mov
js
sbb
fnstenv
lea
push
dec
rorl
jae
dec
sbb
pop
fs
adc
jp
test
daa
dec
loope
sbb
sahf
add
sub
push
jecxz
and
xchg
pop
aaa
mov
arpl
movsl
adc
or
adc
and
add
rclb
cmp
orl
and
and
xchg
pop
rolb
mov
add
mov
inc
shr
orb
les
and
sbb
or
add
sbb
inc
mov
inc
ss
and
adc
sub
adc
cmp
pusha
inc
jbe
pop
jb
inc
cmp
mov
lret
call
mov
or
rcrb
sbb
xchg
or
push
inc
dec
imulb
cmpsb
and
fs
idivl
pusha
nop
push
in
nop
je
mov
popf
out
insb
dec
cs
outsb
dec
out
repz
inc
or
push
sub
sbb
into
repz
or
ds
sbb
dec
out
or
mov
mov
mov
pushf
adc
pushf
and
xor
pop
nop
add
and
dec
xchg
add
out
and
fisubrs
mov
mov
or
repz
repz
mov
ror
sbbb
jge
or
cld
or
push
adc
mov
popf
sub
inc
sbbl
sub
sub
addr16
cmpsl
or
rcrb
sub
inc
dec
mov
jne
dec
or
insb
and
aam
ja
adc
dec
pushf
push
pop
jmp
xor
xor
xor
xor
sub
add
pmulhw
or
lahf
ret
lea
out
push
ficoml
test
inc
xor
push
pop
add
or
add
pop
repnz
add
add
and
sub
jo,pt
cmp
je
xchg
add
enter
mov
mov
push
push
push
gs
lcall
or
in
or
xchg
push
repnz
cld
add
or
enter
or
imul
or
sbb
or
or
push
or
addr16
push
movzwl
pop
xor
adc
pop
fidivl
jb
adc
scas
in
mov
int
inc
push
inc
adc
adc
test
adc
in
in
adc
sub
push
push
inc
jae
inc
sahf
pop
pop
and
aad
mov
sbb
mov
cmp
sbb
sbb
enter
mov
pop
enter
sbb
je
bound
jns
sbb
jo
push
repnz
pop
push
in
push
repnz
inc
negb
pop
add
add
add
sub
cmp
sti
outsl
rcll
mov
add
cmp
add
cltd
inc
xchg
and
lods
pop
lods
stc
cmp
push
in
push
in
imul
fistl
sub
rcl
ret
out
xchg
mul
xor
mov
xchg
out
out
in
pop
mov
sub
call
and
adcb
pop
leave
jnp
xchg
mov
cmp
cmp
ljmp
pop
add
lcall
movsb
sub
or
in
in
xchg
sub
push
aad
in
cmp
in
sahf
xchg
mov
out
xchg
xchg
or
pusha
out
or
je
in
xorl
xchg
dec
jb,pn
outsl
icebp
cmp
das
jnp
inc
scas
xor
adc
repz
cmpsb
repnz
std
hlt
hlt
imul
std
cmc
repnz
cmp
mov
mov
sbb
or
push
pop
gs
clc
clc
clc
leave
xor
or
repnz
cli
add
cmp
sti
sti
fdivrp
push
ss
cld
cld
je
cld
push
push
aaa
and
jne
mov
xor
sbb
insl
fs
sahf
xor
inc
ret
pop
hlt
push
xchg
sub
jb
lahf
shll
int3
xchg
xor
or
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
pop
xchg
hlt
and
and
jmp
dec
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
and
mov
jno
inc
cmp
or
inc
mov
mov
rcrl
and
lea
mov
cmp
and
dec
dec
or
test
sbb
jmp
dec
push
mov
xchg
or
xchg
in
xchg
push
test
jg
popf
arpl
adcb
inc
and
push
fsubrs
scas
push
or
rclb
movsb
sub
push
adc
inc
and
fwait
sub
aaa
sub
mov
dec
sarb
xlat
pop
mov
mov
cld
inc
inc
xchg
push
push
adc
adc
hlt
ret
daa
or
aam
in
jmp
sbb
pop
pop
adc
push
enter
push
and
pop
leave
inc
ds
jmp
jmp
ret
cmp
sub
inc
push
push
rclb
mov
insb
jno
dec
cs
mov
jb
inc
jno
mov
and
cli
adc
jmp
cwtl
bound
pop
xor
stos
sub
loop
adc
or
adc
hlt
psubsw
xor
push
sub
push
inc
push
cmp
jb
cmp
sub
add
jns
xor
jg
call
mov
add
and
enter
add
cwtl
test
xchg
add
push
pop
lds
sub
or
loopne
mov
jo
add
mov
xorb
dec
xor
ret
mov
inc
push
mov
fstl
xchg
mov
aaa
xchg
and
inc
and
inc
dec
pop
rorl
pusha
push
dec
nop
in
or
mov
sbb
int3
ret
mov
inc
xor
dec
nop
mov
or
xor
in
jns
data16
inc
rcrb
xchg
popf
fnstenv
inc
push
cmp
test
ds
rcl
dec
pop
xor
add
or
movsl
xchg
mov
adc
mov
inc
jnp
dec
mov
adc
xlat
xchg
inc
in
loopw
enter
mov
lcall
xchg
pop
inc
je
or
sbb
or
leave
push
lahf
push
xor
push
rcll
lahf
xor
rolb
and
fwait
dec
sub
mov
inc
inc
aaa
fcomps
movsb
sti
or
push
dec
inc
leave
xor
mov
add
lret
pop
repnz
rcll
jmp
fwait
data16
add
movsb
lahf
adc
fwait
add
nop
cli
lahf
in
mov
and
cmpsb
mov
imul
pushf
dec
enter
es
push
rcl
jns
sbb
nop
push
dec
xor
out
or
cmp
lds
sbb
movsb
lahf
test
outsb
cmpsb
mov
stos
dec
nop
into
jmp
nop
outsb
imul
inc
sahf
cmp
jb
jb
sub
sbb
cmp
movsb
in
xor
push
out
cltd
xchg
and
mov
in
lahf
mov
fwait
repz
bound
movsb
mov
hlt
jbe
sbb
leave
addb
pop
push
inc
es
add
adc
pop
lcall
xor
lahf
fbstp
lahf
inc
and
pushf
or
test
inc
xor
xchg
sbb
cmp
mov
cmp
cmc
add
xor
jmp
xor
jb
les
aam
and
xchg
add
leave
adc
rcrb
adcl
or
pop
sahf
push
stc
aaa
sbb
xchg
sahf
loopne
cltd
imul
sbb
xchg
push
inc
cmp
cmp
jno
or
cwtl
imul
push
jmp
push
lea
inc
mov
mov
and
test
adc
cmp
xor
mov
push
lcall
rcl
sbb
sbb
pop
std
lods
inc
es
es
pusha
addl
inc
dec
mov
arpl
movsb
mov
fs
outsb
mov
in
mov
jl
shlb
fcmovnb
or
cltd
xchg
xchg
inc
imul
lret
xor
popf
add
imul
and
clc
mov
pop
dec
inc
or
dec
cmp
fnstenv
and
out
cmc
pop
sbb
or
add
jecxz
push
sub
rcll
sub
or
nop
jbe
inc
fdivr
hlt
jle
sub
add
or
inc
xor
mov
std
sbb
dec
and
push
or
mov
xor
add
xor
adc
jnp
adc
jle
movb
mov
adc
inc
push
jns
loopne
aam
and
mov
lock
daa
sub
jmp
mov
bound
rolb
cwtl
add
nop
add
adc
xchg
cmpl
test
xor
movsb
xor
jmp
add
es
pop
or
mov
or
test
pop
iret
dec
int
bound
rcll
or
cmp
scas
stc
aaa
popa
aas
ss
xchg
xchg
je
sbb
add
or
inc
imul
movsb
mov
push
pusha
and
cmp
fisttpll
inc
cmp
sbb
or
or
xor
sbb
popa
dec
jbe
cmp
into
dec
dec
mov
sti
push
sbb
je
daa
dec
mov
inc
or
scas
jb
dec
ret
popa
cmp
mov
push
je
push
xchg
mov
ss
pop
push
xchg
mov
insl
sub
lea
xor
or
mov
lret
mov
xchg
lods
and
dec
mov
loope
xchg
push
push
int3
xor
nop
sbb
cltd
xchg
sbb
xor
push
sub
data16
loopne
int3
xor
cwtl
push
test
mov
pop
mov
or
cltd
xchg
mov
mov
ds
shl
lret
mov
rolb
je
loopne
mov
mov
sbb
xor
call
rcl
xlat
scas
test
mov
mov
scas
pop
test
sbb
mov
inc
sub
xor
push
loope
int
je
sub
push
int3
xor
cli
aam
sbb
pop
pusha
mov
stos
cltd
xchg
inc
adc
or
int
in
sub
dec
inc
mov
sbbl
or
mov
xor
or
mov
jae
imul
dec
inc
sub
loopne
mov
cltd
xchg
orl
subl
outsb
dec
inc
aaa
les
mov
shrb
imul
sub
nop
das
dec
int
xlat
ss
sbb
adc
xor
data16
xchg
dec
adc
shrb
sbb
jmp
imul
dec
inc
scas
cltd
sub
xor
shrl
jnp
xor
adc
sub
sub
and
xor
dec
sbb
push
data16
sub
push
rcll
enter
aas
push
sbb
dec
inc
sub
rcl
stc
jb
mov
dec
inc
aaa
xor
mov
xor
mov
mov
imul
stos
and
fwait
jno
imul
pop
std
pop
movsl
test
imul
into
ds
pop
movsl
xlat
mov
mov
sub
add
cmpsb
sub
mov
sub
dec
inc
push
push
sub
adc
movsb
subb
sub
andl
aam
push
cwtl
mov
mov
sub
lret
mov
inc
inc
sbb
mov
cltd
xchg
sbb
fdivrl
rcrb
fistpl
mov
adc
mov
sub
int
dec
cmp
aam
jns
ffree
dec
inc
sub
or
aaa
int
sub
or
aad
out
xor
daa
mov
or
loope
cmpsb
mov
insb
pop
add
int3
sbb
lock
xor
sub
pop
dec
test
or
int
jl
push
mov
ss
xor
jbe
add
push
stos
mov
pop
and
inc
aaa
rcl
sub
ret
aaa
rcl
imul
dec
stos
cmp
mov
inc
jo
into
xor
sub
int
mov
sub
cmp
imul
sub
and
sub
repnz
sti
lret
outsb
sbb
xor
sub
loopne
jbe
lret
sub
sub
mov
lahf
xchg
je
into
shlb
pop
jb
int3
xor
push
jnp
data16
mov
jp
adc
loope
xor
lock
out
nop
mov
inc
mov
inc
les
data16
lods
fiaddl
xor
stos
test
inc
or
sub
dec
cmp
outsb
cwtl
imul
xchg
sbb
repnz
mov
xchg
out
sub
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
js
push
lds
dec
pop
cmp
popf
and
int
sub
xor
lret
call
adc
push
rorb
popa
jo
lods
mov
loope
cli
cmp
cmp
cltd
xchg
or
ds
cli
xchg
icebp
leave
jmp
xor
lea
fistpl
push
les
dec
and
dec
lds
mov
mov
repz
mov
in
pop
xchg
jmp
xlat
or
inc
out
push
mov
aam
mov
movb
cmpsb
testb
sub
mov
inc
push
mov
inc
push
in
fbstp
cmp
jbe
xchg
jmp
add
pop
dec
inc
into
add
jmp
test
jp
push
pusha
xorl
or
addr16
push
rcll
add
inc
dec
inc
pop
nop
imul
pop
adc
push
mov
add
mov
mov
xchg
loope
inc
jnp
add
pop
stc
xor
xlat
jae
mov
and
les
sbb
dec
or
or
mov
dec
cmp
dec
dec
jo
push
jbe
negl
sbb
xchg
je
cmp
pop
pop
jle
or
push
and
pop
sub
xchg
je
dec
je
add
js
inc
dec
cmp
push
cmp
inc
dec
dec
shlb
scas
add
push
dec
insb
cmp
cmc
int
dec
dec
sbb
fcompl
data16
push
jp
push
mov
in
push
scas
lret
cwtl
xchg
inc
cmp
inc
dec
sbb
mov
leave
ret
pop
adc
or
loope
out
or
push
pop
adc
adcb
inc
cmp
pop
pusha
mov
in
cli
stc
add
mov
es
dec
pop
jg
es
xor
xchg
pop
jo
test
add
fs
sub
leave
xchg
and
movsb
ret
pop
add
add
fwait
rolb
jl
shrl
xchg
pop
jnp
inc
hlt
out
or
sarb
enter
out
adc
mov
outsl
inc
add
notb
and
dec
mov
or
pop
cld
cs
sbb
or
jno
shrb
dec
pop
push
sbb
call
adc
inc
mov
hlt
cs
jbe
fimuls
inc
mov
cmpsl
inc
je
mov
inc
cmp
or
xchg
cwtl
cmp
shll
inc
inc
sub
pop
out
inc
push
inc
xchg
ret
in
push
add
mov
inc
rcrb
pop
push
mov
mov
inc
nop
sahf
cmpl
inc
sub
add
outsb
inc
push
loopne
outsb
inc
inc
mov
jnp
and
mov
and
and
or
filds
mov
xor
loopne
adcb
inc
in
movsb
adc
inc
xor
inc
push
nop
call
pop
mov
mov
dec
call
push
outsb
inc
sbb
or
call
jne
dec
mov
and
mov
xchg
mov
xchg
enter
mov
and
loope
dec
mov
push
jo,pn
adc
add
dec
call
adc
mov
xchg
test
inc
or
in
or
dec
adc
mov
mov
test
inc
dec
inc
out
mov
mov
adc
dec
nop
fs
or
lods
jmp
adc
inc
xorl
cmpsb
and
addl
or
xor
inc
and
pushf
sub
mov
mov
pop
adc
dec
fstpt
and
mov
push
cmp
adc
add
rcl
push
xchg
push
loop
call
push
scas
dec
aas
movsb
add
incl
jl
je
and
xchg
rclb
xor
sbb
cmp
jecxz
adc
notb
inc
push
rclb
sub
push
ljmp
or
lret
adcl
xor
sbbb
xchg
into
pop
enter
lret
push
jns
push
cmp
xor
jo
pop
inc
sub
repz
addr16
lods
out
call
adc
add
arpl
inc
gs
loopne
cvtpi2ps
jb
push
adc
add
cmc
and
sub
ljmp
mov
add
adc
popa
and
cs
mov
nop
inc
aam
cmp
jmp
incl
jb
nop
fimull
jb
xor
push
inc
call
pop
pushf
inc
pop
inc
ss
push
ss
pushl
add
fsubrl
add
mov
sti
mov
or
jne
inc
cmp
inc
dec
insl
imul
jne
insb
cmp
add
cmp
pop
sbb
std
inc
jmp
dec
jmp
xor
push
or
push
inc
inc
adc
inc
jmp
inc
inc
inc
pop
je
inc
gs
aaa
pop
es
cmpb
push
mov
loope
pusha
mov
mov
in
ja
fs
stc
add
adcl
sub
dec
push
int
or
je
clc
xor
movsbl
and
cmp
leave
or
push
mov
cmp
push
cld
inc
add
push
test
jmp
add
enter
popa
adc
push
popf
pop
pop
or
cwtl
adc
loope
gs
push
sbb
sbb
sbb
enter
aas
add
sbb
pusha
popa
push
test
add
mov
loopne
movsl
shl
mov
fiaddl
lock
pop
sub
xchg
sar
call
sbb
imul
addl
dec
or
out
addps
push
lret
sti
lods
fisubrs
jge
push
push
or
push
es
inc
jecxz
imul
cmp
sbb
and
test
fs
add
ja
cmp
xor
add
mov
push
add
ret
push
sar
inc
push
sub
mov
call
shll
pushf
push
sarb
xor
int
push
hlt
dec
push
mov
pusha
sub
fcomip
inc
adc
sub
or
lret
mov
dec
nop
mov
fldl
dec
sbb
ret
lods
nop
addr16
sbb
ret
dec
mov
test
inc
and
test
cmc
pop
add
in
push
rcl
add
mov
stos
in
jo
dec
add
sahf
popa
mov
in
push
test
adc
adc
das
out
push
or
inc
add
movsl
jnp
xor
orl
xor
or
add
cs
popa
mov
cmpsb
or
add
push
cmpsb
xor
mov
mov
mov
test
imul
test
mov
shlb
and
lret
aas
stc
testl
or
fadds
cli
mov
enter
ret
sbb
push
add
fists
bound
add
inc
xlat
sbb
mov
mov
ret
inc
sbb
inc
dec
inc
and
dec
xchg
pop
xchg
xchg
movsb
dec
loopne
mov
sarb
mov
or
les
daa
nop
sbb
add
or
push
lea
cs
push
fcoml
nop
outsb
xchg
lock
xchg
insb
fwait
mov
push
jbe
pop
mov
jmp
repz
movsb
pop
inc
xor
movsb
mov
ret
loopne
xchg
int
mov
lea
mov
movsl
ror
int3
leave
mov
jno
xor
or
push
loopne
lods
es
sarl
mov
or
adc
call
xchg
call
inc
pop
jmp
punpckhwd
inc
push
sbb
rorb
add
xchg
ja
sbb
xchg
dec
add
movl
pop
pop
repnz
movsl
test
loop
ficompl
sub
rolb
add
push
enter
jmp
inc
sbb
rclb
pop
or
mov
or
xor
push
push
mov
and
xchg
lret
call
sub
add
add
cmp
xchg
imul
es
in
dec
enter
push
mov
sbbl
je
sbbl
arpl
ret
test
and
movsb
fisubs
mov
mov
dec
jo
icebp
jmp
mov
push
imul
cwtl
cmp
push
inc
add
or
or
adc
xor
sbbb
das
add
and
or
cmp
cmp
in
cs
mov
or
fistpll
cmp
xor
and
push
jmp
sbb
hlt
add
mov
xor
dec
xor
lcall
xor
outsb
xor
xor
add
add
cmpsb
cmp
roll
add
fwait
loopne
outsl
pop
shlb
and
jbe
sbb
and
sub
in
jbe
add
add
int
add
mov
out
popa
leave
and
sbb
push
enter
jecxz
dec
imul
xor
imul
inc
sbb
outsb
xor
sbb
loope
scas
add
dec
in
xchg
and
aam
or
push
mov
in
jo
in
sub
cltd
push
pop
push
ret
sbb
leave
inc
inc
or
dec
push
and
pop
in
push
jno
push
in
xchg
pop
rorb
mov
adc
fwait
pop
and
mov
adc
and
in
inc
push
cmp
in
or
and
in
inc
pop
jne
jne
add
xorl
and
loopne
or
jo
test
pop
sbb
je
test
mov
sub
cmp
jmp
daa
mov
xor
outsl
and
sbb
jb
adc
sbb
test
jmp
lret
call
pop
or
stos
les
inc
mov
clc
pusha
out
aam
dec
call
jecxz
or
xor
and
sbb
imul
call
dec
icebp
sahf
add
jne
cmp
xchg
dec
adc
or
nop
mov
jno
test
and
call
enter
loopne
add
ficoml
pop
and
xchg
sub
sbb
test
jbe
or
sub
outsb
add
enter
loopne
sbb
pop
fdivrs
push
jne
sar
mov
mov
xlat
inc
rolb
je
cmp
out
push
mov
outsl
mov
inc
adc
mov
daa
lea
mov
mov
cltd
sbb
add
cmp
es
add
adc
push
cwtl
add
addr16
push
cwtl
nop
or
jb
aas
sbb
sub
call
or
addr16
mov
roll
adc
add
xchg
testl
shlb
cmp
xchg
rcrb
push
xor
adc
mov
cmp
sarb
sub
xchg
push
mov
xchg
push
sub
pushf
es
mov
les
stos
mov
adcb
push
adc
mov
ss
lds
daa
pop
sbb
daa
or
sbb
adc
je
jno
jne
int3
push
pop
add
cmp
insl
dec
dec
loope
push
xchg
mov
mov
pop
jo
fisttpl
pop
adc
shl
packuswb
fdivrl
cmp
mov
xchg
xchg
dec
and
dec
inc
or
mov
in
mov
aam
pop
call
dec
push
dec
dec
hlt
push
jp
dec
xchg
and
jnp
inc
inc
jns
sub
mov
adc
push
and
movb
jns
test
idivl
data16
and
jmp
cmp
fstl
inc
jns
mov
frstor
add
adc
add
lret
xchg
js
lods
mov
dec
push
call
mov
addl
push
and
cmp
adc
rcr
xchg
push
cmp
push
xchg
jns
int
lods
outsb
test
mov
pushf
mov
mov
lds
mov
pop
pop
xor
imul
add
adc
call
mov
int
rorb
mov
ss
mov
dec
adc
sub
jns
int3
mov
mov
ret
mov
and
xchg
pushf
idivb
jns
fadds
jp
push
jns
pop
adc
ds
popf
subb
hlt
adc
push
xchg
jns
mov
adc
jns
sub
mov
test
sbb
cs
push
jns
dec
push
inc
jns
pop
push
inc
inc
jns
and
jbe
adc
sarb
jne
or
add
sub
push
xchg
nop
jns
orb
sub
mov
sbb
test
push
lea
sub
jns
adc
stos
dec
call
or
inc
das
push
lods
inc
inc
outsb
inc
jns
aaa
inc
js
jns
mov
adc
push
inc
inc
jns
sbb
inc
push
and
lahf
jg
push
xchg
shrb
rorl
xchg
sbb
add
popa
xor
fistl
sbb
xor
push
sbb
int
mov
sub
jae
imul
lcall
inc
sbb
dec
in
test
inc
jns
jnp
or
mov
dec
call
xor
or
ficomps
jecxz
mov
les
jns
test
mov
or
or
adc
push
int
int3
sub
call
inc
push
orl
cwtl
mov
mov
je
pop
push
pop
add
xor
inc
negb
add
pop
xchg
or
in
aaa
call
leave
nop
dec
scas
pop
sub
pop
sbb
pop
test
pop
lods
xchg
mov
xchg
or
or
js
pushf
dec
xchg
and
xchg
insb
pushf
mov
test
sub
adcl
bswap
mov
cmp
je
test
pop
pop
dec
cmp
xor
cmp
sub
lods
sub
pop
arpl
je
repz
loope
or
xchg
mov
xchg
rolb
pop
pop
inc
mov
pop
cmp
or
sub
jb
call
xor
bound
pop
sbb
rorl
das
xchg
push
push
push
jns
test
xchg
das
sbb
pop
mov
cmp
pop
jb
movsl
lahf
sbb
add
roll
leave
mov
dec
dec
push
xchg
das
dec
enter
ss
inc
jbe
das
sti
mov
mov
cmc
jns
in
das
scas
sub
inc
das
call
inc
das
jle
sub
fdivr
das
sub
movsl
shlb
add
sbb
dec
das
pop
inc
add
or
adc
das
adc
xor
jp
aad
fiadds
andl
scas
jae
mov
sub
pop
or
into
pop
xchg
or
insb
call
add
mov
sbbb
leave
jle
inc
push
xchg
or
cs
mov
or
pop
mov
pop
enter
xchg
or
hlt
push
pop
and
pop
and
pop
xor
sbb
pshufw
rclb
pop
jmp
mov
mov
pop
push
fs
jbe
xchg
pop
insb
push
sub
and
inc
inc
mov
or
xchg
testl
adc
mov
mov
imul
pop
in
fs
leave
inc
mov
dec
or
mov
and
dec
sbb
test
push
lock
adc
mov
pop
test
fldl
push
sub
jnp
mov
push
es
adc
push
mov
adc
and
push
pusha
cmp
stos
ret
aas
shrl
sub
adc
or
mov
test
bound
adcb
adc
push
enter
bound
call
popf
cmc
in
outsl
nop
push
push
popa
inc
mov
mov
push
push
mov
push
push
pop
adc
inc
popa
inc
push
psubd
push
push
aad
je
fsts
add
mov
mov
xchg
or
mov
push
or
dec
mov
push
mov
cmp
rclb
pop
and
pop
ss
in
mov
std
dec
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
and
std
int
pop
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
and
cmp
call
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
inc
inc
or
push
or
push
cs
jb
inc
inc
std
insb
and
int
dec
xor
jo
xor
sahf
cld
mov
call
mov
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
and
shlb
shrb
mov
cmp
push
shrl
mov
mov
je
test
addb
lcall
mov
push
mov
daa
and
pop
pop
adc
dec
or
sbbl
stos
pop
mov
mov
xor
sub
and
pop
add
or
stos
mov
adc
sub
test
dec
aaa
adc
inc
and
and
sbb
sbb
orb
pusha
int3
adc
arpl
add
cli
cs
pop
adc
and
imul
call
xor
mov
fnsave
mov
xor
dec
mov
movsb
inc
or
inc
shlb
call
xchg
or
adc
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
aad
mov
aad
sbb
mov
add
sbb
aad
inc
or
shrb
addl
or
push
rclb
add
fwait
je
ret
stc
mov
mov
sub
or
push
pop
push
andb
pop
or
adc
adc
push
enter
aad
xchg
sub
mov
out
imul
aad
adc
or
inc
aad
mov
jp
les
or
filds
aad
cmp
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
xchg
inc
cmp
movsl
jne
sbb
pop
pop
outsb
xchg
test
je
and
mov
call
mov
sbb
adc
sbb
mov
xchg
inc
sbb
cmp
cli
sbb
lds
push
in
push
and
mov
xor
add
cmpsb
fs
cltd
shlb
mov
push
or
lods
pushf
cltd
xchg
sbb
je
pop
adc
dec
push
adc
fstl
scas
adc
add
xchg
adc
mov
adc
dec
push
ret
rcrl
xor
shlb
js
adc
cltd
or
xchg
sub
std
cmp
xchg
sub
cmp
adc
shlb
adc
push
cmpsb
adc
pop
xchg
adc
pushf
sub
xacquire
push
addr16
pop
push
gs
adc
insb
cmpsb
adc
cwtl
mov
sub
xor
adc
ret
dec
adc
add
sbb
mov
xchg
xchg
ret
or
adc
stos
inc
and
pop
rorl
push
call
jns
call
mov
xchg
adc
mov
jmp
adc
cmp
cmp
sbb
xchg
rolb
mov
inc
and
ret
test
addl
js
jmp
stos
mov
xchg
leave
sub
mov
popf
ret
testb
sub
push
ret
xchg
add
inc
lret
mov
mov
es
inc
dec
xchg
add
pop
inc
mov
addl
stos
xchg
mov
adc
mov
cmpl
orl
nop
rolb
and
lea
adc
jmp
sub
aam
sub
add
lods
loopne
addb
push
mov
subl
mov
or
inc
shrb
push
dec
repz
and
add
push
add
int
jmp
jge
insl
xor
and
gs
les
and
testl
dec
push
mov
int3
lea
addl
stos
xor
add
and
sarb
adc
and
pushf
imul
cmp
je
adc
popf
push
aaa
out
mov
xorb
lret
roll
add
adc
fsubrs
loope
jl
popa
pop
push
adc
ret
mov
in
ss
inc
cmp
enter
aaa
and
cmp
roll
aaa
xchg
jb
aaa
xor
fs
aaa
je
rolb
dec
aaa
aam
inc
ja
jbe
and
shl
adc
aam
mov
push
loopne
pop
aaa
imul
arpl
mov
stc
push
pushf
sub
insb
cld
add
mov
mov
push
dec
mov
test
int
out
call
iret
dec
push
add
push
iret
push
and
cmp
test
inc
push
cmp
add
nop
and
and
mov
loopne
les
push
movsb
repz
call
xchg
sbb
mov
js
rolb
andb
and
jmp
mov
jle
je
add
and
jp
into
shll
cwtl
and
movsb
sbb
add
ret
aaa
adc
xorl
in
push
addr16
xorb
addr16
xor
adc
addr16
xor
les
push
addr16
xchg
and
adc
add
and
push
mov
scas
rolb
mov
push
sbb
pop
pusha
loopne
pop
sahf
cmp
inc
push
pop
sbb
or
add
add
jbe
pop
jmp
rolb
and
push
mov
add
pop
rcrb
pop
shll
add
sbb
out
cmp
adc
xor
or
cmpsl
cli
push
xor
or
pop
in
in
cmp
mov
jecxz
mov
push
out
je
adcb
pop
xchg
mov
roll
adc
mov
and
xchg
scas
push
repz
lods
xlat
xor
gs
jmp
imul
je
mov
pop
dec
inc
dec
xor
xchg
xchg
add
xor
rcrb
cmp
and
loopne
jb
or
test
cwtl
mov
mov
or
xor
scas
gs
mov
mov
gs
or
or
repz
addl
repz
xor
xchg
repz
xchg
or
repz
pop
fdivl
add
sahf
adc
inc
sbb
and
sahf
sbb
or
imul
sbb
xchg
push
xor
cmpl
mov
sbb
je
mov
jg
mov
sub
in
mov
popa
push
popf
bound
push
mov
std
insl
push
mov
out
call
jno
cltd
xor
or
xor
fs
out
sbb
adc
or
inc
xor
push
adc
sbb
and
fs
xchg
stos
mov
cmp
jne
or
adc
movsb
add
add
inc
ss
push
push
or
sbbb
adc
and
sbb
sub
cmp
sti
fwait
repz
adc
mov
mov
push
jo
repnz
xlat
fwait
push
lret
mov
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
cld
inc
scas
cwtl
jge
adc
jb
inc
lcall
xor
sub
push
jnp
js
push
adcl
inc
ja
jnp
ret
test
sti
lcall
adc
xlat
ret
lcall
nop
inc
nop
adc
xchg
and
xchg
push
xchg
inc
xchg
mov
inc
xchg
cmp
jo
xorb
mov
xchg
pop
dec
mov
cmp
cltd
js
nop
dec
test
and
inc
mov
push
push
xchg
inc
sbb
out
push
cmp
cmp
mov
add
mov
adc
rcll
cs
retw
int3
or
add
inc
ret
push
mov
mov
pop
and
pop
cmp
add
and
cmp
repz
out
sbb
ret
cmp
repz
mov
push
out
cmp
ds
or
sbb
out
jns
call
add
push
lods
push
mov
idivl
jnp
push
push
sub
push
nop
cs
out
fisubl
push
inc
out
out
jns
cmpb
push
push
sahf
dec
cmp
sbb
repnz
cmp
repz
into
mov
mov
push
pop
into
sbb
incb
add
out
out
repnz
loop
sbb
cmp
mov
out
outsb
pusha
sbb
pushf
repz
out
lret
or
iret
repz
and
pop
data16
iret
repz
nop
sahf
lods
mov
cmp
repz
in
decb
nop
repz
shlb
jb
jle
sahf
mov
daa
sarb
jns
loop
clc
adc
sub
cmp
cmp
cmp
push
push
cmp
cmp
lods
clc
adc
daa
pop
mov
jbe
insb
stos
push
in
add
push
cwtl
cmpsl
pop
fwait
ret
fisubrs
add
das
out
iret
dec
test
xor
push
repz
add
jbe
push
scas
test
add
push
dec
fidivrs
add
or
pop
jo
inc
dec
push
pcmpeqw
mov
inc
sub
push
inc
dec
push
adc
imul
push
je
sbb
rcrl
add
mov
ja
roll
ds
out
mov
fcoml
es
ss
pop
js
xor
xor
dec
xor
pop
ss
mov
jae
outsl
ss
mov
addr16
adc
jecxz
xchg
bound
xor
fldt
mov
push
cmp
mov
outsb
aas
das
lret
fwait
test
dec
imul
mov
xchg
xchg
pop
mov
xchg
adc
inc
mov
rol
orb
sahf
or
push
mov
jbe
and
imul
and
and
rolb
dec
sub
fsubrl
stos
outsl
and
data16
add
testl
cmp
mov
jg
xor
ret
aas
ret
je
inc
bound
mov
incl
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
sub
out
rorb
xchg
pusha
lret
mov
sbb
pop
dec
out
dec
jnp
and
pop
dec
imul
mov
jae
inc
jne
outsb
je
adc
inc
push
sbbl
in
outsl
push
push
jnp
inc
xor
sub
xor
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
in
mov
xor
inc
xor
xor
ss
xor
fdivrp
fldcw
cmp
xor
clc
inc
inc
xor
mov
aam
ret
and
das
lret
mull
add
xor
orb
sbb
push
fidivrs
cmp
shll
push
xor
or
push
and
lock
adc
xor
inc
pop
dec
push
inc
add
jl,pt
dec
sub
push
jle
inc
popa
xor
dec
and
mov
push
idivl
and
sub
pushf
xor
add
push
sbb
dec
dec
outsl
mov
dec
sbb
fs
pop
push
test
in
scas
push
push
or
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
into
repz
sub
out
cmp
jne
sti
int3
in
mov
lods
sahf
add
repz
fsubr
cmpsb
push
hlt
mov
dec
fidivs
pop
mov
insb
adc
and
mov
jo
outsl
xor
imul
jp
add
inc
je
push
push
mov
mov
and
inc
cmp
cmp
push
sbb
xchg
ret
add
sbb
pop
popf
mov
stos
push
inc
cs
sub
inc
or
dec
insb
insb
mov
xchg
and
adc
data16
ret
lret
cmp
testb
cltd
dec
lods
and
xor
or
pop
mov
xor
insb
fmuls
push
sbb
xchg
jns
pop
add
int3
pop
rcrl
enter
stos
inc
pop
ja
sbb
pusha
push
and
mov
jnp
inc
inc
inc
sub
imul
bound
js
daa
jmp
scas
je
dec
shll
push
imul
push
jo
lods
imul
sbb
pop
push
inc
aaa
dec
movsb
push
mov
jae
outsl
pop
pushl
push
pop
arpl
inc
cs
push
push
push
add
dec
sub
pusha
ja
and
je
outsb
outsl
fld
or
sbb
popa
lea
cmpb
cmc
sbb
int3
add
pop
sub
add
add
and
inc
inc
and
sub
pop
stos
inc
or
es
or
repnz
rorb
or
push
pop
or
movb
add
aaa
or
jle
and
xchg
pushf
add
sbb
push
xchg
adcb
and
pop
inc
mov
popa
sub
sub
mov
adc
adc
iret
repz
orb
or
add
mov
adc
push
adc
out
dec
add
iret
sarl
sbb
sbb
mov
std
sbb
push
das
fbstp
out
pop
nop
cld
and
cli
xor
push
jns
stc
jp
repz
iret
push
cld
fdivr
mov
cmpsl
or
jbe
add
mov
out
les
mov
adc
outsl
mov
dec
int3
xorb
ja
cmp
sbb
push
cmp
es
bound
add
popl
adc
repz
addr16
cld
or
in
into
repz
int3
les
xor
out
dec
nop
mov
mov
jns
insb
push
cmp
pop
mov
dec
jns
repz
inc
cmp
xor
jns
out
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
cld
or
hlt
repz
repz
iret
repz
movsb
nop
jo
xor
sahf
out
ds
int3
mov
insb
jns
out
inc
sub
adc
repz
repz
push
fcom
les
js
sub
aam
out
lcall
iret
jnp
jl
add
call
cwtl
add
loop
jl
mov
mov
pop
inc
bound
dec
les
imul
adc
or
nop
js
lret
xor
fidivrl
sub
inc
inc
add
adc
shr
mov
cmp
dec
mov
pop
and
lret
push
add
cmpl
adc
sub
adc
xor
mov
mov
add
mov
inc
pop
les
xchg
sub
rcll
adc
sbb
xor
mov
pop
push
jmp
les
aaa
push
sub
or
push
es
pop
insl
popf
add
jae
fadds
pop
wbinvd
add
lods
xor
add
stos
xchg
loop
push
or
mov
pushf
andb
rolb
ret
jns
inc
sub
add
add
and
mov
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
loop
jo
mov
ja
jg
pop
jne
pop
xchg
xchg
lods
stc
sbb
enter
ret
jne
imul
je
pop
dec
pop
adc
push
mov
jo
pushw
loop
push
or
jo,pn
dec
add
bound
popa
or
daa
or
outsl
push
push
push
insb
das
inc
repnz
jl
add
cmpsl
ja
lahf
rorb
das
loopne
aaa
jns
xchg
loopne
inc
sbb
pusha
out
push
mov
push
and
test
mov
stc
xchg
nop
or
sarb
jg
fdivrs
test
ss
push
insb
ret
sete
jo
mov
jg
jbe
int3
jl
aas
add
dec
push
mov
xlat
jns
pop
cmp
or
push
in
insb
push
lcall
lret
icebp
jns
test
adc
sbb
push
popf
jl
in
mov
push
push
aas
sbb
mov
cmpsb
jg
mov
cmp
mov
shlb
aam
pushf
sub
sarl
vmptrst
enter
je
mov
leave
and
pushf
push
sarl
jbe
insb
rcr
in
jp
pop
imul
pop
loopne
pop
repnz
dec
adc
out
imul
lock
enter
mov
sbb
xor
mov
sbb
dec
imul
add
sahf
or
inc
je
dec
imul
sbb
lahf
mov
sub
cmpl
scas
pop
push
in
sbb
and
add
ljmp
add
push
outsl
ja
xor
mov
push
sub
fsubl
push
sub
add
jecxz
mov
fsubrp
daa
movsb
and
adc
sbb
repnz
arpl
mov
add
jl
ljmp
mov
or
repz
cmpsl
fs
jbe
push
jb
push
shll
jae
arpl
and
sbb
outsb
push
add
push
imul
out
insl
xchg
mov
jae
enter
push
jae
push
adc
or
adc
jae
push
mov
mov
mov
mov
out
adc
add
push
sub
push
inc
jno
leave
dec
sbb
dec
adcl
and
add
es
mov
inc
push
mov
dec
lods
loope
pop
das
push
mov
inc
or
cmp
push
jo
jb
jns
or
ret
mov
cltd
shlb
movsb
sbb
shll
mov
add
lods
cmpsl
xor
push
and
lock
sbb
imulb
push
divb
mov
adc
out
or
popa
jge
and
shll
das
pusha
inc
and
sahf
nop
cmpsl
and
inc
mov
rcrb
and
xchg
mov
add
jecxz
popa
mov
add
cmp
inc
add
lods
or
push
gs
or
fstpt
jnp
inc
rolb
jne
addr16
outsb
pop
add
xchg
pop
push
scas
push
and
leave
jmp
jbe
xor
nop
pop
ds
fs
dec
test
lahf
xor
lahf
sbb
dec
adc
and
icebp
push
inc
jge
cmp
cs
cld
adc
ret
adc
jle
and
push
loopne
ret
pop
adc
mov
outsb
xor
imul
and
sub
dec
add
or
or
sarl
pop
outsl
mov
shrb
inc
add
add
push
lcall
orb
mov
mov
xor
xor
dec
dec
pop
pop
in
inc
jmp
add
inc
jns
mov
lea
xchg
fs
lds
gs
mov
lret
arpl
outsl
inc
push
outsl
cmp
xchg
fsubrs
arpl
dec
and
roll
add
fs
xlat
or
sbb
cmp
rorb
jbe
xor
push
mov
mov
jb
sbb
or
mov
adcb
cmp
jp,pt
mov
inc
jmp
lret
mov
push
arpl
fidivl
dec
inc
dec
pop
or
aas
or
pop
outsb
inc
cmc
lods
sbb
sub
out
jnp
push
jmp
enter
push
push
push
xor
cmpl
mov
stos
sar
imul
add
jo
add
add
jo
add
outsl
inc
pop
movsb
adc
sbb
inc
push
jo
sub
loopne
ds
pusha
data16
xchg
dec
pusha
push
jo
jno
mov
mov
cmp
add
popf
inc
add
scas
into
pop
roll
xchg
add
cmpsl
es
or
ljmp
dec
imul
add
iret
cltd
push
push
xor
int
xchg
insb
imul
inc
dec
pop
imulb
add
push
mov
add
ret
push
and
mov
add
std
or
aas
cld
inc
jae
adc
add
je
add
push
data16
cmp
outsl
xor
and
add
lcall
or
push
sbb
cmp
into
insb
sbb
or
push
add
mov
inc
sub
ret
add
imul
fbld
lret
fbld
pop
rcl
scas
ficomps
mov
push
popa
or
fwait
xchg
xlat
push
and
and
inc
cwtl
aam
lcall
xchg
sub
push
pop
in
aam
pop
add
sbb
jae
push
ds
mov
add
repz
insb
push
sbbb
ret
xchg
push
punpcklbw
jnp
mov
and
add
std
adc
xchg
jns
sub
adc
test
decl
cmp
sub
pop
or
inc
dec
cmpsl
data16
fiaddl
pop
gs
cmp
inc
xor
sti
fsubrl
shrb
or
ss
aad
cwtl
inc
pusha
jmp
pop
pop
xor
mov
jo
shlb
mov
adc
xor
inc
or
mov
and
dec
push
adc
fisubs
lcall
mov
repz
adc
add
out
sahf
out
out
lock
jns
enter
mov
repz
jns
movsb
pop
mov
cmp
xchg
nop
mov
cmp
pusha
push
pop
push
inc
jns
out
cmp
and
sbb
cmp
out
cld
in
lock
mov
loopne
fcom
out
sahf
out
sarb
sahf
mov
cmp
jns
out
sub
sbb
or
cmp
out
cld
in
hlt
in
in
repz
fmul
mov
cmp
repz
push
inc
repz
imull
and
or
jmp
inc
or
mov
adc
stos
pusha
test
add
je
subl
mov
pop
testl
sbb
add
incl
pmuludq
cmp
not
lock
mov
push
nop
lods
lods
in
data16
mov
and
sub
add
shrl
adc
filds
add
mov
pop
inc
dec
pop
add
add
push
and
mull
mov
xchg
mov
sub
mov
lods
xchg
aaa
dec
adc
push
movb
xchg
cmp
add
xor
push
pop
jo
add
in
pop
add
sbb
pop
push
mov
inc
xor
inc
outsb
sub
add
mov
xor
xor
xchg
cmp
insl
jbe,pn
and
ljmp
xor
xor
ds
sbb
cmp
sub
mov
fdivs
ret
mov
and
dec
pusha
inc
repz
imul
sbb
cmp
sbb
insb
and
push
and
es
or
adc
and
jb
jne
es
ret
mov
mov
popa
insb
into
dec
adc
mov
jns
das
sti
and
mov
push
sbb
jbe
sbb
inc
inc
mov
inc
pop
pop
adc
mov
add
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
incl
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
dec
xor
xchg
shll
inc
ss
decl
repnz
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
cmp
sub
ret
add
push
lock
idivl
aas
sbb
xor
xor
xor
push
xor
or
jmp
outsb
xor
popf
xor
xor
xor
xor
xor
fs
cld
pushl
imul
aam
fnsave
xor
xor
xor
out
xor
xor
xor
jge
mov
xor
xor
fidivl
scas
xor
pushl
fdivs
call
xor
jg
push
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
dec
pop
aas
out
cmp
pop
cmp
outsb
cmp
jmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
lcall
mov
cmp
push
adc
cmp
cmp
cmp
cmp
adc
cmp
jae
mov
pushf
cmp
mov
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
roll
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
push
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
fcomip
daa
xor
xor
xor
pop
xor
jo
xchg
xor
xor
ljmp
inc
xor
xor
xor
xor
xor
xor
clc
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
push
mov
xchg
aas
inc
aas
pop
aas
ja
pusha
pop
aas
adc
pop
push
or
cmp
pop
jg
pushl
arpl
push
xor
xor
xor
xor
xor
xor
xor
paddd
add
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
mov
aas
clc
out
in
xor
scas
clc
xor
cmp
dec
pop
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
pop
jl
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
push
pop
xchg
adc
sbb
cmp
xor
ljmp
cmp
ds
fidivrl
jmp
incl
xor
mov
ss
ss
xchg
cmp
aaa
cld
jmp
cmp
iret
cmp
mov
cmp
cmp
cmp
outsl
xchg
test
cmp
cmp
cmp
cmp
cmp
cmp
lcall
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
shll
and
xor
incb
xor
xor
xor
fisubrl
xor
decl
loop
xor
xor
xor
mov
xor
xor
jmp
shlb
ss
add
or
mov
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jg
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
lcall
jg
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
decl
decl
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
jg
mov
cmp
bnd
adc
sub
xor
incl
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ja
cmp
inc
cmp
pop
cmp
mov
call
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
test
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jp
repz
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
lahf
das
mov
and
sub
cmp
jb
mov
xor
xor
xor
out
cli
pushl
xor
xor
xor
mov
jl
cmpsl
xor
xor
aaa
loopne
add
lcall
xor
scas
jg
xor
xor
mov
ret
aaa
xchg
aaa
fwait
sahf
mov
scas
scas
cmpsb
mov
bound
scas
cmp
push
cwtl
scas
jp
cmp
fdivrl
aaa
cmp
ret
imul
cmp
mov
jmp
mov
cmp
cmp
cmp
sbb
xor
or
lcall
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ljmp
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
and
pcmpeqd
out
sbb
movsl
or
ja
lahf
xor
xchg
aas
push
mov
pop
cld
inc
xor
mov
xor
xor
xor
icebp
ss
ss
fiadds
aaa
ret
loopne
jmp
repnz
or
cmp
pop
cmp
aas
std
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
fdivrs
push
aas
das
cmp
mov
or
sub
decl
xor
xor
xor
dec
or
sbb
scas
repnz
aas
xor
divl
pop
xor
call
adc
es
dec
ss
outsb
notb
mov
enter
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
mov
imul
cmp
test
mov
mov
cmp
cmp
dec
cmp
cmp
ljmp
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
mov
cmp
inc
cmp
orb
cmc
decl
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
or
jo
addr16
loope
rol
mov
xor
xor
pop
xor
xor
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
pushl
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
jg
decb
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
loope
sarb
cmp
cmp
adc
jbe
cmpl
push
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
icebp
adc
sub
jne
jmp
jl
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
mov
xor
xor
ljmp
jbe
loopne
adc
adc
pushl
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
int
sahf
or
push
lock
out
xor
cmp
cmp
aaa
into
cmp
inc
inc
xchg
or
xor
xor
lcall
decb
lods
xor
int3
mov
std
mov
test
lods
xor
fwait
push
clc
jg
int3
xor
cmp
sub
sub
xor
cmp
pop
loop
incl
inc
cmp
dec
cmp
push
rcrb
cmp
jg
or
fidivs
cmp
cmp
or
lahf
pop
test
push
rcr
cmp
aad
clc
sub
fdivl
jge
jne
lock
dec
cld
push
add
or
adc
clc
das
pop
pop
stos
sbb
and
and
sub
sub
xor
aas
incb
fidivrs
inc
cmp
cmp
pop
loopne
jecxz
cmp
cmp
insb
cmp
je
jl
addb
ret
push
mov
nop
xchg
cwtl
filds
mov
aas
inc
mov
push
aas
push
aas
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
dec
mov
push
or
xor
xchg
mov
mov
xor
inc
xor
xor
sub
cwtl
xor
xor
xor
xor
cmpsb
cmp
xor
mov
insb
dec
jecxz
jb
inc
xor
andb
add
fwait
in
and
or
or
ss
call
lcall
aam
fdivs
fdivl
loopne
in
call
ss
ss
decl
lock
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
sar
inc
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
mov
pop
std
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
outsb
shlb
aaa
cwtl
into
mov
dec
mov
mov
jg
xor
enter
shlb
aam
fdivs
fmull
in
out
aaa
hlt
jl
cs
xor
aaa
hlt
add
or
adc
adc
sbb
mov
add
cmp
fdivrl
call
mov
cmp
pop
aas
std
pop
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
cmp
ljmp
cmp
jl
test
decl
cmp
movsb
cmp
mov
mov
mov
cmp
test
inc
mov
imul
push
sar
movsl
movsb
fs
lret
div
ret
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
jg
jl
aaa
stos
mov
push
lret
aaa
ljmp
gs
jne
aas
push
aaa
mov
xchg
add
xchg
data16
dec
and
addb
jns
or
outsb
icebp
add
add
push
sarb
push
sbbl
sub
test
out
addb
nop
add
push
xchg
sub
sub
adcl
mull
sbb
or
add
or
rorb
pop
mov
mov
jmp
cltd
cmpsb
dec
repz
out
add
mov
daa
notb
add
push
sub
lcall
or
ret
ret
out
movsb
scas
aas
nop
das
es
gs
inc
xor
adc
push
gs
insb
or
and
movsb
subb
push
sbb
imul
pushf
dec
or
adc
out
movsb
jno
sbb
call
add
inc
call
std
std
xor
jbe
cmp
xchg
mov
jae
xor
inc
lods
bound
jle
cld
xor
jl
or
incl
jb
hlt
pop
and
mov
sub
dec
xor
adc
adc
add
pushf
xchg
test
xchg
mov
or
std
incb
shl
leave
jbe
call
jo
in
es
xor
in
pop
mov
add
sbb
mov
test
je
mov
sbb
pop
lret
lahf
jp
sbb
fwait
aam
loopne
and
or
sbb
jge
or
inc
fnsave
loop
push
mov
mov
xor
in
pop
popa
leave
orb
mov
mov
push
inc
ret
shrb
or
pop
and
add
pop
push
nop
dec
sbbl
loope
jae
arpl
pop
std
sub
jo
sahf
add
lret
popf
sub
mov
movsl
and
and
cmp
jne
testb
test
sbb
jmp
push
cmp
es
push
call
repz
dec
mov
lcall
mov
or
rcll
add
insl
dec
divb
cltd
adc
dec
test
add
dec
add
adc
cmpsb
xor
pop
add
mov
or
or
inc
test
dec
test
popa
lret
inc
loop
sbb
adc
jbe
dec
adc
xchg
pop
fldl
mov
push
dec
cmp
jo
pop
xor
popa
aas
lea
sbb
call
mov
pop
fsubl
cmp
or
sub
mov
xchg
test
pop
ret
mov
xchg
jo
xor
lods
movsl
xchg
xorb
lret
xchg
and
cmp
scas
add
adc
loope
adc
dec
push
xchg
fisubrl
js
jecxz
pop
add
sbb
push
stos
sbb
fimuls
and
mov
jecxz
add
mov
add
je
xor
push
and
add
xor
jne
aad
pop
add
mov
pusha
adc
cmp
insb
or
dec
sti
add
inc
imul
sub
pop
xchg
mov
or
inc
or
add
mov
adc
mov
sbb
int3
add
push
cmpb
push
ror
inc
sub
jo,pn
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
and
sub
push
mov
mov
rol
xchg
iret
popa
test
enter
stos
or
adc
adc
dec
sarb
mov
cwtl
repnz
dec
sarb
adc
fcoms
testl
out
cmp
mov
inc
push
movsb
mov
cmp
inc
lahf
cmpsl
daa
and
addl
inc
mov
outsl
inc
push
test
push
jle
mov
aad
in
mov
mov
in
dec
mov
xchg
pop
aaa
mov
sub
or
cmp
stos
lods
add
cmpsl
ret
inc
pop
push
scas
mov
stos
mov
add
aas
mov
mov
loopne
xchg
lods
jnp
lods
cmp
inc
cmp
inc
bound
or
sub
mov
mov
mov
adc
mov
repnz
push
sbb
inc
push
dec
xchg
sbb
rol
adc
imul
in
pop
cli
sbb
xchg
stc
and
push
std
pop
or
and
xor
add
mov
or
sub
sub
fucomip
dec
call
call
or
jbe
inc
mov
aaa
mov
and
inc
rolb
push
dec
push
cmp
popa
or
dec
adc
push
cwtl
fstl
pop
push
and
popf
or
cmp
push
lret
mov
call
es
add
fsubrl
xchg
sbb
mov
sbb
mov
sbb
pop
mov
push
add
mov
xorl
add
and
sbb
sub
sub
gs
fwait
stc
add
lea
sbb
push
push
sbb
sbbl
push
add
movsl
jg
gs
mov
sub
das
mov
fistps
or
mov
mov
add
cmp
or
push
sbb
and
repnz
add
push
or
mov
sbb
sbb
adc
cmp
add
add
inc
fimull
jne
mov
orb
mov
xor
mov
add
add
push
adc
fldt
sbbb
and
fdivl
insb
push
or
inc
out
sub
fistpl
xor
jp
cmp
or
ja
ret
xor
mov
pop
inc
insb
mov
sub
lret
push
fcomp
mov
fisubl
inc
cmp
or
sbb
pop
nop
and
fwait
popf
cmp
movsb
and
cmp
mov
nop
push
and
es
add
sbb
pop
addr16
addr16
mov
pop
sub
xchg
cmp
jnp
je
insb
fs
push
dec
lret
dec
inc
addr16
jmp
out
mov
addr16
dec
adc
add
jg
fsubrp
outsb
xor
pop
nop
inc
push
fs
mov
pop
pop
add
addr16
sub
mov
jns
shl
call
mov
repz
or
and
and
push
addr16
cmp
xor
jnp
inc
push
push
push
xlat
or
add
xlat
mov
cltd
jle
mov
stc
loopne
rolb
xor
add
sbb
push
cltd
and
mov
nop
cltd
mov
or
hlt
addr16
sub
shll
orb
xchg
push
stc
adc
inc
push
call
test
cs
mov
pop
or
leave
xchg
push
leave
repz
mov
lcall
add
daa
dec
cmpsl
xor
inc
es
sbb
iret
enter
daa
daa
es
shlb
daa
daa
lret
inc
xor
daa
daa
lcall
daa
daa
daa
sbb
movsb
imul
dec
push
daa
daa
daa
daa
inc
enter
sub
xchg
cmpsb
jns
sub
sub
inc
xchg
sub
dec
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
adc
movsb
sub
dec
testb
cmp
and
push
or
sbb
adc
or
add
jne
sub
and
mov
add
inc
stos
cltd
mov
psubb
and
adc
xor
push
rcrb
sbb
pop
cmc
push
lock
push
jp
or
clc
fs
dec
sbb
cmp
sbb
and
push
test
nop
subb
psubsb
cwtl
inc
xchg
outsb
test
jo
orb
inc
push
sub
push
test
and
mov
jge
mov
xchg
adc
pop
mov
sub
orl
jle
or
pop
es
mov
inc
ja
call
cvtps2pi
pop
mov
or
addr16
fldl
sub
and
out
push
add
xchg
push
or
or
stc
sbb
loopne
fs
adcb
or
daa
adc
daa
adc
adc
ret
call
dec
jae
add
mov
movsb
cmp
add
adc
add
repnz
sub
pop
add
mov
dec
and
into
or
cltd
sub
jno
dec
mov
mov
imulb
cltd
xchg
mov
nop
clc
ret
pop
cltd
cwtl
pop
push
call
or
cwtl
lret
cmp
inc
mov
inc
fdivl
cltd
fs
shlb
outsl
cltd
mov
dec
pushf
ss
xor
cltd
xchg
outsb
or
cwtl
pop
mov
xorb
add
xchg
sub
and
mov
test
or
add
sbb
test
pusha
and
mov
cltd
repnz
adc
adcb
inc
cmp
pop
xor
xor
sub
xor
xchg
cmp
adc
inc
push
pop
aam
pop
adc
pop
adc
sub
adc
test
push
imul
push
cmpsl
in
xchg
jmp
outsb
adc
dec
adc
aam
or
pop
ss
test
jb
adc
add
mov
enter
xchg
push
in
add
adc
push
adc
mov
imul
dec
mov
in
xor
imul
inc
or
adc
stos
inc
fstl
adc
adc
out
movsl
adc
pop
loopne
dec
xor
nop
and
popa
fsubrs
mov
fldenv
fidivs
push
movsl
adc
inc
call
jl
inc
cmp
inc
adc
leave
inc
pop
and
stos
rclb
fldl
pusha
adc
call
sub
ss
outsb
push
movsl
adc
pop
adc
mov
loope
cwtl
sub
stos
pop
jmp
and
push
jne
dec
adc
adc
addl
ss
es
xchg
push
adc
mov
xchg
adc
xchg
push
daa
or
pop
or
test
nop
dec
pushf
pop
adc
icebp
and
and
push
mov
rcrb
adc
fstpl
rorb
mov
mov
cs
clc
in
push
add
mov
loop
pop
pop
pop
add
push
mov
or
and
lods
sbbb
movsb
fwait
and
cmpsb
xorb
les
add
and
adc
pop
push
pop
nop
fidivs
popa
mov
inc
andl
ret
js
jae
pop
xchg
pop
push
sub
sub
push
add
pop
loope
adc
into
sti
sub
not
mov
lret
pop
mov
inc
xor
movsl
hlt
pop
xchg
cltd
mov
xor
mov
pop
mov
inc
shr
sub
pop
cmp
leave
repnz
mov
fstpl
push
pop
adc
into
call
mov
dec
adc
fnstcw
outsl
adc
fdivs
lds
pop
jmp
loop
lea
or
movsb
jne
pop
call
addl
pushf
sbb
sbbb
mov
sbb
and
addb
jne
cmp
leave
sbb
iret
imul
mov
dec
jno
cmp
dec
cmc
xchg
mov
mov
nop
andl
aas
lock
jl
fs
xor
pop
inc
stos
add
pop
out
jmp
push
addb
outsl
cmp
xor
stos
adcl
lahf
xor
cmp
xchg
adc
add
xlat
push
cmpb
aas
inc
and
stos
add
inc
cmpsb
cmpsl
pcmpgtd
pop
fstpl
frstor
loop
in
int3
pop
int3
fsubl
mov
push
aas
push
call
push
cs
pop
or
mov
loopne
int3
pop
dec
repnz
push
inc
fdivl
fdivl
fwait
pop
or
sub
lret
call
or
mov
add
lret
pop
mov
or
mov
adc
push
mov
cmpsl
sub
mov
out
out
inc
enter
sub
dec
cs
lods
mov
leave
inc
arpl
xor
ret
pop
or
les
inc
sbb
frstor
add
or
loopne
leave
repnz
je
fs
adc
dec
enter
pushf
fisttpll
push
dec
test
sbb
test
movb
repnz
mov
mov
push
inc
nop
daa
in
lea
or
rcl
sub
sub
shr
in
sbbb
daa
xchg
je
and
pusha
sub
cmp
fmul
mov
mov
mov
cmp
and
cltd
and
sub
push
inc
jecxz
cltd
push
iret
les
cmp
push
jp
lea
xchg
inc
mov
fcoml
icebp
push
adc
and
lea
mov
push
stc
cltd
mov
push
cld
lods
push
xor
push
inc
jmp
mov
cltd
in
shll
cltd
adc
xchg
and
sub
cmp
cwtl
test
inc
dec
leave
mov
mov
jb
mov
ljmp
nop
daa
scas
inc
mov
fdivr
loope
or
and
adc
lahf
mov
arpl
jle
add
xchg
xchg
sbb
mov
repz
repnz
add
sub
dec
je
sbb
adc
pop
push
daa
inc
gs
and
shlb
sub
enter
and
stos
inc
push
les
dec
lea
daa
push
rcrb
es
adc
call
inc
enter
dec
mov
ret
sbb
sub
shrl
add
sti
and
stos
fcomi
jmp
add
ret
mov
scas
pop
jnp
dec
cmp
pop
hlt
je
inc
sub
jge
loopne
pop
push
out
mov
mov
adc
test
rcll
andb
loopne
sbb
xchg
inc
push
lret
icebp
push
xchg
inc
mov
stos
inc
adc
and
sbb
jge
inc
jl
jl
ret
sub
mov
and
inc
jno
mov
and
mov
push
popa
pop
pushf
inc
pop
adc
xchg
xor
add
enter
or
jns
mov
jmp
nop
push
js
xor
int
fdivrl
jne
xchg
pop
push
roll
and
pusha
or
push
or
test
adc
push
fistps
add
es
and
jecxz
adc
xchg
fcmovb
imul
pop
das
lods
xchg
push
xor
ss
adc
scas
mov
xor
sbb
hlt
xchg
pushf
mov
les
xchg
fdivl
daa
mov
xchg
or
mov
ss
adc
or
push
xchg
es
aam
sub
aam
sahf
insl
loop
adc
cmp
inc
xchg
lret
fxch
and
aam
pushf
stos
in
fldcw
dec
insl
roll
mov
dec
insl
xchg
or
cmc
rclb
or
xchg
add
repnz
push
add
addb
je
mov
fimull
and
sub
dec
mov
ficoml
xchg
movsl
fwait
ss
je
xchg
cwtl
sub
inc
push
inc
xchg
rol
in
fwait
inc
and
mov
mov
xchg
mov
dec
mov
xchg
mov
push
add
ljmp
movsl
xchg
mov
or
dec
pop
mov
sub
sub
xor
mov
xchg
pop
jp
sub
or
jmp
mov
mov
mov
xchg
loopne
add
and
and
leave
mov
fs
lret
or
xchg
test
push
mov
jne
and
shrl
lea
outsb
shll
fcoml
cmpsl
lret
int
inc
into
sub
adc
push
gs
stos
pusha
add
ds
fldcw
mov
aaa
mov
loope
push
and
mov
aam
repnz
leave
call
adc
push
int
mov
jb
pop
fdiv
leave
sbb
das
push
in
mov
mov
pop
lea
out
push
cmpsl
lods
xchg
pushf
inc
sbb
cmp
jb
inc
xorl
dec
xchg
rcll
aas
mov
lcall
inc
fildl
lcall
in
fistl
push
or
fildl
xchg
mov
adc
and
inc
pop
andb
testb
lds
aad
cmp
enter
enter
push
orl
outsb
fildl
ret
in
add
loop
push
cmpb
sub
mov
iret
leave
mov
ret
dec
or
pop
and
fisttpl
and
lret
push
push
adcb
and
push
pop
loopne
sub
mov
test
je
fisttpl
adc
pusha
sub
mov
out
fidivrl
inc
or
cmpsb
lods
sub
add
test
fdivs
xlat
out
loopne
aaa
out
jns
adc
jl
jno
rcrl
fildl
fldt
call
pop
call
jecxz
aam
test
inc
dec
or
lods
fisttpl
faddl
xchg
add
ja
cmp
jle
dec
or
test
rolb
xchg
cmpsb
mov
outsb
daa
imul
lods
add
mov
or
icebp
adc
fucomip
in
and
sar
cmp
mov
leave
bound
cmp
repnz
jns
inc
lret
mov
and
dec
pop
mov
mov
and
or
add
in
mov
in
fdivrl
pop
jns
jns
mov
test
das
mov
mov
das
das
cmpl
das
das
popa
mov
dec
mov
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
sbbl
mov
stos
mov
lahf
mov
sbb
and
mov
nop
sbbl
mov
enter
cs
in
sbb
push
jb
mov
and
mov
nop
sbbl
mov
enter
pushf
mov
in
pop
cmp
jo
gs
pop
mov
cmp
inc
push
cmp
in
pop
sbb
jb
xor
jmp
inc
enter
inc
in
in
mov
and
daa
int
sahf
or
mov
adc
jp
mov
das
add
xor
mov
dec
sbb
adc
adc
daa
int
xor
push
sbb
mov
enter
cli
mov
and
int
and
cmp
jb
mov
enter
inc
mov
and
mov
dec
jl
sahf
xor
mov
add
nop
jo
rolb
add
dec
mov
subb
inc
in
adc
xchg
xor
inc
adc
shr
test
adc
rol
rolb
cmpsl
in
sbb
stc
jb
dec
repnz
cmp
popl
jmp
sub
push
pusha
jmp
add
mov
ret
push
repnz
mov
mov
inc
sti
testl
pop
icebp
sbb
fdivrs
adc
mov
shlb
pop
rcl
mov
jg
mov
push
and
inc
lds
push
jbe
add
cmp
push
push
mov
rcrl
punpckhbw
leave
rol
dec
into
inc
or
rsm
loope
push
xchg
shrb
es
pinsrw
aaa
arpl
hlt
add
hlt
paddusb
inc
les
dec
bswap
inc
pop
adc
and
lret
and
mov
rcrb
xor
pusha
xor
rcl
sub
mov
jbe
push
xchg
or
and
xchg
dec
cwtl
test
jmp
pop
sarl
xchg
outsb
sbb
push
sbb
mov
pop
mov
dec
lret
inc
pop
push
xchg
out
xor
lret
mov
xor
xor
int3
pop
xor
sub
jo
adc
sbb
fsubl
andb
js
add
js
jmp
xchg
jne
and
xchg
mov
push
xchg
or
sub
int3
dec
mov
cmp
test
or
inc
sub
mov
and
push
xchg
mov
sbb
dec
movsb
movsl
sub
push
lcall
adc
mov
es
mov
adcb
test
mov
or
mov
and
sbb
adc
sarb
gs
pop
sbb
into
movsl
sub
inc
mov
and
jbe
aam
test
jo
scas
push
mov
sub
lcall
mov
sub
scas
dec
jge
push
lret
js
insl
pop
push
lret
or
lret
fmull
fimuls
add
js
cld
fsubr
test
xchg
fcoml
ja
clc
push
call
notl
fcompp
dec
lds
adc
movsl
or
out
xchg
or
jns
out
test
movsl
or
pop
lret
and
jnp
sub
xchg
or
rcrb
dec
or
mov
push
ret
adc
je
xchg
or
mov
out
adc
adc
or
pop
or
xchg
sbb
xchg
mov
pop
mov
push
ds
js
sub
xchg
or
shr
dec
push
or
and
rclb
sub
arpl
pop
mov
movsl
aad
push
adcb
or
or
popa
push
xor
sub
icebp
fwait
and
lret
xor
xchg
xchg
fnstenv
mov
mov
rcr
sub
js
je
stos
xchg
movsl
pause
imul
mov
push
inc
rcrb
popa
das
or
sub
out
movsl
sub
or
xchg
or
or
sahf
shlb
jmp
std
push
sbb
sub
or
xchg
sahf
cmpsb
dec
or
push
aad
add
in
xchg
xor
adc
dec
and
xor
outsb
adcb
push
push
mov
sbb
sub
and
mov
mov
stos
cmc
or
gs
mov
add
or
ja
sbb
mov
gs
and
dec
pop
mov
gs
je
mov
sub
and
push
push
lret
shrb
movsl
sub
mov
xor
mov
or
ret
push
lret
sbb
scas
push
or
or
or
push
call
sbb
and
stos
xchg
movsl
or
sahf
jmp
mov
repz
push
test
cmp
bound
sub
pop
loop
cmp
call
inc
dec
pop
or
inc
sub
stos
or
adc
ficomps
mov
sub
movsb
js
push
xchg
mov
sub
gs
cmpsl
xor
sub
dec
dec
scas
or
repnz
or
xchg
adc
mov
adc
data16
or
or
push
xchg
scas
movsl
or
add
lahf
loope
cs
adc
les
push
or
out
pop
movsl
sub
mov
jb
in
xchg
push
cmp
jg
sbb
mov
pop
pop
sub
sbb
pop
fldl
sub
xlat
inc
inc
sub
cmp
loope
mov
in
sbb
shlb
xchg
test
cmp
aaa
xchg
out
test
push
aaa
adcb
inc
inc
push
orb
jnp
cli
lods
mov
mov
in
das
nop
mov
adc
mov
mov
lcall
xor
push
pop
ds
mov
in
xor
lock
mov
push
xor
test
push
cltd
inc
pop
push
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
and
fnstcw
mov
ds
adc
loopne
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
adc
inc
ja
pop
cmpsb
add
ret
lods
push
adc
and
xchg
aad
pop
mov
push
lea
ret
or
add
out
mulb
sbb
push
push
mov
repz
mov
cmc
add
repz
clc
mov
mov
inc
adc
iret
mov
xchg
adc
add
push
pop
add
mov
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
int
xchg
out
test
push
pop
sahf
mov
and
pop
cmpb
ds
repz
jp
cmp
hlt
call
and
lcall
mov
or
enter
outsl
enter
test
add
sahf
out
add
and
out
adc
add
xchg
in
repz
repz
fcom
int3
iret
repz
enter
mov
cmp
movsb
mov
iret
repz
nop
mov
iret
cmpb
insb
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
nop
jns
out
fmul
test
push
dec
sub
pop
iret
repz
movsb
jl
push
dec
inc
lcall
cld
mov
jns
out
shlb
cmp
out
lock
int3
test
jge
xchg
push
xor
jg
push
add
lock
es
mov
inc
sub
push
pop
sub
push
xchg
or
mov
decl
aaa
xor
push
push
add
and
xor
xor
test
aam
push
mov
sbb
inc
aaa
shlb
add
pop
jbe
or
and
out
shlb
mov
push
xchg
and
dec
shlb
xchg
mov
add
or
inc
out
xlat
testb
das
inc
add
dec
mov
iret
test
mov
mov
jg
pop
cmpb
mov
ss
pop
shll
add
int
jbe
add
mov
testb
rorl
xchg
aas
test
andb
shrl
aaa
inc
pop
xchg
inc
in
sbb
dec
xchg
bound
pop
scas
inc
fists
dec
pushf
mov
aas
fld
or
fldl
inc
jg
shll
dec
pop
xor
aas
inc
es
sti
push
int3
rcr
repnz
push
andb
fsubl
dec
fstpl
dec
mov
arpl
and
popa
mov
add
movnti
imul
cmp
inc
mov
pushf
add
push
xor
insb
cmp
icebp
int
xor
cmp
pop
stos
outsb
cs
scas
outsb
lahf
inc
outsl
ds
outsl
jl
out
gs
push
and
mov
and
pop
leave
rolb
imul
mulb
sub
push
adc
scas
mov
mov
outsl
jne
notb
imul
dec
mov
push
outsl
and
jb
arpl
xchg
insl
sub
inc
inc
arpl
lret
inc
mov
inc
sbb
sbb
outsl
gs
sbb
bound
and
sbb
stos
pop
sbb
xor
lods
lcall
shrb
fwait
dec
add
jo
fldt
dec
mov
and
mov
mov
xor
add
push
push
adc
cmp
push
ja
jne
pop
xor
roll
rcrb
aam
mov
int
push
add
xchg
lea
arpl
mov
add
mov
pop
xor
add
add
rcrb
inc
arpl
shll
roll
shll
inc
inc
and
sbb
sti
jno
sbb
lahf
arpl
rcrl
lds
out
rorl
lea
add
inc
adc
pop
pop
push
imul
mov
inc
cmp
push
aaa
add
ja
xchg
mov
push
add
mov
stos
addr16
xor
xor
cmpsb
pop
push
pop
inc
xchg
iret
repz
movsb
xchg
jle
pushf
cwtl
xchg
cmp
repz
mov
repz
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
inc
ss
out
add
xchg
hlt
xchg
in
out
sahf
testl
enter
jns
mov
test
mov
xchg
jno
je
insb
lret
out
fs
push
dec
mov
ja
out
push
and
add
in
xchg
push
sahf
out
sahf
enter
test
jnp
out
cwtl
nop
mov
cmp
jo
pop
inc
cmp
push
adc
lock
loopne
iret
repz
mov
xor
rep
pop
outsl
insb
or
out
pop
xchg
adc
or
je
sub
push
cwtl
and
xor
mov
pop
adc
push
jne
addb
or
cs
adc
cmp
pop
push
pop
push
sub
clc
mov
jge
test
enter
cmp
inc
jbe
outsb
mov
lcall
xor
mov
aas
pop
or
aas
inc
add
stos
xchg
incl
mov
jns
rolb
shr
arpl
mov
inc
adc
inc
xor
rcr
xor
xor
cmpsb
dec
clc
decl
cmp
ss
ss
nop
ss
ss
aaa
shrl
ss
ret
sub
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
ret
xchg
lret
cmp
int
sarl
fidivrs
and
cmp
clc
mov
cmpl
adc
xor
cmp
cmp
aaa
ret
ds
ds
ds
fdivr
mov
icebp
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
outsl
mov
into
push
data16
jbe
adc
jnp
cmpl
movsb
aas
mov
sarl
div
inc
fnstsw
dec
add
jl
xchg
cmpsb
mov
xor
mov
xor
pop
add
inc
xor
inc
add
xor
xor
faddl
add
mov
cmp
xor
inc
add
fdivr
data16
dec
xor
xor
xor
xor
jecxz
incl
xor
xor
xor
xor
xor
dec
cmp
mov
ss
mov
ss
pushl
sbb
mov
sbb
push
add
sub
das
out
xchg
in
cmp
add
pop
cmp
xorb
xor
das
or
cmp
xor
xor
cmp
cmp
sarl
pop
cmp
or
pop
push
outsl
cmp
mov
xor
inc
fisubs
cmp
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
xor
stos
pusha
outsb
ja
jle
test
inc
incl
cmp
cld
cmp
push
ds
and
xchg
cs
jg
loopne
cwtl
xchg
xor
xor
loope
jnp
test
xchg
xor
push
xor
dec
decl
shll
xor
xor
xor
xor
mov
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
pop
mov
xorl
ss
ss
or
scas
xorb
jecxz
clc
ss
ss
aaa
or
fbld
jecxz
push
push
xor
aaa
addr16
sarb
dec
adc
cmp
xchg
jno
push
sbb
pop
jno
mov
cmpsb
test
mov
cmp
add
outsl
xchg
push
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
decl
or
cmp
jle
xchg
sbb
jecxz
cmp
cmp
fcmovb
cmp
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
and
fs
cltd
xor
insl
pop
shrl
xchg
mov
outsb
inc
arpl
sbb
aas
mov
dec
fadd
js
arpl
xor
into
xor
pusha
xor
push
jp
xor
xor
call
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
sbb
fnsave
push
or
cmp
insb
jecxz
out
and
xor
xor
adc
push
cld
aad
or
push
ss
arpl
stos
add
ss
ss
jecxz
sub
xor
aaa
jne
jle
pop
pop
add
or
sbb
sub
and
cmp
cmp
incl
cmp
cmp
cmp
aaa
or
cmp
cmp
test
arpl
outsb
sbb
xchg
ret
fnstsw
fildll
lods
inc
out
ds
or
cmp
lret
mov
pop
insl
adc
fbstp
divb
data16
aas
jne
mov
xor
xor
xor
xor
and
xor
xor
pushl
adc
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
sbb
ficomps
adc
imul
data16
aaa
leave
test
jb
loop
cmp
hlt
lock
cmp
push
cmp
mov
jmp
std
cmp
xlat
and
ds
imul
xchg
mov
adc
lods
cmp
or
sbb
mov
mov
cld
xor
or
out
sub
cmp
cmp
cmp
dec
cmp
pop
cmp
lahf
sub
aas
cld
pop
xor
xor
xor
xor
xchg
testb
test
or
pop
dec
es
xor
mov
jp
add
adc
aaa
arpl
pop
pusha
out
jmp
adc
sbb
mov
sbb
xorb
or
ret
jle
xor
cmp
insb
jb
daa
mov
push
bound
mov
lods
ret
rcll
dec
int3
xor
popa
je
fdivrl
in
je
jecxz
xor
cmp
push
int3
inc
xor
clc
mov
insb
jb
sbb
gs
jl
mov
cmpsb
test
mov
rol
scas
mov
sub
jecxz
fsubrp
out
xor
or
adc
adc
sbb
sbb
loopne
sbb
xor
mov
cmp
inc
xor
inc
aaa
xor
push
xchg
pop
xor
xor
xor
sub
je
jl
clc
mov
mov
mov
nop
xor
iret
xor
cli
xchg
mov
xor
call
xor
inc
add
xor
ss
js
ret
adc
jbe
xor
aam
push
cmp
push
xor
fs
or
ja
mov
mov
cmp
cmpb
dec
add
xor
stos
fmull
pop
mov
daa
cwtl
out
shl
ljmp
sub
mov
or
insb
xor
xor
xor
xor
xor
jge
inc
xorl
mov
shlb
cld
hlt
aas
ficoml
pop
xor
xorb
xchg
sbb
aad
sbb
jmp
addb
call
xor
clc
lock
xor
inc
add
loop
jg
or
push
sbb
xor
mov
std
or
cmp
inc
xor
xor
xor
push
xor
pop
xor
incl
jo
je
js
jl
andb
xor
push
scas
pushf
xor
xor
xor
xor
xor
xor
pusha
jo
shll
shlb
int3
ficoml
sub
mov
xor
jno
add
jp
sub
sbb
ljmp
fcmovnbe
adcb
sbb
or
push
decl
fdivr
add
inc
pop
andb
pusha
scas
xor
cwtl
add
add
fstpt
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
loop
adc
inc
add
add
inc
mov
adc
add
mov
add
inc
mov
mov
add
jge
incl
dec
cmpsb
add
push
adc
pop
and
xor
jmp
rcll
bound
js
leave
nop
pushf
dec
xor
and
inc
sbbl
or
xchg
mov
dec
popa
adc
xchg
xchg
xchg
and
adcb
pop
rcrl
popa
add
inc
sub
pop
adc
incl
inc
adc
push
adc
pop
popa
jno
and
or
or
mov
or
xor
adc
shrl
icebp
mov
add
mov
push
xor
or
aad
add
js
jo
cld
pop
adc
or
add
lds
cld
cli
and
mov
pushl
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
outsl
cs
movsl
jecxz
cli
pop
mov
stc
or
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
cmpsb
lcall
leave
mov
jp
push
out
or
fadd
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
cltd
clc
fadd
or
mov
nop
enter
loop
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
push
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
incl
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
mov
std
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubrl
add
fisubl
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
ljmp
dec
adc
lahf
mov
or
out
lcall
fistpll
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
sbb
lock
or
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovu
dec
cld
inc
inc
adc
inc
loopne
test
out
rolb
pop
or
cli
loop
cld
or
dec
ss
lods
movsb
ret
call
fimuls
repnz
mov
jl
inc
lock
call
cmpsl
lret
fwait
stos
jle
pop
in
cmp
jmp
mov
mov
mov
jmp
hlt
dec
mov
xlat
fdiv
jg
inc
aas
mov
jg
mov
sub
addr16
incl
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
cmc
mov
jg
ja
nop
cmp
das
incb
lock
pop
pop
div
add
push
loop
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
adc
je
jge
xchg
mov
xchg
add
out
icebp
mov
loope
mov
pop
and
sbb
fbstp
test
daa
outsl
mov
jge
out
or
cmpsb
cmp
call
xor
decb
fdiv
pop
push
adc
mov
and
shrl
call
popf
dec
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
push
xor
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
jmp
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
std
inc
inc
mov
in
sbb
xchg
imul
clc
pop
inc
mov
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xor
push
inc
in
adcb
add
int
or
inc
add
nop
cltd
dec
push
push
nop
mov
fwait
rorb
popf
test
and
add
push
pop
jle
daa
jne
ljmp
repnz
or
fldt
fisubs
mov
and
js
repz
cmpsl
out
xor
and
rorl
add
incl
xor
sub
fisttpll
bnd
shlb
arpl
push
mov
mov
jmp
out
rcll
ss
aad
xchg
xor
adc
cli
adc
sbb
jp
jge
hlt
lcall
xor
xchg
fbstp
mov
jmp
gs
ljmp
cmp
pop
cmpb
in
into
mov
push
pop
xchg
sbb
mov
enter
mov
fisubrs
push
jg
xchg
jmp
push
inc
jno
ja
add
adc
pop
data16
frstor
mov
or
mov
call
lea
in
stc
je
push
cli
das
rorl
arpl
xchg
insl
test
jnp
jo
cmpsl
loop
sahf
jmp
push
adc
inc
and
test
stc
addb
jge
or
cmp
xchg
shl
call
fsubs
cltd
pop
pop
inc
jp
cmpsl
es
outsb
mov
jbe
icebp
lds
sub
cmp
pushl
cmc
cmp
mov
ljmp
xchg
jb
inc
shll
pushl
pop
push
scas
inc
fidivrs
xor
and
es
shrb
push
push
adc
adc
cmpsl
push
rcrb
call
cwtl
lock
add
sahf
rcrl
repnz
cmp
in
out
jmp
je
mov
mov
inc
into
and
xchg
mov
neg
subl
pop
lock
scas
js
dec
ret
lret
insb
mov
inc
testb
lods
je
mov
mov
fdivr
push
cld
out
scas
into
imul
fsubrl
icebp
sub
je
rcl
movsb
arpl
dec
imul
sbb
lds
or
imul
mov
aas
and
dec
add
push
and
ffreep
dec
aad
xchg
pop
mov
js
shll
sbb
and
shrb
es
and
jo
dec
sbb
cmp
lahf
xchg
imull
or
shrl
push
rcrb
jb
clc
push
and
shl
ja
outsl
fnstsw
fsubs
lock
jmp
flds
movb
insl
movb
les
mov
push
clc
cld
cmp
nop
fs
incl
jle
dec
cmpl
push
fimull
pop
or
and
rolb
xor
out
cmp
cli
add
dec
pop
add
jnp
dec
sbb
cmp
or
enter
jno
and
mov
jg
pop
aam
lods
sbb
clc
inc
pop
mov
jge
fwait
dec
out
inc
cmp
movsb
aas
mov
ja
sahf
xchg
mov
pushl
mov
hlt
adc
jmp
jp
dec
mov
lock
mov
jp
mov
dec
sub
sar
shrl
push
outsl
in
ret
and
movsb
push
xlat
fildll
fstpt
push
jmp
and
mov
fs
es
fcompl
outsl
jbe
lahf
fwait
mov
std
jp
stos
xlat
nop
mov
std
inc
push
or
roll
in
push
add
stc
push
test
cltd
lcall
mov
jg
pop
lods
mov
pushl
pop
push
and
jbe
inc
out
lea
cmp
lret
mov
dec
mov
loop
loope
loop
arpl
adc
push
sbb
idivl
mov
ljmp
xor
popf
pop
test
int
std
fmull
add
imul
cmp
in
pop
mov
pop
scas
in
mov
leave
push
ret
in
or
push
cmp
pop
call
push
jne
scas
or
popa
imul
pop
rcrb
jno
cmpsl
pop
fimuls
lods
aaa
shr
sub
cmc
sarl
jmp
adc
ja
cltd
insl
pusha
mov
in
nop
mov
pop
lcall
push
mov
pushf
loopne
or
popa
cmpsb
mov
ja
pop
cmpsb
std
mov
incl
aas
lods
xor
das
inc
xchg
cmp
aaa
lea
nop
or
decl
popf
mov
aad
je
out
or
jge
fistps
loop
inc
aas
pop
jnp
mov
addb
mov
mov
mov
xor
jl
je,pt
mov
cmp
ds
pushf
push
dec
or
ret
jl
fisubl
inc
out
stc
fs
roll
sbb
and
rcll
sti
push
rcrb
call
pop
sbb
xchg
mov
ds
mov
fisttps
push
decl
hlt
cmp
clc
add
sbb
xchg
mov
jp
pop
mov
jno
rcrl
push
push
jnp
and
mov
mov
popa
bnd
mov
or
movsb
rcll
inc
dec
cmp
xchg
aas
adc
mov
and
mov
dec
cmpsb
push
lea
pop
xor
lcall
lret
out
mov
call
sbb
inc
jl
hlt
pop
inc
mov
dec
fcom
insb
sub
jmp
cmp
dec
xchg
movsl
xchg
leave
in
movsb
xchg
ljmp
xorb
call
shlb
xor
call
xchg
out
ja
nop
lods
cltd
mov
out
xchg
add
loope
in
pop
mov
mov
jle
add
xchg
jp
sbb
adc
bound
test
inc
ljmp
cli
call
pop
pop
movsb
adc
dec
fisubrl
orl
pop
scas
jmp
jnp
fidivrs
or
pushf
push
jg
in
xor
lcall
js
lea
enter
stos
sbb
andnps
jns
call
xor
push
lret
sbb
in
dec
xchg
cmpsl
ret
inc
jne
insb
iret
movsb
leave
mov
lcall
and
push
jl
aas
add
push
aad
bound
sub
dec
dec
pop
mov
xlat
iret
popa
rclb
sti
or
jmp
mov
jmp
pushl
add
ret
mov
ret
test
mov
jl
cld
mov
sbb
cmp
loop
fiaddl
mov
rolw
xor
pusha
shlb
and
lcall
leave
shlb
pop
pop
popf
add
push
add
xchg
pushf
jne
mov
call
or
ss
mov
push
push
fbstp
sub
loop
enter
decl
into
sbb
xchg
and
add
cmp
ret
jecxz
mov
adc
std
jg
ss
sbb
jle
dec
imull
ljmp
popa
sub
fcomip
fwait
pusha
es
jle
pusha
sbb
je
outsl
outsl
out
fldl
shlb
pop
fstl
inc
scas
aam
aam
xor
mov
cltd
outsb
cmp
decl
push
push
sub
gs
or
rorl
dec
insl
lock
mov
mull
jmp
xchg
jp
imul
inc
pop
adc
scas
icebp
add
inc
mov
jg
xor
repnz
incl
inc
test
mov
or
inc
pushf
das
ficomps
jg
dec
jle
stos
test
dec
in
mov
adc
inc
sub
pushf
inc
xchg
and
xchg
movsl
add
ss
or
mov
pushl
push
adc
imul
icebp
mov
mov
fldenv
decl
jle
add
cmp
sub
pop
fisttps
arpl
inc
das
dec
add
sub
dec
xor
xor
jge
ficompl
dec
subl
fwait
mov
inc
and
ja
pop
xchg
cs
push
jns
leave
jp
pushf
add
pop
insb
jmp
cmp
cmp
dec
or
stc
or
sbb
decl
lret
movsl
dec
mov
adc
push
mov
lret
je
inc
jmp
cmp
fsubrl
daa
mov
sbb
jnp
movsl
push
pop
sbb
dec
int
mov
ret
mov
ret
mov
fmul
int3
call
fldt
incl
xor
fnstenv
sbb
xchg
ja
cmp
cmp
push
push
scas
sub
mov
push
mov
test
lahf
pushf
lods
repnz
lahf
ljmp
mov
push
inc
test
mov
add
lcall
in
xlat
jl
jne
xchg
adc
das
cld
je
popf
movb
mov
test
ljmp
dec
ret
das
xor
pop
or
sbb
aas
sub
mov
push
js
sti
pushf
daa
addr16
ljmp
cmc
add
inc
roll
fwait
lcall
daa
sti
and
or
js
jmp
call
jno
pop
adc
pop
push
mov
adc
stc
scas
inc
sub
fistpll
push
dec
loop
inc
cmpsb
insb
push
pop
mov
dec
push
or
lcall
sbb
jg
js
fsub
pop
js
add
movsl
and
imul
incl
int3
adc
add
mov
scas
jg
shlb
push
out
push
scas
dec
dec
mov
dec
jmp
es
clc
addr16
mov
xorl
push
cmp
arpl
jmp
xchg
std
cmp
mov
add
int3
jmp
sti
es
iret
or
sbb
andps
pop
xor
cld
jo
pop
icebp
ds
lods
xchg
push
pop
hlt
incl
outsb
and
imul
sub
cmp
pushl
imul
rcr
loope
xchg
or
mov
adc
push
testl
call
jl
dec
lret
mov
dec
movsb
int3
hlt
inc
int3
lods
ret
dec
decl
ljmp
popf
xorb
dec
jae
stc
jge
icebp
push
xchg
pushf
xor
test
les
stc
sub
sbb
es
fistpll
lret
out
and
in
lods
add
xor
lock
imul
aas
cmp
sar
mov
mov
int
nop
mov
arpl
and
lock
push
scas
mov
rcrl
mov
out
out
rcr
pop
lds
daa
dec
or
ljmp
jmp
xor
or
int3
es
test
mov
enter
shrl
lcall
in
sbb
clc
div
push
out
in
cltd
mov
cld
out
call
daa
mov
cld
repz
cmp
mov
addl
jmp
cmp
jg
fwait
mov
xor
xchg
add
mov
fwait
inc
push
ljmp
mov
bound
mov
shl
mov
cltd
lcall
fiaddl
test
incl
imul
add
and
jg
mov
lds
scas
cld
in
decl
xchg
repz
movsb
adc
mov
mov
cmp
les
call
jae
fwait
in
hlt
fs
jl
adc
push
cmpsl
xchg
mov
jo
push
inc
or
sar
decl
and
ja
icebp
push
pop
arpl
sahf
jno
subl
ljmp
dec
dec
std
jge
pop
lcall
xor
pop
lcall
loop
adcb
adc
sbb
cmp
sub
jb
jmp
ja
push
jae
xor
jg
jae
ret
sbb
iret
pusha
decl
sar
aaa
and
popa
enter
jnp
in
jecxz,pt
dec
loop
sti
inc
lods
fnop
inc
sahf
call
cmp
push
xchg
jno
ljmp
sub
test
pushf
jno
popa
add
jo
jg
in
inc
fdivrs
fldcw
fists
int3
pop
rol
test
cmp
out
inc
stc
adc
cld
out
ffreep
aad
mov
mov
sahf
mov
sbb
out
xchg
data16
test
call
pusha
ret
les
jno
jmp
insl
jle
lods
jge
xchg
and
mov
fs
pxor
mov
incl
cltd
mov
insb
sar
cltd
sbb
std
sbb
int3
adc
xchg
lcall
mov
mov
int3
mov
pop
inc
add
or
and
cld
pop
mov
mov
incl
inc
ret
or
push
cwtl
in
jnp
movb
push
sub
dec
lcall
call
sbb
movsl
adc
pop
mov
stos
or
jp
inc
insb
int
mov
sti
add
mov
cltd
pop
scas
xchg
mov
inc
adc
and
jno
das
std
lret
mov
aaa
pop
in
decl
jecxz
inc
mov
xor
aas
and
or
inc
push
fcos
jp
xchg
jle
pop
test
mov
mov
xor
dec
les
sbb
pop
loopne
loope
push
sbb
jmp
jecxz
hlt
pop
jnp
test
rolb
pop
or
sbb
inc
pop
push
lea
call
cmpsb
std
mov
mov
lods
cmpsb
sbb
negb
and
xchg
in
pop
mov
jg
insb
cmp
aad
fildll
icebp
mov
stos
pop
jge
push
fidivs
ret
ficompl
incb
xchg
cmp
in
enter
push
insb
push
push
jbe
shll
jg
jg
pop
inc
loopne
adc
xor
dec
push
testb
jno
sbb
stos
push
jno
pushl
and
sbb
loopne
cs
or
fiaddl
in
add
or
mov
jmp
xor
jo
iret
jecxz
mov
pop
or
adc
stos
mov
lret
sbb
inc
mov
cmc
ret
push
stc
jg
xchg
jo
or
mov
sahf
lods
cmpsb
int3
and
test
pop
add
jle
addr16
fisttpl
out
cld
sbb
pop
cmc
jmp
mov
or
add
push
mov
mov
cmp
fldenv
jg
loop
ficomps
cmc
inc
or
ds
inc
cmp
push
add
fisttpll
dec
stc
add
jecxz
lds
xlat
sbb
je
sbb
mov
cmpsb
fucomi
mov
jnp
js
jmp
fsts
pop
cld
adc
cmp
aad
lods
and
ds
inc
pop
ljmp
cmovnp
pop
in
push
jno
sub
mov
sbb
xor
int3
fadd
inc
pushf
cmp
incl
dec
iret
pop
outsl
aas
and
jnp
push
xchg
nop
lret
pop
lods
imul
mov
pop
cmp
popf
mov
loopne
imul
lods
sbb
or
orl
shr
or
xchg
mov
out
inc
cmpsb
sub
incl
jl
jnp
cmp
les
in
add
and
xchg
popa
or
stos
jae
rcrb
decl
mov
sub
push
push
test
rorb
enter
push
lcall
jge
mov
sbb
hlt
fucom
js
out
cld
and
fidivl
mov
push
imul
ret
lahf
popa
jne
sbb
jbe
xchg
ficomps
cmp
jns
and
or
gs
and
dec
call
cmp
insl
jge
or
mov
jno
or
stos
loop
mov
or
test
cmp
adc
insb
cmp
lock
das
cltd
pop
push
or
pop
leave
sbbb
push
cmp
stos
lcall
stos
adc
dec
mov
mov
pop
int
bound
call
add
test
xor
fdivrp
lret
mov
cli
iret
xchg
je
decl
inc
push
cmp
idivl
lods
aam
in
fwait
jb
clc
push
jl
mov
push
sbb
std
dec
inc
les
imul
push
mov
sbb
and
hlt
scas
loope
clc
in
mov
punpckldq
in
pop
out
insb
adc
addr16
dec
ljmp
jg
xlat
jg
adc
ds
jb
push
sbb
jbe
sbb
jl
outsb
and
push
mov
cmp
andb
nop
cmp
jns
adc
js
std
mov
push
mov
clc
incl
xchg
jp
pop
daa
fs
ja
sub
jmp
xor
fwait
push
lcall
decl
loop
stc
or
movsl
cmpl
mov
test
push
adc
jge
sbb
into
dec
sub
or
push
dec
aad
and
mov
push
test
out
in
lock
loopne
pop
lret
mov
out
rclb
mov
jnp
push
call
daa
jbe
cmpsl
push
nop
pushl
cmp
add
stc
mov
pause
into
inc
jo
jmp
jb
pop
movsb
xchg
push
inc
out
inc
ret
and
incb
cmp
imul
out
mov
xchg
popa
shlb
cmpsl
lcall
sbb
div
lods
cmp
add
push
jle
adc
jmp
cmc
fs
rcrb
ds
inc
add
push
mov
mov
jecxz
adc
mov
es
aas
mov
into
jmp
sub
sbb
cld
lret
adc
push
pop
inc
xchg
aaa
mov
sti
pusha
add
sub
pop
push
out
mov
lea
call
sub
cmp
addb
into
xchg
sbbb
cld
es
call
std
pop
push
call
cld
push
popa
dec
out
pop
dec
dec
cmp
scas
out
leave
or
push
jecxz
add
popf
cmp
cltd
or
xor
mov
xchg
xchg
mov
scas
mov
imul
inc
jnp
out
dec
outsb
push
dec
mov
jb
inc
jmp
adc
arpl
aaa
cmc
stos
mov
call
movsb
scas
scas
push
in
scas
jg
adc
jg
pop
adc
pop
dec
lret
xchg
jle
jns
repnz
cltd
sub
call
out
lock
das
ret
inc
enter
ja
xchg
mov
clc
inc
adc
pop
pop
hlt
std
jnp
idivl
mov
rcl
in
pop
sahf
fisubrs
imul
inc
push
adc
out
jmp
mov
incl
ds
pushl
lahf
lahf
xchg
inc
pushf
rcrb
aam
push
adc
jne
adc
decl
cmc
push
flds
jmp
lea
sbb
imul
insl
ljmp
jmp
cs
dec
mov
pop
push
cld
pop
push
xchg
jge
cmp
scas
jl
stc
adc
mov
mov
call
xor
or
cmp
xchg
or
xchg
and
call
mov
aam
ja
repnz
dec
mov
jns
in
icebp
repnz
call
imul
repnz
xor
pop
shl
int3
in
push
push
je
std
ljmp
cli
in
aad
push
inc
fnsave
inc
push
in
ror
mov
lds
addl
je
mov
out
popf
loope
add
lods
xchg
hlt
mov
call
decl
sbb
cmc
add
mov
aad
sbb
dec
fidivs
clc
sti
cmpb
stos
mov
aad
les
push
xor
insb
pushl
add
outsb
outsl
sti
add
or
mov
cmp
mov
decl
pop
xrelease
mov
sub
inc
and
or
and
inc
pop
into
mov
jle
push
xor
xor
push
insl
popa
dec
xchg
push
push
mov
xor
fcoml
int3
jno
xor
push
jmp
mov
inc
cs
jg
test
add
cwtl
xchg
nop
pop
dec
cmpsb
stos
mov
jo
orb
push
ss
movsb
sub
orb
les
xor
mov
mov
loopne
dec
ror
xchg
mov
shrb
adc
call
inc
push
movsb
cmp
or
hlt
mov
call
adc
shlb
jg
sbb
cli
lahf
xor
cmp
xchg
cld
pushl
pushf
insl
mov
jae
lahf
mov
pop
ss
jge
das
stc
jecxz
pop
into
cmpsl
ljmp
mov
hlt
jge
sarb
mov
insb
mov
movsl
jp
dec
aaa
sbb
mov
fwait
inc
popa
and
ljmp
loop
fwait
pop
inc
aaa
out
decl
xchg
cli
hlt
mov
loopne
lock
sub
decl
dec
out
cltd
fsubl
movsl
ljmp
popl
idivl
addr16
dec
notl
divl
jge
or
ljmp
mov
jns
nop
ret
mov
movsb
addr16
sub
ljmp
fldcw
pop
dec
mov
jecxz
cmp
andb
xor
push
push
jno
sbbl
xchg
mov
ret
ljmp
daa
inc
push
je
rcll
pop
shrl
int
sbb
shll
pop
aas
add
je
mov
lock
call
pop
mov
jo
pop
sti
fsubrs
popa
cli
and
pusha
inc
xorl
jb
out
inc
rcrl
cmp
pop
jne
add
hlt
rcrb
orb
ljmp
xchg
push
clc
pop
daa
scas
in
icebp
xchg
cmpsl
sbb
cmpb
out
mov
lcall
and
cli
idivl
jl
mov
mov
lret
ret
inc
pushf
out
xchg
addb
pop
adc
nop
jp
xchg
add
jg
bnd
sub
push
scas
loopne
daa
mov
lds
sti
fsub
lods
push
xor
ljmp
mov
pop
mov
cmp
lret
and
jmp
inc
aaa
xchg
sub
stos
xchg
clc
pushl
fnstsw
xor
xor
sbb
outsb
pop
xchg
jg
stos
nopl
ljmp
jl
sbb
inc
daa
in
in
int3
inc
adc
in
scas
lret
aaa
lahf
out
lds
fsubr
gs
lcall
sub
and
mov
mov
mov
mulb
in
ret
inc
daa
sub
dec
or
lea
sahf
mov
lds
je
pop
shlb
testb
lock
clc
cmc
xchg
adcl
sbbb
jnp
aaa
xchg
mov
imul
mov
lret
lock
dec
lret
xor
jge
ja
ss
fcomip
lcall
xchg
stc
sub
clc
dec
jnp
inc
setge
enter
lret
pop
jmp
jo
mov
add
popf
test
dec
cmp
popf
test
xor
ljmp
cmp
into
pop
xchg
outsb
into
or
mov
cmp
fnstenv
movsl
lock
jle
xor
inc
dec
decl
lea
sti
call
inc
rcrl
mov
pop
lods
bound
sub
ljmp
push
fwait
mov
or
mov
mov
xor
jg
lcall
into
mov
cltd
clc
pop
jo
pop
xlat
cwtl
and
push
sarl
mov
iret
in
stos
addb
pop
into
cmp
int
out
mov
and
aaa
jno
rorb
popf
dec
out
shrl
cld
decl
lock
mov
cmp
popa
cmp
push
mov
sub
sbb
adc
daa
aas
lea
int3
xlat
cmp
aaa
jae
and
decl
dec
or
pop
push
add
dec
outsb
daa
mov
inc
arpl
pop
add
lcall
jb
mov
mov
push
ja
cmp
xor
xor
dec
lret
jns
ljmp
jge
fisubrs
mov
push
fnstcw
jb
push
mov
jo
cs
hlt
incl
std
ss
cmp
push
xchg
xor
push
inc
imul
jmp
ret
mov
fcoms
sub
filds
push
loope
mov
fidivs
stos
shrl
decl
add
mov
xlat
cmp
fs
cmp
jae
cltd
shll
mov
ljmp
xchg
mov
dec
push
jo
push
and
pop
sub
push
lcall
decl
sbb
je
sub
dec
mov
lcall
lret
push
hlt
pop
inc
jmp
inc
sbb
push
add
adc
addr16
inc
mov
mov
push
jmp
xchg
int
ficoml
aad
add
sub
outsl
and
sbb
imul
loope
in
pushl
xor
add
jge
in
add
fcmove
jnp
inc
test
jg
mov
xor
mov
mov
push
movsl
fyl2xp1
sahf
xlat
xchg
mov
xchg
scas
jmp
cmp
or
add
or
pop
cwtl
mov
sub
imul
ljmp
stc
popa
in
push
bound
aaa
ss
rcl
test
mov
jns
aam
sbb
call
or
testl
inc
or
ljmp
out
dec
dec
in
ljmp
and
iret
cmp
inc
fidivl
push
lds
pop
xchg
je
daa
ljmp
add
loope
shl
add
test
ret
or
adc
aad
decl
lock
add
mov
mov
pushl
lret
jb
sub
xchg
push
ljmp
inc
lds
mov
popl
aad
jnp
into
pop
xchg
pop
in
add
in
rorb
stos
and
stos
mov
cwtl
inc
or
aaa
sub
into
sbb
lahf
pop
xor
cld
sbb
jg
jmp
ss
cmpsl
jno
mov
fisttpl
mov
ror
decl
sub
enter
aaa
jb
scas
pop
pop
mov
or
jae
test
pop
mov
lcall
sbb
out
fwait
in
call
cli
loope
or
mov
jecxz
repnz
jae
js
push
push
sbb
incl
inc
dec
and
jns
sub
ret
sbb
mov
and
dec
mov
jno
stc
js
fmull
test
test
jmp
xor
stc
bound
add
cmp
out
mov
clc
push
popf
out
movsl
mov
orb
ljmp
cmc
sub
pop
pop
cld
rcrb
xchg
inc
orl
mov
test
mov
sbb
and
cmp
xlat
in
cwtl
test
test
mov
stos
cli
and
xchg
push
and
adc
pushf
es
cmp
test
or
loopne
lds
jbe
fs
hlt
sub
push
adc
rorl
cs
data16
cmp
jmp
repz
pop
out
or
pop
jle
jb
roll
gs
icebp
xor
hlt
xlat
out
pushl
mul
movsl
adc
sbb
xor
cmp
sub
and
pop
inc
xor
push
dec
push
leave
sbb
decl
jg
aaa
arpl
push
sbb
or
inc
jmp
pop
jae
sahf
jne
outsl
or
cs
pop
pushl
sbb
dec
movsl
jg
cli
aad
pop
mov
call
adc
pop
dec
loop
bound
daa
iret
out
mov
popa
jl
ss
js
stos
xlat
cltd
sub
les
lods
mov
pop
int3
imul
cmp
jo
and
ret
cmpsl
aas
fildll
fdiv
mov
inc
mov
dec
xchg
xor
outsb
adc
mov
lock
pushl
or
pop
lods
popa
into
stos
jo
sub
das
testb
cmp
mov
lods
out
bound
cmp
call
pushf
mov
in
hlt
ljmp
xchg
mov
and
pop
fwait
cli
stos
cmp
fistps
jo
ljmp
xlat
loop
lds
cmp
mov
mov
js
jo
mov
mov
je
sbb
jns
pusha
ljmp
shr
ljmp
dec
lods
adc
cmc
pop
les
sub
scas
mov
xor
push
ret
pop
mov
jmp
int
addr16
xchg
xor
mov
gs
cld
out
loop
xchg
pop
lock
mov
inc
repnz
mov
insb
test
pushl
xchg
xchg
stc
imul
pop
mov
push
pop
mov
xor
mov
xor
clc
ljmp
xor
xor
int3
gs
lock
fistpll
mov
dec
mov
mov
daa
setnp
imul
adc
call
jg
mov
lret
rcr
inc
imul
xor
shll
push
adc
andb
xchg
push
mov
shr
leave
jl
mov
dec
mov
mov
fldt
ss
jmp
scas
mov
xor
icebp
aad
pop
or
les
cwtl
mov
stc
pop
lcall
out
sbb
popa
insl
out
mov
adc
cmp
inc
cwtl
movsb
aad
or
mov
dec
aas
out
adc
shll
lcall
in
mov
sbb
incl
mov
mov
mulb
ficoms
jp
pop
int
bound
aam
lret
mov
mov
jmp
cmp
cmp
mov
pusha
xchg
mov
jnp
scas
push
xor
push
inc
leave
mov
add
xor
insb
xchg
push
stos
pushf
sahf
cli
les
dec
inc
xor
sbb
fcomi
mov
aas
mov
call
mov
fnsave
pop
mov
push
jno
fidivl
inc
sbb
sbb
pop
fcoml
pop
pop
cld
jmp
mov
cltd
popa
jbe
inc
jle
popf
rorb
jo
les
cmp
sahf
call
pushl
and
rolb
es
aad
cmpsl
jg
and
sbb
xchg
scas
push
mov
dec
mov
add
cwtl
inc
cmp
aaa
xchg
ja
sbb
cli
test
inc
push
rcll
sbb
jns
in
push
dec
js
ret
jecxz
in
inc
inc
jb
jmp
out
clc
orb
iret
mov
and
ss
mov
mov
push
pop
cmpsl
cmp
mov
pop
popa
jne
movsb
test
mov
ja
jmp
iret
cmp
lret
xorl
cli
incl
sub
xchg
scas
mov
stc
pop
pushf
and
ljmp
jge
mov
jmp
adc
push
rol
xor
iret
or
pop
popf
loope
cmp
pop
inc
aas
sbb
fcoms
cmp
cltd
inc
mov
cmp
data16
mov
cmp
mov
jle
je
dec
adc
imul
xor
test
push
imul
jmp
and
adc
add
or
addr16
test
xchg
ljmp
and
push
or
adc
sarl
dec
in
add
mov
sbb
sub
jge
outsl
std
icebp
xchg
movsb
int3
mov
adc
lea
add
jb
add
stc
push
cs
out
clc
jo
push
cmp
inc
sub
jmp
loop
push
lcall
out
cmp
push
stos
cmp
mov
imul
addb
decl
ds
scas
xchg
adc
int3
cld
jge
mov
or
int
adc
lldt
push
out
push
out
jmp
add
insl
loope
push
clc
incb
in
fcmovu
xchg
push
aas
mov
lret
in
decl
jns
mov
inc
dec
test
adc
xchg
sub
cmp
gs
xchg
cmp
fildl
cli
dec
paddb
pop
loopne
jo
dec
push
insb
into
jl
pushf
in
pop
cld
jmp
nop
mov
push
mov
push
push
add
mov
jmp
mov
jnp
test
mov
jo
adc
or
dec
shl
addl
mov
jns
adc
inc
inc
pop
rclb
mov
and
and
push
push
jns
jmp
insb
shll
lock
fdivl
xlat
and
mov
and
fists
jno
lods
sarb
adc
adc
mov
incl
push
dec
mov
addl
test
cmc
cmpsb
xor
lcall
rcr
imul
repnz
adc
xorb
out
mov
inc
js
lahf
loope
and
or
out
push
ja
adc
add
int3
dec
pop
mov
sub
xor
lret
sbb
inc
jl
shl
int3
je
lods
mov
cmc
nop
fistpll
decl
cmpsb
push
in
or
and
outsb
mov
add
pop
jns
orl
xchg
xor
xor
cli
cmp
push
lock
mov
pop
fcmovbe
jnp
lock
movsl
cmp
sbb
test
rcl
mov
push
std
adc
adc
xchg
mov
call
rcll
std
mov
pushl
inc
jnp
call
jnp
xchg
xchg
andl
lds
inc
dec
or
lods
push
cmp
aas
mov
xchg
fs
je
lahf
and
je
mov
add
stos
mov
cmp
adc
fmul
in
inc
inc
mov
into
dec
imul
stos
sub
call
jmp
add
aas
adc
mov
enter
cmp
adc
pop
rcl
cmp
popa
loop
mov
in
ror
or
call
not
mov
add
push
imul
jbe
popa
and
dec
mov
pop
je
cltd
xor
fcomip
lcall
add
repnz
xor
mov
aas
shlb
pop
jg
lret
in
and
into
add
xchg
jae
mov
push
stos
cmp
decl
leave
dec
ja
bound
or
inc
adc
or
jl
shl
jg
jmp
insb
xchg
and
sub
mov
fadds
hlt
adc
mov
sti
mov
and
dec
mov
xor
mov
mov
xor
aam
ljmp
cli
mov
loop
repz
mov
lahf
or
jo
stos
push
outsl
lds
inc
ja
mov
jb
jmp
dec
jl
or
hlt
jo
shll
xorl
incl
rep
into
push
mov
fwait
test
ret
rorl
and
fdivrl
shlb
ljmp
cmp
loop
mov
fistl
push
jbe
cmp
inc
daa
out
add
out
cli
pushl
jge
push
jb
push
imul
and
outsb
cli
sti
xor
jmp
xchg
jbe
loope
nop
jmp
jns
adc
rcl
call
inc
ljmp
cld
call
add
xor
mov
sbb
cmp
sbb
dec
in
inc
fisttps
mov
cmpsl
lods
and
cmp
insb
mov
xlat
or
ret
mov
push
decl
jmp
add
out
mov
adc
jns
bound
cmp
mov
push
pushl
mov
inc
or
sbb
ljmp
cwtl
jmp
lods
jbe
mov
jmp
negl
push
sbb
xchg
scas
cmp
lds
sbb
push
sbb
adc
pusha
sbb
cmc
or
in
mov
fst
dec
cmp
sahf
mov
sti
scas
out
inc
cmpsb
jb
jnp
xchg
call
gs
mov
ror
imul
push
cmp
xchg
rolb
call
adcl
push
rol
or
mov
jne
ja
cmpb
clc
pop
mov
ljmp
push
pop
inc
jg
fsubrs
xor
lods
ret
cmp
jns
push
jns
movsb
popa
hlt
pop
lock
xchg
inc
mov
jno
out
push
scas
call
cmp
mov
hlt
push
pop
xchg
cmp
jp
enter
es
push
cmp
lea
pop
cmp
push
scas
cld
repnz
sbb
call
adc
pop
cmp
push
sbb
and
popa
movsl
movsb
cli
scas
cmpsb
mov
cmp
pushl
cld
insl
dec
shl
mov
xchg
stos
cmp
pop
jecxz
add
cs
pop
pop
xor
cld
adc
clc
jmp
outsl
fwait
push
mov
pop
jo
mov
incl
mov
mov
pop
das
mov
adc
std
mov
out
and
add
andb
rcrl
aas
fiadds
mov
and
mov
fcomip
insb
and
out
cwtl
pop
mov
lcall
stc
cli
mov
and
cmpsl
or
lcall
mov
xor
add
mov
jbe
jmp
xor
mov
mov
ljmp
call
into
ficoms
mov
lahf
push
cmpsl
pop
xchg
add
test
cmp
xor
cmp
ds
push
nop
adc
pop
lret
addr16
push
cmove
xor
ds
fildl
dec
shrb
mov
leave
daa
add
mov
call
sub
xchg
inc
cwtl
mov
dec
cs
xor
in
cmp
sbb
cs
loop
decl
insb
cmpsl
subl
ret
adc
pushf
sub
faddp
xchg
scas
jg
push
test
add
xchg
scas
movups
add
adc
sets
sub
jmp
xor
imul
icebp
lahf
add
and
sahf
push
shl
scas
mov
outsl
cld
outsb
dec
push
lock
jg
je
push
repnz
sbb
std
mov
pop
popf
cmc
lcall
sub
pop
adc
xchg
das
outsl
xchg
idiv
mov
adc
add
xchg
incl
enter
lods
stos
xor
ds
ss
ss
scas
pop
fisttpl
pushl
lcall
sub
lods
inc
outsl
leave
add
and
lea
push
inc
out
mov
and
jmp
lds
andb
lcall
ljmp
dec
jl,pt
pop
adc
stc
vpaddsw
ljmp
add
in
insl
push
adc
iret
in
dec
aas
mov
sbb
imul
sbb
je
xchg
xor
aaa
xor
adc
fcom
or
cmpsb
nop
sub
jecxz
cmp
xchg
push
out
mov
inc
imul
mov
mov
imul
popa
lret
lret
ja
pushf
incb
jmp
dec
roll
and
pop
cld
jnp
repnz
mov
js
ret
xchg
ud2
movsb
mov
push
pop
or
call
cmp
cwtl
mov
cs
shrl
sbb
xchg
test
jno
fistpl
ljmp
into
pop
test
ret
pop
jge
arpl
data16
ljmp
pop
fmuls
in
test
cwtl
sub
mov
test
inc
stos
push
js
fildl
inc
jmp
fistps
sbb
fcom
fcomps
popf
xchg
pop
sbb
lcall
popl
jae
std
jmp
aad
or
jecxz
cmp
mov
mov
sbb
push
aas
call
xor
sbb
scas
push
fwait
popw
lods
into
movsb
mov
cmp
mov
scas
rcrl
sub
jmp
adc
push
xchg
lahf
add
push
fs
cld
mov
xor
push
cmpsl
jmp
aad
call
sub
jno
xchg
cld
or
cmp
xor
push
pop
mov
cmp
incl
jge
hlt
dec
add
insb
xchg
hlt
bound
fistpl
ljmp
hlt
sti
in
sub
adc
clc
dec
sub
iret
sub
lea
jne
outsb
nop
lcall
jbe
sahf
test
xor
repnz
addr16
movsb
or
lcall
and
fyl2x
arpl
push
mov
movsl
push
inc
mov
jl
mov
sub
lcall
aas
dec
jmp
loop
lcall
pushf
loope
push
pop
lods
arpl
add
das
lcall
leave
cmp
int
jge
push
scas
outsb
lods
sub
fnstsw
jbe
pop
int
pusha
aas
mov
jp
push
cld
cmc
mul
sub
stc
ljmp
inc
aad
gs
cmp
inc
cld
dec
mov
xchg
push
out
stos
stc
movsb
sbb
mov
cmp
imul
in
out
clc
mov
cli
subb
pop
push
ljmp
in
dec
mov
and
dec
daa
roll
cmp
repnz
sbbb
xor
ljmp
mov
jb
push
in
push
sub
push
lret
mov
movsb
push
gs
js
pusha
rcrl
out
dec
les
jo
mov
xorb
lock
jg
jg
int
adc
xchg
dec
inc
pop
idivb
cwtl
jns
xlat
sub
out
pop
negb
mov
jmp
sub
stc
xchg
lds
mov
mov
rcll
idivb
scas
pushl
add
adc
neg
imul
inc
xor
jne
cmpsb
popf
push
cmc
jge
push
daa
mov
jmp
or
adc
sub
mov
pop
aam
in
or
shll
mov
rorl
cmp
js
mov
or
mov
fwait
jl
cmp
xchg
sbb
lods
mov
shrl
inc
aas
into
enter
dec
push
push
jle
incl
cmp
mov
fs
mov
int
int
jp
test
incl
jbe
xchg
test
cmpsb
adc
push
adc
in
inc
std
dec
adc
fldenv
cmpsb
call
mov
pop
movsb
sbb
adc
insl
sub
and
push
cli
xchg
ja
cmp
lcall
in
or
lock
ljmp
pop
dec
aam
int
adc
std
jmp
and
mov
gs
push
or
daa
repz
cmp
sar
pushl
mov
xchg
repnz
inc
popfw
addr16
addb
lret
repz
ljmp
and
adc
pop
push
divl
fldl
stos
xor
pop
cmp
in
test
push
in
mov
les
ja
popf
mov
in
push
cmp
mov
pop
adc
inc
call
orl
cmp
mov
inc
cs
jmp
cwtl
fcmovb
jl
jo
js
mov
outsb
xchg
sub
es
lock
icebp
push
imul
lcall
lods
xchg
jg
dec
jp
xchg
jp
push
test
sub
iret
mov
pop
adc
add
pushf
andb
sbb
sub
out
in
pop
sub
call
arpl
push
idiv
xchg
aam
push
scas
stos
mov
or
in
cs
and
hlt
sbb
dec
rcrb
push
add
sbb
insl
es
jno
cltd
push
js
jbe
mov
jmp
or
push
push
pop
into
aam
jp
adc
in
mov
jnp
add
push
lods
test
sbb
insb
push
ljmp
inc
ret
je
std
repz
pop
cs
aad
cli
xchg
jnp
sub
inc
ljmp
clc
ljmp
dec
call
mov
inc
mov
out
and
inc
pop
sub
push
filds
fdivrp
incl
dec
stos
adcb
call
iret
pop
lds
loope
std
std
adc
adc
mov
lcall
idiv
sub
cmp
xchg
daa
xlat
ss
fistpl
add
fsubrl
pushl
subl
sbb
test
loopne
mov
fisttpl
outsl
cli
sub
mov
mov
lcall
fisttps
add
ffree
inc
cs
xchg
daa
and
incl
push
fistl
insb
dec
popl
fmulp
test
mov
hlt
int
icebp
mov
icebp
stos
out
movb
std
lret
dec
mov
call
add
xor
mov
aaa
jbe
sbb
xor
rol
push
insl
jo
or
mov
xor
jo
test
cmc
je
ja
add
pushf
aaa
scas
inc
or
sti
dec
in
imul
mulb
std
jae
adc
jnp
pcmpeqb
sbb
stos
ljmp
inc
pop
out
lret
push
add
sbb
nop
loop
sub
adc
jle
push
sub
lcall
jne
cmp
push
mov
aam
inc
mov
mov
add
stc
mov
aas
insl
jg
imul
ret
dec
sub
ss
imul
je
ss
cmp
loopne
jmp
mov
xchg
insb
mov
push
sbb
pop
jae
dec
adc
or
add
and
std
cmp
std
call
push
dec
sbb
movsb
imul
sarb
test
mov
dec
dec
jo
push
xchg
sbb
shll
das
cmp
hlt
jmp
or
decl
bound
inc
not
cmpl
jb
ret
cmp
decl
lock
adc
out
mov
dec
js
lahf
push
jp
ret
add
lcall
xor
jns
xchg
sbb
sbb
ljmp
cmp
mov
pushf
shlb
aas
xchg
jmp
ficoml
test
out
or
mov
test
bound
leave
adc
mov
jmp
ljmp
movb
in
cwtl
test
ja
arpl
mov
jmp
jns
jg
cmp
add
popa
dec
dec
dec
sahf
mov
or
xchg
sti
in
push
xchg
fdivr
jmp
or
mov
sbb
fs
inc
push
sahf
sub
dec
fldenv
mov
mov
jmp
pop
mov
push
xor
ja
adc
das
inc
push
aas
imul
sbb
decl
repnz
das
jns
xor
jne
cwtl
xor
push
test
movsb
shrb
mov
mov
jnp
sahf
dec
ret
roll
fcoml
je
shll
clc
incl
mov
fs
insb
jecxz
adcl
pop
pop
aaa
repz
xor
loop
pushl
ret
subb
mov
sbb
pop
cmp
call
dec
mov
push
xchg
push
ljmp
aam
push
sbbb
aas
sbb
sti
or
inc
push
add
clc
pushl
cmp
and
or
add
push
test
fidivrs
xor
pop
adc
mov
push
cmp
cmp
out
call
xlat
or
lret
xlat
fiaddl
push
repnz
decb
loope
or
cmp
ret
mov
dec
daa
test
xor
jmp
push
cld
mov
mov
es
mov
mov
push
cmp
lds
push
pop
js
out
jb
shlb
and
into
stos
dec
pop
arpl
incl
in
inc
push
fcmovnbe
in
ret
xor
mov
lock
mov
sub
pushl
xor
mov
lea
fldcw
aam
mov
sbb
push
cltd
ss
adc
push
push
cmc
cmp
mov
push
mov
incl
mul
mov
clc
mov
push
pop
xchg
push
jno
ds
test
scas
cli
call
mov
mov
xchg
sub
dec
xor
insl
ljmp
mov
adc
out
jmp
shrb
fidivrs
imul
jmp
mov
cmpsl
inc
sarb
cli
mov
inc
lock
xchg
rcll
push
mov
or
pop
rorl
and
cmp
mov
ljmp
in
mov
sub
sbb
test
jno
jnp
xor
mov
mov
push
cmp
push
xchg
push
jnp
scas
xchg
xor
add
or
push
push
outsb
mov
test
mov
in
sbb
subl
push
mov
fwait
lret
inc
repz
fisttpll
adc
ljmp
pop
in
mov
loop
scas
jg
cmp
dec
sbb
mov
daa
sub
lret
push
cwtl
lcall
je,pn
push
lret
push
js
cmpsl
push
notb
push
push
push
mov
xchg
cld
xor
and
push
push
push
lds
cld
jmp
push
aad
or
repnz
popf
inc
add
shr
test
cld
xor
cld
adc
mov
mov
outsb
bound
enter
xchg
dec
sub
sbb
pushl
aam
sarl
fptan
xchg
mov
add
cmpsl
xchg
mov
xchg
mov
xchg
aam
call
and
xchg
test
daa
push
xlat
sbb
mov
sti
loop
dec
mov
and
lcall
mov
movsb
cmpl
xchg
mov
sbb
loope
incl
push
or
inc
cld
inc
fcom
inc
rcrb
xchg
lcall
fcoms
mov
xchg
xchg
xor
dec
push
sbb
lret
pop
call
outsl
ljmp
mov
movsb
add
repnz
or
jb
cmp
call
inc
movsl
dec
cli
test
cwtl
mov
aaa
cmp
pop
dec
fs
dec
and
cmpsl
es
adc
push
fistpl
adcb
mov
xchg
ljmp
mov
xor
dec
jecxz
push
sbb
andnps
xchg
lret
xchg
pushl
jns
xchg
mov
sbb
adc
dec
or
cli
mov
push
fcmove
daa
cs
sub
lcall
xorb
dec
rcll
inc
push
adc
hlt
arpl
adc
xchg
jg
and
movsl
inc
adc
push
add
dec
movsl
ret
push
enter
xchg
repz
xchg
jmp
sub
stc
int
mov
daa
in
add
das
popa
dec
mov
xchg
decl
in
pop
out
add
push
cs
xchg
gs
cmpl
jmp
adc
imul
and
adc
sub
mov
mov
jmp
push
iret
sub
xchg
dec
or
inc
mov
clc
mov
xchg
daa
cmc
sub
call
mov
shlb
outsl
dec
inc
jle
mov
adc
popa
cmpsb
fcomps
push
pushl
mov
dec
xchg
push
cmp
push
mov
mov
add
dec
cmp
scas
dec
flds
pop
mov
mov
aad
cli
in
cmp
pop
add
dec
test
jae
decl
call
outsb
sbb
ss
mov
test
cli
add
add
ljmp
pop
jne
lock
adc
nop
int
bswap
or
jp
mov
xchg
mov
cmp
clc
push
and
sub
cmp
adc
lcall
lock
xor
out
inc
andl
stc
pop
testb
cmp
call
repz
sbb
loop
out
add
cmc
sbb
push
mov
lcall
sub
arpl
imul
shlb
sub
or
cmp
into
dec
cmpsl
jge
mov
in
js
std
fiadds
inc
leave
cltd
add
mov
sbb
mov
imul
sub
pushl
and
mov
shr
xlat
sti
repz
bound
out
inc
jle
aam
leave
pushl
dec
dec
ret
mov
cmp
aaa
lods
aaa
pop
xchg
cltd
adc
dec
pusha
jnp
mov
sbb
incl
scas
pop
jg
stc
cmp
movsb
ret
push
pusha
xchg
xchg
ds
fs
cmpsl
and
in
mov
xchg
cld
adc
cmp
inc
std
js
dec
pop
adc
repnz
sets
inc
out
sub
mov
mov
push
fsubrs
mov
dec
mov
pop
xchg
aaa
jmp
mov
enter
cmpsl
subl
xor
cwtl
xchg
stc
ret
push
js
mull
sbb
fistps
iret
sub
cmp
lret
pop
in
jns
clc
inc
shl
addr16
or
xor
xor
movsl
dec
push
pop
add
sbb
adc
out
dec
out
jp
and
mov
mov
mov
dec
or
fchs
mov
leave
push
cmpsb
jg
xchg
sub
jge
decl
incl
mov
add
daa
dec
mov
scas
lock
lods
push
mov
lcall
cmp
imul
inc
pop
mov
adc
inc
rclb
pushl
dec
jb
outsb
push
cmc
xor
jbe
pop
fcomip
mov
pop
jge
and
or
lret
push
dec
and
stos
fstpt
add
std
inc
pop
push
mov
nop
jnp
in
jb
fisttpl
xchg
jae
call
add
mov
or
jno
mov
es
push
mov
outsl
cli
mov
sub
xchg
jne
inc
or
scas
cmp
rolb
pushf
jg
lcall
in
or
sub
mov
xor
repz
sti
jl
push
add
lock
and
fisttpll
sahf
push
adc
xlat
jl
pop
cmp
xor
jge
or
shlb
loop
movsl
pop
in
xchg
lods
cmc
push
fisubrs
jge
incl
sub
dec
jmp
aam
test
test
lret
sti
xchg
lret
nop
ljmp
xchg
outsl
ja
xchg
lret
or
xchg
cltd
addl
jmp
lcall
and
hlt
dec
lahf
movsb
aam
push
xor
sbb
dec
imul
sub
xor
jle
pop
ds
flds
jl
push
fcoms
mov
jmp
es
stos
ja
xchg
loop
or
out
lcall
cwtl
mov
sub
sbb
fbstp
inc
fs
lcall
and
cmp
dec
mov
inc
pop
add
int3
jnp
mov
dec
dec
imul
sub
adcl
jmp
inc
sbb
es
ljmp
and
ficoms
jmp
xor
or
sahf
push
add
in
es
loopne
push
xchg
jp
sub
outsb
add
jne
cwtl
test
popf
inc
xchg
pop
movsb
icebp
xchg
cmp
xor
cmp
popa
jbe
xor
popa
ja
inc
adc
and
fwait
scas
cltd
push
xor
imul
sbb
xor
jnp
loop
push
rcrl
sub
xor
xchg
flds
ljmp
ljmp
sbb
mov
ret
sahf
aam
xorl
test
lcall
cld
rcrb
aad
jb
mov
jecxz
adc
sbb
mov
pop
out
mov
lcall
xacquire
fwait
jle
xchg
mov
fucomi
arpl
lahf
js
jg
adcb
cli
jge
in
push
mov
and
mov
nop
jecxz
dec
ja
mov
mov
incl
cli
pop
mov
push
sub
sbb
push
std
push
jnp
dec
hlt
xchg
in
push
pop
inc
jmp
int
pop
inc
incl
sbb
stc
push
adc
jbe
mov
sub
push
idiv
lcall
rcl
jl
fiaddl
scas
rcll
add
xor
add
pusha
inc
pushl
ljmp
xchg
test
dec
mov
fldcw
gs
outsl
pop
mov
ljmp
or
add
insb
outsb
shrl
sbb
pop
cmp
mov
iret
push
repnz
pop
jg
xchg
mov
addr16
lcall
ja
ljmp
js
scas
inc
cltd
lods
loop
jp
mov
fwait
popa
jo
aas
sbb
lcall
icebp
and
push
stos
jle
sbb
inc
movsb
push
or
xchg
dec
mov
xor
inc
inc
sar
inc
pop
out
jae
xor
pop
adc
scas
pushf
roll
mov
add
jg
xchg
out
daa
mov
and
xlat
or
icebp
jecxz
repz
mov
xchg
call
std
mov
into
pop
or
packsswb
push
mov
jp
dec
jb
xlat
mov
lock
cmp
cmp
add
test
lock
pushl
loope
push
cmpsb
mov
push
not
fwait
lock
shll
mov
je
shlb
aad
call
loop
xchg
adc
pop
std
mov
xor
push
inc
cmpsb
dec
and
in
call
xchg
leave
fldenv
sbb
xchg
push
pop
fs
ja
pusha
sub
sti
jno
push
inc
pop
push
inc
xchg
call
int
cmp
cmp
pop
insb
lret
decl
fs
outsb
mov
cmp
adc
mov
lds
add
push
sub
sahf
push
cs
xor
aad
ljmp
in
fsub
jnp
pop
xor
push
fs
jo
lods
sarl
push
insl
push
jno
xchg
bound
mov
int
add
mov
sbb
andl
decl
jecxz
cltd
pop
int3
adc
mov
xor
cmc
add
lcall
lcall
fdivl
mov
push
popf
push
mov
dec
imul
mov
mov
mov
xchg
cwtl
dec
pushf
jecxz
xchg
push
push
gs
mov
pop
mov
cli
out
dec
push
loopne
sub
jno,pt
cltd
lcall
stos
jl
sbb
mov
cmpsb
adc
xchg
adc
cmp
fdivr
ja
jg
push
mov
in
sub
loope
dec
cmp
in
xchg
cld
mov
rcrl
ja
dec
enter
adc
and
enter
int3
push
push
cmp
xor
mov
idiv
call
notb
push
das
sub
dec
inc
lds
imul
xchg
mov
dec
decl
in
mov
subb
subl
lret
ja
add
or
mov
add
subl
into
pop
test
xor
cmp
ljmp
orl
inc
dec
push
sbb
add
rclb
pop
jg
mov
mov
popa
cmpb
jbe
or
cld
pushl
xor
sub
scas
mov
jns
pop
sar
dec
psubsb
jb
adc
incl
cmc
push
mov
cmp
pop
add
aas
imulb
pop
out
decl
or
ficoml
pop
out
pusha
push
mov
mov
pop
xchg
stos
fmulp
and
mov
xchg
decl
shll
jp
push
pop
push
mov
inc
mov
pushf
xor
lcall
inc
movsl
ret
push
jge
fimull
or
or
rorb
sti
lock
cwtl
sahf
fdivr
mov
clc
fst
dec
lcall
das
test
jecxz
mov
jmp
test
pushf
popa
outsb
test
inc
push
xor
and
adc
inc
fwait
lcall
call
pop
fisubs
lods
stos
cltd
fisttpl
clc
sti
std
stc
push
ljmp
and
pop
lea
ljmp
out
cld
sub
das
incl
sub
inc
into
outsb
adc
ljmp
add
adc
les
push
or
decl
mov
pop
aas
sarl
dec
sub
loop
add
push
lds
xchg
pop
ficomps
jmp
or
addr16
xor
jmp
loopne
push
fldl
jge
ret
push
movsb
fcmovne
div
lcall
adc
jno
jmp
sarb
cmp
or
test
dec
sub
push
decl
add
xor
adc
mov
inc
lds
stos
popf
gs
loop
std
xor
dec
rcll
jp
or
or
movb
and
lock
push
lea
dec
pop
cmp
rorl
jp
and
pop
pop
or
movsb
and
xchg
scas
fsub
push
mov
filds
imul
fmuls
bound
mov
das
add
js
rol
sar
dec
pop
clc
xlat
jg
push
stos
cmp
into
decb
outsl
inc
pop
xchg
push
jp
dec
pushl
and
insb
testb
lcall
cltd
lock
adc
gs
jmp
je
jp
es
cld
fwait
mov
mov
fistl
bound
fwait
sbb
xchg
bound
jo
mov
popa
xchg
pop
mov
outsb
sar
cld
ljmp
fnstcw
dec
jl
jns
cmp
sbb
jl
push
cmp
test
repz
lcall
imul
ficomps
lds
or
int
xor
xchg
jg
cltd
xchg
add
loope
push
cmp
shlb
aaa
into
xor
lcall
call
notb
in
clc
pop
divl
leave
jl
pusha
push
lcall
gs
xchg
jmp
pushf
arpl
test
cmp
nop
negb
mov
ds
jle
lds
jle
popf
icebp
sbb
jo
sub
mov
jle
out
and
pop
xlat
adc
ret
decl
rclb
sbb
and
xlat
jo
sub
jl
daa
outsb
pop
cltd
cs
mov
or
decl
xlat
loope
stos
rcll
test
mov
nop
mov
pop
hlt
jmp
or
cmp
scas
mov
mov
jg
cmp
cmp
les
adc
add
imul
mov
mov
leave
adc
jmp
enter
xchg
push
sbb
repz
cwtl
mov
lods
leave
lret
pop
ljmp
test
pushl
and
jbe
add
aas
js
adcb
pushf
scas
repz
cmpsb
or
imul
add
mov
jmp
icebp
mov
mov
inc
push
dec
sbb
xor
out
in
adc
aas
and
out
xchg
or
add
je
fisttpll
jbe
mov
std
ljmp
push
aaa
adc
jge
loop
jae
stc
rclb
inc
je
mov
pushl
ret
pop
outsb
fs
pop
mov
or
sbb
push
imul
pop
hlt
pushl
shlb
mov
xor
mov
xlat
filds
inc
or
sub
pop
or
xor
call
sub
mov
test
adcl
cmp
push
repz
jmp
add
cmp
inc
pop
add
push
cmp
jmp
xchg
vpsrad
notb
cwtl
cli
lods
or
jmp
outsl
jo
sarb
push
fbld
mov
push
imul
or
or
lods
scas
cmp
push
adc
dec
or
dec
jnp
bound
jle
out
mov
pop
mov
dec
std
imul
or
stos
fs
cwtl
pushf
out
es
cld
js
sbb
push
addr16
lcall
fnstsw
ficomps
mov
ds
xorl
mov
lret
fs
stos
cmp
roll
add
push
int3
sbb
ljmp
dec
and
frstor
sbb
and
call
call
pop
scas
lds
in
inc
lods
nop
mov
add
addr16
testb
lock
mov
jmp
add
push
jns
lret
inc
push
xchg
dec
mov
push
and
ds
call
ss
fcomip
add
xchg
loope
cmp
adc
lcall
push
mov
mov
sub
cld
into
cmp
cltd
adc
incl
daa
lahf
mov
in
dec
movsl
pop
in
mov
mov
in
cmc
push
mov
aad
mov
jl
cld
iret
addl
int
inc
push
push
push
scas
sbb
dec
inc
inc
nop
lret
mov
ljmp
pop
subb
insl
adc
ret
and
push
into
jle
pop
aaa
lcall
mov
jo
cli
push
jns,pt
or
jns
fistl
push
sti
mov
movsb
pop
push
ljmp
mov
ret
fsub
add
sbb
or
xor
scas
sbb
mov
cmp
ljmp
fdivrl
lea
jb
out
sub
notb
xorl
mov
mov
pusha
and
mov
cmc
fdivl
xor
pop
shlb
and
mov
xchg
sub
rcr
cmpsl
cltd
jge
hlt
push
inc
mov
adc
call
pop
jmp
push
stc
ficoms
sbb
test
jnp
decl
mov
jno
xchg
ljmp
adc
mov
mov
sub
jmp
out
imul
stos
cmp
aam
lock
jg
fistpll
arpl
testl
stos
mov
loope
mov
std
dec
mov
incl
cli
outsl
jecxz
in
subb
icebp
ljmp
push
xchg
mov
xchg
add
out
push
dec
insb
pop
jbe
mov
jl
mov
fbld
cmp
popa
bound
daa
pop
aad
ficomps
adc
mov
jmp
cli
push
outsb
mov
sub
cmp
mov
xor
loopne
decl
xchg
mov
js
movsb
jecxz
sbb
push
lds
decl
mov
loope
insb
adc
nop
dec
outsb
pop
ljmp
jle
subl
cli
pushl
mov
jmp
xchg
ljmp
cltd
incb
jge
pushl
add
int
push
dec
inc
mov
cmp
es
adc
jmp
or
dec
notl
sub
and
loopne
jb
xchg
jmp
pushl
mov
mov
lret
lods
jb
ss
daa
mov
dec
fwait
int3
or
popf
nop
fldt
mov
lret
dec
shl
xchg
fisttpll
fdivl
test
ljmp
leave
xlat
push
out
mov
hlt
sub
add
aam
rcr
xchg
xchg
scas
sar
call
adc
jmp
inc
push
in
loop
push
enter
mov
jmp
xor
outsl
hlt
xchg
movsl
pop
loopne
in
in
sbb
inc
pusha
scas
in
stc
shlb
repnz
cmp
mov
inc
mov
mov
mov
dec
rorb
jge
aas
repnz
mov
mov
fisubs
cmp
std
loope
xchg
pop
lcall
inc
adc
popf
out
add
cmp
std
mov
xchg
test
cli
mov
iret
mov
sbb
mov
in
xchg
insl
and
iret
outsb
lods
arpl
es
ljmp
das
and
dec
push
push
xorb
js
inc
and
and
mov
mov
call
ret
xor
and
mov
mov
sub
pop
inc
jg
mov
and
mov
jp
jmp
movsl
test
or
jmp
jecxz
icebp
and
mov
movsb
adc
fsub
jmp
mov
lahf
test
lcall
orl
aam
out
gs
pop
pop
mov
rorl
ficoms
cmc
jb
fyl2xp1
out
clc
aam
sub
ljmp
js
cmpl
xor
jle
ljmp
rorb
lahf
fsubrl
add
sbb
cmp
in
inc
cmp
mov
inc
pop
js
insb
mov
rcl
dec
xchg
xor
roll
or
pop
aas
decl
rorb
xchg
lea
dec
loop
mov
add
mov
add
and
rcl
mov
in
dec
call
push
xchg
cli
cwtl
fsubrs
jo
cmp
dec
jp
aam
dec
mov
sub
int3
sbb
sbb
test
popa
lret
repnz
lcall
jle
mov
dec
hlt
lret
lcall
jle
sbb
aaa
mov
dec
loopne
jl
fstpt
mov
pushl
out
imul
fs
xchg
loop
imul
loope
call
in
hlt
popf
cmp
aaa
mov
mov
push
fmull
mov
fcomip
int
pop
and
jns
mov
mull
imul
sbb
fildll
cmc
mov
rcrl
addr16
mov
adcl
xlat
call
mov
xlat
adc
pop
lret
gs
cli
addr16
or
mov
call
cmpsl
push
push
in
stc
popf
cmc
out
jmp
stc
jecxz
ret
xor
rcrl
mov
clc
jno
shlb
lret
mov
mov
lods
xor
and
pushl
das
mov
rcrb
hlt
int
stos
fldenv
pop
out
jne
cmp
pop
movswl
clc
cmp
dec
jb
out
push
bound
push
xchg
fldcw
jmp
mov
xorb
fldenv
fmull
jno
cmp
adc
lcall
mov
rcl
push
daa
push
int3
fmuls
lock
push
test
gs
bound
call
dec
and
sbb
pop
inc
cmp
xchg
pop
mov
call
insb
push
mov
pop
mov
lret
push
pusha
jns
mov
inc
fsubr
inc
mov
jne
decl
les
int
outsl
push
scas
adcl
stos
mov
push
cmp
dec
je
dec
cmp
pop
mov
jmp
fs
add
inc
xor
fmull
mov
push
push
ss
decl
jmp
xchg
mov
cmp
add
dec
sti
lock
mov
jg
add
jo
arpl
or
movsb
not
outsb
and
lcall
call
rcll
xchg
xchg
testb
movsl
dec
movsb
push
sarb
std
in
pop
popf
pop
ljmp
cli
lods
and
scas
rcll
cmp
addr16
xor
lcall
pop
mov
jo
push
pop
aad
insl
or
pop
jl
insl
cmpb
mov
repz
or
or
adc
idiv
lcall
cmpsb
cs
lcall
push
stc
or
dec
es
cmpb
mov
test
push
push
mov
sahf
mov
push
fucomi
xlat
loope
adc
stos
into
jbe
mov
fnsave
cwtl
xor
pushl
jmp
inc
xchg
inc
adc
in
xor
sub
push
gs
rorl
lcall
or
cmp
aaa
jno
xchg
cwtl
pop
stc
xor
test
pop
push
mov
jmp
incl
scas
xor
or
pop
movsb
into
jg
jg
ret
fs
mov
test
sbb
fistpll
add
jge
xor
enter
push
stos
gs
xchg
cmc
out
cwtl
test
loop
jb
adc
incl
popa
and
fcmove
insb
push
inc
cmp
xchg
mov
mov
jb
mov
dec
loop
xchg
mov
scas
out
xchg
xchg
push
xchg
addr16
cwtl
mov
and
xchg
andl
pushl
mov
jb
cmpsb
cmp
lds
scas
pop
les
and
sub
jecxz
cli
data16
fisubrl
cwtl
arpl
and
fcmove
scas
popa
jbe
sbb
sbb
jg
xchg
inc
and
xchg
mov
stos
adc
adc
rorl
sub
inc
jp
aad
adc
add
aas
xlat
sub
sbb
and
dec
pop
sbb
add
into
lret
lcall
hlt
enter
or
inc
jnp
ds
in
dec
and
jmp
les
sub
cmpsl
mov
into
add
decl
mov
mov
ret
mov
in
fs
loopne
sbb
imul
add
cld
fmul
lock
movsl
cmp
shlb
xchg
test
popa
arpl
jg
add
out
sub
dec
xor
push
call
outsl
popf
mov
cmp
xlat
pushf
inc
dec
insb
int
jno
gs
pop
push
es
sub
inc
adc
jne
dec
fs
lods
mov
dec
lretw
shlb
dec
lods
mov
lcall
inc
subl
jg
mov
ljmp
popa
lds
pop
aad
std
inc
xchg
mov
aaa
push
fldt
int
fistpl
fistpll
out
mov
fadds
push
clc
push
cmp
addr16
push
pop
xchg
dec
sub
out
sbb
ljmp
pop
movb
inc
es
scas
push
cmpsl
adc
jecxz
push
iret
cmp
mov
clc
push
movsl
ss
pop
mov
mov
stos
std
mov
mov
dec
into
call
repz
out
cli
incl
lcall
cli
sub
adc
lahf
mov
mov
sbb
mov
and
sbb
cmc
repnz
add
cltd
imul
sbb
in
ss
lods
pop
jmp
aaa
mov
xchg
stos
cli
lret
or
sub
xor
jg
pop
push
sbb
xor
dec
mov
xchg
popa
mov
sub
inc
xchg
addr16
lret
sar
call
test
aad
mov
xor
pop
sub
sbb
fwait
push
ret
push
mov
mov
jg
into
ror
shrb
push
push
cmp
inc
push
cli
and
pushf
push
push
cmpl
aam
mov
jne
dec
adc
adcb
rolb
aas
call
xchg
jle
dec
dec
test
les
add
leave
gs
dec
pop
fnop
mov
pop
xor
popf
cmpsl
xchg
mov
xchg
jp
adcl
mov
xchg
aaa
rcll
xlat
xchg
and
jmp
mov
sub
lcall
jmp
and
push
stos
lcall
sahf
jne
pushl
fwait
jmp
sbb
push
dec
mov
ficoms
aad
addr16
mov
cli
pusha
lock
inc
rorl
push
xor
push
mov
sahf
sbb
push
incl
adc
sar
lock
roll
mov
sbb
movsb
sub
ljmp
or
loop
lock
jb
pop
ds
fisubl
xchg
lcall
push
ficoml
mov
jmp
adc
popf
mov
jecxz
mov
mov
sarb
pop
lcall
adc
mov
push
jle
jg
adc
adc
mov
pop
pop
testl
insb
cs
mov
sbb
adc
mov
dec
jmp
mov
stos
call
jmp
sub
popa
js
cs
aad
lahf
cmp
inc
es
dec
std
sub
int3
into
pop
mov
dec
pushl
xor
daa
outsl
das
icebp
icebp
scas
cs
push
jae
hlt
fidivl
mov
call
adc
mov
xor
stos
jnp
jp,pt
sbb
adc
fwait
mov
pop
fildl
inc
xchg
dec
and
mov
cmp
jnp
push
insb
idivl
mov
popf
jp
das
inc
fldpi
ljmp
mov
ficompl
arpl
push
mov
inc
test
jne
cwtl
hlt
lahf
rcr
lret
or
in
aas
push
jle
pushl
jnp
push
aad
dec
imul
movsb
lahf
push
imul
clc
mov
push
lods
mov
pushf
or
add
pop
sub
mov
sbbb
fldl
sti
subl
xchg
out
mov
mov
pop
cltd
or
fdivrl
in
loop
add
aaa
mov
xchg
cmp
shl
mov
data16
syscall
jg
ljmp
adc
inc
mov
or
lcall
movb
push
mov
cmp
cmp
cmp
jp
dec
or
aas
es
and
pop
cltd
xlat
ljmp
movsl
arpl
pushl
push
adc
loop
lea
mov
mov
jmp
insb
ficomps
xlat
lahf
jmp
je
fcmovnbe
into
xchg
lret
mov
mov
sub
xor
jge
mov
cmp
cmp
mov
xor
adc
cmpsb
in
aaa
test
insl
out
xchg
jg
ljmp
jmp
subb
cmpsl
or
mov
dec
mov
call
xchg
dec
pop
jo
sbb
int
lret
je
nop
scas
dec
mov
cmpsl
sar
lcall
push
sbb
mov
cmp
test
or
xor
mov
adc
sub
test
int
hlt
icebp
jmp
lret
sub
repz
jle
dec
xchg
lods
insb
stc
xor
in
add
push
stos
lcall
fistpll
and
imul
sbb
ss
xchg
cmp
pop
push
jmp
int3
sbb
daa
lret
push
inc
insb
cmp
jns
enter
pop
pop
jecxz
lds
dec
sbb
mov
imul
xchg
xchg
ficomps
sbb
sti
nop
insl
dec
mov
fwait
mov
and
mov
scas
xor
movsl
int
arpl
adc
stos
xchg
aam
test
ss
int
jg
outsl
jle
adc
addr16
aaa
aas
pop
xchg
pop
xor
aas
insb
add
insl
mov
push
movl
popa
xchg
js
into
mov
mov
pop
adc
sar
mov
bound
or
clc
push
push
inc
jl
data16
movsb
ljmp
mov
pop
adcl
jg
mov
xlat
sbb
jecxz
sub
push
lea
mov
mov
pop
mov
int
and
fdivl
and
xor
insl
inc
ljmp
in
mov
aad
push
mov
inc
cmp
mov
call
sbb
pop
sub
jmp
subl
std
push
in
or
ss
lcall
test
decl
inc
jbe
push
push
mov
aaa
aam
xor
inc
andb
push
mov
lods
mov
mov
clc
mov
popl
cmp
aam
movsb
xchg
std
ljmp
mov
dec
imul
pop
xor
addr16
shrl
jp
pop
repz
data16
push
loopne
test
push
push
stos
mov
arpl
test
ljmp
xchg
jmp
and
int
cli
fstl
hlt
lret
dec
hlt
stos
mov
aam
add
cmp
mov
pushf
es
sub
in
push
lcall
mov
std
cmpsl
out
ret
xor
pop
nop
sbb
in
out
xor
pop
jmp
popf
loope
aas
loope,pt
dec
adc
mov
ret
dec
aaa
or
and
movl
lcall
cltd
call
mov
jmp
push
mov
pushl
cmpsb
cmova
inc
leave
fidivs
cmp
jo
jne
mov
movsl
bound
incl
jne
push
jbe
dec
xchg
push
and
dec
add
cmp
pop
popa
sbb
fs
imul
sub
icebp
push
iret
lea
lret
call
mov
pop
je
cmp
sub
imul
cmpsl
add
sub
clc
dec
add
mov
repz
es
or
in
jb,pt
add
rcrl
in
mov
mov
inc
add
push
sbb
sbb
dec
push
cli
sbb
or
push
inc
repz
nop
out
mov
jmp
mov
loopne
xchg
add
dec
jge
out
push
cwtl
lea
add
std
std
dec
rcrl
dec
cld
lcall
sbb
add
jp
jae
sbb
pop
inc
push
out
sbb
sbb
cmp
sbb
dec
insl
into
push
in
cmp
jmp
sti
popa
xor
inc
add
inc
shll
jno
and
mov
mov
outsb
mov
ss
lret
ficomps
in
or
adc
roll
or
dec
daa
js
jmp
jno
adc
test
push
mov
xlat
das
scas
dec
and
xchg
xor
outsb
cmc
enter
cmc
test
pushl
pop
jbe
outsl
add
push
xchg
scas
addr16
mov
adc
std
ljmp
xchg
jmp
mov
jg
xchg
mov
mov
lods
or
popa
xchg
cmp
das
cli
decl
dec
push
xor
dec
popf
out
fs
mov
lcall
or
fiaddl
mov
lea
push
clc
adc
xor
pop
adc
xor
xor
pushl
push
inc
push
xlat
and
negb
das
out
bswap
aas
sub
orl
xchg
mov
ja
xchg
mov
aad
call
xlat
cwtl
inc
cmp
call
repz
insb
mov
xor
mov
les
shll
jmp
iret
aas
notb
icebp
xlat
lods
ss
out
push
xor
ljmp
movswl
out
enter
out
daa
adc
mov
dec
hlt
je
pusha
xchg
pmullw
ja
or
sbb
sub
xor
std
dec
mov
pop
jb
sub
les
test
push
std
movb
and
daa
sub
jo
int3
sub
ret
ficoms
movsb
xor
jge
data16
sbb
jg
sub
xchg
lock
mov
jp
pop
hlt
jmp
arpl
jge
xchg
xor
pusha
adc
fdivp
push
and
shll
dec
clc
jnp
imul
sbb
lods
movsl
mov
call
daa
xor
jg
leave
pop
cs
cmpsl
and
xchg
or
in
pop
mov
ljmp
jnp
lds
dec
sub
mov
out
test
mov
in
mov
adc
sbb
and
mov
and
popf
push
divl
sar
jmp
adc
ds
arpl
sbb
push
aam
mov
in
js
xchg
insb
pop
pushl
out
aaa
mov
cmpsl
outsl
sbb
adc
data16
fldcw
cmp
push
shr
shll
mov
xor
les
jmp
test
xchg
mov
inc
and
ljmp
xchg
pop
stos
js
sbbl
add
insl
aad
movsb
das
call
mov
clc
out
mov
in
sub
sub
fs
inc
orl
ret
xor
fbstp
into
mov
call
loopne
lret
sbb
mov
mov
imul
fnstsw
incl
insb
dec
icebp
mov
xor
push
movsl
mov
adc
ja
das
inc
rolb
adc
mov
call
stos
sub
mov
xchg
dec
inc
imul
add
rcrb
je
mov
or
jmp
in
dec
ljmp
scas
inc
pop
sbb
sarl
fwait
cmp
mov
mov
sub
incl
les
and
add
out
enter
jle
fld
push
idiv
call
inc
jnp
imul
cmp
les
cmp
add
pop
enter
push
lahf
lea
cmp
pop
mov
out
sbb
and
sub
xor
xor
pushl
jne
xchg
mov
sahf
mov
jl
mov
or
incl
xchg
rol
push
ret
jl
xchg
mov
lods
add
add
addr16
mov
jl
data16
loope
into
push
jle
sbb
lcall
out
jnp
das
fbld
push
mov
push
fcoml
loope
inc
js
ljmp
sub
call
mov
ret
fdivr
push
xchg
pop
dec
out
gs
call
push
and
dec
jbe
int3
jns
or
fsubl
add
xor
and
pop
lcall
mov
subl
int3
mov
cli
icebp
lret
cmp
imul
sbb
mov
je
xor
adc
sub
jmp
cmp
inc
lods
pop
loope
pop
cmp
mov
and
push
ror
call
in
cmp
mov
es
ss
dec
sub
pushl
aam
mov
mov
enter
mov
lods
pop
add
das
push
test
mov
xchg
inc
xchg
jnp
gs
in
pop
je
mov
incl
push
push
jle
dec
jbe
jo
or
addr16
out
fimull
pop
push
test
pushl
jmp
imul
aas
and
fmul
cwtl
sub
out
mov
int3
cmp
cmp
movsb
test
xchg
in
jp
jmp
cld
mov
push
hlt
xchg
mov
pop
mov
push
push
iret
mov
push
mov
inc
loope
adc
imul
shlb
ljmp
scas
adc
enter
jge
rcrb
pop
cltd
xor
cs
pusha
mov
mov
ss
pop
push
cmp
rorb
cmp
sti
or
mov
pop
int3
xor
decl
ja
jnp
cmpsb
out
jns
mov
or
fdivs
mov
dec
cmp
in
lods
push
jne
decl
lock
dec
push
mov
cmc
sbb
das
add
jg
fidivrs
repz
insb
and
outsl
dec
or
or
xor
push
lret
fldenv
jae
push
mov
lahf
ds
mov
push
loop
xchg
mov
sbb
adc
sahf
dec
lods
loopne
mov
out
mov
inc
jb
inc
pop
inc
inc
jne
imul
mov
insl
and
and
jg
inc
and
inc
lds
pushl
cmpsb
lods
stc
incl
test
xchg
sub
xor
subl
xchg
call
inc
fstpt
popf
push
mov
scas
dec
dec
mov
add
ja
xchg
fs
fsubrs
or
cmpl
sub
cmp
jp
dec
gs
pop
mov
dec
and
sbb
sahf
cmp
push
adc
lcall
cmp
mov
pushf
pop
int
and
mov
nop
cwtl
arpl
sub
pop
call
std
in
mov
jp
in
xchg
inc
daa
fsubrs
nop
pop
add
jmp
popf
add
ljmp
sti
cvtps2pi
or
cmpsl
leave
mov
sbb
lahf
or
or
mov
dec
ret
cli
add
add
mov
ljmp
cmp
call
ret
jg
fs
inc
jge
int3
add
int3
call
or
mov
lods
adc
inc
popa
cmp
add
pop
sahf
adc
or
decl
sbb
dec
int
xorb
xor
xchg
xchg
xor
call
jecxz
mov
lahf
mov
mov
fnsave
loopne
mov
mov
and
add
push
lods
xchg
jne
lods
mov
dec
add
xchg
push
xchg
ficompl
pop
mov
push
bound
out
adc
mov
mov
sbb
lahf
sub
cmpsb
jle
popf
shrl
call
and
addl
outsl
fs
push
pop
xchg
sbb
js
mov
xorl
dec
add
int3
mov
hlt
out
in
cltd
jns
fcmove
out
pop
push
sub
jmp
loop
scas
cmp
pushl
stos
mov
das
cmc
xlat
repnz
mov
add
in
or
jns
jo
dec
mov
xchg
cmpsl
pop
incl
adc
xchg
cmp
dec
hlt
or
cmp
push
dec
shll
adc
and
cmpsb
fcmovu
test
jp
xchg
or
aad
aaa
mov
scas
cli
pop
inc
push
pop
fsubs
xor
je
and
das
rclb
pushl
cmpb
lods
test
nop
push
mov
mov
jl
stos
ficomps
push
fadd
popa
push
shlb
pop
mov
cmc
mov
or
mov
pusha
out
cmp
mov
sub
pop
addr16
call
sub
mov
jb
and
fcmovu
inc
sbb
rdpmc
cmp
ljmp
cmp
mov
in
mov
out
xchg
rep
mov
cmp
cld
mov
sbb
add
or
cmc
mov
aam
mov
push
out
pop
sbb
pop
mov
ljmp
fmuls
loopne
dec
testl
push
jno
aas
mov
lahf
in
sar
dec
das
fwait
push
mov
mov
jmp
sbbb
jg
pcmpgtd
pop
lret
adc
call
jecxz
mov
vmulsd
cmp
push
leave
mov
scas
outsb
mov
scas
shlb
hlt
xchg
cmp
test
pop
jnp
test
inc
lahf
insl
lahf
je
cmp
mov
sbb
sub
scas
dec
not
jge
dec
or
push
adcb
es
das
cmpsl
pop
sub
clc
pop
call
mov
in
scas
enter
or
inc
xor
pop
push
aas
movsl
mov
jg
shrb
mov
lds
jae
mov
data16
cmp
push
aam
cmp
decl
and
mov
movsb
dec
je
insl
mov
loopne
add
fisubrs
mov
xchg
mov
mov
mov
push
or
xor
pop
loopne
call
shll
and
gs
out
dec
pop
xchg
lahf
xchg
jg
lcall
cmp
loopne
adc
jnp
test
into
daa
xchg
xor
sbb
jl
cmpsb
or
outsl
int
and
mov
add
mov
outsb
mov
xor
jae
jmp
push
rorb
mov
nop
mov
lret
mov
or
gs
rclb
call
push
fildl
cmp
mov
pop
aad
and
aas
fbstp
stos
push
rcll
decl
jns
adc
movsl
dec
mov
pop
lret
mov
mov
and
rcl
gs
add
sub
mov
cmp
sar
mov
lods
lahf
adc
mov
push
call
outsb
mov
or
in
popa
in
shl
popa
mov
sbb
xchg
call
adc
sti
out
clc
popa
ljmp
inc
loop
cmp
mov
addr16
dec
mov
enter
jle
mov
lcall
dec
pusha
jmp
addr16
xchg
sbb
imul
xchg
add
nop
cltd
dec
jge
xor
decl
jne
in
inc
mov
mov
in
add
adc
lret
sti
push
lcall
incb
add
xor
int3
leave
scas
movsb
ja
sbb
push
mov
jmp
jp
jle
mov
in
lahf
or
pop
jecxz
or
cmpsb
orl
jmp
or
or
push
int
rclb
push
hlt
jmp
jne
cld
into
jae
outsb
jb
mov
out
repnz
xor
push
idivl
mov
loope
decl
inc
pop
in
mov
outsl
icebp
sbb
xchg
dec
repnz
or
xor
aam
mov
shlb
stos
jmp
iret
lret
out
test
mov
fidivl
fnstcw
incl
mov
mov
sbb
pop
push
fadds
popf
jg
mov
adc
add
cmp
movsl
lahf
pushl
std
mov
ljmp
cmpsl
sbb
js
xor
pop
icebp
stos
imul
pop
sbb
inc
bound
mov
pop
jne
and
jne
mov
test
hlt
mov
push
and
and
lea
sub
jge
dec
mov
jae
mov
and
mov
xchg
dec
test
xor
clc
cmp
mov
test
loopne
sar
sub
inc
loop
or
pusha
xchg
rolb
mov
imul
cmp
dec
jne
repnz
push
mov
repnz
cli
pop
pushf
cmc
dec
pushf
rol
mov
ljmp
mov
sub
sub
sahf
jmp
dec
std
mov
jle
push
pop
movsb
into
pop
lcall
mov
lods
push
xchg
out
sbb
rcll
decl
pop
test
daa
ds
or
mov
jge
into
popa
movsl
rolb
enter
decl
testb
push
push
push
pop
xchg
adc
jg
int3
lret
push
cmp
incl
out
or
arpl
sbbb
popf
fistpll
inc
mov
add
jl
or
test
add
mov
pushf
pop
push
pop
ljmp
dec
lcall
pop
add
and
andl
push
pop
mov
jne
addr16
subl
push
pop
sub
test
xchg
cmc
adc
push
fwait
jae
and
jno
sbb
xchg
daa
cmp
xor
mov
inc
xchg
sbb
fisubrl
arpl
jg
jmp
loop
pop
or
cmp
mov
sbb
pop
jnp
mov
adc
or
fs
lcall
sbb
subl
outsl
filds
dec
stos
dec
xor
mov
jg
lret
jmp
inc
mov
mov
inc
jle
dec
xchg
cmp
cmc
fsubr
dec
mov
dec
cltd
ljmp
or
fdivs
and
xchg
dec
divb
movsb
nop
and
js
push
cmp
dec
and
jnp
sbb
sbb
shrb
stos
dec
fdivl
inc
sub
adc
cmp
outsl
bound
pop
out
test
fcomip
ljmp
mov
jmp
xor
and
fsubrs
call
ljmp
dec
imul
dec
dec
popa
pop
ds
test
rclb
movsb
jmp
int3
mov
sarb
mov
jle
fcom
lods
fsubrs
sub
cs
inc
push
inc
outsl
fstpt
mov
lahf
jo
sbb
stos
insl
aaa
mov
ljmp
int
jmp
cmpsl
iret
enter
mov
dec
jle
mov
insl
movsl
pop
in
in
cwtl
sub
mov
push
ljmp
mov
iret
lea
aam
loopne
mov
xchg
call
dec
stos
inc
push
dec
popa
bound
je
insb
xchg
out
cmpsl
xchg
idivb
cmp
dec
aas
dec
gs
pop
or
fcoml
sbb
mov
loop
fcomip
decl
repnz
fwait
xchg
xor
sbb
shrb
bound
test
and
cwtl
int
in
ret
or
xor
das
clc
call
sub
outsb
out
pop
out
push
sahf
ds
call
ret
xchg
mov
lds
xor
adc
subb
inc
scas
test
mov
decl
fnsave
or
dec
sbb
or
call
add
inc
in
xchg
into
in
frstor
ja
out
push
scas
push
gs
pop
and
ss
mov
decl
lock
jge
test
xchg
cmpsl
or
out
mov
inc
jmp
loop
mov
fildl
cmp
and
fildl
fiadds
jne
call
cmp
hlt
mov
sub
lock
das
push
push
icebp
mov
mov
jp
xor
inc
inc
sub
sub
idiv
rcrb
pop
cld
mov
mov
cmpsb
cli
incl
xchg
and
js
lds
push
stos
mov
popa
push
shll
xchg
ljmp
roll
cli
inc
xorl
jns
pop
icebp
lahf
jge
pushl
lcall
inc
inc
inc
lds
call
pop
adc
add
fisttpll
pop
sub
mov
bound
sub
add
je
sbb
call
loopne
push
dec
ret
dec
sub
int3
inc
adc
mov
mov
sub
pushl
cmp
and
mov
movsb
mov
in
movsb
imul
fdivs
in
sbb
pop
lock
lods
push
out
mov
insl
xchg
jmp
sbb
pop
in
daa
stos
ret
cmp
mov
pop
jl
scas
cli
jmp
sub
pushf
in
pop
out
dec
lahf
mov
pop
push
mov
ja
dec
jo
call
dec
inc
push
adc
frstor
xor
push
lcall
and
mov
push
sarl
pusha
push
mov
cmp
xchg
leave
push
sbb
xchg
pushl
ljmp
or
adc
idivl
push
vminps
mov
jmp
popa
cmpsl
fadd
mov
lds
pop
push
lret
xor
mov
out
pushf
jns
adc
pop
jl
xchg
decl
jmp
repnz
mov
push
sahf
insb
sub
add
std
clc
inc
ret
lds
idivl
dec
popf
ret
push
lahf
shlb
cltd
or
mov
mov
adc
adc
and
int
push
push
cmp
lcall
mov
push
jno
push
aam
je
mov
std
call
incl
and
setb
jae
mov
fs
sub
test
lds
dec
xor
pop
sbb
ljmp
scas
cmp
lret
xchg
mov
push
lret
cmp
test
pop
in
push
mov
movsb
repz
jg
fistl
enter
loopne
shrb
pop
cld
incl
clc
fwait
jnp
pop
dec
mov
dec
pop
adc
sti
pop
je
ret
aaa
cmp
push
cmp
bound
cmc
push
lcall
int
in
stc
lret
inc
cmp
cmpsb
jbe
xor
clc
js
sub
sbb
dec
dec
out
movsbl
inc
and
sbb
ss
fnstsw
imul
js
lret
adc
scas
clc
pop
push
mov
rolb
in
ljmp
loope
push
aas
movsl
mov
out
jmp
stos
and
jp
icebp
popa
lods
mov
sub
and
and
aam
decl
test
jle
sbb
jb
nop
jmp
enter
mov
dec
xor
pop
jl
outsl
xchg
fdivrs
mov
test
sbb
inc
xchg
into
repz
insl
cmc
into
incl
jmp
jbe
dec
jecxz
sahf
cmp
mov
ja
xchg
sbb
or
xor
and
loop
in
aam
sub
popf
out
fidivl
adc
in
call
shll
repz
notl
test
mov
cmp
pushl
xchg
mulb
dec
dec
cmpsl
frstor
mov
adc
or
sub
jmp
mov
enter
into
sub
cmp
popf
and
push
cld
ljmp
cmp
rcll
sbb
or
decb
mov
icebp
aad
jb
xchg
fcompl
js
add
js
repz
ljmp
sbb
jl
jb
inc
aad
jo
pop
mov
in
fistpll
rcr
inc
lcall
jmp
jg
repz
mov
push
repnz
add
sbb
clc
jno
lods
mov
repnz
or
popa
movsb
jg
test
adc
iret
inc
insb
in
shrl
mull
pop
pusha
pop
loop
stos
sub
jo
addb
loop
sbb
and
jecxz
loopne
jne
add
sub
xchg
sbb
outsl
mov
pop
test
xor
fstpl
add
mov
lcall
int3
call
mov
test
mov
mov
sahf
fdivl
push
and
in
jnp
inc
pop
jbe
sbb
ja
sub
mov
add
shrl
cltd
cmp
aaa
cld
sti
mov
mov
mov
xor
push
sbb
fcoms
fsubs
lahf
scas
fldl
int
lret
into
and
imul
call
inc
ret
repnz
mov
lock
test
ror
mov
call
aad
mov
dec
add
inc
out
xor
hlt
mov
pop
adc
add
decl
aam
clc
icebp
les
sub
hlt
addr16
cmpsl
xchg
inc
inc
add
pushl
jae
adc
jmp
ret
dec
in
or
packsswb
ss
sub
push
lods
movsl
mov
pop
add
lcall
sbb
stos
cld
ss
sbbl
in
pop
ljmp
out
fldl
jge
dec
mov
push
leave
jecxz
ljmp
test
insb
pop
repnz
cmp
sbb
sbb
inc
and
fildll
call
mov
mov
sarb
fsub
push
movsb
fdivrs
or
call
sbb
faddl
mov
dec
out
lret
mov
dec
mov
test
xor
ljmp
add
in
or
loopne
sub
arpl
push
jle
sbb
push
sub
decl
pop
push
dec
xchg
mov
pop
push
xchg
sti
jmp
test
enter
mov
outsl
clc
pushl
and
dec
jo
add
movsb
pop
and
ljmp
movsl
mov
push
pop
push
cld
bound
mov
out
adc
lcall
or
into
iret
sbb
cmpsl
shll
push
cmp
or
mov
mov
dec
outsl
xlat
fsts
leave
xor
lcall
pop
pusha
out
push
adc
out
push
adc
mov
loopne
sub
mov
and
loope
aaa
pop
push
call
push
daa
mov
lret
xchg
scas
or
jno
jbe
fmul
iret
mov
enter
decl
xchg
adc
push
pop
push
push
lcall
adc
inc
push
jbe
ficompl
mov
gs
lcall
xchg
xor
jmp
in
in
xor
sahf
lahf
jle
inc
cmp
sub
dec
xchg
mov
lcall
inc
dec
jno
movsl
mov
hlt
das
sti
push
outsl
sbb
fs
cli
lcall
cmc
inc
or
inc
movsb
add
push
and
push
jle
push
cmpsl
popf
popa
jle
sbb
mul
jbe
ss
imul
nop
mov
or
xor
mov
mov
fnstenv
es
sbb
fisubs
rcl
incl
pop
xlat
in
scas
loopw
in
xor
cmpsb
es
or
out
popa
push
inc
rcrl
sbb
and
ja
lods
mov
push
into
and
sahf
not
mov
adc
jns
mov
mov
lock
orl
lcall
jbe
inc
fwait
es
js
pop
das
hlt
mov
push
mov
inc
add
mov
mov
cmp
ret
out
mov
mov
dec
popa
mov
dec
loopne
pop
test
dec
cld
sub
stc
jns
movsl
scas
cmp
daa
fwait
ljmp
and
sbb
sub
insl
mov
movsb
and
and
pop
stc
pushl
lods
xchg
addb
stos
inc
adc
arpl
adc
les
jae
leave
cli
mov
jecxz
sub
push
dec
fsubl
jne
mov
sub
mov
bnd
add
lret
mov
pushf
dec
cmp
jnp
loop
push
call
cmp
mov
inc
cld
repnz
mov
aas
movsl
add
jmp
sub
cmp
hlt
push
and
pusha
xor
mov
push
cmc
sbb
push
inc
pop
jg
and
idiv
fmulp
jmp
xchg
out
inc
in
jno
push
imul
icebp
frstor
xchg
add
decl
jl
lods
repnz
fnsave
bound
scas
js
enter
cltd
xchg
clc
test
sub
pop
adc
pop
xor
inc
adc
pop
rcrb
incl
jb
xor
xchg
fstp
out
sbb
xchg
jg
mov
into
dec
iret
aad
push
xor
cmp
test
loope
movsb
mov
and
sub
jb
rol
mov
call
pop
cmp
lret
pop
dec
in
sub
ds
lret
pop
fcmovb
push
imul
push
add
loope
ds
inc
fucom
inc
pop
push
pop
mov
push
repnz
jbe
pop
mov
ljmp
fwait
leave
in
repz
movsl
adc
mov
scas
scas
iret
inc
jns
mov
or
dec
fidivrl
adc
fldl
lahf
xchg
stos
pop
aad
and
ljmp
jbe
in
push
clc
enter
ds
cmp
fwait
dec
add
enter
out
fcomi
fmuls
das
add
or
enter
push
fimuls
pop
or
mov
ljmp
xor
cmp
jg
dec
gs
mov
lret
adc
cmp
and
ljmp
pop
add
pop
ss
fistpl
lods
loopne
scas
mov
push
data16
push
addr16
pop
cmp
push
arpl
xchg
cli
dec
lahf
sub
leave
into
repz
incl
test
sub
mov
add
movsl
pop
sahf
xchg
jne
jmp
mov
nop
xchg
inc
mov
inc
or
cmc
xorb
xchg
push
daa
repnz
xchg
add
fisubs
negb
fisubl
call
sbb
xchg
pop
inc
std
out
in
pop
mov
decl
lock
pop
sbb
mov
dec
push
ds
aas
outsl
push
loopne
in
ss
call
mov
mov
jg
ds
and
mov
jmp
add
xor
cwtl
loop
cmp
movsb
lcall
jo
jl
clc
lcall
push
ret
lahf
or
or
mov
decl
jecxz
or
in
aam
imull
jmp
push
das
aad
sbb
pop
jae
test
sar
dec
call
sbb
test
imul
outsb
cli
ret
test
lahf
fistl
daa
lcall
sub
mov
and
arpl
mov
aas
jno
adc
dec
cs
jecxz
mov
ljmp
mov
xlat
mov
sbb
fs
loopne
mov
fst
mov
push
ja
lcall
popa
sbb
jg
nop
inc
scas
movsl
jmp
xchg
sub
xor
mov
mov
mov
mov
in
push
push
stc
push
gs
inc
fwait
data16
adc
xor
pop
mov
sbb
push
aad
push
sbb
std
fldcw
dec
mov
lock
aam
sar
jns
jp
push
shlb
cld
add
push
add
xchg
stos
ret
rcl
pop
mov
clc
sar
ljmp
mov
mov
xor
cwtl
clc
ds
pop
jne
sbb
clc
xchg
mov
inc
mov
sbb
add
push
shl
and
cmp
jae
add
icebp
stos
inc
mov
mov
xor
xor
mov
std
std
or
ds
and
es
or
aad
sar
jg
les
sub
inc
cmp
add
ljmp
cmp
push
movl
out
js
adc
inc
lock
sbb
outsl
cmp
setb
sub
mov
push
or
cmp
adc
ds
inc
add
cmp
cmp
test
xor
insb
mov
nop
mov
or
aam
sbb
lods
scas
ret
push
mov
and
push
cmp
clc
fisubrs
mov
xchg
gs
addr16
xlat
filds
aas
xor
mov
and
das
sbb
lea
pop
icebp
fadds
xor
inc
push
cmp
cwtl
cmpsb
xor
in
sbb
jle
pushl
mov
bound
cmp
and
mov
rcrb
inc
xor
lods
cmp
in
lock
inc
enter
sbb
outsb
and
fisttps
call
sahf
dec
mov
cmp
cmpsb
mov
fnstcw
inc
sbb
hlt
bound
rclb
aad
mov
aaa
mov
shrl
inc
rorl
cmp
inc
cmpsb
out
int3
je
scas
gs
mov
nop
push
lods
idiv
jecxz
or
pop
inc
call
pop
shll
sbb
sub
lret
or
sbb
test
incl
push
movsl
mov
cmp
in
mov
and
xchg
insb
cmp
push
lea
call
sahf
sbb
jecxz
jmp
xchg
fistpl
mov
dec
sub
add
enter
icebp
pushl
out
daa
add
fs
mov
jne
pop
subb
sub
cs
fbstp
out
fsubrp
pop
subl
test
mov
fdivr
lods
in
push
addl
mov
add
jne
cmp
pop
mov
scas
inc
incb
in
sub
arpl
cmp
xor
ret
add
mov
fildl
jbe
dec
movzbl
fs
fcoml
cwtl
sub
aad
pop
or
js
test
mov
adc
rcrl
sbb
aam
mov
adc
lcall
sbb
or
loope
add
add
shl
mov
pop
jne
cmp
out
inc
out
and
mov
inc
pop
or
xor
out
pushf
popa
ljmp
mov
decl
fstpt
jl
and
rol
les
push
xchg
dec
cmp
jne
imul
cli
lcall
rclb
push
movsb
jge
cmp
push
mov
mov
dec
clc
mov
pop
std
dec
mov
incl
outsl
js
in
iret
mov
push
mov
andl
mov
mov
into
inc
jns
stos
sbb
rep
cwtl
inc
mov
clc
jp
inc
lcall
push
pop
sbb
sub
mov
lret
push
jp
add
jl
pop
cmc
pop
decl
fsts
fsts
and
dec
sahf
idivl
rcrl
add
imulb
sub
push
mov
loop
mov
xor
xor
in
dec
daa
or
xchg
sbb
jnp
bsr
push
push
xchg
imul
insb
mov
mov
cltd
mov
dec
call
dec
inc
rcll
mov
cli
lcall
fistpl
or
inc
cmc
ret
into
xchg
les
enter
add
arpl
sbb
fnstsw
out
jge
dec
push
repz
inc
lods
neg
push
jecxz
sbb
mov
cmp
sub
and
xchg
aas
loop
push
cmp
mov
test
cmpsb
mov
fiadds
ljmp
repnz
sub
inc
std
jmp
or
int
ret
stos
pusha
pop
and
inc
dec
add
stc
sar
or
pop
aaa
or
mov
add
call
fbstp
add
sub
fiaddl
and
fistps
xchg
fistps
lret
xchg
mov
stos
jge
fs
out
jmp
incl
mov
loop
jle
scas
jg
mov
or
fwait
mov
add
xor
or
std
test
ljmp
or
jg
inc
mov
add
mov
cmp
out
aas
out
incl
fidivs
fcoms
int
aas
or
lock
ja
stc
mov
dec
jl
xchg
call
push
fldl
push
xchg
shl
std
pop
pop
pop
sub
pusha
and
mulb
scas
ljmp
leave
dec
jns
cmp
mov
push
xor
mov
out
mov
incl
sub
xchg
ret
int3
jbe
lods
or
adc
enter
push
stc
mov
jb
jg
mov
fnsave
add
sub
movsb
dec
sbb
aam
roll
xor
ja
stos
inc
jmp
push
lods
pop
ret
insb
push
iret
hlt
adc
pop
std
incb
lcall
sub
sbb
adc
call
mov
incl
adc
adc
mov
dec
js
ret
cld
cmpsb
pushl
adc
mov
cmp
xchg
icebp
sub
call
loopne
in
xchg
in
test
inc
pop
div
hlt
jl
insb
stc
mov
xchg
scas
jg
dec
push
jg
or
lcall
gs
xchg
push
stos
inc
push
xor
loope
clc
dec
sarl
shrb
call
std
fdiv
inc
inc
in
mov
push
pop
dec
mov
push
pop
jmp
mov
incl
and
in
das
dec
xor
fldenv
jo
inc
mov
xor
addr16
mov
cwtl
or
fildll
out
sub
jmp
cmp
add
decl
movsl
mov
out
mov
pop
mov
mov
roll
mov
jmp
mov
fiadds
jl
jo
loopne
inc
sti
or
dec
cld
pop
push
fldl
xchg
popa
call
incl
psllq
in
inc
insb
xor
and
add
xchg
clc
sar
lcall
cs
fwait
add
cmp
into
sbb
xor
inc
shll
dec
jge
jmp
sbb
out
fsub
jge
or
push
ja
pop
cmpsb
jecxz
in
adc
push
aas
cmpsb
mov
lds
negl
jmp
lock
mov
insb
cmp
mov
add
insl
dec
jb
popf
sub
xor
sub
sbb
movsb
jmp
shll
jns
push
movsb
sar
mov
mov
out
dec
xchg
rcr
lret
sar
lds
lea
je
lea
jecxz
es
jg
add
aad
push
int
push
mov
mov
das
inc
cmp
and
les
lcall
push
and
mov
push
or
inc
lcall
cltd
mov
dec
mov
dec
mov
stos
fcomip
pushl
adc
pop
dec
stos
cmpsl
outsl
jo
xor
push
add
ljmp
pushf
ret
rcrb
out
gs
repz
xor
pop
aas
fisttps
rcl
loop
push
push
jmp
aas
xchg
ljmp
jno
adc
ljmp
outsl
push
sbbb
pop
cmc
push
in
movsl
ds
aas
xchg
inc
lcall
popf
pop
frstor
in
pop
xor
cmc
out
inc
mov
jg
scas
dec
and
push
decl
adc
push
push
sbb
lret
cwtl
mov
inc
int3
cmc
lods
xor
test
ljmp
xchg
cmc
adc
or
mov
pop
nop
movsb
mov
add
sarb
sti
call
mov
test
test
pusha
leave
pop
adc
mov
insb
cmpsb
jg
sbb
pusha
hlt
mov
lods
out
jo
data16
ljmp
arpl
mov
xor
sti
sahf
mov
and
fldt
addr16
lret
in
iret
push
not
mov
mov
mov
out
outsl
mov
addr16
sbb
test
into
ret
sbb
push
add
fst
stos
dec
scas
inc
scas
fstl
xor
cmp
mov
aas
xor
inc
cmp
mov
inc
and
pop
cli
dec
add
xor
call
shl
dec
ds
pop
pop
mov
aad
sbb
xor
sbb
mov
pop
jmp
mov
pop
xchg
lock
inc
dec
jno
bound
rcl
sbb
sub
data16
nop
pusha
shlb
sar
lcall
dec
es
int3
mov
mov
sub
jne
fiadds
imul
inc
adc
lds
push
or
xor
push
in
fdivrp
aaa
std
ljmp
imul
cmp
jbe
loopne
mov
cmp
test
pushl
mov
xor
stc
movsl
mov
or
pop
stc
int3
in
xor
jmp
jp
call
iret
insb
cmp
movsb
mov
mov
rcr
mov
popa
dec
mov
jg
jmp
jmp
mov
out
nop
xchg
inc
xchg
lcall
mov
cmp
inc
push
sub
pop
adc
jno
rcrl
test
fmull
or
mov
aas
sub
daa
pusha
push
out
rolb
add
ljmp
stc
mov
push
pop
fdivrl
repnz
iret
dec
add
cmp
call
jmp
popf
inc
lcall
mov
fsubrl
js
sbbl
bound
je
imul
stos
add
mov
xchg
dec
outsl
leave
jmp
ret
popf
add
xor
fs
jg
lds
popf
cmpsl
sti
sbb
pusha
sub
xchg
dec
xor
ds
decl
adc
xchg
in
ret
daa
rclb
and
xor
aas
sub
aaa
jle
or
das
clc
sub
or
js
clc
add
incl
repz
aaa
and
jmp
icebp
insl
fsubl
push
pushf
sarl
push
push
cmp
repz
fiadds
in
into
cmpsb
test
scas
and
sarb
or
ss
mov
sub
xchg
shll
aad
out
in
in
cmpsb
in
or
adc
cltd
push
mov
in
cmp
pop
loopne
loopne
fcmovb
sub
mov
jnp
dec
fcoml
lock
fnstsw
daa
push
and
call
adc
call
dec
into
cmp
adc
xchg
xor
in
pop
sbb
add
bound
xorb
pushl
xor
mov
lds
cmp
cli
pop
loopne
pushf
mov
fsubl
pushl
pop
fldenv
enter
cltd
subb
cmp
jp
pusha
xchg
pop
and
adc
incl
lea
inc
ficoms
jbe
mov
mov
cmp
jle
xchg
scas
pushl
cld
push
notl
iret
mov
or
cs
imul
dec
push
or
mov
enter
pop
xor
xlat
mov
fmul
sub
decl
and
in
mov
inc
mov
rorb
lods
iret
dec
test
cmpsl
mov
incl
or
and
sub
mov
aam
xchg
pop
jle
je
dec
mov
jge
mov
add
das
pop
cs
push
sbb
sti
lods
aad
test
cld
inc
add
push
cmp
and
dec
xchg
mov
stos
pop
shr
call
push
mov
jge
enter
gs
stc
pop
lock
mov
dec
inc
xchg
fistpll
adc
ljmp
mov
cmovp
push
push
mov
pop
mov
xlat
enter
dec
sbbl
sbb
mov
cld
popf
cmc
fildll
ret
roll
cmp
scas
fxch
or
mov
ret
jo
hlt
bound
mov
out
pop
ljmp
pushl
xor
mov
sbb
mov
loope
and
insl
cmp
mov
adc
pop
cmc
jnp
xlat
inc
xor
push
enter
int
push
stc
imul
ljmp
dec
js
out
js
sub
sbb
sahf
cmc
addb
pusha
mov
lods
sbb
jae
sbb
test
jbe
ror
mov
pushf
mov
pushf
pop
cmp
jg
jno
jmp
imul
iret
mov
icebp
cmpsb
push
jns
sbb
out
pop
icebp
push
and
inc
pop
pop
out
push
decl
inc
pop
mov
cwtl
mov
cmpsl
int
xchg
in
cmp
jmp
adc
mov
inc
or
jb
rcrb
into
movsb
fisubl
inc
ss
sbb
mov
adc
inc
enter
lcall
loopne
dec
outsb
jmp
sub
pop
cld
adc
stc
test
imul
ret
adc
loop
fisttpll
sti
pop
hlt
fmul
popa
or
mov
mov
push
mov
sbb
pop
ret
incl
and
inc
inc
sub
mov
mov
movsl
aaa
fisttpl
add
roll
enter
or
arpl
cmpsl
jl
mov
jg
xor
mov
ljmp
leave
sbb
rcrb
inc
jle
or
pop
xchg
lahf
cmp
fwait
adc
iret
dec
mov
mov
mov
sbb
out
idivl
fcomps
in
mov
imul
sub
daa
inc
cld
dec
push
pop
test
dec
sbb
scas
sarl
inc
rcrl
lods
loop
push
adc
andb
jg
pop
cltd
fcmovne
pusha
xchg
add
loopne
dec
sub
xchg
push
lcall
push
cmpsb
inc
xchg
push
mov
mov
lds
or
insl
dec
repz
xor
aas
sbb
dec
das
out
jg
in
pop
into
push
xchg
push
push
or
sbb
rcrl
leave
clc
ljmp
fsub
pop
or
jge
in
test
jno
cli
cmpsb
sarl
ja
iret
add
dec
sub
pop
inc
gs
jne
xor
lret
clc
ljmp
inc
pusha
push
push
scas
sub
sub
dec
push
mov
cs
decl
mov
cmp
imull
cmpb
or
decl
lock
stos
outsl
xor
mov
jns
popf
data16
jmp
call
push
push
dec
push
jne
pop
lret
fnstsw
push
jns
add
or
and
repnz
pushl
out
ss
scas
inc
scas
not
imul
nop
and
test
and
lcall
xor
pop
dec
sbb
int
inc
int3
mov
pop
sub
xchg
mov
add
scas
incl
mov
dec
popa
xor
adc
adc
xchg
mov
shrb
xchg
ja
in
in
fdivrp
mov
ds
lock
xchg
and
je
mov
insl
xchg
xchg
lcall
bound
sub
rcll
fistl
sub
push
aam
xchg
xchg
ljmp
sahf
fisttpll
sti
stc
test
orl
xchg
mov
loope
mov
aas
push
inc
outsl
shl
sti
das
loope
sub
arpl
sbb
jge
sahf
decb
fstpl
mov
lcall
icebp
mov
test
mov
jle
or
inc
cli
xchg
or
mov
dec
sti
cmpsw
fs
mov
jb
push
cmp
xchg
pop
inc
ja
fxch
inc
pushf
fcmove
cli
mov
jg
imul
lret
pop
and
fldcw
cmc
pop
push
lods
sbb
xor
lods
cmc
repz
call
push
mov
push
adc
push
jno
push
aad
and
inc
stos
push
pushf
out
lock
pop
test
popf
mov
dec
xor
cmp
lods
stc
inc
lret
sbb
push
dec
add
jne
sub
jae
sub
les
repz
sub
je
std
repnz
pushl
mov
iret
xchg
outsb
mov
adc
mov
sub
nop
adc
mov
ror
incl
inc
outsb
movsb
or
mov
dec
nop
push
mov
mov
mov
ja
dec
scas
fcompl
incl
sub
xorb
cmc
cmpsl
aam
mov
and
imul
mov
incl
xor
aaa
cmpsb
mov
icebp
lds
pushl
imul
xchg
xchg
jb
cmc
loope
mov
dec
jp
lock
adc
out
decl
sbbb
or
leave
jg
cmpsb
aad
dec
ret
push
shrl
clc
jns
les
stos
ljmp
repnz
sbbl
mov
fcomip
decl
push
gs
aas
fs
sub
gs
adc
int3
mov
sub
push
xor
sbb
shl
xchg
arpl
outsb
adc
push
pusha
adc
dec
mov
mov
jl
sub
mov
jg
decl
pop
add
adc
lock
ljmp
jg
mov
insb
sbb
jne
insb
dec
jle
lods
mov
loop
negb
aad
jno
lret
sti
inc
mull
dec
dec
pop
mov
adc
sbb
std
jp
xor
test
fnstsw
push
xor
jle
xchg
clc
add
les
jne
dec
jo
sbb
stc
xor
jae
into
add
es
sbb
lock
fcomip
inc
inc
roll
cld
or
add
pushf
pop
and
inc
daa
xchg
jmp
addb
in
xor
sbb
daa
mov
pop
addr16
jmp
xchg
jl
ds
add
decl
jecxz
mov
jne
xchg
xor
adc
ljmp
lea
cmp
jmp
jmp
lret
leave
insb
mov
cwtl
mov
or
xor
pop
push
add
cmp
repz
gs
or
inc
into
jo
ret
test
pushl
sti
pop
lcall
shrl
xchg
mov
popf
xchg
dec
xchg
add
jg
and
lea
push
sub
les
inc
fldt
lods
aas
shr
xchg
decl
loopne
inc
sub
dec
orb
in
pop
sarb
imul
call
pop
and
pop
xor
push
pop
popa
aam
loope
std
dec
inc
push
mov
pop
icebp
pushl
insl
div
or
mov
pop
cmp
outsb
lret
cmp
outsl
cmpsb
ljmp
sbb
negl
and
push
call
push
cmp
aas
clc
repz
dec
pop
and
in
addl
pushl
jle
mov
aaa
dec
popa
cs
pop
mov
mov
mov
cmp
mov
decl
dec
adc
stc
sahf
inc
popfw
xor
rolb
xor
dec
cwtl
ds
sub
jg
clc
ljmp
ss
imul
mov
popf
dec
loopne,pn
add
adcb
pushl
xchg
dec
sbb
xchg
icebp
push
and
inc
sub
jb
mov
stos
jmp
adc
push
push
in
mov
jae
pop
sbb
into
ds
push
dec
mov
decl
ljmp
lcall
or
mov
cwtl
sahf
incl
clc
push
movsb
push
mov
out
outsb
roll
mov
jge
imul
std
jmp
xchg
mov
push
popf
inc
pop
bound
je
out
negl
push
cmp
lea
call
push
je
or
popf
fadds
sbb
xchg
pop
gs
dec
pop
jg
jle
mov
add
dec
mov
stc
mov
scas
pop
call
aam
shll
cmc
jl
js
addl
sti
movsl
mov
xchg
lcall
mov
xchg
lret
fadds
adc
mov
decl
insl
call
cs
nop
or
xor
xor
pop
pop
outsb
jmp
loopne
sbb
bound
or
dec
pop
sbb
jne
aas
sbb
dec
mov
sub
decl
jmp
dec
sbb
jmp
mov
fsubr
jle
mov
add
adc
lcall
icebp
xchg
inc
in
pop
push
ret
adc
pop
clc
jecxz
les
push
push
in
jae
mov
pushl
and
adc
mov
inc
mov
adc
cmp
hlt
xchg
jnp
dec
sub
adc
int3
lcall
sahf
leave
aas
in
int3
and
aas
dec
stc
xchg
xor
cmp
je
mov
add
xchg
ret
add
mov
ds
push
cmp
or
dec
pop
add
inc
je
inc
push
and
ss
sbb
pop
fwait
pop
sub
mov
xor
imul
cli
sbb
mov
lahf
jl
cmp
push
es
decl
adc
push
shlb
jne
lods
pop
dec
test
jmp
xchg
dec
jmp
jne
push
inc
bound
in
xor
mov
fcmovnbe
and
ljmp
arpl
sub
fsubr
lods
imul
sub
test
mov
cmp
fdivs
add
inc
das
outsb
addb
std
aaa
inc
mov
test
mov
das
aam
adc
iret
sub
jp
inc
and
jge
mov
and
inc
inc
or
into
out
test
push
out
call
rcll
fistpl
jecxz
or
fdivs
mov
imul
decl
jl
test
mov
repz
jl
cmp
push
mov
scas
xchg
fld
push
out
out
push
repz
dec
xor
and
dec
xchg
hlt
jl
sub
js
inc
adcl
call
inc
mov
xchg
sub
or
xchg
lret
pop
stos
lea
jmp
pop
mov
jg
testb
dec
imull
jp
cmp
mov
sbb
in
jle
ljmp
sahf
mov
outsb
sbb
dec
push
dec
in
pop
loop
rolb
andb
dec
int
decl
sub
adc
enter
inc
sub
xchg
shlb
clc
sub
inc
iret
aaa
mov
ds
or
jno
rol
out
xchg
pop
cmpsb
push
xchg
lea
mov
in
sub
mov
sbb
dec
mov
pop
outsb
out
cmp
aad
fadds
mov
mov
mov
cmp
movsb
das
dec
fbld
ljmp
mov
sti
xchg
sub
jo
pushl
out
cmpsl
int3
jge
cmp
lret
dec
gs
xor
loopne
jbe
icebp
sbb
lods
les
incl
mov
mov
gs
ret
inc
push
into
cmp
test
imul
jo
scas
test
fcomi
xor
xchg
daa
and
mov
cli
pop
push
cmpsl
mov
pop
jg
pushl
and
jmp
bound
jl
leave
jo
hlt
push
repnz
je
insb
cs
clc
negb
mov
lods
iret
push
jge
sub
xchg
notb
dec
cs
mov
dec
or
es
gs
es
out
cmp
lret
jg
test
adc
hlt
rolb
sub
xchg
push
and
in
jns
ret
pushl
cmp
rcrb
test
xchg
inc
in
inc
jns
jge
rorb
ss
push
fistps
jecxz
sbb
push
fildll
out
jmp
psubq
cmp
fistps
jo
mov
mov
pusha
adc
jg
sub
push
aam
lock
mov
lcall
cld
xor
mov
push
jo
jle
rcrb
mov
das
jo
into
mov
sub
jge
or
mov
dec
es
jmp
adc
xor
dec
xor
psrlw
jmp
inc
dec
outsb
loop
sbbl
sbbb
scas
dec
xchg
cs
pusha
gs
push
outsb
ss
mov
xchg
xor
push
call
lock
cmp
add
cli
movsl
mov
idivl
shl
pop
and
cmc
loop
pop
push
xor
xor
jg
ss
fimull
mov
xor
push
imul
xor
push
and
call
mov
call
lods
or
mov
fisubrs
or
test
cmp
dec
and
dec
movsl
call
dec
cmp
repnz
cmpsb
xchg
fidivs
aaa
push
dec
mov
out
cmc
mov
std
in
push
sub
fsubl
aaa
xchg
jo
dec
int3
cmp
or
mov
sub
adc
ror
mov
movsb
push
mov
les
movsb
insl
jp
int
add
jl
les
cmp
repz
jle
cmpsl
dec
cmpsb
in
mov
jg
mov
mov
push
test
stc
stc
pop
add
movsb
std
cmp
pop
pop
ljmp
cli
jae
inc
faddp
fildl
and
lahf
and
into
add
sbb
lcall
mov
rcr
jbe
imul
pop
dec
aaa
out
mov
adc
push
push
ljmp
sbb
fisttps
jbe
jnp
shrl
loope
ljmp
rorl
movsl
outsb
cltd
and
out
repnz
sub
sub
lcall
or
pop
ja
out
sar
pushl
lods
sub
fisubl
mov
push
sub
xchg
mov
insl
scas
inc
push
pop
fcomps
shll
xchg
sub
jb
lahf
add
jle
jmp
out
repnz
xor
in
or
xchg
insl
xor
ja
cwtl
mov
aam
sti
lock
mov
or
out
outsl
mov
jp,pt
add
loope
cli
js
sar
or
ljmp
push
push
mov
aam
mov
xor
add
into
aam
nop
jmp
aaa
adc
sbb
insb
xor
vmaxss
add
lds
jae
mov
mov
add
out
hlt
lds
jg
xor
jmp
lods
mov
in
pusha
xor
jg
in
rcr
dec
repz
push
xchg
sti
pusha
out
cld
jl
jge
mov
adc
out
add
ljmp
arpl
movsl
incl
or
adc
jns
mov
fsts
fstl
sarl
stos
cmp
cwtl
ret
inc
in
inc
cmpsl
inc
and
and
ljmp
data16
cltd
inc
daa
jp
push
pushl
iret
jg
adc
push
clc
push
dec
mov
aaa
mov
xchg
mov
outsb
mov
call
sti
lods
inc
mov
sarb
test
les
cmp
jg
lods
ljmp
inc
xchg
imul
mov
mov
mov
arpl
adc
dec
jnp
push
ja
in
sub
add
xchg
mov
and
sbb
aaa
mov
xlat
dec
jo
mov
in
push
jnp
sahf
int3
ficompl
jp
aam
cmpsb
inc
insl
insb
or
jmp
bound
add
es
fstpl
cmpb
aad
call
dec
inc
cmp
out
lret
add
in
or
pop
sub
mov
pop
jmp
push
ljmp
aam
lods
sbb
stos
cmc
pop
add
mov
push
out
push
in
decl
adc
mov
cs
jmp
fidivs
pop
jno
sub
jmp
xchg
sbb
cli
fdivr
and
sub
mov
dec
lock
mov
lea
mov
int3
test
mov
lods
mov
jmp
mov
lret
add
cs
aaa
pop
mov
icebp
gs
push
data16
jmp
and
cmp
test
sbb
ljmp
jb
or
push
sub
cwtl
jnp
mov
mov
mov
inc
shll
iret
dec
cmp
lods
int3
sub
pushl
fidivrl
adc
jp
jne
aas
jg
stos
mov
jle
sub
mov
outsb
push
push
push
pop
push
fidivrs
adc
mov
pop
movsb
sbb
arpl
out
or
pushl
lcall
xchg
ja
mov
mov
mov
dec
jge
les
incl
xor
pop
lea
sbb
insb
jae
clc
mov
icebp
adc
call
mov
pushf
in
xchg
and
lret
fcomps
movsl
jmp
aam
ret
pop
js
in
call
ret
pop
out
push
xor
jo
dec
loopne
sub
andb
add
push
mov
jg
mov
and
addb
lea
call
out
outsb
out
jle,pn
cmp
pop
mov
cmp
stos
xor
bound
out
sbb
jns
scas
add
push
xchg
cmp
push
mov
js
cmp
sub
mov
pushl
shrl
stos
dec
test
add
inc
jo
rclb
inc
incl
test
test
mov
inc
repz
je
xchg
insl
out
and
jno
mov
pop
mov
cmpsl
enter
fdivp
fildll
ret
mov
jmp
lcall
pop
jmp
jle
insl
mov
fsubrl
gs
inc
sti
fbstp
sub
add
call
adc
sub
imul
shll
inc
mov
push
les
jl
cmp
pusha
daa
dec
repz
mov
incl
pop
or
jnp
movb
mov
mov
test
mov
xchg
pop
cmp
ljmp
aas
roll
idiv
cmp
sarl
ljmp
push
test
mov
stos
or
out
test
inc
dec
les
incl
arpl
mov
fsubl
nop
shl
sbb
cli
enter
jb
dec
pop
ljmp
in
jmp
stc
orb
mov
test
inc
mov
pop
popf
outsl
push
xchg
test
scas
clc
clc
mov
inc
into
push
mov
insb
mov
adc
push
sbb
jae
pop
mov
xorb
stos
in
pop
ret
aam
and
ja
andb
push
xchg
sbb
stos
inc
scas
pop
push
inc
loope
mov
jle
adc
pushf
push
sub
call
test
into
ret
dec
cmp
pop
cld
pop
and
fdivrl
mov
es
mov
ljmp
inc
dec
lea
push
mov
aam
push
and
jg
ds
ds
adc
leave
fsubrs
dec
dec
mov
and
arpl
mov
mov
cmc
call
jp
jp
dec
push
adc
mov
sub
inc
mov
cmp
jb
or
inc
sti
lcall
xchg
ret
sub
adc
mov
sub
outsl
mov
cmpsl
testl
mov
dec
inc
in
lea
outsl
cs
stc
jg
push
out
std
mov
jmp
mov
loopne
inc
push
inc
adc
and
and
icebp
mov
pushl
loopne
inc
stos
aad
fucomi
mov
cld
dec
cld
fwait
sbb
cmp
incl
popa
cmp
jbe
cmpsl
cmp
mov
push
jp
mov
ss
dec
adc
xchg
lock
inc
and
in
mov
arpl
xchg
inc
aam
add
inc
std
inc
jae
or
pop
inc
mov
in
mov
outsl
mov
call
movsb
cmp
adc
jle
lret
insb
and
push
mov
out
mov
ljmp
lock
mov
add
cwtl
or
test
and
sti
sbb
mov
pop
int3
repnz
pop
mov
add
std
xchg
test
add
dec
mov
decl
jnp
and
pusha
cmp
mov
mov
xchg
jecxz
ja
das
sar
mov
out
addr16
out
mov
mov
cmp
mov
aad
incl
sbb
inc
pop
in
subb
aam
sub
std
lods
mov
addr16
imulb
adc
sbb
mov
hlt
testb
filds
dec
mov
add
xor
xlat
aad
mov
ret
pop
and
in
in
push
out
cs
test
popf
jnp
loope
push
pop
insb
daa
pop
sub
int
sbb
into
jmp
imul
cmp
mov
fs
and
jmp
xchg
sub
mov
mov
add
mov
xchg
xor
hlt
insb
and
xchg
imul
fcmovu
loop
leave
add
test
push
xor
adc
jl
mov
mov
shll
loope
mov
lock
daa
in
dec
jnp
frstor
divb
dec
aad
sub
pushl
and
jno
push
aaa
mov
mov
jb
aad
loop
lret
sahf
out
fdivr
pop
mov
push
lret
pop
fisubl
push
aaa
cmp
call
xchg
push
insb
es
scas
mov
mov
jmp
test
dec
xchg
movsb
cs
lcall
dec
cmpsb
pop
stos
scas
lods
dec
add
es
and
ljmp
lods
mov
incl
std
or
xor
stc
adc
mov
fisttpl
ret
int
decl
fildll
xchg
lods
imul
cmpsb
call
rcl
shrl
dec
repnz
mov
decl
xor
mov
adc
mov
jo
sub
add
js
lcall
lods
xchg
xchg
test
das
sbb
adc
mov
sahf
jbe
stos
pop
cld
and
sub
jo
movsl
adc
jecxz
jl
mov
pushl
shll
adc
rclb
cmp
outsb
mov
push
adc
ljmp
aas
incb
cmp
jmp
sti
mov
cmpsb
dec
in
xor
jae
adc
fistl
stos
or
push
jp
scas
sbb
mov
dec
scas
pop
fisubrl
out
jge
mov
lods
dec
mov
xchg
mov
decl
push
les
out
cli
and
adc
cmc
dec
jne
lret
fwait
decl
fs
loop
jecxz
lods
adc
mov
repz
sbb
out
dec
ss
jo
cli
pop
jge
incl
je
push
mov
sub
stos
arpl
movsl
sub
mov
jmp
les
cmp
sub
lods
lds
jbe
ror
stc
andl
jg
sub
repz
outsl
call
dec
fsubrl
mov
arpl
cmpsb
dec
cmp
sub
mov
cmp
dec
lcall
jmp
sti
sub
inc
shrb
pop
std
sti
rcr
rdpmc
adcl
in
dec
js
mov
push
jl
pop
push
adc
ficoms
es
sub
icebp
mov
out
lret
mov
jbe
int3
jecxz
dec
sarb
jl
arpl
dec
mov
loopne
sarl
adc
ljmp
xor
jg
mov
repnz
inc
sub
into
sub
jno
adc
push
inc
sub
aaa
sub
sbb
flds
xor
xchg
xor
add
dec
jo
int
xor
lcall
notl
mov
dec
inc
adc
int3
in
out
fcmove
fnstsw
pop
rcll
jbe
dec
adc
pushl
sub
mov
push
movsb
sbb
sbb
or
imul
stos
incl
or
lret
xchg
adc
lea
incl
ficomps
xor
mov
jae
cmp
loop
out
bound
mov
ljmp
push
or
mov
jns
clc
adc
roll
add
decl
add
ror
xchg
pop
push
adc
dec
sbb
pop
mov
dec
pushl
dec
movsb
daa
out
out
les
jb
and
cmp
jle
sahf
push
mov
xchg
jl
mov
inc
jmp
mov
jg
mov
pushl
lret
subl
pop
ja
xorl
jp
sub
push
cmp
jg
cmp
enter
mov
cld
movsb
loopne
mov
mov
xchg
dec
fcmovu
hlt
cmp
nop
add
ds
pushf
cli
xchg
push
sti
dec
ljmp
jb
adc
inc
mov
or
xor
outsl
adc
push
push
adc
mov
pushl
loopne
ret
add
sub
or
xchg
push
nop
cmpsb
daa
je
adc
sbb
jl
aam
and
movsb
sub
lcall
loopne
inc
in
sbb
sbb
push
xor
ljmp
mov
out
and
jp
addb
sbb
mov
jo
decl
outsl
les
out
sbb
outsl
das
inc
mov
or
dec
pop
push
and
push
hlt
scas
clc
dec
test
call
mov
jb
ret
cmp
lcall
pushf
movl
stos
adc
sbb
cmpsl
addr16
fcompp
fcmovnu
xchg
jmp
jno
jb
xchg
or
and
push
fwait
inc
add
cmp
imul
ljmp
xchg
flds
fdiv
adc
push
mov
int3
inc
in
dec
loopne
lcall
or
push
jb
stos
mov
pop
sbb
cld
mov
out
xor
outsl
xor
das
movsb
dec
sub
fdivs
stos
dec
xchg
fidivs
sub
hlt
fwait
adc
cmp
xchg
push
stos
push
pusha
lds
mov
jmp
nop
movsl
and
ljmp
push
lods
add
ja
imull
call
xchg
sub
mov
mov
sub
push
fstpt
lea
call
loopne
imul
jo
cli
sub
or
arpl
cmp
fnstenv
call
jle
jge
fsts
and
das
mov
aad
push
negb
mov
dec
icebp
jecxz
test
jmp
or
lods
dec
mov
cli
mov
pushl
push
adc
outsl
in
mov
lret
pusha
out
xchg
jns
repnz
ljmp
fcmove
mov
sub
xchg
xchg
mov
sub
jle
mov
cmc
incl
cwtl
lea
push
jecxz
mov
jg
stos
hlt
cld
mov
jne
mov
push
in
or
pop
dec
fstpl
inc
sub
incl
in
loopne
clc
repnz
adc
mov
xchg
mov
jns
test
mov
lock
add
repz
dec
sahf
mov
add
shrb
xchg
xor
or
addl
aad
mov
repnz
popf
add
fiaddl
adc
fisubrl
push
push
pop
and
push
inc
jo
pop
pusha
ret
outsl
sar
adc
adc
icebp
subb
xor
xchg
pushl
push
pop
and
lea
cmpsl
pop
enter
sbb
fbstp
cmp
loop
aam
cld
adcb
ljmp
mov
add
lods
or
mov
or
ss
xchg
les
push
pop
and
ljmp
cli
xor
push
ficomps
adc
and
ljmp
nop
mov
and
lea
cld
inc
mov
push
push
push
mov
pusha
ficoms
decl
cmp
or
inc
shrb
jl
ss
daa
movd
mov
pop
cmc
jmp
push
sub
adc
popa
shll
aaa
dec
in
mov
xchg
popa
mov
jmp
sub
lds
fmulp
mov
inc
jg
sub
les
mov
fdivr
incl
sbb
nop
and
push
push
in
shll
xchg
shl
inc
inc
jbe
pop
cld
jmp
cmp
xor
cmp
lahf
xchg
xor
inc
jb
in
fdivrl
jg
sahf
int
subb
pop
pop
jle
ljmp
or
mov
jnp
jne
jb
pop
jmp
and
shr
sbb
mov
sbb
jg
jmp
xor
or
loop
mov
pop
icebp
sub
sub
adc
sbb
stos
divb
adc
jg
pushl
stos
adc
into
aaa
fdivr
lret
outsl
rolb
je
mov
out
mov
pop
lock
mov
add
sar
xor
out
or
std
and
bound
pop
mov
hlt
hlt
mov
dec
call
cmpsb
aas
ret
mov
movsl
cmp
dec
pop
jmp
daa
push
nop
rcl
jecxz
adc
dec
cmp
cld
and
mov
scas
mov
int3
inc
push
jns
cmpsb
sbb
cmp
mov
sbb
jle
adc
jno
sbb
int
insb
sub
dec
push
jno
jmp
sub
loopne
into
es
push
sub
mov
mov
jp
test
ds
inc
dec
incl
or
into
xor
push
mov
ffreep
cwtl
adc
pushf
out
aaa
pop
iret
lea
ljmp
adc
fsubrp
test
mov
lret
push
lcall
pop
es
mov
add
and
pushf
inc
cmp
mov
and
fldl
and
inc
xor
dec
push
dec
out
xchg
out
mov
jmp
inc
cmp
xor
xchg
and
ljmp
mov
xchg
dec
sbb
frstor
or
movsb
ror
xchg
scas
or
sbb
sarb
push
cwtl
jns
ja
clc
fbld
arpl
cmpsb
sti
into
inc
adc
xchg
jne
mov
sbb
mov
mov
test
adc
mov
pop
rclb
outsb
push
and
test
rcrl
emms
cltd
or
push
push
neg
stos
mov
mov
add
icebp
or
xchg
imul
out
fwait
xchg
insb
adc
inc
call
mov
cmp
jbe
push
pop
loope
fs
xchg
outsb
or
ljmp
mov
fs
shll
xchg
sub
insl
or
jmp
stos
pusha
xor
lea
mov
xchg
andl
pushf
lret
or
incl
out
mov
inc
in
add
mov
cmp
fsubs
mov
cmpsl
inc
jle
jb
dec
lods
jp
mov
clc
rorb
ljmp
data16
adc
adc
pop
add
xlat
scas
sub
in
ljmp
lcall
inc
push
or
out
jns
mov
sbb
test
aaa
fldl
push
les
inc
push
pop
loop
jg
mov
sub
enter
scas
ljmp
call
out
cmp
cmpb
hlt
jmp
push
jg
andb
jnp
pop
sbb
daa
out
mov
jmp
dec
test
in
sar
mull
lods
imul
sbb
cmp
repnz
pushf
adc
roll
mov
out
sbb
inc
decl
lods
pusha
mov
mov
ljmp
lds
shlb
gs
iret
stc
cmp
sub
movsb
repnz
clc
push
cwtl
leave
das
jmp
es
clc
pushf
and
sahf
mov
ljmp
dec
pusha
loopne
sub
inc
lret
or
pop
insl
lods
pop
repz
add
xchg
movb
and
in
lret
mov
dec
inc
loope
idiv
call
pop
test
nop
les
ds
fistl
lock
je
sahf
jp
insb
lods
aas
in
jbe
scas
cli
test
pusha
clc
pop
mov
lods
ljmp
cmp
jnp
sub
lret
in
pop
out
repnz
daa
mov
test
mov
jbe
enter
xor
out
mov
fs
or
jg
jle
cmp
jle
fsubrl
loop
rcr
lea
push
clc
xchg
lds
and
jmp
sub
pop
lds
pop
push
cmp
cmp
test
out
jg
add
leave
adc
ljmp
lcall
mov
mov
test
adc
lcall
repz
int3
fs
jmp
inc
jge
mov
mov
ljmp
jmp
adc
add
cli
insl
es
aas
sbb
mov
or
sbbl
inc
push
push
push
jae
stos
cltd
xchg
cmp
dec
call
pop
mov
adc
cmp
leave
xchg
sub
aam
ljmpw
std
imul
pop
test
xchg
cmc
std
mov
or
add
push
mov
cmpsl
aam
jno
sti
mov
lods
adc
ja
ret
fucom
std
adc
push
ljmp
adc
push
xor
mov
fdivrs
cmpb
mov
xor
mov
jg
mov
push
xchg
push
and
xchg
xor
mov
jg
cmpb
pop
add
out
leave
loopne
paddsw
and
addr16
mov
cmpsb
ljmp
lods
add
xlat
sub
sbb
mull
xchg
out
mov
decl
push
cmp
pop
rclb
pusha
jmp
or
mov
pop
xor
call
jno
mov
fimull
addr16
pop
jno
repnz
xchg
lods
xchg
pusha
lods
inc
imul
popf
rcll
mov
inc
adc
inc
sbb
mov
movsb
add
ficoms
insl
pop
pusha
pop
test
insl
leave
mov
xor
xor
mov
lods
filds
push
push
or
nop
cli
or
ljmp
add
idivl
cmp
outsb
and
or
inc
cs
decl
adc
mov
jne
in
jb
xor
dec
inc
shl
mov
aas
aam
test
out
lret
jge
pop
xor
mov
cmp
add
push
jge
mov
das
cmpsl
push
add
push
je
ljmp
test
push
popl
fwait
pusha
adc
pop
adc
cmp
cmp
push
or
jmp
inc
outsl
push
les
decl
out
xor
xor
xchg
fisubrs
sub
insl
xor
lods
in
adcb
and
sarl
outsb
pop
lods
or
rcrb
hlt
mov
xchg
jg
aam
adc
test
mov
inc
or
nop
ljmp
pushl
cld
lea
in
mov
and
insb
bound
jmp
jns
or
cwtl
rcl
mov
cli
ljmp
dec
pop
adc
rorb
movsb
mov
ljmp
push
call
fsubl
int3
loopne
push
xor
sti
jb
lcall
pushl
sbb
mov
inc
inc
sbb
sbb
mov
push
andl
jmp
mov
lahf
push
xchg
sub
inc
mov
aaa
cwtl
es
pushl
mov
dec
dec
dec
dec
mov
xchg
fwait
and
imul
mov
lods
mov
call
std
icebp
mov
xlat
test
pop
in
clc
mov
push
mov
lret
jmp
ljmp
cli
shll
pop
xor
outsl
sbb
fs
ret
out
sahf
jb
movsl
mov
adc
fldt
bound
jae
decl
rolb
lret
jno
leave
pop
jle
xlat
pushl
xchg
jae
xor
push
lods
outsb
lcall
inc
repnz
push
out
xchg
mov
fdivrl
mov
int3
faddp
ja
dec
push
pop
nop
std
mov
xor
shl
mov
cmpsl
sub
add
cmp
or
mov
fisttpll
repnz
std
in
movsb
jl
mov
cmpsb
scas
fisttps
push
xchg
mov
leave
pop
ljmp
pushl
xor
lds
mov
and
cmpsb
hlt
mov
and
and
fwait
lods
inc
and
rolb
loopne
dec
mul
pusha
stos
scas
adc
ds
xchg
scas
jg
sarl
enter
stos
pop
push
movsl
push
lcall
mov
xor
mov
mov
lret
fidivrl
dec
cmc
mov
pushf
js
ret
sar
ljmp
lock
push
mov
dec
mov
mulb
cmp
fnstenv
repz
popf
out
cmp
decl
jo
dec
mov
adc
scas
and
cmp
inc
cmp
scas
jmp
sub
jae
jne
stos
inc
pop
sbb
es
es
cmc
stos
pop
movsl
test
adc
icebp
mov
cmp
arpl
out
xlat
outsb
int
fmuls
or
ljmp
add
xor
cmp
in
inc
mov
mov
ds
fcomps
dec
push
mov
in
adcb
inc
mov
pop
mov
dec
stc
mov
cltd
mov
pushl
cltd
movsb
hlt
repnz
pop
fs
pop
mov
jle
jns
dec
dec
lds
xchg
icebp
add
dec
cs
mov
sarb
rorb
ret
xlat
pop
push
popf
dec
out
cmp
movsl
pop
adc
jl
lods
enter
jg
ss
add
shll
dec
icebp
test
das
mov
aam
push
jns
sub
out
in
scas
mov
push
ss
xor
sub
shr
or
push
psadbw
sbb
adc
hlt
mov
pushf
jno
lcall
mov
pop
push
pusha
and
inc
adc
xchg
icebp
jl
xchg
mov
sub
jo
incl
sbb
jno
icebp
or
mov
or
cltd
shl
pop
sub
inc
xor
push
jmp
push
sub
mov
jmp
jl
cmp
mov
pop
sub
ss
lahf
dec
int3
daa
rorw
fs
pop
cmp
movsl
adc
mov
cwtl
sbb
jge
cmc
imul
xchg
adc
icebp
pop
ljmp
int3
in
fidivs
mov
inc
sbb
push
adc
rcrb
fmull
fcmovu
outsb
aad
in
lahf
dec
sbb
insb
arpl
inc
aad
adc
cmpsb
jo
push
mov
sub
and
roll
ja
xchg
movsl
lret
incl
into
test
test
or
mov
adc
aas
mov
sub
incl
cmc
das
adc
jns
xor
sbb
ret
mov
gs
add
pop
mov
int
ljmp
push
push
mov
sahf
mov
xchg
mov
mov
in
jecxz
mov
push
leave
dec
sub
lcall
lahf
sti
and
stos
enter
ss
xchg
or
out
add
mov
xchg
in
or
test
lcall
movsb
mov
jge
lcall
pop
mov
cld
cli
or
lret
divl
insb
or
test
xchg
rorl
ljmp
xor
jg
fadd
or
xchg
aaa
aam
mov
pop
repz
fdiv
push
filds
xor
lods
push
fwait
loop
daa
aam
adc
ficompl
ja
xlat
jp
jmp
arpl
add
jl
popa
orb
add
inc
stc
xchg
ja
ss
ljmp
jne
out
scas
insb
int3
inc
jo
movsl
pop
in
push
adc
mov
xchg
sar
adc
arpl
movsl
test
sbb
leave
gs
mov
push
mov
push
ljmp
sub
outsl
scas
in
dec
test
movl
loop
les
and
inc
jl
mov
dec
mov
and
add
cli
pushl
repz
dec
std
lock
movsl
pusha
pop
outsb
int3
xchg
in
pusha
incl
or
fisubl
popfw
add
cld
cmp
and
xor
ds
jns
pop
xchg
pop
sbb
insl
xchg
es
subl
sub
or
dec
movsb
jg
scas
outsb
add
gs
out
add
addb
xchg
outsl
mov
jp
and
push
push
lods
test
lcall
lds
subl
lds
xchg
ret
inc
or
mov
outsb
testl
jmp
adc
dec
jnp
and
outsb
je
or
clc
and
mov
mov
push
xor
decl
xchg
jecxz
mov
inc
cmp
adc
lcall
lahf
testl
je
adc
popf
xor
hlt
push
mov
jae
leave
ret
adc
mov
test
pop
mov
inc
and
cmp
scas
or
pop
xor
mov
mov
call
pusha
push
insb
repnz
decl
stos
les
mov
add
hlt
sub
pop
mov
les
jno
adc
sub
lcall
jo
add
push
repz
fidivrs
popf
imull
test
push
scas
jmp
pop
xchg
sub
xlat
cmc
leave
adc
or
dec
rclb
js
lret
cmp
outsl
inc
and
sub
ss
xor
lret
mov
fcomps
push
ljmp
pushl
std
cli
cmp
enter
ja
fldcw
stc
pop
and
mov
imul
add
das
cmc
js
ret
loop
dec
mov
pushl
push
mov
cltd
icebp
lods
jae
jmp
pusha
rcr
shl
sarb
and
lcall
xchg
jns
sub
push
cmp
movsl
mov
push
int
sbb
fs
jmp
or
lahf
or
jne
dec
adc
insb
cmp
popa
movsl
mov
loope
ret
dec
roll
cmpsb
rcl
dec
in
jne
pop
jl
fisttps
xor
rcrb
stos
pushl
adc
add
cwtl
push
mov
fdivrs
call
adc
add
cmp
lcall
roll
xchg
jp
push
data16
adc
dec
sbb
insl
mov
fdivs
sbbb
mov
fwait
sbb
imul
loope
jmp
aam
mov
push
mov
sar
clc
lahf
xor
sub
or
sbb
mov
and
inc
xorb
add
and
push
imul
pop
repnz
jmp
mov
repz
dec
adc
jo
xor
sub
or
lods
pop
xor
call
loopne
test
push
xchg
popa
rolb
shrb
lcall
sti
jp
jnp
dec
jle
add
cmp
pop
pop
pusha
aad
cmp
lock
pushf
test
inc
and
xor
std
mov
mov
insb
push
adc
push
cmpsl
stos
push
dec
cmp
test
pop
sahf
mov
in
cmp
xchg
push
ss
jns
mov
mov
lret
jno
adc
jne
mov
enter
ljmp
jbe
mov
mov
in
cmpsl
dec
pusha
add
and
xchg
test
shld
out
sbb
lcall
lock
js
test
push
xchg
cli
loope
out
loope
scas
outsl
es
add
test
sub
dec
xchg
loop
lret
or
push
xchg
imul
pop
xorb
push
jg
in
add
mov
lods
cmpsl
inc
pop
pop
popa
xor
ljmp
clc
decl
out
jo
imul
mov
enter
push
jmp
xor
loope
mov
cwtl
inc
subb
push
pop
pop
adc
leave
shll
sbb
cmc
aaa
jmp
pop
test
cmovno
ret
data16
bound
jg
lock
out
movsl
or
movl
jmp
repz
test
stos
xlat
orb
add
lcall
in
sbb
ret
jbe
data16
call
std
out
pop
jbe
in
add
outsb
jo
cli
or
aas
dec
enter
and
outsb
cmp
lcall
nop
shrl
xor
or
inc
shl
mov
test
call
imull
cmpsl
and
or
jns
sub
jl
adc
jno
and
lcall
jmp
inc
sub
sbb
je
cld
add
jo
cmp
popf
xchg
rcl
xlat
mov
adc
or
in
xor
jp
inc
mov
out
test
outsl
or
arpl
jg
jo
imul
std
sub
inc
mov
incl
adc
mov
sbb
std
xor
call
mov
jns
adc
stc
jbe
jmp
cmp
jne
cld
repnz
mov
push
jne
cli
sub
sbb
cmp
or
xor
test
call
in
xor
ds
sbb
mov
inc
aas
mov
inc
pop
mov
ja
dec
stos
dec
pop
and
push
icebp
jb
addl
ljmp
lret
das
push
xchg
dec
jo
lea
fstp
in
pop
mov
sub
push
xor
mov
in
gs
mov
fmull
push
sub
mov
ljmp
loope
out
repz
and
fisttpll
mov
clc
lea
and
iret
adc
into
call
mov
pop
lock
sub
lock
mov
sbb
in
test
out
xchg
fstps
or
xor
arpl
jge
push
inc
pop
dec
fs
call
push
ljmp
in
pop
xchg
adc
push
inc
fbld
mov
call
pushf
jmp
dec
outsl
in
add
flds
lcall
jb
or
scas
sub
pop
popf
push
mov
jb
enter
mov
mov
mov
pop
das
sar
decl
ja
dec
add
mov
test
adc
clc
scas
test
stc
jg
scas
xchg
scas
in
dec
jbe
lcall
inc
lret
shrl
adc
sub
add
push
iret
out
je
mov
xchg
xchg
jo
push
mov
movsb
aaa
mov
jmp
scas
pop
imul
call
popf
pop
aaa
pop
sub
rorb
mov
pop
lcall
lods
ss
dec
or
pop
mov
int3
aad
push
pop
xchg
and
jg
push
mov
pusha
dec
popf
sub
adc
stos
xchg
xor
addr16
call
jmp
aaa
ljmp
fisttpll
enter
or
inc
jge
sarb
aas
inc
gs
push
lcall
fnstcw
lahf
xor
stos
cld
mov
and
inc
mov
call
jp
xchg
mov
pusha
or
mov
mov
sub
scas
mov
push
test
pusha
mov
cld
mov
and
dec
inc
adc
hlt
inc
cmp
adc
lret
rcrb
inc
mov
fwait
cmp
dec
enter
lahf
imul
jmp
gs
dec
ljmp
cmp
sbb
dec
ljmp
js
insl
lods
popfw
imul
in
mov
cmc
add
lcall
cmp
in
and
push
xchg
in
or
imul
mov
mov
pop
sub
xchg
push
arpl
fdivr
ljmp
sti
adc
loope
xor
mov
adc
mov
cmp
fs
aam
add
leave
dec
mov
rcll
xchg
pushf
ja
jns
icebp
sarb
inc
sub
cld
call
gs
enter
or
push
add
push
adc
cmp
mov
jmp
adc
push
sub
addl
inc
sbb
mov
cmpsl
int
scas
pop
dec
and
out
mov
xchg
daa
cwtl
dec
es
xor
and
decl
lds
cmpsb
pop
xchg
rcll
jo
decl
call
arpl
sti
pop
fists
sub
lods
mull
cmp
es
lret
das
sar
ljmp
lret
rclb
inc
fbld
or
pop
jns
incl
popf
jb
inc
mov
in
lock
ror
popa
testb
xchg
jecxz
jge
pop
dec
cmpsl
ljmp
clc
push
xor
insl
gs
fadds
pushf
stos
jae
icebp
and
incl
add
adcl
ds
xchg
push
decl
add
pop
mov
push
mov
dec
pop
and
sbb
and
ret
pop
cmp
push
xor
pushl
test
adc
adcl
lret
sbb
mov
add
xchg
pushf
mov
jmp
pop
insb
inc
mov
sbb
pop
arpl
inc
sub
lahf
stos
lcall
pushl
bound
fsubp
xchg
cwtl
iret
pusha
xchg
lods
cmc
aaa
je
lods
jecxz
ror
xchg
xorl
inc
in
ja
pusha
outsb
sub
mov
mov
pop
sar
push
dec
xlat
mov
scas
lcall
cli
cmc
sbb
gs
dec
adc
pop
daa
inc
cmp
sub
je
mov
add
mov
pop
mov
sbb
out
jae
cmp
mov
decl
xor
inc
sti
lret
or
nop
xor
enter
pop
ss
data16
mov
daa
sar
shl
fisttpll
std
pop
pop
mov
mov
mov
insb
std
ret
jge
or
std
xchg
or
dec
jecxz
sar
cmpsl
aas
cmpsl
sahf
es
ret
dec
shll
push
into
test
or
imul
pushl
push
lock
mov
mov
mov
aad
xchg
lret
fcoml
mov
clc
xchg
or
sbb
pop
test
jge
loopne
dec
mov
incl
fwait
bound
sbb
add
sar
pusha
stos
fwait
or
pop
jbe
sbbb
cmc
ljmp
ret
cmpsb
mov
outsb
aad
les
and
cmp
mov
jmp
outsl
xchg
ss
dec
in
enter
and
xchg
out
dec
sahf
call
push
xchg
add
lea
sbb
add
mov
inc
hlt
or
nop
jne
push
push
stos
dec
push
addr16
hlt
sbb
xchg
fldenv
xchg
pusha
fisubrs
xchg
dec
push
fs
sbb
mov
loopne
scas
addl
inc
jg
int
mov
push
mov
stos
leave
test
jno
mov
sbb
push
push
outsb
loope
jmp
dec
mov
int
test
movsl
hlt
subb
dec
mov
xchg
pusha
stos
sub
xchg
cli
popl
js
jmp
jns
pop
pusha
jp
sub
adc
dec
jae
stos
divl
pop
xorb
cld
rol
jl
jae
adc
loopne
jo
decl
out
imul
fisubl
mov
pop
call
jmp
pop
sub
jnp
testl
inc
dec
sub
rcl
lahf
aad
faddl
incl
sbb
fiadds
nop
daa
mov
and
cmp
fdivrp
push
lods
mov
lea
daa
adc
dec
or
inc
adc
scas
sahf
in
lahf
inc
mov
adc
mov
jo
mov
cmpsb
jle
cmpsl
ret
ret
xchg
test
andl
or
push
fs
incl
push
pop
mov
xor
xorb
scas
clc
call
into
mov
push
dec
jno
sub
cmp
je
in
das
je
lock
mov
and
xchg
fiaddl
pop
fsubl
xchg
and
loopne
lcall
out
mov
pop
in
and
mov
and
push
dec
dec
mov
add
inc
outsb
ficoml
inc
data16
mov
pushl
jb
xchg
outsl
dec
sbb
pop
test
pop
or
punpckhwd
leave
push
mov
scas
stos
mov
scas
frstor
or
mov
xor
loop
mov
out
sub
jb
nop
sbb
call
mov
xorl
jmp
loope
sub
mov
inc
jbe
int
das
lods
lcall
or
stc
scas
scas
mov
or
fcomps
mov
cld
or
mov
lcall
mov
pushl
dec
jb
cld
adcb
xor
jo
inc
out
push
add
jge
call
sbb
shlb
sbb
ret
pop
push
je
ljmp
sub
movsb
cmp
stos
jp
xor
int3
cmpsl
cmpsl
push
sub
push
dec
decl
mov
cmpl
jno
mov
or
aas
push
mov
dec
incl
arpl
shrb
sub
sbb
dec
shlb
and
les
dec
sbb
ds
xchg
cmp
push
fdivl
push
pop
sbb
xor
incl
cmp
jp
jnp
jne
sub
push
jg
fcmovnb
mov
mov
mov
jp
dec
adc
in
fnsave
jge
fwait
lret
pop
cmpsb
imul
jae
inc
adc
incl
sbb
lock
jno
sub
lcall
int
aam
adc
pushl
sub
out
xor
inc
mov
insb
mov
xor
xlat
ljmp
popa
or
repz
pop
sbb
pop
or
xchg
sbb
cmp
add
mov
adc
cmp
xor
pop
dec
mov
and
cltd
jmp
mov
or
mov
daa
mov
and
mov
in
xchg
mov
cli
outsb
outsl
stos
fnstenv
pop
ljmp
ja
dec
xchg
or
lret
xchg
pop
cmpsl
dec
adc
js
jmp
adc
inc
mov
out
pop
out
jnp
pusha
int3
adc
dec
xor
test
aaa
adc
xor
xchg
add
cmpsl
pop
rol
int
hlt
js
dec
push
ljmp
and
int
fisubrl
and
jp
push
pop
mov
outsb
pop
ss
cmp
xchg
sti
mov
adc
and
jno
jl
xlat
pop
push
or
mov
jle
out
cmp
mulb
mov
fs
mov
jge
add
ja
ljmp
test
leave
cs
xlat
insl
cs
dec
sub
sti
ljmp
adc
mov
inc
in
in
xchg
mov
fsubl
movsl
jl
mov
cld
stos
dec
insb
jb
jge
mov
push
jge
rorb
repz
adc
cmpsl
nop
bound
in
clc
ljmp
pop
mov
outsl
insb
mov
or
jns
fstpt
cmp
push
jle
cmp
adc
sbb
retw
adc
bound
mov
lcall
cmp
pop
jne
lret
lods
movsb
mov
sete
popf
outsl
or
pop
xchg
imul
mov
call
mov
jnp
out
pop
rcrb
xor
andb
decl
inc
call
roll
cs
xor
outsb
add
loope
shrb
in
mov
add
lret
call
push
shlb
aad
inc
cmpb
out
nop
sahf
add
and
pop
es
xor
inc
pushf
or
lods
nop
clc
sbbl
sbb
pushl
ja
mov
leave
mov
pop
mov
dec
xchg
ljmp
inc
xchg
mov
add
mul
lcall
fs
mov
out
mov
mov
stos
inc
test
les
add
jne
mov
outsb
loope
lcall
das
mov
mov
push
arpl
mov
mov
out
cld
mov
lcall
cmp
add
adc
adc
lcall
pop
adc
pop
cmc
scas
test
sub
cmp
ljmp
dec
push
enter
xlat
xchg
cli
lret
nop
out
jg
pop
and
sti
ret
jne
push
inc
mov
and
mov
jns
and
scas
mov
cmc
decl
and
lods
xchg
sub
lret
nop
push
sbb
mov
mov
mov
or
int
push
insb
sub
cmpb
sbb
mov
fisubs
lods
dec
mov
xlat
out
push
adc
mov
inc
mov
std
out
test
cmp
cmp
xchg
test
push
inc
pop
test
movsl
pop
stos
adc
jmp
popa
std
faddp
jne
imul
cmpsb
data16
and
sbb
in
mov
xchg
and
or
lcall
cmpsb
aad
xchg
jae
inc
dec
push
fbstp
mov
scas
inc
flds
popa
mov
push
fbld
in
lods
test
xchg
js
cmpsl
call
pushl
ljmp
lret
cmp
jle
mov
movsl
and
decl
mov
sub
hlt
loopne
push
mov
scas
fstl
scas
add
jmp
mov
push
fsts
shl
pop
inc
xor
sbb
gs
and
pushl
dec
pop
cmp
sub
pop
mov
inc
sub
push
or
mov
xor
mov
xor
icebp
pop
dec
push
push
and
out
mov
cmp
mov
into
add
jmp
push
or
mov
cmc
dec
and
mov
and
fcompl
pop
and
scas
inc
xchg
sub
push
sbb
movsl
mov
mov
fbstp
inc
jnp
mov
jge
adc
push
xor
rcr
adc
mov
add
call
xchg
xchg
jae
sbb
sbb
popa
scas
in
std
mov
sub
pushl
jns
add
inc
jb
movsl
popl
sub
jmp
sbb
movsl
dec
jge
leave
scas
adc
push
mov
mov
sbb
mov
das
andl
and
push
sub
decl
clc
cwtl
push
or
shll
idiv
mov
sarb
jl
push
aaa
inc
ja
mov
in
and
sub
fisttps
mov
push
test
xor
sub
cltd
dec
cli
repnz
rorl
pop
ret
test
pushl
in
out
orb
rcr
fwait
xchg
add
xchg
and
ss
sar
ljmp
xchg
lcall
scas
out
cmp
pusha
cmp
and
test
xorl
fcomip
incl
fisttpl
icebp
push
dec
xchg
decb
adc
mov
jo
push
int3
mov
loop
in
rcl
sbb
pushl
hlt
mov
out
icebp
jne
pop
dec
pop
test
stos
mov
jp
sbb
or
sub
ljmp
rorl
shrl
fnstsw
leave
adc
mov
ds
cmpsb
or
cmp
cli
push
mov
fwait
adc
das
or
inc
lret
mov
fisttps
popf
test
mov
push
idivl
out
add
cmp
mov
out
lds
sub
push
jg
cli
dec
xchg
jl
push
mov
mov
push
fsubl
je
sarb
repz
loop
call
jg
and
outsb
mov
inc
adc
xor
test
fcmovbe
leave
xchg
ljmp
xor
addb
mov
adc
cmp
mov
std
aad
cmp
ds
aad
mov
mov
incl
outsl
push
inc
aad
push
stc
dec
and
jnp
sbbl
cmp
sub
insl
or
ficoms
pusha
insb
inc
testl
mov
sub
lret
dec
xchg
js
cmp
decl
js
dec
xor
mov
xlat
and
cmc
cmpsb
jb
test
test
cmp
incl
lret
and
pop
mov
jne
xchg
in
inc
mov
aad
jbe
push
adc
pop
dec
jp
push
cld
lcall
pop
sbb
mov
repnz
mov
mov
xlat
mov
push
jbe
mov
xlat
into
inc
aas
jle
mulb
inc
mov
imul
xchg
clc
nop
pushf
mov
cwtl
aad
xchg
jge
imul
or
pusha
sbb
jo
outsb
out
mov
sbb
sub
outsb
add
pushl
cmpsb
out
sti
dec
mov
ffree
inc
enter
pop
testl
mov
call
pop
pop
loopne
add
test
out
push
in
fwait
sub
sub
pushl
fsubrl
fsubp
repz
int3
cmp
leave
repz
incb
xor
inc
pushl
jmp
ret
xor
mov
jo
mov
nop
lcall
fnop
lods
or
decl
cmp
sub
jmp
cmc
mov
cmp
xorl
mov
ljmp
sbb
subb
pop
mov
addr16
ja
inc
sbb
inc
mov
das
clc
mov
mov
cltd
neg
push
icebp
mov
sub
push
loop
dec
xor
add
mov
sub
mov
mov
int3
gs
sbbb
push
dec
dec
push
cld
jnp
jmp
dec
pop
adc
imul
std
jb
arpl
decl
xchg
or
cltd
fmulp
push
pop
cwtl
fsubrl
and
push
std
call
adc
dec
mov
icebp
adc
push
dec
mov
adc
sbb
sti
les
push
sti
xor
or
fldcw
push
and
jmp
call
aaa
mov
sub
daa
pusha
rclb
pop
dec
pop
pop
cld
mov
push
mov
inc
xchg
hlt
mov
movzbl
sbb
jmp
std
sbb
decl
mov
stos
test
jecxz
adc
icebp
out
xchg
movsl
ljmp
shll
lahf
and
cmp
insl
add
ffreep
outsb
in
pop
out
inc
iret
repz
fwait
mov
xor
decl
ffreep
add
jmp
in
dec
lahf
pop
push
data16
lea
testl
std
push
mov
ss
les
push
jne
mov
es
scas
inc
jge
dec
mov
jg
rorb
test
and
loope
aas
add
pop
push
lret
rcrb
jne
xor
pop
outsb
incl
xlat
gs
ja
adc
iret
test
pop
dec
repz
mov
popa
fwait
cwtl
iret
jl
pop
enter
jmp
mov
sbb
mov
ss
add
rcl
jle
call
outsb
out
mov
or
mov
cmp
mov
dec
sub
icebp
mov
inc
pop
mov
mov
shlb
dec
mov
sti
cmpsl
in
frstor
push
insl
jnp
mov
js
mov
jg
push
adc
pushl
and
xchg
push
mov
inc
movsb
inc
push
rolb
cwtl
xor
into
inc
lcall
imul
testb
cli
enter
xchg
inc
jb
add
xor
pop
mov
sbbb
fucomi
sbb
and
ljmp
jmp
xor
sbb
push
add
jge
mov
neg
mov
dec
dec
std
adc
insl
arpl
imul
sbb
sarb
xor
push
mov
incl
test
mov
dec
add
pop
test
push
adc
enter
inc
call
inc
jl
popa
fucomp
adc
or
scas
jecxz
ret
mov
mov
loop
add
jl
js
dec
das
in
std
push
rcrb
jmp
add
cmpsb
mov
imul
cltd
cmp
mov
incl
repnz
pop
push
cld
pop
push
das
or
dec
fwait
inc
lods
jae
hlt
sub
cli
cmpsl
pushf
popa
iret
popf
sub
lcall
mov
loop
test
sbb
in
aad
dec
sub
mov
ds
push
incl
add
cmp
sub
jbe
jbe
mov
mov
shll
les
add
cmpb
es
test
aaa
scas
popa
shlb
and
xor
xchg
int
xchg
test
jae
pop
cmp
xchg
mov
cmp
jmp
popa
scas
fisttpll
std
cmpl
out
pop
and
mov
shlb
push
adc
in
fwait
push
or
jo
sub
xlat
rorl
in
ljmp
adc
rcrb
jb
and
mov
out
xchg
icebp
jg
cmpb
push
mov
icebp
dec
ja
xchg
xchg
adc
push
dec
mov
gs
xchg
cwtl
ret
fistpl
push
xchg
and
mov
std
call
mov
jbe
adc
hlt
cmp
lret
cwtl
mov
add
pop
mov
mov
in
lods
mov
arpl
mov
lds
call
adc
jl
out
sbbb
test
lods
jecxz
ret
mov
jno
aas
push
inc
sbb
cld
xlat
mov
lods
aad
adc
call
jno
dec
adc
loopne
pushl
push
mov
subl
and
cmp
cmovg
dec
call
inc
jns
rolb
xchg
movsb
mov
xor
test
dec
iret
movsb
sbb
pushl
sbb
lahf
dec
hlt
cmpsl
jg
mov
push
mov
or
hlt
fcomps
loope
mov
ja
inc
dec
ficoml
jg
jg
decl
xchg
stos
out
mov
push
push
add
mov
xchg
push
mov
mov
xor
pop
decl
sbb
xchg
sbb
jbe
mov
ret
scas
int3
dec
jne
sbb
mov
fwait
mov
xor
cmpsb
cmp
or
loop
leave
adc
push
cmp
fdivrp
stos
call
inc
mov
xor
inc
dec
nop
jnp
sbb
sub
sub
call
shll
inc
dec
push
ja
inc
mov
mov
add
sbb
and
clc
scas
movl
xchg
adc
scas
stc
add
jle
mov
das
xor
push
jg
mov
adc
scas
jmp
pop
mov
mov
lods
orb
js
pushl
sahf
xor
mov
out
cmp
loop
mov
push
std
sub
pop
mov
decl
sub
inc
scas
outsb
dec
jo
in
out
and
or
dec
call
xlat
icebp
sahf
sbb
mov
dec
mov
cmp
and
mov
jb
cwtl
and
push
popf
ret
jns
leave
je
xchg
dec
adc
xor
insl
movsl
mov
or
mov
pushl
inc
sahf
mov
mov
mov
fisttpl
sahf
jecxz
fcomps
lods
imul
mov
das
adc
inc
or
incl
or
sub
and
or
lcall
arpl
xor
or
and
lcall
push
jae
pop
aam
mov
ja
sbbb
or
movsb
ja
popa
mov
cli
pop
xor
inc
sub
mov
xlat
mov
or
push
adc
add
inc
leave
dec
arpl
xchg
add
pop
aam
push
pop
insl
xchg
push
push
mov
subb
lahf
push
std
incl
jecxz
cmp
and
and
lahf
or
adc
or
push
loopne
lcall
mov
sbb
clc
mov
int
aad
inc
adc
lcall
pusha
addr16
pop
mov
pushl
mov
addb
mov
js
int3
cwtl
mov
in
xor
shl
adc
add
into
add
call
out
dec
jecxz
mov
cmp
xor
push
out
push
mov
xchg
fstl
dec
movsb
andl
lods
std
pusha
mov
dec
xor
mov
out
pushf
sbb
inc
mov
clc
repnz
call
push
push
dec
push
scas
popf
fldl
mov
movsb
repz
stos
mov
pop
and
or
push
idiv
jmp
mov
inc
or
ret
cmpsl
ss
int3
xor
inc
xor
lret
mov
and
enter
jmp
mov
iret
imul
je
popf
out
inc
pop
int3
xor
call
jmp
pop
xor
in
je
or
lds
jle
jl
imul
subb
xlat
ret
clc
jge
adc
div
jmp
and
xor
aad
cwtl
pushl
test
push
fwait
outsl
out
cmpsb
cmc
lret
cmp
cmpsb
mov
imul
testl
sub
mov
sbb
jne
lods
push
ss
push
aad
pop
lods
movsb
xchg
xor
out
pop
and
cmpsl
dec
sbb
mov
rol
push
jg
sbb
push
push
into
jne
adc
pushl
inc
push
testl
mov
sti
jmp
lcall
incl
cld
mov
add
and
xor
lcall
daa
push
inc
lret
mov
push
adc
jg
mov
lcall
pop
sbb
roll
into
test
jmp
pop
sub
and
sbb
test
rcll
test
dec
adc
pop
cltd
dec
pusha
xor
int
jno
loopne
pushf
test
daa
test
sub
mov
xchg
inc
js
cvtdq2ps
std
lea
mov
sub
mov
mov
loop
mov
incl
cmpl
or
ja
cs
rcrl
cmp
push
test
push
andb
xchg
xor
dec
fsubl
aad
inc
add
aam
sbb
mov
insl
popf
adc
jae
sbb
dec
sbb
cmp
mov
jg
fbld
test
repz
xchg
or
loopne
decl
mov
jae
test
sbb
leave
push
in
iret
rcr
inc
inc
cmp
ljmp
push
out
scas
sub
xchg
movsb
and
jp
in
in
push
incl
outsl
insl
inc
push
jl
sbb
push
mov
push
rcrb
cmpsb
fldcw
cmp
inc
cltd
outsl
lcall
inc
or
mov
js
popf
aam
movsb
pop
int3
xorl
sub
es
mov
inc
push
and
fistl
and
and
data16
jae
dec
call
xor
stos
outsl
mov
mov
dec
popa
imul
repnz
cmp
jg
aam
adc
push
jp
or
push
ja
cmp
pushl
jecxz
sub
fdiv
mov
leave
aaa
dec
dec
iret
cwtl
icebp
sub
out
cmp
jp
icebp
mov
sub
loope
incl
jl
add
leave
enter
sahf
int3
cmp
push
adcl
insb
dec
fs
divb
lcall
add
sbb
push
xchg
and
cmpsb
inc
fs
ljmp
scas
cmp
push
adc
cmp
cmp
dec
test
call
xor
sub
sub
fnsave
in
out
and
and
stos
nop
stos
mov
stos
sub
jnp
sbb
jb
adc
jns
mov
adc
stos
jmp
into
jnp
aaa
mov
int
and
add
and
push
dec
xchg
cmp
add
sub
xor
inc
pop
push
rol
and
cs
add
repz
std
clc
mov
lcall
mov
lea
icebp
inc
fwait
xchg
dec
push
je
jae
loop
mov
ja
out
push
icebp
lcall
or
sar
ljmp
lods
shlb
lds
rorl
in
shrb
dec
in
verr
daa
mov
fdivr
cmp
jle
divb
roll
adc
jnp
pop
aam
cmp
mov
in
stos
lea
in
cwtl
cmp
cmc
fdivr
lcall
test
clc
jg
pop
movsb
pushf
add
loop
mov
lret
cli
push
scas
push
dec
push
fwait
pushl
adc
int
mov
jbe
orl
out
pop
test
inc
mov
and
pop
incl
xchg
sbb
clc
or
bound
fisubrl
ljmp
hlt
dec
add
repz
xchg
test
jbe
dec
jp
dec
add
lcall
mov
test
mov
movsb
cmp
dec
fwait
and
xor
adc
mov
scas
clc
fwait
stc
std
sbb
and
cltd
clc
ljmp
add
xchg
xor
cmp
sub
add
ljmp
jle
lretw
int3
inc
stos
sub
ss
loop
iret
fs
jmp
mov
push
or
in
sub
push
and
mov
bound
pop
add
xchg
xchg
pushl
fsts
dec
outsb
inc
sub
mov
xlat
imul
test
inc
mov
push
push
cmp
clc
lock
xor
icebp
mov
mov
in
flds
test
rorb
call
fisttpll
leave
insl
xor
call
loope
cli
stc
inc
cmp
sub
js
jl
add
dec
xchg
lahf
insl
movsb
nop
mov
popa
sub
sbb
cld
fstl
jg
incl
or
rcrb
and
mov
cmp
fstps
sbb
dec
xchg
add
insl
orl
cltd
pop
dec
add
xchg
loope
fbld
sbb
mov
sbbl
xchg
xchg
cmp
faddl
in
out
xchg
out
inc
cmp
ror
xor
ljmp
xor
pop
adc
sarb
je
xchg
mov
push
call
hlt
call
lock
stos
jge
push
loop
add
and
incl
sarl
enter
xor
daa
xlat
fs
cmp
cmp
inc
js
push
std
ljmp
mov
arpl
xor
pop
mov
js
into
shlb
fcomps
call
xchg
mov
push
mov
xchg
out
popa
cmp
call
sbb
out
mov
cli
jl
xor
inc
divb
cs
push
mov
lods
cwtl
add
jp
pop
or
stos
sbb
scas
loop
and
xchg
test
cs
dec
pop
sar
decl
xchg
shll
cmp
jecxz
mov
jnp
sub
arpl
out
mov
inc
movsb
sub
sub
add
dec
jns
cmpsb
je
call
cmp
mov
bound
mov
push
je
lcall
call
sbb
push
ds
cmpl
test
adc
adc
loopne
sub
fildll
add
or
dec
sahf
xor
jne
out
pop
jne
add
inc
xlat
rclb
jnp
jmp
push
xor
push
imul
test
in
jne
loopne
fistpl
je
xchg
or
cwtl
and
cld
out
aad
test
sub
push
mov
mov
cltd
inc
out
hlt
incl
cld
ss
mov
sti
cltd
mov
stos
jmp
fwait
scas
popa
into
jle
cli
outsl
and
lods
test
mov
and
ret
push
es
jge
jg
pushl
inc
aaa
adc
andb
or
dec
sub
cli
stos
jmp
push
push
das
jb
call
fisubrs
mov
cmp
adc
or
jge
xor
fldl
loope
push
xchg
add
decl
into
loop
adc
xor
cmpl
mov
cmp
xor
jmp
out
dec
sahf
es
fnsave
adc
ret
mov
lcall
dec
xchg
mov
mov
dec
push
jae
jbe
addr16
xchg
out
int
ljmp
test
fmull
lods
enter
or
lods
pop
and
insb
mov
ljmp
frndint
add
sti
push
adc
aad
sbbb
xchg
shrl
mov
jbe
mov
lahf
lahf
dec
outsl
dec
xorb
ljmp
gs
jl
adc
or
inc
push
jmp
pusha
mov
mov
jne
sub
inc
jnp
ds
outsl
sbb
imul
loope
popa
in
xchg
xor
jmp
add
roll
sbb
fwait
jb
dec
sti
andb
ret
and
into
mov
mov
es
cmc
dec
add
in
fstpl
in
je
enter
rolb
cli
int
inc
int
call
cmc
jmp
inc
pop
push
ljmp
pop
cmpsb
push
aas
xchg
mov
xchg
dec
jmp
dec
sub
fcmovbe
in
push
arpl
incl
sbb
sbb
mov
xor
stc
hlt
push
icebp
mov
pop
ljmp
fwait
push
repnz
test
add
xchg
movsl
jp
lea
jmp
xchg
shll
decl
loop
push
inc
push
push
jae
jbe
test
pop
fmulp
aas
pop
insb
pop
mov
filds
push
cmpb
sbb
les
push
ret
adc
push
cmpsl
sub
pop
test
in
call
jo
or
fwait
movl
lea
add
push
fistps
ret
jg
incl
add
mov
mov
sbb
cld
cwtl
pop
pop
dec
int
pop
xor
cmp
lock
incl
mov
inc
xchg
imull
jo
inc
mov
xor
daa
lahf
adc
mov
incl
fcom
jmp
xor
xchg
fstps
gs
stos
xor
push
andb
call
loopne
lock
in
jbe
xchg
cmc
mov
daa
cmp
pop
jmp
or
ficomps
lahf
inc
arpl
lds
mov
xchg
or
fistpll
mov
dec
andl
dec
lods
xchg
adc
mov
mov
insb
mov
jecxz
cmc
call
movsl
push
sub
leave
cmp
daa
add
add
and
and
andl
pop
mov
hlt
fwait
orl
mov
ds
sub
stc
fisubrs
xchg
mov
call
dec
pushf
movl
fisubl
inc
ljmp
lcall
das
enter
jnp
mov
push
test
push
xor
lret
mov
sbb
push
mov
xor
add
cmp
js
pop
push
jnp
xchg
pop
test
fdivrl
xchg
out
mov
push
adc
xchg
ds
std
ljmp
pop
or
std
ljmp
insb
inc
mov
in
mov
pusha
lds
mov
scas
lcall
lcall
add
push
xchg
arpl
outsl
sbb
xchg
imul
je
adc
ljmp
stos
loop
mov
mov
mov
in
in
sub
jg
loop
int3
data16
sub
push
mov
inc
sbb
jg
bound
outsl
clc
movsl
sarb
adc
xor
push
mov
mov
mov
pusha
xchg
fmull
data16
push
sbb
clc
fistps
out
aam
add
and
gs
daa
es
jle
mov
or
pop
dec
cld
or
das
cli
pop
inc
dec
loopne
push
lahf
rep
sbb
outsb
jno
add
pusha
dec
jae
pop
call
cld
scas
mov
cmp
sub
xchg
ret
sub
pop
jle
fisubs
call
cld
dec
iret
xor
mov
add
dec
test
mov
mov
jle
jmp
inc
daa
push
pop
pop
mov
test
out
mov
or
jecxz
pop
or
push
addr16
ds
out
and
add
or
xor
cltd
xor
jmp
jge
mov
dec
adc
daa
add
push
mov
jle
ljmp
decl
jae
vphsubwd
dec
jae
into
fcomps
icebp
xchg
pop
shll
insb
sub
jmp
and
mov
cmp
cmpb
ss
add
inc
xchg
mov
pop
or
jne
mov
cwtl
add
sbb
adc
jnp
or
dec
xor
ss
in
xor
sbb
jmp
lcall
fidivrl
andb
xchg
add
or
lcall
movsl
mov
push
push
xor
repz
sbb
adc
cmpl
fcomip
adc
pop
add
cld
dec
mov
jecxz
xchg
and
hlt
popa
push
ljmp
rorl
pop
test
add
mov
xor
pop
and
lcall
call
mov
clc
pop
ret
jl
or
jmp
aas
cmp
mov
cmp
daa
test
stos
enter
cld
jmp
stos
fisttpl
das
sub
inc
xchg
pop
lret
ljmp
inc
sbb
fidivl
outsl
cli
sbbb
inc
test
jmp
dec
dec
pop
ret
cmp
fcomip
sub
imul
pop
outsb
xor
mov
adc
lcall
mov
into
stos
push
insb
dec
cmp
imul
push
jg
aas
inc
out
cld
pushl
sub
out
lret
lods
jno
popa
adc
notb
xlat
mov
or
data16
lcall
jecxz
inc
xchg
sbbl
and
js
out
inc
stc
lcall
lret
inc
mov
or
pusha
push
push
dec
test
and
xchg
and
add
inc
mov
dec
dec
sbb
arpl
push
mov
scas
fcompl
fwait
cmp
mov
shll
punpckhdq
push
and
movsb
ret
out
fbld
mov
test
inc
movsb
fs
or
jmp
jmp
dec
pop
xchg
dec
das
xor
lcall
or
sahf
ja
adc
jns
scas
cli
lcall
sti
dec
hlt
inc
aas
mov
into
insl
imul
pop
nop
adcl
scas
std
es
std
or
add
test
or
cmp
jmp
push
lret
push
incl
xchg
push
mov
repz
scas
shl
mov
push
sahf
xchg
outsl
or
fcomip
call
loope
mov
sbb
lea
pop
or
jmp
clc
mov
adc
mov
fcomip
lcall
test
adc
adc
int3
iret
popf
dec
fists
mov
cli
jmp
inc
push
jl
clts
inc
dec
and
sub
out
std
ret
inc
mov
call
cld
jmp
out
and
dec
out
adc
add
fwait
adc
and
call
stos
push
sbb
ret
or
cltd
fnsave
ficoms
fcmovu
out
outsb
fcom
lods
fbstp
jmp
xchg
or
loop,pn
call
aaa
andb
jge
imul
lock
das
jg,pn
fdivs
pop
imul
in
jecxz
fimuls
arpl
sbb
push
fcomps
fcos
call
or
cmpsl
int
push
mov
ret
adc
adc
or
test
sti
decl
aam
vmovq
mov
loopne
jns
jne
or
push
call
rcr
loope,pt
push
jg
inc
mov
hlt
sbbb
jo
not
mov
and
outsl
xchg
repnz
xchg
push
lret
push
jmp
sub
dec
out
push
lahf
cmpsb
sub
lcall
sub
jo
jecxz
shl
imul
add
pop
call
and
ljmp
pop
jp
sub
xchg
adc
sbb
rcll
orl
daa
pop
mov
lcall
pop
ljmp
pop
scas
adc
dec
xchg
sbb
pop
mov
inc
movsl
mov
pop
inc
add
jg
cmpsb
cltd
add
push
push
insl
js
inc
jg
lock
cmp
addr16
pop
daa
incl
repz
mov
or
loope
xlat
or
sub
mov
sub
xor
lcall
add
ss
pop
in
repz
mov
mov
test
stos
testb
xchg
add
call
mov
testl
jmp
ja
mov
scas
pop
sub
add
lcall
cmp
sti
xorl
adcb
push
jecxz
mov
aas
ficomps
lcall
mov
ljmp
sub
lods
fdivrp
mov
push
ror
or
lahf
lds
mov
call
stos
insb
in
mov
mov
repnz
mov
sub
inc
and
scas
mov
sarb
pop
outsl
cmp
sbb
adc
call
push
cld
stos
push
sub
popf
insl
dec
mov
cmp
mov
mov
dec
xchg
and
sbb
ss
call
addb
mov
cmpsl
inc
and
or
in
jno
xor
jp
add
std
xor
outsb
rep
mov
cmp
cmp
dec
rolb
clc
sarb
fildl
mov
sbb
clc
clc
and
add
cltd
mov
mov
mov
cli
xor
cltd
mov
repnz
mov
in
add
cmp
out
gs
pop
ja,pt
xor
decl
les
pop
mov
dec
fisubrl
cld
data16
ljmp
push
cs
mull
popa
add
cwtl
jl
fisttpll
cmpsb
scas
sbb
les
decl
cmp
cmp
and
shlb
in
ds
sahf
pop
in
sub
ljmp
pop
sbb
pop
std
and
push
clc
lds
ja
jecxz
pop
xor
push
inc
lcall
test
cmp
iret
sti
shlb
or
fadds
xchg
inc
mov
add
jmp
adc
mov
adc
cmp
mov
jmp
cmp
or
mov
rclb
sub
std
or
push
bound
jmp
jns
sbb
mov
jge
lock
pop
icebp
mov
fisubrs
lods
fs
pusha
lcall
lea
jmp
ret
lea
addl
or
scas
cmp
pop
lock
call
mov
rorl
lea
in
mov
jnp
pop
dec
movsl
xchg
mov
dec
fcmovnu
int3
notl
push
subl
iret
movsb
sub
xor
shrb
nop
push
imul
cmp
test
cmc
push
leave
xchg
mov
and
push
insb
rcrb
push
cmp
mov
jmp
icebp
gs
mov
push
jb
test
sbb
inc
andl
imull
jns
fsubrl
ljmp
xchg
fistl
out
shll
mov
xchg
sub
dec
cmp
mov
adc
xchg
outsb
add
ret
and
mov
xchg
push
push
jmp
stos
and
pop
je
xchg
hlt
dec
ljmp
cmp
pop
rcr
pop
and
es
or
lods
or
out
lret
inc
cld
popf
incl
scas
inc
loop
xchg
and
jb
dec
lret
pushf
sbbb
or
push
std
sbb
repz
xchg
shl
icebp
add
xor
push
decl
adc
incl
and
dec
pop
les
test
lods
sub
lahf
gs
and
or
mov
mov
cmpsb
in
cmpsl
sbbb
das
adcb
lcall
test
cmpsb
test
stos
jno
pushf
mov
mov
dec
insl
in
rcrl
jmp
jp
and
cmpsb
dec
xchg
mov
mov
jmp
popa
mov
cmp
ljmp
adc
push
ja
lea
fisubs
cmp
popa
jp
push
mov
popa
pop
xchg
xor
jmp
inc
test
xchg
enter
xchg
xchg
mov
iret
or
sti
dec
scas
inc
jl
add
call
fistps
scas
mov
out
inc
mov
ja
mov
ret
dec
lcall
jl
sub
popa
inc
pop
push
ret
call
std
or
adc
xchg
jo
js
adc
je
mulb
fidivl
cld
mov
fidivs
push
mov
shrd
test
lret
lods
cmp
out
sbb
bswap
mov
add
xor
je
xor
out
mov
ljmp
push
or
xor
out
lods
int3
mov
jmp
add
mov
push
loopne
cmp
or
push
sbb
loopne
add
insb
pop
call
cmp
mov
hlt
xor
incl
xchg
jne
movsb
sahf
pop
mov
inc
andb
xor
adc
and
adc
decl
mov
js
jae
in
add
add
dec
pop
mov
mov
scas
dec
das
or
out
xor
pop
dec
test
lcall
inc
dec
mov
pop
or
jle
or
test
lcall
sub
xchg
fistpll
andb
insl
jecxz
repnz
mov
in
mov
push
mov
xchg
pusha
xor
cmc
loopne
push
sbb
lret
mov
mov
mulb
clc
adc
xchg
add
incl
xor
mov
mov
mov
lea
mov
test
jmp
in
adc
xchg
mov
cmp
cmpsb
lds
and
lahf
jp
dec
push
shlb
aad
imul
push
ljmp
lahf
dec
std
inc
scas
and
dec
jge
fldcw
cs
mov
pop
pushf
mov
cld
jmp
das
sbb
imull
or
rorb
lahf
into
jle
mov
mov
clc
decl
xor
test
popf
int3
xchg
int3
jg
fisubl
out
and
fnstcw
cwtl
dec
test
daa
jo
divb
push
sub
or
lcall
lcall
fs
mov
mov
push
cmp
fnstenv
push
lock
jg
dec
idivb
push
lods
add
lret
add
fs
aaa
sahf
loopne
lcall
jl
popf
pop
fisttps
cmpsl
stc
adc
mov
nop
mov
icebp
movsl
jg
decl
popa
jns
sarb
jg
shr
repnz
inc
push
push
jno
pop
call
enter
fsubrs
jge
dec
mov
stos
testb
adc
pushf
mov
mov
mov
nop
inc
sbb
loop
fwait
and
in
mov
and
inc
cmp
loope
or
mov
incl
out
aaa
jo
sub
test
decb
pop
dec
cli
xor
std
clc
out
jmp
das
mov
ljmp
arpl
scas
push
mov
add
mov
xchg
add
fiadds
dec
jl
jp
popa
jmp
dec
mov
pop
mov
xorb
fstp
mov
mov
mov
mov
sub
scas
nop
jne
orb
jg
mov
inc
inc
jo
cmc
pop
mov
jmp
push
add
out
jmp
sti
jae
xchg
stos
pop
jl
popf
stc
xor
lods
cmpsl
insl
shlb
jmp
jle
or
jmp
repnz
inc
into
inc
xchg
popf
dec
test
orl
adc
sbb
in
shl
pushl
xchg
xor
insl
test
xchg
dec
xor
shrl
pop
je
mov
jp
inc
xchg
cwtl
icebp
addr16
sub
sub
aam
mov
add
decl
mov
pop
mov
mov
leave
out
jns
sti
cmp
fisubl
pop
cmp
outsb
fisubl
insb
mov
cs
dec
push
mov
decl
inc
push
out
inc
mov
and
idivb
ljmp
fcoms
out
and
nop
fwait
int3
add
imul
js
jno
out
flds
jmp
and
pop
flds
xorb
sti
adc
pop
xchg
imul
xor
sub
incl
gs
jo
shl
ret
xchg
add
scas
mov
fcmovbe
mov
loop
jae
outsl
xchg
jmp
repz
dec
lahf
add
fxam
mov
jns
or
pop
ret
out
movsl
fcomip
ljmp
nop
into
mov
into
test
pop
les
inc
mov
test
jns
mov
inc
jbe
dec
outsl
jp
hlt
pop
jne
divl
fisubs
mov
sbb
sbb
lea
inc
es
int3
and
es
mov
data16
inc
imul
out
mov
clc
adc
incl
shrb
or
out
imul
cmp
and
jle
fdivl
cmp
dec
sub
cmp
decl
and
sbb
out
mov
pop
push
ret
jo
dec
ljmp
cmc
push
dec
adc
ror
nop
mov
es
inc
test
js
lcall
push
jge
xor
cli
rolb
test
sbb
pop
dec
sbb
in
jbe
loopne
mov
hlt
mov
ljmp
hlt
test
data16
outsl
jmp
push
pop
sub
add
sbb
inc
xor
daa
lahf
pop
fs
incl
js
xchg
push
aam
mov
inc
movsb
insb
mov
xor
jns
out
lcall
call
push
xchg
lods
and
fistpl
je
insb
imull
orb
mov
push
cmp
push
int3
in
loop
loop
outsl
popaw
out
popa
testb
pop
lret
xchg
insl
gs
add
push
scas
gs
inc
imul
jl
xchg
sub
mov
ds
xchg
popa
jle
aad
fisubrs
aaa
cld
jmp
ljmp
xlat
dec
pop
jle
and
add
fwait
incl
mov
out
fidivl
mov
mov
ljmp
rcll
mov
rcll
mov
lods
mov
jbe
in
ljmp
mov
mov
xchg
dec
inc
sub
cmp
dec
cs
fcomip
jmp
lret
ds
cld
pop
mov
jmp
xchg
pushl
je
sub
sub
outsb
mov
jmp
and
pop
sub
fimull
or
push
lahf
adc
sub
nop
cmp
paddsb
out
fxch
test
daa
cmp
dec
push
fists
adc
arpl
mov
pop
loopne
adc
cmp
or
pop
sbb
mov
push
or
jbe
jmp
outsl
jbe
sub
xchg
add
js
mov
push
xchg
push
es
incl
adc
sub
lds
inc
das
jl
int3
add
incl
pop
movsb
clc
push
cmpsb
and
iret
mov
leave
shlb
iret
pop
mov
cmp
mov
test
adc
repnz
lds
jb
and
jg
xor
ret
cwtl
mov
shlb
xchg
clc
xchg
mov
fistpll
jnp
cmp
outsl
shl
arpl
scas
in
aas
loopne
jg
in
push
mov
adc
xor
popf
in
inc
adc
mov
mov
pop
test
loop
jle
mov
push
sbb
mov
test
add
ljmp
mov
movsb
xchg
inc
subb
jp
sbbl
decl
stos
sbb
iret
inc
mov
dec
lods
sbb
lds
sub
fcos
fnstcw
inc
pminsw
jne
mov
pop
pop
push
xor
ret
pop
pop
xor
xor
lcall
outsb
outsl
test
add
in
outsb
xchg
repz
inc
cmc
jno
fidivrs
lcall
sub
mov
lea
aad
mov
xchg
jno
bound
outsl
sbb
adc
fwait
dec
cmp
lock
filds
loop
adc
dec
and
pop
pop
and
shl
or
push
push
ret
pop
cmp
sarb
add
sub
and
cmp
mov
popf
das
rorl
insb
and
push
add
sbb
cmc
sbb
jle
lods
jno
addl
and
mov
popa
mull
imul
jg
out
push
int
jnp
xchg
aam
imul
fstpt
cmpb
in
mov
sbb
jns
fwait
in
addr16
jmp
bound
inc
xchg
jl
mov
jne
mov
call
inc
xor
sbb
inc
push
leave
fisubrl
nop
icebp
fcomi
pop
cmp
sahf
aad
xchg
je
ljmp
mov
sub
rclb
arpl
out
dec
mov
mov
inc
clc
sub
fnstsw
add
int
xchg
push
idivl
push
jae
sub
in
cli
push
ds
adc
aaa
stos
lds
jae
pop
mov
fs
js
cld
mov
lock
jg
sub
dec
and
jl
xchg
or
push
pop
incl
sbb
push
dec
pushf
and
mov
or
sbb
mov
call
out
cltd
and
rolb
inc
cmpsb
push
arpl
mov
pop
push
xchg
mov
mov
adc
je
mov
ret
cltd
jnp
dec
cltd
hlt
aas
cltd
stos
adc
adc
mov
xor
jmp
lsl
mov
mov
mov
jl
imul
jbe
in
cmp
lock
loope
shlb
adc
mov
ret
mov
add
pop
pop
test
dec
shll
mov
mov
insl
mov
lods
xor
mov
lcall
and
lds
mov
lcall
and
sub
fisubrl
sarl
pop
fdivrs
push
imul
ljmp
out
mov
jg
in
arpl
push
inc
jge
aad
xchg
ljmp
out
iret
aaa
std
gs
lret
add
inc
outsb
pop
dec
inc
cmp
dec
pop
xor
inc
ljmp
lods
fstpl
ljmp
dec
test
mov
mov
pushl
loopne
xor
jp
cmp
mov
pop
mov
loop
decl
rcll
mov
cltd
mov
sbb
test
push
mov
xor
cwtl
jns
shlb
jbe
push
xor
rcpps
pop
inc
jl
add
jp
pop
mov
and
mov
popf
inc
negl
ret
and
test
decl
push
add
mov
sub
test
fnsave
jo
inc
jmp
jg
sub
pop
int
ljmp
mov
scas
lahf
daa
mov
add
add
jmp
and
lret
repnz
subb
pop
scas
push
jmp
pop
dec
pshufw
mov
lock
cmp
pop
loopne
ficomps
mov
decl
ret
or
adcb
xor
pop
fcmovnu
lods
mov
daa
lret
push
cmp
cli
scas
or
xor
adc
mov
lds
add
ud0
jg
movsb
rol
or
jge
cwtl
mov
jl
push
fld
loope
push
cmp
inc
jg
in
gs
dec
adcb
insb
mov
mov
mov
cmp
cmc
inc
jae
xchg
mov
mov
movsb
stos
and
mov
call
loop
mov
add
icebp
call
pop
leave
iret
sub
cmp
cwtl
adc
out
mov
lret
pop
mov
jae
sbb
daa
or
sbb
pop
mov
call
call
push
ficompl
clc
push
pop
enter
push
fiadds
insl
dec
ljmp
push
mov
dec
out
aaa
jo
jmp
jo
pop
xchg
xchg
loopne
out
in
mov
pusha
outsl
and
pop
cs
sbbb
lds
cmp
jb
int
sub
cmp
inc
and
pop
idiv
dec
movsb
pop
xor
pop
fnstsw
pop
mov
push
jns
aam
dec
sahf
mov
lcall
adc
sub
push
inc
inc
int
jne
add
jecxz
sub
inc
adc
inc
mov
addr16
push
arpl
jae
or
fcomip
inc
jmp
int
fdiv
je
adc
inc
fs
pop
scas
cltd
mov
clc
jp
fcomip
lcall
ror
add
or
cmp
loopne
mov
push
jl
mov
lcall
in
cmpsb
aaa
jg
mov
mov
cmp
shrb
pushl
cmp
leave
jnp
xchg
mov
pop
fisttps
mov
pop
jo
xchg
insl
and
pushl
and
mov
shlb
fldt
cli
fcmovu
cmp
test
cmpsl
dec
mov
lcall
fisttpll
xchg
dec
ljmp
add
xor
idiv
xchg
inc
inc
and
cmp
xor
aad
jo
cmp
lods
jne
inc
sbb
mov
and
mov
out
std
int3
xor
push
enter
call
into
sbb
arpl
aas
mov
sub
and
sub
pop
lock
pop
shrb
iret
enter
xchg
xor
jo
lods
inc
ss
ljmp
push
jecxz
mov
adc
cmpsl
mov
mov
jo
pop
repz
sub
rolb
cmp
out
repz
data16
out
jl
xchg
incl
xor
pop
mov
jl
push
hlt
out
decl
pop
pop
mov
inc
cpuid
mov
jnp
xor
or
imul
jp
sbbb
xchg
lret
clc
jg
sarl
sub
insb
outsl
inc
xchg
xor
add
rclb
lods
decl
mov
ret
loop
xchg
test
lods
jne
out
cmpsl
jbe
sub
mov
push
es
into
xchg
sti
pushl
in
aaa
test
push
pop
call
in
cmpsl
mov
fs
repnz
filds
jg
lret
pop
cmp
pop
scas
clc
adc
jb
jmp
push
rcrl
test
dec
push
bound
lods
jg
pop
add
jb
cmp
mulb
dec
adc
call
ds
mov
dec
inc
adc
sbb
or
sbb
dec
sahf
cmp
decl
in
dec
popf
pop
jg
fnstcw
sbbl
mov
ljmp
mov
and
imul
mov
lea
push
mov
gs
pop
inc
call
sub
dec
dec
push
fcmovu
add
sbb
repz
dec
lret
sub
lcall
popf
inc
into
jne
inc
add
push
pop
js
mov
add
fs
dec
in
and
inc
ss
scas
push
sbb
ljmp
clc
and
ds
jg
sbb
inc
or
jns
fwait
jp
out
jo
outsb
ret
gs
ljmp
lods
xchg
dec
jmp
pusha
pop
cmp
into
int3
fs
or
mull
idivl
ja
decl
mov
enter
lea
jp
out
je
outsb
lahf
sbb
jne
inc
adc
xorl
inc
adc
and
cmpsl
cmp
ljmp
and
lcall
adc
jle
cmp
leave
cmp
addb
jle
and
dec
or
arpl
sbb
jg
ljmp
mov
jmp
cld
push
pushf
scas
out
xchg
add
jbe
ljmp
mov
incl
pushf
test
repz
push
in
cs
scas
aam
ds
mov
adc
call
fdivr
or
jns
imul
ja
je
add
and
push
les
push
sbb
dec
and
sbb
dec
push
decl
xchg
pushf
push
cmpsb
jl
push
sub
js
cmp
lcall
or
sbb
cltd
js
xorl
shr
frstor
das
arpl
in
lcall
sti
push
aaa
outsl
add
pop
pop
mov
pop
outsb
mov
leave
out
clc
jmp
sub
sbb
lods
xchg
cld
ss
cmp
int3
xlat
sbb
adc
fcomip
jmp
or
and
sbb
xor
jae
xor
adc
or
lcall
lock
outsb
cmpsl
sti
scas
inc
jb
outsl
jmp
daa
pop
inc
leave
test
xchg
repz
inc
jl
cld
fbstp
cwtl
xchg
fs
pop
rorb
mov
or
push
ds
ljmp
xchg
bound
leave
dec
lods
cmpsl
xor
int
cmp
ja
cmp
and
adc
add
call
mov
aam
cwtl
mov
mov
dec
call
jnp
cmc
dec
test
sub
hlt
inc
ljmp
inc
sub
and
rcl
sub
imul
ret
pop
test
inc
gs
mov
incl
add
repnz
idivl
jae
outsb
dec
adc
jp
xchg
add
out
pop
sti
or
jg
mov
mov
mov
ja
xchg
nop
sbb
mov
fimull
shlb
cmp
pushf
pop
out
fdivr
sbb
or
pandn
in
cmp
rcrl
lcall
xchg
jp
int
in
xchg
jg
scas
test
adc
cmp
pushf
out
gs
push
testl
ret
lcall
out
fcmovnb
cmpsb
mov
adc
gs
ret
iret
lds
daa
jg
sub
jae
mov
shl
incl
test
inc
dec
lret
mov
std
subb
mov
gs
and
adc
mov
mov
insl
fs
sub
xchg
cs
ljmp
jp
cli
mov
inc
mov
in
iret
add
pushf
jmp
jns
adc
pop
dec
arpl
jmp
arpl
lcall
jmp
sbb
lcall
push
ret
mov
loopne
roll
push
jns
fimuls
addr16
iret
or
scas
repz
decl
in
lret
sbb
dec
je
into
sbb
mov
push
adc
test
psraw
cmp
push
mov
cs
cs
dec
cwtl
push
dec
xorl
dec
push
mov
in
in
sub
ljmp
adc
jle
fadds
mov
adcb
dec
jmp
fmull
stos
push
std
in
ss
mov
push
or
xchg
idivb
mov
ds
out
pop
pop
push
imul
loope
mov
lea
cmp
cmp
mov
or
xchg
mov
incl
jne
test
jg
loop
ror
mov
pop
js
dec
stc
mov
xor
cs
out
cmp
incl
xchg
adc
dec
mov
or
dec
lret
pop
cwtl
jae
cmp
xor
sbb
in
and
add
movsl
or
push
pop
loopne
stos
mov
lea
loope
jmp
cmp
movsl
jnp
inc
xchg
jne
mov
ror
rcrb
mov
sub
pop
xchg
loope
das
sar
cmp
inc
clc
lahf
notb
out
or
scas
lcall
mov
ret
out
lcall
dec
jg
fisubrl
push
aam
pop
xor
das
inc
mov
dec
jge
decl
pop
cmc
lcall
jp
cmpl
incl
fdivl
addr16
xor
push
and
add
push
lock
push
incl
sbb
pusha
jb
outsl
cmc
cmp
xchg
insb
ljmp
inc
push
mov
mov
movsb
ss
icebp
dec
iret
mull
rolb
cmpsb
clc
push
icebp
fisubl
mov
rcl
lcall
cmp
fidivl
jge
adc
add
int
fiaddl
int3
inc
pop
or
push
ja
test
add
loope
pushl
add
jns
lock
push
xchg
mov
leave
fcomps
mov
mov
iret
sub
dec
outsb
data16
dec
mov
mov
sbb
out
pop
adc
aaa
je
pop
pushfw
fcoml
sbb
call
jmp
loopne
inc
cmc
inc
sub
insb
push
fs
dec
cmpsl
ret
cs
fbstp
jne
sbb
popl
outsb
xchg
int3
outsl
fsubl
adc
pusha
adc
pop
icebp
and
popl
les
and
mov
dec
add
aaa
pop
push
adc
xor
lcall
stc
lret
push
or
dec
inc
mov
jnp
pop
ficompl
jmp
fsubrl
fnsave
sub
mov
repz
icebp
jbe
addr16
test
nop
aam
xor
adc
les
movsl
lock
mov
repz
xor
lea
dec
aam
fnsave
lcall
pop
bound
test
mov
decl
jnp
fwait
imul
adc
stc
mov
jae
stos
out
ljmp
push
mov
loopne
call
sub
ss
movl
lock
mov
repnz
cmp
sti
ss
lret
std
ljmp
push
mov
add
int3
gs
push
das
sub
xor
push
mov
add
push
mov
cmp
and
jns
scas
jnp
fildl
fistl
jmp
cmp
incl
jle
jmp
test
xor
mov
pop
mov
mov
ffree
sub
mov
mov
pushl
js
pop
add
iret
mov
roll
stos
jne
and
cmp
cmp
sub
inc
mov
push
lods
mov
sahf
or
aaa
cld
mov
adc
push
jo
dec
dec
and
les
cmp
xchg
xor
cmpsl
push
pop
lcall
push
mov
jno
mov
sar
jmp
dec
ja
test
test
insb
sub
test
lcall
ljmp
push
pop
gs
je
adc
dec
call
sbb
cld
ljmp
clc
mov
pop
jne
enter
jecxz
xchg
pop
xchg
push
dec
jb
loope
jmp
js
jmp
cmp
and
inc
jne
mov
int
stc
scas
mov
adc
mov
mov
fs
lret
mov
mov
push
adcl
lahf
and
pop
loope
das
aas
or
fisttpll
xor
push
or
dec
lcall
lods
into
pop
add
mov
cli
rcrb
mov
and
sahf
lahf
sbb
ljmp
loope
cs
cs
push
pusha
test
xchg
mov
ret
vmaxsd
daa
jbe
scas
pop
pushf
ss
jnp
cmp
cmp
dec
dec
mov
mov
mov
or
push
ss
xchg
add
xor
daa
fstps
and
pop
hlt
in
mov
mov
call
arpl
movsl
cmp
nop
stos
roll
or
stos
cmp
cmc
pop
push
jb
call
dec
in
incl
testb
or
mov
inc
xor
movsb
gs
lcall
or
inc
cmp
add
lcall
idiv
cmpl
in
lcall
lods
sub
jge
inc
or
ss
repnz
or
push
jbe
push
scas
testb
incl
jns
out
xor
iret
movsb
pushl
jne
repnz
flds
mov
mov
test
dec
sub
call
imul
xchg
scas
shlb
dec
cmp
in
test
or
insl
sar
jns
add
or
sbb
loopne
cs
jmp
xchg
cvttps2pi
inc
push
or
adc
mov
xor
incl
bound
call
imul
les
mov
add
test
call
jge
jmp
repnz
cltd
enter
mov
arpl
fs
mov
sub
xor
shrb
mov
les
dec
push
fisubrs
call
cmp
clc
pop
out
sub
fdivrs
loope
hlt
jbe
sub
mov
pop
in
cmp
sti
inc
adc
jecxz
movsl
cmc
jae
insl
lret
int
push
daa
divb
pop
pop
nop
test
adc
inc
and
popf
and
or
sub
push
std
lcall
ret
xor
and
fisttpll
stos
xor
jl
mov
pop
scas
fistl
cmpsb
jae
inc
mov
jmp
mov
or
cmp
xchg
ljmp
pop
xchg
pop
das
lock
int3
rcrl
xchg
mov
movl
into
ss
mov
fistl
pushf
cli
fists
sar
inc
or
sbb
icebp
jle
add
xor
es
iret
pop
jp
incl
inc
clc
les
add
decl
int
shrb
sbb
jae
icebp
jp
popf
dec
aas
pop
xor
pushf
or
mov
push
or
cld
jg
repnz
fsubrs
sub
push
push
es
xchg
inc
lcall
hlt
data16
subb
push
mov
add
xchg
ror
inc
filds
shrl
jg
decl
mov
push
sbb
enter
cmp
inc
test
inc
xchg
gs
lcall
rorl
jae
fs
or
mov
xchg
movsl
decl
and
mov
es
mov
pushl
clc
or
test
shlb
movups
decl
pusha
mov
dec
jp
test
inc
pusha
bound
shrb
movsl
ret
decl
std
jbe
push
cmp
cmc
arpl
jg
pop
xchg
fidivrl
lock
jb
mov
jecxz
mov
stc
cld
xchg
inc
jmp
fwait
push
sbbb
mov
sti
in
sbb
push
and
sbb
jle
jmp
cmpsl
leave
xchg
cwtl
mov
std
dec
mov
incl
xchg
sub
movsb
test
jmp
loopne
sub
ljmp
jne
aas
aas
stc
out
inc
dec
ret
push
addr16
add
cmp
in
dec
push
jmp
cs
xor
mov
pop
or
xor
sbb
cli
into
sbb
jmp
pop
bnd
sbb
sti
dec
mov
stos
push
js
test
xor
test
pavgb
imul
aad
dec
in
and
fidivrs
jbe
mov
inc
cmp
pushf
inc
cltd
das
pop
cld
push
mov
shlb
jp
xor
lods
fnsave
cmp
js
mov
pushl
in
mov
clc
fs
test
pop
add
je
adc
and
mov
xorl
push
mov
adc
incl
adc
xchg
aaa
xor
call
sbb
imul
cmp
push
fwait
jbe
call
pop
and
in
jl
rolb
outsl
xlat
cltd
push
mov
dec
jle
xchg
push
outsl
iret
loopne
push
insl
cmp
mov
pushf
sahf
adcb
popa
inc
push
repz
popf
sbb
incl
daa
mov
stc
push
mov
aas
push
mov
loop
pusha
push
push
fistpl
aad
rcll
and
push
scas
mov
pop
jne
xchg
push
add
inc
lcall
out
jbe
inc
sti
cmpsb
iret
dec
js
idiv
int3
repz
aam
push
sbb
lcall
movsb
fdivs
cmp
push
rcpps
mov
push
cs
dec
out
ljmp
lcall
cld
ja
addl
push
lcall
outsl
lret
test
stc
ljmp
in
jge
pop
jnp
call
sbb
xchg
pop
int3
sub
stc
je
cmp
call
mov
sub
mov
push
and
jecxz
das
movsb
nop
add
mov
in
pushl
pusha
lahf
mov
les
aam
aad
mov
xchg
lock
or
stc
adc
cmpsb
jmp
and
pop
js
loop
mov
push
mov
sar
call
ss
stc
xor
xchg
mov
into
pop
push
das
add
and
dec
dec
mov
adc
mov
mov
addr16
xchg
test
xor
mov
mov
sub
add
or
mov
sub
jo
pop
aad
sub
lcall
leave
movsl
adc
jb
mov
adc
sahf
popa
add
les
ljmp
je
sbb
mov
test
repnz
jmp
mov
sub
div
cld
lcall
fstps
sbb
stos
xorl
aam
and
ljmp
lcall
scas
inc
aad
loop
inc
repnz
lcall
mov
inc
pop
sbb
fisttps
iret
out
mov
push
cld
decl
cmp
inc
mov
mov
mov
sbb
stc
mov
cmp
stos
out
aaa
mov
mov
out
mov
scas
dec
push
jg
dec
int
loopnew
push
dec
xlat
push
sti
js
std
pop
scas
add
push
test
into
dec
and
add
push
dec
mov
add
decl
jmp
pop
push
test
int
fcoms
incl
ret
mov
popa
inc
xchg
jae
or
and
stos
sbb
pop
lock
xchg
lock
cmp
inc
flds
daa
scas
aad
cmc
cwtl
insb
jbe
ret
or
xchg
mov
jmp
adc
cmpsb
pop
lods
test
sahf
push
cmpsl
inc
jbe
shrb
jp
aaa
lods
and
cwtl
push
mov
sub
clc
out
js
cmp
fsub
dec
xchg
sub
loopne
mov
jae,pn
mov
es
decl
or
jecxz
mov
pop
sub
sbb
inc
mov
fwait
loopne
jecxz
add
dec
xorb
jmp
aam
sti
lret
jge
ja
pop
clc
mov
inc
mov
dec
push
inc
jne
stos
les
and
clc
mov
lret
jp
popf
enter
ljmp
ljmpw
loopne
dec
push
fcmovbe
mov
pop
add
imul
or
mov
mov
or
fistl
sbb
inc
imulb
call
hlt
daa
rcl
push
pop
imull
lods
mov
in
comiss
mov
jmp
push
add
push
jb
rorb
int
aaa
or
jp
cli
xchg
mov
insl
loope
data16
negb
and
mov
jmp
nop
dec
sub
jno
sub
shrl
xchg
pop
push
lret
cmp
push
mov
decl
pop
and
rcll
movsl
jb
jl
outsb
pop
xchg
and
xchg
mov
xor
sar
jae
jb
sbb
test
cmpsb
push
mov
call
mov
jg
mov
sbb
adc
mov
jae
lcall
jo
add
pop
xor
push
inc
mov
sub
add
add
push
dec
jno
dec
or
cmp
ljmp
repnz
test
push
mov
xchg
data16
cmpl
psubsb
mov
imul
cli
dec
or
sub
movsl
adc
pop
es
pop
notl
repnz
inc
and
cmpsb
push
xchg
lret
push
divl
pushl
js
inc
imul
add
idiv
cmpsl
jae
xor
outsl
push
jge
repnz
ljmp
jmp
xor
aad
xchg
iret
out
mov
xchg
std
les
inc
adc
jecxz
inc
and
fdiv
loopne
mov
push
xchg
mov
or
fs
decl
mov
adc
sti
test
xchg
aad
or
in
add
std
ljmp
xchg
lds
stc
lret
jle
cmp
and
fisubrs
mov
dec
xor
imul
and
lcall
pop
push
loopne
jae
fadds
push
aad
cmpsl
push
pop
js
mov
dec
les
std
lcall
sahf
js
jbe
arpl
ds
data16
mov
loope
xchg
pusha
pop
loopne
mov
inc
fstpt
cld
push
push
ljmp
or
rorl
shrb
outsb
in
sub
jns
incl
mov
cmp
je
rolb
cli
push
cmp
test
call
out
mov
sahf
daa
das
pushf
lea
push
xchg
jae
and
mov
dec
out
pop
dec
pop
or
mov
xchg
rcll
std
dec
jb
outsl
mov
xchg
and
imul
test
retw
sarb
add
decl
push
dec
out
push
xor
cmpsl
out
pop
repz
pop
mov
push
lea
call
cld
dec
cld
pushl
mov
int
lds
or
outsb
sbb
ficomps
das
and
push
fldenv
add
in
je
dec
inc
dec
sbb
or
pop
in
rclb
jmp
and
std
adc
incl
popa
je
inc
cmc
push
inc
imul
xor
lret
pop
dec
lcall
cmp
adc
xor
repz
int3
lahf
lods
push
sbb
push
cmpsl
mov
mov
fsts
pop
insl
negb
jb
call
jbe
imul
jae
xchg
dec
xor
in
push
loop
aas
shrb
inc
xor
mov
inc
pop
data16
gs
add
jecxz
lock
insl
movsb
subb
jns
adc
ljmp
cmpb
scas
fcmovbe
cmp
push
xor
movsl
add
inc
ret
mov
and
sbb
fidivrs
xor
mov
fs
inc
jno
sbb
stos
jle
imulb
std
jo
pop
lds
mov
adc
mov
data16
mov
in
hlt
das
add
pushf
push
cmp
cmp
int3
lods
dec
jecxz
mov
push
lds
cmp
jno
pop
add
fimuls
pushl
arpl
testl
mov
inc
xor
mov
call
xor
rorb
iret
push
xchg
sbb
test
mov
lcall
inc
push
dec
push
jbe
sub
jecxz
imul
mov
and
mov
test
or
cmc
and
mov
or
testb
shr
sti
stc
cld
ljmp
lods
inc
mov
sub
enter
scas
pop
lcall
xchg
addr16
jg
sub
cmp
outsb
xor
add
dec
stos
push
inc
inc
cmp
jg
inc
out
stos
mov
mov
sbb
and
pop
loope
fnstcw
inc
lcall
data16
clc
lds
pop
into
push
cmpl
stos
dec
mov
inc
or
or
lret
or
fldl
cmp
mov
adc
sub
mov
mov
xor
pop
cmpsb
inc
push
or
xlat
cmp
daa
gs
into
sub
stc
mov
mov
jb
das
push
pop
push
mov
inc
cmp
clc
cmp
call
pop
cmpsb
and
adc
sahf
inc
mov
ljmp
mov
fiadds
addr16
mov
daa
dec
or
cmp
call
or
incl
inc
stos
push
in
cld
pop
shrl
jb
sbb
pushl
cmpsl
scas
cmc
add
shlb
test
or
test
dec
xchg
inc
cld
lret
fistps
mov
sub
test
lods
add
mov
sbb
mov
cmc
aas
shrl
fdivrp
fisttpl
enter
sahf
mov
out
repz
xor
hlt
out
fstpt
and
popl
xchg
jg
jg
sub
sub
ljmp
mov
xor
inc
sbb
jmp
sbb
imul
out
ja
or
test
xlat
pop
ss
pushf
fs
mov
cmp
lcall
pop
notl
pop
pop
test
out
cmp
outsb
sbb
addb
mov
xchg
dec
fldcw
dec
sti
sub
lret
xor
lahf
xchg
dec
jmp
ljmp
pushf
shl
cltd
lds
dec
shrb
outsl
pop
jge
mov
add
push
xor
pop
sub
jmp
lcall
pop
and
xchg
lcall
xor
mov
nop
cmp
mov
cli
mov
xor
xchg
adc
rcl
add
repz
xchg
lea
cmc
or
cld
push
decl
cs
lods
cs
mov
xchg
inc
and
pop
sbb
xchg
lock
ljmp
decl
xor
into
or
fsts
pop
jge
leave
add
call
rorl
and
iret
mov
out
cmp
les
cmpb
dec
roll
imul
bndstx
fcoms
push
pop
pop
push
dec
mov
pushl
ss
jp
adcb
popf
rclb
xor
stos
mov
shl
fwait
cld
ret
sbb
push
dec
outsl
lcall
fldl
dec
sbb
mov
and
stos
adc
cmp
aad
decl
jle
cli
inc
add
jp
loopne
mov
mov
xchg
cmpsb
data16
call
jecxz
rorl
scas
jg
xchg
or
jle
lods
mov
orl
mov
add
fs
sti
out
shrl
mov
outsb
xor
adc
jno
cltd
sbb
and
mov
add
jmp
and
jno
push
icebp
xor
gs
rorl
mov
xchg
or
pop
clc
ds
sub
cs
push
adc
mov
ss
jno
in
in
push
sbbb
adc
aam
insb
out
jl
rcll
mov
sub
dec
sub
inc
push
lret
insb
pop
cmp
pop
lret
loopne
cmp
sarl
mov
cmp
iret
scas
std
lock
je
dec
pushl
mov
and
push
orb
mov
add
stos
fisubrl
arpl
pop
xchg
ljmp
add
lea
rorb
repz
fbld
sarl
sbb
adc
or
fmul
rcr
loope
jl
iret
pop
ljmp
jne
insb
jns
xchg
pushl
add
xchg
cltd
movsb
sbb
mov
pop
dec
out
mov
adc
fimuls
push
push
clc
clc
mov
dec
loopne
ds
or
sub
and
loope
xchg
ud0
or
gs
loopne
mov
add
cmpsl
out
movsl
xor
mov
jg
push
int
fldl
outsb
mov
xor
jle
into
dec
das
int3
add
decl
je
popa
fldcw
or
mov
mov
add
cs
andl
incl
test
jno
and
xchg
sbb
jmp
adc
movsb
xchg
decl
pusha
cmp
add
or
mov
add
stc
mov
mov
pop
ja
pop
sbb
mov
lcall
incb
sub
inc
int
push
ss
sbb
pop
sahf
std
cli
addr16
mov
fidivl
fldt
and
inc
mov
fs
sbb
jp
scas
lret
scas
insb
xor
sbb
pushl
mov
add
lods
bound
sarl
clc
jns
data16
or
pop
mov
or
mov
in
mov
jmp
adc
mov
loop
ror
sbb
cmp
popf
mulb
fidivrl
lcall
out
cs
mov
sbb
loop
mov
and
pusha
jmp
mov
or
push
andb
aam
test
or
orl
loopne
mov
lret
or
in
xchg
ret
sub
and
cld
push
inc
out
dec
es
jo
mov
pop
cld
incl
movsl
lahf
lods
cmp
add
and
stos
in
out
decl
ds
xor
push
mov
fs
push
add
inc
rcr
std
in
in
lcall
sti
or
mov
mov
fidivrs
jle
dec
mov
dec
hlt
inc
movsb
xchg
cmp
cmp
mov
dec
aad
fldcw
add
and
movsb
push
aas
fisttpll
adc
sbb
hlt
jg
add
lret
ja
xchg
cmpsb
in
add
jle
icebp
jg
mov
sub
ds
xor
mov
clc
xchg
pop
out
icebp
stos
sub
aam
scas
pop
out
xchg
cmc
stc
mov
and
ss
shr
push
ljmp
cltd
add
push
mov
mov
jne
cs
pop
push
xor
lcall
inc
dec
stos
stos
lret
xor
loope
insl
pop
out
inc
dec
or
faddl
mov
add
sbb
pushl
mov
mov
or
mov
xchg
mov
jmp
mov
jno
es
jmp
xchg
and
jmp
mov
inc
xchg
ss
xchg
mov
mov
test
or
xchg
mov
movb
incl
es
ret
scas
test
outsl
mov
lret
cmp
or
add
pop
adc
fsubrs
cmpsb
repnz
decl
mov
jl
stos
pushf
insb
jb
je
lret
add
cmpsb
cltd
add
or
daa
sbb
insl
lcall
lea
addr16
and
xor
lahf
sbb
push
fs
pop
add
mov
mov
xchg
std
sbb
inc
divb
mov
ficoms
push
pop
fsubp
das
cli
ljmp
aam
arpl
fscale
test
rol
cwtl
push
out
mov
mov
pushl
pop
sub
cmc
test
cmp
popa
cmp
xor
movsl
std
pop
psllw
js
imul
cmp
hlt
or
fisubs
pop
test
loopne
mov
cli
xchg
outsl
inc
pop
nop
jns
xchg
iret
decl
sub
negb
jmp
loope
adc
test
push
sbb
and
ja
xor
mov
punpckhbw
js
subl
or
ret
test
xchg
xor
sbb
ljmp
adc
ret
cltd
jnp
movsb
rcl
adc
inc
in
loope
mov
xchg
arpl
packuswb
xchg
inc
hlt
mov
sbb
pushl
and
mov
jb
xchg
inc
and
imul
cmc
or
daa
mov
in
cmpsb
stos
push
repnz
lcall
xlat
mov
imul
sbb
out
ret
cld
adc
call
out
and
xchg
mov
pop
daa
jnp
inc
cmp
scas
cmp
cmp
cwtl
mov
xchg
jns
push
test
mov
mov
dec
pusha
push
loop
xchg
and
dec
imul
cld
aad
xchg
movsb
mov
lods
lds
lds
aaa
nop
fcoml
add
push
fwait
dec
jl
movsb
outsb
sbb
cmpsl
rorb
mov
xlat
movsl
push
stc
xorl
sub
dec
cld
xor
sub
xchg
into
lret
cld
cwtl
lcall
out
add
inc
and
jmp
or
add
adc
and
lcall
or
or
sub
ds
jl
push
pop
test
lcall
hlt
pop
jnp
inc
rorl
pop
push
push
movsb
addr16
mov
stc
scas
jle
sub
call
ja
jno
lods
and
push
sbb
push
sub
mov
jmp
jl
js
nop
cmp
xor
cli
push
push
mul
jb
xor
xor
inc
add
lcall
or
jle
in
mov
movsb
loope
fmul
iret
mov
fwait
incl
inc
lock
scas
scas
adc
shll
mov
inc
loop
ljmp
aas
sub
nop
lcall
pop
fsubr
mov
mov
xchg
cmc
fildll
jecxz
lcall
sub
stos
adc
inc
lret
mov
cmp
jne
fdivp
xor
pop
mov
mov
xor
das
jg
cmp
jl
test
shl
fistps
scas
cmp
add
mov
jb
jg
xchg
and
push
push
ret
jae
imul
ljmp
pop
adc
jecxz
lcall
mov
sbb
bound
jno
mov
call
call
xlat
fisubl
pop
imul
mov
mov
cmp
or
mov
inc
fadd
dec
cmp
mov
jno
push
in
xlat
cmp
incl
push
or
jecxz
ja
or
xchg
sub
push
aaa
lcall
cmp
jle
or
xchg
and
and
jnp
xor
out
lret
dec
xor
mov
insb
xchg
insl
scas
cmp
add
adc
dec
jg
push
sarl
mov
push
stos
pop
jbe
enter
movb
insl
push
iret
xor
inc
fbstp
ja
das
dec
push
mov
add
or
xor
xor
jbe
push
jne
jbe,pt
dec
hlt
mov
loope
or
test
and
lret
incl
jp
and
xchg
stos
ficompl
js
out
push
adc
inc
lds
into
sbb
jg
inc
mov
and
jmp
pop
int3
stos
mov
xchg
xor
xchg
fsubrl
enter
pop
shll
xchg
pop
pop
mov
dec
sub
js
sbb
arpl
test
ljmp
mov
clc
pusha
out
cmp
adc
push
ret
pop
pop
push
ret
or
iret
mov
lcall
dec
cmp
aam
out
add
mov
jmp
xchg
xchg
movsb
out
pop
insl
insb
fwait
pop
lock
and
insb
ljmp
dec
push
inc
decl
fwait
or
dec
xor
mov
mov
movsl
imul
cmc
cld
decl
leave
cmp
lcall
jle
frstpm(287
outsl
test
cmp
call
jb
ss
jl
cmp
clc
add
sbb
sbb
lcall
test
shll
int
stos
rcll
out
pop
jbe
lods
add
imul
mov
adcb
sti
movsb
cmp
jp
or
shl
pop
jge
dec
sub
daa
out
and
loop
cwtl
cmc
mov
xchg
sbb
or
pushl
push
jecxz
mov
and
or
dec
push
mulb
test
test
mov
jne
lcall
lret
lret
lahf
leave
cmp
popw
loopne
test
stos
push
int
dec
dec
inc
je
add
scas
rcr
pushl
cmp
js
pushf
pop
out
icebp
push
testl
sub
mov
icebp
dec
in
lods
dec
sbb
push
xor
sub
ljmp
rcr
mov
adc
jp
lds
push
out
sub
arpl
loopne
mov
mov
mov
cltd
push
jle
sbb
lahf
push
mov
xor
hlt
adc
jno
mov
dec
pop
adc
jb
cltd
lret
xchg
sbb
incl
sub
jbe
push
mov
mov
incl
push
bound
insl
and
cwtl
mov
lret
out
int
xchg
cltd
mov
call
lahf
add
jecxz
movsl
movsl
out
pop
sbb
jo
std
mov
pop
std
xor
pusha
loopne
decl
repnz
aad
sahf
movsl
test
and
aam
leave
aaa
data16
aas
movsb
mov
push
data16
out
imul
sbb
inc
cli
xchg
es
mov
js
inc
mov
ljmp
outsb
ss
cmp
push
xchg
fdiv
movsb
lcall
push
popa
or
push
jl
aas
mov
out
rolb
jbe
sub
dec
sub
movsl
inc
push
popf
out
jns
ds
lods
and
ljmp
movl
jg
mov
mov
jle
mov
mov
hlt
fisubs
shl
mov
lock
pop
xor
roll
jmp
push
lea
cmp
sub
xor
pop
or
popa
add
push
and
incl
scas
jae
aas
pop
bound
xor
add
test
decl
xchg
pop
arpl
push
and
jmp
lahf
push
push
cwtl
lcall
loopne
pop
pushl
movsl
aam
popa
lret
xor
test
cwtl
out
dec
jno
xor
hlt
sahf
add
sbb
mov
lcall
pop
in
mov
out
xchg
jnp
dec
scas
sbb
fidivrs
mov
roll
cmp
inc
testb
scas
movsl
loop
fisttpll
jg
and
dec
stc
mov
mov
lock
fcoms
mov
outsb
lcall
rorl
fildl
scas
xor
xlat
inc
pop
test
add
pop
clc
jp
hlt
cmpsb
cmpsl
xor
inc
sti
mov
cmpsl
push
in
jle
xchg
negl
mov
dec
lea
push
xor
fnstenv
inc
ljmp
mov
mov
jnp
push
rorb
rcr
fdivrs
sub
jg
inc
in
xor
das
cmp
inc
xor
mov
aas
xchg
lea
dec
aaa
xor
pop
dec
adc
das
gs
inc
jmp
int3
decl
adc
hlt
notl
inc
xchg
lods
mov
cmpl
pop
decl
sbb
sarl
push
mov
pusha
cmp
fsubrs
push
imul
inc
and
cmp
rcrb
lcall
push
out
jecxz
mov
jo
push
repz
sbb
mov
cmp
mov
xchg
lahf
fnstenv
dec
test
movsb
in
loopne
mov
sti
fcmovnbe
fucomip
scas
out
cmc
xlat
xor
imul
add
cmp
lods
push
or
lods
dec
arpl
outsl
cli
aaa
repnz
and
jmp
aas
push
mov
xor
and
jne
stc
fistl
out
addl
and
incl
rsm
cwtl
adc
jle
sub
mov
clc
das
xor
pop
cmp
push
movsb
decl
gs
rcr
scas
sbb
incl
scas
test
inc
insl
push
sub
inc
inc
xlat
push
xchg
mov
and
mov
dec
push
shr
jns
cmp
gs
sbb
aad
sbbl
stos
aaa
mov
sbb
ljmp
decl
arpl
jae
sbb
out
mov
mov
push
pushl
je
out
out
pop
xchg
scas
cmp
movsl
mov
aas
lret
aaa
cli
cli
or
ljmp
mov
fisubrs
insl
repnz
cld
xchg
mov
stc
cmpsb
dec
xchg
push
mov
push
mov
push
sub
mov
clc
xchg
mulb
jp
push
loopne
pop
jnp
pushl
ljmp
adc
lcall
xchg
or
test
leave
or
push
jecxz
decl
fstps
cmp
outsb
push
setl
cmpsb
mov
cli
adc
mov
outsl
maxps
mov
pusha
push
push
jns
incl
gs
call
mov
repz
aad
xchg
icebp
sub
jne
mov
mov
enter
or
stos
or
jg
call
clc
lds
push
xor
mov
gs
cli
pop
int3
cltd
mov
dec
aam
jg
sbb
jno
hlt
int
inc
lret
cmc
dec
mov
in
lods
mull
decl
mov
push
dec
pop
xchg
pop
adc
icebp
outsl
lahf
scas
mov
xchg
sti
ljmp
jno
inc
lret
cmpb
cmp
push
xchg
sar
cmp
insl
jge
push
push
movsl
std
out
mov
mov
pop
clc
cmp
mov
jp
ljmp
dec
jecxz
out
jecxz,pt
adc
mov
dec
mov
pop
mov
movsb
ljmp
stos
imul
mov
fdivl
sub
inc
adc
jae,pt
sub
xchg
fcmovne
dec
inc
xlat
jnp
mov
cmp
out
jecxz
or
sahf
jge
call
jns
push
jg
fnstcw
push
loopne
test
jl
test
jbe
push
mov
adc
mov
ds
push
bound
aam
or
lcall
adc
inc
mov
mull
push
in
or
test
xchg
andl
mov
lahf
adc
imul
push
call
repz
dec
pop
mov
mov
dec
call
jmp
mov
cmp
pop
ficoml
xchg
pusha
or
mov
arpl
aas
addr16
stc
or
decl
cwtl
movsl
mov
divl
dec
mov
lahf
lods
sub
or
fildl
in
adc
sub
int3
jl
mov
push
out
mov
pop
jbe
push
je
lahf
xor
cmp
push
mov
cmp
lea
push
gs
mov
das
jle
push
lret
or
sbb
lcall
aas
or
fs
sbb
xor
sbb
int3
orl
stc
mov
inc
or
out
outsb
jbe
push
lods
insb
ficoms
les
adc
incl
sbb
jnp
leave
adc
stc
add
stos
pop
fnstsw
iret
dec
push
mov
lcall
arpl
mov
push
das
adc
adc
push
int
and
sti
out
mov
adc
inc
pushl
ljmp
jmp
add
loopne
rclb
or
cmp
cmp
pop
push
pop
adc
into
lds
ljmp
je
and
sar
int3
in
xchg
xchg
push
ljmp
cli
xor
fildll
pop
lea
hlt
push
lods
push
adc
adc
mov
incl
jle
ret
xor
out
mov
dec
cwtl
xchg
add
sub
ljmp
sub
repnz
mov
in
add
lretw
test
daa
push
xchg
adc
dec
enter
cmp
xchg
xor
adc
ljmp
lods
popf
mov
lcall
mov
cmpsb
js
push
inc
xchg
inc
fcomps
subb
mov
jle
xchg
packsswb
repz
pushl
loopne
nop
cmp
adcl
fdivrl
or
mov
shl
fldt
push
jmp
jecxz
call
add
mov
rcrl
pop
mov
outsl
decl
js
xor
cmp
adc
pop
dec
mov
mov
inc
mov
nop
inc
lods
jmp
jmp
outsl
lret
jg
jp
and
dec
add
lods
xchg
loop
add
sbbb
xchg
ja
mov
dec
out
into
iret
cmpsl
divl
mov
jae
jb
mov
jmp
inc
pop
push
xchg
xor
mov
pop
fidivrs
add
or
incl
add
mov
push
out
cld
dec
push
in
xchg
or
cltd
jmp
sti
mov
loope
mov
movsb
xor
hlt
mov
pop
adc
aam
xor
cld
jmp
ret
arpl
movsl
cmp
in
jp
push
or
inc
call
repnz
popf
mov
jne
jae
outsl
jecxz
js
mov
cmpsb
fld
pop
xor
in
mov
scas
lcall
or
jb
enter
adcb
stos
xadd
jmp
jno
repnz
mov
hlt
mov
into
sbb
pop
xchg
push
pop
jnp
ljmp
push
push
insb
inc
enter
xchg
mov
shll
lock
adc
xchg
in
stos
push
sbb
test
movsb
xchg
jne
lcall
lods
lock
inc
mov
insl
mov
or
mov
push
imul
decl
push
hlt
add
daa
sti
arpl
lahf
inc
cld
dec
cmpsl
je
sbb
loopne
mov
jmp
adc
flds
jg
repz
dec
pusha
or
sub
mov
lcall
das
mov
jmp
sub
jbe
dec
xchg
ret
xor
mov
in
mov
js
jo
inc
sti
jmp
inc
cmp
mov
mov
repz
mov
and
pop
cmc
fisubrl
enter
push
mov
jle
das
pop
pop
xor
add
lds
mov
mov
loope
push
and
mov
mov
mov
popa
push
sub
push
in
jmp
or
loop
cmp
rcrb
andl
jnp
in
sbb
push
xlat
adc
decb
enter
in
in
jle
popa
inc
jle
xchg
xchg
xchg
sub
pusha
lahf
add
decl
sbb
enter
dec
filds
ljmp
cmp
pop
rorl
test
mov
jge
push
inc
jp
xchg
cmp
ljmp
jnp
mov
cmc
jle
add
push
push
sbb
xor
sar
out
clc
or
xchg
sahf
movsb
jp
mov
xor
repz
cld
decl
xor
inc
push
cmp
or
shlb
push
xchg
out
mov
or
xor
pop
inc
adc
pop
das
hlt
mov
ss
xor
fcmovnu
in
insb
pop
int
aad
call
push
or
dec
test
lcall
mov
dec
bound
test
jg
aas
xchg
jno
push
int
rcl
dec
ljmp
adc
jbe
inc
adc
mov
fisubrl
rcll
push
lods
inc
test
pushl
jne
push
xor
or
push
mov
jmp
out
jl
into
push
incl
lret
movsb
loope
lcall
stos
imul
movsl
mov
xor
jmp
inc
arpl
xlat
cltd
lea
cs
inc
xor
mov
movsl
jno
cmp
mov
pop
into
cmp
div
loopne
xor
lcall
push
xchg
adc
sbb
jae
das
adc
and
xchg
and
jns
ljmp
mov
sahf
lds
mov
jl
cs
xor
fimull
push
sti
in
pushl
jns
dec
fbstp
dec
imul
pusha
pop
or
xlat
mov
lods
in
sbb
cld
pushl
sub
push
aam
push
bnd
addr16
je
in
cwtl
fldenv
xchg
movsb
ror
cli
out
clc
sbb
push
mov
jp
xor
sbb
decl
xor
aaa
dec
sbb
or
cs
push
adc
incl
incl
lsl
test
test
sti
mov
aam
ljmp
shlb
je
push
push
sub
dec
pop
sahf
inc
pop
fisubl
rcr
pusha
jmp
push
rorb
clc
ds
jecxz
mov
mov
pop
add
call
mov
sub
rcrl
and
incl
int3
inc
lods
int3
in
inc
inc
aad
mov
insb
pusha
mov
inc
inc
lds
xchg
fmull
push
insb
faddl
push
pop
cli
call
and
pop
pop
sub
ficompl
xor
or
add
xchg
mov
ds
lods
lret
imulb
cli
push
xor
addr16
into
ss
aas
mov
add
cmc
out
inc
dec
pop
push
fs
movsb
mov
pop
lahf
push
fimull
out
lret
es
test
fcomip
adc
dec
bound
dec
int3
dec
and
shrb
call
and
push
daa
int
or
and
cmp
lcall
cltd
mov
push
mov
jg
mov
popa
push
fmull
fcmovbe
jle
out
mov
lret
xchg
pushf
stos
mov
incl
rolb
cmp
rcl
lcall
jg
loopne
aas
sbb
dec
ljmp
clc
lcall
xchg
outsb
sub
jb
mov
adc
inc
outsl
xchg
ljmp
lahf
mov
and
push
jp
cld
lcall
jnp
pop
xchg
fildll
xor
repz
mov
mov
inc
sahf
pop
add
add
pop
sbb
jg
pushl
nop
xchg
pop
call
cmpsl
adc
rolb
in
lods
enter
lret
js
dec
push
or
jmp
cwtl
loop
jb
or
sub
fwait
jg
jns
mov
pop
xchg
add
lcall
dec
fsubs
push
push
and
mov
dec
lcall
fnsave
sub
ret
add
aam
jg
jl
cmp
leave
arpl
sub
cmp
xchg
int3
push
inc
fdivrp
jmp
in
jecxz
jne
mov
xchg
push
sahf
movb
adcl
clc
test
add
lcall
movq
sub
and
bound
sbbl
shrl
push
ficompl
xor
or
and
lcall
aam
and
adc
inc
hlt
jp
lcall
mov
outsl
loopne
ljmp
in
push
mov
in
shlb
lahf
mov
bsr
roll
idiv
das
clc
inc
nop
fisttps
or
mov
lds
cmp
int3
and
lock
jecxz
ljmp
mov
inc
pop
dec
jge
mov
dec
sarb
pop
into
outsb
into
es
mov
cmp
in
cmc
push
mov
testl
mov
push
xor
scas
pushl
and
mov
pop
ljmp
xor
push
mov
mov
inc
dec
in
cmp
idivb
mov
nop
jmp
and
and
mov
push
cmc
xchg
add
fsub
push
mov
cltd
mov
stos
xchg
es
call
mov
sbb
outsl
div
sbb
jl
adc
or
ljmp
in
dec
test
jl
cmpb
or
fwait
aaa
in
js
imul
lock
call
std
ds
lret
pusha
jle
rcrb
cmp
sub
lods
jge
addr16
das
xrstor
mov
cltd
adc
je
xchg
ss
pushl
cmpsl
xor
insb
lods
xorb
xor
jno
into
jne
xor
fidivl
les
std
icebp
pushl
and
mov
mov
dec
pop
movsb
add
fsubr
or
incl
mulb
push
ret
shll
paddw
ljmp
test
fnsave
mov
iret
aad
inc
dec
xorb
shlb
das
out
shll
mov
cmp
or
mov
lcall
imul
pop
adc
repnz
fsubl
push
imul
ja
std
inc
loop
out
dec
fwait
rcr
xchg
inc
iret
pop
popf
ret
pop
test
lcall
xchg
mov
sarb
cmpl
sub
sbb
les
decl
mov
pop
aam
cmp
shr
jmp
mov
jge
jp
sbb
sar
decl
ss
pop
mov
jne
fmul
xchg
sbbb
and
or
mov
adc
cs
jb
jmp
cmp
pushf
repz
or
insb
call
pop
test
fnstenv
mov
jg
inc
cmp
jg
popa
or
cmp
fisttpll
fisttps
sub
bound
movsl
lcall
cld
ljmp
mov
jg
xchg
outsb
out
aas
outsl
dec
lahf
scas
clc
jnp
or
jmp
mov
popa
mov
ja
ret
jnp
mov
in
icebp
mov
or
jle
cli
pusha
test
aaa
pop
pop
call
ds
call
jg
rolb
jo
push
jb
mov
int
call
sub
into
pop
sub
inc
lods
jg
outsl
sub
sbb
push
mov
lcall
aas
sbb
ret
push
inc
xchg
fs
and
push
imul
xor
fiadds
outsl
jg
iret
pop
arpl
test
loop
cmp
jmp
and
mov
cld
decl
ljmp
mov
jg
jo
mov
inc
push
xchg
in
and
cmp
push
or
aas
fimull
call
push
clc
and
xchg
repnz
cmp
xchg
xchg
push
movsl
mov
call
fdivl
mov
mov
jb
jno
cwtl
repnz
cwtl
mov
add
cmp
ss
test
ljmp
je
outsl
mov
push
cmp
subb
pushl
int
movsl
xlat
sbb
repz
nop
rcrb
in
jb
or
out
cli
mov
lcall
cmp
cli
leave
jbe
sub
and
js
push
mov
mov
jae
scas
decl
sub
and
jmp
sub
mov
iret
sub
rcll
cltd
fstcw
jge
push
lcall
or
adc
nop
int3
setge
out
sub
jnp
cli
stos
cli
dec
out
mov
sti
xchg
push
xlat
pusha
and
test
xchg
adc
push
xchg
mov
aad
jp
enter
mov
cmp
jmp
in
push
jecxz
push
pusha
pusha
dec
jbe
clc
adc
jnp
xchg
push
dec
push
decl
movsb
in
loope
sub
out
cltd
lea
gs
cmp
lods
repnz
int3
add
push
inc
mov
push
lods
adc
inc
repnz
pop
jbe
call
pop
addl
fistps
popf
ljmp
decl
and
imul
sub
icebp
lods
fst
das
cli
inc
cmp
sub
lods
out
sbb
jno
pop
mov
ljmp
and
sub
addb
sbb
and
outsb
mov
jle
sti
insb
mov
test
jnp
fidivrl
xchg
xor
add
dec
clc
ret
cltd
mov
xchg
fcos
decl
or
ror
mov
mull
mov
pop
arpl
cli
orb
in
mov
in
cmp
ret
add
int3
cli
test
cmp
iret
lods
mov
lock
sbb
je
imul
pop
cmp
test
rcrl
pop
negb
mov
mov
test
fwait
push
test
imulb
lcall
add
aas
mov
fldenv
fsubrl
mov
aaa
notb
in
xor
cwtl
inc
jmp
pop
pop
dec
out
ss
adc
fdivs
call
add
das
mov
mov
push
std
ljmp
jp
jns
cltd
fldl
xor
rclb
aad
pop
adc
mov
push
popa
mov
sub
fisubrs
ljmp
mov
mov
inc
lret
mov
fldcw
lods
stc
repz
decl
push
insb
ret
jbe
mov
ficoml
mov
test
call
push
cmp
sbb
jmp
sub
mov
jns
jmp
add
lds
daa
mov
add
mov
mov
loopne
and
sbb
aam
xor
test
call
sub
sti
je
cmp
jge
rclb
push
pop
sbb
push
les
jge
push
mov
jg
decb
loope
mov
test
out
outsb
jecxz
aad
xchg
sahf
push
pop
pop
add
jg
inc
cmp
imul
stc
cmpsl
xor
sti
or
mov
pop
or
out
clc
jmp
jns
adc
filds
inc
cli
push
subb
adc
out
leave
ret
jl
jne
inc
jo
mov
bound
push
decl
push
mov
jg
imul
xor
push
lds
push
out
mov
decl
jo
lock
enter
lock
js
in
sub
jnp
mov
cld
adc
or
xlat
cld
pop
ret
inc
xchg
xor
es
js
repnz
push
shl
mov
mov
sbb
pusha
push
jge
pushf
ret
cmp
pushl
mov
mov
xchg
cmp
aam
dec
out
push
in
jnp
inc
cltd
bswap
imul
cltd
decl
cli
es
dec
lcall
adc
out
in
cmp
es
jg
lcall
cmp
cmpsb
inc
insb
decb
test
or
leave
inc
dec
sub
aaa
std
fcompl
popf
jl
pop
addr16
push
mov
cmovae
ret
outsb
mov
xchg
lods
dec
push
mov
mov
xchg
push
pop
test
jnp
sbb
ljmp
and
js
xchg
test
test
inc
psubq
cmp
in
xchg
pushl
jnp
popf
data16
pop
out
pop
dec
mov
pop
xchg
test
test
test
out
gs
ficoml
movsb
lret
xabort
dec
fidivl
pushf
out
in
pusha
lds
in
jmpw
adc
mov
outsl
xchg
mov
jl
popa
inc
dec
mov
mov
or
stos
mov
adc
push
std
jg
xchg
mov
mov
addl
or
mov
jnp
ret
inc
and
call
sbb
cmpsb
sbb
xchg
add
mov
ret
mov
imul
cmp
icebp
call
mov
movsb
mov
add
push
pop
push
out
int3
xchg
leave
jns
mov
nop
ret
xchg
je
pop
xchg
inc
imul
xor
inc
mov
ss
incl
adc
mov
popa
in
pop
sbb
decl
repnz
and
push
or
dec
xchg
mov
sahf
pop
std
repnz
rcrb
fxch
adc
dec
sbb
out
in
lahf
push
into
movsl
pop
subb
addr16
pushl
dec
rcrl
scas
fdivrp
movsl
fadds
xchg
jne,pt
lds
outsb
xor
insb
dec
dec
push
inc
add
cmp
outsl
clc
ljmp
sbb
xchg
xchg
sbb
sbb
mov
call
outsb
dec
mov
sti
mov
jmp
and
out
or
enter
sbb
mov
out
adc
lahf
inc
jmp
divb
mov
test
movsl
jo
sbb
mov
push
int
stos
insl
push
jnp
inc
mov
cmp
mov
stos
je
add
mov
fdivr
call
jb
das
jnp
or
dec
mov
dec
out
pushl
loop
and
repz
lahf
push
inc
sti
fcompl
gs
js
dec
mov
xchg
out
movb
stos
pusha
in
pop
cld
es
dec
enter
ret
mov
movsl
imul
inc
xor
dec
xor
push
sbb
mov
stos
ljmp
add
mov
jns
mov
xchg
sub
sub
call
jmp
insl
outsb
mov
mov
fnstsw
sbb
call
dec
xor
sub
scas
cld
lahf
and
cmp
lcall
inc
fidivs
shlb
scas
adc
or
fs
dec
decl
outsl
into
sbb
out
enter
mov
lret
or
repnz
jg
mov
xor
ficomps
sbb
outsb
mov
sub
loope
push
ret
jecxz
sub
jo
lret
hlt
cmp
jbe
inc
aas
pop
push
out
cltd
in
push
loope
call
push
ljmp
call
insl
out
xchg
fmull
dec
iret
mov
push
pusha
mov
xrelease
loop
lds
jno
or
mov
mov
push
pushf
inc
cmp
sbb
push
stc
stos
lret
popf
out
test
lcall
enter
sub
fists
jg
jae
push
jne
mov
outsl
xchg
add
decl
inc
out
in
aaa
mov
incl
in
fs
test
sbb
loop
add
ljmp
in
clc
sub
mov
pop
pop
lds
stos
and
sahf
es
scas
call
jo
dec
rorb
inc
add
jmp
gs
ss
xchg
xor
fildll
inc
push
lods
repz
mov
mov
loop
jo
and
pop
decl
lock
xchg
jae
xor
push
cwtl
adc
jae
daa
je
lds
ljmp
stc
pop
inc
fisubrs
std
jg
loopne
pop
pop
imul
add
lcall
incl
scas
pop
pop
outsb
out
xchg
test
shl
scas
xor
nop
mov
shll
jg
inc
mov
fwait
idivl
push
mov
xlat
add
lret
sbb
incl
push
sub
dec
cwtl
and
and
sbb
dec
jmp
push
xchg
pushf
mov
div
nop
ud1
stos
les
out
push
ret
aad
dec
call
loopne
push
add
imul
lea
dec
dec
lcall
ljmp
cmpsl
pop
mov
xor
leave
aas
sub
lret
in
push
pusha
movsb
sti
pop
imul
call
test
xchg
imul
std
sub
bound
fstpl
mov
jmp
mov
or
mov
pop
aaa
jmp
inc
in
fistps
popf
xchg
fwait
xchg
lcall
enter
push
xchg
in
xor
shrb
gs
fistl
xor
fs
or
call
fisubrs
cmp
pop
pop
add
jb
fcomip
fdivr
decl
shrb
pop
orl
hlt
cs
xchg
int3
add
nop
incl
push
mov
lcall
lock
pop
ljmp
fs
adc
idivb
and
in
jno
test
out
out
lcall
hlt
jle
jnp
test
or
cmpsl
adc
cli
mov
pusha
lods
add
call
and
data16
out
repz
repnz
adc
jg
lcall
lods
pop
xchg
push
or
das
bnd
xor
clc
sbb
mov
ja
pop
sbb
pop
push
mov
push
mov
sbb
pop
jbe
mov
mov
sub
sbb
jnp
add
push
loop
cmp
in
lods
add
lock
aam
cmp
aad
push
ret
adc
push
fcomps
xchg
std
cli
cmc
lahf
jp
sbb
add
shrl
add
push
add
in
pop
ljmp
cmc
and
scas
xchg
sbb
mov
mov
aaa
mov
in
mov
ss
inc
enter
sub
mov
sub
jle
insl
lahf
fcomip
mov
add
push
pop
out
icebp
pop
cmc
incl
je
inc
popf
dec
jp
pop
mov
pop
xor
loop
push
in
out
inc
jg
in
dec
ljmp
mov
dec
incl
and
add
sbb
in
scas
pop
js
push
push
out
data16
add
push
xchg
fs
jnp
add
mov
jne
aaa
pop
into
in
push
pusha
jne
or
popa
pop
and
cltd
insb
sbbl
pop
mov
call
out
rcrl
add
jl
and
lea
mov
push
or
mov
sarb
dec
xor
in
sub
push
dec
or
pushf
pushl
rorb
or
adc
daa
les
xor
cmp
dec
arpl
sub
mov
mov
fldt
out
das
sub
sahf
add
jae
mov
stc
mov
call
jge
movsl
or
loopne
mov
popf
mov
imul
in
frstor
jmp
jmp
je
addr16
data16
dec
or
dec
dec
popf
cmp
cmp
insl
xchg
sarb
push
cld
popf
jle
mov
loop
frstor
pop
arpl
mul
fists
movsl
fdivrs
ja
fcomip
jmp
xchg
sub
in
cmp
cld
or
lcall
push
ss
lods
sbb
sub
icebp
test
jae
or
icebp
dec
out
mov
cld
inc
mov
lock
outsb
outsb
xchg
hlt
call
mov
pop
scas
decl
mov
sub
stos
icebp
sbb
dec
xorps
das
fisubs
adc
js
jno
and
and
test
xor
ljmp
decl
hlt
iret
add
in
push
push
mov
inc
iret
pop
mov
pop
sti
in
sahf
jge
xchg
lret
incl
mov
les
or
dec
dec
or
mov
pushl
xchg
mov
xchg
movsb
sub
popf
push
adc
dec
cli
dec
xorb
jle
dec
incl
testb
call
lods
js
enter
sub
jge
xor
jg
inc
std
mov
fisttps
decb
repnz
dec
sbb
testl
jne
mov
stos
mov
nop
mov
inc
xor
cmp
adc
cmpsl
dec
cs
ljmpw
enter
xchg
xor
mov
xor
outsb
stc
xor
mov
push
xor
dec
filds
repz
in
jge
test
cld
pop
aad
mov
insb
add
mov
enter
jle
aam
sbb
pushl
mov
aad
push
add
orl
hlt
xchg
mov
lods
loop
mov
call
insl
fsub
scas
insb
inc
push
add
sbb
test
jnp
outsb
lods
dec
and
insl
insl
ret
push
cmp
push
fmuls
rcrb
adc
mov
push
inc
jmp
xor
xchg
imul
add
lret
incl
pop
scas
mov
nop
outsl
or
outsb
call
shr
jbe
pop
roll
mov
push
jo
ror
jg
mov
pushf
sub
cld
xor
repz
jmp
inc
mov
xor
ret
inc
xor
hlt
mov
inc
ret
add
cmp
addr16
or
fcom
lcall
nop
fdivrp
sub
xor
popf
bound
xchg
daa
outsl
call
jns
decl
dec
pop
xor
movsl
nop
fwait
mov
in
je
out
pop
leave
js
ret
and
call
lret
xor
es
mov
jae
xlat
enter
scas
or
ds
adc
dec
inc
and
roll
or
rclb
add
push
jnp
bound
inc
pushf
and
sti
stos
leave
adc
stos
push
mov
push
mov
lock
sbb
sbb
sbb
ljmp
jecxz
movsl
test
pusha
mov
fisubrs
pop
ljmp
incl
and
std
arpl
sbb
out
jl
push
mov
pushl
push
mov
scas
push
sahf
xchg
mov
xchg
push
xchg
xchg
mov
add
in
mov
adc
rclb
dec
ljmp
out
sbb
loope
shlb
push
cmpsl
push
cmp
out
clc
addr16
lret
repnz
cmp
mov
dec
pop
fbstp
cld
ljmp
mov
dec
cli
pusha
cmpsb
dec
mov
adc
dec
out
ret
fildll
xlat
jo
add
push
xor
loop
jg
pop
mov
xor
dec
dec
jae
sbb
or
mov
popa
test
fildl
pusha
xchg
data16
mov
and
adc
xor
ljmp
fdivrl
xor
mov
push
shlb
jp
lret
jge
push
pop
fdivr
decl
mov
inc
pop
fwait
addr16
into
sub
push
pop
fnsave
mov
lcall
dec
pop
push
xor
mov
jmp
inc
pop
lds
dec
mov
mov
jno
or
pop
or
popf
xchg
dec
jns
lea
cmp
into
adcl
rcr
cmp
pusha
fisubrs
push
aam
jmp
jo
ret
arpl
sbb
fmul
cwtl
push
das
dec
inc
and
stos
mov
insb
outsb
add
call
mov
pusha
ja
inc
aad
test
fld
adc
mov
insl
lcall
call
pop
movsb
aad
jo
and
mov
adc
pusha
sbb
fdivrl
or
movsl
fiaddl
dec
jmp
mov
lcall
pusha
imul
ret
or
mov
inc
ljmp
jmp
and
mov
fs
vmovshdup
out
mov
pop
pop
lea
cmc
adc
or
inc
xor
sub
mov
adc
or
push
or
rclb
jle
mov
and
inc
dec
dec
ljmp
push
pop
call
mov
add
mov
xlat
in
imul
mov
in
mov
jge
push
add
insb
bound
fcomip
out
pop
lods
mov
or
jecxz
fbstp
mov
xor
cld
pusha
mov
incl
xorl
shlb
pop
loop
es
jle
cmpb
jg
xchg
lcall
mov
push
fisubrl
test
mov
mov
jl
mov
je
out
mov
cmp
inc
xchg
cwtl
ss
lcall
and
pop
gs
push
mov
js
cmp
fisttpl
jg
or
sub
lea
lret
ds
jo
mov
sub
js
push
cwtl
lret
mov
jns
arpl
mov
xor
xchg
mov
inc
js
loope
dec
std
sbb
mov
push
jmp
xor
and
movsb
jg
adc
call
lock
popa
jb
ret
pop
mov
call
fst
in
jp
dec
in
jne
mov
aaa
adc
js
mov
das
cli
call
cmp
pop
mov
out
fst
call
or
cli
outsl
clc
fmuls
mov
cmp
add
arpl
jmp
mov
jb
mulb
loopne
popa
roll
leave
mov
or
cmp
ror
data16
insl
pushl
lahf
add
inc
insl
mov
inc
addr16
ficoml
lock
inc
mov
mov
cli
xchg
pop
dec
es
add
or
push
sbb
jg
lcall
es
sbb
gs
xchg
clc
push
pop
in
push
sar
scas
icebp
ljmp
or
cmc
mov
mov
mov
int
dec
pushf
push
aaa
aam
mulb
scas
xor
test
sbb
xchg
ljmp
jnp
mov
fbld
lock
test
dec
add
insl
dec
sbb
mov
fisttps
adc
subb
mov
cmp
sbb
or
or
pushl
and
cmp
fwait
dec
shl
rcl
push
test
inc
sarb
decl
mov
scas
mov
sbb
shr
mov
jno
push
jge
xor
ds
decl
jb
inc
sahf
cmpsb
push
cld
pop
cmp
jecxz
dec
scas
jmp
pushl
mov
ret
xchg
mov
stos
lcall
cmpsl
or
xor
in
or
ret
sub
xchg
lcall
xor
pop
sub
add
fbld
xchg
mov
cli
xchg
outsl
mov
xchg
int3
xlat
decl
jno
add
adc
dec
jle
in
jae
jecxz
sub
cmc
push
pop
sub
iret
sar
into
lcall
stos
push
in
push
clc
jbe
mov
xor
cwtl
mov
add
fdivrl
push
insb
sub
dec
gs
inc
or
xchg
aas
jmp
outsl
jae
pushf
jnp
push
cld
push
jno
push
sbb
inc
fnstcw
jg
add
sbb
decl
shl
jp
inc
pop
or
jnp
pop
jae
ja
sti
push
test
ss
lcall
pop
add
loop
jmp
push
push
loop
xchg
loopne
inc
pushl
outsl
adc
pop
ds
shrl
jmp
xchg
jbe
icebp
std
mov
call
stos
sub
test
sti
popf
hlt
stos
mov
je
push
out
mov
mov
call
jmp
sub
push
pop
sbb
cmp
mov
jg
hlt
add
push
mov
xchg
loop
gs
aad
cmc
dec
sub
dec
xor
xchg
insl
adc
push
xchg
xchg
test
push
inc
mov
adc
mov
lret
sub
sbb
lcall
push
fdivp
insb
and
dec
push
xchg
mov
fdivp
and
push
rcl
pop
mov
mov
out
ret
jo
or
rorb
stos
stos
cmp
fdivs
movsl
jb
ljmp
mov
or
xchg
jns
ffreep
lock
pop
sub
xchg
addb
jmp
iret
or
sbb
call
stos
sbb
rorl
outsl
cmpsl
pop
testl
mov
ds
add
orb
in
sbb
orl
decl
lret
cmp
cmp
pop
test
rcll
out
xchg
adc
inc
sbb
in
pushl
test
xor
cmpsb
jne
outsl
arpl
xor
leave
mov
ss
incl
je
rol
xchg
lods
jle
mov
sahf
mov
adc
call
addr16
xabort
imul
dec
cli
xchg
in
push
das
mov
ljmp
sbb
out
mov
andb
pop
push
push
repz
lcall
mov
adc
jo
pop
lcall
and
cmpsb
dec
xor
inc
xor
pushl
push
adc
jp
mov
outsl
xchg
add
jae
in
jl
inc
lcall
je
popf
or
lock
lea
mul
and
cld
lcall
clc
jle
loopne
fdivrs
adc
jb
out
pop
dec
scas
comiss
mov
mov
mov
push
push
cwtl
push
not
and
and
incl
test
xor
jle
cmp
testl
inc
cltd
inc
hlt
add
lcall
lea
lret
push
in
gs
daa
fisubrl
mov
mov
jecxz
push
dec
push
cmc
mov
cmp
icebp
or
imul
jnp
int
out
das
inc
orl
fimuls
rolb
sbb
es
dec
and
cmpsl
cmp
je
or
mov
out
fldl2e
xor
inc
adc
jmp
dec
sbb
dec
xchg
daa
stc
sahf
popa
aas
popa
cmp
loope
xchg
mov
je
pop
inc
push
lock
call
pushf
iret
and
adc
add
adc
push
jbe
xchg
ja
mov
mov
call
repz
lcall
test
sub
push
and
in
or
pop
in
jp
jae
lea
in
cwtl
int
nop
fsts
clc
xchg
hlt
jmp
pop
dec
jg
stos
cmp
cwtl
cwtl
loope
ret
inc
in
pop
imul
out
cmpsl
dec
ljmp
std
or
stos
lods
scas
and
mov
repz
cmc
popa
pop
ret
pushl
pop
fstl
mov
clc
roll
cmp
stc
push
fwait
adc
inc
call
adc
ljmp
data16
adc
je
sub
aas
jl
cmpsb
sbb
or
and
ret
loopne
mov
ljmp
outsb
xchg
and
pop
mov
movsl
add
sbb
ss
cli
jno
and
ljmp
insl
cli
lcall
xchg
sti
mov
pusha
xor
adc
sbb
es
decl
ja
repnz
imul
test
mov
and
dec
cli
dec
dec
or
jns
bound
sbb
cwtl
ja
int3
arpl
test
mov
push
sbb
add
aam
xchg
cmpsl
push
sub
and
pop
shrb
mov
gs
or
fistpl
ja
lret
insl
push
mov
push
nop
ljmp
mov
xor
sbb
sub
xor
call
insb
or
mov
ds
push
clc
jg
mov
mov
cmp
int
cmp
sti
mov
xor
add
mov
mov
aaa
xlat
pop
movsl
out
xor
decl
outsb
add
scas
push
es
jmp
cwtl
andb
or
rorl
clc
call
or
jb
lcall
jne,pn
flds
add
sbb
xchg
mov
pop
mov
call
ds
adc
pusha
in
outsl
pop
fxch
pop
jge
sub
push
int3
sub
sbb
mov
mov
jmp
jge
out
sub
lods
add
add
and
lock
dec
stos
adc
das
dec
lahf
jb
pop
fcomip
jmp
out
sub
insl
popa
jl
or
shlb
cmpsl
call
in
loopne
sub
out
sbb
lret
test
mov
fldenv
loop
movsl
divb
jp
mov
xor
mov
and
push
mov
dec
pop
decl
mov
ret
loop
pop
jbe
call
lcall
xrstor
add
pop
ja
jmp
repz
ja
cmc
das
pop
clc
push
jns
lcall
jle
xchg
aam
pushf
mov
repz
das
rol
lret
and
es
cmp
or
sbbb
je
dec
mov
and
stc
inc
incl
xchg
push
cmpb
fstl
popa
fistl
cs
sbb
fsubs
jg
xor
cmp
pop
cmp
and
pop
inc
outsb
lcall
dec
mov
mov
aaa
cld
std
push
pop
jnp
dec
ss
mov
dec
jbe
xchg
pusha
inc
push
in
faddl
mov
jmp
stos
iret
icebp
repnz
sbb
xchg
and
jg
iret
hlt
pop
loopne
repz
lahf
aad
ret
daa
jg
pop
push
cmp
out
mov
inc
in
lret
out
jp
adc
out
dec
jecxz
fisttps
mov
inc
push
cld
data16
popa
je
push
psrad
lcall
xor
add
jle
or
ror
xor
lock
enter
cwtl
add
dec
in
out
mov
insb
cmp
aas
jp
adc
cmp
repnz
xchg
out
das
mov
pop
xlat
cmpsl
out
or
ljmp
pop
or
ss
jge
insb
xchg
idivb
lret
cmp
push
mov
js
sbb
decl
roll
leave
cmp
adc
adc
jp
push
insb
mov
pop
lcall
jae
mov
addr16
je
fwait
or
push
xchg
or
stos
or
into
rcl
pushl
rcl
in
mov
mov
adc
pop
in
movsb
lcall
std
test
dec
pusha
aas
xor
outsb
insb
mov
adcb
lods
mov
jle
and
leave
stc
pushl
push
cmp
inc
cmp
xor
mov
lods
orb
jecxz
sbb
std
sbb
sub
pop
cmp
mov
xor
shll
inc
adc
insb
push
jmp
sbb
call
jns
mov
xchg
sub
ja
mov
insl
out
call
les
and
pop
pop
sahf
mov
cmp
pop
or
mov
adc
add
cld
loopne
inc
sub
enter
sbb
mov
nop
cli
dec
data16
jmp
and
xchg
ret
sbb
xor
adc
into
es
or
push
ljmp
stos
and
xor
mov
and
aaa
dec
mov
mov
adc
test
jmp
jle
pushl
cld
and
aad
adc
fsubrs
mov
test
or
out
insl
loop
xchg
insb
add
in
cs
inc
ret
xor
cs
jmp
pushf
and
dec
out
test
ror
and
out
jno
fs
pop
pop
aas
lret
test
out
add
mov
mov
fbstp
jns
icebp
aaa
push
cli
inc
outsb
ss
inc
or
scas
jns
or
pop
std
cmp
pop
adc
les
push
jae
sub
sahf
jmp
inc
cs
lcall
pop
lock
dec
mov
or
fstl
repnz
mov
ss
lret
jno
or
jno
dec
stos
scas
scas
out
roll
cmp
inc
fwait
lret
cmp
cmc
loope
mov
inc
iret
cmp
sbb
mov
cmp
insl
arpl
movsl
scas
lret
jne
in
pop
pop
push
pop
jl
push
daa
bound
ljmp
es
jns
ret
daa
ffree
lret
sti
mov
nop
pop
xchg
push
dec
stc
jecxz
dec
gs
xchg
dec
cmp
ljmp
inc
cli
jl
loop
rcrb
mov
imul
sbb
pop
dec
mov
call
movsb
jo
das
mov
inc
cmp
popf
out
out
fimuls
call
inc
adc
lahf
xor
gs
adc
fadds
das
pop
sub
push
sbb
adc
adc
push
jg
pushl
jmp
data16
and
inc
mov
popa
mov
test
sbb
je
inc
out
daa
dec
fstpt
and
xchg
popf
add
xor
incl
in
lret
dec
cmp
or
lret
rol
xlat
subl
mov
aad
pop
or
das
push
repz
insb
pop
es
jg
jl
jb
pop
push
ljmp
mov
enter
sbb
ljmp
in
sub
call
shl
stc
rcll
int3
es
ds
dec
test
pushf
or
bound
call
imul
ret
stos
xor
ret
or
mov
push
ljmp
test
movsb
jmp
and
adc
sbb
clc
jg
lock
test
lea
mov
pushl
test
cmp
mov
sbb
enter
fldenv
jnp
ljmp
enter
lcall
xchg
jae
outsl
xor
jl
xor
cwtl
push
jmp
mov
or
push
inc
jl
mov
hlt
adc
incl
ljmp
push
or
mov
push
std
subb
scas
enter
std
jmp
into
jb
push
aas
pop
sbb
mov
in
mov
fcoms
aaa
adc
xchg
xchg
mov
aaa
mov
scas
xor
lock
sbb
flds
arpl
incl
adc
xlat
sub
cli
sbb
xor
lds
jge
incl
nop
mov
mov
push
repnz
jbe
cmova
cld
add
cmp
sbbb
cmpsl
cmp
push
pushf
shr
inc
ljmp
daa
ss
cli
test
sub
mov
mov
mov
or
sub
jo
popf
into
adc
inc
test
outsl
mov
pushl
data16
test
aas
mov
gs
push
loopne
sbb
jmp
mov
fs
sub
jmp
rcrb
repz
cmp
popa
dec
mov
or
leave
and
cmpsb
pop
imul
hlt
add
ss
cmc
je
in
inc
outsl
mov
popf
adc
xor
mov
lods
sahf
ljmp
lret
xlat
lcall
lcall
int3
in
out
sub
repnz
xchg
or
leave
pop
sbb
ljmp
lock
inc
jb
ss
mov
push
addb
xor
fwait
loop,pt
jg
mov
adc
in
loopne
ret
or
dec
call
shll
int
dec
loop
pop
enter
gs
mov
jo
dec
stos
outsl
ljmp
pusha
lods
ret
loopne
fwait
mov
lods
xlat
stc
xor
notb
pop
shlb
jg
mov
jp
imul
sbb
fsub
jae
push
je,pt
mov
call
adc
stos
jp
lock
xchg
xor
push
in
jmp
dec
jp
wrmsr
xor
leave
push
adc
push
addl
in
loopne
xchg
pushl
out
xchg
rcrb
pop
pop
push
sbb
mov
xchg
popa
pusha
mov
lods
xchg
mov
incl
bound
mov
xchg
dec
mov
inc
shr
jl
enter
mov
mov
incl
cld
aaa
xor
test
in
out
jo
scas
shr
mov
dec
fisubl
ja
jbe
mov
add
mov
jecxz
pop
sbb
mov
stc
jge
sub
cmp
rcll
ret
mov
sbb
dec
pop
mov
lea
icebp
cmp
inc
xor
shl
and
ljmp
sub
inc
dec
and
jnp,pt
cmp
in
xor
jl
test
mov
jne
pop
mov
ss
xorl
aaa
ss
ljmp
push
push
int
add
push
pop
push
xchg
jp
out
bound
jg
cmp
leave
xchg
cmp
popa
imul
dec
lret
xchg
sbb
scas
lods
lds
xchg
ljmp
call
ds
cmpsl
adc
insb
push
stc
lahf
mov
xor
dec
lret
pop
movsb
adc
icebp
add
mov
and
xor
loope
mov
dec
adc
jg
outsl
jmp
xchg
lcall
pop
mov
push
adc
pop
pushl
fcompl
test
sub
stos
dec
test
shl
jb
call
xchg
jnp
int3
adc
pop
sbb
lock
xlat
sub
addl
call
mov
out
out
roll
mov
mov
inc
fistpl
dec
fisubl
bnd
pushl
aad
je
enter
cmp
inc
je
add
aad
mov
decl
mov
roll
add
adc
movsb
in
fnstcw
lahf
adc
dec
test
lcall
pop
push
sbb
outsb
repz
seto
in
clc
push
adc
or
cmp
sbb
xchg
mov
lcall
icebp
sbb
pusha
fsubs
inc
leave
cmp
dec
xchg
push
ror
leave
aaa
cmp
fxch
pop
and
inc
mov
sub
flds
jb
adc
repnz
lock
adc
in
jne
incl
add
sub
add
xchg
jecxz
mov
cmp
pushl
movsl
xchg
mov
mov
mov
mov
out
xchg
inc
into
dec
andb
jg
sub
push
dec
push
test
add
sbb
inc
mov
sarl
mov
je
roll
clc
in
dec
mov
out
js
or
mov
xchg
ror
loop
imul
std
mov
repz
lock
mov
adc
lcall
clc
sub
repnz
sarb
pushl
sbb
mov
fldcw
sbb
cld
mov
or
mov
test
in
push
jg
and
mov
decl
push
push
sti
xor
les
popa
xchg
ja
lods
mov
decl
lds
mov
ljmp
jl
mov
pop
call
jl
shll
mov
xor
mov
pushf
pop
sbb
mov
stc
lcall
fs
mov
dec
jge
cwtl
pop
lock
cmp
pop
frstor
fs
xchg
ljmp
dec
xchg
adc
incl
or
sahf
into
push
xchg
int3
dec
or
arpl
pop
xor
sbb
rcl
push
ljmp
and
push
into
cli
pop
cmc
inc
push
call
test
pop
lcall
std
into
adc
hlt
xchg
leave
mov
lcall
enter
imul
ja
int
dec
or
scas
inc
sbb
in
sarl
xor
add
ret
movsb
mov
sar
sbb
and
decl
or
mov
mov
test
jmp
pop
sub
outsl
mov
cmp
incl
incl
mov
iret
cmp
xchg
mov
push
xchg
nop
cli
lcall
mov
leave
push
mov
insl
ficompl
loopne
cmp
dec
push
and
sbb
mov
mov
mov
inc
sbb
add
pop
pop
ret
out
mov
sub
cltd
gs
jnp
add
inc
dec
fcomi
mov
push
test
and
lahf
or
into
arpl
or
push
inc
jg
pop
mov
inc
adc
lret
shlb
movsl
or
push
mov
xor
insb
mov
mov
incl
push
cwtl
and
das
pop
jns
fs
sbb
cmp
jg
dec
std
stc
inc
mov
das
push
dec
xor
rcl
ja
mov
cmp
repz
aam
outsl
xchg
decb
lock
adc
inc
push
mov
decb
lock
out
push
iret
je
inc
pop
into
enter
or
lcall
mov
call
push
sbb
lret
cld
sti
push
xor
inc
cli
lcall
cs
cli
jp
xor
aad
push
mov
daa
push
outsl
jle
jg
ljmp
mov
out
scas
xchg
cltd
insb
mov
add
xchg
xchg
clc
sub
mov
add
mov
subb
inc
imul
test
jmp
rcr
adc
jno
in
pop
add
sar
cmp
push
call
cld
cs
bnd
add
push
jae
mov
mov
xchg
push
popa
jb
call
std
add
jmp
out
movsb
pushf
mov
shlb
repz
pop
lret
add
sarl
add
call
imul
lods
movb
xor
orl
push
pushf
out
pop
out
jg
jae
push
ds
add
imul
shrl
xlat
int3
fcoml
gs
inc
mov
mov
pushl
addb
pop
rcr
inc
xchg
jp
xor
adc
or
mov
test
cs
ljmp
sbb
sub
push
sub
aas
pushf
and
push
xchg
adc
mov
mov
and
dec
sbb
mov
shlb
mov
adc
lcall
xchg
ret
in
mov
sarb
sbb
push
or
sbb
pop
xor
jnp
dec
sub
ja
sahf
xchg
xchg
fsts
aas
pop
fadds
mov
addr16
incl
xchg
addr16
xchg
inc
addr16
inc
inc
xor
mov
sahf
stos
ss
addr16
js
outsl
xchg
cmc
mov
sub
adcb
mov
test
dec
repnz
clc
inc
das
pop
sti
test
lahf
popa
sub
push
add
mov
in
outsl
clc
decl
mov
movsl
ja
jo
fsts
stos
mov
push
pushl
mov
test
push
xchg
into
xor
jb
pop
cmc
mov
xchg
dec
and
mov
mov
cmp
fisubs
pop
lcall
pushl
mov
xor
cs
stos
imul
cmp
rorl
subb
adc
adc
iret
inc
pop
jecxz
push
lcall
ljmp
cmc
inc
aad
lahf
in
test
xchg
pop
xchg
movsl
mov
push
sub
decl
push
test
loopne
sub
rol
lahf
jl
adc
jb
cltd
ljmp
mov
insl
loopne
nop
adc
test
inc
or
call
mov
outsb
loopne
decl
cli
sbbb
mov
inc
sub
add
mov
cmp
std
jle
sbb
enter
add
jmp
aaa
jmp
pop
decb
loop
jmp
aad
push
pop
lcall
lcall
jno
arpl
sub
cmp
call
leave
sbb
or
xor
cmp
mov
std
xchg
in
imul
or
in
mov
gs
or
adcb
mov
xchg
iret
popf
add
clc
inc
push
cmp
ljmp
test
add
addr16
dec
cmp
push
and
sbb
pop
cmp
test
inc
sub
arpl
jns
jno
adc
insl
and
dec
lods
xor
jg
cmp
gs
push
daa
pusha
mov
jb
inc
cli
cmpsl
scas
jne
call
sbbl
lea
je
xchg
cmp
mov
mov
sub
jmp
mov
icebp
test
pop
and
mov
stos
ret
iret
clc
icebp
mov
cld
lods
iret
icebp
out
lcall
jno
xorb
popa
sbb
jecxz
mov
sti
movsl
push
stos
sbb
scas
call
daa
cld
dec
cmp
cs
xchg
push
sti
mov
dec
and
inc
adc
je
and
adc
fs
inc
jg
nop
aam
movsb
mov
jg
push
lret
mov
xor
dec
out
mov
adc
fistl
call
mov
rcrb
repz
add
or
repnz
pop
loopne
imul
cmp
iret
lea
imul
xor
out
movsb
xor
aas
mov
dec
outsl
xchg
addr16
mov
dec
loope
jmp
mov
das
clc
ljmp
mov
inc
push
jge
fcomps
imul
hlt
jnp
adc
lcall
mov
sbb
sub
xchg
ret
call
or
mov
in
jge
outsb
enter
das
mov
leave
adc
pop
jnp
push
pushl
ror
push
cmp
sub
les
repnz
imul
jb
pop
outsb
test
push
dec
fcomip
stos
leave
fsub
and
push
inc
mov
xor
pushl
lods
mov
call
jge
and
jmp
jb
cld
push
cmpsb
es
cmp
sbb
adc
sbb
jmp
mov
push
mov
gs
cwtl
pusha
mov
lods
add
decl
dec
bound
inc
xor
jge
or
in
outsb
sbb
and
clc
fildll
xchg
ds
inc
cmpsl
int3
jno
mov
ljmp
fs
aaa
sub
js
xor
adc
jge
jle
jo
faddl
adc
mov
add
inc
mov
mov
sti
jmp
mov
mov
cmpsb
sub
incl
inc
aad
lcall
daa
xchg
inc
push
insl
cmp
fwait
mov
icebp
call
sub
test
and
cmpsb
pop
lods
pop
jl
inc
jo
je
xchg
decl
lock
adc
rcll
ucomiss
and
pop
mov
scas
fdivrp
add
push
cld
ja
pop
dec
sub
cmpsb
cmpb
mov
or
add
icebp
pushl
mov
xchg
fistpl
pop
icebp
adc
mov
lret
call
jecxz
xor
push
sub
sub
push
orb
inc
in
ret
lea
popa
mov
mov
clc
or
mov
cli
cmp
mov
lret
jecxz
movsb
push
pop
outsl
sub
jnp
lahf
imul
call
push
into
stos
lods
xchg
repz
jge
shll
negl
movsb
inc
lahf
add
cmpb
test
shrb
lcall
xor
aaa
adc
les
addr16
fisttps
push
cmp
jnp
repz
lods
decl
inc
cmp
nop
ret
out
dec
mov
daa
pop
add
gs
icebp
sub
call
dec
mov
pop
mov
aam
push
imul
test
adc
push
jo
sbb
inc
pop
incl
mov
sarb
mov
push
cmp
loopne
cmc
jae
stos
pop
and
or
sub
stc
or
out
je
pushl
sti
aad
mov
and
sub
push
cwtl
cmpsl
pop
xlat
jecxz
mov
iret
mov
adc
unpcklps
int3
pop
data16
call
jl
fldcw
in
insb
pop
pushl
mov
mov
lret
scas
ret
push
cmpb
xor
ds
lods
sbb
call
add
xor
cld
adc
outsl
mov
pop
sbb
aad
adc
das
jp
stc
shlb
pop
sub
insl
roll
call
call
cmpb
cmpsb
sbb
das
jecxz
add
leave
cmp
adc
xor
inc
inc
cmpsl
incl
cld
out
pusha
stc
aaa
push
mov
scas
rcl
clc
jnp
hlt
aad
push
cmp
dec
xor
test
dec
cmpsb
cmp
bound
add
int
and
mov
pop
ds
cmp
shlb
sub
test
fnstenv
push
das
inc
insl
xchg
cmpsb
incl
push
sub
push
fadd
or
loop
mov
mov
sahf
cmp
mov
dec
add
cmc
inc
in
rorb
in
test
cmpsl
pusha
cmp
pop
decl
mov
incb
pop
mov
sbb
pushl
cltd
rol
lods
pop
cmp
push
jp
jle
std
push
ljmp
movsl
mov
push
mov
movsb
int
dec
pushf
pop
mov
sbb
cli
sbb
mov
sti
sub
mov
mov
add
fdiv
in
push
inc
lock
lock
and
or
call
mov
repz
fdivr
call
and
or
pop
pop
jns
fwait
push
push
or
or
add
inc
scas
nop
xchg
testb
repz
ds
and
out
xchg
mov
insb
or
jecxz
push
dec
std
and
pushl
jle
addb
repz
lret
sti
shr
cmp
rcrb
push
jl
call
and
jecxz
loop
imull
xor
xorb
pop
add
hlt
sbb
and
pusha
sbb
fisttpll
enter
rclb
shl
fmulp
test
leave
pop
inc
xchg
aad
dec
inc
push
cwtl
sahf
cli
and
jmp
loopne
jae
jo
repz
sbbl
or
pushl
loope
jno
cmpsl
lret
push
movsl
insb
cmp
sub
xor
popf
xchg
or
inc
adc
shr
int3
xchg
and
add
lcall
aas
sub
pusha
lcall
or
sbb
pop
adc
cmp
stc
mov
mov
lcall
push
sub
push
jle
sarb
jno
aam
test
lods
cld
rcrb
xor
xor
mov
adc
movsl
testb
cld
xchg
stos
mov
push
push
repz
imul
loop
cld
inc
jmp
sub
cmpsl
jmp
jo
pusha
icebp
jle
test
jnp
cmp
decl
mov
jnp
xor
mov
mov
pop
sub
scas
andb
sub
lcall
jge
add
leave
inc
dec
nop
and
rcrb
sbb
cmp
or
call
inc
push
push
ds
inc
push
adc
incl
cmc
fsubs
aas
bound
mov
lods
push
jmp
lock
push
in
cwtl
sub
imul
shrl
cmpsb
inc
in
adc
mov
decl
pop
in
aas
inc
mov
daa
divl
in
jl
sub
pop
outsb
jnp
clc
ljmp
jae
or
dec
push
sbb
loopne
shrb
lock
add
sbb
scas
push
adc
mov
nop
in
nop
pop
adc
dec
loop
ja
call
dec
ja
ret
ret
xlat
int
icebp
aaa
mov
lret
loopne
sahf
in
and
ljmp
int3
pop
mov
mov
push
xchg
fstl
xchg
daa
loope
pop
xchg
dec
ljmp
das
subl
xor
ljmp
xchg
jmp
mov
lcall
out
adc
movsb
dec
das
je
fiaddl
add
shlb
jno
sbb
adc
subl
lcall
js
xchg
mov
sub
or
insb
sub
pop
int
cmp
pop
mov
lods
mov
push
push
or
ret
mov
jg
sti
movb
mov
fucomp
mov
loopne
jmp
dec
and
push
mov
mov
inc
xor
push
mov
loope
pop
leave
mov
fsub
out
push
jae
add
loop
mov
in
popf
xor
push
dec
mov
cmp
outsl
inc
insl
aaa
in
js
sti
sbb
in
jmp
lret
push
ret
adc
aaa
mov
jo
out
add
mov
loopne
mov
shll
lods
into
sbb
push
daa
push
or
push
lods
insl
adc
and
call
pop
popa
int3
cmp
shl
and
gs
int3
adc
repnz
cmp
incl
jmp
ds
fcom
mulb
pushf
xchg
dec
iret
xchg
rcrl
popa
dec
out
mov
std
call
lods
sarb
flds
mov
and
or
mov
setl
add
push
jle
pop
jl
pusha
inc
aad
stc
fmull
dec
cmp
push
mov
and
jnp
mov
subb
mov
decl
fsubrs
lock
mov
scas
xchg
pop
dec
mov
adc
dec
es
call
std
mov
outsb
aas
sbb
scas
jno
aad
js
xor
cmp
jae
mov
pushl
imul
pop
inc
test
pushf
lock
call
fcompl
push
repz
scas
xchg
mov
xchg
inc
cmp
fwait
jmp
fwait
push
call
sahf
subb
xchg
xchg
cmp
and
xor
push
adc
push
pop
cld
ljmp
sub
push
add
movsb
cwtl
lods
enter
sub
loope
aas
mov
sub
pop
xor
pop
add
ds
loop
imul
sbb
pop
pop
scas
add
push
xchg
popa
xchg
shrb
and
cmp
cwtl
jl
cmp
sbb
mov
clc
xchg
roll
push
pusha
subl
mov
inc
xchg
ljmp
sbb
out
shr
push
imul
dec
cmpsl
jle
push
lock
decl
gs
repz
ficompl
and
adc
sub
enter
lods
int3
jge
lds
inc
cmp
pop
pop
pushf
lcall
cmc
jmp
lahf
or
testl
dec
push
jg
pop
or
jmp
lods
push
stos
dec
outsb
sbb
ja
xor
mov
mov
outsl
jg
cmp
sbb
incl
imul
test
dec
arpl
mov
pop
sub
call
enter
imul
cld
test
repz
inc
ret
push
sub
fdivr
ljmp
nop
adc
enterw
in
mulb
mov
aam
or
call
pushl
ss
arpl
loope
inc
mov
pop
in
push
dec
sub
cmc
lea
jg
call
mov
out
pop
mov
mov
adc
loope
mov
in
addr16
mov
std
outsl
xchg
cltd
jns
sub
cmp
jp
ss
inc
push
or
and
dec
cmp
scas
pop
in
popf
sub
dec
jle
cmp
mov
mov
jge
cmp
xchg
decl
mov
testl
aas
jo
pop
mov
mov
ljmp
in
and
jl
out
into
loop
ret
nop
inc
dec
inc
imul
or
test
ljmp
push
dec
jl
cmpsb
fdiv
mov
xchg
jmp
and
fs
mov
incl
loop
in
adc
fiaddl
mov
xchg
xchg
movaps
jmp
mov
jle
movsb
pop
and
in
iret
sarl
test
sbb
sarl
pop
subb
rcrb
arpl
push
mov
sbb
push
cmp
jnp
into
scas
pop
movsb
je
ret
push
ret
ja
sbb
ret
pop
push
jp
shl
fists
or
adc
inc
sub
stos
in
xchg
mov
pop
adc
mov
scas
shll
or
or
cmpsl
inc
jmp
aam
pop
fdivp
mov
xlat
lret
sti
pushl
gs
and
cmp
push
push
xchg
lret
fcomip
das
add
lahf
sub
test
ljmp
or
sub
cmpsl
xchg
lahf
out
pop
ljmp
sub
ja
out
clc
shll
dec
jne
adc
mov
adc
dec
mov
pop
mov
icebp
lcall
cli
mov
add
jbe
push
aam
decl
dec
mov
or
pop
iret
sbbl
mov
inc
rcrl
mov
dec
lcall
xchg
xor
or
pop
pop
negb
stc
cmp
dec
inc
add
jmp
ret
arpl
outsl
decl
pop
dec
adc
pushf
repnz
rcrb
nop
mov
sahf
outsb
stc
cld
int
mov
mov
sahf
or
test
add
cs
lret
mov
sub
cmpsb
adc
sar
push
cmp
f2xm1
stos
std
xchg
mov
cmp
pop
pusha
jnp
jge
incb
push
fwait
incl
insl
scas
lcall
or
mov
sahf
cs
mov
pop
lcall
popl
pop
pop
das
add
fcomps
aas
mov
decl
lock
pop
inc
jnp
js
or
and
shll
jbe
incl
mov
call
inc
or
cmc
mov
dec
fsubs
insl
or
fcomip
ljmp
and
pcmpeqb
mov
into
push
std
xchg
jmp
jg
incl
push
mov
rcl
jb
je
int
out
xchg
push
fcoms
pop
mov
stos
add
sub
cmpsb
ss
lahf
sub
in
or
pop
mov
out
out
loope
xorb
dec
enter
dec
icebp
and
mull
xchg
js
shrb
mov
push
decb
xorl
out
clc
incl
test
and
jmp
or
loopnew
and
mov
ljmp
mov
cld
or
adc
loope
mov
hlt
test
repnz
add
jg
mov
sbbl
int
cmpsl
add
inc
repnz
sub
movsb
sar
call
data16
push
fdivrl
sbb
movsl
shrb
out
xor
pop
negl
xchg
scas
push
incl
and
dec
ja
cmpsb
push
adc
stos
jo
add
js
add
push
pop
mov
xchg
popf
call
cmc
push
lret
jnp
adc
mov
insl
enter
fs
add
clc
fisubrs
push
jmp
test
lea
pop
push
inc
cmpsb
fisttpl
out
scas
dec
pop
ljmp
loope,pt
mov
js
orps
inc
mov
leave
adc
adc
dec
imul
dec
pushf
dec
gs
jns
fistpl
xor
cmp
clc
addr16
mov
insl
sbb
jg
test
cmpsb
in
xchg
or
and
pop
es
push
pop
movsb
sbbl
ret
lods
push
je,pn
clc
ljmp
imul
mov
cmc
push
andl
pop
xchg
xor
sub
mov
cltd
xor
jmp
inc
pusha
sub
sarb
inc
mov
lods
in
test
pop
shrb
cmp
loope
clc
fadds
std
sub
mov
outsb
es
inc
pop
cmpsb
mov
pop
mov
and
xchg
and
je
mov
divb
xorb
dec
adc
xchg
lahf
lea
and
cmc
xchg
adc
inc
shl
mov
test
mov
cmp
lcall
cmp
add
xor
mov
cld
xchg
int
popf
xor
sbb
insl
jmp
xor
xchg
lcall
cmp
pop
inc
push
cltd
or
lock
cmp
adc
push
shl
add
cmp
xor
sbb
movsb
xchg
pop
sarl
incl
mov
xchg
sub
push
push
iret
or
loop
jg
fisubs
sub
jae
repnz
fs
mov
xor
std
mov
aaa
fadd
push
ljmp
add
dec
mov
mov
pusha
jb
xchg
xchg
add
xchg
mov
data16
outsl
jmp
adc
lret
lods
jg
dec
and
outsb
mov
xor
lcall
movsl
pop
push
outsb
int3
shlb
fcomip
jmp
int
xor
pop
call
jnp
daa
adc
and
dec
movsb
push
add
dec
lods
sbb
push
and
xor
dec
pop
hlt
or
sub
cmp
pushl
lods
sbb
out
pop
and
loope
mov
pusha
mov
xor
sbb
ljmp
sbb
add
aaa
push
pop
mov
movsb
cmp
cs
cmp
movsb
or
lods
mov
das
jmp
adc
ret
ss
jle
clc
imul
ja
lcall
icebp
std
mov
jge
in
inc
sbb
subl
dec
sarb
ljmp
xor
aaa
es
insb
test
cmc
push
mov
pop
lret
mov
jge
pop
fdivr
ja
jmp
out
negl
negb
or
lret
test
pop
dec
lret
mov
jmp
out
mov
mov
sbb
jbe
das
add
filds
insb
add
adc
sub
add
leave
xchg
push
movsl
dec
sub
xchg
out
sub
cmp
movsb
mov
sub
pop
pop
mov
adc
or
das
inc
and
cs
add
fbld
int3
aad
mov
add
jns
fadds
mov
pop
pop
sbb
leave
mov
dec
mov
adc
popf
iret
movsl
fwait
lods
dec
xchg
pop
in
pop
dec
test
ds
std
jg
pushl
ja
xchg
and
outsb
data16
sub
pop
enter
mov
push
mov
push
adc
decl
scas
xlat
or
dec
push
adc
jmp
and
ror
jne
jl
jp
dec
imul
movsb
sahf
jecxz
insl
xor
out
add
lods
fists
pop
ss
dec
sti
bound
mov
jns
sub
sub
xchg
mov
cmp
push
divl
stos
adc
mov
jge
fdivs
ficomps
mov
in
out
push
mov
cwtl
sbb
mov
dec
and
jp
mov
jno
push
out
fidivrs
cwtl
cli
xchg
lods
jno
inc
cld
call
jno
jg
xchg
dec
stos
sbb
push
sbb
hlt
nop
dec
test
pushf
cmpsb
mov
push
mov
cmp
pop
pop
add
clc
mov
jge
jnp
test
cmp
and
insb
pop
lcall
decl
inc
test
gs
mov
xor
loop
adc
std
test
pushl
mov
mov
push
cltd
or
sahf
or
imul
mov
stos
push
dec
mov
push
pop
fcmovbe
stos
and
cli
scas
jae
lret
mov
sbb
aaa
dec
xchg
loopne
jl
in
daa
jae
ljmp
call
ss
jns
jno
cmc
gs
jne
jl
outsb
loop
loop
or
test
scas
add
mov
out
mov
repz
sub
test
in
xor
add
dec
ret
or
push
add
jbe
or
testb
sub
xchg
xchg
in
dec
cmp
jg
mov
mov
push
inc
add
inc
test
std
hlt
jmp
mov
mov
test
sbb
cmp
call
jbe
fldt
add
or
fldcw
data16
pushl
fs
sarb
dec
pushf
sbb
sub
push
sbb
xchg
pop
imul
insb
dec
jno
clc
repnz
jp
test
das
into
lret
xchg
pop
rclb
je
sbb
pop
sub
push
fdivrl
stc
mov
test
xlat
in
sbb
xor
jg
js
stos
sbb
lcall
lret
xchg
inc
sti
cmp
movsb
mov
mov
mov
lret
sbb
pop
cmp
scas
jb
xchg
xchg
outsl
jge
sub
push
inc
add
addb
pop
outsb
fdivl
mov
movsb
cld
cmp
xchg
enter
push
pop
int3
arpl
mov
fwait
xchg
fucom
and
loope
push
jg
jns
sbb
pop
or
std
mov
dec
cmp
xor
rcl
adc
stos
sar
ljmp
dec
xlat
xor
xchg
sbb
in
xchg
pop
inc
stos
push
in
neg
jl
jmp
sub
pushf
fwait
inc
outsb
dec
je
je
aam
sbb
in
push
mov
hlt
dec
pusha
jg
sti
cmpsl
sbbl
hlt
mov
fcmovbe
aam
cmp
movsb
xor
jae
jmp
sub
popf
or
or
push
jecxz
mov
out
xor
in
les
je
mov
subb
dec
jmp
or
and
xchg
pop
mov
in
xchg
xchg
jl
adc
dec
push
call
std
cmpb
inc
cmp
dec
and
add
sub
sub
scas
mov
test
jmp
mov
mov
inc
stos
xor
fidivs
shll
sub
sarb
lea
inc
js
cli
push
mov
testb
push
mov
fmull
nop
arpl
out
fisubl
jbe
cmpsb
jo
push
mov
cmpsb
mov
cs
add
out
pop
jno
jl
xchg
mov
cmp
mov
cmp
xchg
int3
pop
dec
mov
pushl
mov
jmp
sbb
int
in
cmp
fs
jg
mov
xchg
lock
or
lods
in
outsb
rol
add
mov
jg
aas
push
or
xlat
xorb
pop
cmpsl
movsl
xchg
out
in
pop
in
pop
dec
ret
jno
jmp
dec
cmp
fsubrs
xlat
lods
push
dec
lahf
jmp
xor
mov
in
push
incl
inc
push
test
cmp
popa
or
sub
cmp
call
jbe
decl
inc
dec
push
pop
mov
jno
mov
cmpsb
cmp
dec
mov
jmp
xor
or
xchg
pop
adc
and
and
jle
jl
or
jmp
lahf
push
add
adc
sbb
out
call
inc
aad
mov
decb
decl
xchg
mov
cmp
inc
inc
subb
jno
les
lahf
add
jle
or
mov
sti
int
and
dec
mov
dec
sub
jmp
sub
jp
call
out
pop
dec
add
out
cli
ret
in
jmp
inc
mov
push
cwtl
mov
xchg
scas
mov
mov
jl
mov
ja
mov
mov
repz
jo
les
fistps
push
push
fdivrl
and
daa
in
fistpll
mov
imul
loope
sahf
jno
daa
add
call
popf
sub
jno
sbb
sub
lds
sbb
aaa
lock
push
in
jmp
xchg
scas
or
or
lods
pop
add
fldt
insb
jg
push
or
cmc
scas
insl
shlb
xchg
callw
std
call
pop
shrl
stos
shlb
in
out
push
inc
adcb
xchg
jle
out
insl
ljmp
mov
add
mov
test
int
cmp
out
cmpsb
cmp
or
call
jbe
mov
pusha
sahf
cmp
stc
xchg
jle
or
pop
pusha
dec
xchg
inc
cwtl
aad
incl
jmp
add
cltd
xor
cmp
orl
test
es
xor
fisttpll
aas
pushf
stc
mov
push
or
push
mov
aas
mov
inc
xchg
dec
je
push
scas
test
rcll
aam
cmp
in
inc
add
mov
out
mov
sti
addr16
mov
mov
jns
fisubl
lock
fsubr
xor
mov
cli
jmp
imul
rcrb
or
jne
add
sub
jmp
jmp
push
lret
add
data16
fxch
xchg
mov
cmp
das
loop
mov
jns
pop
fwait
jno
add
scas
cmpb
das
add
in
pusha
mov
xor
call
orl
arpl
loop
adc
icebp
das
and
inc
mov
sbb
decl
cmp
lret
push
stos
xor
std
xchg
xchg
sub
jnp
loopne
pop
lods
sub
aad
xchg
loope
cmp
outsb
push
fnstsw
pop
jmp
lods
xlat
mov
cmpsl
stos
mov
fnstsw
or
jg
dec
dec
jbe
call
ljmp
or
xchg
cmp
mov
vmread
js
popf
pop
ja
js
jne
xlat
cmc
test
ljmp
push
imul
jmp
push
int
shll
je
or
jecxz
int
lcall
adc
xor
js
mov
adc
stos
adc
cmp
jns
jg
sbb
sbb
in
push
jb
notl
sub
test
adc
pop
sub
fs
pop
push
sbb
mov
test
mov
data16
mov
or
ljmp
fsubrs
sbb
push
gs
or
pushl
xchg
mov
out
or
out
mov
mov
dec
ljmp
jmp
call
rolb
cltd
xchg
and
test
jmp
lea
pop
push
call
arpl
stos
cmc
add
stc
shl
sub
inc
jg
mov
popa
rcll
out
int3
inc
inc
mov
and
lea
ja
nop
lock
fdivrp
mov
xor
fdivrp
call
cmp
sub
insl
jp
mov
pop
mov
cmp
sub
mov
or
shrl
dec
jb
sbb
jnp
mov
fsubrs
scas
cli
dec
ficomps
jge
jecxz
cmp
dec
es
push
sbb
lock
lcall
imul
iret
cmp
and
inc
xlat
dec
loop
sbb
aad
push
xchg
mov
insl
popa
insb
movsl
movl
lahf
mov
ficompl
lea
incl
pop
sub
jae
in
pop
mov
pusha
push
xchg
xchg
mov
lcall
movb
test
pop
adc
xlat
cmp
sbb
loopne
out
call
sbb
and
jae
and
test
xor
fsubrs
jg
faddl
and
stos
imul
jle
fildl
clc
add
clc
out
push
jo
pop
push
jb
inc
je
bound
data16
test
mov
loopne
add
loop
and
lock
mov
ja
test
das
sub
jg
push
adc
add
stos
loope
aad
mov
cltd
mov
and
pop
jecxz
mov
cld
call
sub
jmp
or
sbb
add
movsb
insl
jg
test
lret
xor
xchg
cwtl
outsb
pop
cld
and
add
jmp
cs
enter
xchg
js
lods
movsl
fsubp
popa
dec
jle
dec
mov
cld
mov
xor
add
push
loopne
xor
enter
or
dec
jo
incl
shlb
faddl
ss
dec
aaa
scas
in
adc
cmpsl
push
sbb
call
call
fiadds
mov
push
aam
pop
or
int
pop
jae
les
push
jg
jle
pusha
ret
cmp
jl
data16
in
mov
out
xchg
adc
lds
loop
test
push
xchg
sub
js
shlb
fidivs
mov
scas
loopne
lahf
mov
ljmp
mov
and
in
stc
pop
dec
frstor
lret
clc
jmp
pop
pushf
pusha
hlt
jecxz
in
ds
add
cmpsb
in
cld
push
es
into
cltd
mov
dec
fisubrl
jp
in
jbe
adc
loop
into
push
cmpb
jp
inc
jno
fldt
cli
xchg
out
imul
cmpsb
rclb
pop
outsl
adc
rorl
ljmp
andl
mov
stos
cmpsb
stc
out
jle
jo
icebp
pop
mov
ljmp
dec
ja
out
pop
push
out
je
or
enter
sub
data16
fcoms
sti
fcomip
pushl
add
ja
push
test
cmp
mov
fsubr
mov
lahf
repnz
sar
ret
cmp
push
push
loopne
es
jp
inc
pop
inc
add
fiaddl
lcall
adc
pop
out
jmp
lret
into
adc
lcall
sbb
xor
pop
cmp
sub
sub
jno
sbb
jecxz
or
xor
imul
aad
pop
fwait
lcall
lret
cmpsb
push
fnsave
lret
mov
or
clc
push
pop
cmc
stos
test
adc
fcoml
ljmp
sbb
fwait
test
and
jo
cmp
push
sub
sbb
aaa
ret
dec
or
mov
jmp
xchg
lret
add
inc
jmp
cmp
dec
inc
shrb
xor
imul
jg
decb
add
or
and
pop
xor
adc
movsb
inc
adc
mov
mov
push
pushf
movsl
ficompl
cmpl
mov
jg
call
inc
dec
or
bound
iret
jmp
adc
mov
jae
mov
cmp
jmp
add
fwait
js
and
or
push
jo
pop
mov
lret
mov
test
iret
fidivl
and
add
ljmp
mov
addr16
int
sbb
jo
pop
lahf
unpckhps
lcall
pop
cmpl
dec
push
mov
jb
data16
xchg
sbb
call
xchg
lock
jecxz
jmp
in
jns
push
xor
xor
aad
cmp
xor
mov
cli
decl
inc
jle
fstpl
or
sbb
popf
rclb
cmp
test
int3
mov
mov
xor
notb
fidivl
or
or
fcmove
pop
cmp
push
jle
call
repz
cli
mov
mov
mov
sahf
shrl
xchg
scas
lret
mov
jle
incl
cmp
mov
add
xor
inc
lcall
idivb
repz
stos
cmp
jle
ds
aad
adcb
test
out
hlt
cs
bound
push
sbb
or
cwtl
cmp
sar
fs
inc
stc
int3
in
push
cmp
jp
add
fiadds
inc
inc
rcrl
insl
ja
fdivrl
mov
pushl
std
jmp
gs
movsl
mov
pop
jmp
mov
xchg
adc
sbbb
mov
push
addr16
decl
adc
popa
cltd
push
iret
sbb
stos
inc
inc
out
imul
add
jbe
nop
cli
call
pop
lods
inc
cmp
push
dec
push
pop
lahf
repnz
stc
add
stc
pushl
shrb
add
aad
adc
add
es
cmp
jnp
incl
add
ret
inc
mov
adc
fsqrt
add
out
jp
adc
pushl
mov
sbb
pop
ret
aad
xor
jecxz
mov
loope
or
rcll
in
decl
imull
jo
in
inc
leave
lock
outsl
int
push
inc
mov
xor
xchg
test
es
ret
pusha
int3
jle
sbb
mov
mov
clc
mov
inc
xor
cmpsl
inc
jno
pop
ljmp
out
sbb
out
add
pop
stos
jns
and
sbb
xchg
fwait
pop
mov
cmp
decl
jmp
or
test
mov
cwtl
mov
xchg
inc
arpl
jae
pop
mov
std
decl
xchg
cmpsl
lret
outsl
inc
xchg
pop
add
or
out
xchg
fstpt
fcompl
out
into
in
jmp
int
lds
sbb
clc
add
and
gs
negl
mov
mulb
push
jmp
jnp
sub
test
dec
int3
sub
lret
jp
xor
dec
test
lcall
add
lea
lods
cs
jbe
pop
dec
dec
dec
fsubl
leave
or
add
mov
mov
cmc
loope
cltd
jmp
cmp
shlb
mov
fnstcw
sub
push
dec
jmp
ljmp
orb
dec
sub
dec
pushl
dec
add
andl
mov
mov
filds
push
bound
pshufw
adc
aaa
sub
adc
fsubs
insl
add
hlt
and
lods
test
jle
clc
pushl
pop
call
dec
mov
jecxz
scas
jmp
inc
cwtl
ret
jecxz
ljmp
mov
mov
sbb
out
fyl2x
pop
mov
fistl
ljmp
sar
movsl
push
lods
add
dec
movsb
adc
out
dec
mov
dec
push
int
push
stc
cli
push
jl
xchg
mov
out
xchg
aam
enter
mov
dec
lods
rcrl
cmp
fs
mov
out
int3
xorb
cmp
aas
add
adc
stc
nop
cmc
decl
pusha
insl
stc
out
lea
stos
xchg
and
fwait
cmp
pop
pop
rol
inc
xor
pop
nop
cwtl
mov
pushf
xor
push
das
adc
addr16
mov
lret
pop
insl
sub
les
mov
das
mov
sub
pop
ljmp
xchg
inc
adc
stos
hlt
ljmp
mov
shlb
xchg
je
fnsave
dec
jl
iret
inc
in
mov
jle
mov
ljmp
pushf
push
mov
sbb
sbb
inc
fwait
rcll
push
mov
sar
jmp
sbb
mov
jg
js
cmpsb
sbb
xchg
insl
pop
pushf
ja
dec
jne
ds
xchg
decl
arpl
sub
and
jge
addl
mov
fiaddl
aaa
test
push
mov
mov
inc
int3
push
es
xchg
test
jmp
push
dec
jecxz
inc
dec
rcrl
fnstenv
xchg
fstl
int3
outsl
pop
sub
mov
mov
fnstsw
lahf
stos
inc
mov
mov
mov
or
les
inc
out
or
inc
cmp
out
js
lret
jmp
jp
js
fadd
jno
pop
mov
cmpsb
addr16
in
push
cs
mov
dec
inc
mov
add
jmp
mov
sarb
or
bnd
push
clc
lcall
dec
out
pop
push
arpl
shll
mov
jecxz
mov
jo
fs
es
sub
mov
inc
pop
jmp
or
pop
mov
dec
sbb
pop
nop
xchg
pop
adc
repnz
adc
ljmp
pop
bound
push
cmp
cld
cmp
push
sub
xor
test
outsb
sbb
call
pop
pop
insl
fstl
cmp
gs
fidivs
fildll
mov
dec
iret
or
jmp
adc
dec
inc
in
dec
add
mov
fildll
shlb
pop
sbb
jo
cld
loop
sahf
test
lahf
jmp
mov
lcall
call
xchg
xor
fimuls
or
movl
aas
push
jp
icebp
outsb
jb
mov
jno
xchg
inc
pop
in
adcb
mov
cli
mov
lods
stos
ljmp
mov
mov
mov
out
xchg
or
adc
mov
or
repnz
lcall
loope,pt
jno
int3
jo
sbb
sbb
cltd
mov
jg
fwait
imul
sbb
fistl
sub
setae
enter
dec
pop
push
arpl
pushl
push
push
leave
loopne
shll
test
and
add
call
xchg
sub
movsl
lds
mov
xchg
mov
fistpll
and
ljmp
imul
mov
enter
mov
mov
mov
and
in
mov
and
es
mov
and
sbb
add
mov
mov
loope
dec
imull
mov
rcr
pop
repz
or
xchg
sti
and
pop
jecxz
xchg
ret
es
adc
mov
jae
jl
push
inc
push
mov
and
flds
sarb
jp
lcall
adc
fcoml
lods
pop
mov
xor
jmp
cmp
mov
repz
lret
push
jns
testl
cmpsb
sti
daa
sbb
decl
pusha
cltd
or
pusha
dec
ret
xorb
push
dec
out
insb
mov
cmp
push
push
mov
std
mov
mov
adc
imul
mov
ljmp
xchg
mov
xchg
andl
cs
mov
adc
dec
arpl
scas
lcall
xor
push
leave
aaa
int
jno
imul
adc
pcmpgtb
mov
cmp
jno
popa
pop
rcl
cltd
fucom
push
lahf
nop
scas
jns
adc
scas
outsb
mov
out
xor
jmp
xor
cli
jbe
daa
dec
lahf
inc
jbe
loopne
test
and
stos
sbb
movsl
xchg
sbb
hlt
icebp
jb
xchg
sub
pop
addr16
inc
lea
frstor
lret
aam
add
mov
mov
mov
add
jmp
imul
jnp
stos
ret
xchg
push
cli
clc
aam
push
ljmp
mov
stos
inc
insb
push
xlat
push
adc
dec
aam
jle
gs
dec
adc
jne
aaa
cmpsl
pusha
and
rcrb
mov
sub
sbb
dec
mov
mov
inc
jecxz
sti
push
mov
inc
pop
insb
cmp
andl
jnp
lret
addr16
xorb
idivl
push
push
and
add
add
arpl
ja
imull
rorb
dec
xchg
pop
in
lods
sar
add
or
mov
mov
dec
leave
sub
call
sub
mov
xor
ljmp
xchg
and
int3
je
dec
ljmp
sub
popf
pushw
pop
lock
jnp
adcb
ljmp
sbb
scas
lds
push
push
or
dec
pop
aaa
add
jmp
mov
mov
push
daa
add
pushl
call
pop
push
shrl
xchg
test
jg
pop
inc
test
fxch
xchg
dec
or
pop
cltd
out
mov
fildl
sub
call
sbb
jg
add
or
push
fptan
test
mov
lea
loop
sar
xor
subl
add
xchg
cli
or
pop
or
add
lcall
jbe
imul
ljmp
aam
mov
pop
pop
mov
loop
cmp
push
arpl
rclb
call
pop
ja
dec
lcall
fcmovnu
mov
mov
in
mov
clc
idivb
mov
loopne
jl
movsb
imul
bound
jmp
xlat
pop
test
cmpsb
call
or
sti
std
mov
xchg
push
xor
mov
ljmp
imul
sbb
push
pop
adc
paddusw
mov
rolb
adc
mov
test
push
adc
or
pop
aad
push
mov
adc
and
imul
sub
jecxz
sub
decl
dec
jb
dec
sti
stos
add
ror
xorl
inc
aad
push
sub
ja
nop
jbe
in
das
sarb
int
and
add
cld
inc
je
xchg
pop
inc
data16
jmp
sbb
cmp
and
pop
jg
call
sbbl
add
push
pop
mov
and
pop
mov
mov
ljmp
add
dec
leave
out
adc
mov
or
lret
sti
cs
xchg
int
push
sub
repz
xchg
addb
sar
sub
sahf
aad
sbb
je
pop
idiv
js
or
pop
scas
pop
jge
call
scas
sub
dec
int3
ds
sub
mov
jae
push
push
and
ljmp
adc
mov
pop
xor
inc
hlt
lcall
jle
mov
cmp
data16
sti
mov
push
mov
dec
push
mov
mov
fnstsw
dec
mov
or
xorl
jl
inc
xchg
das
repnz
cmc
ljmp
dec
call
pop
jo
add
jmp
mov
mov
outsb
sbb
popl
and
add
push
push
in
xchg
cmp
push
and
pusha
scas
test
out
stos
mov
aam
jge
inc
inc
test
inc
cmc
xchg
push
test
xchg
fstpl
xchg
sub
mov
push
dec
mov
xchg
int3
std
ficoml
movsb
xor
incl
and
xchg
cld
ss
loope
cmp
hlt
push
sahf
enter
jge
or
into
sahf
xlat
decl
inc
cmp
test
lods
sbb
push
add
lock
add
lcall
xchg
mov
jmp
addr16
aam
pop
dec
sbb
rcll
in
push
fwait
fwait
jbe
decl
aas
in
dec
jno
adc
fdivl
pushf
mov
cmp
insb
movsl
mov
lods
aaa
mov
jmp
sbb
sbb
cmp
ja
and
mov
inc
xor
mov
loopne
dec
add
test
ret
mov
sbb
dec
loop
test
loope
add
and
mov
dec
mov
mov
mov
lret
mov
lea
hlt
jb
jmp
mov
or
inc
dec
jge
dec
mov
test
xchg
sub
pop
adc
jno
or
je
cmp
decl
mov
cmp
aaa
or
ret
cmp
and
outsl
call
cld
decl
mov
xor
mov
repnz
cmp
shrb
lcall
sahf
lods
jnp
and
jno
subb
orb
outsb
das
mov
or
mov
iret
cmp
xor
lcall
cmp
shll
mov
call
jns
or
cmp
in
ja
cmpsb
mov
pop
xchg
pop
lret
cwtl
pop
mov
cmc
dec
stos
jmp
dec
sti
xchg
dec
cmp
mov
push
mov
decl
pop
movsl
int
sub
mov
test
jbe
ret
mov
or
cmc
lret
fs
lcall
mov
mov
jp,pt
outsb
sub
adc
mov
xchg
mov
jge
repz
or
xor
jp
cmpsl
std
mov
test
lret
notl
push
arpl
aaa
adc
inc
mov
sbb
xor
mov
xchg
nop
arpl
icebp
stc
sahf
inc
cld
test
xchg
push
stos
adcl
xchg
cmpsl
xchg
jp
popa
out
mov
sub
mov
fistpl
dec
jbe
jg
dec
inc
incl
push
out
in
gs
mov
jecxz
dec
pop
gs
sbb
sbbl
mov
rcll
aam
sbb
push
insl
inc
in
adc
dec
xchg
push
stos
jo
fisttpl
jmp
mov
mov
mov
dec
xor
pop
mov
xor
insb
sub
jle
push
test
fidivs
lret
xchg
mov
aam
fildll
sub
adc
fisttpl
mov
mov
and
testl
call
sarl
not
pop
xor
mov
clc
test
or
sti
inc
insl
xor
jmp
mov
mov
test
inc
push
sbb
push
cld
bound
aas
pop
cmp
dec
cmp
and
and
iret
movsb
lea
push
fildl
jmp
sbb
and
jb
jo
pop
sbb
add
cli
call
ficomps
mov
cltd
xor
dec
pop
xor
sti
inc
jmp
enter
ret
mov
scas
inc
cmp
cmp
incl
call
pop
mov
orb
cmp
stc
or
mov
ret
fmull
adc
test
xor
dec
push
inc
shrl
mov
dec
pusha
loope
lods
repnz
aad
cltd
sahf
and
insl
xchg
ds
add
pushf
in
pushf
jp
ljmp
xchg
fs
pop
fcmovnu
adc
push
lods
xor
mov
mov
ljmp
ljmp
mov
jb
push
and
or
stos
enter
call
lock
test
aas
jle
push
mov
sbb
pop
mov
movsb
mov
enter
cmp
outsl
fisubrs
inc
mov
les
push
mov
aam
fcomip
cmp
mov
sub
ljmp
repnz
loope
sub
ljmp
or
jo
xchg
inc
loop
pop
jb
xor
lods
insl
push
incl
arpl
jnp
cmp
push
addb
add
lods
xchg
xlat
push
cli
call
jp
xchg
into
fisubl
test
lret
sbb
pop
outsb
mov
shll
fistpll
pushl
std
addl
xor
sbb
dec
je
andl
cmp
jmp
pop
jne
fistps
xor
gs
xchg
mov
sub
push
repnz
call
hlt
cwtl
ss
cld
inc
aaa
or
pusha
push
fs
push
dec
dec
inc
mov
cld
incl
dec
outsl
iret
lret
lock
mov
imul
xor
ljmp
lods
jbe
ret
mov
lods
push
jmp
mov
pusha
inc
call
repz
jg
nop
es
cli
call
ljmp
or
mov
fwait
xchg
push
jecxz
xchg
dec
lcall
mov
or
lds
mov
mov
nop
lahf
or
or
xchg
sar
incl
pop
push
jmp
stos
push
pop
dec
add
add
stos
loopne
dec
xlat
hlt
cmp
push
cmpsb
mov
cmp
in
ficomps
movsb
adc
fnstsw
push
xor
lea
loopne
push
push
cmp
jae
adc
aaa
test
jg
and
popf
pop
icebp
jp
fdivr
jge
js
pop
into
loope
xchg
xchg
sub
inc
push
mov
sub
outsl
sub
call
std
test
cmp
adc
in
into
mov
and
mov
nop
push
insl
mov
ret
rorb
inc
insb
pop
push
mov
subb
out
call
cmp
mov
out
out
cmp
cmp
sbb
cli
sarl
jmp
pop
add
ret
loope
mov
xchg
fildl
bound
cld
lcall
mov
sub
cmpsb
sub
lcall
pushl
and
inc
xchg
addl
jne
lds
out
inc
xchg
push
out
or
aaa
sub
imul
stc
add
mov
dec
cmp
decl
cmp
mov
add
imul
enter
imul
es
cmp
cmp
cmc
sbb
enter
mov
sarl
mov
push
push
in
xor
rclb
pop
jmp
push
adc
and
add
cmp
imul
and
or
add
incl
sub
stos
add
ja
jo
mov
jg
nop
or
add
pop
test
sarl
add
add
dec
orb
mov
push
inc
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
and
sub
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
jle
fs
scas
push
stos
push
and
mov
and
imul
cld
scas
loop
push
inc
pop
pop
add
mov
pop
sbb
mov
mov
sbb
inc
mov
pusha
sbb
mov
sarl
pop
les
push
adc
fs
mov
dec
repz
insb
or
lret
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
mov
stos
pop
pop
add
dec
stos
mov
add
fstpt
aam
push
mov
push
shll
add
sub
jo
fidivrl
iret
outsb
or
push
insl
ja
ret
je
fidivrs
out
jge
push
pop
fisttps
add
fwait
inc
ds
in
movsb
push
add
fcmovnbe
clc
mov
sbbl
push
mov
adc
push
push
add
jne
mov
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
out
mov
cmp
data16
inc
iret
mov
aaa
add
push
push
shlb
push
lret
stos
aas
add
ja
mov
jge
push
push
xlat
jne
add
ja
insb
jae
jo
aad
push
xlat
ja
js
push
lahf
fnsave
push
jp
jp
inc
push
fidivrl
adc
jns
ja
fldl
push
ret
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
scas
mov
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
sti
push
cltd
cmp
cmp
pushf
cmp
popf
mov
popf
aas
push
sahf
inc
push
lahf
inc
lahf
jle
pop
mov
push
mov
push
imulb
movl
out
out
out
pop
lock
hlt
clc
stc
cli
sti
clc
lahf
out
cld
std
incb
jecxz
arpl
fldcw
inc
jae
add
imul
xchg
push
add
pop
add
pop
adcb
add
pop
leave
push
push
insb
add
nop
scas
inc
mov
add
int3
std
fldl
add
or
add
add
jg
fisttpl
or
test
test
rsm
stos
cmpsl
or
push
sbb
imul
adc
add
add
pop
mov
femms
lods
lods
pop
mov
fstps
scas
add
scas
insl
lods
pop
pop
and
scas
lods
push
and
imul
pop
scas
sbb
jns
or
scas
scas
scas
scas
sbb
mov
mov
mov
mov
adc
cmp
pop
push
mov
test
and
popa
add
and
inc
rcrl
add
mov
sub
push
dec
mov
and
add
pushf
sub
jns
sub
sbb
mov
mov
subb
sub
lea
push
es
fwait
and
cmp
cmp
cmpsb
add
std
jg
mov
xor
xor
pop
or
or
jle
jbe
add
pop
pop
xor
jg
incl
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
jg
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
pushf
and
call
jbe
cmp
jl
jge
jno
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
inc
jmp
mov
pushf
fwait
lcall
mov
add
xchg
sub
add
jle
je
dec
in
dec
push
bound
js
imul
cmp
je
inc
pop
inc
mov
adc
addb
into
add
xor
pop
pop
scas
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
dec
jmp
xlat
push
ja
jb
cs
xor
mov
pop
out
jbe
popf
mov
jle
and
push
mov
xchg
jo
push
inc
mov
cmp
mov
inc
xor
adc
enter
xchg
jp
inc
push
std
int3
dec
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
fidivrs
lods
mov
mov
inc
push
sahf
mov
jg
outsb
xor
add
outsb
add
xchg
xchg
pop
push
data16
dec
jnp
test
push
dec
push
movsb
jae
add
jb
lcall
pusha
shll
outsl
pop
xlat
pushf
push
rorb
add
aaa
out
adc
lcall
outsb
mov
dec
push
mov
scas
testb
ja
sahf
jbe
fistpl
imul
in
daa
outsb
ds
push
add
and
es
js
fucomp
pop
mov
data16
shrl
insb
ja
out
pop
outsb
push
outsl
ror
push
ds
sub
xchg
lret
jno
add
jge
push
jg
fiadds
or
out
data16
mov
in
mov
or
stos
bound
out
arpl
push
loopne
mulb
data16
jb
mov
in
push
jle
or
xchg
push
fnstcw
aad
push
divb
xor
outsl
push
fildl
adc
push
adcl
addb
sbb
test
mov
sarb
test
in
mov
push
xchg
fisubrl
addr16
and
out
xchg
es
cwtl
add
push
fcoml
scas
pop
mov
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
mov
push
lcall
cmpsb
pop
cmp
mov
aam
push
clc
add
cmpsb
scas
jo
test
sahf
neg
addb
jbe
stos
into
shll
mov
shll
add
int
mov
mov
sarb
fwait
rcr
rcl
mov
dec
das
sub
data16
add
addr16
add
cs
dec
out
je
add
rorb
daa
stos
nop
add
add
mov
femms
or
or
mov
sbb
or
es
push
adc
push
add
incl
or
ds
add
cmpsb
std
inc
mov
xor
ds
xchg
push
mov
in
push
adc
mov
mov
add
and
shrb
scas
mov
loopne
ds
lcall
and
add
add
or
stos
cmp
aas
cmp
nop
out
cmp
pusha
add
jbe
or
incl
jle
lock
out
cmp
dec
in
mov
ds
jle
aas
cmp
sti
insb
adc
ds
xor
dec
inc
repz
inc
scas
add
scas
sbb
addr16
mov
out
decl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
ljmp
dec
test
mov
mov
ds
xor
sub
sub
sub
insl
add
sub
ss
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
add
adc
imul
pushl
jne
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
jne
shlb
nop
negl
rolb
add
mov
add
or
incl
ja
push
push
add
cmc
repz
dec
xor
mov
add
aas
add
xchg
pop
cmp
test
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
out
add
addr16
add
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
insl
pop
add
nop
sub
sub
xchg
insl
cmp
push
nop
sub
xchg
xor
xchg
xor
xchg
outsb
lcall
leave
jbe
int
jnp
negl
fcmove
fst
es
and
int3
out
lret
loopne
push
std
into
mov
push
test
fdivrp
divl
xchg
add
test
jg
jle
orb
add
dec
xchg
pop
add
decb
jns
dec
dec
dec
dec
dec
add
pop
add
fcmovnu
and
push
dec
or
adc
cmp
adc
dec
or
add
dec
push
adc
add
or
pop
pop
arpl
pop
in
dec
push
inc
push
dec
sbb
mov
lahf
testb
and
adc
sbb
dec
add
dec
pushl
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
push
adc
adc
sub
xor
sub
sub
mov
add
dec
in
scas
lods
mov
addb
mov
pop
mov
mov
sbb
ss
add
outsb
mov
and
or
outsl
add
and
pop
in
adc
pop
sbb
mov
cmpsl
sbb
inc
test
and
adc
mov
test
fstpl
incl
add
cmp
mov
es
dec
push
jmp
out
cwtl
cmpsb
pop
stc
sysret
in
loopne
xchg
xchg
lock
hlt
add
push
jg
add
sub
pop
aaa
outsl
pusha
push
add
sahf
aam
push
inc
jg
lahf
or
or
push
into
jg
cli
andb
mov
cli
filds
addl
or
cli
push
bound
and
push
mov
das
orl
jle
sbb
xchg
scas
inc
dec
cmp
mov
sti
jg
xchg
popa
mov
jg
add
xor
jg
pop
and
ja
add
ret
jg
jb
sub
cld
jg
pop
adc
jle
pop
xor
jg
std
les
and
les
test
jg
pusha
add
movq
bound
ret
jg
inc
push
dec
jle
decb
push
lret
jg
or
incl
decl
ljmp
lock
sub
sub
inc
data16
and
add
jmp
lea
addb
sbb
loopne
mov
jbe
les
fildl
add
sub
jle
and
sbb
scas
incl
add
nop
bndldx
and
imul
or
or
add
or
mov
inc
and
add
add
add
addb
data16
push
inc
loopne
jg
inc
and
xchg
andb
sub
add
pop
sub
xor
dec
jg
pop
je
lods
jle
ljmp
pop
fdivrp
cmpsb
ljmp
mov
pop
pop
pop
add
fcmovu
mov
daa
aas
aaa
pop
pop
push
add
jle
lock
cmpsb
aaa
add
add
mov
jle
sbb
or
or
dec
xchg
cmp
sldt
mov
in
mov
daa
push
arpl
test
mov
das
pop
push
mov
arpl
out
lcall
decl
dec
test
pop
dec
test
stos
ljmp
dec
out
mov
jle
jle
push
sbb
out
dec
test
push
fnstenv
add
push
nop
jmp
pop
push
jbe
mov
push
jnp
push
jp
into
mov
decb
js
dec
jbe
pop
mov
mov
pop
mov
mov
or
es
push
outsb
test
mov
incl
dec
call
fs
outsb
ss
fisttpll
xor
xchg
dec
ja
test
call
push
sahf
jns
fiadds
test
mov
or
sahf
inc
out
adc
xchg
cs
aas
popf
inc
push
pushf
cmp
imul
jnp
fistl
xchg
xor
sub
out
mov
nop
sub
nop
daa
ss
cs
fldcw
adc
outsb
push
xor
or
call
pushl
inc
xchg
mov
or
ja
xor
cmp
sahf
mov
nop
mov
pop
sbb
and
push
add
pop
ja
dec
aad
cltd
mov
bound
and
ja
notb
lock
aaa
mov
add
add
mov
adc
inc
inc
push
mov
dec
or
add
pusha
std
pop
push
and
adc
adc
push
adc
out
negl
orl
lea
mov
push
xchg
inc
and
cmp
lock
xchg
out
cmp
pop
cmp
incl
cmp
imul
add
push
add
ds
inc
sbb
out
pop
shrl
mov
mov
leave
mov
mov
inc
push
push
sbb
xor
cmp
or
or
sti
fidivs
xchg
std
into
jmp
syscall
mov
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
jo
incl
daa
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
cmpsb
pop
cmp
inc
pop
mov
push
pop
sahf
movsb
dec
push
stos
push
popf
dec
out
fwait
inc
cmpsb
dec
dec
inc
cmp
push
cs
dec
mov
and
and
push
shrb
enter
rcl
outsb
shrb
es
xchg
int
push
push
jb
xchg
and
imulb
push
iret
insl
leave
je
cmpsb
pop
daa
outsl
pop
imul
push
and
decl
push
xchg
lcall
xor
pop
add
repnz
movsb
es
jmp
adc
pushf
cmp
aas
decb
cwtl
xor
mov
push
inc
push
xchg
outsl
mov
xchg
push
push
aaa
push
lcall
xor
push
xchg
es
xchg
xchg
xchg
notb
sub
lcall
inc
test
inc
jmp
mov
fimuls
jecxz
add
or
mov
dec
cli
std
faddl
jge
push
jnp
cmpsb
jns
addr16
or
jl
or
insl
sub
fdivrl
jge
jg
es
in
pop
jbe
adc
fidivrl
push
dec
push
dec
repnz
repnz
in
out
xlat
jae
pop
fidivrl
push
mov
jnp
mov
add
in
add
int3
outsb
nop
negl
adc
mov
stc
sbbb
push
add
push
adc
int
push
or
add
addl
es
addl
orb
ja
lcall
xchg
out
push
sub
iret
out
mov
jbe
int
cli
pushl
clc
push
imul
ret
push
enter
inc
sub
jg
je
hlt
fnstenv
cld
fdivrp
outsb
popa
daa
jno
sub
jg
mov
icebp
pop
popa
add
and
mov
jg
mov
ja
aas
inc
and
jp
addb
in
xchg
aaa
inc
ds
incb
out
xchg
xchg
fisttpll
jg
dec
imul
pop
hlt
or
push
ja
dec
and
jge
dec
adc
push
call
fmuls
push
push
fsub
pop
push
or
push
dec
inc
push
int3
decl
jle
mov
fidivrl
arpl
clc
sbb
jbe
mov
push
pop
out
sbb
sbb
pop
push
pop
jne
sbb
mov
and
dec
lcall
inc
inc
cli
jle
jns
mov
push
xor
jmp
xchg
jmp
mov
push
xchg
mov
mov
adcb
xchg
out
sbb
loope
and
lret
jg
out
mov
jb
jo
or
cmp
jns
add
inc
or
xchg
xlat
push
cmovno
mov
nop
sbb
jo
pop
or
add
push
pop
lcall
or
add
mov
add
and
xor
sub
and
or
mov
mov
adc
sub
inc
push
add
xor
into
pop
push
sbb
rcrl
add
insb
fstpt
or
push
adc
or
mov
adc
test
test
or
mov
sbb
test
and
adc
lret
icebp
add
js
inc
push
gs
jo
sub
add
mov
orb
mov
std
and
das
cltd
sbb
jo
xchg
fsubrs
lcall
push
xor
or
xchg
insl
xor
imul
mov
test
dec
bound
lock
rcr
loopne
inc
jmp
lahf
jo
das
inc
insl
inc
out
sbb
mov
push
popa
imul
xchg
dec
movsb
sbb
shrb
add
outsl
push
es
mov
inc
insb
adc
jns
adc
add
add
mov
fwait
add
xor
lea
jmp
es
mov
aam
add
insl
and
popa
jne
movsl
pop
popf
pop
mov
push
popa
mov
pop
fcmovnbe
popa
bound
inc
xchg
shrb
xchg
mov
xlat
adc
jae
push
or
add
inc
pop
add
add
add
adc
jno
rcrl
add
test
icebp
add
roll
dec
xchg
sbb
add
aas
add
pop
loop
mov
call
and
mov
andb
inc
rcll
outsl
shrb
jo
xor
enter
dec
push
outsl
loop
and
mov
sub
and
shrl
mov
dec
pop
pop
dec
insb
sub
arpl
decl
mov
adc
add
subl
popa
or
xor
in
push
dec
and
cwtl
or
or
add
sbb
call
add
sbb
cmp
in
mov
pop
arpl
cmp
pushf
adc
add
xchg
bound
fiaddl
imul
pop
push
sbb
xchg
aad
rcll
mov
jne
dec
dec
adc
sbb
sbb
cmp
jo
xchg
push
mov
in
push
dec
in
xchg
mov
sbb
pop
or
mov
xor
pop
sbb
sub
or
adc
cmp
mov
and
iret
jecxz
xchg
pop
subl
mov
push
scas
sbb
push
inc
cltd
push
push
jb
dec
xchg
mov
jmp
or
imul
shl
inc
je
pop
xlat
pop
test
mov
mov
and
xor
pusha
adc
adcb
pop
test
add
cmp
icebp
and
xor
add
add
add
add
insb
adc
adc
loopne
pop
cmp
dec
fbstp
es
xor
shlb
xchg
pop
push
dec
scas
mov
insl
pop
nop
sub
inc
fldt
sbb
ja
sbb
xor
inc
test
jg
cs
mov
or
bswap
mov
je
jne
inc
mov
sub
outsl
jae
pop
xchg
and
outsl
mov
loope
sub
mov
add
push
add
xchg
dec
fldenv
pop
fisubs
loopne
clc
insb
mov
inc
arpl
mov
pop
es
ds
sub
aas
sub
xchg
pop
sub
mov
imul
mov
ss
sti
cmpl
cmpb
inc
insb
fwait
push
mov
push
pop
imul
cmp
pop
sbb
arpl
inc
movsl
add
jae
add
adc
inc
jbe
es
lds
stos
mov
sub
and
sbb
cmp
inc
sbb
pop
mov
int
sbb
jne
adc
fs
or
push
adcb
popa
rcpps
js
push
or
fimuls
xchg
dec
jne
mov
add
inc
imul
fisubrl
insb
push
or
fistpl
ja
push
or
daa
push
and
mov
xchg
push
cld
sub
fs
mov
push
neg
fwait
push
mov
loope
xor
mov
inc
add
xchg
add
or
mov
push
jg
jns
or
and
popf
lods
xor
cwtl
test
cmp
mov
inc
xor
andb
not
and
mov
arpl
outsb
inc
sbb
inc
sbb
sbb
pop
and
es
mov
outsb
dec
std
lea
jge
shlb
in
xor
sub
push
push
js
add
add
add
sbb
mov
cmpsb
imul
sub
cmpsb
imul
cmpsb
imul
dec
inc
mov
push
es
pop
inc
push
daa
pushf
add
mov
or
add
mov
and
rclb
cmp
push
and
shlb
popa
sub
out
test
lods
test
test
mov
sub
cmp
push
imul
push
mov
adc
lods
subb
insb
scas
movsb
dec
mov
mov
sbb
mov
nop
xorl
add
or
xchg
nop
jns
sub
jo
inc
sbb
push
push
dec
in
add
sarb
sbb
test
out
mov
or
and
andl
js
lods
dec
mov
arpl
push
mov
nop
push
jge
sahf
imul
out
pushf
xor
mov
hlt
and
push
dec
cmp
imul
mov
inc
insb
sub
rclb
inc
shr
push
pop
lret
inc
lock
shrl
hlt
mov
xchg
mov
fcoml
ss
xlat
adc
das
test
xor
inc
fadds
xor
mov
mov
mov
and
push
cmp
and
mov
inc
aaa
outsl
mov
mov
mov
jno
ret
lods
outsb
jbe
mov
add
cmpsl
adc
stc
adc
es
and
push
mov
xchg
xchg
dec
je
sbb
insl
dec
inc
push
dec
inc
adcb
fs
and
jo
or
dec
cld
addr16
jo
adc
inc
lods
sub
jne
pop
xor
inc
cwtl
pop
jmp
arpl
mov
inc
add
sbb
mov
nop
fs
xor
mov
cmp
jns
test
mov
push
and
inc
cmp
and
jg
out
mov
cmp
jmp
pop
sbb
roll
aas
scas
inc
sub
adc
nop
shlb
lods
mov
xchg
jbe
enter
inc
dec
lahf
add
push
dec
test
push
mov
fdivr
push
inc
inc
int3
js
movsl
cmp
xor
push
outsb
movsl
addr16
cmp
arpl
mov
jnp
jo
pop
dec
mov
jmp
pop
mov
outsb
inc
test
pop
inc
ja
imul
and
lcall
sbb
sub
inc
cmpsb
dec
push
ss
push
xchg
test
dec
movsl
dec
sub
add
xchg
pop
cs
add
push
daa
adc
add
add
rcll
imul
sub
or
or
add
movb
sahf
jo
lods
loopne
daa
icebp
add
inc
dec
cs
pusha
dec
mov
and
clc
add
clc
mov
andb
add
and
push
push
hlt
rcrb
addr16
cmp
pushf
push
in
jns
pusha
xlat
out
cld
dec
sbb
add
addr16
jp
push
xchg
pop
and
or
ja
inc
inc
add
cmp
xchg
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
