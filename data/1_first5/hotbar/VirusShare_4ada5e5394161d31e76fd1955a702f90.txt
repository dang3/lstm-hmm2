fcomp
decl
lock
inc
add
mov
or
and
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aad
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jle
mov
mov
sahf
mov
les
int
mov
mov
xor
push
cmpsl
sbb
fsub
subl
and
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
stos
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
lcall
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
fbstp
fistpll
sub
push
fldt
sbb
mov
add
mov
cmp
add
add
out
lea
int3
icebp
das
mov
mov
enter
mov
fisubs
or
sub
push
push
into
icebp
push
enter
dec
test
mov
mov
sarl
lcall
fdivrs
push
les
add
push
or
punpckhbw
ds
and
inc
pop
or
add
or
push
cmp
pop
cmpsl
mov
shll
add
mov
lcall
and
and
out
sbb
inc
aam
xor
push
daa
inc
and
lea
or
mov
dec
sub
scas
jbe
sbb
iret
dec
add
sbb
mov
push
sbb
pusha
sbb
stc
mov
cmpsl
and
dec
test
pop
int
pop
jo
pop
sub
pop
repnz
push
mov
and
mov
xchg
and
rcll
pop
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
push
iret
repz
push
inc
push
dec
dec
push
sub
push
insb
loope
push
sub
cmp
add
and
sbb
jb
les
icebp
or
movsl
cmp
ljmp
test
clc
mov
sub
mov
and
adc
jl
or
scas
insb
add
inc
lret
xor
add
and
inc
xor
push
jne
shl
xor
pusha
push
repnz
inc
repnz
add
cs
mov
test
xor
ljmp
pop
fiaddl
add
mov
dec
inc
psubsb
xchg
int3
push
add
call
inc
mov
inc
test
jecxz
pop
mov
or
enter
add
and
xchg
sbb
sub
movsb
sbb
inc
hlt
rorl
push
seto
mov
mov
xchg
cltd
push
push
cmp
add
jl
sahf
sub
xorl
lcall
or
loope
rorl
and
inc
bnd
dec
or
js
adcb
push
stc
ret
addr16
stos
add
push
lea
xor
adc
fistps
ds
xor
jge
fwait
push
mov
hlt
push
jg
jl
in
mov
faddl
or
add
inc
lock
or
mov
pop
mov
mov
out
mov
or
sbb
addps
sub
and
pop
pop
test
jmp
dec
fmull
mov
push
decb
push
es
or
push
add
dec
jl
out
push
push
push
repnz
or
sbb
dec
fisttpl
mov
push
pusha
sub
sete
test
test
xchg
pop
or
and
or
adc
add
xor
iret
pop
sbb
adc
push
movsb
scas
es
insb
pop
int3
xchg
cmpsl
ljmp
cmp
and
or
push
aad
stos
pusha
lds
mov
punpckhbw
pusha
inc
mov
inc
jne
sbb
adc
jle
bound
sbb
inc
inc
adc
and
pop
cld
add
or
out
adc
and
xchg
mov
sbb
push
fsubrs
orb
xchg
out
push
dec
pop
adc
pop
es
repnz
push
push
sub
push
or
xor
cmpsb
jo
ja
xlat
sbb
dec
add
jp
dec
push
pop
fmuls
daa
ds
scas
dec
push
dec
mov
jl
sbb
cmp
or
push
sbb
std
jo
add
push
and
jle
push
fsub
fs
sbb
and
add
inc
mov
mov
sti
mov
jecxz
mov
and
icebp
sbb
mov
int
inc
jle
sub
sbb
push
push
pop
in
rcr
and
and
adc
adc
mov
movb
shll
push
mov
data16
inc
xor
mov
xchg
scas
push
pushf
cli
mov
push
sub
je
frstor
mov
shrb
mov
lcall
push
mov
adc
jno
icebp
clc
mov
mov
push
mov
add
pop
cmp
or
movlhps
mov
sbb
data16
lock
sub
mov
out
jg
fsubrs
cmpl
je
cmp
adc
adc
aam
mov
fcoml
push
push
jmp
cmp
cld
mov
aam
cmp
inc
movsl
cs
add
cmp
cs
ja
push
inc
mov
add
inc
fmulp
jecxz
fcoml
adc
adc
push
mov
add
adc
adc
das
cltd
mov
insb
or
mov
mov
cld
mov
cmp
and
mov
mov
filds
mov
push
sarl
adc
pop
and
aaa
push
xor
and
mov
cmp
test
pop
icebp
jns
daa
pop
cs
adc
mov
push
nop
push
sbb
jno
xor
push
lcall
test
add
jo
loop
xchg
int
mov
or
sub
in
jg
and
cmc
lea
insb
mov
or
scas
pop
pop
and
movsl
sti
fisubrl
nop
mov
or
lahf
sarb
adc
mov
push
xchg
and
cmp
adc
in
test
adc
mov
xchg
add
cmpb
and
in
cmp
or
sbb
jmp
inc
adc
jle
jne
mov
mov
insb
fs
xor
daa
aam
popa
rcrb
mov
call
leave
fmull
sub
cmp
push
xlat
jmp
je
or
andb
lret
sub
jl
add
in
mov
ret
mov
fadds
add
adc
faddl
xor
xchg
add
push
outsb
outsl
shrb
sbb
sub
add
push
push
push
and
call
pop
lock
xor
adc
call
inc
cmp
jl
idiv
daa
pusha
icebp
ret
mov
jnp
popa
pop
mov
xor
js
jne
mov
jb
cmp
jbe
rcr
and
gs
push
mov
mov
or
pop
rclb
dec
mov
inc
ds
push
push
aaa
jbe
adc
adc
outsl
movsb
add
and
fbld
and
mov
and
mov
and
mov
mov
int3
xchg
je
push
cli
into
sbb
jmp
lcall
or
jmp
mov
lea
add
inc
test
jne
sub
and
sbb
push
inc
sbb
adc
push
mov
adc
xor
or
pop
aad
lds
fs
mov
jne
adc
jecxz
pop
dec
push
sub
das
es
lea
pop
jb
iret
inc
popa
fcom
cmp
clc
jmp
in
idivb
xor
mov
cmp
jl
xor
cmp
adc
pop
pop
ret
mov
jp
xor
pusha
daa
aaa
pop
orb
adc
loop
fisubrs
rcrl
int3
arpl
pop
pop
inc
pusha
push
insl
lcall
jne
pop
mov
jl
and
sbb
or
or
mov
push
stos
xor
aas
loopne
fs
adc
pop
cmp
fists
or
jnp
adc
test
mov
std
sbb
loope
loop
jge
push
call
test
mov
stos
in
pop
nop
lahf
mov
jle
mov
mov
lahf
icebp
fdivrs
ret
pop
insb
mov
mov
pop
fdiv
cld
lea
push
or
cmp
add
mov
adc
cmp
ja
add
jmp
insb
fcoml
push
mov
push
hlt
in
clc
cwtl
jl
jle
loope
inc
jo
jg
mov
fcmovb
add
add
pop
and
stos
dec
pop
ret
icebp
mov
fldcw
clc
or
lea
jbe
je
cmpl
int
fcoms
insb
jge
sub
add
in
adc
roll
mov
pop
ret
xor
mov
cmp
loopne
in
rcll
push
rclb
cmp
fsub
les
jg
pop
pop
push
ds
call
mov
xchg
mov
notl
mov
or
mov
push
cld
cmp
ja
push
lods
ret
clc
lea
push
push
jmp
and
or
clc
push
pusha
jb
mov
jmp
push
pop
sub
out
lahf
sarl
and
adc
adc
fisttps
adc
addl
push
push
push
add
cli
cmp
test
push
pop
push
push
lea
sbb
mov
outsl
mov
subl
mov
aaa
or
or
or
push
insl
or
sbb
pop
adc
pushf
ret
mov
loop
popa
mov
jg
int3
or
sarb
test
icebp
mov
pop
jne
inc
or
xchg
mov
pop
pop
fadd
stos
fstpl
sbb
ljmp
pop
mov
dec
pop
call
mov
adc
je
cmpl
lea
jl
mov
xor
jne
push
imul
enter
mov
add
rorb
subb
das
shl
push
test
loopne
push
push
sbb
cmp
fdivr
rclb
mov
inc
into
pusha
push
inc
or
cwtl
or
aaa
fndisi(8087
mov
icebp
cli
pop
xlat
dec
xchg
test
xor
rorb
lret
push
cwtl
dec
sbb
sbb
xchg
roll
cmpsb
repnz
and
aaa
or
inc
inc
and
and
or
shlb
adc
ret
aas
adc
cmpsb
jg
lcall
inc
lods
pop
loop
mov
push
incb
dec
fdiv
je
adc
push
or
addb
test
mov
movd
imul
push
push
cwtl
ret
insl
mov
mov
adc
mov
mov
add
jb,pn
stos
and
or
cmpsb
mov
lea
mov
shrb
jp
sahf
sarl
jge
jmp
inc
add
dec
adc
cld
popa
rclb
push
lods
mov
lea
lds
mov
pusha
and
mov
fiaddl
adcb
or
cmp
cmpsb
mov
es
mov
jmp
add
ret
add
jle
add
or
es
ret
movsl
rolb
and
mov
dec
push
adc
push
out
loopne
push
sahf
outsl
xor
cltd
ret
mov
rolb
adc
mov
scas
rorl
or
add
xor
add
push
jae
cld
shr
cmpsl
int3
mov
push
or
mov
jle
mov
test
andl
xor
inc
pop
lock
hlt
cmp
cli
imul
lret
pop
or
cld
loopne
add
rorl
add
add
cmp
rorl
and
adc
pop
movsb
jb
xor
lock
mov
rclb
inc
sub
mov
add
adc
ret
or
ss
stos
adc
and
mov
rclb
mov
je
pop
pop
push
xor
push
std
adc
jbe
jmp
lahf
mov
popa
imul
jb
mov
pandn
add
lret
pop
pop
pop
mov
test
push
pop
adc
lret
mov
lcall
outsb
sub
addps
or
rorl
mov
aad
push
adc
pop
xor
incb
pop
out
push
jb
pop
cmp
ds
xchg
adc
xchg
or
jle
mov
data16
push
loop
inc
inc
adc
cmp
dec
cmp
in
and
es
cld
or
or
in
pusha
inc
xchg
push
test
push
sbb
aam
div
and
push
pop
add
pop
lahf
rclb
pop
loope
movsb
push
push
out
push
dec
and
adc
pop
sbb
mov
rolb
repz
adc
lea
mov
std
lods
jge
cmp
jne
xor
push
push
dec
pop
outsb
fildll
mov
add
sub
xlat
push
lea
add
ret
lea
inc
fisttps
mov
test
insb
mov
test
or
jecxz
pop
or
rcll
xchg
aad
jo
aas
inc
adc
fisttps
test
or
ja
adc
pusha
cmpb
pop
mov
adc
fstpl
and
pop
repnz
sbb
inc
shll
incl
add
add
test
into
push
sbb
pop
inc
mov
jno
loope
test
mov
mov
xor
cmp
fiadds
ja
outsl
cmpsb
testb
je
or
mov
sbb
test
cmp
std
pop
xor
push
push
movsb
rol
adc
popa
mov
imul
fwait
pop
jbe
push
adc
sub
sbb
test
ret
cmpl
and
jle
in
pop
mov
dec
or
jmp
ret
or
inc
clc
pop
add
jne
and
cmp
fidivrs
arpl
push
sahf
jecxz
popf
cmpsl
push
and
cmpb
pusha
je
or
adc
mov
inc
je
orl
inc
sub
pop
cmp
mov
lods
mov
icebp
push
aas
pushf
xchg
jnp
imul
or
add
add
inc
int
pushf
xchg
je
push
inc
dec
mov
mov
daa
mov
push
cld
add
repnz
dec
je
lcall
dec
cmp
dec
mov
add
xchg
sbb
fnstsw
add
mov
loop
in
insb
or
enter
dec
rcrl
and
mov
mov
sbb
shrb
cmp
pusha
cli
xchg
insl
rorb
jp
lods
cwtl
push
lea
jp
mov
cltd
pop
mov
sbb
adc
imul
out
int
dec
mov
popf
jns
lds
fisttpl
xchg
dec
cmp
pop
repnz
sbb
xchg
fldz
movl
sahf
or
mov
stc
xchg
dec
inc
lds
sub
stc
mov
daa
je
xor
jne
scas
mov
clc
pop
dec
sbb
in
fnstenv
push
inc
cmp
repz
dec
bound
repz
inc
mov
iret
in
rolb
cmp
mov
pop
and
cmp
jg
sbb
fstl
loope
push
mov
add
and
sahf
in
sahf
in
or
mov
call
add
jb
pop
jae
dec
ljmp
repnz
add
push
daa
and
add
aad
pop
mov
dec
mov
pop
push
lea
push
pop
dec
std
push
ficoml
add
push
lea
cmp
out
jle
xchg
push
enter
dec
aam
les
lret
pop
push
pop
sahf
ret
mov
fidivrs
test
push
mov
add
add
adc
sbb
in
sbbb
xor
aas
push
in
mov
add
fiaddl
cld
ret
lret
xchg
mov
adc
test
in
add
add
lock
push
push
push
fnstsw
insl
jle
ficompl
add
pushf
sbbl
xor
mov
or
mov
mov
and
int
cltd
dec
faddp
jle
or
pop
je
pop
push
aad
and
mov
push
dec
mov
xchg
sbb
movsb
mov
cmp
call
in
out
sub
mov
shrl
nop
mov
mov
js
cmp
sbb
out
dec
xchg
xchg
sbbl
or
push
and
add
mov
push
setne
push
sbb
push
ret
add
lcall
in
jecxz
lea
pop
mov
in
getsec
push
push
std
push
push
push
push
inc
cwtl
rcrl
je
jge
roll
xor
add
add
add
addr16
xchg
pushf
push
mov
outsl
gs
jle
sahf
pop
mov
dec
mov
mov
pop
loope
in
sbb
or
push
cmpl
xor
adc
pop
and
test
cmova
mov
pop
push
mov
sub
ret
push
push
lea
int
adc
jmp
mov
push
push
mov
cld
ja
inc
mov
insb
push
dec
dec
mov
push
push
xor
xchg
iret
fistl
sbbb
daa
jecxz
inc
inc
push
ret
add
ss
mov
xor
and
sub
std
cmp
push
mov
add
sahf
inc
add
mov
arpl
cmp
pushl
fs
jno
jg
js
setno
xor
push
inc
jbe
clc
xor
sub
rol
mov
lahf
mov
push
sbb
push
adc
xor
cmp
inc
or
push
js
jle
inc
xor
mov
aad
sub
push
push
popf
dec
les
icebp
adc
xchg
pop
ret
sub
das
inc
neg
sbb
ret
cmp
jmp
mov
pusha
adc
test
add
push
push
lock
mov
cmp
xor
arpl
cwtl
push
fnstsw
sbb
mov
push
and
add
or
ret
pop
movzbl
jle
push
out
mov
jnp
mov
cmp
stos
or
lods
cmp
cmp
cwtl
push
pop
cmp
shll
and
mov
inc
lea
pusha
xor
adc
std
stos
pop
add
cwtl
add
jmp
pushf
ja
mov
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
mov
xor
xor
mov
cmp
int3
mov
lds
jle
add
xchg
lds
les
aas
inc
clc
add
pusha
jne
add
aad
lahf
jb
daa
mov
aad
sbb
rdpmc
cld
jg
jmp
pop
or
jmp
cwtl
jb
lcall
adc
rcrb
dec
mov
push
inc
js
cmp
fldz
fisubrs
jb
dec
fiadds
dec
xchg
xchg
push
sbb
dec
rcll
flds
xor
push
push
mov
ds
mov
or
mov
mov
push
add
xor
xchg
dec
sbb
sub
mov
jne
push
mov
ds
fs
mov
sbb
sub
lea
xorl
mov
mov
pop
push
fstpl
lea
out
orb
push
fwait
imul
out
inc
ds
adc
mov
sbb
lds
popa
and
sub
xor
pop
jns
lods
and
xchg
sub
mov
cmp
movb
mov
or
popf
cli
insb
sbb
dec
lret
push
push
sub
frstor
push
push
addb
mov
inc
lahf
push
rclb
lock
test
imul
nop
fcoms
clc
push
cmp
sub
push
push
lea
mov
lods
push
jp
xor
ret
pop
push
insb
shlb
push
cmp
or
mov
je
jno
addb
addb
push
push
test
add
and
je
cmp
push
sub
dec
addb
sbb
add
dec
add
ret
cmpsb
je
add
or
gs
mov
add
mov
mov
jo
push
sbb
add
cltd
loopne
adc
inc
ja
mov
bound
adc
jge
aaa
faddl
sub
outsb
add
inc
shrb
pop
lcallw
inc
pusha
fmull
call
cmp
push
push
rorl
inc
in
dec
cltd
mov
or
push
lahf
push
mov
rcll
adc
push
lock
xor
es
add
popa
rcr
add
ds
ds
push
or
xor
cmpsl
sbb
pop
test
adcb
jp
out
mov
mov
sbb
pop
dec
inc
push
add
push
mov
jecxz
ljmp
add
sbb
push
and
lock
loop
lock
xchg
cmp
sbb
or
push
es
rcll
arpl
ljmp
es
sbb
cmpb
jno
adc
repnz
add
inc
xor
adc
int
push
inc
orl
xor
push
scas
sti
rclb
outsl
addb
push
xchg
push
push
mov
mov
mov
cld
cld
add
out
xchg
xchg
add
je
mov
cmc
mov
or
sarl
stos
and
sub
sub
push
pop
mov
test
cmp
dec
or
jmp
push
mov
dec
lea
js
add
xchg
add
jo
orl
jo
or
bound
int
dec
dec
sbb
sub
dec
push
push
push
jmp
jo
lods
xchg
push
xor
push
movsl
mov
push
mov
cmp
add
neg
cltd
jo
loopne
inc
inc
push
sbb
addl
push
pop
inc
add
jno
insb
lds
int3
popa
dec
xor
les
adcb
enter
shl
cmpl
xor
mov
xchg
sbbl
xor
or
rcrl
sbb
adc
sub
jl
cltd
mov
loop
add
clc
or
fnstenv
fistl
pop
adc
jl
xchg
nop
lret
add
and
add
out
fistpll
dec
bound
imul
sar
mov
shr
add
mov
imul
lock
push
push
lahf
adc
aas
adc
nop
imul
in
add
jmp
or
push
adc
call
mov
add
push
sarl
push
enter
lea
call
cmp
je
cmpl
ss
dec
mov
xor
and
lea
call
fisubl
dec
xor
ficomps
shr
imul
inc
mov
shll
and
lds
jl
sbb
cmp
pusha
dec
lcall
js
lea
jmp
add
xchg
push
cmpsl
sbb
inc
cmp
cli
dec
mov
out
data16
push
dec
cmp
pushf
sub
mov
int3
sbb
stos
call
je
test
jl
lcall
insb
ja
arpl
inc
push
aaa
ds
sub
outsl
xor
and
mov
cmp
jbe
popf
mov
push
test
arpl
mov
in
jle
fidivrs
cmp
add
xor
sbb
inc
test
pop
and
mov
add
imul
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
sbb
push
faddl
jg
fdivl
lret
xor
mov
fdivrp
rol
stc
sti
and
mov
test
sbb
pop
std
push
mov
mov
jns
inc
push
js
mov
fcoms
jmp
fistpll
pop
mov
jo
jmp
js
out
fidivl
inc
mov
add
push
repnz
in
mov
call
xchg
add
mov
leave
jge
nop
inc
stos
add
cli
enter
xchg
adc
call
jbe
cmp
mov
call
hlt
or
jl
roll
insb
xchg
mov
call
test
sbb
xchg
mov
outsl
lahf
arpl
je
xchg
mov
xchg
xchg
and
inc
andb
xor
or
pop
push
dec
or
push
add
mov
movsl
jno
sub
add
xor
push
test
jmp
and
daa
sbb
add
dec
and
invd
and
xchg
testl
or
inc
push
sahf
or
outsb
jno
add
xchg
outsl
popa
ret
sbb
incl
cmpsb
jmp
jecxz
jmp
loope
cmp
add
or
xchg
adc
push
enter
nop
les
mov
into
or
mov
clc
mov
push
pop
pop
mov
mov
cmp
push
ret
fimuls
pop
in
or
add
push
pop
orb
mov
je
rcll
xchg
push
jmp
mov
push
lahf
sbb
push
push
lock
jae
xchg
or
pop
inc
jg
mov
cmpsb
jo
fstpl
push
rolb
or
dec
test
adc
and
jl
mov
sbb
add
mov
mov
jle
mov
dec
adc
sbb
xor
jl
xor
adc
aas
test
push
jmp
mov
and
sub
lea
cs
or
pop
add
sbb
xchg
inc
mov
popa
xchg
popa
pop
push
dec
mov
repnz
movsb
test
sbb
xchg
jns
and
in
das
orb
movsl
mov
pop
ret
lahf
in
in
or
or
andl
and
es
sbb
or
test
inc
and
clc
push
cld
fisttps
sub
clc
setb
insb
push
mov
sub
cmp
setae
in
jne
lcall
adc
cmp
js
lret
mov
pusha
movb
mov
pop
pop
xchg
outsl
inc
pop
les
push
push
sub
add
inc
push
cltd
xorb
push
pusha
mov
push
aad
push
movsl
push
adc
pop
pop
pop
fstpt
jno
lahf
rorl
clc
or
mov
xor
push
test
inc
insl
pop
cmp
sub
dec
jnp
inc
push
adc
sbb
loop
fnsave
std
sub
incl
lds
prefetcht1
inc
ss
push
imul
push
dec
push
xor
aas
adc
or
and
mov
inc
cmpb
mov
iret
call
jge
jge
push
dec
add
push
pop
jns
lcall
xchg
les
and
mov
fcoms
push
lcall
push
dec
cmp
inc
mov
ret
lds
push
mov
mov
sarl
add
add
adc
sub
add
xlat
dec
nop
push
cli
mov
xor
pop
lahf
mov
pop
addl
mov
leave
inc
and
dec
cs
idivl
ds
and
adc
movl
test
sarb
movl
out
nop
pop
push
test
dec
pusha
jmp
xor
pop
push
mov
and
pop
adc
lret
xchg
loope
bound
out
xchg
and
jo
push
es
push
mov
sub
cs
adc
push
mov
adc
xchg
rolb
push
adc
call
test
jo
mov
imul
add
push
jb
andl
dec
cli
mov
or
sub
std
push
push
sub
lea
sbb
mov
and
mov
and
mov
sbb
mov
push
jne
stos
mov
jo
les
test
dec
add
push
dec
sahf
out
mov
pop
or
push
pop
or
push
jmp
dec
movsb
mov
sbb
xchg
and
and
lods
pusha
rol
push
addps
aaa
adc
sbb
repz
iret
push
push
jle
push
nop
and
leave
es
rcl
mov
in
mov
repnz
or
aam
movsb
out
and
xchg
push
testl
test
dec
movsb
cmpl
andb
sbb
arpl
lahf
out
inc
mov
test
xchg
and
push
or
cmp
cltd
fistps
cmpsb
scas
push
push
dec
mov
clc
test
push
jp
dec
inc
jg
cwtl
mov
inc
arpl
dec
arpl
test
and
sbb
sbb
in
xchg
xor
mov
xor
cmp
and
or
jle
lea
inc
xchg
push
push
in
inc
mov
or
lret
push
push
mov
ror
add
inc
test
ret
sub
jo,pt
cmp
push
jns
add
sub
outsl
push
add
add
add
fcmovnu
int
inc
push
pop
fdivrs
push
in
xchg
or
and
pop
push
fistpl
test
fs
cmpsb
and
mov
mov
mov
sbb
xor
inc
mov
xchg
or
add
jne
adc
mov
sub
loope
das
cltd
xor
shll
lods
cwtl
pop
call
mov
fwait
test
test
mov
sub
ficompl
lods
pusha
or
or
add
enter
push
mov
or
add
or
cmpsb
ret
mov
mov
fisubl
inc
loop
sbb
lods
mov
mov
inc
lcall
pop
movl
jne
rorl
rcrb
sbb
add
add
clc
mov
add
push
mov
pop
sub
xchg
cld
pop
insl
add
cli
push
out
pushf
sbb
cmc
or
push
and
and
cs
fisubl
test
mov
daa
and
add
hlt
int
stos
por
outsb
mov
js
test
mov
and
dec
cmpsl
and
push
mov
ja
out
jnp
adc
inc
test
in
cmp
mov
pop
add
add
sbb
insl
push
cld
ljmp
adc
cmp
mov
fisubrl
push
adc
movsb
push
pop
movsb
cmp
adc
xchg
pop
mov
xor
add
jb
add
add
or
xor
push
ret
shl
andl
pop
fisubrs
xorb
adc
mov
add
sub
mov
sbb
test
aad
jle
addr16
in
and
add
push
int3
add
push
sbb
in
imull
into
nop
jne
cmp
cmp
mov
clc
mov
push
or
mov
jb
adc
sbb
dec
das
push
test
hlt
inc
scas
aas
into
movl
push
mov
mov
adc
fs
sub
sbb
cmp
mov
adc
pop
mov
pop
andl
or
push
push
hlt
mov
or
sub
jb
inc
xchg
dec
movsl
loopne
je
repz
or
push
add
cwtl
or
xor
and
sbb
pop
add
mov
push
or
xchg
xchg
pop
out
mov
jno
ret
daa
pop
push
jg
sbbl
in
adc
subb
jne
xor
popf
sbb
cmp
or
rorl
lods
outsl
sbb
add
push
cltd
out
imul
mov
mov
push
popa
pop
mov
fs
lea
sub
jns
sbb
sbb
dec
les
inc
ss
or
fwait
xor
push
jmp
sub
adc
shlb
fstpt
inc
repz
mov
cmp
mull
adc
inc
sbb
dec
add
dec
enter
sub
jmp
sbb
mov
mov
sbb
push
pop
adc
orb
push
dec
push
add
and
adc
xchg
xchg
cmc
jbe
cmp
push
lcall
idivb
enter
cwtl
sub
push
movl
jne
jne
rolb
add
jmp
sbb
jne
lods
stc
test
adc
inc
loopne
adc
rolb
mov
add
sbb
bound
adc
pop
xor
and
iret
inc
push
adc
xor
adc
jmp
and
loopne
add
dec
mov
mov
fs
adc
daa
jmp
popf
adc
lret
adc
test
inc
lcall
cmpsb
xor
ljmp
mov
mov
xchg
hlt
mov
and
adc
adc
addl
inc
mov
push
add
jmp
imul
cltd
leave
enter
add
mov
jbe
in
mov
pop
mov
xor
push
stc
test
push
fwait
push
orl
or
ret
or
mov
mov
and
push
inc
scas
and
mov
ss
mov
inc
push
pop
rolb
sbb
and
sbb
dec
and
mov
push
or
in
mov
cs
add
inc
adc
scas
subl
inc
and
push
andl
xor
jb
mov
pop
cmc
or
stos
lods
xchg
fwait
add
xor
add
loope
fnsave
std
add
sub
add
xor
push
sub
and
push
push
and
enter
and
ljmp
test
pop
dec
fs
add
aas
pop
add
add
sbb
mov
sbb
sub
or
aaa
jns
push
inc
imul
mov
repz
sub
cmp
jns
lods
cmp
push
les
add
push
mov
pusha
cmp
and
cmpsl
push
sub
test
pop
dec
cmpsb
ret
xor
cld
inc
rclb
lea
sahf
mov
sub
xchg
or
je
jmp
xor
sbb
pop
xor
cmp
sub
cmp
sbb
iret
inc
stos
dec
push
test
out
push
cmp
xor
inc
ret
pop
mov
add
shlb
push
testl
test
adcl
mov
xchg
lods
rorb
or
clc
insl
pushf
jmp
push
sbb
insl
dec
jge
push
cli
add
or
jne
movl
push
int
and
inc
sub
dec
dec
cmp
push
add
leave
sub
cmpsb
inc
arpl
cmpl
dec
pop
pop
nop
cwtl
inc
dec
jecxz
inc
lods
mov
or
nop
or
add
mov
mov
mov
jo
sub
sub
sbb
pop
or
mov
js
inc
movb
add
xchg
jno
cli
mov
fildll
cmp
loopne
adc
lcall
rorb
adc
test
and
jle
movsb
mov
iret
add
or
push
enter
add
lock
into
inc
sub
mov
ss
mov
cmc
pop
mov
mov
iret
mov
daa
mov
lock
push
cs
ljmp
lods
and
adc
jmp
hlt
push
pop
popa
fmuls
adc
pushf
or
sub
pop
fdiv
mov
enter
xchg
mov
add
mov
jno
fs
or
or
clc
mov
add
std
xchg
mov
adc
into
mov
xchg
push
jp
rorb
dec
pop
push
inc
dec
inc
cmp
popf
popa
mov
fld
stos
pop
fwait
outsl
fwait
pop
adc
jmp
call
mov
mov
xor
pushf
mov
mov
jl
or
sti
pusha
pop
cmp
mov
mov
das
rcrl
adc
pop
leave
loope
adcb
mov
or
push
cmc
outsb
std
test
jg
popf
or
push
push
in
in
shrb
add
stos
arpl
les
add
cmp
adc
fsubl
addr16
and
inc
cmp
cs
pop
pop
pop
xchg
in
and
leave
push
testb
and
ret
add
jecxz
in
add
or
xor
enter
push
or
add
clc
dec
push
mov
pop
or
fnstcw
xchg
push
popa
shlb
fcmove
test
cmp
mov
dec
mov
or
loope
dec
pop
push
and
or
jno
adc
add
adcb
gs
or
les
bound
rorb
cs
inc
roll
std
and
dec
adc
add
rcrl
xor
dec
rorl
or
xor
add
es
mov
sti
inc
pop
mov
in
sbb
cmpsl
xchg
movsb
push
push
pandn
push
mov
dec
push
cmp
cltd
dec
ds
or
pop
sbb
imull
xor
xor
dec
dec
or
xor
adc
sbb
scas
mov
out
add
nop
or
inc
lcall
inc
cs
push
and
fbld
sahf
add
dec
or
mov
adc
adc
dec
push
inc
adc
dec
pop
dec
add
xchg
call
jo
add
movsb
imul
inc
cmc
insb
mov
imul
ds
out
nop
adc
pop
inc
or
adc
fstpt
xor
icebp
enter
jg
sub
loop
cltd
add
cmpb
adc
push
ja
movsb
mov
add
ret
imul
andb
in
push
adc
push
cmp
test
add
cmp
adc
xchg
xchg
loopne
push
sbb
jb
dec
sbb
add
or
xor
leave
add
daa
sti
sbb
adc
shlb
or
sbb
or
sahf
dec
cmpsb
push
mov
pushf
jnp
dec
cmp
cmpsb
daa
ss
adc
das
add
pop
std
or
dec
les
dec
cwtl
pushf
pop
cmp
arpl
sbb
or
movsb
cmp
sub
cwtl
push
mov
mov
xchg
test
leave
xchg
decb
lret
jno
mov
inc
pop
xchg
cmc
loope
sub
into
mov
sbb
mov
push
xor
cltd
push
imul
xor
and
sub
xor
loopne
push
int
xor
xor
cmp
add
rcrb
push
cmp
add
fildl
mov
add
jl
push
insl
cmp
mov
push
insl
cmp
je
add
and
add
cmp
fstl
mov
aas
jae
or
rorl
jg
jl
out
dec
and
ret
test
xor
push
les
inc
dec
mov
pop
mov
mov
jmp
mov
xor
inc
sbb
and
dec
fs
popf
jecxz
sbb
out
fldenv
or
shll
in
or
fdivl
pusha
dec
sbb
lahf
fs
fs
fs
and
xor
xor
pusha
dec
fldenv
and
mov
push
test
data16
push
push
lret
push
sti
add
add
xchg
mov
shr
mov
lcall
mov
mov
add
outsb
pop
rorb
sub
fwait
and
adc
lea
jne
lea
mov
dec
mov
inc
inc
add
stos
xorb
jle
dec
clc
sbb
jmp
or
jge
push
in
jle
jl
mov
add
and
popf
insb
cmp
mov
mov
sahf
pop
jle
jg
push
pop
adc
pop
add
add
adc
lea
iret
lock
inc
test
daa
stc
xor
jne
pop
hlt
aas
add
mov
sub
mov
jmp
mov
lea
inc
test
jmp
int3
add
in
push
icebp
pop
cltd
push
mov
jp
cmp
fimull
nop
daa
loopne
jb
mov
push
inc
mov
popa
punpcklwd
push
sbb
es
xor
sub
jno
insb
jle
push
imul
add
dec
in
mov
cmp
cmp
nop
add
aam
fists
cmp
sub
push
jmp
push
test
test
mov
out
mov
sub
mov
and
test
sub
pop
ret
pop
test
mov
pusha
pop
sbb
sbb
stos
xchg
not
mov
inc
gs
sbb
push
or
xor
cmpsl
xor
jecxz
mov
xchg
dec
add
push
repnz
add
inc
ret
and
push
shlb
cltd
leave
cmp
lods
jo
cmp
adc
sub
cmp
or
xor
inc
lds
fcoml
ss
cmp
decb
out
loopne
fwait
add
sub
dec
pusha
add
xchg
add
clc
dec
and
jnp
pavgb
js
xor
aad
clc
aam
sub
push
xor
out
test
insb
or
or
pusha
or
inc
sahf
in
shl
or
add
mov
mov
js
je
sbb
test
loope
jl
push
inc
push
mov
add
sbb
mov
test
mov
push
xchg
mov
jecxz
inc
sub
add
xorl
decb
cmp
jle
mov
and
sbb
push
sbb
push
adc
add
and
add
add
jecxz
daa
fldl
push
je
inc
xor
pop
mov
adcl
or
cmp
mov
insb
pop
push
mov
sub
jbe
scas
cmc
sub
and
adc
pop
test
dec
ss
fdivl
inc
pusha
pop
setae
stos
push
pop
xor
sti
push
dec
dec
js
lds
push
aas
js
mov
jae
mov
ds
dec
cld
lea
sub
icebp
pop
lcall
sbb
add
dec
les
jo
icebp
subb
movb
lods
test
xchg
pop
add
notl
push
sbb
mov
sub
dec
inc
push
or
xor
test
cmpb
fldl
std
in
cmp
xchg
pop
pop
mov
push
add
sub
repnz
outsb
and
or
xchg
or
das
sbb
push
sbb
push
xchg
jne
pusha
sbbl
shlb
rorl
xchg
or
rclb
xor
xor
pop
leave
pop
ds
inc
leave
add
rcrb
fldt
mov
or
mov
jge
sbb
and
and
add
shll
fldcw
addb
push
sbb
push
push
jae
arpl
xor
jecxz
cs
lret
lret
mov
inc
adc
pop
add
cmp
push
xchg
pop
cmp
lahf
mov
and
lret
rclb
jle
pop
hlt
in
ret
je
pop
shrl
or
data16
aaa
das
push
sbb
aas
push
push
adc
lahf
mov
lcall
push
test
pop
shr
push
and
std
ja
insl
mov
fildl
push
dec
mov
pop
jbe
adc
dec
hlt
xor
push
xchg
pop
sahf
sub
sub
iret
and
and
test
push
mov
xchg
mov
push
leave
lods
sbb
sbbl
insl
mov
or
pop
cld
inc
jno
add
jns
js
sete
sub
cmp
mov
adc
dec
add
call
test
sub
mov
insl
and
push
mov
sub
adc
ret
mov
addb
aad
ja
adc
adc
or
mov
mov
fists
mov
xor
andb
adc
mov
pop
xor
sub
push
mov
or
ret
push
daa
mov
sub
mov
cmp
xor
outsb
pop
and
lea
push
rdpmc
daa
ret
pop
sub
cmc
dec
xlat
add
push
adc
fwait
pop
leave
push
ret
or
test
jne
pop
or
or
sub
jno
pop
mov
imul
xchg
or
and
sub
pause
pop
std
add
xorb
push
xor
lret
adc
pop
jl
xchg
adcl
setge
sbb
ds
sub
sbb
int
inc
test
inc
pop
or
xor
aad
or
xor
xor
and
das
test
and
jo
inc
ret
xchg
and
loope
pop
lock
cmp
inc
cmp
outsb
mov
jnp
adc
lahf
mov
sbb
push
push
scas
sub
into
test
inc
jbe
mov
inc
or
cmp
or
adc
add
or
movsb
inc
adc
add
dec
cmp
push
lcall
pop
jle
sbb
rorb
stos
xor
jle
test
pop
pop
sub
jmp
ja
add
aaa
push
and
add
cmp
fbld
adc
xor
call
jmp
cltd
or
push
push
push
sbbl
and
nop
in
push
imul
push
mov
cmpsb
dec
sub
fisttpl
outsb
insl
rclb
movsb
sub
or
and
sbb
mov
daa
sub
push
push
leave
xchg
push
mov
inc
lock
or
adc
adc
xchg
sub
jns
xchg
test
adc
call
popf
jno
test
shrb
fidivrl
movb
xchg
aam
outsl
or
add
add
in
inc
testl
dec
filds
adc
cmpsb
ret
mov
adc
lcall
xlat
adc
fadd
or
popf
mov
xor
mov
mov
ja
movsl
clc
push
add
cmp
mov
rol
xor
inc
dec
or
mov
int3
mov
add
dec
xor
lcall
out
lsl
xchg
mov
xor
decb
call
xchg
rorl
add
pop
jbe
adc
xchg
pushf
adc
or
sub
mov
jp
cmp
xor
xor
clc
pop
inc
inc
hlt
cmp
jne
sbb
jnp
mov
les
into
ja
stc
in
enter
sub
push
ret
add
faddl
adc
aaa
mov
xchg
xlat
aaa
testl
subb
test
mov
int
scas
clc
mov
cwtl
sbb
outsb
jno
sub
cld
mov
icebp
decl
xchg
adc
add
sub
or
lea
jge
push
sbb
dec
ficoml
imul
fwait
add
add
add
xor
adc
sub
cmp
mov
cltd
add
iret
pop
adc
pushl
mov
fsts
cwtl
sbb
xchg
push
sub
jl
and
xabort
std
test
cmp
ret
inc
mov
inc
imul
xor
leave
and
cs
or
xor
xor
jns
in
lods
outsb
jb
insl
xchg
shr
or
mov
adc
cld
lea
ja
or
je
cmpb
pop
lahf
sbb
out
push
add
cmp
push
pop
icebp
cmc
adc
push
mov
sti
jge
add
sub
cmp
cli
push
shlb
add
addl
pushf
ljmp
mov
dec
hlt
jge
out
jne
inc
cmp
sbb
add
add
int
lahf
sbb
xchg
xchg
in
push
nop
sbb
xchg
add
mov
fmul
adc
xlat
mov
sub
push
es
ret
add
pop
mov
push
adc
inc
fistpl
sahf
jl
mov
push
jg
push
add
push
jne
icebp
sub
add
push
ret
enter
lods
test
push
bound
add
roll
dec
add
movsl
enter
dec
adc
xchg
pushf
rolb
push
out
loop
mov
hlt
sub
push
test
or
mov
mov
add
adc
xor
dec
pop
ret
mov
outsl
adcl
mov
push
pop
iret
div
add
hlt
push
adc
pop
xchg
dec
or
lcall
and
mov
rcrl
adc
cmp
cmp
mov
xchg
lds
stos
push
adc
stc
into
imul
adc
addr16
jnp
pop
inc
insl
inc
jle
pop
jg
inc
pop
mov
ret
pop
movb
cmp
js
xchg
add
js
imul
sub
pop
push
jp
sbb
leave
ljmp
cs
icebp
and
pop
pop
leave
dec
pop
cmp
push
cwtl
xchg
subb
cmp
shrl
pop
pushf
xor
dec
mov
testb
sbb
dec
es
inc
or
and
adc
cld
andb
push
sbb
mov
lcall
ficoms
push
cld
add
jl
mov
and
adc
cmp
jle
lock
adc
inc
testb
jge
cmp
jne
loop
add
int3
adc
js
mov
or
in
insb
lret
push
inc
add
add
into
xchg
push
int3
out
dec
mov
push
lea
shlb
jne
xchg
inc
jp
or
push
lods
test
push
addr16
push
stos
push
push
add
and
jne
mov
mov
insb
or
rcrl
pop
hlt
xchg
add
lea
pop
push
cmp
push
sbb
and
or
mov
test
add
ret
pop
mov
imull
inc
pop
jle
lock
sub
aas
mov
xchg
mov
sub
popa
and
in
add
sub
jmp
add
adc
inc
jae
add
aam
pop
xor
cmp
pop
popa
push
or
and
rolb
push
in
push
loopne
sub
push
scas
loop
or
in
call
add
inc
aaa
movsb
pop
in
sbb
push
outsl
insl
pop
cld
js
or
mov
pop
pop
test
stos
jb
add
sub
and
mov
insb
push
andl
sbb
test
aas
add
sub
iret
cmp
push
jns
pop
js
push
jno
shll
mov
or
arpl
hlt
or
mov
xchg
in
push
push
jo
cmc
xor
mov
ljmp
arpl
xor
xor
and
out
inc
mov
inc
mov
clc
add
daa
mov
push
inc
xchg
dec
addr16
pushf
andl
mov
mov
push
dec
arpl
cwtl
mov
out
popa
or
insl
lds
add
jbe
jmp
es
out
sbb
cltd
push
xor
les
mov
in
mov
in
xchg
xor
sub
adc
add
pop
add
lock
push
js
cmp
add
sbb
ss
movsl
and
mov
mov
leave
cmp
arpl
or
dec
test
sbb
push
dec
pop
mov
dec
push
add
daa
inc
add
xor
jmp
adc
add
sub
sub
add
jecxz
dec
add
push
sub
xor
shl
fs
cmp
nop
or
or
imul
jecxz,pn
shlb
pop
cmp
int
sub
push
leave
and
sub
dec
mov
repz
dec
cltd
adc
test
push
sbb
dec
scas
lods
sub
cmpsl
stos
cmpsl
inc
xchg
in
push
pushf
rclb
ds
jae
dec
mov
add
cmp
inc
ficomps
inc
add
inc
push
xor
out
xor
pop
cltd
es
cmp
fists
inc
dec
jnp
xlat
shll
mov
jle
push
add
inc
pop
add
add
orb
popf
mov
lret
jnp
sub
and
pop
and
xor
sti
add
mov
adc
or
sbb
mov
mov
out
subb
pushl
mov
enter
push
out
sub
scas
rcrb
rclb
cmp
std
and
cld
cmp
xchg
add
push
loope
pusha
addr16
xor
mov
dec
mov
push
add
sub
sbb
adc
inc
push
flds
add
mov
and
cwtl
cmpb
jmp
cs
test
lret
jecxz
mov
add
inc
sub
lods
or
and
jo
cli
and
push
mov
jae
xor
int3
push
pop
aaa
inc
sbb
push
pop
dec
push
mov
add
or
adcl
lock
test
adc
pop
aam
inc
jne
pop
jle
pop
jne
int
arpl
stos
adc
aas
push
mov
enter
push
push
add
cmpsb
les
lds
or
test
push
cmp
daa
or
sbb
setle
gs
rclb
pop
cmp
pop
aaa
and
loopne
cltd
lret
jle
push
xchg
add
inc
inc
cmp
mov
jae
test
mov
adc
scas
test
and
rorl
cmp
sub
pusha
aad
popa
adc
mov
sub
decl
mull
or
and
pushf
in
cli
lock
test
stos
jg
aaa
popa
sub
dec
inc
sbb
lock
dec
jbe
or
xor
ret
mov
fsubrl
nop
dec
mov
pop
cmp
add
push
sbb
sub
sub
push
adc
nop
mov
push
cltd
dec
add
xor
xorb
add
dec
outsb
popf
and
dec
adc
sub
insl
sub
popa
je
stos
jecxz
dec
js
fistps
sbb
push
adc
cmp
dec
or
pinsrw
fistps
das
daa
add
adc
adc
push
and
js
add
xorb
push
cmp
into
stc
lret
mov
mov
orl
mov
xchg
loopne
in
aas
les
cltd
test
add
sbb
lock
mov
pop
stos
in
push
mov
cmp
ds
pop
ficoms
pop
sub
insb
mov
xchg
pop
jo
jae
xchg
insb
dec
add
mov
sbbb
adcl
js
loopne
stos
dec
inc
or
or
loopne
aas
push
not
stos
jge
cmpsl
fidivrs
push
adcl
jne
loope
adc
xor
add
sbb
add
pop
sahf
notb
push
cwtl
add
mov
adc
and
mov
lock
sub
inc
daa
adc
movsl
sub
cmc
rcrl
movsl
cmpsl
sub
ss
nop
andl
jo
cmp
popa
mov
shlb
das
popl
sub
mov
rcrl
ss
xor
and
or
xchg
mov
or
jg
push
add
dec
mov
sbb
pushf
fisubrl
movsb
test
sub
jns
add
gs
in
movsb
leave
adc
loopne
push
pop
gs
dec
lcall
leave
dec
out
push
add
jns
xchg
and
xor
xor
add
insl
dec
dec
popa
lods
and
add
jo
push
sbb
jg
test
leave
lock
xor
push
dec
or
or
sub
es
push
push
sbb
or
adc
or
sub
xchg
test
jl
test
je
lea
add
rorb
dec
push
dec
mov
or
je
jmp
into
cmp
jb
pop
pop
fdivrs
aam
add
aam
push
add
pushl
push
inc
sub
xchg
mov
and
mov
adc
in
add
cmp
mov
jle
loop
fdivr
rorl
sub
imul
add
in
add
jle
cmpb
jno
mov
sub
or
jge
lret
scas
lods
jmp
xor
dec
add
lcall
das
cmp
sahf
add
rcrl
push
push
and
dec
sub
pop
push
bound
cld
testl
xchg
lea
add
pop
push
push
push
push
xchg
inc
sub
ss
loopne
push
push
in
jg
aam
dec
scas
sub
add
add
push
shrb
add
add
dec
mov
mov
adc
jb
out
popf
or
mov
js
data16
jmp
mov
sbb
pushf
add
cwtl
push
push
in
std
inc
or
inc
add
or
mov
je
insb
enter
aam
out
push
rorl
ret
mov
mov
rolb
push
xor
test
add
jo
js
int3
push
mov
or
pop
jne
test
ret
pop
xor
mov
add
loop
xor
je
insb
adc
add
xchg
push
push
jge
in
and
ljmp
popa
test
repnz
pop
jo
inc
es
jmp
and
cmpsl
and
pusha
and
aad
xchg
mov
xor
sub
lea
mov
add
add
out
and
aas
push
push
xor
add
cmp
sub
add
or
add
add
sub
mov
cmp
mov
xor
jo
lock
ficompl
mov
dec
clc
jge
push
vxorps
lods
mov
ds
or
push
adc
adc
insb
rclb
inc
add
inc
lds
int3
push
push
mov
sahf
ja
mov
mov
add
jl
mov
pop
or
or
mov
add
mov
nop
or
mov
scas
or
clc
cld
mov
mov
cmp
add
shll
mov
xchg
cltd
sbb
or
or
lahf
out
xor
sbb
cwtl
cli
stos
inc
loope
pop
sbb
push
xchg
xlat
popf
or
arpl
push
enter
orl
push
shrl
sti
push
push
mov
sbb
pop
push
pop
adc
mov
mov
push
add
inc
cld
xor
idivb
cltd
in
fdivrp
add
sbb
jp
xor
sbb
push
inc
xlat
fldl
or
jmp
xor
inc
cld
mov
push
mov
popa
dec
loop
sub
mov
and
mov
xor
repnz
rclb
ret
addl
in
sub
call
push
or
pusha
push
jg
sbbl
scas
int3
push
ret
xor
push
dec
cmp
cwtl
pop
dec
inc
pop
push
inc
pop
clc
adc
out
dec
pop
and
mov
or
pop
lcall
or
or
test
imul
push
ret
call
adc
in
xor
xor
push
add
cli
xlat
pop
mov
movl
lret
mov
push
clc
in
pop
add
sarb
or
push
add
or
inc
in
loopne
xchg
icebp
push
dec
lock
sbb
or
mov
pop
hlt
in
push
and
push
jo
push
popf
inc
xor
bnd
jb
inc
hlt
scas
pop
popa
push
fstps
cmp
pop
fnstenv
je
inc
jnp
cmp
jae
push
add
xchg
mov
and
pop
adc
cmp
outsl
inc
cmp
fcompl
inc
push
pop
fcoms
aam
pop
mov
add
mov
pop
and
ret
pushf
call
data16
mov
mov
rclb
sbb
jg
xchg
sbb
and
add
sbb
int
ret
jge
movb
cmp
ret
dec
imul
rorl
cld
sub
inc
inc
mov
adcb
jns
lea
jne
push
push
push
inc
mov
jl
cmpsb
and
add
xchg
inc
push
jnp
mov
imull
xchg
sysenter
push
fcmovbe
pusha
in
mov
movsb
cli
scas
xchg
lret
cmp
call
mov
or
orb
test
dec
movups
push
xor
enter
jb
sbb
test
or
or
pop
push
sbb
iret
mov
jl
push
cli
int3
sub
sbb
adc
loope
mov
xor
andl
jg
dec
or
mov
pop
fwait
mov
pop
push
jo
and
dec
in
sub
lods
sub
add
mov
lods
aaa
loop
or
inc
lcall
jne
data16
testl
enter
gs
mov
outsb
add
pusha
mov
xor
xor
mov
imul
loope
dec
jnp
shr
adc
data16
pop
shlb
sbb
ret
add
inc
inc
ljmp
sbb
push
dec
cmp
pop
and
movl
or
hlt
fistpll
fdiv
xchg
sbb
cmp
ja
push
test
jg
inc
js
sbb
adc
jae
mov
stos
push
aaa
jg
or
push
in
sti
sbb
sbb
mov
shll
inc
xor
jo
adc
xor
std
cli
xchg
les
divl
test
push
pop
divl
add
mov
push
adc
loopne
mov
cmp
cmp
pop
push
and
jmp
clc
daa
sub
push
push
push
cs
shlb
jle,pn
adc
popa
and
add
jo
lret
push
cmp
or
push
and
pop
cwtl
cmp
push
or
xor
adc
xchg
mov
mov
lock
imul
insl
push
and
push
push
push
enter
jl
add
cmp
jne
dec
ror
xchg
mov
imul
cmp
xchg
iret
push
repnz
sub
add
adc
xor
ret
mov
fisttpl
ds
incl
sbb
nop
pop
into
or
dec
sub
cs
out
and
add
test
mov
movl
aam
and
fdivrl
inc
mov
orb
call
jl
inc
cmp
mov
dec
fidivl
aad
mov
push
mov
push
mov
adc
pop
push
xchg
shlb
push
or
mov
fnstsw
fimuls
les
adc
sbb
rorl
push
push
andl
sub
pop
dec
jo
popa
cmpsb
sbb
inc
push
mov
pushf
sub
xor
xor
xor
dec
je
cli
adc
pop
loope
add
sub
rolb
movsl
mov
pop
inc
add
sub
xor
test
jmp
mov
sbb
and
inc
push
or
pop
or
xor
pop
xor
adc
cmc
pop
or
push
push
mov
insb
jl
xchg
mov
push
repz
popf
mov
cmp
ss
movsl
loopne
icebp
scas
and
pop
lds
push
inc
jecxz
mov
pop
push
push
pusha
pop
xchg
fmull
mov
fiaddl
cmp
rorb
mov
pushf
xor
pop
cltd
dec
or
add
or
mov
add
fs
popa
adc
sbb
jmp
mov
push
cmp
sub
pop
push
stos
rcll
loopne
cmpsl
test
lret
or
add
cmp
cmp
icebp
and
pop
fsts
jl
fidivs
insl
ja
sub
push
scas
pop
pop
push
or
arpl
dec
jmp
shlb
fldenv
dec
iret
adc
adcl
jmp
push
or
int3
adc
add
sub
xlat
mov
dec
clc
add
or
adc
inc
inc
mov
into
push
pop
vunpcklps
push
rorb
js
mov
dec
adc
xchg
lahf
dec
test
push
mov
push
pop
pop
cs
cmc
lret
adc
and
adc
or
xor
add
inc
cltd
in
inc
sbb
push
xchg
clc
in
pop
or
in
dec
gs
adc
popa
push
or
lock
sbb
test
or
pop
inc
push
test
push
pusha
ss
pop
jmp
mov
repnz
test
add
mov
cmpsl
cmp
and
mov
inc
fidivs
sti
inc
adc
andb
inc
push
je
sarb
add
out
sub
lret
ret
int3
inc
nop
push
add
bound
clc
push
icebp
cmpb
xor
test
add
cmp
xor
in
sbb
inc
movsb
loop
push
fistl
sub
push
mov
xchg
adc
dec
or
push
push
pop
negl
or
xor
inc
pop
cvtps2pi
pop
sub
stos
cld
dec
adc
sub
adc
mov
roll
push
pusha
pop
or
into
vpunpckldq
sbb
push
and
push
loop
scas
dec
std
dec
add
jns
dec
adc
mov
pushf
mov
cmp
jo
xor
dec
and
out
fwait
pop
cs
or
mov
and
jmp
test
pop
xor
sbb
push
adc
xchg
adc
jmp
push
push
push
xor
fisubl
mov
mov
xchg
dec
aaa
push
movsbl
das
or
inc
and
mov
or
shlb
pop
adc
sbb
call
or
sbb
sbb
cmp
adcb
and
shr
sub
sub
mov
jne
mov
dec
inc
push
cmp
push
jmp
ss
add
movsb
iret
push
add
out
in
sub
mov
push
add
leave
out
add
sbb
in
pusha
mov
xchg
pop
xor
aad
push
or
aas
push
cltd
xchg
or
dec
jne
call
mov
lret
dec
push
pop
sub
shrl
pop
fdivl
add
add
mov
loop
dec
mov
push
cmp
les
scas
mov
lods
inc
jno
push
data16
xchg
je
pop
das
pop
outsl
or
jo
shll
dec
es
and
sub
test
pusha
nop
xor
mov
xor
mov
pop
cmp
shlb
sub
and
repnz
sbb
dec
xor
push
push
sbb
xor
pop
sub
cmpsb
sub
and
adc
cmp
sti
fcoms
push
test
inc
js
aas
jne
sub
bound
sbb
add
aam
test
jecxz
add
loopne
daa
add
ja
mov
test
cmp
call
cs
lock
or
sti
inc
dec
leave
repz
push
jl
imul
int3
sub
mov
mov
mov
mov
iret
xor
sahf
inc
push
shlb
jmp
dec
push
iret
and
sub
push
inc
mov
pusha
cmp
mov
nop
xor
pop
ret
rorb
mov
pop
mov
mov
ds
pop
pop
test
xchg
push
and
adc
push
push
add
mov
shlb
movsl
push
lods
aaa
int
dec
shlb
or
mov
cltd
pop
push
and
int3
xor
fsubs
or
dec
mov
pop
pop
fadd
add
cmpsl
add
inc
inc
insl
test
sub
and
je
jecxz
insb
out
mov
mov
sbb
and
push
or
and
or
push
or
dec
jmp
jne
push
lea
test
jp
rol
cmp
pusha
push
xchg
cmp
mov
sbb
push
sub
push
in
inc
xchg
xor
dec
inc
shr
mov
and
inc
fildl
fcmovnu
decl
jns
jmp
fs
and
jl
js
je
dec
sub
sub
fisubrs
mov
test
xor
or
push
sub
jmp
mov
mov
imul
xchg
add
fs
sbb
lock
and
scas
xor
mov
and
lock
inc
xor
inc
sub
movsb
loopne
xor
mov
pop
or
cmc
popa
and
hlt
roll
xor
jae
add
pop
xor
sub
js
xchg
sbb
test
adc
popa
add
add
pop
test
insb
jmp
sub
push
push
xlat
push
sub
je
push
xchg
jge
adc
lds
sbb
add
ljmp
arpl
push
mov
je
fdiv
into
fcoms
leave
data16
pop
pop
push
adc
or
jg
pop
dec
loopne
shll
sbb
and
mov
adc
imul
mov
sub
nop
push
or
arpl
lods
in
sub
pusha
cltd
imul
mov
push
stc
add
pusha
pushf
mov
sti
and
xor
dec
push
pop
inc
sbb
ret
push
int
jns
test
repnz
push
inc
pop
push
adc
stos
sbb
or
inc
js
subb
mov
fsubs
cs
lock
xor
inc
push
xchg
and
add
xchg
lods
mov
pop
cmp
adc
add
pop
fildll
pop
mov
push
and
add
sbb
jnp
insb
idivb
out
ret
xor
fs
call
jl
mov
push
lea
not
push
rcrb
add
cld
cmpl
inc
out
adc
addr16
aam
xor
rorb
sbb
sub
mov
fucomi
mov
lea
mov
popa
ja
jb
call
add
loopne
or
jge
xorl
or
and
adc
push
push
call
sbb
mov
cld
icebp
adc
outsb
test
mov
sub
or
test
mov
fnstenv
mov
add
dec
loop
ds
ret
loope
in
popf
adcb
adc
sub
rcrl
add
test
and
and
je
inc
add
or
popa
addr16
sub
mov
push
mov
call
or
push
data16
add
sbb
and
inc
lahf
push
lea
and
and
sbb
push
adc
arpl
inc
and
stc
inc
das
out
push
fisubs
sbb
add
aad
movsl
adc
mov
movsl
mov
cltd
dec
cs
and
sbb
fwait
test
mov
dec
jl
add
es
std
cmp
sub
adc
xchg
shrb
je
and
inc
shrl
cmpsb
enter
adc
orl
adc
cltd
add
mov
add
cltd
jne
mov
adc
sub
cmp
jb
xor
adc
cmp
cmp
cmp
sbb
pop
inc
or
dec
and
out
jne
lahf
sub
sbb
cmp
mov
adc
fdivr
dec
mov
inc
fmuls
out
fcomi
mov
push
mov
shr
adc
push
push
rcll
push
xor
sub
inc
cmpsb
or
or
sub
sbb
xor
inc
cmpsb
sbb
pop
sbb
fdivs
lds
dec
outsl
and
sbb
sbb
xor
pusha
push
add
stos
mov
mov
push
dec
xchg
out
adc
pop
ds
loopne
mov
rorb
dec
inc
jge
adc
test
mov
aaa
dec
inc
lcall
je
cmpsb
dec
int
xchg
shlb
stos
ja
jno
dec
mov
push
mov
shufps
pop
cli
out
aad
rol
push
sub
inc
add
imul
xor
cli
dec
or
nop
or
and
xchg
mov
mov
sbb
jno
dec
ret
or
sbb
pop
aaa
mov
lock
add
push
push
push
cmp
add
or
sbb
pop
leave
arpl
out
or
movsl
fcoml
or
stos
push
repz
mov
stc
dec
mov
rol
mov
mov
add
cmpl
iret
dec
mov
push
and
jnp
icebp
add
push
dec
hlt
pop
jmp
cmp
jne
and
loope
in
pop
adc
push
inc
and
inc
inc
jmp
daa
jmp
bound
inc
or
pop
cmp
test
incl
xchg
pop
add
sub
sub
movl
shl
out
jo
ja
fistpll
int3
cmpb
stos
mov
xchg
popl
and
push
test
mov
mov
cmp
and
add
movb
jmp
lahf
push
sub
fs
sbb
ret
pushf
lods
ja
pop
icebp
or
enter
sbb
cmp
mov
push
lds
loop
fs
sarl
mov
adc
ljmpw
push
call
daa
in
out
and
add
out
xor
jl,pt
jno
xlat
jnp
ret
push
mov
dec
add
js
sub
fiaddl
rorb
push
shll
int
in
sbb
cs
mov
call
enter
lret
in
jne
mov
push
mov
ficoms
incl
repz
push
lea
push
inc
push
bound
mov
pop
add
add
add
jecxz
mov
and
dec
push
cltd
pop
and
sub
xchg
inc
xchg
loop
sub
xchg
and
cmp
fcmovnbe
cmpsl
sbb
mov
cmp
or
mov
lods
fistl
aaa
add
and
sub
add
sub
sbb
out
cld
imul
hlt
jbe
and
sti
add
add
xor
cld
push
call
or
pop
adc
inc
cmp
cli
and
or
rclb
dec
loopne
loopne
or
push
jp
roll
cmp
cmp
xor
imul
mov
mov
push
outsb
clc
outsl
sbb
outsb
cmpb
jne
inc
inc
xor
dec
or
pop
and
jne
cmpsb
sbb
inc
ss
fidivrl
push
sub
jae
sbb
sbb
dec
push
inc
enter
or
jl
pop
and
mov
sub
inc
pop
mov
and
das
psubsb
xor
jmp
cmp
xor
sbb
xor
push
mov
inc
stos
xor
cltd
sbb
and
jae
dec
clc
mov
icebp
mov
adc
add
in
push
add
aam
or
test
xor
pop
inc
add
adc
loope
pusha
cmp
jne
pop
xor
scas
cs
inc
aas
fsubrp
jmp
pop
xor
xchg
add
pop
loope
push
lea
adc
andb
notl
pop
fdivs
or
cmp
rorb
push
clc
adc
lods
mov
or
in
shlb
sbb
xchg
dec
or
push
seto
mov
pusha
push
jne
sub
jbe
adc
sbb
dec
push
and
mov
mov
jae
add
push
scas
pop
leave
cmpsl
enter
outsb
add
movsb
sbbl
iret
dec
movsl
mov
inc
shrb
sub
jb
push
push
jbe
ret
insb
fdivrl
xchg
pop
inc
push
push
cmp
jl
clc
sbb
cmp
or
xor
cmp
lods
jmp
lahf
push
sub
add
shll
sub
dec
adc
pop
sbb
adc
sub
sahf
add
out
sub
adc
loop
sub
xor
cmp
popa
push
jmp
xor
push
sbb
or
xor
movl
inc
adc
inc
mov
mov
mov
or
add
or
popf
pop
je
sub
dec
pop
jl
inc
iret
cmp
push
jne
loope
or
jne
xchg
test
adc
and
aaa
mov
imul
jmp
cmp
sbb
mov
es
pop
push
out
and
imul
add
pop
adc
sbb
mov
cmp
lods
pop
arpl
loopne
sbb
inc
xor
rolb
mov
outsl
dec
sbb
insl
and
and
mov
adc
add
push
adc
and
daa
xchg
out
and
arpl
add
sbb
shrb
xchg
sbb
jp
mov
pop
or
inc
jno
xchg
ja
pop
cmp
pop
mov
dec
xor
imul
aad
es
hlt
ljmp
sbb
jge
dec
mov
int3
mov
jmp
mov
jnp
shrb
lea
sub
add
das
push
pop
inc
ret
jbe
rclb
js
jno
sbbl
push
push
ds
xor
cmpsl
xor
mov
mov
or
inc
inc
push
mov
movsl
add
push
xor
add
mov
mov
aam
iret
push
bound
sbb
push
fimuls
bnd
cmp
push
cmp
dec
sbb
push
add
sbb
inc
sbb
lds
js
insb
xchg
cltd
mov
adc
sub
and
push
xchg
mov
pop
sbb
stos
daa
adc
pop
into
daa
mov
push
hlt
pusha
add
sarl
dec
sub
popa
lahf
and
jo
shlb
in
xchg
into
sbb
nop
add
push
setb
sbb
hlt
sahf
jp
jb
bnd
aam
push
and
jbe
pop
movsl
mov
into
fisttps
test
inc
dec
xchg
or
or
mov
imul
inc
test
aaa
and
cmpsl
inc
je
dec
loope
imul
mov
sbb
and
inc
lods
jbe
hlt
dec
pop
or
xor
nop
or
stc
mov
js
sbb
push
push
in
push
je
mov
cmp
movsb
push
dec
sbb
pop
sub
rclb
mov
andb
vmread
jne
ss
test
loopne,pt
cmp
push
mov
jno
int3
pop
shrb
jbe
push
xor
es
testl
jo
cmp
fstl
test
sbb
mov
jae
pop
cltd
popa
popf
push
or
xchg
inc
push
jmp
test
andb
and
nop
jnp
bound
outsl
dec
mov
add
sub
adc
rorb
cmp
or
push
lods
dec
xor
adc
xchg
stos
pusha
push
lods
xchg
mov
sbb
test
or
and
jmp
inc
ret
jnp
lods
xor
jbe
ds
push
adc
jnp
shlb
cmpb
mov
sbb
fmuls
fs
pop
inc
adc
ret
push
lea
push
enter
pop
or
sbb
and
test
inc
data16
mov
test
das
inc
clc
add
and
pusha
xchg
enter
sub
mov
daa
imul
aam
jb
mov
daa
mov
imul
fcoms
xchg
and
pop
push
mov
lods
dec
xlat
repnz
xchg
and
push
xor
dec
lea
hlt
mov
jo
fcomps
ret
jb
rorb
aam
adc
sbb
movsl
sub
test
push
shlb
mov
pop
jmp
inc
sbb
popa
and
or
sahf
mov
or
add
sub
lods
int3
imul
jp
jns
xchg
push
enter
int3
les
sub
add
inc
add
add
test
ds
testl
mov
cmp
and
and
add
cmpsb
inc
push
lsl
mov
jl
add
imul
adc
dec
mov
int3
push
sub
push
mov
lcall
jns
aas
adc
lea
pop
lods
adc
xor
ljmp
jmp
outsb
mov
sub
leave
adc
and
sbb
test
push
push
repz
cwtl
adc
nop
pop
push
enter
adc
hlt
sub
and
inc
mov
ljmp
js
lods
jl
sahf
mov
nop
pop
iret
mov
mov
xchg
data16
add
lea
cmp
jne
cmp
aaa
mov
mov
sbb
inc
pop
lahf
frndint
pop
cli
cmc
mov
xor
mov
inc
add
roll
push
or
popf
jo
sbb
movsl
sub
inc
add
dec
inc
sbb
cs
addr16
jp
inc
xor
cmpsb
jl
push
mov
pop
jae
adc
movsb
sbb
repz
dec
loopne
inc
mov
in
and
mov
icebp
push
jle
xchg
inc
jge
cmpb
sbb
sub
sarl
fadd
inc
lcall
lea
lods
ficoms
mov
rol
fs
or
pop
jb
jp
add
add
mov
lods
and
or
add
or
inc
hlt
lea
pushf
rolb
xor
adc
xor
add
mov
in
add
mov
sti
addr16
and
jp
and
xchg
push
cmc
test
push
add
push
push
das
shrl
rorl
mov
adc
add
test
pushf
ds
or
xor
sbb
fsub
and
pop
add
jge
cmp
sub
cmp
mov
inc
ret
mov
xlat
inc
mov
leave
and
mov
inc
push
dec
aaa
sub
pop
mov
pop
mov
adc
aaa
adc
cmpsb
xor
push
mov
ds
sahf
or
push
and
mov
imul
ljmp
insl
test
mov
dec
push
xor
inc
fiaddl
divl
loopne
mov
mov
jmp
mov
mov
xor
scas
mov
push
nop
test
sbb
and
xor
or
mov
testl
adc
mov
add
lods
hlt
adc
add
dec
adc
ds
sbb
inc
add
inc
add
add
add
push
ss
and
insb
test
push
orl
mov
inc
stos
add
jo
mov
mov
inc
xchg
imul
das
sarb
aam
adc
ja
push
ret
ret
mov
dec
xor
cmp
test
sub
movsl
in
repz
or
add
and
add
mov
add
mov
mov
jl
adc
inc
jns
push
cli
mov
or
arpl
cmpb
sbb
shrb
dec
sbb
mov
dec
adc
mov
inc
xchg
ds
or
fmuls
loope
out
xor
or
cmp
push
push
sbb
push
ljmp
dec
mov
add
rolb
cltd
add
sub
inc
jb
dec
lcall
cmp
cwtl
mov
inc
mov
add
ror
pusha
and
sub
xchg
pop
mov
mov
and
adc
mov
sbb
xchg
and
lods
pop
xchg
mov
cli
inc
or
shlb
cli
stc
jb
sbb
add
gs
lock
cmp
jae
test
into
enter
mov
inc
loope
pop
or
cmp
sub
push
or
sbb
nop
xchg
cmp
mov
push
pop
cmp
pop
add
sahf
dec
push
xor
cmp
push
xor
cmp
hlt
outsb
add
das
sub
incl
or
or
pop
add
aad
in
xchg
nop
ds
mov
pop
mov
add
ret
mov
test
std
jmp
jle
jl
push
pop
xchg
or
movb
rorl
xchg
cmpsl
or
mov
test
or
fbstp
aad
dec
add
xor
mov
jle
out
inc
aaa
add
inc
or
mov
dec
or
or
js
aad
push
and
add
ds
push
sbb
jecxz
nop
and
nop
sbb
mov
insl
dec
sub
xor
dec
add
cs
jo
flds
fisttpl
pop
xor
push
scas
movsb
xchg
mov
out
and
ret
jno
cmp
loope
sbb
shll
ss
push
mov
jmp
cmp
fwait
mov
sub
xchg
xor
add
fwait
and
loope
sub
test
sub
jbe
sub
inc
mov
or
inc
sub
xchg
mov
iret
pop
loope
popa
push
push
dec
or
mov
ss
and
jno
clc
pop
daa
stc
ffree
mov
push
mov
outsb
pop
or
dec
or
mov
mov
das
mov
adc
out
jecxz
push
adc
push
andps
cmp
and
push
adc
adc
imul
data16
add
adc
xchg
cs
lcall
push
ss
add
or
cmc
sub
imul
iret
lods
jo
sub
mov
ret
lods
add
sbb
or
push
leave
shll
sub
ret
lea
je
repz
ret
mov
mov
inc
hlt
adc
lds
into
sub
add
pop
push
sub
dec
sub
mov
sbb
sub
add
fs
mov
jbe
add
cld
fldl
mov
adc
mov
jle
xchg
mov
imul
xor
loope
ja
sub
and
testl
in
push
cmp
mov
add
sub
mov
add
push
mov
movb
add
adc
and
pop
adc
pop
mov
push
jmp
std
jnp
nop
inc
pop
test
push
adc
mov
adc
push
pop
and
shrl
mov
push
sub
sub
sbb
xchg
aam
push
mov
adc
mov
mov
mov
jmp
inc
ljmp
rclb
aad
sub
fiadds
add
dec
cmp
and
sub
jg
cltd
sub
mov
dec
adc
sub
cmp
es
and
ret
lahf
dec
inc
daa
xchg
and
lahf
inc
popa
sbbb
mov
lcall
xor
push
sbb
or
push
push
nop
lret
adc
add
or
xchg
and
and
add
add
xor
inc
sub
xor
push
nop
lret
or
xor
or
xchg
add
dec
add
xchg
xor
pushf
insb
push
test
add
lea
popf
and
mov
rorl
les
and
adc
int3
adc
test
aam
mov
pop
add
dec
mov
or
mov
mov
fsubl
dec
adc
sub
sub
movl
sbb
sahf
in
jo
cli
aas
popa
or
cmp
cmp
mov
mov
sub
and
add
fnop
push
out
pop
inc
adc
adc
pop
ret
ljmp
pusha
lea
jecxz
sbb
add
pop
mov
mov
dec
jae
xor
pop
shlb
xor
push
int3
adc
enter
inc
dec
arpl
or
sbb
mov
cmp
loopne
and
inc
fs
and
or
or
inc
or
rorb
and
xor
push
and
add
or
sbb
adc
rorb
and
or
mov
inc
mov
sub
adc
addl
pop
jb
scas
cld
add
add
or
and
and
movsl
test
pop
faddl
mov
test
add
sbb
jmp
add
sbb
xor
ret
fisubl
pop
and
jne
orl
enter
stos
sub
popa
pusha
pushf
cmc
mov
js
xchg
int
and
adc
cmp
movsl
xchg
adc
pushf
inc
sbb
dec
pcmpeqw
push
cmp
jb
cs
movsb
cmc
loop
sub
repnz
and
shll
xor
stc
push
push
cmpsl
add
pop
mov
shll
add
dec
fs
dec
mov
jns
stc
mov
jbe
sub
fsubrl
in
cltd
xor
loope
inc
mov
inc
std
sub
jecxz
sub
imul
shrl
ret
and
in
xor
popl
mov
jo
jmp
popf
xchg
sub
adc
xor
pop
pop
xchg
stos
mov
test
pop
adc
add
inc
or
sbb
test
aaa
and
push
cmp
dec
pop
mov
push
in
adc
dec
push
loop
mov
push
dec
arpl
inc
sbb
push
sahf
mov
push
or
mov
mov
sub
add
xor
jne
loopne
xchg
inc
sub
jmp
addr16
mov
jne
leave
push
push
test
in
aam
and
imulb
or
xchg
cld
sbb
in
xor
push
hlt
sub
lock
adc
insb
popa
negl
xchg
outsb
negb
cmp
xor
add
adc
inc
push
cmp
sbb
adc
and
sub
sbb
or
mov
test
mov
sahf
mov
lds
push
or
dec
and
lahf
pop
repz
push
pop
dec
hlt
push
push
mov
nop
and
cs
mov
outsb
lds
arpl
cmc
je
pushf
into
es
mov
sbb
dec
add
fs
mov
mov
mov
add
rcl
sub
aaa
orl
adc
mov
adc
lret
insb
and
pop
xor
scas
mov
loope
cmp
stos
in
es
sub
stc
clc
add
test
mov
or
jns
and
movsl
pop
in
out
and
mov
cmpsl
or
push
nop
mov
sub
mov
inc
or
push
movl
popa
scas
fucomp
fs
mov
cmp
cmpsl
inc
push
ljmp
sbb
xor
mulb
sbb
outsb
dec
sahf
fsubl
add
pop
test
jg
pop
xor
adc
orl
jge
add
add
adc
mov
adc
inc
sti
push
inc
fadds
mov
sahf
sub
xchg
fcoml
cmp
adc
adc
cmp
es
push
dec
sub
add
lods
call
adc
push
loopne
in
loop
jg
mov
xchg
dec
mov
out
dec
in
push
inc
cld
push
notl
sub
js
or
imul
mov
mov
cmp
lea
mov
dec
mov
cmp
or
sub
xor
cltd
mov
int3
inc
sarb
ret
inc
movsl
xor
dec
mov
pop
call
lds
nop
lret
cmpl
push
jg
call
inc
rcrb
sub
xchg
rorl
loopne
fadds
mov
ret
loope
out
pop
popa
mov
lea
outsb
add
sbbb
cmpb
push
mov
sbb
std
adc
lcall
loopne
pusha
insl
jnp
xor
lea
or
adc
frstor
xchg
out
adc
lahf
xchg
dec
loop
orl
pop
in
sub
inc
test
rcrl
mov
cmc
movsb
repz
jmp
inc
jg
pop
dec
xchg
jge
cmp
adc
jae
push
and
sti
jmp
mov
push
adcb
dec
sbb
cmp
jno
fmuls
adc
xor
lock
push
ss
or
popa
push
dec
inc
stos
test
jb
sbb
test
mov
push
xor
or
pop
adc
sub
or
sub
xchg
and
cmp
dec
push
out
add
lret
sbb
mov
cmp
ret
in
jp
adc
pop
mov
fs
xchg
rorl
popf
mull
shl
sbb
or
dec
or
mov
aad
adc
lds
jb
orl
xlat
test
inc
cmp
add
movmskps
xchg
stos
mov
sub
xchg
lret
and
and
enter
fimuls
cmp
sub
dec
cs
dec
adc
xchg
sbb
cs
and
push
mov
rolb
test
xor
fs
push
lcall
or
adc
sbb
cmp
sub
cmp
movsl
adc
ficomps
xor
mov
mov
or
mov
js
add
je
into
vpunpcklqdq
cld
jo
xorl
push
sarb
sbb
imul
in
jo
aas
fs
sbb
subb
js
mov
dec
push
sbb
andb
push
popa
xchg
hlt
stc
dec
cmp
das
inc
data16
faddl
mov
jle
int
clc
push
inc
push
jno
inc
pop
cmp
outsl
jbe
les
add
xor
cmp
mov
mov
int
pop
add
cltd
inc
pop
sbb
xor
push
or
shll
or
jne
in
pop
dec
xorl
ss
xor
cmp
sub
sbb
push
mov
inc
push
addr16
and
and
out
adc
ss
push
cmp
cmpsb
add
inc
imul
cmp
lods
sub
adc
push
sbb
es
or
push
pop
push
inc
cs
push
stc
filds
pusha
jne
xchg
dec
xchg
lret
push
dec
pop
shl
sbb
pusha
in
nop
dec
push
add
xchg
sbb
pusha
sti
add
fisubs
ds
mov
cltd
cltd
push
cmp
and
xchg
pop
icebp
add
cmp
mov
pop
mov
cmp
push
stos
mov
pop
lea
inc
cs
push
jo,pt
in
xchg
inc
push
ret
mov
addr16
icebp
dec
insb
push
and
dec
jns
mov
mov
push
dec
jmp
and
cmp
and
inc
add
xor
mov
sbb
inc
mov
sub
or
jno
out
fmuls
or
ljmp
sbb
scas
mov
lret
cmp
mov
cs
lock
aam
dec
add
xorl
dec
cmp
add
mov
adc
mov
dec
lods
xchg
jno
adc
or
sti
add
clc
jl
mov
mov
xchg
xchg
mov
popf
test
movsb
testb
adcl
mov
sub
jno
pop
or
cmp
mov
xor
mov
push
pop
pop
add
add
dec
pop
and
add
push
push
mov
adc
ja
int
push
fldl
add
pop
sbb
and
fildll
test
lods
push
xchg
mov
jecxz
jne
jmp
dec
mov
xchg
call
sub
sbbl
insl
or
test
xlat
mov
test
nop
arpl
je
dec
jl
push
nop
testb
js
je
or
lock
loope
cmp
ljmp
sub
adc
cmp
pop
xor
sub
fwait
dec
lcall
and
enter
sub
push
or
mul
inc
inc
mov
push
cmp
xchg
lret
lea
xorl
call
cmp
adc
adc
inc
out
imul
xor
in
inc
adc
add
sbb
add
pop
aad
cwtl
adcl
movl
adc
adc
sub
mov
rorl
pop
dec
nop
add
add
clc
dec
out
add
aam
pop
sahf
jns
xor
push
sbb
mov
popf
je
cmp
mov
push
jp
sub
sub
sub
lahf
ss
jne
jg
add
xchg
adc
sbb
pop
dec
or
js
lock
adc
popf
aad
orb
add
sbb
cmp
xchg
cmp
and
mov
push
push
sbb
mov
cmp
data16
sub
cmc
imul
sub
inc
and
add
xor
rep
push
imul
push
dec
lcall
orb
adc
lock
loop
in
lods
and
sti
mov
lds
pop
das
pop
or
add
pop
or
mov
push
inc
dec
test
sbb
mov
cwtl
dec
lock
out
push
pop
dec
loop
andb
mov
and
mov
adc
inc
ret
add
lahf
sub
mov
jmp
add
sub
inc
or
incb
test
roll
add
cld
std
cmpsb
addb
push
imul
loope
addl
cli
cwtl
mov
scas
je
or
mov
cmp
dec
mov
faddl
pusha
pop
push
je
cmp
cmp
dec
jl
cli
and
cmp
adc
gs
call
push
clc
jecxz
xchg
lock
hlt
or
jmp
add
cmpsb
shrl
lods
fdivrl
adcl
mov
or
mov
sub
jae
imul
pop
loopne
fistl
test
push
test
push
sub
adc
adc
adc
xorl
mov
jb
xchg
and
mov
mov
push
adc
xor
int
push
sub
xor
sub
pop
je
add
incb
mov
dec
pop
es
xchg
fisttps
nop
lahf
push
clc
repnz
addl
add
inc
push
push
push
inc
sbbl
add
inc
rolb
add
int
rcrb
nop
sbb
dec
and
jae
loopne
cs
sub
sbb
sub
das
and
mov
fs
cmpl
inc
insb
add
nop
inc
inc
addl
sbb
jo
cli
int
add
nop
sbb
add
pop
and
or
adc
jl
xor
xor
inc
fs
and
mov
movb
nop
pop
cmp
pop
sbbl
xchg
sbb
jl
je
fs
sub
jl
cmp
dec
cs
adc
add
mov
outsl
sbb
cmp
adc
lods
lahf
dec
jle
mov
inc
rcll
jp
mov
mov
pop
jmp
inc
outsb
xchg
cmp
les
cmpsl
enter
pop
lret
jl
daa
jp
les
in
enter
and
je
lds
adc
lahf
mov
inc
jbe
aas
push
and
dec
add
inc
add
add
sub
inc
pop
pushf
push
ds
mov
pop
cmp
nop
mulb
sub
je
rclb
pop
push
and
fsubl
dec
imul
bound
adc
pushf
pop
xchg
pop
and
xor
adc
cmp
pop
je
iret
mov
inc
jmp
sbb
and
dec
lods
pop
cmp
repnz
add
mov
insl
xchg
in
mov
sub
dec
inc
shlb
pop
inc
pop
dec
test
fisubl
sub
fistpl
sti
or
add
push
ret
pop
add
push
insl
leave
pop
mov
jo
or
cmpsl
ficoml
arpl
aam
mov
lret
jae
loop
push
xor
lock
in
ret
das
add
jo
sbb
cmp
test
jb
hlt
add
pusha
push
ss
adc
adc
sub
mov
mov
fdivl
rorb
jo
inc
inc
ds
ficoms
insb
lcall
add
lock
ret
push
add
adc
adc
lret
push
xchg
adc
ret
inc
or
rcl
or
or
mull
shrl
std
fbld
push
dec
xchg
dec
add
decb
stos
sbb
mov
sub
or
test
gs
adc
inc
lock
bound
adc
add
repz
jecxz
xor
cmp
fs
cli
or
sub
adc
adc
jae
cwtl
add
test
adcb
or
dec
lods
add
leave
arpl
cmp
adc
mov
out
int3
cmp
mov
movsl
and
inc
xlat
push
pop
mov
cli
xor
lods
pop
aam
adc
pop
adc
add
scas
mov
imul
push
push
leave
les
sbb
fldt
shlb
adc
add
pop
movsb
cs
flds
push
sbb
push
and
sbb
push
push
pop
inc
dec
sub
fimull
push
inc
sub
push
push
out
lods
pop
pop
pusha
push
inc
push
jecxz
pop
cmp
push
inc
repz
and
push
pop
mov
clc
inc
mov
inc
push
or
adc
or
repnz
std
movzbl
adc
xchg
pusha
fistpl
adc
sub
arpl
mov
or
pop
push
push
mov
sub
push
add
or
adc
xchg
je
jbe
or
or
repz
mul
sub
sub
and
mov
std
lret
cli
or
push
push
sbb
xchg
ss
jmp
push
je
test
pop
and
adc
cmp
out
pop
mov
arpl
pop
jb
popa
shll
jo
mov
xor
pop
dec
jb
rolb
add
mov
and
mov
iret
or
into
sbb
lock
xor
fdivrs
inc
lcall
fwait
push
aaa
adc
sub
sbb
mov
jne
mov
xchg
cmp
mov
test
daa
sub
or
jne
adcb
xchg
cmp
push
ds
in
idiv
scas
push
add
aaa
stc
and
rcrl
pmaxub
mov
fsubrs
fs
loop
pop
push
mov
mov
out
jb
inc
mov
adc
je
scas
add
mov
mov
mov
imul
cmp
jae
or
pushf
push
nop
xlat
push
jns
lret
sbb
and
lock
aam
cmp
ret
cmp
rol
jg
rolb
sbb
shl
dec
cmp
xor
xor
and
adc
ja
push
movzwl
les
cs
add
push
dec
and
mov
movsl
movsb
xor
stos
inc
add
push
xor
push
movsl
jae
xchg
call
ds
dec
jnp
adc
jg
push
fs
bound
jnp
push
popa
push
dec
stos
jne
in
adc
or
or
dec
xlat
aam
sbb
push
in
push
xor
pop
adc
sbbb
sbb
jbe
inc
pushf
adc
cs
pop
inc
jne
add
pop
cmp
adc
in
int3
inc
inc
push
push
sbb
add
push
sbb
push
dec
push
push
add
outsl
pop
je
cwtl
adc
sub
adc
pop
inc
pop
call
ret
jbe
sbb
mov
jle
add
pusha
add
mov
jle
popf
aam
jecxz
mov
data16
push
xchg
push
in
or
mov
shrb
pop
adc
adc
lock
xor
jmp
cmp
jnp
pop
cmp
jne
sbb
adcl
leave
idivl
add
xor
movsb
out
lret
mov
mov
leave
dec
enter
push
push
and
xor
jmp
push
hlt
sub
fstps
add
mov
lea
rorl
mov
mov
cmp
daa
mov
push
data16
aad
sbb
jg
fmull
loope
ret
cmp
in
or
fcoml
sbb
add
adc
and
add
sbb
cmp
mov
insl
std
mov
push
sbb
sbb
xchg
aam
sarb
adcl
mov
mov
add
mov
add
adc
clc
pop
mov
mov
mov
fcmovb
mov
push
js
pop
xor
subps
xor
add
vmovdqu
mov
mov
dec
popa
push
pop
pop
adc
je
sub
sub
ret
xchg
mov
daa
loopne
leave
push
call
lret
and
aaa
push
add
fs
cmpsb
and
test
sub
add
cmp
jae
outsb
cmp
es
fisubs
aaa
lea
icebp
or
pop
gs
loop
jbe
sti
cwtl
jns
mov
negb
mov
add
or
jne
pop
rol
andl
push
inc
dec
mov
fwait
orb
add
mov
push
call
sarb
ret
gs
ss
add
aaa
jecxz
test
or
fsubs
adcb
inc
xchg
cmp
js
mov
inc
movsb
fs
aaa
int
in
or
test
adc
push
nop
add
adc
adc
insb
mov
jbe
lods
mov
jb
mov
or
insl
fnstcw
jp
cmc
inc
mov
push
lea
ljmp
cmp
es
jle
movsb
push
and
adc
stos
mov
dec
rcr
mov
call
dec
outsb
loopne
cmc
test
sbb
int3
out
jge
movzbl
mov
into
or
rorb
mov
xchg
pusha
mov
or
inc
stos
mov
repnz
push
in
adcb
aaa
scas
or
shr
test
test
cmp
je
sub
ds
adc
in
dec
int
andl
iret
push
mov
sub
push
mov
dec
xor
rcrb
sbb
aas
mov
cmp
jbe
jg
mov
jbe
sub
into
cmpsl
mov
out
shl
in
pop
pop
popf
insl
xor
jle
pop
mov
push
pop
xchg
shr
sbb
pop
push
scas
mov
lods
inc
mov
mov
lcall
inc
pop
sub
inc
push
ret
add
stos
pop
push
cmp
mov
mov
mov
subb
gs
jo
in
aas
xor
dec
sbb
or
stos
and
xor
mov
cmp
jle
push
stc
and
mov
xor
lcall
pop
aas
adc
jno
imul
test
xchg
inc
push
xchg
ret
aas
ja
sub
js
fistps
in
adc
xorb
mov
js
push
fildll
push
sub
movl
push
push
mov
test
inc
add
fiaddl
or
jne
ja
shlb
dec
xor
jg
test
sbb
xor
addb
ds
daa
rcrl
inc
inc
lea
jmp
je
jno
add
shll
add
xor
mov
mov
mov
jno
xor
hlt
sbb
inc
pop
lea
out
pop
add
xor
sbb
sub
inc
dec
sbb
call
popl
xor
cwtl
mov
push
cmp
or
and
xchg
add
sbb
xchg
mov
aam
rorb
test
xchg
aaa
and
and
fnstcw
bound
mov
push
pop
push
pop
inc
dec
ljmp
or
sub
test
dec
mov
fbld
xor
dec
or
or
inc
insl
or
js
sbb
xor
je
or
mov
aam
xchg
push
cmp
pusha
ret
rolb
pop
add
lds
or
sbb
andl
cltd
push
nop
sarb
mov
shlb
dec
mov
pop
mov
or
sbbl
pop
jo
adc
cmp
imul
inc
nop
fwait
mov
pop
add
test
xchg
or
xor
es
add
or
xchg
incb
cmp
jne
cmp
cmp
push
movsl
seto
pushf
xor
shlb
loopne
and
repz
or
add
sbb
mov
iret
in
sbb
fwait
sub
adc
jbe
jno
inc
inc
mov
jno
jnp
push
mov
xor
mov
sbb
es
mov
popa
gs
loope
add
and
aad
jb
rol
mov
inc
sbb
jns
jle
daa
inc
cltd
cmp
sbb
mov
xchg
es
sub
mov
dec
add
outsb
mov
mov
push
ret
jmp
inc
dec
aaa
mov
decl
xor
sbb
mov
lea
xchg
push
adcb
jecxz
or
cmp
jle
push
cmc
cmp
sbb
adc
add
movsl
or
or
pusha
cmp
leave
add
fs
insb
lahf
push
adc
inc
pop
sub
cmp
cmpl
lret
cmpsl
push
shld
jae
or
dec
sahf
mov
notl
mov
add
cs
ljmp
cmp
push
enter
stos
push
mov
cmp
pop
ret
or
dec
and
sarb
sti
dec
aas
xchg
out
outsl
dec
add
ret
adc
stos
pop
cmp
in
mov
cmp
inc
imul
sub
xor
and
punpcklbw
push
inc
cmpb
cmp
or
pop
mov
sbb
cmp
pop
test
repnz
pop
fiadds
adc
js
mov
and
cmc
push
mov
add
scas
adc
in
sbb
adc
es
jo
repnz
aad
and
or
cmp
mov
dec
pushf
push
cmp
inc
add
shrb
sub
je
push
jne
lea
repz
shll
rclb
adc
jmp
das
lea
sbb
inc
mov
add
test
push
mov
mov
pop
mov
mov
cmpl
mov
xchg
pop
hlt
mov
pop
cmp
call
ljmp
mov
dec
les
adc
loope
pop
vorpd
js
mov
mov
pop
stos
sub
fcompp
pop
and
popa
adc
data16
mov
sbbb
push
add
and
pop
je
mov
in
pushf
and
cmp
int3
jno
daa
push
mov
push
add
sub
cmp
xchg
mov
add
addl
js
push
fisubl
js
cmp
fneni(8087
mov
dec
fs
jo
pop
dec
cwtl
cmpsl
mov
jecxz
stc
cli
add
leave
decl
inc
push
sub
lcall
cmp
inc
test
adc
sbb
jg
mov
push
sub
push
aaa
push
push
dec
or
lods
sysret
push
inc
es
jo
int3
ret
mov
pop
fld1
xchg
xor
roll
cwtl
test
popa
jno
js
mov
sbb
imul
push
mov
mov
test
jne
inc
adc
lret
dec
shll
and
add
xor
sub
dec
push
dec
push
jl
pop
adc
bound
push
cld
pop
hlt
jo
dec
sahf
aaa
stos
push
je
and
popa
pusha
jo
ret
or
inc
or
pop
and
shll
ror
mov
push
cs
lahf
add
mov
popf
hlt
push
sbb
xor
mov
sbb
mov
enter
add
orb
lock
or
sub
rorb
xor
and
mov
lock
or
jo
xchg
subl
data16
pop
xchg
lods
cmpsl
add
sbbl
or
jl
mov
imul
fs
push
mov
loope
push
repz
shll
xor
rcll
dec
movsb
nop
push
pop
inc
out
in
push
push
test
dec
sbb
imul
bound
bound
and
gs
and
pusha
push
xchg
sbb
and
push
pop
and
jb
dec
and
mov
push
and
push
loope
mov
and
dec
adc
add
push
pop
movl
add
adc
sbb
and
xchg
inc
dec
push
inc
or
adc
testl
dec
push
fldl
bound
sarl
pop
jle
addb
pop
cmp
or
adc
lock
and
mov
and
daa
inc
inc
push
xor
stos
and
jge
mov
mov
jl
jne
fbstp
lea
and
or
adc
mov
and
hlt
lods
xchg
and
fldl
jp
cmpsl
in
lods
xor
sub
mov
and
lret
cli
dec
push
inc
ljmpw
or
outsb
subl
sub
sub
popa
and
pop
data16
adc
mov
popf
push
jns
ret
jp
push
push
hlt
push
sub
jb
and
and
xor
push
push
sub
mov
int3
adc
inc
subb
sbb
insb
scas
cmp
sbb
pusha
push
pop
sub
inc
aad
mov
push
adc
add
push
stos
xchg
lea
adc
add
xchg
pop
lahf
mov
inc
int3
lods
outsl
mov
push
lods
jbe
in
fdivrl
xor
dec
roll
lods
or
popa
les
and
fimull
popl
add
inc
push
enter
push
inc
jno
push
add
mov
mov
pushf
xchg
in
movsb
mov
dec
and
sub
adc
lods
xor
push
xchg
js
sbb
add
sbb
inc
xor
dec
test
imul
loopne
add
and
add
loop
pushf
adc
jbe
fiaddl
call
sbb
mov
sub
xor
push
lea
push
aam
lea
add
sub
add
jnp
filds
lods
fs
clc
pushf
and
pop
push
mov
and
fwait
dec
test
andl
mov
popa
inc
and
xlat
cs
mov
lahf
or
push
rclb
add
add
popa
test
mov
pop
sbb
cmc
data16
popa
or
mov
fwait
sbb
push
fnstcw
inc
push
clc
xchg
or
or
push
and
add
and
js
add
mov
pop
iret
sub
sub
scas
adc
sub
dec
sahf
add
sub
push
fisubl
push
inc
jmp
sti
mov
and
pop
sub
call
loop
and
outsb
mov
mov
test
mov
and
mov
cmpsb
jne
add
orl
or
inc
scas
nop
push
in
push
adc
and
mov
test
pop
rcll
sub
lock
xor
adc
and
push
stos
in
pusha
add
fldl2t
rcl
inc
js
push
xor
fs
and
adc
and
adc
cltd
dec
push
ja
push
invd
sbb
pop
push
mov
mov
sbb
call
imul
mov
mov
hlt
hlt
aam
jbe
out
inc
add
xchg
sbb
or
ja
aaa
lods
dec
dec
addr16
add
push
sbb
sub
imul
inc
push
movsb
movsb
xor
add
sbb
jg
lret
push
push
inc
xchg
push
sbb
lret
xor
dec
pop
sbb
rolb
leave
aad
nop
mov
inc
dec
cmp
lea
cmp
cmp
repz
jb
sub
pop
push
cmp
pop
add
lock
mov
inc
and
cs
bound
add
test
cld
lea
adc
mov
xchg
sbb
test
sub
enter
inc
insb
cs
mov
or
xchg
adc
add
or
jns
lods
nop
sub
je
fwait
adc
daa
test
es
push
leave
mov
and
xchg
xor
inc
fs
mov
add
jo
add
test
mov
popf
pop
add
jo
pop
adc
sub
push
mov
inc
insb
push
in
dec
xchg
mov
lea
or
cli
mov
imul
dec
sub
pop
sarb
push
ret
add
mov
mov
push
push
mov
xor
pop
shlb
xchg
lea
jns
adc
test
jmp
cmp
in
stc
fistpll
rclb
cmp
push
das
add
mov
jb
mov
add
push
add
push
inc
pop
push
pop
pop
orb
add
pop
jno
clc
popf
xchg
sbb
dec
lret
adc
call
jl
mov
and
aam
inc
shlb
and
mov
inc
int3
fcoml
mov
cmpl
xor
ffree
mov
pushf
and
dec
out
aam
pusha
movsb
xchg
cmpsl
je
aam
lea
adc
cmc
push
incl
and
pop
in
add
insl
imul
insl
aad
jbe
test
push
dec
and
push
inc
xor
xor
adc
jne
xor
jmp
pop
xchg
cmp
je
movl
push
cmp
cmpl
add
jbe
addb
cmp
xor
push
or
dec
xchg
cmp
cmpsl
test
sbb
adc
or
iret
push
loopne
mov
add
push
or
out
pop
sarl
or
xchg
fidivrs
push
cmpsl
mov
mov
clc
inc
mov
push
dec
dec
int
sbb
adc
test
xchg
stc
pushf
std
sub
jb
insb
mov
gs
jb
xor
jmp
push
and
dec
or
sahf
stos
in
or
mov
sub
sub
ja
mov
add
or
adc
dec
adc
shlb
jl
adc
inc
rcrl
popf
sub
adc
dec
jns
jmp
push
out
jb
xchg
test
popa
and
iret
adc
mov
inc
push
dec
xlat
in
push
je
aas
or
cli
cwtl
xchg
je
sbb
int3
call
sbb
push
idivb
dec
dec
push
in
sbb
nop
fistpl
pop
cmp
push
push
cli
mov
push
in
rcrb
cmp
push
lcall
mov
out
dec
push
and
and
mov
add
es
sahf
daa
fsubrl
enter
add
test
or
inc
adc
sub
pop
jne
shrl
cmp
add
pop
xor
mov
cmp
pusha
pop
leave
inc
rclb
jb
cmp
mov
or
fs
push
dec
xor
jbe
movsb
cwtl
dec
lcall
aam
dec
add
shlb
loope
adc
insb
sbb
dec
xchg
jne
pop
mov
sahf
and
and
xor
in
cmpsb
xchg
sarb
add
ret
lock
mov
or
jl
mov
sarb
leave
and
sbb
mov
push
add
xor
pop
dec
jmp
sbb
sub
pop
mov
cmpsl
push
movsb
dec
mov
push
dec
push
bound
push
lods
dec
cmp
add
and
add
leave
push
popa
cmp
ljmp
mov
lds
mov
cli
push
lds
rcrb
pop
repz
ret
cmp
push
les
jmp
mov
movsl
xor
xor
stos
pop
adc
pop
je
das
cmp
sub
adc
outsl
or
mov
and
mov
add
dec
xchg
aas
add
inc
mov
fisubs
inc
clc
cmp
and
dec
shl
repnz
and
cld
inc
fcomps
leave
and
or
sahf
jb
movsb
inc
mov
sbb
adc
dec
lds
arpl
adc
inc
sbb
dec
imul
cli
mov
mov
adc
and
push
lock
cli
sub
pop
jo
mov
dec
hlt
stos
push
js
int
sbb
xchg
inc
loopne
jns
and
shlb
cltd
inc
fadds
sahf
or
add
inc
lods
inc
adc
ficoml
scas
xchg
stos
mov
add
cmp
in
add
sbb
test
adc
push
scas
cli
jne
sbb
popf
sbb
sti
jo
xor
mov
movsl
mov
adc
test
add
mov
fimull
add
sbb
push
rolb
xor
push
pop
xor
enter
mov
or
sbb
insb
cltd
xor
push
cmp
jne
add
movsl
mov
push
push
imull
insb
loope
adc
pop
jl
add
xor
jns
push
sub
loop
adc
pop
addb
mov
dec
mull
ret
icebp
cmp
jns
pusha
adc
aaa
mov
jge
sub
ret
shll
imul
sbbl
subl
add
jo,pn
cmp
xlat
mov
adc
cmp
test
inc
adc
faddl
or
cmp
mov
add
icebp
jnp
push
push
mov
fwait
or
xor
test
add
das
orps
fs
push
sub
mov
aam
sbb
es
mov
aaa
and
pop
dec
pop
push
or
cmp
pop
add
xor
and
xor
inc
les
add
shr
cwtl
xor
and
push
dec
in
xchg
push
mov
lods
add
in
pop
sub
pop
mov
xchg
add
lock
pop
mov
push
lcall
insb
pop
dec
repz
enter
dec
xchg
sbb
or
and
push
enter
dec
aam
add
dec
dec
dec
and
and
call
rorb
inc
inc
jo
add
jnp
or
xor
or
cld
nop
dec
aam
or
pop
push
cs
inc
lcall
pop
dec
push
cltd
inc
add
xorb
mov
push
sbb
fldl
pop
lods
stc
xor
mov
mov
push
pop
mov
sbb
enter
sbb
adc
jne
loopne
inc
lea
mov
inc
inc
push
sti
cmp
mov
sub
cmp
or
sub
jle
sub
inc
jb
cmp
mov
sub
and
add
lods
cld
add
les
push
mov
cmp
loopne
insl
rorl
fsub
sub
bound
aaa
sbb
sbb
cmp
jb
sbb
push
xchg
add
sbb
int3
mov
add
pop
mov
sti
loopne
or
shrl
pop
aaa
xor
xor
push
add
lea
xchg
cmp
repnz
in
fadds
pop
mov
pop
pop
mov
mov
mov
sub
das
leave
cmpsb
jbe
cmp
adc
fimuls
mov
push
ss
pop
out
fistpll
sub
scas
js
pop
imul
sub
sub
lret
je
inc
and
ror
ja
lea
sub
arpl
push
push
xchg
adc
in
inc
cltd
push
cmp
push
test
pop
push
imul
pop
jo
sti
js
adc
inc
mov
repnz
push
popa
int
add
and
sbb
nop
out
xor
push
lahf
and
les
mov
push
dec
fisttpl
add
jo
movsl
jl
rorb
adc
push
and
andb
sahf
or
pop
dec
sahf
stos
jbe
dec
push
xor
stos
in
add
in
dec
add
xchg
sbb
aam
aam
mov
leave
xchg
adc
int3
mov
cmp
push
push
adc
sbb
bound
add
or
fsubrs
adc
orl
push
push
dec
lods
sbb
mov
or
mov
dec
aam
insl
push
cmp
jae
in
xor
lcall
movsb
sbb
cmp
jns
mov
pop
cmp
jae
mov
push
pop
cmp
mov
dec
sbb
aas
insl
fs
push
leave
and
jmp
cltd
pusha
sbb
addb
xchg
test
or
enter
jge
sti
test
xchg
push
or
or
lcall
add
dec
add
lea
sbb
mov
or
in
pop
adc
jmp
push
adc
dec
pop
cmp
mov
jo
push
sub
inc
je
push
lea
add
or
push
or
or
pop
lods
mov
push
cmp
aas
sub
sbb
arpl
push
add
inc
or
jne
xor
and
or
pusha
loope
ret
jmp
fcmovbe
test
cs
mov
sub
add
inc
shll
xchg
dec
test
imul
lods
mov
cmp
fisttpll
sbb
fimuls
jmp
cmp
pusha
mov
ret
dec
sub
iret
sbb
icebp
inc
add
fiaddl
adc
adc
xchg
je
push
out
adc
lea
test
pop
dec
cld
push
pop
mov
dec
insb
push
xchg
cmp
mov
xchg
push
inc
dec
jo
xchg
cmpsl
push
decl
xchg
into
scas
or
push
test
roll
and
push
dec
inc
pop
mov
fists
aaa
pop
sub
orl
pop
test
dec
xchg
xchg
and
test
dec
and
and
add
sub
outsb
or
rcll
dec
ljmp
ja
dec
jge
push
lock
and
imul
shlb
das
xchg
push
mov
dec
sub
push
mov
ret
cwtl
cmp
ds
or
je
adc
in
mov
jb
xchg
scas
cltd
inc
add
pop
and
cmp
orl
mov
jecxz
mov
adc
cmpsl
mov
movsl
push
inc
sub
push
lds
and
jnp
xchg
sahf
mov
sbb
adc
add
push
xchg
add
push
fildll
dec
push
and
sub
or
xchg
add
mov
loope
nop
inc
test
aas
cs
test
jae
and
or
xchg
or
pop
imul
mov
and
icebp
decl
add
das
mov
xchg
xchg
push
fs
adc
cmp
jl
and
mov
lock
pop
pushl
xchg
fbstp
cmp
adc
fs
or
subb
jbe
mov
mov
adc
dec
dec
cmp
add
sarb
aaa
adc
orb
push
pop
fmulp
push
lea
add
add
movb
xor
fmull
subb
inc
mov
dec
ds
mov
sti
add
sub
cmpsl
or
sub
cmp
jb
mov
cmpsb
ljmp
ss
inc
movsb
jg
or
loopne
adc
stos
pop
out
pop
dec
xchg
xor
fdivl
ja
or
push
mov
fadds
movb
orb
loopne
adc
lock
add
movsl
xchg
xlat
pop
int3
popa
add
test
lcall
das
dec
jnp
popa
test
rorb
shll
test
and
dec
fwait
adc
call
imul
pusha
push
pusha
flds
jo
add
ds
dec
push
sub
sbb
pop
pop
and
mov
sbb
sub
adc
adc
or
sbb
lods
popf
lods
add
sub
or
sub
add
pop
sub
push
xchg
push
or
sub
mov
or
or
sub
pop
lods
push
pop
mov
cmp
pop
or
inc
insb
cmp
jecxz
fwait
xchg
stc
mov
test
mov
or
add
cmp
ds
push
lods
cmp
xlat
dec
repz
cs
sbb
pop
lret
insb
mov
push
or
add
push
ljmp
xchg
xchg
pop
and
add
dec
and
push
out
cmp
cmp
jo
nop
pop
shlb
gs
pop
insb
inc
add
lea
jno
lods
jp
lods
adc
lds
add
out
lcall
inc
lods
cld
adc
mov
lret
mov
jbe
xchg
fcmovnb
sub
mov
sub
or
inc
push
dec
sub
mov
sub
jns
dec
in
fiaddl
push
mov
pop
jnp
lods
insl
add
mov
cmp
dec
mov
test
cmp
and
sbb
in
sbb
popa
nop
icebp
arpl
dec
enter
imul
mov
enter
test
test
les
mov
inc
cmp
sub
push
jp
adc
test
lods
mov
addl
les
test
inc
mov
add
pop
inc
out
insb
inc
pop
mov
dec
jp
andl
adc
popf
xor
pop
es
data16
fildl
outsb
and
sbb
xor
popa
or
xchg
scas
pop
xor
inc
out
js
jp
add
out
add
shll
loopne
sub
inc
push
insb
lods
js
xlat
push
push
out
push
push
fwait
ret
xorl
aas
add
bound
insb
daa
sbb
ret
jne
push
stos
dec
das
jne
lret
ss
push
cmpl
hlt
mov
sarl
call
je
cmp
je
cmp
je
cmp
je
push
je
mov
jnp
jle
mov
loopne,pn
mov
adc
sbb
pop
rclb
mov
add
pop
add
push
ret
sti
fistpl
pop
mov
fdivrs
inc
hlt
cli
or
loope
in
push
mov
jo
fs
mov
push
scas
sub
rclb
inc
ret
or
je
shl
xor
adc
ret
add
stc
pop
aad
lds
test
mov
aam
and
push
xor
adc
add
ljmp
icebp
clc
add
rorb
into
xchg
sbb
nop
adc
cmp
pop
pop
mov
ljmp
pusha
nop
enter
mov
ret
test
nop
push
push
inc
inc
loopne
jecxz
cmpsl
pop
andl
mov
mov
dec
xor
jns
pop
aas
add
add
lods
or
adc
adc
jmp
pop
into
clc
push
orl
ret
mov
ret
test
and
xor
cli
mov
jns
pop
bound
adc
adc
mov
mov
lret
ret
iret
jne
daa
push
mov
xchg
test
fbld
push
mov
sub
movsb
adc
test
push
fnstcw
std
int
sbb
push
dec
cs
movsb
call
jecxz
sbb
and
test
adc
push
push
fildl
lods
push
in
adc
pop
or
inc
lods
lock
dec
rcrl
mov
insb
mov
les
and
dec
subl
mov
inc
js
pop
mov
data16
and
mov
and
mov
push
aaa
jns
jbe
push
push
cmpsb
mov
and
int3
mov
sub
pop
clc
hlt
push
inc
cmp
sti
inc
addb
cmp
push
test
in
fildl
xchg
fsubl
or
int3
mov
and
xchg
hlt
add
je
add
scas
mov
jl
sbb
out
insl
mov
or
pop
adc
jge
test
push
ds
xchg
lea
mov
es
add
or
loopne
aaa
cmp
outsl
lahf
adc
sahf
add
in
pop
xor
dec
sar
and
mov
fsts
xchg
js
xor
lds
inc
adc
mov
adc
mov
nop
mov
aam
pop
xchg
push
mov
xchg
jbe
inc
fcoms
bnd
and
push
outsl
shrl
je
mov
test
xor
dec
sub
sub
out
int
sub
bound
mov
out
imul
mov
pop
lea
xchg
jl
add
jae
test
jge
jge
dec
jmp
xlat
inc
inc
loopne
std
or
push
out
mov
aaa
imul
cwtl
shlb
mulb
stos
sbb
imul
fcom
pop
sbb
fmuls
in
sti
je
xchg
xchg
mov
add
sub
pop
or
add
fcomp
jle
inc
and
push
sarb
mov
add
pop
das
adc
hlt
pop
test
push
pop
mov
adc
inc
lcall
inc
inc
mov
add
mov
cmp
sbb
lods
faddl
cmp
push
and
int
mov
add
lret
stos
lret
jg
outsb
pusha
jp
inc
jge
jne
or
cmp
je
lahf
movsb
fcomps
sar
lods
mov
ret
jne
movnti
arpl
data16
shrb
cmp
mov
and
adc
aam
fsubrl
dec
cmp
push
sbb
inc
mov
imul
mov
jle
or
push
cmp
mov
roll
movsb
xorb
stos
xor
mov
loopne
dec
rorl
dec
mov
pop
sub
mov
pop
push
aam
insb
in
sbb
adc
push
and
js
xchg
adc
cmc
movl
push
xor
test
decb
or
pusha
sub
add
sbb
arpl
cmp
sbb
mov
jecxz
sub
and
ds
popa
fcompl
ret
lret
push
sub
ljmp
cmp
push
xchg
sbb
xchg
fbstp
sub
cmp
sbb
cmpl
add
je
fadds
aam
mov
and
fs
mov
sub
and
add
lcall
add
or
dec
arpl
jl
cmpsb
cmpb
and
sub
cld
ds
scas
or
ret
sbb
sar
sbb
fcoms
stc
push
outsb
add
dec
cmpsl
insb
pushf
in
repnz
mov
dec
pop
cmp
push
mov
mov
jge
popa
sub
and
out
insl
je
pop
lds
jne
cmp
jne
int3
jnp
push
add
mov
pop
loope
lretw
pop
xchg
aaa
inc
push
cs
push
lock
or
mov
mov
jmp
aad
and
push
out
adc
sbbb
cmp
ljmp
sbb
add
and
mov
mov
je
incb
les
lock
gs
xor
mov
inc
xchg
sti
pop
push
and
pop
cs
mov
adc
addr16
gs
js
inc
inc
js
sub
and
imul
mov
mov
dec
or
and
xor
xchg
push
push
lods
cmp
xor
pop
mov
sub
push
adc
sbb
mov
fwait
push
inc
or
test
xchg
out
pop
and
push
adc
mov
lods
das
jo
in
xchg
jle
or
xor
dec
push
sarb
int
pop
fs
lea
test
cmpl
xchg
jg
mov
sub
push
sub
push
push
push
mov
std
sbb
and
push
inc
add
int3
dec
sbb
inc
adc
dec
sbb
add
push
or
pop
sbb
cmp
lea
cmp
inc
adc
test
shr
dec
push
fnstenv
push
cmp
ja
divl
jmp
cmp
inc
add
inc
sbb
out
pop
shrb
movsb
push
jl
sbb
jb
hlt
aaa
or
or
inc
dec
add
add
hlt
adc
xor
mov
adc
or
dec
cmp
mov
call
fadds
fistps
sub
add
xchg
xchg
push
cmp
push
push
adc
pop
addr16
or
push
rolb
js
add
stos
jb
cmp
dec
rcrb
cmp
lahf
jmp
inc
jne
sti
mov
sub
clc
jo
and
jnp
sbb
push
inc
adc
outsb
rol
insb
ret
mov
jbe
pop
iret
cmp
or
and
push
xchg
cmpsl
fstl
adc
cmp
mov
mov
mov
cmp
jne
insb
adc
je
or
add
test
push
sub
adc
cmp
shrb
sbb
mov
aad
or
test
mov
push
idivb
inc
pushf
adc
aaa
jo
pop
or
sub
pop
sub
das
dec
cs
test
dec
push
sub
add
push
icebp
mov
jae
sbb
outsl
ret
xorl
dec
push
enter
imul
push
or
mov
cmpl
add
push
pop
addl
sub
push
rorb
add
sbb
push
adc
jecxz
cmp
adc
aas
sahf
mov
stos
rolb
push
pop
movsb
cmpsl
insl
or
sbb
jcxz
ss
mov
divl
fimuls
mov
or
or
aam
mov
xchg
push
adc
lock
xor
out
adc
adc
jle
sbb
dec
sub
or
mov
mov
les
mov
cli
add
and
sub
rcrb
dec
xchg
mov
mov
xor
in
fs
lret
mov
sbb
or
or
cld
aas
test
jns
inc
inc
xor
inc
mov
mov
push
xor
jle
popa
fsts
pop
xor
xchg
mov
leave
and
mov
stos
lock
push
adc
mov
leave
push
gs
jl
aam
or
into
jle
sbb
or
cmp
and
jge
shll
test
push
push
pop
jne
sbb
imul
inc
xor
aad
ljmp
push
jb
mov
or
dec
js
mov
out
cmp
fsubrp
aaa
lret
outsl
insl
sbb
hlt
xchg
sbb
push
in
cmp
stc
sub
mov
es
je
testl
xchg
divl
loope
dec
addl
addl
jl
push
xor
adcb
cmp
adc
or
test
xor
xor
cmpsb
inc
or
lds
cmpsb
xchg
add
icebp
sbb
mov
sbb
sbb
lret
cmp
sbb
or
xor
cmp
dec
sub
xchg
clc
add
add
aam
mov
sbb
call
xor
lret
aam
adc
push
mov
dec
lcall
sub
mov
outsb
popa
sbb
ja
scas
mov
inc
dec
addl
lcall
inc
mov
sbb
add
mov
iret
lahf
out
jo
test
or
jg
add
sub
shll
shr
push
dec
maskmovq
imull
pop
dec
pop
cmpl
push
setl
movzbl
push
idivl
xchg
lods
jbe
add
and
push
faddp
inc
jb
loope
shll
push
pop
mov
inc
push
push
xchg
lds
and
rcll
push
add
add
dec
push
fildl
xchg
jge
push
cmovbe
mov
inc
mov
jmp
push
imul
mov
jg
or
add
or
xor
adc
add
in
in
push
fs
test
arpl
cmp
xor
sbb
pop
sbb
inc
and
or
adc
push
adc
mov
sbb
cmp
xor
push
inc
pop
insb
lcall
jmp
add
test
and
jb
pop
pop
mov
inc
mov
push
push
push
jecxz
nop
dec
pop
jmp
and
lea
xchg
mov
addb
bound
mov
movl
mov
repz
dec
push
mov
xor
cmpsb
jne
sub
adc
and
insb
xchg
xor
inc
push
pushf
cltd
xor
xchg
cmp
push
xor
cmc
xor
cmp
lock
rorl
mov
loop
inc
insb
mov
das
or
lds
mov
lds
es
leave
and
cmp
inc
mov
dec
adc
das
push
lea
xor
sub
pop
sbb
push
stos
dec
jae
dec
xor
stos
js
ret
inc
add
mov
aam
push
mov
adc
mov
push
push
js
xchg
aad
test
push
clc
adc
mov
pop
ficomps
dec
xor
add
or
and
mov
pusha
fcmovne
fwait
add
xchg
mov
inc
fadds
test
jno
push
les
fisubrl
fistpll
and
pop
leave
xchg
jp
mov
mov
xchg
mov
lds
aad
nop
decb
mov
push
sbb
jbe
or
ficompl
sbb
add
or
mov
subb
mov
adc
stos
jle
add
xor
out
clc
mov
pushl
bound
sar
test
jo
mov
cmp
lcall
or
aad
inc
jo
out
test
mov
sahf
add
mov
shrl
btr
or
adc
xor
out
sti
cmp
fsubrl
ret
push
dec
andb
lret
int3
or
jnp
ficoml
add
dec
hlt
in
xchg
adcl
popf
sarb
les
adc
cmpsb
xchg
repnz
into
insb
xchg
repz
sbb
xchg
inc
lcall
fistps
in
cltd
adc
leave
xchg
push
je
imul
push
dec
or
adc
and
dec
pop
sbb
loope
dec
cmp
and
jne
dec
jnp,pn
xchg
add
lahf
cltd
nop
das
dec
mov
in
fstl
sbb
sbbl
inc
iret
test
aam
sbb
stos
xorb
dec
add
add
adc
xchg
fldcw
call
fdivr
mov
fs
inc
sbb
xchg
pushf
and
dec
rcr
inc
stos
jo
inc
ss
sub
nop
js
in
push
je
addb
pop
test
dec
jecxz
add
mov
sub
and
cmc
inc
push
dec
fstl
inc
add
adc
pop
ds
es
mov
adc
ljmp
xchg
mov
jg
and
push
jmp
xor
push
xor
push
pop
nop
mov
push
test
sbb
lods
and
sbb
add
aas
cmp
push
movsl
popa
and
push
adc
cli
sbb
pop
push
pop
adc
decl
pop
jne
jne
jne,pn
cmpsb
iret
add
jmp
nop
adc
repz
pop
pop
mov
pop
das
shrb
dec
mov
aas
push
add
daa
xor
js
jg
jo
pusha
xchg
jb
pop
jo
dec
pop
or
lret
test
or
js
test
cmpb
push
cltd
pusha
add
add
or
and
divl
test
setp
add
push
mov
js
arpl
pusha
sub
and
jno
scas
lea
sbb
pop
adc
cmp
xchg
or
mov
and
sub
xor
xchg
pop
mov
add
push
sbb
add
pop
adc
adcl
push
call
xchg
mov
test
or
sub
jo
add
sbb
std
cs
inc
sarl
sub
or
nop
lret
aaa
or
dec
int3
adc
dec
cmpsl
test
test
or
xor
cmp
sub
jb
sub
xchg
inc
cs
sub
or
cltd
imul
imul
sub
inc
inc
dec
pop
je
mov
sub
pop
pop
paddw
scas
push
sahf
inc
fcoml
cmp
xchg
cmp
cmp
mov
add
and
and
xchg
jo
data16
inc
dec
adc
fisubrl
sub
adc
jmp
test
fwait
add
jns
enter
push
add
adc
nop
adc
sbbl
adcb
rcll
push
shlb
pop
push
sbb
pop
fdivrs
dec
mov
or
pop
bnd
and
push
push
xchg
lret
test
dec
push
movsb
fld
sahf
inc
sub
push
sub
repz
cmp
imul
dec
xor
repnz
enter
push
addl
int3
test
mov
push
cmp
test
push
int3
cmp
ds
mov
int3
adc
and
jb
cwtl
inc
push
add
xor
iret
pop
push
push
pop
xor
sbb
or
sub
jl
or
lcall
mov
push
add
push
push
pop
out
push
xchg
adc
mov
les
dec
lar
push
lods
incl
icebp
out
xchg
and
sahf
sub
mov
xchg
jl
inc
insb
pop
rolb
jb
subl
ret
mov
add
mov
cmpsl
push
lret
mov
pop
movsb
mov
push
scas
push
lcall
jmp
inc
sbbb
or
add
movsb
ficoml
and
and
inc
sub
iret
sub
xchg
push
lods
inc
lahf
sub
mov
jno
adc
push
inc
pop
loopne
jecxz
dec
adcl
fcomp
lahf
adc
pop
add
enter
pusha
inc
and
nop
push
dec
xor
imul
shll
daa
xor
in
pop
sbb
popl
push
inc
loopne
ss
leave
cmpl
test
xor
gs
jle
add
aas
pop
add
xchg
int3
ljmp
mov
adc
and
lea
push
rolb
add
and
pop
andb
movsb
push
aaa
inc
cmpsl
scas
addb
dec
and
adc
lret
push
and
jg
add
jmp
mov
mov
js
orl
jno
rcr
lods
or
cmp
fimuls
repnz
dec
pop
add
filds
lahf
push
push
adc
popa
add
mov
cmp
xchg
add
sti
or
sbb
sub
sbb
jl
lea
adc
in
dec
push
push
and
and
ljmp
mov
lahf
or
imulb
xorb
add
add
mov
ljmp
int3
cmp
push
push
sub
shl
mov
div
or
add
push
push
pop
fcomps
jle
lahf
std
aam
sub
add
int3
mov
nop
sbb
adc
fidivl
add
adc
ret
adc
mov
or
out
push
cwtl
or
xor
jb
mov
popa
mov
add
ret
jl
cld
dec
mov
out
push
out
sbb
sbb
and
out
call
loopne
jo
ret
div
out
adc
xchg
mov
mov
sbb
dec
push
jo
pusha
ret
out
test
rclb
mov
xorl
cmp
fisubrl
push
mov
fsubr
xor
mov
xor
push
mov
sub
adc
faddl
call
push
or
in
add
sub
pop
or
mov
loop
sbb
push
and
xchg
push
jl
xor
pop
and
pushf
push
test
sbb
cwtl
push
test
lcall
sahf
into
int
push
mov
insb
cmp
sub
stos
out
mov
pop
add
dec
and
daa
clc
neg
inc
dec
jge
dec
adc
fistps
sbb
cs
aaa
push
mov
nop
shll
push
and
neg
or
sbb
into
sbb
or
xchg
stc
es
sahf
aam
clc
cwtl
jne
jp
or
pop
or
mov
lar
jo
cld
mov
pusha
gs
dec
mov
push
or
xchg
mov
jae
push
cli
xchg
ds
add
movsl
lods
nop
adcl
in
in
xchg
xor
pop
loope
adc
imul
mov
push
push
fcmovb
andl
test
repnz
xor
push
or
out
pop
les
shll
mov
lcall
mov
mov
and
push
mov
int
pop
inc
bound
jb
push
enter
add
mov
xchg
push
adc
jg
jle
test
enter
shlb
jbe
ficoms
jno
fldcw
movzwl
add
data16
inc
fldcw
stos
pop
add
dec
cli
mov
sti
push
enter
jbe
inc
inc
cmp
test
ja
or
cmp
mov
es
jle
cmp
and
adc
cmc
pshufw
cli
add
push
pop
pop
adc
add
inc
add
test
and
rol
loop
mov
add
js
dec
sarb
push
ss
add
out
push
mov
pusha
js
push
mov
call
std
in
adc
add
je
cmp
adc
lcall
std
insl
js
push
fcompl
cmp
into
pop
cwtl
mov
cmp
jbe
or
out
jmp
in
sub
add
gs
stos
adc
sub
or
push
hlt
nop
sbb
mov
push
rclb
sub
mov
push
in
pop
pop
mov
or
lret
std
cmpsl
mov
inc
adc
add
cmp
les
loop
pop
fmulp
lret
leave
iret
mov
lahf
fs
sbb
sub
fmuls
push
std
jno
aad
dec
inc
sbb
jae
movl
aaa
fdecstp
xor
cmp
je
add
pop
lock
lahf
movl
pushf
jnp
adc
cmpl
adc
cwtl
xchg
ds
mov
jmp
push
loopne
add
push
or
fsubl
lret
cmp
pop
inc
repnz
add
sbb
pop
cmp
push
jg
fsubrp
push
sar
movsb
pop
cmp
jecxz
loopne
or
movsb
cld
add
inc
hlt
adc
push
insb
bound
mov
add
sub
pop
or
int3
xor
and
je
cmp
out
adc
mov
cwtl
stos
add
out
mov
push
lea
iret
call
enter
and
mov
or
push
adc
jecxz
loopne
data16
push
push
and
cmovae
inc
pop
xor
lods
test
jo
mov
push
daa
xor
xor
sbb
xchg
cmp
mov
push
lret
push
aaa
or
mov
in
movsb
cmp
sub
movsl
inc
xor
inc
xchg
pop
dec
outsb
mov
jnp
ret
daa
popa
sub
pushf
pop
fcoml
dec
cld
xor
xor
leave
cmp
pop
ret
push
punpckhdq
mov
or
cld
lock
adc
mov
sub
xchg
cmp
or
jne
aaa
sub
or
stos
push
sub
xorb
or
inc
sbb
js
mov
push
cld
mov
cmp
je
sbb
mov
pop
or
push
mov
add
es
jg
mov
ss
loopne
adc
sti
add
add
and
cmp
push
push
jg
push
inc
clc
pop
push
pop
pop
fsubrs
outsb
iret
cmc
cmp
ja
dec
xchg
rorl
mov
out
insl
sub
inc
sbb
popf
add
insb
dec
inc
mov
jg
sbb
mov
mov
ret
push
andl
clc
iret
or
jl
cmpl
cmp
cmpsb
jmp
inc
sbb
ds
add
inc
movntps
test
or
ret
or
mov
lahf
mov
adc
mov
push
push
call
xor
imul
mov
cmpl
rcll
or
add
cmp
jmp
push
or
sarb
xchg
inc
ljmp
je
pop
mov
pop
inc
xor
sbbl
xchg
nop
hlt
scas
dec
int3
test
jl
jmp
inc
gs
add
loopne
mov
push
lea
push
push
adc
jl
or
ds
push
in
or
adc
adc
adc
adc
sub
xchg
mov
sbb
lds
jo
push
jmp
add
push
jecxz
mov
jp
sbb
je
mov
lods
xor
cld
pop
jmp
pusha
or
and
mov
jo
mov
add
test
pop
mov
push
mov
sbb
out
add
mov
in
pusha
aaa
xor
mov
je
jmp
push
js
dec
add
sub
popa
outsb
mov
push
add
jle
mov
mov
sub
cmp
dec
and
pop
mov
sbb
inc
xlat
pop
add
inc
push
roll
sub
push
mov
mov
inc
movl
cmp
push
or
inc
punpckhbw
call
or
jmp
lea
xor
mov
pop
rcrb
movsb
lcall
pop
jo
xchg
and
mov
inc
cmpsl
xchg
and
icebp
jmp
pop
inc
pushf
mov
hlt
xor
testb
push
repnz
add
mov
das
add
xchg
and
in
dec
adc
cli
pop
in
outsl
adc
and
es
lock
ljmp
xor
notl
push
mov
push
add
mov
add
or
lea
not
cltd
das
cmp
add
push
push
icebp
sahf
movsb
pop
push
cli
int3
stos
test
push
pushf
adc
mov
cmp
mov
sbb
mov
add
cmpsl
inc
mov
jl
subl
xchg
or
insl
movsb
lock
sbb
and
sub
jo
adc
and
sub
jne
mov
pop
call
std
arpl
orb
inc
incl
addw
repnz
or
ds
mov
add
adc
ret
inc
sbbl
xchg
flds
xchg
push
popa
or
sub
mov
cmc
out
or
popf
notb
dec
movb
mov
cwtl
nop
cmpsb
pushf
cmc
ret
or
push
add
shlb
add
add
xorl
fsubrs
ss
pop
push
pop
mov
and
adc
std
mov
mov
mov
xchg
push
and
push
mov
testl
adc
test
pop
mov
pop
ret
shr
or
lret
push
pop
nop
fxch
fst
mov
push
ror
and
imul
cmp
fdivrs
cmp
jge
je
push
dec
into
jae
not
clc
fsubrs
push
lret
inc
bound
jle
push
push
cwtl
xor
mull
push
jl
lcall
lea
jno
adc
cmp
sub
add
lret
outsb
test
push
mov
sub
cmp
xor
mov
mov
hlt
add
imul
push
stos
sbb
mov
cmp
dec
fwait
pop
add
cmp
hlt
syscall
xor
mov
sub
insl
into
popa
push
ljmp
jg
mov
pop
mul
xor
push
add
add
xchg
shlb
push
jmp
push
pop
adc
sahf
imul
adc
push
inc
inc
jge
testb
adc
stos
dec
jns
push
jmp
adc
popa
xor
sub
push
dec
hlt
add
and
mov
popa
cltd
push
inc
xchg
xchg
sbb
scas
pop
sbb
mov
les
push
mov
or
push
add
cmpsb
jmp
sbb
loopne
push
xor
mov
jl
test
ds
pop
pop
scas
outsl
sahf
ret
xor
jbe
test
pop
push
dec
sbb
push
sbb
pop
adc
daa
bound
shl
xor
push
adc
inc
nop
jns
sub
scas
inc
or
xor
sbb
cvtdq2ps
sbb
lea
aaa
dec
dec
mov
push
mov
inc
adc
push
sbb
add
pop
lcall
sbb
int
push
dec
sub
das
cmp
imul
cmp
cwtl
jno
dec
xchg
mov
xor
loopne
xchg
jnp
and
enter
inc
push
mov
leave
mov
mov
mov
loopne
rcrb
cmp
or
cmpsb
jge
adc
loop
or
ret
mov
and
fsubrp
scas
pusha
pushf
movsb
repnz
pop
lret
lock
lahf
in
xchg
arpl
or
loop
ret
jl
pop
lock
call
pop
cmp
sub
loopne
daa
setnp
repz
mov
and
push
jmp
cmpsb
and
add
push
cmp
roll
popf
loopne
adc
push
lock
sub
sub
ds
lods
xor
jl
and
imul
mov
push
fs
in
hlt
or
test
inc
sti
add
adc
aad
lea
ffree
loop
add
mov
add
push
addr16
shrb
repnz
fs
inc
sbb
in
and
push
out
and
por
mov
out
adc
mov
and
divl
cli
pusha
push
xchg
or
cmp
mov
inc
addl
cld
cmp
or
cmp
fadd
test
aam
cmpb
jecxz
pusha
push
enter
dec
xor
lret
fstpt
insl
jne
cs
add
push
jae
arpl
cmp
sahf
add
push
sahf
ja
stc
je
inc
or
push
or
outsb
pop
insb
jne
or
cmp
push
push
cld
cltd
mov
add
push
aaa
cmp
cmp
dec
push
jo
mov
dec
scas
mov
sub
cmp
mov
cmpsb
mov
ja
add
je
push
call
jne
push
or
fdivl
sbb
movsl
cmp
inc
xlat
jnp
and
inc
lods
xchg
cmp
loop
pop
push
movb
fwait
popf
sbb
mov
add
call
imul
jmp
push
pop
sahf
rcrb
sarl
xchg
rorb
dec
into
ficomps
push
push
outsl
outsb
jo
imul
push
sbb
div
and
push
adc
xor
push
faddl
xor
out
sbb
jnp
jae
cmp
call
add
int3
push
jg
fwait
shl
stc
leave
js
cmp
hlt
mov
add
mov
or
pusha
ja
out
loopne
pop
outsb
out
sti
push
xor
push
mov
inc
mov
std
add
cmp
lret
sub
mov
pop
inc
or
or
ja
and
out
jmp
dec
xor
outsb
hlt
add
and
cmpsl
push
mov
mov
dec
jnp
pop
sbb
sub
mov
cs
mov
adc
pop
adc
or
add
cmp
imul
push
sbb
fmuls
fsubr
mov
out
cmpsb
cwtl
nop
sti
or
push
mov
inc
int3
stos
xor
mov
scas
sub
dec
jnp
dec
in
and
pop
les
xchg
add
xchg
int
adc
sbbl
cltd
popa
mov
sar
mov
mov
xchg
push
addl
nop
sbbl
add
nop
add
nop
push
add
push
cmp
jbe
movsb
xchg
cmpsb
notb
add
adc
mov
dec
sbb
test
clc
adc
and
notb
cmp
jne
mov
xor
xchg
loopne
ljmp
jb
or
lock
es
or
sbb
mov
mov
pop
mov
jne
cs
in
xchg
int3
filds
push
sbb
mov
iret
push
and
outsl
push
xor
sbb
ror
mov
adc
test
mov
xchg
add
in
and
ja
xor
insb
flds
lret
push
jle
shll
mov
fcmovnb
or
sbb
leave
lea
test
or
cmpsl
scas
push
pop
push
adc
xchg
add
rcrb
and
adc
shl
mov
inc
mov
adc
pusha
in
movsl
rorl
pushl
mov
inc
shl
mov
push
rol
ljmp
sbb
ja
add
stc
loopne
jns
cmc
test
xchg
insb
xchg
xchg
mov
mov
add
or
subl
mov
popf
js
notb
xlat
jno
xchg
ret
inc
sbb
cmp
or
lock
adc
mov
add
mov
in
or
incb
repnz
xchg
out
nop
out
add
js
out
addr16
cmp
jmp
cmp
push
clc
add
out
and
out
fldl2t
mov
ret
roll
mov
stc
push
adc
loope
push
mov
stc
sbb
lea
lock
push
stc
aad
cmp
je
icebp
jne
xchg
dec
sti
mov
xorl
int
imul
cld
sub
in
pop
pop
cmp
lods
push
mov
mov
mov
cmc
add
add
aaa
fldcw
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
xor
cwtl
dec
aas
xor
loopne
popf
sbb
and
push
daa
inc
xchg
pusha
mov
sub
or
ret
jmp
push
or
pop
pop
pushf
adc
push
inc
sub
daa
or
outsl
or
fidivrs
pop
xor
push
or
sbb
decl
and
or
or
sti
and
and
add
push
call
aam
inc
pop
xor
adcb
sub
loopne
and
icebp
int3
int
ror
subb
loope
jbe
and
sbb
out
orb
int3
xor
lock
pop
xadd
push
sbb
and
sbb
jnp
and
movsl
mov
nop
pop
sub
je
pop
sbb
fs
pusha
insb
insb
and
push
add
int3
insb
aaa
icebp
mov
les
xchg
ret
or
icebp
sub
add
adc
je
cmp
je
mulb
or
pslld
push
push
cmp
je
and
xchg
xor
adc
push
push
lock
push
sub
adc
push
mov
pop
lea
fdiv
push
dec
add
sbb
int
or
dec
lock
add
lock
lock
cmpsl
out
adc
cmp
and
push
sbb
jo
into
add
sbb
loopne
adc
ss
mov
and
mov
mov
sbb
add
add
push
mov
lods
mov
into
lea
mov
sub
and
pop
cs
testb
xchg
mov
je
xorl
xor
pop
dec
push
sbb
sbbl
cmp
sub
add
adc
bound
popf
fmull
xor
clc
ret
or
inc
mov
mov
mov
scas
call
mov
sbbl
xchg
mov
adc
xorl
insb
clc
push
push
ret
or
sub
cli
xchg
xor
mov
inc
mov
cs
add
xor
insb
cmp
dec
jnp
outsl
adc
outsb
and
xor
lds
xchg
add
or
xchg
rorl
pusha
mov
aaa
test
pushf
cwtl
fidivrs
push
stos
sub
and
clc
outsb
test
sub
jo
cmp
je
jns
and
xchg
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
adc
nop
ret
add
lea
pop
sbb
sbb
dec
push
or
add
dec
sbb
lods
rorb
lods
add
adc
xchg
fcoms
cli
subb
js
or
out
xchg
pop
xor
pop
rolb
or
popa
lock
dec
jne
push
xchg
inc
fs
mov
push
call
outsl
lds
pop
arpl
and
mov
add
sbb
and
or
mov
mov
fdivrl
idiv
mov
std
loop
mov
jmp
cmp
lock
and
adc
pop
xor
aad
lods
jbe
popa
pusha
mov
dec
and
cmp
je
aaa
imul
add
and
ret
jge,pn
sbb
jg
adc
test
push
sbb
inc
das
and
mov
ret
pop
addb
xor
call
ljmp
mov
adc
or
and
pop
pop
or
pop
xor
push
or
jo
test
pop
fistl
popa
ret
loope
into
jecxz
and
data16
loopne
cmp
ds
lods
xchg
add
test
ret
xchg
lret
pop
pop
addb
jle
lea
movsb
mov
cmp
cmp
adc
sbb
or
ljmp
add
xchg
fsubr
mov
cltd
cmpl
push
fdiv
push
add
por
sbbl
popa
mov
push
pop
shlb
sub
add
jo
addr16
mov
xor
fs
in
mov
in
xor
sti
dec
pop
dec
pop
mov
movsl
add
idivb
je
mov
cmpsl
mov
repz
pop
das
cmp
adc
es
out
jo
push
loop
adc
mov
jge
pop
cmp
push
xchg
lock
push
add
test
push
fildl
mov
test
lret
test
push
ss
aaa
push
jnp
dec
fadds
and
pop
aas
mov
mov
or
test
inc
mov
iret
dec
shll
jae
add
push
push
push
push
je
iret
insb
pusha
and
lahf
cs
or
push
insb
sbb
mulps
inc
cmp
add
push
push
iret
push
dec
cmpb
sbb
sub
sbb
imul
sbb
xchg
pop
pop
sub
les
imul
js
in
adc
xlat
push
sahf
sahf
test
mov
stos
lahf
sub
lods
sbb
cmp
jl
pop
push
mov
or
aaa
les
pop
add
inc
sbb
and
adcl
push
and
les
sbb
pusha
jmp
mov
jo
push
cmp
lcall
xor
push
inc
ret
cmp
cmpsb
sub
lcall
sub
int
roll
pop
test
mov
mov
out
aam
std
decl
xchg
lods
lock
xchg
cs
popf
add
xor
mov
dec
mov
stos
aad
push
shrb
jg
mov
xor
call
mov
mov
shlb
inc
jnp
push
push
jo
bound
adc
test
fidivs
out
xchg
add
adc
push
xor
push
or
mov
push
inc
push
and
sbb
cwtl
cmp
fmull
cmp
mov
pop
mov
add
into
outsl
adc
xchg
sbb
mov
sub
roll
cld
mov
neg
sbb
push
cmp
ret
inc
xor
fs
and
jo
cmp
xchg
adc
jo
push
push
cmpl
add
insb
js
je
add
push
xor
lds
dec
js
fisttpll
andl
cwtl
insb
addb
test
xor
mov
inc
pop
inc
xchg
rcrb
dec
adc
andl
pop
lea
dec
inc
or
dec
adc
outsb
jl
aas
sbb
jmp
outsl
outsb
inc
jmp
pushl
aad
push
pop
mov
lea
in
out
test
or
sbb
mov
or
lcall
test
sbb
insb
pop
inc
xchg
xor
pop
inc
cmp
mov
jge
mov
jl
andl
icebp
dec
lods
enter
jl
or
cmp
and
scas
mov
pop
les
outsb
inc
or
pop
loopne
jecxz
test
int
fistpll
lods
dec
mov
mov
push
xchg
dec
outsb
mov
xchg
xor
cltd
adc
xor
adc
add
imul
and
adc
test
xor
add
or
and
dec
xchg
inc
cmp
scas
inc
mov
popa
mov
or
out
push
mov
mov
dec
cmp
sbb
xor
or
push
or
push
test
shrl
adc
sbb
pop
lock
pop
add
dec
insb
dec
clc
mov
inc
adc
push
and
in
inc
adc
inc
xor
jg
push
and
fdivs
lods
jle
mov
addl
iret
shll
pop
orl
fnsave
mul
jp
mov
lock
xchg
pop
xchg
mov
movb
sub
mov
add
cmp
cmp
jnp
arpl
sub
idivl
lock
ret
testb
je
and
out
add
xchg
adc
mov
sbb
mov
and
xor
xchg
mov
sbb
movzbl
mov
mov
dec
lock
xchg
sbb
mov
mov
mov
push
adc
inc
lret
int
mov
mov
cwtl
jl
fistps
pushf
mov
fldt
xor
adcb
xchg
mov
mov
and
cmp
popf
add
mov
popf
shll
sub
or
add
out
add
push
xor
inc
xchg
nop
lock
mov
mov
test
test
sbb
insl
notl
lods
cmp
fistps
fs
mov
and
jmp
xor
pop
mov
call
movhps
loop
arpl
mov
push
mov
movl
dec
push
data16
inc
cmpsb
push
loope
mov
mov
nop
jmp
sbb
jno
fsubrl
dec
lcall
pushf
data16
ss
inc
xlat
adc
aad
lods
xor
dec
rcl
mov
fmuls
mov
stos
add
adc
cmp
sahf
adcl
into
aaa
dec
push
jo
jmp
inc
fcomps
pusha
xor
iret
inc
sub
outsb
pop
push
push
pop
cmp
mov
imul
cmp
mov
cwtl
inc
negl
inc
jp
mov
cwtl
rclb
pop
mov
adc
add
fcoms
xchg
js
xor
jne
cmpb
imul
add
test
xchg
mov
add
or
pop
xor
mov
enter
xchg
cwtl
xor
cmp
add
repnz
push
aaa
push
addl
pop
enter
add
pop
cmp
je
push
dec
pop
add
adc
gs
lock
adc
mov
in
andl
mov
pushl
test
sub
pusha
rorb
outsl
inc
add
rorb
rorb
jl
mov
into
add
xchg
movsb
pop
fcompl
push
stos
or
test
aam
mov
or
mov
jo
in
pusha
adcb
mov
ljmp
pushf
test
jnp
add
cli
inc
dec
inc
xchg
push
or
ss
xor
pop
and
xor
cmp
fldcw
and
je
mov
mov
mov
jmp
pop
jae
out
sbb
add
adc
shlb
mov
pusha
lds
sbb
xor
dec
push
push
sub
mov
dec
insb
add
or
add
xor
mov
mov
lods
adc
sbb
shlb
or
movsl
jge
jge
adc
sbb
das
gs
mov
cmp
add
push
fistpl
loope
push
inc
flds
enter
cmp
enter
outsl
test
mov
mov
jo
and
mov
test
es
push
pop
and
aas
mov
xlat
fdivl
xlat
sub
das
push
jnp
jne
popf
inc
cli
push
cld
xor
mov
push
les
lahf
or
sbb
pop
adc
inc
insb
shr
lea
loop
inc
add
jns
sub
or
inc
ret
adc
icebp
icebp
push
adc
aaa
sbb
cmp
stos
pusha
insb
std
mov
sbb
mov
in
adc
out
inc
cwtl
cmp
adc
sub
pop
bound
js
mov
jo
lock
mov
sbb
imul
push
sub
sbb
push
pop
adc
loop
daa
mov
inc
hlt
lret
shrb
sub
jns
mov
jno
enter
shl
cwtl
push
enter
int
fwait
dec
insb
or
int3
xchg
fisttpl
xor
push
pop
xchg
push
pop
sbb
imul
sbb
inc
sbbb
and
mov
add
icebp
or
pop
lea
cmp
pop
jmp
fldt
nop
int
out
movsl
addl
movsl
adc
insb
insb
sbb
test
cltd
hlt
or
test
ja
mov
jmp
fs
inc
xor
push
cmp
push
cld
xor
je
adc
rol
push
movsb
mov
rorb
daa
adc
mov
or
xor
and
mov
push
in
push
sub
push
pop
fdivs
loope
add
push
lea
add
ss
in
and
dec
je
aaa
jbe
or
rorl
jo
sub
lahf
ficomps
sub
add
mov
iret
xchg
testl
and
xchg
mov
xor
pop
push
aas
scas
or
cmp
decl
fld1
dec
pop
loope
pop
setge
adc
or
pop
lret
iret
stos
push
push
in
mov
test
aad
push
push
mov
pop
sbb
nop
mov
add
mov
or
add
lret
mov
sbbl
xchg
inc
push
dec
daa
mov
xchg
mov
lea
movsb
push
insb
adc
test
fsts
mov
adc
inc
or
and
ds
jp
or
mov
or
sbb
mov
sub
or
popa
lea
idivb
xor
mov
push
aaa
mov
push
mov
mov
jnp
inc
fmull
out
pop
dec
push
pop
jecxz
pop
or
mov
push
ror
inc
in
loopne
pop
notl
repnz
rcrl
mov
nop
addr16
inc
mov
loope
and
les
call
sarl
and
push
xchg
dec
loope
or
fnstenv
rcl
aaa
sbb
xor
ja,pt
sti
lods
push
jmp
or
xchg
lock
sub
dec
inc
add
in
aam
into
or
sbb
or
inc
fsubrs
pushf
push
sub
mov
sub
daa
cltd
shl
inc
mov
testl
xor
pop
test
xor
fnstcw
push
xor
enter
xor
or
lcall
mov
and
shlb
loope
bound
inc
jo
pop
mov
xchg
push
mov
cld
ret
inc
push
push
jae
push
push
xor
cld
xor
mov
sbbl
sub
pop
xor
or
or
add
les
scas
mov
dec
in
enter
mov
pop
add
movsb
in
mov
mov
mov
sbb
shrb
aas
loop
ret
push
testl
mov
or
jp
jae
cmpl
mov
push
rolb
orl
sub
mov
idivl
pop
lods
push
cmc
xchg
mov
and
add
cmp
mov
add
xor
shlb
aaa
adc
xchg
cmp
xchg
lds
xchg
mov
call
push
cmp
xchg
push
in
add
push
test
push
xchg
push
inc
testl
lret
or
xchg
xchg
loop
xor
xchg
pop
loope
xor
push
mov
adc
pop
dec
adc
pop
push
mov
pushl
push
push
jp
adc
or
dec
pop
jnp
push
xchg
push
jo
loopne
lcall
adc
add
idiv
les
jbe
add
pop
aaa
lods
into
pop
push
imul
and
test
and
dec
cmp
out
out
data16
adc
outsl
or
ror
sahf
sti
dec
ja
fucomi
bound
sub
sub
sub
xchg
adc
adc
loopne
stos
sarl
aad
or
xor
movsl
sbb
jl
xor
jne
lcall
mov
jl
arpl
outsb
cmp
adc
xor
cmpsb
rclb
test
mov
inc
sbb
pop
xor
decl
aas
movzwl
dec
mov
push
and
push
ds
cmp
dec
jmp
insb
mov
adc
pop
cmp
pop
hlt
and
clc
test
cli
movsl
push
fisubrl
or
add
je
test
call
ret
mov
pop
or
adc
inc
cmp
adc
inc
js
test
cltd
and
add
add
jnp
sbb
push
add
pop
push
shrl
or
mov
ret
push
mov
dec
je
sub
cld
jl
push
sub
push
lea
pop
add
outsl
dec
or
push
adc
mov
mov
cmp
or
lds
or
push
adc
inc
sub
jmp
insl
add
ds
add
and
shl
mov
pusha
orl
adc
imul
imul
jle
stc
pop
and
int3
gs
lea
or
test
sub
dec
cld
out
push
sbbl
inc
sub
pushf
dec
cmp
pop
mov
sbb
adc
pop
fcoml
popa
add
push
scas
push
stc
sti
bound
int3
sub
inc
insb
or
inc
shlb
clc
mov
pop
loopne
into
fs
aam
jo
fcoms
jnp
and
ss
or
enter
out
inc
data16
add
pop
imull
or
fiadds
popa
mov
xchg
sub
mov
add
fcompl
dec
mov
mov
cmpsl
dec
call
xchg
les
dec
jge
and
pop
orl
cltd
mov
imul
add
sub
shlb
cmp
xchg
aam
push
lock
repz
push
iret
adc
call
and
add
sti
cmp
rep
rcrb
dec
jle
push
dec
sbb
sub
jns
sub
ret
in
cmp
mov
xchg
fcoml
in
and
and
in
mov
sub
mov
int
int3
aam
inc
xor
dec
aas
mov
or
rclb
bound
and
lea
pop
in
xchg
idivl
mov
or
fucomip
test
ja
push
lock
xchg
repnz
fisubl
mov
sbb
rclb
fprem1
inc
sub
or
popa
push
mov
jnp
icebp
mov
adc
or
dec
test
jmp
xor
imul
jmp
jle
and
xor
adc
shll
inc
daa
xchg
mov
jnp
pop
mov
inc
ficompl
cmp
adc
fsubl
xor
mov
insl
mov
sub
push
fildl
adc
lcall
fldt
daa
imul
daa
xor
inc
enter
js
inc
push
jne
pop
sub
mov
into
inc
test
loopne
dec
in
cmp
mov
lock
pop
shlb
subb
cwtl
mov
and
imul
jo
jb
sub
sub
add
mov
adc
cmp
dec
mov
add
add
and
mov
lahf
shlb
out
les
push
pop
and
pusha
inc
add
or
std
mov
adc
adc
xor
sub
and
hlt
sbb
cmp
clc
sub
fs
das
cmpsl
xor
or
push
push
mov
mov
add
push
dec
inc
xorl
xor
push
push
fsubrs
add
dec
cmp
je
cmp
push
les
fmull
int
call
xor
push
in
add
mov
mov
shl
call
xor
dec
pop
incl
inc
popa
cld
cltd
add
gs
faddl
dec
mov
inc
inc
ret
pusha
dec
mov
test
clc
add
hlt
mov
arpl
gs
dec
mov
pop
outsl
mov
je
adcl
add
cld
dec
mov
jg
lea
rclb
pop
inc
loope
inc
dec
mov
hlt
mov
or
jno
mov
sub
push
add
out
test
inc
adc
lods
sarb
push
add
aaa
loopne
xchg
mov
push
push
mov
push
add
test
pop
fs
ficompl
rorb
xchg
loopne
mov
adc
jl
mov
sarb
nop
movsb
push
cmp
push
loopne
filds
pop
add
orb
xchg
cmp
mov
mov
dec
or
or
adcb
jg
sbb
jo
cmp
add
sti
addb
or
jne
fisubl
xchg
iret
or
les
sbb
in
out
mov
xchg
rorb
cli
jl
sbb
aad
ja
push
movsb
cld
loopne
mov
arpl
push
sbb
lahf
push
jg
movsb
imul
cmp
outsb
sarb
sbb
inc
cmp
push
and
cmp
adc
in
and
pop
pop
add
inc
jecxz
lea
mov
cmpl
or
ficompl
jp
lods
add
push
cmc
inc
mov
xor
push
sub
or
sahf
insl
movups
add
lret
xor
xor
adc
push
in
mov
adc
xchg
sub
mov
call
xchg
ds
jne
stos
pop
mov
mov
test
adc
push
ss
cmp
pop
pop
sbb
dec
fs
add
insl
loop
push
inc
cmp
xchg
push
sub
loopne
and
adc
and
add
filds
sbb
orb
sbb
out
add
call
jecxz
push
test
or
in
aaa
stos
sarl
add
jge
jne
es
xchg
mov
cmp
push
je
jmp
fistl
add
or
cli
call
jb
add
dec
cmpsl
jne
push
adcb
call
jnp
add
lods
adc
or
dec
lret
push
jge
pop
mov
sub
push
fmull
add
and
hlt
add
xchg
add
mov
fnstcw
xchg
mov
dec
dec
cli
add
pop
je
pop
add
push
cmp
sbb
arpl
inc
add
js
aad
add
mov
dec
and
and
or
fnstsw
pusha
in
dec
adc
outsl
dec
negb
inc
or
loopne
mov
jge
adc
lods
cmpsb
rolb
sub
dec
adc
dec
and
and
sbbb
inc
cmp
cmp
mov
push
mov
movsb
adc
dec
and
pushf
push
adc
and
cld
push
roll
stos
pop
les
inc
ret
ja
push
cld
push
xor
adc
repz
jge
ficompl
shr
push
jmp
jmp
test
xlat
mov
leave
mov
push
mov
mov
arpl
mov
adcb
adc
sbb
and
cmp
or
je
dec
in
sti
pop
out
add
push
aam
pop
push
inc
xchg
sbb
mov
pusha
cmp
sbb
test
sbb
push
push
daa
jo
sbb
jns
add
xchg
or
push
or
in
sub
iret
lret
push
push
jge
add
sub
lea
add
cmp
ja
sbb
repz
pusha
inc
mov
fnstcw
out
xchg
and
push
push
sub
push
and
pop
sub
repnz
xchg
fnsave
sarb
xchg
sbb
xor
push
lods
lods
aaa
adc
sahf
xchg
inc
scas
cmp
push
sbb
cmp
inc
repnz
cmp
push
inc
in
add
inc
xchg
or
fmull
cmp
dec
xchg
popf
pusha
add
inc
adc
mov
push
mov
lods
cmp
add
adc
imulb
scas
xchg
and
inc
pop
push
dec
jmp
ret
pop
mov
add
orb
push
push
push
mov
ds
rol
shll
xor
xlat
xchg
jle
adc
dec
cmpsl
stc
cmp
pop
dec
mov
test
add
ret
dec
mov
adc
call
add
movsl
mov
enter
enter
xor
mov
fcmovnbe
add
add
or
sbb
dec
add
mov
shlb
jmp
pushl
sub
push
mov
bound
add
jecxz
insb
pop
lret
dec
loopne
mov
xchg
lock
scas
cld
aas
stos
adc
or
sbb
loope
inc
add
movsl
sub
addl
adc
or
sub
enter
jo
pop
out
push
xlat
dec
ja
and
aaa
push
scas
fmuls
add
push
pop
xchg
jae
cltd
mov
sub
stc
sbb
cmp
xchg
add
xor
push
aam
icebp
loopne
enter
filds
in
push
in
imul
pop
in
add
jns
cmp
jo
lahf
jo
add
mov
orl
xchg
and
xchg
adc
push
mov
faddp
loope
lock
repz
in
popa
mov
in
adc
pop
std
repz
popa
out
and
mov
lock
sub
jne
pop
add
push
mov
or
mov
sahf
or
adc
pushf
cmp
pop
or
cmp
sbb
loopne
xchg
mov
mov
dec
xchg
or
jbe
cmp
sbb
or
mov
les
xchg
ficoms
daa
fldt
add
add
sub
imul
in
fwait
out
popf
and
cmp
xchg
sti
inc
pop
or
adc
add
jbe
inc
mov
cmpsl
dec
lds
push
imul
dec
xchg
test
add
xor
dec
lods
xchg
inc
mov
push
xchg
xchg
sbb
mov
out
or
inc
fisubrl
sbb
cmp
out
inc
aam
cmp
or
in
inc
mov
add
sbb
cmp
xchg
or
and
mov
mov
jbe
push
pop
pushl
and
push
add
adc
add
insb
jbe
je
jno
xor
das
mov
shl
pop
cmp
jne
pop
adc
aaa
pusha
mov
pop
cmp
insl
icebp
mov
jge
cmp
cmp
adc
or
jmp
hlt
pushf
cmp
loope
jo
inc
push
call
jb
jae
loopne
jl
repnz
or
jle
fimuls
add
call
xchg
mov
adc
mov
pop
sbb
sbb
sbb
cmpsl
push
pop
fs
or
test
hlt
mov
add
cmp
aad
and
mov
xchg
mov
sbb
cmovs
xor
cmp
and
pop
jle
mov
push
cmp
sbb
gs
in
loopne
test
es
or
in
test
sub
cmp
scas
sbb
js
clc
push
in
pushf
inc
lret
pop
or
pop
or
loopne
add
adc
loopne
jno
cmp
in
decl
adc
dec
stc
dec
inc
inc
or
fstpt
xor
mov
rorb
xor
dec
jmp
idivl
scas
ss
sbb
adc
sub
in
add
aaa
add
js
loope
xchg
jns
mov
xor
or
xorb
push
inc
mov
mov
and
fsubs
test
mov
cmp
jbe
sar
sarl
push
xor
das
sbb
lods
push
lds
mov
cmp
mov
iret
cmp
popa
rcrl
push
nop
mov
jp
stos
inc
jno
leave
adc
aaa
test
leave
push
dec
dec
in
xchg
sbb
test
sbb
inc
mov
push
or
sbb
outsb
inc
dec
dec
jle
shrl
jne
test
dec
out
push
cmp
mov
jge
jo
add
mov
cmp
push
jo
fcomps
lock
pop
adc
fwait
aaa
arpl
sub
leave
inc
out
decb
mov
cmp
jbe
xchg
lea
mov
push
lea
in
jb
or
pop
jae
inc
dec
inc
xor
mov
mov
pusha
fwait
in
mov
mov
jb
addr16
rclb
cmpb
jo
or
pop
xor
sti
push
adc
adc
jle
xor
or
sbb
movsb
sbb
cmp
jb
cmp
cmp
ficoml
enter
std
xor
inc
jmp
xor
ljmp
incl
aas
ja
push
push
push
xchg
xchg
cmpsl
enter
jle
jg
pop
mov
aam
mov
cltd
ljmp
pop
jno
sbb
cld
push
pop
cmp
lock
push
inc
or
aas
dec
mov
adc
out
fdivs
mov
and
and
push
imul
add
or
add
jmp
push
push
mov
dec
gs
lahf
add
add
inc
dec
xorl
jo
pop
cmp
lea
mov
frstor
inc
inc
and
xchg
aas
or
and
sbb
mov
sar
or
add
das
lds
or
add
ret
jecxz
inc
sub
sbb
push
jne
inc
nop
jge
mov
mov
sbbl
sbb
inc
adc
adc
mov
fdivrl
pop
ret
gs
imul
push
test
arpl
push
inc
sbb
aam
mov
and
add
or
or
inc
addb
shll
xor
inc
shr
fdivrp
bound
xchg
or
das
imul
add
push
jbe
enter
pop
lods
xor
dec
test
movsl
shll
mov
push
mov
cmp
jp,pt
in
addl
dec
pop
adc
add
cli
push
fcoml
lea
push
lock
xor
pop
mov
rep
mov
adc
rol
mov
add
cmp
fisttps
push
xor
jmp
mov
sub
add
test
cmpsb
loopne
int
push
jge
mov
push
jge
sub
inc
add
adc
and
popa
pushl
sbb
xchg
aam
ja
ljmp
dec
xor
sbb
in
xchg
fwait
clc
add
push
push
xchg
pop
popl
dec
and
add
pushf
add
mov
and
xor
push
xor
ret
sbb
cmp
pop
jbe
adc
xor
add
cmp
int3
fs
xchg
cli
dec
push
cmp
test
mov
ljmp
add
add
stos
and
rcrl
vmread
mov
mov
ljmp
cld
adc
js
push
call
clc
sub
test
loopne
imul
pop
out
inc
and
jbe
sub
lea
fldl
mov
xchg
push
test
dec
fdivrs
jb
sbb
in
xchg
aas
and
aaa
stos
fcomps
sub
or
rorb
mov
imul
gs
icebp
sub
call
sbbb
adc
test
mov
sub
cld
into
xchg
push
pop
push
xor
sbb
lock
sbb
inc
je
imul
inc
sbb
dec
inc
mov
popf
xchg
loopne
mov
push
ret
cmp
mov
loopne
adc
je
xor
shlb
outsb
jecxz
lods
push
sbb
orl
push
pop
ret
xor
loop
lods
bound
xor
push
ds
jo
decl
mov
sub
mov
mov
nop
pop
int
jge
mov
adc
mov
in
jno
lock
jle
dec
add
jmp
or
push
aas
sarl
xor
sbb
out
and
pop
push
mov
shll
push
xor
hlt
scas
push
push
mov
add
push
ja
enter
add
xchg
lods
or
sub
add
xor
xchg
das
das
das
inc
in
clc
dec
sbb
dec
lret
shrl
sub
push
daa
jne
movl
jb
or
add
jl
add
sbb
add
or
rclb
jge
sub
fs
push
daa
xchg
int3
push
mov
dec
add
outsb
or
jno
decb
or
cmc
adc
nop
scas
push
lods
fimuls
xorb
ljmp
add
adc
sbb
mov
and
mov
cmp
pop
or
pop
imul
cmpsl
adc
insl
inc
push
movmskps
push
mov
inc
push
inc
sti
push
lds
jp
jle
cmp
arpl
xchg
out
sbb
pushf
mov
test
subl
call
push
jo
xchg
dec
and
add
insl
lods
pop
call
sub
mov
adc
lret
or
fisttpl
xchg
je
cmp
push
sub
pop
add
and
add
adc
divb
mov
dec
sub
rorl
adc
inc
leave
push
movl
lea
mov
pop
cmp
filds
sub
repz
mov
fsubr
mov
sti
rep
bound
jns
or
adc
jmp
sub
jae
push
or
pop
cmp
shlb
add
adc
inc
sbb
andl
add
jnp
and
jne
clc
xchg
xor
and
inc
cld
mov
cmpsb
xlat
and
adc
inc
push
dec
loopne
adc
sub
data16
inc
sub
sub
add
pop
adc
push
xchg
add
inc
xor
xor
inc
xchg
push
sarl
testb
rorb
push
int3
inc
xchg
mov
ds
xor
adc
inc
inc
inc
call
push
add
or
sarb
add
push
add
hlt
leave
clc
loopne
jo
push
mov
xor
and
mov
cmpsl
xorb
xchg
inc
in
jbe
add
mov
jmp
mov
jl
inc
cwtl
adc
mov
xlat
add
sub
cmp
xor
mov
mov
lea
repnz
or
sbb
pop
mov
mov
cld
clc
pop
inc
or
rdtsc
into
add
lret
loop
das
push
inc
add
jnp
pop
adc
push
or
sbb
dec
mov
push
and
adc
mov
adc
dec
push
cmp
call
jb
add
icebp
aaa
mov
mov
push
dec
or
sahf
push
mov
in
popa
pop
sbb
inc
dec
bound
adc
mov
cmp
push
jecxz
mov
mov
dec
jmp
sbb
rclb
mov
adc
inc
adc
arpl
lret
gs
mov
push
cld
add
pop
xchg
test
mov
daa
sub
xor
cmp
push
mov
sub
loopne
mov
lods
je
pop
sbb
add
bnd
imul
mov
ficomps
adc
jo
push
sub
fs
cmc
stos
pop
scas
scas
mov
jge
je
xchg
adc
add
adc
xor
mov
out
cltd
cmp
jl
orb
gs
dec
cmc
insl
shll
icebp
sbb
xor
insb
gs
push
sbb
fnstenv
mov
loop
popa
stos
mov
pop
les
push
arpl
xor
push
loopne
sub
xor
call
aad
pop
pop
mov
mov
and
adcb
and
cmp
stos
xchg
hlt
jl
movb
adc
and
mov
cwtl
test
shrb
repnz
push
pop
add
adcb
push
data16
push
mov
add
adc
pop
add
cwtl
fadd
jle
pop
pushf
sub
insb
loope
mov
push
adc
add
or
push
pop
add
adc
stc
sbbl
push
daa
leave
es
xor
push
dec
add
dec
or
push
outsl
out
adc
push
outsb
sub
sar
cmp
jbe
or
add
shlb
push
push
sbb
inc
dec
pusha
in
adc
fcmovb
add
sub
jo
xchg
inc
jecxz
faddl
cmp
in
mov
hlt
nop
pop
arpl
movsb
mov
cld
xchg
jmp
pop
or
cs
or
dec
cmp
inc
fsubrp
pusha
pop
mov
add
lock
lea
mov
push
push
ss
lock
pop
mov
leave
or
andl
dec
jnp
xchg
pop
pop
scas
pop
push
insl
jo
jnp
in
push
scas
ret
adc
lea
add
hlt
lock
notb
testb
call
push
xchg
sub
pop
sbb
inc
inc
ficoms
dec
sbb
imul
mov
jl
mov
pop
or
sahf
add
mov
pop
mov
sbb
mov
adc
or
ret
sub
pop
call
dec
mov
pushf
xor
mov
cmp
mov
add
stos
cli
sbb
enter
arpl
call
dec
add
jne
sub
lea
xchg
imul
sahf
aas
add
push
cmp
jb
rcrl
mov
pop
or
sbb
xchg
pop
jmp
xor
jae
push
orb
adc
add
or
and
mov
sarb
adc
adc
test
xor
out
int3
jmp
aaa
xlat
ds
add
enter
jb
cmp
push
imul
lock
jp
movsl
pop
mov
lock
jl
out
mov
push
jle
adc
pop
loopne
loopne
test
mov
add
leave
mov
cmovnp
negb
test
pop
xor
jmp
cmpsb
inc
sub
adc
daa
out
sub
or
inc
push
pop
mov
arpl
or
mov
sbb
stos
movsb
jle
mov
test
adc
ret
cli
pop
cmp
adc
insb
jo
push
leave
sbb
sub
mov
cmpsb
adc
je
sbb
daa
or
cmp
sbb
or
fcmovnu
in
daa
pop
sti
mov
add
in
push
mov
imul
and
sbb
and
or
xchg
fisttpl
sub
sub
movsb
cmp
mov
cmp
adc
ja
xchg
sbb
dec
jecxz
repnz
dec
or
jb
pusha
or
aaa
mov
andl
push
adc
xor
ja
fidivrs
xor
je
pusha
test
mov
pop
or
and
xchg
bound
cmp
or
dec
enter
add
ds
sahf
jo
cmp
xchg
int3
dec
mov
pushf
pushl
mov
add
int3
add
ret
sbb
jnp
lods
popa
aaa
push
push
cmp
insb
and
and
mov
push
fsubl
in
and
cmp
adc
sbb
xchg
inc
sub
sub
cs
or
jmp
push
enter
push
xchg
sub
enter
and
sub
dec
sti
fnstenv
xor
or
xor
mov
mov
mov
add
lea
leave
ffree
cmp
or
fbld
andb
out
rcrb
adc
or
mov
sbb
adc
adc
and
mov
and
add
or
adc
inc
adc
xchg
test
add
inc
mov
lds
push
or
add
adc
shl
sub
mov
adc
adc
jmp
cmpsb
pop
or
cli
ja
ja
imul
or
xchg
pop
pop
mov
dec
sub
xor
and
sbb
mov
loope
cld
xor
arpl
cld
or
imul
imul
popf
movb
sub
jae
andl
and
or
jbe
mov
xchg
pop
push
cwtl
cmpl
xor
out
mov
xchg
stos
fstps
cld
and
sub
pop
mov
out
push
mov
inc
jnp
pop
pop
sub
rorb
mov
adc
jne
push
add
push
mov
addl
es
lock
daa
dec
mulb
out
je
and
stos
bnd
push
loope
dec
clc
fwait
pop
daa
loopne
dec
sub
das
dec
mov
pop
shlb
lock
sbb
jae
jne
sbb
sbb
add
push
sarb
in
test
adc
cmpsb
sbb
inc
call
loope
ljmp
push
loope
ret
lods
push
dec
pop
cmp
pop
icebp
dec
loop
mov
into
mov
push
cmpb
out
sbb
jae,pn
outsb
adc
inc
mov
cltd
pusha
mov
std
scas
and
or
pop
jg
cmp
mov
insb
jmp
cmp
xchg
sub
in
cmc
aam
cmp
lock
mov
pop
std
pop
sub
xor
add
clc
pop
ror
cmp
mov
push
push
pop
test
sti
jg
sahf
adc
outsl
sub
jo
xchg
push
sbb
icebp
sbb
cmp
in
push
data16
add
adc
sbb
jbe
mov
mov
pmulhuw
adc
daa
loopne
rorl
mov
hlt
mov
jnp
sub
cmp
loopne
ret
xchg
shlb
dec
or
xchg
addr16
add
test
or
stos
sub
jne
mov
dec
cltd
add
repz
inc
int
loope
and
ss
xchg
loopne
test
push
pop
or
les
push
clc
push
arpl
or
pop
sbb
inc
ljmp
jo
jb
or
ficoml
repnz
or
mov
jmp
push
xchg
pop
cmp
cld
lock
and
insb
xchg
pop
and
push
repnz
stc
lcall
inc
or
xchg
or
push
popa
out
xchg
pop
movzwl
sub
clc
xor
frstor
aas
push
hlt
inc
sub
adc
mov
push
jmp
push
ljmp
xor
xchg
inc
mov
int3
or
call
shl
fisubl
or
repnz
and
in
movsl
adc
daa
push
adc
loopne
inc
repnz
ss
push
lock
cmpsb
jae
and
or
cmp
cmpsb
xchg
xor
push
lock
mov
mov
xchg
cmpb
lods
or
shl
adc
aas
repz
lahf
add
out
mov
add
jl
cmp
jle
cmp
push
jp
lcall
inc
cmp
aas
lods
mov
sbb
cmp
cmp
jge
mov
pop
and
cmp
jl
ret
ljmp
je
cmp
je
jne
pop
popa
pop
xor
xor
lcall
iret
jae
mov
adc
and
pop
jmp
fwait
add
fbld
inc
pop
push
sub
add
mov
mov
pusha
mov
add
push
mov
add
add
adc
test
imul
mov
jmp
add
incl
mov
hlt
jge
mov
in
and
aaa
sub
jne
movl
hlt
inc
mov
and
shlb
cs
clc
int3
aam
and
adc
jecxz
add
loopne
add
cld
lock
ja
lea
mov
xlat
pop
xchg
mov
js
and
xchg
adc
mov
js
mov
xchg
imul
imul
nop
cli
push
mov
mov
cmpsb
fldl
sbb
add
test
pop
mov
mov
sub
stc
faddl
mov
xchg
int3
fcomp
push
pop
mov
popa
fs
fisttpl
sub
mov
leave
pop
xchg
mov
mov
sbb
insl
call
out
pop
and
loopne
loope
pop
or
xchg
dec
push
aad
leave
push
mov
lea
mov
fiaddl
aas
pop
mov
push
add
inc
call
add
inc
ja
mov
outsl
je
and
pop
mov
cmp
mov
mov
inc
jnp
std
mov
das
sbb
and
rolb
lret
jnp
rorb
push
pop
pop
fs
test
pusha
mov
andb
cmp
push
fwait
jo
cmpb
mov
sub
adc
mov
xchg
pop
push
cltd
add
push
mov
or
dec
je
out
ror
adc
es
adc
sbb
mov
jns
cmpb
les
shlb
mov
push
and
cmp
out
test
lods
pop
test
and
lret
xchg
mov
sub
cmpsl
sub
ficompl
mov
loop
rclb
ret
addb
mov
sub
jle
and
loopne
add
sbb
push
imul
xor
inc
orb
or
push
in
inc
icebp
add
pop
or
sbb
jnp
and
cmp
and
and
jb
add
rcrb
mov
pop
xchg
add
sbb
ret
sub
dec
pop
fucomi
jae
orl
cmc
pusha
push
push
test
cwtl
xchg
xlat
mov
ss
inc
pushf
cwtl
mov
sbb
in
loop
push
leave
and
pushf
jnp
jmp
cmc
sbb
mov
lahf
adc
sub
pusha
ljmp
adc
adc
xchg
fldt
rdmsr
or
mov
icebp
and
movb
fsubrl
jno
pop
ja
and
pop
cld
in
xor
inc
jne
push
sbb
sti
ds
sbb
loop
adc
pop
inc
cmp
in
jae
add
je
cmp
adcb
and
pop
push
inc
aaa
push
or
add
push
movmskps
enter
xor
int3
inc
mov
cs
ljmp
in
mov
mov
jle
inc
adc
jne
and
jne
adc
jecxz
in
dec
into
push
pusha
movsb
or
push
pop
mov
adc
mov
sub
push
mov
insl
insb
mov
and
pop
mov
pop
pop
jl
pop
inc
outsl
lock
push
lods
add
test
mov
lock
or
push
and
xchg
cmp
rclb
dec
out
inc
push
mov
pop
cltd
pop
pop
adc
test
sub
shll
fadds
mov
xchg
push
insb
jmp
ret
mov
cwtl
adcl
ret
jmp
and
add
pushf
mov
add
dec
pusha
mov
aad
adc
fcmovnu
lock
movl
jle
enter
ret
and
inc
add
push
add
push
lea
push
push
jae
sub
sahf
sub
punpcklwd
inc
sti
cld
pop
das
sbb
pop
adc
dec
cmp
xchg
or
or
dec
add
jl
sti
stos
lods
or
push
mov
sub
mov
lea
cmpb
ret
add
jmp
sahf
lock
push
ret
orps
mov
push
mov
xor
out
nop
push
fdiv
cs
and
in
or
decb
sbb
pop
mov
insl
loopne
inc
sub
jo
cmpl
mov
mov
push
mov
fdivrs
inc
mov
xchg
scas
push
push
or
loopne,pn
fisubrs
mov
fiaddl
imul
add
aam
lahf
or
push
mov
cmovb
jns
jb
or
xchg
pop
in
add
sub
mov
insb
add
or
sarb
pop
data16
daa
pop
jno
jmp
lods
xchg
mov
aaa
add
je
dec
adc
mov
jne
push
ljmp
fisttpll
sbb
cmp
in
push
or
add
cmp
sar
pop
and
dec
clc
ret
jmp
pop
xor
mul
test
pop
xlat
mov
adcb
and
jmp
popa
push
in
push
xchg
adc
mov
sub
jmp
or
movsb
adc
push
add
mov
sahf
or
inc
pop
outsl
roll
xchg
push
pop
push
cs
adc
iret
inc
or
shr
jmp
jp
mov
push
jnp
or
push
lea
cmp
mov
test
push
inc
sbb
aaa
pop
inc
jae
mov
aam
mov
jecxz
sub
xor
shrb
loopne
jo
inc
pop
or
sbb
daa
dec
mov
mov
inc
sbb
jle
aaa
test
push
pusha
mov
dec
pop
sub
jbe
xchg
jbe
xchg
push
scas
fcomp
in
mov
pop
je
fldl
pop
push
push
fstpl
clc
leave
sub
repz
pop
data16
mov
jbe
aaa
adc
adc
jne
push
aas
iret
iret
repz
or
jne
or
jne
sbb
jecxz
adc
push
loopne
fldz
add
pop
andl
or
je
filds
setge
in
or
pop
push
and
movq
push
xor
mov
mov
orl
sti
lea
fstl
jecxz
loop
jbe
inc
add
dec
sbb
fnstenv
orb
add
scas
insb
mov
aas
mov
xchg
negb
add
sbb
bound
pop
xchg
push
test
and
mov
les
dec
popa
sub
lea
add
inc
ffree
jge
xchg
insb
add
aam
pushl
inc
inc
in
mov
loop
or
fimuls
in
push
in
movsl
pminub
fs
or
push
mov
xchg
mov
clc
inc
add
in
stc
push
inc
setbe
add
xchg
ret
fmull
add
test
sbb
outsb
lods
popf
or
jmp
dec
jno
jbe
lock
push
mov
push
imul
mov
pop
in
xchg
add
and
aad
dec
mov
add
mov
add
add
cmp
and
fiaddl
jmp
add
pop
and
sub
enter
fstl
push
xor
and
adc
add
pop
push
repnz
xor
push
mov
or
or
test
cmp
addl
repnz
sbb
push
lds
push
mov
and
ja
push
mov
xor
sub
punpcklwd
stos
dec
popa
adc
loop
push
mov
and
les
jno
lretw
lods
push
fistpll
add
pop
pusha
mov
movsb
loopne
xchg
add
outsl
sub
dec
aam
push
leave
enter
jno
add
pop
add
adc
mov
fimuls
and
push
pusha
sbb
in
rcr
jo
data16
sbb
or
rorb
inc
or
inc
jb
xchg
or
mov
aam
inc
add
icebp
sbb
inc
jo
and
es
ret
mov
stos
dec
fcmovu
in
fs
adc
sub
add
dec
popf
movsb
add
shl
in
in
enter
in
in
mov
jecxz
lods
test
pop
test
sub
in
add
pop
movsl
and
aas
mov
push
jl
addr16
das
jl
push
mov
sahf
push
loopne
mov
add
pop
loope
and
cmp
cmp
popa
ret
cs
mov
clc
mov
pop
mov
mov
jle
outsb
outsl
sbb
sbb
pop
fcmovbe
mov
xor
icebp
add
das
mov
push
push
adc
jle
cmp
inc
push
jp
mov
adc
repnz
add
add
pop
mov
push
cs
dec
test
pop
sbb
jbe
leave
jge
call
hlt
cld
cmp
jl
cld
aaa
pusha
push
cli
aad
fistpl
mov
test
xor
mov
test
and
into
or
push
insl
push
aam
mov
jnp
mov
or
jle
mov
push
add
arpl
mov
inc
pop
sbb
mov
push
mov
lcall
pop
lret
enter
xchg
push
imul
or
xchg
imul
cmc
push
les
test
lods
repz
dec
jb
cmp
push
rcrl
decl
pop
out
xchg
insb
add
cmpsb
stos
inc
ret
inc
shll
bound
or
in
sub
test
pop
xor
add
inc
mov
jl
aas
xor
and
fisttpl
dec
sbb
loop
pop
cmovge
test
or
adc
jne
pop
or
fdivs
mov
pushf
adc
cmp
mov
jne
clc
xor
jmp
cltd
dec
pop
call
nop
inc
and
mov
sub
push
inc
lock
dec
pop
outsl
icebp
mov
cmpb
add
mov
ss
pop
jle
pop
push
cmp
adc
lret
pop
inc
jbe
adc
mov
sbb
movsb
mov
inc
push
or
sbbl
pop
hlt
and
cltd
jne
jno
sub
ffreep
clc
adc
pop
push
les
sbb
gs
jnp
stos
and
lods
or
add
mov
jno
sti
inc
push
jo
jg
xor
lcall
movsl
sub
push
and
iret
pop
in
ficoml
jp
movsl
sub
add
gs
dec
xchg
mov
sub
add
or
adc
inc
xor
sarb
clts
ffree
call
mov
pusha
outsb
and
lea
popa
mov
mov
push
mov
dec
push
pop
or
cmpb
jmp
insb
fdivrs
pop
iret
pop
lds
pcmpeqd
scas
push
sbbb
push
jns
clc
jne
or
push
mov
jnp
cld
inc
or
sub
cmp
adcb
addb
js
xchg
les
js
pop
ret
mov
sbb
mov
outsl
dec
adc
adc
pop
adc
loope
jmp
repz
sub
push
jle
and
test
cmpsl
xchg
jle
sub
in
stc
mov
imul
inc
xor
push
or
push
ljmp
or
jns
and
lahf
out
hlt
lock
pusha
or
xlat
xchg
xor
or
shll
popa
mov
adc
inc
jo
xor
adc
inc
mov
ret
mov
lahf
inc
insb
jne
cmc
lahf
xchg
add
ss
mov
enter
sbb
cmpsl
inc
add
add
test
nop
sbb
push
enter
ret
push
push
mov
cmp
adc
push
ds
inc
add
xchg
das
jne
cmp
or
pop
leave
repz
dec
xor
jp
sub
add
mov
pop
xchg
mov
add
or
notl
mov
orl
add
cmp
je
call
mov
insl
xchg
test
out
dec
clc
push
mov
adc
test
insb
add
pop
clc
dec
sub
lods
mov
pop
push
iret
or
icebp
andl
outsl
stos
out
xchg
in
shl
movsbl
inc
test
adc
pop
sub
adc
push
shrl
push
push
ret
push
jb
sub
rol
inc
fdivs
fs
std
ret
add
call
mov
add
cmp
addl
adc
or
adc
xorb
push
jl
jmp
aaa
pop
dec
in
in
add
push
sub
jnp
rorl
mov
jecxz
shlb
add
call
daa
adc
decb
adc
lods
iret
xor
sbb
mov
jno
add
mov
pop
sarb
mov
mov
pop
nop
stos
test
or
mov
pushf
jo
or
push
mov
lock
movsb
xor
ret
dec
adc
dec
add
add
jge
mov
inc
adc
arpl
loopne
xchg
pop
stos
push
xor
add
sbb
push
add
test
inc
adc
ret
sbb
fisubrs
add
aaa
push
das
clc
fstpl
push
mov
outsb
test
mov
in
jb
xchg
aam
pusha
bound
add
add
jmp
add
push
jge
inc
test
push
popf
or
inc
push
mov
testl
test
jp
imul
in
andl
out
push
outsl
add
dec
das
les
push
push
ror
mov
sub
and
fldt
inc
loopne
inc
xor
push
add
xchg
push
int3
dec
mov
add
inc
jp
sbb
sbb
sub
sbb
add
clc
jno
fidivl
pop
fmuls
and
mov
ja
push
push
sbb
and
sub
leave
stos
push
rcrl
and
adc
int
adc
cltd
push
pop
addb
or
mov
jno
xlat
jnp
mov
insb
loopne
sarl
cli
out
dec
add
dec
fadds
add
push
dec
mov
nop
xchg
dec
add
jne
imul
push
nop
xchg
mov
and
sbb
cwtl
xchg
lret
or
por
ljmp
mov
leave
cmp
sbb
and
or
xor
pushf
or
popa
adc
sti
fstl
outsb
jo
inc
sbb
sub
add
das
add
andl
inc
adc
add
xor
mov
jo
nop
xchg
orl
fcmovb
add
fs
or
sbb
cmpsb
mov
inc
js
push
xchg
push
mov
push
add
add
es
cmp
mov
add
push
pushf
sti
push
jns
push
push
pushf
pop
pop
cmp
xchg
dec
xor
lods
or
dec
cwtl
addl
pop
inc
jmp
xchg
xchg
arpl
movsb
outsl
or
in
inc
movsb
or
cmp
push
pop
xorb
or
xor
and
hlt
push
xchg
and
inc
repz
stos
addr16
xchg
pop
hlt
mov
and
scas
push
movsb
in
jo
fadds
das
es
cld
and
adc
cmpl
adc
rcll
and
xchg
push
pop
or
xor
dec
push
mov
push
xchg
push
inc
push
adc
mov
and
pusha
pop
and
add
push
xor
dec
rolb
jo
fld
lods
sbb
and
push
cmc
subl
jp
dec
or
inc
adc
test
leave
ja
sub
push
daa
sbb
inc
fidivl
push
add
jnp
and
pop
sahf
xchg
push
cwtl
and
push
divb
and
cmp
lea
mov
sbb
and
push
or
cltd
jg
lds
popl
clc
xchg
cmp
add
jp
inc
aad
xor
cmpsb
xor
inc
xor
sub
add
lods
movsb
inc
adc
ret
call
push
cld
xchg
adc
add
fisubrs
fiadds
mov
sbb
mov
pop
dec
push
pop
int3
inc
mov
insb
xor
mov
jge
clc
cmpsb
je
sub
mov
mov
add
in
mov
xor
out
inc
inc
test
inc
add
dec
inc
enter
addr16
push
ss
ret
dec
push
xchg
jl
nop
pop
mov
mov
xchg
xor
add
pusha
adc
or
test
and
icebp
adc
sub
xor
jg
sarb
js
inc
xchg
adc
repnz
inc
sub
dec
lret
int
add
xor
loopne
pop
pop
pop
mov
inc
test
fsubs
aaa
pop
jmp
sbb
mov
aad
or
adcb
clc
mov
ljmp
clc
mov
mov
mov
loop
and
or
call
test
loopne
dec
and
js
push
insl
adc
daa
xor
xchg
fstps
imul
mov
xchg
and
in
or
sbb
sbb
sub
hlt
enter
hlt
je
in
xor
mov
inc
loopne
cli
lcall
sub
rol
push
mov
add
push
outsb
xchg
flds
ss
ljmp
sbb
setns
xlat
fsubl
fisttpl
xor
nop
jge
lock
ds
je
sub
aad
scas
sbb
outsl
sub
adcl
xchg
mov
cmpsl
or
clc
lret
je
mov
jle
jbe
push
pop
sbb
rcr
pusha
pusha
dec
sti
mov
lcall
repnz
inc
sub
pop
pop
pushl
xor
ret
data16
dec
or
loop
scas
xor
xchg
dec
mov
jle
repz
and
lret
xor
push
xor
sar
jbe
mov
sub
and
jb
mov
add
or
xor
add
sbb
popaw
add
and
mov
div
inc
cmp
jae
or
adc
les
inc
pusha
jmp
mov
push
popa
pop
adc
jae
dec
and
rol
jge
mov
mov
and
cmpsb
icebp
out
js
sbb
pop
inc
or
jbe
pop
add
rcrb
cmp
inc
add
jmp
rcr
inc
les
inc
and
nop
dec
aam
in
int3
test
in
dec
inc
dec
mov
sub
pop
jnp
push
cmp
je
nop
dec
sub
jmp
cmp
rol
push
xchg
pop
adc
stos
inc
cmpsb
sbb
xchg
sbb
jmp
popa
test
mov
cmp
push
ljmp
add
cwtl
or
movsl
test
pop
cmp
dec
lahf
adc
test
adc
and
data16
sbb
sbb
push
jl
ret
cmp
mov
or
add
inc
and
mov
mov
push
icebp
pop
loopne
inc
mov
js
cmp
loopne
scas
test
daa
cmp
or
stos
or
cmp
pop
nop
cmp
cmpl
adc
adc
pop
fldl
or
or
sub
dec
mov
movsl
sub
test
dec
and
lea
jle
xchg
jmp
or
jl
jmp
aas
dec
and
test
sbb
mov
sub
fs
shl
fld
mov
or
push
or
pop
xor
or
cmp
je
or
pop
dec
das
notl
stos
mov
pop
or
push
popa
lret
mov
jbe
ss
int
adc
aam
lea
inc
inc
cmp
and
adc
bound
mov
cmp
adc
rorl
or
push
pop
inc
movl
ja
ret
pop
or
adc
jmp
sbb
jne
fmul
inc
or
mov
inc
enter
mov
incl
or
inc
jo
paddd
insb
scas
cmp
push
adc
xor
scas
inc
sbb
mov
jg
push
movsl
push
sbb
pop
lods
push
sub
mov
push
or
inc
jl
mov
aam
sbb
add
dec
or
cmp
loopne
les
je
and
add
push
sub
aam
cwtl
mov
sbb
fldl
std
push
addb
movsl
cmp
push
fcomp
mov
fstpl
and
insl
clc
push
je
and
adc
je
fldz
mov
cmp
add
cmp
stos
and
pop
fsub
pop
fsubrp
sub
loope
and
imul
push
push
jg
fpatan
add
icebp
and
xor
fs
rclb
scas
add
repz
sub
adc
sub
insb
lcall
aaa
es
cs
jb
adc
outsl
rcll
pop
jmp
sbb
cld
mov
insb
push
push
sub
push
cmp
lcall
push
push
ret
adc
mov
sbb
push
lods
sbb
imul
pop
mov
fstpl
je
jbe
adc
xor
add
shlb
fisttps
mov
xor
outsb
inc
pop
movsl
negl
sbb
and
add
adc
lahf
fnstcw
xorl
sahf
xchg
fstpl
and
jp
and
sbb
push
lea
lar
ja
xchg
scas
push
and
push
mull
notb
test
in
push
jno
adc
in
push
push
adc
push
or
push
fsubrl
push
sbb
xchg
sbb
add
xor
dec
and
adc
fs
xor
data16
and
in
push
test
pushf
aaa
cs
lret
xor
pop
push
loopne
mov
pusha
ja
pop
mov
shlb
mov
js
lds
test
cld
out
ret
adc
inc
enter
or
sub
lea
sub
cmp
adc
inc
sub
mov
imul
ffree
in
or
mov
in
cmpsb
bound
xor
and
jg
int3
mov
mov
loopne
push
pop
aad
and
xchg
jl
push
ja
adc
adc
inc
jbe
lock
push
orl
adc
mov
and
sbb
push
aas
add
lret
in
and
outsb
sub
xchg
and
sub
jbe
jl
adc
and
and
sub
push
cwtl
call
and
mov
out
sbb
scas
add
push
lea
scas
rcl
repz
cmp
repz
es
dec
xor
iret
repz
mov
imul
mov
sub
dec
pop
imul
out
mov
mov
mov
out
out
mov
es
pop
pop
sub
aas
dec
xor
je
sub
or
loopne
inc
sub
sbb
dec
add
mov
incb
jbe
xchg
les
shlb
or
movsl
push
and
sbb
or
adc
adc
push
mov
push
icebp
add
push
xchg
and
dec
addr16
insl
inc
add
add
aaa
push
ds
cs
jl
out
push
push
popaw
add
aam
sub
and
mov
mov
ret
insb
sbb
fildl
jne
push
cmp
and
hlt
adc
shlb
sub
fcoms
mov
and
js
sub
pop
inc
sbb
movsl
adc
sub
and
adc
subl
es
pop
ss
das
js
popa
mov
sub
rcr
add
add
in
iret
shrb
mov
sub
mov
rorl
iret
inc
inc
lods
cmp
add
xchg
in
mov
mov
and
adc
xor
inc
push
aam
jno
stos
and
filds
mov
lds
pop
inc
mov
or
adc
xchg
lret
or
mov
addr16
xchg
add
xor
or
scas
sub
jle
jo
add
sbb
dec
sub
bnd
loopne
push
popa
sbb
call
push
in
add
add
push
or
outsl
adc
xorl
cltd
bound
in
mov
scas
lahf
mov
loope
push
push
or
dec
jg
mov
and
xchg
call
add
sbb
add
adc
faddl
jmp
nop
aaa
mov
shlb
out
xor
push
or
inc
or
addb
sbb
add
out
xchg
jno
and
test
add
fstpt
or
and
or
mov
xor
leave
pop
adc
aam
in
mov
or
pop
call
mov
scas
jp
sub
sbb
push
cmp
push
xor
push
push
movsl
ret
xchg
adc
jl
dec
in
cmpsb
xor
xchg
in
mov
mov
pop
adc
mov
add
adc
xchg
add
hlt
mov
mov
lret
pop
push
dec
adc
sbb
mov
xor
dec
movsl
sub
mov
nop
pop
cmp
into
or
push
mov
xor
cmp
push
icebp
push
mov
in
cmpsb
mov
iret
add
jb
mov
jns
cmp
pusha
sub
mov
pop
cwtl
xchg
add
adc
mov
addr16
push
nop
cmp
icebp
ja
sysret
adc
add
push
nop
iret
push
jl
push
js
jp
rolb
nop
push
adc
add
inc
or
outsb
adc
or
jl
mov
pop
aaa
imul
push
sbb
aam
orb
mov
and
pusha
sbb
and
cs
adcl
loopne
adc
mov
xchg
sbb
test
nop
lods
dec
or
lea
cmp
hlt
pop
mov
nop
and
stc
lahf
pop
sbb
xor
imul
mov
rcl
lcall
ss
xchg
inc
jne
std
push
cmp
jae
adc
cmp
jae
ds
mov
or
push
xor
cmc
orb
test
and
sub
add
jnp
mov
xchg
push
dec
adc
push
inc
enter
call
cltd
lahf
sbb
add
scas
scas
ret
nop
xchg
adc
test
scas
test
cmp
inc
dec
push
sbb
pop
cmp
shrl
mov
or
inc
xchg
stos
nop
xchg
shll
lds
add
mov
mov
mov
xor
test
inc
aad
aas
fstpl
add
inc
xchg
mov
mov
and
add
inc
pusha
es
and
inc
orb
test
mov
add
lods
and
cs
push
add
ret
mov
push
cli
push
inc
push
bound
or
cmp
aad
adc
aaa
or
push
add
cmp
add
adc
or
dec
scas
shlb
rcrl
or
add
add
in
leave
add
popf
punpcklwd
andb
lret
add
jae
push
push
mov
cld
pop
les
push
cmp
cmp
push
jo
push
mov
add
dec
add
push
mov
and
bound
sub
mov
sbb
test
inc
adc
or
mov
addr16
arpl
jge
test
test
jnp
movsb
imul
xorb
dec
out
inc
add
or
add
mov
addr16
jo
or
and
add
dec
xlat
adcb
mov
test
fistps
sbb
movsl
aam
and
pop
ror
jecxz
dec
ss
rcl
mov
test
cs
dec
adc
arpl
pusha
sbb
arpl
dec
out
call
mov
mov
inc
movsl
mov
mov
mov
call
rcl
arpl
sbb
cmp
fldenv
sbb
xchg
popf
popa
out
inc
mov
pop
sub
jne
fldl
call
sub
aam
icebp
bound
loopne
mov
cmp
push
sbb
lret
adc
xchg
daa
add
imul
pop
add
mov
adc
push
into
adc
or
inc
mov
clc
cwtl
pop
fst
jge,pn
adc
adc
pop
push
push
and
sub
add
stos
test
xchg
inc
and
xchg
dec
sub
pop
mov
movsl
ja
mov
mov
inc
pop
inc
test
add
push
xor
xor
in
sbb
rclb
dec
or
pop
mov
das
dec
or
add
dec
adc
or
mov
enter
mov
push
inc
mov
inc
push
leave
pop
sub
loope
dec
lea
inc
pop
movsl
loopne
mov
jp
test
jns
gs
add
in
adc
mov
sub
push
shrl
inc
test
iret
or
and
adc
add
fnstcw
mov
inc
dec
das
icebp
mov
dec
push
push
jno
popa
xorb
int
inc
push
ret
push
mov
pop
call
not
adc
loope
jle
sbb
or
push
inc
or
mov
in
dec
sub
pop
loopne
push
incl
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
dec
jae
fisttpll
pop
jle
adc
jle
xor
push
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
test
daa
mov
fs
pop
idiv
xor
js
in
sbb
clc
mov
push
subb
and
cmpxchg8b
iret
cmpsb
loope
adc
es
jle
push
outsl
push
test
test
mov
add
cmp
movzwl
loop
shr
add
or
dec
or
cmpsl
jb
cwtl
dec
inc
push
lock
jmp
hlt
incb
dec
enter
and
xchg
scas
add
xor
faddl
cmp
daa
cmp
dec
data16
loope
mov
push
push
ret
pop
movl
bswap
and
test
dec
xor
sbb
in
dec
xchg
rolb
inc
lea
popf
fistpl
sbb
mov
or
inc
xlat
rorb
xchg
rorb
fsubr
lods
sub
dec
cmp
inc
push
test
xor
sub
adc
or
mov
shrb
and
and
pop
and
mov
push
push
lcall
mov
rclb
mov
inc
enter
shr
movsb
adc
push
push
push
pop
xchg
lods
adc
jmp
pop
call
xchg
leave
or
mov
jbe
cmovne
inc
adc
push
jl
cmc
fsubl
mov
xor
imul
cs
add
pop
jns
rorb
ucomiss
enter
pushf
sbb
enter
xchg
sub
jb
sbb
push
stc
leave
lods
cltd
mov
push
push
push
push
sbb
inc
inc
fcmovbe
sbb
mov
inc
push
sbb
xchg
out
mov
les
push
push
pop
and
adc
cwtl
and
xor
fnstenv
and
shr
mov
and
inc
ja
or
jmp
xchg
or
inc
loopne
and
and
xchg
or
push
mov
mov
xchg
es
scas
inc
jo
icebp
add
daa
jns
cmpsl
leave
dec
ret
adc
push
sub
mov
in
push
inc
inc
adc
jb
leave
int
and
xchg
pushf
dec
mov
leave
leave
and
pop
mov
inc
or
es
dec
jb
cmp
leave
insl
ljmp
leave
leave
leave
pushf
xchg
mov
jl
int3
push
ret
icebp
in
mov
jne
mov
push
sub
lods
inc
pop
pop
mov
int
ja
enter
dec
fcoms
adc
pop
pop
sbb
scas
and
push
in
sbb
clc
or
push
jp,pn
test
fisubs
mov
push
inc
sti
fadds
es
in
push
shlb
push
inc
mov
xchg
pop
rolb
fldz
mov
shlb
inc
cwtl
icebp
mov
or
add
mov
cwtl
push
xchg
jle
xlat
ret
faddl
add
sbb
adc
cmpsb
ss
mov
rep
or
lods
adc
push
add
xchg
mov
mov
cwtl
push
dec
add
adc
repnz
popf
jp
inc
mov
sbb
enter
loop
movsb
pop
cmp
mov
dec
insb
pop
mov
or
stc
shl
cs
lret
pop
push
popa
sbb
aam
pop
add
fcoms
lock
les
inc
sub
mov
in
push
add
mov
std
pop
nop
cmp
in
icebp
cs
addr16
xchg
fmulp
push
mov
notl
mov
push
push
xlat
jb,pn
in
xadd
adc
sbb
inc
repz
cli
mov
int
jne
les
call
js
or
dec
outsl
push
gs
dec
push
dec
cmpsb
cmp
icebp
and
orl
jg
pusha
fs
add
jnp
mov
sub
add
ret
xlat
pop
xor
pop
test
push
mov
popa
mov
fstl
adc
cmpb
outsl
sub
fsubrs
sub
xchg
cs
dec
imul
xchg
adc
adc
fisubs
inc
ret
add
hlt
xor
sbb
inc
icebp
enter
sbb
rcrb
je
inc
sub
pusha
adc
movsl
sbb
adc
and
and
mov
xor
outsb
push
test
push
jecxz
je
cmp
out
imul
and
jmp
fwait
pop
fisubrs
hlt
pop
ror
cs
insb
or
or
fdivr
sbb
adc
mov
cwtl
adc
or
push
sbb
push
shrd
jmp
fnsave
adc
das
xor
adc
dec
pop
shlb
or
mov
xor
sub
jb
test
pop
or
cmovo
add
or
mov
and
ja
pop
xchg
add
pop
xchg
int3
test
roll
in
add
push
loopne
aad
mov
xchg
lds
in
cmpsb
clc
adc
push
sub
decl
mov
lret
push
fucomip
push
inc
sarb
xchg
push
mov
int3
cmp
aam
sbb
shrb
lods
cmpsl
mov
adc
lds
call
mov
pop
incl
and
test
jl
insb
pop
adc
fcmovnb
pop
jns
or
fnstenv
in
into
or
lret
jecxz
mov
lcall
xchg
ror
in
and
pop
flds
or
cmp
aaa
mov
out
inc
or
pop
adc
push
sbb
push
xchg
fimull
pop
adc
fidivl
cmp
ljmp
sbb
dec
repz
xor
push
call
es
add
sbb
sub
push
push
xchg
xchg
pop
mov
inc
sbb
fcmovnu
nop
mov
push
dec
sbb
aam
je
cmpsl
loopne
xor
stos
push
das
or
dec
jmp
fmull
rcrb
add
nop
mov
rcll
lea
xchg
mov
icebp
dec
sbb
js
pop
test
cs
jmp
sub
xlat
insb
sbb
mov
xchg
adc
notb
sub
cmc
clc
mov
dec
movsb
pslld
add
pushl
jo
push
dec
xchg
lret
dec
loope
dec
push
cmp
or
xchg
fwait
or
mov
es
pop
mov
fcomp
sub
fmulp
rorl
mov
dec
add
lret
mov
fwait
xchg
in
mov
or
pop
adc
mov
test
jbe
in
test
sub
loope
dec
test
jno
xor
les
cmp
and
inc
cmp
nop
add
scas
loopne
pop
or
mov
call
pop
push
es
lock
and
push
dec
and
push
ds
adc
jns
decb
ret
leave
mov
or
add
daa
pminub
add
jne
ja
cs
fsubr
pop
pop
mov
cmp
cmp
push
xchg
dec
iret
adc
or
jae
shrb
gs
xchg
sub
push
cmp
dec
cmp
in
cmp
xor
ljmp
pop
es
sbb
dec
lret
adc
cmp
sbb
add
xorb
and
pop
dec
or
add
mov
test
xchg
sub
mov
sbb
addb
xor
test
dec
testb
js
add
mov
mov
ss
and
fsqrt
mov
or
mov
ficompl
jle
lcall
cmpsl
xor
adc
cmp
je
push
sub
cmp
jp
js
mov
pop
mov
cltd
xchg
dec
ljmp
mov
in
in
lock
in
sub
cltd
add
lods
add
sbb
cmp
in
mov
notb
sbb
push
adc
fst
imul
push
push
mov
aad
xchg
pop
ret
dec
jp
aam
loopne
sub
inc
add
adc
shrl
add
mov
rorb
xor
roll
shrb
mov
jno
and
pop
adc
push
cmp
in
and
push
inc
xor
push
cltd
test
call
inc
fimuls
test
and
scas
dec
ja
dec
adc
mul
fisubrl
setae
jae
ret
sub
mov
lods
lods
rcrl
and
lea
sbb
cwtl
or
fildl
loope
ljmp
mov
mov
pop
je
sbb
or
cmp
xchg
add
push
call
push
pushf
pop
nop
add
push
pop
adc
add
inc
and
and
sti
in
add
aad
xor
mov
es
scas
push
xchg
xchg
ucomiss
loop
adc
pop
xor
cmp
and
push
rcll
fsubr
push
aaa
andl
cmp
add
adc
cmp
aas
test
cmp
add
jne
les
add
add
sbb
dec
loopne
aas
in
and
xchg
test
fistl
or
push
push
lea
and
adc
adc
sub
inc
cmp
mov
mov
pop
sti
pusha
sub
adcb
sbb
mov
daa
nop
cwtl
add
sbb
push
add
inc
mov
ss
xchg
test
outsb
popa
pushl
cmpl
jnp
add
pop
mov
filds
popa
es
fistl
sub
insb
daa
push
or
xchg
inc
sub
or
or
scas
adc
int
andl
insb
loopne
add
sahf
push
or
pop
sbb
xchg
mov
ss
jge
adc
push
or
lods
mov
mov
or
out
add
ja
ret
lods
mov
decb
add
dec
out
ja
cltd
jb
or
aam
shrb
call
xlat
pop
mov
rcr
cmp
inc
dec
adc
push
inc
mov
fisttps
addl
ret
dec
cwtl
clc
lock
stos
push
dec
sub
test
mov
dec
cmp
xchg
jnp
xor
jae
mov
jge
call
pop
rcrl
loop
mov
jmp
repz
subl
mov
paddd
jne
and
jge
lret
cmc
gs
push
fdiv
js
push
lods
xchg
inc
lret
rorl
roll
push
pop
pop
pop
push
ret
std
sbb
adc
jae
and
in
je
dec
push
xchg
repnz
jae
loope
jbe
jo
push
les
out
jo
push
popf
and
popa
mov
adc
mov
push
mov
mov
clc
pusha
pop
sbb
test
push
shr
jb
push
pushf
divl
sarl
arpl
arpl
push
les
jp
int
adc
imul
xor
cmp
and
pusha
test
or
or
movsb
adc
dec
pusha
or
es
sub
jne
mov
add
outsl
dec
cmp
repnz
inc
sbb
or
push
mov
or
rcrl
xor
cmpsl
and
jl
jnp
push
adc
ret
aas
fsub
inc
pop
push
fists
dec
enter
mov
cmpl
mov
add
pusha
mov
inc
pop
sub
std
or
loope
js
jge
push
xchg
mov
and
out
aad
or
jne
insl
sbb
fidivrl
adc
clc
mov
lds
jmp
or
add
mov
adc
in
add
sbb
loopne
push
sub
jbe
push
sub
cmovb
adc
fldcw
sbb
addr16
js
ja
sbb
or
shll
cmpl
mov
fistl
push
sbb
bound
sub
das
push
dec
sbb
stc
jmp
fs
adc
ret
ljmp
push
mov
roll
push
packsswb
inc
sub
test
lods
imul
lret
stos
dec
inc
nop
push
xor
push
mov
lret
into
fimull
pop
dec
xor
mov
or
sarb
push
and
sbb
add
add
test
insl
adc
out
inc
push
cmc
orl
and
ret
gs
mov
adc
mov
push
ja
fwait
add
xor
inc
inc
xor
sub
mov
cmpsl
mov
fidivrs
aaa
shr
and
enter
es
sbb
or
xchg
add
in
sub
test
lock
push
cmpb
mov
dec
daa
pusha
adc
cltd
push
jnp
mov
gs
ja
add
add
out
jne
inc
inc
das
inc
and
insb
pop
sahf
cld
dec
addr16
inc
or
inc
loopne
or
testb
push
and
fmuls
or
pop
pop
pop
push
xor
popa
or
adc
xor
jb
insl
lea
lret
or
push
mov
fcoml
out
into
js
sbb
and
in
and
cmovs
ret
cltd
inc
cmc
lods
pushf
adc
ss
add
xor
ja
pop
xlat
sbb
xor
add
sbb
lock
sbb
jb
adc
les
movsb
jns
cmp
sbb
inc
xlat
xchg
sbb
rorl
mov
ret
ret
psrlw
adc
out
or
mov
rcr
adc
sub
jo
pop
push
ds
loop
push
adc
repnz
dec
sbb
or
dec
xchg
ret
loop
inc
mov
inc
xor
sub
mov
sbb
sbb
dec
xchg
lret
andb
scas
inc
or
inc
sbb
mov
rcl
xor
push
inc
cwtl
lock
stc
push
jae,pt
mov
inc
fstps
add
and
insb
test
cmp
lea
cmp
test
pop
test
rcrl
int3
jbe
rorb
imul
js
test
inc
mov
dec
je
push
jne
rolb
sbb
jge
rolb
loope
add
dec
pop
adcl
and
iret
push
mov
mov
roll
mov
sub
jge
and
outsb
imul
sbb
ret
xlat
push
xor
lea
ret
or
aam
xchg
jae
fsubl
inc
xlat
push
inc
data16
xchg
iret
cmpsl
sub
lock
mov
divl
sbbl
and
mov
push
mov
and
insl
xchg
jp
or
repz
mov
fcompl
rcrl
inc
inc
adc
or
mov
rclb
outsb
aad
cmp
ja
add
addr16
pop
mov
sub
daa
leave
or
pop
xor
mov
xor
add
cmp
ret
loop
sbb
mov
loopne
add
xlat
and
pusha
xor
cmp
or
pop
lods
ds
or
pop
jl
pusha
stos
and
repz
sub
clc
mov
mov
je
push
mov
pop
adc
sbbl
stc
sbb
cmc
sub
aam
push
or
testb
push
pusha
fldt
loopne
out
xor
add
sub
xor
imul
xchg
pop
inc
ret
add
insl
pop
in
push
rolb
mov
or
push
inc
add
inc
mov
push
daa
rcrl
and
mov
pop
add
mov
sbb
pop
aam
xchg
je
lea
call
or
jmp
fsubrl
ja
add
dec
xor
sbb
pop
sbb
or
adc
or
add
es
sbb
es
inc
adcl
add
int
inc
mov
cmpsl
jno
push
dec
push
mov
or
jne
ret
clc
jbe
and
push
xor
push
sahf
clc
mov
imulw
cmpsb
clc
repnz
hlt
cmp
xor
cmc
pop
shr
or
jmp
push
das
and
xor
add
loopne
sbb
adc
jecxz
shlb
movsb
jg
or
mov
xor
addl
add
inc
leave
lea
lods
cld
rorl
inc
push
fsubrs
ja
loopne
mov
fldl
mov
lods
adc
and
sbb
xor
fsubl
xor
in
inc
add
cmp
push
push
add
push
daa
xor
sbb
mov
and
mov
adcb
jbe
test
sbb
gs
cmp
pop
not
sbbl
cmpb
push
movsb
rol
push
or
cmp
xor
sub
rorl
adc
push
cli
adcl
cmp
pop
pop
sub
push
sbb
jnp
out
pop
push
mov
clc
cmp
out
mov
dec
inc
ja
or
sbb
dec
scas
push
fisttps
mov
sti
add
ret
push
mov
xor
mov
pop
cltd
dec
jo
mov
cmc
dec
pop
pavgw
cmp
dec
ja
shlb
lret
cmp
js
adc
sub
add
sbb
cmp
add
xchg
data16
decl
push
mov
cmpl
std
test
push
dec
xchg
bound
clc
xchg
jecxz
fwait
outsl
cs
cmp
jb
ljmp
cmp
and
and
add
cmp
xchg
or
cmp
mov
subl
xor
inc
mov
mov
loopne
pop
data16
arpl
jo
loopne
seta
or
push
xor
inc
idivb
push
in
xor
push
and
or
jg
xor
sub
hlt
cmp
jo
lock
jno
cmp
das
repnz
test
xchg
xchg
ss
sahf
insb
jae
push
add
jmp
and
add
or
sub
jl
push
mov
scas
mov
jo
inc
in
repz
fmuls
mov
xor
push
or
pop
loop
or
decb
pop
das
adc
and
dec
add
rcll
inc
sub
dec
and
jo
fidivrl
dec
jb
mov
inc
dec
lods
add
inc
pop
call
push
add
pop
les
shlb
movsb
jge
xchg
gs
or
xor
scas
mov
scas
sti
es
repz
cltd
inc
scas
cmp
xor
mov
hlt
dec
pop
xor
add
sub
addr16
call
or
test
je
jl
lods
mov
ss
sbb
push
and
sbb
add
xchg
pop
adc
xor
shll
clc
loopne
call
xchg
pop
add
cmc
xchg
mov
xchg
xchg
int3
pop
adc
dec
or
out
add
loopne
test
sub
sub
sbb
aad
sub
add
aam
cli
mov
mov
add
mov
imul
cwtl
xor
inc
or
leave
mov
lock
jne
push
push
mov
outsl
push
imul
add
fdivl
lea
rorb
add
cmp
sbb
aam
scas
or
cltd
sbb
shlb
jecxz
add
push
adc
movsb
mov
inc
fcomps
call
adc
xor
sub
sbb
ja
cmp
les
xor
push
inc
fstpt
pop
sub
cmpsl
nop
xchg
ret
rcrb
pop
fcmovnbe
out
xchg
ret
push
lock
dec
lods
dec
cmp
xchg
and
pop
or
sub
lea
addl
roll
adc
fdivs
inc
jmp
aam
or
fwait
cmpsl
add
or
sub
test
mov
dec
xor
mov
lret
jne
pop
sbb
push
popa
push
adc
add
daa
shrb
loopne
lds
sbb
add
add
in
add
mov
insl
js
mov
pop
jmp
mov
mov
mov
inc
clc
lock
fwait
and
add
shll
mul
inc
lds
in
add
sub
clc
jns
test
mov
loopne
out
and
fs
push
push
adc
addb
inc
jmp
movsl
mov
sbb
call
xchg
in
xchg
repz
les
lods
call
divl
int
leave
inc
jbe
sub
adc
imul
push
shr
dec
rolb
nop
mov
shl
push
xchg
test
adc
mov
sarl
int3
push
das
mov
inc
pop
pusha
test
call
and
int3
out
mov
into
movsl
or
fcomps
mov
add
push
adc
pop
clc
inc
test
jo
dec
xchg
sbb
pop
mov
cmp
dec
shrl
and
and
adc
sub
test
xchg
dec
xor
enter
enter
sub
ljmp
mov
push
inc
sbb
cmp
or
mov
adc
pop
setge
das
mov
cmp
mov
xor
aam
popa
or
pop
mov
sbb
sbb
popf
nop
jne
push
dec
rolb
adc
je
in
push
pusha
iret
mov
inc
orl
ljmp
xchg
arpl
add
and
xor
bound
sub
push
xor
or
dec
aas
ss
jmp
mov
arpl
mov
movsl
inc
dec
leave
dec
or
push
push
sub
xchg
lret
dec
out
push
or
in
in
jmp
push
test
mov
out
in
add
into
ret
cltd
cmp
jo
adc
cld
test
xor
or
add
aad
daa
js
add
fstpl
lods
jp
dec
push
lock
movsb
pop
daa
add
push
inc
cmp
add
cli
xor
inc
push
sbb
je
sbb
andl
dec
movb
mov
adc
xchg
insl
test
ret
xchg
repnz
or
mov
lea
daa
sbb
cld
add
jmp
mov
or
mov
test
add
pop
rol
push
and
pop
test
test
add
enter
iret
jbe
mov
mov
lret
lea
mov
ja
sbb
add
into
stos
mov
ds
mov
xor
enter
or
idivb
mov
adc
inc
mov
cmpsl
sub
fdivr
cmp
push
pop
filds
pop
clc
jne
push
push
and
imul
popa
push
decl
into
mov
mov
scas
mov
and
sub
scas
cmp
jle
scas
jmp
mov
scas
ret
cmp
jb
nop
xchg
pop
movsb
sbb
das
or
push
cmp
ret
mov
mov
mul
inc
or
rol
pusha
xor
jbe
and
in
test
rclb
inc
jmp
test
sbb
dec
pop
jmp
mov
jbe
mov
add
push
jbe
ss
push
adc
push
xor
pop
adc
inc
sbb
pop
lea
cmp
jbe
jbe
shll
or
add
imul
xchg
push
rcrl
out
lea
pop
inc
call
add
or
sub
orb
adc
sbb
aas
mov
xor
mov
and
loop
jmp
push
inc
call
cltd
sti
push
push
js
push
and
jl
xor
arpl
cmp
sub
lahf
mov
lret
lock
xchg
mov
inc
jb
push
push
pop
push
fcoms
adc
leave
sbb
pusha
xor
nop
xor
lret
iret
test
or
fildl
jmp
sub
adc
add
nop
insb
and
adcl
sbb
mov
inc
mov
adc
mov
les
sbb
jecxz
sbb
adc
clc
dec
push
iret
cmp
jne
pushf
andb
push
pushf
sbb
jno
movsl
add
dec
pop
push
adc
loope
lcall
inc
sub
and
add
or
sbb
push
leave
inc
inc
shrb
and
in
adc
rclb
and
fcoml
sbbb
jae
add
push
pushf
scas
cltd
jmp
loope
bound
mov
test
pop
cli
out
pop
mov
push
xor
popa
loop
fwait
les
pop
rolb
mov
jno
loope
out
aad
mov
aam
andl
dec
sar
sahf
add
stc
cltd
add
stos
dec
mov
push
aam
add
ss
mov
lods
dec
push
adc
cmp
fwait
push
xor
mov
insb
add
sbb
push
movsb
shlb
lock
testl
jnp
cmpl
ds
out
inc
lea
and
xchg
adc
add
and
jne
xlat
lret
mov
sahf
pop
int
inc
pop
sbb
add
fisttpll
mov
gs
add
hlt
dec
shr
push
mov
rclb
int3
das
lret
pop
mov
sarl
pop
add
jmp
std
add
adc
setns
adc
cld
add
jne
cmp
jae
dec
mov
cmp
jmp
ss
mov
outsb
popf
aas
fs
mov
test
pop
push
mov
insb
push
call
sub
dec
loope
popa
xor
popf
sub
insl
mov
push
push
push
stos
out
xchg
test
popf
inc
mov
cmp
xor
or
push
adc
add
sub
dec
and
xchg
shrl
cld
ja
std
neg
pop
sbb
pop
inc
sub
push
rolb
cmpsb
nop
cwtl
pusha
mov
cmp
push
adc
sub
movsb
pop
addr16
sbb
sbb
inc
fwait
cmp
cmpsl
loope
pop
sar
jae
pop
mov
faddp
push
push
adc
popf
mov
aas
push
or
ja
sub
adc
les
fadd
ret
ret
mov
mov
lea
xchg
mov
mov
add
ret
pop
sbb
push
push
cltd
cmp
add
call
add
push
cmpb
dec
je
push
and
mov
sub
mov
cmpsb
mov
mov
push
cmpl
sub
cmp
xlat
es
mov
push
sbb
rolb
int
sbb
jge
cmp
in
stos
or
sub
xchg
push
adc
pop
ljmp
loopne
mov
call
notl
adc
adc
xor
add
popa
hlt
movsl
mov
daa
push
nop
inc
ss
shll
and
adc
pop
test
stos
pop
roll
fbstp
mov
mov
out
pushf
xorb
sbb
sbb
push
push
push
lret
cmpsl
push
pop
inc
enter
jo
dec
sbb
rorb
inc
cli
push
push
or
cmp
das
push
push
loopne
cmp
mov
push
js
or
or
call
fcmovb
mov
push
inc
int3
nop
dec
or
cld
and
mov
add
cmp
test
gs
addr16
jp
dec
repnz
bound
shlb
inc
push
mov
add
stos
mov
push
popf
adc
nop
rcl
or
mov
push
bound
lea
in
out
mov
in
sub
or
aad
pushl
mov
call
or
test
jnp
hlt
scas
pop
mov
mov
pop
xlat
fsub
jae
xchg
mov
mov
inc
mov
test
cmp
jns
sub
aas
push
push
daa
adc
mov
push
jge
push
fistpll
push
cmp
jbe
mov
call
loopne
and
add
mov
lret
sub
dec
sti
rcr
pop
xchg
enter
xchg
and
mov
insl
shl
push
aad
fmuls
hlt
jnp
lret
pop
dec
add
sbb
mov
push
movzwl
inc
fdecstp
outsb
loopne
adc
cmp
out
cmp
in
push
mov
std
pop
jp
adc
pop
cmp
sub
push
xchg
pop
mov
test
cmp
push
sbb
std
mov
lret
sub
test
aas
xchg
mov
fimuls
sub
jbe
addl
cmp
pop
adc
adc
in
add
fisubrs
sbb
inc
sbb
je
xchg
inc
cmp
or
fsubs
or
push
loop
hlt
or
enter
cmp
push
outsb
subl
mov
fcmovb
jl
mov
clc
enter
cmp
repnz
pop
nop
cld
mov
sub
add
std
out
scas
add
pop
mov
sti
rep
movsw
push
cmp
add
cld
movsb
mov
push
inc
jl
mov
adc
ljmp
nop
fadd
mov
inc
mov
adc
movb
pop
push
lea
cmpb
out
pop
sub
loopne
shr
push
mov
mov
test
sbb
repnz
or
pop
movsbl
xor
stc
outsb
mov
push
push
or
jb
repnz
out
shlb
jbe
push
cld
je
ret
inc
cwtl
jnp
push
sbb
sbbb
gs
mov
sub
bound
mov
icebp
cmpsl
inc
mov
lods
cmp
jae
jge
sarb
movl
pushf
xchg
and
xor
cmp
push
adc
sbb
or
xlat
aas
add
sub
outsl
push
cmp
xor
popf
inc
push
xor
in
jg
cmovno
or
and
pop
mov
cmp
std
push
shrl
decb
mov
mov
lcall
xabort
sbb
mov
or
jmp
mov
xchg
mov
ficoml
xchg
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
int
int
or
jmp
and
pop
ja
mov
push
lds
mov
add
popa
sub
cmove
jns
xchg
insb
mov
sbb
push
and
pop
popa
out
sahf
out
jno
orl
test
jns
out
mov
mov
sahf
out
rcl
fcmovu
sahf
out
sahf
in
out
repz
std
cmp
sarl
pop
or
push
mov
scas
repz
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
repz
add
adc
adc
mov
mov
mov
sbb
cmp
mov
cmp
jle
mov
popa
jecxz
lahf
mov
push
xlat
imulb
mov
js
xor
out
test
js
push
sub
cmpsb
push
ja
outsb
mov
xor
nop
jmp
call
or
test
iret
adc
cmpsb
clc
lock
xor
dec
mov
aaa
mov
cmp
jbe
inc
sbb
lods
or
mov
push
and
pop
movd
dec
xchg
sti
jge
sub
or
pop
push
sub
or
xorl
jge
sarl
cs
js
icebp
loope
test
dec
aas
dec
dec
inc
lock
jo
aaa
in
sub
add
add
dec
testl
loopne
arpl
xor
xchg
mov
mov
push
dec
ljmp
out
dec
dec
repz
jo
nop
outsl
add
dec
je
sub
or
sti
add
push
xchg
add
add
push
lods
and
inc
enter
mov
daa
nop
fldl
scas
xor
incb
fsts
and
push
push
push
push
or
pop
mov
sub
jecxz
mov
mov
add
mov
pop
push
jmp
idivl
sub
push
sub
add
add
mov
dec
leave
xor
ja
push
and
pop
mov
and
cmpsb
adc
jne
pop
js
mov
lock
outsl
je
adc
outsl
jmp
push
add
test
dec
movsl
flds
or
sbb
insb
add
aam
inc
loopne
sbb
test
pop
sub
or
rclb
ss
pop
sbb
push
xlat
sbbl
mov
or
add
movsb
push
jne
mov
pop
or
and
loopne
or
and
and
sbb
inc
sbb
pop
scas
add
fiadds
sub
sbb
jne
imul
aas
inc
xchg
les
roll
aad
mov
loopne
sbb
outsl
loope
adc
jmp
pop
test
movsb
adc
dec
inc
sbb
or
and
shlb
mov
cld
push
mov
je
dec
xchg
je
xchg
lock
mov
shlb
clc
adc
out
popf
in
cmp
cmp
push
adc
sub
or
pop
rclb
adc
xor
shrb
dec
ljmp
add
mov
mov
test
or
xor
cmp
scas
mov
inc
pop
push
fists
gs
lock
cmp
push
mov
add
push
push
shlb
in
push
add
int
xor
sub
sbb
and
or
and
loop
and
inc
pop
add
xor
push
dec
icebp
or
aaa
mov
dec
stos
mov
std
add
adc
cmp
in
lret
scas
mov
cmp
xchg
jecxz
adc
pop
repz
xchg
loopne
les
or
jmp
cmp
push
add
dec
xchg
loop
push
inc
and
inc
inc
cltd
add
inc
les
fpatan
shlb
shll
out
fsubl
sbbl
in
loopne
int3
mov
dec
imul
xor
mov
mov
gs
mov
push
sarb
dec
lret
cmpsb
add
inc
mov
adc
cmp
jbe
cmp
push
movsl
pop
mov
xor
inc
adc
cmp
jne
outsb
mov
fisubrs
push
inc
xchg
pop
jmp
xchg
sub
mov
inc
sub
pop
push
test
pop
push
out
pop
inc
sti
shl
inc
sub
in
adc
or
or
bnd
aas
insb
and
nop
push
pop
jmp
loopne
cmp
sbb
add
mov
push
push
negb
lock
orl
loopne
loopne
push
xor
cmp
xor
add
and
out
push
enter
cwtl
cmp
or
div
add
sarl
sbb
leave
test
flds
xor
dec
lcall
adc
subb
jp
ljmp
cltd
push
xor
sbb
or
pop
push
push
mov
dec
pop
mov
rcrb
fstps
pop
adc
pushl
inc
xor
fldcw
push
add
or
pop
inc
dec
arpl
push
repz
lahf
pop
xchg
mov
adcb
aaa
inc
jecxz
or
mov
mov
cmp
xchg
xor
mov
in
pop
push
jno
sarl
cmp
insb
inc
nop
and
mov
sub
add
or
aad
icebp
repz
test
sahf
pop
xchg
cltd
push
push
pusha
fidivs
int
push
xchg
imul
cmpsl
loope
add
adc
nop
xchg
adc
iret
and
ds
jge
fisttpll
inc
and
fisttpl
repnz
in
add
into
cmp
mov
popf
aas
push
testb
cmp
dec
add
push
enter
push
mov
stos
xchg
xor
xlat
lea
inc
negl
test
add
mov
push
pop
cmp
xchg
dec
adc
jo
call
pop
mov
je
in
jmp
mov
fildl
xchg
or
xchg
xchg
rcrl
rorb
add
js
fsubs
inc
xchg
xor
xchg
lret
stc
mov
dec
aam
movsb
push
lcall
mov
or
cmpsb
and
out
adc
es
jle
mov
xor
or
jne
push
decl
add
jmp
cmp
je
divl
push
adc
fisubl
jnp
nop
and
add
mov
jge
cmc
das
movsl
insl
js
cld
testl
xor
push
inc
notb
mov
call
push
sbb
pop
push
sbb
repnz
cmp
pushf
and
mov
inc
sub
or
pop
mov
push
add
inc
cmp
pop
push
cmp
pusha
pop
pop
push
es
mov
inc
nop
xchg
dec
push
sbb
fcmove
sub
scas
mov
in
cwtl
shlb
pop
cmovs
inc
push
fistpll
jl
xorl
ja
add
and
jmp
and
xchg
or
and
xor
sub
dec
lea
xchg
dec
js
sub
cmp
sub
movsl
xor
scas
or
add
sbb
lret
daa
or
mov
testl
push
dec
pop
xor
test
xchg
sbb
mov
push
push
sbb
or
ror
xchg
xor
sbb
xor
jb
sbb
or
in
pop
adc
push
cmpsb
lock
adc
or
movzbl
lock
mov
pop
pop
xchg
lods
pop
cli
in
adc
xor
shl
inc
xchg
icebp
fld
add
out
andb
nop
subl
mov
mov
gs
out
subb
xchg
cwtl
cltd
movsb
cmp
pushf
aas
mov
pop
int3
icebp
test
pop
xchg
icebp
nop
xchg
lods
lock
and
mov
mov
xchg
sarb
les
mov
cmpsb
mov
rcrb
aam
xchg
push
es
loopne
popa
dec
orl
adc
mov
cs
pushf
test
gs
incl
mov
popf
inc
incl
jl
sub
rorl
femms
mov
test
jg
jl
in
mov
sub
xchg
xchg
je
gs
mov
push
cmp
jl
sub
leave
xor
rorb
or
je
dec
jp
out
mov
fisttpll
sbbl
xor
rorb
mov
cmpsb
loopne
cmp
sti
lods
sub
add
and
lret
fiadds
xchg
int3
push
pop
jl
jmp
out
push
popa
addr16
lods
lret
xchg
aaa
add
sbb
mov
mov
sti
cmp
je
or
jge
leave
mov
inc
jns
call
adc
jmp
rcrl
mov
adc
jo
in
shrl
push
inc
xchg
or
jae
lahf
and
daa
insb
pop
jo
insb
je
js
sub
mov
sbb
push
push
lods
dec
gs
call
fnstcw
sub
or
sub
lods
sub
jns
rolb
cmpsb
or
push
outsl
jp
popa
sarb
push
pop
cmp
stos
movsb
mov
push
cli
in
popa
add
jle
mov
jle
es
repnz
ljmp
neg
pop
pop
sbb
mov
decb
pop
jno
ss
adc
lods
jle
mov
cmp
pop
add
pop
pop
sub
add
outsb
pop
lret
call
aam
pop
js
cmpb
and
mov
js
add
pop
jne
push
inc
pop
inc
enter
rclb
sub
sbb
push
add
divb
cmp
cmp
loop
and
shrl
mov
in
mov
mov
loop
or
add
lods
hlt
enter
mulb
jp
enter
std
ds
dec
pusha
or
nop
ja
adc
test
inc
lock
sub
push
pop
adc
pop
dec
adc
call
adc
add
mov
bound
imul
inc
pusha
push
sbb
xor
push
or
push
jbe
fwait
push
push
jnp
dec
add
mov
sbb
ss
adc
push
pop
jno
sub
call
add
pop
lcall
pop
or
xchg
mov
jne
add
fldenv
adc
add
shrb
in
add
jge
imul
xchg
pusha
mov
daa
xchg
mov
inc
inc
xchg
sub
dec
loopne
or
cs
and
ret
ret
xor
out
adc
inc
sbb
push
ss
push
push
imul
neg
cmp
jo
inc
pusha
sbb
jecxz
and
push
mov
mov
pop
sbb
jmp
adc
mov
xchg
or
addb
inc
int
rcrb
jne
inc
sub
xchg
rorl
or
lock
lods
fdivrs
jg
pop
loop
test
rol
push
xor
shll
push
or
add
adc
mov
jg
shll
je
sbb
sbb
insb
xchg
int
lret
mov
mov
mov
xor
aad
adc
add
xchg
into
cltd
daa
or
bound
sbb
sbb
call
push
push
adc
in
inc
add
inc
punpcklbw
add
sbb
adc
adcl
popa
cmpsl
mov
jp
mov
push
and
jmp
imul
pop
insl
jge
jle
jne
inc
iret
sarb
mov
xchg
inc
lcall
cmp
jecxz
fisttpl
dec
ss
cmp
leave
dec
test
mov
cmp
add
xor
jo
in
pop
adc
cmp
js
out
pop
imul
inc
xchg
fnsave
push
xlat
xor
adc
mov
adc
mov
adc
sub
adc
icebp
ss
xchg
push
mov
adc
adc
hlt
repz
xchg
dec
mov
aam
jae
and
mov
clc
cmp
add
or
jmp
dec
dec
popl
mov
dec
je
mov
lods
push
rcrb
sbb
ss
cmp
mov
ret
sbb
push
mov
jae
or
mov
ss
add
shlb
pop
push
push
xor
add
xchg
add
iret
pop
ret
adc
insb
rcrl
push
call
shlb
test
icebp
aas
call
xchg
icebp
outsb
pusha
xor
subl
jle
sarl
test
dec
pop
sbb
je
xchg
inc
xor
ja
mov
aas
jmp
inc
and
aad
pusha
aad
inc
or
into
sub
and
into
push
inc
daa
or
xorb
psubusb
rcrb
lret
enter
pop
push
popa
mov
cmp
add
push
xor
pop
inc
sbb
and
mov
xor
or
shlb
dec
cmp
push
and
out
daa
adc
push
pop
sbb
imul
sbbb
adc
jge
pop
ss
inc
and
jle
dec
ds
jl
sub
push
mov
xchg
push
sbb
push
mov
adc
inc
fs
inc
dec
clc
in
push
push
mov
addr16
aas
push
fnsave
xor
add
incl
fstl
fldz
fcomp
fnstsw
push
add
loopne
loopne
mov
jmp
fstpl
mov
insb
test
nop
mov
adc
inc
roll
test
sub
push
push
or
xor
movsl
and
aam
mov
jo
mov
lock
lock
ljmp
or
mov
inc
mov
sub
and
movsb
dec
aam
lea
mov
xchg
aam
adc
imul
cld
pop
push
mov
icebp
popa
ja
mov
fistpl
sub
xchg
clc
cmp
inc
cwtl
mov
lods
es
jmp
and
inc
or
lods
test
outsl
iret
add
mov
sahf
mov
daa
xorb
int3
push
add
push
outsb
imul
mov
push
cld
rcrb
ja
hlt
lea
push
mov
repz
inc
cmpb
sti
xor
shl
fimuls
enter
mov
sub
loopne
in
push
fiadds
rcrb
stc
add
cmp
or
push
jnp
mov
add
sub
lcall
push
jne
mov
jmp
xchg
jl
mov
inc
push
inc
xor
xor
ds
pushw
leave
mov
daa
in
das
jnp
adc
gs
xor
imul
add
int
adc
or
or
inc
or
mov
add
mov
push
cs
rclb
dec
add
movsb
mov
cwtl
mov
or
imul
dec
xchg
fidivrl
mov
sub
roll
mov
add
idivb
pop
out
popa
arpl
imul
js
gs
push
push
mov
or
addl
and
sti
mov
xchg
movsl
stos
xchg
and
clc
add
or
aaa
subb
je
push
push
popf
xchg
jmp
mov
push
cmp
jne
inc
repnz
xlat
xchg
jg
jb
push
and
scas
inc
daa
dec
pop
jb
adc
or
ficoms
or
inc
in
xchg
xor
xchg
pop
or
mov
pop
xchg
orb
dec
add
negl
aas
mov
imul
mov
inc
push
testb
pusha
sbb
das
dec
push
cs
push
cmpsl
stos
mov
or
xor
add
push
push
bnd
je
in
inc
sub
and
test
test
pop
mov
in
fdivs
and
jo
test
xor
pop
sub
xor
or
and
xchg
push
pusha
inc
or
sub
or
pop
sub
xchg
sub
push
sbb
mov
sbb
es
jg
movsl
test
pop
movswl
cmp
jne
sub
mov
imul
adc
test
in
cmp
cmp
push
inc
inc
mov
push
test
adc
in
sbb
adcb
push
clc
sbb
pop
pop
fiaddl
loope
into
je
xor
fcmovnbe
lret
jmp
cmp
mov
xor
mov
and
test
in
cmpl
push
or
mov
lods
mov
je
rcl
fcomp
pusha
or
orl
add
push
cmp
or
add
enter
lcall
or
add
iret
aas
je
cmp
jb
imul
inc
js
into
ja
outsb
popa
insb
test
push
dec
jp
mov
dec
push
push
pop
jb
insl
cmp
mov
add
cmp
xor
sub
xor
push
sbb
cmp
push
dec
xchg
or
dec
mov
inc
and
push
ds
lret
outsb
and
orb
mov
clc
xchg
xor
lods
sub
dec
jne
outsb
and
or
ljmp
inc
jge
xchg
sbb
inc
ret
mov
mov
dec
data16
call
sub
and
pop
xchg
dec
ret
dec
inc
scas
aad
popa
pop
and
inc
jb
outsb
hlt
inc
arpl
and
lahf
dec
aam
xor
xor
xor
enter
pushf
in
ret
push
and
xchg
jno
ret
dec
xor
push
pop
dec
pop
or
addb
dec
mov
js
iret
cmpsb
push
popf
adc
sub
or
rolb
fldlg2
dec
aad
fs
and
adc
test
add
sub
inc
loopne,pt
scas
xchg
lock
or
jno
sbb
subl
in
mov
pop
loop
in
adc
mov
test
push
pop
push
lods
in
cmc
mov
mov
enter
adc
mov
sbb
fsubrs
push
mov
mov
cmp
scas
add
mov
inc
das
pop
or
test
add
mov
or
ret
fidivrl
es
bound
imul
jl
popf
adc
sbb
fmul
andb
insl
lret
inc
and
movsb
in
sub
and
inc
xor
xchg
rorb
call
mov
xchg
gs
call
ret
add
xchg
xchg
movb
or
xlat
loopnew
sub
sub
mov
add
dec
les
mov
or
call
xor
lods
xor
push
stc
inc
rolb
and
mov
loop
inc
push
xor
push
or
popa
add
movsb
pop
es
rcrl
lret
mov
dec
dec
subb
outsl
push
inc
sub
or
mov
arpl
je
mov
mov
mov
jbe
in
add
jnp
adc
mov
and
pop
inc
dec
cmp
xor
fcomip
push
push
je
roll
sub
movl
xchg
xchg
jle
lahf
lock
sahf
and
lahf
sbb
xor
movsb
mov
mov
orb
repz
sbbl
and
movsb
mov
in
push
or
or
cmp
add
es
inc
inc
mov
adc
movsl
xor
push
fildl
loop
xor
mov
xor
add
mov
pop
mov
or
push
cmp
pop
or
rorb
je
add
push
jno
push
dec
or
cltd
inc
pushf
jae
fadds
pop
push
xchg
push
stc
push
lods
add
adc
mov
sbb
add
sub
mov
shll
jmp
mov
mov
push
fs
jg
sbb
fidivl
jae
test
aas
in
push
push
mov
les
cmp
gs
in
push
movsl
add
test
add
in
gs
xchg
dec
sub
push
or
adc
lods
cmp
xor
lods
gs
incb
or
les
and
loopne
ss
or
outsl
inc
jl
and
mov
imul
cmpsl
dec
js
or
insl
jge
push
fsubrl
divb
je
in
test
mov
add
adc
push
arpl
idiv
add
movsb
fmuls
push
push
mov
loopne
ss
cs
test
fsubl
jmp
mov
and
hlt
inc
dec
test
rolb
popa
int
add
add
fisubrs
xchg
push
mov
shr
or
lret
add
add
fnstcw
inc
imul
ret
mov
pop
loop
mov
test
and
jo
test
fisubrl
adc
popa
mov
loopne
lods
sbb
mov
or
test
mov
xchg
test
mov
outsl
sbb
sbb
pushf
xchg
mov
or
outsl
cmp
jns
int
xor
or
sub
push
clc
out
arpl
and
add
leave
or
pop
pop
push
sbb
jo
addl
inc
sbb
dec
push
rcrb
inc
testb
xor
into
push
popf
je
sub
insb
push
and
ds
pop
sub
inc
jae
lret
jno
inc
xchg
loope
roll
jl
push
clc
pop
xor
push
pop
js
mov
xchg
jo
or
movl
adc
ljmp
aam
or
dec
or
mov
xor
add
std
pop
xchg
xor
xchg
jo
jl
inc
daa
jno
fstl
gs
xchg
add
sbb
clc
add
push
in
push
out
push
add
cmp
inc
ljmp
mov
pop
in
cmp
stos
and
mov
incb
jne
dec
push
xchg
push
xor
pop
fbld
js
sbb
or
stos
lods
out
dec
pusha
mov
lret
and
push
mov
push
inc
shlb
lahf
push
insb
xor
adc
mov
mov
pop
test
je
or
inc
push
and
fstl
repnz
sti
cltd
or
fmuls
cmpsl
push
movaps
repnz
lfs
lcall
fs
cmp
dec
es
xor
aam
daa
imul
add
jno
loopne
fsubr
nop
fwait
cmp
and
loopne
adc
fs
inc
adc
movsl
pop
xor
and
mov
rolb
loopne
sub
je
test
sub
xchg
jmp
ss
aam
mov
clc
pop
rcr
mov
adc
rclb
cmp
or
or
je
fs
inc
cmp
or
xchg
pop
and
aam
call
and
sub
and
or
loop
pop
mov
sub
cmovo
imul
sbb
xchg
and
cltd
cmc
gs
je,pn
add
in
movzbl
call
add
mov
inc
scas
push
and
cld
cmp
mov
mov
push
jl
mov
rcll
sub
leave
iret
adc
mov
out
pop
lock
inc
mov
sarb
mov
sbb
mov
mov
cmc
into
loopne
aas
or
cld
push
cmpsl
pop
add
insb
and
jl
push
pop
loopne
or
mov
aas
add
test
sbb
in
jg
xor
push
mov
push
inc
fdivrs
jmp
adc
add
imul
xor
call
mov
add
and
adc
rorb
push
aaa
sub
pop
enter
jne
adc
sub
or
je
mulb
mov
ja
sbb
lea
pop
sbb
fs
add
mov
lea
mov
nop
and
mov
push
testl
jno
call
xlat
push
cld
mov
jge
in
mov
pop
clc
dec
mov
mov
loop
lods
hlt
stos
xorb
xlat
push
leave
push
insb
gs
rcrb
mov
mov
jo
inc
add
subl
and
push
xor
stos
mov
sbb
add
adc
insl
das
std
pop
les
movsb
dec
jecxz
cmp
int3
arpl
pop
sbb
iret
mov
mov
xchg
mov
out
jo
shrb
push
mov
int
inc
push
or
movsb
mov
inc
cmp
outsl
test
inc
loopne
jno
push
xchg
mov
test
call
fs
lret
ret
mov
mov
loopne
ret
adc
xor
push
fwait
pop
adc
add
pop
test
pop
loopne
dec
lret
mov
test
es
fisttpll
and
xor
add
add
mov
sahf
gs
mov
test
pop
inc
stos
movsb
out
adc
push
jae
mov
int3
and
test
pop
or
mov
filds
out
or
clc
pop
mov
adc
xor
movsl
mov
pop
cmp
sbb
or
xchg
inc
adc
aad
adc
jns
dec
or
mov
inc
mov
fistpll
push
sahf
xchg
pop
pop
jg
adc
xchg
inc
xor
jp
xchg
sbb
lret
aam
fcomps
enter
jbe
mov
cwtl
adc
pop
mov
sbb
mov
int3
adc
inc
adc
sbb
jne
jb
cmp
popa
enter
pushf
arpl
test
push
in
rolb
jmp
push
sbb
loopne
add
sbb
add
inc
add
test
mov
push
or
sbb
or
aad
popf
jmp
and
inc
sub
push
add
or
cmp
in
xor
rclb
jg
push
mov
mov
xchg
shlb
cmp
loopne
xor
fstl
loope
in
inc
pop
cmc
loop
push
xor
lds
mov
lea
leave
out
mov
mov
xchg
imul
jo
js
push
or
xchg
test
sub
inc
in
inc
dec
call
sbb
arpl
fsubrp
jmp
pop
pusha
mov
push
push
mov
in
mov
rol
aam
add
adc
in
or
and
in
pop
into
orb
inc
mov
movl
stos
pop
scas
xor
sbbb
inc
xor
jnp
in
ret
push
sub
enter
cld
mov
jo
pop
sbb
and
jne
insl
rclb
xchg
push
std
add
fimull
outsb
sbb
adc
mov
daa
iret
mov
sti
call
xchg
popa
add
jle
mov
adcb
hlt
adcb
sub
pushf
or
xor
xor
sub
jnp
adc
push
or
mov
add
fdivrl
out
mov
scas
sub
popf
lods
push
sar
ljmp
xchg
insb
jg
add
cmpl
fldcw
or
and
imul
outsl
jbe
test
or
mov
dec
cmp
xorb
stos
and
les
mov
jle
mov
andb
or
test
sbb
xchg
rcrb
dec
sete
mov
jl
xlat
lock
pop
lock
xor
pop
cmp
inc
or
add
imul
pop
repnz
xor
inc
jnp
mov
push
or
and
pop
mov
inc
mov
and
sub
ds
hlt
cmpb
sbb
cmp
ret
push
pop
pop
inc
out
sub
lods
cmpsl
cld
roll
cmp
je
iret
inc
aaa
cmp
add
test
test
mov
cmp
jg
mov
insl
fwait
mov
mov
push
add
jmp
lea
fdivrl
pop
cmpsl
mov
push
cmpsl
frstor
pop
adc
xor
cli
inc
and
ljmp
cli
fstl
pushf
mov
push
mov
dec
rep
add
jle
rcrb
push
lcall
push
arpl
sub
jne
inc
inc
jmp
inc
fs
sub
movsb
sub
pop
aas
cmp
gs
cli
icebp
add
out
ret
mov
xor
test
add
add
sub
pop
jle
or
push
sub
imul
mov
je
dec
jecxz
inc
lcall
and
push
test
jecxz
les
in
cs
adc
imul
sbb
mov
pop
hlt
push
loope,pn
push
mov
xchg
sub
daa
movl
shl
daa
mov
dec
push
jmp
int
xchg
mov
xor
adcb
test
xor
mov
pop
and
movsb
imul
lods
jmp
movsl
mov
xchg
adcb
and
mov
cwtl
int3
ss
push
push
mov
push
xor
outsb
push
mov
addr16
sbb
and
adc
inc
fs
or
outsl
add
cmp
mov
sbb
push
es
fiaddl
mov
clc
or
je
dec
push
mov
jns
sbb
xchg
outsl
ss
xor
jle
cs
lods
dec
cs
mov
mov
push
test
xlat
stc
clc
arpl
pop
js
in
sbb
cmc
push
mov
movsb
push
jns
out
dec
idivl
xor
and
dec
ret
pusha
mov
test
xchg
adc
xchg
movl
imul
andb
loope
xchg
fadd
adc
out
dec
inc
popa
and
lock
arpl
loop
repz
in
movsl
lea
mov
and
sub
add
enter
aad
jo
adc
dec
add
xchg
jne
mov
in
jbe
es
in
jmp
stc
mov
push
inc
dec
pop
mov
xchg
mov
cmp
dec
or
mov
stc
xchg
imul
test
mov
inc
imul
mov
fisubrs
ret
cmc
call
ret
cs
lcall
ret
sarl
add
inc
ss
xor
inc
xor
test
insb
in
cmp
gs
pop
cmp
sbbl
dec
pop
imul
dec
sub
and
add
imulb
fld1
inc
xchg
mov
push
add
dec
aam
ret
or
mov
andb
in
mov
lea
push
in
cld
push
fsubrl
push
lret
add
cmpsb
adc
lea
mov
push
pushf
sbb
arpl
ja
or
mov
push
leave
mov
jge
das
call
mov
movsl
cmp
jl,pn
mov
fisubl
sbb
ja
xor
mov
mov
cmp
fst
xor
shr
xor
adc
adc
push
jp
not
mov
jl
mov
sub
mov
shr
cmp
jbe
add
jmp
add
iret
or
xor
int3
les
and
cpuid
add
inc
dec
inc
xor
jl
pusha
frstor
popa
mov
movsb
sub
jno
shrb
or
push
mov
jno
inc
jle
cmp
fisttpl
lds
adc
jmp
js
insl
mov
movl
push
fsubrl
rolb
aaa
mov
xor
mov
lea
fcoml
add
test
outsb
cmp
shufps
testl
xchg
jnp
dec
les
add
jb
or
pop
fisubrl
push
inc
aad
pushf
cmp
jmp
push
bound
loopne
mov
or
dec
inc
add
xor
test
inc
js
cmp
pop
adc
fsubs
sub
das
xlat
push
pop
test
ljmp
adc
shl
and
adc
loopne
cmpb
fs
mov
daa
mov
jg
mov
xchg
cs
sbb
shlb
nop
adc
je
in
push
jp
test
vmwrite
push
lret
dec
xor
mov
vpsrlw
outsb
or
and
and
inc
cmp
inc
xchg
daa
add
stc
xchg
ret
daa
pop
jmp
dec
sub
adc
or
sbb
pop
add
push
push
insb
add
xorb
adc
or
fxch
ret
data16
call
sahf
xchg
hlt
adc
jecxz
nop
push
or
and
inc
enter
jmp
sbb
inc
or
orl
sub
mull
popf
adc
mov
add
leave
inc
ja
cmp
popf
add
pop
mov
xlat
inc
xor
push
xor
inc
xor
xchg
orb
ljmp
fsubrs
dec
xor
test
or
movsl
lods
daa
jo
dec
add
ror
add
addl
lock
popf
fdivrp
inc
push
cmp
xchg
movsb
pop
and
inc
mov
jle
sahf
rcrl
incl
jns
pop
and
sbb
cwtl
and
jmp
ss
xor
jl
mov
push
out
int
adc
sbb
adc
je
xor
ror
cmp
fs
push
jns
jecxz
cmp
inc
nop
adc
jbe
push
xchg
adc
in
mov
and
popf
lcall
insl
ja
out
jmp
xchg
shld
xchg
test
cmp
imul
popa
push
mov
lods
mov
pop
push
dec
pop
in
inc
push
sbb
jle
adc
pop
jne
jle
sub
xchg
sub
sub
mov
iret
xlat
push
add
add
or
and
add
sub
dec
sahf
add
and
aam
inc
or
xchg
rclb
push
cs
or
sbb
or
dec
xor
inc
ret
hlt
xor
addl
stos
jne,pn
out
je
rclb
adc
sub
mov
dec
cwtl
sbb
mov
aas
sbbl
leave
lret
mov
or
mov
xchg
insl
add
sarl
xchg
dec
hlt
pushf
dec
push
sub
add
and
mov
movsb
or
sub
add
mov
dec
sahf
insb
inc
sti
adc
andb
mov
inc
movsb
push
inc
and
jg
sub
and
scas
es
gs
ficompl
sbb
cwtl
mov
pusha
inc
andb
fiadds
lods
hlt
xor
mov
pop
push
test
mov
lret
lret
mov
nop
daa
int3
push
xchg
push
cwtl
sub
or
dec
add
push
jp
les
insl
imul
sbb
stos
add
es
xor
ret
mov
sbb
jmp
inc
and
sbb
pusha
sub
and
add
sub
add
xchg
or
hlt
inc
enter
inc
push
mov
add
xchg
inc
adc
call
shlb
jne
int3
dec
adc
hlt
jge
adc
xchg
rcrb
mov
or
clc
add
adc
jo
cld
push
fs
lds
cwtl
rdtsc
adc
cmp
adc
enter
cs
cmp
cmp
inc
imul
xor
sub
sub
jne
cmp
push
add
sub
lret
mov
push
jp
cmpsl
in
or
jbe
lods
call
call
inc
es
out
loopne
movsb
rclb
push
bound
inc
xchg
add
push
sbb
mov
rclb
in
cmpsb
adc
cmpsl
jle
call
ficompl
add
or
xorl
pop
or
adc
or
adc
stos
or
jg
sub
outsl
adc
fprem
iret
hlt
xchg
mov
cmp
jne
int3
dec
inc
pop
push
sub
mov
lret
jmp
lret
shlb
xchg
jbe
sub
shlb
and
shlb
sub
test
or
or
jbe
jl
sahf
jg
add
or
xchg
jle
sbb
dec
insb
bound
adc
ja,pn
mov
stos
sbbl
sub
lcall
mov
push
les
push
sahf
mov
xchg
sub
or
outsb
pop
in
or
pusha
sub
sub
clc
sub
lock
ret
jb
push
mov
rolb
inc
repnz
push
push
sub
add
add
and
cli
das
inc
mov
sub
js
mov
in
repnz
or
push
or
and
movsw
sbbl
in
cwtl
pop
out
das
inc
jmp
inc
rclb
xchg
nop
rorb
inc
sub
ret
sbb
inc
mov
push
addl
mov
cli
xor
xor
jmp
out
xor
dec
mov
lret
jne
push
loopne
cs
outsl
lcall
dec
adc
call
add
rep
sbb
orl
inc
or
or
or
movsb
outsb
in
inc
faddl
inc
frstor
dec
js
or
mov
test
out
shr
push
les
adc
adc
mov
add
fdivrs
pop
movsl
xchg
inc
or
test
pop
sbb
jmp
sahf
lea
in
in
and
popa
sbb
adc
jge
inc
in
cli
jbe
adc
dec
sub
jns
aas
cs
aas
movsb
cli
add
int
push
pop
mov
or
repz
daa
lcall
mov
ds
push
add
push
in
mov
mov
into
sub
inc
lea
push
sub
mov
and
push
add
dec
adc
adc
push
jno
scas
xor
add
shrb
jge
call
xchg
push
inc
aam
aam
xor
mov
mov
outsl
xor
sbb
faddl
xor
cld
sub
mov
cmpsb
jmp
sub
jno
popa
or
int3
lret
mov
jl
adc
das
aam
add
mov
jl
dec
mov
adc
add
cld
xorb
sub
sub
daa
ret
in
testl
clc
push
push
bound
and
loope
xor
push
daa
xchg
fst
es
or
es
test
adc
rorl
stc
or
or
mov
push
xchg
inc
and
cld
or
push
cmpsb
or
ret
lock
and
push
xor
jno
mov
hlt
mov
and
push
xor
icebp
mov
add
sub
nop
test
push
sbb
xorb
sub
push
std
push
mov
xor
mov
inc
push
mov
and
mov
inc
mov
push
adc
in
enter
xor
mov
dec
pusha
fisubl
or
in
sbb
cld
pop
xchg
rclb
xor
push
and
hlt
push
lcall
movb
aad
test
and
bound
fcom
or
inc
mov
xlat
mov
sub
xor
and
push
mov
shufps
cld
data16
sbb
cmp
cli
addr16
sub
sub
inc
cmp
enter
outsb
jae
roll
mov
push
mov
sahf
orl
or
xor
mov
push
add
and
or
dec
jne
adc
add
sbb
adc
pop
pop
mov
or
jnp
js
lret
jbe
push
sub
sbb
notl
daa
push
outsl
push
push
jo
test
dec
dec
jb
aas
subl
fs
xor
nop
push
clc
adc
jbe
or
push
fdivr
mov
push
pushl
stos
fcmovb
in
add
call
cmp
arpl
bound
xor
jle
and
addl
pop
fwait
imul
or
inc
push
mov
dec
adc
adc
je
push
pcmpgtw
mov
jle
push
dec
adcl
push
or
adc
push
jmp
lret
pusha
dec
mov
jmp
inc
xor
ret
adc
daa
pop
push
in
cmpsb
adc
sbb
sbb
sbb
nop
arpl
outsb
or
mov
shl
mov
mov
adc
into
adc
or
or
adc
rorl
pop
pop
mov
das
push
push
stc
pusha
or
and
mov
sbb
inc
inc
adc
pop
xchg
loopne
xor
mov
ja
jle
je
bound
push
add
push
andl
movsl
inc
sub
rolb
orb
push
add
pusha
push
adc
inc
push
jo
xor
push
ss
bound
cmpsl
int3
dec
inc
dec
pop
sahf
test
ljmp
add
jmp
mov
xor
jg
test
mov
push
adc
test
push
push
lods
add
scas
mov
jne
test
inc
jb
cmp
shll
sbb
jl
adc
mov
adc
fidivl
inc
push
lea
mov
scas
into
pop
push
mov
pop
xchg
hlt
and
loope
pop
scas
xchg
push
mov
mov
lret
xchg
xchg
cs
pop
scas
outsl
push
in
sbb
cmp
push
in
inc
mov
jp
insb
cs
jge
shlb
push
cli
lock
mov
cmp
jp
lds
cmc
fsubrs
ret
test
test
cli
xchg
push
pop
mov
mov
lea
add
data16
mov
shlb
cltd
int3
mov
or
push
mov
clc
inc
cmpsb
xchg
sbb
or
or
mov
or
js
dec
cmpb
call
pop
jl
in
jl
adc
gs
sbb
dec
fcmovnbe
jo
dec
inc
or
shrb
rorl
dec
pusha
mov
rol
mov
ror
xor
sarl
xor
sub
fcmovb
ret
or
sarl
add
into
dec
add
loopne
lahf
add
bound
ret
std
mov
and
not
and
xor
add
add
sbb
es
outsb
sub
jge
add
sub
cwtl
repnz
cli
idiv
jl
fisubrs
jge
xor
and
and
xchg
add
adc
dec
fidivrs
xor
dec
imul
ljmp
ja
xchg
or
push
or
xlat
ret
pop
fisttps
sbb
rolb
testl
hlt
add
call
xchg
add
aam
cmp
xor
sub
pop
imul
rol
out
and
add
push
xor
movsb
test
push
dec
shll
call
in
shl
popa
xorl
pmulhuw
in
or
add
add
pop
mov
pop
aaa
pop
xlat
shrb
xor
sub
xor
loopne
loopne
add
ror
and
loopne
xor
pop
cmp
aam
mov
xorb
cmp
notb
xchg
xor
fmull
in
push
xor
and
and
out
cmpsb
movsb
aad
into
add
and
xor
add
adc
or
lcall
shlb
push
jo
ficoms
add
mov
mov
shlb
inc
fbstp
daa
adc
push
loop
mov
in
pop
jg
add
add
pop
jbe
lcall
ret
lret
pop
mov
or
clc
jp
push
and
add
gs
fcomps
inc
cmp
cmpsb
inc
call
aas
push
pusha
lret
inc
mov
or
fcoms
sub
cli
stos
adcb
aam
aaa
cmp
dec
rorl
inc
in
sbbl
fs
add
out
rolb
inc
aaa
pop
xor
pop
cli
xor
xor
imul
rorb
imul
nop
in
push
jle
dec
add
push
dec
add
inc
xor
adc
es
lcall
cmp
jo
or
dec
xor
cmpb
push
je
pop
xchg
or
push
pop
adc
add
and
enter
jae
push
mov
push
add
lret
xadd
or
sbb
imul
pop
fs
mov
xchg
inc
jb,pt
movsl
mov
or
inc
ds
sub
sbbl
andb
test
stc
cmc
clc
mov
pop
add
xchg
inc
mov
negb
dec
shll
adc
adc
mov
loopne
or
and
add
xlat
add
and
loope
sbb
rcrb
fimuls
add
pop
add
inc
add
lea
xchg
ljmp
sub
lea
pop
xor
cmc
aam
xor
mov
decl
sub
js
mov
sarb
imul
or
mov
adc
mov
jp
mov
test
sub
sbb
and
lea
jmp
lods
push
js
lea
push
sub
pop
add
ja
imul
dec
jne
jg
adc
lock
xchg
addb
xchg
sub
mov
fstpt
aaa
jbe
or
test
xchg
aam
fs
adc
std
mulb
sub
jae
push
pop
fadds
inc
dec
mov
rep
or
mov
ljmp
mov
dec
pusha
outsl
pop
loopne
ror
mov
testl
sbb
inc
frstor
adc
popl
push
into
shlb
cld
jb
cmp
ja
mov
call
dec
jae
inc
aaa
popa
push
adc
or
push
cmpsb
or
or
adc
add
mov
je
mov
push
inc
dec
ret
mov
icebp
loopne
inc
dec
cmp
add
and
dec
jmp
je
mov
mov
imul
lods
adc
mov
cmp
je
or
push
or
fs
shlb
jo,pn
sbb
jne
push
sbb
mov
push
dec
inc
lea
inc
mov
pop
dec
inc
jmp
jns
or
movsb
jne
jmp
add
enter
je
testl
daa
sub
loop
nop
adc
fcompl
inc
cmp
fs
dec
inc
rolb
jle
fisubrl
cmp
push
pop
mov
mov
jp
pop
mov
and
sbb
bound
or
out
lahf
sarl
lock
rclb
shr
mov
lea
int3
jp
mov
call
ss
sub
or
outsb
fnstenv
jge
inc
xorl
fisubrl
cmp
jne
notb
pusha
ljmp
test
mov
cmpsl
hlt
cld
les
shrl
xchg
in
ja
pushf
push
inc
mov
ss
stos
push
push
add
push
inc
cld
mov
xchg
jno
xor
xchg
loop
jne
mov
negl
and
cmpsb
leave
inc
inc
int3
and
movzwl
data16
insl
mov
cmp
pushl
shl
add
jmp
cwtl
aas
les
mov
jne
and
dec
hlt
xor
add
xchg
outsb
je
fs
lock
add
out
and
pop
subl
dec
push
mov
or
adc
push
jae
mov
jmp
dec
shlb
lret
cmpb
test
mov
aam
sub
push
push
scas
fs
pop
cmp
push
inc
pushl
xchg
imul
andb
rclb
inc
jg
or
jge
and
jle
cld
outsl
outsb
outsb
es
sub
sub
and
pop
cmp
jl
movsl
aad
fistpl
adc
inc
test
mov
and
jbe
jp
jb
jbe
mov
outsb
lock
jne
or
je,pn
test
jne
je
outsb
and
sub
pop
add
je
xor
in
adc
xchg
adc
outsb
or
pop
lcall
sbb
ljmp
push
push
push
mov
inc
and
mov
mov
inc
icebp
mov
pusha
mov
push
mov
mov
mov
es
add
add
and
lahf
xchg
call
das
fisttpll
mov
cmp
xchg
cwtl
aam
fisttps
call
mov
jmp
ret
fistl
add
mov
sbb
lds
out
fcmovu
icebp
clc
cmp
bound
test
popa
jle
cmpsb
sub
push
xlat
sbb
test
pop
sbb
pop
inc
mov
push
xchg
push
xor
inc
rcrb
fdivl
inc
lea
loop
pop
sbb
push
add
pop
clc
pop
inc
xchg
jb
andl
mov
test
mov
loopne
inc
imulb
decb
inc
lea
cwtl
arpl
mov
lahf
in
mov
incl
in
push
mov
arpl
xor
jbe
dec
fadds
inc
and
jae
rol
ret
xchg
mov
insl
and
stc
jle
adc
or
xchg
adc
rclb
test
dec
aas
mov
sub
fsts
sti
mov
xchg
pusha
jp
sbb
jbe
pop
mov
xor
add
stc
and
and
inc
dec
je
push
ss
or
jnp
fldlg2
movb
daa
dec
pop
iret
push
and
xchg
and
movsb
push
inc
inc
faddl
inc
inc
mov
lds
scas
jl
add
cmp
add
push
sbb
or
cmp
mov
cmp
push
or
mov
cmp
lock
insl
adc
xchg
popa
push
push
add
inc
rcrb
and
lret
mov
or
push
or
dec
rolb
xorl
movsl
stos
sub
mov
pusha
sti
pusha
jb
cs
push
stos
ljmp
or
cmp
es
add
inc
fisttpl
mov
push
dec
xor
mov
sub
stos
pushl
dec
mov
insl
mov
in
push
mov
push
or
je
test
and
lock
sub
es
jmp
xchg
jb
jb
jne
lahf
jne
addl
xchg
lret
sbb
xor
pop
pop
pop
cmp
lods
shr
or
jne
iret
push
leave
xor
xchg
andl
xchg
in
enter
or
xchg
test
inc
mov
push
or
mov
call
jae
cmp
movb
dec
roll
sbb
adc
in
lock
sub
xor
pop
xchg
xchg
imul
shl
loopne
sbb
sbb
pop
aad
mov
in
sub
and
mov
cmp
testl
push
push
fdivl
jp
push
data16
andl
das
dec
push
and
push
das
bound
notb
mov
cmpl
dec
adc
mov
xchg
inc
cmpl
add
mov
push
fcomp
sbb
jle
cli
add
sbb
je
cld
cmp
mov
mov
inc
inc
inc
xchg
popa
fwait
mov
jge
pop
and
aaa
sbb
mov
lods
lock
lea
cwtl
add
movsl
dec
inc
ror
or
pusha
addb
cmp
rcrl
mov
dec
sub
dec
push
arpl
insl
in
push
leave
inc
icebp
fs
insb
jne
movl
sub
jge
add
ret
cmp
mov
mov
adc
cmp
push
inc
and
fisubl
cmp
jne
les
aam
adc
ret
js
pop
cmp
cmpsb
or
adc
dec
mov
cmp
push
jmp
test
sahf
ja
sbb
xor
jb
jge
cmp
fchs
je
jl
jo
js
add
add
mov
dec
and
xchg
ljmp
sahf
fs
mov
lds
nop
jmp
inc
push
jnp
sub
sbb
cmp
je
pop
push
js
or
sarl
jbe
sbb
push
mov
clc
adc
add
jne
mov
xchg
outsl
inc
cmpb
sub
cld
and
pop
cs
out
or
xor
pop
pushl
cmp
or
in
fmuls
imul
ret
push
pushf
sbb
push
cmp
leave
popa
inc
adc
push
ds
pop
sarl
push
mov
imul
cmp
cmp
cmpsb
xchg
or
cmp
jbe
fiaddl
mov
cmp
mov
xor
dec
dec
lret
mov
push
sub
sub
xor
lret
in
xor
cmp
int3
add
sub
out
mov
adc
fs
mov
test
sub
push
and
into
adc
dec
mov
pop
xchg
lods
outsl
push
xchg
lock
push
sub
mov
and
daa
loop
add
adcb
dec
lods
into
fs
lock
sbb
loopne
add
enter
scas
push
popf
mov
xchg
sahf
push
int3
sbb
orl
popf
xchg
push
shll
shll
imul
and
loop
sahf
orl
cmovge
cmp
or
or
add
and
popa
pop
ret
mov
and
fdivrs
sub
jl
jmp
mov
push
cli
xor
jne
aas
out
jne
sbb
dec
and
jo
sub
push
stos
push
inc
rclb
push
movzwl
sub
scas
jbe
mov
aaa
jo
fwait
ljmp
cmc
lods
jnp
jne
jne
lret
popa
fs
pinsrw
inc
add
pop
cmpsb
hlt
xchg
mov
xchg
les
inc
shll
addl
inc
les
pop
pop
sbb
and
in
rorl
cmp
mov
jp
mov
mov
adc
dec
add
data16
cmp
mov
inc
shll
mov
pop
lods
sbb
xchg
sbb
aam
addb
xchg
push
popl
sbb
mov
xchg
mov
sbb
ss
pop
sub
pop
dec
call
clc
mulb
jo
push
push
and
in
repnz
les
dec
cmp
mov
xor
mov
bound
adc
pop
popa
lock
sahf
in
ret
dec
inc
pop
movsb
or
cmp
xchg
addb
cli
cmpsl
xchg
jg
push
mov
or
or
push
inc
xorl
pop
stc
sbb
or
mov
or
cmp
add
loopne
sub
rclb
movsb
jl
xchg
pop
xorl
imul
arpl
adc
xchg
int3
inc
mov
scas
jns
mov
popa
adc
pop
popa
mov
push
or
scas
dec
cld
les
aaa
js
inc
notb
aaa
jbe
or
dec
push
and
outsl
xor
mov
adc
or
xor
orb
jg
incw
stc
mov
mov
mov
inc
adc
mov
fimull
pusha
adc
xor
mov
test
adc
dec
sbb
sbb
xor
cmp
and
mov
push
aam
movl
int
arpl
sbb
movsb
jge
sbb
cmp
icebp
add
in
inc
add
dec
lea
movsb
lret
popf
push
int3
and
sbb
into
or
mov
mov
add
mov
push
or
addr16
xor
test
pop
xchg
pop
and
pop
pop
push
dec
inc
jmp
adc
cmp
or
cltd
or
xchg
cmp
xchg
xlat
outsb
mov
rorb
pop
mov
sti
push
or
and
and
dec
push
mov
or
dec
stos
cmp
fcmovb
testl
push
andl
adc
adc
out
dec
pushf
mov
sbb
dec
add
adc
mov
cmp
mov
mov
sbb
cmp
mov
dec
adc
xchg
or
pop
clc
test
add
adc
or
pusha
ljmp
xor
dec
roll
sub
and
insl
and
fisttpll
sbb
mov
add
lcall
cmp
adc
and
sub
add
and
popf
inc
cld
lea
push
popf
mov
test
jns
dec
loop
andl
mov
adc
cmp
lock
sbb
mull
shrl
cmp
lods
push
lret
jp
enter
adc
or
cmp
pop
fimuls
je
cmpsb
mov
incl
and
adc
loope
mov
mov
pop
xchg
fcmovnu
and
jle
es
shrb
loop
push
push
inc
pop
lods
popf
and
pop
push
jbe
dec
and
xchg
pop
arpl
sti
push
mov
ja
jecxz
cld
mov
enter
movsb
imul
xor
ja
mov
das
jb
pop
sub
xor
mov
push
outsl
movsl
adc
sbb
insb
dec
push
into
push
mov
xchg
adc
fisttpl
gs
xor
push
mov
adc
aas
or
arpl
add
mov
sbb
inc
icebp
repz
mov
jg
mov
mov
and
mov
dec
adc
add
push
push
cmpsb
jo
push
dec
ljmp
mov
sub
sbb
or
and
test
imul
cmp
mov
out
ss
pop
inc
push
test
in
es
sbb
xchg
rorb
inc
mov
mov
mov
mov
sbb
aam
inc
insb
and
inc
pop
push
mov
lahf
add
jae
ficompl
test
inc
jmp
jge
pop
andl
lea
xor
dec
sbb
popa
mov
repnz
push
faddp
stos
dec
sahf
mov
pop
add
xchg
push
adc
lahf
jg
cmp
and
inc
or
lcall
je
push
push
push
inc
push
mov
jbe
adc
push
orb
mov
mov
aad
xchg
or
sub
adc
sub
sbb
imull
pop
xchg
inc
pop
pop
cld
pop
sbb
je
cmp
jbe
lds
xchg
fs
dec
xorl
roll
push
ret
jp
xchg
insl
xor
add
fs
push
xlat
mov
mov
jnp
test
cmp
test
pop
movsb
jmp
push
mov
xchg
inc
jl
scas
test
jbe
mov
jmp
dec
push
cmpsb
xlat
and
adcb
les
outsl
mov
or
dec
add
push
add
pop
stc
adcb
xor
gs
sub
cmp
push
cmp
sbb
add
add
adc
push
or
pop
inc
bound
mov
int
cmp
fsubrs
les
xlat
mov
ja
orl
hlt
pop
mov
push
mov
sbb
ret
fsubrl
jbe
repz
or
sbb
test
xor
js
jae
push
and
jb
jmp
outsb
adc
pop
fs
and
xor
pop
scas
lods
add
pop
sti
add
push
inc
aas
test
mov
mov
push
dec
and
clc
and
mov
push
stos
push
xor
adc
dec
push
call
or
notb
das
pop
orl
or
jle
std
push
testb
jne
bound
and
ja
pusha
mov
das
add
rorb
push
mov
cmp
sub
or
scas
stos
inc
add
inc
and
lods
pop
addr16
js
adc
or
sbb
adc
or
cmp
sbb
push
dec
adc
das
imul
cmpsb
hlt
outsl
and
cmp
jbe
sub
add
mov
mov
add
lds
push
cld
push
push
mov
ljmp
push
push
outsb
sub
cmp
jbe
shlb
movsl
mov
std
movsb
in
pop
xor
push
ret
sbb
dec
sub
enter
sbb
and
mov
es
ret
mov
shlb
popf
add
adc
pusha
xor
xchg
jmp
lret
clc
dec
sbb
cmp
jecxz
lods
dec
xchg
mov
sub
xor
sub
lods
sub
aas
add
add
repnz
loopne
ret
popf
testb
push
shlb
je
or
push
adc
or
sbb
push
cmp
pop
or
sub
dec
sub
pop
sub
sbb
add
xor
clc
in
pop
jnp
pop
outsb
pop
add
add
or
or
jl
push
inc
adc
cmp
lods
push
jne,pt
add
js
jmp
and
xlat
xchg
mov
add
pushl
js
mov
pop
out
sub
xlat
mov
cmp
je
mov
mov
sub
adc
inc
add
inc
scas
sub
push
ret
cmp
sti
adc
shrb
dec
loop
loop
pop
cmp
jg
jno
out
lds
mov
in
or
inc
push
inc
aaa
popa
mov
sub
call
mov
loopne
lea
popa
rcll
xchg
pop
adc
sbb
lcall
rcll
mov
pop
inc
ss
cmp
movsb
push
mov
in
add
stc
ja
and
jne
fmul
jb
pop
cmp
push
sbb
mov
xor
dec
mov
js
mov
inc
push
mov
inc
sub
ret
or
les
pusha
loopne
cmpsb
icebp
mov
mov
cld
push
stos
dec
mov
cmc
pop
addb
mov
xor
sub
dec
imull
xchg
add
push
test
lea
jbe
negl
rcrb
ljmp
jb
adc
and
adcb
sahf
and
sarb
aad
push
outsb
sbb
nop
sub
xchg
sarl
lahf
jmp
js
mov
fbld
cmp
rolb
fmull
nop
pop
cwtl
push
call
clc
push
xchg
mov
js
sbb
test
adc
xchg
inc
lods
push
and
mov
imul
stos
arpl
add
loop
add
mov
add
rcr
call
xchg
pop
cmp
jne
jbe
pusha
xor
sbb
int
dec
mov
cmp
cmpsl
stc
lret
mov
adc
mov
dec
mov
sub
pop
pop
sub
jl
cmp
sbb
popa
es
push
dec
fcom
punpcklbw
loopne
dec
cmp
test
mov
sbb
and
je
sarl
inc
xor
or
cmp
andb
cmpsb
insb
and
add
jmp
cmp
das
shrl
push
ljmp
aas
rorb
nop
and
mov
xchg
mov
sub
inc
ljmp
jmp
mov
shlb
mov
jmp
movsb
mov
mov
test
mov
adc
dec
or
imul
in
cmp
xchg
xor
sbb
lea
ret
int3
dec
in
add
icebp
mov
jg
cmp
xchg
jge
cmp
into
or
sbb
adc
add
outsb
ret
jge
pop
xchg
lods
or
pop
rcrb
sub
loopne
push
call
jecxz
push
dec
add
push
add
mov
mov
icebp
cmp
sarb
fistpll
sub
mov
add
hlt
or
aaa
xchg
or
pusha
clc
or
sub
push
outsl
jge
mov
scas
adc
mov
mov
and
pop
or
xchg
inc
adc
stos
pop
and
push
adc
mov
cmp
cmp
cmp
inc
inc
push
add
push
sar
dec
nop
cmp
mov
pop
int3
mov
stos
inc
movb
cli
inc
lahf
push
pushf
jmp
add
cld
adc
lock
and
mov
cmpsl
and
dec
push
cmp
add
lret
cltd
mov
and
adc
rcr
pop
inc
add
lcall
or
sbb
jbe
push
inc
pop
pop
jb
js
dec
push
fisubl
add
scas
and
insb
jmp
adc
fsubrs
adc
test
bound
jns
mov
xchg
push
inc
shl
addl
mov
jne
lret
pop
mov
pop
orl
dec
and
stos
inc
push
sbb
dec
lea
pop
add
repz
add
roll
dec
in
and
call
mov
ret
pushf
mov
or
adc
iret
aaa
ret
mov
ret
xor
lock
add
add
push
test
icebp
imul
mov
adc
sbb
jne
imul
sbb
jmp
aaa
lret
mov
cmp
dec
sub
scas
jecxz
pop
js
notb
jmp
test
bound
test
or
or
scas
andl
add
pop
push
add
stos
aad
xlat
mov
push
push
push
cs
inc
push
pusha
mov
adc
pop
jnp
lret
in
sbb
ret
sbb
ret
dec
leave
ret
pop
mov
les
out
dec
cmp
adc
leave
imul
add
add
out
aas
xchg
lahf
or
sub
inc
leave
jmp
test
imul
inc
test
xor
push
arpl
mov
hlt
mov
jne
ds
ret
push
fcoml
mov
fs
sub
or
out
mov
sub
and
push
insb
sahf
or
xlat
xlat
lea
fs
adc
aam
jecxz
out
shrl
js
rorb
andb
xor
push
leave
xchg
sarl
sbb
and
dec
es
lds
add
add
jb
pop
pop
mov
push
out
je
jl
ret
xchg
dec
addr16
iret
adc
test
in
push
push
mov
int3
inc
mov
shll
xchg
mov
push
popf
jmp
adc
push
jne
push
incb
call
add
inc
mov
cmpsb
pop
xor
pop
dec
or
fdivs
jp
and
sbb
inc
cmp
jecxz
xorb
in
or
pop
cmp
je
mov
mov
mov
cs
push
clc
int3
inc
and
or
inc
xchg
or
psrad
repnz
and
sub
aad
or
cmpsb
xlat
in
jo
xor
pushf
jbe
inc
cmpsl
je
dec
je
out
add
dec
sti
or
insl
cmp
mov
lea
orl
out
xor
push
mov
xchg
movsl
mov
icebp
sti
ja
pop
xchg
jae
adc
jmp
cmpl
test
jno
and
repz
cmpsl
inc
enter
test
xor
sahf
xchg
lock
test
mov
jmp
mov
leave
test
sbb
sar
mov
xor
mov
mov
mov
add
fs
lock
mov
out
hlt
sub
mov
dec
mov
in
push
xor
or
rclb
cmpsl
je
dec
loope
xor
inc
pushl
cld
cmp
and
mov
push
push
ss
push
or
ss
xchg
orl
fiadds
cmp
mov
mov
addb
jmp
clc
add
call
sti
push
sbb
push
sbb
push
pop
orb
mov
outsb
mov
cmpsl
inc
nop
dec
xchg
add
add
mov
pop
jmp
xchg
repnz
test
mov
cmp
movl
mov
and
mov
push
inc
hlt
add
sub
sbb
mov
xor
pop
xor
pop
rcll
int3
xor
dec
daa
mov
es
dec
cmp
enter
lea
push
je
pusha
lea
dec
push
adc
call
sbb
xchg
pusha
cltd
xchg
jbe
add
or
mov
push
insl
popf
orb
je
push
pop
or
outsl
inc
das
jbe
jns
cmp
or
adc
negl
mov
or
mov
xchg
cld
sub
xchg
call
or
adc
shrb
gs
adc
cmp
mov
popa
adc
add
dec
mov
and
or
pmulhuw
mov
rorl
jg
movb
dec
js
sbb
lods
lock
lea
test
xorl
xor
cmp
clc
lea
jns
add
rcll
nop
pop
or
or
cli
pop
xor
xor
testb
pop
pusha
fistpll
push
lret
or
mov
mov
cmp
lds
mov
pop
insb
dec
mov
sbb
outsl
mov
pop
push
dec
inc
jns
dec
dec
clc
jne
loopne
sahf
imul
mov
lea
push
lock
cmp
stos
es
flds
lcall
jbe
and
jp
and
jb
inc
cmp
roll
test
enter
cmp
cmp
jae
loop
pusha
sub
inc
sbb
flds
lds
push
js
fildl
cld
loopne
fnstenv
mov
cld
leave
mov
mov
in
data16
add
ficoml
pushl
push
add
push
repz
sbb
and
loope
das
or
mov
pushf
lock
fmuls
jbe
xchg
cmpsl
sti
cld
pop
inc
movl
lock
push
mov
aas
or
in
and
xor
out
push
or
mov
cwtl
mov
pop
and
dec
adc
ficoms
pop
leave
and
inc
adc
add
cmpsb
ret
push
add
xorb
popf
inc
pop
lods
lea
in
in
push
scas
imul
aaa
adc
inc
movb
stos
mov
ds
add
jne
cmp
cmp
adc
inc
xor
jge
mov
push
inc
push
sbbb
incl
dec
xchg
subl
push
adc
fsubrs
bswap
pop
fsubr
jmp
pop
add
inc
cmp
pop
in
jbe
lock
mov
pop
fmuls
lock
das
pop
loopne
add
pop
loope
popa
testl
lea
mov
pop
jmp
pop
add
movsb
jo
adc
cmp
aad
mov
cltd
cmp
sbb
bound
fistpll
ror
mov
adc
aad
xchg
adc
pusha
xchg
popf
inc
adc
aam
test
mov
nop
sbb
sbb
sbb
mov
add
jo
icebp
cmp
dec
mov
xor
mov
and
data16
or
shl
lods
test
inc
push
call
add
inc
xchg
mov
pop
pusha
shlb
or
test
rorl
jge
sub
add
jg
jmp
jge
add
adc
jl
jmp
sub
loop
cmpsb
cmpsb
cmp
mov
dec
pop
sti
ret
mov
jo
mov
push
mov
xchg
popa
and
sub
push
cmp
sbb
push
lods
aaa
bound
dec
push
es
nop
aad
xlat
push
aad
push
lock
jecxz
xchg
jb
inc
in
nop
loopne
push
test
xchg
lock
xor
mov
or
adc
fcomp
scas
xchg
mov
jb
addr16
and
push
movl
mov
ficoms
les
clc
and
je,pn
jmp
lea
or
testb
jb
push
jae
and
jle
lret
repnz
push
pop
insb
mov
push
and
nop
push
loopne
out
data16
add
iret
ja
inc
rcrb
lcall
cwtl
push
pop
cmp
sub
add
les
iret
push
ret
lds
push
lds
push
adc
adc
mov
jmp
cmp
add
mov
add
dec
outsl
xor
lock
add
int3
push
sbb
outsl
sub
add
pop
cmpsb
adc
mov
mov
jmp
inc
inc
sbb
fidivrl
xlat
nop
in
inc
dec
xor
or
or
sbb
lret
xchg
push
pop
jmp
push
in
add
int
loopne
xchg
in
jo
push
cs
mov
pop
xchg
movb
cmpl
mov
adc
jge
pop
mov
in
cmpsl
roll
adc
nop
cmpsl
or
adc
cmp
cmp
add
out
in
jl
cmp
mov
mov
mov
and
mov
je
mov
inc
push
cmpsb
addl
mov
jmp
add
outsl
add
popl
or
addl
jmp
clc
jno
pop
rcll
push
and
sub
icebp
or
out
add
div
jne
sbb
sub
dec
sahf
or
add
sub
je
sti
sub
add
xor
or
fmul
inc
adc
inc
and
pop
rcr
mov
add
les
popf
shlb
ret
loop
movl
and
test
loope
test
jne
dec
sbb
push
xchg
fsubr
jl
cmp
xor
push
xchg
and
dec
hlt
test
sbb
jbe
push
push
fiadds
stc
stos
xchg
and
pop
call
mov
mov
sub
cmc
xchg
mov
hlt
bound
outsb
sbb
push
int3
in
ds
adc
xor
test
jne
cmp
push
in
push
daa
jo
cmp
and
ret
ja
cmp
inc
xchg
test
sbb
clc
gs
not
shrl
sub
inc
dec
in
int3
mov
dec
add
sub
sbb
das
sub
add
jmp
lds
add
add
movsl
or
mov
negb
push
call
dec
dec
or
xchg
add
pop
dec
dec
mov
lea
dec
icebp
enter
arpl
jmp
insb
xor
cmp
push
dec
loope
je
dec
xchg
rolb
xchg
cltd
jo
sbb
jp
rcrb
pop
sbb
addr16
imul
cmp
ret
clc
jnp
ss
ror
mov
jmp
mov
pop
testl
cwtl
jmp
mov
xchg
mov
int
or
push
rcrw
inc
sub
xor
mov
pop
clc
push
fisttpll
cmp
jl
push
popa
or
imul
loop
inc
addb
sti
inc
sbb
inc
inc
mov
lea
xor
popa
sub
je
popa
repz
push
decl
xchg
lock
jb
fisubrs
mov
xor
call
sbb
xchg
sbb
sub
add
mov
fs
enter
adc
rcl
xchg
cmpsb
jb
pusha
adc
cld
pop
xchg
ret
movl
and
das
lea
js
fildl
push
pop
add
add
xor
cmp
xor
mov
fstp
sub
mov
mov
jecxz
lret
dec
xchg
lods
jecxz
sbb
imul
shrl
cmp
sub
cmp
inc
cmpl
movsl
sbb
imul
or
mov
lahf
insl
mov
xchg
jo
loope
inc
dec
shlb
sbb
jmp
push
mov
and
addl
movsl
test
int
nop
jmp
call
faddl
xor
pop
dec
dec
cmc
cmp
lods
cmp
add
fadds
out
loopne
mov
xchg
iret
bnd
add
mov
dec
mov
add
rorb
push
jae
lea
push
sub
dec
sbb
rcrb
outsb
decb
xor
hlt
mov
ja
push
and
or
adc
xor
call
mov
out
mov
out
das
pop
push
cmp
jae
inc
jmp
push
into
es
lcall
or
adc
and
cmp
jnp
jnp
test
add
jo
sub
imul
fcoms
lcall
insb
push
lock
add
mov
fmull
gs
in
imul
je
add
cmp
push
icebp
mov
mov
jne
sub
nop
push
add
repnz
or
and
mov
daa
ja
cld
push
adc
js
mov
incl
add
outsb
stos
push
push
test
in
push
mov
pop
add
sbb
push
loopne
sti
aas
pop
pop
enter
sahf
pop
add
sub
pop
adc
mov
dec
pushf
popa
test
jne
insl
jae
popf
inc
xlat
and
leave
add
or
adc
insl
jns
adc
ss
ss
xor
je
and
mov
mov
xor
add
cmpb
push
jne
ss
pushf
mov
xor
sbb
or
sbb
inc
imul
lret
inc
and
push
push
push
add
sbb
unpcklps
aad
pusha
mov
fst
imul
sub
push
inc
or
add
push
adc
bnd
js
shlb
pop
sti
pop
ret
mov
mov
mov
jmp
mov
adc
rcrb
jge
jae
lea
cli
ja
cmpb
out
aas
ret
in
xor
enter
cmp
loop
notb
push
push
jae
aaa
mov
add
cmp
jmp
popf
push
addr16
es
ja
jne
push
imul
mov
pop
shll
mov
jne
cmp
sahf
nop
sbb
jmp
cld
push
andl
in
out
jae
rcl
in
or
dec
sbb
sbb
push
addl
or
lcall
in
lret
testl
add
adc
push
mov
out
add
inc
adcb
adc
rcll
fcom
cmp
jbe
pushw
or
and
lret
daa
sub
fs
leave
out
add
sbb
pop
xlat
add
sub
sahf
clc
lret
xchg
sbb
mov
adc
cmpl
ret
mov
add
hlt
xchg
inc
cmpl
push
sub
call
ret
inc
shlb
xchg
or
xor
jo
xor
sbb
and
add
jne
scas
js
popf
jge
lea
inc
std
lret
shlb
pop
aad
dec
or
cmp
push
je
xlat
lret
and
add
lret
dec
jbe
dec
pop
dec
push
int3
cmp
inc
out
sub
push
cmp
adc
std
xchg
sbb
inc
mov
cmc
mov
je
inc
add
icebp
push
insb
pusha
cmp
mov
pop
insl
sub
lcall
mov
adc
imul
mov
xlat
mov
jmp
insl
lret
mov
xor
fdivp
sbbl
mov
mov
sbb
sub
or
scas
sub
push
mov
or
js
or
adc
mov
mull
adc
push
sbb
les
pop
dec
mov
loopne
pop
js
jge
jo
enter
sbb
push
add
lea
outsb
or
movsl
sub
pop
dec
ret
and
jl
lcall
jg
add
pop
movsb
jle
jne
lds
dec
mov
test
stos
cmp
dec
je
pop
fsubl
jo
cli
sub
int3
cli
push
imul
addl
jne
arpl
nop
dec
push
push
pop
fidivrs
mov
cmc
mov
dec
push
fbstp
mov
fldl
xchg
scas
xor
rolb
bound
pop
mov
test
add
fidivrs
or
jns
push
jo
xchg
iret
in
stos
jne
xchg
cmpsb
push
or
imul
fistl
int3
sahf
or
mov
xchg
loopne
mov
xor
mov
ljmp
arpl
pop
add
pop
insb
jl
rcll
cld
incb
lods
add
mov
cld
mov
mov
mov
mov
ja
cli
inc
cmp
mov
movb
fisubrl
lock
imull
adcb
out
negb
add
insl
lret
movsb
mov
add
rcll
sub
addl
mov
push
xchg
mov
imul
xchg
xchg
or
repz
sbb
pop
add
dec
add
add
lret
subl
and
fnstcw
jge
les
test
into
dec
cmp
pop
push
mov
xor
and
cmp
jl
pop
mov
push
mov
ja
or
jle
shlb
push
xor
sbb
push
mov
inc
sub
lock
nop
nop
lcall
aam
je
rorb
out
or
jle
in
or
ss
dec
out
xor
loop
icebp
push
pop
ret
push
das
or
push
jl
loope
in
lcall
rclb
dec
push
and
rcrb
in
aaa
or
popf
pop
fmuls
xchg
arpl
dec
dec
ja
ss
cs
xor
push
loope
sbb
test
ss
mov
in
dec
add
mov
lcall
cmp
push
lea
xchg
ljmp
push
or
jle
cmc
mov
mov
inc
ret
push
sar
jbe
mov
or
push
push
push
jle
mov
mov
add
and
js
sub
and
shll
imul
jmp
add
loope
rolb
xor
mov
mov
push
mov
movsw
movsb
mov
or
fwait
mov
arpl
jge
in
adc
test
or
cmp
mov
and
xchg
dec
add
mov
sub
inc
adc
bound
push
or
add
frstor
inc
jb
or
sbb
rorb
pop
dec
xor
movsb
jge
lock
add
inc
dec
cwtl
sbb
jl
lock
nop
call
mov
add
lods
lret
sbb
subl
divb
push
pusha
pop
cmpsl
xor
les
pushf
cmp
mov
pop
and
je
lret
xor
pop
add
out
sahf
aam
popa
jns
adc
lock
or
into
xor
jb
into
mov
or
enter
stos
xlat
iret
xchg
gs
jae
sub
xor
mov
fidivl
inc
push
hlt
and
ljmp
adc
adc
outsl
or
loope
lea
sbb
push
push
adc
pusha
test
mov
add
push
pop
sar
sub
jl
jg
lods
add
stos
jae
xchg
xor
push
jmp
in
adc
cmp
xchg
or
mov
in
mov
ficoms
mov
pusha
lds
push
jo
push
cmp
icebp
sbb
sarb
xor
add
out
dec
das
add
or
or
test
subl
mov
cmp
lcall
int
ficompl
dec
xlat
sti
mov
aam
mov
rcl
jle
pop
push
cwtl
enter
pop
push
fdivrp
fisubrs
outsl
jbe
ss
jmp
push
js
jbe
mov
jmp
iret
loopne
insb
das
lret
adc
popa
je
shrl
adc
cmp
popf
rolb
mov
xor
push
push
and
pop
cmp
xor
in
pushf
testb
dec
sub
push
ret
or
xor
ds
jno
sbb
xchg
sub
sbb
enter
sbb
adc
jne
inc
and
and
or
inc
sbb
lods
test
or
bound
xor
adc
ret
add
sbb
cmp
xchg
xor
pusha
scas
dec
jecxz
loop
popw
movsb
std
imul
or
mull
lods
pop
imul
jbe
pusha
rorb
sbb
pop
jmp
rorb
pop
nop
orb
sarl
scas
in
push
push
lret
push
push
rcll
sub
or
ljmp
push
sub
xor
mov
push
mov
adc
dec
stos
mov
mov
mov
inc
sahf
inc
pop
pop
or
out
outsb
in
or
xchg
ja
add
sub
dec
push
aam
mov
fxch
jno
stos
pop
xchg
inc
adc
add
or
clc
leave
inc
or
ret
xchg
jecxz
or
push
and
dec
push
loopne
cmovl
data16
mov
fdivrl
adc
adc
fwait
inc
mov
addr16
outsb
push
adc
xchg
mov
outsl
aaa
xor
xor
push
cmp
adc
mov
or
dec
jnp
je
pop
push
mov
mov
cs
xor
mov
or
sar
rcrl
pop
pop
out
mov
and
or
sub
mov
dec
mov
push
das
ja
pop
hlt
mov
pop
icebp
das
mov
inc
outsb
aam
sbb
test
sti
pop
push
inc
jmp
and
pop
mov
pop
mov
icebp
pop
push
mov
push
push
adc
add
push
inc
pop
and
pop
and
jo
cmp
adc
rcll
push
and
push
sbb
lods
test
cmp
dec
popf
jmp
mov
cmpl
jne
call
sbb
cmpsl
inc
jb
loopne
pop
inc
cmp
add
sub
ret
stos
mov
mov
inc
inc
add
xor
out
cmp
or
jle
adc
push
and
mov
mov
roll
das
lahf
inc
cmp
in
add
xchg
out
shlb
stos
cs
jne
jne
rcr
push
add
pop
mov
or
dec
sbbl
push
inc
stc
stos
lock
cmp
pop
in
repz
add
or
in
inc
pop
test
push
arpl
testb
insb
mov
or
pushf
push
mov
xor
inc
rorb
adc
jo
dec
inc
mov
cltd
data16
push
idivl
push
sbb
or
xor
sub
inc
jo
jne
addl
shrl
aam
jne
pop
cmp
stos
loopne
loop
test
jne
rolb
pop
pop
mov
std
mov
mov
stos
lret
jne
jle
mov
cld
pusha
loopne
add
imul
add
inc
int
sub
imul
cld
sarl
sbb
sbb
mov
cli
arpl
push
inc
aaa
sbb
adc
cmpb
pop
ds
sub
shll
adc
add
inc
loop
out
add
mov
sub
cmp
xor
xor
gs
push
fildl
cli
push
or
repz
adc
aas
mov
out
sbb
and
mov
push
add
sub
fildl
jae
dec
and
sahf
rolb
icebp
jmp
push
sbb
mov
mov
sbb
push
adc
jne
jg
add
inc
jns
pop
pusha
dec
hlt
add
cmp
or
sti
and
mov
call
dec
pop
addr16
push
pop
push
in
clc
push
sbb
jg
inc
hlt
push
push
ret
and
push
mov
sbb
xor
pop
leave
or
inc
mov
leave
ss
ljmp
or
add
dec
loopne
add
push
push
scas
cmpsb
mov
data16
or
inc
pop
pop
cmp
push
into
hlt
cltd
push
rcl
mov
jmp
dec
std
add
data16
lock
loope
scas
mov
rorl
sbb
rcrb
lods
lods
sbb
repnz
icebp
jb
or
inc
fiaddl
pop
cmpb
cld
inc
outsb
pop
leave
jmp
lea
push
sbb
jne
adc
mov
mov
cmovle
test
leave
lret
mov
jne
data16
sbbb
mov
jmp
jl
andl
lret
jmp
hlt
arpl
pop
xor
push
sub
mov
mov
daa
mov
fnstsw
out
int3
out
std
cwtl
nop
inc
xor
mov
sbb
mov
data16
add
or
fisubrl
addr16
imul
es
cmp
fdivs
cmp
scas
xchg
mov
inc
push
sub
or
push
adc
cmp
test
je
gs
inc
mov
iret
jne
jnp
les
add
push
pop
mov
lods
sbb
sbb
inc
inc
test
sti
testl
rcrb
mov
cmp
cmp
pushf
cmpsb
sbb
sbb
jmp
add
mov
pop
les
cmp
ja
adc
movb
shrb
sbb
stos
push
or
xchg
divb
inc
setns
and
mov
test
and
push
pop
or
sbb
pop
fwait
or
inc
mov
pop
or
cs
add
dec
jno
pop
scas
gs
sahf
mov
loopne
adc
outsb
mov
rorl
inc
mov
push
mov
inc
cmp
xor
dec
or
movsb
and
push
cltd
cmp
sbbb
push
xchg
movsl
or
jae
sub
sbb
les
adc
push
xchg
mov
and
sbb
xchg
shll
fimuls
ja
pusha
dec
adc
adc
sub
or
adc
and
shr
mov
pop
mov
cmp
insl
loopne
std
add
mov
lahf
fsubl
js
data16
lock
dec
mov
xor
movsl
cmpsb
xor
mov
mov
xor
push
or
fcmovbe
lock
popf
loop
xchg
dec
xorl
pop
add
push
jnp
test
and
and
scas
jl
xor
adc
cmp
pop
das
adc
lods
cmp
adcl
jno
or
push
ds
xor
stos
test
in
and
adc
je
movsb
jbe
jno
inc
enter
cli
cmp
aam
adc
adc
push
out
or
dec
aas
xchg
dec
pop
cmp
outsb
sbb
mov
and
les
xchg
pop
dec
roll
adc
mov
mov
push
xchg
cmp
in
pop
mov
mov
push
scas
add
cmp
cmpsb
xchg
push
insl
pop
add
jnp
clc
dec
push
pop
cwtl
mov
nop
xchg
xor
jecxz
inc
cmp
cmpsl
jge
and
je
je
xchg
adc
test
sbb
ds
rol
testl
fisttps
pop
hlt
mov
dec
cmp
jbe
ds
jae
or
inc
fiaddl
mov
sbb
xor
xor
enter
adc
inc
je
shl
and
repz
pop
mov
addl
dec
call
jo
xchg
push
jecxz
test
subb
inc
dec
xchg
jnp
loopne
pop
inc
in
cmp
sbb
ret
fisttpl
inc
or
or
sbb
jb
rcr
in
push
add
dec
jp
popa
es
dec
jnp
shlb
push
adcb
adc
inc
push
pop
mov
pop
out
jb
mov
inc
and
jmp
in
es
pushf
cs
mov
lods
add
sbb
scas
pop
inc
mov
cld
dec
xchg
add
mov
out
shlb
pop
rolb
shll
lods
sbb
loope
sub
out
ret
push
pop
mov
out
mov
dec
movsb
jbe
or
pop
mov
mov
xchg
movb
pop
inc
inc
inc
push
clc
scas
add
pop
jb
cmp
das
xorl
add
sbb
test
in
test
adc
push
mov
or
jp
adc
sub
clc
or
nop
adc
ret
je
pop
xor
push
cld
cmp
push
jg
mov
push
push
mov
addl
mov
repnz
push
dec
in
push
adc
rolb
ret
xor
push
sbb
xor
rol
push
dec
adc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
dec
jns
movsb
bound
in
inc
sbb
and
cwtl
sbb
sub
cli
jg
jmp
sbb
cwtl
inc
mov
ljmp
cmp
icebp
jnp
or
inc
cmp
mov
mov
sub
aaa
shll
pushf
dec
xchg
push
mov
dec
lea
pop
pop
and
rorb
sub
xor
xor
and
inc
rol
xchg
and
pusha
test
pop
aas
popf
or
adc
dec
sub
ret
mov
sbb
jg
insb
popf
adc
dec
push
lods
push
les
ret
jnp
jmp
or
dec
inc
cld
ss
sub
add
pop
in
jo
xchg
lahf
pushf
push
jge
xchg
push
push
jne
loope
mov
jmp
or
mov
outsb
inc
js
adc
jmp
add
jne
cmp
sbb
outsb
test
ret
loope
xor
push
arpl
mov
cmp
adc
and
loopne
and
insb
xchg
pop
ja
dec
je
sub
clc
adc
fwait
adc
inc
cwtl
push
inc
xor
xchg
js
sbb
jbe
adc
shll
jmp
jle
jb
sbb
push
movl
xchg
mov
int3
outsb
shr
mov
and
rorl
sarl
cmp
sbb
pop
inc
js,pt
or
repz
add
mov
or
jne
pusha
in
test
push
mov
add
inc
call
jle
lret
scas
pop
ret
std
mov
jne
insb
outsb
push
dec
fisubl
add
and
clc
jg
ss
scas
dec
test
movd
jnp
jg
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
xchg
ljmp
jl
xor
mov
and
lret
or
jg
add
mov
fcmovu
xchg
ret
adc
jnp
mov
push
cwtl
orb
ret
das
icebp
jnp
or
add
adc
orb
fnstsw
repnz
roll
lock
mov
mov
jo
mov
pop
enter
mov
fcmovb
sbb
cmpsl
mov
pop
xor
cmp
fldlg2
repnz
jmp
sbb
ret
sbb
jo
xchg
adc
mov
scas
adc
mov
sub
push
mov
addl
xchg
adc
adc
inc
pop
out
repnz
movsb
sbbb
push
cld
mov
sub
jge
mov
jnp
in
loop
jnp
pop
xchg
push
movsb
leave
in
cmc
or
xchg
rolb
shl
insl
flds
jbe
adc
out
xor
adcl
daa
mov
ljmp
fucomip
xchg
lea
push
pop
test
push
jp
and
scas
sahf
mov
testb
cmp
cmpsl
loop
xchg
mov
test
jp
xchg
mov
inc
inc
shrl
ja
jle
mov
cmp
mov
sbbb
mov
mov
cmp
jne
push
bound
subb
lds
daa
mov
shl
in
mov
adc
popf
mov
jle
add
mov
cmp
sahf
shrb
cmpsl
loop
mov
or
ret
sbb
call
pop
mov
jne
popf
sahf
fdivl
hlt
dec
inc
mov
lock
dec
xchg
movsb
rcll
shl
lock
sub
in
stc
push
xchg
test
rclb
push
test
aaa
xor
test
xchg
push
inc
mov
es
aas
out
fcoml
mov
or
outsb
xor
jne
inc
cmp
inc
xor
filds
loopne
in
mov
arpl
inc
lret
int3
adc
push
adc
push
and
jmp
and
push
das
out
adc
sahf
xchg
push
lods
rcll
pop
inc
inc
cmp
cmp
cmpsl
sbb
or
add
lea
xchg
out
sbb
adc
lcall
push
lret
cmpsb
cmp
adc
or
xor
out
add
mov
lock
push
mov
mov
mov
push
in
cmp
and
jne
imul
clc
xlat
je
hlt
cmp
sub
push
xor
bnd
add
rcll
lret
enter
sbb
ja
cmp
adcl
or
dec
leave
shll
xchg
hlt
sbb
mov
rolb
cmp
mov
mov
data16
imul
inc
cmp
aam
pop
pop
mov
lret
jne
sbb
lock
repz
jg
out
popa
or
in
gs
push
or
or
adc
add
mov
movl
mov
cmp
popa
or
cmp
push
add
scas
xchg
add
jmp
add
pop
or
cmp
adc
out
sbb
or
orl
mov
mov
inc
adc
xor
push
dec
loop
cmp
jb
int3
hlt
sub
dec
push
xchg
repz
aad
pushf
xor
xchg
fiaddl
jle
jbe
inc
push
jmp
jmp
stos
mov
cmp
mov
or
je
dec
or
femms
cmp
adc
jmp
cmp
loopne
or
int
cmp
and
push
mulb
das
js
iret
data16
jne
idivb
or
pop
es
xchg
cs
mov
pop
movsl
cmp
mov
mov
dec
add
jb
popf
xor
loope
mov
scas
insb
push
test
add
sbb
cmp
and
inc
arpl
xchg
push
pop
xchg
add
imul
sub
decl
loopne
rcrb
icebp
and
xchg
dec
enter
scas
dec
adc
les
and
or
fdivs
scas
pop
jb
mov
sarb
mov
cmp
jae
sub
lods
jl
push
addb
ret
dec
and
imul
add
in
add
ficomps
xlat
and
dec
sbb
fdiv
inc
cmp
shl
push
and
das
jle
push
mov
push
add
testb
dec
icebp
jl
or
xor
push
or
mov
lea
push
insl
pop
insb
aam
sahf
pusha
jb
and
ss
mov
inc
rorl
in
imul
sbb
movsb
xlat
mov
repz
mov
or
aaa
push
sbbl
xor
and
inc
xchg
mov
xchg
movsb
pop
fadds
mov
lods
mov
push
add
scas
add
adc
push
add
ss
xor
rol
rcrb
cmp
loopne
mov
mov
mov
mov
aad
mov
imul
cs
pusha
fadd
js
jo
arpl
sbb
sub
push
mov
divl
xor
dec
pushl
movsl
and
jnp
jp
and
lods
fstps
test
mov
cmp
je
cmpsb
fsubr
movsl
and
sti
ret
mov
lahf
push
xchg
adc
pop
push
es
xchg
adcb
push
stc
sub
or
cmp
mov
inc
inc
out
divl
nop
xchg
mov
add
movsb
or
pop
sbb
cmp
jno
or
or
dec
mov
cld
test
cmpsb
mov
into
dec
jb
mov
cli
pop
xlat
and
fistpl
add
adc
mov
sbb
inc
and
push
jl
js
decb
lods
mov
testb
inc
mov
adc
xchg
adc
test
loopne
and
or
sbb
je
inc
testl
daa
je
push
jp
push
jmp
inc
stc
and
cvtdq2ps
or
xor
xor
lock
xlat
xor
push
dec
cld
xor
add
jmp
inc
mov
adc
pop
sub
push
adc
add
add
or
and
fsubl
mov
mov
movsl
repz
repz
bound
mov
shll
sbb
and
sbb
or
inc
cwtl
es
or
pop
cmp
pop
bound
add
mov
ret
push
push
ljmp
mov
mov
lock
dec
mov
in
mov
adc
push
or
mov
sbb
cmc
pop
arpl
push
filds
push
and
xor
fcom
mov
jge
push
sbb
jl
dec
cmc
mov
mov
mov
or
stos
sub
testb
push
or
inc
and
leave
test
dec
enter
push
or
cmpsl
cli
mov
cmp
pop
clc
mov
mov
fstpt
xor
fldenv
or
mov
bound
gs
ret
push
jae
lods
shrb
adc
and
mov
pusha
movsb
add
test
les
add
add
ss
and
bound
and
or
dec
jae
cmpb
adc
push
icebp
cmpsb
jmp
pop
jmp
xor
adc
pop
xor
sub
bound
scas
loopne
adc
lea
repz
imul
jo
push
pop
add
and
enter
daa
add
inc
nop
dec
aaa
push
dec
add
jno
jle
add
push
nop
ja
flds
add
add
push
push
xchg
lret
pusha
pop
push
pop
jb
add
pop
lcall
iret
enter
sub
add
mov
or
push
push
and
or
loop
or
and
rorb
lcall
pop
or
cmp
push
push
ja
int
or
push
rsqrtps
adc
add
pop
adc
fwait
sub
cmp
adc
inc
or
out
add
adc
add
imul
add
inc
push
nop
ja
lcall
repnz
adc
and
enter
pop
xchg
out
test
sbb
sbb
add
sbb
sbb
repnz
push
and
add
sbb
ror
sbb
sbb
xchg
inc
mov
jb
sbb
dec
in
bound
sbb
sbb
jae
addb
pop
cmp
add
add
sub
cmp
pop
sti
add
add
cmp
xchg
add
mov
sub
add
cmp
je
lcall
sarb
push
adc
aad
cmp
and
xor
leave
repz
out
add
mov
and
call
adc
dec
dec
cwtl
jmp
iret
enter
or
test
jmp
jmp
incb
ss
push
in
in
in
cltd
jb
mov
inc
in
sahf
and
enter
jge
mov
out
pop
lock
sbb
nop
addr16
icebp
pslld
repnz
out
std
repz
nop
repz
std
hlt
hlt
in
cmp
hlt
fwait
mov
cmc
cmc
inc
jg
ret
enter
pop
idivl
xchg
inc
enter
clc
clc
sbb
pusha
cmp
adc
inc
cmp
pop
enter
cli
cli
jb
jb
iret
sti
sbb
enter
stos
cld
cld
cld
je
sub
dec
fdivrp
push
setle
jns
dec
mov
xor
sbb
inc
or
jns
adc
ret
inc
or
xor
jp
or
in
cmp
mov
jecxz
jecxz
pop
push
adc
in
push
xchg
add
icebp
inc
mov
sub
stc
daa
sbb
sbb
out
adc
enter
add
mov
dec
sti
sub
and
mov
cs
cltd
in
add
and
mov
xchg
inc
add
js
out
out
sbb
pusha
sub
push
lock
cmp
add
cli
push
cli
push
push
adc
orb
stc
and
push
stc
xchg
pop
stc
out
imul
fwait
and
add
xchg
pop
leave
adc
out
clc
cmp
lret
sti
repnz
push
fdivr
cltd
mov
scas
enter
inc
inc
lock
test
xlat
ja
dec
dec
and
popa
jo
inc
mov
sub
mov
fisttpll
mul
pop
shl
or
pop
and
idivl
add
out
out
inc
push
fsub
cltd
out
dec
pop
and
inc
mull
divl
imul
ljmp
idivb
notb
xchg
sbb
ret
jno
mulb
jns
mov
and
sbb
pop
repnz
sbb
movsl
test
mov
mov
pop
xchg
cmc
les
pop
scas
dec
push
cmp
div
idivb
jmp
xor
iret
in
add
clc
clc
jecxz
push
xor
stc
popa
cmp
rclb
jno
les
jne
and
and
dec
mov
sbb
pushw
data16
test
idivl
jo
sti
movsl
push
mov
dec
shl
lret
push
or
loope
pop
es
loope
push
loop
dec
push
jno
scas
repz
sub
repz
jno
imul
cmp
pop
andl
push
adc
push
sbb
rclb
cmc
call
repnz
repnz
sbb
pop
in
in
cmc
call
repnz
addl
sbb
cmp
icebp
js
divb
dec
push
and
dec
pop
je
push
icebp
cmp
sub
cmc
cmc
dec
and
mov
lock
test
lock
repnz
lock
in
aaa
xchg
stc
cmc
jne
in
xlat
mov
xor
jmp
inc
mov
push
lock
js
pop
and
test
ss
cmc
or
movsb
cmpl
add
sub
out
ret
jge
add
cmovno
push
add
sbb
pusha
inc
int3
add
adc
dec
add
fwait
push
jnp
lock
add
adc
ds
or
dec
add
jmp
mov
and
jmp
pop
repz
and
fwait
in
incl
add
push
jns
lcall
adc
ficomps
ljmp
cmp
pop
jl
fists
mov
pop
lret
sbb
pop
push
xor
pop
rcll
push
lods
sbb
jns
data16
push
xor
push
aas
sbb
jns
scas
adc
loop
add
add
roll
or
add
fidivl
fs
out
add
fcomi
decl
jle
rolb
add
xor
test
mov
xor
adc
loope
inc
inc
je
int
lret
cmp
nop
push
sub
adc
std
cld
push
xor
add
and
add
sub
lcall
mov
mov
and
adc
roll
jge
push
ret
fnstcw
je
push
fwait
pop
pop
xchg
inc
add
adc
fsubrs
or
adc
or
inc
decl
push
fdivs
fistpll
fsubrs
fmuls
and
add
add
sbb
in
loopne
pop
or
test
sbbl
repnz
adc
fcmovnbe
inc
sub
mov
mov
add
incl
leave
jb
cmpl
mov
adc
push
incb
xor
mov
mov
rorl
mov
enter
mov
adc
and
je
lea
mov
dec
ljmp
pop
cli
sbb
mov
loopne
push
jge
inc
inc
mov
pop
ljmp
push
sub
in
inc
dec
jae
pusha
std
add
mov
clc
and
in
and
or
push
enter
inc
mov
xor
insl
and
jne
jne
inc
mov
jb
pop
ja
add
test
adc
pop
inc
inc
inc
inc
adc
add
sub
pop
mov
jbe
dec
mov
imul
add
add
add
mov
cmpsb
and
clc
fadd
rolb
jo
push
mov
fs
cmpsb
or
cmpb
inc
or
repnz
je
pop
shll
pop
mov
add
sbb
pop
cmp
xor
inc
rolb
ffreep
lret
push
inc
and
push
pop
ret
mov
add
mov
cld
inc
movsb
mov
add
mov
or
fwait
jge
or
jl
or
lods
push
mov
push
or
push
lea
mov
adc
loope
add
fcompl
out
xchg
out
xor
jg
push
hlt
inc
lea
cmp
jne
orl
mov
sub
sub
gs
dec
xchg
xor
and
cmp
push
xor
std
fwait
xor
jmp
mov
in
mov
pop
and
mov
insb
adc
pop
jne
dec
add
add
lds
aad
mov
jb
rorb
xor
or
div
add
insl
xor
mov
sbb
lcall
mov
sub
cmp
cs
and
xor
jae
push
movsb
sub
add
mov
jp
ret
sarb
sarb
pop
out
scas
pop
adc
fadd
inc
adc
cmc
mov
or
sbb
js
test
or
push
inc
cmp
sub
jbe
inc
testb
cltd
clc
push
or
rclb
and
pop
bound
mov
mov
mov
in
shr
shlb
rolb
mov
inc
push
push
es
inc
xchg
cmp
int
stc
add
pop
pop
int
jo
ret
cmp
xorl
loopne
pop
cli
cld
fisttpl
mov
cwtl
push
cmp
jne
jnp
or
adc
or
push
pushf
push
negb
push
cmp
jne
mov
push
cmp
jne
cltd
cmpsl
mov
and
adc
mov
ljmp
das
add
inc
adc
pushf
out
stc
jmp
std
std
jmp
cld
hlt
int3
nop
xor
fimuls
xchg
xchg
adc
mov
or
mov
pusha
shrl
repnz
pop
lock
mov
mov
adc
lds
leave
cmp
ret
jne
mov
and
jnp
movsl
leave
push
sti
adc
and
or
sbb
push
push
xchg
add
inc
push
or
and
in
ficomps
mov
or
xor
pop
fidivl
adc
mov
add
cmc
aaa
adc
push
add
sbb
fimull
xor
lcall
mov
xor
ffree
push
es
rcll
inc
divl
rolb
sbb
stc
aad
or
push
jmp
mov
rcll
shr
ss
or
mov
push
lods
mov
jmp
sbb
outsb
out
and
ja
add
bound
ljmp
lahf
outsb
sbb
cwtl
ja
nop
cmp
push
pop
add
and
and
les
add
inc
and
cmp
dec
cmp
dec
sbb
jl
cli
inc
dec
xchg
testb
push
sub
pop
hlt
jae
ret
nop
shlb
pop
lret
clc
or
dec
icebp
call
mov
jle
dec
sub
insl
mov
imul
stos
add
testb
inc
inc
pop
sbb
sahf
mov
out
mov
push
bound
mov
jp
rcrl
mov
test
push
mov
xor
je
mov
inc
adc
add
push
mov
add
dec
sbb
add
movsl
icebp
dec
sbb
shlb
mov
adc
mov
or
loop
cmp
andb
stc
mov
push
pop
and
int
push
xchg
cmovs
scas
push
pop
test
or
sbb
push
test
sbb
pop
xchg
cmp
jb
rep
jmp
ret
sbb
mov
fwait
mov
enter
xor
lea
fdivp
sub
mov
push
cwtl
pop
or
jb
inc
add
xor
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
cmp
clc
xor
call
cld
lahf
fmuls
inc
in
call
cmp
lock
hlt
sbb
iret
repz
clc
cld
mov
pop
test
lea
add
fld1
sahf
xlat
inc
sub
cmp
dec
pop
and
push
jno
nop
nop
inc
pop
push
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
cld
out
shlb
lds
lea
daa
stc
popa
mov
mov
les
pop
nop
aam
xchg
clts
and
fiaddl
jl
mov
out
add
inc
test
out
push
add
nop
dec
dec
addr16
je
cmpsb
pop
add
ljmp
mov
or
push
test
pushf
movsb
mov
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
rclb
fadds
call
outsl
dec
push
push
add
pop
wrmsr
sub
dec
daa
ja
aam
adc
bnd
push
movsb
mov
mov
mov
incl
inc
decl
jne,pn
pop
pop
out
mov
fwait
test
cmp
fildll
cmp
jbe
push
cltd
pop
idiv
add
mov
or
or
ja
clc
or
sarb
dec
mov
mov
xor
enter
and
jmp
cmp
jae
dec
mov
popf
jne
pop
jae
pop
jbe
mov
dec
fmull
pusha
add
sub
ds
scas
adc
adc
cmp
sub
push
jg
mov
imul
sbb
add
movsl
test
or
dec
popa
stos
std
sbb
dec
dec
je
push
push
cmp
inc
or
jl
pop
roll
and
xor
inc
cmpsl
pop
imul
out
outsl
sahf
push
mov
inc
daa
test
cmp
das
sbb
cmpsl
mov
add
and
mov
fadd
xor
pop
and
add
push
jo
dec
adc
sub
testb
push
fcmovbe
jl
cmp
mov
inc
sbb
les
scas
and
or
jmp
sbb
mov
scas
sub
sub
insl
or
aas
sbbl
push
cltd
pop
idiv
int
sub
ds
inc
xor
daa
cmc
jge
xchg
inc
out
cmp
and
sahf
xchg
shrb
or
mov
sahf
popf
addb
push
pop
aas
mov
fs
add
loopne
adc
add
adc
jl
mov
sbb
loopne
adc
or
xchg
insb
sub
sbb
jb
mov
cmp
rorl
mov
push
sbb
pop
incb
inc
jns
xlat
pop
xor
call
pop
cmp
add
sti
cmp
xor
xchg
sub
sbb
push
fiadds
in
xchg
add
addb
clc
test
jle
push
mov
and
xchg
push
js
lahf
push
cmp
mov
and
je
sbb
jl
ud2
and
fs
sti
ljmp
jno
mov
mov
fnsave
int3
dec
jo
mov
je
testl
or
or
inc
in
xchg
inc
or
push
loop
lcall
pop
mov
or
mov
cltd
sbb
pop
xchg
imul
xchg
inc
mov
push
aaa
orl
stc
cmp
int
xchg
or
stc
pop
push
adc
insl
stos
add
jg
xchg
inc
jmp
push
pushf
inc
mov
loope
adc
xchg
in
mov
sbb
inc
and
fldt
ret
push
je
lods
mov
mov
push
movsb
xchg
hlt
or
mov
add
jge
loop
cmpsl
lods
or
push
hlt
mov
pusha
add
push
data16
repz
adc
inc
adc
or
out
mov
jns
call
ss
ds
push
imul
mov
in
dec
mov
call
cmp
ret
xchg
and
sbb
sarb
clc
push
pop
inc
fdivrs
push
sub
imul
js
mov
adc
cmpsb
cmp
aam
aam
add
idivb
jg
jbe
mov
enter
gs
and
inc
popa
popf
ljmp
push
pushf
fisubl
mov
inc
inc
cmp
je
xchg
mov
test
sbb
adc
add
mov
movsl
fidivrl
dec
je
and
mov
test
adc
aam
add
or
les
mov
incl
lcall
adc
pop
pusha
push
mov
push
inc
sbb
xchg
sub
lret
ljmp
mov
mov
insl
sub
mov
or
sarl
or
xchg
dec
sbb
push
into
hlt
stos
add
xchg
or
movl
or
jg
and
mov
addr16
test
cld
rorb
pop
test
adc
jg
cmp
mov
cli
sarl
mov
xor
sar
sub
or
add
push
nop
or
mov
int
xor
sbb
fs
pop
add
sub
add
frstor
mov
push
fimuls
dec
movsb
jb
jns
sub
hlt
sub
inc
sbb
inc
cmp
mov
adc
fildl
ds
mov
add
jne
inc
push
shl
lea
popa
bound
xchg
jmp
dec
or
stc
cmpb
cs
dec
jmp
test
jmp
int3
pminsw
and
and
shlb
cmpsl
and
or
clc
ret
jo
and
cmp
call
cmp
rolb
mov
dec
dec
ret
in
inc
jl
lock
adc
adc
sub
xchg
jge
outsb
jns
and
jmp
push
adc
add
push
daa
push
cmp
inc
in
mov
mov
push
testb
pop
js
lcall
inc
push
mov
das
cmp
loopne
or
inc
inc
call
mov
pop
mov
push
shlb
jbe
dec
lods
inc
fucomi
sub
cltd
pop
stos
call
jmp
mov
scas
inc
fsubl
pop
jmp
jmp
ja
inc
jmp
aas
add
add
cli
and
add
cmc
int3
and
adc
cs
pop
jb
mov
leave
in
inc
jne
add
and
cmp
adc
pop
pusha
leave
pop
fldz
pop
pop
fidivrl
push
xor
adc
mov
repnz
xor
inc
nop
pop
mov
test
movsl
dec
pop
push
rcll
mov
add
add
add
or
lock
xor
aas
xchg
add
push
outsb
mov
add
xor
cld
ljmp
xor
fucom
pop
arpl
xchg
push
jno
inc
imul
pop
outsl
mov
xchg
aas
inc
mov
inc
jge
cmp
int
dec
les
cmp
js
fs
pop
adc
outsl
or
movsb
cld
adc
into
aam
adc
push
orb
shlb
jno
sub
in
ret
cwtl
inc
inc
dec
into
test
dec
jbe
jbe
xchg
jl
int3
js
adc
cmp
and
sub
add
into
inc
jo
lock
js
rclb
repz
aaa
mov
bound
pop
and
xor
pop
sbb
in
jo
lcall
dec
push
fiadds
xchg
xor
gs
clc
cmp
sub
popf
rcrl
loop
enter
or
scas
lret
add
mov
inc
xor
aam
push
gs
in
jne
ret
push
mov
jmp
mov
sbb
inc
loope
add
dec
lcall
std
data16
movb
jg
enter
push
mov
sbb
adc
adc
imul
cmp
bound
lahf
addl
fists
scas
je
sbb
cld
arpl
imul
fimuls
fidivrl
das
bnd
and
adc
push
sub
push
pop
adc
into
sub
adc
movsl
add
add
dec
xchg
fiadds
shlb
adcl
add
mov
sbb
sbb
pop
or
out
jbe
xor
cmc
subl
hlt
mov
fildl
fcomps
mov
cmp
hlt
xor
dec
xchg
jle
repnz
rorb
xchg
inc
xchg
loope
and
jne
pop
pop
lods
popf
jmp
mov
lcall
xchg
cmp
in
fistpl
cmp
push
pop
xor
shlb
shll
sbb
jne
mov
pop
mov
mov
push
loopne
push
mov
addr16
push
pusha
sbb
push
call
mov
sub
loope
rorl
incl
inc
flds
push
sub
sub
call
inc
inc
aas
sbb
pop
imul
add
fwait
lcall
adc
cmpsb
mov
add
test
or
inc
push
pop
adc
and
pop
mov
and
shrb
incb
scas
mov
dec
jo
push
sub
mov
neg
mov
inc
jge
mov
dec
cli
or
add
jmp
cmp
or
adcl
je
loop
pop
cmp
jb
cmp
jb
lahf
mov
dec
mov
mov
dec
dec
mov
or
test
pop
or
or
or
adc
lret
rolb
or
hlt
or
add
sub
or
aad
push
xor
add
imul
lock
rcll
and
add
ljmp
dec
std
mov
adcl
jg
add
mov
orb
arpl
xchg
mov
js
push
inc
dec
mov
insl
ss
imul
shrl
lret
lock
jae
cmp
and
pop
pop
jle
add
mov
mov
jno
ljmp
inc
sub
jbe
or
sbb
pop
push
clc
lcall
lret
arpl
outsb
adc
in
and
test
sub
and
test
mov
adc
sarb
xor
jne
roll
jo
ret
test
sub
cmp
data16
jecxz
imul
xor
fistpll
rcll
inc
nop
sub
in
push
adc
push
dec
fimull
pop
dec
ss
add
fs
std
mov
fs
and
scas
inc
ret
es
add
push
xor
pmaddwd
push
in
adcb
adc
pop
insl
adc
test
pop
fists
faddl
xchg
adc
das
inc
adc
popf
inc
jmp
pop
push
sub
std
fcomip
and
jo
adc
sub
rol
jl
out
inc
call
and
pop
adc
cld
fmuls
and
gs
out
cmp
int
inc
or
daa
in
cmpsb
mov
xor
mov
sbb
mov
mov
push
add
add
jo
add
decb
ss
sub
std
add
jns
fdiv
fists
add
fldl
xchg
rcll
push
mov
out
or
mov
fstl
adcl
ja
dec
loopne
lahf
adc
push
aaa
sarb
jmp
jmp
aas
jge
push
jecxz
mov
push
rorl
cmp
add
mov
dec
xchg
int3
add
or
xor
mov
push
mov
adc
loop
jo
mov
je
add
iret
xor
pop
xor
pop
push
dec
or
pop
inc
frstor
pushf
testb
push
fs
push
call
insb
add
mov
sti
sbbb
add
inc
adcb
dec
xchg
sub
pop
pushf
jo
lock
test
add
jb
cmc
mov
scas
jl
jg
pop
fdivrs
rclb
and
leave
addb
xchg
fdivr
mov
mov
xchg
pop
dec
ja
cmp
push
or
dec
or
and
push
and
jnp
mov
rorl
pop
cmpsl
mov
or
and
pop
pushf
mov
push
or
push
cli
loop
mov
cmp
sub
sub
cmp
mov
sub
mov
sbb
and
das
mov
push
or
add
das
and
popl
adc
lods
cmp
add
inc
rclb
sub
test
movl
cmp
xor
cmp
or
or
push
sbb
mov
fmull
idivl
pop
enter
or
inc
sub
call
push
pop
jo
inc
push
xchg
sbb
sub
sarb
out
or
popf
pop
testl
and
xchg
ret
mov
or
movsb
sbb
bound
ret
pop
shll
test
jle
shl
and
clc
mov
sub
into
pop
sub
mov
mov
dec
jne
lea
cld
cmp
or
xor
or
lods
sbb
push
aaa
mov
add
cld
add
pop
mov
mov
and
out
push
movb
and
lea
les
ret
sub
xor
ljmp
pop
test
ja
xor
cld
ficoml
push
push
ja
loop
andl
push
cmp
push
adc
popf
mov
and
int
call
sub
orb
mov
jmp
and
je
and
mov
lahf
xchg
adc
aad
jmp
mov
adc
dec
clc
mov
rcr
std
pop
mov
cmp
inc
jp
sub
or
push
ds
idivb
add
jmp
cmp
push
and
and
add
add
je
inc
xchg
lahf
es
sbb
push
pop
cmp
clc
ja
mov
jecxz
mov
jg
or
ja
test
and
orb
push
mov
inc
hlt
cmp
mov
ss
cmpsl
mov
cmp
push
jns
adc
xlat
push
mov
xor
out
insb
push
cld
pop
inc
cmp
jmp
mov
adcl
push
rcr
pop
cld
subl
cmp
push
cmpsb
push
sbb
cmp
out
aam
inc
cmp
lahf
add
fsubr
fldt
cmp
xchg
stos
enter
or
lods
xor
cmpb
pop
dec
pop
mov
bound
adc
cmp
inc
inc
sub
dec
sbbl
sti
mov
lock
out
into
std
insl
sub
in
push
jmp
mov
insl
xchg
addl
jp
pop
popf
xor
inc
sbb
inc
rolb
and
adc
shrb
push
call
rol
aas
add
lea
mov
rcll
ret
inc
pop
leave
inc
push
aas
pop
in
inc
aad
mov
imul
push
loope
pop
add
mov
aaa
jmp
mov
into
sub
jb
mov
mov
adcb
inc
cmp
ret
and
in
inc
inc
add
mov
shrl
inc
pop
xchg
shl
out
jge
add
jb
mov
xor
shr
gs
push
lret
out
fsubrp
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
mov
roll
jl
sbb
sti
pushf
divb
aaa
js
icebp
inc
push
mov
inc
dec
jne
xor
sub
movsb
mov
add
adc
add
gs
and
xor
test
xor
jne
pusha
pop
xchg
push
add
jp
push
pusha
add
bound
push
mull
jge
pop
push
push
sub
aam
or
and
add
fstpt
mov
cmp
je
shlb
aas
push
push
pop
js
fsub
inc
or
aam
lcall
int3
push
or
daa
mov
notb
fsubrs
repnz
add
addr16
dec
xor
and
das
mov
mov
mov
push
out
frstor
dec
loopne
or
pop
std
sti
sub
jmp
xor
dec
sbb
mov
inc
jne
gs
jmp
aad
out
ss
mul
jmp
ja
pop
sbb
es
push
pop
ljmp
xchg
out
xchg
cmp
imul
rol
add
lret
out
jl
cmp
push
inc
and
jno
cmpsl
pop
and
dec
mov
ficomps
in
sub
cmp
es
mov
or
mov
pop
adc
mov
pop
and
mov
mov
mov
lahf
das
adc
jnp
inc
inc
sbb
sub
xchg
int3
call
insb
sub
and
ljmp
inc
pop
addl
in
pushw
cwtl
sub
fisubrs
cmova
aaa
out
call
ret
push
cmpl
add
icebp
push
pushf
or
cmp
sahf
pop
adc
inc
add
pop
decl
inc
inc
movsb
shlb
push
es
xor
sbb
push
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
jne
cmpl
push
pop
ret
mov
aam
movsl
sub
pushf
push
dec
ss
clc
and
movsb
and
dec
xor
or
xorb
aam
sub
and
popa
test
push
push
and
rcrb
clc
and
icebp
pop
jbe
cmpl
imul
ret
sbb
and
dec
cmp
loope
xor
cltd
sti
imul
bound
add
or
rcll
adc
mov
pop
mov
mov
and
add
xlat
push
cmp
rol
cmp
push
sti
and
daa
mov
adc
cli
add
pop
push
sub
pop
lret
add
cmp
out
add
push
pop
and
test
lret
outsl
std
out
call
int
and
add
sub
push
push
push
mov
pop
or
aas
push
inc
push
loope
pop
arpl
mov
add
pop
dec
popa
xchg
insb
or
jb
rorb
add
sub
cwtl
and
sbb
sbb
xrelease
push
jo
in
lret
imul
add
rolb
or
jno
les
add
fidivrl
pop
or
inc
mov
jg
pop
fnstcw
test
adcl
mov
fldenv
sub
push
adc
popf
cmpsb
push
xor
dec
sbb
xchg
shrl
dec
mov
clc
orl
nop
or
or
rol
xlat
xchg
cmpsb
out
push
mov
ss
jo
je
sahf
repz
sub
data16
inc
and
pop
or
sbb
inc
push
in
cmp
pmulhuw
inc
dec
pop
cmp
xchg
and
xor
push
sarb
lock
rcpps
push
dec
dec
jns
inc
nop
adc
jbe
gs
std
cmc
and
pop
cmp
je
jle
sbb
cli
test
jmp
sbb
lods
ret
push
xorl
sub
inc
lcall
or
test
mov
cwtl
into
mov
cmpl
popf
mov
push
mov
or
dec
cmp
daa
test
inc
loopne
cmpsb
int3
dec
add
cmpsb
jp
xchg
mov
stos
adc
lahf
jo
imul
mov
and
imul
cwtl
addr16
nop
lret
loopne
call
lea
mov
xchg
mov
sbb
xor
add
movl
sbb
mov
hlt
xchg
aaa
inc
sub
andl
nop
dec
lea
cmp
cmp
sub
push
xor
jle
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
add
shrl
imul
dec
cld
adc
andl
aam
adc
addl
lea
icebp
cmp
push
mov
in
mov
push
shl
jmp
in
js
jmp
xor
popa
jge
dec
ret
inc
add
push
push
daa
mov
addl
mov
mov
add
inc
call
call
inc
popa
fdivrs
pop
aam
sub
nop
pop
call
or
jnp
push
dec
pop
pop
in
jb
aam
aam
sahf
imull
xchg
or
push
mov
popa
jl
jns
cwtl
jno
mov
loope
inc
pop
fsts
push
sbb
clc
or
pop
test
push
jo
and
fimuls
je
pop
nop
test
test
rcrb
jb
ret
pusha
out
mov
jns
pusha
mov
or
jns
out
push
xor
inc
dec
push
pop
add
sbb
or
test
popf
push
mov
inc
cld
add
pop
sbb
push
cs
loopne
push
and
push
xor
adc
movl
jle
pop
call
dec
rcl
adc
jne
outsl
pop
mov
cmp
jge
inc
mov
shlb
mov
sbb
sbb
mov
adc
call
add
and
std
or
mov
or
and
or
rcl
dec
and
ret
inc
aam
mov
lea
jbe
cwtl
test
hlt
fsubrs
ljmp
js
push
mov
and
dec
loopne
fwait
fwait
xor
sbb
orl
or
inc
or
je
mov
repnz
adc
jo
jae
xchg
add
jl
dec
daa
int
or
pop
pusha
movsl
or
push
push
jge
jmp
mov
or
mov
or
push
movl
add
jmp
adc
xchg
lock
mov
sbb
sbb
jbe
loope
mov
push
sbb
dec
lds
cmp
or
movsl
push
test
push
or
or
sbbb
cmp
out
jno
mov
cwtl
outsl
push
sub
es
mov
lock
aam
add
sub
loope
divb
jle
sbb
mov
test
ja
enter
js
call
sub
lock
mov
inc
dec
imul
adc
hlt
jecxz
jmp
adc
pop
dec
cmpsl
mov
push
inc
and
xor
push
jo
xchg
and
inc
call
mov
xor
inc
popa
jns
hlt
or
adc
jecxz
inc
sbb
xor
add
push
pop
leave
ja
push
roll
jo
xchg
enter
insl
and
sbb
jp
test
lea
inc
cmp
cs
aad
adc
pop
push
pop
dec
or
pop
std
mov
push
mov
jmp
and
cmp
or
daa
jmp
mov
mov
mov
ret
lock
and
lea
dec
pop
loop
sub
mov
mov
dec
fildl
aaa
add
push
xor
sub
xor
orb
jae
and
add
sbb
sbb
pushf
aaa
jecxz
dec
xor
ss
daa
test
xchg
test
xchg
mov
push
mov
adc
jbe
push
inc
inc
adc
test
test
xchg
push
fnsave
xor
or
jno
adc
stos
std
fdivrl
add
enter
or
iret
adc
shl
adc
sbb
clc
dec
xchg
and
pop
or
push
jne
pushf
testb
and
push
or
jns
dec
gs
or
push
xchg
add
push
sub
pop
sub
push
loopne
cli
add
add
inc
inc
jp
mov
mov
movb
and
sbb
test
shll
mov
ljmp
sbb
lock
or
dec
jmp
lea
ret
jmp
sub
push
jae
cltd
push
test
mov
pop
orb
add
mov
aaa
sbb
nop
adc
sub
dec
push
sbb
addb
sbb
jp
pop
flds
insl
mov
xor
add
jmp
push
idivl
jb
xchg
je
inc
jns
loopne
xor
cmp
jo
mov
dec
mov
shl
jo
test
test
push
mov
sbb
stos
addl
or
in
mov
mov
fsubs
jecxz
idivl
mov
pop
jne
push
cmp
mov
je
xor
arpl
mov
inc
mov
leave
mov
leave
test
or
or
test
sbb
movsb
and
dec
cld
jle
test
rclb
lea
or
ja
mov
movsbl
and
test
push
clc
or
dec
roll
movsb
cs
jecxz
and
or
inc
popf
arpl
xchg
les
pop
cs
clc
fsubrs
filds
sub
dec
or
je
imul
or
fnstcw
pop
or
lret
and
add
sbb
jo
inc
inc
cli
xchg
sub
insb
loopne
cmpsl
or
aam
mov
mov
mov
mov
shr
lea
cltd
pusha
xchg
ja
movsl
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
push
cmp
push
or
inc
insb
je
dec
and
xor
subb
loope
insb
loopne
sub
mov
sbb
pop
and
pop
fdivrl
pop
or
xor
mov
add
xor
pop
sbb
fs
cmp
jb
or
imul
int
cmc
jne
js
xchg
xchg
mov
je
mov
pop
mov
push
ret
cmpsl
and
pop
xlat
mov
jb
or
push
sbb
jle
lret
mov
pop
push
or
push
ret
mov
int
inc
mov
fdivr
cmpsl
andl
sub
lock
test
je
push
and
in
jae
nop
testl
jl
jge
shll
jne
das
mov
adcl
jmp
ds
sbb
dec
and
xor
leave
jo
or
loopne
ret
or
pushf
in
rcl
in
sub
mov
and
adcb
push
mov
scas
jl
xor
jo
push
addl
dec
pop
inc
mov
xor
sbb
push
dec
lret
inc
pusha
xor
nop
cmp
sbb
test
sti
ss
fisttpl
or
pushl
cmpl
cmp
setp
push
pushf
hlt
mov
inc
insb
cli
inc
cmp
pop
or
sbb
xor
xor
add
adc
je
inc
cmp
out
pop
jns
push
sbb
adc
pop
adc
outsb
jo
add
add
aad
sub
addr16
decb
repnz
push
outsb
je
test
jns
sbb
xchg
je
or
movsb
xor
jae
rcr
test
mov
push
clc
je
data16
movsb
push
pusha
pop
add
or
mov
mov
sbb
pop
jecxz
push
stos
add
or
hlt
cli
jge
mov
jne
mov
jmp
cmp
jle
out
je
insl
cmpl
add
pop
repnz
mov
sub
shlb
adc
mov
out
test
cmp
xor
adc
dec
xor
mov
scas
jnp
dec
sub
jo
stos
push
js
inc
mov
or
jecxz
lea
stc
rcll
push
pop
test
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
adcl
push
push
or
jne
outsb
mov
aam
jae
addr16
decb
mov
dec
inc
daa
mov
mov
in
xchg
xor
sub
xor
sbb
push
adc
in
push
lret
stc
scas
call
push
xor
dec
je
adc
dec
adc
jmp
ss
outsb
or
je
cltd
xchg
jp
xchg
dec
sub
add
mov
jl
jae
push
adc
stos
and
push
nop
pop
cmp
shrb
xorb
mov
or
jecxz
popf
jmp
lret
mov
mov
or
jne
and
lea
ficomps
das
sbb
pcmpgtd
scas
mov
inc
dec
and
lcall
cltd
push
cmpsl
enter
xor
mov
push
nop
xchg
clc
sahf
add
mov
dec
jmp
loopne
fsubrl
pop
xchg
sub
inc
cmp
cmp
aas
je
into
lcall
shlb
mov
movb
inc
jmp
cmovl
or
jmp
dec
mov
insb
cmp
inc
inc
xchg
sub
inc
int3
jle
sar
roll
lret
sti
fisubrl
outsl
data16
inc
add
push
rorb
sub
push
test
pop
push
mov
dec
and
mov
cltd
sub
sub
lea
cli
pop
shl
mov
jp
push
dec
mov
pop
out
xor
cmp
jns
xor
orl
imul
subl
in
nop
rcr
aaa
cmp
call
rcr
push
shll
nop
popa
jle
sbb
mov
sbb
jmp
pop
jg
and
or
in
cmpsl
les
icebp
jl
testl
push
xchg
adc
lahf
add
adc
movsl
daa
pop
mov
mov
mov
addb
sub
movsb
cmp
inc
mov
xchg
adcl
adc
sub
ret
add
mov
imul
sahf
cmpsl
jns
rcrb
push
ss
cmp
or
push
xchg
rclb
popa
fs
mov
inc
test
mov
inc
mov
mov
mov
dec
mov
add
lea
push
hlt
cmp
bsf
sbb
test
mov
rolb
and
lcall
stos
aam
daa
push
mov
xor
cmp
fs
xchg
les
rcll
outsl
sti
lret
or
jl
push
pop
lcall
add
dec
popa
out
loope
add
pop
out
pop
push
or
jge
test
cltd
and
mov
inc
insl
shl
xor
cmp
ss
cmc
sub
jo
push
xor
jne
rolb
or
addl
clc
sbb
inc
adc
xor
inc
imul
add
enter
or
cmc
lock
xchg
orb
sub
cmp
adc
xchg
test
xlat
ss
pop
cmp
lods
xchg
outsb
jbe
push
xchg
decl
imul
add
jmp
movsb
sub
xchg
mov
cmp
rclb
test
jmp
inc
xor
dec
mov
cld
mov
sub
cld
shr
mov
imul
adc
insl
pop
test
dec
or
sbb
adc
mov
push
lea
mov
ret
or
mov
ljmp
fs
lcall
cmp
cmp
aas
jbe
push
pop
mov
dec
or
pushl
and
mov
shr
lea
not
and
decb
mov
ljmp
xor
mov
inc
or
mov
pop
add
add
sbb
and
push
or
sub
jmp
shrb
mov
std
pop
shlb
and
sti
add
pop
movsl
add
sub
mov
sub
lret
imul
xor
lea
jno
jno
mov
sti
pop
mov
shr
not
and
add
or
xor
pop
fisttps
das
mov
xor
sub
add
mov
push
or
xorb
adc
repz
int3
inc
mov
sti
setnp
adc
mov
mov
inc
mov
pop
pop
inc
xchg
mov
push
or
mov
mov
jmp
dec
adc
lods
sbb
mov
orb
aam
xor
inc
xor
pop
adc
mov
nop
mov
cmp
xor
je
inc
shl
add
scas
jp
push
call
mov
in
gs
gs
push
or
cli
cmp
sub
add
inc
adc
inc
test
pop
test
pusha
add
and
push
add
cmp
mov
add
test
insb
hlt
mov
rcrl
stos
popa
inc
dec
adc
dec
sti
lea
cmp
mov
cmp
ret
das
mov
fs
pop
adc
jle
loopne
mov
and
ret
shrb
add
xor
fldl
sarl
add
rcrb
push
dec
ret
inc
adc
lret
pop
scas
and
jp
xor
adc
adc
mul
cwtl
out
int
jmp
orl
sbb
cmpsl
incl
insl
dec
and
sbb
call
fisttps
rolb
mov
imul
mov
pop
sub
in
dec
jne
lret
or
mov
mov
lret
xor
sbb
pop
in
popa
push
lea
xchg
rolb
into
inc
sub
shr
out
sti
add
inc
orl
orl
or
adc
neg
and
inc
cld
lock
call
jne
add
je
clc
add
dec
incb
or
jb
dec
loope
loopne
sub
fs
inc
mov
inc
fbld
sahf
pop
mov
mov
lock
mov
dec
inc
jne
or
lds
not
and
or
les
sbb
popf
movups
adcl
sub
pop
shr
inc
or
mov
dec
cld
mov
adc
dec
cmp
movsb
xor
pop
adcl
add
rclb
xlat
jl
fldcw
cmp
stc
add
push
xchg
add
mov
int3
push
pop
lcall
pop
inc
add
stc
sbb
clc
rcr
sub
add
cmp
or
rol
dec
or
out
add
push
jns
dec
enter
into
add
xchg
sub
gs
adc
pushf
sar
dec
mov
cs
mov
pop
hlt
lea
push
outsb
pusha
idivb
or
imul
shll
lcall
adc
js
jmp
jmp
aaa
js
andl
mov
insb
xor
mov
ds
jl
add
or
mov
sub
pop
xor
push
sar
dec
loope
pusha
push
jp
movsb
pop
cs
cmp
cwtl
cltd
loopne
cwtl
sarb
xor
cmp
ss
jo
dec
je
filds
mov
call
ja
imul
mov
adc
adc
fimull
xor
dec
lea
mov
sbb
aaa
xor
mov
scas
rolb
lods
push
cmp
mov
decb
into
mov
push
cmp
rdmsr
mov
sbb
or
aaa
lret
sbb
or
jp
insb
loope
pop
iret
push
add
loope
mov
cmp
dec
push
push
push
jge
inc
shll
shr
adc
adc
ret
inc
in
or
stos
pop
push
loopne
dec
or
loop
inc
push
nop
cmp
and
decb
xlat
mov
push
mov
call
sbb
ja
cli
fnstenv
lcall
dec
sahf
lock
aaa
arpl
mov
mov
orb
mov
imul
mov
sbb
clc
test
sbb
rorl
cmp
xor
mov
dec
pop
iret
jne
addb
mov
mov
push
and
xor
jmp
mov
lret
scas
dec
mov
and
jne
mov
loope
aaa
loopne
and
leave
inc
test
inc
push
stos
sbb
or
out
icebp
sbb
jle
rolb
aam
xor
dec
add
xchg
xchg
loopne
cmc
sbb
iret
push
inc
jge
mov
out
and
mov
pushf
insl
std
push
decb
jne
lock
jmp
adc
sub
dec
mov
inc
pusha
dec
bound
dec
push
and
push
clc
into
xor
dec
test
xor
jp
cmpsl
movsl
call
push
fs
pop
xor
inc
inc
fsubrs
cmp
fs
cmc
push
or
dec
sarl
lock
or
inc
or
dec
or
push
mov
rclb
adc
push
jge
mov
call
stos
adc
and
lods
jo
aam
test
lea
rcrb
cmp
into
push
pop
add
lods
ds
addl
inc
add
cmp
faddl
sbb
cmp
loopne
sbb
or
out
or
xorl
jp
clc
jp
xchg
pop
and
inc
sub
adc
loopne
enter
addl
rolb
jp
mov
jo
imul
dec
popa
mov
pop
or
movb
testl
mov
add
and
jnp
clc
flds
pxor
cmp
cmp
sub
add
shll
pop
das
push
mov
jmp
dec
test
lock
orl
push
and
xchg
push
or
push
jbe
xor
xchg
inc
loop
sbb
les
push
dec
dec
adc
ficoms
sti
ficompl
fstp
xor
test
dec
push
sti
lods
adcl
loop
push
divl
push
cmp
jne
push
mov
mov
mov
sbb
mov
xchg
hlt
and
popl
push
cmc
inc
js
test
jmp
push
or
pop
jne
psubd
inc
add
pop
jl
dec
xlat
adc
sbb
xchg
push
in
sub
and
cmp
lods
insb
int3
push
jge
dec
imul
sbb
adc
inc
rorb
in
xor
movsb
int3
mov
xor
popf
call
inc
cltd
movsb
hlt
mov
call
xor
rcl
mov
jle
outsb
loop
cmc
mov
adc
jge
jmp
movzwl
or
in
int3
test
lret
add
je
add
cmp
cmpsl
xor
mov
mov
mov
test
xchg
imul
ret
clc
test
enter
or
sbb
sub
mov
cmp
in
mov
frstor
xor
jo
xchg
lret
jge
out
inc
xchg
into
xor
dec
inc
movsl
add
add
push
xchg
xchg
sub
ss
pop
add
sbb
pop
sbb
xchg
arpl
add
sub
adc
push
sbb
jge
or
jge
adcl
fistps
in
push
push
icebp
sbb
mov
cmp
jp
xchg
add
or
pop
ficomps
mov
nopl
jg
jnp
outsb
adc
mov
add
xor
cmp
notb
or
decl
enter
loope
dec
jae
int3
les
xchg
bound
add
out
jae
ret
jne
lcall
jns,pn
jns
leave
pop
xor
jb
jp
add
sbb
cmovo
sub
sar
sub
push
pop
dec
sti
xchg
lret
call
nop
dec
sub
enter
sbb
jl
call
jl
jl
jl
dec
sub
call
insl
and
add
loopne
dec
outsl
repz
pusha
enter
repz
mov
incl
in
fimuls
cld
jnp
mov
cmp
pop
mov
xor
rclb
mov
leave
dec
in
shr
and
mov
pop
in
inc
js
push
hlt
xchg
repz
dec
leave
test
in
sbb
push
test
add
or
call
and
scas
in
and
ret
inc
xchg
les
mov
sarb
loop
in
enter
repz
inc
and
in
sub
pushf
sbb
test
in
push
dec
popa
mov
xchg
test
ret
adc
data16
cmp
popa
inc
adc
cmc
or
xor
sbb
mov
xchg
addl
int
jns
test
test
xchg
out
sub
imul
sub
jl
pop
push
stc
lea
xor
or
les
push
push
jmp
scas
ret
mov
push
xor
jge
xchg
ret
inc
or
xchg
pop
sarb
je
lock
cmc
insl
or
xchg
hlt
adc
push
add
sbb
push
imul
dec
leave
push
adc
inc
faddl
xor
mov
orb
nop
aam
mov
jnp
xchg
mov
sub
xor
sbb
dec
shr
lds
inc
add
test
cmp
add
add
push
cmp
and
pop
pop
or
cmp
inc
xchg
mov
adc
push
inc
add
xor
xchg
ss
mov
add
shll
lret
xchg
cwtl
add
cmp
push
add
add
mov
mov
or
in
mov
add
mov
inc
mov
xlat
push
fists
call
sbb
insb
dec
pop
inc
add
or
inc
add
jne
call
mov
or
lods
ficomps
cld
push
ds
mov
inc
mov
dec
cmp
add
adc
add
das
push
add
add
mov
mov
not
and
or
jae
das
cmp
sub
and
shll
stc
cli
push
shll
dec
test
and
inc
fidivs
xor
push
insb
hlt
clc
xchg
icebp
cmpsl
cmp
cmpsb
inc
lret
je
popa
cwtl
xchg
stc
pop
push
sbb
inc
call
in
shll
sub
sbb
dec
mov
in
inc
inc
add
jno
je
push
or
and
mov
fmul
fisubrl
xorl
pop
fcomp
pop
loopne
fldl
or
fldl
mov
or
or
xchg
enter
aad
test
inc
fcmovnbe
into
dec
lcall
fisubrs
jmp
jo
push
in
fwait
in
dec
pop
mov
pop
cmp
xchg
pop
xlat
das
cmp
sub
je
dec
adc
fidivl
xor
sbb
mov
fnstenv
lcall
fldt
push
jmp
sbb
sub
ret
outsb
imul
fldcw
sub
adc
add
cmp
fwait
add
rorl
inc
test
xchg
stc
sub
adc
add
call
pop
pop
dec
hlt
pop
lock
adc
add
pop
push
call
jle
ret
fstl
push
shl
push
mov
aaa
jne
das
and
or
inc
lock
jnp
scas
cmp
push
add
or
cmp
sub
or
out
dec
andl
mov
sahf
fldenv
cmp
inc
jno
add
in
movsb
or
and
jg
push
lods
xor
pusha
add
iret
or
push
jle
call
and
inc
pop
or
or
pop
jmp
push
shl
mov
xchg
jmp
inc
faddl
mov
jle
or
popa
push
stos
jne
fucomp
aas
test
fmull
jp
std
xor
cmp
rcr
push
sbb
jne
push
push
xorl
testb
cmpsb
xchg
add
add
and
cld
bound
add
pop
push
mov
inc
inc
adc
sbb
enter
pop
push
push
andl
out
cwtl
or
test
out
js
das
aad
or
and
andb
mov
lock
call
push
pop
cmp
mov
lods
std
xchg
testb
mov
mov
je
add
clc
inc
pop
push
sub
pop
rol
add
xor
or
pop
je
jo
mov
xchg
dec
sbb
gs
test
stc
arpl
jg
testb
repnz
cmp
push
clc
add
stc
mov
mov
rorb
loopne
mov
pop
pusha
loopne
xchg
push
out
pop
adc
or
lcall
adc
dec
sbb
xor
cwtl
push
xor
call
mov
in
sarb
rol
jne
xchg
lock
push
inc
dec
inc
xor
push
pop
xchg
dec
scas
or
add
adcl
pushf
sbb
xor
iret
in
movsl
inc
clc
mov
cmp
hlt
ss
or
adc
sub
popa
mov
sbb
and
mov
jge
mov
push
or
inc
lods
add
lods
or
call
cmp
inc
sub
in
adc
pop
and
jne
cmp
xor
pop
inc
jne
cmp
insb
sub
movsl
or
push
add
or
xor
negb
cmp
push
int
lds
sub
mov
jo
inc
ret
cmp
mov
sbb
leave
leave
call
mov
call
dec
mov
xchg
pop
cltd
shrb
sub
cmp
lret
lods
jo
mov
repnz
ja
pop
sub
sahf
es
adc
sti
xor
inc
cmp
sahf
iret
scas
jne
in
mov
pop
pop
lods
jne
add
inc
popf
mulb
dec
mov
adc
jecxz
mov
mov
add
mov
xchg
jge
mov
test
enter
fidivl
movb
mov
mov
out
add
push
xchg
mov
imul
inc
hlt
mov
adc
loopne
lock
fisubl
in
pop
enter
mov
sub
jno
or
mov
pop
and
lea
inc
aam
je
neg
arpl
lret
jo
add
xchg
pushf
ret
fnsetpm(287
std
pushf
sti
and
dec
sub
mov
xchg
xor
repnz
fcomi
std
aaa
addr16
lods
dec
mov
das
lock
fdivr
pop
sbb
dec
adc
lods
insb
or
xchg
ds
shr
je
insb
add
add
jno
push
popa
sub
fsubl
cmc
jle
popf
mov
call
ds
call
push
mov
jns
stc
fdivr
push
mov
jno
imul
daa
pop
aad
fwait
in
mov
inc
mov
movq
ret
loope
std
lds
mov
ja
lea
cmpsb
lret
lock
out
imul
mov
mov
cmp
call
cltd
cwtl
jmp
dec
or
sbb
mov
ja,pn
pop
mov
std
stc
lods
push
dec
out
imul
inc
add
movb
dec
sub
in
jbe
popa
cmp
fisttps
test
stos
gs
inc
into
inc
frstors
sub
jle
sbb
dec
mov
cmp
jae
cmpsl
adc
mov
cmp
popa
lods
arpl
lock
xor
mov
lea
test
test
cltd
in
mov
out
shlb
addr16
push
mov
mov
push
popa
mov
faddp
fstpl
decl
mov
dec
mov
cs
sub
test
stos
test
sub
movsb
mov
dec
mov
mov
rol
sar
cmc
adc
lret
xor
push
sub
mov
jmp
adc
fstpt
mov
jge
int3
cmp
fsubrl
or
hlt
addl
lcall
cmp
jns
lock
adc
mov
enter
mov
bound
mov
add
push
movsb
adc
push
addb
out
js
jp
add
push
inc
lret
jne
cmp
adcl
xchg
sbb
repnz
mov
std
les
dec
pop
dec
or
and
movsb
ret
dec
movsb
std
std
or
inc
cmp
loope
sub
mov
enter
das
out
sub
xchg
and
mov
push
inc
add
cwtl
mov
push
fidivs
hlt
push
mov
sub
inc
mov
rorl
adc
cmp
adc
jecxz
rcr
mov
pop
pop
dec
sub
leave
mov
push
inc
push
xchg
movsb
test
inc
jb
dec
mov
and
sarb
and
aam
in
loopne
aad
aad
sub
insb
push
xlat
ret
iret
adc
sub
cmp
ja
ficoml
pushf
and
mov
or
shl
pop
pop
repz
or
add
xchg
xchg
int3
lock
xchg
jo
push
and
add
xchg
dec
push
lock
push
arpl
repz
add
daa
test
sbb
test
popf
and
movsl
call
in
call
jnp
test
popf
and
enter
and
adc
and
popf
and
and
iret
popf
and
int3
les
imulb
or
test
add
nop
mov
in
popf
and
ja
in
fs
sbbl
lods
or
dec
pop
dec
gs
inc
cwtl
std
fstps
xchg
add
repnz
cmp
sbb
pushf
fwait
pushf
fdivrs
or
xchg
pop
jb
sbb
std
fwait
xchg
enter
cmc
loope
xor
inc
sub
insl
and
mov
cmc
sbb
popf
add
jb
cld
mov
mov
lcall
test
jb
js
push
stc
pushf
pop
mov
divl
add
addr16
mov
mov
outsl
xchg
xchg
ret
pop
or
ds
mov
mov
jb
movsb
cwtl
jno
mov
in
push
jecxz
lcall
movsb
je
push
sbb
aas
dec
aam
or
push
leave
adc
pop
repnz
incl
push
and
and
nop
nop
nop
pushf
dec
add
pushf
lods
lods
push
and
cmp
xchg
sbb
and
je
dec
pop
je
stc
dec
int
push
dec
xchg
pop
add
add
aaa
dec
movsl
inc
add
cmpsl
stc
mov
push
mov
movsb
pop
gs
dec
sub
adc
imul
cs
pop
rclb
pop
jne
mov
or
sahf
mov
lret
adc
jne
add
mov
or
mov
ja
sti
dec
jecxz
inc
or
sbb
mov
sarl
fs
in
movsl
sub
push
mov
mov
and
cmp
add
jne
push
mov
mov
sub
xor
popa
xor
ds
inc
xor
nop
loopne
or
add
push
xchg
in
jl
inc
bound
dec
movb
or
pop
popa
add
pop
or
mov
bnd
pop
or
add
xor
cwtl
insl
icebp
inc
bound
ret
cmpsl
mov
sbb
sub
loop
dec
rcrb
and
jle
imul
sub
mov
filds
push
mov
shll
fucomip
stos
bound
or
mov
xchg
xchg
adc
daa
sbb
or
lods
inc
pushf
lahf
hlt
mov
ret
lods
or
out
mov
call
stc
movl
push
movl
loop
jp
inc
push
gs
mov
cmp
pop
fld
arpl
inc
or
stc
xchg
jecxz
pop
cwtl
mov
or
or
dec
movsl
fists
sbb
or
in
sbb
push
add
je
hlt
daa
clc
inc
push
cwtl
push
push
inc
sbb
jae
testl
cmpsb
jmp
ss
mov
repz
sbbb
jno
les
jp
xor
test
cmp
xchg
jae
inc
add
jg
add
add
push
mov
pmulhuw
or
pop
jmp
loope
inc
adc
sar
xchg
add
pop
jmp
lret
cwtl
sbb
movb
mov
sbb
daa
push
mov
adc
shll
stos
add
and
rolb
inc
add
push
push
pop
lods
shll
sbb
mov
inc
sbb
mov
push
sahf
xchg
xchg
out
lods
jo
xor
scas
adc
mov
mov
add
add
add
imul
cmp
add
lcall
jo
sbb
sub
jno
mov
popf
imul
xor
push
in
shl
dec
pop
sar
or
jne
sbb
xchg
add
sbb
xor
xchg
es
xchg
scas
sub
mov
out
inc
cmp
push
mov
out
roll
leave
jp
jle
fsubrl
xchg
add
adcb
shr
je
repz
stos
in
cmp
lea
and
aas
shlb
add
jmp
mov
push
mov
push
loopne
inc
mov
pop
call
jb
out
xchg
xchg
mov
lea
dec
insb
adc
cmp
inc
fistps
ljmp
jb
sub
mov
and
and
lret
inc
cmp
ja
icebp
add
cmpl
push
nop
je
or
push
ret
mov
jnp
adc
sub
shlb
stos
push
fisttpl
jno
push
cli
sbb
or
dec
or
mov
mov
xor
jb
inc
jo
or
sub
adc
dec
mov
test
push
or
add
dec
xor
cs
stos
and
adc
or
sbb
push
inc
xchg
fldt
add
pop
jbe
jge
ret
popa
fcmovnb
loop
stos
push
pop
mov
dec
fcoms
lea
push
subb
or
add
int
push
out
imul
ret
lods
leave
test
xor
add
pop
mov
sub
ret
in
sti
add
add
movsl
inc
cmp
and
adc
inc
rorb
add
mov
mov
lock
xlat
jge
imul
sbb
and
cmp
xor
stos
jl
sbb
sarl
cmpsb
xor
call
cmp
iret
aad
inc
sbbl
pop
addl
xchg
test
cmp
xchg
test
cmp
js
push
push
xchg
cmp
inc
inc
pop
leave
fs
lods
shll
lock
leave
push
sbb
bswap
lods
and
int3
int3
mov
dec
mov
pop
inc
push
push
notl
sbb
add
icebp
imul
sbb
mov
ret
push
stos
in
hlt
add
pop
dec
inc
fstl
add
add
inc
xchg
or
test
or
add
sti
or
add
fidivrs
je
push
or
flds
pop
pop
cltd
mov
loop
sbb
and
or
pusha
pushl
mov
xorb
cltd
and
jmp
xchg
add
nop
mov
je
fsubrs
dec
je
push
mov
scas
mov
mov
je
dec
or
jo
jmp
add
fcompl
or
sbb
rcrl
cmp
insl
mov
in
add
pop
sub
aaa
add
add
js
dec
mov
mov
jne,pn
sbb
out
mov
mov
in
jbe
ret
adc
cmp
jge
mov
inc
push
clc
cmp
inc
adc
inc
jno
mov
add
xchg
test
mov
sbb
push
push
dec
dec
sbb
insb
inc
mov
add
or
xor
adc
fs
mov
and
mov
lcall
add
sbb
scas
in
das
decl
popa
loop
add
add
jae
addl
push
or
in
push
adc
fs
push
pop
and
pop
inc
add
aas
aaa
adc
adc
iret
jmp
mov
push
fldpi
or
cmp
fdivrl
adc
mov
mov
dec
xor
lret
loop
xor
les
and
testl
sbb
or
add
lods
je
insb
inc
pop
mov
into
cmpsb
out
cmp
je
imul
and
daa
mov
out
push
aam
xchg
pop
addr16
and
cld
pushl
loop
xchg
outsl
repnz
push
add
and
cwtl
out
and
std
sbb
enter
test
xor
test
inc
xchg
jne
cmpl
adc
and
mov
hlt
cmp
and
cmp
ss
sbb
fs
push
push
jge
inc
or
iret
and
push
dec
inc
add
cmp
jp
imul
cmp
jo
cmp
mov
pop
xchg
jmp
push
pop
inc
inc
pusha
mov
cmc
pop
lret
fldt
pop
stos
in
cmp
jbe
push
cld
or
jge
push
mov
add
cli
clc
imul
popf
shrb
outsb
dec
adcl
popa
sbb
ds
test
xor
adc
xor
jb
adc
xor
xrelease
hlt
lahf
jne
adc
daa
adc
push
dec
jnp
ret
dec
add
push
cs
or
stc
cld
dec
push
out
push
lds
add
cwtl
or
movsb
sbb
jo
cmpsb
cld
mov
inc
push
lock
cmp
push
rorb
mov
push
xor
cmpsb
inc
mov
push
hlt
lret
or
inc
mov
mov
sub
test
push
add
jne
xchg
add
outsl
or
dec
in
loop
pop
ja
cmp
jl
jo
ss
jmp
xor
les
pop
arpl
inc
inc
adc
add
push
test
xchg
lods
enter
pop
je
or
pop
es
pop
xor
or
int
or
and
test
cwtl
and
aas
popa
bound
mov
call
idivb
mov
orb
pop
cld
ret
test
xchg
inc
or
je
lock
adc
repnz
push
push
pop
leave
test
jp
into
inc
add
push
test
pop
lods
rcl
pop
add
popa
adc
sahf
stos
or
add
pop
and
lret
in
lock
pop
sarl
sbb
mov
pop
inc
mov
out
sub
mov
pusha
mov
sub
adc
nop
and
sbb
inc
xchg
mov
sbb
inc
rcrb
xor
aas
jae
mov
inc
pop
test
inc
dec
shl
test
punpckhbw
push
pop
xor
mov
push
subb
jne
daa
testb
push
push
orl
or
and
ret
lods
shl
jo
jle
mov
shrl
sub
and
dec
add
mov
sbbl
xor
mov
lea
sbb
or
jne
repnz
add
push
sar
xor
js
pushf
hlt
and
arpl
and
or
push
clc
adc
lea
mov
push
push
xchg
xor
imul
aaa
add
fs
popa
push
pop
xor
es
sahf
pop
sti
or
out
push
stos
ja
int
pop
addb
pop
push
data16
mov
fwait
and
ret
rorl
outsb
adc
in
pushf
aam
jg
xchg
push
pop
push
dec
and
push
jo
les
addb
mov
xor
or
or
or
insl
push
and
xor
jo
sbb
add
add
insl
js
into
mov
adc
rorb
pop
pop
pop
adc
mov
add
pusha
jo
pop
sbb
jle
jp
mov
sbb
in
or
and
subb
dec
andb
and
mov
test
adc
adc
sarb
loopne
sub
jg
popf
mov
mov
popa
shl
insl
or
pop
and
add
repz
mov
or
or
or
or
decl
pop
scas
cmp
mov
add
fnstenv
clc
out
add
outsl
push
sahf
inc
add
and
push
fmul
adc
sti
jle
inc
or
inc
adcl
pop
je
jl
fs
xorl
ds
or
sbb
jb
lock
xchg
adc
movsb
pop
sbb
ret
test
mov
test
mov
aas
push
aaa
xor
ds
dec
sbb
mov
jne
ss
cmpsl
adc
add
or
je
and
into
mov
movl
jl
mov
loope
pop
push
orl
adc
and
cmp
testl
out
mov
dec
jp
or
mov
push
xlat
inc
dec
dec
xchg
cs
push
xor
rolb
xchg
repnz
pushf
rorl
mov
xor
and
call
test
adc
loopne
or
xor
test
push
rol
inc
jl
add
sub
sub
xchg
mov
add
adc
jb
rcrl
xchg
cld
dec
add
ret
sub
rorl
aam
push
jmp
fs
shl
jmp
and
adc
and
adcl
fs
xchg
movsl
dec
add
call
add
push
sub
sub
addb
add
pusha
std
outsb
roll
lret
sub
bound
shll
sbb
addb
or
shlb
dec
fcomip
stos
ss
neg
in
jmp
or
lock
push
sbb
popw
or
xchg
decb
movsl
mov
insb
adc
dec
inc
inc
jl
leave
fwait
in
mov
or
adc
shlb
data16
popa
push
mov
add
jp
jae
or
movups
push
sarl
cmp
jg
fimull
add
ret
xchg
std
add
xchg
push
add
testl
or
testb
arpl
bound
idiv
dec
inc
mov
movl
pop
sahf
push
jo
adc
je
inc
imul
pushf
cmpsl
repnz
adcb
adc
push
mov
in
outsb
pop
pop
popa
or
cmp
dec
add
mov
sbb
cmp
adc
bound
push
dec
sub
mov
pop
xor
push
out
std
push
pop
outsl
inc
or
jbe
sub
pushf
outsl
ja
roll
mov
pop
jo
or
push
loopne
adc
mov
clc
loopne
mov
vpsraw
popa
jae
xor
into
and
call
or
sub
std
mov
movsb
lods
adc
sahf
testb
decl
add
sub
adc
fsubrs
fld
xchg
rcl
mov
clc
in
lock
rep
add
mov
pop
jne
inc
adc
adc
ss
and
push
add
push
adc
push
jmp
pop
idivl
cmp
xorb
add
mov
hlt
push
mov
push
int3
ss
push
cli
sub
jno
and
jb
outsb
mov
cmp
dec
ret
mov
xlat
pop
and
and
pusha
outsb
xor
cmp
cmpsb
xor
in
fcom
test
mov
insl
testb
pop
stos
mov
jo
orb
leave
add
test
dec
mov
inc
int3
sub
aas
xchg
or
iret
decl
nop
lock
dec
hlt
xchg
icebp
sbb
cmp
pop
mov
mov
push
popa
scas
lret
and
cmpb
xor
add
pop
enter
pop
mov
push
cmp
cmp
xor
add
aas
add
add
out
mov
push
jmp
fldenv
cmp
push
cwtl
das
cwtl
dec
mov
sub
mov
mov
jmp
rcr
sbb
aam
aas
addr16
sub
cmp
ret
and
mov
sbb
lods
sub
adc
mov
subl
sarb
push
mov
jnp
sbb
pmulhuw
pop
fwait
jge
sbb
adc
outsl
jo
jl
mov
shrb
add
or
sar
shll
rorl
faddl
dec
xchg
push
fisttpl
pop
cmp
test
dec
dec
xor
xchg
mov
add
push
js
or
sbb
mov
cli
rcrl
sarb
movsb
sbb
sub
xor
adc
inc
jmp
hlt
pop
and
jbe
sub
jne
imul
add
shrb
and
jge
aas
sbb
xorb
enter
lock
popa
in
int3
push
out
adc
loopne
or
cwtl
dec
sti
leave
nop
jne
xor
fsub
xor
mov
add
clc
idivb
xor
fcompl
cld
and
add
sbb
mov
clc
or
lcall
add
negb
rcrl
or
sub
je
add
cld
mov
or
add
or
or
push
sbb
movl
movsb
pop
sbb
repnz
cmp
cmc
xchg
xchg
xor
inc
xchg
hlt
sarb
stc
jecxz
cmpsb
movsb
adc
push
mov
shll
add
pop
or
cmpsl
xchg
in
adc
or
ret
ret
mov
cmp
adc
daa
mov
mov
xor
mov
sbb
xor
push
inc
popa
and
mov
push
insb
jae
mov
jbe
or
int
cmp
je
pusha
jle
cmp
jl
inc
jnp
movsl
or
add
mov
fs
push
xchg
fnstcw
jle
fmuls
pushl
enter
mov
add
push
mov
popf
mov
jmp
jns
mov
and
sahf
xchg
push
in
cwtl
xor
cmp
loopne
stc
dec
adc
or
jne
inc
sbb
add
inc
add
mov
dec
imul
aas
and
and
sbb
dec
sbb
fldl
das
pop
lods
or
shrb
inc
or
lret
xor
cmpsb
inc
iret
inc
xchg
les
pushf
add
push
jl
pop
lock
cld
mov
or
add
add
dec
mov
sti
jg
aas
xchg
dec
jle
mov
sbb
pushf
sbb
jbe
jle
les
add
and
inc
je
and
cmpsb
jno
xchg
cltd
mov
nop
repz
add
cli
cmpsb
aas
xor
pop
jl
lea
mov
push
sub
loop
xchg
sbb
leave
xchg
or
fstl
push
cmpsb
call
fneni(8087
pusha
lcall
push
loope
cli
call
loope
pop
jb
int3
add
test
jle
inc
sbb
jp
or
enter
mov
mov
shlb
mov
cltd
sbb
aaa
and
add
add
push
je
mov
scas
mov
loop
outsl
mov
cmpsb
sbb
gs
pop
cmp
jle
dec
cli
pop
pop
aas
addl
sbb
inc
sbb
dec
add
sub
jg
inc
mov
sbb
dec
shlb
xor
push
fdivrs
lds
xchg
mov
subl
xor
cmp
mov
or
ljmp
loopne
adc
cmpl
cmc
inc
cmpl
inc
push
inc
mov
pop
cmp
pop
add
push
aad
ret
ljmp
cmp
pop
jbe
jmp
cmpsb
or
adc
mov
push
and
ror
and
xorb
and
shll
or
aas
push
dec
imul
js
mov
decb
inc
sub
out
rclb
faddl
and
lods
and
push
imul
imul
push
push
adc
mov
std
inc
ret
inc
sbb
pop
je
adc
inc
addl
inc
loopne
adc
fcomip
or
push
jmp
cmp
out
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
les
push
sub
addl
and
or
add
leave
adc
movsl
xor
aam
enter
repnz
sub
in
pop
adc
adc
ficoms
push
pop
leave
leave
mov
leave
inc
call
add
sti
add
and
push
or
sbb
rolb
cmp
and
rcl
xchg
xchg
ficompl
sub
jo
add
out
adc
and
xlat
shll
leave
push
icebp
enter
mov
cli
inc
mov
arpl
mov
add
add
sbb
mov
ja
jmp
cli
filds
sbb
lea
je
pop
insl
xor
or
and
lods
adc
sbb
mov
rolb
dec
adc
jbe
daa
jb
xor
jg
cmp
jae
push
cmp
jl
mov
jle
sarb
dec
adc
add
mov
bound
out
push
je
sti
testb
jne
clc
push
mov
popa
fcmove
push
pushl
or
popf
lods
mov
jb
movsl
jo
test
ds
add
stc
mov
adcl
lods
push
dec
dec
rclb
or
enter
icebp
stos
xchg
pop
mov
ds
mov
push
or
repz
into
adc
or
cmp
ret
imul
pop
jo
test
or
orb
fidivl
mov
jns
jne
jmp
mov
mov
frstpm(287
or
push
js
sbb
arpl
adc
dec
lret
mov
add
scas
pop
jle
sahf
pop
and
xchg
or
mov
sub
pop
test
cmpl
nop
inc
mov
les
pop
xchg
fs
mov
jno
inc
sbb
add
int3
and
jbe
jecxz
mov
mov
hlt
push
lock
add
jg
jo
jl
hlt
insb
inc
pop
js
cltd
jle
aam
cmp
and
rorb
and
test
push
loopne
sbb
xor
dec
jg
mov
jae
test
fsubrp
push
dec
rcr
mov
hlt
push
sarb
or
aad
jecxz
push
xlat
or
shlb
dec
sbb
std
nop
rol
ret
or
sub
pop
and
sbbl
jb
mov
pop
test
addb
and
imull
repnz
inc
add
call
or
test
insb
and
rorb
andb
inc
lret
aad
or
mov
push
mov
add
cmc
adc
add
inc
stos
imul
mov
rcrl
clc
incl
call
cmp
je
cmp
adc
cmp
jb
testb
imul
xchg
testb
cmp
mov
add
andb
je
jge
push
mov
push
movb
jbe
jb
je
ret
jns
push
cld
ja
jb
cmp
jbe
mov
push
or
mov
push
stos
dec
loop
pop
push
cmpsl
dec
pop
mulb
call
and
lock
jge
les
adc
leave
push
push
pop
push
test
mov
inc
js
jmp
dec
and
mov
pop
es
jmp
loopne
sahf
adcl
inc
shl
lock
pop
push
mov
mov
mov
aaa
mov
js
adc
pop
adc
push
lock
enter
xor
mov
push
pop
push
push
inc
shr
rcr
shr
out
pop
hlt
rcr
or
div
pop
dec
adc
inc
mov
jb
cmp
or
cmp
or
xor
iret
jae
and
adc
or
fisubl
or
lret
xchg
inc
mov
sbb
mov
xor
ret
adc
in
push
jecxz
mov
mov
or
jne
mov
mov
les
rcll
jo
xor
pop
imul
push
jns
pop
dec
sbb
push
dec
add
orb
add
jle
jne
lea
es
mov
cltd
add
outsb
es
and
lea
sub
test
ret
xchg
xor
dec
sti
imul
adc
adc
dec
jae
adc
pusha
roll
loop
les
add
push
pusha
bound
inc
prefetch
mov
inc
aaa
movsb
test
inc
mov
push
into
cld
jl
mov
shll
add
cld
sbb
loop
xor
subb
mov
push
jno
inc
pop
push
mov
mov
loope
mov
mov
push
push
hlt
imul
xor
push
insb
cld
adc
xor
jle
sub
clc
sahf
je
xchg
cli
in
scas
xchg
aam
add
lea
lea
or
cmp
dec
push
or
xchg
push
mov
mov
popl
or
xchg
mov
and
adc
dec
enter
sbb
outsb
push
mov
addb
add
push
ss
jo
pop
rcll
and
pusha
add
sub
rorl
and
push
mov
outsl
add
pop
nop
jp
call
pop
sbb
add
add
ffreep
push
inc
cmp
xor
out
push
das
xchg
call
mov
aam
scas
mov
and
push
xor
pusha
or
dec
mov
cmp
shll
rclb
mov
or
in
ss
adc
ss
leave
leave
and
sub
ret
leave
xor
cmp
dec
fwait
xchg
push
inc
and
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
and
in
js
addr16
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
sub
ret
push
sub
add
out
cmp
loopne
xor
in
push
mov
or
shlb
movsb
mov
adc
in
adc
int
xor
sbb
xor
push
xor
clc
and
xchg
nop
int
and
std
fiadds
mov
pop
xlat
xor
in
mov
scas
and
inc
ret
push
aam
dec
cmp
rorb
or
jne
out
and
es
push
mov
or
push
pop
fldl
mov
loopne
adc
cmp
add
sbb
add
inc
push
lahf
mov
add
and
sbb
aam
pop
lock
aam
rcrb
stc
dec
xor
sbb
pop
cs
pop
pop
or
and
jo
xchg
dec
inc
pusha
lea
test
fdivs
rorb
pop
inc
cmpsb
pop
cmp
insl
push
lea
sbb
cmp
sbb
dec
ret
xor
in
arpl
ret
ror
movsl
mov
cli
cmp
fs
lea
push
jle
leave
das
pop
sbbl
dec
jo
bound
int3
ficompl
js
adc
out
cmp
scas
or
sbb
cmpsb
aam
add
adc
cmp
pushf
frstor
xchg
mov
and
in
and
loopne
test
adc
jge
scas
cltd
inc
pop
mov
push
pop
je
lret
cmp
imul
lret
adc
jne
add
xchg
inc
repnz
int3
rcr
shr
aam
bound
push
or
inc
leave
outsl
pop
or
mov
mov
inc
movsl
and
stos
adc
adc
aas
int3
rclb
out
jl
adc
xchg
push
jmp
rol
dec
cmpsb
dec
mov
mov
jb
adc
xor
mov
fcomps
loopne
cmp
arpl
xor
xor
and
inc
iret
lcall
jnp
mov
decl
loopne
cmp
cmp
pop
les
aam
fistpl
sarb
cmp
jb
push
add
mov
mov
push
das
jmp
inc
test
lea
or
xor
mov
filds
mov
loope
es
outsl
or
adc
pop
mov
adc
adc
pusha
add
xchg
push
imul
mov
mov
les
jmp
fwait
mov
shlb
lods
aam
mov
arpl
out
push
ret
mov
xchg
and
in
cmp
xor
xchg
xchg
ja
cmp
xor
push
and
fists
xor
xor
mov
push
lea
or
and
out
ficompl
aam
pop
and
fcmovnbe
sti
mov
test
cld
or
add
pop
and
xchg
sbb
aad
popa
push
mov
lods
mov
or
push
adc
outsl
in
dec
popf
add
pop
inc
adc
or
sbb
sbb
test
dec
ljmp
lods
sahf
push
inc
pushl
mov
cmpl
jns
dec
sub
ret
js
pop
inc
popf
pop
addl
pop
mov
pop
sbb
mov
daa
sub
in
loopne
mov
pop
cmp
in
lods
mov
dec
mov
mov
mov
mov
or
les
lods
test
ljmp
add
cmp
scas
in
nop
push
or
enter
push
sub
sub
pop
cmpsl
cmpsb
pushf
daa
iret
inc
call
pushf
pop
test
insb
push
dec
inc
lea
or
add
inc
pop
and
mov
lods
jnp
xchg
mov
pop
pusha
fcoms
pop
jnp
test
or
jl
dec
sub
aas
add
xor
sarl
cmp
out
inc
adc
or
and
cmpsb
int
push
jae
scas
test
rolb
jno
mov
mov
sbb
scas
mov
inc
jg
fsubs
cmp
cmp
ret
es
xor
cmp
jecxz
dec
ret
sbb
mov
inc
int
push
jmp
addl
cmp
repnz
clc
pushf
mov
jo
test
das
dec
je
mov
clc
pop
cmp
out
dec
adc
sbb
fisttps
inc
jmp
fistpl
iret
mov
adc
push
sysenter
sbb
sarb
repnz
xchg
sub
push
dec
mov
push
add
mov
jmp
xchg
mov
andl
add
aaa
std
scas
jnp
push
cmp
mov
adc
cli
or
aas
js
aas
movb
inc
mov
adc
xor
jnp
cmpl
fmuls
push
and
adc
pop
inc
pop
dec
rolb
and
mov
sub
jmp
cmpsb
leave
push
or
pushl
in
mov
dec
add
enter
cmp
mov
xchg
rclb
inc
cli
scas
in
lods
push
orl
pop
mov
dec
fistl
and
add
cmp
mov
lret
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
pop
xchg
pop
mov
add
and
orb
add
sub
dec
loopne
repnz
test
mov
hlt
push
jmp
test
or
iret
stos
int3
out
mov
std
jno
or
fs
inc
jo
fisttpll
sub
xorl
test
jo
lret
jmp
or
and
lods
pop
rcrl
or
lea
jo
ja
mov
pushl
lods
adc
repnz
mov
dec
cmp
ljmp
ljmp
pop
gs
xor
jnp
inc
mov
mov
mov
inc
cli
pop
inc
call
sbb
and
mov
or
movsl
shlb
xor
repnz
pop
add
dec
test
and
cmp
mov
and
je
aaa
push
mov
aam
or
js
add
sub
fdivrl
cs
mov
loop
push
cs
push
dec
outsl
push
dec
ljmp
cmp
ja
jl
and
movsb
test
mov
pop
jmp
popa
add
into
ret
adc
and
stos
lahf
or
cmp
mov
inc
mov
inc
add
inc
dec
jg
inc
and
std
mov
adc
dec
fsts
in
jno
sub
mov
xchg
out
iret
or
sbb
push
and
mov
and
cmp
scas
bound
scas
or
shll
stc
mov
mov
aas
out
push
pop
inc
xor
ret
inc
pop
or
into
push
or
xor
xchg
hlt
insb
js
std
into
and
adc
inc
jg
adc
rolb
repnz
pop
mov
lock
fisubl
cmp
into
sub
pop
or
pop
push
orl
sbb
cmpl
ljmp
or
mov
and
sbb
gs
lock
sbb
dec
divw
rclb
xchg
pusha
sti
mov
jge
addr16
push
pushf
adc
sbb
fsubp
push
jne
out
mov
and
lds
adcb
push
pop
lods
pop
pcmpgtw
int3
pop
pop
mov
hlt
and
jg
cmp
add
adc
ljmp
ljmp
sub
lcall
mov
mov
adc
fiadds
scas
dec
cmp
ret
ljmp
in
push
or
and
je
inc
cmp
in
mov
shlb
test
add
js
pop
dec
push
icebp
sbb
push
add
push
popa
add
xor
jmp
push
shrb
inc
ds
cmp
rol
lds
pop
es
cmp
dec
sub
shlb
push
jp
pop
jno
test
xor
mov
dec
je
dec
xor
pusha
and
inc
jmp
icebp
xor
mov
push
push
jecxz
add
cmp
add
mov
inc
mov
xchg
ret
push
and
bound
pop
clc
scas
cmp
and
pop
add
sbb
sbb
fcoms
sbb
movsb
adc
and
outsl
adc
sbb
cmp
cld
rol
push
addr16
add
jmp
popf
or
adc
xor
stc
xchg
mov
or
sbb
cwtl
subb
or
dec
dec
xor
sub
mov
push
lods
lret
xor
subb
lea
sub
cltd
nop
dec
push
dec
pop
mov
jno
xor
mov
das
push
nop
or
jmp
dec
je
push
add
add
dec
test
pop
lods
dec
jecxz
int3
sub
sub
push
arpl
insl
or
loop
notb
push
pop
jbe
jbe
mov
loope
inc
mov
xchg
flds
mov
fidivrl
sbb
repnz
das
dec
jp
cmp
leave
inc
rclb
into
jl
cmp
jle
dec
adc
clc
jle
or
sub
jne
push
add
pop
mov
popf
inc
push
popf
xchg
rcrl
gs
and
add
sbb
or
imul
sbb
jmp
add
inc
and
inc
les
mov
jne
and
xchg
xor
or
or
dec
enter
xor
mov
mov
fwait
pop
and
or
jo
movsl
xorl
bound
das
movsl
dec
mov
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
and
scas
outsb
and
data16
pop
idiv
add
push
mov
test
imul
mov
add
cmc
dec
inc
dec
lretw
fwait
sarb
adc
or
xor
or
test
push
or
dec
mov
inc
pusha
lahf
notl
scas
insb
push
mov
xchg
test
or
je
and
add
or
sbb
repnz
adc
in
shl
not
xor
loope
xor
enter
and
shr
and
pop
cmp
jmp
dec
fmul
add
addl
cmp
test
adc
or
add
xor
xlat
push
mov
add
je
sbb
sahf
mov
and
or
sub
inc
jmp
mov
sti
clc
incb
jmp
sbb
lock
and
mov
popf
mov
add
jl
and
jecxz
mov
out
jmp
xchg
jmp
je
dec
or
adc
cwtl
cli
pop
push
fdivl
or
cmp
mov
mov
pusha
and
push
pop
adc
fistpll
pusha
mov
pusha
loope
pop
sub
movsl
pusha
and
adc
ficoml
pusha
cmp
frstor
imul
xchg
sbb
or
add
sub
adc
push
jns
or
add
add
adc
out
test
fisttps
sub
mov
push
xor
push
mov
dec
jne
orl
sub
push
mov
mov
adc
testl
xor
cmp
xorb
pop
shll
sbb
jmp
push
and
inc
add
adc
flds
lods
cwtl
push
flds
fisttpll
mov
pushf
stos
inc
mov
sbb
push
out
cmpsb
les
test
ret
inc
push
cmp
fiaddl
pop
int
sub
imul
jmp
nop
sbb
inc
xor
lret
pop
adc
cmp
mov
sbb
aam
xchg
push
aaa
popa
mov
xor
fldz
rcr
sbb
fistpl
add
les
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
int3
inc
adc
and
cmp
hlt
add
push
sbbb
or
push
fmuls
mov
adc
mov
sub
loope
lret
rclb
fstpl
mov
sub
jge
ffree
pop
sti
cmpsb
cmc
repz
faddl
and
aas
mov
sbb
or
div
xchg
lret
add
movsb
jp
jmp
add
adc
aas
xchg
dec
into
enter
in
jbe
scas
push
dec
in
mov
mov
shl
out
mov
and
jmp
pop
movsb
add
inc
adc
in
mov
test
std
test
push
or
decb
push
and
sbbb
jl
orb
mov
sbb
jg
xchg
sbb
pop
and
dec
test
push
jmp
or
or
mov
add
and
pop
movzbl
and
pop
push
lea
mov
je
das
adc
inc
movsb
sbb
js
add
or
adc
scas
sbb
rcrb
add
adc
or
in
xchg
es
sub
hlt
add
sbb
jle
add
loope
push
pop
notl
popa
xor
add
lods
fsubrp
mov
jmp
jno
mov
or
jo
cmp
add
fs
or
or
jl
adc
ficoms
pusha
jmp
add
ljmp
sub
mov
mov
fsubr
insl
sbb
lock
mov
inc
add
aas
and
and
or
call
sub
xor
push
mov
dec
cmp
fcompl
push
popa
ljmp
aam
and
cmp
inc
adc
cmpl
jae
pop
or
mov
jecxz
adcb
int3
pop
cld
adc
mov
addr16
data16
cs
mov
cmpps
sahf
cmp
inc
push
xchg
pop
inc
sbb
or
jmp
and
cmp
fists
sarb
jmp
sbb
cmpsl
add
mov
push
ret
mov
pop
fadds
into
popl
andl
mov
cwtl
in
jl
push
lcall
jnp
imul
pop
test
or
mov
cltd
push
sbb
shll
push
or
mov
subl
das
inc
mov
push
mov
fdivs
je
mov
iret
shlb
push
add
loope
imul
sub
shr
loop
pop
ret
enter
ljmp
mov
fst
mov
adc
shrl
inc
and
sbbl
jbe
outsl
push
or
insl
or
push
mov
cmpb
or
sub
fwait
mov
adc
sbb
stos
mov
adc
and
stos
jo
aaa
jle
call
mov
dec
je
leave
mov
inc
jns
mov
cmp
je
sbb
add
ldmxcsr
xchg
adc
xchg
and
pop
or
popf
test
dec
or
repz
call
add
es
popw
add
jbe
imul
call
pop
das
gs
daa
data16
call
je
shlb
mov
or
pusha
sbbb
xor
test
push
pop
insl
push
adc
push
stos
mov
sub
das
jbe
cltd
inc
jmp
jmp
push
jnp
add
adc
inc
and
js
push
push
dec
adc
sub
xchg
push
ja
jo
mov
add
gs
mov
sarb
mov
sti
jbe
add
movsl
cmp
test
xchg
sbb
inc
jle
out
cmp
or
or
loope
fadds
fsts
icebp
lods
inc
add
adc
pop
xor
sbb
pop
sub
rorb
cmpl
inc
inc
xchg
adc
loop,pn
dec
popl
cs
ljmp
or
or
mov
pusha
fiaddl
leave
imul
dec
push
adc
add
aas
daa
adc
add
adcb
cmp
pop
test
jb
cwtl
pop
test
jne
push
add
xchg
popa
jg
cmc
mov
mov
cmc
push
repnz
pop
pop
stc
mov
arpl
jge
movsl
add
jo
ret
ljmp
cmp
loop
add
dec
pop
push
dec
jns
data16
pop
mov
icebp
or
sub
inc
shl
add
lret
sub
pop
lea
movsl
mov
rolb
adcl
mov
pop
or
jmp
dec
cltd
insb
pop
and
mov
out
psubd
scas
mov
inc
push
into
xor
movsl
jbe
lea
xor
repnz
push
dec
es
or
jb
cmp
sbb
iret
push
sbb
lea
or
in
mov
bnd
incb
jae
add
mov
adc
shll
push
rcrb
push
and
jge
push
sbbl
rolb
roll
mov
clc
jo
insl
sti
cmp
dec
dec
stos
inc
hlt
push
inc
adc
or
js
loopne
push
aam
xor
cmp
push
sbb
rorl
mov
je
push
lcall
push
cld
div
add
pop
popf
je
mov
and
outsb
loop
sub
out
push
or
adc
adc
jne
shl
push
scas
xor
in
xor
and
shl
pop
outsb
sub
pop
sub
sarb
je
push
xchg
jmp
bnd
popa
pop
cltd
sbb
in
mov
adc
and
hlt
test
jg
or
mov
clc
sub
push
lea
rcr
mov
mov
cli
paddw
jmp
jb
test
push
pop
xor
pop
js
dec
lods
mov
fidivrs
sbb
or
cmp
inc
mov
test
cmp
lock
cmpsl
jae
cmp
mov
out
addl
mov
lahf
hlt
lea
jl
loopne
mov
loopne
stos
pop
push
cltd
push
into
out
sbb
sub
jl
mov
dec
into
and
sub
cld
sbb
jge
dec
add
es
push
cli
rcrl
jecxz
js
rolb
and
flds
add
sub
pop
push
xchg
add
mov
loop
mov
and
rcrb
pop
pop
xchg
inc
pop
adc
cld
cli
cld
mov
add
or
nop
sbb
add
xchg
jns
and
add
add
pop
stc
test
sbb
xchg
mov
clc
or
or
pop
inc
jl
push
xchg
and
add
or
es
inc
lods
std
es
mov
add
xor
push
adc
lcall
add
movsb
mov
pushf
mov
sbb
pop
test
or
lods
mov
aad
dec
xchg
or
cmp
loop
or
jne
inc
jmp
mov
sub
or
xchg
add
dec
push
sub
or
enter
cmp
ja
sbb
test
push
dec
jmp
and
jbe
and
mov
das
inc
outsl
into
add
call
lcall
push
stos
mov
into
jmp
push
mov
pop
sar
mov
jmp
cmpsl
mov
mov
lods
mov
inc
mov
negb
cmp
jle
adc
push
jnp
ret
gs
clc
push
nop
sti
cld
push
mov
push
jbe
add
repnz
jl
add
push
jmp
aad
and
mov
jae
sarl
ret
push
mov
mov
insb
inc
mov
pop
jge
sti
sahf
xorl
mov
jne
mov
movsb
jne
js
or
lahf
jae
imul
sbb
mov
mov
outsb
xor
inc
jo
call
js
orl
sub
mov
or
lods
jnp
clc
orl
pop
push
clc
add
mulb
stc
sub
cmp
push
stos
push
test
mov
je
inc
scas
call
ljmp
nop
mov
fldcw
pop
cmp
adc
add
inc
testl
push
add
rcr
repnz
test
xchg
xchg
mov
mov
mov
mov
imul
mov
pop
in
cmp
std
jecxz
ret
jmp
mov
jmp
push
cwtl
inc
mov
dec
hlt
xor
loop
add
into
dec
jle
jle
lods
popa
int
mov
add
movsl
or
pushf
xor
rclb
jge
neg
add
adc
adc
xor
sub
cmp
cmp
cmc
cmp
nop
sbb
cmp
mov
enter
mov
adc
adc
push
push
mov
mov
lods
inc
in
and
pop
loopne
test
jmp
push
inc
mov
sbbl
push
std
xchg
push
cmpl
jb
mov
dec
mov
cmp
cmp
push
repnz
or
mov
lea
icebp
mov
push
xor
and
and
and
adc
dec
inc
imul
fs
andl
std
xor
mov
std
mov
or
je
jle
mov
mov
pop
js
jae
mov
pop
movb
testl
jne
enter
pop
and
jne
test
sub
lret
out
jne
inc
or
cmp
imul
jne
hlt
int3
add
jne
mov
and
mov
test
mov
or
test
rcrb
cmpsb
mov
add
les
inc
mov
lcall
and
scas
sbb
cld
push
out
shl
dec
lock
aam
add
imul
insl
mov
pushf
sub
lcall
add
sub
lods
je
and
add
test
js
mov
fbld
lock
bound
pop
mov
shr
push
rcll
pop
shl
mov
jg
or
xchg
nop
loop
adc
inc
mov
mov
adc
dec
dec
outsl
adc
shrl
idiv
loopne
shr
or
mov
sahf
dec
xchg
push
ret
or
insb
mov
mov
push
pop
add
test
and
inc
mov
lcall
add
ficompl
mov
push
lcall
inc
jmp
call
ljmp
fcmove
adc
shlb
push
push
test
pushf
fmull
clc
rorb
orb
insl
xor
jmp
test
or
sub
sub
mov
outsl
sbb
into
jmp
scas
jnp
ret
add
jb
and
scas
add
int3
call
test
int3
add
lcall
lret
inc
push
es
xchg
add
repnz
shl
mov
or
scas
movups
les
bound
inc
rol
sub
rclb
out
mov
and
inc
add
or
xchg
pushl
or
pop
test
mov
lods
adc
push
jo
or
jmp
inc
jmp
aas
mov
rcrb
cmp
adc
imul
inc
inc
scas
inc
fcoms
adc
mov
mov
cmp
adc
mov
or
adc
dec
pop
mov
stos
or
xchg
adc
inc
pop
adc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
outsl
pop
jo
add
ret
call
sbbb
jp
cmp
add
cmc
pop
push
sub
jae
sbb
clc
sbb
daa
or
in
rol
call
sbb
pop
add
xor
repz
cmp
cwtl
sub
xchg
mov
mull
jbe
jno
add
jne
add
std
add
mov
pop
sub
popa
push
gs
xchg
mov
std
cmp
jmp
mov
fisttpl
jbe
or
add
sub
adc
mov
cli
test
pop
je
setg
sub
in
clc
add
call
add
mov
movsb
aas
sub
add
or
inc
mov
jle
add
pop
iret
add
ficoml
dec
pop
xchg
jecxz
mov
es
sbb
pop
add
lcall
jmp
sub
mov
or
jecxz
xchg
add
lea
add
test
mov
movsb
push
inc
push
inc
mov
push
jns
les
sub
les
negb
cld
cmp
push
or
add
movsb
cs
add
or
or
scas
dec
push
xor
lea
sub
scas
adc
mov
adc
pusha
adc
push
insl
sbb
rcl
push
push
and
jo
push
add
add
xchg
out
mov
push
jne
fadd
jbe
push
clc
dec
adc
pusha
cmp
aam
sub
adc
cmp
rcrl
lods
aas
pop
shl
sub
sbb
jmp
mov
push
out
hlt
mov
rcll
pop
jp
call
cs
shl
nop
cmp
mov
das
sub
add
cwtl
pop
mov
mov
xor
icebp
popa
ret
xor
call
testl
in
arpl
call
nop
or
mov
jge
mov
or
add
adc
push
push
add
pop
and
adc
enter
mov
clc
test
leave
jmp
lmsw
or
add
lea
outsl
loope
xchg
add
dec
test
push
push
or
or
or
adc
pop
push
xor
mov
gs
xchg
rolb
jl
jo
movsl
icebp
pop
push
dec
inc
addr16
mov
loope
add
cmpsb
movb
and
and
popf
and
push
into
mov
jecxz
ds
neg
sbb
jecxz
mov
jg
out
pop
lcall
jne
pop
cmp
pop
js
and
out
icebp
mov
jmp
out
scas
test
leave
or
bound
inc
hlt
imul
adc
outsb
and
add
ja
sub
add
mov
push
sub
xchg
push
and
add
push
movswl
les
loop
pop
sbb
data16
rcll
jbe
add
js
cld
add
shrd
fs
dec
mov
sarb
loop
ss
jl
cmpsl
jno
aad
clc
mov
or
cmp
cmp
mov
stc
inc
add
dec
jmp
es
into
in
clc
sub
or
cmp
or
mov
inc
loopne
adc
add
adc
pop
cltd
adc
lock
or
jo
lods
cmp
dec
and
add
mov
sbb
js
jg
jg
lds
inc
jmp
cmp
fidivrl
rorl
lock
or
inc
shll
hlt
mov
xor
sbb
jbe
add
pop
add
inc
mov
stos
push
jg
fiaddl
cs
sahf
sub
fimuls
dec
pop
or
or
pop
rorb
lret
shlb
nop
add
daa
dec
loopne
lods
pop
mov
orl
mov
inc
add
movb
or
dec
or
adc
test
add
or
divl
test
inc
or
sub
inc
fiadds
mov
mov
andb
imul
hlt
enter
sarb
add
movsl
dec
mov
jne
jl
fmul
adc
and
rolb
pusha
mov
mov
into
ficompl
pusha
bound
and
adc
xor
or
push
pushf
mov
pop
mov
leave
enter
repz
and
popa
enter
pop
pushf
push
xor
inc
lret
jbe
adc
inc
add
or
mov
add
mov
adc
or
push
jmp
mov
cmp
xchg
jl
lods
sub
out
mov
mov
inc
mov
push
cmovae
ljmp
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
xchg
cmpsl
sbb
loope
add
inc
popa
je
inc
je
dec
or
xor
push
dec
jmp
add
add
or
loopne
jl
inc
je
loopne
xor
inc
mov
add
add
xor
aam
sbb
fldl
fdivl
fmull
mov
push
pop
clc
fstps
or
test
or
jb
adc
shrl
mov
ret
ret
das
pop
adc
xchg
push
jnp
dec
add
push
sub
sbb
xor
dec
and
adc
out
dec
inc
add
ja
test
jmp
add
bound
jb
insb
mov
scas
rolb
jp
push
or
cmp
out
xchg
roll
es
bound
cmp
jmp
fwait
or
jmp
dec
das
and
push
rolb
xchg
pop
mov
nop
lods
lahf
xor
cld
lahf
insb
enter
push
sub
shrb
cltd
sahf
add
mov
push
imul
aaa
xchg
decb
icebp
add
mov
aaa
sub
push
out
and
push
cmp
int
jbe
sub
pop
sbb
popa
iret
rorb
inc
mov
adc
shl
jmp
insl
inc
lock
pop
xor
mov
cmpl
pop
int3
push
or
push
data16
push
mov
js
adcb
sbb
mov
push
sbb
push
jl
pop
cmp
movb
sub
add
lods
cmp
xor
test
lret
dec
cli
and
add
enter
lret
mov
jge
jecxz
add
pusha
mov
sbb
sbb
xchg
inc
sbb
inc
cmp
add
ficoms
ret
fsubrs
sub
mov
xor
mul
jl
cmp
pushf
lret
js
inc
mov
mov
test
add
mov
xor
add
out
dec
jne
push
push
dec
int
hlt
jmp
or
jmp
testb
hlt
or
ljmp
adc
add
rcrl
and
inc
negl
mov
mov
xchg
xchg
inc
cmp
jne
daa
dec
arpl
test
adc
sbb
mov
or
adc
outsb
push
or
and
adc
loop
or
fndisi(8087
call
sub
or
push
incl
mov
std
mov
pop
insl
cmpsl
mov
or
sbb
adc
sbb
stc
lea
test
mov
mov
mov
cmp
dec
push
add
lods
add
daa
mov
jo
xchg
push
push
mov
fldenv
push
xchg
test
cmc
iret
mov
shrb
jp
sbbb
or
mov
add
adc
xor
mov
lea
popa
mov
shl
and
or
inc
sbb
cmp
jge
notl
shll
pop
cltd
sbb
sbb
jbe
cs
lret
addps
sbb
das
add
jl
or
dec
fiadds
arpl
std
popf
dec
lock
xor
incb
push
inc
jmp
and
add
sub
test
push
and
ss
es
stc
inc
inc
test
push
sub
sub
push
cmp
movsb
add
subb
or
mov
jmp
mov
clc
insb
loopne
cld
jo
mov
sbb
addr16
xchg
or
adc
pop
jmp
adc
fidivs
pop
testl
shl
mov
rorl
mov
push
cmp
jmp
mov
ret
adc
xor
push
fsubrp
adc
cwtl
pop
mov
ds
fimuls
or
mov
in
lock
xor
das
sub
jmp
dec
mov
jnp
scas
add
sysexit
sbbl
and
loopne
push
loope
mov
add
adc
or
adc
adc
adc
lds
mov
sbb
xchg
push
int
vpsraw
pop
pushl
xchg
daa
sbb
lea
and
imul
push
aam
ret
fsubr
pop
or
fisttps
add
lret
sbb
xchg
ss
loope
cmp
mov
adc
cwtl
loope
push
lock
sub
subb
sbb
sbb
cmpsb
ja
sti
and
sbb
or
cs
cmp
mov
mov
jge
mov
ja
jo
and
sbb
pop
sub
xor
test
inc
mov
xchg
icebp
mov
iret
adc
loopne
cmp
lea
or
mov
pop
add
shr
add
or
pop
add
das
notb
cld
mov
shr
or
mov
add
add
or
bound
push
aad
mov
stos
mov
aam
pop
clc
push
sbb
shr
xor
inc
or
mov
push
stos
adc
push
idivl
clc
fnstcw
inc
les
test
inc
pusha
lock
dec
add
lea
mov
shr
sub
mov
adc
mov
cs
sub
mov
mov
repnz
int
and
rorb
cmp
adc
out
decb
ja
clc
inc
jbe
fisubrl
or
jle
in
push
pop
shrb
es
rolb
ficoms
jl
xchg
shl
andl
dec
out
aad
xor
dec
test
sarb
cli
stos
loope
jo
imulb
or
test
push
ror
loop
lret
test
je
dec
rolb
sbb
pushw
or
sub
mov
sub
cmp
cwtl
or
xor
into
popa
mov
push
mov
lock
push
add
ret
lret
pop
call
xor
sub
jne
imul
call
ss
mov
inc
add
dec
xchg
dec
adc
mov
mov
and
and
dec
cli
sbb
aam
xchg
mov
jle
pusha
xor
xorb
cmp
imul
or
mov
pop
cmp
pop
out
nop
mov
je
xchg
std
fildll
jg
lock
jl
cmpb
jl
xor
push
outsb
mov
idiv
fdivl
and
inc
xchg
adc
xchg
push
fsts
adc
push
adc
cli
mov
dec
inc
push
push
mov
push
push
fsubs
sbb
jo
inc
inc
adc
fnstcw
dec
sbb
aam
lock
or
inc
cmp
sub
and
adc
or
pop
cmp
dec
add
shlb
adc
enter
call
or
test
jne
lret
cmc
inc
adcb
hlt
and
shll
and
je
mov
xor
rorb
pop
add
popa
mov
or
lret
adc
add
rclb
push
les
movsl
xor
jl
and
lea
mov
aam
mov
push
push
enter
pop
and
jmp
pop
push
aad
mov
add
push
xor
in
lock
hlt
iret
imul
inc
push
neg
neg
sbb
lahf
ja
pushf
sub
inc
sbb
sbb
sbb
aad
sbb
stos
mov
fcoms
inc
and
dec
addr16
aad
icebp
sbb
and
sbb
jmp
dec
jns
fisttpl
daa
std
mov
cmp
cmp
jae
or
pop
mov
and
lods
rcl
ljmp
or
call
adc
cmp
js
mov
jmp
mov
adc
ljmp
xor
push
mov
or
add
add
cmp
dec
mov
mov
pop
xor
fsubrs
insb
add
jb
and
mov
xchg
mov
push
bound
mov
ror
push
sbb
into
jbe
jns
aas
aam
movsl
add
adc
jne
cmc
sbb
into
les
xchg
push
add
adc
ds
mov
push
jo
fwait
pinsrw
mov
data16
adc
test
adc
pop
add
imul
jo
jno
inc
or
xor
and
or
cld
and
mov
data16
dec
pushl
dec
out
sbbl
je
or
and
cltd
or
insb
jbe
inc
fcmove
jne
cmp
testb
and
jmp
fists
das
insl
std
sub
leave
je
xor
mov
nop
lock
scas
es
mov
je
out
lcall
add
out
push
cmp
ja
add
cmp
adc
sti
xchg
sarb
cmp
jne
xchg
xor
adc
jge
jb
idivl
aam
mov
jbe
push
inc
mov
push
adc
xchg
mov
ret
xchg
add
sbb
mov
xor
pop
push
inc
or
outsl
ss
or
scas
mov
jg
ret
jmp
imul
je
fistps
xor
push
cmp
pop
and
int
push
into
nop
inc
xor
pop
aaa
imul
jo
es
imul
test
mov
push
cmp
ret
jo
pop
leave
std
out
outsb
lods
mov
mov
add
sahf
nop
pop
adc
add
fstl
out
pop
inc
sbb
popf
push
lcall
push
lret
sbb
cmp
push
and
inc
xchg
adc
sbb
mov
and
dec
mov
sti
movb
and
and
push
xor
inc
orb
sbb
pusha
sub
pop
cmp
rclb
inc
ror
push
rcl
repz
repz
aad
xlat
inc
insb
ds
fcomp
fstpt
cmpb
data16
incb
sub
hlt
add
mulb
into
and
dec
sub
shl
cmp
mov
or
add
mov
mov
add
push
push
or
push
inc
push
mov
xchg
cmpsb
ss
mov
xor
push
fs
add
jb
je
test
movsb
pop
jo
jmp
icebp
adc
ret
es
push
xor
cwtl
and
pusha
push
sbb
sub
push
bound
and
jg
add
push
fisttps
shrb
adc
mov
jmp
or
jg
sbb
dec
lea
sar
inc
loop
sbb
mov
mov
bound
sbb
inc
push
xlat
sbb
out
loop
push
pushf
push
mov
lock
sub
mulb
adc
mov
adc
sti
add
adc
fisubs
stos
jle
insb
scas
pushf
push
jp
mov
pop
mov
orl
test
dec
movb
or
and
dec
inc
fadds
hlt
mov
sub
decb
or
or
mov
and
lea
loop
mov
pop
sbb
movsl
jns
sbb
jae
xchg
ja
add
adc
xchg
and
jno
inc
divl
inc
sahf
pop
and
loopne
dec
lods
xorb
loopne
inc
or
sbb
sub
mov
mov
and
pop
shlb
rolb
test
rolb
push
mov
andl
cmp
loopne
push
fisubl
dec
xchg
mov
push
push
or
cwtl
dec
push
or
sub
andl
or
ret
or
sub
int3
fwait
out
inc
xchg
cwtl
mov
jge
jl
fwait
cmpsb
lods
xor
inc
test
rol
andl
or
jle
jle
mov
rolb
jb
add
pcmpgtb
or
loopne
cmp
or
ds
mov
gs
push
lret
xor
add
inc
or
fcomps
loope
popf
int3
inc
lods
ss
shrl
mov
mov
mov
or
sbbb
dec
push
dec
in
movsb
mov
inc
lods
lock
rclb
repnz
iret
push
pop
sbb
cli
inc
cli
div
adc
xchg
mov
sbb
inc
sbb
call
lret
mov
or
adc
or
getsec
aam
ret
and
mov
data16
test
fidivl
icebp
js
scas
fnstenv
xchg
mov
jp
idivb
sahf
out
inc
mov
test
xchg
mov
xor
or
inc
shll
clc
out
adc
xchg
mulb
test
inc
jb
leave
push
les
adc
sbb
inc
inc
adc
sub
sub
fdivrs
aam
fs
ss
inc
test
dec
ss
test
sbb
cmp
mov
pop
adc
dec
xor
call
or
xor
cld
inc
sub
lea
fcmovu
mov
push
lcall
lods
rolb
mov
mov
cltd
add
mov
clc
sbb
roll
sbb
imulb
iret
enter
test
stc
xchg
lret
jge
or
add
jge
es
sbb
sub
movsb
adc
cmp
jne
repnz
and
push
nop
push
movsb
in
sbb
push
xchg
add
mov
adc
inc
nop
gs
sub
push
in
scas
pop
sub
mov
or
add
inc
add
add
or
aas
int3
push
nop
cmp
dec
cmp
inc
fbld
push
out
adc
mov
add
push
pop
xchg
adc
call
or
or
push
shll
pop
adc
fcomps
xor
fiadds
imull
inc
imul
jmp
outsl
and
imul
loopnew
xchg
mov
pop
add
and
pop
pop
ret
mov
xchg
adcl
cltd
out
sbb
pop
int
aas
and
xchg
mov
xchg
or
or
mov
add
sub
add
lahf
stos
faddp
dec
into
or
js
cs
sbb
mov
fnstcw
add
enter
or
mov
jae
add
xchg
dec
test
mov
mov
add
faddp
incl
into
or
mov
inc
decl
cmp
add
dec
aad
decb
dec
mov
dec
cmp
jge
sub
cmpb
jae
or
movb
dec
cmp
dec
mov
mov
inc
dec
add
add
fadds
dec
push
add
mov
jp
jne
dec
mov
or
mov
pushfw
adc
push
inc
ret
and
add
push
xchg
bound
add
jle
adc
inc
or
enter
or
adc
lret
add
test
sub
mov
mov
add
je
mov
inc
xchg
sbb
cmp
or
out
or
jmp
shll
xor
xchg
push
or
and
push
or
dec
push
pop
pop
scas
add
adc
and
int3
out
cmpsl
add
or
mov
pusha
and
push
ret
pop
mov
movsl
gs
adc
or
jae
roll
test
jae
rol
mov
iret
xor
inc
xchg
xchg
lret
inc
nop
jne
mov
rcrl
loop
add
mov
ret
jne
or
mov
xor
shrb
mov
dec
inc
push
pop
jae
xor
jbe
or
or
add
mov
mov
push
mov
inc
or
pop
mov
pop
pop
jg
push
adc
xlat
dec
dec
cmp
push
add
jne
add
jne
and
sbb
mov
mov
inc
jge
or
add
ret
or
je
or
in
sub
sbb
xchg
icebp
cld
fldcw
mov
cld
dec
mov
inc
xorb
or
testl
add
xchg
dec
into
xchg
cmp
test
jge
and
sub
into
in
stmxcsr
loopne
sub
cltd
and
dec
jnp
into
or
add
or
push
into
mov
add
sub
mov
mov
pop
out
cmp
inc
jg
into
jp
dec
dec
into
into
mov
lea
sarb
push
js
aaa
js
nop
pop
cwtl
pop
mov
nop
int3
or
ficompl
clc
shlb
or
pop
adc
sbb
test
cmovl
mov
test
lahf
pop
test
and
enter
add
mov
test
and
sarb
ret
je
and
pop
mov
add
sub
jmp
lea
lret
ret
pop
or
out
and
jo
push
scas
xor
push
push
or
dec
xchg
ret
sub
sub
lods
dec
sub
pop
fcompl
inc
mov
mov
xchg
mov
lods
push
dec
sub
push
cmp
and
aaa
xchg
mov
sub
add
or
ret
sbb
adc
sbb
xlat
jle
or
xlat
and
daa
or
and
cmp
jge
xor
imul
lea
mov
xlat
outsl
or
sbb
and
mov
aam
adc
scas
xor
daa
cmp
and
cwtl
sbbb
add
inc
jmp
and
dec
inc
orl
loopne
jne
sbb
out
je
dec
outsl
mov
imulb
std
inc
cld
push
cmp
jbe
inc
inc
fsubrp
jmp
mull
pop
sbb
mov
lds
test
mov
out
or
out
repnz
jo
jbe
inc
jns
jmp
test
insb
insl
sbb
push
or
cwtl
mov
test
cmp
popf
push
cmp
ja
movsl
xor
push
into
cmovno
sbb
jnp
mov
and
ret
rclb
loopne
sarl
in
or
lods
test
or
pop
cs
jp
push
push
sub
pusha
scas
and
xor
imul
jnp
inc
pushl
xchg
cld
or
test
je
insb
sti
test
test
push
xor
mov
cmp
aam
pop
dec
push
or
popf
xchg
fcoms
jecxz
lret
push
stos
pop
mov
cmp
xor
in
jge
sbb
mov
adc
sub
mov
mov
ret
rclb
fcoml
dec
mov
mov
dec
xchg
stos
dec
repnz
inc
sbb
clc
in
hlt
push
sarb
jge
xor
adc
imul
pusha
push
pop
push
imul
int
add
jle
cmpb
call
push
adc
cmp
shll
lds
xchg
sbb
xor
add
adc
addb
sbb
sub
addr16
jo
add
shrb
add
lds
bound
cmp
and
test
or
xlat
movsl
test
push
es
push
ds
scas
mov
popa
sar
popa
movsl
lea
sub
or
inc
mov
iret
dec
inc
pop
push
fiaddl
inc
bound
add
jne
push
inc
aas
lods
xchg
ret
adc
sbb
cmp
push
rclb
fsubrl
or
pop
fisubrl
push
dec
sbb
push
inc
adc
or
outsb
mov
push
es
mov
cmp
roll
xchg
jecxz
mov
fmuls
add
adc
test
add
sub
mov
and
sbb
popa
sbb
dec
rorl
adc
push
ja
in
cmpsb
cmc
mov
cwtl
mov
xchg
test
sbb
xor
or
incl
lock
inc
adc
push
movsb
push
mov
rorb
xor
xchg
int3
adc
adc
ss
sbb
pop
nop
cmc
pop
divb
and
pop
mov
stos
loopne
jmp
dec
dec
nop
adc
pop
jae
jmp
ss
cmp
or
js
pop
push
xor
mov
mov
sbbb
pusha
sub
and
inc
shll
ds
clc
fcompl
or
in
add
and
sub
add
or
hlt
push
es
xor
push
sbb
and
push
adc
lock
and
inc
hlt
xor
scas
adc
or
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jl
dec
cmp
sbb
scas
add
or
insl
loopne
mov
out
sahf
add
or
mov
add
mov
mov
test
adc
cmp
sub
sbb
movsb
jle
popl
shl
add
mov
and
icebp
out
sbb
pop
lock
xchg
mov
icebp
jmp
ret
sbb
shlb
insl
clc
mov
in
adc
push
fcomip
cvttsd2si
mov
push
add
pop
pop
inc
fwait
pop
je
daa
inc
adc
push
ds
cmp
insb
rclb
xchg
std
addr16
cmp
jmp
fstps
mov
icebp
lahf
inc
nop
aam
cmp
dec
data16
adc
fmuls
adc
test
rcr
pop
cmpsb
pop
in
movsb
inc
add
push
adc
xchg
int
or
imul
imull
add
pop
psllw
adcl
mov
or
test
into
outsb
das
mov
pop
pop
js
ljmp
sbb
ret
fdivl
orb
lock
in
push
inc
dec
es
loopne
mov
leave
insl
mov
cmpb
enter
aad
js
fsubs
xor
xchg
bound
mov
lahf
cmp
test
sbb
addr16
pop
push
inc
nop
test
jnp
xor
orb
jne
enter
shlb
test
or
jne
jge
inc
cmpsb
lods
inc
or
inc
mov
nop
xor
in
add
adc
inc
pop
mov
popf
bound
xor
or
dec
pop
jge
mov
popa
ret
pop
add
dec
pop
fsubrs
stc
push
nop
mov
add
mov
fcoms
pop
inc
jne
aad
adc
cmp
xchg
and
das
adc
int3
es
adc
cmp
cmpsb
cmp
inc
adc
stc
adc
jb
dec
add
gs
push
or
add
rcrl
xor
sbb
lds
dec
shr
push
cmp
jb
lods
dec
in
pop
dec
sbb
pop
sbb
jmp
fisubl
mov
cmp
fstpl
sbb
cmp
or
sub
xchg
jbe
mov
xor
test
call
es
add
repz
sub
dec
jnp
imul
in
xchg
sbb
rcrb
popa
or
leave
insl
push
in
movups
shll
fadds
pop
pop
rorb
je
popa
outsl
fdivrl
lock
outsb
shll
or
sarb
dec
xchg
in
push
aad
pop
hlt
add
push
andl
cmp
hlt
jne
ja
cmpsl
scas
outsl
push
cmpsb
arpl
cld
sub
cmp
mov
mov
push
mov
adc
scas
stos
push
push
fdivrs
xchg
arpl
insl
push
add
push
in
jmp
dec
cmp
xor
lock
sub
dec
push
call
mov
dec
loope
adc
adc
and
int3
cltd
aam
enter
mov
shr
mov
xchg
sbb
jo
push
repnz
jo
out
shrb
sub
sbb
leave
mov
add
adc
xchg
dec
adc
and
dec
xor
xor
cmp
dec
xor
and
dec
outsb
and
add
sbb
movsb
je
sbb
mov
ja
add
rol
sbb
sbbl
in
sbb
loopne
lret
or
dec
xor
hlt
cwtl
out
inc
jae
inc
cld
clc
mov
dec
xor
and
lock
mov
lock
scas
jecxz
jg
add
dec
push
sub
outsl
push
add
cmp
cmp
add
pop
lock
ss
fsubl
sbb
sbb
pushf
in
int3
aad
or
fs
inc
dec
rclb
xchg
cwtl
fsubr
fadds
or
in
push
cltd
ss
aam
in
mov
inc
add
in
adc
and
inc
cmp
aad
imul
mov
push
imul
mov
pop
test
fbstp
pusha
dec
push
aaa
mov
sbb
pop
inc
test
mov
xchg
in
in
in
inc
xor
call
cmp
adc
jne
imul
imul
cwtl
ss
push
adc
outsl
in
in
roll
in
fsubs
dec
dec
and
mov
in
in
loopne
push
adc
insb
xor
insl
jne
test
in
cwtl
jbe
inc
xor
inc
sahf
call
add
pop
fmuls
arpl
nop
push
or
daa
jns
test
adc
adc
inc
add
add
lock
mov
add
popf
mov
mov
fadds
loopne
fcoml
jnp
mov
stos
dec
adc
jo
dec
mov
xchg
cli
mov
scas
in
arpl
and
fmuls
jo
or
add
or
out
popf
lahf
mov
cmp
daa
int
movsl
adc
je
fsubs
add
dec
out
mov
sbb
mov
pop
mov
pusha
xor
sub
in
mov
cmp
cmc
fcomp
jno
adc
and
push
mov
call
rorl
pop
leave
or
lea
push
xchg
xchg
lock
xchg
xchg
xchg
fldt
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
push
and
push
or
and
mov
pop
mov
dec
sbb
clc
fbstp
cltd
pop
ret
sbb
add
xchg
rolb
mov
add
mov
xor
dec
push
inc
aad
pop
jae
in
xchg
xor
enter
sbb
cmpsl
or
adc
je
mov
adc
pop
cmpsl
aad
adc
or
adc
push
lods
xorb
add
fsubrs
dec
jo
or
call
repnz
aam
mov
pop
and
add
xor
jmp
aas
inc
adc
arpl
jbe
outsl
fcomps
in
adc
mov
jbe
lret
vpcmpgtw
xor
mov
push
pop
mov
std
xchg
fwait
loopne
fisttpll
sti
sbb
arpl
enter
shrb
mov
outsl
test
rcll
in
lods
mov
mov
add
repz
nop
sub
jp
jg
dec
stos
dec
xchg
jg
pop
inc
arpl
sahf
pop
add
xchg
jmp
push
sbb
pusha
mov
mov
cltd
hlt
inc
xor
pop
xchg
jbe
leave
adc
dec
mull
adc
jl
pop
pop
cltd
pusha
inc
add
test
mov
jo,pn
adc
xor
adc
xor
fisttps
or
add
add
rorb
sbbb
lea
in
les
or
push
and
mov
call
add
push
mov
and
dec
inc
lds
jns
or
sbb
movsb
jg
inc
add
pop
xlat
pushf
add
mov
add
ret
dec
push
enter
add
ret
pop
xchg
adc
lds
mov
add
pushl
lock
dec
cs
in
mov
inc
mov
jg
push
cmp
pop
mov
mov
and
add
dec
loopne
xchg
fdivr
mov
adc
orb
and
push
jns
pop
jmp
jb
or
and
sbb
xchg
pusha
fsubrs
mov
jnp
jnp
cmp
sub
sub
jg
stc
loopne
dec
jb
xlat
or
rorb
sub
inc
jl
inc
push
sbb
or
inc
push
cmp
or
or
cmp
nop
or
or
sbbl
lret
adc
mov
pop
repnz
pop
fmull
hlt
push
mov
jecxz
inc
mov
or
inc
add
adc
dec
jle
xor
shlb
mov
loopne
mov
push
cltd
aam
int3
xchg
push
xor
mov
push
movsl
dec
aas
in
ljmp
sub
mov
or
xchg
push
push
xor
jg
fisubl
cmpsl
cmp
les
inc
in
in
sbb
subb
jno
fcompl
jb
xchg
pause
incb
and
shll
in
mov
xchg
mov
pop
lock
inc
pop
aam
add
fwait
and
in
xchg
add
mov
add
sub
jne
lds
aad
adcl
adc
dec
cmp
cmpb
and
pop
sbb
lret
loopne
mov
and
push
pop
push
mov
lock
imul
mov
adc
inc
push
jne
test
int3
adc
enter
subl
int3
enter
dec
dec
dec
mov
dec
dec
dec
xchg
cwtl
mov
pop
jne
dec
outsl
add
lds
cmp
xchg
dec
lret
xor
inc
lcall
and
test
cmp
mov
mov
jecxz
pusha
mov
xchg
jo
and
push
mov
insl
sbb
outsl
sbb
out
inc
jae
nop
pop
mov
mov
movsb
inc
lcall
dec
dec
scas
mov
mov
mov
xchg
inc
mov
bnd
iret
in
cmc
xchg
shr
lock
inc
pop
fwait
mov
mov
repz
rorb
filds
push
cmp
in
adc
inc
or
pushf
int3
pop
in
call
lahf
call
xlat
movsb
push
cmp
stos
inc
jno
outsl
insl
push
popa
stos
xor
and
add
mov
nop
add
mov
lock
ret
sti
popa
sub
fcompl
inc
add
sub
mov
pop
xor
mov
in
xchg
js
push
stos
fwait
pop
ja
push
enter
arpl
mov
cmp
sarb
rolb
cmpb
dec
xchg
pop
push
inc
rcr
mov
icebp
or
fdiv
sbb
or
mov
scas
sbb
test
cmpsl
insl
or
in
xchg
pusha
scas
mov
jo
in
int
mov
sbb
sub
fmuls
stc
cs
pop
ret
xor
std
mov
jae
inc
sti
and
jl
movsl
or
enter
shlb
pop
faddl
in
adc
or
jnp
push
arpl
sbb
mov
enter
fadds
das
mov
mov
pop
or
and
cwtl
or
lock
ljmp
inc
call
stos
inc
aas
fmuls
ret
jmp
test
or
fnsave
rclb
mov
mov
cmp
aam
mov
ret
les
adc
or
mov
push
mov
scas
fnstenv
aas
nop
fcmovbe
mov
movsb
jns
mov
adc
or
xor
sbbb
and
repnz
lods
andb
dec
orl
inc
movsl
sti
pop
aam
dec
inc
push
dec
jg
in
imul
out
lods
mov
adc
push
pop
rorl
mov
mov
ret
movsl
cmp
jb
jle
adc
movsb
adc
adc
sbb
pushf
aaa
test
adc
mov
in
fsubrs
cmp
scas
in
in
int3
enter
ret
mov
add
imul
scas
shr
xchg
lahf
or
push
lds
sbb
jnp
loopne
mov
stos
sbb
loopne
mov
enter
imul
pop
nop
insl
xchg
push
movsb
inc
pushf
adc
xchg
sub
mov
add
js
xchg
pop
sbb
sub
aam
adc
mov
add
test
mov
mov
je
les
or
sub
or
leave
mov
push
xchg
test
add
sub
cwtl
movsb
sbb
xor
call
inc
psubsb
sub
cltd
mov
fcomps
aad
rolb
mov
jg
call
scas
subb
xor
push
loop
dec
inc
mov
inc
imul
push
cs
mov
lock
pop
add
fwait
dec
cmpsb
ret
in
test
mov
das
sub
fs
pop
or
push
sub
add
inc
test
stos
jecxz
sub
shlb
sub
mov
cltd
push
shrb
nop
dec
aad
lcall
aam
shll
mov
ficoml
xchg
arpl
test
inc
sbb
sbb
sub
mov
and
daa
ret
cwtl
movsb
pusha
xorl
mov
test
mov
fwait
and
fsubrs
push
jecxz
inc
inc
cs
lcall
and
add
mov
aam
xor
mov
jns
pushf
sti
cmpl
jns
cmp
or
cmp
mov
mov
subl
or
enter
push
subb
or
movsl
or
push
mov
mov
scas
sub
xchg
out
pushf
movsb
lods
adc
out
fisubrl
sbb
out
adc
pop
out
pop
int3
cmp
jmp
fdivs
movsl
sub
pusha
xchg
les
jb
imul
cmovb
jns
xchg
nop
lahf
mov
push
popf
lcall
dec
int3
fldl
dec
rcrb
cmpsb
mov
pop
xor
addl
xor
dec
in
mov
adc
outsl
movb
in
xor
and
ret
sub
fnstsw
mov
cs
dec
outsl
pop
pop
push
pop
aad
test
lcall
pop
mov
push
add
int3
jg
and
movzbl
mov
mov
or
mov
and
enter
mov
les
mov
and
aad
bound
xchg
xchg
test
dec
push
mov
movsb
inc
jns
test
jge
int3
add
pop
cmp
pop
pusha
out
fcompl
int3
ret
rcrl
adc
movsl
int3
sub
lds
or
sbbl
stc
insb
arpl
xor
test
mov
or
push
fsubrs
shlb
dec
sbb
mov
sub
mov
adc
or
adc
test
out
inc
push
jns
pusha
cmc
shlb
jnp
pop
je
pop
ss
sub
adc
lods
insb
js
mov
stos
sbbb
rclb
inc
xchg
add
movsb
imul
nop
int
nop
or
fisttps
ret
inc
faddl
fcmovb
mov
jnp
lret
or
cmpl
inc
pop
add
mov
add
enter
dec
add
xchg
push
fdivrl
nop
lret
iret
or
cwtl
and
cmpb
jl
and
es
cmp
sbb
scas
ret
outsl
and
pop
dec
test
imul
mov
faddl
dec
ficoml
sub
dec
push
cmp
mov
and
mov
orb
or
fsubs
test
in
mov
aad
or
cmp
rolb
pop
in
shrb
cmp
in
xor
les
push
xchg
in
xchg
test
cmpl
test
xchg
jmp
mov
xchg
movsb
lods
jns
cmpsb
dec
repnz
js
push
leave
leave
and
andb
jb
nop
dec
cwtl
pusha
cmpsb
fs
fildl
dec
cmpsb
popa
dec
dec
push
sub
fmuls
or
fsubrs
pfmul
sub
pushf
pop
sahf
inc
lods
inc
or
addr16
and
mov
jg
jo
inc
fsubrl
stc
xchg
or
add
add
fs
push
std
add
es
or
notl
push
cltd
nop
inc
out
and
jl
and
rcr
inc
inc
mov
xchg
sarl
pop
push
rorl
int3
lods
in
daa
sub
push
mov
pop
add
fdiv
add
add
in
add
dec
gs
sti
add
ja
add
idivl
sub
push
or
adc
inc
inc
mov
andl
faddl
andl
outsl
nop
or
xchg
add
scas
sbb
fdivrl
std
stos
dec
sub
pop
push
fs
bound
fildl
cmp
adc
leave
shrb
or
cld
gs
add
cmp
lcall
mov
adc
mov
fcoms
mov
shrb
jg
mov
pop
cmp
jmp
or
scas
push
xchg
orb
mov
adc
popa
sbb
push
pop
inc
cld
adc
leave
lock
in
add
cmp
das
add
adc
cltd
pusha
arpl
mov
push
insb
or
sub
cmp
sbb
xchg
in
sub
jmp
ret
jge
xor
add
hlt
call
in
and
mov
dec
fdivs
je
cs
xchg
aam
add
or
in
bound
fsubrs
and
push
mov
les
xor
aad
mov
push
add
sbb
inc
cmovbe
mov
xor
xchg
or
and
and
adc
mov
push
mov
ss
call
or
call
push
and
mov
sub
rcll
xor
test
mov
or
push
fstl
lds
adc
ret
dec
clc
or
and
leave
fwait
mov
adc
xchg
cwtl
sti
mov
push
aam
sbb
mov
inc
or
adc
xchg
push
lods
inc
inc
mov
push
jle
mov
mov
add
mov
shl
es
fidivl
leave
and
cmpl
leave
and
dec
push
pusha
push
jbe
dec
xor
cltd
lcall
inc
fs
inc
mov
rorl
aad
add
scas
cwtl
rorl
inc
mov
mov
in
nop
mov
test
inc
or
dec
test
imul
enter
pusha
jge
and
loopne
sbb
and
sbb
fdivs
push
mov
repz
jecxz
inc
sbb
je
xlat
inc
add
dec
sub
cmp
lock
inc
data16
pop
orb
mov
mov
lahf
mov
adc
rorl
dec
xor
fisttps
stc
add
mov
imul
or
mov
fcom
ret
test
xor
aas
outsl
mov
xor
sub
pop
daa
movaps
xor
movsb
fdivrs
fdivrl
lods
add
pinsrw
push
jg
or
adc
and
inc
mov
jbe
dec
pushf
movsl
cmp
pop
pop
in
enter
rcrb
pusha
rolb
loopne
enter
adc
clc
fistl
mov
or
mov
jbe
inc
lock
push
nop
mov
insl
sub
mov
sub
cltd
push
adc
fs
lods
test
add
ret
loopne
lcall
xchg
call
sbbl
or
push
jb
and
je
sbb
push
lods
int
cmp
shlb
call
sub
add
jne
jp
or
mov
es
orb
int3
ss
xchg
pop
pop
call
jo
or
das
add
cwtl
dec
fwait
xchg
xchg
adc
ret
push
pushf
ljmp
dec
repnz
adc
clc
aas
dec
add
cld
cmp
mov
mov
sbb
subl
scas
push
insb
xor
and
lock
inc
pop
add
adc
iret
in
decl
arpl
mov
xlat
push
push
adc
pop
popf
inc
xchg
adc
jno
sbb
in
cld
popa
mov
cmp
aam
add
dec
add
adc
adc
inc
lea
xor
add
pusha
imul
fs
pop
or
sbb
loope
dec
hlt
cli
mov
sti
and
sbb
cld
cli
scas
fs
orb
inc
dec
mov
dec
jb
hlt
add
adc
js
lods
inc
mov
popf
movsb
je
sti
mov
mov
roll
and
adc
inc
enter
and
mov
fs
inc
test
mov
sbb
sarl
shrl
cli
xchg
mov
pop
clc
adc
movsb
repz
lods
cmpsb
mov
iret
mov
dec
push
rorb
nop
xchg
outsb
es
xor
mov
stc
les
or
add
dec
or
fwait
and
push
decl
jno
and
movsl
call
xor
leave
push
adc
xor
cmp
cmc
push
push
pusha
stos
mov
xor
addb
movsb
adc
mov
pop
ret
push
or
shrb
push
dec
sbb
mov
icebp
arpl
xor
mov
cmpb
mov
add
push
pop
mov
idivb
mov
push
imul
push
pusha
add
push
pop
inc
xchg
out
loopne
jle
adc
add
mov
int
push
push
repnz
dec
xlat
stos
push
push
dec
filds
jne
ret
dec
xor
mov
pop
es
mov
push
dec
test
fsub
cwtl
cmp
push
or
xchg
push
or
stos
rcrb
push
sub
push
and
pop
sub
dec
push
call
hlt
lret
dec
sbb
jbe
sbb
in
mov
xchg
push
sbb
clc
ret
push
scas
lcall
fiaddl
push
sti
dec
call
sahf
testl
add
dec
repz
pusha
mov
mov
in
add
imul
push
aaa
dec
data16
lcall
pop
mov
mov
push
jg
and
mov
or
push
mov
xor
pop
call
add
cmp
dec
mov
fistpl
or
jnp
mov
sti
adc
or
and
ror
lcall
push
nop
mov
jl
push
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
fisttps
aaa
push
push
cmp
pop
popa
jmp
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
jg
cmp
sub
lcall
mov
rcll
xchg
adc
push
or
jmp
cmp
rclb
cmpl
push
lret
out
push
out
out
out
push
scas
push
sahf
out
out
lret
dec
outsb
je
jb
outsl
in
in
pop
sti
arpl
fs
out
sbb
push
dec
imul
pusha
pop
jne
push
gs
xor
cs
insb
test
out
ja
bound
and
pop
popa
je
outsl
outsb
push
sbb
lods
es
mov
aas
paddsb
pop
jbe
add
incl
sub
or
int
outsb
cltd
mov
inc
outsl
jb
sti
js
je
jb
gs
cmp
or
outsl
add
add
cld
in
cld
add
add
je
push
je
jbe
lock
jb
mov
mov
popf
outsb
dec
xor
xor
iret
mov
insl
cmp
dec
and
xor
add
push
das
das
adc
push
dec
addr16
lock
insl
bound
daa
jnp
aas
jbe
outsl
jbe
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
in
out
popa
mov
insb
dec
popa
jb
push
bound
inc
insb
adc
mov
popl
outsb
jns
jg
addr16
or
fcompl
jne
xor
cltd
loop
and
daa
push
scas
clc
sbb
in
cmpsl
cwtl
adc
and
jbe
pushf
outsl
pop
dec
inc
ds
popa
das
mov
lcall
add
mov
sub
incl
add
fstpl
adc
jbe
pop
pusha
mov
aam
jno
idiv
cmpsl
test
jmp
sub
sub
cmpsb
das
movsl
cmp
cmp
ds
inc
das
mov
pop
xchg
pusha
cmp
jl
jle
add
arpl
test
fmuls
pushf
addr16
and
push
pop
or
jno
mov
adc
push
call
insb
jae
cs
jmp
push
mov
inc
inc
jnp
test
mov
xor
insl
and
sti
lds
add
jbe
dec
push
push
sbb
aaa
out
dec
dec
inc
sbb
and
stos
ss
outsl
add
xor
sbb
push
jo
cmpsb
aas
aad
imul
insl
pop
mov
cs
mov
and
mov
mov
and
fs
push
and
scas
mov
mov
insb
xorb
inc
popa
and
data16
jne
pop
xor
ja
loopne
and
insl
push
xchg
sbb
aas
xor
rcll
dec
rolb
dec
int
insl
les
out
mov
push
dec
mov
and
or
push
sbb
jp
push
pop
addr16
sbb
and
push
testb
mov
je
and
addb
int
or
jb
loopne
outsl
shl
mov
mov
aaa
test
addb
das
add
inc
lock
cmp
arpl
shll
mov
jge
fiadds
inc
xchg
insb
imul
out
xor
int3
or
push
pop
xchg
lock
inc
push
xor
gs
push
fistps
push
push
jbe
lock
xor
push
es
dec
out
nop
or
sub
mov
ja
outsl
stc
or
je
hlt
pusha
in
xor
imul
jne
inc
xchg
push
xorl
push
gs
loopne
ljmp
xor
js
cmp
inc
jle
xor
push
or
arpl
push
rcrl
jo
bound
mov
inc
aaa
insl
ret
or
in
ljmp
xor
mov
popa
pop
or
jae
inc
jno
rclb
leave
sbb
insl
imul
cmp
mov
stos
sbb
pop
fmuls
jns
xor
and
test
and
pop
push
cmp
push
pusha
sub
push
jae
xor
push
addr16
push
pusha
jo
sbbb
out
sub
pushf
jo
jb
push
ret
movzbl
push
imul
dec
lods
jge
add
dec
or
jo
and
outsb
in
push
mov
inc
imul
or
lds
and
dec
cmp
ss
fisttpll
pop
loopne
in
test
xchg
add
shl
ret
ds
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
add
cmpsb
gs
popa
inc
test
out
add
xor
jg
insl
stc
frstor
inc
jae
je
pop
dec
rorl
js
add
xchg
jb
sbb
xor
mov
push
add
adc
add
add
add
icebp
lcall
add
and
push
pop
pop
or
aaa
mov
push
push
pop
hlt
and
or
pusha
add
popf
cltd
divl
pop
sub
add
fidivrs
addb
add
xchg
imul
ret
add
orb
dec
daa
push
cmpb
push
and
sub
mov
jnp
jb
int3
push
jo
add
adc
pusha
mov
cmpsb
mov
push
xor
dec
stos
int3
js
jo
lcall
or
sbb
cmp
lea
mov
nop
xchg
xchg
mov
mov
es
fiadds
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
jns
insb
mov
int
fdivrp
lret
loopne
pop
arpl
push
and
scas
xchg
inc
sub
dec
add
dec
push
xchg
adc
addl
jg
add
loopne
xchg
inc
ja
add
add
or
rolb
add
insl
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
and
add
aas
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
movsb
push
inc
cli
sti
cld
std
inc
add
imul
pushl
aas
aam
pusha
dec
fisubl
push
pop
outsl
ja
lahf
pop
int3
movsb
inc
cs
jae
jb
bound
mov
add
data16
ss
popa
mov
repnz
jne
daa
pop
lea
dec
mov
outsl
js
mov
outsl
bound
inc
push
mov
inc
popf
mov
gs
mov
dec
stos
aam
outsl
mov
daa
add
insb
in
dec
fcmovnu
iret
mov
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
daa
inc
mov
and
jmp
jns
mov
mov
lcall
aad
cmp
outsb
pushw
test
arpl
mov
push
pusha
jnp
jbe
inc
jbe
push
push
lahf
xor
jecxz
fs
and
push
mov
dec
fidivl
js
or
gs
rcll
and
lahf
outsb
and
xchg
push
stos
mov
pop
pop
pop
push
push
jae
jo
pop
in
cmp
cmp
mov
lods
and
movsl
jae
addr16
andl
gs
mov
data16
inc
pusha
xchg
out
das
push
push
push
push
dec
testl
dec
jo
xor
bound
fisttps
xor
mov
mov
pop
jg
adc
imul
lds
xchg
inc
enter
in
xchg
jg
ret
pop
sbb
in
pusha
lds
inc
aad
dec
pusha
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
int
sahf
negb
push
jl
cmp
cmp
sarl
push
sub
out
imul
add
sub
addr16
jbe
sub
sub
push
mov
inc
jmp
cmp
and
add
jb
ja
dec
pop
pop
cwtl
jb
sbb
xor
in
das
jo
ss
mov
push
cmp
test
and
mov
inc
jo
sub
mov
jl
lahf
fs
xor
ja
or
inc
add
clc
loopne
loopne
repz
aam
shlb
in
adc
fildl
in
test
fisubl
int3
icebp
push
xchg
nop
push
iret
repz
mov
int
sarl
pusha
jmp
insb
push
repz
xlat
insb
push
adc
fs
lock
push
in
or
pusha
clc
push
pop
pop
cs
out
notl
push
dec
push
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
adc
repz
out
hlt
sarb
jl
cmp
clc
repz
mov
cwtl
jo
iret
repz
inc
inc
cmp
add
sahf
out
lcall
xor
out
push
sub
in
rcrb
iret
repz
jo
sub
cmpsl
lds
or
ds
shrl
outsb
push
xor
sbb
jb
add
lods
lock
outsl
pop
cmpsb
bound
push
outsb
sti
insb
fs
sbb
je
out
out
or
mov
movsl
fisubs
shrd
sub
add
test
or
insb
cmp
inc
inc
dec
jae
xchg
sub
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
xchg
xchg
mov
and
inc
dec
add
dec
dec
inc
add
adc
jg
adc
sub
adc
out
addb
call
rclb
mov
testb
scas
xor
jnp
inc
loop
mov
ds
pop
adc
fpatan
psubb
or
cli
jb
xchg
jge
arpl
mov
add
pop
pop
dec
scas
jp
adc
fisubrs
jg
mov
and
cmp
dec
imul
incl
lret
add
inc
mov
mov
sub
sarb
sahf
fwait
ss
sbb
pop
jns
ds
xor
jg
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
idivl
cld
push
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lcall
dec
xchg
icebp
mov
cld
or
cmp
jle
inc
mov
xchg
push
pop
push
pop
jge
mov
ds
dec
je
lods
testb
inc
cwtl
push
xor
sbbb
or
icebp
pop
or
and
pop
repnz
adc
mov
and
es
mov
jle
add
push
and
or
call
cld
xchg
sub
mov
out
leave
ljmp
shrb
lahf
dec
test
push
push
inc
inc
or
outsb
jbe
inc
and
push
and
lock
pop
push
gs
sbb
jns
add
sbb
push
dec
lcall
push
into
mov
sbb
dec
xor
pop
push
pop
dec
out
out
aas
adc
pop
sub
dec
dec
pop
and
adc
pop
pop
ds
xor
sub
in
ljmp
add
pop
pop
dec
cmp
pop
dec
xor
dec
adc
sti
mov
pop
inc
jno
jb
jbe
pop
xor
xor
xor
jbe
notb
sbb
sbb
xor
fildll
pop
adc
pop
adc
push
pop
je
mov
pop
pop
aas
push
push
push
and
sbb
push
xor
mov
adc
dec
adc
pop
xor
dec
cld
pop
cmp
or
inc
jnp
sbb
xor
dec
aaa
pop
push
dec
cmp
cmpsb
out
sti
pop
push
or
jnp
and
dec
dec
and
sub
repnz
fildll
inc
inc
sbb
push
and
aaa
dec
sub
adc
sbb
and
and
andb
rolb
mov
inc
push
sbbb
mov
scas
mov
xor
pop
add
xor
sbb
es
pop
je
fwait
mov
push
adc
or
jle
add
pop
pop
xor
mov
cmp
pop
adc
in
ds
adc
sbb
sbb
inc
adc
pop
fidivs
cmp
mov
pop
pop
loopne
imul
fisttpll
pop
dec
int3
xor
xor
inc
jle
jg
sub
adc
xchg
lock
add
sub
push
fsubrl
cmp
push
push
jne
pop
push
mov
jb
push
sbb
and
gs
mov
and
or
sub
das
sbb
sub
or
dec
mov
or
xor
inc
or
push
dec
in
sub
aaa
pop
push
pop
or
adc
and
sub
mov
pop
pop
dec
pop
filds
mov
and
fs
adc
xchg
decl
dec
cwtl
in
push
cmp
andb
lcall
push
mov
out
iret
rol
nop
shl
inc
adc
pop
imul
xor
outsl
jg
repz
cmp
shlb
scas
push
push
xor
and
mov
negl
hlt
add
sub
cwtl
dec
mov
add
clc
data16
push
popa
push
and
cmpb
sub
push
popa
inc
mov
sub
add
imul
fs
outsl
icebp
cmp
sub
push
or
push
sahf
out
pop
jbe
push
and
nop
ja
out
mov
push
repz
jo
xorb
in
iret
inc
jo
es
push
fdivrp
mov
push
add
cmp
ds
shll
outsb
sbb
pop
dec
pushf
fdivl
push
pop
ds
pusha
pop
pop
xor
scas
xor
xor
sub
clc
fisubs
sbb
pop
add
loope
scas
push
pop
dec
js
inc
jbe
mov
std
into
aad
dec
pop
or
xor
inc
ss
sub
jp
lods
nop
adc
sub
push
repz
add
xor
adc
jae
add
push
jmp
mov
pop
arpl
sbb
mov
je
cmp
pop
inc
push
insb
push
or
pop
mov
inc
pop
pop
insb
pusha
cmp
fildll
rcll
pop
push
cmp
cmp
aaa
add
add
push
jp
pop
pop
sub
mov
in
out
mov
xor
cmp
cmp
inc
ja
ja
xchg
ss
cld
xor
pop
pop
xor
out
pop
xor
inc
jecxz
adc
jge
add
data16
imul
or
pop
lcall
cwtl
aas
scas
fildl
daa
push
pop
ret
push
mov
dec
inc
cmp
xor
or
adc
dec
adc
pop
ss
inc
add
push
lds
add
push
daa
add
cs
and
jmp
pushf
sahf
adc
pop
cltd
and
imul
push
adc
pop
or
ret
cmp
and
dec
cmp
xchg
stos
pop
pop
pop
and
out
mov
pop
add
push
jle
into
mov
scas
ds
pop
sbb
adc
inc
mov
outsl
xor
adc
mov
jno
jb
or
mov
subl
enter
pop
jbe
add
dec
ds
xor
or
andl
mov
imul
pop
add
int3
in
push
adc
mov
mov
imul
sub
jle
loop
jp
in
into
scas
daa
int
pop
push
push
loope
cli
push
dec
mov
add
pop
aas
sbb
cmp
xchg
ds
loopne
jmp
xor
xor
outsb
iret
pop
inc
movsb
lcall
es
xor
pop
dec
xchg
xlat
jg
pop
daa
xor
daa
pop
or
imul
add
pop
cld
pop
cmp
jmp
dec
dec
cld
push
adc
dec
ja
insb
jne
or
jbe
xchg
xor
imul
pushf
into
and
mov
push
jmp
fbld
adc
call
jnp
mov
cs
lds
mov
pop
add
idiv
adc
pop
inc
and
or
dec
sbb
sbb
xor
sbb
xchg
inc
daa
pop
add
fildl
lcall
mov
xor
adc
and
pop
pop
or
jge
scas
add
add
rorl
dec
pop
push
dec
pop
loopne
into
sub
pop
daa
adc
sub
and
lods
sbb
xor
sbb
imul
dec
addr16
add
inc
pop
mulps
inc
ss
sbb
sub
fwait
loopne
xlat
fbstp
sbb
das
push
add
sub
repz
std
xor
loope
jl
push
push
push
xor
adc
jecxz
inc
push
mov
popa
int
xor
jne
push
jl
sub
add
fiadds
das
add
add
mov
dec
pop
insl
lock
das
sbb
pop
aaa
and
leave
mov
push
dec
and
sbb
daa
xor
cmpsb
cmp
push
pop
dec
or
add
cs
divb
pop
mov
std
cmc
or
push
pop
mov
xor
das
ret
add
pusha
fwait
inc
cmp
dec
rcl
js
bound
cmp
icebp
ficoms
lea
jae
imul
dec
adc
bound
mov
dec
push
push
cmp
inc
mov
aas
mov
rcll
inc
xchg
decl
push
mov
mov
pop
bound
data16
outsb
pop
pop
push
push
je
imul
daa
and
jae
popa
dec
movsl
arpl
mov
je
aas
fmuls
bound
mov
cmp
sti
mov
cmp
js
add
cs
add
jae
push
mov
and
pop
sarb
jbe
aas
rclb
mov
ret
pop
mov
inc
test
pop
inc
rol
mov
test
ficompl
sub
icebp
outsl
call
imul
xor
push
sub
sub
pop
inc
sub
or
movsl
or
cmp
mov
mov
push
fcomps
or
cmp
cmpsb
pop
clc
je
orb
mov
xor
mov
aas
jbe
mov
inc
fidivl
mov
or
adc
pop
dec
sbb
xor
lcall
mov
loopne
xor
adc
mov
add
daa
and
jno
ds
fwait
add
cwtl
pop
adc
or
dec
xor
or
mov
ja
and
scas
sbb
iret
pop
ret
aas
xor
and
push
lcallw
or
daa
jne
adc
xchg
mov
fcoms
xchg
pop
xor
inc
ds
adc
add
or
jo
pop
add
inc
cmp
push
adc
add
cmp
nop
lahf
je
push
or
adc
sub
dec
sbb
sub
sub
int3
sub
sub
push
cmp
jno
xor
out
push
idivl
dec
adcb
repz
sahf
in
std
xlat
mov
and
sti
daa
push
add
lods
fmulp
push
lods
mov
inc
das
addr16
out
adc
in
adc
fs
adc
outsb
push
nopl
jl
adcl
or
sbb
sti
xor
push
sbb
outsl
bnd
mov
pop
pop
out
inc
test
inc
pusha
cmpsb
sbb
add
test
and
cmpsl
and
rorb
add
sub
push
ss
js
out
sti
pop
and
jl
xor
jg
pop
lock
xor
xlat
push
add
pop
outsl
and
repnz
ja
adc
pop
fistl
vmread
sbb
jl
popf
or
add
and
xor
cmpsb
adc
pop
mov
sub
adc
aam
jb
mov
movq
adc
jnp
jmp
inc
jnp
stos
inc
daa
xchg
cmovl
add
subps
lea
dec
sub
dec
dec
inc
adc
sahf
xchg
sub
cmp
ret
bound
xor
insb
or
int
aaa
insl
les
iret
ds
fidivs
mov
adc
mov
cli
sbb
out
sbb
iret
pop
jno
sub
and
or
scas
pushf
xor
push
dec
dec
dec
notb
push
pshufw
push
sub
adc
pop
sub
cltd
push
repnz
add
insb
mov
or
js
xor
push
jns
xchg
cmp
lahf
test
in
xchg
pop
or
push
out
cmc
es
dec
adc
or
adc
es
and
and
ja
add
cs
or
dec
dec
and
fistps
and
dec
cs
and
es
adc
imul
loope
in
push
fmuls
stos
jne
push
scas
loop
sbb
or
cmpsb
sbb
movq
hlt
lds
fistps
inc
jns
in
ret
pop
inc
cmp
and
pop
xor
outsl
sti
and
adc
push
and
into
inc
cmp
sbbl
sti
adc
out
pop
push
lods
cs
jae
sbb
negl
mov
lea
pop
addl
pop
ret
subl
jnp
adc
adc
push
pop
sub
ds
nopl
and
test
sbb
rcr
sbb
mov
sub
pop
mov
movsl
add
cmpl
or
and
sbb
mov
sbb
and
sbb
inc
mov
cmp
push
arpl
jns
cmp
and
rcrl
in
orl
sub
add
out
inc
mov
xor
push
adc
push
repz
pusha
mov
aaa
dec
cmp
xorl
cwtl
adc
xchg
push
test
and
pop
je
dec
mov
lods
pop
pushf
or
loop
call
ds
cmp
dec
and
inc
add
nop
xorl
insl
rorb
or
scas
std
cmpsl
add
cmp
xor
inc
sbb
ret
nop
xchg
mov
mov
fcomps
dec
jne
fwait
push
aas
pop
pop
dec
push
in
into
adc
cmp
aaa
pop
cmp
add
js
push
sub
push
sbb
and
push
shlb
sbb
sbb
or
addr16
push
adc
xchg
pop
pop
sbb
pop
cmp
arpl
in
cmp
inc
sbb
xchg
xor
dec
xor
out
sbb
push
sub
dec
xor
xor
movb
cmp
sbb
push
notl
push
icebp
scas
fistl
sub
mov
xchg
add
sub
aaa
popa
ljmp
ds
insb
mov
data16
ja
fs
push
inc
pcmpgtw
outsl
jb
jp
pop
addb
bound
add
and
adc
hlt
and
xor
add
cmc
jne
pop
in
pop
inc
jb
pop
mov
stos
lahf
out
sub
push
mov
mov
lret
out
insb
push
and
push
and
loopne
iret
int
mov
ss
adc
xor
rcr
pusha
repz
es
push
jo
in
cmp
loope
push
icebp
push
inc
out
push
mov
jns
inc
testb
rolb
dec
push
dec
dec
insl
outsb
aaa
pop
add
das
shlb
mov
mov
fistps
push
lcall
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
or
out
pushl
ss
adc
cli
mov
loop
sub
sub
das
in
decl
mov
ds
pop
sbb
test
nop
jle
jo
jg
cmp
cs
pop
sbb
mov
sbb
dec
pop
dec
xchg
pop
shl
dec
push
pop
adc
mov
pop
push
xor
and
xor
aaa
xor
dec
cmp
inc
jl
xor
cmp
test
inc
pop
push
ret
rcr
add
inc
jb
sub
adc
imul
jns
sahf
imul
sub
xchg
dec
cmp
test
sahf
xchg
out
xor
xor
repz
jns
or
add
jae
dec
dec
call
add
enter
insb
inc
js
jae
in
scas
cmp
dec
pop
add
lahf
push
or
xchg
push
int3
repnz
cs
in
and
pop
sbb
push
dec
leave
jnp
cmp
std
pushl
xor
sub
sub
xor
inc
xor
inc
subb
xor
push
aad
jne
cmp
insb
push
outsb
add
sbb
add
cli
mov
movsl
das
js
add
and
not
sub
ss
out
jns
cmpsl
lcall
jb
pop
xor
jo
dec
jne
cmp
lock
jmp
outsb
imul
adc
sub
xor
mov
iret
and
xlat
addr16
fcomps
xor
dec
mov
arpl
mov
sbb
rcrb
push
cmp
out
dec
pop
mov
mov
out
xchg
sahf
add
rolb
mov
orb
daa
sbb
push
or
cld
mov
cli
ss
or
push
sub
push
pop
xor
test
xchg
or
pavgb
jl
pop
jbe
dec
or
pop
stos
ss
outsb
in
pop
sahf
pop
add
dec
and
inc
adc
add
jns
clc
inc
sbb
or
xor
aas
sub
addr16
or
mov
rorb
nop
or
loopne
inc
scas
xor
das
dec
mov
mov
inc
stos
xor
repz
dec
and
pushf
out
add
mov
cs
outsb
inc
add
pop
dec
inc
jl
cmpsl
fxch
fisubrs
push
outsb
pop
or
sbb
sti
mov
outsl
push
pop
xchg
jno
addr16
cmpsl
jge
subl
sbb
push
xchg
jno
cmp
mov
pusha
jno
mov
dec
push
xchg
xlat
push
pop
test
mov
lcall
dec
popa
and
xor
lods
inc
inc
or
pop
mov
mov
pop
cmpsb
push
gs
cmp
mov
sysret
jmp
repz
adc
fidivrl
das
pop
pop
test
enter
jnp
es
cmpsl
and
adc
dec
mov
pop
jge
imul
cmpsb
mov
mov
ss
popa
sub
shll
mov
in
sbb
sbb
sarl
icebp
and
cmp
loop
nop
pop
fwait
inc
dec
insl
inc
cmp
fnstcw
push
sub
jnp
jl
fsubrp
jns
int
push
sbb
addl
out
iret
jnp
push
movb
push
sbb
jge
xchg
cmp
xor
lahf
out
fisubs
ja
mov
mov
js
xor
sub
pop
inc
push
mov
div
ret
inc
insl
xchg
push
pop
push
fisttps
sbb
neg
rorl
jge
lods
cs
pop
xor
cmpsl
stc
cmp
adc
jne
push
pop
lahf
neg
rcrl
or
aaa
es
pushl
insb
mov
jae
push
das
outsb
cmpsl
xor
sti
mov
inc
scas
pop
ds
repz
add
aaa
and
cmp
imul
dec
repz
iret
repnz
and
and
cmpsb
and
lock
and
stc
sahf
out
pop
pop
test
mov
out
and
dec
repz
cltd
mov
pop
sahf
cmpsl
stc
cmp
jl
movsb
int3
fdivrs
repz
movaps
inc
jl
mov
ljmp
inc
mov
aad
pop
dec
sbb
scas
sub
pop
imulb
adc
stc
inc
cld
sti
add
adc
adc
push
mov
xor
adc
cs
add
mov
scas
int
mov
fstps
ds
loop
and
push
pop
mov
das
jbe
lahf
add
idivb
jg
dec
mov
and
pop
sbb
enter
jg
cmp
adc
or
adc
cld
pusha
or
add
mov
in
add
xor
mov
lock
add
outsb
push
outsb
fbld
and
inc
out
mov
push
dec
frstor
fbld
xchg
out
inc
sbb
inc
imul
cmp
sbb
dec
fisubl
pop
jb
sbb
and
mov
jae
dec
cmp
dec
mov
out
imul
insl
pop
fcmovb
inc
or
push
stos
xor
insb
pop
cmpb
dec
pop
je
jns
mov
fisttps
jp
das
ja
outsl
mov
xchg
outsb
push
fnstsw
fadds
push
pop
shlw
dec
or
push
dec
mov
ja
test
ret
push
push
jo
dec
inc
cmpb
ja
push
xchg
dec
cmp
push
jge
out
or
lcall
popa
insl
jo
fisttps
in
pop
insb
je
push
addr16
jo
jae
es
idivb
es
cmpb
sub
mov
push
cmpsb
mov
lcall
xor
xor
xor
xor
xor
cmp
int
frstor
cmp
push
xor
xor
cmp
push
ss
pop
adc
and
sbb
fsubrl
or
push
cmp
add
xor
mov
cmp
dec
add
scas
das
xlat
adc
pop
das
inc
sub
das
xchg
das
push
das
cmc
es
pop
xor
and
mov
dec
das
dec
xor
mov
dec
pop
inc
lahf
mov
cmp
or
dec
dec
das
data16
dec
or
add
pop
out
cmp
stos
cmp
cmp
or
xor
enter
adc
aas
or
test
js
jbe
xor
cli
dec
xor
cmp
popa
xchg
ret
dec
adc
jl
fsts
and
and
push
cmp
dec
sbbl
pop
popa
pop
fcoms
sub
clc
dec
dec
sub
js
mov
pop
or
into
clc
push
cs
push
cmp
mov
subl
push
pop
bound
xor
sti
pop
xchg
movsb
das
sub
adc
cmp
dec
sbb
daa
out
sbb
and
daa
push
ret
mov
rcl
inc
and
jnp
xor
and
and
ds
pop
mov
stos
daa
xor
jo
imul
iret
sbb
mov
insl
aaa
lahf
ficompl
add
scas
ljmp
xor
daa
mov
jo
rcrb
xchg
sbb
push
or
adc
push
les
das
imull
rclb
aaa
iret
mov
add
mov
pop
ret
daa
push
mov
movsb
imul
popa
daa
pop
fiadds
das
and
adc
dec
pop
rorl
pop
push
sub
pop
push
adc
repnz
pop
cmp
or
mov
or
mov
or
xor
mov
pop
scas
pop
cltd
add
lahf
pop
xchg
adc
sbbb
popl
or
xor
pop
stos
adc
sbbb
pop
insb
movsl
outsl
bound
pop
add
mov
adc
and
mov
inc
imul
add
outsl
adc
andl
add
and
xchg
pop
add
xor
jmp
jl
jl
jo
mov
pop
bound
add
or
mov
sbb
pop
cmpb
outsb
js
xchg
adc
clc
pop
popa
cwtl
enter
aad
mov
add
inc
dec
mov
adc
in
dec
dec
add
pop
aas
in
push
push
jno
loop
repnz
incl
jo
das
das
scas
mov
sbb
push
sbb
or
push
ds
or
test
mov
pusha
fstpl
cwtl
add
pop
fdiv
adc
or
fmull
jp
adc
mov
mov
xchg
cmp
add
pop
jb
sbb
pop
pop
dec
jns
adcl
xchg
sbb
inc
jbe
push
insb
jl
pop
test
xor
scas
push
pop
adc
orb
je
pop
push
push
sub
add
dec
test
call
ret
orl
dec
pop
add
mov
add
sub
xchg
inc
xchg
xchg
lret
and
sbb
lock
enter
xor
das
sbbl
add
add
xor
aas
lcall
gs
mov
rcr
mov
xor
cwtl
cmp
adc
mov
fsts
cmp
xorb
loop
push
sbb
sarb
or
push
cmp
ret
inc
pop
adc
push
mov
xor
mov
add
add
and
or
mov
mov
sub
mov
sbbb
pop
xor
adc
fcoms
dec
fs
xor
in
shll
add
call
adc
xor
inc
lcall
fisubl
inc
cmp
mov
cmp
add
or
insb
daa
hlt
sub
sbb
mov
pop
es
das
pop
bound
pop
add
loope
cmp
xchg
js
push
pop
inc
jle
dec
mov
pop
pop
pop
or
call
pop
or
and
push
or
inc
out
xor
mull
das
cmp
pop
jecxz
in
push
adc
out
das
push
les
dec
call
rcrl
cmp
adc
xchg
sub
fwait
sbb
and
mov
push
add
pop
daa
mov
out
push
push
inc
sub
adc
pop
push
lahf
and
cmp
out
cs
sub
and
or
cltd
jbe
fmuls
xchg
dec
mov
mov
rorb
sbb
or
enter
test
bound
cmc
inc
rorb
jo
inc
call
in
add
push
insb
jbe
fs
xor
pop
loopne
pop
outsb
add
pop
inc
jae
outsl
xorb
or
loopne
insl
pop
push
adc
test
pop
dec
fimull
pop
dec
add
sub
lcall
decb
inc
inc
pop
and
sub
pop
pop
push
adc
adc
dec
loope
xchg
inc
adc
inc
inc
ds
adc
sub
lcall
sub
inc
adc
pop
dec
es
push
pop
adc
inc
or
adcb
adc
or
push
inc
and
xor
incl
pop
cmpsb
and
out
push
or
or
pop
ss
sbb
pop
mov
sbb
or
or
push
inc
sub
add
pop
or
cmpsb
inc
pop
adc
push
dec
sub
lcall
xor
add
dec
inc
push
out
add
add
sbb
push
cs
inc
or
ss
xor
inc
or
cltd
add
cmp
cmp
add
and
push
dec
mov
ret
rolb
pop
push
incl
cmpsl
or
inc
das
inc
or
dec
xor
dec
add
roll
and
or
pop
pop
sbb
loop
push
push
adc
adc
mov
lock
cmp
pop
xor
es
pop
fisubrl
sbb
push
sub
fwait
mov
outsl
inc
mov
inc
mov
movb
pop
xor
aad
mov
sbb
dec
add
mov
sbb
lahf
adc
jmp
sub
cwtl
add
inc
push
dec
or
dec
push
dec
filds
pusha
add
or
outsl
and
inc
sub
inc
xchg
inc
aaa
cli
pushl
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
decl
sahf
adc
jge
push
je
mov
adc
incl
je
fwait
rol
fwait
in
inc
mov
ud0
pushl
and
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
incl
mov
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
ljmp
push
jae
gs
leave
ret
sub
xchg
mov
data16
decl
mov
call
cltd
test
push
push
shll
ja
decl
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
jmp
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
ljmp
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
outsb
push
jns
shlb
and
bound
dec
xor
ljmp
shrb
cs
sub
and
pop
ja
sub
jp
pop
aad
inc
and
pop
jae
pop
sub
sub
jmp
js
jb
inc
xor
or
push
inc
mov
rolb
call
pop
das
push
es
jne
je
imul
push
push
push
dec
push
das
push
xor
inc
daa
sub
fadds
stc
inc
rcrb
inc
or
and
push
ja
in
mov
aas
dec
aaa
imul
mov
pop
daa
sbb
ss
jg
lods
out
sub
and
mov
cli
fildll
xor
sbb
in
cmp
aaa
push
xor
inc
add
xor
xor
xor
xor
xlat
pop
inc
xor
and
aaa
inc
push
inc
cs
fstps
pop
inc
ss
cmovb
pop
bound
lahf
ss
test
lods
and
test
mov
into
iret
lahf
xchg
ret
pop
jo
and
pop
xor
test
xor
xchg
inc
enter
jbe
adc
bound
add
inc
push
xchg
in
jo
int
pop
dec
jae
lea
xchg
rol
cwtl
pop
xor
ret
mov
pop
xor
into
lea
jle
sar
xorb
pop
pop
or
xorb
mov
xor
xchg
push
movsb
add
dec
xor
sub
aad
or
adc
xor
xor
dec
push
outsl
inc
cmpsl
and
insl
and
mov
dec
push
pop
push
pop
push
ret
pop
sbb
sahf
out
insb
and
sbb
sbb
xchg
sbb
fadd
ss
into
lods
loop
sub
clc
inc
mov
mov
xorb
outsl
and
pop
sbb
adc
dec
popa
cmp
scas
idivb
push
fadds
jnp
cmp
jmp
addb
and
mov
sbb
xchg
mov
andb
add
pop
leave
mov
addr16
xor
xchg
in
pop
test
out
cmp
jae
scas
pop
add
std
in
mov
fs
pop
adc
in
shll
inc
icebp
icebp
sbb
sub
mov
adc
sahf
and
add
sbb
or
test
lds
or
xor
mov
test
push
or
add
enter
jg
outsb
je
xor
js
cmpsb
xor
push
pop
or
jbe
gs
cmp
add
mov
shlb
push
fisubs
adc
push
lahf
arpl
push
mov
pushl
insl
loop
inc
int
les
mov
mov
inc
outsl
insb
dec
push
popa
je
pop
add
popf
insl
ja
jecxz
pop
ss
or
or
lock
xchg
or
add
or
pop
push
gs
mov
pop
xor
rorb
mov
ds
sub
int
aas
sub
lods
mov
or
pushf
lret
adc
sub
sub
add
inc
sbb
sbb
pusha
mov
xor
cs
push
insb
cmpsb
cs
mov
cmp
cmc
dec
ret
data16
dec
and
jno
ds
sbb
lret
inc
jecxz
fsubs
shl
loopne
or
ss
rclb
sub
scas
and
inc
or
lcall
sub
rorb
fs
mov
and
pop
push
popa
jb
pop
repz
mov
pop
inc
jne
mov
mov
xor
push
enter
cmp
sbb
shll
push
xlat
sub
jp
or
or
mov
mov
orb
add
sbb
repz
inc
pop
adc
and
push
adc
call
rcrl
sbb
dec
sub
ficomps
hlt
cmpsl
fs
dec
xchg
jo
mov
inc
stos
push
outsl
imul
xchg
push
push
inc
aaa
or
push
sub
mov
adc
dec
das
aaa
push
aas
hlt
mulb
hlt
lods
and
and
or
arpl
push
push
ds
add
mov
ds
and
inc
push
and
mov
dec
call
adc
gs
rolb
jnp
mov
pop
push
jnp
add
mov
lea
out
push
dec
hlt
pushf
pop
daa
sahf
ficomps
sub
push
imul
or
mov
jg
sbb
ja
dec
add
int3
add
scas
pop
dec
push
outsb
insl
cmpsl
sub
lock
lds
je
addr16
push
xor
xor
mov
xor
sbb
xchg
adc
out
imul
orl
pop
lock
pop
lds
out
pop
pop
xor
fwait
pop
sub
dec
sub
mov
sbb
mov
mov
dec
pop
movsl
mov
dec
insl
outsl
pop
repz
cs
adc
insb
daa
jnp
test
test
rcrl
movsb
test
jno
xor
pop
std
mov
and
xor
push
sub
cmpsl
pop
inc
and
or
jo,pn
das
or
pop
mov
push
into
add
sub
inc
dec
mov
add
or
inc
and
inc
add
adc
in
or
add
cmp
add
fstl
dec
pop
aaa
jns
jne
xchg
add
adc
fs
sar
movsl
neg
dec
and
addr16
popa
pop
pop
xor
push
dec
outsl
popa
mov
cmp
inc
push
jle
inc
cmpsb
punpckhwd
ss
movsl
dec
outsb
push
je
scas
or
mov
pop
mov
push
cmp
arpl
inc
dec
inc
sahf
jne
lcall
dec
inc
dec
inc
push
pop
cmp
jb
gs
mov
inc
xchg
adc
and
fwait
pop
daa
cmp
roll
pop
mov
ret
aas
dec
pop
les
test
lcall
add
clc
lods
and
maxps
adc
sbbl
lret
nop
push
and
orl
ret
jb
in
popf
add
push
cmpsb
xchg
orb
jae
jbe
pop
xor
loop
insl
jno
jae
ficoms
call
data16
cmp
rcrb
into
adc
push
push
cltd
mov
add
dec
lcall
les
mov
cwtl
ja
sbb
aaa
pop
cmp
adc
jno
adc
loop
push
add
xor
push
or
and
cmp
rorb
sbb
jmp
pop
mov
cmp
mov
arpl
dec
add
push
cmp
nop
aaa
xor
inc
xor
and
inc
mov
test
pop
notl
enter
pop
and
adc
sub
fsubs
aaa
jne
pop
pop
and
or
lods
jno
sarb
or
icebp
add
mov
sbb
ficompl
arpl
or
pop
and
imul
adc
inc
outsb
test
jp
xor
pop
cmp
or
xchg
mov
rcrb
inc
loopne
mov
scas
push
icebp
or
fiaddl
xchg
or
xlat
sbb
or
imul
mov
sahf
ja
push
pop
sbb
jns
xor
mov
roll
add
or
int
repz
insb
ss
push
add
or
adc
outsl
mov
adc
sbb
and
sub
xor
cmp
mov
mov
mov
insb
add
sbb
data16
ret
sub
add
or
xor
add
and
add
popw
adc
push
push
dec
verr
fldcw
add
aad
jg
stc
das
incl
and
push
push
das
xor
xor
dec
xlat
sbb
add
es
insb
clc
pop
sbb
leave
js
sub
in
mov
sub
inc
add
incb
dec
outsl
insl
pop
xor
dec
or
or
fidivs
das
push
mov
push
inc
dec
fsubl
out
dec
dec
inc
mov
data16
ds
or
push
arpl
add
push
fs
mov
insb
push
imul
dec
ljmp
fdecstp
std
and
ja
lcall
push
enter
jbe
int
dec
fcmovu
mov
sti
or
orb
xadd
ja
xchg
sbb
inc
mov
lret
arpl
out
push
lock
cmp
cmp
or
rorb
pop
inc
dec
add
lock
push
mov
mov
add
nop
fildl
lock
xor
add
out
int
xor
aas
add
rep
ffree
test
addr16
movsb
repnz
add
push
clc
xchg
adc
lods
pop
leave
xor
daa
adcb
xor
ds
jnp
add
daa
test
fiadds
mov
inc
daa
outsl
leave
jae
fists
mov
inc
add
mov
outsl
pop
leave
lods
stc
mov
inc
xchg
pop
leave
xchg
inc
cmp
xchg
pop
leave
xor
sub
leave
xchg
pop
sub
or
xchg
add
daa
loopne
cmp
mov
out
aaa
push
mov
xchg
js
fucom
repz
inc
adc
push
dec
out
cmp
movsb
mov
cmp
and
cmp
mov
repz
push
jns
inc
cmp
mov
mov
inc
in
cmp
push
out
ds
mov
mov
out
lahf
push
or
mov
es
push
adc
xchg
or
out
xchg
les
push
ds
test
fmuls
cmp
sub
pop
cmp
add
iret
xchg
sbb
or
ret
mov
fdivs
pop
arpl
jnp
add
inc
mov
adc
mov
add
sub
dec
scas
jbe
ja
pop
xor
jne
insb
ja
add
dec
mov
in
dec
dec
outsl
fmull
pop
enter
or
adc
adc
das
sbb
and
dec
or
leave
mov
add
inc
cs
or
inc
js
xchg
out
mov
fistpll
sub
testb
cmp
ss
add
inc
icebp
dec
add
dec
adc
pop
cmp
mov
pop
cmp
pop
push
outsl
out
adcb
nop
xchg
sub
jb
lods
xor
mov
addr16
pop
pop
in
pop
scas
sbb
sbb
ljmp
and
in
dec
xchg
xor
xor
cmp
leave
mov
fs
rolb
sub
fwait
push
cmp
sarb
xor
subb
mov
cmp
sub
lahf
out
movsb
cmp
sbb
nop
jg
sbb
stos
or
jg
sub
add
jns
and
ds
sarb
fildll
push
xor
and
shl
outsb
outsl
and
nop
or
popa
and
and
and
push
loopne
sub
or
and
xchg
add
icebp
push
aas
daa
add
int
add
cmpsl
adc
push
pop
pusha
xor
xchg
push
int3
inc
or
insl
outsl
fdivr
fcompl
in
add
out
dec
mov
cmpsb
pusha
jnp
movl
pop
clc
xor
out
push
push
inc
push
pusha
inc
loopne
inc
imul
test
mov
mov
jl
into
mov
sub
xchg
leave
pop
enter
sbb
dec
enter
or
adc
cmp
divl
or
nop
inc
dec
inc
outsl
push
push
sub
ret
push
jg
or
add
xchg
daa
negl
cs
jl
push
faddl
inc
jbe
clc
xor
cmp
mov
ja
test
push
scas
pop
clc
mov
daa
cwtl
pop
or
pop
push
inc
sbb
lahf
xlat
or
cwtl
inc
mov
stos
cmp
add
push
les
adcb
mov
pop
mov
lds
and
pop
xor
mov
testl
and
add
cmp
sbb
add
call
scas
call
xchg
or
sbb
mov
adc
cmpsb
aaa
sub
push
dec
sub
add
fs
sub
add
add
in
call
mov
or
outsl
xchg
pop
mov
dec
in
cld
jg
sub
pop
add
mov
add
xchg
push
pop
jb
daa
add
lods
pop
leave
test
add
push
enter
sub
inc
push
and
leave
mov
jbe
outsl
add
ss
pop
adc
jecxz
mov
inc
pop
addb
enter
mov
xchg
inc
aaa
add
rcl
aaa
int3
xchg
xchg
pop
in
cmp
add
push
xchg
adc
xlat
add
pusha
and
ret
add
dec
out
movsb
jb
push
mov
add
add
mov
sahf
cmpsl
jge
sub
push
fmull
dec
xor
iret
sarl
movsb
push
xor
in
movsl
cmpsl
and
mov
xor
cmpsl
jae
xchg
sub
or
or
insb
dec
jl
mov
outsl
add
or
fists
in
clc
mov
xchg
pop
and
add
cmpsb
mov
ret
roll
scas
xchg
scas
add
rorl
outsl
adc
jbe
pop
leave
add
or
inc
xchg
add
and
inc
and
mov
or
ss
nop
add
dec
pmulhuw
rcrl
push
adc
in
add
addr16
dec
sahf
jl
xlat
mov
insb
pop
in
in
sub
inc
dec
iret
sahf
data16
push
push
push
sub
dec
mov
fidivrs
add
inc
orb
rcl
nop
dec
ja
inc
hlt
fstp
mov
movsb
adc
xchg
hlt
fsubrl
mov
data16
xlat
data16
bound
dec
pop
dec
push
jo
push
arpl
sbb
pop
mov
js
mov
cli
inc
push
orb
cld
data16
fs
add
dec
dec
int
jns
cmpb
ds
repz
mov
jns
out
cmp
repz
out
cld
pop
dec
inc
jo
jns
iret
cld
pop
dec
xor
xor
ja
lret
scas
push
mov
push
daa
stc
cmp
repz
shl
adc
jns
cmpsl
dec
arpl
cmp
pop
push
pop
andl
test
lcall
push
push
inc
jge
out
pop
js
lret
sub
out
fidivs
cwtl
mov
cs
push
mov
mov
push
cmpsl
stc
cmp
mov
dec
repz
subb
repz
pop
dec
push
pop
test
jns
out
pop
mov
cmp
out
push
xor
xor
out
out
insb
pusha
scas
sub
cmpsl
stc
out
repz
cwtl
bound
mov
imul
iret
repz
repz
mov
rcll
jl
addr16
jge
test
out
int
imul
adc
sahf
out
cmp
ret
cltd
fnstsw
sarl
cmp
ss
cmpsl
stc
adc
addr16
outsb
or
int
imul
jno
imul
add
mov
ljmp
je
idivl
sbb
xchg
jne
push
adc
sahf
out
mov
ja
jmp
js
cmp
roll
stos
call
out
mov
fadds
loop
ds
sbb
mov
cmp
out
sbb
cmpsl
loop
jl
out
jg
in
sub
iret
into
add
repz
in
xor
xchg
test
jl
ja
push
push
repz
out
xchg
and
jns
out
mov
mov
int
mov
popa
mov
stc
sbb
dec
ficoms
mov
idivb
pop
xchg
mov
nop
jl
iret
repz
js
inc
xchg
mov
xchg
ja
cmpsl
fldcw
xchg
sbb
cwtl
fiadds
jl
ja
mov
cltd
pushw
pushf
jmp
out
clc
sbb
mov
out
rcll
outsl
mov
repz
mov
ja
dec
mov
mov
imul
out
insb
sub
test
insb
mov
lret
stos
push
lods
lods
scas
lds
jecxz
jae
jne
mov
out
or
inc
jmp
dec
inc
push
mov
into
cwtl
push
dec
mov
add
dec
mulb
jns
push
add
aas
dec
mov
inc
dec
clc
addr16
leave
repz
jb
jp
sub
dec
es
push
stos
mov
push
addr16
pop
paddq
inc
jnp
pop
mov
inc
aas
or
adc
inc
shrb
int3
add
fisubs
ljmp
dec
and
xchg
repnz
mov
or
or
add
mov
mov
cs
fcmove
mov
hlt
shlb
in
mov
enter
das
cmp
mov
adc
jns
pop
dec
pop
outsl
adc
lock
and
aas
int3
in
inc
repnz
push
push
push
aas
mov
pop
inc
pop
pop
fmuls
outsb
xchg
pop
adc
push
fildll
cmp
inc
addb
aas
xchg
sbbb
adc
aaa
nop
aas
lods
scas
mov
mov
push
iret
rcr
or
mov
ss
mov
cltd
mov
rcl
aas
push
enter
fcmove
enter
mov
mov
in
fimuls
push
push
xor
cmp
mov
lcall
iret
inc
mov
jno
pop
xlat
aaa
pop
mov
popl
push
daa
lods
icebp
stc
mov
inc
ffreep
lret
nop
aas
rorl
inc
add
shll
cmpsl
jp
ds
lret
lahf
pop
push
push
push
test
xchg
pop
jecxz
ret
mov
or
mov
hlt
jnp
push
aas
cld
and
test
mov
aas
int3
push
mov
in
and
iret
mov
jb
popf
dec
xchg
xor
and
push
inc
xlat
fimuls
movsb
adc
pop
call
lret
iret
les
and
inc
add
mov
sbb
jns
cmp
inc
dec
inc
pop
xchg
xchg
and
xor
push
pop
scas
dec
mov
sbbl
mov
xchg
mov
sub
cmpsb
push
push
out
cmp
and
stc
inc
adc
add
pop
inc
test
and
jg
mov
ret
pop
pop
dec
jl
mov
push
cmpsl
push
add
iret
repz
add
in
and
in
in
notl
xor
sbb
loop
and
mov
mov
pop
mov
mov
jbe
adc
lock
leave
and
nop
mov
pop
lcall
je
fs
dec
push
mov
inc
or
mov
pushf
in
mov
adc
jb
inc
mov
inc
push
enter
inc
mov
add
cmp
jns
mov
jb
sub
pushf
mov
adcb
add
add
cmp
adc
divl
xchg
cli
inc
xchg
aaa
jb
inc
jo
pusha
pop
cmpb
mov
dec
out
fmulp
mov
mov
sahf
out
sahf
ret
push
fadds
out
out
jecxz
out
xchg
or
ljmp
frstor
push
daa
dec
scas
xchg
sbb
add
sbb
daa
movsb
dec
dec
inc
adc
push
fcoml
adc
dec
push
jnp
adc
insl
in
outsl
mov
dec
mov
iret
add
in
enter
cmc
std
dec
popl
in
adc
push
xorb
enter
ds
inc
dec
dec
dec
inc
jb
leave
push
pop
aam
leave
leave
leave
orl
sub
mov
aam
fcompl
in
cmp
fucomi
in
cmpsl
hlt
pop
cld
mov
jl
test
fcoms
mov
pop
dec
add
pop
push
mov
out
ss
push
outsl
xchg
add
mov
es
push
push
push
leave
pop
or
jl
inc
mov
leave
lret
inc
jl
pushf
jmp
cmp
push
push
mov
in
add
bound
leave
or
bound
push
arpl
faddl
addr16
popa
mov
adc
ja
pusha
arpl
sahf
mov
pop
lods
sbbl
pop
xor
movsb
push
jbe
adc
out
lret
dec
sahf
inc
inc
pop
inc
fs
inc
dec
dec
fs
xchg
daa
cli
into
leave
out
mull
push
dec
pop
push
inc
jb
and
push
lods
fs
in
cmp
xchg
inc
push
dec
push
push
xchg
inc
repnz
ds
divl
je
leave
sub
push
daa
pop
dec
jb
loope
pushf
push
xchg
gs
pushf
dec
rclb
fcoms
in
in
push
out
push
stc
push
add
fsubp
in
rcpps
push
and
jns
out
cmp
inc
or
jns
out
pop
or
jns
jb
jge
mov
jns
out
xchg
adc
sahf
out
mov
out
sahf
aad
jecxz
icebp
sbb
add
cmpsl
push
negl
rorb
dec
mov
in
push
call
repnz
les
repz
mov
int3
inc
push
int
jno
push
add
push
and
mov
daa
js
inc
push
leave
or
hlt
push
cmp
cmp
addr16
push
pop
push
repnz
add
push
add
mov
jo
inc
in
push
add
fildll
pop
push
in
inc
jb
push
in
orb
shlb
aaa
pop
and
pop
cmp
push
insb
ja
imul
xchg
sbb
push
inc
imul
insb
test
cmp
daa
xchg
scas
mov
sub
int3
in
mov
fwait
and
xchg
out
xchg
rclb
cmp
fisubrs
lock
push
jb
pushf
sbb
push
xchg
push
pop
leave
xor
and
pop
test
and
push
add
nop
stc
addb
imul
inc
jns
enter
cmp
imul
lock
push
pop
iret
dec
sahf
xchg
add
leave
add
mov
cmp
add
rcr
into
lock
pop
out
pop
push
pop
push
aaa
jb
mov
repnz
aaa
pushl
insb
pop
clc
inc
xchg
sbb
loope
jg
mov
mov
scas
cwtl
sub
pop
push
shrb
dec
scas
push
cld
aad
insl
xchg
dec
dec
and
pop
push
fwait
in
das
push
pop
mov
pop
cmpb
mov
jns
test
fs
insl
insl
outsb
cmp
pop
cmp
pop
inc
cmp
mov
push
pop
add
js
inc
pop
aas
dec
pop
dec
dec
fisubl
push
aam
xchg
test
inc
nop
xchg
xchg
outsl
or
outsl
and
pextrw
pop
pusha
outsl
lret
lret
lret
lret
repnz
std
pop
or
pop
mov
pop
xchg
add
mov
jl
je
das
mov
popf
out
movsl
add
lea
jo
inc
push
rcrb
out
lods
mov
jo
jl
adc
jo
test
and
iret
sub
inc
jb
pop
inc
pop
mov
jno
iret
insl
in
pop
jge
add
cmp
pop
add
test
scas
in
in
mov
mov
pop
in
in
rcrb
loopne
call
in
pop
clc
pop
add
pop
in
in
adc
pop
and
pop
pushf
pushf
je
xor
pi2fd
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
push
add
add
add
bnd
pushf
add
and
outsb
mov
inc
push
addr16
xchg
js
pusha
mov
movl
push
test
or
xchg
push
add
and
in
enter
pop
ja
and
popf
pop
xor
mov
vmwrite
jae
mov
xlat
movsb
pop
xchg
lods
mov
enter
pop
mov
out
jns
push
aam
or
pop
fcmovne
in
in
decl
sub
repnz
pop
push
into
inc
jb
das
rclb
xchg
xor
cvtps2pd
bound
ja
lods
cmp
test
lea
add
fstl
lahf
push
xcrypt-ecb
cmpsl
leave
mov
dec
or
xlat
into
jae
jae
mov
ja
movntq
push
cmovle
add
loope
inc
iret
stos
push
inc
mov
out
std
push
aas
sub
push
inc
pop
push
pop
pop
mov
inc
pop
or
jle
jne
adc
cmp
jbe
dec
jb
or
or
adc
pusha
jns
sahf
aaa
and
add
cmp
inc
push
dec
push
pusha
dec
and
loopne
pusha
leave
leave
in
xchg
xchg
lahf
mov
xchg
add
cmp
jmp
popa
push
addr16
dec
add
lahf
adc
sbb
mov
or
ja
jns
mov
jl
inc
dec
lock
popa
xchg
popa
sahf
in
in
xchg
popa
test
mov
in
pop
mov
clc
in
xchg
daa
add
bound
bound
aaa
jb
bound
push
push
cmp
out
sahf
out
or
pop
sahf
out
sahf
or
jno
jl
xchg
sbb
bound
or
sahf
xchg
dec
data16
add
repnz
add
arpl
js
push
arpl
insl
in
imul
psllq
mov
pop
xchg
push
cltd
mov
or
lcall
das
mov
mov
mov
shll
fs
cmp
dec
fs
fisubl
pop
fs
xchg
mov
and
jp
mov
xchg
xchg
enter
aas
call
outsl
lock
fs
add
fisubl
xlat
xor
pushf
loop
repnz
pusha
ljmp
jae
rcll
sahf
out
ja
add
add
xor
sti
pop
leave
xor
data16
push
inc
xchg
cmp
xchg
dec
add
cmp
data16
jns
test
mov
incl
out
rcrb
jnp
xchg
pop
enter
jl
cmp
imul
out
and
sbb
data16
data16
jb
enter
sub
addr16
sbb
decl
push
jo
jnp
xchg
cmp
cmp
cmp
cmp
mov
out
cmp
or
or
enter
or
pop
push
jb
sub
push
inc
mov
fs
sbb
cwtl
out
outsb
pop
leave
jae
in
push
add
jl
jle
inc
fisubs
js
or
adc
sbb
pop
insl
lcall
test
add
lods
xchg
daa
pop
test
repz
ss
pop
mov
add
add
into
pop
pop
or
lcall
inc
lds
inc
cmp
mov
mov
push
aam
and
inc
repnz
inc
mov
mov
dec
adc
roll
ja
inc
dec
subb
outsl
in
cmp
inc
imul
push
mov
movsb
fwait
verw
pop
imul
imul
cmp
rorl
or
and
mov
divl
rcrl
xorl
xchg
sbb
insb
pusha
sub
faddl
add
fcmovne
push
pop
fildll
ja
daa
daa
pop
xchg
mov
jl
lods
insb
cmp
inc
dec
repnz
insl
mov
or
jl
das
in
addr16
insl
insl
inc
insl
cmp
in
dec
insl
push
insl
pop
insl
mov
in
in
xchg
xchg
mov
outsb
mov
stos
mov
mov
aad
ret
insl
lret
insl
sbb
daa
daa
push
out
idiv
insl
mov
push
outsb
push
outsb
push
outsb
push
outsb
mov
outsb
outsb
outsb
outsb
mov
outsb
dec
outsb
push
outsb
pop
pop
daa
daa
mov
ud2
pop
or
or
daa
daa
daa
pop
push
add
daa
add
sbb
cmp
repz
jbe
iret
repz
jle
xchg
mov
xchg
cmpsl
fwait
cmp
mov
out
sahf
xchg
cmpsb
scas
and
and
mov
sub
sub
add
ja
leave
test
outsb
loope
outsl
xchg
in
je
pop
lar
data16
cmp
or
mov
add
dec
sahf
fcmovne
test
cmp
cmp
fmul
dec
cmp
aas
or
pop
pusha
pushf
pop
out
scas
adc
sbb
repz
pop
jo
sub
or
or
leave
repz
or
dec
pop
iret
jae
je
pop
adc
andb
jo
adc
mov
and
nop
jo
jo
ja
inc
mov
xchg
xchg
xchg
xchg
jo
jo
mov
xchg
xchg
jo
jno
or
dec
push
jne
xchg
pop
das
mov
jno
popa
push
add
imul
outsl
xor
scas
daa
inc
or
jp
incl
stos
shr
cwtl
jmp
repnz
mov
xchg
jp
pop
ja
lock
in
xor
clc
jno
and
xchg
in
sub
jb
rclb
jb
jb
sahf
out
xchg
mov
mov
dec
mov
dec
dec
dec
outsb
mov
out
divl
push
adc
mov
and
xor
sbb
pop
dec
pop
cmp
and
mov
add
or
in
lock
aad
inc
decl
outsl
and
shld
sbb
pop
lods
jae
mov
out
int3
aam
fmull
cmp
in
in
in
pop
hlt
or
repz
add
movups
or
scas
daa
iret
adc
je
pop
mov
dec
push
mov
jns
out
pusha
punpckhbw
jo
lret
stos
sbb
js
daa
jb
enter
incb
pusha
mov
jl
iret
push
mov
test
out
mov
pop
rolb
dec
pop
lret
dec
paddd
je
jp
je
mov
jne
jae
popa
in
jne
das
pop
dec
jb
roll
jne
jne
mov
pushf
dec
lods
jne
add
pushf
pop
rcr
add
sbb
pop
call
adc
jbe
or
pop
rcrb
iret
mov
enter
dec
or
or
jbe
push
pop
inc
jns
cmp
add
push
add
daa
fucom
pop
lar
cs
sahf
out
daa
push
js
mov
mov
test
ja
lea
int3
jbe
push
add
in
repz
dec
hlt
push
add
mov
or
push
pop
inc
xchg
adc
ja
and
sub
popf
xchg
out
or
sbb
push
ja
dec
ja
ja
adc
lea
nop
add
iret
mov
mov
filds
mov
mov
in
mov
mov
jecxz
xchg
jl
popf
push
jg
adc
push
js
push
sub
cmp
scas
xor
js
scas
mov
sbb
sub
push
out
mov
in
test
inc
outsl
add
sarl
mov
mov
outsb
mov
shr
fcomp
loopne
pushf
push
test
insb
pop
mov
adcb
inc
dec
add
jns
icebp
in
and
add
jns,pt
lea
dec
jns
or
nop
insb
and
cmp
inc
push
fistpll
jns
xchg
xchg
mov
leave
add
xchg
jae
cmp
ljmp
in
add
jp
jp
and
repz
dec
jp
push
push
inc
pmulhuw
xchg
push
push
dec
jp
jp
jp
subl
xchg
call
ss
push
shlb
push
inc
sub
jnp
and
das
or
jnp
jnp
loope,pn
and
jnp
jnp
and
push
cmp
sbb
call
or
xor
pusha
sahf
das
push
pushf
pushf
xchg
lcall
pop
push
pop
mov
mov
jb
jnp
psrld
enter
cmp
test
push
push
cwtl
push
pop
xlat
xchg
scas
jl
inc
dec
add
js
orb
xor
leave
repz
cwtl
jl
and
xchg
filds
xchg
inc
xchg
outsb
adc
push
call
mov
push
pop
lret
call
add
bnd
ja
push
add
repz
mov
jge
or
mov
jge
push
add
aaa
aaa
jge
jmp
cwtl
xchg
out
mov
pop
push
aas
cpuid
and
jge
cs
lock
add
in
enter
push
pop
or
jle
inc
pop
and
pop
aam
jle
jle
outsb
daa
and
xchg
xchg
jb
xor
dec
sahf
outsb
lsl
roll
ret
cmovs
das
enter
mov
jg
jg
and
in
sbb
or
cmp
out
xchg
add
insb
jg
into
cmc
repnz
das
xchg
jg
jg
adcb
or
push
fucom
add
repnz
addb
subb
pushf
addb
push
lds
aaa
adc
mov
cmpsl
pop
arpl
add
xchg
xchg
mov
scas
dec
sahf
out
add
xchg
ja
lar
test
mov
cmp
adcb
lcall
push
sbb
push
frstor
punpcklbw
xchg
repnz
xchg
xchg
pop
leave
jae
xchg
add
leave
icebp
pop
ja
rcrl
sar
adc
xchg
sbb
shl
adc
cmp
test
fnstsw
xchg
mov
add
lcall
enter
dec
popf
xchg
out
add
loopne
fucom
pop
inc
push
push
stc
lsl
jne
jg
or
fistps
sbbl
cmpl
es
or
jp
push
push
cmpl
sbbl
add
add
cmp
nop
pop
lmsw
repnz
mov
repnz
mov
mov
pushf
je
enter
adc
out
sahf
ja
ds
loopne
call
sbb
sbb
mov
sbb
xor
sbb
test
test
leave
add
or
push
mov
int3
xor
stos
push
jmp
popf
sbb
push
xor
push
test
test
push
add
inc
cmp
clc
pop
dec
out
in
xchg
test
or
sbb
or
or
push
rcr
in
lcall
xor
lret
push
aas
dec
test
out
in
pop
leave
pusha
andb
daa
adc
out
and
mov
sbb
jb
test
ret
test
test
test
add
in
out
test
cli
test
xchg
xchg
xchg
mov
pop
xchg
push
iret
repz
push
mov
xchg
dec
mov
clts
xchg
and
add
dec
jp
addb
xchg
adc
repz
cmp
lret
mov
push
loop
pslld
pop
sbb
sahf
adc
mov
inc
dec
cmp
dec
pop
push
and
imul
xchg
addl
cmp
dec
movsl
xchg
lods
xchg
es
jns
or
inc
mov
xor
adc
mov
inc
cli
add
pop
leave
xor
sub
scas
scas
xor
mov
pop
mov
pop
or
femms
mov
jmp
psrad
jae
inc
pop
cmp
out
pushf
xor
jnp
mov
or
or
adc
push
mov
or
xchg
mov
mov
mov
mov
loopne
ja
icebp
and
add
mov
sbb
movsb
cmp
insl
jo
pusha
punpckhbw
and
mov
xchg
dec
xchg
icebp
test
jmp
shrb
loopne
call
dec
das
mov
les
mov
in
mov
dec
cmp
add
repnz
or
jl
js
mov
adc
mov
xchg
mov
pop
psrlw
mov
ror
psubsw
inc
dec
sub
inc
fwait
insb
push
inc
cwtl
movsb
in
push
test
mov
js
in
cmp
mov
push
add
push
aas
fwait
mov
enter
mov
or
popf
lret
out
xchg
enter
dec
rcl
mov
stos
mov
cs
mov
and
xchg
mov
leave
in
cmp
faddl
push
ljmp
pop
inc
outsl
call
repz
fsubrl
sbb
es
push
pushf
mov
mov
clc
mov
fwait
cmp
or
pop
pop
rorl
bound
sahf
or
inc
nop
lea
inc
mov
fmull
dec
ror
psllq
jbe
fwait
add
sti
pop
push
mov
in
in
push
push
xor
in
xchg
mov
xor
in
fdivr
and
jb
jo
sbb
jns
in
in
mov
lods
push
push
sarb
iret
cmp
push
and
jmp
and
in
in
decb
nop
iret
inc
repnz
ljmp
cltd
dec
ds
add
sub
dec
jo,pn
nop
jbe
mov
cmpsb
nop
das
mov
out
pushf
out
idivl
xchg
dec
push
add
cmp
aaa
push
aas
xchg
xchg
pop
leave
xor
call
in
push
jb
orb
stos
mov
dec
test
in
int
fucom
int
dec
in
push
xchg
mov
push
push
sahf
out
sahf
push
pop
push
or
or
out
or
or
out
sahf
out
inc
add
mov
pmaxub
adc
in
mov
test
sbb
pop
in
xchg
pop
pop
cltd
movaps
cs
das
das
das
int
fcoms
das
das
das
das
lock
sti
xchg
push
xchg
push
xchg
das
das
das
das
push
xchg
push
xchg
es
cs
stc
dec
das
das
ss
ds
jg
xchg
stc
mov
push
xchg
pop
xchg
scas
addr16
jns
jns
jb
jp
test
sahf
ja
push
pop
mov
jns
and
jns
out
and
and
sahf
out
daa
in
sub
leave
repz
or
xchg
sub
or
cmp
sbb
jle
dec
sahf
lret
and
mov
mov
xlat
pusha
xchg
fistps
push
das
jo
sbb
xchg
fcomps
in
xchg
push
fwait
xchg
mov
mov
insl
iret
int3
pop
sgdtl
iret
int
cwtl
das
fisttps
push
notb
push
xchg
xchg
xchg
cmp
mov
imul
cmp
test
cmp
xlat
cmc
std
add
jae
or
adc
iret
repz
jbe
outsb
repnz
add
pop
aas
arpl
cmp
in
in
lahf
das
mov
leave
repz
out
sahf
xchg
call
xchg
out
inc
lret
push
xchg
pop
xor
push
push
daa
ds
xorps
daa
iret
jae
pop
addr16
mov
cs
mov
shll
cmp
out
xor
decl
cmp
lahf
testb
push
xor
cmp
jbe
pop
daa
comiss
cmp
inc
sahf
cmp
fadds
in
mov
js
sbbb
ja
in
dec
inc
fwait
in
cwtl
scas
iret
call
loopne
cltd
wbinvd
xlat
adc
xchg
add
inc
mov
cltd
aaa
and
mov
xchg
ja
les
fabs
add
iret
out
lcall
xor
mov
out
inc
add
outsb
repnz
jae
jle
in
in
sahf
or
pushf
cmp
leave
stos
mov
iret
leave
repz
in
out
outsl
in
pushf
cli
push
add
sahf
out
jns
sbb
sbb
sbb
cmp
inc
out
jns
push
pop
pop
push
xchg
jae
add
loope
in
fwait
lahf
fwait
stos
fwait
mov
sub
lock
jns
and
mov
pushf
shlb
ds
add
add
pushf
iret
repz
das
pop
push
pusha
pop
repnz
pushf
dec
js
aaa
jns
in
subb
push
or
setle
jns
push
ds
push
adc
mov
adc
dec
aaa
jns
lar
pop
into
sbb
push
loopne
je
cmpsb
mov
in
mov
sbb
aad
popf
out
push
daa
call
in
popf
popf
iret
push
mov
popf
mov
aas
xor
aas
cmp
jns
mov
xchg
add
mov
in
jbe
jle
xchg
jb
test
iret
leave
in
rcll
popf
pop
in
hlt
paddb
sbb
xchg
sub
mov
sahf
ud1
and
xorps
iret
cmp
push
or
jo
xchg
mov
repnz
add
mov
vpmullw
lcall
cltd
mulb
lahf
xchg
fucomi
xor
cmovae
add
daa
iret
jae
add
arpl
push
xchg
out
in
jae
mov
xchg
dec
sahf
cmpsb
pushf
dec
and
add
leave
rcrl
loope
icebp
enter
cmpsl
push
dec
adc
imul
and
sub
jg
popf
pop
mov
xchg
maxps
xchg
adc
mov
outsb
aas
lahf
lcall
stos
mov
mov
cmp
lret
dec
cmpsb
xchg
iret
or
mov
std
fsubl
dec
add
fists
leave
repz
pop
shr
pushf
cmp
iret
dec
and
or
mov
pop
xor
xchg
add
sbb
stos
mov
dec
outsb
daa
mov
xchg
ret
lret
cmpsl
roll
mov
idivb
das
ficoml
ja
mov
xor
out
jns
dec
push
add
dec
popa
or
and
xchg
fistl
mov
ror
mov
pop
mov
lcall
add
mov
leave
leave
inc
pusha
imul
je
out
addl
cmp
repz
push
mov
cmp
or
jns
dec
cmp
mov
sahf
out
push
cli
add
stc
jg
movsb
sbb
jns
jns
movsb
inc
movsb
push
movsb
pop
movsb
jns
jns
push
movsb
mov
movsb
lahf
movsb
stos
movsb
mov
outsb
daa
daa
fisttpll
sbb
dec
dec
dec
dec
sbb
pop
push
jns
dec
dec
adc
jns
out
lret
sub
mov
xor
mov
imul
cmp
mov
enter
push
iret
repz
sahf
cmp
cmp
iret
repz
cmp
cmp
repz
dec
inc
pop
inc
iret
repz
gs
jo
jnp
jns
out
fiadds
repnz
ficomps
dec
jmp
hlt
dec
decl
dec
repnz
repz
repz
jae
push
ss
inc
jbe
cmp
push
dec
push
push
bound
out
in
insl
js
mov
rorl
pop
cltd
subps
mov
fnstcw
sbb
and
cmpsl
cmp
repz
add
add
push
push
cmpsl
cmpsl
outsl
push
or
cmpsl
pavgb
jns
out
or
or
xor
test
out
sahf
adcb
adc
adc
mov
mov
sahf
out
push
sbb
pop
in
mov
xchg
xor
test
test
and
pop
mov
mov
inc
sahf
lea
test
sbb
xor
iret
pop
mov
mov
jp
cmp
sbb
scas
daa
adc
cmp
and
mov
test
clc
mov
pop
push
lahf
test
dec
dec
inc
dec
adc
sbb
and
jle
push
or
add
das
xor
aas
xor
fistpll
in
xchg
test
repnz
stos
outsb
test
jns
js
test
jmp
in
lret
mov
daa
fcmovnb
jecxz
jbe
jb
repz
mov
jb
das
xchg
fs
stos
fbstp
jns
out
push
pop
xor
aas
push
adc
inc
jle
dec
stos
push
punpcklbw
repnz
setae
mov
sahf
xchg
ret
into
adc
psubw
jae
in
adc
movsl
sbb
sbb
repz
sbb
sbb
out
fwait
nopl
inc
iret
cmp
push
and
push
and
dec
outsb
daa
jle
mov
out
daa
stos
mov
shrb
inc
sarb
repz
add
out
cmp
sub
xor
push
add
inc
dec
mov
cmp
cltd
push
xchg
xchg
out
cmp
mov
outsb
lods
pop
rep
daa
fisttpll
add
fidivrs
jb
rorl
out
out
lods
imulb
lods
pop
movups
adc
jns
out
adc
adc
in
in
sahf
adc
pop
repz
leave
inc
dec
sbb
dec
mov
fs
pop
jns
outsb
repnz
mov
and
test
and
xchg
and
sahf
out
es
daa
fisubs
add
mov
mov
sub
add
aad
sbb
les
outsb
movb
pop
mov
and
das
test
jae
add
les
frstor
pop
xor
add
lods
sahf
xchg
inc
push
push
dec
scas
fsubp
ljmp
scas
or
pushf
movsb
push
push
inc
cmp
repz
add
push
cmp
or
pop
in
scas
push
add
add
out
scas
scas
iret
push
scas
xchg
outsb
sbb
pop
scas
push
repz
jae
or
enter
mov
sbb
jb
lods
scas
mov
ret
scas
leave
out
mov
scas
outsl
sbb
lds
and
push
mov
mov
sahf
ja
lahf
cmp
add
push
pop
mov
arpl
imul
or
nop
test
leave
leave
fwait
cmpsb
mov
insl
mov
fwait
out
sarb
fstpl
jecxz
rorl
or
repz
mov
repz
mov
mov
push
or
repz
or
cmp
adc
push
in
stos
sahf
popa
mov
push
pop
ja
popf
cmp
sbbb
lea
sahf
out
mov
mov
xchg
aad
and
and
fisubs
push
ds
add
movntq
repz
adc
sub
sub
sbb
aad
mov
pop
mov
mov
dec
ss
ucomiss
sbb
mov
mov
dec
adc
xchg
cmp
leave
enter
pop
clc
mov
xchg
and
lret
adc
mov
insl
xchg
xchg
mov
pop
push
out
jbe
cmp
cmp
push
dec
cmp
in
js
pop
push
sbb
aaa
jns
out
push
jns
dec
push
orb
jns
and
jns
sahf
and
mov
cmp
enter
sub
loope
jns
loopne
sub
clc
sub
inc
pop
or
adc
mov
out
dec
sbb
xor
sub
xor
mov
mov
ss
enter
push
xchg
andl
and
push
inc
leave
mov
fisttpl
aas
add
sbb
cmp
adc
pop
push
insb
push
aam
movsl
ja
cs
inc
push
sub
outsb
loop
adc
inc
push
sbb
scas
pop
inc
adc
dec
aaa
popa
insb
mov
pop
fcoms
dec
leave
inc
add
sahf
out
cmp
xor
lahf
out
sahf
sub
sbb
clc
enter
xor
call
cmp
repz
ror
enter
iret
rcrb
test
cmp
cmp
nop
push
mov
rep
pusha
push
push
dec
mov
cmp
inc
sub
or
lock
jne
xor
sbb
add
cmp
in
add
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
pop
dec
dec
sahf
out
sub
pushf
cmpsl
mov
into
aas
xlat
mov
lret
sbb
sbb
add
push
adc
and
adc
push
add
mov
aam
std
dec
or
and
push
adc
push
add
mov
pop
lock
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivrl
xor
fcomp
loopne
push
and
xor
mov
mov
or
pop
mov
pop
add
fdivr
inc
xor
lods
mov
inc
dec
fiaddl
pop
mov
js
jle
pmovmskb
add
mov
sub
inc
mov
aas
pop
add
divl
insb
dec
add
lock
les
lahf
out
sahf
or
into
cmp
repz
movsb
adc
repz
sbb
hlt
int
jns
cmpsl
sbb
sbbb
fmul
lea
scas
outsb
int3
lret
dec
jmp
cmpsl
push
and
js
lret
in
ds
cmp
cmp
ljmp
sbb
les
sub
sub
popf
add
pop
sarl
aas
add
mulb
inc
pop
sbb
mov
jg
dec
aam
pop
and
lock
push
xorb
es
icebp
lahf
push
fwait
test
push
push
pop
inc
jg
dec
divl
inc
push
xchg
lea
aaa
push
aas
pop
pop
adc
pop
xor
fisubrs
fistl
sub
jg
mulb
and
inc
paddusb
cmp
sub
add
rcrb
add
push
jb
add
xchg
es
cs
dec
roll
mov
rorl
pop
fldenv
add
and
clc
loop
xchg
dec
sbb
dec
push
out
jns
jnp
ds
neg
sti
adc
in
push
and
push
or
jnp
repz
add
push
cld
adc
sahf
idivl
hlt
sbb
adc
rcrb
jns
out
enter
mov
and
jns
lods
and
dec
mov
jmp
jg
movups
push
mov
daa
xor
xchg
aaa
test
cld
xorb
xlat
movsb
mov
sbb
xchg
jg
cmp
pop
js
jns
out
mov
repz
sbb
ds
xor
add
movsb
imul
iret
pusha
bnd
das
push
dec
insb
loopne
sub
add
jb
push
mov
add
and
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
test
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
sub
mov
addr16
push
mov
xchg
aas
lcall
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
in
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
lods
and
pop
pop
push
mov
inc
pop
cmp
sbb
jnp
ljmp
push
cmpsl
add
ja
popa
push
out
mov
decl
cltd
sbb
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
call
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
mov
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
cld
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fistpll
jne
iret
or
pushl
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
call
mov
sub
mov
and
or
adc
stos
lcall
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
bound
lahf
xor
mov
js
stc
inc
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
pushl
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
lock
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
outsl
pop
fistps
je
mov
aam
movsl
fisttps
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
ljmp
and
mov
add
inc
aad
scas
ja
popf
adc
call
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
scas
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
cli
out
mov
jns
imul
andl
shrb
rclb
or
clc
dec
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
scas
xor
imul
scas
fcompl
fldenv
filds
push
dec
adc
aaa
pusha
mov
jg
insl
cld
fidivrs
mov
jmp
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
test
inc
add
push
sub
mov
or
sbb
add
sub
sahf
push
pop
or
imul
js
pop
jo
ret
daa
pusha
push
mov
cmp
jmp
push
xlat
fcomp
fcmove
repz
fcmovnu
fstp
loop
repz
cmp
in
jmp
ljmp
iret
repz
div
clc
stc
cmpsb
sbb
repz
sti
cld
daa
adc
add
adc
inc
cwtl
sub
adc
push
cmp
mov
add
and
push
dec
bound
jbe
inc
call
bound
movsl
fisubrl
push
popa
je
push
sti
bound
and
inc
dec
aas
lds
and
aas
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
dec
insl
ljmp
xor
xor
xor
jg
sub
inc
jbe
pop
insb
imul
push
insb
add
dec
inc
dec
cmpsb
ficomps
push
inc
dec
dec
cmpsb
push
cmpb
lock
inc
mov
rcl
das
fs
push
xchg
mov
push
je
scas
ss
jbe
lret
rolb
jge
call
icebp
adc
je
dec
js
in
inc
inc
push
adc
adcb
adc
add
inc
sbbl
lds
sbb
outsb
pop
lods
xchg
popa
xchg
inc
inc
orb
xor
lock
aas
inc
push
fadds
jbe
aas
or
push
fistl
lods
cltd
and
jae
and
orb
xchg
push
aas
jbe
and
push
pop
inc
inc
jnp
adc
sbb
inc
pop
js
push
inc
inc
inc
mov
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
andb
inc
mov
adc
mov
mov
mov
ja
outsb
jne
pop
insl
inc
push
popa
mov
xchg
jge
xor
cmp
adc
arpl
add
mov
addr16
clc
xchg
into
xchg
adc
insl
mov
sbb
pop
sarl
lret
pop
cltd
dec
int3
push
lods
mov
pop
adc
outsl
pop
mov
mov
add
lahf
sub
xchg
popa
cmp
dec
mov
mov
and
movsb
mov
add
inc
jb
cmpsl
adcb
adc
lahf
mov
push
outsl
outsl
test
xchg
outsl
mov
andb
jno
stos
loop
push
mov
rclb
in
lds
pop
inc
push
andb
or
mov
mov
add
out
sarl
jo
push
stos
shlb
jns
adc
inc
jb
push
dec
inc
stos
xchg
addr16
outsl
arpl
adc
mov
jle
adc
inc
push
bound
ja
outsl
pop
cmp
jbe
xor
xchg
push
lods
jg
push
dec
bound
cltd
xor
call
fs
add
adc
or
sub
jmp
xchg
mov
mov
aaa
dec
dec
inc
dec
pop
outsb
arpl
push
aas
adc
jo
sbb
jmp
inc
push
inc
dec
mov
sub
jns
arpl
xor
cmp
pop
pusha
add
insb
insl
aaa
shll
insl
mov
inc
xchg
fildl
xlat
nop
lods
mov
imull
sub
adc
and
add
and
xor
sahf
jmp
push
add
fdivr
loopne
dec
imul
and
pusha
add
jnp
inc
in
add
add
or
mov
push
or
or
or
or
or
adc
adc
push
adc
aaa
mov
adc
or
pop
sbb
adc
adc
fimull
pop
adc
add
data16
or
pop
lds
inc
add
add
add
and
add
sahf
add
les
out
add
add
and
movsl
inc
mov
jo
rclb
imul
ds
lcall
adc
push
adc
pop
and
xor
inc
mov
adc
xor
sbb
in
bound
js
and
lock
mov
mov
shlb
jno
inc
or
and
add
add
addl
add
sbb
inc
cwtl
inc
pusha
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
jle
int
and
adc
xchg
mov
lock
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
adc
sub
rcr
call
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
faddl
cmp
inc
or
pop
les
fsts
dec
add
push
adc
loope
mov
cmp
ja
out
cmp
xor
and
jmp
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
repnz
roll
test
add
call
fcompl
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
mov
fwait
adc
mov
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
pop
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
incl
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
call
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
jg
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
in
mov
mov
int
arpl
push
out
or
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
lock
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
sub
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
or
jae
shrb
sar
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
idivl
sbb
mov
lods
loopne
sar
addl
lahf
xor
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
lock
testb
pop
rolb
pop
inc
jb
fistpl
adc
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
xchg
cmp
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
aaa
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
shrb
xchg
pmullw
call
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcrb
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
negb
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
incl
add
dec
inc
cmp
xchg
push
mov
outsl
or
or
in
mov
adc
cmpsl
ret
pop
loopne
fisttps
and
jg
mov
adc
jg
loope
inc
je
js
pop
movsb
jg
in
cmp
push
mov
add
and
cmp
call
sahf
push
or
movsl
in
fnstsw
push
nop
std
mov
dec
jo
fcmovbe
fwait
imul
decl
clc
movsl
jns
mov
sub
sub
in
rdtsc
int3
aaa
jle
sub
sti
push
pop
pop
adc
adc
cltd
push
dec
mov
sahf
xchg
pop
mov
imul
das
int
pushl
and
roll
cmp
dec
pop
xor
ret
xor
xor
stos
xchg
pop
inc
iret
sahf
or
gs
mov
insb
and
fildll
pop
sbb
xor
popf
add
mov
xor
sbb
xor
and
roll
shll
fcom
test
mov
out
mov
xchg
outsb
fisubl
mov
out
adc
and
jge
scas
orl
call
lret
mov
addr16
and
inc
add
imul
jae
mov
fistpll
push
loope
ja
shll
stos
adcb
inc
push
push
push
and
cli
ja
xor
inc
push
lea
imul
hlt
test
mov
incl
stc
popa
push
int
xlat
lea
jb
mov
popf
scas
pop
lock
mov
mov
imul
call
pop
mov
lock
lcall
movsb
or
stos
jbe
and
add
mov
xor
imul
into
pop
stos
ja
adc
push
xchg
sti
or
subb
add
movsl
sub
mov
cmp
or
sbb
sar
inc
adcl
lahf
dec
cmp
cmp
adc
rcll
ds
sti
or
pusha
bound
push
fildl
out
add
push
add
dec
dec
push
cmp
lret
mov
dec
sbb
cmp
fisubrl
in
pop
dec
inc
mov
fdivr
ljmp
adc
insl
ljmp
or
jo
lods
pushf
push
fdivrs
pushl
pushf
ror
xchg
xchg
loope
xor
sahf
jl
lcall
mov
dec
ss
in
out
and
popa
pop
mov
cmp
test
jl
jnp
sar
push
jns
cmp
xor
lods
jl
daa
add
mov
hlt
cmp
fwait
jmp
aas
mov
aas
movsl
and
call
add
push
dec
xor
mov
nop
pop
sbb
pop
ljmp
in
insl
les
dec
adc
outsl
sarb
sbb
sarb
add
sbb
jecxz
cmp
xchg
pushl
mov
mov
into
lods
or
jg
arpl
xorl
daa
cltd
jnp
xchg
push
aas
incl
sti
or
test
jmp
inc
movsl
push
cmp
pop
imul
ljmp
outsb
mov
sarl
test
int3
fiadds
mov
icebp
inc
shrl
jnp
lret
aam
pop
adc
sub
fidivs
out
inc
insb
aaa
pushf
shl
aaa
pop
cmp
aaa
add
xchg
jns
pop
push
ds
movsb
or
sbb
lcall
fdivs
xchg
sahf
test
jno
fidivrs
and
xchg
stc
ret
stos
pop
inc
pop
pop
sbb
mov
and
sbb
pop
icebp
jne
adc
push
decl
mov
or
rorl
xor
or
addr16
xchg
jmp
mov
decl
pop
js
fs
leave
ljmp
pusha
jp
into
pop
sub
lcall
and
pop
cmc
and
bound
add
or
push
mov
xor
cwtl
inc
inc
mov
cs
sahf
add
jecxz
pop
jbe
in
xor
cmp
or
dec
pop
jg
addl
pop
aad
loop
sarb
cmp
ljmp
dec
inc
daa
mov
in
addl
push
add
xor
dec
inc
cmp
mov
sub
pusha
dec
daa
pushf
dec
fadds
push
leave
js
int3
stos
xchg
rorb
ljmp
push
adc
aam
inc
pop
nop
mov
add
bound
call
dec
inc
push
jl
subl
mov
push
dec
push
push
push
loopne
dec
jecxz
jge
adc
call
out
out
scas
inc
xchg
and
mov
insb
out
jns
fldcw
add
pushl
pusha
and
mov
rcll
sahf
push
cld
out
mov
xchg
in
pushf
cli
loopne
mov
push
ljmp
sbb
out
xchg
shr
pop
jp
jb
jbe
inc
out
inc
ljmp
inc
sahf
cwtl
or
clc
mov
in
mov
hlt
mov
leave
shl
aam
push
rcr
lcall
cwtl
lret
mov
inc
rolb
xchg
mov
cmc
xchg
push
mov
add
rcrb
or
ljmp
or
push
push
loopne
pop
mov
push
or
mov
int3
subl
xchg
jg
pop
shr
test
mov
pop
lcall
rdmsr
repz
fcomps
cmp
int
call
test
sub
stc
or
repnz
rclb
xor
gs
or
repz
aaa
rcr
mov
fimuls
mov
jg
lcall
mov
test
xor
and
mov
jns
cs
jg
xor
fiaddl
and
lret
sub
frstor
xchg
push
scas
decl
lods
movsb
imul
dec
fsubrl
lock
fcomi
xor
imul
xchg
nop
sarb
dec
orl
cmp
lods
cmpsb
push
dec
jb
cmp
cld
cwtl
jae
std
lret
xchg
rcl
es
jmp
lds
jl
clc
sti
fcoms
mov
out
scas
sbb
mov
xor
shrl
jmp
movsb
ret
xchg
repz
decl
pop
stc
sub
pop
nop
shrb
out
sbb
sub
cmc
pop
outsb
fwait
call
dec
rcr
xchg
in
xchg
sbb
movb
push
push
jne
ud0
push
lahf
and
in
mov
jb
imul
inc
shlb
in
ret
call
decl
fbld
dec
fidivrl
sub
adc
dec
jns
pop
call
or
shlb
out
out
inc
cmp
mov
cli
xchg
in
mov
lea
lock
sbbb
clc
or
incl
jmp
xor
arpl
mov
fsubrs
sbb
lcall
jbe
adc
inc
mov
mov
push
sub
xor
xchg
pop
fmull
icebp
sub
pop
add
mov
inc
mov
inc
aas
js
and
and
loopne
call
rorl
cmpsb
dec
mov
or
enter
inc
in
imul
sub
imul
fmulp
xlat
mov
xor
mov
mov
mov
data16
push
sarb
pop
jmp
out
mov
ja
xchg
cld
fsubr
shld
add
loop
les
mov
pushl
jmp
jno
and
add
xlat
inc
into
cmp
rorl
jle
dec
mov
xchg
mov
jae
mov
loopne
pop
fstpt
cld
cmp
fsts
jecxz
xchg
add
jmp
dec
inc
loopne
jg
je
call
and
adc
mov
mov
lods
mov
xchg
loop
aas
out
pop
int3
cltd
cmp
stos
jmp
fisttpl
push
popa
lahf
adc
cs
mov
out
xchg
cmpsb
fwait
jnp
popf
inc
and
stos
outsl
xor
ficoms
fwait
ret
enter
in
jg
mov
cmp
cmc
test
data16
push
adc
bound
push
pushl
mov
or
inc
insb
in
idivl
inc
sahf
xchg
mov
xchg
mov
xchg
inc
and
or
loope
call
lahf
jl
push
mov
loop
fmul
imul
inc
mov
lcall
lahf
jg
lea
adc
inc
je
mov
cmp
decl
mov
push
int
rclb
fwait
ja
gs
cmp
xor
jbe
add
in
test
sub
pop
dec
inc
lcall
pushl
mov
inc
js
dec
sub
std
movsb
inc
and
cmp
int
jl
cmpsl
push
enter
clc
stc
xor
mov
xchg
sbb
out
jecxz
jno
sbb
mov
push
mov
jae
mov
mov
cmpsb
fisubs
addb
push
jmp
insb
ret
cmp
cmp
dec
cwtl
cli
in
negb
sbb
loop
sub
inc
in
dec
rcrb
lods
pop
inc
std
js
push
xor
decb
cmpsb
sub
call
je
mov
inc
ret
mull
jg
pop
inc
lock
mov
or
xchg
xchg
mov
xchg
jb
movsl
or
jmp
rcll
loope
push
arpl
dec
cmp
ss
add
test
incl
cmp
jne
iret
xor
xchg
cmpsl
cmp
outsb
xchg
and
inc
xor
pop
stos
jecxz
ljmp
jo
xchg
push
call
ja
movsb
sbb
inc
in
mov
ss
ljmp
or
push
sar
inc
lret
fldl
mov
in
fcoml
jno
leave
mov
dec
xor
push
subl
lret
popf
int
jno
call
jne
and
std
sbb
imul
mov
je
pop
stos
rolb
or
dec
stos
ss
cmp
xchg
lods
push
aad
push
add
xchg
movsl
push
mov
fsub
js
jmp
decb
sub
cmp
in
xchg
sub
and
jg
fimull
lods
arpl
mull
outsb
and
xor
or
idiv
jp
rcl
xor
mov
ret
push
push
push
cs
and
xor
sub
mov
daa
inc
sbb
xchg
test
loopne
shlb
jns
rcl
mov
jnp
lcall
je
add
es
mov
stos
add
add
or
out
sbb
lcall
or
jge
fyl2x
cmp
pop
call
jg
sub
inc
stos
fmuls
jnp
pop
inc
aad
pusha
in
xor
stc
push
nop
sbb
pop
adc
inc
int3
lock
fisttpll
cmc
xchg
push
dec
dec
cld
lcall
mov
loope
cmp
iret
mov
mov
cmpsb
leave
push
push
push
or
movsl
mov
cmpsl
scas
mov
adc
aas
pop
fwait
pop
movsb
mov
mov
loopne
ret
sub
mov
mov
add
jns
mov
in
jl
xor
jg
push
push
out
inc
outsb
and
cmpsb
aad
jnp
cmp
js
cmpsb
ret
mov
adc
lcall
jp
dec
mov
and
in
test
lcall
cwtl
dec
jle
sbb
sub
ficoml
xchg
sbb
jmp
fisubs
arpl
mov
and
jno
fimull
dec
pop
imul
mov
inc
add
sbb
fstl
fldt
fistl
xlat
stos
stos
dec
call
bound
repz
pushf
or
sub
adc
jno
mov
cmp
mov
in
cwtl
icebp
push
sbb
lcall
int
lcall
push
rcrb
test
ljmp
movsb
in
pushl
aas
fwait
test
sub
in
sub
sbb
jns
or
and
jle
inc
sar
mov
int3
jg
or
stos
inc
push
push
das
cmp
fwait
dec
lds
outsb
push
jmp
into
xor
jns
jecxz
fstpl
mov
shrl
test
mov
cmc
loop
or
xchg
pop
push
mov
sub
clc
push
push
insl
daa
movsl
sti
mov
rclb
xor
push
pop
scas
shl
sbb
lcall
mov
lods
stos
out
fwait
cmp
add
adc
push
xor
sbb
inc
and
call
test
mov
insl
fdiv
pop
aaa
sarl
aam
mov
xchg
fisttps
and
dec
call
inc
pushf
sti
negb
lret
int3
inc
mov
lahf
out
std
addl
jmp
pop
iret
int3
insb
outsb
dec
loope
test
or
cmp
out
xor
lcall
dec
dec
shrl
dec
movsb
call
pop
ljmp
inc
jb
mov
mov
ret
or
push
jg
jecxz
jbe
inc
push
call
in
stc
mov
icebp
out
out
in
movsb
mov
clc
in
repnz
imul
cwtl
mov
lahf
mov
cmp
test
out
jg
mov
push
adc
loop
in
adc
pop
mov
in
pop
insb
fists
jb
lcall
lcall
inc
inc
dec
rolb
add
mov
lods
adc
lods
lds
incl
dec
stos
rcl
fdivrs
mov
mov
iret
in
cmp
or
jnp
sar
fdivrs
xchg
daa
cmp
dec
cmpb
pop
lret
ja
mov
ljmp
mov
fimull
gs
jns
mov
icebp
dec
ficoml
sub
xor
les
push
ljmp
stos
adc
xor
xor
fadds
decl
lods
jne
cltd
sub
push
pop
icebp
jns
out
jg
sbb
mov
jge
pop
add
mov
das
dec
push
xchg
mov
in
sub
xor
push
or
xor
ljmp
les
cmp
mov
xchg
outsl
outsl
lcall
inc
inc
sub
xchg
or
cli
pop
add
pop
add
dec
pop
dec
or
mov
shrl
pushl
imul
cltd
out
in
js
sbb
sub
xlat
push
push
orl
dec
pushf
mov
das
pop
popa
cmpb
aas
push
lea
cmpsb
inc
add
and
mov
lcall
xor
arpl
xor
adc
mov
test
sti
mov
in
or
mov
inc
repz
lret
or
negb
and
call
mov
jns
cmpsb
xor
cmp
rolb
mov
push
or
lret
adc
pop
mov
sub
loopne
jmp
cmp
xchg
andl
lods
test
and
sbb
mov
test
loopne
pop
int3
xchg
ret
xor
nop
out
ret
sub
xchg
out
mov
sbb
das
hlt
fcoml
adc
lcall
ljmp
sub
jmp
data16
loopne
mov
ljmp
sarb
mov
or
push
xchg
test
fs
cmp
ljmp
stos
jae
rolb
jns
mov
sub
inc
dec
sub
sub
mov
xor
mov
push
pop
push
mov
decl
pop
and
mov
xchg
lds
xor
mov
or
xchg
push
jmp
daa
std
jle
out
ss
add
aad
into
lret
xlat
or
stos
sbb
jo
sbb
cld
lcall
push
jecxz
jb
jno
cltd
xor
add
out
sbbb
call
out
idiv
sahf
cmp
loopne
adc
pop
add
aam
sahf
cltd
icebp
mov
out
call
inc
vmcall
fstps
call
enter
pop
sub
adc
loopne
mov
xchg
add
in
xor
lea
ljmp
movsb
xchg
icebp
cmp
jl
sub
xchg
pop
sub
lcall
retw
cmpsb
bswap
fcoml
pop
mov
ljmp
jmp
mov
lcall
cmp
jg
adc
jns
pop
test
popf
push
jl
jmp
shll
jbe
xchg
out
xchg
lahf
jmp
fisubl
and
pop
push
sbb
sti
jmp
cmpsl
sbbb
or
scas
xchg
mov
mov
cld
xchg
sahf
xor
lcall
jns
inc
adc
mov
stos
in
test
xchg
fbld
dec
push
repnz
enter
inc
add
loop
cmc
sub
shll
push
test
jg
sbb
mov
mov
mov
scas
pop
sahf
addr16
incl
pop
js
xchg
outsl
rclb
std
sbb
xchg
dec
mov
pop
mov
jle
push
mov
repz
dec
stos
jg
incl
mov
rcl
scas
loop
pop
test
repnz
inc
imul
mov
jl
clc
push
addr16
add
mov
pop
sub
jo
pushl
sub
sbb
mov
mov
gs
std
sbb
xchg
pushf
std
sbb
lea
mov
roll
or
adc
mov
dec
inc
jg
adc
adc
popa
push
loopne,pn
mov
dec
push
test
aad
cmpsb
cmp
inc
imul
adcl
adcb
jg
inc
inc
xchg
hlt
pop
mov
aad
out
repnz
sti
mov
mov
ljmp
push
out
lea
sub
js
je
fs
add
pop
loopne
lcall
mov
rcl
inc
dec
jecxz
cli
push
ljmp
xlat
mov
cmp
movsb
jle
push
pop
mov
cmp
and
xchg
pop
lret
nop
stc
mov
ss
jnp
or
jmp
or
sub
popa
push
mov
pop
lret
data16
in
add
push
mov
adc
or
or
imul
lcall
in
mov
xor
ljmp
movsb
lods
adc
cmp
out
data16
pop
push
aad
imul
movsl
cli
in
xor
incl
vmovntpd
and
jmp
int
jno
icebp
dec
sar
add
repnz
xchg
mov
pop
mov
shl
and
push
incb
call
es
adc
push
inc
bswap
sub
leave
cmp
data16
jg
sub
xchg
inc
stc
int3
out
imul
repz
sub
pop
inc
dec
stos
mov
jp
cwtl
mov
dec
pop
stos
aam
pop
pop
fisubs
lea
shll
ja
cmp
ds
jo
cmp
lcall
jl
cmc
inc
cwtl
ljmp
mov
mov
xchg
jg
jbe
shll
lcall
and
lret
mov
add
shll
and
xor
mov
call
cmpsb
and
sub
insl
jge
mov
push
ret
mov
mov
clc
dec
addr16
idivw
outsl
pusha
xchg
inc
int
cmp
jp
lcall
lret
mov
sub
xor
jmp
xchg
inc
and
shl
iret
inc
add
lcall
mov
and
lret
adc
in
pushl
add
or
test
xor
movsl
and
jl
nop
mov
in
xor
aaa
mov
adc
or
xchg
repz
xchg
push
mov
dec
rcrb
dec
pop
stc
outsl
sub
clc
decl
jo
es
inc
push
popa
fildll
lock
andl
call
inc
mov
mov
push
or
vshufpd
inc
rcl
cld
pop
or
sub
dec
pop
lock
sahf
sub
sar
call
shlb
ljmp
sub
test
xor
mov
adc
popa
or
lcall
sbb
scas
lahf
cltd
lret
jge
aad
cmp
jp
je
sarl
cmp
sti
lds
or
insb
or
aas
inc
push
cvttps2pi
pop
loopne
sub
mov
cmpsb
in
rcl
push
push
in
or
inc
jmp
dec
push
adc
jp
inc
pop
jge
dec
lea
push
pop
cmp
ret
mov
pop
arpl
or
push
jecxz
leave
lcall
sub
pop
push
iret
outsl
add
loope
fwait
push
leave
mov
sti
add
decl
pop
dec
xchg
push
int
jmp
cwtl
shlb
aam
mov
add
xlat
decl
fs
fwait
mov
cltd
mov
outsl
mov
rcl
roll
scas
mov
sar
incl
xchg
and
and
sti
mov
rcll
jl
or
mov
fcomip
je
out
mov
cli
aaa
sbb
std
lret
pop
sarl
pop
and
mov
decl
out
dec
and
mov
inc
sbb
test
mov
repz
hlt
mov
lods
sar
incl
and
mov
jae
scas
jae
push
sahf
shl
pusha
pushf
and
decl
mov
dec
popf
and
inc
js
push
aas
stos
loop
mov
rep
mov
mov
std
dec
fsub
jo
pop
mov
in
bound
or
mov
std
adc
adc
inc
jg
pushl
fisubl
push
rol
mov
scas
lret
or
fcomi
bound
mov
lock
jmp
daa
js
push
xor
movsl
out
fwait
sub
pop
xchg
in
jne
adc
push
xchg
pop
loope
mov
decl
add
rclb
outsb
leave
dec
cmp
int
test
je,pn
pop
popf
outsb
cmp
inc
out
int3
lods
rcr
aaa
aas
cld
and
pop
repz
mov
in
jg
arpl
jmp
sub
jl
icebp
and
hlt
mov
inc
mov
mov
dec
sub
out
clc
pop
inc
or
outsl
incl
cld
ss
shl
movsb
out
xchg
test
fisubs
notl
clc
decl
or
loopne
jmp
lret
cmp
adc
or
std
jmp
mov
pop
pop
mov
test
sbb
fwait
dec
cmp
int3
mov
incl
dec
fdivp
pop
mov
fwait
ss
jns
in
or
pop
icebp
inc
incl
loopne
xor
imul
into
adc
adcb
in
jg
inc
cld
add
mov
enter
sbb
jecxz
dec
mov
lret
je
inc
mov
push
pop
pop
jle
vmulsd
movsl
push
add
int3
and
jg
pop
inc
jo
sbb
pop
ja
js
push
loop
xchg
cmc
mov
mov
test
mov
mov
pop
push
inc
sub
pop
xchg
push
loop
xchg
mov
mov
push
addr16
std
pop
sbb
adc
call
jo
nop
stc
xor
mov
jnp
cmpsl
test
cmpsl
push
incl
pop
dec
fcmovnb
ror
xor
call
xor
pop
push
stos
and
incl
mov
xchg
je
ljmp
mov
cmpb
jmp
mov
push
push
sub
hlt
rcll
movsb
lcall
xchg
mov
adc
add
jno
int
inc
add
je
addb
cmp
xor
lret
dec
lock
incl
and
mov
adc
cmc
sub
xor
mov
or
shl
xor
or
sbb
lret
jne
dec
xchg
scas
cli
out
scas
mov
push
outsl
mov
sti
aas
mov
hlt
sub
into
push
jmp
jg
or
pop
xchg
inc
mov
fcomip
test
stc
lea
pushl
add
jecxz
add
push
add
jno,pn
xchg
test
call
popa
pop
jg
jp
vmaxsd
add
testl
xor
ss
aam
push
pop
ret
fdivrl
jno
mov
sahf
push
pop
cmp
aas
mov
sbb
adc
adc
and
push
pushl
adc
pop
icebp
dec
or
inc
les
mov
inc
in
imulb
add
iret
scas
loop
fnstcw
stos
sbb
insl
dec
iret
std
jle
in
aam
dec
mov
mov
fcomp
or
and
pop
pop
cltd
inc
or
inc
popa
stc
xchg
pop
daa
leave
mov
hlt
decl
push
mov
xchg
or
lods
mov
stos
jecxz
xchg
sbb
subb
lret
icebp
call
inc
mov
push
lea
jne
rolb
dec
movl
pop
and
fists
sar
xor
xor
test
loopne
or
jb
pop
pushl
adc
lods
shr
aad
test
or
add
cmp
xchg
fldcw
call
stos
dec
fs
xor
add
and
inc
adc
rcr
mov
jns
jg
sahf
mov
adc
or
ret
cmpsl
cmp
movsb
idivl
xor
cmp
dec
push
daa
inc
test
stos
cmp
addr16
lds
mov
aad
lcall
aaa
cmp
out
test
pop
pop
in
ljmp
jns
inc
js
mov
push
call
lea
cmp
dec
jle
fldl
nop
inc
loope
jmp
ss
jge
dec
in
jmp
icebp
hlt
imul
shll
outsb
cmp
dec
fcom
sbbl
incl
push
fisttps
ljmp
addl
mov
lds
jb
incl
jbe
int3
and
push
int
mov
cmp
dec
lds
add
fsqrt
push
or
mov
stos
cmpsb
inc
inc
call
adc
mov
inc
lods
cld
mov
decl
mov
or
pop
push
push
stos
mov
cmc
fcomps
out
pushl
mov
js
sbb
jecxz
insl
mov
js
lret
das
dec
pop
mov
notb
push
inc
les
leave
pop
das
aad
cmovge
xor
cs
pop
jne
adc
loope
in
or
push
push
pop
cld
incl
sti
and
addr16
jge
out
inc
imull
rclb
test
stos
jmp
mov
dec
imul
in
je
and
ret
negl
mov
push
out
or
ljmp
rclb
mov
xor
sub
sub
pop
mov
inc
add
repnz
movsl
adc
fprem
jno
mov
rcl
jns
add
aas
lahf
jb
inc
mov
push
pop
jg
stos
xchg
add
inc
pop
insb
adcl
ljmp
loop
inc
jecxz
iret
sahf
and
scas
outsb
pop
int
sbb
or
xor
mov
mov
jmp
mov
pop
cmp
lds
dec
fs
jae
mov
clc
pop
push
int3
filds
xchg
adcl
scas
lea
inc
push
mov
cmpl
pop
inc
cli
pop
ret
mov
xor
inc
std
mov
loope
aam
hlt
cmp
aad
xchg
xor
mov
in
jl
das
xchg
or
and
filds
xchg
in
lahf
inc
wrmsr
push
fwait
clc
fildl
stc
fistl
push
pop
sbb
lcall
pop
pushf
ds
call
stc
out
xchg
repnz
sub
pop
and
incl
sub
sub
test
push
jae
ret
and
inc
add
mov
enter
push
cltd
mov
sub
rorl
rclb
dec
cmp
ja
call
dec
push
add
pop
call
sub
or
test
shll
xchg
xor
sub
ljmp
inc
lds
mov
lock
shrb
pushf
jnp
add
sti
jp
gs
scas
mov
jmp
jmp
push
push
mov
jge
arpl
je
adc
popf
mov
fwait
lcall
mov
mov
out
mov
rcll
fxch
push
jo
or
jg
xchg
pop
push
mov
mov
or
adc
ret
add
sbb
ds
adc
add
sbb
mov
push
pop
mov
pushl
stos
les
sbb
shll
xor
sbb
hlt
push
loope
pop
mov
xor
jecxz
call
cltd
imul
adc
sbb
rolb
or
sti
mov
iret
pop
loope
add
xchg
decl
mov
xchg
je
pop
push
testb
push
popf
fnsave
mov
inc
or
jmp
and
inc
sarb
jno
mov
add
dec
fcomps
mov
xlat
inc
dec
incl
aas
adc
lcall
sahf
xor
sub
call
mov
fnstcw
jnp
inc
outsl
idiv
xchg
jmp
pusha
xor
popf
or
mov
jg,pn
push
adc
incl
push
pop
int
sub
jle
pop
xchg
or
das
adc
adc
lcall
jb
jmp
pop
inc
fucom
pop
out
mov
xor
inc
shrl
sti
jno
jns
jl
pop
rolb
fnstcw
ret
movsl
lods
popa
jns
lea
xchg
inc
cld
mov
sbb
stc
and
call
imul
sti
fs
mov
ror
cmp
adc
mov
adc
lea
incl
push
xor
mov
xor
mov
int
je
mov
stos
lret
push
mov
cmp
and
ss
inc
sarl
mov
call
shrl
roll
or
cltd
adc
xchg
pop
arpl
dec
mov
ljmp
push
xor
bound
scas
cs
sbb
xchg
inc
hlt
lea
arpl
xchg
call
aam
dec
out
cld
adc
pushl
into
jge
mov
fcmovbe
xor
scas
out
lock
push
add
out
add
js
int
pop
call
cld
pop
adc
jge
sub
lcall
sbb
dec
jnp
jg
scas
cli
pushl
ljmp
lahf
scas
pop
or
test
inc
repnz
adc
sbb
clc
call
sbbl
hlt
dec
loopne
mov
inc
test
adc
push
ljmp
into
mov
add
pop
inc
out
cmpsb
push
ficompl
test
push
lds
jg
in
push
add
or
mov
pop
stos
and
mov
loope
add
inc
add
out
cld
sub
or
push
xor
les
out
mov
fcos
das
mov
jbe
xchg
sub
fdivr
ja
cmp
jecxz
jle
movsb
loopne
pop
inc
cs
cltd
roll
mov
and
push
cwtl
shl
or
ljmp
jno
pop
xchg
sub
ud0
mov
jecxz
pop
mov
test
in
mov
call
mov
movsb
mov
jmp
out
mov
out
shlb
mov
popf
mov
push
adc
out
fimull
jmp
jp
mov
jmp
mov
jecxz
sub
mov
xchg
out
jmp
ljmp
mov
adc
push
pop
cmpsb
cld
push
ss
lcall
in
test
mov
mov
scas
sbb
fidivrs
dec
xchg
incl
mov
scas
roll
and
mov
mov
icebp
mov
ljmp
add
cmp
mov
add
popl
pushf
mov
xchg
loop
cmp
pushl
xchg
push
and
mov
fdivr
and
push
in
mov
pop
ds
call
jb
jo
mov
mov
into
and
das
pop
jbe
inc
jecxz
jae
cmp
pop
cmc
dec
sbb
lea
xor
cmp
inc
xchg
sbb
jg
lcall
mov
ret
mov
dec
cmc
jle
add
lods
xorb
incl
cmp
and
out
scas
pop
cmp
mov
cmp
arpl
inc
ret
decl
call
lods
dec
sahf
push
std
test
data16
cwtl
js
xchg
call
xchg
cmp
fucomi
adc
sub
imul
or
loope
test
or
fidivs
inc
jp
pop
call
mov
imul
incl
leave
out
jecxz
pop
inc
cmc
or
jbe
push
push
and
xor
sub
mov
call
icebp
cmp
ss
xor
icebp
adc
ret
rcll
das
pushl
stc
sub
hlt
daa
jge
cmp
lret
inc
cwtl
jl
xchg
xor
icebp
lcall
cmc
xchg
cmc
fucomp
xlat
xlat
and
pop
mov
pop
mov
add
sbb
cld
pop
push
outsb
in
or
fmul
clc
dec
sbb
mov
shlb
movsb
xchg
inc
les
jg
leave
cmp
xchg
add
xor
imul
std
xchg
mov
inc
js
sbb
fisubrs
outsb
negl
inc
and
decl
push
test
sarl
test
sbb
push
dec
repnz
fadds
jmp
scas
dec
ret
mov
adc
shr
scas
or
mov
rcll
in
stos
jae
addr16
ds
incl
pop
jge
xchg
add
and
ss
adc
sub
call
adc
sub
adc
xchg
aad
rcll
or
jg
mov
repnz
pushf
and
lds
push
pop
jge
fdivr
ljmp
cmp
mov
stc
xorl
mov
inc
mov
xchg
push
decl
test
out
xor
lds
lea
mov
dec
xlat
cmp
call
dec
cmp
sbb
mov
cmp
cmpsb
lods
adc
and
ljmp
jae
adc
mov
aad
rcrb
rolb
int3
arpl
dec
orb
call
loope
fnstsw
or
cmp
ret
orl
leave
push
js
or
add
dec
and
cwtl
ret
cmc
fnstsw
xlat
push
push
enter
in
or
mov
aaa
pop
mov
into
decl
lock
les
add
shlb
dec
inc
stos
test
stos
icebp
pushl
lahf
pop
add
pop
or
mov
jae
pop
add
mov
lcall
lea
testl
pop
jp
jg
outsb
andl
rcr
dec
insb
addb
incb
jae
dec
mov
adc
add
add
lock
incl
cld
lcall
dec
mov
in
popa
aam
xor
lahf
cltd
incl
fidivl
dec
fsubr
in
in
sub
call
mov
lcall
ljmp
lods
or
mov
jecxz
lret
aam
ljmp
movsl
test
pop
shr
in
lock
mov
mov
pop
int3
das
dec
call
inc
aam
addr16
negw
jmp
xchg
fldenv
into
decl
or
insb
inc
cmp
mov
dec
aas
leave
fwait
dec
aas
inc
cld
es
xlat
incl
xlat
adc
or
jg
cmpl
cmp
loop
mov
pushl
jnp
mov
and
mov
mov
jmp
add
pushl
test
int
add
call
jnp
les
xlat
cld
pop
mov
bound
loop
arpl
daa
and
ljmp
loop
ds
push
mov
arpl
stc
pop
sbb
adc
ret
nop
jl
jae
sub
mov
insl
ljmp
mov
jns
pop
jle
jecxz
pop
and
xor
mov
stos
fwait
sub
pushl
mov
jp
jo
lahf
pop
xor
xchg
push
lahf
and
mov
jae
cmpsl
jnp
adc
inc
dec
aam
sar
push
repnz
jge
movsl
mov
repz
dec
push
add
out
fcmovnu
jmp
mov
adc
sub
popf
mov
ficompl
in
movsb
or
inc
and
pop
jecxz
js
or
sub
out
xchg
shlb
fsubrl
jo
push
roll
mov
inc
xchg
jo
fs
test
pop
cmpsb
lock
xor
mov
and
fwait
mov
mov
dec
mov
inc
gs
jne
dec
push
std
or
ds
sbb
adc
test
mov
push
xor
outsb
mov
pop
stos
insl
fwait
popf
dec
daa
inc
xor
arpl
popf
xor
adc
imul
mov
int3
fcomps
xor
mov
mov
test
mov
xchg
jno
jne
movsb
xchg
and
mov
mov
lcall
add
mov
pop
adc
pop
mov
js
jo
test
sub
cli
jmp
stos
pop
insb
sub
push
scas
les
push
xlat
pop
mov
xchg
movsb
cld
cli
ret
pextrw
cltd
cmp
jbe
pop
jl
add
mov
xchg
mov
rorb
lret
clc
pop
int3
test
xchg
adc
decb
shll
orb
jl
enter
fsts
or
add
jmp
mov
loop
push
lahf
push
mov
adc
test
clc
mov
and
ss
xor
inc
ffreep
stc
or
lods
loopne
out
mov
inc
stc
repz
lock
rclb
mov
popf
inc
test
out
mov
and
inc
out
push
ret
xor
imul
test
pop
icebp
lcall
into
push
ffreep
aas
clc
inc
cmpsb
ljmp
sbb
add
mov
pushl
or
mov
xchg
dec
xchg
fstpt
mov
xchg
mov
xor
sbb
jge
dec
ljmp
adc
mov
sbb
fs
dec
push
les
idiv
std
add
pop
das
stos
iret
push
inc
iret
fnstenv
xor
dec
aaa
pop
jge
adcl
jmp
inc
imul
push
fidivrl
in
xchg
jb
aam
stos
and
outsb
in
mov
dec
adc
xor
mov
ss
inc
ret
jbe
out
lcall
fbld
push
jecxz
push
lods
clc
loopne
stc
nop
lock
jg
xchg
ret
xchg
cs
xchg
into
sbb
cmp
mov
cmp
flds
fistpll
iret
cmp
mov
sbb
pop
insb
scas
aas
shrb
bound
lcall
js
int3
testb
loop
test
pushf
outsl
add
inc
cmpsb
push
jmp
loopne
pushl
ror
cmp
repz
loop
addr16
lahf
xchg
je
mov
push
cmp
cmpsl
adc
mov
add
pushf
push
outsl
jle
cltd
xchg
inc
mov
or
fnstenv
insb
jle
scas
in
jae
mov
scas
gs
and
pop
outsl
pop
outsb
dec
pop
fistl
xchg
dec
jg
stos
adc
ss
mov
adc
dec
cs
stos
push
std
push
jnp
leave
test
enter
fmuls
or
les
sub
dec
ss
decl
in
clc
das
mov
pop
mov
mov
pop
push
jl
fildl
cwtl
jne
push
pop
push
fstps
jg
pushl
xchg
mov
mov
or
add
jno
add
shl
hlt
cmp
lcall
sbb
pop
pop
mov
lods
lea
add
sbb
mov
incl
mov
insl
push
or
jb
ret
and
addr16
and
sti
lock
xchg
mov
nop
into
mov
loope
pop
mov
xchg
imull
les
imul
push
inc
rorl
cmp
xchg
sub
fiaddl
ljmp
jge
stos
jns
sbb
icebp
jno
pop
push
jno
call
mov
iret
or
out
mov
inc
jb
ret
pusha
push
hlt
add
ljmp
movsb
and
adc
add
jl
call
push
fs
mov
aaa
mov
stos
jp
sbb
push
sub
iret
fcoms
sahf
pushf
fbstp
outsl
icebp
loope
cmc
rorb
shll
inc
adc
push
xchg
xor
loope
xlat
fildll
pop
xlat
stos
mov
dec
pop
adc
pusha
jecxz
lret
inc
dec
mov
call
out
mov
pop
add
mov
in
mov
add
pop
ljmp
arpl
sbb
idivl
mov
lahf
loope
xchg
pushf
dec
mov
out
int3
jecxz
inc
xchg
cltd
jl
into
mov
bound
sbb
mov
pop
and
sub
out
lea
dec
add
inc
or
and
stos
orb
movsl
sbb
sbb
loop,pn
jmp
xor
aam
cmp
jg
cmc
mov
cld
lcall
pop
cmpsl
dec
push
adcl
scas
in
repnz
mov
fdivrp
add
and
iret
add
ljmp
sub
scas
test
stc
push
fistps
cmpsb
pushf
push
mov
mov
in
cmp
addl
popf
or
sub
mov
dec
dec
mov
xchg
inc
sbb
jo
not
push
jne
add
pop
lock
mov
inc
fidivl
xchg
xlat
dec
pop
lcallw
cmp
mov
cli
lret
adc
std
sbb
daa
rcr
push
xchg
jl
lret
call
pop
pop
shrb
pop
fidivs
xchg
mov
mov
dec
popf
mov
ljmp
test
pushf
adc
sbb
loop
inc
pop
aad
mov
xor
sub
sbb
das
test
pop
pushf
or
icebp
inc
cmp
ret
stc
arpl
add
lods
fidivrl
call
sar
ds
notl
mov
aas
ret
pop
xor
xchg
mov
out
popa
aam
lcall
icebp
ljmp
rorl
push
cmp
pop
sti
pop
push
cmpsb
stos
cs
decl
lock
push
js
mov
test
rorl
jae
ljmp
popf
in
xor
inc
cli
fsubrs
push
lahf
shrb
push
add
roll
call
stos
testl
mov
insb
loop
pop
pop
cltd
es
testl
mov
in
push
mov
xchg
dec
shrb
iret
add
dec
int
incl
stc
repz
roll
insl
js
fxch
dec
addb
add
out
cmp
and
mov
push
lods
cmpsb
mov
add
fsubr
or
lret
scas
es
int3
cld
and
dec
pop
in
popa
cld
xchg
lock
push
jmp
sub
cmp
inc
out
push
inc
loope
xchg
dec
fbstp
shll
push
daa
and
adc
push
pop
or
jecxz
dec
xor
aaa
inc
push
cltd
jmp
lret
jne
and
ljmp
lods
cmp
dec
and
inc
inc
xor
sbb
add
fs
or
incl
das
sub
in
pop
sbb
cmpsl
aad
mov
jge
loope
push
decl
mov
add
in
push
push
mov
dec
inc
pop
sub
ret
lahf
into
pop
lcall
sbb
ds
mov
dec
bound
std
push
addb
push
enter
aaa
adc
mov
lcall
int
pop
inc
idivl
mov
cmc
cmp
stos
fcoms
pop
xlat
iret
mov
call
cld
add
scas
xchg
xchg
xor
jl
pop
mov
test
fcomps
jl
mov
pop
out
outsb
scas
cmp
mov
mov
or
xlat
loopne
fdivr
jmp
sbb
insl
dec
jb
pop
aaa
pop
xor
inc
fsts
and
add
or
add
push
sub
jp
sahf
push
inc
inc
sbb
aad
push
pop
outsb
dec
add
decl
fcmovnbe
sbb
sbb
pop
lcall
decl
sub
mov
inc
mov
mov
push
dec
lcall
mov
in
out
rcr
sbb
popf
pop
cmc
push
jnp
mov
outsl
fs
mov
push
test
aaa
std
decl
mov
and
in
leave
push
inc
movsb
or
fwait
or
pushl
scas
lds
iret
jg
push
dec
mov
dec
rcrl
dec
lods
call
mov
jb
pop
in
fbld
xchg
in
jo
dec
mov
lcall
frstor
lock
flds
add
mov
insb
and
mov
leave
sub
sbb
or
jmp
push
cmpsb
sbb
icebp
dec
and
cmp
jp
stos
cmp
call
rorl
mov
lds
push
and
cmpl
sbb
inc
adc
xor
ljmp
inc
decl
mov
test
subl
scas
or
sti
pop
fidivl
fidivl
pop
mov
mov
mov
xchg
xchg
lcall
movsl
mov
movsl
jmp
xchg
loopne
lcall
incl
mov
lret
cmpsl
nop
dec
or
push
cmp
push
mov
lcall
inc
scas
push
mov
cli
gs
shufps
addr16
jmp
jno
rcrb
and
movsb
push
xor
ljmp
push
jmp
push
xor
or
fwait
jns
mov
push
scas
leave
pop
in
pop
mov
mov
jbe
xchg
push
mov
inc
arpl
mov
mov
push
out
pop
mov
pusha
decl
daa
test
pop
in
xchg
adc
out
insl
in
cmpb
mov
pushf
mov
sarl
sbb
cmp
xor
lahf
mov
dec
jge
mov
mov
cli
sub
push
pop
cmpsl
push
mov
jne
sub
xchg
out
out
cmp
mov
or
adc
xchg
or
push
jb
add
xor
and
and
jmp
pusha
stos
rcrb
mov
hlt
pushl
xor
fisubs
jo
test
lock
lcall
push
adc
fstpt
into
push
mov
fwait
xor
incl
lds
add
into
sbb
or
mov
mov
in
cmp
ljmp
cltd
xchg
or
push
sub
mov
sub
aam
sub
mov
mov
sbb
nop
push
xor
mov
dec
push
fisubs
aam
popf
cmpsl
loop
xor
push
cli
mov
fnstsw
js
sahf
idiv
int
mov
mov
aaa
xchg
aad
pop
sub
jmp
cwtl
mov
ss
mov
push
or
imul
adc
cmp
jns
lahf
iret
test
pusha
js
incl
jmp
test
ss
sub
jns
xchg
sub
sub
pushl
fsubs
xchg
dec
aad
cmp
pop
pop
push
arpl
push
add
mov
mov
jmp
es
aad
test
push
cmp
out
mov
aas
clc
test
and
push
fmull
sub
xchg
and
fmul
jp
fistpll
jmp
out
shrb
mov
jnp
dec
xor
sub
mov
outsl
jle
sub
xchg
sub
lcall
nop
sub
mov
cmc
adc
pop
cld
movb
xor
repnz
mov
decl
iret
xor
rcr
addr16
ja
push
ficompl
add
mov
jno
scas
sub
incl
mull
pop
and
gs
inc
lret
xchg
jmp
dec
clc
mov
cmp
in
push
xor
jl
mulb
and
sbb
testl
sub
and
mov
fisttpl
sar
inc
adc
cmp
pushf
cld
fs
stos
into
jg
dec
ja
or
stos
jl
call
push
in
jmp
in
test
mov
int
xor
sbbb
bound
mov
dec
dec
sbb
out
mov
repnz
pop
or
mov
lret
test
dec
repz
and
cmp
xor
ja
push
idivb
xor
inc
xchg
mov
cmp
mov
in
pushf
rcr
sub
xchg
lds
test
sbb
decl
cmp
mov
push
add
orb
push
jo
outsl
sub
mov
hlt
or
sti
popa
dec
or
aad
pop
ret
loope
fxch
jbe
fisttps
mov
cmp
lahf
stc
adc
jle
lock
ret
dec
pop
xchg
clc
xchg
pop
mov
les
decl
push
and
mov
fdivs
pop
dec
mov
ja
lcall
ljmp
or
lret
jecxz
sti
movsl
outsb
push
xor
addr16
push
icebp
xor
jecxz
incl
jmp
jo
fidivrs
lods
aas
or
pop
xor
imul
mov
push
and
mov
popf
movl
movsb
gs
xchg
mov
and
out
outsl
je
pop
dec
jnp
push
pop
xor
xchg
or
imul
mov
inc
adc
test
faddl
lods
xor
adc
add
sub
cs
xchg
pushl
addr16
sub
test
or
outsb
adc
inc
sub
mov
data16
add
push
push
or
mov
xchg
stos
test
fucomi
sub
dec
rolb
sbb
mov
jmp
dec
aas
xchg
mov
test
scas
dec
add
mov
sub
imul
mov
lret
sbb
jecxz
dec
aad
push
fsubrs
sbb
mov
sub
mov
push
dec
mov
mov
mov
xor
andb
and
decl
mov
jge
pushf
xlat
mov
cmp
fsubr
ljmp
call
xchg
imul
lahf
inc
cmc
xchg
fisubs
mov
add
negl
aas
pushl
stos
mov
pushf
and
mov
aas
dec
lods
imul
enter
pop
lock
jmp
icebp
fcmovu
rol
inc
lahf
or
push
rcll
mov
call
ljmp
ds
pop
xchg
fldl
cmc
mov
cmp
ljmp
test
imul
mov
out
dec
sub
pop
test
jge
cwtl
sbb
dec
leave
ds
sbb
xor
xor
stos
movsb
dec
dec
pop
in
jns
pop
push
pusha
inc
outsl
clc
mov
in
inc
push
es
sbb
xchg
movsb
lcall
int
loope
inc
cmp
push
inc
adc
ljmp
mov
pop
std
aaa
cmp
insl
dec
jae
inc
flds
push
ljmp
call
cld
or
or
pop
fwait
out
lcall
mov
add
call
gs
push
cmpsb
loope
sbb
mov
sbb
test
lods
mov
imul
jae
inc
mov
lret
lret
and
inc
jl
fistps
jg
lea
lret
push
xorb
push
pop
dec
addb
jmp
shlb
add
adc
jbe
cmpsb
sbb
sub
ljmp
pop
or
push
lods
mov
pop
fcomip
xor
fsubr
stc
sbb
int
addr16
mov
xor
idiv
jge
mov
and
jmp
inc
jno
jne
lcall
mov
fs
ljmp
mov
nop
gs
cmpsb
pusha
jl
fcomps
mov
repnz
pushl
roll
jae
mov
loopne
int
test
into
adc
aam
pop
outsl
das
les
insl
fisubrl
cmp
cli
push
pop
or
stc
aas
jecxz
into
mov
push
mov
in
add
mov
jne
test
out
pop
push
adc
ja
insl
pop
bound
sub
call
adc
and
ja
or
xchg
jge
ljmp
inc
sarl
xchg
cmpsb
icebp
mov
mov
mov
jne
dec
scas
data16
ljmp
jecxz
lea
push
lods
dec
pushf
adc
add
ja
imul
cmpsb
inc
cmpsl
fs
pushl
sahf
xchg
orb
cltd
fistps
jg
icebp
add
ja
dec
mov
and
xor
add
push
inc
cmp
notb
push
call
xor
jl,pn
outsl
mov
pushl
mov
push
xchg
jae
stc
dec
push
fwait
or
fildl
xchg
inc
pop
sarb
mov
mov
push
inc
xchg
es
mov
push
xchg
pop
pop
mov
outsl
clc
pushl
leave
mov
loopne
mov
jb
fs
fwait
push
lcall
jmp
and
jge
ss
ret
pop
gs
ret
jae
xchg
cmp
xor
cmp
clc
pop
pushl
mov
iret
lock
jmp
dec
fucompp
je
jae
call
int
rcrl
int
sub
incl
push
movsl
cs
stc
mov
xor
loopne
test
inc
dec
add
cld
jmp
push
jl
cld
adc
sbbl
fbstp
fcomi
lcall
addr16
mov
xchg
lret
call
or
jg
loop
in
sub
cmp
sbb
xor
or
xchg
sbb
pop
inc
cmc
dec
movsl
jmp
outsb
mov
ljmp
fstps
and
mov
das
std
inc
imull
stos
aad
mov
aam
hlt
jge
scas
mov
fistpl
adc
mov
stos
stos
xor
mov
out
orl
and
ljmp
mov
push
mov
mov
movsb
sbb
jg
addr16
adc
decl
jno
mov
jo
lcall
daa
xor
not
push
dec
push
xchg
ficoml
cli
out
push
inc
sbb
jno,pt
push
mov
insb
and
xchg
jp
sti
inc
add
mov
faddl
fdivrl
fucomi
js
js
jns
imul
inc
sahf
jp
js
mov
aaa
lcall
mov
inc
jmp
add
push
dec
fcos
cmp
popa
cld
sqrtps
cmpsl
xchg
cltd
mov
in
xchg
loope
push
lcall
call
stos
stc
movsb
sub
sbb
sub
lcall
and
mov
ficomps
test
cmc
scas
es
push
or
jmp
ljmp
icebp
mov
cmc
loopne
jg
xchg
xchg
ret
pop
pushf
popa
aam
shr
mov
sarl
inc
cld
mov
or
sbb
jae
loop
lcall
pop
sarl
jns
or
sub
mov
sti
seto
call
sbb
in
stos
sub
imul
fs
iret
pusha
add
aaa
cld
decl
dec
push
mov
pop
xor
cmp
jnp
cmp
lods
jp
push
pushl
clc
or
mov
pop
gs
leave
adcl
xchg
clc
inc
pusha
ljmp
imul
pop
add
and
fnstenv
pop
dec
jnp
repz
sbb
lret
test
sahf
in
jmp
jle
stos
mov
mov
xor
sbb
inc
jecxz
je
sbb
clc
mulb
push
cmpsl
ljmp
fwait
pop
test
or
outsb
jns
xchg
mov
inc
lret
jge
cld
mov
loop
push
add
mov
bound
dec
cmp
mov
push
rcrb
or
clc
fst
in
das
dec
insl
rcrb
jb
sbb
dec
pop
inc
lcall
add
push
mov
lahf
fldl
aaa
add
gs
push
call
jg
jne,pt
repnz
sub
and
xlat
lds
pop
nop
clc
popf
lds
dec
adc
xchg
mov
mov
fwait
mov
icebp
xchg
popf
fmul
pop
cli
je
lret
sub
or
push
pop
mov
loope
jmp
push
or
decl
enter
cmp
xchg
aaa
adc
jle
mov
mull
aad
divb
sbb
cmp
cmp
les
aas
push
dec
js
test
jae
cmpsb
jno
push
mov
loope
mov
js
clc
jmp
cmpsl
mov
popf
add
std
aad
js
and
in
stos
cli
fbstp
mov
xor
adc
inc
notl
les
pushl
scas
push
adc
fnstcw
je
or
push
fwait
test
lahf
and
lcall
cmp
movsl
adc
cmpsl
mov
dec
stos
sbb
jg
push
daa
inc
push
sub
mov
ror
mov
jmp
loopne
mov
sahf
push
icebp
and
pushl
inc
push
pop
fwait
xchg
mov
repnz
and
jl
das
sbb
push
lea
mov
ret
call
loope
adc
xor
lahf
es
nop
xchg
aam
jb
pop
dec
jne
pop
jge
hlt
jp
idiv
mov
popa
ja
aam
out
sbb
repz
mov
xchg
ds
js
mov
ljmp
jno
dec
xor
sub
daa
xchg
or
and
dec
xchg
push
sub
fiadds
cmp
sub
push
loopne
sub
and
out
out
push
fdivs
and
cmpsb
enter
loope
push
cmp
mov
fdivr
jg
stos
repnz
mov
mov
pusha
sbb
lea
mov
movsb
inc
adc
je
jmp
enter
out
sub
push
push
push
aad
mov
lret
ret
mov
jmp
cmp
imul
js
insl
cmc
jge
or
ret
imul
or
jmp
mov
inc
push
xor
jb
pop
ret
call
cld
ljmp
lret
sbb
das
push
imul
and
cmc
inc
sbb
sub
aam
dec
fwait
jnp
gs
jb
inc
popf
mov
movsb
mov
loop
cmc
push
or
inc
cwtl
cmpsb
arpl
insl
inc
aad
aam
fcomps
loope
call
adc
repnz
jle
pop
jge
out
sub
movsb
mov
outsb
pop
mov
bswap
mov
decl
gs
cli
push
iret
adc
jecxz
scas
scas
ret
scas
das
lcall
lahf
add
hlt
sahf
xchg
decl
fwait
sbb
cmp
adc
lea
sub
mov
pushl
xor
fdivrp
push
test
cmpsl
dec
sbb
imulb
push
loop
push
add
pushl
jns
push
adc
cli
jno
int3
fmul
cmpsl
icebp
push
outsb
jl
out
xor
jmp
and
push
sahf
mov
insl
cmp
rolb
mov
cmp
jo
and
aas
and
movb
jbe
jmp
jo
jp
mov
daa
jg
sbb
mov
push
ss
popa
mov
je,pt
cwtl
orl
inc
mov
bound
mov
fidivrl
cli
loope
into
cltd
rorl
in
cltd
fs
or
jbe
sub
lock
mov
shl
and
call
stos
clc
push
rorl
and
add
out
aad
out
je
std
xchg
test
add
lcall
add
clc
cmp
in
rcl
sbb
cmp
inc
pushl
ja
sub
xchg
ljmp
sar
sub
sbb
inc
das
in
mov
mov
call
cmp
js
arpl
dec
inc
xor
iret
mov
mov
lcall
hlt
arpl
mov
pop
mov
scas
fsts
jl
pop
jne
mov
pusha
add
ja
push
jecxz
adc
sbb
popf
mov
call
push
je
jp
mov
sub
fbld
mov
ror
or
add
xchg
and
aad
incl
sahf
out
jmp
out
pop
pop
imul
sar
jg
loop
mov
cmp
lea
outsb
dec
addr16
sub
jbe
mov
mov
pop
xchg
xor
cmp
mov
loop
lcall
push
xchg
stos
jmp
outsb
test
adcb
cmp
mov
jmp
pop
mov
push
lcall
jmp
inc
loopne
add
push
pop
xor
cld
dec
out
mov
xchg
out
lock
mov
test
cmp
lcall
stc
cmpsl
dec
call
push
pextrw
outsl
jge
mov
pop
dec
clc
mov
jbe
mov
incl
fsubs
fs
in
inc
add
nop
call
std
push
mov
jmp
pushf
mov
add
add
jl
test
call
jbe
in
inc
mov
ss
add
vcmppd
lret
pop
jp
cs
xlat
je
dec
mov
daa
xchg
sbb
cmpsb
mov
repnz
mov
push
lock
pop
push
stos
cmp
cmp
add
push
stos
xlat
and
add
call
or
xor
ret
mov
cmp
mov
sti
inc
es
cmpsl
hlt
dec
inc
es
clc
pushf
sbb
mov
mov
jo
aam
push
add
fldt
inc
ss
pop
gs
dec
fs
repz
cmp
xor
xor
push
decl
or
cmpsb
hlt
sbb
daa
sbb
mov
outsl
xchg
lret
outsl
clc
int
je
mov
jle
incl
lcall
mov
loope
ds
xor
or
scas
mov
mov
in
loope
cmp
cli
imul
push
hlt
nop
leave
push
or
ss
negb
jnp
and
out
clc
jns
push
mov
fcmovbe
xchg
or
adcl
pop
mov
dec
incb
fsts
xchg
ds
repz
aaa
mov
outsl
or
xchg
pushl
int
inc
dec
je
dec
fs
lock
inc
icebp
aas
shrl
xchg
mov
lcall
xchg
shlb
add
aad
push
in
add
xchg
adc
mov
mov
enter
gs
fs
mov
mov
jae
or
mov
adc
jg
dec
in
loopne
mov
mov
out
or
mov
xor
test
cmp
rclb
shr
fisttpl
lock
fcmovu
mov
sbb
fwait
inc
lret
mov
call
into
adcb
jl
adc
in
mov
es
les
loopne
lcall
sbb
pop
out
outsl
jmp
jae
push
aad
repnz
out
xchg
test
rclb
loope
lret
xlat
and
decl
adc
movsb
push
pop
test
cmpsb
pop
out
scas
ljmp
iret
push
mov
jg
fnstsw
testl
fmuls
inc
fs
int3
add
ljmp
and
shlb
loop
sbb
mov
push
pop
pop
movsl
jg
push
add
outsb
cmpsl
cmp
vpsrlq
dec
push
fnstcw
fwait
shrb
repz
incl
cmp
int3
outsb
dec
xor
daa
sbb
add
pop
sbb
mov
mov
dec
jp
add
mov
push
inc
cmp
outsb
in
lods
cmc
ljmp
dec
fisttpll
xorb
add
mov
fcompl
lcall
call
mov
lret
dec
out
lea
or
nop
push
sbb
lods
lds
push
ljmp
and
cmc
icebp
inc
test
push
and
jecxz
mov
ljmp
inc
jp
or
push
lret
jmp
jne
and
cmc
xchg
popfw
pop
push
or
incl
repz
xor
xchg
lret
sbb
pop
jle
and
inc
push
adc
int
cmp
xchg
fadds
loop
loope
popf
xor
es
call
std
scas
or
lods
xchg
sbb
lcall
lret
fldcw
imul
jno
mov
ja
jecxz
loop
das
push
and
sti
jne
sub
in
decl
xchg
dec
adc
lret
clc
lods
push
xchg
bound
dec
cmp
pushl
jo
mov
xchg
mov
hlt
jecxz
repnz
push
out
sbb
cmc
push
add
cmp
cmpsb
in
test
jbe
jl
inc
jge
sbb
cmp
mov
add
xchg
fists
xchg
mov
inc
pop
stos
outsl
lds
popf
pusha
insl
cltd
rcll
lret
sbb
pop
nop
jle
call
add
mov
sbb
add
js
sbb
mov
imul
inc
pop
iret
dec
orb
push
lods
decl
out
out
jmp
out
je
pop
or
repnz
and
inc
cmp
popa
jle
and
inc
scas
movsl
pop
cmp
sbb
into
cmp
shlb
mulb
out
nop
add
dec
push
test
incl
pop
out
clc
scas
in
clc
and
rolb
sahf
push
pop
shrl
sbb
jecxz
inc
incl
lret
dec
jae
into
pop
mov
dec
push
add
cmpsl
icebp
nop
sqrtps
jne
in
call
shrl
mov
mov
lock
adc
std
aad
test
idivl
jge
cmp
bnd
add
mov
sub
std
out
xchg
int3
and
sbb
cmc
call
daa
rcrb
pop
lahf
cmp
dec
mov
cmp
ljmp
xor
imul
lods
pop
dec
lods
hlt
dec
sbb
or
popf
or
fimull
call
pop
or
nop
cwtl
lret
xchg
inc
cmp
fldl
mov
sbb
sub
jg
jns
stos
or
out
ljmp
cmp
stos
sub
pushf
cmp
orb
push
xor
int3
pop
inc
movsl
push
mov
jne
jle
lcall
mov
pop
cmp
push
fmull
jge
inc
push
out
sub
sbb
jmp
loopne
sub
sbb
iret
lcall
std
decb
aaa
mov
mov
add
decl
pop
jne
out
out
xchg
dec
pusha
dec
insb
xor
shll
sbb
incl
or
repnz
aad
pop
fwait
dec
mov
loope
pop
mov
adc
lcall
scas
loopne
add
es
mov
adc
pop
adc
mov
iret
int
mov
pop
call
pop
imul
mov
xchg
cmp
mov
enter
sub
mov
test
ljmp
icebp
mov
mov
ret
add
cmp
mov
ljmp
pop
push
push
mov
push
loopne
push
push
repz
mov
push
icebp
stos
fsts
dec
fisubl
mov
cli
lcall
mov
mov
js
and
jns
cs
pushf
push
or
outsb
jae
test
add
jns
testb
mov
mov
mov
movsb
xor
jne
ss
jmp
pushl
cltd
or
orb
scas
adc
ljmp
shlb
sub
shrl
pop
idiv
shrl
pushf
sar
incl
test
fistpl
jne
scas
inc
dec
into
test
lahf
scas
add
xchg
test
ljmp
add
dec
adc
aaa
es
mov
fistps
fwait
imul
jecxz
test
in
mov
jmp
shll
movl
add
nop
roll
jmp
sub
hlt
inc
sub
loope
sahf
xchg
js
xchg
dec
xor
mov
call
lds
xchg
add
loopne
fldcw
cs
mov
pushl
stc
subb
aam
fdivs
cltd
loope
xor
jb
pop
xchg
fnstcw
call
sahf
ljmp
mov
cmp
cwtl
stc
and
cmp
loop
push
cmp
and
lret
out
sub
xchg
in
sbb
fwait
dec
std
xchg
lret
loopne
out
add
jecxz
repz
sbb
mov
gs
lods
stos
fdivrs
jmp
mov
xchg
fsubp
or
cmc
sbb
add
ret
scas
movb
pop
in
add
mov
mov
xchg
xchg
push
jb
sub
jo
das
cmp
call
pushl
or
jns
pop
sub
out
dec
xchg
cmp
jp
pop
mov
ret
aas
xchg
call
loop
mov
popa
ret
cmp
pop
clc
sarb
orl
out
iret
cld
lcall
cmp
jecxz
fisttps
sub
out
mov
aad
pushl
and
dec
pop
repz
push
stos
adc
shrl
cli
idivl
pop
jns
ljmp
test
dec
xor
rcrl
cmp
xchg
inc
insb
sbb
mov
mov
fwait
subb
add
cmpsl
scas
or
aaa
sbb
stos
cmp
decl
inc
out
sub
jns
mov
stc
mov
sahf
dec
push
sbb
movsl
insl
pop
shrb
shlb
cmc
xlat
mov
adc
aas
repnz
stc
aad
test
inc
cwtl
and
lret
dec
pop
mov
jmpw
fdivp
loop
fmull
jae
loop
popa
shll
jne
rcrl
cmp
sub
call
cmpsl
ret
fwait
enter
push
mov
sub
adc
imul
call
rcrl
lahf
push
aaa
push
push
movsl
and
in
es
pop
je
scas
sbb
loope
mov
mov
call
dec
or
cs
arpl
dec
nop
movsb
xchg
aas
fnsave
mov
pop
out
sbb
ja
dec
mov
cld
jp
nop
mov
movsl
test
push
mov
daa
repz
pop
add
jmp
xor
jecxz
add
int3
js
in
orb
mov
push
sbb
lds
fdivrp
pushl
sub
lret
int
loope
xchg
lret
mov
add
js
loope
mov
sub
adc
inc
mov
rcrb
jns
inc
mov
jae
fstps
mov
add
jg
pushl
int3
pop
xchg
fs
pop
idivl
jbe
les
xlat
push
lret
clc
incl
push
popa
mov
and
jno
nop
je
mull
cwtl
mov
lcall
out
popf
daa
push
mov
inc
mov
cmp
jle
loop
iret
add
fld
cli
xor
mov
push
outsb
sarb
loopne
ljmp
dec
cmpsl
stc
lea
insl
mov
push
mov
pop
xchg
mov
stos
mov
lcall
stos
dec
mov
in
ret
repnz
push
shl
jp
adc
push
movb
add
pusha
stc
dec
jg
ljmp
and
ds
pop
test
mov
rcll
jnp
adc
outsl
fcomip
push
enter
mov
nop
and
outsl
jbe
sbb
mov
insb
sbb
std
push
scas
pop
pop
add
fwait
cmp
cmp
add
lock
fnstsw
lock
lcall
mov
fwait
nop
inc
aad
and
jae
push
das
pusha
out
push
push
movsl
push
adcb
xlat
jg
pop
nop
lret
das
jmp
ss
xchg
mov
inc
notb
and
fidivl
lds
inc
inc
rol
cmp
rcll
mov
aas
pop
imul
sbb
loope
call
loopne
pop
imul
les
repz
andl
push
ljmp
je
sbb
popf
stos
cmp
addb
rclb
and
aad
adc
sub
inc
xchg
fistl
mov
mov
shrl
mov
xchg
dec
adc
call
in
ret
into
out
pop
push
cmp
pop
lea
enter
incl
sub
push
pop
popl
dec
push
dec
dec
es
pushf
mov
lods
pop
cld
push
sbb
lea
dec
in
call
jmp
xor
loop
push
mov
daa
fmuls
sbb
ja
rol
sti
dec
pusha
push
cmp
xchg
cmp
incl
test
inc
pandn
fidivs
ljmp
clc
ret
pop
sub
decl
dec
add
or
push
sbb
mov
call
inc
call
repz
pusha
gs
add
clc
or
dec
mov
mov
push
pop
rcl
into
push
push
in
sbb
cmp
out
mov
xor
mov
and
push
dec
scas
int
lods
add
inc
jl
mov
sbb
jno
inc
addb
or
pushl
test
cmp
mov
test
mov
mov
add
xor
adc
jmp
addr16
pop
mov
jp
pop
iret
in
jl
fwait
stos
ret
fmulp
sub
ret
mov
jmp
test
sbb
sbbl
subb
push
aad
rcl
int
push
lret
jge
decl
push
push
inc
jmp
fcmovb
mov
ss
je
shrb
push
loop
scas
cmc
push
push
icebp
jmp
push
fwait
pop
bound
subl
sti
xchg
daa
addr16
mov
rcrl
stos
lcall
or
fdivrl
mov
bound
hlt
xor
mov
hlt
sub
lds
in
push
jb
add
fwait
cltd
adc
add
or
lahf
addb
jo
ljmp
jb
lock
cmp
in
push
add
lcall
jge
push
test
pop
add
cli
pop
repnz
mov
les
adc
js
std
adc
sar
loop
movsl
pop
jo
mov
mov
inc
mov
call
cld
loope
or
add
pushl
push
mov
xchg
pop
xchg
and
cwtl
jno
rol
fistpll
xor
inc
scas
cli
addl
mov
jp
inc
aam
push
aam
fimull
add
ret
cwtl
inc
test
mov
sub
bound
mov
out
jle
lcall
in
xor
pop
mov
jne
xchg
dec
jge
fmuls
les
cli
pushl
and
push
mov
out
sahf
dec
adc
xor
ljmp
dec
xchg
in
jl
mov
icebp
rcll
sbb
mov
mov
pop
mov
push
mov
xor
dec
lahf
mov
jmp
sti
push
cwtl
adc
push
test
cmp
xor
pusha
sbb
ficompl
push
ljmp
jb
mov
cmpsb
lods
js
xor
inc
adc
shll
sti
and
outsl
test
mov
mov
jle
int3
fstl
les
push
jmp
xor
pushl
lds
pusha
cmp
sub
and
xor
dec
xchg
inc
lods
xor
mov
lods
incl
mov
js
es
jmp
addr16
loopne
sbb
fiaddl
lods
pop
shr
jo
xor
and
mov
pop
dec
lret
shll
in
decl
ljmp
dec
or
mov
lock
add
out
lahf
xor
and
mov
push
or
mov
push
popf
xchg
loop
sub
jmp
aaa
cmp
mov
adc
std
push
or
repnz
lea
cmp
lcall
pushl
in
les
into
lock
jnp
mov
cmp
out
repz
pop
dec
incl
jb
cmp
mov
or
or
xlat
adc
and
test
fcomps
decl
shl
pop
pop
jmp
add
lods
mov
pop
or
mov
aaa
scas
enter
mov
arpl
xchg
shl
xchg
dec
xchg
cmc
movb
dec
dec
rorb
pop
loop
mov
push
jmp
mov
inc
cmc
mov
mov
cmc
jbe
mov
pop
sbb
sub
sti
movsb
hlt
sbb
xor
xor
shrl
pushl
outsl
mov
cltd
mov
bound
jl
push
jmp
ret
cmp
mov
lahf
mov
add
jns
push
ret
in
aad
mov
out
mov
mov
loope
cmp
call
dec
fwait
mov
cmp
lods
gs
cli
sbb
sub
xlat
sub
ljmp
aam
dec
or
insb
gs
push
jbe
mov
rolb
stc
xchg
decl
int
xchg
sbb
lods
xor
aaa
repnz
adc
enter
jl
add
pop
dec
in
pushf
pop
iret
test
sbb
push
xchg
jecxz
pop
decl
jp
out
mov
pop
adc
lods
push
jp
sbbb
mov
inc
test
out
outsb
sub
cmp
scas
xchg
test
pop
shl
dec
aam
push
inc
pop
inc
fucom
xor
mov
outsb
and
adc
shrb
cli
pop
jb
add
call
add
mov
jno
insb
in
xor
dec
insb
pop
cld
mov
dec
out
pushl
in
xchg
lahf
push
jge
mov
jb
ret
xor
fdivl
push
xchg
mov
jecxz
xor
sbb
inc
ret
and
ja
nop
jmp
or
jnp
lcall
pop
aam
mov
roll
sti
rcll
ss
sbb
jae
sub
and
leave
pushl
cmp
pushf
sbb
out
sub
cmp
rcl
arpl
mov
fcom
divb
add
sbb
ljmp
inc
int3
xor
addr16
mov
lcall
seta
pushl
std
xchg
cli
inc
cs
insl
int3
mov
popa
daa
aas
mov
rolb
add
mov
add
pushf
or
ror
fisubs
imul
cmp
lock
push
lcall
sbbb
out
or
mov
bnd
add
psrlq
clc
pusha
mov
mov
and
jmp
xchg
mov
add
mov
leave
mov
pushf
xor
mov
fwait
inc
sbb
mov
sbb
fisttpll
xchg
sti
cmp
cmpsb
adc
jne
dec
push
pop
mov
pop
pushl
icebp
shlb
xchg
mov
sub
outsb
pop
aam
dec
idiv
cmp
xor
push
stc
inc
fnstenv
adc
xchg
mov
pop
ljmp
adc
dec
ss
ss
test
int3
js
sub
cs
dec
jne
mov
arpl
jmp
jno
xchg
sbb
and
leave
jo
xchg
jmp
test
js
jecxz
mov
call
icebp
adc
mov
popf
sbb
or
cmpsl
fmull
xor
fldl
cld
add
adcl
sbb
test
inc
les
jno
out
jmp
xchg
mov
pushl
std
xchg
js
ja
jnp
cwtl
sub
not
ds
lret
sbb
add
lcall
popf
mov
sub
sub
mov
and
add
pushf
stos
lods
or
les
push
ljmp
sbb
enter
lock
push
sbb
ljmp
cltd
mov
push
xor
inc
in
hlt
cmpb
add
popa
adc
inc
xor
add
loop
xchg
push
lea
les
aas
add
sahf
test
lahf
lret
xchg
incl
shll
les
divl
and
enter
cmpsb
das
add
std
dec
sar
xchg
mov
repz
dec
sub
cmp
add
ljmp
data16
mov
adc
jno
or
test
in
sub
cmpsb
sbbb
das
adcb
or
iret
rcrl
jp
les
lcall
or
push
jp
dec
test
fdivs
iret
sbb
pop
divl
xchg
jbe
call
cld
inc
imul
inc
in
and
jl
dec
aas
and
dec
jle
add
pop
mov
dec
jnp
loop
jns
dec
ret
xchg
xchg
js
mov
xchg
dec
or
outsb
jmp
cli
out
pop
sti
xor
repz
mov
mov
ljmp
sbb
mov
lret
jo
test
shll
and
fwait
jne
mov
mov
je
mov
xor
cs
int3
ss
sbb
or
mov
insl
or
xor
jae
mov
jge
xor
jb
xor
xlat
ret
cmpsl
pop
movsb
mov
scas
test
add
scas
inc
sarl
sar
mov
adcl
cmpsb
pop
jns
or
push
roll
incl
les
cmc
xchg
xor
fs
push
das
pusha
arpl
rcr
lahf
testl
add
icebp
lcall
push
or
bound
clc
movsb
pop
test
push
ljmp
out
xor
inc
mov
lock
cmp
xchg
int
fsubrp
in
or
push
testb
movsl
cmp
jp
xlat
mov
xchg
cmp
sub
aas
inc
fsubrs
push
cld
pushl
mov
and
shrb
out
mov
inc
adcl
jg
xchg
pop
decl
xchg
sub
out
xor
xor
sub
imul
stc
jge
jnp
call
or
loop
mulb
cld
mov
es
shlb
hlt
hlt
scas
cli
out
jecxz
addr16
scas
sub
test
mov
adc
and
lcall
dec
add
lcall
pop
or
loop
mov
cmp
ror
ds
je
or
cs
icebp
mov
pop
dec
push
jb
xor
mov
pop
dec
sub
fisttps
je
mov
jo
or
jns
mov
xor
shr
mov
cmp
dec
pusha
mov
sbb
lods
push
idivl
outsb
ljmp
mov
arpl
rcr
or
lcall
cmpsb
pop
inc
addr16
pop
xor
arpl
pop
mov
jmp
inc
jle
out
shr
dec
jmp
add
arpl
jo
sahf
push
xor
js
lcall
mov
mov
cmp
adc
iret
clc
mov
jae
pop
dec
xchg
mov
jmp
inc
das
pop
or
adc
popa
stos
adc
pop
hlt
popf
xor
mulb
or
ljmp
nop
pop
mov
or
pop
js
dec
outsl
mov
push
adc
push
add
les
mov
sbb
dec
jns
fbstp
push
daa
mov
jecxz
mov
add
dec
inc
or
fs
pop
sub
enter
push
mov
andl
push
test
call
lods
xor
xor
rcrl
jl
or
aaa
pushl
xor
lea
mov
inc
clc
pop
lock
jne
mov
ljmp
pop
push
shl
and
mov
jae
hlt
sbb
cld
push
xchg
inc
pop
mov
inc
out
jg
incl
and
or
imul
lock
xlat
add
adc
mov
jnp
loop
scas
aaa
jp
jne
lahf
mov
inc
and
and
std
push
ljmp
add
inc
and
hlt
mov
ss
cmp
scas
dec
jmp
sti
xchg
or
cmpsb
mov
jmp
mov
orl
cs
incl
mov
faddp
adc
adc
fcom
mov
ljmp
mov
push
es
test
mov
sbb
fwait
pop
or
dec
outsb
dec
pushl
std
negb
shll
or
dec
sub
arpl
cltd
outsb
out
js
lcall
incb
mov
and
les
stc
jns
or
inc
ss
loope
or
dec
inc
insb
stc
sbb
add
adc
mov
call
add
imul
in
call
sbb
mov
jge
aam
je
pop
popf
outsl
mov
inc
sahf
push
sbb
cmp
arpl
aaa
inc
sar
cltd
mov
and
and
inc
or
jno
xchg
dec
repnz
jmp
ficompl
xor
lods
std
push
rolb
js
mov
les
mov
popf
push
mov
xchg
push
stos
stc
decl
fcomi
jp
fdivs
out
lods
xor
int3
sbb
xor
ds
decl
pop
xchg
sbb
nop
ret
jp
xchg
add
mov
incl
lcall
mov
push
das
cmpsl
jo
add
xchg
mov
clc
out
jb
out
sahf
cmp
jge
inc
sbb
push
idivb
movsb
fisttps
fs
mov
push
int3
jb
jle
daa
test
xchg
and
decl
pop
shlb
xchg
xchg
stos
into
mov
movb
hlt
pop
iret
sahf
add
subl
cmp
cwtl
jbe
fdivr
jno
mov
add
sub
fs
fiaddl
inc
loopne
ss
lcall
in
rolb
lea
je
pop
push
inc
push
imul
and
jns
ljmp
mov
mov
xchg
bound
mov
push
mov
and
addb
jb
xor
fcomip
jmp
sbb
add
imul
jb
outsb
jne
ljmp
loope
arpl
jg
or
cmp
in
pop
cmp
adc
pushl
jb
sub
adc
jecxz
sub
xor
ficoml
negl
cmp
cmp
sti
pushfw
popf
loop
or
xchg
inc
inc
mov
aas
ds
xor
jg
xchg
lahf
ret
lock
jmp
mov
sub
cmp
fcomi
fcomps
int3
incl
cld
decl
pop
ret
fstpl
pop
xchg
add
enter
int3
adc
add
jg
xchg
es
push
cmc
jmp
pop
imull
stos
mov
push
jg
hlt
pop
xor
mov
nop
popa
adc
cld
pop
xchg
mov
ljmp
sub
iret
xchg
je
sub
cmp
scas
xadd
push
nop
loopne
add
notl
cmc
outsl
pushl
test
sbbb
inc
ljmp
xor
mov
inc
inc
xchg
mov
in
pop
mov
in
divl
adc
addr16
push
cmp
mov
jg
ss
adc
xor
pusha
into
mov
xor
xchg
ds
stos
and
add
push
lea
ret
pop
hlt
call
jbe
js
int3
lds
nop
inc
or
mov
call
imul
filds
mov
sbb
add
lock
jmp
pusha
std
out
fistl
jo
lock
fwait
sahf
sbb
pop
mov
mov
sbb
mov
fdivs
push
sub
test
jg
test
inc
sti
push
int
in
xchg
aam
imulb
into
imul
call
ja
es
pusha
test
mov
daa
and
mov
bnd
stc
push
jg
xor
xchg
out
fldenv
mov
mov
adcb
xchg
pushl
adc
insb
lret
inc
pop
jp
fistl
cli
cmp
imul
pop
mov
jmp
mov
les
add
daa
pop
dec
xchg
adc
test
fstps
stos
decl
xchg
into
sub
mov
dec
and
add
fsubr
ljmp
mov
xor
loopne
sbb
sbb
pop
xchg
mov
inc
cmp
fbstp
movsb
dec
repnz
pop
enter
cmc
mov
mov
push
fisubrs
repz
outsl
shll
mov
or
cmp
jb
and
push
and
decl
nop
rcrl
sbb
adc
cmp
pop
add
fs
xchg
push
and
cmp
call
xchg
icebp
lcall
mov
adc
and
mov
mov
decl
inc
out
mov
pop
push
dec
xor
jbe
mov
inc
fwait
repz
arpl
push
call
xchg
gs
jmp
push
add
jl
pop
xchg
or
push
ljmp
shll
dec
test
notl
hlt
sub
cmp
jnp
jae
movsl
sbb
out
imul
fnsave
clc
mov
add
inc
dec
sbb
push
push
xchg
cli
scas
mov
ss
push
stos
out
push
or
dec
mov
or
std
adc
bound
adc
ss
xor
test
test
call
aas
test
mov
push
bnd
xor
mov
and
out
pusha
lods
jle
aam
mov
cwtl
mov
sub
test
mov
divb
movsb
mov
lcall
fiadds
cwtl
ja
dec
loop
rolb
popa
lret
inc
and
movsb
shl
and
js
sti
inc
stc
pop
sbb
jmp
lds
lret
lcall
hlt
loope
sbb
je
jecxz
inc
or
bound
sbb
xchg
aaa
popa
fdivrl
std
negb
push
ljmp
dec
dec
push
out
xchg
adc
pop
jg
aas
add
js
jl
jnp
fdivr
andb
add
mov
bnd
in
fcmovnbe
loop
out
dec
push
mov
aad
pushf
dec
mov
out
nop
test
inc
repnz
pop
add
pop
mov
std
dec
sbb
mov
hlt
aaa
clc
mov
sbb
das
sarb
stos
loop
out
jae
pusha
xchg
shr
pushf
incl
out
dec
dec
adc
push
mov
adc
or
mov
dec
mov
inc
fisttpll
iret
jecxz
dec
xlat
dec
out
mov
in
aaa
inc
xor
gs
into
mov
cli
lods
icebp
popa
ss
pop
lods
loopne
jne
out
sbb
movb
jmp
insl
fsubrl
jg
mov
cltd
mov
int
movsl
out
fdivrs
mov
jae
shll
movsb
jmp
jbe
frstor
popa
jecxz
outsb
mov
jnp
or
cmp
inc
push
cmp
incl
dec
pop
outsl
mov
vmovss
jge
lret
jae
lcall
lcall
shl
movsl
lahf
fcom
fcmovnu
mov
and
pop
lock
out
cli
inc
mov
leave
push
or
push
jmp
repz
loope
lahf
pop
adc
cmp
hlt
in
push
pop
or
xchg
lods
pushf
hlt
mov
or
call
fldt
jns
cmpsb
xchg
out
push
adc
xchg
xchg
addl
ss
arpl
incl
rcr
push
cltd
aad
pop
add
insl
push
js
mov
stos
inc
add
test
xor
xlat
jecxz
lcall
jne
sahf
lods
mov
and
sbb
dec
loopne
mov
and
xchg
inc
std
lcall
sbbb
cmpsl
push
add
incb
fwait
adc
cli
ljmp
pop
cmp
add
mov
or
xchg
call
sahf
cs
out
subl
out
jecxz
mov
adc
sahf
std
cmp
xor
inc
sti
or
cmp
xor
cmp
mov
sahf
cltd
or
mov
loope
cld
daa
jb
dec
mov
lock
push
adc
sbb
mov
or
ret
mov
push
pusha
popa
insl
scas
xor
rcll
adc
aam
std
mov
jecxz
arpl
movsb
jno
adc
dec
or
mov
pop
mov
aaa
push
clc
ljmp
jl
mov
lcall
ljmp
add
and
push
inc
jnp
add
mov
xor
jmp
pop
pop
cs
mov
mov
mov
dec
lret
jge
out
add
add
sub
lahf
test
call
mov
sti
push
jecxz
fists
mov
outsl
daa
mov
and
lcall
int3
sub
mov
jp
stos
xlat
xor
push
push
stc
mov
lcall
sub
incl
cmp
addr16
fwait
mov
jo
stos
fcoms
stos
jg
sub
mov
adc
mov
jmp
mov
dec
lock
incl
adc
lret
push
movsl
mov
xchg
dec
cmpsb
jp
sbb
inc
jecxz
jno
into
call
sbb
pushf
add
repnz
dec
sbb
sub
dec
loop
add
push
xor
lcall
cld
jmp
jnp
insb
sarl
and
cmp
dec
cmp
stc
dec
fld
pop
add
jg
and
push
dec
push
test
jg
fstps
xor
pushf
sub
add
jno
js
dec
jnp
mov
outsl
xor
popa
mov
hlt
incl
or
decl
jp
push
push
imull
push
sti
pop
pop
vmread
xchg
fisttps
std
scas
mov
scas
clc
ljmp
fidivs
stos
inc
and
xchg
fs
xchg
inc
sahf
jmp
loop
inc
idiv
jmp
leave
push
cmp
fcomi
or
dec
jo
aas
gs
xlat
repz
incl
dec
add
jp
sbb
in
push
call
add
rcrb
dec
and
loope
fnstcw
call
mov
insb
mov
or
ljmp
mov
lods
xor
filds
call
xchg
scas
add
orb
shr
int3
outsb
imul
jecxz
xchg
push
sub
jmp
mov
lcall
mov
jne
fs
pushf
cwtl
and
pop
adcl
lcall
repnz
dec
mov
push
lcall
sbb
mov
sub
ljmp
ret
nop
xor
mov
mov
add
xor
testl
clc
ljmp
pop
out
mov
mov
jbe
jge
fsubr
add
xchg
enter
test
jmp
lods
sbb
inc
loop
fsts
sbb
mov
int3
rclb
in
and
inc
push
stos
aas
ljmp
push
dec
jecxz
cltd
iret
add
xchg
mov
shl
mov
incl
nop
arpl
lret
stos
movsl
cmpsb
mov
ss
add
jnp
jnp
cld
insb
mov
jg
pop
jmp
fstl
xchg
sub
sbb
mov
stc
stos
mov
mov
lock
adc
push
sbb
adc
lret
xchg
mov
and
ja
inc
fisubrl
inc
push
jno
inc
xlat
add
fisttpl
inc
mov
popa
movsb
jo
insb
and
jle
incl
sbb
test
insb
outsb
xor
mov
out
pushl
mov
pop
sub
jmp
xor
clc
cmp
call
adc
and
jp
inc
pop
imull
sti
or
mov
pop
aaa
sub
and
ljmp
rol
pushf
jp
das
xlat
adc
inc
lods
push
cs
xchg
sahf
dec
add
decl
jecxz
mov
std
mov
add
out
jg
lods
pusha
incl
mov
adc
lcall
inc
lcall
out
jmp
call
loopne
cld
in
fmuls
mov
arpl
das
jmp
xor
dec
test
ljmp
gs
ljmp
ret
idivb
aaa
jmp
push
xchg
xor
mov
stc
mov
ret
fs
jecxz
mov
insl
sbb
call
fimuls
mov
fidivrs
push
test
imull
lahf
das
pop
push
and
lcall
aad
fwait
jmp
pop
jg
out
mov
movsb
pop
sbb
sub
pop
test
jecxz
mov
ret
mov
sbb
push
inc
jae
inc
ljmp
xlat
jnp
xchg
pop
daa
mov
lar
scas
mov
pop
jg
call
aaa
push
add
jg
mov
add
call
mov
mov
out
andb
movsl
nop
mov
incl
mov
push
fildl
stc
sbb
jge
or
xor
mov
out
aas
xchg
push
cmp
call
inc
imull
mov
adc
lret
mov
inc
mov
mov
pusha
push
pop
add
incl
add
push
jno
or
lods
or
das
outsb
cmpsl
pop
adc
movsb
lods
scas
pushaw
int3
rcl
loope
push
push
lcall
out
xor
mov
mov
hlt
mov
ljmp
pop
xchg
push
push
movsb
mov
pop
ret
mov
cmp
mov
adc
xor
cmovno
call
test
clc
test
pop
cmp
push
leave
cmp
mov
mov
push
dec
jns
pop
fldt
fcomip
lcall
test
stc
jae
mov
cmpsl
push
int
sub
push
inc
dec
shr
int3
add
js
and
push
push
lahf
dec
int
sahf
and
roll
jb
and
incl
and
es
lret
cmp
and
lret
pop
aam
std
inc
adc
jno
pop
cmp
add
pop
clc
mov
das
cmp
cmp
int
aaa
push
mov
lret
sub
jmp
jbe
fwait
jbe
push
es
push
xor
mov
movsl
sub
jbe
push
sbb
movsl
lahf
xchg
ret
ljmp
xchg
mov
in
sub
jno
in
fcmovbe
add
aaa
dec
push
jnp
pmaddwd
add
fdivs
std
loop
cmp
ret
pop
call
mov
mov
xchg
daa
int
ja
xor
and
mov
hlt
jnp
fwait
pushl
ljmp
out
push
cmp
stc
fsubl
insl
sub
mov
sar
lcall
push
jecxz
pusha
mov
dec
xchg
in
stos
or
lea
inc
mov
ljmp
call
imul
pop
arpl
arpl
mov
loope
fcoml
and
cmp
dec
xchg
movlps
fcoms
ficomps
inc
sbb
push
adc
mov
mov
add
addr16
lcall
push
jbe
jns
sar
and
mov
rorl
jg
mov
pop
insl
jmp
into
mov
addl
xchg
lcall
sub
push
mov
sti
sub
adc
sub
imul
adc
test
lods
test
inc
inc
js
loop
xor
mov
stc
dec
add
mov
lcall
lods
mov
pop
xchg
fsubl
roll
incl
test
sbb
sbb
test
lahf
ror
sub
ljmp
xor
xchg
inc
push
mov
dec
xor
pop
sub
push
mov
pop
sbb
sub
xchg
shrl
popf
jl
aad
pop
add
or
fisttpll
popa
sbb
lcall
insl
xlat
xchg
call
fiadds
sahf
aad
mov
inc
inc
lods
imul
jo
dec
fsubrp
pop
lock
lahf
xchg
maxps
insl
pushl
or
jle
inc
dec
dec
xchg
jnp
jp
mov
adc
sub
mov
pop
and
cmp
jb
fcomps
stos
fsts
jmp
leave
ret
mov
test
dec
xchg
lret
pop
decl
mov
fmuls
lock
test
push
cmpsl
jge
inc
mov
mov
inc
pushl
cld
popa
pop
jnp
sbb
or
jmp
into
bound
lcall
rcrb
sub
into
xor
mov
pop
xchg
push
loopne
jg
pop
sub
lock
imul
jbe
cs
je
xor
call
cmp
arpl
adc
js
sub
scas
cmp
fsubrl
loop
repz
mov
push
imul
imul
push
mov
out
shl
iret
xchg
ret
daa
es
cmp
inc
jo
lret
test
sti
push
mov
aas
insb
insb
jg
ljmp
dec
jb
ror
cwtl
and
addl
xorb
pop
call
cld
xor
and
and
xor
loopne
stos
insl
jne
out
fldenv
sub
popf
pop
subl
sarb
push
call
mov
cli
movsl
or
jecxz
mov
sbb
int3
sub
lcall
int
fstl
jg
cli
out
aaa
in
push
xor
int3
mov
sbb
jbe
mov
ja
bound
push
cli
aad
jg
fisubrl
scas
lods
jae
shrb
sub
or
jmp
lock
fwait
mov
hlt
xor
test
and
aaa
fnstenv
sub
sub
xchg
inc
mov
mov
pop
test
sbb
out
fwait
dec
pop
imul
mov
lock
lods
fsubs
lea
and
dec
jle
xor
les
ljmp
adc
lock
stc
mov
cmp
sub
cmp
enter
stos
sbb
add
outsl
out
addl
push
scas
orl
and
imul
lds
test
std
and
and
ljmp
add
or
and
jge
loope
pop
lods
sbb
xchg
incl
int
orb
cwtl
mov
aas
and
mov
xor
push
jb
jp
cmp
sti
divb
popf
jle
inc
cwtl
pop
in
es
ret
xchg
notl
cmp
int3
adcl
or
mov
mov
pop
mov
xor
dec
out
pop
inc
pushl
cmp
cmp
push
mov
jg
jns
lret
cs
jg
repnz
mov
push
es
cmp
idiv
pushl
jmp
xor
repz
push
mov
sbb
or
fsts
shl
fmull
jbe
fsubrs
rolb
scas
and
sbb
xchg
fs
decl
xchg
push
or
fcomp
mov
stos
ljmp
mov
leave
sti
sbb
lods
adc
xchg
ret
jg
std
jge
xchg
or
fldcw
scas
add
jmp
sub
divl
call
dec
pop
cmp
lods
popa
cli
jno
or
mov
fdivl
dec
mov
or
mov
shll
adc
cltd
adc
std
lods
outsb
stos
iret
and
or
pop
and
or
sar
jns
push
cmp
aas
cltd
loop
cmp
pop
rclb
lret
das
pop
test
pop
loopne
js
fildll
xchg
data16
lret
xor
mov
mov
fdivl
jle
inc
jp
add
push
xor
push
pop
mov
rol
outsb
sbb
jo
dec
test
movsb
mov
pushl
std
bound
push
out
mov
fisubl
jae
sub
dec
mov
pop
jo
push
mov
cmp
cmpsl
xchg
xor
pop
shl
xor
cmpsb
dec
shrb
std
decl
lahf
and
pop
mov
cmpsl
les
lea
das
clc
push
clc
or
cmp
lcall
loopne
xor
dec
hlt
or
push
incl
sub
pop
or
out
xchg
and
fstl
mul
imul
dec
xchg
iret
test
lcall
push
push
mov
mov
fwait
shll
rcr
ja
pop
jge
out
pushf
cmp
jmp
lds
add
fimuls
mov
cmp
mov
dec
and
mov
int
lods
pop
hlt
adc
cltd
dec
faddl
cmc
fcmovne
add
mov
pushl
pop
cmp
adc
dec
mov
jnp
xchg
push
cmp
push
mov
mov
aas
xor
push
sub
repz
add
bound
fwait
imul
scas
enter
outsl
xor
mov
push
movsb
lds
dec
cs
call
xchg
iret
sahf
cli
enter
push
or
xchg
stos
cmp
push
jl
ror
popa
jp
test
push
cmpsl
orb
inc
daa
pop
xchg
sar
mov
lds
ljmp
sub
sub
or
arpl
in
inc
mov
mov
mov
outsb
cmp
dec
mov
cld
xorb
xchg
repnz
repz
xor
hlt
repz
add
jmp
call
popf
xchg
or
out
sbb
call
mov
cmp
add
fdivl
lds
mov
lahf
mov
call
inc
lret
ret
cmp
xor
xchg
lock
lahf
test
ljmp
push
cmp
jns
pushf
inc
mov
fsubs
mov
sub
jg
inc
pop
push
cmp
movsl
test
sbb
adc
jnp
loop
mov
or
ret
insb
jmp
lcall
push
push
mov
idivb
push
sbb
mov
ljmp
cmp
mov
js
push
mov
mov
imul
fimull
cli
sti
add
jmp
mov
jns
mov
mov
ret
adc
dec
mov
sbb
leave
push
iret
lods
jns
push
mov
imul
dec
sub
gs
push
inc
sub
popl
dec
or
pop
aad
cs
ret
and
dec
mov
and
push
sarb
inc
or
mov
push
xor
jno
lret
ja
or
add
stos
jae
mov
ja
adc
outsb
dec
ja
and
jne
jo
imul
mov
jp
ds
rol
add
adc
cs
pop
test
xor
cmpsb
rol
orb
fadds
and
adc
xchg
cmp
shrl
xchg
sbb
adcl
pop
mov
outsl
outsl
insb
push
push
xchg
jo
test
in
push
and
gs
push
fwait
insl
test
jo
inc
inc
inc
outsb
imul
jae
sub
or
into
adc
imul
adc
sub
fdivrp
dec
jne
js
stos
pop
inc
fisttps
dec
rsqrtps
lea
inc
dec
out
jbe
jns
push
imul
and
psllw
or
pop
adc
push
es
mov
test
insl
insl
sbb
inc
mov
mov
gs
dec
jb
imul
inc
and
jnp
addb
jbe
sti
xorl
fcmovnb
sbb
cmp
outsl
sbb
adc
push
inc
jle
jae
loope
pop
or
inc
icebp
inc
and
rcrb
pop
js
sbb
outsl
mov
inc
push
pop
ds
insb
jne
mov
sarl
inc
jne
data16
xor
mov
add
insl
or
jo
inc
push
fildl
inc
inc
inc
sbb
fdivs
out
loopne
push
out
popa
arpl
or
inc
xchg
pop
push
gs
shrb
cmpb
loope
pusha
inc
jae
adc
push
push
push
movb
jnp
jmp
roll
mov
add
xor
jae
sub
push
insb
xor
jo
xor
inc
or
dec
lods
inc
xchg
add
addr16
push
pop
sub
dec
les
push
dec
mov
sbb
stc
out
ret
sub
cmp
jns
ds
jne
lret
jg
inc
arpl
shr
and
adc
das
pop
pop
repnz
push
xor
inc
sbb
fs
or
inc
or
cmp
popw
push
add
xor
shll
out
push
cltd
push
push
inc
xchg
push
testl
push
adc
in
test
nop
mov
sub
dec
jae
enter
lock
ljmp
jmp
jns
notb
inc
mov
sbbb
jb
or
mov
lret
and
arpl
outsl
xchg
lods
push
push
cmpsl
fdivs
push
je
ja
mov
xchg
jg
mov
pop
pop
push
pop
sub
mov
cmp
sbb
xorb
arpl
es
ret
aas
jp
sbb
xchg
pop
adc
insb
sbb
and
mov
shll
orb
popa
fcoms
lcall
pushf
pusha
mov
outsl
pop
js
add
sti
jmp
addr16
and
jne
mov
pop
xlat
mov
fisubrs
je
pusha
pop
outsl
adc
inc
inc
iret
fadds
nop
sti
cmpl
sub
mov
sub
and
imul
ret
sbb
push
es
add
fildl
inc
add
jns
xchg
adc
jo
stos
loope
xor
cmp
fdivrl
sbb
imul
push
adc
push
mov
push
pop
pop
mov
mov
xchg
or
aaa
inc
in
inc
out
lcall
jecxz
adc
inc
leave
or
scas
jo
jae
xor
or
and
sbb
popa
and
jo
cs
daa
jecxz
jo
sub
add
jno
ret
ret
popa
filds
dec
sbb
dec
outsl
jno
mov
in
inc
lods
pop
adc
fdivp
pop
sub
sbb
or
or
pop
cmpsb
sbb
dec
sbb
or
jbe
test
dec
sbb
dec
and
ljmp
xchg
fwait
mov
leave
aaa
orb
lock
mov
and
addl
jne
dec
xor
shlb
sub
arpl
push
cli
jb
dec
mov
mov
cmp
jb
add
vpunpckhqdq
dec
and
or
push
fnstcw
sbb
aaa
dec
adc
cmpsl
jae
sbb
int
and
test
sub
jbe
mov
pop
sub
adcb
fcoms
aaa
and
jp
out
sbb
outsb
fisttps
loopne
cmp
nop
popa
fbld
jmp
fs
inc
mov
lret
fstpt
shlb
out
push
outsl
mov
push
repnz
jb
and
test
das
or
inc
push
into
lods
pop
popf
pop
jo
inc
inc
lds
arpl
loope
std
inc
imul
loop
shlb
add
cmp
js
insb
out
lock
out
outsb
inc
insb
jle
punpckldq
xchg
cmpsl
inc
lea
stos
mov
jp
je
jae
jno
and
jl
mov
lea
cmp
leave
lods
ret
mov
jns
cmp
rclb
loopne
dec
inc
cmp
sbb
xchg
rcl
sub
push
mov
dec
shl
ret
rcll
and
in
mov
push
push
pop
xor
add
adc
in
mov
outsb
inc
push
push
adc
and
scas
dec
in
push
pop
jnp
or
dec
outsb
dec
push
dec
shll
xchg
sub
lahf
xchg
mov
lcall
xor
filds
add
mov
mov
imul
xor
push
adc
shll
push
add
pop
jo
sbb
mov
pop
mov
and
pop
outsl
inc
fs
mov
jo
sbb
adc
add
push
push
jb
inc
jae
pop
xchg
inc
pop
jo
adc
ficompl
push
and
mov
pusha
cwtl
sbb
push
das
imul
loopne
mov
push
sbbb
push
js
xlat
inc
je
jp
or
and
adc
dec
sbb
dec
outsb
sbb
mov
in
mov
scas
ficoms
xor
and
cmpsl
push
imul
jo
jnp
pop
aaa
pop
stos
adc
insl
addr16
jo
cmp
scas
arpl
jnp
test
aas
movl
lcall
icebp
ret
pop
mov
and
and
ljmp
dec
jno
jmp
and
xchg
adcl
push
dec
and
jns
xlat
shl
insb
mov
popa
repz
cld
popa
imul
push
pop
xchg
mov
xor
popa
and
add
sbb
jmp
add
adc
sub
loop
xchg
sub
dec
or
mov
int3
sub
or
pop
dec
lock
xchg
push
adc
mov
std
imul
xchg
pop
push
cmp
mov
sub
je
or
sbb
push
push
push
push
mov
mov
outsb
aas
adc
pop
sub
lret
test
mov
pop
icebp
pop
popf
adc
xor
inc
add
pop
icebp
outsb
fistl
mov
lods
aad
roll
popw
xchg
imul
rorl
fimull
or
jo
gs
in
mov
cmpsb
shrl
inc
sbb
push
je
shll
outsl
rcrb
movsl
pop
sbb
sub
inc
mov
and
dec
cld
adc
insb
lahf
loopne
add
adc
int
out
add
call
cltd
push
stos
lock
js
pop
lds
push
push
inc
out
adc
dec
fimull
sub
xlat
incl
dec
inc
or
pop
mov
cmp
or
pop
dec
mov
pop
inc
push
jne
data16
cmpl
enter
add
sub
mov
ds
es
imul
incl
dec
lret
add
rcl
popf
add
outsl
repnz
pusha
push
xchg
fwait
or
mov
ds
arpl
jl
fldenv
and
xchg
sahf
pop
sub
cvtdq2ps
pop
cmp
adcb
arpl
clc
mov
add
adc
stos
mov
mov
cmp
inc
pop
or
orl
pop
cs
pop
dec
sub
pop
cmpsl
add
ss
inc
and
jb,pn
popa
adc
mov
shll
imull
push
lods
mov
inc
scas
mov
mov
dec
out
jo
push
add
push
dec
rcrb
jns
cmp
out
dec
movsb
mov
ss
shrb
pusha
and
xchg
mov
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
