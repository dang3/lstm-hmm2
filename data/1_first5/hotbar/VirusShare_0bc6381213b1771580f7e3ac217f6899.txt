fcomp
decl
lock
inc
add
mov
or
sbb
in
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aad
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jle
mov
mov
sahf
mov
les
int
mov
mov
xor
push
jb
fsub
subl
inc
outsb
push
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
int3
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
mov
mov
imul
dec
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
ffreep
test
jl
sub
push
push
pop
stos
jb
popa
xchg
xchg
sub
fwait
mov
add
add
lea
out
sub
insb
mov
mov
enter
mov
fisubrs
or
sub
push
push
into
icebp
push
enter
dec
test
mov
mov
sarl
lcall
fdivrs
push
les
add
push
or
punpckhbw
ds
cs
inc
pop
or
add
or
push
cmp
pop
cmpsl
mov
shll
add
mov
lcall
and
and
out
sbb
inc
aam
xor
push
daa
inc
and
lea
or
mov
dec
sub
iret
jbe
sbb
iret
dec
add
sbb
mov
push
sbb
pusha
sbb
stc
mov
cmpsl
and
dec
test
pop
int
pop
jo
pop
sub
pop
repnz
push
mov
and
mov
xchg
and
rcll
pop
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
push
iret
repz
push
inc
push
dec
dec
push
sub
push
insb
loope
push
sub
cmp
add
and
sbb
mov
mov
inc
les
leave
jmp
daa
cli
adc
mov
sub
mov
in
lds
sub
jl
or
scas
insb
add
inc
jb
enter
add
and
inc
xor
push
popf
push
je
xor
pusha
push
jl
nop
jl
sub
add
xchg
push
int
fstpl
aad
mov
ficomps
mul
inc
dec
jne
pusha
bound
dec
in
dec
inc
loope
int3
push
add
call
inc
mov
inc
je
in
xor
mov
or
movsb
xlat
aas
cmp
xchg
push
push
or
aas
sub
push
movsb
sbb
inc
hlt
adc
hlt
nop
test
cmp
mov
nop
iret
mov
push
push
and
add
insb
lds
addl
pop
shl
mov
or
jl
mov
and
adc
cs
or
or
push
and
or
add
push
lea
adc
cltd
filds
sub
ja,pt
mov
in
xor
jge
cmp
roll
jb
hlt
push
jg
dec
or
out
xchg
faddl
or
lea
shll
mov
popf
mov
push
rclb
pop
mov
pop
pop
sub
jb
dec
jo
sbb
and
xchg
mov
sub
mov
push
jp
jne
lea
dec
fmull
push
je
in
loope
mov
pusha
push
push
es
or
push
add
les
push
push
push
or
or
sbb
in
mov
mov
push
pusha
sub
sete
test
jo
push
test
inc
leave
lds
dec
and
xchg
and
and
aad
sbb
adc
imul
int3
xor
jns
out
sbb
rclb
adc
push
jmp
hlt
or
stos
pusha
lds
push
in
xchg
push
cmp
pop
inc
mov
inc
jne
into
rorl
push
jle
je
and
xchg
inc
adc
sub
push
push
rorl
cmp
push
push
mov
push
stos
and
fwait
jmp
pop
punpckhbw
adc
aas
mov
and
push
push
nop
dec
inc
cld
and
jle
subb
or
xor
cmpsb
jo
push
test
dec
add
fwait
ret
adc
rclb
fs
scas
dec
push
cmp
sbb
sbb
cmpsl
sbb
push
inc
or
in
or
sbb
std
test
adc
pshufw
cmp
fdivrs
push
adc
loopne
cs
inc
sub
ret
jle
xchg
jecxz
xchg
sbb
mov
sti
mov
and
and
sbb
popf
dec
xchg
icebp
sbb
pop
mov
incl
mov
adc
sbb
push
push
pop
imul
js
and
mov
test
add
sti
add
shl
and
push
mov
xor
pop
xlat
jecxz
adc
mov
and
out
xor
push
sub
pushw
ret
xchg
adc
js
cli
imul
xchg
lock
jo
push
push
cld
mov
inc
imul
cmp
or
xorps
jno
push
call
push
pushw
push
mov
sub
mov
js
int3
fsubrs
aas
mov
hlt
add
test
xchg
or
out
adc
adc
push
mov
adc
push
adc
lcall
mov
mov
dec
xchg
push
sub
add
sbb
push
inc
mov
mov
jl
jecxz
fmull
adc
adc
pop
daa
cmpsl
lret
push
loope
notb
jle
xorl
or
cltd
das
insb
icebp
out
orl
and
ret
xchg
notb
push
cmp
and
dec
mov
inc
mov
add
dec
aam
xchg
xor
adc
sub
popa
aaa
push
adcl
lret
subl
mov
pop
mov
icebp
jns
inc
dec
sahf
je
adc
push
xor
mov
dec
mov
lcall
mov
add
jo
popa
push
mov
lods
mov
adc
sub
in
jg
fmuls
cmc
lea
scas
sbb
insb
mov
pop
out
outsl
pop
and
add
jecxz
nop
mov
or
shl
jge
adc
xchg
fs
xlat
xor
cmp
je
push
into
outsb
in
test
lcall
push
xor
xlat
pop
push
mov
mov
or
add
inc
pop
fadds
call
jle
jne
mov
dec
or
xor
and
push
mov
ret
push
scas
dec
fcoml
cmp
je
sub
cmp
je
or
dec
jmp
sub
nop
and
and
sub
lock
fadds
or
or
mov
push
gs
mov
and
movl
push
outsb
lahf
sbb
add
push
mov
cli
and
sub
xor
push
xchg
sbb
pmuludq
call
xor
adc
call
inc
cmp
add
sarb
add
pop
enter
push
push
push
outsb
enter
mov
cmp
add
push
push
xor
mov
add
mov
fs
jns
and
dec
faddl
test
inc
cmp
test
push
or
icebp
push
or
cmp
rorb
push
mov
and
jne
movzwl
jle
or
and
int3
xchg
je
push
aad
clc
sar
into
sbb
jmp
ss
mov
lea
or
jg
lea
mov
inc
test
jne
sub
push
push
inc
sbb
rclb
adc
mov
cmp
ret
fists
js
inc
add
dec
mov
add
stc
insb
jne
adc
adc
dec
es
lea
pop
popa
pop
cmp
jg
xchg
add
idivb
xor
mov
cmp
js
jecxz
jl
xor
jmp
pop
insb
pop
pop
ret
mov
jbe
jo
call
jg
popf
push
jl
rcrl
int3
arpl
mov
call
shll
sbb
movsl
lahf
jne
pop
mov
rcrb
test
lock
or
cld
shl
aaa
adc
lea
adc
lods
rcl
pop
cmp
or
orb
push
test
mov
out
mov
std
sbb
jge
push
call
mov
mov
or
clc
jle
popa
fcomi
add
jg
cmp
pop
insb
mov
fstpt
clc
mov
lea
push
or
cmp
add
mov
ja
add
cld
ret
jmp
insb
fcoml
add
push
hlt
in
xchg
jl
inc
jo
jg
mov
sub
add
add
dec
pop
ret
loopne
jl
icebp
mov
enter
pusha
pop
fs
cmpl
insb
jge
sub
add
inc
aaa
xchg
in
inc
hlt
mov
pop
test
movsb
ret
xor
mov
sub
push
dec
push
shlb
adcl
les
jg
pop
pop
jno
in
pusha
push
ds
jne
js
ret
mov
jp
testl
or
lret
repz
lock
cld
cmp
ja
push
clc
lea
push
push
jmp
sub
or
mov
aam
push
add
cmp
pushf
adc
push
pop
out
repz
mov
adc
dec
rclb
test
push
push
add
sbbl
test
sbb
push
push
push
or
outsb
push
push
cli
cmp
push
push
mov
outsl
add
add
int
cmp
or
aaa
or
sbb
sbb
pop
out
mov
sub
sbb
shlb
add
push
mov
jae
add
loop
add
clc
loopne
int3
or
shl
test
ficompl
push
mov
mov
or
pop
stos
mov
pop
fstpl
jle
add
popf
sub
inc
or
decb
push
aaa
add
out
adc
je
cmpl
sti
mov
push
lea
jl
mov
push
jne
push
imul
xlat
call
dec
test
push
mov
faddp
das
rcrb
jp
jg
hlt
push
push
sbb
sbb
popa
jmp
adc
mov
cmp
push
aaa
fndisi(8087
mov
arpl
mov
dec
lret
pop
jno
xchg
test
rorb
lret
jbe
mov
add
fldenv
push
stos
fcoms
pop
dec
mov
ret
aaa
or
inc
or
shlb
adc
ret
aas
imul
mov
shll
mov
sbb
fdiv
je
push
clc
or
adc
push
fnstcw
and
xchg
arpl
insl
mov
mov
or
mov
xor
stos
sbbb
lods
adc
add
aaa
mov
nop
add
clc
rol
cmp
jge
jmp
cmp
add
dec
adc
adc
mov
test
lea
lds
scas
push
xor
or
jo
loope
inc
or
cmp
pop
xor
add
or
cs
ret
add
mov
pop
add
shlb
ret
cmp
movsl
pop
dec
pusha
xchg
add
mov
push
out
outsl
xor
or
mov
enter
mov
rorl
or
pop
in
roll
push
jae
pop
test
icebp
pop
mov
push
or
inc
jle
mov
mov
sbb
fists
lock
hlt
and
ds
cli
lret
or
or
stc
rorl
cmp
or
rcl
push
insb
pop
rorb
and
movsb
push
push
lock
mov
sub
push
cs
lahf
in
mov
adc
or
inc
sub
dec
and
push
adc
dec
pop
or
inc
popa
scas
or
and
lock
sbb
inc
pop
dec
mov
xor
sub
jmp
lahf
jmp
add
popa
inc
cmp
jb
mov
pop
lds
add
pop
pop
mov
lret
fstl
das
out
mov
pop
jae
test
push
xlat
xchg
add
in
dec
fistl
pop
lea
mov
fldcw
fwait
pop
insb
adc
pop
xor
enter
incb
pop
out
cmp
inc
nop
lds
ds
shll
xchg
or
mov
int3
inc
inc
adc
adc
adc
cwtl
push
jbe
cmp
in
and
or
or
push
test
rcl
sbb
sbb
negb
lret
movb
sbb
repz
pop
sub
movsb
push
push
and
adc
pop
xor
fwait
mov
add
mov
or
aaa
sbb
jg
mov
in
xor
cmp
jne
leave
rcr
divl
rclb
dec
pop
outsb
or
sbb
fimull
mov
data16
inc
cmp
pop
inc
jecxz
stc
xor
mov
mov
mov
add
test
jb
fnstcw
or
add
ret
adc
jmp
aad
push
mov
sbb
jge
inc
push
mov
add
orb
xor
sbb
test
mov
pop
and
jg
lahf
xlat
scas
jbe
sbb
pop
sbb
sbb
add
inc
add
push
sub
into
push
and
movsl
repnz
pop
pop
loope
mov
xor
jmp
lahf
mov
in
lds
xor
cmp
loop
fidivrl
push
mov
les
je
or
imull
cltd
mov
sbb
test
xor
push
cs
rclb
movsb
rol
shlb
inc
scas
cmp
adc
sub
jb
cmp
mov
push
push
aas
fists
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
or
mov
add
jmp
ret
pop
add
jne
and
clc
adc
sarb
rcr
jle
repz
jbe
mov
pop
and
cmpl
je
or
pop
mov
adc
je
enter
pusha
mull
loop
je
je
pop
cmp
mov
ret
lods
xchg
jne
cmpsl
fst
ss
aas
pushf
xchg
mov
loope
in
insl
movb
mov
test
inc
inc
or
lahf
aaa
xlat
push
inc
dec
adc
sbb
addl
add
repnz
mov
dec
je
jmp
dec
std
dec
jo
mov
rorb
sbb
mov
mov
in
insb
or
pushf
push
fstps
leave
and
mov
cmp
add
or
pusha
rorb
jp
lods
fldl2t
jmp
mov
rorl
sahf
adc
mov
rcrb
adc
sbb
or
adc
aaa
xor
orb
adc
mov
sbb
inc
sbb
xchg
mov
xlat
pop
fldz
movl
adc
lret
mov
stc
sbb
jb
pop
sub
fdivl
daa
je
loope
in
xor
jne
scas
dec
sbb
repz
mov
fnstenv
push
inc
cmp
test
jns
iret
xchg
add
inc
lods
loop
int
cmp
in
popf
or
loopne
jae
sbb
pop
and
or
push
sbb
rcr
andb
mov
in
sahf
in
or
clc
adc
int3
rcrl
ljmp
adc
movsb
cmp
insl
xchg
sahf
cmp
pop
popf
push
dec
mov
jg
lea
push
lea
push
ficoml
add
push
lea
cmp
xchg
push
repz
dec
aam
popl
and
pop
push
pop
sahf
lods
ret
mov
int3
jb
cmpsb
or
in
add
sbb
push
js
adc
sbb
data16
xor
je
js
jle
add
fiaddl
mov
xchg
or
add
xchg
cmp
rorb
add
jg
mov
mov
xor
cwtl
movl
pop
jne
pushf
subl
popf
jne
mov
or
aam
or
mov
loop
or
sbb
jns
adc
ret
jle
rcll
mov
push
mov
dec
sbb
add
push
outsb
fadds
sub
movsb
shl
leave
push
rolb
inc
call
pop
out
sbb
xchg
inc
fisubrl
inc
shlb
cmp
fidivl
jbe
push
test
push
pop
test
xor
lahf
lock
aas
arpl
push
setne
push
adc
dec
and
push
movsb
add
xchg
aas
push
push
mov
movsl
pop
dec
in
dec
pop
hlt
rcpps
add
cwtl
shl
inc
fistps
ret
je
lea
add
add
add
das
lahf
adc
pushf
push
mov
mov
sahf
cli
adc
mov
test
mov
pop
loope
aas
sub
push
push
cmpl
xor
xchg
lock
adc
es
test
je
xor
mov
sub
ret
push
push
sbb
int3
xchg
pop
jmp
ss
icebp
clc
push
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
adc
outsl
and
sbbb
pop
out
sub
push
ret
add
pop
repz
mov
xor
dec
sub
and
jmp
mov
add
sahf
inc
add
mov
add
into
cmp
ffree
and
mov
xchg
nop
xor
push
inc
lret
mov
fadd
ret
fsubp
jbe
cwtl
push
sbb
push
adc
iret
repz
xor
cmp
inc
mov
mov
sub
sub
push
push
testl
adc
ret
mov
popa
mov
sbb
ret
out
mov
cmp
call
pusha
adc
or
sbb
push
adc
mov
ret
xor
push
fnstsw
push
shlb
mov
add
or
js
add
movzbl
cs
out
mov
adc
or
pop
cmp
fisubrs
cmpsl
adc
push
pop
roll
pop
pusha
lock
adc
lea
adc
jle
sbb
jl
mov
cwtl
add
jle
and
push
lret
xor
push
push
push
and
push
add
pop
xor
out
aas
cs
jo
lret
push
xchg
sub
pop
xor
test
xchg
das
int3
mov
shlb
loop
pop
sbb
push
clc
or
or
clc
add
pusha
jne
orl
aad
lahf
mov
mov
sbb
sar
aad
cmp
lock
sbb
jmp
pop
or
jmp
cwtl
jb
loope
enter
cmpsl
adc
rorb
add
popa
inc
jecxz
ss
nop
push
inc
adc
adc
out
fimuls
test
sub
mov
add
push
orb
sbb
inc
add
sub
ret
mov
xor
mov
mov
test
push
push
xchg
mov
add
lock
idiv
push
jne
stc
mov
add
xchg
icebp
or
pusha
and
sub
lea
or
push
pop
push
sub
fstpl
rol
out
orb
outsb
jae
push
psubw
sub
rorb
enter
add
sub
sbb
jns
lods
and
ljmp
sub
negl
xor
ficoms
ffreep
test
mov
or
push
push
dec
sbb
dec
lret
push
ja
ss
sub
addb
mov
inc
lahf
push
rclb
mov
push
pusha
jbe
movsl
jne
test
push
push
push
pop
loopne
popa
nop
cmp
sub
push
push
lea
cmp
push
jp
xor
add
mov
lahf
push
mov
push
cmp
or
js
jmp
jmp
addl
push
or
popf
mov
pusha
push
push
test
sbb
add
inc
cmp
pusha
imul
xor
mov
dec
add
fwait
push
data16
add
or
lds
mov
add
xor
push
repnz
push
push
and
jo
push
cmp
leave
xor
xor
sub
adc
inc
ja
mov
bound
adc
sbb
test
aaa
faddl
aad
or
shrb
cwtl
imul
inc
pusha
fmull
shlb
add
xor
jl
sub
outsl
inc
in
dec
cltd
inc
cs
test
push
add
sbb
movsb
lock
imul
inc
loope
scas
addl
clc
and
inc
popa
mov
push
xor
dec
and
or
push
lds
pop
add
xchg
push
enter
sbb
or
dec
inc
push
or
sti
xor
pop
inc
ljmp
add
pop
add
and
push
ja
jp
loop
lock
dec
ret
pop
sbb
jb
pop
xchg
jbe
es
dec
adc
cmpsl
push
movsb
fs
add
test
js
dec
push
xchg
mov
dec
or
inc
stos
adc
es
inc
push
or
or
insb
pop
sbb
push
xor
push
icebp
sbb
push
xchg
push
push
lds
xor
aam
pop
cmp
cmp
jb
cld
cld
add
sub
dec
mov
jge
xchg
lock
enter
jmp
stos
and
sub
out
or
inc
test
cmp
dec
jnp
ja
push
mov
push
out
xchg
add
and
add
xor
mov
add
push
xor
push
fdivl
outsb
mov
pop
mov
bound
int
dec
dec
sbb
inc
xchg
inc
inc
mov
int3
int3
adc
fisttpll
push
push
lods
xchg
push
mov
push
rcll
rorl
add
adc
data16
loopne
lock
mov
pusha
mov
sub
add
lods
cwtl
lock
scas
nop
cltd
nop
dec
popa
dec
xor
out
add
enter
pop
lock
mov
push
push
or
int
addl
sbb
roll
or
cmp
jle
add
cltd
and
push
sarl
dec
hlt
clc
or
fldenv
fstpl
sbb
data16
jl
dec
add
rcll
adc
add
sti
jnp
mov
mov
dec
bound
imul
sar
mov
shr
sbb
fdivrp
add
mov
imul
push
lahf
loopne
sbb
movsb
in
jle
in
pushf
nop
imul
stc
dec
ret
enter
sahf
cmc
sub
mov
cmpl
mov
mov
adc
push
enter
sarb
cmp
je
cmpl
or
lods
pop
mov
xor
icebp
adc
pop
inc
sbb
adc
ret
ficomps
lea
jmp
pop
pushf
cmp
mov
mov
mov
lret
fnstenv
hlt
stos
lds
jl
arpl
hlt
xor
mov
sbb
add
dec
fisttpll
inc
add
repnz
push
cmpsl
sbb
adc
sub
sub
fldz
cmpsl
inc
out
inc
data16
push
ljmp
or
fisubrl
int3
sbb
icebp
pop
xchg
mov
test
jl
pushf
in
into
jp
cltd
idivl
push
aaa
lea
pusha
add
xorl
mov
sbb
loope
mov
add
jl
insl
arpl
outsl
jo
add
cmp
insl
xchg
cmp
mov
adc
sbb
xchg
sbb
and
test
inc
in
add
popf
imul
imul
jno
jae
dec
sub
xlat
jp
jge
jmp
mov
pop
fistl
cmp
dec
adc
nopl
fsub
outsl
outsl
rolb
xor
mov
sub
xor
mov
and
sbb
stc
shll
mov
test
sbb
filds
mov
mov
out
jbe
loop
add
push
fcoms
jmp
xor
add
fbld
jle
les
push
js
out
fidivl
sbb
lods
add
add
push
clc
add
out
add
or
movb
xor
mov
leave
adc
mov
add
inc
xchg
xor
daa
sbb
pop
leave
call
jbe
push
or
pop
push
xor
add
mov
cwtl
adc
sbb
xchg
in
jae
or
xor
je
mov
xchg
xchg
dec
loopne
aam
mov
inc
insl
pop
xchg
add
jo
ja
pop
fisttpll
shlb
xchg
and
sub
lods
add
sarb
clc
inc
hlt
inc
lcall
xchg
sbb
add
fsubp
sub
sub
sbb
mov
pop
scas
bound
les
pop
or
inc
outsl
loopne
into
aam
insb
jmp
jecxz
xchg
out
or
pop
add
or
ret
jne
and
shlb
push
enter
xor
into
mov
into
or
pop
sub
sbb
pop
mov
sub
dec
and
cmp
js
or
or
push
xchg
les
test
je
mov
ljmp
push
xlat
leave
notb
xchg
push
xorl
mov
lea
test
push
add
push
inc
mov
jae
inc
jg
dec
cmpsb
xchg
or
cmpsb
sbb
push
aaa
jo
fstpl
inc
rolb
or
popa
and
sahf
adc
add
add
push
out
jl
push
leave
mov
jmp
cmpsb
nop
add
inc
push
inc
mov
loope
mov
inc
pop
mov
outsl
mov
bsf
sbb
and
add
add
sbb
mov
lcall
rcll
cmp
mov
or
adc
pop
or
and
jmp
or
mov
pop
ret
lahf
or
xor
xchg
pop
or
fs
add
inc
inc
adc
or
add
push
mov
push
sub
clc
setb
insb
push
mov
sub
cmp
setae
lcall
adc
popa
xchg
js
lret
js
int
mov
mov
pop
pop
call
inc
in
loopne
pop
push
add
lock
lods
dec
inc
push
aam
lea
push
rol
and
push
aad
push
movsl
xchg
jo
dec
push
es
pop
pop
out
and
rorl
add
jecxz
pusha
test
mov
xor
push
pop
cmp
mov
sub
dec
inc
push
adc
mov
dec
adc
mov
aam
cmp
popf
and
add
mov
sbb
inc
ss
in
sbb
add
dec
dec
push
bound
or
sahf
mov
in
stos
out
mov
add
inc
or
call
jge
lea
dec
push
push
pop
mov
jle
pop
mov
loope
cmp
ja
movzbl
enter
cltd
popf
dec
push
dec
jno
scas
inc
mov
test
cmpsl
insb
jns
mov
add
add
adc
push
add
sbb
dec
push
sbb
nop
push
adc
imul
lahf
mov
mov
mov
push
jb
js
ds
popl
leave
adc
movl
movl
add
in
push
mov
pusha
test
dec
pusha
jmp
das
sbb
push
add
shlb
std
xor
mov
cltd
cmp
shlb
and
and
pop
enter
add
bound
lds
out
sub
pop
sbbl
push
mov
pop
inc
and
xchg
rolb
mov
sbb
add
sahf
add
rorb
je
ds
cli
mov
jl
xchg
jne
mov
sbb
jmp
cmpsl
jp
lea
sbb
add
out
mov
cltd
mov
push
and
or
jmp
push
jne
pop
mov
jo
mov
jmp
rcrl
adc
gs
add
pop
dec
push
pop
dec
stos
movsb
mov
jge
nop
int
xchg
mov
cmp
aam
dec
add
inc
xchg
xor
in
sub
lret
loop
movsb
pusha
rcrl
jge
mov
adc
pop
sbb
ljmp
push
nop
and
leave
es
jo
shrl
nop
mov
jbe
ret
mov
sub
and
bound
push
and
mov
jmp
adcl
subb
jg
insl
andb
mov
adc
shlb
dec
in
and
xchg
push
or
or
and
movsb
insl
cmp
ret
hlt
xor
dec
mov
sbb
push
inc
test
dec
inc
test
jg
cwtl
sub
xor
aam
arpl
adc
add
pop
lcall
xchg
add
dec
mov
xor
sbb
and
lea
inc
inc
jbe
add
push
push
mov
dec
add
push
push
loopne
add
and
lcall
sub
push
or
mov
ds
or
mov
divb
call
add
add
add
fcmovnu
sub
rclb
sub
test
push
add
mov
adc
sub
push
fisttpl
rcll
mov
pop
fisttpl
pop
shll
and
xchg
add
nop
inc
dec
sub
out
xchg
outsb
xchg
or
fldenv
or
dec
cs
add
aam
mov
cwtl
loope
aaa
push
xchg
xor
fs
pop
call
mov
fcomps
adcb
fiaddl
push
test
lods
clc
or
sub
loopne
dec
add
roll
mov
sbb
cmp
clc
add
roll
leave
cmp
add
fwait
lods
std
pop
data16
ss
es
pop
loope
lahf
roll
mov
test
push
imul
pop
lds
push
add
add
data16
cmp
loopne
mov
pop
sub
push
pop
insl
repnz
push
or
loop
xchg
or
push
enter
push
push
jb
adc
test
sti
movsb
pop
push
mov
shlb
dec
jge
out
shrl
mov
sub
int3
push
mov
push
adc
jmp
and
adc
jl
jl
fidivrs
jnp
ja
adc
out
imul
lahf
in
movsl
inc
test
add
mov
pop
push
inc
insb
dec
sbb
insl
add
push
in
ljmp
or
cmpsl
insb
or
cmp
popf
push
adc
movsb
push
ficompl
movsb
cmp
adc
adc
mov
add
or
ja
test
push
mov
dec
iret
xor
mov
shr
pop
fimuls
loope
test
jmp
dec
es
mov
mov
pusha
xor
adc
test
push
xor
pop
mov
ja
and
fwait
iret
clc
int3
add
push
inc
out
cmp
xor
jnp
pinsrw
push
std
stc
rclb
mov
jl
push
push
or
mov
mov
xor
das
push
mov
push
into
movl
or
pop
lods
jge
jne
dec
cmp
mov
movsb
and
and
dec
in
mov
insb
cmp
or
mov
adc
push
push
hlt
mov
test
inc
mov
test
xchg
or
mov
je
xchg
adcb
pusha
add
cld
pop
push
push
mov
xor
and
adc
or
leave
shll
das
jo
popa
in
sub
sbb
push
and
popf
mov
mov
test
add
mov
and
xor
test
jne
das
adc
or
push
push
out
and
iret
cmp
or
roll
inc
ja
enter
and
push
fdiv
xor
push
push
cmpsb
xchg
jl
sti
and
daa
loop
sbb
ss
or
fwait
xor
push
sbb
imul
sbb
je
mov
xor
or
cmp
and
aad
sti
sbb
mov
xor
jmp
invd
add
es
lret
scas
mov
cmp
cmpsl
push
pop
sbb
push
pop
dec
push
or
cmc
enter
jbe
pop
dec
mov
cmp
clc
xor
mov
add
mov
js
mov
and
pop
xor
mov
pop
add
cli
test
sub
ret
jne
adc
push
loopne
data16
add
mov
cmp
bound
xor
jne
mov
loope
xor
dec
and
xchg
and
and
orl
and
stc
push
and
sbb
nopl
mov
shrl
clc
hlt
jmp
lret
lret
sub
mov
movsb
pop
subl
sub
push
cmp
ljmp
and
mov
xor
mov
ds
dec
and
filds
push
cmp
xor
add
sub
dec
mov
into
cmp
xchg
mov
aam
sbbl
fbstp
fildll
call
add
push
stos
push
mov
clc
push
das
sarl
in
inc
jno
mov
inc
inc
loope
and
push
sub
in
inc
push
pop
rolb
xchg
and
cltd
sbb
mov
sbb
in
repnz
adc
xchg
test
sar
or
in
xor
push
inc
adc
scas
addl
das
jnp
ds
andl
and
push
and
fwait
xchg
int
lds
add
lods
cmpsb
push
fnsave
std
add
add
lret
lret
sbb
push
repnz
sub
enter
jo,pn
ljmp
test
pop
add
test
aas
pop
and
cltd
add
enter
jl
sub
push
ficoms
iret
pop
movsl
add
push
jb
mov
adcb
shll
add
lret
push
adc
or
nop
add
or
leave
inc
jno
cmpsl
push
add
vmovapd
pop
dec
test
push
wrmsr
ds
subb
xchg
fidivl
pop
add
test
cmp
sbb
mov
adc
movsl
xor
clc
lock
xor
sbb
xor
mov
pop
test
scas
or
cmp
xor
inc
xlat
ljmp
push
sub
iret
adc
testl
mov
insl
popa
add
push
sub
mov
add
push
xor
sub
icebp
or
insl
dec
jge
add
adc
push
or
jne
add
hlt
pop
movl
push
jb
and
dec
dec
cmp
push
xchg
xchg
dec
sub
mov
inc
cmp
arpl
nop
cwtl
movb
inc
lods
mov
and
add
or
add
aad
sbb
popa
jo
add
sub
or
adc
pop
jp
push
jg
popa
cmpb
movb
jecxz
fbstp
cli
mov
cmp
cmp
loopne
adc
xchg
ror
fcoms
mov
mov
sbb
adc
mov
clc
fdivrl
and
fsubr
adc
jbe
and
add
or
add
push
cmp
add
inc
sub
scas
ljmp
test
add
mov
dec
mov
push
xchg
xor
lahf
sbb
dec
push
mov
rolb
push
jbe
popf
adc
inc
add
into
pushf
pop
fsubrs
fs
loopne
sti
setno
mov
subl
mov
fs
or
andl
push
clc
mov
add
in
and
add
into
pop
xchg
out
mov
push
jp
lock
cmp
dec
push
cmovbe
cmp
addr16
mov
pop
fwait
outsl
fwait
pop
add
scas
pop
call
out
or
mov
jb
mov
mov
sbb
and
pusha
pop
push
jno
add
subb
xchg
adc
push
jb
filds
hlt
xor
mov
push
cmp
std
test
jg
popf
or
push
mov
in
in
pop
jb
pop
and
or
lods
sub
bound
roll
pop
aaa
or
and
lret
push
inc
pop
pop
pop
xchg
in
and
leave
push
rcrb
cld
test
je
aad
mov
in
in
test
adc
je
or
dec
push
mov
pop
or
dec
and
fcomp
shlb
addr16
cmp
fiaddl
add
and
rorl
lock
dec
pop
push
and
test
sub
or
sub
adc
push
or
les
xor
fildll
xchg
andl
add
iret
cmpsl
or
add
daa
loopne
rcrl
movsb
imul
add
es
mov
sti
and
pop
adc
in
in
or
mov
xor
cmpsl
xchg
movsb
push
xchg
adcl
adc
lea
push
cmp
cwtl
sbb
pop
or
sub
adc
nop
cs
dec
push
inc
lcall
inc
mov
xor
dec
enter
and
dec
jae
adc
pusha
and
fbstp
and
dec
add
lret
inc
and
or
adc
movsb
add
xchg
hlt
int3
je
outsl
jo
add
shlb
cmp
jo
xor
insb
mov
xor
pop
data16
pop
pop
enter
adc
add
add
jns
cmpsl
xchg
js
xor
nop
push
adc
sub
push
adc
pop
inc
sub
test
imul
mov
orl
test
add
ret
mov
std
and
cmp
xchg
push
xor
and
xor
sbb
movsb
inc
lcall
pushf
cmp
add
daa
sti
adc
jno
xor
push
push
jge
sbbb
mov
popa
add
add
dec
lahf
loope
sub
lea
xchg
mov
push
in
call
adc
jnp
pop
std
iret
jnp
clc
or
enter
test
leave
add
sahf
sub
arpl
test
repnz
inc
mov
mov
pushf
test
leave
add
ja
lret
jno
mov
inc
lods
rdtsc
pop
sub
into
mov
xchg
imul
sbb
push
mov
lahf
push
outsl
and
sbb
mov
cmp
das
pop
xor
push
cmp
adcl
add
pop
mov
orl
out
jnp
out
pusha
sub
mov
jp
int
adc
jmp
fst
ljmp
add
and
jae
in
add
into
mov
dec
jae
or
cld
nop
loopne
outsl
mov
pop
or
xor
push
and
or
mov
push
sbb
std
gs
xchg
sbb
icebp
push
ds
dec
fs
add
push
sub
out
inc
sbb
fbstp
ret
mov
aad
add
stos
fs
cmpsb
mov
adc
fs
xor
lcall
pop
xor
sub
movsl
pop
xor
pusha
cmp
add
add
shr
lret
test
cltd
fdivr
loopne
and
js
sub
loop
add
and
push
rcr
pop
fwait
jne
out
adc
in
mov
mov
or
ja
dec
in
inc
movsl
je
and
jle
dec
clc
and
sub
sub
or
jge
push
lock
jecxz
les
dec
aas
inc
out
lret
or
mov
ret
in
stc
loope
leave
add
or
mov
add
adc
je
add
cwtl
clc
outsb
jl
fcomi
arpl
push
call
jne
push
jp
loopne
xchg
jno
lea
mov
out
insl
fdivrp
jmp
mov
lea
inc
test
jmp
int3
lock
add
add
sbbl
jl
cs
sub
push
push
cmp
adc
js
sub
and
fdivl
xchg
inc
pop
xor
adc
push
cs
jb
shrb
adc
add
dec
cld
lcall
push
lea
nop
add
push
cmp
xchg
cmp
cmp
adc
test
roll
aad
out
jle
or
mov
add
popa
roll
mov
sub
lock
xor
test
mov
arpl
aas
movsl
xchg
sti
pop
sbb
jno
sbb
shlb
ret
mov
ret
add
add
mov
add
sbb
movsb
dec
pop
and
lods
nop
stos
movsb
daa
add
and
cmp
or
xor
push
das
fdivl
ss
cmp
adc
pop
cmp
cmpl
outsl
pusha
add
push
test
lock
and
jnp
dec
jl
das
mov
shlb
inc
and
stos
mov
sbb
or
shlb
pusha
or
and
test
inc
in
jo
add
inc
mov
mov
js
ror
aam
test
dec
mov
cmp
test
imul
jo
pop
sub
es
push
xchg
xlat
cs
add
add
loope
pop
lock
mov
sbb
incb
jle
mov
sbbl
add
decb
add
xor
push
and
test
add
add
lcall
push
aaa
xchg
add
fs
xchg
shrb
mov
pusha
outsb
rorl
inc
sub
imul
pop
push
stos
ret
adc
xor
inc
pusha
in
sbb
push
push
rol
sbb
pop
jno
dec
mov
jle
aas
js
mov
adc
mov
out
decl
lea
sub
fs
dec
sub
pop
cld
jo
sbb
fimuls
sarb
dec
sbb
mov
popa
movb
adc
clc
mov
aad
adcb
aad
sub
add
xor
cmp
jp
pop
inc
pop
sbb
in
jo
pop
mov
and
rorb
lds
loopne
sub
lock
or
ffree
or
in
movsb
pop
xor
xor
xor
sbb
jne
das
setle
cltd
push
adc
mov
xor
push
rorb
lahf
add
inc
repnz
enter
sub
fiaddl
out
lods
add
inc
pop
xor
or
inc
adc
xor
inc
mov
sbb
rcr
and
lods
orl
jmp
cmp
xlat
add
cmp
push
xchg
out
cmp
insl
and
dec
mov
adc
mov
cmp
add
ret
je
adc
adc
inc
push
aas
push
push
xor
mov
or
xor
cmp
test
mov
insb
adc
ret
xchg
jmp
rcrl
ret
sar
inc
add
testl
mov
xchg
push
push
push
sbb
sub
jae
mov
and
popa
and
push
in
mov
push
jmp
mov
jl
fdivs
jne
cld
push
aas
adc
cmp
sete
sub
dec
mov
nop
jg
sub
add
cmpsl
dec
add
pop
adc
test
dec
pushf
add
xchg
bound
mov
mov
sub
adc
ret
mov
andb
aad
ja
adc
adc
or
mov
mov
fists
mov
xor
addb
fistpll
and
sub
push
stos
in
cmc
ret
push
inc
mov
dec
mov
cmp
xor
es
fwait
outsb
pop
and
lea
push
rdpmc
inc
ret
jg
loope
dec
testl
pop
lea
or
out
and
insl
mov
or
jne
pop
or
or
dec
inc
pop
sbb
jno
pop
mov
imul
mov
adc
jno
and
sub
repz
es
add
adcb
xor
lret
adc
pop
insb
xchg
add
popf
shrb
sub
sub
cmp
int
shrl
pop
or
xor
cmc
test
xor
push
pop
and
das
test
and
jo
inc
ret
xchg
and
loope
pop
call
int
cmp
outsb
mov
jnp
adc
lahf
mov
sub
mov
and
sub
into
test
inc
jbe
jmp
cmp
or
adc
add
or
movsb
inc
adc
add
dec
cmp
push
mov
scas
adc
jle
sbb
rorb
stos
xor
leave
and
push
cmpb
dec
jno
jmp
xchg
aam
stos
lock
dec
aaa
push
and
add
or
cmp
adc
stos
xchg
adc
xor
loopne
or
xor
or
sahf
pop
or
mov
xchg
andl
mov
cmpsb
xor
jle
loope
mov
stc
inc
push
push
pop
jo
add
mov
popa
nop
add
scas
popf
ds
jb
push
leave
xchg
adc
inc
lock
addr16
adc
adc
sahf
mov
test
adc
push
push
inc
inc
adc
jno
out
adc
popf
fidivrl
movb
xor
mov
add
sub
inc
testl
or
test
dec
out
sub
adc
cmpsb
ret
mov
shr
lock
mov
cmpsb
add
rorl
fnstsw
call
xor
and
mov
mov
push
add
fdivr
mov
bnd
xor
sbb
adc
push
push
mov
fwait
xchg
loopne
stos
pop
jp
mov
shrb
pop
inc
rcll
jg
clc
xchg
mov
push
je
push
pop
clc
xchg
cmpsb
mov
xor
mov
ret
and
add
xchg
nop
mov
add
data16
dec
push
jg
sarb
in
add
lcall
cmp
jne
sbb
inc
fistps
dec
je
inc
jp
ja
cmpsl
ret
iret
das
bnd
fld
mov
add
cmpsl
adc
and
cmp
mov
std
pushf
mov
mov
subb
test
adc
xchg
sub
sbb
cwtl
sbb
je
mov
mov
mov
jg
adc
add
sub
or
lea
jge
push
push
int
ja
push
imul
cli
pop
xor
mov
add
cmp
push
xor
fidivrs
sub
sti
outsb
jmp
pushl
mov
shll
lods
jp
sub
xor
sbb
sub
inc
fistps
sbb
test
mov
xchg
lods
xchg
fmuls
inc
xor
push
inc
mov
and
or
sbb
gs
inc
and
xchg
addl
inc
int
jb
mov
jp
add
pop
dec
mov
sar
js
and
xor
je
cmpb
mov
lcall
shll
cmp
push
add
adc
pop
xchg
add
sub
add
testl
out
xorb
lret
lret
add
cmp
push
or
fdivrs
xchg
lods
or
cmp
dec
hlt
jge
arpl
jp
add
add
popa
inc
inc
sbb
dec
repnz
xchg
cld
push
movl
rcrl
or
fsubrs
jo
jno
push
es
xchg
or
push
sahf
jl
mov
lahf
and
pop
push
jg
push
add
push
out
sub
ret
mov
adc
gs
lahf
call
dec
dec
cld
sub
add
ds
loope
lea
mov
mov
sub
add
jle
leave
or
jo
mov
hlt
sub
enter
push
test
inc
mov
mov
dec
fidivrs
xorl
cwtl
and
loopne
xor
loope
insl
test
imul
adc
or
pop
or
subl
inc
push
bound
adc
mov
xchg
or
sbb
xchg
sub
add
xor
mov
push
mov
lods
jae
decl
loope
push
cmc
scas
outsb
inc
or
js
aad
mov
insl
inc
jle
jg
addb
mov
ret
aas
cmp
pusha
dec
inc
jle
js
add
or
call
push
jp
into
int3
ret
das
aas
enter
adc
outsb
xchg
lahf
or
dec
and
mov
repnz
cmp
sbb
xchg
or
ret
insl
popf
sub
adc
xor
imul
push
jb
jmp
cmp
add
and
xor
clc
add
mov
decl
testb
jl
mov
and
pop
adc
sarb
lock
out
cli
sub
inc
imulb
lock
loop
sub
add
pop
mov
xor
popf
dec
sbb
mov
je
add
sub
xchg
push
int3
lea
fstpl
lea
hlt
cmp
rolb
imul
sbb
inc
and
push
push
fwait
into
js
fnstcw
outsb
push
add
push
movsl
mov
and
push
jmp
rcll
cmpsl
ret
xchg
ja
sub
lock
insb
repnz
hlt
xchg
sbb
lea
mov
sbb
mov
pop
pop
pop
ret
je
inc
lret
int
pop
pop
mov
jmp
jl
add
ret
pop
mov
add
out
flds
jle
push
push
mov
mov
add
popa
pop
incb
jne
inc
push
fadds
sub
adc
inc
push
roll
jae
jg
add
test
jb
push
xor
inc
add
mov
mov
scas
loop
jp
outsb
sbb
stos
mov
mov
or
lods
pop
sbb
cmpsb
push
mov
push
imul
sub
je
or
xchg
andl
popa
push
int3
adc
xor
add
es
cmp
orb
mov
andb
adc
packsswb
jp
addr16
movsb
xchg
cld
push
push
cmp
loopne
jmp
fsubr
test
mov
push
xor
pusha
or
and
push
lds
faddl
mov
cmpsb
push
lock
lret
cmpsl
lret
xor
add
jo
cmp
popf
push
iret
xor
sub
lods
imul
imul
icebp
jge
adc
cmp
je
stos
jmp
aad
in
or
sbb
add
add
aam
xor
les
add
mov
xor
sbb
fisttpl
sub
adc
add
fstps
push
clc
lock
push
js
inc
adc
adc
xor
clc
xchg
dec
dec
jle
enter
push
push
enter
and
mov
jae
mov
dec
pop
push
push
add
decb
jmp
push
inc
jmp
push
add
sub
out
pop
cmp
cs
cwtl
and
push
dec
add
push
cltd
push
jae
cmc
adc
or
shlb
xchg
or
jno
dec
cmp
and
xorb
mov
and
or
adc
and
jb
sub
mov
push
repz
test
cmp
pop
cltd
push
lods
add
adc
sbb
push
sbb
stos
mov
in
rclb
test
xor
xchg
push
xchg
add
loopne
das
test
inc
add
fisubrs
gs
push
inc
inc
push
xor
xor
es
sti
je
adc
scas
pop
and
es
push
mov
xchg
jno
dec
mov
mov
dec
mov
jle
cmp
add
pop
add
pop
add
addb
mov
mov
dec
out
jp
jnp
insb
push
sbb
and
mov
out
orl
sbb
vunpcklps
jmp
jo
xchg
pushl
sbb
call
sub
add
mov
xchg
or
cmp
add
pop
mov
lds
mov
push
fidivrs
push
mov
andb
pop
pop
rcll
pop
and
dec
and
sub
jo
cmp
inc
push
inc
pusha
in
jecxz
mov
lcall
jne
sti
sub
aaa
xchg
cli
and
push
repnz
and
sub
aam
js
push
jne
roll
fildll
pusha
aad
dec
jns
push
cmp
mov
es
lock
cmc
jecxz
arpl
pop
jle
pop
int3
mov
fdivs
ret
nop
add
pop
das
sbb
or
cmp
pop
cwtl
ds
add
sub
xchg
mov
inc
and
dec
and
pop
inc
aas
or
movsl
add
sub
push
xchg
insb
adc
rolb
xor
jle
rcrb
cmpb
add
inc
test
jb
pavgw
xchg
and
jno
out
pop
rorl
stos
or
adcl
push
adc
jecxz
inc
sbb
mull
loope
adc
mov
fstpt
ret
hlt
push
test
stos
jg
test
inc
xor
movsb
lock
daa
gs
arpl
push
arpl
shrl
in
push
insb
push
and
dec
movsl
push
sub
and
xchg
std
sahf
inc
push
sub
je
xchg
mov
mov
push
cltd
dec
add
imul
inc
popf
and
mov
addb
insl
sub
test
jecxz
and
stos
xor
test
clc
lea
push
adc
sub
push
insl
lret
subl
pop
mov
add
inc
or
adc
test
stos
or
add
js
push
in
nop
subl
lret
mov
loope,pt
enter
push
adc
setb
loop,pt
nop
cltd
sub
push
stos
sub
adc
rolb
lods
cwtl
dec
adc
pop
stos
cld
test
adc
lahf
testl
cs
scas
mov
push
add
jl
add
arpl
pop
inc
sbb
pop
jo
lret
or
add
aas
push
out
ds
adcl
jne
jo
mov
xor
add
or
and
jne
cmovg
push
cwtl
add
pop
js
call
lock
adc
sbb
sub
movsb
dec
movsl
sub
movl
mov
mov
imul
ss
rcll
and
jo
out
rcl
scas
xor
xchg
pusha
sbb
push
sub
inc
xchg
repnz
push
sbb
xor
xchg
shrb
orl
jecxz
enter
je
insb
inc
jg
xchg
sbb
push
cmp
inc
mov
push
fcoml
loope
adc
lods
sbb
addr16
push
push
or
push
or
gs
outsb
add
gs
fcoml
lea
add
iret
push
repnz
xor
pop
add
insl
leave
sub
nop
arpl
jo
or
adc
mov
sub
decl
and
push
push
test
fs
mov
ret
mov
adc
jbe
or
lds
pop
sbb
mov
pop
pushf
xor
dec
aas
add
mov
arpl
jno
popa
test
inc
adc
outsb
push
or
cmp
jb
pop
pop
fdivrs
lcall
add
lahf
mov
cmp
push
push
inc
sub
adc
movsb
loopne
je
sbbb
add
test
jb
mov
jle
or
jg
loop
or
mov
sub
imul
add
in
fimull
jecxz
call
inc
xor
mov
jno
mov
sub
or
jge
lret
mov
jmp
xor
dec
add
lcall
das
cmp
sahf
loopne
cmp
aas
push
push
and
gs
es
bound
mov
imull
xchg
lea
add
pop
push
push
push
xchg
dec
movsl
adcb
out
cld
push
push
push
push
in
outsl
xchg
sub
add
add
adc
movb
mov
pusha
push
ljmp
sub
jb
pushf
or
or
mov
in
daa
mov
sbb
mov
sbb
add
mov
loope
lea
jmp
into
nop
pop
push
sub
enter
sarl
push
rorl
ret
mov
fstl
fadds
ret
rclb
xchg
nop
xchg
add
outsb
pop
outsl
inc
int3
push
mov
or
pop
outsb
xchg
lock
ret
pop
xor
adc
mov
scas
nop
outsb
std
insb
adc
inc
pop
incl
pushf
or
fs
sub
sub
pushf
inc
inc
inc
popa
repnz
pop
enter
jo
jmp
fs
adc
mov
test
mov
lods
pop
pop
mov
or
add
add
sbb
push
push
xor
or
cmpl
push
jp
ds
mov
addl
idivl
cmp
mov
out
sbb
in
je
sbb
adc
lret
jno
pop
xchg
push
push
mov
in
push
push
ds
or
push
adc
jns
test
and
dec
cli
inc
add
inc
lock
lds
sbb
push
push
xor
mov
jge
loopne
add
dec
pop
das
pop
and
fcomps
or
popa
adc
or
enter
idivb
pop
fimull
cmp
je
push
push
mov
xchg
xor
push
add
or
add
sarl
cmp
hlt
sbb
xlat
push
xchg
xlat
popa
inc
imul
ret
call
stos
inc
and
sub
mov
sbb
pop
and
add
neg
rolb
sbb
inc
cld
xor
idivb
xchg
cmp
cmp
add
sbb
scas
xor
and
push
call
lock
sub
jmp
xor
mov
push
push
mov
or
sbb
sub
aam
push
mov
mov
or
xor
rclb
ret
xor
pop
pop
pop
js
popf
inc
cli
call
push
or
loop
and
inc
call
out
xchg
fcos
push
ret
xor
push
dec
cmp
adc
or
add
mov
ja
lock
dec
or
pop
sarl
sbb
shrl
mov
add
add
adc
jg
sbb
outsb
cli
push
nop
dec
inc
scas
or
or
lahf
xor
xor
push
adcb
push
lcall
gs
inc
sbb
mov
in
pop
add
sarb
int3
or
push
push
mov
testb
dec
lock
bound
cmp
popf
and
popa
mov
incb
imul
stos
shrl
fdiv
xchg
inc
push
gs
scas
insb
popa
push
stos
sub
aad
ss
inc
jnp
cmp
jae
mov
push
pop
or
add
insl
pop
movl
inc
push
mov
ljmp
mov
lret
cmp
cltd
jno
or
xchg
xchg
push
pushf
js
cmp
sub
xlat
sub
cmp
sub
mov
push
mov
cmp
test
and
add
sbb
ja
ror
ret
jge
movb
add
addr16
imul
rorl
cld
sub
inc
inc
mov
inc
nop
mov
jns
lea
mov
push
push
push
xchg
test
mov
mov
sub
sahf
or
push
fwait
dec
pop
cmp
lock
andps
shlb
jo
push
in
mov
movsb
cli
lock
push
pop
pop
cmp
call
mov
ret
pop
loope
xchg
test
or
pop
ret
lahf
dec
jb
cmp
sbb
xlat
sbb
frstor
cmp
nop
pinsrw
push
pop
mov
push
dec
push
out
shrl
inc
ret
xor
adc
push
cmpl
sbb
xor
mov
insl
pop
push
outsb
and
ds
add
mov
mov
sahf
mov
iret
prefetch
or
inc
and
sub
or
or
pop
out
dec
mov
test
pop
mov
sbb
lods
lods
outsb
xor
cmp
push
ljmp
xchg
xor
xor
fnsave
pop
sub
in
addr16
mov
adc
sbb
pop
and
clc
movl
add
daa
inc
inc
ljmp
sbb
mov
dec
and
hlt
hlt
pop
lret
mov
imul
hlt
jge
mov
push
dec
lea
push
test
adc
inc
js
lods
push
mov
dec
into
or
mov
or
inc
cli
cmp
popf
dec
or
inc
sbb
repnz
jecxz
mov
xor
dec
jo
arpl
mov
dec
jl
and
je
cmp
pop
jo
divl
add
dec
pop
and
fnstsw
push
mov
cmp
cmp
xor
fs
mov
orb
push
js
cvttps2pi
push
push
mov
jmpw
adc
lods
dec
sub
push
push
dec
cmp
and
and
aam
cmp
push
push
push
and
pusha
lods
lods
mov
push
loope
and
loop
mov
dec
jmp
mov
push
push
movsb
stc
dec
lea
push
push
ljmp
cmp
imul
std
clc
mov
dec
rcr
xchg
mov
repz
inc
jp
xchg
dec
add
sub
out
jo
iret
mov
int
or
fisttpl
cli
or
inc
mov
push
sub
adc
movsb
sbb
rcrl
int
in
nop
sbb
lods
mov
ret
fdivrl
push
add
push
mov
cmp
fidivl
push
fs
lock
add
adc
mov
scas
pop
dec
and
pop
push
push
daa
adc
shlb
mov
push
loopne
ljmp
or
or
orl
push
andl
sub
pop
dec
jo
andl
lcall
xor
dec
je
cli
adc
pop
loope
add
sub
rolb
movsl
mov
pop
inc
add
sub
xor
test
jmp
mov
sbb
mov
pop
or
sub
pop
pop
or
adc
push
mov
xchg
push
push
data16
mov
lret
push
out
in
adc
insb
fs
mov
adc
inc
adc
popf
cmp
mov
jge
and
or
push
push
imul
push
push
add
lea
pop
xchg
fdivl
fiaddl
cmp
jnp
xor
rorb
push
or
pushf
or
mov
and
fs
popa
xlat
jae
adc
jmp
sbb
mov
push
push
xor
push
shll
sub
push
loopne
cmpsb
and
add
cltd
and
or
cmpb
sub
fisubs
mov
inc
sub
push
loopne
mov
or
push
xchg
xchg
cmp
js
or
push
scas
ja
jle
dec
jmp
mov
movsl
sub
das
xchg
lock
and
clts
mov
add
pop
inc
push
or
add
dec
push
xor
out
gs
pop
and
clc
add
xor
dec
std
mov
mov
ljmp
xchg
mov
fsubrs
adc
repnz
adc
add
stc
fldcw
cmp
pop
in
jns
mov
shll
aad
cmc
lret
adc
lock
adc
fsts
movsb
loopne
xor
mov
dec
mov
inc
sbb
pop
push
xchg
sub
inc
adc
or
adc
dec
adc
ljmp
sahf
or
jl
bound
sub
test
push
pusha
ss
pop
jmp
mov
repnz
test
add
mov
cmpsl
cmp
and
mov
inc
fidivs
sti
inc
adc
andb
inc
push
je
sarb
add
out
sub
push
les
mov
repz
test
cmpsb
and
fs
cli
mov
pusha
push
test
jle
cmp
xor
cmp
adc
cmp
xor
mov
jl
push
icebp
dec
or
cmp
pop
negl
or
jl
push
pop
jg
mov
pop
inc
pop
insb
push
sub
stos
cld
insb
mov
push
pop
test
xor
or
rol
or
into
vpunpckldq
sbb
sbb
cmp
aad
les
add
repnz
dec
adc
mov
cmp
inc
jo
jo
xor
push
pop
push
ss
nop
icebp
pushf
and
rcrl
inc
push
sbb
mov
pop
test
pop
xchg
sub
and
sarb
push
push
xor
fisubl
je
add
lcall
xchg
push
push
pop
pop
adc
inc
and
mov
sub
or
mov
sbb
push
xor
push
mov
arpl
add
push
and
push
mov
popf
sarl
inc
cmp
dec
mov
dec
xchg
ja
ja
jmp
ss
push
add
test
fmulp
sub
mov
insb
scas
and
or
gs
sbb
or
leave
in
xor
data16
out
push
cwtl
mov
cltd
in
dec
jne
dec
jp
inc
call
cmp
loopne
dec
push
pop
sub
shrl
pop
fsubr
xchg
jp
xor
adc
roll
sbb
ret
nop
mov
les
cmp
dec
int3
inc
jno
push
push
sbb
pop
and
sbb
xor
cmpsl
adc
out
jo
dec
inc
sbb
mov
testb
or
js
push
cmp
pop
xor
adcl
dec
and
mov
cmp
dec
or
and
pusha
xchg
pop
xor
xor
call
jne
push
push
inc
or
outsl
mov
sub
adc
dec
je
fiaddl
fcomp
aaa
mov
mov
inc
adc
push
pop
and
jno
outsl
sub
sbb
add
adc
xchg
push
dec
xchg
and
bound
cltd
test
dec
add
jns
sbb
out
aam
xchg
test
cmp
or
dec
lock
int
sbb
dec
imul
pop
mov
push
rol
clc
test
int3
sub
nop
xchg
aam
xchg
xor
push
push
arpl
cmp
add
or
inc
pop
outsl
cmp
push
addr16
nop
inc
sarl
pop
and
movsl
int
xor
adc
bound
stc
pop
outsb
test
push
dec
sbb
pusha
and
cmp
xor
inc
add
mov
jno
cmp
mov
and
and
clc
or
pop
mov
push
lods
fadd
pushf
mov
inc
inc
inc
push
cmp
call
jecxz
jl
loop
out
mov
mov
fs
fwait
icebp
mov
inc
ljmp
push
hlt
push
popf
push
adc
shlb
jo
cmp
jp
xor
out
adc
push
and
sbb
in
inc
inc
sub
push
xchg
and
sti
dec
add
cltd
sub
sub
jo
lock
sub
pop
clc
insb
dec
sub
daa
cmpsb
fimuls
rorb
cs
mov
imul
mov
inc
or
mov
shrb
fs
sub
push
fs
pusha
or
adc
fsubs
mov
sbb
adc
das
rcrb
pop
cmp
adc
sbb
inc
mov
push
push
rcrb
xor
mov
pop
or
push
and
cmp
adc
jge
call
jae
jmp
aam
add
js,pn
fidivl
movsl
jge
ret
jno
add
mov
push
insb
sbb
add
jmp
sub
push
push
xlat
and
jmp
bt
xor
xchg
jge
dec
roll
decl
aad
sbb
dec
insb
sub
les
addl
int3
ja
cmp
repnz
jnp
adc
stos
sbb
int
push
adc
push
sub
add
shll
mov
or
adc
jb
mov
pusha
adc
or
or
fistl
arpl
pusha
cltd
inc
or
pop
imul
add
pusha
test
push
testb
pop
stos
add
xor
out
das
mov
test
inc
repnz
aas
adcb
push
adc
es
sbb
add
pusha
js
and
jl
mov
add
cs
ljmp
inc
sbb
aaa
push
clc
mov
lods
mov
daa
cmp
test
cmc
xor
mov
js
pop
mov
push
cmp
mov
push
jmp
jnp
mov
xchg
mov
jns
dec
mov
add
in
xor
jmp
jl
mov
push
lea
sbb
jle
xchg
lock
sbbb
jge
lds
cld
test
xor
rorb
aas
mov
push
xor
lret
fcmovnu
scas
jmp
jmp
lea
mov
popa
jbe
jb
call
pusha
push
cmc
jl
sbb
rorb
out
add
ljmp
push
mov
call
mov
and
imul
andl
orb
inc
mov
cs
or
mov
orl
mov
loope
ds
dec
rorl
add
push
jl
lret
and
adc
sub
sbb
fldl
popa
js
sbb
jmp
es
inc
add
mov
addr16
sub
and
push
push
das
inc
add
mov
ljmp
adc
jb
aam
or
sbb
and
inc
pop
rcrl
and
xchg
lea
cmp
jno
arpl
mov
push
fisubs
mov
adc
push
or
mov
and
adc
aam
and
or
push
mov
push
inc
pop
jb
mov
je
aad
imul
mov
cmp
adc
xchg
xor
je
push
aam
loope
rcrb
fs
inc
adc
adc
xchg
xor
xchg
xchg
mov
mov
xchg
jg
jl
inc
cmp
lret
test
mov
xor
jne
xchg
into
mov
xor
adc
cmp
xchg
and
pop
cmp
inc
dec
inc
or
pop
pop
out
xchg
add
testl
mov
or
fdivr
arpl
push
fmuls
std
out
insb
fstl
movzbl
push
mov
shr
adc
push
push
and
push
push
push
add
sub
sbb
sbb
push
xchg
xchg
sbb
aaa
leave
inc
add
or
inc
mov
push
and
cmp
sbb
jne
add
cltd
pusha
add
icebp
lcall
out
popf
ret
push
add
ds
xor
push
aas
filds
dec
into
test
mov
xchg
es
aaa
and
ffree
adc
dec
cmpsb
dec
movsl
mov
push
in
mov
adc
push
inc
cmpb
shufps
pop
cli
mov
out
push
sub
cmc
sub
push
push
push
orl
sbb
scas
cmp
dec
mov
cmpsl
inc
mov
insl
and
and
fidivs
xor
inc
inc
dec
lcall
and
adc
mov
push
pop
cs
push
push
cmp
lds
push
repnz
adc
testl
shll
pop
hlt
cmp
stc
dec
mov
mov
adc
dec
or
and
repz
push
mov
adc
push
inc
call
insb
jge
cmp
jne
push
dec
and
pop
adc
jne
adc
push
sub
and
jmp
daa
pushl
adc
add
std
sbb
inc
pusha
sub
cmp
mov
add
lea
je
shlb
mov
sub
inc
add
jg
inc
inc
sub
mov
andb
test
faddl
push
in
inc
pushf
jo
popl
adc
sbbl
dec
cld
pop
arpl
or
cmp
and
or
xor
inc
cmp
js
mov
xor
fistl
push
sub
ret
jg
sarb
mov
xor
mov
mov
push
lds
loop
fs
sarl
mov
and
ljmpw
push
call
aaa
in
out
and
add
out
xor
jl,pt
jno
xlat
jnp
ret
push
mov
dec
add
js
sub
fiaddl
rorb
push
shll
int
in
sbb
cs
mov
call
enter
lret
add
and
push
lock
repz
push
lea
push
inc
push
bound
mov
pop
add
add
add
jecxz
mov
and
dec
push
cltd
pop
and
sub
xchg
inc
xchg
bnd
cmp
xchg
and
cmp
fcomi
cmpsl
or
mov
cmp
or
mov
lods
fistl
aaa
add
and
sub
add
sub
sbb
out
or
cmp
jbe
and
sti
add
add
xor
cld
push
test
nop
and
shrl
cmp
cli
and
or
rclb
sub
loopnew
or
inc
sub
or
xor
push
addr16
hlt
ret
sbb
mov
lret
imul
mov
hlt
jmp
lcall
ret
jg
outsb
cmpb
jne
inc
inc
xor
mov
inc
or
jp
sub
cmpsb
or
adc
adc
and
cwtl
and
jbe
shrl
lods
inc
or
xor
add
mov
test
test
nop
or
jne
cmpsl
push
xor
push
sbb
xor
cwtl
call
push
pushf
xor
add
cltd
sbb
ret
mull
dec
jb
aaa
fstpl
mov
imul
add
lds
inc
or
add
dec
sahf
mov
inc
jb
add
cmp
add
rcrl
aas
fdivrp
dec
pusha
sub
mov
xchg
xlat
movl
mov
adcb
sar
and
mov
imul
xor
mov
stos
lock
lods
mov
sbb
lret
push
test
mov
add
and
add
or
imul
mov
int
add
incb
pop
push
pop
mov
push
loope
cltd
push
sub
iret
dec
movsl
mov
inc
xor
pop
mov
les
jne
insb
int3
cmp
xchg
pop
inc
push
push
cmp
jl
clc
or
cmp
push
push
xor
cmp
lods
jmp
lahf
push
sub
add
shll
sub
dec
adc
pop
sbb
adc
sub
sahf
add
out
sub
adc
add
sub
xor
cmp
popa
push
jmp
xor
push
sbb
or
xor
out
inc
pop
cmp
dec
imul
or
push
shrb
or
add
or
popf
pop
je
sub
dec
pop
mov
inc
iret
cmp
push
jne
loope
or
jne
xchg
test
aaa
mov
loopne
int
sahf
dec
or
rorl
mov
mov
roll
pop
mov
push
in
jge
loopne
movsb
je
sub
or
and
xchg
jne
sbb
cmc
loopne
add
mov
pop
ret
lea
loopne
sbb
fimull
inc
rolb
sbb
cmpl
test
push
cltd
out
fcoml
or
push
and
sbb
dec
sahf
sub
adc
arpl
nop
or
movsb
sbb
sbb
adc
sbb
rorb
add
xor
push
lds
ss
fdivrs
jl
pushf
cmc
inc
mov
dec
ret
rorb
mov
pusha
pop
es
and
cmp
dec
insb
and
scas
jg
out
fmull
sub
jl,pn
adc
lea
sub
add
scas
mov
add
xor
mov
js
mov
mov
push
push
movb
cmp
enter
dec
hlt
adc
sbb
enter
mov
mov
loopne
push
xor
adc
mov
push
test
fstpt
loopne
jns
jmp
mov
cmp
push
mov
add
sbb
inc
mov
dec
mov
inc
adc
pop
add
adc
adc
movsb
rcrl
lock
inc
add
fisttps
adc
and
ds
adc
hlt
pusha
add
or
push
fs
lahf
inc
bound
or
push
int3
addl
into
pop
and
xchg
sbb
orl
mov
pop
sbb
hlt
and
xchg
mov
into
aam
push
push
jbe
pop
fisttps
inc
movsl
mov
test
insb
hlt
xchg
or
cld
aam
test
mov
and
pop
cld
push
inc
push
dec
inc
push
aaa
and
aaa
dec
loope
lock
mov
sbb
jbe
hlt
xchg
and
inc
dec
cvttps2pi
sarb
jb
or
mov
mov
in
xchg
and
jmp
les
movsb
lods
pop
ret
dec
in
mov
and
adc
inc
imul
cld
cmp
lock
pop
ret
push
lret
jno
xor
xchg
fmul
pop
xchg
add
dec
jbe
decl
and
or
add
mov
cmp
sbb
add
or
fstpl
add
jae
ror
or
push
sbb
xchg
sbb
jmp
test
adc
add
popa
or
adc
js
stos
ja
and
and
orb
inc
mov
imul
je
sub
insb
and
sub
test
adc
sub
stos
rcl
dec
and
inc
mov
pop
nop
dec
adc
jnp
pusha
or
or
hlt
mov
inc
adc
ds
sbb
cmpb
or
or
push
sbb
std
xchg
fmuls
and
pop
pop
aaa
adc
lea
adc
test
enter
clc
inc
xchg
cmpl
sbb
popa
aad
call
pop
xor
addr16
mov
inc
dec
inc
ret
add
cs
sbb
enter
pusha
adc
and
mov
mov
cmp
fnstsw
mov
push
fcoms
xchg
and
in
lcall
xchg
outsl
xor
and
xor
xchg
arpl
mov
bound
fcomps
push
sbb
xchg
xchg
aam
xchg
xor
adc
call
test
push
xchg
mov
adc
sbb
stos
or
push
inc
int3
icebp
inc
xor
es
push
or
push
shrb
dec
enter
imul
jp
jns
enter
xchg
jle
sbb
adc
mov
inc
cmpsl
mov
push
enter
test
push
dec
lock
testl
mov
ret
icebp
and
cmp
js
push
lsl
mov
loop
adc
sbb
dec
stos
scas
cmpsl
cmpsl
xorl
inc
pusha
jbe
sbb
cmp
inc
and
adc
push
jns
aas
lea
outsl
jl
imul
imul
test
adc
mov
or
outsb
jno
inc
mov
sub
leave
adc
and
pop
je
inc
sbb
movsb
jns
push
repz
cwtl
adc
sbb
in
inc
mov
mov
inc
mov
push
push
test
sahf
loopne
add
dec
mov
add
fcoms
lea
cmp
jne
cmp
aaa
dec
loopne
mov
andb
pop
lahf
pop
dec
mov
data16
lcall
or
cmp
sbb
sub
mov
or
aam
call
xchg
int
lock
mov
notl
inc
test
cs
push
bound
pop
sbb
add
inc
js
mov
xor
cmp
je
inc
sub
sarl
xor
push
mov
mov
mov
cwtl
or
pop
mov
nop
lahf
stos
jp
leave
dec
dec
sbb
sbb
add
xlat
inc
lods
and
or
add
out
hlt
lea
roll
xor
jae
add
imul
add
xchg
shll
jo
lock
push
cmc
test
push
test
push
push
das
mov
jp
mov
inc
mov
mov
or
test
pop
xchg
xchg
lds
cmc
scas
ret
imul
fsub
and
mov
mov
or
not
mov
or
mov
cmp
jle
xlat
adc
push
mov
sbb
sub
pop
lods
mov
pop
shrb
cmpsb
xor
push
mov
or
daa
and
in
push
and
mov
lods
or
lcall
adc
mov
mov
mov
mov
in
sbbl
loopne
inc
aaa
sahf
int
mov
jmp
test
in
jns
mov
xor
scas
fs
lock
jle
test
nop
add
shlb
add
push
ret
test
clc
sbbl
popf
xchg
adc
cltd
or
jmp
sbb
and
out
inc
add
mov
ret
mov
push
push
cmp
cmpsb
add
and
imul
mov
inc
stos
mov
mov
mov
fs
imul
push
push
sbb
aam
mov
push
loop
push
pop
pop
push
test
cmp
and
xor
xchg
dec
inc
cmp
and
push
mov
sub
mov
and
inc
and
push
dec
and
add
cmp
jns
push
cli
mov
or
pusha
sub
jns
ror
inc
out
scas
cs
sub
mov
adc
roll
mov
gs
movsb
xor
test
out
xor
and
out
mov
stos
adc
fsubrs
mov
cmp
and
add
sub
inc
pop
add
sub
add
mov
pop
sbb
arpl
ret
jns
inc
shrb
shll
adcb
insl
jno
fdivl
adc
mov
sbb
lcall
jle
rorl
or
rcr
cmpsb
sbb
stc
jb
sbb
add
cmp
xchg
jns
sti
jae
cwtl
add
mov
jmp
xor
sbb
xor
ja
push
push
or
arpl
adc
std
inc
inc
ljmp
incl
and
pop
or
jnp
push
xor
cmp
jb
fstpt
outsb
add
flds
sarb
dec
pop
ss
mov
fisttpll
ljmp
aad
std
adc
adc
jno
cs
mov
or
cwtl
mov
mov
fs
sti
ret
adc
or
movb
pop
rcr
xchg
or
mov
push
inc
incl
jo
test
sbb
inc
xor
mov
rcll
pop
adc
inc
xchg
enter
mov
add
mov
mov
flds
add
add
js
sbb
stos
and
jne
pop
cld
and
ds
and
xor
repz
sbb
lea
jb
aam
hlt
mov
dec
or
cmp
pop
xor
cs
sub
or
cs
xor
push
adc
push
scas
loope
les
pushf
cmp
cs
dec
loop
sbb
add
mov
xchg
popf
xor
adc
sbb
mov
cmp
fnsave
push
add
or
inc
rclb
push
ret
test
cmp
pop
js
hlt
inc
pop
or
push
or
fldcw
pop
xor
mov
popa
push
mov
out
dec
or
into
adc
push
clc
pop
inc
cmp
jp
sbb
shlb
cmpsb
or
dec
or
test
adc
push
mov
fwait
jecxz
rclb
pop
inc
loopne
mov
adc
sbb
adc
inc
repnz
or
mov
pop
aas
cltd
mov
pop
add
jb
movsb
inc
cs
sbb
mov
push
and
push
pusha
cmc
subb
inc
xchg
pushf
xlat
jo
sub
mov
jecxz
gs
les
or
adc
stos
inc
cwtl
scas
inc
sub
in
sar
inc
lock
xchg
jge
sub
mov
inc
hlt
adc
es
adc
jo
or
pop
mov
stos
inc
out
xorb
cmp
sbb
inc
or
sbb
fldenv
insb
add
sbb
cmp
popa
sbb
mov
je
mov
jle
dec
adc
inc
push
push
adc
gs
ja
push
add
test
mov
add
in
sub
add
xor
push
mov
in
add
mov
jge
xor
ds
or
fildl
int
or
lea
dec
js
pop
mov
ss
jnp
fcoml
dec
xchg
stos
mov
sub
xchg
xor
cmp
pop
xor
adc
mov
leave
pop
mov
mov
xor
lods
movsb
mov
and
in
mov
dec
fdivl
scas
pushf
jmp
addr16
xchg
ljmp
or
es
inc
jg
add
cmp
and
push
repnz
add
cmp
sbb
mov
inc
xchg
xor
roll
stos
mov
popa
leave
adc
ret
cmp
jle
add
jo
mov
add
push
push
cmp
or
add
adcb
adc
xchg
add
add
sub
dec
gs
sub
add
inc
xor
push
push
nop
lret
cmp
add
or
xchg
inc
or
add
fs
adc
adc
lods
mov
add
lea
sub
adc
cs
or
xchg
or
or
int3
shr
xor
pop
add
dec
jge
xor
mov
or
fsubl
dec
dec
adc
adc
sub
pop
mov
inc
pusha
add
pop
mov
xor
subl
pop
mov
pop
rorl
sti
inc
repnz
je
cmp
xchg
lock
mov
filds
push
pop
ret
xor
cmp
push
ds
bound
cmp
sbb
dec
push
sbb
dec
roll
dec
jae
xor
push
int3
jae
xor
adc
push
dec
inc
cwtl
inc
mov
jp
aas
or
dec
ficoml
add
cmovbe
movsb
sbb
dec
or
dec
or
movsb
sbb
or
cmp
dec
lcall
mov
lcall
and
sbb
add
sbb
mov
add
dec
dec
pop
aas
sub
stos
add
in
jg
aad
cld
add
add
cwtl
in
adc
and
ror
in
dec
or
dec
imul
addr16
mov
loopne
daa
add
je
mov
push
jmp
adc
sbb
xor
mov
pop
fucomi
sbbb
mov
aas
or
orl
dec
popa
adc
mov
mov
movsb
in
stc
jne
icebp
xchg
int
and
adc
movsl
xchg
add
xchg
imul
push
cmp
sbb
push
cmp
or
fcoml
loop
or
cmc
mov
pop
cmpl
and
sbb
stc
push
push
or
pop
cmpsl
add
xor
dec
lods
and
mov
jg
xchg
push
outsl
jbe
bound
test
sub
or
std
sub
imul
pushf
aam
and
cs
and
sbb
inc
cmpsb
push
push
xchg
xchg
sub
test
fsts
mov
lea
adc
sub
sbb
nop
sub
push
rorl
sbb
sbbb
sbb
jns
es
inc
push
mov
dec
mov
mov
push
or
add
movsb
adc
aam
pop
bound
cmp
jge
push
push
push
pop
sbb
dec
jb
push
xor
or
sub
add
or
std
xchg
inc
mov
test
sub
jmp
aaa
jne
dec
dec
cmp
leave
push
push
mov
xchg
dec
cmp
or
in
cld
sbb
cmp
or
lock
popa
xchg
je
push
div
sbb
push
loopne
cmp
xor
add
sbb
leave
adc
jo
loopne
sbb
adc
sub
mov
xchg
sub
in
inc
js
lock
sbb
xchg
push
mov
sbb
std
lcall
lahf
adc
push
xor
jb
add
or
cmc
je
lods
add
es
aam
loopne
sbb
pop
push
add
pop
jno
dec
rorb
orl
pop
loopne
and
jl
je
and
pop
clc
lret
hlt
xor
adc
push
push
and
in
es
sbb
in
movsl
stos
adc
clc
add
mov
or
or
and
test
pop
out
and
lea
push
push
shlb
adc
mov
or
push
movl
mov
fs
mov
cmp
popa
inc
push
ljmp
fiaddl
xor
clc
cmc
sbb
outsb
inc
mov
repnz
mov
sbb
mov
mov
add
xchg
and
adc
and
aad
fmuls
add
push
sbb
jbe
inc
fadds
mov
dec
in
xchg
fcoml
xchg
and
cmp
push
test
jns
mov
js
cmp
adc
push
loopne
mov
mov
rcrl
ja
add
out
dec
in
push
dec
rclb
adc
inc
in
js
mov
shr
rcrb
dec
in
mov
mov
call
lea
add
jo
adc
adc
xchg
sub
sbb
xlat
xor
xor
sarb
ret
dec
insl
xchg
pop
call
pop
add
cmp
push
push
daa
jo
mov
sub
or
sbb
or
rorl
test
or
ret
pop
jecxz
add
push
lea
sbbb
dec
pop
push
loopne
lock
cmpb
push
ficompl
cmp
xchg
popa
mov
insb
adc
or
dec
orb
aaa
lea
les
mov
jo
adc
fiadds
jl
adc
mov
orl
pop
mov
fists
or
or
add
js
sbb
adc
cmp
testb
and
dec
pushf
incl
pop
xchg
sbb
jge
jae
push
and
sti
jmp
mov
movsb
push
in
sub
sub
push
push
xchg
jno
dec
and
add
test
fs
xchg
ret
add
test
insl
je
xor
inc
ljmp
push
and
add
xchg
add
xor
dec
cmpsl
sub
sbb
and
sbb
mov
addl
pushf
jo
inc
in
mov
je
fsubs
cmpl
mov
fs
bound
or
mov
inc
and
and
add
jns
dec
or
or
adc
aad
pop
leave
in
pop
sub
push
sub
or
xlat
jb
and
adc
leave
add
movmskps
adcb
xchg
push
scas
mov
dec
inc
and
fcomps
adc
popl
inc
push
cvttps2pi
sbb
xchg
dec
adc
and
sbb
loope
mov
adc
adc
aam
dec
adc
add
mov
cmp
pop
outsl
lret
je
adc
insl
dec
sub
cmp
push
ja
cmp
loop
xchg
enter
shlb
mov
inc
dec
inc
cmp
adc
cs
iret
js
push
add
pop
pop
daa
push
jb
insb
push
cld
jo
je
cmp
dec
sbb
rcrb
xchg
mov
imul
add
jno
aas
fs
mov
push
cltd
adcb
test
sahf
rol
push
cmp
xor
imul
popa
mov
cwtl
cltd
xchg
dec
rcrb
stc
in
test
sbb
or
jno
push
jno
fldcw
loop
inc
pop
cmp
cmp
jb
movb
loopne
test
dec
sbb
or
add
cltd
push
pop
pop
mov
pusha
sbb
push
iret
cmp
cmp
ljmp
adc
dec
xor
ss
mov
shlb
adc
sbb
or
mov
cmp
fcmovnb
fadds
add
cmp
imul
mov
dec
xchg
or
mov
sbb
mov
pop
push
dec
in
xor
filds
es
jns
xlat
push
lret
out
add
cmp
pusha
push
sbb
jb
inc
push
pop
pusha
sti
add
add
jecxz
jns
ds
push
mov
dec
lds
fs
data16
dec
pop
cmpsb
gs
bound
ret
sbb
lret
push
int3
rclb
xor
push
lods
imulb
lea
jo,pt
cmp
mov
mov
mov
dec
insb
push
and
adc
nop
push
xor
out
dec
jmp
adc
push
dec
loop
pushf
lods
inc
push
imul
add
and
mov
sbb
push
sub
sbb
dec
or
cs
aad
or
dec
iret
test
sbb
push
arpl
push
cs
stos
and
lret
xor
roll
dec
cmp
out
xchg
nop
lret
adc
push
and
push
mov
jno
pop
test
mov
mov
dec
cmp
fdivl
in
in
jge
push
clc
jl
mov
jle
lock
xchg
xchg
push
fnsave
movsl
dec
nop
movsl
nop
fidivl
les
mov
inc
pop
or
fwait
sbb
inc
sahf
adc
mov
rcrb
dec
xor
sbb
pop
and
sbb
push
add
push
push
mov
sbb
ja
pop
xor
fstpl
add
test
bound
xchg
js
add
mov
dec
cld
or
cmc
mov
mov
and
jb
arpl
lock
or
loopne
adc
adc
jle
arpl
pushf
push
pop
jl
push
nop
test
js
je
or
sub
cmp
ljmp
add
add
dec
inc
dec
sahf
xor
sub
repnz
data16
enter
sub
push
pop
aad
mul
jb
shrb
cmp
and
insb
fsubs
cmp
pushf
sub
mov
and
loop
pop
sbb
mov
jle
pop
dec
shlb
inc
adc
push
js
pop
add
iret
stos
es
adcl
adc
or
jo
cmp
mov
bound
push
pop
sub
mov
add
push
rorl
jmp
nop
add
add
clc
pop
cmp
adc
andb
and
xor
push
roll
aam
and
inc
popa
rorl
ja
mov
sti
push
popf
pop
pop
push
sub
loope
lahf
ss
dec
outsl
int3
xchg
jne
jg
sub
addl
push
loopne
push
lock
mov
popf
test
add
sbb
cmp
pushf
aam
jl
sbb
xchg
lahf
push
mov
push
sbb
int
sub
adc
dec
adc
adc
xchg
lods
insb
inc
and
adc
mov
pop
mov
aaa
pop
sub
push
popf
or
add
adc
adc
das
adc
addl
jne
es
aad
or
or
add
inc
dec
outsb
cmp
add
nop
cmove
test
loopne
arpl
out
push
sahf
les
andb
jo
and
fists
and
xchg
in
push
jl
and
xor
jmp
add
sub
push
cli
sar
rclb
cmpb
mov
and
cld
std
maxps
andl
lods
ret
cmp
sbb
add
into
loop
cmp
sbb
je
or
jo
popa
xor
fistpll
adcb
cmpsb
adc
xchg
je
cmp
xchg
clc
mov
xlat
cli
and
pusha
sub
rcl
fwait
mov
loope
push
lock
hlt
or
xor
or
nop
cmpsb
pop
mov
adcl
outsb
xchg
imul
lods
sub
jae
push
mov
cmpsl
mov
add
outsb
test
push
mov
adc
push
enter
adc
add
adc
xchg
ror
adc
jmp
mov
and
xchg
dec
sbb
xor
push
sub
xor
pop
je
adc
mov
incb
in
cmp
jg
pop
fistps
dec
inc
jle
loopne
inc
addl
push
in
push
push
dec
or
add
add
add
xor
dec
jae
sbb
xchg
sbb
and
dec
sub
jo
sub
das
xor
mov
nop
xchg
insb
fs
and
inc
insb
add
xchg
out
xor
inc
xorl
mov
xor
add
adcl
cmp
sub
mov
adc
cmp
call
pop
mov
icebp
or
dec
mov
mov
mov
xor
and
jb
pop
pop
push
js
sub
xchg
jl
je
cs
dec
jl
xor
cmp
dec
jl
mov
dec
je
xlat
push
mov
adc
test
repz
jle
mov
jp
jns
rcll
mov
xor
inc
outsb
pop
mov
adc
xor
enter
jl
xchg
enter
xlat
shrl
add
aaa
xchg
js
and
jmp
das
das
lahf
mov
push
and
in
jbe
dec
add
inc
add
test
pop
push
add
int
or
pushf
push
nop
ds
mov
adc
sub
push
and
pop
push
and
adc
fsubl
push
xchg
bound
push
mov
pop
and
iret
adc
or
mov
sbb
pop
gs
dec
addr16
add
pop
add
mov
pop
adcb
sbb
and
orl
shlb
jge
inc
pop
dec
jecxz
sbb
fisubl
sub
sub
lods
pop
lahf
add
push
push
ret
add
xlat
insl
jmp
mov
lods
cli
mov
arpl
sub
fiadds
aam
mov
xor
das
insb
sbb
ret
das
add
jl
jo
cmp
hlt
add
pusha
pop
ss
movsl
add
inc
js
or
shlb
insb
shrb
outsl
mov
mov
dec
cld
dec
fdivl
gs
xchg
inc
inc
ficoms
sub
add
add
xor
ret
mov
xor
or
adcl
sub
gs
add
leave
mov
add
test
push
out
or
mull
movsl
cmp
imul
pop
andl
aad
jno
sub
or
and
inc
mov
shlb
inc
lock
dec
xor
xor
arpl
xor
scas
xor
push
push
lds
or
push
push
das
or
add
xorl
shrb
std
ret
inc
add
fldenv
sub
adc
sub
or
mov
xor
mov
add
inc
mov
fwait
imul
fimuls
push
xchg
and
in
add
icebp
scas
or
mov
mov
push
push
insl
jp
pop
mov
fldt
or
jmp
xchg
and
or
sbb
push
sub
rcl
sbb
cs
sub
and
push
out
sub
push
mov
pop
jno
xor
lock
popa
repz
and
stc
push
pop
mov
lock
push
dec
xchg
mov
cmc
or
add
sbb
movzbl
mov
in
or
sub
fdivs
sub
shll
dec
arpl
pop
or
fnstcw
fs
pop
sahf
pop
sub
or
adc
push
xorl
or
push
lret
sbb
push
enter
mov
ret
sar
and
loope
in
push
dec
jbe
ss
loope
sub
xchg
je
loope
mov
clc
mov
add
gs
push
sbb
mov
mov
pushf
loopne
arpl
dec
push
fs
cmp
mov
test
or
pop
insl
call
pop
xor
mov
inc
lahf
pop
push
into
and
inc
cltd
add
test
sub
push
mov
ret
push
movsb
cmp
add
mov
inc
call
mov
pop
fisubs
sub
roll
filds
add
adc
pop
idiv
cmp
xchg
mov
inc
outsl
dec
fucom
lods
and
add
ds
inc
pmaxub
fcoms
lods
repz
mov
sbb
jl
xlat
rclb
xor
add
push
adc
je
test
ret
mov
mov
bound
inc
mov
lds
nop
les
xchg
jno
sbb
in
cli
and
lock
mov
movsl
push
pushf
in
test
pop
inc
pop
mov
rcll
push
cmp
pop
or
add
std
lock
push
js
sub
add
and
xor
or
or
cs
or
xor
push
call
pop
mov
jnp
stc
insb
and
adc
mov
sahf
jg
push
xchg
xor
popa
inc
pop
sub
stos
dec
cmp
daa
sbb
xor
dec
pop
push
andl
in
dec
lds
adc
add
sbb
sbb
popf
inc
fadds
inc
pushf
adc
mov
jne
cmp
adc
in
xor
push
sbb
adc
cmp
sub
adc
outsl
and
in
test
fwait
enter
pop
clc
js
mov
or
jne
dec
sbb
in
mov
add
pusha
adc
aam
popl
icebp
test
push
push
in
or
aad
xchg
shrb
pop
adc
adc
jmp
sarb
enter
mov
cmp
jne
sbb
cmovbe
idivl
enter
xchg
inc
cmp
push
enter
inc
adc
and
enter
xorb
jmp
push
hlt
movsb
rorb
outsl
mov
mov
popa
mov
mov
and
dec
nop
daa
mov
and
jmp
data16
mov
push
call
aaa
inc
cmp
pop
ret
cmp
and
fcoml
sbb
xor
push
add
inc
mov
mov
jge
jl
mov
ja
sbb
jo
dec
mov
add
test
push
out
mov
sub
pop
sub
sbb
fiaddl
decl
mov
fcmovb
rcrb
mov
pop
xor
mov
lret
sub
jb
push
push
les
push
insb
cld
sub
add
pop
fbstp
out
gs
lret
push
je
fadd
sar
xchg
sub
and
js
in
add
dec
pop
push
cmp
aaa
ljmp
outsb
sub
xchg
cs
cmp
pop
rcr
jae
outsb
cmp
gs
pop
push
aaa
lea
icebp
or
pop
gs
and
jns
mov
div
adc
sub
or
jne
pop
push
or
in
daa
add
sbbb
push
fstpl
and
adc
and
ret
inc
and
add
push
inc
add
data16
stos
or
and
xor
xchg
ficompl
pop
or
pop
sbbb
sbb
inc
popf
and
mov
pop
stos
or
adc
aaa
int
inc
sahf
xchg
test
adc
cmpsb
xchg
or
add
and
iret
fisubrl
enter
insl
lods
mov
jb
mov
nop
mov
in
jg
mov
movsl
aaa
push
loopne
lea
ljmp
add
inc
ljmp
or
pop
mov
mov
test
jle
dec
dec
outsb
or
push
dec
jle
cmp
int3
out
jge
movzbl
dec
or
fdiv
stc
in
aam
lods
adc
push
mov
popf
xor
mov
and
bound
xchg
test
dec
push
out
sub
sub
pop
aaa
shr
mov
cmpsb
test
add
mov
cmp
je
sub
ds
jo
add
dec
int
cmp
data16
push
mov
andb
inc
push
enter
orb
jmp
stos
xor
arpl
stc
jbe
notb
mov
jbe
sub
fsts
loopne
jle
aad
xor
jle
pop
mov
push
and
fisubl
pop
or
call
mov
shr
or
jbe
mov
cmp
and
fists
sbb
aad
mov
add
add
and
jle
scas
pop
push
cmp
mov
mov
test
subb
gs
aas
add
inc
dec
inc
andb
or
adc
add
cmp
jle
push
nop
pop
ret
add
sbb
xchg
repnz
or
mov
orl
mov
xchg
pop
ret
aas
ja
cmp
sub
js
lcall
jae
dec
add
inc
pop
mov
js
push
sti
fisttpll
mov
cmp
add
push
lock
push
lret
inc
add
movsl
cmp
or
mov
jns
mov
xor
and
and
xchg
sbb
das
dec
mov
pop
sub
or
loop
jns
inc
inc
lea
mov
dec
mov
aaa
add
inc
ss
rorl
pop
sub
xor
dec
mov
imul
icebp
add
pusha
out
pop
ss
or
sub
pusha
mov
mov
js
add
sub
xchg
cmp
xchg
xor
adc
push
fcoms
mov
cmp
insl
or
outsb
sahf
lock
nop
cmpsl
inc
mov
aaa
sbb
jle
lods
fs
bound
adc
sub
pop
inc
dec
ljmp
or
sub
xchg
jp
adc
int3
out
or
adc
push
dec
rorl
orb
jl
and
mov
sbb
js
lcall
or
movsb
sbb
insb
inc
insl
and
fs
ret
push
and
sub
pop
add
pop
dec
dec
push
or
shlb
int
sub
inc
and
bound
mov
cltd
movsb
or
mov
adc
and
add
loop
jmp
jmp
add
sbbl
shlb
mov
test
pop
inc
mov
fwait
add
outsl
sub
add
mov
add
outsb
cmp
stos
pusha
add
add
scas
les
jg
xor
cmp
jne
cmp
cmp
leave
inc
or
mov
xor
adc
adc
outsb
and
repz
jo
leave
mov
stos
mov
testb
mov
icebp
int3
sahf
setnp
or
add
jno
inc
inc
mov
mov
inc
sti
pop
cmp
xchg
mov
movsb
inc
adcb
cmp
jae
mov
lea
adc
sbb
push
aam
inc
aad
jb
or
mov
pop
je
inc
add
and
lods
cmp
sbb
stc
dec
or
es
sub
mov
cli
insb
inc
dec
add
out
push
fidivrl
dec
mov
push
cmp
in
nop
xchg
inc
repnz
push
jg
je
cli
add
mov
rolb
xchg
jae
xchg
push
adcb
cmp
mov
mov
cmc
cmp
add
pop
add
movsl
or
or
pusha
cmp
pushf
sbb
fs
insb
lahf
push
and
movsb
jno
pop
push
hlt
aad
mov
sbb
mov
xlat
pushf
sbb
stos
cmp
lods
add
cmp
xchg
mov
mov
sahf
mov
add
lcall
lods
insl
mov
mov
cmp
adc
xchg
sbb
fstpt
pop
xor
jnp
dec
dec
ret
add
dec
outsl
repz
imul
ret
adc
movsb
mov
mov
mov
sbb
mov
scas
inc
cmp
arpl
clc
add
jae
cmpb
and
pushl
xchg
pop
in
mov
cmp
into
test
repnz
pop
clc
dec
js
xor
adc
aam
mov
and
lret
orb
fcoms
cmp
push
mov
sub
stos
pop
inc
add
sbb
repnz
push
stos
cmc
and
or
testb
and
incb
insb
xor
sub
je
push
jne
lea
repz
shrl
movsb
xchg
mov
and
sub
push
add
pop
inc
fs
sbb
xchg
mov
add
jo
enter
sbb
mov
js
ret
cmpl
mov
popf
gs
popa
lds
mov
dec
ljmp
mov
movsb
push
and
mov
pop
data16
pop
or
in
jns
clc
xchg
movsl
dec
xchg
xor
inc
sub
push
sub
jae
outsb
out
adc
sbb
mov
rolb
add
and
mov
adc
jno
daa
push
mov
add
js
sub
movsb
aas
adc
xchg
mov
add
addl
lds
js
rorl
inc
arpl
fadds
xchg
scas
xor
mov
cmp
inc
add
dec
push
call
pop
and
push
rorl
add
jo
mov
test
jp
fs
mov
mov
adc
and
push
aaa
dec
lods
lods
nop
jl
add
adc
push
movsb
mov
inc
mov
roll
mov
sub
jno
rclb
sbb
push
pop
xorl
mov
jne
pop
adc
pusha
ficoms
int3
rcll
dec
shll
pop
imul
popf
addl
dec
js
sub
inc
lcall
mov
xchg
adc
test
pop
hlt
jo
inc
repnz
jo
mov
add
pusha
sbb
push
es
or
loope
mov
enter
or
popf
push
cs
clc
adc
test
pusha
mov
sbb
lock
movsl
das
test
loopne
inc
out
out
popf
mov
add
jl
lock
sub
push
mov
inc
sbb
xor
and
mov
or
jo
loopne
sbb
xor
pop
xchg
fs
ficomps
pushf
fs
pushf
and
lret
fs
push
sub
rolb
punpckhbw
mov
rcll
enter
push
pop
and
pop
push
push
test
imul
dec
arpl
jb
mov
mov
bound
and
orl
pusha
mov
fs
push
sub
sbb
ficoms
mov
push
and
push
or
ret
dec
adc
or
jae
movl
and
sbb
lea
sbb
pop
jb
or
inc
inc
add
push
sbb
in
ss
mov
or
jns
sub
cmp
mov
jb
inc
pusha
sbb
stos
dec
pop
and
jnp
mov
and
daa
inc
daa
sub
inc
insl
iret
xchg
cmp
and
cmpl
mov
or
rcll
push
outsl
xchg
cmp
lret
cmp
jno
push
test
mov
xchg
pop
push
dec
shl
lods
mov
or
jmp
and
cmp
sti
sub
push
inc
pop
add
pop
cli
dec
push
repz
push
movsl
or
jo
jno
mov
popa
mov
xor
and
sub
xor
adc
push
sbb
repnz
lcall
sbb
xchg
sub
nop
xchg
add
and
movsb
sbb
push
and
inc
mov
xchg
adc
lods
cmpl
dec
adc
rol
insb
scas
leave
shll
ljmp
adc
aad
or
adc
xchg
nop
push
mov
push
mov
and
inc
push
dec
nop
cld
lahf
lds
mov
push
arpl
cmpsl
lods
sbb
cmp
mov
and
or
roll
add
adc
mov
push
inc
push
adc
movsb
adc
stos
sbb
sbb
dec
fistpll
test
mov
adc
lods
xor
inc
dec
loop
sbb
mov
xor
popa
mov
push
xor
and
je
push
sarb
cwtl
add
add
xchg
and
mov
mov
lcall
jbe
mov
call
test
sbb
sub
mov
imul
add
clc
lea
repnz
sub
xchg
push
inc
sub
outsl
ret
insb
enter
leave
das
popf
fadds
xchg
outsb
jmp
or
ja
shlb
push
mov
jge
mov
pop
nop
mov
xlat
xchg
mov
lods
jne
mov
add
sub
popa
pop
subl
or
and
jae
adc
or
sub
faddl
jg
andb
add
or
sub
add
xchg
insl
mov
daa
mov
and
and
lock
or
inc
sahf
or
or
xor
add
push
add
add
js
sub
int3
pop
daa
dec
add
nop
cmp
movsb
mov
dec
enter
push
mov
in
test
adc
cmova
movsb
popf
pop
sub
test
and
les
cmp
inc
bound
sub
test
mov
inc
add
jmp
sub
add
pusha
jmp
sub
ret
adcl
movsb
add
adc
xor
sbb
or
push
rcll
push
mov
adc
or
and
sub
xor
push
add
jbe
xor
inc
push
pop
adc
adc
invd
sbb
or
xchg
xchg
jo
adc
push
jae
enter
pop
shll
test
mov
lcall
sbb
xor
mov
jne
rcrb
js
stos
and
movsl
xchg
sbb
out
inc
add
sub
add
mov
insl
imul
ja
insl
sbb
adc
movsb
and
sbb
stc
xor
inc
ss
push
cmp
pop
xchg
push
sbb
push
push
pop
xor
jmp
xchg
adc
rolb
push
xor
mov
push
and
sub
nop
cmp
adc
sub
xor
pop
push
cmp
jb
and
lock
cmp
cwtl
bound
and
and
add
test
imulb
cwtl
vpperm
test
cmp
sub
xchg
inc
insb
cs
pushf
pop
or
xchg
or
xor
cli
jns
test
inc
fcompl
test
es
ficoms
insb
and
sbb
repnz
or
jo
or
sbb
pop
add
inc
shrb
mov
fs
sub
xor
adc
test
push
rolb
test
or
inc
out
or
xchg
add
xor
cmp
jle
fstl
add
test
push
push
push
push
mov
dec
test
sbb
cmpsl
pop
jne
out
imul
faddl
dec
cmpsl
sbb
pop
mov
addr16
filds
push
das
add
mov
gs
push
pop
add
push
dec
shl
add
add
pop
push
add
mov
rol
xchg
mov
push
cmpsb
inc
adc
push
shlb
jl
frstor
das
and
inc
add
push
popa
add
cmpsb
mov
mov
fadd
add
push
rcrb
cmp
push
mov
pushf
xor
inc
not
or
movsl
cmp
je
aam
aam
test
in
test
lock
or
pop
mov
mov
adc
imul
dec
push
add
fistpl
in
mov
xor
xor
xor
sub
fdivs
je
mov
push
push
cmp
and
inc
dec
mov
and
sub
push
inc
leave
add
and
push
cmp
enter
add
push
mov
movsb
dec
sahf
cmpsl
test
test
or
xor
stc
sub
rep
iret
push
loopne
out
fildl
or
in
repz
or
loope
mov
push
push
cld
roll
mov
mov
xor
out
push
adc
enter
test
xchg
lea
pop
popf
cmpsl
sbb
mov
fidivl
pop
or
fimull
jmp
or
scas
xchg
out
or
or
or
lock
insl
inc
movl
adc
dec
adc
lods
xchg
xor
inc
adc
inc
rcll
pop
cmpsb
push
adc
lret
sub
pop
push
pop
pop
push
out
xchg
gs
pop
leave
and
into
xor
nop
pop
xlat
in
push
xchg
aad
dec
call
in
jb
fstpl
int3
call
arpl
mov
xchg
fcom
es
xchg
add
gs
push
in
xchg
sbb
repz
push
in
sbb
push
cmp
in
or
add
inc
fs
push
pop
in
pop
xchg
xchg
out
mov
and
and
and
inc
and
cltd
es
inc
sahf
or
add
sub
in
sub
push
add
dec
pop
subl
mov
cmp
sub
xor
aad
imul
pop
jb
xor
mov
xor
fs
push
jbe
push
dec
pushf
aam
cwtl
fs
xchg
cmpsb
dec
push
fsubrs
aam
inc
push
inc
call
dec
mov
xchg
jne
xor
sbb
fs
inc
fstl
mov
add
cwtl
sbb
in
cmpsb
les
lock
mov
or
jl
push
or
xchg
mov
or
push
add
inc
bound
sub
and
push
sbb
sub
pop
mov
fsubrs
push
dec
notb
xchg
sbb
dec
cmp
cltd
add
sub
add
push
push
jb
or
cld
sub
test
cli
rolb
mov
inc
pop
pusha
mov
push
cli
cmp
data16
in
lahf
ss
jmp
sbb
movsl
xor
lods
sbb
popf
inc
stos
imul
ret
das
cmp
rcl
add
lods
or
dec
or
push
jnp
xor
leave
enter
push
push
aas
int3
add
cmpsb
add
imul
clc
cmp
out
nop
out
inc
cld
push
jns
xchg
inc
fcomps
bound
in
push
hlt
or
inc
cmp
push
sbb
adc
jno
movsb
loop
mov
adc
add
adc
mov
mov
pop
cmp
push
push
push
daa
pop
mov
sub
xor
hlt
mov
push
js
xlat
nop
data16
mov
inc
enter
fadds
adc
iret
add
movsb
inc
dec
dec
cmpb
push
or
adc
mov
mov
and
xor
xor
xor
or
andb
scas
cli
jne
push
lods
lea
push
pushf
and
inc
dec
adc
faddl
fidivl
push
sbb
lea
mov
dec
shlb
and
ret
loop
pop
add
loop
add
pusha
clc
or
mov
push
xchg
xchg
jnp
or
add
push
imul
inc
add
jl
jns
pusha
inc
jecxz
push
cltd
add
or
addb
mov
in
dec
mull
and
cmp
jns
add
popa
gs
mov
jge
xchg
adc
ret
rorl
adc
mov
inc
xor
addr16
cmp
insb
inc
push
push
imul
sbb
loopne
jb
call
rcrl
cmp
andl
push
aam
add
notl
push
imul
push
mov
loop
xchg
fwait
or
in
pop
lods
and
lahf
sub
dec
pop
mov
mov
fs
push
mov
sbb
push
xor
nop
dec
sbbb
xchg
add
add
je
xor
push
lods
pop
xor
mov
add
inc
add
dec
adc
or
es
ret
dec
mov
dec
addb
sub
in
pop
mov
mov
xchg
adc
fs
push
in
sub
aas
adc
inc
mov
pusha
dec
dec
fs
or
sub
movsb
jns
and
dec
and
inc
and
cltd
or
in
inc
dec
adc
lcall
repz
inc
inc
mov
aas
inc
inc
push
mov
adc
xor
jb
mov
and
pop
and
fldl
add
dec
sbb
pop
dec
or
pop
lock
fidivl
scas
dec
pop
rorl
pop
subb
xlat
mov
push
bound
pop
lods
cld
nop
push
inc
in
mov
sub
xchg
add
in
dec
sub
and
dec
adc
mov
jae
xchg
mov
sbb
loop
inc
push
cmc
cmp
fdivl
arpl
sub
inc
hlt
and
test
mov
add
cwtl
jbe
adc
mov
push
enter
dec
arpl
add
in
lods
cld
enter
pop
sbb
mov
mov
insl
lea
mov
mov
fsub
sub
or
sub
adc
xchg
iret
sarl
push
add
test
mov
xchg
test
cmp
nop
or
pop
popa
xor
addb
push
sbb
pop
pop
dec
pop
and
pop
aaa
call
push
mov
repnz
adc
inc
mov
cltd
arpl
dec
push
outsl
push
pop
test
out
pop
adc
pop
mov
arpl
inc
mov
xchg
leave
scas
ret
aam
dec
dec
in
mov
mov
mov
daa
or
ss
or
fstpl
js
pop
imul
and
mov
pop
adc
dec
es
je
fisubrl
test
inc
push
ja
lea
leave
shll
insb
mov
and
popa
enter
inc
stc
mov
je
cmpsl
mov
nop
aad
xchg
int3
adc
and
enter
pop
jo
sti
js
sub
repnz
sub
out
pop
cmp
mov
xor
and
rclb
push
mov
xor
add
loopne
dec
lahf
jl
cltd
dec
lcall
stos
movsb
dec
jno
push
rolb
int3
pop
sahf
push
leave
jae
dec
push
xor
leave
jae
cmp
add
cmp
add
es
arpl
je
bound
and
int3
pop
cmp
daa
push
pop
mov
shrb
repnz
bound
stos
sbb
push
ret
mov
and
daa
and
xchg
push
mov
push
sub
add
pop
mov
mov
mov
pop
aam
cmp
jae
shlb
jb
andb
push
leave
popf
hlt
mov
mov
mov
notl
cmp
mov
fidivrs
pop
inc
jne
mov
insb
or
xchg
test
insl
fs
mov
jns
inc
pop
popf
adc
sbb
dec
ret
inc
mov
xor
jge
fcmovnb
pop
push
push
ja
int
or
sahf
rcrl
add
mov
sbb
sbb
movsb
xor
cld
pop
adc
add
pop
adcl
push
adc
dec
cmp
xchg
inc
jo
push
or
mov
aaa
lcall
push
push
lea
repz
push
inc
or
adc
mov
inc
arpl
test
call
and
push
adc
adc
mov
and
mov
adc
add
sti
push
xchg
push
pop
sub
add
and
mov
and
xchg
pop
mov
imul
xor
push
mov
mov
test
out
mov
cmp
fcomps
std
and
adc
popa
iret
inc
add
insl
ret
cmp
mov
or
cmp
adc
cwtl
dec
inc
cmp
das
pop
lea
cld
push
pop
mov
add
jb
std
test
std
push
lret
dec
repz
xor
in
test
or
inc
pop
or
rorb
mov
sub
push
sbb
and
push
jae
sub
add
inc
sub
mov
je
ret
sub
aaa
push
test
lock
sub
mov
pusha
sub
or
fsubl
aaa
and
adc
xor
mov
shrl
pop
test
es
sahf
dec
sub
push
mov
dec
sbb
cmp
push
inc
adc
pop
sub
add
jbe
cltd
imul
sbb
inc
nop
scas
ret
sbbb
pop
add
mov
imul
adc
inc
sub
and
pop
movsl
daa
test
les
or
pop
adc
insl
cmp
rolb
xchg
inc
mov
sub
leave
add
pop
mov
outsl
xchg
mov
adc
sub
sbb
adc
gs
sbb
or
and
or
leave
leave
inc
sbb
adc
and
adc
imul
out
inc
cld
aas
sbb
inc
cmp
jae
mov
xchg
add
pushf
cld
xlat
add
xchg
push
sti
je
inc
cmp
jl
add
sbb
cwtl
das
push
pop
pushl
xor
sarb
add
pop
pusha
in
inc
sub
ja
mov
je
mov
mov
sub
lahf
sarb
add
adc
xchg
xchg
aad
fidivrl
jg
fistl
sub
mov
add
cmpb
fwait
daa
inc
cmp
stos
loopne
pop
jg
mov
shrl
jbe
imul
sub
cmp
jb
mov
add
loopne
or
push
mov
or
jg
adc
mov
pop
out
pop
dec
cltd
add
sub
push
and
mov
and
sbb
movsl
loopne
lock
adc
inc
inc
or
shrl
pop
fsubl
xchg
pop
out
push
test
add
insb
insl
or
das
dec
pop
or
cmpb
dec
cmp
dec
les
add
inc
pop
addb
inc
sub
push
add
mov
mov
pop
push
pusha
flds
jo
ficompl
insb
fstps
sub
sbb
imul
xor
and
adc
pop
cmp
xor
and
or
sub
sarb
pusha
in
cld
push
inc
add
jae
inc
std
and
in
mov
inc
adc
iret
adc
pop
mov
and
je
pop
jmp
xchg
lods
or
and
inc
insb
cmp
ljmp
mov
rolb
xor
add
and
mov
sub
adc
lods
cmp
xlat
nop
out
insl
sub
push
insb
push
xchg
ja
insb
mov
push
or
add
push
push
imul
call
pop
jne
pop
inc
les
inc
cltd
dec
pop
mov
cli
loope
and
xor
orl
push
lea
loop
mov
lods
sub
inc
es
lds
add
addr16
fidivs
call
adc
mov
inc
lret
mov
jbe
les
scas
mov
je
xchg
hlt
sub
sbb
inc
push
sub
add
xor
pop
pop
xchg
fdivs
dec
push
mov
add
lea
addb
jbe
imul
es
in
sbb
ret
and
fisttpl
push
insb
inc
ror
add
in
in
sbb
in
inc
enter
or
les
iret
add
mov
xchg
add
inc
cmp
push
mov
test
enter
popa
add
lea
add
dec
test
mov
popa
clc
jecxz
push
sbb
inc
pop
nop
sbb
mov
fdivrl
daa
mov
mov
push
mov
inc
lret
outsb
add
sbb
insb
push
mov
pop
popa
or
jo
loopne
movsb
aad
ret
js
sbb
mov
out
add
insl
lds
sub
int
loopne
xchg
mov
push
enter
push
fstps
sbb
push
push
out
push
dec
push
fwait
ret
add
mov
mov
pop
add
lds
leave
inc
inc
inc
rcr
dec
cmp
test
jne
push
push
xchg
pop
ljmp
lods
add
push
jmp
mov
mov
shl
ljmp
ret
and
or
or
je
push
je
jb
jo
jnp
std
imulb
loopne,pn
mov
adc
sarb
outsb
add
add
jo
mov
cmp
mov
fdivrs
inc
hlt
cli
sbb
xchg
jbe
pop
leave
inc
cmp
mov
push
ds
cmp
daa
inc
shl
lea
sbb
add
ret
add
repnz
icebp
lds
test
inc
in
or
rcrb
les
jl
cltd
or
add
mov
mov
add
nop
adc
jae
adc
xlat
jno
mov
jl
ljmp
inc
shll
out
adc
add
push
xchg
xchg
add
sub
pop
xchg
dec
mov
orl
bound
pop
aas
add
shl
lods
or
and
lock
jb
xchg
jmp
setl
mov
ret
inc
adc
inc
xchg
inc
loopne
je
xor
mov
push
xchg
jns
push
les
sbb
insb
mov
icebp
cmpsl
in
adc
mov
pop
push
testl
test
lahf
mov
xchg
or
mov
movsb
add
sub
stc
pop
cmp
push
sbb
push
fwait
pop
lcall
mov
inc
push
lret
imul
jecxz
enter
rorb
loopne
or
inc
lods
lock
sahf
xorb
jl
aam
mov
outsl
xchg
add
inc
sti
inc
rcll
xchg
push
and
mov
inc
loope
int
mov
and
inc
xchg
dec
push
sbb
push
push
cmpsb
mov
and
int3
mov
sub
pop
clc
hlt
sub
mov
and
mov
push
dec
jmp
mov
aam
faddl
push
outsl
cli
int3
mov
push
inc
loopne
add
jg
adc
data16
mov
cmp
int
xor
std
sti
das
insl
pop
jl
pop
push
lock
and
and
mov
push
or
sahf
dec
sbb
pop
cmp
push
lahf
xchg
and
cmp
mov
and
mov
sub
xor
insl
inc
in
adc
mov
sub
imul
dec
aam
jmp
in
sub
inc
fdivs
aad
and
or
call
mov
add
je
mov
jne
sub
mov
aaa
dec
sub
pop
and
push
sub
push
xchg
cltd
mov
and
inc
test
inc
add
les
sub
add
jae
cmp
fwait
inc
jge
jge
dec
jmp
movsb
std
or
out
outsl
or
cltd
cwtl
imul
lds
push
or
xor
xor
in
add
mov
fcomp
aam
fisubrl
cmp
jge
or
xchg
adc
add
inc
or
mov
loope
fmuls
push
xorb
jge
icebp
mov
rolb
mov
shlb
adc
inc
jg
mov
mov
adc
mov
movsb
jo
adc
rcrb
add
mov
ficoml
clc
aam
adc
faddl
lods
xchg
cs
mov
jo
jle
jg
stos
sub
xchg
outsb
pusha
pop
int
adc
das
cmp
je
mov
std
and
test
cmp
or
jne
xor
clc
xor
test
mov
pop
mov
inc
xchg
es
add
lock
outsl
jo
test
mov
push
out
xchg
ficomps
pop
movl
ljmp
mov
mov
add
clc
push
cmp
adc
shlb
or
testl
dec
cmp
rorl
adc
sbb
lahf
pop
push
sub
dec
outsl
add
pop
xor
and
dec
mov
push
fs
mov
movl
rolb
clc
pop
mov
inc
aas
or
xor
add
or
ret
aas
ljmp
lods
sbb
sub
cmpsl
or
mov
add
adcb
aam
or
fnstcw
add
je
leave
jl
xchg
outsl
jno
or
cmp
or
pop
andl
or
mov
out
push
subl
adc
orl
or
rcr
adc
add
popa
call
xor
loopne
call
ds
inc
dec
dec
scas
jmp
or
sbb
sar
rcr
push
add
push
adc
dec
cmp
pushf
int3
das
popa
dec
push
sub
xchg
or
jl
je
inc
test
push
test
mov
out
call
jge
jne
cmp
jne
int3
lods
fdivrs
jnp
push
sbb
pop
ror
mov
xchg
pop
insl
test
les
sub
sub
dec
xor
and
mov
int3
cmp
xor
daa
mov
out
cmpsl
sbb
jnp
in
orb
sbbl
fiadds
popa
push
sub
add
sbb
jle
clc
mov
cmp
and
pop
mov
sub
mov
addr16
test
push
mov
scas
jo
js
inc
stos
sub
inc
rcr
dec
sbb
test
adcb
pop
mov
mov
arpl
push
sub
arpl
sub
movsl
test
icebp
shlb
adc
jecxz
outsl
push
sub
pop
fldenv
mov
push
inc
or
and
or
out
mov
and
sbb
mov
bound
jb
mov
push
cli
or
mov
addl
mov
xchg
push
lea
outsb
repz
add
pop
cmpl
mov
ss
in
mov
icebp
push
push
push
mov
mov
sub
jns
push
inc
add
cmpsl
jge
hlt
movb
dec
sbb
and
test
add
pop
lea
test
mov
popf
shr
mov
push
cmp
pop
out
jmp
mov
pop
sarb
push
outsb
inc
add
inc
shrb
iret
rcl
xor
jl
jecxz
addb
jge
std
or
inc
dec
add
adc
adc
or
dec
inc
adc
shll
jmp
es
push
fistps
or
xchg
push
cmp
stc
inc
int
pop
addr16
lcall
inc
pop
add
daa
or
jb
cmp
pop
add
hlt
addb
push
insl
loop
jp
testl
jle
clc
jo
and
jnp
sbb
mov
ret
fstl
cmp
iret
cmp
enter
jnp
mov
xlat
mov
mov
mov
cmp
jne
inc
dec
adc
es
cmpsb
adc
pop
jp
add
fsubp
and
inc
xor
dec
pusha
fcomps
inc
or
xlat
xchg
cmp
aad
mov
xor
pushf
add
idivb
inc
pushf
out
adc
mov
pcmpgtd
xor
jmp
xchg
or
push
push
cld
push
pop
or
inc
dec
pop
js
push
outsl
sbb
inc
mov
fcmovb
loopne
push
enter
subl
mov
sti
arpl
cmp
ds
lcall
hlt
arpl
jecxz
xor
adc
pop
sbb
aas
pusha
andl
ret
stos
dec
push
add
lock
or
sbb
xchg
out
add
jo
and
jno
and
xor
add
or
jp
je
pop
mov
faddl
rorb
sbb
movl
jo
cwtl
add
test
addb
inc
hlt
mov
add
xor
sub
movl
add
nopl
and
mov
rorb
push
jge
xchg
shlb
mov
mov
xor
call
xor
push
push
or
pop
xchg
and
xor
dec
mov
loope
cmp
cmp
adc
jle
popa
inc
and
xchg
flds
cmc
pop
xor
enter
mov
aas
mov
jl
xor
mov
ret
add
mov
cs
inc
lods
push
mov
jl
adc
daa
cmc
into
jle
mov
xchg
sub
adc
dec
pop
test
xor
sbb
bound
cmp
daa
xor
test
xchg
pop
push
mov
xor
push
add
mov
int3
mov
out
mov
inc
rol
lret
outsl
movsl
loopne
xchg
push
or
sarb
dec
add
sub
mov
lcall
adc
xor
xor
inc
and
push
sbb
jmp
bound
or
xor
in
sub
pop
or
cmc
adc
cmp
sti
lcall
cwtl
dec
push
add
sti
mov
sbbb
andb
ja
or
jns
mov
push
shl
cmp
sub
cmpb
into
mov
fidivl
push
stos
xchg
lcall
adc
shrl
push
adc
push
leave
push
and
lahf
add
mov
mov
dec
scas
mov
adc
or
or
mov
sub
leave
out
sub
mov
iret
jg
ret
push
mov
outsl
call
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
mov
pop
cmpl
push
setl
movzbl
push
imull
test
jmp
push
push
push
lods
xchg
loopne
add
mov
cmp
les
leave
xor
orl
adc
push
inc
sbb
push
add
pop
push
in
in
or
add
dec
push
outsb
pop
dec
notb
cmovbe
mov
push
add
jmp
push
nop
lods
cmp
cmpsl
mov
push
jne
or
and
shrb
jmp
int
xchg
lret
daa
scas
test
pause
das
inc
stos
fs
sub
mov
and
sub
outsb
cmp
sub
mov
and
call
mov
fs
filds
mov
clc
stc
cltd
push
les
push
add
in
mov
pop
aas
loope
jbe
popl
push
push
jecxz
and
popf
fbstp
sub
dec
sbb
add
and
add
push
inc
pop
or
xor
les
mov
sub
cmp
mov
rcr
cmp
xor
add
jmp
lds
and
xor
lods
cltd
mov
and
pshufw
push
cmc
xor
sub
xlat
inc
or
loopne
rorl
add
xchg
jmp
pop
cmp
pop
pop
xchg
mov
and
es
push
ss
pushf
out
inc
inc
inc
adc
adc
and
das
xor
mov
fwait
pop
xor
pop
sbb
mov
lods
stc
add
test
cmp
arpl
or
jb
xorb
and
je
or
stos
push
jbe
sbb
movsb
adc
push
sbb
mov
cmp
xor
nop
add
dec
adc
fcmovne
test
add
sub
aad
out
mov
lods
push
or
mov
mov
jnp
fistpll
xchg
xchg
inc
inc
jp,pn
pop
adc
or
push
cmp
mov
adc
dec
lods
ficompl
cmp
xchg
push
sbb
je
nop
fstpl
daa
push
sbbb
nop
das
xor
jle
clc
and
hlt
add
xor
testl
cmp
and
pop
xorl
ret
jo
mov
cmp
lcall
or
pusha
sub
dec
jno
pop
push
jecxz
sub
out
adc
cmpsb
setae
xor
adc
cmp
enter
dec
bound
in
and
pop
xchg
mov
hlt
mov
sbb
lea
popf
or
mov
movsb
repz
cmpb
jne
imul
in
jbe
xchg
sbb
pop
shrb
xor
aaa
cmpsb
or
sub
sahf
xchg
push
popa
and
sbb
mov
add
pushf
and
xor
test
sub
dec
orb
sub
enter
lahf
popa
pop
dec
xchg
movsb
jecxz
adc
inc
inc
sbb
dec
push
stos
inc
iret
sbb
mov
cmp
inc
push
push
sub
add
adc
jae
sub
call
fwait
movsl
dec
or
decb
es
dec
dec
inc
inc
and
insl
and
dec
subb
adc
inc
test
bswap
hlt
lds
push
sub
add
mov
mov
rclb
aad
sub
jno
inc
add
xchg
in
mov
push
enter
dec
and
add
add
pop
inc
inc
or
adc
push
scas
shlb
dec
ret
pusha
lock
sbb
jne
cmp
aas
mov
xor
andl
xchg
adc
clc
ret
es
or
pop
nop
dec
push
pop
cmp
inc
rcr
dec
ss
cmc
xor
ret
push
cmpsb
pop
push
and
mov
fisttps
pop
jne
pop
ljmp
and
inc
iret
cli
loope
lock
adc
jnp
rorl
mov
fsubrs
shrb
fmuls
popf
aas
push
imul
jg
jo
in
push
fs
jo
adc
xor
rorb
bound
xchg
dec
xchg
addb
or
add
mov
add
jns
rcll
xchg
adc
testl
push
or
mov
jp
add
or
add
loop
xor
fsubs
push
cmp
loop
mov
sub
fs
pop
cltd
push
cmp
test
test
sti
and
push
inc
bound
fs
mov
cmp
je
jl
or
pop
push
add
or
enter
sub
es
xor
js
push
mov
test
cmp
push
jo
dec
xor
lea
push
lret
jl
push
cmp
or
aaa
or
cwtl
and
test
leave
cwtl
test
xchg
push
mov
sub
pop
sub
pop
mov
fwait
xor
cmp
fisubl
and
push
imull
cmpsb
jno
sti
mov
jb
rcl
xor
call
dec
or
subb
pop
pop
jb
sahf
inc
jb
pop
or
xchg
cmp
cmp
cltd
movsb
dec
adc
push
dec
pop
jno
dec
push
sub
inc
xor
inc
dec
add
test
adc
ss
or
adc
jmp
nop
add
fwait
add
adcb
repnz
add
orl
xchg
mov
fldl
xor
mov
shlb
xor
and
pop
bound
lock
dec
mov
or
out
sbbl
ror
adc
push
mov
dec
dec
push
lcall
push
sub
iret
mov
dec
imul
dec
and
iret
test
pop
push
or
inc
xor
sub
enter
test
inc
mov
subb
movl
int3
cmp
ds
and
mov
int3
adc
jb
daa
das
cwtl
inc
push
add
repnz
push
push
pop
test
leave
jo
adc
je
inc
insl
adc
or
mov
stos
mov
insl
shll
mov
pop
fcomps
adc
add
in
xchg
adc
add
mov
popa
lods
push
mov
out
sbb
or
mov
jl
inc
add
jo
dec
daa
pop
mov
sub
pop
push
or
pop
call
sub
cmpsl
push
xchg
sbb
stos
push
cli
fiaddl
mov
gs
xchg
pop
dec
imul
inc
out
sahf
and
pop
add
inc
add
and
xchg
dec
or
lods
inc
cmpsl
or
popa
repnz
add
adc
dec
or
pop
dec
sub
push
adc
adc
das
pop
add
imul
dec
sub
test
add
imul
nop
loopne
cmp
in
pop
sbb
sbb
stc
xor
sub
call
adc
inc
pop
xchg
cmp
pop
aad
inc
cmpb
je
fnstsw
xchg
mov
pushl
adc
nop
dec
lcall
int
sbb
mov
nop
cmpsb
and
pop
mov
arpl
xchg
mov
add
push
adc
xchg
add
mov
mov
add
mov
sbb
sbb
jno
or
and
add
jne
fimuls
add
fstl
lahf
push
aad
lret
xorb
jge
cmpl
outsl
xchg
add
imull
mul
fisttps
cld
cmc
jl
lea
in
sub
sub
add
add
addr16
sti
fists
outsl
push
add
dec
cmpb
lock
xchg
dec
push
mov
mov
push
js
cmp
cli
movzbl
push
push
sub
js
andb
dec
shlb
fcomps
aam
mov
roll
sub
cmp
fdivl
mov
xchg
repz
mov
jae
add
arpl
lea
adc
xorb
mov
call
out
add
or
or
jg
jecxz
adcl
push
sbb
ret
jl
sbb
or
loopne
sub
push
add
pop
push
out
inc
loopne
inc
ja
clc
jo
ret
div
or
scas
rorb
je
cmp
sbb
mov
mov
test
rorb
lock
pop
or
rorb
test
cs
outsb
out
rorl
fstl
sub
shll
loopne
and
inc
pop
dec
rorb
mov
cs
inc
add
sub
xchg
enter
and
adc
jl
icebp
and
xor
inc
sti
sbb
pushf
push
test
in
and
inc
or
adcb
clc
inc
xchg
sbb
mov
dec
cmp
imul
mov
in
fists
jge
fmuls
ret
jge
adc
cmp
adc
adc
clc
push
int
mov
seto
aaa
neg
mov
enter
mov
or
xchg
stc
es
sahf
cwtl
jne
stos
xchg
sbb
ja
or
dec
add
and
dec
icebp
inc
and
jo
cld
fs
icebp
sub
jg
dec
adcl
or
data16
mov
jae
push
dec
fbstp
push
cmp
add
movsl
mov
loop
xchg
nop
sbb
adc
ret
aaa
jae
pop
loope
adc
push
sub
subl
push
fstpt
push
cwtl
mov
inc
cmp
or
or
out
and
bound
sbb
rorb
popa
ss
pop
inc
bound
jb
push
add
outsb
and
cmp
rolb
add
jle
fistpl
mov
push
fadds
jno
rorb
add
mov
add
aam
lods
flds
insb
fildll
stos
pop
add
orl
add
adc
inc
cmp
pop
push
ja
or
cmp
mov
es
jle
cmp
and
adc
cmc
pshufw
cli
add
push
pop
pop
adc
add
inc
add
test
and
rol
loop
mov
add
js
dec
sarb
push
lods
add
out
push
mov
pusha
js
push
cwtl
call
adc
call
in
adc
add
je
sbb
adc
lcall
std
insl
js
push
fcompl
cmp
into
pop
cwtl
mov
cmp
jbe
or
out
jmp
in
or
add
gs
stos
adc
sub
or
push
hlt
nop
sbb
mov
push
rclb
sub
mov
push
in
pop
pop
mov
or
lret
std
cmpsl
mov
inc
adc
add
cmp
les
loop
pop
fmulp
lret
leave
iret
mov
lahf
les
fldcw
fmuls
push
std
jno
aad
dec
inc
sbb
jae
movl
aaa
fdecstp
xor
cmp
je
add
pop
lock
lahf
movl
pushf
jnp
adc
cmpl
adc
cwtl
jae
dec
mov
jmp
push
loopne
add
push
or
fsubl
lret
cmp
pop
inc
repnz
add
sbb
pop
cmp
push
jg
fsubrp
push
sar
movsb
pop
cmp
jecxz
loopne
or
test
add
inc
hlt
adc
push
insb
bound
mov
add
sub
pop
or
fcoml
jmp
mov
jmp
dec
je
cmp
outsb
icebp
rorl
testl
mov
lea
iret
rol
test
aam
enter
and
add
push
adc
mov
push
and
ds
or
dec
or
gs
daa
xor
xor
ja
jo
add
push
call
and
inc
mov
inc
inc
nop
or
sub
mov
inc
xchg
sub
xchg
jnp
or
mov
dec
cld
xor
xor
leave
cmp
pop
ret
push
punpckhdq
pop
push
sbb
push
js
lock
adc
aam
stos
aaa
xchg
cmp
or
xlat
jne
or
or
stos
push
sub
xorb
or
push
sbb
loop
negb
call
add
add
push
sbb
sub
push
cltd
push
pop
cld
lahf
and
lock
jg
mov
shlb
lea
in
cmp
pop
jmp
fists
pusha
clc
sub
push
jg
insb
dec
add
scas
cwtl
add
les
out
sbb
push
rorl
mov
ret
and
out
insl
sub
inc
daa
pop
or
cwtl
jne
and
addr16
jg
shlb
or
rol
xchg
dec
out
push
dec
test
push
or
bnd
sarb
cld
adc
push
jg
incl
cmpw
jne
mov
je
test
adc
cmp
adc
cmp
leave
ret
adc
cld
dec
mov
push
push
call
hlt
sahf
imul
xchg
imul
js
sbb
or
or
inc
push
inc
push
lock
push
pop
or
mov
or
push
ret
cltd
rol
clc
pusha
mov
cmp
or
and
test
cwtl
add
shrb
gs
add
loopne
lea
push
push
in
pop
jecxz
adc
jl
mov
ds
int3
mov
or
adc
adc
adc
cltd
xlat
ret
or
adc
mov
sbb
push
xchg
and
leave
in
in
push
jecxz
sbb
mov
sbb
fsubrl
je
mov
pop
fisttps
push
jmp
pusha
or
and
lock
mov
add
dec
push
push
mov
and
ja
inc
test
sbb
and
in
pusha
aaa
mov
pop
cmpsl
inc
sti
incl
je
jmp
add
sub
push
sub
outsb
push
push
add
jle
je
addb
pop
xor
das
push
adc
shlb
xchg
sbb
inc
sbb
call
call
add
adcb
add
loop
push
ljmp
popa
ret
call
mov
insb
ja
or
jp
mov
jmp
aaa
xchg
xchg
xor
mov
pop
rcrb
xchg
push
xor
jns
test
mov
pop
aad
popf
sbb
and
icebp
lods
pop
push
pushf
mov
hlt
xor
testb
push
repnz
add
mov
das
add
sbb
in
cmp
pop
in
dec
jne
loopne
mov
ljmp
xor
xchg
cmc
pusha
push
push
sbb
hlt
fidivrs
push
imul
add
lock
cmp
out
or
lea
fstps
mov
mov
add
push
push
icebp
jnp
push
pop
cli
int3
stos
test
aam
jo
add
cmp
cmp
ret
outsb
test
or
inc
mov
cmpsb
mov
subl
sbb
sub
insl
movsb
lock
add
jo
dec
or
xor
xchg
arpl
mov
sub
jne
mov
pop
call
std
lea
incl
add
repnz
dec
or
push
adc
ret
inc
add
add
jno
jge
or
xchg
ja
jp
or
sub
out
or
push
scas
pushf
ja
pop
sub
inc
or
mov
cwtl
nop
cmpsb
pushf
mov
or
sub
mov
xchg
loope
push
add
shlb
or
add
sub
pop
ss
pop
push
outsl
rcr
adc
sbb
mov
imul
mov
inc
rcll
push
add
pop
adc
pop
pop
ret
shr
or
sub
popa
nop
fxch
fst
sub
testl
loopne
jne
cmp
inc
mov
add
cmp
idivb
into
jae
clc
fcomp
pop
outsl
das
push
lret
inc
bound
cwtl
xor
mull
dec
icebp
xor
dec
add
push
or
sub
add
mov
out
dec
sub
idivb
add
adc
mov
ja
pop
pushf
sub
dec
test
and
test
mov
cmp
dec
aam
jmp
jmp
cmp
pop
add
push
rol
jg
test
inc
mov
mov
sub
ljmp
loopne
cmp
push
mov
loop
pop
mul
xor
push
call
jle
add
xchg
shlb
push
pop
shrd
pop
int3
sahf
jmp
push
pop
hlt
push
push
inc
inc
jge
testb
adc
stos
dec
jns
push
jmp
adc
popa
xor
sub
push
sbb
and
and
mov
popa
cltd
push
and
add
sbb
mov
movsb
push
push
mov
or
push
add
cmpsb
jmp
sbb
loopne
push
xor
push
jl
sub
mov
pushl
popf
lock
xchg
outsl
sahf
ret
cmp
or
mov
dec
sbb
pop
adcl
test
daa
bound
je
jo
js
outsb
mov
or
mov
inc
or
mov
data16
push
xchg
ret
sbb
lea
aaa
dec
push
push
pop
call
lret
adc
add
add
xchg
es
add
or
in
xor
dec
sub
push
into
dec
push
pop
imul
movsb
cmc
mov
rolb
dec
xchg
add
nop
loopne
xchg
jnp
mov
pop
cmp
adc
mov
leave
mov
shrl
mov
loopne
and
cmpsl
mov
cmp
cmpsl
or
loop
or
dec
xor
add
xor
mov
inc
lahf
sub
shll
inc
popf
clc
ret
jl
pop
lock
mov
add
dec
inc
sbb
adc
js
leave
fwait
pop
cmp
inc
adcl
shlb
cmp
push
jmp
mov
or
xchg
rclb
pop
mov
daa
mov
add
inc
add
lret
or
jge
std
js
push
or
arpl
test
push
fs
in
hlt
or
cmp
cmp
add
adc
add
imul
mov
add
rolb
rcrl
rcr
fs
dec
fwait
pusha
or
and
andl
std
in
out
adc
sbb
mull
xor
pop
aam
ss
pusha
push
mov
adc
and
jne
sub
std
mov
xabort
and
push
lahf
loopne
jmp
push
enter
dec
xor
insl
jne
stc
repnz
cs
add
push
jae
arpl
cmp
xchg
dec
push
je
inc
xchg
out
jnp
jg
push
or
cmc
mov
jne
or
cmp
push
push
and
and
inc
sbb
cmp
aam
test
cmp
mov
jo
mov
push
psubsw
pop
cmp
je
mov
ret
pop
mov
sbb
or
fidivs
pop
jp
mov
or
fcoml
mov
xchg
je
push
cmova
cmc
sahf
and
xor
push
stos
and
push
movb
mov
popf
sbb
add
or
jnp
push
iret
jo
not
pop
jb
push
push
pop
sahf
xchg
inc
mov
mov
lcall
push
push
outsl
and
mov
push
sbb
push
jge
loopne
sub
xor
mov
mov
cmp
and
fdivl
xchg
push
ret
inc
and
cli
pop
ret
js
cmp
jne
and
std
scas
add
mov
or
or
pop
into
loopne
pop
outsb
xor
cmp
mov
orb
mov
push
adc
push
pop
mov
ja
inc
or
or
push
out
jmp
enter
hlt
add
or
mov
xor
cmp
scas
mov
mov
fadds
dec
ja
mov
mov
repz
lcall
sbb
push
cmpsb
imul
push
lcall
mov
mov
mov
sti
or
push
mov
mov
push
cmpsl
inc
int3
mov
imul
xor
addr16
scas
sub
push
pop
inc
rcrl
into
xchg
out
jmp
xchg
int
adc
and
add
pusha
data16
xchg
movsb
movsl
shrl
push
fadds
inc
push
fs
sbb
fs
push
fs
push
fs
push
imul
test
je
or
pop
adc
mov
loope
add
jne
adc
fdivrp
adc
and
testb
push
ret
jo
js
pop
push
xor
shlb
or
jne
mov
ret
je
mov
bound
pop
mov
sub
popa
add
addr16
pop
sti
and
cmp
sbb
jns
iret
push
and
cs
adc
sbb
ror
test
pop
lods
syscall
mov
xchg
add
cli
push
ja
in
insb
les
scas
or
add
mov
mov
jb
mov
xlat
mov
lea
inc
xor
ja
bound
or
call
adc
jp
and
adc
out
or
test
in
add
adc
inc
jnp
lock
aaa
mov
inc
shll
sbb
push
rol
ljmp
add
inc
fimull
pop
cmc
outsl
ds
add
xor
mov
add
or
adc
mov
mov
pusha
daa
sahf
notb
ret
fnsave
jns
sbb
cmp
mov
xor
lahf
adc
and
scas
subb
das
or
in
pop
mov
pop
repnz
cltd
in
cmp
das
add
iret
push
sahf
movsb
sti
cmp
sahf
fnstcw
add
out
inc
xor
insl
jmp
rclb
out
movsb
add
mov
imul
mov
sub
or
clc
loopne
xchg
and
inc
jecxz
nop
push
stc
je
insl
mov
psllw
xor
jb
inc
xchg
ja
fwait
stc
arpl
pop
lahf
sub
test
pop
dec
loop
into
scas
sub
and
je
add
xchg
daa
movsb
dec
add
pop
mov
daa
ret
adc
shrb
inc
stos
jae
and
shlb
jne
lret
clc
push
fcmovb
xadd
or
lods
pusha
stos
ljmp
sahf
jne
or
jmp
leave
bswap
or
sub
inc
aam
xchg
pusha
xchg
cli
mov
test
adc
or
push
xor
inc
pushf
add
cmp
push
inc
adc
lock
inc
cmp
mov
pop
xor
push
or
or
add
psllw
test
enter
mov
out
enter
xchg
call
sub
xchg
inc
inc
jno
push
cmp
sub
je
pusha
push
add
xchg
icebp
int3
int
cmp
and
mov
and
fldenv
mov
adc
or
lock
adc
jo
pop
pshufw
fimuls
sbb
sub
sbb
lods
shr
mov
sub
mov
sbb
pusha
insb
insb
push
push
push
or
xchg
les
xchg
ret
ja
push
xor
sbb
adc
cmp
divb
inc
or
jne
mov
sbb
pusha
add
iret
je
xor
movsb
lea
icebp
push
insb
sbb
sti
push
sub
inc
pop
ss
orb
pop
lea
adc
repnz
dec
leave
xor
or
add
andps
mov
dec
lock
adc
and
enter
lock
and
push
cmpsl
addb
jmp
dec
push
push
adc
jne
fidivs
into
add
pushf
xchg
dec
fiadds
xchg
int
mov
mov
hlt
xchg
hlt
lcall
leave
add
add
push
mov
ja
sub
lea
mov
sub
cs
or
xchg
testb
sub
je
cmp
mov
pop
jl
testb
je
cmc
sbb
add
jb
add
sub
mov
xlat
test
test
ljmp
sbb
adc
jbe
scas
push
loopne
add
adc
and
sbb
mov
inc
sbbl
lods
lds
adc
fmuls
in
clc
push
push
jge
jne
mov
xchg
mov
and
sbb
inc
mov
cs
int3
call
insb
cmp
adc
sbb
in
imul
add
adc
fcoms
mov
fbstp
add
sub
and
loopne
loopne
sarb
fwait
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
adc
add
xchg
add
lea
dec
push
or
mov
add
sbb
lods
add
adc
dec
cmp
xchg
fcoms
cli
les
sub
mov
pop
xor
pop
xor
add
pop
popa
lock
daa
xchg
inc
fs
adc
pmulhuw
and
sub
idivb
and
sbb
sub
shrl
mov
add
mov
inc
rclb
and
sbb
cmp
adc
pop
and
and
lods
jbe
jg
andl
pop
loopne
rclb
ja
add
mov
and
jge
sbb
or
lret
adc
test
inc
cmpb
addb
xchg
mov
outsl
pusha
pop
pop
call
or
ret
xorl
mov
adc
and
pop
pop
or
sbbl
xchg
rcll
push
pop
into
inc
xchg
sbb
sub
cmp
ds
daa
mov
add
test
les
clc
aad
stc
popa
popa
add
out
pop
jg
inc
mov
inc
adc
loop
dec
cmp
adc
nop
jecxz
loope
sbb
add
fdivs
mov
rorl
mov
or
jo
por
popa
mov
js
ret
mov
sub
mov
jo
push
pavgb
addr16
mov
or
shll
cmp
pop
jl
xor
pop
es
mov
movsl
add
idivb
je
mov
mov
push
adc
mov
push
out
jo
push
cli
mov
pop
push
or
mov
cmp
cmp
sbb
insl
pop
push
pop
adc
and
testb
mov
jecxz
das
inc
cmp
sahf
mov
cmp
aaa
fadds
inc
js
aad
les
aas
mov
mov
or
test
imull
daa
jae
movsb
mov
push
addr16
push
je
or
cs
or
mov
stos
sbb
rcpps
data16
movq
push
cmp
cmp
fs
pop
push
sub
fsubrs
add
pop
add
repz
add
xor
test
js
cmpsb
mov
in
xlat
push
inc
js
pusha
sbb
or
jb
stos
sbb
stos
cmp
jl
or
mov
inc
aam
das
push
addr16
add
and
or
cmpl
nop
stos
or
bndstx
ret
push
push
xchg
cli
rcl
push
js
icebp
jecxz
xor
push
cmp
xorb
pop
fwait
test
imul
push
pop
sub
and
inc
and
xlat
push
adc
mov
xchg
loope
std
decl
xchg
ja
push
mov
sbb
mov
mov
dec
push
sysret
jne
jmp
das
pop
stos
push
rcrb
mov
call
mov
mov
shlb
push
sub
in
push
jo
bound
mov
test
inc
jnp
mov
xor
subl
sti
push
inc
push
and
outsb
mov
mov
mov
dec
or
mov
lret
lret
not
cmp
fbld
bound
shrb
jne
inc
sub
inc
repnz
imulb
rclb
xor
or
adc
xor
and
test
js
or
je
add
subl
xor
cmp
je
xor
lea
sbb
mov
rcrb
cmpl
test
mov
or
inc
add
jb
pop
inc
xchg
dec
adc
add
call
inc
loope
outsb
add
ror
mov
jl
aas
sbb
inc
jmp
pushl
xchg
mov
pop
mov
iret
call
inc
lea
lock
cmc
ss
ja
mov
or
shrl
data16
mov
inc
mov
shlb
sbb
mov
adc
inc
testb
inc
push
imul
adc
dec
mov
jl
xchg
mov
adc
les
mov
sbb
and
push
mov
outsb
inc
or
xor
fildll
ds
cmp
int3
sub
mov
mulb
mov
cltd
adc
xor
xor
add
dec
cmpsl
rcrl
bound
push
lds
das
shl
jmp
xchg
inc
test
xchg
add
stos
adc
test
push
mov
in
push
pusha
jno
pop
mov
sbb
scas
xchg
jecxz
sbb
jl
inc
aaa
adc
or
push
sub
adc
adc
xor
xlat
push
outsl
rorl
jmp
add
mov
insb
dec
dec
adc
jecxz
xchg
pop
inc
push
inc
or
inc
push
and
rolb
and
je
push
lods
mov
stc
mov
test
addl
lcall
inc
push
es
dec
ljmp
mov
movb
ret
sbb
or
dec
mov
cmpb
sbb
xor
add
mov
testb
je
and
out
xchg
sbbb
and
shll
dec
sbb
sti
jl
loope
xor
xchg
push
sbb
movzbl
xchg
sbb
pop
mov
or
add
lcall
push
mov
fisubl
inc
lret
jl
xor
mov
sbb
test
push
sbb
addl
jp
jbe
out
ret
add
and
cmp
xor
dec
addr16
popf
shll
add
mov
and
cwtl
sbb
out
sbb
lock
mov
test
cmc
rclb
mov
je
insb
jne
inc
data16
xchg
push
cmp
adc
fs
mov
ficompl
xchg
rolb
pop
xor
leave
inc
adc
or
push
push
movhps
mov
sbb
push
push
dec
push
mov
dec
shlb
and
add
inc
mov
add
xor
mov
pop
lcall
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
pop
adc
cmp
rcrb
js
cli
pop
into
orb
aaa
dec
push
jo
jmp
xor
imul
push
sbb
mov
stos
scas
adc
imul
sti
sub
cwtl
pop
movsb
insb
mov
insb
mov
cwtl
mov
or
mov
adc
or
into
jne
or
lea
jp
mov
add
or
add
leave
pushf
cmpsb
jnp
dec
mov
dec
icebp
add
insl
mov
gs
cwtl
lcall
test
xchg
and
aaa
push
sub
sub
addl
and
add
pop
cmp
je
push
xchg
arpl
add
movsb
adc
fucom
es
loope
fldl
xchg
retw
adc
pushl
push
call
rorb
aad
sbb
jl
add
inc
fcomps
xchg
movsb
div
add
movl
jne
lea
mov
xchg
sub
jo
insl
xchg
into
enter
sub
push
xor
rclb
push
mov
mov
test
lcall
or
xor
xor
xor
xor
cmp
fldcw
add
je
mov
sti
movsl
aam
dec
push
hlt
dec
push
or
jae
push
ret
out
add
pop
xor
add
fbstp
repz
orb
mov
pusha
lds
andl
xor
dec
push
push
lods
addr16
mov
dec
insb
add
mov
add
mov
sub
inc
gs
adc
sbb
sti
movsb
lods
data16
pop
jge
adc
sbb
push
cmp
cmp
mov
push
fistpl
loope
push
inc
and
xorb
ret
pop
jo
in
push
push
outsl
test
sbb
mov
or
push
addl
push
mov
test
cmp
jmp
pop
and
aas
mov
xlat
fdivl
xlat
push
sbb
jne
or
and
xabort
stc
push
sub
clc
rclb
stc
add
push
jns
sbb
pop
adc
inc
insb
shr
push
add
jns
push
adc
dec
or
adc
mov
sbb
or
pusha
insb
std
mov
clc
decb
adc
out
cmp
in
out
add
adc
jb
jge
pop
clc
adc
mov
lock
sub
jl
clc
pop
lret
sbb
or
rclb
push
pop
adc
adc
hlt
lret
mov
pop
fistl
jns
je
mov
enter
addb
push
lea
sbb
jle
push
push
cmp
adc
lea
dec
push
pop
xchg
and
sbb
pop
xor
xor
and
not
and
pop
dec
scas
in
inc
add
icebp
or
pop
lea
cmp
pop
jmp
or
out
movsl
sbbl
pushf
mov
adc
data16
arpl
cltd
hlt
or
lret
ud0
mov
loopne
dec
cwtl
mulb
inc
xor
cs
or
adc
rcrl
mov
lds
daa
add
out
daa
adc
pusha
hlt
add
xor
add
dec
push
out
inc
push
add
push
push
sub
push
pop
mov
or
and
clc
ss
insl
mov
movhps
dec
je
aaa
jbe
inc
or
or
aaa
jo
sub
std
hlt
out
pop
or
pop
sub
add
orl
loopne
mov
cwtl
sbb
mov
xor
xor
scas
or
pusha
jo
call
dec
pop
loope
stc
jp
mov
pusha
nop
cs
jno
iret
stos
push
pop
into
arpl
xor
xchg
push
je
icebp
cmpsl
mov
push
push
mov
nop
jne
sbb
and
dec
adc
addl
push
outsl
adc
push
xchg
inc
push
dec
popf
shlb
int3
movsb
push
insb
push
inc
js
push
fsts
inc
clc
dec
xchg
or
cwtl
push
push
pusha
push
call
and
into
clc
and
lods
pop
dec
or
and
sub
popa
sub
mov
mov
or
and
inc
pusha
idivb
xor
and
mov
aaa
mov
dec
int
sub
aam
out
pop
lods
das
push
sbb
mov
mov
in
loopne
pop
notl
mov
repnz
dec
arpl
push
inc
sahf
or
inc
mov
test
xchg
imul
adc
ljmp
or
xor
dec
and
push
xchg
pop
and
push
push
inc
shll
sbb
xor
faddl
add
and
daa
xor
add
andl
lret
add
hlt
or
push
sub
sti
jl
je
add
jg
cltd
shl
inc
mov
testl
shl
pop
test
xor
or
or
lahf
ret
rorl
out
cmp
push
adc
mov
cmpsb
mov
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
mov
repnz
push
push
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
into
in
xchg
mov
push
add
or
add
pop
adc
dec
xor
cld
mov
mov
lea
pop
pop
add
movsb
in
mov
ss
sbb
inc
mov
aas
mov
xor
push
testl
mov
and
cmpl
mov
push
rolb
andl
sbb
sub
inc
and
dec
pop
lods
push
cmc
xchg
mov
add
cmp
mov
add
lds
inc
jb
aaa
adc
sbb
cmp
dec
lds
lock
mov
sti
sub
lock
xor
xor
xchg
cmp
xchg
push
in
adc
dec
js
push
inc
testl
lret
ds
imul
xchg
jbe
lret
mov
pop
inc
push
push
flds
dec
push
into
or
dec
pop
dec
inc
loopne
dec
mov
pushl
push
push
or
dec
inc
mov
pop
in
movsl
push
dec
dec
mov
loopne
add
and
and
xor
ret
idiv
les
pop
flds
or
pop
cmp
and
mov
sub
jl
mov
cmpsb
jne
ret
outsl
or
add
add
sti
dec
ja
je
outsl
outsb
mov
or
je
or
sub
xchg
lods
mov
scas
cmp
stos
mov
andb
jle
aad
or
iret
and
push
lock
or
mov
jnp
push
push
repz
push
adc
rclb
adc
mov
adc
arpl
sbb
ds
cld
adc
mov
mov
or
pop
adc
mov
mov
dec
jmp
insb
mov
push
jo
cmc
mov
es
pop
rclb
clc
test
cli
gs
dec
imul
adc
mov
ret
mov
aas
pop
or
adc
adc
bnd
rclb
loope
rcrb
add
and
mov
lea
push
rolb
adc
xor
mov
ret
push
mov
dec
je
sub
xor
push
sub
dec
xor
adc
add
push
mov
mov
ja
pop
or
daa
or
imul
fld
push
adc
inc
sub
jmp
dec
mov
fdivl
ds
add
and
mov
fisttpll
dec
pusha
orl
adc
sbb
inc
sbb
sti
or
xor
or
mov
cld
out
push
lock
pop
cli
rcll
cmp
xchg
jo
mov
mov
jmp
pop
fcoml
popa
add
ret
stc
sti
je
mov
mov
sub
insb
or
inc
mov
shrl
mov
xchg
jno
loopne
into
nop
test
fadds
test
fdivrs
xchg
or
xchg
ret
ss
sbb
out
pop
cltd
add
in
xchg
add
inc
jle
outsl
sub
stos
xor
jp
nop
sbb
pop
xchg
pop
xor
dec
add
faddl
dec
mov
sub
mov
dec
mov
xchg
gs
rcll
and
daa
push
or
leave
inc
cltd
mov
imul
add
rcrb
in
call
rcrb
inc
cmp
call
repz
push
cmp
xor
cmp
call
sbb
outsl
loope
and
insb
rcrb
scas
and
jno
dec
sbb
mov
cld
ret
in
repnz
xchg
xchg
fcoml
in
xchg
xor
add
and
in
out
rcll
fwait
xor
aam
lds
adcl
and
mov
and
jns
es
push
inc
pop
add
shlb
in
xchg
idivl
into
and
push
mov
js
sbb
inc
rcll
xchg
addr16
fisubl
mov
sbb
inc
dec
mov
int3
cs
add
out
popa
push
icebp
fidivrs
xchg
mov
adc
or
xor
sbb
jmp
xor
movsb
popf
das
xchg
or
jmp
jle
addb
sbb
shl
js
dec
rcll
push
sbb
jnp
pop
mov
and
fistpl
push
xchg
mov
outsb
and
pop
mov
scas
adcb
cs
fistpl
les
fucomi
and
outsb
imul
movl
aaa
inc
push
jne
lea
adc
mov
add
push
jmp
pop
in
cmp
in
sbb
xlat
nop
nop
clc
data16
cwtl
mov
adcl
scas
fcoms
push
sub
shll
outsl
shrl
inc
and
je
and
fucomip
add
add
test
mov
jle
xlat
leave
xchg
xor
mov
pop
sbb
pusha
inc
add
or
div
or
mov
add
adc
mov
cld
lea
mov
and
in
add
cmp
clc
sub
nop
or
push
or
push
push
repnz
rcll
dec
inc
adc
xchg
lock
popf
xor
push
push
fsubrs
or
cmp
je
notb
or
push
les
xor
test
addb
jo
push
in
add
fmuls
and
shl
call
lret
loopne
dec
pop
incl
mov
xor
jb
bound
xor
shl
inc
inc
inc
or
gs
ret
hlt
mov
mov
gs
es
cmp
pop
jp
outsl
mov
sar
sbb
xor
dec
mov
cld
lret
lea
rclb
outsl
or
hlt
insl
and
jecxz
and
les
dec
dec
lock
pop
push
push
add
add
dec
adc
add
rcr
xor
mov
xchg
or
mov
push
push
mov
push
pop
cwtl
adc
pop
fs
or
sbb
loopne
int
push
jg
idivl
ret
inc
imull
call
call
push
pop
adc
add
dec
xchg
cmp
mov
out
xchg
pop
dec
cld
dec
or
or
or
in
sub
xor
outsl
shrl
cmp
jg
sti
orb
fcomps
or
mov
add
les
xor
mov
add
dec
xorl
mov
push
movsl
inc
psraw
aad
ja
push
pop
lret
xchg
movsb
jns
js
rorl
push
cmp
andb
je
push
jg
jns
dec
arpl
dec
or
call
push
mov
lods
xchg
xchg
shrl
and
push
inc
adc
add
xchg
add
and
rcrb
pop
add
pop
pop
xor
jecxz
dec
adc
add
aad
and
pop
add
sub
and
adc
or
pop
inc
test
outsb
xor
fcom
sbb
out
adc
inc
lods
mov
es
push
sbb
pop
movb
jo
push
jecxz
and
push
adc
add
xchg
sub
jle
enter
jae
mov
les
pop
mov
sarl
and
lods
mov
ss
cmp
test
pop
sbb
rorb
ret
inc
test
mov
sub
imul
jmp
push
xor
push
dec
add
testb
jl
or
cmp
sub
sbb
jbe
hlt
sbb
stc
icebp
cmp
fisubrs
push
test
mov
shr
stos
leave
dec
push
sub
enter
mov
adc
xchg
mov
and
pop
lret
es
and
dec
push
je
and
adcb
mov
mov
cli
call
imul
sbb
and
add
jne
or
mov
les
jge
xor
pop
mov
add
cmpsl
push
fcoms
rolb
sbb
and
add
and
xchg
dec
dec
dec
cli
add
call
je
or
push
cmp
pop
cmpsl
and
pop
push
mov
fst
rcrb
xor
inc
inc
pop
add
push
push
out
cmp
in
dec
adc
mov
dec
fs
or
aaa
pusha
push
pop
out
jmp
mov
fs
sbb
xor
clc
dec
adc
fiadds
sub
or
push
inc
cmp
cmp
rclb
push
mov
and
inc
pushf
push
adc
and
cld
push
mov
mov
adc
mov
xor
popf
repz
in
and
into
shr
push
jmp
jmp
es
enter
mov
popa
mov
or
mov
nop
out
pop
add
add
lods
push
pushf
scas
rcrb
add
in
test
sahf
je
dec
out
dec
add
push
lgdtl
sbb
in
push
xchg
sbb
xchg
dec
jno,pn
dec
and
add
mov
and
push
sbb
and
nop
jl
in
in
sub
pop
push
inc
xchg
or
sub
mov
sub
or
xchg
xor
and
in
adc
loop
dec
and
inc
mov
push
push
and
out
xchg
sub
push
repnz
xor
push
mov
or
cmp
lods
cmp
xor
push
push
inc
scas
xchg
and
or
xchg
mov
lods
cmp
add
xchg
or
sbb
add
repnz
inc
fwait
xchg
addr16
inc
xchg
or
aam
and
cmp
sub
jl
xchg
loope
in
sub
push
ret
add
nop
dec
dec
in
stc
lods
cmp
push
pop
ret
stos
scas
xchg
push
dec
jmp
push
or
dec
orb
mov
scas
push
push
iret
xor
lods
sarl
and
xor
imul
dec
pop
dec
mov
in
cmp
leave
shlb
jl
stos
pop
or
ret
dec
call
ss
pcmpeqw
mov
imul
call
enter
xor
xchg
movsb
or
sbb
mov
adc
or
nop
sub
mov
adc
add
mov
pop
jecxz,pt
xor
rclb
or
pop
xchg
inc
or
sbb
inc
add
movsl
sub
dec
dec
sbb
adc
stc
enter
pop
sbb
test
inc
mov
fmuls
in
inc
jecxz
popf
push
mov
xlat
mov
add
sub
adc
or
inc
lret
pop
xchg
ficoml
xchg
and
loopne
jl
arpl
out
loopne
filds
cs
inc
in
push
in
scas
in
dec
mov
call
repz
cmp
testb
or
jne
orl
sbb
inc
es
xor
xchg
fdivp
or
pop
adc
push
in
bswap
jno
and
aam
repz
jp
int3
and
lock
daa
lock
sub
es
jne
pop
add
movsb
shll
pop
mov
daa
or
mov
sbb
sub
pop
or
add
xor
cmp
xchg
mov
loop
push
ljmp
jbe
pop
cmp
sbb
or
aam
or
xchg
fisubs
add
adc
shlb
sub
imul
pop
add
dec
sub
adc
lods
jge
push
stos
sti
or
adc
add
add
add
lds
mulb
sbb
push
mov
add
mov
mov
aas
xor
jns
jne
and
mov
sub
push
jmp
lock
rcrb
or
xchg
sarb
jnp
ss
pop
cmp
int3
mov
cld
cmp
mov
sub
inc
adc
stos
and
jb
pop
mov
and
add
sarb
sub
dec
push
dec
jbe
dec
sub
jae
mov
mov
jl
cmp
ja
xorl
rorl
cmp
jne
pop
adc
ds
in
push
pop
cmp
jge
cmp
cmp
movsb
xchg
add
push
jmp
pop
push
mov
cmp
adc
loopne
test
sbb
dec
call
in
jae
pusha
icebp
mov
loopne
jl
repnz
mov
filds
add
call
xchg
pop
push
lods
sbb
ret
push
xchg
ficompl
cld
sbb
sahf
mov
adc
mov
mov
andnps
and
aad
push
js
cwtl
and
xchg
flds
lods
mov
dec
or
xchg
xor
hlt
inc
into
inc
cmp
or
das
mov
gs
and
loopne
shll
xchg
cmpsl
bnd
rcl
jns
cmp
inc
leave
or
push
outsl
add
push
enter
fcompl
sub
push
add
adc
add
and
orl
lret
inc
inc
or
and
es
ffree
imul
mov
mov
imul
pop
xor
sti
insb
call
imul
and
out
pop
js
lock
jns
mov
add
sbb
jmp
push
inc
jecxz
add
scas
ret
push
or
loop
test
mov
scas
cltd
out
das
cmp
jbe
mov
mov
or
push
lds
adc
or
mov
jb
push
popa
mov
into
movsl
imul
inc
pop
mov
and
aaa
test
dec
xchg
sub
cmpsb
dec
cltd
mov
and
mov
test
inc
xchg
inc
inc
mov
das
or
jle
pusha
inc
dec
dec
stc
add
test
dec
hlt
out
repz
mov
jo
add
mov
out
push
push
cmp
push
sbb
push
pop
adc
jmp
arpl
sub
leave
outsl
pusha
test
inc
out
jbe
mov
pop
or
idivl
shll
adc
push
push
sahf
add
pop
and
iret
mov
or
pusha
fwait
jb
cmp
in
mov
nop
mov
add
cmp
xor
add
xchg
test
xor
sti
push
adc
xchg
sbb
es
sbb
cmp
jb
sbb
inc
cmp
negl
std
ja
sarl
rdmsr
or
cmp
aas
ja
push
push
push
negl
mov
clc
nop
mov
inc
cmpsl
pusha
xchg
cli
aam
mov
ret
test
enter
cld
push
pop
adcb
mov
decb
inc
or
sub
cmp
js
popa
aam
jne
andl
cmp
and
push
and
lods
xchg
iret
or
add
adc
les
jmp
dec
gs
jb
mov
lahf
add
inc
xor
filds
or
cmp
jmp
dec
leave
mov
xchg
lahf
movsb
inc
inc
aas
or
fsubs
xor
push
add
rolb
or
add
das
rcr
scas
mov
xor
add
xor
iret
movsb
sti
inc
ds
adc
push
jne
mov
jne
inc
fisttps
in
mov
pandn
rolb
dec
inc
adc
add
vmwrite
xorl
ja
ret
adc
imul
negb
rcrb
sbb
out
movsl
xor
aam
aam
in
incb
push
or
dec
insb
mov
sbb
popf
mov
pop
scas
xor
bound
loopne
push
insl
scas
add
arpl
in
add
dec
fsubrl
cmp
jno
pop
int3
js
sub
aad
das
lret
or
scas
das
pop
or
jp,pt
sub
inc
or
les
and
or
xchg
push
adc
or
movsl
icebp
loope
lea
push
pop
mov
rep
mov
cmpsb
popf
sbbb
push
push
xchg
xor
fiaddl
cmp
add
add
orb
or
cmpsb
rcll
outsb
add
nop
and
dec
lods
jge
or
pop
loopne
push
pushl
fisttps
jns
out
pop
ret
push
mov
xor
ja
sub
aam
addr16
dec
xor
fiadds
cltd
jne
test
or
xor
fadd
push
push
xchg
dec
pop
in
lock
dec
and
cmp
pushf
dec
mov
sub
test
xchg
push
or
ret
andps
shlb
cmp
pop
sbb
loop
pop
or
pop
push
adc
fs
push
cmp
inc
out
or
stos
pop
sbb
clc
je
add
push
sbb
dec
fisttpl
rcrl
cmp
mov
mov
ljmp
cld
adc
faddl
sub
jge
loopne
imul
pop
out
inc
and
cwtl
fildl
jbe
sub
lea
testb
xchg
push
cmp
cld
and
pop
dec
and
dec
mov
dec
flds
sub
or
mulb
imul
rcrb
call
xchg
inc
adc
mov
mov
dec
jmp
push
xor
jo
pushf
sbbb
lock
sbb
inc
je
dec
jp
inc
cmp
xchg
sbb
mov
or
popf
xchg
adc
ret
cltd
push
int
xchg
scas
lock
jecxz
and
add
test
jo
add
push
mov
pop
sbb
push
pop
adc
sti
jl
test
adc
cmp
dec
mov
and
les
or
ret
mov
int
test
orl
jecxz
pop
xchg
or
scas
and
icebp
outsl
jle
dec
add
jmp
xchg
mov
or
push
aas
cmc
cwtl
popf
into
mov
push
es
xor
push
xor
or
push
push
addr16
test
or
inc
lahf
repnz
xchg
cld
jns
pop
stc
xor
xor
cmp
inc
fsubr
lods
jl
inc
lock
adc
dec
xor
dec
sub
movl
cltd
push
addl
jge
push
mov
jno
inc
add
out
inc
dec
cmp
ljmp
mov
fs
decl
or
jbe
jno
jg
jl
add
cmc
adc
fiadds
xchg
orb
cltd
pop
ljmp
add
adc
rclb
jns
fadds
mov
and
dec
jecxz
jnp
pop
or
mov
jmp
es
subl
movsl
movmskps
jmp
cmp
fistl
jle
je
or
xchg
out
sbb
dec
mov
inc
movaps
xor
aam
loopne
or
je
xor
test
sub
inc
jge
insl
lods
pop
call
mov
js
xchg
lret
int3
je
cmp
push
pop
fists
jae
cmp
orb
fs
addr16
adc
adc
cmp
push
loopne
xor
xor
adc
loope
xor
xchg
and
mov
imul
cmp
ret
sub
xchg
gs
push
sub
rep
rcll
les
cmpsb
inc
xor
or
rcr
int
or
sbb
cmp
jae
cmp
cmp
add
sbb
call
arpl
mov
jnp
and
jne
push
push
push
cmp
in
sub
les
and
insb
jp
add
xchg
add
icebp
pusha
mov
inc
inc
sub
dec
or
mov
add
rorb
or
xor
cmp
push
mov
xchg
notb
xor
jbe
xchg
fiaddl
mov
xchg
mov
ds
pusha
push
je
popf
cwtl
cli
xor
arpl
xor
adc
mov
and
push
mov
push
inc
sub
or
hlt
leave
mov
push
mov
or
or
mov
sub
pop
ret
inc
in
pop
cmp
mov
jmp
mov
pop
adc
test
mov
mov
out
and
cld
sub
cmp
xor
lods
jcxz
mov
repnz
cmpb
push
fwait
jp
in
mov
push
cld
clc
pop
shl
add
xor
add
lret
cld
lret
xchg
shl
add
jnp
pop
adc
push
inc
sub
inc
sub
not
dec
push
adc
mov
inc
xlat
pop
push
push
cmp
call
jb
add
cld
or
orb
pop
dec
sahf
push
mov
cwtl
xchg
inc
shr
and
add
xchg
fsubrs
mov
adc
loope
ljmp
mov
lret
sbb
ljmp
adc
inc
adc
arpl
jb
mov
xorb
mov
xchg
popa
data16
bound
xor
sbb
sbb
or
scas
and
sarb
dec
jne
and
or
push
loopne
mov
lods
je
add
add
jmp
sbb
and
sarl
mov
and
jo
push
dec
lahf
movsl
xchg
push
mov
mov
jge
je
mov
add
test
mov
rcrl
inc
pop
cltd
cmp
jl
orb
addl
pop
jo
es
movntps
subb
xchg
pop
sbb
cmpb
popa
lods
les
icebp
stos
sbb
fisttpl
sub
xor
call
aad
pop
pop
add
leave
adc
addr16
mov
add
mov
and
movb
adc
dec
inc
mov
adc
and
test
shrb
mov
mov
add
add
push
ret
or
icebp
fidivl
push
mov
add
add
xchg
pop
clc
dec
jle
pop
pushf
in
ret
popa
insb
mov
adc
insl
insl
push
adc
inc
ljmp
mov
cmp
sbbl
ljmp
xorb
or
xor
jmp
or
dec
call
out
adc
push
outsb
sub
sar
cmp
jbe
or
add
hlt
hlt
push
mov
jmp
shll
inc
dec
pusha
in
inc
sbb
add
rcl
jle
pushf
faddl
and
repz
mov
add
and
cmp
test
jmp
and
pop
mov
cmp
push
adc
and
ja
lea
mov
lret
push
fdivp
repz
pop
mov
mov
jo
arpl
jnp
xchg
loopne
lret
push
insl
jo
jnp
ret
clc
in
mov
and
ret
repz
mov
or
push
sbb
aam
ds
add
and
enter
push
ror
sbb
shll
sub
dec
add
push
insl
add
fisttps
shlb
mov
add
mov
rolb
enter
xor
gs
pop
stos
rorl
pop
sub
xchg
adc
cmp
adc
pop
inc
cs
inc
testb
add
jmp
stos
push
arpl
dec
add
lahf
ljmp
cwtl
outsb
sar
lea
jp
enter
cmp
cmpsl
pusha
popa
push
push
cmp
jb
pushl
mov
into
pop
or
add
push
pop
jmp
xor
jae
mov
push
add
xor
pusha
and
mov
fidivrl
adc
and
or
int3
outsl
cmp
add
cmpsl
enter
xor
lea
push
sub
lock
mov
pop
pop
mov
bnd
out
mov
fcmovb
dec
adc
pop
loopne
or
mov
add
push
shrb
mov
jp
ret
jmp
jmp
pop
xor
jmp
cmpsb
inc
sub
addb
xor
jbe
xchg
je
or
inc
and
mov
xchg
cs
cmp
add
mov
outsl
scas
mov
test
and
inc
push
cli
insl
cmp
adc
insb
sbb
scas
in
sbb
sar
push
push
pop
jb
cmpsb
adc
in
nop
scas
xchg
daa
or
cmp
sbb
test
add
insl
cmp
daa
add
fdivl
fistl
arpl
ja
rcll
sub
pop
jb
fldt
aas
fwait
je
outsb
mov
cmp
adc
sti
ja
dec
nop
pop
jb
add
pusha
cld
dec
add
movl
jle
jb
pop
or
lock
push
aas
pushw
outsb
inc
mov
jne
xor
xor
sbbl
pusha
test
add
xor
and
adc
enter
dec
push
dec
or
enter
pop
cli
movsb
sahf
sub
pusha
in
dec
out
inc
rcll
add
faddl
push
ret
or
mov
push
xchg
xchg
and
sbb
xchg
mov
xchg
xchg
es
xchg
sub
daa
cmp
inc
push
nop
inc
push
nop
cwtl
cs
sti
jae
or
jmp
push
in
xor
in
inc
leave
xchg
add
push
push
insb
xor
or
xor
mov
mov
mov
pop
mov
fcmovnu
ret
ret
movsb
jl
sarb
jno
cmp
or
fbld
push
pop
orb
push
add
jmp
adc
pop
movsb
rcll
xor
adc
nop
iret
add
adc
cld
mov
dec
ret
sub
movl
shrb
andb
lds
or
add
adc
out
sub
jecxz
adc
jmp
fs
js
shll
ja
ja
sub
test
push
add
popf
je
xor
mov
adc
sysexit
popa
pop
add
ja
add
cmpb
fdivp
xor
or
inc
arpl
imul
out
fimull
popf
movb
pushf
mov
and
fbstp
or
xchg
inc
push
and
inc
adc
mov
addr16
pop
push
mov
enter
push
pop
pop
ret
sbbl
mov
xchg
stos
fstps
cld
and
sub
pop
mov
out
push
xchg
or
ltr
pop
pop
sub
rorb
mov
adc
jne
push
add
push
mov
addl
es
lock
daa
dec
mulb
out
je
and
stos
bnd
push
loope
dec
clc
fwait
pop
daa
loopne
dec
sub
das
dec
mov
pop
shlb
lock
sbb
jae
jne
sbb
sbb
add
push
sarb
in
test
adc
cmpsb
sbb
inc
call
loope
ljmp
push
loope
ret
lods
push
dec
pop
cmp
pop
icebp
dec
loop
pushf
or
mov
push
cmpb
out
sbb
jae,pn
outsb
adc
inc
mov
cltd
pusha
mov
std
scas
and
or
pop
jg
cmp
mov
insb
jmp
cmp
xchg
sub
in
cmc
aam
cmp
lock
mov
stc
orl
lock
pop
add
into
mov
pop
loope
mov
inc
add
stc
sub
cmp
jg
movsl
andl
outsl
sub
inc
inc
pop
leave
jo
shl
test
stos
add
push
rcl
cld
push
push
in
sbb
inc
add
or
add
leave
insl
in
call
out
or
mov
mov
sub
jnp
sub
pop
xchg
xchg
shlb
xor
xchg
dec
or
push
lea
add
loope
dec
mov
lea
mov
out
add
repz
add
pop
cltd
or
mov
test
fcoml
or
push
mov
pop
or
or
ljmp
fdivr
or
mov
scas
or
xchg
test
mov
movsl
add
sbbb
adc
lock
jmp
stc
insb
xchg
inc
fadd
dec
repnz
stc
pushaw
rcl
outsb
out
cmovbe
or
jp
popf
inc
iret
push
out
es
sbb
inc
hlt
inc
inc
nop
xchg
inc
and
movsbl
push
push
push
clc
xor
mov
pop
xchg
inc
or
inc
out
sbb
lock
jb
out
jge
out
or
pop
test
ds
and
test
or
lahf
cltd
stos
and
lock
ds
cmp
gs
ss
roll
daa
push
aaa
and
or
cmp
xor
or
lock
lock
or
in
mov
out
and
fdivr
popa
insl
shl
push
jmp
xor
push
mov
cmp
fsubrl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
aas
js
xor
lods
mov
inc
pop
cmp
mov
mov
pop
and
stc
iret
sti
sbb
xor
je
cmp
je
adcl
pop
xor
cmp
ret
lcall
adc
cs
adc
jno
dec
jg
add
pop
push
sub
add
cld
xorb
and
mov
loop
cmp
sub
mov
jl
jl
imul
mov
jmp
add
decl
out
jge
and
popa
pushl
sub
jne
movl
hlt
inc
mov
and
mov
add
mov
sbb
rclb
ret
and
shr
sub
lock
ja
lea
mov
xlat
pop
xchg
mov
js
and
xchg
adc
mov
js
mov
xchg
imul
imul
nop
cli
push
mov
mov
cmpsb
fldl
sbb
add
test
pop
mov
mov
sub
stc
faddl
mov
xchg
int3
fcomp
push
pop
mov
popa
fs
fisttpl
sub
sub
jl
and
insl
call
mov
lds
loopne
or
cld
lock
sbb
leave
fadd
loope
dec
push
lea
mov
fiaddl
adc
je
pop
enter
in
popl
call
or
ja
leave
outsl
push
inc
push
je
test
pop
movsb
xchg
push
test
xor
mov
mov
cmp
mov
xchg
popa
das
sbb
cmp
test
inc
or
stos
cmp
imul
push
push
pop
pop
pusha
in
mov
mov
add
adc
and
cmp
bound
stc
mov
cmpl
jns
movups
or
cltd
mov
push
mov
or
dec
je
adc
sbb
push
jne
push
push
mov
sbb
dec
arpl
cmpsb
xor
sub
das
or
les
shlb
shl
call
add
xor
xchg
mov
and
jbe
cltd
jmp
xchg
push
or
push
pop
or
sti
imul
xchg
ret
addb
xchg
icebp
cmp
inc
inc
jle
and
add
add
rclb
cmp
add
rolb
xchg
push
cmpb
mov
sbb
xor
xlat
sub
sub
mov
cli
jne
stc
lock
mov
sbb
jnp
femms
movsb
ret
add
cmp
and
cmpsb
sbb
inc
add
sar
dec
add
in
pop
xchg
add
sub
add
icebp
mov
jecxz
dec
pop
fucomi
jae
dec
lock
sarl
insl
ljmp
mov
das
scas
sahf
ss
inc
fidivrl
xor
or
nop
push
cmp
test
xchg
inc
into
pop
ds
and
jmp
sub
or
mov
push
dec
and
mov
and
add
sub
fisttpl
fcmovnb
push
adc
sub
xchg
mov
fwait
movb
dec
sarb
add
push
jmp
pop
cld
in
xor
inc
call
and
sbb
loop
adc
in
cmp
in
inc
ljmp
daa
je
cmp
lock
xchg
subl
push
lods
rcrl
mov
xchg
faddl
jno
adc
jo
cmp
xor
xor
popf
and
repnz
fs
ficoml
add
add
mov
jl
je
push
jne
in
sbb
es
into
sbb
lods
pop
pusha
movsb
or
push
inc
repnz
mov
pop
adc
mov
sub
jne
aaa
sub
pop
je
sbb
mov
cmp
pop
mov
or
fs
inc
sub
mov
outsl
lock
cmp
add
test
and
cwtl
decl
mov
mov
sub
pop
jg
in
jno
arpl
negl
andl
cmp
mov
jb
mov
std
push
test
sbb
fwait
loopne
mov
cwtl
adcl
push
jmp
stos
dec
fdivrs
movsb
and
adc
sbb
mov
and
push
cmp
movl
sub
inc
jle
enter
incl
repz
add
push
or
push
push
shlb
dec
sahf
sub
cld
inc
fadds
sti
cld
pop
das
inc
hlt
pop
adc
dec
adc
xchg
push
mov
inc
sbb
fistpll
loope
sub
hlt
jg
mov
sub
popa
lock
push
aas
add
jo
jl
jmp
mov
mov
push
mov
outsb
mov
add
lcall
cmp
movsb
mov
mov
lret
and
jl
sub
lea
xor
pop
mov
add
inc
jne
lret
and
pop
dec
or
movsl
aam
mov
mov
cmp
push
push
or
aaa
xchg
clc
lods
pop
pop
test
mov
dec
adc
push
mov
loope
imul
add
aam
mov
add
or
jns
jb
adcl
movsb
or
xchg
sub
push
sti
add
pop
add
add
or
add
pop
lock
ret
gs
add
cs
sub
push
mov
jne
in
xchg
mov
fisttpll
sub
cmp
in
push
cmp
ret
cmp
xchg
push
mov
pop
mov
jo
and
cmpsl
clc
ret
jmp
or
or
cmp
cmp
pop
xlat
mov
cmp
insb
test
pop
push
loop
dec
mov
dec
pop
push
cmp
bound
cmp
jmp
mov
test
sub
push
or
sbb
ret
pop
xor
mov
xchg
push
push
faddl
xchg
lret
adc
iret
rcrb
inc
sbb
jmp
jb
jnp
push
jnp
popf
add
mov
sbb
lea
sahf
push
mov
test
mov
push
sahf
lret
push
inc
sbb
movsb
ja
add
xor
mov
mov
xor
and
inc
pop
lds
scas
add
in
dec
lds
pop
mov
inc
pushf
test
lcall
push
or
add
dec
pop
sub
push
popa
dec
inc
jbe
fcoms
cmpsb
lock
cmp
ljmp
pop
push
push
fstpl
mov
inc
pop
data16
iret
outsl
pop
jbe
aaa
adc
adc
jne
push
divb
repz
cmp
clc
jne
or
jne
adc
jecxz
loopne
sbb
add
jo
mov
cmp
filds
xchg
add
or
pop
xor
mov
scas
mov
sub
jg
fcoms
push
sahf
jg
fistl
lret
mov
jnp
fstl
jecxz
loop
jbe
or
movsl
movsl
lea
movsl
mov
xchg
or
push
cmp
and
cmp
sbb
sbb
mov
bound
or
inc
and
gs
fidivrs
push
data16
aam
loopne
jo
pusha
ret
or
ffree
jge
jne
cmp
pushl
inc
inc
in
sub
push
outsb
test
mov
or
scas
pusha
jne
fisubl
inc
jl
fld
xor
mov
fidivl
and
pop
xor
in
fsts
hlt
pusha
pop
test
cmp
add
add
push
inc
mov
movsb
popf
daa
sbb
dec
fsubl
jbe
xchg
sub
add
fcmovbe
sbb
ror
add
or
and
int
lahf
aad
dec
mov
cmp
cmp
add
cmpl
andb
pop
cmp
adc
in
and
imul
jmp
or
ret
mov
push
mov
and
push
pop
jb
push
jbe
inc
ljmp
xchg
insb
push
inc
or
inc
xchg
add
sub
sbb
push
add
sub
addl
ss
mov
ficoml
or
pop
xor
or
sub
pop
lds
sub
movsb
mov
mov
or
adc
add
cmp
cmp
les
loop
lret
lods
push
fistpl
lret
pusha
mov
add
and
add
adc
push
pop
jno
shlb
add
sbb
lods
popa
faddl
mov
imul
dec
enter
pop
enter
mov
add
cmp
inc
mov
fisttpll
int3
and
cltd
rorb
jb
sub
cltd
nop
aam
or
push
fs
ficoms
loopne
sbb
fs
sub
fcmovu
in
call
adc
sub
add
add
mov
enter
dec
sarb
mov
test
jbe
xor
pop
jge
dec
sbbb
add
mov
lods
push
or
pop
arpl
ret
mov
sub
mov
add
push
mov
nop
inc
pop
loope
adc
and
cmp
es
sbb
pop
ret
cs
pop
mov
mov
stos
cmpb
cmp
jle
jle
add
pop
call
cmp
fimull
scas
aad
bound
or
push
adc
jle
cmp
mov
adc
sqrtps
add
add
cs
xchg
push
add
sbb
jbe
leave
jge
call
add
cmp
jl
cld
outsb
shrb
cmp
sbb
push
cmp
movsl
and
push
call
or
or
xchg
insl
push
add
add
dec
or
or
jle
arpl
mov
addl
xlat
bound
push
mov
inc
orl
pop
lret
xchg
push
imul
enter
in
push
les
cmpsb
lods
xchg
imul
cmp
dec
jb
cmp
call
out
push
dec
test
insb
add
cmpsb
cwtl
mov
push
stos
push
bound
rcr
fsts
xor
and
sub
push
pop
sti
inc
imul
cmp
xor
dec
sbb
test
pop
vmwrite
sub
sbb
adc
and
xor
pushf
adc
pop
lahf
cmp
mov
andb
and
sub
mov
arpl
dec
pop
ret
jne
mov
cmpl
or
lods
mov
inc
lock
pop
dec
add
ret
sarl
rcll
adc
mov
jle
adc
sbb
ds
push
cmp
sbb
test
mov
inc
push
jmp
jo
or
inc
rcll
hlt
and
rorb
pop
jno
jg
clc
jecxz
loope
adc
inc
gs
inc
add
sahf
inc
shl
and
in
jnp
or
stos
xor
jo
add
sti
daa
lcall
fcomps
ret
imul
push
iret
pop
jp
lea
add
mov
push
orb
sub
cs
sarb
ds
loopne
call
push
ret
mov
ffree
mov
pusha
ret
dec
cmp
adc
add
adc
push
imul
int3
cld
ret
push
aam
outsb
cmp
adc
pusha
pop
lds
add
leave
scas
push
jns
add
orb
push
push
test
dec
mov
loope
add
adcb
add
inc
inc
push
js
add
aam
in
sahf
ss
or
js
mov
sbb
je
orl
aas
in
adc
repz
sbb
push
jle
movsb
pop
gs
and
pop
push
fsubrl
jle
cmc
ret
add
in
stc
mov
pop
inc
lds
mov
int3
push
mov
lds
or
pop
ja
adcl
inc
inc
in
lahf
pop
enter
xor
xchg
stos
pop
adc
xlat
mov
mov
xor
stos
lods
outsb
push
dec
adc
stos
rorl
pop
insl
add
bound
insb
lahf
mov
mov
mov
movl
outsb
add
lret
add
mov
pop
movsb
push
int
cmpsl
pop
dec
add
add
cmp
ja
mov
sub
fists
adc
fndisi(8087
in
ret
in
lock
ja,pt
adc
and
jne
out
scas
rolb
sahf
daa
xor
pop
push
jae
pop
mov
sub
sub
adc
cmp
sbb
add
fdiv
or
rorb
sbb
cmp
mov
push
mov
push
shll
leave
sarl
daa
or
insb
sub
mov
rorb
jbe
jp
roll
push
lods
dec
outsl
stos
fcoml
mov
pop
pop
mov
sbb
mov
inc
lea
sub
arpl
or
mov
push
ret
sahf
sub
aaa
pop
xchg
ss
fs
pop
and
in
add
in
leave
inc
cmp
and
sbbl
mov
adc
daa
into
shl
nop
ret
push
loope
add
pushl
pop
adcb
inc
adc
and
bound
arpl
push
or
subb
xor
loope
adc
incb
adc
push
jg
addb
mov
lea
testl
in
add
mov
cmp
pushf
push
mov
dec
loope
sbb
mov
jle
sub
dec
lock
add
mov
adc
and
pop
adc
andl
push
lcall
popa
xchg
cs
mov
adcb
shlb
fsubrp
sbb
das
sub
add
les
into
outsb
test
push
andl
cmp
xchg
push
dec
bound
aam
cmp
pusha
push
loopne
or
add
jge
loop
lahf
lods
push
inc
test
das
popf
inc
push
push
push
or
add
pushf
mov
xchg
pop
shl
pop
dec
mov
in
out
jmp
jge
shrl
add
stos
or
inc
dec
das
ror
mov
mov
pusha
subl
fldt
mov
popf
cwtl
xchg
mov
hlt
aam
repz
pop
mov
cmp
sbb
jne
popf
clc
mov
push
fdivl
fimull
and
pavgb
mov
mov
mov
pop
adc
jne
inc
fmul
pop
dec
inc
imulb
and
scas
pop
cmpsb
push
add
lcall
scas
popl
jno
jnp
ror
insb
dec
cmc
mov
decb
test
dec
cs
leave
add
loope
and
add
add
loope
jae
push
imul
scas
sbb
xchg
sbb
or
sbb
popa
dec
push
jge
jmp
sbbl
and
push
in
add
lods
cs
mov
out
shlb
adcl
mov
xchg
js
or
pushl
sbb
cmp
jo
daa
dec
dec
xor
sbb
addb
mov
dec
mov
mov
push
dec
mov
push
pop
xchg
insl
loopne
mov
xor
cmp
pop
sub
mov
cmpsb
xchg
dec
pop
pop
popa
and
sbb
subb
out
out
add
or
insl
pushf
adc
stos
add
pushf
lret
cmp
pop
xor
dec
sahf
xchg
pusha
lods
or
cmpb
in
pop
enter
mov
movsb
jb
mov
xchg
inc
mov
andb
pop
sbbb
push
adc
sbb
and
cmp
push
or
inc
addr16
xchg
jns
push
pop
sub
fpatan
hlt
mov
and
arpl
pop
iret
push
mov
pop
inc
jmp
and
fistl
adc
scas
dec
mov
mov
andb
mov
cmp
sub
imul
pop
and
jb
jp
and
orb
xor
inc
or
adc
pop
test
loopne
aad
cmp
dec
or
cmpsl
add
arpl
push
mov
enter
mov
pop
rclb
sbb
adc
add
and
iret
dec
cmp
push
cwtl
and
data16
sti
push
sub
fsubs
mov
sub
sahf
test
and
and
and
and
mov
mov
ret
addb
cmp
cmp
and
jmp
das
cmpsb
xchg
sbb
in
or
insb
pop
sub
sbb
or
andb
adc
adc
dec
or
out
add
xlat
add
fisubs
mov
add
pop
mov
pusha
int3
aaa
sbb
int3
and
insb
xor
jae
inc
add
cmpsb
je
dec
inc
pop
fsubs
call
adc
stc
test
add
xor
mov
or
out
inc
add
dec
popa
mov
inc
addr16
test
ss
sbb
adcl
jl
add
int3
sbb
or
pop
adcb
movsb
sub
ds
cmc
pushf
in
xchg
or
mov
out
pusha
xor
jg
inc
xchg
inc
push
sbb
adc
loopne
push
inc
rorl
movsl
mov
push
pop
push
jns
rolb
out
loopne
push
adc
cmpsb
pop
pop
test
fcomps
ret
mov
aaa
fs
aad
pop
add
cld
adcb
push
mov
jne
xor
je
adc
xchg
jnp
cmpsb
mov
push
test
movsb
test
sbbb
cmp
fsubrl
test
xchg
or
loopne
and
add
js
push
xor
mov
jnp
lock
fstps
sbb
lret
or
add
nop
push
push
popf
and
xor
out
sbb
sub
jno
je
pop
mov
push
cli
lcall
sub
xchg
dec
pusha
jl
shl
add
ror
shlb
fincstp
shlb
in
mov
inc
jge
inc
mov
sbb
ja
cltd
rcl
lcall
pop
call
mov
ja
lock
sub
icebp
and
pop
or
inc
aad
scas
sub
orl
clc
lret
cmpsl
mov
clc
or
cmpb
and
pusha
mov
pop
sbb
pusha
dec
sti
mov
lods
rcr
lcall
dec
cli
inc
or
pop
pop
pushl
mov
ret
data16
xchg
jg
loop
scas
pop
push
push
dec
mov
gs
ret
repz
rorl
xor
outsb
lret
xor
jmp
jbe
mov
or
lods
or
sub
shll
gs
add
xor
andb
jne
push
adc
out
xchg
repz
cmp
jae
adc
mov
les
adc
inc
pusha
jmp
mov
mov
mov
mov
pop
jno
pop
adc
dec
ffreep
and
and
sarb
push
sbb
gs
inc
or
mov
rcrb
cmp
inc
les
jmp
shll
imul
in
inc
imulb
nop
dec
sbb
and
in
rol
in
dec
sub
pop
pop
mov
jmp
inc
nop
pop
mov
pop
push
dec
sub
xchg
pop
aas
xchg
adc
stos
inc
sbb
popa
cmpsb
sbb
test
xor
jmp
inc
ljmp
gs
outsb
mov
dec
je
test
lahf
les
push
mov
das
jp
aad
fwait
adc
data16
adc
jb
rcrl
clc
or
cmp
ret
cmp
out
call
or
and
mov
mov
xchg
mov
aas
shlb
push
cmp
je
cmp
aas
repnz
jne
mov
shlb
jne
push
hlt
and
and
and
pop
jne
pop
fstpl
jle
dec
test
jmp
sub
dec
mov
movsl
dec
and
xor
push
test
shrl
popf
push
stos
jle
mov
push
or
insb
and
pushf
sbb
sub
push
mov
jmp
mov
gs
cmp
inc
fs
lret
mov
xor
es
pop
or
xor
loop
push
jp
mov
lret
je
mov
clc
das
notl
or
push
popa
lret
xchg
dec
jno
popa
aam
push
sub
mov
fmul
cmpsl
ja
or
popa
push
subl
fadds
rclb
loopne
les
adc
rolb
xor
mov
adc
dec
dec
or
dec
fldl
aaa
dec
lock
movsl
mov
aas
sarb
and
fstpl
and
insl
clc
push
scas
mov
scas
mov
xor
out
cmp
add
sbb
or
jmp
pop
fsub
pop
fsubrp
gs
je
dec
jmp
movsl
mov
call
add
add
pop
add
dec
mov
data16
xor
push
shlb
mov
sub
sub
sti
idivl
subl
aaa
es
fisubl
adc
push
adc
loope
adc
sbb
inc
sbb
adc
fs
adc
pop
mov
sub
xchg
sbb
hlt
in
xchg
push
add
sbb
sub
dec
jno
dec
jp
xchg
sbb
sbb
add
push
push
sbb
sbb
dec
sub
sahf
out
mov
sub
outsb
xchg
sbb
adc
pushf
adc
add
mov
sbb
push
in
xchg
popf
stc
popf
mov
or
and
jp
and
lahf
lss
sbb
adc
adc
xchg
out
movsb
or
mov
xor
push
pusha
dec
mov
dec
and
jmp
testb
or
and
adc
pop
jns
adc
imul
push
in
and
es
dec
mov
sub
adc
das
sub
xchg
adc
sbb
daa
cmp
je
or
fs
into
xor
mov
and
sub
push
addl
jecxz
fcoms
push
ret
aaa
leave
push
add
lock
hlt
and
or
lods
cmp
ja
adc
or
or
addr16
push
push
dec
pop
cltd
mov
or
push
xchg
xor
cmpsb
bound
lds
lahf
mov
add
sbb
jmp
dec
fadds
sbb
jge
sarl
ja
or
adc
push
lods
sub
std
sub
fwait
add
sub
mov
cmp
xor
dec
mov
gs
and
dec
or
js
in
cmpsb
pusha
push
adc
and
es
fs
leave
out
adc
ja
or
loopne
mov
fwait
dec
iret
repz
decl
stos
mov
cmp
out
call
scas
and
out
xor
gs
out
sahf
out
mov
repz
add
pop
cmp
repz
jp
pushf
lods
stc
cmp
repz
mov
jns
cmpsl
adc
out
jns
sub
je
add
sbb
push
jmp
or
and
cmp
inc
jns
sbb
jecxz
add
test
pusha
psubusw
je
iret
push
mov
xor
cmp
xor
adcb
les
popa
dec
loop
icebp
or
or
push
xor
gs
jo
dec
jne
adc
mov
addr16
cmpsb
mov
cmove
mov
outsb
push
push
xchg
pop
jl
popa
pop
dec
sysret
add
test
xor
and
and
sbb
push
adc
fisttpl
mov
repnz
push
or
das
xchg
fcoms
jge
cmp
xchg
js
sub
lds
insl
nop
scas
inc
sbb
inc
adc
and
inc
and
dec
add
push
je
adc
loopne
popa
mov
sub
add
nop
sub
shlb
push
mov
nop
rcll
imul
cs
dec
call
add
lods
lds
sbb
push
and
add
and
mov
filds
hlt
cmp
cmp
mov
dec
nop
mov
clc
pop
mov
inc
sbb
jecxz
mov
daa
loopne
cmpsb
dec
hlt
mov
addr16
xchg
dec
pop
sbb
add
cmpsb
add
dec
sub
movsb
push
sbb
mov
in
data16
jo
add
pusha
mov
adc
xchg
sub
xchg
lret
ret
out
in
push
popa
add
push
sbb
call
dec
in
add
in
mov
pop
push
xchg
pop
orl
add
mov
lahf
pop
adc
je
loope
push
test
push
inc
pop
mov
movsb
jle
add
sbb
and
out
lock
push
add
shll
nop
sbb
inc
jns
push
sbb
xor
push
stos
add
sub
es
add
cmpsb
jg
es
sub
ss
dec
ljmp
push
sbb
or
fiaddl
push
inc
pop
jb
mov
je
adc
ret
cltd
es
and
sub
mov
daa
ss
mov
xchg
jl
ret
dec
push
pop
sbb
test
cmp
push
movsl
ret
mov
enter
sbb
cs
cmpsb
xor
push
in
xchg
add
push
inc
jb
xchg
daa
ret
push
mov
mov
add
or
arpl
rorl
sbb
and
or
es
adc
lock
cmpsb
push
sub
mov
repnz
into
push
mov
jg
cmpsb
push
xchg
add
fs
mov
xchg
out
add
sub
push
jns
push
in
pop
sub
mov
or
and
adc
addr16
add
mov
lgdtl
add
add
push
mov
adc
cmpb
jo
and
xchg
adcb
push
cld
sbb
sahf
inc
or
outsb
adc
or
je
and
ds
imul
aam
les
xor
cmc
mov
inc
aam
sbb
test
std
xor
test
adc
inc
sbb
loopne
add
or
sbb
lods
jl
jl
or
cmp
hlt
jno
pop
mov
inc
push
xor
or
push
pusha
add
imul
inc
cmpsl
mov
push
cltd
insb
cmp
sbb
ljmp
movsb
adc
jae
jge
sbb
loope
inc
jne
movsl
jae
ss
test
pop
push
bound
add
mov
add
or
push
push
sub
mov
sub
cltd
lahf
sbb
enter
mov
pop
sbb
add
sbb
mov
mov
pushf
sbb
sbb
push
addl
add
or
xor
xor
mov
push
and
sub
jae
adc
stos
popa
addl
mov
push
mov
push
inc
sahf
and
add
xorb
sub
xchg
stos
pop
inc
add
cmp
and
adc
pop
jg
sub
sbb
or
loopne
rcll
inc
or
daa
push
sub
cmp
aaa
or
jecxz
sbb
pusha
adc
add
mov
and
icebp
mov
add
push
lods
sub
mov
xor
pop
dec
loope
lea
mov
or
adc
lret
add
in
sahf
popf
cmp
punpcklwd
addb
mov
sbb
cmp
add
or
adc
je
jbe
mov
mov
dec
test
sbb
push
or
aam
xorb
mov
insl
push
enter
push
adc
pop
adc
sub
dec
imul
push
mov
push
cmpb
mov
mov
and
lcall
xchg
add
or
add
addr16
xorb
repnz
cmp
addb
fldcw
mov
outsl
add
aam
into
dec
or
sarb
dec
js
test
lcall
divl
je
movsl
bound
push
arpl
cmp
insb
mov
lods
loopne
adc
and
jmp
mov
sub
ja
leave
pop
xchg
call
movsl
xchg
xor
fcomps
out
jae
or
add
nop
mov
xor
fmull
sbb
aas
jp
push
sbb
movsb
dec
add
icebp
mov
jl
imul
rclb
pop
fisttpl
push
xchg
jmp
loopne
or
push
sub
or
cmpsb
ss
cwtl
lahf
cmpsl
ret
frstor
push
dec
imul
int3
jmp
add
sti
dec
xor
dec
rcr
pop
or
pop
mov
hlt
sbb
fiadds
sub
call
fidivl
daa
push
lahf
xor
in
mov
pop
adc
loopne
sub
rorb
aaa
jno
add
dec
cmp
repnz
in
xchg
xor
inc
sbb
jl
xchg
sbb
in
stc
pop
inc
mov
add
push
ljmp
jecxz
shr
jbe
movsl
arpl
adc
cwtl
mov
sub
sarb
test
add
xor
inc
lea
pushf
mov
popa
add
lods
mov
ljmp
pop
icebp
jns
add
adc
jb
lods
mov
adc
lret
pop
call
leave
cmp
jae
shlb
mov
pop
dec
adc
inc
in
xchg
fisubs
mov
stc
mov
lcall
pop
loope
push
mov
xor
sub
cmp
mov
in
idiv
or
shr
and
cli
inc
jl
or
sbb
popa
jp
jg
push
lcall
shll
pop
mov
push
add
inc
jmp
pop
and
mov
mov
push
cltd
pop
idiv
pusha
xlat
call
in
aad
xchg
out
xor
lret
clc
sbb
sub
xor
daa
or
fs
loope
xchg
outsl
mov
cmpsl
test
test
xchg
das
fdivrl
in
mov
cmp
shr
sub
or
dec
or
dec
jl
xchg
addl
cmp
out
xchg
hlt
incb
popf
int
or
xlat
into
iret
cmp
mov
dec
ficomps
cmp
icebp
cmp
nop
mov
jo
push
cmp
push
or
push
mov
test
pop
mov
jmp
mov
mov
or
push
rolb
mov
mov
adc
fwait
or
inc
mov
lret
loopne
add
stos
aam
cs
mov
lea
push
pop
pop
or
sub
or
stc
push
shrb
push
mov
test
aam
iret
cmpsl
rorb
movsb
stos
cmp
adc
adc
enter
mov
in
popa
rcll
push
lods
adc
adc
pop
sub
fisttpll
mov
inc
push
push
xor
pop
mov
xlat
jo
cmp
push
push
lock
shll
and
scas
daa
push
jl
insb
push
cmpsb
pop
jbe
fcomps
pop
jns
cs
movsb
sbb
enter
mov
cmp
dec
fs
sbb
xor
add
ja
call
adc
call
mov
push
dec
int3
in
jle
sbb
or
xchg
push
dec
repz
dec
cmp
imul
scas
inc
ja
add
in
xchg
pusha
shr
mov
fnstenv
and
xor
xchg
mov
sahf
test
rorb
mov
loope
xor
xor
iret
in
mov
jb
jne
aad
jo
leave
mov
push
dec
andb
dec
stc
andl
stos
aaa
push
sub
inc
int
mov
inc
adc
fisubs
push
daa
xchg
pushf
pusha
cwtl
dec
jb
leave
leave
nop
pop
mov
dec
or
js
es
dec
cmp
leave
leave
insl
push
lods
shld
test
fs
xor
push
ret
mov
xchg
outsl
fcomps
leave
adc
add
add
ffree
pmulhuw
sbb
push
cs
fcomps
sbb
pop
add
push
in
pop
stc
sbb
xor
fdivl
jp
iret
lea
arpl
or
fadds
les
push
rolb
add
mov
adc
mov
jecxz
cwtl
jno
pop
mov
inc
mov
or
xor
scas
fildl
jno
nop
pop
aad
and
pop
scas
scas
faddl
add
inc
inc
xor
xchg
loopne
cmpsb
and
xlat
mov
bound
add
mov
lods
cs
comiss
push
fistpll
inc
mov
std
mov
sbb
fsubrs
movsb
adc
cmpsl
sub
cmp
inc
pop
inc
push
mov
lret
or
ror
or
pop
push
scas
fldenv
fcoms
sbb
add
lock
insl
dec
es
sbb
int3
cmc
nop
in
push
add
std
push
popa
ret
and
addr16
ja
xchg
fmulp
push
push
inc
adc
les
xchg
lea
xor
dec
cs
adc
lock
push
popf
push
test
and
ss
or
push
jmp
lods
nop
rclb
daa
lods
or
jl
xor
xor
mov
pusha
fs
enter
add
mov
idivl
scas
push
sbb
les
inc
cli
pop
push
mov
imul
jle
push
cmp
lock
inc
mov
rclb
push
outsl
neg
sub
ds
add
or
xor
xchg
inc
sub
pusha
and
inc
push
xor
pop
cmp
add
dec
sub
xchg
adc
adc
dec
adc
movsb
scas
mov
add
add
lods
and
add
inc
inc
sbb
add
movsb
push
pop
or
xor
xchg
fimuls
jecxz
push
dec
jmp
inc
pop
lock
cmpsl
dec
and
jmp
pmaxub
hlt
xchg
insb
or
xchg
dec
or
or
cli
dec
xchg
push
add
push
sub
clc
pushf
rcll
test
stc
and
or
adc
or
movsl
mov
jp
repz
xchg
ret
sub
sti
out
cmp
sahf
xorl
pop
adc
outsl
test
inc
aaa
or
and
xchg
add
ljmp
dec
mov
add
loop
out
sbb
jl
sub
int3
lcall
fcomps
add
aad
xor
push
stos
iret
lods
mov
xchg
lds
and
clc
std
add
pop
dec
adc
cs
push
pop
call
test
test
push
fbstp
push
mov
mov
clc
sbb
push
adc
imul
adc
cld
jo
pop
incl
jl
lea
add
adc
adc
mov
or
lret
add
lret
or
or
repz
pop
loopne
xchg
and
sbb
sub
adc
leave
or
or
push
cmp
adc
inc
adc
adc
fldcw
push
jmp
fidivl
cmp
loopne
imul
sbb
jl
mov
fwait
dec
cli
or
adc
out
es
jge
call
push
nop
xchg
stos
aam
sub
popf
jecxz
mov
outsb
add
jne
iret
pusha
ss
nop
push
mov
cmpsl
sbb
das
or
je
mov
dec
mov
cmpsl
fmull
adc
mov
jae
rorb
js
int3
xchg
test
mov
pop
or
jo
adc
subl
pop
jmp
cs
lea
inc
sbb
and
fcoms
dec
es
adc
adcl
aaa
xchg
lret
adc
fsubl
dec
loope
pusha
ret
adc
lea
xchg
call
popa
add
fdivs
and
adc
iret
pop
ljmp
fcmovne
fisubs
cmpsb
daa
cmc
lock
mov
mov
inc
pop
add
repz
jns
xor
adc
mov
pop
mov
pop
push
sbb
mov
in
mov
dec
popa
test
sub
add
xor
les
mov
and
inc
cmp
mov
rolb
ret
nop
add
cmpsl
fldpi
pop
or
add
popa
pop
mov
push
enter
sbb
out
sub
xor
xchg
sub
mov
addb
dec
sub
pop
clc
push
jns
inc
clc
xor
mov
inc
insb
push
push
fwait
and
addr16
cmp
ja
sub
fsubr
pop
pop
sarl
mov
xchg
cmp
adcl
or
mov
shll
aam
cmp
sub
pop
push
cmp
inc
cmp
in
xchg
out
cmp
es
mov
cmp
adc
cmp
sub
mov
ret
sbb
outsl
mov
xchg
or
push
leave
pop
leave
popa
test
add
cmp
push
lea
rclb
ret
mov
lret
sub
sbb
fstpl
jbe
push
xor
pushf
cmp
add
push
sbb
sbb
add
scas
add
or
pop
cli
lret
sbb
fisubrs
cmp
push
add
je
cmp
xchg
mov
in
cmp
and
pop
push
jne
and
add
ret
push
cltd
xchg
jnp
push
cmpb
sbb
les
dec
cmpsl
add
sub
add
adc
lods
mov
add
add
add
mov
xchg
inc
add
cld
push
adc
and
cltd
cmp
filds
add
pop
cmpsl
decl
sub
addr16
jle
mov
push
jo
mov
pop
pop
jne
cwtl
mov
ss
leave
add
push
cmp
and
imul
cltd
jle
sbbl
jl
jo
mov
popa
mov
cmp
outsl
call
test
test
call
inc
xorl
scas
dec
sub
ja
and
xchg
or
dec
jne
mov
sbb
pop
in
xchg
or
sbb
cmp
pop
push
lods
ss
hlt
and
sbb
test
dec
cmp
pop
lret
xchg
push
mov
pop
inc
or
test
push
or
or
mov
sub
sti
pop
sbbb
in
and
shl
loope
mov
scas
push
gs
or
repz
test
rclb
xadd
adc
push
xor
fs
ror
in
addr16
in
stc
sub
push
imul
dec
out
aam
and
movsl
xchg
mov
inc
rolb
cltd
mov
sub
push
mov
push
andb
mov
cwtl
and
and
push
xlat
push
push
movsl
insb
adc
and
jp
mov
mov
or
repz
ret
dec
sti
xchg
push
or
xchg
adc
mov
imul
add
mov
mov
out
mov
and
cmpl
jnp
nop
push
shrb
in
mov
inc
sbb
popa
es
cmp
popf
jo
pop
test
gs
daa
push
add
pushf
sbb
or
or
or
rorb
push
xor
add
pop
nop
adc
pop
mov
pop
pusha
push
push
or
rorl
or
cld
in
sbb
xor
xorb
gs
push
push
lods
and
pop
enter
lret
cli
xor
ja
jne
in
out
jge
mov
push
add
push
cltd
jb
fimull
sbb
adc
sub
movb
cmp
testl
xchg
mov
jge
cmp
xchg
or
addl
addr16
cmp
jb
dec
fisubrs
push
dec
out
or
and
push
sbb
push
out
jg
out
inc
cmp
jae
mov
xor
lock
jecxz
mov
add
jmp
ret
xor
test
mov
add
push
lahf
test
clc
or
mov
out
enter
xchg
inc
sub
xchg
jge
sub
adc
icebp
popa
mov
jp
loope
sbb
mov
jbe
test
fnstenv
dec
push
add
jns
mov
jbe
dec
cmp
cmp
fisttps
mov
bound
add
sbb
pusha
cmpsb
push
jecxz
loope
test
idiv
pusha
pop
push
sub
movsl
xor
test
sbb
lds
shrb
xor
add
popf
and
sti
and
and
dec
dec
push
xchg
mov
push
dec
lods
push
mov
sub
mov
rorb
or
ds
sub
jne
add
lds
dec
call
push
lret
cmp
push
xchg
mov
hlt
fs
xor
sbb
mov
jnp
pusha
xchg
xchg
fsub
pop
push
fists
nop
mov
mov
push
push
cltd
or
arpl
mov
inc
jl
test
mov
js
jge
push
imul
and
mov
test
jne
mov
push
adc
divb
mov
xchg
out
cld
or
pop
push
mov
nop
sbbl
xor
jbe
push
add
mov
and
sub
mull
mov
mov
jl
stc
xchg
push
sbb
or
shll
enter
aaa
repz
mov
push
bound
adc
xor
in
cmc
ror
push
lea
lahf
jle
sub
pop
and
add
sbb
dec
dec
pop
inc
mov
ret
pop
ja
nop
add
push
xor
dec
jb
and
stos
dec
movsb
lds
inc
pop
aam
xchg
add
cwtl
xchg
rcrb
int3
jecxz,pt
xor
out
lret
or
mov
mov
add
or
pusha
add
jmp
and
adc
lock
add
pop
add
orl
inc
sub
and
cmp
daa
lock
in
push
cmpsb
out
lret
xchg
xor
inc
xchg
dec
pop
pop
sbb
idivb
cmpsl
xchg
jns
aad
dec
out
sar
and
add
leave
cmp
pop
add
push
ret
add
sub
popf
jp
mov
dec
daa
pusha
adc
stos
push
negb
push
cmpsl
out
ja
add
aad
fucomp
pop
addl
cld
cmp
mov
dec
addr16
orl
pop
rclb
testb
stos
inc
xchg
jne
mov
or
jo
inc
jne
in
fimull
xchg
xchg
insb
jo
or
push
jmp
aas
adc
scas
adc
out
into
and
sahf
pop
push
test
and
pushf
je
xor
dec
insl
mov
and
sub
test
pop
enter
cwtl
sbb
popa
inc
sbb
pop
inc
fbld
test
xor
shlb
sub
shl
scas
mov
insb
adc
mov
pushf
adc
mov
add
lock
push
mov
push
test
rcrl
xor
jb
sub
xchg
add
sub
jo
mov
loop
push
add
dec
sbb
jne
cwtl
or
add
loope
dec
add
je
adc
adc
aaa
lret
sbb
dec
es
add
inc
add
push
inc
sbb
xchg
pusha
xchg
andl
loope
push
sbb
mov
and
cmp
scas
push
stos
jo
ss
push
imul
mov
rcrl
les
sbbb
test
lock
cmpsb
cmpsl
clc
inc
adc
xchg
call
addl
insl
leave
mov
jmp
pusha
pop
add
adc
adc
daa
iret
push
sbb
adc
scas
ret
jge
sub
inc
movsl
adc
and
loope
pop
sbb
pusha
out
pop
js
and
inc
pop
mov
std
and
cmpsb
add
addl
clc
or
jo
enter
cmpsl
and
rclb
sbb
jo
imul
testl
fildl
push
sub
mov
pop
test
pop
xchg
jp
pop
sbb
mov
pop
and
adc
dec
shll
outsb
fcmovnbe
cmp
ja
add
addr16
pop
xchg
test
add
or
stos
xor
mov
lret
movsb
sbb
xchg
sub
add
loop
sbb
fs
iret
cmp
lret
adc
inc
push
shl
pop
lods
mov
js
ds
mov
pop
and
inc
stos
repz
in
sahf
add
sub
dec
test
fimuls
sbbl
in
sbb
cmc
sub
aam
mov
lods
insl
scas
leave
jnp
add
add
xchg
or
addb
ret
sub
movsb
test
dec
data16
pop
adc
in
jecxz
pop
add
and
jge
or
sub
dec
add
or
cmp
mov
adcb
sbb
push
dec
dec
push
scas
or
xor
andb
inc
sbb
push
xor
push
adc
xor
add
mov
pop
sub
push
cwtl
sbb
or
adc
or
test
lcall
aaa
fwait
or
push
pop
or
adc
xchg
push
and
or
sbbl
ret
jbe
adc
notb
imulw
clc
sahf
clc
mov
dec
icebp
push
cmc
add
adc
inc
jns
ds
out
push
das
insl
sub
and
xor
and
loopne
sbb
arpl
sarb
adc
in
into
jnp
push
subb
ret
add
lea
xchg
iret
or
cld
dec
add
rorl
loopne
test
sti
sbb
xor
mov
loope
or
xor
push
and
insb
notl
add
call
daa
mov
or
cmpl
jo
push
xor
xor
inc
sbb
sbb
mov
les
or
or
sbb
gs
cmp
pop
sahf
jp
daa
lret
sbb
or
into
andb
fcoms
jo
xchg
andl
lods
xchg
rorl
adc
pushf
jbe
nop
or
ds
cmp
add
mov
ret
push
xchg
sub
clc
xchg
lds
call
cmp
ja
or
je
dec
leave
arpl
icebp
mov
inc
jmp
mov
sub
repnz
negl
mov
mov
mov
adc
test
in
aaa
dec
pop
psubw
js
xchg
ja
mov
push
insb
mov
fiadds
sub
or
add
int3
inc
lds
out
add
inc
and
xchg
push
pop
cmpl
xor
push
xchg
dec
add
xchg
pop
fwait
addr16
jo
inc
cmp
inc
mov
jmp
and
xchg
insb
and
add
xor
push
cli
add
shlb
jge
dec
jl
jne
mov
mov
mov
inc
or
push
loope
ja
mov
loopne
push
pop
aad
push
enter
xor
adc
inc
shlb
or
sub
xchg
lret
and
add
jle
cmp
or
mov
mov
add
push
sbb
sub
dec
shl
dec
enter
jne
or
dec
add
mov
insb
jae
pushf
pop
fisubl
push
add
or
or
icebp
fildl
push
dec
leave
insl
sbb
pop
mov
fmuls
shll
mov
cwtl
cmp
lahf
push
decb
mov
cli
dec
jge
pop
inc
outsl
inc
popf
inc
mov
push
inc
leave
dec
and
jo
leave
test
mov
out
push
inc
dec
pop
call
out
or
add
push
ret
mov
pop
cmpsl
xchg
or
mov
mov
adc
mov
dec
mov
xchg
add
fidivrl
xor
hlt
dec
pop
sahf
mov
mov
push
add
adc
dec
push
ja
push
shrb
lods
call
and
insb
sbb
popa
xlat
test
aaa
xchg
daa
add
add
fdivs
inc
lock
xchg
mov
inc
movsb
jns
clc
loopne
call
xchg
pop
add
cmc
xchg
addl
cmp
or
in
push
cwtl
out
add
sub
dec
popa
and
jecxz
aad
dec
les
mov
test
adc
mov
or
shll
xchg
loop
adc
push
adc
outsl
nop
repnz
or
mov
cmp
fs
add
jns
ret
xchg
cmp
adc
ss
leave
cmp
clc
add
mov
mov
adc
add
jmp
add
test
adc
cmp
sbb
mov
imulb
loopne
nop
pushl
loope
jmp
pop
aaa
test
les
push
cmpsl
fadds
pop
movsb
add
fs
and
out
mov
mov
jns
jl
sub
and
adc
add
lea
sbb
enter
xor
push
hlt
adc
stos
je
sbb
jae
inc
je
add
in
aam
sub
popl
cmpsl
outsl
push
and
lods
pop
add
fdivl
and
mov
lret
adc
pop
pop
cmc
nop
popa
jns
shll
pop
xor
add
adc
and
xchg
sbb
add
mov
add
or
jge
aas
dec
js
je
pop
adc
mov
pop
push
jo
jae
add
adc
and
sub
adc
dec
push
and
lock
sbb
jns
test
inc
dec
loopne
adc
mul
imul
arpl
mov
add
mov
pop
test
mov
je
call
push
push
leave
leave
ss
jo
les
lods
call
int3
xor
mov
push
add
push
xchg
adc
adc
fmuls
nop
mov
dec
inc
pop
jl
sub
imulb
jp
mov
xor
xchg
sar
push
push
xchg
mov
call
adc
adc
out
mov
xlat
xchg
sarb
test
adc
mov
mov
mov
dec
xor
adc
in
addr16
repnz
xchg
das
stc
pop
daa
dec
and
adc
pop
fsubs
ror
add
into
push
loope
sub
ljmp
mov
push
inc
sbb
cmp
or
mov
adc
pop
setge
das
mov
cmp
mov
xor
aam
popa
or
pop
mov
movsl
dec
pop
roll
popf
shlb
fwait
dec
rolb
aam
cmp
mov
pop
enter
or
insb
int
es
and
std
inc
or
mov
mov
mov
inc
nop
jle
popa
jmp
mov
jge
mov
movsl
inc
dec
outsl
add
cld
push
push
movzbl
out
push
or
in
in
jmp
dec
movsl
push
ljmp
mov
inc
mov
or
jo
push
pusha
lock
xor
sub
pop
adc
shlb
call
mov
jno
push
and
ret
test
xor
add
inc
xchg
and
je
pop
fbstp
rorb
cmpsb
into
sbb
mov
adc
push
lods
mov
adc
xchg
insl
andl
dec
nop
repnz
or
mov
lea
imul
mov
imul
sbb
or
mov
movsl
movb
rol
stos
sbb
dec
dec
or
pop
test
test
add
enter
iret
jbe
mov
mov
lret
lea
mov
ja
sbb
add
into
stos
xlat
sarb
mov
xor
enter
dec
idivb
mov
adc
add
mov
mov
fdivr
cmp
push
pop
fildll
or
jne
push
push
inc
mov
push
decl
into
mov
mov
scas
mov
and
sub
jge
jle
scas
jmp
rcl
mov
scas
ret
cmp
jb
nop
xchg
popf
movsb
sbb
das
or
push
cmp
ret
mov
mov
mul
inc
or
pop
mov
rorb
pop
mov
push
add
rclb
test
push
sub
add
dec
pop
jmp
mov
jbe
mov
add
xchg
mov
mov
push
push
lret
pusha
adc
adc
sub
push
lods
pop
iret
nop
mov
enter
imul
shl
cmp
int3
adc
cltd
les
icebp
imul
xchg
push
adc
out
lea
pop
sub
add
or
sub
xor
ret
orb
adc
adc
orl
or
fidivrs
push
inc
call
cltd
sti
push
dec
js
push
and
jl
push
adc
cmp
sub
or
push
lahf
mov
lret
lock
xchg
mov
inc
jb
push
push
pop
push
fcoms
adc
leave
sbb
pusha
xor
nop
xor
lret
iret
test
or
fildl
jmp
sub
adc
add
xlat
nop
imul
mov
pop
and
icebp
adc
jns
inc
push
mov
sbb
push
pop
push
subb
enter
cmp
dec
push
dec
hlt
jne
mov
addr16
andb
sub
lcall
and
pop
push
adc
dec
cmp
lock
jo
sub
push
sub
and
add
inc
sbb
loope
sbb
xchg
clc
in
sahf
out
push
rclb
fcoml
add
pop
loope
inc
push
pushf
lock
scas
fndisi(8087
pop
bound
cmp
jge
add
pop
mov
into
cli
notl
mov
js
fwait
mov
das
cld
push
jne
pop
loope
xchg
enter
out
aad
pop
imul
rorl
sar
lahf
adcb
out
xchg
cld
dec
add
inc
mov
xchg
sbbl
mov
test
fstpl
inc
arpl
push
push
popf
orl
mov
xor
pusha
pop
or
jg
add
rcll
testl
mov
movsb
aaa
jge
jge
push
sbb
out
inc
lea
adc
adc
lret
pop
gs
or
mov
or
dec
sarl
adc
or
loopne
sub
mov
gs
ja
pop
mov
push
mov
out
inc
or
jbe
sbbb
lret
mov
adc
jle
mov
jne
push
outsb
scas
insl
ja
adc
aas
dec
adcl
mov
mov
mov
sbb
fbld
pop
add
fdivl
scas
push
push
addps
fsubl
mov
xor
mov
xor
pop
add
inc
inc
int
into
mov
fcmovnb
xor
or
push
cmp
xor
add
and
scas
sub
dec
decl
mov
inc
sbb
fcomps
rcrb
push
and
pop
dec
test
mov
lcall
add
jg
push
pop
or
sbbb
dec
imul
sahf
std
js
xor
adc
jae
pop
mov
shll
lds
adc
push
loope
mov
scas
sub
push
movsb
loope
rol
mov
data16
inc
sbb
sete
sbb
rcr
in
ss
push
push
add
push
push
inc
xchg
cmpsb
decl
inc
iret
and
xchg
data16
jae
push
xor
dec
and
jmp
sub
mov
fs
jno
xlat
mov
test
cmpl
sub
sahf
xlat
es
push
pop
add
les
inc
loope
imul
test
lea
shrb
movsb
pop
cmc
cli
sbb
jns
dec
mov
cmp
jne
loopne
test
ds
mov
jge
adc
cvtpi2ps
xor
pop
dec
or
cmpl
shrb
fadd
push
pop
sub
and
inc
pop
mov
sub
fwait
out
test
push
or
push
mov
cmp
pop
out
ret
sub
sti
arpl
pusha
testl
adc
pop
adc
cld
popf
ja
enter
push
mov
sbb
inc
cmp
push
push
push
stc
lods
scas
sarb
mov
mov
cmp
push
imul
shlb
js
or
hlt
imul
mov
dec
les
jae
or
icebp
aaa
movsb
xchg
mov
add
pusha
mov
push
popa
gs
mov
cmp
insb
sbb
pushf
mulb
shlb
call
jl
mov
push
or
jp
push
or
mov
ljmp
lea
in
out
mov
in
push
xchg
xor
pushl
lea
lcall
in
sub
jp
mov
mov
stos
jne
out
insb
sbb
in
mov
or
adcl
shrb
clc
push
push
jp
jns
ret
xchg
xchg
fwait
push
push
adc
aam
sub
test
xchg
int3
mov
and
push
test
fisubs
lret
sub
sub
movsl
test
mov
vmread
xchg
enter
fistl
inc
push
js
push
or
insl
pop
mov
add
mov
cmc
mov
pop
cs
cli
cmp
sbb
xor
pop
insb
push
push
movzwl
inc
mov
inc
xchg
jle
stc
lock
mov
pushf
jbe
push
pop
jp
adc
pop
cmp
imul
or
push
xchg
cmp
cmp
push
or
fisttpll
dec
pop
mov
xor
loop
aas
or
add
fs
ds
add
sbb
adc
cli
push
stc
push
in
add
add
adc
sbb
je
push
scas
ja
push
inc
cmp
rcr
movb
push
loop
hlt
or
cmp
adc
push
inc
stos
lods
cmpsb
in
adc
stc
inc
mov
jl
mov
les
add
cmp
sub
outsl
lret
sbb
add
jle
adcl
pop
pop
mov
sti
rep
movsw
push
pushf
lock
cld
movsb
mov
push
inc
jl
mov
adc
ljmp
nop
fadd
mov
inc
mov
adc
movb
pop
push
lea
cmpb
testl
adc
push
push
mov
sbb
sbb
sbb
repnz
test
pop
movsbl
xor
outsb
mov
push
push
or
jb
repnz
out
shlb
jbe
push
cld
je
ret
inc
cwtl
jnp
push
sbb
sbbb
or
mov
sub
bound
mov
icebp
cmpsl
inc
mov
lods
sbbl
jae
jge
sarb
movl
pushf
xchg
and
or
push
adc
push
cmp
xlat
pop
add
sub
xchg
push
xor
xor
popf
inc
push
es
add
filds
fwait
push
and
mov
andb
push
jb
or
lock
lock
lcall
or
dec
scas
or
cmp
inc
xchg
push
or
in
movsb
insl
add
mov
adc
push
add
in
in
add
push
sti
in
in
or
or
jnp
jae
jae
or
jbe
jmp
or
addr16
jae
por
jmp
adc
pop
adc
push
jae
jae
adc
dec
adc
dec
adc
aas
jae
jae
pop
jmp
sbb
xor
jmp
jae
jae
sbb
es
and
pop
jae
jae
pop
jmp
and
or
jmp
lea
jne
rol
lds
mov
push
sbb
ds
daa
mov
cmp
jb
push
jp
repz
orb
iret
repz
mov
cmp
repz
rcr
fucom
iret
repz
out
icebp
idiv
add
add
jns
out
push
and
sub
out
cmp
add
add
push
pop
or
and
lcall
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
pop
jne
test
sbbb
jo
adcl
mov
std
xchg
jo
hlt
addl
mov
cmpb
sub
xor
cmp
jle
mov
filds
mov
test
pop
mov
js
xor
push
leave
ret
jae
sub
enter
ret
and
xor
jg
mov
dec
or
test
xchg
cmpsb
cmp
sub
out
and
mov
aaa
mov
inc
cmp
or
std
mov
xor
push
push
push
push
pop
rorb
loope
sti
or
test
pop
add
mov
sub
or
sbb
and
test
inc
mov
cmp
xor
ffree
lock
xor
rorb
or
add
pop
fldl
ret
sbb
or
sti
pop
xlat
add
push
push
adc
push
inc
enter
xchg
clc
iret
sub
jno
sub
push
sub
adc
xchg
lods
cld
sbb
add
push
out
xor
or
lret
cmp
adc
jne
mov
add
add
inc
xchg
daa
cmp
or
dec
inc
shll
je
mov
int3
in
inc
ja
xor
adc
mov
mov
or
add
xor
pop
jmp
not
bound
ret
mov
sbb
and
stos
fsts
test
cmp
pop
cwtl
es
mov
sbb
lds
test
mov
js
icebp
fmuls
xchg
jp
xchg
loope
push
xchg
xor
mov
adcl
ss
std
cmp
loopne
xchg
pop
lahf
aas
stc
ds
mov
or
push
ss
xchg
mov
mov
mov
or
add
movsb
push
jne
sub
push
sbb
push
cmpb
xor
jne
addl
test
xchg
pop
mov
fistpl
rcr
jne
sbb
jge
or
mov
aas
inc
xlat
jb
xchg
pusha
loopne
cwtl
ror
dec
mov
mov
sub
jno
add
jmp
bound
cmp
add
sub
mov
leave
jno
or
mov
cld
push
mov
je
inc
dec
adc
xor
cltd
cmpsl
lock
cs
lock
clc
adc
into
push
dec
adc
cmp
jbe
mov
push
sub
xchg
or
pop
fwait
adc
adc
push
dec
ljmp
adc
adc
lret
ficomps
repnz
sbb
add
rcr
and
adc
sbb
cmp
push
popl
sub
dec
push
mov
add
jne
mov
push
das
push
jae
mov
insb
cwtl
dec
push
clc
xchg
cmp
or
sbb
rolb
pusha
insl
inc
mov
jl
loopne
xlat
mov
cmp
and
dec
add
lea
sbb
pop
cmp
in
lret
cwtl
outsb
cmpl
jecxz
sub
mov
xchg
jp
add
adc
pushf
jmp
sbb
add
es
mov
test
mov
insl
jge
mov
and
shrb
enter
xchg
jmp
add
shlb
int3
enter
fwait
ljmp
add
repz
xor
and
faddl
push
cmpsb
add
and
jbe
or
push
add
pop
sbb
inc
js
pop
pop
aaa
cmp
jne
outsb
add
add
add
insb
cltd
popa
or
imul
fadd
mov
cmp
inc
adc
push
out
sub
in
testb
sub
xchg
xchg
push
pop
or
fdivl
pop
and
bnd
nop
cld
mov
mov
loopne
cmp
jo
adc
mov
jecxz
sbb
sbb
iret
enter
add
loopne
or
and
loopne
push
dec
leave
xor
repnz
enter
add
enter
xor
pusha
repnz
add
adc
add
sbb
cmp
les
mov
aaa
push
add
pfrcp
pop
push
je
mov
cltd
push
or
pop
xor
add
push
push
mov
dec
or
inc
and
ja
sub
stos
pushl
ljmp
rorb
add
test
test
push
repz
pop
cmp
dec
es
add
cltd
or
inc
fmull
or
lock
cs
cli
and
cmp
add
es
sub
fwait
dec
add
or
subb
xchg
or
pop
jle
mov
les
or
jns
and
jnp
push
sub
sub
xor
subl
test
adc
mov
rorb
add
xor
aad
or
mov
cmpsl
sbb
push
and
sub
xor
pusha
out
or
jge
push
adc
pop
fisttpll
add
xorl
in
add
mov
push
push
mov
movsb
in
xchg
pushf
popf
pop
shr
es
add
dec
lods
movsl
mov
and
sbb
inc
mov
push
or
dec
add
mov
jae
stos
dec
cmp
dec
mov
push
xor
jne
stos
pop
sbb
dec
push
add
cmp
mov
add
pop
xchg
orb
mov
or
adc
sub
xor
out
inc
lods
mov
jl
cli
movsb
push
fcompl
pop
shlb
int
pop
push
cs
jle
les
loopne
cmp
or
jne
inc
adc
aas
inc
jmp
cmp
je
out
cmp
adcl
fisubl
pop
incb
loopne
inc
shrb
push
jge
sub
fdivr
stc
in
adc
xchg
xor
in
xchg
xchg
mov
inc
cs
lock
push
sbb
leave
inc
aad
pop
inc
repnz
sbb
fcompl
out
mov
or
xlat
jno
add
fldt
jg
cmp
or
jbe
adcl
sub
pop
xchg
aas
rcr
jl
ja
movsb
hlt
pop
sqrtps
cmp
rorb
rcrb
pop
faddl
add
pop
and
and
add
inc
xor
xchg
popl
js
pop
sub
addr16
mov
and
mov
jp
xor
aaa
xchg
inc
repnz
mov
lea
pusha
inc
sub
mov
xor
std
pusha
or
push
dec
in
or
test
sbb
or
sub
or
xor
in
xor
sbb
xor
sbbb
mov
add
pop
add
shrl
and
or
xor
pushf
sub
pop
pop
xchg
in
xor
stos
xchg
rorb
xor
shl
inc
add
cmp
xor
idivb
pmulhuw
andb
and
movsb
cmp
pop
mov
jmp
pushf
mov
inc
mov
fs
loopne
test
aaa
and
cmpl
xchg
out
nop
fnstsw
pop
mov
rcrb
pop
int3
movsb
xor
rcl
fcomp
pop
xchg
loopne
or
daa
out
and
test
rclb
cld
dec
test
setge
cmpb
mov
add
lea
push
imul
mov
test
mov
sahf
insl
and
xchg
je
or
jns
jl
and
push
cmp
mov
push
cmp
jl
sub
cwtl
cmp
rorb
dec
mov
outsb
dec
jp
stc
dec
jnp
inc
push
or
sbbl
fstpt
add
subb
fbld
cmpsb
repnz
ficoms
sub
inc
and
pusha
cmpsl
movsb
cmp
xchg
mov
push
pop
jl
jmp
out
push
sbb
int3
lret
xchg
sbb
sub
mov
addr16
clc
sti
cmp
je
or
jge
and
in
mov
push
in
pop
jmp
rcrl
mov
mov
and
in
rcll
sub
fadds
sub
pop
mov
mov
mov
les
sbb
push
fwait
mov
cmp
rcrb
repnz
call
adc
mov
movsb
orl
jecxz
lret
mov
push
pop
cmp
addl
shrb
mov
add
repnz
lds
and
imull
hlt
fisttpl
jno
mov
loope
sbb
lods
jle
mov
dec
insb
sbb
inc
pop
add
pop
shrb
or
lock
dec
xchg
adc
mov
cmp
je
cmp
jne
push
inc
pop
inc
adc
push
xchg
push
sub
xor
int3
leave
sbb
push
push
pusha
pop
xorl
cmp
pop
adc
js
fdivrl
jmp
mov
in
mov
stos
and
pop
or
lock
or
fbld
pop
or
push
cmpl
loope
jp
std
ds
add
jo
inc
nop
ja
dec
or
lock
adc
xchg
pop
and
pop
or
aam
dec
call
pop
gs
and
lods
adc
lds
dec
dec
adc
inc
jmp
add
lea
cwtl
mov
aaa
or
jp
in
jbe
fwait
fwait
add
push
push
jnp
arpl
inc
adc
scas
jecxz
daa
out
in
jge
ss
pop
cmpsl
pop
inc
mov
call
pop
dec
pop
adc
sbb
or
mov
or
dec
aas
jne
push
nop
cmc
aaa
inc
addb
adc
scas
inc
in
jo
sub
pop
xchg
rcrb
jle
sub
xor
jmp
xchg
mov
xor
or
in
sbb
rcll
mov
push
push
imul
ret
jo
push
mov
inc
mov
into
add
or
jmp
mov
adc
mov
loop
cs
js
push
mov
rorl
inc
int
or
jmp
js
and
inc
icebp
xchg
rorl
outsl
xchg
aas
loop
lock
jg
rol
nop
pop
xchg
lds
xchg
push
add
or
pop
mov
cmpb
pop
sbb
adc
ljmp
orl
dec
sbb
push
lods
ficoml
mov
or
into
and
lds
lea
sbb
sub
dec
jge
outsl
cltd
adc
daa
sub
cmp
dec
add
adc
inc
pop
fstl
inc
mov
test
data16
xchg
enter
and
loope
jmp
add
cmc
subl
jp
shlb
xchg
dec
xor
xor
into
sbb
popa
leave
add
or
inc
cmp
sub
adc
adc
xor
mov
push
and
and
sbb
sbb
out
pop
cmpsl
cmp
inc
dec
jbe
mov
adc
mov
push
dec
aaa
rcll
hlt
sub
push
cs
and
icebp
fadd
sbb
jmp
mov
push
sub
xchg
mov
or
iret
cmp
rorb
aam
jae
fisttpll
mov
clc
cmp
add
or
push
jmp
mov
inc
and
enter
popf
add
xor
add
arpl
out
popa
xchg
or
push
adc
pop
sub
pop
test
pop
or
sub
add
sub
ss
or
and
mov
and
hlt
les
pop
or
adc
je
cmp
aaa
xor
loope
rcrl
mov
ret
sti
mov
sbb
jne
dec
and
mov
js
sub
pop
inc
cmp
repz
inc
mov
add
out
and
into
mov
sbb
pop
sub
adc
insb
mov
test
fs
pop
xchg
mov
pop
and
and
sub
jb
js
xlat
add
add
lods
daa
and
in
fsts
pop
arpl
lea
enter
movsl
sbb
orl
mov
leave
mov
push
push
dec
movl
inc
and
or
nop
xor
jge
leave
xchg
and
in
adc
push
pop
jge,pn
idiv
sub
push
fsts
jge
subl
or
pop
xor
in
push
lods
movsl
pop
mov
or
mov
xor
or
or
test
adc
fldz
lock
fcomp
fnstsw
push
add
int3
fstl
sub
pop
fsubr
pop
faddp
fcomp
push
inc
pop
xlat
mov
sub
sbb
dec
adc
addr16
in
sub
mov
add
inc
insb
into
mov
rclb
sub
push
lock
inc
es
lock
jne
insb
cmp
pop
xchg
dec
xchg
hlt
push
adc
cmp
xchg
sub
aam
repnz
inc
push
and
xor
in
and
scas
sub
sub
cmp
incb
fldl
leave
clc
mov
or
mov
fistpl
or
js
ss
xchg
and
pop
cmpsb
push
pop
jecxz
or
or
xor
inc
mov
fcmovb
clc
adc
ficompl
arpl
mov
adc
fdivrl
outsb
in
outsb
imul
add
add
push
cld
fs
jmp
and
insb
cmpsl
jns
push
jl
or
mov
jge
loop
fimuls
enter
popf
cmpsl
jns
pusha
xor
loopne
in
xor
outsl
and
dec
enter
orb
cmp
mov
add
stos
adc
cs
dec
sub
test
lods
lcall
push
jne
inc
xor
mov
mov
mov
cmp
push
les
stos
in
mov
xor
push
pushf
mov
cli
ret
sub
and
sbb
adc
js
test
arpl
jmp
cmp
ret
adc
or
or
adc
mov
adc
jmp
push
mov
inc
or
movsb
xchg
xor
jmp
add
and
or
adc
cmp
sub
sub
pop
shrl
cmp
and
push
rol
or
ja
arpl
ret
sti
and
ss
mov
pop
sub
add
jo
adc
ret
daa
ret
add
or
aaa
insl
add
push
and
out
jmp
cmp
lret
in
sbb
jb
xlat
xor
in
fs
dec
in
xchg
out
jb
adc
or
push
lock
cwtl
loopne
ret
pusha
adc
cmp
pop
movsb
imul
daa
pop
push
icebp
and
push
pop
push
in
imul
lea
inc
fsubr
testb
pop
imul
push
stos
mov
or
mov
push
pop
add
je
pusha
pushf
aam
in
cmp
pop
add
push
loope
jg
aad
mov
mov
pop
adc
push
or
dec
sub
cwtl
sub
inc
push
mov
pop
jbe
popf
add
movsb
es
and
sbb
shrb
adc
addl
pop
lock
notb
inc
adc
nop
call
or
nop
cmp
jne
mov
mov
rcrl
lods
adc
dec
and
dec
cmp
push
in
cmp
ja
dec
sub
xchg
or
or
stos
test
pop
xor
insb
add
inc
movsl
lock
sub
mov
enter
sbb
push
mov
xchg
icebp
jmp
cmp
sbb
scas
cmp
mov
aad
push
and
sub
popf
fsubl
xchg
push
or
mov
xchg
sub
aam
add
fadds
sbb
sbb
mov
pop
lret
mov
mov
inc
das
or
mov
bound
jnp
ficomps
cli
xor
jb
movsl
jg
and
jge
enter
popa
pop
adc
mov
mov
rorl
rorl
push
movb
dec
movsl
leave
xlat
ret
loope
jl
lahf
inc
mov
aaa
jnp
daa
dec
push
ss
push
push
dec
scas
add
push
xchg
or
dec
add
ret
cmp
mov
inc
imul
mov
push
rorb
mov
add
fs
test
sbb
call
sbb
inc
push
cmc
xchg
pop
out
lock
mov
add
out
mov
inc
ret
insl
sbb
add
mov
or
imul
hlt
addr16
adc
loopne
inc
push
and
jb
push
in
aad
push
and
in
in
enter
push
push
sarb
shlb
jl
mov
dec
inc
pop
faddl
arpl
dec
in
inc
push
sub
jb
prefetcht0
ret
push
outsl
pusha
adc
ret
pop
jp
add
in
inc
sahf
stos
push
sti
inc
in
lock
adc
inc
sete
push
inc
push
pop
insl
and
js
or
xor
xchg
lock
mov
jecxz
daa
sahf
jmp
dec
stos
mov
mov
sub
sbb
mov
or
dec
pop
push
movsb
in
adc
shll
push
adc
mov
sbb
fisubrl
push
ficompl
test
aas
repz
clc
push
cmp
scas
add
jbe
fsubl
daa
imul
sub
call
jmp
xor
test
push
addl
xlat
insl
dec
loop
xchg
sub
imul
xchg
xchg
aam
or
leave
lret
xor
xor
sahf
in
bound
mov
push
fincstp
aas
lock
inc
or
sub
xor
mov
sbb
pop
push
call
arpl
leave
lods
push
cmp
pusha
inc
in
out
pushf
add
sub
mov
addb
sbb
aam
inc
add
add
notb
rcrl
jbe
or
add
xchg
add
sub
and
jo
push
pop
inc
pusha
mov
push
daa
inc
std
or
iret
xchg
or
mov
jge
dec
pop
mov
or
rol
nop
and
out
adc
je
in
push
in
shrl
insb
mov
in
movsl
in
sub
add
idiv
xor
add
push
dec
cmp
test
data16
icebp
push
push
je
cmpsb
or
call
icebp
mov
sbb
ret
jge
lcall
inc
xor
movsb
bound
mov
mov
xor
push
repz
inc
and
pop
fiaddl
sbb
lock
mov
xchg
sbb
mov
stos
or
push
inc
rcll
data16
lcall
sub
pop
pop
add
add
push
push
andl
xchg
mov
mov
push
addr16
pop
jo
pop
push
adc
or
jae
inc
bound
mov
push
shlb
push
jno
inc
add
xchg
jae
js
or
dec
cmpsb
xor
fadds
push
adc
stos
and
push
mov
mov
shrb
jge
cld
dec
je
stos
mov
dec
shll
in
insb
dec
cltd
lcall
and
pop
xor
and
jg
aam
jb
jb
jae
adc
es
add
movsl
and
or
lret
sbb
and
movsl
add
in
adc
addl
adc
push
or
xor
mov
pop
repnz
xchg
pop
incb
or
xchg
inc
pop
adcb
jg
int3
inc
lcall
mov
testb
sub
out
lea
push
fsubl
imulb
daa
je
in
test
and
push
enter
test
or
fcoml
mov
mov
into
cs
es
xchg
call
push
adc
das
jp
push
pusha
into
inc
pop
repz
xchg
mov
sub
hlt
cmp
inc
pop
pop
lcall
cmp
add
scas
mov
enter
or
lret
mov
js
aam
test
repnz
or
dec
or
or
stos
jae
pop
inc
lret
mov
jne
pushf
mov
enter
jmp
test
push
fdivrs
or
mov
xor
dec
clc
test
push
sti
mov
or
cmp
inc
into
ficomps
mov
lea
xchg
into
mov
add
imul
out
sbb
jmp
outsl
inc
or
sub
sbb
out
adc
js
outsb
sti
xchg
add
pop
mov
or
mov
and
and
pusha
mov
add
add
je
andl
push
xchg
aad
orl
pop
jo
pop
cmp
push
xor
push
outsl
or
add
sub
or
pop
ret
roll
subb
inc
dec
push
pop
xchg
data16
sbb
jmp
cmp
sub
mov
xchg
sbbb
pop
push
xchg
xor
sbb
push
inc
and
adc
pop
popl
pop
ficomps
xor
add
out
push
add
or
push
ds
in
dec
in
jb
or
enter
xchg
inc
or
cmpb
aad
decb
int3
or
jle
pop
jmp
jb
test
mov
inc
std
adc
xchg
push
les
push
jge
pop
rcrl
fisttpl
fmuls
or
mov
push
and
dec
in
jmp
fmuls
mov
cmp
ds
push
or
les
cmpsb
in
and
std
adc
xor
mov
and
and
sbb
add
call
test
loopne
fs
dec
dec
push
push
rorb
je
pop
popl
cmp
test
and
rorl
xor
es
push
mov
fcomps
or
and
add
cli
sbb
mov
lock
cwtl
cmp
or
js
lcall
daa
les
mov
xchg
mov
loope
sub
jl
and
sbbl
lds
lea
inc
lret
dec
and
loopne
test
sbb
xchg
mov
lods
mov
stos
das
filds
mov
in
movzbl
xchg
std
dec
pop
jno
dec
inc
ss
adc
mov
daa
xor
cmp
pop
inc
fistl
repnz
jl
mov
fst
mov
inc
test
sub
imul
sub
pop
lock
push
push
inc
add
mov
pop
and
movsl
mov
sbb
js
or
aam
mov
add
insb
xchg
rcll
or
push
adc
adc
adc
std
jg
mov
mov
bound
call
inc
push
dec
and
jmp
or
or
loop
xorb
insb
adc
lret
jb
or
orb
repnz
jmp
pop
rorb
push
aaa
enter
add
fadds
mov
out
push
je
or
je
xchg
mov
dec
loop
cmpl
xchg
xor
add
ss
jne
mov
clc
and
add
or
and
mov
inc
pop
lcall
call
dec
pushf
sub
xor
lods
in
mov
pop
mov
dec
add
cmpsl
fcomps
std
sub
xlat
push
out
pushf
gs
rclb
fistps
test
mov
loope
sarl
add
cmc
push
pusha
stos
je
xchg
aam
push
mov
or
sbb
pop
inc
add
mov
std
fwait
shrl
pop
les
movsb
xor
int3
arpl
lahf
cmp
mov
add
mov
arpl
das
sbbl
mov
dec
js
push
push
or
movsb
mov
mov
push
xchg
outsl
xchg
push
jmp
inc
loopne
cmp
sbb
mov
test
mov
fwait
jp
mov
sub
xchg
mov
fs
mov
push
cld
test
or
dec
xchg
xchg
addr16
jle
testb
mov
hlt
pusha
xchg
aam
or
xchg
pushf
in
je
push
ja
cmp
fsubrl
sarb
dec
int
push
jae
mov
fcompl
push
or
and
lods
push
push
mov
aaa
lods
out
or
and
cmp
push
or
xchg
rep
mov
cmp
sbb
or
or
rolb
mov
jle
jp
or
lret
inc
mov
dec
adc
fildll
sahf
xchg
out
incb
adc
xor
and
cmp
and
movsl
lret
aam
dec
push
jecxz
jbe
enter
xchg
cltd
lds
pop
mov
cmpsl
jge
mov
int3
out
sbb
inc
or
loopne
aad
add
pop
cmp
pop
push
sbb
popa
dec
jnp
hlt
adc
shl
sbb
loopne
jmp
push
sbb
add
mov
mov
ror
test
sbb
add
lock
inc
pusha
lcall
ljmp
sarb
jl
push
mov
scas
mov
enter
lods
add
sbb
xchg
xor
xor
xor
or
mov
cmp
fcomip
loop
push
insb
cwtl
dec
cs
sarl
pop
out
sbb
ljmp
loope
lock
cltd
data16
inc
cltd
inc
cmpsb
sbb
js
movsl
xor
notb
lock
inc
in
sbb
cmp
subb
adc
xor
mov
fsubrp
mov
push
imul
jb
cs
pop
push
inc
sbb
shrb
xchg
jns
mov
je
inc
test
in
push
out
ret
in
pop
inc
mov
or
push
add
or
das
pop
imul
pop
push
popa
sub
jne
in
adc
hlt
lds
cmp
dec
sub
inc
xchg
dec
insb
cmp
cli
mov
ret
mov
imul
push
adc
push
insl
movsl
pushf
xor
hlt
mov
mov
cmp
sti
and
iret
leave
call
xor
scas
fcomip
dec
dec
add
adcb
test
push
cmp
xor
addr16
xor
stos
loopne
and
or
push
mov
rolb
mov
lea
xor
and
fwait
imul
cmp
fwait
push
xor
push
add
add
cmpl
je
imul
dec
movsb
pop
add
jl
pop
cmp
outsl
jbe
pop
sub
or
dec
push
leave
dec
test
and
sub
jl
mov
aad
inc
inc
stos
popa
insl
test
sub
dec
add
jo
sbb
mov
dec
sete
clc
sub
jne
int3
mov
aam
dec
xchg
subl
mov
mov
or
mov
and
mov
notb
rclb
inc
sub
or
daa
test
jae
sub
and
pop
add
mov
cmc
mov
pop
ret
push
pop
js
jecxz
xchg
test
xchg
or
je
or
or
inc
push
cmpsb
mov
cmp
or
ret
jg
mov
les
mov
fidivl
push
add
pusha
lea
in
adc
pop
cmpsl
mov
push
pop
in
pop
adc
mov
xchg
sub
dec
hlt
lods
mov
hlt
cmp
jge
fsubs
push
jg
pop
cmp
jle
ss
out
rcrb
decl
pop
mov
test
sub
jne
dec
in
push
inc
inc
jmp
inc
fs
sub
lret
mov
hlt
inc
lret
mov
ret
test
xor
dec
jmp
test
inc
cld
sahf
or
out
repnz
outsb
or
sub
xor
aam
std
xlat
xchg
scas
arpl
in
push
shlb
push
pop
fdivrl
test
in
iret
in
jecxz
sahf
add
jl
push
adc
imul
and
adc
fs
dec
aaa
aam
pop
in
mov
inc
pop
and
in
inc
and
pop
pusha
jbe
adc
jne
push
push
int
xchg
mov
sub
sub
movsb
sbb
adcb
mov
push
inc
mov
mov
push
movsb
push
jne
push
lods
inc
lret
jmp
ret
adcb
sbb
add
in
loopne
adc
test
mov
insl
stc
shrb
les
je
sub
fmuls
and
in
out
and
adc
mov
and
jo
cmc
sbb
and
arpl
inc
in
add
mov
clc
adc
or
je
mov
test
imul
fwait
outsl
cld
js
push
jle
dec
cs
pop
cs
mov
jo
test
stc
clc
jne
inc
inc
arpl
cmp
out
cmc
push
mov
pop
loopne
or
pop
push
sbb
and
call
adc
or
xchg
adc
sub
adc
out
imul
add
mov
orl
sbb
lock
movl
add
subb
sbb
inc
inc
into
in
inc
push
push
cwtl
call
xchg
test
mov
add
mov
add
add
imul
out
push
push
mov
in
mov
pop
mov
outsb
jae
cmp
add
repnz
mov
mov
add
mov
and
adc
mov
sub
outsb
dec
ret
cmc
or
call
mov
xor
loope
ljmp
aas
je
xchg
push
or
mov
push
push
inc
inc
xor
ss
cltd
test
cmc
mov
cmp
jecxz
iret
pop
test
imul
adc
or
shlb
push
sub
mov
call
cmp
push
add
xchg
popa
dec
hlt
or
cmp
push
in
out
movsl
pushf
mov
or
push
mov
push
mov
inc
in
movsb
test
inc
and
pop
jge
scas
hlt
int
lea
cmp
in
add
or
mov
sti
fdiv
and
test
mov
cs
ss
jl
mov
nop
filds
sbb
rorb
jne
je
out
fst
xor
shr
xor
rorb
cli
or
cwtl
add
enter
fs
jnp
lock
mov
test
xchg
push
push
out
mov
shr
cmp
jbe
add
jmp
add
mov
test
xor
pop
xchg
fadd
pop
and
sar
dec
or
inc
dec
and
jl
xchg
adc
or
movsb
sub
popf
test
loope
and
add
mov
push
test
ret
inc
roll
add
inc
sbb
sbb
or
cli
push
push
mov
xchg
mov
imul
out
fcompl
dec
add
mov
add
shll
int3
jo
push
or
hlt
shl
and
jnp
lea
add
jb
pop
mov
fdivs
sub
or
lods
cmp
jecxz
dec
sbb
sarb
loopne
mov
inc
jb
mov
outsb
cmp
adc
pop
or
bound
js
xor
outsb
push
test
ljmp
xchg
mul
dec
jg
adc
ret
mov
add
je
or
test
ret
jecxz
jmp
mov
fisubs
mov
insl
repnz
sbb
lock
jbe
lea
popf
xor
fs
cmpsb
jno
mov
sbb
ljmp
pop
pop
push
stc
mov
je
add
jmp
inc
mov
cmp
jge
cmp
add
add
mov
sbb
dec
xor
stos
cmp
xchg
sub
and
add
adc
addb
repz
in
adc
addr16
outsb
insb
add
push
mov
jge
add
and
push
jecxz
dec
push
mov
adc
jecxz
pushf
jbe
sbb
or
and
cmp
push
inc
pop
jmp
sbb
or
cmp
inc
sub
and
cs
bound
xchg
je
cmp
cwtl
pop
add
add
inc
xor
add
adc
push
mov
add
fisubl
inc
pop
add
or
push
push
test
outsb
leave
lock
or
lods
dec
or
add
nop
sub
dec
clc
and
repz
fmuls
inc
sub
lods
dec
xchg
je
ljmp
push
test
mov
xchg
push
adc
add
test
fs
jp
pop
jp
mov
test
sbb
or
mov
push
push
aaa
loop
or
jo
adc
xorl
sub
mov
mov
in
push
sub
push
adc
push
faddp
pop
adc
xchg
xor
jne
cmpsb
xor
or
frstor
cltd
out
jmp
and
movsb
adc
dec
aad
or
push
push
shll
and
aad
push
sub
push
adc
aad
adc
pop
jne
adc
pop
cwtl
sub
movsl
addr16
insb
imul
test
cmp
dec
xchg
in
mov
and
leave
xor
add
pushf
mov
fiaddl
lcall
push
dec
xchg
outsb
mov
or
dec
ljmp
sub
ljmp
push
out
aaa
je
fcoml
add
mov
adc
or
push
cwtl
enter
adc
popf
sbb
mov
xchg
mov
andb
mov
adc
popf
add
les
movsb
or
sub
ja
sbb
add
and
and
inc
test
push
add
sar
pop
ss
push
pop
pop
cmp
adc
push
push
sub
or
les
es
jle
mov
jle
and
adcl
jns
cmp
xor
xor
mov
or
mov
or
push
push
cwtl
push
xchg
push
cwtl
sub
mov
add
cltd
dec
add
push
jbe
mov
fcmovbe
push
sub
in
xchg
stos
cld
daa
out
and
or
sahf
popf
daa
mov
mov
inc
sbb
sbb
pop
cs
cmpsb
push
cmp
mov
add
mov
sub
or
mov
inc
cmp
inc
enter
and
fisubrl
cmp
mov
add
hlt
rclb
pop
and
add
pop
jne
dec
and
cltd
xchg
cli
jge
push
and
cmpsl
adc
cmp
jmp
sbb
jo
fs
jbe
push
push
push
adc
das
and
fmull
aad
test
repnz
cmp
movsb
mov
jg
sub
test
dec
pushl
lods
mull
mov
adc
stos
push
pop
in
sub
cmpsl
in
lods
and
sub
xor
mov
xchg
adc
loopne
or
mov
outsb
add
inc
push
or
mov
xor
mov
inc
adc
xor
add
call
or
jo
nop
adc
mov
xchg
jg
aas
scas
xchg
sub
jge
xchg
mov
cmp
jne
fmuls
fmuls
sbb
xlat
xchg
call
sub
xchg
fiaddl
sub
dec
ud2
pop
fisubs
mov
dec
cwtl
add
lods
test
gs
cli
xor
jbe
andl
popl
addr16
lock
xchg
test
cmpb
stos
or
loop
dec
mov
pop
cltd
les
insb
mov
movsb
loop
stc
fs
push
scas
adc
xchg
cs
rorb
push
popa
push
in
cltd
movsl
push
xor
mov
jo
mov
mov
lret
in
sbb
cmp
xchg
inc
repnz
insl
xchg
push
mov
call
add
push
sbb
push
insb
fs
aad
sub
cmp
pushf
fst
repz
sbb
pop
adc
push
or
and
data16
sbb
mov
jmp
nop
xlat
xor
inc
lods
xchg
lahf
nop
dec
imul
nop
jmp
iret
sbb
sbb
stc
xchg
xor
mov
xor
pop
bound
stos
fldz
cli
dec
adc
push
pushf
fcompl
jg
movsl
push
outsb
mov
add
sub
psubsb
add
sub
xchg
mov
je
outsb
or
ljmp
adc
fdivrl
out
adc
adc
xor
sub
in
cmp
les
movsl
pop
adc
add
xor
shrb
dec
inc
add
scas
add
fdivrs
gs
push
pop
lea
roll
push
popa
jmp
sahf
in
icebp
sbb
dec
in
loop
sarb
sbb
jg
pop
dec
sub
xchg
dec
popl
add
or
and
push
mov
inc
and
push
inc
inc
and
repnz
mov
jle
push
add
push
aad
jmp
sub
sub
inc
lea
push
sub
push
add
inc
mov
and
push
adc
mov
xchg
aam
cs
inc
and
aam
xor
shrl
mov
nop
cld
in
cmp
add
cld
cmpsb
or
xchg
sub
add
cmp
popa
add
ret
push
or
jl
adc
xor
add
dec
mov
adc
test
xorb
je
adc
sub
daa
ret
movsl
aas
dec
dec
clc
xchg
and
inc
jbe
push
bound
mov
add
sbb
cmp
push
xor
xchg
or
cmp
jns
bound
inc
in
adc
lcall
mov
inc
mov
push
push
lock
and
xchg
jp
cmpsb
or
ret
lock
pop
daa
leave
xor
jno
in
fstps
and
mov
push
movsl
push
mov
or
inc
les
jnp
adc
push
adc
pushf
out
adc
pop
std
sbb
mov
mov
pop
orb
adc
jmp
loope
mov
mov
arpl
pop
mov
jne
inc
sbb
push
rorb
and
popa
aam
push
test
jo
dec
add
and
shlb
push
arpl
cld
pop
xchg
xchg
pushf
push
inc
or
sub
pusha
pop
pushf
push
and
hlt
fdivrl
shrb
test
shlb
test
and
xchg
int3
add
pop
inc
mov
xchg
shrb
sbb
subl
lock
inc
je
cld
push
inc
xlat
pop
cmp
cli
imul
addr16
inc
push
hlt
mov
mov
inc
push
xor
mov
mov
inc
push
sti
pop
imul
lret
movsb
pop
les
rcrl
xchg
jne
cmpb
insb
pop
test
or
adc
dec
ja
lret
jne
push
loopne
sbb
add
jle
out
notl
pushf
inc
push
test
dec
mov
jo
jb
sbb
fcomp
aas
pop
fs
sbbl
clc
sbb
jbe
adc
and
mov
enter
push
pushl
stos
clc
add
jo
out
inc
loop
jno
mov
test
xchg
push
jl
push
in
andl
cltd
cmpsb
cmp
or
cwtl
add
je
mov
cs
addl
xchg
leave
enter
mov
push
scas
add
sbb
jbe
loopne
jo
xchg
jmp
inc
sti
add
xchg
js
jmp
inc
sub
xchg
sub
daa
daa
pop
adc
sbb
xor
cs
lods
fs
add
jne
mov
dec
mov
addl
mov
adc
je
push
cwtl
sub
adc
adc
cmp
add
push
push
stc
pusha
mov
dec
or
or
sbb
mov
subb
mov
fmuls
cmp
je
mov
push
add
push
add
push
int3
xchg
add
shlb
add
pusha
pop
sbb
jmp
push
sarb
icebp
lret
rorb
dec
jns
mov
idivb
call
imul
mov
inc
gs
adc
push
adc
xor
adc
lock
sbb
cmp
divb
loopne
frstor
pusha
data16
pop
cmpsb
cmp
push
sub
adc
sub
xor
sub
into
pop
pop
rclb
pop
cs
test
or
mov
add
mov
in
in
ds
sbb
das
adc
clc
add
push
pop
imul
int
stos
jno
jge
pop
mov
cmp
xchg
stos
cmp
mov
insb
ss
push
ret
test
test
cli
xchg
stos
scas
rorl
out
pop
mov
sbb
add
add
xor
or
int3
mov
adc
add
push
inc
lcall
and
pop
cld
and
dec
and
xlat
cmp
faddl
add
in
and
cmp
push
adc
jg
and
les
add
push
pop
dec
jnp
fcmovnbe
pop
inc
stos
jecxz
or
sarb
inc
jmp
dec
pusha
mov
rol
mov
ror
xor
cli
ljmp
xor
sub
jnp
xor
shr
xor
add
jo
mov
ljmp
cmp
daa
mov
ret
jae
ljmp
not
and
xor
add
add
shrl
jge
add
mov
stos
or
push
cwtl
repnz
cli
fisubrs
testl
cli
and
and
xchg
push
aaa
adc
rcl
adc
xor
xchg
fs
movsl
rcrb
mov
fisttpll
push
or
xlat
ret
inc
rol
rcl
add
add
add
xor
fsubr
xor
dec
in
aam
call
push
xor
sub
ljmp
rol
rol
out
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
punpckldq
sbb
adc
add
adc
mov
pop
aaa
mov
shll
cs
cltd
lcall
loopne
loopne
dec
in
imul
xor
loopne
cmp
and
cmp
aam
mov
pusha
xor
push
movsl
mov
cmp
cmp
jge
sbb
fmull
in
push
xor
and
and
imul
or
lods
or
xor
jo
add
adc
rolb
loop
cmp
xchg
sub
push
jo
ficoms
rcr
mov
mov
add
pop
pop
cmp
adc
push
loop
mov
add
add
push
inc
fadds
pop
jbe
call
imul
fisubl
add
insb
jp
push
and
add
gs
fsubrs
inc
lcall
nop
cmpsb
call
int3
pop
lret
inc
mov
lds
jo
add
shll
cli
stos
adcb
inc
aam
cmp
dec
shll
sub
lcall
rclb
xchg
fldz
rolb
inc
aaa
cli
push
push
or
xor
xor
rolb
lret
rorb
imul
xchg
sub
pusha
lahf
jo
add
lcall
add
orb
sahf
dec
out
in
fs
push
inc
lcall
xchg
pop
mov
pusha
add
orl
sahf
push
insb
push
xorb
push
pop
xor
dec
cmp
jo
dec
xchg
or
mov
rcrb
sahf
push
add
cmpsb
repnz
or
nop
inc
xchg
pop
es
lcall
add
js
mov
movsl
or
rorb
adcl
dec
sahf
fs
jno
arpl
in
subl
or
dec
and
icebp
stc
stc
inc
cmp
fsts
das
add
xchg
inc
mov
sbb
and
dec
fcom
xor
rorl
adc
adc
sbb
jo
adc
in
add
and
xor
pop
inc
orb
addb
mov
out
pop
add
sub
mov
pop
add
push
lcall
jb
lock
icebp
pop
mov
popf
add
sub
movsb
push
push
mov
pop
xor
js
sub
decl
sub
sarb
ret
mov
or
or
mov
dec
clc
adc
adc
les
popf
movb
mov
sub
push
xor
loopne
lea
jmp
lea
push
sub
dec
repz
jecxz
mov
inc
fdivrl
pop
dec
jne
pop
xchg
loope
mov
cld
adc
mov
fdivr
mov
or
cmp
jbe
or
mov
mov
inc
or
add
jae
dec
sub
push
pop
fadds
rep
or
push
mov
ljmp
outsb
mov
dec
pusha
outsl
pop
loopne
ror
insb
stos
call
or
xchg
ljmp
adc
mov
mov
and
rorb
jg
insl
cmp
jb
cmp
ja
lcall
xor
inc
aaa
popa
dec
pop
cmp
push
push
in
xorb
mov
je
add
push
mov
pop
mov
rorb
add
pop
push
inc
shlb
cs
xchg
sbb
jge
sbb
das
add
adc
dec
add
je
mov
mov
imul
das
je
or
xchg
add
fsubs
jbe
lock
jne
pop
sbb
outsl
call
inc
lea
inc
mov
sarb
fiadds
dec
xor
push
movsb
jne
jmp
rolb
aaa
test
cld
sub
sbb
cli
test
add
stc
inc
cmp
fs
dec
inc
jo
insb
adc
or
or
push
jg
pop
mov
xchg
mov
pop
mov
pop
cwtl
stos
fstps
add
clc
lahf
lods
jns
lock
aad
fsubr
mov
lea
adc
xor
cmp
lock
and
or
pop
testb
xorl
fwait
rcrb
cmp
notb
cwtl
cli
mov
jne
dec
sub
cld
shlb
jb
or
ja
pushf
push
inc
scas
subb
mov
push
push
add
push
xchg
cld
mov
or
xchg
cmpsb
inc
mov
popa
loop
jne
mov
add
addl
incl
push
movzwl
data16
sbb
xor
jb
cmp
dec
rcrb
add
fsubr
adc
aas
les
and
and
dec
hlt
xor
mov
fwait
adc
test
cmp
rolb
pusha
pop
adc
test
mov
or
add
pop
jae
mov
jmp
dec
shrb
movsb
push
xor
subb
sub
push
inc
sbb
cmp
push
inc
call
gs
sbb
adc
dec
mov
fstpt
or
jge
and
jle
es
lcall
push
sub
and
pop
cmp
jl
pop
jle
imul
sub
bound
jp
jb
jbe
mov
sbb
test
fwait
and
or
je,pn
shl
out
inc
jne
je
outsb
and
orb
sub
ljmp
add
into
cmp
add
xchg
call
cmp
inc
push
push
popa
fidivrs
jno
mov
inc
and
je
pop
sbb
inc
test
sbb
jae
add
inc
xchg
mov
jbe
call
inc
lahf
xchg
test
stos
es
pop
add
push
mov
xchg
pop
rcl
sub
cwtl
mov
pop
mov
loopne
push
sub
out
mov
sbb
out
jmp
test
or
cli
or
bound
js
cmp
sbb
jb
test
xor
mov
lods
push
dec
xchg
sbb
ret
sbb
imul
sub
xor
inc
call
push
inc
lea
jno
sbb
xor
add
pop
cld
das
mov
mov
cmpl
push
mov
xor
mov
or
xchg
sbb
imul
xor
and
dec
pop
jle
stos
dec
daa
mov
add
xchg
iret
outsb
mov
arpl
dec
fadds
dec
shrl
inc
and
jae
mov
insl
and
cmp
inc
cmp
adc
jo
fldenv
sti
mov
subl
jae
mov
sbb
add
arpl
or
add
inc
ja
cmp
and
mov
inc
xchg
pop
pusha
test
push
add
inc
inc
lods
sbb
inc
call
mov
es
add
scas
jl
add
cmp
les
push
sbb
sub
shlb
scas
push
or
movl
sahf
push
jg
lcall
popa
hlt
cld
rcrl
rorb
cli
test
lret
dec
clc
or
roll
decl
faddl
clc
or
xorl
aaa
rep
sarl
add
pusha
sti
pusha
jb
cs
mov
cmp
ret
daa
add
inc
sbb
arpl
mov
filds
je
jns
mov
and
stos
pushl
jno
shrb
cwtl
cmp
inc
or
push
mov
dec
mov
adc
nop
add
xchg
orl
jb
xor
cmp
push
xor
mov
mov
lahf
jne
push
jb
cwtl
addl
xchg
xchg
sbb
sbb
out
jae
or
jne
xorl
leave
mov
cmp
or
nop
mov
add
xchg
push
and
je
jo
and
pop
inc
xorb
mov
call
xchg
idivb
faddp
inc
add
push
push
repz
rclb
xchg
dec
roll
aam
push
or
clc
mov
xor
sbb
mov
loopne
sbb
mov
in
sub
pop
aad
in
and
dec
mov
adc
loope
xchg
push
push
fdivl
rclb
jbe
rorb
add
fsubrl
sbb
push
push
das
bound
xorl
jbe
mov
inc
not
fldcw
sub
mov
lock
stos
mov
push
mov
xor
cmp
je
clc
ja
push
inc
cmp
inc
mov
inc
inc
inc
data16
and
jge
pop
and
inc
inc
fdivs
sbb
inc
lods
cmp
mov
add
adc
jo
sarl
rorb
andl
inc
fsubr
cmp
ljmp
push
push
je
push
and
inc
ficoms
leave
inc
inc
in
fs
push
xchg
fsubrs
jl
sub
cmp
cmp
jge
xor
inc
pushl
cmp
subb
inc
add
popa
adc
inc
cli
fnstsw
cld
and
jne
les
aam
adc
mov
push
loopne
pop
cmp
cmpsb
or
ret
jp
call
scas
dec
mov
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
push
fchs
xor
cmpl
cs
add
cmp
call
add
andl
ljmp
sahf
lods
lahf
sbb
cmp
ret
sti
sub
lds
dec
popa
in
adc
or
and
mov
dec
push
shrl
pop
aaa
push
mov
or
clc
mov
mov
add
jne
cmpsb
sub
outsl
inc
mov
test
and
out
adc
xor
jae
pop
cmp
inc
mov
mov
mov
in
or
psubusb
push
cmp
adc
sarl
mov
rcll
imul
movsb
sub
xor
push
cmp
add
ja
mov
or
mov
xchg
dec
sub
xor
lret
in
mov
add
sub
out
mov
int3
ss
xchg
xchg
popf
xchg
mov
push
scas
and
mov
jnp
mov
sub
adc
data16
xchg
lods
addr16
mov
fimuls
sub
add
jne
aad
lock
data16
ret
std
lods
sbb
push
fistpl
shrl
lock
jb
rol
push
and
jle
xchg
sbb
push
int3
sbb
jmp
sbbl
push
xor
inc
sbb
fisubl
loope
xchg
inc
push
pushf
inc
add
mov
dec
sub
inc
adc
add
pop
xlat
sahf
vmwrite
or
add
pop
ret
add
add
or
cmpl
adc
daa
xor
call
pop
push
cli
xor
pop
fimull
jne
sbb
dec
dec
sbb
mov
sub
test
fdivrs
je
lock
push
movzwl
mov
mov
sbb
mov
xchg
mov
popf
cmc
jnp
jne
jne
lret
xor
and
xor
call
push
add
cmpsb
hlt
xchg
mov
xchg
les
shll
rol
and
cmp
jmp
lods
sub
inc
test
loopne
insl
cmp
mov
cmp
push
pop
adc
or
test
inc
data16
push
in
dec
loop
pop
fsubl
in
pop
lods
sbb
ret
jmp
sub
mov
roll
mov
inc
add
fisubl
or
sbb
js
sub
or
data16
mulb
cwtl
sub
daa
repnz
lock
les
movsl
popf
add
enter
sbb
mov
adc
scas
insb
inc
sbb
mov
xor
sahf
in
ret
movsb
mov
cmp
inc
dec
add
xchg
movsb
add
cmp
cli
cmpsl
xchg
mov
addb
mov
pop
stc
push
push
add
rcr
movsb
inc
sahf
inc
add
loopne
xchg
pusha
pop
movsb
mov
hlt
xorl
imul
xor
or
xchg
and
negb
mov
cmp
arpl
popa
adc
pop
xor
loope
or
scas
dec
cld
les
in
sbb
jbe
test
je
push
and
jnp
fstl
pop
pop
sbb
push
cwtl
inc
inc
pop
loop
inc
cmovns
add
jl
and
mov
faddl
les
leave
inc
adc
mov
mov
add
clc
dec
xor
pop
sbb
push
adc
dec
sbb
mov
xor
cmp
and
or
lea
mov
movl
aad
outsl
push
sbb
fiaddl
ja
adc
inc
loopne
or
add
sbb
dec
adc
pop
mov
fisubrs
mov
lds
xor
loop
and
int
inc
mov
add
mov
pop
pop
mov
jmp
push
push
mov
add
pop
pop
jb
lock
xor
xchg
daa
lods
scas
or
sub
stos
mov
subb
inc
das
loop
cmc
push
mov
shlb
or
push
jae
mov
xchg
pop
fcmovb
testl
js
and
adc
add
dec
sti
movsb
mov
and
mov
insb
fs
lds
mov
in
mov
mov
dec
adc
and
xor
xor
dec
xor
pop
lods
sti
jns
rorb
pusha
ljmp
add
dec
inc
shll
xor
pop
dec
rcl
and
fstps
pop
mov
sbb
lcall
orb
add
dec
iret
roll
and
sub
das
dec
adc
inc
mov
push
mov
cmp
dec
push
push
sbb
rolb
mov
loopne
add
sbb
and
sub
lods
das
pop
mov
add
inc
cmp
sub
cmp
fisttpl
sbb
test
push
xlat
push
mov
and
add
adc
cmp
ss
mov
loopne
cmp
and
jle
inc
cmp
es
mov
in
pop
push
loope
add
mov
fbld
jbe
ja
jmp
insb
xbegin
add
and
test
xor
inc
cmpl
xchg
mov
add
ret
pop
xor
repnz
movsb
cmp
sbb
loope
ror
mov
mov
outsl
cmp
and
xor
cmp
sbb
cld
xor
gs
dec
dec
mov
arpl
mov
xor
push
in
ja
test
jge
and
mov
and
mov
test
and
sbb
xor
mov
sub
inc
in
and
jae
jb
lods
inc
andl
cmp
inc
aad
ss
sub
mov
jmp
sub
out
inc
test
mov
ss
into
or
lcall
add
mov
mov
sbb
pop
mov
inc
test
add
pop
push
imul
test
push
test
cmpb
addl
mov
mov
pop
pop
js
mov
mov
cmc
dec
push
mov
popf
ljmp
xchg
inc
aaa
into
sub
inc
add
int3
pop
stc
out
fistps
cmp
push
push
pusha
pop
daa
push
push
add
fst
adc
xor
push
sbb
loop
mov
cltd
adc
loopne
and
in
sahf
loope
mov
dec
and
imulb
add
sub
insb
adc
sub
add
hlt
je
cmp
jbe
lds
sbb
shll
xchg
shrb
dec
xorl
xchg
enter
adc
xchg
push
jp
mov
jbe
cmp
insl
xor
and
sub
push
push
neg
mov
insb
iret
mov
jnp
test
repz
pushf
xchg
lods
jmp
mov
enter
mov
stc
sbb
orl
clc
test
insb
push
push
addb
insl
les
push
dec
fisubrs
sbbl
add
add
or
dec
add
push
add
sub
xor
mov
inc
dec
sub
cmp
push
cmp
fs
cmp
lcall
stos
dec
lods
cmpb
push
jne
pop
fsubs
ret
out
lahf
movsb
mov
pop
pop
mov
je
popa
push
push
mov
jns
rorb
fs
mov
jbe
repz
xor
pushf
adc
jae
push
rcr
sub
ret
jp
adc
jmp
inc
jb
js
dec
fmull
stc
mov
inc
xor
scas
or
pop
loop
and
or
aam
push
std
inc
cmp
dec
nop
mov
je
pop
rorl
sbb
daa
push
add
push
cmp
mov
fisttps
push
sub
outsl
and
loope
daa
fisttpl
mov
js
jnp
pop
clc
fdivrl
and
mov
and
ja
push
mov
add
cli
cwtl
jbe
adc
inc
push
cmpsl
push
popa
push
xchg
movsb
adc
dec
mov
inc
and
or
add
mov
lods
mov
and
js
adc
or
sbb
adc
push
test
sbb
or
loope
xchg
add
leave
push
cli
aaa
fsubrs
sarl
sarb
lret
jbe
sub
add
lods
add
mov
adc
sahf
push
push
mov
inc
add
add
bound
ljmp
idivb
cmp
cli
pop
mov
jbe
shlb
or
jb
std
adc
cmc
xchg
inc
iret
ficoms
push
ret
sub
add
and
mov
pop
mov
xchg
xor
sbb
dec
add
es
xchg
lahf
test
push
inc
cmp
fnstsw
mov
xor
sub
clc
mov
sbb
sub
lods
or
clc
sbb
ja
lock
repz
dec
lock
jle
xor
cmpsb
cmp
push
add
xor
or
sbb
push
gs
sbb
inc
mov
hlt
dec
ret
imul
sub
pop
cli
add
syscall
and
xchg
shr
lret
dec
cld
add
sub
mov
pop
jl
push
scas
add
add
jne
inc
jmp
add
or
and
or
sbb
inc
je
xorl
or
pop
mov
inc
jl
sbb
enter
add
loope
mov
adc
sub
inc
scas
ret
cmp
test
je
push
adc
dec
adc
inc
cld
mov
sti
repz
or
sub
loop
xchg
and
push
sbb
push
dec
or
lea
cmp
jmp
notl
dec
mov
lcall
xlat
adc
xchg
and
ss
cmp
daa
mov
stos
stc
ja
and
jne
loopne
sub
jl
push
loopne
mov
adc
jle
sub
cmp
xlat
inc
push
sub
push
mov
add
pop
leave
or
jmp
pop
inc
and
cmp
push
lods
aas
add
lea
mov
notl
lock
ja
and
cmp
add
add
popf
inc
or
add
rclb
lods
pushf
nop
scas
cmpsl
and
and
inc
push
jno
cmpsl
add
jb
lock
xchg
test
push
sub
nop
add
mov
inc
xchg
dec
jl
lahf
jmp
pop
add
push
xchg
ret
cwtl
and
pop
push
call
insl
jmp
ja
push
xor
pop
sub
or
jo
cmp
bound
dec
mov
jbe
add
add
dec
sub
adc
lds
movb
pop
pop
rcl
loope
xchg
jo
push
add
scas
ja
sti
push
hlt
xchg
pop
cmp
jne
jbe
mov
insb
inc
push
fisubl
rol
pop
cmp
iret
stc
nop
nop
sub
mov
jae
aad
je
pop
pop
or
loope
xor
sbb
or
cmpl
and
adc
pop
inc
add
test
push
jmp
mov
sbb
and
mov
je
xor
or
cmp
or
mov
cmpsb
insb
cmpsl
fcomps
and
loope
inc
outsb
cmp
subb
sub
es
rolb
or
push
or
mov
mov
xchg
pusha
sbbl
cmpsl
addr16
and
adc
mov
pop
les
inc
lahf
enter
pop
popa
mov
sbb
es
xor
push
outsl
test
jbe
es
js
adcl
cmp
mov
jl
cmp
add
sub
ja
ja
lds
lods
das
jmp
rcrb
sub
push
add
call
mov
push
xchg
sub
push
add
xchg
lods
cmp
test
xor
jge
jns
mov
mov
push
mov
jg
mov
or
icebp
push
outsl
jge
mov
and
pop
mov
fs
and
add
dec
js
adc
test
outsb
push
adc
add
sbb
insl
ret
pop
sbb
xor
add
adcl
mov
addr16
aad
dec
mov
inc
loop,pt
rol
lahf
push
pushf
jmp
mov
mov
cmp
and
mov
sub
add
pop
data16
pop
cltd
inc
push
and
mov
push
les
js
shr
pop
inc
add
lcall
or
sbb
jbe
push
inc
pop
pop
jb
js
dec
push
fisubl
add
scas
and
imul
adc
fdivrs
adc
mov
sub
or
xchg
adc
inc
dec
pop
mov
jne
lret
cmpsb
mov
pop
orl
dec
and
repnz
push
sbb
nop
lea
jge
sbb
sbb
inc
lea
dec
in
and
call
mov
ret
pushf
mov
or
outsb
add
aaa
ret
mov
out
xchg
call
lcall
add
push
test
lahf
data16
mov
adc
and
imul
inc
mov
jmp
aaa
lret
mov
ret
outsl
add
push
leave
scas
pop
shl
imul
pop
jmp
test
bound
test
cli
aad
clc
lea
dec
jmp
mov
out
andl
xor
push
aam
stc
mov
pop
cmp
xor
loop
push
adc
or
mov
pop
mov
and
pop
pop
in
xchg
pusha
out
pop
mov
fcomps
inc
mov
jmp
mov
sub
cwtl
roll
adc
add
jle
dec
stos
rorl
and
mov
inc
test
mov
xchg
cmp
jecxz
add
and
adc
iret
add
cmp
rcrb
pop
push
xor
push
data16
mov
xchg
xor
sub
mov
hlt
ror
xchg
insb
pop
xlat
les
js
xchg
fs
aaa
cmp
insl
xchg
dec
jmp
rorb
aaa
int3
mov
sahf
jno
xor
push
leave
xchg
in
push
inc
cmp
mov
jb
dec
mov
sub
and
push
orb
pop
mov
lods
repnz
jmp
push
xchg
pop
xchg
iret
adc
loope
lret
je
push
xor
aad
int3
inc
mov
or
mov
pop
sbb
popf
lds
adc
mov
pop
cmc
out
jg
popf
add
clc
imul
push
add
inc
mov
ret
mov
out
out
xchg
test
add
xor
jo
and
imul
cmp
subl
mov
shll
cmp
mov
cs
or
adc
and
and
test
or
loopne
movsl
and
mov
test
inc
loop
jmp
lods
aad
add
inc
or
pop
ret
add
sub
fisubs
cmp
add
mov
insl
daa
mov
mov
orl
xchg
dec
out
movsl
push
mov
lods
daa
loop
mov
lods
push
inc
popf
icebp
xchg
jae
mov
cld
jmp
cmpl
and
sbb
out
xor
inc
in
and
dec
add
test
cs
mov
jmp
sub
inc
lcall
scas
sbb
push
les
jmp
mov
adc
adc
xchg
scas
aaa
inc
cmp
pushf
idivl
push
mov
jbe
int3
in
psrld
push
xor
push
xchg
xor
ljmp
jge
jle,pt
xchg
and
mov
clc
push
popf
add
inc
or
pop
fiadds
jg
sahf
push
lret
mov
cmpsb
pop
add
mov
cltd
sti
push
sbb
call
imul
sahf
test
cmp
xorb
and
orl
cmc
rcrl
mov
fcompl
xor
ret
mov
test
scas
xchg
shll
subl
pop
add
rcrl
add
jp
pop
or
pop
xor
sbb
daa
mov
ds
cmp
enter
jl
dec
push
je
pusha
lea
push
push
pop
xchg
ret
sub
jl
push
or
mov
stos
and
cltd
fidivl
add
or
add
clc
jnp
cld
fstpt
add
or
adc
mov
xchg
mov
jns
cmp
add
xlat
pop
in
and
insb
dec
insb
pop
pop
mov
xchg
sub
xchg
call
adc
and
leave
shlb
sbb
dec
test
mov
cwtl
and
pop
mov
in
popa
add
mov
add
push
pop
lock
loopne
or
andl
or
idiv
lea
cmp
push
jns
add
rcll
and
push
sbb
js
cltd
dec
pop
push
hlt
punpckhbw
xor
testb
mov
push
lret
or
mov
mov
cmp
mov
sti
sbb
data16
pop
insb
xchg
jbe
sub
sub
dec
dec
dec
clc
jne
rcrb
test
cmp
popa
cmpsl
pop
fwait
sbb
lea
clc
les
sub
push
and
loopne
xchg
sbb
xchg
push
clc
hlt
hlt
ljmp
inc
jmp
inc
dec
push
pop
pop
adc
cmp
xchg
mov
cmp
call
sub
lret
adc
jl
jne
push
js
fisttpl
jle
sbb
cld
loopne
fnstenv
mov
dec
leave
mov
test
stc
repz
lcall
add
lock
adc
clc
pushl
push
add
jo
xchg
sti
mov
and
mov
jo
pop
fimuls
pop
fimull
mov
xor
lahf
out
repz
movl
add
rorb
std
xor
xor
iret
mov
push
inc
cmpsl
or
mov
pusha
mov
pop
lret
and
adc
adc
and
push
adc
sub
lcall
adc
cmpb
jp
pusha
cmc
lea
xchg
xchg
push
mov
imul
faddl
imul
pop
mov
mov
mov
les
popf
jbe
push
cmp
adc
jge
lea
push
ret
test
mov
test
push
mov
in
adc
fcomps
lcall
pop
add
xorl
cmp
sbb
lea
add
das
pop
sbb
mov
cli
inc
mov
and
scas
lea
addr16
icebp
mov
mov
adc
mov
fsubl
test
push
into
inc
mov
inc
inc
lret
rorb
lock
mov
push
fistpll
invd
mov
adc
gs
mov
mov
sbb
xchg
ljmp
rolb
inc
sbb
mov
ret
clc
xchg
jnp
mov
adc
dec
mov
and
lods
push
movsb
test
aas
add
test
rcl
inc
mov
inc
lods
bound
dec
cmp
jl
sbb
or
test
sarl
cmpb
add
sub
cmp
adc
fimuls
pop
and
add
jmp
test
xor
mov
mov
pushf
sbb
loope
outsb
mov
sbb
in
daa
push
mov
sub
add
inc
mov
lea
mov
xlat
push
sbb
fs
xlat
jne
fisubl
adc
test
and
xchg
lea
jecxz
lock
xchg
sbb
test
in
mov
mov
jb
addr16
ds
cmpl
addb
lret
push
mov
movb
js
clc
and
adc
mov
and
or
jb
push
jae
aam
mov
jno
xchg
in
add
lcall
shlb
jo
data16
xor
iret
add
push
mov
sahf
mov
dec
repnz
mov
aad
xchg
outsb
mov
iret
les
lds
orb
pop
adc
fisttps
sahf
mov
sub
pusha
adcl
xor
cmpsb
xor
adc
fcoml
movlps
inc
sub
je
or
mov
mov
lea
or
fimull
ja
repz
outsb
xor
or
sbb
int3
lcall
pop
pop
jmp
push
dec
shl
inc
xchg
loopne
pop
les
push
xor
mov
pop
stos
sbb
mov
pop
clc
adc
shl
testb
test
jge
xor
in
inc
repnz
je
call
pushf
mov
call
or
or
out
in
jl
cmp
test
and
testl
adc
rolb
mov
inc
insl
rol
adc
insl
popa
shrl
bound
call
call
mov
clc
add
out
jbe
xor
jno
repnz
add
pusha
shll
or
imul
cmp
sahf
or
add
push
inc
sbb
or
sbb
inc
test
aas
fsubrs
and
or
or
push
mov
and
or
pop
xor
add
jmp
or
or
imul
pcmpeqw
faddl
jl
mov
test
mov
shll
add
jle
pusha
pusha
push
fiadds
fwait
popf
xchg
and
stc
test
cli
rorl
sub
shl
bound
and
jle
push
int3
in
bound
mov
mov
popl
xchg
imul
add
push
cmp
adc
push
sbbb
and
fwait
sbb
ret
clc
gs
imul
in
pushf
outsb
sbb
fcompl
std
into
fmul
push
dec
add
sub
ret
das
sub
notb
enter
mov
cmp
cmp
add
add
movsl
or
dec
addr16
mov
out
imul
or
mov
dec
dec
mov
lea
lea
arpl
sbb
insb
mov
cmp
hlt
push
inc
cmp
dec
loope
inc
cltd
xchg
mov
cltd
movb
mov
sbb
mov
flds
mov
stos
mov
pusha
inc
ror
mov
jmp
mov
jns
out
xchg
dec
jae
sub
pop
mov
int
or
enter
cld
adc
ljmp
sbb
cltd
shlb
popa
add
pusha
xor
imul
sub
in
add
orl
pop
rorl
jecxz
subb
push
int3
inc
repz
sbb
or
lods
inc
fs
test
hlt
sbb
sbb
sub
push
push
adc
inc
es
add
movb
jb,pn
adc
mov
pop
xchg
call
inc
addl
test
das
fildl
mov
add
add
push
xor
cmp
popf
add
add
mov
pushf
dec
pop
je
xchg
xchg
lret
je
arpl
mov
or
mov
dec
jnp
iret
and
mov
adc
js
xor
inc
pop
imul
mov
or
or
ss
ret
dec
push
mov
dec
popa
addl
sub
dec
js
or
add
cmp
addl
dec
or
int
mov
add
je
push
out
xor
mov
nop
cmc
dec
ja
fcoml
cmp
jle
add
movsl
dec
out
mov
jno
fcoms
xchg
iret
bnd
stos
insl
cmp
mov
or
les
cmc
ret
or
jae
lea
push
sub
sbb
decb
add
shll
outsl
stos
mov
sti
adc
ja
push
pop
rorb
or
call
mov
cmp
insl
sbb
or
faddp
imul
jmp
cmp
push
cmp
jae
inc
jmp
push
loope
loop
jp
sub
data16
and
ret
push
inc
cmp
add
test
add
imul
fdivrs
in
clc
subl
out
lea
lret
jbe
iret
fsubr
cmpsl
push
jbe
imul
addr16
dec
add
mov
mov
push
movsb
sub
sub
or
inc
jmp
sbb
jmp
push
cmp
push
sbb
orb
inc
pop
ljmp
lds
and
stos
push
push
test
in
push
movntps
aas
add
out
push
inc
loopne
or
or
sbbl
les
jae
pop
cmpsl
fidivs
popf
imul
xchg
xchg
sbb
or
inc
add
ficoms
ss
sub
inc
push
cltd
xchg
je
mov
clc
cwtl
bnd
push
hlt
stos
and
cmp
ja
cmpb
push
pop
mov
mov
xor
sbb
or
sbb
add
dec
scas
lret
inc
and
fiaddl
mov
push
push
push
dec
adc
rclb
add
dec
pop
xlat
cmp
fs
inc
or
add
push
adc
bnd
test
pop
inc
test
stos
mov
mov
jmp
mov
adc
shlb
lea
mov
cmp
add
xor
push
enter
cmp
adc
cmp
mov
mov
mov
and
inc
pop
mov
sbb
xchg
inc
roll
popf
ja
imul
inc
mov
jne
push
imul
lcall
adc
mov
test
jnp
cmp
in
mov
push
aaa
cld
pop
cmpsb
inc
inc
cld
sub
pop
out
xor
mov
or
lcall
test
jl
sub
cld
inc
and
xchg
ss
fidivs
loope
fidivl
in
andl
push
mov
mov
mov
sub
icebp
mov
or
inc
movsl
lret
leave
adc
pop
inc
popa
xchg
mov
rol
or
in
jo
inc
loopne
inc
sbb
push
notb
jmp
and
aaa
lock
sbb
cmp
add
xchg
push
push
pop
adc
inc
sbb
push
sub
loopne
mov
push
push
or
dec
sub
jo
jp
ficoms
push
mov
test
add
shrl
ss
dec
add
imul
inc
fcmovb
push
pop
adc
inc
std
add
jno
adc
out
daa
push
lock
in
and
or
nop
add
mov
fwait
and
xor
sahf
and
pop
push
lret
dec
xor
mov
inc
cmp
adc
addl
ret
dec
lcall
xor
adc
mov
ret
scas
ljmp
push
pop
roll
xor
adc
cmp
add
in
cmp
scas
add
ss
mov
add
mov
inc
ret
lret
push
add
fwait
mov
sbb
call
or
or
pop
es
add
lret
add
das
leave
push
icebp
daa
or
jmp
mov
push
pop
pop
into
mov
sbb
loopne
jne
mov
pushl
and
lea
xor
pop
ret
jae
ja
mov
pop
fisubs
push
sbb
adc
scas
ss
negl
mov
insl
lret
sub
fwait
xor
fsubp
mov
sbbl
mov
mov
sub
xor
push
sub
or
sub
mov
xor
and
lret
pop
pop
mov
lods
mov
xor
test
js
jge
jo
push
add
and
mov
sbbb
pop
xor
or
imul
dec
std
cmp
movsb
jle
jne
sub
test
stos
cmp
lcall
pop
fwait
sbb
cmpsb
pop
fwait
jp
jo
push
cwtl
add
movsb
dec
ror
roll
dec
das
inc
test
inc
dec
xchg
test
dec
push
lahf
mov
cmc
mov
mov
adc
mov
mov
fyl2x
rolb
jmp
xor
les
or
sti
add
add
int3
movsl
test
sarb
xchg
iret
xchg
cmpsb
loope
stos
in
push
or
mov
push
jmp
jmp
mov
pop
sub
in
shll
mov
scas
or
push
adc
xlat
add
add
jbe
lock
sbb
or
or
cmpb
stc
ljmp
jle
adc
mov
push
jp
jl
mov
cmp
mov
movb
sahf
sub
cmp
adc
dec
nop
sub
or
sbb
pop
cwtl
mov
rcr
xor
mov
jne
test
xchg
add
mov
pop
rcr
or
xchg
mov
jnp
enter
adc
xor
mov
add
dec
add
add
fsubrl
adcb
cmpsb
fnstcw
jge
mov
lock
push
cmp
jle
push
fdivr
sti
je
xor
and
add
push
inc
cmp
jl
pop
push
shlb
mov
sbb
ja
or
jle
shlb
push
xor
icebp
leave
xor
or
lock
dec
enter
mov
or
fsubrs
cmp
mov
sbb
or
xor
pop
push
cmp
faddp
push
das
iret
or
push
mov
add
mov
add
cwtl
sbb
push
add
cmp
inc
das
nop
inc
in
aaa
pop
or
add
sub
sbb
pop
cs
pusha
add
pop
add
cmpb
sbb
push
rorb
push
jmp
cmp
popa
lea
stos
rcrl
movntps
das
jne
mov
cmp
ljmp
xor
fisttpll
addb
or
lds
dec
into
mov
mov
subl
fcmovu
imul
add
add
mov
fildll
out
mov
shr
shl
add
add
lret
mov
dec
icebp
sbb
fidivs
mov
pushf
js
adc
jp
or
jge
clc
cmp
cmp
roll
ja
add
add
loope
or
dec
pop
pop
shll
push
shlb
pop
or
xchg
xchg
mov
and
sbb
adc
int3
and
ret
xor
sar
lods
push
sahf
add
aas
sub
add
lret
adc
inc
mov
and
xchg
xor
lcall
fsubr
mov
cmp
loopne
jl
jne
lock
or
mov
mov
cmp
ficompl
add
dec
xor
xor
mov
inc
sub
or
stos
push
fs
add
fisubl
xchg
mov
icebp
movsb
mov
loopne
and
ljmp
mov
jae
mov
pop
adc
sbb
aam
mov
or
add
in
xchg
mov
into
std
stos
cmp
jl
iret
mov
jae
inc
and
sbb
in
jns
adc
inc
sahf
and
es
sub
inc
mov
mov
adc
shll
mov
icebp
sbb
aaa
mov
adc
shlb
sbb
sarb
mov
inc
out
or
int3
xorb
mov
and
outsl
xchg
add
ror
xor
adc
sub
int
fisubs
rcll
dec
sub
aam
mov
decb
cli
dec
mov
pop
enter
pop
pop
jns
pusha
push
fdivl
ss
jmp
push
dec
pusha
sti
idivl
jbe
mov
jmp
das
mov
mov
cmp
sub
jmp
addb
xchg
andb
loope
lock
jl
or
and
add
add
push
cmp
shrb
in
mov
pop
cmp
adc
mov
jno
jecxz
inc
cmpsb
fstps
push
fcmovbe
push
cmc
jne
and
insl
xchg
jmp
sbb
or
cwtl
sub
mov
add
mov
testb
sbb
roll
lret
pusha
rorl
clc
xchg
xor
and
imul
aas
in
pushw
sbb
mov
popa
and
sub
mull
inc
pop
pop
mov
or
ret
mov
ret
sbb
pop
jmp
or
pop
dec
lea
inc
mov
or
inc
sarl
mov
shlb
push
int
inc
shrl
mov
or
pop
xor
push
in
sub
sbb
test
inc
push
push
adc
push
cmp
cwtl
mov
mov
enter
pop
or
or
mov
sub
jecxz
shll
push
aam
cmp
stos
ror
xchg
jo
movsl
mov
jns
call
lds
clc
leave
inc
js
sbb
or
or
push
mov
sub
mov
or
aam
adc
ja
insl
adc
lods
or
ja
fstpl
ret
xor
movl
adc
sbb
xor
dec
add
push
sbb
xchg
insb
mov
pop
push
mov
and
sbb
test
cmp
into
dec
jmp
pop
sar
sarl
push
or
jno
fidivl
push
lock
lea
dec
mov
pop
mov
xor
insl
icebp
xlat
negl
cmpl
adc
add
sbb
push
mov
mov
cmpb
repnz
push
ja
push
loope
xchg
jmp
adc
jbe
and
cwtl
push
fdivl
adc
adc
fcompl
addl
adc
incb
es
and
lods
test
add
ljmp
cmp
mov
cmpl
jne
sbb
scas
push
sbb
cmpsl
mov
inc
roll
sbb
and
mov
bndstx
dec
pusha
pop
mul
inc
and
orl
and
icebp
js
bound
push
add
mov
mov
shr
movsb
mov
cmp
in
add
cmp
sub
stos
cs
sub
pop
jne
push
add
pop
sub
mov
das
mov
pop
push
inc
jle
push
loopne
xor
and
or
xchg
jne
repz
add
sbb
in
push
arpl
dec
or
insb
mov
or
iret
shrb
xor
inc
xchg
or
dec
clc
xchg
dec
jo
dec
sti
inc
fnsave
mov
idivl
lock
out
push
bound
or
inc
loop
ljmp
push
sub
inc
jo
jne
addl
cmp
roll
and
jne
test
push
loopne
loop
stos
mov
ss
mov
pop
push
mov
mov
add
jne
inc
dec
loopne
add
dec
movl
daa
mov
inc
es
adcl
out
mov
sarl
sbb
fsubrl
mov
cli
testb
je
cmp
mov
pop
add
push
cmp
sub
outsb
test
ret
sub
cmpsb
mov
push
adc
add
ja
lahf
xor
mov
sub
cltd
jge
inc
sub
roll
xlat
fcmovnbe
aaa
pusha
addb
inc
adc
shll
sbb
push
pop
mov
push
add
push
sbb
ss
loopne
jae
dec
jo
shlb
pop
or
jmp
sbb
mov
mov
hlt
jg
push
sbb
notl
jg
add
ret
fistpl
clc
pusha
dec
sbb
mov
stos
mov
cmp
insl
sub
jo
and
cli
pop
or
push
pop
push
hlt
xchg
sub
daa
clc
movsb
inc
jo
cld
xchg
hlt
push
push
mov
aam
or
leave
or
inc
mov
add
mov
jns
or
inc
sbb
adc
faddl
push
push
jp
mov
xor
in
pop
add
jge
mov
mov
and
scas
rcrl
std
add
fs
fwait
imul
lock
rorl
sbb
mov
cmp
sbb
sbb
add
repnz
roll
add
nop
sbb
pop
cmpb
leave
jmp
lea
push
or
push
add
sbb
adc
lret
dec
and
add
sub
bswap
lret
mov
data16
nop
loop
ret
sbbb
or
add
aam
jmp
mov
std
sbb
or
dec
pop
pop
dec
and
xchg
inc
jmp
sbb
or
cmp
push
std
cwtl
push
and
inc
call
add
push
or
test
push
lahf
jo
das
les
es
cmp
rolb
cmp
out
xchg
or
push
sub
sbb
push
adc
lahf
xor
jl
dec
mov
iret
jne
or
add
push
ret
pop
push
xchg
ja
xor
rolb
cmp
push
fldenv
push
or
jl
add
cmp
sbb
cmpsb
sbb
sub
loopne
pop
pop
mov
orb
adc
rolb
push
sub
sub
jg
xchg
pop
push
jno
push
or
adc
call
divb
push
jo
jo
cmp
es
addl
push
fbstp
shll
fwait
je
lods
jae
out
xlat
fldcw
lcall
adc
jp
add
jne
loopne
mov
or
jl
outsb
dec
rorl
pop
inc
xor
dec
adc
mov
xchg
sub
or
filds
jb
cmp
dec
inc
ja
sub
pop
dec
push
cltd
cmp
sub
inc
clc
push
pcmpeqw
sub
imul
dec
and
mov
loope
mov
bound
pop
push
into
xchg
push
xchg
fbld
push
ret
push
mov
ja
pusha
dec
adc
cmp
or
adc
in
loope
xchg
adc
add
fsts
cld
outsb
cmpl
push
xor
adc
sub
add
sbb
xcrypt-ecb
cmpsl
mov
and
mov
adc
fisttpl
sub
dec
test
sbb
loop
xchg
dec
adc
cmp
dec
mov
pop
xchg
jecxz
xor
xorb
adc
cmp
pop
xor
or
jge
or
dec
aad
test
ds
pop
stos
inc
sbb
mov
je
mov
or
cmp
adc
xchg
push
leave
pop
xor
pop
cmp
loop
outsb
pop
in
mov
ss
push
in
cwtl
jo
dec
pop
dec
in
pusha
push
orl
adc
or
add
push
je
adc
rcrb
inc
mov
test
inc
clc
in
popf
testl
popa
jnp
xchg
outsb
pusha
mov
inc
cmp
dec
sti
inc
inc
and
inc
mov
cmp
cld
pop
ds
subl
push
mov
sub
mov
in
lods
fimuls
ds
jae
rorl
out
or
stc
jle
nop
push
and
pop
je
sub
dec
adc
je
sar
xor
repz
out
mov
sar
sahf
imul
fwait
les
add
and
pop
dec
loopne
pop
jns
sub
pop
ret
fistpl
and
xchg
or
inc
and
sbb
out
jmp
aaa
in
add
popa
rdpmc
add
in
cmp
fwait
icebp
rclb
hlt
adcb
xchg
xchg
adc
or
loop
inc
push
out
jb
mov
jno
inc
xor
shl
je
add
push
mov
mov
xor
scas
pop
inc
or
stc
cld
or
push
je
mov
add
inc
jbe
rolb
mov
and
push
xor
out
ret
push
pop
mov
out
mov
dec
movsb
jbe
or
and
dec
push
jp
inc
inc
inc
push
clc
scas
sub
cmp
in
pop
clc
das
xorl
lahf
inc
daa
addb
shll
in
insb
pop
lahf
adc
push
retw
or
mov
je
dec
out
loopne
sub
clc
or
xor
dec
sahf
ret
je
pop
xor
push
cld
cmp
push
jg
mov
push
push
mov
xchg
add
and
xchg
mov
repnz
push
adc
jne
adc
rolb
ret
xor
push
fucomp
xor
rol
push
dec
adc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
push
jns
movsb
bound
fadds
inc
and
cwtl
sbb
adc
cli
jg
jmp
cmp
lds
movb
lret
add
push
xor
icebp
jnp
jnp
les
bound
dec
mov
je
sub
mov
and
pushf
xor
dec
leave
dec
inc
pop
pop
and
pop
mov
gs
out
mov
xor
inc
and
rolb
ljmp
or
adc
sub
xor
in
mov
nop
mov
popf
adc
inc
rol
jno
dec
jnp
pop
inc
arpl
jmp
sub
inc
cld
push
or
lock
pop
in
mov
jge
scas
arpl
cmp
push
loope
mov
adc
int3
int3
push
jmp
cmpsl
and
outsb
dec
imul
add
jmp
sbb
outsb
sbb
test
popa
insl
enter
sbb
mov
clc
add
dec
cmp
mov
jbe
mov
shll
xchg
pop
ja
cmp
adc
jmp
adc
fldl
add
fwait
inc
xor
dec
sbb
mov
shll
and
mov
mov
push
shlb
add
cmp
jp
jg
shll
xchg
mov
pop
mov
or
rcrb
mov
loopne
js
and
dec
push
sbb
jbe
or
adc
mov
push
inc
cld
add
cld
mov
mov
pop
cli
test
and
test
cli
dec
ret
push
add
and
clc
jg
imull
into
dec
test
movd
movaps
aaa
cwtl
push
enter
shlb
jle
xor
loope
in
add
lret
je
jge
insl
test
and
lret
or
push
inc
mov
jg
mov
xchg
ret
adc
js
jg
jnp
mov
testl
add
adc
push
add
adc
js
scas
and
add
sbb
fcmovbe
outsb
ficoms
mov
xlat
xor
mov
jo
addps
int
push
fdivrp
fldl
sbb
sbb
leave
pop
in
in
add
sbb
daa
rdtsc
jge
ja
mov
hlt
mov
icebp
mov
push
mov
xor
mov
mov
xchg
popa
mov
xor
push
or
cli
aam
pop
xor
pop
stc
and
in
cmp
jge
mov
sub
push
and
in
jb
pop
in
add
sbb
or
addl
and
or
mov
cwtl
clc
daa
mov
sub
sub
or
mov
aaa
bound
xchg
ss
sbb
push
push
shlb
leave
pop
mov
hlt
cmpsb
mov
inc
inc
cmp
mov
cmp
adc
push
sbb
jmp
mov
mov
cmp
jne
push
fwait
movsb
or
mov
adc
mov
mov
push
cmp
lret
mov
mov
pop
popf
rolb
scas
mov
sbb
sahf
adc
idivb
ja
sbb
arpl
dec
fisubrl
or
popf
or
sbb
repnz
push
pop
mov
mov
mov
arpl
add
fs
sub
stc
imul
jae
idiv
rcll
bound
les
pop
push
lahf
push
pop
les
xor
adc
adc
jne
inc
cmp
add
xor
pop
or
fists
aam
inc
int3
adc
cltd
lret
adc
mov
push
push
and
push
roll
pop
inc
inc
cmp
cmp
inc
sub
dec
cmp
mov
sbb
repz
adc
push
add
push
push
cmp
adc
es
add
or
adc
mov
repnz
sub
push
mov
cmp
sahf
mov
and
test
xlat
inc
in
imul
lret
sbb
inc
mov
hlt
push
xor
mov
cmp
ret
xchg
adc
loope
loopne
ja
shlb
dec
leave
sbb
mov
or
rolb
cmp
mov
mov
shl
rol
mov
inc
cmp
aam
lret
jne
sbb
inc
imul
sbb
jne
sbb
add
cld
das
and
mov
ss
ret
test
add
jmp
loop
xchg
cmp
jne
xor
xchg
xor
inc
or
adc
out
testb
cmp
or
addl
dec
mov
mov
pop
daa
add
notl
and
rol
lock
and
and
mov
inc
and
xchg
dec
inc
enter
sbb
xor
fiaddl
inc
push
sbb
adc
stos
mov
adc
and
sbb
rcrb
or
adc
lock
jmp
fmuls
lock
repnz
movsl
mov
pop
lock
and
iret
data16
jne
imulb
pop
add
cmp
roll
movsb
cs
fmuls
adc
push
sbb
mov
add
push
or
scas
mov
pop
pusha
outsb
or
pop
sbb
sbb
push
add
inc
cmp
pop
xchg
inc
mov
test
mov
mov
jbe
push
xor
pop
div
ss
daa
in
mov
dec
adc
cmpsb
or
pop
push
loop,pn
test
mov
adc
repz
inc
push
rolb
cmc
push
xchg
xorb
jecxz
sbb
or
sub
xchg
shlb
ficomps
lods
outsb
mov
leave
jbe
xor
add
add
shl
fsubrl
cmp
jle
push
sub
jl
mov
notb
decl
xor
push
cmp
pusha
mov
lock
fiaddl
pusha
jb
mov
ss
mov
cmpsb
shl
inc
in
popa
aam
rorl
in
jge
rcl
cmpb
mov
push
out
mov
pop
daa
and
sbb
fmull
xor
mov
push
add
cmpsb
push
shrb
push
push
fidivrl
test
fcoml
scas
cmpl
sub
and
push
adc
test
sbb
jo
data16
sbb
mov
sbb
push
notb
jg
in
mov
js
jo
shll
sub
movsb
mov
divl
xor
dec
ret
dec
pushl
push
jp
lds
test
mov
cmp
je
cmpsb
fcompl
test
adc
lahf
push
add
pop
push
push
inc
mov
insb
mov
movsl
in
xor
fucom
jl
cmp
dec
fwait
ds
out
imull
jns
mov
add
xor
sbb
sbbl
sbb
ret
and
sub
into
push
xchg
test
call
fistpl
add
and
je
hlt
mov
adc
clc
sub
rcrb
inc
mov
dec
push
cltd
shl
or
aas
xchg
test
cmpsb
or
sbb
out
sbb
or
xor
les
sarb
push
jp
push
jmp
inc
stc
xor
popf
insb
xchg
adcl
lret
xor
lock
pop
ret
jl
pop
inc
push
dec
push
icebp
pop
fiaddl
clc
ret
jmp
inc
in
orb
loope
and
pop
movsb
jo
sbb
add
push
fsubr
lcall
nop
cmp
push
scas
ret
pop
int
and
inc
movsl
cli
add
push
jnp
repz
les
arpl
loope
sub
or
cmp
add
lds
pop
xor
adc
adc
inc
cwtl
dec
cld
adc
jo
or
add
push
jne
mov
test
jne
mov
sbb
loope
dec
mov
in
mov
adc
movsb
inc
and
xor
in
pop
mov
ljmp
or
cmp
and
mov
pop
xor
inc
rcr
pop
sub
mov
lahf
cltd
scas
imul
or
das
and
out
in
xchg
or
pop
push
inc
stos
flds
les
orl
push
xchg
cmpsl
iret
sbb
xchg
sub
and
jne
pop
clc
cwtl
or
orb
icebp
ds
add
fcoml
movsl
cltd
adc
xor
ss
bound
gs
rcll
out
pop
push
adc
and
ljmp
sub
dec
sub
shrl
stos
pop
test
pushf
adc
push
xorl
lods
int
cwtl
dec
mov
or
jbe
popf
les
je
xor
sub
pop
or
bound
ret
lea
mov
adc
imul
pop
add
add
repz
daa
add
fstl
sbb
adc
dec
add
jno
in
repnz
flds
sbb
inc
fiadds
adcl
push
imul
add
or
pop
enter
dec
or
jb
cmp
sub
cmp
pop
enter
or
jns
loop
or
ja
cmpb
inc
jns
push
nop
or
pusha
in
ja
push
shrd
and
adc
cmp
adc
popa
in
inc
or
adc
lret
add
add
adc
movsl
test
adc
lcall
adc
and
js
push
push
adc
mov
pop
pop
in
lcall
sbb
sbb
pop
enter
add
sbb
push
and
and
push
sbb
push
sbb
je
pop
sbb
enter
bound
sbb
add
push
pop
and
roll
pop
jne
add
mov
sub
cmp
ss
aas
or
mov
cmp
xchg
mulb
shlb
inc
cmp
add
cmp
je
jns
jns
lcall
rol
lea
repnz
cmpsl
repnz
cmp
xor
out
test
iret
out
push
fcoml
dec
mov
jge
sub
adc
enter
inc
jmp
cmpb
jmp
in
jb
jmp
in
in
psubusb
in
cltd
mov
add
inc
in
sahf
out
out
sbb
sbb
jge
sbb
nop
out
test
lock
xchg
add
icebp
icebp
in
cmp
repnz
sahf
lret
add
std
repz
test
hlt
hlt
rorl
sahf
xchg
add
pusha
hlt
fwait
mov
jb
inc
jg
mulb
mov
pop
idivl
or
std
clc
clc
clc
and
sbbb
repnz
push
lock
cli
cli
inc
enter
sti
sbb
stos
jns
aaa
xchg
cld
cld
cld
je
cld
push
bsr
std
out
cmpsb
in
std
sbb
imul
nop
adc
ret
or
loopne
inc
or
add
nop
stos
lahf
in
lock
cmpsb
adc
inc
xor
es
jecxz
push
nop
ja
std
sti
in
in
enter
icebp
inc
mov
stc
daa
xchg
sti
pop
insb
nop
and
out
cltd
outsb
xchg
inc
pop
and
add
and
sbb
pop
jmp
jmp
cmp
mov
add
xchg
popf
cli
sbb
js
out
out
out
mov
sbbb
inc
repnz
cli
push
cli
dec
push
cmp
stc
repz
lret
add
repz
sar
push
xor
sbb
pop
fstpl
testl
negl
fwait
xor
mov
stc
inc
or
pop
out
clc
cmp
xchg
clc
sti
sti
sti
cltd
pop
enter
cld
inc
cld
and
inc
pusha
fists
rcll
cmp
push
adc
pop
and
dec
test
cmc
cld
sub
adcl
loop
icebp
notl
pop
shl
push
xor
scas
idivl
mull
adc
out
out
cltd
cmp
sbb
out
inc
notl
sub
xchg
and
sbb
sti
imul
ljmp
negb
repnz
notb
and
jb
or
negb
mov
adc
testb
cmpsb
jb
pusha
sbb
adc
xchg
bnd
cmc
pop
leave
and
in
xlat
xchg
cmc
pop
dec
cmc
sarb
fwait
mov
scas
jae
pop
add
clc
jne
cmpb
hlt
stc
push
jns
loopne
cmp
mov
dec
cli
jno
hlt
mov
adc
pop
jne
mov
push
hlt
sbb
andb
data16
hlt
testl
sti
das
xchg
pop
loopne
pusha
adc
jp,pt
dec
ret
or
loope
loope
les
mov
pop
repnz
repz
movsl
test
repz
imul
test
inc
repz
repnz
push
cmp
jmp
jmp
mov
xorl
sbb
pop
sbb
sbb
cmc
and
repnz
and
test
and
mov
arpl
js
divb
jne
jns
icebp
jb
test
xor
push
icebp
cmp
rclb
cmc
sub
xchg
sbb
icebp
jecxz
andb
sbb
popf
lock
stc
daa
xchg
inc
fdiv
jne
push
lock
sbb
push
lock
test
ss
rclb
inc
or
fldl
sub
out
ret
sbb
inc
ds
add
nop
addr16
add
stos
mov
dec
add
push
or
test
adc
or
cmp
add
dec
add
jmp
popl
dec
add
aas
add
jae
pop
add
and
insb
mov
mov
sbb
mov
sarl
out
sbb
sbb
jg
pop
insb
ss
iret
push
and
adc
pop
fistpl
jns
cmpsl
frndint
pop
pusha
inc
dec
insl
lcall
push
mov
xor
cs
mov
pushf
out
lahf
mov
test
xor
subl
add
nop
push
or
jle
outsb
or
rolb
add
in
mov
aam
andl
in
test
sub
pop
int
test
add
sub
adc
shl
inc
std
cld
sbbl
xchg
out
leave
xor
add
add
add
or
dec
mov
clc
inc
xchg
adc
cmp
inc
clc
dec
pop
cs
mov
push
or
fnstcw
je
push
outsl
pop
pop
pop
or
xor
andl
xchg
or
test
lea
push
sbb
inc
fdivs
add
cmp
stos
mov
pop
scas
fmuls
and
add
or
mov
xchg
jb
mov
lock
sbbl
repnz
sub
sub
fildl
mov
mov
adc
imul
push
fnsave
cmpl
mov
dec
rcll
neg
lods
and
xchg
mov
es
clc
cld
testb
adc
in
std
rol
and
je
rep
mov
dec
jns
js
ljmp
add
sbb
mov
loopne
sbb
push
fdivrs
cmp
inc
fs
add
push
pop
push
outsb
sub
in
inc
adc
mov
loopne
cmpsl
nop
stos
in
xchg
test
adc
fsubp
mov
cld
add
push
fsubs
insl
xlat
aas
push
ret
adc
cmp
jb
and
fwait
or
add
pop
nop
pop
clc
test
inc
inc
xor
adc
data16
jmp
jb
mov
push
jbe
mov
imul
inc
push
inc
and
gs
iret
push
mov
cmpsb
or
lret
and
or
js
outsl
sub
add
repnz
loopne
je
pop
roll
sub
addl
into
enter
lea
add
rcrl
cld
or
lret
popa
imul
popw
fisttpll
cmp
lods
sub
mov
repnz
jne
ret
pop
add
lcall
or
jl
or
lods
push
mov
push
lea
out
push
adc
push
push
push
test
push
into
jmp
xor
ret
xor
inc
pop
xlat
pushl
mov
inc
jmp
cmp
jne
orl
add
sbbb
add
mov
cld
outsl
sbb
call
and
cmp
sub
push
push
mov
jmp
mov
mov
mov
and
adc
insb
adc
pop
or
fwait
out
jne
dec
add
add
lds
sub
xor
dec
inc
add
or
div
mov
sbb
xchg
sbb
je
mov
sub
call
mull
stc
sbb
adc
and
adc
sbb
pusha
fwait
pop
enter
movsb
lea
sbb
add
or
xchg
and
sub
jmp
inc
push
scas
pop
neg
stos
out
mov
xchg
cmc
mov
sbb
mov
sbb
je
or
sub
pop
sub
stos
jbe
inc
mulb
xor
stos
adc
mov
pop
fld
bound
mov
popa
int
daa
das
in
rolb
sbb
mov
mov
push
push
hlt
mov
add
ret
xchg
pushf
jmp
push
xor
outsl
cmp
cs
pop
insb
adc
pop
adc
cli
cld
fisttpl
pop
loopne
xchg
sbb
jne
jnp
orl
pop
mov
ret
sub
jae
sbb
dec
mov
push
cmp
jne
repz
dec
es
jne
call
mov
sub
add
mov
or
cmc
jmp
iret
iret
jae
adc
paddd
cmp
std
jmp
cld
cltd
and
push
sub
test
or
and
mov
adc
ret
je
or
add
stos
shr
repnz
add
pop
lock
sub
inc
fs
jo
lds
clc
test
ret
leave
jns
adc
pushf
ja
pop
inc
pusha
test
sbb
push
xchg
or
or
push
leave
dec
sbb
push
jbe
adc
mov
adc
adc
mov
adcb
sahf
dec
cmp
xchg
imul
sbb
sbb
outsl
and
cs
add
sbb
or
push
fimull
inc
scas
adc
testb
jne
jo
sub
dec
test
xor
xor
sub
xchg
aad
jnp
sbb
inc
push
stc
lock
ja
je
push
jmp
mov
rcll
sbb
ss
or
mov
icebp
fadds
sbb
push
out
pop
dec
outsb
out
jns
mov
dec
mov
dec
sbb
inc
xor
push
lcall
sbb
cwtl
ja
subb
xor
and
mov
or
in
call
xchg
ss
popa
dec
mov
xchg
xchg
push
jl
std
testb
push
fs
pop
hlt
jae
and
pop
lret
clc
in
mov
xchg
sbb
mov
xchg
cli
fistl
sub
dec
stc
imul
stos
add
testb
adcb
fisttpll
mov
mov
fs
push
jb
rolb
mov
test
push
cld
jmp
mov
inc
adc
arpl
ds
cmp
add
mov
jecxz
dec
sub
mov
das
aas
cmc
cmp
dec
xor
adc
sub
je
rcl
add
or
rcrb
movlhps
andb
sbb
and
cmovs
xor
aas
lcall
test
sbb
xchg
cmp
jb
rep
jmp
mov
xor
and
cwtl
jb
inc
add
xor
push
ss
dec
xor
lea
xor
mov
test
mov
sbb
inc
add
add
cmp
int3
lea
xchg
lret
dec
add
movl
pop
inc
add
add
sub
push
adc
add
mov
lock
in
inc
in
jns
out
call
out
sahf
lock
hlt
clc
clc
cld
mov
xor
or
andl
sub
dec
push
pop
mov
and
nop
nop
shll
and
cmp
and
lea
xchg
sub
jl
cld
or
push
cld
out
shlb
neg
adc
adcb
stc
sub
xor
sahf
ret
outsb
pop
nop
in
adc
push
fiaddl
sub
mov
add
sahf
inc
push
out
lods
pop
push
jns
add
sbb
dec
addr16
add
faddp
mov
ljmp
repz
repz
xchg
pushf
movsb
lods
mov
iret
repz
xor
sbb
sbb
repz
repz
adc
or
repz
or
or
lahf
mull
inc
loopne
call
xchg
cmpsb
and
add
sub
pop
dec
and
decl
icebp
test
push
xor
mov
mov
incl
inc
decl
loop
dec
jg
jne
pop
pop
mov
add
push
cld
cmp
xor
mov
push
cltd
pop
idiv
add
mov
pusha
or
pop
or
std
adc
aaa
dec
mov
mov
xor
mov
bnd
cmp
jae
dec
cmp
nop
pop
jae
pop
jbe
sbb
push
mov
dec
into
jmp
pusha
add
sub
add
ljmp
jg
aam
dec
sub
lret
add
imulb
adc
in
dec
mov
sbb
dec
dec
je
push
push
sbb
or
jl
insb
adc
test
xor
pop
jle
je
or
push
mov
int
movsb
stc
inc
daa
xchg
sbb
push
das
pop
or
sbb
add
and
xchg
pushf
lret
or
jle
push
mov
add
mov
xor
cmp
pop
add
adc
push
data16
test
xor
adc
ficoml
inc
pop
ja
pop
push
mov
stos
popa
nop
cltd
fcoms
push
and
jmp
cmp
sbb
sub
sub
icebp
or
aas
jge
add
push
cltd
pop
idiv
pop
mov
mov
lcall
out
mov
es
mov
jmp
mov
nop
sbb
or
ss
pop
imul
sbbb
pop
add
add
jmp
jl
mov
loopne
push
cs
pop
push
lods
xor
or
je
insb
sub
xchg
xchg
mov
dec
jb
jae
mov
jo
inc
pop
xor
jns
adc
cmp
arpl
pop
sub
incl
pop
sti
jnp
pop
pop
cmp
inc
pop
sub
mov
addb
sbb
add
ret
jae
cmp
dec
lds
and
lahf
push
xor
les
jae
js
jmp
jge
pop
je
sbb
and
cmp
jl
fs
sti
mov
ud2
jmp
lahf
jno
mov
fnsave
test
mov
jo
sbb
je
dec
inc
rcr
notl
mov
mov
inc
and
sbb
or
xchg
push
loop
lcall
pop
popl
popf
sbb
push
and
push
sbb
sti
fsts
xchg
inc
mov
push
out
nop
xor
out
dec
inc
or
pop
stc
pop
push
add
mov
jg
xchg
inc
lds
test
jmp
push
pushf
mov
mov
loop
sbb
flds
loop
sub
push
je
mov
push
jecxz
push
mov
xchg
fildl
sbb
sub
and
jge
rcll
add
or
push
hlt
adc
rcl
mov
adc
data16
add
dec
adc
inc
adc
fdiv
cmp
or
out
call
scas
dec
push
in
push
imul
mov
jmp
mov
dec
ljmp
xchg
mov
xchg
rorb
imul
cs
inc
mov
or
dec
js
mov
nop
cli
mov
adc
sbb
adc
mov
mov
add
push
push
and
push
inc
jg
jbe
das
fs
inc
stc
xchg
gs
adc
mov
adc
pop
mov
rolb
mov
fisubl
pop
mov
cmp
je
xchg
mov
sahf
fs
orb
mov
sbb
adc
add
cmpsl
cmpsb
fstpl
fidivrl
dec
je
and
mov
push
cmp
or
sbb
and
add
andb
stos
and
loopne
mulb
mov
xorl
jle
or
sub
lret
inc
mov
lods
mov
sub
adc
insl
sbb
ret
outsb
mov
xchg
dec
push
lods
leave
loop
mov
xchg
add
out
sub
or
cmc
outsl
xor
test
cmp
test
cmp
ret
pop
cmp
je
mov
rol
mov
adc
sub
andl
pop
xor
push
pop
inc
int
fs
cmpsb
add
shl
pop
add
sbb
mov
and
sbb
dec
movsb
mov
jns
iret
es
add
mov
mov
and
fildl
add
pop
fcom
iret
add
into
adc
shl
lea
popa
bound
stc
shlb
mov
popa
dec
or
sub
mov
push
jmp
das
dec
jmp
and
cmp
stc
inc
cmp
and
and
fcmovb
in
jmp
ret
add
or
sbb
or
pop
sbb
movsl
loopne
mulb
in
or
adc
mov
add
lahf
popa
lock
ljmp
je
push
xchg
aam
daa
push
je
movsl
push
cmp
inc
sbb
mov
mov
or
mov
jge
jae
push
and
inc
push
jmp
add
les
or
and
inc
inc
call
pop
lcall
outsl
inc
sbb
sti
inc
aam
orl
jge
test
cltd
pop
stos
call
test
lret
stos
xchg
fsubl
and
fucomp
es
inc
jmp
aas
imul
push
popf
add
add
pop
das
decb
leave
leave
inc
push
imul
sbb
cmp
add
shlb
pop
arpl
and
fldz
push
movsl
movsl
mov
data16
nop
or
mov
push
aas
add
mov
imul
popa
rep
and
adc
divb
adc
inc
cltd
mov
jne
fchs
movsl
cmp
stc
lock
or
push
outsb
mov
add
pop
adc
insl
ds
jmp
pop
cmpsb
xor
fsubl
pop
xchg
push
jno
ss
mov
fs
icebp
clc
mov
sbb
cmp
add
xor
mov
push
inc
clc
outsb
mov
fs
pop
xor
or
lods
test
loopne
cmp
shll
in
inc
inc
loopne
inc
pop
push
dec
sahf
push
cmp
bound
jbe
inc
or
js
adc
add
adcl
push
and
fiadds
sub
sbbb
fadds
mov
fmull
inc
bound
shll
in
cmp
dec
shr
sbb
and
and
outsl
inc
and
mov
dec
push
into
gs
clc
push
pop
sarl
fcomps
sahf
enter
or
xlat
add
push
jne
sbb
aam
insl
push
aam
xor
push
pushf
enter
idivb
mov
add
mov
xor
inc
out
xchg
adc
jo
add
dec
lcall
std
data16
out
and
jecxz
or
add
in
lods
sbb
adc
adc
imul
sbb
das
jb
add
rorl
mov
pop
xor
push
cmp
arpl
imul
outsl
movsl
loopne
cmp
mov
or
clc
sub
test
or
into
push
imul
mov
out
jge
cmp
loopne
and
fiadds
shlb
fadd
mov
pop
imul
cmp
ja
or
push
jbe
addl
js
adc
jl
mov
fildl
in
sbb
add
inc
inc
cmp
cs
xchg
jle
repnz
inc
pop
jp
adc
mov
xchg
jg
adc
sbb
pop
lcall
sub
mov
cmp
push
pop
xor
rcrb
jbe,pt
rcrl
addl
jne
pop
dec
lock
add
lods
adc
dec
xor
mov
call
sbb
adc
xchg
rcrb
pushf
sub
cmp
incl
push
testb
fs
mov
pushf
push
jecxz
mov
adc
mov
repz
adc
xor
add
jle
mov
test
popa
aam
pop
push
xor
aas
icebp
push
fwait
subb
ret
mov
mov
pop
adc
or
pop
out
sub
jmp
inc
incb
inc
ja
mov
dec
jo
push
sbb
dec
int
fmuls
lods
mov
cli
or
add
jmp
ds
dec
loopne
adc
test
lods
or
cmp
jb
mov
jg
xor
jb
lahf
mov
dec
mov
mov
dec
dec
add
popa
jecxz
pop
inc
enter
add
or
or
adc
xor
xchg
fdivl
xchg
sbb
jmp
dec
xor
arpl
loope
adc
mov
sub
xor
jne
add
adc
jno
dec
int
mov
cmp
cmpl
lret
dec
mov
pop
or
jg
add
mov
pusha
inc
cmp
scas
in
in
jae
xchg
addl
and
push
std
rclb
sub
inc
lcall
lret
xor
sti
ss
dec
fdiv
and
daa
pop
jle
adcb
andl
xchg
jp
xchg
mov
dec
lock
dec
pop
pop
iret
or
lods
pop
push
clc
es
push
pop
ljmp
adc
or
push
dec
stc
daa
sub
mov
daa
hlt
dec
xor
adc
xor
dec
add
add
je
stos
jne
test
leave
xorl
enter
or
inc
inc
data16
js
fcmovb
nop
sar
dec
xor
add
lock
icebp
lea
mov
out
aaa
push
adc
push
pop
dec
ss
or
or
add
cmpb
in
mov
mov
ret
es
pusha
or
aaa
or
xchg
loope
push
xor
pop
addb
push
pop
push
in
xchg
or
addl
xchg
adc
mov
push
mov
pop
jmp
pop
inc
loopne
adc
fbstp
push
sub
jae
jo
and
xchg
dec
scas
out
inc
andb
xor
lret
and
inc
or
fsubs
sbb
cmp
das
mov
int
daa
cmc
sbb
rorl
xor
and
sbb
mov
add
rol
inc
decb
and
sub
std
add
icebp
adc
clc
add
or
jns
fldl
adc
sub
sub
rcll
ljmp
or
mov
fstl
rcrb
push
adcl
jmp
lahf
adc
aas
mov
insb
push
lea
loopne
and
call
out
imul
lock
push
add
mov
push
nop
sbb
mov
jo
aad
fistpll
je
add
loop
add
iret
xor
push
dec
or
sub
xor
mov
push
sub
mov
sbb
mov
sti
sbbb
insb
add
lea
dec
xchg
xchg
pop
addl
movsb
lock
addb
ret
pop
fdivrs
addb
and
add
leave
cmp
xlat
mov
xchg
in
cmp
push
add
sub
adc
or
adc
or
paddd
mov
int3
sub
fildll
mov
pop
or
pop
cmpsl
jnp
and
mov
sub
faddl
cwtl
and
lock
cmp
mov
push
lods
lret
test
loop
xor
sub
sub
or
aas
sub
xor
mov
das
das
das
das
sbb
sbb
aas
pushf
popl
fsubrs
mov
testl
mov
ja
sbb
xor
or
lods
inc
sarb
ret
repz
or
mov
negl
lods
mov
xchg
xor
test
mov
dec
adc
adc
adc
jo
sub
inc
push
pop
pop
pop
dec
cmp
je
mov
sarl
or
iret
add
popf
dec
in
adc
or
test
and
dec
xor
ret
clc
adc
jmp
shrl
or
loope
and
or
test
aas
sbb
mov
mov
xor
adc
jne
lea
cwtl
out
or
mov
sbb
rclb
fidivrl
fdivrl
pop
fstpl
mov
outsb
jne
das
fdivp
mov
and
and
xchg
add
lea
mov
push
sub
es
push
push
jno
mov
out
xor
mov
cld
ficoml
pushf
push
ja
push
push
xchg
mov
inc
jmp
push
nop
fildl
inc
inc
cld
push
xlat
push
adc
mov
mov
orb
mov
je
mov
mov
xchg
push
lahf
lret
and
adc
aad
pusha
ljmp
mov
lods
leave
sub
mov
pop
inc
and
cmp
idivb
add
or
push
roll
cmp
add
ds
push
and
and
jmp
sbb
je
inc
mov
add
cmp
clc
sbb
sub
idivb
or
ja
dec
jmp
and
sbb
or
hlt
cmp
mov
repnz
mov
jno
add
jns
mov
adc
mov
push
cld
or
xor
pop
ds
mov
inc
cmp
fiaddl
push
adcb
mov
push
out
fldenv
add
cmp
std
jne
mov
jmp
sub
stos
lods
cmpl
icebp
inc
orb
sarb
pop
cmpb
or
xor
and
dec
inc
inc
cmp
push
mov
test
aam
xor
push
lock
or
push
jmp
fs
addb
push
insl
pop
popf
xchg
ss
and
xor
inc
push
xor
sbb
inc
rolb
shr
movsl
push
push
cmp
jbe
adc
sub
les
pop
in
rcll
leave
inc
inc
in
mov
adc
push
aas
imul
add
mov
aaa
push
push
loope
sub
std
std
mov
loopne
adcb
cmp
lcall
in
bound
test
jne
outsb
incl
popl
jge
add
jb
mov
xor
and
movsl
dec
inc
push
mov
or
adc
mov
inc
data16
xor
inc
dec
jne
mov
inc
mov
aas
xchg
jl
imull
add
jle
lock
xchg
sahf
pop
les
or
inc
dec
jne
adc
orb
cld
movsb
mov
add
js
add
cmp
mov
add
bound
xor
daa
stos
mov
dec
loopne
adc
inc
rolb
cmpsb
push
pop
sub
aam
ret
adc
les
fisttpl
cmpsl
pop
lock
insb
loopne
sahf
mov
jns
fs
mov
lcall
cwtl
inc
adc
cltd
inc
push
shrl
push
push
sbb
cli
sub
mov
dec
adc
imul
fnsave
pop
xor
mov
in
mov
pop
and
or
jl
sbb
lret
pop
sub
jmp
xor
add
mov
mov
jmp
mov
push
imulb
jmp
adc
jno
es
inc
stos
jmp
xchg
xchg
xor
and
mov
mov
cmc
cmp
cmpl
popf
mov
std
and
pop
movl
enter
lret
cmp
mov
mov
pop
lock
pop
adc
pushl
inc
mov
cltd
mov
das
testb
inc
sbb
mov
and
insl
fsub
ror
sub
and
and
sarb
aad
mov
mov
pop
push
cwtl
sub
inc
int3
jmp
aaa
jg
or
out
jle
or
push
cmpl
sahf
clc
adc
pop
push
pop
inc
cmp
pop
cld
sahf
inc
add
sub
lds
decl
jne
sbb
push
xor
pushf
addb
xchg
add
sbb
mov
and
lea
sbb
or
push
or
ret
inc
push
pop
ret
jo
out
add
or
inc
add
sub
insl
xor
dec
xor
fadd
adc
leave
inc
dec
or
inc
dec
mov
sti
enter
pop
in
clc
add
add
repnz
xchg
push
sub
jle
loope
or
sbb
jo
loope
xchg
push
shrb
ds
cltd
inc
jb
dec
out
scas
cmp
sbb
rcll
xchg
inc
pop
mov
enter
mov
mov
ljmp
call
in
xchg
adc
cmp
daa
mov
pop
add
pop
adc
cmc
clc
pop
sub
push
sub
mov
or
sub
and
mov
lret
call
loope
and
es
or
add
outsb
ja
pusha
or
aas
push
pop
test
inc
push
call
mov
xor
bound
add
shlb
and
and
sbb
cmp
pop
lret
insb
push
cld
ret
pop
nop
fcoms
inc
inc
or
pop
mov
mov
push
lods
or
dec
bound
jno
cmp
cmpsb
insb
or
jae
bound
imul
push
cmp
cmp
outsl
xorb
adc
inc
in
inc
sub
pop
ret
xchg
dec
push
ror
in
pop
sub
enter
push
push
movsb
pushf
mov
or
pop
jns
dec
mov
rolb
or
fimuls
xor
not
les
push
mov
adc
push
rcrb
test
dec
clc
mov
sar
inc
and
sbb
sbb
xorl
inc
inc
dec
adc
cmp
mov
add
enter
test
jmp
cmpsl
dec
dec
and
mov
insb
and
pop
cmp
je
mov
hlt
lret
jle
or
mov
xchg
mov
sub
test
add
sbbl
or
add
pop
add
fisubs
cmp
jle
pushf
jnp
mov
pushf
cmpl
jbe
mov
rcrl
je
lods
jle
and
daa
test
cltd
jno,pt
push
int3
dec
shll
out
add
ljmp
fadd
mov
xchg
dec
in
in
es
mov
adc
mov
jmp
bound
pop
inc
push
xchg
mov
nop
stos
mov
xor
jp
add
adc
movsb
jp
das
mov
add
dec
je
lea
into
push
inc
push
sbb
mov
jae
push
xor
jle
sub
push
push
fimull
loopne
fcoml
jg
push
mov
mov
clc
or
pop
pop
popf
enter
shrb
pushf
popl
add
rcr
pop
ficoml
enter
dec
cld
adc
pop
dec
in
sub
aam
sub
jecxz
xchg
mov
loopne
mov
lea
push
cmc
jno
mov
cltd
sbb
add
push
mov
jmp
in
js
mov
jge
dec
rclb
xchg
nop
sbb
in
lahf
test
fiaddl
dec
xchg
add
insb
or
jmp
int
sub
mov
or
mov
jae
incl
jbe
loop
mov
pop
clc
pop
hlt
aas
ret
in
js
or
pop
pop
jns
pushf
sbbb
in
out
fisttpl
xchg
or
push
rol
jns
mov
pop
adc
add
fsts
ret
or
pop
sbb
in
scas
mov
pusha
xor
jbe
and
mov
loopne
pop
andb
enter
mov
repz
jnp
cmp
inc
dec
push
pop
add
mov
fs
pop
clc
mov
or
or
add
cmpsb
loop
push
je
push
push
sahf
xchg
pop
cs
push
icebp
inc
or
mov
in
cmpsb
icebp
cmp
in
add
movl
or
adc
scas
xor
mov
lret
jne
sti
inc
adc
movsb
sbb
dec
cmp
imul
jns
add
mov
dec
faddl
scas
into
cmpb
int3
mov
int3
test
call
aam
and
inc
dec
cmp
adc
or
or
add
add
or
mov
and
mov
idivl
aas
lds
and
sbb
imul
hlt
fdiv
mov
test
insl
and
add
daa
and
loopne
fs
mov
enter
or
inc
or
je
xchg
adc
mov
cmpsl
mov
add
cli
dec
cmp
jl
or
sub
jno
push
push
jge
jmp
lds
mov
rclb
xchg
and
and
jne
or
push
xchg
test
xchg
adc
and
add
adc
adc
push
sbb
push
xor
lock
xor
or
shr
pop
inc
imul
cmp
out
ret
addb
outsl
dec
sahf
cmpb
shlb
pop
pushf
xchg
mov
mov
movb
mov
shll
pop
inc
jle
test
ja
enter
mov
pop
sub
out
sbb
scas
push
aaa
push
xorl
mov
hlt
jecxz
jmp
loopne
jo
cmpsl
mov
push
inc
and
xor
shl
xchg
mov
push
inc
mov
pop
ljmp
mov
lret
xchg
hlt
test
cmp
mov
movsb
loopne
adc
or
add
ret
inc
add
add
dec
addb
or
enter
inc
test
dec
inc
in
sbb
lea
inc
cmp
stos
pop
xchg
shrb
xor
pop
push
pop
bound
int3
add
lds
inc
int3
push
imul
shl
push
inc
repnz
daa
jmp
and
mov
push
adc
out
shr
dec
lock
jmp
in
add
dec
ret
shrb
dec
mov
test
fildl
sbb
inc
mov
mov
or
test
mov
mov
mov
test
and
sub
inc
adc
jecxz
xor
sub
test
test
push
ljmp
xchg
ljmp
jbe
xchg
push
sub
push
inc
shrb
push
fldl
in
xor
inc
ret
inc
push
out
and
add
cld
imul
jbe
in
cmp
fidivrs
push
mov
into
sbb
clc
dec
xchg
push
jle
push
push
imul
loopne
dec
ljmp
mov
loopne
mov
push
loopne
adc
cli
add
add
inc
inc
jp
mov
mov
and
aas
and
and
xorb
sbb
and
push
push
push
fldl
mov
js
or
push
jecxz
mov
jo
out
sub
xchg
sbb
or
mov
orl
rorl
add
imul
xchg
dec
push
sub
orb
push
jg
sbb
lret
and
inc
jmp
mov
xor
add
jmp
push
iret
mov
add
xor
cmp
lds
lods
jo
xor
testl
je
xchg
jo
test
pop
or
test
int3
pop
sub
mov
in
mov
sbb
mov
jne
xor
cmp
mov
sti
lods
xor
push
or
leave
mov
leave
cmp
fbld
mov
ret
xlat
adc
icebp
or
mov
dec
not
stos
add
rclb
clc
in
jle
ja
mov
movsbl
mov
aam
test
push
push
sar
pop
mov
les
cmc
add
push
jae
cmp
push
pop
pop
lea
in
or
aam
clc
fcom
icebp
cmp
lret
mov
mov
add
mov
popf
popf
mov
pushf
pop
or
pop
add
cmpl
add
adc
cli
xchg
sub
push
dec
jnp
or
aam
jnp
ret
cmp
mov
mov
imul
lret
or
imul
cmpsl
cmp
nop
es
out
sbb
mov
hlt
stc
int3
int
push
cmp
push
or
inc
insb
je
inc
xorb
lock
test
adc
ds
loopne
sub
adc
sbb
pop
div
mov
pop
or
xor
mov
movb
dec
xor
in
xchg
xor
fs
int
cmp
or
imul
mov
cmp
dec
loope
xlat
je
xor
push
lcall
sbb
in
or
mov
sarb
lcall
jle
int3
jnp
cmp
adc
or
add
mov
or
inc
mov
fdivr
cmp
les
lock
mov
nop
and
push
ds
push
jae
mov
fwait
jp
jg
aad
cmp
pop
mov
jne
das
mov
adcl
ret
loope
mov
and
add
push
out
and
mov
fstps
sub
es
sub
cmp
ret
push
daa
or
mov
cmp
stos
mov
push
insl
cmp
push
loop
js
xor
negl
or
loopne
dec
lret
add
add
cmp
test
sti
cmpl
mov
out
imul
pop
aas
push
pop
sbb
ja
pcmpgtb
imul
xchg
adc
mov
pusha
sbb
mov
mov
xor
add
lea
jl
shlb
sbb
lods
xor
push
ss
loop
gs
or
add
addr16
jo
jg
push
outsb
je
test
int
sbb
xchg
je
or
cmpsb
popa
aas
add
gs
repz
mov
shrb
je
data16
movsb
sub
adc
mov
daa
enter
sbb
adcb
adcl
into
ret
pusha
sbb
adc
cmc
sti
movsb
mov
jmp
cmp
jle
insl
cmpl
incl
push
ret
mov
sub
push
xor
int
or
es
or
xchg
xchg
push
shll
inc
cld
adc
pop
sbb
mov
push
add
sub
js
inc
push
ret
loopne
mov
aam
and
lcall
pop
test
fisubrl
dec
subb
sub
inc
cwtl
push
jl
adcl
gs
test
xor
outsb
mov
dec
xchg
mov
addr16
decb
mov
add
pop
push
push
dec
imul
sbb
push
sub
sub
lret
sbb
adc
inc
fbstp
add
push
stos
mov
cmpsb
jmp
or
cld
mov
int3
je
cltd
mov
dec
sub
jl
mov
add
jae
xchg
adcb
in
rol
loop
pop
mov
mov
or
sbb
adc
add
dec
test
daa
cld
or
jne
and
lea
in
das
sbb
mov
inc
mov
fsubl
and
add
xor
cmp
aas
xor
or
xchg
clc
sahf
add
mov
outsb
rcrl
xchg
sub
inc
cmp
add
push
mov
dec
rcl
add
jmp
mov
movb
inc
jmp
cmovl
or
jmp
dec
or
xchg
jb
in
mov
repz
push
aam
cmpsl
insb
je
gs
fisubrl
data16
mov
sub
mov
jmp
test
dec
and
sub
sub
sub
sub
or
pop
shl
jb
or
push
jp
push
pop
mov
mov
popf
data16
lea
or
bound
dec
adc
sbb
sbbl
xchg
test
jne
jno
lds
bound
call
sbb
push
rorl
pop
push
xchg
nop
popa
jle
sbb
mov
sub
shlb
clc
add
cmpsb
lea
push
xor
inc
mov
push
and
mov
jl
testl
push
xchg
adc
ds
adc
movsl
daa
pop
mov
mov
dec
insl
mov
mov
add
jbe
sub
movsb
cmp
xorb
pop
mov
sub
sub
test
mov
mov
pop
mov
imul
cmp
mov
loop
push
fidivl
push
pop
push
xchg
shrb
enter
or
inc
mov
adc
mov
into
pop
int
idivb
lahf
mov
add
lea
or
cmp
insb
ret
xchg
add
repnz
test
into
and
rolb
and
lcall
adc
cmp
mov
cmp
test
push
testb
or
testl
push
pop
add
ret
jne
push
aas
out
out
mov
int
xor
pop
es
ret
pop
dec
call
dec
jge
sub
add
jmp
xor
cmp
pop
mov
outsb
push
pushf
adc
jmp
add
mov
jmp
push
fstl
clc
jo
add
push
dec
arpl
inc
inc
add
or
int
lret
pop
jns
adc
or
or
xchg
nop
loopne
push
lea
add
xor
js
adc
ss
pop
mov
mov
push
or
adc
enter
adc
mov
int3
fcoml
adc
mov
xchg
test
jg
loopne
inc
sub
xchg
clc
ja
cld
shr
mov
imul
push
ljmp
or
daa
push
loopne
sbb
cld
push
lea
mov
fmuls
test
clc
call
lcall
cmp
jbe
push
pop
outsl
mov
or
rolb
mov
dec
shr
lea
not
and
decb
jne
sub
jbe
and
adc
mov
add
push
pop
add
push
jmp
mov
dec
pop
add
add
and
or
data16
jg
movsl
or
pop
clc
and
sti
mov
shlb
and
sti
add
add
add
dec
pop
cmp
ficoms
mov
imul
pop
sbb
jno
jae
adc
jno
mov
shr
not
sbb
shll
pop
dec
add
xor
mov
loopne
mov
pop
lock
stc
xor
dec
add
dec
lret
pop
movsb
mov
adc
xchg
pop
mov
mov
sub
ficoms
mov
lea
mov
inc
mov
pop
dec
or
adc
mov
mov
inc
mov
mov
mov
lret
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
nop
cli
adcb
inc
xor
imul
mov
add
and
stos
pusha
xchg
xchg
pop
negb
loope
add
scas
jp
icebp
mov
aas
gs
push
or
sarb
andl
lahf
cmp
dec
adc
cmc
ds
add
and
push
mov
and
sub
mov
sub
fs
orl
insb
je
adc
sub
cmp
adc
or
loop
outsb
and
insb
das
mov
xchg
out
pop
adc
or
imul
and
xorb
and
popf
cwtl
outsl
push
adc
cmp
add
std
cltd
dec
stc
negb
les
test
sub
xor
mov
mov
scas
and
ja
lods
xor
adc
adc
mov
out
int
jmp
orl
loope
push
mov
sbb
dec
and
mov
shlb
fildl
ljmp
ret
imul
inc
clc
pop
aad
mov
int3
push
mov
dec
jne
or
or
push
push
pop
int
push
lea
jb
mov
inc
sub
shr
mov
inc
orl
orl
or
adc
jge
loop
inc
inc
cld
lock
call
adc
add
je
add
sahf
ret
dec
and
ret
nop
push
inc
jb
outsb
or
adc
fs
inc
pop
hlt
cmp
pop
mov
mov
lock
stos
incl
dec
inc
jne
or
lds
not
and
les
sar
jo
adc
imul
xlat
sub
pop
shr
xchg
mov
or
cld
adc
cs
dec
cmp
movsb
and
adc
jle
xor
shr
nop
sub
sbb
sahf
stc
add
mov
int3
push
sub
adc
fcomps
pop
inc
cmpsl
data16
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
mov
add
push
jns
test
outsl
or
into
add
xchg
in
pop
push
sub
adc
pushf
sar
dec
mov
int3
fwait
pop
push
hlt
lea
data16
ss
jg
or
imul
push
jns
push
pop
adc
lcall
add
nop
scas
mov
data16
and
js
sbb
sub
adc
inc
insb
xor
adc
fsts
clc
jl
and
lock
inc
or
mov
in
mov
inc
dec
insb
pop
xor
push
sar
dec
adc
add
pop
in
cwtl
sarl
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
jo
dec
ficoms
add
mov
loope
loope
push
dec
lea
mov
ret
add
mov
loope
cmp
mov
push
cmp
xchg
lret
lret
decb
into
mov
push
cs
rdmsr
cmp
mov
jns
dec
mov
add
inc
jp
insb
adc
add
loope
inc
fwait
clc
shll
cmp
push
push
push
jge
sbb
sbb
repnz
adc
pusha
and
aas
in
or
stos
je
add
cs
sbb
cmp
and
decb
xlat
inc
or
mov
lahf
or
fiadds
jne
mov
jne
jbe
mov
add
popf
outsb
in
in
or
arpl
push
incb
mov
xchg
mov
and
xor
gs
or
imul
pop
cmp
cmp
je
mov
in
cli
pop
int3
movsb
popa
and
inc
mov
mov
dec
pop
iret
jne
and
roll
mov
movsl
mov
xor
mov
jmp
jle
mov
and
jne
mov
push
pop
sbb
inc
test
inc
push
pushf
mov
mov
out
icebp
sbb
xor
loopne
xchg
dec
dec
inc
dec
add
xchg
sbb
or
ror
push
inc
cmp
ja
js
xchg
and
mov
decb
jp
fcmovnbe
jne
into
repnz
jmp
xchg
cmp
jp
mov
dec
pusha
dec
bound
dec
push
and
push
clc
into
xor
mov
dec
jp
fidivrs
mov
inc
mov
or
mov
or
jbe
test
ret
dec
pop
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
adc
jl
or
nop
xor
loope
aad
or
adc
aad
pop
add
shrl
or
inc
in
push
lea
rcrb
cmp
into
push
std
xor
and
add
cmp
cmp
cmp
loopne
sbb
mov
mov
or
xorl
jp
mov
pop
and
or
lock
push
add
xchg
push
or
or
add
daa
imul
pop
pop
rorl
lds
out
dec
popa
mov
mov
and
imul
data16
add
inc
pop
or
jnp
lahf
jge
push
out
inc
inc
cmp
cmp
sub
add
in
add
mov
out
pusha
lret
pop
test
add
adc
or
call
push
iret
jns
xor
mov
popf
lret
push
xchg
adc
adc
inc
loop
les
push
pop
fsubrs
dec
lahf
cmp
enter
adc
ficompl
fsubr
mov
cmp
adcl
dec
jne
div
leave
xor
pop
jne
push
in
adc
insl
and
sbb
std
pop
adc
dec
cmp
sbb
mov
stos
es
inc
or
scas
ja
cmc
inc
js
push
or
pop
call
inc
adc
inc
mov
jae
nop
ja
jle
xchg
sub
and
mov
dec
lahf
insb
int3
push
fs
pop
imul
add
mov
rol
sub
and
xchg
dec
int3
mov
call
rcl
hlt
mov
inc
mov
aad
xor
aas
sarl
push
enter
jle
outsb
iret
es
jge
jmp
xchg
out
xlat
movzwl
sub
in
int3
scas
jl
cs
in
je
sub
cli
cmp
mov
sahf
dec
inc
rorl
subb
xchg
imul
test
enter
inc
mov
sub
rorb
roll
add
inc
mov
jge
out
and
inc
add
jo
sbb
xchg
cmp
clc
dec
fisttpl
push
pop
pop
add
pop
xor
arpl
sub
ficomps
pop
jno
pop
sbb
orb
ljmp
ljmp
dec
ficomps
mov
test
icebp
sub
push
inc
pushf
or
aas
insb
jne
jp
loopne
in
sbb
adc
and
nopl
jg
add
sub
out
inc
cmp
xor
sbb
movb
notb
and
push
int
xor
jmp
int3
les
adc
and
int
push
mov
xor
sahf
aaa
ret
in
shll
lea
inc
enter
ja
xor
sbb
adc
test
aaa
je
movsb
test
movb
inc
or
call
sub
sbb
jl
adc
jl
test
dec
neg
in
cmp
lret
and
xchg
scas
dec
outsl
shlb
push
cmp
push
into
pusha
repz
enter
ret
inc
repnz
fimuls
cld
jnp
stc
lds
cmp
std
push
test
daa
xchg
lret
add
movsb
shr
and
mov
mov
and
hlt
sarb
lods
pop
repz
xor
push
lods
in
movsb
xor
add
xchg
jns
call
call
and
mov
in
mov
xor
cltd
shl
xchg
in
add
sbb
pop
in
jb
or
test
inc
cmp
mov
mov
je
mov
cld
enter
cmp
call
sysret
inc
sub
mov
out
adc
out
pop
xor
test
ds
in
xor
ss
mov
imul
daa
cmp
push
rolb
mov
psrld
ja
add
cmp
lret
mov
push
pop
js
add
mov
ret
xchg
xchg
lock
pop
jne
inc
jb
jmp
je
rcll
outsb
shll
jge
mov
and
lret
or
cmpsl
pusha
movsb
inc
sbb
test
rolb
mov
lods
paddd
inc
std
das
mov
or
adc
or
jb
sbb
sahf
add
xchg
push
adc
adc
mov
cmp
shr
lds
gs
in
ret
cmp
aaa
cmp
add
add
and
cmp
and
pop
out
insl
imul
push
mov
inc
add
xor
adc
xchg
mov
add
add
xchg
test
xchg
push
je
movsl
mov
add
inc
mov
repnz
dec
add
mov
add
xor
testb
dec
ljmp
dec
add
push
adc
adc
je
scas
std
rorl
sub
jne
add
hlt
jp
sbb
inc
cld
push
or
fadds
add
mov
nop
cmp
rcl
add
imul
or
pop
or
lret
nop
hlt
pop
or
and
not
and
int3
jno
imul
xchg
pop
mov
xchg
sub
add
sahf
xor
shrl
inc
clc
add
cli
sti
cld
cmp
sar
dec
inc
les
xchg
repnz
push
push
jl
cmp
loop
mov
je
pop
push
test
sbb
add
insl
add
sub
sbb
imul
movsl
pusha
mov
sbb
inc
push
or
popf
or
enter
mov
fstl
or
loopne
fldl
or
fldl
or
sub
dec
xor
and
dec
icebp
test
mov
push
leave
pop
jmp
mov
outsb
jns
cmp
rorl
mov
xor
cmp
das
cmp
xchg
dec
dec
xchg
dec
je
add
mov
fsubrs
adc
push
sti
fnstenv
mov
adc
xchg
insl
ljmp
insb
sbb
cmp
mov
jbe
mov
mov
cwtl
push
push
add
add
iret
fwait
add
test
jno
mov
mov
stos
cmp
test
cld
shlb
iret
and
in
pop
xchg
rcr
cmp
push
push
sub
nop
shl
push
jne
jo
pop
aaa
jne
das
and
inc
lock
mov
cmp
push
adc
jl
out
sbb
cmp
out
jns
movsb
fwait
push
inc
push
push
pop
andl
sahf
in
mov
loopne
fnstcw
cmp
inc
in
mov
or
mov
js
test
jg
push
jmp
xorb
in
jp
sub
jle,pt
push
jle
pushf
mov
pop
push
inc
or
nop
or
push
add
fs
faddl
lret
xchg
jle
or
popa
push
jmp
lods
adc
clc
push
fmull
call
inc
jp
cmp
inc
jnp
insb
enter
push
adcl
out
jle
testb
lcall
xchg
test
adc
inc
sbb
or
sbb
and
push
pop
push
push
adc
adc
adc
jl
xor
cwtl
js
mov
cld
and
scas
add
mov
mov
pop
cs
lock
call
cmp
cltd
sbbb
mov
lods
std
xchg
jne
inc
lock
movb
mov
or
push
clc
push
jno
cmpsl
ljmp
pop
or
pop
sarb
and
jne
dec
sbb
xchg
icebp
cmpsl
adc
pop
sar
lea
dec
xor
and
repnz
cmp
pop
loopne
add
mov
mov
lahf
dec
loopne
mov
pop
addb
push
fwait
imul
mov
push
pop
insb
add
ja
adc
cwtl
lret
mov
xchg
std
ret
andl
lea
out
inc
nop
leave
rorb
shl
sbb
loope
enter
dec
sbb
adc
dec
dec
push
pop
pop
cs
mov
add
cs
push
xor
iret
mov
xchg
sbb
cld
cmp
hlt
ss
or
adc
mov
xchg
cmp
lods
es
sub
mov
divb
or
inc
mov
dec
mov
cmp
lahf
or
mov
insb
jne
inc
sub
xchg
imul
aad
pop
and
rcrb
sbb
xor
jne
inc
jne
cmp
inc
mov
xchg
lret
xor
push
sub
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
imul
cmpsb
dec
movsb
pop
push
ret
fwait
test
mov
pop
push
lea
mov
xchg
dec
andl
inc
repz
jecxz
push
outsb
call
leave
jns
add
ja
pop
lcall
jo
adc
sti
push
inc
cmp
lea
std
mov
jns
mov
loop
jge
lea
testl
fimull
jne
xor
cwtl
xchg
imulb
adc
repnz
mov
adc
cs
jge
mov
mov
xor
jbe
or
jns
daa
mov
sahf
lods
ss
jbe
lds
cld
lcall
or
pop
jbe
push
cmp
adc
rcrb
movsb
enter
mov
sub
mov
sub
mov
pop
or
cmp
into
je
neg
pop
pusha
dec
adc
insb
jmp
outsb
xlat
inc
mov
jae
in
lods
sti
xchg
leave
dec
jecxz
xor
mov
sbb
addb
lock
aaa
addr16
xchg
xchg
imul
std
mov
adc
ret
sbb
sahf
xchg
in
add
mov
test
jmp
je
orl
cmp
out
fimuls
mov
call
enter
mov
call
in
mov
std
int
es
mov
fdivs
xor
daa
in
sbb
inc
mov
out
loope
jnp
nop
std
lds
sub
sti
lea
lock
into
lret
out
imul
mov
addr16
pop
sub
cmp
sbb
lcall
xchg
mov
std
mov
mov
test
lahf
mov
out
imul
test
xor
movsl
test
in
xchg
aas
dec
fisttps
test
sbb
adc
into
inc
inc
fldt
dec
xchg
iret
push
arpl
ret
js
inc
mov
mov
lock
sbb
mov
sbb
cmp
xor
xchg
dec
pop
mov
ljmp
mov
in
cwtl
cmc
push
popa
mov
fdivrp
popa
fcompl
dec
data16
push
sub
pop
enter
jmp
popa
dec
jmp
dec
inc
mov
push
cmc
lods
push
ss
ret
pop
lock
pop
dec
jno
xor
push
sub
jmp
int3
sbb
jmp
adc
and
ror
cmp
jmp
sub
mov
test
test
dec
test
cmp
repnz
jae
xchg
movsl
jns
lock
dec
inc
cwtl
dec
dec
cmpl
xor
les
pusha
cmp
sbb
adc
out
js
cmpsb
divl
loopne
push
inc
lret
jne
cmp
xchg
cmp
add
dec
hlt
or
jp
jne
fdivr
dec
jl
add
push
dec
pop
jno
push
xchg
push
je
inc
dec
cmp
adc
cmp
mov
jo
aaa
fsubrl
out
cmp
xchg
and
nop
xchg
cltd
inc
add
cwtl
outsl
adc
out
ss
das
xchg
mov
sub
mov
mov
sarl
adc
mov
aas
xor
aad
pop
leave
cltd
movsb
jb
mov
movsb
in
and
in
popf
xchg
push
mov
repnz
and
loopne
inc
lea
aad
pop
lea
adc
sub
cmp
ja
fisubrl
sarl
or
add
leave
or
js
mov
lods
shl
loopne
add
xchg
popa
enter
lock
or
push
xor
add
push
sbb
push
repz
xor
repz
add
jb
sbb
xor
jns
adc
push
jecxz
inc
call
and
xchg
push
cmc
popf
xor
in
pop
bound
add
adc
and
xor
repnz
les
imulb
or
loop
stos
mov
add
or
push
dec
ljmp
es
xchg
cmpsb
push
ret
pushf
and
or
xchg
adc
sub
fwait
jo
sub
xchg
es
fwait
lods
fdivrs
sti
fwait
cmpsb
pop
sub
test
pop
std
fwait
cmpsb
cmc
mov
insl
jecxz
movsb
repnz
mov
cmc
sbb
popf
adc
inc
clc
mov
and
int
cld
lcall
inc
inc
mov
lea
stc
pushf
pop
pause
lret
push
divl
push
pushf
and
and
clc
mov
loopne
test
dec
stc
xchg
rorb
aaa
ds
mov
mov
dec
sub
dec
xchg
movsb
inc
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
test
or
xchg
sub
addr16
adc
pop
je
stc
aam
outsl
dec
xchg
outsl
add
push
sub
aaa
dec
movsl
inc
add
lcall
mov
jmp
lret
inc
rcrb
pop
or
loopne
rclb
cmp
pop
xlat
fmul
pop
enter
fidivrl
or
adc
stos
and
add
rcrb
jl
ja
add
or
ds
dec
add
inc
movb
scas
roll
mov
adc
call
and
push
sarb
and
fsubl
jne
jb
loopne
nop
and
ds
test
add
add
sbb
data16
movb
shll
push
add
mov
adc
mov
test
je
mov
xor
sbb
aas
bound
ret
cmpsl
mov
sbb
fcoml
xor
push
sub
add
and
jle
popa
add
mov
and
mov
sti
stos
clc
push
mov
shll
fucomip
stos
bound
or
imul
or
cs
dec
dec
and
lods
or
outsb
and
jg
sub
pop
mov
movl
aam
xorb
test
cmpsb
sahf
out
inc
push
gs
sub
dec
xchg
mov
lock
xchg
add
clc
xor
lahf
cwtl
lahf
or
inc
sbb
dec
mov
adc
jns
xchg
adc
add
je
hlt
daa
clc
inc
push
cmpsb
fsts
jae
testl
cmpsb
jmp
cmp
fistpll
repz
and
cmc
scas
pop
add
xor
popa
and
and
mov
inc
jg
add
add
loop
imul
ja
enter
dec
jge
jmp
loope
xchg
les
repnz
and
jmp
lret
push
stc
clc
movb
mov
push
pop
daa
push
mov
and
flds
int
in
push
and
adc
push
push
inc
jmp
test
mov
fcoml
fcoms
xchg
movsb
stc
inc
jmp
or
sub
xchg
movsb
mov
das
sbb
iret
add
add
xchg
add
pop
sbb
dec
push
test
stos
add
xor
lock
xor
xor
hlt
jne
pop
push
rcr
aaa
or
push
in
sarl
sub
xchg
cmc
gs
movsb
shlb
fs
xchg
xchg
movsl
sub
sti
jns
and
sub
cmp
push
sub
jnp
pop
cltd
test
sahf
test
pop
xchg
gs
fcompl
adcb
loopne
addr16
stc
xchg
cmp
lea
and
wrmsr
pop
xor
sbb
xor
mov
or
shrl
cli
loopne
jae
pop
jmp
mov
imul
xchg
scas
xchg
dec
xchg
or
mov
sti
dec
adc
adc
lcall
sub
adc
xchg
push
inc
inc
bswap
out
dec
loop
lret
inc
cmp
roll
and
mov
dec
sbb
pop
jnp
xor
mov
loopne
mov
mov
sub
push
push
adc
ljmp
dec
or
or
mov
sti
jb
inc
clc
sub
adc
int3
lahf
and
mov
or
or
sbb
push
cs
push
push
cmp
push
and
mov
nop
adc
add
pop
jbe
test
or
popa
add
pop
mov
mov
adc
or
fcomi
or
mov
out
imul
ret
xchg
add
push
pop
jbe
ror
aas
push
rolb
in
cmpsb
hlt
cmp
cltd
lea
je
cmpl
xor
adc
test
pop
mov
or
stc
out
push
jl
jge
imul
jle
andl
cmp
push
inc
mov
cmp
jl
mov
mov
stos
dec
arpl
jle
cmp
fs
mov
sbbl
pop
orl
sbb
cmp
lea
mov
push
scas
push
cmp
aam
xchg
fs
lock
pop
pop
addl
push
sbb
or
and
xchg
pop
int3
int3
test
fwait
and
dec
mov
cmp
notl
pusha
mov
xor
imul
push
dec
xor
pusha
ret
and
adc
hlt
add
pop
fisubs
mov
add
add
jmp
add
or
mov
fiadds
inc
mov
ret
faddp
je
push
or
jno
jns
jne
fprem
add
test
fbstp
pusha
pushl
mov
pop
pop
add
add
imul
xchg
enter
xor
mov
jp
jmp
jmp
mov
mov
aam
push
or
cmp
pop
iret
xchg
fdivrs
pop
push
ret
les
mov
lds
add
fwait
sub
fimuls
or
mov
mov
pop
mov
mov
jne,pn
sbb
inc
mov
inc
ja
and
fwait
sub
adc
jbe
sti
mov
cmp
jge
mov
mov
and
cld
push
pop
mov
fs
cmp
iret
mov
bound
sbb
push
push
dec
jmp
fsubl
dec
push
mov
and
xchg
add
add
sub
sbb
push
adc
fs
and
pusha
add
push
lret
adc
das
jno
or
pop
retw
and
addl
or
mov
test
push
jl
adc
mov
add
test
inc
push
mov
mov
and
adc
iret
adc
loope
inc
push
fldpi
or
and
fs
shl
push
adc
add
and
loop
xor
inc
loop
adc
sti
add
and
or
add
ret
jne
insb
das
mov
inc
loop
cmpsb
out
cmp
je
and
out
and
adc
iret
repz
aam
xchg
pop
addr16
adc
enter
or
cld
sbb
sub
repnz
stos
add
aam
and
in
mov
xchg
cld
pop
inc
sbb
push
mov
cmpl
adc
and
xchg
sbb
cmp
and
cmp
ss
sub
xor
mov
out
lea
and
jle
testl
xchg
aaa
nop
jb
test
ja
xlat
pop
lods
sldt
push
or
imul
test
xchg
mov
inc
call
pop
xchg
mov
add
mov
stos
cmpsl
sub
and
mov
cmp
push
push
scas
mov
inc
push
pop
adc
fbld
ljmp
mov
outsb
dec
stos
sub
adcl
popa
mov
cmp
xor
pop
je
mov
sbb
dec
xchg
xor
repz
lahf
jne
adc
inc
add
daa
dec
insb
cmpsl
and
pop
add
xchg
mov
add
cmpsl
in
mov
neg
dec
push
out
mov
xor
push
pusha
add
rcll
add
adc
fdivs
add
cld
mov
inc
and
cmp
push
shlb
lds
or
cmpb
inc
inc
inc
mov
dec
xchg
or
les
push
xor
in
aad
test
fimull
jne
xchg
add
lret
or
cmp
or
ss
jmp
xor
push
into
ror
inc
inc
push
sbb
adc
add
in
enter
pop
je
pop
mov
pop
int
or
test
xor
inc
or
aam
pop
lcall
push
xchg
push
dec
stc
add
sbb
xchg
addl
sub
sbb
add
mov
inc
repnz
loop
and
test
jp
into
std
push
xor
inc
pop
lods
loope
cmp
arpl
sub
stos
pop
inc
popa
int3
xchg
and
push
js
add
push
push
insb
and
call
jmp
pop
rcrl
mov
adc
mov
orb
rcl
inc
movsb
aas
push
jae
mov
inc
dec
shl
test
push
arpl
push
cmpb
add
push
push
orl
nop
inc
ljmp
jecxz
mov
dec
lret
pop
shrl
movsb
clc
inc
adc
inc
inc
pushf
or
pop
mov
sub
lea
or
scas
popf
sahf
ss
jne
cmp
dec
inc
inc
or
jne
repnz
dec
fistps
push
sar
push
push
lock
mov
add
and
pop
sahf
adc
hlt
in
push
clc
adc
pop
js
dec
insb
aam
xchg
je
loope
mov
xchg
lahf
fsubl
jmp
push
inc
or
add
mov
jb
or
sti
or
xor
mov
lock
cmp
xchg
push
data16
int3
popf
xor
add
aaa
jle
or
push
pop
in
pushf
jbe
cmp
and
dec
shll
lock
lea
pushf
jmp
add
or
or
or
imul
and
push
and
test
frstor
or
in
cwtl
insl
ret
int3
js
into
mov
addb
sahf
mov
mov
out
mov
push
jl
roll
cmpl
add
pop
rclb
rcrb
add
nop
and
jl
jle
dec
andb
and
xor
adc
adc
pop
sar
dec
inc
popa
mov
cmp
adc
or
rolb
ficoms
push
ret
sbb
push
mov
or
inc
push
and
or
jp
push
scas
cmp
mov
leave
xchg
incl
out
add
cmc
stos
push
sahf
inc
add
add
or
fmul
inc
fdiv
adc
adcl
mov
mov
xorl
and
or
addb
xchg
adc
std
lret
push
ret
add
dec
and
movsl
pusha
add
xor
ds
out
mov
jne
cmp
adc
sub
cmp
and
sti
add
inc
ret
mov
loope
pop
sbb
notb
xchg
inc
or
adc
notl
sub
add
inc
mov
shlb
or
mov
push
push
mov
fiaddl
push
rclb
dec
lock
pop
or
mov
mov
dec
mov
or
adc
lock
adc
in
div
push
rol
loop
pop
faddl
enter
popf
dec
enter
add
adc
jb
rcrl
dec
loopne
dec
add
ret
sub
xchg
jge
test
lods
or
jmp
js
rorb
and
sbb
jg
adc
and
push
pusha
jo
sub
or
dec
fiaddl
call
ss
cltd
sub
sub
add
loope
add
jmp
outsb
roll
lret
sub
adc
in
pusha
shll
or
jo
addb
outsb
push
test
cmpsb
jge
hlt
rep
xlat
push
xor
ss
neg
add
sub
lock
push
out
add
loop
xchg
mov
pop
jo
push
or
dec
mov
xor
lock
bound
and
orl
mov
push
and
popa
nop
or
and
push
mov
pop
jnp
jp
jae
push
pop
js
or
jecxz
or
test
mov
mov
or
mov
or
jmp
cld
xchg
in
pop
or
repz
jae
lock
imul
pop
pop
xchg
push
mov
mov
pop
adc
or
adc
push
sahf
insb
xlat
jo
adc
js
jnp
jl
cmp
mov
test
jecxz
dec
push
mov
in
fisttpll
mov
mov
pop
and
add
mov
xor
cmp
adc
add
in
outsl
push
push
dec
adc
jl
push
and
jne
push
iret
out
test
or
jbe
jle
sub
outsl
ja
jecxz
xchg
mov
mov
or
sbbl
cmp
adc
mov
add
es
loope
xchg
and
test
into
and
call
or
sub
std
mov
dec
lahf
xchg
adc
sahf
or
pop
inc
ljmp
sub
lock
pop
xor
lcall
or
xor
xor
xor
in
mov
adc
add
jp
or
stos
mov
adc
inc
jmp
pop
negl
and
push
xor
vxorps
js
pop
stos
shlb
sbb
push
lods
sbb
jge
or
jno
and
pop
lcall
clc
lock
push
inc
lahf
mov
inc
cmpsb
insl
xor
pop
and
mov
adc
cmp
mov
pusha
push
add
in
pop
aaa
dec
loopne
pop
dec
sbb
push
jl
sbb
add
cmpsl
mov
or
xchg
mov
xor
dec
fcom
jl
mov
int3
inc
xor
nop
sub
iret
adc
insl
lock
mov
pop
xor
cmp
les
xor
xor
pop
test
orb
and
push
xor
sbb
mov
or
push
mov
cmp
xor
or
sbb
dec
jmp
ret
and
and
and
mov
repnz
imul
mov
add
sbb
jae
outsb
adc
add
sub
sub
adc
fidivl
pop
push
push
faddl
ds
mov
and
int3
xor
ret
mov
notl
jmp
adc
outsl
sub
jo
or
jae
adc
sub
inc
add
or
mov
in
inc
movsl
test
or
sbb
test
mov
ret
cmp
popa
movsb
lcall
cmpsb
push
jecxz
add
sub
or
mov
pop
sar
pop
imul
cmp
cmp
lock
and
pushl
jl
cmp
jg
inc
jmp
hlt
adc
ljmp
imul
add
shrb
nop
outsb
jge
aas
sbb
mov
adc
dec
enter
mov
push
push
fsubs
popa
mov
pop
addl
inc
push
sbb
push
mov
inc
xor
fcoml
jne
jnp
adc
cmpsb
mov
cmp
dec
int
push
ja
cld
and
jbe
fdivr
add
mov
clc
or
mov
lcall
pop
clc
or
leave
or
sub
add
pop
push
or
sub
mov
sub
cmp
push
les
stc
or
movl
repnz
push
cmp
push
cmc
movsl
es
repnz
out
xchg
push
clc
xor
aam
stc
adc
push
lcall
pop
mov
add
pop
or
xchg
xor
xor
stos
mov
test
or
ret
movsl
add
inc
loopne
push
dec
inc
xor
daa
addl
in
jle
mov
sbb
sub
lahf
push
pop
leave
or
mov
jg
cmp
push
insb
jae
test
add
or
jmp
je
pusha
insl
cmpsb
push
je
add
pop
push
add
mov
inc
gs
lahf
add
mov
lret
pushl
outsb
cmpsl
add
enter
xor
in
and
or
mov
jae
jns
fwait
jmp
sahf
xchg
dec
adc
mov
sbb
xor
cmp
dec
adc
and
and
data16
jne
inc
sbb
add
fdivrs
mov
sub
jmp
dec
pop
ret
xor
cs
lcall
dec
cld
mov
addb
or
or
imul
cmpsb
lret
inc
clc
dec
or
iret
add
je
jl
push
cld
mov
and
add
lret
call
or
jg
or
sbb
aas
and
enter
sbb
pushf
sbb
jo
jle
les
xor
cmp
nop
and
adc
and
rcrl
push
enter
jg
inc
or
lahf
xchg
lahf
fs
pop
jl
mov
leave
lret
dec
xor
leave
xchg
and
adcl
outsb
sbb
cmpsb
call
and
pusha
ja
stos
jo
jne
call
call
ret
gs
add
and
stos
inc
sbb
fs
jp
sbb
imul
mov
loope
fdivs
and
add
jecxz
clc
add
mov
lods
mov
add
jmp
mov
mov
sub
push
sbb
jmp
roll
cmp
inc
ret
pop
adc
inc
or
inc
mov
je
sbbl
or
and
add
insb
inc
jge
aad
fistl
adc
and
shlb
add
popf
shlb
sbb
sbb
push
pusha
cs
xor
mov
rcl
int
andb
ds
inc
cmpl
ror
enter
pop
cmp
sbb
or
ret
fsub
or
pop
xor
push
mov
ror
xchg
jle
cmp
add
adc
add
js
xor
push
movsl
fmuls
or
inc
loop,pt
pusha
sbb
add
test
and
pop
test
pop
inc
sbb
addr16
mov
ja
pop
enter
test
je
or
mov
lock
fstpl
push
cmpl
or
and
push
jl
push
jmp
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
bound
sbb
sub
pop
add
rolb
inc
shr
adc
cltd
dec
jge
push
sub
lret
sbb
push
repnz
shl
in
cmp
or
adc
movq
pop
leave
leave
rcr
push
das
adc
adc
and
add
jno
jge
mov
push
or
sbb
adc
and
inc
xor
or
in
push
test
in
fsubrl
and
add
jo
or
and
pop
jmp
push
icebp
enter
jmp
fcoml
sarl
mov
and
jns
jge
jle
test
mov
in
fdivl
filds
sti
xor
sub
sbb
and
lods
inc
rorb
xchg
push
or
lcall
xor
jb
or
mov
pusha
adc
testb
jae
push
cmp
jl
mov
inc
mov
lahf
sub
add
mov
pop
push
ret
jbe
or
add
out
testb
jne
push
add
or
outsb
xchg
into
push
ljmp
jb
movsl
inc
js
ret
inc
rcpps
push
stos
cld
sbb
inc
in
dec
dec
add
shl
stos
insl
inc
enter
icebp
cmp
pusha
aad
sub
mov
daa
pop
pop
xchg
into
dec
shlb
adc
or
adc
arpl
mov
lods
mov
mov
jne
inc
fs
inc
stos
push
xchg
xlat
cmc
jle
sbb
jne
jmp
fistpl
fadd
in
rcll
cmp
adc
mov
mov
mov
lock
pop
jle
xchg
inc
push
lds
test
or
inc
adc
scas
aam
mov
es
inc
inc
mov
push
or
cmpsl
fs
mov
cmp
add
jbe
daa
or
call
or
xchg
sub
imul
mov
outsb
mov
jle
aam
push
mov
and
pusha
jbe
add
loopne
sbb
insl
stos
outsb
or
ret
sbb
jg
sbb
orl
sub
jl
xorb
mov
xlat
fadds
rolb
xor
addl
pop
and
inc
dec
out
jb
mov
pop
mov
out
loop
pop
or
adc
test
push
ljmp
and
test
pop
add
call
or
add
push
aaa
lock
out
mov
es
lret
mov
clc
push
mov
ljmp
dec
push
and
and
test
cmp
mov
mov
inc
cmpl
nop
adc
xlat
je
cmp
add
adc
shll
testb
sbb
mov
dec
xor
movsb
add
cmpl
add
push
jmp
inc
in
inc
jnp
movb
out
mov
ret
jns
jb
cmp
add
push
push
or
add
push
pop
rcll
shr
sti
xchg
mov
jmp
das
xor
les
push
lea
mov
icebp
add
shlb
bound
insl
jmp
lock
pop
add
bound
push
es
jmp
loope
shrl
push
inc
pop
pop
pop
and
push
mov
in
mov
pusha
inc
push
or
icebp
fidivs
cmp
or
lock
js
cwtl
fs
shr
inc
push
call
push
push
inc
shr
rcr
shr
rcr
or
mov
jnp
div
pop
dec
adc
inc
mul
pop
jb
std
std
jae
dec
ja
jb
cmp
or
xor
and
lahf
cmpsl
add
adc
or
fiaddl
sub
jle
add
mov
mov
xor
push
mov
pusha
and
adc
fmuls
or
dec
vmovhpd
adc
jne
mov
sbb
fiaddl
lock
adc
mov
xchg
dec
outsl
cmp
push
movlps
imul
jl
push
push
dec
add
add
xor
jle
jne
lea
cmpsb
dec
jl
inc
push
mov
in
xor
sub
js
cmp
inc
in
sbb
sub
test
ret
and
cwtl
fstps
sahf
not
fdivrl
lea
xchg
adc
popf
out
adc
pusha
addl
ret
mov
add
lods
rol
lea
mov
inc
outsb
dec
push
vpcmpgtb
andl
dec
mov
push
mov
cld
sbb
les
sub
add
pusha
loop
inc
pop
push
mov
adc
stos
mov
adc
pop
stos
push
jb
roll
aam
jmp
mov
sub
push
xor
pop
sub
sbb
inc
test
cmp
add
mov
pop
push
lea
or
adc
btc
mov
mov
adc
out
popl
popa
cmp
ljmp
inc
loop
test
pop
rorl
shlb
js
sbb
adc
or
outsb
or
nop
cmp
mov
push
inc
dec
dec
and
pusha
adc
sbb
push
clc
push
daa
loope
loop
mov
clc
sbb
rcr
add
call
pop
sbb
mov
shrl
cmp
xor
add
push
sbb
imul
movsb
pusha
inc
test
inc
inc
pusha
pusha
cld
inc
sbb
sbb
movsb
sub
push
or
in
in
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
ss
push
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
aaa
cltd
fs
mov
cmpsb
fsubs
test
test
or
dec
add
add
loopne
jl
and
push
mov
imul
data16
call
movsb
and
adc
movsb
pusha
inc
lcall
or
and
and
std
fnstcw
and
pop
repnz
jmp
mov
ss
xchg
scas
jg
cmp
sbb
or
inc
dec
jne
je
js
out
nop
or
nop
inc
lcall
or
aad
pusha
add
add
sarb
in
add
or
add
dec
dec
mov
loopne
and
push
add
cmp
mov
adc
insb
sbb
pop
xorb
loopne
push
rclb
pop
sbb
mov
rcrb
jne
add
iret
ds
or
and
inc
and
adc
pusha
fwait
xchg
pusha
sahf
test
addl
xchg
xchg
imull
lea
je
test
dec
jnp
push
push
je
lret
dec
cmp
pushf
push
xor
ret
sub
sbb
mov
cli
cmp
fmuls
jo
jp
in
push
popf
mov
pushf
loopne
rcrl
inc
cwtl
daa
lock
cmp
push
rcrb
fcompl
rcr
aam
dec
pop
je
push
pushf
das
inc
sub
dec
enter
inc
push
dec
and
xlat
test
cltd
and
cmpb
addb
mov
stos
mov
lret
mov
xor
adc
add
add
cmp
adc
xchg
and
int3
add
in
out
sar
xchg
test
outsl
pop
pushf
and
loopne
and
shr
inc
inc
adc
sbb
stos
adc
adc
fmul
jmp
or
adc
adcl
dec
cmpsb
dec
ja
fiadds
imul
mov
mov
cmp
mov
dec
sbbb
andb
fcoms
divb
into
decl
loopne
adc
pop
add
jo
pop
push
lock
push
jb
push
mov
push
push
add
push
das
jmp
enter
lea
insl
xor
into
mov
loope
mov
push
and
cmpl
out
pop
mov
adc
rcr
jno
notb
xor
mov
inc
push
xchg
fwait
adc
mov
lcall
pop
mov
mov
adc
test
mov
mov
xor
push
cmp
xor
mov
je
gs
ss
sub
xor
movsl
sub
loope
and
push
lea
push
and
out
loop
sar
mov
add
sar
mov
or
or
mov
sbb
loop
divl
or
popa
or
adcl
popf
lods
push
adc
add
mov
inc
sbb
jmp
ljmp
add
pop
mov
cltd
outsl
jmp
and
ds
pusha
sbb
aam
dec
sub
rcr
xchg
or
aaa
inc
mov
pop
addl
pop
mov
pop
sbb
mov
inc
cmp
addr16
or
outsb
pop
cmp
in
lods
mov
and
mov
jmp
mov
mov
add
mov
test
jmp
out
push
mov
cmp
nop
loope
lret
add
cmp
fsubs
loope
lret
loop
cmpsl
cmpsb
lods
sub
iret
inc
lcall
rolb
jmp
push
dec
inc
or
fs
lea
push
and
lea
adcl
lods
jnp
mov
mov
inc
add
cmp
push
test
mov
jl
aas
add
mov
xor
sarl
adc
test
cmpl
scas
or
or
jo
jae
push
add
mov
jg
ljmp
sahf
cmp
sub
mov
xor
orl
shll
adc
jecxz
out
inc
int
push
or
mov
pushf
nop
adcl
dec
iret
inc
adc
clc
test
mov
clc
pop
cmp
or
jmp
cmp
fldt
mov
adc
push
sysenter
sbb
adc
andb
dec
rcr
or
add
ret
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
int3
push
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
dec
rolb
inc
add
push
cmp
jmp
push
mov
or
pushl
mov
lret
enter
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
xchg
out
or
loopne
cmp
and
jns
dec
adc
sub
add
push
add
nop
inc
aas
mov
loopne
xchg
dec
dec
stc
pop
mov
cmp
add
jbe
pop
xchg
push
xchg
sub
loopne
repnz
mov
hlt
push
or
addr16
scas
int3
out
movsb
out
mov
std
or
stos
jno
inc
jo
test
mov
sub
sub
jns
je
aaa
divl
mov
jo
lret
jmp
or
pop
sti
mov
pop
or
ja
push
xorb
bound
inc
ja
dec
rorl
fdivrs
jne
ljmp
enter
adc
gs
adc
xor
jnp
rorb
inc
inc
call
cmpb
sbb
or
or
movsl
rclb
dec
pop
pop
lods
pop
int
jae
repnz
test
test
and
mov
and
je
aaa
xchg
shlb
push
xor
pop
pop
mov
sub
loope
pushf
cs
into
ljmp
add
adc
jnp
clc
adc
or
jp
outsb
or
xor
outsb
inc
mov
add
andl
sub
xor
cmp
dec
pop
rorl
into
stos
jo
push
repz
inc
call
shufps
mov
adc
outsb
adc
adc
sub
pop
rcr
out
std
mov
adc
and
not
stc
add
dec
or
and
movsl
or
sbb
push
and
mov
inc
dec
sub
imul
scas
bound
mov
shlw
stc
mov
push
pop
inc
inc
in
iret
xor
ret
addb
mov
fstpt
add
nop
std
pop
int3
and
into
and
aam
sub
cmp
and
adc
pushl
or
sarl
cmp
mov
into
sub
ljmp
dec
or
ss
or
sbb
inc
fwait
pop
notl
cwtl
mov
pavgb
and
push
sbb
imul
mov
andl
xchg
fnstcw
ja
dec
cmp
mov
jge
addr16
pop
test
sbb
or
push
mov
push
pop
pop
mov
test
adc
mov
mulb
and
ja
push
lea
inc
sbb
int3
pop
pop
mov
cmp
sbb
cmp
add
jae
lahf
dec
add
xor
add
out
imul
lcall
rcr
jmp
js
loope
mov
scas
dec
cmp
cmpsl
scas
mov
inc
mov
jmp
push
and
sti
adc
lods
je
inc
cmp
shlb
sti
mov
add
js
pop
sbb
xchg
fisubl
push
add
cmp
adc
mov
enter
inc
mov
adc
mov
xor
and
icebp
cmpl
adc
xchg
test
lret
test
xor
fnsave
aam
ds
sti
inc
jmp
icebp
xor
movsb
packsswb
adc
jecxz
loop
jle
mov
dec
fidivl
mov
push
imul
movsl
and
cmc
cmp
stos
push
jb
cmp
inc
sbbb
jb
push
push
push
sbb
xorb
pop
loope
jnp
aas
rcrl
push
cmp
mov
cmp
cmp
jmp
sub
shll
lret
fsub
ja
cmp
cmp
lea
jne
add
sub
inc
sub
nop
fistl
adc
scas
cltd
rcrb
enter
mov
dec
mov
dec
pop
mov
or
push
cmp
jnp
nop
or
sbb
je
inc
push
pop
sbb
daa
inc
sbb
push
movsl
icebp
movsb
sub
sub
sbb
mov
fdiv
mov
mov
test
scas
and
jne
orl
mov
scas
xor
lock
dec
cmp
cmp
sbb
in
aas
repnz
das
adc
pop
fwait
and
inc
or
lret
dec
into
jl
or
or
test
mov
mov
jl
sub
or
pop
mov
mov
mov
and
jne
or
add
dec
inc
data16
or
dec
xchg
push
nop
add
and
adc
push
fmul
sub
adc
push
test
les
inc
jne
and
and
fcmovne
pop
push
dec
or
ror
imul
or
sar
and
pushf
movsb
int3
fwait
pop
push
mov
or
xor
sbb
push
mov
xchg
mov
xor
pop
sub
je
push
popf
lea
pusha
mov
cpuid
cmp
mov
adc
scas
and
data16
pop
imull
xchg
incl
push
test
jnp
addb
adc
inc
inc
dec
dec
call
js
sub
sahf
out
push
or
or
rcll
or
inc
or
inc
pusha
insb
push
mov
dec
add
and
test
and
jb
xchg
and
mov
or
nop
in
mov
fbld
shll
dec
xor
adc
or
pushf
sbb
or
jmp
xchg
fucomi
add
and
add
and
xchg
test
and
test
adc
cwtl
push
in
test
add
mov
add
fildl
pop
lret
sbb
or
andl
cmp
mov
call
jmp
mov
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
dec
and
jecxz
jge
sbb
or
cmp
adc
or
pop
dec
fdivl
or
loope
push
popf
mov
jbe
and
out
mov
add
fstps
aas
pusha
mov
pusha
loope
mov
xor
dec
and
cltd
push
inc
jecxz
pop
fstp
cwtl
out
and
pusha
pusha
jecxz
popf
cmp
sbb
ficoms
in
pop
movsl
test
adc
sti
mov
testl
fisttps
add
push
add
cmc
mov
push
inc
xchg
int
dec
jne
orl
mov
sti
xor
lcall
out
and
subb
xorb
sbb
jmp
outsb
sub
and
inc
add
adc
dec
inc
xor
inc
push
fldenv
rclb
or
pop
push
push
mov
mov
into
in
std
out
ret
pop
cmpsb
ret
inc
arpl
xchg
test
mov
insl
add
pop
sub
fsubrp
stc
dec
mov
adcb
xor
gs
xor
lret
push
and
cs
aam
xchg
clc
sbb
sbb
fldz
fnsave
push
add
mov
add
sub
sub
inc
dec
push
in
jmp
sub
push
mov
nop
psubusw
inc
test
int3
adc
div
add
insb
popa
xor
pop
dec
jnp
into
adc
call
in
fisubl
fstpl
mov
cli
mov
add
shl
or
cmp
inc
daa
dec
or
push
push
add
push
mov
hlt
add
jge
test
lahf
inc
xor
enter
in
sbb
inc
cmp
push
jp
dec
in
mov
loopne
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
aam
xchg
push
inc
add
mov
decb
push
and
mov
push
mov
out
jle
xchg
jb
jle
push
add
fwait
and
xchg
sbb
adc
test
xor
add
add
lods
test
add
and
adc
movzbl
add
mov
lds
dec
cmp
je
add
dec
fsubl
or
icebp
or
add
scas
sbb
push
inc
jnp
hlt
adc
or
or
sub
sbb
cwtl
push
hlt
push
push
or
jle
clc
add
outsl
fs
sbb
inc
test
push
add
lods
fsubrp
fwait
mov
jp
jno
mov
add
xchg
jo
popf
in
pop
add
or
dec
xchg
jmp
xchg
rcrb
sbb
pop
imulb
mov
mov
fdivrl
in
add
and
sti
pop
in
sbb
inc
sbb
mov
in
or
sar
cmp
loop
xor
es
les
dec
pop
cmpb
pop
push
add
push
popa
ljmp
sbb
and
inc
jnp
adc
adc
cmpl
push
fimull
inc
cmc
int3
pop
cld
ret
xor
clc
out
mov
sub
add
icebp
into
rolb
rorl
dec
cmp
dec
jecxz
shl
jne
jb
xchg
flds
push
cmp
sbb
lock
xor
push
rcrl
adc
sub
jno
ret
fadds
into
shll
es
pop
cwtl
in
mov
pop
push
test
cmovge
push
dec
stos
or
mov
cltd
push
sbb
shll
push
or
mov
subl
das
inc
mov
push
mov
fdivs
je
mov
iret
shlb
push
add
loope
imul
sub
shr
loop
pop
ret
enter
ljmp
mov
fsave
adc
roll
cmpsb
inc
fnstenv
cltd
and
mov
push
or
insl
or
push
mov
cmpb
or
sub
fwait
mov
adc
sbb
stos
mov
adc
and
stos
jo
aaa
jle
call
mov
dec
je
leave
mov
inc
cltd
inc
pushf
pop
cmp
je
sbb
add
ldmxcsr
xchg
adc
xchg
and
pop
or
popf
test
dec
or
repz
call
add
es
popw
add
jbe
imul
call
pop
gs
add
cmp
adc
je
push
stos
add
or
xor
test
push
pop
insl
push
adc
push
stos
mov
sub
das
jbe
cltd
inc
jmp
sti
mov
jnp
add
adc
inc
and
js
push
push
dec
adc
sub
xchg
push
ja
jo
lcall
gs
mov
aam
fnsave
inc
out
mov
sti
jbe
add
movsl
cmp
test
cmpsl
sbb
inc
jle
out
pop
adc
enter
or
add
loope
fadds
fsts
icebp
lods
inc
add
adc
pop
xor
sbb
pop
sub
rorb
cmpl
inc
inc
xchg
dec
xor
test
or
loop
dec
popl
cs
ljmp
or
or
ret
fiaddl
leave
imul
dec
push
adc
add
aas
daa
adc
add
adcb
cmp
pop
test
jb
cwtl
pop
test
jne
push
add
xchg
popa
jg
cmc
enter
stos
xor
pop
pop
shll
jge
movsl
add
jo
ret
ljmp
cmp
loop
add
dec
pop
push
dec
jns
data16
jl
xor
aam
pop
lock
inc
shl
add
lret
sub
pop
lea
movsl
mov
rolb
adcl
mov
pop
or
jmp
dec
cltd
insb
pop
and
mov
out
rcrb
scas
mov
push
into
icebp
mov
dec
jbe
lea
xor
repnz
or
jb
cmp
ret
sbb
lea
outsb
scas
lods
add
bnd
incb
jae
mov
dec
push
dec
mov
adc
cs
loop
push
fisubs
add
and
jge
push
aam
ret
test
es
lock
roll
mov
sbb
sti
cmp
dec
dec
stos
inc
mov
mov
mov
daa
imul
mov
rorl
xchg
mov
add
jae
dec
popa
je
out
and
clc
push
not
rcrb
xor
dec
mov
push
or
mov
enter
shl
push
test
xchg
and
jo
mov
mov
sub
sarb
cmp
adc
xchg
aam
and
inc
bnd
popa
int3
mov
dec
mov
mov
test
arpl
mov
les
xor
push
into
xchg
lds
add
cli
paddw
ljmp
test
adc
pop
xor
pop
lds
insl
bound
fiadds
enter
mov
or
inc
mov
bound
sti
add
sbb
mov
mov
inc
mov
mov
sar
lea
jl
ret
add
fcompl
andl
xchg
lret
out
int
ret
dec
loop
lea
dec
jb
jmp
rorb
loop
cld
sbb
jge
inc
add
add
pop
mov
rorb
scas
shl
nop
roll
inc
enter
or
sub
mov
es
movsb
xchg
fcomps
lock
cmc
stc
and
rcrb
pop
pop
xchg
or
or
push
xchg
mov
and
cmpsl
enter
add
add
enter
sti
or
sbb
lods
pop
adc
or
push
xor
or
xchg
add
add
les
iret
movsb
push
adc
inc
mov
fcmove
push
adc
dec
shll
test
mov
xor
xchg
sbb
mov
sub
mov
mov
xor
mov
pop
mov
or
loope
fidivrl
inc
jmp
mov
sub
or
xchg
add
sbb
enter
addb
ja
push
dec
jmp
fs
fucomi
add
mov
pop
mov
pop
jmp
xchg
call
add
aaa
cmp
scas
pop
jg
inc
sbb
jmp
cmpl
mov
adc
jmp
cmpsl
mov
jmp
lods
push
shrl
and
jg
mov
jle
adc
push
xor
or
jg
dec
xchg
mov
or
jbe
xor
pop
mov
add
sub
lock
fs
fiaddl
jmp
sbb
rolb
jae
inc
jecxz
fdivs
ret
or
push
pop
jge
scas
jnp
into
pop
cmp
test
imul
dec
loop
nop
add
jne
js
jae
enter
imul
sbb
sub
jge,pt
jmp
and
outsb
ret
shll
loope
or
outsb
out
push
sub
mov
or
mov
dec
loopne
dec
cwtl
sub
push
and
scas
mov
xor
cmp
test
mov
je
inc
scas
call
mov
mov
mov
mov
inc
add
leave
pop
cmp
loope
add
jge
add
testl
sbb
rcr
repnz
mov
dec
cmpl
jbe
push
jmp
cld
je
test
sbbl
and
sub
and
rolb
std
push
fsubr
jle
jmp
mov
jmp
push
cwtl
push
xor
add
imul
dec
push
hlt
push
stos
xor
add
push
out
pushf
xor
rclb
jge
xor
aam
neg
add
mov
loop
out
sub
cmp
cmp
mov
mov
pusha
jp
inc
dec
jmp
cmp
push
enter
mov
jbe
sub
xor
jne
lea
lods
inc
in
and
add
mov
sarl
xor
inc
mov
sbbl
stos
call
cmpl
jb
mov
dec
sbb
cmpb
sub
dec
or
mov
xchg
jno
out
mov
mov
mov
push
xor
and
and
and
adc
leave
push
rcrb
lahf
cmpsb
fldl
sbb
jae
or
or
push
push
mov
mov
inc
testl
jne
enter
andb
les
test
jl
faddl
jne
inc
or
cmp
int
fwait
out
cmp
jne
hlt
int3
add
jne
push
dec
adc
mov
mov
test
rcrb
xor
lcall
push
lea
bound
shll
mov
jp
test
dec
cld
jmp
icebp
dec
lock
push
lock
ja
in
push
add
sahf
sub
sub
xor
stc
jg
add
xorb
pop
and
jne
int3
add
shll
bound
clc
or
shr
push
rcll
and
pop
mov
jg
or
push
cld
sub
pop
jne
ja
add
notb
je
adc
mov
loopne
shr
or
mov
sahf
dec
adc
and
jne
insb
mov
pop
push
xor
mov
push
ja
aam
loope
test
or
ss
mov
jge
cmp
add
ficoml
negb
pop
adc
inc
inc
dec
in
fiadds
push
call
push
jmp
fidivl
and
jb
inc
jo
mov
push
add
mov
sbb
lea
test
or
movsl
fidivs
loop
add
jmp
scas
js
cmp
and
jae
jno
les
xchg
test
int3
add
or
js
lds
es
sub
add
notb
sarb
add
push
nop
cltd
lds
insl
and
shlb
ficompl
bound
inc
rclb
sbb
xchg
xchg
add
cmp
jbe
inc
add
push
xchg
lret
repz
cmpsl
inc
pop
mov
and
pop
sub
adc
add
mov
cmc
sub
rclb
pop
sub
jp
jne
cmp
xchg
mov
inc
scas
or
mov
mov
cmp
adc
mov
pop
cmp
in
sub
sti
scas
mov
pop
sbb
xchg
adc
add
cs
or
ss
xor
mov
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
sub
lock
add
out
call
or
cmp
add
pop
jae
pop
sub
je
out
clc
sbb
decl
call
mov
xor
sbb
loope
mov
sti
rep
pop
xchg
xchg
push
outsb
add
rolb
mull
leave
mov
movb
jne
mov
aad
and
mov
add
xor
gs
push
add
movb
cmp
mov
cli
jne
mov
rorb
or
add
adc
add
das
mov
xchg
call
sub
hlt
dec
setg
sub
mov
incl
push
mov
jl
sub
cmp
push
movb
inc
sub
movsl
das
inc
jle
add
lds
push
xorb
pop
in
add
pop
pop
inc
pand
loop
lock
lcall
jmp
push
clc
add
push
jecxz
xorl
cltd
jg
dec
add
mov
jmp
test
cmp
add
les
sub
scas
dec
mov
negb
cld
xor
push
or
add
testb
jb
fimuls
add
iret
xchg
test
lods
dec
out
les
scas
xor
cwtl
les
xor
add
push
mov
js
aam
aad
sbb
fistl
jo
add
out
outsl
pop
cmpb
fadd
jbe
xchg
clc
push
pop
lcall
aam
jo
add
sub
adc
lahf
adc
sbb
call
enter
add
cmp
xchg
push
sbb
adc
roll
pop
mov
nop
cmp
test
in
mov
push
repz
push
cmp
jl
cwtl
inc
std
add
lcall
xor
call
add
imul
pop
jle
lock
fldl2t
call
in
or
cmp
mov
or
fsubl
roll
and
mov
mov
enter
mov
push
add
lret
fwait
and
and
out
pop
sub
add
jo
sub
mov
push
ret
jecxz
inc
rorl
adc
push
sbb
pop
push
xor
push
mov
xor
add
xor
sub
jl
pop
pop
into
mov
dec
inc
xor
leave
and
add
or
or
cmpsb
movb
mov
sarb
popf
mov
dec
fwait
ds
neg
sbb
loop
jbe
jecxz
mov
jg
ret
daa
xor
or
je
rcr
and
out
nopl
or
and
mov
or
mov
loop
sbb
push
pushf
dec
adc
xlat
and
xor
adc
xor
insl
les
sub
sub
and
sub
shrl
push
movswl
les
sar
pop
sbb
data16
subb
mov
ret
mov
or
addl
shrd
push
jle
pushf
int3
and
cmp
ss
out
jge
sbb
clc
mov
insl
outsb
mov
xchg
stc
inc
cltd
pop
sarb
add
dec
jmp
xchg
clc
adc
mov
rorl
or
and
mov
incb
push
and
mov
adc
pusha
pop
cmp
xchg
inc
sub
adc
sti
xchg
inc
out
das
mov
inc
and
push
pop
sbb
clc
push
or
js
jg
jb
push
sub
or
lock
mov
inc
adc
neg
cmp
mov
lock
mov
inc
shll
ret
loop
xor
mov
xor
jbe
test
inc
lock
mov
lods
scas
mov
push
jg
lods
jb
pop
cmp
dec
fs
dec
inc
dec
sbb
jae
pop
or
or
or
daa
xorl
or
add
stc
push
adc
mov
pop
es
mov
ret
shrb
push
jg
inc
hlt
fsubrs
adc
loopne
mov
cmp
or
and
add
sub
fs
inc
mov
subb
jmp
lock
inc
inc
and
insb
sub
pusha
sarb
mov
jne
add
int3
jl
sbb
push
mov
pop
xor
push
stos
ficompl
out
into
mov
dec
or
adc
rclb
lret
mov
adc
je
sbb
and
je
push
rorb
in
repz
cmp
lahf
les
push
or
inc
lret
jbe
movsl
adcl
inc
rol
inc
push
mov
sbb
enter
pusha
mov
push
jmp
insl
cmp
cld
jl
loopne
shlb
lods
sub
ljmp
incb
adc
sbb
loop
mov
in
jmp
xor
ds
pop
dec
je
jle
gs
or
xchg
int
pop
data16
loope
fwait
bnd
add
je
inc
je
std
bound
sbb
or
xor
dec
test
pop
dec
adc
mov
ja
dec
xor
loopne
mov
cmp
sbb
and
movsb
and
add
jbe
call
call
dec
add
push
pop
clc
fstps
add
jl
cmc
xor
push
shl
inc
mov
jecxz
rol
sub
mov
ret
das
sub
inc
bound
insb
pop
arpl
js
jge
cmp
dec
push
popl
mov
inc
add
push
mov
mov
cmp
clc
jmp
mov
jbe
mov
pop
decl
cmp
push
jne
add
adc
shll
cltd
xchg
cwtl
les
hlt
fwait
stos
sub
and
mov
insb
push
add
or
sahf
xchg
pop
cmp
movsl
inc
lods
lahf
xor
lahf
mov
mov
push
push
inc
cmpsl
fs
add
popf
and
ret
lods
pop
mov
aaa
pop
cli
orl
add
mov
aaa
sub
push
fcmovnu
test
push
cmp
pusha
sbb
dec
sub
addr16
pop
xchg
xor
test
sub
inc
rcr
xor
mov
cmpl
xchg
int3
xchg
cmp
cmp
or
dec
push
mov
mov
push
inc
aam
cmp
imul
sbb
movsb
cmp
cmp
mov
test
popa
movsb
ret
xor
das
jmp
adc
mov
ja
lret
mov
jge
mov
add
pusha
mov
sbb
sub
dec
push
insl
es
cmp
mov
je
outsl
int
lock
shrb
out
pop
cmp
jo
jecxz
inc
mov
mov
cmpsb
adc
nop
add
adc
and
sar
or
sbb
dec
jne
push
push
jmp
xor
mov
or
jmp
testb
roll
ljmp
adc
adc
orb
aad
in
int
jae
sbb
sbb
shll
cmp
add
mov
or
push
sarb
xor
xorl
pop
or
fistpl
test
jne
fisubrl
push
incl
icebp
ds
or
nop
sbb
mov
mov
or
popa
xor
arpl
adcb
push
stc
aad
dec
movsl
movsl
jbe
xchg
iret
scas
ret
sub
dec
imulb
adc
lods
add
imul
cmp
mov
addr16
or
addr16
sbb
mov
mov
cmpl
or
fs
or
sar
push
add
push
push
fwait
inc
rcl
js
lea
xchg
push
movl
pop
xorl
xlat
push
enter
test
notl
pop
in
cltd
sbb
sbb
psubusb
xchg
jb
addps
imul
lea
add
lea
sub
push
arpl
and
xor
adc
add
daa
sbb
inc
jmp
xchg
inc
push
and
add
push
push
ret
and
sbb
xor
stc
inc
inc
test
push
sub
pop
ror
push
push
cmp
rolb
sbb
adc
outsb
testb
xor
jmp
mov
ss
lret
cld
jo
mov
or
xchg
inc
js
or
adc
pop
jmp
adc
outsl
fildl
cmp
pop
testl
shl
int3
pop
aad
fisubrs
hlt
mov
push
sbb
jmp
mov
loope
jo
xor
movq
adc
shlb
into
cwtl
pop
mov
pop
ficomps
push
xchg
sub
mov
dec
jbe
and
adc
adc
cmpsb
sahf
and
push
bound
mov
sbb
adc
sysexit
into
int3
cmp
scas
clc
xor
inc
jmp
push
ret
push
fisttps
add
adc
or
adc
adc
and
sbb
or
sbb
movsl
sbb
mov
ljmp
dec
xor
lea
dec
add
push
test
xchg
fists
inc
push
sbb
xor
es
loope
js
sbb
jo
pop
arpl
push
lock
ffree
and
sub
add
xor
jmp
pushf
pop
dec
xor
sti
and
xor
push
cs
adc
inc
jl
test
jb
jno
adc
jo
inc
aam
sbb
mov
imulb
mov
and
adc
sarb
mov
dec
cmp
lea
or
push
repz
add
or
daa
or
lods
sub
in
das
clc
ja
shr
shr
or
mov
add
add
or
bound
imul
add
in
stos
mov
test
mov
cli
sbb
rcr
pusha
lock
cwtl
add
bound
cld
push
stos
adc
out
jne
fnstcw
inc
fadds
ds
loopne
in
dec
add
lea
mov
shr
cmp
sub
jo
lods
or
mov
mov
push
addb
xor
mov
repnz
lcall
popf
xchg
or
stc
out
pushf
push
out
cwtl
clc
inc
jbe
mov
xor
daa
jle
in
or
es
orl
cli
push
idiv
push
or
shl
andl
xchg
push
aad
add
xchg
lods
test
xor
cli
stos
test
loope
sub
or
test
test
mov
sbb
lret
je
dec
call
pushw
or
push
nop
cmp
or
cmp
cwtl
pop
aam
popa
movsb
ficoml
fdiv
jo
ret
js
dec
mov
jne
push
add
negb
add
test
xchg
pop
cmp
test
push
cld
sub
jne
shrb
call
ss
adc
mov
adc
xchg
sub
testb
xchg
jp
and
mov
inc
dec
jge
push
adc
nop
hlt
sbb
test
xchg
mov
jle
shrb
cld
inc
xorb
jbe
jg
ds
jbe
adc
lret
mov
mov
je
sub
mov
lock
jl
cmpb
jl
xor
or
je
cmpb
idiv
fdivl
dec
sub
cld
inc
xchg
adc
xchg
push
fsts
sub
adc
cmc
pop
inc
dec
inc
push
push
mov
push
push
fsubs
sbb
loopne
inc
inc
adc
fnstcw
sahf
ss
and
adc
stos
adc
fisubrs
push
jmp
xchg
adc
adc
adc
call
pop
insl
andb
adc
enter
rcrl
xchg
dec
out
or
test
jne
xchg
jmp
add
gs
or
mov
inc
add
pop
test
je
mov
push
add
orl
mov
add
rclb
mov
insl
movsw
lods
scas
clc
xor
lods
outsb
rorb
inc
mov
add
aam
jo
xchg
xchg
push
push
nop
inc
dec
out
and
shll
pop
int3
lods
stos
or
xor
in
loopne
call
inc
inc
push
neg
neg
sbb
ds
sahf
pushf
sub
inc
sbb
mov
dec
sbb
aad
sbbl
adc
out
push
sbb
fcoms
inc
and
rcr
aad
icebp
sbb
inc
push
test
data16
leave
sbb
fsubs
pop
fisttpl
daa
sti
outsl
adc
pop
pop
addb
pop
push
mov
lods
rcl
ljmp
mov
cmpsb
rcl
call
cld
icebp
and
mov
and
aam
in
lock
je
push
or
je
cld
add
or
and
xchg
sbb
push
sbb
push
insb
add
in
and
inc
pop
ss
xchg
ja
cmp
cli
push
jb
gs
int
out
mov
jbe
jns
aas
test
sbb
sbb
faddp
ss
cli
jae
adc
push
or
adc
ds
pushf
and
rol
adc
pushf
movsb
push
adc
sbb
xchg
xor
xchg
stos
orl
adc
inc
or
cmp
push
fisubs
fidivs
arpl
and
sub
pushl
dec
out
adc
call
test
adc
movsl
movsb
popf
flds
mov
cmp
testb
das
cmpsb
dec
fists
or
je
xchg
mov
mov
scas
cltd
push
or
es
mov
je
test
std
repz
mov
jb
cmp
ja
add
cmp
adc
cmp
jne
call
shll
leave
adc
mov
inc
jb
idivl
pop
test
lea
add
cmpsl
mov
ret
push
sbb
ret
xchg
lcall
rorb
fbld
jno
and
cmp
xor
sbb
pop
mov
inc
notb
sbb
call
fadds
push
jecxz
cmp
aaa
imul
lock
int
nop
scas
cmpsb
in
dec
pop
in
jecxz
aaa
or
jo
test
jne
nop
push
cmp
xor
or
cmp
mov
hlt
jmp
mov
nop
mov
popl
and
dec
out
cmp
cmp
lods
rorl
push
pop
inc
dec
push
sub
xchg
cs
sub
xchg
movsl
xchg
push
aam
inc
adcl
and
pop
pop
add
xlat
sti
test
sub
mov
add
pop
dec
test
lea
inc
and
sbb
lea
cmp
sar
pop
mov
push
rcl
rcl
repz
repz
xlat
fcomp
and
out
sti
fstpt
sarb
clc
dec
stos
nop
data16
inc
add
adc
sub
mov
dec
add
ljmp
or
xchg
or
adc
mov
add
push
push
push
push
lock
mov
dec
jecxz
imul
cmp
push
jb
dec
inc
das
push
je
test
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
ret
sbb
pop
mov
jmp
push
ret
pop
sar
xor
mov
imul
xchg
mov
jmp
sahf
sbb
dec
lea
or
mov
inc
mov
mov
test
sbb
xor
jmp
adc
mov
fisttps
cmp
outsb
outsl
loopne
sub
mov
xor
test
sar
fisubs
addr16
or
jp
call
adc
les
mov
sub
adc
in
dec
in
or
fcom
inc
inc
roll
hlt
pop
ljmp
or
out
mov
mov
and
lea
pop
sbb
movsb
subl
pop
lcall
ja
gs
xchg
gs
addr16
xchg
and
mov
inc
divl
in
je
in
ljmp
and
xchg
or
push
mov
mov
jne
push
rolb
mov
rolb
push
mov
jge
ss
cmp
loopne
dec
xchg
dec
sub
xchg
mov
xchg
push
or
cwtl
mov
cmpsb
aam
push
sub
dec
sub
cmp
push
mov
sub
inc
xchg
es
mov
mov
add
and
rorb
add
jle
jle
add
sub
mov
add
or
icebp
sub
add
or
inc
fsubl
gs
push
lret
pushf
out
adc
inc
xchg
pop
mov
inc
lods
sub
pop
shrl
icebp
mov
hlt
out
mov
jmp
adc
mov
lods
test
push
lock
repnz
cli
in
sub
cli
inc
cli
div
pop
orb
xchg
mov
add
xchg
sbb
or
cmpl
outsb
sub
mov
sub
loope
aam
dec
cmp
data16
dec
xchg
mov
fidivl
fldenv
push
pmaxub
xchg
mov
jp
idivb
int
roll
lock
in
loopne
mov
mov
sub
mov
lcall
test
add
jae
notl
adc
fldenv
mov
sbb
xor
dec
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
xor
mov
adc
dec
xor
call
test
mov
lea
fcmovu
mov
xor
xor
dec
push
aam
inc
add
lods
rolb
jns
adc
add
movsl
add
sbb
and
cmp
imulb
fs
cmp
test
and
sbb
inc
orb
mov
ret
inc
pop
and
sub
inc
adc
cmp
jne
push
adc
in
add
and
lret
jb
mov
sub
xchg
stos
sub
sub
insb
sbb
movb
inc
cld
xchg
testb
push
nop
cmp
pop
cmp
fwait
push
cmp
adc
adc
shr
out
decb
sub
ljmp
call
pop
daa
and
icebp
inc
test
xor
fiadds
inc
insb
jle
inc
imul
and
inc
ss
loopne
pop
mov
icebp
loopnew
fdivs
arpl
mov
push
and
mov
mov
pop
sbb
rcr
cmp
out
cltd
loop
jae
sti
and
xchg
inc
aad
stos
mov
add
or
mov
add
sub
push
xchg
mov
faddp
dec
into
or
mov
dec
sbb
mov
sub
xabort
mov
inc
dec
scas
xor
inc
enter
cmp
push
sub
push
shlb
add
pop
xchg
loopne
subb
jne
cmp
sbb
testb
sbb
mov
inc
test
in
fimull
sbb
add
stos
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
add
dec
push
pop
jb
add
add
fadds
add
sbb
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ds
notb
inc
or
scas
xor
cmpsb
or
adc
and
ret
jmp
adc
mov
lret
shll
stos
inc
cld
sub
popf
movsl
popf
add
adc
fwait
push
lahf
cmpsl
outsl
fs
push
or
add
or
pop
pop
scas
xchg
sbb
cltd
add
adc
int3
add
subl
ret
dec
lret
push
xchg
pop
xchg
adc
lea
jg
addb
mov
mov
out
pop
cmp
xor
into
pusha
inc
jmp
and
mov
rcrl
test
xor
mov
ret
mov
prefetchw
testl
xor
cmp
or
inc
push
pop
jae
or
or
dec
push
imul
inc
or
push
or
cmpsl
inc
mov
mov
in
pop
pop
inc
mov
xlat
dec
pop
scas
inc
push
xchg
jp
add
sbb
popf
jmp
jne
and
and
or
dec
ljmp
push
add
or
in
and
inc
push
sub
inc
fldcw
inc
mov
out
sbb
sbb
inc
fsubl
adc
stos
jg
sub
adc
xchg
xchg
add
jmp
nop
test
into
in
push
add
stmxcsr
dec
xchg
test
bound
cltd
ss
or
add
imul
add
sbb
xchg
jle
jnp
call
je
and
sbb
inc
pushf
pushf
cmp
jg
into
into
into
sbb
test
pop
and
inc
outsl
lock
fstpl
sarb
push
pop
nop
pop
sub
push
cwtl
pop
mov
dec
int3
or
shlb
or
pop
xor
mov
adc
sbbl
dec
les
lcall
add
leave
lahf
pop
test
out
adc
add
or
jns
add
add
and
sbb
je
inc
lods
movsb
and
fcom
xor
sbb
sub
xchg
or
mov
lret
sbb
daa
lret
xor
loopne
pusha
push
xchg
push
or
add
gs
push
pop
test
hlt
push
ret
xchg
shll
ss
pop
dec
jl
fmul
and
xorb
mov
int
mov
nop
push
cmp
and
push
outsb
sub
pop
sbb
sub
push
mov
es
ret
fisubrs
scas
add
sbb
xlat
jle
and
daa
add
int3
adc
sub
arpl
std
inc
adc
jge
xor
xlat
push
inc
jl
or
jecxz
mov
loop
xor
dec
pop
push
int3
and
inc
sbb
or
xor
cmp
loopne
pop
add
cwtl
orb
out
inc
jmp
and
dec
xor
sub
add
or
loopne
dec
ds
je
or
rcrb
sub
cmp
adc
mov
inc
fsubrp
jmp
pop
sbb
in
cmp
lds
or
xor
mov
movb
jns
or
xchg
ud2
iret
jns
jmp
test
push
pop
sbb
push
or
pop
cmpsb
icebp
mov
aam
fists
mov
test
inc
mov
inc
inc
sbb
add
and
aad
cli
xor
push
mov
cmp
add
mov
jp
pusha
lea
rorb
inc
stc
sbb
in
sbb
pushl
jns
mov
je
test
push
fstpt
push
xor
mov
into
cmp
and
xchg
xchg
inc
adcb
call
inc
orb
out
add
sbb
mov
sub
and
shlb
sarb
fcoml
fdivs
fisttpl
inc
sbb
fsubrs
rcll
in
or
and
mov
insb
lock
pusha
push
pop
push
imul
dec
enter
rorb
and
je
add
add
dec
leave
jae
lods
push
shll
aad
and
inc
das
dec
push
dec
std
adc
loopne
test
adc
or
sbb
jo
cs
add
mov
xlat
scas
sbb
sbbl
cmp
and
and
push
push
mov
cmp
in
mov
mov
popa
sar
imul
ret
push
sub
arpl
call
inc
pop
stos
ss
pop
or
mov
mov
inc
aas
lods
jne
jo
movsb
adc
push
out
mov
push
xchg
cmp
gs
jbe
pop
sub
subb
js
push
sub
jo
push
test
outsb
pusha
les
mov
mov
cmp
lret
add
loop
push
fsubs
mov
add
loop
pop
xchg
clc
mov
dec
inc
jnp
orb
sub
cmp
mov
sbb
dec
ret
imul
fnsave
iret
in
aaa
pop
adcb
jg
xchg
arpl
push
jp
xor
push
lock
movl
fcoms
mov
jl
rorb
xor
mov
or
int3
pop
jbe
mov
adc
ss
jbe
dec
mov
pop
lret
jle
gs
add
fdivs
mov
jb
lock
jmp
dec
loop
mov
inc
add
ss
pop
xchg
outsl
push
sub
js
or
or
or
mov
mov
sbb
leave
inc
js
xor
jo
sbb
fiaddl
jae
inc
sar
fcompl
push
mov
sub
sub
add
mov
mov
add
mov
shll
leave
add
ljmp
push
and
lods
adc
cmpsb
inc
hlt
fcoms
pop
xor
add
add
jo
sub
mov
mov
test
or
inc
inc
ds
add
and
sub
xchg
nop
sub
lret
or
jns
push
inc
mov
orb
or
adc
les
add
fdivl
adc
jne
into
daa
ss
test
push
enter
cmp
sbb
and
test
aam
es
popl
add
mov
mov
dec
imul
or
inc
add
inc
mov
js
push
xchg
mov
and
ret
mov
and
jl
dec
sub
popa
stos
outsl
cmpsb
div
cvttps2pi
mov
or
jmp
xchg
pop
je
daa
or
and
insb
sar
push
nop
push
add
jmp
fsts
and
cwtl
xor
lahf
cmp
insl
xchg
or
dec
xchg
jmp
cmp
xor
ficoml
test
adc
pop
in
and
xchg
and
jmp
int
xorl
aaa
test
mov
iret
sahf
cltd
js
mov
stc
mov
das
cs
ljmp
sbb
ret
imul
lock
or
call
xor
inc
gs
loopne
ss
daa
mov
bound
outsl
in
push
xor
rclb
dec
mov
push
push
ret
pusha
mov
or
and
cmp
sub
enter
movsl
mov
out
xor
mov
shlb
enter
inc
fs
stos
or
or
jne
and
push
inc
jge
or
orb
fs
and
adc
dec
rcll
mov
testb
cwtl
xor
jns
in
dec
pop
xor
dec
pop
fdivr
sub
and
repnz
xchg
adc
jne
aad
leave
inc
cmp
cld
cmp
shlb
ja
pop
das
xchg
jl
adc
es
add
mov
clc
xor
add
movsl
jne
movsb
or
shrl
push
push
sbb
or
bound
pusha
xor
or
mov
pop
dec
bndstx
jae
and
and
mov
fstl
mov
or
inc
push
sub
mov
sub
test
enter
call
popa
adc
xchg
popa
les
in
stc
test
aam
xchg
in
push
xlat
test
pop
pop
popa
in
mov
or
in
movups
cmpsb
cmpsb
in
lfs
pusha
inc
mov
arpl
adc
fdivl
lock
in
cmp
jns
bound
push
dec
push
pop
hlt
add
pop
sbb
xchg
jne
ja
xlat
aaa
test
cld
cmp
hlt
rclb
movsl
fidivl
movsl
test
js
xchg
arpl
gs
in
jmp
and
lock
or
xchg
fs
pushf
mov
mov
xchg
mov
fcompl
insl
stos
cmp
and
fidivl
aam
mov
les
rcrb
gs
sub
jbe
xor
dec
sub
stos
ret
gs
movsb
cs
adc
dec
es
adc
dec
es
and
es
fs
xor
cmp
fs
dec
inc
inc
dec
fwait
xchg
dec
es
push
cmp
add
sub
sbb
add
mov
in
pusha
add
pop
xchg
sbb
int3
repnz
push
in
aam
add
cltd
popa
lret
clc
hlt
cwtl
data16
cld
clc
cltd
fs
ja
les
lock
mov
lock
rcll
hlt
add
jecxz
scas
addr16
push
add
popa
dec
je
in
test
mov
scas
jb
push
test
movsl
fdivl
clc
dec
aam
sub
push
mov
int3
aad
or
movsb
dec
dec
push
push
xor
nop
add
ret
push
fadds
call
in
loopne
aam
dec
xor
in
and
and
adc
aad
sub
repnz
mov
inc
cmc
xchg
add
imul
mov
std
xor
pop
scas
ret
mov
arpl
and
dec
pop
mov
sbbl
std
add
cltd
pusha
shrb
pop
call
aam
jg
in
shlb
sbbl
lods
and
je
mov
int3
imul
cmp
fsubrl
cs
or
in
add
insb
inc
pop
xchg
xchg
pop
sbb
call
or
aam
sbb
xchg
or
dec
call
pop
in
nop
dec
adc
pop
xor
call
in
sub
and
push
or
sbb
cltd
inc
add
imul
add
xchg
bound
jns
frstor
in
pop
jg
gs
leave
mov
adc
mov
adc
and
xchg
cli
jno
loop
inc
outsl
mov
subb
mov
out
sub
add
int3
out
push
jmp
dec
xor
out
sub
sbb
pop
or
push
stc
inc
jo
aam
inc
adc
in
sub
push
repz
in
in
fcom
int
fwait
mov
xchg
sbb
sbb
cmpsl
or
inc
mov
mov
jno
test
lods
cmp
cmp
mov
mov
cmp
enter
cmp
rcl
adc
bound
dec
insl
jae
in
sbb
xchg
dec
lods
addl
outsl
repnz
add
xchg
shl
add
jb
rorb
jae
mov
pop
jae
pop
jne
inc
in
push
call
cwtl
int
pop
enter
jae
call
xchg
je
aas
inc
mov
mov
or
cmpsl
or
dec
pop
pop
or
popa
push
mov
lods
aas
xor
imul
xor
adc
test
xor
aam
sbb
aam
push
ret
int3
xor
adc
mov
mov
push
arpl
aad
sub
xchg
gs
rorl
movnti
mov
std
fldl
outsb
orb
or
mov
outsb
mov
and
in
mov
pusha
jne
pop
test
dec
fdiv
pop
ja
ficoml
xchg
jg
pop
push
jecxz
mov
add
xchg
loopne
push
xor
addl
push
pusha
roll
and
jmp
mov
mov
outsl
adc
jbe
shrl
mov
aad
leave
mov
adc
cltd
fwait
in
fwait
pusha
inc
add
cmpsb
jo
adc
js
adc
inc
xchg
jg
lcall
inc
int
mov
add
out
jno
orl
or
mov
lods
or
sbb
jne
out
and
call
mov
in
lock
mov
dec
cmp
pop
js
push
movsl
push
dec
mov
mov
jg
xlat
lods
add
cmp
sbb
add
nop
adc
dec
movsb
nop
add
cs
lds
jp
aaa
xchg
pop
push
sbb
mov
xchg
fildll
mov
enter
mov
push
or
nop
lret
loopne
cld
mov
orb
dec
sub
cmpsb
sbb
jmp
inc
lods
sbb
and
sbb
shrl
ret
jnp
jnp
xchg
jp
rolb
lret
mov
xor
jb
xchg
or
dec
jb
add
mov
xchg
or
and
or
or
or
andb
xchg
mov
inc
leave
sub
adc
jns
rol
jge
or
sbb
lods
and
and
or
and
jle
sbb
adc
shlb
cmp
xchg
push
mov
sbb
and
dec
aam
int3
xchg
sub
xchg
popa
stos
push
in
cmc
stos
movb
pop
test
xchg
fs
xchg
mov
hlt
cwtl
jg
in
nop
push
cmp
les
leave
in
repnz
test
adc
pop
std
jo
fcompl
cmp
mov
pusha
popf
call
or
mov
dec
push
xchg
das
and
pop
lock
mov
adcl
and
in
xchg
subb
or
xchg
js
loopne
xchg
sub
loope
aad
adcl
adc
es
addb
das
nop
and
pop
adcb
or
in
push
mov
sub
jge
ficoml
call
and
jmp
push
rolb
je
loopne
int3
fildl
mov
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
cwtl
mov
cmp
dec
outsl
movsb
push
roll
inc
movsl
lret
xor
rolb
test
call
das
cwtl
cmpsb
cmpsb
jne
stos
in
xor
mov
dec
sti
and
and
push
mov
pop
jb
xchg
xchg
test
movsb
xchg
add
cmp
nop
pop
mov
pushf
mov
mov
scas
lods
mov
xchg
xchg
sub
mov
mov
inc
cs
xchg
es
lock
adc
jne
repz
test
xchg
sub
loopne
adc
int3
shll
test
iret
lods
mov
in
or
lahf
push
mov
add
push
in
sub
mov
push
pop
jg
cmp
insb
outsl
cwtl
sub
mov
and
inc
mov
and
call
mov
sti
popa
fmull
xchg
sbb
inc
mov
mov
mov
xor
lods
xor
mov
dec
add
stos
fsubl
pop
push
enter
mov
aas
pextrw
dec
outsb
and
aam
aas
rcl
jo
sub
jmp
mov
cltd
bound
clc
mov
fdiv
fsubrl
es
xor
ffree
arpl
ret
test
lock
or
in
scas
jmp
ret
mov
xchg
sbb
int
mov
inc
inc
xchg
fadds
ret
xor
std
xchg
nop
arpl
sbb
jae
inc
sti
sub
and
movsl
or
add
mov
mov
inc
xchg
in
cmpsl
adc
xchg
add
mov
push
enter
push
add
and
mov
sub
jg
or
dec
outsb
ret
mov
pop
ret
data16
inc
lods
cmp
sbb
pop
push
sbb
nop
call
scas
fdivrs
fmuls
xchg
mov
add
sbb
add
inc
mov
sbb
jns
push
in
mov
mov
push
inc
mov
push
dec
call
inc
and
les
adc
or
aam
mov
dec
aas
and
pop
add
adc
adc
loopne
lock
cmp
mov
xchg
lahf
ret
mov
xchg
das
test
sti
repnz
push
pop
aam
dec
sar
cmp
jg
out
lds
jns
mov
arpl
add
pop
shr
loope
add
lcall
into
enter
pop
jle
adc
push
jmp
or
cwtl
jne
repnz
fsubrp
aaa
test
fildl
fsubr
sub
mov
sub
les
xchg
mov
mov
imul
fidivs
in
xchg
lahf
sbb
xchg
fistpll
test
pushl
insb
sub
outsl
mov
movsl
push
jg
imul
nop
inc
pushf
dec
fwait
movsb
add
cwtl
jle
and
mov
sbb
mov
mov
or
xor
add
scas
push
roll
cs
outsl
or
xor
xchg
lds
movsl
leave
or
das
ret
push
xchg
or
sub
in
movsb
or
nop
or
add
call
rorb
call
jae
adc
xchg
pop
xor
or
cmp
scas
mov
enter
adc
dec
inc
mov
xor
push
xchg
mov
mov
jmp
jo
pushf
sub
inc
cwtl
es
test
cltd
dec
scas
adc
sbb
rorb
or
push
sub
add
lea
jno
mov
and
bound
dec
lret
or
mov
mov
mov
cltd
adc
lea
and
add
sbb
or
push
loop
insl
outsl
xchg
arpl
inc
sub
inc
rcll
jg
test
dec
inc
bound
leave
adc
daa
sub
ret
xor
enter
xor
test
sub
push
xlat
jo
and
imul
mov
pop
imul
nop
nop
or
pop
add
and
add
mov
xor
mov
mov
dec
ds
pop
dec
dec
or
pop
add
loopne
mov
aam
test
xlat
in
psrlw
enter
adc
test
adc
xchg
movsl
or
add
pop
push
pop
lahf
scas
or
aas
fsubrs
daa
imul
jo
mov
and
adc
mov
pusha
out
out
add
dec
cwtl
sahf
jg
pop
cmp
xor
or
les
mov
mov
seto
pop
xchg
nop
lahf
and
lahf
inc
cmpsl
cmpsb
inc
popf
mov
mov
test
push
or
andb
xor
sbb
icebp
test
xor
push
or
push
push
dec
in
mov
test
outsl
xor
mov
mov
mov
mov
adc
dec
es
dec
outsl
pop
push
adc
shl
mov
loope
mov
cmp
mov
int3
jg
or
subl
sbb
mov
or
mov
fcomps
enter
mov
adc
jno
test
jg
mov
sub
jne
aad
fsubrs
xchg
fs
mov
das
cmp
push
adc
jge
int3
add
push
pop
xchg
pop
pop
out
fsubrl
ret
jo
fistl
aam
int3
je
loopne
sub
movsl
decl
pusha
xlat
adcl
inc
or
dec
popl
inc
rsm
aas
mov
inc
or
dec
das
mov
mov
jne
dec
sbb
mov
mov
mov
adc
lcall
or
loope
out
inc
inc
push
sbb
scas
mov
pop
je
xchg
bswap
insl
in
pusha
dec
adc
sbb
mov
pop
cltd
and
movsb
cmp
sbb
add
inc
movsb
rorb
negl
adc
nop
xor
fs
and
and
push
jo
inc
faddl
cwtl
jbe
mov
out
xor
mov
dec
test
add
mov
add
enter
adc
xchg
add
cs
loopne
movsb
jb
mov
or
cwtl
dec
in
es
subb
xor
jo
lea
mov
sbb
stos
mov
or
test
pop
cmpsl
add
test
fcmovbe
adcl
adc
rcrb
ss
sub
bound
or
dec
out
repz
add
or
or
test
dec
subl
in
mov
cmp
mov
scas
test
flds
cmp
xor
pop
in
je
stos
pop
jg
sbb
std
in
mov
mov
xchg
ljmp
cmpsb
xor
push
push
pushf
xor
lods
jns
imul
leave
insl
andb
pushf
dec
nop
dec
cwtl
pusha
sub
stos
and
inc
xchg
imul
cwtl
fmuls
inc
jbe
fsubrs
lar
push
adc
xchg
cmpsl
inc
lods
inc
or
addr16
mov
les
mov
adc
jg
outsl
aam
sbbb
add
add
cltd
nop
inc
std
add
or
fs
or
inc
es
adc
and
cmp
inc
inc
and
roll
outsl
sysenter
xor
mov
int3
lods
in
or
add
pop
add
gs
add
das
push
sbb
pop
push
sbb
sub
xchg
xorl
les
cltd
sbb
adc
inc
nop
das
aam
in
andl
faddl
pusha
leave
cmpb
add
add
imul
cmp
dec
mov
xchg
invd
pop
add
add
sub
or
shrb
or
cld
gs
inc
movsb
dec
xchg
sbb
and
xor
adc
mov
mov
jg
mov
push
decl
ljmp
xchg
movsl
mov
add
sbb
mov
leave
mov
orl
imul
inc
es
out
adc
bound
xchg
ret
cltd
mov
add
or
sub
push
or
dec
rcrl
adc
pop
xchg
mov
add
add
cmp
shr
or
and
or
mov
push
add
mov
fsubrs
and
imul
adc
xchg
mov
pop
insb
mov
call
push
adcl
movups
adc
rorl
mov
dec
mov
orb
test
or
inc
or
hlt
pop
inc
or
inc
insb
stos
dec
jl
call
cmpb
movb
sub
xchg
jne
and
leave
mov
mov
adc
push
aaa
xchg
push
pop
inc
mov
rcrb
adc
inc
and
clc
stos
sbb
mov
lds
xchg
cwtl
mov
aam
inc
pushf
pop
and
push
add
pop
insb
push
xchg
add
adc
mov
test
mov
mov
sbb
sbbb
shl
dec
es
ss
jl
dec
xor
mov
cmpl
xor
and
push
pusha
push
sbb
inc
jo
shlb
cltd
mov
mov
xchg
fs
or
jne
add
rolb
cmpsb
dec
xor
les
and
mov
test
and
ret
add
subb
test
dec
adc
fs
dec
int3
enter
cwtl
jge
cmpb
cmp
sbb
and
and
jbe
aam
cltd
je
shll
lea
push
movl
mov
shll
adc
push
lahf
cmp
mov
mov
add
xchg
mov
lods
mov
jb
sub
dec
je
jns
or
int3
aam
iret
fists
jl
pusha
push
sub
adc
ret
leave
test
ljmp
ss
test
mov
and
inc
insb
sub
sub
adc
movsb
fdivrs
fmull
add
dec
rdtsc
dec
or
test
inc
shlb
inc
and
cmp
mov
rolb
cwtl
je
loopne
enter
add
sbb
rclb
pop
fsubs
cltd
int3
dec
cmpsb
pop
or
fcmovnb
or
adc
push
sbb
sub
mov
sub
mov
push
sbb
test
adcb
pop
pop
xchg
data16
cmp
pusha
xlat
fldl
sbb
test
js
nopl
lods
int
iret
and
adc
sub
inc
sbb
addb
popa
mov
fsub
loop
lcall
and
pop
call
in
subb
add
shll
adc
xor
jb
into
push
lcall
pop
clc
aas
sub
add
cmp
cmp
jae
pop
lcall
scas
fsubrs
out
or
pop
mov
hlt
lock
lds
mov
in
call
mov
scas
push
push
adc
adc
cmp
xor
cs
cld
popa
jb
sbb
or
fcom
and
enter
or
aam
push
pop
add
inc
repnz
in
aas
add
pusha
rorl
mov
adc
and
adc
nop
ret
adcl
jbe
cli
scas
fs
add
dec
pusha
daa
cltd
in
hlt
add
adc
js
lods
inc
mov
cmp
pusha
sti
mov
imul
cmp
xchg
shrl
sub
inc
mov
or
pop
cs
shll
push
pop
inc
and
cli
sub
scas
call
es
mov
lods
pop
dec
adc
iret
mov
cwtl
push
rclb
and
frstor
ror
es
adcb
les
adc
fwait
xchg
adc
rcll
das
decl
loop
inc
test
movsl
call
imul
add
push
call
inc
jmp
push
pusha
sub
add
nop
inc
push
lods
movsb
adc
shrb
push
or
sub
sbb
fsubs
xor
mov
add
imul
cmpb
mov
jecxz
popa
sbb
push
jg
xor
idivb
mov
push
mov
pop
add
pop
push
mov
and
add
lock
in
jle
adc
add
pop
sti
cmp
int
pop
push
enter
xlat
mov
inc
mov
arpl
add
adc
adcl
mov
les
push
sti
andl
imul
test
out
jo
adc
push
xchg
stos
js
cld
mov
adc
and
sbb
rclb
lock
test
repz
dec
sbb
outsl
adc
aam
mov
fs
mov
gs
push
scas
mov
fiaddl
jl
mov
mov
sbb
leave
add
iret
repz
add
jo
out
lcall
jnp
jbe
mov
and
push
inc
pop
sub
scas
cmp
insb
lds
rcrb
xchg
xchg
push
in
aaa
sub
push
mov
inc
out
inc
jg
dec
sub
ljmp
add
pop
enter
pop
orb
jnp
mov
add
and
iret
imul
in
push
cmpb
cmp
insb
pusha
pop
hlt
ljmp
push
push
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
daa
mov
push
sbb
jg
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
inc
pushl
xor
sub
pop
pop
das
mov
rcll
xchg
adc
clc
push
or
cmp
rclb
cmpl
jnp
iret
imul
push
in
daa
out
cmc
push
iret
jnp
iret
mov
out
rolb
rorl
outsl
in
ljmp
gs
outsl
arpl
fs
out
sbb
push
dec
imul
mov
jne
push
gs
fidivrl
cs
insb
push
bound
and
pop
popa
je
outsl
outsb
push
andb
adc
cli
mov
jnp
popa
rdpmc
add
ljmp
sub
add
mov
fucomi
mov
inc
js
je
jb
gs
cmp
or
outsl
add
ret
out
jb
add
add
add
je
push
roll
inc
jne
jb
mov
pop
imul
dec
xor
xor
out
mov
cmp
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
insl
fmull
dec
outsl
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
mov
insb
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
insb
adc
xchg
jae
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
xor
daa
push
scas
clc
sti
sub
sbb
dec
js
push
jne
into
cmp
insb
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
dec
jno
fcomip
mov
adc
cmp
pop
fldl
sbb
dec
faddl
sub
xchg
or
and
sub
sub
cs
movsl
cmp
cmp
ds
inc
sbb
das
pop
pop
je
fcomi
cmpsl
test
jnp
jge
jg
cmp
inc
mov
cmpsl
test
cs
and
push
fdivrl
dec
movl
jge
push
inc
insb
jae
cs
cmp
jne
inc
sbb
jo
inc
mov
xor
leave
fidivs
insl
and
jb
jbe
dec
push
push
fcmovnu
into
sbb
inc
sbb
lock
mov
and
add
xor
sbb
dec
cmc
stos
outsb
push
jo
imul
insl
test
hlt
lcall
jo
test
lods
xchg
idivb
and
mov
and
imul
sub
push
insb
xorb
inc
fnstenv
pop
popa
and
daa
mov
jne
pop
cmp
insl
and
insl
push
xchg
sub
insl
inc
cs
xor
outsl
or
dec
rclb
jo
lcallw
out
mov
add
xchg
and
or
jnp
or
imul
push
out
pop
or
fs
adc
cltd
xchg
mov
je
mov
and
push
ds
pop
adcl
fidivrl
add
and
mov
jns
push
daa
sub
cld
dec
inc
and
das
arpl
cmp
arpl
dec
popa
sub
gs
lret
mov
fiadds
inc
xchg
inc
jns
push
insb
imul
rcrb
push
loopne
lcall
nop
andl
inc
mull
push
push
fistps
sub
lcall
sbb
rorl
pop
fs
xor
hlt
adc
sbbl
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
adc
add
inc
sbb
push
mov
jne
push
gs
push
xor
mov
je
int3
inc
jle
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
cmp
xor
ljmp
imul
loop
fsubrl
outsb
popa
pop
or
mov
rorb
xor
push
push
leave
nop
inc
insl
imul
call
pop
xchg
cmp
xorl
lods
xchg
cmp
fstpl
and
pop
push
cmp
addr16
jae
sbb
scas
xor
fsubl
inc
jo
jo
sub
sbb
lock
push
imul
xchg
add
pop
dec
jmp
jo
mov
and
cmp
cwtl
ja
pop
imul
out
inc
inc
and
dec
data16
ret
jg
lcall
loopne
mov
cmpb
dec
cmp
rol
das
lret
jno
lock
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
shrl
cmpsb
gs
mov
dec
add
xor
pop
jle
push
jg
js
jae
je
xchg
pop
addr16
dec
pop
add
add
sbb
inc
xor
jne
sub
xor
sub
cltd
xchg
adc
adc
add
add
add
add
and
xchg
pop
push
cld
push
pop
pop
or
aaa
ds
push
pop
hlt
and
or
jge
out
pusha
push
js
or
sub
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
aas
cwtl
insl
into
jo
add
dec
xor
sbb
push
cld
xlat
push
stos
int3
js
jo
in
fisttpl
pop
sbb
daa
xchg
lea
mov
and
leave
and
les
inc
pop
push
adc
inc
or
mov
test
dec
cmp
and
dec
cmp
cs
dec
cmp
test
je
push
sahf
push
pop
dec
pop
push
lods
mov
fimuls
int3
mov
push
push
xor
and
jb
sub
and
add
test
and
add
addb
call
and
xchg
add
and
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
or
inc
iret
repz
add
clc
loopne
loopne
enter
cmp
mov
mov
dec
adc
stc
cmp
jnp
push
in
test
loopne
jl
cmpsl
cwtl
mov
loopne
iret
repz
mov
repz
jmp
push
and
or
jge
ret
push
fdivrs
dec
repz
in
pusha
lock
pop
push
pop
mov
push
int3
les
dec
push
dec
push
inc
repz
repz
cmp
xor
iret
repz
sub
and
adc
sahf
cmpsl
stc
cmp
hlt
sarb
jl
cmp
sahf
out
idiv
fiadds
mov
sahf
out
inc
inc
cmp
add
cmp
repz
loopne
movsb
out
cmp
jl
sub
in
ret
out
sahf
rcrb
adc
or
mov
shlb
jns
push
xor
mov
jb
add
adc
pop
push
push
lret
jae
fs
sbb
ljmp
push
shrd
sub
add
pop
loope
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
test
mov
push
out
sbb
dec
inc
dec
xor
inc
dec
dec
xor
idiv
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
out
push
das
adc
sub
adc
adc
popa
into
mov
mov
scas
xor
jnp
inc
loop
mov
ds
pop
adc
jnp
rcrl
lret
sbb
jb
xchg
jge
arpl
adc
pop
dec
scas
jp
adc
fdivp
das
in
scas
mov
mov
and
cmp
dec
imul
dec
cmpsb
iret
lret
add
inc
mov
mov
sub
fadds
pop
sahf
fwait
ss
sbb
pop
jns
ds
ljmp
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
das
cmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
mov
pushl
xchg
lret
sahf
icebp
mov
cld
or
cmp
jle
inc
mov
ljmp
mov
ds
dec
je
lods
loope
sub
xor
sbbb
or
icebp
and
in
pop
pop
repnz
add
mov
and
es
mov
jle
add
mov
mov
or
push
ss
mov
out
leave
ljmp
jg
test
notl
push
push
push
inc
inc
or
outsb
jbe
and
inc
and
push
shrb
inc
test
test
aaa
xchg
sbb
test
cmp
jae
hlt
inc
dec
push
dec
push
jg,pn
ljmp
push
into
mov
cmp
dec
inc
pop
daa
pop
cmp
cs
sub
pushl
pop
push
inc
push
adc
dec
xor
push
daa
sub
sbb
xor
and
sub
inc
adc
sbb
dec
pop
xor
dec
dec
inc
daa
xor
fldt
push
sbb
adc
push
test
fwait
sbb
inc
cmp
and
cmp
and
dec
dec
dec
dec
das
in
fistpll
push
adc
inc
aas
xor
andnps
sbb
and
lods
inc
nop
or
dec
ljmp
aas
push
push
cld
inc
add
pop
push
dec
cmp
add
dec
and
jge
dec
pop
adc
sbb
cmp
pop
push
sbb
xor
jg
std
cs
and
es
dec
es
xor
aaa
cmp
aaa
xor
cmp
and
inc
mov
or
push
and
or
sbb
aad
adc
push
adc
xor
sub
inc
dec
sbb
es
and
xchg
lea
pop
cmp
pop
adc
inc
mov
and
lock
sbb
push
das
adc
xor
sbb
push
pop
fidivs
fisubrl
sbb
pusha
imul
and
dec
pop
and
sbb
sbb
imul
mov
push
cmp
das
dec
xchg
lock
cmp
adc
js
sub
add
push
push
cmp
push
mov
and
jg
pop
movsl
cmp
es
pop
push
gs
mov
xchg
dec
pop
add
cmp
pop
add
push
cmp
sbb
and
push
dec
mov
sbb
push
or
or
fisubrl
adc
adc
adc
jo
outsl
shll
pop
cmp
xor
mov
inc
pop
adc
adc
jnp
xchg
filds
fs
adc
dec
cwtl
in
push
cmp
xorb
mov
nop
inc
xor
xor
push
mov
rclb
aas
int
and
xor
outsl
jg
out
cmpsl
push
pusha
pop
push
mov
lahf
jnp
scas
push
push
xor
and
orb
push
idivl
das
hlt
adc
mov
and
cmp
or
int3
jp
cmp
outsl
insl
mov
pop
xor
adcb
mov
or
push
popa
and
add
imul
jle
xor
cvttps2pi
in
loopne
push
jbe
push
and
dec
idivl
nop
mov
fimuls
into
repz
xorb
mov
andb
push
push
jnp
idivl
and
ds
lods
push
or
push
push
pushf
fwait
push
pop
sub
daa
pop
les
sub
pusha
push
dec
jp
xor
adc
adc
cmp
fistps
add
cmp
sub
cmp
adc
sub
js
inc
jbe
mov
dec
pop
or
sbb
inc
push
pop
cmp
iret
stos
mov
nop
das
or
jmp
cmp
jmp
push
and
adc
lcall
jmp
icebp
jecxz
arpl
cmp
and
popf
pusha
jbe
inc
push
pop
sub
loopne
sub
and
dec
push
inc
cwtl
or
lods
sub
pop
mov
jnp
pusha
sub
sbb
mov
and
xchg
adc
pop
cmp
inc
sub
mov
mov
js
adc
cmp
dec
out
xor
ja
ja
ja
xor
daa
cld
xor
or
pop
adc
jecxz
dec
add
xchg
xchg
shlb
fs
cmp
mov
scas
cmp
sbb
cwtl
cmp
out
sbb
or
sub
xchg
out
jl
pop
mov
sbb
cmp
adc
sub
mov
and
dec
adc
sub
gs
jae
inc
and
in
and
push
daa
sub
lock
and
pop
mov
iret
adc
inc
cltd
daa
xor
fidivrs
or
sub
or
test
cmp
and
popf
jbe
xchg
stos
pop
adc
and
xor
jnp
adc
inc
push
sbb
push
popf
inc
sti
rorb
and
add
xchg
outsl
inc
sub
loope
inc
xor
cmp
in
or
mov
push
add
and
and
test
inc
and
inc
pop
or
or
roll
xor
push
daa
mov
in
or
xor
pop
dec
pusha
addr16
mov
es
push
imul
push
scas
and
out
inc
loop
jmp
xchg
ret
into
scas
daa
int
xor
in
push
mov
push
rorl
mov
cmp
dec
sbb
push
xor
jmp
xor
xor
dec
iret
dec
pop
movsb
mov
mov
lcall
sbb
push
scas
incl
xchg
sbb
lahf
mov
dec
repnz
in
adc
ja
mov
adc
fistl
sbb
dec
pop
lcall
add
sbb
push
sbb
sbbl
adc
push
sbb
in
dec
lret
mov
andb
es
faddl
cs
lcall
cmpsb
adc
and
push
pusha
dec
add
rcrb
add
mov
push
mov
negb
or
sbb
and
inc
daa
pop
lcall
stos
sub
push
and
xor
sub
push
or
or
add
add
pop
pop
daa
jnp
jbe
in
push
jmp
and
inc
cmp
lods
cmp
daa
and
sbb
cltd
lcall
adc
cmp
add
pop
pop
adc
inc
inc
push
push
cmc
mov
sub
push
fwait
aaa
sbb
das
cmp
adc
das
das
call
loop
std
xor
inc
or
fimull
adc
movsb
out
jmp
inc
jg
pusha
lods
js
sub
xor
sbb
ja,pt
and
cs
lea
mov
aaa
pop
inc
jmp
or
clc
adc
and
push
push
mov
add
pop
ss
and
mov
jae
cmpsb
sbb
push
dec
pop
sub
xor
jb
aad
rclb
push
cs
jmp
lea
lcall
es
adcl
mov
push
sbb
add
inc
fs
insb
push
push
les
push
cmp
cmp
dec
lea
jae
imul
sub
adc
mov
inc
mov
sbb
or
loope
push
add
mov
dec
push
je
cmp
and
xor
xchg
mov
pop
cwtl
pop
ljmp
pop
bound
ds
push
insl
cmpl
daa
jae
xchg
mov
je
cmp
mov
aas
xor
ds
jmp
das
and
xor
js
add
push
adc
dec
push
push
mov
mov
jns
jno
call
add
push
mov
aaa
pop
inc
add
inc
mov
test
xor
imul
icebp
outsl
decl
cmp
cmp
adc
push
cmp
pop
dec
sbb
push
aaa
movsl
das
loopne
push
add
pop
add
or
dec
pop
pop
sub
dec
cmp
dec
addr16
fistpl
mov
dec
or
sub
pop
dec
fisubrl
loop
stos
mov
push
jle
pop
aaa
fdivrs
or
decb
inc
pop
xor
mov
andl
test
adc
pusha
cmp
xor
or
adc
leave
dec
or
push
and
and
xor
adc
cwtl
inc
das
inc
adc
outsb
imul
xor
push
push
adc
iret
inc
inc
adc
lcall
fsubrl
adc
pop
xor
cmp
mov
mov
and
fimull
loop
adc
or
sub
inc
ds
adc
loopne
dec
addr16
adc
pop
je
xor
ret
and
outsb
adc
pop
dec
dec
addr16
push
add
das
push
sbb
addb
stc
push
pop
or
adc
icebp
mov
int3
xor
mov
daa
push
loope
jbe
jecxz
out
fbstp
push
nop
mov
push
icebp
cs
repz
mov
inc
lods
sahf
push
push
xor
daa
pusha
add
lods
pop
cs
das
dec
mov
aas
stos
xor
pop
push
in
push
jo
fcoml
dec
push
mov
push
cmp
dec
xchg
loope
push
xor
enter
mov
iret
mov
nopl
sbb
lahf
sbbb
dec
dec
aas
add
push
xchg
push
jb
fs
and
lds
or
lret
cmp
mov
js
lcall
inc
push
sbb
add
pop
test
or
and
inc
in
mov
daa
ja
cltd
and
pusha
repz
and
sbb
adc
xor
xor
push
ret
mov
mov
nopl
fistps
cmpsl
pop
xor
adc
mov
movq
jmp
cwtl
test
adc
xchg
adc
and
adc
inc
dec
sub
xchg
dec
inc
das
sbb
sub
mov
mov
and
push
adcl
and
sub
test
sbb
pop
aaa
fisttpl
popa
iret
sub
adc
mov
cli
adc
mov
sbb
iret
push
lods
loop
push
and
daa
mov
sub
mov
adc
stos
dec
push
dec
testb
nop
push
call
add
push
push
push
and
dec
xor
dec
pop
sub
xor
add
insb
jne,pt
xor
or
js
arpl
cmp
aas
push
movsl
in
xchg
adc
and
push
cmpsb
in
fcomip
cmp
aaa
xor
es
add
xor
xor
aaa
sbb
loopne
sbb
ds
xor
sbb
dec
cs
inc
push
cs
sbb
or
mov
loope
popa
subb
test
push
scas
lds
jle
pop
sbb
out
or
lock
push
ficoms
mov
fists
jns
fiaddl
inc
cmp
and
mov
mov
adc
fdivp
and
das
and
and
cmp
inc
sbb
push
aaa
je
adc
out
inc
push
pop
pop
cmp
imul
or
out
cmp
push
mov
mov
sbb
shll
add
divb
lock
add
sub
ds
nop
insl
xlat
fcmovnu
and
or
mov
xor
movsb
mov
xor
stos
sub
cs
pop
xchg
adc
push
jae
pop
adc
fstpl
jmp
adc
and
ss
sub
jne
inc
je
insl
xchg
jo
sbb
fwait
fwait
loopne
aam
cmp
and
cmp
aad
push
jbe
testb
pop
or
sub
repnz
in
push
mov
adc
push
fwait
push
or
adc
xor
adcl
leave
and
sub
test
pop
test
pop
daa
movsl
adc
pop
sub
cmp
jo
dec
test
pop
add
xlat
aas
add
cs
aaa
inc
aaa
add
add
enter
and
es
fdivr
ss
jg
or
scas
roll
add
inc
pop
dec
adc
loopne
ret
nop
xchg
cmp
fisubl
js
in
dec
insl
inc
xor
dec
or
inc
inc
pop
pop
pop
pop
cmp
jmp
daa
mov
mov
gs
pop
push
sbb
push
cmp
add
inc
and
adc
cmp
daa
cmp
in
pop
adc
cmp
mov
mov
adc
mov
pop
in
xchg
inc
adc
sbb
inc
xor
aaa
jg
push
push
sub
dec
dec
or
or
dec
aam
xor
fldenv
dec
testl
fstl
inc
xchg
add
aaa
outsl
add
aaa
popa
es
outsl
dec
test
sub
insb
gs
or
imul
rorb
gs
push
sti
std
adc
jp
outsl
inc
add
pop
punpcklwd
lahf
addr16
cmpsl
shlb
popa
add
adc
pop
dec
inc
fsubrs
jb
outsb
push
lds
hlt
lods
daa
imul
push
adc
sbb
iret
sub
sahf
out
cmp
roll
add
adc
add
cmpsl
push
sbb
cwtl
pop
push
sahf
int
push
or
or
fldcw
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
sbb
sub
fldcw
add
or
ss
push
adc
pop
add
data16
adc
push
push
dec
str
mov
and
das
ds
sub
inc
add
lret
push
and
push
and
loopne
iret
fwait
int
repz
adc
xor
rcr
pusha
fsubp
jns
cmp
push
jo
fstpt
nop
push
and
push
icebp
push
inc
out
cmp
es
inc
out
xchg
mov
xor
loop
dec
dec
cmp
clc
jg
and
mov
mov
scas
sbb
ljmp
add
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
addr16
jg
push
insl
ss
adc
cli
mov
sub
sub
das
idivb
mov
sbb
mov
ds
pop
sbb
lods
sub
or
mov
dec
fsubs
sbb
xchg
mov
mov
pop
dec
xchg
pop
shl
dec
push
sbb
cmp
pop
adc
jb
mov
pop
push
and
jl
stc
xor
aaa
aaa
xor
dec
cmp
or
mov
mov
cmp
inc
jb
adc
outsl
push
dec
imul
dec
xorb
iret
leave
jae
sub
inc
pop
jb
and
leave
jae
xor
xor
cmp
lcall
cmp
cmp
rorb
jl
loopne
mov
insb
inc
js
cmp
pop
pop
add
push
dec
pop
dec
inc
xchg
jo
add
test
pop
or
pushl
xor
xor
sub
sub
adc
sub
xor
inc
xor
inc
push
xor
mov
testl
push
push
add
jp
sub
and
xchg
das
js
fistpl
mov
jb
inc
arpl
js
inc
imul
cmpsb
push
push
jb
jo
ret
inc
bound
je
bound
imul
xor
addr16
mov
and
and
sbb
shl
pop
ja
and
sbb
mov
das
imul
inc
mov
das
dec
xchg
pop
or
clc
fisttpll
dec
pop
inc
nop
and
mov
sbb
mov
test
mov
or
add
push
cmpsl
dec
xor
rclb
into
adc
mov
sub
push
or
or
adc
and
bound
cmp
das
adc
jae
test
scas
inc
push
insb
and
mov
xor
dec
jns
lock
sbb
and
cmp
scas
or
daa
inc
mov
int3
mov
nop
sub
dec
pop
mov
js
das
aaa
and
bound
rcll
dec
leave
push
out
add
fimuls
mov
outsb
movb
inc
insb
addr16
imul
push
outsb
pop
or
jge
not
sbb
inc
outsl
push
mov
rcrl
subl
sbb
push
xchg
jno
push
mov
repz
push
pusha
jno
xchg
xlat
push
pop
int
fwait
mov
pop
inc
ds
popa
and
out
jns
xor
lods
inc
inc
or
int
pop
mov
mov
pop
negb
gs
sysret
jmp
xor
cmp
adc
ja
in
test
jnp
es
cmpsl
xor
push
sbb
dec
mov
push
xchg
pop
push
pop
push
aaa
mov
mov
mov
sub
stc
mov
cs
in
sbb
dec
mov
sbb
and
cmp
pop
cltd
nop
pop
fwait
inc
dec
insl
insb
cmpsl
inc
cmp
es
idivb
xchg
sbb
sahf
out
out
addl
mov
ds
leave
repz
sbb
inc
into
xor
int
push
push
gs
ja
mov
shll
sub
sti
cmp
jge
inc
push
push
insl
xchg
xchg
push
fisttps
imul
dec
jmp
push
lods
cs
sarl
pop
xor
adc
jnp
imul
push
or
aaa
es
fcomip
mov
pushl
sbb
push
das
outsb
jge
inc
cmpsl
xor
cmpsl
stc
mov
push
add
divl
sti
aaa
and
push
andb
repnz
and
and
shll
lock
dec
repz
and
pop
test
sti
cmp
push
mov
push
pop
stc
cmp
repz
mov
jl
cmpsl
xor
jl
movsb
cmpsl
stc
cmp
int3
fdiv
movaps
lahf
out
sahf
inc
bound
out
pop
and
jns
sub
or
call
jg
dec
sbb
scas
sub
adc
ljmp
and
rcrb
push
push
mov
xor
adc
das
data16
add
mov
fcomps
pop
mov
leave
loop
and
push
pop
push
jmp
mov
je
std
pop
mov
pop
int3
push
and
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
inc
push
in
add
add
pop
call
lret
outsl
test
xor
push
lret
sbb
push
inc
popa
xor
out
fucomi
aas
inc
push
pop
aam
fnstsw
lods
jo
sti
or
aaa
push
mov
fisubrl
aas
jae
test
xlat
push
and
pop
out
cmp
dec
cmp
fidivrl
je
push
ljmp
cmpsb
dec
add
rclb
push
inc
scas
push
out
jb
insb
pop
push
dec
pop
je
pop
dec
jns
push
fisttps
jp
or
push
repnz
gs
ljmp
sub
retw
aaa
sbb
inc
dec
or
dec
push
fs
mov
ja
test
xchg
inc
dec
clc
push
jo
dec
add
or
ret
cld
fidivrs
or
ds
adc
adc
pop
es
insl
jo
fsubrp
lcall
push
addr16
jo
mov
and
jno
outsl
and
aas
cmpb
mov
mov
sub
and
cmpsb
mov
sahf
lods
push
or
cmp
xor
xor
xor
mov
and
xor
push
xor
xor
cmp
push
fisttpll
ds
das
pop
sbb
and
out
in
addr16
sub
or
push
xor
syscall
bound
js
adc
pop
dec
or
fisttpll
shlb
les
inc
cmc
mov
xor
mov
es
negb
push
or
cmp
mov
dec
push
jp
pop
sbbl
add
cmp
or
dec
lods
ja
xchg
jge
add
push
add
lahf
ret
aas
pop
es
outsb
pavgb
push
inc
inc
push
add
push
scas
addl
jecxz
test
rorl
fsubrs
mov
scas
sbb
push
cmp
and
pop
daa
xor
inc
fadds
mov
adcw
pop
pop
pop
sub
pop
pop
pop
pushf
and
addr16
aas
pop
orl
push
outsb
push
add
sub
mov
or
push
jbe
push
or
cmpsl
shll
sbb
outsl
xor
dec
or
cs
pop
ret
push
add
push
lcall
das
inc
pop
inc
sbb
inc
mov
sub
pop
fsubs
push
and
in
pusha
das
iret
dec
sbb
sbb
add
daa
popa
pop
or
aaa
mov
pop
rcrl
test
xchg
rcrb
cmp
mov
daa
inc
sub
test
adc
insb
mov
scas
inc
push
and
insl
mov
mov
stos
push
ret
cmpsl
or
daa
lods
daa
jge
dec
push
or
mov
clc
lods
inc
pop
iret
adc
sub
mov
sub
ret
daa
fadds
jbe
daa
imul
popa
daa
pop
xchg
dec
push
es
daa
out
sbb
cmp
repnz
dec
dec
or
mov
adc
ja
roll
xor
or
or
add
and
mov
mov
pop
cltd
daa
outsb
adc
adc
imul
popl
and
adc
pop
jnp
pop
loopnew
lods
inc
addr16
jg
cmp
push
xor
push
pop
adc
adc
pop
inc
mov
mov
push
imul
add
outsl
lret
inc
cmp
xchg
xor
or
das
test
xor
js
jl
sub
rcll
add
and
iret
pop
fcoml
sbb
ss
shr
sbb
inc
jae
push
ret
sub
js
xchg
fildl
outsb
ja
mov
xchg
mov
clc
pop
rcrl
addr16
sub
cmpsl
stc
or
dec
loop
dec
mov
xor
dec
push
mov
push
cmp
sbb
or
jno
es
push
clc
je
cmp
das
mov
mov
pop
nopl
adc
sub
and
add
inc
test
ret
movsb
into
adc
sbb
add
inc
fcompl
push
inc
mov
sub
push
jp
adc
addr16
mov
fs
data16
mov
test
pop
jb
outsb
test
lock
jns
mov
in
push
pop
ret
sbb
xor
js
sub
pop
adc
adc
adc
loope
adcb
pop
les
pop
sub
sub
adc
push
inc
xchg
outsl
sbb
popa
xchg
cmp
dec
cmpl
imul
sbb
popa
mov
xchg
daa
pop
push
adc
lock
lock
ficoms
add
dec
jo
adc
adc
aas
xorb
fimull
push
adc
mov
or
sahf
out
push
adc
mov
or
push
sub
mov
xor
xorb
cwtl
std
imul
and
push
mov
daa
push
sub
cmp
ret
fidivrl
inc
je
test
mov
insb
ds
daa
adc
push
push
jno
mov
test
mov
pop
xor
in
sub
adc
sbbb
sub
pop
dec
sbb
pusha
adc
mov
fcoms
cmp
inc
xor
push
cmc
and
sbb
xlat
ret
enter
inc
sbb
int3
adc
xor
data16
iret
mov
pop
push
inc
lret
lock
inc
inc
push
sahf
cmp
push
pop
push
adc
push
pop
pop
in
movsl
add
es
adc
andl
daa
es
xchg
xchg
mov
ja
pop
out
ret
pop
sbb
pusha
mov
xor
inc
jo
inc
dec
aas
cmp
dec
xchg
dec
pop
out
das
jno
test
dec
inc
dec
rcll
adc
xchg
mov
fst
sub
or
lods
push
push
in
adc
ret
aaa
push
decl
add
adc
add
aas
jle
arpl
add
mov
and
and
jbe
lods
and
and
add
cmp
inc
pop
dec
aam
mov
das
cltd
cli
sub
jb
jo
or
xor
aam
jbe
add
jbe
xor
clc
add
add
dec
inc
and
idiv
push
loop
sbb
inc
pop
adc
mov
adc
pop
stos
mov
add
pop
cmp
fimull
pop
dec
add
push
incl
aaa
sub
addb
and
and
or
adc
inc
sbb
jmp
dec
sub
sbb
push
sub
inc
cmp
push
push
push
adc
dec
pop
inc
sbb
aaa
cmp
adc
push
xor
xor
and
inc
adc
pop
das
ficompl
addb
out
adc
push
call
inc
sbb
or
push
adc
cmp
sbb
push
adc
mov
pop
push
push
push
pop
add
inc
dec
pop
inc
pop
push
inc
pop
lcall
xor
dec
cs
xor
xor
push
sub
sbb
or
and
pop
sub
test
add
cmpb
js
push
mov
test
adc
push
jbe
cwtl
adc
add
rcrl
and
inc
sahf
jle
push
mov
inc
cmp
and
xor
mov
and
rolb
and
addb
nop
adc
js
sbb
ss
dec
pop
sbb
sbb
out
cmp
andb
ljmp
dec
cmp
adc
std
push
outsl
inc
mov
add
xchg
data16
mov
in
push
shll
mov
pusha
bound
add
ret
mov
cwtl
pusha
or
cmp
fidivs
add
hlt
xchg
cmp
push
sbb
pop
sbb
push
dec
inc
dec
push
dec
outsb
push
sahf
outsb
add
subb
inc
sub
add
inc
aaa
jno
sti
shlb
ret
dec
pop
push
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
lcall
adc
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
add
xchg
out
popf
rorl
and
sub
sub
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
call
push
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
pushl
leave
ret
sub
xchg
mov
data16
mov
call
cltd
decl
call
test
push
push
shll
dec
daa
mov
mov
mov
ljmp
dec
stos
fmuls
lret
rep
cs
arpl
test
incl
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
mov
or
imul
cmp
dec
dec
aas
data16
popa
sub
inc
and
outsl
cld
jae
js
inc
or
dec
add
xor
jno
bound
mov
xor
sub
jo
inc
inc
xor
addr16
sar
call
ss
dec
gs
pop
inc
insb
or
push
dec
ja,pt
jl
jp
pop
xor
outsl
or
cmp
push
pop
insl
sub
dec
pop
add
inc
inc
dec
daa
cmp
aaa
mov
or
sbb
xchg
outsl
add
adc
popf
pop
or
dec
jmp
scas
mov
pop
pop
daa
ljmp
pop
push
push
push
dec
push
and
std
movnti
add
cmp
movsl
lock
dec
push
aaa
shlb
inc
add
xor
xor
scas
cmp
mov
inc
inc
push
xor
xor
and
aaa
inc
push
inc
cs
imul
mov
ss
cmovb
pop
ss
lahf
pop
test
jmp
es
and
add
loope
test
mov
mov
sub
aam
push
cmp
inc
hlt
adcb
or
imul
std
in
scas
bound
push
pop
inc
loope
adc
push
xchg
int
fistpl
dec
pop
jae
mov
xchg
roll
and
ret
push
pop
adc
mov
sarl
sbb
sub
sbb
mov
sahf
and
sub
inc
adc
sbb
dec
pop
loopne
aad
orl
adc
push
xor
jp
mov
mov
adc
in
scas
mov
or
cmp
jp
dec
mov
out
insb
and
push
sbb
stos
jo
inc
xchg
fadd
lods
aaa
xor
mov
movsb
pusha
rcrl
gs
inc
and
adc
inc
pop
or
sbb
or
andb
cmp
ret
push
dec
jno
idivb
sub
js
gs
fcomp
sti
rorl
sub
dec
subb
adc
jns
add
push
add
mov
cmp
jbe
add
daa
mov
adc
scas
dec
mov
in
push
mov
cmp
out
cmp
adc
xor
in
sbb
adc
inc
jbe
push
mov
icebp
sbb
subl
adc
or
pop
loop
and
inc
bound
inc
mov
cltd
adc
test
rcrb
add
out
inc
lods
push
outsb
outsb
je
inc
into
into
rdmsr
imul
jo
mov
mov
pop
insl
gs
pop
sub
stos
mov
xor
arpl
addl
and
xchg
dec
pushl
insl
loop
xor
adc
dec
or
data16
inc
outsl
insb
push
push
popa
je
push
pop
sbb
popf
insl
daa
push
cmp
fmulp
lea
push
cmp
sbb
rcr
add
or
pop
push
testl
dec
out
enter
ret
dec
sub
subb
les
shlb
dec
add
push
mov
add
adc
mov
add
inc
sbb
fs
push
jae
and
out
mov
fwait
out
movsl
cmp
fmull
pushw
fwait
and
cs
pop
stos
cmp
xchg
inc
adc
leavew
fsubs
fimull
loopnew
dec
jecxz
loopne
sbb
inc
out
sbb
push
mov
and
and
ss
dec
dec
dec
sub
das
mov
xor
nop
sub
lea
fmuls
scas
dec
fs
inc
or
mov
gs
sti
pop
in
add
fnsave
inc
jne
dec
xchg
insl
mov
sub
sbb
cwtl
inc
lds
jecxz
out
inc
test
cmp
mov
test
push
dec
test
in
sbb
pop
or
sbb
push
in
jo
call
and
push
mov
aaa
daa
sbb
cmpsl
fs
jo
mov
xor
decl
sbb
and
cs
mov
stos
inc
and
lds
pop
xor
mov
mov
pop
cmp
jp
hlt
and
pusha
jg
pop
and
scas
pop
sbb
aad
arpl
ds
fisubl
jae
cmp
adc
fdivs
push
xchg
iret
hlt
push
mov
ja
pop
dec
sahf
outsb
add
and
outsl
int3
cmp
pop
jnp
mov
je
push
adc
out
mov
lods
adc
sahf
fisubs
in
test
adc
dec
and
gs
sbb
push
lahf
dec
ja
sbb
and
pop
iret
scas
pop
lret
inc
cmpsl
sub
scas
xor
std
add
push
inc
out
push
sub
push
data16
outsb
aaa
push
sbb
xchg
xchg
ljmp
and
je
gs
adc
mov
fcomps
pop
aas
xor
sahf
aad
out
pop
or
mov
pop
cmp
or
dec
notb
fcomps
enter
dec
pop
dec
pop
movsl
test
dec
pop
repz
ret
cs
mov
xor
adc
mov
xor
pop
adc
xor
movsl
mov
insb
and
inc
or
loopne
add
sub
and
rolb
sub
inc
cmp
loopne
out
inc
ret
mov
inc
add
or
add
cmp
push
call
imul
loopne
mov
adcl
stos
lods
push
outsl
xchg
mov
aam
add
dec
and
sub
es
outsl
mov
outsl
and
or
mov
inc
inc
cmpsb
inc
out
and
punpckhwd
dec
outsb
push
je
popf
push
insb
shrb
popa
cld
push
push
push
cmpsb
fbstp
dec
push
push
dec
inc
dec
inc
mulb
dec
xlat
jb
gs
xlat
fs
pop
daa
inc
adc
fwait
roll
push
loopne
cmp
dec
jb
loop
xorl
mov
dec
das
js
pop
les
adc
inc
add
inc
clc
lods
cmovne
sbbl
jno
nop
nop
push
xorl
adc
jb
push
push
shlb
test
jae
inc
movl
loop
in
sbb
aam
cmovg
pop
addr16
mov
mov
pop
fidivrs
push
mov
jnp
push
push
test
add
mov
add
fnsave
in
xchg
nop
ja
mov
add
addl
fsubp
dec
outsb
clc
sbb
dec
sub
adc
sub
or
add
pop
mov
sub
pop
push
movsl
pushf
mov
adc
pop
push
jl
sbb
dec
dec
je
push
xor
dec
add
push
pop
cmc
nopl
mov
or
das
fs
xor
scas
jnp
shlb
daa
and
or
fwait
push
loop
jne
and
pop
sti
test
cs
in
or
js
ss
xlat
stos
pop
cmpsl
xchg
push
out
sub
sbb
sbb
sub
or
int3
adc
ficoml
fimull
jp
nop
pop
and
insb
xor
inc
subb
lahf
cmp
mov
rolb
subb
mov
dec
test
movsl
scas
xlat
pop
inc
or
outsl
or
jo
aad
scas
sub
and
addr16
cld
push
push
das
xor
xor
dec
and
or
adc
sbb
jecxz
and
inc
fbstp
stos
jb
inc
addr16
inc
mov
fistpl
outsl
insl
pop
xor
dec
and
xor
fcomps
loopne
push
mov
dec
adc
mov
outsb
jle
pusha
cmp
jns
push
mov
ljmp
outsl
imul
dec
xor
push
sub
push
aad
fwait
mov
ss
pop
sbb
in
cmpsl
mov
in
fmuls
add
cli
push
mov
xadd
cmc
inc
cmp
cmp
inc
cmovo
out
cmp
cmp
in
mov
xor
jo
maxps
dec
add
shll
adc
rolb
jmp
xor
aaa
imul
lods
ds
sbb
jmp
jae
stc
addr16
movsb
fsubl
add
sbb
fsubrp
push
clc
xchg
adc
movsb
add
or
lods
outsl
ror
xor
adc
lahf
add
ss
lods
push
daa
test
jo
sub
outsl
sbbb
xchg
nop
outsl
xor
outsl
pop
mov
inc
add
aam
jg
jl
mov
dec
outsl
mov
dec
scas
fs
inc
inc
scas
in
scas
cmp
dec
scas
in
sub
jecxz
scas
in
add
popa
test
jns
data16
xorb
mov
xchg
js
out
outsb
repz
ss
dec
movsb
ds
repz
mov
cmp
imul
pop
push
inc
fidivrs
stos
cmp
push
mov
fucom
jns
inc
in
cmp
push
mov
repz
cwtl
mov
dec
pop
dec
jae
cmp
or
enter
push
es
rcrl
or
out
dec
xchg
dec
jnp
pop
inc
clc
dec
push
adc
add
movsb
fmuls
add
mov
sbb
scas
movsb
stc
sub
add
mov
mov
push
jl
add
inc
sub
idivb
inc
mov
insl
add
sub
ja
mov
push
pop
mov
inc
mov
add
in
xchg
mov
dec
inc
lock
loopne
mov
das
or
shll
push
and
dec
outsl
add
mov
filds
or
in
inc
inc
js
pop
in
sub
js
jbe
xchg
cmp
cmp
cmp
dec
add
jb
dec
adc
adc
pop
cmp
cmp
add
push
outsl
out
mov
xor
daa
int
cmp
cmp
xor
pop
jb
int3
fcoml
xchg
popa
sub
in
pop
scas
add
mov
outsl
out
sub
add
xor
scas
enter
es
cmp
enter
sbb
sub
adc
or
push
call
mov
sarb
repz
subb
cmp
jns
fwait
mov
push
movsb
and
inc
lahf
mov
imul
jg
mov
and
out
inc
mov
shlb
add
dec
xchg
sub
fwait
nop
pop
xor
xor
inc
push
push
xor
add
jbe
ret
fbld
outsl
and
adc
nop
or
and
adc
aas
push
roll
fsubs
or
out
sbb
sbb
daa
nop
loopne
leave
add
inc
xlat
or
cmpsl
adc
push
aaa
inc
jns
add
int3
inc
xchg
in
or
fsubrl
in
add
push
repnz
dec
xor
pop
daa
push
push
inc
outsl
xchg
push
pusha
inc
loopne
inc
jg
push
test
xchg
cmpsb
gs
mov
dec
mov
pop
fimuls
popa
pop
sbb
sbb
int3
test
jbe
arpl
test
or
cmpl
dec
inc
outsl
push
push
outsl
push
mov
cmp
xchg
pop
cwtl
aaa
mov
testl
push
jl
push
faddl
inc
sarb
out
cmpsl
mov
mov
ficoml
je
push
jmp
dec
mov
adc
push
inc
fs
lahf
scas
xchg
dec
xlat
or
inc
fisubrl
shrb
mov
or
xchg
xchg
sub
or
inc
mov
adc
and
and
push
pop
xor
mov
testl
dec
fdivs
add
sbb
and
inc
scas
roll
pop
inc
aaa
pusha
pop
leave
mov
add
xchg
and
sub
add
shlb
xchg
and
call
inc
dec
test
mov
pop
and
add
out
jne
cld
jg
in
xchg
mov
mov
sahf
test
jb
insl
fdivrs
addr16
enter
pushf
lods
mov
adcb
sub
test
incl
push
js
push
and
das
outsl
dec
ficoms
or
fwait
inc
aad
pop
adc
pop
clc
inc
ds
addb
mov
xchg
inc
sub
add
fidivs
or
xchg
sbb
call
cmpsl
add
push
xor
xlat
add
jo
sahf
iret
mov
aad
daa
dec
out
movsb
or
pusha
and
idivl
rorb
mov
sub
push
int
jns
fmull
dec
xor
dec
movsb
jp
repz
xor
and
addl
mov
mov
cmpsl
or
xor
sub
fstps
dec
outsb
rorb
outsl
add
or
pop
fwait
inc
or
faddl
clc
mov
or
faddl
add
and
add
push
xchg
sahf
js
dec
lods
fs
pop
scas
add
mov
out
xchg
or
dec
popl
pusha
imul
lahf
sub
sbb
or
mov
inc
and
daa
or
mov
mov
adc
push
cld
fwait
inc
sahf
sbb
enter
outsl
in
negb
addr16
lds
in
out
pusha
ret
push
inc
dec
iret
push
push
sub
in
imul
push
in
les
inc
orb
dec
ja
pop
adc
mov
mov
outsl
movsb
adc
mov
outsb
hlt
dec
data16
rol
mov
data16
pop
ret
sub
pop
add
jns
testb
push
insb
xor
mov
xor
pop
out
ss
int
pop
inc
add
or
dec
and
je
out
fiaddl
mov
xchg
iret
sarl
repnz
sahf
out
cmp
in
cmovl
dec
jns
out
push
stc
cmp
repz
das
push
orb
jns
cmpsl
daa
inc
jo
fidivrl
scas
push
rcll
xchg
iret
repz
add
pop
repz
out
cltd
mov
stc
cmp
insb
xchg
mov
push
inc
dec
repz
jns
fmull
repz
rclb
push
push
insl
ja
out
mov
push
dec
repz
test
jecxz
pop
pop
xchg
ljmp
out
mov
subl
std
pop
pop
mov
cmp
out
adc
xchg
repz
out
pop
sahf
ret
imull
pop
out
ds
xchg
add
and
out
jl
jp
jl
mov
jl
push
es
repz
fstps
fs
sbb
iret
mov
loopne
mov
ror
shrl
add
mov
cmp
xor
out
and
iret
repz
xchg
rcrb
imul
and
lds
repz
and
ja
fisubrs
lahf
cmpsl
fstps
outsl
jle
xorb
stc
mov
push
lret
adc
iret
repz
int3
cmp
repz
je
call
dec
repz
ja
sti
sahf
out
ds
js
xchg
mov
jge
jns
push
jle
stos
call
push
jnp
sub
mov
jge
out
xor
loopne
jle
mov
dec
repz
xor
std
cmp
jnp
adc
iret
repz
stos
ds
mov
test
push
js
outsb
test
adc
pusha
cmp
repz
and
sahf
cmpsl
stc
add
mov
out
mov
out
sti
cmp
repz
ds
jns
das
nop
push
mov
push
xchg
ret
insb
jbe,pt
cmp
iret
mov
sub
iret
shrl
fwait
or
jns
popf
sahf
loope
sahf
jg
lahf
cmpsl
stc
cmp
sub
mov
xchg
pop
mov
lcall
sti
mov
mov
test
rorb
test
push
adc
lods
lods
addr16
sub
aad
repz
xorl
cltd
mov
push
dec
inc
pop
clc
or
loopne
pushf
into
xchg
rcrb
dec
sahf
fstps
dec
push
add
dec
dec
mov
push
dec
clc
addr16
repnz
ja
add
in
push
mov
lods
fsubrs
add
pop
paddq
sahf
mov
xchg
out
inc
aas
test
inc
mov
sarl
call
leave
mov
cs
cmc
mov
stc
rolb
lret
mov
and
mov
push
inc
sbb
scas
or
pop
add
shlb
sbb
push
ss
pop
enter
repnz
inc
mov
dec
ja
pop
pop
outsb
outsl
bound
or
mov
inc
out
loopne
aas
popf
dec
pop
insb
int3
jg
push
push
push
xchg
sbb
mov
pop
outsl
fcomp
dec
repnz
pop
cs
fucomip
aad
xchg
push
sub
dec
mov
aas
lahf
mov
mov
mov
jno
imul
push
and
mov
gs
adc
or
adc
pop
dec
lret
int
sbb
pop
push
gs
popl
cs
hlt
push
mov
sub
inc
mov
addr16
getsec
pop
mov
shlb
cmp
fists
xor
fcmove
adc
daa
cmp
rolb
shl
push
dec
fsubp
ds
lret
lahf
pop
push
je
dec
jb
push
test
xchg
xlat
pushf
push
in
shr
and
dec
jno
pushf
hlt
outsb
mov
dec
data16
inc
nop
mov
aas
int3
and
mov
es
iret
dec
mov
leave
lds
cmpsl
xor
xor
or
inc
xlat
fildl
call
fcoms
in
add
je
aaa
push
add
mov
add
push
jb
and
pop
push
pop
leave
xchg
cmp
scas
sbb
jb
mov
and
push
out
daa
jns
seto
inc
adc
add
or
jg
push
loop
inc
mov
imul
pop
leave
jl
xchg
push
cmpsl
push
iret
in
jns
add
test
pushf
pop
and
aam
pop
and
pushf
in
pop
dec
xchg
mov
xor
sub
mov
pop
cmpsl
xchg
xchg
pushf
xchg
fstpl
fiaddl
test
fldt
loopne,pn
pop
xorl
adc
add
pop
je
fs
test
inc
in
scas
cltd
stos
inc
int3
inc
enter
fsub
and
in
push
pop
adc
nop
mov
iret
cli
dec
inc
xor
inc
ds
inc
mov
add
iret
leave
leave
add
pop
and
js
add
sub
daa
cld
dec
dec
divl
inc
jb
pop
xchg
cli
inc
xchg
jp
daa
jns
pop
pusha
pop
cmpb
fwait
dec
cmpsb
dec
mov
jns
out
mov
shl
jns
out
fldl
call
pushf
repz
xchg
or
or
cmp
mov
frstor
push
daa
dec
scas
xchg
sbb
add
sbb
daa
movsb
pop
dec
inc
adc
push
fcoml
adc
dec
push
mov
pusha
mov
in
outsl
mov
dec
iret
xchg
cmc
std
in
sub
dec
adc
jbe
dec
cmpsl
push
addb
xchg
xchg
and
push
pop
mov
xchg
xchg
data16
aam
xchg
xchg
xchg
xchg
cltd
mov
xchg
mov
sub
jbe
into
fmull
in
in
pop
hlt
setle
cld
cmpsl
add
pop
or
mov
jl
jae
dec
das
push
add
int
cmp
pop
mov
loopne
push
mov
push
jg
add
add
scas
push
push
stc
addb
iret
jl
inc
jns
enter
jl
pushf
bound
loope
sti
outsl
mov
add
jb
cmp
add
xchg
pop
arpl
push
jbe
ret
pop
lahf
push
daa
ja
pusha
arpl
or
aas
and
or
cmp
pop
leave
and
xchg
push
and
in
ficoml
pop
inc
fs
fs
xchg
inc
inc
sahf
dec
incl
push
rsqrtps
dec
jb
pop
push
pop
push
lods
cmp
cltd
popf
dec
push
xchg
push
pop
xchg
clc
divl
mov
gs
out
in
ret
push
out
push
xchg
gs
dec
cmp
push
lret
lret
lret
lret
repz
push
or
push
mov
push
sub
push
inc
push
or
cmp
repz
or
popa
iret
repz
or
or
iret
repz
lea
cwtl
adc
cmp
repz
iret
repz
adc
adc
pop
repz
add
sbb
rolb
inc
push
xlat
push
leave
inc
jb
pusha
call
jns
addr16
jae
pop
sbb
or
inc
cmp
pop
roll
daa
push
and
mov
daa
js
inc
push
leave
or
add
cmp
cmp
addr16
push
das
push
repnz
add
push
outsl
inc
lock
mov
aas
add
xor
test
mov
inc
push
inc
outsl
js
cs
imul
push
movsb
ret
mov
lahf
lret
ror
sahf
fdivl
pop
in
push
push
ja
jb
cmp
push
xor
add
daa
inc
imul
cmpsb
test
push
jb
jbe
mov
leave
and
jns
add
inc
jb
jo
push
xchg
sbb
jb
add
push
adc
das
jbe
add
and
sub
push
mov
cs
addr16
test
add
inc
repnz
or
jo
add
push
sbb
fsts
cmp
iret
pusha
xlat
in
fsubrs
cmp
pop
jns
push
mov
iret
out
enter
repnz
insb
add
and
jb
ss
ds
inc
in
mov
push
call
les
push
nop
pop
jle
and
enter
insb
and
call
and
test
insl
mov
push
pop
add
xchg
mov
jns
pop
and
mov
in
addr16
mov
leave
adc
adc
xchg
gs
inc
mov
xchg
inc
outsb
ljmp
cltd
or
mov
stc
mov
cmovbe
ret
mov
cltd
ja
les
aas
rcrl
cmp
add
pop
jb
pushf
cmpsl
xor
push
in
jl
cmpsb
sbb
cmpb
pop
pop
push
and
shrb
sub
pop
cmp
pop
dec
pop
xchg
add
in
adcl
mov
cmove
xchg
fcmovne
out
aad
jo
push
jo
dec
test
xchg
cmp
inc
in
jo
push
mov
cld
notl
mov
adc
xor
test
add
jbe
cmp
add
xchg
xchg
scas
icebp
mov
enter
xchg
xchg
xchg
pop
fcomps
call
xchg
xchg
pop
clc
pop
add
pop
adc
sbb
pop
sub
shrb
xchg
pop
cmp
pop
jb
jb
or
jb
or
or
jb
jb
push
add
jb
add
add
leave
shl
and
arpl
out
mov
mov
xchg
xchg
add
fdivl
push
add
jae
pop
xor
daa
js
pop
inc
sbb
pop
ja
jbe
xchg
cmp
inc
pop
addr16
xchg
out
mov
hlt
pop
mov
jae
lods
xlat
and
lock
xchg
mov
xchg
out
outsb
aas
aam
fcompl
push
in
and
sahf
in
or
hlt
pop
cld
decl
leave
andl
je
pop
leave
and
ror
mov
pop
bound
push
divl
out
pop
mov
cld
ja
add
cmp
popf
ja
add
ja
movzwl
and
or
fisubrs
maskmovq
imull
xlat
push
xcrypt-ecb
cmpsl
push
pop
repnz
filds
iret
stos
push
cmp
test
fcomps
mov
sub
jns
jle
pop
pop
jne
pop
or
cmp
es
adc
cmp
into
lock
jbe
dec
sbb
and
jns
inc
sub
push
add
in
sahf
out
add
repnz
outsb
pusha
push
jbe
jb
dec
xchg
out
cmpsl
xchg
out
jb
mov
add
loopne,pn
add
sahf
out
mov
pop
adc
sbb
dec
sub
xor
out
dec
adc
add
add
xchg
jl
popa
das
cwtl
popa
dec
sahf
out
mov
dec
pop
fisttpll
mov
mov
pushf
popf
add
or
bound
fmulp
xchg
and
bound
aas
push
push
jns
out
dec
pop
push
or
jns
out
imul
or
loopne
sahf
orl
nop
call
js
mov
mov
add
arpl
arpl
js
xchg
and
pusha
arpl
andl
pop
xchg
setns
mov
leave
test
sub
mov
aas
or
dec
add
enter
inc
fs
dec
fs
mov
fs
fs
mov
shlb
jb
fsub
call
into
icebp
clc
outsl
add
gs
fildl
in
gs
xlat
inc
push
push
mov
jo
jnp
ficoml
out
into
repz
add
outsl
xchg
xchg
adc
or
add
pop
and
in
push
data16
push
push
lcall
fbstp
or
push
inc
out
sahf
add
cmpb
jg
repnz
nop
jnp
push
add
jl
ljmp
mov
in
mulw
addr16
sbb
addr16
mov
cmp
addr16
addr16
repnz
decl
push
sbb
mov
mov
cmp
cmp
cmp
icebp
push
or
and
sbb
daa
jb
enter
push
inc
mov
push
push
je
and
stc
or
jg
jo
leave
jae
sbb
add
xchg
jl
pop
rcll
sbb
xchg
pop
xor
inc
sbb
lcall
imul
daa
pop
push
dec
add
pop
in
test
lods
xchg
xchg
mov
mov
loopne
repz
add
insl
xchg
adc
imul
push
test
dec
mov
leave
xchg
push
push
xchg
leave
mov
mov
xchg
push
or
and
mov
daa
adc
rolb
orb
lcall
dec
mov
popa
mov
and
das
imul
cmp
in
push
or
loop
repz
mov
xchg
int
mov
dec
cs
and
ja
insb
xor
xchg
and
insb
sbb
fcmovne
inc
cmp
in
mov
outsb
leave
inc
mov
lahf
and
loope
cmpsl
mov
mov
movb
das
xchg
push
adc
mov
inc
fwait
jl
aas
inc
insl
das
das
das
aas
cmovg
insl
pop
insl
insl
mov
insl
mov
mov
mov
mov
mov
push
shrl
push
mov
in
addr16
outsb
out
push
outsb
push
outsb
in
in
push
outsb
outsb
outsb
outsb
in
in
outsb
inc
outsb
dec
outsb
push
outsb
jne
in
pop
outsb
data16
outsb
pop
ud2
cmp
cmp
pop
cmp
cmp
push
add
cmp
add
jbe
jle
sahf
out
sbb
jns
out
push
sahf
pop
cmpsb
pushf
pushf
cmp
mov
mov
lock
repz
and
cs
outsb
sub
jns
outsb
adc
or
cmp
outsl
and
outsl
outsl
pop
cmovle
jbe
sbb
xlat
cltd
xchg
add
in
rorl
mov
cmp
lock
sahf
out
cmp
jo
push
add
add
fdivrl
pop
imul
ud2
loopne
sahf
sub
xor
cmp
dec
sub
or
fnsave
push
pop
pop
punpcklbw
adc
vmread
and
xchg
addr16
mov
mov
jo
ja
xchg
jo
xchg
xchg
xchg
xchg
jo
jno
leave
stos
xchg
jno
jg
fadds
push
pop
das
imul
repnz
add
jns
cltd
scas
sub
sbb
enter
mov
rcr
push
daa
cwtl
lcall
jno
jno
jno
lods
in
call
and
call
mov
jb
jb
jb
dec
cs
ja
jnp
repz
jg
mov
mov
inc
daa
iret
add
leave
leave
in
add
mov
testl
pop
jae
loop
pop
leave
and
mov
add
imul
mov
add
xor
xor
mov
push
mov
scas
shrl
loopne
shl
dec
push
add
jae
decl
push
pushf
jae
jae
sbb
pop
outsl
lfs
mov
in
int3
paddq
in
in
sahf
or
or
cld
leave
jnp
lock
scas
or
push
push
adc
repz
adc
sbb
and
push
cmpsl
jmp
je
pop
mov
nop
je
je
vmread
jns
out
addb
mov
pop
jb
xor
pusha
mov
and
fildl
scas
rcr
pop
sarb
fucom
jns
fmuls
aaa
loopne
lds
add
daa
cmp
dec
add
push
es
jne,pn
insl
xchg
ss
dec
das
push
pop
push
jo
mov
mov
mov
push
fsub
in
call
or
jnp
push
clc
adc
out
push
dec
fistps
adc
or
fisttpll
xchg
iret
adc
or
mov
lea
push
push
pop
jne
negl
add
daa
fnsave
pop
lar
jo,pn
out
daa
js
or
fisttpll
sets
test
ja
testl
pop
in
pmuludq
inc
dec
icebp
cld
jbe
add
or
add
fmulp
jae
adc
push
or
cmp
cmp
or
cmp
mov
iret
or
push
ja
repz
cmp
ja
ja
adc
mov
ja
xchg
test
pop
iret
repz
add
dec
ds
ror
pop
mov
call
repz
push
leave
mov
repz
adc
mov
dec
push
cmp
inc
repnz
xchg
js
js
sbb
les
mov
xchg
out
push
out
mov
insb
mov
in
je
inc
jg
addr16
inc
xorl
add
nop
fnstsw
out
add
mov
fcomip
out
dec
add
pop
mov
fmulp
pop
nop
nop
out
daa
and
and
sub
jns
jns
jl
mov
das
dec
jns
push
jns
jns
mov
imul
leave
xchg
jl
and
mov
pushf
pushf
pushf
pop
jg
ret
into
fldpi
leave
leave
repz
out
cli
jns
inc
mov
sbb
aaa
jb
stos
jp
xor
inc
push
mov
push
pop
jp
jp
jmp
inc
jae
mov
push
mov
sbb
xchg
jo
cmp
mov
adc
sbb
jnp
and
sub
jnp
jnp
sbb
dec
jnp
sbb
andl
int
and
xchg
or
nop
xchg
jo
das
js
jb
jb
xchg
mov
jb
mov
jnp
enter
jnp
jnp
ud1
sahf
loop
imul
jnp
movsl
rolb
xchg
jl
sub
and
pop
push
push
inc
xchg
mov
push
dec
scas
jl
jns
fcmovne
mov
cwtl
add
loop
imul
filds
xor
adcb
enter
fisttpl
pop
inc
mov
pop
out
icebp
jl
jl
mov
and
jge
nopl
in
nop
lahf
scas
sub
xlat
mov
jge
jge
addb
jge
inc
cmp
nop
jnp
inc
pop
push
aas
comiss
pop
fdivrs
add
and
push
cmp
ret
mov
jle
jle
daa
pop
leave
xor
aam
dec
pop
insl
daa
daa
push
pop
xchg
xchg
jb
xor
xchg
lahf
fmull
outsb
lsl
roll
shlb
loopne
loop
das
enter
mov
jg
jg
and
in
sub
or
dec
outsb
mov
insb
xchg
repnz
xchg
jg
inc
into
cmc
lcall
mov
out
xchg
jg
pop
or
cs
cmc
addr16
pushf
pushf
loope
sbb
lds
pushf
andb
pop
push
aaa
jae
rcrl
adc
popf
fdivrl
jae
add
fs
sahf
jns
mov
cmpsb
scas
movzbl
mov
out
push
into
lar
xchg
ja
not
or
stc
add
push
push
xchg
cltd
aaa
sub
and
leave
inc
push
scas
fisttpll
jo
xchg
ja
cmp
movsl
xchg
in
fldenv
pop
pushf
call
adc
out
sbbb
cmp
and
pushf
push
xchg
out
setnp
adc
out
jg
cmp
outsb
push
fisttps
add
mov
cmp
lock
mov
add
mov
cmpl
and
sub
xchg
cmp
mov
clc
xchg
fisubs
ficomps
mov
sub
add
mov
ds
cwtl
mov
jmp
test
das
das
das
das
mov
mov
orl
sarb
fcomps
or
mov
call
sub
nop
sbb
fmulp
or
test
xchg
int
lcall
cwtl
fwait
mov
sub
stos
push
cmpsl
int3
pushl
scas
and
push
xor
iret
test
test
and
and
das
xlat
test
test
cmp
mov
test
or
or
ja
and
push
or
or
dec
fsub
cmp
das
pop
in
call
test
pop
test
test
adc
in
repnz
add
cmp
xchg
mov
enter
test
inc
mov
test
test
dec
incl
decl
xchg
into
fisubrs
push
xchg
bound
outsb
and
xchg
jp
in
sahf
out
pop
mov
fisttpll
push
add
in
xchg
xchg
xchg
out
ret
adc
ficompl
loop
push
repnz
lar
inc
repnz
and
and
add
jo
pop
push
mov
and
adc
xchg
xchg
xchg
loop
lods
pop
lods
dec
mov
scas
mov
das
movl
leave
fisttps
or
sub
or
adc
int3
cmp
mov
mov
in
dec
scas
push
mov
test
or
insl
cmpl
jne
incl
pop
fists
mov
pop
add
jo
inc
xchg
or
in
inc
or
loopne
je
push
xchg
stos
adc
fbld
pop
push
or
xor
clc
ja
add
and
and
xchg
and
mov
mov
mulb
orb
mov
mov
xchg
jmp
pop
outsl
call
les
mov
push
in
and
mov
je
insl
inc
dec
dec
outsl
sidtl
push
pop
popa
imul
movsb
mov
jbe
mov
rcll
xchg
loopne
dec
icebp
jbe
psubw
outsb
adc
sub
mov
movsb
subb
mov
mov
mov
das
aas
stos
mov
in
ss
mov
aas
rcrl
leave
mov
mov
push
enter
xchg
adc
mov
mov
mov
push
jmp
mov
add
movsl
pop
and
fadd
mov
out
xchg
dec
cmpsb
lock
das
sbb
sub
iret
jae
ss
push
push
mov
out
or
jo
out
push
jb
adcb
dec
adc
xchg
and
mov
xchg
xchg
xchg
mov
jbe
mov
lsl
pushf
pushf
fsubl
push
nopl
inc
pushf
pushf
pushf
pushf
andl
leave
call
fmull
push
js
sbbb
popf
cmp
mov
nop
cwtl
bsf
in
daa
iret
push
loopne
push
and
repz
ds
sti
push
and
nop
push
push
add
and
ja
repnz
add
jb
inc
xorb
loopew
nop
das
stos
nop
mov
xchg
cmp
pop
das
int3
xchg
add
jb
pop
xchg
dec
setno
xchg
push
add
add
jnp
dec
xchg
or
daa
daa
and
jb
jp
nop
outsb
daa
daa
daa
sahf
lods
mov
xchg
jl
test
jb
in
cmc
das
push
xchg
mov
repz
push
push
push
es
or
repz
or
or
cmp
repz
push
add
push
pmaxub
xchg
adc
and
das
xchg
xchg
cltd
xchg
pop
ud1
in
add
test
jns
inc
rclb
jns
jns
lock
clc
xchg
add
jns
push
xchg
push
xchg
es
cs
jp
jns
ss
ds
inc
xchg
dec
xchg
lret
lret
inc
jg
xchg
popa
xchg
insb
xchg
lret
lret
lret
inc
scas
ja
adcb
lret
xchg
xchg
popf
xchg
test
pop
mov
repz
and
cmp
repz
and
and
jmp
jns
in
sub
pop
xchg
adc
sub
sbb
dec
aaa
cvttps2pi
sub
xchg
jl
pop
dec
xor
je
pop
pop
punpcklbw
cmpsl
pop
jo
fistps
push
das
and
in
xchg
mov
pop
stos
xchg
les
inc
aam
fcompl
invlpg
fmulp
add
fsubp
or
imul
lahf
push
cltd
add
and
in
in
bound
in
in
lods
into
out
jae
repnz
sbb
adc
leave
repz
cmovne
mov
jae
xchg
iret
repz
scas
das
int
aad
fisttpll
outsb
daa
call
xchg
mov
or
xchg
bswap
in
inc
aas
cs
ds
repz
fsubrl
addr16
outsl
ja
pushf
cmp
leave
xchg
mov
mov
repz
pushl
pop
cwtl
xchg
out
inc
movhps
xor
sahf
daa
aaa
das
aaa
push
iret
sbb
sahf
cmp
cwtl
pop
cmp
and
mov
insl
and
mov
mov
mul
fs
lock
int3
jbe
and
inc
xor
push
cltd
out
cwtl
sbbb
shld
jb
jb
shr
icebp
test
sub
lcall
inc
dec
add
add
bound
js
or
aaa
jns
ud2
cltd
or
in
repnz
scas
pop
mov
sahf
adc
ficoms
jmp
hlt
adc
or
iret
adc
sub
daa
iret
repz
sbb
iret
jae
cmp
push
bound
insl
jae
cmp
js
orl
into
cltd
fwait
movsb
fwait
scas
fwait
mov
and
inc
mov
fwait
in
add
leave
and
mov
mov
pushf
push
add
add
pushf
cmp
repz
push
in
repnz
mov
ficomps
push
ds
sahf
out
cmpxchg
mov
repz
adc
rcrb
adc
repz
aaa
lar
pop
call
sbb
lock
imul
inc
jbe
sbb
mov
xor
daa
call
adc
xchg
iret
push
mov
fcmovne
xor
aas
inc
popf
aas
dec
popf
ss
jl
ja
and
cmp
jbe
add
mov
ucomiss
push
mov
rorl
rcll
cmp
xchg
flds
adc
sahf
xchg
enter
sub
sahf
sub
mov
fistpl
outsl
push
ja
mov
cmp
js
aas
xchg
out
in
stos
add
pop
dec
dec
cs
fstl
sahf
add
mov
mov
sbb
lahf
cmp
inc
dec
cmp
iret
cmp
add
pushf
cmp
lods
imul
push
jnp
roll
or
jb
scas
mov
or
xchg
xchg
xchg
mov
loope
dec
rcll
mov
repnz
mov
mov
pushf
mov
movq
call
insl
pop
jb
mov
iret
sub
mov
ret
add
sahf
fiaddl
loop
xor
add
psllq
and
iret
leave
xor
inc
sahf
fldz
out
mov
leave
dec
mov
js
mov
xchg
jl
mov
negl
leave
in
jbe
mov
rorl
xchg
fcmovnu
cmpsl
jecxz
push
push
mov
cmp
ja
inc
daa
iret
jae
dec
pop
push
add
out
repnz
imul
xchg
clc
mov
fs
pop
mov
cmp
out
mov
repnz
lock
rcl
mov
fimull
pushl
jnp
iret
repz
xchg
add
cmpsl
fwait
syscall
cmpsl
push
jle
in
gs
mov
mov
fisubs
jmp
or
movsb
sub
inc
movsb
dec
movsb
push
movsb
das
das
das
das
bound
movsb
das
das
das
das
mov
movsb
movsb
fldt
das
mov
sbb
sbb
aas
sbb
leave
leave
leave
leave
sbb
push
adc
adc
shrb
ja
cmp
sub
push
es
and
int
xchg
fwait
add
sysexit
aas
fsubs
iret
mov
push
cmp
jns
cmp
cmp
cmp
dec
ds
aas
pop
sahf
out
sahf
inc
push
jne
xor
out
inc
mov
inc
leave
repz
mov
cmpsl
cmp
dec
stc
add
push
dec
iret
repz
sahf
wrmsr
dec
sbb
out
outsb
daa
xor
cmp
sahf
out
sahf
push
push
push
pop
push
addr16
pushf
fmull
pop
jge
xchg
mov
pop
test
cmp
mov
js
loopne
jmp
outsl
arpl
mov
xor
aaa
jb
inc
cmpsl
dec
cmpsl
push
push
add
xor
pusha
cmpsl
cmpsl
in
iret
sub
cmpsl
sbb
rcrl
lock
jg
cmpsl
add
out
push
adc
hlt
in
nop
cmpsl
jg
cmpsl
mov
and
jns
in
cmpsl
push
sbb
sbb
cmp
rcrb
mov
sahf
sbb
and
out
jo
test
and
and
and
test
xchg
addr16
into
test
leave
rep
pop
nop
fiadds
cwtl
cmp
push
push
add
add
hlt
scas
daa
adc
xor
loopne
xchg
ret
lock
add
and
add
adc
leave
leave
leave
sbb
and
or
cmp
xor
lret
cmp
push
mov
outsl
test
in
das
nop
test
ret
loopne
push
add
pop
leave
arpl
add
ja
jmp
repz
and
in
enter
stos
mov
fs
and
stos
fisttps
pop
inc
stc
outsb
repnz
dec
push
mov
lret
inc
js
pshufw
lret
lret
xchg
cmpsl
pop
mov
dec
dec
dec
mov
mov
jns
jmp
dec
iret
call
repz
push
sbb
outsb
repnz
sbb
dec
vmwrite
xchg
sbb
push
bound
popf
cmp
in
js
and
mov
scas
push
daa
mov
lds
shrb
das
orl
add
repz
add
add
xchg
out
dec
push
add
inc
popa
mov
iret
xchg
cmp
cmp
orb
out
enter
fstl
mov
add
outsb
mov
scas
imulb
lods
push
lods
adc
push
iret
repz
adc
adc
adc
cmp
repz
xor
jbe
inc
dec
pop
push
pop
fucom
jns
sbb
movhps
jns
and
emms
repnz
and
repz
sahf
and
movsb
push
lods
daa
cmp
mov
add
jns
out
les
iret
sub
jmp
fldcw
outsb
movb
mov
sub
les
nop
xchg
int
test
xor
scas
fisubrs
pop
inc
push
add
cmp
jns
push
gs
scas
fisubrs
dec
scas
das
xchg
dec
scas
jns
out
scas
or
cmp
in
and
jae
enter
sbb
mov
cmp
inc
add
out
sahf
bound
insl
or
jns
je
pop
sbbl
sahf
push
xchg
setle
into
pushl
scas
psraw
shrb
outsl
sbb
cltd
dec
ss
mov
mov
lahf
dec
mov
cs
daa
iret
repz
add
xchg
iret
in
insl
jae
jnp
out
or
dec
dec
dec
cmpsb
mov
popf
fdivl
mov
sahf
outsb
mov
or
add
aas
push
mov
mov
mov
outsb
and
das
mov
aas
inc
pop
setae
push
pop
cmp
aad
data16
pop
push
pop
xchg
push
sbb
iret
repz
rcrl
repnz
in
and
and
insb
in
ds
aas
adc
cmp
repz
pop
and
adc
cmp
repz
sub
pop
andb
jp
mov
outsl
mov
mov
leave
out
ucomiss
and
mov
mov
sub
lock
push
mov
out
sbb
mov
movups
push
add
cmp
push
mov
sub
pop
push
outsb
and
out
dec
mov
mov
das
pusha
daa
iret
mov
push
es
repz
js
cmpb
jmp
push
and
and
iret
leave
repz
enter
sahf
out
fsubrs
sub
sub
mov
push
sub
or
adc
sub
and
add
in
dec
sub
xor
lss
scas
ss
xchg
orl
push
xor
xor
sbbl
sub
push
adc
sbb
jne
jmp
aas
inc
push
sub
lea
jmp
inc
push
mov
add
dec
aaa
sbb
inc
dec
aaa
push
jbe
je
xchg
pop
dec
leave
inc
add
out
inc
cmp
xor
out
sahf
out
and
or
iret
repz
clc
enter
loopne
cmp
repz
aam
int3
enter
repz
rcrb
test
repz
sahf
mov
xorb
cmp
pusha
push
push
dec
and
iret
repz
sub
or
test
xchg
scas
dec
cmp
xchg
je
jns
add
iret
outsl
jb
and
push
pop
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
repnz
add
pop
sbb
xor
add
test
xchg
add
bound
fscale
lcall
aad
add
pop
push
enter
icebp
or
or
pusha
cmpb
cmpsl
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
jl
std
adc
push
ficompl
mov
xor
fcomp
loopne
jb
jle
mov
xor
inc
iret
adc
sub
ljmp
push
fdivr
inc
xor
ret
sbb
loop
mov
pop
jle
pmovmskb
add
bound
and
aas
push
sbb
xor
mov
adc
sahf
out
faddp
push
or
iret
sarl
adc
repz
sbb
jns
out
int
mov
jns
sbb
push
cmp
pop
and
sub
jns
divl
pop
push
js
lret
in
repz
jp
push
cld
sub
inc
pop
xor
cmp
sub
cmpsl
push
mov
call
aas
xor
adc
pop
bts
aas
dec
inc
mov
dec
add
xorb
xor
iret
icebp
addr16
push
push
pop
cmpsl
mov
inc
inc
jg
icebp
pusha
imul
pop
sub
xlat
dec
test
fisubrs
scas
cmp
pop
jg
out
fidivs
and
inc
sub
mov
roll
add
push
add
pop
push
xchg
inc
xchg
adc
xchg
es
out
jbe
inc
rorl
sbb
sbb
jo
add
add
out
push
and
clc
loop
xor
sahf
rorl
lock
push
call
in
push
out
out
mov
pop
add
push
cld
jns
idivl
hlt
sbb
iret
repz
adc
rcrb
enter
iret
repz
mov
cmp
repz
lods
and
iret
es
pop
adc
pushf
clc
mov
outsb
shll
adc
xor
or
xorb
inc
cmp
sbb
sbb
jg
cmp
repz
xchg
mov
jge
out
repz
xor
add
pop
ja
rorl
mov
jae
das
push
mov
repz
dec
insb
addr16
cmp
mov
add
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
and
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
pusha
loop
leave
fwait
xchg
and
and
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
dec
rclb
cmp
popa
mov
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
inc
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sub
outsl
pop
ficomps
frstor
jg
jo
pop
inc
inc
je
inc
cmp
sbb
jnp
ljmp
push
cmpsl
add
ja
popa
push
out
mov
decl
cltd
sbb
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
call
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
mov
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
cld
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fistpll
jne
iret
or
pushl
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
call
mov
sub
mov
and
or
adc
stos
lcall
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
bound
lahf
xor
mov
js
stc
and
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
pushl
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
lock
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
outsl
pop
fistps
je
mov
aam
movsl
fisttps
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
ljmp
and
mov
add
inc
aad
scas
ja
popf
adc
call
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
incl
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
scas
decl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
cli
out
mov
jns
imul
andl
shrb
rclb
or
clc
dec
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
scas
xor
imul
scas
fcompl
fldenv
filds
aad
adc
aaa
pusha
mov
jg
insl
cld
fidivrs
mov
jmp
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
test
inc
add
push
sub
mov
or
sbb
add
sub
sahf
push
pop
js
mov
and
jo
pop
push
daa
pop
push
movsb
add
jmp
push
xlat
fcomp
fcmove
repz
fcmovnu
fstp
loop
repz
cmp
in
jmp
ljmp
iret
repz
div
clc
stc
cmpsb
sbb
repz
sti
cld
daa
adc
add
adc
inc
cwtl
sub
adc
push
cmp
mov
add
and
push
dec
bound
jbe
inc
call
bound
movsl
fisubrl
push
popa
je
push
sti
bound
and
inc
dec
aas
lds
and
aas
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
dec
insl
ljmp
xor
xor
xor
jg
sub
inc
jbe
pop
insb
imul
push
insb
add
dec
inc
dec
cmpsb
ficomps
push
inc
dec
dec
cmpsb
push
xorb
lock
mov
or
fs
gs
xchg
mov
push
je
scas
ss
jbe
leave
rolb
xchg
inc
call
add
xchg
in
sub
jle
gs
js
in
inc
inc
push
adc
adcb
or
add
inc
subl
lds
sbb
jle
lods
andl
xchg
inc
inc
orb
xor
lock
aas
inc
push
fadds
jbe
aas
or
push
fistl
lods
cltd
and
jae
and
addb
xchg
push
aas
jbe
movsb
mov
jnp
adc
sbb
inc
pop
js
push
inc
inc
inc
mov
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
andb
inc
mov
adc
mov
mov
mov
ja
outsb
jne
pop
insl
inc
push
popa
mov
xchg
jge
xor
cmp
adc
arpl
add
mov
addr16
clc
xchg
into
xchg
adc
insl
mov
sbb
pop
sarl
lret
pop
cltd
dec
int3
push
lods
mov
pop
adc
outsl
pop
mov
mov
add
lahf
sub
xchg
popa
cmp
dec
mov
mov
and
movsb
mov
add
inc
jb
cmpsl
adcb
adc
lahf
mov
push
outsl
outsl
test
xchg
outsl
int3
xor
sti
stos
loop
push
mov
rclb
in
lds
pop
inc
push
andb
or
mov
mov
add
out
sarl
jo
push
stos
shlb
jns
adc
inc
jb
push
dec
inc
stos
xchg
addr16
outsl
arpl
adc
mov
jle
adc
inc
push
bound
ja
outsl
pop
cmp
jbe
xor
xchg
push
lods
jg
push
dec
bound
cltd
xor
call
fs
add
adc
or
sub
jmp
xchg
mov
mov
aaa
dec
dec
inc
dec
pop
outsb
pop
test
sarb
inc
push
aas
adc
jo
sbb
jmp
inc
push
inc
dec
mov
sub
jns
arpl
xor
cmp
pop
pusha
add
insb
insl
aaa
shll
insl
mov
inc
xchg
fildl
xlat
nop
lods
mov
imull
sub
adc
and
add
push
dec
dec
add
mov
push
push
mov
mov
mov
lahf
in
divl
in
stos
mov
adc
xchg
add
call
jp
fadds
mov
adc
test
shrl
jne
xchg
mov
fisttpl
call
aam
mov
sub
xor
pop
out
pusha
test
stos
int
int3
ljmp
sub
call
out
shrl
scas
xchg
in
mov
xor
in
pop
call
imul
ret
cmc
sub
dec
xor
xchg
fldl
js
in
cltd
lods
in
in
scas
pushl
or
sbb
xchg
mov
lea
aam
insb
shlb
jmp
fsubl
pop
dec
notl
jle
out
xor
mov
mov
jg
gs
jecxz
xor
ss
push
inc
mul
mov
sub
lcall
jne
int3
mov
div
and
sub
daa
pop
add
loop
filds
sub
test
push
and
lcall
jno
fdivrs
cmp
jo
jae
stc
add
pushl
int
jae
aaa
mov
fbld
mov
push
fadds
pop
xchg
add
jg
imul
out
dec
fbld
lret
cmpsb
addr16
fwait
mov
sti
lcall
lock
pop
int
insl
or
or
int3
fdivp
std
cmpsb
sub
cmc
es
out
cmpb
out
gs
les
xor
test
sbb
lods
jge
jae
or
stc
pop
loope
enter
incl
mov
int
sub
mov
xchg
push
addr16
cwtl
adcb
mov
lock
mov
insl
push
push
push
sti
adc
mov
cli
jmp
fmuls
sbb
lahf
add
call
lcall
lea
test
jne
adc
in
mov
mov
cmp
test
sub
lods
or
lret
sti
leave
add
sbb
lea
call
push
loope
cmpsl
enter
test
lret
popf
push
pop
add
andb
pushl
dec
faddl
test
lea
xor
xchg
push
sub
mov
cmp
cli
insl
sbb
daa
stc
xchg
popa
ljmp
mov
mov
icebp
outsb
ret
inc
mov
popa
mov
sarb
and
sub
lods
add
jg
inc
js
mov
mov
dec
inc
lds
in
shlb
mov
jmp
push
sbb
out
test
jae
cmpsb
adc
cmp
test
dec
fisttps
cli
ret
xchg
dec
cmp
ja
mov
hlt
lcall
xchg
fistl
out
mov
dec
xlat
adc
and
in
pop
xor
pushl
mov
xor
outsl
sub
push
and
and
call
add
out
sub
das
dec
sahf
pop
imul
femms
repz
in
dec
ljmp
mov
rolb
xlat
das
and
and
jl
jge
scas
int3
or
xor
call
sahf
cli
test
push
push
xor
push
fstpt
stc
das
add
or
and
pop
xchg
pop
push
sar
fdivrs
sbb
mov
inc
push
out
xchg
roll
xchg
stos
addl
es
mov
pop
sarb
cmp
or
xor
out
sahf
es
mov
sti
and
jp
punpckhwd
insl
inc
pop
push
faddl
jg
mov
enter
or
addl
cmp
fdivr
push
insb
sub
cltd
inc
popa
cwtl
jle
fneni(8087
pop
lds
mov
fdivl
lcall
sub
mov
cltd
add
add
lock
inc
add
call
loope
mov
jnp
fdivs
mov
lcall
enter
mov
xchg
mov
sti
mov
call
sbb
inc
test
fimuls
std
std
loop
jo
pusha
add
pop
rcll
in
pushl
add
ss
fwait
hlt
push
sti
or
pop
idivl
call
xor
jle
cmp
shll
movsb
cs
aad
pushf
stc
fstpt
push
jl
ljmp
lock
in
dec
cmpsb
add
xor
pusha
push
xor
sbb
stos
scas
dec
ret
shll
in
sub
xor
ljmp
xchg
mov
loope
dec
mov
pop
add
ja
push
mov
pushl
xchg
xor
icebp
jnp
mov
add
cwtl
mov
shl
cmpsb
sub
imul
arpl
mov
xchg
mov
cmp
cmpsb
ljmp
pop
inc
out
fs
imul
aam
std
frstpm(287
dec
push
add
jl
decl
sbb
adc
push
std
aas
inc
call
mov
fsin
in
dec
and
jp
lret
leave
adc
icebp
jmp
mov
push
bound
adc
cwtl
std
aaa
mov
inc
cli
cli
out
xchg
mov
ret
cwtl
or
wrmsr
test
aad
mov
mov
add
or
ljmp
mov
jns
in
adc
movsb
cvtdq2ps
rclb
enter
hlt
mov
xor
mov
enter
cmp
mov
data16
sbb
loopne
js
push
pushl
fwait
and
cmpb
pop
mov
pop
pop
mov
push
and
sub
and
ljmp
imull
sbb
test
std
loopne
enter
jl
adc
decl
sbb
ucomiss
lahf
mov
or
sub
inc
pop
lcall
cmpb
adc
lods
lock
int3
dec
insl
dec
or
or
jg
xor
call
pop
pop
std
in
sbb
pop
push
mov
mov
imul
jmp
mov
fadds
shll
mov
inc
iret
mov
jae
jmp
stos
dec
jmp
pop
xchg
jb
lcall
js
ret
insb
dec
ja
inc
sbb
movsl
orl
mov
fstl
fsubrs
sti
dec
insl
jmp
pop
mov
mov
in
xchg
dec
cmp
lods
pop
scas
sub
mov
add
fnstenv
ljmp
pop
lret
roll
add
stos
imul
ss
cmp
mov
decl
test
outsl
arpl
jmp
test
cld
adc
mov
mov
sahf
sub
aam
mov
xor
mov
test
or
lcall
loope
push
xor
insl
inc
test
dec
mov
fadds
jmp
imul
mov
mov
adc
sub
arpl
cwtl
adc
sbb
call
call
test
mov
jo
scas
lret
pushf
jecxz
push
fistpll
xchg
inc
jl
pop
dec
imul
fdivl
arpl
gs
in
lods
or
jno,pt
cmp
cmp
add
jne
jno
mov
jmp
adc
shll
xchg
mov
data16
push
loope
jo
pop
and
scas
jecxz
cmpb
dec
mov
cmp
incl
testb
sbb
mov
add
and
xchg
inc
lcall
std
sbb
test
stos
ss
notl
dec
xor
mov
outsb
add
dec
sar
sbb
cmc
add
mov
fldenv
scas
jg
push
pop
sbb
jmp
pop
outsb
gs
xchg
xchg
pop
or
add
cmp
dec
lcall
and
adc
lcall
mov
data16
lret
std
dec
sti
xor
sub
push
sub
push
cltd
leave
push
int
rcr
enter
mov
jns
fcompl
ss
cli
mov
mov
incl
dec
call
jmp
lret
gs
call
xor
add
nop
lods
pop
push
incl
mov
lret
stc
xor
push
cs
mov
sti
andl
pop
lock
dec
movsb
fsubl
mov
decl
mov
inc
push
aam
movsl
sbb
fs
dec
sbb
dec
inc
stos
aaa
pop
insl
sbb
lcall
shll
or
jp
fidivrs
push
iret
jle
mov
jmp
cmp
std
and
rorb
lods
push
adc
jmp
mov
js
stos
cmc
int3
mov
shrb
xchg
lds
clc
call
xchg
jmp
dec
xor
pop
cmp
or
in
ljmp
ss
pushf
js
jbe
dec
xor
neg
cld
pop
sarl
incl
imul
or
in
or
imul
aam
out
testb
aaa
cltd
dec
adc
in
pop
push
in
cmc
je
push
fisubl
fcoml
fadd
popf
and
aam
pushl
out
fs
sbb
gs
xlat
inc
call
movsb
mov
cmp
jno
sarb
icebp
inc
mov
scas
out
push
in
adc
lcall
dec
pop
jo
addb
add
pop
push
xor
outsb
mov
decl
or
push
jno
xchg
push
pop
pushf
insb
shll
mov
cmc
xor
sub
and
cld
loopne
decl
push
xor
test
push
das
test
or
aad
addb
ret
pushl
ret
scas
inc
dec
int
cld
jg
ja
dec
call
lock
outsb
xchg
jge
cmp
push
cld
mov
or
test
xchg
dec
cmp
lahf
mov
add
repz
push
inc
pushf
xchg
cmp
inc
into
jo
jno
mov
cmpb
data16
setle
adc
push
stc
jnp
insl
imul
sbb
lret
cmp
adc
test
xor
sbb
add
pop
push
adc
jmp
call
jle
add
inc
cmp
mov
pop
jbe
mov
fwait
mov
adc
inc
or
pop
sub
sub
sub
jle
scas
mov
mov
shlb
loop
sti
das
inc
in
push
jmp
rolb
fcompl
lods
mov
test
mov
xor
pop
pop
jl
or
cli
int3
dec
sbb
xchg
or
repnz
push
fbld
lcall
fucomip
add
sbb
and
movsb
loop
stc
je
and
dec
test
jnp
cmpsl
cld
call
jle
out
or
pop
aaa
push
add
es
pop
ret
xchg
pushl
xchg
shll
sub
test
adc
pop
loope
inc
push
sbb
inc
loop
movsl
insb
dec
cli
jmp
or
pop
fwait
std
popf
mov
add
lock
pusha
dec
push
rorb
movsl
mov
notl
lret
dec
or
jp
push
lods
fwait
push
leave
int3
push
push
or
xchg
insl
pop
cmp
aaa
inc
adc
jle
mov
dec
sar
jb
pop
xchg
in
jg
lcall
repnz
int
inc
cli
dec
sub
cwtl
inc
xchg
or
loopne
jno
ljmp
cmpsb
mov
dec
sbb
orb
pushf
enter
in
push
mov
xor
lcall
push
jecxz,pt
ret
movb
or
test
daa
test
push
mov
mov
stos
push
cs
lcall
inc
jmp
pop
cwtl
test
fstps
adc
lcall
adc
out
test
mov
push
cmp
clc
xor
push
dec
rol
inc
xlat
shrl
push
mov
movsb
movsb
out
mov
sub
or
addr16
xor
and
push
xor
inc
mov
ljmp
cmp
push
fistpl
repz
and
xchg
scas
clc
fmull
out
lods
mov
popa
adc
insb
xchg
fs
push
cltd
mov
sti
ljmp
scas
insl
add
sarl
loop
dec
gs
cmp
mov
test
cmpsl
sbb
pop
push
repnz
sbb
push
jg
outsb
pmuludq
add
jmp
sbb
fists
jg
pushf
sub
in
sbb
adc
pushf
test
incl
std
xor
aas
sub
sbb
loope
xchg
mov
out
fidivrl
xchg
stos
add
mov
pop
ds
or
idiv
incl
imul
mov
xor
lret
popa
cwtl
cltd
shrb
mov
or
jmp
jo
pop
inc
fcoml
loope
stos
negl
test
mov
imul
inc
ljmp
dec
mov
inc
and
sub
mov
push
inc
sbb
cmp
pushl
dec
ja
aam
add
ds
pop
movsb
and
ss
loopne
in
add
push
cmp
outsl
shlb
jno
and
mov
mov
into
leave
jne
xchg
adc
enter
and
jg
jmp
stc
leave
test
sbb
cs
cmpsl
shlb
inc
pop
cmpsb
shr
in
dec
out
inc
sti
call
jle
inc
pop
xchg
f2xm1
sub
ds
in
xor
xchg
adc
popa
rolb
xor
fcomip
inc
jecxz
shlb
mov
and
mov
mov
imul
repnz
push
xor
push
std
xchg
addr16
outsb
into
scas
test
sub
and
jp
add
mov
testl
lea
rclb
fwait
inc
incl
mov
insl
or
push
jb
jecxz
je
jo
shl
jle
mov
ljmp
decl
cmp
cmc
add
ret
dec
in
jb
adc
stos
popf
test
into
enter
int3
jg
push
sbb
test
mov
aas
gs
out
call
hlt
cs
dec
jl
pop
inc
inc
data16
and
xorb
les
pushl
loope
stc
mov
adc
push
push
add
mov
jmp
cmp
or
lret
jecxz
adc
add
pushl
test
pop
or
imul
add
scas
std
jbe
pop
jg
jo
sti
inc
fnstenv
lds
mov
adc
stc
xchg
mov
cmp
out
ljmp
jae
fnstsw
stc
out
push
negl
jo
leave
inc
out
sbb
repz
push
std
call
inc
pop
ja
cld
out
cmp
das
mov
ficoml
rclb
lcall
aaa
enter
adc
in
lods
hlt
rcl
sub
mov
xchg
shl
stos
mov
test
adc
dec
lcall
jmp
ficomps
xor
std
movsb
adc
addr16
aam
lock
pop
mov
push
mov
sbb
xor
mov
xchg
mov
adc
lods
jne
mov
incl
xor
arpl
cmp
je
push
xor
loope
mov
cmpsl
stos
mov
test
scas
mov
cmp
notb
mov
fbld
imul
fs
ja
sbb
cmp
mov
fnstsw
mov
sub
xchg
aaa
dec
scas
mov
pushf
inc
fadds
sbb
push
lock
daa
cmc
in
outsl
xor
and
clc
fdiv
push
in
daa
or
call
jg
decl
sub
jne
and
sbb
test
inc
fstps
inc
sbbl
repz
mov
pop
and
cmc
iret
nop
lcall
ljmp
jmp
popa
fisubrs
insl
ficoms
movsl
dec
or
xchg
popa
push
hlt
jmp
xchg
xor
aas
mov
aam
inc
ret
je
dec
mov
pop
je
jns
pop
or
xorl
fwait
imul
xchg
cmp
mov
mov
inc
push
push
insl
gs
push
xchg
sahf
cmp
lods
test
or
in
lock
mov
push
sub
lcall
adc
push
inc
in
inc
mov
jl
cmp
mov
add
jmp
test
sbb
lods
and
xchg
es
cmp
gs
mov
pop
cmc
in
and
xor
ja
cmp
adc
jp
loopne
stos
push
cmp
push
sbb
jmp
lock
jge
push
or
mov
push
scas
xchg
cmpsl
push
xchg
jb
dec
cmp
push
pusha
cmp
out
jae
sub
mov
or
lds
hlt
push
inc
cld
dec
mov
mov
cmpsl
inc
sub
je
aad
mov
popf
fwait
addr16
testb
ds
sbb
push
adc
push
mov
sbb
call
test
mov
test
arpl
and
or
mov
fnsave
push
leave
movsb
add
mov
in
add
fnsave
decl
mov
and
push
cli
call
adc
lods
and
inc
jle
jo
enter
ljmp
mov
and
mov
push
cmp
scas
mov
out
dec
sub
dec
rol
or
aad
mov
add
mov
into
or
mov
in
inc
mov
dec
dec
ss
mov
in
add
movsl
clc
sub
pusha
ss
or
cmp
fdivrs
movl
mov
clc
or
inc
mov
jmp
sti
xor
lret
sbb
and
movl
insb
sbb
sub
stc
adc
mov
mov
clc
scas
sbb
mov
inc
fwait
mov
adc
adc
push
mov
decl
mov
add
enter
inc
popf
cmp
imul
mov
lcall
movsl
std
xor
xchg
repnz
sbb
xchg
add
sbb
es
je
jmp
stos
xor
mov
xor
pop
lea
sar
test
push
cmp
call
push
fnstenv
mov
sub
lret
adc
hlt
aas
out
jg
add
fnstcw
inc
mov
cltd
stc
shll
dec
stos
gs
mov
xchg
xchg
jecxz
movsb
test
scas
fdivrp
stos
mov
mov
shl
enter
gs
xlat
mov
ret
sbb
push
pop
xchg
mov
and
push
inc
inc
inc
push
mov
enter
out
aas
gs
unpcklps
call
adc
or
movsl
into
xor
mov
dec
mov
idivb
and
std
cmp
mov
mov
rcll
ljmp
cmpsb
mov
xchg
cmp
enter
add
sbb
ljmp
pop
les
shlb
push
hlt
imul
out
push
and
lcall
pusha
cli
outsl
jle
push
cmp
mov
test
mov
addl
jg
call
jge
mov
mov
test
sbb
dec
jge
cmp
mov
stos
fmuls
clc
outsl
inc
xor
flds
mov
pushl
inc
sbbb
ja
lock
push
ja
dec
xchg
adc
push
push
ret
decl
repz
imul
and
insb
sar
mov
out
and
or
push
in
repz
test
fsubl
xchg
jno
xchg
sbb
xchg
mov
dec
pop
cli
call
xchg
and
pop
push
neg
daa
sar
call
mov
xchg
inc
dec
push
sub
add
mov
sbb
pop
enter
mov
in
fisubrl
push
outsb
or
inc
adc
mov
xor
repz
repz
aas
sub
sbb
xchg
mov
test
inc
inc
mov
xor
nop
sub
nop
test
loop
add
popa
stos
sarb
in
incl
jnp
std
mov
xor
iret
lret
or
push
dec
enter
stc
mov
sub
mov
push
add
mov
fldenv
dec
imul
ljmp
mov
clc
and
cld
aam
jns
fsubl
enter
inc
push
mov
fdivrp
jmp
jle
sub
mov
xchg
xchg
xor
loop
sar
ja
rclb
call
cmp
or
pop
xor
pop
or
in
sub
sub
fwait
mov
lcall
icebp
mov
bound
clc
push
addb
xor
mov
xor
loopne
dec
xor
sub
decl
popl
lods
int
jmp
mov
orl
inc
arpl
lds
pop
mov
cmp
fmull
mov
fiaddl
mov
add
pusha
fdivrp
or
sahf
sbb
shl
mov
lcall
int
loope
and
sub
jmp
sub
push
pop
pop
inc
jecxz
cwtl
mov
push
bound
xlat
das
insl
repnz
sahf
inc
cld
xor
inc
jp
jg
or
mov
sahf
hlt
mov
addr16
sahf
and
sbb
ja
lcall
andl
jbe
mov
push
int3
dec
sahf
data16
pop
xor
mov
jns
fadds
nop
dec
and
jecxz
mov
dec
dec
ss
jns
or
dec
pavgw
lock
push
lods
sti
push
adc
xor
leave
fimuls
or
cld
call
sahf
fldenv
add
mov
cmp
popf
add
sub
jg
inc
mov
jmp
or
lcall
xchg
pop
push
xchg
lcall
loope
xchg
outsb
jmp
repz
pop
stos
push
jnp
imul
pushl
in
inc
fs
jg
sub
jne
sbb
sub
pop
pop
sub
adc
push
mov
addr16
jmp
stos
daa
ret
mov
dec
lahf
mov
dec
ss
mov
notl
movsb
sahf
xchg
fcompl
das
rorb
inc
jb
or
adc
mov
cld
decl
out
stc
and
pop
std
ja
dec
mov
bnd
shrb
xor
sub
out
cmc
lcall
xor
shl
or
jb
lea
jg
enter
pop
adc
lcall
jo
inc
inc
dec
inc
adc
xchg
fucomi
push
sub
dec
xlat
pop
ret
sub
pop
sbb
sub
ficoms
mov
std
fnstenv
stos
cmp
dec
test
sti
and
pop
mov
subl
xor
sbb
testl
mov
decl
push
and
mov
mov
and
add
sub
stc
mov
inc
je
decl
xchg
sub
jno
inc
sbb
fcmovnb
daa
dec
pop
jl
aam
mov
adc
jae
jle
push
out
dec
xchg
sbb
lds
movsb
ds
mov
add
decl
cltd
cmp
jae
lret
in
pop
loop
sar
fs
imul
out
lods
and
mov
mov
inc
mov
or
dec
loop
fwait
inc
int3
adc
jmp
pop
in
test
test
ret
aam
scas
push
jno
dec
aad
testl
stos
stos
pop
push
outsl
mov
fs
mov
cld
das
clc
aam
cwtl
das
push
es
mov
pop
lods
and
rorb
movsb
pushl
fistl
das
sub
sbb
dec
push
fstpt
xlat
mov
aad
adc
rclb
inc
arpl
jb
and
call
nop
sub
jns
rcrb
stos
jg
incl
pushf
adc
aam
sub
pop
test
jecxz
push
movsb
fwait
push
subb
out
fisttps
shll
mov
aaa
hlt
les
das
mov
lcall
sub
sbb
jno
movsb
and
repz
xorl
jo
lret
dec
mov
mov
pop
movsb
decl
xchg
push
mov
mov
lds
mov
jg
jmp
pop
cli
mov
je
push
jecxz
pop
or
inc
and
pushl
cld
add
arpl
enter
mov
lcall
push
inc
lcall
cli
ret
clc
scas
divb
jbe
idiv
inc
cmp
mov
xlat
pop
loope
dec
call
mov
shlb
sub
movsb
mov
adc
push
mov
pop
xchg
sahf
inc
icebp
jno
bound
or
mov
les
and
incl
xor
dec
push
xchg
insb
jbe
and
iret
mov
mov
mov
mov
call
decb
xlat
xor
pop
repz
push
cld
cmp
fwait
arpl
push
cmp
add
setb
inc
inc
loop
dec
dec
inc
fwait
scas
dec
lahf
daa
mov
add
sbb
sub
out
xchg
and
lahf
xchg
sub
ljmp
mov
inc
insl
adc
daa
mov
and
add
call
pop
cli
movsb
jge
jecxz
ds
sbb
dec
jle
aaa
adc
repz
pop
pop
daa
movsl
clc
js
ljmp
inc
addr16
cmp
jle
rcl
fwait
js
lods
pop
insb
xchg
and
data16
ds
mov
lcall
dec
xchg
fsubl
inc
sahf
jns
notb
xchg
jmp
or
mov
sarl
gs
test
sbb
dec
cltd
outsb
push
jge
push
test
lcall
clc
mov
jae
outsb
dec
mov
mov
sub
xor
incl
imul
imul
andl
loop
mov
sub
jno
fwait
incl
lea
and
push
mov
lret
adc
ds
xchg
int3
mov
xor
icebp
call
dec
adc
xchg
cmp
cmp
ds
cmp
in
jbe
mov
lcall
out
scas
add
xor
aad
mov
ljmp
scas
inc
dec
aam
mov
jnp
das
imul
movsb
push
pop
xor
test
jns
jae
lock
scas
pop
out
and
jl
mov
jnp
push
and
push
ret
dec
xchg
fsubrs
push
push
mov
scas
rorb
add
fdivr
or
mov
adc
mov
sbb
repnz
sbbl
aam
dec
stos
insb
data16
cmpsb
out
add
mov
mov
pop
fsts
lods
lcall
decl
mov
and
outsb
jne
dec
adc
repz
sbb
jg
jmp
inc
push
cmp
clc
lret
lock
out
aad
or
or
xor
cs
push
call
mov
mov
sub
ja
sahf
xor
cld
incl
and
or
lods
mov
stos
xchg
dec
mov
pop
addb
pop
nop
pushf
adcl
cld
pop
mov
mov
aam
ret
lock
jg
push
push
dec
lret
xor
xor
xor
xchg
ret
leave
call
call
add
dec
xor
sahf
fldt
xlat
jns
dec
xor
into
lret
shrl
sbb
aas
xchg
push
mov
or
adc
lds
add
das
jge
lods
push
add
ljmp
or
inc
jb
and
dec
fcoms
dec
mov
pop
testb
jge
and
gs
jp
pop
test
jecxz
push
and
lock
jmp
jo
int3
mov
sahf
sbb
std
inc
loop
fstl
pusha
xor
mov
adcl
popf
decl
sub
lret
data16
mov
xchg
mov
xor
loope
push
push
mov
popa
mov
mov
sub
mov
jae
mov
daa
cltd
dec
ljmp
ss
out
js
std
and
test
inc
inc
xchg
fstpl
cmpsl
lret
ljmp
adc
push
imul
and
push
jne
jno
repz
stc
pop
loope
test
js
jmp
mov
fildl
das
xor
jl
push
push
out
or
cmp
xchg
pushl
xor
xchg
xchg
adc
lahf
clc
movsl
add
sbb
dec
inc
add
js
sbb
in
pushf
jg
cmp
ljmp
je
jb
popa
stc
xor
xor
cmp
mov
push
pop
push
pop
jbe
sahf
lods
pop
jmp
mov
or
and
cmp
sub
scas
dec
mov
mov
cmp
scas
lahf
jl
ljmp
sti
stos
movsl
mov
dec
add
ljmp
or
cmpsl
fstpl
nop
rolb
movsl
daa
push
xchg
aas
cmp
leave
jg
jmp
popa
sbb
mov
call
cmp
push
adcl
ljmp
ja
xor
pop
mov
lcall
fdivp
jle
rcrl
loopne
imul
es
adc
movsb
scas
dec
inc
mov
cmpl
mov
pushl
ds
mov
jge
cmp
out
mov
daa
shll
push
in
in
pop
pop
decl
xchg
jl
arpl
pinsrw
cmp
clc
pop
outsb
mov
roll
jmp
ljmp
xchg
mov
ss
call
mov
lods
loopne
lods
cmovs
push
in
mov
popa
dec
outsl
cmp
inc
xchg
fisttpll
inc
mov
sbbl
into
xchg
mov
jg
ljmp
lcall
sbb
push
or
das
arpl
decl
sbb
stos
inc
and
push
test
repz
scas
jne
cmp
sar
pop
repnz
inc
and
cmpsl
das
clc
push
leave
in
popf
push
dec
les
mov
rorl
ss
mov
es
scas
cli
adc
push
hlt
mov
leave
decl
inc
mov
mov
sub
add
call
loopne
jnp
inc
dec
fidivl
rol
jg
inc
test
and
mov
xchg
push
cmc
cli
jecxz
movsl
mov
lods
or
inc
mov
dec
adc
inc
xchg
into
mov
cvtdq2ps
or
popf
add
lcall
pop
ljmp
leave
js
fwait
push
or
lcall
push
pop
pop
hlt
dec
push
sahf
inc
test
mov
inc
and
mov
fs
imul
es
cld
jecxz
xchg
mov
sbb
cld
cld
push
fisttpl
stc
adc
mov
nop
xchg
add
cmp
mov
fldl
mov
inc
dec
ret
inc
xchg
sub
ljmp
or
je
cwtl
addr16
or
call
sub
in
mov
imul
sub
dec
mov
stos
loopne
setbe
incl
pop
hlt
sar
fadds
push
insb
mov
out
stos
cmp
ja
push
shlb
lcall
addr16
push
jge
push
lods
lock
or
ja
popf
into
mov
mov
sbb
popa
sbb
lret
jmp
fmuls
cmp
xchg
and
cmp
fcoml
mov
rolb
jmp
std
iret
sahf
or
cmpsl
or
jo
jne
sub
jecxz
les
mov
outsb
movsl
ds
aas
jae
inc
addb
adc
or
push
mov
mov
and
andb
ret
loopne
jb
insl
pushl
sti
iret
outsl
scas
filds
addr16
jne
nop
inc
in
fidivrl
ds
jp
mov
cmp
outsl
incl
outsl
or
lret
js
ret
inc
loope
pop
fcmovb
push
push
mov
clc
adc
cmpsl
out
push
cli
cmpsb
cmpsl
test
int3
shrb
add
pop
int
sub
js
fwait
mov
jns
insb
test
lcall
add
xor
in
int
push
sti
xorl
in
mov
cwtl
add
clc
cld
loop
mov
faddl
dec
xlat
mov
jp
jmp
xor
movaps
and
adc
mov
ja
and
dec
mov
mov
mov
decl
loopne
lds
sbb
cld
xor
xor
dec
push
sub
inc
out
lock
adc
mov
add
cs
lods
dec
clc
mov
arpl
loope
pushl
shll
int
stos
ror
test
pop
pop
sbb
and
dec
repnz
lods
fildll
mov
aas
mov
mov
lock
add
push
cli
mov
inc
mov
push
int3
std
pop
addb
pop
ja
sbb
lods
push
xchg
ret
imul
xchg
rorl
xchg
lock
ljmp
sahf
pop
dec
mov
add
push
and
jg
jo
sub
fildll
sbb
rclb
comiss
xchg
adc
cwtl
daa
decl
sahf
mov
test
nop
fcomps
imulb
mov
pusha
xor
jecxz
incl
mov
fimuls
push
xor
and
or
cli
incl
sahf
ds
mov
cmp
lock
outsl
leave
movb
lods
jbe
xchg
fsts
scas
adc
xor
push
cmp
cwtl
pushf
adc
mov
popf
cmp
shrl
add
gs
into
lock
jl
mov
std
movb
inc
shr
mov
ljmp
sti
add
mov
xchg
nop
idivb
xor
and
test
pop
cltd
xchg
push
add
call
stos
mov
mov
inc
jnp
rcll
push
ja
dec
push
out
daa
lret
and
mov
jle
pop
xchg
incb
rolb
test
inc
cmp
xor
xchg
out
in
decl
jno
pop
imul
repnz
sbb
xor
adc
jmp
jg
jle
or
pop
jmp
sub
out
xchg
mov
mov
jmp
nop
bound
imul
out
outsl
sub
mov
mov
lea
ljmp
pop
imul
inc
pusha
ja
jg
mov
mov
pop
icebp
pop
adc
mov
stos
movsl
cmpl
pop
inc
dec
sub
fsubrs
cli
jmp
nop
mov
push
fstl
mov
ret
cmp
cli
cld
pushl
loopne
into
xchg
push
add
jge
out
pop
in
cmp
sbb
jbe
or
push
ljmp
shl
mov
sub
idivb
cwtl
xor
cmpsb
scas
cmp
movsl
lods
jnp
stos
test
adc
clc
mov
les
cmp
std
testb
mov
ljmp
imul
or
inc
push
sbb
mov
pusha
daa
in
mov
add
jmp
inc
cmpsl
pop
mov
jnp
xchg
loope
mov
mov
xchg
ret
out
sbb
adc
incl
fldcw
sahf
jns
and
arpl
and
insl
shr
decl
in
sbb
push
mov
test
leave
gs
mov
xchg
sub
movsb
or
out
mov
jmp
scas
adc
loopne
mov
dec
xor
xchg
leave
pop
iret
cwtl
ss
incb
in
mov
enter
sbb
popf
inc
cmp
mov
inc
adc
test
push
vpmacssww
arpl
mov
ficompl
movsb
int
cmp
jno
mov
arpl
pop
mov
lds
loop
adc
sbb
pushl
sub
xlat
data16
mov
inc
push
mov
mov
or
cli
cmp
pushl
lret
stos
lock
mov
adc
mov
es
aad
mov
incl
mov
push
xor
cltd
cmp
lahf
sbb
ljmp
lds
push
pushf
xor
xlat
mov
jbe
push
pop
add
jns
out
mov
mov
lcall
sbb
inc
and
or
sarb
jl
or
std
insb
stc
fbld
mov
loope
mov
les
mov
rcl
jmp
dec
jecxz
adc
fwait
test
jmp
and
inc
insb
loope
mov
fmull
idivl
dec
out
sarb
or
jnp
mov
push
and
jg
stos
sbb
jmp
out
test
stos
push
mov
arpl
xlat
jle
xchg
dec
aas
jno
in
in
int3
cmp
inc
loopne
int
test
push
add
and
ljmp
ret
pop
insb
jae
cmp
push
cld
mov
jne
push
inc
data16
stos
or
jno
and
pop
shr
call
lret
cmc
fmuls
cmc
or
aaa
jne
inc
aaa
pop
lcall
cmc
sbb
aaa
mov
mov
mov
addr16
dec
inc
xor
decl
push
out
popa
jno
sbb
jb
mov
fnstcw
popa
cld
xor
jl
mov
or
xchg
pop
sbb
inc
jmp
imulb
sub
decl
aaa
ss
push
dec
icebp
xchg
cmp
xchg
sbb
test
and
mov
cwtl
xchg
addr16
call
inc
pop
push
clc
xchg
nop
lods
inc
ror
ljmp
mov
mov
ja
aam
cs
jle
push
adc
lcall
jge
push
dec
daa
mov
mov
hlt
xlat
or
inc
mov
test
fcos
dec
dec
fs
dec
cli
inc
lea
jle
xchg
ss
pop
push
insl
clc
aas
stos
inc
rol
jnp
lahf
pop
pushl
fcomps
mov
push
dec
sbb
test
pop
ret
pop
out
lcall
mov
mov
icebp
jl
adcl
sub
fiadds
shrl
sar
dec
push
jae
imul
mov
push
xor
dec
dec
jns
aas
vmread
jg
adc
mov
aad
dec
and
lea
scas
fisubl
iret
lock
adc
mov
pop
decl
push
ret
adc
and
stos
mov
jae
jg
lods
fld1
and
dec
sbb
test
imul
sarl
test
or
js
enter
incl
push
or
inc
push
mov
jo
jge
and
gs
dec
ud0
jmp
inc
rorl
jae
test
and
pushf
mov
adc
lret
incl
xchg
jno
dec
into
js
arpl
repnz
in
mov
out
fadds
incl
cld
call
add
push
std
aam
idivb
mov
mov
lcall
jnp
movsb
insb
insb
cmp
icebp
aas
or
pop
lret
orb
out
pop
arpl
call
pushf
aas
sti
bound
or
inc
rcl
push
mov
sahf
out
lcall
pop
cmc
fs
add
roll
xchg
repnz
fwait
jg
mov
jnp
imul
dec
mov
sbbl
inc
inc
sahf
adc
inc
mov
jmp
ds
cmp
vmwrite
test
and
pushf
dec
shlb
lcall
inc
jnp
push
adc
adc
mov
pop
daa
xor
popf
ja
test
mov
ljmp
mov
add
sub
mov
push
mov
loope
sti
aam
jg
dec
mov
mov
lcall
sbb
cmc
fistps
pushf
mov
hlt
data16
ljmp
in
int
inc
cmp
push
ret
cmp
push
std
jns
jecxz
out
push
mov
call
pop
shlb
add
mov
and
xor
jo
pop
cmpsb
rcrl
into
andl
dec
pop
inc
or
mov
xor
and
out
jae
push
les
test
shlb
lock
mov
pop
stos
jge
sub
pop
sbbb
push
ja
jecxz
dec
inc
arpl
clc
das
inc
and
push
popa
and
pop
sbb
or
es
call
icebp
dec
jnp
dec
gs
and
les
test
les
and
jg
fdivrl
xchg
add
xor
xchg
inc
push
mov
and
incl
sub
scas
sarl
xchg
std
mov
int
jne
jbe
lea
cmp
call
fldl
pushf
fsubr
and
out
cmc
xchg
sub
sti
inc
pop
and
jmp
cmp
or
push
jl
xchg
xor
icebp
or
nop
push
fiadds
jns
inc
inc
push
adc
in
ret
movsl
xor
cmc
pop
push
sbb
xchg
add
out
fildll
lret
leave
fwait
es
ljmp
test
or
mov
sub
or
mov
ja
jge
fstps
pop
jne
loopne
jb
jp
add
cmp
mov
daa
ds
adc
loope
mov
jg
pop
jecxz
push
xchg
outsb
sub
xchg
jmp
stos
mov
arpl
push
fstpl
std
hlt
rcl
out
out
cmp
sub
push
jecxz
adc
lock
out
mov
fiadds
pusha
stos
ss
jg
mov
lret
adc
mov
jmp
fsubrs
or
mov
imul
ss
sbb
mov
pushl
stc
mov
sahf
xchg
mov
outsl
cmp
js
push
out
test
fisubrs
mov
movsl
xor
test
test
daa
std
xchg
data16
ljmp
lret
fcmovnb
iret
mov
xor
jno
sbb
movsb
jmp
or
inc
inc
sbb
cmp
movsl
sub
jne
push
test
and
insb
xor
xchg
int
out
fidivrs
inc
mov
loop
cld
add
jno
aad
mov
mov
or
or
xor
mov
into
clc
inc
xchg
mov
push
push
enter
pusha
test
fisttpll
js
pop
outsl
incl
dec
arpl
test
jge
addr16
lock
sbb
mov
pop
mov
lds
addr16
jmp
jb
jmp
mov
mov
ret
pusha
push
mov
fcomip
mov
cmpsb
ret
add
push
push
test
lcall
aad
mov
xchg
std
push
pop
or
cli
pop
sub
xchg
ljmp
imul
scas
mov
aas
mov
mov
ljmp
sahf
mov
sti
push
pop
orl
add
imul
jge
inc
iret
incl
ljmp
mov
xchg
out
cli
incl
push
dec
aam
ja
or
cli
inc
cmc
movsl
mov
dec
push
ljmp
ss
jge
movsb
and
adc
inc
add
inc
pushf
sbb
xchg
and
int
mov
aaa
rol
mov
in
cmp
lret
add
ds
push
jbe
andl
out
jmp
xchg
outsl
lret
push
add
xor
mov
lcall
movsl
sbb
fadd
adc
xlat
imul
or
outsl
jo
outsl
rcrl
xor
cmp
pop
dec
adc
popa
jmp
pushl
jmp
fcomip
inc
sbb
xlat
jne
jle
push
sbb
mov
pushf
popf
cs
aas
fs
push
xor
xchg
movsb
jns
aaa
inc
sub
mov
add
mov
test
jno
cmp
or
call
rcll
repnz
lret
aad
fsincos
leave
mov
movsl
lods
cwtl
pop
jg
sbb
stc
push
sub
add
mov
repz
incl
sub
mov
aad
ror
je
addr16
pop
dec
xchg
jmp
cltd
insb
test
incl
fcomps
pop
out
ret
pop
loope
js
adc
mov
pushl
loope
or
dec
mov
arpl
cs
mov
jnp
out
ja
in
cmpsb
mov
std
dec
dec
sti
cmpsb
sti
sub
shl
pop
imul
jns
icebp
fcomip
scas
adc
in
loopne
ja
sub
xchg
pop
adcb
push
je
imul
fildl
div
mov
fstpl
pusha
pop
sbbl
push
lahf
or
loope
add
call
cld
ljmp
push
mov
pop
rorb
icebp
xchg
addr16
adc
fimuls
sbb
inc
fwait
inc
shl
repnz
sbb
aam
adc
adc
xor
mov
sub
js
xor
or
adc
fists
test
ja
ret
and
int
adc
xlat
lock
mov
mov
rcr
push
cld
imulb
test
sbb
xchg
enter
jg
ljmp
and
es
sub
push
add
adc
mov
jl
jno
repz
ret
or
outsb
jmp
jl
int3
insb
pop
mov
ficoml
aas
clc
decl
scas
dec
repnz
fisttpl
je
push
lahf
in
dec
jge
adc
imul
inc
ljmp
in
add
jae
mov
in
out
stos
cmp
jo
jmp
fidivs
or
ror
or
push
addl
lcall
jnp
icebp
es
mov
out
icebp
stos
sbb
push
pop
fistl
adc
fisubs
mov
xchg
jae
inc
clc
lcall
lcall
imul
test
insb
sbb
xchg
hlt
clc
xor
sbb
mov
ljmp
xchg
lahf
scas
dec
sarl
mov
dec
addr16
mull
clc
ss
cmpsl
jmp
sti
stos
push
jmp
idivb
push
push
sbb
lret
shlb
orl
jecxz
mov
outsb
es
inc
out
lahf
jmp
cmp
mov
arpl
popf
cmp
std
decl
dec
cmpb
pop
mov
clc
into
and
and
out
clc
decl
pop
or
mov
dec
add
adc
sti
jo
mov
out
and
jl
mov
fdivrp
dec
push
adcl
adc
fadd
lds
bound
int3
or
xor
pushl
mov
decb
inc
pop
adc
imul
mov
xchg
iret
adc
adc
test
stos
jnp
mov
fistl
sub
jg
sti
add
jecxz
xchg
xor
xor
imulb
popa
sub
jle
mov
xchg
and
ss
sbb
pop
mov
mov
shr
dec
enter
lcall
xchg
xchg
leave
jb
ficoms
fcoms
mov
mov
outsl
sbb
aaa
std
mov
or
inc
jmp
push
or
lds
sbb
mov
enter
xchg
insb
mov
loope
add
sbb
mov
xchg
fs
mov
test
add
loopne
lods
cmp
sahf
pop
xor
test
cli
hlt
cltd
cmp
cmp
mov
mov
pop
pushf
arpl
aaa
dec
bound
out
adc
lcall
mov
xor
lods
in
gs
xor
repz
inc
lcall
lahf
stos
lods
in
cld
or
add
push
arpl
aam
lds
ljmp
dec
stos
xor
pop
fidivl
ds
jo
pop
cli
mov
sub
cli
lcall
mov
lds
sub
sbb
dec
movsl
fdivrl
mov
jmp
in
fucomp
xor
icebp
mov
lret
ret
xor
sbb
scas
movsb
lods
sub
or
lods
mov
call
xchg
das
sbb
je
add
rol
push
enter
movsl
repnz
stos
add
dec
add
push
int3
out
ljmp
mov
and
and
push
cmpl
dec
xchg
out
stos
int
sti
inc
mov
fxch
dec
fildll
dec
or
incb
leave
jno
ljmp
pop
xor
or
jg
or
movsl
dec
fdiv
add
sub
enter
mov
mov
jo
lret
add
incl
jg
test
pop
insb
xchg
mov
jne
in
cmp
xchg
aaa
cld
incl
loop
cmpsl
jmp
btr
loop
lcall
popf
fimuls
sub
mov
out
pusha
lret
stos
jmp
mov
imul
pop
icebp
adc
sub
or
xchg
mov
jmp
or
call
movl
sub
in
push
std
pop
mov
int3
fadds
test
js
insl
pop
push
pushl
std
pop
jmp
and
popa
call
inc
sbb
loope
pop
cmpl
push
mov
call
pop
sub
scas
daa
sub
sarl
wrmsr
test
decl
sti
mov
pop
shrb
adc
pop
mov
jecxz
mov
out
dec
or
xor
fdivrs
inc
sub
fnstenv
mov
sub
inc
jbe
mov
push
xchg
mov
jecxz
pop
incl
arpl
divl
test
inc
xor
cmp
sub
fidivrs
sbb
in
cmpsb
in
outsl
jmp
outsb
jp
jbe
fbld
and
lret
push
lea
push
mov
push
mov
rclb
or
jb
sbb
sub
inc
sti
cs
or
out
ljmp
adc
dec
xchg
mov
push
fadds
push
mov
inc
ficompl
je
jbe
sti
nop
adc
call
jmp
fistpl
fmuls
data16
sbb
mov
sti
inc
fidivrs
and
jb
xchg
shr
jmp
lods
arpl
lcall
fwait
cmp
jbe
ja
push
xchg
mov
mov
mov
mov
jnp
rcrb
jnp
xchg
pop
mov
sub
rcll
xor
adc
ljmp
cmp
fdivl
ret
sub
jmp
jbe
les
pop
incl
cmpsl
xchg
lock
daa
fdivl
outsl
sub
inc
mov
pop
mov
xor
lret
test
mov
sub
mov
cmp
ret
jnp
jno
imul
mov
mov
nop
mov
popf
xor
dec
fwait
push
push
lcall
sub
dec
imul
mov
fbstp
jnp
lcall
sub
inc
and
inc
sti
fsubrp
lret
out
or
push
pop
sub
ljmp
jecxz
mov
imul
push
cmp
lods
pusha
jb
outsb
iret
cmp
js
push
lcall
and
lods
cmp
imulb
pop
xchg
push
and
ss
jge
dec
mov
cmp
and
shl
mov
lcall
jmp
test
sahf
gs
call
pop
daa
int3
mov
fnstsw
mov
and
loop
and
jge
lret
xor
pushl
lahf
xor
jae
adc
xchg
xchg
sub
ret
je
xchg
fistps
das
push
imul
lahf
add
movsl
xchg
in
jmp
je
mov
in
sbb
cld
push
cmp
mov
adc
sahf
cmpsl
out
ja
sub
enter
push
mov
nop
xorb
dec
pop
out
incl
loopne
xor
lds
xchg
adc
into
je
xor
sub
xchg
insl
out
ret
sarb
push
fldcw
pop
loopne
cmc
jns
adc
cld
nop
fldl
ret
outsb
adcb
jge
es
mov
inc
mov
dec
jmp
jp
inc
imul
lret
pop
js
cmpsb
push
test
xlat
leave
clc
jg
jg
xlat
jb
and
pop
ljmp
adc
sar
incl
adc
jne
movsb
mov
shlb
push
addb
sar
cmp
lds
out
sahf
cld
xor
pushl
pop
mov
sub
pop
inc
insb
jl
add
popa
pop
out
mov
jmp
xor
cmp
cs
dec
divl
sub
ja
mov
not
andl
adc
sbb
inc
outsl
push
ds
cmp
sahf
dec
pop
cltd
push
pushl
nop
mov
jmp
outsl
callw
outsb
mov
xchg
pop
lock
xchg
or
fsubrl
loop
mov
xchg
pop
adc
push
dec
ja
lcall
movsb
test
mov
adc
cltd
pop
rclb
popa
inc
in
dec
sub
push
pop
outsl
ljmp
mov
ja
stos
xchg
push
pop
add
imul
push
rcll
bound
cld
pushl
pop
jle
sub
popa
add
jnp
pop
shlb
loop
filds
sbb
inc
loop
pop
and
add
xchg
cld
or
sub
hlt
xor
incl
adc
xor
dec
mov
or
cld
stos
repnz
xor
push
cmp
call
mov
cmp
stc
icebp
cmp
addr16
jb
loope
jo
add
mov
pop
adc
dec
insb
jge
xchg
popf
cmp
stos
in
pop
pushf
ljmp
decl
cmpsl
insb
popf
push
lea
daa
sub
xchg
push
and
or
jg
call
sti
negb
int
ret
sub
jmp
adcl
lcall
mov
pop
pusha
push
inc
js
test
sahf
lods
mov
and
push
push
cmp
push
push
push
rep
fcom
ficoms
mov
cs
loopne
adc
jmp
neg
rolb
sbb
repnz
cltd
lahf
aas
or
push
dec
xlat
jg
or
in
clc
push
les
adc
inc
shll
fists
sbb
sbb
incl
xor
sub
out
lock
in
scas
add
or
jns
mov
jl
jecxz
pop
movsl
in
lret
adc
xor
jno
stc
pop
pop
scas
pop
aad
ljmp
dec
sub
and
sbb
pop
dec
scas
sub
and
je
enter
lods
in
jmp
fnstsw
and
dec
mov
out
fldl
push
fcoms
sub
push
decl
mov
mov
imull
xchg
imul
adc
cmp
ljmp
cmpsb
fldt
mov
repz
loopne
xor
cld
fidivrl
fsubrs
ljmp
pop
lock
ljmp
cmp
mov
push
mov
dec
ret
sbb
mov
pushl
icebp
in
cmp
fwait
loop
lock
cltd
adc
jnp
ljmp
nop
push
lcall
xor
sbb
jne
aad
inc
das
popa
inc
add
imul
cmp
pushl
xlat
rorl
and
das
xor
pop
jp
aas
pop
inc
out
in
test
int
sbb
loope
jge
out
push
movsb
sbb
adc
mov
cltd
push
mov
div
xor
incl
loopne
pop
out
es
rcll
int
je
push
and
aam
fcos
decl
push
jmp
arpl
popf
xor
jns
test
rcl
mov
ljmp
out
incl
fstpl
push
mov
xchg
js
out
mov
mov
out
into
push
into
pushl
call
sbb
push
mov
aas
call
cltd
cmp
ljmp
cmpsl
xor
pop
sub
cmp
mov
inc
or
xor
incl
inc
and
mov
aam
dec
push
xchg
test
sub
xchg
pop
jmp
decl
ds
arpl
out
jno
dec
push
std
jge
pushf
leave
fcomip
pop
add
in
cmpsl
out
popa
xchg
add
jge
dec
mov
clc
fistpll
adc
sub
pop
mov
scas
pop
jecxz
std
xor
push
cmp
cli
xlat
int3
clc
lock
lock
mov
insb
cmc
xchg
cmp
std
push
sub
aas
sbb
fwait
add
lcall
in
sbb
jmp
insb
mov
pop
or
aas
das
xchg
mov
jns
xor
push
adc
lcall
xor
roll
sti
rol
cmc
lods
xor
jo
rclb
xor
jns
incl
stos
add
jnp
push
int
cmpsl
orb
dec
mov
jg
cs
jmp
outsl
lret
loope
dec
inc
dec
pop
arpl
aad
stos
cmpsl
rcl
imul
aaa
xchg
mov
mov
int
ret
sbb
scas
fwait
cmpl
mov
cmp
ljmp
sbb
inc
iret
shlb
cli
ljmp
push
pop
mov
loop
and
popf
lock
decl
push
add
test
adc
shrb
movsl
cmp
mov
inc
lcall
mov
sbb
jno
sub
fimull
inc
sub
push
pushl
or
inc
or
gs
shll
xchg
lahf
pop
sbb
fdiv
std
in
cld
jmp
cmp
out
mov
iret
xchg
pushf
mov
pop
call
call
stc
mov
mov
sub
xchg
insb
cmp
scas
pop
xor
sub
ljmp
loopne
dec
and
push
test
and
xor
lret
and
ljmp
mov
sub
int
inc
popa
push
cmpsb
jbe
dec
fcmovb
cmc
cmp
scas
cmp
call
cli
push
or
jge
outsb
xchg
mov
addr16
jg
decl
add
mov
xlat
test
mov
mov
fwait
adc
loop
ljmp
cmp
mov
and
popf
xor
jmp
pop
jnp
pop
mov
sub
pushl
test
add
and
and
mov
add
inc
add
jg
jmp
xchg
jo
icebp
inc
adc
xor
mov
dec
pop
stos
pop
jmp
popa
add
incl
sbb
push
int3
push
push
xor
sub
test
sbb
imul
cs
scas
cli
jle
inc
ret
aad
jmp
shlb
lret
bound
lock
sar
pop
cld
loope
cmp
xchg
inc
mov
mov
push
into
scas
sbb
jp
jg
mov
and
pop
in
jmp
inc
stos
lahf
xchg
cmp
inc
xchg
push
outsl
inc
mov
sti
test
jp
pop
in
pushf
fsubrp
mov
adc
pushl
cmp
mov
sbb
add
sbb
push
lret
adc
lcall
popf
loopne
or
and
jno
sub
jns
std
cli
es
out
jns
jl
imul
pushl
adc
or
pop
cmp
push
xlat
inc
pop
adc
add
cmp
mov
xor
out
dec
fdivrp
incl
lret
int
into
pop
dec
shlb
rorb
and
out
cwtl
adc
icebp
or
mov
cwtl
dec
pop
mov
fsubs
in
ret
ficomps
mov
or
out
or
iret
push
ja
ficoml
cmp
aaa
cs
arpl
xchg
loop
vmwrite
cli
pushf
sub
mov
int
pop
dec
jb
jle
test
sbb
outsb
cmpsb
aad
js
std
repz
pop
sti
adc
mov
rep
lods
jns
shll
and
das
shll
clc
bound
mov
and
inc
incl
nop
mov
and
mov
mov
das
cli
ja
js
scas
fists
data16
cs
out
mov
xor
ds
mov
insl
adc
xchg
hlt
pop
mov
jns
cmp
mov
or
ret
dec
iret
mov
mov
mov
call
push
cs
mov
sbb
mov
push
mov
pop
scas
mov
out
ror
lret
mov
sbb
jae
out
cmpsb
stos
leave
and
mov
sbb
cltd
pushl
cld
mov
in
and
sub
popf
jns
shl
ljmp
lock
fmuls
test
imull
jecxz
nop
xor
xchg
cmp
inc
mov
es
inc
or
cmpsl
jnp
sarb
or
dec
incl
adc
push
movswl
call
hlt
lock
cs
outsl
stc
pop
lcall
js
gs
inc
and
jle
mov
jne
mov
popf
push
xor
jmp
lea
faddp
and
push
cmpsb
insl
sub
fimuls
sub
cli
dec
cmp
sbb
push
and
test
or
lods
faddl
ret
lcall
push
dec
inc
pop
shl
sub
out
jecxz
in
rol
ret
push
call
lea
shr
and
mov
jnp
inc
push
fadds
fisubl
mov
rcrb
ljmp
xor
outsl
xchg
scas
jbe
shrb
outsb
and
dec
cwtl
inc
fimuls
sbb
xor
and
pushf
notl
repnz
movsl
in
mov
xchg
jecxz
pop
mov
dec
gs
decl
adc
std
aas
pop
pop
jb
cmp
aad
aad
ret
mov
mov
xchg
push
jge
out
xchg
mov
outsb
xor
adc
pushf
jle
ja
adc
push
jmp
jg
sbb
push
stos
imul
cli
xchg
jnp
dec
popf
mov
mov
jns
pop
fisubrs
bnd
mov
stos
pop
push
aad
or
pusha
cwtl
xchg
test
add
sti
jg
incl
je
mov
std
fsubrl
xchg
repz
call
iret
push
push
andl
xchg
mov
fwait
or
mov
sbb
xchg
test
jl
cli
jns
lea
xor
fldenv
jnp
insl
sarb
and
pop
in
outsl
pop
mov
out
dec
mov
incl
pop
or
inc
rcr
pop
ret
sbb
cmp
xchg
scas
aad
lds
stos
cmp
incl
push
int
jmp
clc
jg
mov
xor
inc
push
lahf
cmp
cmc
ljmp
and
lcall
pop
loopne
jns
decl
ss
jge
push
push
clc
jl
xchg
rcl
pop
pop
cmpsl
fwait
ja
push
xchg
inc
push
pop
dec
jnp
sbb
je
lret
sub
jne
inc
xchg
dec
clc
ss
call
incb
fstpl
mov
mov
jnp
out
test
mov
shrb
pop
push
clc
sbb
rcr
cli
daa
jb
rcrl
pop
rolb
add
rclb
decl
aad
fbstp
ljmp
outsl
inc
xchg
js
sbb
pop
data16
in
decl
repnz
cli
sbb
push
test
mov
scas
mov
stos
call
stc
xchg
sahf
xor
jmp
mov
incl
mov
out
out
out
hlt
add
lcall
inc
push
popa
addr16
mov
decl
xchg
ljmp
fistps
and
jg
and
inc
add
inc
and
decl
sbb
sbb
sub
mov
and
xor
call
cmp
test
sub
cli
cmp
dec
pop
pushl
std
jno
xchg
in
pop
cli
xchg
js
or
fwait
rorb
mov
jl
mov
jle
push
xchg
pop
ficomps
adc
or
push
dec
ljmp
clc
call
pop
sahf
hlt
xchg
sarl
mov
adc
mov
decl
cmp
pop
xchg
arpl
or
cmp
aas
call
cmp
sbb
sar
decl
push
inc
jo
ret
cli
and
jmp
aas
cld
neg
mov
mov
mov
dec
mov
cmp
mov
jecxz
lcall
sub
call
mov
xchg
or
inc
shrb
call
aaa
inc
lock
inc
mov
mov
daa
arpl
sub
addr16
xchg
mov
inc
push
jbe
mov
xchg
mov
fidivrl
sbb
and
subb
pop
dec
test
nop
fisttpl
mov
ljmp
push
hlt
or
cli
dec
xchg
push
cmpsl
stc
mov
cs
movsb
out
rcll
cmpsb
mov
or
pop
rep
testb
dec
arpl
xor
mov
shlb
sti
incl
or
xchg
ret
jmp
ss
outsl
adc
dec
movsb
xor
mov
ret
adc
mov
das
pop
or
pusha
loopne
mov
shll
jnp
pop
push
lock
cmpl
jno
call
sbb
inc
loopne
mov
pop
pop
stc
test
pop
movsl
mov
scas
cmp
jnp
movsl
xchg
call
loopne
loope
das
push
clc
and
mov
pop
in
data16
jns
pusha
mov
push
fadds
sub
cltd
jmp
adc
das
lret
push
or
and
mov
ljmp
adc
add
jp
cmp
jmp
aaa
sub
xchg
sbb
movsb
xor
call
pop
dec
push
movsl
pusha
push
mov
repnz
pop
cltd
aam
adc
mov
in
cld
jmp
lret
jae
mov
add
sub
jo
adc
or
iret
clc
jg
dec
test
cmp
mul
ljmp
into
pmovmskb
pop
mov
movsl
jb
xchg
ljmp
ljmp
leave
cmp
pop
mov
rcrl
mov
dec
dec
hlt
sbb
dec
in
pop
ds
pop
or
stos
es
fwait
and
add
call
pop
pop
cmc
shrl
jb
sbb
mov
sub
mov
jg
mov
loope
mov
xlat
lods
xchg
jg
xor
int
jmp
cmp
xor
lret
sub
stc
popl
mov
ss
addb
and
adc
sahf
mov
lock
mov
jmp
std
cltd
lcall
xchg
ljmp
dec
nop
or
xor
das
sar
bound
mov
and
cmpsb
cmp
jns
cmpsb
add
push
std
in
les
jge
cmp
shrb
scas
or
lcall
jp
sbb
cltd
xchg
lret
xor
pushl
mov
mov
inc
mov
fdivr
mov
or
inc
cld
incl
push
test
or
cli
xor
mov
movsb
subb
mov
add
in
dec
jp
fwait
push
sub
cli
lcall
cli
fwait
adc
cli
jp
jl
pop
jmp
pusha
pop
test
arpl
add
jmp
loop
dec
and
call
inc
xchg
mov
push
out
icebp
sarl
addr16
mov
sbb
rclb
lods
hlt
jb
cltd
or
dec
mov
mov
arpl
scas
or
aaa
mov
fldl
mov
mov
add
mov
call
leave
imul
cmp
jmp
incl
pop
gs
xor
andb
mov
fldt
imul
jnp
ret
imulb
push
jle
std
push
mov
call
sbb
daa
enter
adc
mov
imul
pop
lea
cmp
jmp
and
ret
mov
push
repz
lret
mov
fsubrl
xor
cld
push
sbb
sub
xor
cmp
das
cli
fbld
and
jmp
xchg
xchg
arpl
call
movsb
push
ret
aaa
shrl
imull
push
inc
xchg
scas
sub
add
jmp
or
repz
mov
enter
idivl
nop
push
cmp
call
inc
or
cmp
mov
cmp
and
xchg
and
out
popf
sbb
mov
jle
iret
stos
fldl
nop
inc
push
push
dec
arpl
pop
xchg
inc
sbb
ss
enter
push
mov
push
icebp
xchg
js
insl
push
xchg
lcall
hlt
or
jl
imul
add
pop
sahf
iret
je
int
mov
xchg
or
int
into
test
mov
fdivr
incl
insb
fidivrs
push
loop
out
dec
lcall
test
and
dec
sbb
popf
jg
cmp
push
inc
pop
push
xchg
lret
dec
setge
je
outsl
loope
mov
iret
pushl
nop
fmuls
or
outsb
std
out
outsl
and
sub
push
mov
push
ss
pop
loopne
pushf
ja
jg
aam
fcompl
mov
sar
mov
loop
xor
rolb
mov
out
aas
insl
dec
xchg
adc
lock
dec
les
sbb
mov
sub
mov
ljmp
add
mov
ss
cmp
mov
or
insl
scas
shrl
cli
ja
mov
scas
aam
imul
jle
nop
fldcw
decl
adc
cmp
in
jmp
cmpxchg
icebp
jg
ljmp
es
lods
push
inc
mov
mov
push
decl
out
in
movsl
outsb
jge
movsb
push
movsl
insb
cmp
incl
cmc
mov
incl
cmpsb
out
lds
pop
clc
or
loop
fbstp
mov
lea
jnp
cmc
cld
lcall
fisttpll
cmpsb
in
sarb
and
pop
out
aaa
lret
push
rcrb
ds
stos
mov
out
ret
xor
fdivrl
sub
sbb
sub
adc
call
popa
cli
into
pop
mov
in
fdivrs
int3
pop
hlt
push
fstpt
or
fdivrs
pop
jl
pushl
and
jp
pop
inc
repnz
pop
enter
ljmp
pop
imul
les
or
or
or
jle
mov
nop
jmp
sbb
xlat
icebp
pop
incl
imul
jae
jo
lods
sub
dec
mov
in
rclb
mov
jg
mov
and
dec
adc
xchg
and
lds
scas
mov
xor
loope
jge
clc
sub
jno
gs
sar
mov
je
pop
cmp
in
pop
pop
pop
and
dec
out
mov
lcall
enter
dec
rcl
push
mov
lock
push
xchg
jne
push
aad
dec
mov
daa
xchg
stc
sub
jle
mov
cmp
dec
pusha
or
js
lods
pop
lret
repz
jg
sub
test
nop
push
inc
inc
pop
ret
xchg
les
in
repz
cmp
cli
jbe
pop
out
xchg
lret
add
mov
sub
or
jmp
cwtl
xchg
mov
pop
push
mov
testb
out
pop
mov
imul
dec
mov
mov
inc
jne
out
sub
dec
sbb
ret
xchg
lcall
mov
xchg
jno
dec
pusha
jecxz
ret
pop
incl
dec
je
pusha
fisttps
movsl
aas
aas
xor
int3
repz
pusha
xchg
jmp
ja
or
cwtl
mov
lcall
and
mov
stos
aad
sahf
mov
loope
ljmp
into
pop
dec
push
jb
ret
pop
arpl
test
out
cmp
jl
pop
sub
and
pop
and
push
add
std
scas
in
inc
lock
lret
aam
jg
cmpsl
scas
inc
xchg
into
xchg
aas
fs
sub
pusha
clc
mov
ljmp
sbb
fcomip
imul
xchg
dec
stos
pop
mov
dec
lock
sarb
scas
lock
js
and
outsb
mov
inc
pop
jp
jmp
imul
incl
xchg
cmp
decl
pop
xlat
aad
loopne
rclb
insb
mov
in
add
hlt
ja
int3
in
mov
lea
shl
iret
repnz
lcall
mov
adc
xor
ljmp
xor
rolb
cmpl
negb
cs
rolb
cmp
rcrl
xchg
cmp
out
ja
nop
stos
jmp
les
mov
mov
cltd
fstps
mov
mov
push
loop
inc
nop
daa
imul
inc
push
mulb
loope
sbb
pop
mov
xchg
jne
dec
sbb
cwtl
fcomip
jb
xchg
bnd
popa
stc
lods
inc
push
fcompl
or
pushf
inc
mov
sar
decl
pop
xchg
les
lods
mov
outsb
ficomps
inc
out
cmp
mov
nop
pop
test
aad
cli
fsubp
in
inc
and
or
hlt
dec
jp
lcall
xor
or
sti
push
ljmp
mov
mov
stc
xchg
mov
loope
scas
repnz
mull
loop
xchg
dec
aam
dec
or
dec
icebp
loopne
mov
aas
sbb
or
push
sti
push
in
outsl
aaa
jmp
cmc
ljmp
pop
lds
scas
xchg
push
push
js
in
cmp
add
adcb
mov
jmp
mov
and
in
jl
add
jg
push
roll
subb
jb
adc
mov
mov
inc
or
cld
fimuls
cltd
sar
lcall
add
adc
jne
test
adc
or
pushl
in
or
mov
movsb
add
push
ds
jmp
add
lods
daa
sbb
add
mov
pop
add
dec
ljmp
iret
jns
movsb
outsl
pushf
ja
in
in
xchg
jecxz
int
or
mov
pop
cmp
mov
add
pusha
pop
pop
subl
decl
mov
int3
addl
push
dec
xorb
rclb
mov
lea
loope
leave
popa
pop
jl
sub
inc
xchg
add
sar
call
notb
orb
popa
sbb
pop
adc
int
sbb
mov
adc
jmp
mov
inc
jmp
shrb
imul
imul
dec
dec
gs
scas
xchg
sbb
and
out
je
add
call
dec
mov
add
cld
and
inc
lret
arpl
adc
cmp
mov
cmp
mov
push
out
ds
xchg
test
mov
sub
dec
jnp
in
jo
icebp
imul
ljmp
nop
out
lcall
dec
lretw
fisttpl
cmpsb
jp
out
dec
aad
mov
loop
clc
out
inc
jge
xchg
mov
shll
std
mov
in
scas
cmp
in
sbb
repz
decl
sbb
aaa
xor
add
cmp
in
ljmp
xchg
dec
bnd
xchg
and
cltd
jp
pop
pushf
pop
cmc
call
jns
or
pop
dec
lea
and
out
loop
sub
add
adc
dec
call
sbbb
add
mov
jbe
cwtl
and
cltd
xchg
inc
decl
xlat
js
cmp
aaa
sub
in
mov
jbe
cwtl
xchg
test
incl
fcmovu
fldt
xchg
mov
daa
fsubrs
add
push
pop
fstl
loope,pn
mov
mov
js
repnz
pushf
fcmovnu
lea
call
mov
inc
in
mov
mov
mov
rcrl
stos
es
pop
dec
cld
call
cltd
mov
adc
jne
cltd
jb
sub
mov
fiadds
cmpsb
iret
cmp
and
xor
outsl
xor
cmp
push
loop
incl
add
mov
jb
mov
adc
ss
mov
push
lahf
jecxz
inc
adc
ljmp
xchg
inc
xor
adc
ficomps
mov
popf
rcl
decl
xchg
cmp
pusha
sbb
out
add
test
inc
lock
lcall
sbbb
in
out
pop
lods
stc
and
add
pop
out
pop
decl
lock
lret
rclb
xchg
aaa
push
sbb
leave
scas
jo
ja
call
sarb
push
mov
sahf
inc
add
dec
icebp
icebp
pop
push
clc
popa
pushf
mov
decl
call
pop
repnz
push
push
mov
xorl
xor
call
jecxz
and
jp
out
ficoml
or
in
in
fisttps
or
sti
adc
decl
inc
jg
mov
dec
divb
arpl
jo
cmp
divb
ret
or
cld
pop
jnp
mov
ss
mov
push
loop,pn
and
jae
mov
xchg
popf
jnp
mov
dec
test
dec
outsl
jmp
and
lcall
xchg
add
popf
xor
xchg
ljmp
addr16
mov
or
mov
lcall
js
test
or
mov
xchg
imul
sbb
xchg
push
outsl
out
lahf
mov
and
push
cld
xchg
lcall
call
sbb
data16
mov
add
push
add
inc
repnz
xor
lret
cmpsb
dec
ljmp
clc
jmp
incb
enter
fwait
divl
jno
dec
test
inc
inc
addr16
ljmp
cmp
pop
dec
add
push
movsb
enter
gs
xor
mov
add
xorb
out
dec
popf
cmc
push
jbe
pop
jge
push
daa
sahf
xor
ret
dec
xchg
repz
flds
loopne
in
inc
jo
jmp
das
fsub
pushf
js
xchg
das
mov
push
insl
data16
imul
ret
es
jmp
push
lahf
inc
lcall
and
ds
inc
push
jb
adc
sbb
dec
in
xor
push
mov
ret
or
push
inc
inc
inc
jmp
mov
das
loopne
and
mov
fcos
incl
jle
jl
sub
mov
mov
xlat
ljmp
mov
in
push
mov
sub
lds
sub
fists
jge
cmpsb
dec
pop
in
gs
cmp
pop
je
or
cmp
xlat
adc
outsb
out
inc
js
test
sub
sub
inc
fwait
xchg
pushl
cmp
sub
aas
pop
cmp
sbb
fcomps
push
mov
call
sub
cmpl
lahf
mov
push
leave
lahf
and
rolb
inc
ds
jno
fwait
in
js
jmp
int3
sub
cmc
pop
cmpsl
xchg
movsl
xchg
xor
mov
leave
rcrl
lcall
insb
adc
jl
mov
popf
mov
aaa
jae
jge
aad
xchg
push
push
lret
cmp
scas
xor
mov
fcompl
mov
dec
in
mov
mov
jae
jo
gs
testl
xchg
sub
sub
jmp
mov
lock
imulb
repz
inc
jo
dec
cmp
or
pushl
sub
mov
mov
out
cmp
lahf
sbb
stos
cmc
clc
mov
stos
call
ljmp
cli
bound
cltd
out
fcomps
lahf
inc
xchg
pusha
rorl
mov
lret
jl
incl
negb
mov
push
ljmp
or
rclb
shll
jmp
mov
jns
sub
lods
pop
cs
out
jo
sarb
sbb
inc
mov
or
xorb
insl
add
ja
shlb
and
sbb
and
cmp
pop
and
mov
idivb
jl
xor
sahf
inc
xchg
ret
insb
imul
lcall
inc
sbb
enter
mov
cs
arpl
jg
inc
sbb
sbb
pop
aas
and
xor
jecxz
int
pop
lods
out
inc
push
decl
xchg
jb
test
imul
jge
inc
xchg
mov
mov
fcomip
pushl
cmp
jne
pop
cs
pop
fmul
insl
xor
sub
decl
inc
test
sub
movsl
cmpsb
das
lret
pop
dec
movsb
test
mov
push
clc
cli
test
push
call
or
sub
cmpsl
stc
addr16
cwtl
jmp
mov
push
xchg
adc
aaa
pop
lret
rcl
push
or
out
pop
cwtl
hlt
insl
pop
fistpl
ljmp
xchg
icebp
jbe
rcll
add
loopne
push
xor
push
mov
fcomip
mov
cmp
add
xor
mov
mov
incl
inc
jge
leave
movsl
jge
scas
xchg
das
mov
in
jmp
push
cmc
xchg
jno
jno
xchg
xchg
iret
push
xchg
dec
lcall
daa
sub
call
out
popa
aaa
fs
sbb
mov
xor
add
lods
adcl
adc
sub
inc
ss
jo
add
lods
adc
cmpsb
in
xorl
mov
and
dec
hlt
pushl
pushf
ret
repnz
inc
out
decl
or
mov
iret
sbb
fisubrl
lcall
pusha
push
ss
ss
call
sbb
mov
inc
xchg
pop
imul
jmp
sub
iret
xchg
stos
jo
andb
dec
xchg
or
scas
fsubrl
test
xchg
pop
add
sbb
mov
xor
inc
fs
pop
push
mov
xchg
imul
lods
or
mov
in
dec
call
in
cwtl
jp
insb
xor
mov
pop
loopne
adc
cmp
sbb
arpl
nop
sbb
jp
rcrl
cltd
pop
add
ljmp
xor
dec
mov
cmp
mov
aam
sub
sub
jp
mov
add
add
sbb
xchg
push
lret
and
mov
pushl
and
and
rol
lret
cmp
lcall
ficompl
cmp
in
sbb
cmc
out
fldenv
push
sbb
nop
arpl
ret
lahf
mov
hlt
idivb
mov
inc
call
cltd
out
jp
or
cmpb
mov
or
push
ret
mov
mov
ljmp
sbb
ja
sbb
dec
bound
pop
aad
and
xchg
lcall
cmp
movsb
and
jmp
outsb
jae
xchg
sbb
push
bound
dec
call
mov
cli
pushl
aam
adc
lds
xchg
cmp
push
or
imul
lcall
clc
into
cld
cmp
inc
lods
cmpsl
adc
jb
inc
and
stc
push
insl
inc
xchg
outsb
sbb
fcmovnb
jg
hlt
test
int
ret
lds
es
outsb
stos
push
inc
loop
mov
into
test
lock
add
push
adc
push
fadd
fldt
cmpsb
ret
and
push
stos
clc
pop
out
cltd
sub
loope
fimull
rcll
pop
add
das
cmp
jg
dec
xchg
lcall
mov
push
adc
ret
and
fisttps
sub
ljmp
fwait
andb
shll
push
mov
xchg
xchg
cwtl
pop
xchg
out
or
or
xor
incl
and
fstl
xor
pop
inc
mov
sbb
jmp
and
jne
sbb
xchg
int
pop
out
push
or
insb
cmp
sub
or
lcall
and
mov
xchg
mov
stc
and
pop
jl
cmp
add
jmp
xor
popa
je
jo
fists
sub
stos
lods
cmp
bound
int
fcmovbe
pushf
rclb
fidivrl
call
arpl
outsl
push
es
lea
inc
shrb
ficoms
incl
lret
mov
mov
negl
fdivs
cmpsb
sub
stc
or
and
scas
lret
jnp
sub
add
ss
push
sub
mov
dec
repz
clc
outsl
adc
fldt
or
xchg
mov
cmc
bound
sbb
sar
imul
dec
fldz
cs
js
into
cmp
imul
les
cld
imul
jle
fiaddl
pop
adc
fisubrs
call
test
jbe
decl
xor
mov
cmp
mov
mov
push
dec
xchg
outsb
sbb
and
add
lcall
fwait
push
adc
mov
repz
or
lcall
push
mov
adc
jmp
mov
jg
adc
sarb
fmul
add
mov
sahf
mov
mov
cmp
decl
pop
test
loope
sub
sub
mov
adc
shlb
dec
mov
decl
adc
shr
or
rolb
test
les
pop
mov
pop
mov
mov
cltd
push
mov
adc
mov
xor
cmpb
inc
movsb
mov
pushl
sbb
lea
js
popa
mov
sti
mov
inc
mov
mov
in
incl
mov
fstp
pop
movl
lcall
push
push
decl
mov
mov
ret
mov
ljmp
in
adc
repz
pop
out
cli
ljmp
sbb
adc
dec
repz
out
mov
add
into
jmp
shll
mov
add
xor
mov
loop
outsl
add
lret
xor
or
aaa
dec
pop
test
mov
mov
push
cmp
nop
imul
in
in
in
inc
mov
push
test
sbb
sbb
repz
in
js
es
fisubl
xor
js
adc
shrb
orl
mov
mov
jne
aad
and
stc
lea
in
or
cltd
je
incl
inc
and
mov
hlt
pushf
and
xchg
add
jbe
add
push
add
xchg
ud0
call
aaa
xchg
cmp
and
pop
sahf
sub
inc
roll
fidivs
mov
ljmp
and
frstor
add
mov
mov
cmc
xchg
lret
xchg
call
movhps
push
sub
jnp
fwait
or
repz
push
ret
sahf
jg
jmp
pop
sti
jle
call
cli
loop
xchg
push
les
ret
cmc
jmp
mov
pop
xchg
mov
idivb
ficoms
arpl
add
pop
iret
push
incl
push
jl
jbe
cmp
xchg
mov
dec
sbb
adc
add
mov
push
or
decl
push
sbb
bound
aaa
cltd
cli
sbb
xchg
jno
jmp
test
hlt
pushl
xchg
cmpsl
sbb
inc
dec
mov
dec
pop
push
mov
nop
and
call
test
das
inc
cs
sbb
or
in
cld
push
sbb
outsl
out
inc
xlat
cwtl
mov
cmp
aaa
mov
xchg
inc
addr16
lret
movsl
call
xchg
hlt
and
sbb
scas
ja
mov
jmp
enter
and
jmp
rcrb
mov
daa
aad
inc
cmc
cmc
jge
scas
rorl
cwtl
cmp
push
xabort
cld
jmp
outsb
mov
mov
inc
bound
ljmp
cmc
jne
ljmp
push
aas
add
mov
pusha
mov
cwtl
push
inc
outsb
push
mov
and
incl
data16
push
ret
mov
sub
jg
pop
dec
sub
jo
xor
or
out
jo
mov
out
imul
incl
add
mov
pop
adc
pop
imul
dec
ret
mov
cli
mov
fcomip
aas
mov
in
xlat
shl
lods
cmpsl
stos
and
xor
add
xor
fcmovnb
add
icebp
inc
pop
js
sub
int3
push
stos
sbb
mov
jae
shrb
jge
mov
jg
gs
pop
in
xchg
mov
das
xor
iret
add
pushf
lods
stos
leave
push
arpl
and
pusha
inc
ljmp
mul
inc
and
loopne
push
frstor
inc
out
sbb
jmp
inc
outsb
outsb
cmpsb
push
insl
fs
adc
ds
sub
pop
psrld
jp
int
out
outsl
mov
mov
sbb
cld
cs
and
ds
and
cmpsb
addr16
std
fdivrp
cli
add
and
fmull
push
fadd
imul
aam
or
lret
sbb
and
adc
or
pop
mov
call
add
lds
xlat
jae,pt
negl
test
jns
sbb
inc
adc
in
repz
fidivl
mov
sbb
jmp
or
pop
mov
das
sbb
pushl
je
movsl
ror
pushf
cmp
loop
and
or
mov
sbb
mov
or
pop
pop
dec
adcl
add
popf
push
call
ja
and
fcoms
mov
dec
xchg
es
jle
stos
jo
icebp
and
mov
test
jns
imul
xchg
jns
lds
or
pop
aaa
stos
ds
lods
fstpl
fwait
sub
or
je
mov
and
jmp
stos
ret
adc
gs
ja
add
ljmp
lods
jl
jmp
mov
mov
add
jne
aad
lods
loop
jmp
mov
pushf
sti
les
mov
push
or
dec
scas
les
aam
and
ffree
add
or
fcomps
jmp
test
mov
sbb
or
jge
xor
lcall
push
cmp
mov
or
dec
movsb
jae
fidivs
adc
jle
jmp
mov
imul
mov
sbb
mov
pop
divb
add
jns
cmp
dec
fwait
mov
lret
adc
mov
in
cmc
lea
dec
test
push
add
adc
cltd
popa
pop
xor
cld
pop
jne
sub
call
repnz
push
cmpsb
je
loop
ljmp
xor
call
mov
and
pop
shlb
out
out
pushf
jmp
xchg
into
mov
dec
loop
pop
dec
nop
ss
push
pop
lcall
sbbb
scas
mov
jns
lcall
jae
jp
or
sbbb
sub
popf
xor
mov
push
lds
mov
inc
add
aaa
adc
mov
sbb
lret
push
das
fldl
push
lahf
mov
mov
push
sub
jmp
sub
add
jge
xchg
xchg
add
aaa
test
fnstsw
xchg
inc
and
adc
call
xchg
dec
hlt
or
jl
xor
fnsetpm(287
jo
jbe
add
xorl
pop
clc
call
fprem1
mov
out
pop
hlt
pop
pop
imul
roll
jmp
aam
xchg
jecxz
xor
lods
in
mov
clc
push
dec
dec
jnp
pop
repz
movsl
pop
xor
std
and
push
sbb
push
inc
iret
jecxz
inc
push
addb
call
mov
loope
sbb
movsl
scas
insb
daa
insl
es
jmp
push
ja
lods
das
sbb
cld
fiaddl
fxch
jb
or
pop
cwtl
in
mov
mov
cmp
arpl
fwait
jbe
stc
cmp
mov
sub
lahf
shll
cmpsl
outsb
add
pop
xor
js
xor
pushf
xchg
jge
dec
pushf
inc
es
mov
xchg
dec
mov
sub
push
push
adc
test
call
dec
sub
push
xlat
popf
shlb
dec
pop
or
notb
mov
es
and
incl
enter
arpl
sbb
jmp
call
lret
mov
scas
test
mov
push
lahf
mov
push
aad
fiadds
decl
jl
or
push
fdivrp
into
push
xor
cmp
addr16
inc
lds
adc
fxch
std
hlt
std
ret
imul
pop
push
addr16
ds
lods
jo
mov
loope
pushl
adc
push
add
imul
imul
add
fldl
daa
lock
in
int3
stos
mov
decl
ficoml
push
push
test
inc
stos
jne
cmp
sub
xorb
dec
popf
insb
lods
or
pop
dec
addr16
jbe
int
mov
shll
test
add
mov
scas
incl
lret
and
cmc
jbe
sbb
imul
les
sbb
aas
addr16
ret
rcrl
add
mov
pushl
cld
ljmp
addr16
or
das
mov
add
mov
mov
fldl
mov
jmp
xor
lret
gs
sahf
fistps
or
mov
movsl
pop
shr
pop
rcrb
loopne
nop
icebp
incl
andl
aaa
or
cmp
pop
daa
fwait
mov
pop
pop
incl
sub
imul
jle
xor
or
hlt
iret
cmpsb
xchg
jg
dec
push
pop
call
int3
mov
mov
xchg
jns
jae
fiadds
daa
xchg
roll
test
jo
faddl
add
cmp
mov
add
das
clc
in
cmc
xchg
aam
out
mov
addr16
cmpsl
push
lds
push
icebp
lcall
xchg
out
pop
pop
lahf
dec
xchg
setl
loope
out
stos
call
jl
push
cmpb
sti
adc
adc
rolb
or
and
push
pop
orl
ljmp
or
popf
incl
xlat
scas
std
jnp
cmp
push
xchg
xor
mov
xlat
stc
jnp
mov
pushl
setb
adc
push
mov
mov
and
adc
pop
rorl
jb
aam
mov
sub
mov
shl
inc
mov
mov
enter
incl
jmp
jo
movsb
push
push
or
cli
int
das
incl
scas
add
jo
mov
add
xchg
nop
mov
xchg
xor
cmpsb
rcll
push
fs
jno
dec
cs
mov
gs
outsl
clc
push
mov
insl
adc
cmp
and
cmp
enter
dec
mov
cmp
sar
ljmp
mov
popa
mov
sub
lcall
lock
jl
and
jg
jp
bound
fwait
pop
les
add
mov
push
adc
mov
jg
jmp
jno
aaa
cli
ljmp
jae
daa
js
pop
pop
pop
xchg
call
incb
mov
out
stos
cmpl
cmp
in
pop
sbbb
xor
jmp
jle
shr
pop
xchg
cmp
hlt
stos
mov
mov
aas
addb
jg
lcall
testl
fdivr
mov
popf
jecxz
aas
add
push
decl
dec
ss
sbb
gs
mov
pop
cmp
jmp
icebp
subl
jmp
imul
add
cwtl
sub
mov
sbb
jno
shrb
jbe
push
pop
mov
push
xor
pop
and
jp
mov
or
dec
scas
repnz
stos
push
cld
add
or
leave
inc
mov
in
jg
xchg
lcall
into
je
pop
call
sub
jg
jne
and
xchg
test
jp
jb
push
jae
jle
jne
lods
inc
and
decl
mov
repnz
jnp
mov
es
mov
shl
aam
scas
sahf
fisttps
add
jge
nop
test
ds
pop
cmp
std
pop
mov
fldt
jne
ret
sub
mov
dec
pop
inc
mov
lcall
scas
bound
mov
inc
orb
jne
dec
lods
sub
int3
inc
xchg
adc
call
jb
xchg
gs
or
add
cmpsl
mov
mov
jbe
loop
jno
mov
push
pushf
std
pushl
in
inc
cld
rolb
es
mov
push
loopne
dec
lahf
rorb
sbb
fmuls
hlt
insb
pop
sbb
xor
jge
mov
fdivrs
outsb
jno
pusha
rolb
push
xlat
vmwrite
dec
push
jecxz
call
xor
mov
in
je
data16
test
cmpsb
xor
add
jmp
cmp
decl
or
lock
rorl
mov
mov
mov
call
pop
das
mov
outsb
mov
arpl
xchg
aad
test
mov
add
cmp
dec
xor
dec
lock
je
sub
sub
xor
aad
out
fildl
movsl
divl
inc
pusha
mov
jbe
cmp
fwait
dec
mov
push
test
shl
adc
dec
jns
mov
xor
or
push
fdivr
inc
fdivl
adcl
repz
mov
pop
mov
rorl
data16
decl
xor
push
pop
sti
jle
enter
scas
lret
mov
adc
sub
inc
xor
in
sahf
adc
add
xor
scas
add
xchg
hlt
cmc
ljmp
sarl
mov
jecxz
ljmp
shrl
and
pop
sub
xor
pusha
pop
pop
adcb
mov
jns
incl
pop
mov
andb
adc
sbb
dec
xchg
jb
fld
ficoml
push
call
aam
lds
cld
lret
fwait
int3
mov
lock
jo
add
sub
decl
lea
jo
mov
xchg
cmpb
cmc
or
mov
ror
and
sub
cwtl
adc
out
xchg
sbb
leave
das
sbb
aam
jb
test
ret
push
lods
lret
ret
loope
sbb
shll
adc
rclb
cld
fdivp
test
out
pop
in
dec
jl
and
push
pop
mov
cli
sub
sub
sbb
cmp
inc
dec
push
sub
inc
sbbl
push
loop
mov
xchg
jne
jmp
xor
int
inc
xor
xor
pop
xor
lahf
push
cmp
rcrb
scas
in
pushl
jno
inc
mov
or
out
ret
out
jg
fwait
popf
mov
mov
xor
jecxz
pushl
pop
shr
mov
mov
lods
icebp
jne
sub
aam
mov
mov
dec
out
inc
mov
out
out
icebp
inc
shrb
aaa
xchg
mov
inc
adc
incl
pop
push
mov
repnz
sar
mov
or
xchg
jmp
stc
mov
test
push
test
or
jae
sub
test
jl
jno
inc
push
and
incl
rolb
xor
adc
scas
and
mov
inc
test
stc
lds
jmp
daa
cmpb
xchg
cli
fisubrl
adc
fisubs
xor
mov
insl
ljmp
mov
sahf
mov
mov
addr16
aam
aaa
or
in
and
ja
push
lret
mov
mov
jle
adc
xlat
sbb
lcall
ret
xchg
inc
pop
es
call
mov
dec
push
mov
out
in
movsl
into
out
push
shlb
push
jmp
xchg
sub
stos
cmp
or
mov
sbb
xchg
mov
mov
mov
jg
and
cmp
push
xchg
push
dec
lock
scas
aam
jnp
loop
lock
dec
mov
jg
push
or
ljmp
adc
adc
xor
xchg
call
mov
in
mov
movsb
fs
adc
stc
arpl
push
inc
fwait
jg
add
ljmp
addr16
icebp
add
pop
adc
incl
lock
lock
nop
fsubrl
shr
push
call
dec
adc
mov
push
cld
rorl
push
mov
out
stos
ret
outsl
sub
aaa
inc
jae
or
testb
rcrb
cltd
adc
sbb
in
mov
push
jmp
pop
int3
psrlq
xor
pop
in
push
nop
dec
xchg
scas
pop
inc
jl
inc
mov
jmp
push
pop
xchg
dec
and
sub
test
sahf
mov
cmpsb
rcr
push
imul
pushl
push
imul
push
mov
and
insl
dec
out
xor
mov
push
fs
jg
andb
sbbl
mov
sbb
adc
test
ljmp
hlt
cmp
lret
push
dec
ja
push
inc
adc
lea
add
push
lret
jg
incl
andb
mov
or
imul
insb
sbb
jo
incl
outsl
jle
add
jmp
cs
push
fiaddl
andl
jl
test
incl
lcall
push
int3
test
pop
test
sub
sbb
xor
call
xlat
dec
or
jg
add
mov
add
mov
ss
inc
lret
test
scas
jle
mov
call
int
sub
rcrl
loope
push
add
std
xlat
sbb
add
mov
pushl
lcall
sub
pop
or
pop
adc
stc
pushl
xabort
jo
xor
out
dec
insb
adc
in
inc
push
push
stc
mov
ljmp
lret
aaa
jns
call
ror
or
insl
mov
test
pushf
jae
nop
mov
jl
pop
and
icebp
cmp
loopne
add
test
add
cmc
rcll
lret
cmp
fwait
call
fistl
test
incl
je
loopne
adc
movsl
and
dec
rclb
jo
dec
insl
loopne
rorl
mov
cli
push
dec
loopne
push
sub
or
mov
inc
or
pop
pop
cmp
adc
jg
xor
or
negb
sub
idiv
insb
cmc
cld
ljmp
push
lcall
std
dec
movb
andl
dec
imul
mov
sbb
test
dec
inc
push
mov
adcb
jnp
incl
sbb
movsb
mov
cmp
jmp
cmp
fisttpll
add
or
mov
push
icebp
jb
jge
pop
dec
mov
jecxz
mov
push
push
stos
lahf
push
add
enter
xchg
rorb
cmp
clc
mov
push
fwait
bound
sbb
jbe
push
xor
mov
scas
mov
inc
mov
sbb
test
lret
mov
outsl
dec
sub
jle
jg
in
mov
xor
outsb
insb
out
lcall
btc
out
mov
popa
aad
mov
jae
dec
mov
and
movl
sbb
mov
imul
mov
mov
fwait
pop
lods
shrb
and
sub
lcall
ss
mov
mov
les
push
dec
sub
push
push
movsl
jmp
mov
and
jle
add
xchg
pushf
lods
ja
sti
icebp
or
pushl
outsb
pop
pop
and
lfs
add
xor
rcll
pop
push
cld
int
movl
lcall
cmp
aas
outsb
inc
and
pop
xlat
in
das
cmp
sahf
xchg
in
ror
sar
idiv
cmp
out
pop
ret
je
push
cmp
add
sub
jle
xor
rorb
push
cld
mov
call
jns
insb
dec
dec
jns
mov
fisubrl
xchg
loop
out
dec
inc
cs
cmp
lret
push
mov
pusha
jb
mov
out
scas
or
pop
mov
movsl
ret
mov
idivl
out
cmp
mov
lods
ljmp
lock
or
cmpsb
sub
pop
fadds
rorb
repnz
out
outsl
push
incb
jle
loopne
cmpsl
adc
mov
or
lcall
test
or
mov
lds
in
inc
mov
xor
mov
mov
aas
jo
push
test
icebp
push
sub
shrl
sbb
jecxz
leave
mov
out
sub
sub
loop
mov
cmp
jnp
jnp
les
shlb
cmp
out
pop
je
fsub
sub
add
loop
imul
push
adc
jne
lds
in
inc
mov
fldl
mov
insb
in
fwait
xor
mov
jno
iret
scas
jae
mov
lods
mov
loope
sti
iret
mov
pop
sbb
aas
popf
inc
mov
es
leave
pop
sub
jo
pop
inc
in
jl
nop
mov
dec
dec
fmuls
in
in
sub
pop
sub
push
ljmp
ds
pop
loop
xchg
in
or
xor
pop
adc
dec
cmp
insl
rcll
and
mov
incl
sti
xchg
addr16
cmc
es
lods
repz
cmpsb
repz
jno
dec
daa
into
fistps
pusha
lcall
pop
lea
sbb
stos
mov
sub
jecxz
mov
mov
and
decl
sub
fs
rcrl
lcall
dec
sub
cmp
cli
sub
lret
push
push
stos
jmp
roll
lea
test
or
jle
nop
aaa
les
ret
dec
outsl
adc
ret
arpl
lcall
push
cwtl
shlb
jl
add
lods
sbb
clc
cmp
shlb
push
add
jg
bound
fidivrs
pop
popf
and
and
xchg
push
jno
leave
clc
call
add
jo
stc
mov
lods
iret
inc
std
xchg
incl
sbb
out
mov
fbstp
add
push
dec
xchg
push
jno
test
jmp
mov
mov
mov
popl
cmc
xchg
mov
pop
push
addr16
ret
sub
ljmp
sbb
jbe
sbb
scas
jge
inc
pop
fldt
fmulp
jmp
sub
xor
xchg
movsl
adc
jle
imul
and
dec
fcmovbe
mov
cwtl
dec
repnz
xchg
mov
in
insb
ja
repz
jb
jns
push
js
call
clc
lcall
xor
xchg
push
push
sub
ljmp
in
fistps
pop
push
push
mov
xchg
dec
test
fdivl
inc
pop
les
dec
xor
incl
xchg
stc
mov
push
je
or
pusha
test
add
orb
sbb
pop
es
pop
jno
pushf
mov
xor
cli
fbld
or
loopne
and
pushl
outsl
sbb
and
pop
subb
cld
popa
add
mov
pop
mov
or
xchg
xor
in
ja
adc
loopne
push
daa
xor
stos
xchg
fidivrl
jl
aas
pop
filds
lahf
insb
scas
sbb
pushl
repz
xor
or
push
mov
push
in
test
xchg
repz
jg
add
or
ljmp
ljmp
xchg
or
push
in
mov
mov
lods
pop
test
xchg
or
clc
xorb
rclb
mov
push
into
hlt
ss
sub
sti
decl
sub
shlb
stos
das
nop
sub
subb
sub
pop
dec
push
adc
sti
jmp
jne
aas
or
inc
xor
push
inc
cmpsb
lds
outsl
js
jmp
ret
decl
inc
insl
mov
push
jo
mov
mov
pop
add
adc
popf
les
or
jbe
stos
pushl
in
lods
popa
popf
rolb
shll
push
jp
cltd
popf
mov
inc
addr16
add
mov
insl
call
lret
sbb
and
jl
inc
pushf
cmpsb
adc
pop
loope
jo
jle
fsubs
enter
in
incl
ficompl
mov
sbb
add
imul
dec
xor
jmp
push
or
dec
xorl
rclb
xchg
jo
pushf
popf
sub
cmp
ljmp
es
mov
or
inc
lea
pop
stc
sub
pop
sub
mov
inc
mov
mov
push
add
cld
or
call
cmpsl
cmp
mov
int
es
mov
lock
adcl
cmp
sub
stos
adc
cmp
xor
inc
jmp
rcll
jb
push
mov
mov
idivl
jbe
sbb
jno
andb
clc
ljmp
cmpsb
mov
or
gs
out
xchg
xchg
clc
fcomip
arpl
imul
bound
stos
sub
jo
scas
sub
lahf
cmp
in
mov
aam
push
mov
sub
repz
push
mov
pushl
sub
stc
cmp
push
adc
out
pusha
in
adc
loop
dec
aam
fiadds
call
lcall
cli
bswap
or
outsb
ja
or
cmpsl
mov
and
call
cmp
xchg
std
sbb
xchg
pop
jp
sub
mov
icebp
or
dec
popa
testl
mov
out
jmp
mov
scas
into
jae
movsb
xor
imul
pop
mov
fnstsw
mov
sub
cmp
test
jmp
push
adc
adc
dec
push
out
sbb
xchg
fldl
cmp
shl
mov
pop
mov
js
dec
repnz
cmp
out
cmc
mov
pop
push
out
jnp
dec
pop
pushl
and
sbbb
inc
flds
push
mov
push
fs
stos
jae
popa
fcomip
xchg
dec
xor
pop
inc
cmc
iret
int
sti
sub
xor
sbbb
ljmp
fsubs
adc
pop
int
std
adc
push
lcall
stos
lcall
cmp
aas
ret
sub
inc
push
out
push
in
sub
add
test
jns
mov
out
idiv
decl
mov
xchg
fs
cmp
jge
adc
stos
popl
jne
ljmp
idivl
je
jb
in
outsb
jp
mov
jbe
adc
test
pop
and
push
incl
inc
in
jns
jae
mov
push
aaa
sub
mov
insb
mov
xor
jp
mov
xchg
add
loop
das
cld
dec
adc
aaa
cli
aaa
mov
xchg
cmp
decl
repnz
dec
add
pop
test
out
cmp
lret
cmc
out
xchg
movsl
ror
dec
ljmp
lret
test
setle
mov
push
pushl
call
push
hlt
lret
dec
xchg
sarl
or
movsb
sahf
jno
cmp
pop
or
jg
jmp
pop
pop
pop
cs
cmp
push
inc
les
scas
mov
fsubl
incl
sub
mov
in
sbb
or
jge
lret
mov
into
fstp
popa
cld
call
push
out
xchg
out
push
sbb
ret
std
xchg
sbb
pushl
cwtl
xchg
icebp
cltd
adc
aam
mov
dec
push
movl
adc
icebp
push
imul
dec
hlt
mov
in
and
xchg
add
pop
xchg
jp
leave
jo
decl
mov
xor
loopne
stos
push
jp
inc
loop
sbb
xor
icebp
pushl
sub
outsb
push
ret
xor
jno
dec
fmuls
fidivs
jg
pushf
lcall
dec
ds
mov
inc
xor
arpl
fildll
dec
scas
outsb
aam
dec
ljmp
xchg
cmpsl
xor
and
repz
leave
and
sub
inc
sub
stos
mov
add
int
sti
xchg
ds
pop
push
arpl
ret
repnz
pop
into
aam
cltd
test
orb
sub
cld
jmp
dec
stos
ljmp
push
mov
and
sahf
push
movsl
mov
call
pand
icebp
push
jmp
mov
inc
dec
call
xchg
jbe
mov
pop
xchg
rcrb
fs
or
pop
call
lcall
cmp
data16
lea
cmpsl
pop
cmpsl
js
lds
push
js
mov
shll
cmc
cmc
enter
mov
test
sbb
lcall
cmp
push
testl
stos
inc
dec
cmpsl
ret
cmp
cmpsl
in
inc
in
push
push
add
pop
orb
div
sub
bound
xchg
cmpb
fstpt
sbb
lret
mov
or
rorb
push
push
push
in
pop
cld
pushl
adc
sbb
out
add
or
into
sbb
les
mov
pop
mov
jg
dec
pop
mov
mov
jmp
inc
ds
pop
adc
ret
lcall
jbe
sbb
in
cmp
push
fisttps
shl
aad
rolb
mov
std
call
test
inc
mov
inc
add
cmpsl
sarb
push
push
fcomps
or
fldcw
movsl
inc
ret
cltd
and
adcl
push
outsl
mov
cld
popa
mov
call
mov
mov
cmp
sub
test
fnstcw
jo
pop
dec
cltd
gs
in
out
lcall
jle
loope
inc
sbb
rcl
pop
adc
js
hlt
cmp
call
rolb
repz
and
mov
xor
lahf
in
mov
sarl
rcl
or
pushl
pushf
movsb
inc
pop
into
gs
ret
repnz
nop
mov
fdivs
add
sub
in
cmc
test
or
fsubrl
sbb
mov
mov
pop
add
mov
mov
fistpll
add
sbb
sbbb
insl
clc
addr16
dec
push
orps
push
ljmp
insl
call
lock
ljmp
js
fcoms
dec
mov
xor
pop
out
out
arpl
call
pop
sbb
or
sbbl
lahf
pop
hlt
pop
add
cmc
lcall
jb
ret
and
incl
dec
lea
fwait
into
sbb
mov
mov
adc
sahf
pushf
in
ret
or
mov
adc
pop
in
or
pop
jecxz
lea
cmp
add
pop
lcall
pop
out
dec
int
test
test
mov
stos
mov
mov
jp
jle
sub
lock
ljmp
dec
insb
fstl
mov
jmp
dec
testb
and
adc
ljmp
inc
iret
loopne
pop
pusha
adc
jecxz
jmp
mov
push
cmp
inc
popa
aam
inc
cmpxchg
sbb
push
mov
cltd
stos
sub
cmp
stos
pop
cmp
ljmp
rcl
ret
movsl
push
jge
fstps
pop
xchg
loop
movsl
mov
xor
ds
jmp
fimuls
scas
dec
fsubl
xchg
and
add
scas
ljmp
xchg
cmp
call
popf
xchg
data16
push
jnp
in
push
or
dec
adc
ja
mov
cmp
cld
scas
clc
shll
xchg
mov
push
addr16
sbb
jmp
test
pushl
pop
js
test
sub
in
push
cmp
outsl
mov
ds
movsl
test
pop
movsb
lods
cmc
cli
xor
aad
hlt
add
mov
fsubrp
or
dec
xchg
adc
mov
fbstp
add
jo
push
das
sbb
xchg
fwait
mov
das
cli
ljmp
stc
test
xchg
in
mov
adc
cmc
sub
xor
fistpll
out
call
lock
lahf
push
inc
ss
push
rcrl
push
pop
insb
jb
lcall
cwtl
andb
pop
add
fsubrl
aaa
clc
aas
inc
cmpsl
cs
incl
call
inc
es
adc
negl
addr16
js
jne
dec
push
ss
ret
dec
test
dec
lods
stos
rolb
and
fldcw
push
pop
push
pop
fcomip
aaa
push
mov
orl
jmp
pushf
test
push
pop
mov
lcall
call
pop
xor
mov
mov
idivl
out
mov
and
push
cmc
ret
insb
or
jg
scas
pop
cwtl
in
lret
adc
push
push
mov
test
mov
xchg
fstp
jg
xchg
push
lret
adc
jp
sbb
out
ret
add
xchg
repnz
push
fwait
test
lcall
je
cmp
mov
testb
or
movsb
test
xchg
cmc
push
and
jmp
stc
out
pop
adc
inc
xchg
mov
aad
aam
add
mov
mov
loope
fdivr
dec
daa
mov
or
in
add
mov
mov
decl
xor
sub
loopne
mov
push
pop
lret
insl
jne
in
filds
adc
dec
dec
adc
pushl
push
mov
mov
sbb
addr16
xchg
ret
push
movsl
add
sbb
pop
scas
movsb
sub
mov
and
xchg
mov
lods
mov
repnz
pusha
mulb
int3
gs
incl
cld
and
inc
test
sub
mov
out
hlt
mov
cmc
pop
jp
dec
stos
sti
dec
int
call
jne
cli
add
xchg
leave
cmpl
popf
mov
xor
out
cmp
cmp
xchg
test
ficomps
jae
cmpsb
ss
mov
imul
popa
mov
lcall
ret
test
adc
jno
ret
addr16
sar
pop
mov
call
cs
les
sub
shr
sbb
arpl
mov
and
pop
dec
out
mov
cmp
fisttps
in
push
push
cmp
pop
xor
or
shlb
mov
mov
cmpsb
push
movb
inc
sub
in
inc
dec
lock
xor
scas
sti
fwait
sbb
inc
out
ret
adc
call
push
push
jmp
mov
mov
add
dec
xchg
in
xor
lret
push
mov
sub
fcmovnbe
pop
les
mov
lock
sub
cmp
xor
and
call
leave
xor
imul
call
jae
rcll
inc
ret
in
sahf
fcmovu
mov
dec
jbe
adcl
pushl
mov
xchg
xchg
dec
add
mov
jo
data16
sbb
fisubs
mov
dec
sub
stc
sub
xchg
loopne
aaa
jp
dec
cmpsb
xchg
xor
sbb
js
call
mov
out
jnp
insb
push
inc
inc
aad
lock
dec
pop
sti
jl
enter
mov
divl
sbb
jg
and
out
cmp
jb
add
mov
es
fiadds
jo
imul
in
or
cmpb
fidivrl
mov
dec
repnz
lds
sar
mov
outsb
dec
xchg
out
rclb
jecxz
push
ret
or
imul
enter
aaa
cmpsb
push
xchg
ss
rorl
dec
pop
inc
daa
xchg
push
test
lcall
loopne
lods
mov
mov
flds
sbb
push
push
xchg
pop
push
cmpsl
lods
fs
xchg
jg
shr
pop
and
adc
mov
fisubrs
mov
loop
add
pop
jbe
jg
push
repz
insb
mov
pop
std
xor
xchg
jns
in
or
call
dec
mov
xchg
pushl
enter
ja
adc
lods
push
xchg
mov
add
pop
cmp
inc
idivb
loopne
js
nop
cltd
outsb
adc
xchg
rcl
dec
incb
inc
jno
pop
ror
mov
leave
sub
packsswb
rorb
cli
cwtl
fyl2xp1
and
mov
mov
jle
repz
insl
add
lods
or
hlt
xchg
xlat
xlat
xor
fwait
roll
repnz
mov
inc
sub
mov
push
add
hlt
mov
inc
lock
fisttpll
ljmp
pop
loope
mov
mov
dec
xor
sbb
mov
xchg
sbb
and
mov
incl
cs
mov
cmp
movb
dec
rclb
movsl
or
or
test
test
cmp
nop
sub
jg
mov
cmpsl
js
cmp
xchg
jb
jecxz
sbb
gs
or
rcll
cmpsb
xchg
aad
mov
and
loopne
int
ljmp
stos
fmuls
aad
loop
sbb
je
inc
xchg
mov
sub
fildll
inc
aas
stos
daa
push
mov
mov
iret
push
mov
mov
cltd
cmc
jmp
mov
js
and
xlat
push
pop
outsl
out
mov
adcl
icebp
push
fdivr
adc
cmpsb
and
out
inc
adc
pusha
add
sahf
mov
or
add
add
outsl
incl
or
pop
pop
push
or
or
or
or
or
lock
shrl
push
adc
push
adc
adc
add
pop
sbb
fwait
jbe
out
adc
adc
add
data16
or
aas
mov
inc
add
ss
dec
sub
and
add
sahf
add
les
add
dec
adc
subl
imul
inc
cmc
add
add
push
adc
pop
and
xor
and
mov
rcll
bound
js
pop
test
insl
mov
push
or
movntps
dec
ret
pop
test
jbe
sbb
xchg
push
inc
sub
jecxz
test
xlat
or
mov
loopne
adc
push
lods
stos
add
pop
scas
cmp
adc
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
clc
and
lock
loope
icebp
mov
and
mov
xorb
scas
fiaddl
inc
or
orb
dec
lcall
rcr
push
ret
xchg
and
sub
std
cmpsb
sar
pushl
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
adc
push
inc
dec
add
stos
add
cmp
ja
out
cmp
xor
and
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
in
addb
pusha
add
std
or
adc
add
lds
cld
cli
and
mov
std
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
sbb
adc
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
incl
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
clc
or
lcall
fs
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
sti
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
mov
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
fcmovnu
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
cmpsb
mov
mov
mov
out
pop
cld
ljmp
dec
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
jns
mov
in
repnz
jno
jecxz
decl
jg
scas
cld
or
push
inc
sbb
paddb
mov
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
std
decl
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
sti
idivb
in
add
inc
adc
loope
fisttpll
out
mov
out
aas
std
cli
push
push
push
idivl
cmp
sub
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pushl
cmpsb
orb
mov
insl
fistpll
das
jmp
xchg
pop
clc
pop
hlt
sub
mov
add
lea
jg
gs
std
xorb
cmc
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
clc
pop
and
sarb
sbbl
jno
call
sub
cmp
pop
les
cli
mov
mov
inc
arpl
ljmp
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
ljmp
or
adc
and
sbb
xchg
jo
and
out
andb
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
decl
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
decl
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbbb
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
decl
push
jo
pusha
imul
add
mov
cmp
xchg
mov
fcmovnu
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
sar
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
idivl
sbb
mov
lods
loopne
sar
addl
lahf
xor
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
mov
xchg
aas
sub
mov
pushf
mov
repnz
and
mov
adc
div
or
inc
aas
push
rcrl
rolb
mov
lock
jb
fistpl
adc
call
jno
pop
mov
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
jg
lcall
lahf
or
imul
xor
dec
xor
fsubr
fistps
lds
sbb
jno
fidivrl
jg
stos
pop
add
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
incl
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
adc
cmp
inc
sti
jmp
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
mov
sahf
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
xchg
call
lahf
mov
or
out
lcall
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
rcrb
daa
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
aaa
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
ljmp
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
mov
mov
or
dec
ss
lods
lock
mov
or
repnz
mov
pop
adc
call
cmpsl
lret
stos
fisttps
pop
in
cmp
jmp
mov
and
outsl
insl
pop
lock
jmp
hlt
dec
mov
ja
pop
in
xlat
inc
aas
mov
jg
mov
sub
addr16
mov
out
daa
jp
std
adc
cltd
or
and
leave
mov
ret
nop
cmp
das
incb
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
pop
inc
push
jg
jmp
lods
mov
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
jmp
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
inc
add
decl
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incl
mov
mov
fildll
fsubrl
dec
add
or
inc
or
add
jle
sti
push
sti
pop
inc
dec
push
mov
fs
push
cmp
add
and
inc
adc
inc
enter
add
cld
sarl
orb
nop
jg
add
jmp
and
dec
xchg
push
push
imull
or
pop
mov
pop
add
sub
lret
fsubr
push
stos
addb
inc
ljmp
bound
mov
push
add
mov
out
repnz
or
ds
sbb
add
add
dec
push
rcll
sub
xchg
gs
push
leave
push
add
push
fcmovbe
adc
push
cmp
and
inc
sbb
in
cwtl
adc
sbb
rol
and
jnp
arpl
sbb
push
outsl
outsl
insb
push
push
xchg
lock
fwait
jge
jae
outsl
je
dec
and
gs
push
mov
test
inc
or
insl
insl
push
shlb
je
insl
shll
inc
inc
call
xchg
pop
std
dec
jne
js
stos
pop
inc
dec
inc
jmp
notb
outsb
sub
inc
jns
push
imul
fs
icebp
loope
fwait
inc
mov
mov
dec
outsl
insl
insl
mov
pusha
test
dec
addb
ss
gs
dec
jb
nop
pop
xor
sub
inc
and
inc
mov
xchg
repz
push
outsb
into
popa
aas
jo
xor
inc
insb
imul
sbb
xchg
sub
xor
mov
mov
clc
mov
arpl
adc
sub
push
shlb
fadd
sub
clc
sub
pop
ds
insb
jne
and
xchg
mov
jne
data16
xor
pop
push
push
push
mov
mov
sbb
jo
inc
push
fildl
and
andb
loopne
cmp
sbb
jne
arpl
mov
push
gs
pop
lcall
and
sbb
cmp
xor
lods
add
push
push
push
jp
loope
jne
arpl
and
das
cmp
or
fadds
popa
pop
or
inc
or
xor
packuswb
and
mov
jo
mov
or
sbb
fdivrl
inc
stc
je
insb
jae
arpl
out
or
dec
imul
inc
loope
pop
pop
repnz
xor
pop
push
xor
inc
dec
xchg
or
xor
xor
or
pop
jnp
pop
clc
outsl
popw
push
add
fidivl
cli
adc
pop
insl
mov
imul
mov
push
sbb
push
repnz
sub
dec
jae
enter
push
pop
ljmp
jmp
pand
mov
push
pop
testb
rorl
lret
and
jmp
push
loopne
adc
lods
xor
mov
roll
fists
stos
adc
dec
pop
push
pop
and
mov
xchg
and
inc
popa
push
pop
cmp
es
jp
ret
fcoms
adcl
insl
sbb
add
adc
in
sbb
aam
aas
or
loop
lcall
adc
int
push
and
out
gs
and
mov
pop
xlat
mov
fwait
aad
outsl
jns
jmp
addb
popa
push
inc
inc
push
sti
xorl
sbb
cli
mov
insl
sbb
jno
insl
add
sub
push
imul
mov
mov
xor
inc
push
or
or
push
sbb
stos
loope
addb
mov
pop
mov
mov
js
insl
mov
mov
test
xor
push
adc
stos
or
outsb
pop
pop
faddl
or
cmp
push
jne
inc
adc
out
in
inc
out
pop
pop
mov
inc
inc
inc
inc
or
cmc
push
jo
jae
add
sbb
movsl
and
cmp
mov
jae
movsb
test
and
pop
adcl
sub
pusha
imul
movsl
mov
jno
push
in
inc
pop
xor
lods
repz
push
shr
sub
mov
push
outsl
lret
xchg
add
dec
sbb
lea
xchg
inc
inc
jbe
ret
push
test
dec
push
add
sbb
shr
je
insl
shll
and
adc
lock
push
lock
jmp
xor
inc
mov
push
push
jne
xchg
add
xor
shlb
add
rorl
sbb
adc
mov
jg
mov
out
and
mov
addr16
inc
sbb
xchg
dec
adc
and
movsl
jns
mov
sbbl
mov
test
mov
fisttpl
sub
in
push
adc
or
pop
add
idivl
or
popa
fbstp
jmp
roll
cs
fs
cmc
or
sub
je
and
add
inc
jb
and
or
inc
stos
push
jmp
push
into
jo
inc
inc
lds
mov
push
arpl
pop
pop
std
inc
imul
push
jecxz
popa
loop
fs
push
sbb
fmuls
loopne
insl
shr
inc
insb
jle
unpcklps
inc
dec
stos
sub
and
dec
jae
popf
dec
push
xor
mov
xlat
push
bound
lea
adc
fcoms
xchg
jl
js
enter
jne
imul
dec
inc
cmp
adc
mov
jle
cmp
pop
scas
push
loopne
or
adc
jmp
and
inc
dec
push
push
pop
sbb
pop
lret
xor
shlb
add
mov
inc
push
inc
jo
mov
ja
mov
sub
pop
jnp
js
fbstp
dec
outsb
dec
in
shl
les
sub
ss
stc
clc
mov
pop
add
add
mov
xor
adc
xchg
movsb
dec
adc
add
or
movlhps
mov
mov
push
xchg
mov
movsl
mov
adc
les
mov
mov
and
sbb
cmpsl
mov
arpl
xor
inc
jo
filds
pushf
bound
xor
adc
push
pop
or
cli
push
jb
inc
jae
jo
pop
sbb
inc
xor
gs
push
pop
adc
xor
imul
pop
adc
push
jb
mov
shlb
cs
dec
jo
adc
movb
mov
dec
sbb
mov
xchg
cmp
adcb
pop
lock
or
fwait
xor
push
inc
in
je,pn
in
push
adc
mov
insl
addr16
and
jo
lret
nop
lahf
xchg
scas
arpl
mov
jns
inc
in
sbb
call
cld
test
jmp
je
fistl
ljmp
dec
jno
sbb
faddp
jmp
jb
xchg
sahf
clc
dec
mov
dec
and
cwtl
dec
fnstsw
insb
mov
lock
das
lds
add
movsb
popa
or
dec
movsb
ja
cmp
hlt
and
or
cmp
leave
add
insb
adc
shlb
dec
sub
outsb
ja
push
loope
sbb
mov
lods
loope
sar
fsubp
nop
cltd
xchg
adcb
mov
add
mov
pop
push
dec
mov
std
push
test
pusha
mov
aam
push
adcl
cmp
mov
pop
sub
insl
xor
dec
inc
inc
mov
daa
jbe
push
push
lds
aas
or
pusha
adc
sbb
pop
jbe
mov
dec
xchg
icebp
pop
and
xor
sub
fistl
jl
pop
xor
int
and
dec
popw
imul
vmovaps
pop
adc
ret
mov
or
jo
pop
jmp
pop
mov
or
fadd
scas
inc
sbb
jp
stos
mov
fs
inc
jp
sahf
outsb
cmp
pop
sbb
lcall
mov
lods
lahf
add
loopne
sub
jg
sbbb
call
jns
ret
mov
dec
addr16
fs
fildl
out
out
adc
test
incl
fidivrs
fs
fdivrl
sbb
pop
test
dec
mov
inc
inc
push
jne
mov
adc
mov
in
xchg
ffreep
jo
add
pop
icebp
or
mov
dec
imul
pop
jnp
sub
int
je
lret
add
movsb
mov
xchg
lret
ret
movsl
dec
ja
push
add
or
daa
lods
or
mov
or
xor
addr16
or
or
notl
sysexit
or
leave
push
add
adc
add
add
xor
inc
pop
ret
pusha
dec
addb
fwait
out
cmpsl
add
dec
in
add
and
jb,pn
popa
adc
dec
jo
es
sub
lods
mov
pop
clc
mov
inc
cs
out
lock
mov
aam
dec
rcrb
imul
ret
lea
pop
shrb
pusha
dec
xchg
mov
xchg
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
