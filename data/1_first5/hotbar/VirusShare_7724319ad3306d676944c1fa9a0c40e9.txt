divl
in
mov
mov
cwtl
js
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
mov
or
push
add
fidivs
call
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
sbb
inc
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
inc
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
addr16
sbb
ret
or
movsb
into
push
cwtl
in
and
fs
push
lock
sbb
jmp
add
mov
mov
xor
sbb
push
push
lods
or
pop
inc
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
xchg
sbb
rolb
sbb
push
sbbl
les
aad
add
jmp
push
dec
in
pusha
les
lcall
stc
sub
in
daa
dec
in
push
call
loope
pop
sub
sahf
or
lret
shlb
sbb
adc
inc
jmp
push
push
fisttps
add
in
inc
inc
mov
xchg
pusha
xor
pop
sbb
mov
mov
jge
mov
push
or
cmp
inc
mov
dec
jb
mov
pop
push
and
and
jmp
sbb
adc
sti
int3
pop
xorb
aaa
jb
mov
scas
cmp
movsb
sub
push
and
aad
stc
push
inc
cmp
jae
xchg
cmp
fdivs
push
push
stc
push
mov
add
and
push
ja
scas
sbb
add
push
mov
sub
push
insl
mov
xor
push
adc
clc
ret
add
sbb
jle
add
jecxz
push
push
ret
pop
adc
mov
test
and
sbb
dec
lock
pop
divl
add
call
cmp
icebp
pop
cld
jb
and
popf
sbb
pop
adc
pop
xchg
gs
insl
adc
iret
aad
sub
lahf
xchg
btl
push
sub
xchg
and
push
iret
sub
jo
push
rolb
sub
fldt
or
push
push
shlb
fwait
and
push
icebp
add
inc
push
xchg
rcrl
or
push
or
test
insl
inc
pop
or
and
repz
or
cmp
push
fwait
je
bound
add
dec
xor
mov
mov
mov
aas
outsb
sub
int3
push
xchg
mov
or
inc
jmp
push
cmp
jo
jecxz
sbb
sub
sbb
scas
sbb
jnp
sub
loop
in
sbb
xor
shlb
adc
jo
in
es
sub
js
push
shrb
inc
inc
sub
cmp
sbb
movsl
add
adc
lds
push
dec
mov
in
enter
adc
push
enter
and
or
inc
push
pop
push
or
push
addb
enter
jbe
fisubrs
sbb
punpckhbw
and
push
sub
pop
push
push
mov
inc
int
sbb
ror
xor
cmp
jnp
mov
add
or
pop
pop
jg
idivb
xchg
sbb
mov
mov
loope
xor
mov
inc
sbb
mov
pop
pushf
xchg
test
mov
in
lahf
lds
loope
push
push
push
inc
pop
test
mov
mov
fisubrs
lea
or
push
loope
out
notb
lock
call
cmp
fldlg2
ret
aaa
fiaddl
jl
or
pusha
xchg
mov
les
in
in
pop
push
and
cmp
xor
pop
jecxz
xchg
mov
int3
jge
test
inc
adc
mov
movsl
cltd
lea
mov
mov
or
mov
popa
scas
sbb
rclb
mov
mov
outsb
cmp
jnp
lea
mov
and
out
int3
cmp
je
aad
lock
lea
mov
ror
jno
aaa
je
nop
sub
cmp
loop
cmp
xor
insl
imul
popf
lea
jno
adc
ficoml
bound
aas
xchg
push
mov
in
js
jp
mov
inc
or
mov
add
dec
je
inc
or
push
fwait
and
insl
mov
mov
xchg
xchg
lock
and
push
aam
lret
out
push
addr16
xchg
cmc
push
pop
mov
stc
or
pop
xchg
and
mov
push
and
iret
mov
sbb
or
dec
popa
bound
xor
data16
ret
icebp
js
hlt
push
mov
sbb
xchg
push
push
pushf
ficoml
insl
scas
imul
push
movsb
sub
jge
cmp
hlt
faddp
pop
lock
jne
pop
mov
sub
push
xchg
sub
push
or
cmp
scas
cli
je
sub
dec
pushl
pop
in
push
movsl
sbb
sarl
pop
add
mov
iret
enter
sub
lds
ljmp
mov
sbbb
adc
push
ljmp
add
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
and
pop
push
push
imul
push
pop
jmp
sub
push
pop
icebp
jbe
js
mov
ret
add
testb
pop
push
or
adc
loop
sbb
pop
or
sbb
mov
mov
xchg
out
add
add
push
lds
xor
and
lcall
add
jo
xor
ljmp
jmp
out
cmovl
nop
push
push
push
and
jbe
mov
pop
pop
ret
push
push
icebp
and
dec
fcomps
shll
ja
xlat
or
repnz
dec
mov
mov
sub
scas
stc
test
jne
pop
arpl
add
adc
pushf
pop
push
cs
rcrl
mov
testb
add
pop
or
jne
js
sub
pop
cmp
mov
mov
jge
iret
xchg
out
test
inc
or
loopne
ss
cmp
add
sub
rcr
sbb
lea
push
mov
imul
cmp
ja
add
jmp
mov
push
adc
jo
clc
adc
pop
leave
ret
icebp
cmp
cmp
jle
std
notb
je
or
std
adc
mov
dec
mov
jmp
xor
cmpb
fwait
addl
push
jge
inc
stc
jne
fcmovnb
loopne
mov
jmp
xchg
in
addl
push
repnz
inc
pop
das
clc
ja
pop
push
ja
lea
decb
pushl
cmp
int
in
push
jge
popaw
clts
aas
mov
gs
pop
pop
arpl
adc
cmp
add
or
xor
xor
leave
je
and
add
rolb
pop
js
or
adc
test
fcoml
movsb
mov
push
roll
jle
je
push
push
cmp
cmpsl
test
pusha
lret
xor
push
push
push
popl
adc
and
pop
xchg
mov
scas
xor
je
test
ret
push
clc
icebp
psubq
sub
ret
jle
inc
add
xlat
sbb
push
sub
icebp
mov
push
mov
int3
cmp
or
loop
jbe
dec
in
aaa
js
out
adc
into
je
idivl
push
jl
mov
cmp
jne
push
push
jge
into
mov
ret
nop
pop
pop
jmp
push
pushf
dec
dec
pop
clc
mov
stos
dec
dec
dec
dec
xor
pop
lods
sub
xor
dec
and
sub
or
jge
or
test
outsb
or
adc
inc
clc
jg
inc
fimuls
movb
sbb
xor
cmpsl
sbb
ja
adc
xchg
mov
inc
or
shlb
adc
ret
jge
dec
sbb
xchg
sbb
mov
je
pop
ret
imul
and
shll
adc
adc
pop
outsl
and
test
adc
jns
cmc
sub
call
outsl
sub
fimull
cs
cmp
mov
mov
ja
out
xor
pushf
mov
ds
mov
popa
mov
push
lods
mov
mov
cld
and
out
lods
ficoml
mov
ret
inc
or
push
lahf
repnz
loop
add
lods
cwtl
push
aaa
clc
sub
jno
sbb
cmp
mov
jg
repnz
jle
push
daa
sbb
push
xlat
add
mov
jle
ret
mov
and
push
out
xor
cmp
lea
cmp
mov
incb
add
xor
sbb
packssdw
inc
add
or
adc
adc
pop
push
js
pop
push
jmp
ljmp
pusha
fimuls
sub
imul
adc
pmuludq
mov
mov
pop
lock
add
int
iret
loopne
test
push
scas
jmp
jns
insb
fadd
jge
sarb
pop
loop
sarb
xlat
xlat
mov
dec
mov
lds
les
xor
xchg
and
add
xchg
mov
add
or
mov
add
push
mov
push
outsl
fdivs
mov
jmp
push
lock
aaa
aad
clc
and
les
lea
push
mov
adc
mov
pop
pop
jmp
test
je
mov
jnp
testb
lret
add
inc
cmp
jb
pushl
movsl
icebp
shll
cld
pop
ret
push
mov
adc
inc
ret
push
dec
push
mov
xchg
dec
adc
sbb
adc
insb
scas
pop
xlat
scas
ffree
aaa
and
negb
add
pop
add
les
js
in
popa
cmp
mov
out
fmull
xchg
fildl
dec
repz
mov
add
mov
or
pop
mov
push
pop
jnp
and
add
mov
mov
inc
and
mov
jae
pop
add
or
sbb
das
lock
or
add
adc
cs
xor
push
push
sbb
mov
inc
adc
sbb
or
push
and
fldenv
sub
idivl
lret
sbb
das
sbb
sbb
add
addb
push
sub
in
call
pop
pop
lcall
jo
push
mov
mov
adc
dec
or
int
push
mov
add
adc
pop
inc
mov
lods
dec
or
lock
pop
incl
xor
cmp
ja
or
fistl
adc
and
stc
adc
cmp
scas
sti
out
popf
cmpl
push
cmp
mov
test
mov
push
cltd
pop
mull
mov
lock
mov
mov
je
test
rcll
jmp
push
pushf
push
pop
mov
fcmovnb
lcall
add
sub
fstpt
push
push
jbe
call
sti
bnd
push
sahf
lods
lret
and
rcr
in
hlt
jmp
sub
dec
je
insb
mov
add
jge
adc
adc
ss
loopne
sbb
jo
shr
or
jecxz
adc
int
popf
cmp
jecxz
pop
jne
jp
add
jle
sub
jg
incb
push
insb
xor
lea
out
sbb
add
mov
scas
adc
call
sub
mov
xchg
adc
push
mov
xchg
xchg
mov
push
sbb
mov
mov
scas
std
mov
outsb
and
push
outsl
or
stc
or
push
sub
mov
or
sub
push
in
in
out
lea
adc
fcmovnbe
pop
xchg
mov
adc
jmp
cmp
lock
sbb
jae
mov
mov
push
lcall
mov
fldz
andl
or
cmp
jmp
pop
cmp
sbb
and
jp
cs
xchg
mov
and
jmp
data16
sbb
mov
mov
pop
sub
push
inc
jns
cmpsl
stc
push
push
sub
lret
lahf
out
incb
sub
inc
lahf
mov
add
mov
lods
scas
cld
sbb
cld
cmpsb
js,pn
push
mov
fstl
dec
imul
aaa
outsl
dec
adc
and
lret
aaa
sbb
in
or
clc
movb
add
xchg
lret
or
adc
pop
sbb
lea
pop
outsl
cli
push
dec
mov
pop
push
lea
push
addl
xchg
or
xchg
xlat
dec
cmp
mov
cmp
inc
mov
or
add
dec
pop
mov
jge
mov
cld
adc
movl
push
pop
outsb
xor
ja
push
sbb
xchg
xor
mov
fldcw
cmpsb
jo
and
jb
out
push
lds
call
jb
add
cmc
imull
push
ja
mov
sub
fisubrl
insl
jo
pushf
lret
test
loope
xor
sbb
rorb
pop
sbb
clc
push
inc
jmp
clc
or
or
push
push
hlt
enter
sub
or
sahf
mov
imul
imul
jl
mov
adc
dec
imul
aas
adc
inc
push
sbb
jae
jne
jmp
test
mov
rclb
not
and
call
mov
push
mov
adc
xchg
jle
mov
imul
dec
fildl
pop
push
push
cmp
loope
add
nop
jnp
push
push
push
mov
mov
aas
iret
cmp
inc
push
push
push
xchg
push
loop
add
lods
push
sub
sahf
pop
js
or
inc
add
push
outsb
mov
lea
je
in
mov
test
mov
lea
jle
ret
in
and
cmpl
add
mov
sbb
inc
pop
sbb
lds
cli
hlt
dec
pusha
imul
xchg
push
ljmp
adc
clc
push
in
decl
popf
xor
mov
pushl
mov
adc
in
in
mov
dec
adc
mov
dec
lea
or
jmp
pop
cmp
je
dec
call
pop
sub
cltd
sub
sar
add
bound
in
in
aaa
daa
dec
dec
in
cmp
push
mov
add
fwait
cmpsb
fnstenv
adc
dec
cmp
daa
jns
rcrb
movsl
mov
push
or
inc
adc
pushf
push
pop
sub
add
jl
xchg
stos
add
sbb
sub
sub
and
push
mov
xor
cmp
fdivrl
int
test
mov
decl
sbb
and
and
mov
add
xchg
pop
andl
imul
fsubrl
cmpsb
inc
cmp
dec
or
dec
ret
jno
push
insb
mov
xchg
jns
adc
push
jg
mov
maskmovq
sbb
pusha
icebp
leave
and
test
aas
mov
or
adc
les
xor
mov
dec
ja
ss
ljmp
nop
and
or
rorb
dec
push
lods
lock
push
mov
inc
mov
jmp
pushl
and
repnz
and
mov
xor
pop
and
mov
daa
sbb
imul
lock
cmpl
je
cmpl
sbb
adc
xchg
sbb
pop
push
add
cmpsb
inc
divps
jg
jmp
mov
lods
rcl
xchg
andl
lods
bound
leave
sbb
mov
addb
push
rclb
adc
pop
cmpps
mov
or
add
test
testl
cmp
hlt
movb
add
lock
pop
cltd
imull
fldz
bound
es
sbb
mov
loope
fcoml
aas
mov
loopne
and
testl
cmp
xchg
pop
fs
incl
sbb
or
test
inc
pop
pop
not
xchg
loopne
mov
and
popf
push
pop
jae
pop
adc
xor
pusha
mov
cmp
flds
xchg
jle
or
in
pushf
cmp
inc
dec
push
jge
clc
cmp
pop
jbe
cmpxchg
sub
adc
cmp
mov
mov
push
shlb
insb
inc
jbe
fisubl
push
sub
or
nop
cmp
sub
or
movl
sahf
cmp
lret
adc
jl
pop
insb
push
pusha
and
andl
daa
cmp
rol
test
sub
cs
sub
push
adc
fwait
add
push
cmpsb
dec
lock
cmp
and
sbb
sub
push
cli
xlat
call
xor
or
xor
addb
xor
cmpl
pop
push
dec
xor
mov
not
sbb
test
icebp
mov
mov
cmpsl
cltd
out
imul
ds
pop
clc
pusha
fmull
lods
push
cs
sbb
adc
xor
pop
add
add
ret
imul
jb
faddl
and
jge
movsl
pusha
es
pop
or
and
rcrl
and
inc
popa
rorb
in
and
rorl
or
iret
icebp
xchg
shll
pushf
and
or
add
test
or
arpl
dec
push
add
push
xorl
dec
sub
mov
lods
cmp
xlat
cltd
xchg
cmp
dec
dec
sbbb
hlt
mov
es
adc
sti
and
ret
cmp
in
jne
xor
mov
inc
push
cld
sbb
in
inc
sub
inc
sbb
stc
xchg
addb
lret
pop
mov
jns
sub
cmpb
mov
cmp
cmc
je
cwtl
pop
shll
lock
xchg
push
stc
and
jg
cs
sub
push
push
cmp
or
mov
adc
pop
cmp
sub
es
pusha
roll
shrl
xchg
scas
add
pop
inc
shlb
mov
js
pop
mov
push
loopne
push
mov
sbb
mov
ror
or
push
sbb
or
pop
cmp
outsl
and
sbb
mov
xor
xchg
jo
repz
int
fsub
nop
rcr
add
adc
mov
jp
cwtl
adc
mov
mov
ficomps
in
sti
dec
or
jl
mov
cltd
mov
add
sar
push
cmp
push
adc
jl
jns
sbb
inc
or
lock
fucomi
jnp
call
mov
mov
mull
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
negl
mov
add
jne
sbb
call
push
or
insb
cmpsl
int
inc
cld
add
jp
jne
inc
in
fs
jo
ret
pop
popa
push
adc
mov
inc
sti
dec
loopne
fldz
inc
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
inc
mov
pop
lea
cltd
idivl
adc
xor
jnp
mulb
pusha
jl
icebp
jmp
jne
into
mov
or
xchg
arpl
mov
test
jle
cmp
lahf
xor
fidivs
mov
adc
sbb
jbe
inc
mov
lods
lea
clc
add
jge
aad
pop
inc
pop
xchg
imul
cmp
mov
push
jae
int3
jmp
dec
jge
jmp
mov
mov
xchg
mov
fildl
pusha
or
add
push
and
xor
xor
mov
fstpt
loopne
stc
mov
mov
test
xor
mov
pop
add
pop
add
ficomps
mov
cmp
add
push
jecxz
xor
cmpb
jle
and
clc
fidivl
jmp
outsb
mov
push
xchg
jp
mov
sahf
lods
jmp
cmp
inc
jne
pop
add
jl
dec
call
aas
mov
mov
adc
fmull
sbb
push
lea
ljmp
lock
jo
mov
and
sbb
mov
cmp
in
jne
push
lahf
je
je
xor
imul
mov
pop
and
pop
pop
jp
sbb
cld
jle
loopne
lahf
lods
add
loopne
nop
adc
pushf
iret
leave
xchg
pop
addr16
mov
mov
xor
mov
addr16
add
and
test
call
xor
pushf
sbbb
adc
gs
mov
or
adc
xchg
dec
mov
push
jne
mov
xchg
pop
jne
rcll
add
scas
jmp
add
aaa
leave
push
leave
xchg
pop
ja
add
inc
pop
push
inc
ret
sbb
push
mov
neg
or
lea
push
mov
push
inc
int
sub
adc
add
jns
pop
push
mov
ljmp
push
dec
add
push
add
push
or
fs
leave
or
loop
imul
mov
and
roll
add
ret
push
jg
or
clc
lods
jg
popa
push
jo
out
adc
leave
mov
jnp
push
or
leave
adc
push
xchg
lock
or
mov
mov
push
orb
loopne
push
cltd
shrl
push
push
pop
add
mov
pop
pop
sbb
nop
sbb
ret
mov
mov
insl
leave
sbbl
or
in
pop
push
xor
leave
rol
leave
stos
push
or
inc
and
and
lock
or
iret
movsl
pusha
or
mov
std
add
jno
push
inc
sahf
lods
je
ret
pop
pop
mov
pop
cmp
sbb
push
leave
clc
pop
cmp
lods
sub
clc
setb
test
jne
mov
sarb
dec
sub
rclb
mov
mov
xor
adc
pop
add
rolb
mov
dec
sti
mov
je
sub
pop
mov
pop
jmp
mov
mov
nop
lock
xchg
xorb
test
push
cmpsb
xchg
adc
pusha
je
rol
pop
fs
lods
jg
sbb
sbb
add
cmp
add
ret
fcomi
lcall
xlat
imull
daa
fsubl
push
shlb
add
mov
daa
or
dec
fsubrs
data16
mov
cs
add
dec
test
cmc
add
xor
push
mov
pop
cs
xor
clc
or
push
je
and
je
popf
jecxz
das
std
cs
or
test
aam
loope
jp
cmp
call
add
and
std
pushl
movl
add
adc
sbb
xchg
out
movl
mov
xchg
fmull
les
sbb
lods
subl
mov
lods
les
loopne
mov
sub
jne
or
push
xor
push
es
popf
pop
movsb
push
nop
cltd
push
in
xorb
cs
test
je
or
sbb
lock
mov
ret
jne
fldenv
es
push
or
mov
jmp
in
popf
out
fdivr
bound
inc
or
sbb
pop
pop
pushf
mov
push
adc
mov
gs
inc
shll
xchg
cmp
js
fsts
push
push
xor
and
lahf
test
xlat
or
or
in
push
imul
data16
pop
pop
cld
fiadds
xor
push
add
dec
dec
cmp
mov
test
xchg
mov
loop
inc
mov
lret
int
xor
mov
inc
insl
mov
dec
pusha
pop
jmp
push
mov
inc
sarl
mov
mov
call
sbb
movsb
aad
popa
xor
jecxz
add
in
jg
or
shl
push
popf
pop
ret
jbe
or
call
pop
push
inc
fmuls
iret
push
xor
xor
mov
mov
push
enter
repz
add
in
or
xor
cwtl
adc
mov
imul
or
dec
cld
outsb
repz
adc
mov
xchg
cmp
test
mov
mov
and
enter
adc
and
pop
insl
jne
stos
or
and
aas
add
int3
das
add
adc
pop
or
stos
fiadds
pop
xchg
xor
cli
dec
add
jnp
lret
out
or
orl
dec
insb
push
icebp
pusha
scas
add
add
pop
cwtl
movsl
aas
lcall
popf
inc
ljmp
mov
testb
call
repnz
fiaddl
mov
cmp
sub
call
add
cmc
bound
lea
adc
and
aam
call
rcll
pop
dec
lret
jo
cltd
test
or
fsubp
and
mov
xlat
xchg
adc
adcb
add
pusha
xor
shl
lock
or
add
ss
add
fdivl
shl
fdivrl
ja
inc
adc
adc
pusha
and
mov
push
jl
bound
push
jo
je
in
adc
sbb
pop
cmp
or
mov
call
or
push
adc
push
mov
jmp
orb
clc
mov
xor
aam
mov
fidivrl
push
push
scas
adc
fdivrl
js
adc
je
fs
pop
imul
rclb
addr16
or
stos
mov
pop
add
sub
xchg
imul
aam
cltd
sub
in
push
push
sub
add
call
sub
aam
lea
push
movq
or
or
mov
insb
in
sbb
push
neg
sbb
bnd
icebp
test
inc
and
popf
fidivs
or
outsl
mov
enter
add
mov
push
push
cmpsl
push
lods
lahf
fs
adc
addl
sub
jge
adc
faddl
push
mov
enter
addr16
data16
cmpsl
mov
mov
sub
das
fstpl
mov
bound
mov
jo
dec
mov
fisttps
in
lods
pop
sahf
hlt
jne
pop
push
mov
int3
fmuls
clc
mov
or
aas
shlb
pop
fsubr
sahf
sbb
movsb
pusha
add
mov
js
xlat
add
sub
xor
enter
adc
sbb
jae
bound
lcall
jb
sbb
loope
ljmp
jmp
inc
adc
rorb
cmp
repnz
jne
jo
xor
lods
push
and
inc
cmp
rcrb
out
jno
into
push
lcall
inc
loope
mov
jo
repnz
adc
idivb
jl
mov
dec
int3
push
iret
push
xor
imul
je
les
mov
push
push
fnstenv
cwtl
sub
adc
orl
adc
xor
pop
je
pop
or
cmp
scas
insl
or
jo
loope
or
cwtl
push
stos
sub
push
push
xor
shlb
lods
repnz
sub
mov
insl
cmpsb
and
loopne
inc
add
je
pop
mov
push
add
test
shrb
lds
inc
pop
lds
and
popa
add
xor
lods
adc
out
inc
and
xor
rclb
jmp
test
sti
or
xor
fcomps
mov
fisttpl
es
adc
nop
add
push
daa
stc
push
enter
add
push
add
in
push
push
pop
and
leave
sub
push
leave
or
or
sub
xor
sbb
pop
dec
cmp
cmp
jle
mov
or
andb
ret
shll
cld
adc
loop
add
js
scas
jno
ud0
push
es
xor
and
or
mov
push
sub
push
or
or
and
jbe
push
lods
mov
mov
lahf
pop
sbb
popf
pop
or
push
jp
xchg
pop
addl
outsb
insl
add
jb
xor
mov
mov
xchg
push
adc
inc
push
pop
or
insl
sbb
push
sub
enter
lret
outsl
adc
push
pop
sub
in
insb
push
mov
das
fimull
fnsetpm(287
dec
dec
mov
push
outsl
push
ret
pop
icebp
adc
js
jo
dec
out
mov
inc
push
xor
adc
imul
pcmpeqw
mov
data16
or
pop
sbb
int3
mov
push
ja
pop
aaa
fnstsw
push
mov
mov
inc
and
idivb
jo
jle
std
aas
insl
add
inc
sahf
cmp
je
ja
std
fwait
pop
jecxz
clc
rorb
add
mov
in
push
mov
sub
pop
lret
std
loope
pushf
orb
adc
in
aas
xor
dec
dec
enter
push
js
call
orl
and
sub
inc
jno
push
outsl
outsl
mov
inc
push
je
and
gs
xlat
lret
adc
pusha
in
mov
sbb
mov
and
test
orl
inc
dec
or
jecxz
inc
or
inc
pop
dec
push
call
adc
or
mov
or
add
out
mov
xor
sub
dec
in
sub
lock
inc
sahf
lret
lock
repnz
mov
enter
cmpsl
roll
test
out
jl
or
movsl
in
mov
ja
pusha
lret
push
cltd
rorl
imull
pop
or
xchg
call
in
adc
ja
lock
call
sarb
cltd
nop
test
inc
or
and
inc
and
cmpl
push
fldenv
inc
adc
js
dec
pushf
lds
add
pop
xor
push
outsb
mov
inc
pop
sbb
movsl
movsb
add
out
sahf
cmpsb
int3
add
adc
add
xorb
or
or
cltd
nop
imul
or
aam
inc
cmp
adc
or
push
adc
es
and
call
inc
inc
add
add
sbb
add
adc
cmp
clc
cmp
sbb
mov
mov
lret
sub
notl
sti
outsl
push
mov
pop
or
add
push
cmp
add
push
sbb
out
push
fsubl
lock
mov
cmp
or
and
and
js
sbb
mov
and
pop
adc
adc
cwtl
out
enter
leave
aam
sbb
or
pop
cmpsl
adc
mov
mov
cmp
test
rorl
push
data16
cmp
inc
insl
adc
test
negb
insl
pop
popa
mov
pop
push
andl
mov
push
cltd
inc
test
xor
sbb
sbb
push
xor
pop
push
out
jge
jo
and
push
mov
lea
ss
movsb
fs
add
xorl
cmc
dec
inc
pusha
daa
or
or
mov
repnz
sbb
popf
push
cld
xchg
ret
jge
jbe
int
mov
jne
push
add
xchg
add
xor
sbb
sbb
mov
and
les
and
movsb
dec
jb
andb
sbb
mov
fists
jne
int3
ss
ja
sbb
dec
xor
int3
cmp
test
repnz
jge
mov
inc
lods
ret
jl
movl
rcll
enter
adc
sub
dec
adc
push
pusha
mov
dec
test
loop
xor
cltd
inc
add
repz
push
loop
lahf
aaa
js
leave
mov
pusha
lcall
mulb
in
cmpl
mov
dec
cmpsb
dec
sarl
pop
adc
xchg
push
dec
gs
imul
sbb
test
mov
lcall
push
ds
xor
rcll
cmp
add
cmpb
push
clc
xchg
push
ret
xor
add
std
sbb
push
clc
or
mov
sbb
jmp
cmp
mov
sbb
out
add
out
jns
into
mov
test
inc
inc
push
pop
out
add
movsl
and
cmp
in
xor
push
cmp
out
into
add
dec
xchg
add
imul
mov
loop
dec
leave
js
lods
xchg
aad
in
xorb
add
fs
xchg
fsts
data16
mov
pop
jmp
dec
cmc
movsb
outsb
mov
cmp
ljmp
jl
add
movsb
orb
and
pop
xchg
lock
push
out
mov
lock
shl
xchg
lea
dec
push
mov
subb
jne
nop
lret
mov
mov
cli
sub
push
cmp
clc
lret
cwtl
lods
out
mov
repz
jmp
repnz
lret
enter
sub
sbb
xchg
and
xor
mov
mov
and
insl
dec
call
pop
adc
test
sbbb
outsb
rclb
test
les
les
jmp
loope
dec
add
jmp
push
rep
adc
and
hlt
setne
xchg
jp
jmp
cmp
jne
sti
aas
push
push
cld
lcall
mov
adc
hlt
jne
push
push
push
push
cmpb
push
jae
push
dec
ret
fiadds
or
push
mov
mov
faddl
push
push
pop
xor
cmp
inc
lret
out
sub
insb
sbb
inc
and
cmp
pop
and
stos
decl
orb
jbe
cmovne
adc
sub
mov
jmp
mov
push
es
mov
hlt
xchg
neg
dec
dec
xor
push
jne
je
dec
enter
adc
cmpsl
sub
add
ja
add
xchg
push
lods
jnp
ss
hlt
jbe
iret
jge
mov
shrb
idiv
jl
movzbw
shl
cwtl
adc
or
dec
je
add
sub
scas
sub
add
jmp
mov
idivb
jge
adc
es
push
push
mov
pop
mov
push
xchg
daa
push
push
push
cld
loope,pt
and
pop
inc
mov
nop
dec
ret
inc
in
dec
jb
mov
add
addl
les
push
mov
inc
sbb
cltd
outsb
idivb
add
add
fdiv
and
xchg
adc
push
push
test
cmp
add
push
sbb
dec
add
leave
lock
hlt
aad
fisubs
xchg
and
dec
in
sbb
add
inc
loope
push
inc
mov
add
inc
mov
inc
mov
adc
and
sbb
add
and
test
push
add
or
dec
or
loopne
jmp
jmp
push
je
xor
sbb
jmp
gs
sub
push
push
hlt
pop
ja
xchg
imul
xchg
dec
and
cmc
repnz
call
ds
daa
sbb
sbb
ss
or
fwait
mov
orl
or
push
add
pop
sub
dec
xor
pop
inc
jo
enter
mov
mov
jnp
rolb
pop
xor
xor
pop
loop
or
push
push
xchg
xor
test
jbe
xchg
mov
loop
or
fdivr
mov
rorb
test
xor
sub
mov
fimull
and
outsb
ljmp
mov
and
cmpsl
pusha
in
out
test
incb
mov
mov
stc
sbb
add
movb
sub
test
mov
pop
jmp
push
rorb
cmp
mov
mov
dec
repz
and
or
pop
out
fists
mov
pop
movswl
add
sub
cmp
setge
cld
dec
shlb
jle
cmp
add
jge
insl
daa
jmp
jl
bound
pop
mov
pop
fdivp
or
jl
fmuls
mov
adc
call
push
add
out
movsl
lds
push
out
or
mov
push
insb
nop
jne
int
sti
in
cmp
xor
lea
in
add
aam
iret
xchg
cmpsl
pop
mov
adc
push
iret
aad
icebp
inc
push
push
nop
jge
mov
cmp
push
sub
mov
icebp
or
xor
add
mov
out
ret
dec
leave
enter
test
insb
cmc
cmp
cmpsb
pop
mov
push
mov
into
sbb
imul
ret
inc
adc
rorl
push
push
inc
add
mov
push
mov
ret
and
test
mov
popa
sti
daa
and
add
sbb
mov
mov
mov
lods
ja
shlb
add
jb
repz
pop
popa
bound
push
sbb
jle
add
xor
loope
cmp
inc
sub
xor
ret
push
decl
adc
dec
cmp
jbe
cmpsb
adc
mov
loope
jno
mov
inc
add
cmp
loop
inc
add
arpl
mov
shlb
inc
stos
test
push
daa
ljmp
clc
fimull
xchg
shrb
add
inc
or
cwtl
pop
aad
movsl
call
cltd
cmp
pop
stc
cltd
test
lret
pop
test
sbb
adc
shll
loopne
dec
cmp
je
push
mov
jle
std
clc
cmp
jae
push
cmp
mov
fcomps
shl
and
daa
es
push
add
push
push
ret
push
add
push
out
xchg
imul
dec
cmp
dec
hlt
jge
mov
lock
cmp
mov
outsb
adc
or
cltd
or
psllw
mov
jmp
rorb
ljmp
or
decl
je
mov
sbb
hlt
jg
loope
jge
push
shl
mov
sub
jmp
mov
inc
dec
repnz
mov
hlt
clc
subl
cmp
adc
add
sbbb
inc
hlt
sub
push
dec
or
mov
inc
jbe
mov
fwait
xor
rol
mov
lock
or
loope
sub
push
nop
mov
inc
loopne
les
je
pop
dec
pop
mov
xchg
es
xorb
jmp
jne,pn
push
sbb
ret
loop
xor
xchg
fdivrs
cld
mov
nop
jne
lock
lret
js
clc
sub
and
rcl
sbb
and
cmpsb
cmp
inc
add
fdivr
push
push
or
cmp
in
cmp
pop
cmp
dec
push
fsubrs
and
mov
les
mov
roll
lret
ret
push
sbb
pop
aam
repnz
push
jmp
out
xchg
lods
pop
push
ds
leave
pop
xor
push
insb
jg
stos
sub
push
pop
inc
inc
stc
dec
push
and
flds
popf
test
lea
jg
sub
orb
or
cli
or
push
mov
andl
or
add
push
inc
loop
cmp
xchg
xor
mov
jge
out
push
icebp
andb
fimuls
mov
lcall
and
xlat
jmp
hlt
sbbl
pop
xor
lcall
leave
xchg
test
jne
mov
sarl
mov
add
aaa
adc
inc
jmp
leave
adc
inc
test
ret
pop
test
orb
sbbb
xor
mov
rorb
scas
hlt
inc
and
js
pop
adc
inc
leave
push
loopne
mov
adc
push
mov
sbb
adc
xchg
js
sub
adc
mov
inc
popa
adc
or
or
push
mov
xchg
push
cmp
pushf
inc
cli
les
add
pusha
mov
sub
add
fidivrl
xor
mov
pop
lods
outsb
sbb
addl
sub
cmp
mov
and
push
push
popa
inc
int
cltd
scas
test
imul
add
dec
xor
lea
lock
mov
xorb
jmp
add
sbb
xor
enter
jb
sbb
clc
adc
enter
cmpsb
shlb
mov
push
xchg
adc
jne
dec
jne
lea
adc
pop
lret
push
sti
adc
sbb
std
dec
lea
mov
push
sbb
lahf
sbb
shl
aam
mov
add
es
cwtl
je
dec
add
or
jne
add
dec
push
pop
add
xor
and
cmp
and
cwtl
sbb
push
xor
or
push
sub
dec
insl
mov
xchg
je
cmpb
jbe
pop
mov
inc
xor
sbb
aam
cwtl
adc
jl
mov
pop
call
out
cltd
aad
ret
dec
add
xor
sarl
mov
daa
icebp
inc
jp
lock
pop
dec
in
jne
sarb
loop
mov
call
shll
fs
fs
fucomi
fists
xor
xchg
out
add
adc
adc
into
inc
out
mov
push
jl
pop
and
outsb
cs
add
or
and
sbb
mov
add
inc
test
gs
push
sub
sbb
scas
pusha
xchg
popa
xor
lock
jmp
fistpl
out
sbb
push
fildl
fbstp
add
push
push
cmp
sub
shrb
mul
add
and
add
xchg
mov
mov
popf
out
and
jmp
push
push
push
sbb
test
stc
nop
testl
rcrb
xchg
add
pop
daa
mov
repnz
or
push
mov
cmp
dec
push
or
lods
mov
lea
inc
xchg
ret
mov
test
add
mov
ret
xchg
into
rcr
pop
jle
fwait
iret
shr
xor
push
call
xchg
add
and
add
lock
fwait
or
fwait
in
cmp
add
cmp
mov
push
cmp
pop
jmp
xor
cmp
mov
fnsave
pop
outsl
notl
pop
pop
pushf
cmp
pop
mov
push
dec
inc
or
adc
xchg
mov
test
push
mov
and
lock
shr
pop
pop
popa
je
test
leave
xor
sub
pop
add
or
jmp
cmp
aam
inc
pop
leave
sbb
aas
insb
cmc
add
xor
fsubrs
cmpl
push
mov
and
add
pop
xor
enter
sbb
repz
push
push
sub
add
push
xchg
loopne
cmp
mov
aaa
mov
xchg
pusha
adc
mov
and
fadds
jno
dec
repz
syscall
movsb
subl
pop
sahf
add
and
repz
sbb
aad
xchg
js
fcoml
dec
les
pop
stos
loopne
or
add
pop
js
fcompl
rol
or
popf
loop
or
rorl
out
mov
lret
push
mov
addb
push
push
xor
inc
enter
and
mov
push
lret
add
and
add
gs
dec
mov
aam
dec
sbb
ret
pop
add
lds
and
rorl
or
cmp
push
dec
mov
jmp
mov
sub
jne
xor
gs
dec
sti
push
imul
sub
cld
fdiv
push
lock
imul
stos
addl
cli
clc
mov
push
add
test
push
aas
add
push
lcall
push
punpckhbw
mov
push
lock
lret
test
mov
cld
sub
mov
imul
jo
fimuls
pop
cmpb
add
pusha
aaa
xchg
aam
call
loop
pop
inc
lods
lods
pop
hlt
shr
sbb
push
sub
sub
add
iret
xchg
add
push
xlat
fstl
into
out
cmp
or
mov
adc
push
add
or
push
mov
stos
cmc
test
or
addl
pusha
rolb
xchg
cmp
pop
pop
xor
dec
shlb
mov
imul
inc
add
or
rolb
sbb
dec
sbb
add
push
mov
arpl
or
and
cmpsb
push
movsb
ret
fs
test
or
jmp
insl
xchg
xchg
add
push
mov
push
call
ret
push
jmp
add
std
or
cmp
je
sbb
adc
push
push
shll
mov
pop
lret
dec
jo
clc
cmp
mov
bound
pop
and
jp
dec
test
clc
bound
rcr
mov
jle
mov
pop
push
movsb
push
push
sub
cmp
push
outsl
mov
sub
dec
rolb
mov
cmc
mov
sbb
add
les
sub
jecxz
dec
subb
push
test
push
or
cs
sub
xchg
dec
fistpl
or
mov
clc
decl
mov
cmp
je
push
lea
push
cmp
jbe
inc
add
cmp
sub
push
pop
push
adc
sbb
data16
sti
or
adc
and
in
or
adc
add
push
aas
push
adc
in
sbb
jp
rolb
lret
mov
inc
dec
mov
movsb
add
add
or
in
inc
shlb
outsb
xor
in
mov
neg
push
add
lea
pop
or
push
loope
in
or
add
mov
sbb
scas
je
lock
shl
and
test
ja
push
dec
movsl
inc
fidivl
mov
push
push
xor
push
push
cmp
je
fcmovbe
push
push
inc
sbb
jo
jle
add
movsl
xchg
push
mov
xchg
pop
sti
pop
loopne
cmp
je
push
push
aas
sub
jmp
sub
dec
pop
mov
jmp
arpl
push
push
icebp
mov
adc
lea
mov
and
pushf
xchg
test
loopne
in
notb
gs
cli
outsb
cmp
insb
rorb
mov
gs
push
in
decb
addb
and
push
add
outsb
push
mov
cmp
mov
push
cmp
je
stos
nop
cmp
cmpl
je
ret
pop
or
add
jae
inc
cmp
inc
adc
sbb
popa
mov
push
lock
jb
pop
cmp
push
sbb
xor
cs
jmp
lea
cmp
insl
fwait
push
and
jb
fistps
add
js
lea
sbb
lock
je
cmp
je
cmp
jne
add
cmpsb
mov
rclb
xor
in
call
outsb
or
mov
jmp
outsl
outsb
pop
mov
cmp
ret
adc
ret
adc
mov
pop
clc
loopne
mov
mov
jp
xlat
test
add
dec
lea
cmp
mov
jne,pt
xchg
push
xchg
out
jl
push
mov
mov
cmpsl
jp
ret
or
aad
mov
sub
cld
lcall
jl
ds
jge
and
mov
pop
movsl
dec
arpl
aam
leave
ret
or
sub
in
pop
add
and
adc
clc
aaa
xor
icebp
cmpb
or
ja
xor
dec
mov
sbb
inc
aaa
popa
lcall
mov
out
xchg
rorb
add
push
sbb
xor
xchg
mov
add
sarl
push
pop
push
inc
adc
mov
dec
and
mov
sbb
ret
jmp
arpl
in
cmpl
in
xor
filds
sub
or
mov
cmp
gs
je
cmp
jne
mov
cmp
mov
ficoml
inc
lock
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
divb
and
loop
adc
lcall
sub
inc
sbb
cli
cmp
jbe
mov
lea
mov
cmp
fs
dec
inc
jmp
inc
add
or
add
mov
pop
mov
sub
jne
ret
or
dec
add
cmp
cmp
je
mov
lea
sbb
pushf
lods
lock
and
mov
inc
xor
inc
cmpl
pop
sahf
jne
cmp
notb
mov
mov
and
adc
je
sub
jb
mov
in
ja
shrb
enter
sahf
fidivl
in
test
add
push
clc
ljmp
pusha
adc
and
cmp
shlb
inc
sub
popa
loop
jne
mov
pop
iret
xor
jo
movzwl
mov
xor
xor
adcl
pushw
jecxz
add
jmp
cwtl
aas
les
mov
mov
inc
orl
fidivl
test
add
in
add
xor
insb
mov
je
push
mov
mov
inc
rorl
call
cmp
dec
push
jmp
cld
jbe
test
sub
lea
cld
pop
pop
cld
add
jmp
xor
ror
add
lret
cmp
jg
or
jge
add
outsl
outsb
outsb
outsb
or
jle
es
sub
sub
and
add
pop
cmp
jl
pop
jle
pusha
mov
mov
jbe
or
jb
lock
pop
popa
test
fwait
and
mov
je,pn
test
jne
je
outsb
roll
and
xchg
je
je
out
sub
and
add
add
inc
sbbl
push
sbb
lds
add
cmp
mov
inc
push
push
mov
inc
and
sahf
call
adc
cmp
push
mov
je
das
push
add
inc
es
inc
sbb
sub
ss
jge
insb
add
push
movl
sub
movsb
pop
clc
sti
mov
mov
add
push
add
cltd
pop
cmpsb
outsb
stos
push
adc
aad
push
inc
mov
or
pushf
pushf
lret
jle
xlat
add
mov
jbe
imul
add
mov
in
ret
lods
push
sbb
cmp
push
jmp
mov
xor
fdivl
pop
movb
push
inc
lea
jge
mov
mov
add
pop
jb
aam
in
pop
mov
mov
test
mov
loopne
std
jge
xor
mov
or
xchg
lods
cmp
xchg
cmp
xor
lock
lahf
inc
mov
lcall
in
rclb
arpl
frstpm(287
mov
dec
fadds
inc
and
jae
rcpps
xor
loope
and
cmp
je
test
adc
sub
push
fsts
sti
mov
loopne
pop
jp
or
jmp
shll
xor
mov
movsb
movsb
add
arpl
or
xchg
pop
pop
add
cmpsb
inc
invd
fisttpl
stos
loopne
punpcklbw
pop
aam
xor
pop
xchg
loopne
outsl
mov
lods
sub
sub
adc
inc
or
add
inc
scas
aad
test
scas
fsubs
in
jl
add
cmp
add
mov
adc
cmp
sub
push
mov
or
add
sahf
push
cmp
int
cmp
hlt
es
inc
adc
jne
xchg
jle
dec
push
cmpsb
xchg
shll
call
lods
jo
sbb
or
push
pusha
sti
pusha
jb
cs
push
xor
inc
or
icebp
jo
cwtl
and
add
inc
fildl
std
decl
add
outsb
cltd
jmp
jno
rcr
inc
outsl
cwtl
insl
mov
add
mov
into
push
js
add
and
dec
mov
in
cmp
push
xor
jnp
jne
lahf
jne
andl
add
bound
xchg
push
ret
adc
pop
inc
xchg
sub
out
das
or
jne
iret
push
xchg
and
push
pop
leave
add
or
xchg
test
and
cmp
or
mov
test
and
lahf
or
jle
rorb
and
sub
xchg
sub
mov
add
aam
push
sub
xor
xor
mov
xor
inc
shl
in
push
in
xor
lret
pushf
es
stos
jmp
lock
shl
sub
fld
mov
jne
adc
push
push
fdivl
jne
sbb
roll
lods
cmp
jnp
das
movl
icebp
sbb
das
bound
into
xorl
jbe
mov
inc
not
sbb
cmpl
or
adc
stos
mov
jb
fcomps
xchg
jle
jo
shr
cmp
je
sarl
lds
lds
add
inc
xchg
ret
cs
loope
jge
pop
and
aaa
sbb
inc
and
cmpsl
das
mov
inc
js
cs
sbb
add
iret
lock
lcall
shr
insb
in
fsubr
cmp
in
test
push
push
andl
shrl
call
sbb
xor
jbe
jp
and
aaa
subl
inc
pushl
jmp
maxps
lcall
cmp
je
lea
cmpb
cmp
jne
les
push
jne
push
loopne
pop
cmp
push
icebp
adc
push
inc
incl
fldcw
mov
jmp
mov
push
jmp
test
movsb
push
adc
in
out
jb
sub
lret
loope
cmp
addl
jo
and
jae
inc
xor
fidivrl
push
and
test
add
enter
mov
jns
loop
ret
jns
ret
or
lahf
push
sbb
cmp
loope
xor
ret
shll
cmp
pop
loopne
orl
push
cmp
or
adc
mov
movsl
jne
rorb
jecxz
add
sbbl
mov
cmpsb
or
xor
push
jmp
mov
test
dec
xor
mov
add
add
push
push
xor
fsts
push
sbb
lock
pop
arpl
push
push
test
push
jo
jmp
lret
mov
adc
cmp
xor
in
add
in
jbe
cmp
fdiv
xor
or
push
or
push
fadds
movsl
push
sub
xor
in
mov
cmp
cmp
push
jle
mov
sbb
pop
ret
mov
mov
xor
adcb
dec
in
add
in
add
mov
pop
push
dec
pop
out
push
xor
or
sbb
ds
xchg
push
aam
sbb
push
mov
push
inc
std
or
js
sbb
xor
mov
fisttps
enter
xchg
in
pop
sbb
push
gs
daa
fwait
xor
push
movsb
push
push
ja
aas
cmp
popf
cltd
sahf
fldl
mov
insb
imul
ret
movsb
test
orb
and
jl
orl
mov
jmp
or
pop
inc
rcrb
fimuls
inc
dec
push
cmp
movsl
fs
push
loopne
lcall
or
or
dec
inc
repnz
pushf
data16
test
mov
cltd
dec
inc
sahf
arpl
test
or
or
add
popa
pop
lcall
loopne
andb
dec
xor
add
push
xchg
xchg
stc
loopne
in
jne
cld
aam
pusha
and
dec
xor
cmp
std
out
sub
je
mov
jmp
pop
rcrb
lcall
inc
cmp
sub
pop
jo
rclb
jnp
adc
pop
jg
adc
add
jbe
add
mov
jns
pop
stos
lea
mov
faddl
sbb
jno
je
push
sbb
and
cmp
xlat
mov
fsub
and
insl
cmp
mov
orl
sbb
push
in
adc
mov
rclb
push
inc
inc
or
mov
fsub
in
in
xor
add
mov
jae
jnp
out
sbb
out
xchg
mov
cmp
orb
mov
add
jecxz
outsb
movsl
add
xor
mov
sbb
push
adc
cmpsl
mov
sbb
idiv
pop
and
call
cmp
shlb
mov
sbbl
sub
ja
adc
bound
call
or
fcompl
adc
mov
and
cmp
mov
cmp
stos
add
mov
mov
add
into
inc
pop
imul
rcr
add
inc
jo
and
adc
mov
stc
bound
inc
push
fcoml
jl
cld
or
js
xchg
sbb
fnsave
push
cltd
inc
mov
popa
adc
test
scas
dec
cld
fidivl
js
mov
sub
cmp
pushf
sub
call
lods
sub
pop
pop
sbb
xor
rorb
loop
jmp
sbb
and
and
push
pop
mov
mov
mov
inc
adc
rcll
xlat
xor
add
add
dec
xor
push
adc
shll
sbb
xor
cmp
adc
and
inc
mov
lret
sbb
cmc
lahf
dec
clc
inc
mov
imull
add
fs
and
xor
sbb
mov
cld
pusha
les
or
scas
pop
aas
push
push
mov
or
aas
inc
mov
or
mov
mov
inc
inc
sahf
mov
pushl
hlt
jmp
mov
jo
add
rcr
aam
or
pushf
stos
and
xor
mov
lcall
in
lock
movsl
add
cmp
xchg
pop
shrb
inc
out
stc
cmp
imul
out
add
andl
dec
insb
dec
sahf
sbb
jecxz
dec
cmp
jecxz
or
lods
dec
add
push
mov
outsl
push
pop
test
loope
or
inc
lea
in
mov
mov
or
push
test
jb
movsl
add
push
mov
add
jmp
mov
mov
shll
rcl
rolb
add
mov
sbb
adc
pminsw
movsb
and
push
or
cmp
ljmp
or
mov
inc
push
test
pop
and
jnp
out
orl
mov
xchg
xchg
imul
in
mov
xchg
pushf
mov
int3
lret
scas
inc
cwtl
sub
clc
inc
pop
orb
sub
adc
pop
xchg
addb
xchg
adc
mov
xor
int3
jecxz
adc
call
add
add
cmp
jo
add
mov
movsb
rcll
pmaxub
add
add
push
mov
jp
xchg
pop
dec
inc
and
dec
push
insl
inc
pop
iret
repz
out
inc
push
or
adc
jge
js
push
xor
jecxz
push
xlat
js
cmp
in
rcrb
popa
inc
xchg
push
test
pop
cmp
pop
pop
mov
and
xor
cmp
idivb
sub
mov
pop
lret
sti
sub
jo
popf
fldenv
or
cmpb
cmpsl
mov
and
icebp
insb
pop
clc
insb
fisubl
lcall
daa
dec
imul
push
jo
test
in
pop
push
push
xor
cmp
aaa
pop
addr16
flds
adc
xchg
mov
or
add
sbb
push
adc
lods
sub
aaa
enter
push
or
mov
add
scas
add
subl
or
outsb
push
dec
test
hlt
ss
or
and
clc
mov
or
test
lock
ret
sub
xor
mov
inc
stos
inc
jg
ret
xor
push
nop
xchg
mov
sbb
out
adc
lret
cld
rorb
xchg
scas
lods
cmp
lea
ret
push
or
jb
adc
jl
pop
pushl
popa
andl
insb
pop
xchg
pop
sbb
cmp
pusha
rsm
mov
test
insb
shlb
cmpsb
jbe
xor
push
outsl
adc
add
ja
sub
xor
inc
aam
sub
mov
scas
mov
add
xor
sbb
fsubrs
subl
sarl
add
mov
nop
push
in
sbb
xor
popa
push
and
icebp
cmp
jne
sub
nopl
out
in
xor
pop
dec
or
mov
adc
and
adc
cmp
or
xor
dec
push
mov
mov
pop
test
inc
aad
ss
cwtl
adc
mov
dec
imul
lea
rclb
fdivl
mov
lcall
adc
cli
dec
jns
jl
pusha
pop
sahf
ja
push
pop
cwtl
sub
sub
sub
and
cmpsl
fcomps
clc
iret
repnz
xchg
movsb
sbb
rcll
sub
inc
rcll
adc
cltd
sbb
adc
mov
mov
push
dec
pusha
push
mov
adc
cmc
pop
sbbb
aad
add
dec
es
adc
adc
push
in
sub
sbb
fistpl
shll
pop
repnz
pushf
xlat
and
inc
push
pop
pop
mov
xlat
mov
add
sarl
enter
pop
push
push
jnp
orb
cs
jbe
pop
enter
push
xchg
add
or
and
sbb
loope
leave
dec
inc
invd
pop
xorb
or
call
cltd
pop
cmp
mov
cmpb
rorb
or
out
ljmp
sub
xor
push
or
outsb
pop
dec
and
jo
adc
and
mov
mov
fs
rorb
and
pop
mov
test
xor
daa
jne
rorb
mov
lea
int3
mov
popf
xchg
sub
daa
mov
sbb
rcl
es
sbb
pop
sbb
dec
xor
in
daa
cmpsb
sub
jne
sub
or
jb
add
push
jmp
and
xchg
sub
pop
xor
sub
push
pop
and
adc
and
sub
push
pop
adcb
inc
jge
push
lods
fwait
ret
cmp
pop
in
rorb
or
stc
sub
push
push
add
test
in
bound
stos
adc
scas
push
insl
shrb
aas
add
cmp
cmp
xor
inc
les
pop
fiaddl
adc
add
sub
je
stos
add
sahf
jbe
add
xchg
or
add
mov
sahf
in
push
xor
cmp
mov
movsb
and
sub
in
popa
movsl
movsl
push
js
dec
dec
cmp
dec
cld
mov
mov
aaa
cmp
xchg
xor
rcrb
in
xlat
fs
jo
fs
mov
rolb
mov
xor
sbb
in
inc
cmp
dec
adc
mov
jmp
loopne
enter
inc
mov
xor
pusha
mov
mov
imul
jb
sub
dec
xor
and
add
push
xlat
enter
add
xchg
inc
push
push
xor
jmp
enter
dec
aaa
mov
clc
sbb
mov
cmp
push
jmp
mov
mov
mov
sub
pop
ljmp
inc
add
ret
or
push
pusha
inc
adc
out
cltd
sbbl
sub
pop
hlt
jne
jo
and
pop
mov
sbb
dec
subl
pop
push
mov
cmp
mov
test
dec
mov
ljmp
jb
jmp
lcall
lahf
fisubs
pop
lcall
xor
daa
popf
and
and
test
xchg
movsl
and
imul
fldenv
fcomps
movsl
mov
and
mov
jge
sahf
dec
in
xchg
xor
js
outsl
fpatan
push
call
push
lods
add
inc
jae
mov
lea
xor
or
cmp
mov
adc
mov
jp
filds
mov
cmp
cmp
mov
add
cltd
clts
push
mov
rorb
lret
jno
and
sbb
fsubs
pop
mov
fxch
push
gs
adc
dec
sbb
pop
xor
or
int3
faddl
rolb
or
adc
pop
fcmovnu
or
movlps
cwtl
add
xadd
add
or
cmp
pop
mov
nop
xor
je
add
or
mov
jae
sbb
adc
jne
mov
out
data16
push
outsb
adc
push
rcll
pop
add
cwtl
sbb
cltd
add
mov
jecxz,pn
arpl
aam
adc
push
add
or
shll
orl
sbb
rorb
ja
loope
movsb
cmpsl
mov
jne
jmp
xchg
or
and
mov
xor
addr16
add
pop
idivl
leave
pop
aad
shrb
fsubl
in
pop
xchg
add
repnz
sbb
or
or
add
ja
push
jo
or
cs
lock
shlb
ror
add
js
or
stc
mov
icebp
dec
icebp
pop
xorl
rep
sub
inc
push
out
out
cmp
in
test
or
xchg
pop
xchg
sub
mov
stc
inc
aas
xor
or
and
add
sub
cmpb
and
push
es
clc
mov
sti
aaa
cwtl
add
push
data16
sahf
mov
sbbb
insb
hlt
cmpb
icebp
push
dec
cmc
sbb
adc
xchg
fdivs
push
ficompl
in
inc
push
jle
fsubrl
cmp
les
sahf
or
repz
sbb
mov
jmp
and
roll
push
add
pusha
popl
jecxz
iret
push
jno
jmp
xchg
in
mov
int3
cmp
inc
clc
mov
add
ret
mov
fidivs
dec
add
and
add
popa
and
sbbb
mov
sbb
dec
push
cli
pop
test
into
mov
and
mov
or
add
cmpl
lods
sahf
pusha
sub
pop
dec
mov
aam
mov
adc
popf
cmpsb
add
cltd
pushf
add
fs
mov
fwait
iret
dec
add
sub
push
adc
and
mov
imul
pop
and
jne
cmp
sbb
aam
in
mov
dec
adc
push
xchg
scas
mov
leave
pushf
sarl
push
dec
mov
or
cli
adc
sub
fs
xchg
jne
ret
jecxz
lret
outsl
and
movzbl
push
xor
sub
cmpsb
mov
aaa
mov
je
fsubr
dec
push
xor
mov
inc
dec
loopne
mulb
fisubs
pop
sbb
lods
stos
dec
stos
fstps
je
sub
push
sahf
in
jp
push
sbb
inc
jmp
push
and
sub
mov
sbb
jecxz
popa
das
fisubrl
lock
movsb
jns
insl
cld
jmp
mov
sub
lea
push
lea
push
inc
push
mov
xor
addb
outsl
in
mov
pop
xor
imul
cmp
xor
sub
sub
pusha
pop
or
sbb
cmp
mov
lcall
mov
mov
dec
cmp
test
inc
sti
testl
add
or
add
stos
and
xchg
cmp
push
mov
outsb
pop
add
mov
add
push
jge
mov
add
push
cmp
incl
inc
in
jge
cmp
jne
push
pop
inc
std
xchg
push
xchg
mov
divb
outsl
cwtl
cs
outsb
mov
sbb
or
adc
popf
add
cmpb
adc
xor
mov
loopne
imul
inc
cmp
xchg
test
inc
cmp
jnp
xchg
push
push
push
and
pusha
mov
into
dec
mov
adc
cmp
ficompl
gs
and
or
push
push
ret
gs
ret
push
add
cmp
fisttpll
jg
or
adc
mov
xchg
fs
sub
or
jno
stc
dec
in
imul
pop
mov
lea
push
or
movsb
stos
out
test
inc
inc
jns
outsl
xchg
lcall
mov
add
enter
iret
jbe
mov
sbb
mov
mov
push
mov
xchg
inc
ja
mov
enter
sbb
inc
pop
add
incl
mov
and
xor
push
cmp
inc
push
and
pop
mov
and
sbb
mov
stc
mov
sbb
mov
push
mov
xchg
test
add
out
scas
mov
cmp
call
inc
pop
adc
sbb
adc
lock
mov
and
loopne
pusha
movsl
ret
nop
mov
sbb
outsb
sub
test
sub
ss
movsb
or
push
bound
imul
cmp
push
xlat
or
in
arpl
add
cmp
adc
pop
stc
fadds
or
insb
cmp
sahf
jnp
add
sbb
jne
mov
icebp
fcomps
je
loop
push
or
mov
sbb
or
icebp
jmp
push
and
incl
and
fcomps
add
cwtl
sbb
and
push
cmp
sbb
clc
sbb
sub
imul
fs
and
pop
dec
sub
add
push
stos
cmp
mov
inc
rorl
or
gs
arpl
sbb
push
or
add
shll
adc
dec
sbb
cmp
push
inc
mov
adc
lods
add
adc
sbb
and
test
xlat
pop
sub
mov
adc
sbbl
gs
mov
adc
add
add
or
cmpsl
push
fsubrs
je
inc
sub
insl
subl
mov
pop
xlat
add
pop
mov
loop
icebp
mov
push
push
std
and
dec
xor
mov
in
cmp
test
in
sub
sub
ja
mov
sub
adc
cmp
dec
shrb
arpl
lods
pushf
nop
or
xchg
sub
outsl
jle
ret
pop
fdivrl
mov
cmp
nop
or
push
or
add
cs
outsb
jl
inc
lea
jl
push
jmp
sbb
aam
cld
cmp
inc
aas
inc
xchg
push
inc
out
data16
popa
cmp
xor
sbbl
sbb
or
push
mov
mov
or
cmp
mov
xlat
inc
pop
test
test
push
ret
pop
fs
imul
inc
cmp
lahf
sbb
adc
in
pop
mov
shll
xchg
test
into
sahf
loopne
mov
mov
and
dec
or
cmp
jb
notl
jmp
int
mov
movsl
or
mov
daa
mov
leave
mov
jo
dec
and
sbbl
lahf
test
das
rolb
scas
push
xor
sbb
ss
pop
hlt
mov
xchg
or
cmp
movl
mov
loope
dec
loopne
inc
inc
das
out
cmpb
outsb
test
aas
push
sbb
inc
inc
jp
sbb
adc
sbb
sbb
sub
adc
in
or
inc
and
jmp
or
xorb
mov
inc
sahf
cmpsb
jge
xchg
adc
jno
dec
and
mov
int
cmp
add
inc
or
add
or
dec
or
decl
cmp
cmp
fsubrp
jge
cmp
into
or
pop
add
inc
test
add
testb
pushf
lods
xor
pop
xor
adc
sbb
pusha
scas
jo
push
je
or
push
ret
push
add
adc
push
mov
or
add
mov
pop
pop
cmpb
inc
adc
sub
mov
shrb
jmp
pop
lock
and
fldcw
test
jl
lods
jae
pop
dec
cmp
fistpll
xor
push
jno
or
out
sti
cmpsb
lock
pusha
pop
pop
sbb
mov
pop
repz
inc
sbb
pop
jmp
das
sbb
mov
and
notb
adc
adc
imul
inc
ret
push
ret
push
cwtl
ds
push
push
mov
imulb
or
push
dec
push
adc
push
ss
mov
push
iret
fmulp
push
or
aas
les
outsb
ljmp
jmp
dec
lahf
or
push
roll
int3
sub
mov
push
cmp
push
mov
push
xchg
inc
addr16
xorb
push
push
dec
pop
and
xchg
pop
inc
add
pop
sbb
push
push
xchg
sub
mov
jmp
mov
pop
pop
sbb
jge
lea
fmul
gs
push
mov
dec
pop
jp
mov
push
push
rolb
icebp
fsts
loop
push
incl
xor
lock
js
je,pt
cmp
jbe
adc
enter
loop
mov
je
aam
test
pop
ljmp
sub
imul
fmul
pop
sahf
mov
xor
mov
jae
cmpl
or
popa
jge
or
mov
mov
push
pop
mov
mov
mov
lods
push
sub
xchg
cld
js
cmp
icebp
or
pop
outsl
imul
sub
rclb
scas
repnz
and
cmp
push
mov
sbb
mov
addl
dec
ret
repz
pop
movsb
push
orl
inc
subb
int
mov
and
xor
adc
sub
push
sbb
mov
cmp
or
ret
int3
out
aam
lds
js
sbb
outsl
mov
loop
jbe
xchg
decb
enter
or
mov
mov
shr
sbb
lds
mov
gs
mov
rorl
adc
notl
add
dec
cmp
shll
push
shll
jnp
je
imul
sbb
jmp
aaa
lret
pop
xchg
fisubrs
leave
mov
jp
add
adc
in
push
daa
jbe
cmp
xchg
lea
scas
sub
je
pop
add
rclb
call
and
cmc
sti
adc
test
in
push
mov
and
add
arpl
loope
jns
sbb
les
jmp
push
ret
gs
dec
movsb
inc
flds
mov
test
sbb
xor
subl
loopne
loopne
cmp
mov
pop
mov
add
test
pushf
lea
push
out
mov
add
loopne
xor
stc
cwtl
jecxz
adc
or
xchg
and
sub
aam
fcoms
push
scas
mov
adc
or
jb
or
pusha
hlt
push
sub
pop
sub
xlat
jmp
mov
mov
into
insb
sub
jbe
cmp
cmp
mov
inc
or
fst
mov
int3
iret
add
clc
iret
add
fdiv
div
jle
call
cmp
mov
adc
cmp
xor
add
es
add
ss
jne
inc
sbb
sbb
mov
xchg
ss
ret
mov
xlat
xor
loopne
cli
and
mov
adc
pop
xchg
push
inc
cli
std
mov
sub
and
add
inc
call
out
stos
mov
jno
xchg
xchg
dec
mov
or
in
rclb
aam
fs
cmp
je
mov
push
mov
lahf
lret
mov
cmp
and
jne
adc
stos
cmpb
lods
sti
flds
jmp
ret
repz
rcrb
repnz
shlb
pop
jecxz
mov
clc
add
in
cmp
lock
cmp
inc
inc
outsl
rclb
push
or
cmp
mov
pop
test
js
mov
mov
mov
jl
mov
xchg
pop
lahf
add
daa
and
adc
dec
cld
stc
mov
cmp
jae
lea
jmp
cmpl
pop
pop
filds
cmp
jbe
xchg
in
ret
mov
add
clc
sub
popf
insb
mov
in
shrb
mov
sub
sub
movsb
sbb
xor
and
jo
jo
lods
outsl
pusha
call
xchg
mov
mov
hlt
push
push
in
insb
dec
addb
call
add
mov
sbbl
imul
stc
and
rcr
orb
inc
pushf
push
inc
add
sub
sbb
int3
pusha
sub
mov
mov
xchg
repz
add
add
in
add
dec
cli
cmp
adc
or
adcl
ss
sbb
movsl
add
add
add
and
add
mov
mov
popf
push
repnz
inc
fcompl
xor
adc
mov
xor
pop
xchg
jge
les
add
fcomps
inc
hlt
xchg
push
sahf
mov
aam
add
inc
mov
std
or
xor
or
add
ret
gs
cld
cmp
je
jo
xchg
loopne
imul
jmp
xor
aad
movsb
sbb
loopne
jae
xor
mov
add
aad
jbe
loope
xchg
xor
jbe
sub
mov
jmp
adcl
xchg
rorl
fstpl
mov
fwait
or
pushf
push
cmp
fcoms
add
xchg
or
jp
dec
ret
mov
lods
cld
ret
cltd
cmp
sub
data16
add
add
xchg
sbbl
lock
rolb
xor
push
and
dec
mov
pop
add
adcb
nop
sbb
dec
xor
movsl
pusha
dec
xor
xchg
sub
sbb
test
xchg
push
jp
push
or
daa
andl
adc
lea
sbb
clc
lea
pop
xchg
mov
add
ret
sbb
inc
dec
les
cmpsb
push
push
xchg
mov
imul
cmp
es
jb
jge
push
lahf
jmp
or
lret
pop
mov
jnp
and
xor
mov
incb
pop
int3
jmp
cmp
jbe
fldt
jns
dec
dec
clc
jle
fidivl
mov
push
test
cmp
dec
or
adc
aaa
sub
lea
pop
cmp
stos
outsb
push
enter
dec
int
daa
push
mov
mov
lret
and
hlt
hlt
cmp
jb
inc
mov
or
xor
mov
pop
mov
ficoml
dec
arpl
cmp
call
adc
push
cmp
lret
fxtract
scas
pusha
je
jne
push
js
fistl
nop
sbbb
cld
loopne
fnstenv
mov
xor
test
in
add
sbb
gs
or
add
mov
cld
clc
pushl
cmp
cmovge
lea
mov
jp
and
xor
sub
les
test
data16
or
xor
pusha
mov
cmp
movl
cmp
push
mov
pusha
cld
add
and
je
mov
jmp
or
jno
cltd
rol
push
outsb
inc
push
adc
and
ss
dec
adc
xor
jecxz
pusha
xchg
mov
or
outsl
cwtl
inc
pop
add
adc
inc
enter
mov
sahf
push
jne
and
mov
mov
xor
sbb
mov
inc
mov
mov
daa
cmpl
adc
fisubl
jbe
push
cmp
adc
fs
ljmp
cmp
push
adcb
rolb
or
adc
pusha
sub
jecxz
lret
dec
aas
fcmovne
fstps
inc
loop
inc
jne
sub
das
inc
cmp
push
jmp
add
insb
pop
imul
das
push
hlt
xor
push
and
cs
jnp
fstpt
fimuls
adc
scas
sbb
js
dec
dec
in
lods
push
cmpsl
movsl
arpl
int3
add
push
cld
cltd
fsubrs
dec
and
lahf
inc
lock
sub
mov
inc
adc
dec
cltd
or
add
ffreep
dec
orl
mov
mov
fildl
fadds
mov
adc
js
gs
adc
inc
sbb
push
sbb
adc
data16
mov
cmpb
pusha
sarb
xchg
push
dec
adc
jle
push
pop
pop
or
or
jle
mov
sub
push
cmc
mov
stos
es
aam
mul
seto
adc
or
jns
push
pop
test
adc
pop
out
jo
push
lret
fdivrs
push
scas
adc
shl
daa
push
add
add
push
push
xchg
loop
fst
ss
xor
dec
push
xchg
sbb
or
fs
jns
lea
mov
mov
iret
sub
jmp
decl
js
jne
lret
imul
ljmp
or
mov
jg
les
pop
cmp
jbe
clc
out
fwait
push
popa
and
pop
js
pop
sbb
pop
les
adc
call
popf
rcrb
mov
jbe
movsl
imul
aam
int
xchg
mov
pop
or
jmp
dec
xchg
pop
or
mov
xchg
jo
cmpl
insl
mov
inc
subb
inc
test
adc
test
or
test
xchg
cmp
mov
cmp
adc
and
test
sarl
cmpb
jge
push
push
adc
cmpl
fwait
xor
adc
mov
xor
or
xor
jmp
lods
imul
inc
push
and
mov
cmp
nop
pop
cltd
mov
clc
mov
and
movsl
push
mov
cs
lock
push
dec
mov
jmp
push
add
xchg
in
xchg
js
push
into
xchg
xchg
imul
jp
or
mov
sbbl
je
or
cmp
mull
cmp
pusha
arpl
xchg
lret
clc
and
jb
jae
jle,pn
mov
or
cmpsb
adc
jb
pop
add
pop
add
dec
and
imul
xor
xorl
out
mov
pop
add
adc
mov
dec
cld
je
add
inc
movsl
loope
dec
in
or
aaa
push
dec
push
and
in
push
pop
sahf
mov
or
jmp
cmp
insb
lods
or
je
adc
mov
shlb
add
xchg
adc
sub
mov
cmp
add
ficoml
dec
shlb
inc
sbb
mov
sub
xor
jmp
xchg
cltd
aad
xchg
xchg
push
mov
mov
xchg
jmp
inc
pop
adc
pop
enter
cmpsb
loopne
loope
loope
xor
aaa
fs
mov
inc
outsb
xorl
movsb
ret
in
jecxz
adc
jge
xor
lock
cmp
xor
sbb
and
call
cmpsb
adc
call
in
jl
hlt
sbb
idivb
out
jbe
mov
sbb
push
call
mov
jne
push
clc
inc
jl
test
push
mov
out
popl
cmp
out
aaa
adc
pop
clc
add
clc
jno
mov
pop
mov
popa
add
add
popf
pusha
rorl
repz
sbb
lds
sahf
or
sbbl
sub
je
sti
icebp
dec
lea
push
shl
mov
mov
aas
xor
lea
es
les
popf
rol
test
adc
cmp
push
fmuls
jbe
sbb
or
or
sarb
test
jne
dec
faddl
push
pushl
jo
xchg
in
xchg
and
cltd
out
push
aaa
jo
add
mov
bound
cltd
shlb
xchg
pop
xchg
mov
and
rorl
push
mov
dec
fimull
cmp
int3
in
test
cs
test
xchg
in
push
and
je
loop
fldenv
faddp
decl
xchg
dec
jb
jge
mov
lea
add
lret
jb
sbb
pop
sub
inc
fcompl
int
dec
add
jnp
rcrl
das
das
wbinvd
cmp
mov
pop
inc
inc
mov
popa
mov
roll
add
or
andl
imulb
movb
sbb
dec
or
lods
add
xor
adc
push
lods
outsb
rolb
xchg
lods
mov
lret
lock
pop
das
push
cwtl
jbe
into
test
mov
inc
shl
imul
in
aas
mov
push
lcall
loope
in
rclb
addr16
aas
cmp
jmp
movb
mov
ret
jae
sub
loopne
pop
adc
int3
adc
ljmp
dec
mov
cmc
sub
das
test
mov
cmc
push
inc
mov
nop
add
inc
test
mov
dec
dec
xchg
incb
mov
push
dec
loope
xor
add
ss
or
sti
leave
xchg
jmp
pop
or
jb
dec
mov
xor
fsubp
xchg
cmp
lea
sub
adc
int
cltd
jl
mov
add
dec
push
test
ja
or
cld
or
inc
pop
pop
insl
enter
cli
sub
and
lea
rcl
fildl
cmp
add
jmp
incb
add
xor
and
sbb
or
sbb
mov
sub
roll
lods
mov
psubd
fimuls
adc
dec
cmp
iret
cmp
and
repz
js
or
arpl
xor
je
jmp
popl
adc
ljmp
cmp
mov
cwtl
adc
and
or
or
mov
lods
cmp
icebp
pop
push
ljmp
jmp
in
ss
shlb
pop
pusha
inc
and
pushl
jmp
out
data16
add
mov
push
xlat
out
push
add
nop
inc
sbb
mov
mov
xchg
push
call
dec
lret
ret
addb
push
push
and
fadd
push
push
mov
mov
or
jne
cmpb
mov
jb
push
jae
lea
push
sub
fistpl
sub
sbb
popa
mov
stos
jnp
bound
xor
push
dec
loop
ret
xchg
push
and
enter
or
mov
sbb
adc
roll
rorl
mov
mov
test
push
sar
add
cmp
fnstenv
inc
jmp
pop
jecxz
aad
or
mov
gs
stos
sub
std
push
movb
or
mov
pop
dec
xchg
out
sbb
sub
mov
movsb
cmpb
mov
dec
fstps
loope
int
aas
jne
inc
sub
je
add
cmpb
push
and
loopne
test
xor
test
mov
test
in
pushf
and
xor
or
xor
or
xor
add
xchg
xor
sbb
jnp
mov
add
cmp
sub
pop
mov
shll
cltd
adc
pop
pop
lret
and
inc
jno
jl
or
add
sbb
and
cmp
arpl
lret
xor
dec
jb
or
cmp
inc
cmp
mov
sub
jbe
dec
in
fisubrl
sbb
cld
je
mov
adc
sbb
adc
decb
cmp
ja
cmpb
push
push
or
or
xor
orb
loopne
push
mov
adc
cmp
jb
mov
push
ds
fadds
rorb
data16
mov
mov
push
sti
sbb
or
add
es
pusha
jbe
push
mov
lods
and
and
mov
add
cli
adc
shlb
sbb
adc
ret
dec
mov
push
inc
pop
rorb
add
push
test
mov
dec
bound
jle
or
cld
xorl
lahf
roll
xchg
ja
arpl
mov
jns
mov
push
xchg
mov
pop
in
lock
bound
add
mov
xor
int3
fwait
cmp
sub
mov
mov
cmp
arpl
orl
and
xchg
js
cmpsb
mov
sbb
loope
les
lds
push
pop
nop
mov
and
push
mov
or
sbb
or
and
cmp
adc
mov
into
movsl
fnstsw
fmuls
add
mov
mov
gs
cmp
add
push
arpl
arpl
in
fidivrl
xchg
adc
mov
inc
faddl
mov
pushl
xchg
or
aad
shld
sti
test
dec
pop
cmpsb
nop
nop
inc
mov
ficoms
lea
popf
jmp
outsb
xchg
adc
xor
and
add
icebp
decb
mov
inc
pop
or
push
hlt
loope,pn
adc
jge
xor
jg
jg
cmp
cmp
add
shlb
push
adc
fsubrl
mov
cmp
jne
fs
test
and
movsb
adc
jo
mov
cmpsl
int3
or
inc
or
js
fdivs
push
jg
aaa
inc
adc
mov
ror
mov
jmp
xchg
add
pop
jmp
xor
cmp
daa
cwtl
push
fsubs
mov
lea
jbe
cmpsb
dec
pop
cli
fildl
sbb
aad
or
test
mov
jge
push
inc
movb
lods
dec
fisubrs
enter
in
mov
add
mov
out
jle
das
test
or
pop
out
sbb
pop
mov
push
fstps
and
adc
into
call
pop
cmp
mov
es
add
adc
aas
das
nop
out
enter
add
push
sahf
or
in
jns
test
add
inc
test
cs
ja
or
push
sahf
adc
stc
adc
adc
fs
push
push
or
js
cwtl
and
mov
lods
dec
int3
adc
adc
xor
sub
sbb
mov
in
or
stc
stos
adc
nop
outsb
xchg
inc
lret
scas
ret
jo
loop
push
ja
push
push
pop
pop
adc
dec
test
push
icebp
adc
add
lock
and
ss
push
push
push
dec
jmp
shll
adc
push
ret
lret
push
je
jle
xchg
inc
add
mov
pop
mov
pop
xor
fldl
xor
xchg
clc
lods
add
hlt
addr16
mov
daa
inc
push
push
dec
enter
mov
int
outsb
mov
jmp
push
js
testl
pushl
fistl
pop
jmp
or
cmp
sub
cli
popf
insb
lods
ds
mov
push
inc
aam
pop
or
jbe
jnp
jne
int
daa
jg
test
movsb
hlt
hlt
call
incl
ja
lcall
mov
xchg
test
or
xor
adc
jb
push
add
mov
mov
dec
fmuls
es
cmpsl
jno,pn
lds
addr16
mov
lahf
mov
ds
and
scas
les
shl
inc
lock
pop
inc
mov
jp
add
adc
lods
mov
push
mov
es
sub
add
pop
push
notl
xor
mov
fildll
loope
sub
or
and
xchg
and
in
sbb
repz
sbb
iret
into
cltd
cltd
rclb
pusha
nop
es
idivl
inc
xchg
push
rolb
cld
cmpsb
mov
sbb
and
clc
nop
push
jle
xchg
rclb
rolb
je
cmp
or
testb
jbe
xchg
mov
les
pop
js
xor
mov
inc
xor
or
movsb
add
xchg
and
push
pushf
mov
inc
ss
cmp
sub
in
inc
mov
cltd
jno
in
std
pop
sbbl
xlat
or
sub
addb
dec
arpl
xor
and
lahf
cmp
xor
or
jnp
cltd
scas
out
movsl
cmpb
mov
adc
lret
adc
jge
and
test
nop
jmp
jl
xchg
xor
dec
xor
cli
and
adc
pop
add
jae
pop
insb
pusha
and
lret
jg
cwtl
mov
add
and
push
std
test
sbb
push
inc
mov
movsb
push
jno
andl
mov
mov
mov
push
mov
xorl
fmuls
sbb
add
push
jns
inc
sub
loopne
push
xchg
popa
loopne
subb
and
lcall
add
xor
in
dec
pop
mov
add
pop
js
scas
out
sbb
adc
sub
pop
popa
add
je,pt
mov
xchg
mov
testl
andb
mov
mov
mov
or
mov
adc
lar
or
jo
xor
mov
jae
push
fs
xchg
lea
aas
inc
push
sbb
push
push
mov
xchg
subb
add
ret
or
jecxz
push
fldcw
pop
ret
push
cmp
pushw
loop
mov
push
or
pop
test
aam
cwtl
dec
push
sbb
dec
add
or
and
mov
call
push
out
aas
and
nop
scas
mov
or
dec
adc
lahf
stc
and
or
loope,pn
jb
je
movsl
cmpsb
andl
xchg
add
xchg
es
mov
inc
adc
sbb
pop
inc
fbld
call
cmp
jl
cmp
ja
test
jl
aaa
fiaddl
subl
adc
add
add
pop
test
test
and
unpckhps
mov
adcl
xor
fistpl
dec
adc
xlat
test
fwait
sub
add
inc
cmp
je
mov
push
js
jbe
ret
pop
pop
fdiv
rcl
or
ret
inc
push
xchg
pop
test
cmpl
das
add
rcrb
mov
es
push
pop
xchg
cmpsb
imul
adc
or
inc
loop
pop
lock
test
jge
add
nop
push
insl
invd
add
lret
add
cmpl
fwait
ja
lret
cmp
fists
aas
jne
cmp
jl
add
jmp
repnz
addl
scas
add
mov
in
ficoms
test
aam
lds
adc
rcrb
fsubrl
xchg
ss
std
mov
jmp
inc
xchg
add
jl
stos
pop
ljmp
ret
into
leave
add
add
sbb
lcall
mov
sbb
clc
xchg
mov
add
add
mov
xor
in
fdiv
and
jno
stos
cmpb
fisttps
fnsave
dec
push
push
mov
push
and
fsubrl
pop
sbb
sti
mov
cs
add
dec
sbb
test
mov
das
dec
aad
and
dec
test
xor
xor
sbb
jb
mov
xlat
ljmp
mov
inc
or
mov
data16
add
cmp
popa
add
cmp
jb
mov
stos
add
xorl
and
add
jnp
orl
stos
add
ja
popl
stos
adc
jecxz
cmp
adc
add
shlb
lcall
jne
dec
or
mov
lea
insl
push
adc
dec
clc
mov
mov
inc
mov
imulb
cmp
je
out
add
sbb
outsl
rorb
mov
ret
subb
jmp
mov
push
add
pop
jmp
push
mov
test
sahf
test
sub
sbb
or
rol
mov
lock
adc
dec
fdivr
xor
in
mov
push
ret
call
sub
jno
pop
cmp
insl
test
sbb
cmpsl
imul
imul
pslld
movsb
or
inc
out
push
inc
mov
in
jae
mov
movsb
push
pop
push
repz
jno
jae
dec
ja
das
xor
arpl
mov
sub
cmp
pop
and
mov
sub
arpl
rorb
add
and
fnstsw
sub
mov
mov
xchg
pop
mov
dec
xor
dec
push
adc
outsl
xchg
and
test
or
rol
aaa
popf
push
push
jae
mov
mov
js
dec
aad
mov
stos
add
hlt
incb
mov
and
or
and
push
test
mov
push
je
or
lret
je
pop
xor
cmp
sbb
movsb
loop
mov
and
popf
or
push
jmp
jnp
push
add
cmp
sbb
push
frstor
inc
insb
out
mov
xchg
cmp
dec
pop
xchg
or
ret
jo
push
inc
loopne
shll
cmp
jmp
jb
add
lahf
mov
dec
test
aam
and
fdivs
shll
popf
js
sbb
shl
shl
mov
sbb
pop
es
jle
bound
xchg
jg
data16
lds
jmp
xor
inc
sub
mov
push
sbb
dec
enter
sbb
cmp
pop
dec
xchg
sti
es
xor
jb
or
sub
sub
test
insb
mov
fcompl
adc
jo
and
fidivs
sub
cmpsb
mov
movsl
dec
dec
push
cld
dec
adc
push
inc
adc
push
inc
push
fmuls
jl
mov
mov
push
add
jp
mov
ret
rcrl
adc
daa
xchg
xchg
lret
sbb
pushf
push
dec
sub
push
cmp
lret
movsb
or
or
daa
xchg
xchg
or
inc
or
dec
push
movhps
inc
insb
push
pop
stc
daa
fnsave
mov
mov
adc
pop
mov
inc
stc
push
sbb
int3
int
int3
pusha
nop
dec
cs
mov
fdivrp
inc
rorb
or
sahf
fsubrs
dec
dec
outsl
sub
inc
pop
mov
mov
pusha
add
pop
mov
dec
adc
cmp
push
mov
add
cmp
rolb
xchg
sbbb
sbb
jmp
or
cvtpi2ps
xchg
or
or
mov
cmp
cmp
push
enter
or
adc
notl
mov
jg
fs
nop
inc
dec
inc
inc
in
inc
push
cmp
xor
inc
push
cmp
sub
inc
push
cmp
and
adc
cmp
nop
adc
or
popa
fcoms
aad
clc
add
and
xchg
test
iret
pop
push
inc
lahf
pop
je
xor
sub
scas
mov
lret
push
addb
out
nop
stos
into
adc
test
or
fs
add
sub
ljmp
mov
add
xchg
pop
xchg
add
mov
les
popa
pop
nop
sbb
enter
pushf
cld
pop
add
clc
mov
andl
cmpl
add
inc
addb
and
add
shrd
add
addr16
jecxz
and
ja
mov
push
in
xchg
or
inc
xchg
or
push
rcr
jno
push
xor
sbb
enter
add
inc
mull
test
pop
sub
mov
mov
or
out
pop
les
add
push
push
or
out
scas
addl
sbb
mov
dec
orl
jmp
add
inc
push
jmp
lea
imul
lods
xchg
nop
test
lods
mov
xchg
sub
mov
ljmp
inc
cmc
enter
adc
push
daa
xchg
add
push
adc
and
or
mov
rcrb
inc
jno
cmc
mov
or
sub
out
test
push
xchg
xchg
push
add
ss
push
and
mov
clc
xor
mov
pop
pop
push
sbbb
cs
fwait
and
pop
cmp
insb
sbb
push
or
loope
mov
push
inc
sub
push
jecxz
out
mov
daa
or
sbb
xchg
push
add
testb
add
lods
adc
ret
cmp
add
add
mov
add
pusha
loopne
movsb
mov
cli
fwait
mov
sub
push
inc
lock
icebp
adc
enter
jecxz
adc
sarb
outsb
push
xor
imul
sub
test
icebp
add
out
inc
mov
pop
or
orl
jbe
jecxz
jp
sub
cld
fwait
pop
push
je
push
cmp
push
mov
dec
js
push
push
inc
sbb
push
loop
test
int
push
cmp
std
dec
jne
inc
jb
out
xor
lret
lds
cmp
test
or
jo
mov
push
stc
and
pusha
icebp
inc
cmp
and
pusha
mov
fwait
jp
cmpsb
outsb
clc
inc
fwait
test
jne
pop
in
ret
movb
jge
in
push
ret
cmp
adc
pop
jo
mov
loope
mov
testb
push
idiv
into
cld
call
pop
jne
cmp
jae
push
add
add
jmp
mov
dec
pop
xchg
mov
shll
data16
lods
out
loopne
push
pop
movsb
mov
test
loopne
dec
and
push
add
sub
sbb
sti
inc
sbb
and
fistps
add
add
into
dec
mov
mov
std
or
sarl
cmpsl
add
out
pop
pop
sub
inc
and
inc
mov
xor
in
and
xor
or
sbb
and
cli
mov
adc
inc
dec
xchg
ret
mov
pop
clc
inc
or
ret
mov
loope
sub
fidivs
push
jmp
mov
orb
fldenv
sbb
pop
dec
lea
pop
test
xchg
mov
shrb
sub
add
mov
adc
dec
sbb
push
or
lea
ja
or
mov
repz
add
xchg
out
test
fidivrs
xor
xor
xchg
and
mov
lds
or
sbb
psubsw
xor
int
sbb
jmp
repnz
enter
ret
cmc
scas
push
mov
xor
sub
pushf
and
jp
sbb
xchg
push
mov
clc
xchg
stc
add
sub
adc
sub
rol
push
outsb
insl
and
pop
adc
lahf
mov
pop
mov
xor
sahf
mov
lods
cli
fsubrl
pop
mov
adc
adc
jmp
mov
xchg
imul
mov
inc
cmp
xor
cmpsl
mov
add
jnp
add
inc
sub
das
dec
aas
add
push
fnsave
push
movsb
inc
movb
popa
in
arpl
cltd
sahf
aam
jg
add
ja
psraw
test
insb
push
jae
push
mov
in
push
rolb
or
sbb
dec
insb
lock
js
adc
das
mov
sub
xor
and
add
dec
test
adc
pop
cli
push
mov
mov
stc
xor
mov
mov
arpl
xor
les
fldcw
pop
inc
and
mov
mov
xchg
add
mov
mov
push
dec
popa
sbb
pop
dec
or
icebp
icebp
xchg
and
out
xor
mov
mov
inc
push
test
mov
dec
leave
mov
clc
mov
cmp
js
jbe
cmp
jp
mov
nop
nop
shll
and
movsb
cmc
sbb
add
lret
cmp
mov
fists
leave
jg
lret
sbb
mov
cltd
stc
dec
pop
push
adcl
popa
movl
add
shll
repz
cmpl
in
add
scas
push
lds
sbb
and
clc
les
testl
and
fisubrs
jp
add
out
mov
or
mov
popl
cwtl
cli
fidivrl
movsl
repnz
lret
xor
inc
mov
mov
loope
sbb
getsec
mov
push
add
or
ret
inc
flds
cmc
and
jno
mov
jb
int
rcl
rcl
or
cld
wrmsr
nop
cmpsl
call
sub
orb
cltd
or
dec
inc
sbb
out
xlat
in
mov
jecxz
xchg
ret
lock
push
bound
pop
lock
push
hlt
std
orl
mov
add
lcall
and
push
popa
adcl
xor
insl
adc
arpl
inc
inc
int
mov
mov
inc
fisubl
test
add
into
dec
mov
mov
js
jno
out
sub
lods
add
jbe
xorb
int3
xor
push
adc
sub
mov
jne
xorl
cwtl
push
push
pop
or
mov
inc
xor
sti
xchg
mov
or
rcrb
sbb
and
test
dec
jnp
sbbb
pop
enter
and
jl
or
ror
mov
adc
jae
movzbl
jmp
inc
out
cmp
mov
repnz
push
mov
xor
sbb
sub
stc
cld
mov
ss
cld
mov
inc
mov
push
add
movsb
jne
hlt
mov
pop
inc
ret
fcoms
pop
nop
enter
cmp
add
mov
sbb
push
jp
jg
xlat
test
cmp
mov
push
or
ret
dec
gs
sub
les
nop
push
mov
push
adc
es
pop
pop
cmp
mov
cs
or
aaa
mov
xlat
divb
mov
fadds
aam
clc
popa
xlat
and
aad
add
and
mov
mov
out
adc
jmp
jmp
popf
sub
pop
or
push
clc
pusha
push
push
movsb
loopne
push
add
mov
insl
xor
adc
jo
rolb
popa
inc
cmp
sub
outsb
je
lds
lock
add
lret
jp
and
push
in
inc
push
mov
shl
push
out
cld
add
fldenv
sub
call
out
lock
adc
push
xchg
adc
xchg
jmp
sub
in
loope
les
and
mov
or
adc
add
sub
dec
inc
lods
pop
pop
jns
ret
lods
sub
jg
pop
sbb
sbb
mov
or
mov
das
xchg
std
repz
adc
xor
mov
add
loope
mov
enter
dec
push
je
dec
jne
adc
jecxz
or
lds
clc
adc
push
push
inc
lahf
xor
add
test
xlat
mov
push
shl
fidivl
sub
sbbb
push
jmp
cmp
pop
loopne
fiadds
sub
inc
xor
dec
dec
lcall
sbb
jecxz
mov
lcall
mov
rorb
mov
aaa
mov
add
lahf
mov
jmp
add
jo
mov
and
xor
inc
sub
mov
scas
jl
push
stos
xorb
sub
xor
xor
iret
inc
adc
jbe
pop
ja
push
xchg
and
mov
sub
xor
fisttpll
or
inc
or
inc
mov
dec
dec
mov
inc
xchg
or
add
mov
lcall
and
mov
mov
pusha
sub
in
cltd
dec
popa
push
mov
adc
sub
insb
and
dec
mov
jmp
loop
and
cmp
xchg
clts
push
into
xchg
xorb
into
stc
sub
std
fsubl
aas
or
shlb
lock
inc
sub
mov
pop
dec
cmp
je
mov
inc
popa
int3
cs
or
iret
mov
add
mov
in
mov
and
or
loop
bound
push
sub
popa
push
add
adc
dec
and
sti
dec
sub
inc
inc
push
inc
xchg
add
cmpsb
imul
test
add
test
gs
pop
dec
je
dec
ja
or
or
in
cwtl
or
pushf
pushf
test
or
xchg
sbb
inc
lods
aas
xorb
int
into
or
mov
pop
cmpsb
and
and
and
sbb
pop
mov
sub
cmpsb
push
rcrb
add
movb
mov
jb
or
mov
inc
push
push
lods
push
sbb
nop
adc
aam
mov
adc
sub
add
mov
mov
shlb
daa
fimull
add
xor
or
xor
or
adc
and
imul
in
mov
dec
inc
in
andl
dec
jns
pop
jmp
jo
mov
mov
cmp
jl
pop
sub
cmp
addb
js
out
or
push
mov
int3
mov
adc
sarb
sbb
in
cwtl
bound
pop
and
adc
insb
sbbl
adc
ss
sub
push
cld
or
sarl
sub
mov
mov
sbb
es
pop
lds
aam
js
adc
or
inc
fadd
and
js
cmp
pop
testl
push
jo
mov
mov
sahf
les
inc
xor
jge
clc
and
hlt
xor
or
scas
nop
rclb
xor
cltd
mov
int3
lahf
mov
orl
mov
mov
jle
nop
xchg
and
mov
int3
mull
pop
inc
std
or
rorb
adc
pop
xchg
inc
loopne
ss
xor
add
xor
cli
sub
or
jne
aad
push
sbb
add
movsb
pop
shlb
push
dec
es
rorl
mov
stc
repz
fcoml
or
push
popa
jo
into
or
mov
adc
jns
push
ficoms
xchg
inc
sbb
fsubr
cmpb
xchg
mov
sub
repz
jge
icebp
xor
mov
aad
and
add
cmp
sbb
add
jmp
jecxz
add
out
add
mov
insb
je
fucomi
add
jae
inc
push
push
mov
and
sti
mov
sbb
test
jge
jge
mov
jbe
mov
lods
push
fdivrl
loop
xchg
sub
rdmsr
sti
out
pop
xor
dec
loopne
mov
mov
or
scas
inc
insb
or
iret
bound
jle
push
je
xchg
es
pop
jne
add
mov
mov
cmpl
stos
subb
je
scas
sbb
push
pushl
dec
pop
pushf
sub
test
push
and
dec
lea
adc
and
les
ds
test
shrb
aas
sbb
rcll
or
adc
mov
xor
xchg
add
ficoms
je
jge
push
and
shll
call
push
jmp
or
test
xchg
out
add
xor
lods
or
push
inc
addb
pusha
inc
sar
shlb
pop
out
jge
adc
inc
sub
pop
in
in
or
imul
arpl
sub
sub
fcoms
cmp
fdiv
inc
inc
add
dec
movsb
clc
data16
cmp
xchg
test
lods
out
mov
jo
jmp
inc
jp
jbe
push
cmp
addb
inc
in
adc
xchg
orb
push
ret
mov
rcrl
ret
adc
and
push
or
or
ljmp
pusha
faddl
pop
popa
lods
push
rcrl
iret
push
adc
sbb
adc
les
xlat
aam
cmp
fmull
in
clc
xor
nop
sbb
jecxz
jl
test
std
arpl
cwtl
pop
xor
cwtl
or
inc
loopne
sbb
call
or
adc
add
aad
lods
push
in
cmp
nop
sub
mov
xchg
sbb
push
sub
movsl
and
push
je
add
lea
inc
call
xor
arpl
hlt
sub
push
fwait
pop
jp
sub
inc
push
test
mov
sbb
mov
jle
clc
push
mov
sbb
stc
jnp
inc
fildl
insb
imul
push
hlt
pop
inc
inc
jne
adcl
rorl
xor
add
imul
xchg
pop
imulb
sub
icebp
mov
test
insl
cmp
popa
js
mov
mov
xor
adc
mov
out
shll
lods
mov
and
adc
sbb
sbb
fcmovnb
call
psrld
mov
pop
out
mov
dec
push
push
xchg
sbb
mov
push
rol
daa
addr16
imul
enter
jns
jg
sbb
xor
cmp
fs
inc
push
in
xchg
sub
or
lods
nop
rol
mov
outsl
addr16
ret
xchg
or
fmul
push
xor
out
xor
and
stc
ja
sbb
or
push
or
and
sub
push
pop
xchg
xor
loopne
enter
mov
mov
push
and
inc
pop
arpl
aaa
loope
sbb
pop
mov
inc
dec
hlt
mov
add
push
xchg
sbb
mov
cmp
jp
mov
xchg
mov
xor
in
dec
in
adc
adc
jl
mov
sub
adc
and
sub
lret
or
in
repnz
jl
movsb
jb
pop
pop
push
push
repnz
and
test
orb
outsl
xchg
jne
jl
sbb
mov
pop
xchg
movb
pop
inc
pop
sbb
cmp
push
jle
popf
sbb
push
mov
repz
push
sbb
ss
sbb
lcall
jb
mov
add
mov
cmp
push
jns
mov
sbb
rcrb
push
jb
sbb
add
sbb
pop
adc
add
and
fsubl
xchg
pop
sar
stos
xor
inc
lea
test
inc
lcall
mov
arpl
and
aaa
add
add
movsb
cmp
lods
adc
mov
and
in
outsb
rol
jnp
mov
push
or
xor
or
add
ja
decb
push
andl
pop
jge
call
mov
jne
sbb
add
adc
add
jmp
xchg
outsl
loope
aaa
sub
data16
jecxz
in
mov
in
cmp
add
cmp
pop
out
dec
scas
cltd
addr16
fmuls
cmp
gs
push
pop
cmpsl
mov
sahf
mov
dec
out
dec
push
inc
mov
pop
test
xchg
fisttps
and
cmp
and
gs
into
cmp
mov
cli
arpl
ds
js
lret
stos
push
xchg
and
or
into
fs
jl
shr
shrb
fsubrs
and
sub
push
popf
xchg
nop
mov
sbb
roll
ficoms
test
xchg
in
xchg
dec
or
in
or
or
xor
and
or
inc
mov
adc
or
stos
adc
pop
enter
sbb
push
jmp
cmp
or
and
adc
lret
rcrl
paddusb
inc
shrl
popf
rclb
sub
mov
inc
loop
pusha
loopne
jns
in
call
rolb
lock
shlb
out
inc
movsl
fs
fldt
pushf
sbb
push
mov
andb
addr16
into
mov
push
rcrb
test
fcompl
in
cmp
enter
mov
sbb
cmp
jl
mov
sbb
jb
cwtl
sbb
xor
jnp
bound
jbe
sub
adc
pop
repnz
test
dec
add
mov
das
mov
adc
sub
pop
pop
cmp
cmp
and
mov
dec
enter
pusha
pop
scas
pop
jb
push
adc
fs
mov
sahf
pop
test
mov
and
sub
jmp
add
adc
dec
jne
divb
xchg
cmp
mov
adc
aad
pop
daa
and
mov
bound
pop
lock
push
sbb
cmp
jmp
or
movsb
rclb
push
sbbl
and
sub
hlt
push
jmp
int
jae
add
mov
dec
pop
sbb
pop
xchg
inc
mov
or
fisubrl
stc
es
sub
or
xchg
xor
jno
adc
rorb
xor
or
pop
repnz
add
xor
test
add
push
lea
movsb
adc
and
and
push
xor
enter
sbb
or
popa
sub
inc
inc
mov
xchg
mov
and
mov
mov
sub
or
sub
enter
mov
xchg
and
pusha
mov
add
rorb
aaa
test
shrb
int
pop
and
sub
mov
xchg
sub
xorb
xor
loope
xor
clc
add
int3
cmp
lock
or
arpl
sbbl
hlt
jge
out
je
push
daa
popf
adc
sbb
xor
sub
pop
lea
jne
push
cltd
nop
inc
and
jbe
push
and
ljmp
pop
rcrb
cmpsb
xlat
or
sub
cmpsl
hlt
test
sbb
out
xor
add
jb
dec
dec
xor
xchg
push
sbb
jns
sarb
or
push
and
sbb
sbb
movsl
xor
cmpsl
test
fistl
loope
lahf
xchg
or
iret
xor
sub
roll
pop
and
jmp
addb
sbb
nop
pop
add
mov
inc
inc
dec
arpl
fstl
adc
add
pop
pushf
mov
xlat
and
lret
cmp
push
push
push
adc
test
cmp
or
nop
cmp
cmp
push
inc
loop
in
sahf
xor
push
cltd
inc
ds
mov
or
inc
lock
mov
jb
fnstenv
xor
pop
push
cmc
pop
decl
iret
mov
sub
mov
pushf
push
imul
push
cli
loop
dec
and
dec
jnp
mov
cmpsb
xchg
mov
mov
lahf
inc
outsl
mov
cs
add
inc
rcrl
cmpw
enter
imul
stos
daa
sub
and
pop
adc
shlb
or
pop
cmp
cmc
daa
mov
inc
xor
and
cmp
mov
or
mov
es
sbb
sbb
push
movsb
or
xchg
sarb
sbb
inc
adc
and
push
inc
add
pusha
pusha
outsb
leave
and
inc
in
xchg
push
scas
xor
mov
and
xchg
cmpsb
jns
stos
add
in
imul
lea
xchg
pop
adc
add
movsl
ffreep
sbb
adcb
stc
inc
and
mov
cld
or
push
and
sub
mov
adc
lcall
inc
jge
lret
ret
test
pushf
pushl
nop
push
sub
sbb
sbb
mov
inc
mov
pushf
and
incb
mov
and
cmp
ret
jne
and
inc
cmp
popf
jae
in
lock
add
cmp
add
dec
in
clc
pop
push
add
push
xchg
lahf
aaa
pushl
call
in
sub
pop
sbb
ss
xor
stos
inc
stos
or
mov
repz
iret
and
cmp
and
cmpl
lock
cmp
mov
ds
out
or
inc
cmp
adc
repnz
or
mov
push
fdivr
push
xchg
leave
or
sbb
xchg
xchg
or
inc
and
test
or
mov
lret
dec
or
add
lahf
xchg
or
cld
sbb
arpl
scas
out
or
or
fimuls
add
jno
rcrl
cli
mov
dec
xchg
inc
jbe
aas
sar
xor
sbb
shrb
adc
ret
or
pushl
fincstp
xor
lods
jp
xor
and
movsl
push
imul
xor
adc
cmp
gs
dec
add
push
add
inc
pop
sbb
jb
sub
int3
js
add
ret
test
add
or
cmp
and
push
add
push
arpl
enter
add
or
into
xorb
pushl
jb
enter
add
sub
jbe
pop
pop
sub
sbb
lahf
or
gs
xor
xor
xor
jg
sbb
pop
jecxz
cmpb
jo
adc
dec
cmp
pop
push
mov
xchg
sbb
jns,pn
sbb
jb
fbstp
cmpsb
inc
xor
sbb
xchg
sti
or
cmp
loope
push
rcrl
push
aam
inc
sub
fs
xchg
xchg
sub
and
ficoml
in
and
bound
or
inc
les
mov
loopne
cmp
vpand
lods
push
mov
daa
test
mov
cmp
dec
push
popf
in
aad
out
ja
push
sbbb
push
and
aam
jb
pushl
adc
rolb
add
enter
in
or
leave
adc
and
gs
xor
and
dec
sbb
push
jae
orb
jnp
pop
bnd
inc
dec
push
push
adc
cmp
fidivrs
fwait
mov
adc
mov
adc
xchg
outsb
sbb
test
mov
and
mov
sub
push
dec
andl
fiadds
add
sbbl
fldl
sub
bndldx
cmpb
fs
xor
sub
and
push
fisttpl
lea
arpl
jl
sbb
cs
xor
push
xchg
pop
sub
pop
insb
jne
call
popa
inc
sub
xchg
stos
imul
cmp
push
pop
push
mov
and
popa
aam
dec
mov
cmp
jle
inc
xor
sub
inc
xor
loope
sub
pop
sub
dec
sbb
jmp
nop
add
push
ror
out
adc
adc
xor
adc
call
xor
xor
rcll
call
adc
aam
xchg
jae
ljmp
mov
in
sbb
pop
adc
aas
loop
sub
test
loope
inc
imul
subb
mov
push
sbb
cmp
adc
adc
cmp
test
cmp
or
stos
dec
sub
jg
pop
mov
nop
sub
cmp
sub
pop
sub
push
lcall
leave
inc
pop
movsl
adc
enter
aaa
das
sub
xor
inc
and
cmpl
inc
mov
and
jno
out
aas
pop
int
pop
sub
pop
or
mov
xchg
mov
cs
outsb
mov
nop
inc
adc
sub
xchg
inc
lahf
shlb
add
insb
leave
dec
movsb
testb
pusha
xorl
xor
jmp
or
and
sbb
adc
adc
jno
pop
adc
das
and
push
sbb
aaa
sbb
inc
push
jbe
sbb
xor
and
cmp
add
arpl
jae
push
ss
xor
mov
or
push
adc
test
cwtl
das
mov
idivb
test
pop
and
pop
add
imul
negb
push
adc
dec
push
lods
mov
lods
xchg
test
sub
mov
sbb
movsb
call
sbb
jae
add
mov
add
movsb
rclb
or
cwtl
cmp
mov
dec
ljmp
xor
add
sti
sub
xlat
inc
rorl
push
xor
jmp
adc
add
rol
adc
inc
je
or
push
dec
test
or
pusha
xor
fisubrl
xor
and
pop
pop
mov
mov
push
or
and
and
adc
jl
xor
sbb
test
inc
dec
push
rolb
call
rorb
cs
push
insb
inc
je
and
pop
add
or
shlb
insb
cmp
push
adc
sub
add
cmp
jo
inc
sub
push
mov
ficoml
fcoms
orl
and
pusha
and
test
jne
lcall
xor
cld
nop
sbb
dec
fsubr
adc
mov
rcr
mov
adc
inc
pop
jb
cwtl
cmp
repz
xchg
mov
push
inc
push
shrb
movsl
mov
enter
cmc
pushf
mov
das
and
enter
jge
cmc
sbb
lea
sbb
and
or
test
pop
or
rcll
cltd
adc
and
push
loopne
rclb
or
push
lea
sarb
dec
stos
inc
mov
movsl
jp
pop
and
pop
xchg
mov
dec
pop
lret
lock
inc
jg
push
je
out
inc
sbb
out
xchg
mov
jne
push
adc
fdivrl
and
jmp
js
sub
pop
es
sub
test
add
push
scas
mov
add
and
add
cmp
outsb
loope
xor
iret
cmpl
pop
sub
movb
dec
lock
sbb
pop
jae
mov
xchg
sub
insb
negb
pop
adc
lcall
dec
or
mov
aaa
lods
mov
jo
add
and
and
sub
lock
int3
rol
movl
xchg
lea
xor
xchg
movsb
test
clc
gs
jle
mov
jp
test
fs
je
nop
ja
mov
enter
test
mov
add
lea
enter
xor
pop
jg
push
xor
inc
ret
dec
push
adc
ljmp
xlat
mov
dec
insb
sub
xchg
jo
lea
pop
jns
add
add
dec
pop
ret
push
and
and
dec
pop
int
pop
lock
test
add
and
push
add
pusha
ret
andl
imul
or
sbb
mov
rcr
adc
and
mov
inc
pop
mov
fwait
push
scas
mov
leave
jp
cli
cmpsb
mov
cs
mov
cmpsl
int3
nop
cmp
jae
bound
mov
add
shlb
subb
repnz
jp
in
lcall
push
add
mov
xchg
pushf
pushf
adc
pop
xchg
gs
mov
adc
fnstenv
nop
add
sbb
add
or
pop
pusha
std
repnz
lods
shl
add
ja
fdivl
xor
test
rorl
mov
sub
bound
sbb
inc
mov
js
adc
add
pushf
cmpsl
mov
enter
xor
sub
dec
lods
scas
mov
push
gs
addl
cmp
mov
xlat
ltr
jl
aam
out
cmpl
pop
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
push
aas
cmp
mov
fcompl
xlat
cwtl
hlt
mov
cmp
xchg
loop
cmp
add
xlat
pop
outsl
ret
enter
xor
fabs
mov
mov
and
mov
popa
clc
push
mov
mov
lret
xchg
cmpsl
mov
sbbl
or
sbb
pop
shl
jbe
aaa
clc
xchg
mov
lcall
lret
push
je
std
push
pop
jns
push
add
adc
push
sbb
aam
shll
xchg
in
jb
addb
lea
adc
out
push
fistpl
icebp
sbb
int3
mov
test
mov
push
in
jecxz
jp
sbb
sbbl
in
test
add
icebp
dec
xor
call
test
adc
bound
outsb
inc
xchg
sbb
add
push
insl
or
xchg
aaa
sub
imul
and
inc
dec
xchg
mov
pop
add
cmp
mov
add
dec
push
or
dec
adc
adc
or
cmp
adc
push
aas
andb
pushf
inc
dec
bound
lds
mov
mov
fsubrs
popf
cmp
pop
jmp
xchg
xchg
nop
aaa
test
jl
mov
jecxz
mov
andl
shll
dec
es
test
ds
loopne
pop
hlt
daa
lea
sub
sub
pop
sub
loop
pusha
leave
sarb
popa
mov
and
cltd
movsb
add
inc
cs
das
inc
dec
and
js
ds
push
mov
das
dec
mov
pop
adc
pop
test
push
sub
in
mov
cmc
sub
pop
js
and
sub
insb
rol
leave
pop
orb
es
in
pusha
test
test
adc
sbb
pop
xor
mov
sub
mov
subb
lods
aam
fdivs
lds
into
aam
inc
mov
lds
cs
bound
jge
jmp
sub
xor
test
int3
xor
jns
aas
fdivs
mov
dec
movsl
push
int3
js
mov
xchg
and
inc
push
pushl
push
push
andl
xor
fistps
lods
fcoms
xchg
xor
pusha
xor
mov
out
xor
jbe
add
inc
out
cwtl
repz
xor
add
push
sub
out
mov
or
repz
mov
rcl
out
je
out
push
sbb
jmp
loope
insb
loopne
lret
jbe
movsb
or
sbb
jns
xor
jg
pop
lock
mov
jb
ljmp
push
mov
pop
movsb
xlat
in
test
in
fistl
out
add
jne
imul
loope
sub
mov
sub
dec
pop
dec
cmp
mov
sbb
and
cmp
lea
xor
and
test
inc
fistpll
jle
je
movsb
cmp
inc
jbe
ficoml
adc
data16
ret
push
push
fwait
push
adc
es
mov
add
push
xchg
mov
mov
mov
ljmp
fadds
es
insb
cmpsb
push
push
test
sbb
jmp
jae
int3
mov
test
ss
ds
cmp
and
or
add
mov
pop
fimull
push
jne
or
push
and
mov
cmp
lcall
inc
xchg
notb
in
mov
call
pushf
in
aaa
mov
cmp
outsb
mov
or
push
xor
not
push
incb
and
xchg
movsl
outsl
dec
in
adc
aas
xchg
fisttpl
movsl
add
movsl
out
mov
xchg
push
xor
or
push
or
inc
pusha
xchg
ss
dec
sub
inc
mov
lret
mov
sub
sub
adc
in
adc
hlt
sar
sub
xorb
push
add
push
jmp
std
subl
pop
pop
jmp
sbb
mov
and
xorl
pop
leave
rolb
arpl
push
fists
jne
cmp
jne
inc
pop
add
jmp
inc
dec
mov
lcall
mov
call
xchg
fucomip
or
ret
inc
inc
out
xchg
cld
add
lret
jo
or
xchg
push
adc
push
call
or
pushl
aam
lock
mov
in
and
push
adc
insl
xor
loope
adc
xor
jns
pushl
mov
or
or
inc
mov
bound
and
adc
scas
dec
mov
icebp
js
inc
rorl
xor
add
test
sbbb
mov
aad
in
into
and
add
pushl
and
je
or
mov
int
pop
sti
mov
jb
cmp
cli
jbe
cmp
cmp
jnp
or
adc
and
lds
jnp
je
pop
pushf
jecxz
dec
push
and
inc
test
movsb
jecxz
fucom
repz
movsl
out
in
adc
push
mov
push
mov
fnstenv
or
xchg
mov
ret
sub
jp
pop
dec
sbb
jg
mov
imul
and
push
push
sbb
dec
cmp
fisttpll
sub
pusha
cmp
icebp
stos
outsl
stos
xchg
push
lea
adc
add
jo
add
xchg
inc
and
ret
jl
rclb
push
mov
mov
push
jmp
fists
sbb
rorl
mov
jp
inc
in
stos
add
dec
fcoms
sahf
scas
mov
sub
dec
cli
mov
mov
lods
mov
xor
pop
push
mov
adc
sub
dec
adc
jge
cltd
pop
add
mov
shl
and
es
xor
in
shrl
push
jmp
push
add
cmp
ret
inc
and
leave
jbe
lret
adc
out
outsb
sbb
imul
pop
sbb
mov
sub
push
sub
pop
xor
mov
mov
dec
and
add
ss
mov
insb
cmp
fadds
sub
ret
add
test
mov
cltd
or
or
xor
shr
add
imul
or
push
repnz
and
stos
imul
sahf
mov
stc
and
inc
mov
fld
sbb
push
add
add
pop
shll
stos
mov
add
es
sbb
cli
aad
popf
mov
call
fldl
sub
add
rclb
dec
loop
inc
loopne
inc
in
aas
mov
in
rcrl
pop
or
lock
push
dec
stc
dec
les
pop
push
pop
stc
jp
push
adc
inc
sbb
imul
test
xchg
popa
xchg
xchg
add
add
pop
daa
xchg
shr
inc
mov
and
sbb
inc
cs
insl
or
add
sub
test
aam
iret
mov
cmp
mov
fmull
push
pop
mov
or
sbb
adc
pushf
and
mov
push
outsl
mov
sbb
xchg
adc
sbb
mov
pop
ret
data16
les
pusha
jo
dec
or
pop
ret
push
scas
adc
test
push
xor
loopne
daa
cmp
sub
inc
push
or
cld
push
fistl
push
loope
inc
mov
out
cmp
jns
jne
jl
sub
xchg
xchg
out
cld
call
jns
push
pop
or
lock
jno
and
push
jbe
push
sbb
rol
jnp
push
sbb
and
fiaddl
adc
jl
xor
dec
adc
stos
enter
add
mov
add
inc
cmp
or
add
testl
cmp
pushaw
push
inc
xchg
mov
jle
and
jl
inc
xor
ret
adc
lock
mov
jo
xchg
add
notl
or
and
mov
pop
jo
push
or
aas
loopne
roll
sbb
push
es
les
or
dec
or
fwait
pop
mov
lahf
lcall
sbb
in
xchg
push
inc
iret
cmp
inc
jno
or
ljmp
inc
adc
pop
xchg
xor
ds
and
or
fsubrp
jge
inc
imul
xor
cmpsl
or
push
test
clc
and
sbb
cmp
or
adcl
cmp
int
inc
or
xor
inc
adc
out
xor
mov
ljmp
imul
ret
pop
or
pusha
jmp
pop
cmp
es
test
je
xchg
jmp
pop
lods
push
cmp
or
adc
add
pop
pop
pop
out
cmpsl
cmp
mov
dec
sub
or
pop
ret
add
add
mov
push
out
and
mov
lock
hlt
mov
stos
and
inc
pop
popf
xchg
push
add
movsl
push
xchg
sahf
int
rcrl
je
shlb
stc
cld
cmpsl
xor
push
push
iret
hlt
xchg
xor
scas
add
sbb
and
adc
push
cli
movsb
repnz
push
in
push
jp
stos
jl
xor
int3
sti
in
or
dec
sarl
inc
mov
mov
ja
pop
xor
sub
push
push
fcmove
push
inc
lods
testb
and
add
xchg
push
push
jb
dec
call
cltd
sub
sub
mov
inc
ja
js
jge
adc
sub
jmp
cs
mov
xchg
icebp
js
mov
sub
lods
push
loopne
aam
outsl
lret
fs
in
insb
mov
addr16
mov
sbb
jl
add
adc
adc
dec
repz
dec
lret
insl
and
push
adc
test
insb
mov
stc
in
ret
xor
mov
cwtl
sub
out
dec
xchg
and
cs
fisubl
fisubrs
cmp
fsubr
cmp
xchg
fcmovne
sti
adc
push
mov
ljmp
fwait
sbb
cmpb
aaa
cli
add
mov
mov
push
and
pop
inc
arpl
mov
pop
or
xor
adc
mov
xor
mov
mov
mov
push
inc
clc
mov
lea
cmpb
jne
movsl
lods
push
sub
rcpps
add
pop
inc
jb
adc
movb
push
jbe
pop
xor
sti
pop
jl
pop
je
push
jae
push
pop
clc
lock
aam
mov
cmp
es
fdivl
mov
fidivl
xchg
les
repnz
icebp
add
mov
outsb
ds
cmpsb
call
test
cmp
sub
push
mov
jg
scas
and
or
movsb
lock
aad
sub
add
jae
push
aad
out
jne
movsb
scas
jbe
sti
or
push
pop
cmpsb
pop
push
pop
push
mov
movsl
push
test
adc
dec
cld
hlt
sbb
adc
dec
or
sbbb
pop
movsl
mov
fimuls
jl
adc
and
clc
pop
push
push
mov
push
mov
lds
inc
jno
mov
mov
ret
dec
bound
dec
adc
ret
inc
test
dec
adc
push
mov
test
mov
dec
inc
cmp
jb
pop
pop
dec
or
and
push
dec
add
mov
dec
frstor
clc
pop
ret
mov
push
jg
ret
rolb
mov
and
jmp
cmp
jne
xor
inc
fsubrs
lret
out
stos
push
mov
push
mov
fildl
fisttps
fcomps
adc
push
lret
jo
aaa
pop
inc
xchg
mov
adc
inc
cmp
loope
inc
ja
mov
mov
add
add
jg
push
cmp
and
ja
cmp
cwtl
inc
icebp
add
stos
jg
fisttpl
hlt
mov
shl
inc
add
jmp
push
sub
push
or
mov
dec
jns
mov
adc
mov
sbb
rcrl
leave
faddl
push
fadds
push
mov
mov
ja
add
add
adc
inc
mov
cmovbe
push
adc
dec
or
xor
sub
inc
sbb
sub
xor
push
adcl
mov
in
pop
shl
aaa
lcall
xchg
stc
stos
dec
inc
imul
dec
mov
add
sbb
data16
mov
push
inc
sub
negb
xchg
rclb
aaa
jne
std
sub
adcl
cwtl
hlt
cmpl
add
adc
adc
push
adcb
dec
mov
ret
or
cmp
pop
fwait
pop
xchg
add
jl
cmp
sbb
jnp
cli
mov
adc
nop
cmpsl
add
mov
ret
into
jecxz
add
mov
xchg
fcoml
or
insl
or
mov
aas
call
faddl
lods
mov
jmp
mov
std
cwtl
fistpl
repz
xor
gs
mov
mov
cmp
push
and
icebp
cmc
xor
push
bound
and
loopne
add
jo
and
inc
pop
mov
or
int3
rorb
and
xchg
mov
push
faddl
dec
lea
push
movsl
addl
mov
or
bswap
or
inc
lea
mov
insb
sub
sub
mov
int3
es
fsts
popf
ss
dec
cmp
jns
cmp
push
dec
cmp
mov
mov
call
repnz
pop
mov
xor
sbbw
sbb
pushl
je
test
pop
xchg
les
or
mov
xor
adc
or
push
mov
adc
ret
call
fld
lea
jae
jg
dec
jne
cmpl
js
or
test
iret
xor
cmp
or
pushf
loop
movsl
or
clc
mov
ds
sub
push
mov
js
mov
stos
in
sub
test
or
jmp
mov
test
add
jmp
adc
daa
pusha
or
out
js
clc
push
pop
sub
aaa
mov
adc
sbb
and
sbb
leave
inc
jb
jmp
sbb
or
dec
es
mov
mov
xchg
jl
js
popf
lods
jecxz
jb
or
jo
jb
push
clc
dec
enter
add
jo
push
mov
leave
dec
mov
in
pusha
pop
ret
iret
push
out
pop
cmp
je
jmp
mov
popa
outsb
sti
or
and
jle
mov
or
inc
outsb
pop
and
lods
pop
fisttpl
dec
ret
sbb
sbb
inc
ret
xchg
pop
loop
dec
imul
mov
push
mov
push
xor
inc
push
sbb
xor
movsb
and
and
adc
call
or
adc
push
das
pop
fwait
and
dec
or
pop
call
dec
call
and
icebp
in
loopne
sbb
xor
shlb
dec
stos
push
or
rorb
pop
das
add
pop
adc
out
adc
cli
pop
in
xchg
add
inc
shl
push
sbb
pop
jno
mov
sbb
add
in
stos
cmp
xor
sbb
cli
pushf
idivl
in
daa
sbb
ja
in
fdivl
ljmp
in
and
push
loopne
push
mov
mov
mov
sbb
mov
mov
lds
std
dec
cmpsb
mov
jl
subl
je
or
and
sbb
lcall
dec
push
call
call
xor
insb
les
call
add
or
mov
sbb
adc
arpl
aas
adc
lock
lock
and
loop
inc
mov
or
sbbb
test
and
pusha
mov
push
sub
idivb
push
mov
dec
add
inc
or
mov
cwtl
push
or
popf
xchg
cmpsb
pushf
lods
loope
test
push
add
mov
sarb
push
or
push
xchg
jbe
jmp
pop
ss
pop
lods
adc
sbb
add
mov
push
mov
rcll
aam
pop
les
push
adc
sub
sarb
pop
pop
ret
shrl
ret
int3
fst
sub
mov
or
push
rorl
jo
pusha
inc
dec
shr
cmpsl
aad
add
cmp
push
push
sahf
frstor
fdivs
popa
sbb
je
push
or
dec
aam
jne
loopne
rcll
sub
testl
stos
mov
dec
add
dec
or
mov
pop
cmp
add
sbb
int3
cmp
push
idivb
pop
call
mov
cld
adc
pop
mov
test
pop
test
push
pop
inc
push
sub
pusha
jmp
cmp
movsl
pop
negb
xchg
cmp
loope
imul
xor
cs
mov
nop
cmp
addb
mul
xor
je
loopne
subb
roll
sbb
or
fistps
xor
sbb
adc
ds
sti
jne
outsb
inc
mov
je
pop
inc
push
and
add
mov
adc
icebp
inc
shl
ret
sbb
adc
sub
dec
mov
sub
mov
push
add
inc
rolb
scas
faddl
adc
mov
push
lret
pop
adc
imul
sub
loopne
xchg
cmp
sub
mov
mov
outsl
xchg
cmp
ret
mov
test
sub
cmc
push
enter
sbb
push
xlat
rclb
je
outsb
or
xchg
mov
adc
inc
out
shlb
loope
inc
cli
jp
push
lea
mov
dec
adc
push
cmp
insl
inc
adc
add
dec
lods
sbb
test
push
push
sub
aaa
sub
pop
mov
mov
add
adc
jnp
dec
shlb
jne
fimuls
in
outsb
lret
mov
shll
or
loopne
pushf
mov
mov
push
xchg
mov
cmp
jb
or
ret
or
jno
or
xor
in
cld
push
mov
mov
loope
cmp
cmpsl
xchg
cmp
push
mov
jecxz
inc
cld
jns
lock
sarl
lret
xor
jo
adc
mov
push
adc
dec
inc
faddl
cmp
or
cli
or
or
inc
imul
mov
out
shlb
xchg
shrb
cmpsl
xchg
rcrb
cmp
in
and
sbb
push
icebp
aad
test
jle
adc
popf
mov
stos
push
in
jb
sbb
push
pushw
push
add
arpl
adc
iret
icebp
xchg
mov
or
mov
pop
add
insb
lock
sub
jne
adc
xor
xchg
or
pop
or
mov
out
mov
jmp
adc
or
aam
clc
pop
push
gs
lcall
fimull
clc
inc
pop
fidivs
icebp
pop
adc
andb
roll
sbb
and
jns
push
xor
jmp
fistl
test
lock
mov
pop
popf
jmp
shlb
pop
fs
mov
test
cmp
jl
mov
mov
sbb
inc
shrb
or
call
pop
mov
adc
movb
test
xchg
push
mov
je
loopne
clc
dec
inc
or
jae
add
push
jae
arpl
push
jne
push
push
je
inc
or
xchg
out
xor
or
and
jle
dec
filds
push
push
outsb
inc
inc
jo
sbb
or
inc
add
rolb
mov
cmp
and
jmp
cmp
add
sub
cmp
sub
add
outsl
and
test
or
or
dec
notb
loope
push
or
mov
cwtl
mov
dec
xchg
arpl
or
sub
sub
add
fdivl
pop
pop
add
mov
iret
sub
inc
cmpsb
dec
cmp
or
jnp
push
inc
aaa
fisubs
pop
xor
dec
imul
je
fcomp
push
push
mov
outsb
add
or
sbb
push
xor
jo
sub
cmpb
xor
xor
and
adc
fisttpll
push
test
jae
inc
minps
pop
sti
dec
pop
scas
push
outsb
sbb
stos
push
add
stc
pop
and
push
test
cwtl
or
dec
loopne
adc
or
cmp
mov
mov
mov
outsb
sub
jl
repz
imul
or
mov
jl
adc
pop
fwait
xchg
dec
push
sbb
mov
cltd
push
jae
sub
inc
rorb
loopne
ljmp
nop
gs
push
mov
dec
mov
shll
and
add
cmp
dec
shll
jo
lea
fdivl
jl
mov
movsl
or
call
cmpsb
cwtl
sub
lds
into
sti
or
daa
shrb
sub
nop
lcall
shlb
scas
sub
in
sbb
rcrb
jmp
or
add
cmpsl
sbb
add
loopne
aaa
pushf
add
sub
xor
test
pushl
add
sub
rorb
sbb
orb
jo
enter
push
orb
mov
add
dec
shl
push
pop
ret
dec
popa
xchg
sbb
xor
mov
subb
add
xchg
clc
adc
and
cmp
adc
push
pop
push
xor
sbb
fildll
pcmpeqw
xchg
add
or
adc
xor
mov
lea
add
sub
fs
mov
push
fistps
mov
cmp
sbb
loopne
das
outsb
xorl
sbb
mov
or
or
sub
ja
fstps
scas
add
xchg
add
inc
mov
jb
mov
dec
imulb
jmp
push
add
lcall
mov
or
test
pop
xor
mov
mov
jns
test
in
test
call
sbb
shlb
mov
inc
clc
pop
jo
into
jo
rol
ljmp
mov
add
stc
loopne
sbb
jmp
push
mov
mov
add
jmp
bound
inc
jne
adc
sahf
shl
aas
lret
notb
pop
clc
out
test
popa
andl
dec
pusha
fdivrs
push
add
mov
mov
add
or
ja
repnz
out
divl
leave
dec
add
iret
cmp
cmp
out
push
jno
loope
add
imul
mov
out
fnop
pop
jmp
roll
mov
cmpsl
insl
adc
sbb
lock
lock
push
stc
pop
sub
icebp
jne
xor
stc
mov
xorl
fwait
neg
push
xchg
push
lahf
sub
sbbl
push
pop
mov
add
push
or
pop
test
js
cmp
xchg
or
adc
rcl
cmp
xor
mov
push
mov
jne
lret
in
loopne
pusha
clc
or
rclb
sub
mov
out
ljmp
jnp
scas
or
insb
cwtl
xor
scas
sbb
outsl
js
inc
pusha
pop
or
ljmp
push
push
outsb
adc
jle
adc
jp
add
adc
mov
or
adc
inc
dec
out
xor
or
jns
or
test
mov
push
dec
or
mov
push
sbb
cmpsb
push
xchg
lods
inc
add
dec
xchg
sub
push
push
movsl
push
mov
or
xor
int
jo
addr16
rcrb
push
and
mov
fcoml
or
movsl
push
jecxz
ss
and
jo
mov
neg
movsb
notl
xchg
and
adc
sub
sbb
lods
shr
sub
mov
je
inc
mov
sbb
pusha
insb
insb
push
push
les
arpl
pop
adc
and
push
dec
testl
je
cmp
je
mulb
inc
or
cmp
andb
iret
je
xor
cmp
je
push
push
push
lock
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
fcoml
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
adc
rorl
jmp
out
lods
in
movsl
push
push
adc
lods
adc
sbb
ret
stc
sbb
rcr
xor
push
mov
ja
dec
ljmp
add
push
mov
adc
dec
mov
cmpps
mov
inc
mov
jb
aas
or
push
leave
inc
cli
dec
popf
andl
push
mov
pop
jl
testb
ljmp
pusha
and
push
cmp
pop
add
xlat
test
je
test
ljmp
sbb
or
movsl
jnp
and
jle
mov
jle
adc
push
sbb
and
pop
insb
jns
insb
add
push
jge
jne
movsl
lods
sysret
add
or
and
sbb
mov
cs
nop
call
push
jae
adc
jbe
or
push
xor
xchg
push
cld
test
fsubs
cltd
jb
xchg
data16
xlat
stos
or
xchg
mov
cwtl
ficoms
pop
enter
lods
sub
mov
test
sub
pop
loopne
je
sbb
rcll
jle
cmp
out
out
loopne
push
and
dec
push
lea
push
pop
cwtl
push
adc
dec
loope
rolb
lods
sub
dec
push
or
add
and
add
xchg
push
mov
adc
pushf
sub
xchg
jecxz
mull
or
and
roll
out
ljmp
in
ret
cmp
fs
push
jmp
rolb
adc
cmpsb
decb
imul
sbb
adc
ja
in
jmp
pusha
into
inc
std
mov
mov
inc
push
pop
cmp
inc
loopne
movsb
je
push
test
dec
sbb
xor
jmp
jmp
sbb
pop
loopne
or
add
mov
add
lock
sbb
jg
adc
sahf
ljmp
fisubs
mov
xchg
inc
sbb
adc
ss
gs
pop
leave
pop
xlat
jo
inc
ljmp
inc
subb
sub
fmull
ljmp
and
fadds
cmp
fistl
into
and
fsub
adc
lds
in
cmp
ds
ja
sbb
or
inc
verr
sbb
dec
pusha
xor
cmp
cmp
mov
sbb
pop
and
loope
mov
in
xchg
cmp
push
movb
mov
add
sub
lret
inc
fnsave
test
push
mov
sti
popa
mov
out
fmulp
xor
sub
mov
jo
lret
arpl
pop
and
cmc
add
ret
mov
inc
mov
push
inc
mov
xchg
stc
sub
je
pop
or
mov
loopne
sbb
andl
es
out
daa
lock
jo
push
cli
loop
mov
push
sahf
sahf
cmp
push
xchg
popa
adc
lcall
movsb
and
mov
stos
sub
jecxz
das
inc
cmp
push
popa
inc
shr
push
add
aaa
jg
cmp
aas
mov
mov
movzwl
stos
mov
jne
dec
sarl
add
in
imul
fs
and
je
or
push
leave
or
ljmp
adc
push
lea
push
cli
add
push
push
fwait
xor
mov
push
cs
add
push
dec
imul
fdivs
xchg
mov
inc
lock
xor
jp
push
push
aaa
xchg
aas
adc
mov
imul
stos
test
add
cmp
inc
dec
or
js
imul
imul
test
cmp
adcb
and
pavgb
dec
nop
xchg
jmp
movsb
pusha
sbb
push
cmp
movsl
mov
push
push
xor
adc
repz
xor
jp
pushw
sbb
push
pop
push
pop
sub
loopne
or
adc
mov
sub
adc
jae
or
xchg
fidivrs
pop
cmp
rdmsr
rclb
stc
dec
stos
lods
pop
gs
mov
ja
push
fs
call
and
or
and
inc
adc
push
mov
test
repnz
mov
fisubs
std
xor
adc
xor
push
fdivrl
insb
cld
or
jo
push
sbb
and
mov
xchg
fimuls
test
push
mov
add
push
lret
pop
add
push
and
outsw
lea
mov
xchg
sub
sub
and
pop
pinsrw
neg
sbb
xchg
push
cmp
ret
push
or
jo
les
or
rolb
jp
add
les
inc
cmp
xor
push
xor
adc
mov
jbe
mov
daa
sub
dec
inc
lcall
insb
xor
cltd
inc
int3
sahf
pop
inc
xchg
mov
jp
andl
jne
jno
xor
xor
ror
ret
or
fidivl
repnz
lods
fstpl
push
pop
stos
aad
dec
xchg
cwtl
loop
lea
and
mov
sbb
cmc
ss
testb
cmp
jmp
adc
das
dec
xor
or
sbb
pop
pop
pop
pop
mov
testb
cmp
jle
push
add
and
mov
jl
inc
inc
lock
andl
adc
pop
lock
and
push
add
xor
outsb
inc
or
clc
cld
pop
mov
cmp
loop
and
and
push
xchg
dec
outsb
mov
adc
adc
push
xor
add
xchg
dec
xorl
ret
pop
lds
and
popa
fs
jecxz
push
sub
add
pop
or
loope
pusha
dec
or
jl
imul
sbb
cmp
test
lcall
xchg
dec
rorl
pop
push
in
fiadds
pop
add
cmp
insb
dec
dec
mov
adc
push
inc
or
call
push
pop
or
xchg
xchg
arpl
xor
xor
enter
jecxz
push
cwtl
fs
sub
mov
bound
xor
or
mov
je
pop
in
out
xor
add
add
jne
pop
xlat
jmp
mov
xor
add
sbb
ret
testb
and
mov
or
mov
jl
mov
cmp
cmpb
add
or
or
xchg
adc
mov
inc
int3
sbb
sarl
inc
dec
rcrb
push
lock
ss
mov
mov
sbb
mov
lret
mov
mov
pushf
mov
add
addl
cltd
mov
mov
inc
cmp
subb
lea
cltd
xchg
popf
adc
movsl
mov
xor
aaa
add
add
add
xor
aaa
sbb
out
push
push
push
test
fistps
je
outsb
rcl
xor
shrb
dec
dec
aad
filds
cmp
jne
sub
mov
outsb
and
mov
mov
imul
mov
cmp
push
jo
mov
and
add
enter
mov
dec
and
mov
nop
jmp
xor
aam
cltd
mov
xor
into
lods
ret
push
pop
dec
cwtl
shlb
pushf
lcall
adc
aad
stos
adc
mov
mov
fcoms
adc
lock
divl
pop
and
fimuls
stos
fldl
adcb
xchg
mov
sub
dec
repnz
popf
mov
lods
and
mov
push
pusha
lock
lea
push
mov
dec
mov
cltd
negl
movsb
xlat
mov
fisubrl
mov
insl
inc
add
clc
loop
je
mov
jmp
push
cwtl
inc
xlat
add
adcb
pop
pop
lock
enter
or
inc
xlat
or
pushf
xor
sub
addr16
xor
add
outsl
cmp
xchg
pop
mov
xchg
pop
cwtl
stos
sub
test
and
sub
sub
pusha
cmc
test
pushf
test
add
jno
xor
gs
fmulp
mov
adc
and
jge
inc
cmpsb
daa
add
les
add
or
shlb
pop
pop
mov
cwtl
push
adc
xchg
aaa
cmpsb
xlat
xor
adc
clc
sti
xchg
inc
sbb
or
or
mov
aam
std
pop
pop
mov
or
inc
adc
mov
ljmp
cmp
inc
je
mov
pop
and
pop
clc
xor
cmp
test
test
xlat
sub
push
fidivl
sbb
mov
aaa
pop
mov
or
jae
cmp
daa
loopne
jle
mov
xchg
add
aas
add
mov
sub
orl
jne
inc
xor
xchg
test
data16
mull
jmp
jb
outsb
mov
or
mov
xor
add
imul
adc
sbb
mov
jp
clc
or
jge
adc
inc
enter
negl
clc
cmp
cmp
sub
jae
loope
adc
ret
loopne
lea
dec
jae
fcomps
mov
je
enter
add
js
jo
jbe
jp
mov
add
and
aas
pshufw
inc
lods
jbe
call
mov
cmpl
fistl
or
push
dec
add
in
jge
jno
aas
rolb
adc
inc
insb
shr
inc
add
mov
push
fimuls
or
sbbb
or
xor
mov
pusha
div
outsl
shrl
sbb
mov
fimull
adc
arpl
mov
out
scas
leave
loopne
js
jb
sbb
xor
movsl
movsl
mov
xchg
push
pop
add
sbb
inc
lea
je
push
lock
clc
sub
push
inc
hlt
movsl
pop
xor
xchg
jne
sub
negl
add
mov
sbb
jnp
jge
mov
je
mov
or
xchg
outsb
cmp
xor
push
mov
adc
mov
sbb
push
shll
orb
rclb
inc
cmpsb
xlat
jbe
sub
add
xlat
or
out
adcl
adc
jbe
in
pop
jmp
sbb
sbb
movsl
testl
pop
inc
sbb
enter
enter
call
mov
mov
jg
inc
add
add
inc
jne
cs
push
sub
je
add
loopne
push
pop
pop
dec
sub
orb
push
adc
sub
add
and
int3
add
push
mov
pop
jne
inc
ljmp
clc
subb
or
mov
mov
sub
xor
inc
aaa
jbe
icebp
pop
push
mov
rol
sub
or
cmp
jbe
and
add
xchg
jg
pop
fiadds
sub
push
jo
dec
rorb
in
pop
or
pop
or
mov
jo
addr16
mov
inc
stc
sbb
mov
pop
mov
bound
adc
sub
dec
adc
add
pcmpeqd
jle
adc
push
jno
mov
push
mov
mov
loope
jo
dec
addl
mov
test
dec
loop
xor
movsl
xchg
add
inc
adc
and
gs
lea
push
cmp
push
push
jns
dec
inc
push
sarb
push
push
push
adc
mov
push
push
pusha
and
popf
pop
adc
and
fs
adc
or
std
lea
jg
or
mov
adc
jnp
pop
movsb
sub
sbb
lcall
pop
xor
movsb
stos
or
loopne
pop
testl
ljmp
push
mov
or
add
mov
dec
or
dec
or
lcall
cmp
or
test
mov
push
cmpsb
sbb
or
fisubrs
jmp
or
dec
dec
mov
and
jo
push
movsb
ss
into
addb
movsl
sarl
nop
push
pushf
popf
add
bswap
xorl
cltd
shl
inc
adc
testl
pusha
add
aad
and
mov
jb
and
adc
imul
and
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
lret
aaa
rcrb
jae
push
push
push
cwtl
fcompl
mov
jl
movl
xor
push
push
aam
imul
aas
add
push
fmuls
dec
in
shlb
pop
fildl
xchg
push
in
mov
sbb
dec
push
pop
inc
xlat
jecxz
sbb
push
test
scas
pop
and
testl
notl
lret
xor
movb
adcb
pop
push
shrb
and
sbb
xchg
loopne
xor
mov
popw
dec
pop
lods
push
pop
fimull
ljmp
add
and
sub
repnz
jnp
popl
add
mov
loope
add
sub
xor
adc
mov
dec
xchg
sbb
mov
or
sahf
aam
sub
adc
andl
mov
in
lcall
push
xor
push
mov
loopne
inc
insl
rolb
in
pop
and
add
fisubs
jo
cld
push
xorl
dec
pop
add
or
mov
dec
add
ret
divb
xor
lods
les
pop
scas
test
dec
sub
pop
jl
adcb
adc
jecxz
stos
notl
dec
dec
pop
andl
out
ret
outsl
fdiv
mov
cmp
ja
je
or
je
or
sub
sub
mov
scas
cmp
or
jno
adc
xchg
or
add
jnp
js
jne
lcall
ror
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
cmpsb
dec
ss
inc
mov
cs
sbb
jne
dec
imul
mov
shr
jno
out
fdivrs
adc
add
ljmp
and
xchg
test
rorl
in
mov
mov
je
shlb
push
mov
aas
adc
jmp
daa
cmovb
test
shrb
push
rolb
test
add
lret
add
rorb
mov
aaa
es
add
fwait
or
jp
cmpl
movsb
add
dec
xor
adc
add
nop
add
xor
xor
fsubrs
xchg
lds
shll
or
push
adc
inc
inc
lcall
adc
mov
aas
repz
push
inc
into
dec
dec
push
cmpsl
test
or
clc
cmpsl
test
dec
sbb
add
int3
sub
fisubs
lea
and
pop
stos
and
lods
aam
adcl
xor
jp
rcrl
shr
push
push
pusha
shrl
fistps
xor
adc
fdivrl
test
add
cmpsl
int
divl
add
push
mov
sub
or
jg
mov
inc
push
inc
push
push
push
xor
ja
loope
sub
test
mov
push
call
int3
movb
sbb
push
aaa
loopne
test
lods
xchg
inc
cmp
fcomp
repnz
leave
inc
clc
xor
push
push
les
or
lcall
sbb
sbb
jmp
inc
shlb
add
fidivs
pop
in
sti
jo
mov
insb
dec
pop
movsb
imul
or
scas
pushf
and
sbb
nop
out
push
dec
mov
adc
inc
pop
es
jecxz
adc
enter
xchg
and
ds
cmpsb
mov
sbb
ret
imul
in
leave
add
repz
xor
lret
push
call
sahf
fistl
push
adc
inc
cmc
dec
and
xlat
lods
repz
and
subb
mov
scas
xchg
ljmp
loopne
lods
shlb
in
inc
lcall
fsub
add
sub
add
xchg
aam
cmp
cmp
push
cmpsl
leave
xor
test
aad
nop
call
shrb
fistpll
test
xlat
adc
pop
ret
fs
nop
imul
cmp
fdivr
shll
pop
xor
clc
inc
rorb
lods
xor
sbb
xchg
cli
fidivs
adc
adc
pushf
push
adc
das
jmp
jl
cmpl
xchg
jne
adc
pop
js
mov
fisubl
mov
sbb
sbb
inc
sub
jno
in
add
notl
or
mov
adc
dec
jo
inc
add
stc
jb
jae
xor
or
jmp
and
or
or
mov
movsb
mov
sar
push
push
mov
dec
push
hlt
enter
jb
push
popa
dec
mov
mov
sub
mov
out
push
mov
les
out
mov
add
enter
jnp
in
adc
inc
push
jne
add
adc
faddp
or
jecxz
addr16
push
lahf
dec
in
sub
xor
sub
shlb
mov
cwtl
mov
and
scas
fcoms
sbb
sub
sub
daa
subb
mov
adc
mov
mov
dec
or
out
aaa
sub
test
jnp
push
nop
pop
in
dec
movl
jns
jle
or
mov
add
adc
sub
sbb
push
and
cmp
aas
xor
scas
xor
xchg
add
mov
ficoms
mov
inc
xchg
sub
push
out
mov
or
pop
js
push
aas
xor
xor
cld
jge
sbb
mov
sub
into
add
incl
in
add
cltd
test
or
dec
lods
xor
aad
xor
push
sarb
ret
sahf
inc
push
fcmovnb
dec
and
sbb
dec
xor
les
sbb
sbb
adc
push
sbb
daa
dec
dec
or
sbb
sbb
orb
testb
popa
jno
test
cwtl
popa
shrl
push
xor
xor
xchg
and
mov
adc
mov
std
push
jecxz
inc
add
push
push
pop
mov
iret
sbb
in
push
cwtl
pop
mov
in
mov
rcl
xor
jl
inc
imull
in
mov
loopne
and
mov
xchg
jl
mov
subl
adc
add
cmp
add
jg
mov
fildl
cmp
sbb
xchg
cli
or
pop
jg
sti
mov
pminsw
sub
js
cmp
and
aas
sub
jg
jnp
mov
je
push
sbb
adc
adc
lock
cmpsl
lock
jle
jne
adc
movsb
dec
sbb
inc
adc
mov
les
and
sbb
mov
pop
cmp
sbb
dec
test
mov
push
push
jl
mov
cmpb
jae
cmp
cs
jge
mov
mov
push
frstor
loope
sbb
xchg
inc
mov
xor
cmpsl
sbb
mov
out
in
mov
push
jmp
imul
dec
adc
and
push
xchg
add
push
adc
pop
mov
or
es
push
cmpsb
sarb
jo
movsl
les
jnp
xlat
dec
jp
mov
mov
addr16
adc
mov
mov
sbb
push
push
inc
dec
std
add
imul
int
sbb
data16
mov
jb
in
cmp
inc
jl
out
jl
dec
mov
aad
sbb
xor
sbb
test
add
cmpsb
mov
rorl
add
inc
pop
or
lds
mov
call
je
into
hlt
je
mov
or
and
xor
xor
xchg
mov
mov
sbb
shll
sub
add
bound
fwait
add
je
cmp
je
aam
add
push
mov
loope
add
add
imul
in
mov
xchg
dec
add
mov
and
add
mov
fisubl
dec
dec
hlt
add
pop
je
or
ja
je
cmp
fidivl
mov
ss
jle
mov
inc
stos
rclb
out
and
cld
rol
sub
or
pop
cmpsb
insl
mov
sbb
dec
sbb
xorl
adc
or
sbb
push
mov
add
cmc
mov
je
jo
and
sub
lods
das
fs
inc
push
add
outsl
push
add
jle
jmp
push
sub
adc
aas
lea
pusha
pop
inc
push
push
add
or
add
xchg
outsb
push
cs
in
mov
or
mov
adc
enter
pop
mov
push
and
cmp
addr16
xor
add
fsubrs
and
clc
ds
mov
xor
add
sbb
jo
scas
mov
or
je
dec
pusha
and
repz
int3
xor
imul
in
pusha
inc
pop
xchg
and
and
sbb
test
and
push
sahf
xor
cmc
sub
jl
add
or
or
inc
mov
iret
inc
pop
push
mov
xor
mov
dec
sbb
ja
mov
je
in
mov
sub
xor
sbb
adcb
adc
xor
sub
xor
push
jb,pt
sbb
cmp
push
push
jns
mov
push
sahf
pop
cmp
push
ss
xchg
inc
ret
inc
xchg
nop
insb
push
jns
push
mov
dec
inc
xchg
or
shrl
or
xchg
lret
dec
pop
cmp
mov
nop
lods
cmp
pop
mov
add
test
sub
call
push
add
mov
xor
pop
sbb
pushf
ljmp
mov
cmp
dec
mov
mov
movsl
in
orb
mov
call
pcmpeqw
xchg
or
fcoml
jl
je
mov
push
jecxz
pop
adc
cmp
or
sbbb
or
pop
insb
and
xchg
sbbb
subb
adc
popf
mov
add
popa
mov
icebp
mov
adc
loope
xlat
mov
imul
rolb
shrb
movsl
adc
or
pop
sbb
push
add
add
inc
or
rcr
mov
das
jmp
push
in
xchg
test
rclb
rorb
xor
push
xor
mov
insb
cld
sbb
inc
or
add
and
pop
repnz
add
pop
cli
push
leave
push
jl
cmp
jae
aad
dec
cli
dec
mov
push
shl
add
push
jne
jg
and
pusha
push
lret
pop
dec
cmp
jp
test
adc
stos
insb
popa
call
push
sarl
add
inc
jmp
xchg
in
fs
xor
shl
loopne
pop
push
pop
add
and
inc
add
and
adcl
sahf
sarl
ds
movsb
or
rorl
sub
enter
sahf
or
jge
mov
or
js
shl
adc
cmp
xchg
shld
rcll
les
mov
add
pop
push
sbb
stos
test
fcomi
mov
shrb
test
loopne
or
or
stos
mov
test
sub
leave
and
fsubl
mov
dec
loopne
push
add
test
decl
imul
pop
push
mov
push
sbb
int3
sub
cmpsl
icebp
jo
int3
adc
fldl
sbb
call
mov
push
les
imul
sub
sub
mov
je
insl
pop
mov
xor
mov
jmp
push
scas
and
sub
fdivl
fcoml
mov
shlb
aam
das
dec
cmc
xchg
lahf
pmaxub
stos
or
imul
adc
out
stos
xchg
or
jmp
loope
lock
jns
mov
jge
insb
dec
lods
lahf
ret
adc
mov
mov
xor
inc
and
mov
mov
push
cmp
jbe
shll
loopne
lcall
or
neg
lret
push
jl
add
nop
push
xor
imul
pop
sbb
jne
xchg
lock
lock
add
bound
inc
push
inc
dec
mov
test
xchg
xchg
ljmp
add
and
add
xchg
push
push
or
inc
stc
test
xchg
and
dec
dec
stc
add
test
push
inc
push
dec
sarl
jo
add
mov
cmp
push
or
lock
push
and
push
aaa
xor
add
aaa
es
leave
inc
scas
mov
pop
cmpsl
mov
adc
in
bound
push
push
lea
in
push
je
pop
dec
jp
test
sub
add
rorb
in
addl
xchg
loope
jne
or
or
and
in
sub
mov
push
cmp
insb
push
jb
inc
xor
out
or
popf
push
aaa
cmp
push
mov
das
add
add
mov
or
je
inc
call
jne
lret
and
ret
push
jnp
sub
and
push
bound
mov
testl
inc
adc
loope
repnz
pushf
lret
push
jmp
inc
inc
adcl
mov
loop
mov
ret
mov
push
push
jmp
cmp
mov
iret
fdivs
andl
and
push
mov
pop
scas
xchg
pusha
shlb
add
lahf
or
or
xor
push
roll
mov
pop
xchg
lea
dec
lea
scas
xor
shlb
inc
stos
sub
sub
push
adc
add
mov
pusha
mov
push
xor
add
cmp
xchg
pop
adc
sub
cwtl
add
mov
xchg
add
xor
xchg
add
adc
pop
test
dec
adc
pop
sub
pop
ret
gs
imul
rcrb
sub
ficomps
pop
mov
xor
movsb
jne
sub
shrb
dec
add
cmp
push
stc
mov
mov
or
pop
or
fmull
aam
push
mov
push
jb
sbb
iret
cld
adc
jge
cmp
fnstenv
imul
dec
faddl
loopne
mov
js
dec
add
dec
inc
cmp
dec
lods
cmpsb
mov
adc
xchg
or
push
push
mov
mov
pop
sbb
pushf
dec
dec
add
sbb
lret
into
xor
pop
mov
shlb
xchg
dec
lock
mov
sub
adc
jo
dec
das
cmpl
mov
ret
orb
adc
pushl
inc
imul
jb
cmp
or
lock
or
les
push
xrelease
xor
mov
stos
sbb
and
in
sbb
cmp
cmp
lods
fadds
push
loopne
jne
lea
or
jo
sbb
syscall
mov
sbb
inc
pusha
mov
pop
les
adc
fldt
push
fbstp
mov
xor
clc
adc
fmuls
lfs
hlt
ja
push
outsb
push
clc
testb
out
sarl
pop
sub
ljmp
mov
lock
call
sarl
cmp
insb
add
xchg
pop
roll
rcr
fidivs
sub
lea
ret
push
mov
pop
je
pushw
inc
cmp
jb
xchg
scas
adcl
jb
aaa
mov
mov
xor
lods
push
jo
pop
mov
cs
imulb
imul
pusha
shlb
dec
add
pop
push
clc
cmpsl
mov
imulb
gs
test
xor
je
mov
jne
incl
or
popf
xchg
js
sbb
sub
push
leave
fimull
push
je
incb
popf
dec
jecxz
sub
dec
jno
loope
push
pop
cltd
lods
bound
test
pop
jo
mov
cmp
adc
sarb
and
mov
sub
mov
insl
sbb
insb
jo
leave
mov
ja
jmp
add
jmp
xchg
xor
cmp
sbb
out
add
lret
mov
shll
push
pusha
pushf
fcmovb
xor
jge
sbb
cwtl
mov
imul
fbld
sub
movsb
sub
xor
lret
lret
lret
xor
cmp
lret
lret
inc
rorb
xor
arpl
or
lret
fdivrs
pop
add
movl
jo
sbb
stc
test
sub
cltd
test
inc
add
add
and
decl
jno
mov
mov
stos
or
add
adc
ficoms
js
insb
mov
xor
dec
rcrb
ljmp
adc
push
insb
iret
mov
push
mov
ret
inc
cmp
neg
sub
icebp
pop
or
sarb
enter
insl
inc
push
fldl
mov
nop
xor
les
push
pop
mov
mov
mov
mov
xor
lret
filds
jmp
xchg
daa
dec
or
mov
shlb
adc
stc
test
rolb
je
rorl
lret
inc
ja
cmp
cmp
xchg
add
pushf
mov
add
pushf
pusha
or
mov
dec
sti
xor
adc
adc
stos
and
add
mov
mov
sub
fscale
rorb
daa
pop
cmp
xor
jge
sub
cmp
insb
mov
adc
sti
pop
fisubl
loop
rep
bound
jbe
in
sub
jmp
lock
push
fisubrs
cmp
jae
jmp
push
cmp
sbb
or
fmuls
bound
and
ss
rclb
repnz
and
sub
lock
push
and
push
mov
ret
shl
clc
dec
adc
push
sub
inc
fcmovnbe
dec
loope
push
test
fcoml
fwait
push
data16
sub
adc
mov
xchg
testb
sub
cmpsb
inc
xchg
adc
mov
xchg
sbb
pusha
sbb
push
or
mov
pop
sbb
sub
rolb
add
push
adc
push
lock
and
push
adc
hlt
add
mov
pusha
fadds
mov
and
adc
rorl
mov
jl
out
push
dec
push
inc
rcl
and
dec
add
stos
cld
sub
cmp
mov
ds
shrb
mov
jnp
push
inc
mov
loope
mov
inc
rol
mov
test
or
xor
loop
loopne
pop
sbb
push
push
push
hlt
cwtl
movsb
nopl
rcll
sbb
pop
fstl
mov
sub
jp
fdivrs
and
rorb
out
gs
orb
cmp
fstl
dec
xchg
xchg
xchg
push
fsubs
scas
or
icebp
sbb
jp
adc
fcompl
ljmp
mov
pop
dec
inc
add
test
dec
rclb
adc
pop
imul
xlat
mov
adc
jmp
sub
and
add
pop
sahf
add
push
fwait
cmp
sbb
js
dec
js
aad
push
sbb
and
sarb
sub
daa
sub
loopne
mov
lods
sbb
or
push
sbb
inc
inc
push
jge
sbb
push
and
or
add
jno
xor
test
aad
mov
jge
je
mov
test
in
inc
dec
testl
inc
ds
pusha
hlt
outsb
ret
or
push
scas
and
pushf
stos
inc
jbe
icebp
cmp
xor
sbb
ret
inc
negl
aaa
mov
iret
push
adc
or
mov
sbb
adc
jg
push
mov
xor
inc
mov
xchg
in
test
pop
mov
loopne
sub
inc
mov
pop
mov
jle
or
mov
lods
xchg
inc
sbb
adc
inc
dec
add
adc
add
call
cmp
mov
dec
je
xchg
insb
xor
cmp
testb
dec
leave
xchg
stos
pop
sbb
mov
rorb
add
pushf
mov
sbb
pop
dec
sub
adc
shll
sahf
roll
push
pop
cmp
pop
add
mov
dec
adc
sub
or
cmpsl
verw
outsb
cmp
je
mov
pusha
outsl
jg
xor
out
adc
clc
add
cmp
jecxz
clc
jbe
or
add
push
or
dec
inc
mov
push
xchg
pusha
in
inc
ret
pop
pusha
gs
sub
jecxz
out
add
outsl
test
hlt
repz
mov
adc
or
jno
push
test
adc
outsl
rorb
mov
add
lock
movb
lea
mov
fdivp
cmp
movsl
stc
sub
fcmovb
leave
push
xor
mov
sbb
jp
xor
adc
cmp
in
mov
jns
popa
and
lea
and
pop
movsl
imul
inc
testb
mov
fimuls
fstp
pop
sbb
xor
push
sti
orl
sbb
dec
pop
iret
pop
jb
loope
ret
sbb
ret
mov
push
xchg
sbb
mov
xchg
adc
xor
pop
test
cmc
out
or
psrlw
and
add
pop
in
push
rcll
mov
jmp
dec
ss
arpl
push
in
sbb
dec
add
jne
sub
dec
incb
bound
cmp
lds
aad
xchg
call
jb
pushl
mov
lock
loopne
or
lock
clc
jae
adc
and
mov
sbb
adc
mov
cli
mov
lahf
pop
decb
cmp
movlhps
into
iret
inc
and
sub
mov
sbb
leave
ficoml
push
sub
rorl
push
mov
pop
xchg
lcall
adc
gs
and
cmpsl
fsts
push
mov
jno
nop
add
outsl
cmp
sbbl
sbb
xchg
out
mov
add
mov
nop
arpl
cmp
in
dec
in
mov
cmp
fcomp
daa
lret
mov
cmp
fmuls
ja
fldt
mov
arpl
ja
adc
addr16
nop
das
and
jmp
push
sbb
jmp
cmp
ss
adc
and
jo
call
daa
jecxz
jb
fldl
les
loopne
inc
add
or
arpl
loopne
adc
xorl
pop
repnz
and
cwtl
out
into
xchg
pop
jecxz
test
push
adc
inc
push
nop
lods
mov
add
aam
pusha
sbb
sbb
xchg
push
sub
cltd
pop
pop
and
or
and
pop
pop
push
inc
push
nop
inc
xor
nop
inc
push
nop
dec
and
inc
push
and
and
movsb
es
inc
push
nop
mov
faddl
enter
or
sub
pop
enter
lock
cs
nop
sub
dec
mov
pushf
sbb
push
push
xor
mov
in
addr16
scas
and
shlb
xor
or
xor
xor
sub
mov
mov
xchg
cs
lea
push
bound
mov
nop
je
cld
or
lahf
pusha
push
adc
add
scas
jo
hlt
gs
repnz
sbb
pop
inc
add
movsl
sbb
adc
pop
sbb
mov
xor
jnp
lret
sbb
fwait
sub
add
adc
inc
adc
xor
int3
js
add
add
adc
outsl
jb
push
jne
pop
sahf
lcall
adc
lea
add
jnp
mov
adc
sahf
lods
dec
push
lock
pop
mov
pop
pop
pop
cli
lret
inc
mov
xor
adc
adc
and
stos
xchg
movsb
cmc
xchg
cli
sub
sbbb
loop
sbb
cmp
sbb
dec
jl
test
pop
fwait
push
imul
and
sbbb
mov
sbb
sbb
mov
push
mov
orl
adc
jl
push
popa
andl
push
mov
cli
js
ds
fstpl
sbbl
sub
pushf
xor
loopne
push
push
and
data16
ja
aaa
inc
dec
aas
imul
sarb
mov
or
add
xchg
mov
xor
pop
lock
push
add
and
lret
sub
add
mov
rclb
jecxz
pusha
xor
sub
in
les
add
mov
or
sub
jl
xchg
sarl
push
mov
or
dec
pop
sbb
adc
cmp
jne
mov
mov
je
push
scas
andb
add
sti
sbb
inc
sbb
jnp
or
je
mov
push
rorb
pop
mov
outsl
and
imull
mov
insl
insb
bound
loope
jns
loopne
in
mov
dec
push
pushf
and
or
or
mov
add
shl
dec
cmp
mov
push
mov
sbb
mov
dec
xchg
pop
lock
hlt
mov
push
dec
cmp
jg
insb
in
jno
js
aad
xchg
pop
fdivrs
jle
sbb
push
pop
add
add
cwtl
and
mov
mov
mov
dec
mov
add
inc
and
push
or
pop
sbb
enter
dec
roll
sbb
inc
cmp
cmp
inc
xlat
or
movsb
addl
pop
inc
bound
mov
mov
aaa
insb
jne
or
fcmovnb
xor
fwait
clts
and
arpl
and
adc
sbb
or
das
or
mov
mov
or
and
or
iret
xchg
dec
mov
repnz
or
jo
lret
pop
or
mov
push
push
mov
mov
and
nop
pusha
pop
pushf
jge
mov
call
jp
test
push
mov
dec
jmp
mov
jb
outsb
xchg
mov
aam
add
movsb
faddl
js
push
push
push
cmp
cmp
or
int
or
frstor
mov
sbb
push
or
lahf
xchg
or
push
inc
ds
jge
lock
arpl
gs
jge
adc
push
fisubrs
mov
imul
sbb
out
popa
lock
xchg
cmc
sbb
and
xor
roll
add
and
aaa
int3
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
mov
insl
mov
mov
inc
pop
mov
sti
in
aaa
clc
cmp
jge
mov
pop
and
cmp
jl
or
iret
cmp
je
cmp
je
jne
pop
sub
push
and
sub
test
sbb
test
jge
sub
sub
add
fadd
push
loopne
add
adc
xchg
mov
ljmp
ja
mov
cmp
jl
add
mov
mov
lock
cwtl
jl
pushf
inc
or
in
ret
mov
fcoms
pushl
vandpd
adc
ror
adc
mov
inc
jo
dec
and
rorb
xchg
out
mov
sub
outsl
push
pop
or
mov
cmpsl
cmpsl
shlb
sub
mov
inc
es
or
push
cmpb
xor
sub
mov
loopne
mov
fimuls
in
dec
das
mov
mov
mov
sub
push
push
pop
pop
add
ss
pop
or
sbbl
sbb
shll
jge
call
pusha
xor
mov
dec
push
mov
push
je
cmpsb
lea
push
test
mov
cmp
ret
bound
push
xor
mov
dec
pusha
jo
mov
push
push
xchg
fcomps
ss
pushf
and
notb
push
enter
call
fwait
inc
nop
lret
popa
insl
jns
add
dec
popa
or
push
pop
pop
cltd
shl
fs
test
fdiv
push
js
and
cmp
cmc
xor
jmp
sub
outsb
addb
xor
enter
std
xor
cmp
adc
ljmp
push
xor
rcr
pop
movsl
rcl
inc
addb
test
sub
jne
jo
inc
gs
and
add
aas
pop
rcll
mov
dec
sahf
push
popa
cmp
xor
nop/reserved
push
add
inc
pop
xchg
jno
cmpsb
pop
and
ret
fadds
jne
cmp
and
out
pushf
dec
inc
sub
sbb
imul
or
nop
pop
rclb
ret
sbbb
xchg
icebp
cmp
inc
bound
and
aaa
inc
aam
fs
sbb
test
inc
inc
outsl
inc
loopne
mov
les
mov
lds
and
inc
add
inc
inc
adc
and
outsl
cmovb
movsb
ret
jmp
inc
and
ficompl
and
or
sbb
pop
fwait
adc
jl
popf
stc
fs
jmp
in
lock
fucomi
mov
gs
jp
cli
lea
adcl
cmpsb
adc
dec
dec
or
cmp
xor
or
inc
mov
cld
or
push
ss
inc
inc
mov
je
dec
mov
pop
xchg
or
or
dec
sub
and
insl
lcall
sbb
loopne
adc
mov
pop
in
movsb
sahf
xorl
sbb
popa
or
jp
cmc
inc
jb
in
mov
or
mov
clc
and
imul
daa
je
cmp
dec
add
push
push
movb
pop
mov
push
push
orb
test
jne
mov
adc
mov
xchg
xor
xor
mov
test
lods
sbb
dec
add
and
aaa
lock
sub
xor
jmp
jle
xor
dec
insb
mov
jne
push
outsb
sub
push
repnz
jmp
and
cmp
insb
jne
xchg
and
cltd
mov
icebp
jns
mov
inc
mov
sbb
fdivrs
add
icebp
and
inc
dec
fisttps
sub
movsl
das
inc
pop
push
mov
xor
pushf
mov
mov
lock
push
and
xchg
popf
sub
popa
mov
jnp
cmp
insl
pop
sbb
cwtl
sbb
dec
insl
push
nop
fldl
mov
pushf
test
adc
mov
adc
jge
iret
mov
shr
clc
inc
inc
or
jo
loope
sar
inc
lea
add
xor
push
mov
jb
repz
sbb
js
rcl
jmp
sbb
sbb
inc
mov
fmull
test
sti
push
sub
adc
movsl
int3
roll
inc
or
rorl
int
jg
jne
clc
sarb
push
hlt
jg
mov
lret
inc
aad
es
add
mov
add
shr
loope
push
mov
push
and
pop
dec
lcall
loop
xor
popa
std
int3
lret
sub
in
stc
sub
pop
mov
iret
lea
mov
fiaddl
add
jg
orb
push
push
int3
sub
jns
repz
adc
shrl
or
mov
push
adc
call
js
mov
mov
or
fists
cmp
scas
dec
push
push
inc
sbb
xor
cmp
mov
data16
dec
sbb
push
sbb
xchg
in
ljmp
sahf
repnz
pop
test
nop
push
mov
cmp
in
imull
dec
add
jb
sbb
push
and
sbb
cwtl
popa
adc
outsb
pop
or
jmp
bound
jmp
and
mov
cli
xchg
xor
mov
push
pop
xchg
add
adcb
or
xor
and
jmp
or
mov
ss
lea
push
or
movsb
and
or
pop
test
push
mov
mov
fldl
out
jmp
ljmp
add
clc
cs
push
pushl
jae
xchg
out
xchg
and
sbb
add
sbb
or
fstl
jo
divb
or
inc
test
sub
adc
decl
dec
xchg
addb
dec
leave
xor
in
test
fsub
faddp
movl
testl
sub
or
cmc
popf
and
cld
loopne
push
pop
lods
movsb
push
fdivrs
roll
je
fldl
xor
sbb
dec
in
cld
mov
shll
cmp
adc
jne
iret
iret
repz
divb
or
jne
or
cmp
cli
jne
or
jg
fwait
add
fldz
lret
andl
sbb
roll
add
cmp
pop
cmp
dec
flds
pop
jmp
add
jnp
jnp
out
mov
subl
mov
pop
pusha
fstpt
lret
lea
fisttpll
sub
fsubs
into
mov
xchg
pop
loop
mov
xlat
dec
loopne
test
sub
aas
pushf
sub
lea
and
add
sbb
sahf
dec
por
jb
lea
movsl
push
jnp
insl
add
and
sbb
cmc
sbb
movsb
dec
inc
push
add
cmp
je
insb
arpl
add
aam
rcrb
or
pop
mov
loop
std
push
push
les
mov
movsl
pmaxub
out
fmull
fcmovbe
lcall
clc
sub
xor
sbbb
fldt
push
dec
push
mov
stc
or
push
cmp
cvtdq2ps
push
fcompl
jb
push
jmp
adc
cmpb
xor
dec
aas
push
jbe
cmp
loopne
push
jo
ficoms
stos
or
pop
xor
jecxz
mov
ret
push
mov
pop
push
cli
imul
pop
je
cmp
or
dec
add
inc
fidivs
mov
js
mov
add
xor
pop
repnz
add
sbb
and
mov
add
and
add
ret
add
adc
mov
adcb
mov
mov
adc
add
or
fwait
and
enter
out
ja
sub
popa
pop
xchg
add
and
cmp
je
or
inc
int3
test
imul
add
lods
cld
fcoml
imul
pushf
sbbl
mov
inc
jno
adc
mov
add
add
fnstsw
lahf
lsl
sbb
xor
adc
nop
enter
je
addl
jns
or
rclb
adc
insb
sbb
pop
ss
ficoms
inc
jo
pop
cltd
popa
inc
loopne
push
add
iret
cmp
clc
xor
in
xchg
mov
pop
push
push
dec
repnz
mov
add
aam
pop
adc
adc
es
mov
mov
add
rorb
mov
flds
dec
xor
je
jle
pop
xor
sub
add
xchg
out
sarb
cld
test
xor
idivb
test
addl
orl
hlt
xor
inc
inc
add
and
mov
out
ret
cli
or
mov
push
pop
aas
cmpb
outsl
xchg
lods
in
test
insl
sub
fcompl
or
mov
aam
add
mov
push
cmp
call
pusha
jg
adc
inc
pop
repnz
push
add
push
cmp
inc
xor
je
les
mov
mov
in
mov
sbb
jl
enter
shlb
inc
xor
stos
inc
and
push
les
loope
cmc
push
mov
call
xchg
or
add
add
add
punpcklbw
mov
aad
cli
rolb
push
or
les
mov
dec
inc
dec
dec
sub
adc
jmp
jmp
sahf
ss
movsl
inc
in
inc
adcb
imul
les
sub
leave
or
sbb
inc
xchg
das
ret
cmp
lods
dec
pop
test
sbb
fmull
pusha
lret
push
mov
sahf
add
setno
or
fisttpl
out
inc
fmull
sub
xchg
mov
cltd
call
stos
xor
add
sub
das
fmuls
add
dec
mov
mov
popf
repz
inc
fstps
sti
fwait
out
loope
fdivs
mov
test
ret
test
xor
hlt
mov
cmp
ss
xchg
mov
push
dec
popf
push
loope
clc
sub
inc
add
sarb
push
jge
sbb
ljmp
loopne
xor
add
sbb
add
mov
pop
jle
push
sub
divl
push
clc
pop
add
stos
mov
cmp
orl
jg
in
in
mov
pushf
add
cld
push
lcall
test
add
bound
popf
cmp
fildll
inc
stos
push
pop
pop
jecxz
addl
mov
sub
xor
mov
rorl
xchg
scas
xchg
insl
fmulp
loope
je,pn
enter
mov
inc
mov
or
dec
sbb
mov
xor
dec
push
lods
adc
or
sub
push
das
add
adc
sarb
aad
adc
push
or
imul
mov
outsb
outsb
bound
dec
lock
sbb
push
rol
test
icebp
push
pusha
enter
xlat
sbb
sub
push
jo
clc
pop
mov
mov
dec
test
sbb
dec
ret
enter
jb
popf
pushf
ret
jno
rclb
insl
js
mov
sahf
xlat
pop
pusha
test
push
and
jmp
xchg
sbb
enter
lret
inc
call
pop
sub
xor
pop
pop
mov
sub
sub
insl
sbb
jmp
mov
xchg
push
jl
test
out
jno
sbb
aam
sbb
or
and
xchg
insl
xor
movsl
shll
sbb
movsl
dec
and
pop
lods
cmp
and
pop
fcoml
cltd
add
xchg
dec
and
aad
aam
lcall
ret
movsl
adcb
std
movsl
bound
pop
lds
or
test
popf
stc
sahf
add
sub
rorb
hlt
fwait
xchg
insl
stos
addb
inc
mov
in
adc
adc
fisubl
pop
in
mov
or
xor
aaa
push
xor
mov
add
popf
sbb
adc
cmp
inc
cmpb
dec
push
sub
lods
mov
mov
aam
nop
ret
pop
inc
std
cmp
inc
aam
xchg
in
adc
lock
cmp
nop
dec
adc
imul
add
mov
xchg
mov
lock
sahf
lods
mov
mov
lret
jbe
ljmp
mov
ret
inc
ret
scas
das
and
sbb
jge
shrl
icebp
jge
push
add
outsb
jle
push
sbb
rolb
xorb
add
mov
dec
ret
ja
lea
fwait
test
ficompl
add
sbb
sbbl
flds
movsl
push
add
add
and
pusha
jecxz
lods
sarb
clc
and
inc
add
mov
daa
shlb
push
mov
xchg
into
addl
sahf
dec
test
ljmp
xor
jbe
adc
out
or
sub
stos
push
and
and
pop
testl
les
push
add
push
loopne
arpl
pop
fs
add
shlb
jg
inc
cwtl
dec
add
ret
dec
dec
dec
stos
inc
push
jl
pop
lods
jp
enter
push
xlat
sbb
push
mov
adc
and
fistpll
sub
sub
aam
xchg
addl
xor
mov
rcrb
pop
outsb
xor
push
push
mov
nop
add
dec
addr16
rolb
add
mov
sub
adc
sahf
icebp
call
add
inc
imul
and
mov
dec
adc
leave
jp
or
shrl
push
mov
lds
or
call
jbe
push
das
cmp
sub
mov
sbbb
outsb
xor
push
push
std
mov
or
xchg
sahf
out
rcrl
and
cltd
mov
cld
cmp
and
cld
adc
adc
inc
jne
scas
lcall
lods
stos
xor
lcall
inc
ret
xor
popa
pusha
les
mov
sbb
scas
sub
inc
pop
mov
lahf
pop
sbb
cli
dec
and
stc
sahf
cmp
and
xor
cmpl
inc
and
aas
inc
xor
mov
jns
loop
and
fsubr
jge,pn
inc
stc
das
add
add
jmp
insb
gs
and
shrl
inc
lea
sbb
in
or
pusha
imul
shrl
jae
pushl
test
inc
ja
aaa
dec
jle
or
cmp
rclb
pop
add
xchg
or
push
add
push
inc
and
cmp
inc
cmpsb
rcrl
or
imul
and
out
xchg
arpl
add
xor
pop
sub
orb
or
sahf
mov
rorb
sub
mov
je
jecxz
adc
inc
xlat
dec
push
loop
add
cmpsl
rclb
mov
push
jnp
mov
pop
add
push
push
xchg
add
sbb
imul
arpl
adc
xchg
mulb
adc
inc
push
cmp
jne
adc
and
js
dec
or
adc
jbe
movsl
and
and
loop
mov
into
push
push
sub
mov
sbb
and
mov
pop
fisubl
lahf
lods
dec
sbb
push
lods
sbb
add
push
aad
lea
ds
add
and
jmp
push
add
pusha
stc
adc
jo
xchg
dec
sub
jno
cltd
sub
pop
icebp
or
sbb
cmpsl
div
movsb
nop
adc
xchg
pop
xor
push
and
loope
xchg
dec
ja
jno
int3
or
nop
dec
fistl
enter
mov
jb
rorl
xchg
xor
roll
loopne
cmc
fs
pop
jmp
cltd
cmp
sub
xchg
pop
add
sub
enter
mov
sub
mov
cmp
cmp
out
add
popa
and
and
jno
cmp
sub
xor
andl
mov
inc
test
adc
mov
or
add
or
mov
adc
sub
sarb
sbb
fstl
pusha
in
in
and
inc
or
fs
mov
stc
xchg
add
pop
xorb
add
mov
inc
mov
ja
inc
lock
add
fadds
adc
mov
push
adc
mov
lods
xchg
pop
jle
flds
mov
lock
sbb
pop
xchg
js
hlt
fdiv
sub
or
jbe
xchg
xor
inc
sbb
in
inc
js
mov
cmp
inc
sahf
nop
jnp
ja
push
mov
push
or
cmp
push
mov
pop
xchg
dec
lcall
mov
xchg
pop
mov
rcr
xor
push
or
jl
mov
les
pop
inc
clc
dec
shll
pop
push
inc
das
outsb
add
or
xor
dec
adc
shrb
adc
push
mov
cmc
lahf
ljmp
jae
fs
sbb
add
inc
js
fiaddl
jmp
in
outsb
rolb
or
scas
adc
sbb
mov
push
jp
cmc
and
inc
faddl
jo
bound
push
jbe
mov
mov
cmp
adc
jmp
shll
cmpsb
mov
imul
sub
inc
dec
test
in
ja
mov
or
mov
mov
cmp
je
fwait
mov
push
and
jecxz
pop
loope
dec
sbb
aad
push
push
std
arpl
scas
cltd
les
std
adc
xchg
sbb
cmp
iret
sti
std
mov
shll
xchg
jmp
imul
or
lds
add
inc
mov
mov
push
jge
push
jno
in
cld
jecxz
cmc
push
cmp
je
cmp
or
sbb
mov
push
push
push
je
dec
das
loopne
dec
or
adc
fbstp
stos
push
lcall
mov
sub
xchg
pop
fwait
mov
push
adc
adc
fisubrl
adc
cmp
xchg
scas
popf
add
std
push
inc
and
or
jbe
adc
cmp
je
testl
sahf
nop
lret
mov
jecxz
out
inc
scas
push
and
adc
nop
pop
mov
sub
cmp
xchg
cmp
data16
std
or
addb
pushf
xchg
or
jl
mov
js
xor
pushf
xchg
jmp
iret
jne
or
pop
mov
clc
inc
and
push
cwtl
int
inc
roll
lret
adc
push
inc
mov
test
adc
push
push
xor
dec
sub
fisttpll
dec
jl
popa
hlt
fstpl
fldl
in
das
and
test
je
and
lea
pop
jo
shll
or
pop
les
shlb
fnclex
mov
aas
in
or
fstpl
and
insl
clc
push
inc
jbe
adc
rcr
out
imul
addl
add
pop
and
sub
loope
fsubrp
xchg
or
fwait
cli
addr16
into
mov
push
mov
xchg
cmp
addr16
push
add
sub
and
sub
aad
mov
cmpsl
add
std
ds
jle
int3
xor
lods
add
or
xor
fmull
add
mov
cmp
mov
sbb
cmp
xor
out
and
push
adc
xor
loop
push
subb
dec
and
cs
fwait
and
pop
cwtl
shlb
sub
cltd
add
dec
jb
int3
insl
or
xor
xchg
in
movsl
outsb
sbb
outsl
xchg
sub
aas
xor
mov
sbb
add
in
std
inc
mov
jl
push
push
add
out
xor
ja
stc
aad
inc
data16
dec
and
mov
out
leave
add
cmp
cwtl
add
dec
add
push
rclb
and
push
pop
repnz
adc
sub
fimuls
dec
sbb
lret
es
daa
jns
inc
sbb
push
fiadds
xor
and
iret
vmwrite
sbb
push
inc
mov
mov
xor
sbb
sub
jecxz
or
push
pop
xor
je
in
and
inc
mov
push
sahf
push
mov
push
pop
jl
push
cmp
ja
out
and
xor
enter
xor
or
mov
stc
xchg
cmp
push
out
add
sub
and
dec
mov
cmc
sub
repnz
repnz
xor
or
dec
sahf
push
mov
jns
pusha
in
push
cmp
inc
in
aas
in
push
push
add
adc
dec
or
mov
and
jns
enter
push
add
adc
xor
nop/reserved
sbb
push
sbb
jl
cwtl
add
push
mov
aaa
add
int
fidivrs
repz
add
adc
xor
cmp
repz
push
data16
out
cmp
cltd
shl
repz
sahf
out
sahf
adc
push
sahf
out
jnp
popf
scas
mov
shl
repnz
adc
repz
and
jp
pop
repnz
lods
pushf
add
enter
ret
dec
ljmp
into
lods
cmp
das
xchg
enter
mov
dec
lcall
xorl
bound
ret
fdivrs
adc
and
xchg
xchg
adc
mov
add
arpl
inc
inc
jb
dec
insl
iret
add
and
push
ja
or
addr16
dec
cmovae
fistl
inc
iret
pop
mov
subb
mov
dec
sub
nopl
stos
out
shrb
adc
push
mov
cmp
xor
adc
and
jns
aaa
sahf
dec
and
add
mov
push
dec
push
xor
xchg
mov
mov
das
add
pop
adc
adc
loop
ret
sub
repz
sub
xchg
inc
insl
sbb
jecxz
dec
mov
push
xchg
orl
addr16
mov
or
push
enter
shrl
sbb
and
fisttps
repnz
jb
or
pop
pop
dec
jecxz
and
add
into
nop
xor
std
sub
push
jo
fdivrs
sbb
jle
cltd
xchg
dec
daa
and
inc
pop
jl
test
add
jns
sub
fs
fdivrs
jnp
xor
push
cltd
arpl
loopne
shlb
ret
loop
pop
sub
xor
call
add
jnp
xchg
mov
or
fmuls
xorb
leave
and
push
movsl
dec
and
push
and
xchg
cmp
push
xchg
inc
cmp
mov
int3
in
das
dec
es
adc
out
lock
idivl
mov
pop
adc
adc
lods
and
sbb
inc
mov
cltd
add
xor
movsl
push
push
xor
push
or
int3
ret
sbb
out
dec
and
mov
es
inc
ret
or
sub
cmpb
push
add
ss
shlb
and
loopne
mov
mov
loopne
push
lods
xchg
jmp
popa
aad
jnp,pt
xor
add
lds
int
leave
out
or
inc
aaa
xor
pop
sub
jge
insb
pop
xor
sub
mov
add
jle
sbb
xchg
sbb
loope
jmp
push
push
and
push
inc
push
xor
sub
pop
stos
movsl
or
adc
mov
das
les
sbb
cmp
push
stos
ret
mov
inc
shlb
push
movl
leave
lock
push
vpaddusw
stos
or
scas
inc
scas
dec
insb
mov
jns
add
jb
xor
adc
icebp
pusha
jge
pop
test
inc
dec
insl
and
adc
sub
test
xorb
cmpsl
or
mov
or
push
jb
push
push
cs
dec
and
adc
in
dec
adc
ret
lock
mov
mov
in
mov
fistl
mov
lods
sub
pop
push
inc
mov
push
test
mov
scas
cmpsl
xor
adc
lds
cmp
xor
call
push
add
je
aas
push
mov
sub
aaa
aad
inc
lea
adc
inc
add
add
sbb
inc
cltd
inc
dec
adc
dec
and
xor
sbb
pop
sbb
jb
pop
inc
sub
orb
add
jl
push
mov
or
test
repnz
add
add
rol
stc
pop
ss
or
mov
dec
mov
push
sub
sub
cwtl
jp
sbb
mov
addr16
pop
add
mov
das
std
adc
push
fwait
mov
mov
mov
and
or
mov
adc
adc
inc
add
xchg
shrb
scas
or
inc
repnz
stos
pop
push
push
add
cmp
inc
or
sub
fs
add
jnp
insb
sbb
pushf
push
pop
shll
sub
add
or
xor
addb
lods
nop
jl
mov
xchg
xor
adc
stos
xchg
loope
push
xor
push
ret
movsb
sub
add
cltd
in
add
test
icebp
adc
in
mov
push
inc
and
and
push
jg
adc
dec
scas
bound
jno
adc
xor
bound
int3
or
add
or
push
xor
jno
cmove
adc
mov
out
sub
sub
in
adc
cmp
sbb
xchg
pop
in
stos
mov
and
inc
add
add
add
enter
and
or
cli
imul
or
lock
jmp
in
mov
sbb
lret
movsb
mov
lahf
and
xor
pop
dec
add
push
cmp
cmp
int
push
and
mov
in
aam
add
or
push
cwtl
xchg
shll
stc
mov
and
cmp
ljmp
pop
pop
cmpb
je
or
inc
add
inc
xchg
inc
add
or
out
or
cmp
orb
and
add
test
sub
pop
pop
jo
jns
jnp
mov
fldcw
les
lret
in
sbb
sbb
xor
mov
push
xrelease
std
inc
imul
ja
bound
mull
push
imul
push
data16
dec
mov
test
or
or
add
popl
mov
add
ret
sbb
ffree
insl
jl
cmp
mov
xor
imul
and
jnp
jne
fldl
inc
xor
dec
or
addb
loopne
fistpll
fildl
sbb
jnp
cmpl
and
adc
shlb
and
cmp
pop
add
mov
mov
dec
xor
popa
xchg
push
movsb
fneni(8087
sub
push
mov
addr16
xchg
cmc
rolb
adc
or
mov
xor
mov
cmp
and
cmp
adc
subb
push
cmc
push
push
fcomps
xor
inc
push
cmp
pop
aas
pop
sbb
jge
jo
cltd
call
ret
cwtl
jne
xor
ret
mov
adc
subb
xor
popa
xorl
or
jns
mov
mov
adc
jp
out
lea
inc
and
mov
lcall
add
pop
mov
ljmp
add
add
sbb
inc
loopne
and
js
gs
push
add
xchg
sbb
sub
dec
popa
lahf
dec
movsb
push
xchg
imul
inc
pop
push
adc
sahf
iret
xchg
sbb
faddl
push
xlat
mov
sub
sbb
inc
dec
and
call
adc
inc
push
inc
mov
mov
sub
xor
shl
xor
mov
test
fadds
mov
fisubl
fcoml
dec
decl
roll
cmp
mov
jl
pop
imul
jl
or
sbb
popa
jp
adc
sti
mov
push
cmp
je
mov
mov
push
add
inc
jmp
movb
jmp
mov
push
pop
cltd
idiv
pusha
pop
cmp
xor
out
lds
add
pop
sub
int3
inc
movb
sub
dec
incb
std
decb
ret
push
mov
xor
add
mov
inc
xchg
les
jecxz
mov
in
xchg
mov
xor
int3
sahf
push
icebp
jmp
addl
push
dec
inc
leave
push
mov
and
push
mov
push
enter
pop
in
in
xor
rcr
or
scas
nop
into
cmp
cmp
fidivrs
sbb
test
pushf
cmp
lock
pop
push
push
in
sbb
aaa
mov
lods
stos
mov
cmp
xchg
mov
add
es
and
rolb
cmp
or
rcrl
jo
cmpsb
adcb
adc
adcb
or
inc
mov
sbb
and
and
clc
dec
jns
adc
aam
sbb
int
cmp
cmc
xchg
mov
sub
push
inc
pop
pop
les
mov
nop
adc
pop
add
in
sub
cmp
aam
dec
or
ss
jp
sbb
adc
pop
scas
add
daa
in
lea
dec
sbb
adc
adc
cmp
pusha
or
test
imulb
outsl
adc
xchg
sti
and
sbb
in
nop
jbe
out
test
push
out
and
pop
in
push
pop
push
push
sbb
sbb
mov
insb
mov
fisttpl
jns
repz
pop
je
jns
dec
enter
hlt
jl
push
pop
and
ror
jns
fcmovnb
subl
pushf
push
sbb
fcoms
aaa
push
movsb
lret
dec
repnz
popa
pop
and
push
add
rorl
jae
jns
xchg
cmp
mov
je
enter
and
js
push
cmp
add
test
mov
sahf
mov
test
loopnew
push
loope
xchg
adc
nop
and
jl
push
aam
roll
loope
sarb
loop
adc
pop
dec
jmp
push
jnp
cmpsb
mov
divb
or
lock
sbb
push
nop
sub
les
aaa
fbld
jl
add
or
fmuls
cmp
aaa
xchg
mov
pop
test
push
sub
rorb
call
sub
mov
fcompl
test
adc
lock
cld
sbb
dec
imull
lret
or
inc
jnp
push
in
sbb
inc
add
in
push
mov
mov
outsl
mov
push
ret
nop
stc
leave
cmp
lock
into
repz
ljmp
repnz
inc
add
iret
adc
and
or
push
push
scas
pusha
adc
call
fs
mov
mov
test
add
or
mov
mov
in
add
jb
pmulhuw
jae
xor
or
mov
enter
adc
adc
xchg
xor
mov
jg
adc
fsubrl
push
sbb
xor
mov
jle
xlat
adc
pop
sbb
sub
enter
pop
cltd
popf
xchg
rclb
push
or
and
inc
pop
aam
xchg
push
add
sbb
mov
addl
push
sub
xor
xor
addb
mov
dec
pop
or
into
sbb
add
mov
push
and
out
lret
cwtl
mov
and
inc
and
out
pop
add
or
xchg
rorb
fisubl
mov
push
cmp
pop
int3
and
xor
cld
or
jecxz
fsubs
mov
jmp
sahf
inc
in
neg
sub
cwtl
ds
inc
aad
sub
ss
and
out
and
dec
aaa
sub
push
sub
mov
es
push
les
inc
ljmp
jl
inc
sub
xchg
rcll
pop
inc
pop
dec
les
in
mov
daa
test
jmp
pushf
insb
sbb
fs
lcall
movsl
imul
movsb
je
pop
sti
sub
cmp
in
sub
or
movsb
push
aam
lds
and
jb
pop
cwtl
inc
fisubl
sarl
fwait
sbb
and
add
andb
scas
rcrb
push
setns
push
inc
inc
and
cmc
sub
popf
add
in
adc
ret
xor
inc
pop
add
pop
out
sbb
aam
sub
cwtl
mov
loopne
out
out
dec
cli
insl
fs
xchg
fsubrs
cmp
ja
fmuls
pop
dec
or
or
addb
cltd
ret
rclb
nop
mov
dec
and
add
dec
sbb
add
mov
movl
popf
push
adc
mov
pop
aam
add
and
test
sub
push
xor
test
add
imul
pop
or
xchg
inc
inc
adc
mov
ljmp
loop
push
mov
mov
rclb
mov
push
jmp
jnp
inc
mov
push
adcl
and
cmpb
inc
out
add
femms
jne
mov
imul
sbb
movsl
stc
xor
jl
cli
or
push
add
add
xor
xchg
add
stos
ljmp
mov
and
xor
and
mov
ljmp
mov
inc
fmull
int3
inc
add
sub
sti
or
into
cmp
or
je
ret
xchg
or
in
bound
leave
les
push
mov
fmul
nop
cld
pop
adc
pop
or
and
add
push
or
mov
int3
adc
add
sub
addr16
shlb
jmp
nop
jecxz
and
cmp
outsb
int3
cltd
lods
or
movsl
or
adc
nop
sbb
adc
lds
or
insb
push
cwtl
xor
pop
adc
push
pop
stc
pusha
mov
fstl
xchg
push
adc
stos
add
cmp
and
mov
nop
mov
add
movsb
or
jns
xor
push
dec
stc
fsubrs
ret
movsb
in
adc
cmpsl
dec
mov
inc
aaa
lcall
sete
fadds
add
adc
arpl
in
add
add
mov
in
adc
add
jge
mov
movsb
sbb
jns
sbbb
aam
jae
movsb
movsl
adc
or
sub
movsb
pop
or
xchg
dec
fmuls
dec
jge
leave
jne
ja
test
xchg
nop
jmp
pop
pop
mov
cmp
in
stc
ds
sbbl
cmp
shrb
xchg
sub
gs
push
cmp
in
cmp
inc
cmp
sub
pop
xor
ljmp
pop
cmp
negl
cmp
adc
cmp
xchg
movsb
pop
push
movsl
or
jmp
sarb
sahf
sub
adc
add
dec
dec
add
inc
in
pop
or
add
aad
inc
push
add
cmovs
and
inc
dec
incl
js
xchg
add
dec
cmp
js
xor
into
sub
adc
sub
test
mov
fadds
lcall
add
in
cmp
jne
mov
add
add
xchg
mov
das
add
add
jle
cmp
sbb
xchg
mov
mov
das
rolb
jb
xor
and
add
mov
mov
and
insb
pop
mov
es
rorb
adc
in
dec
add
and
xorb
lret
jo
pop
mov
movsb
xor
jge
pop
in
mov
mov
and
int3
fwait
sub
aaa
or
sbb
pop
jo
leave
in
sub
dec
scas
pop
adc
call
lds
adc
sub
rol
xchg
inc
movsb
ljmp
add
in
sub
shl
pop
lds
sbb
in
add
or
cmp
xor
int
adc
test
cmpsb
out
ja
adc
push
fsubs
aad
xchg
extrq
es
or
scas
cmp
lahf
push
pushf
xchg
adc
pop
iret
mov
push
fcmovnu
call
icebp
test
xchg
inc
int3
sti
inc
js
gs
div
out
push
sbb
cmp
sub
push
dec
lock
popa
mov
adc
mov
push
nop
nop
test
add
or
scas
xchg
rclb
ret
ret
push
repnz
mov
jg
imul
and
lods
xchg
pop
push
daa
lahf
lret
popl
lock
jnp
mov
add
xchg
cli
pop
add
jmp
mov
pop
out
addr16
lcall
aam
cs
es
adc
lret
cmp
inc
push
or
mov
data16
loop
add
pop
mov
fiadds
xchg
dec
or
or
rcll
sbb
out
rcl
mov
ficomps
cmp
xchg
aas
cld
pop
push
sbb
ret
pop
xor
push
sbb
int3
aaa
push
imul
mov
sub
cmp
sbb
sbb
cmpsb
adc
clc
push
je
mov
sbb
and
rclb
mov
add
pusha
ret
mov
je
cmp
jne
or
sbb
dec
mov
sub
and
mov
sbb
push
add
push
mov
pop
or
cmp
add
pop
mov
mov
loope
mov
shr
mov
push
add
push
cltd
jb
or
inc
inc
lret
pop
test
sarl
xchg
shl
pop
jge
sub
mov
cmp
push
cmp
add
pop
gs
pop
adc
push
pop
add
xchg
add
dec
push
in
dec
inc
or
jmp
or
cs
push
pop
mov
jg
in
push
testb
jae
mov
lret
lods
mov
pop
mov
add
jmp
ret
movsl
cmc
aas
aad
scas
std
dec
or
dec
mov
sub
sub
mov
push
cwtl
loope
pop
sub
inc
jp
popa
add
dec
or
and
hlt
jne
gs
std
sub
add
pop
pop
shlb
stos
adc
sub
sub
fadd
movsl
es
test
inc
leave
inc
mov
rol
xchg
jo
iret
nop
pushf
push
inc
inc
int
rorb
js
sbb
and
mov
pmaxsw
add
adcb
dec
add
ds
pusha
push
push
mov
sub
or
stc
roll
push
sbb
add
daa
mov
popa
into
roll
push
clc
xor
adcl
shlb
push
inc
add
add
pusha
xor
addb
sub
mov
xor
add
leave
loopne
mov
out
cmp
addl
push
int
int3
add
adcb
push
pushf
enter
mov
sti
cmp
cmp
cmp
xor
xor
sub
adc
clc
push
push
flds
adc
xor
std
rcrb
pop
or
add
fistps
orb
and
add
xor
and
sub
inc
call
and
sarb
lock
push
pop
decl
dec
mov
sbb
lods
aad
repz
je
pop
or
lock
inc
mov
mov
int
add
and
or
or
gs
and
sbb
in
mov
push
dec
sbb
push
push
pop
das
add
sub
add
fsubs
dec
dec
rolb
push
cmp
and
mov
push
jae
jmp
inc
push
add
leave
sbb
jg
or
pop
imul
fisubrs
pop
popa
andl
xchg
push
inc
call
jno
jp
inc
cltd
add
out
rol
rcll
stos
inc
add
aad
mov
cli
insb
fldt
push
add
cmp
jecxz
lea
adc
sub
and
add
sahf
xor
dec
fildll
int
mov
cmp
jg
lods
mov
jmp
dec
les
int3
xchg
lods
lea
jbe
and
fs
or
xor
test
or
lea
gs
iret
in
and
loopne
outsb
test
or
addb
push
or
dec
or
subb
mov
sub
add
push
je
jg
shlb
pop
push
mov
and
or
loopne
jb
mov
enter
and
pop
imul
repz
sbb
cmp
insl
dec
xchg
movsb
sub
inc
outsb
sub
dec
adc
inc
mov
mov
out
push
mov
fs
cmp
sti
lret
nop
mov
mov
in
adc
adc
add
mov
pushf
sub
jp
xlat
outsl
test
and
das
jge
lcall
xor
sbb
and
out
sbb
sub
fnsave
add
pop
test
adc
sar
push
call
and
add
mov
push
cmp
sti
test
sub
add
andb
inc
sbb
add
inc
dec
sub
sbb
push
inc
aas
add
push
inc
sbb
cltd
ficoml
or
cmp
sub
jo
sbbl
lret
pop
xchg
push
cmp
push
clc
xor
into
clc
add
loop
jo
mov
inc
push
jno
shlb
je
fildl
sahf
sub
jo
das
adc
lods
imul
rol
add
popa
insl
gs
aad
jmp
mov
int
daa
cmpsb
and
lods
cmp
push
ret
mov
xor
adc
dec
inc
mov
inc
jle
adc
cmp
cmp
loop
jecxz
ds
sub
fsts
aas
fs
movsl
andb
inc
or
push
add
and
push
cs
rorb
ds
pop
add
ja
inc
add
and
stos
es
add
in
and
adc
push
or
mov
jne
mov
fisttpll
jnp
jbe
xchg
sbb
fimull
stos
pop
and
and
or
push
sbbb
mov
add
or
test
loop
jns
daa
adc
xor
jae
scas
push
inc
stos
enter
or
or
sub
mov
xor
jne
xchg
mov
mov
and
xchg
sub
push
shl
and
cmp
mov
xchg
lret
in
sub
addr16
adc
je
push
mov
scas
jns
bound
pushf
add
mov
fwait
sub
lock
push
mov
mov
in
push
xor
sbb
push
pop
test
mov
add
and
add
imul
xchg
adc
aas
and
mov
cmp
mov
sbb
les
and
je
cmp
pop
cmpsl
mov
loopne
add
jg
add
adc
ret
test
sbb
movsb
add
loopne
push
rolb
sbb
add
es
push
mov
inc
int
dec
dec
lock
imul
ljmp
fistl
push
cmpsl
sbb
orb
sub
push
icebp
xor
mov
js
clc
sub
or
mov
pop
or
in
les
and
lock
dec
cmpsl
andl
xor
add
ret
mov
xor
add
icebp
sahf
std
add
cmpb
and
and
jp
outsb
lods
cld
dec
mov
into
sub
push
add
inc
rcrb
mov
and
loope
add
pop
jmp
loopne
push
and
scas
fisubrs
adc
aam
add
ss
jo
aaa
mov
xchg
sarl
adc
les
push
push
inc
inc
add
out
or
mov
and
push
in
sub
or
inc
cmp
inc
jb
pop
pop
addr16
nop
andb
push
jle
arpl
push
or
gs
or
or
add
rclb
xchg
jp
xchg
fldt
dec
add
or
ds
xchg
loop
add
clc
jecxz
add
clc
mov
ja
push
mov
or
cmp
decb
and
mov
mov
int3
into
mov
mov
gs
mov
add
mov
add
psubw
out
mov
or
ja
or
push
mov
jge
bound
pop
and
ror
rorl
in
mov
fwait
pushf
push
pop
push
sub
xor
and
add
xchg
into
pop
mov
stos
inc
cmp
jb
jmp
xchg
cmp
sub
out
ret
sarb
in
pop
sub
ret
dec
mov
inc
push
ljmp
test
in
mov
pop
ret
testl
mov
or
xor
pop
adc
dec
pop
ljmp
mov
icebp
add
add
or
das
test
lea
add
cmpsb
push
or
inc
adc
adc
cmp
pop
in
test
xchg
js
dec
das
insl
andb
add
sbb
and
sahf
mov
and
js
mov
sub
sbb
or
ds
sbb
and
mov
sub
pop
pushf
adc
mov
sbb
inc
cmp
xor
lea
cs
ljmp
inc
adc
repz
cmpsb
or
push
push
sahf
add
test
rorl
les
mov
inc
inc
mov
push
or
rcrl
push
sti
pop
scas
movsb
jge
sbb
mov
push
lahf
xchg
rcl
mov
cmp
pop
lock
dec
or
iret
or
inc
repz
cmp
xchg
jno
add
add
mov
ss
pushf
mov
dec
into
or
mov
clc
nop
push
jo
add
push
ja
or
push
xchg
push
and
stc
cmp
or
rclb
ds
movsb
adc
cmpl
mov
sbb
out
pop
xor
xchg
in
sub
pop
dec
in
fwait
lock
add
pop
shlb
cmp
push
mov
aas
aas
lret
test
mov
cmp
lea
fstpt
shl
int3
loope
sub
shll
imul
xor
hlt
test
pop
into
inc
ljmp
jmp
mov
es
fs
test
sub
pushl
adc
frstor
shrb
and
ret
adc
mov
es
popa
mov
dec
clc
or
pop
lea
pusha
mov
push
out
insl
leave
xlat
jbe
andl
and
gs
mov
cmp
les
aam
rolb
sbb
cmp
incl
or
mov
fsubrl
or
fsubs
mov
xchg
ss
faddl
mov
bound
lock
pop
lock
jo
cmp
or
mov
mov
nop
rcr
or
aas
ret
sahf
inc
pop
jp
adc
das
xlat
mov
mov
or
sub
inc
stos
subb
in
loopne
bound
pop
pop
mov
xchg
adcb
pop
xor
cmp
lcall
jne
imul
xchg
addb
pop
or
pop
dec
lods
dec
inc
sahf
testl
nop
mov
lret
or
sbb
call
sub
mov
mov
stos
nop
xor
adcl
popa
xor
jnp
in
xchg
xor
pushf
push
inc
cmp
dec
adc
or
cmp
jo
andb
shrb
adc
dec
rol
and
dec
in
pushf
and
popl
lcall
push
mov
sahf
daa
sbb
sbb
push
adc
outsl
ret
add
and
lock
pushl
jmp
mov
jg
and
in
lock
pushf
les
sbb
mov
outsl
mov
or
mov
inc
or
adc
in
push
dec
push
push
out
push
push
inc
pop
nop
cmp
pop
and
std
jo
popf
shrb
or
add
mov
sbb
or
into
imul
sbb
int3
and
incl
out
or
push
push
push
pop
inc
lods
subl
cmp
jnp
dec
adc
or
push
lret
xor
leave
mov
jo
or
and
pusha
adc
mov
sub
or
sbb
jne
push
push
mov
sbb
or
incl
lods
rcll
jge
cmpsl
movsl
inc
sbb
enter
xor
or
push
jns
inc
fs
push
or
in
sub
ljmp
mov
out
push
ret
repnz
inc
mov
and
mov
test
test
pop
pop
or
cmp
insb
nop
push
lret
or
flds
sub
adc
js
stos
inc
popa
add
repnz
cmpsb
add
pop
mov
sub
orl
push
aas
add
sbb
test
pushf
inc
es
sbb
or
lods
pop
dec
loope
aam
lahf
push
dec
daa
inc
call
sbb
jp
in
jecxz
lea
movl
shll
movsl
cmp
js
add
or
pop
push
enter
jne
push
int3
add
sbb
mov
add
cmpsb
aam
dec
add
mov
lods
xchg
push
sbb
mov
dec
test
cld
push
and
pop
xchg
orl
or
xor
imul
divb
xor
or
adc
add
shlb
pop
xchg
jecxz
pop
or
js
push
adc
pop
int3
adcl
jecxz
push
dec
test
jecxz
add
push
push
in
cmpb
add
jmp
cmp
adc
ljmp
and
push
shrb
jbe
movsl
mov
ds
out
enter
or
and
adc
js
add
xor
out
loopne
sbb
push
inc
mov
sbb
pop
push
cwtl
shlb
add
or
cmp
push
out
xor
xor
test
ljmp
or
cmp
push
and
lea
jo
jmp
mov
notb
imul
inc
test
xchg
xor
mov
pushf
mov
adc
notb
ss
pop
fs
jecxz
inc
inc
fidivl
mov
popa
std
ss
and
mov
nop
lret
fmul
xor
loope
push
roll
and
xchg
popf
add
adc
cmovb
inc
daa
jp
push
adc
cli
mov
mov
sub
push
test
test
test
xchg
jecxz
bound
dec
pop
ss
jne
cmp
movb
insb
sub
xorb
je
lods
rolb
push
mov
xchg
sbbb
sub
adc
ja
xchg
andb
xchg
pop
jmp
or
call
pop
mov
jo
hlt
pushf
ret
aas
add
sub
repz
add
fs
push
xchg
adc
dec
inc
pop
mov
std
add
mov
fcmovu
sti
dec
mov
xor
movsl
jmp
xorb
mov
inc
jne
out
ljmp
adc
sbb
lock
push
dec
pop
dec
xchg
cs
mov
sub
inc
xchg
call
push
pop
cwtl
jns
aam
insl
add
ffree
push
es
add
sbb
mov
inc
icebp
dec
pop
adc
test
push
mov
push
xorl
mov
lock
push
lods
mov
je
mov
div
push
call
jae
scas
ficompl
push
dec
insb
rclb
dec
sbb
xchg
sbb
js
xor
jecxz,pn
mov
jecxz
adc
mov
ret
xchg
mov
sbb
lahf
sub
cmp
jns
scas
mov
inc
add
add
add
sahf
test
nop
mov
pop
movsb
add
jbe
daa
bound
sbb
dec
not
imul
js
xor
sbb
jmp
pop
push
sbb
lahf
testl
or
adc
int3
or
sub
xor
or
push
cmp
fisttps
push
or
lcall
adc
cs
cmpsl
dec
in
jl
rorb
shrl
sbb
je
jns
mov
mov
adc
pop
cmp
test
dec
push
inc
ret
pop
testb
pop
out
or
xor
loop
xorl
cmp
push
iret
test
inc
mov
imul
xchg
sbb
inc
sbb
into
jle
push
push
push
push
call
cmp
stos
add
jge
jb
sbb
es
ja
sbb
mov
in
loope
mov
cmpsb
mov
adc
std
jmp
mov
sarl
loop
popf
cmp
jae
add
inc
pop
cmp
or
mov
or
inc
adc
push
insb
in
shll
push
pop
aaa
pop
cs
mov
pop
add
das
and
popf
les
rorb
dec
int3
mov
movsl
in
push
mov
inc
jb
lret
or
or
enter
pop
jmp
xor
add
clc
call
enter
insl
dec
sbb
test
mov
xchg
push
push
xchg
test
push
shrb
subb
push
ss
int3
mov
shr
push
push
and
lods
sub
daa
dec
and
add
mov
ja
push
fisubl
js
push
mov
dec
loopne
dec
xor
and
leave
cli
insl
shl
test
cmc
mov
fimull
fcom
pop
faddp
dec
loopne
pop
sub
sub
ret
out
cli
mov
adc
adc
lret
js
stc
lock
sbb
in
loopne
jp
adc
pusha
cmp
scas
cmp
or
push
pop
lods
adc
dec
fwait
cmp
jo
bound
cwtl
cld
in
mov
lret
sub
or
push
mov
add
mov
sbb
adc
cmp
adc
push
ds
daa
in
add
add
jecxz
sti
xchg
pop
pop
outsb
push
scas
fcoml
mov
or
ret
repnz
aam
loope
hlt
popf
hlt
or
cmp
adc
jecxz
inc
and
inc
sbb
dec
stc
inc
cmp
stc
das
fldl
jns
std
mov
cmpl
add
xchg
pop
pop
das
add
adc
aaa
aaa
adc
pop
pop
jl
mov
data16
gs
jmp
add
cld
movsb
int
dec
pushf
push
push
pusha
pop
or
mov
mov
mov
ljmp
mov
enter
jle
movb
add
fidivs
jg
push
out
hlt
mov
add
cmp
add
xor
sub
push
ss
fnsave
push
mov
in
fbld
paddb
test
notl
scas
lret
push
push
inc
mov
jmp
jns
ret
jne
mov
and
mov
pop
adc
lods
jmp
pop
andl
lods
lods
push
mov
stos
addb
icebp
inc
add
sbb
or
mov
or
fs
push
cmp
lods
dec
and
or
add
aad
dec
cmpl
lahf
xor
xor
sbb
push
sbbl
rorl
ret
add
je
adc
shrb
mov
test
rorb
outsl
sahf
dec
ja
jl
inc
clc
add
or
or
sahf
sbbl
cmp
cmp
add
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
pop
jmp
and
or
jmp
pop
push
cmp
fimull
push
cmp
pop
push
sbb
dec
test
bound
dec
jnp
dec
sar
lea
incl
mov
jns
out
pop
pop
daa
das
aaa
out
sahf
out
inc
dec
dec
push
sahf
out
sahf
pop
pop
bound
jno
sahf
out
jbe
addb
xchg
cltd
sahf
mov
test
mov
mov
jne
add
add
push
pop
or
and
or
or
push
pop
idiv
call
adc
adc
sbb
sbb
push
pop
and
and
aas
add
repz
and
sub
mov
jg
pop
sbb
shrb
cmp
sti
aaa
fs
cmp
jle
mov
ss
inc
sbb
jmp
push
ret
cltd
adc
lea
push
pop
jo
inc
sub
jae
pop
push
push
scas
fisttpl
mov
cld
insb
cld
xchg
shll
or
rcl
les
push
clc
sub
jle
jle
aaa
mov
inc
cmp
jbe
pop
or
mov
loope
mov
inc
adc
in
mov
xor
cmc
out
mov
inc
push
push
xchg
sub
pop
lret
jne
and
scas
push
insl
aam
and
mov
adc
pop
and
inc
xchg
outsl
and
add
movsb
jns
or
je
push
repnz
or
cltd
adc
enter
and
push
sahf
xchg
inc
clc
add
sbb
add
push
and
gs
add
test
sbb
and
add
in
and
je
jp
add
pop
and
sbb
dec
and
mov
daa
mov
repz
jb
ja
add
sbb
add
add
add
loop
push
jmp
popa
xor
adc
movsl
jbe
xchg
inc
xor
sub
adcl
inc
adc
stos
dec
js
adc
pop
dec
ficoms
xchg
fwait
in
xchg
loopne
dec
lock
insb
fwait
jns
push
loopne
cmp
or
add
outsl
add
sahf
bound
and
push
pushl
push
rolw
dec
insb
subl
mov
rclb
pop
ss
pop
rcrl
cmp
mov
int3
sub
add
test
sahf
jae
or
push
inc
pop
add
and
loopne
or
jmp
insb
jge
mov
mov
xor
and
jmp
mov
jne
mov
sbb
jne
jno
aad
inc
les
jo
orl
ss
jmp
sbb
add
mov
jg
cmpb
faddl
pusha
pushf
sbb
and
bswap
testb
pop
cli
rcrl
je
dec
jl,pt
xor
adcl
lock
sbb
clc
sbb
lcall
xor
inc
rorl
clc
adc
cmp
sub
or
pop
and
jno
pushf
inc
xchg
xchg
test
sarl
loop
js
ret
out
subb
outsb
pop
sbb
ds
dec
in
mov
mov
push
jmp
popa
and
add
dec
neg
push
adc
push
popl
mov
ds
mov
bound
xchg
inc
popa
push
xchg
add
add
clc
jge
or
ss
xor
or
mov
xorl
loope
mov
jno
lock
sub
lods
leave
adc
pop
dec
adc
add
test
sub
shr
imul
sub
add
or
test
cmp
orb
inc
xchg
pusha
push
jp
lods
loopne
sbbb
cwtl
or
mov
pop
pop
ljmp
pop
add
stos
lods
dec
ss
add
sbb
pusha
or
mov
mov
jmp
push
sbbb
nop
mov
rorb
in
mov
inc
enter
push
cltd
inc
dec
add
lcall
lahf
addl
je
outsb
xor
adc
pop
push
stos
push
push
mov
lods
orb
rcrl
sub
sub
sbb
cmp
lret
xor
mov
dec
pusha
mov
mov
test
scas
fildl
ret
mov
add
pop
cli
or
dec
adc
aas
je
cmp
cmc
xor
cmp
jae
and
daa
push
pop
movsb
int
jo
jmp
jecxz
cwtl
imul
or
fsubs
or
fcomps
enter
mov
pop
iret
pushf
xorb
int
xchg
and
in
fsubrl
add
jp
mov
in
push
adcl
push
ret
add
daa
loopne
or
test
dec
adc
pop
stos
cmp
addb
xchg
popa
pop
jae
sub
cmp
loopne
xchg
or
test
adc
add
sub
or
test
cmp
bound
rorb
inc
dec
movsb
jmp
mov
leave
push
xchg
inc
jne
xchg
and
mov
push
cld
push
daa
nop
cmp
nop
push
mov
mov
ds
leave
dec
in
mov
mov
stc
and
push
sub
jne
je
mov
aad
adc
add
adc
jmp
mov
arpl
test
rol
and
push
xorl
xorl
push
popa
bndldx
cmp
xchg
push
outsb
sub
in
xlat
into
adc
fistl
push
or
ds
inc
add
fs
add
inc
inc
xchg
and
in
dec
inc
push
inc
mov
movsb
cmp
pop
pop
pop
aas
rclb
jmp
fs
push
es
cmp
nop
icebp
nop
add
je
bnd
sbbb
jbe
and
mov
je
ficoms
pushf
mov
movsb
test
icebp
andb
mov
mov
push
inc
push
ljmp
sbb
out
pop
ret
jo
jle
sbb
aad
add
femms
inc
cs
rcl
pushf
and
aaa
sub
or
jbe
or
dec
add
jl,pt
iret
insb
movsb
fs
lea
scas
es
add
idivb
lea
or
and
repnz
sbbl
push
xchg
push
xchg
negl
add
jmp
push
pop
sti
lods
sub
inc
and
ret
adc
in
or
jl
jmp
out
push
sbb
xchg
sbb
lea
mov
pop
sti
mov
push
clc
cmp
je
xor
jge
ficoml
mov
inc
jns
cmpb
jmp
rcrl
fisubl
fdivl
int
sbb
int3
push
mov
lock
and
daa
insb
pop
jo
insb
je
js
sub
mov
sbb
push
push
mov
imul
sub
or
sub
lods
sub
jns
jmp
sbb
cmc
dec
mov
add
pop
cmp
jge
pop
xor
sahf
inc
push
hlt
cmp
jl
cmp
jle
aad
xchg
clc
ret
pop
mov
sbb
lock
loop
scas
adc
int
mov
mov
sahf
sbb
incb
pop
mov
test
iret
sub
ds
add
pop
pop
pop
mov
cmpb
jne
fdivrl
xchg
ss
cmp
loopne
inc
pop
inc
shrl
jbe
jbe
push
cmpsb
jo
or
lods
push
or
or
add
in
jge
mov
ret
js
mov
fcmovbe
in
or
mov
nop
or
into
pop
push
pop
mov
jne
add
sub
or
mov
and
and
lret
test
ret
mov
dec
push
jns
repz
and
and
or
jmp
in
mov
ret
sub
push
loopne
jmp
and
rcll
sbb
pop
xchg
imul
xor
rcrb
loope
mov
lock
jge
lahf
stos
mov
loopne
or
in
repnz
jl
scas
rol
xor
pop
mov
loopne
push
add
cmp
je
xor
js
clc
aas
jne
push
inc
add
push
sub
adc
xchg
cmc
stos
scas
rcll
add
mov
dec
movsl
popf
lods
inc
xor
adc
sub
inc
adcl
fwait
mov
inc
mov
pop
inc
aaa
adc
adc
enter
shll
inc
into
and
push
shlb
adc
xchg
ret
addl
mov
sbb
fdivl
pusha
mov
loop
push
and
xchg
in
adc
inc
xor
lock
leave
test
mov
mov
enter
or
dec
xor
scas
lods
aas
sub
pop
xor
adc
scas
dec
or
add
loopne
add
es
xor
lcall
insb
repz
mov
push
scas
cltd
cltd
sub
out
test
xor
mov
add
jge
or
jo
scas
arpl
and
push
push
add
adc
in
dec
jge
xchg
or
mov
repz
and
mov
adcb
jno
inc
sub
ss
dec
pop
orl
in
test
outsl
ret
sub
pop
subb
arpl
pop
mov
addb
loope
pop
jns
sbb
pusha
sub
push
decl
mov
mov
sub
dec
adc
xchg
mov
pop
add
or
or
pop
dec
sub
mov
clc
add
xchg
jl
inc
jno
and
adc
pushf
mov
test
test
sbb
mov
int
test
sti
inc
dec
xor
in
mov
popf
push
jmp
pop
jbe
or
cmp
add
jbe
stc
movsl
ljmp
add
ja
popf
mov
out
add
aad
test
pop
mov
mov
js
shr
adc
rol
lds
pop
push
jg
push
xor
inc
and
sub
adc
add
addl
hlt
push
stos
xor
shrl
test
lret
xor
push
mov
outsl
dec
ss
jle
lods
call
arpl
addr16
mov
sbb
das
call
test
add
in
data16
pop
ret
push
mov
jp
push
jmp
je
ret
aas
pop
push
mov
and
and
mov
mov
mov
add
xor
and
sub
fwait
sysenter
push
push
in
dec
or
or
xchg
mov
mov
rclb
cmpsb
mov
pop
clc
test
and
inc
push
lcall
push
sbbb
sub
inc
push
fnstcw
mov
leave
enter
nop
lahf
bound
aad
lock
popa
and
xchg
ucomiss
inc
cs
fisubrs
sbb
pusha
test
aas
push
add
push
and
inc
movsb
imul
push
cmp
aad
dec
arpl
clc
insb
push
sbbb
pushf
mov
xchg
mov
ret
pop
hlt
and
adc
hlt
pop
hlt
and
sub
jl
cmp
xor
ret
push
sub
fcmovnu
adc
push
loop
and
and
loopne
pop
sbb
ds
jbe
mov
push
icebp
xchg
pushf
mov
cwtl
inc
pop
test
dec
cmp
xor
movl
pop
mov
push
jnp
rcr
or
shrb
or
sahf
and
xor
add
adc
test
sbb
cltd
mov
mov
in
jne
icebp
pusha
popf
es
add
mov
inc
cmp
pop
add
jo
popa
jae
sti
pop
push
adc
adc
xorl
hlt
add
adc
or
jmp
test
test
jp
mov
mov
xor
cmp
sarl
add
in
fimuls
enter
call
dec
int3
loopne
shr
dec
loopne
cli
xor
add
xchg
inc
pop
push
loopne
mov
std
call
mov
push
xor
jp
pusha
sahf
inc
sbb
fdivp
int
fisubl
fldenv
pop
lahf
in
les
add
aas
pushf
xchg
push
add
data16
cmp
mov
and
enter
mov
nop
fisubs
insl
push
adc
jo
adc
out
adc
jne
xchg
mov
xlat
mov
pop
adc
in
dec
pop
sbb
mov
cwtl
push
addr16
or
push
or
jnp
cmp
cmpl
jecxz
test
xor
sub
push
inc
mov
je
push
popf
mov
pop
lret
mov
sti
and
ss
fldl
sub
dec
sub
and
sti
test
shlb
add
lock
or
aaa
add
popa
push
inc
and
lea
inc
pushf
mov
inc
cmp
jb
push
or
and
pop
jb
adc
or
repz
fs
add
pop
lock
repnz
imul
mulb
dec
rclb
dec
inc
fcoms
js
aam
mov
or
cmp
aaa
cmp
sarb
or
in
push
fucomi
push
rorl
testl
hlt
jmp
ds
ss
mov
bnd
push
js
and
mov
mov
insb
and
jbe
and
or
and
mov
or
insl
imul
lahf
xor
test
sbb
pusha
or
push
fmulp
inc
mov
or
add
mov
lret
daa
mov
in
pandn
cmp
xchg
test
cwtl
mov
mov
push
nop
adc
sbb
push
test
pop
push
add
xor
adc
lcall
cmp
clc
mov
push
pop
mov
add
add
aam
push
and
mov
test
pop
sbb
pop
xor
push
jmp
test
or
push
push
fidivrl
in
jns
add
mov
decl
cmp
mov
adc
in
xchg
addr16
add
stos
and
push
fcomps
ss
xor
sub
pop
and
or
and
mov
and
push
bound
outsb
insl
call
jb
cmp
and
scas
xchg
dec
mov
popa
pop
jbe
push
divl
xchg
push
adc
mov
mov
mov
add
mov
dec
xchg
mov
adc
pop
fsts
mov
notb
push
dec
cmp
or
push
mov
movsl
add
mov
test
xchg
stos
movsb
push
outsl
int
xor
add
or
dec
aaa
in
add
and
inc
adc
nop
ret
mov
js
and
sub
xor
loopne
cmp
loop
pop
dec
sbb
sub
push
dec
add
dec
or
filds
jl
sub
je
add
dec
pop
fs
pop
push
rcrb
insb
repz
and
stc
pop
xor
sbb
in
mov
scas
test
jecxz
shlb
jl
sahf
pop
bound
push
mov
push
arpl
movsb
daa
in
pushl
mov
movsb
jb
jle
cmp
push
call
movsl
xor
sub
daa
xor
adc
inc
or
and
dec
int3
xchg
jbe
ret
cmpsb
xchg
fadd
push
sub
test
adcl
jo
lods
push
xchg
lock
loopne,pt
lahf
test
inc
bound
mov
sbb
loop
xor
in
xchg
pusha
ret
bswap
xor
movsb
imul
jb
and
mov
bound
rcrb
mov
outsl
nop
addl
and
inc
sbb
cmp
xchg
fldt
mov
xor
mov
test
inc
pusha
xchg
imul
pop
aas
add
addr16
dec
xor
outsl
mov
loopne
aam
leave
rorb
adc
add
mov
xlat
cwtl
in
add
sub
cmpl
call
pop
test
push
add
test
adc
call
js
roll
arpl
ret
in
cmpsl
mov
xor
push
rorb
sbb
push
sbb
cmovnp
popa
inc
pop
mov
push
fcompl
push
rcrb
mov
inc
mov
push
push
mov
mov
or
and
hlt
pusha
ret
iret
xchg
or
and
mov
jge
or
dec
dec
sti
or
dec
subl
cmp
sub
int
pop
pop
cmpsl
jo
jno
mov
rorb
outsl
add
push
negb
push
push
add
inc
sub
movsb
xchg
js
push
pushf
xchg
mov
push
aas
hlt
mov
push
add
and
jmp
mov
pusha
xor
enter
pop
inc
dec
and
in
sbbl
mov
adc
rclb
sbb
sbb
test
cmp
aas
test
or
sbb
adc
insb
or
test
push
adc
data16
bound
add
push
dec
fs
test
pushf
mov
add
or
jns
pusha
mov
cmpsb
mov
or
or
fiaddl
and
mov
scas
repnz
mov
pop
inc
push
xchg
mov
mov
js
nop
or
fs
movups
xor
and
push
and
les
sbb
ret
dec
xchg
sbb
cmc
pop
add
jmp
sbb
xlat
mov
push
outsl
aam
jns
add
jae
adc
nop
add
cmp
push
pop
xchg
jae
nop
out
cmpb
addb
push
incl
in
sbb
popa
andb
jo
adcb
int3
subb
xor
add
sbb
movb
subl
push
adc
ret
lahf
mov
testb
gs
outsl
push
push
mov
inc
shrl
push
inc
mov
fsubrs
dec
enter
push
jns
lcall
pop
inc
mov
push
lret
ror
divl
int3
pop
lea
add
dec
and
cmpsl
dec
aas
add
js
das
into
pop
inc
push
and
jae
cmpl
mov
sub
aad
adc
add
sub
jmp
and
outsl
dec
sub
mov
or
rol
mov
leave
loopne
shlb
jo
popa
sbb
dec
es
int
mov
sub
adc
jo
mov
inc
mov
or
mov
push
fadds
sbb
lret
mov
xlat
pop
pop
sub
xor
fcomps
mov
jnp
push
ja
mov
adc
adc
mov
out
mov
mov
dec
repnz
xchg
pusha
pop
insl
mov
cmp
pop
inc
cmp
add
sub
xor
cmp
imul
insb
adc
addl
adcb
adc
cmp
enter
jo
sub
or
pop
mov
es
xor
repz
js
out
imul
add
xor
inc
ret
insb
inc
scas
loop
jmp
mov
xlat
icebp
jmp
cmp
sub
fiadds
test
outsb
or
add
jl
pop
or
aad
lods
jnp
push
lods
pusha
pop
xchg
pop
push
or
xchg
in
cld
push
add
sbb
add
pop
push
adc
xor
in
adc
inc
mov
push
hlt
lods
fwait
movsb
jl
shrl
mov
mov
enter
and
add
pop
jle
xchg
lret
adc
jb
inc
cmp
jge
movsl
call
arpl
insl
fwait
and
repz
or
sbb
stos
adc
mov
mov
rclb
addr16
xchg
pop
jns
adc
in
rcrl
out
xchg
cmp
test
lahf
sbbb
rolb
push
inc
xlat
insb
jne
loopne
cmp
pop
in
fs
push
push
pop
fists
dec
push
mov
pusha
add
rcrb
addl
inc
jmp
int3
in
dec
sub
mov
call
aam
mov
movsl
rcr
orl
push
pop
filds
mov
popf
mov
or
cmp
dec
mov
mov
rolb
add
add
jl
test
adc
orl
dec
loop
test
lock
movsl
mov
test
hlt
popa
jge
popa
and
mov
push
je
mov
sbb
test
or
and
or
ja
sbb
insl
push
cmpb
inc
and
add
ret
lods
pop
test
sub
and
das
test
daa
adc
mov
sub
jo
sub
add
ds
popf
dec
js,pt
cmp
inc
pushf
add
ds
and
add
sub
xchg
xor
int
adc
ret
sbb
adc
pop
enter
sub
mov
push
sbb
imul
lods
and
adc
and
push
pusha
cwtl
cmpsb
xor
hlt
or
or
and
cmpsb
adc
andl
dec
push
loopne
sbb
incb
mov
dec
filds
sub
or
imull
mov
sub
jne
mov
popl
sub
jo
cmpsb
adc
xchg
lea
nop
pop
add
ret
push
movsb
sarl
sub
adc
add
dec
addb
xorb
mov
or
pop
mov
and
mov
mov
imul
js
cmpsb
ss
js
mov
mov
or
and
add
adc
jo
test
ja
sbb
je
inc
and
int
inc
ret
or
sbb
add
dec
filds
daa
mov
pusha
add
lods
movl
es
mov
test
ljmp
loop
clc
push
push
test
xchg
push
push
jae
fs
lods
mov
mov
push
mov
gs
popf
adc
adc
jo
add
sbb
out
lret
lea
aaa
mov
sti
mov
sub
pushl
cmpb
jp
mov
es
xchg
cmp
adc
jo
lret
sub
push
xor
sbb
int3
loop
ss
test
cwtl
mov
push
sub
cmp
negl
xchg
adc
pushf
imul
fs
cmpsb
in
insb
lcall
cmp
nop
add
jne
sub
das
adc
sbb
jne
enter
sti
mov
clc
hlt
pop
or
mov
add
jne
xchg
movsb
outsl
push
std
or
or
dec
out
sbbb
inc
sahf
add
mov
jp
loop
xor
jne
adc
loope
call
movzbl
and
dec
or
fiadds
push
add
push
ficomps
lea
jle
jnp
xchg
fucomi
je
xorb
imul
and
addr16
addb
enter
adcl
mov
fimuls
jg
mov
jns
jno
pop
inc
pop
cmp
pop
and
mov
pop
ds
xor
in
sbb
lods
sbb
pop
pop
jmp
push
movsl
sbb
pusha
mov
xchg
push
mov
jo
sub
xchg
pop
pop
adc
pop
and
push
rorl
insb
inc
xor
lock
mov
jnp
bnd
and
push
inc
sahf
or
icebp
jbe
test
adc
push
and
pop
cmpl
lret
adc
dec
jecxz
mov
addl
test
add
xor
popf
push
or
jle
ret
push
imul
mov
sarb
jmp
inc
inc
mov
arpl
iret
clc
xor
bound
fsubrs
cld
xchg
pop
and
cmpb
and
adc
push
push
stos
inc
in
mov
add
hlt
mov
add
ss
enter
and
sti
out
adc
push
test
pop
icebp
pusha
or
mov
ror
mov
test
push
fsubs
add
add
push
inc
push
adc
xchg
adc
das
push
dec
mov
push
mov
decb
push
adc
insl
mov
loop
shl
fwait
mov
inc
fidivs
hlt
loopne
xchg
iret
scas
cmp
push
push
pop
cs
loopne
test
sbb
mov
pop
add
sub
add
xchg
adc
je
adc
inc
shr
jecxz
and
nop
out
mov
pop
mov
loope
out
push
fmull
xchg
pop
dec
enter
add
mov
mov
les
ret
popf
lods
push
pop
xor
push
xorb
xchg
sbb
add
xchg
dec
lret
mov
jne
mov
mov
pushf
xor
dec
fimuls
sahf
movsb
pop
mov
xchg
out
jge
pop
sub
push
and
adc
shr
mov
and
push
xchg
or
adc
push
and
cmp
or
ja
add
and
lcall
pop
xchg
jmp
jmp
cmp
aam
mov
or
divl
je
mov
leave
lds
sub
add
aas
mov
adc
lods
or
and
sub
add
sub
sub
add
push
sub
daa
mov
mov
sarb
sahf
out
test
sub
ljmp
xor
test
inc
decl
aad
ret
jg
mov
and
mov
fiaddl
push
add
out
je
lods
cli
lea
cmpsl
out
cmp
cmp
push
push
es
dec
xor
sub
xor
shl
sbb
jb
sbb
adc
push
inc
adc
adc
imul
xor
incl
data16
bound
shll
inc
inc
jmp
pop
cmp
sub
pop
adc
xchg
cmp
sub
sbb
data16
mov
add
push
ss
test
icebp
repnz
scas
xor
sub
cmp
scas
popf
fimull
jmp
arpl
pop
mov
push
sbb
ss
mov
aam
push
je
push
jge
das
inc
or
stos
gs
pushf
or
jno
in
outsb
add
dec
push
mov
test
dec
and
in
pop
adc
je
cmpsl
aam
pop
in
mov
repnz
ss
add
cwtl
mov
cs
sahf
mov
in
mov
mov
xchg
insl
fcoms
jmp
xchg
incb
xchg
mov
xor
mov
lods
push
stos
inc
test
push
adcb
ror
pop
mov
lods
es
adcl
xchg
and
stc
rol
add
pop
les
enter
sub
fsubrs
inc
sub
test
daa
insb
and
push
inc
pop
imul
aas
addb
js
push
sub
pop
mov
push
push
dec
clc
or
je
and
je
cmpsb
int
xchg
outsl
jle
sub
sub
in
js
mov
ret
and
xchg
push
dec
sbb
fisttpl
int3
loop
cltd
push
mov
enter
iret
jge
out
jle
xor
sub
push
push
push
or
call
pop
cwtl
inc
adc
or
out
mov
push
jo
lds
sbb
and
inc
push
xor
or
and
inc
and
sub
dec
add
jl
leave
mov
or
sub
in
xor
clc
lahf
dec
gs
xchg
sbb
sub
or
inc
ljmp
inc
xor
test
xchg
lea
cmp
xchg
mov
add
inc
incb
xor
shrb
loop
sub
insb
icebp
push
mov
imul
mov
xlat
xor
dec
mov
mov
and
bound
addr16
xor
sub
outsl
lods
inc
stc
push
in
insb
arpl
test
jl
mulb
push
sub
push
addr16
jne
fdivrs
int
xchg
inc
add
insb
inc
jle
dec
fcoml
inc
sbb
out
xlat
imul
mov
add
test
pop
call
ljmp
mov
aas
cmp
lret
jl
mov
movhps
cmc
cmp
dec
dec
cmp
xlat
pusha
sbb
leave
xor
shr
xor
adc
fistps
adc
add
test
in
jmp
inc
mov
mov
shr
cmp
jbe
add
jmp
add
mov
xor
or
out
and
enter
punpcklbw
push
ja
arpl
push
push
add
fwait
stc
cmp
mov
rcrb
lds
test
dec
xor
lret
add
sbb
adc
adc
outsl
ret
push
in
aam
mov
adc
pop
xor
and
xor
orb
push
inc
push
jl
xor
ret
out
jmp
addr16
jge
xchg
mov
jne
sbb
add
jb
cwtl
fwait
adc
sub
je
adc
xor
xor
stc
push
and
push
adc
push
add
in
dec
mov
mov
adc
xchg
movsb
jo
rclb
out
xchg
test
xchg
sub
sbb
and
test
add
and
add
les
popa
aas
ret
out
leave
jo
je
and
add
orb
and
xor
test
add
mov
adc
pop
hlt
adc
pop
pop
push
inc
or
dec
and
ljmp
pop
insb
jle
adc
inc
cmp
push
xchg
xor
rcrl
cltd
orps
sbb
jae
js
and
adc
and
setns
or
mov
add
cmpb
lods
ficomps
push
mov
outsl
pop
pop
add
xor
roll
test
jnp
ficoml
add
push
nop
out
or
and
cmp
jmp
and
xchg
loopne
cmp
sub
xorl
js
sarb
ret
and
add
inc
xchg
jp
or
xor
inc
xor
sub
push
scas
or
pop
jo
invlpg
cmp
push
jbe
and
aam
aaa
push
mov
or
inc
or
iret
cmp
orb
mov
add
mov
or
adc
and
sub
cwtl
shlb
inc
push
adc
pushf
pusha
mov
in
mov
das
or
adc
pusha
es
and
out
jno
mov
and
and
fisttpl
push
and
enter
les
sub
jl
lea
push
push
sahf
add
test
sub
or
sbb
push
xchg
sub
fdivrs
cmp
push
add
push
sbbb
mov
fyl2x
cmp
iret
les
or
call
repnz
and
xchg
fildll
int
dec
adc
cmp
insl
mov
sub
dec
and
aas
pop
in
sub
cmp
push
mov
xchg
ljmp
dec
mov
cmp
push
clc
add
js
mov
cmpsl
dec
and
sbb
and
pop
jb
push
je
mov
rolb
inc
mov
mov
add
incb
or
popa
aas
mov
daa
mov
inc
mov
sub
jne
mov
sti
mov
dec
push
insb
cmp
lret
xchg
push
cwtl
sub
jo
pop
pushf
dec
mov
repnz
add
sub
mov
inc
movsb
push
fisubs
out
push
je
lods
mov
jns
pop
lods
dec
imul
lcall
sbbl
push
mov
pop
bound
mov
xchg
inc
aam
xor
dec
and
lods
imul
mov
mov
ss
sarb
cmp
sbb
mov
mov
decl
jo
and
add
or
push
sbb
mov
repnz
lahf
xor
add
lock
push
push
nop
test
adc
push
jp
xor
add
shl
push
adc
sub
or
add
pusha
mov
mov
or
dec
mov
lods
mov
mov
and
dec
mov
lcall
and
mov
or
loopne
loopne
xchg
sbb
ja
add
into
inc
fwait
pop
fwait
and
add
icebp
push
push
mov
lea
dec
mov
call
push
and
inc
jmp
fwait
dec
adcb
mov
mov
in
push
jbe
xchg
popa
int3
jo
fdiv
int
and
pop
mov
cmp
dec
mov
jne
std
xchg
xchg
sahf
sub
dec
aas
and
push
mov
pop
cltd
fcoms
adcb
lea
outsb
push
lcall
or
mov
sub
arpl
sbb
pop
sub
adc
int
test
add
add
inc
adc
aaa
push
xor
cs
adc
faddl
or
mov
xor
mov
and
rolb
xchg
icebp
lock
cs
aad
push
rcr
or
mov
push
pmovmskb
xchg
pop
push
fmuls
sub
mov
pop
ss
js
mov
push
nop
data16
pusha
xchg
dec
arpl
dec
jg
add
pop
bnd
jp
adc
in
shrb
orl
jbe
inc
mov
stos
adc
ja
ds
dec
je
or
and
shlb
shrb
cmp
stc
sub
mov
cmp
add
shlb
nop
fcomps
lcall
repz
jno
dec
icebp
jge
cmpsb
push
das
xor
lcall
leave
push
xor
movsb
push
or
dec
mov
push
fstpl
pop
cmp
aam
in
mov
sbb
aaa
dec
xchg
ss
xchg
ret
or
add
test
xchg
in
cmp
ret
ret
xor
add
aas
jmp
dec
add
xor
les
mov
add
sbb
movsl
mov
push
cmpsb
mov
add
inc
cmp
das
fisubrl
cmpsl
lock
movsl
sbb
jnp
push
fcomp
fnstsw
cli
jmp
shrb
adc
fldl
pop
fsubr
pop
faddp
inc
movsb
ds
rcr
fs
ret
or
shlb
push
in
or
or
fcmovnu
pop
cmp
mov
popf
push
xchg
push
ja
pop
push
inc
xor
and
inc
les
jne
lock
mov
movsb
lods
add
push
loope
ljmp
sub
mov
add
push
aaa
and
fsubs
push
test
fstpl
push
icebp
cltd
add
pop
jns
push
cmpsl
test
adc
and
xor
adc
push
ja
inc
xor
adc
sbbb
mov
mov
cli
int
jne
andl
jp
movb
adc
push
adc
std
in
and
enter
or
cmp
lret
daa
std
pop
xor
and
dec
jmp
pop
dec
add
push
leave
fadd
cmp
int3
insl
and
inc
mov
decl
inc
sbb
loopne
jne
inc
mov
cmp
jb
jl
xor
mov
lea
adc
or
dec
loopne
adc
xor
pushf
or
mov
or
adc
pop
jae
cmpsb
pcmpeqw
inc
jge
das
or
inc
push
mov
add
add
cmp
lea
adc
add
cmp
and
adc
push
cmpsl
scas
js
sbb
fucomi
fisubrl
lock
adc
test
std
inc
or
in
push
lcall
aas
xchg
mov
fimull
cmp
dec
mov
stos
cmc
je
imul
sub
pop
mov
push
das
movsl
or
push
inc
mov
pusha
sub
test
jbe
clc
pop
pop
pop
sub
and
inc
jnp
push
xchg
sub
push
add
lods
push
push
sub
in
addb
lahf
imul
sbb
sub
ret
xchg
lods
outsl
aam
jmp
mov
jmp
jno
mov
lret
or
cld
sub
dec
dec
dec
dec
push
scas
popa
pop
push
push
stos
fcomp
dec
pop
add
test
and
pop
add
dec
rcrb
add
mov
fcompl
loope
call
test
shlb
test
adc
sub
subl
adcl
rol
cmc
add
ret
sbb
lock
and
shlb
out
inc
pop
cmp
int3
addr16
shl
hlt
sbb
jmp
int3
mov
repnz
mov
push
inc
add
js
adc
or
mov
ljmp
and
scas
add
icebp
push
jne
aas
nop
pop
and
mov
cli
hlt
dec
out
push
push
dec
lret
pop
inc
shlb
test
inc
sbb
out
in
add
sub
inc
push
sahf
push
outsb
dec
arpl
cmc
data16
aas
sbb
rolb
and
ja
adc
adc
inc
pushf
imul
pop
in
notl
lcall
test
pop
addb
inc
cwtl
push
push
addr16
lds
jl
and
pop
ficoml
andl
or
cwtl
and
rcrb
mov
js
inc
push
adc
adc
push
sbb
push
or
xchg
or
dec
adc
cltd
mov
shlb
push
loopew
jmp
inc
loop
lods
jb
adc
dec
les
push
scas
and
xor
dec
enter
notl
iret
adc
roll
enter
iret
mov
nop
mov
push
int
sbb
xor
in
add
rorl
pop
bnd
push
pusha
or
lret
dec
enter
les
jp
pop
adc
stc
dec
add
xor
fdivl
nop
xor
inc
mov
cmp
add
push
lods
inc
rorl
mov
sbb
aaa
add
adc
fimuls
push
popa
int3
call
cld
rorb
add
sbb
add
lds
mov
adc
pop
js
sbb
notl
dec
push
or
add
push
and
subl
add
jge
mov
pop
xchg
add
adc
pop
iret
mov
xor
push
xor
movsl
or
pop
imul
ret
rol
rorl
inc
jle
pusha
cmp
pushf
cmc
daa
pusha
rclb
addl
sbb
sub
inc
push
in
push
loopne
jae
in
cltd
sub
outsl
and
int
pop
mov
scas
clc
push
adc
mov
cmp
stos
push
lock
mov
repnz
cmc
ret
mov
notb
jne
pop
push
inc
pop
inc
add
subb
lods
addr16
mov
shll
jbe
or
gs
jne
sbb
cmp
loopne
or
or
loope
das
add
fsubrs
mov
daa
ja
push
sahf
add
std
pop
ja
push
add
cmp
inc
inc
push
inc
aad
jo
jbe
cli
or
jge
push
push
in
incl
adc
mov
rol
mov
jg
inc
lret
pop
xor
shr
xor
sub
jnp
xor
shr
xor
adc
add
add
add
mov
shlb
stc
pop
dec
fs
or
jae
in
fisttps
and
xor
add
add
aam
sub
cltd
test
enter
push
pop
aad
push
mov
ror
cli
fisubrs
stc
or
add
xor
and
and
xchg
push
aam
adcl
xor
lret
repnz
mov
mov
inc
push
or
xlat
ret
shrb
add
add
add
dec
rcll
call
inc
inc
sub
call
jb
add
mov
mov
rol
rol
out
add
mov
xor
fcompl
in
sbb
in
nop
cmpsb
imul
orl
ret
add
push
cmp
bound
int3
enter
bound
pop
pop
and
mov
pop
aaa
mov
push
scas
adcl
sbb
call
xor
loopne
loopne
inc
sub
dec
in
in
loopne
adcb
imul
pop
xor
and
and
or
int3
and
in
in
mov
push
xor
and
and
out
popf
dec
sti
loopne
or
xor
popa
pop
lods
hlt
xor
add
inc
adc
or
bound
cmp
pop
inc
inc
jo
ret
push
jo
adc
mov
add
mov
popf
rcrb
cltd
dec
push
adc
push
loop
fimull
call
add
pop
xor
scas
leave
jbe
call
mov
lret
push
clc
jp
push
and
add
add
push
jle
push
fdivrs
inc
test
in
popa
jle
jb
sub
inc
push
adc
clc
mov
xchg
cmp
and
stos
sbbb
push
and
cmp
cltd
add
sub
inc
lcall
pop
inc
shr
rolb
inc
pusha
and
sub
mov
jge
shlb
rorb
add
inc
sub
dec
mov
loopne
call
add
inc
add
push
xor
dec
xor
dec
xorb
dec
xor
jb
rclb
push
and
mov
pop
dec
or
mov
push
push
nop
data16
nop
and
out
stos
inc
mov
push
xor
aaa
xchg
add
or
rorb
test
pop
adc
add
mov
jl
ret
mov
or
add
sbb
add
add
dec
xor
push
mov
icebp
icebp
sbb
test
fnstcw
xor
adc
inc
addl
orb
dec
xor
rcrl
out
or
fcoml
outsl
fisubrl
rcrl
loopne
or
and
add
clc
sub
xor
add
dec
push
add
dec
ja
clc
outsl
outsl
out
pop
add
sub
mov
or
incl
lock
or
aas
or
add
sub
xor
movups
pop
lock
xor
mov
enter
sub
push
jmp
sbb
and
or
dec
ret
or
mov
adc
dec
mov
test
jae
mov
sbb
xor
loopne
lea
jmp
std
or
jl
sub
out
mov
add
ret
dec
or
mov
dec
jne
pop
lock
sub
dec
loope
lock
dec
adc
mov
sbb
clc
aaa
jbe
or
fs
adc
jbe
sub
jae
push
pop
pop
adc
xchg
sub
sub
stos
or
scas
cli
popf
decb
scas
or
mov
push
std
fldt
pop
loopne
ror
mov
testl
ljmp
mov
cld
icebp
nop
cmp
adc
cwtl
lret
cmp
test
outsl
and
sbb
daa
xchg
cmpsb
xor
fistpll
lea
stc
jb
andb
fcmovb
cmpsb
pop
xor
lock
mov
add
aas
xchg
adc
gs
inc
add
sbb
fs
or
and
adc
xchg
or
adcl
sbb
mov
lock
leave
loope
nop
loop
push
stos
add
push
adc
sbb
addl
sbb
sub
lcall
or
jae
mov
andl
inc
or
pop
ret
cmpsl
or
jb
mov
and
dec
shll
call
sub
test
inc
adc
sbb
out
cs
aam
push
xchg
adc
jle
lea
or
sahf
or
pusha
ljmp
cld
cs
sub
sbb
sub
and
add
xor
roll
movsb
pop
ret
inc
movsl
adc
dec
je
adc
repz
iret
and
sub
inc
or
inc
adc
call
mov
hlt
call
jbe
movsl
add
cmp
inc
aam
push
mov
push
adc
xchg
add
mov
fisubrl
push
scas
add
dec
inc
cmp
sub
pop
add
cmp
jge
sub
insb
stos
mov
adc
and
add
or
scas
in
test
xchg
loopne
add
add
clc
int3
rorl
es
xor
add
dec
rolb
push
imul
cmp
arpl
inc
mov
pop
push
fisttps
fdivl
and
push
or
jg
cmp
faddl
add
xor
das
or
inc
sub
test
fstpt
push
enter
push
cmpb
loope
adc
and
push
mov
pop
inc
aam
subb
xor
stos
sbb
jecxz
test
popa
push
pop
sbb
mov
imul
lea
cmpsl
in
add
mov
and
or
lock
orl
enter
push
mov
fwait
push
bound
sub
rorb
sarb
xor
in
mov
jmp
inc
sahf
pop
out
lock
or
add
xchg
push
jg
rorb
inc
mov
pop
aam
mov
or
insb
loopne
pop
inc
out
xchg
mov
push
pop
inc
mov
dec
and
adc
lea
ret
lods
mov
addl
jnp
sub
mov
add
imul
mov
jnp
pop
add
sub
pop
fpatan
add
sti
test
cwtl
inc
or
dec
mov
push
ljmp
add
xor
leave
sbb
push
push
xchg
inc
dec
sub
mov
jl
add
mov
ret
dec
mov
adc
sub
push
inc
loope
xor
add
mov
dec
push
jno
pop
cmp
ljmp
aad
pop
es
and
pop
xorl
add
fstpl
xchg
inc
loopne
in
in
sbb
xor
adc
add
xchg
mov
push
mov
sbb
arpl
dec
out
jge
xchg
mov
scas
sub
xorl
pop
hlt
out
sub
or
pop
or
iret
scas
jl
movsb
cs
push
addl
mov
test
jbe
mov
rorb
mov
je
push
dec
aas
or
xchg
adc
cmp
cmp
dec
or
xchg
sbbl
add
mov
or
sub
cmp
adc
pcmpgtd
outsb
rorl
repnz
mov
adc
leave
in
dec
repnz
inc
add
dec
adc
sahf
int
sub
pusha
lods
jno
or
xor
mov
movsl
sti
jge
inc
test
jbe
push
push
sti
mov
stos
or
adc
jae
push
stos
mov
mov
sarl
jb
jmp
ljmp
faddl
mov
push
jne
push
mov
mov
or
sub
es
or
repz
roll
xchg
fidivl
dec
cs
pop
mov
icebp
push
add
push
sbb
icebp
mov
pop
mov
sub
mov
testb
xchg
pusha
into
movl
or
ljmp
jne
inc
add
daa
inc
xor
and
or
mov
icebp
sub
dec
inc
fmull
push
iret
sbb
or
mov
xlat
add
xor
sub
xchg
mov
jle
adc
or
sbb
push
push
sarl
or
cmp
push
jb
ss
sub
scas
push
hlt
add
add
roll
movsl
mov
xchg
inc
sbb
pop
xchg
push
daa
sub
adc
rol
sub
adc
shlb
rolb
pop
dec
mov
mov
sbbl
push
cmc
dec
bound
xchg
dec
cmc
push
sub
add
inc
push
push
dec
mov
jmp
arpl
mov
cmp
push
rcr
cmp
in
sbb
push
and
movsl
add
sub
in
mov
fisubrs
sbb
clc
push
xor
and
adc
inc
fisttpll
insl
add
and
sbb
repz
addl
mov
add
inc
pop
jbe
popa
add
popf
clc
inc
add
inc
cwtl
pop
xchg
enter
mov
dec
xor
push
loope
cmp
cmp
and
inc
loopne
dec
pop
add
or
je
cmp
mov
lea
das
push
add
dec
xchg
lea
sub
mov
les
bound
dec
stos
pop
inc
push
adc
dec
inc
negl
sbb
sar
jns
icebp
bound
stc
ja
clc
daa
cmp
jne
push
cmp
jb
mov
push
js
cmp
mov
mov
es
add
and
outsb
sahf
pop
push
dec
test
lret
sti
out
sub
jmp
mov
ret
sar
add
mov
mov
xor
das
dec
scas
adc
cmpl
lods
sub
ret
mov
in
ret
dec
lahf
mov
inc
sub
jmp
xchg
sub
mov
lcall
cmp
int3
jmp
mov
mov
or
leave
mov
imul
sub
repnz
add
and
or
lods
out
cmpsl
or
jb
sub
adc
std
mov
mov
pop
cmpsb
mov
jl
jbe
outsb
push
jl
lea
adc
aas
call
adc
mov
mov
mov
mov
adc
jg
in
add
inc
dec
mov
jne
sub
or
xchg
or
imull
incb
lcall
adc
mov
dec
pop
xor
repz
xor
pop
dec
add
add
jo
pop
subl
icebp
jg
mov
cmp
je
out
and
push
or
pop
push
popf
lea
neg
xor
and
pushf
xor
inc
cmp
jl
aam
add
sbb
mov
or
aaa
ret
xor
inc
test
add
clc
pop
push
mov
and
jns
push
aas
test
pop
ret
jbe
inc
dec
and
adc
xor
sbb
mov
mov
mov
sbb
aaa
or
pop
add
aaa
add
outsl
shll
mov
ret
rorl
push
jl
fildl
fcoml
in
test
divl
test
pop
je
testb
or
shll
and
mov
and
xor
and
jp
cmp
sbb
push
decl
inc
cmp
push
in
and
mov
das
bound
in
inc
sahf
dec
cmp
leave
in
jbe
hlt
inc
xor
mov
xchg
outsb
in
mov
clc
dec
shlb
test
in
mov
test
lods
std
loope
and
add
mov
enter
shl
add
out
nop
mov
xadd
add
lret
mov
lock
movsw
movsb
mov
inc
inc
inc
adc
test
movsl
scas
bound
jp
jge
cmpsb
sarl
fidivrs
jl
lea
add
adc
push
popf
ret
loope
fisubrs
dec
into
loope
push
mov
add
jo
or
fs
and
rclb
leave
push
cmp
inc
add
adcb
add
push
or
call
mov
add
adc
notl
push
lea
lret
and
dec
ret
mov
mov
fdivr
leave
ficoms
jl
mov
add
adc
add
and
push
lock
or
dec
mov
je
cltd
jle
push
lea
test
xlat
std
ja
add
xor
scas
pop
testb
icebp
cmp
inc
push
es
sub
aam
test
pusha
add
popa
xchg
ret
mov
test
and
push
xchg
divb
or
mov
xchg
xchg
add
or
mov
daa
insl
or
or
stos
or
test
pop
enter
or
in
xor
dec
and
addb
scas
decl
inc
or
dec
mov
in
jbe
rcll
or
and
push
push
push
xor
les
dec
shrb
xor
inc
pushf
lods
pop
aaa
inc
adc
push
mov
mov
fiadds
pop
mov
push
aam
add
scas
jbe
jg
mov
push
push
js
add
xor
or
xchg
mov
das
sbb
mov
imul
cmp
or
lock
or
lahf
popf
sbb
or
out
sub
dec
stos
add
aam
push
dec
sub
push
ret
adc
xchg
pop
push
mov
jno
jecxz
fidivrl
and
cmp
or
lods
in
aam
xchg
mov
and
or
sbb
jmp
xchg
fisttps
lods
jae
loope
add
pop
and
lds
xor
sbb
inc
mov
mov
faddp
xchg
xor
test
sti
sarl
rclb
pushw
sbb
mov
popa
add
dec
and
adc
sbb
out
pop
ret
aad
andl
jmp
sub
pop
rorb
lea
fs
xorb
sbb
cmp
pop
in
add
rorb
pusha
sbb
stc
outsb
xor
mov
fsubrl
pop
mov
test
aaa
and
ret
mov
adc
clc
inc
add
cmp
pop
pop
jns
jns
push
pop
or
mov
add
sub
aaa
mov
sbb
int
enter
orl
push
mov
xor
jns
cmp
mov
inc
or
push
adc
out
rdmsr
mov
pop
inc
mov
add
out
cwtl
sbb
lods
jo,pt
imul
dec
ret
xchg
inc
mov
mov
and
clc
dec
add
push
sub
jo
test
mov
add
mov
or
sbb
sbb
mov
mov
cmp
inc
xor
mov
and
or
shrl
pop
test
mov
pop
sbb
sub
in
push
das
dec
scas
xchg
xchg
jge
inc
jecxz
clc
popa
loopne
xchg
pop
icebp
cmpl
sub
daa
mov
jo
sti
pop
push
out
pop
cmpsl
ret
mov
pop
pop
mov
pop
add
test
inc
lahf
push
push
push
adc
mov
sbb
cwtl
lret
push
add
cwtl
icebp
adc
fcompl
fdivs
dec
je
add
test
add
movsl
add
pusha
xor
push
test
je
fwait
push
sub
hlt
sbb
mov
pop
mov
stc
pop
and
jbe
insl
nop
add
add
sub
xor
fwait
pop
mov
and
inc
xchg
aas
jo
out
andl
and
and
add
jno
mov
jmp
bound
jl
pop
sbb
loopne
mov
adc
nop
sbb
rcrb
cmp
add
sub
push
scas
sbb
pop
push
inc
jbe
adc
pop
jmp
in
lock
mov
xlat
ret
sub
xchg
mov
cltd
xor
insb
mov
or
ss
cld
test
or
or
jo
rolb
sbb
pop
cmp
aam
cld
sub
cltd
or
nop
sub
inc
jo
shll
add
into
xchg
fcmovne
push
or
insl
jmp
xchg
jns
sbb
push
sbb
inc
cmp
add
add
mov
call
xor
mov
push
xor
dec
cmp
adc
clc
mov
sub
push
out
cmp
je
hlt
xchg
dec
push
stos
sub
shrb
aaa
sbb
adc
push
add
mov
cmp
lret
add
dec
rcr
sub
cmp
jne
push
adc
add
add
inc
mov
jne
pop
sub
mov
adcb
or
loop
jl
sahf
pop
in
push
dec
add
inc
loopne
sbbl
push
pop
mov
push
add
js
adc
loopne
jae
xchg
shlb
mov
pushf
cmp
dec
ret
pop
and
faddl
xor
jne
jg
add
pop
test
adcb
pop
inc
mov
cmp
insl
inc
shll
arpl
int
mov
or
test
inc
hlt
xchg
aas
push
push
mov
sbb
or
inc
mov
or
pusha
testb
jno
fiadds
push
push
add
push
push
sbb
mov
out
pop
sub
xchg
jne
cwtl
pop
push
cmp
sbb
mov
sbb
jg
dec
std
add
mov
sbb
out
push
rorl
sbb
sbb
mov
stos
add
repnz
mov
inc
fiaddl
pop
cmpb
leave
jmp
jne
lock
sbb
dec
adc
adc
push
or
inc
bswap
mov
add
lret
into
jne
data16
xorb
notb
or
fbld
cmp
and
add
sbb
sbb
or
dec
pop
pop
inc
and
adc
xchg
pop
inc
mov
adc
xchg
lods
add
xchg
cmp
cwtl
nop
inc
outsl
mov
xor
insb
mov
cmp
push
mov
fistl
and
jb
pop
push
inc
jp
jne
cmp
fbstp
inc
push
xchg
mov
into
xchg
dec
aam
mov
mov
add
sbb
sbb
pusha
jne
les
cld
inc
xor
les
lahf
sub
lock
mov
rorb
shlb
sbb
or
scas
and
mov
ja
sbb
imul
aaa
jmp
sub
daa
or
push
sub
lahf
sub
add
ret
popf
xorb
push
push
int
mov
and
enter
cmp
cmp
or
or
adc
mov
inc
and
adc
ret
lock
test
pop
jl
cs
adc
int
jae
and
or
cmpsb
mov
dec
shll
add
stos
ret
int3
add
add
mov
je
mov
add
iret
sahf
imul
add
and
loope
and
jle
rolb
pop
and
roll
or
subl
dec
pusha
divb
test
mov
pop
lcall
icebp
je
jmp
xchg
lret
sbb
inc
xor
adc
std
call
insb
mov
add
dec
and
cld
imul
xchg
imul
cmp
push
clc
pop
or
mov
or
or
add
xchg
xchg
inc
shrb
or
sbb
sbbb
sub
out
or
adc
xchg
fs
adc
and
inc
mov
xor
jmp
je
mov
clc
fcmovnb
xchg
loopne
cmp
insl
loopne
ljmp
or
sbb
push
or
enter
enter
jb
mov
add
fisttpl
sub
aad
imul
adc
push
gs
inc
bound
lret
mov
xor
and
mov
xchg
jbe
adc
mov
and
scas
mov
scas
das
add
jmp
popa
jmp
sbb
lret
jne
sbb
lahf
sub
push
pop
dec
push
push
or
in
or
add
es
jmp
or
leave
shrl
cmpl
movsl
repz
aas
pop
cmp
add
bswap
pop
in
test
sub
inc
test
dec
dec
pop
imul
lods
imul
fidivrl
xchg
inc
scas
arpl
push
ja
in
jmp
lea
xor
icebp
add
adc
aad
inc
xchg
fiadds
pop
popa
clc
jmp
and
mov
cltd
nop
mov
fsubr
push
aaa
adc
rcll
xor
into
mov
lods
stos
pop
xchg
or
push
push
mov
fsubl
sbbl
out
add
ja
dec
push
ds
jae
repz
or
add
and
icebp
cmc
or
jmp
pop
repnz
sub
xchg
fsubrs
xor
sti
mov
cwtl
xchg
dec
filds
inc
sbb
dec
jns
push
dec
pop
mov
push
dec
push
nop
or
dec
outsl
add
out
sbbl
pop
pop
ret
inc
mov
sbb
or
call
ds
xlat
adc
test
repnz
fimull
adc
dec
dec
addr16
adc
adc
scas
jne
mov
mov
jb
vmovupd
fldpi
shl
movsl
dec
add
mov
fiaddl
lods
scas
pop
pop
push
push
adc
or
push
jae
adc
dec
pop
push
lret
add
push
xor
or
lods
mov
outsb
push
jnp
jmp
mov
stos
cli
mov
jbe
mov
into
sub
push
rclb
pop
inc
inc
inc
into
sub
cmp
in
pop
clc
dec
mov
lahf
lea
shll
jp
push
lea
sbb
push
sbb
dec
add
inc
xchg
jge
sbb
ja
dec
add
daa
in
mov
adc
loopne
push
and
pop
jle
lods
add
and
callw
jne
fisubrs
repz
loopne
pop
inc
iret
in
push
mov
int
jmp
push
sbb
push
xchg
shll
lock
sub
adc
popa
insb
sbb
enter
mov
mov
sbb
cmp
pop
je
jmp
or
push
dec
inc
cmp
sub
out
add
or
add
push
inc
sbb
xchg
fwait
cmp
ret
add
cmp
xchg
mov
cltd
and
icebp
dec
nop
jecxz
in
xor
icebp
mov
imul
inc
cmp
mov
push
insb
adc
aaa
and
mov
add
push
movl
pop
and
pop
test
les
xchg
mov
test
or
push
push
ds
adc
inc
arpl
sbb
sbb
pop
push
and
les
imul
mov
jmp
aaa
dec
push
add
dec
fists
inc
mov
stos
insb
test
add
cld
ss
jb
aad
dec
push
push
pop
in
dec
fbld
pushf
jnp
and
push
push
loope
mov
adc
cltd
mov
and
int
or
sbb
sub
sbb
sbb
xor
test
mov
jl
and
daa
push
push
push
push
or
cmp
sub
bound
loop
shll
movsl
jmp
pop
ja
subl
fmuls
push
cmp
jne
mov
scas
mov
rorl
jbe
mov
adc
shll
adc
pop
cmp
mov
shll
fcmovbe
je
movl
into
add
and
sbb
mov
or
push
loopne
jle
rcrb
js
xor
mov
add
shrb
xchg
cld
sbb
sahf
and
imul
fdivrs
outsl
adc
xchg
push
fcoml
scas
cli
jg
dec
cld
jp
addb
and
mov
aaa
mov
push
and
clc
jg
fs
test
mov
movapd
push
clc
aaa
das
mov
jae
xor
jle
xor
cli
rcl
lret
push
cmc
or
dec
xor
repz
or
jg
rcr
cltd
ljmp
and
in
add
out
mov
push
pusha
aam
ret
or
add
mov
and
scas
add
in
imul
ret
mov
imul
mov
pusha
addsd
int
out
std
out
fldl
sbb
sbb
inc
pop
fistpl
inc
dec
and
and
sbb
xchg
xchg
cmp
sub
inc
or
les
pop
and
adc
incl
xchg
adc
pop
dec
dec
and
pop
xor
addr16
push
push
ret
jge
mov
test
ret
jge
xchg
pop
enter
inc
sahf
adc
or
inc
mov
adcb
or
jb
pop
and
lock
mov
fdiv
ja
jg
cli
add
xor
fldcw
mov
xor
add
xchg
sub
jne
loopne
add
or
adc
and
je
rep
mov
fadd
push
dec
ljmp
or
xchg
pusha
icebp
movb
push
int
inc
mov
roll
movb
clc
jb
push
cmp
ss
and
cmovs
pop
scas
push
mov
jg
call
cmp
jb
rep
jmp
xlat
aad
nop
sub
cmp
or
fisttpl
cmpsb
add
xor
lahf
mov
lea
cwtl
sub
js
sub
ds
inc
pop
dec
mov
aaa
mov
or
scas
adc
jl
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
cmp
jnp
sti
out
push
loopne
fcom
enter
repz
inc
in
out
sahf
out
in
in
lock
out
sahf
hlt
hlt
clc
clc
cld
fdivrs
dec
adc
clc
fnstenv
mov
sub
inc
pop
xor
cmp
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
mov
xchg
daa
fnsave
movsb
cs
nop
int3
shr
mov
add
fiaddl
jl
mov
mov
mov
add
popa
inc
push
out
push
add
nop
dec
dec
scas
mov
mov
add
ljmp
mov
or
push
fs
jns
jns
je
test
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
mov
mov
jnp
mov
aaa
adc
dec
push
push
add
pop
pinsrw
dec
daa
ja
rclb
mov
jp
and
jbe
repnz
pushf
arpl
daa
mov
in
or
adcb
fbld
int3
std
add
aaa
jecxz
lcall
ja
test
cli
mov
test
je
or
addb
popf
push
and
mov
mov
inc
inc
add
in
pop
sbb
mov
jmp
jp
je
mov
shr
rorl
sahf
mov
pop
movsb
sbb
mov
fstps
sbb
xor
pop
icebp
arpl
test
cmp
int3
cli
rol
mov
cmp
mov
adc
add
mov
pop
push
sbb
call
addl
sbb
sub
push
hlt
fcoml
jo
or
lock
adc
rorb
pop
movsb
shl
lock
sbb
inc
sub
sar
jne
xchg
jmp
push
add
push
push
fiadds
adc
push
pop
add
push
faddl
sub
pop
push
inc
mov
xor
xor
out
adc
adc
jne
inc
cmp
xchg
push
pop
push
cmp
ljmp
loopne
adc
cltd
loop
cwtl
push
push
adc
xchg
fdivrs
xchg
and
adc
dec
adc
mov
push
xchg
rcl
hlt
cmp
xchg
lods
and
out
add
andl
fwait
dec
sahf
dec
adc
push
add
push
push
lock
lret
aam
jo
mulb
adc
or
test
push
or
enter
and
mov
mov
and
addb
fdivr
and
scas
inc
xchg
xor
or
aaa
jl
or
stos
add
enter
add
sub
add
ret
insb
mov
shl
shlb
leave
sbb
or
or
inc
pop
rclb
lahf
cmp
mov
mov
push
cmpsb
mov
rol
inc
inc
cmp
aam
xchg
sub
lret
jne
sbb
movsb
ret
pop
jmp
push
loope
sarb
mov
sub
inc
movl
bound
movl
xchg
in
mov
fs
loop
seta
dec
aaa
xor
orl
xlat
ja
je
add
and
fistpll
orl
fisubs
stc
adc
add
lahf
hlt
cld
sub
jae
adc
xor
aad
and
jne
dec
repnz
js
jge
add
inc
jg
imul
push
xchg
push
inc
xor
sahf
insb
ja
xchg
outsb
fsts
push
fiaddl
dec
pop
fists
jmp
mov
cmp
ja
movsl
mov
and
movb
les
mov
stc
mov
or
dec
xchg
add
jmp
or
mov
inc
ds
jbe
loop
orl
jb
neg
ss
sub
add
jmp
mov
dec
mov
mov
dec
outsb
loope
decl
pop
inc
cmp
jb
lret
ret
ror
jp
adc
mov
mov
or
add
addl
pop
fcoms
xor
and
adc
push
dec
fildll
popf
push
cmp
jb
lea
mov
mov
faddl
cmp
jne
mov
rcr
mov
jne
decb
and
adc
or
insb
jge
ret
adc
out
jns
push
dec
jmp
adc
jmp
std
popf
cmp
cld
cld
ret
insb
adc
adc
pop
pop
push
jb
push
push
movsb
sub
or
shr
stc
hlt
or
add
xor
add
sbb
jle
mov
shlb
sub
je
or
push
mov
testb
adcb
sets
pop
cmp
jo
adc
or
adc
pop
inc
fidivl
cmpsl
mov
or
dec
scas
or
dec
and
sub
lock
ja
rcrb
cmp
pop
adc
push
or
or
mov
jne
mov
cmp
arpl
sub
and
jo
aam
into
and
fistps
add
or
jg
add
mov
andb
ljmp
jno
rcr
ret
push
push
push
add
cmp
cmp
adc
inc
test
repz
pop
dec
jmp
stos
int3
adc
xchg
and
push
pop
jle
push
adc
div
jb
inc
or
add
fistpll
dec
nop
cmc
pop
clc
sahf
stos
aam
ret
or
or
push
push
lods
pop
sub
pop
adc
push
mov
mov
jo
nop
push
sub
add
and
call
adc
push
pushf
sub
cs
in
pusha
loope
mov
repnz
push
andl
adc
roll
push
sub
stos
icebp
clc
cmc
loope
loopne
sub
add
mov
xchg
inc
sub
popf
or
out
data16
or
or
jl
or
push
mov
adc
sbb
jge
jle
cmpl
es
call
cltd
jmp
addb
add
inc
jmp
cmp
jne
orl
jmp
sub
add
sub
mov
jo
push
add
adc
cmp
movb
push
xor
dec
or
and
push
mov
or
scas
repnz
or
adc
negl
dec
add
add
lds
adc
lret
decb
fisttps
test
push
mov
jmp
daa
adc
lret
sub
cmp
ja,pn
shrl
xor
leave
cmp
jae
push
or
jb
movsb
jo
add
dec
js
add
and
fcomps
or
je
insb
xor
pop
cld
mov
dec
sbb
flds
call
sbb
mov
sbb
jmp
pusha
push
xorl
icebp
xchg
and
cld
jbe
inc
mulb
add
inc
xlat
xor
and
mov
mov
sbb
fsubrl
in
rolb
sbb
mov
fisubl
push
mov
cmp
inc
fmull
jmp
push
mov
cmp
dec
or
mov
push
xor
inc
or
cmp
push
data16
jge
xchg
leave
popa
cld
stos
mov
shr
shlb
dec
or
adc
ljmp
jbe
or
jle
push
call
hlt
stos
pop
int
mov
loop
jne
testb
sub
adc
rcrb
inc
xchg
ds
adc
adc
and
shrb
shrb
or
data16
or
jno
mov
clc
dec
and
and
rorl
cmp
push
and
mov
cmpb
push
mov
mov
rolb
call
sbb
push
inc
pusha
sbb
fidivrl
xchg
imul
push
aas
push
es
jns
sub
mov
add
cs
and
inc
sbb
xlat
cmp
addl
push
cmp
xchg
stc
mov
jmp
ret
stos
and
or
int3
decb
push
dec
loope
out
and
or
inc
sub
add
add
rolb
pusha
inc
dec
ret
pop
cmp
movsl
xor
push
jbe
sbb
subl
lds
inc
fwait
or
add
dec
adc
jo
rorb
or
ret
stos
test
cmp
jae
sub
add
fists
dec
add
icebp
mov
xchg
into
add
loopne
add
adc
stc
sub
in
push
adc
movsb
jbe
mov
dec
ss
add
outsb
call
inc
js
mov
mov
cmp
icebp
push
mov
and
mov
dec
xor
sub
mov
or
inc
dec
mov
or
jl
out
out
cmp
add
sub
pop
fsub
sub
pop
nop
cltd
inc
cmpsb
test
pop
xchg
mov
jnp
jno
enter
xchg
push
push
sub
push
rclb
sbb
inc
mov
inc
pop
xor
dec
dec
or
jcxz
cwtl
lahf
jae
push
sub
adc
add
jo
lret
sbbl
and
icebp
add
sbb
stc
mov
shl
cwtl
fdivs
ss
loope
aam
jge
or
fsubrs
adc
adc
aaa
inc
cld
mov
adc
stos
add
leave
sub
iret
mov
inc
mov
bound
lret
outsl
pop
cmp
fistl
pop
jl
test
lret
je
push
stc
xlat
rorl
les
pop
adc
sbb
adc
loopne
shlb
or
lea
lods
popa
or
hlt
sub
sub
pop
mov
xchg
pop
pop
icebp
mov
add
add
jnp
insl
push
les
sbb
into
and
push
and
jl
popf
xor
pop
decl
int3
push
roll
sub
clc
ss
jmp
xchg
pusha
jb
pop
add
pmaxub
add
jb
xlat
dec
ret
ds
repnz
jnp
ds
in
pop
or
and
add
xor
or
xor
out
mov
pop
xor
into
lcall
loop
push
mov
aas
pop
je
push
or
shlb
push
jp
int
pop
and
ljmp
sbb
out
cmp
dec
fcoms
mov
mov
lock
orl
or
addr16
pop
fadds
js
push
inc
jecxz
pop
inc
fcompl
loopne
out
add
mov
lcall
jnp
push
repnz
sbb
ss
jp
int
push
and
xlat
test
inc
ret
add
push
cmpsb
fsubrl
ret
push
jmp
push
pop
cld
mov
call
and
xchg
rorb
mov
movsl
in
push
je
loopne
testb
xlat
sub
and
sbb
mov
out
sbb
pop
sbb
push
mov
imul
xor
scas
hlt
icebp
xchg
xchg
fstpl
or
or
jl
pop
push
mov
out
and
jo
push
add
pop
or
mov
cmp
jne
or
clc
movsb
shlb
je
adc
inc
push
sub
inc
int
add
add
xor
and
nop
sbb
shll
rolb
xchg
mov
scas
cmp
mov
pop
push
dec
ja
movsb
mov
mov
pop
je
mov
mov
and
push
add
enter
push
insl
inc
cwtl
dec
ret
jl
pop
fimuls
jle
pop
add
add
cmp
lods
add
or
lds
and
mov
jmp
cmp
je
push
jbe
or
inc
out
call
add
mov
ds
mov
nop
fnstsw
sbb
jl
jge
add
ja
and
andl
mov
jge
pop
mov
pop
outsl
mov
sbb
mov
rorb
mov
fisttpll
out
and
std
and
pop
push
inc
fsubr
test
add
jb
enter
dec
adc
add
les
pop
or
xlat
ss
mov
add
add
insl
mov
sahf
fsubrl
movsl
and
mov
sbb
sub
fsubl
adc
loop
pushf
fsubr
jmp
cmpsb
push
and
mov
jmp
push
sbb
sub
cmp
int
repnz
dec
or
cwtl
aas
lret
dec
mov
ret
mov
fbld
pop
jle
mov
cmp
je
movzbl
add
sub
je
ficoml
lahf
ret
lea
repz
inc
clc
adc
imul
inc
inc
sahf
xchg
add
add
add
adc
mov
add
add
mov
jno
je
lcall
flds
add
in
mov
inc
push
xchg
pop
push
pop
iret
movsl
test
or
or
mov
dec
or
and
enter
or
repnz
or
repnz
in
add
or
or
fsubp
add
add
sbb
cwtl
push
push
mov
push
rsqrtps
adc
pusha
adc
sub
adc
nop
xchg
out
repnz
adc
ret
jns
cmpsb
adc
adc
adc
and
cltd
adc
sbbb
push
push
push
cs
enter
xor
push
nop
ja
sbb
lcall
sbb
call
iret
sbb
sbb
test
sbb
sahf
ja
je
pop
sbb
add
jns
stos
jge
sbb
sahf
pusha
push
push
inc
ljmp
nop
out
pop
pop
jne
add
add
sub
cmp
sub
sub
sub
mov
movl
xchg
and
dec
rolb
inc
out
cmp
mov
push
in
jno
repnz
sub
rol
lea
jns
adc
aad
cmp
add
repz
out
fwait
sbb
cmp
out
mov
fadds
call
enter
adc
nop
negl
ljmp
jmp
lret
sbb
out
in
in
pop
push
mov
in
cltd
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
rorl
cmp
hlt
fwait
mov
in
inc
jg
testb
push
pop
idivl
sbb
clc
clc
cltd
inc
fmulp
add
stc
inc
stc
add
mov
cli
nop
adcl
cld
repnz
outsb
sub
cld
je
cld
push
vmwrite
mov
xor
in
sahf
sub
adc
aad
or
ret
or
or
push
ss
dec
lahf
pushf
in
pop
mov
pop
cmpsb
dec
mov
push
imul
mov
std
sti
in
in
fisubrl
mov
stc
daa
xchg
sti
orb
out
repnz
outsb
call
mov
inc
sub
sbb
pop
jmp
jmp
inc
pop
xchg
pop
in
add
cli
popf
cli
sbb
js
out
out
jno
sbb
out
cltd
push
lock
cli
push
cli
imul
stc
repz
rolb
cltd
sar
xchg
or
push
stc
stc
xchg
inc
pop
dec
fstpl
testl
negl
fwait
in
xlat
enter
adc
mov
mov
clc
cmp
lret
sti
sti
cltd
add
pop
mov
insl
push
in
or
clc
mov
sbb
out
dec
and
adc
cld
sub
xor
pusha
loop
mov
repnz
mul
pop
shl
les
jg
push
push
cmp
out
imul
cltd
out
mov
inc
repnz
mull
testl
imul
ljmp
negb
mov
adc
mov
insb
out
out
lret
and
sub
inc
imulb
xchg
inc
pop
pop
and
add
lret
and
pop
pop
lcall
mov
cmc
inc
pop
dec
pop
jae
pop
dec
repz
div
jns
push
mov
add
add
int3
inc
clc
clc
jecxz
in
adc
popa
cmp
sub
cli
cli
jno
inc
pop
lret
xchg
hlt
pop
jne
and
sbb
das
pushw
data16
hlt
cmp
idivl
jo
sti
pop
push
or
xor
mov
loope
loope
gs
push
loop
leave
mov
adc
jb
popa
test
adc
xchg
in
inc
repz
leave
and
in
rcll
outsb
sub
jmp
adc
mov
xchg
repnz
leave
jo
sbb
int
in
cmc
mov
add
xorl
leave
loope
sbb
movsl
mov
jo
mov
add
les
cmp
sub
cmc
cmc
in
jb
cmc
add
jecxz
xchg
pushf
mov
imul
lock
stc
dec
push
jno
cmc
jne
dec
pop
je
push
lock
mov
inc
add
push
lock
mov
and
test
ss
dec
mov
enter
add
sub
out
ret
aam
and
cmovno
push
add
sahf
xchg
add
add
push
mov
cmp
fwait
adc
loop
jnp
add
adc
or
adc
add
sahf
inc
and
jmp
bound
rorl
pop
inc
mov
inc
add
pop
pop
data16
ss
fstl
mov
repz
ljmp
shrl
push
sahf
push
stos
pop
lret
pop
das
mov
cmp
bndstx
dec
adcb
int
mov
pop
adc
std
cmp
imul
out
mov
add
dec
shrl
mov
push
add
clc
sub
xchg
test
mov
pop
aam
xchg
pop
aam
lock
xchg
clc
adc
hlt
mov
add
test
lock
jmp
mov
fldenv
or
adc
or
test
xor
lea
pop
add
cmp
je
add
in
in
nop
push
js
fcomps
sub
dec
or
mov
testb
rep
jb
je
cwtl
add
or
loopne
aaa
inc
pop
mov
or
add
sub
sbb
mov
xchg
test
cmp
add
mov
sahf
jge
adc
xor
push
sub
add
adc
pop
lcall
inc
stc
push
jo
loopne
inc
jmp
dec
aam
dec
mov
mov
test
pop
and
add
lods
test
jne
insl
add
dec
aam
adc
cmp
adc
movups
or
shlb
nop
mov
inc
inc
inc
lock
pop
cmp
faddl
xor
gs
imul
iret
fisubs
fisubs
ret
test
js
in
shrb
and
cmpsl
mov
xor
jo
test
and
repnz
je
pop
mov
mov
roll
sub
inc
inc
push
in
lods
insb
pop
cmp
enter
add
xor
in
push
lds
push
cmp
adc
mov
xchg
jne
hlt
and
mov
inc
ja
or
insl
sub
nop
jno
insb
xor
add
pop
and
inc
inc
add
test
xor
inc
rorl
lcall
data16
adc
adc
stc
aad
or
filds
out
adc
jne
mov
cmp
inc
inc
cmp
sbb
xor
out
jns
mov
mov
mov
enter
push
cmp
in
lcall
push
mov
ja
push
inc
mov
adc
mov
clc
mov
outsl
add
inc
mov
std
testb
xchg
lea
dec
popf
jmp
loope
cmp
cmpsl
mov
jge
popa
sub
push
fistpl
or
stos
add
testb
or
or
cmpl
mov
hlt
mov
and
jne
leave
adc
jne
testl
adc
jo
filds
sbb
push
add
or
arpl
push
popa
xchg
repnz
incl
adc
mov
mov
incl
inc
decl
jne,pn
loop
loope
xor
repnz
jg
aad
cmp
cmp
mov
jbe
push
cltd
pop
idiv
mov
sti
xor
push
pusha
or
sub
add
in
pop
inc
fs
dec
mov
mov
xor
xor
out
nop
jo
jmp
cmp
jae
dec
fcompl
dec
dec
xchg
pop
jae
pop
jbe
fisubs
mov
dec
sub
or
adc
mov
stos
adc
cmc
cmp
xchg
pop
push
mov
push
jg
mov
sbb
add
fistl
pop
call
or
sbb
sbb
dec
dec
je
push
push
jne
mov
pop
mov
movb
imul
adc
pop
decb
push
xor
iret
les
pop
stc
sbb
movsb
mov
sbb
lds
xchg
push
add
add
fs
loopne
pop
xorl
test
push
pop
add
dec
dec
popa
or
test
xor
and
sti
push
adc
fisubrl
pop
push
mov
stos
adc
mov
lea
cmp
inc
enter
ja
fnstsw
ds
jge
loopne
pop
sub
push
cltd
pop
idiv
xor
mov
inc
xor
xchg
inc
out
cmp
push
xchg
jmp
or
cmp
pop
addr16
sub
pushf
xor
dec
inc
dec
sub
das
push
push
adc
sub
jl
mov
sbb
jo
adc
or
ret
pop
sub
pop
insb
sub
sbb
mov
mov
dec
dec
add
mov
xor
and
inc
mov
adc
jg
dec
fdivr
add
sti
in
cmpsb
pop
and
mov
jo
sbb
hlt
inc
xor
pop
mov
out
cmp
push
mov
and
xchg
push
jecxz
outsl
push
cmp
mov
or
je
sbb
jl
xchg
pop
das
call
out
pop
add
adc
outsl
mov
out
sbb
dec
jo
mov
je
fbld
or
rorl
or
mov
lretw
pop
push
ret
xor
insb
js
pop
cmp
pop
popl
fstl
or
and
push
mov
sub
mov
mov
xchg
mov
cmp
pop
stc
stos
pop
jl
pop
push
adc
lcall
rclb
jmp
push
pushf
sbb
xchg
mov
and
adc
subb
ret
push
je
mov
push
arpl
pop
movsb
xchg
or
pusha
sar
mov
mov
or
mov
push
loope
xor
add
mov
push
loopne
adc
adc
or
out
call
roll
push
adc
pop
pushl
mov
dec
ljmp
push
ret
xchg
rorb
or
pop
add
lock
imul
sub
or
fdivrp
insl
add
aam
add
fadds
js
push
inc
jg
pushf
clc
and
lea
pop
mov
add
mov
jne
cmp
shr
bound
mov
inc
inc
cmp
je
xchg
mov
cli
subb
daa
adc
add
mov
movsl
fidivrl
dec
je
popa
and
push
fistl
mov
dec
sbb
pop
fcoms
mov
mov
cmp
mov
incl
fdivr
gs
in
data16
push
mov
push
inc
sbb
mov
inc
pop
cmp
mov
ss
push
pop
pop
sbb
lods
mov
pop
dec
dec
sbb
inc
mov
or
fmuls
sbb
or
xchg
dec
loope
and
push
add
movl
sub
lock
mov
loopne
xor
addr16
test
adc
in
pusha
jle
test
cmp
pusha
adc
adc
sarl
adc
shll
loopne
or
sbb
push
pop
lds
adc
inc
int
fs
or
shl
pop
add
sbb
dec
mov
lods
sbb
dec
movsb
jb
push
hlt
repnz
adc
jb
inc
sbb
pop
mov
fsub
adc
cmp
fiaddl
or
adc
fcom
iret
add
pop
addr16
rcrl
mov
mov
and
jmp
cmpl
or
pop
test
fsubr
cs
dec
jmp
dec
pop
adc
sbb
sbb
push
and
pop
and
jo
mov
push
test
dec
clc
or
pop
stc
xor
in
pop
call
sbb
xchg
sbb
sbb
or
lds
sbb
cmp
and
adc
hlt
push
or
ret
sbb
push
jns
and
and
dec
pop
push
cmp
stos
cmp
inc
sbb
sbb
sub
mov
addb
xchg
int3
xor
insb
and
inc
push
jmp
cmp
mov
xor
ja
or
scas
xchg
jno
inc
inc
ss
push
push
xor
outsl
inc
mov
hlt
cmp
jbe
subl
movsb
xor
inc
add
pop
add
dec
jmp
mov
clc
xor
jnp
xchg
sti
clc
and
jmp
ja
xor
aas
pop
movsl
xchg
cmp
jno
in
dec
aad
push
inc
aam
jns
inc
mov
sbbl
jmp
add
add
dec
aam
push
jge
jne
cmp
push
mov
xchg
testb
adc
cmpb
jo
xchg
or
mov
jmp
roll
fsub
adc
adc
hlt
add
and
sbb
add
loopne,pt
leave
mov
push
sub
mov
shrb
inc
insl
cltd
loope
cmp
jmp
pop
arpl
xchg
push
mov
outsb
fs
outsb
adc
iret
or
mov
gs
std
rol
inc
add
jecxz
sub
mov
push
out
or
in
or
ss
addr16
mov
jo
jno
ds
xlat
cld
cmp
push
xor
pop
aad
add
outsb
jbe
adc
mov
adc
and
cmp
and
iret
es
push
mov
sub
arpl
xor
adc
js
insb
mov
mov
xchg
dec
or
call
xor
and
dec
inc
pop
lods
cmpl
insl
clc
sbb
rorl
xor
sbb
enter
push
adc
cmp
adcb
xchg
dec
push
aam
pushf
enter
sbb
pop
sub
jmp
nop
mov
test
adc
dec
lcall
std
data16
sbb
jmp
xor
and
insb
jmp
add
mov
and
inc
loope
fwait
sarb
mov
sub
loop
add
movsl
mov
bound
or
jl
sbb
imul
cmp
mov
ja
push
stos
mov
sbb
es
out
pusha
sub
rclb
jge
cmp
js
or
test
cli
popa
cwtl
sbb
jge
nop
shlb
sbb
ja
lods
mov
mov
or
js
mov
fstpt
add
xchg
pop
sbb
push
sub
sub
push
mov
dec
xchg
shll
repnz
inc
jle
jmp
jg
adc
mov
lcall
xchg
cmp
mov
add
test
sbb
cmp
mov
fistpl
ror
mov
cmpsb
lock
fadds
shl
hlt
fcomp
xor
cmpsb
inc
mov
xchg
std
mov
mov
sbb
clc
sbb
adc
iret
adc
mov
or
and
ljmp
sub
mov
mov
sub
test
lods
sub
inc
xlat
gs
fadds
add
ffree
mov
mov
leave
adcl
rclb
sbb
mov
jecxz
dec
jmp
xor
sub
out
out
adc
in
xor
push
nop
test
loope
repnz
and
and
or
push
xchg
xor
push
inc
stos
xchg
or
jecxz
adc
je
add
iret
xor
push
push
mov
rorb
mov
cmp
sbb
pop
xor
pop
rep
mov
sti
sbbb
add
sub
mov
dec
xchg
pop
push
sub
js
call
dec
jl
stc
pop
xor
inc
and
fmulp
adc
sahf
pop
and
add
cs
xor
mov
leave
or
fdivr
push
add
add
cmp
idivl
push
adc
call
adcl
scas
and
and
push
mov
pop
or
add
dec
sub
enter
or
lock
add
mov
cmp
mov
adc
lds
sub
lock
or
push
sbb
and
mov
jle
or
sbb
sbb
cmp
sub
dec
push
lods
pop
or
mov
pop
outsl
push
push
movl
cmp
es
rcl
xor
cmp
add
xchg
jno
mov
fsubrp
fmul
adc
adcb
pop
jo
sub
cmp
imul
inc
rorl
mov
data16
jno
cld
sub
movsb
je
notb
out
fs
dec
pop
add
push
fisubrs
adc
or
or
or
lret
xchg
ficomps
rol
shrl
or
loope
or
xor
or
cs
add
aas
adc
repz
aam
add
testl
mov
dec
cmc
mov
sbb
add
lret
lods
dec
rcrb
shlb
outsb
test
mov
inc
idiv
rclb
mov
and
jns
aas
add
lea
roll
ja
je
or
sub
inc
xchg
or
cmp
and
or
cmp
cmp
cld
ficoml
push
push
inc
ret
dec
aad
and
sub
push
cmp
nop
fistpl
push
and
push
add
push
int
push
orb
popf
jecxz
adc
and
je
and
cmpsl
in
push
nop
mov
adc
jp
roll
mov
pop
sarb
mov
mov
or
rorb
ja
lret
std
lahf
push
roll
cmp
push
and
add
orb
inc
loopne
mov
pop
xor
bound
or
loopne
clc
cmp
jo
jg
dec
fidivrl
push
or
mov
cmp
jno
pop
shlb
add
xor
pop
or
lock
mov
mov
sahf
lcall
rorb
jmp
mov
call
add
test
push
sub
mov
xchg
shll
aam
jb
stc
jb
cmp
std
jne
fmuls
das
sarl
jmp
sub
stos
pop
aaa
je
enter
iret
add
fs
xorl
add
mov
sbb
outsb
stos
mov
inc
adc
mov
repz
shlb
lock
out
into
std
loopne
out
inc
fidivl
push
jmp
sub
mov
pop
pop
push
add
fdivl
aad
add
and
xchg
adc
rolb
jnp
jae
pushf
movsb
decb
push
call
dec
xor
incl
lea
mov
test
push
push
imul
cmp
leave
inc
push
lea
call
leave
xor
popa
popf
loop
mov
aaa
jmp
loopne
xor
in
into
sub
cld
jmp
loopne
orb
or
lcall
mov
mov
inc
sub
adc
inc
sbb
add
push
add
jb
xor
inc
rcrb
mov
sbb
adc
mov
inc
mov
inc
inc
inc
dec
jne
roll
inc
push
ds
push
jl
sbb
xor
mov
mov
popa
jo
mov
aaa
rorl
inc
dec
jne
rclb
shr
test
fdivp
lret
add
jnp
xchg
jmp
cmp
and
shrb
and
faddl
je
loopne
adc
fcoms
mov
pop
mov
mov
mov
push
sub
mov
or
and
mov
rcrb
inc
sub
pop
sbb
adc
insl
add
insb
pop
loopne
sbb
xor
cld
aas
lret
inc
xor
cmp
ss
int3
dec
pop
mov
cmp
jo
insb
ljmp
xor
mov
mov
mov
jl
mov
call
dec
loopne
jecxz
or
pop
sub
jmp
xor
dec
sbb
movsb
sti
sbb
mov
xor
add
lret
bound
ret
ss
push
out
arpl
pop
sbb
jno
push
pop
ja
es
nop
lret
test
in
add
cmp
ret
add
lea
cmpl
inc
lret
and
pop
movl
pop
add
add
and
in
or
loop
idivb
pop
or
sbb
icebp
or
cmpl
popf
cltd
mov
pop
sbb
or
rolb
testb
sub
testb
mov
rcrb
and
dec
pop
cwtl
rclb
clc
inc
mov
push
cmp
jne
stc
ret
pushl
out
jle
jg
or
or
push
cmpl
adc
shlb
cmp
add
fisttpl
or
lock
decl
jne
sbb
dec
xor
stos
or
add
sbb
mov
or
rorb
jp
or
cmpsb
or
pop
ret
pop
ret
jo
or
jo
sbb
or
xorl
sub
or
pop
push
xorb
push
je
push
mov
jp
js
jno
inc
push
mov
dec
pop
in
or
mov
jo
pop
jbe
sub
and
or
sbb
xchg
loope
insb
loope
add
pop
add
mov
mov
rcll
jo
sub
sahf
adc
mov
mov
frstor
push
cmp
sar
mov
add
sbb
daa
mov
es
fisubs
mov
push
add
pusha
and
mov
jae
scas
add
out
test
jns
adc
insb
inc
rcrb
loope
loopne
lea
jbe
and
jmp
jbe
push
incb
pop
mov
inc
jge
sbb
xor
and
repnz
into
xchg
pop
xchg
mov
fadds
ficomps
push
cld
push
jo
das
lret
sub
shrb
push
adc
movsb
xchg
jne
imul
cmpsb
cmp
mov
jno
push
insb
jg
fcmovnu
mov
xor
outsl
mov
dec
cmp
orl
dec
push
subl
xchg
xchg
cmp
movsb
pushf
xchg
adcl
or
mov
push
or
xor
shlb
sub
ret
push
add
mov
xchg
clc
pop
lcall
push
in
xor
in
push
in
inc
dec
or
subps
xlat
andl
push
rcpps
push
dec
ja
push
push
nop
xchg
sti
jbe
gs
std
cmc
and
pop
cmp
je
jle
arpl
test
jno
mov
inc
popf
insl
jg
loop
loope
jge
orl
inc
inc
xchg
lahf
nop
movsb
ljmp
mov
jb
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
iret
ljmp
out
inc
lods
popf
jno,pt
test
dec
ja
out
xor
pop
into
jle
mov
jge
dec
sub
inc
mov
test
xchg
mov
cli
mov
aaa
or
xchg
xchg
stos
push
dec
mov
xor
cmp
fldl
cld
dec
jp
mov
mov
adc
mov
movsl
dec
inc
lock
sbb
and
into
jbe
sbb
mov
call
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
ljmp
enter
imul
pop
test
or
pop
xchg
mov
push
adc
mov
jno
mov
nop
test
mov
ret
pop
popa
dec
ret
mov
movsb
add
js
jmp
jge
jns
rorb
add
adc
add
add
popa
cmp
mov
bts
jmp
mov
or
mov
pop
jle
js
nop
adc
and
sub
push
call
loopne
or
mov
push
mov
repz
dec
or
push
xor
and
loopne
cmp
adc
mov
push
rcrb
xlat
jmp
mov
lock
xchg
mov
insb
mov
add
push
push
push
lea
lock
lock
movsb
or
push
mov
les
out
int3
aam
lea
inc
add
outsl
jno
mov
push
sbb
inc
sub
sbb
adc
lods
test
adcb
outsb
cmp
cs
sbb
fsubr
xchg
or
roll
mov
inc
jmp
lea
inc
cmp
ret
data16
adc
jo
ret
lret
jne
push
out
dec
inc
fcmovb
dec
cmp
jge
inc
mov
or
test
movsb
stos
test
ret
add
pop
inc
and
add
adc
aam
dec
pop
or
andl
add
add
pop
pop
pop
or
and
jno
adc
mov
aas
dec
fidivl
hlt
fdiv
jmp
ds
hlt
call
sub
daa
enter
mov
daa
and
push
enter
sbb
inc
or
je
insb
popf
fs
fwait
dec
dec
adc
loopne
jae
add
dec
jae
cmp
push
pop
sub
push
jge
jmp
outsl
mov
and
insl
dec
or
fcomps
or
jne
or
push
imul
mov
je
sbb
inc
lods
ja
adc
inc
lcall
lock
or
int3
push
test
daa
adc
jbe
outsb
cmp
jno
and
xchg
cwtl
ret
dec
les
push
std
push
ja
shll
cmpsb
aam
add
orb
push
sub
push
mov
mov
cmp
enter
movsl
xor
je
movl
xor
sbb
xchg
cltd
fmuls
add
rol
xchg
mov
pop
push
sbb
cmp
es
gs
push
ljmp
js
push
les
mov
sbb
imul
insl
adc
out
es
jle,pt
test
push
popa
adc
es
xchg
mov
inc
xchg
mov
or
inc
pop
sarb
pop
dec
push
orb
ficompl
pop
xchg
push
or
or
xchg
jmp
inc
inc
and
xchg
orl
mov
xor
inc
incl
and
jno
xor
push
in
add
imul
dec
ret
mov
inc
jle
js
mov
incb
pop
test
orl
movsb
lock
subb
inc
adc
test
pop
roll
inc
cltd
adc
cmpsb
out
pop
out
jbe
push
inc
enter
inc
xchg
cmpsl
sub
or
and
fmull
xor
inc
mov
sbb
adc
pop
testl
in
pop
pop
lds
test
push
mov
es
dec
xchg
sbb
sbb
aam
adc
in
fdiv
dec
ljmp
add
or
push
sub
pop
cmp
add
add
and
add
pop
jp
mov
and
xchg
aam
inc
xchg
add
cmp
sbb
leave
sbb
cwtl
lock
mov
or
imul
mov
pop
add
add
inc
mov
jbe
or
sbb
mov
inc
loope
movsl
xchg
dec
test
adcb
xor
sbb
mov
cld
insl
lea
xor
add
jmp
sbb
insb
test
cltd
je
inc
jns
outsl
dec
mov
sub
xor
test
xor
jo
sahf
xchg
rol
adc
xor
sub
or
in
mov
les
mov
cmp
aam
adc
jae
lods
cmpsl
sti
lods
cmp
mov
or
mov
notl
sub
movsl
push
add
test
in
or
cmp
and
add
pop
mov
dec
outsb
mov
mov
lea
jle
ja
mov
adc
cmpb
pusha
loopne
push
pushf
cmp
sbb
sar
pop
mov
rolb
mov
inc
pusha
lea
out
mov
fdivr
mov
push
lret
mov
dec
or
je
or
sbb
popf
adc
push
pop
push
add
icebp
sbb
cli
push
mov
xchg
sub
or
ficompl
adc
idivb
ds
fisubs
add
sub
push
imul
lock
push
lea
ja
test
movsl
mov
mov
sbb
in
hlt
out
sbb
test
stc
cmp
push
shll
or
inc
insb
je
lock
adc
lds
loopne
sub
xlat
scas
popa
sbb
pop
and
das
xchg
ss
or
xor
mov
mov
movsl
fnstenv
and
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
lret
xchg
aam
jp
movsl
ret
rcll
sbb
pop
push
mov
xchg
fs
rorb
push
fidivs
xlat
sbb
jle
inc
je
pop
push
or
mov
test
mov
ret
add
hlt
dec
adc
push
fdivr
or
lock
cmp
push
jae
adc
test
sbb
mov
fldt
xchg
mov
aaa
jne
das
mov
cmpl
push
add
dec
and
jne
in
or
test
mov
pushf
in
rcl
in
sub
mov
or
pop
push
jnp
adcb
push
ret
subl
shlb
xor
push
addl
negl
jno
testb
rol
hlt
dec
lret
or
jae
jo
fdivs
mov
mov
mov
movsl
iret
or
pushl
adc
test
jge
outsl
lds
hlt
mov
inc
cmpsb
sete
mov
add
cmp
xor
add
or
je
sarb
jae
jns,pn
push
sbb
sub
test
jmp
loop
mov
push
pushf
into
add
addr16
incb
je
cmp
je
test
cmp
sbb
push
enter
xor
aas
add
pusha
test
mov
shrb
je
data16
movsb
sub
adc
mov
daa
nop
cmp
lds
mov
adc
jecxz
sub
push
add
ret
lea
jg
addr16
mov
jmp
cmp
jle
jae
mov
xor
test
pop
repnz
mov
xor
int
or
mov
out
push
mov
mov
inc
cld
adc
lea
cmc
mov
xlat
mov
lea
popa
lock
push
push
mov
mov
pop
enter
lea
stc
rcll
push
pop
xchg
cwtl
in
push
jo
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
adcl
aad
hlt
add
jne
outsb
mov
aam
jae
addr16
decb
mov
dec
inc
daa
and
mov
in
lahf
shl
lahf
test
sbb
push
sbbl
dec
in
push
lret
mov
jne
push
push
xchg
je
adc
xchg
cmpsb
jmp
out
or
fnstenv
jle
je
cltd
rorb
or
sbb
jl
sub
call
add
in
pop
js
xor
fimull
jge
add
inc
sbb
dec
test
pop
mov
or
jne
and
ret
fnstcw
lea
or
push
inc
pop
js
ljmp
push
lock
scas
xor
xchg
mov
add
mov
dec
jmp
pop
push
jo
out
xchg
sub
inc
cmp
mov
aas
je
into
sub
pop
adc
or
add
inc
jmp
mov
jmp
dec
push
inc
fdivs
xchg
call
cwtl
std
cmp
push
je
xor
icebp
xchg
gs
fisubrl
fwait
sbb
sbb
push
rorb
sub
repnz
adc
push
test
dec
and
scas
push
sub
sub
mov
shl
push
leave
cmp
test
mov
int3
cmp
fdivrl
lea
or
adc
push
jbe
dec
popa
pop
xor
push
fdivs
pusha
push
push
fs
aaa
add
add
cmp
fistps
jae
push
rcll
pop
popa
jle
sbb
xchg
popf
add
jg
dec
sbb
mov
dec
rorl
and
and
cmp
add
push
adc
adc
movsl
daa
pop
mov
push
in
ret
in
sub
movsb
cmp
push
loope
add
xchg
clc
push
add
or
test
or
dec
lds
jno
push
mov
xchg
xchg
push
xor
out
test
rol
lock
inc
rorb
js
das
or
inc
or
mov
aam
add
xor
mov
insb
or
clc
inc
add
push
lea
jecxz
cmp
mov
inc
cmpsb
fdivrl
cmp
and
mov
test
popa
orl
lcall
sti
dec
pushf
push
mov
adc
cmpb
add
pop
daa
test
rcll
or
decb
push
pop
dec
adc
cltd
mov
push
aas
out
aas
mov
ja
xor
pop
cmp
push
pop
lods
pop
dec
nop
dec
loope
xor
in
dec
sbb
dec
dec
les
pop
clc
sub
cmp
lods
jmp
push
mov
ds
add
out
xchg
mov
or
adc
mov
add
sbb
push
dec
arpl
inc
inc
cmpsb
sahf
and
push
pop
sub
add
and
add
push
lea
sub
gs
dec
add
je
pop
or
loope
loop
or
adc
enter
sub
mov
inc
add
fdivl
rclb
popf
mov
jmp
and
andb
mov
or
ja
cld
shr
mov
imul
inc
sbb
or
pop
inc
cld
sbb
xor
add
pop
xor
cmpsl
mov
mov
mov
je
cli
add
cmp
jbe
push
pop
add
imul
jne
mov
and
mov
shr
lea
not
and
decb
jne
lock
add
sbb
lea
xor
add
push
pop
add
or
jp
push
or
cld
add
and
sbb
and
push
or
imul
clc
subl
pusha
jecxz
mov
clc
pop
or
sti
add
out
dec
pop
cmp
lods
or
push
fimuls
idivl
and
inc
pop
lret
cmpsb
loopne
es
jno
mov
sti
xchg
out
not
and
dec
or
mov
mov
sbb
pop
xor
dec
jle
pop
dec
add
cmp
dec
lret
mov
add
mov
xor
scas
ficoms
mov
repz
int3
inc
mov
sti
setnp
adc
mov
mov
inc
mov
leave
push
xchg
andnps
push
or
pop
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
push
mov
sbb
outsl
or
in
add
inc
xor
repnz
and
add
and
stos
inc
mov
adc
shl
add
fcmovne
jle
scas
jp
push
call
aas
gs
dec
sbb
or
sbb
pop
testl
adc
inc
inc
mov
pusha
add
and
pushl
push
push
mov
or
xchg
arpl
mov
pop
inc
mov
adc
sarl
jl
push
cmp
rorl
cmp
mov
insb
das
mov
mov
mov
sbb
dec
and
jne
data16
xchg
push
xor
loopne
arpl
pop
js
add
imul
stc
negb
loope
jecxz
les
sub
out
jg
adc
adc
xor
icebp
pushf
mov
out
xor
add
fucomi
fwait
orl
imul
cmc
incl
and
inc
pop
push
mov
mov
push
jno
rolb
add
lret
lea
stc
mov
imul
fadd
inc
incb
pop
mov
or
hlt
or
or
out
pop
in
rclb
int
xchg
sub
xchg
mov
jbe
sub
mov
or
pop
mov
clc
incl
movsb
out
jae
or
adc
lock
fnsave
lock
call
dec
jne
loop
cld
push
je
clc
add
inc
fmull
sub
shrl
sub
sub
fs
mov
mov
inc
mov
lock
push
rolb
add
js
lds
ljmp
into
xchg
ds
mov
sub
pop
shr
add
imul
push
out
xchg
adc
cmp
movsb
mov
add
and
pushf
jle
int3
insl
test
mov
fnstcw
cmp
lock
adc
aam
jne
stc
int3
push
pop
out
data16
sub
pop
mov
sub
sbb
clc
rolb
add
shl
push
dec
or
in
inc
pop
push
into
add
push
jo
xchg
sub
adc
pop
push
incl
mov
cs
fldl
andl
push
outsb
inc
sbb
adc
jle
imul
shll
lcall
adc
js
jmp
jmp
aaa
js
andl
mov
insb
xor
pop
add
xor
push
and
clc
jl
xchg
inc
or
xchg
jge
dec
pop
jle
imul
pop
xor
push
sar
dec
jp
jo
xor
movsb
pop
in
rclb
mov
fstpt
pop
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
ficoms
add
push
mov
fadd
jo
fidivrs
inc
jbe
mov
mov
mov
push
jb
mov
decb
xchg
dec
in
into
mov
arpl
jns
or
lret
sbb
nop
or
js
inc
ja
push
add
ja
pop
and
inc
cmp
mov
push
push
jge
shr
cmp
mov
or
add
dec
or
out
fldcw
push
nop
cmp
and
decb
xlat
into
ret
adc
mov
adc
jg
cwtl
jnp
jg
sbb
jne
jmp
out
dec
lods
jnp
add
xor
jo
mov
aaa
arpl
or
xchg
sub
shll
push
sub
cmp
in
cmp
fimull
jle
pushl
sbb
in
cli
push
sbb
and
mov
dec
pop
popa
push
add
iret
jne
inc
jno
pop
mov
dec
push
ljmp
add
out
in
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
mulb
xchg
dec
add
xchg
add
stos
inc
sbb
iret
push
stos
inc
cmp
inc
cmp
and
jecxz
mov
decb
jne
pop
pushf
xor
mov
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
push
clc
into
xor
xchg
cmpsb
imul
pop
mov
inc
mov
roll
pop
xor
add
jge
mov
or
push
or
dec
jp
or
push
mov
push
mov
sti
jb
out
or
sub
fwait
rcrb
or
add
scas
and
lods
test
xchg
lea
ds
jne
cmp
adcb
push
ds
and
add
js
jo
cmp
idivb
sbb
loope
sbb
loopne
or
testl
jb
or
xorl
or
jnp
and
imul
sub
add
add
and
cmp
shl
lock
or
add
adc
xchg
pop
lret
mov
sub
fldl
mov
add
mov
es
add
pop
imul
jnp
jge
sbb
inc
inc
cmp
cmp
in
sbbb
push
mov
and
or
gs
adc
mov
call
xchg
or
sbb
push
xchg
inc
orl
push
dec
push
xchg
movlps
push
dec
sbb
movsb
notb
cmp
es
mov
and
xor
xor
outsl
in
lahf
pushl
adcl
pop
push
push
divl
loope
imul
jne
push
xor
mov
std
pop
adc
in
test
push
mov
xchg
pop
jo
dec
fdivr
cmc
add
inc
push
or
pop
hlt
add
push
sbb
pop
jl
sub
fwait
xchg
shl
and
pop
mov
lahf
insb
int3
push
ror
xor
add
iret
xor
mov
or
lea
adc
hlt
or
mov
je
xchg
pop
xor
sarb
outsb
dec
adc
out
xlat
iret
jge
jmp
movzwl
sub
jl
cs
in
int3
test
in
fldcw
scas
into
je
cmp
mov
decl
rorl
sbbb
xchg
imul
test
mov
adc
pop
jne
ret
or
or
adc
frstor
mov
setb
andb
jo
and
sub
jo
add
sub
mov
or
lods
or
mov
pusha
cltd
add
sbb
js
fmuls
xchg
arpl
mov
pop
sbb
add
leave
sbb
insl
enter
and
pushf
ficomps
mov
or
icebp
sbb
and
push
inc
pushf
fisttps
jne
jp
shr
xor
mov
dec
jb
into
nopl
jg
add
sbb
fidivrs
xor
xor
adc
cmp
or
push
lcall
les
sub
inc
pop
std
lcall
ret
sarb
ret
in
shll
lea
jb
movsb
cli
sub
nop
call
imul
test
test
dec
mov
mov
sbb
enter
push
mov
leave
enter
adc
test
test
add
iret
enter
insl
and
push
cmp
inc
dec
outsl
xchg
sbb
repz
jo
repz
inc
push
jns
xor
add
mov
xchg
addr16
mov
test
stc
push
or
pop
js
test
sub
repz
mov
call
add
mov
rep
popf
movsl
rcll
hlt
xchg
repz
xchg
sub
lods
nop
and
and
xchg
cmpsb
adcb
sub
or
lods
enter
add
mov
adc
push
leave
and
rcrb
js
loop
in
add
add
in
mov
nop
xchg
test
test
pop
cmp
popa
mov
call
cld
enter
js
mov
mov
inc
pop
movsb
cmc
or
sub
push
out
mov
mov
mov
scas
out
jns
out
mov
popa
cmpsl
cmpsb
mov
xchg
icebp
or
jne
cmp
stos
jl
pop
push
pop
lea
iret
sub
mov
lock
lret
push
imul
push
pop
and
jae
xchg
ret
mov
or
mov
test
je
rorl
xchg
adc
add
mov
pop
add
or
ret
adc
loop
push
cmpsl
or
or
push
incl
inc
das
mov
pop
push
mov
imul
jnp
inc
and
push
adc
or
push
mov
mov
jmp
ffree
xor
mov
repz
xchg
add
cmp
add
fcmove
insb
xlat
and
adc
cmp
outsb
jecxz
in
jne
cmpsl
xor
hlt
call
mov
aaa
inc
cld
push
or
aaa
and
mov
cmp
adc
add
add
and
int3
push
or
nop
mull
out
sbb
push
or
shll
enter
jno
mov
add
and
dec
mov
mov
or
add
cli
inc
shll
mov
inc
mov
and
push
and
xchg
icebp
add
adc
cmpsb
xor
jg
fidivrl
add
mov
rcll
sub
fistl
sbb
dec
mov
int
enter
je
dec
xchg
push
or
or
dec
int3
pop
inc
fdivrs
adc
imul
out
fldl
roll
mov
add
call
jns
or
ja
mov
jne
xor
mov
pop
lcall
bnd
jmp
jo
push
dec
sub
fldt
mov
sub
sub
xchg
dec
je
test
and
sbb
sti
inc
in
fldenvs
lcall
pop
sbb
jns
mov
add
ret
scas
popa
insb
movsl
sub
sbb
repz
or
xchg
pop
or
inc
add
jno
mov
sbb
hlt
test
xchg
aaa
bnd
in
inc
stos
cmp
mov
push
fdiv
fsub
xchg
sub
push
push
shl
push
lds
sbb
aaa
jne
das
sahf
adc
jo
repz
lock
shr
cmp
push
cld
add
xor
pop
push
mov
push
das
sbb
iret
jnp
push
inc
andl
add
mov
pop
jecxz
enter
test
cmpsb
insb
dec
inc
sbb
hlt
orb
lock
or
fs
mov
fdivs
sbb
jle
mov
jle
aam
pop
push
pusha
loope
call
hlt
loope
mov
out
push
push
xchg
jmp
inc
faddl
cmpb
and
or
jmp
test
fmull
sti
sbb
test
jp
cmp
mov
ret
and
push
push
adcl
sbb
xor
push
or
movsl
xor
sub
mov
jecxz
adc
add
adc
jne
dec
xchg
xchg
mov
fidivs
js
lret
inc
lods
add
in
test
cli
inc
in
mov
shlb
lock
cs
lret
int3
call
mov
and
std
mov
xchg
sbb
std
mov
jne
mov
mov
cmp
out
clc
mov
fcom
stos
pop
add
incb
add
out
add
jg
xchg
dec
sbb
jnp
cld
loopne
sar
lea
testb
xchg
lock
or
and
out
adc
and
loopne
mov
sti
test
inc
pop
cs
inc
pop
int
or
push
std
pop
sbb
out
or
adc
sbb
mov
mov
mov
jb
adc
dec
lods
or
int3
sbb
lock
adc
dec
xchg
fldpi
xchg
push
pop
or
add
inc
lret
in
addl
in
orb
test
jle
iret
mov
cmp
fcompl
stc
or
sbb
arpl
mov
sbb
pop
pop
enter
mov
push
xor
outsb
or
inc
loop
cli
arpl
push
jmp
lahf
jecxz
cmp
inc
add
push
pop
aad
imul
sbb
cmp
sub
inc
xor
in
in
aad
test
imul
imul
mov
and
dec
lods
cmp
mov
ret
jp
jp
jae
mov
sbb
dec
mov
push
out
scas
jg
in
mov
adc
add
mov
push
pushf
cmp
xor
xacquire
dec
js
cmpsl
adc
pop
mov
xchg
sub
adcb
sti
push
inc
cmp
or
std
mov
std
dec
inc
dec
mov
pop
pop
inc
dec
cwtl
add
movsb
popf
divb
xor
shrl
stc
mov
cltd
push
adc
notl
mov
movsb
loopne
loope
sub
test
push
fcmovbe
imul
jns
daa
mov
sahf
subb
mov
je
inc
cld
mov
pop
pop
and
movsb
cmp
sub
enter
lcall
sub
rorl
or
pop
add
into
je
add
jp
mov
adc
test
adc
push
test
mov
and
mov
sbb
mov
mov
addr16
das
lock
fdivr
fdivr
insb
movl
add
jmp
lods
mov
ret
test
iret
mov
shlb
popa
and
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
ret
push
mov
popa
cmpsl
pop
rcr
xor
daa
push
shrl
les
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
push
push
rorb
sarl
rdpmc
sbb
push
mov
scas
xchg
mov
pop
popa
jl
mov
mov
mov
xor
lods
mov
add
daa
leave
aad
test
sahf
aad
test
xchg
lds
mov
xor
add
xor
jne
cmpsb
jb
inc
inc
adc
mov
dec
and
cmp
mov
sbb
pop
nop
xchg
std
xor
mov
adc
test
leave
sub
std
mov
jp
repz
sbb
mov
popa
mov
mov
xchg
fdivrp
or
mov
xchg
sub
push
inc
or
imull
or
pop
dec
push
mov
sar
cs
xchg
pop
lock
xor
push
bound
jmp
jmp
movsb
sbb
jmp
scas
jnp
adc
adc
and
int3
cmp
mov
sub
addl
dec
test
enter
in
aam
pushf
jns
lock
push
adc
xchg
dec
cmpl
int
sbb
data16
bound
into
dec
pop
insl
mov
movsb
adc
add
sti
sbb
pop
pop
inc
push
inc
lret
jne
cmp
pushf
addb
xchg
sbb
bound
xchg
jne
fdivrs
das
push
dec
pop
sub
and
and
adc
std
rorb
and
loope
pop
inc
sub
sub
mov
xchg
aaa
fsubrl
push
dec
mov
xchg
and
nop
jo
inc
add
push
mov
decl
push
pushf
lret
inc
dec
push
and
push
lock
js
mov
fidivs
or
aam
movsb
push
add
push
loop
and
data16
pop
pop
pushf
adc
pop
iret
mov
dec
in
push
mov
inc
enter
test
push
enter
lret
adc
add
cmp
cmp
sbb
in
sbb
fs
push
pop
push
pop
jecxz
mov
jmp
ja
repnz
add
inc
ret
sub
lock
pop
pop
ret
xchg
jo
or
mov
mov
scas
ret
nop
lock
sbb
lods
xor
and
dec
dec
push
lock
sub
jbe
or
add
mov
or
je
pop
test
jl
in
lret
movsl
call
add
call
mov
or
lret
insl
or
lret
adc
sbb
jb
or
cmp
or
les
out
xor
arpl
aam
les
adc
xchg
mov
pushf
dec
push
cmp
sbbl
xchg
and
test
inc
stos
xchg
add
cli
push
pop
and
lods
test
enter
and
test
xchg
push
and
xchg
add
cs
enter
jo
in
cmp
mov
adc
enter
mov
in
cmp
insl
and
cmp
jns
mov
sbb
leave
std
cs
jg
cmpsl
add
mov
mov
pop
inc
xchg
sbb
lcall
mov
xor
pushf
xor
and
mov
aaa
sbb
dec
lods
add
les
les
ja
push
or
inc
sub
inc
lds
mov
or
add
add
aad
xchg
dec
movsb
bound
adc
and
dec
inc
leave
test
or
test
stos
nop
or
leave
test
nop
sub
sub
nop
add
pushf
nop
inc
dec
cmpsb
lods
lods
lods
xchg
dec
xor
adc
push
xchg
rorb
pop
je
sbb
bound
dec
mov
test
imul
test
pop
add
cmp
shll
dec
arpl
or
dec
and
ljmp
stc
nop
sbb
je
jg
jg
adc
and
inc
adc
dec
movsl
push
pusha
jo
add
adc
stos
dec
enter
frstor
lods
inc
or
xor
sub
or
push
loop
ljmp
test
lret
stos
js
dec
or
sbb
loop
nop
inc
add
test
jge
dec
jmp
stos
ss
neg
pop
mov
sub
movsl
lock
push
add
jl
push
es
xchg
lret
add
adc
call
or
adc
or
inc
sahf
jl
dec
add
adc
push
and
xor
dec
push
pop
xchg
out
outsl
inc
or
jbe
jle
sbb
push
sub
mov
loopne
andl
adc
imul
mov
enter
lock
lret
xor
mov
or
push
sub
test
and
call
mov
sub
push
lods
or
cmp
nop
sub
ja
cmc
or
shrl
shll
fld
xlat
xor
adc
in
lock
rep
jge
mov
xchg
in
cli
rcll
in
in
push
testb
and
or
enter
push
push
int3
pop
test
sbb
add
sbb
add
pushf
pop
vcvtps2pd
jne
mov
adc
loopne
insl
imul
sub
sub
inc
jne
sub
or
mov
test
into
adc
or
jne
pusha
lods
pusha
mov
sbb
xchg
ja
in
dec
sar
add
cld
cmp
jnp
lds
mov
mul
push
sbb
cmp
add
inc
or
push
or
out
shll
xchg
test
fwait
loopne
repnz
or
pop
shll
ds
xchg
test
jl
fldenv
xchg
inc
lret
loope
cmpb
cld
push
sbb
and
outsl
mov
test
je
pop
pushl
loop
ret
aaa
test
lods
xor
and
cmc
jne
lea
popa
add
sub
shr
fbld
mov
sbb
lahf
and
stos
bound
push
dec
clc
or
add
cmp
pop
inc
cs
add
inc
jp
or
dec
fists
sbb
inc
fisttps
repnz
daa
mov
lock
push
pop
adc
in
inc
pushl
int
add
insl
bound
pop
adc
popf
xchg
lock
mov
push
fs
mull
in
jecxz
ret
mov
iret
push
add
je
sub
clc
inc
push
inc
sbb
sti
sub
inc
testl
ss
andl
sub
pop
inc
dec
jne
inc
jp
add
stos
or
cs
scas
mov
jae
push
inc
test
pusha
or
pop
adc
or
fisttpll
notl
pop
mull
lret
mov
into
mov
pop
push
push
inc
shr
rcr
shr
rcr
insl
repz
std
or
jne
div
pop
dec
adc
inc
mul
pop
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
addr16
adc
or
fisubrl
and
rcr
fcmovu
lret
iret
cltd
cmp
push
add
push
cmp
xorl
mov
dec
adc
jmp
sar
pop
push
pop
clc
mov
movb
les
mov
inc
stc
adc
rcrl
daa
inc
imul
xor
adc
rcl
and
jae
push
iret
stos
and
sub
add
sbb
xchg
clc
in
sub
cmpsl
and
or
movb
cmp
push
and
dec
leave
cs
incb
pop
ret
inc
bound
add
mov
xorb
lods
icebp
nop
shrb
cmpsb
imul
mov
int
dec
sbb
std
dec
add
add
cli
divl
test
add
lea
cmpsl
inc
fsubl
jb
loope
repnz
aas
push
push
mov
ficompl
lret
sbb
sub
test
ret
cmc
std
cmp
lahf
add
lea
cmp
and
cmpsb
xchg
pusha
ljmp
andb
daa
push
dec
add
mov
orl
or
fs
xchg
pop
and
jl
mov
pusha
mov
cld
sbb
subb
push
icebp
sub
add
pop
push
dec
and
js
inc
adc
pop
add
mov
aaa
adcb
stc
or
mov
inc
xor
xchg
xchg
movsb
xor
mov
out
add
dec
xor
movl
and
adc
cmc
out
sbb
lock
xor
js
xor
add
add
fdivl
loope
add
in
mov
lahf
sar
sbb
fidivrs
sub
inc
lock
js
adc
add
and
pop
xor
cmc
and
add
xlat
xchg
sarl
js
pop
mov
jbe
mov
sub
scas
lods
or
repz
fidivl
push
leave
gs
and
inc
jle
outsl
shl
add
fsubrs
mov
test
shll
or
xor
pop
xchg
inc
and
test
sahf
adc
je
mov
fdivrp
iret
sbb
addr16
push
sub
or
cmp
mov
adc
mov
mov
inc
loopne
xor
ret
icebp
lcall
mov
push
jo
and
ljmp
inc
push
push
jo
inc
jne
or
test
int3
pop
inc
mov
ss
out
cmp
je
fimull
pop
ss
and
or
out
faddl
aam
xchg
pop
addr16
in
inc
outsb
or
cld
or
add
pop
pop
rorb
mov
repnz
and
or
andl
loop
xor
aaa
add
push
mov
or
or
daa
dec
push
and
pushf
inc
sub
icebp
repnz
cmp
xchg
mov
fs
out
pop
shlb
pop
jae
cmp
ljmp
jb
inc
and
mov
sub
mov
inc
cmp
roll
and
xor
daa
dec
sbb
mov
pop
jne
rcrl
adcb
inc
data16
ljmp
dec
sbb
sbb
dec
or
stos
movsb
ja
or
jb
inc
shr
dec
jo
cmp
or
pushf
lahf
popl
clc
push
push
loopne
dec
loope
dec
xor
mov
shlb
sbb
adc
jo
je
cmp
push
xor
jge
and
les
test
cmp
pop
add
cmp
pusha
and
in
cmc
pop
dec
nop
divl
sbb
ret
adc
push
pop
mov
fadds
push
lret
xchg
es
adc
imul
or
mov
je
lods
adc
mov
ret
xor
mov
push
inc
or
sbbl
sub
fiaddl
sti
add
fmull
ret
dec
pusha
out
or
adc
pop
jp
test
cmp
stos
rorl
push
and
ja
lds
and
cmp
xor
scas
inc
add
and
loop
xorl
cmp
stc
dec
and
sbbl
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
inc
outsl
pop
and
add
inc
lock
leave
dec
orb
push
lret
hlt
xor
xchg
les
sub
fistpl
mov
xor
push
mov
gs
push
cmp
ret
xlat
push
cmp
imul
mov
ret
sub
add
pop
jbe
adc
aam
add
into
push
fwait
or
aad
push
adc
sub
loopne
or
lock
shll
fs
xchg
bound
fstps
xlat
loopne
fs
mov
arpl
pusha
fmull
sbb
daa
je
push
insb
daa
jbe
pop
xchg
loopne
cmpsb
mov
je
push
sub
sbb
mull
push
jmp
mov
lret
push
mov
mov
adc
push
xchg
scas
outsb
sbb
fidivrl
faddl
in
test
add
jo
add
scas
adc
sbbb
or
sti
or
mov
aam
inc
pusha
jne,pn
sbb
fnsave
rol
inc
mov
out
jle
fcoml
mov
cmp
jge
mov
or
pop
mov
push
movsl
and
fildl
cmp
sbb
push
push
or
dec
pop
dec
jmp
stos
insb
enter
sarb
add
xor
xchg
aam
push
adc
fs
and
push
sub
pusha
lcall
adcb
adc
xchg
insb
in
das
lret
pop
addl
retw
cmpl
cmpsb
pop
movsb
sbb
add
mov
add
hlt
pop
dec
jne
cmpl
lret
scas
sbb
bound
and
ret
pop
cmp
icebp
cmp
inc
sub
or
lahf
addl
sbb
movsl
movsb
neg
fadd
adc
or
hlt
push
and
jo
imul
ret
call
rcll
addl
sub
push
call
fimuls
cmp
dec
add
sahf
jge
push
jmp
adc
sub
adcl
popf
mov
inc
popa
dec
orb
loope
enter
sbb
push
dec
inc
sbb
xchg
addl
pop
negl
mov
adc
daa
popa
loopne
sbb
xor
ret
dec
add
pop
push
add
in
test
mov
out
mov
jb
or
movl
or
adc
out
stos
rcr
adc
cld
mov
cmpsb
shrb
incl
dec
or
adc
xor
push
inc
rorl
arpl
or
int3
add
inc
mov
push
jb
leave
mov
inc
insl
test
pop
push
or
xchg
or
xchg
add
inc
jge
add
cs
stos
ja
cmp
es
testl
jecxz
rorb
jb
add
adc
add
add
inc
pop
je
popf
dec
lea
pop
es
jb
je
cwtl
mov
or
and
xor
cmpsl
fimuls
fists
ret
shr
outsb
adc
inc
inc
sti
stc
add
push
es
sbb
add
inc
xchg
lods
dec
push
inc
clc
cmp
cmp
leave
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
pop
add
or
popa
mov
pop
pop
and
or
pop
sbb
cmp
imul
call
jmp
sbb
mov
mov
mov
mov
aam
es
stos
mov
aas
jae
mov
les
shl
adc
mov
test
push
mov
jecxz
mov
jge
adc
ds
orl
ss
mov
aam
lock
mov
xchg
repnz
lock
loope
sub
pop
and
mov
or
xor
insb
fs
mov
lods
mov
jb
cmc
cmp
dec
inc
inc
or
jne
repnz
clc
or
push
sar
adc
inc
hlt
fwait
movb
je
mov
xchg
adc
hlt
jae
pop
clc
lea
js
dec
jb
cld
dec
stos
add
cmp
sbbb
lea
ret
jmp
sbb
sub
and
lock
pop
jmp
sbb
or
sti
or
into
inc
data16
int
lock
or
push
fdivs
fcmovnb
clc
mov
fdivs
mov
dec
bound
or
push
push
pop
push
dec
lds
mov
pop
test
in
jmp
add
rep
cmpsl
orb
or
or
push
and
or
cmp
inc
mov
outsl
add
jge
and
dec
xor
or
enter
out
inc
es
mov
hlt
push
sbb
pop
pop
sbb
sbb
mov
mov
add
and
jle
and
andb
cmp
daa
adc
sub
mov
pusha
sar
sarb
jg
popf
push
adc
rcll
sub
hlt
jae
rol
push
push
mov
inc
or
bound
dec
jp
sub
mov
xchg
jg
mov
add
out
add
fnstcw
push
out
inc
add
cs
and
int
push
or
inc
adcl
inc
add
xchg
imul
mov
addl
lahf
or
subb
xor
nop
stos
xchg
andl
ret
inc
adc
cmc
add
or
adcb
push
aaa
xor
ds
fwait
cmpsl
rorl
push
lock
sub
fcomp
loopne
aaa
and
or
add
mov
decl
cmpsl
pop
loope
pop
notb
imul
fsts
inc
push
arpl
xchg
add
aaa
pusha
dec
out
mov
arpl
sahf
or
lods
push
icebp
shlb
xlat
cs
ss
pop
dec
jns
lahf
xor
push
xchg
movsb
loope
lock
movsb
cmp
mov
std
cmp
mov
or
insb
daa
cli
loopne
or
xor
not
push
rol
xor
enter
xchg
pop
enter
add
adc
jb
das
outsb
xchg
pop
xchg
dec
add
ret
sub
sbb
cmpl
dec
add
mov
sahf
fs
das
in
mov
shll
xor
jle
mov
cmp
mov
insb
bound
jae
jg
mov
pop
adc
or
mov
jmp
add
ret
pushl
xchg
insb
add
push
dec
repz
dec
and
stos
mov
lods
xlat
mov
loopne
fmull
mov
repz
lret
ret
inc
inc
adc
lret
sti
pop
sahf
jl
sbbb
pop
test
repnz
mov
mov
loope
xchg
aas
xchg
and
ret
dec
in
sbb
fs
mov
push
pop
je
push
cmp
fnclex
stos
mov
popa
or
stos
sbb
ja
add
push
loopne
jno
xor
leave
adc
mov
sahf
jb
add
mov
pop
arpl
mov
sub
mov
inc
mov
aam
add
xchg
roll
push
nop
test
add
insl
mov
pop
in
out
or
scas
leave
xor
add
and
mov
dec
inc
adc
call
lock
cwtl
push
mov
les
jl
js
push
and
lock
push
sub
jl
cmp
test
adc
or
js
and
push
or
or
mov
ds
cmpl
add
jmp
mov
and
sub
dec
notl
push
push
dec
cmpsb
or
rclb
sahf
sbb
pop
movsl
xor
add
sub
lcall
cli
sub
movsl
js
jmp
and
push
fwait
push
sub
stc
call
in
mov
pop
shlb
sub
adc
adc
ficompl
outsl
jo
fdivs
cmp
mov
imul
mulb
push
fadd
xor
mov
mov
sbb
jmp
pop
add
ljmp
push
push
mov
aaa
lret
enter
mov
in
jo
jle
mov
iret
sub
pop
imul
fsubl
sub
cld
outsl
xor
cmp
inc
jmp
mov
popa
mov
mov
js
cmp
imul
push
mov
jge
aas
sbb
push
sub
push
data16
in
rcr
fsubs
push
mov
insl
and
adc
mov
cwtl
dec
jnp
mov
mov
xor
fsubrl
imul
idivb
xor
push
ja
cld
and
or
incl
mov
mov
push
mov
mov
xchg
mov
push
into
repnz
jecxz
repnz
sbb
in
or
repz
fstpt
inc
push
push
or
jo
aas
lea
inc
dec
in
sbb
xor
add
filds
pop
and
push
add
pop
or
test
sbb
in
adc
or
call
sub
dec
dec
inc
loopne
test
sub
mov
adc
mov
sbb
push
hlt
cmp
pushf
insb
adc
adc
or
jg
add
mov
mov
or
mov
das
mov
mov
mov
xor
movsb
pop
dec
repnz
fimull
xor
add
mov
dec
push
pushl
clc
sbb
loopne
rclb
jo
es
and
dec
ljmp
jmp
das
shll
sahf
sub
sub
sub
das
cmp
imul
xor
push
mov
or
jne
inc
sbb
psubusb
cmp
or
xor
adc
jbe
xchg
pop
les
add
lahf
andb
inc
sbb
addb
and
cmp
rorb
push
xor
xchg
pop
lea
lret
lret
sbb
or
push
jl
das
add
push
and
test
lret
pop
loop
cmp
or
jg
aas
add
fwait
xor
sbb
pushf
sbb
jo
fstpt
stos
and
adc
pop
bound
push
push
inc
jl
jecxz
add
mov
push
sahf
push
xor
push
xchg
adc
pcmpgtb
cmp
jl
mov
sub
cwtl
je
dec
mov
xchg
rcrl
lods
push
or
jecxz
xchg
push
call
xor
inc
sbb
or
sbb
lods
and
movsl
or
add
jbe
xchg
pop
and
mov
shlb
mov
loope
fdivs
aaa
mov
xor
inc
inc
push
clc
push
or
pushf
xor
int3
gs
jp
outsl
mov
jo
mov
cmp
ficomps
cmpl
fwait
or
inc
or
sbb
push
push
or
inc
sahf
jg
xchg
xchg
ljmp
rcrb
in
fldlg2
pop
xchg
pop
data16
push
inc
popa
pop
addr16
out
add
and
and
jo
ret
in
sbb
cwtl
or
fwait
cmp
cmpl
cmp
inc
repz
addr16
push
int3
movsl
and
jge
stos
cmp
push
push
mov
stc
mov
aam
or
in
jle
adc
add
aaa
add
or
pop
fcmove
inc
leave
cmpb
cmp
adc
sub
xor
add
mov
js
decb
cld
mov
add
out
push
and
ja
mov
repnz
mov
dec
shl
lods
sbb
add
repz
shrl
popa
vmread
mov
ficompl
nop
test
je
test
aam
push
out
cmp
cli
cmpl
jne
aaa
inc
lods
dec
jl
push
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
pop
add
inc
movb
cmp
inc
subb
add
xlat
or
fcoms
sub
call
or
mov
jo
aam
subb
jno
leave
lock
xorb
imul
testb
inc
jno
push
or
sbb
orb
lcall
andl
fcmovnu
adc
outsl
add
add
inc
je
pushl
mov
icebp
dec
pop
and
adc
mov
andb
mov
mov
ss
jns
xor
mov
add
mov
nop
fbld
in
aas
sbb
fildl
je
pop
cmc
and
xor
or
or
sub
inc
mov
fwait
sub
leave
in
scas
adc
aad
adc
in
cmp
jae
add
aaa
jl
mov
inc
or
mov
sbbb
inc
les
adc
jmp
sub
inc
jne
clc
push
mov
sbb
add
or
repnz
rorb
push
ljmp
jno
xchg
mov
hlt
push
inc
add
mov
jmp
test
sbb
stos
dec
xor
stos
mov
test
enter
icebp
push
sub
mov
xor
fwait
sbb
add
fsts
or
add
adc
lods
mov
loopne
and
shll
jne
xchg
insl
sbb
pop
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
js
test
loop
mov
pop
jle
xchg
or
inc
pop
sub
add
push
mov
or
jl
push
cmp
subl
adc
in
sub
pusha
push
inc
sbb
pop
mov
push
jle
mov
add
mov
nop
dec
mov
cmp
push
lock
ss
inc
adcl
sbb
lods
jo
push
pop
hlt
outsb
sub
dec
xchg
jnp
insb
aam
call
adc
in
js
add
popf
loopne
mov
push
sbb
decl
cmp
js
insl
jg
adc
orl
sub
pop
hlt
pop
loopne
sub
sbb
cmp
loopne
mov
test
nop
mov
cmc
or
push
push
pop
scas
clflush
push
or
ljmp
jg
xchg
loop
mov
add
or
cmp
notl
repnz
sbbl
and
push
int3
add
test
pusha
lock
mov
sbb
jnp
es
lret
stos
push
sbb
mov
push
mov
add
mov
push
fidivrl
xor
push
imul
mov
cmpl
mov
adc
incl
cmp
je
cmp
adc
cmp
jb
testb
pop
xor
xchg
sub
add
and
adc
inc
dec
add
mov
cmp
push
movb
in
test
pop
je
test
cmpl
mov
divb
cmp
mov
roll
les
inc
int3
in
push
inc
push
in
shll
shr
jmp
das
sti
xchg
mov
and
repz
cmp
xchg
loopne
jno
and
xchg
cltd
mov
cld
jl
xor
mov
inc
and
pop
mov
push
add
and
mov
push
inc
pop
pop
cltd
xor
sbbl
rorb
mov
into
inc
insb
movsb
mov
mov
sub
mov
nop
icebp
push
dec
pop
sub
sbb
cs
in
cmpsb
outsb
je
xchg
cli
adc
sub
lea
lea
or
loop
mov
int3
cmp
in
jbe
mov
sbb
rcr
popl
and
mov
mov
pop
inc
push
dec
je
pushf
test
icebp
inc
dec
sbb
cwtl
push
popf
xor
clc
push
inc
mov
imul
or
sub
sbb
dec
loop
mov
scas
add
add
xor
mov
shll
ljmp
jecxz
cmp
je
cmp
xor
out
ret
xchg
test
inc
jnp
lcall
push
cs
add
push
popa
add
int3
add
test
dec
cltd
inc
addl
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
inc
or
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
inc
nop
jl
sbb
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
inc
outsl
imulb
sub
or
xchg
add
or
add
lock
push
dec
sbb
cs
mov
or
clc
adc
cld
adc
or
sbb
subl
or
lahf
nop
nop
int
adc
xchg
mov
pop
daa
adc
jns
jo
add
xor
ret
cmp
add
pushf
sbb
mov
inc
dec
jne
dec
pop
add
out
jbe
enter
pusha
lret
sbb
mov
or
sub
mov
loop
xor
or
call
sbb
cmp
lcall
dec
ret
insb
es
and
push
aad
pop
or
cmpsb
dec
int3
xor
mov
out
pop
repnz
push
push
sub
add
mov
or
nop
pop
pop
fadds
jne
repnz
mov
xchg
and
test
xor
inc
mov
inc
out
fadds
pop
xchg
js
and
jle
cmp
add
or
jns
jmp
cmp
mov
je
jne
test
scas
rol
inc
push
mov
hlt
subb
add
fmuls
add
mov
scas
rcr
push
pop
pop
int3
sbb
fcompl
inc
lcall
pusha
pusha
addr16
jae
negb
add
pop
arpl
je
push
pushf
jnp
or
insl
in
sub
adc
loopne
mov
mov
jecxz
and
or
add
or
insb
pop
or
ret
ret
popf
push
and
dec
repz
nop
test
mov
mov
int3
inc
sbb
nop
cmp
rcll
dec
cmpsb
push
outsl
pop
mov
rcrl
mov
push
ljmp
add
popa
gs
cmp
and
jl
loope
pop
or
fmuls
jo
dec
xor
cltd
jg
adc
daa
dec
fsubr
imul
pop
popa
pop
mov
add
test
roll
ret
andb
fcoms
sbbb
into
decl
rorb
inc
or
or
daa
loopne
and
mov
add
sbb
adc
mov
out
jb
push
mov
push
outsl
sbb
enter
daa
adc
std
xor
mov
mov
sub
loope
es
push
js
xor
pop
mov
push
pop
inc
add
xchg
and
aad
adc
push
and
scas
xchg
push
fisubs
fcmovnu
jmp
fwait
mov
fs
dec
sub
mov
xchg
mov
ja
adc
sub
push
and
mov
rorb
shlb
push
sbb
cmp
add
xor
cmp
push
rclb
loope
test
push
and
cmp
mov
pop
and
fcmovnbe
sti
mov
sub
sti
add
or
fdivs
mov
and
and
mov
adc
rclb
loope
sbb
popf
add
mov
inc
sbb
sbb
ljmp
adc
push
inc
pushl
mov
mov
dec
sub
cmp
sarb
rcll
popf
pop
ret
fiadds
rcrb
ss
inc
sbb
jns
mov
pop
pop
adc
mov
pop
cmp
in
mov
call
or
push
xor
push
hlt
mov
cmp
xchg
sbb
rsm
jmp
push
add
ljmp
sub
add
fdivs
fsubs
rcrl
icebp
push
xchg
push
dec
shl
shrl
jmp
adc
xchg
or
add
jo
pop
xchg
push
es
add
out
inc
loop
lods
jnp
xor
cmp
pusha
xchg
sbb
xchg
cmp
inc
cmp
inc
adc
ss
adc
jns
jg
xor
sarl
cmp
test
mov
or
add
test
push
or
push
add
jo
inc
mov
or
hlt
aaa
sbb
cmp
jne
movzwl
cwtl
and
in
push
cmp
shl
jno
push
sbb
out
inc
int
dec
call
daa
sub
adc
into
sbb
iret
test
pop
dec
je
fmul
jae
pop
fcomps
mov
pop
fisttps
orb
sub
or
mov
sbb
dec
movsl
adc
jns
xchg
sbbb
sbb
icebp
cmp
dec
and
jmp
fucomp
lock
mov
andl
cmp
lods
fs
cmp
mov
cmp
jne
adc
cli
or
popf
loop
or
adc
or
mov
fadd
push
push
imul
sbb
sbb
add
mov
daa
jmp
add
mov
dec
decl
in
cmpb
dec
add
push
nop
cmp
cmp
rclb
inc
lods
push
xorl
std
pop
push
or
inc
inc
sbb
or
and
mov
dec
dec
andl
movsb
inc
aas
mov
jl
xchg
dec
dec
stc
out
inc
movsb
inc
pop
xchg
cmp
add
roll
xchg
push
xchg
sub
mov
or
mov
fistl
dec
cmp
stos
pop
lock
scas
sub
int3
out
sbb
mov
std
add
stos
jno
inc
lock
sub
sub
jns
je
aaa
divl
mov
jo
lret
jmp
or
pop
sti
mov
pop
or
lea
ja
push
xorb
bound
inc
ja
dec
rorl
fdivrs
jne
ljmp
pop
cmp
adc
gs
adc
xor
jnp
rorb
jecxz
das
sbb
cmpb
or
jg
jae
mov
mov
cld
les
pop
popa
and
ja
sbb
fs
mov
and
je
aaa
push
loopne
loope
xor
mov
xlat
add
sub
cs
shll
or
test
mov
lods
inc
imul
orl
dec
outsl
xlat
adc
xor
or
int
ja
and
adc
and
cvtps2pd
sub
shll
cmp
ljmp
mov
inc
add
inc
bound
or
mov
adc
jae
pop
add
jge
mov
add
adc
addr16
push
and
mov
push
nop
inc
sbb
outsb
dec
pushf
data16
repnz
or
and
ljmp
pop
inc
inc
push
mov
out
push
inc
pop
or
push
or
xor
xor
into
jo
adc
inc
jg
inc
add
fdivrl
push
aas
xor
pop
mov
lock
int3
and
sbb
sub
cmp
imul
orl
fisubrs
add
loope
push
in
mul
scas
fs
jge
popf
pop
loopne
lret
push
mov
out
pop
imul
push
pop
cmp
lods
jg
xchg
fnstcw
scas
jl
mov
adc
jge
sub
dec
pop
aas
mov
in
adc
dec
add
scas
faddp
push
jne
ss
mov
and
pop
cmc
icebp
cs
push
pop
lods
pop
jg
jecxz
lods
pop
pop
mov
mov
add
xchg
mov
inc
das
loopne
clc
je
test
add
sbb
lcall
adc
push
hlt
lock
inc
pop
add
dec
cmp
inc
and
dec
mov
jmp
push
and
mov
xchg
ret
je
inc
cmp
shlb
mov
sbb
js
pop
sbb
add
loopne
mov
ja
add
or
mov
pop
adc
add
add
jecxz
fbld
adc
adc
push
jmp
pushf
or
test
lret
jae
dec
and
ds
lock
test
xor
daa
sbb
int3
mov
pop
push
jle
mov
dec
sub
nop
mov
push
aas
pop
pavgb
pop
movsl
cmp
loop
mov
add
sbbb
nop
adc
mov
adc
jnp
stc
or
sub
cmp
dec
int3
ret
shl
fildl
inc
sub
cmp
mov
shrl
inc
push
dec
pop
loope
inc
pushf
xchg
or
and
push
cmp
dec
std
sub
leave
out
push
cmp
mov
mov
xchg
arpl
pop
dec
inc
daa
nop
mov
dec
sbb
jmp
adc
mov
loop
rorb
inc
dec
cmp
dec
pop
icebp
inc
mov
sbb
xor
sub
fs
jle
sbb
es
and
icebp
cmpsl
mov
mul
test
sbb
and
cmp
mov
in
xchg
jo
insb
cld
cmp
sub
adc
loope
imul
out
pop
and
inc
sub
dec
and
dec
pop
into
jl
push
jle
addb
pop
lret
loopne
insl
bnd
or
or
add
adc
push
imul
xchg
imul
and
push
mov
dec
pop
push
inc
les
inc
pop
xchg
inc
pop
in
cmp
test
popa
lods
or
pop
pop
adc
inc
adcb
jp
out
jne
and
mov
bound
leave
movsb
add
xchg
ja
out
mov
jmp
xor
mov
or
push
es
adc
inc
push
repz
mov
pushf
pop
mov
xor
pop
sub
add
push
popf
ds
cmp
cmp
mov
adc
data16
pop
testl
push
loope
repnz
rclb
and
loopne
adc
push
int
rolb
js
mov
mov
test
push
mov
pop
add
lock
sahf
dec
cmp
mov
mov
test
and
add
sbb
repnz
mov
adc
mov
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
push
js
imul
in
adc
or
adc
test
xor
mov
inc
adc
je
push
sahf
mov
sbb
or
add
mov
and
sbb
leave
add
std
or
jmp
inc
popf
mov
mov
cld
mov
and
mov
jecxz
jge
add
or
jmp
jns
cwtl
cli
xor
or
jg
mov
cmp
jge
je
add
and
adc
add
fistpll
shrl
flds
pusha
mov
mov
and
jecxz
pop
fstp
xor
inc
fidivrl
pusha
pusha
les
cmp
jnp
push
addr16
rcr
inc
testb
push
sahf
lret
es
adc
sti
add
cmp
test
fisttps
push
sbb
popf
inc
test
das
aad
dec
jne
orl
scas
jmp
push
mov
mov
adc
testl
lahf
pop
in
lcall
sbb
jmp
push
and
inc
add
cmp
insb
add
inc
push
fnstcw
or
pop
sub
add
adc
adc
push
mov
adc
lods
ret
inc
xchg
cmp
in
dec
sub
out
mov
and
jbe
sub
ficoms
roll
ret
push
xor
mov
mov
or
inc
aam
mov
pop
xchg
push
aaa
sbb
in
cmc
bound
testb
add
les
pop
jbe
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
psubusw
rcll
dec
int3
adc
hlt
es
sbb
pop
mov
adc
repz
xchg
push
clc
ds
mov
pop
in
xor
pop
clc
loop
imul
mov
sub
fmull
faddl
addr16
rorl
pushf
sub
bnd
enter
pop
dec
repnz
fs
jge
test
lcall
insl
in
adc
pop
orl
loopne
cmpl
mov
push
push
and
sahf
jmp
pop
movsb
inc
add
pop
lods
in
aam
sbb
les
and
mov
decb
push
and
fadds
mov
repnz
sub
sbb
jle
push
add
int
add
sbb
pop
test
insb
xchg
pop
pop
inc
inc
out
push
push
xchg
cmp
mov
push
and
mov
add
xchg
mov
lods
test
lds
adcb
out
push
or
or
adc
sahf
sub
jg
rorl
push
and
push
lret
xor
pusha
push
pop
sbb
pop
push
out
add
stos
rcll
repz
adc
test
cld
add
mov
gs
xlat
out
mov
cmp
dec
mulb
xor
push
pusha
cmp
loope
add
or
imulb
sbb
bound
jle
loop
xchg
es
mov
std
add
jp
pushl
lea
push
pop
xor
mov
adc
jbe
sub
xor
sub
loop
and
ret
out
popa
pop
and
or
adc
mov
mov
lock
in
sarb
mov
dec
xor
or
int3
pop
cld
popa
mov
jge
xchg
jno
mov
adc
add
mov
cmpps
dec
test
mov
clc
aad
shl
jne
pop
inc
fs
gs
clc
dec
add
sbb
jmp
lds
adc
or
sub
add
into
xor
adc
mov
cmp
sbb
push
xor
test
cmovge
xchg
shrl
aad
sar
mov
shll
push
or
stos
inc
add
or
adc
jle
out
mov
sub
and
mov
sbb
xor
jo
pop
cld
push
add
in
fisubl
sbb
sub
shr
loop
pop
xor
gs
dec
aad
adc
int
push
fldl
adc
flds
and
dec
add
and
xor
push
or
insl
or
push
mov
cld
mov
fldt
inc
es
test
and
pop
movsl
fstpl
and
or
call
dec
out
xchg
pop
mov
or
cli
mov
push
cli
call
je
sbb
adc
ldmxcsr
test
lret
and
mov
mov
and
jmp
and
and
sti
jbe
jnp
clc
inc
out
add
pop
test
and
cmp
mov
sbb
addl
jo
std
jp
sbb
fidivrs
ret
shlb
mov
sub
dec
pusha
adc
push
imul
and
sub
aas
dec
and
jns
jbe
rorl
pop
jnp
add
mov
lcall
adc
fs
pusha
cmp
test
adc
dec
enter
sub
mov
pop
test
xor
add
sti
jbe
xor
cmpl
je
xchg
cmp
add
enter
pop
xchg
jbe
add
bound
gs
subl
lcall
sub
cwtl
sub
or
jle
mov
cmpw
inc
inc
mov
repz
mov
cmp
int
aas
inc
pop
mov
mov
loopne
nop
xor
cmc
shlb
jecxz
mov
sub
push
data16
fiadds
mov
push
daa
mov
lcall
add
and
mov
stos
stos
or
call
pop
or
lcall
jo
push
divb
cmp
das
mov
loop
add
lret
shl
orb
loopne
lea
pop
popa
daa
icebp
pop
subb
inc
shl
scas
test
std
add
pop
inc
aam
loop
rolb
mov
push
dec
or
jmp
jle
mov
pop
and
mov
out
mov
dec
or
inc
insb
sub
dec
out
fidivs
jbe
dec
mov
add
orb
push
inc
xor
cmp
sbb
sub
adc
mov
in
bnd
incb
jae
dec
imul
push
loopne
roll
pop
ds
aam
sub
add
lock
shlb
add
hlt
insb
subl
cs
dec
rolb
cmp
hlt
test
test
enter
aam
xor
cmp
popa
insb
test
mov
movsl
xor
inc
mov
lcall
dec
out
and
push
cld
not
xchg
sub
popf
je
and
pop
ds
push
or
ficoms
out
popa
adc
and
mov
jl
fcoml
pop
inc
shl
mov
jl
int3
push
aas
adc
xchg
aam
dec
push
lods
xchg
movsb
jge
popa
xor
push
mov
pop
ds
xor
test
xchg
adc
sub
cmc
push
or
sub
lea
mov
add
cli
cmovg
fs
push
adc
loop
pop
xor
pop
add
test
mov
dec
jns
inc
lock
cmp
mov
or
loope
clc
daa
xchg
inc
mov
mov
push
ret
jno
cmp
imul
mov
rorb
dec
add
or
mov
mov
cltd
push
loopne
mov
pop
push
out
mov
aaa
ret
or
mov
add
pop
jle
lods
cld
and
xor
sbb
jge
pusha
and
adc
pop
inc
ret
scas
shl
out
addb
mov
or
xor
mov
or
dec
dec
pop
loop
stc
xor
dec
ljmp
pop
xchg
pmulhuw
lret
stos
sub
adc
mov
adc
adcb
adc
nop
iret
lahf
or
in
sbb
pop
repnz
daa
in
sbbb
xor
xor
jl
push
adc
xchg
jp
mov
xor
push
adc
into
mov
mov
mov
xor
movsb
mov
cmp
pop
ret
mov
imul
into
push
lods
mov
push
cmpsb
xchg
lcall
and
or
jmp
xor
cs
test
hlt
ds
clc
outsl
mov
enter
cmp
ja
push
dec
push
xchg
inc
shr
fs
mov
push
cmp
rolb
test
inc
dec
add
dec
cmp
ljmp
jmp
andl
jmp
notb
test
jbe
mov
adc
stos
xchg
cwtl
and
mov
pop
imul
jle
cmp
push
xor
vprotw
and
push
jmp
dec
push
mov
in
inc
sbb
lods
mov
add
les
pushf
push
jp
sbb
add
push
jmp
aaa
push
orb
mov
jae
jmp
sub
mov
retw
dec
sbb
push
pop
jge
jnp
into
rorl
mov
jbe
sub
nop
add
jne
enter
dec
dec
jae
imul
sbb
sub
dec
mov
and
outsb
mov
add
mov
out
push
fucom
mov
adc
gs
dec
loopne
in
orl
pop
adc
fidivl
mov
lods
mov
enter
test
fldcw
push
inc
scas
call
divl
mov
shll
test
nop
mov
flds
fprem1
pop
cmp
or
add
add
or
loope
testl
ficoms
jp
hlt
pop
push
xorl
and
subl
push
sbb
and
sub
lock
cmp
dec
push
xor
std
jecxz
add
pushf
jmp
push
sub
pop
mov
dec
pop
js
push
mov
dec
mov
in
jne
xor
inc
dec
fidivs
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
mov
mov
mov
add
sub
push
cmp
fldln2
xchg
shlb
add
sub
mov
adc
push
xlat
push
and
out
dec
test
mov
add
cli
dec
addr16
inc
push
inc
mov
sbbl
adc
movsl
test
add
mov
dec
mov
cmp
dec
rolb
js
jecxz
mov
push
xor
mov
lock
and
and
adc
nop
mov
rolb
and
dec
iret
sbb
ja
push
fstl
mov
pop
mov
daa
pop
pop
movb
testl
les
enter
les
mov
jne
test
into
jne
inc
or
cmp
cmp
jne
hlt
int3
and
lcall
inc
paddsw
cwtl
or
add
pop
push
or
or
push
mov
or
loope
or
sub
inc
pop
es
icebp
dec
lock
dec
ja
data16
adc
js
subl
lcall
cmpsb
sbb
stc
or
ret
mov
cs
pop
test
js
rorb
gs
jg
add
lods
add
or
shr
add
flds
or
push
out
mov
bound
or
adc
inc
mov
inc
mov
les
idivb
je
adc
fildll
fcom
insl
fadd
loopne
shr
or
mov
dec
nop
pop
call
jne
cwtl
dec
or
insb
mov
mov
pop
mov
enter
andl
mov
sub
lcall
fistpl
add
ficompl
sar
pop
xor
pop
fs
adc
inc
jmp
call
mov
push
jnp
mov
and
dec
jbe
enter
jl
ret
nop
dec
ja
sbb
lock
cmp
jp
stos
or
sub
push
nop
lret
lret
into
jmp
scas
iret
xor
adc
xchg
rolb
out
and
les
stos
test
subb
jne
push
lret
bound
sbb
das
sub
add
imulb
dec
loopne
sbb
add
pop
enter
insl
and
ret
in
or
mov
inc
or
xchg
add
jns
mov
sbb
push
jo
call
and
xor
jp
out
mov
ljmp
and
testb
jmp
xor
or
fisttpll
ljmp
mov
pop
push
add
scas
xchg
movsl
pop
add
push
mov
mov
mov
or
test
pop
cmp
sub
or
pop
push
xchg
xchg
js
pop
sti
adc
inc
cs
or
pushl
stc
gs
or
out
mov
dec
cmpb
out
decl
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
push
lock
hlt
add
mov
fcompl
addr16
rorb
sub
add
jmp
pop
jae
sbb
clc
clc
les
or
pop
add
in
pop
adc
or
lahf
xor
pop
xorb
cmc
movsb
xor
jns
xor
mov
in
rcr
and
adc
gs
and
and
add
addl
test
sub
xchg
sbb
cmp
mov
shrb
jle
xor
jbe
or
add
dec
and
sub
sbb
test
xor
setg
cmpl
out
clc
add
mov
mov
lcall
loopne
aas
sub
movb
lea
adc
shlb
cmp
pop
adc
push
ficoml
jmp
add
or
loop
lock
lcall
mov
mov
jmp
sub
add
sub
dec
lret
pop
xor
lods
test
add
xchg
inc
dec
inc
scas
or
jns
les
xchg
push
jl
mov
pop
idiv
xor
push
or
sub
add
xchg
mov
rclb
inc
add
dec
popa
xor
dec
mov
sub
or
xorl
aam
xor
jl
lds
dec
pop
insb
push
add
rolb
sub
lock
cltd
pop
loope
clc
in
lock
mov
aam
sub
and
adc
adc
jmp
into
subl
enter
lock
sbb
dec
add
add
pusha
jno
je
enter
mov
popa
mov
inc
mov
sbb
shrl
sbb
sub
push
call
jno
pop
out
jmp
sahf
xchg
fldl2t
call
in
mov
test
pop
lcall
rcr
adc
nop
add
or
inc
loopne
mov
stos
lret
mov
or
cwtl
addr16
mov
or
sar
mov
pop
or
es
mov
and
dec
mov
add
ss
testb
cmp
xor
xor
push
mov
push
loopne
js
js
aam
push
mov
pop
cmp
push
dec
inc
xor
leave
and
add
mov
and
hlt
jle
or
je
cmp
dec
fwait
adc
fistpl
rorb
lock
ret
daa
xor
or
jne
pop
cmp
sahf
movnti
mov
and
mov
or
scas
test
movb
mov
xor
xchg
mov
fs
or
lods
or
xor
push
or
cmp
push
push
sub
adc
fwait
adc
mov
sbb
les
int3
dec
inc
sbb
inc
lock
lock
add
mov
add
and
lods
enter
outsl
jno
movsl
cmp
ss
push
push
cmpsl
clc
mov
mov
mov
stc
xchg
stc
inc
addr16
add
dec
jmp
xchg
clc
sub
mov
inc
and
or
push
rol
push
inc
call
or
lock
xor
pop
cmp
add
xchg
xor
jo
out
sbb
aam
out
and
pop
and
sub
or
pop
add
push
sub
or
ret
mov
shl
fidivrl
rorl
push
cli
sub
adc
test
push
jns
fs
push
xchg
addb
pop
pop
or
or
push
jg
lods
jb
jbe
movsb
pop
inc
dec
dec
xchg
out
mov
dec
pop
or
or
pop
xor
jmp
xor
daa
jne
adc
jae
and
stc
mov
add
sbb
aam
sub
push
lds
js
xchg
je
int
call
les
loop
loope
and
jb
je
sbb
mull
xor
xchg
cld
add
inc
cwtl
or
add
lock
adc
pop
xchg
inc
sub
xor
jge
mov
adc
inc
mov
aaa
add
cs
push
mov
add
mov
and
stos
push
in
test
ficompl
cwtl
sbb
nop
and
adc
xor
add
movsb
mov
inc
bound
loop
inc
xor
repz
mov
jb
push
cmp
aam
aas
inc
lret
jbe
adc
rol
dec
add
lea
adc
sub
pop
add
and
adc
push
insl
push
jmp
mov
cmp
mov
cld
jl
jle
loopne
sarb
inc
or
mov
xorl
jp
shr
loop
mov
mov
sbb
jns
adc
jle
jne
sti
clc
gs
or
pop
data16
lea
ffree
out
aaa
fwait
inc
popa
jle
xchg
int
push
inc
je
dec
cmp
xor
dec
jle
xor
xor
pop
jns
inc
and
sarl
push
dec
xor
or
dec
insb
mov
cmp
les
mov
adc
clc
sub
add
rolb
inc
call
dec
add
clc
push
int3
outsb
push
pop
clc
fstps
or
xchg
cmp
xor
xchg
cmp
andb
mov
ret
ret
xor
adc
add
and
outsl
add
or
adc
bndldx
cmp
orl
inc
push
je
push
inc
ja
or
or
inc
cltd
movsl
je
sbb
cmp
arpl
outsl
sbb
pop
mov
rcll
inc
or
sub
add
dec
das
daa
mov
insl
stos
push
jp
inc
xchg
cmp
movsl
hlt
cmp
inc
dec
jo
add
cmp
lahf
xor
fnsave
imul
push
pop
rclb
push
and
lock
popf
ret
add
lret
add
rorb
addr16
add
mov
cmp
sub
lock
mov
push
cmp
sub
or
hlt
shrb
pop
inc
mov
js
mov
adc
insl
js
xor
shll
pop
sbb
mov
cmpl
push
fwait
jbe
or
push
data16
addb
dec
push
mov
ret
adc
dec
ss
push
outsb
imul
pop
pop
call
pop
rorb
push
lods
test
mov
inc
cmp
or
cmp
add
sub
inc
movb
pusha
mov
jg
sbb
pop
testb
rcl
fdivl
mov
sub
mov
inc
stos
repz
clc
fnstcw
pop
cmp
add
xchg
icebp
inc
mov
mov
sbb
nop
add
xchg
sbb
mov
lcall
jmp
or
jmp
testb
je
push
ljmp
test
inc
addb
sbb
jb
xor
and
adc
push
cmp
jne
pushf
aam
test
adc
add
mov
divl
sbb
mov
mov
sbb
jne
in
sub
push
add
ds
fisubrs
cltd
xor
cmpsl
mov
fs
jp
arpl
into
push
dec
dec
add
add
mov
pop
cld
cwtl
adc
fs
divl
pop
mov
jecxz
jecxz
push
push
xor
clc
add
dec
sub
cmpb
addr16
test
shl
iret
mov
cs
hlt
fsts
xor
ficomps
or
add
push
push
xchg
jae
add
lea
sbb
movl
shlb
ret
xor
xlat
jmp
scas
pop
call
jge
negl
add
adc
movsl
xchg
lcall
orps
das
add
call
sub
push
add
xor
xor
dec
cld
or
cmp
sbb
inc
jmp
dec
push
jns
filds
jo
imul
mov
inc
inc
xchg
gs
cmp
data16
inc
arpl
sub
dec
in
xchg
push
outsl
push
sbb
sbb
mov
jmp
sbb
push
outsl
test
cld
jo
andb
dec
mov
pop
mov
jne
lea
pop
jmp
adc
fistpl
sbb
cmp
inc
xchg
cli
and
adc
repz
pop
sbb
pop
repz
and
je
jnp
dec
loope
mov
push
sub
xchg
inc
mov
sbb
loopne
inc
jle
mov
test
mov
rorl
xchg
mov
dec
movsb
cmp
call
adc
inc
loope
clc
xor
gs
sbb
adc
test
leave
rorb
adc
push
data16
ljmp
scas
mov
mov
jecxz
dec
test
incb
inc
cli
dec
test
fimuls
nop
adc
xchg
mov
cmp
adc
xlat
pop
xchg
mov
loope
cmp
push
pop
incl
fmull
movsb
lea
pop
and
adc
pop
or
or
and
scas
adcl
lret
push
mov
sbb
insb
mov
mov
jo
ss
mov
adcl
out
pop
xor
jmp
dec
push
sbbb
and
cmpsb
and
sbb
cs
sbb
adc
adc
adc
cmp
inc
or
vaddsubpd
testb
ss
test
cltd
rolb
pop
jl
mov
lahf
jg
dec
cmp
lea
or
and
loope
add
shr
add
or
loopne
loopne
popf
imul
out
pop
or
pusha
out
mov
add
or
bound
scas
push
bound
cmpsl
mov
sti
in
stos
mov
cmp
sbb
and
js
mov
xchg
into
popa
sub
bound
push
dec
ret
adc
flds
push
idivl
inc
imulb
jbe
jl
ds
add
pusha
lock
lea
mov
shr
cmp
mov
sub
or
mov
add
push
jp
inc
sub
mov
adc
ret
sbb
outsb
add
rorb
cmp
adc
out
decb
or
mov
outsb
pop
sbb
and
push
cmp
add
es
inc
add
loope
push
cli
and
mov
shl
andl
inc
into
aad
xor
sbb
sbb
clc
stos
loope
jo
imulb
or
test
push
ror
loop
lret
test
je
dec
rolb
sbb
pushw
or
sbb
mov
sub
cmp
fiaddl
ficoml
sbb
inc
mov
sub
mov
mov
imul
sbb
add
cwtl
je
pop
cmpl
add
cld
sub
jne
in
fidivrl
add
call
ss
adc
adc
test
sbb
cli
xchg
mov
aam
add
adc
inc
xchg
push
fstpl
push
mov
jle
test
inc
push
ja
fs
mov
les
or
jle
cmp
or
leave
inc
xor
out
mov
jbe
cmp
lock
jl
cmpb
jl
add
pop
lret
cmpb
idiv
or
lods
inc
insb
xor
add
mov
mov
std
inc
nop
loopne
adc
inc
push
push
mov
push
push
movsl
scas
orl
sub
inc
adc
fldenv
and
stos
add
test
cmp
ficompl
clc
fisubrs
jne
and
les
jp
adc
add
jbe
sbb
mov
dec
add
and
mov
or
or
rorb
loope
into
adc
push
fcmovu
mov
and
shll
out
and
push
je
mov
adc
or
xor
dec
adc
mov
or
pop
pop
xchg
mov
andl
insl
sub
xor
jge
lcall
cmp
aaa
sub
dec
dec
loopne
or
jmp
xchg
or
add
mov
mov
in
cmp
aas
sub
inc
inc
div
fdiv
fiaddl
mov
cmp
inc
sbb
sbb
adc
xchg
xchg
sbb
fcoms
inc
xor
and
fsts
push
test
ret
mov
test
sahf
adc
add
jne
pop
pop
pop
adc
push
jae
or
jae
pop
push
mov
ljmp
shr
adc
sbb
je
icebp
outsb
push
idiv
and
cld
and
aam
xor
jb
mov
ljmp
rorl
adc
pushf
sahf
push
sbb
out
add
stos
push
in
movsb
aam
adc
es
hlt
imul
mov
gs
int
inc
sbb
out
or
into
jbe
jns
aas
cmp
dec
adc
lods
dec
sbb
mov
or
daa
push
push
adc
push
push
dec
iret
das
pop
insb
les
adc
setle
adc
or
and
xchg
dec
lods
sbb
sub
fsubrp
sbb
orb
cs
testl
inc
outsb
xor
dec
pushl
dec
fidivs
xorl
jg
push
inc
or
loopne
adc
and
inc
fcmove
jne
sub
testb
dec
cmp
jmp
sub
je
dec
mov
mov
mov
adc
imul
es
mov
je
std
jg
aad
and
push
cmp
ja
add
cmp
jg
cli
out
ret
cmp
jne
shll
leave
hlt
mov
mov
nop
jp
pop
cmp
pop
ss
or
xlat
dec
add
push
dec
or
push
cmp
xchg
mov
mov
and
and
mov
test
jne
scas
sbb
xor
ret
jmp
neg
je
iret
mov
fcomps
mov
cmp
inc
lret
add
sbb
pop
stc
or
in
lret
mov
pop
dec
cmp
jne
movsl
push
repnz
xor
jnp
xor
adc
mov
xchg
jmp
mov
inc
push
push
mov
js
rolb
xchg
jg
insl
scas
mov
sub
pop
xlat
pop
mov
cmp
sub
orl
cltd
lea
sub
inc
jp
xor
sub
xchg
push
aam
addl
adc
or
mov
test
or
cltd
dec
jae
insb
bound
adc
mov
inc
inc
or
jle
mov
add
dec
mov
out
sahf
cmpsl
push
rcl
rcl
aad
out
sahf
xlat
fcomp
fildl
mov
lock
data16
movb
jmp
or
dec
rcll
dec
in
shlb
cmp
test
aaa
add
orb
mulb
adc
push
inc
push
sbb
push
push
aas
test
sahf
rorb
test
call
divb
jnp
sub
in
pusha
call
jle
mov
or
push
sbb
sahf
fbstp
sbb
push
push
push
add
pop
sar
adc
push
mov
addl
mov
leave
adc
jmp
cmp
scas
sbb
sbb
dec
lea
sar
inc
adc
jecxz
js
mov
sbb
sbb
neg
lfs
mov
pusha
loop
inc
xorl
pushf
sub
adc
sub
mov
lret
adc
sti
add
test
add
sub
adc
jp
jp
mov
xor
adc
mov
or
or
dec
movb
decb
dec
push
adc
add
hlt
mov
ljmp
testl
into
and
lea
gs
or
sbb
imul
andl
jge
les
ja
add
mov
inc
pushf
leave
mov
xchg
out
pmulhuw
ljmp
loopne
inc
or
mov
or
ror
and
xor
mov
or
in
repz
test
rolb
push
mov
into
ja
push
lea
xchg
imul
cwtl
adc
mov
inc
ja
adc
ret
xchg
cmpsl
pop
shll
fdivp
push
addl
mov
jge
jl
imul
test
rol
cld
pop
mov
jle
jle
or
outsl
jne
fmull
inc
popf
enter
add
sbb
outsb
cld
or
and
out
mov
clc
hlt
rorb
push
push
push
lret
jae
and
inc
rolb
scas
scas
ror
lods
or
ss
shrl
fildl
push
in
out
xchg
mov
test
js
or
dec
inc
dec
sahf
dec
sub
add
lock
inc
repnz
cmp
xchg
inc
cli
cli
inc
cli
testb
repnz
imul
and
or
ljmp
push
mov
xchg
mov
sbb
adc
nop
lock
ret
addb
push
clc
cs
push
xor
or
rolb
pop
xchg
mov
dec
inc
idivb
jb
data16
lock
xchg
loopne
cmpsl
add
pop
fcoml
push
mov
repnz
pushw
sub
mov
clc
out
jge
mov
xchg
cmp
rolb
inc
das
and
mov
sbb
inc
xor
call
hlt
add
inc
jo
xchg
out
jne
fdivrs
aam
inc
or
mov
inc
test
dec
ss
daa
ret
mov
lods
dec
adc
push
andb
mov
add
or
call
mov
push
cld
lea
and
mov
int3
inc
pop
insl
rolb
dec
push
inc
add
lods
rolb
out
inc
jl
add
xchg
push
inc
sbb
mov
in
negb
notb
test
cmpb
jge
or
or
xor
jge
inc
or
sbb
jmp
add
push
stc
inc
pushf
jne
sbb
in
das
inc
pop
loopne
aaa
outsl
add
pusha
mov
jge
add
jbe
stos
cwtl
sub
insb
sbb
adc
inc
add
inc
mov
pop
data16
push
add
push
nop
cmp
cmp
outsl
push
lods
test
pop
jle
out
adc
mov
mov
pusha
xchg
pop
nop
mov
pop
add
or
scas
xchg
jb
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
clc
push
adc
jmp
loopne
loopnew
pop
inc
mov
pop
add
je
xchg
lock
dec
mov
push
pushf
jmp
sub
out
icebp
ret
sbb
sti
and
ljmp
lock
mov
test
or
into
les
shl
enter
dec
push
test
in
stos
jbe
sub
clc
js
and
lods
mov
adc
mov
cmp
push
shlb
add
div
add
sbb
dec
mov
add
in
into
or
or
icebp
lock
inc
xchg
inc
in
insl
dec
inc
stc
dec
nop
dec
mov
clc
push
jg
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
into
dec
sub
jae
mov
sub
jle
incb
sub
orb
pop
mov
repnz
ficoms
jp
jne
dec
mov
jb
int
and
add
pushf
adc
icebp
scas
ret
and
add
push
add
inc
jbe
ret
adc
jge
mov
add
add
add
add
test
sarb
adc
vorps
ret
and
push
mov
or
adc
fisttps
jmp
jge
jae
mov
or
leave
clc
cmp
add
or
pop
pop
scas
add
adc
push
mov
mov
add
pop
pop
mov
aad
xor
les
adc
or
jae
sbb
ret
mov
mov
inc
and
cmp
xor
into
pop
adc
test
mov
add
rcrl
mov
addr16
cmpps
or
mov
inc
ret
and
and
inc
push
pop
jae
or
or
add
add
push
or
inc
add
mov
push
je
dec
pop
or
adc
xlat
dec
pop
es
xor
out
pop
mov
and
and
and
pop
fabs
mov
mov
push
dec
imul
ret
mov
push
cmp
pop
pop
jb
push
push
mov
int
insl
cld
mov
cld
iret
enter
je
ja
or
push
mov
jg
rclb
dec
addr16
sub
dec
popf
or
jge
adc
adc
pop
mov
pop
out
cmpl
ss
or
add
xor
mov
add
add
loopne
add
inc
xchg
pusha
mov
xor
in
lock
inc
jg
into
into
sub
pop
and
inc
pop
sub
push
pop
nop
dec
xor
pop
cwtl
pop
mov
cmpb
shlb
mov
pop
les
xor
cmp
pop
adcl
add
leave
lahf
mov
out
adc
add
enter
add
add
mov
into
and
push
and
je
and
mov
inc
sub
pop
jo
sub
sbb
lret
cmp
lret
push
xor
jae
testb
addb
sbb
push
dec
xchg
faddl
and
pushf
add
mov
ret
pop
fmul
cmp
mov
mov
xor
push
dec
jo
or
cmp
mov
cmp
int
rol
ficomps
adc
sbb
sub
daa
pop
xor
or
and
adc
sbb
jge
addr16
pop
push
ret
dec
mov
lea
icebp
add
insb
icebp
mov
dec
mov
mov
jle
in
dec
sbb
xor
mov
dec
or
push
loop
fstpl
sbb
loopne
xor
jmp
adc
dec
sub
xor
jb
sbb
insl
or
out
je
sub
enter
or
push
cmp
in
adc
jbe
inc
inc
int3
call
jle
ret
ficoms
imul
cwtl
add
cwtl
mov
jo
sub
fwait
or
xchg
lock
into
or
push
or
js
sbb
aam
fbstp
add
sbb
movsl
into
inc
xor
cmp
jns
push
sbb
sub
movl
loopne
and
loopne
movsl
or
fsubr
inc
jmp
lods
test
fs
and
inc
push
pusha
rcrb
js
test
pop
sbb
jle
pushl
xchg
inc
repnz
pushl
shr
in
pop
push
xor
mov
call
and
cmp
and
push
loopne
mov
xlat
and
mov
out
jge
shlb
and
int3
subb
mov
cli
shlb
xchg
adc
pcmpeqw
push
hlt
and
pusha
xchg
xchg
dec
sahf
sbb
clc
lcall
add
xchg
pop
jge
and
in
mov
or
lret
pusha
push
pop
push
adc
or
imul
cmp
push
adc
mov
addl
pop
add
sub
pusha
movsl
pusha
movsl
mov
xor
dec
mov
or
adc
iret
popa
mov
pop
aas
mov
cs
mov
add
addb
daa
push
and
xlat
xchg
rolb
jb
pop
and
push
mov
push
adc
popa
sar
inc
addb
sub
jmp
inc
das
xor
push
dec
xor
mov
addl
add
push
addb
notl
ret
sub
lods
movsb
pushf
mov
pop
nop
dec
jmp
add
gs
add
mov
fisubrl
pop
mov
pop
sub
inc
sub
adc
sub
sub
mov
and
push
sbb
insl
add
or
xchg
rolb
in
xor
jle
pop
add
clc
mov
sbb
or
cli
mov
and
pusha
jns
cmp
dec
sbb
dec
roll
push
notl
cltd
mov
add
xchg
arpl
jg
xor
cwtl
ret
call
mov
or
add
ficomps
push
nop
dec
lea
adc
pop
cmp
int3
ret
push
push
ss
js
daa
and
mov
lock
dec
mov
pop
nop
push
outsl
shl
mov
stos
loopne
fs
shr
dec
loop
sbb
jp
xchg
fisttps
cwtl
mov
push
sub
js
adc
mov
sbb
and
mov
cmp
cld
sbb
inc
js
push
push
mov
out
inc
sar
fcompl
rcrl
lea
std
dec
adc
sub
add
sbb
sub
push
jb
loope
push
xchg
and
fwait
add
and
pop
adc
inc
hlt
mov
les
xor
sub
add
push
pop
shlb
adc
push
mov
xchg
pop
testb
fisttpl
inc
ds
push
or
mov
add
cld
sbb
xchg
cwtl
add
add
push
pop
or
xchg
inc
xor
or
and
mov
xlat
inc
add
int3
pop
js
push
and
fs
push
daa
add
or
arpl
xchg
popa
pushf
sbbb
sbb
mov
data16
cmpsl
add
inc
add
ret
mov
inc
cmp
test
mov
frstor
fnclex
das
loopne
and
loop
loopne
sub
loope
and
jne
mov
mov
clc
out
cvttps2pi
mov
aaa
xchg
aaa
push
push
pop
fbstp
scas
mov
pop
cs
fld
push
subl
insb
push
lahf
and
adc
jmp
test
jns
fstps
icebp
lahf
mov
add
jmp
cmp
fcomp
in
fidivl
adc
inc
and
ja
xchg
mov
push
jge
je
mov
dec
mov
inc
mov
jo
or
xor
inc
sbb
loope
pop
cmp
ss
imul
sub
mov
inc
fdivr
add
fmull
nop
inc
jl
lock
in
cltd
nop
imul
mov
adc
leave
in
aad
and
dec
add
jbe
xchg
imul
fmuls
nop
add
cltd
adc
inc
push
in
xor
or
mov
cmp
jp
lock
inc
nop
inc
fistl
sub
sbb
and
pusha
jnp
or
inc
js
mov
adc
movsb
jle
or
ret
repz
adc
stc
in
or
insl
add
sub
les
ret
and
dec
repnz
cmp
lret
insl
xchg
out
xor
adc
sarb
dec
mov
inc
push
push
idiv
adc
fimull
sub
nop
pop
xor
call
shrl
cmp
mov
mov
jge
mov
shll
push
mov
mov
enter
or
sub
mov
pop
cmp
adcl
push
pop
xchg
pushf
xchg
or
nop
call
sbb
fdivl
mov
in
cmp
sarb
or
in
mov
in
movups
lcall
dec
or
push
ss
pop
dec
nop
or
cmp
sbb
or
xor
mov
loope
sahf
push
xor
lods
in
call
roll
pop
hlt
add
andb
add
mov
pop
jnp
and
ds
or
loopne
push
add
hlt
cmpsl
scas
inc
cmp
inc
dec
addb
and
mov
inc
lds
or
jo
lock
clc
or
or
negl
cmp
rclb
mov
repz
pop
sub
leave
mov
or
and
fsubr
rcl
adc
cmp
test
leave
mov
adc
xchg
dec
adc
or
cltd
fs
sub
xor
fs
dec
cmp
fs
dec
es
dec
fs
sbb
in
imul
ficomps
xor
out
and
pusha
add
add
push
lea
enter
add
rcr
mov
test
call
add
fdivl
insb
test
mov
push
mov
inc
in
sti
stc
jo
cmpsb
pop
int3
fwait
aam
jmp
in
push
adc
in
or
xchg
xchg
cmp
add
mov
jbe
lock
xchg
mov
nop
inc
xor
mov
or
call
mov
test
xchg
or
fmull
add
and
add
dec
sbbb
cli
sbb
push
jnp
jns
test
gs
aad
or
imul
out
adcb
or
sbb
rolb
inc
push
movl
in
repnz
mov
sub
dec
mov
orb
test
lock
dec
popf
enter
mov
test
adc
mov
inc
add
lock
mov
add
sbb
jg
gs
jmp
mov
push
in
adc
jne
inc
mov
adc
xor
xor
mov
or
pop
mov
fcmovnbe
mov
das
adc
sub
lcall
insl
mov
pop
ret
std
dec
mov
mov
nop
add
mov
test
clc
adc
inc
jb
mov
fucom
mov
mov
movsl
test
in
inc
and
adc
lea
js
lahf
lock
mov
test
in
in
lods
mov
mov
mov
jmp
aam
push
lods
sub
cmp
cmp
dec
movsb
or
xchg
jno
cmp
ret
sbb
push
rorl
and
mov
mov
fsubrs
or
inc
aad
in
xchg
outsb
sub
leave
jmp
sbb
ss
xchg
nop
scas
fmull
adc
cs
das
cmp
cmpsl
adcb
or
lods
mov
add
xchg
in
pop
dec
mov
push
xchg
lea
push
mov
ficompl
aas
inc
or
testb
roll
xchg
dec
inc
or
or
sbbl
ret
test
mov
xchg
ja
int3
mov
cltd
test
inc
or
aam
xchg
stc
adc
fwait
and
sub
popa
out
sbb
je
mov
es
xchg
dec
push
pop
pusha
cltd
shll
mov
je
adc
sbb
test
pop
xchg
jne
pushf
mov
adc
rclb
movsl
hlt
ja
sub
or
dec
sub
or
push
mov
adc
sub
in
pop
dec
jo
test
sub
xchg
jnp
cmpsb
sbb
adc
in
mov
call
cmp
loope
or
cmp
dec
lods
add
mov
and
and
jecxz
inc
dec
sbb
ljmp
testl
xor
clc
xchg
in
and
push
and
adc
inc
and
roll
xchg
gs
fdivr
mov
inc
push
fcoms
inc
lods
and
sbb
inc
push
and
sub
scas
lods
xor
or
dec
or
in
inc
push
or
or
or
adc
movsl
enter
rcll
sub
push
cltd
ja
pusha
inc
cmp
cltd
lods
insl
or
push
inc
or
jmp
mov
push
sub
inc
push
cltd
call
mov
sbb
cmp
aam
inc
xlat
lret
add
adc
mov
movsl
sbb
ret
jge
leave
sub
sub
sbb
adc
pop
cltd
mov
mov
fsubs
mov
inc
or
frstor
fucomp
sahf
add
and
imul
pushf
in
or
jno
aam
je
lret
pushf
scas
mov
incb
fdivrs
popf
ja
cwtl
movsb
adc
out
nop
decb
pushf
sbb
adc
std
xchg
in
sahf
fcoms
add
pop
in
push
insb
lock
aam
mov
or
xor
mov
rorb
enter
pop
dec
xchg
adc
mov
pop
inc
or
sahf
lds
fs
fadds
sub
test
pop
mov
sahf
arpl
mov
add
inc
push
pop
pop
xlat
enter
xor
jmp
adc
mov
movsl
xor
rcl
inc
jae
add
sbbl
cmp
push
das
sbb
or
mov
add
rcrl
movsb
fistl
push
mov
ret
movsb
je
movsb
xchg
xchg
nop
andb
jo
fsubl
test
faddl
or
dec
pop
enter
sti
in
bound
xchg
shrl
xchg
enter
test
mov
add
sbb
adc
and
ret
mov
ja
jne
nopl
out
or
or
mov
nop
in
call
sbb
cmp
mov
cmp
std
dec
je
cmpsb
mov
xor
mov
les
xor
push
aas
ja
push
rorb
pop
pop
aad
cltd
inc
fsubr
adc
mov
mov
clc
mov
pop
faddl
in
lcall
inc
push
inc
rolb
movsb
lods
or
stc
inc
xchg
adc
mov
pop
or
nop
dec
adc
mov
cmp
xchg
xor
cs
fldt
dec
jnp
adc
test
jbe
dec
adc
sub
jns
mov
cwtl
or
enter
pop
leave
shrb
and
dec
jo
mov
and
sub
movsb
cmpsb
add
dec
jnp
mov
sbb
aas
je
stos
add
jmp
rorb
or
mov
orl
and
movsb
cmpsl
sti
orb
loopne
stos
lds
mov
test
insl
fs
pop
inc
dec
inc
xor
push
inc
jb
mov
test
jmp
xchg
loope
test
pop
inc
loopne
ret
inc
adc
mov
stos
inc
mov
stos
sub
movsl
push
xor
inc
mov
and
rcl
pop
xor
push
mov
inc
cmp
fdivl
add
iret
test
mov
cmp
bound
cmp
pop
fsubl
jmp
inc
mov
mov
rolb
push
pop
popa
loopne
mov
cmpsl
inc
lods
ret
rclb
test
subb
sub
jne
test
jns
faddl
pop
inc
and
mov
je
or
stos
and
enter
sub
sbb
stos
add
rcll
scas
sub
test
iret
add
mov
insb
std
pushf
std
fs
idivb
aas
pop
adc
mov
leave
xchg
cmp
inc
shrl
fs
imul
std
mov
sub
mov
scas
cltd
xchg
in
xor
pusha
shlb
fdivr
call
mov
sbb
pop
push
stos
daa
inc
push
push
adc
inc
add
mov
cmp
push
inc
sbb
cltd
push
and
jmp
mov
cmp
dec
dec
cltd
lcall
mov
jo
in
mov
test
pusha
mov
add
fimull
and
sbb
and
aam
mov
mov
lods
pop
adc
mov
jb
inc
shrb
outsl
or
lcall
jbe
xor
mov
jnp
out
push
or
mov
jne
mov
into
shll
les
mov
in
cmp
inc
adc
fsubs
pushf
loopne
test
std
leave
stos
xor
mov
in
outsl
sti
aam
fmuls
scas
imul
dec
adc
and
sar
mov
adc
add
xchg
add
or
dec
jae
repz
fs
jp
insb
dec
adc
stos
adc
push
js
dec
push
dec
test
jns
add
jo
mov
lods
popf
outsl
mov
jae
prefetcht1
mov
dec
or
sbb
ret
dec
hlt
mov
fmull
cmp
mov
ucomiss
mov
jns
xchg
xor
or
xchg
or
ret
in
xchg
pop
stos
push
xchg
lgs
sbb
fnsave
xor
fadd
adc
pop
pushf
imul
ss
orl
jo
iret
inc
push
les
leave
stos
xor
xchg
loopne
pushf
mov
divl
or
jbe
xchg
call
les
jnp
mov
push
jns
lcall
mov
imul
jne
jns
adc
xchg
and
adc
in
mov
mov
jne
and
mov
and
ljmp
adc
sub
add
loop
adc
insl
xor
jb
rol
add
adc
pop
mov
add
jno
inc
les
mov
mov
or
pop
test
inc
sub
push
push
add
and
and
xor
add
imul
nop
dec
lcall
xorl
sbb
fcomip
cmp
jae
or
rcrb
sbb
ljmp
daa
imul
add
jb
in
adc
std
sbb
sti
addb
cmp
aam
gs
ds
jbe
cmp
cmp
xor
pusha
sub
and
pop
add
pop
mov
push
pusha
xchg
test
inc
mov
xor
xorb
int
push
and
fsubr
aad
out
pop
stos
xor
and
fldcw
out
lock
sbb
loope
nop
arpl
sbb
nop
pop
xor
rorb
arpl
xchg
std
lock
jne
mov
jne
daa
mov
orb
mov
xchg
cwtl
pushf
push
sbb
daa
mov
test
and
jecxz
ret
mov
stos
cmp
addb
xchg
pop
roll
int
lods
les
test
bound
inc
inc
xor
leave
test
mov
mov
fstpt
fdivl
shll
xchg
dec
enter
sub
mov
mov
push
test
or
test
push
outsb
ret
or
bound
mov
test
xchg
mov
call
nop
mov
and
rcl
mov
cmp
push
sbb
dec
mov
adc
ficoml
push
sbb
mov
shlb
arpl
adc
xor
sub
test
and
sub
cmp
xor
adc
inc
fs
iret
nop
mov
adc
imul
pop
fdivs
add
es
or
or
cltd
nop
inc
notl
out
or
filds
jae
mov
cmc
in
jge
and
mov
in
aam
or
inc
mov
inc
cs
add
and
xor
sti
test
add
or
aaa
and
push
jmp
mov
dec
adc
shlb
pop
insb
leave
sarb
xchg
inc
fcoms
adcb
aam
add
mov
xchg
jo
fwait
bound
jbe
xchg
invd
xlat
imul
stc
adc
xor
cmp
enter
xor
ljmp
insb
add
mov
mov
in
xlat
outsb
inc
dec
js
leave
outsl
mov
les
fimull
mov
adc
fwait
movsl
test
ror
and
adc
push
imul
or
mov
cwtl
dec
xchg
das
adc
sbb
lds
dec
fistl
test
adcb
int3
insl
test
mov
add
aam
cmpsb
sub
add
int
add
or
rcrl
lds
and
lds
cmp
inc
into
call
sbb
in
xchg
push
xor
test
pop
call
sbb
call
bndstx
pop
add
dec
inc
test
xcrypt-cfb
cmpsl
cmpsb
lea
xor
aaa
push
call
cmpsb
sbb
inc
daa
cltd
fs
fdivr
cmpsb
sbb
scas
clc
push
or
mov
xor
rolb
add
add
inc
js
mov
es
icebp
inc
leave
mov
pop
pop
xor
cld
dec
es
ss
adc
fs
fadd
in
pop
insb
xchg
dec
enter
adcl
mov
hlt
scas
cmp
mov
in
popa
jge
adc
xor
adc
push
dec
je
loopne
push
xor
mov
leave
and
adc
and
dec
nop
fs
imul
push
nop
mov
outsl
and
cltd
mov
xor
mov
movl
call
add
int
loopne
adc
js
adcb
cld
push
lods
jbe
stc
fs
cmp
icebp
push
movsb
scas
and
adc
cmp
jo
adc
adcl
mov
push
subb
and
adc
inc
dec
inc
outsl
adc
insb
adc
in
push
test
scas
cs
movsl
ss
and
xor
out
rol
push
cmp
push
and
sahf
je
test
xlat
mov
adc
sub
dec
inc
xchg
popa
mov
adc
or
movsb
sub
cmp
add
test
adc
add
lods
mov
movsb
test
fistl
rcr
fstl
xchg
out
das
test
add
fistl
je
dec
rcr
push
sub
fcomps
lods
test
pop
cmp
arpl
lret
stos
inc
sbb
pop
adc
call
inc
inc
lret
data16
stc
mull
or
nop
shll
pushf
add
and
push
add
push
adc
cmp
movsl
dec
je
testl
mov
in
fisubl
adc
lods
sub
or
sbb
clc
sbb
adc
test
orl
push
sbb
sbb
scas
rorl
dec
add
xchg
inc
adc
xor
xchg
jmp
or
push
sbb
clc
xor
test
mov
cltd
loopne
enter
lock
mov
sub
mov
int3
push
xor
or
cltd
nop
mov
mov
test
nop
call
and
add
pcmpgtb
mov
test
in
pop
leave
pop
xchg
movsb
pop
fldt
das
adc
cmp
sbb
ljmp
nop
xchg
dec
adc
jb
mov
fsubs
dec
jl
jo
add
push
mov
pop
xor
mov
roll
add
pusha
dec
add
add
add
mov
cltd
mov
pop
enter
insl
push
xor
mov
in
fiaddl
cltd
js
xchg
inc
dec
and
push
adc
pop
pop
inc
faddl
mov
and
xlat
inc
add
ret
mov
pop
leave
xor
or
adc
mov
push
ror
outsb
lret
ret
push
out
cmp
push
cmpsb
lock
jle
gs
push
cmp
xchg
icebp
jle
incb
outsb
jmp
xor
idivb
xchg
call
dec
sti
mov
cmc
push
push
sbb
mov
mov
pop
adc
add
sub
pop
test
imulb
mov
pop
repnz
xor
inc
xchg
cmp
cmp
mov
fistl
push
xchg
test
out
jmp
sbb
loop
sub
fmull
lcall
sbb
fistps
in
popa
dec
jae
and
popa
jbe
push
jo
repz
mov
call
into
call
ja
lcall
lods
out
adc
jnp
xchg
add
cmp
dec
push
mov
push
dec
push
jle
cmp
jb
pop
sbb
add
xlat
sahf
out
aas
jmp
enter
push
mov
sbb
fucomip
inc
jg
nop
jg
pop
inc
add
sbb
mov
mov
ljmp
dec
mov
fistpl
or
jnp
mov
cmp
cmp
shlb
leave
jg
mov
mov
mov
jns
mov
jle
test
inc
dec
mov
xor
repz
sub
or
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
aaa
or
adc
pop
jmp
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
or
outsl
cmp
adc
adc
imul
repz
mov
fsts
sahf
out
pop
imul
je
jb
jbe
lods
std
outsl
arpl
fs
out
sbb
push
dec
imul
mov
jne
push
gs
xor
cs
loope
decl
pop
bound
and
popa
je
outsl
outsb
mov
mov
push
icebp
sub
lock
psubusb
adc
add
pop
sub
or
or
jb
js
mov
imulb
push
jb
gs
cmp
or
outsl
sahf
add
mov
add
gs
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
bound
pop
mull
daa
dec
outsl
jbe
dec
arpl
push
jo
ja
mov
sub
addr16
dec
jne
xchg
stc
push
push
mov
inc
jo
imul
enter
bound
inc
insb
adc
into
mov
out
jae
xchg
xchg
addr16
lock
fstl
xor
outsb
int
and
daa
push
scas
clc
sbb
jle
fsts
dec
js
push
jne
xchg
outsl
pop
dec
inc
sbb
das
jo
or
nop
push
sbb
fcomip
mov
inc
inc
pop
ud0
imul
add
and
ret
ja
mov
xchg
jg
adc
xchg
sub
sub
cs
movsl
cmp
cmp
ds
inc
das
stos
or
cmp
ss
sub
jge
jg
cmp
inc
mov
shrb
and
push
pop
pop
imul
js
dec
movl
clc
pusha
push
inc
insb
jae
cs
cs
lcall
inc
inc
aaa
inc
or
insl
gs
insb
mov
js
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
xor
and
push
xor
sbb
dec
fistps
push
jo
imul
and
inc
inc
mov
je
jo
xchg
sub
jnp
idivb
and
orl
mov
je
or
xorb
inc
popa
int3
mov
iret
and
daa
mov
jne
pop
out
fcmovb
in
xor
and
insl
push
xchg
inc
cs
xor
js
or
dec
rolb
andb
les
out
mov
add
xchg
and
push
rcr
push
or
imul
xor
pop
es
add
mov
je
add
dec
in
ds
leave
sbb
push
loopne
outsl
mov
push
push
or
andl
dec
sbbb
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
sti
into
pop
xor
add
inc
xchg
insb
sbb
addl
or
or
push
lcall
mov
or
pop
xor
jo
cmpsl
cmp
push
push
fistps
dec
rcl
push
popf
and
xor
in
fs
xor
hlt
pop
cltd
and
or
add
ror
dec
aaa
ja
adc
insl
push
outsl
outsl
ss
bnd
fs
sub
inc
inc
xchg
in
or
sahf
push
mov
shl
add
das
mov
mov
cwtl
mov
imul
push
or
arpl
cmpsl
mov
cmp
fildll
aaa
xchg
in
jno
in
ljmp
imul
push
pop
scas
loopne
outsb
popa
pop
or
inc
sbb
rclb
add
push
leave
nop
inc
insl
imul
call
push
cmp
in
adc
pusha
xchg
cmp
jmp
push
and
pop
push
cmp
sub
jne
jae
scas
into
push
cmp
pushw
pusha
jo
aaa
addb
sub
call
rolb
data16
lret
inc
sub
pop
sti
mov
dec
or
jo
fstp
lods
pop
and
cmp
cwtl
ja
ds
pop
mov
out
inc
inc
and
dec
cmp
xor
ud0
loopne
iret
sub
jg
xchg
sub
rol
das
lret
jno
icebp
pusha
test
or
ret
movsl
add
xorl
jae
jae
push
loop
imul
or
into
in
aad
popa
dec
add
xor
mov
inc
jae
je
adc
mov
add
add
in
cmp
imul
out
imul
add
adc
add
mov
sti
push
add
add
add
and
push
pop
pop
scas
cmp
loop
add
ds
push
pop
hlt
and
or
pusha
xor
imul
js
or
sub
add
add
addb
add
sahf
mov
adc
ret
add
orb
daa
push
cmpb
push
and
into
in
lret
jb
int3
push
daa
inc
insb
jo
add
dec
push
inc
add
aam
xchg
loop
stos
int3
js
jo
outsb
fbld
dec
rorb
sbb
cmp
xchg
dec
cs
nop
xchg
rorl
xchg
xchg
loope
mov
pop
push
adc
adc
and
or
mov
pushf
jo
add
and
pushf
jo
or
pop
jo
or
data16
push
out
push
cmp
pop
push
lods
mov
fimuls
push
xor
and
and
jb
sub
and
add
test
and
add
add
or
xorb
inc
xchg
sbb
push
imul
cltd
jbe
add
ja
adcb
incl
pop
cmp
adc
aaa
add
pop
rcll
fimull
sub
add
lcall
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
push
test
std
cli
sti
cld
std
inc
add
mov
push
add
dec
mov
xor
sbb
push
pop
outsl
ja
iret
or
inc
cs
jae
jb
bound
inc
lea
dec
dec
stos
inc
pop
and
clc
ss
popa
mov
repnz
mov
mov
lea
dec
mov
outsl
fisubrl
push
inc
push
mov
into
movsb
inc
sahf
insb
gs
mov
dec
push
ljmp
aaa
insb
in
in
in
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
mov
pop
enter
mov
mov
mov
frstor
arpl
push
cmp
outsb
pushw
push
rorb
mov
or
test
imul
pusha
inc
jbe
push
push
sbb
jns
and
arpl
xchg
es
fprem
popl
cmp
push
push
adc
mov
dec
lahf
mov
inc
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
cmp
out
push
adc
movsl
jae
addr16
adc
fdivrl
adc
and
mov
notl
dec
testl
dec
cmp
mov
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
and
push
shlb
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
divl
in
es
jle
sub
sub
addr16
out
imul
sub
seta
cmp
jmp
cmp
and
add
cmp
pop
cwtl
jb
cltd
push
scas
sbb
push
jb
imul
outsb
fnsave
xor
lret
sbb
sbb
and
arpl
pop
es
jo
sub
mov
jl
lahf
fs
sub
mov
hlt
push
call
cmp
les
in
repz
cmp
sti
push
aam
negl
mov
insb
inc
push
test
sarl
jl
je
jl
iret
repz
add
pop
pop
add
imul
mov
adc
xchg
push
mov
jae
repz
inc
inc
pushf
aas
push
je
sahf
out
push
cmp
sub
sub
and
adc
repz
decl
iret
repz
shrb
repz
or
incb
test
iret
repz
pusha
inc
xor
sub
sahf
out
ds
std
in
loopne
mov
sahf
out
xchg
insb
inc
sbb
cld
repz
rcl
mov
pusha
xor
pop
sbb
aam
mov
lcall
fisttpl
outsb
push
xor
movsl
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
js
inc
lods
insb
outsb
inc
inc
dec
jae
fldenv
mov
sub
divl
sbb
dec
inc
dec
xor
inc
dec
enter
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
aaa
outsb
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
jae
mov
ds
pop
push
pop
clc
in
stc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
dec
mov
jp
adc
fisubrs
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
mov
outsl
and
rcll
lods
jb
xor
loope
adc
xor
pop
and
inc
sub
lret
es
mov
flds
aas
jbe
dec
or
dec
push
push
adc
mov
dec
outsb
jbe
and
push
jb
add
inc
std
mov
adc
mov
imul
add
push
dec
icebp
push
cmp
sub
mov
push
push
push
cmc
out
pop
fiadds
das
sub
ds
push
cs
sub
inc
add
xor
inc
adc
push
push
adc
scas
mov
pop
sbb
decl
cmp
push
sub
xor
dec
push
inc
jge
mov
sub
jbe
nopl
dec
daa
add
out
jbe
notb
push
das
dec
sbb
push
pop
cmp
sub
add
push
pop
sub
sbb
cmp
aas
add
std
inc
ds
sub
adc
inc
inc
and
lods
sub
pop
ret
dec
or
mov
adc
pop
pop
and
dec
and
pop
push
aaa
and
fisubrs
cmp
xor
inc
js
std
jge
jnp
push
xor
sub
and
xor
dec
xor
push
pop
mov
sbb
and
sbb
adc
pop
push
adc
jge
inc
or
add
dec
sbb
mov
mov
push
cmp
mov
pop
aad
xor
dec
mov
pop
sub
adc
test
lea
push
adc
and
inc
dec
adc
xchg
ja
sub
pop
inc
add
sbb
jns
mov
add
das
sbb
adc
sub
push
pop
cmp
pop
dec
das
inc
adc
pop
sub
movsl
lods
mov
outsl
das
add
into
or
pop
push
and
push
inc
add
dec
cmp
lret
ljmp
scas
mov
jp
sbb
and
out
push
pop
push
gs
xchg
sub
clc
jmp
cmp
adc
cmp
cmp
add
add
xor
in
sub
and
push
sub
dec
jo
pop
and
aas
cld
pop
cmp
inc
xor
movsl
push
xor
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
scas
jmp
mov
daa
adc
push
lcall
test
ds
mov
int
daa
ffreep
out
out
mov
mov
stc
push
std
iret
repz
adc
pop
sub
loopne
ds
daa
inc
and
pop
or
mov
cmp
int3
hlt
adc
cmp
jp
mov
or
cmp
outsl
insl
mov
inc
popa
outsb
adc
pop
xor
push
mov
adc
popl
out
adc
imul
bound
xor
sub
push
or
idivb
cmp
roll
xor
push
insb
jo
repz
pushf
mov
sahf
out
sahf
sbb
fs
xchg
cmp
out
popf
roll
inc
dec
sbb
lahf
divl
in
cs
subb
adc
push
pushf
fdivl
das
inc
push
push
pusha
push
mov
dec
add
cmp
clc
fisubs
sbb
inc
cmp
loope
scas
push
pop
adc
inc
jbe
mov
std
into
aad
sub
inc
push
pop
inc
inc
add
cmp
nop
pop
or
jmp
cmp
push
repz
and
push
sbb
aad
jae
fcoms
jb
or
mov
pop
arpl
add
jb
add
in
add
add
sub
add
pop
mov
cmovno
shrl
lods
sub
das
pusha
addl
push
push
psignd
cmp
pushf
add
cmp
movsb
in
out
dec
faddp
cmp
cmp
pop
out
add
push
leave
ja
sub
mov
push
sub
xor
sbb
jo
out
pop
dec
push
sbb
push
push
add
ss
jge
push
push
xor
fs
cmp
outsb
adc
add
scas
inc
dec
pop
fisttpll
add
jo
sub
daa
xor
or
xor
insl
push
xchg
dec
or
inc
pop
pop
nop
fldenv
push
cs
and
out
es
jbe
or
push
cmp
cs
pop
je
cs
insb
push
sub
pop
out
jbe
inc
adc
sub
jne
push
xor
testl
and
ds
daa
inc
xlat
pop
fwait
inc
cmpl
mov
lods
inc
sub
pop
cmp
imul
or
and
xchg
testl
inc
hlt
xchg
push
add
daa
cmp
xchg
hlt
pusha
das
cmp
or
sub
push
fwait
mov
clc
sub
lods
cmp
mov
and
icebp
sub
xor
sub
outsl
jle
jb
adc
aaa
sbb
cmp
xor
push
push
adc
xchg
push
dec
sub
faddl
test
xor
sbb
lods
push
and
dec
pop
mov
xchg
xor
or
and
dec
test
mov
push
fdivs
pop
sub
pusha
loop
fs
js
inc
mov
xchg
mov
cmp
cmp
aas
add
and
add
push
pop
xor
mov
dec
loope
insl
cld
pop
inc
xchg
dec
into
ja
push
cmovbe
jp
div
push
gs
push
subb
xchg
fdivr
mov
pop
cmpsb
push
mov
cmpsb
daa
test
mov
inc
dec
ss
out
arpl
mov
and
pop
dec
cmp
inc
daa
pusha
addr16
pop
and
stos
sub
adc
es
push
pop
test
cs
push
jge
mov
leave
or
and
sub
into
adc
push
ja
dec
shl
inc
inc
cmp
push
aaa
push
sbb
js
pop
mov
sbb
sbb
adcl
out
lcall
sub
cmp
add
sub
inc
js
not
push
sub
push
inc
add
or
and
and
cld
outsl
jbe
sbb
cmpsb
outsb
inc
add
sub
xor
sub
je
mov
adc
ja
and
pop
mov
push
insl
popa
imul
push
sbb
push
or
inc
out
pop
outsl
jo
mov
lea
xchg
mov
push
push
push
into
out
sahf
out
dec
add
inc
add
mov
pop
xor
mov
sub
cmp
and
add
cmp
ja
scas
and
insb
adc
or
add
shll
je
sub
ret
mov
adc
js
mov
or
pop
adc
js
adc
adc
addr16
daa
shrb
pop
push
push
ret
push
jno
inc
jg
push
dec
cmp
sbb
out
or
jnp
and
adc
adc
std
sbb
das
cmp
cmp
je
push
and
in
mov
jne
jbe
dec
push
pop
movq
pop
push
or
rolb
ret
add
push
add
adc
add
adc
les
out
xchg
add
testl
insb
adc
and
ret
xor
aaa
ds
nop
lods
jmp
add
inc
sub
sbb
push
mov
insb
and
call
gs
push
push
jo
add
mov
lret
and
push
push
das
xor
xor
and
push
mov
sbb
sub
jge
js
xchg
ja
sub
sub
and
cmpsl
and
dec
fidivs
and
das
cmp
xor
je
inc
xchg
insl
es
push
adcl
jb
cltd
lea
nop
xchg
jb
outsl
imul
ss
add
xchg
sub
daa
ds
xor
jns
xchg
es
cmpsl
and
sbb
inc
add
sbb
loope
scas
and
cmp
push
sub
jp
xor
sub
push
aaa
ljmp
call
ss
aas
adc
incl
das
push
sub
dec
jo
add
lods
jo
mov
mov
and
inc
add
mov
cmp
ds
pop
scas
mov
repnz
jle
gs
and
cmpsb
push
push
or
xor
xor
sbb
or
add
shlb
adc
gs
dec
xchg
or
outsb
leave
or
adc
daa
and
mov
cwtl
in
pusha
pop
jp
inc
pop
inc
dec
inc
call
mov
add
loop
adc
cmpsl
mov
aam
jae
jnp,pt
lcall
incl
daa
add
push
and
fwait
bound
mov
sub
xchg
incb
ret
cmp
add
das
sub
mov
idivb
je
mov
and
inc
adc
push
daa
cmp
ja
movsb
cmp
daa
pop
pop
test
out
arpl
sub
adc
inc
xor
push
hlt
lods
adc
sub
and
das
aam
int3
addl
into
adc
daa
or
pop
ds
mov
mov
xchg
rolb
jg
and
lret
add
test
cli
sbb
test
lahf
cmpsl
popf
and
pop
xchg
ficoms
cli
xor
ss
sub
out
roll
jno
in
cmp
les
lahf
inc
xor
push
pop
imul
jo
loopne,pt
inc
shlb
inc
clc
add
roll
js
pop
movsl
mov
xor
inc
xor
jo
inc
inc
xor
cmp
and
ret
enter
dec
outsb
push
loop
orb
xor
cmp
cmp
daa
and
pop
push
xor
push
out
xor
pop
add
aad
mov
test
add
push
pusha
inc
in
jno
push
lock
inc
rorl
cmp
cs
sbb
xor
mov
xor
stos
lock
cmp
add
pop
cmpsl
pop
xor
sahf
sbb
adc
mov
push
cmp
mov
xor
mov
mov
lea
mov
push
mov
or
dec
dec
fisttpl
pop
mov
jg
xor
sub
mov
sub
push
and
cmp
jo
mov
cmp
hlt
out
addr16
push
movaps
mov
testl
sbb
sub
cmp
vmwrite
sub
pop
push
adc
push
sub
push
dec
std
loop
push
subb
sub
sbb
andb
cmpsb
cmp
lahf
and
insb
enter
cmp
ret
dec
mov
add
or
gs
shl
inc
jmp
push
xchg
loope
mov
sub
inc
push
push
xchg
pushl
adc
xor
adc
xor
pop
adc
adc
push
pop
xor
inc
xor
or
mov
add
push
dec
add
pop
int3
xlat
or
inc
push
sub
pop
push
xor
xor
sbb
or
mov
fsubs
jg
sbb
inc
ss
dec
lea
pop
sbb
cmp
sahf
adc
cmp
sub
sub
in
gs
or
add
pop
lahf
dec
or
push
sbb
mov
scas
jae
adc
movsb
fs
ret
cwtl
xchg
xor
xlat
mov
push
sbb
sbbl
movsl
jo
pop
stos
das
jmp
add
cmp
sub
sub
push
or
mov
mov
or
pop
sub
or
or
adc
inc
jg
es
cmp
sbb
and
scas
lret
dec
enter
and
pusha
les
roll
push
sbbb
movaps
xor
mov
ja
and
xchg
mov
mull
cmp
and
sbb
adc
mov
aas
jo
adc
push
dec
in
pushf
or
out
pop
inc
cmp
push
std
and
xor
sti
mov
and
pop
and
and
movl
xchg
and
and
and
and
addb
sbb
add
sub
mov
adc
sub
mov
xchg
xor
inc
mov
inc
sub
pop
xor
jnp
call
aaa
adc
pop
insb
xor
cmp
push
fdivrl
xor
and
cmp
sbb
dec
imul
mov
cs
pop
loope
inc
xchg
mov
test
jno
xor
scas
enter
lahf
adc
ret
push
fldt
daa
lods
dec
cmp
sbb
cwtl
pop
mov
inc
push
dec
loop
je
fildl
popa
je
adc
outsl
loope
jp
inc
mov
imul
ja
or
iret
sub
inc
comiss
dec
cmp
push
pop
mov
inc
aas
push
addr16
test
push
add
test
inc
add
xchg
push
hlt
dec
or
pop
cs
push
xor
and
add
sbb
add
cmp
adc
dec
pushf
sbb
or
movsl
add
xor
sbb
jae
ss
hlt
cmp
rcrb
scas
pop
adc
lahf
and
imul
dec
sub
push
xchg
clc
mov
add
xlat
insl
stos
pop
add
jbe
cmp
sub
add
lock
pop
clc
add
sub
mov
jo
das
push
in
add
xorb
mov
in
inc
imul
inc
inc
add
push
imul
push
outsb
push
aam
data16
jl
pop
inc
pop
gs
push
pop
iret
sarl
cmpsl
pop
pop
pop
aaa
dec
data16
cmp
cmp
pusha
dec
popa
xchg
outsb
xor
inc
push
adc
mov
jge
push
dec
dec
in
add
aaa
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
and
das
mov
sbb
mov
ds
pop
sbb
jg
jg
lods
sub
and
jle
jo
fsubs
jg
or
pop
test
xor
dec
xchg
pop
sarl
pop
repnz
dec
push
add
pop
adc
sub
pop
push
in
inc
cltd
aaa
add
aaa
aaa
xor
cmp
lock
loopne
lods
sarb
dec
scas
pop
rolb
pop
push
xchg
jb
out
fwait
add
fsubrs
imul
nop
pop
leave
jae
pop
subb
sub
pop
jb
pusha
push
rolb
pushf
cmp
xor
and
jae
pop
cmp
inc
dec
sahf
imul
pop
and
mov
mov
pop
sarb
negb
push
dec
pop
dec
pop
push
call
dec
rcrb
js
push
dec
jmp
dec
sub
cmp
xor
inc
mov
inc
xor
xor
inc
xor
inc
xor
mov
popa
add
jne
clc
mov
insb
push
outsb
add
jmp
jbe
push
jb
pop
mov
jmp
jne
cmp
mov
bound
dec
bound
or
out
jecxz
shrb
and
shlb
adc
push
ja
adc
lods
sbb
cmp
pop
fldt
adc
xlat
das
or
adc
cmp
push
mov
xor
push
bswap
sahf
add
xorb
cli
cmpsb
iret
lods
dec
mov
inc
js
dec
dec
loope
add
dec
adc
adc
push
dec
lcall
sbb
es
inc
or
push
es
push
in
push
push
dec
cli
sahf
inc
daa
cmp
and
addr16
outsb
inc
push
xor
push
jns
mov
addb
pop
inc
ds
add
push
out
lret
mov
into
or
jp
sub
adc
dec
in
das
jg
add
jmp
add
je
jmp
dec
imul
ss
nop
scas
cmp
scas
aam
iret
xlat
pop
insl
test
jbe
adc
aad
and
aas
shrb
bnd
pop
fcmovu
jnp
rcrl
aad
push
jbe
mov
mov
push
int
ja
xchg
xchg
mov
in
ficoml
pop
data16
test
push
add
test
bound
adc
lds
lcall
add
mov
out
push
mov
andnps
mov
jb,pt
daa
push
aas
ja
xlat
fisubs
jo
int
mov
sbb
dec
mov
push
push
fs
imul
push
cmpsb
push
enter
push
mov
mov
movsb
out
fidivrs
lea
insl
push
jge
or
jl
mov
mov
stc
nop
pop
call
fincstp
inc
ds
fs
mov
insb
out
imul
aaa
xor
idivl
mov
push
push
push
pop
sahf
xchg
cmpsb
mov
mov
outsl
pop
rcll
pop
xchg
pop
les
loop
hlt
push
push
xchg
xor
lahf
pusha
xor
idivl
push
push
mov
xchg
sysret
mov
fildll
cltd
xlat
jnp
repz
lret
push
push
cmp
inc
ss
push
fidivrs
pop
fcmovnb
notb
sub
test
push
push
push
lahf
out
fcmovbe
lahf
es
jp
inc
cltd
repz
addr16
inc
cltd
lahf
add
cld
mov
push
push
fildl
cwtl
imul
jecxz
mov
jecxz
sub
push
push
movsb
mov
lds
mov
cmp
push
cs
ficoms
sahf
out
shrl
xchg
mov
out
sahf
cmpsl
and
cwtl
mov
fsqrt
sbb
out
cmp
jmp
jns
out
je
stos
lret
ficomps
xchg
inc
xchg
push
pop
or
jno
jns
or
and
jg
adc
ja
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
ja
xlat
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
pop
mov
je
decb
adc
push
and
pop
sbb
or
sarl
enter
adc
or
adc
cs
mov
daa
or
repnz
add
inc
push
inc
and
or
sub
addr16
inc
xor
push
jae
popa
mov
out
fldt
add
fisttpll
lods
jo
sti
or
aaa
push
inc
gs
fisubrl
aas
jae
cmpsb
mov
xlat
push
lcall
jae
dec
cmp
fidivrl
je
push
ljmp
cmpsb
dec
add
fstl
xorps
push
insb
pop
inc
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
stos
xchg
add
mov
jbe
iret
push
mov
scas
cmp
ret
ja
fwait
push
test
push
jo
xor
cmp
dec
push
pop
push
addl
inc
jo
xor
or
adc
mov
insl
jo
daa
out
jbe
es
insb
je
push
addr16
sti
pop
in
jo
jae
es
outsl
and
aas
cmpb
fcmovu
fldenv
sub
push
cmpsb
mov
iret
lods
push
or
cmp
xor
xor
data16
xor
cmp
cmp
push
xor
xor
cmp
push
insb
inc
sar
add
pop
pop
xor
add
jnp
lahf
dec
dec
or
push
push
pop
sub
ljmp
sahf
add
add
mov
inc
sub
inc
iret
sbbb
xor
ss
mov
cmp
es
cmovle
or
rcll
inc
xor
loopne
cmp
push
push
dec
inc
pop
add
ret
into
inc
push
xchg
fimuls
cmp
or
xor
cmp
mov
negb
pop
sahf
dec
pusha
shrb
push
add
push
push
dec
and
pop
push
aas
jae
push
dec
subb
and
or
sub
adc
inc
or
cmp
cmp
sbb
cmp
xor
jnp
in
pop
or
inc
and
and
xor
pop
sub
sub
cmp
in
pop
adc
sub
jbe
jle
sub
pop
cmp
sbb
imul
mov
ffreep
insl
push
xor
bound
inc
pushf
jbe
das
cmp
fisubrl
fcomps
bound
inc
popa
in
pop
sub
pop
sub
cmp
addr16
in
pusha
sub
loope
add
sub
stos
or
aaa
pop
xchg
sbb
inc
mov
lds
aaa
cmp
mov
jno
xchg
and
add
sub
iret
sbb
push
aaa
push
xor
popf
aaa
add
push
insl
xor
sbb
sbb
mov
stos
pop
add
fbld
ret
push
lods
daa
jge
les
pushf
push
das
push
sbb
push
divl
and
sub
iret
inc
push
or
pop
ret
mov
adc
movaps
das
popa
lds
ss
pop
xchg
sub
adcb
push
fisubl
aaa
mov
sub
pop
xor
repnz
pop
pop
dec
and
arpl
sbb
icebp
mov
or
xchg
mov
xorb
das
mov
add
pop
cltd
daa
lahf
sbbb
outsl
pop
xchg
outsb
adc
pop
push
pop
int
add
sbb
stos
pop
jg
mov
add
packsswb
adc
pop
and
or
bound
xchg
xchg
adc
mov
pusha
shll
add
outsl
lret
fiadds
int
mov
sub
mov
adc
test
xor
xchg
add
jo
mov
out
imul
loop
popf
jg
orb
mov
fbld
pop
sub
sbb
js
pop
pusha
dec
cmp
stc
inc
push
ds
mov
xor
push
pop
adc
rclb
adc
test
add
or
push
and
dec
push
or
lea
femms
inc
daa
notl
das
xchg
lock
xchg
lock
out
es
cmp
das
imul
sub
or
push
pop
adcb
xor
mov
vmread
and
stos
pop
sub
inc
and
xorl
xor
sub
push
sqrtps
cmp
and
pop
xchg
pop
dec
ss
in
out
adc
daa
push
out
enter
mov
pop
push
adc
jns
fs
sub
adc
xchg
jno,pt
push
pop
popa
cmp
shlb
into
pop
sub
xchg
push
cmp
sbbl
addr16
into
cmp
add
daa
inc
mov
pop
mov
ret
pushf
pop
push
pop
xchg
or
mov
xor
xchg
xchg
lret
push
dec
dec
and
mov
sub
adc
add
push
or
adc
fwait
dec
dec
les
pop
xor
or
cs
pop
and
gs
push
push
push
push
loopne
fisubrl
mov
test
push
inc
and
adc
sbb
or
mov
and
les
xor
out
mov
adc
pop
imul
push
xor
adc
sbb
mov
test
or
fsubrs
and
int3
xchg
and
loop
inc
push
xor
push
mov
xor
xchg
push
add
pop
and
jl
and
ds
xor
sbb
sub
sub
push
sub
add
mov
lret
xor
mov
adc
cmp
es
sub
sbbb
cmp
mov
sbb
sub
jl
int
and
js
sub
daa
retw
sub
push
mov
xchg
jno
call
and
pusha
mov
ret
pop
dec
addl
aaa
fildl
xchg
jo
idivl
ljmp
push
test
das
mov
enter
push
add
fisubrl
and
and
daa
test
xor
mov
mov
out
push
pop
out
sbb
pop
pop
push
sahf
out
sahf
and
addr16
out
andl
lahf
out
cltd
or
xchg
mov
insb
or
pop
or
ss
int
or
adc
adc
sbb
and
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
ss
int
sbb
sub
add
or
fldcw
adc
pop
fldcw
add
add
fwait
int
mov
lret
str
add
xlat
insb
and
das
incl
pop
adc
xchg
inc
pop
arpl
push
pop
pop
cs
push
mov
pop
and
fisubrs
push
or
jb
sub
loopne
sbb
xor
sete
pusha
sbb
lods
mov
je
jo
push
mov
jbe
fsubl
mov
xor
jl
sub
or
pop
add
and
or
test
pop
adc
push
fistl
push
add
add
das
inc
ss
sub
sub
inc
and
pusha
dec
inc
inc
ss
jmp
inc
sub
add
sub
pop
add
sbb
sub
cmp
aaa
sbb
dec
aas
push
sub
sub
jg
inc
std
daa
sub
sub
pop
pop
inc
das
movlps
mov
cmp
or
add
sbb
and
mov
addb
out
ljmp
lcall
and
sub
aas
sub
pop
sub
inc
mov
add
and
add
fbld
push
or
mov
pop
dec
pop
cmp
or
and
dec
pop
call
daa
push
add
and
dec
cmp
es
aas
inc
aas
add
sub
sub
sbb
sbb
mov
shlb
ret
adc
add
imul
xor
adcb
add
and
pop
push
cmc
push
cmpsl
in
jmp
mov
pop
cmp
pop
xor
mov
push
les
add
dec
push
adc
xlat
pop
dec
mov
inc
mov
movsl
pop
add
xchg
mov
push
out
pop
xor
inc
aas
mov
test
cmove
adc
xor
leave
xchg
push
push
dec
int
dec
and
inc
inc
and
mov
loopne
inc
jecxz
add
sbb
push
xchg
pop
cwtl
outsb
xchg
inc
add
in
loopne
push
out
or
pop
push
push
inc
push
dec
inc
dec
push
dec
sub
add
push
push
sbbb
shlb
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
jmp
cs
insl
sub
adc
or
or
cs
ret
ljmp
xchg
mov
data16
mov
call
cltd
test
loopne
jmp
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
movsb
sbb
dec
pushl
ljmp
pushf
pop
rep
cs
arpl
test
add
mov
cli
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
call
push
push
mov
fwait
stos
flds
pop
ds
push
insb
push
and
ljmp
jno
imul
and
inc
jbe
and
inc
jae
sub
push
jns
insl
arpl
decl
inc
or
push
cmp
sub
inc
outsb
dec
inc
pop
ds
jo
bound
jne
and
push
dec
das
xor
jp
pop
popa
cmp
and
aaa
inc
clc
push
dec
jge
mov
das
das
sub
cmp
push
jo
xchg
mov
rcrb
adc
cmp
add
cmp
stc
aas
cmp
xor
jae
fsubs
ja
pop
das
daa
pop
pop
fucomp
fldenv
push
and
push
adc
and
and
das
dec
push
nopl
cmp
out
mov
xor
xor
inc
mov
mov
add
xor
xor
push
inc
add
inc
add
inc
xor
and
ss
popf
mov
inc
push
inc
jle,pn
jge
stc
imul
cmovb
pop
ss
cmpsl
ss
stos
or
push
and
addl
enter
mov
shlb
fmull
mov
popa
and
add
inc
mov
syscall
popf
or
nop
adc
scas
pop
shll
cmp
adcb
sbb
dec
push
xchg
add
jbe
fistpl
dec
mov
arpl
roll
inc
xor
icebp
subb
call
dec
lods
pop
and
push
or
inc
mov
push
dec
add
pop
in
les
cwtl
mov
fldcw
sub
dec
sbb
mul
adc
aad
loopne
or
xor
mov
add
or
mov
insl
push
push
sub
mov
sbb
jp
add
adc
cmp
faddl
sbb
stos
mov
int3
mov
loop
sub
pop
jo
inc
mov
pusha
lock
adcl
sbb
pop
cmp
inc
pop
cmpb
cli
gs
lret
inc
div
rcll
inc
push
push
xorb
jne
mov
mov
push
pop
mov
and
xor
rol
adc
pop
or
fiaddl
push
push
ss
shrb
sti
fldpi
test
in
sbb
adc
mov
rorl
dec
push
out
ret
pusha
sub
push
call
int3
mov
enter
xchg
adc
push
fisttpll
add
inc
lcall
imul
jb
xor
js
xor
jae
popa
pushf
xchg
mov
insl
gs
cmp
ret
jle
dec
fwait
mov
out
and
aad
insl
dec
and
pushl
insl
loop
jecxz
scas
mov
data16
decb
inc
outsl
insb
dec
outsl
add
push
popa
je
push
popf
insl
int
pop
sbb
inc
and
fistpll
fidivrs
add
pop
inc
or
pop
out
adc
push
mov
in
and
push
push
push
pop
push
or
and
std
das
aas
sbb
push
cmpl
lret
xchg
add
data16
push
addb
add
data16
inc
pop
fcomps
out
fs
insl
addb
xor
jbe
adc
jnp
popa
rcrb
add
das
stos
xor
ds
movsb
adc
push
cli
gs
addr16
aaa
mov
sub
test
xor
pop
pop
pop
fadd
jge
js
push
lahf
pop
inc
daa
mov
pop
pop
dec
out
push
nop
rorb
fcom
mov
outsb
dec
popa
dec
rclb
push
ja
jb
pop
loopne
mov
repz
xor
insl
xchg
push
nop
mov
shlb
movsl
movb
out
push
test
xlat
pop
imul
or
test
jg
add
pusha
arpl
lds
inc
xor
adc
insl
sbb
push
adc
mov
add
call
sbb
xor
insl
daa
shl
mov
fs
jo
mov
or
cmc
lcall
imul
push
mov
movsl
pop
push
add
mov
lret
lea
adc
cmp
xor
mov
iret
pop
cmp
stc
xor
scas
pusha
push
and
xor
mov
xlat
inc
loop
mov
ds
sub
push
dec
cmp
sbb
das
adc
das
mov
and
inc
push
daa
sbb
push
mov
sub
adc
mov
push
adc
push
add
inc
fstpl
pop
ja
imul
pop
imul
je
dec
dec
mov
adc
push
xchg
push
aas
or
push
ja
imul
arpl
pop
pop
aas
pop
mov
add
xchg
aaa
pop
jnp
pop
pop
cmp
sub
mov
fdecstp
mov
dec
pop
dec
pop
movsl
mov
int
repz
pop
repz
mov
je
insb
push
mov
cmp
xchg
xchg
sbbb
xor
maxps
mov
dec
shll
xor
mov
ret
aas
add
sub
inc
dec
and
xor
mov
or
and
pop
add
cmp
xor
subl
sub
add
push
aaa
mov
ja
jmp
out
push
pop
gs
sub
jb
lea
int3
dec
je
and
addr16
popa
xor
aam
push
dec
outsl
and
insb
push
bound
mov
inc
push
mov
imul
and
ss
scas
pop
ja
add
pop
insb
adcl
dec
sub
pop
push
dec
inc
test
pop
dec
xlat
jbe
xchg
cmp
gs
js
loopne
sbb
movzwl
pop
daa
dec
push
dec
and
mov
jb
adc
jno
or
dec
mov
and
rolb
inc
add
cld
pusha
or
rcll
sub
stos
mov
ret
sub
and
add
js
std
imull
pop
js
xorl
jnp
dec
loopne
push
jb
push
adc
std
xchg
jbe
jle
inc
rdtsc
mov
imul
jne
or
sbb
jg
xor
sti
cmp
push
jl
push
push
sub
xor
push
mov
dec
add
sub
shlb
and
or
pop
in
and
pop
add
jnp
ret
and
adc
push
loope
fwait
push
loop
in
or
pop
jnp
mov
cmp
je
xor
adc
push
or
ss
xchg
jnp
pop
xchg
push
outsb
sub
sbb
mov
sub
or
int3
adc
pop
and
dec
insb
add
inc
subb
jg
bound
mov
mov
ss
mov
jl
sbb
daa
and
testb
stos
outsl
or
or
cmp
mov
sub
push
popf
call
dec
mov
sbb
and
mov
das
mov
jge
mov
orb
xchg
dec
inc
xadd
cmc
inc
dec
mov
cmp
add
inc
mov
andb
cmp
jns
in
mov
jo
maxps
dec
add
in
roll
add
jmp
outsb
dec
test
xchg
push
inc
pop
cmp
jae
lods
daa
aas
add
in
stc
out
test
addr16
movsb
fsubl
sbb
fidivs
in
push
clc
xchg
adc
movsb
or
lods
in
outsl
ror
mov
shll
aaa
inc
push
lahf
add
pop
lods
mov
or
push
jo
outsl
inc
sbbb
xchg
fcmovnu
sub
outsl
mov
mov
aas
jl
mov
jg
dec
outsl
nop
sbb
push
daa
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
and
add
loopne
repz
or
push
push
mov
xchg
js
ja
iret
xor
adc
push
dec
movsb
pop
lcall
cld
pop
and
call
into
jnp
in
inc
pop
sahf
pop
pop
ds
out
ds
repz
mov
inc
in
pop
movb
sahf
cmpsl
stc
cmp
mov
dec
lcall
sbb
repnz
push
add
js
adc
mov
jbe
imul
cs
movsb
ss
add
imul
sbb
xchg
jns
sbb
add
mov
out
or
jl
add
inc
dec
mov
push
mov
fildl
sub
ja
sub
mov
adc
popa
xchg
dec
mov
xchg
pop
fsubrl
clc
sbb
and
inc
or
ret
push
lock
sbb
and
dec
outsl
add
insb
and
mov
js
jnp
sahf
mov
leave
and
sub
or
ss
add
adc
add
dec
adc
pop
pop
pop
pusha
and
xor
push
outsl
out
scas
or
xor
dec
repz
dec
xor
pop
mov
test
int3
fcoml
fmuls
sahf
pop
in
pop
scas
add
push
lods
ljmp
sbb
xor
xchg
xchg
sub
xor
sahf
or
jnp
roll
and
lcall
xchg
imul
out
sbb
add
sub
xorb
cmp
ds
jnp
dec
push
loopne
movsb
cmp
pop
or
ss
nop
jg
sbb
push
xor
out
ja
or
add
leave
push
ja
pop
sbb
jge
repnz
xor
inc
push
push
pop
fmuls
movsl
fildll
filds
js
and
fs
cwtl
sbb
and
sub
push
loopne
mov
xchg
or
in
or
out
cltd
jecxz
ret
shlb
adc
xlat
cmpsl
popa
call
push
aaa
addr16
push
jo
mov
mov
mov
outsl
int3
idiv
fcompl
leave
nop
popa
fnsetpm(287
daa
add
mov
aaa
nop
ss
cwtl
andb
pop
cmpsb
pusha
mov
xsave
push
pusha
pusha
loopne
cmpsb
outsl
xchg
les
test
mov
xchg
add
pusha
sub
xchg
leave
pop
enter
sbb
dec
enter
sbb
adc
cmp
divl
sbb
nop
popa
dec
popa
outsl
push
push
sub
ret
push
jg
or
add
xchg
daa
mull
push
mov
bound
fsubl
cmp
int
sarb
bound
popf
cmpsl
push
test
jo
rdtsc
xchg
clc
mov
or
push
bound
bound
mov
sarb
scas
add
xlat
or
ds
inc
xchg
or
or
cmpsl
mov
pop
rorb
daa
and
pop
xor
mov
testl
and
add
add
scas
and
fiadds
push
jo
cld
arpl
mov
adc
cmpsb
aaa
sub
push
dec
sub
add
fs
add
add
in
lock
add
adc
mov
in
in
xchg
cld
jg
pop
xchg
push
repnz
xor
push
jg
addr16
add
cs
pushf
lods
mov
mov
or
dec
pop
and
jmp
jnp
and
and
call
push
xor
shlb
lds
or
pop
cmpsb
jo
pop
mov
data16
xchg
dec
and
adc
add
negl
int3
xchg
sbb
sbb
mov
cmpsl
add
xchg
or
sbb
xlat
add
push
sbb
sahf
iret
in
jbe
or
push
out
movsb
or
pop
leave
xchg
pop
add
cmp
xchg
mov
sub
jns
jbe
sahf
imul
cmp
repz
xor
nop
push
xchg
sahf
sub
mov
loopne
pop
push
scas
or
aas
or
dec
enter
jl
push
push
xor
outsl
add
adc
xchg
pop
or
fisttps
or
dec
cs
mov
xor
add
ss
pusha
shrb
imul
scas
add
mov
inc
mov
popa
out
popl
fiaddl
push
sbb
pop
addr16
pop
or
test
cld
scas
in
outsb
daa
or
fdivrs
seto
pop
outsl
mov
pop
and
in
add
test
sub
xlat
mov
mov
mov
daa
xor
inc
imul
push
sarb
push
sub
or
es
subb
xor
rolb
pop
mov
mov
lods
and
xchg
hlt
mov
xchg
in
insb
data16
xlat
pushw
stos
add
push
negb
insb
push
jo
xchg
mov
aas
pop
fildl
jo
sub
push
add
insb
or
cld
or
dec
dec
push
ret
jbe
out
sahf
out
ja
lea
lahf
jmp
js
push
outsl
xchg
mov
xor
out
out
jns
pop
cmp
ds
je
sbb
push
push
jg
lcall
test
repz
repz
lods
fsub
jns
out
jge
inc
bound
mov
and
stos
sahf
cmpsl
stc
cmp
sbb
dec
repz
sbb
sahf
out
mov
subb
xchg
repz
out
negb
orl
out
ds
jmp
test
fcomi
sbb
int
pushl
xchg
stos
sarl
pop
xchg
stc
cmp
imul
and
lahf
xlat
sbb
dec
repz
mov
lahf
out
adc
mov
jns
ja
push
cmpb
lcall
xchg
aas
cmpsl
stc
cmp
push
fldenv
xchg
mov
push
xchg
inc
xchg
pop
int
jns
xchg
mov
insb
stc
out
repz
fadds
push
or
outsl
mov
repz
iret
iret
pop
cltd
mov
dec
push
fwait
inc
fs
out
ds
pushf
nop
cmp
ja
in
and
jns
xor
out
in
mov
jns
out
mov
fucom
fucom
call
testb
andb
or
or
pop
xchg
rorb
cmpsl
repz
in
mov
stc
cmp
inc
mov
fisubrs
int
stos
pop
mov
sarl
xchg
lods
es
lahf
cmpsl
stc
cmp
or
ja
push
scas
imul
inc
mov
mov
cmp
lahf
out
jmp
mov
lcall
mov
cmp
jl
cld
mov
out
idivb
jns
iret
rep
in
dec
mov
int
icebp
and
xchg
or
cmpsl
push
int3
repz
out
ret
pop
call
ds
dec
jno
sub
lahf
idivb
iret
repnz
int3
jbe
fstps
into
sar
and
or
sub
insb
mov
imul
add
out
rorb
das
add
xchg
out
ficoms
je
ja
fisubl
mov
cmp
ja
add
fcmove
inc
repnz
test
out
mov
add
pop
femms
fcmovbe
xchg
aam
dec
sbb
das
in
sarb
xor
icebp
sbb
mov
ja
push
and
add
mov
xor
xor
push
mov
loope
jae
lahf
jl
xchg
out
or
das
xor
inc
inc
pop
enter
roll
mov
ss
out
outsl
je
out
jbe
xchg
cmpb
dec
mov
pop
repnz
xchg
xchg
xchg
dec
sahf
push
filds
mov
jbe
pusha
jae
mov
mov
mov
aas
cmpsl
fmuls
call
cltd
cmp
rcr
leave
les
jne
aas
mov
inc
mov
repz
aas
mov
xchg
inc
pop
mov
xlat
sbb
xchg
sbb
fdivrp
call
pusha
pop
inc
into
push
inc
pushl
and
lods
incb
getsec
fstpl
jbe
popl
push
push
adc
cmp
in
call
decl
xchg
ror
pop
iret
push
stos
and
add
push
add
cmp
ja
or
pop
inc
enter
pop
fwait
adc
sarb
dec
pop
stos
sbb
and
and
sub
jo
sbb
pushl
pop
cmp
push
pop
lret
cmp
iret
xchg
pop
ja
aas
mov
enter
push
mov
js
repnz
or
call
xchg
push
add
inc
cmove
inc
dec
in
dec
push
in
js
js
js
jb
movsl
scas
push
adc
pushf
mov
jns
les
in
js
mov
cmp
jle
adc
dec
push
mov
scas
push
js
jns
test
sub
cmpsl
push
add
out
jne
xchg
dec
mov
fistpll
jp
mov
and
push
sbb
jae
jp
push
jb
jbe
mov
in
and
jnp
and
add
lock
cmp
add
movsb
xchg
shll
jnp
and
stc
fidivrl
nop
inc
cs
inc
outsl
clc
outsl
inc
iret
enter
xlat
call
lods
xchg
xchg
jnp
mov
pop
inc
imul
jl
nop
and
jl
pushf
sbb
or
inc
scas
mov
adc
int
add
in
clc
call
pushf
jmp
jns
jns
repz
repz
add
add
add
in
push
testl
ja
or
inc
repnz
add
xchg
jno
les
mov
aam
xchg
pushf
xchg
add
pop
adc
xchg
jle
jle
movb
stc
pushf
cmp
add
and
insl
lcall
push
mov
sarl
xchg
js
cmp
add
or
in
xchg
and
sbb
and
adc
addr16
jnp
push
or
daa
daa
daa
daa
pop
gs
jne
leave
and
insl
daa
daa
daa
test
mov
lahf
mov
fisttpl
jecxz
testb
psubq
add
xchg
addr16
jl
pop
hlt
cs
fcoml
push
adcb
mov
loope
aaa
sete
jl
xchg
mov
mov
inc
dec
mov
hlt
daa
mov
dec
push
leave
fs
xor
mov
cmpsl
inc
pop
pop
jge
mov
cmp
inc
dec
nop
mov
add
roll
fadds
in
push
add
jge
mov
xlat
add
mov
cmpsl
in
or
addb
mov
dec
int
repz
lods
or
sbb
and
and
les
xorl
out
es
daa
inc
xchg
mov
jle
jle
jle
and
cmp
jle
jle
cmpl
mov
fwait
mov
jae
enter
repnz
test
push
repnz
sub
dec
repnz
repz
jle
jg
repnz
pop
jg
jg
jg
cmp
repnz
jg
push
or
iret
repz
popa
or
or
orb
sets
cmp
repz
repz
mov
adc
loop
lock
sahf
push
sbb
sub
adc
nop
cmp
test
fists
nop
mov
pop
and
addr16
out
faddl
lock
xchg
sbbl
mov
xchg
pop
add
pushf
xchg
scas
sbb
lods
scas
daa
xchg
dec
leave
push
hlt
in
xchg
or
nop
xchg
inc
repnz
shlb
push
add
out
repz
das
lock
adcl
push
add
pmulhuw
loopne
inc
push
iret
add
jecxz
add
add
outsl
in
inc
add
add
pop
cmp
sub
mov
jbe
push
add
mov
cmp
outsl
decl
sub
add
aas
mov
and
mov
mov
xor
adcl
mov
pop
and
mov
leave
mov
addl
loopne
push
cmc
xchg
mov
adc
addr16
push
dec
dec
mov
inc
mov
mov
pusha
mov
pop
and
cwtl
insl
push
pcmpeqw
jns
daa
jge
add
leave
dec
into
lock
add
lret
iret
shll
mov
push
jb
test
aaa
jb
mov
push
leave
dec
rorb
and
test
test
in
repnz
addb
dec
es
mov
out
cs
mull
dec
mov
mov
jnp
out
fistps
dec
lcall
add
fmull
mov
inc
lea
xor
outsl
mov
je
pushf
addr16
mov
iret
xchg
xchg
xchg
testb
mov
push
xchg
xchg
xchg
xchg
xchg
xchg
outsb
mov
pop
pi2fd
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
add
and
jns
test
xchg
cmpsl
sahf
lods
xchg
vpshaq
push
add
leave
and
xor
jb
mov
mov
mov
lods
cmp
leave
mov
cmp
hlt
xchg
xchg
mov
mov
out
movzbl
push
mov
and
scas
into
mov
testl
ss
stc
push
add
mov
cmp
into
mov
cmove
loopne
mov
ja
out
inc
cmp
ja
add
ja
jg
iret
and
or
or
xsaves
scas
push
xcrypt-ecb
cmpsl
dec
pop
repnz
iret
add
sbb
push
loop
lock
mov
cmp
xchg
inc
pop
or
out
loopne
daa
adc
cmp
xchg
in
add
cli
mov
mov
mov
mov
shll
cwtl
mov
add
lahf
les
mov
xchg
add
dec
lock
add
rorl
pushf
xlat
loop
add
add
cmpsl
push
push
add
cmp
or
or
das
cmp
repz
cmp
or
outsb
mov
jb
jb
stc
int3
aas
adc
xchg
fwait
mov
cmp
test
xchg
pop
ss
enter
mov
mov
pop
jns
fucomi
cmp
inc
pop
dec
push
push
mov
out
pop
or
lods
nop
orb
and
add
je
enter
push
daa
in
inc
pop
pop
jno
mov
mov
ds
inc
inc
xchg
iret
add
mov
enter
xchg
jmp
in
stc
add
addr16
push
lds
xchg
les
mov
mov
sub
fdivs
mov
xchg
scas
sub
push
lea
pop
jg
outsl
jb
dec
es
adc
orl
mov
jbe
xlat
rolb
sahf
out
pop
ljmp
or
push
in
int
xor
dec
repnz
jbe
js
pop
leave
jae
jl
mov
stos
incb
mov
dec
dec
cs
mov
mov
mov
cmp
lret
push
pop
data16
jno
lret
lret
lret
lret
jl
xchg
cmp
lret
lret
test
mov
sar
jo
jb
xchg
in
cli
lret
lret
pop
js
nop
outsl
adc
lret
lret
es
xor
leave
xor
lret
push
nop
pop
nop
lock
xchg
push
adcb
in
mov
in
in
int
jecxz
or
enter
cltd
or
adc
jbe
inc
fwait
in
addr16
push
pop
and
mov
loopne
jns
add
shrl
mov
rorl
rcr
mov
xchg
push
add
push
lds
lcall
leave
xchg
adc
pop
jp
sahf
out
cs
add
mov
xchg
or
mov
xchg
lods
push
mov
into
lock
xchg
lahf
push
xchg
fdivrs
sub
or
push
insl
lods
scas
mov
inc
fstl
rclb
push
cmp
mov
push
cmp
add
ja
pushf
das
enter
std
xchg
add
lcall
mov
and
xchg
sub
out
mov
inc
or
xor
xchg
dec
push
xchg
ja
fdivs
idivl
cltd
ja
cmp
mov
cmp
mov
adc
push
cmp
sbb
loopne
xchg
sahf
aaa
dec
xchg
mov
sbb
xchg
pushl
popf
pushf
pop
xchg
dec
sahf
xchg
movsl
add
enter
cmp
out
add
add
repz
es
push
out
xchg
push
add
xor
aad
xchg
xor
jg
xchg
frstor
pop
fbld
daa
out
mov
ja
add
jbe
xacquire
fistpll
jae
xcrypt-ofb
cmpsl
scas
xchg
outsl
dec
ror
lret
mov
mov
jo
xchg
and
sbb
xchg
add
or
es
ucomiss
xchg
lahf
dec
xchg
push
xchg
or
pop
lar
addr16
ficoml
inc
daa
mov
in
xchg
xchg
mov
stos
mov
cmpsl
push
lods
aad
mov
mov
out
xchg
push
rorb
push
cwtl
push
push
popa
xchg
push
and
repz
inc
inc
dec
or
inc
push
push
add
inc
xor
inc
repnz
cwtl
nop
mov
rcrl
pop
je
jl
and
insl
sbbb
repnz
pop
pop
scas
cwtl
mov
xor
cwtl
cwtl
imull
nop
push
or
inc
mov
adc
daa
push
xchg
cmp
fcmovne
idiv
out
pop
cltd
decl
cltd
pushf
popf
dec
mov
cltd
jns
pushf
mov
add
lea
cltd
xorb
mov
inc
dec
push
iret
rcrb
daa
daa
pop
pop
ljmp
cmp
and
adc
sbb
daa
iret
or
sub
xor
jns
out
or
jns
out
adc
pop
push
repnz
lock
enter
lcall
out
sahf
scas
add
scas
cs
std
flds
ds
inc
and
movsb
or
movsb
jo
jbe
dec
and
scas
neg
pop
lock
fwait
lahf
push
push
add
push
fwait
test
cmp
mov
jae
add
pop
in
mov
xor
scas
jg
add
lds
popf
out
mov
push
or
pushf
nop
mov
inc
add
fsubs
out
or
out
inc
dec
das
pushf
aaa
push
pop
push
lahf
es
fwait
loopne
pushf
pop
inc
push
add
lea
jmp
push
pushf
pop
ljmp
orb
pushf
cmp
and
iret
sbb
lret
aaa
jns
add
fisttpl
fildl
jmp
repz
inc
into
hlt
cmp
add
popf
in
addr16
sbb
sub
xor
xchg
xchg
xchg
pop
push
popf
outsl
popf
popf
jg
sahf
out
mov
xchg
add
xchg
pop
insb
cmpsl
mov
ret
ja
enter
and
popf
ljmp
or
repnz
sbb
out
push
jns
jg
test
push
out
aam
push
jl
js
fisttps
sahf
outsl
add
test
in
xchg
jg
xchg
popf
sahf
out
test
mov
mov
sahf
leave
sahf
aam
fistps
xchg
sahf
cmc
push
or
ja
stc
pop
push
lahf
sbb
sub
movd
in
cmp
call
and
jno
sbb
or
fstl
daa
int3
scas
xchg
lahf
mov
lahf
stos
lahf
pop
mov
add
ret
add
shrl
xchg
out
cmp
push
mov
scas
mov
mov
push
mov
mov
jb
mov
pusha
mov
imul
cmp
mov
lods
mov
mov
iret
in
mov
insb
stos
push
enter
mov
xor
mov
xchg
and
mov
push
sub
mov
mov
inc
iret
out
xchg
int
loopne
lods
cmpsl
or
stos
sub
xchg
das
lahf
inc
rclb
cmpsl
jae
xchg
pop
push
mov
or
lods
test
scas
daa
mov
in
pmaddwd
std
bswap
pop
test
mov
dec
sahf
or
and
xchg
add
loope
pop
mov
push
add
aas
push
sub
jne
mov
pop
push
aas
push
aas
jns
cmp
pushf
movsb
cmp
cmp
lods
lods
lods
mov
xchg
cmp
iret
add
jp
jb
out
mov
lret
mov
shrl
xor
mov
cmpsb
loopne
inc
dec
mov
dec
mov
jle
roll
xchg
lods
vmwrite
out
mov
mov
scas
xchg
scas
pop
out
or
movsb
pop
pop
cmova
shlb
in
xchg
and
push
movsb
popa
movsb
repz
jb
movsb
ja
cmpsl
or
js
xlat
mov
inc
mov
mov
push
cltd
push
cmpsl
in
fsubrl
cmp
lahf
cmc
cmpsl
std
add
sbb
pop
mov
sahf
aaa
imul
jnp
in
inc
dec
push
cmpsl
push
cmp
es
push
pusha
lar
pop
leave
ror
or
dec
outsb
notl
cvtpi2ps
jnp
pop
mov
loope
jmp
xor
dec
mov
fwait
idivb
push
xchg
add
enter
mov
nop
cltd
lahf
cmpsb
adc
ja
cs
mov
addr16
addr16
mull
out
ja
mov
test
inc
cmp
iret
xor
es
jmp
push
push
pop
rorl
cmpsl
shlb
sub
insl
daa
mov
cltd
mov
jns
out
add
test
xchg
out
mov
xchg
xchg
shll
call
cld
rcr
and
daa
hlt
in
and
test
sbb
jb
test
test
push
add
es
repz
dec
push
push
repz
loopne
outsl
pop
test
or
sahf
cmp
imul
xchg
add
leave
subl
aaa
lods
lfs
mov
int3
mov
or
cld
mov
xlat
shr
in
out
maskmovq
inc
fnsave
pop
sysret
pop
test
jns
pop
test
pop
leave
cmp
in
das
pop
test
bt
adc
xchg
outsl
sub
test
out
ss
test
call
pushf
cmp
or
mov
divb
jb
stos
cs
stos
iret
ds
iret
jae
cmp
dec
pop
dec
push
outsb
es
repz
jbe
jle
and
jmp
das
das
das
pop
mov
xchg
fsubrl
xchg
pop
sahf
adc
scas
adc
mov
leave
into
stos
pop
sbb
jns
in
mov
push
inc
loopne
aaa
leave
xchg
mov
push
daa
movsb
outsb
jns
xor
stos
pcmpeqd
mov
ja
inc
dec
icebp
inc
stos
fisttps
push
stos
outsl
leave
insl
sub
sbb
mov
mov
pop
mov
das
xchg
or
das
in
stos
mov
cmpsl
mov
les
add
and
or
or
mov
mov
out
add
loopne
aad
add
mov
fwait
in
or
jbe
fldl
dec
push
ja
pop
or
xchg
pushf
ja
jg
fistl
mov
fucomi
subb
roll
xchg
out
fildl
jb
pushf
or
repz
jo
stc
pop
ja
adc
push
pop
lods
pop
inc
mul
mov
lods
dec
pop
push
call
dec
cs
out
rclb
xrstor
mov
fnstenv
cmpsl
mov
add
scas
js
push
dec
call
scas
push
sbb
add
das
scas
scas
pop
rorb
out
add
clts
mov
push
scas
pop
pop
addr16
insl
sub
jno
dec
mov
outsb
mov
lcall
mov
into
add
add
cmp
cmp
or
rorb
leave
push
repnz
inc
ds
adc
cmp
and
xchg
out
jns
xor
cmp
or
xchg
mov
enter
dec
mov
daa
mov
stos
mov
mov
add
pop
fisubrs
out
out
test
mov
mov
push
push
daa
fsub
jns
das
push
or
push
push
shll
aas
mov
nopl
jb
bound
jp
cmp
mov
xchg
lods
cmp
cmp
mov
out
popf
pushf
mov
mov
cmp
cmp
mov
mov
out
cmp
fistl
cmp
movss
out
aaa
sbb
inc
movsb
xchg
and
sbb
dec
ss
jmp
pop
mov
push
test
imul
mov
aam
enter
mov
mov
mov
repz
scas
das
mov
add
add
pop
push
popa
mov
sbb
es
rolb
mov
inc
repnz
sahf
fcmovne
idiv
ja
fsubrs
add
and
mov
pop
seta
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
divb
jp
aaa
jb
mov
push
pop
push
sbb
stc
mov
shll
dec
jno
mov
dec
mov
mov
sahf
out
outsb
pop
pop
add
add
dec
push
out
lea
mov
mov
jb
enter
mov
mov
mov
mov
aad
fnsave
enter
clc
add
outsl
in
mov
push
sbb
sbb
repz
sub
xor
sbb
inc
push
dec
pop
push
fwait
cmp
repz
movupd
jbe
scas
sbb
mov
ret
push
cmp
pop
shrd
mov
add
push
dec
mov
jno
and
mov
ret
popl
sbb
divl
and
leave
repz
add
sgdtl
es
dec
xor
push
pop
push
mov
mov
ja
insb
ja
pop
leave
jae
mov
add
daa
in
hlt
fdivl
jns
das
pop
mov
leave
or
in
inc
mov
dec
outsb
mov
fs
outsl
jp
repz
in
ud2
nop
or
xchg
fcmovne
fwait
cmpsb
pop
mov
adc
aam
push
cmc
mov
jbe
mov
and
out
sbb
aaa
inc
sahf
out
jns
dec
pop
pop
arpl
in
dec
outsb
and
mov
jmp
lds
mov
jb
call
mov
mov
mov
cmp
sbbl
hlt
enter
cld
add
decl
out
sahf
fistl
sbb
and
daa
daa
mov
sub
pop
push
jo
jbe
cmp
lods
sbb
in
int3
aam
sahf
ja
repnz
out
jns
pop
and
insb
in
dec
sahf
mov
fucomi
mov
sub
stos
jo
cmp
mov
xchg
push
sbb
daa
adc
in
mov
movaps
add
xor
in
sahf
push
cmp
inc
dec
out
in
sahf
or
pop
popa
push
or
scas
fwait
cmp
femms
jno,pt
jns
iret
repz
orl
push
adc
xadd
cmpsl
add
push
out
sbb
mov
bnd
inc
sbb
leave
sbb
inc
inc
ss
enter
sbb
in
in
mov
leave
mov
push
pop
leave
out
xchg
adc
aas
mov
sub
mov
cmpsl
popf
pop
and
push
in
mov
cmp
mov
in
lret
pmullw
in
test
lahf
setae
sub
sub
xor
mov
sarb
cmp
ja
push
lock
lret
aas
xchg
out
jb
sahf
cmpsb
scas
xchg
dec
cs
jo
loope
dec
scas
popf
jmp
xchg
mov
rcrb
mov
inc
setle
push
jmp
add
hlt
in
dec
outsl
push
ja
rcr
xchg
push
jg
int3
mov
pushf
pushf
mov
ret
mov
mov
xchg
cmc
std
add
xorl
pushf
cmp
jb
push
add
fcmovne
repz
pop
punpcklbw
fbstp
dec
dec
inc
int
mov
jb
xchg
fwait
mov
push
ja
leave
repz
add
lea
iret
testb
dec
or
ret
int
cltd
popf
dec
xor
jg
add
iret
mov
push
add
in
jbe
cmp
popa
imul
jns
jns
or
in
in
xchg
movsb
imull
fstpt
jb
jb
out
idiv
dec
and
jns
ret
xor
sub
repz
faddl
add
fcmovne
dec
push
cmpsl
push
jl
mov
jge
test
scas
leave
insl
sub
ror
test
mov
dec
pop
fidivrs
shl
jbe
cmp
fsub
iret
or
leave
inc
out
rol
addr16
jb
cmp
add
jns
jae
xchg
add
cs
out
test
filds
into
leave
inc
repnz
mov
daa
mov
add
jp
out
add
jl
xchg
xchg
fld
in
jg
mov
lds
lds
pop
imul
xor
cs
das
das
cmp
inc
lds
pop
xchg
out
fistpl
movups
push
jae
mov
mov
pop
pop
lahf
lds
lds
out
lret
push
and
and
jmp
in
and
and
out
pop
push
mov
es
sbb
outsb
daa
iret
repz
cmp
inc
sahf
out
jns
dec
dec
sub
jns
gs
jnp
cmp
repz
xor
leave
repz
mov
mov
enter
jmp
hlt
decl
fsts
fildll
ja
push
xor
rorl
jl
xlat
imul
xchg
aas
outsb
push
jg
xchg
das
das
aas
ljmp
mov
das
int3
xlat
loop
in
das
das
das
das
clc
movl
enter
das
and
das
enter
enter
cs
push
pop
pop
sbb
sbb
icebp
sbb
enter
enter
inc
xchg
enter
test
in
sahf
pop
mov
mov
iret
repz
and
and
dec
inc
sahf
pushf
cmc
add
or
cmp
leave
jnp
and
sub
fcmovne
repz
inc
cmovge
jns
out
pop
xor
outsb
daa
mov
out
jns
pop
lcall
cmp
mov
dec
dec
sahf
outsb
fsub
repnz
dec
std
or
movlps
test
lret
pop
shll
lret
lret
fsubrp
in
push
add
ja
out
popl
xchg
or
and
sahf
xchg
out
add
rolb
adc
loop
lret
inc
xchg
xor
out
jp
inc
mov
jl
daa
pushf
inc
xchg
jno
lret
les
cs
push
add
pop
clts
pop
pushf
pushf
pushf
pushf
pusha
push
jns
or
or
fdivs
add
pop
mov
mov
ret
call
fiadds
ficoms
leave
push
push
pop
pop
ds
int3
push
int3
push
int3
push
int3
cs
mov
xchg
adc
addr16
mov
jb
jge
setae
jns
out
sahf
or
sahf
mov
mov
cmp
loopne
testb
leave
and
or
xchg
out
fisubs
cs
iret
repz
sbb
jmp
sbb
sbb
jp
and
fwait
push
and
mov
mov
daa
cltd
jecxz
call
sub
fdivrs
in
xor
sub
add
cmp
repz
pop
gs
xchg
out
add
test
jb
xor
iret
test
mov
lret
loopne
cmp
out
push
push
imulb
iret
sbb
leave
negl
syscall
or
dec
or
pop
iret
and
sub
inc
pop
cmp
inc
adc
aaa
jns
movd
sahf
ja
jns
iret
outsl
iret
jp
sbb
sbb
mov
sbb
cmp
dec
pop
shlb
fucom
jns
outsb
mov
and
out
push
daa
or
adc
sub
repz
pop
sub
sub
cmp
adc
cs
push
shlb
insb
shlb
cmc
xchg
sarb
rorb
inc
lcall
or
xor
cs
or
aam
mov
mov
jns
pop
cs
add
lret
test
add
scas
or
adc
inc
aam
dec
ficomps
fmull
iret
repz
rcrl
add
cmp
repz
add
add
pushf
xchg
setge
fucom
mov
pop
in
inc
hlt
xchg
rcrl
rcl
shll
shr
shr
cmc
rcll
mov
sahf
xchg
enter
dec
push
add
cmp
ja
dec
add
jbe
jmp
pop
imul
fbld
push
leave
out
push
fstl
sub
fcmovne
rorl
add
mov
sahf
xchg
outsb
repnz
or
out
dec
dec
fsubp
or
sahf
push
cld
add
or
dec
sahf
out
push
adc
adc
cmp
repz
xor
cmp
inc
cmp
leave
repz
pop
bswap
leave
repz
je,pt
dec
sahf
xchg
rcrl
rcrb
movsl
push
pop
mov
mov
jb
rcl
rcr
push
push
out
sahf
out
pop
repnz
or
repnz
nopl
or
leave
leave
in
jbe
pop
dec
push
cmp
leave
leave
pusha
imul
fwait
cmp
repz
iret
repz
sbb
mov
out
outsb
daa
ret
dec
into
psubusw
push
out
sahf
xchg
in
and
and
femms
add
mov
sbb
es
daa
xor
cmp
cmp
inc
push
out
daa
iret
sub
cs
sahf
jle,pn
push
xor
jbe
jns
stos
push
xor
dec
sahf
out
lret
aaa
loope
es
sub
maskmovq
cmp
ficomps
or
mov
or
sub
mov
cmp
cmp
add
push
shlb
aas
inc
push
push
pop
test
sti
push
xchg
movsb
dec
and
pop
inc
mov
xchg
add
inc
aaa
outsl
repnz
push
push
add
out
add
add
add
out
or
or
outsb
leave
in
in
or
or
or
daa
adc
adc
daa
and
mov
push
das
push
xorps
pop
imull
push
and
in
in
sbb
push
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
les
data16
pop
adc
loop
add
jmp
jns
out
sub
sbb
repz
out
cld
call
repz
fcom
ror
enter
repz
mov
in
sahf
out
movsb
cwtl
nop
mov
repz
addb
jo
pop
push
cmp
repz
inc
cmp
sbb
dec
loope
adc
add
push
inc
inc
sbb
sbb
adc
in
add
dec
add
popa
cmp
push
push
sbb
lds
mov
add
adc
mov
ss
jnp
in
or
andb
fisttps
mov
pop
sbbl
mov
inc
push
mov
mov
dec
cs
pop
inc
mov
iret
mov
cmp
call
adc
push
notb
in
ficompl
mov
xor
fcomp
loopne
jb
gs
xor
testb
pop
roll
sub
add
jmp
inc
and
xlat
add
cli
inc
aaa
push
jae
push
xlat
incl
pop
or
pop
das
aam
insb
add
pop
push
rorb
inc
adc
mov
ds
repz
or
out
sahf
out
adc
sahf
adc
sbb
in
cmp
repz
lods
sbb
cmp
repz
push
sub
imul
cwtl
jmp
out
dec
repz
ljmp
aad
jp
push
cmp
sbb
jge
lcall
mov
mov
loope
cmpsb
aas
rorb
push
add
fcoms
mov
inc
pop
popa
loopne
or
js
shrb
or
add
pop
adc
cwtl
dec
mov
jo
icebp
sub
push
push
mov
inc
je
adc
jo
rcl
pop
aas
pop
daa
mov
pop
aad
pop
and
pop
call
enter
jg
out
xchg
cs
jp
push
inc
inc
sub
mov
sub
imul
adc
lret
inc
daa
outsl
sbb
push
xor
add
sbb
sbb
icebp
clc
add
lock
and
js
repz
xchg
out
repnz
sbb
cld
lock
sahf
neg
mov
push
push
pop
adc
fsubl
out
sahf
out
push
or
or
jns
idivl
in
enter
out
adc
rcrb
push
mov
iret
repz
test
movsb
and
cmp
repz
jl
cmp
mov
jb
pushf
clc
mov
outsb
shll
adc
xor
and
xorb
inc
cmp
xorl
jg
cmp
pop
cmp
repz
xchg
mov
repz
addr16
add
xchg
mov
bnd
das
push
dec
pop
adc
add
popa
jne
dec
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
int3
jp
jmp
mov
push
pusha
les
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
adc
gs
std
orl
pop
ficomps
frstor
fsubl
pop
pop
inc
inc
je
xchg
insb
inc
inc
push
dec
jnp
mov
dec
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
jmp
fldenv
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
aaa
sbb
pushl
aam
call
xor
pusha
test
xchg
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cli
cmp
mov
inc
movsl
fisttps
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
ljmp
inc
cmp
add
daa
in
xchg
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
mov
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
lcall
or
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
jg
sub
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
decl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
stos
dec
std
cmp
cmpsl
notl
pusha
rorb
imul
sbb
call
scas
fcompl
fldenv
filds
aaa
inc
push
cli
ja
mov
fidivrs
xchg
filds
inc
out
repnz
lret
mov
cmpsb
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
add
ljmp
outsl
sub
mov
or
sbb
add
sub
inc
pop
sub
and
pop
sbb
mov
push
cmp
or
xor
push
xlat
fdiv
cmp
repz
fcmovnu
fstpl
iret
fsubp
jecxz
in
cmp
repz
iret
repz
in
repz
cmc
div
cmp
repz
stc
cli
sti
cld
lea
outsb
pop
adc
aas
rorb
hlt
add
adc
mov
and
push
xchg
dec
in
sbb
inc
push
dec
fcomps
movsl
cld
jbe
inc
pop
jnp
mov
bound
or
leave
mov
arpl
jge
dec
mov
inc
in
fistpll
and
bound
xchg
dec
pop
inc
jno
pushl
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
cmp
xor
xor
bound
notb
jbe
pop
insb
lret
movb
imul
xchg
xor
inc
push
outsl
dec
and
add
push
inc
push
das
dec
es
cltd
cmpsl
lea
and
popa
insb
jecxz
js
daa
fs
sub
pop
fs
je
ss
and
lret
dec
and
ret
mov
icebp
add
jle
gs
test
dec
xor
loopne
xor
aaa
sub
insb
popa
jns
pop
sarl
push
push
dec
insb
pop
popa
adc
fadd
xchg
cmp
je
push
movq
jge
pusha
pop
push
aas
add
cltd
and
jae
adc
int
dec
mov
pop
pop
inc
aas
mov
mov
fwait
lea
mov
inc
es
dec
dec
inc
pop
je
jo
cmp
add
ds
mov
scas
add
std
call
int
push
dec
push
adc
sbb
xor
cmpsb
dec
mov
sbb
sbb
ja
outsb
jne
push
push
xchg
andl
dec
jge
addr16
pop
ja
add
add
or
fcomps
outsl
add
addr16
clc
xchg
popf
pusha
insl
fmulp
pop
jo
popf
push
add
pop
pop
inc
cmp
push
rorl
aaa
push
mov
cld
push
pusha
add
pop
mov
subb
mov
lahf
bound
mov
mov
push
sbb
mov
sbb
and
add
inc
jb
cmp
test
popa
jo
sub
cmpsl
lahf
add
rcl
push
outsl
outsl
test
mov
xor
mov
or
jno
mov
in
add
andl
xchg
nop
test
add
out
inc
adc
arpl
xchg
mov
or
push
push
add
outsl
insb
jns
stos
add
mov
push
jnp
pop
insl
mov
je
inc
outsl
arpl
adc
mov
notb
xchg
iret
inc
push
bound
ja
jge
ficoml
jbe
xor
mov
pusha
jg
push
dec
adc
cwtl
xor
pop
iret
lods
jmp
push
adc
repz
adcl
dec
and
pop
pusha
sbb
mov
dec
sahf
dec
lods
push
sbb
and
add
lock
sbb
push
loop
clc
and
inc
push
inc
dec
pop
mov
je
jns
arpl
je
push
lcall
push
pusha
mov
aaa
inc
jne
push
or
add
sbb
fildl
or
push
add
add
orb
and
pop
lods
and
insb
mov
decl
sahf
jle
dec
lahf
repnz
mov
dec
dec
stc
dec
pop
imul
outsb
sbb
inc
sbb
js
sbb
popa
push
jbe
incl
adc
dec
stos
pop
lds
out
add
cmp
adc
jge
incl
pop
xchg
ret
cmp
in
outsl
fstpt
cwtl
or
pop
xchg
sti
and
push
insl
cmp
mov
sbb
lahf
mov
pop
xchg
and
dec
fdivrp
decl
mov
push
lds
xor
sbb
cmp
fwait
sub
js
push
aam
ljmp
js
imul
mov
adc
push
gs
jmp
cmpb
mov
mov
bound
push
mov
call
clc
or
jo
jmp
mov
ret
mov
cmp
mov
sub
jp
js
incl
lret
adc
inc
xchg
lret
out
push
loop
call
xor
loop
adc
mov
das
es
stc
shrb
xlat
sbb
gs
ja
negb
je
mov
andl
in
mov
cmp
jo
and
rcll
std
nop
bound
data16
sbb
mov
add
call
sub
jl
fadds
in
das
sbb
aas
xor
lods
out
sbb
sbb
call
incl
out
sub
loope
xorl
mov
fadd
cld
movsl
push
xchg
mov
fnsave
cld
push
xor
xchg
sbb
xchg
push
cmp
cmp
sti
stc
fst
iret
test
sarl
pushl
es
mov
inc
mov
pop
cmp
leave
in
inc
dec
popa
jns
pushf
mov
sti
and
lock
mov
sub
idivb
popa
loop
sub
rorb
mov
sti
call
xor
jecxz
stc
or
xchg
jb
mov
pop
fadd
out
cmpb
incl
dec
mov
insb
daa
or
push
pusha
repnz
adc
xor
mov
xlat
jmp
incl
pusha
negb
mov
and
mov
call
lcall
mov
mov
cmc
inc
push
es
js
outsb
or
and
gs
add
in
or
jno
clc
ljmp
and
outsl
add
sbb
loop
lea
ja
scas
sub
out
inc
mov
push
fwait
jb
cltd
or
mov
cltd
mov
and
or
decl
push
out
lods
adc
data16
xor
mov
cmp
ljmp
mov
sbb
out
sti
fisubrs
shrl
in
fsubl
cmpsb
loop
ljmp
mov
mov
movsl
test
addb
mov
clc
pop
not
sar
jmp
std
mov
addb
rcrb
cmp
xor
stos
lds
dec
dec
pushf
pop
cld
ss
fisubrl
add
cmp
push
sahf
push
sti
jg
adc
mov
pop
mov
mov
and
jno
cli
roll
les
adc
mov
sub
lea
stos
add
cltd
cmpb
xchg
xor
dec
dec
enter
jmp
enter
push
fucomip
icebp
mov
pop
and
push
xchg
into
rcll
repnz
push
push
mov
sbb
inc
in
in
mov
and
jb
cmp
inc
xor
int
add
sahf
fcos
ljmp
lock
dec
in
mov
xor
adc
push
dec
or
bound
mov
in
dec
decl
xchg
loopne
or
lret
and
jg
lock
cmpsb
lret
xchg
pop
mov
call
xchg
pop
and
pop
rcl
rolb
cmp
and
cmp
xor
add
decl
ss
mov
lods
mov
mov
jnp
xchg
add
lock
es
sub
imulb
lock
call
lret
adcb
cmpl
lock
in
and
cmp
ljmp
fmuls
inc
gs
ds
mov
aam
mov
daa
sahf
cld
mov
and
mov
xor
scas
adc
pop
leave
xchg
push
mov
cli
pushl
subb
aam
inc
idivl
dec
fdivrl
int
and
mov
stos
leave
repnz
jns
mov
into
rcrb
xlat
les
dec
push
ja
mov
aad
jae,pt
mov
adc
dec
push
out
mov
jne
call
dec
scas
and
insl
daa
lcall
data16
vpunpcklqdq
sbb
stc
push
int3
sub
test
shlb
sub
scas
cli
xchg
add
jge
push
cmpsl
xor
decl
add
lret
cmp
stc
in
jo
push
repnz
cmp
push
cli
aad
adc
rcrb
int
popf
stc
cmp
adc
imul
cmp
jbe
pushf
jae
lahf
call
loopne
out
adc
jnp
mov
sub
sbb
lock
mov
cmpsl
ss
inc
pop
decl
and
enter
xor
dec
loop
pushf
or
hlt
popa
cld
mov
cmp
mov
leave
outsb
pusha
mov
aam
mov
add
decl
and
sbb
adc
out
sahf
nop
xchg
push
add
in
and
lahf
xchg
jl
sahf
arpl
clc
xor
or
rcrb
or
mov
pop
lahf
pushl
popa
filds
outsl
adc
jl
lock
mov
xchg
call
pushf
enter
bound
jb
mov
dec
popf
lea
mov
pop
mov
in
xchg
aaa
ret
inc
pop
push
fiaddl
lods
and
lcall
push
inc
test
dec
rorl
dec
in
shl
pop
inc
repz
jle
js
adc
mov
gs
jp,pt
ljmp
decb
push
and
or
push
mov
ror
scas
xchg
outsb
push
lret
scas
js
incl
lea
xor
adc
addr16
lods
mov
ljmp
aam
push
jle
mov
sub
call
xchg
mov
xorb
call
pop
sub
sub
mov
lcall
std
insl
mov
dec
loop
xor
stos
fdivs
push
int3
inc
ja
cmc
cld
dec
xchg
movsb
pop
xchg
aad
add
outsl
insb
mov
addr16
push
insl
inc
jecxz
mov
je
pop
rep
insb
sbb
jbe
cmp
rcll
dec
adc
sub
add
jp
hlt
int
gs
lcall
nop
mov
push
cmc
popa
dec
mov
sub
cltd
lret
stc
xchg
lcall
decl
fwait
inc
jae
sbb
insb
pop
push
loope
cli
adc
xor
es
sbb
jno
call
dec
xchg
adc
jmp
outsb
lods
push
mov
cmpsl
pushf
xchg
cmp
hlt
incl
or
mov
popf
loope
and
rcll
sti
and
loope
jae
add
pop
out
adc
lds
mov
jmp
pushl
sbb
mov
jl
pop
jg
jg
test
or
mov
fmul
out
mov
cmp
loope
fnstenv
hlt
xor
mov
mov
mov
imul
mov
sub
call
inc
hlt
inc
subb
lds
call
cltd
lods
mull
inc
cli
lcall
pop
xchg
mov
mov
mov
dec
push
stos
lahf
and
jne
jg
push
in
aas
stc
cld
xchg
pop
xchg
push
cs
inc
in
cmp
jmp
gs
mov
insb
jle
mov
pop
shr
pushl
adc
add
nop
inc
in
insb
mov
pusha
lret
dec
popa
mov
add
jg
dec
les
popa
jbe
mov
inc
pop
fistps
fs
jecxz
add
aas
les
jo
les
jge
hlt
imul
push
movsl
stos
fistl
incl
or
mov
aam
daa
mov
cmp
insb
or
leave
lock
movsl
mov
insb
rcrb
mov
inc
movsl
xor
pop
mov
push
mov
inc
push
sbb
adc
inc
std
aam
icebp
and
out
mov
jg
shlb
loop
xchg
shrl
dec
pop
xor
xlat
jmp
fcomip
jmp
pop
aam
ds
cmpsl
sbb
cmp
mov
mov
ret
adc
xor
loop
cmp
imul
add
cmpb
sbb
fdivp
jbe
adc
mov
aad
mov
dec
adc
lcall
pop
dec
mov
incl
ds
push
inc
shlb
xchg
xor
jnp
sbb
roll
mov
mov
inc
repz
pop
mov
xchg
jp
sahf
push
insb
mov
xlat
sar
jp
mov
push
scas
pop
in
mov
add
jo
aam
inc
shlb
sbb
lcall
jle
ret
dec
out
jno
scas
fs
mov
decb
jg
mov
out
lock
ds
call
push
inc
mov
inc
stos
lret
shrb
add
incl
dec
sbb
pop
pop
movsb
and
mov
push
fildl
mov
or
sub
dec
lock
sahf
pop
mov
repnz
dec
xchg
cs
push
lret
stos
sub
or
movsl
mov
add
or
jns
pop
jne
or
inc
adc
jno
add
out
push
call
ljmp
cld
xchg
sub
and
repz
addr16
inc
mov
lcall
stos
aad
loope
mov
xor
mov
jno
mov
jg
inc
inc
fwait
stos
popa
aaa
cs
mov
popa
add
rorb
loope
ficoml
imul
mov
shll
fwait
mov
mov
insl
jo
sbb
decl
inc
mov
add
orb
iret
and
subb
int3
hlt
adcl
sbb
inc
lret
jns
mov
mov
imul
pop
add
inc
addr16
ljmp
idiv
fcomip
incl
xor
cmp
add
jge
shrl
sar
inc
push
mov
loop
loopne
jg
mov
jge
sub
sbb
lea
xor
sub
dec
fwait
jle
add
mov
scas
mov
inc
popl
cmp
mov
fistl
add
fnstsw
push
inc
pop
stc
sub
xor
xor
cmp
mov
xchg
sbb
dec
pushf
jg
and
rolb
xlat
xlat
imul
jmp
decl
std
repz
sbb
add
pop
mov
popf
and
jo
nop
mov
xor
std
mov
mov
or
insb
push
adc
lods
cli
sub
hlt
dec
mov
sub
inc
fnstcw
mov
push
mov
das
lcall
outsb
cmp
xchg
or
lcall
dec
stos
pop
mov
pushl
test
enter
lock
cmpsb
adc
ja
imul
repnz
cmc
jg
data16
clc
push
popa
cmc
mov
ja
scas
sub
outsb
dec
movsb
je
or
scas
incl
mov
test
sub
pop
sar
jnp
testl
out
sub
mov
insl
or
loop
roll
popa
push
push
push
sbb
dec
cmp
xchg
decl
ds
and
or
inc
data16
es
lahf
les
push
dec
cmp
inc
into
loope
int
ds
mov
repnz
pop
push
xchg
cmp
in
out
push
mov
ljmp
ja
push
mov
mov
stos
out
iret
jle
lret
fs
mov
jl
sub
into
xchg
sarl
xchg
or
das
and
mov
inc
rorb
ljmp
mov
sbb
cs
push
or
incl
mov
jae
mov
xchg
ja
mov
jg
call
and
in
and
and
inc
mov
add
decl
push
cmp
adc
or
xchg
xor
sbb
pop
in
cmc
xchg
push
int3
movsl
push
ljmp
dec
sbb
xchg
ds
pop
mov
and
sahf
fadd
push
imul
inc
mov
jne
enter
mov
fisttpl
xchg
fdivl
pop
mov
ret
sbb
insb
sbb
jmp
leave
loopne
cmp
enter
test
inc
and
mov
and
fldl
inc
mov
cmp
inc
push
fldl
jge
sti
es
rclb
xor
mov
jg
cltd
or
inc
xchg
pop
dec
aas
andb
mov
inc
or
call
stc
dec
movsb
enter
in
imul
jmp
adc
jne
add
and
cmpsl
ljmp
movsl
addr16
jmp
rcl
dec
lods
ja
sti
outsl
mov
mov
scas
aaa
ret
test
cmp
ret
pop
cli
jge
das
cmp
add
pushl
imulb
mov
scas
jmp
dec
jge
data16
mov
jmp
bound
push
cld
adc
jb
dec
cmp
jno
dec
push
fwait
add
dec
fidivrl
cmp
mov
pusha
fldt
loop
xchg
or
insl
xchg
lods
add
mov
je
iret
es
sub
mov
test
sbb
push
sahf
or
int3
daa
pusha
ja
ljmp
in
cli
push
aam
or
inc
hlt
call
ljmp
push
xor
add
daa
nop
push
sbb
iret
scas
ret
mov
sahf
pushl
add
mov
das
mov
outsb
call
dec
dec
loopne
lds
ret
ljmp
push
xor
insl
psubsw
lea
sarl
mov
repnz
dec
pushf
insl
push
or
inc
cmp
jg
and
adc
jp
adc
adc
jmp
int
iret
lods
sub
test
pop
imul
fwait
daa
and
les
stos
push
aaa
decl
sbb
xchg
sbb
cmpsl
mov
repz
out
div
pop
fwait
push
and
pushl
sub
xchg
sar
into
pushf
cmc
int3
xchg
in
insb
inc
aad
or
mov
jge
or
jo
pop
mov
std
pop
and
inc
add
push
lcall
std
out
xchg
dec
cld
fidivrl
push
inc
push
pop
and
jg
mov
pop
xchg
pushf
sbb
outsl
ror
dec
adc
lcall
mov
aas
mov
sub
inc
repz
fidivs
push
inc
shl
or
iret
sbb
sbb
mov
outsb
subl
aam
jmp
push
call
mov
add
sbb
jge
imul
jnp
int
test
mov
pop
fildl
inc
dec
and
jo
xchg
rcr
jmp
jecxz
decl
cld
and
cs
add
rcrb
jecxz
push
sbb
mov
cmp
mov
imul
je
mov
push
mov
into
mov
ljmp
scas
jae
jmp
fst
fimuls
imul
repz
call
roll
and
cmc
fcmovne
jns
inc
popf
or
jns
jecxz
mov
into
arpl
jno
insl
int
sub
add
out
jno
aaa
add
inc
loope
push
or
fwait
or
jg
subb
imul
jge
mov
incl
lret
ss
inc
lahf
jl
dec
gs
loop
inc
lock
dec
xor
dec
push
pop
out
pushl
pushf
xchg
sbb
ss
push
in
pop
sbb
test
test
or
cmp
lock
jg
mov
ficoms
xchg
std
out
mov
fcomip
pushl
or
cmp
xlat
mov
lahf
fisttpll
ret
or
clc
xlat
test
loop
call
mov
xchg
cltd
bound
mov
out
pmaxub
cmp
ljmp
rcll
jbe
scas
inc
mov
fwait
xor
push
cmpb
mov
dec
pop
jg
call
or
ljmp
inc
xlat
mov
xchg
push
ret
mov
dec
daa
dec
mov
in
cli
cmp
push
mov
repnz
jle
in
lds
cmp
mov
std
push
test
mov
and
sti
popa
inc
rcll
lcall
sbb
frstor
push
iret
xor
xchg
movsl
push
xchg
mov
jne
add
call
rolb
jp
sbb
aam
inc
or
jp
imul
rcrb
fcoms
or
dec
xlat
mov
or
shll
xorb
lock
mov
dec
cmp
jmp
testb
xor
pop
sti
inc
cmc
test
mov
lcall
mov
xchg
pop
adc
sbb
push
in
sti
js
mov
and
add
call
stos
test
push
mov
xlat
push
adc
test
pusha
pushf
mov
incl
stos
andl
or
cltd
jne
ds
jp
pop
stos
arpl
and
xchg
nop
dec
fs
mov
iret
std
test
loop
pop
xor
xchg
mov
inc
sbb
xor
mov
mov
jns
call
xlat
jg
adc
mov
xchg
sbb
push
jle
jp
and
xchg
push
shrb
push
ror
nop
pop
push
outsl
fmuls
push
push
jecxz,pt
push
loope
sub
incl
fdiv
mov
mov
xchg
rorb
and
mov
incl
aas
mov
pop
and
push
test
dec
xor
jmp
and
lods
movsl
fnstcw
outsl
cli
ljmp
push
adc
add
cmc
inc
pop
jne
and
call
add
sub
bound
call
sub
aad
and
sahf
int
push
stos
test
push
mov
mov
loope
call
inc
jp
dec
mov
insl
aaa
insb
call
hlt
and
repnz
ljmp
or
mov
or
mov
out
dec
pusha
iret
lahf
jne
mov
xchg
call
repnz
outsb
inc
push
aaa
or
sub
mov
fldl
mov
cmpsb
adc
sub
lcall
dec
add
mov
pusha
daa
inc
sub
push
xchg
mov
and
sub
shr
cld
incl
dec
lds
and
sub
sahf
add
cmpsl
push
hlt
scas
rcl
sub
dec
jmp
ss
inc
pushf
mov
loope
vmovq
and
dec
sbb
arpl
mov
loop
sbb
sbbb
add
xor
mov
lcall
cmp
movsl
xchg
lret
cld
jb
movsl
jecxz
sbb
incl
pop
adc
leave
insb
mov
out
and
enter
xlat
scas
cmc
inc
xor
and
lcall
rorl
inc
cmpsl
add
mov
mov
jne
mov
xor
ljmp
adc
cmc
in
dec
into
clc
inc
mov
stc
std
aam
inc
inc
mov
mov
cmp
xor
movsb
jb
xor
pop
outsl
xor
dec
std
mov
decl
pop
test
add
loope
push
gs
adc
mov
cmpl
mov
lods
sub
mov
std
imul
imul
jb
push
repnz
pushl
xchg
loope
xsaveopt
sub
or
xorl
adc
in
jmp
cmp
jg
pushl
xor
cmp
xor
mov
or
mov
push
xor
cmp
lcall
push
lret
das
arpl
cmpsl
cmp
imul
in
sbb
add
ljmp
das
popa
arpl
outsb
mov
pop
jl
stc
xchg
das
fdivrl
lcall
xchg
and
lea
and
push
push
ret
sbb
sub
jbe
fs
jns
fiaddl
daa
out
lcall
push
lods
lcall
mov
arpl
push
in
ljmp
jl
mov
push
and
sbb
sub
movsl
or
out
and
pushl
cmp
adc
xor
mov
insl
dec
fsts
incl
push
mov
dec
inc
ret
fidivrs
mov
mov
and
stos
loope
jmp
fisubl
pop
movsb
int
rcr
iret
cltd
add
xchg
cs
mov
mov
pop
pop
mov
in
xchg
dec
dec
dec
in
shrl
xchg
inc
daa
sbb
enter
decl
or
sarl
jne
mov
cmp
into
js
out
sub
fisubrl
incl
add
ret
aam
call
aas
movsl
roll
icebp
sbb
ret
call
jg
jb
fdivs
jp
or
push
inc
pop
push
lods
shr
jmp
decl
adc
mov
pop
cli
leave
xchg
inc
ds
or
cmpsl
and
mov
std
inc
movsb
cs
xor
push
cmc
orl
ret
movw
sahf
aas
lods
sarb
pop
jo
jmp
jecxz
mov
pop
out
subl
cs
pushl
cltd
sub
leave
jg
xchg
js
inc
xchg
inc
test
push
imul
push
popa
out
clc
incl
sub
mov
or
pushf
dec
jle
sub
mov
incl
in
cmc
jg
adc
mov
push
clc
jne
sbb
negl
jnp
xchg
jb
shrb
addr16
and
jne
test
cmpsl
pop
fwait
mov
adc
decl
fs
in
fucomp
dec
jnp
jb
arpl
pushl
push
subl
popa
mov
movd
push
xor
dec
xor
cli
repnz
mov
mov
mov
mov
cmp
in
jbe
ret
or
adc
xchg
pop
adc
or
dec
fs
and
jg,pn
mov
jg
xchg
xchg
xchg
mov
pop
lahf
test
fildl
jl
and
ljmp
sbb
mov
pop
fidivrs
sti
cmp
jne
enter
mov
test
incl
jl
mov
mov
mov
xchg
pop
popf
repz
inc
dec
pop
mov
fcomp
inc
jge
imul
inc
xchg
push
rorb
sbb
mov
ljmp
dec
xchg
loopne
mov
add
add
mov
incl
sbb
sbb
shll
push
mov
mov
push
fwait
repz
mov
xchg
or
jl
jno
hlt
arpl
incl
roll
cmp
pop
sarb
jbe,pt
es
in
rolb
dec
xor
jbe
int
sbb
pop
push
outsl
push
movsb
int3
sar
stos
or
ljmp
dec
test
inc
push
and
or
push
sar
jmp
in
mov
mov
test
mov
or
mov
test
jmp
inc
mov
rcrl
addb
pop
mov
sub
pusha
cmpsb
push
das
ss
jbe
xchg
decl
call
das
aam
mov
mov
push
mov
push
repz
adc
lcall
adc
mov
cmp
inc
sub
test
stc
incl
pop
jge
daa
mov
cmp
sbb
out
jbe
iret
dec
inc
cmpsl
fiaddl
inc
jno
ficomps
das
push
dec
xchg
out
xor
mov
push
mov
fucomip
in
orb
into
pushfw
mov
xchg
mov
out
sub
lcall
repnz
outsb
sub
jo
rclb
lret
adc
outsb
andb
pusha
pop
sub
aaa
push
cmp
cs
incl
dec
std
aas
mov
mov
jmp
fsubs
dec
stos
xorb
stos
int
incl
sbb
cmp
loope
push
outsl
inc
dec
pop
je
push
push
inc
fimull
fcmovnbe
test
sub
sar
xor
add
pop
push
jnp
dec
shr
and
call
int3
sub
fwait
loop
mov
inc
and
out
push
stc
pop
jmp
sbb
orl
inc
cmp
sub
shrd
js
decl
test
jb
jmp
add
sbb
dec
xchg
inc
cli
lret
mov
push
sbb
sbb
push
pushl
shl
jl
repnz
lcall
lret
pusha
das
jl
xor
lcall
fsubl
and
dec
popa
mov
xchg
daa
inc
sbb
push
out
mov
ljmp
and
out
stos
ds
xor
std
adc
xor
jmp
cmc
dec
andb
daa
mov
outsl
or
clc
shlb
push
sub
add
outsl
sbb
mov
in
mov
mov
bound
xchg
out
test
cmp
test
in
mov
sub
sbb
pop
xor
lahf
cltd
sub
sub
shlb
fcomip
sbb
gs
popa
or
push
sub
fildll
imul
call
ret
je
adc
mov
fildl
dec
xlat
add
sbb
shl
fldenv
in
and
call
and
pop
mov
outsb
icebp
pop
push
push
test
hlt
fwait
stos
ljmp
cmp
adc
stos
push
ljmp
push
sbb
pop
mov
and
mov
jmp
scas
xchg
mov
das
cmpsb
sub
dec
notl
lock
cli
sbb
jg
cwtl
xchg
std
insl
ds
mov
xor
ljmp
cmp
clc
sahf
in
fucom
mov
mov
inc
and
mov
push
sbb
dec
push
xchg
mov
incl
mov
fbstp
iret
cmp
pop
mov
jle
xorl
xchg
inc
ljmp
fdivl
jo
xlat
not
mov
lock
notb
and
cmp
mov
mov
pushf
shlb
cmp
lcall
and
and
dec
xlat
mov
push
aas
add
mov
fcoml
insl
pushl
pop
adc
and
pusha
mov
jge
and
and
xchg
in
mov
call
xchg
nop
pop
insl
cmp
push
or
add
jmp
test
cwtl
xchg
mov
jae
or
ljmp
xorb
loope
or
ja
xchg
mov
lret
adc
mull
incl
es
jns
push
xchg
push
pusha
enter
mov
sbb
xor
push
aad
loope
decl
sub
pusha
ret
push
test
imul
cmp
push
jmp
xchg
loope
mov
mov
stc
xlat
mov
dec
clc
add
push
imul
pop
mov
mov
iret
repnz
inc
pop
pop
mov
cmp
decl
insb
or
int3
jle
je
repz
push
jg
pushf
lret
in
test
std
jl
add
inc
xor
test
add
stos
inc
mov
data16
cmp
aaa
add
cs
inc
inc
inc
dec
xchg
inc
inc
enter
std
decl
push
inc
pop
shll
or
imul
incb
aam
jbe
jp
dec
imul
mov
push
push
adc
pop
cmp
out
inc
inc
sub
or
int
inc
sar
adc
xor
aad
adcb
mov
mov
cmpsl
leave
inc
fsub
rcll
xchg
jg
mov
push
ss
aam
inc
stos
jno
das
push
jecxz
dec
pushl
jb
cmpsb
daa
pushf
cld
mov
insb
adc
int3
in
rcrl
ds
addr16
decl
iret
add
xor
inc
jecxz
out
jns
dec
lret
xor
lcall
movsl
push
pop
pop
pushf
add
repnz
xchg
daa
xor
push
pop
sarl
inc
jge
aad
in
and
mov
or
decl
mov
adc
jns
aas
push
pop
outsb
push
ss
jmp
lods
or
cmpsb
mov
push
mov
mov
ffree
cmpsb
jno
fxch
divb
xlat
jno
and
loope
sub
cmp
test
pushl
scas
inc
xchg
sub
sbb
mov
mov
out
mov
lcall
adc
jno
sbb
inc
shlb
xchg
ja
jnp
xor
incl
and
fisttpl
cld
and
mov
jno
jmp
add
scas
and
lcall
incl
push
into
dec
mov
sahf
sbb
ja
dec
xchg
sar
test
fwait
in
nop
cmp
outsb
int3
cmp
ljmp
in
push
shrb
jo
and
lret
mov
cmc
jne
decl
add
shrl
test
call
in
dec
adc
cld
decl
pop
xchg
inc
sbb
push
mov
push
mov
fs
jmp
fidivrs
pop
jp
sbb
imul
out
fdivr
jg
cwtl
sbb
add
xor
jl
or
or
sahf
aam
cwtl
sbb
ljmp
mov
and
xorl
rcll
xchg
dec
cs
ljmp
incl
and
test
mov
mov
push
or
mov
xor
jne
pop
sahf
sub
loopne
out
dec
idivb
cld
stos
mov
test
mov
ja
mov
and
clc
test
or
adc
je
sbb
pop
cmp
sub
int
mov
sub
sbb
xlat
mov
xor
insl
jne
por
fucomi
mov
ljmp
sbb
xor
mov
push
pop
cmpb
cmc
inc
sar
push
dec
cltd
sbb
cmp
and
and
mov
ret
mov
pushl
in
mov
xlat
xchg
push
hlt
jmp
jp
dec
test
pushl
shrl
mov
into
mov
xor
subl
bnd
shll
jg
mov
mov
out
leave
xchg
pop
or
rcll
inc
jle
sub
cli
stc
std
jmp
jae
mov
inc
loopne
std
aaa
iret
stos
ror
mov
jle
push
pushl
bound
lods
xchg
push
sbb
clc
fnsave
fsts
sahf
xchg
cmp
adc
inc
pop
inc
popf
fdivrp
mov
mov
js
ss
mov
insb
inc
stos
lods
scas
mov
incl
and
mov
mov
cmp
mov
xchg
xchg
lcall
sar
inc
lahf
enter
add
and
dec
mov
adc
lock
mov
loopne
add
push
mov
lret
stc
mov
add
repnz
mov
lock
xor
ljmp
adc
mov
lcall
mov
popf
adc
decb
inc
inc
mov
push
fcmovu
sbb
jbe
push
mov
decl
pop
cld
aas
xchg
dec
or
pop
xchg
outsb
lods
mov
inc
repnz
push
adc
jg
add
xchg
ds
xor
add
push
or
cli
sbb
sar
xchg
adc
push
jge
jge
xchg
xor
cmpsl
insl
add
push
out
sti
push
cmp
subb
adc
ljmp
cmp
fisttps
les
sbb
mov
lcall
xchg
mov
lock
movsb
test
js
cmp
cmp
jmp
ss
call
pusha
pop
pushf
add
imul
repnz
jnp
call
sub
fs
pushl
es
jb
fnstenv
sbb
pusha
fbstp
fbstp
out
movsb
sti
push
mov
insl
pushf
mov
pushf
add
pop
sub
fadds
xor
pushl
in
fstpt
jmp
jno
bnd
add
scas
in
pushl
sbb
mov
sar
mov
pop
adc
push
outsb
dec
cmpsl
inc
lcall
push
jle
lahf
scas
mov
adc
not
iret
cld
mov
mov
jg
arpl
call
push
mulb
orl
data16
shrb
test
xchg
nop
sub
fwait
pop
and
push
fwait
decl
lock
pop
fdivrs
fdivrl
jne
outsb
xchg
inc
mov
popf
mov
sbb
es
mov
dec
pusha
aas
sbb
out
xor
or
mov
ljmp
push
les
cmp
ss
lret
pop
cld
out
call
mov
push
std
cmp
in
lret
ret
in
xor
dec
iretw
out
push
dec
pop
lock
inc
fcmovu
cmc
repnz
sti
fsubr
adc
add
mov
jns
ljmp
pushf
lcall
iret
pop
adc
ljmp
sbb
arpl
scas
iret
pop
insl
ds
jge
mov
fsubs
dec
bound
add
ret
call
xor
decl
ficomps
jl
lock
test
leave
ud0
ljmp
mov
mov
orb
push
cmp
mov
fiadds
sub
lods
sarb
push
add
pushl
pop
mov
jnp
test
mov
sbbl
out
fldcw
or
cmp
jmp
sbb
mov
add
ljmp
push
jl
lds
xchg
adc
call
mov
pushf
negb
js
mov
xor
call
push
std
iret
pop
mov
push
out
clc
pop
int
pop
lock
mov
mov
mov
adc
push
add
pop
loopne
lcall
fs
push
data16
cs
mov
and
arpl
xchg
enter
movsb
dec
xchg
sti
stos
lock
in
movsb
push
dec
sbb
or
ja
dec
fcomp
dec
fisttpll
or
mov
cmpsl
mov
cmp
add
sbb
test
cli
sbb
jl
xchg
mov
dec
int
popf
pop
or
decl
cmc
xor
or
mov
push
xchg
mov
adcb
imul
lret
inc
movsb
loop
insb
pop
mov
jnp
mov
test
out
and
or
jg
ljmp
fstps
push
insb
std
scas
push
lock
arpl
outsl
bound
stos
pop
xchg
sbbb
out
mov
call
push
ljmp
mov
cltd
lods
dec
idivl
sub
dec
dec
mov
cwtl
repnz
xor
or
dec
jo
cwtl
ret
imull
jmp
pop
mov
pop
inc
popa
dec
or
imul
pushf
jp
xchg
ljmp
cwtl
jp
push
inc
xchg
cmp
or
pop
and
in
and
daa
leave
xor
inc
push
ljmp
je
ficoml
push
jl
mov
push
push
fistl
movsb
int3
sub
jg
lods
setl
sar
push
inc
sbb
cmp
mov
pusha
ljmp
jne
pop
outsl
adc
push
mov
push
inc
pop
lret
jl
rolb
or
mov
decl
inc
cmc
enter
xchg
sbb
xchg
loop
mov
sbb
xor
mov
ljmp
out
cmp
adc
mov
xchg
jae
es
push
pusha
inc
test
enter
addr16
sar
jmp
data16
mov
add
sbb
push
lret
mov
mov
or
jge
icebp
jecxz
mov
push
imul
subl
call
adc
out
pushl
pop
test
xchg
lock
jle
test
mov
in
inc
ljmp
xor
add
lea
lahf
std
faddl
dec
shl
dec
popl
dec
cmp
adc
outsl
pop
aaa
dec
lods
fdiv
cmc
push
enter
cmpsb
imul
repnz
dec
lahf
fidivrs
orl
sbb
and
fucomi
cld
or
sbb
lcall
pop
js
mov
lret
xchg
int3
lret
out
subl
outsl
cli
jbe
push
sbbb
cmpb
clc
ljmp
rorl
and
dec
mov
psubsw
pop
movsb
lods
or
adc
fwait
ljmp
or
lret
test
popa
xchg
mov
rcr
dec
stos
cmp
push
clc
inc
ds
cmp
or
scas
adc
idivb
dec
jmp
stos
sbbb
add
loopne
leave
fnstcw
les
jae
jbe
sahf
pop
pushl
aad
jecxz
into
mov
in
ret
mov
mov
adc
push
bound
push
mov
adc
add
xchg
cmp
push
pop
lret
xlat
or
pushl
mov
push
repz
test
lret
stc
mov
shl
outsl
lock
into
in
xor
xchg
mov
es
test
push
daa
mov
push
es
add
mov
cld
fisttpl
mov
sbb
es
add
or
ljmp
call
fs
mov
xchg
push
dec
leave
push
xchg
xlat
in
mov
push
pop
ret
dec
fcomip
push
js
push
and
gs
sbb
lcall
mov
sarb
xor
or
ja
add
insl
xor
xchg
nop
sub
cld
jns
cmp
jg
into
mov
inc
mov
dec
pop
pop
inc
daa
xor
push
popa
push
in
jmp
lcall
dec
shlb
rorl
leave
ja
push
lcall
inc
sarl
std
pop
push
lcall
sbb
mov
cwtl
andl
jecxz
mov
clc
mov
movsl
mov
mov
mov
arpl
xor
mov
int3
or
lock
and
loop
out
lock
es
cmpl
pop
orb
add
mov
mov
or
imulb
rcrl
mov
and
mov
jmp
je
push
inc
scas
inc
or
sub
fs
ret
shr
repz
mov
rclb
fld1
sub
stos
jl
mov
add
dec
popa
and
shl
inc
cld
xchg
or
arpl
push
cmpsb
cmpsb
dec
jge
push
pop
mov
pop
or
mov
into
cmp
lods
pop
cld
loopne
xor
call
nop
adc
push
lea
repz
cs
sarl
xchg
xchg
push
call
add
rorb
popa
adc
in
mov
cld
sub
and
lcall
xchg
adc
inc
or
push
fs
dec
adc
lea
nop
adc
outsl
sbb
mov
lcall
push
pop
add
adc
aad
jg
cmp
rcll
inc
mov
inc
mov
fs
in
mov
and
mov
mov
xor
and
addr16
inc
ret
ljmp
shlb
pop
cmp
xchg
cmpsb
das
jbe
inc
fdivl
xchg
hlt
jp
into
ljmp
jl
mov
sub
jmp
test
les
sarl
lods
xchg
outsb
jecxz
sbb
out
clc
cmpsb
jmp
aam
leave
pop
add
xor
out
js
incl
push
cltd
lea
loop
icebp
mov
in
ret
xchg
xor
xlat
loop
jmp
stos
xchg
dec
dec
mov
pushf
lock
hlt
das
xchg
add
out
pop
add
hlt
jmp
xor
mov
mov
cmpsb
out
shll
data16
nop
and
dec
popa
add
jmp
jae
icebp
jae,pn
adc
cmp
cld
mov
adc
in
xchg
shlb
jg
fimull
inc
int3
jge
ret
cwtl
popa
pop
sahf
push
ljmp
pop
ljmp
and
aam
inc
sarl
ss
test
jbe
fisubrs
mov
add
mov
movsl
lahf
aam
cmc
pop
dec
jle
lods
push
add
ljmp
adc
lock
std
mov
sbb
popa
jg
shl
push
int
hlt
sahf
push
insb
cli
jmp
adc
int
xchg
out
inc
push
les
ret
xchg
hlt
ja
shrb
sbb
daa
push
idivl
mov
add
push
ror
daa
es
fnstcw
xor
icebp
inc
shrl
dec
sub
adcl
jo
and
jns
pusha
decl
xor
scas
jbe
sbb
cmp
mov
rclb
movl
clc
mov
enter
adc
lock
jecxz
pop
pop
jp
push
or
and
or
pop
sbb
push
cwtd
lcall
in
std
jmp
mov
add
fwait
xor
mov
sbb
lcall
icebp
pop
pushf
adc
mov
or
inc
movsb
xchg
jo
jbe
fbld
inc
rcl
fsubl
xchg
getsec
mov
fstpl
addb
lret
xchg
outsl
xor
leave
sub
xchg
sbbl
loop
bound
xchg
imul
or
incl
adc
pop
cmp
ds
pop
into
xchg
sub
push
sbb
lcall
cld
loope
mov
aas
dec
pop
clc
insl
xchg
xchg
dec
cld
fidivs
mulb
es
pop
fidivrl
outsb
test
clc
mov
or
roll
in
pop
adc
xlat
sub
jmp
les
test
ss
pop
fwait
into
mov
ljmp
loopne
jecxz
mov
dec
loopne
outsb
jno
aad
pop
jnp
aad
fadds
push
xor
stos
xchg
ss
ljmp
add
popf
jg
call
incl
and
imul
int3
mov
lds
push
mov
mov
dec
das
lea
and
adc
pop
and
jmp
push
cld
adc
imul
out
push
jle
lcall
cld
and
aas
mov
test
es
bound
scas
mov
in
add
stos
in
jns
cmp
sar
fbld
rolb
data16
leave
lods
push
jl
lret
adc
xor
jg
cmc
jne
call
mov
gs
imul
sar
lods
or
inc
xchg
out
mov
adc
out
mov
mov
mov
aad
ja
dec
lea
pop
xchg
test
ds
cmp
push
xorl
ret
mov
repnz
add
fcomip
call
stos
repz
jl
aas
jl
rcrb
add
dec
int
mov
mov
imul
arpl
cmp
ljmp
jo
mov
mov
popa
negl
pushl
push
dec
adc
cmp
pop
mov
and
scas
ret
movsl
cmp
jle
sub
lret
mov
in
ss
imul
lcall
aas
cmp
into
jmp
lcall
dec
push
mov
sbbl
mov
jmp
adc
insl
hlt
inc
ret
jmp
pop
ss
inc
jbe
fadd
sbb
jmp
mov
push
ljmp
cltd
call
jo
push
jbe
dec
sbb
push
sti
mov
test
call
addr16
mov
decl
mulb
dec
sub
mov
pop
adc
pop
mov
lods
dec
xor
test
decl
insb
aad
xor
lret
sbb
add
jge
pop
cwtl
inc
repnz
mov
inc
cmovb
jmp
fs
outsb
lcall
xor
fwait
adc
mov
push
pusha
push
cli
ja
cmp
jge
push
pop
mov
stos
sub
sbbb
popf
jb
in
clc
inc
test
incl
push
pop
xor
in
xchg
rcrb
lahf
pop
xorb
sti
dec
ror
rcr
rcl
xor
mov
test
iret
fldl
sub
and
sbb
jg
cld
xchg
mov
ficompl
sbb
insl
xchg
xchg
mov
ljmp
lea
lock
idivl
dec
jne
fwait
loop
and
insl
stos
and
aas
mov
mov
push
jo
ljmp
xrelease
mov
and
dec
cmpsl
fstl
dec
mov
jbe
sbb
pop
cmc
shrb
ds
outsb
add
xchg
shlb
into
jg
pushl
lods
xchg
popf
jnp
imul
push
xchg
sbb
jns
dec
mov
aad
jmp
or
jl
psubd
add
jecxz
and
pop
mov
clc
xchg
jp
or
int3
adc
js
push
clc
or
push
in
ds
sar
pushl
pop
cmp
jo
xchg
push
add
repz
lock
ljmp
xchg
bound
jo
addr16
in
negl
push
pusha
repz
scas
mov
push
arpl
sub
cs
fwait
add
push
mov
mov
out
jg
iret
mov
jno
sahf
std
xor
lret
arpl
cmp
jp
mov
mov
add
inc
lcall
and
adc
cmp
loopne
xchg
mov
scas
mov
push
jg
out
jmp
fsubrs
jl
and
or
ss
xor
mov
in
ljmp
roll
pop
mov
aad
std
push
pusha
insl
je
add
xchg
sahf
add
sub
hlt
xorl
lods
adc
scas
add
jg
mov
sarb
mov
rep
dec
pop
or
test
lock
call
das
inc
dec
sub
sub
xor
and
lea
je
popa
out
jno
mov
ljmp
and
cmp
fisttpll
push
ds
out
push
call
std
mov
push
inc
mov
sbb
shlb
les
into
xchg
add
jmp
fwait
dec
js
push
pop
in
call
xchg
mov
add
xor
adc
out
xor
adc
and
incl
sub
xor
xor
sti
cmp
dec
mov
ret
push
cmp
xor
call
jb
clc
jns
fsub
or
popf
kmovb
and
and
mov
mov
pushl
xor
movsb
les
repnz
fisubs
sub
xchg
out
lret
outsb
popa
cli
lcall
mov
inc
jne
xchg
test
xchg
and
adc
aas
pop
cmp
incl
out
insb
inc
into
imul
fwait
cld
notb
jmp
pop
push
mov
call
jbe
xchg
cs
cmc
sarb
loope
jnp
test
rorb
adcl
lret
sub
jnp
movsl
xor
push
jnp
jg
sub
mov
cwtl
lahf
mov
jg
call
stos
fsubl
cmp
ror
enter
dec
sbb
movsb
std
xchg
mov
jmp
mov
fsubrl
aaa
cld
mov
repz
xchg
mov
mov
mov
jg
push
sub
dec
pushf
js
jle
mov
pop
and
xchg
mov
jbe
popa
lock
filds
movsb
xchg
adc
daa
lea
les
scas
fisubl
jne
xlat
test
or
rcll
mov
ficomps
test
mov
out
xchg
and
incl
out
movsb
nop
dec
in
test
mov
movb
clc
dec
mov
jg
call
stc
stc
cmc
aam
pop
jmp
sub
mov
loopne
sbb
stos
int
decl
add
sub
fbld
push
orl
clc
loopne
mov
stc
repnz
mov
jg
mov
pop
mov
mov
cli
mov
adc
into
incl
inc
jmp
roll
push
aam
gs
mov
pop
xchg
add
dec
sub
out
add
jge
imul
jle
sahf
mull
jp
push
jg
decl
push
js
out
clc
mov
cmp
fiaddl
jno
xchg
sub
imul
incl
lcall
lcall
sub
nop
lds
or
lods
je
inc
fcos
cwtl
jnp
xor
and
mov
scas
mov
mov
jns
xchg
dec
wbinvd
add
push
xchg
push
fdivrs
jl
cmp
mov
push
xor
add
fcmovb
pop
sti
insl
jg
stos
push
or
mov
shlb
jmp
int
rorb
iret
push
lret
cmp
inc
push
or
test
xchg
aam
stc
sub
arpl
incl
mov
movsl
jecxz
inc
xchg
or
sub
push
fidivl
push
pop
adc
scas
jmp
insb
add
out
icebp
jnp
sbb
push
mov
mov
lods
es
add
rcll
lret
int3
loopne
cmpsb
push
add
repz
stc
addr16
ljmp
dec
mov
pop
push
mov
and
jecxz
inc
gs
pushl
jbe
mov
fcoml
cld
fs
mov
xchg
cmc
push
jg
fmulp
test
sub
sub
clc
xchg
rol
add
xorl
cmp
jge
imul
cmp
arpl
lock
fcomp
adc
aaa
push
les
xor
int
cwtl
test
arpl
int3
jge
or
call
pushf
lock
lds
loope
test
into
cmp
into
inc
adc
loope
mov
jns
jns
loop
lods
mov
nop
popf
add
xor
mov
pop
in
pop
insb
push
jmp
jg
sub
add
mov
adc
xchg
shl
ljmp
push
pop
and
lret
cmp
ja
adc
mov
icebp
test
mov
cmpsb
insl
daa
cltd
lods
cmc
push
mov
add
out
push
loopne
aad
outsl
push
push
xor
ja
mov
adc
push
outsl
push
vmulss
jns
call
sbb
ret
dec
jnp
xchg
jmp
mov
xchg
in
test
nop
adc
decl
in
jmp
push
cmpsl
push
jp
mov
mov
adcl
jmp
and
jmp
jmp
mov
cmp
jp
les
imulb
fidivrl
int3
addl
jb
inc
fcomi
scas
inc
pushl
dec
inc
out
andl
leave
scas
pop
in
in
cmp
aaa
cwtl
mov
imul
incl
insl
repnz
mov
inc
xor
test
test
nop
jg
add
gs
fidivrs
dec
cmp
adc
jo
cmpsl
xlat
cmp
or
ja
or
sbb
sbb
adc
jbe
mov
mov
jne
into
push
sbb
adc
popl
roll
ljmp
cmp
fnstenv
mov
lret
scas
jns
in
ljmp
mov
clc
arpl
das
stc
jne
or
add
mov
roll
jae
nop
in
cmpsl
cwtl
inc
sub
push
jmp
push
lret
mov
rcl
scas
xor
imul
jnp
push
xchg
outsl
loopne
mov
cmpsl
dec
dec
sub
push
xor
shrl
inc
jno
lods
in
jno
xchg
cmp
incl
mov
rcl
pop
outsb
and
or
jmp
jmp
out
push
pop
jle
or
sbb
add
jae
popa
cmp
test
arpl
pushl
jge
sbb
adc
xchg
inc
popf
loop
xchg
pop
hlt
mov
push
cmp
mov
lret
lcall
stos
inc
movsb
sti
lret
dec
mov
shll
sbb
push
roll
test
in
jmp
outsl
xor
call
call
push
xchg
pushf
ds
loop
sub
mov
stc
fcmovnu
mov
jle
jmp
in
and
inc
or
dec
data16
in
insb
xor
dec
xor
ljmp
pop
lock
pop
hlt
pop
add
xor
push
jmp
or
push
lds
mov
dec
cltd
sub
xchg
pop
mov
jmp
sbb
icebp
push
pop
xchg
orl
in
adc
xchg
jno
cmp
jle
js
inc
enter
jmp
mov
xchg
inc
pushf
mov
es
call
mov
imull
xchg
ret
lock
decl
loopne
lds
sub
jmp
jne
jnp,pn
xchg
pop
mov
hlt
outsl
inc
dec
mov
xor
insl
jl
or
or
xor
int
xchg
and
jmp
stos
int
push
xlat
mov
mov
ds
inc
ret
xlat
cltd
fdivr
jle
decl
je
stos
aas
inc
mov
int3
mov
je
adc
pushf
xorb
popf
or
sub
xor
decl
mov
lcall
jne
jno
in
aam
imulb
ljmp
icebp
lret
push
adcb
ret
stc
lret
fstps
arpl
pop
cmc
inc
adc
jae
inc
pop
mov
loop,pt
mov
or
das
aas
or
jmp
xchg
cs
jns
jnp
push
aaa
mov
das
push
mov
imul
push
cld
or
inc
fbld
push
fs
jp
pop
and
push
jbe
aad
push
or
xor
fwait
or
incb
fisubs
adc
in
or
jne
and
xchg
aam
test
jnp
je
xor
divb
sbb
mov
inc
push
adc
out
or
sahf
pop
xchg
cmpsb
hlt
mov
decl
jmp
cmp
aaa
adc
mov
js
int3
xor
mov
hlt
adc
lcall
fstps
cmp
aaa
cld
scas
push
fistl
rclb
add
fwait
xor
lret
or
in
pop
outsl
mov
sbb
xchg
jbe
jmp
fsubrs
mov
loope
cmpsb
notl
xchg
mov
test
jae
dec
pop
lods
fistps
jmp
add
nop
jbe
lret
inc
movsb
cmpsb
sub
fcomip
cld
je
cwtl
loop
adc
shll
sbb
dec
and
sbb
cmp
add
lcall
xchg
sub
sub
pusha
cmpb
fcomip
mov
jmp
and
and
neg
test
mov
je
in
inc
xor
sbb
aaa
push
mov
dec
in
mov
add
mov
ljmp
xor
in
enter
loopne
and
and
mov
mov
mov
cs
pusha
pop
push
jmp
add
popf
aam
xor
mov
pop
hlt
js
push
xchg
das
mov
jl
fs
je
lahf
test
ljmp
and
insb
std
mov
sub
nop
aad
sub
in
sbb
lcall
pushf
lret
or
or
aad
push
cmp
mov
jb
lret
iret
ss
mov
sub
jge
mov
adc
mov
lock
or
or
stos
mov
lcall
lcall
movsb
push
js
filds
cmp
mov
xor
mov
xchg
inc
pop
cmp
xchg
out
jo
loopne,pn
sub
das
in
pop
mov
insb
scas
dec
lret
js
das
clc
jmp
xor
test
insb
insb
sub
adc
pop
pop
mov
cmp
incl
sbb
xor
push
roll
decl
scas
jge
pop
xor
gs
ljmp
cmpsb
aas
lds
jp
and
adc
mov
dec
xor
sub
or
push
mov
xor
jg
lcall
adc
lock
sbb
repnz
int3
pop
xchg
mov
je
pop
out
adc
mov
out
stos
xchg
fldl
imul
lods
add
aad
sbb
jmp
lcall
mov
repnz
dec
jp
fcoms
xor
jmp
add
mov
movsl
shlb
outsb
stc
sbb
enter
pushf
mov
mov
cltd
jbe
les
out
addb
dec
mov
xchg
jnp
adc
fdivrs
lahf
inc
scas
inc
inc
lea
push
dec
fxch
jnp
outsb
push
incl
sbb
loopne
leave
addr16
ss
call
adc
cld
in
popa
pop
push
jns
and
dec
push
insb
ror
shl
sub
lea
cmp
sub
insb
adc
inc
hlt
mov
imul
leave
push
popf
sbb
dec
and
ljmp
insl
sbb
or
push
jle
dec
push
imul
mov
cmp
and
mov
outsb
sbb
mov
stos
call
and
sbb
adc
sbb
or
sbb
shll
call
jg
outsl
inc
push
add
in
stos
les
pop
icebp
dec
pop
mov
lds
mov
mov
call
mov
icebp
rcrb
lcall
inc
push
mov
js
pop
std
mov
sub
decl
and
loopne
das
ds
cmp
mov
inc
adc
cli
loope
or
ljmp
mov
pop
cld
lods
mov
cmpsl
imul
aas
jg
dec
cwtl
hlt
jo
add
pop
clc
call
pop
cmpsb
jle
mov
pop
pop
jbe
push
sahf
pop
pushl
sbbb
push
mov
popa
ljmp
addr16
jg
cltd
or
fld
decl
cld
stos
iret
or
push
mov
add
sub
xchg
ljmp
in
sub
push
test
pop
push
jbe
mov
and
sbb
test
incl
stos
mov
cmpsb
mov
cmp
pop
loopne
pop
aas
je
cmp
sahf
pop
iret
jl
lcall
ja
sbb
sbb
jle
ds
pushl
xchg
decl
push
xor
pop
pop
movsb
cmp
mov
cli
dec
xchg
push
inc
je
lock
jle
fsubrs
push
stos
pushl
pop
inc
lea
adc
inc
popa
ljmp
sarl
mov
xor
imul
call
and
das
dec
mov
jno
add
ljmp
pop
shrb
popl
idivb
xchg
mov
in
jbe
add
call
std
dec
xchg
sbb
dec
movsb
mov
ljmp
icebp
pop
mov
fstp
call
pop
ret
jb
imul
adc
xchg
sahf
xchg
sub
mov
pop
inc
incl
mov
scas
xchg
rolb
cmpsl
enter
adc
adc
inc
xlat
cmpl
mov
cmp
or
daa
aas
lahf
inc
mov
cwtl
mov
iret
insb
jmp
bswap
xor
lcall
pop
jae
insl
jo
mov
repnz
lds
jns
and
jbe
sub
or
add
bound
idiv
jg
into
dec
lods
das
mov
ffree
fcomip
std
jmp
mov
mov
and
vcvtsi2sd
incb
decl
sbb
leavew
inc
in
add
lcall
xchg
jp
scas
or
xchg
jns
cmp
call
scas
or
arpl
pop
ljmp
hlt
stos
jnp
jmp
loop
adc
add
dec
sbb
and
xchg
lcall
lock
pushl
dec
inc
in
sbb
fs
lds
rcll
bnd
dec
jmp
gs
outsl
cwtl
dec
xlat
test
xor
sbb
sti
jge
jmp
push
mov
out
mov
or
xchg
cmp
fs
mov
sub
cmp
cmp
adc
sub
push
dec
pushf
sub
and
call
lahf
cmp
jp
pop
push
or
cmp
out
mov
inc
mov
cmp
enter
adc
dec
fs
test
mov
stos
cmp
fstps
nop
jns
lcall
out
daa
ljmp
testb
sti
add
jl
jle
incl
mov
jnp
xchg
sbb
adc
push
mov
lahf
xchg
mov
fucomp
mov
push
push
stos
push
je
into
lcall
cmpsb
xchg
in
cmpsb
ret
mov
cmp
or
mov
mov
nop
pop
cmp
cmp
jp
test
lock
push
push
sbb
cltd
cmp
pusha
dec
sti
push
xchg
or
lcall
sahf
jle
sub
sbb
mov
xchg
enter
push
or
into
jmp
xorl
ss
or
push
dec
jns
imul
pop
xlat
fadds
out
add
ds
sub
outsl
ror
dec
clc
mov
gs
repz
clc
ljmp
or
mov
push
pop
dec
xchg
jle
lret
and
xor
dec
mov
mov
test
pusha
test
mov
dec
cmc
jbe
mov
lds
scas
inc
test
int
ret
xchg
jb
xchg
lcall
adc
dec
fcomip
movsl
clc
inc
mov
inc
jno
push
pop
cmp
adc
hlt
push
sub
cmp
xorl
pusha
ss
jmp
push
push
lret
fs
and
fildll
punpckhwd
xor
mov
lods
pushl
fwait
mov
rorl
inc
dec
imul
sti
sub
ss
fs
inc
out
dec
dec
lcall
rorb
sbb
int3
in
ret
cli
mov
xchg
pop
push
sub
cwtl
and
pushl
jb
mov
inc
and
int
fsubs
lcall
sbb
lods
sbb
sbb
jns
loopne
mov
xchg
scas
andl
pushl
in
push
movsb
out
xor
imul
cmp
fmul
lods
call
test
cmc
decl
gs
mov
mov
insb
pushl
push
shrl
dec
pushf
mov
cltd
mov
xor
push
mov
cwtl
movsl
and
clc
decl
mov
out
leave
xchg
or
gs
ljmp
mov
mov
add
mov
arpl
dec
repz
sub
xchg
jmp
xlat
mov
leave
stc
cmpsb
jns
mov
push
sub
adc
push
fdivr
mov
repnz
push
pop
cs
outsb
xlat
mov
test
pop
lret
sub
scas
out
rcr
adc
and
outsb
cmc
xchg
jns
idiv
cli
sub
popa
sbb
xchg
dec
mov
incl
or
adc
sbb
fwait
mov
sbb
push
add
add
adc
incl
out
daa
sarb
imul
test
inc
push
cmp
dec
inc
mov
dec
push
cmp
lcall
or
add
pop
adc
mov
in
and
sbb
aam
jmp
lcall
jle
mov
es
pop
popf
xlat
xlat
aaa
pop
push
pop
mov
lcall
das
push
fnstsw
mov
add
pop
cmp
call
out
scas
jb
inc
push
jmp
in
pop
test
pop
xchg
bound
and
idiv
call
mov
or
jmp
adc
ret
mov
popf
mov
cld
decl
xor
jo
mov
lods
jno
pop
incl
leave
add
cwtl
ljmp
lock
lahf
xor
jecxz
scas
les
mov
push
pushf
jnp
loop
loop
sbb
xor
push
jp
shrb
repnz
or
adc
or
ljmp
jne
inc
mov
jne
sub
or
push
cmpsl
in
test
clc
insl
or
mov
mov
add
ret
sub
sub
lret
cmp
insb
pop
push
lcall
pusha
lods
jnp
sub
adc
iret
sub
jge
xchg
call
cmp
push
mov
sarl
aad
loopne
cmpb
xchg
mov
orl
and
adc
int
jmp
int3
add
push
mov
jae
dec
cmp
mov
or
lock
adc
lods
dec
incl
outsb
xor
daa
fisubs
pushf
cmp
popa
dec
jmp
pop
insb
jecxz
mov
jns
in
scas
xor
and
jno
mov
push
jne
out
out
cmp
movsl
es
lcall
fwait
cltd
into
dec
push
bound
sub
jle
ret
das
out
sub
push
loop
loopne
lcall
stc
out
loop
icebp
jecxz
dec
xor
sbb
push
negb
cmp
xor
sbb
push
out
and
mov
or
add
jecxz
push
dec
inc
sahf
xchg
stc
dec
adc
xor
mov
inc
adc
and
dec
mov
out
rorl
pushf
xchg
sbb
lds
aad
jmp
scas
arpl
jg
sahf
pop
inc
jo
idivb
jno
ljmp
adc
add
lcall
and
xor
test
xchg
mov
sub
sbb
xchg
adc
mov
pop
inc
sahf
push
in
mov
and
mov
ss
cltd
jae
inc
ror
ret
inc
lea
and
incl
and
es
pop
dec
pop
sub
outsb
loopne
dec
outsb
bound
adc
dec
in
decl
loopne
filds
movsb
iret
pusha
adc
mov
push
stos
insb
inc
jo
mov
cmp
stos
je
ret
dec
cmp
sti
orl
in
ljmp
ljmp
mov
cld
fcoml
cltd
adc
or
adc
fcmovb
hlt
mov
in
sar
jnp
pop
adc
es
lahf
xchg
cmp
sti
fldcw
ss
jg
fildll
mov
pushf
clc
pushl
addr16
scas
and
push
xchg
lock
add
xchg
aad
decl
cld
addb
movsb
lahf
xchg
dec
es
add
push
hlt
pushl
or
jmp
out
cmpsb
stos
cld
popa
mov
or
inc
mov
pop
inc
push
es
fwait
pop
mov
dec
data16
aam
push
cmp
xor
jbe
call
adc
shrl
aaa
jne
aam
pop
pushf
mov
jl
sub
push
inc
fstl
out
push
into
idiv
jg
inc
les
push
jnp
stc
pop
std
decl
fwait
pop
push
adc
jns
hlt
sbb
call
scas
cli
decl
stc
push
lock
mov
lds
stos
int3
and
mov
test
mov
adc
and
decl
mov
and
mov
aam
mov
testb
cwtl
ret
mov
cmp
fdivrl
in
outsb
or
pushf
adc
out
xor
cmpsl
mov
fcmove
mov
and
ret
es
hlt
scas
fs
and
cli
call
mov
rorl
ljmp
pusha
lock
cmpsb
fists
popf
cmp
mov
decl
outsb
ret
in
out
push
pop
push
mov
and
stos
stc
mov
mov
inc
lods
outsb
xchg
imul
stos
adc
decl
leave
push
subb
mov
outsl
movsb
inc
xchg
stc
cld
xor
jno
int3
andl
jmp
scas
or
das
loopne
call
jg
adcb
mov
jmp
inc
loop
sub
pop
fsubrs
dec
xor
cld
je
inc
cmp
inc
sti
add
lcall
xchg
movsb
stos
xchg
mov
cld
js
loop
subl
xchg
pop
adc
cmp
call
pop
bound
jecxz
insb
pop
mov
loop
leave
int
in
adc
cmp
ret
int3
call
addr16
pop
jg
adc
adc
mov
aas
adc
add
and
jmp
lcall
in
jo
fsub
lock
pushf
ficoms
stos
sub
adc
push
sub
pop
jg
xchg
leave
pop
idiv
pop
cld
ljmp
loop
mov
mov
jge
pop
xor
insb
popf
add
imul
punpckhdq
push
xor
fs
mov
ds
ret
and
jmp
in
mov
adc
push
cmc
bnd
xchg
lock
push
ret
and
pop
jae
adc
lcall
mov
rol
mov
scas
pop
ret
ds
sub
mov
cli
sbb
push
sbb
mov
xchg
sub
pop
roll
outsl
in
lods
adc
popw
mov
and
xchg
shrl
lahf
bound
sahf
cmp
int
mov
push
cmp
jnp
jmp
mov
stos
incl
xchg
aas
das
or
rol
jecxz
sbb
jg
lods
lods
fdivrl
ret
cs
xchg
mov
jmp
inc
pusha
cmovb
adc
ss
test
adc
pop
in
mov
xchg
enter
inc
imul
jo
fidivs
lcall
ljmp
enter
stos
ljmp
aas
stc
mov
sti
mov
mov
mov
hlt
pop
cld
xchg
mov
adc
stc
xchg
and
push
inc
mov
dec
add
inc
dec
sbb
dec
add
pusha
add
fcmovnu
add
push
out
mov
add
or
pop
pop
push
or
or
lret
or
or
or
adc
adc
call
movhps
push
adc
adc
adc
add
mov
or
adc
pop
adc
fisttps
lock
add
fadds
add
and
add
bound
les
add
loop
mov
adc
out
sbb
jge
add
add
push
adc
pop
and
xor
mov
incl
inc
mov
adc
xor
cmpb
or
dec
std
insb
and
lret
inc
adc
dec
pop
leave
xor
addb
add
test
scas
mov
xchg
pusha
pusha
push
xor
jnp
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
add
or
js
filds
rcr
push
ret
xchg
and
sub
out
mov
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
les
cld
mov
cmp
push
stos
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
nop
dec
or
adc
pop
inc
inc
xchg
or
xchg
das
mov
std
or
add
lds
cld
cli
and
mov
std
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
or
aaa
adc
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
incl
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
decl
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
jg
popl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
incl
test
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
decl
int
arpl
push
out
or
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
ljmp
adc
xor
hlt
and
xchg
jmp
sbb
and
dec
out
pop
cld
ljmp
dec
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
clc
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
jno
hlt
jg
gs
std
xorb
addr16
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
aam
jecxz
inc
arpl
stos
mov
insl
add
leave
push
ljmp
push
shrl
mov
push
mov
adc
and
sbb
xchg
fbstp
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
call
mov
mov
enter
add
cld
call
js
cmp
ljmp
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbb
ds
cmpsl
scas
popa
in
pop
or
mov
call
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
xor
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
mov
add
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
call
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
outsb
mov
cmp
fmull
enter
lock
mov
mov
pop
mov
sub
outsb
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
pop
in
pop
fmull
mov
pop
jg
add
jg
jg
mov
sub
adc
mov
mov
cli
jg
mov
push
push
sbb
stos
icebp
pop
incb
pop
cmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
lret
mov
sar
adc
aad
mov
lahf
xor
imul
dec
js
jle
add
mov
fsubrl
add
mov
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
fistpll
adc
lahf
mov
or
out
lcall
sti
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
outsl
lock
xchg
or
stc
out
mov
clc
push
std
mov
rcl
icebp
or
mov
pushl
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
cld
paddsw
add
out
icebp
mov
loope
mov
cmpsl
popf
enter
sti
mov
fbstp
and
push
xor
outsl
das
insb
jp
or
out
cmp
das
js
fsubrp
popf
js
data16
decb
adc
mov
mov
mov
and
call
xlat
nop
cltd
add
xchg
mov
sub
clc
inc
add
push
pop
aaa
std
fbstp
mov
inc
sbb
jnp
shll
jle
icebp
ret
ror
sbb
sbb
push
jmp
jg
scas
loop
adc
aas
pop
clc
loope
stos
mov
mov
lahf
jp
dec
add
xlat
in
inc
jmp
xor
outsl
adc
iret
fdivrl
xchg
lcall
jo
and
pop
gs
sub
jo
sarl
pop
movsb
and
jno
ret
fs
or
sbb
iret
decl
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
ljmp
ljmp
flds
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
push
sub
faddl
mov
push
insb
inc
outsl
pop
sbb
fisttps
pop
stc
push
dec
sub
mov
jecxz
mov
enter
addb
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
mov
mov
mov
fildll
fsubrl
dec
add
adc
add
lods
or
adc
push
sti
pop
inc
dec
push
push
or
cmp
outsb
or
and
lea
mov
and
sub
adcb
aad
cs
scas
sbb
pop
and
dec
pop
and
push
cmpsl
insb
push
inc
or
paddq
testl
mov
lret
addb
inc
pop
mov
or
adc
mov
cmp
es
jo
out
pop
jle
imul
or
ds
addl
adc
bound
out
adc
mov
jg
add
out
inc
jb
inc
js
or
insb
push
inc
add
dec
add
imul
dec
adc
fildl
or
and
xor
inc
imul
and
arpl
dec
gs
lock
add
outsl
insb
push
outsb
popa
jo
push
add
daa
jmp
pop
sub
mov
push
sub
sub
push
or
dec
dec
jne
rcrl
xchg
pusha
js
or
and
scas
ret
aaa
push
adc
pop
mov
inc
outsb
cmp
jns
push
cmp
hlt
mov
push
push
es
ljmp
dec
add
adc
outsl
insl
insl
aaa
pushf
andl
and
push
or
insb
mov
mov
dec
push
int3
int3
and
and
dec
outsb
rorl
imul
stos
outsb
xchg
sub
sub
enter
pop
push
outsb
pusha
popa
aas
jo
flds
sub
imul
dec
inc
or
sbb
out
mov
inc
pusha
cmp
cmp
jo
fisubs
mov
dec
sub
push
pop
ds
insb
jne
sarl
int3
addl
xchg
dec
fists
add
insl
adc
sbb
jo
inc
push
mov
sbb
fildl
fsubs
push
pop
push
mov
sarl
orl
in
jne
subl
cmovae
jb
shl
adc
xchg
fdivrl
jae
adc
shl
mov
push
push
push
hlt
das
inc
fldlg2
fs
inc
jecxz
or
dec
cmp
cwtl
popa
or
xchg
subb
scas
cmp
inc
or
dec
mov
dec
push
pop
in
push
cmpsb
sbb
dec
sbb
sbb
sub
pop
push
insl
adc
leave
mov
mov
mov
loope
add
sahf
test
push
sbb
int
mov
inc
adc
xchg
or
sub
pop
stos
push
pop
sti
and
popw
push
shlb
lret
mov
pop
fs
push
inc
xchg
popa
and
ss
shl
fisttpll
adc
popa
cli
dec
inc
dec
or
inc
inc
or
out
pop
mov
imul
test
lahf
or
fs
popf
bound
xchg
lods
xor
cmp
sbb
fs
sub
jg
pop
push
sub
jp
cmp
mov
cmp
and
dec
cmp
xchg
es
jp
push
mov
loope
push
jg
mov
xor
xor
xchg
xorl
in
or
rcl
fnclex
call
pop
adc
test
mov
dec
push
outsl
fmul
pushf
pop
pusha
sbb
gs
and
adc
pop
xlat
aad
jns
mov
je
push
inc
inc
sub
sti
xlat
push
nop
pusha
pop
push
inc
sbb
pop
sbb
mov
and
jno
pusha
jo
nop
insl
adc
or
push
es
mov
dec
adc
push
adc
sbb
add
jns
rol
daa
dec
stos
loope
nop
roll
int
adc
xchg
mov
pop
add
mov
popa
or
inc
add
and
push
sub
push
jne
inc
fadds
adc
fbld
sbb
dec
xor
push
jbe
scas
mov
nop
popa
add
test
popa
pop
jnp
addr16
push
andl
rcll
inc
adc
and
cmp
and
pusha
pop
outsb
push
outsl
add
dec
loopne
fadds
mov
jbe
mov
and
sub
js
int3
loopne
cmp
dec
gs
jne
mov
popw
fmul
pusha
nop
or
arpl
mov
sub
cs
dec
pop
adc
and
jg
cs
fnstsw
push
jmp
aaa
cmp
jl
sbb
pop
imul
push
popa
sbb
rcrl
outsb
adc
mov
jmp
jno
cmp
add
fstpt
dec
push
xchg
cmpsl
popa
mov
add
jb
cli
pop
push
je
lods
shlb
xor
jb
clc
or
and
jl
push
sub
dec
inc
in
lods
jo
roll
push
arpl
mov
pop
inc
imul
xor
xor
mov
scas
insl
mov
frstor
push
inc
insb
jle
cmovnp
sbb
aad
call
xchg
jae
adc
jno
aad
iret
jne
push
sbb
push
mov
test
lds
inc
push
call
xor
sbb
dec
pusha
mov
adc
or
or
push
movsb
push
lret
pushf
jge
push
xor
push
pop
xor
and
pop
shlb
mov
pushf
shl
outsb
inc
push
push
adc
js
cmp
pop
xor
pop
cmp
cld
pop
xchg
jnp
or
dec
outsb
dec
adc
xchg
subb
xor
jnp
sar
pop
add
add
mov
mov
imul
movsb
lcall
sub
paddsw
xchg
mov
fidivl
addb
pop
adc
test
into
cmpsl
in
inc
rcrl
inc
jb
and
push
add
out
dec
and
jl
outsl
bound
sti
or
dec
movsb
bound
adc
inc
jb
mov
jb
inc
jae
inc
test
inc
shll
insl
cwtl
loope
imul
fsubrs
sbb
push
ljmp
dec
rclb
cs
psrlw
cmp
mov
loopne
sub
pop
push
sbbl
scas
inc
imul
fisubl
cmpsl
mov
subb
xor
cmp
mov
bnd
push
aad
in
test
sbb
movsl
inc
smsw
or
and
xor
fists
pop
imul
add
sub
sub
jmp
iret
loopne
sbb
jb
mov
fadd
mov
or
jo
or
push
mov
insb
jl
pop
inc
cs
add
xlat
push
and
pop
mov
mov
mov
cwtl
inc
out
mov
int3
inc
xchg
push
insb
adc
sub
or
loope
cwtl
dec
push
adc
loope
sbb
rol
int3
outsb
push
push
fmull
add
or
sbb
das
fs
mov
mov
mov
mov
sub
test
push
test
sbb
imulb
mov
and
adc
xor
push
or
and
push
in
test
or
sub
inc
rcl
fisttpl
inc
dec
sbb
out
cmc
nop
mov
lds
outsb
out
test
scas
or
vpcmpeqd
jno
mov
add
add
das
sbb
or
xor
inc
cmpsl
fs
in
lcall
pop
lds
jns
js
fwait
subb
push
sbb
cltd
nop
inc
push
fs
mov
cmp
and
mov
dec
adcb
push
sub
push
or
loop
aam
add
add
sahf
jo
lea
les
push
push
stos
enter
fldl
or
push
push
inc
out
adc
add
sub
pop
xchg
dec
push
test
imul
or
pop
out
int3
rol
sahf
popa
int3
add
data16
xchg
xchg
sub
jmp
jg
sbb
shrb
and
push
adc
popf
insb
les
xchg
inc
push
add
mov
adc
fimuls
add
ret
scas
dec
add
stc
fstps
add
pop
fcmovbe
xchg
dec
lret
add
push
cmp
shr
push
outsb
jbe
push
adcb
push
lcall
fsubl
jae
sbbb
mov
pop
jnp
push
mov
dec
pop
add
sub
imul
inc
sbb
andl
jb,pn
popa
adc
add
idivl
push
push
into
push
add
mov
cmp
fsubrl
dec
rcrb
pusha
ss
repz
test
push
lahf
es
xchg
and
out
jg
repz
add
add
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
