fcomp
decl
or
add
mov
or
pop
add
pop
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jge
mov
mov
sahf
mov
les
int
mov
mov
xor
push
sbbl
imul
das
dec
adc
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
sub
sub
lret
adc
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
stos
es
imul
dec
add
and
rorl
sub
jge
inc
shlb
add
inc
hlt
push
es
iret
and
add
xorb
pop
mov
adc
mov
jo
mov
and
testl
inc
lock
add
cmp
lret
lds
fwait
mov
or
and
and
cmp
adc
xor
push
push
push
push
cmp
adc
out
int
dec
mov
cmp
subb
push
mov
inc
add
ss
daa
ret
push
dec
aam
loopne
xor
sete
andl
push
dec
into
test
add
or
leave
mov
mov
aam
adc
cmp
out
sarb
push
les
add
push
push
mov
dec
in
mov
add
dec
and
xor
popl
push
add
mul
push
lret
mov
fwait
push
loopne
push
enter
pop
les
sub
and
sbb
in
rcrb
aam
xor
push
in
enter
mov
lea
or
icebp
mov
mov
dec
sub
mov
add
sbb
push
sbb
inc
add
cmpsl
and
jg
and
dec
test
mov
sub
fistps
mov
and
mov
dec
push
incl
cmp
pop
jge
mov
outsl
cmpl
in
ret
xor
sbb
ljmp
push
sub
push
insb
out
push
add
arpl
ret
and
sbb
cmp
inc
les
leave
inc
mov
lock
add
adc
test
clc
mov
sub
mov
and
add
bound
xor
jae
stos
jecxz
add
data16
add
and
sbb
sub
push
cmp
int
add
dec
jbe
dec
push
push
mov
out
out
mov
push
fisttpl
je
fstp
popf
add
das
testl
add
dec
cmp
mov
in
dec
inc
bswap
push
add
sbb
rolb
andb
aas
call
mov
or
add
push
shlb
loope
cwtl
out
pop
sbb
aas
sbbl
lret
sub
push
movsb
sbb
inc
hlt
nop
shl
adc
pop
dec
cmp
mov
mov
fistpll
push
add
mov
mov
mov
nop
addl
inc
je
or
nop
cmp
or
dec
push
adc
or
notl
stos
xor
jg
add
push
lea
push
insb
adc
roll
sub
ja
mov
jge
adcb
hlt
push
jg
dec
or
test
pop
sub
adc
lea
and
shll
xchg
dec
popf
mov
pop
sub
jb
sub
ret
mov
in
mov
adc
sub
and
inc
arpl
dec
add
test
ret
inc
sbb
fmull
push
jnp
add
call
push
es
or
push
add
push
push
fmuls
decb
cmp
dec
sbb
imul
test
test
push
mov
or
xchg
sub
push
xchg
inc
xchg
and
xor
iret
xor
test
data16
fst
adc
int3
xor
and
movsl
repnz
rclb
adc
movsb
shlb
or
pusha
sub
adc
cvttps2pi
jno
les
inc
pop
and
mov
inc
jne
adcl
push
jle
je
adc
inc
sub
jecxz
and
or
push
sub
push
pop
or
xchg
adc
mov
adc
rsm
out
out
punpckhbw
mov
mov
dec
push
push
and
push
xchg
or
popa
push
or
pop
dec
sub
adc
push
ljmp
pop
test
sbb
fs
scas
dec
push
xchg
and
add
push
sbb
or
addl
sbb
std
inc
mov
inc
cmp
add
nop
push
mov
jle
push
inc
add
outsb
sbb
ret
jle
test
xor
lock
mov
sti
mov
icebp
and
sbb
fisubrl
lods
cmp
int
inc
jle
or
shlb
xchg
call
test
push
and
adc
adc
pop
movsb
mov
test
mov
add
dec
fwait
dec
inc
and
push
mov
xor
sti
pop
sbb
pop
mov
and
push
jno
out
xor
push
sub
rcrl
xchg
inc
jg
adc
inc
mov
cmp
mov
adc
jno
js
shll
popf
cmp
xchg
lahf
inc
push
or
cs
or
movlhps
mov
sbb
data16
stos
or
out
or
sub
mov
js
int3
fsubrs
cmpl
je
arpl
or
mov
test
jl
pop
cli
add
adc
push
adc
and
mov
lcall
cld
mov
test
dec
pop
mov
rcrl
out
sbb
inc
mov
add
aaa
mov
mov
gs
jo
push
pop
and
lock
enter
adc
das
xchg
das
jae
rol
or
mov
fildl
clc
jmp
and
mov
mov
inc
sar
cmp
add
dec
rcll
jnp
loope
xor
das
test
lea
pop
pop
jmp
jns
in
in
adc
cmp
sub
dec
ja
ret
adc
push
aam
lea
pop
cld
jne
sub
lods
mov
orl
dec
test
jg
sbb
push
cli
jmp
cmc
lea
pusha
sub
mov
mov
pop
and
aas
fisubrl
add
add
lods
adcl
push
push
mov
and
cmp
int3
or
pop
mov
push
and
xchg
sub
cmpb
in
jb
in
cmp
add
inc
add
pop
lods
nop
sbb
adc
jle
jne
mov
push
mov
insl
push
imul
xor
and
jg
sbb
lods
or
fisttpl
jle
jp
sub
cmp
je
or
or
mov
sbb
nop
pusha
test
mov
roll
inc
mov
cmp
pusha
inc
mov
fwait
and
xor
mov
movl
push
outsb
lahf
sbb
add
loopne
sub
sub
outsl
sub
push
call
lcall
call
adc
call
inc
cmp
jl
aas
add
mov
mov
jnp
push
push
js
mov
cmp
jbe
movb
and
jmp
push
mov
mov
shl
push
push
fs
dec
nop
and
inc
faddl
push
pop
test
test
push
or
icebp
push
rorb
and
ffreep
out
shrb
je
test
movzwl
and
push
lods
add
push
cli
into
push
std
cmpb
jl
and
jmp
mov
lea
add
incl
mov
inc
test
jne
sub
push
push
inc
sbb
leave
adc
or
mov
roll
lds
fs
adc
insb
jne
adc
jecxz
pop
pop
or
dec
es
lea
pop
jb
mov
sbb
inc
icebp
dec
addl
cmp
jl
jne
cmp
xor
xchg
add
mov
jl
adc
mov
adc
mov
rcrl
int3
arpl
jo
add
push
insl
lcall
jne
pop
mov
xor
outsl
sbb
or
xorl
or
adc
lock
push
loopne
fs
adc
rol
mov
cmp
mov
push
test
mov
std
sbb
call
jge
push
cltd
in
push
aad
jo
or
clc
jle
mov
mov
xor
jg
cmp
pop
insb
mov
mov
adc
push
cld
lea
push
or
cmp
hlt
aaa
mov
adc
cmp
ja
add
jmp
pop
clc
push
sub
push
add
push
hlt
in
clc
ret
add
jo
jg
mov
sub
add
pop
pop
dec
pop
ret
loopne
jl
icebp
mov
enter
fisttpl
test
jbe
je
cmpl
jge
sub
add
mov
in
inc
hlt
mov
add
insl
or
xor
inc
and
cmp
push
dec
or
out
push
clc
or
add
jp
nop
loop
adc
sub
or
jge
pop
cmp
inc
jno
push
and
push
ja
and
pop
pop
data16
or
jecxz
rcl
jne
dec
or
cld
or
xchg
push
push
cld
mov
jg
inc
mov
adc
cmp
ja
ja
adcl
lea
push
push
dec
fdivrs
clc
push
xor
mov
popa
pushf
adc
push
call
dec
jmp
test
mov
add
adc
cmp
or
loope
or
in
popa
inc
outsb
daa
push
push
push
or
add
push
pop
push
push
lea
add
inc
jmp
add
sub
sbb
or
or
pop
mov
or
dec
sub
adc
adc
loope
lcall
jecxz
pop
pusha
dec
add
loop
add
add
cld
int3
or
shl
test
lods
mov
mov
pop
aaa
divb
jle
jne
das
mov
imul
addb
daa
incl
ja
call
out
adc
je
cmpl
std
inc
push
jl
mov
push
jne
push
lret
cmp
shrl
mov
test
push
dec
int
pop
sub
and
fists
push
push
jge
mov
mov
or
mov
cmp
mov
inc
inc
or
inc
or
xor
inc
xor
stos
loope
and
pusha
incl
push
add
and
fcoms
jnp
cs
xlat
or
inc
inc
xchg
nop
xchg
jg
xor
mov
ret
aas
or
or
sbb
or
mov
sbb
jmp
fisubl
push
push
add
test
mov
xchg
fisttpl
pop
push
push
dec
popa
jb
or
cmp
xchg
mov
mov
add
pop
adc
xor
adc
test
xor
pop
mov
fnstsw
jmp
inc
add
adc
mov
jo
push
lods
mov
lea
gs
popa
mov
add
pop
sub
mov
fiaddl
rorb
or
cmp
cmpsb
sbb
cmp
add
or
pop
popa
add
stos
cmp
sahf
cmp
add
or
es
ret
push
loopne
insl
and
mov
or
dec
scas
adc
push
mov
lock
pop
dec
sysenter
add
ret
mov
pusha
and
enter
push
and
sti
push
rorl
or
add
cwtl
lock
push
jae
pop
mov
mov
push
or
jge
inc
jle
mov
mov
sub
pop
xor
and
jbe
push
hlt
cmp
testb
cmp
fidivs
or
stc
rorl
inc
idivl
ret
cmp
rorl
and
inc
mov
mov
cmp
xor
lock
sbb
push
add
xchg
mov
sbb
mov
fisubl
imul
sub
pop
push
or
and
or
insl
rorl
add
inc
pop
pop
push
xor
aas
icebp
cmpsb
imulb
jbe
jmp
lahf
mov
popa
cmpsw
incl
cmp
jb
mov
pmaxub
add
pop
pop
mov
or
popf
fstl
xchg
xor
mov
fildl
cmp
or
mov
jecxz
pop
lea
mov
mov
fwait
pop
insb
adc
pop
xor
inc
push
xlat
stos
incb
pop
pop
fistpll
fstl
subb
push
data16
xchg
imul
mov
inc
inc
adc
loopne
cltd
adc
adc
cmp
les
or
or
push
test
jae
iret
in
roll
add
or
stc
int3
mov
pop
repz
xor
std
push
jl
push
push
and
adc
pop
sbb
sbb
pop
and
sbb
stos
mov
adcb
xchg
adc
sti
jne
xor
push
dec
mov
mov
or
sbb
repnz
rcll
fistl
data16
inc
cmp
pop
inc
sbb
mov
push
xchg
and
add
test
nop
mov
aas
or
add
jmp
xchg
aas
inc
adc
sahf
mov
pop
das
test
fsubr
cmp
mov
add
adc
adc
sbb
movsb
pop
repnz
pop
and
mov
and
dec
sbb
aas
sbb
lods
loopne
incl
fistpll
sub
or
sub
into
push
sbb
xor
xchg
or
loope
or
scas
outsb
xor
xchg
lock
or
das
push
fidivl
cmp
loop
aam
xchg
stos
or
mov
je
or
mov
or
jne
push
add
movsb
rol
shrb
ret
xor
jnp
sub
push
pop
jbe
push
adc
sub
stc
sahf
in
sbb
adc
ret
cmpl
imul
sbb
and
jle
lock
or
mov
cli
add
add
jne
and
xor
rcr
jle
repz
mov
je
sahf
jecxz
and
dec
push
in
icebp
cmpb
inc
lods
call
add
je
orl
add
jne
cmp
mov
push
in
test
lods
xchg
jne
popa
cmp
sahf
mov
pushf
xchg
mov
bound
imul
add
repz
inc
inc
or
dec
sti
mov
mov
daa
mov
adc
add
repnz
push
sti
unpckhps
sbb
and
dec
cmp
dec
cs
outsl
addb
add
xchg
sbb
clc
pop
pop
push
mov
push
cld
in
das
cmp
insb
or
pushf
push
fstps
leave
and
mov
lds
cmp
shrb
fistl
in
push
iret
pusha
rorb
jp
lods
sahf
fisttpl
push
lea
adc
sahf
fs
mov
sbb
adc
sbb
sti
cmp
lahf
xor
mov
xchg
pmulhuw
fisttpl
inc
sbb
xchg
fldz
fstp
in
jmp
xchg
add
sahf
or
mov
mov
push
sbb
sbb
sub
jnp
xor
xor
je
xor
jne
lock
mov
adc
in
fnstenv
push
out
sahf
inc
cmp
test
add
inc
mov
add
in
popf
push
jns
inc
sbbl
and
cmpb
rol
das
sbb
idivl
add
and
sahf
in
sahf
in
dec
sarl
adc
add
push
out
sbb
dec
ljmp
adc
dec
inc
push
push
xchg
sahf
and
aas
jl
scas
push
dec
mov
pop
sahf
cli
scas
clc
push
lea
push
ficoml
add
push
lea
clc
mov
dec
cmp
in
mov
dec
aam
adcb
pop
push
popa
and
and
inc
push
loope
add
cld
sbb
push
cwtl
jmp
add
stos
fiaddl
fdivs
mov
add
fiaddl
mov
xchg
test
xchg
fists
test
add
xchg
cmp
loopne
add
add
jg
fisubl
push
add
push
jle
ficompl
inc
subl
test
xor
mov
test
jge
cld
aam
or
mov
loop
or
sbb
jns
adc
ret
jle
rcll
mov
push
mov
dec
sbb
add
push
outsb
fadds
sub
movsb
shl
leave
push
rolb
inc
call
pop
out
sbb
xchg
inc
fisubrl
inc
shlb
cmp
fidivl
jbe
push
test
push
pop
test
xor
aas
lock
aas
arpl
push
setne
push
inc
xchg
add
dec
and
cmp
push
mov
pop
pop
dec
in
sarl
or
push
push
push
push
inc
cwtl
rcll
jge
pop
cmp
je
lea
add
add
jl
fadds
inc
xchg
mov
xchg
pushf
push
mov
push
pop
test
nop
ljmp
add
aas
clc
cld
xor
sub
push
push
cmpl
mov
inc
xor
adc
subb
test
je
xor
mov
sub
ret
push
push
movl
int3
bound
sub
inc
jg
decl
push
push
mov
mov
insb
push
dec
dec
mov
push
push
cld
mov
push
inc
dec
sbbb
dec
cmc
sub
push
int
mov
ret
add
mov
xor
dec
fstp
outsl
arpl
mov
add
sahf
inc
add
shlb
cmp
cmp
call
xchg
xor
xor
in
jbe
mov
inc
andl
rol
jns
das
jbe
cwtl
push
sbb
push
adc
push
xor
cmp
adc
or
pop
fldl
sbb
fsubl
lock
orb
icebp
adc
pop
loope
mov
add
inc
mov
out
cld
call
pusha
adc
cmp
push
jg
sbb
push
addb
adc
adc
push
xor
push
fldl
popa
cmp
push
test
add
cld
jecxz
addb
mov
in
jmp
mov
cmpb
mov
or
cmp
xor
cmp
insl
rorb
pop
pusha
lock
rolb
push
inc
jecxz
fists
add
or
mov
idiv
push
push
lret
xor
push
push
push
daa
test
jns
mov
popf
out
add
mov
jns
push
jo
lret
push
mov
ljmp
das
push
cmp
test
mov
or
loop
pop
push
cld
xor
inc
clc
add
pusha
add
sub
jne
and
sbb
sbb
sar
aad
ret
das
lea
jmp
pop
or
add
repz
incl
xchg
cwtl
test
pop
cmpsl
test
mov
sbb
lea
fldenv
mov
sbb
xchg
adc
and
add
dec
xchg
xchg
push
or
loop
sbb
dec
adc
adc
add
bt
scas
xor
mov
mov
cmp
mov
add
push
xchg
mov
das
sub
incl
jecxz
dec
shll
mov
aaa
xor
inc
and
mov
lods
ss
mov
push
lods
js
xor
pop
push
fstpl
shufps
test
fistpll
push
pop
mov
gs
ret
in
rorb
enter
adc
popa
and
xabort
movsb
sub
lods
and
scas
push
dec
sub
movl
add
dec
push
lahf
lods
adc
sbb
dec
sti
mov
mov
push
sub
xorb
mov
inc
lahf
push
add
pop
rclb
push
pusha
sub
add
and
dec
add
or
push
nop
cmp
sub
push
push
lea
aam
fcoms
lods
push
jp
sbb
int
xor
push
test
add
push
or
jg
cmp
daa
fisttpll
addl
or
push
test
loopne
pop
add
inc
add
mov
inc
xor
mov
dec
push
ret
xor
add
je
add
sub
pop
fmuls
push
mov
add
imul
push
jo
adc
xchg
push
sbb
xor
js
je
push
adc
bound
iret
xor
stos
aaa
fadd
insl
and
ret
dec
jae
shrb
inc
inc
fstpl
pusha
fmull
add
push
mov
pop
or
or
in
dec
jb
dec
and
lahf
push
pop
repnz
mov
adc
sub
inc
push
bound
loope
xor
cmp
mov
pop
jns
or
popa
mov
roll
push
jecxz
arpl
rcll
jne
xor
test
jp
mov
mov
enter
rcrl
or
dec
push
jl
mov
xor
pop
inc
ljmp
add
push
and
mov
sbb
cmp
xchg
sbb
pop
sbb
and
xor
fs
popa
xchg
es
cmc
and
pusha
ret
inc
cmp
jno
push
xchg
mov
insb
or
inc
stos
adc
es
inc
push
or
or
insb
pop
sbb
push
xor
push
icebp
sbb
push
xchg
push
push
lds
xor
aam
pop
cmp
cmp
jb
cld
cld
add
and
dec
mov
jge
xchg
lock
enter
jmp
stos
sbb
sub
out
or
inc
test
cmp
dec
jnp
ja
push
mov
push
out
xchg
add
and
add
xor
mov
add
push
xor
push
fdivl
outsb
mov
pop
mov
add
int
dec
dec
sbb
inc
xchg
inc
inc
mov
int3
int3
adc
fisttpll
push
push
lods
xchg
push
mov
push
rcll
rorl
add
adc
data16
loopne
lock
mov
pusha
mov
sub
add
lods
cwtl
lock
scas
nop
cltd
nop
dec
popa
dec
xor
out
add
int3
enter
pop
lock
mov
push
push
or
insl
mov
addl
sbb
roll
or
cmp
jle
add
cltd
and
push
sarl
dec
hlt
clc
or
fldenv
fstpl
sbb
data16
jl
dec
add
rcll
adc
add
sti
jnp
mov
mov
dec
bound
imul
sar
mov
shr
sbb
fdivrp
add
mov
imul
push
lahf
loopne
sbb
inc
in
jle
in
pushf
nop
imul
stc
dec
ret
enter
sahf
cmc
sub
mov
cmpl
mov
mov
adc
push
enter
sar
lcall
push
cmpl
or
lods
pop
pop
push
cmp
jne
push
cmpsl
icebp
adc
pop
inc
sbb
adc
ret
ficomps
lea
jmp
pop
pushf
cmp
mov
mov
mov
shlb
aam
xor
stos
lds
lods
dec
arpl
hlt
xor
mov
sbb
add
dec
fisttpll
inc
add
repnz
push
cmpsl
sbb
adc
sub
sub
fldz
cmpsl
inc
out
inc
data16
push
ljmp
or
fisubrl
int3
sbb
icebp
pop
xchg
mov
test
jl
pushf
in
into
jp
cltd
idivl
push
aaa
lea
pusha
add
xorl
mov
sbb
loope
mov
add
jl
insl
arpl
outsl
jo
add
cmp
popa
xchg
cmp
mov
or
sbb
adcl
add
popf
fucomp
imul
cmp
or
jbe
repz
sub
jge
jmp
mov
js
pushf
scas
pop
fistl
paddd
das
sbb
push
faddl
xor
sub
xor
mov
inc
orb
fdivrp
shll
mov
cli
cmp
sbb
mov
mov
mov
xchg
adc
inc
push
fcoms
lock
jmp
fbld
xlat
inc
jl
mov
js
out
and
adc
je
add
addb
std
ds
clc
in
push
pop
movb
adc
mov
leave
adcl
push
sub
and
enter
inc
mov
leave
call
jbe
lock
and
mov
sbb
jge
and
and
je
sbb
ds
cwtl
adcb
ret
fidivs
xchg
lods
add
jmp
pop
lock
inc
insl
pop
xchg
or
add
ja
lods
add
sti
push
dec
subl
rclb
shlb
and
sub
jl
dec
inc
outsl
lret
sbb
add
push
cltd
roll
invd
and
sub
sub
loope
or
inc
cmp
les
enter
inc
outsl
loopne
dec
lods
ret
xchg
jmp
jecxz
jns
xchg
jmp
add
or
insb
ret
sub
and
xchg
sbb
xor
or
test
mov
clc
stc
mov
sub
dec
and
cmp
fimuls
or
push
fadd
mov
pop
cmpb
push
push
or
push
out
xchg
fisttps
aas
lea
push
push
inc
mov
jae
inc
jg
sub
or
shrl
cmpsb
jo
fstpl
inc
shlb
cmp
int
test
push
sahf
adc
push
sub
sbb
stc
out
push
push
leave
sub
or
nop
imul
mov
pop
jle
clc
xchg
adc
inc
pop
mov
fwait
jmp
mov
orb
pop
add
sbbl
sbb
lcall
mov
repnz
and
mov
jle
adc
push
pop
push
repnz
xor
push
xchg
cmp
movsl
enter
mov
pop
ret
lahf
or
ret
sbb
adc
pusha
push
and
loope
sub
or
add
fwait
clc
adc
sub
clc
setb
jmp
clc
mov
sub
cmp
setae
lcall
enter
adc
pop
rorb
mov
pop
ds
mov
inc
mov
fimuls
aas
out
aam
push
inc
push
aam
lea
push
sbb
push
aad
push
or
es
pop
pop
loop
and
shll
jl
insb
jecxz
xchg
lock
leave
push
pop
cmp
or
sub
dec
inc
push
add
sbb
push
les
add
cli
pop
lds
ss
lcall
push
push
adc
dec
push
push
jb
and
inc
or
leave
sub
jg
mov
dec
add
inc
stos
iret
call
jge
std
adc
push
push
pop
sbb
mov
aas
cmp
ja
movzbl
enter
test
jno
cmp
test
jge
testl
add
add
jbe
adc
sub
add
add
lds
mov
add
hlt
mov
mov
and
or
sub
push
cmp
inc
sub
inc
in
xor
and
jmp
cltd
nop
dec
dec
pusha
jmp
das
sbb
and
sub
int3
inc
xor
sarb
xor
mov
shrl
and
jo
push
bound
jp
mov
push
imulb
pop
andl
mov
add
movsb
es
sub
xchg
rolb
mov
cmc
pop
shlb
add
sahf
add
int
movsl
je
ds
fcoms
in
ljmp
cli
outsl
popa
test
ljmp
or
add
xor
or
push
sub
lds
dec
mov
sbb
push
ja
nop
mov
push
jne
sbb
or
je
jo
call
jmp
fldl
mov
push
adc
setle
nop
cmp
dec
push
pop
movsb
dec
sbb
push
mov
jae
mov
roll
dec
dec
add
je
inc
add
push
pop
and
push
inc
lcall
lret
mov
xor
cld
mov
push
nop
and
leave
inc
popa
cld
js
jo
shrl
mov
je
repnz
mov
jg
mov
sub
inc
lods
adc
sub
mov
jmp
xorl
sti
subb
jg
sub
int
jbe
dec
and
inc
shlb
push
enter
or
or
adc
push
insl
cmp
popa
cli
sbb
push
push
dec
mov
mov
test
test
jg
xchg
sub
xor
aam
arpl
adc
add
pop
lcall
xchg
add
dec
mov
xor
sbb
and
lea
inc
inc
jbe
add
push
push
mov
dec
add
push
push
loopne
add
and
cltd
cld
aam
xchg
ret
mov
ds
pop
xchg
and
divb
call
add
add
add
fcmovnu
sub
rclb
sub
test
push
add
mov
adc
sub
push
fisttpl
rcll
mov
pop
fisttpl
pop
shll
and
xchg
add
mov
dec
es
and
out
xchg
outsb
xchg
or
fldenv
or
dec
cs
add
aam
mov
mov
xchg
xor
fs
pop
call
mov
fcomps
adcb
fiaddl
push
test
lods
mov
or
mov
add
add
push
mov
sbb
sub
clc
add
roll
leave
cmp
add
fwait
lods
std
pop
data16
inc
ss
es
pop
loope
lahf
roll
mov
test
push
rolb
shl
sub
or
push
sahf
push
add
data16
push
jb
rorl
or
inc
aad
pop
insl
repnz
sub
lods
push
das
cmc
or
adc
and
adc
movsl
and
cs
mulb
mov
movsl
and
add
add
sbbb
mov
or
sub
rclb
loopne
xor
adc
shrb
dec
adc
push
inc
negl
icebp
sahf
sbb
adc
mov
lahf
push
push
ljmp
jecxz
mov
mov
adc
insb
dec
sbb
insl
add
inc
mov
add
mov
popf
mov
xchg
push
mov
push
adc
sub
pushf
outsb
sub
push
popf
aam
sub
pop
mov
sub
leave
mov
or
jmp
adc
and
push
cmp
sub
cmpsl
out
mov
pop
inc
shr
pop
fimuls
cmc
inc
test
jmp
mov
mov
nop
sbb
fwait
mov
adc
test
sbb
test
xorb
jl
xchg
add
push
pusha
out
mov
das
cmp
sbb
sub
nop
push
std
scas
push
daa
fdivr
cmp
xor
xor
or
jmp
dec
or
mov
jmp
das
aas
xchg
loop
test
into
movl
fmull
pop
lods
jge
adc
mov
leave
lret
je
ds
push
sbb
mov
cmp
es
xchg
or
mov
adc
add
adc
test
ljmp
add
movsl
test
andb
xlat
pop
push
cmp
xor
and
inc
mov
or
shll
jne
push
popa
in
das
mov
int3
adc
daa
popf
mov
push
jg
sbb
push
test
and
sbb
stc
mov
test
jne
adc
or
stos
dec
sbb
xchg
iret
adc
cmp
or
xor
add
xchg
aam
cltd
lret
das
sbb
std
mov
jns
push
pop
mov
shlb
push
sbb
icebp
dec
rcrl
ss
push
into
icebp
sub
lea
sbb
push
adc
shlb
pusha
add
jbe
mov
cmp
and
loopne
sbb
sbb
test
jl
add
repnz
add
mov
cmp
push
pop
gs
pop
sbb
sub
and
or
adc
jbe
pop
mov
clc
xor
xor
idivb
test
dec
xor
sbb
adcb
shl
push
pop
jne
xlat
pop
std
inc
pop
sbb
cmp
xor
adc
jle
mov
inc
loopne
add
sub
mov
add
adc
bound
mov
shrb
xor
mov
adc
and
inc
and
jmp
xor
adc
and
out
loopne
bound
dec
and
inc
icebp
int3
cmove
orb
mov
jmp
pop
sbb
sub
lcall
lret
and
inc
push
inc
xor
pushf
inc
pop
ljmp
mov
mov
xor
xchg
hlt
mov
unpckhps
std
fists
push
pop
enter
push
pop
sub
and
and
imul
jmp
add
imul
push
out
cmpsb
cmp
pushf
or
add
sbb
mov
xor
lcall
sub
add
mov
lods
es
scas
and
imul
ss
push
sub
stos
inc
push
pop
rolb
loope
cmp
mov
mov
in
and
jl
push
or
mov
sub
mov
pusha
add
cltd
addb
jnp
loop
add
sbb
adcl
sub
inc
xor
in
mov
pop
dec
sub
add
adc
sbb
push
fnsave
std
add
repnz
and
xor
push
mov
sub
push
sbb
sbbl
add
nop
jmp
sub
sub
test
pop
dec
out
xor
pop
add
mov
jl
lock
daa
add
and
fsubrs
pop
sub
inc
imul
mov
repz
cmp
sub
add
mov
and
enter
in
out
inc
push
fs
es
pusha
pop
and
lds
cmpsl
push
sub
test
pop
xor
ds
add
pop
add
push
jnp
cmp
push
divb
push
jmp
add
loop
push
xor
mov
cmp
cmp
iret
pop
mov
out
push
cmp
xor
inc
into
and
test
sub
ds
inc
push
testl
mov
insl
sub
jge
leave
iret
test
in
loope
xor
sub
lds
or
insl
dec
jge
pop
pop
mov
push
or
or
jne
xchg
adc
inc
sbb
int
mov
stos
cmp
xchg
and
dec
adc
dec
inc
sub
jmp
push
movsb
cmpsb
inc
cmp
lea
sbb
cwtl
sbb
cmp
inc
lods
mov
addl
pop
inc
pusha
pushf
ss
pop
add
push
xlat
imul
add
sub
or
inc
mov
mov
jg
test
idivb
movb
mov
fbstp
cli
mov
cmp
cmp
loopne
adc
jno
mov
clc
xchg
add
fmulp
mov
mov
sahf
jno
adc
mov
jecxz
jecxz
and
fsubr
push
movsb
fildl
or
rorb
add
mov
stos
in
push
or
into
inc
sub
mov
jne
cld
ss
mov
outsl
add
ss
iret
mov
out
inc
dec
inc
xor
add
test
lea
daa
inc
shrb
jmp
hlt
push
out
or
cmp
and
inc
pop
fadds
in
push
mov
repnz
xchg
push
out
shlb
je
subl
push
pop
pcmpgtb
sbb
mov
xor
mov
rcrl
in
and
addr16
into
mov
push
jp
dec
pop
push
add
sahf
inc
dec
inc
cmp
mov
stos
pop
fwait
outsl
mov
inc
lock
lds
out
mov
in
clc
testl
push
mov
subb
pop
inc
xchg
aam
subb
js
adc
xorb
pushf
nop
cmc
dec
mov
sbb
rorb
std
cmp
cmp
popf
jno
mov
jle
mov
test
pop
adc
in
arpl
les
loopne
jno
addr16
sbbl
and
inc
pop
xchg
in
pop
xchg
in
and
leave
push
test
je
add
or
or
or
test
mov
je
or
push
mov
insb
push
rolb
xchg
sub
jo
ret
add
xorb
arpl
dec
in
add
push
sbb
sub
dec
pop
push
and
out
lcall
test
gs
gs
adc
push
or
les
mov
nop
sbb
sub
add
lret
rol
push
std
std
dec
enter
push
push
lock
pop
xchg
sbb
xor
or
je
mov
loopne
pushf
mov
sti
jg
nop
sub
xor
inc
cmpsw
xchg
movsb
push
push
push
iret
ret
aaa
iret
mov
dec
push
cmp
mov
or
push
push
pop
sub
data16
enter
dec
adc
add
dec
adc
dec
subl
pop
out
add
inc
es
push
cmp
and
nop
lret
and
filds
push
insb
inc
adc
in
cwtl
jae
test
adc
sub
push
push
in
outsl
sub
mov
cmp
adc
and
sub
adc
fs
jbe
cmp
nop
add
scas
pmulhuw
and
lock
push
dec
cmp
jecxz
outsb
popl
in
ds
cltd
add
push
adc
push
add
sub
movsb
inc
test
push
or
in
push
adc
sbb
sbbl
pushf
mov
add
inc
cmp
std
adc
adc
les
push
leave
sbb
jb
sbb
add
inc
or
adc
sti
xor
sbb
adc
push
push
pushf
aaa
inc
fbld
sbb
dec
sbb
push
mov
lea
jmp
mov
call
add
cmpsb
daa
repz
subl
and
or
mov
dec
fcomps
cmp
dec
cwtl
pushf
sbb
inc
pop
mov
mov
pop
and
sbb
cwtl
push
mov
cmp
and
dec
mov
cmpb
mov
inc
pop
fs
sub
into
mov
sbb
push
in
jno
push
cmp
adc
dec
lahf
lahf
push
outsl
sbb
sub
push
or
pop
out
add
cmp
push
jl
mov
push
aas
pop
jb
jecxz
add
inc
loopne
sub
orl
out
pusha
sub
outsl
xor
adc
fst
and
jmp
pop
je
mov
cmp
and
adc
mov
pop
shlb
dec
jae
or
cltd
nop
iret
xchg
dec
out
sbb
pop
je
adc
or
cmp
cltd
sbb
push
inc
mov
bound
jmp
push
stos
mov
lds
add
int3
js
popa
pop
inc
add
filds
aam
orb
dec
xchg
push
fs
dec
rcrl
jo
fs
inc
sbb
or
push
inc
dec
subl
test
push
sub
fnstenv
lret
xor
popf
pop
sub
add
pop
insb
add
mov
loopne
push
adc
lock
xchg
jl
mov
push
fldt
xor
frstor
xor
push
cmpsl
and
inc
jne
out
adc
jb
enter
push
lds
ja
je
cmpsl
mulb
hlt
dec
clc
and
or
loop
pop
ljmp
xchg
icebp
arpl
dec
out
cmp
pop
mov
rol
jle
jg
idiv
rorb
push
mov
push
xorb
je
outsb
or
loop
inc
fucomi
rcll
pop
mov
jne
push
out
add
lea
jg
shr
outsb
mov
lea
inc
test
jmp
int3
adc
gs
ja
xchg
and
mov
hlt
sbb
aaa
out
mov
jb
push
sub
push
push
inc
mov
popa
punpcklwd
push
sub
cmp
mov
jno
js
jle
push
imul
add
dec
int3
mov
cmp
cmp
nop
add
aam
fists
cmp
or
adc
push
test
test
jle
sub
mov
aaa
or
sub
cmp
xor
test
mov
and
aas
movsl
xchg
not
mov
push
jno
sbb
push
or
xor
cmpsl
aas
ret
adc
jecxz
mov
xchg
dec
add
push
repnz
add
inc
ret
and
push
shlb
cltd
aad
cmp
les
jg
mov
rol
cmp
je
ret
aaa
ss
cmp
adc
add
mov
mov
mov
outsl
pusha
add
loopne
jno
dec
and
jnp
or
sbb
mov
lahf
nop
dec
sbb
mov
push
gs
inc
and
cmp
or
or
leave
daa
mov
jo
add
inc
mov
mov
js
xor
jne
je
movl
push
push
test
push
sbb
scas
adc
jo,pt
pop
or
xchg
xlat
sbbl
jecxz
xlat
rorl
js
loope
add
xchg
fcomps
incb
jle
mov
mov
xor
call
in
push
xor
aad
and
push
or
sub
hlt
add
addb
adc
aad
xchg
add
fs
and
mov
pop
outsb
lret
ret
mov
pop
iret
adc
cmp
xchg
stos
xor
pop
cmp
int3
mov
inc
cmp
xchg
pusha
ja
inc
adc
pop
push
pop
test
mov
jle
aas
pop
in
roll
ds
movsl
stc
sarb
cld
lea
sub
fs
dec
dec
push
pop
mov
fimuls
in
jo
sbb
mov
cwtl
jno
or
and
mov
aad
pusha
add
mov
sub
rorl
and
push
addb
jp
add
xorb
xor
adc
scas
mov
pop
clc
ljmp
aaa
jno
or
stc
sub
push
cmp
push
xchg
pop
jmp
sbb
adcl
rolb
adc
mov
dec
sub
jge
xchg
xor
aad
add
xchg
mov
dec
or
out
stos
leave
inc
add
dec
mov
mov
jge
push
test
xor
adc
sbb
xor
das
xor
imul
int
or
jmp
pop
out
sub
push
nop
xchg
xor
add
and
outsl
leave
pop
insl
and
ja
sbb
add
mov
cmp
add
ret
je
mov
adc
xorps
push
push
xor
arpl
jmp
push
cmp
test
mov
mov
orb
ret
xchg
jmp
rcrl
enter
inc
add
testl
mov
xchg
push
push
push
sbb
sub
jae
mov
and
popa
and
push
in
mov
push
jmp
mov
jl
fdivs
jne
cld
push
aas
adc
cmp
sete
sub
dec
mov
mov
movsl
call
cmpsl
dec
add
pop
adc
test
dec
pushf
add
xchg
bound
mov
mov
sub
adc
ret
mov
andb
aad
ja
adc
adc
or
mov
mov
fists
mov
xor
addb
fistpll
and
sub
push
stos
in
cmc
mov
in
or
push
push
pop
das
mov
cmpsl
pop
mov
xchg
sub
test
xor
lea
dec
test
ret
jg
sub
cmc
testl
mov
fwait
or
and
out
pop
insl
mov
mov
jne
rorl
dec
inc
add
pop
sbb
pop
mov
cmp
add
imul
in
jno
sub
repz
sbb
push
rorl
insb
xor
lret
movzwl
mov
popf
shrb
xchg
cmpsb
rcrl
xor
cmp
andl
push
lock
jle
xor
or
fsubrs
pop
xor
push
das
sub
pop
and
jo
xchg
and
and
push
loope
push
cmp
mov
or
cmp
or
lret
pusha
sbb
cmpl
jg
and
test
sub
into
scas
es
jo
sbb
cmp
jno
cmp
adc
adc
adc
inc
inc
push
movsb
inc
mov
mov
je
mov
push
jle,pt
inc
scas
adc
sbb
lods
rorb
xor
dec
leave
and
lret
loopne
or
or
mov
aam
dec
inc
adc
and
add
sub
cmp
adc
push
call
fcoml
push
push
push
cwtl
fstpl
or
rorb
xor
mov
adc
dec
mov
adc
push
mov
loopne
adc
stc
inc
push
push
jns
mov
icebp
mov
sbb
out
fucompp
adc
push
leave
xchg
adc
push
push
mov
mov
push
pop
adc
sahf
add
or
adc
push
push
jno
mov
inc
jno
cmp
pop
inc
dec
ss
sbb
or
add
shlb
sbb
inc
testl
push
adc
ret
sub
fcoml
lock
mov
imul
rorl
cmpl
je
lods
push
mov
and
mov
popf
mov
xchg
sbb
mov
dec
stc
mov
bnd
xor
pop
mov
movsb
push
push
push
mov
pop
push
data16
mov
inc
inc
outsl
and
inc
pop
inc
rcll
mov
testl
test
mov
xor
mov
ret
mov
push
adc
adcl
or
or
fisttpll
jp
cmp
xor
dec
xor
hlt
cmp
jne
sbb
inc
in
ret
mov
inc
jp
ja
loopne
clc
stc
bnd
fld
fcoml
add
cmpsl
adc
xlat
push
add
aaa
mov
dec
mov
xchg
add
roll
sti
adc
xchg
sub
clc
mov
adc
xchg
cld
mov
adc
icebp
decl
outsb
add
or
lea
jge
push
push
add
decb
imul
xor
add
mov
adc
lds
inc
sub
cmp
loopne
mov
sub
fnstenv
pushl
mov
push
jl
jo
sub
cltd
mov
inc
mov
mov
jmp
mov
fnstenv
adc
movb
out
out
and
xor
and
or
sbb
xor
and
xchg
roll
push
insl
xchg
or
jp
inc
pusha
adc
dec
lds
int3
sbb
outsl
push
fsubl
ja
xor
je
cmpb
pop
pop
dec
jp
mov
sbb
lea
add
cmp
push
add
mov
icebp
mov
sti
sub
push
sarb
sub
mov
idiv
xor
lret
lret
add
cmp
push
cmp
lods
or
sbb
iret
pop
mov
dec
hlt
jge
add
add
or
jp
add
inc
sbbb
sbb
and
movl
nop
sbb
es
das
jno
mov
fmul
fsubrs
push
add
adc
es
xchg
or
fcmovnb
es
push
sahf
jl
mov
push
icebp
sub
jg
push
add
push
out
sub
ret
lods
test
or
gs
adc
dec
dec
cld
sub
loope
loopne
add
lea
mov
xchg
call
add
loop
xchg
pushf
imul
or
mov
scas
push
adc
mov
inc
push
xor
pop
fisttpl
adc
lods
add
ret
out
outsl
and
repnz
hlt
pusha
xchg
push
push
and
hlt
push
adc
stos
and
or
dec
dec
es
ret
jg
sbb
adc
mov
pop
rcl
sbb
adc
shlb
xchg
lods
gs
leave
add
mov
cmp
adc
push
addl
out
cmc
scas
outsb
cmpl
js
mov
inc
jle
jg
mov
add
lods
ret
aas
cmp
addb
add
dec
xchg
xorl
jp
jo
push
xchg
lahf
das
aas
inc
push
mov
mov
outsb
nop
cld
inc
loopne
jg
sbb
mov
mov
in
xchg
or
ret
insl
popf
push
test
adc
addl
dec
testb
jmp
cmp
andl
outsb
add
sbb
fldcw
dec
decl
imulb
rcr
add
mov
and
adc
cmp
xorb
jle
lock
out
and
push
add
sub
lock
loop
pop
mov
pop
sub
sbb
mov
test
popf
inc
loop
jo
je
add
or
or
push
int3
lea
cmpsl
push
lea
xor
mov
test
enter
lock
push
inc
dec
push
push
fldlg2
cmpsb
xor
jp
outsb
push
add
and
push
pop
test
pop
jecxz
push
add
in
insb
pop
mov
pop
hlt
add
cmp
popf
mov
mov
mov
sbb
sub
pop
pop
ret
int
setge
rcrl
mov
add
jl
add
ret
pop
mov
add
sarb
jle
outsb
aas
add
inc
add
lock
dec
fdivr
inc
or
or
orb
add
adc
inc
push
jne
jae
jg
add
test
mov
xor
jbe
xchg
inc
add
mov
add
je
sub
stos
mov
movsb
pop
stos
aaa
orb
lea
add
pop
sbb
cmpsb
push
mov
loope
pop
push
pop
jb
add
xchg
or
sub
mov
in
mov
ret
push
int3
jmp
aas
iret
mov
lcall
mov
sbb
adcl
cmp
arpl
add
inc
pop
cli
sbb
test
push
cmp
mov
sub
test
or
and
push
lds
add
mull
jmp
mov
stos
sub
daa
mov
xor
cmpsl
lret
sub
add
aaa
fsubrl
popf
push
iret
xor
sub
push
jmp
subl
jl
sbb
jge
xor
add
xor
inc
dec
xor
mov
add
mov
ljmp
mov
xor
sub
pop
jecxz
jmp
sub
jne
f2xm1
push
push
add
scas
add
inc
mov
add
pop
jmp
ss
ds
repnz
xchg
mov
adc
cmp
mov
push
shlb
push
push
xchg
les
dec
push
and
cmp
and
add
sub
out
mov
daa
sbb
add
push
out
or
xor
sub
or
sbbl
aam
js
out
add
adcb
adcl
int
xchg
push
out
sub
pop
jb
adc
mov
push
leave
adc
stos
and
dec
lret
xchg
filds
or
or
sub
xchg
daa
out
sbb
sub
loope,pt
jno
push
push
xor
loopne
push
and
sub
mov
mov
sbbb
xor
fs
jle
pop
add
arpl
es
push
mov
mov
add
shrb
sbb
sub
mov
push
add
popa
add
fnclex
add
out
and
or
cmc
cmp
mov
int3
sahf
pop
and
insb
inc
adc
xor
pusha
add
shlb
and
jne
loopne
add
out
sub
shll
sbb
aam
add
fdivrl
xlat
sbbb
or
aad
add
mov
inc
cmp
adc
xor
sub
sub
and
je
pop
ds
mov
xlat
add
push
dec
arpl
push
fsubl
sbb
adc
jmp
stos
in
mov
sub
add
dec
cld
jne
sti
sub
mov
and
push
cmp
nop
and
sub
sbb
int
movsb
sub
push
add
shrb
mov
pop
adc
orl
loop
outsb
sti
mov
or
movl
rcrb
and
stos
push
fs
and
or
lret
rol
ret
add
lds
or
cmp
or
sub
sub
xor
push
adc
jle
rolb
mov
and
sarb
sbb
adcb
loope
test
push
decb
xchg
push
and
pop
or
stos
and
rorl
divl
and
cmp
dec
shrb
adc
subb
sbb
stos
push
ret
xlat
and
js
inc
into
lods
in
hlt
loope
mov
and
pop
jae
inc
xor
test
arpl
nop
in
dec
mov
gs
inc
sbb
push
xchg
xchg
nop
pop
mov
and
idivb
push
inc
push
push
xor
push
mov
sub
pop
cltd
dec
add
pusha
xor
popf
and
add
xchg
push
add
sbb
push
cwtl
call
ret
ret
fists
fs
push
loopne
loope
adc
dec
jp
insl
mov
jns
loopne
mov
jo
pop
daa
add
jae
inc
loop
adc
jl
enter
js
inc
push
sub
mov
pop
into
stc
movsb
lret
mov
pop
cmc
pop
pop
lret
adcl
sub
je
or
cltd
mov
add
cmp
lock
mov
pop
stos
in
or
mov
aas
mov
loopne
pop
sub
insb
mov
lods
aad
xchg
insb
outsb
or
xor
or
sbb
sub
adc
add
or
dec
lods
mov
mov
popa
bt
push
adc
mov
ficoms
push
outsb
stc
add
imul
push
cwtl
mov
sti
hlt
test
or
int
add
push
in
aam
movsl
sub
pop
mov
ds
or
ss
popf
adc
lea
sbb
cmp
xor
xchg
dec
ret
xor
bound
lods
xor
les
fs
mov
mov
dec
mov
and
cs
mov
cmp
inc
pop
add
push
gs
push
jne
mov
inc
lods
or
ret
xchg
dec
push
push
lcall
sub
into
add
sbb
outsb
mov
dec
add
out
jns
add
cmpsb
inc
and
adc
or
daa
mov
jo
test
add
jg
or
xchg
je
or
and
es
push
xor
imul
mov
or
sub
or
sbb
clc
das
jl
test
je
lea
add
movsb
out
test
arpl
mov
aaa
mov
test
into
cmp
jb
pop
pop
mov
lock
aam
push
in
sbb
cmp
push
push
inc
sub
or
push
jo
push
rorb
cmp
mov
push
rorb
mov
test
aas
std
ret
clc
mov
sub
imul
add
in
in
xchg
enter
mov
in
cld
mov
sub
or
jge
lret
fisubrl
jo
or
push
lcall
das
cmp
sahf
jo
pushf
xchg
pop
push
push
and
mov
xor
push
bound
jg
movsb
lahf
inc
sub
sub
je
sub
push
push
dec
movsb
push
rclb
imul
push
push
lds
dec
scas
sub
add
popf
mov
incb
notl
add
add
xor
sub
fsubr
int3
and
and
andb
fs
xchg
call
fisubrs
js
jg
add
pop
add
cmp
push
fidivrs
jo
outsl
lea
jmp
into
nop
lods
test
shll
enter
imul
or
jge
pop
ret
inc
rorb
lock
adc
dec
retw
add
mov
mov
int3
push
mov
or
pop
mov
js
rol
pop
adc
test
or
inc
and
mov
insb
adc
and
xchg
push
push
ja
into
add
ljmp
fmull
adc
pushf
mov
jbe
fs
in
jmp
mov
inc
and
inc
loop
lods
sahf
xchg
rcrb
or
out
add
add
loop
lods
mov
push
push
adc
add
cmp
push
jp
push
mov
nop
roll
xlat
mov
cmp
mov
repz
xchg
vandps
mov
mov
push
movsl
clc
dec
pop
imul
dec
or
push
es
mov
add
jge
inc
add
inc
clc
add
sbb
push
push
sbb
ja
mov
cmp
fwait
mov
add
jl
mov
rol
lock
pop
das
pop
and
lock
mov
xor
xchg
mov
cld
mov
ds
cmp
je
push
push
mov
xchg
cltd
add
or
lock
pop
sbb
cwtl
jp
cs
push
jbe
test
xchg
mov
push
test
push
and
sub
push
push
sbb
pop
cmp
sahf
pop
test
sbb
sbb
inc
cld
xor
idivb
fs
out
cld
add
sbb
jmp
fs
push
adc
xchg
lock
les
sarb
mov
xor
sbb
negl
push
cmp
push
mov
aaa
test
mov
xchg
push
inc
mov
xor
rclb
ret
inc
add
out
mov
shlb
pusha
pop
cld
pop
add
lock
push
call
popa
fnstcw
dec
cmp
pusha
bound
and
push
inc
jle
dec
or
pop
ret
add
dec
adc
or
pop
imul
sub
mov
add
or
mov
ret
jg
push
shrb
in
dec
inc
scas
inc
inc
cld
xchg
or
inc
clc
xor
push
bound
addr16
inc
jo
or
insb
xchg
js
in
pop
add
sarb
ljmp
loopne
add
mov
pusha
push
dec
lock
bound
sbb
popf
and
popa
sahf
mull
dec
push
incb
dec
jo
adc
repnz
inc
push
inc
hlt
scas
pop
popa
push
stos
cmp
aad
ss
inc
jnp
cmp
jae
mov
push
pop
or
add
insl
cmp
fcompl
inc
push
mov
ljmp
mov
stos
cmp
cltd
jno
or
xchg
xchg
push
pushf
js
cmp
sub
xlat
sub
cmp
sub
test
xor
cmp
test
and
add
sbb
ja
ror
ret
jge
movb
add
addr16
imul
rorl
cld
sub
inc
and
jne
mov
inc
jo
cmp
lea
mov
push
push
push
xchg
mov
jl
cmpsb
mov
mov
or
sahf
or
push
jnp
pop
cmp
lock
sysenter
push
jo
push
in
mov
movsb
cli
lock
push
pop
pop
cmp
call
mov
ret
pop
loope
xchg
test
or
pop
ret
lahf
scas
jno
cmp
sbb
xlat
or
frstor
sbb
repnz
hlt
cmp
sbb
iret
adc
cltd
std
and
cmpsb
dec
push
dec
xchg
test
ret
or
inc
movsb
fistpl
nop
ret
and
cld
push
mov
mov
dec
pop
push
dec
cld
jbe
loope
sub
mov
lock
mov
and
mov
or
enter
mov
or
xchg
jp
xlat
or
xchg
cmp
adc
mov
xchg
imul
xchg
lret
movsb
xor
xor
in
pop
daa
inc
fnstsw
cltd
test
or
push
leave
sti
arpl
adc
push
add
daa
inc
inc
insb
outsb
or
ljmp
cs
dec
push
dec
or
mov
and
sbb
push
cs
fistpll
push
sub
fdivl
push
test
hlt
inc
js
jno
dec
out
jae
aaa
add
or
push
push
in
cli
lcall
sbb
push
inc
mov
in
dec
jo
lea
je
lahf
and
xchg
divl
inc
movsl
mov
divl
add
cmp
push
mov
jl
inc
cmp
lock
es
and
push
add
push
push
push
roll
sub
adc
popa
and
lods
push
push
push
add
push
push
mov
and
cmp
xor
test
lcall
push
push
loope
inc
test
mov
lods
pop
das
push
push
sbb
and
push
push
mov
mov
cmp
jne
xchg
lock
or
ror
xchg
mov
loope
adc
xchg
dec
repnz
iret
add
sub
jo
rclb
mov
popf
and
mov
jmp
or
inc
mov
or
dec
shlb
mov
and
inc
roll
jbe
fbld
movsl
ja
rorl
mov
inc
mov
psubusb
mov
imul
test
mov
inc
adc
pop
popf
inc
ss
dec
adc
mov
jge
add
push
xchg
sub
mov
adc
pushf
push
pop
mov
add
movsb
outsb
sbb
addl
mov
iret
or
inc
push
mov
adcl
nop
pop
lret
aad
xlat
cmpsb
pop
imul
push
mov
xor
xor
xorl
dec
je
loope
pop
and
scas
and
cmp
adc
cs
inc
add
sub
xor
jg
roll
add
add
push
int
lcall
sbb
cmc
das
add
mov
mov
xchg
sbb
into
dec
push
dec
fs
mov
jb
inc
pushf
inc
fwait
aad
aam
icebp
out
xchg
jle
mov
push
mov
pop
xor
mov
pop
xchg
faddl
test
fiaddl
cmp
loopne
adc
dec
dec
sbb
cltd
or
add
push
shll
add
or
enter
and
sbb
je
sbbl
mov
push
sbb
sub
pop
mov
imul
jns
scas
jb
and
or
inc
mov
das
mov
and
push
push
ss
xor
pushf
inc
sbb
xchg
cmp
push
scas
xlat
xchg
push
cmp
xor
sub
pop
or
mov
fldenv
push
iret
adc
adcl
inc
add
inc
jae
sbb
loope
call
shlb
add
add
or
dec
sub
push
pop
vunpcklps
push
rorb
js
cmpsl
mov
dec
adc
xchg
lahf
dec
test
push
mov
push
pop
pop
cs
cmc
lret
adc
and
stc
adc
or
xor
add
inc
cltd
in
inc
sbb
push
xchg
clc
in
pop
cmovs
inc
adc
popa
push
xor
lock
sbb
test
out
inc
mov
push
inc
push
test
in
sbb
push
jmp
stos
ljmp
daa
ljmp
push
mov
push
mov
sti
inc
or
enter
cmp
sahf
dec
shlb
xchg
dec
dec
out
inc
cmpsl
adc
dec
fisttps
ret
testl
bound
iret
je
cmpb
push
dec
pop
jno
out
test
lea
shrb
sbb
and
sbb
adc
dec
lods
inc
ret
push
mov
inc
mov
dec
or
push
pop
hlt
dec
inc
pop
xlat
sbb
jg
cmp
xchg
pop
mov
pop
sub
push
insl
mov
stos
cld
dec
mov
fcoms
iret
mov
push
inc
pop
imul
into
xor
or
mov
addr16
rcl
cmp
scas
dec
gs
sub
dec
add
aaa
dec
adc
mov
adc
loope
adc
js
inc
push
jb
xorb
add
cld
or
mov
popa
es
ljmp
and
mov
mov
sbb
imul
pusha
mov
and
jb
testl
and
or
mov
fisubl
lcall
daa
and
push
jle
out
push
dec
add
or
lret
fs
adc
flds
adc
aaa
xchg
push
adc
cmp
sub
dec
xlat
out
xchg
shrl
mov
dec
mov
jg
aam
dec
cmp
jmp
xor
push
add
pop
pusha
pop
sub
mov
dec
loopne
mov
add
aas
xor
push
sub
sbb
pop
in
xchg
lret
sbbl
loope
sarl
shrl
pop
and
fsubrl
insl
cmp
loopne
pop
dec
push
pop
dec
scas
pusha
test
jp
cwtl
pop
fdivl
psubb
pop
adc
ret
mov
mov
sbb
sbb
cmpsb
sbb
pop
imul
sbb
nop
imul
das
mov
out
push
jl
inc
dec
sbb
xorb
enter
cld
inc
xor
les
cmpl
aas
xor
mov
or
std
xchg
jno
pop
and
mov
cmp
clc
inc
xor
or
xchg
dec
aas
push
push
add
dec
xchg
sub
sbb
adc
adcb
pop
add
loope
shr
fmuls
inc
mov
loop
outsl
adc
sbb
insb
push
mov
xchg
call
outsb
xlat
mov
les
pushf
inc
pushf
dec
dec
and
test
js
cmp
fdivl
and
fwait
mov
aaa
adc
scas
out
addb
and
cmpsl
icebp
push
lods
inc
shrb
and
and
stc
test
popa
test
lcall
push
dec
mov
xor
jns
sbb
mov
cmp
mov
adc
pusha
push
insb
adc
cld
xor
mov
jp
pop
rcl
pop
jg
inc
mov
add
sub
pop
sahf
test
dec
cmpsl
pusha
and
adc
add
jb
push
push
add
lods
aaa
push
or
dec
shlb
movsl
push
sub
push
or
cli
pop
fmul
jbe
pop
pop
xor
int3
in
add
dec
push
sub
push
inc
lea
xor
insl
test
fsubs
jg
jno
ret
or
iret
mov
pop
dec
inc
fs
or
push
jmp
jne
or
mov
jp
dec
repz
pusha
push
test
xchg
cmp
in
adc
imul
xor
dec
push
inc
inc
shrb
push
xchg
and
inc
or
movsl
orb
jns
xchg
lea
push
push
and
js
mov
dec
sub
push
arpl
sub
fisubrs
mov
xor
jmp
int
sub
push
jmp
pop
loope
test
inc
adc
xchg
add
cs
insb
lock
push
and
sbb
insb
adc
push
mov
sbb
sub
jbe
inc
adc
faddl
push
mov
aad
xchg
push
dec
or
cli
imul
jl
push
add
fbld
js,pn
ret
xor
movsl
pop
ret
jge
or
adc
add
jb
imul
push
push
xor
xchg
unpckhps
xchg
jge
or
or
gs
fnstenv
or
jne
add
sbb
insb
sub
mov
mov
in
repnz
insb
lret
pop
sub
xor
pop
push
adc
xchg
push
sub
cs
rcl
jno
push
lods
xchg
popf
mov
or
dec
and
xchg
dec
dec
sbbl
arpl
jbe
pop
pusha
cltd
dec
inc
stos
push
ret
xor
test
pushf
mov
jge
mov
mov
xlat
stos
add
xor
sub
inc
jb
sub
pop
push
or
or
test
inc
rcrl
and
and
hlt
lock
cmp
inc
je
cmp
push
mov
add
and
in
mov
or
std
add
fidivrl
sub
loopne
and
test
push
jmp
or
ret
xor
shlb
and
add
and
sub
mov
dec
sbb
rcrb
push
pop
cld
cmpl
inc
out
adc
addr16
aam
xor
rorb
fwait
mov
push
mov
fucomi
out
inc
xlat
cmc
das
lea
mov
popa
jbe
dec
call
andb
rorb
out
adcl
aam
out
add
adc
call
sbb
or
sbb
das
adc
in
jecxz
or
push
test
mov
orl
fs
add
jno
mov
pop
filds
sub
adc
add
push
jl
sbb
adc
sub
sub
sbb
popa
pop
or
jb
xchg
push
je
inc
loopne
push
addb
push
mov
push
les
adc
push
push
test
add
inc
popf
mov
sub
xchg
cmp
pop
jo
sbb
popa
pusha
inc
sbb
and
rorb
cs
hlt
and
and
sbb
xor
sahf
inc
das
hlt
adc
and
push
ficoms
add
rcll
pop
or
movsl
and
adc
xchg
mov
or
xchg
mov
mov
pop
shr
sbb
test
dec
adc
dec
mov
loope
xor
lea
push
insb
std
cmp
adc
mov
lods
mov
sub
and
dec
jno
dec
pop
adc
adc
adc
xor
push
and
or
or
jg
jnp
or
fs
pop
mov
mov
or
and
and
push
sub
xor
aas
cmp
enter
pop
cmp
inc
push
lea
js
icebp
mov
sbb
lea
cmp
mov
adc
aam
sbb
dec
insl
cmp
mov
push
mov
shr
adc
push
or
jecxz
push
rcll
push
inc
lods
jb
or
pop
fs
loope
movsl
xor
inc
pop
adc
xor
or
xchg
insb
mov
outsl
and
cmp
adc
fstpl
mov
xor
es
mov
imul
pop
cmpsl
mov
or
xchg
and
sbbb
and
or
sbbb
inc
mov
es
dec
into
test
movsb
mov
mov
inc
and
icebp
inc
adc
dec
sub
stos
test
inc
push
imul
loopne
xchg
add
and
sub
cmp
push
aam
add
test
and
test
sbb
jno
mov
push
push
sub
sbb
call
adc
loop
jne
cs
push
push
cmp
int
push
cmp
sbb
ja
out
pop
mov
push
xor
dec
repz
dec
mov
les
jbe
rol
cmp
stc
mov
adc
push
mov
xor
add
call
jge
cmp
jne
ret
adc
rcrl
mov
popf
cmc
ret
mov
mov
add
sbb
les
mov
add
adc
pop
cmp
mov
add
or
scas
xchg
je
pop
aam
pop
mov
movl
sbbl
out
mov
test
int3
cmpb
cmpsl
loopne
push
mov
popl
stc
push
add
push
test
dec
add
mov
lcall
adc
cmp
je
xor
inc
cmp
dec
and
rcll
sbb
ret
xor
push
daa
push
or
fadds
or
pop
je
mov
fstp
xor
pop
mov
mov
xchg
mov
incb
sub
cltd
in
push
aad
test
cmp
xor
xor
jno
xlat
jnp
mov
dec
xchg
popa
scas
enter
fiaddl
out
xchg
add
mov
es
in
sbb
arpl
push
les
jbe
mov
pop
lret
fisttpll
adc
fidivrs
push
inc
mov
repz
push
lcall
push
inc
push
jecxz
movsb
push
lods
xchg
loope
jmp
sbb
lahf
cmp
add
adc
fcmovbe
popf
hlt
and
enter
cltd
jg
jb
adc
push
sub
adc
adc
cmp
icebp
insl
jecxz
insb
shll
sub
inc
cmp
fbstp
mov
sub
shlb
adc
mov
jmp
inc
add
and
push
test
sub
sub
popf
ficompl
aaa
inc
hlt
jbe
std
add
inc
sbb
popf
and
hlt
or
repz
dec
and
pop
adc
xor
sbb
call
or
cmp
xor
pop
or
xchg
jns
daa
or
jo
test
mov
sbb
mov
xchg
adc
xchg
js
adc
rorl
dec
hlt
mov
pop
jb
jg
cmpb
jne
inc
inc
xor
in
push
mov
or
or
inc
cmpsb
sub
or
adc
mov
aas
and
push
inc
enter
or
jl
pop
and
mov
or
inc
pop
mov
and
and
call
jmp
cmp
xor
sbb
xor
push
mov
push
stos
sbb
sbb
inc
cltd
sbb
and
jb
dec
clc
or
icebp
mov
adc
add
in
push
add
aam
or
test
xor
pop
inc
add
adc
loope
pusha
cmp
jne
pop
xor
scas
cs
inc
aas
fsubrp
jmp
pop
xor
xchg
add
pop
loope
push
lea
adc
andb
notl
pop
fdivs
or
cmp
rorb
push
clc
adc
lods
mov
or
in
shlb
sub
jo
inc
xchg
dec
or
push
out
nop
fnsave
jne
or
jbe
adc
sbb
dec
push
and
cwtl
and
pop
add
push
mov
push
dec
add
int
dec
movsl
mov
inc
aaa
add
jb
addb
in
sbb
in
stos
test
in
cmp
lahf
aas
inc
push
push
and
clc
sub
ror
xchg
lods
jmp
lahf
mov
fwait
push
movsl
or
pop
lcall
mov
mov
xchg
cltd
push
sub
sub
sub
and
xchg
clc
loop
pop
xor
dec
sub
lea
in
std
xchg
pop
xchg
adc
xor
push
xchg
es
pop
xor
movl
xor
pop
fists
mov
mov
xchg
sbb
or
subb
adc
daa
test
dec
mov
inc
iret
cmp
adc
jne
jmp
add
shll
mov
lock
mov
add
or
repz
mov
push
ds
lock
shl
test
pop
ds
lret
adc
outsb
xor
mov
lcall
jp
pop
arpl
loopne
sbb
inc
loope
cs
rolb
jmp
push
dec
sbb
insl
and
bndldx
out
int3
push
xor
xchg
adc
adc
and
jns
movsb
sbb
adc
es
ja
arpl
mov
add
mov
add
adc
pop
mov
push
lds
cmp
pop
mov
dec
inc
daa
cmp
imul
sub
hlt
mov
mov
xchg
sbb
mov
int3
mov
jmp
mov
cmp
sub
repz
icebp
sbb
loop
ljmp
pop
loope
and
aaa
js
cmp
push
push
loopne
cmp
cmpsl
xchg
xor
mov
mov
scas
test
push
mov
shrl
jo
adc
adc
push
sub
mov
pop
inc
mov
push
and
xchg
push
lock
enter
outsb
push
xchg
arpl
les
add
add
push
or
dec
mov
jbe
cltd
mov
cs
adc
adc
xchg
mov
xor
sbb
lock
bound
and
lds
and
sbbb
hlt
pusha
add
mov
lahf
and
sbb
loopne
sbb
sbb
sbb
push
and
and
in
push
and
hlt
cmpsl
xchg
mov
es
xor
jbe
pop
fisttps
sbb
inc
dec
testl
cld
or
loope
imul
pop
cld
push
push
jmp
and
push
shll
dec
loope
adc
ds
pop
sbb
pushf
je
xchg
and
inc
dec
rdtsc
adc
mov
js
nop
or
mov
pop
mov
in
les
and
xchg
push
or
sub
ja
jg
test
jne
add
imul
adc
cmp
sub
mov
pop
icebp
jbe
add
mov
repnz
jp
xor
or
add
enter
xor
add
fisttpll
cltd
mov
mov
mov
jae
repnz
popf
push
cltd
arpl
fadds
movsb
movsb
test
js
adc
add
inc
or
adc
js
inc
inc
and
add
inc
orb
mov
in
imul
push
push
stos
push
xor
movsb
push
fldenv
cmpb
in
sbb
les
adc
jmp
clc
pop
adc
and
pop
mov
dec
mov
mov
ret
jbe
adc
cli
rorb
jnp
sbb
fiadds
add
mov
inc
sub
call
mov
fmuls
inc
loope
xchg
push
lea
push
and
and
xchg
ljmp
lods
xchg
sbb
inc
addb
mov
dec
call
movsb
pop
add
add
jl
pop
sbbb
aad
xchg
mov
aam
jno
adc
imul
fcoms
push
push
notl
dec
fldcw
mov
test
push
roll
hlt
mov
xor
dec
mov
inc
fsubs
push
fmull
push
lret
leave
fcom
or
call
xchg
add
jmp
test
sub
sbb
and
aad
or
es
and
jbe
or
or
push
dec
add
jns
enter
loope
sbb
int3
adc
mov
mov
xchg
push
mov
add
fs
adcl
clc
cwtl
testl
mov
cs
icebp
and
push
sbb
mov
and
push
cmp
mov
in
scas
or
inc
cmpsb
cmpsl
cmpsl
movsb
sarb
jmp
xor
sub
xor
push
mov
and
xchg
or
jl
inc
xor
adc
mulb
push
adc
rcrb
aad
jno
loopne
fldt
mov
leave
adc
and
push
sub
push
repz
pop
sarb
test
cmp
shlb
push
mov
mov
test
jno
addl
pop
sbb
pop
mov
xchg
add
lea
fstenv
cmp
jne
cmp
or
int3
mov
xlat
pshufw
mov
xor
mov
icebp
arpl
dec
inc
add
cmp
scas
out
push
push
or
xchg
pusha
add
movsl
pop
xor
sub
xlat
dec
add
fimuls
cltd
mov
jl
leave
jo
lock
mov
add
lock
movsb
inc
add
rcll
dec
sub
dec
xor
add
xchg
cmpb
mov
incb
xchg
inc
loopne
sbb
or
lds
or
sarl
jge
push
jbe
adc
add
lods
fidivs
push
rorb
sub
pop
mov
adc
jp
and
sbb
sbb
add
shl
lods
and
or
add
sub
adc
arpl
jne
cmp
outsb
mov
int
cltd
mov
out
mov
mov
adcl
dec
jmp
iret
in
push
sbb
fprem1
test
push
aaa
adc
push
das
mov
cs
inc
scas
inc
cmp
or
mov
test
or
jo
lds
cmc
into
fdiv
jne
sub
mov
jo
pusha
jne
or
rcrb
pop
mov
or
jle
xlat
andb
orl
xchg
sbb
sbb
adc
cmp
mov
repnz
inc
cmpsb
xor
push
mov
or
push
and
inc
movsb
pop
add
movsl
adc
mov
test
sbb
mov
xchg
call
xor
int
in
divl
nop
or
loopne
fstpt
pop
loopne
jns
ds
mov
jl
mov
push
add
lock
and
mov
push
push
sbb
test
or
sbb
repnz
pop
call
lret
adc
and
push
cmp
ret
or
add
js
add
cmp
and
insb
add
mov
mov
subb
cmp
fcomip
mov
add
jb
push
bndldx
out
cwtl
push
jecxz
add
adc
add
cmp
leave
dec
push
mov
sub
add
add
and
mov
jmp
bound
repz
xchg
jmp
aaa
jae
push
mov
mov
or
hlt
pop
shufps
test
mov
push
or
push
sub
push
adc
or
imul
lods
mov
test
jmp
inc
inc
mov
stos
adc
push
cs
mov
cmp
add
jne
cli
es
es
sub
xor
ret
filds
cmp
aas
sbb
mov
add
mov
mov
mov
dec
or
push
mov
subl
or
shlb
xorb
test
inc
add
cmp
jae
lea
repz
inc
fistpl
call
adc
or
push
push
jmp
lahf
rcrl
cwtl
push
push
sti
orl
hlt
inc
mov
in
mov
xor
fstpt
outsb
add
das
stos
and
jmp
inc
add
cmp
jl
pop
sbb
test
mov
pop
mov
mov
sbb
addl
jle
les
jl
adc
lock
push
movb
mov
or
mov
in
mov
inc
and
cs
sub
inc
xor
mov
pop
or
jo
out
inc
popl
and
cld
mov
mov
dec
shrb
adcb
clc
or
loop
mov
and
adc
inc
scas
sbb
xchg
adc
mov
dec
mov
add
das
dec
pop
and
cs
dec
add
or
inc
scas
push
add
dec
push
inc
add
das
jno
sarl
push
push
js
mov
mov
shll
dec
mov
cmc
movsb
pop
add
fstpl
sbb
cmp
and
add
push
and
addb
mov
push
icebp
push
enter
push
cmp
repz
sub
hlt
inc
pop
sub
or
loope
leave
inc
jbe
aas
sub
iret
pop
inc
push
push
dec
or
jbe
push
cmp
clc
pop
mov
fldcw
ss
mov
outsb
mov
mov
ljmp
cld
mov
mov
fdiv
pop
es
in
jl
sbb
jge
stos
sbb
cltd
add
andps
push
xchg
addr16
adc
adc
pop
aas
adc
loope
out
pop
add
cmpsb
add
xchg
adc
pop
xchg
sbb
dec
jno
loopne
push
lods
sub
push
int3
sub
jmp
adc
sahf
mov
mov
sbb
or
xor
and
sub
pushf
jb
lea
je
mov
repz
mov
inc
hlt
add
jmp
mov
xchg
enter
adc
mov
sub
movsb
inc
cmp
and
sbb
sbb
add
jecxz
jl
mov
mov
frstor
ds
xor
mov
mov
adc
mov
jle
push
popf
nop
jge
push
push
out
add
adc
xor
jmp
cltd
ret
adc
mov
pusha
lds
mov
mov
or
dec
inc
push
inc
push
mov
add
push
sub
push
mov
or
mov
mov
js
adc
inc
jmp
inc
push
add
mov
call
xchg
jp
push
push
das
or
stos
in
push
adc
or
cmp
mov
push
test
inc
xor
dec
sbb
cmp
test
and
mov
sub
jmp
and
jno
xchg
mov
sti
adc
nop
dec
lcall
nop
add
dec
cmp
leave
jae
and
sub
xchg
cmp
xor
lea
sub
nop
add
inc
xchg
adc
les
mov
jns
mov
push
rolb
imul
adc
adc
test
add
add
adc
adc
add
inc
sbb
and
and
add
or
xchg
xor
xor
add
add
or
sbb
or
or
inc
push
dec
movsb
xor
rorb
add
and
add
mov
je
jmp
mov
add
cs
mov
and
xchg
xor
int3
enter
rcl
div
sbb
js
add
dec
mov
or
mov
and
fdivrs
push
movl
sbb
call
in
popa
jmp
in
in
pop
mov
add
and
cmp
add
or
in
sahf
lods
adc
leave
mov
jecxz
daa
pop
ret
sbb
sbb
dec
fcompl
cmp
pop
sbb
sbb
xchg
xor
pop
shlb
xor
push
int3
adc
enter
inc
dec
arpl
test
nop
pop
or
cmp
pcmpeqw
inc
fs
rorb
dec
or
and
and
cmp
or
pop
sub
push
rorb
and
and
or
add
rorb
adc
add
jne
cmpsl
movsb
sub
dec
addl
xchg
aas
pop
and
add
add
loopne
pusha
in
in
movsl
test
inc
lahf
hlt
xor
push
mov
test
pop
ror
add
cmpsl
or
les
add
sbb
add
pop
add
sbb
and
inc
sbb
jne
mov
inc
ljmp
xor
pusha
cmpsl
push
cmc
out
or
mov
stc
push
int
jne
loop
push
adc
imul
sbb
adc
pushf
cmp
sub
pcmpeqw
inc
push
cmp
add
dec
pop
test
mov
out
dec
movsl
and
test
cwtl
mov
adc
mov
mov
xor
mov
dec
outsl
and
roll
and
xchg
push
dec
and
test
sub
push
mov
in
sub
push
shrl
andl
in
xor
popl
jge
xor
jo
jmp
popf
jb
mov
inc
add
sub
mov
test
pop
adcb
sbb
and
xor
sbb
enter
add
sbb
mov
popf
gs
push
lods
imulb
sbb
cmp
push
pushl
jge
push
push
push
cmpsl
cs
or
andl
mov
jmp
add
jl
pop
lock
xchg
inc
in
and
sbb
xlat
jne
mov
jno
loop
push
mov
dec
les
or
mov
sbb
cmp
in
add
lock
or
push
push
popa
xlat
xchg
cmp
shlb
je
sbb
mov
add
out
push
mov
test
scas
adc
jmp
adc
xchg
push
dec
mov
sub
or
dec
roll
lahf
xor
sbb
cli
push
push
mov
lahf
adc
cmpsb
stos
fs
out
push
dec
mov
lods
adc
pop
jl
and
dec
pop
aam
rolb
inc
push
mov
add
cmpsb
cmp
aaa
orl
add
mov
mov
sbb
and
jle
jne
mov
dec
push
push
and
leave
and
je
sub
mov
clc
add
ret
lock
loop
or
fisttps
or
lea
push
push
fisubl
or
nop
push
in
cmpl
inc
add
push
movl
jne
pop
cld
shll
mov
cmp
ret
add
ljmp
mov
sub
sub
add
outsb
dec
sbb
es
add
xor
out
push
xchg
lock
jo
jge
adc
sbbl
add
dec
pop
lock
push
and
push
mov
add
popf
dec
in
rclb
fimull
sbb
xchg
or
mov
shll
mov
sbb
push
xor
or
addr16
pop
in
je
push
push
mov
dec
outsl
dec
test
sarl
sub
js
or
dec
jmp
in
fbld
popa
mov
mov
lea
imul
insb
testl
in
testl
cmp
dec
jae
mov
adc
call
inc
rcr
lret
push
loope
pop
or
add
add
mov
add
add
mov
js
iret
iret
popa
fsubrs
pusha
mov
push
lea
pop
inc
dec
dec
mov
push
cmpb
push
and
mov
movb
push
cwtl
sub
jmp
lea
mov
jo
inc
aas
xor
cmp
cmp
adc
xchg
cmp
lahf
push
sub
inc
pop
lods
fbstp
or
inc
arpl
cmp
mov
mov
mov
adcl
mov
xchg
add
xchg
aam
push
sbb
jge
jae
push
and
test
jmp
mov
loope
inc
and
add
aad
loope
xor
mov
push
inc
cmovo
push
sub
and
mov
sub
sub
push
aaa
push
inc
sbb
xlat
and
mov
add
addb
adc
insl
fs
inc
dec
and
inc
or
xchg
push
pushf
jo
push
ror
inc
fisubl
mov
movsb
cmpl
sbb
inc
insb
cwtl
sbb
and
mov
mov
adc
in
sbb
jo,pn
xchg
or
scas
xchg
addr16
dec
or
or
sub
fwait
mov
pop
push
test
sub
test
orl
push
sbbl
mov
sub
in
and
sahf
cmp
jb
dec
inc
push
setbe
dec
adc
xchg
mov
inc
adc
dec
adc
pop
and
popf
xor
dec
insb
xor
adc
fs
insb
cmp
cmc
mov
je
adc
xchg
test
lahf
and
xchg
sub
sub
jl
xchg
ja
test
insb
push
sbb
mov
test
jns,pn
inc
dec
inc
adc
mull
add
jo
js
and
std
jno
and
dec
xchg
mov
sbb
add
je
sbb
inc
iret
add
in
push
in
mov
adc
xor
lcall
enter
cli
mov
pop
insb
pop
xchg
test
in
inc
insl
push
jno
adc
or
jb
adc
in
cmp
xor
aam
movsb
dec
sbb
faddl
push
pop
leave
add
xor
pusha
inc
andl
cmp
jmp
test
jecxz
adc
in
cli
dec
ss
push
imul
jbe
movsb
pop
sbb
push
cmp
clc
push
insb
inc
inc
inc
fcmovnb
push
push
fsubl
pusha
push
cmp
sbbb
or
sbb
or
fstpl
pop
pop
sbb
sbb
dec
fsubs
sbb
push
inc
filds
leave
in
sbb
xchg
sub
adc
xor
inc
leave
sbb
pusha
push
sbb
and
xor
cwtl
in
add
push
pop
leave
pop
adc
ds
push
insb
sbb
sbb
push
and
add
stos
adc
cmpsb
cmp
cli
cmp
push
xchg
cs
xor
push
xchg
sub
adc
jo
inc
dec
and
jge
jne
dec
insb
push
xchg
clc
mov
push
dec
mov
or
outsl
rclb
and
call
adc
insb
dec
inc
pop
jecxz
mov
mov
sub
mov
sbb
add
add
sbb
es
or
arpl
repz
cmp
cwtl
test
pop
mov
cs
stos
dec
jmp
rcll
dec
cmp
mov
sub
add
sub
ljmp
adc
testb
lahf
adc
xor
and
add
idiv
jl
mov
push
sbb
js
xchg
xchg
adc
and
push
dec
imul
adc
jecxz
mov
hlt
mov
mov
add
dec
dec
sbb
add
inc
push
mov
adc
adc
push
dec
xchg
adc
fnsave
popf
sbb
add
or
js
dec
bound
sbb
in
cld
or
pop
dec
mov
xchg
lea
dec
xor
punpckldq
push
mov
mov
or
sarb
imul
adc
nop
sub
inc
or
sub
aas
or
adc
jns
ljmp
fdivrl
jmp
ret
adc
in
add
sub
and
cmp
xor
sbb
outsl
push
mov
sub
inc
sub
testb
add
push
cmp
pop
loope
mov
push
cmpsb
xor
xchg
stos
mov
imul
jmp
xchg
push
sub
push
and
adc
ljmp
jnp
add
add
adc
adc
xchg
imul
mov
push
inc
loopne
test
sub
mov
nop
add
inc
lcall
addl
pop
sahf
xor
and
pop
pop
sbb
jmp
or
adc
popf
jo
dec
and
adc
push
sub
ss
insb
leave
xchg
push
jne
or
xor
imul
or
jg
sub
mov
mov
push
lods
in
sbb
sbb
jle
pusha
pop
cmp
dec
push
push
sbb
adc
jnp
dec
notb
subb
and
incl
mov
cmp
js
or
inc
adc
popa
in
mov
push
mov
mov
or
add
shll
sbb
dec
or
adc
adc
mov
sti
mov
cmp
aad
pop
cltd
jp
mov
pusha
add
add
xor
into
xchg
dec
xchg
inc
dec
test
pop
cli
dec
mov
pop
push
dec
pushf
inc
or
andb
jo
and
add
aam
leave
cmp
jno
pop
and
in
mov
jmp
sub
ss
add
sub
sub
and
dec
xor
sub
add
lock
orb
push
cmp
push
lock
sbbl
lock
into
loop
cmp
sbb
je
andl
push
ror
and
lods
or
les
lret
je
dec
jl
pusha
cmp
xlat
cli
cwtl
cmp
fmuls
mov
pusha
pusha
call
fwait
mov
pop
and
mov
add
jecxz
hlt
or
jmp
fstl
cmpsb
fdivrl
adcl
shrl
mov
inc
or
cmpsl
mov
add
adc
push
sub
adc
in
mov
out
pop
sub
adc
gs
add
push
pusha
mov
xchg
push
or
nop
xchg
add
push
sub
pop
push
rorb
pop
or
shll
incb
jle
cmp
jg
sbb
and
dec
aas
sub
addl
jb
inc
push
push
xchg
mov
add
add
add
movsb
mov
and
sbb
pop
sbb
sub
pop
sbb
das
add
enter
insb
fs
xchg
pop
enter
inc
or
jae
insb
sbb
and
xorl
mov
stos
add
xchg
addl
cmp
xorl
popa
rcr
test
pop
insb
xor
movsb
inc
hlt
xor
and
sub
push
or
mov
cmp
inc
stos
pop
push
push
je
leave
nop
push
xchg
xchg
pop
enter
jo
pop
jb
dec
je
fbstp
push
cltd
ja
je
sbb
mov
out
push
test
andb
adc
lods
negl
pop
sub
jmp
stc
mov
xchg
mov
mov
dec
hlt
pop
nop
jl
xchg
xlat
shrl
add
adc
inc
mov
je
push
and
iret
lahf
mov
mov
pop
push
and
dec
add
inc
add
pusha
lret
xchg
test
sub
inc
pop
nop
inc
xor
mov
jge
mov
mov
sub
mov
push
mov
jp
push
dec
imul
push
pop
push
push
mov
xor
cs
xlat
and
lahf
sub
xchg
pop
mov
sbb
pop
addr16
lret
inc
sbb
mov
mov
insl
flds
add
xor
mov
inc
es
pop
mov
or
out
sbbb
sti
aas
add
add
mov
outsb
gs
mov
insb
lea
dec
mov
ljmp
add
jne
test
les
xor
xor
das
add
push
xor
cmp
mov
clc
adc
mov
vmread
mov
add
adc
mov
mov
sub
gs
jl
mov
xor
addl
jne
std
ret
subb
sub
pop
add
inc
adcl
adc
sbb
push
ret
or
add
lret
or
inc
nop
xchg
fs
push
int3
adc
mull
xchg
dec
ja
lahf
or
and
loop
push
dec
or
sub
or
mov
icebp
movsl
mov
mov
rcll
pop
jecxz
xrelease
test
add
shrl
dec
or
adc
push
jns
movsb
pop
adc
jae
inc
pop
push
add
add
dec
lods
mov
sbb
adc
xor
mov
int3
pop
subb
xor
mov
adc
adc
push
adc
xlat
mov
js
pop
aam
push
movsb
cmp
and
jg
mov
mov
push
push
mov
fldt
sub
inc
lds
mov
pop
ret
invd
sub
and
loopne
push
pop
xor
jmp
sub
into
sub
fimull
aam
or
add
push
push
mov
sub
adc
fadds
dec
sbb
inc
and
cmp
lahf
stc
push
push
aas
mov
mov
inc
push
add
andb
jo
xchg
popa
cmc
or
scas
test
sarl
mov
sbb
and
pop
mov
or
inc
dec
je
lock
pop
or
outsl
gs
push
inc
fs
xchg
out
dec
pusha
cmp
xor
xchg
mov
jbe
cmpl
testl
inc
fisttpl
and
pop
pop
add
pop
lds
push
push
loope
in
xchg
popf
mov
xor
popf
je
loope
inc
imul
fdivl
gs
sub
cmpl
jg
push
sbb
cmpsb
incl
cmp
mov
sub
rorb
add
neg
incb
push
push
hlt
int
mov
lock
xor
inc
fistps
or
inc
sbb
pop
dec
test
pop
idivl
ret
push
mov
mov
pop
mov
mov
arpl
daa
sub
add
fcomip
add
or
pop
mov
das
jl
pop
jecxz
add
and
sub
imul
ficomps
dec
mov
cs
sbb
icebp
clc
jo
push
pop
lea
jb
sbb
adc
je
add
pop
mov
clc
push
mov
imul
cmp
jae
dec
or
nop
les
mov
or
loope
mov
jg
rorb
jb
add
shlb
cwtl
pop
jb
dec
jo
pop
repnz
aas
mov
mov
add
add
mov
dec
add
push
pusha
pop
les
and
adcl
push
and
lods
sbb
lcall
leave
daa
imul
pop
dec
movsb
rorb
push
imul
ficoms
jnp
push
imul
adc
out
test
sbb
adc
in
push
mov
dec
rclb
sbb
xchg
add
xchg
or
inc
push
inc
or
adc
add
icebp
sub
jne
cmp
adc
insb
data16
inc
inc
push
push
sbb
xchg
lar
lahf
outsl
cmp
adc
das
in
and
sub
add
pop
xchg
dec
sbb
add
adc
aaa
pusha
jle
popf
jno
pop
adc
xor
jmp
adc
push
sbb
xor
iret
cs
adc
adc
sbb
mov
sti
jnp
or
clc
pop
cmp
jne
add
leave
push
or
idivl
add
enter
pop
repnz
inc
fs
or
adc
movups
into
jb
xor
jmp
mov
push
hlt
cmova
lea
rcl
xor
mov
mov
add
sub
push
jmp
mov
push
es
push
call
addr16
push
jnp
jle
inc
jecxz
sub
push
fcoml
sbb
add
les
adc
add
or
ret
ja
jne
xor
jl
jnp
pushl
push
sbb
pop
sbb
and
cmc
adc
and
xor
sub
inc
pusha
movsl
adc
fs
push
inc
push
incb
mov
mov
mov
lcall
push
js
cld
adc
inc
in
xor
mov
icebp
pop
enter
mov
mov
pop
adc
inc
ljmp
lret
mov
sub
or
outsb
loope
fadds
xchg
or
or
xor
jb
xor
stos
add
mov
js
cmp
jae
movsb
push
sbb
cmp
fidivs
lea
or
pop
gs
mov
test
clc
mov
test
jo
fld
icebp
jne
pop
push
or
push
xchg
das
xor
daa
cltd
mov
inc
xchg
add
mov
push
call
adc
outsl
aad
cmp
and
or
subb
and
inc
push
add
jbe
iret
clc
ficompl
adcb
inc
mov
push
add
dec
jbe
xchg
jnp
cltd
rol
test
xchg
add
sub
adc
cmp
pop
jp
fbstp
mov
jb
dec
sbb
inc
mov
push
lea
add
jp
ljmp
add
xorl
adc
ss
popf
dec
cli
sub
dec
dec
cmp
sbb
xor
test
int3
nop
jae
clc
jge
movzbl
xchg
stc
pop
push
sub
fistps
das
ljmp
lods
in
pop
or
pop
jno
inc
mov
sbb
push
dec
push
sub
sbb
ja
aaa
shr
outsl
jbe
test
je
sub
xchg
adcb
mov
xor
dec
int
iret
push
mov
ret
jbe
stos
rcrl
inc
inc
aas
je
xorb
ret
clc
mov
addb
jbe
scas
ds
jbe
sub
and
push
shr
insb
dec
loopne
xor
lods
addr16
pop
mov
push
and
or
call
xor
dec
pop
mov
pushf
cmp
rcr
and
clc
fsubs
adc
aaa
mov
xchg
or
pop
push
sub
push
cmp
gs
sbb
aas
mov
test
inc
int3
add
adc
cmp
sbb
sbb
shlb
and
pop
add
jbe
pop
hlt
jle
or
add
inc
jle
sbb
add
adc
mov
and
sbb
inc
add
lcall
inc
pushl
sub
js
add
sbb
pop
mov
or
add
cmp
ret
sahf
sti
fnstsw
xor
add
push
push
mov
cmpsb
cmovae
pop
mov
xlat
jns
movsl
or
pop
lock
inc
and
inc
cmp
pop
adcb
mov
pop
or
inc
dec
mov
addl
and
aaa
add
push
mov
outsb
sub
sub
xor
mov
dec
mov
loopne
pushf
mov
imul
xor
pop
lea
or
inc
out
pop
fwait
mov
sarb
je
add
pusha
push
js
jl
and
test
orb
xchg
push
in
xchg
push
cmpl
sub
push
and
sbb
mov
sahf
pop
cs
or
or
jnp
inc
inc
add
ds
adc
add
push
adc
inc
cmpsb
pop
xor
enter
dec
mov
xchg
sbb
pop
inc
dec
or
mov
cwtl
sub
dec
cmp
pushf
out
or
inc
divl
or
or
jl
push
test
sbb
js
int
stos
xchg
inc
rorb
xchg
mov
fs
ret
xchg
ss
mov
inc
pop
add
cs
push
or
imul
insl
add
push
xor
adc
sub
xchg
add
les
aad
or
add
arpl
adc
cmp
jbe
xchg
imul
or
fisubrs
add
xchg
add
fdivrl
push
roll
add
outsl
in
sar
nop
xor
cmp
jne
cmp
pop
setae
cmp
lea
inc
loopne
fwait
jmp
aad
and
mov
adc
and
adc
loope
xchg
pusha
push
or
push
sbb
lock
das
and
mov
fwait
push
push
fwait
sub
inc
add
outsb
xor
xor
inc
ss
xor
mov
lods
cmp
push
es
mov
lea
push
lods
sub
and
aad
jb
adc
pop
jl
push
or
pop
call
inc
shrb
and
cmp
sbb
repnz
push
es
jbe
dec
sub
xorb
paddusw
mov
jno
push
pop
and
popa
adc
lahf
pop
test
dec
xor
mov
xchg
push
adcb
jo
xchg
arpl
cmp
add
adc
xlat
and
movsl
or
or
pusha
cmp
cmp
inc
fs
insb
lahf
push
xor
rorb
jg
call
cmp
cmp
jmp
inc
pusha
idivl
cmp
pop
add
test
jns
seto
adc
jae
notl
mov
add
mov
mov
outsb
jp
addb
and
cmp
pop
fisubs
jnp
dec
lcall
out
sarb
add
ret
adc
dec
jne
inc
mov
cmp
inc
and
jl
jb
xchg
pop
inc
cmp
sbb
mov
xor
cmpb
inc
push
xchg
sar
gs
xor
sub
sbb
pushf
test
repnz
dec
rcrl
adc
hlt
and
sbb
add
add
or
movsl
mov
sbb
xchg
addb
jo
rcrl
jo
repnz
mov
cmove
add
scas
and
outsl
push
insb
xor
sub
je
push
jne
cltd
jmp
dec
push
rolb
xchg
aam
adc
insb
jmp
xor
jo
fs
cmp
jg
mov
pusha
mov
scas
push
add
mov
pop
mov
sub
insb
cmpl
push
rcrb
mov
cmpsl
sbb
push
cmp
daa
xlat
insb
test
push
sub
inc
cmp
push
xchg
push
and
mov
daa
loope
cmp
in
xor
jecxz
mov
or
xchg
inc
sarb
sahf
adc
int3
sub
int3
pop
push
jae
pop
add
dec
inc
or
mov
xorl
inc
or
pop
daa
ljmp
daa
push
enter
mov
sub
xor
sbb
xchg
fists
mov
icebp
add
addl
cmp
cmpsl
sbb
cmp
or
cwtl
xor
mov
sbb
pop
dec
cwtl
mov
rorb
inc
sahf
jl
stc
decl
inc
push
push
sub
cmp
out
jle
inc
mov
and
test
testb
hlt
jo
cmp
push
aaa
stc
mov
test
scas
adc
cmovbe
mov
mov
sbb
inc
sbb
sbb
je
mov
call
add
xchg
or
test
mov
minps
sbbb
sbb
mov
nop
jle
jno
mov
pop
addl
or
or
out
jl
dec
mov
mov
mov
mov
rep
push
je
jo
and
or
pusha
je
pop
add
push
es
or
test
test
ss
mov
push
cs
shl
push
inc
test
in
push
sbb
xor
mov
xchg
out
push
mov
add
mov
enter
add
lock
ljmp
jno
inc
xor
mov
fdivl
jle
or
jbe
xor
out
pop
xchg
adcl
jo
popa
pop
add
gs
je
inc
rorl
rol
or
ds
xor
rcll
and
test
pop
mov
popf
sbb
push
test
scas
sbb
and
lea
leave
pop
mov
fwait
bound
and
pop
and
mov
pusha
adc
ljmp
adc
pop
and
push
nop
and
mov
push
and
push
and
dec
adc
and
inc
inc
pop
dec
mov
jae
lea
sbb
push
inc
inc
add
sub
push
sbb
mov
enter
jle
add
sarl
and
out
push
mov
pop
cmp
lret
cmp
lods
dec
pop
and
inc
mov
inc
xor
inc
daa
stos
or
insl
xchg
push
stos
and
jge
cmpl
mov
fists
mov
sub
scas
and
loope
outsl
mov
addl
push
push
pop
pop
and
hlt
lods
mov
or
cmpsl
pop
xor
loope
sbb
pop
adc
sub
sbb
popa
add
data16
inc
clc
das
sub
ret
enter
xorl
test
or
and
jno
stos
add
sub
sub
loopne
adc
jne
addr16
push
enter
push
push
nop
inc
dec
push
dec
push
sub
test
lahf
inc
test
nop
sbb
inc
or
push
insb
dec
insb
iret
and
xor
stos
lret
pop
leave
xor
pop
push
sub
and
push
push
inc
pop
and
dec
rcr
andl
pop
sub
lcall
icebp
mov
pop
lea
in
pop
xchg
mov
xor
mov
aas
or
sub
inc
sbb
lcall
call
push
lret
inc
dec
xor
dec
and
and
xchg
inc
mov
xchg
sub
adc
lods
xor
sti
add
in
es
mov
and
xor
push
test
cmc
lahf
shr
jnp
pop
lods
cwtl
pusha
insl
add
pop
orb
sbb
and
pushf
pop
sar
pushf
jbe
jbe
lock
lahf
call
enter
lods
xor
push
adc
push
loopne
xor
push
lea
addl
jns
lds
or
inc
jecxz
sub
jecxz
popa
or
mov
clc
or
fldenv
adc
pop
xchg
outsb
leave
pop
cmp
cmp
es
mov
cmpsl
aad
clc
shll
pop
xlat
int
cs
mov
or
add
loope
adc
adc
adc
add
mov
mov
pop
sbb
out
dec
data16
add
mov
fwait
sbb
rolb
or
mov
inc
stc
inc
push
add
or
movaps
iret
or
xor
and
js
adc
pop
test
sbb
icebp
push
scas
adc
xchg
rorb
add
dec
inc
push
push
fisubl
push
inc
jmp
pop
andl
je
xor
pop
inc
mov
outsb
fadds
nop
add
test
mov
inc
mov
int3
and
hlt
mov
dec
sbb
xor
mov
je
and
mov
or
adc
movsl
mov
sbb
mov
add
icebp
sahf
or
test
mov
add
push
push
mov
cltd
and
jae
xchg
sbb
add
and
jge
add
subb
adc
or
pop
test
and
leave
cwtl
pop
push
or
add
adcl
push
mov
push
mov
xorb
sbb
sbb
call
push
dec
or
pop
fwait
and
and
jbe
out
dec
add
stos
dec
sti
lea
xor
push
mov
cs
sbb
or
pop
sbb
pushf
push
sbb
stc
push
sbb
cmp
pop
lret
push
and
mov
stos
sbb
cmpsb
or
xchg
adc
int
loopne
push
xor
fistpl
enter
jecxz
inc
dec
cmp
inc
adc
sbb
inc
xchg
shl
cmp
sbb
push
cmp
lods
add
sbb
sub
sti
mov
inc
and
pop
dec
xor
addb
fmull
mov
mulb
leave
sbb
inc
or
push
cltd
outsl
push
sub
inc
insb
sbbb
dec
insb
pop
or
ja
inc
sub
ret
jge
ret
inc
je
in
cmp
daa
test
es
je
mov
and
adc
bound
mov
mov
ljmp
dec
sub
or
mov
add
add
sbb
fcoms
pusha
or
fldenv
in
dec
push
orb
add
mov
push
jmp
outsb
sbb
call
cmp
call
and
test
xchg
or
cmc
push
push
push
aam
dec
aaa
xchg
or
pop
jne
or
lea
dec
jmp
xor
sarl
push
mov
jnp
arpl
sbb
rcll
fs
pop
and
push
add
push
inc
pop
push
pop
push
add
add
mov
mov
pop
test
dec
lds
dec
pop
xchg
or
jno
lea
add
pop
and
xor
inc
cmpsb
mov
jb
fdivl
jecxz
add
xor
je
inc
xchg
jmp
stc
pushf
not
sbb
je
and
imul
faddl
xchg
leave
or
add
pop
outsb
pop
mov
add
mov
adc
aad
mov
dec
push
xchg
sti
aas
subl
outsl
sbb
adc
xorl
jge
pop
ljmp
add
push
push
cmp
or
xor
mov
adc
dec
mov
adc
push
cmp
pushf
pop
push
or
add
in
test
test
shll
adc
or
repnz
push
push
loopne
mov
notl
or
aaa
dec
in
sarl
or
mov
push
hlt
push
aas
dec
movsb
loop
mov
sub
xor
push
cmp
adc
test
xchg
enter
xor
jns
subl
lret
xor
jmp
test
nop
stos
dec
or
jns
xchg
sub
cmp
sub
sub
fmull
test
mov
or
or
adc
dec
adc
dec
ret
jno
inc
adc
push
lods
leave
ret
adc
push
push
mov
xor
in
lret
pop
push
out
leave
insl
push
cmpsb
aad
adc
and
cmp
pusha
lds
and
in
push
cltd
dec
cld
xor
call
repz
mov
gs
sbb
sub
fdiv
xor
sbb
nop
rcrb
fs
outsb
imul
inc
scas
test
add
nop
inc
sub
sbb
sub
push
add
in
xchg
pusha
mov
mov
dec
and
mov
sahf
pop
and
mov
and
mov
sahf
or
aam
in
add
sub
or
adc
inc
sahf
sub
sub
dec
pop
leave
add
subl
xchg
aas
push
cs
and
mov
pop
sbb
pusha
pop
and
dec
pop
xchg
and
ret
and
fs
push
and
jmp
cmp
xor
push
fsubrs
aam
and
test
rcrb
je
xor
adc
sbb
dec
inc
shrl
jl
sub
and
xor
in
cmpsb
pop
dec
incl
ret
lock
fisttpll
outsl
dec
or
jl
sub
dec
out
jne
popf
mov
sti
or
dec
and
jmp
and
xor
sbb
sbb
enter
cmp
adc
add
mov
push
dec
negb
test
dec
cmp
or
sub
add
and
mov
jno
sbb
test
mov
sbb
pop
repz
cmp
push
xchg
les
in
test
xor
pop
xor
xlat
pop
jno
out
sub
test
cmpsl
movsl
or
sub
je
adc
dec
cmp
cmp
xor
mov
lret
test
rolb
in
jns
clc
cmp
iret
leave
and
hlt
inc
cld
inc
scas
repnz
and
sbb
bound
out
and
or
inc
jnp
jb
mov
sbb
adc
arpl
orb
inc
popl
and
sbb
push
dec
imul
mov
sbb
dec
and
push
dec
push
xchg
adc
hlt
jno
mov
stos
push
js
xlat
and
adc
xchg
inc
loopne
add
inc
push
rolb
in
inc
mov
inc
movsb
inc
xchg
cwtl
add
inc
stos
adc
ficoml
dec
aas
mov
mov
and
add
adc
in
cmp
and
adc
sbb
and
adc
sbb
jo
test
movsl
add
push
lret
sub
pop
fiadds
cmc
mov
loopne
mov
inc
dec
loop
and
dec
push
lea
add
clc
mov
push
icebp
insb
or
or
cltd
xor
push
xchg
xchg
jnp
sbb
xchg
add
push
push
jne
imul
push
inc
jl
jns
loope
pusha
inc
inc
add
cltd
add
bound
enter
loopne
add
adc
jns
aaa
lds
popa
mov
jge
jmp
mov
fwait
adc
inc
push
inc
xor
cmp
ret
insb
inc
push
jb
imul
push
shll
jb
insb
jnp
subb
inc
add
cmp
push
aam
pop
or
rcll
loop
adc
push
sub
mov
arpl
sub
cld
lods
and
jb
cs
dec
pop
mov
mov
fs
push
mov
sbb
push
xor
nop
dec
sbbb
xchg
add
and
push
test
dec
and
lods
pop
sbb
mov
or
add
ret
sub
in
fsubl
mov
mov
add
or
add
sub
mov
push
lock
inc
cld
push
pusha
sbb
xor
or
pop
sub
and
cmp
dec
and
and
orb
dec
jns
jne
dec
dec
push
call
dec
dec
test
push
sbb
inc
inc
dec
aad
fdivl
rorb
xlat
jo
fdivr
mov
and
sbb
pop
pop
lock
dec
jl
ss
rorl
push
imul
pop
ss
push
bound
cmp
loop
and
lods
rcrl
test
push
mov
push
xor
leave
dec
sub
dec
jne
push
or
lods
jno
cmp
push
movsb
mov
add
cmp
imul
push
cli
and
shlb
dec
push
test
ret
inc
nop
sub
pop
xchg
or
or
ret
push
repnz
cld
enter
mov
dec
pavgb
xchg
push
mov
hlt
add
fsub
pop
adc
cmp
push
subb
sbb
and
cltd
cmp
addl
cmp
push
sbb
fdivl
pop
xor
cmp
dec
xchg
xor
push
pop
sti
pop
push
pop
mov
and
pop
mov
aaa
add
pop
inc
xor
push
cmp
cs
aam
lahf
arpl
daa
lods
nop
arpl
lret
ja
pop
mov
ret
mov
or
jmp
sbb
xchg
inc
push
cwtl
ficoml
std
rcr
and
mov
push
ret
call
sub
sbb
mov
std
pop
imul
and
adc
xor
mov
or
lret
add
mov
add
dec
iret
shll
sbb
push
push
adc
stc
cltd
sbb
pop
push
jp
call
xchg
pop
push
pop
xor
jmp
pop
jo
sti
js
jae
push
mov
xchg
add
add
out
xor
push
jg
and
nop
imul
add
data16
jl
movsb
cltd
dec
lcall
ret
stos
jno
int3
aad
rolb
movsb
dec
cmp
leave
jae
xor
inc
push
leave
jae
add
popa
xchg
cmp
aam
dec
es
je
xchg
bound
loope
int3
pop
pop
cmp
daa
push
scas
clc
push
shrb
jl
gs
rclb
push
sbb
sbb
dec
and
and
dec
bound
push
push
inc
loopne
and
lods
in
xchg
or
hlt
push
cmp
jae
and
xor
lcall
movsb
sbb
mov
jge
hlt
push
pop
cmp
out
ja
sahf
imul
push
pop
inc
jne
mov
sbb
pop
or
fs
mov
mov
inc
pop
sbb
inc
push
cmovge
sbb
jge
push
lcall
mov
jo
push
or
in
popf
fistpl
or
add
icebp
or
cmpb
roll
add
pusha
adc
jle
jmp
push
jmp
jg
cmp
adc
xchg
mov
jo
push
insl
call
inc
movsb
jg
push
xor
dec
pop
adc
mov
push
daa
and
stc
aaa
pop
sbb
incl
xchg
or
sub
dec
xchg
or
je
jg
push
mov
adc
shl
ret
push
add
push
sub
pop
xchg
add
push
mov
add
sbb
and
addl
or
nop
push
jle
inc
lock
adc
pop
jne
std
sbb
xorb
out
mov
xor
and
jbe
rolb
std
mov
adc
xchg
add
aaa
les
cmp
xlat
bound
adc
out
and
xchg
push
adc
js
and
cld
or
or
pop
xchg
xor
fidivrl
std
xchg
inc
movsb
aam
nop
shl
cmp
test
inc
aaa
test
jbe
sbb
arpl
mov
aam
es
les
add
aaa
pop
sub
aad
adc
or
mov
xchg
mov
sub
popa
cwtl
andl
add
cmp
mov
push
js
mov
rcrb
and
add
xor
xor
or
stos
mov
das
xchg
push
mov
mov
xchg
stos
ja
and
xor
inc
cmp
imul
cltd
cmpsb
push
add
and
jo
and
inc
inc
sbb
adc
lahf
ficoml
movsl
push
inc
sub
pop
adc
cmp
add
movsb
pop
adc
imul
in
cmp
push
lcall
jo
pushf
xchg
cs
add
mov
sub
popa
and
sahf
inc
inc
xchg
adc
mov
sbb
pop
and
loope
sbb
or
sbb
pushf
or
inc
cmp
imul
iret
xchg
cmp
push
fs
jle
cmp
jae
mov
xchg
or
xor
sarl
je
inc
cmp
jl
and
pushf
outsl
popa
pop
pop
jnp
sar
xchg
xor
inc
cmp
dec
or
xlat
mov
and
enter
mov
pop
or
icebp
add
icebp
pushf
add
sarb
pop
adc
cmp
fidivrs
aaa
xchg
mov
pop
add
sbbl
test
mov
add
sahf
add
fcompl
dec
sti
add
sti
lahf
ss
sub
ja
push
sub
cmp
jb
mov
add
fisttps
loopne
add
jg
mov
xchg
fmuls
sbb
stos
pop
out
pop
dec
jne
push
loope
mov
push
popl
mov
fdivs
inc
or
lcall
test
jle
js
xor
pop
push
mov
leave
pop
popa
iret
jnp
fmuls
push
test
ljmp
cmp
jae
cmp
xor
lea
loopne
xor
xor
push
push
nop
add
cmpsb
dec
lcall
cmpsb
xor
add
jo
add
fisubl
imulb
or
or
sbb
pop
add
or
sub
or
adc
lcall
add
sub
add
into
and
adc
add
add
in
push
mov
pusha
into
dec
push
and
popa
sub
mov
or
mov
adc
adc
pop
adc
sub
pop
cmp
mov
mov
jno
add
mov
fwait
pop
nop
xchg
incl
mov
xor
fadds
loopne
mov
fisubl
cmp
xlat
sub
push
cs
sbb
insb
mov
sub
pop
push
or
mov
ljmp
add
inc
xchg
inc
xor
pop
hlt
ret
test
xor
push
add
fadds
lahf
push
lea
sbb
lods
lcall
add
test
cmpsl
test
icebp
mov
popa
mov
lods
cld
adc
mov
lret
mov
jbe
les
mov
sbb
push
push
xchg
add
sub
lea
sub
cltd
xchg
cltd
lea
push
mov
insl
add
add
in
lea
addb
jo
jp
je
add
cli
in
sbb
fisttpl
xchg
enter
movsb
cltd
aas
in
in
inc
enter
push
adcb
les
cmpsb
sahf
ss
mov
or
add
inc
cmp
test
sbb
test
xchg
popa
add
mov
adc
push
test
adcl
clc
add
or
popa
gs
xor
jmp
add
jne
push
cwtl
adc
or
rorb
pop
insb
aad
insb
popa
or
or
inc
out
js
jp
add
mov
inc
ljmp
pop
mov
rclb
shlb
mov
push
or
fwait
ret
addb
popa
pop
dec
aas
add
add
rcl
mov
jo
test
jne
push
mov
lret
ss
or
push
pop
add
mov
shl
adc
lods
out
pushl
or
or
je
push
je
push
in
arpl
loopne,pn
cli
in
shll
mov
mov
add
loopne
rclb
loopne
add
movsb
push
jae
insb
add
imul
sbb
cmp
cli
les
xor
test
and
ret
cmp
mov
push
daa
add
mov
inc
shlb
inc
sbb
shl
jmp
leave
hlt
pop
dec
test
ret
add
lds
in
push
adc
lret
aam
xor
movsb
mov
lock
xor
dec
rorb
enter
into
xchg
add
jns
mov
test
nop
adc
pop
pushf
std
inc
scas
jecxz
ljmp
and
mov
sub
push
push
or
or
orl
mov
pop
push
cmp
jns
shll
rorb
clc
xchg
in
add
inc
adc
loope
inc
xchg
jge
jmp
orl
cmp
dec
xchg
jne
inc
fsubrl
es
xor
repz
ret
xor
fldcw
xchg
pop
int3
sbb
loope
mov
add
icebp
mov
cmp
stos
out
into
inc
lret
jne
es
mov
xor
mov
or
dec
movsb
sbb
mov
mov
gs
mov
mov
int3
push
movsb
call
aaa
push
sbb
mov
movsb
std
mov
and
jecxz
mov
add
enter
pop
addl
adc
push
inc
lods
loopne
pushf
xor
jne
jl
aam
pop
xor
les
and
enter
fisttpl
xor
add
inc
push
jno
aad
and
or
inc
call
test
pop
add
aaa
xchg
xchg
push
push
cmpsb
sbb
sbb
mov
sub
pop
clc
push
movsb
mov
and
adc
and
xor
cltd
dec
mov
faddl
adc
int3
mov
or
xchg
add
aaa
jo
add
into
mov
cmpsl
mov
xor
pop
cmp
and
sarb
mov
jmp
rcrb
pop
inc
sbb
sahf
ret
outsb
sbb
pop
dec
outsl
lahf
adc
out
dec
outsl
in
fiaddl
mov
jmp
inc
mov
lea
push
mov
xor
lds
inc
adc
mov
movsb
xchg
cmp
cmp
push
stos
rolb
pop
add
bound
inc
dec
xchg
inc
and
fcoms
bnd
pop
and
ss
repz
popf
mov
test
and
xchg
enter
fimuls
pop
xchg
cltd
out
add
sbb
inc
fs
out
imul
mov
loope
cmp
jae
xchg
fimull
jge
jge
dec
decl
sub
rol
stc
or
mov
xchg
lds
add
movsl
xchg
lods
mulb
push
xor
mov
in
xchg
fcomp
aam
cmp
add
jge
or
or
xchg
mov
jne
sub
adc
add
sbb
and
push
sarb
jno,pt
or
cs
stc
mov
pushf
cltd
pop
jnp
push
mov
mov
adc
jno
xor
mov
mov
mov
xchg
add
push
dec
fwait
dec
add
js
xor
aam
out
faddl
jne
movsl
inc
lret
mov
add
xchg
sahf
sbb
xchg
movsl
int
xchg
outsb
pusha
pop
int
cli
inc
ljmp
je
lahf
add
lock
jne
xor
xchg
movsl
leave
pop
arpl
mov
add
or
inc
roll
out
xchg
adc
dec
cmp
push
fdivrl
jnp
pop
movl
xchg
shrl
stos
ret
jecxz
sbb
mov
add
push
cmp
jo
inc
cmp
sbb
iret
adc
push
inc
cmp
mov
mov
pop
sub
add
add
pop
push
and
mov
aas
xor
test
xchg
movl
cwtl
or
sbb
jg
mov
inc
pop
or
cmpsb
inc
mov
push
jmp
mov
call
arpl
add
sbb
xor
adc
adc
mov
popa
xchg
in
push
enter
push
outsb
inc
lret
push
enter
ljmp
xchg
or
test
dec
mov
sub
sbb
pop
add
adc
add
fadds
imul
out
push
sbb
mov
pusha
adc
add
push
push
add
inc
call
adc
cmp
call
ds
leave
sub
add
stc
mov
push
add
ret
xchg
insb
pushf
and
imul
cltd
mov
sub
sub
ja
cmpb
out
inc
pop
test
jne
cmp
jne
int3
adc
inc
push
sbb
pop
loope
xor
cmpb
les
push
push
push
lahf
iret
push
push
push
push
popl
push
out
int3
scas
mov
cmp
or
push
push
stos
movsb
and
imul
imul
test
push
int3
mov
dec
les
xlat
and
das
add
ret
stos
sub
cs
push
xchg
xor
mov
inc
ja
test
jo
js
pop
pop
ret
stos
sub
and
test
inc
rcrb
test
fistpl
mov
lahf
inc
jl
mov
lea
and
xchg
push
push
gs
cmp
xor
pop
lods
or
adc
sub
push
adc
sbb
mov
fwait
push
inc
or
fs
cmp
adc
push
adc
mov
lods
das
jo
in
xchg
jle
or
xor
dec
push
sarb
int
pop
fs
sbb
cmpl
xchg
jg
mov
sub
push
sub
push
push
push
mov
std
sbb
and
push
inc
add
int3
dec
sbb
inc
adc
dec
sbb
add
push
or
pop
xchg
push
add
loopne
push
ja
es
adc
test
shr
dec
push
fsts
push
cmp
ja
divl
jmp
cmp
inc
add
inc
sbb
out
pop
shrb
movsb
push
jl
sbb
jb
hlt
aaa
or
or
inc
dec
add
add
hlt
adc
xor
mov
adc
or
dec
cmp
mov
call
fadds
fistps
sub
add
xchg
xchg
push
cmp
push
push
adc
pop
addr16
or
push
shlb
lock
or
add
stos
jb
cmp
dec
rcrb
cmp
lahf
jmp
inc
jne
sti
mov
sub
clc
jo
and
jnp
sbb
push
inc
adc
outsb
rol
dec
ret
mov
jbe
cmp
and
add
shrb
cmpsl
jnp
push
xlat
adc
cmp
mov
mov
mov
cmp
jne
mov
mov
cmp
jmp
cmpsb
add
test
push
sub
adc
cmp
shrb
sbb
aad
aad
or
sbb
mov
push
idivb
inc
pushf
adc
aaa
jo
pop
or
sub
pop
sub
das
dec
cs
test
pop
push
sub
add
push
icebp
mov
jae
sbb
outsl
ret
xorl
dec
push
enter
imul
push
or
mov
cmpl
add
push
pop
arpl
pusha
sub
push
rorb
add
or
and
pop
inc
jecxz
cmp
adc
aas
sahf
mov
stos
rolb
push
pop
movsb
cmpsl
insl
or
or
addr16
xchg
ss
mov
divl
fimuls
mov
or
add
mov
xchg
shl
inc
pop
lock
adc
out
adc
adc
jle
sbb
cmp
pop
or
mov
mov
les
sbb
add
and
sub
sarb
repnz
mov
xor
les
fs
lret
mov
sbb
or
or
cld
pop
test
jns
and
sbb
mov
mov
push
xor
pop
jmp
or
push
jo
pusha
jmp
and
mov
stos
lock
push
and
mov
leave
push
inc
sub
aam
or
into
jle
sbb
or
cmp
and
jge
shll
test
push
push
pop
jne
sbb
imul
daa
xor
push
sub
incl
call
or
pop
shll
xchg
inc
sbb
ljmp
cmpb
sbb
es
add
dec
pop
dec
aas
and
xlat
and
inc
inc
xor
pop
xor
ret
xlat
xor
sbb
xorl
xor
push
xor
movsb
pusha
or
sub
nop
add
and
add
xor
lds
push
or
pop
push
dec
mov
addl
cmp
mov
pop
or
stos
cmp
mov
pop
clc
cmc
push
add
xorl
sbb
xor
adc
adc
xchg
insb
lcall
sub
mov
ja
mov
mov
lods
in
sbbl
lds
cmpsb
pop
add
sbb
add
in
sub
mov
and
push
and
decl
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
sub
setl
movzbl
push
imull
rclb
test
push
push
lods
mov
in
xchg
jb
xadd
shlb
mov
test
xchg
mov
lds
add
nop
loopne
in
add
leave
mov
push
push
cmovbe
shr
add
jmp
mov
mov
cmp
xchg
jg
jle
push
add
mov
inc
jbe
in
sbb
int
test
mov
or
fs
push
inc
pop
sbb
push
inc
pop
push
and
and
lret
mov
lcall
fwait
sbb
fbstp
sub
pop
popf
and
push
push
ljmp
pushf
aas
loope
push
push
movsb
push
push
jecxz
mov
sub
test
mov
inc
pop
or
sub
push
mov
sbb
rcrb
lods
sub
push
sti
cmp
rclb
pop
adc
dec
xchg
mov
and
fcompl
xchg
mov
imul
push
cld
xor
testl
loope
sub
add
adcb
jl
mov
jl
loop
and
push
ss
lods
aam
cmp
push
test
pop
inc
adc
mov
xor
mov
pop
sbb
push
dec
push
mov
js
adc
mov
lods
imul
mov
xor
dec
add
xor
push
mov
flds
sbb
outsl
dec
or
push
sbb
cmp
xor
adc
inc
sub
into
pop
pop
mov
xlat
fildl
add
iret
outsb
pop
xor
add
dec
daa
inc
fwait
sub
push
jge
mov
loop
sbb
aam
xchg
les
roll
sub
mov
pushf
push
mov
aam
sbb
mov
sahf
cmp
push
int
testl
add
dec
and
inc
cli
sub
inc
loop
and
jle
add
xor
mov
mov
mov
jne
add
push
mov
ret
ret
add
pushf
es
jmp
mov
inc
jo
sbb
inc
jecxz
push
repnz
sahf
mov
add
xor
cwtl
loopne
adc
xor
cmp
mov
gs
bound
dec
or
in
or
or
les
inc
in
push
jne
movsb
repz
cmpb
jne
sbb
or
sarb
mov
lcall
pop
push
insl
pop
inc
xor
sbb
daa
repz
xchg
push
je
cs
push
test
imul
or
sub
sbb
and
inc
aam
or
jnp
add
pop
sub
movsl
gs
jbe
out
or
test
or
sbb
outsb
push
lret
push
iret
sbb
add
or
sub
test
xor
xchg
movsl
or
jle
dec
jae
sub
call
fldcw
dec
xor
inc
and
imul
bound
sub
add
and
pop
pop
dec
in
jp
movsl
sbb
add
lret
hlt
push
fwait
sub
mov
mov
ljmp
nop
mov
mov
pop
fadds
stos
inc
add
dec
adc
aad
pop
insb
or
popa
adc
and
pop
scas
shlb
aam
pusha
lock
pop
and
cmp
stc
sbbl
adc
sbb
nop
sbb
rolb
nop
dec
pop
cmp
mov
ss
sub
cmc
xor
cmpsb
pop
push
mov
dec
sub
jne
jne
pop
ljmp
pop
out
jmp
nop
adc
repz
leave
rcrl
pop
pop
mov
mov
shrb
cltd
mov
aas
push
add
addr16
mov
outsl
sub
in
push
jo
xchg
adc
inc
sbb
or
sbb
addb
or
roll
mov
xchg
add
add
adc
and
imull
adc
or
lcall
jl
fmuls
arpl
rcrb
pop
lods
inc
inc
loop
iret
lea
sbb
pop
daa
add
fldcw
or
mov
and
sar
or
into
fs
mov
add
je
jl
iret
or
sub
sub
enter
lock
sbb
mov
push
mov
push
test
or
jo
out
dec
xor
pusha
stc
push
xchg
mov
push
cmp
xlat
aaa
and
or
cmpsl
test
test
sub
push
mov
pop
sub
daa
xchg
cmp
cmp
adc
xor
and
jno
push
cmpsb
sub
mov
sbb
inc
inc
dec
mov
rclb
dec
or
or
paddw
sbbb
fsubl
inc
cmp
jb
adc
add
dec
push
dec
dec
push
push
push
sub
sub
dec
adc
add
test
fisubrl
push
sahf
ss
jmp
fwait
or
cmp
repnz
repnz
adc
nop
adc
add
movsl
add
xchg
outsb
add
mov
xor
into
sarb
bound
sub
push
cmp
sbb
or
mov
nop
testl
push
mov
dec
dec
push
inc
es
idivb
push
sub
sahf
addr16
imul
dec
inc
push
sbb
push
or
dec
inc
jo
subl
in
lods
mov
and
mov
cmp
dec
dec
outsl
enter
xor
adc
cwtl
push
cmp
pop
cmp
pop
xor
push
andl
test
or
push
jecxz
push
pop
shll
fmuls
outsl
jg
sbb
push
push
lret
cmp
repnz
adc
mov
jp
pushl
add
mov
out
xchg
or
mov
lds
and
insb
jo
add
add
adc
sub
pop
adc
push
jg
and
test
cmpsl
push
lret
or
push
cli
fucomip
and
shlb
push
add
ss
inc
das
incl
movsb
pop
out
inc
inc
or
xchg
add
push
insl
or
and
and
iret
adc
dec
sub
addr16
xchg
cmp
inc
pop
sub
in
mov
xor
dec
cmpsl
rcr
push
mov
adc
push
add
nop
inc
ds
dec
ret
sbb
sub
xor
in
adc
addl
mov
das
aaa
cmp
sub
add
ret
pop
pop
rclb
pop
adc
dec
jmp
pop
add
pop
xlat
subb
xchg
fdivr
xchg
xor
adc
push
jmp
lahf
int
test
push
cmpsb
adc
pop
pop
inc
fldl
sahf
arpl
leave
inc
xchg
xchg
push
sub
push
mov
das
dec
add
and
sbb
mov
ss
jle
mov
add
jne
sub
adc
add
out
lret
lahf
mov
or
popa
add
aaa
sarb
sarl
xchg
daa
mov
movb
push
imull
divl
out
sub
adc
in
push
xchg
sahf
mov
push
in
sub
sti
push
xchg
push
sbbl
test
je
cmpb
dec
push
std
stos
and
mov
mov
push
js
cmp
push
push
rol
shrb
sub
notb
cmp
inc
repz
fsubrs
es
pop
std
aam
ss
cli
push
sub
cmp
int3
pop
pop
xor
repz
lcall
add
arpl
inc
sbb
xor
inc
cmp
mov
pop
je
mov
out
add
or
add
push
xchg
rol
push
cs
sbb
ret
jl
sbb
xchg
nop
or
push
out
sbb
push
adc
push
out
inc
loopne
xor
jo
ret
div
sub
jne
or
sbb
dec
mov
or
adc
test
shlb
lcall
pop
or
and
inc
cwtl
cs
in
negb
mov
fstl
sub
xor
sbb
shrb
imul
or
push
adc
mov
jl
xor
pop
and
add
sub
push
mov
and
adc
jl
xor
and
inc
sahf
repnz
pop
loopne
mov
test
inc
test
and
test
clc
sahf
into
int
add
ret
or
mov
test
sbb
stos
out
jl
and
jg
jecxz
xor
or
in
add
mov
adc
adc
mov
mov
nop
shll
enter
inc
cmp
jl
push
pop
inc
mov
sahf
cwtl
jne
lods
inc
push
jp
or
mov
and
xor
pop
add
gs
les
push
inc
enter
and
fs
icebp
jnp
mov
jae
cmp
jge
push
cmp
add
movsl
mov
loop
push
jb
jb
adc
pop
push
mov
jnp
sub
xor
mov
push
shrl
inc
cwtl
mov
inc
call
xor
or
out
and
bound
xchg
mov
pusha
mov
and
lea
xchg
mov
into
push
adc
add
mov
jg
dec
invd
pop
jle
fildl
outsl
clc
inc
dec
test
fadds
jno
fldenv
mov
mov
add
inc
push
xor
sub
es
add
adc
inc
cmp
xchg
rol
scas
or
cmp
fimuls
jle
jne
push
sbb
mov
data16
mov
add
push
subl
outsl
and
shl
fisubs
hlt
js
push
sub
push
sub
and
add
fidivs
ret
xor
push
adc
std
cld
adc
add
mov
imul
es
decb
inc
jg
cs
fcompl
cmp
pop
cmpsb
lods
mov
jbe
or
out
lret
call
add
dec
inc
pop
fbld
fldcw
subl
or
xchg
and
jne
jns
pop
pop
mov
out
fildl
push
insb
ljmp
flds
flds
cmp
les
js
fmulp
lret
leave
iret
insb
jmp
pop
les
fldcw
fmuls
push
jg
outsl
jne
dec
inc
sbb
jae
mov
aaa
fdecstp
xor
mov
stc
je
inc
std
add
movl
and
adc
cmpl
and
cwtl
repz
fs
sbb
cmp
mov
mov
lret
cmp
mov
xchg
xchg
pop
inc
repnz
clc
into
loopne
je
jg
jl
cmp
or
incb
or
fiadds
pop
add
movb
inc
push
add
sbb
outsl
and
mov
icebp
jge
mov
jmp
xchg
cmc
dec
or
or
dec
scas
pop
cmp
jmp
mov
sarb
pop
icebp
rorl
xchg
cmc
add
repz
int3
xor
cmp
sub
inc
and
cmp
loopne
mov
adc
push
xor
jecxz
and
pop
lods
test
inc
adc
pusha
push
push
add
sbb
xor
xor
add
cmp
mov
push
call
bound
and
ds
nop
in
sub
movsb
outsl
and
push
outsb
mov
push
lds
pop
ficomps
dec
cld
xor
mov
mov
cmp
mov
mov
pop
ret
push
punpckhdq
pop
js
lock
aad
adc
adc
xchg
cmp
aaa
es
or
pop
je
push
dec
mov
stos
push
sub
xchg
mov
or
repnz
inc
pop
dec
cmp
clc
je
push
push
cld
mov
sub
adc
sbb
xor
movl
ja
add
lods
cmp
jg
mov
loopne
adc
mov
pop
jmp
mov
xor
hlt
sub
and
cmpl
pop
mov
cwtl
popf
mov
ja
movsb
mov
popf
add
loopne
sahf
jmp
add
dec
in
adc
pop
pop
dec
or
sub
inc
cwtl
jne
fstps
inc
ret
bts
pushf
jle
cwtl
ret
lods
or
inc
ret
push
push
andl
clc
iret
or
jl
cmpl
cmp
cmpsb
jmp
inc
sbb
ds
add
inc
movntps
test
or
ret
or
mov
lahf
mov
adc
mov
push
push
call
xor
imul
mov
cmpl
rcll
or
add
cmp
fbld
push
or
sarb
xchg
inc
ljmp
jl
pop
mov
pop
bound
dec
sbbl
xchg
nop
hlt
scas
sub
pop
push
inc
gs
add
loopne
mov
push
lea
push
push
adc
jl
or
ds
push
in
or
adc
adc
adc
adc
sub
xchg
mov
sbb
lds
jo
push
jmp
add
push
jecxz
mov
jp
sbb
je
mov
lods
xor
faddl
jmp
pusha
or
and
mov
jo
mov
add
test
pop
mov
push
mov
sbb
out
add
mov
in
pusha
aaa
xor
mov
je
jmp
push
js
dec
add
sub
popa
outsb
mov
push
add
jle
mov
mov
sub
cmp
adc
rcrb
movsl
sbb
inc
xlat
pop
add
inc
push
mov
sub
push
mov
mov
inc
movl
cmp
push
call
push
insb
ja
or
jmp
lea
xor
mov
pop
rcrb
movsb
lcall
pop
jo
xchg
and
mov
inc
cmpsl
xchg
and
icebp
jmp
pop
inc
pushf
mov
hlt
xor
testb
push
repnz
add
mov
das
add
xchg
and
in
dec
adc
cli
pop
in
outsl
adc
and
es
lock
ljmp
xor
div
pusha
adc
push
mov
push
add
mov
fcmove
push
add
or
lea
lods
jae
cs
pop
out
mov
add
scas
in
leave
push
push
icebp
cli
int3
stos
cmp
cmpb
mov
aaa
cmp
cmp
mov
shl
inc
mov
lock
pop
adc
subl
mov
insb
movsb
lock
jb
sub
and
xor
jo
leave
mov
mov
sub
jne
mov
pop
call
rolb
lods
std
add
add
pop
repnz
xchg
and
or
test
add
add
jmp
adc
loopne
cmp
add
loope
xchg
fbld
sub
out
or
fcomi
ss
add
inc
or
mov
cwtl
nop
cmpsb
pushf
lods
pop
sbb
sub
mov
add
shlb
add
sub
into
loope
cwtl
fsubrs
ss
or
xchg
les
adc
pop
mov
jnp
inc
mov
sub
pop
lods
mov
inc
push
repz
loopne
push
mov
pop
nop
add
mov
cld
or
or
xor
mov
push
ror
daa
lods
inc
inc
and
inc
mov
cmp
cmp
dec
mov
into
jae
cmp
add
enter
xor
add
lds
lret
cwtl
xor
mull
mov
incl
outsb
jo
lods
cmp
sub
add
or
cld
push
and
out
pop
mov
jge
mov
mov
inc
push
pushf
sub
dec
test
roll
add
push
pop
dec
jmp
cmp
dec
cmpsl
add
push
add
std
inc
inc
dec
test
std
movzwl
mov
mov
je
xor
pop
mul
xor
push
ja
addl
setb
jb
rcll
aad
adc
sahf
fiaddl
cld
fdiv
push
push
inc
stos
xchg
test
je
pop
scas
out
push
jne
pusha
jns
push
jmp
adc
addl
sbb
in
adc
adc
sub
dec
and
push
insb
clc
jl
adc
call
and
stos
sbb
mov
movsb
push
push
enter
push
add
sub
jge
jb
flds
xor
mov
sbb
mov
mov
pushl
outsl
sahf
ret
adc
test
push
lods
push
dec
sbb
push
sbb
inc
add
pop
cmp
shrl
je
outsb
mov
cmpl
and
sub
in
pop
mov
sahf
data16
sbb
lea
aaa
lret
xor
loope
push
mov
xor
add
test
add
push
imul
xor
dec
sub
adc
push
imul
or
mov
jecxz
sbb
mov
nop
loopne
xchg
inc
es
sbb
scas
shr
push
inc
pop
cmp
mov
mov
mov
mov
cmpl
pop
cli
cmp
cmp
sti
adc
test
dec
xor
int
fisubs
shlb
lret
lock
test
cmp
arpl
les
rol
jl
pop
shrl
push
loop
dec
cmp
sbb
adc
jo
fwait
pop
cmp
pushf
stc
add
mov
inc
call
sbb
fs
xchg
rclb
add
rcr
cmp
rorb
cmp
test
mov
inc
jl
shll
pop
push
and
shr
fisubl
pop
pop
in
push
xlat
cmp
sti
add
adc
push
ret
lea
mov
sbb
insb
mov
test
rolb
pushf
movsl
xlat
adc
bnd
fstp
add
into
fs
in
fimuls
movsb
lock
mov
pop
std
in
out
out
icebp
cs
clc
mov
adc
lock
mov
cmp
or
cli
xlat
dec
and
mov
js
fcoms
mov
jne
sub
std
xchg
mov
rcr
xabort
and
push
lahf
loopne
jmp
push
enter
dec
xor
insl
jne
stc
repnz
cs
add
push
jae
arpl
cmp
xchg
dec
push
je
inc
xchg
out
jnp
jg
push
or
cmc
mov
jne
or
cmp
push
push
and
cmp
inc
sbb
cmp
aam
test
cmp
mov
jo
mov
push
psubsw
pop
cmp
je
mov
ret
pop
mov
sbb
or
fidivs
pop
jp
mov
or
fcoml
mov
xchg
je
push
cmova
cmc
sahf
and
dec
push
push
stos
and
push
movb
mov
popf
sbb
add
or
jnp
push
iret
jo
not
pop
jb
push
push
pop
sahf
xchg
inc
mov
mov
pushf
mov
fcomps
into
push
loopne
fucom
nop
and
pop
push
sbb
out
jecxz
push
sub
xor
or
mov
cmp
sbb
jnp
jae
jb
rcr
add
jmp
call
mov
or
dec
loopne
jmp
add
mov
or
mov
mov
pop
outsb
adc
inc
cmp
push
mov
add
cmp
lret
adc
outsb
mov
ja
or
or
or
lret
shr
les
add
mov
mov
mov
dec
scas
sbb
rcrb
fcoms
sub
adc
dec
ret
jle
test
sahf
cmpsb
imul
lcall
jo
js
rcr
push
std
fmuls
stc
stc
mov
andl
mov
or
push
mov
inc
int3
imul
xor
addr16
imul
scas
sub
push
and
pop
into
xchg
add
out
jmp
adc
and
addr16
sar
mov
pusha
data16
mov
sub
movsb
movsl
add
fadds
sbb
fs
jo
fs
push
insb
push
inc
pusha
push
movsl
imul
adc
adc
add
add
sbb
dec
popf
sub
dec
sbb
test
ficoms
incl
clc
adc
and
test
dec
jo
inc
lds
push
xor
inc
mov
dec
dec
pcmpeqw
add
lock
sbb
add
fs
insl
je
mov
bound
pop
mov
and
sbb
adc
filds
pop
jmp
cmp
in
pop
and
sbb
adc
add
jne
sbb
syscall
repz
ror
test
mov
xchg
jnp
pop
lods
add
cli
push
ja
cmp
insb
stc
add
jle
xlat
mov
shll
mov
xor
xor
ja
dec
jne
test
sub
xchg
scas
push
pop
das
or
dec
add
xor
mov
rorb
adc
shl
sbbl
adc
pusha
dec
adcl
cld
jmp
jg
or
shll
jo
rol
ljmp
shl
ret
mov
or
test
ud0
xchg
pop
pop
jne
lea
add
or
xchg
pop
scas
push
jbe
sbb
mov
or
xchg
push
or
ret
inc
sbb
fnsave
fdivrs
loopne
fnstcw
adc
xor
and
add
scas
mov
das
or
movsb
cmp
in
add
repnz
out
add
cmp
push
sahf
lcall
push
clc
add
insl
jmp
imul
out
movsb
xor
fnop
add
push
mov
push
adc
mov
dec
jne
inc
jecxz
popa
stc
lock
add
pop
xchg
je
icebp
jne
ds
mov
xor
jae
ja
fwait
pop
lahf
test
mov
scas
mov
sub
loop
mov
movsb
dec
cmp
add
outsb
jne
daa
push
or
adc
jne
stc
int3
shrb
and
aad
jns
push
mov
cmp
add
clc
rorl
cmc
dec
rorb
jg
stos
ljmp
into
xor
cwtl
dec
sbbl
sbb
scas
dec
inc
xchg
pusha
test
aam
sub
push
cwtl
pop
aas
or
push
push
mov
adc
push
add
inc
pusha
inc
adc
inc
test
adc
pop
push
push
repnz
in
or
dec
rcll
icebp
jmp
ficomps
and
and
xor
push
call
push
xchg
inc
cmp
mov
xchg
je
pusha
add
adc
icebp
mov
int
jo
pushl
je
push
and
mov
adc
out
orb
cs
adc
lock
int3
pop
fidivrs
sbb
dec
notl
add
and
sbb
adc
ret
movsl
mov
cmp
mov
enter
insb
and
orl
adc
movsb
in
shrb
jnp
aaa
add
les
sbb
mov
icebp
sub
push
aas
mov
pop
outsb
outsl
adc
je
cmp
je
mulb
stc
loop
inc
or
push
cmp
ret
pop
cmp
je
xor
push
lods
push
rclb
sti
push
lock
mov
inc
pop
xchg
jmp
lea
pop
clc
repnz
orl
sub
push
add
mov
mov
adc
lock
in
cld
lock
mov
sahf
pop
cmpsl
addb
push
dec
push
push
adc
repz
push
into
add
ja
or
dec
ss
mov
jo
mov
mov
sbb
add
add
push
xchg
aam
subl
lods
xchg
sarb
mov
sub
cs
mov
lock
mov
test
push
je
sarb
cmp
testb
or
add
inc
aam
xor
mov
leave
jge
sub
test
cmp
xor
push
cmpb
sbb
adc
add
loopne
jle
daa
cmp
and
inc
leave
enter
push
sbb
dec
mov
pop
jns
insb
add
bound
clc
push
push
jge
jne
mov
xchg
mov
inc
mov
mov
sahf
cs
int3
call
push
ret
cmp
adc
outsb
and
jae
mov
xor
xchg
add
add
cltd
or
xchg
jge
sbb
mov
imul
cwtl
fidivrs
ss
sub
jo
cmp
sbb
je
jle
cmp
push
and
add
loopne
dec
push
lea
pop
add
aam
add
lea
dec
pusha
push
ss
or
sbb
int
adc
lods
add
adc
xchg
leave
push
es
fcoms
cli
les
out
xchg
add
clc
pop
xor
pop
xor
push
pop
sbb
mov
push
fadds
fs
adc
push
cmp
stos
call
pop
arpl
imul
jns
and
sbb
xorb
sub
add
xorb
jp
std
mov
add
dec
dec
fisttpll
add
cs
adc
mov
dec
xor
aad
popf
xchg
push
and
imul
cmp
je
aaa
pop
ja
add
jle
inc
mov
out
xchg
and
jge
sbb
jg
sbb
mov
adc
test
pop
das
sti
add
hlt
ljmp
push
cmp
pop
pop
into
pusha
sbb
xor
addl
setb
jmp
and
pop
and
shlb
pop
or
inc
dec
push
jbe
cmp
ss
pop
push
pop
into
jecxz
or
inc
data16
adc
loopne
cmp
test
lretw
add
cltd
and
pushf
int3
loopne
lret
pop
adc
xchg
add
std
lods
add
inc
push
mov
adc
movb
mov
fsubr
mov
aam
les
jg
add
icebp
test
push
jmp
dec
and
cli
popa
mov
cmp
rolb
adc
sti
jnp
push
addl
loopne
in
mov
in
xor
push
mov
pop
mov
movsl
add
idivb
je
jns
fdivr
mov
repz
pop
addb
inc
adc
es
out
pop
loope
ret
push
cli
or
mov
es
cmp
add
jmp
pop
insl
adc
test
mov
testb
mov
cmp
test
aam
inc
mov
ss
aaa
mov
out
fadds
and
pop
aas
mov
mov
mov
jne
repnz
dec
pop
sahf
xchg
out
push
push
push
je
push
rolb
lahf
cs
or
out
dec
insb
sbb
aas
aam
adc
push
outsl
lea
push
push
or
add
cmp
out
pop
xchg
hlt
fs
push
sub
add
and
mov
pop
sub
add
les
xor
or
lods
adc
shll
mov
adc
pusha
sbb
xchg
jae
ret
and
xchg
or
xchg
stos
cmp
jl
or
push
xor
or
sti
and
pop
jge
inc
popa
cmp
or
setle
and
mov
jmp
fildl
pushf
lret
test
jb
sbb
xor
loope
scas
aaa
push
cmp
adc
test
push
pop
ret
test
jne
sub
xor
loope
test
mov
mov
out
in
std
decl
push
clc
mov
popf
test
xor
mov
stc
dec
mov
loope
inc
xchg
mov
adcb
and
mov
or
adc
leave
mov
shlb
push
push
jo
xlat
orl
nop
push
mov
pop
cmp
ja
mov
adc
push
xor
push
or
ret
or
push
mov
insb
and
xchg
fmull
cmp
mov
xchg
out
or
lret
std
push
and
int3
ficomps
xchg
fbld
in
in
inc
or
shrb
fistps
cs
xor
ficompl
rclb
sbb
cmp
ret
jne
cs
ja
sarl
jo
adc
je
add
cmpl
insl
inc
insb
js
addl
call
out
int
xor
adcl
inc
adcl
xor
inc
push
cld
sub
dec
adc
andl
sub
inc
or
lret
inc
outsb
jl
jne
mov
aas
sbb
inc
jmp
pushl
mov
cmp
lea
cmp
scas
in
out
jp
mov
in
push
ret
rcll
or
inc
xor
sbb
insb
pop
sbb
inc
idivb
xorb
cld
mov
and
gs
push
in
and
pop
mov
jl
cld
and
subl
inc
or
inc
cltd
pushw
cmp
lds
dec
xor
pop
sahf
push
xchg
testb
dec
outsb
mov
cltd
adc
or
push
movsb
xor
xor
mov
adc
xor
adc
test
add
mov
and
mov
scas
insb
and
jo
mov
add
jae
push
mov
push
push
mov
ret
cmc
adc
jecxz
sbb
xchg
adc
add
cmpsl
cmpsb
call
sbb
sub
xlat
shr
pop
add
inc
dec
insb
dec
jl
lock
dec
adc
pop
inc
push
nop
cmp
jbe
adc
inc
sbb
and
je
push
lods
aas
rolb
mov
pusha
cmp
pop
pop
shll
mov
push
xor
dec
mov
movb
sub
popl
add
cmp
cmp
xorl
xor
add
pop
js
ret
testb
je
and
lock
add
xchg
adc
mov
push
pusha
lcall
xor
and
xor
xchg
pop
pop
add
inc
packsswb
ret
outsb
mov
dec
clc
sub
push
jbe
mov
mov
push
adc
inc
lret
out
inc
push
mov
dec
ds
outsl
sbb
add
insl
adc
dec
es
sub
mov
jge
fisttpll
mov
and
cmp
dec
add
fadds
shll
push
jb
jb
add
ret
addl
sbb
lock
js
mov
mov
test
ret
dec
xor
or
insb
scas
xchg
mov
stos
cs
cmp
fistps
push
add
ret
jb
ret
out
sub
pop
xor
pop
mov
call
movhps
jno
xor
mov
sub
movl
dec
push
data16
and
jo
mov
mov
nop
jmp
xchg
or
or
fdivl
nop
callw
push
pushf
data16
jnp
pushf
inc
xlat
adc
aad
lcall
push
mov
outsb
neg
or
mov
add
or
iret
inc
dec
pop
add
pop
jmp
aaa
dec
push
jo
jmp
insb
or
mov
pop
and
pop
push
push
pop
cmp
mov
imul
push
push
aad
sti
sub
jo
inc
movsb
mov
cwtl
add
jo
mov
inc
or
fcoms
data16
popa
mov
cmpb
xchg
push
out
push
inc
and
jbe
or
jne
shlb
mov
orb
xchg
cwtl
push
xchg
dec
mov
cmp
add
and
or
fists
addl
jo
test
mov
sbbb
add
mov
push
lock
inc
movsb
adc
cmp
pop
icebp
in
in
andl
sub
inc
sbb
xor
outsl
inc
sbb
lret
into
add
ret
cmp
sbb
mov
test
lea
loopne
stos
mov
xchg
les
mov
jo
in
add
cmp
shrb
cmp
shlb
inc
or
adc
cmp
ss
xor
movb
cmp
fldcw
and
je
mov
das
movsl
inc
dec
dec
push
hlt
dec
push
xor
sahf
fimuls
jae
out
add
xchg
lret
add
scas
xor
repz
insb
lcall
ret
lods
xor
xor
dec
push
push
mov
dec
insb
add
fdivrs
xor
mov
sub
sub
lods
adc
sbb
daa
cmp
or
add
adc
sbb
call
mov
cmp
jne
pop
loopne
xor
loope
push
add
fadds
pop
testb
pop
test
push
mov
add
push
mov
test
cmp
arpl
rcrl
aas
mov
xlat
fdivl
xlat
cmpsl
xor
push
packssdw
js
ficoms
inc
cli
push
cld
xabort
repz
push
repz
cli
test
pop
adc
inc
insb
shr
sarb
test
mov
or
add
cmp
jle
adc
adc
outsl
adc
aaa
sbb
xor
stos
pusha
insb
std
mov
icebp
decb
adc
out
xchg
js
fldenv
jae
mov
sub
lcall
lock
js
lock
dec
pop
add
mov
sbb
mov
xor
loop
out
movsb
push
sbb
push
pop
adc
es
ja
sub
lret
xchg
push
mov
lock
jmp
in
mov
in
sbb
dec
insb
or
int3
adc
int
mov
dec
push
pop
xchg
dec
push
dec
mov
inc
andb
shlb
push
int3
inc
push
lcall
adc
jge
jmp
mov
testb
cmp
add
adc
push
insb
sbb
pop
arpl
mov
or
mov
ja
mov
rcrb
movb
call
push
cmp
mov
adc
rcrl
sbb
mov
daa
add
shr
movsb
das
xor
or
pop
lds
push
fimuls
push
sub
push
pop
mov
sbb
push
lea
pop
lock
mov
push
sub
dec
je
aaa
jbe
adcb
or
outsl
jo
sub
cli
jmp
pop
sub
add
add
or
xchg
jns
mov
adc
xor
fisubl
xor
lods
gs
scas
or
shlb
call
dec
pop
loope
adc
lcall
cs
jno
iret
stos
push
pop
into
arpl
insb
dec
pop
mov
cmp
and
cmp
popa
xor
lds
rorb
add
scas
in
pushf
xchg
xor
push
outsl
dec
cmp
test
add
dec
int3
movsb
push
insb
push
push
loope
cmp
push
push
pop
cli
shlb
push
push
add
dec
lods
imul
and
pop
fs
pop
dec
or
inc
jae
popf
pop
or
or
cmp
sub
push
lea
idivb
xor
adc
aaa
stos
mov
lcall
jnp
inc
fmull
out
pop
stos
cmp
lahf
lods
pop
or
mov
or
sbb
push
pop
mul
fs
repnz
in
mov
cmp
or
inc
or
imul
aam
mov
jbe
call
loope
xchg
or
or
cmpsb
mov
aaa
sbb
xor
or
outsl
sbb
or
xchg
lock
add
mov
pop
inc
push
aam
into
or
sbb
popf
orl
sub
mov
jl
je
add
jge
cltd
shl
inc
mov
testl
ret
lock
test
xor
xchg
fldl
pop
or
jl
push
ret
rorl
jecxz
add
shrb
cmpsb
add
xor
inc
lods
pop
repnz
jo
mov
popa
and
mov
push
jae
push
push
inc
cwtl
fisubl
pop
in
fsubrl
imul
sbbl
sub
push
cltd
pop
pop
push
push
or
or
rcrl
fmuls
dec
in
fadds
push
cmp
pusha
adcl
movsb
in
dec
mov
mov
push
bound
gs
aaa
popa
pop
inc
clc
push
imul
mov
add
jae
adc
push
test
rclb
add
mov
xor
and
inc
and
dec
pop
lods
and
xchg
cmp
sti
ds
mov
xor
shlb
push
push
jns
adc
cmp
xchg
or
sti
sub
xchg
add
or
push
mov
push
cmp
xchg
add
push
lea
mov
push
lods
addr16
push
inc
test
add
lret
or
push
xor
loope
xor
pop
inc
adc
or
fists
mov
pushl
push
js
sar
or
xchg
aam
les
push
inc
cld
fisttpl
shl
add
ret
negb
or
in
les
pop
aaa
lods
pop
or
sbbb
imul
add
adc
add
stc
outsl
or
outsb
call
jle
dec
ja
je
or
je
or
sub
sub
ret
adc
cmp
stos
roll
imul
loopne
adc
jne
adc
jnp
push
jecxz
or
cmp
xchg
out
push
adc
adc
movsl
test
cmp
jle
sub
movb
mov
mov
clc
movzwl
dec
and
push
icebp
imul
jmp
ljmp
or
das
icebp
cmpsl
loopne
dec
inc
mov
jle
mov
adc
je
shlb
xchg
mov
sarl
mov
adc
popa
test
das
ret
xor
rcrb
loopne
and
mov
jnp
add
push
and
rolb
or
adc
test
and
push
lret
or
je
sub
sub
pop
jg
add
clc
add
scas
test
inc
push
adc
stos
mov
mov
test
xor
mov
or
push
adc
out
std
loop
inc
sub
push
pop
jo
add
fstpt
lds
mov
pusha
aam
sub
lea
shll
or
sub
and
xchg
and
stc
pop
test
inc
out
or
or
cwtl
lret
jp
dec
cld
xor
push
lock
cmp
add
mov
mov
sbb
adc
and
fcoml
sbb
test
push
stc
sti
je
int3
xchg
test
inc
sub
jg
or
inc
mov
clc
mov
xor
pop
enter
fcoms
fadd
ss
xchg
in
push
push
add
in
mov
jno
out
xor
and
sub
nop
lods
ret
js
xorb
xchg
sub
loope
push
dec
mov
xchg
mov
adc
add
mov
jge
inc
hlt
or
push
cltd
sbb
orl
jb
jns
sub
sub
cmp
fcompl
data16
aam
push
out
xor
lock
mov
push
cmp
and
adc
push
fsubl
cs
outsl
inc
pop
push
sti
and
pop
rcrb
scas
dec
jns
dec
jle
call
mov
sub
add
fcoml
cmpb
in
pop
and
and
mov
mov
aam
int3
aam
dec
mov
cmpl
xor
mov
inc
loop
or
push
bound
dec
shrb
aam
addb
pop
fisttpll
or
add
and
xchg
mov
jmp
sbb
test
fsts
scas
repnz
fisubl
mov
push
lahf
cmc
inc
sub
dec
rclb
out
jnp
or
sbb
cltd
mov
adc
or
add
and
xor
or
sub
adc
sbb
adc
push
xor
sarl
movsb
push
mov
hlt
dec
mov
jnp
pop
mov
fdivs
sahf
cmp
adc
mov
xor
mov
adcb
cs
adc
icebp
insl
fistpl
xlat
xor
imul
movl
test
inc
push
jne
jle
inc
mov
mov
loopne
dec
in
ss
in
cmp
in
nop
clc
lds
pop
shlb
test
cmp
shrl
sub
and
sub
push
in
jb
subb
cmp
push
and
fucomip
add
shlb
orl
lahf
xchg
xor
pop
xor
das
mov
or
fistpll
add
adc
dec
sub
pop
sbb
cmp
in
cmp
sbb
or
f2xm1
xor
or
push
push
xchg
das
scas
pop
push
mov
add
inc
dec
inc
adcl
dec
and
ljmp
popf
lcall
or
xor
push
les
xor
mov
dec
call
push
add
rorl
clc
int3
sbb
incl
xchg
jnp
cltd
add
push
mov
or
and
xor
xor
push
pop
gs
xor
dec
inc
je
loopne
gs
popf
insb
shrb
mov
cli
mov
sbb
lahf
add
lret
lea
sbb
push
xor
xchg
push
js
dec
mov
test
insb
sbb
push
or
add
dec
loope
iret
xchg
pop
push
push
add
dec
sarb
rcr
add
jo
aam
js
or
xchg
pusha
or
mov
push
push
push
mov
push
xchg
jo
cmp
fs
or
xchg
loopne
enter
push
push
or
mov
push
xor
add
call
xchg
cmp
in
and
or
mov
enter
jg
subb
pop
cmp
shrb
enter
mov
sbbb
es
push
sbb
or
lods
or
out
mov
inc
xchg
xor
pop
mov
push
cmp
aad
ja
sub
xchg
call
subb
or
adc
push
cmp
and
jg
out
dec
sub
dec
rorl
or
add
push
js
outsb
sarb
sbb
mov
and
push
inc
orl
das
or
sub
mov
inc
jecxz
loope
in
pop
dec
adc
and
push
ficompl
and
add
pop
push
pop
lea
loop
outsb
xor
sub
adc
mov
in
out
adc
es
sbbb
inc
xor
movb
push
jecxz
cwtl
sbb
dec
mov
add
jo
xchg
sub
push
or
sub
mov
mov
les
enter
mov
jge
pushf
mov
ss
outsb
pop
pop
sbb
fs
imul
mov
jmp
roll
or
xchg
add
sub
std
adcb
inc
adc
les
out
mov
hlt
sbb
pop
fidivs
push
sub
test
or
rorb
in
aaa
stos
or
adc
adc
data16
pop
xchg
mov
es
cmp
dec
pop
jmp
mov
add
cli
call
sub
push
and
adcb
call
sbb
xchg
xor
or
jge
jge
lret
sub
mov
pusha
mov
push
xchg
fnsave
push
fcoms
sbb
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
add
mov
mov
pop
push
inc
cmp
daa
adc
xchg
movsb
push
adc
push
inc
sbb
and
popa
adc
mov
leave
mov
dec
adc
sar
insl
movsb
inc
or
xor
fcompl
inc
mov
xchg
sbb
add
aam
clc
dec
adc
fiadds
and
push
insb
sub
es
push
pop
movsb
adc
sbb
pop
pop
jle
jg
dec
and
pushf
push
adc
and
dec
fmull
pop
les
inc
mov
aam
adc
push
xor
test
repnz
fs
mov
push
shr
push
jmp
jmp
and
sbb
mov
inc
xor
jecxz
popa
mov
pop
pushf
add
and
lahf
rcrb
sbb
cmp
je
adc
out
or
push
adc
int
daa
les
add
xchg
push
sbb
and
out
pusha
pusha
dec
xchg
pop
or
enter
add
cmp
cmp
push
or
flds
enter
or
orb
add
aam
sub
sub
insb
inc
xor
fs
sub
pop
jg
hlt
lea
or
xchg
add
pusha
inc
outsl
rcll
fmull
addr16
pusha
mov
xor
inc
jo
push
push
sub
in
sub
push
xor
in
stos
xor
push
sub
xchg
sarb
inc
repnz
jns
push
push
cmp
pop
and
dec
sbb
xchg
cmp
inc
ret
in
jns
cmp
or
dec
adc
inc
fwait
inc
xchg
or
and
lret
cmp
fimuls
cmp
adc
sub
loope
and
or
aam
jl
add
push
repnz
adc
pop
push
adc
pop
cs
jbe
fmull
push
addr16
xor
clc
rcr
orb
shll
and
leave
out
push
mov
dec
add
xor
cmpsl
xchg
dec
jae
xor
subb
call
adc
call
cmp
dec
lods
mov
popf
or
push
enter
push
push
mov
jo
lcall
mov
add
inc
and
push
inc
mov
aaa
sub
dec
scas
mov
sub
pop
push
out
pop
jecxz,pt
outsl
lret
dec
loopne
mov
rclb
cld
lcall
loopne
inc
or
sbb
add
push
movsl
sub
sbb
inc
ficoms
sbb
stc
pusha
or
dec
fdivr
sbb
out
push
xlat
inc
mov
cmp
fsub
mov
inc
jecxz
mov
dec
mov
add
loopne
sub
int3
xlat
orl
mov
lea
pop
pop
push
xor
mov
and
out
loopne
inc
jl
filds
in
push
in
scas
dec
mov
call
sub
cmp
testl
mov
orl
xchg
xor
popa
or
icebp
and
or
or
push
mov
add
and
cmp
repz
or
daa
and
or
or
sub
jne
pop
add
push
and
leave
ret
or
adc
mov
les
pop
or
mov
mov
xchg
in
add
cmp
cmc
push
aaa
dec
dec
xchg
pop
push
js
mov
mov
pop
mov
aam
push
insb
mov
xor
dec
or
roll
lock
cmp
call
addr16
and
enter
xor
sti
inc
cmp
cltd
std
adcl
jbe
inc
mov
cmp
dec
sub
shll
mov
xchg
dec
fcompl
adc
andl
adc
add
sbb
mov
out
or
inc
fisubrl
sbb
cmp
out
inc
aam
cmp
or
in
inc
mov
add
add
xchg
or
and
mov
mov
jbe
push
sbb
jae
and
push
add
adc
add
insb
jbe
je
jno
xor
das
mov
shl
pop
cmp
jne
pop
adc
aaa
pusha
mov
pop
cmp
insl
icebp
mov
jge
cmp
cmp
out
clc
mov
fwait
or
mov
add
lcall
loopne
dec
adc
in
call
inc
jae,pn
loopne
jl
repnz
pop
shlb
rorb
inc
sub
enter
xchg
adc
add
outsb
sub
or
test
hlt
aam
sahf
or
test
decb
mov
and
mov
mov
add
in
dec
or
and
and
jle
adcl
pop
lcall
loopne
loopne
xor
cmpsl
sahf
sbb
dec
mov
sbb
sbb
sub
int3
in
pushf
inc
mov
pop
or
pusha
in
pop
fcomps
push
inc
enter
add
lock
sub
xchg
dec
push
add
dec
xchg
repnz
or
ja
mov
push
jnp
rorb
inc
scas
lret
jne
negl
mov
jle
dec
sbb
adc
sub
inc
pop
enter
stos
mov
js
lock
jns
ret
jnp
aam
add
sbb
cmp
xor
inc
jecxz
pop
imul
addb
sti
lret
mov
mov
cmp
jbe
mov
imul
push
xor
push
lds
xor
and
cmp
mov
iret
cmp
popa
loop
hlt
xorb
movsl
imul
mov
jno
aaa
test
inc
or
jns
mov
mov
test
adc
clc
push
push
mov
push
or
fcomps
inc
dec
dec
stc
add
test
cld
sbb
leave
dec
idivl
jo
cmp
adc
add
mov
cmp
push
sbb
outsl
loopne
mov
pop
adc
sub
aaa
stc
sub
leave
inc
out
fdivr
sbb
cmp
jbe
xchg
lea
lea
in
pop
push
jae
iret
ret
sbbb
and
mov
pop
add
in
cmp
shlb
int
sbb
xor
sti
push
adc
xor
adc
add
or
enter
inc
push
cmp
jb
cmp
cmp
and
push
mov
xor
inc
jmp
xor
enter
js
cmp
push
push
push
pop
xchg
xchg
cmpsl
pop
pop
mov
inc
lods
push
jg
aam
mov
ret
cltd
cltd
ljmp
jno
sbb
cmp
inc
or
lock
inc
jmp
aas
dec
mov
out
fdivs
andl
mov
push
fwait
inc
jmp
ret
jnp
add
or
add
jmp
negb
inc
lahf
add
nop
dec
shlb
jmp
inc
orl
jo
fs
cmp
dec
leave
mov
sub
xchg
inc
inc
aas
mov
adc
push
add
popa
add
movl
shrl
lds
or
jecxz
adc
add
fldt
sub
ret
jne
inc
and
or
sub
adc
loopne
sbb
jg
mov
mulb
ret
mov
in
imul
negb
sbb
movsb
out
mov
aaa
in
xorl
add
push
dec
insb
mov
dec
add
sbb
sbb
popf
mov
pop
scas
xor
jo
ret
cltd
push
lcall
mov
in
add
xchg
cmp
enter
pop
int3
js
push
mov
adc
jbe
in
ficoms
clc
in
xchg
xchg
jp,pn
inc
les
xchg
pop
pop
iret
or
test
push
adc
cli
push
jnp
movsl
icebp
and
push
cmpsb
popf
cmpb
cli
rep
mov
adc
xchg
pop
or
inc
fiaddl
lea
pop
cmp
sub
push
repz
sbb
imul
les
add
push
jge
mov
dec
lods
jge
or
pop
loopne
push
pushl
fisttps
jns
out
pop
ret
push
mov
xor
ja
sub
aam
addr16
sub
fiadds
cltd
jne
test
or
xor
fadd
push
inc
xchg
cmp
adc
jp
dec
and
cmp
pushf
dec
mov
sub
test
xchg
push
or
ret
andps
shlb
cmp
pop
sbb
loop
pop
or
pop
push
adc
fs
inc
cmp
inc
out
or
stos
pop
sbb
clc
je
add
push
sbb
dec
fisttpl
rcrl
cmp
mov
mov
ljmp
cld
adc
push
pop
sub
jge
loopne
hlt
jne
inc
shrl
pop
faddp
fdivl
ljmp
clc
lea
je
mov
subl
inc
cmp
jb
psraw
sbb
and
divl
dec
fwait
push
sbb
cmp
or
and
sub
or
movsl
xchg
adc
push
enter
xor
cmp
fadds
lret
push
push
add
xchg
push
or
jo
cli
add
pushf
pop
inc
jo
xchg
xchg
inc
aam
push
cld
loope
cmp
xor
mov
sbb
inc
je
mov
jne
sbb
pusha
iret
and
mov
sub
xchg
add
fwait
sbb
daa
pop
loope
nop
sbb
inc
cs
push
jecxz
sbb
test
or
xor
xorb
rcrb
jae
push
mov
test
pop
ret
xor
sub
inc
cmp
fs
push
push
inc
add
mov
sub
mov
push
sbb
test
and
cmp
mov
lcall
add
jmp
mov
aas
jbe
popl
sbb
out
and
pop
fxch
popa
shll
push
xor
mov
pop
push
cmpsl
push
sub
ja
fadds
lret
outsl
movsb
add
in
in
gs
adc
xor
repz
in
hlt
inc
or
dec
sub
jl
cmp
lods
sub
enter
add
cmp
push
inc
mov
add
rolb
add
mov
pop
adc
pop
mov
push
mov
inc
add
decl
loopne
or
jg
add
adc
dec
or
lods
fimuls
adc
ljmp
add
adc
or
mov
push
mov
xchg
in
dec
out
jae
mov
or
lods
ja
and
adc
xchg
ret
movmskps
jmp
scas
inc
push
inc
insb
pop
stos
cwtl
jecxz
cmpb
or
xchg
jp
xchg
out
sbb
adc
inc
push
jmp
cmp
xor
pop
adc
fisttpll
roll
into
fmuls
test
sbb
jns
sub
pop
call
lret
mov
or
lret
push
popa
jge
int3
je
cmp
jae
cmp
sub
mov
add
orl
dec
sub
js
push
pop
or
adc
shrb
cmp
xchg
test
mov
stos
daa
pop
cmp
sub
mov
cmp
mov
mov
adc
movsl
bound
dec
outsl
aaa
dec
sub
jmp
sub
jae
int3
add
cmp
shlb
add
arpl
loop
sbb
andl
dec
fdivrs
and
jne
push
call
pusha
xchg
aam
inc
push
inc
int3
xor
test
int3
mov
mov
xlat
lcall
loopne
adc
in
inc
adc
je
inc
sub
add
sub
push
xchg
add
adc
xor
xor
test
cmp
inc
inc
mov
xchg
dec
xor
jbe
add
push
jb
xchg
mov
andl
cwtl
cli
xor
xor
xor
call
and
inc
sub
or
sarb
add
movsl
movl
hlt
dec
jo
or
inc
xor
and
rolb
mov
mov
cmp
sete
in
icebp
add
add
xor
xchg
jbe
jl
inc
add
and
cld
sub
xlat
cmp
mov
lea
xor
mov
repnz
sbb
fs
xor
mov
or
clc
pop
or
insl
das
xor
add
das
push
inc
inc
lret
loop
pusha
jnp
pop
movsl
int3
mov
cld
mov
movsl
hlt
or
call
fstl
gs
push
adc
mov
outsl
dec
mov
push
cmp
call
jb
add
mov
inc
orb
xor
push
sahf
push
mov
pop
sbb
insl
add
mov
or
sti
inc
adc
jno
incl
sub
sbb
dec
rclb
adc
and
mov
adc
lret
gs
arpl
ficoms
cld
add
xchg
inc
dec
push
rcrb
sbb
push
test
cmp
scas
xor
cmp
aas
imul
lods
shlb
push
bnd
sarl
dec
xorl
lock
int3
push
jno
std
jo
jmp
popa
xor
mov
test
and
je
jg
repnz
adc
push
testl
mov
jl
cmpb
mov
jbe
or
inc
es
stos
jno
push
icebp
subb
and
sbb
fstps
sub
cmp
sahf
popa
stos
sbb
scas
add
jo
sbbb
dec
mov
into
call
icebp
call
adc
sbb
mov
addr16
pop
mov
add
push
xchg
xor
add
inc
rcrb
or
adc
int3
adc
rol
xlat
test
shlb
push
add
es
add
inc
lock
push
pop
pop
add
push
mov
fisubl
inc
adc
test
adcl
leave
sub
or
cmp
dec
sbbb
insb
loope
and
fsubrs
adc
rcrl
or
cmp
sbbl
cmp
mov
mov
or
cmpsl
das
add
cmp
je
mov
test
imul
outsb
sub
sar
sarl
clc
jecxz
clc
jbe
or
add
xor
shr
mov
xchg
jb
cmp
adc
sub
jecxz
cmp
pushf
faddl
sub
repz
mov
xchg
dec
movsb
mov
pop
xor
cmp
push
dec
jmp
mov
inc
in
lock
das
fsubs
lock
lea
mov
fdivp
mov
or
rcrl
xchg
push
pop
mov
test
xchg
push
stos
rcll
jnp
xchg
pop
pop
loope
xlat
das
jo
jnp
in
stos
or
xlat
mov
and
lea
lea
mov
push
xlat
adc
push
sbb
add
das
and
sbb
or
ficoms
and
imul
pop
push
dec
shll
push
xchg
cmp
insl
add
pop
pop
pop
sbbb
adcb
es
ret
pop
dec
mov
enter
or
xor
pushf
xor
pop
inc
jp
xor
push
pop
pop
jmp
pop
inc
stos
enter
arpl
dec
add
call
jne
sub
lea
jp
ret
inc
xchg
imul
aas
add
jae
jb
pushl
xchg
popf
sub
push
loop
loopne
jmp
xor
jae
inc
or
adc
add
and
shlb
cmp
insb
rcrb
xlat
test
out
int3
ds
jl
and
add
fsubs
jb
imul
lock
mov
int3
jp
mov
repnz
ja
lock
mov
aad
jle
jle
loopne
popa
loopne
test
mov
addl
leave
mov
jp
ret
pop
pop
cmovnp
lock
pop
xor
jmp
mov
inc
sub
xchg
add
mov
test
mov
dec
or
mov
jbe
adc
xchg
lods
lea
mov
scas
mov
test
cli
dec
and
enter
add
insb
sbb
rclb
filds
adc
inc
mov
cmp
xchg
inc
sub
push
mov
jmp
daa
add
mov
xchg
fildl
arpl
ja
adc
pop
jb
addr16
insl
add
aas
mov
out
enter
scas
loop
adc
mov
jmp
xchg
dec
pop
jb
outsb
add
add
mov
pop
pop
movl
into
lret
out
add
or
data16
cmp
push
outsb
inc
jns
js
outsl
jne
xor
xor
xor
and
mov
add
and
xchg
bound
or
and
dec
enter
push
dec
xchg
pusha
in
xchg
pop
sahf
push
inc
sub
dec
mov
pushl
int3
xor
cmp
mov
sbb
and
lods
popa
cmp
daa
push
insb
add
in
and
and
mov
in
es
xor
or
sbb
sbbb
jo
sbb
subb
lret
test
cs
lahf
das
jmp
push
push
and
inc
push
scas
or
and
sub
xor
shrb
pop
jne
cmp
pop
mov
mov
loope
xor
cmp
fstpt
push
push
ffree
cmp
adc
or
fbld
int3
add
jecxz
mov
adc
or
xor
and
adc
adc
xchg
xchg
dec
mov
or
inc
add
or
adc
inc
adc
jno
push
cmpsb
xchg
adc
adc
push
or
fdivrl
adc
rclb
lret
add
xchg
shlb
adc
cmc
ja
push
movsl
imul
inc
pusha
add
adc
and
mov
dec
sub
xor
aad
in
addb
mov
popa
das
cmp
out
arpl
pop
mov
imul
and
sar
sub
mov
xchg
and
jae
inc
cmp
add
push
and
inc
adc
inc
mov
jbe
test
ret
xchg
pop
push
cwtl
cmp
or
push
pop
cmp
cld
xor
pushf
test
sub
cltd
lea
out
push
add
mov
lock
jle
add
sub
das
js
mov
push
inc
repz
mov
ret
shr
jne
add
bnd
shll
aad
neg
outsb
loopne
es
je
mov
or
jmp
add
dec
or
add
das
dec
pop
pop
jg
movsl
add
cmp
jne
add
out
dec
mov
xor
aaa
nop
in
test
in
inc
das
xor
mov
cmp
je
sbb
pinsrw
xor
pop
push
dec
pop
cmp
dec
xlat
lock
jge
push
jae,pn
aad
xchg
outsb
mov
xor
rcrb
mov
arpl
scas
xor
inc
pusha
clc
jmp
leave
lds
icebp
dec
dec
insb
jmp
cmp
in
mov
je
cmc
jno
adc
movsb
outsb
shlb
sbb
loop
in
mov
ss
push
mov
or
push
push
clc
aas
mov
or
cmp
jg
addr16
outsl
sbb
add
dec
jo,pn
dec
sub
enter
jae
rcl
in
push
push
aaa
int3
dec
pop
inc
add
inc
shrb
jbe
dec
outsb
and
in
call
pop
and
rorl
mov
pusha
adc
jnp
sub
pop
jmp
cmp
xchg
shlb
aas
test
dec
or
push
sub
iret
or
pushw
outsl
out
dec
mov
jo
push
mov
pop
or
dec
cmp
jmp
add
pop
insb
sbbb
test
fcoml
or
add
arpl
or
or
ljmp
faddl
or
loope
or
adc
mov
in
or
mov
aaa
xchg
movsl
jns
lret
imul
xchg
shrb
cwtl
jmp
adc
dec
rorb
inc
or
dec
add
cmp
xchg
iret
push
pop
sbb
in
xchg
clc
and
pusha
hlt
inc
sub
or
xor
jmp
jne
mov
push
out
xor
xchg
inc
fiadds
or
hlt
loope
lock
out
shrb
mov
adc
pop
repnz
nop
lret
sub
repnz
clc
push
mov
inc
cmp
gs
ss
push
js
sarl
aaa
and
or
popf
ja
inc
or
sbb
lock
rcrb
lods
mov
in
enter
mov
shlb
adc
rol
mov
push
mov
mov
cmp
jl
cmp
jle
cmp
outsb
xlat
mov
or
pop
inc
cmp
aas
lods
mov
mov
pop
cmp
mov
mov
pop
and
cmp
mov
cmp
je
cmp
je
sub
inc
push
mov
call
xlat
iret
pop
add
push
cs
pop
inc
rorb
mov
aas
sbb
fwait
add
fcompl
sub
add
rol
xorb
push
xor
aam
rolb
adc
pop
lock
sub
shrb
jl
push
loope
adc
dec
mov
jl
add
jl
lret
es
jge
decl
add
pushl
sub
jne
movl
hlt
inc
mov
lret
sub
and
mov
loope
clc
pop
push
aam
test
add
int3
jmp
sub
lock
imul
push
mov
dec
mov
pop
sbb
and
mov
dec
jp
xchg
cmp
adc
sbb
nop
loope
lods
loopne
ja
int3
aam
ficompl
js
loop
fldl
fwait
js
gs
pop
mov
js
cmp
insb
mov
fcomp
push
inc
sbb
test
mov
and
mov
pop
mov
leave
and
or
xchg
adc
insl
call
mov
inc
loopne
loope
dec
or
sbb
pusha
clc
aad
leave
fmuls
lea
xchg
sbb
je
rcll
inc
call
jnp
je
cmp
sub
add
pop
adc
pop
dec
cmp
mov
mov
inc
inc
xchg
sbb
or
pusha
add
inc
add
mov
or
push
pop
lret
ret
pop
pusha
fs
fdivl
mov
push
cmp
dec
cmp
out
inc
push
stos
mov
jge
cltd
add
adc
inc
sbb
sbb
vpshaw
and
xchg
xor
dec
loopne
insb
mov
adc
mov
push
jne
push
sub
sbb
xor
inc
aas
hlt
sub
push
jne
mov
and
cmp
popf
add
mov
xor
je
leave
mov
cli
je
sub
daa
insl
lock
subl
popa
loop
shlb
push
imul
addb
inc
adc
inc
and
jp
add
cmp
sbb
cmp
adc
push
xchg
push
inc
add
adc
xorb
lds
lods
pop
push
add
hlt
mov
xor
cmc
cmp
mov
sbb
jnp
por
cs
cmp
and
add
imul
xor
xchg
add
loope
push
scas
lahf
ret
sub
dec
pop
push
pop
cmp
jmp
sarl
cmp
jnp
ljmp
ss
pop
xor
mov
fidivrl
xor
jnp
nop
push
les
aaa
test
jnp
jmp
into
adc
add
shr
jmp
sub
pusha
nop
push
dec
and
adc
sbb
and
pop
xchg
inc
fs
aaa
fstps
mov
xchg
adc
pop
xchg
mov
fwait
pushf
adc
out
inc
repz
test
sbb
cmpl
xor
inc
mov
and
sbb
loop
adc
jns
cmp
in
mov
je
or
je
cmp
mov
and
pop
push
mov
pop
jle
hlt
pop
test
lods
inc
rol
xchg
faddl
lcall
sbb
dec
jne
and
loop
fs
inc
shlb
pop
dec
add
or
jne
and
jne
push
inc
mov
in
dec
into
sbb
imul
movsb
or
push
inc
repnz
and
mov
insl
insb
pop
inc
movb
and
push
push
lods
clc
or
fs
inc
mov
sub
outsl
loopne
lahf
push
das
addb
lods
add
jne
in
popa
adc
mov
mov
imul
repz
jg
push
enter
imul
xchg
sbb
inc
pop
cltd
adc
pop
adc
xor
sbb
jb
mov
std
push
inc
clc
inc
insb
jmp
add
cwtl
adcl
pop
pop
jbe
rclb
dec
fdivrs
movsb
sbb
xor
dec
pusha
mov
adc
cmp
movl
sub
inc
jle
enter
sub
sbb
inc
mov
push
or
push
push
jae
and
ds
sti
push
sbb
sub
and
hlt
pop
adc
cmp
or
mov
jl
push
push
hlt
jg
mov
sub
mov
lea
cwtl
add
aas
add
jmp
lret
mov
mov
dec
adc
orps
add
xor
lods
mov
push
cmc
sbb
sbb
sub
and
sub
lea
xor
xorb
pusha
pop
mov
add
jne
sub
arpl
mov
pop
cmp
push
jg
push
decb
push
push
inc
mov
push
or
pushf
fistps
loopne
pop
test
ret
mov
mov
imul
rolb
clc
aam
mov
add
dec
jns
jb
cmovb
or
xchg
sub
pop
in
add
pop
add
add
or
xor
mov
data16
pop
shrb
add
push
gs
xchg
mov
add
mov
mov
jne
in
push
ljmp
sarb
in
lock
movsl
faddl
sbb
or
es
pop
and
dec
clc
ret
insb
pop
inc
mov
jae
jns
mov
out
adcb
mov
stos
pop
mov
push
mov
sub
push
xchg
pop
or
inc
adc
add
cmp
pop
subb
in
mov
test
insb
push
push
or
sbb
ret
pop
xor
div
xchg
push
push
faddl
xchg
lret
adc
iret
rcrb
inc
sbb
jmp
xor
test
mov
call
sbb
jae
jae
dec
lds
push
jns
iret
call
xchg
fimuls
je
lock
mov
loope
cmp
mov
clc
jo
inc
pop
adc
in
dec
adc
dec
popl
pop
adc
push
pusha
adc
pop
add
outsl
sti
imul
fcomp
pop
xchg
push
in
cmp
push
fldl
sub
push
fstpl
add
sub
leave
repz
pop
data16
repz
mov
adc
adc
jne
push
divb
cmp
iret
iret
or
jne
or
jne
or
sbb
loopne
je
cld
push
out
add
pop
andl
jg
mov
setge
or
pop
push
push
xadd
mov
push
xorl
mov
mov
andl
adc
jecxz
aaa
jo
push
loop
jbe
out
rorb
movsl
mov
adcb
xor
scas
insb
mov
sbb
nop
mov
xchg
adc
dec
dec
push
lea
test
fidivrs
gs
sbb
aam
dec
popa
sub
lea
inc
ffree
jge
jne
mov
pushl
inc
inc
in
sub
mov
or
fimuls
movsl
sbb
in
pminub
push
push
jmp
popa
jmp
pop
sbb
lcall
das
sbb
push
test
sub
dec
add
fmull
add
scas
inc
test
popf
shr
mov
fsubl
or
in
rclb
fcmovbe
sbb
pushl
lret
inc
daa
pop
jge
and
aad
dec
mov
add
push
out
mov
pop
mov
cmpb
mov
jo
and
les
mov
mov
xchg
scas
data16
ret
cmp
push
push
nop
sub
push
mov
push
nop
outsl
daa
jo
divps
adc
lret
xor
sbb
adc
sbb
or
sub
jnp
cmp
icebp
add
lret
cmp
or
xchg
add
xor
or
repnz
test
pop
inc
push
mov
inc
xor
xchg
les
lods
push
aad
jle
pop
pop
pusha
mov
add
xchg
adc
imul
push
je
jno
adc
jnp
and
shrb
shlb
xchg
or
in
pop
enter
xchg
or
jo
inc
ja
xor
mov
add
or
shlb
and
insb
xor
popf
imul
and
fmuls
add
mov
pop
inc
jo
loopne
mov
enter
aam
in
call
adc
sub
xchg
or
adc
stos
xchg
jge
leave
dec
or
ror
enter
leave
sarb
mov
test
out
cwtl
mov
jge
inc
dec
push
ret
sti
fs
insb
cmc
push
mov
xor
pop
pop
sbb
repnz
subb
shrb
lea
cmc
mov
add
sbb
push
sub
pop
ja
inc
imul
ret
cs
movlps
aas
gs
or
cmp
cmp
mov
inc
loope
shrb
sub
and
jl
icebp
mov
lods
pop
mov
add
push
inc
shr
adc
jle
es
pop
xor
je
addr16
lea
adc
push
add
addb
xor
nop
data16
ja
test
fnstenv
leave
push
cwtl
and
jge
aam
shlb
jl
not
into
je
add
inc
pushf
lods
movsl
and
dec
cmp
movsl
and
push
call
or
or
xchg
addr16
add
add
data16
or
jle
arpl
mov
addl
xlat
bound
push
mov
inc
orl
pop
lret
xchg
push
pop
and
enter
in
push
les
cmpsb
lods
xchg
imul
cmp
dec
jb
cmp
call
out
push
dec
test
insb
add
cmpsb
cwtl
mov
push
movsl
mov
mov
lret
push
push
jge
mov
or
inc
imul
aas
xor
dec
sbb
test
pop
loopne
pop
pop
dec
and
and
xor
pushf
adc
pop
cltd
cmp
stos
cmp
sbb
clc
mov
arpl
dec
pop
ret
jne
mov
cmpl
cmc
popl
push
fadds
leave
push
cmp
add
stos
sub
push
js
stos
mov
clc
add
add
mov
mov
jle
popa
daa
rorl
jge
lret
pop
outsb
inc
mov
inc
push
and
into
nop
dec
sub
adc
push
push
out
loope
push
dec
imul
lock
jg
adc
mov
sbb
test
inc
shl
jne
adc
mov
lret
out
jno
dec
or
pop
push
pop
xchg
mul
mov
xchg
ret
arpl
pop
lea
push
and
iret
mov
jp
movsl
cmpsl
stos
daa
hlt
daa
sti
pop
gs
sbb
xor
jp
adc
push
push
xchg
mov
add
inc
sbb
add
wbinvd
and
sbb
push
mov
ja
adc
mov
lea
pop
add
mov
sbb
or
push
push
xchg
mov
mov
or
outsb
xor
pop
fmuls
lods
adc
cmp
push
jae
faddl
outsb
dec
clc
ja
in
sub
dec
pushf
dec
clc
idiv
or
add
faddl
inc
xchg
ja
fiadds
cwtl
or
js
mov
and
dec
adc
rolb
sbb
orb
andb
mov
and
pop
push
rcr
ret
cmpsl
xchg
jle
cmc
and
jmp
add
stc
mov
imul
adc
push
jl
fistpl
movsb
adc
jne
jnp
cmpsl
push
add
cltd
mov
cmp
out
loope
xchg
mov
inc
popa
mov
adc
lds
xor
mov
in
cltd
and
fdivl
stos
scas
or
aad
das
lahf
orl
lahf
sub
sbb
lahf
cmp
add
loop
and
lret
inc
xchg
lahf
or
fsubrs
movsl
arpl
inc
sub
cmpsl
ja
push
mov
andb
or
push
mov
ret
cmpsb
popf
push
mov
cmp
fwait
in
lock
and
mov
jno,pt
xorl
daa
shrb
les
dec
sahf
add
or
rcrb
push
mov
ret
mov
mov
mov
or
or
fidivl
imul
push
shll
jp
aam
daa
or
and
add
mov
rorb
jbe
jp
xchg
cs
push
lods
outsl
stos
in
mov
jae
mov
sbb
jl
pop
addr16
arpl
shrl
fbstp
push
dec
movb
aaa
pop
lcall
mov
xlat
fld1
add
in
cmp
cmp
cmp
jno
inc
adc
add
xorb
push
jb
jl
jmp
mov
pop
js
inc
test
push
jne
xor
insl
mov
jecxz
in
sub
xor
test
cmpsl
call
cltd
das
cmpsl
decb
adc
push
sub
arpl
insb
testl
fisubrs
or
push
stc
outsb
push
pop
mov
push
mov
sub
shll
dec
or
dec
stos
push
bound
lret
jge
adc
pop
pop
mov
pop
adc
popl
sbb
push
add
xchg
test
xor
and
popa
call
sbb
or
test
in
sbb
clc
les
ror
sbb
xchg
sbb
lock
in
push
out
inc
xor
jmp
sbb
loopne
or
xchg
add
mov
inc
test
mov
or
and
mov
nop
add
bound
inc
mov
stc
sub
in
sarb
mov
mov
mov
mov
sub
add
subl
fldt
fs
aad
xchg
or
adc
mov
nop
sahf
lea
pop
mov
fildl
add
jne
popf
clc
jno
push
jbe
cld
fimull
and
out
fmull
pop
aaa
aam
ds
sbb
dec
ret
mov
stos
push
add
dec
enter
scas
mov
xchg
cld
test
inc
loopne
jae
push
pop
dec
jp
cmc
mov
mov
jno
jnp
sbb
insb
dec
fwait
mov
cmp
clc
jne
mov
inc
push
lret
cmp
add
add
fldl
jne
fistpl
inc
inc
mov
mov
pop
inc
and
push
pop
je
jmp
or
add
add
mov
clc
test
mov
pop
sub
pop
insb
clc
or
pushl
sbb
rcrl
outsb
jo
sahf
and
test
sbb
sub
popl
add
andl
mov
cs
push
cmpsl
mov
mov
aad
push
xchg
mov
pop
loopne
dec
add
xlat
inc
scas
shll
test
movsl
fnstsw
lcall
xor
add
dec
sahf
mov
rolb
dec
out
jno
adc
push
adc
or
pushf
cmc
push
pushf
sub
xor
lcall
dec
push
jns
cmpb
xchg
push
pop
enter
adc
xchg
lret
xchg
inc
fisubrl
pop
xorb
push
adc
pusha
dec
stos
imul
lods
imul
sub
xchg
out
pusha
push
pop
hlt
test
sbb
cwtl
loop
or
outsb
cmp
add
mov
mulb
inc
push
cmpl
inc
mov
scas
sbb
inc
out
push
addb
or
rcrl
push
cmp
je
xor
xchg
and
and
dec
push
jp
and
int3
add
xor
leave
ljmp
pop
adc
and
or
mov
or
xchg
add
push
cmpsl
add
mov
arpl
leave
ja
sub
push
xor
and
pop
and
pop
push
adc
push
add
jnp
and
sub
dec
push
cwtl
and
push
jnp
js
sub
dec
sahf
xchg
inc
sub
and
or
or
lea
bound
out
cld
ret
sub
add
push
xorl
xor
in
or
mov
xor
and
sbb
insb
pop
sub
add
nop
cmp
cmp
push
push
and
andb
je
adc
loope
decb
stos
add
fidivs
adc
lcall
imul
and
mov
sub
insb
sbb
add
es
fsubs
je
test
into
mov
addl
clc
adcl
dec
aaa
sti
xor
call
loopne
mov
dec
or
cmp
test
push
popa
cs
xor
movsb
outsb
sbb
inc
mov
roll
pop
add
sbb
sub
je
sbb
push
inc
inc
dec
mov
ljmp
sbbl
add
push
jle
in
xchg
punpckhdq
xorl
inc
xchg
andl
shrb
ror
dec
mov
add
push
rclb
cs
out
loopne
pop
inc
stos
or
jge
popa
mov
fsubp
je
fs
aad
pop
sbb
push
xchg
mov
add
outsl
imul
xchg
or
rorl
aam
mov
sbb
ret
sbb
aaa
or
jp
popa
add
cld
xchg
or
and
push
or
jg
sbb
orl
fstps
adc
or
adc
jnp
cmp
add
push
xor
add
mov
and
xchg
ret
or
mov
jno
sub
adc
lcall
sbb
lret
xchg
dec
pusha
out
add
push
push
pop
int
jg
inc
test
push
inc
jge
mov
cmp
jne
xorb
mov
or
jbe
jno
ljmp
ds
movntq
out
mov
cmp
leave
mov
sub
insl
or
fwait
and
pop
pop
scas
je,pt
push
push
add
jle
jbe
push
pop
sbb
sbb
sti
mov
lcall
repnz
inc
and
pop
pop
pushl
sub
mov
dec
subb
and
mov
rcll
dec
mov
jle
lods
push
es
out
cmpsb
cmp
sbb
and
xor
in
jbe
mov
xchg
ds
xchg
or
jb
mov
lret
add
or
and
shlb
adc
data16
push
mov
add
aas
add
inc
cmp
jae
xor
and
xchg
sbb
lods
push
or
jmp
dec
inc
daa
ljmp
mov
pop
addr16
aaa
xor
cmp
push
ja
mov
and
les
icebp
xorl
jbe
inc
shrb
xchg
xor
xchg
jmp
shrl
imul
add
imulb
nop
dec
enter
or
pop
cld
in
dec
mov
or
pop
xchg
jle
inc
outsl
mov
je
mov
xchg
mov
cmpl
dec
sbb
mov
or
icebp
arpl
stos
inc
sbb
adc
fistpll
mov
mov
cmpsb
dec
rorl
xchg
xchg
add
inc
xchg
adc
push
mov
sbb
pop
mov
sub
mov
sbb
push
bound
addr16
ret
push
mov
mov
mov
pusha
cld
jg
or
and
mov
mov
cli
icebp
add
cmp
jle
add
mov
push
cmp
je
cmp
or
fiaddl
and
ja
test
jne
push
test
pop
icebp
arpl
adc
push
fnstsw
add
jmp
jmp
sub
dec
mov
cltd
and
in
inc
and
test
inc
stos
jle
cltd
dec
or
push
inc
or
add
mov
inc
in
jmp
lret
lods
lea
les
xchg
pop
fs
shl
cmp
xchg
loopne
adc
pusha
sahf
push
xor
or
cmp
xor
rol
je
and
test
sbb
fcoml
ret
popa
lret
xchg
aam
push
xchg
loop
push
fmul
lea
clc
cmpsl
rorl
je
pop
xchg
xchg
add
or
cmp
and
ja
mov
shlb
push
lret
inc
sti
jmp
push
sti
inc
sbb
mov
dec
jns
ja
mov
das
dec
inc
lods
jmp
push
mov
inc
dec
mov
adc
popa
pop
icebp
xchg
sub
dec
xor
mov
dec
insb
mov
adc
xor
scas
inc
sbb
xor
lcall
les
push
sub
add
push
and
inc
icebp
add
popa
aam
sbb
add
add
fnstsw
test
hlt
and
and
add
push
sub
aam
cwtl
mov
sbb
fldl
icebp
push
addb
movsl
xor
and
add
sti
fstpl
and
insl
clc
push
je
aaa
les
shll
out
out
fnsave
jnp
xchg
ljmp
push
fsub
pop
fsubrp
pop
jge
hlt
in
movsl
loope
mov
out
out
adc
fmull
jno
hlt
pop
add
and
xor
push
rolb
scas
add
jge
mov
sub
dec
je
sbb
add
es
nop
fwait
xchg
adc
in
iret
mov
lcall
ss
iret
lret
push
movaps
push
iret
out
sub
test
xor
or
movsb
scas
inc
mov
jp
cmp
mov
sbb
std
sub
pop
lock
dec
pop
clc
add
iret
dec
sub
xor
pop
dec
jne
fnstcw
adc
or
adc
add
aaa
cmp
jl
push
or
sahf
xorb
cmp
ret
jp,pn
inc
or
jl
repnz
sbb
adc
lea
aas
or
ja
sbb
mov
dec
and
xor
fstpl
and
push
pop
xor
xchg
pop
pop
jns
push
push
adc
cli
or
mov
dec
sbb
lret
xor
add
fwait
orb
dec
and
data16
add
jne
and
dec
repnz
adc
or
adc
sub
fsubs
sbb
sub
push
jecxz
shr
pop
movsl
pop
mov
subl
dec
shlb
ret
or
cwtl
fs
or
mov
enter
insb
and
lods
cmp
dec
sbb
push
mov
imul
jecxz
lret
pop
jns
fnsave
pop
push
or
mov
push
loope
es
mov
dec
jbe
lock
jbe
mov
int3
and
dec
loopne
and
fcomi
gs
or
jbe
jl
or
in
cmpsb
pusha
in
push
xor
fwait
and
fstl
inc
inc
js
sbb
push
xchg
in
es
dec
cmp
push
or
arpl
add
xchg
and
or
test
mov
and
pop
daa
push
cwtl
call
rorb
movsl
or
pushw
ja
repz
mov
sahf
out
cmp
call
mov
xor
out
push
mov
out
shl
repnz
adc
ss
pop
imul
pushf
lods
mov
iret
loopne
add
out
inc
xor
in
cs
push
rorb
sub
or
and
dec
loopne
inc
icebp
add
pop
leave
aam
inc
lock
adc
or
les
hlt
mov
mov
fadd
inc
imul
leave
in
sbb
add
and
sbb
mov
rcrb
push
or
repz
sub
lret
add
addl
mov
roll
push
mov
push
push
xchg
pop
jl
popa
cld
dec
jp
add
push
jno
sub
xor
mov
sbb
fldt
and
add
inc
lock
inc
sbb
mov
pop
ret
fcoms
imul
sub
xor
inc
inc
dec
sub
add
int
rcll
out
add
adc
popa
add
das
js
into
daa
push
mov
rcr
add
add
iret
ror
rcll
sub
rcrl
lret
push
lahf
mov
add
leave
lods
dec
cmp
mov
addl
roll
push
aam
sub
loop
sub
and
xchg
add
mov
cmp
ret
jmp
out
decl
jecxz
lock
mov
enter
cld
shlb
popl
cmp
nop
inc
cwtl
add
lods
in
fdivr
das
sub
jle
jo
bswap
mov
add
adc
inc
sub
loopne
clc
inc
cs
push
popa
add
cs
add
call
in
dec
pop
add
fucom
arpl
sbb
xorl
cmpsb
pop
outsl
in
in
call
mov
fs
push
adc
leave
or
or
add
mov
andb
popa
lock
add
adc
movsb
pop
mov
or
cmp
daa
mov
xchg
xor
out
daa
inc
scas
movsb
cltd
or
inc
movsb
inc
fwait
add
lcall
xchg
add
out
jb
insb
decb
push
add
in
nop
pop
fistl
xchg
add
or
sbb
xor
mov
and
cmpl
mov
movsl
aad
inc
mov
loopne
scas
push
push
xor
inc
es
add
pop
mov
clc
mov
sub
pcmpeqd
and
pop
insb
mov
push
cmp
mov
xchg
push
push
inc
add
cld
outsb
hlt
mov
cwtl
fmull
or
dec
adc
mov
dec
mov
cwtl
dec
leave
orb
lcall
sbb
add
pop
sbb
add
add
and
adc
ja
iret
and
mov
in
add
cmp
xchg
push
arpl
mov
sbb
mov
dec
pop
mov
subb
leave
or
rcrl
arpl
lds
psllw
lahf
std
out
or
add
repz
adc
enter
jl
and
js
sub
push
xor
loop
add
or
imul
xchg
gs
jl
push
inc
test
mov
ficoml
into
or
and
push
or
xor
add
lods
add
rcl
sbb
jne
dec
adc
orl
jg
cmpl
add
and
xor
stc
sbbl
xor
adc
jecxz
and
adcl
add
inc
mov
test
push
add
xchg
jo
orl
movsl
xor
xchg
aad
test
dec
xchg
cmp
dec
or
in
or
mov
push
aad
insl
out
or
add
insl
test
add
out
sahf
std
jne
adc
xchg
or
inc
enter
push
mov
push
or
cltd
lahf
mov
push
inc
sbb
xchg
scas
nop
xchg
add
adc
es
cwtl
movl
cmp
sbb
inc
and
inc
pop
mov
cmp
sbb
sub
xchg
or
pop
and
adc
adc
adc
sbb
push
and
dec
es
add
or
stos
inc
xor
rolb
mov
loop
xchg
mov
xchg
rcrb
cs
dec
add
sub
sub
pop
incl
and
xchg
or
cmp
push
lods
cmp
mov
jno
xor
mov
pop
push
jae
shl
sbb
stos
and
lods
mov
and
and
add
lods
mov
mov
dec
cmp
sbb
pushf
arpl
sbb
cmc
inc
push
add
lock
push
mov
and
les
or
nop
mov
shrb
cmp
mov
adc
jmp
and
pop
add
adc
cmp
lret
mov
nop
mov
and
sub
pop
mov
inc
ljmp
leave
imul
in
xor
movsb
in
or
cmp
xchg
or
adc
dec
add
pop
jo
inc
and
and
mov
xchg
cmp
xor
sub
andl
pop
adc
sub
enter
shlb
test
pop
inc
sarl
ljmp
adc
call
bound
push
arpl
sub
mov
cmpsb
call
or
jns
inc
aam
push
fbstp
mov
inc
imul
sbb
movsl
ss
sbb
xor
je
dec
aaa
fstpt
sub
jne
fldl
bound
fsubl
aam
icebp
fmull
loopne
mov
fildl
sbb
adc
addl
sar
push
jp
add
cld
aaa
and
push
adc
push
movsb
adc
xchg
cwtl
push
pop
fst
jae
adc
je
push
push
rorl
pop
and
mov
xchg
xchg
sbb
jmp
inc
sub
jno
ja
sbb
ds
scas
and
push
lret
add
lahf
xor
clc
xchg
cmp
in
lret
ds
xchg
orb
push
and
adc
inc
add
orb
dec
adc
jl
mov
popl
movsl
test
push
add
mov
daa
insl
jge
cmp
jbe
pusha
add
jns
pop
jmp
dec
or
fadds
lods
push
mov
push
mov
adc
pushf
inc
enter
adc
es
icebp
add
mov
dec
lock
mov
ret
rorl
sbbb
loop
or
cmp
call
push
mov
iret
mov
cmp
or
pop
test
rcrl
add
add
adc
push
and
stc
mov
push
sbb
jle
outsb
mov
idiv
shll
imulb
ret
or
adc
jl
shr
and
cli
inc
jl
or
sbb
mov
jle
xor
jle
cmp
je
adc
push
mov
mov
push
add
inc
jmp
movb
mov
push
inc
incl
stc
add
pop
cmp
jbe
in
xor
enter
dec
adc
and
iret
xor
dec
lea
test
les
xchg
push
imul
xchg
add
into
jbe
out
add
add
lods
loop
sti
movzwl
add
or
dec
or
sbb
push
lock
in
hlt
incb
push
in
sbb
mov
rcrb
cld
inc
repnz
push
mov
dec
faddl
dec
jecxz
xor
sub
loope
sbb
push
push
push
sub
push
in
dec
dec
mov
xchg
test
mov
add
xchg
fldl
dec
xchg
sbb
jnp
mov
lea
mov
pop
adc
xor
add
inc
xchg
sbb
fcoms
dec
adc
sub
imul
ret
mov
or
shrb
and
push
adc
aam
dec
repz
jnp
mov
mov
enter
add
movsb
adc
fs
rcrb
push
push
lods
adc
pop
dec
gs
pop
mov
in
fldl
scas
rclb
out
push
push
pop
push
mov
push
scas
mov
mov
or
daa
push
mov
test
push
iret
out
fisubl
sbb
jns
cs
inc
lcall
cs
jge
es
xor
xchg
subb
aas
cltd
ja
call
or
dec
call
pop
es
sbb
sbb
int3
out
sbb
or
jnp
enter
push
push
in
push
add
dec
imul
and
dec
sbb
mov
and
pusha
jae
shrb
shr
mov
xchg
pop
inc
ja
adc
imul
inc
loopne
test
push
in
nop
and
idivb
and
push
mov
push
ja
and
pop
imul
xor
mov
fisubl
push
daa
jns
fwait
cld
rclb
push
insl
sub
push
testb
inc
in
inc
ficoml
fisubs
cltd
test
mov
dec
cwtl
dec
nop
cmp
andb
jns
leave
adc
xchg
dec
jo
in
in
lods
shld
test
fs
int3
leave
in
aad
or
pop
adc
sub
sub
and
add
and
or
sbb
sub
mov
xlat
adc
push
in
mov
xor
movsb
xor
cmpsl
iret
xor
loopne
test
sahf
push
inc
cltd
in
mov
fadds
push
push
fwait
loopne
shlb
dec
mov
add
pop
js
test
fldz
mov
sahf
mov
pop
mov
icebp
pop
int3
sbb
fmull
pop
inc
scas
fildl
xlat
ret
gs
nop
fmul
adc
inc
ja
dec
ret
mov
sbb
cmpsb
lods
adc
ret
jle
mov
sub
inc
call
mov
cwtl
push
repnz
add
pop
enter
mov
xchg
pop
mov
xchg
or
sbb
or
dec
insb
rcl
lret
popa
in
push
pop
push
add
mov
fcoms
dec
add
mov
rorb
or
loop
mov
or
cmp
add
insb
pop
nop
addr16
nop
call
push
push
push
push
ret
les
in
mov
int3
dec
mov
xadd
inc
jb
into
adc
mov
leave
sbb
movsl
les
sbbl
outsl
push
or
push
and
mov
dec
cmp
gs
xor
dec
cmpsb
orl
jo
add
movl
add
dec
mov
jo
test
xor
push
mov
dec
mov
mov
fwait
aaa
xorb
inc
inc
sub
fcoms
sub
ds
adc
xchg
ss
xchg
adc
dec
fisubl
inc
lcall
fisubs
lcall
movsb
test
mov
and
pusha
adc
rcrb
or
pushf
add
cmc
or
pop
push
test
mov
xor
push
cmp
int
dec
pop
sub
lock
cmp
psubsw
jns
sub
hlt
xchg
insb
or
add
and
inc
xchg
push
or
xorl
jge
jmp
ret
dec
push
fs
and
in
add
mulb
push
imul
aam
or
mov
xchg
push
mov
pop
adc
aaa
popa
sbb
cs
push
or
pop
jp
pop
fcmovnb
data16
filds
loop
iret
mov
jmp
cmp
ja
fcomps
into
adc
add
sub
popa
dec
or
push
lahf
pop
xlat
push
push
push
popf
sbb
xchg
lret
inc
mov
mov
or
les
sahf
loop
decl
test
lret
adc
sar
jb
push
mov
adc
mov
shrb
or
lods
lods
or
mov
xor
pop
cmp
adc
incl
jl
inc
cmovs
or
dec
in
mov
mov
mov
into
or
add
xchg
adc
or
out
sysenter
or
lods
pop
xchg
and
pop
and
pop
or
or
not
or
mov
mov
adc
xchg
in
cmp
pminub
cmp
push
pop
movsl
push
loopne
push
sbb
or
or
xchg
ds
pop
out
es
add
sbb
je,pt
inc
aam
sub
mov
icebp
clc
sbb
fmul
push
rorl
loopne
pop
mov
xchg
pop
push
stos
pop
dec
jmp
fmull
rcrb
loopne
js
int3
inc
dec
pop
sub
adc
fmuls
adc
cmp
icebp
sub
rcll
dec
pop
shll
loope
adc
fsubr
ljmp
and
cmp
push
sbbl
cmc
clc
mov
dec
rorl
enter
pushl
xchg
loope
or
sbb
cmp
or
xchg
call
jbe
cltd
fwait
push
pop
add
sbb
fsubs
iret
pop
ljmp
fcmovne
cmp
push
pop
and
aas
sbb
test
nop
xchg
xchg
inc
sub
out
je
or
mov
dec
inc
sbb
inc
xor
in
adc
adc
mov
fdivs
adc
loopne
inc
cmp
lock
insl
pop
nop
add
jmp
ds
or
pusha
mov
push
enter
pop
push
add
xor
xchg
sub
mov
orb
dec
sub
adc
or
jae
inc
clc
and
xor
mov
aam
jo
stos
and
jge
std
cltd
cmp
ja
sub
fsubr
pop
pop
xchg
cmp
out
mov
xchg
cmp
adcl
or
mov
shll
aam
cmp
sub
pop
push
cmp
inc
cmp
in
xchg
out
cmp
es
mov
cmp
adc
cmp
sub
rol
call
aam
js
inc
sti
out
mov
xchg
and
push
pop
pop
leave
popa
test
add
outsl
dec
or
push
mov
lock
xor
push
iret
dec
jp
push
push
xor
in
and
mov
dec
mov
orl
jo
mov
cli
out
data16
js
pop
cli
lret
imul
adc
ret
xchg
pop
and
hlt
dec
repnz
je
jl
cmp
leave
or
es
lock
inc
ret
push
sbb
xchg
lret
cltd
aam
jnp
push
stos
push
outsb
pusha
in
int3
pop
xor
popf
pop
sub
add
lods
add
push
xor
xchg
and
int3
jbe
add
cld
push
adc
xorb
mov
gs
add
or
inc
rorb
fs
mov
outsb
movsl
add
xchg
int3
inc
iret
arpl
jbe
movsb
mov
cltd
pop
jp
scas
jle
mov
pop
rol
out
loopne
scas
or
push
cmp
call
mov
push
cltd
xor
call
inc
ret
addr16
scas
dec
cmpsb
mov
mov
inc
push
lods
and
jne
loopne
mov
lcall
or
nop
or
test
aaa
push
mov
sbbl
adc
and
xchg
es
pop
icebp
lea
push
mov
insl
fisttpll
add
or
pop
sub
fld1
inc
sub
sti
add
inc
in
xchg
test
mov
sarb
xchg
ucomiss
in
pop
xor
adc
mov
and
nop
xchg
mov
add
adc
addr16
in
add
push
cmp
es
push
out
cmp
push
and
sbb
dec
push
jg
lahf
lret
inc
int3
add
push
dec
loopne
dec
lods
adc
mov
mov
test
mov
and
repz
mov
add
es
stc
cld
adc
adc
and
mov
add
push
repz
jne
pop
dec
push
xor
mov
fsubs
adc
sbb
inc
mov
mov
jnp
sti
or
mov
mov
sub
jbe
cmpl
jnp
ds
pop
inc
sbb
in
fld
cli
push
popa
es
clc
pop
xor
sahf
push
or
xchg
sbb
dec
arpl
add
add
rorb
or
add
or
push
xchg
mov
in
and
fisubs
lret
push
or
mov
cltd
cmp
dec
jp
mov
adc
jbe
pop
push
push
pushf
adc
sarb
lods
mov
mov
adc
lcall
jne
jbe
fmull
addl
xchg
adc
inc
mov
andb
push
sub
mov
adc
pop
push
cmp
cs
addl
add
inc
cmp
jb
dec
outsb
stos
jp
mov
push
dec
pop
or
mov
sub
lahf
and
cmp
jae
mov
cmp
call
mov
pop
mov
add
jmp
loope
xor
adc
xchg
add
aam
aam
stos
jne
test
cmc
ds
push
fdivrl
xchg
andb
inc
ret
mov
push
pop
and
lahf
pop
pop
iret
sbb
xor
inc
pop
cmpsl
inc
mov
jae
and
cmp
sub
dec
push
cmp
cmp
dec
test
and
fwait
test
and
addb
bound
por
lock
mov
jecxz
adc
test
idiv
pusha
pop
push
mov
push
sub
out
pushf
sbb
sbb
xor
or
push
arpl
les
and
push
shrb
adc
or
inc
adc
sub
dec
imul
mov
and
shrl
aam
mov
test
sbb
pusha
dec
pusha
or
daa
jmp
adc
jne
dec
dec
pop
push
add
push
sbb
or
xor
sbb
or
sub
test
shrb
xor
sub
stos
pop
jmp
jnp
xor
out
or
fists
inc
cmpsb
and
lcall
push
add
mov
cmp
inc
sub
js
jge
push
push
fisubrl
addb
out
cmp
mov
sahf
outsb
insl
ret
or
adc
test
aad
cwtl
mov
jle
add
test
rorb
lret
cmp
fisttpl
add
add
mov
nop
int
sbb
xor
push
mov
data16
adc
or
in
sbb
sbb
or
mov
js
shll
aaa
and
cmpl
cmpsb
xchg
push
adc
and
pop
das
sbb
push
jmp
sbb
cmp
stc
popf
fs
dec
push
mov
sbb
sub
add
cmpxchg
push
mov
test
xchg
int3
nop
or
dec
inc
pop
push
cmp
popf
into
fimull
push
bound
cs
dec
les
daa
cltd
dec
lret
in
lret
or
and
push
movl
xchg
clc
pusha
add
inc
push
fsub
test
imull
sub
out
test
fbld
orl
in
xchg
cltd
inc
mov
mov
dec
loopne
or
mov
frstor
ss
xor
push
jp
repnz
xchg
cmpsl
or
jmp
aas
or
mov
out
sar
and
add
leave
push
xchg
add
notb
and
inc
pop
loop
popf
or
mov
dec
daa
pusha
adc
sub
aaa
out
das
andb
aad
idivl
inc
and
ss
cld
dec
addr16
and
adc
inc
mov
mov
or
testb
sub
sbb
adc
lods
sub
or
or
add
test
lea
test
sub
push
in
and
mov
out
into
and
or
leave
and
frstor
cmovs
sub
cmc
cmp
lret
add
mov
pop
push
mov
cmp
jge
adc
dec
fadd
xor
inc
sub
add
inc
es
adc
dec
daa
push
das
sub
xor
adc
mov
loopne
xor
xlat
jne
push
pcmpgtd
push
inc
cwtl
pop
test
psrlw
adc
out
or
xchg
mov
jp
sbb
sub
jo
rcrl
punpckhbw
jo
inc
dec
sbb
push
and
pushf
mov
loope
or
push
mov
adc
add
fnstenv
testl
scas
inc
scas
sbb
jo
push
inc
sbb
and
cmp
push
inc
or
pop
insb
lret
add
xchg
jmp
push
pop
inc
inc
movsb
and
mov
cmpsl
ss
xor
mov
pop
test
loopne
mov
rcrl
int3
jbe
or
shrl
fistps
ss
js
test
inc
xor
push
jne
xlat
adc
sub
outsb
and
jp
and
test
adc
adc
iret
push
rol
cmp
mov
scas
or
jge
sbb
imul
inc
movsl
adc
and
cmp
cmpsb
scas
push
xor
and
out
pop
out
mov
popa
popa
les
pop
stc
fsubl
adc
push
xor
jo
mov
iret
cmpsl
and
push
movsl
and
sbb
push
imul
mull
add
in
and
shrb
rcrl
aam
in
or
push
jmp
xchg
sub
and
mov
mov
push
pop
push
dec
aad
jmp
lds
ret
push
sub
arpl
lods
sti
mull
leave
aad
dec
rorl
pop
in
mov
xor
stos
adc
push
sub
pusha
xor
out
sbb
sbb
add
in
jl
or
lods
ds
mov
sbb
and
pop
or
sub
in
mov
clc
mov
add
xchg
pop
sub
and
and
and
sub
test
pop
inc
aam
mov
lods
repnz
pop
testb
fldt
add
xchg
xor
sub
inc
fsubl
popa
imul
in
and
or
add
push
rolb
mov
or
inc
addr16
add
inc
push
jno
and
pop
faddl
mov
adc
nop
pop
add
sbb
sub
rclb
lea
call
jmp
fimull
dec
lods
push
les
sbb
xor
add
pop
sbb
or
sub
add
loop
adc
adc
aam
pop
pop
xchg
mov
int
push
pop
cmp
cmpsl
aad
add
sbb
xchg
push
ret
dec
lods
lock
push
mov
sub
push
add
push
sahf
clc
mov
shr
repz
and
movsb
into
dec
ljmp
test
xchg
xor
add
cmp
push
adc
jge
jns
pop
ret
or
loopne
mov
add
inc
jbe
adc
leave
imul
rorl
lock
hlt
push
add
adc
mov
mov
int3
ljmp
shrl
add
mov
js
lds
add
into
add
sub
or
fldl
mov
and
lret
cld
push
push
add
hlt
aam
xorb
sbb
gs
cmp
pop
sahf
jp
xor
nopl
andb
mov
fstpl
or
mov
dec
mov
scas
pushf
cli
add
sbbb
push
cmp
or
push
dec
cmp
pop
pop
push
adc
pop
push
mov
clc
test
xchg
ja
or
cld
cmp
je
or
jl
mov
aam
adc
pop
enter
push
mov
or
xor
mov
xchg
push
cmc
es
shr
shl
dec
pop
psubw
ja
push
or
cmp
xor
fdivrs
idiv
inc
xor
addl
push
inc
in
or
int
push
pop
cli
inc
test
cmp
or
add
fists
in
das
ss
cmp
jb
jmp
jb
imull
fildl
hlt
ja
fbstp
addb
mov
dec
subl
inc
mov
cmp
adc
arpl
loopne
or
or
sahf
jne
mov
pcmpeqw
xor
pop
jnp
mov
js
dec
inc
sbb
inc
das
adc
xor
cmp
leave
pop
pop
cwtl
add
xor
inc
cmpsl
push
xchg
addb
movsl
testb
push
pop
ret
pop
push
int3
jle
pop
das
dec
test
xchg
insb
mov
es
add
cmp
or
mov
sub
mov
ja
movsb
lcall
fs
lahf
das
adc
sbb
push
andl
je
push
xor
in
lea
cli
dec
fcompl
dec
xor
sbb
test
mov
sub
pop
dec
pop
sub
mov
cs
push
inc
imul
xchg
dec
pop
call
inc
or
ret
lcall
fistpll
aaa
xchg
or
xor
sub
or
sbb
xchg
jmp
or
add
lods
add
les
hlt
dec
pop
mov
cmp
popa
push
add
cmpl
dec
mov
push
rorl
sbb
je
and
dec
dec
test
ds
adc
pop
push
add
loope
or
add
cwtl
nop
push
mov
and
sub
imul
pop
rclb
push
sub
add
xchg
cli
add
addr16
push
mov
pop
mov
dec
ret
add
xor
jecxz
jge
inc
add
cmp
fildl
scas
dec
adc
add
add
pusha
rorb
cwtl
pop
repnz
test
cmp
or
inc
fdivl
xchg
jg
jno
aad
ret
jmp
icebp
and
mov
fcompl
or
or
push
jmp
test
adc
and
cwtl
shlb
cltd
les
rclb
inc
jmp
pop
add
mov
mov
aaa
sub
enter
leave
ret
cmc
out
mov
add
add
inc
clc
sbb
dec
dec
sub
xchg
daa
cmpsb
sbb
pop
sbb
or
add
ret
cmp
jae
inc
cmp
test
cmp
mov
aad
pop
pop
add
call
add
jge
pop
loop
xor
mov
nop
dec
mov
insb
insb
jno
popa
cli
xor
sahf
jo
rclb
and
jg
call
and
add
or
pop
adc
mov
mov
xorb
or
add
bound
loopne
popa
add
leave
pop
fwait
in
dec
xchg
add
and
and
loopne
or
loopne
ficoml
arpl
dec
lods
loopne
es
mul
loopne
pusha
icebp
adc
pop
nop
push
adc
pop
lock
pop
int
call
and
inc
in
mov
leave
ss
jo
ret
add
xor
inc
test
sub
pop
xor
add
push
cmc
dec
jp
sbb
inc
and
and
mov
outsb
jns
jno
or
fldt
loopne
mov
pop
xchg
outsl
add
mov
jecxz
and
adc
out
mov
ficoml
aam
dec
xchg
cmp
add
cs
test
jl
cltd
rcr
ret
adc
cmp
and
adc
sub
push
mov
enter
dec
sahf
xchg
xchg
rcll
and
mov
loope
mov
push
outsl
in
or
jnp
arpl
pop
setge
fbstp
adc
lret
dec
dec
jo
xor
aam
shl
or
mov
jmp
mov
xor
cmp
push
pop
jb
pop
cmp
or
jne
call
push
mov
sub
icebp
fdiv
adc
or
mov
and
adc
imul
mov
or
icebp
inc
dec
or
push
adc
xchg
or
jmp
mov
jns
loopne
lea
dec
dec
push
push
movsl
push
jns
movzbl
push
or
in
in
outsb
sub
call
cmp
lods
fcompl
in
inc
jmp
adcl
add
nop
or
sbb
daa
mov
push
lock
jbe
inc
pop
das
test
add
test
sbb
scas
outsl
xor
lds
pop
xchg
inc
sbb
sbbl
les
lods
mov
adc
or
test
rol
inc
add
fldcw
xchg
mov
lea
dec
sbb
mov
dec
sub
imul
or
mov
andl
cmpsb
add
and
mov
sbbl
or
lcall
enter
iret
jbe
jae
out
arpl
jbe
lea
mov
sub
ret
aaa
sarb
cld
int3
popf
insl
mov
sub
push
outsl
sub
xor
jae
mov
jge
pop
push
mov
aad
mov
push
gs
fdivr
cmp
pop
call
ffreep
jne
push
aad
mov
push
decl
into
mov
mov
xchg
push
jmp
push
sub
inc
fisttpll
jle
scas
xchg
mov
scas
ret
cmp
jb
xor
jge
movsb
sbb
das
or
push
cmp
sub
bound
adc
mov
incb
jne
jbe
dec
sub
or
and
xchg
xcrypt-ctr
cmpsl
pop
dec
adc
jo
pop
bound
pop
ds
jbe
dec
pop
jmp
mov
jbe
lea
sbb
and
pushl
push
push
data16
xor
shrl
pop
or
lods
pop
mov
xor
mov
cmp
int3
adc
and
mov
popa
add
jl
nop
mov
sbbl
mov
lea
outsb
inc
pmulhw
imul
imul
mov
mov
les
adc
cmpsb
and
sub
sbb
and
pop
dec
dec
clc
jge,pn
push
inc
push
inc
add
sub
mov
ret
push
and
jl
push
and
push
mov
lea
inc
jo
sbb
mov
cmp
lret
mov
pop
add
in
fiadds
xchg
adc
push
insl
mov
shll
lock
sbb
rcl
es
lret
push
adc
mov
jmp
sbb
dec
push
and
int
nop
push
push
js
dec
sbb
and
jge
test
adc
mov
push
adc
and
scas
adc
pop
sbb
and
shll
dec
hlt
jne
mov
push
mov
je
fwait
pop
lods
pop
in
cmp
pop
pop
dec
aaa
dec
lock
sub
nop
sub
push
sub
insl
dec
mov
daa
loope
sbb
test
inc
clc
in
js
add
rclb
jae
or
and
loope
test
scas
mov
jmp
mov
jge
add
cli
addr16
cmp
push
xor
xchg
imul
pop
loope
repz
inc
mov
push
in
dec
enter
mov
sub
sar
or
mov
and
arpl
mov
rclb
movb
je
or
mov
dec
push
adc
pusha
rol
push
xor
insl
loopne
imul
aas
jg
add
xchg
and
inc
xor
addr16
inc
push
pop
jmp
lea
ret
jmp
pop
jne
daa
lret
push
fnstenv
pop
sbb
push
inc
ljmp
dec
jg
adc
or
clc
jmp
push
mov
pop
cmp
in
pop
mov
jp
pushf
jle
mov
sti
adc
inc
xor
xchg
and
adc
and
sbbl
stos
add
jne
xchg
imul
jae
dec
mov
inc
repnz
dec
mov
mov
mov
inc
lds
fs
mov
test
pop
push
loope
inc
mov
sbb
mov
adc
sub
inc
imul
inc
sub
mov
pop
roll
add
cmpl
and
xor
adc
cmp
xor
cmpl
add
push
add
mov
and
push
clc
filds
mov
jp
fcomps
rcrb
push
and
jne
adc
inc
mov
adc
sbb
jge
mov
cmp
xchg
xchg
pushl
pop
mov
mov
cmp
or
or
sub
adc
les
sub
pushf
jmp
dec
test
sbb
les
or
push
ret
mov
push
push
mov
ret
sbbb
adc
xchg
sub
push
enter
mov
add
inc
and
xor
sub
cmp
push
dec
in
cmp
xlat
mov
lcall
sub
filds
jle
es
lcall
or
out
mov
cmp
scas
dec
xchg
adc
aaa
sbb
fbld
pop
xchg
push
push
sub
adc
pop
clc
jne
loopne
test
sub
inc
dec
cmp
add
iret
out
sub
xor
push
mov
jne
daa
push
shrb
fadd
inc
add
ljmp
mov
dec
ret
sub
cmpsb
stc
ret
sbb
ss
inc
fwait
imul
call
adc
dec
sbb
push
jb
and
push
inc
enter
mov
ret
xchg
mov
push
scas
sarb
mov
data16
mov
add
or
xlat
push
imul
lahf
push
jle,pn
jmp
mov
call
xchg
call
xor
mov
jae
add
pop
dec
xchg
or
adc
or
test
add
adc
nop
cmp
pushf
or
mov
or
push
popf
xor
les
cs
mov
push
sub
adc
popa
jne
mov
in
push
xchg
fstpl
xchg
ja
mov
leave
xor
je
add
pop
out
inc
dec
pop
test
jnp
mov
scas
mov
mov
push
jmp
out
in
fdivs
xor
cmp
lret
cmp
push
push
jp
jns
fldl
aas
push
mov
push
daa
adc
cli
push
fistpll
jbe
mov
call
mov
fisubs
lret
sub
mov
vmread
sti
rcrb
mov
dec
fsub
mov
xchg
leave
cli
insl
sarb
and
shl
aad
mov
lret
pop
dec
add
jb
aam
push
mov
add
movzwl
inc
mov
inc
into
cmp
out
ret
imul
pop
jp
adc
cltd
mov
pop
cmp
dec
into
xor
push
xchg
sub
cmp
call
or
std
mov
lret
aam
pop
mov
sub
insb
mov
fiadds
fs
out
push
rolb
xchg
dec
in
adc
adc
in
add
cltd
and
add
jnp
sbb
je
push
scas
inc
cmp
mov
fadd
test
push
loop
hlt
mov
cmp
sbb
stos
adc
rclb
test
inc
out
jmp
ret
stc
sbb
sti
add
xchg
fiadds
cmp
das
sbbb
aaa
js
lods
es
pop
mov
sti
gs
jmp
movsl
push
cld
or
push
movsb
mov
dec
ljmp
int3
or
mov
shr
mov
inc
mov
jg
inc
cmp
jle
movb
cmpb
pusha
or
jne
hlt
in
push
fldenv
mov
or
sbb
lds
mov
mov
push
or
push
in
cmpsb
add
jb
and
push
cld
test
push
push
xor
and
sbb
xor
scas
sub
test
imulb
andl
js
mov
cmpsl
leave
cmp
add
dec
jo
sbb
jmp
and
cmp
pop
test
hlt
jns
push
or
sti
push
loope
int
or
push
push
dec
fldl
xlat
push
cmp
mov
xor
mov
sbb
fadd
leave
js
data16
jno
jecxz
gs
cmp
loop
lock
and
mov
outsl
adc
clc
or
les
mov
push
add
xchg
jle
aas
test
call
sbbb
add
add
or
inc
insb
cld
dec
xor
mov
in
movsb
insl
aam
xchg
push
add
add
in
in
push
pop
or
sti
in
or
jnp
or
jbe
jmp
jae
jae
or
por
jmp
jae
jae
adc
pop
adc
push
adc
dec
adc
dec
jae
jae
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jae
sbb
pop
pop
jmp
and
or
and
or
jmp
and
jne
xchg
stos
push
mov
filds
adc
add
movsl
adc
nop
cltd
out
sahf
testb
push
xlat
out
iret
sarl
incl
and
pop
sbb
iret
repz
sub
xor
cmp
inc
dec
dec
iret
repz
push
pop
pop
bound
cmp
repz
jbe
addb
xchg
cltd
in
mov
add
and
or
or
push
movups
adc
adc
push
pop
sbb
inc
in
lcall
sbb
sbb
push
pop
and
and
aas
jp
or
sbb
sub
nop
push
xchg
mov
jge
fildl
adc
mov
and
push
xor
cmp
jle
mov
add
lcall
jmp
out
pop
jne
push
mov
pop
in
jae
sub
xchg
test
mov
xchg
imul
mov
or
jl
std
or
out
push
lock
xor
mov
int
call
dec
cmp
jbe
ss
sbb
inc
lods
add
stc
dec
sub
push
push
rorb
and
inc
or
std
push
add
sub
inc
cmp
inc
mov
repz
mov
mov
loope
repnz
pop
lock
dec
jmp
and
jmp
sbb
testl
aas
add
loopne
sub
jne
cmp
dec
jge
or
scas
or
adc
loopne
fistl
mov
out
xchg
clc
dec
imul
jl
into
sub
add
xchg
jns
adc
pop
cmp
add
inc
xor
fs
add
push
inc
jbe
test
test
cmp
sbb
scas
sarb
pop
xchg
inc
inc
pop
add
test
inc
orb
or
je
mov
add
or
mov
add
xchg
lret
add
jmp
mov
movsb
int
pop
dec
pushf
push
imul
aad
mov
jg
cs
pop
jmp
mov
or
xor
call
jns
fists
mov
sub
fmuls
mov
push
mov
xchg
test
or
xor
jnp
mov
sbb
push
push
cmp
push
dec
enter
ss
xlat
cmc
pop
mov
cmpsl
add
imul
ss
fucomi
add
add
push
or
add
jns
adc
jne
jo
mov
push
add
nop
in
addr16
jne
lock
inc
or
lahf
xchg
pop
ja
adc
scas
add
sbb
push
outsl
outsl
inc
push
jne
imul
aas
inc
scas
les
in
pop
movsl
roll
mov
loopne
sbb
in
mov
pop
xor
les
rorb
ret
and
add
or
mov
sub
mov
sbb
push
mov
je
je
cmpsl
xor
xor
inc
inc
dec
and
and
push
adc
mov
test
push
sub
push
sbb
sub
push
xchg
notl
pop
mov
jp
adcl
push
loop
es
jae
or
add
ficompl
repnz
lret
ficoms
mov
add
mov
fists
loope
sbb
xchg
es
push
mov
pop
mov
pop
push
push
mov
add
push
jae
loope
clc
xor
and
or
insl
add
loopne
add
shlb
add
cmp
and
add
aaa
pop
xchg
sub
push
cmp
add
daa
loop
jecxz
pop
mov
inc
fstl
popf
or
je
push
les
add
cltd
scas
jbe
push
inc
and
inc
add
fidivrl
xchg
mov
outsl
cmp
push
enter
arpl
popa
int3
sbb
in
lcall
enter
aad
xor
mov
stos
outsb
or
mov
cmp
add
and
pop
shlb
shl
icebp
andl
mov
cmp
lahf
jno
jbe
xor
xor
movsl
ds
clc
pop
mov
icebp
jne
xor
lock
aad
enter
adc
push
xchg
push
ret
js
aam
jae
pushf
mov
fisubrs
repnz
testb
outsl
mov
add
repnz
xchg
xor
je
fildl
imul
je
nop
push
sbbb
adc
add
inc
cmp
fmull
mov
mov
fmuls
negb
lock
jns
sbb
loopne
cltd
xchg
inc
es
xor
testl
enter
dec
int3
or
vminsd
dec
testl
loopne
negl
shlb
cmpsl
movsl
fsts
mov
insl
sbb
mov
adcb
pavgb
push
inc
jp
xchg
pop
push
lea
adc
pop
push
push
add
cltd
add
pusha
push
sub
dec
test
movsb
sub
lret
in
into
pop
adc
stos
pop
mov
in
mov
mov
gs
mov
or
pop
popf
repz
cltd
lahf
pop
test
dec
es
xchg
loope
pop
mov
lods
or
add
rolb
shlb
cmp
outsb
fwait
sbb
lcall
dec
add
jg
shr
xchg
in
pop
jle
das
push
mov
and
imul
xor
outsl
sub
sub
and
fdivl
xor
andb
jno
add
pop
popa
xchg
aad
xor
pop
cmpsb
xchg
adc
mov
jo
inc
loope
xchg
mov
rcrb
fbstp
push
iret
mov
in
fs
and
mov
push
fcmovnu
add
xor
mov
in
add
pop
daa
jmp
incl
inc
lret
popf
push
xchg
sbb
cli
dec
adc
dec
push
or
aam
outsl
sub
inc
pop
nop
sbb
add
push
add
adc
gs
dec
mov
push
xchg
mov
sbb
jecxz
in
jmp
divb
cmp
ljmp
xchg
adc
push
dec
rolb
mov
ljmp
loope
push
mov
push
loopne
jno,pn
or
sub
inc
or
push
jbe
jle
mov
jl
or
jne
xor
test
sbb
or
je
cs
rol
sti
sbb
adc
fisubl
rcl
inc
cli
loopne
mov
inc
rolb
rorb
std
imul
cld
roll
adc
push
in
or
mov
mov
int
sub
push
push
arpl
inc
repnz
dec
sbb
and
push
inc
sub
adc
cmp
adc
inc
mov
loop
pop
imul
or
jne
addl
gs
test
pushf
pop
mov
dec
sub
cmp
fmuls
mov
fsub
adc
sbb
and
and
fstpl
xor
fdecstp
cmp
xor
and
lea
add
xchg
and
shrb
mov
mov
into
push
inc
sub
and
fsubs
push
test
divl
iret
pusha
or
sahf
dec
inc
push
enter
cmp
sbb
in
inc
sub
sbb
fidivs
xor
and
xor
add
inc
push
pop
shlb
xor
or
sbb
or
cmp
mov
mov
adc
jmp
mov
mov
pop
pop
dec
pop
adc
in
sbbb
xor
shl
inc
add
nop
inc
xor
or
into
jl
sbb
and
dec
rcrb
nop
in
lock
and
xchg
je
cwtl
pushf
loopne
mov
enter
pop
movsb
add
push
push
xor
test
shrd
xchg
out
inc
mov
mov
jg
xchg
outsb
xchg
xchg
mov
gs
outsb
xchg
enter
cwtl
movsb
xor
fcomp
loopne
pop
xchg
adc
push
out
and
roll
dec
pop
add
dec
orb
inc
incl
add
jg
xchg
repz
push
mov
test
fnstenv
dec
pop
ret
insl
and
cvtdq2ps
xchg
xchg
je
jl
and
inc
cs
jl
jbe
mov
sub
lea
xchg
inc
hlt
cmp
je
dec
mov
lea
or
and
imul
sbbb
lret
and
fildl
addr16
fisttps
xlat
cmpsb
repnz
lods
xchg
hlt
rol
and
cmp
inc
rorl
sub
jne
aas
xchg
hlt
push
pop
xchg
pop
xchg
mov
out
push
lret
ret
xlat
setne
mov
mov
mov
mov
cmp
je
or
in
pop
jne
jge
and
sbb
mov
call
rcrl
les
faddl
or
push
sbb
xchg
int3
sub
xchg
mov
pop
das
sub
daa
insb
je
js
shlb
outsb
sbb
lret
push
fwait
add
and
sub
or
pop
pop
xor
movsb
xorl
jns
add
cli
mov
aaa
cmp
sbb
jecxz
fs
push
pop
cmp
dec
cli
shrb
lret
test
pop
shlb
mov
repnz
sbb
hlt
inc
push
divl
adc
loope
adc
adc
insb
mov
hlt
mov
imul
pop
pop
sub
push
adc
in
test
add
pop
xchg
adc
mov
xchg
clc
cmp
je
cmp
jne
push
inc
pop
inc
enter
add
cmp
mov
push
mov
mov
add
add
xor
cli
orl
mov
mov
mov
in
mov
or
dec
sbb
loop
add
and
js
sbb
les
cmpl
xor
inc
inc
in
and
push
ret
sub
lock
test
call
cmp
jo
inc
imulb
push
push
rclb
imul
cwtl
mov
cmp
jb
and
and
or
in
lods
cmp
dec
add
jbe
jbe
fwait
push
push
jnp
push
les
pop
sbb
scas
in
jge
ss
adc
inc
pop
mov
inc
or
jp
movsb
lahf
inc
adc
mov
mov
adc
push
xor
std
inc
push
mov
jne
push
nop
add
iret
hlt
cmpsl
clc
adc
pop
add
ljmp
add
xor
scas
sbb
mov
adc
pop
cmp
push
dec
loopne
mov
dec
add
in
push
sbb
xchg
popf
das
fcmovbe
out
ss
push
push
imul
sarl
jo
add
inc
mov
xor
mov
ret
lahf
lods
sub
clc
or
mov
sbb
push
jmp
or
or
gs
int
or
jmp
inc
mov
loop
jmp
outsl
sub
ret
dec
xchg
sbb
lcall
lcall
fimull
push
or
push
pop
aaa
or
push
cld
adc
add
xchg
insl
pusha
mov
das
dec
adc
shlb
mov
mov
stos
pop
out
ret
mov
mov
push
aaa
into
shll
push
push
fstpl
js
sbb
fwait
lret
adc
mov
adc
or
inc
add
mov
dec
add
aaa
mov
repz
pop
inc
sbb
andl
test
loopne
jmp
and
jmp
mov
add
jle
mov
sbbl
mov
xchg
jl
dec
xor
into
and
aad
popa
leave
add
fsubrs
inc
mov
and
adc
enter
add
mov
push
xchg
imulb
mov
cmp
sbb
pop
mov
es
xlat
aaa
dec
jbe
xor
push
adc
mov
adc
sub
add
push
in
sub
lods
imul
cs
in
icebp
jmp
ret
sbb
sub
mov
sub
adc
shl
iret
cmp
jmp
jmp
insl
popf
fisttpll
clc
cmp
add
sbb
jmp
lock
daa
cmp
cmp
add
stos
pop
jns
cmp
dec
add
mov
sbb
push
xchg
mov
divl
popf
pop
lea
jae
or
out
loope
adcb
sub
ss
push
ret
or
js
in
pop
data16
test
pop
mov
jp
lea
add
aas
and
icebp
subl
loopne
inc
mov
push
es
sti
mov
pop
adc
je
lods
movsb
adc
push
and
add
xor
mov
repz
xor
mov
xchg
sahf
andl
xchg
rorl
ret
mov
loopne
mov
jne
ftst
repz
pop
xchg
leave
out
and
mov
frstor
pop
push
sti
arpl
and
mov
mov
pop
sub
lea
inc
mov
sub
in
push
xor
inc
or
sbb
shlb
leave
sbb
add
push
cmp
and
lds
test
jle
and
ds
sub
cs
sub
pop
xor
sub
stc
aas
push
shlb
sub
push
int3
ret
aaa
push
fnsave
pop
or
inc
cld
ljmp
int
add
fstl
fldz
fcomp
fnstsw
cld
or
mov
fnsave
pop
fsubr
pop
faddp
aaa
sub
push
insb
cmp
or
mov
ret
rcrb
sub
mov
and
rorb
dec
add
movsb
fnstenv
pop
sbb
lock
aad
nop
xchg
lock
dec
sar
and
push
in
jle
test
xor
fisttpll
cmpsl
xor
aam
je
in
or
dec
call
push
mov
sub
or
jnp
and
sub
mov
mov
jmp
adc
lods
push
pop
mov
ret
add
xchg
or
pop
cmp
imul
add
cmp
mov
cwtl
or
or
push
add
in
outsb
imul
add
aas
push
cld
fs
fsubrp
fnstenv
test
mov
lcall
or
dec
push
enter
sarb
cmpsl
xor
loopne
in
or
lock
mov
mov
repz
or
fs
cmp
push
or
inc
mov
orb
pop
push
xchg
jne
pusha
dec
lock
cmp
mov
inc
xorl
mov
mov
jbe
jmp
or
xor
push
imul
jnp
adc
push
mov
adc
push
leave
add
cmp
mov
rorl
and
cmp
jne
mov
out
adc
pop
insl
push
lods
jne
aad
sbb
daa
adc
xor
out
sub
sbb
inc
std
inc
sub
cmp
sub
cmp
pop
shrl
xchg
js
xchg
nop
add
not
pop
mov
arpl
mov
leave
sti
dec
adc
push
push
test
pop
sub
add
and
gs
mov
ds
add
or
aaa
add
je
push
add
jne
push
cmp
xchg
mov
ljmp
xlat
scas
imul
jl
fs
dec
lret
int
jb
adc
or
push
lock
jb
dec
cmpsl
xchg
cwtl
rorl
les
dec
mov
adcl
pop
push
pusha
sbb
imul
imul
mov
and
rorl
dec
push
stos
mov
pop
dec
sti
or
jns
sbb
mov
pop
fbstp
je
shrb
sub
mov
push
repnz
add
inc
mov
dec
je
mov
lock
or
dec
sub
cwtl
xorl
inc
push
cmp
push
jbe
xchg
add
movsb
and
movsb
adc
or
test
push
dec
ret
xchg
or
lds
push
dec
pop
inc
pop
push
es
mov
pop
movzwl
cmp
jne
or
xchg
mov
push
cwtl
lods
adc
add
jnp
cmpsl
cmp
in
cmp
loope
or
adc
inc
mov
adc
pop
das
cmp
aam
js
test
cs
adc
xchg
mov
into
je
xor
push
jmp
cmp
loopne
inc
test
add
or
jo
jnp
cmp
in
xchg
inc
xchg
xor
test
popf
sub
lods
mov
je
rcl
fcomp
pusha
or
orl
add
push
cmp
or
xor
cmp
enter
lcall
or
insl
call
cmp
jb
cmpl
push
testl
outsb
popa
insb
pop
sbbb
push
dec
jp
cmp
dec
push
push
pop
push
lret
xchg
mulb
inc
add
cmp
mov
inc
xor
jns
aam
cltd
push
xchg
push
push
push
push
dec
fldl
dec
xchg
or
push
dec
bound
mov
lods
rorl
lret
xchg
add
xchg
test
cmp
loop
inc
andb
push
into
add
sub
call
ficoml
xchg
sbb
pop
insl
mov
add
call
mov
mov
cmpsb
aas
xchg
dec
out
je
and
add
jb
push
cld
in
aad
inc
arpl
add
mov
xor
mov
push
decb
jecxz
pop
push
lea
and
mov
cwtl
cli
inc
pop
daa
in
mov
push
or
cmpsb
push
std
xchg
sub
or
rolb
fldlg2
dec
aad
popa
filds
lock
and
adc
test
sub
popa
dec
mov
add
pop
scas
xchg
lock
mov
or
in
mov
mov
std
in
adc
nop
mov
inc
push
pop
enter
push
jb
flds
push
adc
push
adc
cmp
mov
clc
xchg
fsubrs
test
inc
cmp
or
repz
es
add
sbb
lds
pusha
and
imul
loope
pop
add
and
push
pop
mov
js
mov
leave
scas
dec
jo
aad
add
or
aam
pop
or
jb
lret
adc
in
dec
repnz
pop
dec
movsl
or
inc
or
push
sbb
adc
inc
cmp
cmp
call
jo
cmp
mov
ljmp
sub
or
cmp
inc
sahf
cmp
or
mov
xor
cmpsb
mov
xchg
jl
xor
add
stc
pop
pusha
pop
or
test
mov
pusha
inc
cmp
push
mov
sub
in
push
outsl
xchg
mov
add
lock
lods
mov
dec
dec
pop
popa
aaa
nop
and
push
arpl
out
jmp
push
in
mov
sub
push
in
add
sub
sub
mov
xchg
push
push
into
inc
sub
fisttps
into
ret
dec
icebp
push
push
je
rcl
add
xchg
sub
add
mov
ret
das
test
xor
movl
test
pop
mov
in
mov
jmp
lea
enter
sub
cmpsl
mov
add
pushf
adc
repnz
in
sbb
jno
and
push
push
sbb
xchg
jmp
test
push
sub
inc
add
loop
xor
mov
lods
inc
je
subl
addr16
push
push
pop
adc
or
sub
and
or
inc
mov
push
push
inc
rclb
orl
dec
xchg
jae
sbb
iret
dec
test
add
cmpsb
pop
xchg
xchg
push
inc
push
fwait
add
shlb
sbb
bound
dec
or
add
sub
mov
call
popf
rorb
fiaddl
xchg
jg
jb
sbbb
jae
test
movsb
cmp
movsl
adcl
jb
lret
in
push
movsl
add
in
pop
or
or
popf
das
xchg
addb
adc
orl
xor
and
push
pop
incb
or
les
rolb
data16
int
inc
stc
aaa
adc
int3
ds
imul
mov
dec
js
fcoms
xchg
push
or
shl
mov
push
je
in
fs
push
loopne
fsubl
xchg
adc
add
pop
aam
ficoml
xor
lret
fsubrs
incl
int
cmpsb
cmp
jbe
mov
popf
sbb
das
scas
or
scas
inc
cmp
pop
mov
push
mov
dec
or
mov
aam
and
push
sbb
add
dec
xor
sti
mov
shr
or
lret
push
add
pop
bnd
out
dec
or
or
leave
add
mov
and
xchg
mov
jne
in
inc
icebp
mov
mov
mov
push
jae
or
fdivs
lock
enter
pusha
lea
xchg
fnsave
xchg
test
mov
in
or
mov
shrb
rcpps
inc
frstor
aaa
mov
push
movsl
imul
out
pop
mov
js
nop
dec
push
mov
rclb
jp
ret
mov
push
rolb
and
pop
add
dec
add
push
pop
pop
subb
ror
pushf
js
fs
and
lahf
and
add
sbb
jo
enter
mov
and
add
movsb
mov
inc
dec
shll
int
mov
xchg
adc
scas
dec
adc
ret
jns
leave
or
dec
aam
or
dec
or
cwtl
mov
mov
mov
jp
xchg
cmpsb
cmp
mov
and
push
add
adc
sbbl
pop
aas
and
push
pop
push
out
push
add
sbb
repz
inc
outsb
loope
inc
pop
in
cmp
dec
adc
dec
adc
enter
push
sbb
xlat
shlb
pop
adc
dec
dec
int3
or
fisttpll
and
test
outsb
and
jmp
jge
sub
sarb
jne
mov
mov
push
sub
hlt
inc
push
adc
push
cltd
sbb
aad
dec
test
fmuls
cmpsl
push
pop
xchg
and
dec
lret
lods
ds
xor
inc
push
and
pushf
mov
cmp
xorb
aam
lods
imul
loopne
fsubr
nop
insb
loop
nop
cltd
loopne
or
pop
fs
push
push
inc
leave
push
je
sbb
inc
or
loopne
and
pop
adc
xor
mov
inc
pop
sbbl
and
or
clc
clc
das
movsb
mov
fcomps
cmp
je
popf
les
cmp
or
je
push
inc
in
adc
mov
shlb
jl
and
aad
pop
pop
pusha
fstl
lea
ror
sbbl
xor
test
mov
jmp
test
je,pn
or
or
movzbl
rolb
dec
pop
adc
push
adc
imul
dec
jl
cmp
test
jge
mov
lock
jl
mov
andl
sub
leave
sub
hlt
ficomps
mov
inc
in
insl
mov
mov
shrb
mov
jmp
sarl
inc
add
mov
mov
repz
mov
pop
fcomps
inc
cmp
shll
lods
adc
or
fwait
xchg
jbe
les
cmp
lret
xor
adc
cltd
and
or
fnstcw
sbbb
popa
push
call
dec
jl
push
mov
test
sub
repnz
xlat
jge
add
hlt
rorb
push
aaa
sub
pop
or
cmp
out
sub
je
or
je
and
cmpl
jne
mov
mov
jl
adc
mov
pushf
jne
mov
and
clc
sub
mov
mov
xor
test
push
and
jle
adc
test
cld
mov
push
stos
jge
in
mov
mov
dec
xor
push
loop
stos
xorb
lods
fcom
jl
insb
hlt
push
inc
push
pop
test
mov
jecxz
shlb
test
rorb
sub
push
xor
or
pop
sbb
js
mov
shl
jb
std
pop
les
movsb
cld
xor
pushf
cmp
int3
arpl
pop
sbb
pop
mov
js
add
push
cmp
lret
jo
in
dec
rorl
or
movsb
pop
aam
ret
push
xchg
outsl
pop
das
mov
xchg
ja
jo
pushf
cmp
or
call
lods
mov
mov
out
jle
pop
daa
arpl
xchg
pop
adc
in
push
test
loopne
cmp
lahf
dec
dec
das
jl
ret
movsb
mulb
and
push
pusha
dec
hlt
pusha
lahf
loopne
xor
lcall
pop
out
pop
ja
xor
adc
stos
rolb
jae
cmp
dec
pushf
jecxz
or
hlt
mov
push
dec
add
dec
or
push
mov
mov
pop
mov
incl
icebp
stc
mov
or
movsl
mov
inc
cmp
sbb
or
mov
rolb
or
jns
dec
or
add
mov
popf
mov
push
sahf
xchg
ficomps
imul
xor
xchg
insb
xchg
sbb
lret
aam
popf
pop
or
mov
ja
arpl
adc
imul
sbb
mov
int3
add
xchg
shr
inc
into
adcl
aad
and
xchg
inc
add
pushf
arpl
pop
sbb
jl
shr
shl
jmp
push
sbb
cs
xor
sbb
and
nop
add
test
lea
imul
pop
orl
cmp
shrl
cwtl
ljmp
pop
int3
and
fadds
sub
add
or
jmp
lods
xchg
enter
dec
xchg
sbb
enter
and
hlt
movsb
dec
in
loopne
int3
pusha
fisttpll
loope
add
fcoms
das
ss
and
stos
pop
icebp
push
add
lock
or
mov
notb
inc
mov
cltd
lock
inc
in
add
fs
pusha
outsl
pop
sbb
sub
call
fsubrp
mov
push
push
xchg
fdivl
cs
jo
adc
jp
xor
jnp
mov
jp
imul
push
test
in
jo
or
pop
inc
mov
mov
nop
jle
add
rcrl
xor
jnp
pop
push
mov
sbb
in
adc
push
adc
adc
sbb
ret
rorb
cli
imul
repnz
xchg
push
jp
fs
add
sbb
sub
push
insl
lcall
fildl
out
call
bnd
test
add
int3
adc
mov
rolb
dec
subb
fadds
pushf
or
ret
add
xor
lock
jnp
lods
mov
js
mov
call
fdivrl
xor
ret
add
int
popf
lods
xor
push
jne
and
mov
and
mov
push
mov
ficompl
push
xlat
dec
rcl
dec
movsb
pop
inc
jl
repnz
and
sub
adcb
mov
nop
sbb
stc
push
and
xchg
or
test
mov
adc
add
sbb
lods
cmp
pop
xchg
jecxz
xchg
out
dec
sete
fdivs
sbb
sbb
sbb
xor
mov
mov
xchg
aam
inc
or
jno
enter
sbb
out
xchg
das
xor
xor
and
popf
popf
adc
add
or
inc
iret
add
xchg
shrb
pop
hlt
jp
sbb
sbb
adc
mov
push
pop
aam
xor
add
test
mov
mov
or
je
iret
ds
daa
sub
test
pop
add
mov
insl
fwait
mov
pushf
cmp
or
push
add
jmp
lea
fdivrl
pop
cmpsl
mov
push
cmpsl
frstor
pop
adc
xor
cli
inc
and
in
hlt
cmp
jge
cli
fstl
mov
push
jg
pop
dec
rep
add
sarb
rcrb
push
lcall
push
arpl
sub
jne
inc
inc
jmp
inc
fs
sub
movsb
sub
pop
aas
cmp
gs
hlt
icebp
add
add
rcr
lods
push
push
rorl
test
add
add
sub
pop
jle
or
push
sub
jmp
loope
mov
scas
arpl
imul
aam
and
add
lea
inc
mov
inc
lods
iret
in
fnstsw
and
cmp
popf
add
clc
and
mov
clc
rorb
pop
in
mov
mov
popa
lret
in
popa
mov
cmp
pop
unpcklps
cmp
les
loope
jbe
fcoms
dec
test
adcb
cwtl
adcb
pop
push
cmpsb
xchg
fdivs
jne
jb
xchg
in
mov
mov
cmpl
std
xchg
push
movb
or
hlt
sbb
mov
pop
sbb
enter
mov
and
adc
add
test
dec
push
and
add
mov
push
es
setae
adcb
and
ss
pop
lahf
cmpsb
test
push
aam
sub
dec
cs
orb
pop
enter
imul
sbb
push
cmc
push
mov
sahf
push
jae
mov
ds
pop
push
sbb
push
call
push
cs
xlat
adc
scas
cmp
add
jnp
adc
push
push
or
mov
out
add
mov
lock
push
push
and
repz
or
inc
popa
sbb
enter
push
push
stc
sub
mov
sbb
aad
or
xchg
sbb
or
loopne
dec
clc
sbb
es
mov
in
mov
jns
push
push
or
pop
ret
pop
cmp
andb
scas
rcrb
shrb
cmp
or
mov
mov
ficomps
push
cmc
call
test
clc
fxch
xor
in
clc
aas
je
pop
cmpsl
jno
push
or
ss
jne
ss
imul
test
jle
fdivrs
xchg
cmp
aad
jae
int
test
sbb
in
shrb
sub
push
jo
lret
xchg
in
pop
mov
call
inc
add
push
add
fstpl
push
xchg
test
inc
aam
push
in
pop
push
mov
mov
rolb
dec
cli
dec
dec
insb
mov
mov
pop
push
dec
pop
insl
arpl
pushf
sbb
je
mov
cmp
xor
mov
ja
or
mov
lahf
cmp
mov
mov
jbe
imul
push
inc
xor
mov
mov
mov
xor
shr
xor
adc
add
imull
in
jp
not
mov
jl
mov
or
mov
shr
cmp
jbe
add
jmp
xor
add
mov
in
pop
xchg
fadd
push
in
pop
call
add
inc
dec
push
lea
push
adc
mov
fisttpll
sub
movsb
sub
adc
adc
push
push
sub
dec
sbb
fldt
mov
arpl
xlat
js
insl
mov
pusha
xlat
fcompl
mov
arpl
lods
outsb
jecxz
sub
inc
out
fsub
dec
sarb
inc
popa
mov
jl
lret
or
icebp
or
loop
jnp
roll
push
jb
cs
test
and
pushf
cmp
xlat
ret
jecxz
enter
and
add
movl
outsb
and
and
add
les
das
mov
and
and
outsb
in
or
sub
lods
add
pop
nop
mul
cmp
mov
mov
xchg
jae
push
mov
mov
sbb
xchg
mov
out
adc
in
pop
sbb
pop
clc
push
test
data16
adc
pop
sub
cli
inc
rcll
push
je
pop
push
rorl
dec
jp
jmp
inc
adc
ret
jge
cmp
add
sbb
add
stc
push
push
dec
xor
sub
and
and
pop
and
dec
sti
addl
in
pop
add
outsb
insb
add
fistpll
std
ss
push
jecxz
jno
enter
je
lea
add
push
mov
mov
adc
jmp
rorb
cmp
sbb
or
cmp
aaa
xor
jns,pt
sub
add
and
bound
ss
addl
xchg
in
into
and
xlat
sbb
rcll
xor
push
mov
sahf
add
inc
adc
push
jno
push
mov
js
jb
pushf
dec
jg,pt
or
sub
or
enter
or
jns
add
and
adc
and
or
lods
loope
dec
cmp
add
push
jo
sbb
and
sbb
adc
pop
inc
mov
mov
dec
xor
xchg
or
test
xlat
fldcw
in
or
push
push
dec
or
int
adc
push
pop
je
xor
fs
xchg
push
mov
dec
adc
mov
adc
lcall
outsl
inc
inc
and
cmp
mov
pop
jmp
adc
movsb
adc
dec
aad
inc
jo
xchg
shll
pop
sub
int
mov
in
dec
push
test
scas
mulb
adc
pop
jne
mov
jo
jns
gs
mov
xchg
in
mov
cmpl
dec
repnz
add
and
inc
adc
xor
sbb
and
xor
add
fiaddl
or
dec
push
lock
sub
push
push
sub
push
dec
sub
bound
je
push
je
shrb
push
dec
cwtl
sbb
enter
sbb
sbbl
leave
lret
jp
jbe
add
add
pop
add
pushf
dec
push
sub
add
and
mov
movsb
or
sub
add
mov
inc
lret
and
push
add
or
notb
jmp
inc
repnz
or
or
out
mov
les
dec
xor
push
jl
out
sub
rol
sbb
add
mov
mov
inc
andb
pop
push
repnz
xchg
es
xchg
mov
push
lret
nop
daa
les
xchg
push
cwtl
pop
push
push
xchg
cltd
dec
xchg
lret
add
push
mov
cvtpi2ps
lock
pop
test
cld
daa
cmpsb
test
lods
dec
or
sahf
xchg
sub
push
mov
movsl
mov
jmp
xor
mov
loopne
xor
sub
xchg
or
sbb
add
inc
enter
and
cmp
mov
add
out
jge
jb
mov
shrb
jne
dec
adc
cld
push
adc
inc
cmpsl
push
rolb
xchg
jg
jbe
push
push
adc
xchg
xchg
adc
repnz
cmp
mov
mov
les
sub
push
inc
sub
jne
push
mov
push
pusha
sub
mov
and
stos
push
pop
in
xchg
imul
mov
in
lods
adc
add
scas
xor
test
push
mov
add
mov
mov
lcall
and
dec
and
cmp
fucomp
imul
push
xlat
xor
mov
in
cld
fimull
hlt
xchg
jg
lahf
push
lret
push
sub
outsl
adc
xchg
mov
push
xor
and
dec
cmp
test
scas
dec
cmp
imul
dec
lret
jmp
lret
ret
outsl
mov
test
fisubs
add
addl
cwtl
add
xchg
push
inc
scas
sbb
pop
aad
ret
sbb
jbe
shll
sub
cmp
inc
ret
adc
xor
pop
dec
insb
insb
sub
aad
arpl
xchg
inc
movb
lcall
cmp
mov
js
xchg
pop
repz
xchg
mov
movl
inc
inc
ret
push
or
xchg
pusha
je
xchg
dec
sub
jo
sub
inc
cmpsb
sub
in
cld
sbb
seta
mov
popa
insl
xchg
sbb
jb
test
sub
sbb
aam
aad
mov
cmp
pop
add
pop
adc
push
in
sbb
or
and
data16
out
sub
jb
push
xchg
lahf
nop
xlat
xor
aam
dec
imul
xchg
sbb
push
push
stc
rorb
xor
arpl
incl
fldz
aaa
pop
dec
rolb
lret
jne
jno
adc
movsl
push
pop
add
outsl
sbb
pop
sbb
add
sub
add
push
nop
call
scas
je
sub
or
dec
loop
movsb
outsb
or
faddl
pop
dec
jmp
inc
lea
push
sub
out
adc
jmp
adc
add
popf
dec
movsl
sub
adc
aaa
push
add
addr16
in
sub
xchg
lcall
pop
cmp
pop
push
pop
aaa
insb
jl
adc
mov
pop
pop
hlt
clc
in
jmp
imul
jne
in
cli
popl
pop
shlb
jg
dec
pop
adc
add
push
mov
nop
push
mov
sbb
push
sbb
inc
xchg
push
bound
repnz
es
push
add
push
outsl
incl
sub
sub
inc
lea
push
sub
push
add
mov
adc
xorb
mov
add
adc
jne
sbbl
pop
jmp
dec
or
dec
mov
inc
aam
mov
cld
in
cmovnp
addl
jno
cld
test
lahf
mov
or
add
loope
push
int3
lods
and
addl
mov
cmp
jge
add
xchg
or
nop
push
adc
mov
fs
clc
xchg
fs
mov
push
bound
andb
mov
add
add
icebp
es
jg
fst
lea
push
or
es
dec
test
mov
xchg
mov
call
fs
adc
dec
cld
push
push
sbb
mov
or
ret
lock
xor
xor
and
jno
mov
inc
mov
mov
push
xchg
and
xchg
ret
in
ret
mov
fistpll
nop
mov
pop
sub
sbb
andb
mov
sub
push
mov
cs
and
es
xorl
add
roll
mov
push
adc
aam
push
or
and
add
dec
data16
push
or
in
cld
pop
aas
or
nop
rclb
cmp
push
cmp
sti
pop
cmpsl
push
movb
mov
test
xchg
or
imul
pop
inc
mov
iret
mov
sub
xor
and
push
ds
sub
cld
data16
sbb
cmp
cli
addr16
sub
sub
inc
cmp
enter
fidivs
rolb
mov
push
test
sahf
push
or
orl
lret
in
adc
mov
pop
rcrl
ss
mov
insb
pop
inc
int
pop
inc
and
cmovl
mov
fnsave
lret
jbe
mov
sbb
dec
hlt
sbb
notl
daa
push
outsl
push
push
jo
test
dec
dec
jb
aas
subl
fs
xor
mov
aam
push
in
adc
rclb
and
aam
mov
or
stos
clc
adc
loop
addr16
add
fisubrs
inc
push
in
orl
pusha
xor
pusha
or
cwtl
mov
sub
and
add
add
je
push
mov
xchg
xchg
das
loopne
push
inc
imul
or
adc
in
adc
jo
xchg
jmp
adc
testb
js
jmp
inc
sub
jo
push
mov
daa
pop
push
and
movsl
mov
dec
pop
sub
mov
cmp
jbe
cmp
mov
sbb
iret
cmp
loopne
inc
xchg
pop
or
adc
scas
push
cwtl
das
push
push
stc
pusha
or
in
rolb
and
mov
xchg
mov
push
addr16
cmp
mov
push
nop
mov
add
xor
push
sub
or
test
or
stos
or
jae
cmpsl
ret
add
add
pusha
push
adc
popa
add
add
and
sub
inc
dec
lock
enter
xchg
mov
mov
adc
push
push
test
pusha
add
or
xor
sub
leave
mov
test
jbe
andl
cmp
fcoms
cmp
mov
ljmp
mov
pop
and
sub
bound
inc
or
adc
lds
jmp
or
in
xlat
mov
in
jmp
rcrb
adc
in
loop
jns
push
fistpl
inc
int
lock
test
adc
adc
movsb
push
sub
imul
cmp
mov
cmc
ret
insb
decb
test
cli
xchg
lods
mov
pop
mov
sbb
add
add
int
and
int3
pop
jp
xor
sbb
imul
loop
mov
and
loopne
cmp
jo
add
or
icebp
mov
mov
sbb
add
je
in
loopne
and
aaa
imul
test
pop
loope
jno
push
dec
fstpt
dec
jne
aam
or
rclb
or
xor
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
scas
add
pop
ljmp
out
fcoml
mov
iret
or
jmp
push
or
and
xor
add
add
in
xor
add
add
push
jno
add
push
cwtl
repnz
cli
fidivs
testl
cli
and
and
xchg
push
inc
sbb
cmp
push
repnz
ljmp
sub
fmull
sarb
or
xlat
ret
cmp
push
sbb
rolb
testl
hlt
add
dec
push
pusha
stos
xor
fsubr
push
sbb
call
push
xor
sub
out
repz
cli
mov
rol
rol
out
add
out
add
push
xor
and
fsub
in
dec
xor
cmpsb
imul
xor
in
shl
in
or
bound
and
or
push
bound
pop
add
pop
aaa
cmp
xor
push
rcll
cltd
call
loopne
sbb
dec
shl
call
sbb
loopne
xor
pop
cmp
aam
jbe
lods
xor
push
adc
jge
or
int3
ss
pop
mov
push
xor
and
and
in
jmp
lods
loopne
or
xor
and
add
sbbb
lock
and
mov
jb
mov
inc
jo
ret
push
jo
ficoms
add
mov
movsl
pusha
je
xor
mov
iret
push
loop
mov
imul
add
add
pop
jbe
sti
rcll
call
lretw
pop
mov
sub
and
add
add
aas
gs
fdivrs
inc
inc
lcall
xor
push
cmp
pop
lret
inc
add
pop
cld
mov
xchg
pushf
dec
sub
jo
cli
stos
orb
aam
aaa
cmp
dec
xorb
inc
sbbl
in
in
pop
inc
imul
shr
rolb
inc
xor
pop
add
sub
pop
xor
shlb
rorb
add
sub
dec
inc
scas
nop
cmpsb
loopne
call
add
inc
add
inc
sbb
xor
dec
fs
es
lcall
add
push
inc
xor
add
orb
sahf
push
pop
xchg
or
insb
push
push
dec
xor
rcrb
push
xor
adc
jae
push
and
fwait
dec
add
or
imul
inc
push
pop
pop
or
inc
leave
gs
xchg
jb,pt
or
ds
adc
dec
add
pop
in
or
jl
cmpsb
test
dec
icebp
clc
mov
fnstcw
pop
dec
mov
test
negb
dec
xor
imul
imul
and
mov
push
sbb
pop
and
movb
pushf
out
pop
add
sub
push
add
fimuls
inc
add
cmp
jb
lock
mov
incb
popf
add
sub
lea
push
fs
enter
mov
dec
clc
sub
sarb
clc
mov
or
mov
cmp
fidivrl
jns
or
les
jae
mov
sub
and
mov
aas
lea
ljmp
adc
add
sub
sub
pop
mov
mov
ret
dec
or
mov
adc
inc
fmull
pop
fsub
add
mov
cld
lock
jl
sub
mov
mov
adc
or
or
fs
adc
mov
inc
cld
lea
sub
jae
push
pop
fadds
sub
enter
or
mov
ljmp
fldt
fs
mov
outsl
pop
loopne
ror
mov
clc
insb
stos
call
mov
add
es
test
pop
or
icebp
and
ss
and
cmp
jb
cmp
ja
add
call
cmpsl
sbb
inc
aaa
popa
data16
cmp
push
imul
dec
adc
mov
je
mov
push
inc
shlb
cs
nop
icebp
rorl
and
inc
inc
add
or
je
mov
mov
imul
das
je
or
xchg
add
fsubs
jbe
lock
jne
pop
sbb
outsl
call
inc
lea
inc
mov
sarb
fiadds
dec
xor
push
movsb
jne
jmp
rolb
push
pop
xorb
imul
xor
or
sbb
movsb
shlb
test
stos
mov
cmp
fs
dec
inc
push
inc
and
or
xor
pop
mov
adc
mov
pop
cwtl
adc
inc
add
out
lahf
push
jns
lock
mov
pop
lea
cmp
mov
adc
fxtract
and
incb
sbb
pop
sahf
rcrb
cmp
in
daa
gs
push
sbb
insb
psubsw
aam
test
in
fldt
dec
lret
xchg
in
ja
add
inc
frstor
sub
add
mov
lret
push
add
push
test
mov
jecxz
xchg
inc
andb
or
out
jne
mov
cmpsb
clc
out
xor
inc
inc
test
mov
cwtd
cltd
inc
fcmovu
jb
jb
lcall
pop
jae
mov
shl
add
jmp
cwtl
aas
les
dec
je
and
dec
hlt
xor
je
fs
jne
rolb
pop
adc
inc
lock
test
std
pop
mov
dec
or
add
pop
jae
mov
jmp
xor
andb
insb
fs
sbb
mov
push
inc
call
sbb
fucomi
dec
dec
push
shlb
and
cmp
fwait
fwait
fwait
cmp
je
and
es
sub
lcall
jmp
cmp
jl
pop
jle
pusha
fadds
mov
inc
test
or
sub
and
jbe
mov
test
out
sbbb
and
or
je,pn
test
jne
shl
and
jb
jb
orb
and
ljmp
into
dec
nop
loope
jp
loop
xchg
ret
out
push
daa
jb
or
push
and
int3
sti
push
mov
inc
and
je
in
xchg
arpl
xor
mov
or
jae
add
adc
cmp
pop
and
xchg
jne
sbb
pop
push
mov
fisttpll
cmp
xchg
cwtl
aam
fisttps
loopne
push
push
xchg
insb
cmc
xor
ret
loope
or
in
cli
sbb
lds
pop
out
fimull
sbb
out
repz
xor
add
xchg
xchg
shlb
push
arpl
mov
inc
mov
xor
fsubp
cmpsb
xchg
inc
and
lea
test
add
pop
call
mov
in
mov
fwait
test
push
mov
xor
add
ss
xchg
sbb
mov
mov
pop
cwtl
xor
mov
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
pop
out
pop
xchg
cmp
je
test
adc
rorb
sub
fsts
sti
mov
cwtl
xchg
fisttps
jae
mov
xor
add
jle
jbe
arpl
or
add
push
ss
add
jle
stc
in
movb
mov
int
mov
clc
add
loop
inc
inc
mov
lds
scas
jl
add
cmp
add
push
sbb
adc
mov
or
mov
inc
inc
sahf
push
cmp
lock
xor
jmp
popa
hlt
cld
inc
pop
pop
add
jae
add
daa
cli
test
test
xchg
and
aaa
shr
jae
push
or
pop
and
lret
sbb
lret
sub
push
dec
idiv
pusha
jb
cs
or
xor
orl
mov
pop
lea
sbb
xor
bound
rcrb
sub
xor
cwtl
ljmp
inc
push
outsb
adc
cmp
mov
and
rolb
or
cmp
push
loope
lcall
jne
lahf
dec
leave
fxch
jne
addl
xchg
xchg
sub
enter
jnp
ret
pop
mov
mov
mov
jne
iret
push
leave
mov
cmp
or
bound
xchg
cmp
xchg
inc
and
popa
or
test
clc
add
push
mov
test
mov
pop
push
lock
call
xchg
jno
rcrb
dec
adc
in
inc
ret
fwait
push
imul
add
sar
testl
jne
dec
rorb
js
testl
cwtl
cmp
cmp
cltd
test
add
push
rcr
add
mov
mov
das
rorb
mov
insb
das
sbb
enter
bound
fmuls
cmpl
or
rclb
sub
jbe
xchg
dec
nop
dec
mov
push
mov
inc
je
das
dec
pop
xor
cmp
je
sub
cld
mov
mov
inc
inc
inc
xchg
and
push
loope
jge
pop
and
aaa
sbb
das
lods
lock
lods
cwtl
add
push
mov
xor
or
addl
inc
fsubr
cmp
jbe
or
ljmp
fadds
and
or
out
fisubl
and
jmp
insb
jne
jl
sub
sbb
dec
jp
sbb
stos
inc
jmp
inc
test
loopne
inc
adc
lock
adc
cmp
jne
loop
jbe
les
aam
adc
jmp
cmp
adc
scas
xor
jp
inc
pop
inc
adc
scas
dec
fcompp
xchg
mov
mov
jne
movsb
push
jbe
mov
cltd
test
adc
pop
jge
cmp
pop
or
adcl
inc
jecxz
add
add
dec
and
adc
ljmp
inc
test
adc
sbb
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
je
pop
pop
loope
mov
lock
and
jno
pop
orl
les
inc
jne
mov
xchg
outsl
inc
addr16
xchg
test
sti
movsb
sbb
or
jg
sub
jb
pop
xor
cmp
mov
mov
mov
pusha
sub
and
mov
push
jo
test
cmp
ficoml
and
jecxz
jl
imull
mov
pop
xchg
std
push
cmp
xchg
cmpsb
xor
xor
cmp
jbe
xchg
xchg
imul
or
lock
xor
dec
fadds
stos
push
sub
lret
in
mov
mov
cs
cmp
cmp
filds
sbb
xor
stc
mov
jl
pop
mov
clc
push
into
adc
data16
scas
and
xchg
mov
push
ret
ret
dec
inc
add
inc
je
and
lods
dec
popf
mov
sbb
push
testb
stos
in
xchg
pop
and
mov
lock
cmc
mov
xchg
push
push
dec
sbb
add
jle
xchg
cmp
sahf
push
int3
sbb
jmp
cmp
push
push
add
inc
cmpsl
insl
adc
inc
push
pushf
inc
add
or
sub
sbb
xor
movsl
xlat
sahf
notl
or
add
cmp
popa
pop
ret
ficompl
cmpl
xchg
lock
fcmovu
ds
fsubrs
xor
xchg
orl
adc
xor
aam
std
out
jne
sbb
dec
mov
ret
ret
add
mulps
xchg
fdivs
aas
xchg
les
mov
movzwl
les
faddp
inc
inc
fistpl
or
xlat
lret
in
clc
jne
push
nop
jo
lret
push
xchg
push
adc
pop
test
bound
mov
sub
cmpsb
hlt
xchg
mov
xchg
mov
cmp
shll
or
and
insb
jmp
popa
insl
loope
out
and
mov
daa
insl
cmp
mov
jmp
ret
in
daa
push
cmp
rolb
add
sub
hlt
and
daa
loop
pop
pop
loope
inc
ret
mov
pop
lods
sbb
push
pop
ja
lds
dec
or
and
addr16
rsqrtps
xlat
adc
cmp
or
sbb
loop
les
push
cs
xor
clc
mulb
cmovb
push
inc
daa
clc
xchg
out
add
or
in
and
enter
shl
and
ja
jbe
adc
or
sahf
in
ret
or
add
popa
ss
lahf
xchg
add
sbb
cmpsl
pop
aaa
lods
rcr
out
adc
hlt
adc
inc
pop
stc
pop
xchg
rcr
shlb
iret
and
loopne
inc
adc
pop
pop
lods
in
movsb
xorl
imul
sbb
or
negb
mov
sahf
scas
xor
pop
cwtl
in
lock
or
scas
dec
cld
les
notb
aaa
jbe
ret
adc
call
or
sbb
or
pop
loop
mov
pop
xchg
aas
xorb
and
mov
out
add
push
sub
roll
mov
pop
dec
fisttpl
adc
repnz
xor
lods
lea
cmp
adc
dec
sbb
shll
cmp
and
add
push
mov
cmc
push
shrb
push
sbb
in
inc
call
cmp
inc
mov
mov
lea
movsb
addr16
mov
es
mov
adc
lcall
int
out
inc
mov
push
mov
fistpl
pop
pop
pop
lahf
les
imul
sbb
xchg
push
aam
cmp
dec
iret
inc
call
mov
int3
aam
test
xchg
or
adc
data16
mov
rorb
adc
cmp
xor
pop
sub
stos
out
mov
xchg
pop
fcmovb
testl
aam
and
adc
add
test
addr16
add
in
jb
and
dec
insb
fs
lds
jl
pop
cs
add
or
dec
adc
add
sbbb
and
pop
cmc
cmp
mov
add
ljmp
mov
sub
and
dec
fstps
or
mov
inc
lcall
in
test
add
and
sub
push
loopne
mov
dec
popf
inc
cld
loop
lea
push
fwait
mov
test
loop
addl
mov
xchg
lock
sbb
and
mov
leave
pop
lods
mov
adc
jle
inc
cmp
sub
cmp
xchg
je
pop
sub
incl
and
adc
mov
jo
mov
fndisi(8087
dec
fsubs
add
jle
push
sub
xor
adc
popf
and
xor
push
dec
and
adc
sti
push
mov
ss
loope
mov
enter
imul
test
xor
stos
cmpl
cmp
xor
pop
xor
outsl
sub
mov
sbb
iret
push
dec
shlb
sbb
js
mov
and
das
xchg
test
jl
das
adc
cmpsl
or
dec
sub
cmp
mov
mov
xor
push
movsb
xchg
jge
and
mov
and
lods
cmpsl
in
inc
cld
test
mov
test
popa
or
stos
movsb
pop
loop
jnp
cmp
cmpb
mov
inc
xchg
test
dec
mov
repnz
xchg
rolb
mov
jo
outsb
jecxz
mov
jmp
inc
pusha
outsb
arpl
pop
nop
scas
imul
negb
aam
in
inc
mov
and
jne
orl
sbb
jo
push
add
dec
dec
std
or
pop
push
pushl
std
push
dec
mov
inc
jmp
jge
ss
fsubrs
das
mov
xchg
pushl
loope
scas
push
sahf
inc
mov
mov
pop
add
sub
xchg
push
lods
mov
mov
cwtl
inc
or
dec
shlb
push
xor
push
push
add
push
push
or
inc
xchg
xor
mov
das
in
xchg
mov
sub
mov
aad
adc
sub
sbb
imull
xchg
push
cld
pop
pop
xchg
push
jo
je
cmp
jbe
pusha
mov
pop
lds
jbe
mov
xorl
xchg
enter
push
lock
jp
in
fs
xchg
insl
xor
and
mov
add
push
test
xlat
mov
cmp
pop
clc
repz
ss
cmp
nop
add
xor
mov
scas
jl
orl
and
push
push
cwtl
les
andb
jg
dec
or
xlat
and
sbbl
add
sbb
cmp
stc
subb
push
add
sub
push
pop
xchg
sub
add
adc
cmp
fs
cmp
lcall
orb
lods
es
rol
fsubs
adc
xor
lahf
mov
pop
xchg
ja
pop
in
mov
add
jb
stc
leave
data16
lds
add
mov
ja
pop
sub
add
cmpsb
push
jae
push
mov
mov
xor
jb
jmp
inc
push
xchg
sbb
movb
loopne
scas
faddl
scas
or
cmp
push
and
cmp
mov
enter
int3
xor
mov
mov
daa
push
add
push
dec
js
mov
adc
pop
pop
or
inc
sub
cmp
mov
js
stos
mov
clc
fdivl
int3
adc
movsb
jne
fsubs
jne
das
sbb
mov
das
xor
clc
inc
push
or
xchg
cltd
outsb
or
dec
sub
dec
imul
or
push
add
cs
pop
mov
js
adc
or
sbb
adc
addl
ret
sub
add
in
inc
lcall
sarl
mov
lret
jbe
sub
add
sub
dec
das
sahf
push
mov
push
iret
data16
push
mov
fdiv
jno
andl
mov
jb
xor
test
push
inc
push
ret
sbb
dec
pusha
fs
lret
movsb
jecxz
sub
add
es
ret
mov
clc
daa
push
xchg
insb
adc
xor
or
arpl
pop
test
mov
cmp
xchg
mov
je
sub
sbb
mov
lock
add
sbb
pop
sub
ja
repnz
imul
clc
testb
cmp
lock
cmpsb
cmp
push
add
xor
or
sbb
push
mov
inc
pop
xor
or
sub
pop
sub
pop
clc
sub
sbb
xor
mov
cmp
cld
add
popa
pusha
js
pop
fists
lahf
sub
js
mov
in
jne,pt
inc
jmp
enter
pop
adc
fisubs
pushl
push
ret
add
pop
mov
sub
enter
adc
imul
inc
add
inc
out
jb
dec
mov
cmpsl
fsubs
adc
or
cltd
xchg
aas
mov
and
sti
xor
repnz
and
inc
hlt
sub
push
leave
popf
and
dec
mov
push
sbb
dec
jnp
mov
stos
cmp
push
xor
sub
ja
mov
pop
adc
loop
lret
mov
pop
inc
ss
cmp
add
stc
ja
and
ret
jae
ss
jb
mov
jle
sbb
mov
pcmpeqw
jle
not
into
mov
inc
push
insb
xorb
fcmovb
push
loope
fstl
push
jmp
and
pop
xor
js
add
jmp
stos
dec
mov
inc
lea
or
loop
add
sub
jae
aam
cmp
mov
movsb
jo
jnp
or
pop
add
jne
stos
xor
or
or
and
and
push
push
sbb
cmpsl
push
ret
ret
cmp
or
adc
adc
dec
mov
sbb
loopne
fidivrl
push
addb
pop
xlat
inc
cmp
jmp
pop
lcall
xor
enterw
call
xor
xchg
push
dec
mov
mov
js
sbb
or
or
and
xchg
adc
lea
test
ret
movsl
fstl
xor
ds
out
dec
add
or
jo
sub
inc
cmp
inc
add
cwtl
out
xor
add
sbb
pop
cmp
jne
jbe
inc
jae
push
lret
and
mov
cmp
pop
stc
and
add
out
mov
pop
xchg
pop
adc
cmp
mov
push
mov
add
xor
dec
nop
testl
test
jp
mov
fwait
xor
push
dec
push
xor
lea
xor
or
jo
sbb
mov
inc
pop
and
loope
inc
das
fdivl
add
ljmp
mov
push
sbb
xchg
mov
mov
sub
add
adc
ds
add
and
adc
mov
pop
mov
cmpsl
inc
sbb
mov
adc
movsb
mov
sbb
mov
imul
roll
outsl
stos
pop
pop
and
sub
sahf
mov
sar
jecxz
mov
cmp
fdivrs
cmp
into
or
sbb
or
add
fmull
fcmovnbe
je
xchg
lods
cmpsl
jmp
rcrb
sub
pop
add
fcoms
ret
movsb
mov
sbb
push
add
dec
mov
jge
xchg
and
loopne
and
cmp
jge
stos
mov
or
push
cmp
movswl
ss
into
insb
push
outsl
ret
pop
jge
mov
add
dec
inc
sahf
and
inc
shl
test
cmp
adc
adc
sbb
jge
cmp
cmp
rcrb
or
push
push
dec
enter
sub
xor
jl
jge
pop
stos
inc
movb
jmp
outsb
xlat
push
pushf
jmp
mov
jne
dec
push
push
nop
push
aaa
dec
mov
cmp
sub
out
jle
and
test
push
les
pop
pop
inc
add
loopne
mov
lcall
rolb
adc
pop
jmp
int3
adc
pop
add
movsl
ja
cmp
stc
rolb
popf
sbb
stc
hlt
mov
orb
jecxz
sub
mov
out
test
pop
push
or
addl
or
or
mov
cs
adc
gs
pop
push
subl
mov
inc
push
sbb
mov
js
mov
xchg
fstps
je
push
pusha
mov
ret
insl
test
add
sbb
cmp
rorl
or
test
sbb
fbstp
xor
sbb
mov
pop
roll
mov
mov
or
popa
loopne
sahf
cmp
notl
cmp
sti
mov
cwtl
jns
fisttps
jmp
test
inc
shr
jge
jmp
aaa
lret
aas
mov
es
scas
jg
pop
jmp
bound
adc
movsb
sbb
mov
or
lea
mov
add
push
dec
adc
stos
jno
jae
fst
jl
mov
cld
adc
push
pop
adc
mov
inc
push
bound
adc
pusha
xchg
or
cmp
xchg
sbb
dec
leave
ret
pop
mov
jmp
mov
daa
adc
mov
adc
xchg
xchg
pop
push
stos
add
imul
adc
cmp
mov
jge
and
test
add
mov
jecxz
xchg
and
sti
adc
xlat
aaa
je
push
push
sbb
pop
inc
fs
or
out
push
mov
xchg
xchg
xor
mov
movsb
and
ror
xor
add
pushf
dec
nop
aaa
pop
lahf
aam
cmp
adc
add
aaa
int3
call
in
int3
push
leave
xchg
inc
mov
add
pop
mov
stos
sbb
in
dec
mov
sub
lods
inc
inc
arpl
inc
scas
stos
add
mov
and
je
jl
ret
lods
or
push
xchg
iret
adc
ret
adcb
xor
arpl
mov
mov
sbb
dec
add
and
adc
out
mov
imul
push
add
inc
mov
add
out
icebp
xchg
test
fdivs
pop
add
andb
cmp
jecxz
sub
dec
push
and
subl
xor
fmuls
cs
or
xor
scas
dec
cmp
addl
sub
mov
int
push
mull
sahf
idivl
push
adc
aad
add
mov
inc
fidivrs
push
sbb
push
dec
cmp
testl
dec
je
dec
cmp
jne
mov
lea
rorb
out
xor
into
xchg
dec
movsl
push
mov
lods
daa
loop
mov
cmp
lods
push
icebp
xchg
jae
adc
push
xchg
mov
cmp
inc
sahf
repz
and
sub
test
ret
inc
in
into
dec
sub
clc
out
pusha
add
mov
xlat
pushf
fs
or
and
adc
subl
fistl
imul
adc
lock
scas
scas
imull
sbb
push
mov
xlat
subl
repnz
lcall
in
add
inc
insb
movsl
ljmp
int
mull
orl
xor
ss
jnp
cmp
fiadds
jg
lret
xchg
repz
mov
mov
pusha
mov
sti
push
dec
shlb
aad
mov
test
out
sub
fs
mov
mov
pop
add
push
mov
lock
fisubl
aam
repnz
inc
fdivs
mov
sahf
scas
push
dec
sub
push
adc
into
rdmsr
mov
pop
movsl
mov
push
inc
hlt
inc
dec
adc
rcrl
cmc
inc
outsl
mov
cmp
pop
pop
xor
std
les
sbb
je
push
andb
pop
fadd
push
je
pusha
lea
mulb
insb
popa
jmp
sub
adc
add
lock
scas
dec
jmp
xchg
ljmp
insb
lret
xchg
jge
scas
jnp
inc
stos
dec
shrl
jo
mov
or
in
ja
jb
popa
xchg
icebp
scas
mov
cmp
xchg
in
push
repnz
adc
pop
mov
push
pop
adc
xchg
add
push
aaa
call
and
add
loopne
cwtl
mov
pop
xor
mov
or
and
push
pusha
dec
enter
or
pop
shrl
dec
insl
arpl
mov
inc
pop
lea
data16
fstps
mov
sbb
pusha
pop
dec
jb
clc
aas
aam
orl
pop
test
push
and
push
cmp
fimuls
cld
xor
add
add
incl
lret
or
mov
fimull
jnp
cmp
mov
loop
add
add
movsb
cmp
pop
jbe
inc
dec
mov
pop
or
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
xchg
lea
cmp
sbb
jo
stos
and
dec
mov
mov
or
dec
push
hlt
jns
mov
jae
inc
or
inc
add
pop
insl
add
cmp
cmp
jae
pop
sub
sbb
or
fxtract
jne
push
js
xor
sub
fistl
cld
mov
sub
jne
mov
mov
lock
repz
add
or
xchg
add
lock
add
xchg
sub
clc
pushl
nop
sub
mov
lea
mov
sbb
xchg
stc
mov
mov
xchg
jb
xor
inc
movl
cmp
push
mov
call
iret
pop
jo
jp
mov
push
or
arpl
test
push
mov
mov
adc
dec
pop
add
cmp
into
leave
and
adc
adc
data16
addb
pushf
fucomp
or
push
inc
popf
lea
imul
in
pop
inc
gs
add
mov
mov
movb
popf
ss
xor
in
jbe
push
cmp
adc
outsb
testl
cmp
pop
add
insl
mov
test
bound
in
je
fcomps
call
fwait
popw
add
iret
xchg
pop
mov
pop
in
fcoms
add
bound
push
and
or
xor
jle
and
lea
xchg
mov
shrb
push
or
mov
xor
mov
xchg
dec
mov
test
inc
sub
cmc
std
rorb
dec
add
cld
mov
leave
mov
and
leave
inc
adc
cmovbe
push
neg
add
inc
adc
int
mov
adc
sbb
sbb
cmpsl
xor
ficompl
jo
arpl
or
push
dec
mov
and
rolb
test
je
dec
shll
xchg
adc
inc
mov
fcom
add
inc
daa
dec
cmp
or
cltd
sbb
orb
dec
test
sarl
cmpb
in
andl
jg
lcall
rorb
adc
jl
jmp
sub
mov
mov
mov
test
cmpsl
dec
jle
and
jo
sbb
add
sub
shlb
call
popa
push
and
loopne
inc
push
mulps
xlat
push
aad
jbe
dec
pop
in
lock
mov
mov
in
or
xor
icebp
or
inc
arpl
push
and
dec
cld
nop
sbb
inc
aam
pusha
addr16
addr16
mov
push
and
add
cltd
adc
repnz
scas
and
pop
sbbb
cmp
dec
jb
push
jae
add
test
sub
mov
sbb
insb
mov
orl
cmp
mov
pop
arpl
lahf
inc
jmp
push
push
mov
dec
call
inc
inc
add
pop
mov
dec
test
js
xlat
push
sti
iret
and
enter
adc
xor
ja
sahf
mov
adc
inc
add
jb
add
and
add
aas
enter
adc
cmp
outsl
jecxz
loop
sub
movsb
sbb
je
pop
or
jbe
mov
xchg
jne
adc
ret
out
outsl
insl
and
jmp
jno
int3
lcall
push
pop
jmp
push
push
pop
add
loopne
push
orl
scas
outsb
jbe
outsb
pop
loope
les
sub
adc
shl
fistpl
sbb
lea
push
jnp
or
sub
and
jns
adc
into
pop
call
aam
jo
in
in
jl
sarl
aam
or
cmp
std
adc
call
mov
pusha
sbb
inc
inc
insl
sbb
sub
bound
push
out
pop
popl
or
mov
clc
add
clc
jno
pop
shrl
repnz
mov
xor
icebp
repnz
mov
or
repz
sbb
loop
add
or
or
cmp
sbbl
and
jno
rolb
fmul
inc
test
adc
adc
mov
or
sub
iret
popf
rol
test
jmp
fucomp
and
pop
pop
dec
aam
test
jne
icebp
bound
dec
fsubr
jl
invd
clc
xor
and
mov
and
inc
cli
add
add
jle
pusha
mov
add
xchg
and
push
cli
loope
rorl
pop
dec
stc
sub
mov
sub
cmp
sbb
push
int3
in
fiaddl
dec
pushl
jmp
mov
scas
xchg
sbb
push
in
add
push
push
push
jb
dec
pop
ret
ja
sub
ret
popa
lret
clc
gs
aam
sbb
jnp
roll
lret
push
dec
add
mov
mov
xor
push
xlat
fadds
fld
mov
mov
roll
add
mov
sti
dec
andl
mov
inc
outsb
insb
mov
xchg
dec
jnp
sbb
inc
je
dec
dec
leave
mov
xchg
push
movsb
clc
jno
mov
gs
push
sub
loope
outsl
mov
xchg
xchg
mov
xchg
mov
rol
sbb
fcompl
pop
imul
xor
test
mov
or
ror
ret
rcrl
mov
lea
and
sbb
xchg
mov
int
lock
mov
adc
ljmp
xchg
xor
repz
push
popa
popf
xor
orb
das
adc
imul
aas
lret
addr16
daa
incb
jecxz
fiadds
pop
xor
push
inc
xchg
sbb
or
ficomps
sub
ja
sbb
xchg
sbb
sub
sbb
jmp
es
sbb
add
push
adc
xchg
insl
jb,pn
pusha
adc
cld
pop
mov
dec
adc
xorl
das
fildl
push
pop
add
fisttpll
xor
cmp
xor
mov
mov
lea
in
jp
jecxz
xchg
push
pusha
pushf
xchg
lods
arpl
lahf
je
mov
mov
push
fstpt
iret
or
inc
cmpl
js
xor
adc
pop
imul
rorl
inc
data16
or
loopne
ret
or
ss
dec
out
jmp
push
mov
inc
sub
clc
cmp
add
and
pop
dec
or
int
sub
add
adc
push
aas
xor
mov
nop
cmc
jnp
add
push
pop
jno
jle
add
cmpsl
pop
out
mov
jno
fcoms
xchg
iret
bnd
mov
sahf
or
cld
js
cmc
ret
or
jae
lea
push
sub
sbb
jg
add
shll
cmpsl
stos
les
sti
adc
ja
push
pop
rorb
or
call
push
or
call
sbb
or
faddp
imul
jmp
cmp
push
cmp
jae
inc
jmp
push
loope
loop
jp
sub
data16
and
lea
add
jae
add
test
add
imul
fdivrs
in
clc
subl
out
lea
lret
jbe
iret
fsubr
cmpsl
push
jbe
imul
pop
dec
add
fsubs
add
push
push
icebp
push
push
les
jne
bound
or
inc
stc
repnz
sbb
fstpt
cld
push
sbb
andb
inc
pop
ljmp
lds
and
stos
push
push
test
sbb
push
movntps
ja
add
mov
push
inc
loopne
or
or
sbbl
les
jae
pop
cmpsl
fidivs
popf
jecxz
inc
xchg
xchg
sbb
or
inc
add
ficoms
ss
lods
ss
lea
cltd
xchg
je
mov
clc
mov
jae
push
hlt
stos
and
cmp
ja
cmpb
push
pop
mov
mov
xor
sbb
or
sbb
add
dec
dec
jb
inc
and
fiaddl
cwtl
ds
push
mov
mov
rcl
dec
add
pop
insb
xlat
cmp
fs
inc
or
add
push
adc
bnd
test
pop
push
test
stos
mov
mov
jmp
mov
adc
shlb
lea
mov
cmp
add
xor
push
enter
cmp
pop
add
sahf
divb
enter
popaw
mov
and
and
inc
pop
mov
sbb
add
add
std
jmp
lods
push
addr16
imul
jne
push
imul
mov
push
lcall
adc
sahf
fsubrs
sti
xor
mov
push
dec
aaa
cld
test
pop
sbb
pop
daa
xor
or
or
rorb
adc
sbb
addb
rcrl
dec
mov
push
in
les
cmc
add
sbb
movl
mov
add
xchg
or
sbb
mov
sahf
push
add
loopne
add
xchg
cmovg
pop
pop
push
sub
in
mov
ljmp
push
movsb
push
ficoml
mov
add
cmpsl
fucomip
jbe
cmpl
mov
inc
mov
add
repz
rcrb
cmp
push
fldenv
fwait
add
mov
cmp
fdivl
lea
inc
xchg
mov
mov
test
popf
mov
sub
call
dec
loop
imul
lret
or
in
addr16
sbb
movsl
add
scas
or
psubusb
mov
push
sub
adc
in
sub
aaa
data16
sbb
cmc
mov
test
and
outsl
add
inc
mov
out
xchg
inc
popa
add
ja
mov
pop
adc
push
test
mov
sbb
cmp
pop
insl
push
adc
in
ficoml
addr16
shll
sbb
mov
fwait
mov
push
cmp
rorl
add
or
sub
inc
pop
movsl
mov
sub
and
in
pop
mov
inc
ret
pop
adc
jns
int3
loope
mov
jo
add
push
rorb
adc
jnp
sbb
or
sub
test
xchg
sbb
cs
and
inc
lret
push
mov
movsb
jle
jne
xchg
insb
sbb
icebp
test
stos
cmp
adc
push
jge
cmc
push
test
scas
int3
jp
shll
add
rorb
push
cmpsb
cmp
rcrl
lret
and
orl
mov
aam
sbb
mov
xor
test
rolb
inc
pop
xchg
cld
xchg
test
push
loop
jbe
inc
or
or
das
push
jo
cmp
mov
iret
lods
in
xchg
cmpsb
loope
push
or
imul
pop
dec
cmp
or
jg
xchg
xchg
mov
mov
xor
rcl
xchg
mov
arpl
pop
cmpsb
ret
pop
add
insb
jl
js
push
xchg
add
stc
or
dec
cld
out
mov
mov
xchg
jnp
and
jl
jl
inc
cmp
mov
adc
dec
mov
cmpb
rcrb
jae
push
rclb
testl
es
fnsave
inc
dec
mov
jne
mov
dec
imul
std
mov
add
push
xchg
ja
mov
mov
or
int3
dec
mov
or
int
iret
add
add
imul
cmc
daa
rcll
fnstcw
jge
lahf
and
lock
mov
adc
pop
push
cmp
and
jge
jge
shr
inc
cmp
jl
pop
mov
sti
adc
or
sarb
pop
fidivl
ret
push
xor
bound
leave
lock
and
mov
fucom
sbb
jle
insl
sahf
nop
or
sub
sub
pop
ret
push
das
roll
lds
push
jl
out
xor
shl
rcl
sbb
jne
add
test
movsb
das
nop
inc
in
popf
pop
rorb
xchg
mov
sbb
xor
push
dec
loope
adc
cmp
cmp
sbb
mov
push
lea
stos
add
lcall
cmc
mov
dec
jle
inc
cmp
clc
jbe
aam
pop
mov
or
push
push
sarb
or
and
mov
mov
addl
loope
and
jg
add
sub
mov
shr
shl
add
loope
shl
lret
mov
inc
mov
movsw
movsb
mov
les
enter
inc
xorl
adc
adc
pop
mov
mov
ja
add
mov
xor
sub
inc
jmp
pop
jne
sbb
js
add
xchg
lret
adc
mov
or
bound
js
inc
mov
daa
mov
dec
lock
nop
call
inc
mov
sti
or
inc
jmp
sub
sbb
mov
andl
call
fs
or
cmp
adc
divl
out
inc
dec
pop
icebp
movsb
add
cmpsl
add
mov
xchg
xor
jno
or
jle
xor
xchg
stos
pop
adc
add
xlat
cs
cmp
mov
icebp
cmp
xchg
movsl
add
xor
sbb
roll
adc
jle
out
inc
push
shlb
adc
scas
test
outsb
xor
dec
in
dec
shrb
pop
gs
iret
sub
xor
icebp
rclb
jns
test
adc
leave
add
outsb
in
and
ficoms
bound
jo
or
inc
test
fidivs
jae
adc
test
cmp
or
inc
js
adc
cmp
sub
sub
push
mov
push
aam
sub
aam
jge
mov
jle
hlt
xchg
push
push
repnz
rcrl
pop
push
fidivs
ss
shl
mov
js
jbe
mov
jmp
das
inc
testl
push
inc
add
or
je
sti
mov
and
dec
xchg
scas
push
dec
xor
dec
cmp
in
mov
pop
push
ret
mov
adc
les
sub
jno
jecxz
add
int
dec
pusha
cmp
jne
or
test
xchg
jmp
sbb
dec
sub
push
sbb
jae
lcall
vunpcklpd
inc
add
inc
mov
lret
pusha
rorl
clc
xchg
xor
pusha
adc
add
aas
in
pushw
sbb
mov
popa
and
sbb
mull
pop
pop
pop
mov
scas
or
bound
pusha
rorb
fimull
adc
cmp
sbb
in
lea
subl
rclb
inc
sub
bound
imul
push
add
sub
or
ficoml
test
inc
push
dec
dec
push
push
cld
lods
mov
mov
jae
jmp
pop
or
fisttpll
push
sub
sub
imull
sbb
lods
shll
xor
cmp
mov
enter
inc
adc
jns
call
or
js
sbb
or
push
and
dec
or
test
insb
cld
adc
mov
push
jnp
int3
sbb
ret
adc
xor
sbb
inc
mov
dec
and
andb
imul
push
xor
xor
inc
cmp
adc
mov
or
imul
mov
mov
and
pop
xchg
outsl
xchg
jne
push
rol
cld
call
add
cmp
dec
add
pusha
push
push
lods
lods
loope
adc
mov
dec
cltd
lea
aas
icebp
ret
cwtl
pop
mov
pop
cmpb
insl
icebp
cmpl
push
inc
add
pop
push
cmp
ret
and
pop
mov
mov
ds
push
jnp
push
push
adc
loopne
xor
jp
cwtl
push
push
xor
dec
mov
adc
fcompl
es
add
mov
adc
in
gs
fsubs
adcb
adc
cmp
cmpsl
leave
aad
mov
fisubl
add
add
sub
sbb
or
pop
aas
xor
cmp
jle
mov
push
xor
outsl
dec
add
add
cmp
in
adc
add
cmp
pop
dec
shrl
add
cltd
inc
mov
sub
pop
or
add
push
das
pop
xlat
sahf
and
jns
ret
or
pop
jmp
nop
pop
ds
jne
repz
add
mov
popa
adc
in
push
arpl
das
or
insb
mov
or
cli
adc
xor
inc
rorb
mov
rorb
aam
inc
ret
inc
movsb
add
add
aas
or
repz
sub
inc
jo
jne
addl
cs
cmp
mov
mov
jne
loopne
loop
stos
hlt
and
sahf
xchg
add
test
fstpt
cmp
stos
lret
jne
xchg
mov
mov
add
xor
inc
pop
push
orl
sub
lock
cmp
je
push
loopne
mov
adc
jg
testb
je
cmp
mov
sub
loopne
fmull
cmp
adc
jbe
push
ret
sub
xor
push
push
loopne
push
adc
add
xchg
mov
mov
jne
pop
sub
xor
in
mov
cmp
setns
fidivrl
repz
adc
cs
cmp
adc
sbb
cmp
pop
mov
push
add
loopne
dec
ss
loopne
jae
cmpsl
je
into
dec
and
icebp
jmp
push
divl
xchg
fimull
and
or
xor
push
idivl
add
jne
jg
add
es
dec
andb
xchg
dec
hlt
jmp
inc
and
cmp
insl
add
and
jo
into
add
movsb
and
push
pop
push
fs
je
arpl
jg
inc
loopne
xor
hlt
push
push
mov
xchg
or
leave
or
inc
mov
push
ss
or
rclb
adc
cs
add
push
push
jle
mov
mov
and
pop
xorb
adc
pop
push
int3
xlat
pop
sarb
adc
add
fistps
data16
lock
rorl
pop
pop
ret
inc
sbb
sbb
xor
sbb
roll
fsub
cmpsl
fiaddl
pop
cmpb
leave
jmp
lock
call
sbb
pop
data16
js
sbb
sbb
bswap
lret
xchg
mov
jne
inc
cmp
pop
pop
push
sbbb
or
cmpsl
xchg
jmp
ret
pusha
outsl
clc
xor
lret
jmp
push
dec
sub
test
faddl
bound
addr16
mov
push
mov
cwtl
daa
into
mov
int3
out
std
adc
jno
nop
inc
bound
jbe
add
push
popa
fisttpl
ja
and
fdivr
es
cmp
pop
dec
jecxz
fs
inc
jne
push
sub
xor
call
adc
arpl
and
add
xchg
push
dec
dec
test
mov
fwait
inc
mov
arpl
push
arpl
repnz
xor
pop
and
pop
test
or
add
sbb
xchg
inc
nop
fadds
cmp
push
sbb
sbb
push
or
incl
icebp
movl
jo
mov
xor
sub
jo
push
or
mov
clc
outsl
sub
cmpsl
cmc
dec
mov
pop
cltd
push
and
andb
pop
shll
mov
pop
fwait
rcl
ss
inc
xchg
and
xlat
shll
in
cs
add
dec
jno
pop
mov
rcll
imul
test
mov
nop
jmp
jo
out
dec
rorl
enter
dec
adc
and
mov
xchg
inc
cmp
xor
pop
add
dec
inc
ja
fs
dec
push
cltd
cmp
adc
lcall
or
mov
sub
cmp
mov
loopne
in
mov
adc
pop
sar
pusha
push
cmp
inc
push
ja
pusha
dec
adc
cwtl
call
sub
mov
orb
add
push
insl
loopne
and
or
incl
jle
cmc
push
adc
mov
cmp
cltd
inc
in
int3
in
add
cmpsb
fisttpl
pushf
cmp
sub
aad
sbb
loope
xchg
dec
adc
bound
pusha
dec
sti
test
push
inc
call
mov
mov
ljmp
cmp
pop
scas
inc
adc
cmp
xchg
push
inc
mov
jmp
ds
pop
stos
test
ljmp
sub
je
insb
inc
fmuls
js
add
push
push
inc
mov
cmp
dec
aas
pop
adc
test
lods
mov
or
jle
ret
dec
mov
pop
dec
sbb
in
pop
js
stos
push
xchg
cmp
in
cli
xor
sbb
xchg
push
inc
loope
mov
int
add
imul
daa
int
and
mov
jnp
xchg
aaa
xor
fstpt
fidivl
aaa
cmp
je
je
adc
dec
mov
adc
ds
cmp
jb
lea
lods
lds
push
lds
push
ds
xor
sahf
les
aad
and
inc
sub
add
jp
std
or
inc
cmp
pop
js
clc
cmpl
add
lods
xor
testb
imul
sbbb
jo
das
movsl
dec
test
enter
dec
and
mov
adc
sbbl
enter
pop
pop
ret
fisttpl
pop
cld
jo
and
add
sbb
pop
mov
in
push
or
popa
in
xchg
jnp
sbbb
pop
gs
iret
inc
and
inc
push
out
jb
add
adc
or
mov
adc
pop
cs
mov
inc
mov
inc
jecxz
push
rclb
xor
rolb
sti
sub
push
adc
mov
je
inc
rcl
sarb
mov
adc
stos
enter
pop
inc
inc
inc
enter
adc
cmp
das
push
out
pusha
popf
add
fmull
outsb
xchg
push
and
jo
jo
add
add
ret
pop
test
jp
adc
cmp
mov
andb
cmp
mov
push
push
mov
add
icebp
pop
add
and
jne
movsl
addl
fcompp
in
push
mov
mov
push
xor
cld
dec
loope
xor
lods
loopne
dec
dec
adc
and
sub
mov
in
je
pop
sbb
sti
repz
je
jmp
or
push
dec
pop
jmp
dec
out
pop
test
mov
jns
add
test
sbb
loope
push
sub
loope
xchg
jmp
aad
add
inc
cwtl
mov
and
or
ds
push
xor
icebp
neg
mov
jnp
mov
inc
cmp
mov
mov
adc
aaa
and
mov
add
push
movl
pop
and
pop
mov
push
sbb
les
ret
mov
enter
pmovmskb
sbb
jmp
loopne
or
adc
xchg
or
inc
add
dec
in
inc
test
mov
dec
cmp
push
dec
lahf
sbb
addb
jnp
mov
mov
inc
cld
ss
jb
hlt
push
adc
pop
stos
pop
in
pushf
push
pop
xchg
shl
jge
ds
push
push
cmp
jnp
xchg
adc
jmp
cmpsl
and
mov
add
adc
or
dec
fdivl
loop
xor
test
nop
cmp
xchg
icebp
mov
xor
cmpl
sbb
mov
mov
xchg
lods
roll
and
cmp
push
adcl
xor
rorl
mov
icebp
sbb
adc
jno
xchg
insb
jle
cmp
sub
shlb
jns
aam
insb
jp
jg
and
jecxz
ljmp
rorl
or
inc
js
scas
jle
rcrb
js
and
adc
inc
orl
sbb
mov
sub
sbb
add
inc
int3
add
inc
aas
adcb
mov
xchg
or
scas
pop
pusha
std
and
stos
and
xlat
sbb
mov
ss
push
and
clc
jg
mov
test
movd
movaps
out
push
enter
shlb
jle
xor
cmc
or
das
cli
rcl
lret
je
in
mov
jl
and
lret
or
jg
sub
lcall
adc
decl
cli
jnp
mov
mov
aam
ret
or
add
adc
mov
lods
sbb
xchg
imul
roll
add
shl
mov
jo
addps
int
mov
fcmovb
sbb
sub
jns
sbb
xor
sub
and
jmp
sbb
dec
sub
sbb
add
pop
cmp
mov
out
icebp
movsb
fcmovb
xor
in
adc
call
dec
xchg
adcl
aam
pop
sub
push
fisubs
add
inc
dec
and
jne
cmp
or
xchg
add
push
in
rcll
inc
jbe
adc
or
pop
out
outsl
adc
adc
daa
mov
movsl
pop
and
adc
je
out
adc
sar
es
test
push
cmpsb
aaa
adc
mov
mov
mulb
je
lock
push
and
jns
jnp
xchg
test
jp
xchg
mov
inc
inc
and
lea
cmp
jl
push
sbbb
mov
mov
cmp
jne
push
and
and
or
daa
in
adc
icebp
push
xchg
popf
xor
loop
inc
cmp
in
or
sub
sbb
imul
pushf
xor
and
push
or
hlt
insb
or
stc
inc
lock
rorb
push
stos
xchg
shl
lock
inc
arpl
mov
das
stc
push
test
cmp
xchg
jmp
push
test
push
es
lods
push
adc
push
sbb
dec
inc
pop
xchg
inc
inc
mov
and
sub
ljmp
adc
decl
inc
cmp
jne
inc
cmp
inc
xor
dec
and
adc
aam
inc
in
ret
or
adc
add
and
inc
jmp
out
xchg
loopne
mov
or
or
sbb
scas
pop
inc
inc
cmp
cmp
in
lock
sub
arpl
dec
adc
mov
add
push
push
lret
fcmovb
pop
pop
aam
adc
or
add
push
shlb
inc
sub
lock
pusha
add
pop
stos
and
pop
cs
and
cmc
or
inc
lea
hlt
inc
hlt
cmp
sub
jecxz
pushf
mov
icebp
rolb
cmp
enter
sbb
sub
add
ret
adcl
or
dec
insl
xor
leave
sbb
jp
rolb
cmp
adc
aas
sbb
cmpsb
sti
addr16
rol
inc
inc
cmp
aam
xchg
sub
lret
jne
sbb
daa
sbb
jmp
jnp
add
mov
push
lods
mov
xchg
adc
test
push
mov
ss
add
jmp
fldcw
push
cmp
popa
inc
pushw
and
xchg
mov
cltd
inc
or
std
pop
addb
and
testb
cmp
or
orl
lock
pop
dec
ret
cmpsb
hlt
daa
jo
xchg
push
inc
hlt
dec
pop
mov
push
mov
leave
and
fiaddl
fiaddl
outsl
push
jbe
inc
push
push
mov
jge
stos
mov
cmp
faddl
mov
lcall
pop
rclb
jmp
inc
or
jl
or
int
pop
das
and
push
mulb
add
loopne
jne
idivb
inc
cli
ret
xchg
test
imul
stos
mov
xchg
push
add
xchg
inc
rcll
dec
add
push
mov
out
sub
scas
mov
add
sarb
add
sbb
roll
bound
inc
sbb
mov
inc
testb
outsl
dec
imul
mov
mov
push
push
mov
loopne
rcrb
icebp
and
or
adc
inc
inc
imul
cmp
int3
cmp
enter
jne
scas
pop
jb
jl
sarb
jge
cmp
jae
sub
lods
outsl
pusha
xchg
mov
mov
popa
cmc
push
out
fsubrs
or
or
sub
add
ja
ficomps
data16
pusha
xlat
leave
bound
jo
ljmp
shrl
loope
aam
fwait
nop
inc
ret
adc
testl
push
addr16
rcrl
test
or
xor
adc
lods
insb
pop
mov
or
jb
and
dec
adc
ret
test
out
sbb
rorl
in
imul
sbb
movsb
movsb
jnp
outsl
add
xchg
push
clc
lds
dec
cmc
cmc
push
xor
inc
xchg
mov
jmp
push
or
shll
inc
pop
int3
test
sub
adc
sarb
push
dec
cs
cmp
fisttpll
sbb
mov
mov
call
imul
pop
pusha
fadd
inc
xchg
inc
fsubr
ficomps
add
cmp
jb
xor
mov
in
sbb
ss
jp
mov
sub
inc
xlat
test
imul
loopne
push
fidivrs
xchg
out
cmpsb
fsubr
ret
mov
lahf
push
adc
mov
adc
icebp
mov
or
xchg
div
sub
mov
ljmp
mov
movsl
lds
inc
in
in
idivb
dec
pop
sbb
jmp
mov
mov
cwtl
mov
push
pop
sbb
sbbl
push
jbe
test
dec
xor
cmpl
imul
push
sbb
lods
xlat
and
fistpl
adcb
cmpsb
mov
mov
cmp
or
pop
xchg
adc
push
testb
dec
mov
adc
ds
lahf
xchg
mov
loopne
lret
sub
data16
jmp
fcmovb
or
fcompl
or
adc
aas
push
jp
mov
jmp
test
push
test
sbb
adc
jno
lock
inc
inc
sti
rclb
add
adc
inc
loope
and
mov
or
push
adc
cli
repnz
pop
adc
add
scas
ret
pop
mov
movsl
stc
jae
gs
adcb
inc
popf
fmuls
js
inc
cli
push
add
xor
lds
push
push
lahf
jl
fadd
in
or
inc
cwtl
pop
inc
pushf
add
pop
push
ret
fimull
icebp
jle
jl
add
cmp
sub
push
ljmp
mov
test
jmp
sbb
in
movsb
adc
outsb
mov
adc
dec
xlat
xor
xor
add
push
or
cmp
and
imul
jge
rcr
mov
cmc
jl
lahf
ljmp
and
adc
dec
or
enter
stos
test
push
cmpsl
jge
mov
notb
push
inc
dec
test
les
and
pop
push
mov
fbstp
and
dec
aas
mov
pop
clc
movsl
xor
subl
or
insb
mov
or
cmp
bound
push
outsb
gs
inc
push
push
fwait
push
popa
jmp
bound
mov
test
fwait
and
sbb
sub
pop
in
sbb
or
sub
imul
lods
in
fcmovne
xchg
xchg
pop
int
cwtl
dec
mov
adc
mov
xchg
xor
xor
xor
sub
decb
sbb
lea
mov
or
adc
imul
pop
add
add
iret
xor
daa
add
adc
and
dec
add
jno
jle
pop
enter
add
add
inc
add
push
nop
push
xchg
pop
push
pop
movsl
test
or
mov
iret
or
dec
or
enter
sub
or
mov
pop
or
cs
in
loop
or
or
in
repnz
in
cmp
push
push
nop
adcl
mov
pop
mov
adc
pusha
testb
adc
xchg
adc
jns
movntq
adc
jns
cmpsb
bnd
adc
lcall
adc
mov
push
push
push
inc
enter
pop
pop
xor
sbb
lcall
sbb
sbb
iret
in
add
sbb
jns
sbb
sbb
sbb
push
sbb
je
pop
sbb
and
jmp
bound
sbb
or
push
push
inc
jg
cmp
push
pop
pop
jne
add
add
test
cli
cmp
es
push
jmp
iret
cmp
xchg
out
mov
aas
orb
add
mov
cmp
je
out
out
lcall
rol
lea
enter
aad
cmp
mov
out
fwait
out
xchg
push
jo
enter
je
popf
mov
aaa
call
mov
out
cwtl
jmp
ror
repnz
enter
in
in
mov
cltd
mov
and
enter
out
jb
jb
jge
sbb
inc
lcall
inc
push
nop
lock
icebp
nop
addr16
pslld
or
pmaxsw
repz
hlt
hlt
rorl
pusha
jnp
push
fdiv
fwait
mov
iret
enter
testb
divl
dec
push
jns
std
clc
clc
clc
cltd
cmpb
pop
enter
cld
cli
cli
iret
push
and
and
sbb
stos
cld
in
fcoml
je
cld
push
maskmovq
and
sahf
out
xchg
std
sbb
adc
ret
sbb
test
inc
or
add
sbb
lret
rol
cmpsl
les
movsb
or
adc
add
and
jecxz
mov
std
sti
in
in
and
adc
sbb
out
mov
or
out
outsb
dec
push
jno
call
or
pop
orb
cltd
repnz
repnz
in
add
inc
popf
cli
sbb
js
out
out
out
cltd
and
add
xchg
pop
leave
das
cli
push
cli
sbb
jmp
sub
sar
push
leave
push
jb
stc
stc
cmpsb
jb
imul
stc
idivl
pusha
pop
xchg
div
pop
fwait
xor
add
stc
push
xor
out
clc
cmp
rclb
sti
cltd
sbb
outsl
in
cld
inc
cld
adcl
add
sbb
inc
call
xor
mov
push
pusha
loop
testl
shl
cmp
mov
scas
idivl
testl
repnz
out
inc
testl
or
cmp
imul
ljmp
negb
leave
mov
mov
xchg
imulb
out
out
pop
lret
and
jno
negb
das
xchg
inc
and
add
lcall
repnz
inc
pop
pop
jno
cmc
pop
and
mov
cmc
xchg
inc
pop
dec
pop
dec
cmc
testb
mov
fwait
int3
push
mov
inc
clc
xlat
in
repnz
jecxz
stc
popa
dec
in
cmpl
and
sub
xchg
hlt
das
xchg
inc
pop
pop
jne
push
hlt
sahf
and
scas
mov
data16
hlt
idivl
cmp
jo
sti
mov
pusha
adc
ds
ljmp
loope
adc
gs
loop
popa
leave
mov
scas
repz
xchg
cmpsb
jb
test
scas
in
pop
repz
repz
push
dec
in
rcrl
and
cmc
mov
leave
mov
jo
int
mov
dec
in
in
leave
and
cmc
and
leave
mov
loope
mov
mov
lea
inc
xlat
mov
xchg
icebp
jb
test
les
sub
mov
dec
push
cmc
cmc
cmc
mov
inc
jb
icebp
jecxz
or
lock
popf
lock
stc
popf
dec
push
jno
jne
push
lock
pop
je
xor
sbb
push
lock
test
ss
push
inc
inc
push
repnz
ja
sub
out
ret
divb
in
cmovno
push
add
inc
sahf
xchg
int3
add
stos
loop
mov
add
jp
push
and
push
insl
add
push
adc
add
jmp
and
xor
adc
int
add
and
sti
adc
add
sbb
stc
sbb
and
pop
int
repz
mov
out
adc
pop
fcmove
repz
sbb
pop
pop
aas
dec
insb
mov
insb
rclb
mov
mov
repz
inc
and
xor
int
adc
das
add
sarb
iret
comiss
adc
add
roll
mov
add
mov
pop
mov
add
and
jle
ror
adc
mov
add
add
outsl
xchg
test
jb
test
mov
sub
pop
int
or
jp
sub
adc
or
pop
xor
add
mov
mov
xor
nop
fcmovu
clc
orl
sub
lock
ss
mov
push
adc
flds
fwait
xorb
shlb
ret
xchg
adc
or
adc
or
decl
mov
fistpll
fcoms
fisubrs
lcall
and
add
adc
mov
loopne
adc
dec
clc
and
push
add
addb
and
mov
lahf
or
sub
or
clc
pop
aam
cmp
leave
jb
cmpl
mov
movsb
pusha
inc
fdivl
neg
ss
or
outsb
rorl
out
add
testb
adc
gs
and
je
rep
mov
dec
sbb
cmp
ljmp
ss
xor
jecxz
push
loopne
or
jge
arpl
add
push
add
in
inc
std
add
jno
lret
adc
push
dec
int
in
inc
push
mov
fdivp
lds
add
dec
rclb
xchg
jns
insl
inc
movaps
mov
jne
push
inc
lcall
ja
add
outsb
sub
enter
inc
inc
inc
inc
xor
mov
das
inc
cmp
enter
gs
sbb
imul
push
inc
and
mov
adc
cmpsb
push
push
gs
adc
add
xor
inc
sahf
subb
pop
addl
repnz
ficompl
add
mov
roll
into
enter
addl
pop
pcmpgtb
push
pop
clc
jmp
cmp
loopne
inc
arpl
popf
xchg
add
inc
or
sbb
and
sbb
mov
adc
add
pop
or
lods
push
mov
push
lea
repz
sub
mov
sub
or
inc
out
out
xchg
cltd
hlt
inc
lods
jmp
cmp
movl
add
dec
fdivl
sub
add
jae
dec
xchg
in
mov
pushf
jg
and
cmp
xchg
test
push
dec
pop
pusha
call
mov
lret
pop
scas
repnz
or
adc
negl
dec
add
add
lds
push
ud0
xor
mov
dec
div
mov
or
imul
xor
mov
jmp
cs
and
adc
sbb
mov
scas
enter
movsb
and
xor
add
dec
mov
mov
jmp
and
pop
neg
aad
fadd
xchg
cmc
mov
sbb
inc
cmp
or
adc
or
sub
push
inc
shlb
inc
mulb
lcall
pop
mov
pop
insb
bound
les
addr16
in
rolb
sbb
fisubl
movl
push
nop
shll
adc
cmp
dec
mov
stc
add
push
fists
mov
insb
jae
popa
push
sub
cmp
mov
cli
cld
das
sar
fisttpl
sbb
push
cmp
jne
jnp
sbb
and
out
outsb
push
loopne
inc
inc
repnz
inc
xorb
push
cmp
jne
mov
rcr
mov
jne
es
lods
int
int
and
adc
or
ds
or
iret
iret
jnp
cmc
jmp
adc
jmp
std
lods
loope
aas
std
jmp
cld
push
sub
mov
adc
adc
and
or
pop
popa
gs
push
fwait
push
shr
repnz
adc
mov
adc
test
adc
xlat
add
leave
jns
adc
loope
mov
xchg
shll
and
or
dec
sbb
or
push
inc
add
and
mov
mov
and
dec
cmp
xchg
fidivl
movsb
or
addb
stos
test
mov
jmp
mov
dec
add
fldcw
mov
jne
jo
sub
les
ffree
xor
push
shr
enter
adc
inc
fstl
push
stc
aad
hlt
push
jmp
mov
imul
adc
rcrl
ss
arpl
or
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
mov
mov
push
sti
je
sub
lcall
sbb
cwtl
mov
sbbb
and
add
mov
add
mov
and
call
dec
cmp
push
rorb
jl
xchg
mov
inc
add
mov
lock
jmp
xor
pop
lret
clc
adc
sbbb
call
push
jle
dec
stc
adc
pop
imul
stos
add
testb
insb
adcl
sbb
out
out
sbb
test
mov
fimuls
push
adc
push
dec
jne
mov
mov
popf
fdivrl
inc
adc
inc
or
ds
sar
mov
push
iret
aam
push
fwait
pusha
shrl
xor
das
int3
add
push
add
lret
fisttpll
roll
call
addl
stc
mov
pop
pop
mov
push
pop
and
cmovs
or
push
pop
test
test
xchg
mov
rep
jmp
xor
inc
mov
cmp
dec
fisubl
jb
insb
add
repnz
int
xor
mov
cmp
es
push
sbb
and
or
inc
add
add
push
repnz
dec
push
dec
gs
add
inc
add
add
fwait
or
push
orb
jo
aas
iret
repz
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
mov
lea
lock
out
push
insb
fldcw
mov
sbb
fsubl
inc
mov
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
or
cs
stc
out
inc
xor
lock
stc
sub
cmp
in
pop
nop
push
push
js
mov
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
ljmp
mov
push
cld
push
iret
repz
add
or
sbb
aaa
repz
mov
aaa
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
push
mov
add
adc
js
es
addb
std
das
les
xor
mov
mov
incl
inc
decl
test
and
jne,pn
pop
pop
test
mov
push
cld
cmp
xor
mov
sbb
cltd
pop
idiv
add
mov
pusha
or
xor
add
testb
adc
decl
aam
bnd
cmp
jae
dec
out
lods
inc
data16
jbe
or
push
mov
dec
lock
pusha
add
sub
or
pop
stos
or
xchg
mov
push
imul
dec
adc
in
mov
sbb
sbb
dec
dec
je
push
push
ljmp
jmp
out
pop
adc
mov
xchg
insb
adc
dec
repz
push
and
xor
pop
decb
push
jl
add
movsb
push
mov
inc
daa
add
out
rcrb
cmp
das
dec
sub
in
inc
add
dec
add
add
gs
sbb
fbstp
pop
and
addb
add
adc
sub
sub
test
cmp
imul
pop
imul
sbb
xchg
mov
es
jmp
cmp
sbb
sub
sub
insl
or
aas
jge
push
push
outsb
sbb
pop
cltd
pop
idiv
pop
mov
inc
filds
xchg
inc
out
cmp
and
sahf
jmp
or
dec
fsubrl
pop
shll
movsb
push
pop
inc
es
add
xchg
mov
scas
stos
adc
fs
jmp
jl
mov
sbb
call
pop
sub
or
je
insb
sub
add
dec
ret
sbb
sbb
sbb
and
insl
xchg
xor
pop
incb
inc
jns
sbb
push
dec
adc
cmp
sahf
mov
imul
add
sti
cmp
mov
mov
sbb
sar
leave
sahf
rolb
inc
out
in
adc
jae
or
cmp
int3
in
movsb
loop
mov
push
jecxz
sub
cmp
mov
jge
pop
je
sbb
add
add
data16
xchg
daa
adc
outsl
mov
push
enter
in
inc
add
dec
inc
push
call
rorl
shr
dec
and
pop
cmp
jbe
adc
push
lahf
pop
push
je
mov
fs
dec
or
lods
jbe
pop
push
les
sbb
inc
mov
push
aaa
mov
mov
popa
movsb
cmp
pop
stc
pop
push
adc
fldt
stos
xchg
inc
jmp
push
shl
ficoml
in
xchg
pop
xlat
and
mov
lea
and
insb
sub
sub
push
je
mov
push
jno
or
xchg
add
push
mov
jge
imul
push
hlt
mov
call
push
adc
mov
adc
adc
adc
in
jns
testl
push
scas
lea
ds
push
imul
mov
cmc
jae
lods
dec
ljmp
dec
pop
imul
xor
adc
clc
push
pop
mov
xchg
fiaddl
hlt
dec
js
mov
lods
ds
mov
aam
add
jge
push
decl
inc
jg
jbe
lods
pop
mov
stc
add
aam
mov
fistl
cmpsl
ljmp
das
pushf
fisubl
js
mov
inc
inc
cmp
je
xchg
mov
sahf
fs
orb
imul
add
jle
fisubrl
je
and
mov
or
mov
xchg
adc
js
adc
js
loopne
inc
pop
mov
incl
lcall
inc
imul
or
cld
js
xchg
sub
insb
mov
mov
sbb
lods
mov
and
jnp
sub
bound
out
mov
sbb
or
xchg
dec
shlb
pop
push
mov
sub
adc
push
std
pop
or
xchg
mov
addr16
test
pop
pop
dec
xchg
adc
test
xor
rorl
cmp
mov
ret
add
fneni(8087
jne
mov
sbb
or
inc
int
sbb
nop
popa
fs
add
xor
add
movsl
add
frstor
push
fidivs
sbb
dec
movsb
jb
jns
sub
mov
pop
inc
cmp
lret
mov
push
adc
fistl
or
popa
xchg
shll
inc
push
iret
add
shll
mov
bound
jne
jmp
dec
or
sub
mov
jmp
das
xlat
jmp
push
dec
sbb
pop
into
push
sbb
jbe
test
and
cmpsl
and
sbb
dec
popf
es
ret
and
cmp
add
call
inc
in
cmc
gs
loopne
repz
lock
sbb
testb
xchg
hlt
mov
jp
lahf
jge
outsb
jns
and
addl
adc
push
daa
mov
push
cmp
inc
mov
mov
mov
push
dec
or
testb
or
push
and
dec
and
jnp
push
jmp
cmp
das
mov
or
inc
inc
call
mov
pop
mov
outsl
inc
shlb
jbe
lods
inc
fisttpl
sub
cltd
pop
stos
call
jmp
mov
cltd
lock
pop
scas
call
es
inc
jmp
xor
add
aas
pop
cli
scas
orl
in
dec
xchg
jne
pop
das
lea
mov
nop
inc
cs
jne
and
cmp
sbb
insb
sub
pusha
leave
pop
fldz
pop
fidivrl
xchg
push
xor
adc
add
pop
data16
inc
nop
add
pusha
mov
xchg
jbe
mov
movsl
adc
pop
mov
jb
mov
dec
adc
cmp
inc
cltd
call
jne
fchs
pushf
or
xchg
lea
push
test
aas
outsb
mov
adcl
arpl
jmp
pop
arpl
xchg
push
jno
imul
pop
outsl
gs
aas
inc
mov
xor
dec
mov
sub
mov
test
add
fs
pop
ret
and
cltd
jp
xor
push
mov
mov
and
shrb
dec
sub
in
clc
mov
push
mov
add
dec
jbe
jbe
xchg
out
sub
js
adc
js
jg
push
inc
and
and
mov
sbb
sbb
push
xor
fadds
xor
sub
bound
fs
pop
xor
pop
sbb
in
push
dec
shll
sbb
and
enter
and
insb
stos
jb
into
gs
clc
xchg
mov
fisubrl
dec
mov
int3
or
jne
add
mov
inc
repz
aam
xchg
push
aam
mov
enter
mov
fmuls
arpl
adc
faddl
pop
sahf
jl
cmpl
repnz
and
clc
outsl
loopne
insb
jmp
push
xchg
popa
stc
sbb
sbb
adc
adc
imul
xchg
push
or
loop,pn
add
adcb
xchg
pop
repz
mov
das
lahf
sbb
cld
arpl
imul
pop
sub
fidivrl
and
sbbb
and
ljmp
rclb
loopne
xor
jge
cmp
push
or
or
lock
mov
inc
mov
push
or
fistps
ja
jbe
push
stos
movsb
fiadds
jl
hlt
mov
fildl
fcomps
mov
sub
sbb
xor
dec
xchg
jle
jp
adc
repnz
inc
xchg
loope
add
fistps
jg
adc
mov
pop
lcall
xchg
cmp
in
mov
icebp
cmp
push
pop
xor
jbe
jmp
cltd
roll
xor
dec
pop
dec
aaa
mov
fadds
in
sbb
xor
mov
call
sbb
js
call
cwtl
push
js
dec
in
push
fs
sti
or
sub
icebp
adc
fisubrs
mov
adc
inc
or
pop
or
xor
inc
and
pop
xchg
addb
bound
rcr
push
ret
aas
xor
cli
xor
cs
icebp
push
fcoml
mov
shlb
or
daa
and
mov
pop
lock
cltd
rcrb
and
shlb
jecxz
push
das
incb
xor
adc
jo
push
sub
shrb
fmuls
or
add
jmp
cmp
sarb
jbe
pop
cmp
jb
add
jb
icebp
idivb
dec
mov
mov
dec
dec
mov
inc
add
add
or
inc
loope
iret
adc
jne
mov
hlt
or
add
dec
mov
test
cwtl
movsb
push
aad
cmp
xchg
push
adc
data16
loope
add
pop
je
sarb
add
cmp
xor
inc
sbb
movsl
call
pop
or
jg
add
mov
scas
in
xchg
adc
orl
lret
inc
and
nop
ss
rclb
mov
and
jae
int3
gs
cmp
repz
mov
sub
xor
pop
add
and
aaa
xchg
mov
add
lock
dec
or
pusha
lock
lods
pop
push
clc
pop
mov
push
lret
adc
mov
pop
jmp
pop
pop
mov
sub
or
sub
lcall
repz
jb
jmp
dec
pop
mov
ret
test
add
cmp
pop
sub
xor
nop
sar
dec
add
mov
add
mov
jle
inc
nop
sub
in
push
adc
push
pop
dec
ss
adc
jo
rolb
sti
inc
pop
imul
inc
ret
es
add
and
int3
push
sub
add
xor
add
mov
call
or
movsl
xor
frstor
adc
fbstp
lods
adc
jmp
rolb
cmp
jae
inc
inc
cs
jo
and
int3
sbb
sub
inc
call
push
xchg
dec
adc
and
adc
mov
gs
out
cmp
lcall
cmpsb
mov
imul
cwtl
or
xor
mov
add
mov
inc
insl
loopne
or
jecxz
jo
std
add
fists
repz
fldl
adc
or
int3
add
ljmp
or
mov
fstl
rcrb
sbb
dec
loopne
aaa
push
add
aas
lahf
push
lret
insb
push
lea
loopne
inc
dec
inc
push
cld
aam
sbb
push
imul
lock
xchg
fcoms
lcall
mov
pop
adc
push
push
jl
dec
stos
daa
and
jnp
cmp
aaa
loope
je
add
iret
xor
push
dec
mov
in
add
jle
jne
mov
call
and
sti
pop
mov
push
add
dec
xchg
adc
movsl
mov
jo
nop
ret
add
bnd
inc
jg
or
daa
pop
fdivrs
or
inc
inc
ja
and
push
cmp
incl
xchg
insl
js
loopne
cmp
lock
sub
and
rcll
xor
xor
repnz
and
push
jle
or
or
out
sbb
sub
js
test
lock
out
jbe
outsb
inc
cmp
pop
push
lods
lret
test
test
movsb
pop
sub
loope
cmp
test
or
lods
sbb
and
mov
cld
or
add
jo
mov
add
mov
cmp
add
inc
mov
push
popa
test
movl
cmp
xor
mov
outsb
outsb
sarb
negl
and
mov
mov
fmull
cmp
push
pop
or
dec
and
and
sub
testb
cmp
mov
pop
add
orl
movsb
je
jns
jecxz
out
or
add
xchg
ja
or
push
or
xchg
xor
je
jle
inc
or
andb
or
pop
rcll
pusha
sub
mov
mov
xor
into
pop
sub
mov
mov
dec
jne
lea
ja
or
add
ret
shrb
push
call
adc
jne
hlt
sbb
add
xchg
into
hlt
mov
and
push
push
sarb
out
lock
pop
adc
loop
push
sub
test
sbb
aas
push
push
mov
inc
mov
xchg
fdivr
jae
fnstsw
push
andl
push
cmp
push
push
cld
pop
cmp
popf
dec
and
loopne
dec
mov
mov
cld
pop
pusha
push
orb
mov
jle
in
je
and
sub
add
test
jmp
mov
idiv
inc
mov
sub
mov
ja
test
cmp
imul
ret
push
clc
push
fiaddl
ljmp
adc
mov
add
lcall
fcoms
ja
mov
jns
jo
jg
movsl
scas
or
ja
test
and
pop
push
or
push
dec
aaa
inc
hlt
cmp
add
jmp
lret
and
pop
pop
subb
mov
xor
mov
push
loopne
dec
pushf
cld
pop
ds
jmp
pop
pop
cmc
and
push
push
sbb
add
dec
lods
cld
cmp
popf
cmpsl
gs
push
cmpsb
push
sbb
aam
jbe
inc
xchg
inc
cmp
std
jne
pop
cmpsb
jge
fsubr
fldt
stos
push
ljmp
icebp
add
inc
mov
jg
add
add
test
pop
xor
push
and
mov
inc
cmp
mov
mov
sbb
adc
add
push
shr
cmp
or
mov
mov
push
jmp
cmpsb
es
adc
push
jne
fimull
call
inc
sbb
inc
rolb
mov
jbe
push
call
enter
jo
adc
in
lea
mov
loop
mov
dec
lods
cmc
inc
pop
leave
inc
push
lea
jl
dec
in
leave
xor
test
jmp
mov
push
stos
push
loopne
adcb
testl
add
ljmp
inc
jp
shrl
aas
adc
loopne
xorb
movl
or
enter
adc
jl
lcall
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
cmp
ds
push
fists
sbb
jle
pop
sbb
push
xchg
testl
mov
inc
dec
jne
cmp
cwtl
icebp
jnp
movsb
mov
add
xchg
or
jmp
or
loop
cmp
and
lahf
lods
adc
push
dec
loopne
adc
add
mov
mov
mov
mov
push
cwtl
aam
or
and
xor
sub
lret
fcmovnb
jmp
inc
sbb
sbb
sahf
mov
pop
jno
mov
mov
pop
push
inc
adc
dec
inc
push
loopne
xchg
push
xchg
test
xchg
cli
repnz
cmpsb
or
fstpl
sub
dec
std
and
fs
jb
mov
pop
test
mov
lret
pop
sub
jmp
xor
add
mov
mov
jmp
push
bound
ret
ss
not
adc
jmp
adc
jno
es
inc
sbb
xor
jl
and
pop
add
out
cmp
lret
cmp
fisttps
push
and
pop
movl
in
or
lret
cmp
fdivr
mov
pop
js
pop
mov
pop
adc
pushl
ss
mov
int3
pushf
inc
int
sbb
mov
jno
inc
inc
sbb
sub
ss
repz
hlt
subb
and
nop
mov
shlb
ljmp
push
data16
add
cwtl
sub
inc
int3
gs
test
lea
idiv
fcmovnbe
or
push
cmpl
add
add
mov
cld
sahf
das
es
inc
add
pop
decl
jne
mov
sbb
xor
xor
mov
xchg
add
nop
mov
inc
jo
pop
sub
aaa
sbb
ljmp
pop
ret
lods
jae
cmp
adc
movsl
sub
fiaddl
sar
or
clc
inc
dec
and
sub
dec
xor
dec
xor
scas
xor
aam
sub
dec
fcmovb
leave
inc
mov
ret
inc
dec
rcrb
shl
in
clc
jno
jbe
enter
nop
lock
inc
mov
dec
jle
xor
test
loope
pop
push
fstps
repnz
into
add
jmp
xor
jmp
push
fidivs
cmp
lea
rorb
fucomip
pop
frstor
push
cmp
sar
adc
roll
lret
cs
push
push
adc
gs
icebp
cmc
push
pop
lret
add
add
add
cmc
nop
sbb
add
test
imul
cs
ljmp
or
adc
sbb
mov
rcl
roll
sub
in
scas
rcrb
pusha
or
aas
js
in
fimuls
inc
push
add
add
mov
xor
bound
add
shlb
shlb
and
sbb
cmp
pop
lret
insb
push
cld
ret
sbb
xor
add
mov
mov
push
lods
or
inc
shrb
jno
cmp
cmpsb
insb
or
jae
bound
fisttpl
or
cmp
cmp
outsl
xorb
adc
inc
flds
jbe
ret
dec
push
adcb
nop
in
xor
push
push
movsb
pushf
popfw
adc
dec
mov
rolb
or
mov
rol
xor
inc
dec
xlat
push
mov
adc
mov
repz
ds
imul
sub
sub
cmp
add
nop
inc
inc
dec
sub
and
mov
pop
jle
lock
rorl
jmp
inc
dec
dec
xchg
aad
cmc
xlat
out
insb
and
pop
cmp
je
outsb
dec
call
sub
mov
popf
insl
jg
mov
cmpsl
add
xorl
add
or
test
mov
divl
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
std
cmpsb
and
daa
test
xor
jno
push
int3
dec
orb
ja
mov
aad
mov
jmp
sub
in
in
out
mov
adc
mov
jmp
bound
pop
inc
push
xchg
mov
nop
stos
mov
xor
jp
add
adc
movsb
jp
das
mov
add
dec
dec
xchg
dec
lea
into
push
inc
cmp
sub
pop
jae
push
xor
jle
sub
push
push
fimull
loopne
fcoml
jg
push
mov
mov
clc
or
pop
pop
popf
enter
shrb
pushf
popl
add
rcr
pop
ficoml
enter
dec
cld
adc
pop
dec
in
sub
aam
sub
jecxz
xchg
mov
loopne
lcall
cmp
cmc
jno
mov
cmp
add
push
mov
jmp
in
js
mov
jge
dec
inc
iret
inc
cwtl
sbb
push
mov
inc
dec
xchg
add
insb
cmp
addl
mov
es
mov
jae
js
sub
ret
loop
push
pop
jns
cmp
call
scas
js
movsb
push
enter
mov
push
pop
iret
repz
dec
or
push
xor
and
xor
sbb
lret
add
adc
out
jmp
pop
pop
and
jns
lock
mov
push
hlt
pop
pop
nop
add
sub
push
pop
sbbb
sub
mov
or
out
fisubrs
aam
inc
popa
jl
pop
pop
clc
mov
pusha
fiadds
sbb
or
add
cmpsb
loop
push
je
push
push
sahf
xchg
pop
cs
push
jno
or
mov
in
es
inc
jmp
sub
add
movl
loopne
cld
cli
dec
xchg
lret
jne
sti
inc
adc
int3
sbb
dec
cmp
imul
jns
add
mov
dec
faddl
scas
into
cmpb
int3
mov
int3
test
call
aam
and
inc
dec
jl
adc
or
or
add
add
or
mov
and
mov
idivl
aas
lds
and
sbb
arpl
mov
fdiv
mov
xorb
and
add
daa
and
loopne
fs
mov
enter
or
lret
or
inc
or
je
xchg
pop
mov
jge
dec
cmp
cmpsl
mov
add
push
cmp
jl
or
sub
push
or
imul
sbb
or
inc
rclb
xchg
and
and
jne
or
push
xchg
test
xchg
adc
and
add
adc
adc
push
aam
imul
or
xor
or
rcrb
imul
cmp
out
ret
pop
add
cwtl
outsl
dec
mov
pop
pushf
xchg
aam
add
jns
inc
sbb
xor
test
ja
enter
mov
pop
sub
addr16
aaa
bound
mov
mov
mov
hlt
jecxz
jmp
loopne
jo
cmpsl
mov
push
inc
and
xor
shl
xchg
xchg
test
and
xchg
sbb
mov
lret
adcl
test
cmp
mov
movsb
loopne
adc
or
ret
dec
mov
add
dec
addb
or
enter
inc
test
dec
inc
in
sbb
lea
inc
cmp
stos
ds
shrb
xor
pop
push
pop
bound
int3
add
lds
inc
int3
push
ss
shl
push
inc
fimuls
daa
jmp
and
mov
push
adc
out
rcrl
lock
jmp
in
add
dec
ret
shrb
dec
mov
test
fildl
sbb
inc
mov
mov
or
test
mov
mov
mov
jae
and
add
lcall
dec
orb
jecxz
xor
sub
push
xchg
test
and
pop
xchg
mov
jle
ljmp
jbe
xchg
push
sub
push
inc
shrb
push
fdiv
in
or
in
xor
inc
ret
scas
idiv
xchg
pop
cmp
pop
divl
in
inc
js
add
cmp
ds
mov
dec
xchg
cmp
add
jle
push
push
jne
insb
dec
imul
and
xchg
add
jns
out
in
add
push
dec
add
sub
pop
lock
mov
loopne
add
mov
pop
inc
arpl
xor
xchg
shll
and
addb
in
fisubs
push
pop
int3
or
push
lock
push
xchg
inc
outsb
mov
add
negb
popf
or
inc
or
rcr
lahf
ret
fidivrl
dec
inc
add
sub
jb
sub
add
inc
inc
cmpl
pop
test
adc
clc
cmpl
les
xor
xchg
xor
dec
pop
mov
sahf
shrb
outsl
lret
mov
test
and
or
mov
mov
sti
call
mov
mov
sbb
and
xchg
mov
pop
dec
bound
pop
andl
test
in
xor
repnz
insl
jl
ljmp
loop
xor
fadd
popf
out
movsl
test
imul
pop
inc
lock
mov
movsbl
unpcklps
ja
sub
test
push
clc
add
mov
jecxz
xchg
push
or
imul
fimull
or
lods
or
aam
jo
xchg
fdivr
fsubs
dec
adc
lods
loop
call
je
or
adc
adc
cmp
scas
pushf
pop
or
add
shll
add
sub
int
nop
cli
xchg
sub
adc
or
or
fadds
aas
mov
add
sub
push
imul
adc
lret
or
ja
movsl
xor
rcrl
mov
mov
hlt
and
dec
jns
or
movsl
hlt
nop
je
or
xor
insb
je
lock
mov
data16
insb
pop
icebp
cmpsb
jo
pusha
sub
and
in
in
ss
or
xor
mov
cmp
and
xor
movsl
jbe
int3
push
incb
fs
or
fwait
adc
pop
outsl
cmc
xchg
data16
sbb
js
test
xlat
je
mov
mov
fiadds
jmp
lret
pop
std
in
ficoml
je
or
or
fdiv
sub
inc
je
xlat
imul
adc
ret
mov
xchg
mov
cld
jmp
loop
and
inc
dec
nop
and
jae
and
jl
mov
imul
out
jbe
pop
das
mov
adcl
pop
outsb
sbb
dec
and
in
push
sub
pusha
push
fcomps
fmull
or
es
test
inc
mov
jb
ss
pop
push
mov
or
outsl
add
push
insl
subl
cmp
xor
push
addl
negl
dec
aam
dec
sbb
push
dec
lret
inc
and
xor
in
mov
lahf
push
sbb
test
sti
ss
fstpt
or
pushl
sarl
push
mov
icebp
sub
jns
jge
lcall
mov
inc
insb
cli
inc
cmp
pop
or
sbb
xor
xor
add
adc
je
xchg
cmp
out
pop
jns
push
sbb
jb
pop
gs
outsb
jo
add
add
aad
sub
addr16
push
or
repnz
push
outsb
je
test
jns
sbb
out
popa
or
clc
xor
jae
rcr
test
mov
push
clc
je
data16
movsb
push
pusha
pop
add
les
mov
loop
lds
sbb
sbb
push
stos
add
push
add
push
or
push
adc
fidivl
mov
jmp
cmp
jle
insl
lock
out
cmpl
js
and
lds
or
xchg
or
adc
xor
adc
inc
xchg
cmc
mov
adc
jne
sub
pusha
pushf
insl
jb
sti
inc
out
popf
clc
pop
fwait
cmp
sbb
jecxz
lea
stc
lcall
pop
test
adc
sub
xorb
sub
inc
xchg
mov
push
adcl
jg
hlt
xor
mov
sub
out
addr16
decb
mov
mov
popf
mov
push
sub
data16
push
cmpl
iret
in
push
lret
xor
mov
test
je
orb
adc
fwait
rolb
cmpsb
jmp
or
mov
aaa
int3
je
cltd
push
lea
sbb
pop
enter
jl
jae
mov
test
cmp
aaa
mov
fsub
nop
pop
fimull
mov
inc
addr16
ds
testl
jne
and
mov
outsb
das
sbb
pop
test
mov
and
adc
sub
shll
stc
cmp
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
or
subb
scas
mov
shlb
xor
setle
or
jmp
dec
or
push
and
xchg
adc
sub
xor
test
cs
adc
pop
add
sub
loop
and
sub
push
test
sahf
and
mov
cltd
movsl
call
sub
pop
sarb
push
jp
jb
mov
ja
leave
dec
fdivrl
lea
xchg
cmp
int3
jns
sahf
adc
sub
repnz
jbe
dec
adcl
dec
push
fdivs
jno
push
pusha
nop
aaa
cmp
call
push
fistps
rcll
sbb
xchg
adc
xchg
fildl
add
cmpsb
mov
je
jbe
cmp
adc
and
adc
je
lea
adc
movsl
daa
pop
mov
ret
mov
mov
sub
movsb
push
loope
push
cmp
ds
mov
xlat
pop
cmovs
call
inc
sub
push
dec
sub
push
inc
mov
lock
inc
imul
inc
push
xchg
shlb
ud0
andb
pop
lcall
cmpsb
inc
mov
push
pop
and
idivb
pop
idivb
push
lea
xor
push
sbb
mov
repnz
or
rol
fisttpll
and
rolb
loopne
lcall
aam
daa
push
mov
test
mov
cmp
mov
push
pop
add
aas
or
jl
push
pop
ror
frstor
xchg
push
jne
push
aas
out
data16
sub
lds
mov
add
pushf
jge
ret
adc
les
inc
mov
ss
cli
loopne
xor
cmp
ss
cmp
scas
les
sbb
and
push
push
inc
shll
ds
sbb
inc
or
add
imul
add
sub
adcb
shll
jl
add
adc
jo
adc
lret
sub
xchg
das
xchg
adc
add
jbe
push
dec
dec
loop
or
adc
enter
push
cs
inc
repnz
enter
push
rclb
lea
inc
arpl
inc
adc
dec
cld
stos
cld
shr
mov
imul
mov
add
push
dec
or
adc
push
adc
xor
add
sbb
mov
sbb
push
cld
dec
fs
adc
cld
jmp
jne
sar
dec
cmp
jbe
push
pop
mov
loopne
fidivrs
dec
or
subb
jae
cmp
mov
shll
add
shll
pop
mov
ljmp
adc
notl
pushf
mov
inc
or
dec
pop
add
add
sbb
push
or
inc
inc
mov
inc
lods
mov
add
push
sbb
clc
and
sti
add
pop
mov
pop
cmp
jp
mov
es
out
lret
imul
xchg
lea
jno
jno
mov
sti
pop
mov
shr
not
and
add
pop
or
xor
cmpsb
jl
fisttps
das
mov
xor
sub
add
mov
push
or
or
js
flds
mov
repz
int3
inc
or
dec
or
sti
setnp
adc
mov
mov
inc
mov
cmp
xchg
mov
push
or
mov
mov
jmp
dec
adc
lods
sbb
mov
or
test
mov
cld
movsb
in
lcall
and
dec
movl
adc
shl
jnp
paddsb
dec
or
jp
push
call
aas
gs
or
jge
push
or
pop
testl
adc
inc
jmp
pusha
add
and
pushl
pusha
or
call
clc
xchg
pop
or
push
mov
add
mov
test
or
dec
adc
dec
xor
sub
cmp
add
insl
or
mov
testl
inc
pop
pop
pushf
pop
mov
adc
adc
lock
cmp
cwtl
outsl
push
inc
js
adc
lahf
inc
mov
add
negb
dec
cli
xor
les
stos
cmp
dec
jno
adc
pop
or
xor
inc
out
shlb
adc
adc
or
jmp
orl
inc
ret
insl
sti
incl
add
push
push
mov
cltd
ret
or
je
mov
rolb
mov
imul
mov
shrl
or
hlt
or
cmpsl
bound
idivb
int
or
mov
xchg
and
inc
cmp
inc
loope
sub
shr
sbb
dec
clc
inc
jge
loopne
mov
adc
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
pushf
jb
dec
lock
fcoml
inc
fs
inc
pop
mov
jnp
mov
mov
lock
xor
push
pop
decl
jne
or
lds
not
and
cmp
or
and
sbb
sub
sarb
mov
pop
sub
jb
cld
push
dec
cmp
jo
bound
test
cmp
sub
and
bound
loopne
mov
adc
stc
add
jmp
stc
int3
push
pop
dec
push
addb
pop
mov
dec
int
sbb
clc
rolb
sti
dec
in
es
add
cmp
jnp
add
lcall
add
push
jns
sub
or
into
add
ljmp
adc
xor
ret
mov
pop
hlt
lea
push
outsb
pusha
dec
jg
or
imul
shll
lcall
adc
js
jmp
jmp
aaa
js
andl
mov
insb
xor
mov
aas
lcall
jl
cmp
out
or
xchg
cld
loop
pop
sub
pop
xor
push
sar
dec
loope
pusha
push
jp
movsb
pop
push
dec
sub
or
loopne
cwtl
sarb
xor
cmp
ss
jo
dec
je
filds
mov
call
ja
imul
mov
adc
adc
fimull
xor
dec
lea
mov
sbb
mull
xchg
jbe
mov
mov
push
cmp
mov
decb
into
mov
push
cmp
rdmsr
mov
sbb
push
push
aaa
push
add
popf
add
dec
insb
loope
pop
stos
add
loope
mov
cmp
dec
push
push
push
jge
inc
shll
shr
adc
adc
inc
cwtl
in
or
stos
pop
push
loopne
dec
or
loop
inc
push
nop
cmp
and
decb
xlat
mov
test
pusha
out
lods
mov
push
jne
mov
push
or
fnstenv
out
jnp
add
dec
sahf
lock
aaa
arpl
bound
rorb
lods
xor
mov
and
outsl
and
xor
pop
pop
lcall
cmp
je
mov
fistpl
mov
in
cli
and
ret
cmovle
inc
mov
dec
int3
loopne
fcompl
iret
jne
fwait
jno
push
les
xor
cmp
push
pop
inc
ljmp
pop
jbe
mov
enter
mov
mov
push
pop
outsb
leave
inc
test
sub
or
mov
sub
icebp
inc
js
in
sbb
mov
xchg
dec
add
stos
inc
cmpsl
pop
xchg
sbb
iret
push
inc
cmp
add
cmp
insb
jmp
stos
shlb
pop
mov
decb
jne
xor
mov
or
sub
dec
mov
lret
pop
pusha
dec
bound
outsb
cs
dec
push
and
cmpsb
imul
and
inc
mov
add
or
pop
xor
inc
and
or
cmp
cmpsl
sbb
ret
or
cmp
or
push
or
add
inc
mov
cmpsl
ljmp
adc
xorb
add
scas
mov
xor
ds
sbb
sbb
mov
and
sbb
leave
xchg
ficomps
jl
repnz
jecxz
push
cmp
sub
out
or
xorl
pop
inc
sahf
add
adc
mov
jbe
and
mov
lock
movsb
push
movb
rolb
test
sbb
mov
sub
add
add
jbe
testb
mov
add
pop
dec
push
ret
shlb
dec
mov
add
xchg
js
and
inc
cmp
cmp
ror
sub
add
push
mov
cmpsb
in
mov
pop
addl
sbb
test
repnz
cmp
dec
fcoms
into
jmp
xchg
jl
jle
push
push
dec
push
test
cmp
inc
loope
sbb
push
xor
add
dec
jecxz
dec
or
sti
ficompl
fsubrs
xor
lahf
pushl
loop
push
sti
adcl
scas
loope
divl
pop
mov
cmp
push
or
std
pop
and
jmp
sbb
sbb
dec
lcall
dec
inc
js
push
or
jmp
leave
and
push
hlt
inc
addb
enter
rolb
inc
pop
mov
sub
rorb
int3
push
mov
data16
or
je
sbb
adc
in
sbb
ficomps
das
or
call
rolb
sub
or
or
dec
sub
out
stos
adcb
nop
pusha
cmpl
jle
add
add
lods
aam
xchg
dec
jp
hlt
mov
jne
popa
sbbl
mov
mov
jge
sbb
aas
fwait
in
loop
call
movzwl
aad
in
int3
test
push
add
je
dec
loopnew
add
cmp
mov
xchg
and
movzbl
rolb
enter
pushf
mov
sub
rorb
mov
mov
push
and
add
loopnew
into
dec
dec
add
xor
jle
adcb
lods
or
insl
push
lret
pop
add
imulb
xchg
arpl
sub
shll
rorb
ss
cmp
leave
jge
daa
pop
jb
scas
and
xor
repz
loopne
icebp
push
out
push
jb
inc
pushf
fistpll
insb
jne
or
or
jo
jbe
pop
and
fdivrl
add
cmp
push
xchg
xchg
xor
scas
push
repnz
cmp
fs
inc
dec
push
jmp
out
sbb
int3
les
inc
or
pop
std
movsb
xor
ret
cmovo
shll
lea
leave
fs
xorb
push
cltd
dec
push
add
adcb
lock
shrl
xchg
aaa
push
cmp
jnp
xchg
add
mov
xchg
push
cs
enter
or
jnp
call
jnp
jnp
pushf
push
sub
jnp
neg
lret
mov
rolb
outsl
lahf
addr16
pusha
xchg
add
fs
xor
add
mov
mov
popf
and
jp
stc
pop
mov
push
test
xchg
xchg
lret
movsb
shr
cs
sub
mov
rcll
hlt
xchg
lahf
push
or
xchg
ret
repnz
cltd
shrb
cmp
call
call
xchg
pop
mov
dec
jb
pop
rolb
xchg
in
cwtl
add
push
nop
in
push
cmp
inc
test
test
mov
fwait
clc
mov
leave
mov
xchg
jle
cld
enter
cmp
and
mov
data16
sbb
data16
cli
test
addl
or
sahf
cmpsl
cmpsb
lea
push
shlb
imul
daa
cmp
push
data16
lea
pop
imul
cmp
inc
adc
ret
mov
pusha
out
sub
clc
xchg
adc
inc
cmpsb
ret
xchg
jne
js
pop
jne
fdivl
mov
mov
hlt
in
xor
pusha
leave
mov
add
or
and
pop
or
mov
test
inc
adc
loopne
and
mov
mov
shrl
add
dec
add
dec
bound
push
adc
cmp
popf
cli
sarl
add
test
mov
push
sar
inc
and
test
aaa
cmp
add
add
push
cmp
and
loop
je
pop
cmp
xor
push
push
out
add
xor
xchg
bound
sbb
sar
cmp
flds
ret
xchg
cwtl
add
mov
ss
out
add
add
adc
jl
mov
into
mov
dec
add
mov
js
add
testb
pop
test
or
loopne
mov
lret
pop
inc
add
mov
push
pusha
loope
jne
add
mov
or
inc
sub
ds
adc
mov
insb
cmp
mov
adc
push
push
das
loopne
shrl
int3
add
xor
aam
push
or
shll
enter
aaa
or
xchg
adc
adc
sub
loope
and
dec
cmpsb
imul
les
push
std
dec
inc
and
dec
and
mov
adc
in
repz
cmpsb
rcll
pushl
inc
lret
je
pop
mov
sbb
add
imul
adc
rcrl
int
mov
ljmp
enter
dec
je
push
or
mov
mov
outsl
pop
fcomp
pop
loopne
fldl
or
fldl
or
xor
jno
push
mov
pop
icebp
cmp
inc
lcall
push
leave
pop
jmp
jo
fnsave
cmp
rorl
mov
outsl
sbb
cmp
cmp
das
cmp
scas
pop
dec
xchg
dec
je
add
and
sbb
sti
fnstenv
sti
insl
xchg
push
lcall
jmp
sbb
popf
subl
cmp
pop
xor
fldt
sub
imul
stc
fwait
add
or
jns
lock
lret
xchg
adc
repnz
mov
cld
rolb
lret
lock
adc
pop
push
imul
cmp
push
push
xchg
adc
shl
push
popf
rorl
jl
jne
das
and
inc
lock
arpl
cmp
test
xchg
lahf
sub
jns
mov
leave
andl
sahf
in
mov
rcrb
push
mov
and
or
xchg
clc
and
push
dec
cmp
xor
lock
push
or
jne
xchg
jmp
add
jecxz
sub
sbb
and
inc
or
mov
in
outsl
cwtl
jp
push
push
xchg
jmp
inc
insb
sub
faddl
imul
lcall
jmp
test
push
clc
push
fmull
ss
jp
ret
arpl
mov
enter
push
adcl
in
mov
mov
dec
ret
sbb
push
add
adcb
and
add
or
mov
addl
adc
jle
shl
test
sbb
mov
mov
js
mov
mov
or
aas
mov
mov
js
xor
xlat
xor
mov
jmp
movsb
test
test
lock
call
push
pop
shlb
loopne
sbb
mov
lods
std
xchg
xor
inc
xchg
icebp
mov
pop
pop
mov
xchg
clc
inc
fcoml
lods
pop
add
incb
in
add
leave
xchg
repnz
jne
dec
sbb
gs
test
stc
std
lea
push
push
jg
testb
mov
cmp
push
clc
pop
add
mov
out
rorb
loopne
mov
pop
sarl
mov
sbb
enter
scas
xor
ret
ja
stos
lcall
fcoms
jnp
std
loope
ror
lods
inc
mov
push
xchg
lret
mull
or
shl
cld
leave
cmp
jbe
hlt
movsbl
gs
dec
dec
push
pop
or
notb
add
xorl
add
jbe
iret
mov
cmp
pop
ljmp
mov
lods
and
and
mov
in
lods
es
mov
mov
call
mov
push
or
inc
movsb
aad
xor
cmp
lahf
movsl
mov
insb
jne
inc
sub
pop
pop
scas
pop
rcl
pop
and
aaa
inc
divb
jne
neg
add
divb
cmp
inc
xor
push
movsl
cmpsb
inc
imul
int
lcall
js
pushf
cmpsb
shlb
movsl
add
das
push
mov
push
leave
xor
xchg
mov
repz
cmpsb
lea
mov
jg
xor
mov
inc
iret
outsl
lea
or
add
rorl
daa
repnz
subb
pop
xor
sbb
adcb
sti
push
inc
cmp
pop
inc
jl
lea
std
fnstsw
in
mov
mov
testl
fisubrl
mov
cmp
jecxz
fnsave
xchg
stc
mov
push
adc
test
mov
push
lock
or
imul
daa
jecxz
jns
daa
mov
sahf
mov
mov
push
inc
cld
imul
or
jbe
and
out
sbbl
dec
jnp
xchg
shr
mov
sub
jmp
sub
outsl
mov
and
cmp
inc
lods
test
pop
xorl
mov
adc
adc
and
std
vphsubdq
xchg
daa
daa
mov
xchg
loopne
sbb
pop
or
jns
std
aaa
addr16
push
cmpsb
subl
jecxz
or
ret
fdiv
mov
orb
push
scas
test
sbbb
in
xor
and
lahf
xlat
jp
mov
call
pop
mov
add
sbb
push
mov
std
push
lret
cmp
push
mov
fcom
mov
in
jge
mulb
xchg
std
inc
mov
mov
nop
std
lds
sub
lea
xchg
push
in
and
mov
push
test
sbb
pop
jne
dec
cmp
sub
popa
cmpsb
icebp
push
push
mov
xchg
and
mov
mov
mov
mov
imul
test
xor
cmp
jns
xor
xor
roll
rclb
adc
push
insl
mov
mov
dec
ds
cmp
cmp
mov
sbb
call
and
std
lock
movhps
jmp
stc
imul
test
repz
mov
es
inc
repz
stos
cmp
sti
mov
dec
push
fdivrp
or
xchg
jno
dec
ds
data16
ljmp
test
sub
dec
jmp
dec
lods
pop
jmp
cmc
shll
sar
lock
xor
cmp
jmp
sbb
jmp
bound
or
sbb
jge
divl
imul
popf
loopne
sub
addl
xlat
test
test
xchg
cld
ror
aam
jns
pop
xchg
scas
addr16
dec
sbbl
push
or
fbstp
jmp
pop
insl
mov
movsb
sub
lret
adc
popl
aas
insl
mov
inc
push
inc
lret
jne
sub
xor
cwtl
shrd
rorl
mov
lret
sbb
stc
fdivr
das
push
dec
xor
loop
jno
push
je
fs
and
std
pushf
mov
loope
adc
cmp
mov
xchg
aaa
fsubrl
adcb
xchg
xchg
fidivrl
push
jmp
and
add
push
cmpb
cwtl
aaa
jge
push
mov
mov
movsb
test
sbbb
inc
push
add
fmuls
mov
pop
sbb
push
xor
adc
sub
cmp
ja
inc
cmp
test
jp
shrl
sbb
subl
pop
push
pop
or
ljmp
mov
dec
mov
mov
addl
mov
pop
lea
add
xor
push
pop
push
test
test
movsl
call
add
call
sbb
push
pop
test
pushf
mov
in
mov
push
arpl
xor
pushf
dec
pushf
mov
xor
les
imulb
push
pop
or
or
push
dec
push
dec
mov
dec
es
fs
xchg
outsl
test
popa
pushf
inc
push
leave
and
sub
xchg
int
test
lcall
es
sbb
sbb
popa
test
jbe
fwait
push
pop
pop
arpl
cmc
loope
movsb
repnz
push
jecxz
mov
jb
test
test
add
mov
mov
cltd
jecxz
and
and
inc
push
lea
dec
mov
push
lea
and
repz
inc
push
nop
lret
mov
pushf
in
fwait
xchg
addr16
mov
icebp
inc
addl
adcl
fs
push
mov
inc
dec
movsb
imul
dec
inc
xor
dec
es
pop
lcall
movsb
bound
adc
aas
dec
add
adc
nop
inc
or
leave
dec
adc
pop
add
jb
xchg
pushf
pushf
nop
nop
adc
push
xor
leave
lods
lods
lods
adc
test
cwtl
jg
push
orb
je
mov
je
punpcklbw
stc
cli
inc
aam
filds
popf
cmp
mov
push
xor
movsb
lcall
andb
pop
shlb
clc
and
cs
pop
rclb
lods
jne
jnp
or
dec
adc
pop
and
movsb
push
add
pop
sbb
sbb
sarb
dec
cmpsl
adcl
adc
mov
shll
or
movsl
push
fidivl
mov
adc
inc
dec
loop
push
add
jne
push
sbb
inc
add
mov
sub
add
jb
pop
or
push
out
shll
test
pop
or
inc
in
jl
add
hlt
dec
movb
or
xchg
aas
ret
cs
mov
adc
idivl
jno
test
je
mov
xor
xor
loop
bound
ret
cmpsl
mov
sbb
pop
and
add
cmpb
and
jle
jg
dec
popa
popa
add
sub
mov
adc
mov
shll
fucomip
stos
bound
pop
test
daa
adc
sbb
or
mov
lahf
les
jmp
lods
or
mov
sbb
out
outsb
and
or
xchg
mov
pushf
aam
cmpb
es
inc
push
imul
inc
push
addl
jmp
add
leave
push
inc
sbb
loope
add
pop
cwtl
lahf
or
add
and
movsl
nop
shr
mov
push
add
enter
je
hlt
daa
clc
inc
push
inc
pop
ret
sbb
jae
testl
add
cmpl
test
rclb
jp
push
or
and
dec
movsb
pop
movsl
dec
enter
jae
dec
adc
insl
and
add
ja
mov
jge
inc
dec
loopne
jmp
loope
test
xchg
repnz
xor
aas
and
pop
jmp
lret
inc
stc
lret
cwtl
rol
mov
into
mov
push
shrl
xor
and
adc
sbb
push
and
push
xchg
push
adc
push
push
mov
popf
mov
xchg
cmp
mov
loopne
xchg
jo
xchg
xor
or
jmp
xchg
xchg
mov
xor
gs
add
add
add
xchg
out
dec
pop
sbb
adc
out
and
stos
add
push
adc
add
xor
into
mov
popf
imul
push
rcll
movb
lods
xorl
sub
fstl
mov
sbb
je
mov
sbb
adc
mov
mov
sti
mov
xchg
enter
xchg
gs
cltd
test
mov
jle
fcompl
jbe
mov
sub
jg
adc
lea
es
pop
and
stc
add
push
mov
daa
xchg
or
jae
pop
and
and
out
test
lea
dec
sbb
xchg
cmp
ljmp
jb
mov
adc
dec
in
and
push
into
ja
cmp
roll
pop
out
xor
or
xor
pop
jnp
rorl
mov
bound
shlb
inc
jl
pop
push
xchg
fidivl
push
cli
sbb
shlb
sbb
or
fimuls
mov
or
sti
jb
inc
clc
sub
insl
or
lahf
enter
ret
dec
and
pusha
xor
pop
ja
sub
dec
push
sbb
xchg
cmp
inc
cmp
inc
push
mov
fildl
add
aad
arpl
or
inc
popa
lret
push
pop
mov
push
adc
jo
mov
in
xor
or
dec
push
shrb
out
imul
ret
fsubs
roll
pop
int3
pop
ret
cld
jo
cmpsb
fs
jl
or
and
adc
rcrb
pop
dec
pusha
pop
add
leave
adc
adc
fwait
xor
mov
cmp
sub
add
leave
and
sub
fst
cmp
xor
pop
and
sarl
call
cmp
mov
stos
inc
sbbl
pop
sub
cmp
or
gs
xchg
test
cmp
inc
scas
push
cmp
xchg
ror
push
sahf
pop
mov
imul
lock
leave
push
sbb
or
les
int3
jae
les
adc
push
push
negl
js
mov
push
add
pop
or
xor
imul
pusha
ret
push
in
hlt
add
push
testl
add
popa
addb
pop
fiaddl
pop
push
mov
aas
dec
sti
or
jl
insb
sahf
testl
push
or
lods
scas
dec
pop
fnstenv
add
test
mov
pusha
call
sbb
ja
pushf
pop
xchg
ss
xchg
dec
pop
dec
adc
je
sbb
je
jmp
sub
mov
mov
mov
sub
jmp
cmp
iret
xchg
push
mov
push
ret
push
in
push
sahf
mov
add
scas
fimuls
or
sub
add
aam
fbstp
jne
sbb
inc
mov
cs
sub
adc
jbe
add
cmp
jge
mov
mov
pop
mov
rol
pop
sub
inc
idivl
xchg
pop
mov
aas
mov
sbb
push
push
dec
jmp
push
fsubl
insb
mov
lock
add
xor
add
adc
and
dec
shlb
mov
jne
pop
add
dec
xchg
data16
lret
pop
cmp
popa
loop
jmp
pop
mov
es
adcl
pop
es
shll
sbb
push
mov
popa
je
ret
mov
pop
ret
add
jne
inc
jle
dec
sub
orb
and
adc
iret
mov
push
fldpi
or
and
rol
in
jecxz
push
adc
lea
scas
xor
lret
loop
xor
fmuls
add
loope
jbe
orb
sarl
push
subb
pop
jne
icebp
inc
mov
icebp
lds
into
cmpsb
out
cmp
je
sahf
mov
mov
out
and
fdivl
sti
jns
aam
xchg
pop
addr16
outsb
cmp
jns
std
cld
jmp
sahf
inc
outsl
repnz
fs
out
sbb
std
sbb
enter
dec
mov
dec
ret
nop
andb
sub
and
cmp
hlt
or
and
cmp
ss
inc
hlt
inc
push
jle
push
std
mov
inc
mov
insl
cmp
dec
inc
nop
xor
xchg
push
sbb
shlb
ja
add
sub
lcall
imul
pop
pop
add
jmp
push
pop
inc
pop
add
push
cmpsl
insb
xchg
mov
or
mov
sbb
insb
cmp
jbe
push
pop
stos
fisttps
data16
push
xor
xchg
adcb
cs
cmp
dec
adcl
popa
or
das
mov
pop
je
gs
loope
mov
popa
les
add
xor
xrelease
frstor
jne
adc
daa
xor
pop
dec
rclb
adc
iret
in
aad
pop
add
dec
push
out
mov
push
mov
outsb
pusha
add
cwtl
or
in
fcomps
adc
mov
inc
pop
push
adc
call
jl
ficompl
mov
push
cmpsb
inc
mov
adc
or
push
cltd
add
inc
mov
xchg
in
xor
inc
cwtl
leave
test
or
or
xchg
add
and
sbb
push
mov
cmp
cmpl
sub
repz
jmp
xor
xor
enter
inc
adc
add
mov
popa
xchg
lods
enter
pop
je
jbe
add
pop
es
es
addb
and
and
or
loop
cwtl
sbb
push
push
pop
cld
pop
mov
icebp
xchg
xchg
dec
insb
push
push
inc
or
je
repnz
mov
pop
and
pop
addb
fstpl
inc
add
xor
lcall
push
pop
add
and
push
stos
pop
dec
sbb
inc
cwtl
mov
test
in
cmp
mov
dec
loop
inc
mov
imul
jmp
test
pusha
pusha
mov
xchg
dec
sbb
mov
jge
stos
xchg
mov
mov
jae
cli
and
movsb
inc
movsb
stos
add
punpckldq
gs
adc
push
daa
lock
cmpb
add
push
push
orl
xchg
inc
ljmp
and
jo
jle
dec
lret
pop
shrl
movsb
clc
inc
adc
inc
inc
pushf
or
pop
mov
sub
lea
or
scas
or
jne
cmp
dec
inc
inc
or
jne
repnz
fistps
push
sar
incb
lock
and
mov
sahf
adc
hlt
shll
push
clc
adc
pop
js
dec
insb
aam
mov
mov
popa
rcl
test
pusha
xchg
ret
jmp
push
add
andb
test
pusha
cs
jb
or
cmp
or
out
int
pop
bswap
cmpsl
and
push
or
jg
subb
jns
push
mov
je
pushf
xchg
push
pop
push
mov
mov
lahf
add
mov
mov
or
pushf
jmp
add
imul
or
or
push
and
frstor
inc
mov
cwtl
insl
ret
test
int3
js
into
mov
jb
pop
mov
push
and
mov
mov
mov
add
pop
sbb
push
rcl
jb
jl
movd
add
and
jle
and
andb
cmp
daa
adc
inc
popa
mov
dec
sar
sarb
jg
popf
add
add
adc
adc
xor
sbbb
mov
inc
push
and
or
or
jp
push
push
scas
cmp
sar
dec
mov
add
out
add
leave
xchg
push
sahf
inc
add
mov
sbb
and
cmp
notl
add
or
inc
adcl
inc
test
jl
fs
xorl
push
in
or
xorb
pop
dec
mov
adc
push
xchg
test
ret
gs
jno
cmc
push
jne
pusha
add
aas
push
aaa
xor
test
out
ds
mov
jne
adc
call
cmp
cmp
mov
movl
or
add
mov
shrl
pop
notb
xor
mov
adc
lea
adc
subl
inc
mov
arpl
adc
test
push
mov
xlat
cs
pop
push
and
push
xor
sub
lock
rcrb
lcall
mov
mov
test
adc
loopne
or
adc
in
inc
xor
not
push
shl
pop
push
lds
sub
cmp
lea
enter
add
adc
jb
loopne
aaa
xchg
pop
xchg
dec
add
ret
sub
jno
jge
add
aam
mov
jmp
imul
xor
inc
adc
push
sub
push
pusha
push
popf
or
jo
movsl
dec
repz
xchg
call
rolb
sub
stos
loope
add
or
pop
add
roll
call
je
sub
shll
push
jo
addb
inc
shlb
jge
hlt
rep
ss
neg
sub
push
add
lock
or
push
push
shlb
outsb
add
sub
and
xchg
test
push
pushf
push
dec
orl
addr16
and
push
mov
push
insl
or
pop
mov
push
mov
js
fadds
jae
or
test
cltd
jecxz
mov
lahf
or
movups
add
jmp
cld
xchg
sub
add
mov
jae
jecxz
xchg
out
loopne
add
es
mov
jae
pop
outsb
movl
inc
adc
insb
inc
jge
jo
adc
js
jmp
lret
push
stc
sub
adc
lahf
test
xor
sub
js
mov
pop
xchg
fnclex
mov
or
ljmp
stc
mov
outsl
push
push
dec
adc
push
and
fdiv
pop
xor
push
pop
pop
lahf
iret
imull
inc
or
jbe
jle
pushf
movsl
test
jg
pop
sbb
out
sbb
js
adc
hlt
adcl
cmp
and
mov
jno
add
loope
push
xchg
and
ds
test
fcomp
in
and
call
xor
std
mov
xchg
adc
dec
ja
fiadds
lahf
mov
shrl
rcll
add
sub
xor
lcall
inc
rep
add
jbe
and
xor
in
adc
ss
and
mov
je
push
push
shrb
ret
jmp
pop
testl
test
dec
out
pop
add
les
xor
sbb
pop
call
divb
pop
xchg
bound
lock
movsl
mov
clc
lock
or
lahf
mov
xlat
dec
xchg
and
pusha
adc
cmp
mov
push
add
in
fdivrs
push
imull
rcrb
pop
sub
or
pop
push
nop
xchg
fdivl
push
ret
int3
clc
setns
sub
iret
decl
popf
ss
or
fs
or
pop
mov
mov
push
fsubr
mov
fidivrl
dec
push
xor
sub
mov
and
mov
cmp
cmp
xor
inc
xor
add
inc
sbb
mov
push
fldenv
push
xor
repz
in
xchg
sarb
fldl
test
aam
rcl
in
out
cmp
ret
and
mov
push
ret
out
lods
sub
and
push
subl
or
test
nop
int3
je
jne
xor
and
and
ljmp
jecxz
pop
aas
jmp
adc
outsl
jo
xchg
outsl
jnp
mov
adc
pop
mov
imul
ss
shll
mov
lea
fisubl
popf
mov
int
pusha
sbb
test
aaa
stos
xor
push
int
jecxz
movsb
das
push
mov
mov
sar
push
push
hlt
push
pop
imul
test
xor
cmp
jne
adc
inc
jmp
hlt
pop
jp
mov
jne
imul
jl
push
shrb
aas
sub
sub
enter
mov
cmp
rcr
fsubs
popa
add
adc
xor
jle
inc
push
mov
jo
xor
faddl
ret
sbb
mov
cmp
push
daa
addb
jne
and
push
ja
incl
mov
inc
push
sub
lcall
push
jle
mov
or
sub
mov
pop
push
inc
xchg
mov
dec
or
add
iret
rclb
cld
inc
sbb
rol
jns
sarb
roll
push
inc
sub
push
adc
xchg
int3
or
pop
cwtl
xchg
aas
inc
addr16
ljmp
xor
and
push
add
pop
or
dec
shlb
xchg
aad
jbe
or
test
or
outsb
cld
mov
andl
mov
push
sub
cwtl
das
andl
sbb
and
sbb
pop
inc
push
mov
xor
lahf
out
jp
add
jg
insb
jae
push
xor
mov
insl
dec
loope
imul
frstor
add
pop
pop
sub
cld
add
mov
or
mov
pop
adc
lret
ds
push
shr
pushl
enter
mov
or
inc
or
xchg
je
cmp
mov
imul
mov
dec
cmp
loopne
sarb
imul
or
push
push
inc
sbb
js
movb
mov
inc
daa
addl
dec
jmp
dec
adc
sbb
sub
rcl
aas
and
js
cld
mov
jg
push
cs
mov
inc
lods
mov
inc
or
push
push
push
lret
in
outsl
bound
sub
add
push
jl
push
and
mov
or
add
add
out
loopne
dec
dec
or
jg
add
inc
pop
aas
dec
insb
daa
inc
scas
jle
sub
add
cmp
sbb
pusha
mov
add
bound
cmp
add
dec
aas
rcrl
push
dec
repz
pop
jg
inc
add
shll
rcrl
jl
mov
sub
xchg
inc
sbb
xchg
leave
cmp
fstl
jle
sbb
and
call
push
push
pusha
stos
jo
jecxz
jne
add
xor
or
fstps
loope
clc
push
jb
int3
add
mov
push
and
sahf
mov
lods
nop
jp
mov
out
jb
imul
mov
and
pusha
push
cmpsb
or
clc
shlb
outsl
add
insb
mov
outsl
mov
cmpsl
adc
gs
hlt
rclb
pop
cmp
lock
cmpsb
pop
adc
jmp
push
cmp
jae
dec
je
xchg
js
js
pusha
jg
inc
dec
shl
add
push
int3
xchg
mov
add
clc
inc
and
adc
rcrl
add
or
sbb
and
sbb
clc
adc
xor
pop
mov
sub
rolb
lret
enter
cmp
inc
push
pop
cmp
rol
mov
sbb
lods
mov
or
je
add
add
adc
aaa
out
add
es
jg
aad
push
or
xchg
add
fisubl
or
movl
cmp
mov
add
or
add
and
cwtl
inc
inc
es
cwtl
mov
pop
repnz
imul
xlat
and
imul
push
hlt
adc
mov
nop
inc
shrl
mov
test
je
fstps
cltd
aam
push
cs
loopne
inc
cmpl
in
lea
add
jl
push
jmp
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
xchg
les
testb
test
inc
rorb
in
and
push
leave
adc
push
dec
adc
enter
mov
sbb
sbb
sbb
movsb
inc
push
pop
cmp
pushf
cmp
dec
nop
mov
inc
lcall
ja
fcoms
and
add
jmp
xor
inc
xor
movsl
sub
rclb
xorl
and
or
sub
jne
push
or
xchg
loop
aaa
leave
push
icebp
cmpsb
outsl
adc
sbbl
dec
or
or
repz
xor
test
jns
jge
xlat
cmp
fbstp
out
jb
aas
sbb
dec
pop
je
pop
cmc
and
fs
test
or
push
and
loopne
sbbb
mov
dec
out
jb
xor
lahf
inc
cmp
jae
mov
inc
clc
push
cmp
jl
mov
inc
pop
les
cld
cwtl
dec
adc
bound
jbe
or
dec
test
inc
jne
clc
push
filds
call
ret
cmp
cmp
ljmp
or
movsb
jge
popa
or
add
stos
repnz
dec
dec
or
enter
mov
mov
icebp
cmp
scas
mov
sub
mov
sbb
or
add
or
xchg
mov
loopne
mov
mov
dec
push
shll
insl
sbb
pop
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
rolb
mov
pop
mov
rol
scas
pop
jle
xchg
out
push
aas
xor
inc
push
inc
pop
cs
sub
inc
add
or
sbb
cmpsl
inc
nop
inc
mov
fs
push
or
aam
mov
jecxz
test
jle
add
cltd
inc
loopne
xchg
daa
mov
arpl
call
xchg
adc
jg
xorl
xchg
insb
aam
jb
sub
push
adc
popa
mov
jbe
add
cmpsl
or
push
loopne
sbb
dec
in
dec
mov
aad
cmp
fstl
orl
sbb
lret
pop
hlt
xorb
pavgb
in
mov
rclb
lds
test
mov
add
subl
out
pop
push
negb
std
jb
loope
mov
add
test
and
jp
adc
notl
repnz
pop
add
call
ljmp
pop
addl
es
cmc
sub
xor
sub
mov
push
ljmp
and
add
inc
dec
and
imul
mov
into
dec
and
jg
call
je
cmp
adc
jecxz
xor
cmp
jb
testb
mov
inc
add
movsb
add
dec
imul
out
gs
movsb
mov
movb
and
adc
xor
cmp
jbe
mov
push
test
sbb
js
adc
push
pop
push
xchg
cmp
call
mov
ret
mov
inc
sub
adc
mov
pop
cmp
bound
insl
clc
push
int3
inc
insb
sbb
mov
pop
imul
insl
loope
rcll
inc
pop
pop
mov
or
push
lahf
ud2
mov
jno
sti
test
push
lock
push
xor
out
int3
jnp
lsl
jmp
push
pop
push
push
inc
shr
rcr
jns
push
std
shr
rcr
or
div
pop
dec
adc
inc
div
out
mov
out
jb
cmp
or
cmp
or
xor
add
or
ficompl
sub
lret
lret
ret
fxch
mov
call
fimull
adc
mov
sub
xor
std
inc
ror
iret
jne
mov
es
pop
pop
xchg
fiaddl
sahf
js
je
fcoms
mov
dec
fbld
test
cmpsb
jmp
dec
sbb
push
dec
add
fs
les
clc
notl
add
lea
jno
adc
cmpsl
mov
out
es
and
lea
ss
ret
test
pusha
loop
pop
jns
aas
mov
cmp
adc
jbe
and
adc
adc
push
int3
and
cld
sbb
pop
and
jo
add
add
or
jp
and
scas
dec
adc
sub
add
jl
mov
push
mov
cld
sbb
adc
sahf
lds
add
orl
inc
jl
mov
adc
push
lcall
mov
stc
xchg
pusha
jecxz
and
negb
inc
clc
sahf
je
xchg
cli
adc
mov
add
lea
lea
or
sarl
jnp
jbe
adc
insb
inc
aad
dec
mov
hlt
jmp
popl
dec
mov
or
xor
adc
and
adc
mov
pop
js
sbb
les
adc
loopne
adc
mov
mov
cmp
lcall
sub
or
call
pop
or
clc
sbb
call
pop
out
adc
sbb
add
push
add
decb
inc
cmp
xor
out
scas
scas
jle
adc
cmp
inc
lret
cmp
imul
aam
lret
and
pusha
cld
push
outsl
push
pop
sub
mov
jb
rorb
or
adc
in
ss
ss
leave
leave
leave
sub
xor
ret
sbb
cmp
fisttpl
push
inc
and
inc
cmovs
push
push
pop
add
pop
pusha
fs
insb
jo
js
and
in
sbb
xchg
dec
rclb
mov
xchg
cwtl
pushf
dec
xor
and
movsb
test
in
rcrb
je
ret
js
add
out
cmp
loopne
lea
push
pop
xor
mov
inc
mov
or
call
adc
in
adc
xor
int
sbb
sbb
xor
push
sbb
and
aas
xchg
nop
int
add
and
in
mov
pop
xlat
adc
jns
jo
add
xor
ret
cmp
push
aam
sbb
pop
add
dec
jne
dec
cmp
data16
nop
or
and
es
lret
sbb
push
mov
or
mov
mov
jecxz
mov
in
add
pop
loopne
adc
daa
movsl
dec
xor
mov
add
push
xchg
incb
inc
fcoml
add
sbb
aam
repnz
sbb
mov
or
sbb
loopne
xor
mov
jne
xchg
addr16
and
inc
xchg
or
pusha
fwait
or
fdivs
pop
inc
lods
pop
cmp
insl
push
lea
je
ret
cmp
fmul
daa
sbb
dec
push
xor
ret
xchg
in
arpl
dec
movsl
fdivrl
cmp
fmuls
pushf
push
jle
leave
jnp
sbb
push
popf
dec
pop
int3
sbb
sbb
sbb
sar
jo
out
cmp
jae
xor
pop
arpl
aam
add
or
and
je
push
pushf
frstor
dec
jnp
mov
and
and
and
loopne
test
xchg
mov
scas
enter
addb
stos
ret
lret
addr16
or
dec
repz
les
and
cmp
pop
mov
int3
nop
cmp
xchg
pop
shrb
dec
adc
push
or
cmpb
pop
or
mov
sbb
dec
movsl
and
stos
adc
adc
outsl
dec
clc
popa
push
out
jl
adc
xor
bnd
jp
push
inc
cmpsb
dec
mov
mov
jb
adc
sti
data16
mov
inc
iret
cmp
pop
sbb
add
and
fcoms
or
mov
loopne
xchg
and
outsb
cmp
rolb
int3
push
pop
es
lods
sub
ret
jl
cmp
jb
push
mov
cmp
jmp
ss
add
sbb
dec
and
push
std
and
dec
xor
loope
es
jnp
call
xor
test
and
xchg
push
xor
sbb
shrb
and
jmp
fwait
mov
and
in
mov
das
mov
add
ret
mov
xchg
and
in
cmp
xor
xchg
xchg
ja
cmp
xor
push
and
pop
adc
mov
jg
xor
mov
push
lea
or
and
out
ficompl
fimull
sar
mov
test
cld
or
add
pop
inc
divl
jne
aad
popa
push
mov
lods
mov
or
push
adc
outsl
in
dec
popf
add
pop
inc
adc
or
sbb
push
pop
stos
inc
dec
xor
insl
std
lods
cwtl
sahf
push
inc
pushl
mov
cmp
ds
pusha
dec
sub
inc
das
addl
jnp
cmp
orl
pop
fiaddl
xchg
mov
daa
sub
mov
fldln2
loopne
inc
or
or
inc
mov
mov
push
call
push
hlt
mov
lods
test
inc
rorb
jmp
addb
ljmp
sub
add
fdivl
fsubs
xchg
movsl
or
out
clc
loopne
xchg
xor
sbb
inc
lea
cmp
inc
lock
mov
shlb
cmp
pop
pusha
fcoms
dec
jnp
test
insl
add
dec
sub
jns
xor
sarl
cmp
test
lea
loop
cmpl
add
jne
rcr
push
or
push
add
iret
sbb
scas
sub
mov
js
fs
aam
je
jo
rcrb
add
inc
cmpsl
notl
jmp
inc
jp
addb
add
iret
test
sub
je
mov
clc
pop
cmp
sbb
lods
imul
stc
iret
scas
jp
xchg
ficompl
mov
inc
mov
adc
dec
add
xchg
sbb
mov
push
lret
fsubl
dec
and
jmp
xchg
jbe,pt
ret
mov
andl
repz
movsb
push
cmp
mov
scas
pushl
adc
cli
or
jnp
jbe
inc
mov
adc
cmpl
fmuls
dec
pop
movsl
sub
and
rolb
inc
pop
inc
add
cmp
jmp
mov
jp
dec
incl
mov
xor
gs
js,pt
movsl
dec
add
add
cmp
cmp
rclb
inc
lods
push
adcl
mov
loopne
cmp
or
and
mov
add
add
nop
lret
inc
aas
push
stos
loopne
mov
pop
xchg
push
int
stc
pop
xchg
cmp
add
pop
mov
xchg
push
xchg
sub
repnz
or
add
loopne
mov
addr16
push
pop
lock
scas
out
fs
mov
add
adc
and
cmc
fisttpll
ret
sub
test
testl
push
jo
lret
jmp
pop
rorl
repz
nop
lods
mov
insb
ja
lret
xorb
bnd
cltd
sub
rorl
bound
ljmp
lock
adc
xor
rorb
mov
pop
inc
mov
inc
cli
inc
cmpb
or
jg
movsl
rorb
pop
add
jae
repnz
dec
rclb
fs
cs
ret
and
je
shlb
call
pop
mov
push
sub
and
test
incl
mov
subb
push
push
outsl
push
dec
adc
sbb
add
dec
jl
and
sarb
add
popa
add
unpckhps
js
das
into
repz
sbb
or
pop
push
pop
sbb
mov
xor
inc
add
jg
inc
inc
inc
and
std
mov
adc
fsts
dec
in
jno
add
xchg
dec
add
lret
xor
nop
adc
push
and
mov
xor
arpl
out
bound
and
stc
mov
push
pop
inc
xor
sub
out
pushf
cli
or
mov
jp
ja
fldl
mov
jl
js
std
into
mov
rcl
fwait
cmpb
out
jb
xor
inc
cmp
adc
divb
sub
sub
dec
push
aam
test
orl
nop
sbb
shlb
adc
push
gs
push
pushf
pop
mov
mov
rolb
gs
sub
pop
cmp
jno
js
lods
jg
rclb
lods
cmpsb
ja
dec
mov
in
sub
stos
jge
addr16
pop
push
test
sbb
or
adc
mov
cmc
andl
xor
and
fs
mov
lea
cli
js
push
pop
lods
pop
sarb
xchg
icebp
int3
pop
pop
mov
cmp
mov
adc
xchg
add
xchg
xor
clc
je
add
add
dec
cmp
mov
cmp
into
lcall
pusha
in
mov
lock
adc
push
sbb
sbb
lods
mov
push
fsubr
inc
mov
jmp
push
and
jge
add
pop
jl
data16
jge
cwtl
inc
test
add
js
pop
sbb
dec
in
xor
push
add
push
popa
add
movb
enter
inc
pop
xchg
or
dec
cmp
mov
sar
sarb
push
and
leave
inc
shld
test
xor
out
pop
push
je
dec
push
pop
dec
sti
inc
jmp
icebp
xor
rolb
add
cmp
add
mov
cmpsb
fcmovu
xchg
or
or
ret
push
xor
pop
pop
cmc
cmp
push
or
gs
cmp
inc
sbbb
cmp
sub
sbb
inc
lcall
sbb
cmp
mov
fistpl
orb
outsl
or
gs
outsb
out
sub
push
pop
cmp
push
es
jl
pushf
add
int
xchg
xchg
lcall
pop
mov
cmp
insb
dec
sti
xchg
lret
test
pop
mov
xor
mov
or
sbb
dec
je
push
add
adc
js
inc
sbb
push
sbb
add
jecxz
inc
sbb
jg
xchg
sbb
lock
adc
and
mov
jbe
mov
mov
ds
and
add
mov
fisubs
repnz
das
adc
mov
rcrb
inc
stc
sub
mov
jl
or
or
call
mov
data16
or
or
pop
mov
popf
inc
push
jae
in
mov
jae
jne
or
aam
dec
inc
add
xor
add
jmp
add
and
sbb
int3
adc
adc
push
sbb
jecxz
inc
jne
and
and
dec
or
ror
callw
loopne
mov
in
std
jmp
rorl
fwait
pop
test
or
xchg
sbb
xor
jne
rcll
roll
call
jg
mov
xor
pop
sub
je
add
jbe
push
popf
ds
cmp
testl
and
mov
pop
idiv
add
push
ds
movsb
lret
jmp
adc
dec
jle
mov
push
add
lret
in
imul
inc
or
mov
es
or
inc
bound
inc
pusha
sti
mov
mov
xchg
test
and
movsl
or
add
or
iret
and
mov
and
shll
dec
xor
adc
or
inc
outsb
aas
and
shr
es
jmp
rorb
and
and
add
lock
test
adc
or
add
xorl
adcb
sbb
lock
or
or
sub
sub
mov
and
or
mov
jmp
sbb
lock
and
mov
adc
jl
and
sub
rcr
outsb
outsb
jge
add
or
sbb
sub
jle
or
or
into
jge
mov
data16
jo
and
push
pop
adc
pusha
inc
sbb
ja
pusha
pusha
loope
pop
sub
dec
sub
scas
dec
and
adc
ja
mov
fnstsw
pusha
pusha
dec
sbb
sbb
repnz
pop
fimuls
imul
adc
xchg
cmpsl
repnz
sti
add
add
xchg
filds
dec
add
push
xor
mov
or
sub
push
lods
stos
sbb
mov
fsubrs
pop
testl
mov
xor
pop
xorb
in
imul
inc
add
adc
add
inc
flds
fldcw
pusha
sub
pop
push
push
insl
popa
xor
cmpsl
add
inc
or
fwait
clc
mov
test
rcrb
dec
pop
sub
and
in
fsubrp
imul
sti
mov
test
inc
bound
xchg
aaa
sbb
fldz
rcr
sbb
jle
xor
add
les
sub
sub
jmp
sub
aaa
movsl
cmp
fldenv
inc
test
int3
sti
push
div
add
int
sbb
pop
dec
jnp
into
adc
or
ss
adc
mov
outsb
mov
or
or
mov
push
mov
inc
leave
ljmp
add
dec
div
xchg
jg
sbbb
sub
test
out
dec
into
enter
in
sbb
rorl
adc
mov
adcl
mov
push
inc
test
push
sahf
jmp
pop
movsb
xor
in
aam
rcll
adc
decb
push
and
sbb
pop
sub
mov
adcl
jg
xchg
test
and
and
add
dec
test
add
scas
and
and
pop
movzbl
add
or
stos
ljmp
lds
fs
loop
movsb
sbb
sbb
mov
sbb
sub
hlt
adc
or
in
subb
push
rolb
pop
pusha
and
push
jle
mov
add
mov
adc
push
add
lods
fsubrp
mov
jmp
jno
mov
or
jo
cmp
add
fs
or
or
jl
adc
ficoms
pusha
jmp
inc
mov
into
insb
imul
pop
sub
das
loopne
mov
fsubrl
test
mov
or
imul
incb
stc
xor
cmp
and
sbb
or
mov
test
dec
xchg
cmp
sub
icebp
dec
adc
into
int3
pop
push
add
xchg
mov
xchg
and
adc
adc
inc
mov
pusha
mov
pop
pop
add
jecxz
mov
mov
or
out
mov
cs
faddl
into
rolb
roll
mov
clc
aad
shl
jne
jb
fs
gs
clc
dec
add
sbb
jmp
sbb
adc
or
cmp
add
into
xor
adc
addr16
inc
rclb
cwtl
in
in
outsl
mov
xchg
jp
ret
imul
xor
or
mov
test
sbb
push
or
adc
dec
jle
out
mov
inc
jb
jne
adc
loope
mov
inc
sbb
xor
push
add
jmp
jl
sbb
sub
mov
ljmp
shlb
enter
push
frstor
push
lret
adc
sbb
loop
inc
fstps
and
pusha
outsl
or
fldcw
push
cmpb
jbe
mov
fldt
jo
fcmovne
fwait
sahf
adc
enter
sbb
les
xorb
bound
jle
call
je
jo
mov
into
and
jns
add
in
scas
add
inc
je
sbb
mov
xchg
scas
push
repnz
xchg
and
test
jmp
and
and
cmpsb
push
shl
cmp
jbe
out
add
pop
mov
pop
add
inc
adc
push
jbe
and
xor
je
fsubrl
mov
insb
sbb
ud2
dec
sbb
sub
pop
or
mov
push
mov
jno
data16
jo
adc
ja
mov
jnp
stc
int3
mov
and
mov
push
jb
xor
dec
adc
sarb
push
imul
adc
in
fcmovb
test
xchg
or
mov
mov
leave
xor
repz
inc
psubq
xchg
shl
adc
test
pop
les
add
inc
and
inc
pop
adc
enter
std
or
loope
dec
les
popa
or
add
pop
xor
adcb
scas
push
mov
dec
cmpw
dec
push
test
mov
ret
sarb
adc
test
mov
or
add
dec
push
push
dec
subb
cmpsb
add
cld
dec
and
jmp
aas
daa
mov
push
push
mov
dec
push
add
scas
cwtl
pop
test
jne
xchg
jno
push
add
cmc
cmp
pop
mov
inc
stos
stos
repnz
pop
pop
or
jge
ret
mov
add
jle
loopne
mov
cltd
and
add
stos
pop
xor
orb
jns
dec
xchg
loopne
push
fwait
dec
jl
push
lock
inc
mov
or
test
cmp
testb
inc
aam
loop
rolb
adcl
loopne
mov
dec
cltd
call
pop
and
mov
out
mov
inc
fistl
jbe
lea
cltd
sarb
add
or
popa
cmp
shlb
cmp
sbb
aas
cmp
enter
incb
jae
fisubs
sbb
mov
adc
xchg
movsl
adc
movsb
mov
addl
pusha
add
jge
push
inc
test
xor
push
add
in
or
or
dec
fsubl
ret
stos
inc
repz
adcl
imul
loope
movsl
cmp
mov
jle
fcoms
xor
or
es
mov
cmp
sub
not
rcrb
cmpsl
rclb
je
mov
and
push
ds
push
inc
mov
and
lock
sub
and
mov
addb
loopne
in
lock
or
adc
xchg
lds
inc
int
jmp
loop
mov
add
xor
test
in
loop
mov
test
add
mov
ja
pop
lea
mov
cli
jg
mov
jmp
mov
xor
mov
and
dec
jns
inc
lock
dec
and
mov
jecxz
pushl
cmp
push
imul
inc
jo
push
inc
mov
adc
jo
jo
mov
mov
push
or
mov
sub
loop
lea
and
mov
sub
mov
sbb
dec
xor
jge
aas
sbb
andb
scas
shl
pop
enter
mov
add
shlb
mov
inc
daa
dec
push
in
fwait
add
and
add
mov
sar
xchg
inc
pop
adc
jl
jl
mov
or
nop
sbb
add
pop
jns
and
add
add
pop
stc
test
sbb
xchg
mov
clc
or
or
pop
inc
jl
push
xchg
and
add
or
lcall
aam
loop
add
push
lock
sti
lcall
mov
imul
mov
pushf
mov
sbb
into
pop
mov
test
or
lods
mov
push
or
inc
or
cmp
loop
jne
and
inc
jmp
mov
sub
or
xchg
add
aaa
push
lods
aad
pop
mov
sub
cmp
ja
adc
pop
push
dec
jmp
fs
imul
into
add
pop
mov
pop
xor
push
mov
add
mov
into
jmp
pop
testb
or
jmp
andl
scas
loopne
push
jmp
cmpsl
mov
push
sub
sub
lods
push
sub
frstor
push
and
mov
iret
rorb
mov
arpl
xor
mov
sbb
push
adc
sti
jl
jbe
xor
subl
adc
pushf
push
cmp
adc
ds
dec
push
jmp
dec
gs
sbb
mov
jae
mov
sub
push
cmp
jbe
insb
inc
mov
pop
jge
pop
out
jne
sarl
out
nop
iret
cmp
add
jne
js
jae
imul
xchg
aad
cmp
mov
mov
outsb
mov
call
outsb
mov
pop
push
sub
fucom
adc
gs
orl
mov
dec
sub
inc
push
and
adc
test
stc
sub
cmp
mov
jo
test
mov
fnstenv
call
mov
mov
mov
test
nop
mov
pop
push
inc
fxch
pop
cmp
or
loope
adc
add
inc
testl
jp
sbb
fdivp
pop
xor
and
dec
cmpl
jmp
mov
mov
jne
test
and
sub
stc
jle
push
xchg
jg
std
jecxz
add
fsubr
push
out
pushf
jmp
push
cwtl
imul
mov
push
mov
dec
jl
rorb
movsb
scas
mov
in
jne
xor
stos
mov
push
cwtl
jge
neg
add
adc
adc
xor
sub
cmp
cmp
cmc
cmp
nop
sbb
cmp
mov
enter
mov
adc
adc
push
push
mov
xlat
adc
inc
in
and
pop
loopne
test
jmp
push
inc
mov
sbbl
push
std
xchg
xor
mov
dec
mov
cmp
cmp
push
clc
dec
or
mov
lea
icebp
mov
push
xor
and
and
and
adc
dec
inc
imul
rcrb
and
std
xor
mov
std
mov
or
je
jle
mov
mov
pop
js
jae
mov
pop
movb
testl
jne
enter
pop
and
jne
test
sub
lret
out
jne
inc
or
cmp
imul
jne
hlt
int3
add
jne
mov
and
mov
test
mov
or
test
rcrb
cmpsb
stos
sbb
in
adc
les
inc
mov
lcall
and
scas
sbb
cld
jo
out
shl
dec
lock
aam
add
imul
insl
mov
pushf
sub
lcall
add
call
and
add
test
js
mov
fbld
lock
bound
pop
mov
shr
push
rcll
pop
shl
mov
jg
or
xchg
nop
loop
adc
inc
mov
mov
adc
dec
dec
outsl
adc
fcom
insl
fadd
sub
shr
or
mov
sahf
dec
xchg
push
ret
or
insb
mov
mov
push
pop
add
test
and
inc
mov
lcall
add
ficompl
mov
push
lcall
inc
jmp
call
ljmp
fisubrl
pop
jle
jb
inc
push
test
pushf
fmull
clc
rorb
orb
insl
xor
jmp
test
or
sub
sub
mov
outsl
sbb
into
jmp
scas
jnp
ret
add
jb
and
scas
add
int3
call
test
int3
add
lcall
lret
sub
jmp
sub
add
negb
mov
movups
int3
sub
and
rorb
fisubs
or
call
xchg
mov
shrb
add
cmpsl
stc
mov
inc
add
jg
cmp
repz
es
pop
test
or
adc
nop
jne
subl
cmp
outsl
mov
test
pop
jne
cmp
add
inc
inc
scas
inc
mov
mov
es
cmp
int
mov
mov
in
inc
stos
adc
dec
pop
addr16
mov
adc
inc
cs
pop
loopne
cmc
or
ss
cmp
je
or
sar
xor
mov
dec
cmpb
je
mov
cmp
shll
dec
mov
inc
inc
mov
out
add
add
fcompl
gs
shrb
add
test
jae
sbb
xchg
pusha
movsl
out
clc
sbb
jbe
jecxz
out
or
mov
xor
add
popf
xor
lock
xor
stos
sub
sub
push
add
pusha
xchg
testb
pop
jno
add
jmp
push
push
pop
std
sbb
loopne
testb
sub
add
notb
mov
rolb
jbe
or
add
add
cwtl
adc
mov
mov
dec
psubb
cmpsl
lahf
push
cmpl
in
clc
add
mov
jmp
or
add
aas
sub
movb
sbb
add
jge
jle
add
das
sahf
add
xorb
sahf
ds
mov
es
sbb
mov
add
lcall
jmp
sub
dec
adc
ss
or
pop
or
int
lea
mov
dec
data16
and
cmp
add
les
sub
imul
negb
cld
xor
push
ljmp
sub
add
dec
pop
add
pop
enter
add
and
lods
dec
cmp
push
xor
adc
xor
xchg
aam
aad
sbb
push
inc
shlb
xchg
out
mov
fadd
jbe
xchg
dec
adc
push
add
sub
adc
lahf
ret
fcoml
lods
inc
mov
cmp
xor
cltd
pcmpgtd
lock
add
inc
je
cmp
inc
jl
and
add
mov
mov
add
in
dec
xor
mov
adc
cmp
push
test
into
adc
testl
pop
xchg
fnstcw
xchg
pop
jmp
aaa
cmp
test
test
or
add
adc
leave
inc
inc
test
jle
push
aam
mov
mov
clc
test
mov
mov
sar
dec
fmuls
out
pop
fistps
test
add
enter
add
push
xor
inc
ret
or
and
mov
xor
outsb
adc
mov
dec
lea
sub
xor
ret
scas
dec
and
add
cmpsb
movb
daa
and
gs
je
mov
xchg
ss
dec
fwait
clc
sbbl
loopne
lock
jo
mov
rorb
shll
cmp
vmovlps
add
mov
test
dec
inc
test
xor
adc
xchg
js
adc
pop
adc
xlat
or
jbe
mov
xor
sub
in
add
loop
sub
xor
sbb
ss
jbe
movswl
les
jo
pop
sbb
data16
sbb
jbe
add
jl
dec
shrd
push
daa
xor
jle
cmp
xor
jge
sbb
lea
xor
incl
pop
fwait
nop
stc
inc
add
dec
jmp
xchg
xor
jb
clc
sub
sbb
sbb
sub
inc
call
add
or
push
mov
add
mov
fsub
lret
lock
popa
mov
in
shl
out
and
add
stos
push
push
pop
sbb
js
jg
jb
mov
sub
or
fidivrl
rorl
lock
or
pop
adc
jb
repnz
sbb
ret
loop
add
jbe
cmp
test
shll
mov
lods
jb
fs
jae
ficompl
inc
dec
pop
or
pushf
or
leave
or
sub
pop
xorl
push
push
add
stc
mov
mov
push
pop
es
add
ret
or
insb
test
jne
jo
inc
hlt
loop
call
cmpsb
mov
call
orl
sub
inc
ror
add
mov
andb
rclb
lock
inc
sub
or
jge
shlb
int3
jl
fwait
jns
scas
popaw
push
mov
mov
pop
nop
push
or
xor
ret
cltd
out
into
mov
and
adc
xor
aad
repz
cmp
nop
xor
pop
push
shl
jne
les
or
cmp
or
adc
lahf
inc
lret
jbe
adc
pusha
movsl
addl
mov
sbbb
adc
push
insl
push
jmp
xchg
pusha
mov
shlb
mov
cld
cld
jl
lods
sub
or
pop
ficompl
ljmp
into
and
adc
mov
sbb
dec
je
jp
jge,pt
int
pop
jle
gs
or
pop
data16
bnd
xchg
in
add
fwait
fwait
inc
popa
je
inc
je
dec
sub
add
jmp
xor
add
push
out
xchg
fcoms
popf
or
cmp
aad
mov
push
enter
and
movsl
or
aam
sbb
fldl
fdivl
sub
dec
add
push
pop
clc
fstps
or
and
in
jecxz
and
sub
sub
js
dec
rol
ret
nop
pop
or
xchg
rcrl
cmp
insb
jl
rcr
pop
arpl
cmp
enter
dec
sbb
imul
popa
loopne
or
sbb
jb
sbb
cmp
sbb
jp
sbb
inc
inc
jmp
dec
imul
push
jp
dec
inc
stos
dec
leave
sbbb
insl
cmp
cmp
and
xchg
xchg
pop
lods
mov
mov
sub
add
lahf
dec
push
sub
bndstx
push
and
popf
ret
rcrb
xchg
push
mov
lcall
icebp
add
mov
lock
push
mov
mov
cmp
sub
or
hlt
shrb
pop
inc
mov
js
mov
adc
jmp
insl
js
push
adc
pop
sbb
mov
cmpl
inc
lret
or
push
data16
addb
dec
push
mov
ret
adc
add
or
inc
dec
inc
in
jl
pop
cmp
mov
sub
cmp
adc
aad
sbb
lret
cmp
xchg
mov
je
mov
sbb
jbe
jge
lcall
sbb
stc
loope
adc
pushf
inc
or
in
inc
cmp
jbe
sbb
test
mov
push
xchg
mul
jl
cmp
mov
mov
icebp
sub
out
mov
loop
arpl
nop
add
outsl
adc
xor
sub
pop
lds
xchg
out
dec
jne
push
push
or
cmc
jmp
ja
lcall
push
decl
test
cs
sub
shll
sbb
mov
jb
jae
aam
lods
adc
shll
ss
pushf
or
xorl
push
sarb
xor
xorl
pop
or
xchg
test
jne
fisubrl
push
incl
icebp
push
add
or
sbbb
cmpsl
mov
or
popa
xor
arpl
adc
bound
movsl
aad
dec
movsl
movsl
jbe
xchg
iret
scas
ret
sub
dec
imulb
adc
lods
add
imul
cmp
mov
addr16
or
addr16
sbb
mov
mov
cmpl
or
fs
or
sar
push
add
xchg
push
ret
inc
rcl
js
lea
xchg
push
movl
inc
pop
and
push
xor
ret
insl
xchg
push
mov
cmp
jge
notl
dec
mov
sbb
sbb
icebp
add
addps
sarb
mov
add
adc
sub
mov
lock
fiadds
arpl
rcr
lret
pushl
cmp
inc
daa
sbb
inc
jmp
pop
jb
inc
mov
lds
dec
jecxz
and
popa
ret
outsb
xor
stc
inc
inc
test
fnstenv
mov
jecxz
ds
push
cmp
dec
pop
and
test
add
paddq
mov
lret
or
decb
push
aad
jnp
cmpsl
or
das
adc
inc
xchg
cmp
pop
testl
shl
and
outsl
mov
and
hlt
mov
push
add
jmp
mov
jge
jo
xor
jge
fs
cwtl
pop
or
lea
xor
sub
mov
dec
jl
int
movsb
cmp
sub
dec
xchg
cs
adc
bound
sahf
mov
push
add
pcmpgtd
movb
popa
ljmp
jl
jl
loopne
mov
jnp
sub
les
or
test
adc
aad
mov
inc
or
sbb
adc
fabs
push
leave
xchg
or
pop
call
lea
daa
push
xchg
popa
outsb
xchg
ljmp
push
addl
xchg
les
lret
loop
push
sub
xchg
loope
jo
into
loope
dec
xor
adc
pop
lock
out
sub
adc
jmp
pushf
or
cmp
les
adc
fs
xchg
push
cs
ljmp
loop
out
adc
xor
sbb
das
dec
add
negb
or
test
lds
js
add
ds
adc
dec
mov
lret
add
cmp
lea
or
jp
shr
add
or
add
cwtl
sub
fldl
and
out
pop
or
mov
add
pop
sti
testb
or
bound
scas
push
rclb
pop
aad
in
stos
mov
inc
sub
les
sbb
rcr
or
shr
jbe
add
int3
cld
push
test
adc
fnstcw
inc
mov
sub
lret
cmp
testl
pop
xor
cli
mov
adc
jecxz
lods
or
mov
cs
rolb
add
mov
mov
mov
dec
and
in
mov
cmp
adc
out
test
es
clc
inc
jbe
mov
sub
in
jmp
cmp
shr
adc
ret
pop
pusha
push
notb
or
shl
andl
adc
aad
and
mov
sub
cmp
add
ds
cli
jo
rorb
imulb
or
test
data16
jo
test
adc
in
sub
insl
and
inc
call
xchg
mov
cmp
mov
sbb
adc
out
fiadds
push
lcall
aaa
not
or
jne
repz
add
sbb
push
cld
imul
fsubrl
add
add
call
add
xorb
cmp
fisubs
leave
dec
cld
lret
mov
push
pop
movsb
test
adc
and
or
sbb
pushf
fldl
ljmp
lcall
xorb
add
imul
pop
push
add
pop
cmp
xchg
inc
xor
out
mov
je
cmp
lock
jl
cmpb
jl
add
pop
lret
cmpb
idiv
or
cld
inc
xchg
adc
xchg
push
fsts
test
std
inc
nop
loopne
adc
inc
push
push
mov
push
push
movsl
scas
orl
sub
inc
adc
fldenv
and
stos
add
test
cmp
ficompl
clc
fisubrs
ja
and
dec
add
xchg
adc
call
mov
dec
add
and
mov
or
or
and
loope
into
jne
mov
sbb
or
mov
je
jns
test
je
mov
xchg
jo
or
cwtl
test
and
jl
or
sbb
add
adc
rclb
loop
and
jne
sub
xor
sbb
movb
hlt
pop
jmp
xchg
push
push
xchg
xchg
mov
mov
push
fidivl
add
push
xor
cli
stos
fsubr
imul
inc
push
test
neg
sbb
sub
insb
cmp
sbb
sbb
int
sbb
inc
push
sbb
fcoms
cmpsb
mov
cmp
rcr
aad
xchg
inc
sub
cmp
xchg
adc
sbb
mov
fldl2t
dec
jns
fcmovnu
test
jbe
jne
pop
pop
pop
adc
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
insl
or
pop
cmc
adc
cld
lock
je
push
pop
jmp
or
add
dec
add
addr16
inc
push
dec
mov
adc
xor
mov
inc
out
xchg
pop
insb
add
sbb
and
aam
ss
cmp
imul
out
mov
je
push
sbb
into
jbe
dec
add
jns
aas
bound
ljmp
jae
pop
ljmp
push
imul
cmp
aas
inc
or
jo
add
push
fwait
cmpxchg
sbb
and
adc
xor
xor
mov
pop
lods
imul
add
jb
cltd
stos
cs
fidivs
push
testl
adc
pushl
dec
out
ss
lock
dec
sub
adc
adc
in
int3
push
insb
leave
jne
cmp
testb
mov
xor
push
sub
leave
je
aas
and
xchg
xor
mov
scas
es
je
clc
in
pop
je
test
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
dec
xchg
xor
adc
mov
inc
jb
idivl
pop
and
jbe
add
cmp
push
pop
mov
call
ret
xchg
loop
add
mov
sahf
addb
mov
lea
add
sbb
mov
ret
jmp
mul
imul
call
fmuls
aaa
test
inc
loop
leave
fisttpl
int
inc
adc
in
jecxz
mov
mov
dec
test
imull
push
cmp
xor
addr16
jo
int3
xor
dec
out
outsb
lods
push
mov
mov
dec
aas
pop
sahf
test
rclb
jne
popl
mov
mov
lods
out
orl
femms
push
mov
ljmp
xchg
adc
movsb
sub
xchg
dec
sub
add
hlt
dec
int3
idiv
and
add
test
lret
push
push
loopne
ficoms
or
inc
nop
lret
std
adc
add
inc
ror
out
sahf
cmpsl
push
rcl
rcl
aad
out
sahf
xlat
fcomp
fistl
shlb
nop
data16
inc
add
add
es
into
pop
inc
xchg
cmp
aam
sbb
mov
mov
adc
mov
mov
add
push
ret
add
add
push
mov
loope
cmc
push
pop
lcall
and
je
test
in
jo
jmp
ja
mov
es
push
stc
mov
sub
pusha
push
add
bound
add
add
push
imul
xor
imul
or
aas
sub
sbb
dec
lea
sar
or
push
roll
fadds
inc
sub
sbb
inc
push
mov
mov
sub
test
ja
sbb
cmp
sub
test
adc
mov
ret
or
sar
fisubs
addr16
aad
stos
pushf
push
jp
mov
adc
les
or
dec
cmpsb
sub
fildl
push
or
fadds
sub
ljmp
or
mov
and
and
lea
pop
sbb
movsb
subl
and
ja
dec
lret
add
arpl
into
add
and
enter
jbe
in
cs
jmp
loopne
inc
or
add
mov
or
sbb
and
push
inc
rolb
nop
and
mov
push
mov
inc
sti
insb
sub
dec
xchg
mov
sbb
or
cwtl
dec
push
out
shrb
movsb
cmp
cmp
mov
dec
subl
jns
mov
inc
xchg
cwtl
mov
jge
mov
es
sar
jno
rorb
cmp
and
scas
jne
mov
cmp
add
rorb
and
addr16
addl
push
push
inc
fdivrl
or
call
xchg
clc
mov
inc
lods
ss
sub
clc
out
mov
mov
or
dec
push
dec
xchg
push
push
adc
inc
lods
lock
imulb
sub
inc
cli
or
jns
repnz
pop
adcb
xlat
mov
stos
movsl
xor
lret
sub
mov
mov
outsb
xchg
aaa
aam
xchg
sub
cmp
insl
pmaxub
dec
es
mov
xor
mov
rolb
es
mov
enter
iret
dec
rolb
adc
xor
push
or
mov
sub
repnz
pushw
sub
loop
jae
jmp
addr16
testb
cmp
andb
jle
push
mov
dec
inc
xchg
pusha
adc
xor
in
mov
sub
fsubr
push
sbb
cmp
ss
inc
test
dec
xor
push
mov
out
cmp
dec
pop
cwtl
rolb
dec
xor
test
adc
call
sub
xor
cld
lea
fcmovu
xor
int
mov
push
push
inc
adc
inc
add
adc
dec
lods
rolb
cltd
add
sub
cmp
movsb
add
sbb
negb
cmp
sub
sbb
notb
fs
lock
or
and
or
jge
pop
and
inc
lock
inc
ret
inc
sub
cmpsl
in
cmp
jne
jne
rolb
in
ror
add
int3
pop
mov
adc
fstl
pop
sub
adc
push
les
movb
inc
cmc
sbb
mov
push
add
push
nop
sbb
ret
push
adc
test
sub
in
dec
cmpsl
sub
adc
call
or
les
orl
cmpsb
mov
loop
fcomps
xor
fiadds
je
fildl
call
loope
pop
dec
aaa
loopnew
fdiv
fs
imul
loop
cmpsb
mov
dec
mov
cmp
movntq
jo
sbb
and
push
xor
or
xchg
mov
add
or
mov
subl
faddp
sub
enter
adc
nop
lret
test
mov
mov
mov
mov
inc
dec
enter
and
push
shlb
add
pop
add
add
shll
sbb
testb
les
into
or
mov
inc
test
xchg
add
pop
in
dec
push
std
jmp
add
xor
inc
cmpb
or
add
daa
mov
xor
mov
repnz
add
mov
clc
sbb
sub
orb
pop
scas
push
add
cmp
jp
jne
dec
mov
jb
mov
lock
pushfw
adc
dec
inc
ret
and
add
push
add
inc
jbe
pop
mov
adc
inc
or
test
add
add
xchg
jne
test
lret
mov
aad
push
mov
dec
add
and
orb
adc
out
or
jmp
repz
int3
iret
xchg
push
or
add
popa
jecxz
or
push
ret
cmp
scas
add
adc
int3
add
adc
mov
fld
push
ret
pop
xchg
adc
xchg
mov
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
jg
push
fs
into
mov
rcrl
pop
mov
pop
rol
shll
or
pop
mov
adc
sahf
hlt
movsl
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
or
or
mov
add
clc
adc
mov
mov
mov
xchg
pop
pop
enter
je
or
dec
pop
enter
scas
push
add
mov
jne
and
and
or
dec
lea
lret
add
js
or
aas
movsb
push
enter
inc
inc
fldcw
dec
xchg
xor
mov
cld
cmp
je
ja
or
jnp
add
stos
jg
sub
push
add
and
add
jne
in
out
dec
pusha
dec
cld
into
in
stmxcsr
dec
rcrb
mov
cltd
ss
or
add
int
xor
add
add
pushf
xorl
jbe
jle
iret
nopl
sub
xor
xchg
xchg
out
inc
jg
into
into
mov
mov
fidivrs
sarb
push
pop
nop
and
cwtl
pop
mov
nop
int3
or
shlb
or
sbb
cs
rorl
les
pop
lcall
add
leave
lahf
pop
test
out
adc
add
add
cmp
add
add
or
sbb
je
mov
inc
cmp
push
inc
sub
jmp
mov
lret
xchg
xchg
lret
push
xor
xor
push
test
cmp
mov
push
dec
xchg
shrb
pushf
dec
ret
sub
mov
pop
fmul
cmp
inc
push
xchg
sub
addl
xchg
mov
push
inc
add
mov
mov
sub
es
and
inc
ret
fisubrs
jle
xlat
sbb
xlat
jle
and
daa
or
add
data16
adc
jge
test
mov
addr16
bnd
fcoml
mov
jno
icebp
xor
jno
add
data16
out
and
dec
sbb
xor
mov
cld
adc
push
adc
jae
and
insl
add
inc
push
add
inc
adcl
dec
sub
mov
loopne
ds
mov
out
je
idiv
push
outsl
test
mov
cmp
lret
inc
inc
dec
mov
jmp
pop
sbb
enter
mov
lds
out
push
test
mov
jo
cmp
or
jbe
into
insb
sbb
sub
push
iret
xor
in
in
or
xor
cmp
cwtl
cmp
xchg
mov
push
xor
mov
repz
nop
sbb
or
rcl
or
or
ret
imul
sub
adc
jp
pusha
push
xor
ja
and
sbb
inc
xchg
imul
xchg
pushl
shlb
push
push
mov
aam
cli
cmp
and
push
dec
push
xchg
fcoms
or
jecxz
stos
pop
mov
xor
jge
pusha
adc
sbb
xchg
mov
mov
test
sub
or
shlb
rclb
fcoml
loop
ret
dec
repnz
out
dec
pusha
xchg
dec
inc
sbb
push
shrb
sbb
in
hlt
add
in
mov
xor
sub
inc
push
imul
push
imul
rorb
jb
and
or
xor
out
lods
push
inc
and
xor
dec
add
std
adc
adc
bound
push
add
or
sub
outsb
mov
pusha
add
jae
inc
mov
and
xlat
lret
pop
movsl
test
or
adc
pop
ds
test
fsts
xorb
clc
sbb
sub
sub
shlb
iret
fwait
sub
dec
inc
pop
or
pop
sub
jne
push
inc
cmp
popl
lods
movsb
jae
cmp
mov
pusha
imul
add
std
mov
mov
fisubrl
stos
push
hlt
xchg
mov
mov
push
adc
push
rcrl
fmull
or
sub
bound
and
adc
into
add
loop
mov
pop
add
rclb
cmp
lcall
enter
cmp
popa
sbb
dec
rcrl
ret
or
outsb
pop
mov
xchg
test
sbb
xor
or
call
push
dec
and
mov
dec
cld
add
pop
jl
jno
cmp
dec
lea
ss
in
loopne
inc
int3
rcll
in
pop
xchg
ds
inc
jge
lret
lods
dec
mov
push
cmp
fsubs
out
stos
pushf
sub
loopne
jmp
dec
loop
and
andb
xlat
loope
ss
push
js
subb
pushf
adc
std
mov
push
xchg
inc
js
or
cmp
inc
sar
fcompl
sbb
mov
imul
movb
addr16
mov
andl
xor
sbb
cmovg
adc
inc
jbe
fadds
sub
add
pop
adc
push
mov
mov
test
andl
testb
push
orl
sbb
loopne
or
push
xchg
nop
mov
shlb
cmp
jmp
pop
mov
pusha
xor
xor
or
ret
push
insl
out
xor
pop
xchg
jns
add
dec
sarb
add
inc
add
aaa
sahf
dec
jecxz
les
test
cli
int
sahf
std
popl
mov
mov
cwtl
imul
or
mov
ret
mov
and
push
xchg
mov
and
ret
push
pop
in
rcrl
xchg
mov
aam
clc
div
cvttps2pi
mov
and
cltd
push
pop
pop
je
xorl
rcr
xorl
add
cmp
jmp
sarb
adc
cwtl
mov
icebp
dec
lea
lahf
cmp
sub
xchg
jmp
mov
das
fcomp
adc
test
adc
pop
and
xchg
fs
pop
je
pop
push
int
mov
sub
sti
arpl
add
lock
xor
popl
unpcklps
xor
out
lcall
cwtl
push
into
movsl
test
push
ljmp
sbb
ret
sub
fadd
mov
daa
call
and
shll
push
lods
int
arpl
loopne
mov
call
jg
in
cmp
outsl
xchg
bound
push
xor
inc
adc
push
loope
pop
inc
test
orb
daa
push
dec
pushf
pop
fmull
and
push
arpl
fimull
or
shlb
push
fs
int3
loopne
call
in
test
pop
xor
shll
inc
lock
sbb
or
enter
pop
dec
rcll
testb
xor
fcompl
pop
and
aam
cmc
inc
pusha
std
popa
mov
add
dec
push
nop
inc
mov
enter
sub
add
sub
jne
je
in
aad
pop
cld
push
jb
mov
pop
dec
repnz
sbb
jb
cltd
sub
cmp
cmpsb
sub
in
jb
inc
adc
clc
jmp
add
out
ds
lret
push
movsb
test
sarl
sbb
aad
xor
rolb
cmp
dec
fsubs
leave
inc
xor
xchg
jl
and
lds
je
fwait
and
movsb
sub
or
add
enter
dec
pop
xor
cmp
rcl
xchg
sbb
mov
sub
test
aam
jb
movsb
xchg
in
pop
jo
mov
sub
movups
xor
int3
movsl
imul
mov
test
popa
outsl
fmull
shlb
add
mov
stos
pop
aad
bound
adc
jo
pop
sahf
push
fwait
enter
ja
cmc
dec
stos
inc
cmpsb
arpl
cld
sbb
xor
aam
push
arpl
pop
jbe
adcb
jae
ljmp
xchg
inc
jne
arpl
gs
fucomp
inc
fistpl
dec
daa
shl
dec
inc
fs
call
push
mov
dec
rcll
xor
xor
loopne
adc
fldlg2
dec
pop
dec
cmpsb
cltd
aam
mov
sbb
test
xor
lahf
add
inc
out
shrb
sbb
sbb
and
cmpsb
sbb
add
adc
dec
adc
fs
dec
and
xchg
dec
es
xor
dec
es
fs
inc
sbb
push
mov
insb
add
or
into
cmp
sbb
add
pusha
add
or
jb
pop
rcl
loopne
int
xchg
add
clc
hlt
int
sub
cld
clc
and
mov
lock
lds
orl
push
mov
test
push
add
fldcw
shlb
scas
sub
pushf
addr16
cmpsb
movsl
fs
aam
cmp
jl
test
insb
sub
inc
push
pop
rclb
cltd
insb
fsubrl
xor
popa
inc
cwtl
call
dec
and
fwait
aam
and
int3
aad
adc
in
sbb
and
imul
inc
mov
pop
dec
mov
shlb
xor
sbb
adc
mov
js
jmp
push
mov
add
dec
xor
aam
xor
mov
push
addr16
adc
aad
shlb
jg
aam
pusha
jg
pop
pop
push
hlt
call
aaa
jb
inc
xor
in
push
adc
insb
test
cmpsb
popa
stos
loopne
call
in
fcomps
daa
lock
lahf
stc
push
call
add
sub
daa
sbb
mov
and
leave
aam
insl
call
in
je
and
mov
in
inc
xor
mov
mov
mov
sub
cmpsb
or
outsb
icebp
inc
jo
inc
ficoml
outsb
out
or
insl
push
xchg
ja
xor
outsb
mov
mov
fadds
loopne
fcoml
jnp
mov
mov
in
and
xor
pop
scas
sub
subb
ss
fmuls
jo
or
pop
or
out
popf
mov
pop
jmp
adc
hlt
adc
out
and
outsl
xchg
sub
xchg
pop
or
sub
in
fwait
repz
jo
fcomp
pushf
mov
pushf
jo
scas
add
call
xchg
jp
push
jno
lea
cmp
mov
in
in
lods
mov
mov
mov
jmp
aam
add
xchg
push
arpl
jb
ss
sbb
call
mov
ret
sbb
add
adc
or
sbb
push
orb
enter
jns
aad
cmc
je
sbb
sub
add
and
sub
jae
call
sbb
xlat
mov
pop
fdivrl
push
je
pop
aad
test
xor
xor
pop
enter
sub
add
jno
aam
xchg
cmpsb
imulb
unpcklps
pop
call
cmpsl
mov
outsl
fdivrs
cmpl
inc
jbe
push
cltd
test
insl
jge
mov
aam
bswap
insl
xor
sub
mov
sub
enter
je
mov
repz
add
and
lcall
inc
stos
mov
xlat
or
sti
jo
icebp
inc
movsb
pop
add
orb
sub
mov
pop
pusha
imul
and
test
mov
fisttps
mov
dec
xchg
sub
sti
xchg
adc
xchg
xor
jo
lcall
aad
and
jb
xchg
aas
jo
mov
js
add
mov
mov
add
loope
or
lea
jno
mov
fsubr
mov
and
inc
cmpsl
shlb
cmp
in
bound
dec
adc
loopne
sub
ljmp
scas
dec
mov
jg
xlat
test
dec
add
lock
ret
dec
dec
in
or
nop
add
ret
and
aad
addl
pop
leave
add
push
sbb
jg
movsb
push
pushf
pop
mov
cltd
in
add
lret
loopne
add
mov
cld
mov
mov
cld
call
lods
setbe
pop
pushl
and
inc
push
into
push
and
sbb
jl
sub
int3
sbb
fildl
jnp
adc
sbb
smsw
add
cmp
ja
sub
enter
or
jb
and
and
pusha
or
dec
test
subb
xchg
test
aaa
push
jb
or
xor
push
lea
xchg
test
sub
insl
fcoml
mov
fmull
jle
or
je
pop
cmp
movsb
push
sub
xorl
push
nop
mov
loopne
aam
or
imul
aad
xor
dec
sub
imul
pop
jmp
fsub
and
jb
in
mov
xor
sbb
movsl
add
inc
pop
dec
or
test
jo
and
test
xchg
cwtl
add
lods
nop
decb
mov
cli
or
adc
je
insl
sub
pop
lock
inc
daa
sub
call
addb
in
dec
or
and
lods
mov
adc
jne
pushf
cmp
xchg
subl
pop
mov
shlb
mov
subb
add
push
lea
push
xor
xor
popf
dec
lock
in
cwtl
xor
inc
jbe
pop
sbb
int3
clc
lods
dec
outsb
adc
enter
dec
sarb
mov
cwtl
test
pushf
fstl
xor
dec
outsl
movsb
lea
or
das
cmc
inc
lcall
push
inc
xchg
test
or
adc
cmp
sub
push
das
fistl
dec
adc
and
or
dec
ret
inc
imul
or
mov
or
mov
xchg
xchg
nop
addb
and
pop
lds
pop
int
int3
add
daa
mov
gs
pop
add
dec
xchg
jp
mov
lods
dec
jb
test
add
xchg
push
fsubrl
sbb
sub
adc
jl
xchg
adc
mov
xchg
scas
std
or
in
cld
mov
das
cmp
push
and
cmpsb
xchg
mov
nop
nop
addl
in
or
lock
sti
movsb
add
in
xchg
inc
push
inc
mov
inc
lcall
aam
xor
das
cltd
fcoms
adc
enter
mov
aas
bswap
adc
inc
lds
mov
aas
rcl
lret
inc
add
push
xchg
fdivrl
inc
je
xor
std
fcoml
inc
cmpsb
sbb
push
jae
pop
daa
adc
orl
shll
inc
in
scas
mov
mov
in
inc
push
cmp
mov
fdivrs
ret
xor
pop
sbb
jae
and
nop
arpl
movsl
or
jns
leave
testl
xchg
cwtl
in
cmpsl
xchg
adc
adc
add
sgdtl
loope
push
enter
shlb
pop
insb
inc
inc
mov
fdivl
sub
mov
adc
mov
in
int
cmp
adc
loope
inc
ds
call
adc
stos
adc
jmp
shlb
sbb
lock
ret
jge
mov
arpl
adc
push
adc
shlb
imul
jbe
gs
bound
sarl
sbb
fadds
push
in
lahf
test
je
in
movsl
or
adc
or
arpl
es
fcomp
and
scas
or
xor
pop
arpl
outsl
lods
pusha
lock
cmp
or
sti
push
pop
in
add
xchg
jg
lds
xchg
in
arpl
add
pop
cmp
inc
xor
xchg
push
adcb
test
in
jne
nop
inc
shlb
daa
fists
test
mov
das
fdivrs
cmp
inc
jo
mov
dec
sub
not
addb
test
mov
aam
call
loop
out
loopne
jmp
nop
or
pop
rorb
add
xorb
push
pop
nop
inc
pushf
cltd
ss
or
xchg
sub
mov
jl
loopne
test
imul
pop
mov
xchg
and
xchg
loop
jge
test
sbbb
cmpsb
push
add
inc
adc
mov
shrb
pop
and
and
mov
je
and
aad
mov
psubsb
cld
cltd
mov
aad
iret
mov
rolb
push
pop
gs
push
subb
lahf
leave
push
loop
pusha
xchg
ret
cmp
enter
xchg
ljmp
add
cwtl
xchg
test
in
adc
es
test
sbb
lock
mov
mov
fadd
lock
and
aam
adc
mov
and
cltd
xchg
jecxz
mov
lret
ret
aas
jl
les
es
int
and
mov
adc
push
roll
push
pop
dec
inc
pop
popa
xor
decl
dec
dec
movsb
dec
dec
or
xor
inc
nop
xchg
shll
add
loop
cmc
inc
bound
or
das
lods
daa
ret
xor
and
add
enter
pop
xchg
stos
test
inc
fwait
lea
or
shlb
add
stos
add
jb
popa
or
mov
mov
add
and
xlat
dec
pop
test
mov
pop
pushf
or
shll
mov
sbb
fcompl
pop
lock
popa
loop
in
scas
or
adc
shll
xchg
fdivl
or
or
adc
and
imul
adc
scas
add
xchg
insb
out
jl
pusha
ss
out
fs
adc
inc
ret
pusha
out
mov
enter
sahf
jg
push
inc
fsub
add
xor
and
pop
lcall
fidivl
setno
mov
sub
sbb
pushf
push
xlat
xor
les
push
add
pop
subl
sti
lcall
popa
inc
repnz
testl
pop
aaa
dec
push
mov
call
aas
push
mov
mov
rcrl
imul
lock
cld
mov
stc
or
pop
add
mov
dec
mov
or
cmp
fs
dec
je
enter
cmp
les
sub
pop
and
bound
xchg
xchg
test
addb
inc
xor
inc
and
and
mov
mov
and
movsb
jg
mov
push
lods
stos
test
test
fcmovnbe
movsl
int3
sub
roll
dec
inc
bswap
arpl
aaa
jo
and
adc
outsl
popl
dec
movsl
test
leave
adc
push
jmp
mov
sbbb
fsubrs
int3
pop
les
adc
sub
or
pusha
sub
and
mov
ss
pop
je
cmp
mov
fucom
sub
adc
sbb
push
fwait
nop
mov
out
cltd
add
inc
xchg
add
cltd
nop
data16
rorb
push
fs
lcall
or
and
sbb
ror
ret
inc
faddl
fcmovb
cmpb
or
sbb
cmpl
scas
inc
add
in
movsb
mov
dec
dec
enter
mov
loopne
lret
push
iret
or
xchg
or
orb
and
cmp
mov
cmp
lods
scas
loope
pop
outsl
rcrb
mov
cmpsl
jno
push
jmp
pop
int
test
push
pop
xchg
ss
bound
add
dec
out
rclb
add
adc
dec
xor
mov
xor
mov
pop
push
sub
jmp
stc
fldcw
sub
push
push
mov
xchg
inc
cmc
shrb
les
jb
mov
dec
and
jmp
int3
popl
adc
jno
std
xchg
and
pushf
movsb
lods
fwait
in
imul
outsb
xchg
dec
push
andb
mov
and
fcmovnb
xchg
dec
leave
inc
push
xchg
dec
fsubrs
sub
push
enter
incb
stos
scas
push
adc
adc
les
ss
inc
add
push
sub
out
jecxz
sbb
dec
dec
push
pop
insb
lods
lock
aad
xchg
jns
add
jb
mov
add
add
dec
enter
testl
and
xor
inc
inc
mov
test
xor
loopne
ficoml
bswap
or
in
mov
ds
sub
xor
add
add
in
add
inc
cmp
add
xor
jo
dec
or
push
jo
xchg
fsubrs
adc
inc
in
inc
sub
repnz
nop
pop
faddl
andl
cmpb
xchg
jl
add
push
jbe
fdivrl
std
xchg
btr
insl
or
das
fildl
or
inc
loopne
sub
out
xor
roll
or
sub
popf
sbb
enter
test
mov
rcrb
mov
lods
inc
or
sub
pop
jo
push
xlat
mov
test
add
inc
jo
mov
jno
push
adc
dec
lock
nop
dec
call
stc
jb
add
adc
push
in
clc
cltd
mov
rolb
jae
sub
xchg
in
sub
xchg
xor
movsl
cs
cmp
fisttpll
mov
push
dec
mov
sbb
enter
inc
xlat
test
divl
aam
add
dec
cs
loopne
sub
mov
pop
in
loopne
mov
inc
mov
insb
mov
imul
push
pop
fwait
lock
aaa
nop
call
mov
mov
psubusb
test
fcoml
cmp
mov
jl
or
mov
or
cmc
add
push
adc
push
or
mov
push
adc
xchg
dec
or
add
dec
mov
adc
nop
inc
test
sbb
xchg
inc
fimull
mov
or
push
or
shrl
jmp
in
push
or
adc
bound
or
push
pop
gs
push
push
call
jmp
clc
daa
xchg
dec
and
lock
xor
andb
push
mov
or
pop
mov
mov
cmpsl
adc
mov
fimuls
mov
inc
mov
and
dec
sbb
ficompl
hlt
pop
cltd
fs
dec
push
pusha
push
push
nop
dec
es
inc
jo
imul
clc
inc
repnz
dec
fcoms
or
cmp
orb
out
shll
sbb
jb
push
adc
mov
test
nop
mov
sbb
xchg
dec
xor
adc
xor
and
enter
int3
mov
sbb
sbb
adc
sbb
mov
je
loopne
jecxz
mov
test
and
in
in
pop
test
je
orl
movsl
aad
push
aas
dec
pop
and
mov
mov
mov
lods
mov
jb
sub
dec
adc
sbb
mov
fists
jl
and
and
mov
int3
ret
leave
test
ljmp
ss
ret
mov
call
inc
add
fcoms
pop
pop
add
jg
xor
pushf
in
cwtl
mov
add
or
test
add
gs
es
and
mov
jmp
xlat
add
rolb
cwtl
je
loopne
enter
add
sbb
rclb
pop
fsubs
cltd
int3
dec
cmpsb
pop
or
fcmovnb
add
adc
push
sbb
or
mov
sub
mov
push
sbb
lods
test
inc
test
fadd
pop
decl
adc
add
lds
shrb
rcr
jmp
mov
inc
sbb
movl
sbb
push
lods
or
fs
js
mov
imul
sbb
addb
inc
mov
fsub
loop
lcall
and
pop
call
in
subb
add
shll
adc
xor
call
call
sbbb
aas
dec
add
cld
jns
insl
mov
mov
sbb
xor
shlb
adc
mov
xchg
add
cwtl
pop
hlt
lock
enter
orb
dec
jae
add
mov
pop
push
push
adc
stos
cwtl
dec
xor
adc
bound
xchg
mov
popa
or
fcom
and
push
and
adc
outsl
mov
nop
arpl
aam
inc
mov
dec
in
aas
add
nop
stos
and
and
sti
xchg
dec
xor
insb
adc
cmp
and
hlt
cli
mov
arpl
cmp
cld
cli
scas
fs
es
fs
cmp
xchg
dec
push
nop
dec
cmp
ficoml
adc
mov
sub
je
sti
mov
cmpb
and
adc
sub
xor
test
sub
inc
nop
adcb
mov
xchg
roll
jmp
cli
call
sbbb
xor
bound
lods
iret
mov
mov
or
sbb
add
stc
les
xchg
pusha
add
mov
and
xor
outsb
and
dec
mov
inc
dec
and
call
int
sbbb
leave
push
adc
sbb
inc
mov
fwait
dec
fstl
mov
pusha
and
or
add
aas
adc
lret
xor
outsl
sarb
inc
and
pop
sub
ret
push
repnz
mov
mov
hlt
shll
pop
mov
xchg
enter
shrb
inc
add
jae
imul
sub
push
andb
add
jle
adc
add
fdivl
and
aad
mov
xlat
mov
sub
sub
mov
xchg
or
push
call
jne
sub
mov
cmpl
adc
adc
and
mov
inc
and
push
in
and
ret
sbb
je
xor
dec
jnp
or
dec
push
roll
mov
repz
dec
sbb
pop
adc
into
push
jno
adc
fs
ret
ds
jnp
scas
loopne
cmp
in
xor
add
add
add
mov
xor
mov
dec
in
xor
out
mov
add
or
push
xchg
xchg
les
test
aas
sbb
pop
mov
push
jp
mov
push
in
fstpl
sti
mov
aas
and
push
mov
inc
jmp
lea
cmp
dec
mov
fistpl
and
incl
mov
add
and
cmp
jns
sarb
mov
repz
mov
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
lds
cmp
lcall
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
ja
xor
ss
cmp
sub
leave
adc
mov
rcll
xchg
adc
push
xchg
decl
cmp
rclb
cmpl
push
lcall
mov
jg
out
sarl
dec
dec
outsb
je
popf
jge
pushl
outsl
arpl
fs
out
sbb
push
dec
imul
xorl
jae
cmp
jb
gs
xor
cs
std
out
fs
insb
push
bound
and
pop
popa
je
outsl
outsb
push
js
mov
test
cli
mov
mov
add
incl
insl
sub
add
mov
inc
outsb
fisttps
js
je
jb
gs
cld
jnp
fstpt
insl
add
arpl
add
add
add
add
push
gs
push
je
mov
jbe
lock
jb
mov
outsb
pop
mov
dec
xor
xor
cmp
jne
iret
mov
sub
dec
and
jns
fbstp
das
das
adc
push
dec
push
inc
jbe
pop
lock
gs
insl
bound
daa
dec
outsl
jbe
jo
dec
arpl
push
jo
sub
addr16
mov
xchg
dec
jne
xchg
mov
lahf
out
xchg
inc
jo
imul
bound
jnp
insb
pusha
inc
insb
adc
jae
scas
cmpsl
xchg
popl
popa
into
cmp
addr16
push
jne
fs
or
fdivl
lahf
mov
daa
cwtl
mov
clc
sbb
dec
pushf
mov
cmpsl
js
push
jne
xchg
lcall
ds
popa
das
jo
mov
insl
pop
filds
mov
imul
pop
mov
in
jno
adc
pusha
mov
inc
and
and
cmpsb
jmp
daa
sub
sub
sub
cs
movsl
jno
ljmp
aas
inc
das
pop
pop
lahf
mov
cmp
jge
pushf
lcall
outsl
inc
test
mov
and
push
pop
or
divb
inc
adc
push
inc
insb
jmp
les
push
fs
shr
scas
mov
inc
inc
mov
jnp
test
xor
insl
and
aaa
cmp
lds
jbe
dec
push
push
sbb
inc
outsl
int
imul
and
push
aad
ss
xor
sbb
push
jo
imul
push
pop
mov
je,pn
mov
and
push
sub
and
fs
test
push
out
scas
mov
push
insb
gs
int
xorb
inc
popa
and
loopne
data16
mov
jne
pop
xor
and
mov
push
xchg
sub
inc
or
rol
mov
lcall
int
out
mov
out
es
and
or
imul
pop
es
addr16
sbb
xchg
mov
jo
inc
pusha
je
and
push
dec
addb
mov
popf
jb
loopne
outsl
mov
loope
fcmovu
push
daa
sub
dec
addb
das
arpl
roll
cmp
arpl
das
orl
mov
fiadds
inc
xchg
jge
inc
xchg
insb
imul
in
int3
or
xchg
lcall
mov
push
sbb
inc
mull
push
push
fistps
push
adc
jbe
lock
shll
or
es
out
nop
add
sub
mov
ja
outsl
outsl
or
or
push
hlt
pusha
in
jo
cli
jbe
add
je
and
xor
xorl
das
mov
int3
loopne
or
lds
push
and
inc
jle
outsl
pop
scas
xor
arpl
lcall
bound
cmp
mov
insl
in
ljmp
imul
dec
xor
imul
mov
pusha
aad
jae
rclb
leave
icebp
sbb
imul
cmp
xorl
in
xor
add
or
push
and
test
pop
push
cmp
addr16
jae
xor
add
push
pusha
jo
sub
test
pushf
jb
push
sub
add
bswap
inc
sub
pop
dec
jmp
dec
or
jo
and
vmovd
cmp
cwtl
ja
ds
inc
inc
mov
lods
and
dec
cmp
jg
ss
fisttpll
lcall
loopne
add
cmpb
rol
push
out
ret
das
lret
jno
icebp
pusha
inc
mov
clc
ret
pop
mov
jno
add
add
mov
push
loop
imul
ret
gs
popa
dec
add
inc
test
enter
popa
js
jae
stc
inc
jae
je
pop
dec
pop
add
ja
sub
addr16
imul
xchg
adc
jae
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
xor
and
or
pusha
add
js
popf
cltd
testl
add
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
dec
icebp
adc
inc
xor
xlat
push
stos
outsl
xor
int3
js
jo
dec
rclb
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
les
es
fldl
adc
mov
sub
pop
pushf
jo
adc
adc
or
and
cmp
or
pushf
dec
pop
mov
jo
adcb
cmp
push
jp
xchg
aaa
jo
iret
ror
test
add
add
inc
repnz
jb
dec
add
leave
sbbl
add
adc
add
sub
sbb
xchg
push
push
mov
add
add
sub
push
and
cmpsl
or
incl
adc
in
pusha
imul
add
inc
mov
mov
shr
call
inc
pop
and
add
test
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
subl
test
xchg
je
aas
lcall
or
sbb
outsl
ja
push
mov
push
jae
jb
bound
dec
sbb
inc
ss
popa
mov
jbe
movsb
arpl
mov
cmc
neg
pop
lea
dec
mov
outsl
js
push
push
inc
push
fwait
mov
mov
and
insb
gs
cltd
sbb
mov
dec
mov
sub
dec
frstor
add
insb
in
dec
imul
pop
jns
inc
mov
imul
in
insb
and
inc
jb
jns
daa
pop
testb
sub
and
mov
nop
xchg
cs
aad
push
lods
sbb
xchg
cmp
addl
mov
xchg
or
arpl
addl
decb
aaa
push
jns
dec
add
fisubl
dec
clc
popl
shlb
and
push
and
pop
es
dec
xor
dec
lahf
lock
push
push
cwtl
xchg
dec
movsl
or
jae
cmp
dec
add
mov
pusha
insb
call
movsl
jae
addr16
subl
gs
add
jp
mov
xchg
xchg
inc
push
push
push
push
dec
add
in
testl
dec
mov
outsb
mov
sub
fildll
dec
jge
jg
sahf
push
sub
sub
inc
call
or
jg
nop
shll
inc
in
subl
insb
dec
xor
les
push
jns
pusha
push
mov
push
pop
or
das
pop
in
push
je
outsl
xchg
daa
xchg
imul
push
jl
xlat
cld
out
cmp
cmp
push
das
push
sub
sub
inc
jl
push
jle
insl
out
data16
sub
addr16
sub
xor
int3
cmp
inc
xchg
iret
jmp
jmp
cmp
inc
and
dec
inc
dec
pop
pop
loopne
sub
fs
jb
fstpt
shl
imul
push
iret
or
ror
push
lods
sbb
pop
or
jo
sub
cltd
aam
push
lahf
sub
or
inc
add
cmp
repz
clc
loopne
loopne
enter
iret
shlb
jns
repz
push
in
test
outsb
cwtl
iret
repz
push
icebp
push
xchg
nop
push
mov
cmp
je
jmp
insb
imul
daa
inc
and
adc
fs
out
mov
call
repz
negl
push
pop
push
push
repz
les
dec
push
dec
push
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
add
cmpsl
stc
hlt
sarb
jl
cmp
clc
fiadds
sahf
out
push
mov
repz
out
cmp
add
repz
lock
movsb
jl
sahf
out
cmp
add
fadd
pushf
xor
inc
sub
cmpsl
pop
mov
adc
lcall
bound
outsb
push
xor
add
inc
dec
mov
ljmp
push
int
push
jae
fs
push
lret
sbb
je
ljmp
seta
cmpsl
aam
pcmpgtw
xor
add
test
add
cmp
inc
inc
dec
jae
gs
inc
insb
inc
mov
sbb
push
out
sahf
push
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
out
xor
testl
dec
inc
add
mov
ret
imull
adc
incl
inc
call
rclb
mov
scas
xor
push
imul
loop
mov
ds
pop
adc
aas
jnp
clc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
sti
pop
repnz
dec
scas
jp
adc
fisubrs
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
decl
imul
xor
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
lahf
inc
or
mov
pop
leave
loop
mov
xchg
dec
mov
scas
lods
mov
iret
adc
mov
ret
mov
or
icebp
pop
pop
repnz
jg
dec
xor
and
es
adc
flds
sbb
imul
xchg
sub
pop
mov
call
out
leave
ljmp
lahf
dec
test
push
push
and
shrb
or
outsb
jbe
and
call
das
inc
mov
jle
gs
inc
add
xchg
test
lahf
out
out
xor
dec
push
dec
push
sub
out
dec
mov
daa
xor
pop
adc
sub
and
xor
add
sub
inc
dec
std
out
ljmp
cmp
adc
sub
dec
xor
pop
or
adc
mov
and
sub
jb
jbe
sbb
out
int
outsl
cmp
cmp
sbb
dec
daa
sub
sbb
jle
frstor
pop
add
das
adc
adc
xor
sbb
aas
fstp
imul
aas
sub
pop
inc
inc
sub
inc
dec
and
lods
inc
inc
adc
mov
and
adc
push
inc
cld
inc
pop
or
add
daa
dec
push
adc
sub
pop
and
out
and
or
fistpll
pop
pop
dec
ds
dec
pop
add
sub
cmp
or
mov
or
cs
ds
sub
sub
cli
push
adc
pop
pop
andb
loopne
pop
in
mov
sbb
das
inc
or
scas
mov
sbb
adc
cmp
cwtl
pop
je
fwait
mov
push
xor
jle
add
pop
pop
cmp
xor
sbb
in
sbb
pop
sbb
inc
sbb
sub
sbb
pop
fidivs
add
sbb
pusha
imul
fisttpll
pop
aas
int3
adc
adc
sub
jg
sub
sbb
xchg
lock
add
sub
push
cld
imul
mov
arpl
jg
pop
cmp
es
pop
push
gs
fwait
hlt
mov
push
inc
cmovge
cmovo
sub
pop
dec
decb
xor
in
mov
jl
sub
pop
add
or
fbld
ja
add
sub
xor
dec
and
movsl
add
jnp
xadd
mov
push
adc
dec
cwtl
in
push
cmp
xorb
pop
adc
cs
nop
push
mov
cmpsl
stc
push
push
rclb
mov
push
push
xor
or
outsl
iret
repz
jg
pusha
pop
push
mov
iret
cmp
xor
and
ret
pop
mull
hlt
das
scas
cmp
mov
mov
das
sbb
data16
cmp
outsl
insl
mov
cs
pop
lahf
inc
popa
outsb
ret
or
dec
jmp
popa
bound
add
dec
bound
push
mov
cvttps2pi
jbe
into
push
jbe
push
and
cmpsl
jnp
out
mov
out
add
jns
xorb
fdivp
cmp
jo
es
mov
push
push
mov
add
cmp
ds
xor
mov
outsb
ss
adc
inc
pushf
dec
mov
push
adc
les
and
stos
sub
cmp
cmp
fisubs
inc
cmp
sbb
and
push
push
popa
adc
js
inc
jbe
std
into
aad
mov
pop
pop
or
adc
pop
lods
std
inc
cmp
add
nop
sbb
add
pop
sti
fisttpll
sbb
adc
jae
repz
sbb
push
jmp
aad
xor
sub
add
mov
dec
das
jb
xor
pop
inc
push
insb
push
xor
pop
mov
xor
cmp
fildll
shrl
add
or
comiss
pop
pushf
add
adc
add
shll
mov
iret
faddp
sbb
cmp
add
out
sub
ja
ret
test
out
sub
ret
cld
xor
add
adc
out
pop
cmp
inc
jecxz
xor
mov
add
mull
hlt
mov
xlat
push
outsb
scas
and
dec
popa
or
inc
pop
test
pusha
xor
sbb
mov
xor
dec
scas
out
fucom
jo
jl
inc
cmp
cmp
mov
add
pop
adc
das
fwait
lcall
das
push
bound
shll
push
daa
addl
inc
and
jne
into
sahf
adc
inc
cltd
adc
fiadds
xor
sub
or
mov
ss
and
and
xchg
stos
pop
add
loope
mov
adc
dec
and
push
jle
fiaddl
scas
and
xor
and
dec
loope
and
mov
or
mov
push
popa
cmp
inc
stc
and
in
in
pop
ds
and
das
xchg
and
and
mov
adc
mov
mov
ja
adc
in
sub
pusha
addr16
es
push
imul
hlt
aas
inc
xor
jle
loop
mov
jbe
into
scas
daa
int
sbb
cli
in
inc
mov
data16
jno
mov
inc
xor
popa
push
ds
rorl
jmp
xor
in
dec
xchg
insl
ret
inc
push
es
adc
jbe
pop
mov
adc
inc
dec
lahf
sbb
repnz
in
add
fstpt
xor
inc
cmp
sub
and
dec
ja
mov
jne
dec
jbe
xchg
icebp
push
adc
sbbl
add
adc
lret
mov
add
push
adc
push
lds
ficoms
cmpsb
add
cmpsb
add
rcrb
ret
pop
push
nop
pop
push
into
call
xchg
inc
flds
cmp
daa
pop
lcall
fsubrs
pop
push
sbb
add
pop
sbb
push
add
and
jge
addr16
loopne
scas
rorl
and
jnp
add
add
push
daa
adc
daa
daa
sbb
insb
pop
pop
sbb
sbb
pushf
sub
and
call
pop
or
cmp
dec
xor
dec
pop
jg
rcll
inc
das
push
mov
add
jp
xlat
fsubrl
std
xor
popl
sbb
shl
imul
sahf
call
mov
sub
data16
push
push
jae
ja
and
movl
xor
idivl
sub
pop
inc
push
fnsave
cmp
das
sbb
pop
sub
pop
dec
dec
bt
add
push
cmpsb
or
sub
pop
andl
and
inc
cmp
pushf
sbb
jne
push
cs
and
scas
dec
pop
pop
addl
add
inc
ret
add
add
adc
push
daa
dec
les
push
cmp
push
mov
lea
bound
rcrb
lret
add
cmp
inc
sbb
inc
push
pop
pop
addb
mov
push
mov
rcll
sub
mov
ds
outsl
jb
bound
data16
outsb
data16
push
or
and
loopne
daa
jae
popa
scas
pop
andb
je
aas
xor
fmuls
daa
cs
and
xor
inc
out
ret
pop
add
push
add
jae
fcomps
and
mov
jbe
aas
sarb
loop
push
mov
ret
test
push
or
mov
push
aaa
fadds
aas
push
fadds
pop
imul
sub
and
add
add
push
ficoml
incl
daa
add
sub
pop
sbb
loopne
sub
sub
mov
sub
push
or
xorb
das
dec
add
mov
fildl
mov
ret
push
shrb
push
pop
xor
mov
sbb
jle
pmaxub
cmpl
xor
xlat
push
mov
mov
loopne
insl
fwait
mov
addr16
or
movl
adc
jno
ds
add
push
xor
sbb
or
xchg
outsb
dec
push
fs
jle
pop
xor
pop
iret
dec
ret
push
xor
fimuls
mov
daa
pushl
sbb
dec
jne
ds
xchg
mov
fcomps
dec
xorb
adc
mov
dec
and
das
mov
callw
add
add
jo
pop
subb
das
out
push
push
xor
and
cmp
push
adc
nop
lahf
je
push
xorps
sub
dec
sbb
inc
add
jl
xchg
int3
inc
cmp
push
cmp
jno
pop
das
out
fbld
push
idivl
dec
adcb
repz
std
xlat
mov
cli
push
sti
daa
push
add
pop
mov
sub
lahf
push
cltd
or
in
push
dec
cwtl
push
les
shl
inc
jo
out
mov
cmp
inc
pop
pop
push
xor
sub
lret
mov
pop
pop
out
sbb
push
cmp
pop
sbbb
adc
sub
mov
out
add
cmp
add
or
or
push
cmpsl
mov
add
ret
sti
pop
and
js
lcall
dec
lock
js
and
xchg
mov
add
inc
mov
repz
inc
jno
fstl
loop
mov
or
es
and
and
das
cmp
pop
pusha
fisttpl
or
cmpsl
pop
out
sbb
mov
sbb
das
test
cmp
xor
pop
or
push
rorl
or
mov
dec
inc
les
dec
sbb
fsubp
push
mov
push
dec
sub
daa
adcl
icebp
lahf
dec
pop
int
pop
mov
popa
add
and
out
jnp
inc
cli
xor
fstps
and
sbb
push
adc
pushf
cmp
cmc
dec
inc
dec
cmc
sub
testb
push
and
or
push
add
sbb
mov
aaa
sub
add
and
rorl
or
push
xchg
adc
js
jns
push
cmp
pop
xchg
cmp
push
mov
dec
pop
inc
inc
cmc
push
pop
sub
adc
dec
ds
filds
dec
pop
sbb
push
sub
dec
pop
push
dec
fcompl
sti
cs
dec
pop
xor
push
dec
pop
push
dec
sbb
sbb
pop
inc
adc
push
inc
repnz
loope
dec
test
inc
in
sbb
lods
xor
jo
push
sbb
dec
inc
or
out
cmpsb
dec
hlt
lds
and
or
pop
inc
shrb
ret
and
adc
mov
and
sub
cmp
and
into
inc
or
sti
push
and
out
and
dec
xlat
push
imul
mov
lcall
mov
cmpl
jbe
push
arpl
pop
imul
inc
and
lock
out
fistpl
scas
sarb
adc
sub
mov
mov
insb
mov
lcall
inc
loopne
popa
xchg
or
inc
rolb
adc
pop
fsubs
fstpl
jmp
out
inc
and
mov
rolb
dec
and
aad
out
lods
cmp
lcall
and
dec
fwait
aad
mov
push
xor
dec
sbb
sub
dec
orl
push
rol
inc
push
adc
repz
adc
adc
or
xorl
cwtl
sbb
enter
loop
jo
sbb
movsb
jmp
pop
and
dec
out
lods
leave
push
test
loope
rcrl
inc
cmp
pop
dec
sbb
cli
sub
cmp
push
pop
pop
cmp
push
pushf
or
jg
pop
lock
pop
scas
cmpsb
xor
pop
or
fidivrl
or
xor
nop
xchg
mov
cmpsl
and
sub
mov
aas
inc
dec
and
popf
and
in
aaa
adc
pusha
push
gs
or
mov
cmp
pop
and
sbb
movsl
fisubrs
xchg
shlb
in
mov
cmp
pop
xor
cli
adc
sub
sbb
in
cmp
inc
inc
jg
xchg
xchg
adc
aas
aaa
jg
clc
xor
push
add
pop
pop
cmp
sbb
xor
pusha
pop
shrl
negl
fadds
fstl
mov
dec
xchg
add
pusha
or
aaa
aaa
popa
outsl
dec
test
xor
mov
jo
insb
gs
ja
fs
rorb
push
adcl
jb
jp
insb
outsl
punpcklwd
inc
add
adc
cmpsl
shlb
add
pop
pop
das
add
inc
fsubrs
pop
inc
jb
cmp
lods
dec
outsb
sbb
imul
push
lock
add
into
testb
adc
push
adc
shrb
mul
iret
ss
add
and
rcr
cmp
fsts
fisubs
loopne
inc
pusha
repz
in
icebp
push
xor
mov
mov
sub
testb
outsb
cmp
lahf
dec
push
dec
dec
lea
cmpl
iret
adc
lods
fistps
push
and
mov
add
adc
mov
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
aam
repnz
adc
pop
sbb
jae
sarb
jo
fsubs
pop
rol
sbb
mov
pop
dec
xchg
jbe
call
pop
shl
dec
push
adc
adc
pop
push
and
xor
aaa
xor
xchg
dec
clc
inc
push
dec
cmp
pop
mov
pop
mov
add
push
fs
jb
mov
imul
imul
pop
mov
xchg
pushf
cmp
js
push
and
cmp
iret
cmp
cmp
in
jae
inc
or
and
cltd
call
push
jbe
add
js
cmp
sbb
stos
mov
dec
out
pop
int3
mov
push
and
dec
or
or
push
push
dec
jmp
cmp
xor
xor
sub
inc
sbb
sub
cld
xor
xor
inc
push
xor
jne
lea
outsl
stos
mov
out
adc
add
push
jno
mov
sub
les
das
js
div
sub
jne
push
rcpps
jp
push
rcrb
popa
test
je
bound
mov
pop
adc
rolb
push
push
mov
push
rcrl
and
xlat
sub
pop
ja
les
fwait
sbbl
test
insl
aaa
mov
add
out
and
out
in
pop
and
cmpsl
sbb
js
pusha
mov
out
cwtl
jo
or
daa
push
inc
orb
or
das
test
cmp
xchg
jg
or
sbb
push
sub
cmp
inc
or
xchg
rolb
sbb
add
out
sbb
aas
and
inc
xor
das
xor
test
push
or
adc
push
sub
jl
aaa
mov
xchg
mov
test
mov
inc
or
scas
cmp
das
cmp
das
das
sub
sbb
mov
repz
dec
mov
adc
pushf
out
add
inc
jg
inc
add
pop
cmp
fsincos
es
insl
push
outsb
pop
std
mov
iret
sti
outsb
dec
inc
inc
outsl
pusha
inc
xchg
adc
idivb
jno
mov
xchg
or
push
fcomip
fmulp
xorl
xor
push
jno
jnp
and
xchg
movl
jbe
movsb
pop
push
inc
ds
popa
adc
and
movsb
inc
es
or
data16
add
inc
nop
sbbb
ffreep
out
push
mov
pop
jecxz
rcr
repz
add
inc
pop
jnp
int3
scas
imul
cmpsl
adc
inc
adc
dec
stos
pop
jo
cmpl
push
push
imul
jns
fwait
in
mov
mov
sbb
rcrl
stos
push
mov
lcall
repz
loope
sbb
jns
mov
inc
cmp
lea
rolb
imul
data16
idivl
or
aaa
jae
ds
repz
js
mov
sub
idivb
out
or
sub
xor
out
outsl
inc
push
push
push
addr16
test
nop
jge
das
out
sbb
nopl
out
xor
pusha
mul
mov
insl
xchg
fwait
std
jo
pop
xor
jle
xlat
dec
push
jl
cmp
fldt
popf
movsl
ss
xor
iret
sarl
sub
outsb
test
cmp
stc
and
daa
push
ljmp
repz
adc
push
pop
outsb
in
ja
fs
xor
xor
out
dec
jbe
push
push
test
out
dec
repz
and
lcall
and
push
and
pop
and
call
adc
pop
dec
cltd
push
es
ja
out
scas
xlat
pop
and
stc
sahf
out
mov
es
sarl
js
sub
cmp
lcall
sub
push
jns
out
insb
xchg
scas
sub
jmp
test
pop
addr16
jg
dec
sbb
call
scas
sub
adc
stc
add
adc
adc
push
mov
xor
adc
mov
add
mov
pop
jb
mov
loopne
mov
je
idivb
repnz
std
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
in
pop
adc
add
add
ljmp
fwait
outsl
pop
fsubp
pop
add
outsb
punpcklwd
imull
aas
inc
push
jmp
mov
idivb
xchg
je
addr16
push
adc
push
imul
jae
rcr
and
xlat
push
push
mov
inc
jae
dec
cmp
mov
push
fimull
je
push
mov
insl
pop
cmpsb
dec
add
loope
imul
aad
jnp
pop
push
dec
pop
je
pop
imul
aaa
push
fbstp
rcr
or
das
push
rclb
outsb
push
inc
imul
mov
retw
frstor
inc
dec
or
dec
mov
nop
dec
js
ja
jl
inc
push
pop
push
xor
push
push
dec
pop
leave
and
dec
cmp
repz
fiadds
ds
scas
out
das
adc
in
pop
shlb
es
insl
jo
mov
insb
je
fisttps
adc
addr16
jo
jae
es
outsl
mov
idivb
cmp
adc
and
sahf
mov
push
cmpsb
mov
mov
lcall
xor
xor
xor
xor
cmp
cmp
gs
push
xor
xor
cmp
push
outsb
xor
xchg
dec
inc
or
pop
les
push
or
push
cmp
inc
add
imul
dec
or
sbb
push
mov
scas
and
pop
push
int
movsl
into
inc
je
sarl
es
sbb
adc
test
dec
and
pop
pop
sbb
dec
jge
cmp
and
dec
jge
ret
xor
pop
adc
addr16
inc
inc
aas
and
pusha
xlat
cmp
adc
mov
push
inc
dec
push
loope
add
or
push
dec
and
pop
mov
test
test
push
push
das
adc
sbb
mov
in
inc
inc
xor
mov
cli
adcl
cmpsb
xor
arpl
das
daa
and
or
pop
insb
mov
aas
and
pop
rcll
cmpb
sub
or
and
sbb
das
mov
adc
push
cs
mov
push
rcl
addb
add
mov
fidivl
adc
and
test
add
xorl
or
mov
xor
test
in
mov
and
and
add
and
repz
dec
ds
inc
and
shlb
inc
jo
mov
aaa
popf
pop
inc
and
xor
aaa
mov
push
lahf
mov
push
mov
and
das
stos
push
or
add
add
daa
lods
daa
jge
sub
sub
mov
lods
testb
add
jecxz
jo
or
xchg
test
aas
jno
punpckldq
adc
insb
push
insb
andl
xchg
das
dec
mov
testb
mov
pop
sbb
push
repnz
add
cmp
inc
lret
ja
dec
or
sub
iret
pop
das
mov
lock
add
mov
pop
xchg
outsb
lods
dec
shrl
pop
pop
pop
push
andb
pop
addr16
pop
sbb
or
mov
push
das
in
xchg
adc
in
push
pop
mov
cmp
xor
or
add
outsl
lret
add
dec
arpl
adc
or
mov
dec
sbb
jae
js
jl
sbb
cmpsb
es
and
add
mov
in
in
sbb
pop
xchg
out
and
push
inc
and
lods
sbbl
add
ja
mov
daa
popa
mov
adc
data16
sbb
push
push
mov
stc
adc
sbb
jae
push
inc
mov
and
adc
lds
pop
sbb
loop
shrb
add
lock
das
das
mov
pop
inc
sbb
sbb
inc
push
sahf
or
jno
adc
or
or
lods
loopne
inc
fcompl
push
lea
xor
das
dec
adc
jp
daa
fs
and
xor
addr16
pop
fs
data16
adc
xchg
neg
or
loope
adc
push
mov
pop
xchg
sbb
push
bound
mov
pop
sub
test
push
inc
push
adc
daa
dec
xor
push
cmp
das
add
or
mov
cmp
dec
andl
movsl
pop
sbb
mov
icebp
repnz
fimull
popa
movsb
xlat
push
sbb
cmp
cmpsl
or
dec
dec
inc
cmp
jbe
add
lock
out
aas
adc
pop
xor
add
pusha
adc
test
add
cs
adc
adc
cmp
decb
cmp
sbb
dec
insb
icebp
enter
inc
xorb
aas
pop
lcallw
rclb
adc
push
cmp
xor
fstpl
popa
lret
mov
push
push
mov
adc
pop
xor
sbb
in
test
mov
ficoms
dec
sub
cmp
sbbb
adc
push
les
add
int
lods
rcr
and
push
sub
xor
lds
rcll
and
mov
into
enter
adc
sub
test
testb
inc
loopne
inc
lret
rorb
and
inc
inc
or
inc
pop
inc
dec
pop
mov
adc
test
add
out
loope
push
loop
cmp
push
pop
or
and
push
pop
mov
sub
js
sbb
movsl
inc
and
adcl
mov
pop
inc
xor
out
das
push
sbb
popa
push
lcall
add
xchg
adc
adc
xchg
outsl
bound
sub
sbb
inc
push
and
add
push
iret
push
mull
xchg
adc
push
arpl
daa
pop
add
pop
pop
cs
sbb
mov
push
inc
jbe
movsb
sbb
xlat
cld
and
cmp
inc
push
sbb
xor
or
std
movsb
decb
jb
jo
mov
push
fcompl
mov
xor
xor
add
rorb
jl
push
adc
pop
fimull
movsl
mov
iret
or
pop
adc
push
outsl
dec
lock
xor
sub
pop
lret
mov
push
pop
pop
add
add
pop
sub
inc
sub
jo
decl
sbb
cmp
cs
pop
inc
ds
and
push
pop
dec
inc
and
inc
cmc
incl
and
or
dec
or
push
pop
sub
ds
dec
sub
push
sbb
sbb
and
pop
aam
sbb
sbb
cmovge
sub
in
decl
mov
cs
dec
inc
or
or
std
cmp
call
or
es
xchg
mov
xor
cmp
pushl
push
das
sbb
xor
push
es
push
adc
and
pop
inc
es
pop
das
sbb
and
mov
sub
or
dec
adc
inc
push
sbb
xlat
push
xchg
sub
add
xlat
js
mov
inc
mov
dec
xchg
add
push
ret
pusha
cmpsl
repnz
push
xor
add
inc
xor
and
or
sbb
insb
push
pop
push
add
sbb
xor
mov
dec
das
loopne
insb
and
push
andb
loopne
sbb
dec
ss
ret
xor
dec
dec
jl
nopl
mov
push
push
dec
xor
aaa
mov
inc
inc
mov
sbb
cwtl
pop
bound
add
shlb
inc
pop
nop
js
mov
inc
jb,pn
rorl
jns
inc
inc
inc
and
fisttps
push
push
dec
inc
dec
push
dec
pop
mov
sahf
outsl
out
arpl
add
cmpsb
inc
sub
lcall
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
call
pop
fmuls
and
jge
push
lock
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
das
and
and
sub
sub
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
lcall
jle
test
mov
cmp
cld
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
jg
dec
pushf
pop
rep
cs
arpl
test
add
mov
mov
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
push
sbbl
int
pop
pop
xor
inc
inc
dec
xor
js
push
cmp
decl
arpl
insb
and
or
push
pop
fs
xor
jb
inc
ja
dec
push
ja
outsb
sub
push
jge
sub
xor
popa
and
pop
jp
cli
stos
jle
jbe,pn
inc
bound
je
xor
jp
dec
push
mov
inc
cmp
jne
mov
mov
add
add
pop
sub
sbb
xor
ss
aaa
inc
sbb
sbb
jo
dec
cmp
mov
into
lods
sbb
sbb
inc
inc
ljmp
arpl
pop
sub
pop
daa
daa
or
mov
xor
cld
negl
pop
es
sub
pop
xor
daa
fildll
jmp
xor
xor
inc
add
imul
pop
ja
inc
push
xor
xor
and
aaa
inc
imul
push
inc
cs
inc
ss
xlat
xchg
mov
pop
ss
lahf
ss
and
popf
xor
mov
cmp
push
loopne
mov
xor
lods
jne
sbbb
sub
ret
add
push
sbb
sub
adc
add
bound
xlat
addr16
mov
and
mov
mov
fistpl
dec
ror
mov
xchg
shll
pop
popa
inc
bound
push
push
add
inc
out
mov
inc
add
cmpsb
loopne
or
adc
ret
mov
pop
cmp
add
aas
cmp
add
xor
mov
adc
and
das
jp
adc
pop
sub
call
adc
jmp
daa
adc
sbb
fiaddl
adc
sub
ja
lods
push
sbb
stos
fcomps
cmp
mov
loop
sbb
inc
loopne
push
mov
gs
and
sbb
enter
add
or
cmp
push
scas
hlt
popa
stos
movsb
imulb
andb
pop
cmp
lret
shll
popa
cmpsb
out
jmp
pop
sbb
mov
in
adc
fildl
cmp
xchg
adc
mov
pop
push
mov
loop
xchg
mov
dec
js
adc
fs
xchg
sub
inc
fsubs
sbb
or
ret
sub
add
lock
mov
enter
xchg
adc
push
addr16
adc
mov
push
adc
xchg
and
add
dec
outsb
outsb
je
xor
cmp
xor
js
xor
into
into
dec
inc
imul
cmp
je
jo
xor
push
shlb
and
or
push
inc
aad
sub
outsl
idiv
mov
je
loop
sub
adc
daa
aad
inc
lret
decb
xor
fwait
jno
outsl
insb
dec
push
popa
je
push
pusha
mov
cmp
js
aaa
fs
daa
sub
adc
add
add
push
gs
sub
mov
mov
add
in
and
or
shlb
add
mov
lret
jl
int3
test
lds
mov
push
dec
push
cmpsl
fdivrs
cmc
aaa
inc
inc
dec
or
push
pop
mov
push
jae
and
out
ss
cmp
xor
xor
inc
jnp
pop
dec
sub
push
int3
dec
dec
adc
xchg
push
jl
sbb
lcall
loope
mov
cmp
add
mov
pushf
mov
xchg
and
in
add
mov
nop
inc
add
fcomps
push
push
add
popa
dec
cli
add
or
ja
jb
pop
cld
add
add
pop
lods
jae
inc
jne
xchg
pop
adc
jp
xor
cmp
daa
loop
das
cmp
push
dec
test
test
cmp
add
add
inc
pop
inc
cmp
adc
push
push
push
xlat
pop
roll
xor
sub
mov
ljmp
fs
jo
call
dec
xchg
or
stos
push
outsl
imul
ss
aas
ss
pop
mov
pop
pop
je
or
das
aaa
pop
adc
pop
cmp
dec
in
adc
mulb
add
das
scas
and
push
push
lea
arpl
and
xor
and
insb
mov
xchg
push
dec
sbb
ja
inc
xor
xchg
and
ficomps
xor
sub
sub
arpl
or
xor
xlat
lds
cmp
sahf
into
add
push
test
pop
adc
lret
adc
jg
ds
out
cmpsl
sbb
inc
loop
iret
scas
pop
xchg
pop
sbb
mov
vmulsd
add
sub
rorb
fstl
mov
cmp
inc
add
pop
add
push
mov
inc
je
gs
pusha
orb
inc
jb
mov
mov
pop
aas
sub
and
push
out
pop
adc
pop
add
cmp
test
mov
xchg
insl
das
dec
pop
dec
pop
movsl
push
fcmovnu
sub
dec
pop
repz
jmp
je
insb
daa
push
push
dec
cmpsl
roll
imul
je
sub
enter
xor
adc
jno
cmpsl
pop
push
fadds
inc
or
rorl
sbb
aas
pushf
aas
add
sub
inc
dec
mov
sub
mov
push
cmp
and
push
out
or
add
cmp
add
fstl
dec
add
jns
jne
xchg
add
adc
fs
sar
movsl
test
and
addr16
popa
pop
pop
xor
cmp
outsl
popa
mov
sub
inc
push
dec
inc
inc
cmpsb
punpckhwd
ss
jne
outsb
push
je
scas
sub
mov
pop
pop
out
mov
push
inc
dec
push
dec
sub
dec
inc
call
xlat
insl
xchg
jns
gs
sbb
pop
xchg
daa
inc
adc
fwait
pop
add
or
dec
push
dec
jb
orb
inc
loop
aas
adc
ret
pop
adc
in
sbbb
inc
loop
cmpsl
adc
jb
mov
adc
inc
mov
inc
rcrb
xchg
push
xorl
jns
jb
ja
add
push
adc
sub
das
add
xchg
jae
inc
or
add
popa
cltd
loop
in
sbb
push
mov
aas
jae
pop
addr16
dec
data16
push
iret
cmp
mov
push
mov
outsl
dec
ljmp
push
dec
lcall
mov
xchg
nop
ja
push
mov
add
js
mov
or
push
inc
mov
shrb
mov
sub
or
add
cmp
jle
xchg
push
out
and
cmp
xchg
repnz
dec
pop
int3
sbb
dec
aam
and
or
pusha
pop
pusha
bound
cmpsb
lds
shlb
pusha
sbb
and
adc
xor
push
mov
pop
mov
clc
jne
jne
adc
or
lods
jno
mov
aam
or
or
mov
pop
cmpsl
call
dec
lcall
arpl
or
stos
pop
sub
stos
pusha
mov
test
imul
insb
sub
adc
or
and
ja
aad
lcall
mov
mov
outsl
jge
sbb
xchg
or
lods
push
fcmovbe
outsl
or
jbe
imul
mov
arpl
adc
pop
sbb
out
xor
repz
andl
repz
xchg
ss
int
add
pop
or
flds
adc
adc
sbb
and
sub
fwait
int
iret
xor
inc
mov
mov
ja
mov
mov
popa
xchg
sbb
insb
sub
das
or
xor
int
pop
adc
pop
add
sub
adc
push
push
dec
mov
insb
str
add
jg
and
das
incl
and
push
push
das
xor
xor
and
aad
dec
inc
outsb
insb
xlat
repnz
pop
sbb
js
test
sub
add
xchg
push
subb
in
and
inc
dec
outsl
insl
pop
xor
dec
or
or
xor
push
mov
out
fistl
push
inc
dec
dec
dec
inc
mov
or
fdivl
outsb
icebp
add
and
push
fs
int
subb
cmp
xorb
dec
loope
sub
push
pop
mov
fisttps
adc
test
cwtl
dec
pop
bound
fstps
test
orb
lahf
nop
add
xadd
sbb
inc
jle
jae
pop
mov
inc
mov
and
lock
insl
pop
jnp
adc
cmpb
aas
mov
or
inc
dec
add
pop
add
sahf
mov
jno
sarb
mov
add
outsb
aas
add
test
addr16
movsb
aam
add
fistpll
push
lock
or
movsb
add
mov
sub
aaa
cmp
out
mov
daa
test
push
dec
js
test
pop
pop
outsl
pop
mov
inc
rorb
pop
int3
aas
int
arpl
mov
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
fldt
clc
aas
push
js
ds
shrl
aas
mov
enter
fisubrs
inc
ss
inc
pushf
ds
ds
fs
cmp
out
dec
loopne
test
push
cmp
iret
cmp
jns
cmp
cmp
test
repz
cmp
push
lods
nop
icebp
jns
out
cmp
enter
push
push
inc
adc
add
cs
jecxz
or
out
dec
inc
pop
shlb
pcmpeqd
dec
rclb
add
movsb
stc
cmp
fmuls
add
push
repnz
add
or
xchg
imul
out
or
clc
push
cmp
mov
add
roll
jg
fldt
cmp
lods
or
xchg
mov
dec
outsl
xchg
push
xor
aam
inc
lock
add
adc
sbb
dec
outsl
add
sub
mov
inc
or
iret
test
jo
mov
fbstp
fsubrl
cmp
xchg
cmp
cmp
ss
add
cmp
mov
push
cmp
cmp
xchg
popa
scas
add
dec
outsl
out
cld
cmp
xor
ficoms
fucomip
lods
cmpsl
aaa
sahf
repnz
rol
add
pop
in
fmuls
pop
scas
add
insb
push
ljmp
add
sbb
sbb
xchg
enter
and
adc
in
mov
call
testb
out
or
add
mov
xor
loopne
mov
push
pop
pushf
xor
xchg
inc
mov
add
andl
dec
xchg
add
in
or
push
or
fidivl
and
sub
cmp
dec
filds
add
and
enter
outsl
and
fs
es
nop
or
and
xchg
subb
jbe
push
fsubrs
orb
jo
popl
leave
mov
outsl
out
mov
cmpsl
dec
aas
daa
add
and
test
cmpsl
adc
xchg
inc
out
stos
pop
insl
add
mov
idiv
aam
fdivrl
add
mov
sub
mov
outsl
xchg
push
pop
inc
fcoms
jg
push
mov
push
mov
xchg
push
test
pop
xchg
mov
add
or
in
test
divl
or
xor
inc
outsl
cmp
jbe
push
push
outsl
jg
push
mov
xchg
pop
nop
xchg
mov
testl
dec
mov
push
aam
in
enter
je
imul
ficoml
or
lock
scas
bound
inc
sbbb
xlat
or
or
dec
nop
inc
mov
adc
or
pop
push
cmp
inc
xchg
test
jo
mov
lahf
xchg
adc
inc
jno
pop
sbb
pop
sub
mov
testl
and
add
cld
add
inc
scas
loopne
push
ret
push
pop
aaa
mov
pusha
mov
imul
dec
xchg
aaa
pop
dec
xchg
mov
outsl
add
cmp
icebp
call
addl
outsl
xchg
sub
hlt
jg
dec
sahf
or
and
jns
mov
mov
add
jg
test
leave
cmp
xchg
push
jb
iret
movsb
lods
add
adc
add
sub
and
push
sbb
loopne
dec
xchg
outsl
add
push
pop
pop
adc
pop
daa
mov
js
ss
test
push
es
mov
add
or
aam
lods
in
iret
adc
cmpsl
add
mov
xor
or
xlat
add
push
sub
push
daa
dec
out
pushf
inc
daa
in
scas
or
xchg
sbb
dec
sti
sahf
and
push
aam
push
inc
sub
sahf
cmpsl
stc
mov
xchg
or
inc
push
mov
mov
adc
or
aas
je
pop
enter
je
xchg
popa
inc
lcall
fwait
mov
or
repnz
enter
in
pop
jb
pop
mov
add
xchg
sub
add
ss
add
add
lahf
jo
shll
insb
and
add
or
out
fwait
insl
sub
add
out
lahf
mov
inc
pop
cltd
nop
push
push
or
pushf
inc
and
pop
leave
in
hlt
daa
or
fwait
push
enter
movsb
dec
pslld
loopne
mov
hlt
outsb
rclb
fiaddl
outsl
add
insb
insl
and
mov
ss
jbe
daa
sub
cmp
fidivrs
pop
dec
push
and
cwtl
push
rcrb
sub
aas
add
inc
js
das
add
dec
ja
inc
hlt
fstp
mov
mov
outsl
movsb
adc
xchg
in
scas
cld
loopne
pop
repnz
xlat
retw
popa
adc
das
faddp
adc
dec
pusha
push
push
daa
aas
fdivs
sbb
addr16
pop
fwait
insl
shll
jo
mov
inc
push
add
fcmovne
rorl
in
add
add
outsb
xchg
mov
cmp
repz
push
dec
push
mov
lret
dec
es
iret
repz
lods
iret
repnz
out
dec
push
loop
dec
movb
sarl
lret
push
dec
popa
mov
sahf
out
ds
push
push
andb
clc
adc
pop
test
repz
or
xor
push
jns
out
in
push
cmp
cmpsl
repz
out
pop
push
xor
out
lcall
jnp
repz
fcomps
push
pop
mov
ds
pop
inc
jp
fsubp
jns
jge
pop
out
jp
iret
repz
push
pop
inc
jb
mov
lcall
dec
pop
repz
ja
hlt
dec
pop
outsl
mov
adc
mov
cmpsl
stc
cmp
add
stos
sub
ds
jnp
jmp
push
jno
pop
arpl
sub
jl
cmpsl
stc
push
gs
nop
rcll
data16
iret
rcll
mov
push
repz
imul
out
push
test
jns
out
imul
adc
cmp
push
jge
and
pop
outsb
cmpsl
stc
cmp
pop
mov
cmpsl
stc
cmp
sbb
icebp
sub
iret
repz
scas
sub
outsl
popf
mov
ds
jae
dec
je
add
jns
jne
andb
int3
xor
cmp
mov
mov
sbb
jge
cmpsl
pop
lock
or
cmpsl
stc
mov
mov
stc
xor
add
mov
sarl
pop
jle
push
nop
and
out
ds
cwtl
fstpt
xorb
repz
fcoms
sbbl
lcall
fcomps
ror
add
jl
cmpsl
stc
sbb
push
mov
adc
popa
cwtl
push
mov
repz
das
pop
out
and
push
cwtl
sar
mov
out
sahf
out
into
pop
popl
mov
imul
out
push
rcrb
jns
data16
add
int
repz
pop
sub
into
adc
out
loop
sahf
pop
mov
imul
je
sbb
out
sbb
jl
out
mov
mov
lock
ss
dec
repz
scas
inc
scas
imul
mov
cmpb
inc
jg
add
lock
outsb
je
add
in
xchg
cmp
mov
and
mov
dec
inc
daa
cs
in
jns
ja
dec
pop
pop
and
in
data16
imul
or
pop
xor
dec
ss
mov
xchg
or
out
lock
shll
and
ss
icebp
mov
inc
jnp
hlt
pushl
or
push
iret
movsb
push
inc
mov
int3
push
jns
test
xchg
rcll
aaa
cmpsb
scas
inc
pop
enter
test
pop
inc
mov
or
or
pop
lret
push
push
and
and
dec
pop
insb
bound
int3
jg
push
sbb
mov
rclb
pop
fisttps
bound
sahf
aad
xchg
push
fildll
je
clc
dec
mov
imul
mov
aas
sub
int
pop
enter
inc
mov
ss
mov
push
shl
dec
add
mov
leave
xchg
inc
jbe
aas
lret
outsb
jo
or
lret
int3
push
push
hlt
push
mov
push
inc
negl
fiaddl
comiss
fnsave
addr16
inc
xchg
and
add
aaa
inc
push
dec
iret
dec
mov
sarl
mov
inc
push
sarb
push
shrb
jb
and
push
test
ret
mov
xor
mov
inc
in
mov
or
sub
std
repnz
in
inc
jnp
aas
jl
inc
decl
aas
pop
in
dec
int3
xchg
and
bound
xor
ficoml
xor
mov
sbb
sbb
pop
iret
dec
insb
outsb
dec
pop
cmpsl
or
pop
rolb
in
out
lock
inc
out
push
add
repnz
outsl
into
add
sub
pop
insb
pop
scas
xchg
sbb
add
inc
mov
shlb
daa
les
in
mov
cmpsb
inc
push
out
pushf
in
hlt
cmp
out
sub
sbb
das
cltd
dec
mov
aam
mov
ret
out
or
pop
jns
sbb
cmp
add
push
out
pop
dec
xchg
jb
jb
insb
je
cwtl
dec
pop
jb
add
cmpsl
loop
mov
addr16
push
dec
fwait
in
sbb
fldl
jbe
mov
enter
fmul
in
and
add
pop
cmp
pusha
pop
push
push
mov
scas
subl
mov
mov
pop
es
and
pop
ja
push
leave
dec
pop
pop
xlat
lcall
movsb
dec
inc
movsl
pop
xor
in
add
movsb
pop
add
push
jb
test
pop
mov
inc
cmc
add
add
mov
add
adc
dec
cmp
xchg
ljmp
jb
mov
pop
js
pop
in
das
nop
cwtl
cmp
inc
dec
jns
aaa
jb
dec
pop
push
add
sahf
jnp
out
add
pop
adc
dec
xchg
or
nop
cmp
ret
add
popf
out
es
pop
inc
push
daa
fs
push
mov
loope
cmp
cmp
mov
hlt
push
xchg
xchg
sbb
mov
dec
sub
in
daa
push
dec
pop
pop
dec
fs
cs
out
outsl
xchg
xchg
repz
dec
dec
popf
movsl
lods
cmpsb
add
pushf
cmp
mov
rolb
leave
leave
leave
inc
out
testb
incb
dec
push
dec
in
mov
xchg
xor
dec
inc
dec
and
dec
push
pop
popf
mov
inc
popa
jl
test
mov
xchg
setl
inc
repnz
das
mov
pushl
add
mov
push
pop
push
xchg
scas
adc
addr16
aaa
dec
dec
nop
pushf
push
fisttpll
movsb
bound
push
or
fwait
push
mov
stos
addb
or
in
arpl
ret
inc
jb
mov
cmp
mov
pop
ja
js
mov
das
adc
push
les
mov
in
das
nop
aam
push
or
push
leave
mov
push
push
cmp
add
sbb
jp
xor
aaa
jb
inc
jl
fs
xchg
and
cmpsl
push
xchg
sbb
shrl
mov
es
fs
xchg
hlt
cld
and
sub
adc
pushf
xchg
adc
xor
roll
gs
je
dec
pop
test
leave
jae
lods
adcb
mov
xchg
push
sahf
push
test
mov
lret
push
repz
mov
or
sahf
out
fisttpll
iret
push
push
or
or
jns
and
sub
out
adc
dec
sahf
out
sahf
adc
adc
jns
test
xchg
sbb
inc
mov
mov
sbb
insl
pop
leave
fsub
push
xlat
data16
cmp
push
add
imul
xor
inc
pop
and
in
int3
inc
mov
iret
fcoml
adc
push
out
pop
daa
fs
jecxz
call
pop
xor
rcrb
push
add
aas
add
sahf
xor
sbb
inc
adc
daa
sub
push
xor
out
fs
push
nop
and
repnz
dec
lahf
sub
add
dec
jbe
outsb
add
and
ss
push
sub
das
cmp
imul
mov
mov
lods
scas
and
addr16
rorl
leave
in
push
push
dec
and
cmp
push
cmp
jo
mov
mov
mov
jns
add
xchg
out
shll
enter
xchg
mov
add
and
mov
imul
dec
adcb
and
inc
mov
imul
and
pushf
imul
mov
leave
add
xchg
xchg
add
add
add
out
pushf
dec
and
xchg
dec
mov
flds
pop
pop
push
movhps
mov
xor
out
add
pop
inc
or
in
insb
test
and
in
mov
cmp
pop
xchg
mov
jb
lds
dec
cmc
and
dec
pop
xchg
pop
mov
les
pop
and
les
fwait
in
xor
and
daa
inc
pop
xor
pop
mov
fwait
dec
push
clts
pop
push
inc
mov
mov
outsb
mov
addr16
js
leave
adc
inc
repnz
pop
add
repnz
outsl
dec
outsl
insb
outsl
jns
cmp
mov
movsb
outsl
loop
jnp
jns
in
pop
clc
pop
add
pop
xchg
mov
leave
xor
in
mov
sbb
insb
pop
fs
repnz
fldt
jge
fdivrl
inc
mov
add
add
pop
fldcw
jo
shlb
jo
xchg
pop
and
test
jno
dec
ja
and
daa
inc
mov
xor
js
xchg
fistl
outsl
pop
fs
pop
pop
pop
mov
pop
jl
test
pop
pop
mov
pushf
pop
movsb
pop
pop
pop
pop
pop
lods
pop
mov
mov
pop
pop
pop
int3
pop
aam
fcompl
leave
dec
mov
in
pop
femms
leave
leave
leave
leave
or
leave
leave
leave
or
pop
push
leave
leave
leave
leave
add
dec
xchg
add
jbe
and
cmp
xchg
and
pop
xor
push
inc
pop
repnz
jmp
mov
push
mov
loopne
mov
daa
pop
leave
jae
cwtl
icebp
or
inc
fwait
mov
aam
sub
sysexit
or
pop
pop
jb
enter
pop
push
fsubrp
ss
orb
push
push
nop
ss
cwtl
or
mov
leave
or
inc
je
or
pop
xchg
pop
push
jmp
and
in
xor
sti
ja
call
push
pop
pushl
cmp
mov
dec
pop
push
pop
movsb
mov
push
packsswb
jae
or
xchg
popf
out
out
jnp
fwait
jns,pn
bt
orl
dec
mov
add
fwait
push
inc
mov
out
in
push
aas
sbb
addl
pop
out
repnz
clc
es
mov
push
aas
jbe
leave
or
das
into
out
ror
fdivrp
out
hlt
cmp
jns
add
adc
iret
adc
dec
sbb
or
xchg
xchg
and
inc
pusha
dec
pusha
pusha
in
dec
sub
pusha
xchg
add
mov
jns
mov
leave
add
dec
fldcw
loope
jb
inc
repnz
popa
sbb
mov
and
popa
cmp
inc
popa
aam
add
popa
pushl
sbb
popa
sbb
sbb
popa
popa
popa
popa
sbb
sbb
popa
popa
popa
popa
js
sbb
popa
bound
and
aaa
push
bound
leave
out
imul
loopne
daa
fwait
sarb
xor
smsw
jbe
mov
sbb
and
js
sahf
push
sub
or
xchg
pop
in
arpl
dec
push
arpl
or
inc
push
add
jns
shlb
cmp
arpl
arpl
arpl
arpl
pop
mov
mov
and
and
and
fs
fs
rcr
xchg
fs
fs
enter
fs
jp,pn
rclb
mov
push
lock
sti
call
inc
gs
jb
add
jo
out
js
andb
out
mov
jns
daa
daa
mov
dec
dec
lock
mov
cmpsl
js
mov
add
push
cmp
mov
dec
push
dec
jns
pop
pop
fst
iret
add
xor
daa
adc
dec
outsb
pop
or
pop
test
lcall
mov
dec
mov
mov
shlw
fsubl
push
jns
push
out
incl
sbb
or
addr16
xchg
and
addr16
addr16
lea
cmp
addr16
jle
xor
loopne
or
xchg
shlb
daa
daa
push
test
daa
daa
daa
aad
jmp
xchg
add
or
pop
leave
repz
xchg
jge
data16
add
pusha
push
jb
inc
jnp
jle
subl
scas
movzbl
pop
and
add
fnstenv
xchg
xchg
enter
imul
out
fisubrs
pop
push
cs
add
arpl
pushl
das
or
and
xchg
imul
xlat
fbld
xor
inc
bnd
push
movsb
add
addr16
in
pop
lret
jg
imulb
pop
sarb
iret
mov
dec
xchg
push
add
test
jg
out
fucom
jns
add
verw
enter
imulb
push
imul
outsb
repnz
push
or
push
ud2
push
mov
es
fiadds
jo
pop
jbe
push
and
xchg
out
jb
or
xchg
pushf
pushf
dec
xchg
popf
movsl
dec
mov
rcr
add
repz
enter
push
insb
mov
jne
in
insb
aas
out
xchg
xchg
mov
hlt
insl
jne
add
cltd
dec
cmp
cmp
test
insb
xchg
jbe
jb
rcr
paddb
add
movl
or
call
insl
scas
sbb
mov
out
jb
pop
aas
insl
inc
scas
dec
in
inc
mov
pop
add
lahf
icebp
in
outsl
ja
insl
pop
xchg
insl
xchg
insl
lahf
insl
cmpsl
in
insl
xchg
insl
scas
pop
ud2
pop
or
in
in
or
push
in
in
add
jns
out
mov
mov
sahf
sbb
sbb
out
fistps
out
and
jae
repnz
idiv
and
bnd
mov
pop
outsb
enter
sub
cmpl
into
inc
mov
addr16
fnstsw
jmp
lahf
push
add
cmpsl
outsb
outsb
outsb
xchg
cmp
iret
pop
mov
mov
fisubrl
test
pushf
jecxz
outsb
pop
add
out
sahf
fmull
sbb
xchg
data16
test
outsl
outsb
xchg
xchg
xchg
outsl
outsl
outsl
aas
js
cmp
movzwl
enter
nop
outsl
cwtl
or
or
jns
sahf
outsb
xadd
adc
fmuls
add
inc
dec
xchg
jo
leave
addr16
jo
add
jb
daa
daa
dec
push
jo
pop
jo
iret
sbb
imul
sub
jo
mov
into
test
outsb
mov
outsl
mov
das
leave
iret
shr
shl
pushf
pushf
fmul
fabs
jmp
fbstp
inc
lahf
or
xchg
adc
daa
push
adc
jno
rorb
and
xchg
dec
out
cwtl
jno
jno
mov
in
xchg
nop
lcall
mov
xchg
xchg
rcr
out
mov
fdivrs
jb
adc
jb
pop
add
cmp
sbb
in
jb
jb
leave
add
jb
cltd
mov
lock
mov
add
add
in
add
aaa
mov
jl
iret
add
mov
dec
push
insb
scas
das
mov
das
nop
xchg
out
mov
rcll
mov
mov
jb
add
or
adc
jns
out
sbb
and
sahf
xchg
xchg
xchg
sub
cmp
or
or
fs
iret
repz
insb
push
je
daa
iret
repz
jl
test
ljmp
mov
jb
enter
fcomps
loopne
call
mov
pop
nop
xchg
int
mov
lock
sbb
fildll
pop
xor
leave
repz
push
aaa
inc
je
add
jmp
cs
xchg
je
xchg
mov
xchg
je
das
enter
cmp
add
jmp
cmp
andb
mov
mov
addr16
fstpl
jo
or
cmp
and
fmuls
cmpsb
andb
push
cmp
aas
push
add
push
jne
jp
jo
lar
cs
jne
outsb
and
out
loopne
call
addr16
mov
jbe
adc
cmp
inc
push
add
push
pop
pop
add
cmp
in
add
mov
push
or
iret
repz
or
or
jbe
mov
jbe
mov
sahf
or
enter
imul
add
add
sbb
ja
inc
cmp
sub
mov
jne
push
pop
push
ja
loopne
ds
jbe
add
pop
xor
cltd
daa
mov
xchg
daa
mov
je
enter
sbbb
cmpsb
mov
int3
aam
leave
out
xchg
fucomip
mov
fs
adc
js
stos
pop
jne
xchg
push
aas
into
stos
ret
push
dec
pop
xchg
xchg
pushf
or
rep
adc
pusha
nop
or
fiadds
cmp
fmulp
xchg
sahf
add
in
movzbl
js
leave
add
dec
and
or
ja
cld
sbb
or
loopne
movups
enter
jns
jns
enter
jns
jns
aad
lret
jns
jns
pop
xchg
jns
iret
sbb
jns
push
push
mov
xchg
and
push
mov
jns
jno
jo
xchg
das
jp
mov
push
inc
inc
pop
aam
or
jp
in
sbb
js
cmpb
orb
jp
jp
pop
repnz
aaa
test
adc
sbb
rclb
rcll
rorb
jo
fsub
hlt
and
cmp
jnp
jnp
jnp
cmp
lds
push
pop
and
jnp
mov
cmp
inc
jnp
dec
dec
ss
xchg
iret
in
push
cltd
jnp
xorb
or
push
cmpsl
xchg
add
das
jnp
push
outsb
and
call
xadd
or
stos
test
inc
xchg
dec
and
lahf
or
xchg
xchg
xor
lds
pop
push
pop
inc
jl
mov
push
jl
jl
jl
cmp
out
fmull
jge
mov
popf
pop
and
cwtl
xchg
out
xchg
iret
in
daa
icebp
psubw
xchg
and
and
jge
pop
movsl
jo
push
aas
pxor
jb
push
jmp
jb
jo
in
inc
sahf
idivb
pop
movsb
xchg
xchg
xchg
mov
das
mov
xchg
xchg
xchg
dec
aaa
cmp
idiv
lsl
mov
movd
inc
cmpsl
cmp
jmp
cmp
xchg
and
je
outsb
cwtl
xchg
jle
aam
jle
xchg
daa
pop
leave
fsubrl
xchg
popl
xchg
xchg
pop
cwtl
mov
jle
jle
sbb
jb
jle
add
jg
jg
lahf
or
and
dec
jg
add
leave
inc
js
jg
jg
frstor
pop
nop
cmpsl
push
popf
xchg
mov
loopne
mov
daa
ret
cmpsl
lret
rcll
es
cwtl
idiv
push
xor
outsb
and
movhps
push
add
es
lar
xchg
out
or
orb
faddl
mov
imul
cld
mov
add
cltd
mov
mov
ror
into
in
mov
addr16
mov
lcall
iret
shlb
pop
cmp
call
addr16
iret
leave
cltd
add
lcall
push
lock
loopne
ja
sti
add
hlt
test
outsl
xor
mov
jg
daa
inc
orb
sub
push
imul
add
mov
mov
filds
sub
aas
bswap
shrb
fiadds
iret
loopne
push
call
mov
sbbl
add
lret
dec
dec
push
or
lret
lret
sbb
xor
cmp
jae
insl
pop
ud2
adc
sahf
out
fimuls
push
push
pop
pop
sbb
push
data16
js
subl
inc
fwait
dec
mov
inc
enter
pushf
pushf
xchg
pushf
pushf
and
or
pop
add
pushf
enter
test
or
in
test
test
test
pop
out
sahf
ja
push
pop
inc
or
repz
sahf
or
push
or
leave
repz
cmp
push
sahf
fstpt
adcl
adc
inc
push
scas
xchg
test
popf
fistps
ffreep
popf
lock
cmp
addr16
jg
in
cmpsl
and
test
test
push
dec
pop
test
push
sub
fs
cmpps
adc
mov
rcr
pop
fcmove
cli
test
es
outsl
in
xchg
push
pop
push
enter
add
test
test
test
ss
adc
sub
jns
sahf
adc
cmp
fimuls
out
push
push
pop
punpckldq
daa
sbb
pavgb
push
xchg
ja
cmp
mov
xchg
xor
out
pop
enter
jns
xchg
add
les
pop
xchg
repnz
xchg
out
pop
pop
add
or
or
adc
mov
rolb
enter
aas
xchg
adc
out
dec
xchg
mov
daa
jp
xchg
mov
ja
out
pop
or
mov
xlat
mull
cmp
or
mov
xchg
or
add
popf
test
sub
loope
je
incl
mov
pop
pop
or
xor
xor
mov
mov
mov
mov
out
mov
nop
and
push
mov
mov
stc
mov
mov
repz
pop
or
pop
adc
sbb
cmp
repz
add
jae
add
loopne
inc
dec
mov
adc
cmp
inc
test
jae
xor
push
xchg
add
adc
sarb
cmp
loope
pusha
pop
stos
test
add
call
xchg
dec
cs
rclb
ffree
dec
cld
mov
and
push
add
push
stos
mov
jb
enter
mov
mov
aas
or
pop
fisttpl
or
mov
inc
mov
decl
sub
in
mov
xchg
mov
xchg
dec
lock
push
sub
xchg
incl
mov
lock
rclb
push
dec
mov
mov
add
sahf
ja
repnz
data16
push
xchg
repz
xor
or
or
leave
repz
xchg
or
daa
jle
mov
subb
fsub
in
in
loopne
repz
or
sub
in
cmp
add
cmp
cmovle
in
in
jne
mov
in
in
icebp
stc
sbb
cmp
test
test
jns
out
sbb
iret
in
enter
scas
adc
iret
and
sub
and
ljmp
and
repnz
push
daa
js
push
add
cltd
dec
ds
mov
test
add
rorl
mov
das
cld
xchg
add
sub
nop
dec
aaa
nop
iret
fwait
sbb
aas
nop
dec
nop
push
add
and
repz
ja
jg
or
xchg
cmp
mov
jb
ror
mov
mov
daa
mov
xchg
xchg
and
or
xchg
mov
das
inc
xchg
pop
dec
xchg
push
xchg
mov
xchg
iret
xchg
outsb
mov
repnz
repz
jle
xchg
ja
push
push
xchg
pmaxub
mov
cmp
mov
insl
xchg
xchg
xchg
xchg
xchg
xchg
pop
lret
lret
outsl
leave
nopl
xchg
or
lret
sbb
xor
cmp
push
xchg
lret
lret
lret
lret
pop
xchg
xchg
outsb
xchg
jbe
pop
pop
sarb
incl
xchg
pop
pop
and
mov
pop
lds
pop
sahf
out
sahf
loopne
jmp
repz
and
jns
and
mov
push
es
sub
iret
repz
aaa
or
dec
sahf
outsb
repnz
cvttps2pi
repnz
xor
rorb
in
jp
nop
negl
mov
dec
mov
push
das
mov
mov
popf
nop
stos
iret
fistl
xor
push
add
daa
daa
daa
add
pop
and
pop
ficoms
or
stos
xor
lods
xchg
xor
xor
xchg
xchg
pop
xchg
leave
leave
leave
sub
in
in
hlt
or
in
in
gs
jne
in
sahf
adc
mov
shld
ret
add
lret
aas
rorl
icebp
cmp
xchg
daa
setbe
in
jbe
cmp
pop
in
sahf
out
and
xchg
neg
add
mov
xchg
jae
mov
pop
iret
xlat
jbe
daa
iret
sub
adc
jns
sahf
and
inc
pop
xor
in
in
outsl
emms
push
xor
cmp
lahf
xchg
hlt
in
push
cmp
pop
leave
out
nop
lods
call
insl
xchg
xchg
ja
pushf
scas
out
push
fcoms
cwtl
fnstsw
cwtl
jno
jns
xorl
add
mov
jbe
paddq
ja
and
add
mov
push
pop
push
add
jae
bnd
add
in
repnz
xchg
popf
pop
test
dec
sahf
out
or
cmp
leave
or
fistps
ljmp
add
iret
jae
push
sbb
das
cmp
jae
cmp
inc
push
sbb
repz
pop
sbb
jno
repnz
jl
xchg
pop
popf
test
mov
lods
shlb
mov
jns
mov
lcall
enter
mov
dec
js
inc
push
pop
mov
or
subb
fwait
fwait
es
mov
add
sahf
mov
jmp
xchg
fwait
cmpsl
sahf
out
push
or
mov
rorb
test
jns
push
fmuls
loopne
xchg
out
ficomps
mov
or
adc
and
iret
repz
sbb
sbb
and
out
cmovg
sbb
ja
sbb
sbb
daa
mov
add
psubw
outsl
aas
jae
pop
jnp
test
dec
loope
and
xlat
mov
xchg
mov
mov
mov
jae
adc
jmp
icebp
psubw
popf
or
push
in
push
inc
dec
xchg
leave
leave
inc
jb
outsl
ja
cmp
jg
add
leave
pop
js
popf
fbld
mov
ja
pop
and
add
sahf
ss
xor
fistps
cs
addr16
cmp
xchg
pop
cmp
in
in
jbe
ja
addl
fistl
sub
cmp
in
in
mov
call
push
fsubp
sahf
into
dec
and
jg
mov
lahf
xlat
adc
sbb
roll
fnsave
push
mov
jbe
jb
push
pop
fs
xchg
adc
out
sub
dec
outsb
setg
iret
leave
inc
fwait
insb
xchg
rcr
add
ljmp
fstpl
stos
bound
mov
cmp
insl
xor
inc
dec
push
repnz
iret
add
add
jbe
fbstp
jge
or
or
test
mov
in
in
mov
xchg
add
movsb
jmp
pavgw
in
sti
xchg
add
sbb
cmpsb
aaa
lock
mov
daa
iret
add
inc
mov
imul
inc
mov
sahf
fildl
jg
pop
mov
jns
int3
aaa
or
lock
sbb
jl
mov
mov
push
mov
mov
daa
pop
insl
push
xchg
jo
mov
incl
pop
jo
lret
psraw
sub
add
lret
lret
lret
add
and
mov
dec
mov
pop
pop
mov
mov
xchg
cmpsl
mov
mov
mov
mov
fisubs
jmp
or
xchg
fcmovne
sbb
aas
sbb
xchg
xchg
xchg
xchg
sbb
push
adc
adc
and
out
in
sahf
sub
push
xor
cmp
adc
sub
xor
ja
xor
bound
cmp
repz
cmp
repz
cltd
movsb
aas
scas
inc
cmp
repz
inc
lds
repz
repz
fildl
xchg
idivl
icebp
inc
cld
inc
incb
jns
out
ds
dec
push
dec
push
dec
out
fucom
pop
cmovge
push
repz
xchg
jne
jnp
cmp
push
mov
dec
dec
outsb
daa
ret
fsub
fucom
jns
out
pop
stc
subps
inc
ds
bndldx
xor
arpl
pop
mov
cmpsb
out
sbb
nop
cmpsb
cwtl
cmpsb
mov
jns
test
mov
outsb
pop
shlb
daa
enter
mov
jg
cmpsl
push
cmpsl
mov
cmpsl
push
adc
ja
push
adc
sahf
out
adc
add
jns
in
mov
iret
mov
pop
sbb
xor
hlt
in
push
sbb
jo
jg
cmpsl
or
cmpsl
pop
and
adc
cmpsl
cmpsl
sahf
out
sbb
cmp
in
add
call
or
mov
jp
les
cmpl
push
add
test
leave
repz
add
clts
cmp
cmp
push
dec
popa
fisubrs
adc
test
test
dec
ss
subl
pop
fdivrs
in
add
lock
test
pop
cmp
out
test
xchg
insb
pop
testl
mov
jmp
test
insl
in
dec
test
pop
and
je
xchg
sarb
outsb
mov
xchg
mov
pop
lahf
mov
sahf
out
popf
mov
rolb
or
out
or
or
popf
mov
testl
out
mov
cmp
jns
rorl
inc
dec
cs
sahf
push
gs
sbb
cmp
repz
sbb
movsb
fwait
nopl
cmpsl
iret
cmp
mov
mov
fisttpll
daa
fimuls
jmp
in
enter
or
stos
xchg
int
jg
add
stos
cmp
repz
add
leave
repz
push
fwait
or
iret
loopne
leave
leave
out
fildl
or
add
sbb
cmp
cs
ss
ja
jmp
or
ds
xchg
and
lods
push
lods
iret
repz
popa
pop
movups
jno
iret
repz
jns
adcl
pop
movsb
sahf
out
dec
lods
sbb
dec
movlhps
push
pop
iret
repz
int3
mov
and
loopne
jns
in
and
hlt
xchg
jl
out
es
daa
add
jns
xor
sub
sub
add
xor
lods
pop
movb
das
ds
inc
xchg
push
daa
lock
out
ss
lods
jg
lods
xchg
xchg
push
add
pushf
pushf
cmp
cmpsl
mov
push
out
imul
lods
cmp
repz
or
or
inc
mov
das
bnd
call
sub
inc
lcall
sahf
out
push
add
xchg
jns
out
xchg
add
sahf
out
mov
mov
xchg
enter
or
jle
out
lahf
imulb
incl
scas
or
pop
scas
inc
sbb
jb
scas
sub
inc
cmpsb
xchg
int
call
adc
inc
scas
scas
aas
cmp
sahf
out
add
add
fsubrl
jg
bswap
out
or
fs
sti
push
mov
fwait
sbb
adc
mov
xchg
ja
xor
cmp
cmp
repz
push
or
imul
je
jg
pushf
je
leave
mov
jp
jb
mov
mov
push
pop
xlat
loop
sbb
icebp
jbe
in
sti
clts
mov
adc
out
push
sbb
mov
jns
out
and
dec
and
in
in
movq
and
out
test
xchg
sub
jns
sahf
sub
in
lds
cs
mov
mov
mov
and
les
push
mov
fcompl
dec
or
daa
daa
mov
pop
push
cmp
repz
adc
push
out
cwtl
mov
mov
outsb
mov
test
mov
fmuls
mov
iret
leave
rol
enter
mov
loopne
mov
lret
xchg
push
das
lock
mov
cmp
out
int
or
and
adc
es
ja
and
sub
sub
inc
push
sub
outsb
mov
out
sub
pop
push
in
in
dec
js
orb
nop
mov
ss
or
sub
add
stos
add
adc
rcrl
cltd
insb
inc
add
adc
add
or
xchg
ss
push
sub
fimull
mov
inc
imul
and
scas
pop
inc
push
pusha
cmpsl
mov
dec
aaa
test
sbbb
xchg
add
dec
leave
out
sahf
daa
out
inc
cmp
xor
out
sahf
xor
and
or
cmp
sarl
in
call
iret
repz
aam
int3
sahf
out
iret
enter
mov
in
mov
xor
iret
repz
pusha
push
push
loopne
cmp
dec
inc
sub
or
and
movsb
outsb
add
scas
pop
imull
push
pop
mov
mov
add
repz
sbb
cmp
or
or
sub
or
or
imul
daa
adc
adc
in
movsb
fwait
das
and
fcmovne
inc
push
addr16
das
push
xorps
mov
insb
das
insl
push
and
sbb
push
pop
cmpb
orl
in
jns
pop
xchg
sub
in
movsb
fbld
sbb
add
or
adc
and
in
and
cmp
std
dec
mov
and
adc
jnp
add
add
movsb
add
cmpsb
fisttps
xchg
sub
cmp
cld
inc
jle
test
inc
push
jg
shll
cmovo
pusha
daa
mov
inc
mov
test
mov
sbb
in
call
adc
in
notl
push
ficompl
mov
xor
and
fsubp
stc
jb
jle
and
enter
dec
rcr
adc
pop
rcrl
add
push
fdivr
inc
xor
inc
adc
fiaddl
ficomps
pop
pop
jle
pmovmskb
sub
or
mov
adc
das
aas
sbb
jbe
aas
das
sub
jo
mov
iret
pop
iret
push
dec
repz
or
adc
into
adc
adcb
sbb
sbb
hlt
int
sahf
out
push
sbb
out
pop
push
fmul
mov
das
test
inc
or
js
lret
stc
cmp
cmp
jp
push
cld
dec
out
sbb
cmpsl
inc
push
stos
les
sub
call
aas
or
fcoms
incl
add
fisttps
pop
mov
sub
fsts
or
cwtl
push
jae
push
xchg
cmp
das
push
inc
insl
mov
jg
xor
inc
push
xchg
xor
pop
pop
xlat
push
sbb
push
pop
xor
fisubrs
insl
inc
in
cmpsl
scas
cmp
inc
pop
jg
fcoms
and
inc
pcmpeqb
out
add
roll
add
pop
arpl
push
pop
call
es
mov
rorl
sbb
add
rorl
jecxz
sahf
ss
add
iret
loop
push
xor
cmp
jnp
push
sub
or
ds
repz
lock
sarb
in
push
and
push
or
add
and
test
push
cld
adc
jns
repz
sbb
adc
rcrb
sahf
out
sahf
enter
mov
jns
and
sahf
out
movsb
es
xor
in
pop
clc
mov
nop
jg
movups
imul
dec
dec
jbe
inc
cmp
pop
push
call
mov
out
daa
push
cmp
pop
js
xor
out
mov
repz
xor
insl
add
push
pop
ja
sahf
out
xchg
mov
bnd
jne
testl
add
mov
and
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
add
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
fisttps
dec
les
aas
xchg
les
jne
int
mov
xchg
hlt
fisubs
xchg
cmp
push
mov
xchg
aas
ret
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
and
gs
std
orl
pop
ficomps
frstor
testl
inc
je
inc
inc
push
dec
jnp
sub
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
std
int
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
xlat
lcall
fcompl
shrl
push
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
add
call
mov
add
and
or
lcall
lret
stos
sbb
data16
inc
fdivl
jno
add
aad
inc
cld
decl
mov
push
movsl
in
lahf
xor
mov
js
stc
jg
in
test
xchg
sbb
push
sub
insb
fs
add
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
scas
ljmp
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
pushl
movsb
sti
hlt
shrl
imul
mov
sarb
add
jmp
sbb
or
cmp
add
daa
adc
or
and
pushl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
incl
pop
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
lcall
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
dec
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
jg
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
std
incl
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
pushl
rclb
or
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
addr16
incl
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
cli
jmp
cmpsl
notl
pusha
rorb
imul
push
mov
scas
fcompl
fldenv
filds
aaa
lret
ss
out
pusha
mov
fidivrs
mov
jmp
xchg
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
and
ret
sahf
push
pop
fdivs
js
pop
aaa
mov
pusha
push
int3
add
aad
push
xlat
fcomp
jns
out
fcmovu
ficomps
jecxz
in
jns
out
jmp
out
sahf
out
hlt
cmc
div
out
sahf
clc
stc
cli
sti
cld
sbb
adc
cmpsb
adc
dec
and
or
je
iret
push
lahf
leave
les
push
popf
adc
insb
jbe
inc
mov
dec
mov
insl
bound
inc
push
popa
je
test
push
cltd
out
push
ret
mov
dec
sub
fisttpl
inc
jns
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
jnp
push
pop
xor
popa
push
call
jbe
pop
insb
imul
push
insb
gs
push
dec
mov
add
or
test
rclb
xor
or
fs
insb
and
gs
je
scas
xor
gs
xchg
fsubr
xor
cmp
add
jle
cmp
adc
push
push
adc
shlb
aaa
je
orl
jns
push
mov
jle
dec
insb
pusha
add
and
xchg
cmp
mov
insb
aaa
aas
sbbb
aas
add
notb
or
cltd
and
jae
pop
xor
das
pop
mov
and
les
inc
movl
sbb
inc
pop
fnstcw
jae
inc
inc
inc
add
mov
push
scas
add
stos
cmp
in
inc
int
push
dec
cmp
inc
subb
loop
xor
fs
ja
sbb
pop
inc
outsb
jne
push
pop
in
dec
jge
iret
mov
add
add
mov
arpl
add
addr16
out
push
clc
xchg
into
pop
jo
sti
push
in
insl
jl
cmp
and
aas
jmp
mov
cmp
add
add
push
sbb
sub
sbb
rcll
dec
aam
mov
xchg
lret
mov
rcr
lahf
xchg
out
addb
inc
jb
addr16
pusha
xor
jo
sahf
xchg
lahf
push
outsl
outsl
mov
outsl
pop
in
or
les
push
mov
mov
in
pop
cwtl
sbb
sbb
nop
test
pop
cmp
rcll
arpl
cmp
pop
pop
inc
mov
jo
test
xchg
xchg
lea
lock
outsl
insb
jns
das
push
add
push
xchg
fcoml
gs
inc
outsl
arpl
mov
pmovmskb
dec
mov
inc
push
bound
ja
inc
jbe
stos
jmp
les
movsl
jg
push
dec
xor
sbbb
jecxz
das
arpl
sub
fs
add
orl
jg
push
dec
pop
dec
dec
outsb
mov
arpl
mov
adc
clc
xchg
sub
jo
lods
mov
outsb
rclb
pop
jno
cld
inc
push
inc
dec
pop
bound
outsb
arpl
rcll
pop
fisubrl
int
pusha
in
insl
add
stos
movsl
or
inc
fldcw
fistpl
adc
divl
daa
sub
inc
adc
or
or
push
inc
add
aad
mov
nop
ljmp
xor
add
sbb
fistps
call
jp
mov
repz
mov
mov
xchg
out
fsub
adc
roll
ljmp
clc
lcall
fstl
int
push
sti
mov
call
push
cmp
xlat
fdivrs
ljmp
out
mov
into
std
cmp
or
aaa
sbb
xchg
iret
add
in
jae
clc
inc
std
call
dec
sub
cwtl
mov
push
fldt
rcr
aas
jg
dec
sub
lcall
sahf
addb
cmp
dec
cmpb
dec
xchg
js
push
xchg
ret
adc
mov
cmp
or
arpl
lcall
popf
mov
rclb
and
test
mov
and
fiadds
xchg
lds
mov
fnsave
lcall
mov
mov
push
repnz
scas
jo
ja
fsubs
sbb
adc
or
clc
fistpl
ja
pop
mov
jns
add
lret
cltd
adc
push
nop
test
stos
sti
outsb
cmp
jmp
and
mov
int
xlat
aaa
inc
bound
fucomip
sti
dec
test
mov
push
or
add
lret
jmp
out
sti
push
icebp
sbb
pop
lock
vldmxcsr
imul
call
xchg
je
mov
stos
frstor
fistl
xor
push
jecxz
in
call
lret
daa
push
push
lods
jbe
repnz
adc
ss
jge
loope
imul
jmp
gs
sub
aam
into
mov
dec
inc
in
mov
mov
ljmp
adc
out
jecxz
pop
ffree
sub
jb
mov
mov
rolb
pop
test
rcrb
pushl
cmp
imul
xchg
sti
add
and
push
jg
movsl
sub
sub
lea
call
xchg
xchg
aad
cmp
sub
add
xor
add
add
adc
cmp
stos
xlat
es
stos
ja
bnd
sub
subl
sbb
ljmp
outsl
xchg
mov
test
scas
mov
push
adc
or
in
pop
xor
cld
mov
adc
mov
stos
mov
mov
fwait
mov
inc
je
std
mov
dec
aad
mov
mov
mov
cltd
int
cltd
sbb
sub
mov
shr
inc
lcall
mov
inc
sbb
mov
lcall
pop
push
sbb
ret
pusha
add
fs
es
dec
mov
insb
xchg
dec
sbb
sbbb
jge
cmp
out
mov
or
sarb
stos
adc
xor
adc
lcall
add
and
and
jle
lret
dec
cmpsl
push
fbstp
fldenv
inc
mov
inc
incl
scas
lods
dec
dec
xor
dec
mov
stc
dec
pop
mov
jnp
or
sbb
ljmp
mov
and
clc
cmp
hlt
ss
jae
push
pop
xchg
xor
and
stos
stos
cmc
arpl
or
ljmp
pop
or
mov
fnstcw
aad
cmp
hlt
decl
testl
xchg
jbe
jmp
pop
fcompl
popf
xor
xor
sahf
aad
mul
jns
mov
mov
mov
call
call
sub
iret
cli
loop
aam
addr16
gs
test
inc
mov
dec
shl
inc
lcall
jecxz
adc
into
cmp
mov
mov
test
mov
es
sbb
mov
inc
sbb
inc
adc
push
scas
or
or
push
mov
out
cmp
cltd
out
cltd
hlt
add
cmp
push
jmp
test
hlt
mov
jp
pushf
add
jle
jle
inc
ja
sti
rcll
mov
out
cwtl
add
cmp
or
fcmovne
in
sub
nop
cmp
out
pop
jno
push
arpl
rorl
push
xor
loopne
or
jmp
mov
inc
push
popa
pushf
xor
push
xchg
das
mov
jnp
incl
leave
test
xchg
push
lds
adc
aas
mov
pop
test
jmp
insl
adc
xchg
lock
inc
jle
cmp
and
mov
mov
call
inc
ja
cs
nop
lods
jp
cmp
or
movsb
and
push
les
add
incl
lods
aam
cmc
ret
fnstcw
or
mov
cmpsl
mov
daa
lock
push
inc
in
pusha
inc
leave
mov
push
negl
pop
lods
jmp
jge
iret
dec
mov
xchg
daa
xlat
rcll
es
lcall
inc
movsb
inc
out
es
jo
add
lcall
incl
or
jp
in
mov
pop
fnstenv
mov
inc
cmc
mov
imul
decl
rorl
flds
pop
nop
fwait
push
push
push
pop
add
push
and
lcall
hlt
add
aad
addr16
mov
adc
sbb
inc
loop
mov
mov
dec
lcall
loop,pn
cvttps2pi
lods
rclb
dec
jae
js
push
insl
or
adc
mov
lcall
and
out
pop
dec
sub
mov
call
sub
aam
mov
jnp
ja
jmp
adc
aad
lcall
stc
outsb
shl
pop
sub
mov
decl
mov
jmp
je
insb
sbb
stos
mov
loopne
popf
int3
adc
jno
mov
decl
repnz
fistpll
mov
out
ja
xor
rcr
or
sarb
mov
mov
sub
add
push
lret
sbb
loope
push
fisttps
or
mov
stos
mov
into
repnz
idivb
test
pop
jg
call
jns
fldenv
iret
insl
push
inc
jnp
sbb
cld
jmp
lcall
jg
incl
dec
cltd
movsb
pop
jo
dec
dec
fisubs
jmp
aam
mov
orl
js
ss
mov
adc
mov
outsl
mov
icebp
lahf
daa
push
sbb
fists
push
ljmp
and
sbb
movsb
sti
js
mov
and
sub
jo
sub
call
stc
into
and
loop
jl
loop
push
xchg
cld
ljmp
es
arpl
sub
rolb
sbb
pop
cld
add
pop
push
out
xchg
cs
xlat
xor
clc
imul
lcall
xchg
jae
imul
push
leave
sub
stos
mov
push
decl
inc
push
push
dec
pop
fisubs
insb
inc
pop
outsb
popa
aam
adc
xchg
xor
cmp
xchg
cmp
movsb
pop
fsts
in
xor
in
test
mov
and
cwtl
dec
add
mov
xchg
jp
sbb
dec
fwait
pop
ljmp
sahf
clc
pushl
push
pop
dec
enter
fmull
cli
mov
sbb
jecxz
ljmp
add
ss
shll
int3
adc
add
inc
fs
addr16
clc
jmp
ljmp
in
push
cld
mov
mov
dec
out
subl
fstpl
sti
jmp
push
fistpll
adc
mov
lods
xchg
fistl
fldcw
mov
dec
mov
out
adc
cmp
cwtl
in
mov
lds
dec
mov
push
lds
lock
in
sbb
dec
mov
jmp
leave
sti
push
add
xor
jns
dec
inc
repnz
arpl
push
inc
insb
xchg
icebp
decl
xchg
add
or
dec
cmc
lret
cli
push
inc
pop
loopne
sti
xor
fiaddl
cmp
pop
lods
sbb
fwait
cmp
xchg
sub
repz
shr
add
std
adc
sahf
ja
incl
stos
pop
mov
lods
es
cmpsb
clc
enter
mov
push
add
fwait
dec
mov
popa
or
and
out
push
dec
faddl
mov
xchg
sbb
mov
mov
ret
pop
or
stos
pop
push
sub
in
loope
and
into
jmp
subb
sahf
mov
arpl
sar
mov
pop
pop
cmc
clc
pop
addl
in
push
mov
inc
mov
and
add
rclb
je
gs
call
stos
push
jl
add
mov
stos
jns
xor
jg
cltd
in
mov
xor
or
in
cmp
push
jbe
mov
ljmp
shr
or
fnstenv
imul
add
lods
jne
bound
xchg
icebp
aad
xchg
cmpb
imul
int
std
xchg
je
push
push
push
enter
pop
jecxz
push
cwtl
jae
fistpl
call
int3
add
adc
add
and
loopne
push
cmpsb
dec
adc
cld
adc
lcall
pushl
inc
and
das
dec
ljmp
xchg
jbe
sbb
sub
cli
lahf
sbb
imul
jo
push
aaa
int3
cld
cmpsb
cmpl
cli
cmp
imul
jb
outsl
clc
incl
push
mov
lds
add
jbe
lds
outsl
xchg
cmpsb
mov
or
aaa
sbb
out
xchg
pop
cld
incl
scas
add
mov
xor
mov
push
inc
fmulp
jecxz
je
and
incl
mov
ss
dec
insl
rcrl
ucomiss
mov
jle
data16
call
test
dec
push
outsb
bound
das
sub
test
ret
pminsw
cli
das
les
adc
and
lds
jmp
daa
hlt
data16
lret
iret
xchg
sbb
ljmp
enter
inc
sbb
push
inc
xchg
adc
sti
mov
js
jp
and
jbe
add
pushl
aad
jno
lods
repz
pop
push
popf
mov
cwtl
sbb
fadds
sbb
push
movsb
test
xchg
xor
stos
xor
dec
cli
jmp
add
cmp
cmc
loopne
fisttpll
push
pushl
xchg
popa
nop
or
jnp
pop
pop
push
mov
mov
pop
incl
jg
cmp
lods
fs
lods
lock
aam
add
call
lret
sti
mov
mov
lods
test
shlb
pop
lds
mov
xor
xor
decl
push
mov
add
sbb
loop
push
repz
xorb
aad
cmpb
mov
ret
mov
cmp
les
arpl
andl
jns
jno
inc
cmp
jmp
add
push
data16
ret
insb
fimull
mov
imul
jmp
cmp
pop
shlb
adc
test
decl
pop
repnz
adc
clc
lock
mov
mov
xchg
shlb
jmp
sub
lret
aas
test
xchg
pop
cmp
aad
sub
test
leave
rol
adcb
pushl
incl
shlb
pusha
sub
rolb
mov
inc
pop
les
imul
inc
hlt
sub
dec
dec
mov
xor
sub
sbb
movsl
fs
into
inc
shll
sbb
jg
cmc
mov
inc
or
mov
int3
cmp
rorl
enter
das
rcl
or
xor
dec
cld
sub
fldt
cmp
je
shll
inc
rorl
pop
aam
outsl
sub
and
cmc
and
out
jno
ljmp
jmp
cwtl
lret
movl
addr16
mov
loopne
loope
into
push
fisttpll
lcall
xchg
mov
lret
or
and
sub
inc
cmp
cli
mov
test
mov
les
out
clc
call
aam
inc
ja
les
pop
bound
gs
jno
mov
xchg
insb
or
outsb
incl
cld
push
jl
cltd
mov
and
and
fisttps
lret
repnz
rcrl
pushl
aam
sti
mov
adcb
mov
or
into
jne
mov
dec
idiv
ljmp
push
sbb
repnz
clc
scas
movsb
mov
sub
inc
inc
inc
inc
dec
push
ja
jmp
inc
mov
xchg
das
lcall
cli
sbb
repnz
pop
sbb
idivb
xlat
test
out
cmpsl
inc
sbb
sarl
test
pop
incl
fldpi
xor
bound
ret
scas
jb
rcll
jg
inc
xchg
mov
movsb
std
popf
insl
and
cld
mov
test
add
mov
insl
loopne
xchg
clc
cwtl
lcall
mov
adc
lods
rol
stos
mull
shrb
jmp
imul
incl
lcall
push
call
mov
decb
cmp
mov
push
or
jle
pushl
mov
push
cld
inc
mov
pop
mov
mov
inc
setl
lcall
sub
inc
dec
popa
add
xlat
push
push
or
call
cltd
das
and
aad
decl
cmpsb
jae
adc
and
adc
scas
or
inc
mov
aad
dec
in
xlat
insb
and
iret
and
ljmp
jnp
cmc
stos
js
sbb
jae
xor
jmp
sub
push
cli
inc
adcl
xor
or
mov
in
xlat
xchg
out
jp
out
aas
mov
lcall
arpl
daa
nop
shll
js
lods
mov
dec
cmp
mov
rclb
cs
add
dec
jae
mov
aaa
push
pushl
cmp
mov
lea
and
jmp
inc
inc
out
and
xor
adc
mov
pop
add
mov
push
incl
sbb
iret
mov
in
mov
xor
out
adc
sahf
cwtl
xchg
push
decl
loopne
lahf
dec
iret
inc
movzwl
in
idiv
incl
mov
xor
pop
insl
jnp
mov
cmp
stc
mov
cmp
sbb
jg
es
imull
int
stos
fstpt
xor
fs
ja
sahf
or
fisttps
dec
dec
fidivl
lods
adc
pop
adc
cli
call
sbb
cmp
xchg
lret
das
xchg
jne
roll
dec
lret
push
xchg
out
stos
mov
mov
jne
jmp
pop
mov
adc
mov
jmp
das
orl
stos
nop
pushf
les
loop
cs
sub
call
xchg
jecxz
cmp
mov
or
add
ja
mov
mov
sarl
pop
dec
sbb
aam
inc
leave
inc
enter
fs
push
and
repnz
inc
mov
cmpsb
incl
in
popf
and
lret
into
mov
pop
inc
inc
jbe
sub
adc
decl
pusha
das
lods
push
fnstsw
lcall
add
dec
clc
cli
adc
pusha
pop
xor
jmp
jl
rcr
pop
cmp
pop
addr16
test
lds
nop
orl
sub
xlat
cmpsb
fdivrs
pop
stos
jmp
ret
add
lret
movsb
cmp
xor
sahf
ret
jge
fildll
sbb
into
orb
decl
xchg
ljmp
adc
mov
push
jno
push
mov
or
mov
pushl
inc
jge
lds
fwait
xor
popl
punpckhbw
sub
inc
jae
xchg
push
fdivp
pushl
push
pop
pop
insb
aad
mov
jnp
rorl
rcrb
pop
cmc
pop
fiaddl
inc
stos
inc
les
push
jle
test
xchg
xchg
push
mov
mov
mov
mov
mov
leave
daa
mov
sbb
in
ret
jmp
data16
push
xor
inc
outsb
push
jb
pop
nop
xchg
sub
add
jbe
inc
inc
ja
fcomip
pop
sub
inc
mov
jge
daa
push
pushl
sub
in
push
mov
cmp
arpl
and
inc
out
or
pushf
lods
push
stc
lcall
push
incl
inc
or
sbb
cmp
and
shrl
lcall
pop
xchg
adc
sub
out
and
xchg
sbb
sbb
and
in
pop
sub
add
decl
test
sub
outsl
imul
jg
jle
mov
jmp
fildl
gs
mov
add
sbb
dec
lds
fisttps
inc
pop
repnz
movsl
and
jne
and
sarb
ljmp
push
ss
insb
ret
jl
xchg
inc
scas
pop
les
mov
lahf
and
loopne
push
xchg
lcall
mov
fucomi
outsl
in
dec
ljmp
sti
jno
push
sub
movsb
and
jmp
and
adc
push
xor
mov
popf
jle
mov
xor
mov
repnz
jp,pt
aas
imul
mov
outsl
popl
jmp
push
rclb
clc
jmp
mov
push
and
pop
add
popa
adc
pop
sbb
ljmp
pop
scas
stc
dec
xor
cmp
aaa
dec
or
push
int3
mov
push
mov
pop
dec
push
xor
rol
mulb
sti
inc
stos
pop
rorl
cmp
dec
sub
lds
std
dec
adc
mov
incl
cmp
inc
adc
sub
xorl
icebp
pop
push
push
xor
loope
add
mov
test
push
xchg
fimull
mov
jne
data16
scas
lea
pusha
pop
xchg
out
gs
popf
clc
pushl
jg
rolb
mov
jge
inc
xor
sbb
xchg
fnstenv
decl
dec
xor
lcall
mov
outsl
add
push
mov
sbb
xor
inc
dec
stc
add
or
pop
xchg
add
je
xchg
add
lahf
out
stos
rcl
outsl
lret
movsb
mov
or
add
sub
sahf
stos
cmp
push
mov
inc
push
iret
add
mov
sbbl
ljmp
aas
or
lds
cmpsb
sbb
in
jp
movsb
inc
sbb
mov
mov
or
je
leave
mov
sbb
ja
std
and
cmp
loopne
inc
ja
and
fcoms
xor
sub
cltd
roll
sbb
decb
add
aas
rcll
jle
add
test
or
and
add
mov
leave
das
cli
ljmp
shlb
std
push
imul
insb
push
push
dec
shlb
sbb
sbb
ljmp
xchg
sbb
xchg
out
pop
mov
mov
push
jle
xor
decl
or
je
xchg
test
push
ljmp
popa
test
jp
dec
ret
call
cld
cmp
push
leave
push
and
in
gs
add
dec
out
sbb
jg
or
cmp
ret
xor
out
inc
or
xor
mov
mov
leavew
andb
pop
in
fstps
ret
xor
orb
cmc
es
mov
lahf
xor
dec
xlat
loop
adc
sub
mov
pusha
and
clc
xchg
addb
mov
decl
inc
repz
adc
mov
or
dec
pushf
mov
or
cmp
decl
fcomps
add
sbb
daa
lea
fnsave
jb
inc
jae
push
sti
shll
pop
adc
cmpsb
cmp
into
jae
mov
aam
or
pushl
mov
pop
dec
xchg
xor
test
test
loop
mov
push
xorb
das
adc
or
lock
cli
in
dec
aas
jge
xchg
fbstp
fs
jmp
icebp
xchg
push
enter
cli
call
das
adc
sbbb
and
je
sbb
addl
outsl
aam
push
int3
lret
push
lcall
insl
sub
mov
incl
xchg
out
ret
mov
add
lahf
test
in
dec
sarb
nop
xor
lcall
adc
repz
mov
pop
lea
cmc
jno
addr16
mov
mov
sub
incl
mov
xchg
jle
sti
arpl
jae
jmp
das
jecxz
dec
and
dec
mov
fstpt
outsl
sbb
nop
std
xchg
mov
push
out
aad
cmp
jmp
sbbl
add
sbb
adcb
out
pop
cmp
fidivs
in
in
push
int
lahf
xchg
sub
pop
push
in
cmp
dec
insl
cmp
jb
sbb
aas
shll
sub
xchg
dec
cmpsb
sbb
ds
xchg
xchg
movsb
mov
stos
les
ljmp
cs
adc
aam
clc
lds
xchg
mov
ljmp
jmp
dec
push
ret
inc
add
mov
icebp
loop
xchg
mov
sbb
mov
aad
jmp
and
enter
aad
and
cmc
or
sbb
xor
stc
dec
fwait
int3
push
cmp
push
lret
add
jp
mov
call
push
addl
aas
std
push
adc
push
std
cmp
into
push
cmp
pop
ss
mov
daa
mov
push
out
cmp
fldt
and
std
sbb
pop
loopne
dec
mov
mov
addr16
inc
and
or
lahf
addr16
fwait
sbb
cli
cli
inc
lret
orb
adc
mov
jmp
stos
test
ja
mov
es
mov
fdivs
jmp
adc
je
fldl
mov
jl
sbb
in
pushl
xchg
xchg
into
test
cmp
dec
aad
mov
fdivr
sub
dec
sub
push
idivb
jnp
and
call
push
dec
jle
outsl
rcrl
sub
rcrb
push
and
pop
fdivl
repnz
std
test
sub
mov
jo
jecxz
inc
scas
cmp
std
aad
loopne
rolb
outsl
mov
sbb
dec
cmp
and
jg
mov
cmp
xchg
pop
and
shl
cmpsl
iret
mov
call
or
xchg
mov
sub
loopne
loope
xlat
xchg
xchg
decb
xchg
stos
jmp
jecxz
loopne
push
cmp
push
xlat
test
sub
cmpsl
xchg
push
cmp
out
clc
popa
dec
jl
icebp
pushf
test
pop
push
aad
adc
xchg
cwtl
movsl
and
ret
repz
int3
cmpsb
ljmp
addr16
sbb
dec
js
and
lods
loope
loop
sbb
pop
fadd
mov
call
imul
lea
push
ret
or
ds
jge
push
arpl
push
jns
sub
pop
add
adc
das
push
mov
mov
ss
cs
sbb
popf
mov
repz
decl
dec
and
mov
or
push
add
imul
sti
decl
xor
cmp
lret
pop
and
out
adc
das
nop
dec
in
cltd
pop
dec
call
pop
xlat
mov
ret
mov
mov
in
cmp
pop
or
jno
hlt
jl
push
subl
or
and
jne
dec
mov
loope
fsts
sub
iret
adc
lret
push
push
sahf
sub
sbb
or
cmp
push
stos
jmp
test
mov
call
jne
push
jp
sti
inc
push
and
add
gs
out
xchg
dec
iret
cli
xchg
dec
pop
pop
xchg
in
fnstenv
pop
mov
push
push
je
mov
rol
fidivl
mov
lcall
test
aad
mov
sti
sbb
push
push
cmp
push
mov
rcrl
loope
jg
inc
cmp
push
mov
test
in
dec
lock
or
xor
add
mov
in
test
into
pop
xchg
cmp
loop
rol
lods
addl
nop
andl
cld
roll
inc
mov
lcall
movsl
aaa
mov
or
jmp
mov
add
in
push
pushf
cmp
xchg
movsb
call
ret
fnsave
jo
fcmovne
mov
notl
repz
fmuls
cmp
call
inc
cmp
pop
das
jle
jae
aas
xor
jnp
inc
xchg
je
fdivrl
mov
ljmp
cmpsl
pop
push
subl
mov
mov
loop
fs
incl
ret
out
daa
xchg
adc
mov
adc
jmp
daa
pop
mov
mov
mov
and
test
roll
ljmp
outsl
fstl
adc
cmp
push
scas
shl
enter
sbb
js
sbb
sbb
in
and
pop
and
ja
sub
ss
xor
mov
dec
decl
ret
jns
call
add
mov
mov
mov
es
test
jns
mov
scas
int
xchg
mov
xor
sbbb
pushf
nop
xchg
test
incl
test
out
cmpsl
clc
popf
adc
sub
push
or
gs
fmull
std
push
outsl
xor
imul
popa
mov
pop
mov
fsts
pop
sti
call
pop
adc
popa
xor
and
inc
or
mov
jmp
add
xor
push
fbstp
dec
outsl
outsl
mov
fstpl
lea
in
jge
clc
push
pop
add
call
test
mov
inc
jbe
leave
push
lods
shlb
sti
push
daa
rol
cmpsb
add
call
decl
aam
repz
pop
dec
xchg
out
jbe
dec
pop
repz
stos
xchg
pop
mov
fcomip
lcall
faddl
jmp
push
fdivrs
mov
cmc
dec
inc
stos
mov
jns
mov
shrb
stc
push
lret
sbb
xchg
cld
jmp
dec
lahf
mov
add
mov
mov
inc
ror
sub
mov
das
test
aas
arpl
cli
rclb
mov
sahf
mov
xchg
subl
jg
cld
and
test
mov
ja
cmpsb
cld
mov
cmp
push
xlat
or
popa
push
pop
loop
outsl
push
and
rolb
dec
lods
lods
incl
xchg
rorb
xchg
jnp
jno
sub
test
inc
or
dec
fs
jp
pop
pop
test
push
fcom
call
lcall
fcom
jns
cmc
push
fwait
add
mov
and
cmp
xchg
popf
iret
hlt
xchg
fidivrs
filds
shrl
sbb
pop
clc
sbb
xchg
nop
movsb
out
mov
filds
xor
inc
inc
mov
adc
jp
es
shrl
xchg
fmuls
rorb
and
mov
decl
shlb
das
push
pushf
mov
test
mov
cli
jecxz
lock
jmp
xchg
mov
mov
cli
mov
imul
mov
cwtl
pop
lcall
sbb
addr16
push
into
pop
jmp
mov
fidivrl
enter
das
xor
push
lahf
shr
pop
scas
inc
aaa
cwtl
lcall
jge
stc
lods
jecxz
mov
lcall
push
fsubs
mov
fidivrs
scas
fsub
cltd
lcall
push
iret
jb
imul
stos
cmp
stc
hlt
bound
rorb
movsb
aam
inc
ljmp
clc
jne
pmaxsw
lret
out
cmpsl
pop
jl
jl
xchg
xchg
dec
pop
cmpsb
andb
xor
jl
fsubs
ret
ja
fimuls
repz
jle
test
mov
stos
cwtl
mov
in
add
inc
sub
mov
ja
cli
mov
ljmp
xchg
rcrl
fwait
outsb
lods
adc
mov
test
sub
call
sbb
or
adc
loopne
dec
in
xchg
mov
ret
pop
ljmp
mov
lahf
and
in
addr16
lock
xchg
out
imul
jmp
add
pop
mov
inc
mov
aam
jge
test
incb
or
jmp
inc
fstpt
imul
dec
popa
mov
fidivs
push
rsqrtps
mov
decl
cmc
mov
and
or
pushf
out
jecxz
push
adc
scas
inc
scas
sub
in
pop
or
inc
push
jno
xor
or
shr
shlb
and
pop
out
or
mov
js
cs
cs
add
dec
inc
push
in
inc
adc
dec
jnp
cmp
xchg
jg
inc
push
xor
dec
sahf
out
lds
sbbl
pushl
and
or
sbb
jbe
pusha
es
repz
popf
pushl
cld
or
xchg
cmp
in
rolb
mov
cmp
or
push
jb
push
incl
sbb
add
mov
jb
mov
sbb
lds
ljmp
jno
inc
out
push
imul
xchg
bound
mov
and
out
jo
sub
lods
mov
mov
push
fdivrl
imul
jmp
ret
test
imul
cld
ljmp
cli
vmptrst
stos
fs
push
mov
sbb
add
xchg
adc
stc
mov
cli
xor
outsb
mov
inc
test
test
cli
sti
and
pop
inc
call
inc
add
bound
leave
outsl
fwait
ljmp
sbb
adc
xorb
sbb
xor
jg
call
jae
stos
jnp
arpl
fidivrs
and
dec
dec
xchg
aad
jmp
loope
ljmp
loope
mov
test
pop
movsb
fadds
xorl
pop
jg
dec
jmp
jge
push
cmp
outsb
cmp
sub
aad
fistpll
mov
lcall
outsl
mov
mov
repnz
push
repnz
mov
mov
cmp
lods
and
fs
jne
or
out
mov
ja
fnsave
lcall
mov
jbe
out
pop
fwait
jecxz
mov
imul
ds
fcomps
flds
mov
cmp
lcall
lret
fwait
out
cmp
jbe
jg
pusha
push
xchg
clc
sahf
inc
mov
jle
outsb
loop
xchg
and
adc
pop
je
lea
hlt
negb
jg
nop
or
dec
bound
ret
xor
cli
pop
pop
xchg
mov
testl
jmp
cmp
xchg
mov
xchg
mov
stos
popf
dec
lds
into
push
cwtl
push
mov
stos
bound
jmp
sub
jo
int
stos
and
xchg
lods
jmp
jno
out
in
arpl
inc
fcos
ljmp
fmulp
cli
inc
xor
in
out
stc
clc
push
pushl
shll
inc
push
mov
mov
cmpsl
push
pop
mov
shrb
cmpb
mov
arpl
dec
cmp
hlt
push
lock
mov
repnz
iret
sbb
mov
jmp
mov
test
mov
xor
je
adc
iret
push
test
sub
jno
pop
icebp
stc
fbld
dec
mov
aaa
pop
jo
sub
push
mov
push
add
pop
xor
cmp
inc
cmp
cmp
push
fwait
sub
add
bound
outsl
add
pushl
adc
xchg
dec
jno
in
in
or
push
and
add
pop
in
stc
jns
mov
cli
push
mov
mov
icebp
aad
push
adc
push
pop
push
in
push
and
dec
and
xchg
adc
insl
rorb
pop
lahf
cs
idivl
pop
xor
and
out
cmp
fs
int3
arpl
jbe
bound
lds
or
loopne
cmc
in
pop
jecxz
pusha
pop
cld
daa
and
fdivl
ja
jg
call
decl
lods
loope
outsb
stos
adc
xchg
cli
iret
out
repnz
fsubrl
incl
stos
add
mov
stos
and
sarl
push
inc
lock
js
and
rcl
add
pusha
call
in
outsb
adc
stc
xor
lcall
js
imul
dec
cmp
cmp
jne
jl
movsb
fwait
mov
mov
lock
into
hlt
movb
xchg
pop
jl
push
xchg
jmp
inc
decl
jp
arpl
out
std
inc
adc
fsub
mov
out
repnz
mov
decl
imul
xor
inc
addl
outsl
insb
adc
pushf
std
pushl
xlat
mov
aaa
cmp
xchg
sbb
or
out
sbb
hlt
andb
imul
pop
or
mov
mov
mov
sar
sub
sub
cmp
and
sti
sbbb
or
mov
jg
adc
or
mov
call
ds
leave
jmp
and
jge
cmpsl
cmp
out
ret
mov
sub
mov
dec
movsl
stos
mov
pop
lods
scas
addr16
jg
lcall
mov
pop
fcompl
pop
pop
scas
out
xchg
or
mov
adc
mov
push
add
adc
pusha
jecxz
dec
or
test
ja
push
xor
push
scas
inc
or
dec
or
out
jl
add
iret
mov
lcall
adcb
and
pushl
jno
mov
xchg
lret
insl
mov
ss
stc
xchg
xor
ret
roll
jmp
ljmp
mov
fmull
mov
sub
je
or
lods
push
pop
hlt
out
mov
lods
inc
xor
sub
mov
dec
bnd
f2xm1
jp
bound
mov
push
iret
fldl
inc
push
imul
mov
cld
decl
sbb
mov
inc
test
jg
ds
adc
daa
cmp
aam
decl
adc
mov
jns
das
or
dec
decl
in
popa
daa
xchg
je
filds
call
mov
in
jp
test
xchg
movsb
mov
lret
add
test
lods
test
xor
sahf
xor
dec
in
jg
jg
es
inc
das
divb
out
mov
pop
popf
in
out
and
arpl
incl
push
mov
movsb
jp
mov
in
mov
inc
xchg
xchg
movl
and
aas
cs
or
insl
pop
lret
jb
ss
sub
jo
push
popf
movmskps
clc
jmp
sub
jge
jae
jae
nop
shll
in
int
push
mov
add
ja
jg
and
ljmp
jmp
jae
push
lret
mov
pop
sti
add
push
lods
xchg
scas
mov
inc
jmp
mov
and
push
sub
pushf
jl
jne
cmpsb
xchg
xchg
inc
shr
fldcw
push
push
decl
add
imul
xchg
inc
push
cmpb
xlat
ror
sub
leave
sub
js
lcall
and
fnsave
mov
jl
and
sub
mov
hlt
push
dec
stos
addr16
fimull
jl
icebp
aam
mov
or
decl
outsl
inc
jmp
dec
cmp
dec
pop
pop
push
ror
xor
mov
decl
pusha
imul
fcomp
and
repnz
and
stos
insb
cltd
xchg
push
aas
xchg
add
add
jmp
mov
cmp
push
loope
push
out
sbbl
ljmp
insb
test
or
adc
mov
add
xchg
adc
ficomps
incl
in
jno
adc
or
fldlg2
or
imul
cs
jecxz
pushl
push
add
sti
push
push
data16
insl
cmpsl
inc
mov
add
lcall
movsl
xchg
jne
insb
and
adc
pop
inc
or
pop
and
repz
or
in
dec
pushf
popfw
adc
inc
daa
mov
lcall
dec
jb
cli
int
sarl
mov
popa
dec
leave
stc
push
jnp
mov
mov
sbb
shlb
sbb
cmpsl
sbb
das
push
movsb
lcall
jp
dec
aad
sub
faddl
jns
push
incb
or
mov
jge
fisttpll
and
dec
movsl
notb
inc
test
xlat
xchg
out
addb
js
adc
js
daa
sub
push
and
leave
decl
leave
cmc
mov
rol
cld
adc
and
es
push
adc
and
fdivr
mov
incl
mov
fwait
xor
lret
xorb
cmp
or
and
ljmp
pop
repz
andl
push
mov
test
incl
sbb
mov
pop
ret
and
add
xor
aad
test
adc
push
pushl
lods
rorb
adc
aad
fistpl
xchg
in
inc
out
test
dec
insl
movsl
cwtl
jge
cwtl
push
scas
sbb
mov
adc
insb
push
sarl
nop
and
xchg
loop
ficoms
in
sti
inc
cld
lcall
test
sarb
jp
add
faddp
ljmp
test
dec
adc
inc
jg
add
xchg
hlt
add
bsf
xor
pushl
or
into
push
inc
lds
jb
xor
pop
xchg
out
fnsave
lret
mov
out
push
mov
and
out
cmpsl
push
xor
fstpt
jmp
mov
mov
jmp
inc
pusha
andl
inc
inc
lcall
scas
add
mov
loopne
jecxz
xchg
jp
stos
out
fldenv
lret
in
aas
shl
sub
fdivp
dec
sbbl
adc
fwait
insl
jo
into
outsl
mov
cmp
mov
or
dec
mov
mov
inc
popa
mov
push
jle
pop
jno
daa
filds
jnp
add
pop
stos
gs
jmp
mov
cmpsl
lods
lcall
mov
push
mov
xor
jmp
icebp
jg
lcall
pop
fs
adc
cmpsb
sarl
testb
dec
fcomps
adc
jmp
add
popa
imul
icebp
mov
pop
repnz
adc
test
ljmp
sub
shlb
push
imul
sbb
push
hlt
icebp
push
push
aaa
add
adc
icebp
movsb
push
mov
adc
jo
sub
jmp
call
mov
and
in
movsl
les
ljmp
or
ret
push
jecxz
push
jmp
pop
cmp
mov
cltd
mov
mov
out
pop
lods
pop
mov
data16
cmp
ret
sub
adc
inc
jle
mov
mov
nop
out
sbb
xchg
pushl
outsl
adc
repnz
fildl
lock
cmp
adc
rorl
movsb
ljmp
jns
sub
jbe
xchg
xor
mov
cwtl
lods
cltd
fisttpl
fisubrl
xchg
push
inc
in
loop
loopne
lret
xorb
mov
repz
movsl
sub
sbb
jbe
sbb
lahf
sub
cmp
xchg
and
push
in
and
add
jb
test
xor
arpl
adc
incl
jb
jae
pushf
inc
xchg
or
xor
lods
popf
mov
mov
pushf
sub
clc
scas
xchg
mov
xor
sarb
or
loope
call
test
in
stos
fcoml
lcall
lret
or
xor
jns
mov
ret
or
xor
dec
mov
pop
das
icebp
loop
popa
cmp
cltd
push
xor
push
dec
add
mov
lcall
cmp
cmpsb
call
mov
in
xor
pushf
inc
mov
mov
jg
pusha
jb
pop
mov
xor
push
jg
adc
test
fsubs
sbb
add
xor
cmp
leave
sub
mulb
xchg
lcall
ss
xchg
pop
cmpsb
rclb
mov
lcall
dec
and
icebp
xchg
pop
pusha
popa
call
call
jns
fs
stos
jg
cmp
sub
hlt
and
add
xchg
lods
or
push
mov
cli
fsubl
hlt
sbb
lahf
mov
popf
cltd
ljmp
daa
mov
shl
imul
cmp
fbld
lods
leave
inc
cmpsl
subb
mov
pop
push
mul
out
pushl
fisttps
mov
lea
mov
jne
iret
daa
pop
add
dec
push
jge
pop
xlat
cmp
ljmp
jae
or
flds
shlb
call
in
inc
roll
inc
leave
xchg
rorb
in
pop
clc
push
aad
out
sahf
mov
in
loopne
ja
sub
jg
sub
ljmp
leave
or
mov
sti
fwait
dec
push
sbb
xor
sahf
gs
xchg
adc
sbb
cltd
pop
cltd
fdecstp
xor
ret
jnp
lcall
stc
mov
dec
mov
fisubs
push
mov
fldl
test
inc
sbb
ljmp
test
cmp
das
cli
in
aas
iret
jae
cltd
ret
cmp
jae
outsl
adc
mov
add
pusha
add
mulb
adc
and
lcall
mov
fs
sub
lds
addr16
scas
jo
iret
and
cli
incl
comiss
dec
mov
out
cmp
iret
nop
inc
stos
ljmp
xor
cmp
pusha
cmp
imul
std
jno
test
adc
fcomip
fmul
jge
xchg
cmc
mov
cmp
inc
inc
mov
call
in
hlt
test
lock
outsl
in
js
sub
sub
jp
decl
ja
pop
mov
cmp
jns
inc
ss
enter
lret
xchg
adc
cli
mov
shlb
jb
mov
cmpl
mov
and
out
mov
xor
inc
das
outsb
jp
out
jmp
out
cli
lods
adc
xchg
cmp
aad
push
or
mov
mov
test
pop
xchg
in
mov
inc
jo
jne
sub
jo
jno
add
and
push
mov
fsubrp
aam
in
mov
dec
into
into
pop
sbb
sub
cmp
dec
scas
roll
sub
aad
lcall
out
out
mov
sbb
cltd
lock
jge
ret
mov
fldl
hlt
push
out
jns
jb
ffreep
rcll
popa
jae
jo
imul
call
sub
or
xor
movl
out
outsb
mov
jne
mov
push
mov
xor
jb
dec
scas
aam
xchg
and
pushf
rcrl
into
xchg
push
pop
push
test
mov
call
pop
loope
inc
daa
inc
mov
jecxz
ja
sub
rorl
clc
push
fdivrl
xlat
lock
xor
decl
jno
movsl
sbb
in
ja
in
test
lea
dec
push
push
aaa
std
ljmp
shrb
stos
push
ficoms
or
loop
decl
push
sbb
inc
mov
mov
in
push
mov
mov
cs
mov
sti
ss
shl
add
adc
pusha
cld
mov
xchg
or
xchg
lcall
jne
push
pop
jl
mov
divw
pop
mov
int
movsb
sbbb
call
lea
jle
sub
add
mov
sbb
push
popa
jne
dec
lret
ja
data16
call
jmp
jmp
dec
cmp
mov
outsl
or
cmp
cltd
xchg
push
lcall
or
arpl
leave
ror
and
test
and
rcrl
pusha
mov
xchg
das
fcomip
call
ja
sub
and
repnz
mov
xor
mov
mov
incl
mov
xchg
hlt
push
test
mov
mov
pop
dec
cmpsl
aaa
cmp
jmp
stc
cli
lea
push
sub
adc
push
and
stc
sbb
in
aas
mov
jmp
outsl
clc
mov
sbb
cmp
push
mov
ret
sub
sub
out
pushf
adc
mov
aad
or
std
add
push
push
cmp
test
addb
clc
jmp
xchg
in
fdivl
push
subb
push
jo
repnz
jne
pop
xchg
add
mov
lock
sahf
push
cmp
adc
mov
lcall
mov
lret
push
jbe
jb
outsb
sbbl
test
stc
test
cli
dec
les
icebp
add
fadd
scas
sub
sbb
std
jb
in
mov
std
jbe
inc
sbb
cmp
lds
xor
outsl
and
gs
aam
mov
sub
dec
mov
xchg
popa
push
xchg
mov
lods
cld
dec
adc
std
pop
jg
adc
fcomip
mov
pop
lahf
pop
mov
fcmovb
xor
jl
and
ret
jle
incl
int
dec
test
fdivp
hlt
xchg
fwait
and
in
push
fistl
in
loope
pushl
and
cli
xchg
cmc
int3
neg
jo
inc
add
movsl
add
jns
stc
or
mov
mov
xlat
adc
stos
push
sbb
push
sbb
mov
sahf
cli
dec
pop
cld
out
or
mov
sub
mov
xchg
es
jb
xchg
cwtl
decl
aam
add
adc
arpl
mov
movsl
sbb
dec
cmpb
ljmp
xchg
xchg
mov
pop
adc
cmpl
popa
addr16
ja
fmuls
ljmp
pop
cmpsl
iret
fnstsw
outsb
nop
popf
and
sti
cwtl
mov
cmpsb
pushl
cmpsb
pop
or
mov
xchg
fstpt
in
into
dec
out
push
and
sti
push
mov
adc
and
mov
xchg
sub
orl
pusha
ss
cli
adc
jg
lock
cltd
mov
cmpb
inc
leave
and
inc
push
lods
je
jbe,pt
mov
inc
insb
cmp
mov
orl
mov
call
xor
jge
fimull
mov
sub
adc
and
or
jp
pop
inc
andb
popf
das
testb
out
incl
lret
loopne
addl
out
fldenv
xor
and
lcall
push
or
jmp
mov
shll
dec
test
insb
rorl
mov
das
incl
jp
data16
xchg
mov
push
fs
cli
or
sbb
je
test
pop
incl
jne
sbb
pop
mov
lods
jo
sub
repz
les
repz
incl
sub
mov
dec
add
imul
pushl
push
xor
push
repnz
push
roll
mov
mov
incl
cmp
mov
insb
push
inc
xchg
ds
xchg
movsl
icebp
mov
ds
pop
push
ret
sbb
sbb
mov
ljmp
in
push
push
in
fwait
mov
arpl
out
dec
push
js
cmpsb
das
cli
loopne
adc
stos
nop
sub
and
mov
inc
and
mull
mov
popf
xchg
sbb
xchg
sti
aad
dec
mov
decl
and
and
in
enter
push
pop
js
dec
call
xchg
cs
inc
jmp
push
addr16
add
xchg
sbb
sub
nop
jae
decl
shl
sbb
insb
sbb
jmp
ret
imul
dec
fisubl
popf
and
loopne
dec
cmp
and
jno
mov
push
shlb
ja,pn
or
lcall
xor
push
add
adc
ret
test
pop
pop
push
mov
fimuls
call
mov
inc
xor
je
jle
int3
aaa
push
scas
adc
out
inc
test
fistpl
cmp
push
lcall
lds
imul
jecxz
xor
inc
outsl
jg
or
je
data16
outsl
xorb
mov
popa
xchg
xchg
add
jl
std
decl
lock
jp
pushf
fidivs
cmp
insl
int
sti
pushl
jo
pushf
jle
pop
and
fs
or
cmc
or
push
loopne
sbb
jg
int
rcll
push
fdivl
mov
out
popf
add
rcll
out
lock
int3
sbb
cmp
ljmp
shl
mov
mov
jecxz
push
mov
add
in
loop
in
mov
clc
push
mov
inc
mov
lock
dec
sub
gs
sbb
and
inc
dec
push
inc
pushf
inc
test
call
cld
sahf
jnp
andb
stos
lock
bound
add
loop
movsl
call
mov
add
push
into
push
repnz
cs
jb
ljmp
xchg
xor
adc
dec
xchg
shrb
push
and
push
rcrl
das
fldl
push
xlat
stos
pop
enter
xor
ljmp
add
lcall
push
xor
pop
lcall
popa
jae
decb
push
cmp
ljmp
jns
ret
data16
cmp
cmp
lret
mov
inc
jne
std
adc
ljmp
dec
inc
popa
jmp
or
aam
insb
cmpsb
or
call
imul
xor
mov
aad
clc
pop
cmpsl
lock
mov
repnz
mov
pop
ficomps
cmpsb
jmp
adc
inc
jo
jne,pt
negb
lock
dec
cmp
xor
test
fmul
and
scas
faddl
movsl
xorl
lea
jno
cmp
jmp
adc
cs
mov
shlb
xor
movb
inc
push
icebp
jle
scas
call
or
cmc
test
xor
adc
and
dec
lock
incl
xchg
fisubrl
adc
dec
sbb
imul
pop
in
cmpsb
mov
sub
xchg
xchg
or
mov
idivl
xchg
jo
bound
jg
cmpsl
push
lcall
movsl
inc
je
push
cmp
pushl
push
mov
test
movsb
adc
pop
mov
push
jne
inc
and
sar
inc
jmp
cwtl
nop
push
mul
inc
je
push
jae
adc
lcall
lcall
outsl
cmp
sub
cli
xor
inc
hlt
addr16
mov
lcall
inc
push
cmp
jns
sahf
fs
aas
pop
add
lcall
mov
das
test
push
cmp
cmp
leave
cmp
insl
dec
fdivr
scas
lods
cmc
int3
pop
cs
adc
xchg
pop
sub
aaa
push
cli
adc
mov
cmpsb
fbstp
jg
jmp
pusha
jne
jp
jo
scas
in
ret
mov
inc
ja
int
pop
into
mov
mov
incl
sub
mov
pop
cltd
inc
lods
xor
inc
test
out
imul
push
mov
pushf
fcomip
inc
and
iret
mov
mov
addr16
stc
repz
mov
insl
scas
pop
push
incl
mov
stos
ss
pop
push
cli
dec
ljmp
xchg
cmp
dec
mov
inc
aaa
scas
cwtl
jl
add
leave
sbb
or
sub
das
add
inc
mov
in
mov
sub
ja
mov
mov
inc
les
pop
mov
sar
mov
push
dec
mov
clc
movsl
xchg
imul
in
xchg
and
ret
insb
jg
das
xchg
stos
dec
mov
ja
jmp
mov
inc
push
out
sti
ror
fstpt
or
jns
int
jge
mov
lcall
jg
jb
jnp
pop
add
shr
dec
loop
mov
xor
sbb
test
adc
dec
dec
jg
cmp
inc
jmp
mov
out
push
test
mul
sub
pop
jbe
call
insl
jns
pusha
add
movsb
inc
or
outsb
bound
push
cmp
cmp
decl
insl
inc
scas
push
subb
sarl
mov
test
rcl
jno
lahf
ds
fcomip
insb
mov
jge
js
sti
test
je
pop
inc
lcall
ljmp
ss
in
and
inc
xchg
adc
push
pop
adcl
push
std
incl
test
mov
lret
cmpsb
out
pop
fdivrl
pushf
shrl
add
push
jmp
pop
popf
cltd
xchg
sub
jmp
mov
lcall
mov
cmp
xorb
inc
sub
add
sbb
jg
gs
pop
cmp
rcrl
or
shll
notb
push
push
adc
xor
in
movsl
xchg
xchg
iret
fsubrs
daa
call
push
stos
nop
out
cmp
insb
mov
jne
xchg
stc
xor
pop
ds
cwtl
add
add
incb
lods
dec
jnp
cltd
mov
lcall
fsubs
mov
xchg
sbb
mov
cmpsb
adcb
sub
scas
xchg
roll
call
pop
jge
inc
movsb
mov
xchg
mov
pop
sarb
call
add
std
push
insl
dec
push
mov
lcall
cltd
mov
and
inc
push
test
out
cs
and
call
jbe
jmp
add
pop
sub
sbb
jmp
pop
loope
popa
inc
loop
scas
or
rorb
and
int
cmp
pop
iret
jg
lcall
jbe
ljmp
ss
mov
test
pop
push
adc
pop
jge
pop
lahf
jmp
repnz
push
push
push
hlt
cmpsl
or
or
outsl
fnsave
iret
adc
scas
xor
pop
sbb
incl
je
pop
clc
ss
xchg
ret
orl
adc
xchg
jno
ljmp
fcomip
or
out
in
mov
adcl
aam
or
gs
add
incl
movsb
fwait
sub
lcallw
push
pop
jae
loopne
dec
adc
xchg
decl
decl
xor
cmp
lock
jnp
pusha
loop
mov
bound
add
push
cmc
and
cmp
and
js
pop
jo
cltd
pop
inc
xor
cmp
cmp
jge
mov
mov
adc
pop
or
dec
inc
in
sbbl
cmp
sub
sub
push
test
push
jbe
add
lcall
sub
in
and
outsb
clc
inc
xor
cmpsl
sbb
ret
decl
or
xchg
mov
inc
sbb
or
jle
adc
dec
mov
mov
leave
pop
in
loop
decl
xchg
iret
push
jmp
sbb
xor
mov
shll
mov
mov
lret
shll
pop
fucomip
mov
push
fwait
jno
std
sbb
mov
ret
jecxz
adc
lcall
daa
enter
bound
cld
jo
or
sbb
dec
mov
ljmp
icebp
movsb
pop
mov
add
jmp
pushf
jmp
dec
jno
jne
rcr
xorb
lcall
or
stos
and
mov
mov
cli
test
cltd
xchg
ficompl
push
adc
fdivr
out
clc
xchg
inc
sbb
push
push
sbb
repnz
mov
test
mov
sub
hlt
push
js
imul
mov
mov
enter
roll
ljmp
andb
mov
test
xor
rorl
outsb
xchg
push
scas
mov
lret
add
call
add
sbb
push
lcall
ds
sbb
push
fnstcw
aaa
push
mov
jne
and
cmc
pop
out
mov
jecxz
popf
jg
inc
outsb
mov
sub
pop
mov
in
and
cmp
add
stc
lods
inc
mov
ret
jecxz
call
pop
out
dec
mov
sub
fldt
mov
mov
xor
lahf
cs
push
xor
mov
pusha
lret
test
mov
pushl
ret
loopne
push
mov
pop
sbb
add
dec
adc
and
ljmp
push
inc
imul
fstl
add
popf
jmp
scas
sbb
and
push
cli
mov
outsl
arpl
ficomps
push
xchg
stc
dec
fnstsw
mov
sub
out
jg
ljmp
adc
sbb
insb
scas
imul
outsl
ljmp
push
push
xor
dec
jne
jno
lock
cmc
mov
pushl
rorb
fnstcw
ds
mov
inc
mov
decl
fisttps
add
sub
ljmp
adcl
fistps
sahf
sub
gs
sub
xchg
cli
nop
mov
call
mov
lcall
xlat
movsb
push
xchg
inc
mov
mov
incl
inc
xchg
inc
mov
sub
popa
frstor
inc
cmp
je
test
out
mov
pop
and
shr
imul
rcll
adc
decl
test
xchg
ret
cmpsl
sub
or
fcompl
rcll
ds
adc
xor
les
dec
push
js
pop
mov
jl
mov
xor
incl
jge
mov
jle
sar
cmp
mov
les
mov
fbld
dec
mov
int
push
mov
inc
stos
sub
xchg
inc
aaa
xchg
addl
ss
sti
je
jecxz
ret
jmp
inc
push
insb
jne
movsl
repz
fadds
mov
rol
push
sub
mov
sbb
mov
sub
mov
popf
fidivs
cmp
mov
inc
into
sti
rcr
lcall
insb
mov
mov
popf
mov
dec
andl
decl
pop
out
leave
aas
push
mov
test
inc
push
mov
push
or
pusha
out
xchg
fstpl
xorl
jg
call
mov
xor
sti
test
fnstsw
jp
or
mov
pop
push
lcall
hlt
or
cli
dec
pop
mov
sbbb
in
sbb
lods
mulb
ds
jmp
loope
jmp
add
push
or
in
out
inc
and
fldenv
in
lahf
pop
sub
add
cmp
cmpb
push
dec
es
pop
push
dec
bound
dec
cld
lock
insl
xchg
repnz
ljmp
roll
lret
pshufw
jmp
cmp
popa
xchg
in
inc
cmp
inc
aam
jp
loope
pop
push
add
jmp
add
pushl
loope
cmp
nop
add
nop
mov
dec
mov
push
insb
call
adc
lods
xchg
pop
jge
std
cwtl
test
ds
in
pushl
push
cmp
cs
or
jp
test
hlt
fnstsw
jp
cmp
xchg
lahf
sbb
pushf
mov
outsl
sub
push
stc
out
insl
jle
cmp
mov
daa
mov
jmp
lahf
hlt
jg
stos
lea
or
stos
xchg
mov
pop
pop
dec
adc
dec
clc
dec
aam
mov
xor
jecxz
cld
fwait
dec
daa
cmp
pusha
je
and
stos
cmp
xchg
cld
ljmp
outsl
mov
add
faddl
and
mov
pop
clc
incl
push
add
nop
imul
jmp
dec
mov
mov
incl
lods
out
jne
mov
adc
pop
imul
jecxz
incl
test
test
xchg
pop
call
repz
mov
lahf
xchg
jae
add
jg
jns
push
or
jae
sub
lret
xchg
pop
scas
xor
inc
arpl
jl
or
or
testb
mov
mov
mov
or
add
pop
fcomip
call
stc
lcall
jmp
out
insl
mov
xchg
pusha
sbb
pop
adc
inc
sti
icebp
repnz
es
pop
lock
pop
inc
mov
sar
mov
ss
outsl
cltd
xchg
imull
jl
in
and
sub
fmuls
incl
fs
push
cmpsb
dec
enter
push
dec
fsin
inc
mov
in
xchg
xor
test
enter
xchg
out
sbb
js
adcb
push
mov
test
ds
fmul
push
cld
push
cltd
movsl
hlt
stos
ror
cld
mov
ljmp
mov
mov
add
or
rolb
gs
cmp
mov
jmp
or
cmp
dec
push
stos
push
mov
dec
shr
decl
pop
add
loope
add
adc
mov
adc
addr16
out
pop
inc
pop
mov
add
ja
lcall
jg
icebp
sti
lock
cmpb
mov
je
mov
xchg
in
xchg
pmaddwd
jl
subb
push
je
rol
xchg
sarb
test
rorl
fsts
sbbl
xchg
scas
pushf
sbb
clc
cmpsb
inc
lock
in
jno
xchg
or
ljmp
fs
lcall
pusha
cmpl
dec
js
out
mov
ljmp
aaa
imulb
mov
es
cmpb
pop
and
insl
gs
popa
scas
xlat
inc
sar
cld
cmp
ljmp
into
or
pop
jg
lock
ss
decl
mov
and
stc
jno
jno
test
mov
or
add
mov
fstpt
aaa
data16
sub
mov
pusha
and
push
sbb
subb
jne
sbb
jp
incl
fnstsw
scas
add
pop
mov
fistpll
daa
inc
xor
sbb
ljmp
icebp
xlat
mov
rol
ret
adc
insb
push
insl
push
inc
loope
pushl
and
out
mov
mov
data16
mov
lcall
mov
push
mov
mov
sbb
fildl
mov
add
sub
jmp
pushl
add
repnz
or
fists
out
xor
sbb
das
fstps
decl
push
das
pop
gs
add
je
dec
aaa
push
add
jge
xchg
add
mov
call
orb
inc
nop
andb
push
push
sbb
jmp
push
xor
ja
or
cwtl
bound
test
pushf
imul
loopne
ljmp
sar
pop
dec
stos
in
pop
das
or
sbb
mov
or
lcall
sub
fwait
imul
mov
ljmp
enter
inc
repnz
mov
jb
pushf
lds
inc
cwtl
xchg
lea
mov
cmc
sbb
mov
jnp
cmpsl
pop
outsl
cli
push
and
mov
add
cmpsl
push
adc
scas
jnp
inc
jns
xor
test
scas
decl
clc
in
push
and
mov
sub
jg
sbb
mov
inc
pushf
test
aad
mov
incl
cmp
testl
push
fstpt
mov
call
xchg
and
popa
js
fstl
cmpsb
fsubs
test
sub
das
cli
jge
mov
pop
imul
mov
in
dec
jnp
popf
cwtl
jmp
cmc
adc
idiv
repnz
dec
fs
in
bound
inc
clc
or
in
jnp
mov
loop
lods
in
rcrb
insb
in
and
inc
imul
lcall
adc
xchg
lcall
mov
jnp
and
incl
sub
adcl
xor
lret
mov
mov
lcall
jmp
in
lods
mov
loope
imul
popf
mov
jae
adc
loope
adcb
push
inc
jne
ljmp
lret
jns
nop
fsubr
push
inc
cmpsb
pop
sub
mov
lret
int
nop
stos
dec
loopne
mov
test
int
jmp
clc
std
sub
enter
mov
and
mov
pop
sbb
pop
push
jmp
add
and
mov
psadbw
ljmp
test
jecxz
xchg
out
loop
sub
insl
fsubs
cltd
aas
in
mov
call
xchg
js
inc
and
js
sbb
lds
aad
incb
stos
and
adc
lahf
inc
jo
xor
mov
fcomip
jbe
mov
and
lcall
pop
jecxz
outsl
clc
xor
and
jo
hlt
xor
cmp
mov
insl
push
cld
mov
arpl
dec
sub
es
pop
or
sub
aad
pop
hlt
pop
mov
shr
xchg
enter
daa
jp
add
jg
push
jae
icebp
movsb
cmp
call
aad
xor
mov
je
lret
pop
mov
add
data16
mov
add
test
incl
push
popf
add
in
notb
push
and
test
andl
add
inc
or
dec
adc
ljmp
cwtl
and
or
adc
lret
and
addr16
dec
shl
jmp
push
shll
hlt
jle
xor
lret
cmp
mov
outsl
cmp
adc
into
xchg
mov
popa
dec
pop
sahf
mov
lcall
incl
pop
push
cs
ret
rclb
jno
or
test
int
clc
sarb
jns
ja
aas
std
gs
mov
jae
xor
lahf
fiaddl
pop
cs
scas
aas
lret
sub
adc
mov
mov
adc
aad
jg
scas
cmpsb
dec
pusha
lea
pop
sub
out
adcb
mov
ljmp
lods
ret
pop
mov
push
mov
pushf
insl
cltd
ds
clc
int3
xor
jmp
lcall
dec
mov
adc
lds
into
or
mov
jmp
xchg
or
mov
xor
popa
fwait
cmc
cld
popa
xchg
inc
mov
xchg
mov
test
dec
jb
sbb
bnd
dec
sub
jmp
dec
adc
sub
js
test
ljmp
sub
mov
adc
fucomi
fldl
ljmp
lahf
jg
dec
aad
jo
popf
lret
mov
stc
xchg
frstor
sbb
pop
subb
call
and
repnz
aaa
hlt
inc
js
xor
dec
test
sub
dec
daa
cmp
jmp
icebp
mov
dec
rcl
sbb
rcrb
xlat
stc
mov
push
jae
inc
lock
cwtl
add
in
lock
push
jg
xchg
lcall
fistl
mov
and
incl
call
fisubrl
lds
lahf
inc
adc
out
push
test
ljmp
hlt
jb
iret
inc
test
in
push
cmpsb
mov
out
es
daa
stos
mov
test
pushl
insb
xlat
in
in
in
movl
loope
add
add
inc
repnz
add
inc
std
lcall
std
pop
in
add
mov
push
insb
mov
sti
or
xchg
test
and
mov
and
outsb
les
hlt
xchg
pop
push
inc
decl
outsb
push
mov
pusha
mov
mov
stc
dec
lods
sti
movsl
jo
mov
incb
movsb
les
sbb
iret
inc
push
inc
hlt
lcall
in
inc
push
leave
sbb
std
mov
pop
out
xor
mov
imul
lcall
stos
pusha
scas
lret
add
stc
bound
sbb
add
adc
xor
rcrl
imul
std
pushl
shrl
xor
ficompl
dec
aaa
fimull
mov
sub
lcall
lcall
call
fisttpl
inc
sahf
cmpl
jg
inc
jo
jno
rcr
mov
decl
out
sbb
leave
mov
xor
pop
cmp
imul
insl
jmp
stos
cmpsl
jge
jmp
push
lret
and
pop
lret
push
and
push
xor
xchg
xchg
jg
js
push
out
rcll
outsb
and
stos
xchg
jp
pop
pop
shll
bound
fisubl
rcrb
inc
cmpsb
push
outsb
xchg
dec
lret
dec
push
loop
cmp
mov
mov
push
test
fadds
ljmp
fstps
xchg
mov
sarl
xor
pop
mov
imul
popa
pushf
jae
fsubl
call
sarl
ja
rolb
jmp
dec
dec
sub
call
enter
out
cli
mov
shlb
mov
xchg
mov
call
jnp
sub
pop
ja
jbe
sub
loope
loope
pop
mov
push
jle
or
jmp
sbb
jecxz
and
sbb
lcall
jecxz
sahf
mov
incl
sahf
sti
inc
packssdw
ljmp
aaa
sbb
xlat
dec
int
shll
adc
sti
jle
mov
bound
test
insb
nop
rcll
sar
inc
ljmp
lods
subl
mov
mov
out
mov
pusha
jg
mov
fs
pop
jbe
pop
xor
stc
mov
cmp
jno
insb
sub
jg
jns
test
gs
inc
sbb
in
jmp
pushf
ret
and
incl
pop
popa
xor
sarl
cmp
aas
sub
xor
add
adc
add
adc
js
loop
cmp
test
sub
jg
mov
femms
std
aad
dec
jno
ds
out
or
push
decl
cmp
jle
sbb
ret
sbb
shrb
ja
sbb
mov
setnp
cli
mul
movb
mov
xor
cmp
test
or
sub
call
pop
testl
jge
add
leave
pcmpgtb
add
shlb
xlat
mov
sar
decl
jmp
aam
scas
into
fs
or
fwait
ret
or
ljmp
jmp
push
scas
mov
imul
and
xor
mov
dec
push
test
xor
outsl
ljmp
mov
lds
imul
mov
pop
test
out
push
jg
pop
aaa
pop
cwtl
test
push
or
in
push
cmp
rcll
je
mov
movsl
jmp
dec
inc
iret
sub
pop
aad
ljmp
jle
cmpsl
xchg
mov
insl
lods
testb
incl
shlb
inc
mov
adc
test
movsb
pop
out
aaa
mov
call
test
xchg
ficoms
pop
mov
out
std
insb
cmp
xchg
xchg
adc
stos
ljmp
lcall
pushl
ja
adcl
mov
mov
ljmp
std
jg
mov
out
pop
jmp
xor
pop
pop
fdivs
and
jne
push
sti
in
jmp
loop
sub
xor
sbb
in
ficompl
rcrl
ret
fstpl
imul
lcall
mulps
sbb
jle
xchg
movsb
dec
js
push
lret
dec
stos
push
imul
mov
pop
pop
in
gs
movsl
dec
lds
orl
call
mov
int
bound
xchg
test
sub
pusha
in
decl
sbb
push
mov
fnstcw
mov
loope
ss
add
xchg
push
mov
shll
fbld
cmp
xor
sub
mull
fistpll
repz
inc
je
jno
lret
jbe
and
sbb
popf
xchg
mov
fwait
cmpsb
sbbl
sub
sti
jp
arpl
addr16
mov
and
mov
xchg
iret
nop
std
xchg
cmc
mov
xchg
xchg
dec
and
adc
pop
inc
mov
push
mov
out
mov
scas
xlat
mov
xchg
jmp
pop
ret
out
lds
inc
xor
in
imul
mov
dec
notb
and
sbb
jl
push
ds
xchg
std
ljmp
aas
lds
adc
push
mov
push
fsubs
adc
ret
adc
mov
inc
jne
cld
jge
mov
inc
pushf
dec
popa
pop
push
montmul
cmpsb
xchg
fisubs
decl
sub
xor
inc
sub
enter
cmp
int3
sub
sbb
jmp
xchg
in
pop
or
push
pop
pushf
inc
or
jp
jg
imul
outsl
pop
sbb
incl
jbe
ret
ret
pop
or
mov
mov
jmp
lea
hlt
nop
pop
into
mov
stos
pop
clc
mov
mov
push
jg
xchg
lea
call
push
pop
mov
neg
dec
inc
or
cmp
das
mov
cmpb
mov
cmpsl
dec
cmp
pushl
pop
movsl
push
pop
ret
or
push
fimull
cmp
add
in
data16
fcomip
dec
cmpsl
xor
jle
stc
bound
mov
or
inc
test
or
call
cltd
or
dec
outsb
imul
outsl
pop
mov
jmp
clc
xchg
ret
mov
cmpsb
clc
mov
fistpl
jl
cmp
dec
fdivrs
lcall
pop
xlat
divb
lcall
cmp
int3
mov
jb
inc
test
mov
out
popf
stos
ror
xor
dec
mov
sbb
xchg
xchg
in
sub
inc
jp
mov
pop
enter
cmp
insl
jmp
mov
push
cltd
xchg
dec
imul
ljmp
ja
shrb
dec
or
dec
dec
out
and
and
pop
push
lahf
pushl
mov
subb
mov
sub
inc
push
outsl
mov
fldl
xchg
adc
incl
cmp
dec
xorl
or
mov
in
mov
jmp
xchg
push
pop
dec
push
pop
jo
int3
sub
mov
cwtl
pop
mov
jmp
mov
not
mov
aaa
jo
ret
push
hlt
xchg
daa
cmp
imul
lock
sub
popf
mov
jl
pop
movsb
ljmp
sbb
dec
mov
sbb
or
inc
int
lock
in
dec
push
call
pusha
fcomp
push
mov
push
roll
insl
xchg
je
jmp
xor
and
call
fcompl
cmpsl
push
je
adc
aam
lcall
xchg
imulb
jae
dec
inc
jle
adc
xchg
lds
sbb
enter
enter
mov
cmp
and
cmp
lods
std
dec
xor
xor
mov
mov
mov
inc
dec
adc
and
pushl
orb
jge
push
lods
cmp
add
ja
scas
dec
xor
mov
xchg
mov
fldcw
add
add
repz
pop
repnz
out
in
jne
shr
sub
incl
insl
sub
leave
jbe
aad
sub
loope
push
sub
cli
adc
addb
mov
aaa
lret
movsl
int3
stos
mov
cmp
sbb
into
arpl
incl
and
je
in
mov
gs
scas
or
int3
mov
repnz
mov
mov
add
mov
jo
adcl
fisttpll
ficompl
arpl
adc
pop
jae
fsubs
rcl
push
push
mov
ja
push
cmp
sti
adc
or
mov
shrl
pop
insl
sub
mov
jmp
leave
xchg
dec
add
cmp
mov
mov
gs
jns
ljmp
loop
dec
cmpb
cwtl
sub
cmp
ljmp
insb
xchg
jl
adc
decl
push
dec
lds
or
or
test
sbb
mov
xchg
ljmp
and
aad
sahf
mov
mov
pop
pushl
xor
or
shl
and
pusha
ljmp
mov
test
iret
faddp
andps
loope
fisubrl
xchg
arpl
add
incl
dec
inc
inc
mov
sub
cmp
aas
pop
push
add
or
into
push
call
ljmp
clc
stc
frstor
out
add
es
sbb
lcall
imul
fdivr
mov
pop
mov
inc
scas
test
loope
inc
adc
mov
call
fimuls
cmp
jnp
pop
adc
cltd
js
mov
cmpsl
push
push
mov
push
xchg
out
mov
push
pop
lahf
push
cmpsl
sti
cmp
mov
xchg
clc
decl
out
out
and
out
adc
push
hlt
and
cmp
dec
sbb
hlt
data16
jg
call
stos
cmp
jp
jae
sub
xchg
xchg
add
adc
pushl
sub
pop
sbbl
ja
mov
push
adc
incl
add
adc
jmp
mov
inc
mov
cli
fdivp
insl
pop
push
test
fwait
cmpsl
mov
push
scas
out
ljmp
or
and
add
movsb
mov
dec
in
mov
inc
ds
les
push
mov
adc
xchg
push
xchg
add
sti
dec
imul
or
push
incl
neg
je
addr16
in
adc
and
mov
jge
andb
call
dec
jecxz
cmpb
call
xor
fisttpl
daa
pop
xlat
ds
ljmp
xchg
popf
test
push
xchg
loopne
scas
lods
jg
shll
ss
mov
inc
add
xor
push
adc
jnp
jbe
aam
sti
adcl
jns
push
mov
adc
ror
fucom
dec
pushf
push
pop
pop
xor
ret
ljmp
cmpsl
xor
adc
cwtl
addr16
dec
loopne
addr16
mov
in
popf
in
and
cmp
scas
loope
decl
push
sbb
push
mov
lods
in
fimull
adc
aam
or
call
cltd
cmovne
mov
add
call
shlb
inc
mov
lcall
decb
popf
lock
test
jo
mov
jb
jmp
push
daa
mov
or
stc
jg
inc
fimuls
push
ds
loope
je
sbb
lahf
push
pushl
das
jl
rol
ljmp
arpl
xchg
roll
and
push
stos
sub
decl
cli
add
rcl
jg
dec
jno
sub
inc
jmp
sub
or
mov
mov
push
mov
inc
mov
mov
hlt
int
sub
outsb
js
mov
fisubrs
fst
xor
sbb
inc
jnp
cmpsl
and
or
and
mov
mov
inc
xchg
cmp
cmpsb
pop
std
js
push
dec
pop
add
jge
cmp
mov
gs
mov
inc
mov
pushl
sbb
les
repz
adc
shlb
sub
jp
mov
mov
jbe
mov
int
addb
sahf
cmp
add
shlb
mov
call
mov
pop
mov
cmp
test
icebp
xor
jnp
hlt
inc
adc
out
cltd
mov
es
hlt
add
jbe
sbb
push
mov
mov
jg
or
fldt
mov
movsb
xor
dec
mov
or
pop
push
cvttps2pi
jo
aaa
hlt
jnp
add
je
and
clc
xor
and
vphaddbd
nop
hlt
insb
jmp
sbb
push
adc
or
out
mov
dec
stos
mov
out
pushf
fmuls
mov
test
and
pop
push
outsl
jmp
mov
and
jns
mov
mov
inc
rcrb
js
push
lea
and
pushl
adc
sub
mov
fidivrs
xchg
mov
sub
push
mov
dec
fsubp
ret
lcall
push
out
xchg
aad
loopne
cmp
scas
aaa
mov
rorb
into
sbb
shrd
out
mov
or
inc
fs
cmpsb
lds
shl
sub
pushl
sbb
mov
or
dec
or
inc
xchg
xchg
sub
fcomip
imul
inc
pop
cmp
xorl
aad
dec
and
lret
divb
lcall
sbb
push
mov
xlat
inc
lret
dec
stos
sti
scas
jne
mov
test
jg
dec
cld
stos
jno
rcrl
or
xchg
xlat
pusha
sti
in
stos
lcall
lcall
pop
xchg
or
ja
add
adc
mov
mov
jg
jns
loopne
sub
pop
aam
loop
mov
xlat
bound
push
jp
sub
call
loopne
shl
dec
lds
cmp
pop
aad
scas
sub
dec
ds
mov
cld
dec
pop
pop
inc
popa
cmp
sub
lods
aaa
fisttpll
add
lret
mov
sub
imul
lret
ret
or
lret
mov
push
roll
in
mov
push
mov
cmc
std
mov
push
fwait
in
je
or
je
mov
xchg
xchg
stos
pop
scas
xor
push
decl
or
xchg
xchg
je
sub
xor
xor
cmp
sub
lret
loope
mov
lea
xchg
outsb
add
fistpl
fmull
push
mov
scas
sbb
mov
icebp
iret
pop
inc
mov
push
aaa
cld
decl
inc
sbb
cmp
pop
dec
imul
xor
and
das
jns
inc
adc
pop
cli
xchg
popa
jmp
jmp
jl
mov
ljmp
pop
sub
das
loopne
add
lods
jl
cmp
mov
aad
inc
or
jg
fs
int3
push
lcall
dec
sub
cmp
rcll
mov
dec
mov
and
jne
shl
jo
mov
and
xchg
jle
xchg
aad
idivl
dec
push
and
punpckhwd
add
outsl
pop
fidivrl
jmp
push
icebp
mov
cmpsl
fcomip
pop
jmp
dec
mov
pop
mov
sar
mov
xchg
push
push
shll
aaa
fwait
ljmp
ljmp
loop
ja
mov
shlb
ds
push
pop
inc
inc
push
sbb
insb
icebp
mov
mov
ror
mov
jb
cmpsl
inc
xor
jg
dec
cld
jne,pt
dec
test
ret
mov
outsl
cli
pushl
mov
or
adc
imul
mov
imul
lea
cmp
sbb
mov
inc
ljmp
cli
ljmp
add
data16
adc
push
arpl
jne
lcall
int3
jne
icebp
sub
xchg
mov
je
dec
xor
cmpsl
mov
xorl
add
insb
inc
xchg
or
aam
mov
sbb
lock
fnsave
mov
fcmovbe
push
mov
xorl
pop
lods
cli
dec
stos
cmpsl
pop
call
push
fisubl
lcall
pop
fistl
push
pop
jge
pop
push
movsl
sub
hlt
mov
dec
jmp
mov
jo
data16
pop
xchg
fists
out
cli
mov
and
mov
enter
jl
out
cwtl
pop
sbb
lods
stc
dec
repnz
sbb
mov
lahf
pop
cld
int
push
cmp
lds
mov
lret
call
les
xorl
sbb
stc
push
in
sti
jae
aas
gs
jg
and
out
xchg
xchg
add
mov
dec
adc
int3
xor
pushl
hlt
push
icebp
shl
xor
dec
add
mov
inc
in
pop
bnd
in
decl
mov
xchg
jbe
outsl
push
jb
inc
mov
fisttps
xor
ret
test
cli
xchg
in
xchg
sub
sbbl
test
rorb
cmp
dec
mov
pushl
loopne
lret
hlt
lret
enter
shll
test
pop
xor
inc
incl
pushf
and
rcr
xchg
sti
mov
xor
sahf
jb
cmp
pop
jg
scas
sbbl
imul
cwtl
outsl
mov
lret
push
jg
ljmp
aaa
jmp
push
sub
stc
clc
cmp
sub
adc
in
push
dec
sqrtps
mov
mov
dec
fwait
push
push
jae
add
sahf
cs
jmp
cmp
sub
cs
jo
pop
push
fistpl
push
or
enter
test
mov
js
lret
arpl
aaa
xor
sbb
or
cli
int
jne
mov
inc
push
sub
lahf
rorl
adc
push
and
add
imul
pushl
xchg
xor
ret
aaa
sub
testb
icebp
mov
adc
inc
lcall
pop
cwtl
mov
rol
iret
push
imul
sbb
dec
loopne
call
arpl
and
mov
fcom
ljmp
add
insb
jnp
jbe
mov
jmp
push
into
jecxz
sbb
in
addr16
fisubs
out
or
iret
xchg
and
pushl
xor
stc
xchg
lret
cs
push
xchg
mov
jae
cmpsl
jp
fisubs
shl
mov
and
sti
xorb
xor
jecxz
mov
imul
adc
repz
xlat
pop
mov
mov
out
and
aaa
cmp
call
nop
fcomps
mov
xchg
mov
gs
push
ret
pop
lcall
dec
push
pop
pop
cwtl
mov
fnstenv
fisttps
pop
test
add
pop
icebp
jmp
sub
addr16
lods
xor
nop
popf
sbb
in
outsb
xchg
loope
decl
mov
into
aas
cmp
adc
outsl
ja
add
mov
xchg
sub
ljmp
cmp
adc
jle
jne
push
add
fsubl
jg
cmp
jbe
in
into
xchg
jle
fsub
out
out
in
outsb
and
stos
fcmovbe
mov
cld
lret
mov
lcall
notl
xchg
inc
push
imul
stos
imul
adc
decl
add
aad
insb
mov
outsb
push
mov
xchg
js
shld
jl
ret
fisubs
pop
sub
lcall
inc
sbb
sbb
sbb
cmp
add
test
je
bound
cmp
inc
loop
loop
mov
int3
push
ds
fadds
pusha
test
gs
outsl
jnp
add
add
sbb
ljmp
out
arpl
in
xor
sub
adc
ficoml
fdiv
ficoms
insl
xchg
in
sbb
aas
dec
cmp
fwait
sub
ds
in
ja
imul
into
mov
or
lods
cmc
mov
or
push
loope
ljmp
into
mov
clc
mov
lcall
pop
les
push
mov
arpl
mov
arpl
and
inc
pop
mov
push
adc
test
sbb
out
jecxz
stc
ljmp
dec
movsl
xor
push
jle
fs
cltd
leave
mov
popa
fbstp
fildll
test
cli
add
inc
mov
in
push
sub
pop
repz
mov
sbb
loopne
jmp
xor
jg
imul
jae
fisubl
call
dec
shufps
mov
aam
ja
jecxz
pop
xchg
add
fldl
jle
into
negl
aaa
shrl
push
fstpl
xchg
ss
popa
fldt
add
inc
cmpsl
xchg
loop
subl
inc
jne
mov
push
dec
adc
dec
adc
rorb
inc
insb
cmc
pop
mov
pop
loope
es
sbb
inc
mov
lock
jmp
popf
nop
jp
loop
incl
orb
cltd
and
ficoms
mov
xchg
int
sti
ret
scas
pushl
fdivs
jmp
jno
cmpsl
and
out
in
sti
mov
sbb
push
xor
mov
jo
les
mov
sahf
pop
jmp
cmc
lcall
mulb
jg
icebp
add
xor
imul
mov
push
dec
lret
popf
and
lcall
sbb
mov
rclb
mov
sub
mov
jl
adc
mov
ljmp
testl
lcall
lret
insb
mov
decl
or
jns
decl
mov
stos
stc
xor
jg
ljmp
test
sbb
das
testl
inc
cltd
sub
pop
cld
jmp
add
or
rolb
test
mov
aam
subl
jle
decl
add
push
loop
xchg
add
sbb
loope
insb
lds
adc
mov
push
adc
jg
push
jp
fcoms
out
pop
aaa
mov
jle
call
fmuls
repnz
inc
aas
ret
fs
loop
repnz
mov
nop
dec
lcall
and
aaa
and
addr16
movsl
aad
mov
dec
xchg
mov
cmp
sbb
ljmp
pop
addr16
clc
test
xchg
lcall
push
addr16
jmp
mov
mov
insl
sbbb
mov
out
push
xabort
mov
in
cmp
inc
sbb
nop
aam
and
mulb
and
in
pop
pop
jecxz
mov
inc
pop
mov
ja
cs
mov
xchg
leave
rcll
and
fwait
mov
lcall
dec
ror
cli
mov
nop
jne
orl
call
out
call
bound
in
fwait
and
popa
push
mov
dec
add
jmp
add
movsb
in
add
es
fsubrl
xchg
inc
outsl
mov
aas
push
aad
cld
jmp
and
pop
loope
ret
jae
cmp
push
jecxz
mov
in
subl
xor
in
outsb
mov
stos
test
xor
out
mov
insb
int
inc
unpckhps
pop
ret
ja
stos
cmp
jno
sahf
jg
inc
jae
nop
sub
test
cmp
inc
dec
pusha
adc
call
loopne
mov
shlb
testl
int
andb
fs
inc
inc
int
inc
jb
repnz
enter
mov
xor
insb
dec
dec
cli
ficompl
mov
pusha
add
call
addl
test
jecxz
fwait
jno
bound
mov
or
sarb
decl
cltd
mov
mov
sub
cmp
jmp
inc
sub
mov
jb
jl
mov
dec
cwtl
shl
xor
cld
pop
mov
je
lret
cltd
jg
lods
pop
or
and
xlat
pushl
sbb
repnz
cmp
push
xlat
jl
mov
testb
mov
stos
fs
fstpt
movsl
cmp
mov
pop
dec
out
inc
adc
mov
mov
jmp
adc
cld
mov
fistpl
sbb
hlt
es
imul
xor
jmp
cld
dec
insb
es
cmp
jmp
aaa
and
sub
ljmp
mov
pop
jbe
pop
lahf
mov
aaa
inc
push
int3
loop
ljmp
jge
repz
lods
loopne
movsb
and
inc
xor
in
pushl
jg
sarb
adc
lods
inc
rorl
xchg
jns
lock
mov
cmpsl
xor
pop
adc
sbb
sub
dec
aad
pusha
jns
decl
sub
int3
sbb
adc
insl
push
cmp
arpl
push
and
fildll
lods
loop
aaa
or
stc
pop
addb
out
mov
dec
loopne
sub
mov
fisubrl
pop
jne
sbb
std
xchg
mov
sarl
pop
iret
adc
call
sbb
cli
ror
imul
in
hlt
jno
cld
lcall
sbbl
pushl
outsl
enter
mov
mov
sarb
out
dec
or
pushl
xchg
ds
xor
jl
mov
cmp
jecxz
mov
pusha
inc
aam
inc
adc
pop
iret
push
push
add
rclb
in
adc
decl
xchg
or
pop
bound
jb
ret
lret
cmp
xorl
and
into
ss
lcall
ja
rclb
xchg
cmp
pop
inc
cmp
xor
leave
jecxz
pop
loopne
mov
jb
mov
stos
or
jl
adc
mov
pop
add
ds
idivb
mov
pop
sahf
and
shll
add
out
add
decl
leave
pop
dec
sub
adc
stos
mov
mov
imul
mov
outsb
push
pushl
aad
push
mov
add
shll
xchg
lea
xchg
push
int
push
jne
fdivs
sub
ljmp
cmc
lret
mov
push
inc
pop
in
fsubrl
and
repnz
mov
and
out
clc
incl
xchg
lret
cmpsl
push
or
and
rol
lcall
int
rclb
call
mov
sar
inc
cmpsl
outsb
in
ud0
call
in
xor
jmp
ds
xlat
pcmpeqd
in
xor
lret
and
daa
mov
sub
or
lcall
cmpsl
xlat
adc
jl
shl
adc
cmc
pop
sub
std
push
pop
jnp
pop
push
std
add
cmp
cmp
push
mov
les
jbe
mov
push
decl
into
dec
mov
jns
jle
movhps
jno
jle
xor
lcall
pop
pop
and
xor
pop
mov
movsl
inc
adc
insl
sub
stos
sub
pop
xchg
sbb
fidivrs
rolb
lahf
and
scas
mov
mov
cmp
pop
mulb
cmp
xchg
cmp
iret
inc
mov
lcall
pushl
movb
and
adc
mov
cmp
ljmp
lret
frstor
xchg
and
sbb
pushf
xchg
mov
jecxz
jg
pop
bound
in
adc
push
sbb
cmp
sbb
or
decl
sbb
mov
add
sbb
aas
mov
cld
ret
and
cmp
int
mov
fldl
pop
rcll
pop
cmp
pop
mov
jmp
dec
divl
xor
push
or
pop
imul
or
pop
xchg
cmp
dec
sub
dec
js
stos
mov
test
fcmovne
ret
push
loop
scas
clc
pushl
xchg
inc
push
or
mov
mov
mov
lods
and
out
repz
lds
mov
xor
lret
cmp
fisttps
movsb
cwtl
jl
shl
hlt
inc
std
inc
sahf
lods
mov
std
push
xchg
or
out
clc
repz
sub
dec
lcall
cli
sub
pop
pusha
dec
cmp
cld
call
xchg
aaa
xor
mov
inc
loopne
dec
and
call
lods
int3
xor
pop
je
add
jl
mov
xchg
mov
push
dec
mov
ljmp
and
rcrb
jmp
aad
ds
cltd
pop
ud1
bound
in
lock
lret
out
out
popa
sbb
and
inc
or
icebp
mov
jge
jle
aas
ret
jae
jmp
jb
push
ret
mov
lea
or
std
lods
mov
adc
pop
outsl
inc
dec
mov
aas
push
stos
in
dec
mov
cmp
std
pop
int
or
mov
jno
mov
sub
jmp
mov
or
add
leave
mov
stos
push
lea
shrb
outsl
ljmp
sub
aad
xchg
mov
pusha
ljmp
dec
mov
jle
cmp
decl
mov
and
mov
aas
scas
sub
push
sub
cltd
in
xor
cld
clc
jmp
call
fisttpll
mov
lock
leave
or
push
lods
inc
xor
aas
sar
ljmp
mov
jo
sub
xchg
cwtl
mov
pop
xchg
pusha
repz
add
inc
jg
sub
mov
sti
outsb
push
pushfw
inc
arpl
pushl
leave
pop
or
mov
nop
sub
out
cmp
fidivrl
lahf
lret
mov
test
call
fisubs
adcw
mov
fwait
sub
mov
out
lcall
jmp
inc
xor
in
into
stc
fs
lods
ror
or
and
sar
pushl
std
dec
out
mov
add
mov
push
xor
cltd
cmovns
mov
testl
pop
repnz
cli
add
jmp
adc
cmc
fidivl
dec
sar
and
sbb
jg
sub
and
fxch
popl
jle
ret
inc
out
xor
jp
imul
push
jo
loopne
add
add
loope
in
call
sbb
gs
jp
fistl
jae
sahf
movq
xlat
or
mov
in
icebp
cmp
xchg
sub
mov
incl
orl
dec
sbb
cmp
pushl
leave
dec
pop
das
pop
mov
lret
xchg
faddl
pushl
shl
cld
cmpb
repz
push
xchg
mov
call
bound
fcompl
add
movsb
cmp
push
and
mov
push
sub
lret
stos
jge
jns
jg
mov
xchg
and
pusha
sub
dec
mov
rcrb
scas
clc
out
stos
mov
mov
add
inc
cwtl
test
add
and
pop
pop
mov
cmp
mov
cmp
or
dec
inc
dec
arpl
pop
mov
adc
jg
dec
dec
test
mov
cwtl
aas
push
das
jbe
mov
bswap
push
cmpsb
mov
push
push
or
daa
inc
and
inc
cmp
inc
jge
mulb
inc
insl
and
iret
push
dec
lcall
xor
pushf
jae
test
popa
aam
add
pushl
mov
pop
scas
dec
mov
orb
xorb
cmpsl
and
or
mov
or
das
cli
xchg
stc
or
rcr
pop
mov
and
insb
jl
loopne
ljmp
cmpsl
arpl
mov
lea
sbbb
xor
xchg
rcll
testb
clc
jg
add
mov
lret
rcr
push
mov
xor
and
or
pop
mov
ljmp
sbb
sbb
sub
and
int
rcl
shll
decl
adc
hlt
lds
sbb
pop
jb
xor
cwtl
in
pop
or
or
mov
fcomip
lods
xchg
movsl
xchg
and
cwtl
pop
fdivl
fsubs
mov
stos
fs
iret
gs
lcall
mov
aaa
out
stos
int
mov
aad
inc
mov
call
jp
aad
push
sbb
xor
fdiv
adc
sarb
cmc
loope
ljmp
xor
or
loop
jg
test
out
shlb
imul
scas
xchg
push
jnp
ret
sub
dec
fbld
mov
ljmp
or
inc
add
punpckhbw
sub
sbb
ljmp
add
leave
dec
and
into
inc
sarb
sahf
adc
scas
dec
pop
mov
cmp
test
sbb
roll
cmp
pop
int
adc
ss
jmp
inc
mov
xchg
mov
adc
xor
dec
popl
jo
xchg
stos
out
arpl
mov
sub
jmp
testl
jbe
out
sub
xchg
repz
xchg
sbb
rcll
xchg
adc
gs
push
pushl
pop
sbb
mov
arpl
dec
imul
xlat
cld
mov
inc
pop
negl
pushf
xor
inc
arpl
sub
incl
movsb
mov
nop
jmp
fcoms
adc
popa
roll
test
cmp
sbb
lea
arpl
jg
dec
mov
and
jecxz
jg
incl
mov
inc
mov
cmp
es
call
cmp
stos
ljmp
nop
daa
mov
movsb
out
clc
lret
outsb
pop
cmp
mov
push
sub
cmp
mov
xchg
sti
push
cmp
sbbb
jmp
lahf
loopne
mov
and
add
inc
insb
fwait
sub
lcall
mov
int3
out
fldt
aas
je
dec
or
cmp
pop
sbb
into
mov
jmp
adc
fdivs
mov
add
mov
in
inc
xor
xrelease
outsl
mov
clc
pushl
push
mov
push
cmp
xchg
incl
add
or
lock
jp
popa
sbb
fucomip
mov
insl
jmp
test
mov
push
frstor
lock
jge
mov
out
mov
inc
push
and
mov
les
sahf
mov
sub
pushf
andb
xchg
jg
push
xor
pusha
xchg
mov
xchg
es
fwait
cs
pop
and
pop
cmc
aad
push
mov
jmp
fs
addl
int
mov
in
shlb
jns
ret
jp
movsl
cli
stos
mov
frstor
push
enter
loope
adc
sbb
call
lods
adc
test
xlat
lods
add
js
dec
adc
jbe
dec
lret
pop
mov
lods
int3
push
in
jp
gs
adc
add
faddl
mov
stc
or
xorl
mov
movsl
and
lea
sbb
xor
dec
pop
lods
loop
inc
adc
mov
pusha
aam
shll
int
aaa
pop
mov
hlt
mov
in
cmp
jmp
push
mov
jg
repnz
stc
jmp
pop
cmpb
cld
xchg
frstor
pushf
mov
fsubrl
movsl
mov
or
incl
sbb
popa
popf
mov
fiaddl
mov
push
dec
sbb
push
or
icebp
sub
call
ljmp
mov
out
cmp
add
pop
popf
mov
xorl
jbe
jmp
mov
sbb
sbb
imul
aaa
mov
scas
sbb
mov
lds
jmp
inc
mov
ror
in
sbb
mov
xor
push
add
jg
jg
xor
sub
jmp
inc
push
fsubrl
aas
push
push
sub
decl
into
mov
mov
jge
add
lret
ret
xor
dec
inc
push
sub
shll
push
mov
xchg
jb
pusha
cmpsb
nop
inc
cltd
xchg
cld
test
mov
and
and
lahf
jg
es
cmp
xchg
fidivs
push
scas
enter
mov
out
push
push
dec
outsl
hlt
or
in
lret
fldcw
mov
cli
xor
mov
lcall
cmpsb
adc
and
arpl
popf
lcall
sbb
test
decl
sbb
jmp
lods
adc
fiaddl
push
sbb
jecxz
cmp
cmpsb
dec
test
in
repz
div
sbb
in
call
call
popf
add
cmp
dec
ljmp
in
sbbl
lods
stos
pop
shrl
inc
mov
cmp
adc
cmc
sbb
scas
shl
cli
bound
or
daa
or
or
jns
outsl
ljmp
inc
dec
inc
scas
xchg
xor
add
cltd
cld
cld
shll
adc
cwtl
fstpl
sub
add
inc
loopne
xor
gs
cs
lea
test
incl
mov
pop
lock
shl
fildl
inc
aas
dec
fisubrl
add
xor
mov
decl
xchg
xor
bound
push
je
xchg
pop
stos
jno
ljmp
clc
mov
mov
inc
and
cmpb
mov
inc
mov
movsb
int
icebp
decl
mov
fldcw
push
std
xchg
jge
push
cmp
add
sbb
cmpsl
out
movsb
mov
add
xchg
popa
push
fdivrs
pop
loope
popf
adc
pop
ljmp
jg
pop
cmpsb
shlb
out
scas
cmp
mov
imull
inc
ret
clc
mov
mov
aas
outsb
arpl
dec
push
push
call
sub
mov
cmpsb
jo
xchg
ljmp
out
cli
decl
popf
pop
mov
enter
cs
out
movsb
push
test
pop
data16
cli
lret
std
mov
in
call
mov
rol
sub
mov
fwait
sub
push
push
jl
jmp
aad
mov
cld
decl
in
push
sahf
repz
in
xchg
push
out
lret
inc
int3
dec
stos
mov
lea
mov
fnstsw
leave
lock
jns
mov
jmp
mov
stc
stc
cli
cmpsb
pop
shl
movl
ret
adc
push
pushl
mov
cmp
mov
imul
mov
cs
lcall
insb
pop
pop
in
out
xorb
jecxz
sbb
push
ja
push
lods
dec
sub
push
jp
ljmp
mov
repnz
mov
push
adc
leave
inc
adc
adc
inc
jle
out
mov
leave
cmp
mov
adc
sti
ljmp
lods
call
adcl
das
mov
dec
je
or
stos
and
mov
inc
inc
insl
int3
mov
ret
jle
pop
popa
into
push
xchg
hlt
xor
fbld
sbb
aad
xchg
add
ljmp
or
or
arpl
incl
mov
push
push
mov
pop
jg
jmp
out
test
add
aaa
inc
loope
fwait
imul
mov
cmp
cmpb
mov
mov
add
decl
sbb
push
jmp
andl
adc
and
subb
enter
mov
ds
insb
sub
cmpsl
inc
add
std
scas
jecxz
jecxz
je
sbb
lcall
stos
insb
rclb
and
push
scas
jae
jbe
das
jb
push
mov
icebp
pop
dec
dec
push
cmpsl
aam
inc
out
popf
jge
ret
mov
js
pop
in
jo
rclb
dec
push
xor
cmp
outsb
lret
icebp
add
cmp
pusha
addr16
adc
lcall
push
les
add
cmp
test
lahf
loop
or
pop
in
adc
and
mov
and
jl
dec
shll
or
inc
pop
mov
mov
hlt
mov
add
add
pop
sub
lea
sub
decb
fldenv
inc
loopne
ret
jno
les
xor
call
incl
mov
clc
sub
lods
into
rorl
ret
xchg
mov
ljmp
dec
mov
mov
jno
aaa
adc
dec
pop
ja
lahf
fldt
imulb
inc
xlat
call
das
or
pop
inc
negl
fwait
ret
repz
ljmp
xchg
mov
jg
xor
xchg
or
out
filds
jnp
imul
mov
jnp
inc
lret
sub
fistpll
pusha
loopne
mov
mov
and
out
pop
lods
shll
mov
push
mov
mov
ds
mov
addl
aad
sbb
adc
loope
add
mov
xchg
push
ljmp
iret
dec
stos
call
dec
mov
xorb
filds
mov
test
jne
push
ds
xor
roll
lcall
mov
insb
test
sub
sbb
mov
shl
jg
rolb
insl
pop
clc
mov
inc
push
lcall
jne
aas
xchg
ret
lock
cmp
mov
pusha
sbb
push
lret
data16
js
test
xor
pop
pop
lds
lahf
cmp
push
lret
or
push
popa
mull
cmp
icebp
call
insl
andl
add
push
inc
sbb
shr
dec
fsubl
mov
inc
ds
fcoms
pop
ret
jae
sbb
lock
add
ljmp
iret
add
adc
pop
inc
subl
cmp
out
mov
sar
out
ja
jecxz
push
ss
push
out
dec
cmp
inc
aas
xor
sbb
xor
repnz
out
pop
push
xor
sbb
jae
mov
push
insb
add
sbb
decl
and
adc
dec
and
mov
xchg
push
ljmp
in
sub
call
pop
icebp
iret
lods
push
lea
push
pop
das
loope
add
cmp
test
xchg
mov
jmp
xchg
mov
xchg
lods
pop
pop
movsb
jbe
jb
gs
movsl
cmpsl
sbb
incl
fidivl
cs
repnz
fcompl
mov
loopne
fiadds
add
inc
jg
push
ljmp
jns
arpl
cmp
mov
cmpsb
repz
jge
mov
mov
xor
cmp
pop
cli
jo
xlat
sub
push
pop
stos
add
ljmp
decl
cltd
xchg
mov
or
push
mov
xchg
sahf
lods
xor
in
push
xchg
cli
jb
inc
les
inc
scas
sub
xor
mov
cmp
jae
cmc
or
out
pushl
pop
jbe
dec
call
jl
jne
popf
movsb
ja
stos
xchg
lret
insl
cli
dec
das
inc
inc
mov
inc
jb
lcall
sub
dec
pop
inc
dec
std
mov
cld
lcall
stos
xchg
outsb
adc
pop
sub
adc
in
xor
pop
push
nop
inc
xlat
push
pop
cmc
call
test
repz
cmp
pushf
or
jl
aad
xchg
lods
out
push
xchg
xor
cmp
jge
pop
lcall
pushl
sub
stc
jbe
mov
add
xchg
stc
jo
mov
sbb
and
pop
mov
ret
arpl
std
mov
rcll
lret
stc
incl
repnz
add
push
xor
daa
xchg
jno
mov
incl
xor
and
xor
mov
lcall
add
arpl
mov
mov
lcall
xchg
push
js
xor
pushl
jbe
add
jge
adc
fistl
loop
subl
fisubl
cmp
pushf
arpl
lods
je
and
jne
xchg
inc
and
push
inc
adc
cli
push
lock
add
shl
out
jl
xchg
xor
push
stos
sahf
cmp
call
mov
dec
jo
inc
cs
js
push
sahf
lcall
incl
cli
mov
sub
andl
pop
dec
ds
mov
inc
push
jmp
clc
sub
lret
mov
jmp
leave
sub
jmp
stos
cwtl
jne
pop
int
cmpl
clc
mov
fsubl
jns
out
lds
cmpb
call
sub
imul
ret
sarb
jecxz
fldcw
dec
es
adc
cmp
mov
jnp
add
in
filds
cmp
xlat
xchg
fwait
sub
xor
adc
lods
xchg
inc
mov
push
jle
push
bndmov
xor
mov
mov
movhps
push
jns
inc
jle
popf
jge
sbb
xor
sbb
sub
jge
decl
mov
push
push
inc
jecxz
or
mov
mov
mov
cli
mov
outsl
call
decl
lods
ljmp
pop
scas
out
mov
scas
push
in
ljmp
icebp
pop
hlt
mov
ret
rol
mov
mov
decl
stc
and
lahf
push
adc
jo
ja
scas
sub
int
test
fsubl
out
stos
mov
lcall
mov
jge
mov
pop
push
cld
in
fwait
cmc
push
in
mov
jno
jl
les
mov
fsts
mov
mov
sbb
into
inc
adc
mov
sarl
enter
mov
ficompl
sar
pop
cmc
sti
cmp
dec
jmp
xor
or
or
lcall
dec
mov
pop
scas
ljmp
or
cmp
in
pusha
ret
sbb
shlb
loop
ljmp
in
ret
xchg
and
mov
cwtl
es
xor
inc
or
mov
xchg
mov
jp
or
push
adc
jb
jmp
shld
in
dec
jae
loope
xchg
or
loop
mov
dec
les
incl
decl
push
mov
adc
leave
ficoms
data16
call
push
xor
fwait
in
rcll
mov
add
dec
cld
xchg
push
ret
test
mov
xor
and
test
cmpsb
clc
xchg
xlat
iret
xor
and
push
pushf
loop
pop
sub
or
jge
add
push
cld
call
push
lea
inc
mov
test
adc
xchg
mov
hlt
push
out
lcall
inc
andb
mov
add
jl
repz
mov
sub
addr16
xor
fisttpl
and
xchg
jecxz
inc
rol
add
push
imul
cmp
fdiv
sar
ljmp
movsl
and
and
fcom
mov
ds
les
int
ljmp
lcall
test
mov
push
loopne
data16
out
in
jb,pt
ret
lret
out
and
jmp
mov
jnp
lods
xor
imul
mov
cmp
ljmp
cmpsb
popf
cmc
fildl
enter
ds
mov
hlt
lock
jmp
pop
loopne
jb
mov
int
mov
ret
shrb
cwtl
add
lock
inc
out
cmc
mov
xchg
sbb
xchg
popf
or
push
xor
xchg
call
bound
out
fnstsw
mov
mov
jl
lods
pop
xchg
jg
dec
shlb
dec
ljmp
ljmp
sarb
fwait
sbb
pop
pop
fwait
call
popf
jbe
lcall
call
mov
xchg
mov
pusha
fistl
dec
fs
dec
imul
test
and
icebp
lcall
lahf
xchg
punpcklbw
mov
cmp
stc
dec
pusha
sti
decl
push
mov
inc
divl
cmpsl
push
fdivr
loopne
dec
inc
adc
sub
mov
pusha
add
fucomi
add
add
add
add
or
pop
pop
push
or
or
or
or
sbb
cmpsb
or
push
adc
push
adc
jbe
filds
or
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
inc
adc
rolb
adc
add
scas
insb
insb
mulb
add
adc
add
add
adc
mov
test
cmp
add
add
push
adc
mov
jno
xor
inc
mov
adc
bound
add
inc
cmpb
push
subb
xor
out
adcb
inc
and
addb
cmc
and
out
inc
test
fldenv
mov
mov
and
adc
pushf
into
add
adc
stc
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
jo
lock
and
or
adc
xorb
scas
fiaddl
or
js
push
adcb
xor
sub
rcr
push
ret
xchg
decl
and
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
call
out
pop
les
fsts
dec
sub
pop
mov
cmp
dec
shr
cmp
xor
and
shr
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
dec
mov
add
std
or
inc
pop
add
lds
cld
cli
and
mov
fiaddl
jg
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
outsl
lds
jmp
clc
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
fs
scas
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
mov
lcall
leave
mov
jp
push
out
or
push
lcall
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
imul
cltd
inc
sbb
jle
dec
mov
mov
out
pop
jb
mov
mov
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
xor
ljmp
inc
aad
aaa
sbb
into
fcomps
ljmp
sbb
loopne
xlat
cmp
test
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
sub
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
clc
out
jae
shrb
shlb
out
aas
stc
add
mov
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
outsb
mov
cmp
fmull
enter
lock
mov
mov
pop
mov
sub
outsb
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
pop
in
pop
fmull
mov
pop
jg
add
jg
jg
mov
sub
adc
mov
mov
cli
jg
mov
push
push
sbb
stos
icebp
pop
incb
pop
cmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
lret
mov
sar
adc
aad
mov
lahf
xor
imul
dec
js
jle
add
mov
fsubrl
add
mov
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
fistpll
adc
lahf
mov
or
out
lcall
sti
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
int
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
pushl
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
fsubrp
adc
clc
insb
test
aas
repz
sbb
jl
subl
jmp
cmp
mov
sbb
aaa
clc
push
std
mov
subb
or
mov
xchg
decl
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcrb
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
negb
cltd
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
add
mov
rclb
rolb
xchg
pop
stc
cmpsb
nop
data16
nop
add
add
stos
cmpsb
hlt
popf
add
dec
push
and
negl
ret
insb
push
inc
or
add
push
xor
jbe
inc
adc
lret
addb
inc
shr
rcll
ret
bound
jl
xchg
iret
adc
ja
fstl
jo
imul
neg
mov
ds
add
adc
push
inc
and
mov
push
aam
add
cmpsb
test
xchg
xchg
nop
mov
test
adc
fadds
movsb
pusha
fnstsw
inc
sbb
or
outsb
sbb
icebp
pop
mov
pop
push
outsl
outsl
fucomi
fcmovnu
insb
push
push
xchg
jo
push
and
and
ja
gs
push
das
outsb
imul
inc
push
shlb
je
cs
inc
sub
adc
dec
push
fcmovnu
push
or
std
dec
jne
js
stos
dec
sub
inc
fists
frstor
dec
or
mov
jbe
lea
inc
jns
push
imul
popa
jb
icebp
loope
fiaddl
dec
sbb
outsl
insl
pop
inc
test
mov
movsb
add
cmp
mov
add
dec
outsb
mov
and
sti
cmpl
dec
xor
ret
push
inc
insb
sbb
inc
sbb
push
xor
imul
mov
outsl
jp
cmpl
inc
icebp
inc
orl
and
pop
js
mov
add
pop
sarl
outsl
ds
insb
jne
mov
jne
data16
push
xor
or
push
add
dec
call
insl
add
push
fildl
and
loopne
sbb
push
out
popa
addr16
rcll
dec
jb
push
gs
rolb
test
pusha
addr16
cmpb
jae
adc
or
lods
dec
push
push
push
jnp
pop
xchg
inc
jne
arpl
orl
cmp
xor
sub
popa
lds
les
pop
inc
ja
add
inc
or
dec
packuswb
pop
lods
inc
dec
push
pop
mov
push
fsubrs
dec
inc
dec
sbb
sub
je
push
jne
imulb
arpl
or
shrl
jg,pt
out
and
das
dec
arpl
pop
sahf
mov
push
xor
inc
in
sbb
sub
orl
or
outsl
popw
shll
jb
cli
push
xor
adc
out
push
inc
xchg
push
jne
movsb
test
dec
push
adc
sbb
inc
lock
push
enter
stos
fdiv
cmp
xchg
dec
jmp
inc
roll
pop
push
lcall
pop
pop
stos
or
and
outsl
cmpsl
fadd
arpl
push
clc
push
push
mov
mov
mov
mov
mov
subb
arpl
mov
es
jp
mov
pop
adcl
xor
fcoms
shll
push
sbb
aam
push
inc
xchg
mov
outsl
jns
int
or
pushf
dec
push
pop
js
jmp
mov
enter
lods
jne
mov
jns
adc
ficoms
inc
inc
cmp
adcl
inc
sbb
cli
mov
mov
and
sbb
fs
adc
or
push
es
mov
xchg
or
push
adc
adc
jo
lret
stos
loope
xor
test
subl
outsl
and
pop
iret
pop
push
push
outsb
pop
mov
pop
mov
or
push
in
push
jne
xor
clc
inc
out
dec
adc
lcall
jecxz
leave
jo
jae
or
xor
popa
pop
or
or
rcrl
and
and
int3
test
pop
mov
mov
jno
popa
fisttps
rol
inc
sub
sub
push
jno
push
cmp
mov
repz
or
adc
outsl
jae
cmpsb
sbb
repnz
dec
push
xchg
inc
inc
jbe
and
add
add
ret
lcall
ret
je
and
js
gs
push
lock
pop
aaa
xorb
orl
inc
mov
add
cltd
rorl
mov
arpl
or
mov
sbb
fs
mov
add
cmp
insl
fidivl
out
and
inc
lahf
addr16
inc
sbb
or
jae
cmp
movsl
int
cmp
sbbl
insl
xor
pop
mov
push
insb
aaa
adcb
shll
idivl
test
popa
and
movsl
jmp
lret
and
mov
rolb
rorl
cmp
out
push
outsl
repnz
jb
adc
mov
jg
popf
pop
xchg
jo
inc
inc
pop
mov
mov
fisubrl
inc
imul
sbb
and
fs
cmp
mov
mov
fs
out
outsb
add
out
lock
insb
jle
cmovo
inc
dec
rorl
stos
mov
jl
push
dec
jae
jno
mov
mov
sbb
jne
jb
mov
js
dec
loopne
ret
enter
and
rclb
sbb
sub
rcr
sub
mov
ret
sar
in
mov
xor
push
enter
pop
xor
shlb
push
in
roll
fldenv
sarl
ja
in
dec
and
pop
shll
scas
jnp
or
dec
outsb
dec
in
xchg
push
dec
sub
ss
ss
jnp
mov
pop
add
add
mov
imul
dec
shll
or
push
cmpsb
popf
cmpsb
xor
inc
add
add
pop
adc
les
mov
mov
rcr
scas
and
sbb
outsl
inc
xor
inc
jo
hlt
mov
mov
bound
add
clc
xor
inc
pop
xlat
std
push
jb
inc
jae
jo
ficompl
jg
cmc
inc
jb
and
rcr
pusha
cwtl
mov
jne
in
or
mov
loopne
xchg
imul
cmpsl
rclb
jp
sbb
adc
jb
inc
je
and
adc
or
mov
in
xchg
pop
pop
push
aaa
int3
or
pop
lock
mov
xchg
xor
push
inc
in
jnp
data16
insl
jb
jo
pop
insl
adc
adc
jo
lret
test
mov
scas
arpl
cmp
jmp
imul
lcall
icebp
mov
ret
pop
pushl
fistl
ljmp
dec
jno
icebp
push
mov
jmp
jb
les
lds
push
mulb
fnstsw
insb
mov
mov
cmpsl
cld
popa
imul
add
imul
xor
movsb
dec
cmp
hlt
push
nop
shlb
jmp
lds
sbb
cmpsb
insb
adc
xchg
sbb
outsb
ja
inc
rol
push
imul
call
xchg
adcb
mov
insl
pop
push
dec
mov
xor
adc
std
imul
adcl
cmp
lds
pop
inc
mov
sub
imul
add
mov
push
push
push
lds
xor
adc
js
push
sub
mov
leave
xchg
icebp
pop
xor
outsb
pop
icebp
adc
mov
push
js
add
mov
and
insb
and
dec
popw
imul
vmovaps
fmuls
pop
in
fimull
mov
gs
mov
ret
test
cmpsb
scas
inc
sbb
mov
push
fs
inc
pop
hlt
je
cmp
pop
sbb
xor
rorb
adc
sub
inc
mov
pop
mov
lahf
or
cld
loopne
add
adc
call
pop
out
sub
cltd
mov
sub
fs
push
push
inc
out
adc
add
inc
fidivrs
and
pop
fdivrl
sbb
adc
adc
mov
scas
lock
jne
data16
or
jo
add
pop
push
jae
ds
es
lret
dec
imul
dec
enter
jmp
inc
push
xchg
cmp
add
mov
adc
les
add
and
sbb
jo
test
gs
xor
ucomiss
cmp
jnp
fwait
add
mov
adcb
rcrl
movsb
xor
fcoml
inc
adc
fistpl
mov
xor
lods
mov
mov
dec
addb
cmpsl
mov
cmp
inc
and
jb,pn
or
cmpsb
popa
adc
es
sub
lods
lahf
xchg
jge
mov
inc
cs
out
lock
mov
fldcw
add
push
rcrb
loopne
xchg
mov
dec
mov
aam
mov
shrb
pusha
dec
adc
push
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
