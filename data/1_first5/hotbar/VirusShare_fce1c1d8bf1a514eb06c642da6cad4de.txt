fsubrs
call
in
mov
push
lea
push
mov
call
int3
add
lcall
cmp
ja
movzbl
jmp
add
int
sub
incl
push
adc
pop
ret
lea
push
dec
cmp
inc
dec
mov
insb
fiaddl
add
add
add
push
orl
bound
add
push
inc
jb
loopne
push
push
outsb
push
cmp
les
push
sbb
and
adc
cmp
out
in
incb
dec
in
out
stc
loopne
push
test
or
jmp
push
call
test
jne
pop
add
sbb
jmp
test
je
mov
push
and
pcmpeqd
cmp
jge
push
jae
dec
movzwl
lea
jne
sbb
pop
xor
outsb
and
mul
fscale
fcomps
shlb
pop
sbb
fistl
sarb
mulb
add
movsb
movl
inc
test
jne
mov
shr
inc
mov
je
push
push
push
out
xchg
fdivs
je
push
xor
xlat
pusha
aaa
add
insb
sbb
push
cld
push
xchg
in
mov
dec
decl
pop
mov
loopne
jns
fsubs
bswap
add
outsb
push
mov
jne
push
lea
push
fistps
into
inc
add
test
jne
sub
sar
inc
sarb
or
push
jg
fcoms
sbb
and
enter
inc
std
out
xchg
cmpl
scas
ds
adc
mov
push
out
mov
dec
push
pop
jne
mov
std
sbb
sub
push
mov
lds
inc
hlt
mov
push
pusha
jp
fbstp
push
add
rorb
cwtl
or
notl
cld
pop
out
inc
or
shlb
adc
mov
mov
adc
push
mov
in
lea
aad
mov
lea
push
push
sub
mov
hlt
xor
lods
jo
or
sbb
adc
js
inc
incl
sti
ljmp
xchg
lock
or
push
xadd
dec
test
jg
out
andb
fiadds
dec
mov
and
pop
jne
dec
cmpsb
mov
or
andb
add
push
pslld
pusha
xchg
cmp
mov
xchg
loopne
jnp
test
scas
mov
lcall
fcoms
fcomip
add
lea
pop
or
imul
dec
add
ret
testl
xor
das
pop
cmpsl
xchg
mov
enter
lods
fcoms
out
lock
or
inc
roll
sbb
dec
outsl
inc
fdivrp
test
nop
pop
xchg
mov
rcrl
or
aad
push
mov
push
mov
mov
jmp
dec
sahf
inc
aaa
xor
lahf
adcl
mov
or
loopne
in
pop
stos
test
je
test
movzwl
pushl
jg
int3
test
je
repnz
mov
sbb
jl
and
shr
daa
or
pusha
sbb
jecxz
push
sub
or
sbbl
mov
pusha
inc
dec
cwtl
push
jne
push
mov
push
rcr
ret
mov
pop
ret
mov
push
lea
lea
pusha
test
push
ficoms
push
cmpl
pusha
mov
sub
je
cmpl
les
sub
pop
js
add
mov
inc
hlt
pusha
sbb
call
push
xor
mov
pop
ret
or
or
pcmpeqd
sbb
iret
adc
mov
jnp
pop
mov
fidivrl
lock
mov
sub
or
jge
sub
push
sbb
mov
mov
mov
lock
pop
test
push
push
call
ret
fadd
sub
adc
es
or
xchg
popa
pop
push
inc
fbstp
mov
xlat
lock
dec
cld
sub
or
jge
mov
jecxz
pusha
push
mov
push
add
push
sbb
pop
push
sarb
testl
rorl
add
pop
mov
cmp
pop
xor
ljmp
adc
loopne
or
cmp
jge
jecxz
add
lock
cmc
add
or
or
inc
out
or
inc
or
rolb
or
inc
ret
test
pop
mov
push
adc
and
or
pop
out
inc
in
push
dec
or
push
out
or
jno
in
popf
ss
mov
dec
hlt
sub
sar
mov
xor
int
aaa
sbb
or
sar
and
sub
sbb
rclb
adc
cmp
ja
lea
cltd
add
or
and
lods
les
pop
sub
mov
aaa
or
and
nop
icebp
mov
jp
iret
jle
xchg
cld
add
ljmp
int3
ret
add
jge
mov
test
stc
and
jle
xorl
in
cmp
enter
mov
pop
lods
inc
arpl
pop
push
xchg
adc
hlt
push
scas
jle
dec
or
adc
push
sub
mov
test
jns
cmp
rorl
mov
dec
mov
adc
in
clc
pop
test
inc
add
inc
add
lea
mov
adc
dec
adc
mov
jns
ds
sahf
repnz
ds
hlt
sub
sarb
clc
add
or
fmuls
sti
std
lea
push
mov
mov
inc
fisubrs
cmpsb
or
or
mov
movhps
scas
add
lock
cmp
jge
sbb
mov
add
fidivrl
add
inc
or
jl
jo
add
or
mov
lea
mov
mov
mov
dec
sub
push
push
push
filds
mov
repnz
rorl
jb
je
shl
test
add
or
lds
cmp
jp
out
pop
mov
pop
mov
lahf
mov
enter
push
mov
aas
or
comiss
aas
adc
les
dec
adc
and
mov
out
aas
or
push
add
in
push
lods
loope
jg
out
jno
decl
push
lea
repnz
icebp
mov
ds
dec
and
incl
lock
or
pop
pop
rcl
jno
pop
add
cmp
nop
inc
sbb
add
repz
mov
cld
outsb
fsubrp
repnz
notb
loop
mov
call
loopne
push
xchg
rolb
shrl
sbb
movb
flds
int3
stos
inc
push
jg
or
jnp
jae
adc
mov
cmp
mov
add
cmp
out
popa
sbb
add
dec
jb
pop
lea
data16
sub
pushl
push
test
push
mov
fisttps
push
push
mov
xor
jg
add
pop
mov
cmp
sbb
loopne
shrl
xchg
mov
dec
mov
and
pusha
mov
lea
add
xor
je
add
cmp
inc
inc
or
adc
int3
sub
and
pop
lods
pop
pop
aad
rcrl
and
popa
mov
add
mov
push
xor
cmp
lea
data16
sbb
pusha
sbb
add
adc
lods
mov
pusha
in
js
hlt
mov
mov
push
cmp
add
push
sub
sub
and
jns
xor
push
jl
sub
sbb
mov
sarl
and
fs
addb
mov
push
sub
or
push
out
movl
inc
pop
ficoml
imul
popw
mov
cmp
movl
seto
gs
ss
jo
inc
testl
mov
divl
jl
addl
mov
xlat
jle
add
fstpt
nop
sub
mov
in
mov
push
mov
pop
fdivl
jnp
cmp
js
sbb
jb
jl
test
xchg
inc
cmpsl
mov
rorb
ja
lock
in
negb
add
stos
xchg
sbb
aad
cmpsl
data16
sub
icebp
mov
cmp
lock
movl
mov
pop
cmp
sbb
inc
or
lea
mov
cmp
xchg
mov
mov
add
add
add
xor
pushf
mov
insb
pop
fcos
and
jge
movl
or
jo
stc
cmp
inc
or
xor
xchg
jp
mov
outsl
out
push
jl
pop
fiaddl
xchg
jmp
inc
pop
sbb
add
and
not
pop
mov
clc
ljmp
lahf
mov
mov
aad
ja
sbb
ret
add
push
aas
pop
or
mov
dec
or
fsub
or
push
imul
iret
cmp
or
lea
aad
cmc
push
jbe
pop
cld
add
pop
in
mov
cmp
call
jo
or
sbb
cmp
mov
fdivl
pop
hlt
xor
in
adc
and
adcl
into
xchg
push
adcl
idiv
lea
rorl
mov
pop
into
cmpb
cmp
push
mov
sahf
out
cmpsb
push
inc
dec
sbb
and
pop
jge
adcb
aas
outsl
stos
pop
pushf
ljmp
lods
pop
or
pop
mov
push
mov
pushf
aaa
mov
mov
add
mov
and
cmp
push
mov
cmp
js
push
lods
icebp
fnsave
scas
push
jl
jp
lea
jbe
into
fcoms
repz
pushf
push
mov
in
mov
cli
jle
rcll
popa
adc
jge
xor
adc
lds
or
inc
mov
iret
xchg
xchg
call
jl
arpl
mov
sub
add
xor
or
or
mov
out
hlt
lahf
out
mov
call
icebp
push
mov
push
outsb
in
or
lock
push
aaa
mov
ret
push
xchg
cltd
das
dec
add
pop
mov
ret
into
adc
fnstsw
push
sub
xchg
mov
mov
lods
xor
repz
lods
adc
push
gs
dec
and
mov
xor
adc
adc
jbe
jmp
je
push
in
jl
pop
cmp
jne
imulb
enter
dec
addr16
test
hlt
cltd
or
pop
in
out
and
in
and
lock
xor
push
add
push
add
lds
jb
jl
je
mov
aad
push
xchg
fisubrs
or
push
xchg
and
fs
sahf
lods
popf
xor
mov
mov
les
das
enter
pop
mov
lea
jae
pushl
pop
and
xor
fsub
insl
inc
xchg
pop
pusha
add
mov
and
or
mov
js
pop
adc
ret
fyl2x
push
call
adc
orb
or
xchg
add
loopne
loopne
pop
jle
push
call
adc
shr
sbb
adc
pop
pop
and
loopne
lea
sbb
push
push
mov
push
and
push
sbb
push
pop
and
subl
and
jnp
mov
mov
adc
pop
jnp
mov
adc
mov
xor
sub
xchg
rcrl
mov
push
push
xchg
sbb
xchg
ret
add
push
lock
push
sbb
pop
push
jp
mov
cmp
nop
or
rolb
cmpsb
ret
add
ja
mov
pop
push
pop
cmp
mov
push
pop
je
push
and
cld
xor
sbb
pop
lods
sbb
inc
or
cmp
push
fcoms
jo
scas
xor
xchg
add
sbb
sub
lds
sub
add
push
cmp
lock
dec
aaa
dec
push
fmull
shlb
adc
ret
and
or
add
mov
fadd
pusha
and
pop
push
add
int3
xor
inc
sub
mov
add
dec
or
jge
cmp
fwait
ret
cmpl
push
xor
jmp
es
outsb
jmp
ret
or
mov
popa
ret
or
mov
push
and
mov
dec
cmp
xor
and
xor
sbb
xor
std
mov
xor
sbb
dec
shlb
xchg
daa
mov
mov
sarb
jb
push
je
gs
or
push
sbb
sub
fldt
add
pop
je
cmp
in
and
adc
arpl
jge
adc
jmp
nop
xchg
adc
adc
loop
repnz
sub
adc
lret
les
mov
adc
and
push
addb
pop
sub
adc
loopne
cmp
sbb
inc
bound
mov
cwtl
or
push
push
jo
sub
fisttpl
sbb
lret
jnp
jl
and
mov
mov
pop
pop
xor
nop
sub
popf
sub
mov
movsb
xchg
enter
int3
sub
sbb
test
call
movsb
adc
sbb
adc
mov
call
push
push
loopne
push
rorl
sbb
fidivrs
rcrb
push
fcoml
adc
cld
add
fstps
repz
push
and
pop
call
mov
cmpl
sub
add
loopne
push
out
adc
test
adc
jmp
pop
call
xchg
sbb
in
in
lahf
ja
xchg
loopne
aad
add
insb
js
outsb
cmp
loopne
aam
mov
test
mov
nop
dec
ds
sbb
push
sub
mov
lods
movb
ja
cmp
fiadds
and
mov
mov
lret
sub
sub
or
jge
mov
cmp
arpl
cmp
pusha
lea
push
push
lret
sub
popl
leave
mov
sub
aam
pop
jmp
lea
mov
nop
sub
jne
adc
lods
shlb
outsb
dec
mov
sub
sub
add
push
push
in
and
and
icebp
loop
cmp
push
and
add
popf
je
test
imul
or
lret
jle
test
cmp
mov
mov
pop
adc
sub
inc
or
push
jg
idivb
cmp
jne
test
je
sbb
mov
jne
pop
roll
sub
cmpsb
add
add
pushl
lret
bnd
ja
pusha
add
add
push
add
jle
inc
loopne
je
andl
push
ds
cmp
lock
movb
jb
adc
adc
popf
add
enter
push
xchg
mov
xor
imul
fisubs
inc
adc
mov
sbb
test
lahf
and
sarl
pop
jl
shll
push
mov
loop
pop
sbb
pop
int3
gs
push
push
lock
mov
dec
repnz
mov
jo
and
push
or
mov
or
jb
and
lea
sbb
xchg
movsb
mov
addb
test
subb
or
addl
push
add
inc
movsl
cmp
xchg
lods
or
adc
sub
stos
lods
add
cmpsb
cmpsb
nop
push
movsl
sbb
imul
mov
add
sbb
push
sbb
int3
dec
push
in
push
int3
sbb
test
cwtl
loopne
dec
jo
sahf
mov
xchg
insb
add
sub
push
adc
xchg
or
fs
push
in
enter
inc
hlt
xor
jp
push
push
das
repnz
pop
dec
jmp
sahf
aaa
add
scas
sbb
int
xor
mov
mov
mov
movsb
and
and
adc
ds
pop
xchg
xchg
pushf
adc
jb
mov
xchg
movsb
adc
mov
sbb
adcb
adc
ss
sahf
jo
cmp
add
sub
rorl
movsl
pop
or
add
sarb
adc
mov
mov
imul
mov
mov
sbb
pushw
push
jo
loopne
test
subl
loopne
jl
sbb
inc
mov
pusha
iret
out
and
push
sbb
push
and
push
rorb
push
sbb
pop
sbb
pusha
test
pop
imul
cmpl
imul
mov
jo
and
adcb
mov
sbb
rcrb
sbb
mov
js
int3
and
and
fidivl
pop
repnz
cmp
lea
in
lea
jbe
push
sbb
out
lods
cmc
inc
or
out
cmp
and
or
je
xchg
insl
test
and
push
dec
dec
jmp
dec
mov
in
lret
fdivs
bound
pop
add
fstpl
ret
jmp
xor
shl
js
mov
test
and
shlb
cmp
out
xor
and
push
inc
pop
pop
sti
mov
sarl
jb
lahf
movl
and
ficoms
arpl
ficompl
test
cmp
iret
pop
pop
inc
aaa
outsb
and
test
xor
repz
sbb
fildl
int
mov
arpl
cmp
mov
movsb
fsub
sub
daa
add
out
sti
mov
je
pop
jl
fmul
pop
loope
add
pop
xchg
xchg
add
loopne
cmp
lods
scas
in
loopne
dec
sbb
sbb
mov
adc
sbb
or
xchg
adc
das
mov
adc
fcom
xchg
mov
and
mov
mov
inc
mov
pop
mov
jl
cmp
mov
inc
pushf
xlat
or
je
das
loope
fmul
ret
dec
ret
inc
movsl
mov
push
jl
sub
shrb
jne
outsl
jge
dec
xor
adc
mov
lods
adc
xor
ss
push
pop
inc
or
adc
push
sub
outsl
punpckhdq
jns
or
jae
inc
xor
pop
xchg
dec
pop
or
adc
push
push
fdivs
pop
outsb
mov
scas
pop
jmp
mov
add
adc
jmp
dec
gs
mov
in
pop
test
jno
enter
shll
iret
xacquire
adc
int
cmp
mov
icebp
adc
cmp
sbb
je
xor
push
enter
pop
dec
jae
sub
jb
sbb
rcrb
cmp
xor
add
pop
jecxz
adc
xchg
mul
add
fldcw
scas
xacquire
sbb
hlt
jns
into
subb
push
cmc
roll
int
mov
pushf
cmpb
xor
mov
mov
dec
sti
jnp
mov
nop
add
xchg
adc
shll
cmp
jp
stos
push
pop
add
lods
or
clc
loopne
loopne
mov
or
je
clc
push
dec
inc
loopne
mov
push
lock
mov
sahf
or
je
push
lahf
orb
jo
int3
add
aam
and
add
pop
adc
and
inc
xor
jae
inc
add
in
or
pop
xor
push
pushf
iret
fsubl
cmp
push
and
scas
sbb
jne
cmp
xchg
sub
in
js
test
mov
xchg
sbb
ret
adc
push
ficoms
and
jno
int3
je
add
jge
into
subb
push
data16
lret
inc
and
xchg
push
pop
jns
sbb
and
mov
shlb
mov
or
xor
mov
das
mov
add
cwtl
cmp
sbb
test
std
out
lcall
cmp
add
test
je
ds
adc
pop
xlat
push
pushw
push
inc
loope
adc
xor
sub
xchg
flds
std
mov
sub
sub
shll
ret
popa
in
and
add
push
loope
or
add
push
pop
sub
xor
test
and
fsts
push
and
sbb
pop
pop
mov
int3
pop
mov
inc
outsl
popf
push
fsubr
xchg
in
test
jl
ja
loopne
inc
and
loopne
sub
test
fldcw
cmpsl
call
sub
inc
push
or
sbb
xor
daa
sbb
pop
or
loope
popf
mov
adc
or
add
add
and
cmp
test
dec
and
mov
sub
push
and
stc
fcoms
sub
test
sub
lcall
sbb
scas
out
xor
push
push
std
inc
add
push
inc
popf
cmp
lret
dec
or
push
ret
mov
addb
adc
jg
xor
mov
sub
mov
mov
sub
inc
rcll
sbb
and
and
jb
jo
adc
lods
cmp
andl
jecxz
pop
and
jo
push
into
in
jnp
push
nop
ljmp
add
pushf
mov
dec
pop
add
sub
xor
or
psubw
add
adc
mov
js
mov
adcl
cmp
pop
insl
mov
lret
xchg
bound
mov
mov
and
cmp
faddl
test
pcmpgtb
nop
sub
and
cmp
add
hlt
jmp
mov
mov
pop
enter
idivb
xor
jnp
scas
sbb
orb
test
aam
mov
push
cmp
add
fs
jno
mov
or
inc
les
ja
mov
iret
mov
stos
data16
pop
jo
mov
and
pop
stc
jb
xchg
dec
add
jmp
in
pusha
sbb
ss
cmp
aad
cmpl
and
sbb
inc
pop
orl
mov
insl
addl
push
ret
and
sub
inc
mov
setl
sub
pusha
repnz
sbb
dec
testb
fisttpl
and
aas
and
sbb
or
push
scas
sub
jne
in
das
inc
repz
pop
mov
repnz
adc
inc
sub
test
or
jb
and
orb
pop
jno
or
push
aad
mov
loope
fistpl
inc
jne
loopne
mov
adc
lret
cmc
cmpsb
decl
xor
and
sub
sbb
pop
cmpl
xor
or
mov
imul
mov
ret
push
aas
js
push
aaa
adc
or
add
or
dec
push
cs
jp
pop
loopne
aad
pop
cmp
jne
push
mov
outsb
add
push
jp
mov
jmp
jmp
cmp
mov
cmp
mov
arpl
and
cwtl
cmp
jge
mov
pop
je
push
lock
mov
fists
and
adc
pop
jl
outsl
mov
loopne
mov
or
dec
stos
push
movsl
test
adc
add
mov
enter
mov
xor
push
jns
add
push
mov
sti
add
inc
in
push
push
add
mov
and
in
pop
in
add
jge
sub
ret
mov
or
push
adc
int
js
test
call
aaa
cmp
call
in
js
mov
inc
mov
inc
and
cmp
jge
sbb
leave
pop
jo
adcb
adc
push
push
adc
push
jne
or
je
sbb
adc
out
cmp
call
repz
dec
pusha
sub
in
sub
sbb
lsl
out
add
aaa
xor
nop
jne
shr
push
add
jae
mov
add
or
add
adc
jl
add
push
jecxz
cmp
fisubrl
dec
add
std
mov
add
shl
mov
shlb
cmpb
es
sub
and
xor
adc
sbb
jle
pop
or
fdivrl
mov
jo
mov
je
sbb
inc
mov
push
push
call
repnz
xchg
clc
test
dec
fwait
dec
in
push
mov
cmp
push
mov
fisttps
xorl
mov
xor
mov
jg
rol
xor
js
jo
xchg
or
ror
add
mov
dec
aam
fsubs
lods
insl
stos
push
fadd
push
and
dec
in
xor
xor
es
in
test
mov
add
jno
inc
push
pop
pop
sbb
roll
or
jle
loopne
nop
push
push
sti
aas
shlb
mov
cmp
je
pusha
xor
xor
adc
or
add
inc
adc
mov
mov
and
mov
add
aaa
xorl
adc
dec
sub
jp
enter
pop
mov
hlt
xor
xor
push
adc
testl
sub
ljmp
enter
inc
out
add
imul
jp
fcmove
adc
faddl
xchg
insb
push
push
and
les
ret
je
sub
sar
push
jle
xchg
jno
jns
add
push
push
mov
xor
adc
sub
inc
imul
add
cmp
test
fsubrs
fcoms
sbb
mov
xchg
push
push
mov
push
pop
mov
xor
jmp
aas
xor
sbb
dec
mov
sbb
ret
xchg
xchg
or
ret
ret
pop
fstps
sahf
ret
xor
sbb
shlb
fbld
fdivl
add
add
pop
call
lret
xor
and
ror
movb
jge
je
or
inc
popf
insb
sub
loope,pn
and
mov
sbb
outsl
fnstcw
jne
outsl
push
aam
in
pop
push
sub
mov
test
cmpl
mov
ss
in
sbb
rorl
mov
push
repnz
sbb
adc
ffreep
lcall
push
add
in
test
push
push
ja
mov
aas
mov
dec
loope
xor
xor
sar
or
inc
aam
mov
nop
sbb
jmp
push
arpl
sub
lea
outsl
clc
add
adc
adc
adc
out
adc
xor
jne
or
mov
xchg
inc
jecxz
push
negb
push
push
push
dec
or
lds
sbb
mov
push
and
mov
mov
push
stos
pop
clc
mov
or
adc
mov
cli
mov
inc
ret
push
inc
fldl
and
jg
jns
push
mov
stc
pop
fidivl
pushf
clc
add
fldt
pop
sub
in
std
mov
enter
les
lock
xchg
cmp
xor
push
mov
xchg
add
push
jmp
fs
aad
sbb
or
shll
push
or
inc
pushf
jg
cmpsb
pop
or
push
pop
pop
push
pop
xchg
fcoms
cmp
sbb
lock
jo
dec
mov
test
aam
xchg
pop
push
push
aad
jecxz
adc
mov
inc
mov
pop
or
pushf
test
pushf
je
leave
jne
lea
mov
aad
popa
cli
cmpsl
pusha
call
loopne
lock
mov
in
out
jle
dec
add
dec
xlat
data16
push
push
bound
jbe
in
add
in
push
adc
jo
xor
inc
jnp
pop
fs
add
in
push
xor
and
inc
in
or
out
add
rcrl
pop
mov
pop
sub
adc
sbb
push
sub
add
mov
xchg
mov
lgs
and
add
mov
jb
roll
mov
add
push
adc
adc
mov
mov
jne
pop
mov
out
inc
rclb
pop
enter
jle
fildl
adc
movsb
sbb
adc
les
out
pop
xor
in
fisttpl
mov
leave
fdivl
mov
cmp
or
lea
add
js
cli
sbb
insl
es
mov
sarl
movzbl
mov
shr
adc
push
push
rcll
push
test
rcll
cmp
dec
and
mov
insl
xchg
shlb
js
shlb
or
xchg
in
cmp
rclb
add
push
sbb
xor
pop
aaa
pop
lds
jecxz
mov
sub
inc
sbb
pusha
rcll
mov
mov
call
add
sub
in
lods
js
push
push
push
push
mov
movl
pop
cmp
imul
sub
js
jg
mov
movb
test
xchg
pop
inc
cmpl
mov
dec
push
mov
or
mov
orl
jo
add
inc
out
adc
add
xor
inc
sbb
inc
jp
repz
push
mov
mov
pop
mov
and
aaa
and
push
or
push
adc
arpl
ret
aas
sarl
mov
in
sbb
jne
lcall
xor
cmp
je
xchg
pop
dec
test
sarb
or
or
pop
xor
push
cld
jmp
pop
push
add
add
loope
or
add
push
fsts
push
jbe
cmpsb
adc
inc
jmp
flds
sti
aaa
jecxz
xor
add
je
add
jne
jb
into
push
pop
loop
hlt
jle
mov
pop
imul
mov
imull
xor
mov
idivl
push
sub
test
insb
push
inc
mov
sbb
in
pop
pusha
fisubrs
fcomp
insl
rolb
sbb
inc
rol
testl
jle
fsubrl
into
sub
add
sar
sub
jge
or
test
push
divl
ja
add
push
pop
ja
ss
shr
pusha
fmuls
jbe
out
and
adc
rcrb
mov
dec
popa
cmp
push
or
pop
sub
sbb
ss
push
add
add
add
aam
movsb
popa
cmc
cmp
ret
loopne
int
pop
inc
pop
call
jecxz
fmul
inc
push
loope
adc
mov
jo
fmull
rcrl
mov
enter
imul
scas
xchg
mov
sub
into
andps
jl
cwtl
ret
pop
dec
pusha
add
push
cmp
dec
mov
add
and
sbb
push
push
movsb
scas
sbb
sub
push
pop
mov
push
negb
outsl
jne
xor
push
pop
push
jo
cld
lods
sbb
xchg
movsl
xsha256
adc
std
pop
sti
mov
pop
jne
jb
or
popa
popa
lahf
inc
jmp
fimull
fnsave
jo
sbb
mov
mov
aam
movsl
scas
in
int3
jmp
rol
mov
mov
out
addr16
pxor
mov
mov
pushf
sahf
add
outsb
sbb
pop
jb
cmp
ret
lock
adc
or
iret
idiv
sarb
jne
inc
pop
in
xor
adc
sub
dec
pop
cmpsl
lods
or
sbb
ljmp
cwtl
lods
or
mov
sub
sarb
pop
lock
push
push
push
pop
sbbb
je
out
jo
andb
pop
loope
pop
pusha
ret
imul
cmpsl
ret
addb
jp
and
mov
mov
jne
movsb
mov
daa
js
sub
inc
hlt
add
push
push
mov
or
inc
test
adc
popa
pop
leave
ret
mov
ret
xchg
xchg
or
rclb
or
divb
add
pop
in
add
in
enter
lds
jl
mov
aad
mov
mov
cmp
ss
xchg
rcrb
dec
pop
add
loopne,pn
movsl
sbb
xchg
call
mov
jp
xor
cmp
adc
add
movb
scas
or
dec
cmp
fistpll
fsubrl
add
xchg
into
aaa
jb
insl
xchg
inc
xchg
cmc
cmp
rclb
add
arpl
add
xor
sbb
add
adc
pop
push
fsub
pop
add
in
sbb
jg
inc
inc
inc
xor
pop
aam
sbb
movsl
mov
test
test
jge
jno
test
add
and
test
icebp
xor
pop
jg
jmp
cmp
inc
inc
xor
inc
cmp
push
dec
hlt
fwait
sub
lcall
insb
jecxz
ljmp
push
sub
stos
out
cwtl
push
and
inc
push
push
adc
cld
lahf
popa
mov
inc
ficoml
or
and
fidivrs
cmpsl
mov
jg
test
fiaddl
push
lods
sub
nop
push
aad
loopne
fistps
cltd
and
out
cmpsb
or
cltd
push
add
push
sbb
mov
ds
cmp
mov
jmp
xchg
cmc
lcall
jge
rclb
aam
adc
add
pop
push
rol
push
test
inc
addr16
imul
or
lret
dec
jle
icebp
cs
pop
inc
push
lea
ljmp
test
fiaddl
aad
subb
add
push
push
cli
dec
fsub
xchg
and
iret
subl
adc
and
adc
inc
enter
add
inc
adc
mov
pop
insb
js
rorb
or
ss
int3
sub
or
pop
sahf
insb
xlat
cmp
leave
or
loopne
imul
mov
out
fmul
jge
push
add
outsl
add
mov
or
inc
xchg
mov
cmp
lea
jbe
inc
insb
mov
mov
cmp
push
jbe
xchg
adc
test
mov
daa
inc
gs
cmp
test
xchg
aam
pop
hlt
movl
xchg
mov
ret
aas
enter
jo
jo
or
mov
add
add
pop
sbb
cmp
push
mov
mov
dec
in
nop
fsubl
dec
dec
cmpsl
jae
fnstsw
mov
fsubr
dec
sbb
les
mov
movsb
push
fsubrp
dec
or
out
repz
pop
and
push
inc
xor
xor
xchg
cmp
cmp
inc
push
push
cmpsb
out
push
ffreep
test
add
insb
jo
cld
mov
rcrb
fdivrs
fbstp
pop
jo
test
lea
daa
jno
lea
imul
sbb
bound
in
or
ret
adc
push
dec
jp
fiaddl
orl
mov
mov
enter
pop
pop
movsl
push
dec
and
and
notb
and
mov
push
lret
dec
add
aam
adc
push
sub
jns
dec
inc
jp
adc
mov
movsl
adc
push
cmp
push
cmp
inc
pop
fwait
insb
and
pop
inc
in
xor
dec
popf
ja
repnz
bound
cmp
popa
push
push
xor
xchg
fisttps
cmp
sbb
nop
jecxz
aas
add
fistps
test
push
sbb
pusha
rol
and
push
inc
sbb
fs
insb
movsb
repz
fwait
adc
push
pop
adc
in
cmpsl
out
mov
pop
inc
sub
cmp
add
adc
push
mov
adc
cmp
stos
sbb
sbb
sub
rcr
and
das
nop
sbb
xor
push
jge
sbb
adc
cli
add
and
sbb
push
push
and
adcl
mov
imul
notb
sbb
xor
mov
daa
push
repz
cmp
or
xchg
push
adc
push
pusha
rolb
xor
test
in
jb
fsubs
add
inc
pop
adc
cmp
sbb
sbb
cmp
filds
ret
adc
test
rcrb
popa
loop
dec
add
push
xchg
add
dec
aas
test
xor
adc
daa
add
cs
xor
jl
push
lret
add
mov
icebp
inc
push
dec
sbb
cmp
pop
pop
inc
sbbb
mov
test
ret
mov
inc
je
mov
jb
into
fldenv
pop
mov
pop
sbb
inc
stos
nop
adc
aas
xlat
adc
pusha
xchg
mov
aas
inc
push
test
int3
dec
add
shr
add
add
pop
xchg
fisubrl
gs
sbbl
imul
rcrb
or
enter
sbb
xor
xor
dec
push
push
dec
inc
push
imul
insb
jl
jmp
test
adc
xor
js
js
rcrb
dec
sbb
xchg
data16
mov
movsl
scas
and
and
dec
cmp
adcl
sbb
sub
mov
dec
mov
bound
pop
hlt
je
insb
sub
add
adc
push
test
fwait
and
or
add
xchg
stos
push
dec
mov
mov
inc
nop
or
push
mov
je
push
insb
lea
sbb
jo
push
sahf
add
dec
push
jmp
inc
imul
es
add
add
ret
dec
pop
sub
xchg
xchg
dec
outsl
mov
mov
dec
punpckhbw
in
inc
and
adc
test
rclb
dec
mov
add
sbbb
lahf
jmp
xchg
enter
add
or
adc
loopne
nop
ret
add
add
xor
or
inc
push
inc
xor
out
adc
push
mov
out
push
lock
xchg
inc
or
pop
jno
fbstp
sbb
mov
adc
ret
pop
mov
dec
push
push
push
js
dec
sub
icebp
pop
inc
xchg
fwait
icebp
imul
test
testb
xor
fs
aaa
inc
and
push
inc
sub
dec
push
lcall
int
xchg
xchg
adc
sub
into
sub
cmpsb
imul
js
fildl
jmp
push
pop
dec
lea
adc
dec
xchg
pop
inc
addr16
sahf
lret
sbb
sbb
adc
push
clc
adcl
icebp
push
fadd
jl
push
fmull
pop
pop
hlt
push
jmp
mov
cld
pop
mov
push
xor
sbb
arpl
or
fsubrs
rorl
xor
fstl
sub
and
push
push
mov
sub
push
sbb
pop
and
xchg
addl
push
and
xor
aas
dec
pop
dec
and
rorb
or
adc
loope
push
push
cltd
movlhps
sub
add
inc
adc
sahf
or
test
sub
mov
inc
addb
add
dec
pop
and
jb
lahf
js
pop
jo
jb
jno
test
rclb
dec
sub
jmp
or
push
pop
jo
mov
fs
xchg
xor
adc
xchg
inc
push
sbb
sbb
xchg
or
push
mov
or
leave
jne
push
mov
mov
pusha
xchg
cmc
and
je
mov
movsb
shrb
adc
add
sub
add
jne
mov
xor
adc
mov
clc
daa
push
sbb
add
push
ds
cmpb
push
adc
inc
sub
xchg
shrb
movl
inc
stos
dec
adc
add
shlb
sbb
jp
clc
imul
and
ljmp
sbb
dec
add
mov
dec
adc
filds
or
or
xchg
cmpsl
imul
inc
inc
or
push
fwait
inc
inc
sbb
je
and
push
cmc
push
adc
pop
sbb
or
decl
xchg
dec
mov
sbbb
or
jno
push
lea
pop
xor
jo
insl
dec
xor
or
xchg
cs
imul
or
inc
mov
fldt
out
push
push
or
aas
adc
or
loopne
mov
adc
sbb
and
jg
fsubs
xchg
and
aas
and
xchg
sbb
mov
aas
sbb
add
dec
jecxz
jg
or
test
sbb
pop
lea
cmp
pop
xor
or
sbb
movsl
fldt
xchg
test
jbe
pop
add
cmp
je
or
sti
and
sbb
test
inc
inc
push
push
pop
sbb
mov
mov
sub
sbb
mov
mov
xlat
jge
sub
ljmp
add
adc
cmpb
cli
dec
or
addr16
jmp
mov
shr
add
jne
cmc
mov
add
cmp
mov
adc
insb
hlt
ret
fidivl
xchg
push
sbb
mov
or
and
loopne
ja
je
pushf
jmp
sbb
sbb
mov
push
mov
adc
shrl
decl
rorb
js
mov
jnp
mov
xchg
cmp
cmp
push
inc
dec
dec
inc
lret
jg
cmpsl
jge
sub
lods
mov
outsl
int3
push
push
add
push
in
mov
stc
or
jae
orb
ror
ret
fdivr
mov
shrl
rorb
mov
fistps
pop
push
mov
ret
sub
dec
pop
ret
mov
inc
jp
fstps
leave
and
mov
mov
insb
mov
add
sub
andb
sub
mov
or
or
int3
ret
cmpsl
cmp
clc
sbb
pushf
mov
movsb
mov
fcmovnu
push
push
xchg
adcl
mov
icebp
jmp
push
push
mov
mov
out
movl
sahf
lock
mov
in
loope
test
xchg
sub
ja
fnstenv
int3
orl
pop
adc
xor
sti
cltd
push
push
scas
mov
and
clc
sbb
mull
jmp
or
pop
push
mov
mov
adcl
inc
sbb
and
cmp
test
push
pusha
add
adc
adc
sub
pop
mov
rorb
fsub
lcall
sbb
mov
cs
rcrl
test
mov
testl
pop
hlt
lcall
sbb
ficomps
adc
jae
push
jmp
xchg
popf
popf
jmp
pop
mov
cwtl
dec
shrb
push
jl
outsl
mov
call
push
pop
push
pop
jne
cmpl
push
lea
xchg
xchg
dec
cmp
and
dec
cld
sub
inc
cmp
mov
in
add
pop
ret
pop
inc
je
mov
pop
or
in
sbb
into
inc
pop
or
sub
pop
and
xor
sbb
xchg
jbe
scas
or
insb
jp
je
lea
sahf
leave
sbb
push
aam
push
ja
pop
ss
push
fwait
xor
movl
cmp
in
orl
lods
push
inc
or
add
test
dec
cmpsl
push
push
jg
aam
popa
pop
dec
adc
dec
adc
inc
out
push
leave
fistps
inc
push
fs
lock
pop
jne
movl
test
lock
jle
inc
and
or
jmp
push
dec
inc
cmpsb
sahf
leave
xor
mov
cmovp
decb
mov
scas
pop
or
add
cs
sub
call
insb
or
xchg
addl
outsb
push
fsubrl
in
es
mov
clc
lods
adc
xor
lods
dec
add
sbb
aad
xchg
inc
dec
rorl
js
xor
xorb
adc
mov
popf
in
pop
sub
aaa
ret
xchg
xchg
pop
clc
dec
ds
movzbl
inc
and
sub
mov
sub
rorl
push
pop
dec
adc
mov
inc
sar
popf
xchg
push
lea
and
enter
inc
inc
ds
add
lret
jl
inc
test
sbb
mov
add
sub
or
cmp
into
dec
jl
push
aam
dec
mov
imul
sub
sub
stos
xor
outsb
mov
push
inc
test
xlat
cs
xor
imul
int3
push
pop
add
movsb
repnz
fcomps
outsb
shlb
dec
jmp
jg
or
add
fcomip
mov
inc
icebp
add
int3
or
and
rol
imul
inc
ljmp
je
mov
clc
sbbb
ret
push
push
jl
adc
push
adc
push
lods
xor
mov
shrb
les
fcomp
sbb
jne
and
pop
mov
add
or
int3
push
push
mov
xchg
dec
dec
lock
scas
push
dec
mov
push
push
mov
dec
mov
or
popf
sub
jne
je
mov
adc
shrl
xchg
mov
push
shll
jo
jbe
dec
sub
cmp
push
mov
add
cwtl
dec
add
cmp
es
xchg
sbb
movsl
filds
movsl
cmp
and
push
dec
dec
lock
js
enter
sub
adc
push
and
push
iret
push
pop
adc
cmp
cmc
or
add
and
or
push
lock
lcall
cmpl
sub
inc
mov
mov
jle
mov
loopne
fistps
inc
adc
out
add
push
inc
mov
inc
jb
push
scas
jg
add
pop
out
or
xchg
push
push
xor
push
push
push
dec
add
dec
adc
cmp
sub
push
push
pop
xchg
stos
adc
add
mov
and
fmull
pop
mov
mov
push
fdivrs
sub
in
popf
mov
jp
mov
push
and
test
or
and
dec
pop
gs
pop
sub
push
popa
and
dec
adc
pop
adc
or
das
in
inc
mov
dec
je
push
push
scas
call
arpl
mov
sbb
sarb
test
jg
mov
mov
xor
and
ret
xor
lods
jo
pop
leave
and
daa
cmc
or
push
mov
call
into
push
add
cltd
sbb
inc
inc
push
mov
in
ss
cmp
ja
mov
pop
push
adc
dec
fdivrs
into
addl
sbbl
scas
dec
pop
sbb
clc
das
add
ret
jp
xchg
dec
add
aaa
mov
dec
ret
and
pop
mov
add
sbb
gs
imul
jl
es
pop
add
clc
push
xchg
and
je
call
movsb
xor
jno
xchg
fldz
ds
sbb
rcrb
pushf
arpl
cmp
imul
pop
sbb
repnz
lea
bound
cs
xchg
sub
add
inc
inc
jbe
inc
outsb
or
fdivrp
das
ret
ja
icebp
cmp
xor
in
push
jne
in
xchg
mov
clc
mov
repz
pop
fildl
push
dec
cmp
daa
pop
inc
popa
les
add
rcr
int
xorb
je
jbe
shrl
popa
mov
pop
dec
cmp
push
adc
and
stc
lea
divl
mov
and
jo
inc
arpl
lea
push
sbbl
add
jno
jne
por
jbe
mov
orb
and
imul
cmp
rolb
dec
dec
fmuls
insl
movsl
mov
inc
push
push
pop
mov
push
pop
sub
push
sub
xor
add
insb
call
cmpsl
loopne
push
or
ljmp
cmp
push
outsl
add
push
xor
sbb
jmp
xchg
push
mov
mov
dec
inc
inc
add
imul
fcoml
inc
push
xchg
js
and
xor
mov
push
adc
xor
or
or
lahf
popf
imull
shl
test
push
push
enter
andl
inc
out
lea
adc
addb
mov
es
clc
mov
inc
out
shrb
adc
cmp
sarl
inc
fldl
fmull
cmp
push
push
push
xchg
mov
pusha
pusha
jo
add
mov
in
add
push
push
mov
sbb
sbb
adc
push
into
mov
mov
daa
inc
push
movsb
cli
test
lds
push
lods
and
aaa
cwtl
pop
inc
cmp
add
jbe
notb
insb
das
std
cmp
sbb
in
dec
ds
daa
or
test
mov
fnstenv
xchg
mov
push
mov
jo
loopne
outsb
xor
sub
stc
repnz
cmpsb
icebp
dec
or
adc
push
cli
es
loopne
mov
scas
mov
inc
test
cmp
or
enter
mov
test
leave
dec
xor
sbb
mov
xor
push
dec
mov
cmp
scas
or
outsl
test
ljmp
jns
xorb
mov
sub
push
jle
push
add
dec
into
je
dec
insl
das
jmp
ss
not
xor
mov
sub
add
push
pop
adc
push
inc
loopne
js
int3
cmp
xchg
into
xor
push
and
mov
push
mov
es
push
push
dec
fs
lea
xchg
mov
sub
pop
sub
jle
jmp
imul
push
xor
orb
orl
shlb
adc
leave
pop
add
shlb
xchg
inc
int3
mov
mov
hlt
xor
add
mov
cltd
and
incl
cmp
mov
sar
adc
adc
sbb
lock
aaa
loope
inc
jge
mov
dec
bound
imul
sar
mov
loop
push
shr
add
mov
imul
push
pop
out
pop
leave
mov
mov
xor
mov
add
imul
in
cwtl
push
shrb
push
jmp
cmpl
scas
into
int3
bnd
mov
push
mov
fwait
js
push
sub
dec
in
sahf
inc
sub
xor
lock
adc
add
add
in
lea
sub
int
jmp
xor
hlt
data16
int3
in
inc
call
jp
pop
add
mov
jo
sub
orb
xchg
shlb
push
add
or
jnp
cmpsl
pop
stos
adc
insl
mov
push
out
pop
pusha
js
cmp
mov
and
dec
cli
sub
je
addr16
dec
push
mov
lea
cltd
idivl
jle
add
inc
cli
testb
push
mov
or
mov
js
fcomps
insb
xlat
adc
xchg
cmpl
arpl
adc
test
inc
cmp
jbe
jbe
add
jle
stos
sbb
mov
mov
incb
pushf
orl
sub
cmp
xor
out
or
sub
stos
es
mov
mov
jmp
jle
rorb
fildl
fidivl
jmp
xchg
fndisi(8087
mov
ljmp
mov
push
jns
faddl
sbb
mov
dec
ljmp
enter
push
fdivrp
fsub
orl
xchg
lea
add
jg
je
cmp
mov
inc
ret
inc
or
cmp
out
fsubs
pop
daa
add
and
bound
add
jne
cmp
mov
xchg
sub
les
pop
mov
ss
lea
shrl
clc
sahf
mov
sahf
add
cmp
jp
push
push
xchg
decb
sbb
fwait
xor
xor
je
jge
popl
cmp
xor
sbb
shll
pop
cmpsb
lcall
xor
adcl
aaa
insl
cltd
rolb
ret
push
mov
inc
adc
sub
cwtl
xor
sbb
pusha
xor
imul
loop
mov
lock
sbb
push
mov
xor
push
pop
sbb
adc
mov
nop
and
jmp
bound
adc
repz
fdiv
mov
push
sbb
enter
test
adcb
push
dec
and
jmp
inc
adc
fnstenv
jg
pop
or
inc
or
cs
mov
adc
add
test
push
jmp
mov
xchg
ret
push
or
scas
push
add
adc
adc
xor
js
iret
shr
adc
cltd
incb
add
inc
xor
scas
sbbl
adc
in
mov
lock
and
sbb
test
js
mov
jle
pop
pop
int3
ja
sbb
jmp
push
push
push
sbb
push
fcoms
dec
add
das
fildl
imul
pusha
pop
add
sbb
lahf
adcb
or
push
shrl
inc
std
inc
add
orb
adc
push
fs
rcrb
jmp
fsubl
bound
mov
lea
pop
jnp
add
sub
loopne
not
rorb
aam
les
mov
leave
iret
leave
inc
decl
lret
adc
adc
push
xchg
popa
mov
add
jo
and
sbb
or
ret
lahf
or
or
cwtl
inc
lret
and
or
mov
pop
and
sub
pop
call
cmp
setb
test
xor
call
cmp
setae
out
add
lock
pop
push
repnz
adc
dec
or
or
or
sub
mov
inc
cltd
mov
insl
pushf
sub
iret
sub
cmp
or
fnstcw
out
cli
ficoml
adc
add
loop
sbb
pop
int3
inc
testl
add
or
mov
sbb
pop
or
adc
push
dec
loopne
mov
or
xor
adc
insl
push
push
popa
sbb
sbb
loop
push
xor
out
inc
cwtl
sub
cmpsb
sub
and
push
inc
push
cmp
add
aaa
dec
or
add
ss
and
mov
fbld
les
enter
hlt
iret
rclb
xor
xor
shrb
popa
in
add
loop
fistpll
add
je
cmp
dec
push
jg
add
add
inc
stos
stc
aam
sub
add
cmpsl
out
pop
adc
gs
sbb
call
insl
push
sub
pushf
mov
pop
inc
mov
sub
bound
mov
add
mov
cmp
jne
test
je
mov
cmp
rorb
out
je
fsubs
jne
push
je
ja
jge
fdivs
es
cmpsl
pop
jmp
ficomps
xchg
mov
push
inc
inc
mov
jne
mov
enter
mov
movl
jno
adc
and
sub
sbb
and
fiadds
add
adc
push
cld
and
shll
insb
cmp
and
push
push
add
mov
adc
add
or
pop
stc
rcrb
mov
mov
mov
jb
js
sbb
js
add
mov
adc
or
inc
and
or
cmpsl
cmp
and
dec
cmpl
shrl
fmul
dec
pop
or
loopne
mov
jne
xor
jb
dec
lahf
add
adcb
inc
pop
xor
sbb
outsl
cltd
arpl
push
in
das
push
loopne
inc
dec
aas
rcrl
loopne
enter
push
mov
push
dec
mov
ja
rcrl
or
dec
roll
lret
test
loopne
or
rclb
lret
jle
xor
js
daa
mov
inc
add
push
call
cmp
ss
push
xor
push
inc
pop
cmp
add
incl
ss
nop
dec
push
dec
jg
mov
pinsrw
push
xor
fsub
xchg
push
xlat
imul
add
mov
mov
sub
rclb
ljmp
lods
jno
and
adc
inc
and
andl
mov
repnz
aam
into
mov
bound
cmp
rolb
lock
sahf
rolb
in
loop
stos
sub
jl
cmp
sbb
or
shr
sbb
and
or
and
cmp
aam
jecxz
sbb
pop
dec
int3
fadd
pop
or
mov
push
inc
imul
repnz
adc
add
adc
rcr
mov
jle
xchg
push
mov
jne
push
ja
es
or
pop
xor
addl
sbb
in
jns
jae
xchg
test
dec
sbb
mov
mov
lods
add
push
cwtl
pop
xor
in
cmp
call
push
adc
pusha
xchg
mov
push
shll
shlb
push
cmp
or
sbb
daa
mov
insl
call
cmp
jne
fstpl
pop
mov
and
sbb
mov
mov
insb
and
pusha
mov
sbb
push
and
mov
enter
add
cli
push
push
mov
mov
cs
pushw
and
or
jo
imul
and
orl
mov
sbb
and
mov
pop
push
push
lds
stos
adcl
in
or
add
xchg
xchg
adc
xchg
or
adc
adc
in
or
adc
push
add
or
push
push
and
xor
movsb
sbb
nop
out
xor
mov
mov
fs
test
pop
aam
jne
imull
sbb
cmp
fldenv
xchg
aam
nop
int3
pop
sbb
pop
outsl
cmpsl
inc
push
sbb
iret
jmp
jge
fcmovnu
push
or
inc
lock
mov
adc
jae
add
and
bound
lea
mov
stc
cmp
jg
je,pn
push
mov
and
pushf
mov
lea
push
mov
pushl
cmp
je
mov
add
and
pop
jg
jp
or
xor
cmp
jne
inc
push
ret
ret
repz
faddl
xor
fs
dec
or
and
inc
sbb
jmp
setnp
or
add
pop
or
or
adc
inc
and
and
shl
testb
cmp
jae
inc
sbb
xchg
rolb
mov
inc
dec
je
mov
mov
fidivrl
xchg
jle
cld
jl
cmp
into
add
inc
lock
lea
scas
imul
cmp
push
test
xchg
add
fcomi
sti
hlt
mov
or
push
or
lock
sub
lea
push
outsl
xor
in
jge
lahf
and
adc
sbb
inc
hlt
xor
mov
add
add
arpl
push
adc
jne
mov
fiadds
pushf
jne
outsb
movsb
rol
pop
mov
call
in
ja
nop
out
and
inc
mov
pop
fstpt
push
movsb
inc
mov
les
add
cltd
sub
or
push
and
shll
rcr
xor
cmpsb
pop
xorl
dec
and
add
hlt
or
hlt
and
bound
add
in
lea
mov
shrl
lock
dec
cs
call
adc
sub
fmul
test
inc
mov
mov
nop
add
or
add
dec
mov
stos
jle
add
fwait
mov
mov
mov
pusha
push
add
pop
sbb
test
rorl
push
mov
out
mov
cltd
jne
cmp
inc
rcr
les
ret
ja
js
adc
lea
sub
jg,pn
faddl
xor
jmp
pop
icebp
inc
shrb
rcrl
push
adc
ret
jecxz
adc
aaa
shll
xor
xchg
mov
test
leave
shl
cmp
adc
xchg
shll
int3
mov
adc
fdivrs
cmp
adc
mov
add
add
movl
sbb
push
xchg
setb
fstpl
popf
call
and
jl
cmp
jge
jo
dec
jle
fdivl
adc
pop
stc
xor
orl
shll
sbb
pop
mov
push
mov
xlat
add
adcl
add
fwait
pop
cmpsl
pop
push
lock
notb
mov
add
pusha
mov
fnstenv
and
or
jns
shl
ds
pop
sbb
push
and
and
mov
pushf
push
dec
cmp
leave
sbb
dec
pop
test
sahf
rol
movsl
incl
inc
sete
dec
adc
loop
icebp
rorb
and
popa
bound
lock
dec
pushf
jmp
add
ret
sbb
push
dec
mov
mov
icebp
sbb
dec
pop
or
and
icebp
mov
dec
mov
fidivl
icebp
insl
test
les
mov
test
adc
and
daa
add
enter
test
mov
xor
jmp
and
mov
or
or
push
xchg
pop
mov
outsl
lret
inc
test
fbstp
push
cltd
popa
xor
or
test
pop
push
push
test
jno
stc
push
pop
cwtl
and
fadds
mov
jb
push
push
inc
push
xchg
mov
repz
clc
jle
add
lea
mov
fisttpll
adc
sbb
call
in
jge
int3
mov
js
scas
push
rcll
push
add
xchg
mov
add
sbb
inc
and
push
push
cmp
mov
in
add
jnp
jmp
xor
shlb
add
scas
cmp
xor
out
pop
cmp
mov
inc
add
out
mov
bound
iret
sarb
push
push
sub
lea
clc
jmp
aad
mov
aaa
out
mov
scas
insb
mov
inc
xlat
lock
fcmove
testl
enter
call
cmp
xchg
data16
xchg
jb
xchg
sbb
or
mov
cld
sub
test
adc
pusha
cmp
adc
testl
lahf
mov
cmp
je
enter
sbb
in
rcrl
cmp
cmp
je
jl
dec
mov
pop
jg
push
mov
cli
fwait
aad
outsb
idivb
pop
sub
jae
or
adc
push
aas
movsl
pop
dec
add
jo
repz
mov
sti
fisubrl
add
lds
lcall
adc
repnz
mov
xor
sbb
mov
es
add
jge
adc
jl
sub
cmp
pusha
mov
push
in
addl
out
xchg
xor
cmp
add
or
sbb
in
xchg
sub
jmp
adc
jae
xor
add
add
test
and
in
inc
cmpsb
push
inc
das
jmp
inc
cmc
or
mov
or
sub
add
mov
and
push
daa
fsubrs
sbb
mov
andl
testb
xor
cmp
jo
leave
rol
int3
push
iret
add
and
or
adc
ret
aad
sbbl
call
add
mov
cmp
movsb
mov
or
mov
jne
mov
arpl
or
insb
daa
es
int3
xor
mov
xlat
lds
mov
cmp
movb
or
mov
push
fsubs
inc
pop
sub
mov
movsb
imul
sbb
popf
nop
push
jge
jge
jg
mov
fwait
lds
xor
repnz
inc
xchg
fwait
inc
push
sbb
or
test
lahf
jp
cmp
xchg
cmpsb
dec
dec
dec
dec
movsb
lret
jno
test
fisttpll
adc
mov
lods
push
sbb
sub
add
sbb
cmpsl
mov
mov
push
xor
ret
sbbl
xchg
jle
and
push
jns
cltd
add
sbb
add
stc
mov
fs
xor
pmaxub
adc
test
and
test
add
addr16
mov
pop
cmp
xchg
or
or
pop
mov
mov
mov
adcl
aaa
push
add
aaa
dec
inc
push
les
call
cmp
xchg
rolb
lahf
or
push
fs
adc
add
push
jbe
mov
mov
add
out
cmpsb
pop
or
jb
ja
add
enter
mov
dec
add
sbb
mov
cwtl
lea
mov
push
out
adc
lea
mov
mov
mov
js
mov
xchg
inc
ja
adc
es
lods
sbb
jo
sub
mov
jle
add
add
icebp
in
mov
mov
sbb
int
sub
out
xor
xor
add
sub
stos
and
or
aam
pop
push
cmp
xor
xor
leave
push
sub
daa
push
dec
repnz
sub
push
jns
or
scas
jno
mov
out
mov
es
call
sub
push
push
adc
filds
mov
popa
pop
add
add
mov
in
push
in
cmp
jno
adc
leave
or
push
mov
or
imul
subl
mov
or
jne
jg
push
lock
pop
jmp
mov
out
daa
mov
lret
test
daa
mov
push
cs
adc
sbb
and
jp
cs
cmp
lret
add
pop
mov
push
xchg
adc
adc
rcll
push
shll
add
add
or
adc
and
push
jb
arpl
xchg
xchg
push
lret
add
lods
jne
push
dec
jg
add
sub
inc
or
add
sbbb
into
insb
push
push
pusha
loope
dec
cmpl
xchg
dec
aam
jmp
pop
xchg
loopne
mov
sbb
xchg
jmp
movsl
dec
fwait
dec
add
lods
push
mov
out
das
fimull
test
and
lods
int3
mov
xor
adc
sbb
dec
pop
les
jge
adc
ja
lods
mov
mov
lcall
push
push
pop
cmp
mov
lock
push
xor
rcr
rorb
ss
or
mov
pop
aaa
mov
add
jne
xchg
sbb
add
inc
push
leave
orl
gs
pop
xor
mov
in
in
push
imul
mov
dec
or
pop
imul
push
inc
sbb
outsl
or
xor
lods
pop
ja
orl
mov
push
push
cld
orl
cmp
add
in
sarl
pop
fstps
and
sbb
mov
ret
sbb
push
or
and
data16
adc
inc
xor
pop
and
mov
sub
or
sub
sub
movsl
sbb
data16
test
xor
fsts
into
xchg
fs
inc
inc
pop
inc
movsb
sbb
inc
inc
inc
inc
inc
dec
push
xor
loop
xor
add
and
add
icebp
test
cli
sbb
out
notl
test
movb
inc
xlat
xchg
sbbb
push
outsl
test
aaa
lea
inc
sub
fmulp
push
test
sub
mov
andl
lods
das
test
adc
jl
ficoms
mov
cmp
je
std
lods
mov
inc
inc
je
mov
in
ljmp
sti
pushl
sub
add
lret
xor
xorb
jmp
test
or
push
jo
sbbb
add
js
test
jl
outsl
idivl
xchg
pop
push
lea
dec
or
add
mov
daa
mov
mov
das
inc
cli
std
sub
out
data16
mov
fistps
pop
sub
inc
int
js
xchg
test
fsubs
xor
sub
sbb
add
mov
push
dec
rorl
or
cltd
adc
mov
or
dec
push
mov
lret
outsl
push
daa
imul
push
aas
mov
sbb
fisttps
stc
pop
mov
push
in
js
mov
cmp
push
dec
mov
inc
cs
test
push
pushf
insl
jg
negl
push
mov
hlt
xlat
in
clc
push
mov
or
inc
push
add
sub
sbbl
lcall
pop
jne
and
and
push
sbb
dec
xchg
mov
adc
lret
or
sbb
pop
add
adc
xlat
dec
call
pop
clc
add
ds
fsubrs
cwtl
xor
mov
mov
js
mov
sub
enter
sbb
jae
movsb
fimull
mov
jb
sbb
scas
movsb
js
jns
pop
inc
es
sbb
sbb
nop
dec
cmpsb
push
xchg
lods
daa
test
popl
mov
popa
aam
or
in
pushl
mov
or
xor
push
or
outsl
sbb
push
js
cmp
sbb
mov
daa
sbb
push
xchg
mov
jb
cmp
xchg
negb
dec
pop
mov
jns
enter
xchg
out
test
xchg
push
push
push
push
inc
ret
mov
sbb
in
add
mov
or
mov
add
movzwl
gs
lods
jo
decb
xor
mov
sbb
mov
sbb
sarb
in
lea
push
push
push
jmp
mov
mov
jge
loopne
rol
push
or
or
test
shrb
shl
daa
stc
pop
aas
adc
sub
mov
fidivl
xchg
jo
lea
popf
and
test
jl
mov
inc
sbb
mov
dec
sbb
xchg
test
imull
sbbb
and
nop
jo
testl
add
or
ja
mov
test
dec
call
xchg
xor
xor
or
adc
pop
push
lock
mov
mov
into
std
or
xchg
int3
divl
into
adc
sub
sarb
pop
jnp
rclb
aam
cld
fcoms
or
sbb
mov
push
cmp
mov
test
popa
add
adc
out
jmp
imul
sbb
pop
dec
and
out
dec
clc
mov
fsub
cld
sub
adc
pop
add
push
les
stos
xchg
lea
daa
cld
fisubs
mov
popf
dec
clc
and
lret
inc
js
imul
push
test
movb
shll
pop
fs
inc
lret
cmp
lods
subl
jb
in
jle
loopne
movsb
loopne
daa
mov
add
mov
mov
das
sub
daa
aad
shll
in
push
nop
push
xor
mov
mov
sub
jnp
imul
movsl
add
aas
sub
decl
xchg
icebp
aam
mov
nop
add
jno
lahf
dec
jecxz
inc
cwtl
test
jo
rclb
inc
mov
sub
movsl
mov
stos
pop
fldt
pop
add
mov
pop
jecxz
mov
inc
arpl
pop
push
adc
cmpsb
jo
and
bnd
dec
dec
xor
push
inc
inc
test
add
mov
jmp
das
loopne
ret
in
and
xchg
test
aad
mov
pop
mov
mov
pushf
movsl
sbb
scas
popa
and
test
xor
lahf
lea
enter
mov
inc
xchg
jo
paddw
pop
and
push
ret
sbb
jl
pop
xchg
and
mov
or
sbb
test
popa
stos
and
out
jle
sub
push
inc
push
pusha
pop
xor
rcrl
push
das
cmp
add
sub
stc
inc
rorb
push
cmc
inc
sub
push
jecxz
lea
ret
dec
mov
push
aam
repnz
into
addb
cld
inc
sbb
mov
mov
add
loop
lret
adc
cmp
jp
jnp
xor
jnp
shll
mov
cmp
cwtl
mov
add
out
fsubrl
jl
in
idivl
lods
inc
inc
stos
aam
hlt
cli
mov
add
addr16
es
call
rorl
repnz
push
or
les
sahf
lods
jle
mov
jmp
insb
xor
mov
in
outsb
testl
dec
push
imul
push
jge
mov
loop
call
lock
inc
inc
sbb
aas
push
lea
jl
dec
sub
mov
enter
fimull
dec
addr16
adc
imul
aad
dec
roll
jne
ss
loopne
shrb
jno
mov
jle
sahf
icebp
and
push
shl
jne
mov
loope
push
jb
pop
add
pop
xor
fwait
lret
pop
lea
jno
inc
daa
mov
sub
call
loop
add
xor
cld
outsb
ljmp
addr16
pusha
clc
xchg
mov
test
xchg
stos
jnp
lahf
xor
out
out
daa
pop
lahf
sbb
sarb
adc
mov
dec
loopne
mov
mov
cmp
or
or
sub
xor
xchg
jl
xor
jecxz
sbb
sbb
cli
push
xor
repnz
inc
nop
iret
sbb
popf
xor
pushf
xchg
dec
xchg
aam
xor
dec
fisubs
push
xchg
mov
shlb
movl
inc
fnstenv
inc
and
push
adc
dec
or
jnp
shlb
and
cmpl
shlb
iret
mov
sub
adc
lods
push
gs
mov
dec
jne
test
ret
sbb
or
inc
jb
sbb
les
sub
sub
jbe
clc
xchg
jl
movsbl
add
xchg
adc
cmp
lds
and
in
or
lret
push
test
dec
mov
push
jae
pop
adc
lahf
add
and
sbb
rcrl
je
mov
shl
and
mov
push
pop
imul
push
jno
adc
mov
aaa
cmp
sti
push
and
sub
sub
insl
jl
imul
and
lea
mov
pop
loope
pop
and
mov
aam
push
jg
xor
and
inc
xchg
xor
aam
mov
aad
dec
mov
dec
lock
mov
adc
or
movsb
aaa
jmp
xlat
lahf
out
ljmp
adc
int
mov
jp
adc
pushf
and
mov
sub
jge
scas
and
add
out
daa
stos
pop
pop
loop
sbb
pusha
pop
mov
pop
clc
xchg
xlat
pop
cmpsl
mov
jbe
sub
pop
jb
jno
sub
or
loop
adc
dec
in
mov
jmp
orl
mov
inc
movsl
stos
call
jae
sbb
and
cmc
sub
lods
adc
add
sub
mov
xor
int3
adc
cmp
xor
movsl
mov
xor
cpuid
mov
and
and
ret
inc
aam
dec
or
mov
iret
fdivrs
mov
aas
scas
xor
jb
xor
lock
movl
push
cmp
dec
or
or
cltd
or
xor
jae
dec
ficoms
call
insl
seto
push
dec
push
add
pushf
push
sub
pushf
inc
shrb
push
mov
orb
add
jo
adc
cs
mov
xor
jle
mov
aaa
je
icebp
cmpb
gs
adc
and
mov
repz
adc
pushaw
jne
cmp
decl
cmp
not
decb
mov
xchg
subl
mov
cmp
pop
dec
lods
lea
fmuls
pop
divb
jo
in
outsb
push
mov
inc
xchg
and
push
imul
sub
dec
xor
xor
test
lock
shr
lea
sub
dec
outsb
lods
and
mov
movsl
add
jbe
lock
idivb
pusha
inc
mov
cmp
sub
push
and
movsb
inc
enter
bound
cmp
pusha
cmp
cmpsl
cmp
jne
fists
cmp
imul
push
cltd
in
xor
mov
cmpsl
xchg
test
pusha
aaa
inc
xchg
or
popf
ror
push
shlb
jp
adc
test
mov
add
inc
and
cmpl
add
cs
popf
mov
or
cmp
inc
push
fmull
dec
xchg
dec
mov
call
cld
ret
psrld
divb
cmpb
je
and
xor
xor
jg,pn
fwait
adc
cmpsl
in
icebp
and
xor
fwait
xchg
add
inc
stc
decb
or
jmp
or
or
mov
inc
or
xor
mov
mov
mov
pusha
jb
call
push
mov
lret
mov
adc
jge
dec
enter
jne
mov
ror
sub
in
push
pusha
cmp
push
sub
or
lds
test
sete
scas
xor
bnd
mov
out
adc
testl
ljmp
dec
and
sbb
jne
xor
mov
push
shrb
mov
adc
sbb
ret
and
jne
sbb
push
push
dec
sbb
xchg
pop
stos
mov
jge
push
cs
add
adc
fsubs
jl
or
xor
mov
lahf
loopne
aaa
push
xchg
pop
or
fstpt
or
hlt
push
fwait
and
add
xchg
in
jne
jne
push
sub
out
sbb
cli
xchg
je
cmp
outsb
push
adc
cmc
jmp
dec
mov
and
and
dec
pop
xor
sbb
sbb
inc
loop
xchg
and
inc
adc
enter
xchg
inc
mov
in
aas
test
mov
pop
cmp
or
jl
or
or
or
and
push
into
push
mov
clc
cld
mov
aaa
push
pop
xlat
add
pop
movsl
inc
or
dec
lds
in
jmp
push
dec
push
add
xchg
jge
push
aaa
rcrb
add
stc
mov
sbb
xor
dec
sbb
cmp
pusha
mov
push
add
jo
rolb
pusha
mov
xor
cmp
loope
pop
add
jge
les
push
ljmp
adc
adc
cmp
add
mov
dec
ss
cmpsb
xchg
enter
cmp
push
cmpl
aaa
gs
sbbl
xor
test
xchg
out
and
mov
pushf
mov
push
push
and
dec
or
pop
add
dec
sub
push
dec
adc
int3
and
jle
aaa
andb
pop
repnz
test
or
pop
fwait
xor
ss
in
jecxz
test
dec
adc
cmp
sub
call
sbb
outsl
int
push
sbb
cwtl
je
lret
xor
jb
xor
inc
pop
addr16
add
or
idivb
push
icebp
pop
and
xor
inc
push
inc
sub
push
or
ret
add
pop
sbb
pop
inc
push
aam
push
jg
pop
popa
sbb
movl
dec
add
or
pop
and
loop
push
dec
mov
add
ret
inc
lock
adc
lea
and
int3
test
dec
out
js
add
int3
push
inc
loope
adc
inc
push
cmp
push
xchg
cld
test
xor
test
sub
mov
pop
push
es
icebp
repz
jmp
aam
popa
js
test
sub
cld
lea
xor
sbb
xchg
mov
inc
inc
mov
mov
mov
rorb
jae
push
inc
sub
dec
push
pop
and
mov
push
push
pop
add
mov
popf
lcall
inc
mov
sub
lea
mov
inc
dec
lahf
fldcw
pop
pop
mov
pop
test
rcrl
add
int3
dec
test
push
in
and
mov
hlt
mov
icebp
adc
and
mov
or
scas
push
push
xchg
add
addb
inc
adc
pop
je
test
xchg
roll
xchg
and
pop
andb
jmp
or
nop
sbb
loopne
decl
lcall
add
pop
loopne
loopne
clc
pop
mov
mov
mov
or
loope
nop
incb
push
lea
sbb
pop
ret
push
pop
push
lea
adc
sbb
add
push
rolb
and
call
pusha
ret
and
adc
sub
fildll
push
adc
add
and
and
call
lods
sbb
push
jge
mov
push
leave
je
cmpb
xor
call
or
mov
add
movzbl
xchg
sbb
push
sub
rorl
pusha
jnp
pop
pop
sub
and
mov
pop
pop
std
lret
les
cmp
mov
cmpsl
adc
and
je
push
adc
lock
lds
sub
je
test
icebp
loopne
js
mov
lods
lret
aaa
sbb
sbb
fs
sub
xchg
add
adc
push
inc
sub
lods
xor
mov
add
mov
xor
mov
pop
ret
addl
ficompl
jg
fildl
mov
mov
mov
xor
or
jle
lock
testl
sbb
pop
lahf
push
test
xchg
cmp
add
cwtl
jne
and
lock
sbb
xor
push
sbbw
loope
shlb
mov
test
aaa
adc
loop
fucomi
mov
test
cmpsl
lock
not
adc
std
insb
fs
std
jo
scas
mov
pushf
icebp
and
mov
add
pop
pop
lcall
cmc
arpl
enter
lds
test
push
aas
add
jo
cmp
outsb
push
dec
or
add
nop
popa
add
aas
lret
stos
xor
add
in
mov
xor
inc
pop
pop
adc
dec
push
jae
push
push
daa
hlt
add
jecxz
mov
int3
jmp
mov
push
xor
dec
push
add
mov
or
adc
jb
push
jne
mov
fcoml
movsl
loopne
sub
insb
mov
and
mov
push
push
aaa
or
cmp
in
sub
cmp
int
mov
mov
sbb
out
and
mov
lods
and
jo
loopne
cwtl
pop
or
jg
pop
test
sbb
or
cmpsb
decl
in
inc
and
xor
pop
xchg
or
cmp
jbe
aas
push
cmp
rolb
pop
or
outsl
pop
insb
sub
mov
push
jb
mov
cli
inc
popa
das
jg
xor
lret
decl
addb
and
flds
pop
rclb
fdivp
fnstcw
or
decb
cmp
clc
fldcw
fistpll
cwtl
adc
cmp
jbe
add
cmp
jbe
jle
cmp
es
ja
mov
xor
rcll
push
inc
push
or
mov
mov
pop
cmp
push
inc
cmc
jle
mov
add
pop
ret
jbe
inc
add
push
or
sub
aad
adc
and
fiaddl
ret
rolb
inc
pop
xor
cltd
test
or
pop
lcall
pop
push
xor
aas
test
push
mov
adc
xor
data16
mov
sbb
ss
xchg
hlt
adc
das
dec
aas
pusha
pop
inc
sbb
inc
inc
icebp
sahf
ds
mov
call
sbb
bound
stc
push
xorl
and
popa
nop
mov
or
jne
fs
nop
movsb
adc
add
jbe
mov
ret
mov
mov
and
rclb
push
jmp
and
nop
adc
add
nop
cmp
mov
mul
seto
sub
enter
jne
shll
mov
pop
rcr
ret
push
xor
roll
aas
jbe
aam
lea
cmp
cmp
cmp
in
push
add
inc
push
adc
fadds
or
hlt
and
adc
add
and
cmp
mov
cmp
lds
idivb
mov
rorb
loop
add
adc
xorl
cmp
jge
xor
outsl
inc
sbb
adc
push
xor
setae
pop
push
xsha256
cmpsb
ror
les
insb
push
mov
loopne
inc
sub
cmpsb
sub
pusha
jp
mov
nop
sub
push
add
mov
add
sbb
shrb
jo
sbb
add
inc
loope
jno
iret
push
ss
adc
adc
lea
xorl
nop
xor
mov
leave
cmp
sbb
dec
add
cmp
jne
adc
xchg
lcall
shlb
sub
add
mov
mov
mov
in
clc
repnz
orl
adc
mov
add
and
and
lds
or
addl
xchg
aad
adc
xor
inc
push
and
mov
insb
cmp
mov
adc
sarl
or
pop
pop
orl
andl
jge
push
leave
test
aas
jbe
inc
into
ds
add
mov
adc
jae
nop
out
movsl
pop
loope
sbb
rolb
push
enter
ret
sub
jmp
jo
push
push
call
sbb
repnz
hlt
add
push
push
lock
js
cli
adc
cmp
jbe
nop
jecxz
pop
jb
xorl
push
jns
jno
add
mov
addb
or
xchg
sbb
inc
outsb
cmp
sub
xlat
ja
lret
mov
mov
in
push
sarl
xorl
dec
jo
jne
mov
shld
ror
imul
popa
xchg
pop
dec
add
xor
out
fisubs
and
roll
push
xchg
adc
shl
dec
js
fists
mov
subb
jns
jo
nop
rcr
call
int
into
gs
repz
adc
bound
add
or
push
mov
adc
adc
or
dec
sbb
xchg
xor
outsb
lods
mov
push
add
inc
mov
and
jb
jbe
cmpsl
push
or
xchg
mov
in
mov
xorl
jle
shll
sbb
bnd
jo
mov
and
insb
jns
inc
cwtl
or
pop
out
loop
das
mov
pop
add
or
fstps
xorl
fnstcw
ror
paddsb
fmulp
adc
pop
push
hlt
cmp
or
sbb
dec
adc
pcmpeqb
sbb
adc
adc
les
insb
leave
sbb
or
xor
xchg
pushl
sub
pop
adc
mov
leave
add
mov
call
mov
adc
pop
xor
jo
mov
aam
push
sbb
add
xor
movsb
or
js
ss
mov
test
fcom
add
cld
ret
push
imul
push
push
je,pt
mov
xchg
jbe
test
cmp
and
xor
add
in
daa
sbb
inc
inc
push
inc
push
js
out
sub
pop
add
pop
popf
je
dec
pop
mov
or
push
or
push
out
add
popa
movsl
fcompl
test
shrb
lea
cs
mov
ret
push
ret
xlat
sub
sbb
jo
std
add
pop
push
call
negb
xorb
cmp
push
adc
jl
test
push
cmp
sbb
inc
mov
loope
and
loope
mov
clc
jo
inc
mov
xor
sbb
cmp
cmpl
xchg
inc
loopne
dec
add
adc
or
push
sub
and
popf
push
jo
or
xchg
inc
mov
rorb
fcoml
pop
jge
add
fmuls
and
pop
sbb
mov
pop
sti
imul
xor
and
pop
mov
pop
and
pop
or
jno
leave
pop
mov
movsl
inc
cmpsl
push
mov
adc
or
cmp
popa
nop
push
xchg
push
test
insl
lods
mov
into
addb
lock
orl
rcll
or
push
out
inc
mov
adc
pop
or
js
or
sbb
orb
dec
push
sbb
pop
jg
jae
mov
push
sti
mov
jbe
inc
sub
cld
xchg
dec
imul
dec
nop
mov
xor
inc
in
out
or
fs
mov
push
push
lcall
add
add
insb
lock
xchg
movsb
arpl
sbb
xchg
movsl
pusha
out
inc
pusha
pop
and
in
jae
lock
fs
push
push
mov
push
popf
mov
pop
stos
nop
pop
inc
mov
es
add
mov
mov
addb
sbb
loope
shll
mov
addb
xchg
push
sub
rol
shrb
mov
ja
inc
ss
or
mov
enter
jecxz
addb
xor
mov
xchg
or
mov
jno
jo
sub
mov
out
dec
fdivs
push
cmp
sbb
pop
add
adc
pusha
fs
xor
ret
push
pop
dec
insb
jo
aam
les
mov
stos
sbb
and
add
pop
add
cmp
lds
sbb
dec
and
push
sbbl
loope
adc
mov
clc
movl
inc
out
idivb
xchg
mov
ja
xchg
fiaddl
je
jo
and
or
ja
or
push
adc
addr16
adc
sbb
lcall
pop
push
repnz
sbb
das
outsb
dec
sub
and
mov
fisttpl
call
lcall
clc
lock
rcr
cs
popf
test
xor
mov
mov
js
movb
outsb
les
mov
mov
adc
add
pop
outsb
xor
lea
pop
dec
rorb
pop
sbb
pop
test
dec
jnp
je
and
inc
push
mul
insl
or
and
ficoml
dec
data16
push
mov
fs
ret
or
orl
mov
pop
and
cwtl
es
pop
clc
xor
fsubl
sbb
mov
push
cmpsl
loopne
fisttps
sub
je
clc
adc
out
and
mov
adc
arpl
xchg
lea
pop
or
cmp
sarb
imul
fucomi
lds
push
lea
shll
fildl
cmp
loopne
xchg
lock
add
and
push
inc
ret
and
mov
dec
xor
cmp
inc
das
lock
push
xchg
sbb
movsb
dec
sbb
fdivs
xchg
push
lcall
push
push
mov
in
lea
outsb
loop
mov
xchg
fistl
xor
popf
outsl
xchg
dec
js
xor
xor
push
sbb
pop
adc
popl
fimull
addl
pushf
xor
push
sbb
sbb
and
mov
stc
xchg
stos
jnp
mov
and
std
adc
fnsave
lods
mov
pop
repnz
and
mov
add
sbb
mov
or
mov
push
popf
cmp
xor
dec
or
mov
outsl
dec
xchg
bound
fstpl
test
or
adc
add
add
push
repnz
xchg
cltd
push
mov
sarb
out
mov
sbb
or
nop
sbb
add
popl
adc
adc
mov
ret
jae
out
sub
push
scas
loop
in
je
adcb
pop
call
pop
or
push
ds
sbb
jne
cmc
sub
lcall
in
mov
inc
xor
sbb
je
sbb
xor
and
sbb
inc
call
dec
ljmp
out
or
mov
inc
scas
jp
sti
xchg
imul
ss
js
xchg
rolb
xchg
mov
enter
movsl
add
xor
jmp
adc
push
mov
popf
adc
and
cmp
sbb
xor
inc
je
pop
aas
pop
and
test
cltd
cli
cmp
push
enter
xor
mov
cmp
sub
add
and
lds
loopne
or
repnz
lcall
sbb
jmp
test
add
sub
frstor
mov
sete
rorb
inc
cmpb
mov
mov
repz
dec
inc
lret
dec
arpl
cmp
mov
ja
and
pop
fmuls
push
lods
mov
mov
mov
adc
dec
ds
js
jmp
jno
and
adc
add
pop
adc
es
arpl
test
stos
add
movsb
pop
pop
cmp
mov
call
jp
test
icebp
push
pop
sbb
mov
cmp
lret
in
adc
and
jmp
inc
repz
movsb
adc
fs
test
es
cmp
dec
je,pn
and
jbe
in
in
daa
pop
pop
xor
mov
sub
xchg
xchg
mov
or
xchg
popa
pop
push
sub
shlb
lret
dec
pop
sub
inc
push
pusha
imul
aad
add
mull
leave
inc
stos
enter
xchg
pusha
cltd
jge
das
pop
inc
clc
pop
jecxz
pop
sub
andl
lea
add
or
vphaddbd
incb
clc
add
mov
in
shrb
cmp
inc
or
shlb
cmp
dec
push
addr16
inc
push
dec
ficoml
loope
stc
subb
mov
or
iret
jge
xor
sarb
jns
cli
mov
adc
jl
or
xor
fs
mov
cs
nop
push
push
and
mov
ror
outsl
and
inc
lds
test
pop
shrb
adc
push
xchg
and
fwait
or
int
testb
test
test
daa
dec
sub
add
xor
xor
jmp
jg
gs
call
push
out
or
repnz
loop
or
push
push
int3
loopne
cli
mov
mov
test
cmp
lcall
xor
mov
dec
push
aam
ret
scas
ret
fists
fsubrl
mov
pop
sub
aam
adc
or
inc
and
jns
ljmp
popa
je
in
sub
xor
cmpsb
adc
add
lret
in
stos
adcb
in
daa
mov
mov
fidivs
decl
inc
stc
ret
stos
enter
ret
lahf
xchg
stos
sbb
aam
add
inc
fcompl
and
xchg
cs
add
hlt
add
sbb
xor
and
xchg
mov
lods
cmp
jp
test
mov
in
aam
ljmp
adc
in
mulb
popa
imul
lcall
ret
adc
pop
daa
push
test
pop
daa
or
arpl
shrl
daa
or
push
push
in
fidivl
adc
adc
dec
cmp
sbb
push
inc
rcrl
rcrb
mov
mov
or
ss
push
add
repz
add
jb
or
fwait
in
imul
frstor
and
or
lds
xor
jmp
push
pop
adc
sbb
lea
push
cmp
inc
ljmp
jl
imul
push
inc
popa
shl
in
lea
in
mov
push
mov
inc
shlb
testb
addr16
testl
rcrb
sbb
popf
dec
lods
adc
push
aad
arpl
addl
stos
aas
cmp
add
jo
or
sub
call
mov
loopne
mov
push
push
jge
add
inc
fcomp
les
inc
pop
jecxz
mov
movsl
jl
add
mov
pop
jg
addr16
xor
loopne
or
aas
nop
sub
cwtl
popa
cld
jne
je
push
pop
cmp
mov
or
rclb
or
sbb
xchg
add
fisttpll
jecxz
stos
fdivl
adc
inc
add
xor
inc
mov
or
jo
and
je
add
xchg
inc
push
add
jo
add
inc
jb
adc
pop
sbb
inc
fs
push
dec
aas
loopne
pusha
mov
sub
mov
sbb
pop
push
cs
mov
xchg
sahf
ret
pop
repz
add
enter
aas
sti
cmp
pop
cmp
adc
aas
repz
dec
repz
or
cwtl
lret
rorl
push
rorb
or
sahf
jae
cwtl
xchg
es
inc
sub
cwtl
or
and
mov
xchg
push
rcll
mov
leave
add
xchg
sub
push
mov
and
loopne
xchg
lods
inc
sub
sbb
sub
js
jle
adc
xchg
lock
pop
pop
push
push
int
lea
test
sbb
mov
pusha
sbb
cmp
ds
das
test
or
mov
jno
movsb
adc
cmp
leave
add
bound
xchg
cs
xchg
jmp
mov
jo
mov
sbbb
sarb
imul
popa
xchg
les
push
in
lcall
dec
repz
dec
pop
inc
or
or
into
cmp
rcl
pop
push
xor
xchg
pop
nop
sbb
mov
xor
push
sub
insl
and
jb
pop
in
push
and
movsb
jb
out
inc
sub
mov
sub
inc
push
and
pushf
rorb
push
mulb
push
dec
cmp
xor
push
cmp
jne
cmp
popa
sbb
lcall
cmc
push
test
adc
lods
aaa
adc
testb
and
lea
sub
mov
sub
pusha
dec
sti
dec
add
or
cmp
movsb
or
test
add
lea
mov
push
rorl
push
clc
addb
or
repz
pop
testl
mov
push
cltd
bound
adc
inc
xchg
inc
xorl
nop
mov
test
test
ja
mov
and
pop
out
cmpsb
cmp
sti
ljmp
mov
shll
push
adc
in
or
cmp
loop
sbb
jns
jle
test
lock
pop
es
daa
test
adc
sbb
cltd
push
add
mov
add
add
pop
test
push
push
lret
aas
es
cmp
inc
cmp
mov
sub
loope
mov
es
mov
mov
ret
adc
ja
adc
mov
push
sub
sub
push
imul
loope
jecxz
pushf
mov
enter
movsl
cltd
add
sub
fs
lods
mov
mov
sarb
pop
push
or
pop
mov
xchg
es
ret
push
or
push
push
jl
inc
pop
cs
aaa
mov
dec
xor
xor
ss
mov
push
shll
test
sbb
sub
inc
ja
xor
push
mov
push
xor
fs
sbb
test
add
add
jmp
jbe
loop
arpl
lods
fwait
adc
cli
pop
push
lahf
pop
cmpsl
add
cmp
adc
jno
cmp
cmpsb
add
mov
dec
cs
dec
add
jo
sbb
adc
shlb
fdivr
sbb
adc
test
test
xor
adc
pop
mov
and
inc
jg
cmp
xchg
xchg
push
lods
je
stc
xchg
pop
movsb
shl
in
sub
outsb
fldenv
adc
inc
pop
sub
pop
inc
stos
or
sub
push
fstps
ret
jg
test
sbb
clc
addb
sub
outsl
andb
repz
inc
sbb
and
push
jne
or
pmulhuw
push
das
add
add
push
or
stos
rclb
lds
dec
mov
fnsave
nop
popa
mov
fucomi
inc
add
mov
pop
sub
fadds
push
inc
imul
xor
mov
or
mov
gs
mov
and
mov
cmp
pop
loope
dec
jecxz
adc
push
inc
sbb
ret
orl
popf
adc
cmpsb
xchg
cltd
cmpsl
std
or
push
xchg
fstpl
push
dec
jo
loopne
imul
addb
xor
test
xor
push
push
in
inc
rorl
xchg
mov
dec
jecxz
cmp
test
pop
pop
lret
jne
lds
in
xchg
loope
add
icebp
ja
movsb
aas
mov
push
mov
push
mov
leave
push
push
test
mov
pop
or
aad
std
sub
adc
xchg
fldcw
pop
cmpsb
loope
cmpb
je
or
cmp
inc
imul
cmp
cli
jb
inc
mov
adc
xchg
sub
xchg
icebp
push
dec
cmp
mov
mov
or
mov
push
jl
dec
insb
mov
add
stos
pop
xchg
sub
add
inc
mov
arpl
lea
push
out
daa
add
test
jmp
shrb
cmp
sbb
adc
jns
jl
sbb
xor
stc
mov
or
or
inc
sub
add
and
and
sub
lret
or
pop
push
sbb
sub
or
mov
xor
mov
sub
lcall
xchg
or
jns
or
push
jmp
jle
jne
movzwl
sbb
cmc
aad
js
jo
jne
mov
mov
push
mov
fst
aaa
mov
and
gs
mov
je
loope
mov
mov
mov
ret
pushl
xchg
sub
inc
push
cmp
mov
aad
ret
push
push
icebp
rclb
sub
or
xorl
test
dec
jg
pop
fisubl
mov
mov
ja
jo
cmp
cltd
or
push
fstl
jb
es
pop
lea
ss
jg
push
mov
adc
and
cmp
or
test
icebp
adc
mov
js
loopne
jp
iret
enter
xor
xchg
xor
mov
shll
lods
push
out
lret
js
negb
and
inc
add
push
push
orb
cmp
mov
mov
enter
pop
jg
mov
cmp
and
add
dec
addr16
bound
mov
lods
xor
ret
inc
sbb
lcall
push
push
jo
enter
cwtl
push
or
orb
push
adc
orb
push
adc
dec
push
inc
adc
lods
data16
xchg
xlat
lea
xchg
sbbb
pop
mov
pop
adc
les
or
inc
cmpsb
les
shll
mov
aas
pop
pop
xchg
lods
mov
xor
xchg
dec
out
mov
lods
mov
cwtl
sub
add
fcoms
stos
popa
mov
xchg
pop
or
dec
lcall
and
push
lea
jmp
decl
mov
je
cs
mov
pop
cs
and
pop
push
mov
xchg
push
adc
iret
dec
test
repz
aas
inc
pushf
jno
push
push
aam
lock
mov
sbb
jge
jae
push
inc
stos
fldl
cmova
fistl
push
add
xchg
push
adc
adc
pusha
cs
jbe
jge
add
es
push
xchg
cmp
push
ret
and
sbb
dec
and
pop
mov
xor
xchg
pop
fimuls
adc
pusha
xor
cs
adc
mov
lea
cwtl
notb
jecxz
add
push
aam
faddl
mov
push
inc
sbb
sbb
sub
test
push
mov
add
push
lret
sahf
into
or
inc
rcrb
push
cmpl
inc
sbb
jle
mov
daa
gs
push
mov
inc
cmp
filds
xor
inc
insb
das
cs
jne
add
cmp
negb
outsl
je
shlb
jbe
cmp
jl
xor
into
rorb
pop
sub
push
cmc
sahf
rorb
xor
cmp
mov
push
push
cmp
cs
mov
push
push
cmp
jae
test
popl
sub
jnp
xor
push
jmp
lods
and
lea
push
test
les
mov
add
sbb
rorl
adc
mov
jo
test
enter
stc
loopne
inc
dec
mov
cltd
imul
dec
jo
ret
cmp
push
mov
inc
mov
sbb
mov
cmp
inc
add
or
push
xor
push
jle
pop
mov
adc
movsl
inc
ds
add
addr16
inc
std
int
pop
or
dec
sbb
nop
sub
and
das
mov
add
add
mov
mov
mov
xor
push
andl
sbb
or
sub
dec
add
cs
insb
movsb
mov
lods
mov
or
adc
leave
push
mov
push
sub
stos
aas
add
dec
inc
cmp
clc
mov
shll
dec
bound
add
xlat
movsb
or
and
enter
lods
aad
lret
add
insb
push
push
ret
cld
adc
inc
sahf
push
add
sub
push
out
dec
inc
and
test
add
loope
aam
subl
adc
fcompl
ss
sbb
xchg
mov
cwtl
push
mov
adcl
stc
repnz
test
decb
lea
icebp
popa
sbb
ret
shlb
ret
rcrb
and
push
adc
and
mov
loope
push
xor
sub
add
movsl
pop
addl
lret
or
sbb
addb
lret
sbb
pop
and
and
xor
xchg
inc
pusha
jbe
pop
js
pusha
mov
mov
mov
pushf
mov
xor
pop
mov
lea
dec
sub
sbb
sub
adc
or
and
sub
mov
enter
stc
sub
pop
or
shr
xchg
int3
sub
push
or
inc
push
imul
push
rorb
mov
pushf
sub
jno
dec
sbb
mov
add
testw
and
clc
fldt
cli
mov
mov
sbb
inc
add
jne
and
lods
ja
and
icebp
test
subl
cmp
mov
pop
les
sbbl
and
pop
lea
mov
pop
mov
add
test
xor
cmp
mov
sbb
es
movb
lock
std
lret
and
adc
data16
shlb
sarl
fcoms
add
pusha
add
cmp
lods
adc
mov
ficoml
ret
xor
mov
jae
mov
or
cmpsl
in
push
aam
les
popa
mov
pop
inc
cmovae
push
ljmp
bound
push
dec
lods
mov
mov
inc
xchg
lea
cmp
push
lret
dec
xchg
movsb
push
jmp
mov
jmp
lret
loope
sbb
scas
insl
aam
pop
rclb
add
xchg
xchg
mov
test
lds
pop
mov
add
jge
jmp
sbb
es
jne
mov
mul
lock
xlat
sbb
imul
inc
push
cmp
jge
test
pop
mov
pop
mov
jp
adc
push
push
mov
rolb
sub
or
andl
xchg
xor
movsb
adc
add
xchg
jae
mov
dec
sbb
add
push
addl
and
mov
or
push
push
or
loop
in
add
sub
xchg
adc
call
sub
mov
rcrb
mov
jb
xor
pop
aaa
pop
pop
ret
or
ret
mov
bound
pop
or
in
xorb
and
jo
cmpsb
mov
or
or
cmp
mov
in
icebp
call
cmp
call
lcall
mov
jl
aas
mov
and
adc
call
inc
or
mov
dec
stos
ret
sbb
inc
mov
fcomps
fnstcw
stos
rclb
jb
dec
pusha
push
xchg
mov
xor
clc
or
cmp
push
jns
loop
sahf
mov
or
fbstp
push
sbb
dec
add
lret
cmc
test
or
or
gs
mov
test
xor
dec
pusha
lds
mov
adc
lret
xor
add
aad
pop
pop
pop
es
sub
mov
mov
jge
mov
inc
adcl
dec
jge
inc
outsl
adc
sbb
addr16
lods
subb
fisubs
fmuls
fcompl
adc
testb
jg
and
insb
jo
or
push
and
adc
jge
or
jo
add
rcrl
xchg
push
mov
leave
arpl
mov
pushf
dec
jge
inc
popa
sub
jnp
aad
mov
adc
mov
jle
icebp
mov
and
rol
mov
mov
js
and
add
shlb
movsb
js
add
add
fisttpll
ret
cmpsl
popa
inc
pop
loope
pusha
addl
fcoms
or
addl
outsl
add
shlb
pushf
inc
ret
rorb
mov
mov
jno
ja
pusha
sbb
sbb
pusha
sbbb
xchg
pop
test
scas
or
push
cmc
icebp
fdivrs
xchg
lea
loopne
push
adc
fadds
push
aam
push
enter
fsubr
or
aas
push
and
je
add
call
xor
leave
dec
loopne
xor
in
and
inc
pop
mov
mov
xchg
fmul
gs
mov
fcomp
pop
sbb
pop
popa
movsl
add
or
mov
outsb
mov
push
or
mov
nop
sub
or
sbb
add
call
jecxz
push
fs
es
mov
lret
shlb
dec
lcall
add
jns
sub
xor
je
sub
cs
pop
scas
mov
ret
add
dec
pop
mov
push
pop
clc
adc
orb
xor
out
imul
arpl
add
add
in
xor
dec
in
loopne
xchg
cwtl
addl
inc
dec
sbb
sbb
push
sahf
add
dec
lahf
cmp
call
gs
inc
add
test
dec
cmpl
cmp
out
jg
rcll
inc
sub
jno
pop
mov
imul
lea
ljmp
les
pop
dec
sub
sbb
mov
pop
mov
or
sub
push
mov
cmp
add
loope
std
mov
movl
inc
pusha
aam
negb
jae
sub
stos
inc
jnp
scas
scas
jl
sub
jno
jmp
jge
inc
stos
rcl
mov
jne
jg
jbe
bound
add
cmp
or
inc
sub
shlb
add
push
leave
pop
mov
and
cmp
cmp
subl
xor
int3
add
add
sub
in
adc
mov
imul
push
sub
jo
mov
mov
lahf
in
inc
sbb
incb
xor
xchg
lret
add
mov
pop
rcrb
pop
inc
cmpsb
or
fwait
add
insb
and
push
leave
dec
adc
xorl
push
test
popa
add
bound
mov
inc
dec
fldt
loope
or
mov
shrl
mov
mov
pop
pop
cmp
dec
int3
or
int3
pop
xchg
fidivrs
sbb
or
je
sarb
mov
or
inc
jecxz
aad
xchg
and
and
inc
push
pop
xchg
and
jmp
mov
addb
pop
fcmovnu
dec
dec
pop
cs
sbb
jmp
clc
and
xor
mov
cmpb
add
push
mov
push
xor
pop
jbe
adc
lock
adc
sub
push
mov
or
ss
into
mov
jge
xor
adc
and
repnz
add
xchg
pusha
add
cmpsl
inc
sub
addr16
add
dec
add
push
mov
inc
fisttps
inc
dec
push
xchg
push
and
or
ds
hlt
push
dec
inc
movsl
jg
push
sbb
adc
cmc
mov
sub
sahf
fmull
add
push
xor
mov
add
iret
rolb
inc
lea
std
inc
loope
add
ret
mov
pop
shll
rcrl
mov
add
add
test
int3
add
mov
and
enter
pop
shl
mov
adc
add
dec
adc
lea
out
js
cmpb
mov
cmp
push
push
dec
fstl
mov
les
sbb
sub
out
mov
sub
inc
fsts
addl
imul
or
movsb
dec
fs
jns
add
add
mov
lea
outsb
add
push
mov
jno
dec
mov
xchg
sbb
add
adc
sti
mov
lods
or
or
xchg
sbb
pushf
jo
pop
subl
pop
mov
mov
jo
sbb
jge
sub
mov
sbb
lock
wbinvd
mov
stos
jne
mov
sub
sbb
loopne
shlb
adc
sbb
popf
pop
cmp
jg
mov
sbb
push
ljmp
stos
or
sbbb
adc
pop
dec
mov
test
lret
je
push
pop
fiadds
imul
lods
xchg
out
in
jecxz
sbb
mov
mov
mov
mov
dec
or
mov
je
out
and
inc
lea
int
add
push
mov
add
add
add
adc
xchg
je
imul
mov
subb
and
add
adc
sarb
or
push
les
cmpsb
fistl
xchg
sahf
xchg
xchg
rorl
mov
lcall
xchg
or
add
dec
clc
mov
xor
adc
cmp
adc
bound
andb
adc
cmc
mov
push
popf
sub
cmc
and
je
subl
push
stos
dec
inc
jmp
inc
mov
mov
lods
mov
sbb
jg
mov
cmc
or
cmp
adcb
or
test
sub
lret
cmp
adc
fdivrl
bound
push
jae
jo
jne
lods
ds
popf
lea
mov
push
or
addb
pop
mov
loopne
sub
clc
ds
jmp
mov
scas
mov
ja
sbb
mov
jae
inc
xchg
add
cmp
sub
in
lcall
and
testb
ljmp
popf
and
clc
outsl
mov
cmp
mov
mov
mov
pop
js
clc
inc
js
jne
sbb
sub
sub
insb
cli
aaa
jp
aaa
jl
std
imul
sub
push
sub
sarb
push
and
inc
cmp
jb
lea
or
sbb
jb
push
fisubrl
rdmsr
adc
sub
add
pop
ja
push
push
into
push
push
pop
aam
arpl
mov
xor
and
and
sub
cli
cmp
sbb
mov
cwtl
mov
out
xchg
mov
pop
fidivs
loopne
adc
std
dec
std
pop
pop
inc
jecxz
mov
repz
cmp
mov
or
lret
mov
dec
cmp
add
cltd
jb
stos
inc
sti
loope
and
mov
fistpll
mov
cmp
jle
push
clc
sbb
mov
and
adc
je
pop
mov
sbb
xor
sub
adc
mov
and
mov
pop
pushf
aad
test
adc
fwait
cltd
pop
xor
add
mov
add
cmp
and
es
push
jo
lea
adc
mov
dec
inc
push
dec
cs
jns
faddl
mov
pusha
shrl
push
mov
mov
test
pop
push
adc
ret
sub
cmp
rolb
les
jbe
and
and
insl
ljmp
xchg
inc
xchg
inc
mov
push
xor
aaa
ret
cmc
je
mov
mov
mov
pop
and
push
stos
adc
in
cwtl
and
and
mov
mov
sbb
in
push
adc
cmp
ja
dec
into
fisttpll
in
fs
cli
and
je
insl
loope
sub
pop
orb
imul
les
adc
pop
outsb
jnp
call
sub
mov
pop
or
cmpsb
and
subl
es
dec
lea
fcoms
fbstp
xor
mov
insb
hlt
pop
fldcw
loop
xor
cmp
in
insb
push
dec
lock
ret
std
or
pop
add
sub
mov
popf
sub
add
push
mov
sub
daa
lock
push
push
xchg
shrl
mov
or
xor
jg
cwtl
mov
ror
icebp
sub
fidivrs
mov
sub
push
inc
xor
mov
mov
out
test
test
test
cld
cmp
sub
cltd
and
dec
mov
dec
das
push
mov
adc
jo
rcrb
addr16
add
push
sub
test
add
clc
push
in
dec
cwtl
push
dec
arpl
lea
decl
mov
insb
mov
xor
mov
jmp
push
xlat
push
cmp
or
in
xchg
movsb
xor
add
and
xor
sahf
ret
adcl
mov
jno
mov
pop
adc
loopne
rorb
ret
outsb
jecxz
jecxz
bound
wrmsr
insb
add
cmpb
in
mov
inc
arpl
add
xlat
and
push
lea
lcall
mov
add
mov
arpl
xchg
sub
in
xor
divl
push
xor
movsl
dec
xor
dec
cmp
jp
push
in
in
push
ss
mulb
add
inc
sbb
xchg
and
push
sbb
mov
mov
mov
nop
nop
sti
or
clc
mov
sub
cli
outsb
cltd
xchg
xchg
xor
add
inc
sbb
fcoms
push
pop
push
mov
cld
sbb
sbb
insl
mov
cwtl
imul
push
out
out
add
sbb
cmp
cmp
fadds
add
push
mov
aaa
sbb
push
pop
cmp
xchg
outsb
xchg
pop
pop
push
mov
cmp
jne
mov
sub
dec
inc
mov
roll
push
mov
js
out
adc
inc
es
out
pop
adc
add
lods
outsl
mov
push
and
ja
dec
pusha
inc
pop
xorb
or
jo
faddl
stos
rolb
or
es
or
inc
lock
dec
cmp
aam
dec
mov
pusha
cltd
lahf
jno
adc
inc
push
icebp
andb
cli
rolb
leave
and
inc
clc
cmove
jo
xor
inc
add
cmp
je
and
dec
and
jbe
dec
ret
je
inc
add
push
jle
ret
in
enter
add
add
loop
push
inc
push
mov
cwtl
or
cmp
jo
test
push
and
enter
dec
addb
xor
adcb
jbe
add
rorb
sub
sub
or
mov
and
mov
mov
lock
or
je
push
pop
movsb
dec
addb
dec
pop
xor
xor
mov
je
xchg
mov
je
out
pop
sub
or
lock
adc
push
sbb
and
dec
sbb
sbb
pushf
out
dec
insl
inc
mov
pop
sub
cli
loop
test
lahf
mov
aas
call
shrb
pop
mull
cmp
sbbb
sbb
jne
ret
and
out
jmp
adc
adc
shrb
pushf
arpl
stos
bound
cmpl
lock
inc
pop
and
inc
jle
push
xchg
aaa
push
and
pop
sbb
sbb
xchg
movsb
movl
loopne
mov
cmp
js
push
jnp
mov
stos
cwtl
push
dec
jae
or
sbb
xor
mov
xchg
push
or
add
fmuls
aam
out
push
push
sub
or
add
cmpsb
jnp
movsb
sbb
or
jno
cmp
inc
loope
sub
or
addl
lods
sub
inc
fs
mov
inc
je
sub
add
aad
add
aam
fwait
sub
add
mov
inc
movsb
sti
add
sbb
je
pop
cwtl
ja
cmp
es
cmpsl
pop
sub
repnz
inc
divl
add
popf
inc
push
mov
adc
lods
ret
cli
movsl
mov
or
addr16
cmc
cmp
iret
add
test
pop
loope
push
jmp
dec
or
lcall
pop
and
push
icebp
adc
dec
cli
push
popf
pusha
mov
jne
and
adc
fmuls
push
mov
inc
faddl
push
out
sub
sbb
mov
mov
and
xor
dec
int3
testb
push
pop
jns
imul
dec
xlat
lds
test
dec
add
and
ret
sbb
jp
mov
xchg
mov
pop
lcall
ret
jbe
adc
ret
in
xchg
and
xchg
fisubrl
imul
dec
das
add
inc
imul
sbb
add
arpl
sub
sbb
inc
out
je
movsl
popf
cwtl
mov
loopne
sti
push
data16
adc
hlt
sub
or
jo
xchg
lret
in
lock
cld
add
mov
enter
or
notl
sbb
int
mov
or
outsb
nop/reserved
popf
sbb
or
aaa
fbld
sbb
add
popf
pop
popf
jnp
pusha
sub
test
testl
xchg
inc
mov
cmp
imul
shlb
in
cmp
ret
shlb
cmp
push
sbb
mov
push
rorb
lock
sub
push
cmp
mov
push
jne
push
mov
xor
or
fildll
mov
adc
cmp
sub
popf
stc
cmp
mov
add
adc
pcmpgtw
xchg
adc
leave
dec
add
test
and
dec
pushf
inc
stc
sbb
mov
sub
rcrb
dec
repz
add
movsb
or
mov
jno
push
fisubs
dec
sub
xor
sbb
mov
push
ja
push
inc
xchg
or
xor
cmp
jg
pop
or
sarb
jne
call
lret
das
cmp
loope
std
push
push
push
hlt
dec
dec
ret
div
dec
lock
push
mov
and
std
sti
cld
dec
ds
mov
push
insb
pop
dec
pop
ret
sbb
rclb
test
pop
cmp
sub
push
icebp
orb
cltd
imul
adc
xchg
push
push
shll
sbb
mov
sub
fwait
nop
lahf
test
inc
add
aas
call
mov
sub
or
sbb
out
inc
shlb
pusha
mov
mov
add
roll
and
and
xchg
loopne
into
out
lea
xchg
sub
je
or
clc
and
sub
mov
push
sahf
or
sti
jne
cmpsb
push
lea
ret
adc
mov
cmpsb
pop
adc
cmpl
loopne
sbb
sub
in
sub
xor
daa
popa
test
jbe
xor
lods
pop
push
ret
inc
and
sbb
inc
test
cmp
nop
test
sbb
add
and
and
or
dec
lcall
cmpsb
add
andb
sub
repnz
dec
cmpsb
lret
and
mov
jo
lcall
push
mov
mov
add
push
cmp
and
push
ret
or
and
or
outsb
cmp
test
add
daa
adc
sub
adc
enter
sub
push
shlb
sub
push
enter
sub
sub
cltd
inc
pop
cmp
sub
sub
cs
or
dec
scas
cmp
xchg
rclb
adc
and
test
dec
sub
inc
dec
push
loop
ficompl
fmuls
rol
sub
xchg
imul
mov
push
add
or
fimuls
mov
push
jecxz
push
data16
mov
rcll
inc
push
sarl
xchg
in
xor
add
aas
sbb
mov
test
shl
mov
scas
mov
push
rcrb
and
add
leave
xchg
xor
insb
fisttpl
sbb
inc
push
mov
andl
dec
pop
lahf
add
xchg
lea
mov
pop
xchg
jne
add
daa
mov
mov
mov
pusha
dec
jmp
addl
addb
push
lret
jae
adc
aaa
rorb
orl
dec
leave
add
and
xchg
inc
cmp
adc
js
or
rcr
jp
dec
pop
inc
ja
inc
sahf
inc
jle
jne
inc
push
in
movb
or
clc
and
in
inc
cmpsl
xor
jmp
adc
pop
subl
enter
mov
jns
or
xchg
adcb
push
dec
adc
dec
imul
and
mov
dec
mov
pand
je
cmp
insl
jmp
nop
or
enter
imul
or
sqrtps
les
inc
add
clc
pop
jmp
ja
inc
cmpsl
mov
mov
scas
add
fmuls
adc
push
or
mov
xchg
pop
adc
pusha
std
dec
mov
ret
hlt
mov
ror
gs
push
dec
loopne
mov
xchg
add
inc
jb
mov
pop
add
lds
aam
inc
or
and
xchg
inc
pop
subl
adc
dec
insl
xchg
es
in
or
fnstenv
mov
inc
adc
add
dec
add
enter
lea
cmp
mov
lea
or
and
movsl
xchg
out
mov
rorb
out
mov
dec
add
or
jle
mov
mov
lcall
je
add
outsb
mov
push
fcoms
dec
xchg
push
push
popf
outsl
in
pop
pop
out
mov
and
leave
dec
dec
mov
xor
mov
test
sub
or
fnstsw
lds
test
incb
leave
and
clc
mov
int3
sub
outsl
sbbl
mov
sti
push
inc
inc
dec
mov
shl
push
jl
sub
lods
adc
in
jo
mov
insb
push
xlat
mov
adc
or
les
add
mov
xor
jg
cmp
js
in
xchg
sbb
or
int3
repz
or
push
sahf
pop
mov
inc
lahf
push
roll
dec
jl
daa
jbe
sbb
cmp
push
lret
inc
xchg
rclb
stc
push
jmp
jmp
push
sbb
jb
inc
sbb
inc
hlt
or
adc
aam
imul
push
cld
stc
ljmp
out
inc
pusha
int3
test
mov
punpckhwd
lret
dec
imul
xchg
fnsave
jbe
push
inc
mov
add
in
and
aaa
lock
js
cmp
jge
adc
jg
jno
mov
iret
inc
cmp
cmp
pop
pop
cmp
pop
adc
add
or
aas
adcb
adc
or
or
loopne
push
adc
clc
mov
faddl
dec
mov
inc
call
pop
mov
or
push
incl
dec
pop
sbb
sarb
cmp
push
push
sti
mov
mov
inc
adc
xor
or
jg
adc
dec
or
pop
and
add
sbbb
mov
adc
cmp
lea
lret
rcrb
ret
sub
xorl
test
xchg
lods
rorb
cwtl
mov
pop
inc
xchg
pusha
in
cmp
add
fisttpl
or
shrb
add
cmp
jae
sti
sub
mov
and
imul
fdivl
fldcw
pop
test
or
clc
and
jbe
scas
insb
sub
add
daa
push
xor
jae
push
mov
add
push
sti
add
jo
and
add
pop
or
fidivs
lock
push
fistl
js
push
xor
cs
inc
pusha
cmp
lea
add
cmp
pop
and
xor
outsb
js
into
flds
or
scas
jnp
jno
shl
mov
add
pop
add
push
emms
xor
adc
mov
std
mov
lea
push
push
rclb
nop
mov
je
add
das
pop
movsl
push
fisubrl
dec
push
cmp
dec
rcrb
test
lods
xchg
sub
push
push
div
adc
pop
aaa
jno
sub
orl
add
push
jb
lret
insl
loop
test
adc
or
adc
gs
cmp
cmpsb
mov
adc
lea
mov
lea
jb
sbb
sub
push
or
sahf
and
push
nop
data16
mov
adc
nop
push
lods
xor
test
and
bound
outsb
pop
mov
xchg
cmpsb
push
nop
lret
stc
and
sbb
push
div
nop
fidivs
lods
fisttps
cld
mov
mov
mov
xor
mov
adc
cmp
add
sbb
push
cmovp
sub
dec
dec
data16
add
test
pop
shl
js
aam
das
or
push
pop
movsb
das
sbb
outsb
mov
or
sub
or
sbb
and
dec
push
daa
sub
fisttpll
push
dec
mov
xchg
inc
hlt
dec
mov
jle
lods
mov
loopne
or
das
movsl
lcall
mov
pop
cmp
adc
mov
and
cmp
mov
sbb
enter
adc
add
cld
adc
outsb
scas
cmp
sbb
lods
popf
mov
mov
mov
mov
push
xchg
adc
or
cmpsl
int3
push
test
enter
jmp
sub
pop
add
rclb
int3
sbb
push
mov
dec
pop
jg
jmp
mov
push
lret
inc
mov
ja
dec
jae
pop
adc
or
and
pop
mov
cmp
mov
add
aad
insb
xchg
sub
jmp
fistps
arpl
test
in
mov
adc
xor
and
fisttpll
sbbb
xchg
je
imul
cmp
imul
test
enter
emms
pop
fdivl
mov
in
cmpsl
xchg
nop
sbb
pop
ret
icebp
pop
jns
mov
push
enter
ret
add
push
or
leave
or
push
shlb
xor
jecxz
ja
mov
das
cli
loope
cmpl
shlb
scas
sub
sub
out
jo
mov
push
loopne
push
mov
push
test
adc
xlat
or
or
insb
jae
enter
sbb
insb
arpl
and
jns
mov
into
decl
xor
sahf
js
cwtl
mov
enter
enter
in
sbb
jl
lret
pop
mov
fmul
jecxz
pushl
jae
push
outsl
cmp
popa
incl
sub
mov
fdivr
ror
and
pop
push
dec
pop
add
push
cs
test
mov
mov
int
pop
and
leave
and
adc
sbb
daa
aam
sub
test
aad
fadds
jne
int3
mov
nop
enter
dec
gs
aam
inc
movsb
mov
push
lods
rorb
jne
inc
int3
mov
sbb
or
insb
daa
insl
cmp
cmp
add
add
cwtl
push
push
sub
data16
adc
xchg
sub
incl
and
pop
aas
pop
and
add
push
aam
jno
add
cs
inc
adc
loope
cmp
and
rorb
inc
push
stc
sub
add
cmp
push
int3
ret
stc
inc
ljmp
out
push
clc
and
add
lret
push
jne
mov
jno
sub
and
dec
es
mov
daa
pusha
data16
push
mov
add
movsl
rsqrtps
push
rolb
jae
mov
cmp
ja
add
lret
push
outsl
sbb
add
push
pop
inc
pop
imul
pop
and
add
add
lahf
xchg
jecxz
shl
push
call
push
lret
in
or
push
add
inc
lret
inc
mov
inc
push
ficompl
testb
cmpb
jae
pop
push
lods
xchg
mov
and
dec
pop
mov
in
pop
push
fnstsw
adc
sahf
imul
xchg
push
lea
push
or
das
notl
mov
xor
adc
mov
in
imul
orl
rolb
shrl
fldcw
xchg
adc
rcl
gs
push
adc
jp
push
out
or
pop
ds
gs
sahf
lret
aad
ja
add
loopne
arpl
push
push
jbe
ret
in
mov
dec
fmull
repnz
je
sbb
sti
lret
mov
stos
xor
ja
rclb
rolb
idivl
stos
je
jo
sbb
js
aam
mov
dec
dec
xchg
addb
cmpsl
loopne
add
add
or
jmp
je
push
lcall
mov
movsb
sbb
flds
inc
push
pop
add
dec
push
icebp
cmpsb
or
or
ficoml
push
cmp
clc
sahf
je
inc
cli
popf
pop
fcomps
cwtl
inc
enter
push
adc
inc
and
shlb
push
leave
sub
push
dec
cs
loopne
pop
xchg
pop
lea
mov
mov
insl
jl
mov
orb
add
inc
push
pushf
cmp
dec
mov
mov
in
les
add
dec
push
cli
dec
loopne
out
jb
or
lods
loope
aam
cmp
adc
and
or
xchg
or
sub
add
jg
dec
movsb
push
ret
inc
sub
add
pop
xchg
add
and
and
lret
icebp
add
test
mov
cmp
nop
orb
inc
shll
jae
add
cmp
mov
lea
push
int
and
pusha
pop
shll
jnp
add
pop
pop
cmp
into
sub
daa
dec
jo
fs
mov
cmp
mov
enter
add
sub
sub
adc
sti
or
mov
and
mov
sbb
push
push
xor
xor
repnz
subl
and
testl
insb
sbb
jo
add
sub
inc
sbb
imul
sbb
mov
pop
mov
inc
add
insb
pusha
jns
inc
cmp
push
push
push
jae
inc
or
inc
sub
negl
push
sbb
jbe
lock
mov
sbb
lcall
push
sahf
push
inc
in
mov
test
in
or
test
jg
mov
dec
add
add
add
roll
pmulhuw
mov
mov
sahf
mov
pop
xor
xchg
jo
hlt
movsb
mov
jbe
jb
or
adc
mov
xor
mov
push
add
or
adc
dec
or
add
in
push
or
inc
aaa
in
jne
dec
add
rcpps
orb
cmp
cmp
push
mov
call
lea
inc
int3
sbb
divb
cmp
adc
idivb
mov
pop
or
push
testl
icebp
jo
pop
add
mov
fmull
movhps
outsl
loopne
aas
push
js
mov
cld
mov
push
push
dec
add
dec
mov
pop
repnz
out
pop
mov
sub
jle
arpl
stos
xchg
orb
and
repz
sub
leave
push
pop
lds
call
stos
mov
aad
js
aam
and
lock
and
fidivl
mov
inc
or
jno
mov
adc
sub
out
gs
gs
cmp
out
adc
inc
push
push
mov
dec
or
or
cmp
or
jo
mov
push
or
inc
scas
int3
mov
enter
scas
orb
sbb
push
jle
out
xchg
and
inc
cmpsl
or
and
call
enter
outsl
push
adc
loop
movb
mov
leave
sub
inc
add
gs
rcll
jb
lcall
push
push
insb
lods
dec
rorl
cwtl
test
jae
or
fcmove
out
pop
adc
add
sub
inc
mov
jb
jmp
sub
ret
sbb
or
xor
mov
mov
icebp
inc
mov
mul
movsl
push
imul
add
push
push
add
std
out
in
mov
js
cmp
movsbl
jbe
cmpsb
sbb
in
mov
push
adc
je
or
je
adc
je
or
inc
mov
push
jne
adc
pop
xor
xor
test
scas
jbe
jno
add
test
cmp
push
xchg
push
gs
inc
test
xchg
or
jle
enter
add
mov
lar
dec
push
mov
aaa
push
cmp
mov
in
xchg
xchg
mov
inc
fcomps
dec
adc
push
add
sarl
adc
and
add
inc
sbb
mov
dec
cmc
sbb
lea
pop
out
add
push
push
mov
sbb
and
out
adc
or
add
aad
leave
daa
jae
in
lods
mov
mov
cmp
jne
mov
clc
add
inc
jp
lret
add
xor
nopl
jns
inc
xor
sti
pop
sbb
insl
fsubr
fnstenv
sbb
jecxz
fmull
inc
imul
push
cmp
jne
and
ficompl
cmpsb
xor
cmp
cmc
xor
lods
fcoml
loopne
and
fs
bound
mov
pop
jbe
sub
dec
fisubl
sbb
push
sbb
or
xorl
mov
insl
sbb
nop
mov
into
or
js
pop
jl
sub
aaa
stos
pop
xchg
add
data16
enter
lcall
adc
test
mov
adc
or
scas
xlat
insb
sub
leave
lods
sub
enter
xchg
clc
aad
add
sub
loopne
or
cmpsl
dec
fimuls
adc
scas
add
add
test
ds
es
in
shl
pusha
push
into
dec
test
xchg
mov
dec
jmp
push
or
push
fs
xchg
or
sbb
pop
cmp
jno
mov
xchg
fwait
jmp
sahf
cmp
xor
adc
roll
push
xor
lds
icebp
add
xlat
pop
fwait
inc
cmp
aas
add
lods
sarb
test
fwait
nop
mov
add
cmpsb
mov
mov
je
sub
add
test
adc
and
inc
sbb
jg
movsb
icebp
call
pop
cmc
pusha
mov
cmp
adc
add
aaa
add
dec
adc
inc
add
shrb
cltd
lock
ror
fdivrs
inc
sub
jne
das
push
push
or
fs
xor
cmp
mov
mov
cmp
daa
mov
push
and
fwait
jl
mov
lock
xor
add
adc
inc
push
lods
addr16
lods
mov
sub
mov
pop
push
cwtl
xor
clc
pop
add
dec
cmp
pop
call
flds
xchg
pop
cmp
ljmp
mull
mov
sahf
addr16
in
xlat
ret
fs
fsubrs
inc
fstpl
jge
adc
or
sub
sub
jne
push
loopne
dec
adc
mov
inc
les
lea
loope
xor
adc
inc
clc
imul
int3
adc
add
xor
add
ds
add
sbb
leave
call
or
mov
adcb
mov
xchg
cltd
and
or
inc
inc
testl
movnti
cld
push
mov
clc
loopne
or
clc
into
inc
sbb
call
mov
je
push
add
pop
add
or
inc
mov
sbb
and
dec
push
dec
insl
sub
int3
aam
pop
inc
pop
adc
sub
push
je
inc
gs
sbb
mov
xchg
push
lcall
ss
dec
or
inc
lcall
rcl
sar
sub
push
hlt
shl
movsb
sub
mov
mov
adc
xchg
sbb
xchg
je
inc
pop
or
xor
jge
mov
mov
mov
cmpl
push
cmp
jne
xchg
jp
xor
mov
sbb
lock
cmp
cmp
movsb
cmp
adc
daa
or
push
lock
imul
mov
inc
pop
test
xor
xor
add
fs
enter
or
pop
mov
xor
xor
xchg
test
movsb
push
pop
nop
inc
bound
fs
mov
xchg
or
and
shlb
gs
outsb
jmp
sbb
jo
js
inc
dec
mov
sub
lock
pop
movsb
and
mov
pusha
jge
sarb
popl
add
adc
or
adc
adc
dec
sti
mov
push
inc
or
adc
inc
faddp
cmc
daa
mov
out
add
pop
sub
or
gs
into
or
push
mov
push
mov
and
dec
loopne
and
les
push
push
push
in
sub
add
dec
and
cltd
bound
pop
and
adc
lea
in
mov
sub
dec
sbb
rol
add
push
jmp
lods
and
push
inc
mul
mov
mov
and
das
ss
fimuls
mov
test
xorb
loopne
or
sbb
mov
xor
xchg
out
invd
and
pop
pusha
jnp
rorb
jno
inc
sbb
push
les
rclb
add
imul
rcrl
into
js
insl
inc
cmp
loopne
xchg
sub
mov
mov
add
iret
outsl
lock
imul
test
mov
in
pop
fistps
pop
cmp
dec
out
leave
adc
or
inc
jne
scas
and
idiv
jo
invd
jnp
or
rclb
xchg
sbb
add
xor
imul
push
loopne
cmpsl
lods
sbb
push
xor
iret
cltd
insl
add
sbb
sarl
mov
lock
jne
add
not
xchg
mov
xchg
push
and
or
sub
add
sub
outsb
push
mov
and
push
int3
push
in
dec
jns
js
pop
dec
mov
dec
pop
pop
mov
dec
cmp
or
inc
mov
xor
pop
ret
pusha
pop
push
clc
jg
fstps
or
add
mov
sbb
lods
push
push
movsl
scas
sbb
outsb
enter
mov
leave
jne
lea
ret
addl
adc
stos
pop
lret
int3
js
jg
fiaddl
mov
inc
sbb
call
jo
jne
cmp
je
mov
jmp
add
test
insb
push
in
mov
subl
mov
add
das
inc
inc
add
inc
jg
es
dec
inc
cmpsl
std
fmuls
sbb
lcall
mov
mov
mov
lods
pop
xchg
int3
scas
lret
sbb
dec
add
mov
test
sub
xor
setno
push
lahf
and
add
jae
add
mov
fs
jle
and
push
movsb
imul
xor
cmp
mov
push
ja
cmp
mov
adc
push
sbb
add
or
rorl
test
adc
sahf
dec
lods
mov
jecxz
insl
sbb
dec
mov
test
lock
push
shr
fwait
incb
fsubs
test
aas
or
test
jo
cs
inc
scas
movsl
inc
in
xchg
add
lcall
sti
lock
sbb
adc
cltd
dec
mov
bound
cmp
popf
mov
xchg
mov
xor
leave
sbb
cli
test
int
fcoms
or
push
mov
dec
xchg
call
push
jmp
or
xchg
sub
cmp
push
inc
or
xor
jmp
xlat
fnstenv
rorb
jmp
imul
pop
mov
sbb
add
lea
mov
mov
fcoms
mov
adc
dec
cmp
rolb
pop
jg
clc
xor
pop
jno
call
adc
filds
ror
push
add
dec
adc
mov
adc
inc
add
sbb
pushf
adc
into
stos
xchg
outsl
mov
push
jp
nop
xchg
inc
jg
jmp
rclb
push
cmp
jb
cs
stc
imulb
shr
push
dec
movzwl
or
adc
mov
shl
sbb
adc
jmp
push
or
es
push
jmp
jl
scas
sub
test
into
movsb
push
inc
or
aam
push
insb
std
pop
add
rcrb
or
inc
sbbl
adc
aam
mov
into
adc
inc
hlt
cli
lret
lods
pop
std
sbb
pop
mov
push
jl
call
mov
cmpsl
jmp
std
jne
test
adc
movsb
jns
xchg
leave
inc
cs
jnp
dec
popa
sub
pop
adc
movsb
call
jle
push
push
xchg
adc
mov
xor
sbb
xor
inc
aas
inc
mov
cmp
and
or
adc
add
push
dec
xchg
add
dec
loope
jae
add
xor
bound
cmp
mov
sbb
or
aam
je
push
aaa
insl
in
dec
cs
lods
rcll
mov
mov
sbb
rclb
inc
imul
sub
shlb
xor
cmp
movsb
sub
or
test
pop
or
rclb
mov
dec
pop
or
add
rcl
dec
add
pop
cmp
int
adc
xchg
and
adcb
mov
pop
filds
xchg
add
push
adc
addr16
xor
test
add
imul
adc
jecxz
adcl
add
inc
sbb
sub
mov
cmp
mov
cmc
push
inc
lods
fsts
add
push
sbbl
pop
jo
lea
fistpll
xchg
test
mov
outsb
loop
insb
push
add
cmp
lods
lea
push
jno
pop
repnz
enter
inc
and
jne
jnp
cld
push
mov
test
cmpsb
sbb
add
lret
ljmp
ljmp
pop
jmp
mov
jbe
jo
rcrl
inc
fsubr
ret
div
push
enter
arpl
adc
pop
sbb
xlat
mov
sbb
mov
out
ja
add
shrb
mov
push
push
xor
fmull
xchg
mov
mov
mov
movb
lods
xor
lods
ja
repz
mov
jp
js
clc
jae
ret
pop
sub
xchg
inc
cmpsl
mov
mov
and
pop
jne
sbb
andl
bound
js
or
inc
or
mov
mov
pop
push
xor
dec
lods
xor
mov
cs
pop
lock
call
or
notb
fsubs
pop
sbb
ficoml
cwtl
mov
and
mov
dec
cmp
bswap
movsb
push
ds
imul
cwtl
jne
sub
test
sub
mov
leave
sbb
push
lods
add
xor
push
repnz
mov
jl
rolb
psllw
rolb
out
jg
mov
arpl
subl
dec
adc
or
rolb
add
xchg
lods
adc
jno
in
dec
and
int3
int
jb
inc
mov
push
adc
pop
mov
cmp
mov
int
adc
mov
mov
and
xchg
inc
pusha
push
movsl
push
nop
stc
pop
and
cmp
imul
hlt
ss
adc
adc
sub
dec
test
mov
movsb
movsb
shll
cltd
and
add
mov
push
dec
leave
gs
dec
dec
add
out
xchg
sub
lret
push
sbb
sub
jecxz
xchg
or
cmp
sbb
dec
cmc
test
add
cmpsb
xchg
sbb
inc
movlps
and
or
aaa
push
and
cmp
jo
pop
or
test
cmp
jge
pop
jl
inc
stc
or
cmp
or
pushf
cmp
jns
push
mov
dec
dec
push
cmp
clc
outsl
pop
rcll
push
sub
push
push
push
aad
std
mov
je
mov
sbb
cmp
dec
xorl
fbld
scas
fnstsw
subb
hlt
xor
mov
and
push
push
faddl
push
int
sub
adc
mov
fwait
add
xchg
jg
jnp
sub
fnsave
or
xor
lods
enter
sub
push
lahf
inc
jns
and
js
inc
pusha
mov
xchg
jns,pt
das
inc
inc
or
cvtpi2ps
je
clc
cltd
jne
and
lea
or
push
dec
add
or
cmp
stos
jo
lock
push
dec
sahf
xchg
lret
test
dec
or
int
jns
push
sub
sahf
addr16
imul
push
sbb
nop
out
push
dec
dec
add
and
sub
test
xchg
jne
xor
pusha
sub
adc
sbb
dec
pop
fmuls
sar
sub
push
xchg
mov
push
xor
test
mov
test
mov
test
cmp
ficompl
js
cmp
pop
xchg
fdivrl
ffreep
mov
xor
add
aam
mov
cmp
loopne
call
lret
push
fsubrs
and
and
ss
add
dec
lods
les
push
mov
int3
pop
enter
inc
mov
adc
jl
sbb
pop
push
stos
dec
pop
xchg
add
and
push
or
jne
add
es
movsb
cmc
popa
dec
fcom
mov
aam
call
mov
clc
push
push
add
and
stos
rorl
mov
les
andl
shll
outsb
cmpl
mov
ffree
xchg
mov
mov
rcl
push
mov
mov
outsb
les
and
dec
mov
rclb
loopne
push
mov
sub
movsb
xor
xchg
outsb
jnp
loope
call
dec
sub
or
shl
mov
stos
cwtl
sbb
sbb
or
push
xor
pop
dec
inc
or
add
aam
adc
ds
rcrb
add
mov
inc
es
cltd
shrb
scas
dec
je
pop
and
mov
in
jmp
roll
lods
sub
pop
adc
or
pop
rorb
xchg
ljmp
gs
jle
cmp
jne
daa
mov
or
js
mov
mov
insl
ljmp
inc
clc
mov
js
jl
add
cmp
jl
test
leave
imul
sbb
adc
and
lret
movsb
add
adc
cmp
repz
xchg
jns
mov
add
ret
pop
aad
mov
add
adc
or
div
lret
ficoml
cwtl
xchg
lahf
push
call
sbb
xchg
pop
ret
push
or
inc
mov
xor
xor
and
test
dec
fs
out
sub
push
cmpb
sbb
mov
push
jo
pop
cld
in
xor
xchg
mov
adc
push
idiv
iret
stos
pushf
xchg
out
add
sub
mov
dec
mov
dec
push
pusha
lahf
jne
or
aas
nop
pop
test
add
xchg
in
and
mov
dec
cmc
inc
cs
mov
and
mov
xor
push
add
fimuls
push
add
decl
addb
aas
call
dec
leave
xchg
mov
jb
in
sbb
mov
shlb
inc
push
mov
add
aam
cmp
and
sub
das
or
in
jb
out
subl
jp
fwait
ret
inc
push
push
mov
mov
or
sub
clc
daa
das
inc
imulb
push
inc
out
pop
aas
lods
pop
cmp
popa
and
or
jno
mov
or
xor
cmp
or
notl
or
repnz
data16
mov
nop
inc
add
push
inc
add
mov
sub
cmp
add
push
add
sub
fcomi
and
leave
jns
outsl
adc
aam
ja
mov
inc
js
or
rcrb
int3
cmc
dec
push
adc
push
push
addl
mov
xor
rcrb
stos
loopne
orl
vmread
je
iret
sbb
test
fstl
xor
mov
mov
xor
fidivs
sub
push
ret
enter
xor
cs
into
push
inc
jp
pop
aad
mov
lret
roll
push
xor
and
lret
dec
add
adc
or
pop
and
arpl
add
fistps
lahf
or
adc
sti
icebp
mov
ffreep
mov
adc
test
outsl
or
pop
jp
lea
push
popf
insb
xor
mov
es
mov
mov
ds
fcomi
leave
cmp
mov
push
inc
push
in
jno
inc
pop
lock
inc
pop
xor
jne
ret
inc
inc
mov
sub
xor
inc
call
pop
mov
or
cltd
add
adc
lea
imul
sbb
mov
iret
pop
fwait
or
xor
mov
push
stos
and
in
popa
insl
aas
loop
ret
popf
inc
mov
rolb
add
mov
xchg
dec
push
fdivs
rcl
pop
or
daa
add
je
sub
pop
inc
lret
or
cmova
or
pop
jg
push
inc
pop
push
in
push
or
push
or
mulb
outsl
push
adc
or
or
add
cld
dec
add
xchg
jl
mov
pop
repz
adcb
mov
lahf
lea
roll
sub
cmp
into
push
mov
xlat
jp
fcoms
test
cli
fisubrl
dec
rolb
lea
insl
mov
cwtl
mov
xor
or
mov
pop
push
push
outsl
push
inc
xchg
adc
add
inc
add
negl
movsl
jo
lock
push
inc
push
cmp
adc
fsubl
outsb
shll
inc
mov
fxch
dec
insb
push
aas
push
sbb
js
dec
mov
sbb
adc
lret
pandn
mov
push
fstpl
xchg
push
jb
fcomps
mov
push
invd
mov
jmp
loope
xlat
adcb
roll
adc
mov
adc
rol
xchg
repz
shlb
test
shrb
add
mov
push
jb
imul
add
or
test
pushf
daa
or
stos
add
xchg
cmp
scas
sbb
and
lea
loopne
sbb
push
mov
aad
loopne
test
into
movsl
and
iret
xchg
add
call
sbb
push
jo
call
or
clc
mov
dec
add
sbb
xchg
adc
inc
pop
and
pusha
mov
mov
lock
in
sarl
hlt
mov
fsubl
pushf
or
movsb
test
mov
pop
xor
mov
int
cltd
or
aam
xorb
pop
das
push
adc
mul
xchg
mov
in
or
in
sub
mov
jmp
sbb
or
mov
xchg
mov
mov
mov
xor
lods
iret
aam
adc
lock
mov
das
lret
fldl
push
das
xchg
roll
das
lds
xor
das
or
xor
andb
sub
sbb
xor
mov
sbb
aaa
pop
xchg
pop
xchg
add
xchg
lret
push
and
aaa
popa
stos
and
and
sub
out
add
loop
cmp
or
jns
fildl
cmp
fnsave
pusha
sub
inc
shrb
mov
dec
push
das
push
popa
mov
push
sub
adc
lea
push
mov
movsb
scas
push
xchg
mov
andb
loope
push
add
push
dec
adc
adc
inc
sbb
cmp
popf
int3
nop
and
inc
mov
lock
lcall
sti
imul
xchg
inc
and
mov
lahf
aam
push
ficoms
mov
mov
lea
mov
in
or
ss
psubd
mov
dec
lcall
jl
and
cmp
nop
cli
dec
movlps
lcall
inc
add
incl
loope
mull
ss
inc
call
adc
xchg
pop
cmp
sbb
mov
lock
faddl
push
dec
push
add
push
les
cs
sub
adc
loope
sbb
mov
add
movmskps
mov
sub
mov
test
mov
push
imul
or
push
push
adc
aas
mov
sbb
or
sub
or
test
xchg
ss
iret
adc
or
es
add
push
cs
ss
std
dec
push
decl
lcall
cmp
das
xor
leave
inc
sub
les
fs
sub
out
push
and
repz
add
ret
and
daa
and
mov
jecxz
ja
or
inc
or
jo
aas
aam
mov
add
and
add
dec
jo
xor
ret
push
std
bound
xchg
xchg
cmpsl
rclb
mov
cmpsl
mov
loopne
or
xor
xor
adcl
xor
nop
dec
enter
fadd
add
inc
lea
in
xor
mov
in
push
xor
push
sbb
cli
lods
leave
pusha
and
arpl
loop
popa
inc
call
jno
enter
cmp
fsubrs
insl
mov
jne
sbb
pop
mov
dec
loopne
movsl
fisttpl
or
imulb
rdtsc
lds
nop
pushf
movsb
pushf
mov
movsb
pushf
pushf
sub
je
adc
xor
push
shrb
lods
mov
inc
test
mov
xorb
cmp
jo
ret
dec
std
sbb
shll
cmp
add
ljmp
in
imul
mov
dec
in
lock
push
lret
adc
out
jnp
cmp
ljmp
arpl
inc
and
insl
mov
mov
mov
clc
les
inc
fdivrl
mov
adc
int3
gs
shlb
sti
cs
pop
xchg
aam
and
or
hlt
and
mov
in
or
idivl
cld
add
pop
sbb
and
adc
mov
idivb
fstl
mov
cmp
and
ret
xchg
adc
stos
and
jg
cmp
add
jnp
hlt
jge
dec
and
push
stc
cmp
push
cltd
sub
divl
js
or
jo
cmp
aam
adc
aaa
dec
jo
cmp
ja
or
movsl
outsl
sbb
ja
or
adc
sub
or
mov
or
xchg
ffree
inc
lret
inc
lock
inc
fwait
test
and
pop
cs
andb
in
or
dec
cmp
in
bound
xorb
inc
mov
cs
add
dec
add
xchg
xorb
lcall
js
ds
jns
fdivrl
push
pusha
jns
lds
std
pusha
adc
fnsave
pop
or
or
sub
ljmp
inc
mov
int
mov
imul
adc
notb
mov
inc
cmp
cmp
adc
or
les
cmp
mov
test
incl
jge
popa
icebp
insl
call
imul
outsl
mov
xor
test
int3
scas
rcl
cmp
enter
int3
shlb
cmp
fisttpll
ret
sub
push
or
and
insl
movsl
xchg
and
jo
clc
mov
sub
mov
cmp
and
sub
das
or
dec
cmp
dec
in
and
add
fsubrl
pop
xor
les
les
outsl
add
es
jl
test
lahf
add
pop
mov
mov
sbb
push
cmp
lahf
jg
inc
push
ret
js
push
or
add
rolb
add
or
mov
dec
sbb
pop
add
ret
pop
dec
add
mov
loopne
inc
inc
xor
andl
test
movsl
call
pop
mov
pop
out
and
or
add
pop
and
dec
and
and
dec
stos
xchg
add
sti
and
jb
add
sbb
mov
xorb
mov
sbb
mov
sbb
stc
std
add
pop
add
movsl
pop
push
rolb
xor
dec
add
xchg
addr16
jl
lds
mov
insl
mov
sub
ret
rcpps
out
clc
xor
or
add
and
and
movl
dec
arpl
pop
dec
dec
insb
dec
push
leave
push
fadd
imul
in
and
push
cmp
shrb
fsubs
pop
test
or
inc
fists
xchg
test
adc
or
ret
aas
add
inc
or
and
and
and
add
cltd
shrb
adc
inc
add
dec
push
nop
lods
pop
ret
insl
dec
pop
add
mov
or
sbb
and
pop
fmull
loopne
or
fwait
mov
in
aam
cmpsb
fcmovnbe
repz
or
movsb
push
inc
mov
and
mov
daa
lahf
jo
loopne
mov
fcomip
and
outsl
dec
fstp
or
mov
js
fmuls
push
imul
add
dec
cmp
push
shl
inc
mov
sarl
shrb
and
or
xor
add
test
or
or
xchg
or
add
scas
inc
movsl
inc
jae
rorl
sbb
jmp
shlb
cmp
inc
and
rorb
or
leave
inc
sub
xor
inc
pop
adc
mov
fidivrl
test
sbb
lock
sub
daa
push
sub
pop
pop
js
xor
or
std
jg
setns
dec
and
add
mov
popa
or
daa
int
xor
faddl
push
dec
setnp
sub
adc
and
addb
xchg
das
sub
les
jns
inc
xchg
mov
arpl
push
inc
fists
rcrb
inc
dec
and
or
adc
xchg
xor
rclb
dec
pop
iret
dec
and
or
jae
mov
js
push
push
jo
add
push
jl
iret
in
dec
adc
add
sub
xor
pop
or
push
pusha
sbb
lea
adc
dec
jo
pusha
pop
adc
cmpsl
push
call
mov
pop
fnsave
adc
mov
push
enter
mov
inc
loopne
pop
gs
mov
ret
xor
out
ja
test
push
mov
call
xchg
pop
push
or
xor
and
clc
ret
pusha
xor
and
lret
adc
or
jno
push
pop
jb
mov
daa
adc
sbb
sub
gs
or
add
add
mov
stos
das
aad
inc
out
insl
add
sbb
pushf
movsl
in
lods
dec
sbb
or
imul
scas
out
scas
lock
push
insb
imul
fs
jb
jp
sbb
inc
add
cmpb
mov
fiadds
mov
andl
mov
mov
or
jo
pusha
lcall
nop
cmp
pusha
push
xor
jo
mov
and
fs
or
ja
inc
mov
out
and
jmp
into
or
xor
mov
xchg
aas
sbb
xor
mov
mov
enter
rcrl
xor
mov
ret
adc
and
pop
jmp
mov
pop
cltd
pusha
jo
jl
filds
push
jmp
int
aad
stos
xchg
jb
lea
jo
adc
add
loop
add
pushf
push
cmc
adc
xor
or
out
push
in
test
cmpsl
jg
dec
pop
js
add
fimull
xor
sbb
cmpsl
das
xchg
or
cs
add
pop
push
lea
push
enter
shrb
jo
pop
and
test
jp
add
adc
mov
inc
cmp
mov
xchg
in
sarb
mov
rcrl
subl
out
je
cld
xor
xlat
jns
jmp
cmp
or
and
mov
sub
push
jno
fdivrs
adc
push
mov
jp
ljmp
push
lds
xor
addr16
je
arpl
lea
mov
push
dec
andb
and
aad
ret
scas
rcll
sbb
sub
add
popa
adc
jmp
mov
leave
or
adc
ss
push
mov
xchg
jmp
or
lods
lret
lods
ret
subb
push
push
and
cld
and
adc
and
jns
cmp
dec
sbb
aad
pop
mov
cs
and
jo
inc
sub
add
mov
jo
inc
sub
mov
enter
sbb
sbb
adc
sti
sub
pop
or
out
push
pushf
mov
and
jbe
add
push
pop
mov
inc
lock
add
outsb
ja
add
sbb
call
into
jmp
jae
dec
pusha
push
fdivrs
xchg
sub
pop
push
xor
push
pushf
test
adcl
imul
ret
sbb
ss
sbb
ljmp
ljmp
sub
mov
es
xchg
addb
cmp
shr
adc
lret
and
cltd
adc
jns
movsb
pusha
jb
push
insl
popf
js
dec
jnp
push
nop
popa
adc
add
addb
xchg
add
sub
sbb
call
or
sub
pop
xchg
xor
mov
lock
mov
add
cmp
jp
cmp
dec
sub
sbb
inc
adc
aas
test
sahf
pop
push
rcl
aam
ficomps
xlat
lods
xor
jo
popa
addl
test
and
jge
pop
mov
jo
or
sub
sbb
enter
sbbl
xor
inc
mov
test
loope
inc
lret
add
iret
xchg
push
out
test
sbb
ffree
dec
ljmp
adc
lods
lcall
add
hlt
sub
lock
aaa
sub
pusha
arpl
test
xchg
inc
dec
idiv
mov
add
push
adc
sbb
mov
nop
jne
push
scas
sti
adc
rorb
xchg
jne
in
jnp
fsubrs
gs
std
pushl
call
lea
ds
jne
mov
ret
aam
pop
in
or
sbb
sub
fidivl
sbb
pusha
sbb
jo
or
fadds
mov
add
test
jle
je
aaa
or
arpl
sbb
scas
out
sti
inc
sub
xchg
push
xchg
mov
rcrl
testb
cmp
push
data16
mov
xor
inc
dec
pop
or
cltd
fs
adc
sbb
lock
xchg
jge
push
xchg
rorb
cmp
test
ljmp
inc
sbb
cld
push
add
call
movsb
xor
sub
imul
adc
lods
fs
push
popa
ud2
fdivr
xchg
leave
fisttpl
mov
push
jbe
or
ret
mov
adc
fcmovnu
xchg
sub
scas
or
xchg
cwtl
sub
mov
mov
pop
pop
jp
repnz
test
push
pusha
xchg
ss
push
mov
inc
jmp
jns
fldl
push
je
mov
or
add
sarl
pop
sub
test
mov
mov
mov
fists
pop
cmp
js
subl
mov
sub
outsl
or
mov
pop
lea
lea
and
cwtl
inc
into
xchg
push
lret
dec
push
pop
push
lock
push
scas
xor
leave
push
pop
aad
push
mov
daa
loope
push
mov
shlb
ret
jg
test
cmp
cmpb
push
jb
or
mov
mov
inc
movsb
xchg
out
add
rolb
enter
sahf
cmp
jg
popf
movsl
pop
xchg
mov
jp
jge
lock
sub
push
test
pop
addr16
pop
clc
jge
out
push
imul
dec
adc
cs
sub
test
mov
mov
add
xchg
dec
call
sbb
jne
lods
push
in
imul
adcl
or
dec
or
call
jg
add
xor
leave
mov
sbb
cs
in
das
pushf
not
adc
cmp
iret
mov
movsb
xor
xchg
mov
sbb
pop
add
jmp
push
lods
add
dec
out
dec
cmp
subps
mov
add
jbe
and
pop
in
fcoms
aam
inc
ret
jb
push
jno
ret
shll
adc
mov
add
cmp
push
pop
push
jns
xor
jnp
pushf
pushf
fsubrl
psubusb
adc
xor
scas
ss
and
out
dec
inc
push
xor
or
scas
or
cmp
std
cmp
or
xor
or
sub
or
nop
push
or
xor
cmp
push
jp
lods
nop
mov
pusha
add
lahf
jb
lea
push
xorl
xchg
neg
sbb
inc
sahf
or
add
dec
push
sub
adc
push
aaa
add
in
adc
filds
sub
outsb
or
add
ret
jg
sahf
ret
sti
mov
rorl
lds
mov
inc
xchg
jae
das
or
adc
add
repnz
adc
js
pushf
jne
fisttps
lea
push
mov
sbb
orb
mov
clc
cli
or
mov
jl
xor
out
cmc
dec
xchg
mov
leave
add
enter
lret
push
xchg
sub
insl
or
mulps
adcl
ja
dec
cmp
lahf
arpl
adc
cltd
push
lahf
and
add
imul
push
sub
cmp
addl
jmp
mov
pop
jmp
mov
adc
rolb
adc
sub
notl
imul
imul
in
push
jge
add
stos
push
pop
pop
scas
loopne
mov
pop
fcoms
mov
dec
pop
in
je
pop
sarl
sbb
movsl
mov
adc
popl
or
add
call
pop
test
je
sti
xor
jb
dec
movsb
mov
cmp
push
add
mov
fs
lret
xchg
ror
es
adc
jmp
dec
jl
fcompl
sbb
bnd
into
or
out
sub
and
adc
cmp
push
cmp
jle
clc
stc
out
cmp
jp
push
cmp
cmp
insl
call
mov
mov
push
add
inc
jmp
cmp
sbb
movl
popa
ja
inc
mov
fdivrp
xchg
ret
push
jno
push
cwtl
push
pop
adc
fs
pop
idiv
stos
ficompl
sbb
xchg
mov
adc
in
pop
cmpsb
push
mov
xchg
or
jns
mov
and
cmp
popa
mov
dec
pop
dec
add
sbb
daa
scas
or
or
jp
jo
loop
or
push
adc
in
and
loop
or
adc
in
sbb
add
mov
ja
lret
call
lea
jle
add
addr16
inc
xchg
adc
and
xor
xchg
or
pop
xchg
mov
mov
daa
iret
cmp
lock
push
xchg
push
jp
xchg
dec
cltd
lock
shrb
sbb
cmpsl
xchg
mov
mov
xchg
and
iret
or
xchg
dec
or
nop
dec
push
shrl
roll
sub
xchg
dec
xchg
fsubl
pop
pop
pop
in
add
mov
adc
popa
rclb
stc
aam
cs
add
adc
push
pop
or
cmp
or
outsb
jae
adc
mov
inc
push
mov
jo
test
pusha
sbb
inc
cs
adc
and
sub
ja
cmp
sub
enter
mov
adc
adc
or
inc
adcl
aas
jge
add
inc
or
pop
lcall
add
mov
daa
push
scas
xchg
sbb
negl
sub
pop
insb
and
stos
xchg
mov
movsl
jmp
out
dec
sbb
xor
out
sbb
and
jbe
cmp
lds
push
in
inc
lock
pop
jnp
andl
sub
sbb
dec
shlb
push
sbb
jmp
pop
lock
faddl
dec
inc
test
hlt
repnz
ds
lds
dec
in
cmp
push
mov
sbb
add
shl
add
add
rcll
sbb
inc
xchg
add
push
adcl
and
adc
or
jbe
pop
add
cmp
adc
sbbb
fwait
sub
cmp
inc
cmp
push
xor
push
sub
push
movl
xchg
lods
jmp
test
push
push
ds
cmp
cmp
ret
fsubl
sbb
inc
cmpsb
and
popf
mov
enter
sub
inc
sub
test
jns
sbb
ret
loope
int3
ds
xchg
dec
push
pusha
cld
inc
lods
mov
sub
xor
and
jecxz
add
imul
push
inc
out
gs
ljmp
jl
xor
repz
or
sub
push
movsl
adc
mov
or
add
sub
jle
jl
loop
mov
and
lock
mov
add
mov
lock
nop
add
out
push
xchg
sbb
insl
mov
add
movzwl
leave
in
push
or
dec
notb
lods
enter
sbb
or
or
sub
jecxz
inc
insl
mov
inc
sbb
outsb
fsubrl
adc
xchg
shrl
mov
idiv
mov
dec
je
xor
inc
cwtl
insl
cwtl
jg
aam
add
aam
push
jb
add
xchg
pop
pushf
add
cmp
mov
andl
mov
or
mov
adc
popa
mov
or
push
mov
jne
nop
sbb
dec
mov
sbb
lret
inc
xor
add
repnz
jle
add
inc
aas
rcrl
fld
and
or
dec
pushf
push
adcb
pop
sub
dec
mov
and
add
add
push
or
daa
push
test
adc
pop
adc
or
dec
or
push
or
imul
add
lods
test
adc
mov
in
add
andb
push
xor
inc
push
mov
jno
mov
movsl
add
push
jmp
clc
lea
ret
js
je
cmp
jle
sub
sub
add
ret
xchg
mov
add
inc
cmp
loopne
pop
pushl
stos
imul
ds
or
or
pop
mov
negl
or
inc
push
and
sbb
mov
mov
sbb
xor
in
addb
aas
dec
push
push
shl
test
faddl
or
push
mov
out
loop
jp
xor
or
xchg
xchg
fwait
dec
sbb
fcompl
fnstsw
test
je
inc
movsb
push
rcrb
add
sahf
ss
sbb
push
fldl
push
sbb
xor
inc
jg
xor
fsubrl
js
fstp
andl
into
fstpl
pop
jle
mov
shlb
mov
mov
jo
mov
imul
jnp
xchg
add
fsubl
pop
fsub
pop
fsubrp
pop
pop
xor
cmp
sub
pop
lret
mov
add
pop
push
fldenv
xor
add
and
sbb
test
aas
mov
and
xchg
scas
out
sahf
nop
sub
adc
fiaddl
je,pt
cmpsl
shll
nop
jbe
ljmp
roll
pop
lock
jnp
cltd
cmp
je
into
xchg
xchg
or
pop
xor
mov
xchg
dec
xor
lea
xor
sub
mov
sub
jnp
ja
ret
inc
movsb
xor
aaa
lea
adcl
dec
loop
and
and
and
test
push
sar
or
xlat
xchg
daa
add
push
outsb
dec
sbb
pop
int
nop
inc
xor
add
push
or
pop
dec
lds
adc
push
mov
clc
add
addb
mov
in
data16
add
jmp
adc
sbb
cmp
push
je
lods
adc
mov
add
push
leave
adc
mov
push
adc
jbe
push
xchg
addr16
loope
or
or
dec
mov
push
lret
inc
or
or
rorb
pop
adc
aaa
in
popa
add
or
and
mov
mov
xchg
jbe
push
fldcw
or
rcrb
rcr
ja
cmp
jne
and
ja
and
push
adc
push
adc
xor
mov
int3
je
jle
dec
inc
cmpw
stc
pop
adc
jne
mov
inc
inc
cld
in
scas
and
dec
push
push
jl
ja
stos
cmp
aas
xchg
lea
sti
jg
stc
std
mov
or
inc
inc
leave
loopne
leave
out
out
cmpsl
orb
push
push
push
push
jbe
inc
test
and
mov
sbb
jnp
pop
ret
dec
loope
sub
mov
push
jae
add
pusha
lods
orl
push
adc
and
push
add
mov
fwait
or
enter
adcb
dec
call
cmp
jo
add
dec
mov
dec
lret
inc
addr16
movsb
mov
and
clc
or
xchg
inc
in
in
or
lods
and
sbb
adc
sub
mov
jp
and
push
or
lock
pop
xor
or
movsb
std
ljmp
dec
je
clc
push
cmp
or
xor
sub
push
fcomi
mov
pop
loop
std
mov
mov
loopne
cmp
into
xchg
xchg
xchg
in
enter
cltd
mov
cmp
shrb
in
loopne
mov
shlb
sub
pop
pop
or
sub
sub
rcrb
push
and
mov
inc
bound
nop
mov
roll
push
jne
fwait
dec
sbb
test
push
add
shll
lret
cmp
jns
or
ds
ja,pn
or
les
addr16
cmp
inc
lahf
andl
jno
and
xor
aaa
mov
pop
push
arpl
add
or
lahf
push
dec
orb
add
icebp
add
in
jne
dec
xlat
add
sbbl
movsl
pusha
subb
mov
push
mov
ficompl
pusha
notb
sbb
adc
adc
push
adc
jbe
clc
jo
in
outsb
pop
jge
add
sbb
inc
xor
dec
mov
or
imul
arpl
xor
add
xchg
mov
push
loopne
cs
push
push
test
int3
sub
daa
push
orl
cmc
jge
lods
aaa
add
subps
dec
inc
and
shlb
in
dec
mov
cmp
popa
aaa
pop
jecxz
add
mov
dec
ret
pop
outsb
outsb
sub
pop
sub
push
xlat
test
add
add
loopne
sbb
stos
int
ret
inc
mov
push
ss
mov
jno
jno
js
ret
or
ljmp
and
jl
insb
push
fnstenv
gs
and
pop
out
mov
arpl
ret
sub
cmpsb
imul
add
sbb
dec
xchg
js
push
scas
fcompl
and
inc
adc
inc
cmp
lahf
inc
add
mov
repnz
inc
stos
mov
mov
shll
or
mov
push
scas
mov
adc
mov
int3
or
mov
ja
fwait
lea
aas
sub
add
cmp
ficoml
mov
hlt
ds
push
jb
and
pusha
test
and
nop
inc
push
sbb
js
inc
push
cmp
dec
inc
push
pop
push
pop
repnz
or
xor
pop
and
aam
push
jns
call
cmp
nop
dec
je
test
in
inc
int3
call
and
and
nop
inc
push
jb
add
inc
push
cmp
cmp
nop
pop
add
push
push
nop
fimuls
ds
mov
sub
repnz
push
dec
adc
jns
out
and
cmp
out
sahf
dec
push
pusha
mov
test
mov
sahf
out
in
clc
add
repz
or
and
xor
cmp
repz
push
pop
data16
cmp
repz
mov
cmp
sub
adc
lods
push
adc
inc
push
xchg
inc
xorb
sub
mov
out
xchg
lods
or
add
mov
cs
inc
xchg
cmp
inc
iret
sbb
and
add
dec
jge
add
pusha
ja
lret
adc
ret
mov
fwait
or
lea
dec
and
rcrl
mov
ja
cld
inc
popa
or
inc
or
xor
mov
add
out
fcompl
cmp
mov
push
nop
or
es
ret
movb
xchg
movsb
test
xlat
arpl
sbb
das
and
movsl
xor
sbb
inc
dec
fildl
or
loope
adc
push
sar
pushl
push
dec
ss
mov
pop
sub
movsb
jecxz
insb
repz
loope
sbb
push
or
lahf
push
sbb
add
pop
jmp
movsb
and
mov
xor
fcomps
clc
sbb
pop
jae
jae
je
cmp
mov
and
jmp
mov
mov
enter
stos
enter
mov
movsl
mov
or
push
sti
in
sub
sbb
call
xchg
inc
push
pop
icebp
inc
popa
insl
std
mov
xchg
jnp
add
jb
scas
xchg
jo
lea
outsl
cmp
cmp
loope
ud0
jne
adc
or
sub
push
sub
mov
mov
lea
or
icebp
rcl
jne
popa
add
mov
sarb
aam
push
cld
das
xchg
xchg
or
and
or
add
jl
mov
dec
pop
jb
xchg
sub
push
adc
jl
sub
jo
lods
loop
adc
nop
or
adc
dec
jae
fwait
adc
adc
adc
dec
jae
test
mov
add
movsb
mov
or
jmp
xchg
jo
pop
pop
sub
ret
inc
pusha
imul
fdivl
and
test
lods
mov
int3
push
movsl
loope
sub
popf
pop
loopne
adc
loope
xor
cmpsl
test
pop
subl
pop
nop
js
push
push
mov
mov
js
imul
popf
adc
sbb
arpl
add
jp
shl
sbb
mov
jecxz
pushl
mov
mov
push
sarl
cwtl
nop
imul
jmp
push
stos
popf
jle
cmp
call
sar
fwait
sbb
das
sbb
mov
rcrb
sbb
pop
cmp
mov
push
cmp
fldl
lret
repz
movsb
sarb
mov
add
jo
or
inc
es
mov
rcll
lea
add
inc
js
arpl
push
inc
scas
xchg
mov
xlat
and
xchg
call
test
mov
or
and
xlat
and
mov
fmuls
fs
inc
mov
sub
mov
cmc
and
push
mov
cmc
xchg
adc
xchg
aas
and
int3
jne
pop
rcll
inc
xchg
or
mov
std
lahf
adc
jmp
out
sub
mov
loopne
inc
mov
repz
mov
cs
xchg
xchg
pop
add
rorb
cmp
or
pop
jle
add
sarb
mov
ret
add
sbb
sbb
popa
jg
or
fdivrs
repz
in
pop
or
or
mov
push
repz
add
cmc
pusha
pop
das
cmp
xchg
pop
mov
pop
add
stc
pop
in
cmp
mov
in
or
add
nop
xor
bound
test
or
sub
mov
xchg
pop
divb
mov
in
xor
ja
mov
sbb
sti
sbb
mov
sbb
pop
fmuls
mov
push
jno
inc
mov
and
or
adc
xchg
and
iret
sub
inc
adc
mov
mov
dec
mov
stos
pushf
clc
fcoms
cwtl
dec
jne
sbb
shl
mov
add
pushf
aas
sbb
pusha
in
pusha
ret
adc
add
sarb
rcr
mov
loopne
hlt
xor
jb
add
ret
pop
push
add
push
jl
lock
push
xchg
test
sub
inc
and
jns
movsl
cmp
mov
dec
mov
js
les
dec
pusha
in
mov
sbb
sbb
ret
roll
pop
in
rcrb
push
cwtl
int3
xchg
add
push
inc
dec
mov
in
pop
fsubl
push
push
mov
jno
jp
sti
dec
adc
test
or
es
mov
daa
push
adc
push
push
cwtl
nop
fwait
pop
inc
adc
scas
sbb
rcll
imul
sbb
je
inc
stos
sbb
mov
nop
fildl
sbb
cltd
nop
cmpsb
les
push
or
pushl
adc
pop
mov
mov
mov
mov
test
hlt
test
sbb
sarl
cmp
imul
sbb
lcall
nop
inc
pop
xchg
push
jae
sbb
adc
dec
jae
enter
out
jno
mov
out
out
test
mov
nop
cwtl
or
out
mov
addb
xchg
test
or
xor
int
push
pop
or
dec
add
add
int
inc
shll
pop
sbb
cwtl
cltd
and
test
loope
push
addb
das
cmp
loopne
push
loope
jno
lahf
and
push
add
dec
sub
ret
ret
or
xchg
call
or
cmp
sub
loopne
adc
cmp
scas
faddl
cmp
dec
fcompl
jecxz
xchg
add
jecxz
mov
push
xchg
adc
xor
sahf
add
scas
xor
fs
shlb
pop
cmpsb
sub
data16
outsl
or
jge
js
xchg
sub
and
jo
inc
pop
pop
add
add
rclb
mov
or
push
sub
jb
push
pop
xchg
lds
stos
push
push
and
pop
push
push
rolb
jmp
imul
in
sbbl
add
ss
shrb
rolb
pushf
mov
mov
jge
sub
and
jne
push
adc
cwtl
nop
scas
inc
mov
es
xchg
dec
sbb
call
pop
xchg
xorl
add
push
loop
xorb
or
mov
dec
pop
sbb
insb
dec
int3
add
stos
add
pushl
and
push
and
add
and
adc
adcl
incl
xor
and
add
es
jne
cmpsb
mulb
add
ss
sub
or
and
or
add
dec
clc
mov
cwtl
in
rclb
aam
loopne
sub
daa
lea
pusha
and
mov
add
orl
push
outsl
bound
or
dec
enter
pushf
pop
pop
push
pop
mov
dec
leave
and
sbb
sbb
lea
dec
xchg
pop
rolb
adc
xor
adc
es
sbb
inc
wrmsr
leave
push
pusha
push
cmc
or
cmp
sub
fnstenv
xchg
inc
and
cld
add
mov
pusha
add
nop
pusha
repnz
aam
in
js
pop
dec
int3
inc
or
mov
adc
jo
pop
imul
or
push
mov
add
cmp
adc
clc
cmp
test
sub
ret
or
std
add
cmp
pop
ss
xlat
andb
jp
cmc
mov
loopne
mov
inc
cmp
cmp
loopne
adc
or
add
and
mov
add
movsl
xchg
cmp
jae
push
mov
fadds
mov
xchg
jge
inc
mov
pop
fsubp
or
jmp
lea
lcall
push
scas
xchg
add
xor
add
jl
push
iret
cmp
inc
pand
loope
sub
in
mov
xchg
lods
push
push
lea
xor
xor
addl
xchg
inc
cmp
inc
mov
jo
das
push
lods
ret
aam
loop
inc
push
add
mov
push
clc
adc
je
mov
movsl
pusha
rclb
data16
jb
fstpt
hlt
mov
jg
mov
mov
add
addl
jb
adc
ret
xor
and
pop
xchg
or
lahf
js
hlt
xor
pop
mov
cs
adc
xlat
jbe
out
xchg
bound
inc
mov
cwtl
ds
dec
xchg
push
test
adc
push
hlt
subl
or
iret
ljmp
fimuls
cmp
enter
jae
outsl
dec
mov
or
cmp
inc
inc
je
mov
movsl
mov
push
pop
inc
mov
jmp
or
das
out
cmpsb
cmpsb
std
dec
pop
mov
cwtl
adc
rol
sub
in
and
sbbb
or
popa
sub
ja
xor
lods
dec
popf
dec
mov
add
ret
ds
cmpsl
fnsave
sbb
aad
jbe
jmp
xchg
pop
fsubrs
insb
es
jmp
dec
inc
inc
lock
lock
sbb
call
push
sub
and
inc
in
jp
add
lea
loopne
or
sbb
sub
add
pushl
pop
pop
dec
in
mov
jo
pop
testl
pushf
dec
add
and
add
pop
push
in
push
push
inc
icebp
in
fs
push
pop
inc
outsl
mov
rolb
mov
lods
jmp
cmp
jl
xor
or
je
cmp
bound
scas
pop
or
and
movb
movsbl
shr
jg
lock
xchg
insb
jl
push
add
pop
dec
add
mov
mov
mov
mov
jne
pop
push
xchg
rcrb
leave
roll
popf
rorb
jl
insb
and
sbb
adc
or
cmp
xlat
bound
js
and
and
push
lods
lcall
push
push
ja
or
aas
out
loope
bound
aam
cmp
xor
jg
enter
pusha
push
push
cmp
adc
xchg
imul
push
call
xchg
pop
cmc
ja
pusha
jo
pop
jno
lock
xchg
push
inc
scas
sahf
test
cwtl
push
cmp
push
and
push
sbb
in
xchg
mov
xor
out
rcll
add
adc
rcl
mov
mov
lock
add
pop
sbb
popa
and
or
xchg
mov
hlt
call
insb
jns
push
mov
insl
ficoms
loopne
ret
mov
rcrl
hlt
cld
fldl
clc
xchg
cmp
jne
mov
push
and
or
inc
cltd
cmpsb
clc
clc
push
xor
sub
leave
lahf
jnp
mov
cmpsb
cld
hlt
add
xor
sub
adc
cli
aas
in
sti
mov
xor
jmp
push
mov
repz
xor
mov
adc
cltd
xchg
pop
test
add
les
lock
mov
mov
push
xor
or
shlb
ficoml
in
pop
and
mov
and
jne
test
jo
shl
adc
repz
or
inc
adc
add
ss
dec
and
adc
xchg
mov
movsl
sub
cmpb
adc
daa
or
por
and
add
movsl
push
aad
ss
add
add
bound
inc
adc
shlb
pop
inc
add
int
pop
inc
push
xchg
adc
shrl
loopne
stos
add
test
lea
pop
and
shl
dec
pushf
push
je
test
notl
pusha
mov
jo
sub
push
push
loopne
or
inc
push
or
jle
xor
xor
mov
js
push
jmp
repnz
adc
cmp
arpl
in
jmp
shl
push
push
mov
loopne
jae
or
xor
jo
mov
in
mov
pop
and
pop
cmpsb
push
es
mov
jle
jecxz
dec
mov
cmp
int3
in
imul
les
add
push
and
mov
inc
or
inc
leave
add
jp
popa
add
subl
int3
sub
lods
pop
data16
lahf
xorb
mov
jl
test
repz
xlat
xchg
insb
xor
loopne
cs
arpl
sbb
jnp
xorb
test
lcall
leave
adc
adc
fisubs
rorl
adc
ret
add
jl
push
jns
jecxz
sbb
xor
shlb
sub
inc
adc
inc
cwtl
adc
push
push
scas
adc
and
data16
xchg
sbb
sub
push
test
loopne
fistl
fadds
adc
rcrb
insl
lret
mov
out
add
mov
leave
loopne
mov
sub
ret
adc
add
adc
pop
push
out
dec
push
jnp
sbb
push
or
or
xor
sbb
repnz
jmp
jbe
push
adc
push
leave
shlb
lret
jle
scas
push
sbb
jp
inc
fs
pop
in
and
pop
shrl
push
and
and
add
ljmp
xchg
sub
pop
and
addl
xchg
cmp
das
clc
or
mov
stos
dec
mov
fmull
out
cli
mov
cmp
sbb
lret
jge
shrl
pop
ret
push
test
sbb
sbb
popa
pop
push
sub
enter
and
fmull
aaa
fdivs
add
add
jmp
cmp
popf
push
shll
addb
push
in
sahf
and
daa
push
mov
xchg
and
adc
cld
or
rcrl
or
in
pop
dec
pop
add
test
push
ja
mov
jmp
sbb
adc
jg
int3
xchg
popf
sbb
or
inc
enter
xchg
lods
out
movsb
sub
cld
sahf
pop
enter
sub
push
iret
jmp
push
int3
inc
push
je
xor
sbb
out
sbb
sbb
mov
lret
je
test
mov
repz
and
pop
sub
js
push
dec
mov
rorl
add
add
cmp
and
rcrl
xor
mov
mov
js
adc
jmp
cmc
push
gs
jmp
lmsw
inc
mov
mov
xor
sbb
xor
and
jmp
lret
icebp
xor
stc
ret
les
jecxz
mov
ret
je
lret
and
pop
sub
cmp
les
jo
fwait
dec
fwait
xor
push
jbe
pshufw
test
pop
xor
mov
jl
push
or
jae
jne
dec
int3
sbb
push
jge
roll
jnp
lock
movsb
inc
xchg
mov
ds
nop
inc
mov
sub
in
pop
adc
jne
pop
fcomip
call
or
sarb
cld
dec
adc
decb
jno
lods
ret
cmpb
fstps
rorl
sbb
movsb
xchg
aam
mov
push
push
push
fidivl
cvtps2pi
jno
in
add
xor
mov
ret
jge
and
mov
jge
and
test
mov
mov
mov
xor
push
xchg
ds
mov
push
jmp
xor
push
lcall
push
xor
and
test
mov
add
or
xor
push
mov
and
cmp
sub
pop
pop
adcb
cmp
les
jmp
or
sti
mov
add
daa
lods
or
cmc
xchg
push
dec
xor
in
test
mov
divl
ljmp
push
adc
push
jnp
push
jne
sub
jb
and
push
gs
add
idivl
ds
cmp
insl
jne
es
xor
popa
inc
cmp
mov
jns
inc
popa
fdivrs
mov
sbb
jecxz
loopne
push
add
movsl
xchg
adc
lahf
cmp
inc
mov
sbb
pop
imul
adc
pop
cmp
stc
push
push
and
ret
jle
sub
pop
add
jnp
add
push
es
divl
pop
fsubl
sub
mov
pop
mov
pop
test
js
inc
or
clc
imul
add
sbbl
xlat
in
push
adcl
ja
xchg
jne
add
test
push
push
fadds
xchg
lods
mov
sub
test
mov
mov
shlb
in
push
insb
cld
or
sub
pop
add
adc
push
mov
inc
fdivrs
mov
aam
cltd
mov
icebp
pop
je
aam
pop
ret
ret
pusha
and
mov
outsb
pop
sbb
sbbb
arpl
test
js
dec
ret
cltd
mov
sbb
inc
mov
cmp
aas
out
out
cld
adc
jne
daa
bnd
adc
hlt
jne
ret
repz
cmp
divb
or
dec
les
sbbb
cltd
imul
hlt
and
insl
pop
popf
in
in
imul
in
sbb
add
rcrl
sbb
nop
js
pop
cmp
mov
dec
xor
inc
inc
push
jl
ss
mov
mov
pop
mov
fstpl
hlt
jp
fmull
jns
jne
pop
mov
imul
mov
inc
outsl
inc
repz
out
outsb
ja
cmp
mov
xor
mov
addl
icebp
mov
and
pop
fmul
int3
inc
adcl
mov
aas
enter
into
popa
cmp
sbb
or
scas
lret
push
fstl
adcb
sub
neg
loopne
test
add
adc
in
adc
cmc
dec
sbb
popf
add
dec
ret
aaa
xor
mov
test
test
push
ss
imul
cwtl
dec
xchg
inc
rclb
jg
loopne
or
pop
mov
xchg
or
cltd
shrl
pushf
test
cmpsl
shrb
orl
incl
pusha
xchg
je
jmp
xchg
test
cmp
pop
mov
orb
aaa
test
push
jne
xchg
into
xor
xor
fs
push
push
subl
ficoml
mov
mov
pusha
push
xor
push
or
adc
pop
or
add
or
add
fnstsw
call
or
lahf
push
jmp
or
into
movsb
cld
lea
xchg
mov
gs
jne
popa
and
mov
dec
ret
mov
pushf
cmp
and
lea
insb
mov
cmpsb
push
and
add
sbb
imul
rcr
inc
imull
adc
add
cmp
or
lea
bound
push
push
push
pushl
cmc
push
leave
push
pop
pop
jmp
mov
xchg
xchg
xorb
jo
jge
sub
sub
add
fstps
mov
mov
mov
pop
xor
ss
jnp
add
push
jp
fnsetpm(287
mov
jno
cmp
and
test
cwtl
cmpb
rolb
add
pop
mov
add
add
orb
rcr
inc
or
cmp
push
adc
dec
jmp
mov
mov
sbb
ljmp
mov
outsl
mov
roll
sub
das
mov
and
xor
push
inc
aas
movsb
das
inc
and
iret
test
adc
cmp
and
and
test
adc
pusha
mov
cmp
mov
shl
gs
adc
je
out
notl
gs
sbb
or
sbb
in
test
pop
loop
shlb
sbb
daa
mov
mov
sbb
and
sub
inc
daa
and
and
cmp
inc
daa
and
and
and
sbb
and
and
and
and
and
push
xor
mov
cmp
add
cli
pop
dec
test
call
mov
arpl
clc
cmp
jmp
subb
add
jne
sbb
and
and
insb
add
push
add
push
lret
jns
jg
sbb
xorb
icebp
scas
adc
mov
faddl
fbld
push
arpl
aaa
nop
jg
sbb
dec
js
cmp
jg
fmul
repz
and
je,pn
lock
push
daa
popa
or
xchg
push
add
add
dec
sbb
mov
pushl
pop
fsubl
push
sub
movsb
repz
pop
enter
leave
or
pop
and
pop
pusha
sub
and
jne
and
and
nop
push
lea
mov
mov
xchg
jp
xchg
dec
inc
or
cmpsl
adc
pop
js
dec
or
mov
lods
adc
sbb
loopne
or
inc
dec
jmp
enter
ret
or
je
cmp
mov
std
pop
sbb
imul
pop
movsl
loopne
mov
add
mov
push
jmp
mov
sbb
mov
mov
scas
lea
fsubrs
lods
cmp
in
add
rolb
adcb
xor
fildl
pop
add
adcl
jne
movq
je
lods
push
push
int3
sub
xchg
scas
cmc
jns
xor
pushf
add
into
dec
mov
push
mov
jmp
xor
packsswb
add
sbb
mov
lcall
movsb
shrl
dec
and
inc
shrb
push
addb
arpl
jecxz
jg
shrl
fsubr
push
jne
sbb
rol
push
mov
imul
sbb
es
jne
mov
pop
adc
out
popa
mov
xchg
cltd
mov
rcrb
loope
mov
out
rcrb
cmp
and
or
call
roll
pop
sbbl
pop
cli
jbe
jecxz
adc
inc
xchg
sbb
pushf
cmp
add
dec
clc
push
dec
xlat
push
or
out
inc
loopne
xchg
cmp
and
imul
movsl
negb
cmp
sbb
lock
sub
and
imul
inc
xchg
mov
mov
sbb
les
sbb
jmp
flds
pop
notb
and
jae
inc
push
sbb
mov
into
push
rcr
and
mov
arpl
rcrb
in
pop
jle
ss
pop
push
popf
mov
lea
je
jmp
xchg
je
pusha
dec
mov
adc
jo
dec
and
sbb
xor
add
jne
push
lock
mov
inc
bound
cmp
mov
or
mov
fidivrl
outsb
adc
je
pop
stos
inc
inc
add
jge
int3
inc
add
js
leave
loope
add
pushf
cs
cmp
jmp
pushl
mov
push
inc
loopne
push
arpl
insl
mov
and
push
adc
xor
mov
rolb
pop
lahf
push
mov
jge
jns
jmp
and
js
mov
cltd
ret
jb
lret
jne
inc
mov
cmpsl
push
pop
jge
loope
cmp
shll
mov
add
jle
lods
sub
push
cmp
fadds
lcall
cwtl
int
xor
inc
pop
pop
stos
push
mov
add
xchg
subl
js
inc
pop
in
in
inc
sub
dec
add
cltd
add
outsb
and
mov
pusha
pop
mov
jo
lods
jo
ss
mov
pop
in
ja
leave
pushf
dec
or
sub
inc
test
pop
out
gs
jge
xchg
add
adc
add
rolb
sbb
xor
xor
ja
std
fcoml
add
js
hlt
jae
movsbl
mov
add
sbb
mov
add
sbb
int
jne
push
pop
jmp
enter
ret
incl
stos
decl
call
shl
or
repnz
jge
add
push
add
cltd
and
add
sar
add
adc
jle
clc
xor
xor
ss
cmp
jecxz
shll
jle
add
or
xor
mov
lock
out
jb
aaa
rcrb
mov
cmp
loop
addr16
mov
push
lcall
jp
sub
and
jbe
hlt
jo
add
movsb
ret
or
shrl
rolb
roll
pop
xchg
mov
mov
adc
or
or
jle
insb
mov
jecxz
mov
xor
add
js
inc
mov
jns
push
fcom
dec
jne
aad
addb
arpl
push
mov
mov
aam
loopne
sbb
cmp
int
add
mov
inc
pop
adc
inc
adc
icebp
add
data16
inc
in
lock
ds
inc
pop
pop
daa
inc
movsb
dec
or
dec
add
loopne
inc
inc
lods
test
pop
or
xorl
sbb
add
sbb
inc
xchg
dec
in
in
mov
xor
test
pop
dec
pushf
or
mov
mov
les
and
pop
dec
or
add
xchg
add
imul
push
mov
jl
aam
cmp
xchg
push
push
stos
and
sbb
pop
cmp
add
aam
sbb
push
in
dec
fwait
sbb
fimuls
ljmp
add
xor
jmp
pop
pop
jb
in
push
push
add
in
leave
mov
jmp
mov
loopne
mov
push
call
cs
shl
test
push
adc
test
inc
cld
insb
adc
sbb
cmp
sbb
jecxz
mov
lea
dec
jns
int3
fmuls
push
sbb
mov
int
sub
or
or
sbb
jo
xchg
in
rcr
mov
jno
add
bound
cmp
and
cmp
add
lods
movb
xchg
cmp
adcl
ret
mov
iret
push
pusha
adc
fdivrl
mov
fwait
sub
pop
add
fcmovnu
and
test
mov
jmp
sbb
or
mov
pop
xor
pushf
and
loopne
or
sahf
or
cmp
jae
pop
imul
lds
or
nop
xchg
cmp
movsl
adc
push
and
fldenv
sub
daa
movsb
sti
or
mov
cmc
xchg
popa
out
mov
int
add
add
add
aam
mov
jmp
jns
daa
add
add
mov
cld
call
test
out
in
ret
add
into
xchg
insb
sbb
push
mov
loope
xor
jno
dec
hlt
cmp
in
push
push
push
pop
aam
inc
out
push
pop
pop
jne
mov
mov
rorl
adc
add
sbb
push
xchg
call
adc
rol
icebp
iret
xlat
push
pop
leave
adc
xchg
fstps
dec
xchg
sarb
add
add
add
int3
pop
mov
dec
int3
or
loop
icebp
mov
add
pop
cmpsb
outsl
cmp
jne
sti
push
pop
cmp
mov
mov
out
mov
shl
je
jne
lods
das
adc
and
pop
xchg
add
nop
xchg
or
loop
push
pop
mov
add
cmp
jae
rcrl
or
fcoms
sub
xchg
cmp
add
mov
dec
pushf
xor
lods
roll
int
xlat
jbe
mov
ret
add
scas
and
lcall
bound
hlt
dec
call
mov
bound
pop
cmp
jl
cwtl
loopne
fdivrl
pop
jge
loope
or
add
imul
ret
mov
push
daa
movsbl
shl
aaa
sbb
insb
ljmp
and
aaa
add
addl
jmp
inc
out
cli
or
dec
out
test
xor
lret
cmp
loope
aas
movsb
mov
dec
adc
or
xchg
rolb
mov
adc
jno
shlb
adc
mov
add
and
iret
ret
iret
pop
ret
dec
xchg
adc
pop
sbb
stos
mov
push
adc
lret
das
mov
mov
add
shrl
loop
mov
inc
jge
pop
pop
xorl
or
adc
dec
sbbb
sub
adc
leave
test
or
fdiv
sub
shlb
cwtl
xchg
das
or
insb
imul
call
xchg
lock
orb
sub
push
mov
sbbl
mov
rcrb
mov
cs
out
in
xchg
or
out
mov
daa
cmp
cs
mov
movsl
outsl
loopne
mov
xor
push
xor
inc
jg
loopne
jl
fisubs
xchg
pop
cmp
std
les
mov
mov
jge
add
mov
add
mov
je
filds
mov
inc
mov
mov
cmp
adc
inc
mov
push
aam
js
lds
rcrl
not
jle
sub
push
fistl
orb
fbstp
or
add
add
ss
mov
adc
and
xchg
or
push
leave
push
xor
xor
mov
inc
call
jne
fcomps
js
and
and
imul
or
push
push
dec
sbb
mov
test
push
jo
inc
adc
inc
cwtl
mov
push
jl
cli
imul
sbb
or
push
loope
fs
in
das
movsb
shrb
jp
pop
or
ret
cltd
in
cltd
push
xchg
in
adc
sub
les
or
insb
aad
or
adcb
rcpps
push
dec
enter
mov
popf
jle
jo
pop
inc
dec
pop
test
jae
and
mov
or
or
psraw
adc
jo
cmp
add
mov
subl
dec
jo
cmpsl
cwtl
push
xor
loopne
sbb
jmp
sbb
fisttpll
mov
ja
and
cltd
fadds
adc
pushf
jge
add
out
sbb
ret
and
mov
mov
xchg
cld
cmc
adc
jmp
adc
or
test
mov
orb
shlb
cmp
sub
pop
loopne
push
imul
fucomip
incl
cmp
jbe
cmp
jbe
mov
sbb
mov
jle
inc
mov
xchg
pop
into
xchg
call
into
insl
mov
sub
add
fmuls
les
xor
push
rcl
mov
inc
ja
push
jp
jns
nop
jp
mov
mov
fcomps
push
pushl
rorl
int
negb
and
inc
or
push
mov
sti
mov
out
sti
scas
jmp
cltd
mov
xor
or
daa
pop
cmp
enter
sbb
or
mov
cmp
jbe
mov
mov
lea
mov
pop
scas
out
js
movl
push
js
sti
lea
pushf
mov
add
xchg
push
imul
cwtl
or
add
pushf
imul
fstpt
sbbl
push
push
xchg
sub
adc
pop
mov
pop
rcl
mov
lcall
or
sbb
lods
lods
fisttpll
push
ret
jb
pusha
je
leave
adc
hlt
adc
dec
push
pop
xor
adc
repnz
mov
shlb
fdiv
adc
fstl
inc
push
lcall
pop
lcall
es
add
stos
in
xorb
in
add
pop
mov
add
mov
scas
xchg
rorb
je
or
jl
int3
adc
loopne
mov
sub
test
mov
mov
outsb
push
sub
in
rcrb
or
pop
cmp
test
sti
das
push
dec
or
icebp
push
add
mov
adc
clc
mov
push
pop
push
sar
lahf
nop
adc
push
test
jo
sbb
xchg
iret
mov
loope
adc
and
mov
cmovs
rcrb
lret
jne
jbe
rorb
mov
lahf
insb
mov
fs
shl
pop
movsb
int
imul
add
lret
loopne
in
add
sub
and
add
insb
pusha
rolb
out
scas
cmp
mov
xchg
decb
cmp
push
inc
shll
or
ja
pop
sbbl
add
mov
adc
mov
ficompl
pop
mov
jbe
fs
imull
mulps
pop
jle
inc
orl
in
sbbb
fsubl
sbb
xchg
ret
pop
sbb
pop
xchg
inc
filds
outsb
clc
ret
sbb
shlb
xchg
cmpsl
lcall
loopne
add
imul
sbb
loopne
push
ret
fsubl
loop
sub
or
cmp
push
outsl
test
push
mov
or
or
sub
add
faddl
mov
adc
scas
repz
or
pop
and
je,pn
sub
dec
mov
and
cmp
push
and
push
loopne
jne
rcll
stos
and
and
lods
insl
test
dec
mov
dec
or
push
je
and
adc
lcall
xchg
in
lea
aam
fnstenv
int3
and
and
out
mov
push
jb
neg
pop
sbb
arpl
sbb
inc
popf
rolb
mov
inc
mov
cmp
xchg
cmc
xchg
and
or
out
and
and
mov
test
or
imul
arpl
push
les
xor
and
push
call
push
add
adc
out
and
outsb
mov
inc
mov
adc
inc
ljmp
xlat
mov
es
mov
in
sti
pop
cmpl
decl
push
hlt
dec
cmp
pop
pop
sbb
mov
loope
mov
inc
imul
fistpl
aam
lret
push
add
pop
clc
jne
les
sub
sub
mov
push
xor
pop
es
in
paddusw
mov
push
test
pop
repnz
lahf
rorb
jb
mov
xchg
fiadds
jae
mov
jnp
mov
inc
jb
jp
dec
shrl
xchg
movsb
call
rcrb
pop
xchg
xchg
cmpl
inc
push
adc
push
or
push
inc
sub
pop
fnstcw
push
push
nop
xlat
inc
jmp
stc
jmp
or
sbb
fsubr
jno
mov
nop
or
add
arpl
pop
lods
lods
mov
pop
cmp
hlt
push
jecxz
jae
out
jmp
add
gs
es
fmuls
pop
jmp
mov
nop
outsl
adc
je
pop
cmp
das
add
inc
xchg
and
loopew
das
loop
push
cmp
jecxz
mov
jmp
inc
mov
mov
add
and
mov
dec
fsubrs
mov
inc
popa
xchg
mov
je
cmpsb
push
sbb
adc
xchg
test
sub
sbb
fnsave
mov
pop
push
push
add
and
rolb
addl
adc
and
jae
js
add
popa
dec
sub
mov
sub
inc
jecxz
mov
push
pop
sub
adcb
push
cmp
push
sub
jnp
rolb
push
mov
sbb
mov
mov
or
lea
or
jl
mov
clc
mov
xchg
or
pop
inc
cmp
sub
nop
push
push
in
push
mov
das
inc
popa
lock
sub
mov
int3
dec
or
xor
pop
add
sub
dec
or
xor
push
add
pusha
mov
popa
sbb
and
inc
inc
bndldx
sbb
push
les
stc
and
and
xchg
int
popa
dec
popa
pop
mov
les
xchg
jle
jecxz
or
add
cmp
pop
mov
ljmp
mov
push
inc
in
pushf
jno
push
inc
mov
push
cwtl
pop
push
or
and
and
repz
mov
rorb
inc
add
insb
test
imul
js
add
dec
inc
aam
pop
pop
sbb
loope
inc
add
add
cld
aas
mov
sub
add
movsl
sub
mov
adc
fldt
sbb
pop
mov
and
out
xor
jne
push
jo
push
movsb
loope
rorl
in
inc
adc
inc
push
jp
mov
jbe
mov
movsb
cmp
mov
orb
xchg
dec
mov
inc
ret
push
dec
ficoms
adc
pop
fadds
inc
pop
mov
ss
popf
aam
lcall
in
push
dec
mov
outsl
add
mov
push
pushf
push
xor
mov
adc
mov
sbb
xor
inc
add
cmp
sbb
adc
rcll
sbb
add
adc
adc
pushl
dec
and
push
push
mov
dec
push
jecxz
dec
fsubrl
and
push
mov
inc
lret
out
cmc
cmp
sahf
faddl
sub
or
jge
aam
and
add
xor
test
js
xor
stos
add
xchg
xchg
push
cmp
sub
gs
iret
hlt
dec
xchg
lock
or
add
or
or
push
adc
mov
gs
or
xor
popa
testl
pop
fld
outsl
fchs
imul
jmp
xor
dec
cmp
mov
inc
inc
jne
xor
aaa
popa
push
pop
or
dec
inc
and
mov
add
push
sbb
add
push
sub
sahf
or
out
sbb
adc
jne
stc
sar
adc
inc
sti
arpl
repnz
incb
inc
jmp
cmp
mov
mov
jle
fstl
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
int
cld
and
dec
lea
mov
jmp
outsl
iret
sti
or
mov
dec
xor
push
cmpsb
jne
jmp
testb
je
negl
pop
ret
scas
sbb
cs
in
cmp
jbe
out
pop
add
inc
cmp
mov
jmp
inc
and
push
add
cli
pop
mov
ret
or
dec
mov
mov
sub
loop
cmpsb
repnz
je
mov
add
push
push
adc
into
or
xchg
mov
pop
call
in
test
cmp
ret
add
inc
xchg
push
jne
inc
insl
rcll
sti
cmp
outsb
hlt
cmpb
push
std
xor
mov
out
rorl
lock
jbe
push
sub
ja
shrb
enter
jnp
push
push
sub
in
jge
jne
adc
cld
rcrb
fcomp
and
pushf
popf
jle
inc
push
jmp
loopne
jne
pop
popa
test
mov
out
jmp
rorl
mov
xchg
outsl
je
xorb
aaa
jae
xor
add
shrb
addr16
inc
jecxz
add
jmp
pushf
aas
insb
sti
and
cmpsb
adc
movsl
movsb
and
or
cmpsb
or
int
js
fs
jne
xor
mov
adc
mov
aas
push
mov
or
push
mov
jmp
dec
pop
insb
sbb
shlb
fisubrl
sbb
xchg
shrb
rcll
sbbl
bound
or
int3
in
and
mov
push
pusha
outsb
push
int3
inc
jg
or
jge
add
sti
out
out
jle
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
sub
ljmp
inc
loopne
pop
jbe
add
clc
mov
test
xchg
and
add
add
out
adc
je
test
jne
pop
sbb
std
sub
jb
clc
push
test
mov
dec
push
xor
mov
adc
movb
stos
xchg
test
sub
adc
rorb
sub
pop
sar
inc
push
mov
push
mov
inc
aad
xchg
ljmp
adc
mov
inc
push
mov
adc
ja
out
jae
add
mov
jp
arpl
dec
inc
push
inc
in
mov
jbe
sbb
push
xor
inc
inc
inc
xor
fildl
clc
push
mov
mov
and
dec
orb
rcrl
sub
jecxz
inc
int3
dec
test
pushf
sub
mov
je
xor
cmp
mov
jne
sbb
test
mov
xchg
jo
addr16
and
mov
xchg
pushf
xor
jbe
jg
lock
fwait
rclb
in
mov
pushl
jbe
push
aaa
out
pop
cmpb
xor
adc
in
push
out
jecxz
into
push
shlb
int
jp
hlt
ficomps
and
mov
and
movsb
out
and
cmpsl
lahf
pushf
mov
push
popf
mov
mov
fldl
mov
sbb
sub
lds
xor
add
mov
mov
push
movzwl
pop
aad
push
andl
cmp
mov
rcrb
or
test
sbb
and
adc
mov
inc
stos
push
xor
ja
xchg
push
pop
push
movl
mov
or
xor
push
ret
loopne
jbe
dec
or
adc
mov
xchg
add
movsb
sub
add
adc
push
clts
rep
xchg
sub
xchg
sub
pop
lods
sbb
cmp
ds
js
jbe
hlt
add
pusha
je
pushl
cmp
rolb
imull
call
push
pop
push
shrl
add
cmpl
inc
add
shrl
paddsb
xchg
mov
cmc
lea
jne
jb
pop
sub
mov
pop
push
inc
mov
rcrb
fbld
in
lea
jbe
mov
popa
iret
out
andb
inc
sti
inc
inc
fwait
and
sbb
pop
mov
nop
push
sub
add
popf
inc
movsl
inc
pop
pushl
fnop
adc
insl
push
xchg
stos
pop
adc
push
adc
dec
push
pusha
je
shl
or
test
dec
push
inc
dec
inc
xlat
loopne
jmp
xor
push
fs
insl
add
shll
adc
jnp
pushf
sub
jmp
push
scas
mov
add
mov
sub
cmp
sbb
or
mov
icebp
in
clc
mov
addl
lea
sbb
jbe
dec
pusha
addl
rol
and
adc
mov
push
pop
roll
add
sahf
rcl
iret
loopne
mov
push
aaa
les
shl
test
leave
add
pop
mov
loopne
cmp
repz
daa
xor
xorl
mov
sbb
jle
adcl
pusha
sti
pusha
jb
dec
adc
push
mov
pop
pusha
adc
roll
fmuls
ss
push
adcl
jle
rorb
mov
sahf
mov
mov
jge
sahf
das
push
and
gs
sbb
push
pop
pop
inc
push
ljmp
jae
mov
loop
or
push
cmp
fsubs
push
out
inc
inc
push
push
popf
test
lahf
cmpsl
inc
pop
xchg
addl
jbe
and
pusha
xchg
pop
cmp
ret
and
lea
mov
loope
push
sub
push
fstpl
dec
cmpsb
popa
jb
pop
or
testb
xchg
pop
xchg
rorb
fs
and
jb
pop
push
dec
push
add
xchg
adc
adc
jbe
movl
adc
aam
fsubr
mov
jns
sub
lods
or
inc
sti
mov
sarb
pushf
testl
clc
ret
inc
add
jbe
mov
sbb
cmp
test
pushf
test
push
push
lret
mov
jne
mov
lcall
fidivl
jnp
das
movl
and
js
inc
mov
iret
sbb
cmpl
setp
cmc
test
lcall
sub
inc
orl
lret
test
inc
nop
dec
rolb
inc
mov
inc
je
shr
push
aaa
mov
cmp
mov
add
mov
lock
jne
push
scas
iret
loop
jne
into
mov
add
lea
mov
in
jp
inc
jecxz
inc
adcb
pop
cmp
loope
adc
mov
lods
repnz
cmpsb
or
cmp
pop
mov
cmc
xchg
jne
mov
cmp
fmuls
icebp
cmpsl
lods
fwait
sbb
pop
jbe
mov
xchg
fsubs
mov
jmp
xlat
push
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
dec
or
enter
pop
jne
pop
call
pmulhw
test
addb
insl
in
xor
stc
jbe
jle
pop
jne
jmp
sbb
sub
mov
inc
sub
push
sub
std
insl
sub
jmp
jnp
mov
fnstsw
add
je
pop
in
push
cmp
subl
mov
andb
push
sti
cmpsb
jp
fistl
repz
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
cs
leave
mov
push
jno
pop
and
xchg
fiaddl
lret
mov
dec
push
fucomi
sub
clc
dec
je
add
adcl
sti
ljmp
inc
cmpsl
orl
ljmp
lret
in
pop
fs
push
mov
or
inc
shlb
cmp
or
or
or
pop
fadds
insl
ret
push
xlat
push
push
or
jne
jno
push
push
sti
inc
pop
pop
push
sbbl
mov
jle
push
dec
adc
push
ja
add
inc
add
andl
sbb
xchg
and
or
subl
adc
xchg
sub
pop
xchg
lret
in
pop
pop
pop
pusha
pusha
test
or
into
sbb
cmp
pop
dec
loope
pop
xor
sbb
ret
addb
and
gs
mov
cmp
cwtl
push
xor
test
lods
outsb
mov
jmp
mov
mulb
and
jg
xchg
pushf
push
adc
in
add
rcll
lret
insb
inc
popf
dec
rcrb
push
add
mov
sub
adc
inc
das
loope
ret
ret
sub
jl
push
add
xor
es
in
stos
add
push
pusha
or
or
xor
movsb
or
int3
xor
adc
lea
lods
sbb
xorb
cmp
pop
sbb
or
xor
push
loop
jmp
addb
int3
lea
aas
jp
push
pop
jmp
shr
mov
adc
adc
or
add
fistpll
mov
sbb
sub
scas
and
dec
sbb
out
sub
dec
xor
das
sbb
test
push
and
sbb
movsb
xor
inc
mov
lea
push
xor
cmpsb
insb
xor
sti
es
sti
jmp
addr16
pop
push
mov
pop
mov
pop
mov
or
mov
add
inc
pop
test
push
inc
cmp
cmp
push
shufps
pop
mov
and
push
jns
and
push
sub
add
dec
adc
sbb
dec
in
inc
jne
sbb
sub
cli
or
je
jg
add
add
sbb
sbb
ret
cltd
sbb
and
pop
sbb
lods
shr
dec
dec
inc
sub
mov
add
pop
fisubs
popa
loope
inc
pop
rcrb
or
pop
fstpl
std
sbb
bound
into
and
mov
leave
into
sbb
sub
sbb
adc
ds
movsl
xchg
add
into
inc
mov
shll
in
outsb
fcmovnb
push
push
mov
cmp
jne
or
adc
mov
pop
shlb
jo
mov
imul
sbb
sbb
sbb
orb
daa
push
shrb
cmp
sub
js
push
pusha
pusha
mov
sbb
push
jns
add
incl
cmp
adc
or
into
push
push
sbb
mov
xchg
push
sub
mov
call
cmp
jne
push
negb
sub
mov
lea
hlt
cmpsl
jne
mov
push
sbb
mov
pusha
je
divb
push
sbb
xchg
lea
negl
inc
add
add
pop
adc
xchg
test
add
mov
int3
std
jmp
cmp
lea
adc
mov
nop
enter
test
inc
je
mov
or
into
mov
add
inc
inc
mov
cmp
ljmp
aam
pop
nop
pushf
push
push
sbbb
dec
cltd
mov
scas
cwtl
loopne
lock
rorb
mov
call
adc
ret
and
orb
xorb
push
fdiv
push
popa
shlb
add
jmp
mov
ss
cs
mov
push
lea
cmpl
push
add
adc
add
adc
test
or
mov
xchg
lock
pushl
and
adc
out
in
mov
mov
scas
add
add
flds
jmp
xchg
shlb
jns
sub
mov
adc
mov
mov
movsw
fs
push
mov
pop
mov
sub
subb
cmp
mov
loopne
cmpsl
mov
pusha
push
pop
or
imul
adc
sbb
outsb
inc
ds
push
test
pusha
add
inc
je
adc
es
ret
and
mov
xchg
xor
int3
mov
clc
jmp
sub
sbb
push
add
pop
imul
mov
cmp
inc
inc
add
add
cmp
sub
xor
and
jne
adc
xor
push
push
jo
mov
add
add
in
adc
mov
sbb
mov
add
gs
push
sub
pop
or
js
xor
xor
or
stos
dec
dec
dec
jne
jns
jnp
les
sbb
xor
call
push
sbb
add
lock
jbe
push
aas
in
leave
push
clc
jge
jmp
mov
add
enter
cmp
jne
test
fldcw
cs
stc
imul
shlb
and
sahf
lret
stos
jl
ret
adc
pushf
push
adc
jno
and
stos
xor
int3
loopne
movsb
inc
adc
in
or
sub
lock
or
push
sbb
sbb
or
fsubrs
sbb
cmp
fdivs
cmp
ljmp
cltd
sub
xchg
test
cmc
daa
popl
cmc
das
cs
cmp
add
pop
pop
jp
add
inc
mov
add
jl
movl
addb
mov
mov
scas
cmpsb
ficoms
movl
xchg
and
sbb
in
stos
test
stos
xchg
mov
mov
xor
pushf
mov
rcrl
lea
mov
shrb
mov
add
shlb
and
sub
stos
inc
inc
dec
testb
add
add
test
inc
shl
cmp
pop
add
pusha
adc
xor
mov
push
xor
cmc
ds
xchg
lcall
inc
ds
test
cs
push
xor
or
cwtl
mov
mov
jmp
push
fildl
enter
jne
mov
or
add
push
dec
jmp
je
int3
or
sub
aas
ret
or
mov
lock
aas
sbb
mov
add
push
fdivrl
cmp
add
scas
lock
mov
in
or
xchg
stos
cmp
je
pusha
shlb
and
hlt
ret
inc
incb
adc
or
cld
adc
and
movsl
push
inc
add
add
or
jae
sbb
cltd
mov
pop
leave
sub
outsl
and
stc
cmp
xchg
pop
push
push
lsl
xor
xchg
mov
ja
rorl
add
sub
mov
sarl
push
push
mov
or
push
popf
orb
ret
mov
gs
enter
sub
pop
sub
sbb
and
pop
sarl
add
inc
dec
nop
push
add
ret
adc
push
push
lods
mov
mov
pop
mov
xchg
mov
loopne
mov
ja
push
adc
push
pop
ja
cmp
lods
cmpsl
jo
pop
sarl
jo
push
add
shr
jge
mov
sbb
jne
pushl
loopne
adc
push
jb
xchg
add
jbe
data16
sarl
xchg
push
cmp
pop
iret
mov
mov
lods
ljmp
push
mov
xchg
mov
adc
dec
loopne
mov
push
das
dec
mov
xor
nop
push
jmp
xor
dec
popa
add
into
adc
sub
jmp
pusha
jle
enter
pop
and
push
cmp
mov
lret
repz
adc
xchg
jbe
sub
ja
int3
add
adc
out
sbb
mov
xchg
pusha
push
jns
inc
cld
dec
inc
icebp
sub
mov
cmpb
or
push
cmpsl
mov
adc
dec
add
cmpsb
add
sub
sahf
cmpsb
or
loop
xchg
mov
xor
push
das
mov
out
popa
std
xor
stos
xor
push
lds
xchg
addr16
daa
add
cld
pop
sub
loopne
push
leave
fdivl
dec
subl
push
xchg
test
or
daa
imul
das
lcall
in
test
add
cmp
pusha
popa
adc
pop
mov
xor
or
incl
iret
or
adc
jbe
push
and
xlat
int
out
push
mov
push
pop
sbb
or
pop
inc
sbb
pop
xorb
dec
sub
xor
push
jmp
inc
jo
lea
push
jmp
jge
rclb
mov
loopne
dec
movl
add
pop
pop
jl
mov
or
adc
es
shll
xor
cmp
pop
sbb
and
ret
pop
lock
adc
add
and
ret
addr16
sbb
xchg
flds
bound
mov
xor
movsl
int3
or
movsl
mov
test
sbb
mov
dec
push
jnp
jnp
mov
mov
and
ljmp
inc
and
add
rcrb
ret
mov
mov
jge
jecxz
adc
andb
loopne
ret
or
push
call
jo
lea
or
cld
movsl
ror
nop
outsl
push
cltd
gs
jmp
sbb
lods
xchg
out
jle
jg
xor
rcrl
xchg
add
insb
mov
jae
xor
or
adc
rolb
je
sbb
or
shlb
repnz
mov
push
dec
ret
mov
mov
popa
aam
cwtl
pop
andl
and
dec
push
iret
lea
fistps
adc
dec
cmp
movsl
inc
inc
push
inc
cmp
and
and
aad
xchg
pop
jle
mov
popa
mov
sub
mov
fimuls
add
adc
imul
sbb
push
pop
lods
pop
movsb
sahf
push
sbb
test
pusha
or
or
and
inc
add
inc
dec
outsb
mov
push
adc
dec
push
outsl
cli
mov
test
in
sub
push
sub
decl
cli
sub
adc
hlt
or
and
or
loopne
ds
inc
cmp
data16
add
stos
or
push
add
or
pop
cmp
jnp
mov
aaa
push
imul
push
xchg
push
orb
pop
cmp
rorl
add
sub
xchg
outsb
dec
mov
push
pop
mov
add
test
loope
jbe
jb
addr16
push
push
mov
mov
jbe
adc
xchg
outsb
or
add
int3
adc
mov
mov
jo
jp
scas
add
pushl
cmp
pop
jnp
lds
hlt
int3
subl
mov
jmp
jg
adc
dec
jecxz
xchg
pop
xchg
push
push
mov
std
jno
and
push
orb
cli
mov
cmp
adc
roll
fidivs
ja
loopne
dec
loop
adc
enter
and
push
add
mov
and
cmp
sub
sbb
mov
sbb
adc
test
cmp
jmp
fadds
pop
adc
or
mov
inc
lods
add
dec
lods
or
dec
aam
push
inc
shlb
cmc
inc
ret
mov
xchg
dec
fistps
aam
push
pop
inc
pop
leave
push
arpl
cltd
jmp
pop
inc
mov
mov
push
and
pusha
mov
imul
int3
or
dec
nop
dec
call
cmpb
ret
loopne
cmp
pop
push
mulb
add
adc
std
push
jl
pusha
popa
cmp
mov
xor
fsubl
sub
in
cmp
mov
mov
cltd
fisubs
cmp
jbe
adc
sub
pop
jle
rolb
outsb
xor
jae
ret
and
xchg
jmp
divl
addb
xchg
hlt
nop
enter
sbb
mov
in
add
popf
add
lcall
xor
add
mov
xor
dec
out
dec
leave
movsb
stc
push
mov
sub
jle
insb
xchg
bound
hlt
mov
cmp
jbe
mov
mov
push
push
and
aad
mov
xchg
inc
idivl
cmpl
mov
incl
cmp
jne
cmp
push
push
jmp
xchg
push
adc
lcall
jae
dec
or
adc
js
add
aam
mov
frstor
pop
shll
cmpsb
fmul
js
aad
pop
jns
aad
xor
or
push
or
inc
nop
out
cmc
and
cmp
ret
push
clc
pop
call
push
cmp
jae
push
push
das
cmpl
scas
add
ljmp
orb
mov
mov
inc
dec
loopne
mov
xchg
xor
lock
and
mov
sbb
imul
pop
cmp
lahf
test
add
push
mov
xchg
hlt
movb
mov
add
xchg
das
dec
or
je
inc
loop
mulb
push
insl
inc
popa
sub
or
mov
rcr
mov
pop
jmp
add
or
mov
test
dec
cmp
into
ja
push
movsl
sbb
push
rcrb
sarb
das
cli
dec
dec
push
ja
jne
add
jmp
pop
and
sarb
fldt
and
push
push
adc
dec
shrl
or
pusha
mov
orl
pop
pop
sar
sub
cmp
shlb
stos
std
and
inc
sub
sub
pop
push
imul
pop
loop
out
add
mov
fistl
ljmp
mov
cmp
fcomps
cmc
mov
addr16
adc
push
jns
mov
push
mov
dec
xor
shr
mov
fnstcw
xor
jmp
jg
push
mov
mov
movsb
lea
or
push
sbb
movsl
jmp
push
push
push
clc
sub
jb
mov
xor
enter
loop
push
ja
or
sub
mov
adc
or
add
jg
movsb
das
ret
xor
lock
pop
mov
mov
jmp
inc
les
lahf
sbb
shr
ret
gs
je
push
sub
scas
and
pop
mov
subl
push
movsb
push
test
adc
adc
and
adc
sub
and
movsb
ret
mov
sbb
lret
and
test
adc
adc
xor
jb
ja
inc
cmp
cmp
sbb
sahf
lret
jb
adc
inc
testb
adc
mov
add
rclb
add
outsl
push
sbb
or
sarl
neg
sbb
inc
je
cmc
enter
jp
cmp
rol
xor
add
push
clc
mov
cmp
call
sub
and
sti
xchg
push
sbb
lret
push
leave
clc
pusha
mov
roll
xor
xlat
arpl
xor
push
inc
add
push
jnp
add
popf
xchg
mov
mov
xchg
or
ja
adc
adc
lret
push
push
es
ja
adc
jb
and
adc
adc
mov
rolb
nop
adc
adc
pop
adc
xor
xor
and
clc
push
pop
dec
or
sub
lret
mov
sbb
mov
push
ret
add
insl
and
lret
cmpsl
adc
cmpsb
loope
lods
mov
rcl
mov
incb
mov
test
inc
leave
dec
jo
inc
sub
subb
lret
fisttpll
mov
cmp
testb
out
dec
inc
in
addr16
jp,pt
cmovbe
xor
jmp
cmp
dec
jo
adc
sub
sarl
je
xchg
adc
shr
outsl
adc
push
push
mull
ss
adc
sub
fdivr
dec
cmp
ret
lret
es
add
xchg
out
imul
scas
adc
mov
mov
cwtl
lea
rcll
cmp
mov
jae
adcl
int3
push
and
sbb
jne
sbb
imul
jne
mov
xor
pop
movsb
mov
fldl
stos
orl
and
xor
inc
mov
cmp
push
sub
test
pop
dec
enter
and
inc
in
push
adc
pop
jg
dec
cmp
test
fstpt
mov
cmp
jge
push
ret
push
adc
mov
xchg
lock
or
jnp
inc
loopne
adc
pop
aas
ds
aaa
mov
loop
pop
mov
mov
jae
hlt
push
mov
test
insb
pop
adc
cmp
enter
cmp
jne
jo
jno
mov
insb
xor
jmp
cmp
mov
add
test
cwtl
xor
add
inc
jge
lock
pushf
and
ret
mov
inc
in
mov
popa
popf
fistpll
and
sarb
mov
adc
inc
leave
mov
inc
and
fldl
or
rclb
jmp
add
or
and
scas
xor
pop
cli
sar
xor
cmpb
out
cs
add
xchg
clc
jmp
sbb
test
pop
rcrb
add
and
cwtl
call
dec
hlt
sbb
inc
lret
loope
bound
cld
mov
fmul
js
mov
mov
pop
in
mov
stc
cmpb
add
jne
sbb
mov
push
ds
ret
enter
lock
fs
xor
nop
adcl
or
inc
add
pop
lcall
or
inc
cmp
jge
xlat
adc
and
popa
xor
mov
jbe
add
mov
xor
mov
xchg
sub
or
out
push
les
rorb
fstps
movsb
es
inc
es
stos
sub
nop
popf
stos
or
pop
dec
jl
call
sbb
inc
repnz
out
cs
and
scas
or
popf
and
negl
push
gs
icebp
push
and
mov
inc
mov
loopne
lret
push
ret
popf
aaa
sbb
sub
mov
mov
rolb
aaa
pop
add
stos
mov
loope
sub
push
repz
movsl
jmp
lea
ljmp
and
popf
pushl
mov
sarb
shl
or
mov
stc
pop
cwtl
call
sbb
lahf
out
loopne
loope
int
or
push
jge
adc
jns
and
std
pop
add
push
sub
cltd
ret
jno
mov
inc
dec
push
or
into
dec
xchg
cmpsl
cmpsb
cmc
pop
leave
jb
add
mov
inc
jg
adc
roll
push
push
jne
lock
cmpl
into
push
shlb
mov
ret
movsl
dec
leave
les
adc
push
addr16
dec
les
xor
jo
and
and
xlat
iret
lcall
or
int
mov
fmuls
jae
xchg
shlb
fsubr
cmp
adc
std
inc
xor
add
and
sub
inc
popa
mov
xchg
sbb
inc
inc
es
mov
adc
enter
or
add
rorl
dec
mov
sahf
push
cmp
and
and
adc
jne
lea
fsubs
mov
outsb
lea
and
lea
mov
mov
cmp
pop
add
adcl
loope
es
pop
push
and
xchg
loope
jge
or
xchg
jmp
aas
lea
test
sbb
rcll
mov
int3
mov
sub
jbe
mov
rorb
loope
call
push
jecxz
fnsave
loop
lea
lret
jmp
vcvttps2dq
cmp
xchg
adc
or
fs
mov
aas
push
lods
ja
ja
mov
js
call
lea
and
add
ds
adc
aaa
leave
scas
out
inc
or
inc
mov
arpl
out
int3
or
mov
pop
out
nop
push
sbb
add
icebp
rcrb
sbb
push
pop
add
pop
jge
xor
loope
xchg
imul
test
loopne
mov
mov
ret
xor
push
insl
cwtl
xor
sbb
sub
jecxz
pop
xor
mov
pop
clc
pop
clc
add
pop
out
sbb
sub
push
dec
inc
icebp
lock
jl
and
popl
dec
jle
xor
call
sbb
daa
mov
popa
call
iret
or
or
dec
and
es
adc
pop
sbb
jae
xchg
xor
push
je
mov
or
outsb
sbb
xor
mov
call
mov
int3
push
int3
pop
orl
repnz
mov
out
xorb
repnz
adc
dec
clc
mov
cmpsb
ret
in
jo
add
stos
lahf
leave
or
test
shrb
dec
je
dec
loop
jnp
das
or
mov
push
out
jp
xor
imul
lods
cmp
fisubs
iret
mov
add
mov
and
jmp
cmpl
testl
jbe
hlt
sbb
daa
mov
sbb
sbbb
xlat
test
out
mov
push
jmp
sbb
jbe
add
in
les
xchg
pop
dec
xchg
add
cmpsb
pop
les
stos
xchg
mov
push
xchg
fldenv
loope
out
test
sbb
dec
sbb
add
lock
add
insl
and
and
mov
test
inc
push
sbb
or
lock
lret
and
clc
dec
sbb
sbb
push
call
push
aad
cmc
out
push
or
jmp
sbb
test
ds
add
lahf
sub
push
push
xchg
fnstcw
pop
xchg
push
add
hlt
scas
jb
loope
sbb
or
sub
jge
mov
mov
jp
adc
pop
inc
xchg
pop
add
and
cli
out
inc
xor
mov
fistl
dec
mov
mov
test
or
inc
mov
loopne
andb
subb
dec
dec
enter
sbb
push
xchg
dec
push
jp
cmp
add
jno
adc
fsubrs
lea
sbb
jle
push
add
jle
je
push
sbb
xchg
push
and
mov
mov
lahf
ja
test
and
popf
mov
sbb
std
xchg
lret
imul
pushf
add
jbe
push
mov
aam
or
loopne
bound
adc
out
adcb
cmp
adc
fcomp
xchg
nop
aas
or
push
in
lahf
inc
fimuls
and
outsl
lds
mov
mov
dec
adc
dec
repz
imul
incb
insl
and
cmp
mov
push
inc
cmpsl
je
pop
or
inc
mov
loop
pop
adc
nop
sub
add
lods
lock
out
into
mov
adc
mov
fldl
aas
inc
mov
es
out
mov
or
xor
sbb
sbb
pop
xor
test
inc
adc
xchg
cmc
inc
fadds
adc
push
loopne
add
jne
or
dec
imulb
scas
or
push
cmp
nop
adc
data16
pop
fsubrs
push
fdivrl
cld
je
test
popf
shr
push
jns
lret
cmp
push
push
test
cmp
dec
or
data16
popa
sub
js
xor
stos
es
popa
add
and
sbb
xchg
cmp
hlt
icebp
sbb
scas
jns
or
add
fcompl
insb
add
add
cmp
jae
fsubs
push
xorb
lret
or
push
adc
hlt
jne
stc
ucomiss
ljmp
push
sbb
jne
mov
sbb
fcoms
sbb
adc
fsubrs
mov
out
or
mov
inc
push
cmp
adc
pusha
mov
cmp
mov
lea
movsb
or
rcrb
push
loope
mov
adc
fmull
fldenv
mov
add
push
arpl
neg
sbb
and
lea
movzwl
add
push
jmp
adc
xadd
pop
ret
and
jo
inc
sub
test
jo
sub
je
outsb
cmp
sub
mov
mov
sbb
mov
adcb
fldt
shlb
xchg
dec
adc
mov
out
cs
add
fcmovu
jbe
or
testb
mov
mull
mov
mov
ret
mov
shr
popa
rolb
mov
fldcw
cmc
dec
adc
out
adc
movsb
sbb
je
adc
mov
sbb
push
pop
dec
or
sbb
testl
aaa
mov
adc
repz
aad
mov
sbb
or
shl
int3
inc
mov
xchg
mov
movsl
adc
mov
or
mov
data16
pop
inc
sbbl
push
aam
push
xorb
out
shlb
imul
cmp
mov
cmp
adc
pop
xor
lea
mov
push
sbb
mov
xlat
nop
test
add
inc
in
lds
cmp
popa
inc
add
inc
aad
lock
add
inc
shrb
mov
add
inc
das
pop
and
push
sub
sbbb
daa
pop
cmp
test
loope
lcall
mov
and
dec
stos
in
in
in
std
inc
sbb
pop
xor
or
cmpl
add
shlb
inc
mov
aaa
jo
adc
xor
out
push
sbb
xchg
fmull
jecxz
cld
cld
jnp
and
or
outsl
pop
ret
pop
shll
and
fstl
fcmovu
and
arpl
mov
jb
and
cmp
cmp
inc
push
dec
jns
inc
ds
jo
mov
ret
pop
push
repz
clc
and
jnp
nop
test
mov
and
int3
jb
push
jae
nop
sbb
arpl
add
and
aam
inc
outsl
int
dec
lret
or
add
dec
lock
aas
and
inc
cmp
subl
jno
push
lock
push
xor
dec
lds
movsb
or
jle
push
dec
outsb
mov
std
mov
dec
jbe
and
in
xor
sub
out
insl
or
mov
rorb
or
and
out
lock
mov
and
test
into
aam
and
ds
mov
or
iret
cltd
imul
mov
add
mov
in
mov
out
imul
pop
ljmp
mov
lea
fmul
adc
scas
test
mov
or
and
jmp
gs
cmp
push
out
outsl
sbb
arpl
xor
mov
fdivl
or
scas
xor
and
mov
cltd
mov
xor
repnz
xlat
call
mov
loopne
js
adc
push
je
xchg
pop
jl
push
es
and
and
mov
push
and
pop
mov
clc
add
mov
xor
and
xchg
inc
sub
add
add
dec
xor
mov
jb
aad
and
mov
xchg
insl
mov
fimuls
dec
loope
sbb
jne
or
dec
dec
popa
mov
and
mov
out
push
rcr
mov
mov
outsb
enter
push
sbb
sbb
lahf
jle
pop
mov
jl
js
jle
lock
jo
sub
pop
jg
es
xchg
out
add
xchg
xchg
or
les
mov
ret
pusha
aaa
clc
rcr
or
fdivrs
cmp
dec
rorl
push
add
ret
popa
mov
xor
cmp
jae
sbb
mov
insl
arpl
push
fmuls
push
mov
fistpll
jo
or
ret
lret
adc
mulb
arpl
xchg
xchg
cmp
jb
aam
out
push
mov
mov
mov
sub
or
movb
arpl
add
imul
fwait
xor
lea
add
popf
pushf
xor
xchg
pop
imul
negb
or
jbe
cld
je
dec
adc
clc
add
jae
lea
ja
cmpb
jne
icebp
cmp
or
out
lea
rcll
cmp
in
andb
scas
sub
cmpsl
fdivp
movsl
jmp
push
dec
xchg
or
or
xor
cli
sub
fsts
mov
in
outsl
mov
inc
icebp
iret
cmp
jno
dec
jae
and
cmp
fmull
inc
sub
dec
dec
shrb
adc
dec
cltd
add
push
dec
lods
add
shlb
sbb
dec
adc
add
mov
sbb
addr16
jnp
sar
ret
cltd
call
adc
sbb
addl
xor
xor
and
or
sbb
and
adc
jo
adc
cmp
inc
clc
dec
xor
jne
or
sub
iret
jae
mov
mov
fwait
pop
subl
push
pop
fs
or
lea
cmp
jle
cmpsl
sub
popf
xor
xchg
cmp
je
pusha
jb
pop
adc
test
jmp
imul
je
adc
add
lods
add
dec
or
or
add
xchg
sub
pop
sub
ret
ljmp
dec
enter
imul
pop
mov
jne
cmpsb
mov
leave
push
aam
scas
add
mov
addb
idiv
adc
inc
cmpl
adc
mov
and
rcrb
inc
and
mov
rorb
mov
sbb
or
add
sbb
add
aas
iret
pop
rcrb
cld
or
fcoms
je
dec
add
or
jmp
add
adc
jge
mov
mov
and
loop
adc
xchg
add
xor
sahf
and
popf
mov
dec
addr16
cmpb
sbb
pop
outsb
xabort
mov
xchg
jmp
jae
mov
loop
ja
push
adc
js
add
pop
adc
jb
push
jae
pop
add
out
lds
sbb
incb
xor
stos
inc
or
hlt
sbb
pop
ret
inc
and
xor
xchg
pop
rcrb
loopne
sbb
jo
ljmp
into
cmp
lock
add
cmp
fdivs
inc
jmp
push
cmp
rcrb
cmp
sub
mov
inc
or
lea
add
sub
imul
es
addb
fscale
pop
enter
fbstp
sub
or
sub
xchg
insb
ffree
adc
fnstsw
or
repz
roll
cmc
dec
in
or
sbb
and
push
clc
push
and
jnp
pop
push
push
mov
jl
test
cmc
pop
or
loop
mov
jb
push
fmull
aad
test
and
lea
sbb
gs
jnp
sub
cwtl
roll
loop
push
push
into
sahf
movsl
call
and
adc
test
jae
into
into
cmp
inc
das
jnp
clc
imul
orl
and
or
cmp
sub
mov
fwait
cmp
inc
lods
push
lea
add
mov
push
inc
mov
aaa
inc
dec
cmpb
movsb
mov
rclb
mov
pop
loope
ds
push
mov
cmp
jmp
pop
and
push
adc
inc
or
add
push
adc
es
mov
or
test
xchg
imul
adc
push
decl
mov
add
dec
nop
stos
mov
rclb
and
sub
scas
or
sub
lcall
cmpsb
imul
pop
push
imul
mov
sub
pop
in
cmp
jne
cmp
cmpsb
jecxz
sbb
jbe
add
xchg
or
jo
hlt
pop
or
lods
sahf
pop
fdivrs
movsl
push
mov
mov
xorl
push
ret
sbb
sbb
js
mov
or
popa
or
call
dec
pop
lods
xchg
jo
xchg
jmp
ret
or
testl
sub
sub
push
dec
cmpsl
inc
cmpsb
xor
das
mov
shlb
cmp
add
jp
sbb
mov
push
push
int3
jg
adc
or
inc
mov
rolb
lock
xor
scas
fildl
pop
or
dec
mov
adc
sub
mov
sub
iret
insl
adc
dec
sub
sbb
push
pop
push
stos
or
pop
xchg
add
insb
pop
lahf
or
add
dec
test
inc
push
cmc
subl
icebp
insb
jno
icebp
push
sbb
icebp
mov
jle
notb
mov
mov
shlb
cmp
sbb
jnp
ret
dec
lods
jg
repnz
cmpl
scas
sub
pushl
iret
adc
push
pusha
shll
movd
pusha
adcl
fcompl
add
sub
and
rorb
mov
cltd
push
adc
idivb
test
enter
xchg
mov
jne
sbb
jmp
xchg
jo
xlat
fidivl
iret
jno
xchg
add
pop
or
enter
fwait
jae
jmp
or
mov
fbstp
jle
mov
inc
mov
in
jle
mov
cmp
imul
mov
xor
movsl
inc
jae
dec
jne
pop
lock
int3
push
or
jp
cmc
cmp
sub
dec
inc
adc
mov
add
pop
shrl
pop
mov
pop
dec
dec
sub
mov
sbb
cmp
push
cs
mov
mov
and
push
cltd
or
daa
xchg
push
mov
jae
add
adc
outsb
or
sbb
xor
cmpsl
lret
in
mov
mov
mov
mov
sbb
jb
adc
test
popf
jo
jno
lods
sbb
lock
mov
std
js
mov
add
int3
lret
and
pop
adc
loop
clc
xchg
stc
inc
movsb
insb
mov
jne
ljmp
xlat
inc
mov
mov
or
mov
lock
mov
xchg
rolb
and
flds
insb
inc
push
sti
jle
cmp
mov
xor
xchg
xchg
xlat
jb
cmp
gs
loopne
push
or
mov
sbb
cs
adc
out
inc
mov
push
or
fcoml
or
dec
or
sbb
and
or
pop
cmp
iret
mov
leave
push
jmp
xchg
pushf
sub
pushf
sub
mov
lret
sbb
rorl
inc
xchg
mov
xchg
orb
pusha
fisttpll
fs
xchg
aad
jnp
test
or
out
mov
cs
mov
and
xchg
dec
insl
push
movb
loopne
or
pushf
xor
nop
and
pop
fwait
ret
push
cmp
jnp
popf
inc
rorb
daa
ret
push
push
out
mov
aam
cmp
loopne
lea
loop
rcll
dec
movsb
push
mov
inc
je
or
or
shlb
push
jo
dec
ss
push
mov
enter
xchg
mov
sub
cmpl
dec
adc
mov
push
mov
popa
cmp
sbb
enter
andl
stos
clc
mov
mov
sub
fists
push
adc
adc
mov
adc
jbe
cmp
shll
in
retw
jmp
andl
leave
in
sbb
pop
les
mov
loopne
dec
mov
cld
add
jb
clc
orb
and
sub
mov
add
push
outsb
movsb
push
mov
sbb
mov
into
add
mov
shrb
pusha
pop
cli
xchg
inc
int
jge
push
lret
sub
and
bound
fsub
mov
mov
in
imul
mov
sub
or
and
inc
sbb
daa
scas
push
xchg
inc
push
add
and
dec
cmp
jecxz
or
sub
rol
in
mov
getsec
xchg
jp
push
inc
stos
or
mov
inc
pop
push
mov
mov
and
and
xor
daa
mov
movsb
out
mov
mov
push
mov
mov
jbe
mov
xor
fdivp
enter
cld
fs
in
push
pop
outsb
in
jl
fstps
lock
dec
iret
push
push
fs
xor
pop
or
add
jne
cmp
mov
and
jge
clc
cltd
cs
jmp
repnz
popa
push
sbb
inc
push
lret
popa
mov
pop
ror
mov
add
sti
push
xchg
and
mov
add
push
push
daa
jge
or
jecxz
mov
cmp
popa
lock
mov
testl
das
bound
lcall
add
jl
int3
mov
fldl
cmp
into
ja
ds
add
push
lea
push
push
test
xor
dec
lahf
or
cmp
jnp
aam
sbb
jg
lret
add
cmp
mov
lock
sub
push
xchg
mov
xchg
push
mov
push
or
jmp
lods
or
cmp
push
insl
adc
dec
and
call
sbb
push
jge
int
ficoml
push
mov
push
push
inc
push
cmp
lock
inc
enter
clc
mov
psubw
mov
push
push
or
cmp
dec
pop
mov
inc
scas
jbe
loope
mov
mov
jmp
into
out
sbb
in
loope
shll
dec
xor
dec
jg
push
clc
sahf
je
ror
push
add
sti
mov
outsl
push
xor
sbbb
dec
add
cmp
adc
icebp
sub
jl
mov
leave
sarb
sub
adc
rorb
or
mov
out
int
sub
dec
dec
jns
adc
rolb
mov
sub
inc
mov
ret
imul
inc
movsb
mov
addl
push
jecxz
jp
test
ss
movsb
inc
test
inc
addr16
inc
fsub
dec
in
xor
jbe
push
or
je
inc
mov
loop
add
mov
cwtl
setb
rcll
xchg
ss
outsl
jle
push
jmp
and
adc
js
je
pop
dec
loop
out
rclb
mov
ljmp
or
test
adcl
dec
sub
jnp
adc
notb
in
mov
bound
push
scas
in
fsubrs
add
pop
push
sbb
add
xor
data16
aad
xor
ss
aam
sub
inc
gs
inc
ret
dec
not
sbb
loopne
dec
cmp
pusha
pop
mov
outsb
mov
jnp
mov
imul
mov
rolb
cmp
ds
push
dec
enter
jno
xchg
or
push
mov
inc
adc
xchg
push
jl
xor
add
adc
femms
lods
popa
jne
mov
loop
push
lret
imul
xor
stc
mov
in
mov
add
jmp
push
inc
out
xchg
pop
push
hlt
mov
andb
or
in
outsl
dec
imul
sbb
divb
mov
dec
push
add
es
jno
add
jle
mov
or
pop
mov
and
into
jne
mov
test
les
flds
ljmp
add
pushf
sbbl
push
pop
lock
cmp
jmp
push
out
sbb
out
fildl
fcoms
subps
xchg
or
mov
mov
jno
cmpsl
popa
inc
add
in
sub
add
xchg
rol
out
lods
aad
push
xor
xchg
push
cli
lock
movsb
inc
fisubl
mov
cli
jge
push
push
xor
sarb
sub
mov
sub
mov
lea
push
push
mov
mov
mov
or
jnp
add
lods
or
xor
sub
mov
sbb
add
or
mov
dec
scas
jo
mov
or
adc
cmp
enter
jg
ds
icebp
mov
int
mov
push
rcrb
mov
out
popa
rcll
jo
jbe
cmp
and
cmp
dec
sub
insl
lods
adc
imul
das
cmp
addr16
sub
xchg
adc
jnp
xchg
mov
dec
or
pop
dec
ss
and
cmp
adc
add
lods
popa
lret
sub
fcoms
call
cmp
daa
insl
jne
dec
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
sub
cmp
sbb
dec
insb
jne
mov
jne
scas
aaa
mov
cmp
adc
inc
mov
mov
and
push
jo
divb
cmp
je
sub
push
or
lret
rcrb
fdiv
sbb
lods
aam
pushf
jb
push
nop
mov
mov
adc
add
mov
rclb
lea
loopne
decl
xchg
or
adc
jnp
push
xor
push
imull
cli
push
cmp
idivb
mov
inc
xorb
je
xor
sub
lods
xor
fidivs
xchg
xor
sbb
push
xor
arpl
cmc
push
and
xor
loopne
fcompl
sbb
jns
lret
add
imul
push
xor
and
or
sbb
clc
stc
mov
loopne
test
add
or
xchg
pop
push
jb
inc
loopne
pop
iret
fwait
push
jns
orb
adc
push
orb
inc
push
push
arpl
jne
mov
and
add
js
pop
dec
dec
faddl
stos
pop
xchg
jo
push
loopne
dec
mov
inc
test
js
sbb
dec
pop
cmp
cmpb
sub
inc
sbb
pop
push
sub
mov
mov
je
push
movsl
adc
test
add
shl
imul
push
insb
jo
js
mov
xchg
add
or
call
inc
xchg
andl
jo
or
cmp
adc
int3
fldcw
and
addr16
lods
imul
mov
divl
add
loopne
nop
in
and
movb
sbb
adc
nop
pushl
shll
jae
fadds
fs
daa
inc
jl
js
inc
push
fs
jo
fs
push
fs
inc
push
push
cmp
adc
push
push
loop
loop
inc
cmpsl
xor
inc
cmp
or
push
mov
pop
mov
jle
es
pusha
cmp
stos
orb
imul
cmp
fisubrl
orb
xor
pop
adc
inc
mov
adc
add
orb
jae
or
lea
jbe
dec
cli
adc
nop
or
outsb
adc
and
iret
jne
sbb
adc
es
push
jns
out
test
ss
xchg
lret
or
sbb
mov
mov
bound
push
mov
fwait
cli
xor
xor
add
jecxz
repz
shlb
push
das
dec
in
add
dec
and
inc
cmp
pop
pop
pop
push
inc
add
shl
ret
jb
frstor
mov
loope
leave
add
and
cltd
push
or
shrl
je
adc
fidivrs
jne
das
xorl
sub
loop
mov
inc
xchg
pop
jne
sub
push
insb
cmp
mulb
inc
dec
adc
imul
jmp
xor
fdivr
enter
mov
xchg
mov
adc
test
add
sub
stc
fldl
je
mov
das
add
lods
cmp
mov
xor
push
mov
nop
fcmovnbe
cmp
mov
fisttps
scas
add
xchg
and
push
jne
mov
sub
inc
sub
js
xchg
and
jl
ss
cmp
and
xor
jb
inc
xchg
ja
fwait
lret
xor
hlt
cld
je
push
push
sbb
push
dec
call
add
push
and
mov
sbb
loopne
jp
inc
clc
testb
adc
xchg
sbb
shrb
movsl
and
into
xor
adc
push
push
imul
or
stos
dec
push
push
push
push
popf
lock
push
fldt
sbb
jo
cli
out
push
cmp
iret
sbb
addr16
inc
pop
pusha
pop
sahf
fs
lds
mov
daa
dec
pop
pusha
mov
mov
and
jp
push
adc
sbb
jne
jb
adc
pop
sti
mov
adc
pop
push
push
daa
cmpsl
rol
sub
mov
dec
std
test
sub
call
xchg
scas
pusha
mov
dec
das
insb
pusha
add
pusha
push
jp
mov
push
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
lock
fcomp
xchg
inc
lock
pop
mov
jne
add
je
inc
lcall
or
or
and
orl
enter
out
xor
pusha
or
ja
icebp
or
mov
inc
jnp
jl
imul
inc
js
jle
pushf
cmp
cli
je
sbb
insl
popf
add
inc
scas
cmp
xor
jp
and
inc
pop
mov
jl
cmp
lea
push
hlt
push
mov
sub
inc
and
sbbb
jne
movsl
inc
xchg
dec
roll
dec
add
adc
fwait
xchg
orb
jnp
lock
enter
lock
cmp
mov
out
and
and
push
adc
push
sbb
loope
and
mov
mov
jg
sbb
sbb
add
movb
cld
mov
rorb
lret
sub
cmpsl
push
adc
movsb
cmp
xor
push
dec
pop
imull
cmp
pop
pop
test
pop
in
sbb
sbb
mov
test
test
fmuls
adc
movsb
or
out
jl
mov
and
test
pop
mov
sbb
mov
lods
inc
dec
adc
jbe
add
push
subl
jns
push
sbb
adcl
insb
mov
xchg
jno
push
test
popa
push
rep
jbe
popf
ror
mov
mov
call
popa
clc
xor
data16
push
aas
jne
outsb
mov
mov
mov
sbb
cmp
cmp
mov
popa
outsb
pushf
cwtl
fidivrs
sub
sarl
sub
mov
cmp
test
jle
cmp
fimuls
push
and
dec
push
lea
push
pop
cwtl
push
out
pusha
or
orb
push
or
lcall
imul
xchg
mov
cli
mov
adc
negl
inc
push
mov
popa
sbb
ljmp
add
mov
imulb
mov
pop
arpl
add
test
test
inc
mov
xchg
loopne
inc
outsb
mov
inc
loopne
movsb
outsl
add
inc
adc
push
and
mov
dec
insb
jnp
adc
data16
dec
pushf
sub
mov
sub
cmp
jge
int3
mov
jg
adc
stos
push
push
and
add
xor
xor
mov
inc
test
or
ret
adc
adc
icebp
push
or
pop
out
xchg
test
out
inc
or
jmp
add
sarb
popa
fisttps
or
pushf
mov
xchg
push
adc
xor
add
scas
out
pop
xor
pop
and
add
cmp
stos
push
lea
mov
in
and
cmpsb
inc
inc
sub
add
xchg
mov
xor
in
sub
lcall
ja
scas
bound
inc
pop
mov
mov
cmpl
pop
jne
incl
mov
add
inc
adc
cmp
xchg
aad
push
out
or
mov
add
rsm
add
testl
pop
into
xor
orl
mov
adc
cmpps
je
and
stc
movsl
add
jl
mov
dec
mov
sbb
and
insb
lea
push
adc
or
mov
pop
add
lock
in
cmp
push
mov
xor
lret
lods
cwtl
xor
cmc
or
jmp
xor
sbb
lods
sbb
mov
cmp
and
stos
sbb
je
pushw
inc
push
inc
fdivp
sub
fnstsw
and
fisubl
and
pop
pop
push
fisubs
push
xchg
out
je
or
pop
test
inc
popf
test
fldenv
js
jge
jl
repnz
or
sbb
mov
fs
dec
add
mov
push
testl
sub
xor
fistps
dec
jmp
or
cmp
dec
jl
push
and
ja
cmp
and
sub
jno
mov
push
sbb
pop
mov
push
sbb
inc
jg
add
push
add
iret
sbb
inc
lret
adc
lcall
jo
pop
or
repz
mov
cmp
push
loope
pop
rorb
jl
jb
aam
add
jge
hlt
rorb
sub
cs
je
adc
js
pop
cmp
pop
jmp
add
push
xor
pop
adc
or
pop
mov
jge
cmp
push
addr16
jo
or
sbbl
fcoml
incb
pop
dec
xor
call
sub
push
addl
sbb
pop
lahf
xorb
ret
mov
movsl
movsb
fstpl
xchg
push
xor
or
mov
push
dec
pop
pop
lcall
and
push
mov
mov
pusha
lret
push
jne
fcmovnb
sbb
inc
jbe
in
add
sbb
xchg
add
xchg
jns
xor
add
sub
imul
push
inc
xor
xchg
mov
add
pop
jle
or
jge
add
fwait
jg
push
adc
add
and
mov
pop
lea
js
icebp
add
adc
test
push
sub
push
inc
xor
jp
loopne
mov
mov
jecxz
dec
sbb
push
rcll
push
mov
dec
insl
add
inc
push
dec
pop
sub
inc
xor
sub
lock
jmp
mov
xor
ret
push
lods
testl
sbb
ret
sbb
pusha
lea
data16
cmp
mov
pop
add
push
subb
test
sbb
mov
inc
or
sarl
xchg
xor
popa
mov
xchg
pop
pop
ret
xor
outsl
rcll
cs
adc
mov
gs
adc
ret
or
xor
fs
mov
add
outsb
inc
jae
ficompl
or
pop
cmp
cmp
repnz
jo
test
lea
in
pop
dec
mov
inc
xor
add
call
adc
pop
pcmpgtb
mov
mov
nop
jo
or
mov
adc
push
mov
mov
gs
push
mov
inc
popa
and
cld
push
push
or
ret
and
scas
or
and
clc
mov
sbb
je
push
cmp
sub
add
push
pushf
repnz
sarl
sbb
add
jo
or
das
pop
leave
lds
push
xor
inc
add
adc
and
fdivs
arpl
fmull
jns
mov
movsl
add
jne
sub
imulb
sub
test
push
mov
test
pop
lock
push
sub
xchg
adc
jl
inc
cmp
in
mov
orb
ja
imul
mov
aaa
ret
testb
je
aaa
jecxz
push
fidivl
cmp
push
pusha
decl
dec
jl
loope
xor
push
fildl
pop
pop
adc
test
inc
test
xor
and
add
push
fistps
push
lods
push
xor
jae
test
mov
jl
daa
pop
sub
add
and
cwtl
inc
mov
aas
mov
addb
add
inc
push
leave
xor
pop
popa
add
sarl
aaa
add
sub
test
sarl
out
push
xor
inc
mov
adc
pop
add
add
or
shl
sbb
cld
mov
and
cli
push
test
je
xor
adc
or
or
pop
inc
fsubrl
sbb
add
mov
add
loopne
data16
in
jns
and
push
xchg
cmp
mov
and
lods
insb
mov
jle
or
ss
adc
js
ficoml
fstpt
push
inc
or
mov
inc
pushf
jmp
es
xlat
dec
mov
add
fwait
sti
push
pop
push
aas
push
fimuls
cwtl
imul
sbb
idivl
push
popa
test
cld
jbe
lds
sti
mov
push
in
test
cltd
add
stos
push
rcll
dec
fbstp
xchg
or
mov
movsb
inc
cmp
in
pop
imul
lods
out
push
addl
aas
movsl
imul
and
cmpsb
xchg
outsl
mov
inc
pop
xor
dec
sbb
sbb
testb
repz
or
push
dec
loop
jmp
jmp
enter
pop
daa
js
imul
cmpsb
add
mov
adc
jmp
xchg
pop
mov
out
andl
or
push
stos
loope
std
mov
ret
sbb
adc
mov
rclb
and
lea
sbb
cmp
jbe
push
outsb
adc
sub
lods
jp
cmpsb
sbb
push
mov
xor
sar
movsl
pop
push
or
jae
xchg
jge
xchg
cmp
xchg
or
xor
orl
cmpsl
adc
cmp
in
push
rolb
cmp
dec
mov
ret
fs
add
mov
mov
add
jmp
mov
xchg
mov
adc
sbb
cmp
mov
lcall
adc
sbb
add
cmp
and
xor
sbb
rorb
xchg
inc
add
push
jg
pop
enter
mov
add
add
or
mov
sahf
cmpsb
test
adc
pop
jmp
and
mov
cli
jae
dec
inc
int3
and
cli
push
cld
mov
movb
pop
daa
inc
pushf
or
jg,pt
and
shr
inc
add
mov
pop
dec
data16
xchg
adc
cmp
sbb
faddl
jo
sbb
mov
insb
std
jg
and
pop
pop
lock
lods
or
adc
repz
repz
mov
stc
pop
insl
out
add
push
in
sbb
jae
movsl
mov
inc
in
or
hlt
sbb
jne
sbb
push
enter
arpl
pop
adc
add
icebp
lock
lock
inc
mov
jns
in
mov
xor
lret
cmp
mov
testb
sbb
stos
or
push
push
sbb
jns
or
push
loop
mov
loope
and
sbb
push
inc
sub
jmp
or
jge
shrb
pop
sub
add
pop
push
aas
or
adc
mov
mov
pushf
rcrb
jmp
dec
cmpsb
clc
sti
arpl
mov
mov
insb
xchg
movsb
inc
movsb
insb
jno
push
popa
jno
stos
adc
psrld
fcomps
add
addl
movb
push
lahf
xchg
mov
add
mov
dec
jg
add
call
mov
enter
sub
push
test
push
mov
pop
mov
jp
push
lea
mov
movsl
adc
add
cwtl
cmp
clc
movb
addr16
xchg
cmp
js
int
sub
fs
js
js
mov
xchg
add
in
mov
sbb
xor
sub
cmp
les
test
stc
dec
sbb
cmp
push
xchg
or
mov
or
or
jb
in
adc
sub
adc
je
or
cmp
adc
cld
lret
cmp
inc
mov
or
mov
inc
xor
jle
stos
mulb
xorl
lea
xchg
les
pusha
add
and
gs
adc
sbb
cmp
push
push
and
jns
movsb
mov
push
xor
mov
and
inc
mov
push
jle
push
mov
adc
mov
ss
pusha
adc
xor
jbe
mov
lods
fcmovbe
test
jnp
aam
jae
or
cwtl
cmc
pop
cmp
fs
mov
mov
in
scas
sub
in
testl
xchg
add
dec
es
push
push
adc
bnd
dec
mov
fldl
sbb
sbb
negb
imul
adc
pop
or
pusha
mov
std
ret
loop
jle
add
and
test
gs
push
popa
dec
aad
fiadds
sbb
notl
or
popf
fstps
add
or
lock
dec
loopne
add
jnp
inc
ret
testb
jle
xor
jnp
aas
dec
or
ret
loope
test
in
dec
xor
jae
ror
adc
mov
cmpsb
add
inc
cmp
loope
pop
dec
insb
imul
or
push
mov
jl
push
inc
xor
jo
push
pusha
cwtl
insb
and
dec
gs
mov
pop
lods
jmp
pop
pop
adc
nop
pop
push
push
pop
or
fwait
dec
lock
dec
xor
pop
adc
je
sbb
andb
loopne
cmp
sbb
mov
push
cmp
inc
or
imul
xor
andl
jo
push
or
adc
sub
mov
mov
and
and
sub
lock
daa
inc
mov
pop
sbb
mov
cmp
or
cwtl
add
lret
mov
xchg
mov
and
aad
jno
adc
adc
hlt
rcl
or
loopne
mov
je
sti
cmpps
jle
popa
jno
mov
push
out
cwtl
and
adc
pop
das
in
adc
in
mov
roll
insl
inc
dec
in
insb
push
jne
cmp
call
push
or
lea
aad
cmp
inc
rolb
outsl
xchg
jecxz
pop
add
pop
lcall
dec
es
pop
je
push
adc
add
shl
movsl
adc
adc
andl
popf
adc
or
call
addr16
sbb
xchg
sbb
sbb
xor
fstpt
out
ret
outsl
nop
dec
pop
and
mov
cmp
jp
mov
sub
sub
sub
xchg
xor
adc
imul
add
xchg
sub
sbb
or
add
xor
push
jmp
cmp
enter
adc
adc
push
xor
inc
xor
inc
jo
add
in
lret
ja
jo
and
cmp
xchg
cli
jbe
mov
inc
cli
mov
adc
push
mov
inc
lea
ret
mov
adc
inc
inc
mov
mov
scas
loop
movsb
sub
repz
es
sub
inc
or
push
adc
jmp
daa
sbb
xor
test
test
imul
loopne
xor
aad
push
dec
or
push
add
inc
adc
mov
rcl
je
ret
movsb
pop
mov
dec
je
sub
lods
pop
scas
rorl
data16
add
or
loopne
cs
mov
call
in
fnstsw
cmpsb
enter
or
ret
push
idivl
xchg
adc
pop
xor
jo
xchg
insl
add
stc
dec
push
sahf
sbb
inc
ret
rcr
or
xchg
xchg
push
inc
add
cmp
push
jno
int3
sti
daa
and
sahf
adc
adc
sbbb
push
push
daa
in
push
xchg
cmp
clc
shll
inc
jp
jo
pop
lds
stos
repz
mov
push
mov
push
pop
fsubl
adc
stos
fidivs
add
add
push
adc
add
outsb
cli
decl
push
out
cltd
andl
and
rolb
push
pop
mull
add
jns
loopne
push
dec
xchg
pop
or
push
adc
push
lcall
pop
xchg
mov
push
es
ret
fdivs
lcall
xchg
xor
inc
sbb
inc
mov
lret
ret
push
xlat
notl
inc
push
dec
lds
push
das
adcl
xchg
and
pop
sahf
cmp
adc
xor
cmp
aaa
xchg
add
pop
mov
movsl
fsubr
mov
cltd
and
fmull
fs
xchg
jno
adc
add
out
sar
insb
sarb
mov
mov
mov
or
sub
mov
je
in
push
fsubr
mov
or
mov
int
push
ret
pop
dec
jae
shl
fdivs
fmuls
inc
insb
test
and
les
pusha
loop
push
movsb
cmpb
sub
mov
xor
rcrl
cli
daa
rcpps
jl
mov
jecxz
loopne
sbb
mov
xchg
jl
shlb
test
inc
dec
cmp
sbb
in
adc
cmpl
dec
adc
jl
push
sbb
sub
test
or
rcl
add
movsb
mov
call
xchg
bound
imul
repz
adc
push
cmp
adc
or
add
ret
fidivl
lret
push
and
sbb
xor
push
mov
fisubrs
or
bound
mov
ss
jl
out
mov
xchg
xor
data16
jne
andb
mov
inc
roll
xchg
movb
inc
fsubl
seto
out
and
in
push
sub
push
or
mov
push
xlat
rolb
sbb
pop
pop
pop
mov
mov
loope
sbb
push
xlat
push
cs
test
outsl
dec
xchg
sbb
das
inc
je
dec
mov
xlat
rolb
arpl
mov
or
push
sub
pushf
xchg
jle
movsl
out
push
aam
or
rolw
pop
adc
adc
movsl
dec
test
sbb
aam
lods
cltd
dec
push
and
sub
mov
or
add
mov
pushf
lret
daa
sbb
xchg
mov
and
inc
inc
jo
xor
decl
pop
sbb
sbb
adc
push
sti
shrl
inc
inc
and
or
andb
adc
mov
mov
mov
aad
mov
fisttpl
push
rclb
mov
xor
sub
jl
pop
push
inc
mov
add
add
aas
push
xor
pusha
sub
repnz
cwtl
ds
subb
xchg
push
mov
cmp
sbb
add
call
imul
xor
aaa
addl
cmovle
in
mov
inc
sub
or
push
and
sbb
cmc
mov
stos
push
loope
sub
lret
add
pushf
and
dec
es
jo
push
sbb
ret
clc
sbb
test
sub
mov
fcoml
mov
jo
loopne
sbb
mov
aaa
add
sbb
xor
cmp
push
sub
aaa
mov
and
outsb
and
xor
pop
mov
inc
adc
jo
out
pop
lock
jb
sbbb
aas
dec
ret
sub
jg
loop
xchg
popf
adc
dec
jne
xchg
push
push
add
and
add
shrl
lahf
pushl
add
or
dec
pop
movsb
filds
je
lods
or
mov
repnz
and
push
push
cmp
bnd
aaa
adc
mov
inc
mov
test
iret
lock
rorl
js
xcrypt-ofb
cmpsl
lods
xor
cmp
jne
scas
adc
les
das
push
or
jb
and
jae
mov
rclb
and
popf
sbb
repnz
imul
or
sbb
adc
ret
mov
inc
outsl
rolb
sbb
cs
pop
testl
sbb
outsl
sarb
sbb
mov
das
push
sbb
dec
orl
and
push
xlat
inc
hlt
insl
sbb
andl
add
sbb
loope
add
sub
pop
add
mov
enter
push
add
sub
jnp
cmc
add
cmpsl
imul
dec
push
movb
add
or
pop
cmp
rolb
addr16
adc
inc
sub
sbb
xlat
test
jle
push
loopne
clc
sbbb
pop
jne
sub
jo
sbb
push
ficompl
aam
adc
xchg
test
sub
mov
and
rorl
mov
popa
push
pop
jb
or
sbbl
test
cltd
dec
pop
sbb
ljmp
repnz
add
mov
lcall
clc
sbb
add
push
jae
sub
cmpsl
stc
mov
insb
push
rcll
xchg
xchg
pop
mov
mov
in
sbb
xor
popa
in
aas
cmpsl
lcall
lock
lock
cmp
cmpb
mov
or
jge
xor
mov
dec
add
aaa
es
dec
ret
jge
nop
dec
cmc
inc
push
cmp
and
leave
lock
test
imul
push
adcb
jb
or
into
mov
je
cmp
cli
loopne
je
ljmp
xor
push
inc
in
in
into
add
es
or
inc
aaa
adc
cs
and
and
popf
push
cmpl
dec
dec
add
insb
rolb
inc
cmp
or
add
and
pop
inc
mov
daa
jo
fadd
and
cld
push
popf
inc
sub
jle
cmpsb
dec
ret
in
inc
repnz
shr
jo
add
jo
icebp
dec
ja
stos
movsb
adc
inc
stc
dec
sbb
cmp
sarb
xchg
push
sbb
pop
pop
cmpb
push
insb
ljmp
insb
stos
enter
lret
mov
je
mov
jp
cld
sub
mov
jecxz
jmp
dec
jae
cmc
sti
gs
mov
push
cld
push
insb
inc
or
sbb
hlt
push
sub
in
shr
in
enter
stos
cltd
push
dec
orl
bound
and
adc
jg
call
or
lahf
into
dec
je
add
dec
enter
sbb
and
pop
sbb
sbb
inc
add
sbb
xchg
ret
cs
sub
and
mov
mov
adcb
movb
dec
pop
sub
sbb
or
xchg
add
shl
sub
adc
pusha
push
fwait
movsb
sarb
pop
movsl
sbb
xor
xor
add
popf
xor
mov
nop
dec
cmp
cmp
insb
and
dec
xor
inc
and
xchg
movsl
sbb
add
inc
cmp
sbb
fwait
int
enter
inc
dec
push
scas
bound
testl
insb
adc
loopne
sub
push
or
push
mov
push
rcrb
fstpt
mov
push
jp
push
push
cmp
mov
stos
push
jecxz
sbb
push
cmp
ret
and
dec
js
out
cmc
lea
push
jae
adc
dec
sbb
inc
and
add
jl
push
adc
in
or
sbb
adc
jecxz
pop
adc
jbe
pop
js
push
adc
and
pop
pop
jmp
adc
sub
pusha
rcrb
push
xchg
adc
lahf
fldenv
jo
movsl
push
sbb
clc
iret
inc
add
push
movsl
push
mov
jo
push
shlb
or
cld
and
in
adc
sub
test
jo
or
and
mov
roll
jle
mov
in
gs
js
loopne
jecxz
sahf
sbb
cltd
fdivl
xlat
in
jns
xor
xor
lds
in
jmp
imul
jmp
dec
pop
outsb
repz
adc
add
or
cld
mov
or
fdiv
push
ja
sub
aam
add
and
aas
shl
lcall
cmp
xor
cmp
into
loop
sbb
push
push
mov
incl
jne
enter
add
pop
adc
icebp
sub
mov
push
or
popf
nop
push
mov
jne
dec
insb
orb
jg
mov
inc
mov
adc
or
mov
and
aam
cmp
ss
incb
ret
mov
sti
lret
push
add
movsl
je
and
add
mov
int3
lahf
aaa
add
inc
adc
std
push
push
mov
push
fnstsw
pop
push
xor
imul
add
test
adc
push
push
sahf
pop
int
push
arpl
sub
int3
rcrb
adc
push
fmuls
and
into
sar
sub
pop
addl
add
loope
mov
jb
inc
jbe
push
push
insl
pusha
pop
cltd
adc
data16
jle
pop
pop
cli
cmp
jae
jae
das
mov
loop
sbb
cmp
jne
mov
insl
mov
jo
pop
or
xchg
iret
int3
xchg
mov
pushw
loopne
add
mov
dec
jmp
jbe
nop
or
nop
xor
or
cmp
push
pop
add
rcll
fistpll
mov
fcoml
adc
ja
or
mov
xchg
fildl
or
cwtl
jecxz
pop
leave
or
jmp
dec
sbb
rcrb
fsubr
or
sbb
add
pop
jge
or
sbb
arpl
push
imul
add
xchg
adc
mov
in
jne
imul
pop
pushf
mov
inc
mov
mov
enter
mov
outsl
add
pop
inc
mov
sub
jl
or
and
adc
cmp
xchg
push
test
push
enter
xchg
adc
dec
pop
jns
cmc
mov
jmp
add
rcrl
xor
mov
subb
and
ds
mov
mov
mov
mov
cmpl
sbb
mov
dec
mov
or
nop
adc
sub
sub
stos
pop
or
ja
dec
jns
cmovge
hlt
mov
shl
push
aad
xor
addl
mov
push
in
scas
dec
lret
dec
and
mov
mov
repnz
out
mov
push
xor
andb
inc
inc
mov
adc
add
or
add
cmp
pop
mov
imul
sbb
push
adc
addl
push
dec
dec
in
xchg
scas
cld
push
sbb
mov
movsb
ret
andl
jb
scas
push
or
inc
jmp
in
cwtl
jp
add
jne
jnp
xchg
fxch
mov
lea
cmp
adc
add
mov
cmp
push
push
lock
pop
adc
or
lea
cmpsb
sahf
or
test
sub
xchg
fimuls
fiaddl
push
push
dec
mov
push
movsb
ret
addr16
or
push
in
imul
fldt
ljmp
xor
dec
clc
loope
int3
adc
or
xor
pop
mov
mov
inc
pusha
and
and
xor
dec
pop
aas
add
and
fisubl
adc
dec
dec
lods
popa
arpl
stos
pop
pop
cmp
jp
sbb
dec
lahf
testl
dec
mov
and
sbb
testb
dec
mov
jge
adc
cmpsl
xor
clc
mov
ret
and
loopne
pop
jmp
fdivs
mov
fiadds
push
push
mov
jb
push
les
mov
test
shll
mov
sahf
jnp
adc
sub
cld
je
and
mov
mov
pusha
sbb
aas
jecxz
int3
push
jno
dec
arpl
sti
dec
sbb
push
addl
cmp
mov
mov
mov
lcall
imul
fsubrs
icebp
push
and
add
dec
sbb
push
xchg
addb
or
xchg
aas
jo
push
push
sbb
mov
pop
jb
loope
nop
leave
add
cmp
xor
int3
push
inc
sbb
add
out
ret
ds
fists
dec
sub
lea
mov
rorb
daa
sbb
fcomps
adc
add
xor
shl
es
add
adc
mov
test
insb
loop
ss
and
adc
scas
add
inc
testb
inc
pop
enter
bswap
dec
adc
inc
xor
jge
rolb
add
int3
fstps
arpl
stos
dec
rcr
xor
test
sbb
sub
aam
adc
cmp
or
clc
dec
rorb
dec
add
icebp
mov
pushf
push
scas
lods
fimuls
push
pop
pop
fmuls
call
push
mov
inc
xchg
pop
cmp
roll
cld
sbb
imul
jnp
aaa
lods
mov
lea
popa
adc
sbbb
push
inc
mov
push
adc
call
rorb
or
inc
jle
rep
fcoml
add
mov
mov
orl
aaa
sbb
in
xor
nop
add
cltd
sbb
fldl
das
push
mov
jae
mov
subb
jle
ds
ret
pushl
js
mov
leave
xchg
popa
xor
ficomps
mov
shlb
rcrl
loop
es
mov
je
push
scas
pop
jae
adc
imul
and
inc
ret
and
int3
sub
and
fisttpl
inc
adc
and
ret
andps
add
and
loop
push
lret
or
sbb
loopne
mov
dec
push
xlat
mov
jecxz
popf
xchg
mov
out
mov
sub
push
clc
rcll
sbb
jno
jl
cld
xchg
icebp
xor
pop
cld
push
mov
mov
pop
add
repz
push
das
jae
jl
sbb
or
and
push
mov
pop
inc
inc
cmp
jb
xor
lods
or
push
mov
pop
leave
andl
add
repnz
pop
xchg
adc
and
nop
sbb
cmp
xchg
lock
xchg
mov
or
push
arpl
xchg
repnz
inc
int
inc
xor
jge
and
dec
movsb
bound
ficomps
push
add
push
mov
test
in
sti
jl
test
sahf
fstps
xchg
jg
cmp
inc
dec
and
mov
sub
mov
cmp
cltd
pop
mov
test
push
or
push
cld
fninit
sbbb
add
jmp
push
dec
dec
nop
add
push
sbb
out
mov
push
es
xor
xor
test
popl
pop
bound
lds
addr16
push
pop
jne
in
sbb
repnz
push
xorb
sub
stc
repnz
push
xor
xor
cmp
jno
jns
pop
inc
xor
dec
dec
insb
dec
mov
xor
inc
xor
xchg
lcall
inc
adc
add
inc
add
or
inc
add
inc
xchg
push
sbb
lds
xchg
fnstcw
inc
mov
pop
xchg
js
inc
decl
jno
jne
sbb
or
push
sbb
out
cmc
lret
and
gs
sbb
mov
add
jnp
push
mov
cmp
add
movl
pop
mov
jne
pop
sub
push
roll
lcall
sbb
inc
adc
dec
addb
lods
aaa
lock
jg
loop
add
and
ljmp
movsb
push
dec
push
or
and
jnp
hlt
pop
mov
fcoms
lods
popa
fcoml
add
xchg
mov
jno
mov
icebp
add
xor
mov
cmp
push
std
inc
cmp
mov
mov
add
lcall
mov
clc
jle
dec
sub
mov
dec
adc
or
jecxz
add
shlb
sti
imul
xor
cmp
daa
jle
xchg
sub
push
jmp
mov
aam
je
lea
rep
mov
icebp
cwtl
mov
sub
mov
sbb
jmp
sub
loope
adc
inc
shlb
add
pop
jno
sub
arpl
mov
dec
jnp
and
jne
in
fs
addr16
jae
push
push
xchg
add
mov
cmpsb
xlat
jge
xor
add
mov
pop
pop
loopne
adc
pusha
sub
inc
xor
loop
xor
aad
lea
and
adc
pop
test
sbb
insb
xor
or
data16
es
mov
jle
xor
xor
movsl
sbb
scas
push
test
imul
nop
jmp
cmp
adc
mov
mov
push
sub
pusha
sbb
pop
scas
fidivrs
pop
adc
push
loop
dec
test
das
or
pop
or
xor
push
nop
cmpsb
or
add
lahf
aaa
push
mov
cmp
les
lock
push
test
mov
or
insb
pusha
dec
sub
xchg
pop
aam
jge
jno
ljmp
mov
mov
fdivrl
leave
loopne
mov
adc
jbe
mov
cmp
push
pop
add
xchg
inc
sub
dec
sbb
sbb
imul
sarb
dec
jne
loopne,pn
mov
jo
gs
add
adc
xor
jmp
mov
xchg
mov
sub
pop
cmc
xchg
cmp
dec
cmp
cmp
in
and
data16
adc
mov
popa
pop
jb
sub
subl
je
lock
mov
and
add
and
into
inc
and
push
aas
and
pop
add
icebp
add
aaa
xchg
adc
and
testb
fidivrl
jmp
mov
mov
or
inc
bound
jb
adc
dec
push
fldl
jo
in
mov
test
sub
xor
dec
adc
roll
push
lcall
test
dec
or
push
or
shll
push
push
mov
mov
shlb
sbb
out
loope
jb
ret
cmp
mov
dec
dec
addr16
out
cmp
hlt
and
sub
jecxz
dec
push
dec
xchg
es
pop
scas
lea
pop
add
cmp
push
push
or
sbb
xor
inc
jnp
sbb
or
ret
sahf
ja
test
sub
movsb
adc
sub
xlat
cmpsl
or
leave
cmpb
push
push
dec
je
es
insl
cmp
dec
push
add
roll
test
lock
adc
or
mov
pop
add
shrb
jns
cmp
movsl
adc
or
pop
xchg
test
test
int3
aam
ja
mov
push
push
outsl
add
outsb
sub
pop
fwait
or
add
inc
xorl
mov
mov
or
and
xchg
push
jbe
out
dec
xchg
cmp
pushf
sbb
mov
mov
push
cmp
sub
enter
xor
adc
andb
inc
stos
cli
inc
jmp
dec
ss
mov
call
js
negb
incb
lea
jp
cmp
push
add
sarl
fnstcw
jae
jb
jae
shrb
or
cmpsb
jmp
or
jnp
dec
hlt
jae
fdivs
add
test
pop
or
push
xor
jns
rorl
mov
push
and
mov
dec
xchg
push
jp
pop
call
fldt
stos
inc
push
enter
inc
in
jno
test
sub
xchg
push
lods
dec
jge
vphaddubd
cmp
mov
mov
pop
loop
add
ret
and
enter
cmp
jb
push
pop
mov
add
and
sbb
jge
subl
pop
rclb
sbb
in
nop
scas
mov
and
sbb
imul
pusha
xchg
and
arpl
cmp
nop
and
or
dec
outsb
xchg
inc
or
in
nop
and
in
push
mov
addr16
insl
repnz
cmp
in
insb
pop
adc
and
pop
push
cltd
cmp
and
sub
imul
in
sbb
je
pusha
dec
push
jmp
fildll
insl
pusha
movsl
inc
xchg
fdivl
add
push
addr16
jne
cmp
call
inc
js
addr16
lock
sahf
mov
push
cmp
sub
clc
xchg
cs
pop
and
inc
das
mov
push
loope
xor
imul
and
insl
insb
adc
xchg
push
nop
inc
push
and
and
add
inc
add
nop
arpl
enter
inc
push
nop
inc
push
fsubrl
inc
push
nop
inc
push
daa
nop
inc
push
nop
subb
add
inc
push
sub
jae,pn
fsubs
aas
or
or
sti
jmp
push
jb
scas
or
insb
cmp
inc
push
cmp
and
nop
xor
adcb
or
xor
mov
mov
mov
into
leave
xor
cld
mov
xor
ret
pop
add
push
mov
pop
fs
dec
hlt
jne
sbb
adc
sbb
cmp
cltd
sbb
mov
mov
push
mov
inc
js
pop
mov
sbb
jl
cmpsl
add
rorb
cli
jne
js
add
mov
jle
pop
add
xchg
fbstp
or
ficoms
inc
push
outsb
insl
and
outsl
cmp
mov
add
push
test
movsl
and
sub
shl
push
rorb
add
cmp
mov
je
lds
dec
repz
mov
std
mov
fimuls
enter
into
sarl
shr
mov
sahf
mov
imul
ret
les
cmp
xor
lret
adc
pop
mov
test
and
js
pop
mov
push
fidivrl
push
rcrb
cld
or
sub
xor
push
or
add
push
orl
mov
mov
add
and
sbb
cmp
sbb
ljmp
push
stos
push
in
loopne
cmpsb
or
push
and
dec
rcrb
filds
fisubl
gs
or
jecxz
cmp
or
mov
cmp
test
lock
jmp
push
ja
jb
dec
adc
std
test
jae
les
or
xchg
mov
mov
sub
outsb
imul
mov
and
dec
sbb
inc
daa
es
icebp
mov
pop
punpckhbw
push
jo
mov
or
xor
sub
jne
cmp
sbbl
shrd
subl
push
jne
mov
cmp
jg
jne
mov
sbb
sub
push
inc
add
mov
or
test
jb
adc
js
sbb
mov
xchg
or
mov
inc
pop
pop
push
fistpl
fstpt
xor
ret
pop
pop
sbb
mov
xchg
or
pop
shl
mov
shlb
inc
popl
or
mov
push
pop
cmp
ds
mov
movsb
pop
fwait
pop
or
je
pop
and
push
cmp
jmp
fbld
xchg
or
pop
pusha
add
dec
sbb
push
or
inc
add
mov
mov
push
enter
cmp
fisttps
ret
ret
movsb
push
loopne
mov
ret
or
mov
out
movb
pop
clc
jl
push
pop
clc
mov
push
clc
xor
pop
dec
dec
ret
mov
cmp
cmp
mov
pop
add
push
sub
xor
adc
or
addl
adc
out
fmul
cmp
inc
add
lods
outsb
pushf
and
mov
shll
bound
dec
dec
push
mov
pop
mov
imul
adc
sbb
jno
pusha
leave
sub
xor
mov
mov
or
es
inc
movsb
mov
insl
mov
xchg
push
sub
loopne
xchg
fsts
ficompl
push
add
js
mov
mov
mov
mov
dec
mov
cmp
inc
iret
repnz
add
jb
add
adcl
add
push
rolb
push
repnz
lcall
call
mov
lock
stc
pop
push
jno
push
xchg
push
or
and
or
in
mov
sub
stos
popf
adc
pop
movsb
adc
pop
lods
pop
fildl
mov
add
in
push
sub
dec
dec
lahf
and
call
les
mov
in
stos
je
pop
movsl
lock
and
cmp
sbb
dec
mov
pushw
fdivr
cmp
movsb
or
inc
loope
xchg
jae
dec
xchg
add
mov
insl
cmp
das
dec
inc
fwait
incl
sbb
dec
cmpsb
pop
inc
pop
loopne
xor
mov
or
xchg
sbb
movsl
mov
add
orl
mov
sbb
cwtl
add
push
roll
mov
pop
pop
push
mov
and
cmp
fldcw
incb
shlb
popf
add
fisttps
push
dec
bound
shlb
or
int3
sbb
add
ret
cmp
sbb
fdivrs
fadds
pushf
mov
jecxz
arpl
int3
add
fisubs
lds
dec
or
daa
pop
insb
notl
sub
and
xor
jo
pop
xchg
mov
mov
daa
cld
lds
jge
shrb
push
lock
or
push
lcall
dec
xlat
xor
pusha
pusha
push
addr16
enter
and
add
sub
movd
in
jp
aad
push
inc
xchg
jbe
mov
adc
xor
pop
push
push
push
mov
sbb
fiaddl
or
dec
inc
nop
sbb
add
pop
cmp
leave
inc
imul
dec
fsubl
inc
in
cmp
inc
or
xchg
rcl
jmp
popa
test
add
imul
push
ds
push
inc
in
add
adc
sbb
inc
popf
inc
mov
xchg
call
iret
push
sahf
shlb
push
aam
xor
enter
adc
insb
push
sub
call
sub
loopne
orb
sbb
dec
ret
push
sub
lcall
push
fcoms
mov
loope
adcb
fidivl
rorb
mov
jle
adc
rcll
mov
flds
mov
mov
adc
lods
pop
xchg
adc
inc
ljmp
add
imul
sbb
mov
or
pop
insb
or
pop
pop
mov
loopne
jne
clc
enter
sahf
push
jecxz
push
inc
dec
lock
push
outsb
shll
adc
arpl
jmp
nop
add
hlt
fistps
add
fsubs
push
push
push
xchg
or
add
push
jmp
mov
and
int
pop
mov
in
and
xor
sbbl
test
inc
jae
pop
in
dec
mov
xchg
cmp
enter
push
addl
mov
pop
sub
das
and
rorl
inc
lea
aas
adc
xchg
push
dec
pop
xor
inc
sbb
js
pop
mov
pop
xor
ss
sub
lods
push
lds
outsb
dec
sub
push
sub
mov
mov
test
lods
jbe
push
testb
add
mov
inc
jge
lahf
jge
and
mov
mov
movsl
inc
push
ret
cmp
jns
xor
sub
adc
test
push
mov
sbb
icebp
test
xor
pop
repnz
jne
xor
inc
mov
or
sahf
push
insb
push
ret
and
or
rcrb
mov
inc
lret
mov
or
es
lods
js
dec
adc
jmp
enter
rolb
jo
test
jl
inc
movsb
inc
imul
imul
jo
icebp
push
mov
ret
adc
mov
add
xchg
shr
adc
xchg
xor
in
je
sub
cmp
rcrl
je
push
int
and
and
xchg
mov
or
push
or
dec
sti
shlb
cld
mov
shlb
mov
jbe
aaa
add
or
add
rolb
xor
lret
std
pop
mov
mov
mov
ficoml
jl
mov
insb
jecxz
or
jmp
fcoms
push
fidivl
jmp
cmp
cmp
sarb
stos
ret
popf
mov
movsb
lea
sbb
loope
xchg
leave
mov
adc
shlb
xchg
fwait
sub
xchg
and
mov
or
mov
test
ret
out
dec
mov
cwtl
mov
adc
inc
wbinvd
cmpsl
pusha
lcall
or
jmp
mov
sbb
xchg
mov
mov
push
add
lds
lret
nop
fs
mov
sub
or
cmp
sub
js
lock
cmp
sti
push
inc
sbb
mov
jne
lock
out
adc
loop
or
adc
pop
bound
adc
xchg
and
ss
pop
mov
pop
jno
jne
dec
lret
test
cmp
adc
or
movsl
ja
mov
xchg
lods
mov
outsb
mov
jno
push
jo
mov
jns
dec
push
aaa
jb
les
divl
lock
mov
push
pop
ljmp
push
push
daa
pop
mov
rcrl
push
sti
pop
jmp
sahf
push
sub
xchg
mov
into
sbb
ds
je
rcll
push
lock
push
movsl
adc
adc
jmp
and
adc
pop
jae
js
push
lods
cs
loope
cld
mov
icebp
insb
or
pop
loop
dec
fs
mov
mov
push
fstps
xor
adcl
subb
jo
sbb
int3
cmp
mov
mov
pushf
loope
cmp
test
sub
popf
mov
adcl
aam
jmp
mov
xor
xchg
cwtl
pop
dec
dec
fwait
pop
cmp
and
lea
sbb
ljmp
pusha
fdivrl
adc
jl
rol
popf
lret
mov
aaa
test
jb
cmp
pop
pop
lahf
sub
add
movl
imul
dec
add
inc
mov
inc
loopne
or
mov
pop
mov
jnp
aad
sbb
xor
push
mov
popf
int
and
push
mov
pop
adc
nop
adc
sbb
dec
ret
inc
xchg
push
mov
xchg
xchg
movsb
je
insb
lds
xchg
fwait
insb
and
iret
nop
out
pop
add
mov
imul
inc
ss
js
jmp
gs
or
loopne
aaa
inc
lcall
insl
daa
and
mov
push
jp
cmp
adc
and
jno
repnz
push
add
cmp
mov
or
pusha
jb
mov
cmp
sarl
lea
lock
add
push
cmp
mov
or
inc
and
fistps
decb
arpl
dec
lea
std
or
and
inc
and
push
andl
incb
jle
loop
adc
fs
rolb
lock
add
jo
aad
repz
lds
xor
push
jp
mov
inc
and
cmp
stos
add
adc
add
les
jp
je
push
mov
sbb
adc
je
inc
jb
cmp
sbb
lock
ljmp
mov
stc
or
sub
jl
cmp
mov
adc
out
push
pushf
push
lods
and
adc
ret
lcall
cltd
pop
les
push
test
es
in
dec
or
jge
cmpsb
lret
popf
cmpsb
rolb
cmp
sbb
cmp
ja
sbb
jg
lock
xor
outsb
jne
inc
inc
jmp
inc
jo
mov
add
and
xorb
sub
testb
add
nop
xor
mov
adc
or
movsl
add
push
cmp
push
call
test
jne
mov
idiv
add
les
dec
adc
cltd
outsb
gs
aad
call
movl
rsqrtps
cli
xor
fsubrs
add
add
xchg
in
push
xchg
test
push
pop
push
aad
or
rcr
mov
test
nopl
jge
pop
adc
push
mov
mov
scas
movsl
xchg
jecxz,pt
add
mov
push
push
leave
add
out
sbb
hlt
xchg
test
aam
sub
lods
fdivrl
sub
mov
ds
push
inc
pop
mov
sbb
cmp
push
andb
stos
add
adc
insl
loopne
and
push
jns
sti
add
in
lods
xor
test
push
fmuls
sbb
mov
movb
dec
push
les
testl
dec
xchg
popa
adc
inc
push
inc
fwait
or
push
repnz
in
inc
js
dec
mov
popl
mov
dec
test
or
and
pop
into
sbb
std
pop
jmp
mov
dec
dec
inc
pop
xchg
inc
add
movsb
je
lahf
add
ret
das
adcb
mulb
movsl
xchg
ret
fwait
xor
imull
sub
rcrl
xlat
push
cld
cwtl
push
std
nop
cmp
movl
leave
inc
mov
pop
push
and
pop
outsl
push
inc
or
push
inc
shl
adc
call
popf
divl
add
icebp
add
adc
ljmp
add
mov
or
xchg
push
pop
lret
dec
jmp
sbb
xor
push
mov
push
jmp
popa
pusha
dec
stos
cld
imul
mov
loopne
xor
fs
jno
loopne
inc
stos
sbb
fwait
mov
lea
or
rorb
sub
inc
lahf
pop
hlt
bndstx
cmc
pop
push
cld
movsb
add
inc
jnp
in
push
popa
or
add
pushf
inc
inc
mov
inc
cmp
mov
jmp
incl
xor
test
scas
test
xchg
adc
xchg
cmp
daa
dec
lods
arpl
sub
dec
and
gs
jnp
sahf
mov
add
idivb
jle
xlat
push
mov
xchg
in
cmpsb
sbb
jg
lahf
lock
push
es
test
ficoml
jo
xor
xchg
int3
ss
in
push
and
xor
cmp
jle
cmp
out
lds
mov
call
push
ficoms
mov
test
daa
xchg
xor
sbb
xlat
andb
loopne
popa
outsb
movsl
add
lock
xor
push
mov
adc
adc
add
test
pop
mov
pop
sahf
adc
enter
les
jb
dec
lods
sub
pop
pop
ljmp
mov
shr
cmp
jbe
add
jmp
add
mov
mov
sbb
jbe
outsb
adc
and
dec
fdivp
inc
dec
xor
or
mov
es
arpl
scas
sub
imul
push
add
adc
mov
inc
xchg
ja
add
leave
and
adcb
notb
pusha
mov
scas
and
sbb
mov
and
pop
call
pop
pop
ss
mov
jns
or
push
or
lcall
neg
test
scas
add
add
dec
aas
jne
cmp
adc
inc
jp
insl
mov
test
pop
ja
or
rol
jne
mov
adc
mov
sbb
adc
xchg
lret
adc
adc
call
pop
into
out
das
push
lds
movsl
jne
jecxz
ja
call
lcall
sub
fs
cmp
out
jge
mov
nop
loope
push
popf
ja
adc
jb
adc
fidivl
arpl
addl
mov
lahf
add
cmp
pop
mov
sarl
ja
mov
jnp
jo
je
outsl
je
mov
in
daa
sbb
aas
cmc
push
pop
pop
or
and
addr16
aam
jecxz
cmp
mov
dec
sbb
dec
jmp
imul
test
mov
push
das
pop
sub
xchg
mov
lahf
jne
mov
call
pop
inc
in
testl
xor
or
xchg
jbe
jns
pop
sub
dec
cmp
or
dec
push
mov
push
sbbl
movsl
das
xor
push
mov
js
pushf
push
push
add
or
dec
push
insb
pop
jge
push
inc
or
push
or
nop
pop
loopne
jp
jecxz
or
negl
sbb
or
adc
pop
add
test
xlat
mov
mov
xchg
push
xor
lods
fmuls
pop
loop
mov
fdivs
add
shlb
push
jge
pop
leave
xchg
int3
push
pop
adc
enter
pop
and
mov
xchg
dec
popf
mov
xor
in
loopne,pn
adc
ljmp
lods
test
les
push
sub
add
adc
cmp
xchg
hlt
dec
movsl
fdivr
pop
cmpsl
fs
and
cmpb
test
cmp
adc
adc
arpl
mov
daa
xlat
int3
cmpsb
mov
add
test
shrb
sub
adc
shlb
pusha
xorl
adc
aaa
push
sbb
repz
mov
inc
mov
imul
scas
jge
lods
lock
adc
push
fistl
mov
mov
pop
or
scas
cmp
leave
push
push
aam
mov
lea
or
inc
pop
push
and
push
xchg
jge
testl
jnp
shrb
xor
xor
mov
pop
pop
sub
imul
push
mov
mov
addr16
in
pusha
push
pop
fs
imul
cmp
mov
das
shll
xchg
test
xor
adc
inc
pop
idivb
sub
push
push
or
cli
int3
dec
add
pop
push
arpl
out
ret
test
cmp
jo
sbb
repnz
add
and
pushf
test
jno
popa
out
mov
xchg
inc
add
mov
push
dec
nop
ljmp
lods
jl
lods
lock
jl
and
inc
or
mov
into
lret
rcrb
aas
imul
daa
pop
cmpsl
add
jne
icebp
das
sbb
test
imul
test
into
xorb
out
lea
inc
mov
mov
nop
lds
int
jmp
jge
push
dec
loope
dec
mov
cmp
cltd
dec
js
push
lock
xchg
cmpsl
sti
cmp
lea
fwait
aad
ds
inc
jbe
pop
jge
add
insl
pop
enter
jb
nop
into
rclb
enter
or
lea
dec
lret
mov
stos
xor
roll
add
mov
lea
aad
mov
mov
call
push
out
in
and
ret
mov
add
sar
dec
hlt
dec
sti
sbbb
add
and
loopne
cld
and
stos
test
add
adc
push
subb
lea
in
push
pop
push
stc
add
mov
push
inc
insb
cmc
pop
test
jmp
jecxz
push
adc
sbb
gs
pop
adc
push
cli
sub
shrl
add
lods
mov
sub
das
and
adc
add
and
lcall
mov
ljmp
push
add
mov
call
pop
test
andl
lods
cwtl
adc
mov
data16
jge
or
shr
push
mov
jo
sbb
or
mov
jl
fwait
in
jo
xor
icebp
inc
sub
jge
movsl
or
mov
dec
movsb
neg
out
dec
dec
xchg
pop
add
loopne
push
loop
movsb
jp
push
andl
call
sub
push
push
sbb
add
dec
xor
outsl
add
jo
leave
or
lock
cmp
enter
xor
sub
pop
data16
lea
cmp
int
addb
xchg
data16
adc
les
imul
shrb
aaa
test
scas
mov
js
pusha
pop
es
lret
ds
push
adc
push
cmpsb
rclb
aam
call
cwtl
cmpsb
jbe
pop
xor
outsb
add
xor
xor
popa
ljmp
pusha
push
fbld
std
inc
popa
push
nop
outsl
mov
in
inc
sub
push
push
mov
mov
lcall
jp
mov
dec
sbb
add
sbb
sbb
shrb
aad
adc
cmpsb
push
je
or
mov
xor
adc
enter
xchg
pop
idivb
mov
sahf
pop
fldl
xchg
test
xor
ljmp
clc
add
adc
mov
or
mov
ja
sarb
rcr
rcrb
inc
hlt
fstl
lods
fcomp
fnstsw
pushl
int3
fldl
pop
fsubr
pop
faddp
andl
cmpsb
mov
mov
sbb
dec
or
add
insb
add
sbb
xor
popf
mov
fcoml
stos
out
or
mov
ficoms
bswap
or
outsl
or
test
or
mov
addr16
or
lods
nop
bnd
bound
pop
xchg
mov
clc
fs
add
pop
cwtl
add
call
sub
lods
or
iret
sub
inc
lea
push
or
clc
push
sbbb
dec
push
sbb
mov
bound
cs
insl
push
pop
dec
or
jp
or
sub
inc
imul
sub
push
shl
lcall
mov
fidivrl
adc
mov
aam
repnz
rclb
add
in
xor
test
es
jbe
push
dec
sub
jp
push
xorb
jg
dec
add
mov
ds
mov
add
aaa
cmp
jge
js
nop
into
in
or
mov
movsb
jne
inc
cmp
adc
jb
les
lods
sub
test
add
inc
jbe
cmp
or
nop
les
push
pop
test
in
aaa
xchg
bound
mov
imul
inc
add
xor
stos
pop
push
push
xchg
inc
cmpsb
fs
jns
jb
mov
xor
mov
mov
pop
add
add
inc
or
ss
clc
mov
cmp
lea
mov
push
jmp
ja
icebp
fiadds
push
scas
push
sub
inc
or
je
jmp
inc
mov
pop
pusha
inc
dec
dec
or
ret
jmp
sub
add
insb
scas
adc
dec
or
hlt
dec
and
in
dec
mov
inc
cltd
mov
pushl
pop
andb
mov
jne
mov
inc
loopne
adc
cmc
and
add
adc
and
popa
xlat
cmp
cmp
jns
hlt
add
mov
inc
xchg
or
or
repnz
add
jnp
imul
out
aaa
mov
lret
enter
fadds
pusha
sbb
xorb
inc
fsub
ret
lods
push
repnz
ret
push
sbb
cs
cmc
mov
sub
pop
adc
inc
outsb
add
pusha
xlat
popf
aas
sti
sbb
bnd
mov
roll
xor
or
aam
xorb
frstor
sbb
mov
xor
add
scas
inc
ret
ret
xor
xor
shrb
push
push
js
movsl
xchg
push
or
ss
nop
dec
shll
fmull
popf
add
fcoml
mov
and
lods
imul
lock
sbb
and
andl
subb
xchg
daa
and
dec
add
repz
dec
call
inc
xchg
mov
stc
lock
lds
cmp
push
push
jge
xchg
hlt
xchg
pusha
lret
ficomps
cmp
jge
arpl
ds
sub
les
lea
outsl
pop
or
pop
or
push
stc
idivl
bound
xchg
jns
adc
aaa
add
mov
add
leave
cwtl
xor
adc
lea
hlt
mov
mov
loopne
ss
fadds
mov
jns
pushf
jg
and
jae
cmp
in
loope
xchg
cmpl
cmp
sbb
and
inc
sub
push
aam
cmp
int3
sub
loope
das
je
mov
stc
mov
ret
mov
add
lret
or
add
lods
pop
test
js
lods
inc
test
shl
int3
jnp
pop
sub
mov
jecxz
dec
mov
push
sbb
subl
adc
xchg
stos
xchg
imul
dec
adc
test
push
xchg
dec
sbb
sbb
rorb
imul
xor
popa
std
aaa
inc
add
mov
shr
xchg
gs
cmp
call
in
add
imul
inc
ss
add
sbbb
sbb
xlat
int3
testb
jne
or
add
adc
or
js
push
stos
ficomps
test
pop
aaa
push
push
insl
sbb
or
rcl
cmp
mov
xchg
sbb
cmp
adc
outsl
add
sbb
jmp
mov
insl
jp
fistpl
cmpsb
lock
adc
stos
push
cmpl
es
mov
sbb
push
addb
xchg
push
add
subb
clc
adc
mov
pop
adc
xorl
arpl
sub
mov
add
pop
xor
push
repnz
mov
test
test
sbb
mov
sbb
and
inc
sbb
les
xchg
xor
out
or
gs
sahf
mov
push
lock
les
cmp
mov
sbb
loopne
mov
call
lods
jne
fnstcw
mov
or
jecxz
arpl
xor
or
flds
daa
ss
dec
sbb
mov
sub
shll
push
xor
sub
stos
jge
jmp
sub
and
lock
in
adcb
push
sub
das
push
sub
mov
lock
adc
mov
enter
adc
or
mov
jl
adc
mov
inc
pop
test
imul
add
leave
pop
test
daa
add
lret
or
fiadds
ljmp
add
ret
push
repnz
das
mov
mov
cmpsb
mov
inc
dec
cwtl
and
bound
in
or
push
or
mov
popa
rolb
ror
out
xor
or
cmp
add
stos
cmc
ret
pusha
icebp
andl
leave
mov
lock
mov
push
push
jne
inc
iret
cmp
in
icebp
pop
icebp
jne
adc
sub
add
jb
enter
and
adc
jp
ret
or
xlat
adc
mov
lcall
int3
add
or
bnd
add
push
cmp
mov
add
cmp
inc
imul
enter
and
add
fdivrp
dec
inc
test
cld
pop
sbb
or
enter
add
loopne
cs
rol
loopne
cwtl
in
dec
xchg
sbb
cltd
in
outsb
sbb
add
int
push
int3
enter
dec
xor
mov
add
pop
loope
stc
sbb
sbb
lcall
mov
loope
and
inc
das
sbb
leave
jl
repz
jecxz
add
test
setl
push
jg
pop
add
mov
mov
pop
jmp
js
xor
mov
cmpsl
push
mov
ret
ret
sub
xchg
or
lea
rclb
mov
mov
punpckhdq
repz
fimuls
push
call
sarl
movsl
inc
add
pop
mov
cmp
hlt
jge
into
movsl
inc
add
pop
or
cld
enter
mov
pop
add
dec
sub
inc
pop
xchg
loope
mov
jp
jmp
test
repz
mov
mov
lds
jo
rcr
jmp
cmp
adc
sbb
inc
jecxz
icebp
out
dec
xchg
add
push
popa
cmpsl
mov
jge
imul
cmpsl
andb
add
mov
repz
mov
pop
sbb
in
sbb
lods
xchg
cmp
mov
add
test
sbb
test
dec
mov
test
jle
add
daa
add
lods
lds
mov
cmpb
dec
mov
inc
adc
inc
xor
aaa
push
mov
mov
int
sub
push
xor
rcrb
adc
call
stos
or
push
inc
js
xchg
dec
sbb
add
pusha
pop
test
push
pop
or
add
test
xor
mov
mov
push
rclb
xor
jae
roll
cmp
into
jmp
pushf
gs
sub
sub
xchg
add
pop
add
push
loopne
test
cwtl
xchg
ret
cmc
and
dec
push
sub
add
rclb
mov
add
fisubrl
jecxz
lcall
sub
aad
xchg
and
into
popa
mov
insl
leave
and
ret
jmp
adc
je
add
mov
cmp
jl
dec
or
pushf
test
sti
pop
add
add
ret
mov
push
fiadds
xor
adc
in
out
add
dec
data16
mov
jmp
pushf
or
inc
int
out
mov
sbb
mov
ret
sub
mov
push
les
cmp
sub
inc
mov
sbb
mov
testl
cmp
in
orl
in
cmp
mov
daa
sbb
push
lahf
cmpsb
clc
out
or
mov
jbe
orl
xor
add
or
sbb
and
enter
loop
cli
push
subb
sub
push
les
mov
dec
push
xor
hlt
cmp
push
sbb
add
sbb
daa
adcb
mov
orb
lods
or
add
mov
mov
fidivrs
xor
mov
or
xchg
or
and
sub
fldenv
enter
sbb
or
in
xor
xor
and
xor
sbb
or
xchg
sub
ret
sub
adc
nop
dec
and
xor
xchg
add
or
shll
in
inc
pop
pop
iret
xor
inc
sbb
mov
scas
push
mov
inc
ret
push
sub
add
xchg
push
and
mov
arpl
adc
push
add
add
stos
in
sarb
aam
xchg
sub
cltd
sarl
sar
add
push
xor
stos
or
adc
or
push
sub
push
or
ficompl
adc
es
cwtl
dec
inc
mov
leave
push
jmp
inc
push
roll
lds
loopne
xchg
push
inc
mov
sub
enter
cld
inc
roll
jo
rep
icebp
xchg
add
xor
cmpsl
int3
pop
push
fiaddl
and
and
clc
and
jo
ret
or
test
lea
or
push
pop
and
scas
repz
add
cwtl
repnz
mov
and
xchg
cmp
jl
ss
int3
sub
es
cli
dec
dec
and
sub
add
jns
add
fistpll
sub
sarb
adc
movsl
sbb
adc
rcrl
pop
data16
aas
pushf
mov
jmp
pop
cmpsb
lock
je
repnz
ret
test
add
movlps
sbb
or
pop
ds
aaa
jl
jmp
push
sbb
pop
push
or
testl
and
cmp
jne
pop
sbb
add
push
jmp
push
mov
popf
les
je
sub
clc
lock
adcl
and
sbb
jl
sub
and
add
mov
ret
pusha
sbb
or
jge
lea
mov
scas
outsb
leave
in
sub
out
jo
mov
sub
mov
fwait
ja
mov
lahf
add
add
mov
inc
shlb
xchg
sbb
sar
mov
add
imul
pop
call
jne
icebp
inc
or
add
cld
adc
or
sbb
inc
movsb
adcb
insb
ljmp
push
push
lods
sub
loop
testb
xlat
rcrb
clc
mov
adc
inc
pop
mov
test
mov
popa
dec
adc
jbe
imul
pop
int3
cmp
inc
adcb
adc
push
push
mov
or
push
xor
je
push
adcb
adc
pop
add
sub
jbe
push
mov
js
xlat
inc
xorl
popf
inc
and
mov
or
adcb
sub
sub
xor
call
ret
mov
out
pop
and
jb
xor
pop
mov
add
push
dec
in
in
jge
push
sbb
jbe
xchg
adc
and
sub
push
xor
fsubr
add
pop
data16
jae
sbb
cmp
pusha
or
or
inc
ret
jnp
adc
je
push
pop
push
hlt
jmp
pop
scas
and
scas
and
shll
cwtl
aas
mov
lods
xor
adc
inc
jecxz
jecxz
ret
sub
add
xchg
cmc
popa
cmp
sbb
nop
lcall
cwtl
loopne
sbb
xor
loop
fcom
jb
adc
adc
sub
in
mov
adc
dec
sub
jle
stos
jge
or
jne
dec
jmp
cmp
and
call
mov
xchg
je
out
mov
push
and
addb
inc
cs
and
arpl
add
addl
add
add
insb
std
mov
insb
loopne
movsl
imul
leave
scas
inc
pop
push
pop
mov
cmp
ficompl
js
or
push
jns
mov
hlt
lcall
adc
in
mov
dec
dec
mov
dec
shlb
fidivrl
test
movsl
mov
aaa
rclb
fsubr
shl
lret
rcrb
int
lret
adc
jne
loope
decb
push
addb
stos
xchg
loope
inc
adc
mov
add
push
sbb
xchg
lahf
or
push
aaa
inc
fdivrs
hlt
fsubrl
push
mov
and
cwtl
dec
mov
outsl
repz
popa
xor
jns
push
sub
mov
push
movsb
or
insb
jo
push
adc
bound
push
or
jne
xor
add
outsb
adc
add
fwait
cmpsl
int
xchg
sub
lods
aaa
adc
and
les
cmc
jg
mov
nop
pop
mov
add
or
sbb
xor
aam
or
mov
pop
and
xchg
fnstsw
add
pop
add
shrb
jl
gs
inc
jge
test
pop
in
inc
add
adc
fisttps
sbb
fidivrl
sbb
or
xorl
add
push
fsub
or
sti
jmp
adc
jns
sub
add
add
rcrl
or
and
mov
sbb
inc
xlat
pop
sarb
inc
inc
test
sub
add
fadds
jmp
xlat
sbb
sbb
mov
out
push
pop
lcall
jne
inc
jnp
shll
movsb
jle
scas
push
or
inc
imul
and
mov
push
insl
lods
or
orb
mov
adc
pop
loope
loopne
gs
sub
xchg
or
mov
mov
popf
or
mov
std
ficoml
je
xlat
test
cmp
and
bound
pop
lret
adc
mov
add
mov
xor
btrl
mov
and
xor
adc
popf
out
inc
or
jnp
xchg
pop
nop
in
lret
pop
add
cltd
loop
out
mov
inc
arpl
imul
addr16
clc
cmp
jl
push
rol
and
popa
sbb
repnz
sti
xchg
mov
pop
es
and
add
pop
and
lock
or
push
shll
mov
repnz
push
and
out
or
pop
push
fnstcw
sub
push
mov
out
inc
mov
jmp
in
in
mov
inc
rorb
or
or
dec
int3
or
stos
adc
ja
fldt
push
je
enter
mov
push
sub
bnd
sbb
lods
sbb
pop
pop
adc
and
fstl
jmp
push
jmp
rcll
sub
xchg
lret
lods
mov
rolb
dec
gs
int3
out
adc
mov
in
sbb
pop
andl
testb
jne
cmp
ss
inc
arpl
les
data16
or
pusha
movb
cmp
push
jmp
test
incl
or
nop
cmp
push
pop
sub
mov
adc
jo
sbb
dec
push
add
jecxz
add
jle
mov
outsb
jge
sub
or
scas
mov
das
pusha
sub
cmp
jg
adc
fnsave
xchg
or
inc
or
or
stos
ss
sbb
hlt
iret
xchg
fdivr
inc
inc
and
sub
sub
add
into
sbb
outsb
dec
push
push
jae
push
icebp
ret
data16
js
pushf
hlt
adc
cltd
in
push
ss
js
add
outsb
dec
stos
jo
test
jl
lea
sbb
in
inc
add
test
sbbb
push
clc
mov
inc
test
adc
add
data16
aas
and
data16
sbb
jp
add
leave
mov
add
xor
sarl
add
push
rol
adc
outsb
cs
insl
and
icebp
icebp
push
lret
xor
xor
sahf
aaa
cmpb
sub
push
dec
out
inc
adc
pop
push
pop
enter
and
sbb
lods
fcmovbe
call
sub
fcmovb
dec
daa
repz
fisttps
cmpl
xchg
push
dec
int
leave
xchg
inc
outsl
add
adc
cmp
or
repz
out
mov
pushl
mov
inc
jb
xchg
pop
add
add
add
push
push
dec
leave
dec
scas
push
add
test
inc
mov
and
sbbl
fists
dec
sbb
add
or
push
lea
push
cld
xor
push
in
add
push
and
jo
pop
or
pop
pop
or
dec
cmpsb
loop
popa
pushl
push
or
pop
popa
dec
daa
repz
lock
mov
pusha
fsubrl
add
lea
jb
pusha
add
popf
inc
push
call
and
mov
dec
sahf
pop
out
sub
mov
mov
or
dec
mov
bound
pusha
inc
or
js
pop
pop
shrb
jmp
dec
push
in
sti
push
mov
femms
pop
aas
adc
in
push
ljmp
in
dec
icebp
adc
pop
leave
clc
adc
mov
popf
push
dec
add
lret
push
dec
aas
dec
adc
sub
mov
andl
cld
enter
roll
xchg
inc
sbbb
popa
adc
in
adcl
loopne
aad
jmp
jmp
push
push
jp
cwtl
pop
js
and
jnp
mov
jbe
sbb
xorb
fcmovnbe
xchg
pop
xchg
mov
mov
rcrb
ljmp
and
pop
pop
pop
cmp
test
imul
test
sub
jo
cmp
mov
iret
das
das
lret
mov
int3
loope
push
mov
adc
jmp
push
add
cmpsb
adc
inc
subb
xchg
shlb
lret
dec
push
test
sbb
xchg
mov
sti
rolb
loope
jo
push
inc
lock
in
jnp
scas
es
nop
xchg
in
addl
fwait
or
mov
sub
push
std
cmp
or
frstor
insl
add
cld
mov
test
xor
dec
lret
and
sbb
push
xor
jns
mull
lret
pop
push
sbb
push
fdivl
xchg
adc
fsubrl
jne
or
arpl
mov
dec
push
pop
mov
pop
push
sub
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
fadd
aad
add
xor
imul
shll
mov
cmp
subb
adc
add
mov
push
mov
or
jno
les
or
cmp
mov
cmp
rolb
gs
lcall
xchg
lods
adc
sbb
xchg
jecxz
in
rcl
shrb
cmp
clc
cs
mov
sbb
scas
adc
jl
je
push
or
ret
pop
bound
imul
mov
push
mov
sbb
push
jne
dec
cmp
or
gs
loop
xchg
dec
mov
fildl
mov
test
and
pushl
test
xor
add
test
push
insl
cmp
pushf
imul
or
loope
mov
mov
lods
or
sar
xchg
xor
je
es
xor
jg
sbb
push
pop
push
push
lock
dec
mov
xor
stos
push
mov
push
jb
push
test
mov
gs
inc
mov
push
andl
or
int
lea
call
dec
fists
mov
call
lahf
push
xchg
adc
sbb
jbe
pop
into
mov
push
mov
push
sti
jge
mov
dec
push
push
and
into
fs
sub
mov
sbb
repz
mov
ret
xchg
mov
clc
pop
sti
xorl
mov
mov
inc
repz
mov
test
jne
cmp
lea
loop
mov
and
sbb
pop
outsb
sub
stc
dec
aam
cmp
mov
test
jnp
jg
cli
sbb
or
mov
fcomp
jne
std
popf
fnstenv
mov
xchg
rclb
sbb
shr
push
nop
cmp
pop
adc
adc
outsb
ljmp
lcall
sbb
insb
pop
mov
push
scas
nop
cmp
into
or
add
movb
pop
js
std
repz
cmpb
leave
xor
fldcw
inc
sbb
xchg
enter
or
add
cmp
mov
je
aas
and
add
dec
jp
shl
mov
repz
pop
ja
stos
push
or
mov
and
cld
movsb
cmc
jmp
sbb
cmp
or
or
mov
shr
mov
fwait
lcall
outsb
sub
rclb
jle
jmp
cmpb
lcall
inc
add
jmp
adc
pop
mov
flds
testb
add
movsbl
pop
out
fwait
push
mov
adc
and
out
xchg
cld
mov
push
or
sbb
add
pop
outsl
adc
mov
dec
movsb
pusha
test
cmp
push
mov
js
test
push
inc
aam
push
mov
addr16
loope
push
shr
add
jle
int3
addr16
add
or
push
out
or
insl
add
jl
fiadds
sbb
mov
es
jle
sub
lcall
dec
cmc
rcrl
mov
mov
sub
pop
shl
push
fucom
fmull
rorb
rcrb
inc
dec
ja
loop
aas
je
adc
add
ret
cs
loopne
rcl
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
add
jmp
and
or
add
jb
es
and
je
mov
pop
pop
adc
dec
stos
ficompl
aam
rcl
std
fndisi(8087
cli
adc
sbb
out
and
xor
inc
out
sahf
out
push
pop
pop
bound
insb
jno
jnp
jns
out
test
jns
out
mov
out
sahf
mov
rol
shrb
sarl
mov
add
dec
mov
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
cmp
sbb
and
aas
push
jle
cs
inc
mov
push
sbbl
stos
inc
add
and
sbb
jge
pop
cmp
mov
loope
xchg
enter
jbe
clc
or
jae
pop
loopne
psubusb
or
lods
or
add
mov
mov
or
add
arpl
pushf
fists
inc
or
fidivrl
adc
adc
push
fldcw
addb
pop
mov
inc
sbb
test
gs
ret
or
test
in
xchg
aad
testl
xchg
cmpsl
loopne
add
lods
cmp
jb
xchg
in
aas
sti
cltd
jmp
lret
add
cmpl
int3
cs
outsl
add
inc
jmp
lea
xchg
cwtl
adc
jns
shlb
and
filds
adc
push
jno
inc
ret
xchg
cld
mov
outsl
orb
adcb
inc
loop
nop
das
sbb
jns
fwait
and
lods
push
sub
mov
je
je
dec
lock
pushl
sbb
aam
shr
inc
fiadds
daa
ja
sub
inc
fbstp
mov
inc
nop
out
popa
loopne
adc
mov
sub
cli
roll
mov
push
shl
shlb
sub
rcrb
mov
add
push
dec
lods
bound
mov
shr
add
add
and
mov
in
mov
jbe
cmp
jb
fucomip
scas
nop
xchg
push
lds
pop
pop
add
push
push
dec
adc
pop
add
idivb
ja
leave
add
xor
mov
js
sbb
xor
sbb
into
add
sbb
sbb
pop
js,pn
pop
cmpsb
lock
movl
or
cmp
add
or
jbe
mov
and
or
and
jge
mov
rorb
roll
mov
mov
movsl
jb
insl
rcrb
jg
into
stc
ja
lea
imul
lea
mov
mov
stos
inc
inc
xchg
or
sbb
lock
imul
xor
pop
pusha
adcb
icebp
mov
ds
push
mov
xor
shlb
push
adc
or
cmp
xchg
and
inc
add
pop
mov
push
shlb
and
clc
dec
inc
xchg
ss
jmp
xchg
ret
lea
xchg
vpshufd
stos
xchg
negl
arpl
pusha
sub
pop
cltd
ret
cmp
movl
adc
in
inc
jecxz
adc
dec
ror
inc
lods
adc
mov
mov
mov
test
lods
pop
imul
and
jmp
insb
nop
lock
push
fadds
test
adc
or
jl
shlb
movsb
and
lock
fwait
rcll
add
and
fisttpl
dec
lret
xchg
ja
mov
ljmp
sbb
and
aaa
test
push
and
or
and
inc
cmovo
fdiv
addl
push
sarl
sbb
dec
adc
jl,pn
dec
inc
sbb
xchg
push
add
sub
and
or
mov
fbstp
add
cli
es
lea
jg
mov
cmpb
jne
or
js
pushl
pop
xor
push
push
add
mov
inc
sbb
xor
cmpb
loop
or
sti
dec
cmp
jl
dec
jecxz
cmp
push
js
je
xchg
dec
sti
jmp
and
test
imul
mov
cwtl
cmp
jae
movzbl
add
gs
nop
mov
fsubrl
add
out
adc
js
xchg
add
mov
xor
add
push
and
js
inc
in
sbb
push
inc
xchg
call
mov
testb
ja
and
inc
lcall
orl
cmpsl
psrlq
in
and
stos
sub
int
icebp
mov
dec
and
mov
mov
mov
or
push
test
and
add
pop
add
into
adc
xchg
in
push
mov
jmp
notb
adc
pop
test
in
sub
jecxz
mov
js
adc
iret
add
adc
adc
inc
inc
sbb
add
cmp
sbb
shll
add
pusha
stos
mov
adc
xor
add
and
in
mov
and
call
pushf
and
std
xchg
mov
jo
inc
add
testb
sub
add
mov
mov
lock
sbb
ss
push
inc
in
daa
and
fsubr
pop
js
xor
lds
cmp
xor
icebp
test
cmp
adc
adc
mov
sti
mov
or
pop
push
test
adc
fildll
int
inc
ret
mov
dec
stos
jle
push
shrl
dec
mov
dec
arpl
subl
js
js
pop
daa
jmp
push
xor
mov
mov
xor
sbb
push
push
sbb
test
or
inc
mov
ret
test
test
sbb
movsb
inc
sahf
dec
sbb
outsb
addr16
push
mov
sbb
dec
or
jb
or
pop
dec
sub
inc
push
push
mov
test
add
aam
inc
addl
sbb
lock
xor
dec
sti
adc
sbb
lret
pushf
adc
add
call
add
jmp
add
mov
cmp
sub
nop
jmp
lea
add
popa
ljmp
in
fcoml
or
je
sub
imul
xor
sub
les
fistpll
push
dec
out
mov
in
pop
ret
ret
push
mov
sbb
push
adc
xorb
adc
add
jns
pop
and
jecxz
lcall
jl
mov
lahf
pop
adc
xor
andb
addr16
fimull
imul
inc
xor
xor
insl
inc
bound
cmp
mov
push
xor
sub
adc
add
cmc
dec
xlat
fwait
push
icebp
sub
mov
shlb
xor
es
lea
dec
lcall
cmpsl
cmp
cmpsb
xor
cmp
inc
pop
inc
jbe
mov
inc
adc
cs
test
jmp
xor
dec
add
mov
aaa
pop
es
lock
inc
mov
jmp
sbb
sbb
or
pop
idiv
sbb
addr16
cmp
fldenv
or
jb
pop
dec
adc
fidivs
adc
ret
jo
push
js
adc
inc
jecxz
xchg
or
pop
xchg
xchg
daa
mov
inc
pop
mov
lock
sbb
cmp
inc
mov
xor
inc
inc
stos
or
mov
dec
je
lea
cmp
fsubs
mov
divb
fildl
scas
dec
ja
rolb
push
adc
lcall
and
jmp
testb
mov
or
xchg
mov
sbb
inc
cmp
sbb
popa
ss
shll
pop
out
adc
adcl
test
lcall
setne
xchg
scas
lock
pop
xchg
mov
ror
lock
jmp
inc
push
in
shrb
cmpb
and
inc
xchg
lret
adc
inc
dec
inc
test
ds
mov
jg
and
outsl
sub
setbe
sub
or
lock
ds
lds
xchg
stos
imul
mov
out
imul
leave
push
stc
icebp
mov
rol
xor
or
loope
in
mov
push
dec
imul
inc
push
sti
cmp
push
sub
sbb
and
dec
scas
bound
push
nop
xor
and
dec
scas
mov
pushl
pcmpeqd
rorl
push
test
and
push
xorl
inc
push
aas
cmpsb
cltd
sbb
xor
xor
mov
mov
scas
add
push
and
leave
inc
hlt
fsubrs
cmp
pop
inc
and
push
lret
xchg
ljmp
rolb
ret
xor
das
or
je
in
adc
jb
adc
mov
xor
outsb
pusha
les
inc
and
add
rol
lods
or
fdiv
add
mov
sbb
and
andl
js
pop
sbb
jns
daa
scas
loopne
rorb
cmp
rcrl
cmpsb
fistpl
cmp
leave
adc
mov
leave
sbb
ret
sbb
rol
xor
adc
lea
mov
mov
stos
mov
cmp
and
or
pop
fcoms
jl
roll
cpuid
xchg
xchg
inc
rclb
jp
sub
fisttpl
pop
mov
sub
mov
les
repnz
dec
ret
xor
cmpl
push
ret
addr16
adc
mov
or
inc
push
cld
mov
cmp
dec
dec
sbb
int
cmp
les
and
in
jmp
das
sbb
cmp
pusha
add
sbb
xor
or
pop
sbb
push
push
jo
mov
inc
mov
fdivl
adc
test
xchg
popf
fwait
mull
mov
enter
mov
dec
mov
adc
cmpb
or
pop
orw
addl
daa
loope
and
inc
fstpl
fisubrl
push
movsl
gs
add
or
enter
sub
test
dec
fisubs
cmpsl
inc
mov
mov
dec
rolb
addb
mov
xchg
mov
or
cmp
xchg
repnz
xchg
and
mov
add
xlat
adc
xchg
fs
inc
movzbl
lea
mov
je
or
imull
xchg
inc
dec
mov
pop
pop
push
cmp
pusha
cmp
and
xchg
out
xchg
mov
adc
les
mov
push
hlt
mov
lea
daa
jl
pop
cmp
decl
lret
icebp
push
cmp
jge
mov
ja
mov
cmpb
aad
rdtsc
in
lea
dec
and
out
ret
pop
out
shlb
loop
f2xm1
or
hlt
clc
clc
cld
icebp
imul
jae
movl
or
xchg
dec
add
add
add
xor
dec
outsl
mov
dec
je
add
adc
cmp
dec
or
mov
incl
push
sbb
loopne
lret
decl
xor
xchg
js
rolb
jl
sub
and
mov
cli
in
das
cmpsb
adc
and
je
dec
je
adc
inc
push
loop
dec
inc
sahf
xchg
inc
dec
mov
repnz
inc
add
jmp
sub
mov
xchg
dec
adc
push
mov
pusha
jmp
lods
je
cmp
push
cli
mov
jle
mov
pushf
cmp
mov
push
cmp
js
js
or
adc
lock
inc
jmp
sbb
fildl
xor
inc
jmp
sbb
lcall
incl
imul
mov
clc
jb
lcall
xor
mov
imul
pop
sbb
aas
cmp
mov
loopne
mov
stc
push
or
int
and
adc
push
push
lock
dec
add
ljmp
sbb
jne
jmp
daa
pop
sbb
test
fisubs
test
out
or
lret
mov
clc
insl
addr16
jae
push
xchg
and
add
stos
jp
mov
dec
sub
dec
sub
outsl
xchg
pop
je
cmp
and
mov
add
cmp
inc
jne
push
dec
sbb
mov
sub
mov
pop
adc
pop
adc
test
jb
mov
nop
ret
shrb
jp
and
jp
std
mov
sub
lods
adc
pop
push
cmp
jne
mov
in
sbb
cli
or
out
nop
push
push
rcll
push
dec
mov
fisttpl
sub
jmp
data16
cmp
movsl
std
adc
jmp
popa
data16
jae
push
jmp
inc
jl
inc
jg
aaa
in
mov
iret
inc
out
dec
mov
sub
mov
cmp
iret
and
mov
jbe
mov
and
les
outsl
adc
pop
mov
decl
and
ret
movb
sbb
cmpl
popf
pop
jo
jecxz
js
mov
lea
mov
xor
jo
popa
sbb
scas
and
decl
dec
adc
or
jne
testl
fbld
add
mov
fs
mov
xchg
add
roll
sub
adc
call
push
dec
mov
sub
push
inc
sbb
fcompl
ret
inc
add
lods
mov
fsubs
inc
cmpb
dec
inc
add
mov
add
adc
cmp
mov
inc
inc
cmp
rcrb
bound
mov
and
cmp
adc
icebp
push
pop
or
ljmp
inc
in
dec
daa
in
pop
inc
in
out
cli
cmp
cmp
dec
push
lods
fs
out
mov
and
or
je
sti
push
sub
push
jne
cmpsb
or
add
clc
shrb
and
mov
or
sub
push
clc
ds
pop
das
cmp
lock
jg
jne
mov
mov
xor
sub
adc
push
int
pop
adc
je
dec
fsubrs
or
mov
mov
mov
jne
adcb
testl
lock
pop
sbb
xor
out
fisubrs
lds
scas
adc
andl
add
leave
xchg
or
push
mov
les
shl
popa
mov
jb
in
sub
jb
mull
les
outsl
sub
jge
jne
in
sub
ljmp
imul
shll
adc
jmp
xor
xor
in
jb
sub
ret
icebp
fadds
xor
insb
xchg
aam
xchg
pop
add
cs
iret
jecxz
das
insl
cld
jne
iret
push
std
imulb
push
adc
inc
xor
aaa
pop
or
jmp
inc
rolb
mov
sub
adc
mov
or
fcomps
ss
rcrb
dec
pusha
pop
mov
and
adc
sub
sbb
push
adc
cmp
jge
push
add
insb
push
adc
inc
sub
mov
hlt
movsl
push
cmpsb
mov
jg
mov
jge
dec
inc
incl
cmp
and
rcll
sbb
fs
dec
and
xor
rol
bound
enter
ret
cmp
push
adc
movsl
cltd
in
cwtl
xor
sbb
mov
cmp
push
mov
test
cmp
pop
add
das
repnz
pop
mov
mov
cmp
push
cmp
cmp
mov
and
movsb
sub
js
test
jl
jbe
jo
in
xchg
or
push
pop
inc
push
add
std
cmpb
jne
popa
or
lods
inc
sarl
mov
pop
mull
xchg
adc
sahf
mov
fisttps
and
pop
clc
sub
mov
enter
fwait
mov
test
xchg
ljmp
rolb
dec
pop
adcb
dec
mov
xor
push
ds
test
lret
fnstcw
mov
adc
enter
add
jecxz
ja
adc
cmp
in
cltd
xlat
jle
mov
cs
lods
mov
push
int3
pop
bnd
or
or
mov
into
shlb
adc
fsubrl
push
addb
rorl
call
push
out
jnp
out
popa
push
jle
add
loopne
mov
dec
dec
or
inc
gs
inc
jne,pn
cmp
std
jbe
sub
jnp
inc
sbb
popa
mov
or
adc
push
cmp
ret
cli
insb
je,pt
fcoml
push
push
outsl
cmp
add
inc
addb
cmp
mov
and
js
call
bound
rcr
or
aam
xor
leave
imul
mov
push
arpl
push
sbb
adc
and
xlat
or
hlt
ss
lret
pop
lock
push
jo
push
jnp
mov
push
push
push
repz
jne
in
rclb
pop
rclb
cmp
movb
outsb
adc
mov
xchg
jecxz
or
roll
xchg
loop
jo
inc
xlat
inc
push
sub
addr16
xchg
out
sbb
cld
and
insb
jmp
sbb
xchg
or
add
or
dec
xor
addr16
aam
pop
inc
stos
sub
mov
or
jg
sub
bound
push
jae
out
sub
dec
push
xor
lea
mov
push
inc
xor
cmp
jb
shrl
dec
aaa
inc
aas
push
dec
incl
sbb
mov
mov
pusha
and
ret
inc
or
xor
mov
adc
stos
sub
add
xchg
fiaddl
sub
push
je
inc
jmp
push
cmpsb
add
xchg
test
ljmp
mov
test
add
add
cmp
inc
inc
je
xor
dec
repnz
jl
add
xchg
push
lds
sub
test
cmp
inc
imul
push
andb
push
push
jns
call
and
sbb
dec
or
mov
fwait
push
xor
pop
xchg
push
add
adc
adc
dec
or
push
loopne
xlat
push
mov
movsb
xchg
insb
xchg
sbb
ficoms
jne
pop
repz
push
add
inc
out
lret
xchg
push
fsts
adc
sbb
leave
sbb
add
imul
push
jno
and
scas
add
sub
dec
movsb
inc
stc
cmp
popf
mov
je
add
daa
jne
sar
shlb
jmp
cmp
jne
sbb
push
or
push
out
subl
cmp
lcall
in
call
jne
inc
daa
mov
sub
mov
pop
sahf
je
cmp
push
sbb
mov
pop
bound
mov
push
jmp
sbb
and
pop
and
pop
mov
mov
stc
pop
add
das
inc
xchg
adc
jb
dec
mov
push
or
out
xor
mov
or
xor
and
jle
sti
aad
xchg
mov
mov
movsl
test
mov
je
sub
and
mov
xchg
or
lds
movsb
or
mov
icebp
jno
lods
and
mov
push
pushf
cmp
pop
mov
js
dec
ljmp
insl
push
or
push
sbb
push
mov
sbb
mov
cs
inc
xor
fadds
and
jle
jno
loop
sub
dec
mov
test
fwait
mov
sbb
xchg
xor
sbb
shlb
push
xor
jecxz
xchg
rcrl
adc
dec
mov
push
sbb
sbb
loopne
inc
pop
jae
mov
xchg
or
xchg
xor
and
test
int3
push
inc
sti
loop
std
insl
push
mov
dec
rorl
add
fcoml
testb
inc
fsubrp
inc
orb
lock
cwtl
in
dec
push
push
or
fsubrs
test
icebp
imul
add
out
loop
js
test
adc
mov
push
pushf
or
push
or
movsb
or
ret
test
in
or
sub
or
cwtl
enter
pop
adc
dec
mov
test
sub
or
push
inc
inc
or
nop
aad
xchg
push
mov
roll
aas
into
pop
aaa
in
mov
or
cmp
insb
sahf
gs
call
fdiv
rolb
scas
loopne
push
loopne
in
adc
mov
imull
and
add
push
add
mov
or
iret
shlb
adc
add
inc
xor
xor
or
out
push
sbb
dec
sets
xorl
ljmp
push
imul
loop
sbb
adc
push
push
inc
faddl
pop
cmp
data16
inc
adc
lods
xlat
divl
add
dec
inc
cs
mov
test
mov
adc
dec
xor
lahf
mov
js
adc
mov
push
movsb
add
add
mov
jmp
add
add
add
call
int3
fstpt
push
cmp
xor
leave
mov
out
inc
cmp
or
jns
and
cmpb
ret
xor
pusha
cmp
sub
cmp
pop
push
ret
outsl
flds
lods
lahf
mov
jb
sbb
lods
loopne
cli
ficompl
or
and
and
or
push
mov
pop
popa
jnp
mov
pop
add
push
mov
lea
ret
inc
pop
push
ss
inc
mov
add
pusha
add
lea
inc
push
jne
push
ss
or
je
push
cltd
add
ficompl
adcb
mov
flds
jp
pusha
inc
pusha
mov
in
sub
inc
push
shlb
dec
rorb
cwtl
mov
movl
mov
or
mov
add
jbe
sub
cs
mov
add
dec
mov
mov
ja
mov
push
xchg
jo
movhps
or
pop
daa
jno
inc
or
or
pop
cmp
xchg
dec
sub
mov
sub
xchg
adc
out
cwtl
adc
and
adc
loope
mov
push
adc
inc
pop
inc
mov
addr16
mov
out
sub
je
cmp
push
out
pusha
or
pop
push
mov
lds
add
insb
dec
aad
test
cld
mov
or
cmpl
fsubrs
sub
sbb
mov
push
jae
mov
pusha
sbb
xchg
inc
dec
pop
mulps
out
push
inc
pop
cmp
lock
mov
jns
outsb
xor
xor
stc
adc
fmuls
into
icebp
xchg
hlt
jmp
lea
pop
sbb
divl
movsl
mov
jp
jmp
mov
cmpl
nop
pusha
sbb
pop
pop
push
sbb
in
xchg
dec
sbbb
and
mov
pop
fwait
dec
mov
add
cmpsb
out
sub
and
fldt
or
adc
mov
movzwl
leave
push
sar
or
inc
sub
loopne
shl
ljmp
cwtl
js
aad
sbb
adc
movsl
add
push
xchg
out
je
sub
inc
jl
clc
addb
cmp
sarb
or
es
repz
push
mov
sub
fisubrl
fists
xchg
cmpsl
inc
inc
std
cli
lods
push
sub
out
jae
or
and
stos
jmp
push
cmpsl
ret
or
js
clc
push
shrb
mov
sub
cmpsb
adc
add
push
mov
pusha
leave
ret
sub
xchg
or
pusha
imul
stc
inc
shlb
loopne
or
testl
cwtl
fadds
add
insb
jge
push
js
inc
push
es
or
shr
mov
or
data16
jo
push
pop
adc
fs
roll
in
inc
add
fistps
and
jmp
pop
and
jo
mov
adc
push
repnz
fisubrl
sub
inc
mov
or
inc
sbb
inc
mov
dec
cmpsb
out
sub
scas
shlb
sti
push
data16
push
or
sbb
in
adc
mov
pop
xlat
adc
and
jne
mov
mov
and
cmp
jnp
clc
fnstenv
adc
or
mov
adc
ja
push
pop
dec
push
pop
fwait
add
ds
jb
ret
pushf
or
into
sahf
push
sub
pop
js
push
aam
mov
sub
sahf
adc
jb
iret
fadds
movl
sarb
insl
loopne
faddl
ror
inc
jge
jg
xchg
roll
dec
cmp
and
push
adcb
jl
add
or
je
lock
data16
mov
pop
xchg
add
mov
mov
xor
mov
sub
rcrb
push
push
cld
cmp
sbb
jmp
push
fadds
dec
addr16
insl
loopne
test
daa
sbb
dec
shll
aas
xor
imul
sub
push
lods
inc
ret
sbb
js
data16
mov
jecxz
push
and
aas
pop
cmp
push
jmp
lcall
inc
jle
ret
and
push
or
adc
mov
lcall
jmp
js
inc
dec
addr16
or
inc
dec
les
mov
and
clc
imull
pop
in
cmp
adc
sub
insb
cmp
xor
je
cwtl
les
dec
push
insb
daa
add
orb
sbb
and
sub
sbb
fsubrs
jb
in
pop
addb
insl
push
js
dec
xor
adc
bound
ret
mov
adc
popf
lret
mov
addb
je,pt
ror
outsb
mov
lea
fs
mov
stc
mov
sbb
push
push
push
mov
ret
xchg
mov
sbbb
and
into
cmp
pop
sbb
je
test
pop
ret
jp
add
cmpb
xchg
adc
add
jg
pop
outsb
test
adc
stos
rclb
xor
jmp
xor
in
pop
enter
popa
dec
es
jl
push
adc
jl
adc
btc
jne
int3
subb
sub
or
push
jmp
dec
add
cli
add
add
stos
add
je
cmp
jbe
push
addr16
or
xor
jmp
das
inc
add
pop
push
jecxz
inc
gs
ret
adc
in
inc
or
in
sub
or
or
insb
cmp
cli
pop
inc
imul
add
xchg
cmp
inc
cmp
sbb
gs
icebp
cmp
out
add
xor
jp
dec
lahf
lods
and
dec
insb
pop
or
fcoms
dec
push
cmp
or
jno
and
jp
clc
mov
cmp
in
push
jo
push
sub
pop
stos
clc
testb
ljmp
into
test
or
mov
cmp
push
push
jmp
xchg
push
adcb
push
mov
or
fs
rolb
mov
or
call
adc
cmp
int
add
pop
ja
in
lea
shll
inc
cmp
jne
push
xchg
mov
mov
jge
mov
lret
pop
pop
cwtl
outsb
lret
jne
push
sub
ss
adc
cmp
jmp
in
or
push
xor
pop
div
mov
std
push
or
aaa
lea
xor
lock
cmp
or
push
cmp
adc
jp
xchg
xor
push
adc
xor
fdivrp
jmp
add
push
pusha
xor
in
cmp
mov
ret
mov
push
aam
xchg
das
cmp
popa
orb
push
adc
mov
stc
push
inc
gs
in
rcrl
mov
or
out
xchg
out
rorb
jne
or
fiaddl
es
pop
ret
and
je,pn
xor
movsl
inc
lea
xchg
jo
sbb
std
cmpsb
imul
movntps
sub
jne
bound
adc
out
xchg
movl
bound
sub
aad
inc
jle
dec
inc
adc
adc
call
push
repz
inc
leave
pop
push
sbb
push
test
cmp
add
cmpsb
mov
or
gs
or
scas
pop
and
or
and
sbbb
ret
lock
cmpsb
add
and
clc
jg
outsl
push
xchg
scas
dec
test
pusha
jmp
movq
mov
sub
push
clc
jae
xor
out
mov
jle
xor
cli
rcl
lret
pop
ficompl
ss
insl
mov
and
lret
or
jg
dec
mov
xchg
ret
xor
jnp
mov
popa
inc
lcall
sarl
insb
adc
jle
outsl
dec
adc
pop
add
fxch
mov
roll
jbe
and
sahf
add
pop
mov
int
out
test
shlb
xchg
notl
push
dec
sbb
add
loope
or
pusha
add
nop
ja
sub
mov
pop
nop
adc
mov
xor
xchg
js
pop
push
push
enter
adc
mov
arpl
test
adc
aam
pop
aaa
lcall
cmp
and
insl
adc
sub
in
aaa
lods
xchg
adc
inc
test
mov
or
cmp
jne
or
jle
pop
dec
sbb
cmp
mov
push
push
xor
and
sbb
pushf
jns
in
pop
addr16
sbb
pop
sub
adc
mov
sbb
adc
pop
jb
rcrb
imul
cmovbe
lcall
je
call
and
inc
stc
pop
nop
or
cmp
pop
scas
xchg
bswap
out
scas
rolb
mov
mov
jnp
sub
or
js
and
hlt
or
imul
add
push
push
ret
lods
testb
daa
and
data16
sub
xor
sub
inc
int3
adc
push
mov
subl
adc
imul
aas
mov
je
or
cmovg
pop
leave
push
fisubrs
je
inc
sub
cmp
jb
or
dec
imul
shr
xchg
dec
insb
adc
shlb
inc
xor
orb
je
jmp
mov
sub
pop
lods
cmpsl
pusha
inc
lret
add
push
jmp
jae
enter
pop
pop
adc
mov
loope
icebp
cmp
xchg
jne
push
roll
shr
arpl
rcrl
icebp
mov
pop
rcl
add
andl
lea
movsb
jmp
lcall
sbbb
pushf
inc
hlt
repz
push
dec
js
cld
insl
pop
dec
xor
test
in
roll
inc
dec
pusha
cmp
dec
jbe
and
add
mov
jb
sti
std
adcl
push
sub
adc
lods
inc
adc
inc
ds
enter
add
cmp
mov
pop
mov
adc
jne
inc
cmpb
out
adc
xor
push
mov
dec
adc
dec
or
adc
or
or
push
add
mov
push
test
daa
push
ljmp
add
cmovl
xor
flds
inc
inc
or
mov
xor
mov
pop
cld
or
jo
add
enter
jl
cmp
shl
inc
xor
sbbb
movsb
shll
jg
pop
shlb
rol
loope
or
cmp
or
lret
pop
ja
cltd
and
push
lret
jne
inc
aaa
push
lds
push
dec
in
adc
mov
xchg
sbb
pop
popa
pop
and
xchg
adc
pop
xchg
inc
scas
out
pushf
aad
lret
push
add
mov
xchg
mov
mov
jbe
loopne
and
jbe
imul
or
jge
inc
imul
or
or
or
sub
ficoml
dec
sub
mov
popf
adc
fidivs
sub
push
add
push
or
sbb
imul
inc
mov
and
cmp
sbb
test
iret
sub
push
sub
inc
adc
call
orl
pop
xchg
aas
sbb
imul
add
jns
jp
nop
sti
cmp
xor
or
add
outsl
add
js
bound
pop
jne
add
sbb
gs
or
add
dec
pop
cmp
sub
inc
enter
push
adc
sbb
in
or
xchg
pop
test
cli
js
add
bound
js
mov
aad
cltd
sbb
dec
jb
or
clc
xchg
mov
mov
jecxz
push
sbb
push
mov
pop
popf
dec
ss
lods
stos
push
repnz
pusha
push
cmp
xor
add
sub
cli
aaa
dec
adc
pushf
mov
cmp
fs
insb
push
cmp
adc
jmp
sub
sti
xor
jge
cmp
jne
push
adc
or
add
fnstcw
sub
sbb
adc
pop
test
sbb
pop
xor
pop
mov
idivl
mov
rcrb
loopne
add
roll
loope
xor
aaa
mov
cmp
mov
aam
repnz
push
pop
or
xchg
rolb
cmpsl
es
push
dec
mull
pop
ljmp
fadds
mov
rcrl
les
or
fcoms
cmpsb
push
arpl
mov
jnp
adc
jns
stos
xor
pop
fcomps
aam
xchg
pop
push
jl
les
imul
lahf
jb
xchg
test
inc
sub
aad
sub
inc
les
aam
mov
adc
and
sbb
xor
pop
shrb
pop
mov
mov
in
dec
mov
push
mov
cwtl
push
and
or
rcrb
pop
push
lods
pushf
stos
fcompl
leave
loope
jecxz
lret
movsl
cmp
sbb
cwtl
cmp
mov
movsb
sub
pushf
aam
sbb
pop
pop
push
cli
stc
cmc
dec
or
add
jg
mov
sub
aaa
push
ljmp
in
add
ficoms
fcompl
dec
inc
arpl
or
test
mov
ds
js
or
jmp
sbb
xor
outsl
xor
je
pop
pop
gs
and
inc
add
pop
sbb
mov
mov
or
or
dec
ret
push
loop
push
sti
or
ja
pop
jbe
lea
adc
pusha
ss
sbb
jp
pop
sub
push
sbb
push
cld
jb
cmp
clc
jbe
add
addr16
and
mov
add
add
test
mov
hlt
xchg
or
jmp
test
jne
test
mov
and
rolb
pop
pop
jno
mov
cld
jbe
leave
shrb
mov
fbstp
jmp
aad
and
and
add
sub
lret
hlt
divl
bound
ret
icebp
fstl
jb
jecxz
xchg
loop
add
mov
outsl
popa
cmp
add
or
xor
jo
cld
cmc
and
pop
and
jmp
push
bound
test
hlt
sbb
add
pusha
lods
push
sbb
insl
adc
movsl
add
add
inc
js
inc
faddl
lods
xchg
add
jmp
sbb
push
sbb
or
repz
rolb
push
test
rol
xor
loopne
ret
test
or
sbb
lods
cmp
cmp
jne
pop
pop
mov
cmpsl
push
or
out
jno
out
movsl
es
mov
mov
rclb
push
test
inc
add
mov
shrb
sbb
push
sti
mov
sbb
loopne
and
and
shld
sub
daa
dec
jne
jmp
pop
pop
add
or
out
mov
dec
es
jne
add
sub
mov
jbe
mov
xchg
jnp
pop
lock
push
dec
dec
pop
xor
icebp
enter
or
and
sub
pop
xchg
push
iret
mov
mov
push
stos
jo
pusha
rolb
cld
outsb
test
into
adc
int
out
cmp
push
cld
jne
mov
push
cmp
fwait
cmpsl
mov
es
jne
pushl
or
xorl
adc
ret
inc
incl
dec
pushf
out
xor
jmp
std
mov
out
push
xor
cld
cld
jmp
fldt
adc
in
adc
dec
je
js
inc
inc
inc
mov
cltd
mov
or
repnz
sub
ss
push
jle
hlt
xchg
into
sub
xor
cwtl
sub
mov
dec
and
inc
fcmovu
pop
mov
sub
pop
inc
mov
loopne
loopne
and
or
sbb
mov
add
add
nop
shrl
pop
std
and
or
movsb
xchg
dec
push
or
pop
pop
dec
rolb
mov
push
roll
movb
xchg
push
mov
add
add
adc
jg
and
lea
aam
iret
es
mov
inc
iret
and
mov
pushf
jmp
xchg
scas
push
mov
and
iret
je
mov
stos
mov
cmp
jg
inc
mov
sub
pushf
subb
test
mov
cmp
push
push
into
sub
push
and
mov
ja
shlb
outsb
jae
out
and
cld
xor
pop
rolb
jb
lea
add
in
rcl
sub
sub
in
dec
inc
cwtl
sub
fnstcw
mov
lods
clc
and
pop
mov
shrb
sub
cmp
xor
jmp
in
mov
mov
add
inc
xchg
push
adc
and
sub
js
sti
mov
push
dec
addb
pusha
adc
mov
arpl
adc
sbb
adc
lods
mov
sbb
add
pop
pushf
pop
loope
inc
les
push
mov
shlb
or
adc
ret
add
jo
filds
je
add
pusha
popa
sti
filds
fmuls
lock
and
sub
add
sub
pushf
mov
rcrb
lret
fsub
movsb
and
push
push
add
pop
clc
adc
sub
xor
or
ja
int
fs
jne
pop
mov
push
es
sbb
inc
or
filds
and
mov
inc
je
mov
les
mov
stc
sbb
shll
add
jmp
or
mov
inc
inc
push
insb
sahf
out
shll
sbb
scas
fimuls
dec
mov
add
mov
inc
adc
mov
sub
shr
or
cld
daa
jge
lret
ret
cld
pop
ret
fcoms
adc
pop
jp
sub
and
sub
pop
jno
push
in
mov
test
fsubrs
movsb
lock
push
enter
push
sub
or
insb
shl
out
ss
mov
adc
jle
divl
lret
add
add
sbbl
lock
iret
xor
jo
and
sti
add
je
add
or
roll
lock
xor
ret
inc
cld
mov
dec
fsubr
cmp
je
test
je
sti
jns
daa
jl
adc
xchg
pop
sbb
add
outsb
or
cld
add
sbb
loop
push
movsb
dec
adc
adcb
add
mov
add
pop
push
xchg
in
sahf
sub
jae
jecxz
pop
or
jl
and
lret
fwait
add
mov
add
mov
xorl
pushf
lods
fdivrl
jae
inc
notl
or
inc
jno
pop
inc
jmp
cmp
out
not
scas
sbb
jmp
adc
jne
sub
test
mov
or
jg
cmp
call
mov
cmp
je
cmp
and
stos
and
adc
adc
pop
int
mov
dec
add
mov
xchg
scas
icebp
jo
adc
mov
incb
movsl
int3
lret
mov
and
je
loop
nop
pop
lret
sbb
dec
add
je
lea
sbb
push
push
mov
mov
sub
xor
or
sub
sub
push
add
add
dec
dec
lods
loope
mov
xor
push
mov
loopne
push
mov
lods
sbb
pop
xor
adc
bound
fidivl
xor
jno
sarl
sarl
add
adc
insb
or
add
sub
je
pop
pop
push
sub
bound
andl
lock
jne
mov
jp
add
push
jle
or
inc
or
dec
jne
adc
popf
cmpsl
sub
and
rolb
push
sub
and
sub
push
test
cltd
lds
push
addr16
or
rorb
sub
adcl
mov
or
cmp
mov
rcr
or
call
clc
je
mov
mov
insb
sbb
cmpsl
test
xor
fdivr
sub
and
subb
push
jp
or
jg
cwtl
or
pusha
popa
faddl
subb
inc
jle
icebp
cmpsl
fldl
push
adc
or
incb
popa
adc
enter
mov
or
das
mov
movsb
mov
scas
mov
es
dec
push
pop
imul
xorb
push
xor
out
mov
or
sub
test
jmp
dec
adc
fidivrl
add
jo
or
xchg
and
push
insl
in
push
mov
dec
mov
dec
xchg
xor
pop
insl
ja
or
jmp
or
in
js
and
mov
mov
pop
pop
fs
shrb
push
outsb
fs
mov
or
add
push
mov
add
lret
or
aad
clc
pop
hlt
ror
cmp
sub
jo
rcll
outsl
pop
push
movsb
pop
loope
pop
add
neg
in
sub
mov
enter
mov
inc
sar
add
sub
mov
popa
ficoms
pop
pop
fcoms
or
sti
and
gs
icebp
cmp
cmp
adc
mov
sub
push
push
into
and
jmp
xor
mov
push
test
dec
scas
dec
jle
mov
pop
sbb
jne
ja
testb
mov
inc
das
sub
pop
subb
adc
inc
dec
pop
adc
ror
inc
push
out
xor
dec
rclb
xchg
pop
adc
or
xor
mov
mov
les
push
sub
insb
push
cmp
pop
addl
lcall
and
or
mov
xor
push
les
cmpsb
cltd
pop
idiv
decl
mov
mov
mov
pop
jp
push
lea
punpcklwd
xor
dec
push
test
xchg
adcb
sub
or
pop
inc
inc
push
xor
loopne
dec
push
fiaddl
add
or
mov
xchg
mov
add
dec
cmp
int3
jno
mov
lock
or
mov
in
sbb
inc
out
fdivp
adc
or
repnz
leave
add
adc
bound
dec
dec
ret
rorb
out
and
xchg
loopne
mov
sbb
call
mov
aam
and
js
cmpl
movsl
xchg
enter
push
push
xor
mov
push
in
mov
add
and
lods
add
xor
mov
cmp
cmp
xor
or
pop
jecxz
les
adc
mov
test
idiv
inc
call
clc
fs
add
adc
test
push
mov
xchg
sbb
popa
pusha
lds
or
jle
movsl
jmp
dec
je
add
or
pop
xor
repnz
mov
push
sbb
outsb
push
pop
sahf
fstp
inc
add
sub
mov
cmp
add
mov
sbb
push
push
test
jg
test
jo
lea
test
imul
outsb
divb
pop
add
outsl
js
add
dec
inc
xchg
push
sbb
push
push
push
addr16
loopne
push
jne
mov
inc
addr16
add
add
test
xchg
and
leave
popa
xor
push
repnz
pop
adc
fcomip
mov
cmp
and
cmovp
cmp
jns
rol
sahf
or
mov
push
shr
push
mov
lea
mov
imul
jmp
xchg
jbe
leave
add
ja
out
pop
rorb
add
inc
sti
xchg
pop
dec
xor
sub
in
jle
ret
push
mov
sti
push
pop
or
orl
fadds
cltd
adc
sbb
sbb
xchg
fisubs
cmp
orb
add
cmp
jae
mov
sub
adc
xlat
fcoms
mov
and
subb
int3
inc
sub
clc
lcall
pop
lea
mov
mov
cmp
pop
jecxz
sbb
sub
adc
test
movsl
loope
fst
fsubrl
push
jl
sub
sub
je
or
dec
adc
pop
xor
sbb
add
loop
or
sar
clc
mov
pop
jle
cwtl
aaa
imul
adcl
rorb
jp
xchg
and
dec
cmp
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
out
jmp
lock
xor
mov
mov
pop
pop
sbb
cli
xlat
push
shll
outsb
dec
gs
pop
sub
or
dec
mov
mov
cmp
push
je
xchg
ljmp
shl
dec
int3
dec
pop
sti
fiaddl
xor
into
cmp
lret
push
rcr
or
pusha
sbb
push
inc
lods
push
sub
daa
movsl
stos
sbb
adc
pusha
xlat
out
cmp
cmp
add
jg
ret
cltd
pop
idiv
push
jl
inc
inc
xor
and
add
jo
jns
add
inc
push
xor
fsts
stc
xchg
clc
push
mov
stc
mov
stos
xor
mov
cmc
mov
notb
imul
add
lods
jmp
loopne
lods
pop
lcall
push
iret
arpl
pop
in
shlb
mov
cs
add
sub
pop
lock
mov
les
mov
jmp
dec
or
pop
movsb
cmp
pop
inc
mov
cmpsl
test
out
daa
pop
and
popa
mov
hlt
test
les
sbb
rolb
pop
and
mov
sub
cmc
sbb
push
in
dec
push
cmp
push
push
jo
lods
or
inc
push
mov
jecxz
and
jg
add
and
aam
aad
or
in
cmp
imul
mov
lret
inc
xchg
testl
jg
add
xchg
test
pushf
mov
mov
mov
push
scas
aaa
sbb
jge
or
stos
mov
dec
and
mov
jno
aaa
jb
sahf
sbb
lods
mov
mov
add
popa
cmp
lock
jmp
push
mov
into
cltd
inc
stc
mov
xor
hlt
mov
inc
mov
xchg
mov
mov
mov
jl
jge
cli
jno
mov
ljmp
pop
movsb
adc
aam
pop
lret
movsb
sbb
push
movsb
add
add
ret
xor
int
xor
add
mov
dec
cmp
in
call
dec
and
in
dec
add
or
pop
cmp
jo
add
inc
jns
shr
or
push
into
lcall
enter
pop
loopne
cmp
dec
jp
or
sub
dec
cld
jmp
adc
mov
or
push
and
inc
push
outsb
xor
mov
cmp
push
jo
scas
sub
add
mov
mov
rorl
outsb
dec
call
mov
push
sbb
insl
xchg
lock
xchg
push
aas
jmp
pop
lcall
dec
rcrl
outsl
or
cmp
xlat
repnz
pop
xorb
jle
cmp
inc
inc
popl
and
or
rorl
rcrb
adc
push
or
into
int3
ret
xor
mov
pop
jne
mov
and
mov
xchg
pop
repnz
loopne
je
popa
and
add
push
and
aad
sahf
sub
xchg
mov
lods
repnz
cmpsl
add
push
aad
dec
popf
jl
mov
aam
xchg
push
mov
into
mov
sub
lahf
push
xchg
push
xor
cwtl
roll
clc
clc
jb
in
pop
jb
pop
loopne
flds
adc
jbe
ds
dec
pop
pop
xorl
aam
mov
test
shll
pusha
loop
lods
or
rep
add
dec
inc
cmpsb
mov
insb
mov
or
add
negl
adc
cmp
adc
repz
je
rorl
data16
data16
or
lods
adc
psubw
dec
add
jmp
cmpsb
nop
dec
movsl
cmp
inc
xor
xchg
mov
jns
or
fmull
aam
iret
jns
les
mov
call
call
repz
repz
hlt
clc
clc
cld
jo
and
or
pop
jp
sbb
jmp
repz
and
push
pop
mov
lock
inc
pop
sti
and
and
adc
je
into
jl
cld
pop
and
in
cmp
pushf
push
neg
adc
mov
stc
sub
mov
mov
push
aam
cld
jbe
sbb
fiaddl
jl
mov
add
in
xchg
push
mov
inc
mov
out
push
add
mov
addr16
mov
and
iret
repz
or
push
pusha
push
cmp
ds
push
aaa
sbb
sbb
repz
sbb
adc
or
iret
repz
or
add
mov
xchg
push
les
aaa
push
add
mov
icebp
xchg
pop
push
adc
push
dec
cmp
push
xor
in
adc
test
cmc
sub
fists
insl
test
cs
jg
test
fmull
popl
mov
inc
or
jne
xchg
or
pop
mov
and
mov
cli
add
subl
add
push
add
testb
jne
push
sbb
mov
dec
sar
push
loopne
mov
mov
cmp
shlb
adc
in
out
out
adc
xchg
jbe
std
pop
andb
mov
mov
push
mov
lret
lods
addr16
inc
add
ret
popf
push
jo
hlt
scas
dec
aad
jmp
testb
cmp
mov
push
fstl
push
push
or
jecxz
push
loope
dec
inc
in
shrb
add
data16
or
inc
sbb
push
push
rol
xchg
mov
sbb
mov
mov
mov
or
xchg
icebp
jae
nop
push
nop
cwtl
inc
cmovb
jmp
sbb
sub
push
rcll
xchg
inc
mov
mov
loope
sub
lods
cld
sub
or
adc
push
or
call
jae
out
xchg
add
sbb
pop
sarb
hlt
cmpb
lock
nop
aas
into
mov
xor
scas
pop
or
jmp
scas
mov
outsb
jp
pop
std
movb
dec
cmp
xor
sub
std
mov
and
add
xchg
hlt
or
add
add
test
sbbb
movsl
call
mov
push
and
or
dec
stc
repnz
addb
test
or
adc
mov
xchg
pushf
pop
inc
lock
in
imul
xchg
cmp
dec
push
sarl
cmp
xor
add
aad
inc
out
testb
adc
cld
jmp
sub
rorl
lret
je
rep
and
in
mov
dec
ljmp
mov
sub
pop
cmpb
out
iret
lret
je
jo
insb
data16
lret
lret
or
fs
iret
sub
nop
add
repz
mov
loopne
and
xorb
dec
mov
sbb
js
popa
imul
fcomip
mov
mov
mov
adc
cmp
dec
enter
js
les
rcrb
fidivl
rcll
js
push
pop
outsb
cwtl
stos
inc
push
mov
mov
xchg
push
sub
aad
fists
flds
dec
aam
adc
sbb
ret
sub
xchg
iret
xchg
sar
or
std
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
mov
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
xor
rcrb
sbb
adcl
xchg
cmp
mov
insl
push
jne
mov
mov
es
test
pop
in
fisubl
adc
mov
lds
inc
lret
mov
or
mov
adc
add
int3
push
add
add
rclb
popa
jg
cs
das
cwtl
jb
test
xchg
lods
loope
pop
or
lods
aas
mov
and
pop
xlat
mov
or
orb
inc
adc
xchg
imul
nop
push
mov
adc
jbe
push
jmp
ljmp
sub
push
or
outsl
enter
sbb
jno
test
inc
add
jbe
xor
shlb
hlt
rol
and
xchg
into
sbb
clc
dec
pop
sbbl
push
insl
lret
mov
cmp
dec
ljmp
jns
and
jae
stc
shll
enter
or
add
dec
sbb
mov
pop
incb
add
and
orl
test
fnstsw
add
lock
dec
jmp
popa
adc
push
popa
leave
movsb
sbb
in
je
in
sub
push
in
dec
lret
lret
add
mov
clc
shl
fdivrs
aam
cmp
lcall
sbb
or
adc
xchg
push
dec
lcall
xor
xchg
call
add
sub
pop
jmp
mov
ret
repz
and
lea
mov
pop
ja
sub
mov
dec
add
test
xor
push
sar
pop
push
ja
push
xorl
or
or
orl
jb
je
mov
faddl
add
push
icebp
lret
jae
enter
add
sub
inc
dec
call
dec
cs
mov
push
pop
add
ret
out
pop
orl
nop
cli
sub
pusha
pusha
iret
loopne
sti
mov
adc
lds
movsb
call
adc
pop
fbld
push
imul
or
shlb
imul
outsb
cmp
hlt
mov
stc
fiaddl
and
xorb
insb
mov
inc
add
test
push
add
push
test
loope
insb
jle
sub
xor
pop
and
push
ss
js
add
rolb
jb
lcall
xor
xor
mov
sbb
imul
sub
sub
movsl
mov
movsl
add
cmp
mov
xchg
shr
shl
add
orb
add
lock
push
sbb
jle
inc
je
pop
push
or
push
or
add
mov
mov
inc
adcl
xchg
xchg
inc
test
scas
je
xor
adc
and
out
inc
push
arpl
imull
xor
sbb
dec
pusha
aaa
mov
das
mov
loope
cltd
mov
dec
push
sbbl
sti
inc
mov
or
dec
xchg
mov
sbb
pop
add
adc
mov
adc
jp
xor
push
popf
cmp
insl
cmp
roll
pushf
sub
shl
adcb
and
cmp
or
idivb
add
inc
mov
push
push
ret
or
inc
push
or
cmp
jbe
pop
into
pop
mov
setp
aaa
pop
sub
out
inc
lods
xlat
mov
mov
lods
or
dec
test
cmp
stos
mov
sub
dec
jae
cs
sbb
loope
test
sub
outsb
jo
jmp
and
add
addr16
add
push
pusha
or
shr
je
or
sub
cmpsb
ss
sbb
aam
popa
xor
shrb
mov
adc
or
lods
or
cmp
or
add
sbb
loopne
sbb
les
test
xor
add
ficompl
add
movsb
addr16
mov
jecxz
mov
pop
jle
popa
mov
dec
pop
and
mov
dec
mov
daa
mov
adc
data16
rcll
adc
pop
push
jmp
push
push
add
add
push
mov
mov
inc
cld
adc
and
jnp
mov
ret
push
xchg
sub
inc
sbb
xor
mov
rolb
dec
push
pop
jne
popf
push
push
inc
push
addl
lds
xor
inc
inc
cmpb
jne
xor
pusha
rolb
push
pusha
dec
cmp
hlt
sub
xor
cld
or
fcomp
cmc
rorb
add
push
les
xchg
adcl
loope
push
mov
push
push
into
xlat
outsb
roll
bound
mov
in
adc
dec
adc
jae
scas
ss
mov
or
cltd
lret
push
cltd
pop
or
add
outsb
rorb
adcb
out
pop
jl
jae
int
and
push
jl
xchg
and
jecxz
arpl
jnp
or
jl
scas
sub
and
mov
mov
mov
or
jecxz
sub
and
lea
sub
fstps
or
push
inc
je
ljmp
orl
mov
mov
shr
repnz
cmp
jg
sahf
add
mov
mov
faddl
in
push
jnp
js
pop
and
mov
dec
shlb
outsl
cmc
movb
inc
jmp
nop
mov
insb
add
push
jmp
dec
clc
xor
and
or
repnz
sar
ret
lods
pop
daa
inc
cld
mov
or
mov
insl
imul
dec
sub
push
sub
mov
fmuls
mov
decl
adc
in
jle
cmp
cmpb
sub
xor
jg
jo
push
add
mov
cmp
inc
dec
popa
pop
push
cli
fsubrs
adc
dec
xchg
sub
pusha
jnp
jo,pn
sub
aam
push
pusha
lock
sub
dec
push
sbb
jae
das
or
mov
out
sahf
mov
lret
pop
and
lea
push
je
mov
fldpi
push
pop
int
fldenv
pop
sub
cwtl
inc
and
rorb
push
leave
movsl
add
lret
inc
les
mull
daa
pop
mov
mov
sbb
add
movsb
adc
mov
jge
sbb
push
mov
pop
adc
mov
inc
jmp
iret
in
pop
inc
add
pop
push
or
sahf
out
gs
add
or
xchg
xchg
pushl
inc
push
data16
nop
or
pop
data16
add
cmpsb
gs
rcll
data16
add
imul
and
xor
mov
shll
dec
shll
addr16
xor
addr16
add
addr16
cwtl
dec
sbb
popa
fidivrs
jno
sbb
pop
aas
jmp
dec
push
pop
xchg
xchg
adc
adc
lea
sbb
adc
hlt
int3
pop
ret
adc
icebp
push
jg
add
ss
mov
lods
lods
in
jp
add
inc
mov
sub
std
cmp
mov
pop
or
lcall
lods
add
outsb
in
jmp
in
mov
call
loopne
popf
cltd
lods
push
or
and
mov
out
fsub
mov
or
pop
xchg
push
filds
aam
sahf
sbb
ss
js
pop
and
jae
xor
mov
rclb
into
js
imul
inc
adc
pop
add
pop
mov
sbb
sbb
xor
xor
lahf
push
test
adc
mov
rorb
push
lahf
cmc
pop
call
push
cmpsl
cmc
fs
sar
push
adc
or
cmp
adc
fadds
js
xor
dec
mov
jo
sbb
pushl
insl
and
divl
test
jp
add
push
mov
mov
stos
mov
js
popa
mov
loopne
jge
repnz
adc
lret
jbe
adc
jmp
inc
loopne
loopne
dec
shlb
loopne
jmp
pusha
sub
pop
jns
sub
jmp
sbb
imul
xor
xchg
or
pop
ret
flds
leave
pop
dec
sub
sbb
xchg
cs
push
pop
sbb
and
xchg
lret
movsb
int3
inc
dec
dec
test
out
inc
xchg
loopne
pusha
pop
or
jb
movsl
add
fsubl
sbbb
cld
add
push
divb
outsb
add
je
call
sbb
add
dec
or
lea
pop
and
push
pop
pop
adcb
ficoml
call
add
adc
test
pop
push
out
mov
mov
add
dec
mov
rcrb
fwait
cmp
push
fdiv
sbb
pmaxsw
add
inc
hlt
xor
loopne
push
mov
sbb
sub
rolb
inc
sar
push
fists
out
adc
mov
lret
push
or
aam
movsl
pushl
in
xchg
push
fldl
ja
sub
push
add
insl
sub
pop
inc
cmp
inc
idivl
fs
mov
xor
add
inc
cmp
jb
mov
push
test
mov
aaa
fs
pop
inc
push
add
pop
push
lahf
pop
xorl
jne
push
dec
int
pop
xor
add
bound
hlt
add
pusha
fisttpll
icebp
pop
enter
fwait
inc
push
sub
push
add
lcall
je
je
mov
jl
and
int
jmp
hlt
or
insl
lds
aas
insl
add
fdivs
push
cmc
imul
inc
outsb
fs
hlt
imul
mov
outsb
xchg
aas
xor
fisubrl
lock
mov
and
test
adc
insb
lock
lret
push
leave
dec
pop
bound
xchg
adc
jnp
lock
jo
inc
and
pop
inc
popa
movsb
pushf
add
xor
pop
sub
in
push
sbb
pop
pusha
testb
or
mov
pop
push
cld
mov
sbb
mov
adc
sti
sbbb
inc
es
fs
dec
xchg
mov
xor
lods
ja
in
mov
add
in
add
jg
rcl
xchg
les
leave
addb
push
cmp
xchg
rol
hlt
dec
add
jmp
and
leave
cmp
jo
xor
dec
adc
mov
push
js
std
pxor
and
sbb
rorl
and
mov
stos
or
sub
cmp
xlat
add
sub
dec
and
movsl
mov
aaa
cmp
dec
adc
loop
mov
pop
in
arpl
xor
mov
push
int3
pop
mov
ffreep
stos
push
adc
push
out
and
sbb
or
movsl
push
test
ja
out
jmp
daa
and
sub
arpl
jecxz
fnstcw
xchg
lcall
cmpl
jne
push
cmp
sbb
das
nop
push
add
add
in
xchg
ss
push
jno
pop
push
mov
aaa
mov
sbb
xchg
hlt
ret
fdivl
jno
rclb
sub
jbe
add
div
je
subb
ret
pop
rclb
ret
xchg
addr16
push
mov
or
pop
add
adc
cmp
fsubrl
mov
or
test
jo
out
or
mov
test
nop
es
loop
pop
shrl
push
pop
cmpsb
in
loopne
xchg
xchg
or
enter
sar
std
pop
add
mov
sub
push
or
adc
jbe
jbe
rorb
mov
push
shlb
adc
mov
push
xchg
sbb
mov
loop
xchg
mov
rorb
push
cmpsb
or
in
or
scas
and
hlt
adc
mov
enter
push
inc
rolb
adc
push
fistpll
insb
jne
jbe
jbe
mov
and
add
jae
test
adc
jno
add
xor
movsb
or
inc
jne
push
in
cmp
es
loopne
out
pop
aam
add
push
pusha
cmpsl
vpmulhuw
pop
xchg
xchg
cmpsb
cltd
mov
shrl
or
lea
enter
sbb
jl
fwait
jmp
jo
or
jae
leave
sbbl
and
mov
ds
lret
divl
test
pop
push
mov
jne
call
int3
mov
int
leave
adc
mov
dec
add
sbb
cmp
mov
mov
push
add
into
sub
cmp
add
add
mov
in
and
push
shlb
and
sbb
stos
insl
in
mov
cmp
cli
iret
sub
inc
dec
mov
insb
push
push
and
mov
xchg
mov
inc
lret
call
adc
nop
mov
leave
xchg
dec
rcll
add
in
gs
adc
or
popf
lock
lcall
pop
mov
in
test
in
xor
mov
mov
call
nop
fcompl
add
xchg
xchg
or
or
shl
push
mov
test
addb
fcompl
mov
in
ljmp
xchg
lret
aam
enter
xchg
dec
mov
inc
and
inc
add
add
test
xchg
mov
stos
loope
and
push
inc
scas
add
test
test
or
jl
pop
lods
inc
call
ja
or
jbe
lock
in
adc
adcb
fadds
cmc
fbstp
nop
mov
jno
sarl
cmpsl
stc
jb,pn
xchg
ret
ss
and
sbbl
lret
or
xchg
jo
ljmp
add
xchg
jno
mov
aam
mov
fsubs
int3
sbb
mov
pop
enter
adcb
jne
adc
andb
rcll
sbb
or
fcompl
bound
dec
push
sbb
insb
das
mov
or
stos
adc
or
out
add
inc
mov
sub
in
jnp
cmp
jmp
mov
cmp
add
dec
rorb
fsubrs
fldt
cmp
and
or
add
sub
add
insb
push
lret
xchg
xor
push
nop
sbb
rcrl
insl
mov
add
sbb
cmp
push
add
add
mov
mov
or
jmp
sub
fcmovnb
je
dec
mov
add
cld
or
add
or
lock
add
cltd
sub
sub
ljmp
cwtl
mov
loope
or
jle
ret
lods
or
push
pop
sub
mov
jno
adc
mov
inc
in
sbb
push
add
or
and
nop
push
out
add
loop
shlb
or
cmpsl
jle
mov
mov
add
inc
mov
mov
outsb
add
cli
ss
out
and
cwtl
adcl
push
sub
movsb
adc
and
inc
and
inc
add
ja
sub
jbe
loopne
fidivs
mov
push
imul
xor
test
xchg
loopne
push
push
jbe
inc
cld
cmp
dec
and
idiv
and
int
push
orb
mov
insb
jmp
and
and
dec
nop
mov
adc
mov
pop
pop
pushf
mov
pop
mov
cmp
and
mov
and
lea
cli
sbb
test
dec
stos
and
cld
jmp
and
push
inc
inc
cmp
jb
add
cmp
ja
mov
mov
insb
or
xchg
sub
ja
cli
fidivl
mov
xchg
and
daa
jmp
or
add
inc
loope
test
hlt
and
jecxz
cmp
and
xchg
aas
dec
out
insb
push
pusha
scas
jno
jmp
mov
add
or
push
imul
sub
and
cmp
jne
movl
mov
inc
xor
adc
jmp
sub
add
jmp
call
rolb
push
push
adc
rclb
mov
pusha
push
push
mov
testb
xchg
xor
xor
inc
stos
xchg
out
xor
imul
je
jmp
lock
add
push
pop
pusha
popf
push
out
int
rcll
aaa
add
cmc
push
inc
lea
push
aas
rolb
mov
jae
cmp
jbe
xchg
movsb
shrl
or
lock
xor
inc
sbb
lods
imul
pushf
loop
jo
lea
push
adc
dec
outsb
enter
push
jmp
mov
mov
cmp
pop
pop
inc
aam
rol
add
add
pop
shlb
inc
push
ds
jge
add
jb
mov
movsl
cmp
push
loopne
xor
xor
pop
sbb
xor
call
jne
mov
dec
out
jno
ja
add
jle
sbb
fstpl
popl
add
inc
jbe
mov
or
inc
dec
inc
add
and
inc
fsubrl
add
sub
loop
jnp
cmpsl
cmp
pusha
xor
enter
rcrl
adc
pop
loopne
sbb
add
lods
je
jno
xchg
mov
pop
in
mov
adc
add
push
and
push
push
call
pop
test
mov
mov
and
outsb
and
pop
jno
xor
loopne
inc
lcall
push
sub
hlt
cmp
fstpl
aam
xor
xlat
testb
lods
aad
test
testb
mov
adc
shll
sub
mov
data16
clc
add
out
mov
xchg
xchg
sub
jmp
xor
or
mov
mov
fwait
xlat
add
sub
out
imul
faddl
fwait
jno
es
je
jmp
popf
jmp
fisttpll
cmp
shlb
outsb
loopne
mov
xchg
push
and
mov
pop
pusha
and
pop
xor
pop
into
cli
xchg
sbb
mov
lea
xor
cmpl
push
xchg
add
cmpl
popa
mov
je
pop
ret
adc
push
xchg
andb
sarb
mov
push
push
push
xor
test
adc
in
cmpl
mov
ret
je
cmp
shlb
push
add
loop
imul
pushl
imul
lcall
adc
jno
inc
inc
sbb
sub
xchg
xchg
mov
jo
and
xorb
adc
sub
cmp
sbbl
lea
mov
rolb
cmp
or
pop
cld
mov
inc
add
add
or
and
mov
xchg
push
cmc
cmp
xor
add
xchg
stos
sub
ja
loope
stos
jne
mov
ret
add
rorb
jbe
xor
repnz
imul
sub
jle
loope
or
sbb
jo
or
test
or
ss
es
pop
cmc
jle
inc
js
jmp
pop
mov
push
pusha
push
dec
jb
imulb
mov
or
xor
cwtl
js
pushf
sbb
and
or
pop
sbb
movl
fisubrl
jecxz
adcb
push
inc
mov
or
aas
push
or
xor
pop
addl
push
inc
or
inc
movl
or
pushf
jo
cmp
adc
inc
or
add
imul
jo
ret
jns
inc
imul
inc
mov
dec
ror
mov
insb
pop
arpl
loopne
pop
lahf
mov
push
cmp
or
imul
stos
faddp
jle
in
add
js
loopne
dec
push
cmp
nop
jge
pop
insb
insb
je
push
push
ds
and
pop
push
insb
push
js
xlat
cmp
or
xor
fidivs
not
fcompl
dec
repz
dec
push
adc
add
mov
cmpsl
xor
pop
sbb
xor
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
jnp
jmp
jbe
and
cmp
cmp
pop
xchg
mov
mov
jg
lds
adcl
xorl
adc
or
and
gs
and
cmp
cmpl
xchg
push
mov
adc
cmp
and
mov
test
jle
inc
imul
mov
or
push
mov
pusha
sub
xor
xor
push
sub
pop
xor
pop
pop
dec
xchg
arpl
inc
pop
push
jne
cmp
stos
inc
lahf
xor
jns
xlat
xchg
sbb
mov
jmp
stos
mov
test
aas
movsl
aas
add
fisttps
mov
xor
or
aam
imul
jmp
vmovd
inc
sub
dec
out
test
push
lahf
xor
push
in
mov
mov
sub
lsl
sbb
or
add
testb
stos
pop
sub
popf
pusha
dec
jge
rcll
bound
lock
testb
mov
pop
mov
xchg
adc
and
push
sub
push
or
shll
or
or
stos
add
dec
lahf
sub
jecxz
je
clc
clc
add
add
loope
add
inc
mov
mov
icebp
inc
test
andb
sbb
push
add
imul
lret
push
sub
nop
pushf
xorl
jne
shr
jmp
or
repnz
add
jo
xchg
adc
ficoms
push
call
lock
rcl
jns
leave
sti
nop
pusha
sbbb
repz
in
jno
fiadds
jmp
addb
cmpl
addr16
jnp
push
fadds
jle
jo
mov
das
add
pop
loopne
rorl
cs
sbb
dec
add
and
sbb
mov
or
adc
shll
mov
lock
push
ret
loopne
fistps
sahf
jg
jg
pushaw
movsb
shll
jp
sbb
pushf
fdiv
or
xchg
mov
xor
test
rorl
inc
nop
imul
mov
orb
jg
push
les
jns
mov
mov
jl
sbb
dec
clc
fstl
mov
xchg
dec
adc
sub
inc
lock
testl
dec
or
sub
mov
inc
cwtl
popl
dec
push
push
pop
push
pushf
clc
push
or
rorb
jns
xchg
mov
in
frstor
enter
stos
or
lock
inc
outsl
xchg
pusha
inc
mov
in
sbb
and
out
add
push
in
jle
out
and
or
push
js
mov
rorb
push
push
cltd
jmp
inc
faddl
or
jle
and
adc
or
inc
push
jecxz
repnz
jg
fidivrl
stos
inc
jp
mov
lahf
arpl
and
push
push
test
inc
aaa
adc
sub
inc
fistpll
mov
adc
add
add
mov
xorl
inc
sub
repnz
dec
ret
subl
iret
push
pop
fistl
sbb
mov
mov
xor
out
js
push
dec
or
and
cmpb
mov
lock
call
sarb
xchg
add
loope
xor
pop
inc
pop
mov
push
pop
mov
mov
add
pop
mov
mov
push
shlb
stc
pop
dec
mov
jmp
rol
stos
stos
jno
idivb
imul
or
in
repz
mov
cmp
mov
cmp
pop
sbb
cmp
mov
mov
test
popf
imul
fcoml
or
shl
pushf
sarb
jl
mov
inc
dec
dec
dec
jne
or
xchg
dec
popw
add
addl
add
adc
add
mov
fmuls
push
inc
das
sbb
pop
mov
add
sub
loope
xor
mov
daa
adc
or
fistpl
dec
sub
test
mov
mov
dec
je
or
inc
dec
cmpsl
pusha
dec
js
js
in
adc
lahf
jns
aas
insb
jne
inc
rol
fisubrl
add
add
pop
adc
and
dec
call
push
cmpb
movl
nop
cmpb
xor
stc
inc
xchg
mov
call
imul
test
js
dec
lds
pop
leave
mov
and
adc
movsl
or
cwtl
ret
sbb
in
pop
rcl
jno
shl
lea
pop
and
test
lods
xor
fs
cmp
sub
andb
jle
push
or
adc
outsb
mov
sbb
cmc
push
inc
cmp
pop
popa
icebp
hlt
push
lods
pushf
adc
xchg
dec
clc
dec
push
stc
clc
push
clc
cli
mov
sub
cwtl
add
nop
mulb
sbb
and
movsb
xor
xchg
push
mov
jno
test
adc
pop
push
add
adc
inc
sub
or
cwtl
cwtl
mov
pop
jns
daa
mov
dec
jecxz
scas
cwtl
add
xor
cld
ja
cmpsl
dec
dec
imul
or
out
imul
adc
pop
mov
jno
outsb
nop
and
or
mov
or
cmp
xchg
sarb
xor
iret
pop
sbb
add
sbb
adc
push
mov
sub
shl
add
mov
xor
xor
lcall
std
and
ret
arpl
addr16
sub
fisubs
adc
jbe
mov
leave
test
and
push
arpl
push
add
push
or
ja
ret
or
adc
mov
cli
cwtl
jo
jno
cmp
cmp
int
insl
dec
push
int
test
mov
mov
dec
loope
jl
inc
repnz
push
cmpsl
sub
mov
mov
pushl
out
push
adc
xchg
lea
test
mov
test
imul
dec
cmpb
insl
inc
mov
test
mov
mov
xchg
add
mov
popf
ret
dec
mov
daa
add
and
jo
aaa
mov
ja
adc
movsl
nop
aad
jnp
pop
sahf
cmp
push
mov
inc
inc
xchg
shlb
mov
or
ret
sub
adc
mov
dec
push
mov
sbb
shrl
repz
and
inc
or
sub
or
jp
scas
inc
repz
addb
sub
sub
test
inc
sbb
cmp
subb
dec
data16
in
clc
xor
mov
dec
cmp
xchg
and
roll
mov
cmp
aas
lds
push
sub
cwtl
cmp
popa
sbb
jmp
test
sbb
mov
sub
loopne
dec
loope
mov
jne
push
jns
jmp
and
xor
popf
cld
sbb
popf
fildll
loopne
mov
out
shrb
aas
mov
add
pop
jmp
fwait
sarl
lahf
fstpt
sbb
orl
icebp
mov
je
push
push
mov
add
dec
mov
nop
dec
add
jne
push
sub
inc
dec
or
shr
int
mov
int3
xchg
cmp
lret
inc
shlb
or
outsb
addb
mov
rclb
test
add
loope
repz
daa
pop
adcb
pop
mov
jb
fwait
icebp
lea
push
dec
and
orl
pop
negb
loop
inc
add
xchg
push
fcomip
cmp
adc
cmp
xor
xchg
andl
cltd
dec
mov
leave
cltd
mov
xor
lods
jno
pop
lods
pop
or
inc
xor
popa
fs
pop
pop
lcall
adc
out
push
imul
pop
pop
xchg
or
xchg
xchg
lret
test
xchg
push
inc
scas
loope
mov
push
mov
pop
je
xor
pop
jno
xor
sahf
push
xchg
add
xor
xor
test
test
int3
jecxz
scas
movsl
cmp
mov
scas
mov
mov
mov
mov
mov
xlat
xchg
mov
adc
and
push
mov
sub
in
sbb
sbb
in
aad
inc
jae
add
nop
mov
adc
cltd
xchg
inc
push
sub
xchg
xlat
mov
ja
addl
stos
inc
es
mov
inc
xchg
and
push
leave
xchg
sub
mov
int3
cmp
sbb
xchg
pushf
add
test
stos
popa
outsb
xchg
mov
push
push
pop
sbb
arpl
pushf
scas
xor
xchg
stos
icebp
adcb
xchg
cmp
and
and
lods
movb
xchg
subb
mov
test
and
jb
pop
pop
jg
xchg
xchg
and
inc
dec
dec
and
cltd
push
xor
mov
arpl
ds
ljmp
adcl
push
andl
inc
lods
lods
lods
jbe
movb
jne
aas
js
fwait
xchg
rorb
add
dec
int
mov
ljmp
lahf
push
xlat
xor
icebp
jns
add
ds
movl
mov
dec
add
push
icebp
inc
add
clc
xor
add
add
into
or
or
pop
sbb
and
xchg
push
xor
and
mov
es
add
jnp
sbb
movb
xor
push
popa
and
sbb
xor
andb
test
jle
scas
imul
aaa
dec
test
jmp
imul
xor
mov
jg
mov
jnp
and
mov
dec
test
cmpsb
mov
xor
pop
mov
mov
and
sbb
or
add
shlb
sub
das
inc
fwait
jne
mov
and
add
roll
movb
and
add
sbb
jne
lods
andl
insb
loopne
out
add
fadd
rcr
inc
test
shr
push
data16
jb
test
mov
add
or
in
out
outsl
push
je
jmp
lea
lret
sub
ret
adc
or
enter
sub
outsl
mov
enter
adc
or
push
outsl
mov
testb
xor
adc
std
dec
cmp
je
or
push
sbb
xor
mov
lea
popa
add
sub
sti
ja
add
les
mov
push
mov
shll
and
fucomip
stos
bound
movsb
jb
jecxz
adc
sbb
or
push
adc
add
call
adc
dec
cmp
inc
adc
add
or
ss
sarl
push
fld
pushf
adcb
or
add
pusha
pop
fcomps
lret
push
enter
sbb
lea
or
xor
sub
hlt
out
push
push
dec
or
ror
sbb
mov
add
ds
outsl
xor
stos
add
jmp
lods
mov
xor
push
insl
lcall
out
inc
xor
add
inc
and
lea
sub
fnstsw
andl
sbb
and
lret
pop
cmp
movsb
mov
lods
inc
pop
and
add
pop
xchg
jle
inc
add
push
adc
or
nop
popa
xchg
add
xor
mov
test
inc
shlb
lahf
sub
lock
sbb
mov
add
jnp
dec
pusha
adc
add
push
cld
es
das
out
pop
andl
or
stc
add
or
jl
mov
adc
jle
es
cmpl
pop
xorl
xchg
test
xchg
xchg
inc
scas
or
dec
cmp
mov
xchg
cmp
xchg
push
push
cmp
mov
dec
jmp
cmc
fs
ror
xor
mov
rcll
pop
push
jl
aas
add
rolb
push
add
ja
xor
nop
mov
sbb
jo
or
add
mov
inc
or
jbe
jo
dec
xor
inc
test
jge
mov
push
je
mov
sub
pop
or
inc
push
call
fadds
sbb
pushf
or
jmp
and
outsl
mov
jbe
add
mov
xor
pusha
sahf
mov
pop
cmp
mov
les
vmovmskps
push
loope
imul
push
int
roll
add
int
daa
pop
xchg
stos
inc
adc
pop
subl
adc
jmp
jmp
adc
push
mov
xchg
push
pop
pop
out
rol
mov
enter
test
pushf
gs
arpl
cmp
enter
or
push
testl
dec
push
xor
push
pop
fmulp
cmp
addr16
add
dec
or
out
sub
fidivrl
movsl
insl
es
adc
jmp
or
clc
loopne
inc
cs
je
cmp
lret
sub
or
pop
aaa
jmp
js
and
cmp
push
outsl
or
ljmp
addb
jle
in
pop
xorl
jmp
sbb
push
mov
jmp
or
push
mov
pop
cmc
cmp
xor
jo
rcrb
pop
and
dec
sub
sub
fs
cmc
shlb
fistl
pop
cmp
mov
mov
push
xor
test
sub
push
lea
int3
cmp
dec
cld
push
jl
jno
jae,pn
data16
jg
push
and
jae
lea
add
add
cmp
push
lahf
jbe
jp
pop
daa
orl
push
and
mov
mov
push
cmpl
insl
cmp
pop
nop
dec
js
inc
push
pop
push
push
je
cltd
enter
sarl
lea
push
fldcw
jbe
scas
pop
push
cwtl
inc
or
cmp
test
or
dec
cmp
fisubs
inc
push
pop
push
int
rcrl
add
nop
andb
loopne
dec
or
negl
mov
movw
mov
adc
movb
cmpsb
mov
dec
das
xchg
pop
dec
inc
ret
cltd
dec
add
int
push
dec
mov
jl
andb
add
adc
ret
mov
xchg
fidivrs
sbb
mov
or
aas
xor
mov
add
arpl
lret
idivb
add
xor
aas
pminub
and
and
das
rorb
and
into
addr16
cmp
jb
add
mov
or
nop
fstpt
jmp
sbbl
or
xor
or
cmp
sarl
pop
ret
add
xor
jmp
xchg
out
mov
mov
mov
add
push
shrl
inc
jo
sbb
dec
cs
pop
mov
mov
jg
sti
mov
push
testl
sub
ss
mov
mov
loopne
or
inc
mov
xchg
mov
cmc
push
adc
cmp
ds
aaa
xor
mov
mov
jne
jmp
inc
sarl
add
or
je
bound
sub
mov
movl
inc
out
or
out
inc
push
xor
idivb
mov
adc
mov
and
aam
cmp
and
dec
cmp
fiaddl
mov
xchg
add
out
mov
ljmp
not
mov
push
fucomp
movsl
and
cmp
jne
xor
add
adc
lock
pop
mov
dec
lock
xor
sub
push
dec
mov
test
test
add
mov
or
lock
aaa
or
lret
shll
call
xor
orb
dec
push
push
cmpb
mov
sbb
mov
jb
push
sbb
fdivr
sahf
pop
pop
push
sub
push
lock
and
aas
jb
mov
int
dec
jbe
dec
push
cltd
in
mov
nop
movsl
out
add
and
push
shlb
fimull
shll
arpl
das
inc
xchg
xchg
das
fwait
or
pop
push
push
jb
pop
sbb
mov
add
add
or
icebp
incb
cmp
fldcw
loopne
daa
jg
xor
or
sbb
mov
stos
or
mov
mov
mov
and
push
add
adc
or
out
pop
sub
xor
repnz
cmp
fmuls
adc
add
xchg
add
pop
add
popf
js
push
decb
inc
pop
inc
std
jg
loop
xorl
fsts
dec
xor
sbb
ja
mov
or
jmp
addr16
xchg
xor
pop
inc
mov
or
leave
or
andl
cli
mov
sbb
daa
pop
outsl
mov
sbb
iret
sbb
out
lock
and
and
push
lods
pop
push
dec
push
js
lea
or
jb
mov
call
and
dec
adc
push
jns
xor
out
cmpl
inc
and
jne
add
sub
xor
and
add
movsb
pop
sbb
pop
sarb
add
cmp
dec
cmp
xchg
xchg
xchg
fnsave
mov
jge
inc
push
sbb
and
inc
cmp
std
xchg
fiadds
mov
ljmp
sub
sbb
inc
mov
mulb
rclb
insb
mov
xor
std
stos
add
xor
adc
aas
sbb
ljmp
lods
mov
imul
hlt
in
out
scas
jno
shl
xchg
xor
push
es
jnp
sbb
adc
ret
das
mov
test
inc
and
and
mov
pusha
xor
outsb
stos
clc
scas
fwait
xchg
sub
mov
ja
fiadds
je
movl
mov
addb
pop
in
push
aas
clc
lock
and
lods
mov
jbe
jne
or
push
lds
or
mov
shll
pusha
or
adc
pop
test
pop
lea
popf
mov
xchg
inc
daa
adc
inc
addr16
or
push
hlt
test
and
mov
les
test
enter
rcrl
add
ret
sub
sbb
jmp
pop
push
insb
add
cltd
mov
rcl
add
out
push
push
or
adc
dec
mov
fs
mov
lsl
jmp
push
pop
push
push
inc
loop
sar
jmp
rcr
or
mov
repz
dec
fstpl
inc
cmp
mul
pop
jb
cmp
idiv
decb
or
cmp
or
xor
and
clc
jns
push
adc
or
fidivrl
lret
iret
pop
push
aam
test
adc
clc
dec
sbb
cmp
sbb
sub
je
mov
push
lods
lcall
and
pop
ljmp
xchg
sub
andb
insl
dec
call
cwtl
jbe
xchg
or
sahf
testb
inc
cmpsb
daa
shrl
mov
cmp
adc
fwait
cli
aam
xlat
aaa
ficoms
mov
dec
jge
cmp
inc
push
mov
mov
and
int
cld
nop
jo
inc
jp
inc
jno
jne
lods
xlat
mov
shlb
xchg
xor
dec
loopne
mov
jne
sub
pusha
addl
cmp
or
and
inc
iret
jmp
push
push
sbb
and
sbb
push
dec
clc
sbb
jmp
test
dec
and
pop
pop
mov
add
and
or
and
add
rol
scas
lcall
mov
rol
sbb
cli
fcompl
sub
inc
movsb
cmp
xor
and
sbb
push
pop
add
popf
movsl
stos
jnp
pop
push
jmp
inc
cmp
mov
dec
push
insb
pop
daa
bound
test
rorl
hlt
out
and
inc
mov
fadds
dec
and
test
pop
into
add
adc
or
test
pop
clc
lock
dec
jae
mov
adc
loopne
mov
push
xchg
sbb
roll
push
mov
test
or
add
scas
scas
clc
cs
imulb
and
sahf
lods
dec
jo
pop
fmul
fwait
loope
lea
rcll
sbb
sbb
mov
xchg
add
mov
ljmp
cmpsl
pop
mov
xchg
jno
les
je
mov
int3
adc
ret
and
insl
cmpb
adc
dec
mov
mov
push
mov
pop
outsl
enter
mov
or
and
push
loopne
adc
add
cmpsb
or
sarb
lahf
and
cmp
out
push
sahf
adc
add
sub
fmul
push
mov
sub
fs
jmp
fisttpl
push
mov
ds
and
pop
xchg
mov
je
sbb
or
mov
jmp
adc
outsl
insl
add
push
lcall
adc
pop
imul
adc
popa
nop
dec
scas
xor
cltd
dec
movsl
and
or
inc
mov
aam
fiaddl
add
inc
inc
fidivl
lahf
push
mov
stc
and
pop
enter
loope
out
inc
in
pop
imul
fs
sub
pop
inc
xor
cmp
inc
jmp
cli
in
add
fadd
mov
inc
fdivs
imul
jmp
push
or
enter
and
in
xchg
jno
adc
lock
push
mov
mov
inc
mov
mov
insb
lock
xor
icebp
xor
cmpsb
out
xor
push
call
jne
push
adc
in
jne
and
sbb
mov
mov
stos
pop
mov
nop
push
jl
hlt
aaa
jmp
ljmp
je
idivl
outsl
push
push
dec
adc
fists
cwtl
iret
push
and
lods
push
dec
and
push
repz
jle
jg
outsl
inc
or
jbe
stc
jl
jle
xor
jg
jg
jg
jo
mov
mov
dec
std
adc
mov
repnz
in
rclb
add
lea
lea
inc
out
js
push
mov
fdivs
xor
dec
jo
mov
or
mov
adc
inc
inc
push
negl
aas
or
shrb
lret
ret
rcrl
mov
shr
dec
inc
insb
mov
xchg
inc
outsb
movsl
jmp
rol
hlt
mov
daa
adc
inc
adc
icebp
dec
inc
sbb
repz
lods
mov
insb
and
and
ja
dec
push
and
mov
rorl
sbb
scas
sub
cltd
ret
mov
ljmp
pop
inc
mov
ret
dec
in
jmp
out
shl
sbb
sbb
loopne
or
fst
addr16
out
inc
js
mov
pop
xor
lock
cmp
unpckhps
mov
in
inc
mov
shlb
orb
sbb
dec
clc
popf
pop
rcll
mov
in
sub
hlt
add
jge
xchg
dec
adc
mov
js
dec
orl
inc
or
push
gs
fisttps
sbb
loope
andl
cli
mov
cltd
lea
pop
ja
pop
mov
out
adc
addr16
pop
mov
mov
lods
ds
jp
test
pop
push
adc
or
push
les
shlb
sbb
mov
add
pop
jne
mov
or
xor
mov
inc
sti
sub
xchg
cli
adc
notb
lret
hlt
lea
lea
or
add
add
jne
movsl
sqrtps
clc
arpl
push
jmp
mov
mov
popl
rcrb
sub
xor
inc
jle
pop
sahf
call
cmp
in
cmp
shll
into
enter
add
les
outsl
adc
stos
add
loopne
mov
inc
pop
inc
clc
rorl
mov
fisttps
pushl
add
jno
push
add
xor
push
mov
aas
sbb
call
pop
inc
xor
sub
into
rorl
inc
cmp
ds
ss
pop
pop
inc
push
sbb
repnz
dec
add
insb
enter
pusha
movsb
adc
push
jns
imul
int3
or
arpl
jae
add
leave
inc
pusha
xor
and
push
sbb
xor
iret
dec
sbb
rcr
je
test
sub
mov
push
jnp
cmp
call
je
dec
pushf
push
pop
mov
xchg
aas
mov
cltd
les
adc
les
fcomps
outsb
mov
scas
je
lahf
mov
and
andl
fimull
in
inc
pop
pop
push
shll
mov
inc
insl
and
adcb
inc
sbb
in
je
sub
or
push
push
arpl
mov
and
outsb
test
leave
rclb
mov
jmp
or
ret
lret
lcall
sub
xchg
add
lret
shlb
cld
das
rclb
jo
xor
pop
les
adc
add
mov
lcall
inc
loopne
ljmp
daa
jmp
add
mov
jge
and
je
shlb
adc
out
push
sub
test
lea
repz
inc
mov
ret
insl
test
das
adc
mov
es
push
xchg
jo
sbb
adc
adc
inc
fsubr
pop
xchg
fiadds
xor
inc
jmp
data16
out
iret
cli
popf
pushl
leave
mov
ret
mov
sbb
mov
jo
add
mov
sub
inc
adc
or
jp
insb
inc
mov
push
push
nop
imul
or
cmpsb
movsb
mov
dec
and
daa
test
xlat
mov
dec
mov
cmp
inc
in
pop
xor
or
or
push
mov
cs
or
xchg
shll
mov
shrb
iret
and
or
dec
cmpsb
add
mov
mov
subl
add
mov
sub
stos
pop
mov
and
xchg
inc
xchg
mov
mov
andl
jmp
mov
stos
mov
add
scas
push
sbb
and
sti
lea
das
cwtl
cmp
jle
sub
cmp
xor
lock
jmp
dec
push
in
bound
cmp
xchg
flds
xorl
out
mov
loope
push
adc
sbb
sbb
mov
sub
mov
pop
insb
ss
adc
sbb
adc
push
es
in
fdivp
mov
nop
add
jne
in
ds
dec
jae
imul
sbb
adc
cmp
and
push
pusha
call
xchg
mov
xchg
or
pop
push
sub
and
cmp
xor
lret
dec
and
push
and
stc
sub
mov
mov
movsl
jbe
sub
mov
sbb
add
loop
je
mov
push
jge
imul
inc
nop
mov
adc
cmp
div
scas
adc
add
testl
or
inc
jmp
lock
mov
pusha
adc
mov
mov
lret
repnz
cmpsb
xor
imulb
cli
xor
cmp
or
jecxz
mov
push
inc
jmp
cmp
xor
popa
cmp
icebp
sub
dec
mov
into
dec
sahf
hlt
sub
enter
subb
xchg
cmp
fsubrs
cwtl
jge
shll
mov
dec
adc
aas
insl
cltd
jnp
inc
sbb
xlat
test
cmp
mov
mov
mov
jmp
call
pop
pop
jle
xor
rcrb
push
movsl
adc
dec
icebp
or
or
scas
xchg
nop
mov
rcll
adc
dec
and
rcrb
incb
mov
push
mov
adc
pusha
add
movsb
mov
popf
xchg
adc
or
mov
into
mov
roll
mov
adc
leave
mov
sti
imul
mov
sub
scas
push
or
mov
or
add
lret
jg
pop
inc
testl
jbe
jne
push
les
and
into
mov
jne
or
cmp
cld
data16
and
or
pop
dec
xchg
nop
or
push
call
cwtl
xchg
test
addb
ss
pushf
repnz
je
les
mov
loope
in
push
lock
pop
sub
add
bound
ljmp
clc
imul
or
js
insl
mov
mov
sub
sub
lcall
add
fisubrl
xor
or
and
cmp
xchg
rcl
std
stos
inc
jmp
mov
add
or
shr
mov
inc
mov
or
push
jmp
pop
sar
mov
dec
sub
inc
mov
push
or
into
test
lods
decl
add
dec
push
fcom
insl
fadd
ret
std
loopne
shr
or
mov
sahf
dec
mov
push
shl
pop
jne
outsb
mov
jno
inc
sarl
adc
and
enter
or
cmp
dec
shlb
push
adc
rcr
fiaddl
mov
sbb
dec
ljmp
jmp
out
jmp
or
lods
sbb
data16
and
mov
mov
rorb
add
jo
cltd
jl
dec
int3
int3
jmp
out
jp
jp
or
daa
mov
xchg
test
push
lods
pop
div
dec
sub
ljmp
jno
mov
aad
cli
imul
xchg
push
ret
imulb
dec
xorb
lret
push
lods
jmp
sub
mov
sbb
mov
mov
movups
les
ficoml
mov
inc
adc
sub
push
push
ljmp
sbb
add
out
fidivl
lret
mov
xor
inc
cmp
push
mov
jno
les
xor
xorl
incb
jne
testb
adc
sbb
mov
and
xor
clc
addr16
sub
inc
movsl
mov
subb
push
mov
cmp
fldl
pop
push
or
inc
jbe
pop
ds
cmp
pop
in
push
mov
adc
adc
rol
jne
or
sbb
xchg
notb
out
sarl
sbb
jb
dec
sub
ret
rolb
or
rcl
repz
or
mov
pop
mov
push
push
repnz
pop
imulb
es
pop
push
sbb
sub
pop
sbb
xchg
roll
pop
lea
xchg
xor
addl
mov
mov
jbe
mov
jno
add
dec
rcrb
lret
push
dec
call
push
mov
inc
les
and
pusha
pop
je
fstl
sbb
push
add
inc
adc
and
push
sub
out
inc
inc
push
xchg
jle
inc
jo
mov
rcl
aaa
mov
mov
fidivrl
jle
adc
divb
push
insl
xor
fistl
sub
fisttpll
push
xchg
loopne
mov
inc
pusha
cmp
pop
pop
ret
sub
into
cs
inc
sub
dec
push
mov
bound
add
cli
rcr
jns
jmp
add
dec
andl
rolb
mov
inc
lods
adc
stos
cli
xor
pusha
test
push
aas
rcrb
fildl
js
es
outsl
cld
push
or
addr16
add
sub
push
adc
push
inc
in
sub
lods
pop
push
jmp
lea
xchg
pop
int
fcoms
or
adc
sub
lock
loopne
mov
pusha
add
jle
ret
and
add
sub
mov
dec
mov
xor
push
pop
test
ret
xor
data16
sbb
adc
push
sbbb
test
je
mov
add
add
push
xor
or
cmp
lret
pop
ret
dec
inc
cli
jmp
loope
in
ds
push
lea
add
leave
shr
cmpsl
mov
mov
insb
adcl
sbb
rclb
lods
sbb
mov
mov
cmp
xchg
roll
cmp
xor
loopne
mov
loop
dec
push
xor
pop
ret
test
ret
insb
mov
outsl
adc
ljmp
mov
sub
pop
pusha
rorb
stos
ds
cmpb
push
push
push
sahf
push
xchg
lahf
sub
lock
push
sub
xor
pop
test
mov
nop
loope
fwait
xchg
ds
or
test
iret
or
mov
add
mov
aaa
and
adc
push
hlt
mov
andl
loopne
and
popa
inc
rclb
pop
cmp
dec
out
lret
add
cld
cmp
cmpsl
rorb
inc
movsb
mov
push
sub
mov
ds
call
jmp
es
mov
push
dec
hlt
xchg
add
inc
dec
shlb
lods
jnp
loope
adc
sub
sub
push
push
inc
sub
lods
inc
add
loopne
insl
dec
or
fildl
add
fidivl
mov
lods
shll
incl
cmpsb
int
mov
xchg
add
test
jmp
shll
mov
xlat
or
mov
add
roll
xor
cmp
sarl
push
mov
sbb
mov
mov
jmp
push
add
push
icebp
pusha
mov
dec
pusha
dec
iret
adc
or
test
mov
cld
pop
sbb
and
incl
std
sub
stc
mov
pop
mov
xor
sysenter
sbb
dec
sbb
cmp
mov
and
mov
std
xchg
lret
loope
or
fidivl
scas
fs
xor
jae
mov
jno
outsl
imul
lods
stos
insl
les
adc
aad
js
push
addr16
xchg
and
lahf
fwait
mov
add
in
push
inc
and
pusha
mov
or
les
or
cwtl
jne
push
pop
dec
andl
lock
jns
subb
add
add
jg
sbb
mov
rcl
push
loopne
data16
test
sub
and
inc
mov
imul
popa
add
xlat
xor
movsl
jne
lea
mov
stc
cmp
jo
scas
add
shlb
add
mov
test
iret
test
rorb
push
or
jle
jmp
mov
push
es
movsb
mov
adc
lds
add
ja
aaa
stos
adc
or
js
mov
jp
fwait
jo
lret
jmp
inc
mov
push
add
fcompl
outsl
rcll
aas
push
rcr
adc
inc
lods
cmp
sub
sub
jne
adc
pop
in
cli
inc
je
negb
add
cmp
loopne
xchg
cwtl
inc
je
xor
cmp
aas
and
sbb
call
js
sub
mov
dec
and
dec
push
and
scas
mov
lock
push
pop
cmp
xchg
stos
test
add
test
adc
xorb
inc
aam
orl
fistl
jmp
sbb
popf
xchg
mov
cmc
lret
and
cmpsl
adc
mov
mov
adc
adc
jb
int
icebp
inc
push
mov
lcall
add
stos
pop
push
and
xchg
cwtl
push
daa
xor
sbb
mov
insb
and
aam
pushf
push
or
fcompl
add
and
mov
xchg
sub
and
cmp
jmp
jns
add
xchg
xorb
into
xor
hlt
loop
push
push
and
pop
jmp
mov
push
adc
repnz
mov
mov
mov
mov
push
test
mov
stos
test
inc
cmp
rorb
jmp
addl
js
pop
sbb
jmp
js
inc
mov
inc
pop
mov
dec
pop
icebp
mov
pushl
cmp
xchg
mov
icebp
xchg
cmp
sub
push
sbb
and
and
mov
add
inc
push
in
into
rcrb
push
lods
test
adc
mov
adc
mov
sbb
mov
scas
ret
dec
fistl
push
pop
inc
jmp
xor
cld
cmpsb
jge
mov
add
jl
loope
es
movsb
xchg
ret
push
add
inc
movsl
pop
pop
inc
sbb
std
cwtl
adc
gs
cmp
outsb
test
mov
data16
mov
test
add
cmp
sub
rclb
add
xor
andb
xchg
inc
stos
mov
add
shl
mov
dec
les
jnp
mov
adc
pop
and
sbb
or
and
rcrl
in
cmpl
andl
icebp
xchg
mov
fmuls
mov
add
jbe
xchg
cmp
ss
or
hlt
push
data16
push
clc
xor
fmull
push
aas
out
test
xor
iret
pushl
addb
push
xor
aaa
andb
mov
cmp
add
sbb
jmp
push
xor
mov
aam
xor
dec
push
mov
cmp
mov
jne
sbb
jne
ss
push
add
add
or
addb
rol
pop
add
or
mov
or
or
pop
outsb
adc
dec
xchg
ss
fsubl
insb
or
mov
mov
push
sub
dec
std
mov
imul
add
jb
imul
dec
or
add
aaa
and
mov
and
pop
and
add
fdivrs
or
lock
cmpb
pop
sub
into
jnp
jl
push
or
jne
push
clc
push
js
orl
xor
push
push
addb
sbb
mov
inc
fsubr
push
pop
cmpl
pcmpeqb
push
and
adc
ja
pop
jmp
mov
push
mov
ret
sub
mov
adc
jno
shll
add
in
cmp
inc
loop
jno
add
adc
lea
push
mov
sbb
loopne
pusha
jne,pn
je
test
sbb
mov
xor
rorb
add
or
push
mov
fsubr
fstpl
push
icebp
rol
push
scas
fcom
xchg
add
loopne
jmp
cwtl
add
or
cmp
cwtl
add
sub
pop
daa
push
mov
inc
rcll
fs
or
call
rcrl
mov
mov
inc
cmp
roll
mov
cmp
cmpsl
dec
sbb
mov
jg
dec
bound
inc
mov
jno
and
jo
mov
or
outsb
dec
or
test
or
mov
mov
in
stos
xchg
int3
lahf
push
test
mov
sub
xor
es
xorb
adc
sbb
cs
notb
pop
or
inc
and
sahf
and
outsb
inc
icebp
inc
pop
pop
test
or
orl
shl
dec
nop
and
test
xchg
and
ret
cmp
mov
cmp
std
inc
add
jne
push
mov
inc
add
test
nop
xor
or
cld
xor
cli
xlat
sub
push
jb
movsl
xor
pop
insb
xchg
push
xlat
ret
cwtl
mov
add
mov
xchg
scas
sub
fisttpll
inc
cmp
add
popf
lcall
xchg
xor
mov
xor
imul
sub
mov
push
bound
mov
pop
cmp
imul
and
ja
cwtl
xor
xchg
mov
cmp
cmp
lahf
daa
js
rorb
mov
shlb
mov
adc
adc
pop
and
xsave
rorb
mov
jne
stos
out
and
mov
iret
or
test
add
stos
pop
lock
inc
or
add
iret
jmp
mov
dec
popf
lret
sbb
arpl
dec
cmp
arpl
int3
and
sbb
decl
jle
cmp
call
adc
cmp
pusha
js
push
sbb
psrld
fidivs
mov
flds
loop
or
mov
out
cltd
in
and
ret
movsl
mov
sbb
lds
imul
dec
or
adc
cmp
and
and
cmp
cmp
sub
xor
xor
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
adc
cltd
fs
dec
mov
xchg
cwtl
pushf
xchg
dec
es
mov
xchg
cmp
rol
cwtl
dec
xor
int3
shlb
leave
mov
mov
and
dec
loopne
call
in
aam
xchg
dec
xor
hlt
clc
cld
add
pushf
in
add
add
dec
fwait
ss
adc
leave
and
and
leave
and
sub
leave
and
dec
xor
cmp
and
xor
inc
dec
xchg
dec
cmpsb
sbb
dec
es
fs
pop
pusha
mov
pushl
add
adc
dec
fwait
inc
pop
add
je
xorl
bound
xor
cmpsb
pop
addb
or
dec
fwait
nop
jl
and
rolb
int
mov
nop
xor
rorb
cmp
cmp
lods
movsb
cltd
nop
inc
mov
mov
or
dec
mov
rolb
mov
pop
add
inc
add
xchg
ss
sbb
push
jo
push
pop
shll
ret
fistpll
dec
xchg
or
or
dec
jp
cmp
inc
cmp
dec
clc
js
fcom
sub
cmp
or
jle
leave
sub
pop
add
nop
inc
xor
mov
mov
ret
xlat
jb
and
test
and
sbb
dec
xchg
add
or
or
aam
ret
fsubs
shl
shll
dec
xor
adc
or
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcr
pushf
dec
test
jle
add
fcoms
adc
xchg
inc
mov
dec
cmp
rcl
mov
push
and
je
pop
je
push
int
rorl
or
sub
or
leave
add
pop
add
std
or
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
adc
mov
clc
or
or
inc
pop
movsb
ja
jge
je
jo
fistpll
test
pop
adc
pusha
mov
pusha
loope
pop
add
push
jmp
into
inc
jecxz
push
sahf
sub
pop
fstp
ss
sarb
pusha
pusha
fldl
cmp
pop
pop
leave
andl
xor
pusha
sub
or
push
or
adc
sti
mov
testl
fisttps
add
mov
mov
sub
add
jne
orl
and
adc
jle
outsb
pop
pop
testl
or
lods
pusha
outsl
pop
adc
outsl
lods
imul
push
and
or
fisttpl
adc
inc
xor
jg
inc
push
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
mov
add
mov
fstl
rol
push
sbb
mov
sub
push
xor
test
iret
cmpsb
push
cmp
adc
out
das
lea
inc
cli
pop
iret
enter
push
aaa
sbb
and
rcr
out
and
push
nop
mov
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
rorb
fldcw
inc
test
into
adc
jge
cmpsl
shll
scas
add
bound
mov
lret
inc
enter
mov
and
and
dec
adc
inc
movsl
jo
pop
in
mov
inc
jg
fsubr
cmp
les
fmull
mov
sbb
in
inc
lock
repnz
pusha
pusha
xchg
lock
adc
add
mov
iret
dec
cwtl
mov
shrl
in
or
xchg
scas
pop
orl
xor
lret
jle
mov
pop
jmp
pop
addl
icebp
ds
adc
adc
or
daa
enter
mov
stos
mov
adc
add
sbb
push
idivb
pop
mov
loope
push
jmp
adc
repnz
mov
pusha
xorb
add
push
mov
fmull
pop
cmp
mov
fs
adc
inc
mov
pop
mov
mov
adc
sbb
sbb
pop
hlt
dec
lahf
hlt
les
sbb
cltd
out
sub
dec
ret
mov
dec
cmp
in
dec
testb
pop
ljmp
jge
jmp
jno
fildl
loop
dec
inc
and
loopne
aad
jnp
add
adc
dec
jne
into
cs
les
insb
fdivl
mov
and
scas
adc
adc
xor
and
call
push
sbb
add
int3
and
jae
ss
or
mov
jbe
loopne
ja
push
das
adc
inc
push
andb
mov
jl
loope
mov
mov
mov
mov
jl
push
jnp
xchg
xor
push
in
shlb
data16
or
add
call
pop
lods
frstor
cld
in
arpl
mov
push
nop
jle
add
sbb
or
mov
stos
sub
jge
lock
or
imul
decb
mov
loopne
fsubs
into
pop
xchg
cmp
mov
mov
adc
dec
testb
call
enter
outsl
adc
fld
fucomp
pop
flds
pop
fnstenv
in
push
stc
jbe
mov
xor
test
cmovge
and
mov
jne
rcrl
adc
push
or
fidivs
push
or
push
out
mov
and
and
insb
je
xchg
pop
or
push
and
repz
sbb
sub
xorl
push
push
push
sbb
xchg
movsb
ss
ljmp
mov
fnstsw
movswl
lret
sbb
loop
shrl
cmpsb
inc
fnstcw
lcall
fmul
push
in
sub
or
push
mov
push
lock
jle
fldt
fwait
pop
cltd
loopne
test
fsubs
outsb
fwait
pop
mov
jbe
inc
adc
and
adc
nop
call
movsb
es
add
jmp
add
push
add
mov
scas
push
lret
dec
sbb
xorb
scas
punpckhwd
ss
add
or
pop
xor
or
sub
in
push
or
mov
push
fsubr
or
mov
jg
add
jo
dec
js
xor
mov
sbb
pusha
jl
adc
jg
pop
ss
lcall
mov
gs
shlb
jbe
mov
inc
movsl
mov
add
xor
rorl
es
jne
mov
test
test
push
pop
rclb
add
xor
dec
shll
adc
pop
or
push
jo
jnp
adc
into
cli
inc
push
lret
je
adc
mov
mov
mov
push
cmp
jo
push
sti
jbe
xor
js
out
ds
loopne
adc
repnz
sti
in
xchg
or
add
loope
or
or
inc
add
loope
rcrl
popa
sub
sarb
rolb
and
out
adc
dec
inc
gs
push
push
cmpsb
insl
test
push
or
dec
add
adc
jmp
aas
sub
mov
cmp
inc
push
daa
lock
test
and
jo
jl
xchg
in
fcomi
mov
adc
lock
stos
je
pop
pop
imul
add
dec
ss
es
pop
sub
rorb
dec
dec
adc
xchg
jge
cmp
adc
adcl
test
jns
dec
or
inc
lea
adc
sub
inc
rorl
ret
mov
mov
add
call
loop
rolb
cmpl
sbbl
outsb
out
imull
pop
pop
and
mov
out
mov
sbb
cwtl
sub
sub
mov
insl
lea
cmp
cli
lret
add
and
add
fstpt
dec
cmp
ds
add
jae
adc
lds
mov
pusha
add
add
inc
and
jo
test
jge
fistps
mov
sub
or
inc
mov
test
and
push
or
mov
inc
loope
pop
or
xor
xchg
aam
xor
cmp
rorl
mov
cmp
pop
mov
inc
jecxz
rcl
sub
sub
mul
pop
movsb
pop
into
loopne
pop
popf
mov
lcall
push
or
or
fwait
cs
aam
out
mov
add
push
mov
adc
lret
pop
pop
sub
ret
inc
pop
sbb
mov
fs
push
incl
lcall
dec
lea
push
xor
inc
push
lods
sbb
test
push
adc
nop
test
sub
dec
out
xor
loopne
rcrl
dec
xor
mov
mov
mov
lods
fsubr
pop
adc
scas
mov
add
xor
pop
push
incb
shlb
mov
dec
jns
push
imul
cmc
js
push
push
hlt
push
aas
mov
cmp
lea
xor
ret
sbb
fisttpll
leave
movsb
and
and
jl
shll
decb
push
addl
decb
pusha
cmpl
pop
shr
stos
dec
into
out
mov
jl
stos
iret
and
cmp
and
and
jge
int
mov
in
xchg
jge
and
add
xchg
or
jecxz
xor
popa
sbb
iret
or
fidivl
addb
or
dec
cwtl
adc
pop
add
pop
push
push
lret
jne
and
dec
shll
repnz
cmpsb
mov
cmp
repnz
inc
inc
icebp
pop
jb
and
inc
inc
subb
inc
xchg
mov
jmp
or
andb
sbb
orb
push
fnstcw
inc
adc
imul
jne
je
xchg
jo
sbbb
lds
cmp
jno
xor
cs
inc
mov
stos
mov
push
pop
push
inc
mov
mov
rorl
adc
repz
add
out
mov
lock
nop
xchg
xchg
adc
adc
lret
cs
or
ss
cmp
sar
fidivl
inc
xor
mov
dec
cmpb
je
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
int3
pop
add
mov
sbb
mov
call
adc
sbb
pop
cld
adc
adc
or
xchg
cmpsb
jle
pop
dec
push
or
mov
jmp
xor
icebp
or
mov
les
xchg
add
adc
add
add
adc
addr16
xlat
xchg
pop
repnz
xrelease
xchg
inc
or
repnz
sub
jne
pop
int3
adcb
fldt
jge
jnp
jbe
or
or
test
mov
ret
push
lea
sub
adc
into
movsb
dec
bnd
inc
in
sbb
sub
mov
dec
hlt
and
sub
mov
cli
or
mov
jae
out
jle
sub
push
cmp
lret
adc
or
rol
lods
sbb
add
add
lods
jmp
cld
push
or
lret
fiadds
pop
movsb
adc
mov
jno
or
hlt
mov
adc
pusha
inc
clc
mov
push
fisubrl
dec
jns
mov
insl
loopne
inc
add
or
xor
jp
xchg
dec
or
add
add
add
sbb
pop
into
sbb
mov
jne
push
rclb
sbb
daa
jns
mov
out
xor
push
gs
xor
pop
sbb
dec
outsl
addl
loopne
or
lahf
je
ret
mov
leave
ret
jmp
xor
jmp
cmovbe
sub
adc
out
mov
adc
aam
adc
shlb
movl
xlat
adcl
add
roll
aam
pop
sub
hlt
gs
cltd
mov
jno
lds
mov
pop
and
push
fadd
push
xor
xor
xlat
test
into
jge
adc
sbb
aas
in
and
clc
adc
xchg
lea
cltd
or
add
push
mov
enter
loopne
mov
xor
mov
pop
outsb
add
mov
or
push
push
jo
imul
jae
ret
adc
pushf
pop
or
dec
and
mov
jne
int
cli
push
cmpb
jbe
sub
icebp
loope
xor
mov
rorb
push
insl
sbb
mov
js
sub
leave
xorb
shll
inc
push
xchg
or
sti
pop
cmp
enter
pop
xor
inc
popf
neg
sbb
mov
dec
add
jg
adc
xor
shll
lret
add
bound
xor
xor
dec
xor
mov
add
adc
inc
xor
xor
mov
pmaxub
xor
or
mov
ja
or
xchg
hlt
nop
or
test
dec
rcl
add
add
push
clc
lods
mov
xor
sarb
dec
stos
sbb
xor
cmp
sub
dec
lret
cld
add
movsb
clc
dec
add
shrd
sbb
pop
pushf
int3
dec
dec
cmp
mov
scas
sbb
clc
cwtl
xor
cmpsb
in
add
data16
jmp
clc
inc
and
xor
out
rol
into
in
cld
sub
imul
mov
jmp
adc
push
adc
inc
test
loop
adc
shl
andl
mov
lret
jo
imul
js
mov
push
and
sub
ja
mov
sarl
jg
xchg
icebp
pop
fdivl
xor
jmp
mov
sub
fimull
jl
loop
inc
adc
push
shll
or
or
push
mov
jo
movsb
inc
stos
mov
sub
or
add
mov
dec
inc
dec
pop
lods
xchg
cmp
or
or
sbb
cmp
rorl
adcb
in
in
ja
sbb
adc
int3
dec
push
loopne
jecxz
add
and
es
and
jbe
movsl
adc
inc
and
dec
mov
sbb
movw
add
add
or
sbb
jle
mov
push
sbb
mov
andl
add
sahf
and
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
adc
adc
subl
push
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
roll
mov
push
sbb
cmp
and
sub
or
addl
pop
push
pop
mov
jne
push
cmp
nop
cld
pop
sbb
out
popf
mov
sub
cmp
leave
xor
enter
lock
mov
push
sbb
mov
pushf
jno
test
push
adc
sub
les
inc
or
jae
pop
scas
stc
mov
push
add
and
popa
and
jmp
ds
sti
add
clc
gs
or
xchg
jno
inc
je
data16
xchg
sti
es
popa
je
mov
ss
je
dec
out
xor
and
pop
imulb
or
sub
dec
nop
rcrb
popa
cmp
cmpsb
rorb
clc
adc
push
inc
das
popa
fwait
orl
mov
mov
pop
or
xor
test
ret
mov
cmp
dec
es
dec
inc
jmp
jne
mov
insl
nop
push
mov
and
cli
inc
movsb
cmpb
jne
mov
or
add
movd
xchg
data16
and
icebp
cmp
jmp
sub
inc
popa
sub
push
push
cmpsl
or
or
jp
push
mov
xchg
cmp
mov
inc
cmp
cld
inc
testl
pop
pop
call
sub
fs
pop
loopne
lahf
ret
sub
popa
faddl
mov
rol
add
pop
rcll
sbb
dec
push
nop
xor
inc
sbb
dec
sbb
xor
dec
in
mov
cld
jg
es
push
sub
and
and
xor
test
jge
ljmp
adc
enter
dec
pop
push
add
dec
popf
sub
or
sahf
jne
mov
or
cmp
or
push
add
jl
and
pop
inc
mov
sbb
adc
mov
bound
popa
jo
xchg
sub
jns
pop
outsl
xor
add
push
or
push
cmp
adc
add
insl
xorl
ja
adcb
imul
pop
pop
pop
pop
pop
and
adc
inc
mov
pop
cmp
xlat
nop
scas
nop
icebp
insb
xchg
inc
mov
and
in
cmc
jg
or
adc
or
outsb
fbld
push
jmp
or
jmp
mov
sbb
and
orl
pop
adc
jmp
xchg
out
ss
mov
sbb
and
fists
add
or
sbb
sub
mov
int
fs
mov
rclb
jo
mov
push
mov
or
sbb
or
pop
ret
xor
outsl
push
sbb
add
dec
xchg
adc
mov
mov
add
je
mov
jp
sbb
mov
rolb
or
mov
stos
push
fimull
jbe
or
adc
repnz
rclb
xchg
xchg
jl
add
adc
fiaddl
into
inc
sub
sub
xor
sbb
test
add
test
loope
add
mov
sbb
or
pop
adc
push
mov
mov
add
and
inc
js
dec
mov
and
push
inc
fwait
cmp
addb
mov
shll
or
or
andb
repz
adc
pop
or
scas
add
shr
or
mov
cli
imulb
dec
call
and
add
mov
dec
imul
or
add
cmp
or
mov
hlt
jp
and
mov
fiaddl
je
inc
jl
in
cltd
pop
and
sbb
cmp
or
dec
pop
rcrb
add
inc
sti
sbb
mov
and
xchg
jp
sarb
adc
adc
fcoml
bound
xor
push
fiadds
jle
mov
les
mov
lea
shll
rolb
fildll
dec
pop
or
decl
push
test
dec
xchg
test
and
xchg
lea
sub
or
cli
sub
loop
pop
xor
adc
verr
subb
mov
mov
and
test
sti
jne
mov
sbb
jmp
test
add
mov
inc
mov
rcrl
je
data16
sub
popf
das
mov
scas
push
jbe
xchg
outsb
add
inc
pop
mov
jecxz
push
and
add
cltd
je
push
or
mov
leave
rcrl
dec
das
and
or
add
fcoml
repnz
lret
push
shr
xor
xor
enter
pop
or
and
xor
and
enter
int3
test
sbb
xchg
sub
add
mov
push
int
push
xchg
cltd
sbb
mov
rolb
mov
and
stos
fisttps
mov
rolb
adc
nop
cmp
sbb
fs
or
fildl
inc
imul
stc
pop
pop
cli
add
mov
or
ljmp
fsts
push
sbb
stos
shll
int3
outsl
gs
mov
cmp
fisubrs
and
fsubrl
sbb
xor
or
imul
mov
fistps
adc
outsl
or
push
scas
sbb
js
add
mov
movl
add
mov
sub
cmp
inc
pusha
add
push
outsb
add
fdivs
mov
jns
shrb
movsb
call
add
adc
fldl
and
sub
add
sbb
movsb
pop
mov
pusha
push
ljmp
push
xor
push
enter
in
popa
adc
push
je
xor
lock
cmp
sub
pop
dec
repnz
push
rorb
in
mov
fdivs
dec
jp
rolb
cmp
shlb
pop
sbb
mov
aad
mov
je
xchg
call
js
cmpb
jl
xor
mov
out
push
incl
cwtl
inc
sbb
adc
push
ljmp
inc
inc
adc
int3
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
mov
and
sarl
sub
pop
mov
jne
cmp
jne
imul
jmp
dec
add
test
testb
adc
rorb
push
xchg
or
adc
and
xor
clc
out
roll
leave
add
in
js
je
mov
iret
aad
enter
aad
jp
adcl
fcomps
movsl
add
and
das
stos
insl
mov
scas
notl
ret
xor
mov
lods
inc
add
add
loopne
ss
aaa
mov
cmp
pop
or
and
orl
rclb
mov
jge
inc
inc
testl
neg
sbb
sub
jns
sbb
inc
sbb
aaa
xchg
sbbb
sbb
xchg
adc
sbb
push
push
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
and
add
jns
xor
fwait
dec
jne
pop
pop
pop
fs
pop
insl
sbb
jae
lods
rcl
ljmp
dec
and
shr
sub
xor
mov
xor
jmp
enter
popf
maskmovq
cld
lock
je
mov
sbb
or
sbb
les
lret
inc
enter
insl
insl
pop
fildll
jae
adc
adc
or
inc
insb
enter
sub
or
aad
and
push
jbe
aas
orb
or
adc
and
add
or
adcb
add
aad
push
sbb
add
inc
and
cmp
cmovae
cmpsb
lret
shlb
cli
or
fiaddl
aaa
mov
lods
add
fidivs
xchg
mov
shll
add
ljmp
cld
inc
repnz
jbe
dec
js
cmpsb
stc
pop
mov
xlat
mov
cmp
xor
mov
aam
jne
and
inc
jmp
sub
add
mov
pop
enter
das
iret
mov
xchg
xor
test
inc
jno
ret
jg
adc
jne
or
adcl
mov
mov
xor
jmp
mov
je
adc
mov
cmp
jb
cmp
ja
add
cmp
adc
in
dec
sbb
cmp
jne
shll
leave
adc
mov
push
jb
idivl
mov
inc
test
je
fs
xor
sub
cmc
xor
fimull
jb
jo
add
rcl
sub
push
mov
test
mov
cmp
aas
divl
push
movb
jmp
or
xor
inc
pop
adc
enter
loopne
lods
or
rcl
add
mov
dec
inc
cmpps
add
adc
add
jb
add
push
outsb
cwtl
or
lock
es
mov
aad
push
adc
jp
jo
mov
cmpsb
sti
pop
clc
popa
and
xlat
push
fdivr
inc
jb
lods
sub
push
and
sbb
push
inc
js
push
add
or
add
cmp
rorb
fwait
mov
sub
adc
xchg
rorb
push
shr
rcrl
imul
inc
dec
lea
sar
lret
inc
subb
insb
push
neg
xchg
push
ljmp
insb
mov
cmp
aad
xor
dec
xchg
movsl
adcl
or
and
sti
add
inc
rclb
mov
adcl
push
add
jl
cmp
ret
or
dec
jle
cltd
inc
mov
repnz
add
loopne
adc
xlat
mov
mov
mov
sti
fldt
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
lock
pop
lcall
ja
adc
adcb
insb
jge
or
and
push
or
inc
testl
ljmp
fs
inc
or
cmp
cmp
mov
jne
pop
sbb
cwtl
rolb
idivb
pop
test
inc
mov
push
lea
sub
pop
xchg
cltd
push
insl
mov
xchg
sbb
test
push
jo
andl
sbb
ficoml
movsb
cmp
in
pusha
stos
xor
xchg
mov
mov
sbb
in
jl
dec
inc
lods
dec
shll
rol
add
sbb
cmp
cmp
roll
rolb
rol
pop
or
push
clc
inc
jbe
cmp
rorb
sbb
mov
mov
push
lret
xchg
or
inc
mov
inc
js
ret
addb
mov
int3
shrl
loope
shr
popa
jg
fisttpll
icebp
mov
dec
mov
bound
cli
push
sti
fdivr
push
movsb
lock
dec
and
sti
stc
repnz
sahf
lret
add
cli
mulb
push
data16
push
fsts
add
call
mov
or
cli
adc
inc
jae
lahf
call
mov
mov
fimull
scas
ljmp
mov
push
fidivl
fldenv
enter
xchg
and
cs
inc
add
mov
dec
sarb
mov
xor
jb
fmuls
add
or
test
or
dec
pop
fsubrl
loop
out
ss
mov
add
bound
nop
inc
test
dec
dec
inc
push
jne
aam
daa
adc
jp
push
loop
push
add
and
outsb
inc
shlb
fdivrs
aam
and
jbe
dec
sub
xor
nop
jge
adc
rcrb
jo
inc
dec
addl
test
xor
and
or
cmpsl
call
sbb
fiaddl
fsubs
xchg
fnstcw
mov
insl
test
call
fidivrs
add
jns
add
add
addb
adc
or
into
or
or
jb
adc
lock
nop
das
test
jge
or
mov
and
mov
or
cmp
jne
jne
sbb
in
or
or
enter
lret
mov
in
xor
cwtl
sbb
popa
mov
dec
sub
mov
aas
and
negb
inc
add
inc
mov
push
movb
adc
orl
cltd
imul
sub
mov
in
mov
cli
pop
inc
roll
lcall
adc
neg
and
je
add
imul
jmp
loopne
vcvtsd2ss
loopne
fsubs
lea
push
and
mov
push
subl
movsl
out
popf
cmp
add
add
dec
aaa
stos
mov
push
sar
sub
sbb
ds
dec
mov
movsl
mov
mov
popf
sbb
lock
inc
dec
enter
sub
sahf
mov
mov
jae
add
sub
test
mov
movsl
aas
leave
mov
xor
add
add
into
or
mov
inc
mov
sub
add
mov
dec
aad
test
sub
cmp
jge
sub
cmpb
mov
or
movb
dec
cmp
add
outsb
inc
mov
dec
add
add
fadds
daa
cmc
mov
hlt
ret
cmpsl
mov
in
jp
jne
dec
mov
jb
cs
inc
int
mov
adc
cmpsb
loop
ret
and
add
push
adc
inc
mov
mov
nop
or
or
adc
and
rclb
mov
ret
inc
icebp
and
add
push
adcb
and
movsb
adc
or
in
cli
popf
enter
pop
or
jne
or
push
pop
scas
je,pt
cmp
ret
sbb
adc
mov
je
mov
sub
xor
and
push
add
test
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
pop
sub
mov
fisubrl
and
sahf
fld
aam
pop
inc
mov
cmp
prefetchw
sahf
inc
ret
or
aad
cwtl
push
ficoml
or
inc
add
addr16
jne
or
or
push
lcall
push
adcl
je
inc
sbb
add
je
jmp
pop
jle
pop
or
out
or
add
mov
jle
jne
and
mov
add
test
pusha
aaa
loope
add
shlb
ret
xchg
test
cmp
ret
rolb
add
add
clc
mov
enter
test
sbb
push
iret
or
push
scas
orl
fsubl
or
mov
push
lock
insl
pushf
or
xchg
and
jne
mov
loopne
shlb
scas
adc
pmaxsw
test
rorb
or
in
int3
dec
adc
xchg
into
cmp
call
sbb
and
pushf
cmp
ficomps
inc
jg
into
into
fcomi
test
into
mov
call
jecxz
fidivrs
pop
nop
pop
loop
or
sahf
pop
mov
mov
shlb
or
sbb
stos
add
mov
sbb
mov
fs
xor
in
pop
lcall
test
lahf
pop
xchg
out
jecxz
mov
jecxz
ret
stos
mov
dec
pop
test
mov
mov
ret
cltd
and
pop
loope
sbb
movlhps
sub
jmp
lcall
sub
lret
mov
ljmp
stos
sub
pop
mov
pop
and
jge
popf
mov
fldcw
pop
ret
rorl
les
adc
enter
cwtl
pop
test
xchg
sbb
inc
and
ds
fs
rcrl
dec
arpl
jge
xor
ds
add
je
cmp
cmp
cs
xor
push
push
lret
loopne
cmpb
and
dec
dec
imul
dec
jl
sbb
je
dec
fistl
call
cmp
je
loopne
test
xchg
icebp
mov
hlt
mov
cmp
jb
cmp
jbe
sbb
sub
jmp
push
repnz
movsl
pushf
xchg
loopne
xor
or
fisubrl
test
fsubrs
sbb
leave
cld
add
or
and
ret
insb
fstpl
pop
imul
fwait
repz
and
pop
add
ret
push
daa
ljmp
pop
mov
mov
sub
pop
xlat
adc
test
js
pushl
dec
mov
and
movsb
push
mov
cmp
xchg
jb
pusha
inc
push
loope
fcom
int3
inc
or
roll
test
pop
push
inc
loope
les
xorb
jne
xor
leave
rcrl
cld
cwtl
xchg
jmp
dec
push
push
sub
xor
cmp
cmp
xor
mov
cs
push
inc
push
aaa
sbb
dec
scas
or
xor
xor
or
pop
xor
add
xchg
xor
daa
fnstcw
popf
movsl
and
sar
xchg
push
cmc
push
cmpsl
pop
jmp
mov
cmc
add
gs
cmp
add
bound
mov
notl
add
stos
and
lock
jl
inc
or
xchg
mov
cmp
and
mov
loope
aaa
test
stos
add
andl
cmp
outsb
adc
mov
les
mov
push
push
inc
sbb
sbb
ret
xorl
dec
insb
cmp
pop
mov
mov
addl
arpl
pusha
gs
sbb
lds
dec
in
mov
adc
push
clc
cli
mov
or
test
sbb
xor
inc
ret
sti
into
adc
sub
sub
lcall
push
dec
or
mov
dec
lea
outsl
push
mov
enter
cli
popa
pop
add
and
cltd
mov
add
pop
nop
mov
jae
fmuls
cmp
jmp
dec
push
inc
rcr
mov
inc
adc
jnp
scas
push
cmp
subl
push
js
xor
gs
xor
cld
xchg
jo
mov
xchg
inc
insl
sbb
pop
ret
popa
lds
pushf
iret
in
cmp
push
cmp
push
mov
sub
add
sbb
dec
inc
xchg
arpl
out
mov
sbb
hlt
incl
pcmpeqb
jg
push
or
aam
and
dec
insb
xchg
and
push
jae
ret
push
push
shll
pop
xor
pop
lret
inc
and
cs
rcrb
cmp
repnz
adcl
loope
rolb
push
arpl
mov
mov
pop
sbb
push
push
adc
jle
pop
les
jmp
ss
loop
sbb
fdivrs
push
xor
push
push
dec
sub
jp
les
pop
dec
add
rcll
push
outsb
notb
jmp
jl
push
mov
int
or
addr16
jo
movb
push
enter
leave
xchg
incl
push
flds
test
or
mov
add
jg
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lea
clc
xchg
movsb
cwtl
pop
sub
mov
rclb
fabs
sub
jno
rclb
ja
aam
aas
mov
mov
inc
nop
adc
and
adc
jecxz,pt
mov
or
lock
es
adc
movsl
mov
fistps
jo
stc
gs
ret
inc
dec
inc
lods
adc
rcrb
mov
dec
jmp
push
shlb
dec
add
or
mov
iret
cmp
mov
mov
loopne
mov
dec
jmp
loopne
add
sbb
ret
add
mov
inc
je
clc
pop
mov
adc
ret
add
add
xor
scas
cmp
icebp
or
fnstsw
rorl
cld
adc
mov
addl
adc
xor
inc
imul
sbb
mov
xchg
and
jns
sbb
jbe
xor
add
and
add
push
jg
adc
add
mov
push
xchg
lock
dec
xor
mov
repnz
in
je
push
jmp
hlt
sub
and
clc
jmp
test
fsubs
adcb
movsb
sub
addb
aam
push
add
add
mov
adc
sub
add
add
adc
inc
test
xchg
rclb
dec
or
mov
sub
sar
data16
loopne
push
movl
dec
clc
insb
jmp
push
mov
lock
push
inc
js
in
or
lds
mov
xorb
cld
arpl
imul
push
or
pop
fidivrl
inc
push
ja
mov
jo
fsubrp
sub
xchg
das
ljmp
adc
je
jb,pn
xchg
jge
cmp
mov
loopne
movsb
cmp
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
sub
pop
roll
xlat
cwtl
in
pop
xchg
xchg
pop
add
mov
insl
inc
mov
mov
or
repnz
or
push
dec
test
jg
adc
sti
xchg
add
lock
js
xor
subl
xchg
add
icebp
cmp
push
pop
mov
mov
xchg
out
call
out
xor
inc
push
in
push
ss
ret
mov
call
jecxz
push
push
cmp
loopne
repnz
sub
push
or
adc
or
dec
stos
jmp
xorb
sahf
addb
adc
lret
cli
mov
jne
and
imul
add
pop
repnz
outsb
test
sbb
in
sub
mov
pop
sub
call
inc
loopne
pop
cmp
cmp
xchg
mov
xor
push
and
mov
rcll
mov
adc
jg
mov
sbb
jae
or
pushw
imul
sbb
bound
loope
jp
ja
fdivrl
xor
push
add
cmc
cmpl
mov
add
pushl
mov
sti
ss
sbb
add
insb
add
in
and
jmp
jae,pn
mov
sub
in
sahf
mov
sub
mov
ret
and
xor
or
nop
frstor
adc
and
and
inc
sbb
or
inc
adc
mov
repnz
std
pushw
sbb
sarl
and
jb
jp
loop
xchg
push
sbb
test
mov
sbb
mov
dec
cmp
xchg
xchg
repnz
dec
inc
sub
mov
insb
jns
jl
xor
sub
or
add
lret
loopne
mov
aas
push
rcl
je
push
sub
add
sbb
xor
pop
mov
jle
jle
fs
loop
and
loop
in
dec
bound
add
sub
xor
fsubr
add
int3
lret
add
fs
pop
jl
lea
shrb
aaa
and
orb
xchg
call
fstl
je
mov
iret
test
xchg
or
adc
jmp
nop
sub
movsb
jno
sbbl
int3
xchg
push
push
hlt
pop
or
les
cmp
fs
mov
cs
mov
repz
loope
adc
aaa
outsl
sub
add
inc
push
movsb
push
push
in
aaa
and
jmp
and
ss
pop
leave
cmpl
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
inc
cld
push
mov
jle
cmp
jg
push
dec
rolb
or
add
sub
jecxz
xchg
daa
mov
mov
add
aam
xchg
cmpsb
jmp
and
loopne
inc
lock
outsb
fcoms
fmuls
rcl
jnp
adc
stos
ds
cmpl
hlt
xor
cmp
movsl
and
movsb
push
aad
pop
adc
out
mov
fisttpl
or
sub
push
cmp
mov
nop
scas
in
mov
pop
cmp
adc
or
enter
aam
imul
call
mov
or
fidivrl
ja
aaa
mov
lcall
loope
xchg
add
dec
ret
je
push
es
fwait
jo
in
js
scas
sbbb
pop
jbe
in
je
rcrb
insb
pop
mov
add
add
push
popa
mov
jae
add
ss
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
push
rcrl
dec
dec
sbb
push
ss
xchg
xor
xchg
repnz
sar
in
icebp
mov
and
adc
adc
lock
cmp
leave
cs
cmp
decl
pop
dec
jne
push
jmp
ds
jno
push
or
sbb
and
xor
or
cmp
mov
mov
into
faddl
sarl
or
push
sub
scas
cmp
mov
aaa
les
push
inc
push
mov
test
fildl
arpl
mov
add
or
add
je
or
pop
dec
cli
mov
loopew
inc
outsb
add
jl
and
mov
es
sub
roll
add
xchg
lahf
push
jo
fisubrl
add
mov
push
cli
push
jb
daa
pop
js
and
cld
mov
inc
or
cmpsl
clc
push
lea
cmp
jl
imul
insl
pop
inc
mov
enter
add
std
hlt
push
cmpb
sub
add
and
sbb
pusha
int3
popa
lods
jne
add
in
les
sbb
mov
add
shrb
push
mov
cwtl
xor
jle
es
push
insb
jl
enter
pop
or
ret
xor
pop
and
xchg
mov
adc
or
call
or
push
ror
cmp
sbb
test
xchg
mov
pushf
push
pusha
stc
xor
add
pusha
fisttpl
and
add
rcll
push
and
pop
dec
sbb
adc
sbb
mov
mov
sahf
dec
add
mov
xchg
ret
or
xor
inc
orb
jne
je
pop
icebp
je
pop
push
ja
cmp
inc
movl
test
jg
add
nop
xchg
add
jbe
clc
pusha
outsl
clc
test
test
loopne
rorb
xchg
inc
mov
outsl
or
pop
mov
cmp
jg
cmp
sbbl
cltd
jle
out
nop
sub
lods
loopne
pop
fiaddl
and
mov
and
push
fdivrl
or
rol
add
dec
jg
sbb
orl
stos
ljmp
rorl
popf
mov
imul
dec
loopne
and
mov
dec
cmp
pop
lods
jo
jb
or
loopne
test
push
imulb
gs
pushf
and
mov
and
js
cmp
sub
push
jno
and
jns
imul
push
inc
bound
rolb
gs
adc
push
push
push
js
rolb
pop
sti
xor
dec
test
insb
and
js
dec
push
xor
xchg
fidivrl
dec
cli
ret
or
mov
adc
lods
add
sbb
lret
sbb
cmp
jb
testb
xchg
arpl
add
testb
cmp
mov
ret
jge
pusha
daa
movsb
mov
lea
and
jb
adc
cmp
jns
ret
cmc
pop
xor
cmp
jbe
clc
push
push
or
scas
in
push
push
add
mov
in
rcl
jmp
das
xor
mov
xor
cmp
add
add
push
sub
and
dec
xor
inc
inc
mov
fcoms
fcmovu
shlb
mov
pop
es
jmp
push
cltd
js
xor
push
cmpb
cli
inc
pop
pop
lea
mov
fs
xchg
sub
int3
rcrb
mov
mov
mov
addl
and
mov
popl
mov
hlt
out
cli
xorb
mov
sbb
ja
cmp
mov
jne
daa
inc
push
push
fildll
add
add
jl
push
popl
xor
dec
adc
inc
jb
sbb
in
dec
std
and
cltd
push
mov
inc
ljmp
out
out
pop
fisubrl
jo
add
push
push
sbb
sub
aas
cmp
add
push
pop
or
aam
mov
lods
fcoms
pop
ret
aaa
adc
pop
xor
jl
aas
je
pop
and
fld
fsts
ss
enter
insb
inc
jp
push
or
adc
outsb
cli
cmp
jmp
cwtl
mov
xor
aaa
fnop
insb
imul
pop
rcr
sub
das
in
adc
enter
adc
ret
out
inc
lods
mov
sbb
adc
push
or
and
nop
mov
or
or
jge
xor
or
and
in
sarl
xor
sbb
dec
aas
dec
enter
xchg
add
cs
inc
push
mov
add
sbb
jno
add
fcom
sahf
or
in
adc
loope
shlb
jb
and
fisttpl
es
int
or
sbb
outsb
adc
pop
jo
pop
aaa
cmpsl
add
xor
cmpsl
add
leave
dec
jnp
mov
lock
push
cltd
fmuls
jne
inc
es
bound
jo
inc
fisubl
pop
cld
jns
inc
nop
pushf
push
cmpsb
or
sub
inc
pushf
adc
and
ret
arpl
push
cmp
mov
add
inc
es
dec
pop
cld
cmp
nop
xchg
aad
sub
ret
push
lock
outsl
out
xor
add
xor
orb
fdivr
push
rorl
out
fs
mov
push
mov
xor
sbb
dec
rol
mov
pop
int
adc
add
fadds
lcall
mov
and
jle
pop
dec
add
dec
lahf
fadds
jns
xchg
dec
in
inc
cmpsl
loopne
and
and
pusha
pusha
dec
movsb
fisubl
mov
adc
add
orb
ret
sarb
sbb
adc
sub
test
ficompl
push
fisttpl
lock
inc
hlt
orb
stc
lods
fcmovnu
stc
jle
mov
in
adc
repnz
add
adc
fadd
nop
test
pop
or
adc
aad
enter
or
fsubl
push
fwait
inc
in
pop
cmpl
adc
orl
ret
mov
dec
push
movsb
jmp
in
leave
int
xchg
pop
loopne
mov
cmpb
add
fcoml
imul
ret
jne
mov
jge
fsubr
outsl
push
jb
es
movsb
fidivs
and
fs
loopne
pop
pop
aam
mov
aam
and
ficoms
pop
sbb
adc
cmc
movl
jl
repnz
add
push
jno
pusha
xor
and
fs
dec
jo
js
or
jl
mov
sbb
call
sbb
insl
jecxz
add
push
and
xchg
mov
adc
push
test
mov
gs
xor
mov
mov
in
sti
gs
shlb
adc
mov
imul
add
sbb
cmpsb
imul
sti
lock
arpl
inc
js
push
les
ret
sbb
push
jne
adc
scas
insb
adc
sti
push
jo
popf
loopne
stos
mov
mov
add
lods
ret
cmp
stc
mov
xor
ret
lock
test
xor
and
push
arpl
dec
hlt
mov
lods
sbb
add
mov
cmp
popf
ficompl
shll
adc
add
add
cmpl
jno
in
call
repnz
in
pop
push
pop
rorb
or
jl
or
and
xchg
inc
mov
push
fadd
jae
loopne
dec
pop
fimull
outsb
lock
xchg
adc
pop
and
ret
mov
in
or
pushf
or
adc
je
jmp
pop
mov
mov
inc
fimuls
shl
push
std
mov
out
push
add
enter
dec
leave
pop
and
sbb
lock
arpl
aam
pop
scas
push
pop
loope
pop
xor
out
loopne
mov
xchg
jo
repnz
insl
push
add
ljmp
jo
aam
inc
test
cmpl
mov
in
aam
and
pop
xor
out
sub
and
dec
mov
jb
pop
in
adc
or
pop
push
arpl
mov
je
add
cmp
mov
insb
cwtl
jmp
in
lock
push
ret
sbb
push
test
je
es
pop
dec
in
jl
xor
or
sbb
push
xchg
rcrl
jno
imul
or
add
and
ljmp
sbb
mov
aaa
xchg
ljmp
sbbl
add
aas
adc
xchg
in
movsb
adc
mov
push
mov
pop
add
popa
outsl
insb
or
sti
jle
xchg
dec
repnz
dec
pusha
bound
in
push
icebp
rorb
insb
aad
inc
roll
in
shlb
test
mov
or
sbb
hlt
fs
or
sbb
pop
cmpsb
push
cmp
sub
cmp
and
out
jg
leave
xor
push
ret
sub
pop
out
mov
leave
or
test
test
rcll
lock
pop
addb
lahf
cmp
adc
dec
out
call
setns
std
lea
sbb
mov
nop
popa
inc
dec
jmp
popa
rcll
popa
push
cwtl
jg
add
adc
int3
jg
and
jns
lock
or
xor
outsl
les
pusha
lock
and
mov
nop
or
loopne
loopne
mov
in
in
lock
jbe
fstpl
icebp
lahf
or
adc
adcb
icebp
sub
in
xchg
adc
cmpl
pop
adc
push
lea
mov
jmp
pusha
pop
icebp
dec
lds
in
cmp
push
xor
call
inc
add
or
lea
xlat
or
xlat
push
leave
pop
aaa
sbb
xlat
sub
test
pop
aaa
nop
sbb
sbb
mov
mov
ret
inc
mov
mov
in
clc
fmull
dec
dec
lock
or
or
repnz
sub
and
xchg
movsb
sti
and
loopne
sbb
popa
add
mov
stos
push
mov
popf
imul
sbb
fcmovne
repz
sub
repnz
dec
dec
loopne
in
hlt
lea
imul
mov
adc
cmp
lock
cltd
xor
sti
es
and
xor
mov
aam
mov
imul
or
or
in
dec
or
or
nop
dec
or
or
mov
cmp
sub
in
push
gs
push
rcr
adc
mov
enter
jns
pop
mov
testb
sub
or
lods
in
or
push
test
divl
add
add
push
xchg
dec
addr16
ret
subb
xchg
dec
adc
or
xchg
jo
dec
call
rcrb
inc
sub
cltd
in
push
iret
dec
adc
mov
jl
lea
icebp
mov
fnsave
test
lahf
xchg
inc
mov
fcompl
cmpsl
adc
imul
out
pop
mov
pop
test
gs
pop
and
inc
or
hlt
sti
fadd
add
ljmp
mov
xor
or
push
or
push
add
scas
or
or
test
aas
test
push
imul
rclb
add
ss
paddb
cmpsl
mov
push
into
pop
mov
sbb
aas
add
ret
rorl
mov
and
pcmpeqb
cmpsb
adc
aam
lock
popa
stos
mov
jnp
xsave
arpl
and
mov
add
comiss
pop
mov
add
test
call
fsub
fneni(8087
mov
fs
adc
mov
imul
mov
mov
mov
push
std
fcoms
xlat
test
inc
or
add
and
or
ljmp
pop
jno
inc
xchg
out
loopne
mov
aad
roll
inc
mov
jecxz
jno
or
popf
mov
inc
xchg
pop
movsb
jno
inc
adc
sbb
nop
imul
sbb
int3
sub
insb
and
les
fisttpl
adc
xchg
jl
ja
fldt
xchg
adc
aad
leave
clc
jmp
inc
xor
xor
arpl
repnz
jge
cmp
mov
in
jp
xchg
popa
test
inc
imul
mov
fistl
pop
dec
mov
add
andl
pop
pop
fwait
or
test
or
lods
in
add
fcoms
inc
fbstp
fcoms
divl
mov
arpl
adc
inc
lea
in
jl
or
in
add
or
push
fs
push
or
or
dec
add
dec
or
lods
movsb
adc
test
xor
or
dec
push
jl
sbb
cltd
ror
loopne
jnp
sbb
add
sbb
xchg
pop
fs
xchg
mov
pop
dec
and
daa
pop
sub
jb
shr
jb
in
aam
add
sub
jl
andb
cmpl
xchg
stc
addb
sbbl
or
movsl
and
jne
test
cltd
jns
pop
push
scas
and
lea
repnz
sbb
lds
sbb
call
pop
mov
add
in
mov
insl
lahf
dec
aaa
adc
mov
inc
aam
mov
mov
fcom
pop
jo
popf
add
xchg
scas
test
jb
nop
mov
dec
inc
jne
rclb
pop
add
pop
mov
imul
int3
add
jb
mov
xchg
add
insb
mov
sbb
xlat
lea
sbb
sbb
mov
jge
pop
xlat
roll
movsl
sbb
xor
jo
sbb
fcomp
loopne
test
movsb
lret
xorl
adc
fcom
xchg
rolb
sub
mov
or
xor
in
movsl
push
push
inc
fiaddl
jno
or
mov
inc
call
ret
jb
insl
pop
mov
mov
aas
aam
test
push
or
mov
repnz
inc
cmp
inc
insl
fs
fadds
cmc
es
push
call
cmc
scas
fs
mov
shl
or
cmpsb
sbb
out
mov
data16
cwtl
out
fucomi
pop
push
xor
mov
mov
data16
in
xchg
sub
pushf
mov
js
or
add
loopne
ja
sbb
cmp
xchg
pop
sub
mov
add
push
insb
sub
or
pop
add
sbb
pop
lock
xchg
and
test
sti
push
mov
nop
xor
jo
mov
adc
arpl
and
fimull
and
adc
jns
sub
push
ret
arpl
push
and
lock
push
cmp
sbb
call
loopne
in
sub
pusha
cltd
dec
jle
fcompl
ret
ja
lahf
enter
cmpsl
fstpl
inc
xchg
popa
pop
lock
int3
outsb
popa
mov
adc
pop
mov
scas
xor
leave
pushf
cmp
sub
les
jb
sti
sub
mov
es
vpaddsb
loopne
enter
dec
push
mov
lcall
lock
mov
adc
adc
push
jl
mov
imul
inc
mov
mov
arpl
das
dec
adc
or
lock
addl
cmpsl
mov
je
daa
sbb
jo
popf
xchg
roll
xchg
enter
pushf
aaa
cmpb
mov
sbbl
dec
xchg
lea
and
out
or
adc
and
or
pop
add
push
pop
test
rolb
sbb
push
xchg
cmpl
xchg
or
pop
into
insb
mov
dec
leave
mov
mov
adc
filds
dec
in
or
lcall
ret
je
in
mov
and
sub
pop
test
pop
lock
add
es
test
xor
or
insb
adc
or
inc
mov
fcmovnb
xor
cmp
cmp
int3
jae
inc
push
stc
xchg
movsl
or
andb
cmp
lds
mov
or
dec
inc
shrb
jbe
dec
add
jg
out
sbb
test
std
mov
adc
daa
inc
inc
fcoms
lods
test
das
sub
pop
xor
jo
aas
xorb
lds
jmp
cmpsb
bound
mov
test
mov
push
fmull
jecxz
push
insl
sar
das
mov
dec
sbb
inc
fsubs
inc
xchg
mov
shll
enter
js
xor
dec
aad
sbb
inc
call
sbb
in
and
loopne
and
and
mov
shlb
jne
pop
cwtl
mov
leave
inc
xor
adcb
int3
fmuls
dec
mov
enter
inc
xor
call
sbb
shlb
adc
add
xor
add
shlb
pusha
pop
int3
gs
not
and
push
adcl
lea
lret
xchg
cs
mov
in
inc
pop
pop
xchg
rolb
or
sbb
or
add
add
aam
sbb
popa
test
push
xchg
add
and
push
call
dec
xor
mov
add
mov
int3
push
popa
adc
lcall
add
sbb
push
fsubrs
mov
nop
test
inc
sub
jge
adc
insl
cmpsb
mov
pop
sbb
cmpsb
push
dec
rolb
add
adc
pop
xor
dec
insl
addb
test
aam
sub
test
notl
jb
dec
mov
cmp
pop
dec
fcoms
jne
mov
cwtl
test
aam
cmp
xchg
mov
adc
adc
inc
leave
jo
aas
xor
iret
int3
pop
leave
in
in
les
mov
mov
and
dec
jae
mov
das
es
leave
loopne
cmp
mov
popf
jns
mov
and
ret
xchg
pusha
enter
test
nop
orb
mov
pop
xlat
lahf
mov
cwtl
inc
xchg
adc
mov
bound
push
pop
mov
and
jl
and
inc
inc
add
aaa
call
out
sub
adc
inc
frstor
add
add
popf
enter
int3
in
push
popa
pop
rorb
xchg
adcb
mov
and
dec
xor
ret
cltd
fidivrl
js
dec
cltd
and
je
pop
nop
fdivs
sbb
pop
inc
ficompl
in
sub
mov
xor
jg
test
sbb
clc
jge
dec
and
and
mov
or
nop
outsl
fmuls
lahf
ret
xor
std
ss
bound
mov
outsb
shlb
add
jmp
test
arpl
sbb
sub
leave
clc
add
movsb
pusha
sub
test
mov
lods
mov
movsl
inc
adc
mov
and
mov
fdivs
fcompl
dec
and
ljmp
imul
pop
test
and
es
push
fs
jno
mov
loope
dec
xchg
mov
mov
xchg
es
adc
sbb
nop
xchg
test
in
push
or
or
or
adc
adc
das
or
in
pop
daa
hlt
sub
shlb
test
dec
pop
xor
mov
mov
loopne
push
lods
test
xchg
dec
dec
mov
push
mov
xchg
movsl
jo
jo
and
xor
mov
fisttps
push
pop
pop
mov
fldenv
inc
call
loopne
movsl
nop
ja
test
imul
mov
mov
aas
or
pusha
scas
mov
xchg
add
pop
in
sbb
fs
aam
cltd
push
push
insl
je
xchg
imul
pusha
adc
fs
fs
cmp
sbb
cltd
fs
dec
inc
cmp
orb
sub
xor
adc
add
fdivr
pusha
adc
sti
rorl
pop
fldenv
test
jne
stos
ret
cmp
or
daa
adc
daa
int
or
mov
xchg
aam
pop
mov
adc
aam
hlt
ja
xor
sub
adc
popa
rolb
cltd
push
dec
loopne
adcl
mov
loope
loopne
fdivs
cmp
mov
dec
pushf
or
stos
adc
daa
pop
or
mov
xchg
int3
inc
sarl
mov
mov
mov
push
pop
xchg
jg
cmp
adc
aad
les
dec
mov
cs
pusha
cmp
mov
aad
xchg
jg
sbb
mov
imul
xor
jg
and
jg
movsb
jno
popa
pop
test
cmpl
pop
ror
and
pushf
je
enter
pop
sbb
and
sbb
and
shll
test
xchg
jbe
push
loope
xor
nop
stos
nop
cmp
xchg
sbb
inc
push
mov
sub
outsl
add
aam
dec
or
imul
pusha
lock
lods
scas
jne
cmpl
test
sar
iret
js
adc
jo
dec
test
mov
inc
cwtl
adcb
push
rorl
inc
cli
dec
sub
cmp
dec
and
mov
jg
pushf
inc
addb
adc
sub
lahf
push
push
and
push
mov
pop
adc
xor
xor
lea
fists
fisubl
add
ss
mov
push
xor
data16
lret
sbb
mov
lods
xchg
inc
movsl
xchg
mov
sub
push
leave
jo
out
push
pop
inc
pop
mov
pusha
pop
fcomps
fadds
loope
fdivr
or
xor
test
sub
mov
fdivs
sbb
imul
aaa
pop
push
mov
pop
jg
aam
inc
sbb
xorl
fbld
or
movsl
cld
pop
test
test
push
inc
cmp
fimull
mov
xchg
add
adc
aaa
mov
pop
inc
test
push
arpl
loopne
inc
in
mov
das
icebp
or
dec
mov
adcl
mov
sub
in
mov
xchg
sbb
inc
adc
cmp
imul
rorl
push
fcomps
addl
mov
pop
xchg
xor
sub
mov
or
cmp
pop
xor
movntps
or
mov
mov
adc
es
cwtl
mov
pushf
pushf
pushf
fcompl
mov
lods
lcall
out
roll
pop
bound
adc
fwait
punpckldq
stos
test
sub
mov
mov
add
loopne
adc
push
enter
xchg
dec
xchg
fchs
mov
push
lods
stos
jmp
jo
inc
or
and
loop
push
and
cmp
xchg
xor
push
push
out
loopne
aam
ss
sarl
jg
pop
mov
psubusb
or
dec
pop
lods
inc
mov
rclb
jg
lahf
mov
fistpll
add
xor
dec
pop
xchg
fcompl
lods
mov
or
leave
cmp
inc
int3
dec
les
mov
mov
add
pop
dec
and
jns
fdivrl
inc
lods
and
or
inc
lods
rolb
push
ss
inc
out
sbb
push
sub
jno
fsubl
call
arpl
xorl
dec
mov
loopne
in
das
lea
dec
sbb
pop
dec
or
adcb
sbbl
in
cwtl
mov
and
arpl
std
int3
adc
push
pushf
add
in
shlb
lods
adc
jae
mov
call
push
nop
inc
enter
or
stos
mov
push
in
xchg
push
sub
mov
pop
adc
jo
or
nop
push
sbb
pop
adc
xor
nop
subl
mov
mov
imul
or
inc
add
pop
nop
addb
jg
mov
add
add
mov
fst
sti
jecxz
stos
fiaddl
mov
negl
lods
ret
rolb
mov
sub
popa
rclb
daa
in
add
pop
ret
icebp
mov
add
mov
dec
mov
add
test
mov
adc
inc
es
es
ljmp
mov
or
xor
stos
mov
das
sbb
mov
cwtl
mov
mov
add
xor
popa
in
scas
lods
mulb
push
jae
rcl
or
push
cmp
test
and
scas
inc
and
xor
cmp
push
and
div
faddp
mov
pop
aam
mov
or
cmp
mov
repz
lret
sub
mov
dec
addb
add
adc
xchg
xchg
push
sub
adc
in
sub
enter
and
xchg
in
pop
fiaddl
mov
sub
fimull
fs
adc
inc
aas
enter
push
add
cwtl
dec
jg
add
mov
xor
roll
das
loope
loope
pop
adc
xor
sbb
movsb
fsubrl
addb
mov
rcrb
int3
fnclex
movb
aas
adcl
or
rcrl
adc
dec
inc
pop
les
mov
sbb
jecxz
add
xor
lcall
insl
pop
insl
adc
mov
pushl
ss
dec
mov
mov
das
fisubrl
jne
ss
pop
movsb
adc
es
nop
jb
es
mov
stc
xchg
rol
pop
inc
leave
mov
add
lods
jno
call
fmul
fmuls
movsb
sbb
test
insb
sti
sti
pop
adc
add
dec
push
rorb
je
sub
setns
xor
mov
xchg
pop
cmc
cmpl
or
cs
orb
das
pushf
add
nop
xchg
sbb
mov
jge
js
jne
loope
lret
mov
dec
lods
pop
pop
int3
mov
xor
jl
cltd
or
add
jo
sbb
imul
sahf
lock
dec
dec
and
dec
jbe
popa
inc
inc
out
push
les
scas
pushf
subl
leave
rcl
xchg
sbb
push
jb
stc
or
aas
inc
insl
sbbb
inc
xor
and
icebp
add
js
cmp
fsubrl
ret
mov
inc
inc
mov
lock
imul
hlt
push
add
cwtl
dec
insl
xchg
add
push
lcall
adc
cmp
scas
add
je
dec
scas
jbe
adc
pusha
jbe
pop
xchg
in
adc
sub
dec
fwait
pop
insl
aam
inc
dec
fwait
fs
push
sub
les
or
xchg
mov
pop
std
jne
inc
sub
mov
adc
cmpsl
das
int3
out
sti
adc
adc
adc
shlb
shl
dec
push
and
push
stos
test
xchg
subl
pop
ret
sbb
in
sub
mov
aam
cmpsl
cmp
mov
add
push
jno
nop
and
or
int3
inc
inc
fs
xchg
sbb
and
loopne
sbb
cmp
int3
sub
inc
or
in
outsl
cld
cmpsb
ljmp
clc
add
popf
das
mov
xlat
mov
rolb
add
or
adc
mov
add
adc
repnz
popa
add
sbb
stc
or
pop
movsl
push
sbb
andb
sub
mov
cmpsb
pusha
xchg
ret
enter
mov
or
mov
or
xchg
sbb
cmp
sbb
sub
scas
or
je,pt
dec
inc
mov
add
mov
or
sbb
sbb
push
pop
xchg
daa
mov
lods
adc
das
sti
nop
xor
hlt
xchg
fs
sbb
pop
jge
pop
sub
mov
unpcklps
setns
xchg
enter
nop
jbe
enter
nop
popa
xchg
adc
adc
xor
mov
pop
adc
enter
cmp
cmp
nop
sub
cmp
test
or
sbb
push
mov
inc
mov
mov
mov
adc
mov
dec
adc
sub
dec
mov
push
push
shrb
mov
push
mov
arpl
icebp
adc
and
movsb
inc
faddl
mov
aad
cld
mov
jg
test
in
subl
test
fimuls
insl
insl
pop
clc
mov
std
sub
lret
jnp
sbb
push
sub
mov
sbb
stos
inc
out
std
xchg
or
fstl
fldt
add
sbb
push
pushl
add
or
shrb
aad
scas
in
push
dec
popa
pop
adc
sbb
xchg
xor
inc
je
dec
dec
pop
mov
fs
shrb
movsb
inc
imul
cltd
pushf
xchg
add
jl
or
and
adc
or
inc
sub
scas
jne
iret
sbb
xchg
dec
xor
inc
and
mov
or
or
cli
ret
movsl
and
scas
pop
nop
test
mov
cmc
cltd
add
cltd
ss
mov
push
push
or
and
xchg
fisubl
sub
ret
cli
adc
fcoms
std
fwait
ret
inc
divb
fs
or
sbb
xchg
repz
cli
xor
adc
cmp
in
xchg
inc
insb
dec
nop
fdivr
inc
mov
mov
repnz
sbb
pusha
push
insl
xchg
imul
xor
and
shll
cltd
ss
and
ret
and
fcomi
ficoml
mov
test
data16
xor
jge
inc
lods
stos
movsl
dec
repnz
enter
and
imul
stos
dec
rclb
push
shrl
adc
dec
loopne
mov
xchg
or
int
adcb
imul
sbb
fidivl
xchg
pop
mov
cmp
xor
or
sbb
or
ret
inc
add
fisttpl
rolb
xchg
shr
and
dec
mov
lds
scas
enter
push
lods
adc
ljmp
lcall
popa
push
decb
jmp
push
and
fmull
ret
or
test
mov
xcrypt-cbc
cmpsl
xchg
dec
and
pop
push
and
imul
imul
subb
adcb
mov
popa
dec
hlt
mov
push
mov
nop
bound
mov
xor
jb
movsl
fnsave
jo
dec
push
fstps
imul
scas
and
and
sbb
ret
lcall
imul
xor
ds
jne
add
sti
dec
lods
push
clc
inc
pusha
out
imul
or
mov
add
add
in
mov
pusha
and
mov
and
in
sbb
push
jno
and
or
sub
inc
out
dec
adc
movq
push
cmpsb
adc
fildll
mov
nop
mov
inc
shlb
mov
inc
xchg
in
mov
enter
and
fsubrl
mov
inc
lods
fiaddl
sbb
arpl
dec
push
fdivs
adc
loopne
add
inc
clc
sbb
or
mov
and
cmp
stos
push
setl
push
push
xor
mov
pop
adc
pop
mov
sbb
add
mov
inc
add
iret
ret
add
and
iret
repz
xor
xorb
in
outsb
sbb
dec
data16
aaa
in
add
push
fcoml
cmpsb
ret
mov
lods
sbb
push
shll
sarb
popl
or
jnp
mov
add
pop
das
mov
outsl
jg
rcll
xchg
adc
or
cmp
rclb
cmpl
dec
test
add
nop
add
into
pop
adc
test
adc
jmp
or
out
mov
fcompl
out
lods
jo
inc
add
andb
push
lock
rdpmc
add
jnp
xchg
adc
add
pop
sub
andb
mov
and
push
bound
and
insb
outsl
arpl
mov
outsb
cmp
je
push
je
arpl
jne
jb
outsb
je
gs
dec
lock
das
ss
insl
adc
fbld
inc
outsl
jb
js
je
jb
std
in
fimuls
or
outsl
add
add
add
in
adc
jnp
push
jne
les
cs
mov
add
add
add
test
or
clc
es
fiadds
inc
xor
movl
dec
add
aas
push
pop
mov
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
orb
and
div
or
out
inc
inc
orb
sub
push
lcall
adc
jns
out
push
sbb
repz
repz
jmp
mov
mov
das
ljmp
repz
out
mov
fsub
js
jns
into
jae
pushf
jp
push
cld
cmp
out
dec
xor
push
pusha
dec
aaa
adc
addr16
jp
mov
sub
push
push
xchg
es
mov
out
jo
cmp
add
pop
mov
cmp
imul
mov
ds
mov
addl
push
fwait
cmp
mov
add
sbb
xor
faddl
sub
add
and
jbe
outsb
add
das
das
das
and
pop
mov
mull
dec
ljmp
jo
and
decb
cs
test
ret
dec
stc
lock
idivl
aas
dec
inc
ja
sbb
daa
mov
push
daa
outsl
cmp
popa
dec
and
addb
insl
sbb
imul
iret
jns
jmp
out
popl
mov
shlb
arpl
imul
imul
inc
jae
sti
andl
jne
mov
fbld
ds
mov
insl
pop
neg
iret
mov
sbb
lahf
jg
in
lea
cmp
cmp
add
dec
add
push
das
das
jns
mov
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
push
decl
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
shll
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
rclb
cltd
mov
adc
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
push
push
pop
hlt
and
repz
add
pusha
push
add
mov
mov
inc
add
or
xor
sbb
sub
addb
push
xchg
test
add
and
adcb
pop
daa
push
cmpb
sahf
jge
push
push
and
sub
jb
int3
push
add
mov
cs
stos
push
outsb
imul
aam
out
jo
add
pop
adc
xor
lock
rorb
add
leave
and
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
shlb
loop
mov
cmpsl
shr
in
mov
mov
pop
lods
aad
mov
mov
jp
pop
scas
add
sbb
shll
cmp
aam
mov
cmp
rdtsc
ss
jmp
inc
lods
in
inc
dec
inc
adc
notl
pusha
xchg
mov
mov
mov
rclb
dec
bound
je
outsb
data16
jbe
sti
xor
ss
out
je
xor
jnp
or
push
xchg
daa
pop
lea
fidivrl
mov
outsl
js
push
xchg
xchg
jl
push
and
insl
jo
jo
and
fcmovnbe
xchg
cmp
dec
xchg
shlb
aaa
insb
les
mov
imul
mov
lods
add
ds
cmp
dec
inc
jb
jns
ss
and
ss
jns
mov
insb
and
not
or
jne
addr16
cmp
outsb
jle
jbe
divb
fnsave
mov
jo
or
jb
and
fisubs
je
xchg
pusha
inc
jbe
push
in
add
push
push
lahf
fs
insl
add
lods
jp
pusha
adc
push
popl
fadds
mov
cmp
push
adc
rcll
pop
daa
mov
dec
adc
mov
adc
outsb
mov
pop
pop
pop
push
push
jae
or
mov
aas
cmp
call
push
hlt
clc
addr16
sbbl
xor
outsb
gs
mov
data16
cmp
bound
push
push
push
dec
testl
xor
push
push
in
lods
fisttps
push
ds
inc
or
sub
nop
xchg
push
imul
push
pusha
wbinvd
pusha
jg
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
andb
popa
sbb
push
insb
roll
push
pop
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
imul
or
ds
jns
imul
push
das
push
sub
js
sahf
jl
push
addr16
jle
imul
add
cmp
sub
pop
or
nop
ret
sbb
das
push
jb
pop
aaa
aaa
and
push
mov
xor
addr16
xchg
xchg
xor
pop
pop
jne
stos
addr16
push
jbe
pop
addr16
sbb
jo
ss
gs
inc
subl
imul
adc
sahf
sbb
dec
sbb
sahf
out
mov
out
pop
sub
popa
sub
push
jl
out
mov
xlat
incb
xor
sub
imul
std
lock
mov
jns
repz
rclb
out
jns
out
lods
test
cwtl
dec
xchg
push
sahf
out
mov
jns
sbbb
sbbb
xchg
repz
push
push
iret
repz
push
push
dec
dec
repz
repz
inc
cmp
xor
repz
xor
adc
add
cld
fmul
test
jl
out
push
sti
repz
rol
movsb
jl
push
iret
repz
dec
inc
xor
or
sahf
out
lcall
cmp
out
cmp
stc
int3
test
xchg
repz
xor
jg
push
add
popa
fidivrs
lock
jle
mov
test
add
and
lds
enter
cmp
test
add
jg
and
push
addb
pop
push
sbb
jbe
xchg
sub
addl
add
add
nop
imul
push
adc
add
adc
and
add
jnp
and
push
jnp
pop
fistps
mov
add
cmp
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
inc
mov
jb
xor
push
add
jno
push
sub
test
adc
outsb
gs
popa
data16
cmc
lods
je
pop
shrb
jns
push
xor
add
fisubl
fidivs
add
add
push
insb
sti
sub
arpl
inc
insb
fs
sbb
add
je
xor
mov
str
pushf
pushf
pcmpgtw
xor
push
inc
mov
dec
push
push
dec
and
xor
push
es
out
dec
inc
dec
cmovns
jne
das
push
adc
sub
adc
cmp
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
repnz
cmpl
lret
sbb
jb
jge
aas
xchg
jge
arpl
cmp
jg
repnz
jno
in
fstl
mov
and
jg
stc
cmp
dec
imul
lret
add
inc
mov
mov
and
incb
sub
fwait
ss
sbb
pop
pushl
out
vmwrite
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
decl
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
call
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
mov
out
fcoml
mov
or
insb
mov
out
leave
push
cld
aas
ljmp
orb
popa
push
or
scas
int
mov
incl
mov
sahf
xchg
dec
add
scas
lods
dec
dec
in
mov
xor
pop
mov
pop
pop
repnz
adc
xor
and
es
mov
flds
sbb
push
scas
pop
inc
outsb
jg
inc
mov
loopne
jo
daa
sbbl
jmp
add
popa
sbb
add
push
into
mov
adc
or
and
mov
dec
jns
inc
add
mov
out
xchg
pop
and
test
imul
outsb
addr16
fadds
jae
lret
xchg
push
mov
xlat
scas
cmpl
push
or
xchg
mov
arpl
bound
jne
sbb
pcmpeqw
lock
mov
jmp
test
xchg
fcmovnbe
sub
daa
je
pop
ret
jmp
insb
add
stos
test
lahf
je
or
add
jmp
xchg
lret
adc
and
addr16
cs
fcomi
inc
jb
add
xlat
adc
jg
loopne
sub
pop
xchg
dec
dec
dec
outsl
imul
add
xlat
insl
push
fimuls
push
pop
jno
or
cmpsl
mov
or
lock
jg
repz
jno
ret
fbstp
mov
insl
mov
ret
push
push
mov
sbb
push
mov
sub
daa
jnp
cmpsl
fldcw
ret
sbb
add
sub
jg
out
sti
or
or
jns
sbb
xlat
jg,pn
xor
jmp
cmpsl
ret
ret
inc
and
adc
jmp
rclb
mov
mov
cmpsl
call
push
sub
xchg
iret
mov
pop
cmp
pop
je
cmp
divl
cmp
mov
push
pop
add
loope
jecxz
mov
mov
insl
repz
xor
outsl
jmp
test
aas
ret
cmpsl
dec
ret
pop
dec
jp
add
mov
pop
mov
inc
cmp
lcall
mov
stc
fwait
ja
push
jbe
fcoms
pop
inc
addr16
out
leave
imul
inc
pop
addr16
je
push
dec
pop
repz
aas
arpl
mov
pop
arpl
das
push
jae
movsl
addr16
fcoms
mov
push
js
sahf
or
xchg
pop
jmp
js
lea
sti
aas
inc
dec
sbb
jae
stos
insl
pop
pop
pop
popl
push
je
mov
ss
push
sub
insb
and
iret
pop
push
sbb
notl
and
mov
add
jo
add
inc
loope
fiaddl
jle
icebp
jecxz
or
pop
jb
inc
mov
push
loop
mov
mov
insb
push
arpl
incl
adc
loope
fs
and
jno
push
sub
into
inc
test
or
dec
loop
mov
idivl
dec
lcall
adc
sti
lret
dec
aaa
inc
orl
pop
fimuls
pop
pushf
sbb
sub
push
push
loope
pop
rdpmc
sub
sub
xchg
push
loopw
mov
clc
mov
xor
mov
arpl
add
dec
mov
dec
testl
icebp
dec
pop
notb
inc
call
lds
cmp
dec
push
jne
movl
lahf
dec
adc
xor
subl
push
sub
outsb
add
cmp
out
and
outsb
out
pop
push
js
sub
lret
pop
neg
addl
push
jo
and
loopne
mov
jno
sub
addr16
mov
and
lods
js
scas
fwait
and
push
pop
mov
jecxz
jg
es
in
mov
ja
es
mov
jl
mov
shrb
push
inc
mov
out
jl
mov
arpl
dec
insb
lahf
push
ljmp
add
shll
imul
add
ss
mov
or
mov
dec
sbb
xchg
mov
ret
jge
iret
pop
inc
lsl
xor
pop
mov
inc
push
dec
sbb
pop
pop
cmpsl
xchg
adc
scas
lahf
inc
addl
bound
outsl
push
dec
or
add
incl
adcb
fiadds
mov
mov
mov
les
mov
fldl
pop
jl
imul
push
and
and
lods
mov
fisubs
bound
fsubp
out
push
das
mov
mov
adc
mov
jns
jae
bound
out
outsb
mov
out
push
out
or
pop
imul
sbb
or
sbb
js
mov
out
jns
insl
inc
mov
lods
cmpsl
push
negl
lock
repz
outsb
jo
jp
xor
jp
jl
dec
je
ja
imul
clc
data16
jl
jo
cmp
cmp
xor
mov
cmp
jl
pop
sub
das
fs
lock
lock
mov
imul
mov
es
xchg
jl
punpckldq
iret
lock
adc
sbb
addr16
nop
flds
xchg
and
push
js
dec
mov
mov
ja
pusha
mov
inc
push
pop
xchg
pusha
mov
mov
push
movb
pop
fmuls
inc
jl
add
jns
and
js
das
jae
push
fisttpl
dec
outsb
pop
aad
addb
cs
add
pop
fwait
pop
pusha
pop
sub
pop
stos
mov
pop
cmpsl
xor
scas
stos
jb
bound
data16
or
pusha
aaa
push
mov
arpl
dec
inc
add
aas
popa
inc
xchg
in
or
aaa
pop
popa
loope
es
aas
das
mov
mov
setbe
inc
push
add
xor
adc
inc
add
and
addr16
adc
loopne
movsl
mov
add
push
inc
add
hlt
xchg
lods
pop
inc
pop
imulb
test
loopne
mov
jno
jge
stc
into
lock
pusha
jae
cs
lock
fidivrs
push
ja
jns
jnp
jl
jle
jbe,pn
jnp
adc
adc
xchg
mov
fldt
mov
les
ja
imull
xchg
xchg
push
xchg
push
loopne
add
mov
inc
xchg
cmpsb
push
rclb
sahf
out
ja
push
add
and
push
push
pusha
jo
jg
push
mov
out
repz
lock
adc
xchg
push
sahf
xorb
fiadds
inc
scas
pop
aaa
dec
and
cli
rolb
mov
movsl
lcall
scas
ret
and
aaa
xor
mov
daa
popa
mov
mov
rcrb
jecxz
arpl
outsb
in
mov
pop
sub
addr16
jae
orb
jecxz
cmpsl
popa
sti
pop
jns
jmp
out
push
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
lds
mov
sarb
jns
lock
inc
push
loopne
jnp
lods
mov
shlb
mov
push
mov
out
ds
shl
mov
in
cmpb
sahf
jle
inc
xor
mov
outsb
inc
xor
out
and
mov
je
cmp
ret
push
into
mov
jo
jb
imul
lds
jae
cmp
ss
pop
fcmovnu
cmp
inc
xor
and
and
in
fsincos
arpl
imul
adc
addb
push
clc
inc
test
outsb
je
jbe
out
ss
cmp
imul
dec
outsw
sub
ja
in
lods
rcl
imul
fsubl
jno
mov
sbb
test
orl
push
mov
lret
mov
push
jae
sbb
inc
push
ja
push
lea
aas
js
lods
rolb
xchg
jnp
push
add
pop
addl
pop
addb
xlat
adc
pop
mov
stos
sbb
imul
imul
xchg
mov
mov
lock
push
pusha
push
pop
xor
outsb
jmp
or
outsb
ss
mov
inc
jg
jle
out
or
add
or
inc
inc
lods
xor
imull
mov
push
test
push
adc
and
repnz
and
and
adc
mov
adc
out
insb
add
inc
aaa
repz
sbb
dec
mov
aam
data16
dec
orb
or
dec
or
jno
inc
pop
ds
inc
movsl
push
outsl
mov
mov
inc
xlat
adc
dec
movsb
sub
subb
push
sahf
dec
mov
adc
pop
dec
dec
dec
adc
sub
je
stos
les
sub
rolb
dec
cmp
fimull
inc
mov
mov
push
add
mov
pop
and
xlat
call
push
and
dec
and
adcl
or
scas
cmp
xor
sbb
cmp
cs
gs
imul
jp
repnz
sub
arpl
add
mov
aaa
pop
bound
inc
arpl
call
outsl
in
aas
cmp
jb
fs
xchg
adc
pop
lret
out
scas
sub
cmpl
into
repz
ret
iret
cltd
or
xchg
clc
pop
call
je
xor
add
lods
adc
shrb
data16
xlat
sbb
and
sub
xor
inc
mov
push
mov
mov
mov
in
mov
popa
xchg
add
shrb
ret
sub
mov
int3
add
das
or
insb
ds
adc
pop
add
fwait
int
sbb
lret
str
aaa
add
inc
stc
das
scas
xor
pop
xchg
data16
adc
and
jle
lock
iret
pop
xchg
es
inc
daa
iret
fidivl
add
mov
jbe
testl
inc
lcall
or
test
dec
mov
pop
add
inc
mov
fidivrl
adcl
fwait
bound
pop
shlb
mov
iret
add
aaa
das
in
rclb
push
shrl
add
arpl
and
cmp
fdivl
or
sub
stos
fs
pop
test
jg
adc
jns
sub
rolb
shll
fwait
inc
movsb
data16
je
jns
inc
popf
push
and
push
aaa
fisubrl
movsb
scas
lahf
push
arpl
and
sahf
movsb
xor
sbb
adc
ss
imul
and
mov
dec
mov
adc
cmpb
inc
lods
iret
fwait
mov
sub
loope
dec
lods
mov
and
loope
add
cmpsl
push
cs
and
imul
push
es
pop
mov
adc
add
out
les
adc
mov
inc
shr
test
imul
push
inc
dec
or
pop
xlat
sub
mov
aaa
inc
pop
sbb
pop
xchg
mov
add
adc
xor
shrl
mov
test
mov
ja
lock
xchg
push
lret
cmp
push
jns
mov
pusha
movq
test
ret
dec
jecxz
loope
add
push
out
and
push
mov
xor
arpl
cwtl
and
cmp
dec
mov
and
or
stos
sarl
xchg
jg
outsb
xchg
scas
lret
fs
ficomps
pushf
ret
jp
test
and
dec
xor
jl
cmp
inc
repz
pop
adc
rclb
pop
ljmp
lods
or
dec
mov
jo
inc
scas
dec
or
mov
jno
pop
inc
andb
mov
push
add
mov
push
push
xchg
pusha
dec
jno
gs
orb
incl
or
icebp
notl
ret
pop
inc
cmp
shrl
call
imul
cli
rorb
xchg
push
push
lock
pop
movsb
aam
shlb
jb
inc
rolb
pop
jbe
fdivs
inc
imul
sbb
pop
cmc
add
pop
adc
or
daa
rclb
xor
pop
aaa
add
nop
xor
jmp
sbb
and
add
xor
addb
scas
shl
nop
lret
mov
movsl
add
pop
jno
push
and
sbb
dec
rcrl
dec
xchg
push
cmp
mov
adc
xlat
popa
xchg
insb
rclb
push
mov
lods
cs
cmp
lods
push
inc
pop
add
stos
mov
js
and
push
dec
mov
mov
push
mov
imul
arpl
mov
mov
sbb
dec
push
push
test
js
inc
or
aaa
scas
js
dec
sbb
pop
sub
inc
cmp
adc
inc
jnp
mov
inc
xor
lods
jge
sub
dec
jg
dec
arpl
inc
adc
mov
adc
lret
pusha
in
pop
inc
cs
test
sbb
loope
icebp
repnz
push
mov
subb
pop
minps
mov
shrl
jmp
insl
ja
inc
testb
push
add
push
mov
inc
insb
inc
loope
adc
call
ja
popl
jg
sbb
gs
jge
test
iret
outsl
iret
jp
push
cmc
jno
addr16
imul
pop
rcrl
mov
add
andl
outsl
and
pop
mov
pop
mov
push
mov
jmp
xlat
xchg
sub
loopne
test
lahf
out
ds
push
jo
shl
mov
negl
aaa
mov
inc
fcoms
cmp
fisttps
inc
nop
loop
jecxz
fisubs
cs
inc
in
xor
sahf
out
aaa
iret
mulb
jmp
adc
inc
aad
sub
sub
testl
bound
shlb
pop
xor
add
dec
popa
lds
cmpl
imul
xchg
les
pop
pop
outsl
ud0
cmpsb
pop
pop
jo
push
shll
jg
pop
pushf
dec
mov
inc
movsb
or
pop
adc
cmpl
packuswb
pop
test
cmove
jg
ret
inc
lret
int3
push
insb
pop
arpl
mov
push
pop
cmp
insl
mov
stos
fucomip
xlat
jae
cmp
cmpsb
ret
xor
or
das
mov
mov
and
scas
pop
fadds
inc
xchg
mov
cmpsl
out
pop
stos
incb
and
lods
jmp
push
mov
sub
mov
and
add
pop
mov
mov
xor
add
and
clc
fisubrs
push
data16
mov
adc
arpl
outsb
aam
stos
jg
iret
add
jnp
jge
pushf
aad
addr16
sub
loopne
push
and
fs
mov
lahf
outsb
sbb
adc
and
mov
and
mov
aaa
jp
mov
lock
bound
add
mov
movzwl
arpl
push
out
cmpl
pop
mov
sub
pop
outsl
lods
lock
sbb
xor
pop
test
push
stos
inc
jbe
mov
xlat
dec
cs
push
enter
xchg
push
leave
push
sub
stos
sub
push
leave
push
bnd
dec
pop
and
stos
in
dec
cld
cmpsl
xchg
pop
and
in
jb
mov
mov
adc
insb
sbb
xchg
push
enter
repnz
and
fsubl
mov
mov
pop
cmp
mov
xchg
inc
in
lahf
jb
dec
and
in
cld
sahf
lods
sub
push
leave
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
lcall
aam
test
push
jb
xor
cwtl
movsb
jno
test
cs
mov
push
insb
dec
mov
lahf
lds
inc
push
xor
add
pop
mov
bound
add
cs
lahf
push
ret
add
sbb
dec
push
insb
in
sbb
cmovnp
jb
inc
rolb
iret
dec
lcall
pop
dec
sub
pop
inc
xor
push
out
popa
pop
ficompl
xor
and
stos
addl
mov
aam
cs
dec
movsl
xchg
repz
sub
ss
inc
mov
push
testl
xorl
mov
push
test
scas
sbb
inc
add
mov
xlat
lahf
in
push
jo
out
mulb
das
scas
adc
lea
mov
dec
xchg
mov
push
scas
addr16
stos
data16
imul
mov
inc
inc
scas
inc
scas
sub
adc
jg
xchg
jp
lahf
xchg
pusha
adc
mov
aaa
ljmp
ret
push
add
push
out
das
rolb
rcll
popf
outsl
stos
push
in
nop
pusha
stos
ljmp
out
aaa
xchg
iret
mov
jp
aaa
outsl
movl
movl
das
push
push
cmpsb
lea
outsl
jecxz
jne
insb
and
lahf
pop
pop
aas
xchg
sbb
gs
inc
rolb
inc
pushl
ljmp
rcrb
pop
aaa
out
ljmp
xchg
sbb
scas
pop
outsb
mov
inc
ja
cmp
push
sbb
or
push
pop
nop
clc
jno
out
outsl
jbe
jecxz
cmpsb
filds
push
push
inc
scas
xor
dec
ficomps
jae
and
add
add
leave
fdivs
pop
mov
loopne
and
imul
in
push
xchg
or
lods
inc
in
or
add
movsl
add
add
add
ret
pop
inc
rorb
inc
popl
push
inc
aam
adc
jno
imul
emms
xor
inc
jne
addr16
je
fs
sbb
insl
gs
pusha
pop
jmp
mov
insl
je
push
bound
push
outsb
popa
inc
gs
dec
cld
and
push
jo
cmp
cmp
cmp
xlat
loop
shll
ljmp
addr16
les
sti
ss
add
popa
fwait
dec
bound
jae
imul
outsl
dec
js
xor
fists
dec
dec
ret
test
xchg
mov
scas
adc
mov
shll
pop
push
andb
stos
addl
out
shrb
pop
inc
outsb
cltd
dec
jl
out
fiaddl
into
test
or
iret
sarl
push
push
xor
jnp
cmpsl
mov
lods
outsb
pop
sbb
xor
int
imul
jnp
inc
pop
dec
sub
jl
dec
lods
leave
inc
out
add
add
sbb
out
rolb
insb
sub
sbb
outsl
lea
push
inc
ja
and
mov
cmp
inc
test
jae
push
and
packuswb
pop
push
loope
in
push
movswl
mov
popa
lods
mov
jg
jbe
outsb
and
fucomip
popf
jns
cmp
insl
pop
and
int
je
jne
dec
cmovno
mov
pusha
mov
or
cmpsl
cmp
adc
sub
sub
inc
or
mov
mov
ljmp
pop
pop
faddl
aas
je
rorb
mov
push
sbb
jne,pn
sbb
lahf
dec
mov
or
shl
insl
mov
jne
inc
xlat
xlat
ret
pop
push
sbb
push
xor
bound
stos
xlat
insb
mov
fsts
inc
jl
lock
xor
mov
outsb
sub
push
bound
in
scas
xor
push
cs
cmp
push
sbb
ret
imul
aaa
out
dec
inc
push
loop
push
fnsave
insl
xchg
jnp
insl
add
inc
xchg
cmp
jns
xor
jae
fs
mov
stos
push
je
xor
js
aam
jecxz
pop
out
shlb
pop
sub
mov
or
add
js
xor
inc
cmp
add
es
mov
out
mov
or
inc
push
repnz
neg
jb
ss
push
dec
mov
bound
xor
xor
sarl
xor
cs
lret
mov
outsb
jb
es
xor
sbb
adcb
sbbl
scas
xchg
fwait
inc
data16
xor
jnp
jo
sahf
lcall
mull
fisubs
fs
mov
add
adc
out
ret
rolb
push
xor
push
mov
mov
pop
js
inc
push
mov
imul
pop
pop
mov
fdivrl
dec
ss
outsb
pop
push
push
xor
lock
fs
inc
pop
dec
es
sbb
dec
das
add
and
sti
mov
pop
push
sysexit
mov
ret
sti
aas
dec
cs
sahf
push
outsl
ds
push
push
push
sub
mov
push
scas
push
insl
mov
inc
loop,pn
neg
ja
xor
push
jp,pt
jp
lock
push
repz
jl
lods
dec
jg
dec
das
xor
js
xchg
jp
pop
outsl
pop
xorl
outsl
dec
xor
orb
xchg
xor
outsl
nop
or
and
and
and
xchg
aam
xor
mov
jg
xor
clc
sub
aam
push
adc
mov
in
ss
xchg
lahf
push
adc
inc
test
jnp
daa
loope
dec
jle
sbb
adcb
xor
xor
add
aad
jne
dec
cmp
scas
arpl
mov
push
cli
pop
xchg
rclb
faddp
add
sbb
adc
stos
enter
mov
mov
mov
daa
bound
shll
imul
repz
inc
add
dec
pop
mov
add
sbb
push
mov
mov
sti
add
mov
bound
add
xchg
ds
dec
ljmp
or
pop
into
mov
inc
imul
add
inc
inc
or
ss
dec
outsb
mov
mov
les
add
xchg
pop
inc
lods
addr16
in
pusha
es
jmp
mov
sub
push
add
push
dec
inc
insb
outsl
popa
fs
outsl
inc
add
pushf
mov
mov
mov
xor
out
loope
push
adc
push
add
jbe
cmpsl
sbb
add
pop
iret
adc
dec
notl
jge
mov
repnz
ss
jb
sbb
js
dec
loopne
push
sub
jbe
sub
add
add
add
lcall
addr16
sbb
push
xor
mov
imulb
aam
mov
jno
pop
inc
por
data16
dec
mov
sub
mov
xchg
pop
iret
jnp
xlat
add
adc
js
iret
repz
push
insb
add
xor
das
pop
inc
insl
ja
cmp
cmp
jo
arpl
call
xor
pop
ja
push
jo
xor
xor
push
test
icebp
inc
filds
xor
xor
das
pop
fwait
pop
cwtl
or
fwait
xchg
dec
je
cmp
mov
mov
jmp
jle
mov
or
das
add
sub
sub
lds
adc
lahf
das
push
sub
dec
sub
rcrl
or
sub
aas
jmp
jg
scas
sub
cmpsl
sahf
xor
pop
or
inc
ret
addb
push
jbe
addr16
mov
xor
aad
rcll
and
adc
mov
or
das
add
mov
js
and
mov
ret
iret
popa
fldt
ss
repz
adc
popf
inc
add
int3
fs
lahf
lea
or
add
arpl
adc
or
jmp
jmp
add
cmp
daa
jns
mov
ja
rorl
push
es
insb
mov
outsb
dec
arpl
cmp
dec
pop
jae
lods
sub
aaa
jbe
arpl
jb
mov
mov
das
xchg
sbb
sub
mov
aaa
sub
fs
push
fs
clc
test
add
sub
pop
cmc
xorb
xlat
pop
rcl
jle
aas
mov
loopne
fimuls
inc
jmp
jo
mov
pop
ja
mov
mov
fbstp
les
dec
insl
xchg
out
sub
add
imul
movb
push
push
outsl
popf
divb
int
movsb
addb
nop
mov
adc
inc
or
add
fwait
cwtl
test
sarb
mov
mov
mov
push
and
mov
jg
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
iret
idiv
insl
ss
adc
cli
mov
sub
sub
jae
sbb
mov
sbb
mov
ds
pop
sbb
insb
incl
lods
sub
and
jle
jo
fsubs
fsubrs
xchg
pop
sbb
mov
pop
dec
xchg
add
dec
push
pop
pop
in
pusha
pop
add
pop
adc
adc
pop
push
and
inc
cmp
jmp
xlat
lea
jge
dec
sub
mov
push
insl
je
lods
xor
out
sbbb
inc
out
or
xchg
xor
scas
pop
jb
push
dec
inc
xor
and
in
jns
adc
add
dec
cmpsb
mov
in
leave
jae
fcoml
aam
les
pushf
cmp
iret
mov
movsb
dec
xchg
lock
cmp
test
inc
add
pusha
shrb
add
sbb
xor
test
inc
imul
dec
lods
inc
pop
dec
xchg
scas
inc
add
lods
xchg
inc
dec
ja
pop
scas
je
push
outsb
pop
fwait
xor
pop
or
pusha
stos
lods
mov
ficompl
mov
sub
dec
idivl
inc
adc
push
addr16
ds
sarb
jge
sbb
and
push
pop
imul
cmp
aaa
cltd
lods
prefetchnta
dec
incl
test
imul
cmp
cwtl
adc
bound
imul
dec
add
adc
test
add
pop
shlb
sub
add
mov
jae
sub
inc
imul
inc
andl
pop
dec
push
push
jmp
or
scas
neg
je
adc
dec
add
mov
push
dec
xlat
xor
outsb
pop
mov
inc
dec
loop
mov
test
aas
jp
add
incl
xchg
aam
push
sbb
push
dec
cmp
push
push
inc
or
lock
out
dec
sub
out
iret
pop
push
dec
pop
pop
dec
dec
in
test
outsb
repz
push
test
or
add
push
shll
scas
lcall
add
sbb
add
and
mov
fildll
mov
cli
dec
iret
push
popa
outsl
push
xor
lds
dec
inc
arpl
sub
cmpsb
add
jne,pn
repz
pop
push
js
sarl
add
negl
jnp
fimuls
inc
inc
decb
jl
fs
mov
xchg
ficomps
push
jl
leave
out
outsl
call
and
in
mov
pop
jle
pop
xchg
mov
pop
xor
js,pt
inc
push
push
add
outsb
test
mov
test
xchg
negb
pop
mov
sbb
loopne
sahf
addr16
call
cmp
pop
pop
mov
xchg
data16
dec
in
hlt
mov
mov
jae
je
pop
jno
sbb
insb
fbstp
cmpsb
xchg
mov
arpl
sub
push
iret
cmp
add
push
sti
cmpsl
stc
xor
and
and
pop
out
jns
push
outsl
scas
insb
pop
mov
pop
cmp
xor
sahf
aaa
mov
ss
dec
mov
cld
ja
scas
ret
movsb
ss
sahf
push
rclb
jae
mov
cmp
mov
insl
cmp
push
test
sarl
in
add
sbb
mul
jecxz
cmp
pop
mov
inc
neg
push
jle
repz
js,pn
aaa
fidivrl
push
cmpsl
jge
pop
fisttps
cmp
xor
jns
out
out
mov
xor
ficompl
es
stos
mov
push
mov
or
jae
ss
repnz
scas
inc
dec
mov
loop
jnp
push
adc
adc
cmp
daa
cmp
idivl
xchg
inc
jbe
ret
sub
shrl
sub
fwait
mov
lcall
dec
loopne
cli
mov
sub
sbb
pop
int3
sarl
sahf
mov
data16
sarl
in
xor
in
xor
outsl
cltd
lret
repz
xor
push
push
ja
sti
cmp
mov
mov
int
imul
inc
repz
repz
mov
iret
ljmp
xor
dec
xor
push
jecxz
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
data16
xlat
add
mov
and
push
mov
addl
mov
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
dec
mov
pop
pop
imul
test
inc
sti
cmp
lds
push
lock
xlat
loopne
xor
inc
repnz
iret
and
cmp
imul
aad
or
push
js
xor
xchg
mov
add
insl
gs
cmp
idivl
sbb
stos
xlat
ja
adc
shrd
mov
aam
outsb
imul
adc
dec
jo
and
addl
or
jb
popa
je
ret
rorb
fildl
push
test
outsl
dec
add
imul
sub
out
fucomp
out
pop
push
ficoml
cs
pushl
xchg
push
push
adc
daa
mov
sbb
cmpsl
push
adc
jae
inc
rcrb
jmp
rcrl
inc
inc
mov
add
movsl
push
and
out
push
xor
arpl
sbb
push
xlat
mov
cs
scas
addl
xchg
fwait
push
jo
aam
xchg
cmc
inc
pop
dec
mov
scas
add
dec
mov
mov
lods
movb
mov
outsl
dec
xchg
push
in
and
in
sbb
or
jmp
pop
sbb
adc
pop
and
push
or
lods
fistpl
fs
push
arpl
or
adc
pop
jmp
adc
outsb
daa
outsl
movsl
or
add
add
jne
inc
in
ret
mov
adcl
mov
dec
cmc
aas
popa
ljmp
xor
adc
and
mov
push
outsl
imul
jnp
push
jo
test
jmp
push
shlb
loope
xchg
nop
inc
xchg
rcrb
and
mov
pusha
push
and
xor
inc
loopne
scas
scas
inc
ljmp
add
sbb
add
inc
aas
add
mov
add
dec
cs
or
or
pop
mov
inc
iret
xor
or
sbbl
and
jle
das
bound
push
pop
push
inc
pop
addr16
fwait
inc
xchg
jo
inc
movsl
inc
daa
jae
adcl
es
xchg
movsb
jecxz
pop
adc
inc
popf
test
xchg
ja
insl
stos
pop
dec
cmpb
daa
jg
mov
cmp
mov
imul
sub
xchg
aas
add
andl
test
scas
fidivl
fcmovu
outsl
aaa
imul
add
xor
imul
gs
das
test
das
inc
and
sbbb
xor
push
fsubrs
pop
xchg
add
add
mov
mov
add
pop
dec
inc
cwtl
adc
dec
inc
ret
inc
pop
push
add
pusha
push
add
fisubs
add
arpl
adc
xorb
out
jbe
stos
add
subb
and
adc
ret
shll
pop
dec
repnz
jg
cmp
push
push
xor
mov
mov
daa
add
ret
ficoml
mov
push
aad
inc
inc
push
inc
pop
sbb
icebp
mov
or
inc
test
push
jp
mov
inc
mov
orb
xor
add
aaa
mov
dec
ret
adc
or
pop
das
mov
inc
pop
popf
mov
sbb
xchg
lock
dec
add
sub
jbe
cmpsl
push
out
mov
in
ret
pop
cmpsl
mov
or
add
inc
xchg
mov
pop
inc
xor
cmp
aaa
jns
scas
adc
aas
ja
xlat
enter
cmpsb
lret
stc
cmpsb
dec
das
adc
and
sbb
jbe
lahf
bound
popa
insl
jo
je
add
addr16
jo
jae
daa
pop
jno
xchg
jo
jne
xor
push
inc
addb
adc
repz
adc
jg
jns
je
jne
or
subl
scas
iret
inc
test
adc
pop
je
scas
mov
adc
sahf
out
jp
inc
mov
mov
pop
loop
stos
mov
pusha
je
adc
imul
sbb
dec
outsb
push
test
pop
add
add
inc
test
mov
mov
aam
mov
testl
pop
stos
add
push
fbld
push
cmp
xor
and
outsb
add
push
pop
adc
dec
test
pop
push
push
sahf
push
loopne
cmp
xor
jmp
orb
pop
xor
and
pop
inc
cmpsl
pop
push
cmp
mov
rcrl
and
test
addr16
inc
push
dec
xchg
push
aam
jns
jb
loopne
pop
dec
iret
in
sub
ret
sbb
sub
adc
out
inc
rcr
testb
or
aaa
inc
insb
sbb
pop
daa
inc
and
pop
test
add
inc
lcall
jb
out
dec
lock
push
adc
scas
pop
and
mov
inc
dec
push
xchg
add
mov
inc
sub
push
jg
ret
or
jle
add
cmp
xchg
pushf
add
sbb
sbb
add
repz
insb
mov
jmp
andl
js
pop
mov
aaa
icebp
ja
xor
das
ds
das
add
sbb
aad
dec
repz
add
pop
daa
daa
daa
push
and
int3
push
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
es
js
insb
cwtl
pop
sbb
fstpl
push
and
mov
add
into
les
add
arpl
jge
shll
mov
ds
push
popw
jo
sbbl
dec
aaa
jmp
cmp
sbb
inc
add
in
xchg
push
and
pusha
roll
lahf
push
dec
loopne
mov
mov
push
out
fiadds
int3
mov
call
xor
pushf
or
jnp
sbb
jl
xchg
out
iret
cmc
loopne
add
lret
pop
inc
lahf
push
imulb
jnp
pop
or
xor
push
mov
cwtl
shl
lds
or
xchg
push
jne
les
clc
push
hlt
xchg
in
out
pusha
inc
mov
cs
mov
test
jno
ja
outsl
cmpsl
mov
jecxz
daa
call
mov
push
into
frstpm(287
imull
sub
inc
fimuls
movsb
sarl
push
aas
clc
push
sub
sub
mov
push
pop
call
inc
outsl
arpl
popa
clc
fstpt
adc
je
and
and
arpl
push
cmp
ficoml
je
mov
or
jns
xor
xchg
ret
pop
and
popa
stos
and
xchg
shlb
dec
cs
jno
add
and
xor
and
push
jle
lods
push
js
mov
inc
dec
inc
mov
int3
int3
out
and
push
fsubrs
pusha
push
pusha
insl
outsl
fs
lods
pop
in
jle
insl
jo
jns
iret
inc
mov
add
outsl
insl
mov
out
das
jmp
int3
loop
pop
fiadds
les
lret
xchg
addr16
cmp
and
pop
inc
je
bound
aaa
mov
scas
jbe
clc
xchg
imul
inc
cmpsb
aaa
sub
in
mov
outsl
jo
lods
mov
sahf
dec
sub
and
mov
ret
orb
inc
or
inc
pslld
out
out
shrl
cmc
inc
cmovo
jnp
jae
adc
cmpb
aas
nop
jo
inc
jbe
insl
maxps
loopne
and
scas
sti
dec
test
push
pop
mov
inc
pop
dec
adc
add
mov
das
sbb
in
popl
imul
pop
cmp
inc
aas
add
cmp
push
addr16
mov
xor
add
push
neg
inc
push
push
push
insb
das
inc
add
outsl
pop
iret
mov
lods
cwtl
lahf
add
jae
int
daa
mov
enter
outsb
leave
in
daa
outsl
fnstcw
sub
lods
xchg
push
je
mov
mov
mov
in
push
and
dec
int3
sahf
mov
scas
fisttps
inc
je
ficoml
add
mov
leave
jnp
mov
push
jle
push
jmp
pop
int3
mov
ret
or
jg
mov
mov
outsl
add
fstl
pop
add
and
in
negl
sub
or
iret
inc
rcr
lahf
call
inc
cs
movl
filds
inc
xchg
xchg
rep
sub
push
jo
mov
pop
jb
jo
mov
int3
fcoms
rorb
xor
sbb
pusha
insl
addr16
hlt
push
xchg
jb
jnp
pusha
push
insb
push
mov
mov
outsl
jmp
nop
or
and
mov
mov
in
inc
ds
cmp
rclb
ficomps
cmp
mov
aaa
pop
pop
push
outsb
dec
pop
ja
repnz
enter
jl
imul
pop
lods
aas
test
or
outsl
xchg
inc
in
mov
lock
xchg
mov
cs
dec
dec
xchg
cmp
inc
daa
loopne
cmp
lods
sub
xchg
jmp
mov
mov
or
iret
test
mov
dec
cs
lahf
fsub
and
pop
or
pop
mov
fwait
sbb
and
pop
addr16
jl
imul
in
jl
aaa
and
xchg
lods
push
roll
mov
daa
fldl
clc
pop
cwtl
and
enter
call
adc
xor
bound
nop
fisttpl
push
outsb
insl
js
scas
mov
pusha
mov
shr
fucom
enter
jae
cli
pop
mov
cwtl
pop
or
sbb
dec
lods
nop
dec
add
clc
rorb
pop
repnz
pop
push
pop
ja
hlt
cwtl
inc
cs
test
hlt
and
or
mov
in
clc
or
test
cmp
dec
push
pop
lahf
push
test
fidivl
jl
add
test
pop
repnz
enter
call
clc
test
push
loop
and
sub
ja
push
dec
fwait
out
push
mov
jg
cld
jns
or
mov
or
jl
movsb
fld
cmpsb
shl
hlt
scas
cltd
pusha
outsl
lods
movsl
cmpsl
push
cmpsl
shlb
and
xor
push
enter
push
inc
cmpsb
cmpsl
push
cs
jg
js
mov
in
pushf
call
mov
and
cmpsl
movsb
stc
pop
enter
and
xor
inc
push
xor
mov
jg
adc
test
mov
cmpsl
je
out
sahf
cmp
fsubr
js
enter
cmp
mov
sbb
sub
inc
mov
testb
stos
cmpsl
push
mov
nop
jo
subb
sahf
nop
sahf
dec
add
inc
mov
cs
mov
or
adc
cltd
fdivs
lahf
lahf
call
fistps
cmp
nop
orb
out
sahf
or
shl
mov
mov
jne
push
stos
mov
xorps
in
lods
lods
jg
cwtl
push
ss
mov
mov
test
in
cs
or
cld
xchg
insb
jp
or
data16
push
cmpsl
cld
xor
or
push
mov
orb
jg
pop
leave
xlat
lods
cmp
sahf
les
dec
add
lahf
xchg
hlt
mov
mov
xchg
inc
hlt
cmpsl
ds
mov
insb
mov
aas
cmpsl
jg
or
cmpsl
or
pushf
lods
shlb
push
cmpsl
pushf
js
iret
test
add
ds
dec
cmpsl
sub
dec
inc
mov
fwait
push
sahf
mov
push
ja
mov
enter
movsb
mov
ds
push
ja
loopne
mov
hlt
or
loopne
in
pop
inc
sub
inc
movsb
lahf
fsubrs
jbe
filds
cmp
lods
movsb
sub
adc
push
inc
enter
jg
push
pop
in
lahf
push
nop
fcoml
mov
push
push
movsl
mov
inc
lods
sub
daa
and
frstor
lahf
mov
fidivl
loopne
cmp
icebp
mov
loopne
or
mov
nop
cmpsb
xor
lahf
dec
ds
fisubrl
inc
ja
xor
cmpsb
push
cwtl
cmpsb
pushl
jmp
pusha
inc
enter
in
loopne
inc
enter
test
sub
cmp
imul
mov
and
mov
subb
inc
sahf
pop
inc
lock
ret
iret
lock
imul
and
or
xor
pusha
test
pop
mov
test
loopne
inc
jg
push
mov
les
add
mov
sbb
test
iret
pop
pop
adc
inc
jg
aad
mov
fcompl
addr16
rcr
ja
lock
test
int3
test
outsl
push
decl
xor
inc
dec
pop
sub
or
dec
sahf
add
dec
stos
add
insb
push
or
mov
lahf
jl
or
inc
sahf
lods
mov
nop
pushf
test
cld
pop
enter
stos
test
es
and
cmp
dec
mov
negb
pop
lahf
aam
or
mov
sahf
mov
lods
dec
lahf
or
in
xor
or
inc
sahf
in
cld
xor
cmc
mov
lods
imull
lods
xchg
inc
imul
mov
dec
mov
xchg
mov
je
mov
or
nop
xchg
out
fsubrs
enter
adc
fimuls
and
movsb
das
enter
pop
pop
outsl
xchg
call
mov
mov
aas
pushf
decl
movsl
orl
lds
idivl
int
loopne
aam
shrb
scas
sub
cmp
flds
outsb
xchg
and
push
mov
aas
daa
addr16
rcrb
rolb
push
je
scas
push
das
add
mov
dec
adc
insb
sub
xlat
mov
jl
jbe
daa
loopne
scas
aaa
mov
push
sub
push
movsb
seto
cmc
push
fsubrl
rcl
push
dec
xchg
scas
ja
inc
fstp
add
outsl
repnz
mov
outsl
dec
clc
insl
leave
mov
scas
or
aad
sbbl
ret
xchg
push
stos
pop
mov
lcall
sbb
or
addr16
shlb
xor
out
stos
mov
dec
pop
scas
fs
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
and
cs
jnp
orl
mov
insb
push
repz
mov
jns
dec
and
mov
out
jns
dec
aam
mov
shlb
xor
mov
push
push
mov
ds
repz
mov
mov
les
push
mov
mov
cmpsl
sarl
inc
and
enter
lea
addl
pop
xor
insb
mov
dec
inc
add
repnz
rol
add
cmp
add
imul
mov
or
scas
in
mov
jg
out
mov
xchg
fmuls
sbb
push
jb
inc
mov
roll
ja
jbe
rorb
mov
pop
leave
adc
popa
xchg
dec
adc
scas
fs
pop
mov
inc
push
lods
nop
adc
add
inc
loopne
ret
xchg
cmp
lock
cld
mov
add
insb
and
mov
inc
jg
pop
lcall
outsl
dec
xchg
jbe
call
mov
sub
dec
sahf
lods
add
mov
mov
addr16
xchg
pop
scas
or
insl
mov
outsl
out
jo
push
xor
fbstp
in
mov
cmpsb
aaa
movsb
mov
inc
and
call
push
sub
xchg
in
mov
add
push
sbb
outsl
out
dec
xchg
pushl
and
repnz
mov
push
insb
mov
outsl
add
xchg
or
fildll
mov
rolb
sub
dec
jns
push
cmp
add
jns
sub
add
jnp
xlat
adc
and
mov
pop
or
adc
ss
push
add
add
pop
and
ja
add
bound
in
mov
or
fs
fidivl
sbb
sub
dec
xchg
popa
xor
and
push
sub
and
lea
mov
push
xchg
in
sbb
mov
add
scas
cmpsl
ret
daa
sub
sbb
mov
bsf
adc
add
lret
scas
outsl
movsb
popa
fistpl
mov
pushl
leave
mov
es
test
mov
mov
pop
lcall
sub
fsubrp
int
cmp
mov
push
mov
inc
loop
scas
xchg
inc
mov
pop
dec
fisubrl
sbb
mov
add
dec
xchg
loope
jbe
aam
push
fwait
nop
mov
cmp
daa
nop
scas
adc
outsb
pop
push
push
outsl
jg
or
mov
xchg
ljmp
imul
mov
rolb
cmp
aam
adc
pop
inc
sub
sahf
out
xchg
enter
loope
mov
or
shll
sub
sbb
push
xlat
or
decl
push
mov
in
negb
or
lahf
push
sbb
dec
loopne
fs
xchg
mov
sarb
or
mov
dec
testl
and
mov
xchg
cmp
or
jg
add
mov
xchg
aam
and
mov
pusha
mov
imul
push
mov
mov
insb
mov
dec
jo
dec
mov
cmpb
mov
jmp
les
in
add
sarb
popa
pushf
ficoml
ja
mov
add
addr16
mov
je
rorb
mov
xchg
cwtl
inc
outsb
dec
sub
push
mov
cld
push
rol
mov
leave
mov
add
or
or
stos
aaa
pop
mov
jno
pop
pop
shll
mov
sub
pusha
ret
aaa
add
inc
nop
xchg
add
mov
hlt
popa
and
add
mov
or
pusha
shlb
sahf
iret
mov
mov
daa
mov
jl
daa
or
add
aaa
and
mov
add
repz
daa
push
push
mov
push
and
in
ret
mov
jl
or
test
inc
js
ljmp
mov
or
cmpsl
pop
xor
aas
or
daa
in
inc
ret
push
ret
sub
movsb
push
ret
outsl
add
dec
pop
or
fbld
shlb
add
dec
cmpsb
or
sbb
sbb
les
push
push
cwtl
les
scas
sbb
push
xor
mov
and
add
dec
xchg
adc
lahf
addr16
mov
nop
xorl
in
out
daa
or
sub
dec
add
mov
dec
add
mov
pushf
daa
sbb
aas
addr16
mov
daa
xchg
loopne
mov
inc
xor
hlt
lds
gs
test
dec
divl
mov
inc
xchg
pusha
loopne
call
xor
lahf
mov
je
mov
mov
nop
lahf
mov
loopne
pop
and
enter
loopne
es
lods
xor
inc
push
push
lahf
mov
inc
lods
ja
out
jne
iret
enter
nop
push
pushf
push
in
sbb
enter
xlat
mov
fmull
out
push
sbb
addr16
outsb
add
frndint
out
push
lock
add
aaa
loopne
out
lcall
stos
iret
repz
jecxz
dec
aaa
jb
mov
in
dec
sub
repz
add
pop
jae
lcall
sub
repz
out
xchg
lret
lock
stc
cmp
dec
mov
push
push
cmp
out
sahf
imul
cmp
rorl
pop
push
out
sahf
ja
push
pushf
cmp
out
mov
push
negl
lcall
push
out
add
push
mov
in
and
jns
jns
loope
pop
es
stos
repz
out
in
pop
and
out
cmp
push
pop
int
jns
push
mov
sahf
out
add
pusha
mov
jl
pop
arpl
int
jns
loope
popa
popa
test
iret
repz
aas
fidivrs
out
cmpsl
xlat
or
push
fs
out
lods
idivb
fs
jns
cmpsl
stc
push
cmp
imul
ret
jmp
xor
out
pushl
push
lcall
ror
xor
call
fucom
jns
imul
ss
xchg
out
out
fistps
insl
ss
aam
outsb
or
outsl
dec
je
and
push
lcall
push
jno
xor
out
push
fiadds
jb
jns
iret
repz
js
ds
rolb
sub
pop
repz
out
fcoml
jl
iret
cmpsb
xorl
jns
iret
loop
jns
mov
iret
repz
add
mov
repnz
idivb
jnp
icebp
jl
test
jl
cmpsl
stc
push
movd
sbb
cmp
rcll
ret
lock
andb
imul
sahf
out
xor
fmuls
cmpl
cmp
repz
adc
out
stc
sbb
mov
stc
imul
mov
imul
mov
mov
in
cmp
dec
repz
out
push
mov
out
lcall
shl
repz
push
mov
out
sub
pop
subb
cmpsl
stc
cmp
and
lea
xchg
imul
xchg
sub
ds
xchg
jo
xchg
mov
lcall
push
lods
repz
out
sbb
jl
out
fwait
push
test
pushf
push
fidivrs
iret
jnp
popf
sbbb
es
js
jns
jns
adc
mov
retw
cmp
xor
cmc
inc
mov
jns
jns
push
xchg
fldenv
movsb
incb
cwtl
imul
movsl
imul
dec
repz
out
sbb
jns
iret
cld
xor
sti
cmp
sub
or
push
rclb
ss
out
pushf
mov
mov
in
shrl
pop
stos
mov
jp
mov
ss
push
mov
out
cmp
repz
fistpll
jl
int
ja
mov
rcl
mov
shl
add
xchg
mov
out
int3
nop
pop
pop
jb
sbb
aam
fsts
and
andl
nop
mov
inc
testl
or
xlat
cmpsl
or
mov
subb
inc
pop
mov
das
push
sub
dec
and
adc
push
aas
jns
pop
xor
sarb
notb
arpl
jbe
jge
scas
mov
inc
jge
or
jg
sub
imul
pop
mov
inc
push
mov
mov
or
das
mov
daa
inc
leave
pop
pxor
rorl
inc
mov
fwait
push
enter
cmp
dec
in
fcomps
idivb
sarb
dec
sahf
lds
inc
xchg
inc
jg
jb
jnp
adc
in
pop
xor
sbb
xor
daa
or
sbb
movq
push
mov
push
add
fnstsw
je
test
dec
jo
xlat
aas
int3
mov
adc
aam
inc
push
adc
adc
xor
add
push
faddl
lahf
xchg
pushf
or
lahf
lahf
cmp
and
cmp
inc
rcll
push
adc
in
add
mov
pop
mov
cmp
jno
pop
push
inc
ss
push
jle
pop
pop
cmp
add
scas
adc
int
leave
inc
mov
dec
inc
pop
loopne
mov
jg
aam
mov
out
xor
or
in
push
jmp
test
into
xlat
push
aas
add
dec
inc
loopne
jns
mov
add
rclb
mov
cmp
and
jmp
inc
push
dec
dec
push
ja
mov
out
addr16
ja
push
mov
pop
xlat
aad
xchg
iret
lahf
pop
xor
insl
addr16
addr16
daa
pop
aaa
int
mov
leave
and
incb
dec
out
insb
pop
sub
daa
mov
push
dec
pop
daa
bound
and
fdivrl
and
leave
inc
mov
mov
rclb
je
jne
stos
filds
fstp
mov
pop
and
dec
push
in
mov
or
and
in
mov
popf
mov
xchg
orb
mov
leave
add
pop
leave
jae
add
addr16
and
xchg
pushf
orb
fadds
push
leave
and
fcoms
inc
sahf
jne
jmp
mov
cwtl
xchg
scas
mov
test
enter
ja
dec
xchg
dec
adc
jb
mov
lahf
stos
loopne
pop
aam
and
loopne
jo
outsl
mull
add
adc
movsb
adc
pop
ja
jo
mov
daa
push
push
lea
dec
sbbb
fsubs
outsl
sarb
inc
mov
xchg
pop
fsubp
inc
sub
sbb
xchg
mov
scas
cmp
add
xchg
dec
leave
outsb
xorb
cmp
inc
jge
enter
adc
and
adc
or
inc
nop
and
jns
fildl
mov
and
adc
inc
push
cs
dec
push
inc
movsb
jo
xlat
pop
ja
jnp
pop
xchg
add
add
ret
or
jmp
pop
jmp
fsubl
daa
inc
pop
xor
rorb
sti
pushf
push
fcoml
xor
mov
push
push
mov
pusha
xchg
fsubl
test
das
cmp
add
aas
inc
fstp
data16
addb
sbb
ljmp
cwtl
xchg
cmp
mov
incl
push
rorb
mov
jg
cltd
popf
dec
push
push
mov
dec
pop
ja
outsb
xchg
in
mov
mov
cmp
test
mov
cmpl
jb
in
hlt
cld
mov
push
enter
frstor
comiss
aaa
pop
aas
cmova
loope
fwait
cmpsl
dec
pop
push
mov
push
sbb
lock
fldl
add
fldl
pop
cwtl
push
mov
jns
jns
mov
push
or
jns
out
or
or
add
jno
or
jbe
push
daa
fstpl
iret
push
js
push
add
cmovs
push
add
pushf
add
push
cmp
xlat
outsb
mov
loopne
stos
or
and
test
jb
mov
in
enter
in
fdivr
sbb
hlt
inc
push
inc
incl
xchg
xchg
xchg
loope
and
das
adc
push
cmp
enter
push
push
push
pop
push
or
mov
push
jne
adcb
es
iret
or
clc
mov
pushf
mov
test
jl
daa
int
aaa
leave
pop
loop
push
daa
mov
adc
pop
xchg
and
sbbb
inc
fsubrl
in
pop
dec
leave
sub
adc
and
shll
jecxz
jbe
scas
and
mov
add
inc
into
icebp
in
in
push
lahf
clc
push
add
out
and
push
add
add
aaa
add
mov
jecxz
add
lahf
inc
out
pop
pop
xor
or
jecxz
lods
xchg
in
pusha
push
inc
mov
xchg
adcl
popf
rorb
push
jmp
and
add
mov
and
push
orl
pop
fs
pop
jb
add
in
repnz
cmpsb
pop
insl
scas
pop
hlt
nop
inc
fsub
in
iret
jmp
or
out
rclb
cmp
inc
pusha
out
out
out
push
jo
sbb
test
xchg
or
push
inc
aam
mov
pop
add
jbe
adc
fists
int3
imul
push
daa
pop
iret
daa
mov
shll
push
rcll
jg
push
add
das
push
pop
decl
pop
push
pop
pop
adc
fisttps
add
je
inc
call
push
daa
inc
neg
dec
sbb
jno
pop
test
cmp
mov
addr16
dec
dec
nop
jl
call
mov
or
das
xor
je
mov
add
and
dec
stc
or
jns
jmp
jmp
out
insl
nop
pop
mov
int3
scas
iret
mov
leave
mov
imul
adc
daa
xor
mov
ja
punpcklbw
insb
push
imul
insb
adcl
leave
xor
add
in
aaa
adc
jp
repnz
daa
pop
add
pop
addr16
cmp
mov
mov
push
punpcklbw
xchg
cli
inc
pop
inc
cmp
sbb
jmp
jo
test
mov
or
jns
fsubrl
mov
mov
pop
incl
das
xchg
dec
push
loopne
and
xlat
fstl
sub
pop
xor
add
cmp
jns
dec
xlat
cmp
sahf
out
add
pop
jns
cmp
das
or
dec
es
call
daa
push
pop
or
and
pop
pop
in
outsl
jbe
lds
cld
adc
pop
repz
nop
daa
mov
add
pop
call
enter
mov
mov
push
ds
pop
inc
pop
mov
pop
imul
inc
jl
or
sbb
mov
scas
cmp
jae
add
push
ss
das
out
das
maxps
pop
testb
call
inc
pusha
pop
out
subb
ds
addr16
rorl
jns
pop
mov
pushf
pop
and
lock
pop
fsubs
xchg
xchg
and
jl
leave
leave
add
lahf
jb
inc
jb
les
out
out
outsl
fimull
mov
mov
push
cs
dec
es
cmp
sahf
fwait
mov
push
test
iret
enter
xchg
pop
hlt
arpl
repnz
adc
repnz
sahf
pop
ja
mov
jg
add
pop
mov
fidivrs
inc
daa
cs
fs
add
pop
fs
dec
and
fistps
mov
or
inc
xlat
movsl
mov
dec
push
iret
jo
jo
mov
cmc
in
push
shrb
add
gs
test
mov
pushf
ja
or
enter
repz
cmp
test
push
hlt
inc
hlt
dec
lock
outsl
gs
inc
pop
insb
fmuls
addr16
push
addr16
dec
stos
mov
add
repz
cmp
enter
lock
gs
gs
shl
pop
mov
add
inc
pop
push
testl
aaa
insb
cmc
inc
dec
xchg
push
adc
sarl
cs
addr16
push
pushw
mov
insl
push
cmpsl
jp
scas
test
lock
add
push
push
popf
pop
stos
xchg
sbb
push
stos
data16
fdiv
call
leave
mov
data16
sbb
adc
push
pop
add
lea
fidivs
jo
mov
fisttpll
out
mov
pop
bound
cmpsb
daa
jo
jg
addr16
dec
test
fbstp
push
out
fsubl
push
or
pop
pop
sbb
popf
out
pop
mov
dec
xorps
jne
pop
popa
push
imul
push
jns
cmpsl
push
mov
or
addr16
or
shrl
addr16
push
sub
imul
ss
addr16
push
inc
pop
imul
push
mov
mov
dec
and
xor
pop
and
mov
push
mov
push
pop
xchg
xchg
ja
fimuls
rclb
sar
shll
mov
imul
pop
dec
push
add
sbb
xchg
add
in
fiaddl
mov
dec
outsb
out
ja
int3
push
cmp
mov
insb
pushl
pusha
addr16
xorl
movsb
and
push
loopne
xchg
fwait
xchg
mov
mov
insl
push
inc
or
mov
fistpll
ja
push
add
and
jp
insl
pop
insl
pop
xchg
xchg
adc
out
jns
pop
mov
mov
push
mov
cld
xchg
daa
daa
adc
cli
add
fsts
outsb
pop
sbb
xor
xchg
out
cmp
das
push
or
jbe
repz
mov
das
jae
or
repz
cmp
mov
xchg
lock
cmp
lahf
adc
sbb
shrb
dec
insb
mov
jb
inc
imul
xor
outsl
mov
fs
cmp
iret
add
test
push
push
icebp
fcompl
outsl
lods
lds
loopne
dec
daa
xchg
iret
or
incb
jo
es
decl
jo
jo
mov
movsl
dec
daa
dec
jo
iret
loopne
jb
outsl
push
in
jo
inc
mov
stos
xchg
add
push
adc
int
xorb
cli
repz
fcoml
inc
jl
inc
or
inc
sbb
aas
mov
fistl
cmp
fistps
scas
or
in
dec
dec
mov
add
test
push
jg
or
push
bnd
xchg
decl
mov
cmp
jno
ja
pop
jg
xchg
pop
insl
xchg
jno
ja
stos
into
leave
lods
cmp
mov
mov
sbb
cmpsl
push
in
pop
ret
inc
stc
aaa
cmp
push
mov
jb
push
pop
ja
cmpsl
push
pop
jno
add
cmp
subl
shlb
cltd
pop
mov
jb
rcr
xchg
pop
lods
cld
add
and
leave
sbb
add
ret
dec
ljmp
pop
xchg
push
jo
push
mov
add
jae
inc
repnz
inc
add
loopne
cltd
dec
fcomps
dec
je
out
ja
push
sbb
add
sbb
xor
mov
pop
jecxz
je
push
sahf
pop
mov
je
jb
jb
ret
rcr
in
mov
hlt
jbe
outsl
or
pop
jne
and
dec
sahf
xchg
jne
mov
leave
push
incl
mov
ja
mov
add
aaa
imul
iret
int
cmp
add
cmp
pop
and
decl
jbe
pop
add
jbe
cmp
inc
add
out
into
inc
sti
mov
push
outsl
add
xor
daa
iret
xchg
fistps
add
rcll
mov
leave
rcrl
add
jns
out
icebp
push
stc
cmp
jae
add
or
adc
cmp
jae
sbb
or
or
xor
cmp
cmp
jae
dec
push
adc
repz
adc
cltd
loopne
jno
ja
sbb
pushf
push
iret
ja
fldl
das
fbstp
das
mov
mov
push
sbb
js
push
addr16
cmpsl
loop
in
js
setg
sbb
imul
addr16
pop
xor
aaa
or
add
xchg
dec
xchg
push
jns
pop
mov
call
pushf
cmp
xchg
out
shld
xchg
fxch
xor
push
lock
jp
ds
pop
and
ljmp
fstl
popa
jbe
dec
pop
sub
jg
add
cmp
outsb
addr16
movq
dec
in
in
or
xchg
mov
xchg
imul
lahf
push
push
lods
dec
fimuls
dec
cmpsl
add
push
inc
pop
outsl
sahf
fadds
stos
pop
pop
or
popf
je
pop
pop
or
fmulp
jnp
testl
adc
dec
adc
dec
adc
lahf
es
and
xchg
sarb
push
leave
add
add
or
decl
add
scas
jo
cmpsl
in
call
scas
addb
and
or
mov
push
add
out
cmp
push
popf
add
xor
pushf
pop
enter
jno
lods
jbe
pop
jl
xchg
xchg
mov
imul
push
mov
js
pop
in
mov
jnp
rclb
in
in
add
decl
add
mov
repnz
clc
sbb
inc
mov
add
inc
jl
mov
add
jno
iret
sbb
mov
or
repz
fsubr
push
cmpsl
mov
rcll
or
out
paddb
sbb
jge
push
add
add
cmp
repz
repz
pop
data16
pop
iret
cltd
cmp
or
fwait
cmpsl
popa
sahf
xchg
jge
mov
push
add
jge
dec
aam
pop
fisubl
inc
enter
fcomip
fs
add
inc
daa
je
pushf
nop
pop
xor
pop
jle
xchg
jb
leave
xchg
int3
lods
fsubl
faddl
scas
push
push
rcrb
or
push
jmp
mov
into
dec
jb
push
adc
out
push
push
in
jbe
mov
repnz
in
addr16
mov
ret
inc
mov
mov
mov
add
enter
out
mov
jle
jle
outsl
in
jg
push
add
aaa
push
jo
nopl
mov
int
xchg
daa
mov
jo
jo
add
add
in
mov
lock
pop
jb
loopne
call
lea
and
outsl
cmp
pop
cs
out
cmpb
sbb
mov
adcb
cmp
out
or
jp
in
repnz
mov
cltd
in
mov
shl
and
clc
in
dec
and
add
jmp
in
outsl
push
iret
sbb
xorl
jmp
leave
and
cmpsl
pusha
gs
mov
in
js
movl
xchg
inc
int3
inc
adc
fists
adc
and
pop
shr
adc
daa
xor
call
inc
insb
rorl
xlat
xchg
jl
js
andb
adc
insl
getsec
dec
push
daa
addr16
cltd
mov
mov
es
sar
push
sbbb
fcmovne
repz
mov
cs
pop
mov
out
mov
add
pop
jl
decl
test
iret
cld
jp
xchg
orl
add
xorl
add
xchg
mov
aad
xchg
cmp
rolb
adc
mov
and
cmp
sbbl
leave
and
into
ja
test
test
pop
data16
das
cmp
jle
add
in
and
or
adc
mov
dec
push
ja
test
nop
iret
aaa
test
addr16
aas
test
ja
jns
push
out
push
add
xlat
lcall
push
mov
dec
mov
push
icebp
inc
cmp
aaa
adc
sbb
dec
outsb
push
lahf
cvttps2pi
cmpsl
push
in
and
mov
stos
cmc
in
addb
cs
pop
sbb
jno
aas
paddsw
fisttps
pop
xchg
sbb
xchg
pop
xchg
xchg
push
lea
adc
ja
push
addr16
out
cmp
pop
int
in
sahf
add
add
iret
repz
cmpsl
cs
out
or
cmp
in
or
femms
or
cmp
mov
and
movhps
js
cmp
adc
cmp
add
mov
mov
syscall
daa
daa
dec
add
cltd
mov
fldt
mov
sahf
or
ja
mov
out
push
add
xlat
es
cmp
xchg
dec
add
add
mov
cmp
push
add
lahf
mov
xchg
dec
sahf
out
push
pop
mov
jb
push
mov
mov
mov
loope
push
pop
adc
sbb
adc
into
repz
add
outsl
xor
fiaddl
gs
mov
cwtl
mov
mov
jns
leave
repz
hlt
leave
xor
decl
mov
or
cmp
mov
vmread
pcmpgtd
in
push
add
roll
xlat
or
das
mov
pop
decb
popl
mov
add
jae
add
mov
ja
cmovno
add
popa
fwait
call
cmpsl
cmovle
pop
sbb
jl
mov
lods
fisttpl
xchg
pop
stos
test
aaa
fmul
loop
ljmp
in
add
adc
dec
sbb
mov
fstpt
dec
pop
push
xlat
pop
xchg
mov
insl
xchg
iret
insb
xchg
subb
pushl
daa
daa
pop
mov
ret
xchg
in
jns
add
out
data16
in
testb
push
mov
and
arpl
jbe
jb
cmovno
xchg
in
in
mov
jb
and
test
xchg
daa
iret
jae
pushf
movsb
push
lods
or
xchg
cmp
iret
xlat
leave
imul
xor
xchg
fisttpl
bndldx
popl
jae
es
push
ja
pop
fildl
push
xlat
push
cmpsb
dec
outsl
pop
fwait
mov
call
int3
pop
aaa
pop
and
mov
push
mov
push
xchg
push
add
stos
outsb
repnz
push
sub
xor
push
or
push
jmp
outsb
pop
sbb
mov
mov
or
nop
incl
lock
clc
lldt
leave
adc
cmpsl
push
test
mov
pop
pushf
pushf
fsubrl
jnp
test
fwait
dec
pop
pushf
pop
fsubs
sarb
rorl
add
add
repnz
jmp
push
cmp
adc
aas
cmp
sbb
mov
dec
xchg
push
xchg
cs
mov
pop
xchg
movsb
xchg
sets
push
lock
fldt
outsb
mov
out
icebp
paddb
xchg
fists
nop
jns
xchg
sub
or
or
cmp
dec
or
arpl
out
cmp
adc
mov
into
adc
dec
int3
pop
jle
xchg
sbb
cltd
dec
xor
xchg
xchg
shl
and
mov
pop
sbb
push
xchg
cmp
fildll
mov
testb
pop
xchg
pop
or
out
mov
push
push
mov
fists
movd
punpckhbw
mov
test
add
mov
out
loope
push
add
repnz
xchg
fisubrs
call
sbb
mov
and
or
xor
call
adc
xchg
fistpll
pop
xchg
jns
out
push
add
addl
add
iret
xchg
test
es
in
xchg
testl
lsl
jecxz
sbb
xchg
aas
out
mov
pop
sar
add
pop
sbbb
imul
push
divps
leave
repz
pmullw
jns
scas
xchg
xchg
xchg
xchg
call
xor
daa
ret
mov
daa
in
in
testb
std
das
add
add
push
add
es
pop
adc
inc
cwtl
lcall
ljmp
addr16
pop
call
mov
push
jo
jb
pushf
movsb
pop
cmp
mov
adcl
xchg
sub
lea
aaa
jb
cwtl
pop
add
addl
add
dec
pop
ss
addr16
jp
add
dec
aad
mov
dec
xlat
pusha
mov
inc
sub
add
add
and
cmpsb
cltd
addr16
in
out
psubd
jnp
cmp
push
add
out
cmp
xor
or
jns
out
inc
or
pop
repz
cmp
or
repz
jns
cmp
repz
stos
adc
repz
cmp
pop
loope
in
sbb
xchg
outsl
stc
cmp
add
xchg
xchg
pop
push
adc
xchg
adc
adc
or
or
pop
sub
sub
and
push
add
sub
fidivl
mov
movsb
sub
lret
inc
jb
mov
jo
mov
push
fwait
push
testl
inc
pop
add
daa
imul
sub
or
repnz
repnz
hlt
fwait
add
fwait
add
push
mov
addl
sub
das
pushf
cs
mov
pop
addr16
les
jae
sub
inc
lock
clc
xchg
jg
out
pop
mov
cltd
lahf
test
pushf
inc
out
jns
or
enter
sbb
cs
loopne
xchg
int
adc
call
sub
decl
das
getsec
jns
fistpl
pusha
add
bswap
rep
add
push
pop
js
scas
fisubrl
mov
mov
xchg
out
cmpxchg
leave
in
jbe
das
rcr
push
or
clts
pop
add
push
dec
sahf
or
or
xorl
sahf
outsl
and
leave
out
pusha
cs
sahf
insb
mov
and
push
jecxz
mov
mov
in
pushl
xchg
xchg
loopne
lock
add
leave
testl
add
les
or
mov
and
lahf
ja
pop
push
repnz
dec
cmpsl
push
sbb
ror
inc
jo
orb
outsb
jb
lldt
roll
jo
mov
mov
ret
lret
push
add
leave
repz
fistpl
add
repz
push
or
or
iret
repz
xchg
mov
or
cmp
and
or
and
push
iret
adc
xor
jl
mov
pop
jo
xchg
mov
repz
outsb
xchg
sub
jmp
lods
push
add
push
adc
or
popl
sbb
push
daa
sbb
jmp
psubq
insl
in
mov
sbb
mov
and
sub
les
mov
adc
jbe
call
add
cs
push
daa
hlt
je
outsl
mov
cmpsl
fisubs
push
xchg
xchg
setns
mov
out
or
pop
leave
xor
fucomip
jmp
repnz
xchg
sbb
dec
jg
mov
inc
fidivrl
mov
sub
xchg
push
mov
fsubl
test
mov
pop
pushf
dec
call
wbinvd
xchg
mov
leave
xor
mov
xchg
mov
mov
or
mov
shlb
cmc
ret
add
movsb
das
jne
dec
fiadds
xchg
cmpl
inc
pop
incb
ljmp
lahf
or
xor
or
jg
lods
daa
mov
inc
inc
punpcklwd
mov
xchg
jmp
push
addl
das
mov
sbb
enter
dec
cs
enter
mov
notl
xchg
mov
adc
sbb
popf
cwtl
xchg
getsec
insl
mov
test
pop
pop
daa
aaa
outsl
ret
xadd
cmp
daa
daa
rcr
in
js
jb
in
idiv
or
iret
adc
aaa
ja
mov
cmpsb
ja
iret
pushf
pushf
pop
xor
arpl
pusha
mov
xchg
popf
fistl
out
mov
pop
into
scas
push
pop
mov
rcrl
mov
push
push
xlat
repz
sahf
outsb
invd
loop
push
or
add
lahf
mov
punpckhbw
inc
cmpsl
adcb
dec
add
cmpsl
jne
cmp
cmpsl
je
jl
add
xchg
add
lahf
sbb
cmpsl
mov
xcrypt-ofb
cmpsl
out
push
mov
push
in
aad
push
pop
cld
imul
pop
xlat
xor
add
outsb
xchg
cmp
xchg
sbb
mov
xlat
fisubl
sbb
xchg
push
cmp
scas
test
pop
ja
cmp
test
add
sbb
add
pop
jle
psubusb
test
adc
pop
mov
int3
pmulhw
inc
cmp
cwtl
push
mov
pop
decl
test
xchg
pushf
inc
mov
movsb
inc
push
test
dec
fsubrs
test
mov
rclb
fcoms
loopne
lock
add
sahf
aaa
mov
outsl
add
mov
das
and
add
add
add
cmp
repz
movaps
xor
adc
dec
out
fisttpl
dec
out
sahf
xchg
pop
pusha
sbb
xchg
out
sahf
jo
js
or
jns
mov
nop
cwtl
jle
mov
test
and
push
loope
stos
ja
xor
loopne
xor
fucompp
xchg
pop
out
xchg
stos
push
pop
movq
add
dec
aaa
jns
clts
imul
jns
or
pop
and
leave
mov
mov
and
mov
dec
mov
psubsb
stos
dec
lock
dec
jg
add
rorl
push
nop/reserved
js
sub
xor
pushf
xchg
out
or
push
fidivrs
out
pop
push
aas
pusha
punpckhbw
jo
adc
andb
repz
mov
nop
cwtl
pop
jb
insl
dec
movlps
mov
pop
test
mov
out
enter
rcl
dec
sahf
out
and
push
lock
sub
jnp
aaa
pop
mov
or
sub
sub
mov
cmp
sbb
iret
repz
xor
xor
xor
ja
cmp
dec
push
dec
xor
jns
pusha
aaa
push
in
js
orb
pop
cmp
cmpl
lods
out
movsl
inc
pop
stc
data16
js
jg
inc
inc
test
and
les
aas
push
daa
dec
mov
loopne
call
fwait
sub
sbb
scas
ja
scas
popfw
movsb
sbb
push
dec
scas
xchg
jo
ltr
leave
leave
orb
pop
inc
xchg
push
scas
imul
adc
les
inc
push
scas
xlat
std
daa
iret
jnp
pop
push
add
sgdtl
mov
scas
pop
push
cmp
xchg
iret
or
cmp
or
or
cmp
repz
test
lea
repz
repz
adc
cmp
adc
cmp
repz
fistl
jecxz
mov
sbb
imull
iret
mov
sbb
iret
repz
sbb
cmp
and
push
and
cmp
repz
and
jne
repz
and
mov
int3
jo
xchg
mov
mov
sub
xlat
fstl
pop
add
push
add
enter
add
add
stc
mov
cmp
in
mov
push
push
adc
dec
loope
iret
push
or
pop
mov
inc
mov
inc
mov
mov
mov
xchg
and
mov
mov
mov
cmp
test
mov
mov
cmp
enter
mov
mov
mov
inc
mov
mov
mov
push
push
and
cmp
sbb
sub
xchg
jns
xor
in
rorl
out
dec
mov
es
test
mov
mov
test
push
sbb
loope
outsl
push
scas
mov
mov
mov
mov
aas
rorb
or
sahf
xchg
xchg
fsub
call
out
sti
adc
mov
repnz
ljmp
adc
mov
inc
leave
leave
leave
inc
mov
mov
jns
leave
mov
mov
leave
leave
in
leave
psrlw
loope
leave
leave
leave
jmp
leave
jnp
or
adc
cs
daa
mov
fldt
rdmsr
cmp
inc
dec
daa
daa
daa
daa
push
pop
bound
cmp
daa
jb
sbb
sub
nop
fwait
pop
test
mov
lret
mov
test
xchg
jb
lock
add
out
mov
adc
or
es
mov
push
or
cmp
in
prefetch
inc
push
cmovp
iret
mov
push
adc
push
cmp
pop
inc
inc
pop
out
and
jg
push
add
jns
xchg
fildl
out
mov
inc
mov
repz
jnp
sahf
or
or
push
adc
jns
out
push
pop
or
sahf
ja
push
punpcklwd
adc
pushf
pushf
fmull
test
fmulp
cmpsb
mov
sbb
sbb
fstpl
xlat
xchg
out
repz
decb
mov
daa
iret
xor
adc
pop
pop
and
xor
and
dec
orps
in
in
insb
ja
icebp
in
in
cwtl
mov
stc
dec
dec
xor
dec
lock
lea
clc
mov
mov
addr16
adc
add
jns
xor
cmp
inc
mov
or
fmulp
repz
or
outsb
push
push
jbe
daa
iret
cmp
adc
jae
xchg
sahf
adc
scas
iret
jae
cmp
mov
sbb
daa
iret
repz
into
sbb
fimuls
out
push
sbb
sbb
jns
and
mov
iret
and
add
and
es
sub
xchg
lahf
das
pushf
pop
enter
xor
out
sbb
sbb
push
ucomiss
cmp
es
cmp
inc
iret
jmp
iret
cmp
cmp
cmpsl
fwait
cmp
cmovo
dec
and
jle
mov
dec
mov
stos
mov
in
dec
dec
jg
mov
fnstsw
or
insb
and
and
repnz
cmp
add
cmp
cmp
inc
push
mov
push
dec
outsb
daa
iret
or
jge
repz
repz
mov
adc
repz
adc
adc
out
repnz
mov
iret
repz
sbb
sbb
ss
cmp
sbb
pop
aaa
repnz
scas
outsl
mov
jns
and
seto
jp
into
stos
mov
hlt
pop
and
pop
rcrl
mull
js
mov
dec
mov
mov
pop
push
out
daa
push
add
sahf
push
and
das
cmp
mov
or
mov
outsb
pop
jno
jl
xchg
push
or
mov
sahf
fmull
mov
mov
repnz
iret
mov
push
sbb
daa
cmp
pop
and
xchg
fucomi
pop
punpckhbw
jne
and
lea
mov
pushf
fmull
shufps
mov
ljmp
lock
and
xchg
xchg
mov
dec
cmp
ja
jbe
iret
jmp
iret
add
add
xchg
mov
out
jne
pop
push
ret
into
in
dec
sahf
or
in
out
mov
cli
mov
dec
sbb
ja
push
adc
adc
fisttpll
pop
push
dec
sbb
xchg
out
pop
sbb
mov
pop
push
sbb
insl
fidivrl
mov
mov
and
cmp
jns
int
jecxz
xchg
out
out
sub
add
dec
aaa
jns
movntps
sbb
sub
cmp
add
pop
leave
repz
inc
push
xor
pop
ss
jns
addr16
xor
out
cmp
mov
cmp
cmp
test
jbe
mov
inc
loop
aas
lock
push
rcrl
dec
xchg
ret
vcvtsd2usi
out
add
add
jns
out
add
repz
movsl
push
or
mov
mov
mov
and
and
insl
test
adc
loop
ret
add
aaa
sysret
arpl
outsb
out
sahf
ja
push
or
sahf
or
or
repz
jmp
ret
adc
adc
popf
cmp
in
add
iret
jnp
push
sti
pop
push
ret
adc
out
sbb
sbb
sbb
jns
out
sbb
sbb
sahf
push
pop
push
jns
and
mov
xchg
ret
call
out
mov
rcrl
iret
ror
dec
mov
es
push
sub
add
mov
push
or
jnp
pushf
mov
pinsrw
sarl
adc
outsl
push
in
jns
push
xor
cmp
out
or
insl
and
js
or
or
leave
repz
setge
cmp
cmp
aam
repz
adc
divl
mov
add
pop
pextrw
pop
sbb
outsl
out
fisubrs
wrmsr
push
sbb
mov
and
cpuid
fimuls
je
scas
inc
push
scas
enter
mov
outsl
mov
mov
into
fld
mov
out
in
push
push
testl
leave
or
vmwrite
daa
dec
or
cmp
repz
sahf
out
adc
adc
jns
leave
fs
sahf
adc
jg
repnz
jae
pop
xchg
sbb
test
mov
mov
popf
cmp
fsubrl
out
and
leave
shl
and
scas
cmp
repz
sbb
repnz
inc
sub
repz
cmp
push
sub
sub
arpl
dec
xor
and
sahf
out
pop
roll
fsub
pop
cmp
pop
incl
ds
fmulp
testl
enter
sahf
xchg
out
ss
dec
push
cmp
aaa
jns
movups
repnz
rep
adc
subl
jae
adc
out
in
fistpl
adc
sbb
mov
sbb
sbb
iret
repz
call
int
in
or
call
add
iret
jnp
outsb
cvtpi2ps
cmp
repz
sub
popa
frndint
add
xor
mov
add
dec
mov
xchg
inc
int3
pop
mov
mov
pushf
out
pop
pop
enter
mov
xchg
add
xchg
sbb
out
lret
pop
enter
pop
lret
lret
repnz
jno
jl
shrl
iret
add
or
or
add
cmp
jns
mov
cs
insl
daa
iret
repz
ljmp
invd
push
cltd
lret
cvtps2pi
cmp
cmp
pop
gs
jns
out
or
jnp
xchg
in
sahf
out
and
out
mov
and
sahf
fcmovnbe
pmaxub
jmp
daa
iret
sub
or
unpckhps
fidivs
and
cs
popf
cmp
repz
test
push
xor
ss
in
fimuls
cmp
cmp
mov
iret
hlt
cmp
int3
or
daa
daa
outsl
notb
cmp
and
inc
sub
sahf
out
sahf
inc
inc
dec
inc
push
inc
mov
out
bound
js
cmp
cmp
mov
orl
out
cltd
push
dec
movsb
scas
psrlw
repz
fcoml
push
and
push
push
or
adc
xchg
or
push
into
pop
jo
popf
mov
dec
pusha
pop
lahf
into
inc
out
inc
aas
jno
scas
setns
movsb
push
push
scas
out
fisttpll
das
psrld
bound
xchg
fucomp
or
out
xchg
lcall
adc
leave
repz
adc
push
adc
jbe
jns
dec
das
pop
pcmpgtw
pop
fcmovne
repz
sbb
daa
daa
mov
pop
sahf
stos
mov
cmp
jbe
ror
xlat
push
and
leave
in
mov
rorb
inc
out
repnz
cs
rdtsc
rsqrtps
pop
sub
jae
leave
repz
jle
sub
leave
repz
xor
sarl
rolb
xor
sarl
push
and
das
lret
pop
in
in
psraw
idivl
xor
cmp
rcpps
test
inc
pusha
pop
mov
adc
mov
bswap
mov
add
rorl
add
xchg
push
or
pushf
lods
aas
mov
mov
das
setg
shll
out
out
pop
and
jnp
sahf
call
cs
daa
daa
pop
insb
jns
add
cmp
repnz
pop
xchg
inc
push
pop
adc
push
inc
adc
es
push
adc
or
add
push
adc
xchg
rcrb
adc
aaa
add
ficomps
inc
push
mov
pop
repnz
xchg
inc
adc
inc
scas
into
sub
xchg
pop
inc
outsb
dec
loope
add
pop
mov
mov
aaa
addr16
add
and
xchg
bound
mov
push
pop
testl
jbe
aaa
or
insb
mov
scas
adc
push
dec
outsb
daa
mov
das
and
mov
push
das
push
xorps
pop
imull
push
and
in
in
sbb
push
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
les
data16
add
fdivs
mov
mov
and
adc
lods
and
add
xchg
adcb
adc
add
decl
pop
pop
sbb
sub
push
test
adc
or
movsb
add
xchg
pushf
sbb
movsl
sbbl
subb
mov
cmp
inc
inc
jg
mov
iret
mov
in
call
sti
popf
jle
adc
push
ficompl
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
or
fwait
movsl
push
hlt
iret
repz
cmp
repz
fs
push
dec
repz
repz
xor
and
repz
sbb
or
add
cmpsl
stc
cmp
cld
repz
hlt
lock
out
call
pop
out
sahf
testl
mov
sahf
mov
dec
jl
add
dec
mov
in
sahf
out
xor
and
sahf
out
ds
cld
repnz
fadd
mov
sahf
out
mov
iret
repz
out
jo
pop
pusha
pop
push
cmp
repz
inc
xor
repz
icebp
mov
fmul
sub
cmp
mov
imull
mov
push
push
inc
orb
or
add
dec
hlt
pop
mov
push
jo
mov
xor
add
arpl
sub
nop
mov
mov
add
xlat
push
jbe
aam
xchg
sbb
mov
dec
push
ja
inc
test
or
mov
dec
push
push
dec
push
xorb
ss
icebp
call
push
mov
push
inc
jg
movsb
push
or
push
fcoms
inc
rolb
add
push
mov
jg
xor
adc
mov
addb
adc
add
pusha
in
mov
or
or
insb
sbbl
xchg
into
add
pop
fisubrl
xchg
push
or
enter
frstor
in
pop
sbb
rolb
rorb
ljmp
xchg
rcr
gs
notb
push
sbb
sub
cs
dec
or
cmp
imul
push
addr16
xor
clc
cmc
lock
fdivp
pop
in
cmc
ds
mov
adc
mov
mov
sahf
idivl
int3
or
adc
cmp
sbb
adc
adc
or
pop
jns
cmpsl
push
pop
push
and
and
out
sahf
out
in
and
or
ret
out
pop
imul
movups
xor
and
xchg
cld
addb
das
xchg
incl
and
pop
cmpsl
push
leave
jns
pop
pop
cmp
pop
js
jns
jns
mov
repz
xor
dec
cmp
fwait
imulb
cmp
xchg
jnp
iret
repz
bnd
das
push
inc
pusha
add
inc
ds
aas
pop
mov
cmp
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
ljmp
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sbb
sahf
xchg
pop
lcall
lcall
rclb
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
sub
ljmp
and
adc
int
negl
aas
jno
or
mov
pop
fs
dec
decl
cmc
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
jmp
add
aas
xor
aad
mov
std
std
into
popa
test
ja
ljmp
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
incl
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
incl
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
or
cmp
std
xlat
cmp
mov
sbb
mov
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
inc
push
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
aad
outsb
or
cld
lods
and
xor
lds
je
inc
pop
add
and
dec
inc
push
jge
std
mov
dec
inc
push
dec
inc
aaa
xor
jg
mov
push
mov
call
push
inc
dec
inc
jo
inc
popa
push
add
outsb
jbe
imul
mov
outsl
mov
aas
dec
insb
imul
dec
push
pop
sub
and
cmp
and
inc
je
add
aas
fmuls
inc
dec
push
pusha
testb
push
jo
jb
push
and
push
and
inc
inc
test
out
dec
inc
gs
gs
push
adc
or
inc
push
inc
inc
lea
mov
jge
cmp
jae
outsl
push
dec
pop
mov
push
xchg
xor
pop
sbb
sub
xlat
push
pusha
mov
pop
cmp
das
inc
orb
sub
pop
add
add
andl
inc
dec
daa
std
sti
jbe
daa
dec
jae
imul
xor
inc
testb
jg
inc
jns
dec
lahf
sbb
sub
les
push
jbe
insl
int
jmp
cs
movsb
cmc
jb
jns
jp
out
adcb
in
inc
mov
jb
jg
rolb
dec
bound
lods
mov
dec
jbe
dec
test
leave
mov
xchg
push
and
xor
mov
int
mov
dec
iret
dec
jg
and
dec
popa
jne
arpl
pop
push
dec
pop
adc
rolb
pop
xchg
cmpb
pop
mov
push
add
inc
inc
ret
inc
xchg
push
fnstenv
js
cli
dec
mov
jo
sub
push
or
addr16
add
push
idivl
ret
inc
int
notl
imul
mov
ret
popa
outsl
push
jb
addr16
mov
lds
das
push
xlat
mov
add
push
clc
jp
lock
push
dec
adc
gs
adc
jg
push
repnz
lods
outsl
stos
lods
ficoms
push
inc
arpl
push
adc
aad
cmpsl
pusha
popa
fimuls
mov
pop
sub
sbb
outsl
xchg
inc
mov
pop
pop
add
andb
jp
clc
sub
test
xchg
shll
outsl
outsl
ja
or
fs
shll
lret
sbb
imul
nop
fsubrs
andb
push
stc
lahf
aam
jl
sbb
cmpsl
mov
lret
dec
scas
push
push
add
dec
subb
pop
lahf
inc
push
mov
mov
and
push
dec
mov
sub
adc
pop
push
sub
aas
into
add
call
mov
adc
and
mov
test
fbld
dec
dec
xchg
push
mov
jae
les
push
mov
dec
insl
mov
imul
dec
push
pop
push
jne
les
sub
push
outsl
loopne
push
mov
mov
outsl
addr16
push
and
inc
iret
lock
pop
adc
dec
push
addr16
fwait
sub
mov
out
jg
add
push
xchg
repz
repz
inc
and
out
sahf
out
loopne
lods
xchg
insl
enter
inc
call
mov
add
iret
leave
repz
les
adc
mov
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
jmp
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
ljmp
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
or
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
cli
incl
mov
movsl
in
lahf
xor
mov
js
stc
jmp
test
xchg
sbb
push
sub
insb
fs
add
hlt
call
imul
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
in
fcomip
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
incl
or
xchg
shlb
add
inc
push
imul
xorb
ljmp
cli
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
incl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
dec
shlb
sbb
ret
es
pushf
mov
insl
add
and
cmpsb
pushl
push
jmp
addr16
jb
push
mov
dec
mov
jg
subb
jnp
sbb
xchg
or
out
fdivrl
fisttpl
call
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
jg
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
js
or
push
addl
mov
cmp
cmpsl
notl
jmp
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
sarb
call
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
rorb
or
sbb
jo
add
into
pop
pop
sbb
and
mov
ds
jbe
dec
xlat
outsl
inc
jne
jg
roll
ja
imul
bound
push
insb
imul
inc
lds
fdivr
jbe
push
jns
arpl
arpl
ja
add
insl
in
push
inc
insl
jns
mov
or
inc
jne
outsl
insl
addr16
push
sub
xchg
fildl
arpl
pop
into
xlat
mov
imul
and
ds
push
clc
adc
pushf
out
rcl
test
clc
inc
insl
bound
adc
mov
cmpsl
pop
daa
jo
inc
inc
js
pop
or
sbb
dec
orl
jg
dec
xorb
aas
pop
inc
cmp
pop
bound
xor
outsl
insl
sti
pushl
cmp
popa
arpl
cmp
arpl
or
xor
sti
xor
bound
pusha
xor
push
inc
jbe
pop
sbb
das
and
jo
sahf
add
add
shlb
dec
ror
adc
mov
dec
dec
mov
add
fs
sub
push
test
outsb
imul
push
imul
cmp
or
jp
mov
inc
aas
fisttpll
jle
inc
mov
adc
push
sub
add
sbb
aaa
or
movsb
push
fidivl
and
popa
jns
push
pop
das
push
xchg
popa
popa
xchg
addb
insb
aaa
dec
loopne
lods
aas
inc
push
notb
sbbb
mov
sub
push
pop
mov
adc
sbb
inc
aas
dec
push
sbb
inc
movl
sbb
inc
pop
sti
mov
jae
inc
inc
inc
add
push
cwtl
fstl
ds
scas
add
std
rcl
push
iret
int
push
dec
dec
and
xchg
sbb
cmp
ja
outsb
jne
aad
fs
popa
mov
dec
jge
addr16
mov
xor
xor
or
mov
test
add
addr16
push
aaa
into
pop
jo
or
negb
cmp
scas
inc
adc
push
imul
stc
push
shrb
or
or
mov
xor
dec
xchg
jo
mov
mov
ficompl
xlat
and
mov
xchg
add
jb
add
orb
icebp
dec
popa
jo
lahf
rcll
aas
push
outsl
outsl
test
mov
inc
push
push
jno
cmp
test
stos
lds
and
nop
test
pop
cmp
lcall
out
or
pop
or
jo
xor
xchg
pop
mov
outsl
insb
jns
das
cmp
push
popa
jb
je
adcl
push
in
nop
adc
insb
aas
inc
mov
bswap
inc
push
bound
lock
add
arpl
addr16
inc
cwtl
mov
divl
sbb
test
and
jo
rolb
sub
or
jns
mov
add
ret
pop
push
cld
enter
adc
jecxz
xor
adc
in
mov
movsb
xchg
aam
outsl
adc
sahf
aas
gs
pop
add
ljmp
test
add
and
aaa
push
outsb
mov
jb
js
popl
push
daa
aas
pop
inc
xchg
or
add
push
and
add
inc
xchg
flds
lcall
add
pinsrw
pop
test
sub
mov
pop
mov
sbbb
mov
cmp
subb
sub
fidivl
into
movsb
inc
push
inc
jmp
repnz
scas
dec
ret
stos
cmp
cld
and
lds
ds
arpl
pop
inc
ficompl
sub
or
and
cmp
call
shr
push
stos
fwait
jl
bound
loopne
jg
add
xchg
fwait
lea
pop
adc
inc
loop
sbb
and
and
or
aam
cli
aas
cmpsb
aam
lock
mov
pop
pushf
es
jmp
cmp
daa
jmp
repnz
bound
or
fs
sub
ljmp
adc
or
addr16
xchg
inc
scas
add
leave
mov
imul
cmp
mov
inc
cmp
cwtl
mov
das
fists
add
xchg
mov
call
shlb
shrl
outsb
imull
incl
lahf
lahf
jle
data16
push
dec
push
leave
addr16
sub
push
call
loope
in
js
lock
incl
push
in
sahf
in
out
jne
and
jne
xlat
sbb
and
popa
cmp
aas
inc
xchg
out
sub
out
mov
ja
and
cmpl
mov
out
xchg
rclb
popa
jno
adc
dec
lock
fsincos
inc
or
rcrb
sub
outsl
fs
jecxz
cs
ret
sahf
testb
mov
pushl
inc
repnz
push
or
stc
addr16
daa
ficoms
push
dec
shll
ljmp
loope
xor
ficomps
shlb
int3
sti
jnp
jae
stc
cmp
cs
fcomip
and
sbb
sub
data16
pusha
stos
push
cmp
pop
or
xchg
push
add
imul
cmp
cli
xor
ret
or
inc
add
das
xlat
repz
clc
test
jle
fists
lcall
out
or
lock
pop
loopne
or
cltd
inc
mov
iret
test
jg
pushf
lods
xor
jg
test
nop
adcb
pavgb
inc
jge
jae
pushl
incl
aam
pop
mov
lahf
inc
icebp
sub
push
das
bound
call
stos
test
imul
jne
int3
mov
fldl
xchg
insl
mov
ljmp
sahf
daa
dec
sbb
notl
test
add
shrl
leave
incb
xchg
pop
xor
out
xor
push
sub
nop
and
mov
pop
loopne
mov
push
jns
arpl
test
cltd
popa
call
scas
pusha
cmp
xor
enter
leave
adc
movsl
mulb
and
adc
sbb
dec
lret
mov
add
fnstenv
stos
xor
sahf
lcall
jbe
in
int3
xchg
test
xor
iret
jo
xchg
stos
push
bound
sbb
decl
in
mov
sub
xorl
sbb
loopne
pop
les
push
ret
stos
incl
push
shl
mov
fbld
mulb
popa
pop
jae
pop
orl
pop
or
pushl
movsb
xor
push
lcall
cmp
or
dec
neg
call
pushl
mov
fwait
jge
pop
mov
in
mov
popf
dec
mov
pop
fs
push
cmp
incl
cs
pop
das
int
lea
fcom
out
in
xor
sbb
ljmp
call
ljmp
sub
push
orl
icebp
or
pop
cmp
pop
addb
shll
mov
push
addl
lcall
push
mov
and
bound
push
leave
sar
sti
aam
dec
mov
pop
test
hlt
push
xchg
and
fs
imul
dec
xchg
sub
push
xorl
incl
push
aad
dec
dec
in
jo
in
mov
mov
jbe
loop
sbb
mov
inc
jb
ja
adc
mov
dec
lret
mov
clc
les
call
fcoms
cmp
ljmp
dec
xchg
push
hlt
ret
out
incl
lock
add
stos
add
cmc
cltd
rclb
in
decl
push
loope
jmp
int
sar
out
icebp
cmc
into
lods
lret
push
and
aad
sub
jmp
jbe
popa
ret
hlt
and
mov
hlt
mov
cli
ds
decl
sub
decl
cli
addr16
mov
repnz
ljmp
mov
dec
or
push
ljmp
or
lcall
loope
sub
out
adc
lret
sahf
inc
dec
and
ds
pop
mov
lods
mov
push
les
or
jle
imul
dec
rcrl
insl
je
mov
dec
decl
mov
add
in
hlt
cmp
pop
cmp
cmp
jge
cmp
sbb
cltd
fwait
pop
jmp
stos
nop
add
shll
jno
or
xchg
fildll
addr16
push
ss
cli
mov
add
cmp
mov
fwait
adc
orl
outsl
fsubrl
cs
shld
mov
push
mov
data16
fcomi
in
sarl
jne
mov
cmp
movsl
sub
into
repz
call
arpl
xchg
push
sub
in
adc
mov
pop
mov
jl
xchg
or
xor
cmp
xor
inc
rorb
es
insb
push
insb
push
outsl
jae
lret
call
pop
lods
incl
mov
sbb
mov
push
jg
add
outsl
push
ljmp
push
adc
jnp
incl
jnp
mov
int
mov
out
inc
lods
jg
decl
popa
pop
jo
xor
and
mov
arpl
jmp
jo
clc
cs
out
clc
call
and
fucomp
aam
xchg
push
and
and
pop
jp
sbb
pushf
inc
imul
push
push
lcall
sar
decl
mov
mov
addl
jg
jns
pusha
jb
sbb
out
imul
jmp
loope
shrb
mov
shrl
aas
popa
out
add
mov
inc
ljmp
sub
lods
push
xchg
mov
xlat
cmp
jnp
jl
ret
jecxz
push
stc
cmp
adc
mov
lcall
scas
inc
inc
jp
jmp
repz
fcomip
push
jno
inc
dec
pop
out
mull
fbld
repnz
mov
lcall
pushf
outsl
xor
jbe
aad
dec
stc
mov
push
mov
ds
inc
adc
mov
fdivs
lcall
ret
dec
das
sbbl
jge
fcmovnbe
repnz
jmp
lret
cmp
popf
cmp
mov
cwtl
mov
sub
repnz
xchg
push
jmp
sbb
in
cli
out
nop
pop
jne
imul
mov
fstpt
pop
jns
shl
incl
fwait
cmpb
insb
sbb
jl
stos
mov
xchg
push
test
pop
clc
ljmp
rcll
addl
push
ficompl
adc
jg
xchg
aam
iret
adc
or
lods
lcall
mov
stos
ss
loope
movsb
push
xchg
cli
lcall
push
mov
test
incl
mov
dec
push
repz
or
xorl
or
outsl
test
lcall
ja
sub
mov
outsl
dec
xor
rclb
test
rclb
push
jmp
jns
dec
loopne
sub
das
loopne
cmp
push
dec
out
cltd
adc
mov
xor
jns
cmp
pop
in
add
js
push
and
and
sti
jmp
test
push
add
ljmp
jns
int
mov
ljmp
mov
rolb
adc
das
jno
shl
push
mov
jg
in
negb
inc
jnp
sbb
sahf
add
int
stos
xor
cmp
ljmp
fiadds
xor
mov
aad
or
outsl
es
ds
or
or
sub
das
out
mov
mov
mov
ljmp
push
leave
add
outsl
mov
push
push
adc
loope
scas
or
push
je
xchg
xchg
jecxz
xor
pop
out
icebp
pop
mov
cmp
jg
daa
pop
loopne
icebp
mov
jge
push
mov
xchg
ja
mov
call
pop
mov
flds
push
sub
movsl
jb
dec
inc
add
lea
pop
push
lcall
inc
nop
filds
dec
jae
popa
ja
stc
pop
adc
std
inc
ds
aad
jo
mov
enter
jmp
or
adc
push
dec
les
sbb
ljmp
mov
out
cmp
jg
test
dec
pop
lds
add
add
out
push
outsb
mov
popa
sbb
mov
xor
repz
ret
ljmp
sbb
sub
pop
sbb
mov
das
jl
and
icebp
push
out
sub
sub
mov
loope
outsl
jecxz
dec
xlat
add
jmp
mov
xchg
jbe
inc
std
rcrb
fcmovnb
cwtl
adc
scas
jmp
jb
mov
mov
std
call
dec
sahf
iret
das
mov
aaa
sbb
xor
cs
adc
shrb
jg
add
and
lret
push
pop
cmp
push
push
addb
fsubl
ja
or
and
imul
add
jp
das
clc
ljmp
inc
sub
add
pop
lods
inc
stos
sbb
invd
jne
call
std
adc
jno
jle
jmp
cli
jb
sbb
cltd
push
inc
out
inc
cmp
out
or
lret
jbe
xor
cmp
fisttpll
ret
pop
ret
ret
sub
sbb
pop
jno
call
cld
cwtl
pop
sbb
push
sbb
pop
jno
popa
sub
inc
daa
mov
outsl
dec
hlt
inc
loop
repz
jmp
es
adc
cmp
imul
ljmp
scas
mov
enter
sub
dec
hlt
adc
fstl
push
hlt
pop
in
mov
filds
outsl
xchg
orb
adc
call
decl
cmp
pop
dec
jo
fnsave
sbb
mov
sbb
jmp
xlat
mov
jmp
pop
dec
adc
push
movsl
les
inc
mov
push
ret
or
jp
insb
int3
stos
cmp
sahf
loopnew
incl
hlt
movsb
mov
sbb
stos
test
pop
cmc
pushl
xor
loopne
test
mov
push
pop
dec
jns
out
jno
xchg
mov
pushl
lods
or
jl
das
mov
xor
xor
mov
fcomip
mov
jno
incl
inc
divw
or
fbstp
inc
and
arpl
sbb
xchg
jnp
push
adc
sub
dec
xorb
lea
xor
stc
add
lahf
push
mov
pop
jns
cmpsb
xorl
jmp
jae
es
shrl
mov
xor
pop
fs
cmpsb
in
jns
imul
cmp
xchg
xchg
lods
sahf
xor
jb
cmp
cmp
mov
jno
and
dec
int
sbb
mov
jg
iret
jle
fdivl
xchg
in
aaa
jbe
cltd
sbb
mov
call
int3
mov
call
lds
mov
or
and
std
pop
shl
jge
or
sbb
cmp
rcrb
jmp
mov
and
insb
lahf
es
fucomip
fimull
mov
call
mov
sbb
push
lock
jnp
pop
push
mov
loop
pop
or
pusha
fcomip
push
inc
inc
mov
mov
faddl
outsl
iret
pop
call
in
movsl
lock
jmp
mov
in
mov
insb
les
lock
xchg
repz
pop
nop
push
das
fisubrs
jb
ret
call
filds
xchg
in
mov
sbb
push
cmp
cli
scas
pop
std
pushl
rcr
add
sbb
mov
fldl
mov
call
cmp
aad
jne
mov
outsl
ds
adc
in
rcr
cld
incl
aam
and
loopne
jle
jb
inc
out
nop
icebp
adc
or
ljmp
repz
je
xchg
fwait
sub
mov
xor
scas
lahf
popa
lret
in
mov
decl
call
cmp
ds
andl
jbe
jecxz
ret
addb
mov
lcall
lods
inc
mov
and
popf
orl
sub
mov
sub
icebp
inc
fimuls
jl
nop
inc
pop
rcr
mov
iret
mov
sbb
stos
jno
dec
lock
or
in
pushf
bound
pop
les
and
sbb
adc
aad
push
adcb
push
out
fcmovnb
popw
cs
lods
add
cmp
jle
rol
jmp
ljmp
cmp
jne
mov
xor
ds
xchg
push
cld
mov
stos
decl
push
add
hlt
adc
gs
pop
jp
rcl
or
lcall
mov
cltd
lds
iret
push
push
stos
int
in
push
fdiv
adcl
push
lcall
adc
cmp
outsl
xchg
insl
cmp
xchg
cli
ja
cld
mov
mov
psrad
jle
ljmp
call
mov
add
repnz
mov
pop
outsb
jg
ss
xor
xor
lock
jmp
inc
fstps
les
mov
test
inc
xorl
decl
inc
or
movsl
sbbb
inc
mov
adc
xchg
cmp
lcall
aas
jle
adc
scas
mov
lret
pop
lret
mov
dec
dec
mov
loope
idiv
outsl
decl
insl
xlat
xchg
or
lods
jnp
pop
outsb
xchg
mov
ss
xchg
std
sub
ljmp
push
mov
nop
pushf
das
data16
jp
out
pop
outsb
inc
nop
jecxz
scas
decl
lock
cmp
push
adc
fst
js
dec
inc
loop
sbb
ja
cmp
repnz
add
xchg
loopne
pop
ret
jg
mov
idivb
sub
cmc
rcll
js
sbbl
push
cs
fadd
dec
push
or
fidivl
shlb
fsubl
xchg
call
testb
adc
adc
lret
lret
mov
or
fsubrs
push
jno
jne
push
cltd
repz
js
lcall
out
daa
scas
sbb
or
int
xor
movsb
mov
inc
cmp
mov
xor
ljmp
xor
loope
addb
add
cli
xchg
pop
icebp
add
arpl
and
xor
jl
pop
add
js
dec
cmp
xor
fxtract
jp
decl
sahf
shl
mov
xor
cmp
xchg
jmp
xchg
sbb
in
lock
jg
movsb
mov
adc
mov
xchg
mov
test
lahf
loope
clc
pushl
mov
push
pop
add
sbb
pop
adc
aad
incl
loop
test
and
sar
call
push
inc
pusha
and
dec
fldl
pop
jge
cmp
cmp
add
mov
xor
cmp
pop
dec
ret
sarl
push
ljmp
pop
sahf
divl
int
mov
in
and
xor
cltd
lods
cmc
pop
outsl
clc
decl
mov
aam
lods
pop
sub
lods
sub
push
test
ret
xchg
arpl
mov
enter
push
jl
sub
int3
dec
or
mov
fmull
stos
dec
pop
lds
lds
out
clc
mov
push
lds
mov
xchg
incl
rcl
add
popf
sbb
and
mov
loop
cmpsl
mulps
decb
lcall
and
jle
add
pop
push
movsl
popf
xor
push
jge
push
xchg
sbb
push
mov
jg
lcall
lods
pop
mov
push
jge
mov
fwait
jl
mov
cmc
sbb
mov
sub
ljmp
data16
mov
add
test
cmp
lock
imul
leave
xchg
push
pop
jnp
inc
repnz
xchg
addr16
sbb
cmp
scas
std
xlat
dec
jp
es
pop
mov
lea
ljmp
cmp
jecxz
jl
aam
adc
push
aas
mov
pushf
movsb
dec
call
int3
pushf
add
and
jmp
mov
xchg
cmc
sbb
cmpsl
stos
jg
lcall
addr16
push
mov
sbb
jno
jb
xchg
pop
or
jns
icebp
mov
cld
cld
adc
inc
xor
test
push
ret
cmpsl
sub
call
bt
popf
fs
outsl
fsubrs
int
add
ljmp
dec
mov
cmpsb
jmp
daa
xchg
inc
cmp
and
mov
fmulp
pop
adc
xor
inc
xlat
call
in
adc
iret
out
cmc
push
test
or
idiv
lcall
or
test
movsl
adc
lret
xchg
or
xor
imul
jae
pop
and
jmp
mov
cld
clc
mov
sbb
stos
xchg
lret
into
or
ret
out
sub
sbb
fdivl
es
jnp
fisubrs
fmull
jae
and
cmpsl
sub
add
dec
sbb
lcall
leave
shlb
mov
negl
popa
out
pop
jno
arpl
mov
addb
cwtl
nop
cmp
addr16
stc
lret
lahf
pop
lods
jbe
adc
hlt
ds
sahf
popf
aad
pushl
dec
pop
pop
dec
mov
xor
insb
jno
adc
arpl
xor
pusha
push
xor
call
adc
sbbl
mov
ja
mov
shl
repnz
cs
in
shlb
dec
push
cmp
inc
out
cmp
incl
inc
xchg
add
xor
xchg
mov
mov
xchg
fcoms
push
iret
sub
jge
adc
jmp
mov
dec
arpl
xchg
add
xchg
lods
lods
fsubs
fprem1
pop
loope
dec
adc
icebp
pop
std
pushl
iret
dec
pop
rcrb
pop
xlat
xchg
mov
pop
jmp
sar
incl
cmp
imul
sbb
dec
icebp
ret
fs
fcomip
decl
and
loope
push
and
inc
dec
push
leave
dec
mov
rcr
jmp
xchg
out
and
dec
mov
cmp
out
mov
mov
xchg
insl
push
adc
call
aam
clc
mov
or
jmp
movsb
ja
or
daa
dec
es
sbb
into
icebp
inc
pop
aaa
adc
std
push
fcmovnb
imul
cs
incl
mov
movsb
adc
in
in
fdivrl
les
push
jmp
cwtl
lret
mov
dec
xor
mov
stos
insb
mov
mov
mov
test
mov
lock
fsubp
aas
in
inc
scas
bound
popw
inc
int3
push
das
inc
jmp
les
stc
mov
or
sbb
cmp
jmp
jmp
mov
movsb
in
outsl
fdiv
movsb
ss
and
adc
in
lock
repz
pusha
pop
or
pushl
mov
aas
bsf
sub
ja
cmpsb
fsub
in
ljmp
nop
test
pop
mov
xor
jo
shl
movsl
pushl
stos
and
pop
pop
fstp
cltd
mov
and
jno
cwtl
cmp
sub
decl
dec
mov
test
scas
int
and
mov
mov
or
in
pushl
cli
pop
mov
jnp
stos
inc
add
ja
repnz
cmc
jmp
ret
sbb
imul
xchg
cld
or
repz
lcall
xchg
lcall
ljmp
out
mov
hlt
add
push
mov
pop
xchg
in
dec
jg
xchg
xchg
decl
jg
imul
mov
xchg
mov
mov
lahf
sti
repnz
in
mov
out
fs
mov
jbe
insl
mov
sub
sbb
pop
or
mov
dec
nop
adc
mov
fcmovb
xchg
test
outsb
xchg
icebp
call
and
sub
scas
adc
xchg
cwtl
insl
hlt
pop
call
decl
das
shrd
mov
mov
mov
call
ljmp
inc
mov
inc
mov
mov
outsb
lcall
fstps
xchg
ljmp
jne
sbb
xchg
sbb
push
xor
mov
inc
mov
sub
jns
lock
negb
mov
dec
mov
std
pushl
cltd
sarb
fiaddl
add
test
ffreep
mov
call
fcoml
repz
loop
dec
fsubr
sbb
mov
pop
movsl
lea
or
cwtl
lret
lcall
fildll
mov
mov
shl
scas
inc
loope
or
in
fcomip
jnp
repnz
add
lods
roll
mov
adc
pushl
jo
iret
sub
cmp
lds
cmp
add
push
movsl
insb
fmul
cmp
test
ljmp
jl
test
movsl
pop
pop
sbb
push
mov
mov
push
sbbl
jmp
xor
or
fildll
rcll
rorl
pushf
pop
es
jbe
and
lret
incl
or
orb
inc
dec
mov
jb
sbb
xchg
cmp
fistpl
and
daa
and
aas
cli
fwait
mov
sbb
cmc
in
mov
jmp
mov
pop
in
clc
ss
test
ficoms
outsb
loop
jmp
aaa
sub
pop
mov
fs
decl
bound
gs
ds
jg
cmpsb
fbld
inc
test
sbb
dec
push
mov
push
add
jo
incl
cld
pop
mov
dec
xor
pop
jae
dec
jno
adc
mov
incl
and
xor
fistpll
inc
mov
jae
fs
push
mov
lcall
xor
push
pop
dec
mov
add
sbb
icebp
push
lea
js
add
lcall
sbb
mov
addb
and
data16
mov
mov
repnz
jns
loop
lahf
cmp
inc
mov
jne
sub
call
in
rorb
adc
or
test
cltd
cmp
or
std
je
fsubs
test
jno
fsts
lods
dec
or
repnz
decl
mov
dec
push
xchg
aaa
cmp
xlat
dec
xor
mov
adc
push
hlt
sarb
ljmp
roll
jnp
add
mov
aas
les
or
in
and
mov
inc
jl
lcall
iret
je
sti
imul
mov
fdivs
mov
pop
fidivrs
subb
lcall
es
lret
xor
in
adc
inc
inc
roll
lcall
into
orb
lahf
mov
cld
xchg
imul
hlt
jmp
stc
xchg
iret
sahf
mov
push
xchg
test
addb
xchg
xchg
loope
scas
cld
adc
mov
cmc
or
scas
adc
cmp
ja
enter
mov
subl
mov
or
jmp
xor
push
aad
aas
jp
add
pop
stos
aad
cld
cmp
lods
adc
in
xchg
rcr
lret
jl
dec
shrb
jg
daa
xchg
clc
pop
add
mov
cld
cwtl
push
sub
add
cmp
fisubrs
mov
jb
add
cmc
inc
push
enter
daa
pop
out
mov
and
xchg
movsb
adc
outsl
fisubrs
jmp
inc
cltd
push
sbb
filds
in
imull
cmp
mov
stos
pusha
and
sar
call
adc
pop
mov
inc
or
insl
test
lret
into
icebp
add
inc
sar
call
jmp
mov
sub
dec
orb
out
or
stos
mov
xchg
add
out
dec
cmp
jns
cli
mov
je
xor
mov
adc
repnz
cmp
fistl
jl
pusha
and
dec
sub
decl
inc
xor
pop
pop
push
sub
test
test
lods
jb
mov
insl
jne
pushl
ret
lret
scas
div
inc
push
repnz
fisttpll
fwait
inc
icebp
mov
out
sbb
sbb
outsl
pushl
cmp
loopne
imul
xor
mov
cld
incl
push
mov
cmpsl
sbb
loop
pop
or
mov
jg
and
mov
in
les
cwtl
aam
ljmp
sbb
xor
xor
std
xchg
mov
loopne
lahf
int3
adc
pushl
out
push
rcrl
test
xchg
pop
or
add
lcall
mov
sbb
mov
jl
mov
aad
idiv
mov
pop
inc
push
mov
ret
push
push
and
scas
das
mov
cli
mov
mov
pop
dec
sbb
lds
mov
cmp
pushf
jmp
ficomps
shlb
jo
incl
cmp
sbb
sbb
and
out
clc
xchg
test
cmp
rcll
inc
jl
sbb
dec
and
pop
popa
or
pusha
xorl
inc
xor
jl,pt
mov
ss
int3
jecxz
int3
pushl
jb
adc
jnp
rclb
ret
insb
mov
push
imul
mov
xlat
ljmp
or
incb
hlt
dec
xchg
push
mov
mov
dec
leave
mov
es
into
xchg
push
lcall
aam
lahf
sbb
pusha
mov
fwait
rorl
jnp
pop
fdivs
dec
fs
or
incl
subl
jcxz
stc
cmp
faddp
mov
movsl
inc
stos
xchg
push
sbb
daa
lock
shlb
movsb
outsl
adc
and
shlb
mov
lret
fistpll
or
mov
dec
idivb
inc
rcrl
rolb
and
cmp
cmp
incl
or
loopne
leave
popf
fs
inc
test
scas
xor
call
dec
repnz
or
inc
stc
inc
and
call
inc
dec
inc
ret
outsb
and
mov
daa
lods
js
mov
andl
divl
into
cmp
repz
sahf
addr16
inc
data16
gs
mov
jmp
pop
pop
sbb
sbb
js
jae
cld
addb
lock
repnz
xor
jo
and
ljmp
mov
hlt
inc
sbb
ror
pop
fldt
mov
sbbb
push
mov
sbb
sahf
inc
pop
call
movsl
aam
fcoml
pop
cmpsl
pusha
imul
inc
sub
ret
shll
ficomps
outsb
jecxz
jg
xor
jae
test
push
testb
test
stos
fnsave
inc
in
test
jecxz
test
insb
push
daa
jbe
std
nop
cmp
lcall
dec
push
inc
pushl
cmc
notb
cmp
in
shrl
mov
jno
pop
ss
sti
incl
push
adcb
pop
adc
ret
cs
js
sbb
ret
add
rcrl
pop
stos
adc
imul
lea
adc
xchg
push
sbb
repz
xchg
cmp
xor
decl
pushf
ds
call
dec
orl
fcoml
xor
cmp
mov
addr16
adc
jbe
xchg
loop
cmp
push
bnd
ror
push
rolb
jmp
mov
push
scas
push
daa
push
mov
mov
sub
insb
popf
inc
lcall
pusha
sub
sbb
fwait
dec
sti
scas
and
lds
dec
pop
sbb
jmp
roll
loope
insl
bound
add
jg
lds
inc
mov
inc
js
jb
xor
jbe
iret
and
mov
ficompl
dec
xchg
ja
scas
xor
addr16
cs
sub
jo
lcall
ljmp
test
insb
outsb
mov
outsb
mov
lods
xchg
testl
mov
inc
cltd
and
pop
insb
js
inc
cld
shlb
std
dec
insl
and
push
push
lcall
gs
scas
jae
pop
mov
push
fldenv
jne
inc
stos
or
push
or
inc
add
jle
loope
addb
dec
jge
adcb
stos
cmp
pushf
out
scas
ficoms
aas
and
and
in
not
push
sbb
movsl
das
dec
mov
popf
cmpb
jbe
imul
mov
fucom
stos
lcall
scas
outsl
jne
xor
pop
and
adc
hlt
hlt
adc
sub
xchg
or
jmp
or
sub
pop
mov
popf
nop
cmp
fidivl
imul
call
mov
cmpsb
je
mov
aad
rcrb
mov
repnz
in
cli
mov
aas
jns
cmp
subb
loop
in
push
cmpsb
push
cmc
push
cli
pop
idiv
jg
ds
dec
addr16
lock
sbb
or
jge
xlat
clc
cmpsl
incl
int3
icebp
cmp
fstpl
call
mov
sahf
jmp
jno
sbb
push
pop
inc
jmp
lret
add
je
incb
sbbl
rol
mov
test
and
push
scas
out
pop
push
add
mov
dec
or
in
mov
outsb
or
js
cmovb
dec
nop
and
jg
cwtl
iret
jo
loopne
or
pop
cli
fsubrl
or
and
icebp
push
pop
andb
push
push
rcrl
lcall
jg
sbb
pop
psubsb
dec
dec
mov
cli
cmp
loopne
jbe
push
adc
adcb
testb
xchg
daa
push
and
xchg
sub
cmpsb
fmul
cmc
push
data16
xchg
mov
xchg
aam
xorl
repnz
push
push
jmp
mov
shrl
cwtl
inc
jno
pop
aaa
movsl
jno
jmp
xchg
cli
mov
mov
pop
mov
dec
and
mov
gs
push
adc
jmp
lahf
push
shll
push
cmp
or
rcr
add
xor
sub
push
int3
incl
push
push
nop
or
call
sahf
push
push
cmpsb
or
xor
neg
mov
inc
jp
jns
jl
imul
add
mov
ljmp
cmp
dec
test
mov
sub
pop
sbb
call
lret
aad
push
add
stos
lds
pop
fldcw
adc
insb
daa
add
in
inc
sub
decl
pop
jle
std
je
es
inc
ss
shrb
stos
sahf
hlt
int
shl
xchg
or
jns
jmp
pushl
sbb
inc
jb
pop
mov
in
or
adcl
pop
push
cmp
push
mov
cmp
shl
jg
icebp
sub
lret
sti
cli
repnz
pop
cmp
pushl
clc
sub
daa
xor
inc
pop
clc
dec
cli
cmp
lock
jle
outsl
lret
mov
pushl
sbb
inc
mov
popa
aas
mov
jbe
lret
mov
jb
scas
aam
icebp
and
shl
lcall
cmp
mov
insl
jae
dec
in
test
pushf
test
in
movsb
fistl
or
jecxz
mov
pushf
xchg
loopne
inc
xchg
sub
cmc
fimull
int
and
loop
stos
lret
pop
lret
jge
leave
sub
lcall
stos
insl
push
and
arpl
push
inc
popa
pop
push
mov
pop
cmp
scas
pop
cld
ljmp
fnstenv
push
outsl
adc
xor
mov
push
mov
add
fdivr
aas
xchg
mov
and
inc
fldl
stc
inc
fs
lahf
es
repz
push
lahf
mov
call
lea
cltd
fwait
dec
mov
pop
pop
out
call
enter
mov
adc
lds
ljmp
and
xor
jb
dec
ret
add
dec
xchg
int3
data16
xchg
xchg
enter
incl
ret
jo
fcmovnb
lret
dec
call
push
dec
push
or
decl
cmp
out
sub
imul
push
idivb
leave
push
add
repz
fdivp
loop
mov
xchg
lds
scas
mov
cmp
cmp
cmpl
loop
stc
in
movsb
test
out
data16
dec
sar
adc
sub
test
lcall
ljmp
inc
xchg
mov
xchg
pop
popa
ss
loope
divl
sbb
or
mov
push
sub
aam
xchg
sti
push
fiadds
idiv
mov
inc
movsl
daa
jmp
imul
test
data16
lods
clc
pushl
cs
cmpsl
jge
lret
add
jo
push
out
lock
xor
insb
adc
jmp
dec
rorb
and
mov
adc
mov
scas
gs
lcall
xlat
sbb
mov
mov
push
dec
xor
stc
cli
lahf
adc
jle
lret
mov
or
inc
rclb
decl
mov
mov
rcll
sub
adc
mov
out
xlat
jle
out
call
mov
das
push
int3
pop
and
imul
and
xor
popf
lods
pop
or
mov
cmp
sahf
cmp
push
mov
push
jo
cmp
mov
mov
cwtl
mov
cmp
fstpt
cmp
inc
rclb
popa
jnp
sub
scas
jmp
sbb
push
sbb
pushl
cld
mov
push
or
lcall
lock
lods
mov
xlat
xchg
incl
add
add
ds
and
jnp
gs
lcall
mov
sbb
mov
mov
inc
leave
mov
hlt
mov
mov
adc
lcall
xlat
in
inc
movsl
imul
adc
out
add
dec
int
sbb
cwtl
rcll
cmp
xchg
daa
dec
ljmp
jnp
xchg
insl
pop
popa
or
mov
jecxz
or
incl
pushf
cmp
xorb
pop
fwait
adc
jns
ss
nop
cmc
mov
push
push
push
dec
cli
das
xor
push
aaa
jo
mov
fcomps
addb
aas
imul
decl
pop
xbegin
in
js
dec
lcall
mov
scas
mov
sti
sbb
and
lret
loope
sub
gs
inc
loope
mov
lcall
or
out
add
out
pushf
pop
popf
dec
mov
dec
ja
cmp
pop
add
push
lret
fdivrp
out
out
fstps
cmpsl
inc
lods
fwait
mov
xor
incl
imul
sbb
aad
add
movsb
push
jb
dec
inc
sbb
mov
inc
sub
test
or
pop
leave
xor
mov
and
adc
xchg
push
xor
shll
mov
test
insl
xor
rcl
lock
incl
inc
scas
sbb
pusha
jnp
imul
inc
fwait
aad
outsb
fnstsw
pop
out
aaa
fistpll
sbb
dec
mov
xor
sbb
jg
push
mov
fbstp
inc
push
jbe
add
ffreep
mov
sti
aam
lret
and
rcrb
dec
mov
cmpsb
cmp
pop
xchg
dec
add
lea
aad
call
test
add
pop
pusha
in
add
iret
adc
add
adc
jg
gs
mov
xor
sarl
fistl
stos
and
mov
loopne
ja
sti
pop
dec
or
jecxz
out
cmp
sub
ja
pop
test
out
mov
add
inc
movsb
mov
les
add
cmpsb
js
xlat
incl
pop
and
sarl
jae
loope
mov
pusha
and
repz
mov
clc
mov
cmp
sbb
push
test
push
pop
andps
mov
lods
mov
add
adc
pushl
idivb
cmp
xor
or
pop
pop
pop
rcrb
dec
push
xchg
adc
jns
sbb
adc
mov
fsubl
out
shlb
lock
jmp
addr16
enter
ja
lahf
lea
movnti
xchg
cmpsl
repz
mov
cmp
ljmp
dec
sub
push
mov
sbb
decb
ljmp
adc
outsb
add
mov
pop
dec
mov
jmp
pusha
jle
aas
cs
loopne
insb
or
jnp
rolb
sbb
dec
adc
and
call
add
adc
push
jge
std
or
out
xchg
je
pushf
loopne
xor
aas
or
mov
rolb
cltd
add
jae
dec
mov
lcall
in
sbbb
push
xchg
mov
insl
pop
aam
pop
imul
lret
sbb
aam
mov
fisttps
daa
rcrb
js
stos
jmp
fwait
ss
mov
and
ljmp
data16
mov
gs
fwait
jl
mov
enter
adc
jmp
ret
scas
mov
fidivrs
jle
jno
xchg
aas
stos
mov
inc
decl
xor
push
daa
lds
rorb
dec
incl
push
fwait
ret
mov
or
mov
jg
and
mov
cwtl
or
pop
sahf
and
incl
adc
mov
fsub
jp
mov
adc
dec
jns
enter
jg
xchg
mov
mov
adc
imull
in
hlt
call
xor
sbb
jae
push
mov
stos
or
dec
cld
sti
inc
sbb
pop
mov
cld
into
cmp
jno
and
aas
mov
pop
add
repnz
cmpsl
stos
test
dec
lods
jo
je
mov
js
and
gs
inc
pop
cmp
cmp
adc
fdivrl
inc
icebp
test
stc
popa
popa
jne
movsb
adc
jl
lcall
decl
push
jge
arpl
push
addr16
nop
mov
pop
les
dec
das
inc
dec
ljmp
fwait
addr16
or
in
cmp
stc
ret
pop
pop
or
clc
pop
dec
lock
ljmp
cwtl
sbb
mov
out
stos
fisttps
scas
pop
inc
loopne
pop
cmp
lcall
and
popf
test
sbb
ror
es
movsl
sbb
incl
mov
fcmovb
int
adc
leave
push
popfw
fisubs
mov
or
pop
ljmp
xor
jmp
fstpl
cli
lea
fidivrl
mov
add
ds
fs
in
mov
push
mov
dec
ror
leave
insl
pop
testb
repz
lcall
sub
jmp
inc
jb
xchg
icebp
cltd
lret
imul
sub
mov
loope
call
frstor
dec
fmulp
add
mov
or
popf
pop
sbb
inc
inc
icebp
xor
mov
push
test
lds
les
jp
jmp
ret
sbbb
pushl
popl
pop
cmp
xchg
in
in
mov
call
inc
cs
pop
leave
push
and
sarb
rcl
insl
cmp
mov
loopne
push
mov
cmp
inc
ror
pop
loope
mov
icebp
mov
leave
mov
stos
jp
insl
lcall
pushl
aas
iret
and
lahf
into
mov
mov
mov
mov
dec
inc
lcall
inc
fadds
cmc
xchg
sbb
test
fists
cmpsb
mov
mov
lock
incl
sbb
adc
outsl
lock
sbb
mov
mul
sbb
decl
in
outsb
shlb
and
mov
mov
xor
mov
sub
jb
das
inc
jne
push
enter
je
cld
iret
decl
jb
aam
cmp
jl
pushl
xchg
jb
movsb
in
cmpsl
and
fidivs
out
imul
or
ljmp
inc
shlb
fcmove
pop
iret
ljmp
nop
pushl
jg
jb
cmp
sbb
inc
out
xor
pusha
clc
ja
cmp
mov
jmp
punpckhdq
jg
jle
idivb
adc
fcomps
repnz
shll
pop
movsl
minps
daa
dec
mov
lcall
mov
xchg
jne
jge
sbb
cltd
pusha
std
scas
push
imulb
scas
clc
incl
jl
sub
push
rcll
shll
cmp
xor
jp
out
dec
push
movsb
and
incl
imul
xor
sbb
push
jno
xorl
incl
in
test
dec
loop
addr16
popf
adc
xchg
jg
cld
jae
or
fdivrs
jmp
jp
pop
aam
mov
pop
inc
jge
imul
push
scas
es
inc
pushl
jp
cli
cli
jns
stos
cmpsb
xchg
and
pop
xor
or
ds
shr
lcall
fnstenv
movsl
dec
jle
fcmovnb
dec
fnsave
push
cwtl
mov
pop
lret
sbb
in
mov
cmp
dec
lret
ds
jg
das
pop
enter
fldpi
inc
popa
outsl
pop
pop
aas
mov
sbb
je
push
scas
pushl
jae
mov
mov
sub
or
ja
loop
int
jbe
pop
mov
cmp
fistl
out
mov
sbb
cmp
cld
lcall
inc
dec
fdivr
decl
mov
mov
xor
pop
mov
outsl
cli
pop
xor
dec
sbb
neg
push
or
jmp
pushl
jp
pop
arpl
loope
or
add
fwait
int3
mov
test
ljmp
add
js
scas
xchg
pusha
in
jb
mov
loope
test
sub
enter
pop
add
lcall
ret
incl
fwait
jle
push
jmp
xchg
push
rcrb
hlt
cmp
mov
repnz
mov
inc
add
push
dec
mov
jne
sub
xor
adc
sti
jo
ljmp
cmp
mov
or
enter
xchg
sub
push
test
in
fistl
shr
inc
ficoms
ljmp
cmp
jge
or
test
rorl
jns
ljmp
jnp,pt
xor
aad
cmp
rol
xor
sar
lcall
push
or
jl
adc
popa
push
or
cmp
pop
fisttpll
xor
ja
ljmp
aam
cmpsl
xchg
repz
mov
int3
ss
jl
stc
push
add
lret
outsb
rorl
and
inc
pop
fwait
dec
push
cmc
push
mov
lcall
je
cmp
mov
aaa
cwtl
call
fisttpll
adc
adc
mov
cmp
cld
cmp
push
gs
mov
sub
xor
and
clc
insl
adc
call
loopne
and
jmp
adc
xchg
enter
dec
dec
cmp
sub
ljmp
xchg
push
jmp
ret
imul
outsl
gs
fcomip
lcall
push
ror
jecxz
pop
clc
mov
aaa
adcb
cmp
mov
lret
xchg
sarl
ljmp
dec
dec
jle
mov
into
mov
push
daa
push
jb
jp
jle
sbb
mov
sbb
cmp
mov
ror
sub
xchg
insb
cmpsb
mov
fadd
push
addl
hlt
cmp
ljmp
sti
shrb
lcall
lcall
mov
jl
xor
loope
cmp
pop
inc
test
fwait
in
es
xlat
lods
xchg
incl
nop
xchg
jmp
fisubrl
adc
psubq
sbb
pop
in
xchg
decl
dec
inc
or
mov
loopne
loope
dec
cltd
lock
xchg
repnz
dec
and
ror
ljmp
icebp
mov
inc
or
mov
lock
std
mov
jns
push
lret
lcall
and
repz
adc
mov
sarb
test
jae
orb
iret
ja
repz
push
loop
call
outsl
pushf
sub
adc
dec
adc
xchg
subb
rcrb
decl
jmp
mov
imul
popf
adc
push
cmpsb
aad
jb
sbb
jle
jg
inc
sbb
aas
xorb
data16
call
xor
lcall
ljmp
mov
jmp
outsl
cltd
inc
shrb
and
jg
out
sbb
enter
maskmovq
testl
mov
mov
inc
mov
movsb
cmp
je
xchg
loope
cwtl
int3
repz
jp
pushl
std
int
enter
fisttpl
inc
out
nop
call
xchg
xchg
fsubrl
sub
outsl
ljmp
push
icebp
and
adc
stc
fwait
movsl
call
sahf
adc
mov
into
decl
cltd
adc
dec
ljmp
cmp
mov
out
mov
ret
mov
pushl
sbbl
fwait
hlt
pop
je
jg
or
xchg
cmp
cmc
inc
setne
push
lcall
into
aad
mov
sbb
ret
rcll
mov
add
sub
xlat
data16
lcall
jae
daa
mov
pop
shl
jle
mov
xchg
dec
fdiv
mov
into
divl
lcall
test
bound
pop
sbb
add
out
inc
jb
sub
icebp
loopne
lcall
pop
jg
add
push
pop
cmpsb
fdivrl
int
or
mov
adc
pop
cld
inc
mov
mov
add
jge
scas
jle
or
ljmp
dec
mov
cld
pop
push
lcall
push
pop
shll
or
sub
orb
and
repnz
cli
aaa
sbb
xor
xchg
gs
xor
lcall
sbb
pop
or
shrl
es
push
dec
push
jmp
test
stos
cmc
jmp
inc
data16
and
ss
jecxz
inc
push
stc
loope
fists
jmp
sbb
arpl
adc
and
movsl
mov
xchg
and
aaa
xor
call
mov
pop
mov
cmpsb
addr16
pop
sub
clc
push
sti
pop
faddl
adc
push
and
mov
imul
ret
adc
lahf
cmp
inc
pop
dec
push
test
sub
movsl
je
popf
pop
andl
jnp
js
mov
mov
ss
mov
mov
xlat
cmp
or
test
mov
call
shl
jmp
test
stos
adc
and
xchg
sub
mov
in
mov
pop
sub
jae
rcrl
xor
sub
add
inc
xor
dec
mov
mov
dec
movsb
fmul
std
addb
adc
daa
push
iret
pushf
push
cmpsl
cmp
sbb
movsb
sti
mov
loop
mov
mov
aas
xchg
aad
int3
xchg
cmc
lcall
cmc
pop
iret
jb,pn
or
jl
sbb
adc
in
push
ljmp
rolb
or
and
iret
adc
adc
pop
inc
xchg
xchg
xor
aaa
incl
and
shlb
clc
repnz
push
and
push
mov
adc
fldcw
cs
and
xchg
push
stos
call
xchg
filds
bound
sti
pop
cmp
jecxz
sbb
xchg
mov
or
inc
fistpl
push
sub
mov
repz
movsb
aas
add
js
xorl
push
cmp
push
mov
fstl
push
stos
dec
mov
or
ret
pushl
daa
mov
xchg
incl
shl
dec
fistpl
loope
in
mov
ret
inc
leave
pushl
or
hlt
fisubrs
sub
arpl
sbb
in
out
sahf
inc
movsl
add
lcall
std
sbb
sarb
pop
in
ret
jge
inc
aad
mov
or
in
rcll
lds
fwait
sbb
int
xchg
xchg
mov
jg
jbe
sub
jbe
mov
xchg
fwait
dec
out
addl
fnsave
fwait
sbb
mov
incl
flds
jl
out
bound
sbb
mov
loope
cmp
enter
mov
sub
and
repz
sbb
jl
arpl
iret
push
arpl
stos
repnz
jmp
addl
cmp
shrb
das
mov
sbb
aas
ss
test
enter
inc
push
push
jb
fisubs
push
fisttpl
ljmp
rcr
dec
repz
cltd
nop
mov
xor
mov
das
cli
call
aaa
mov
add
add
sub
xor
inc
adc
mov
adc
push
leave
xchg
dec
pop
ljmp
jmp
mov
pop
test
inc
and
mov
pop
mov
mov
cmc
jmp
adc
les
xchg
jno
cmp
pusha
jg
cmp
call
lahf
xchg
pop
test
xor
cmpsb
jb
xchg
push
mov
scas
cltd
hlt
and
dec
call
mov
loope
dec
fsubrs
ret
or
xchg
add
sbb
push
xchg
mov
ljmp
lock
or
lret
cmc
jp
aam
jecxz
push
xor
xor
pop
xchg
faddl
jmp
pusha
lret
ret
add
cmp
adc
pushf
mov
mov
or
sub
cmp
lcall
push
cs
je
add
cmp
adcb
jge
cmpsb
incl
pop
fidivrl
fistps
pop
lcall
mov
push
jg
or
xchg
push
in
std
push
loop
sbb
xor
pop
jp
sub
add
pushf
pop
mov
xlat
movsl
xchg
add
fdivrs
cmpsb
pop
test
stc
lcall
insl
mov
xchg
rorl
inc
push
pop
cli
iret
lds
lea
rcrb
call
sub
and
mov
fldl2e
stos
cmp
adc
adcl
mov
gs
popa
mov
lcall
push
sub
mov
pop
and
sbb
push
mov
pop
push
repz
fwait
js
adc
mov
mov
xchg
pop
mov
and
and
xor
push
cmp
arpl
jnp
cmp
cmp
and
adc
iret
imul
mov
aaa
cs
pusha
or
fcmovu
shl
or
in
jmp
cmc
or
lcall
inc
iret
fwait
ret
adc
push
sbb
in
gs
cwtl
xor
xchg
rclb
decl
push
pushf
cmpb
sti
cmp
lea
into
in
xlat
test
add
and
push
popf
mov
pop
push
incl
lret
lcall
fwait
in
pop
mov
or
add
mov
sti
movsl
pop
mov
ret
cmpsl
push
pushf
mov
mov
ljmp
popa
lods
cmp
mov
mov
daa
push
jp
mov
mov
push
fdivl
cmp
fbstp
adc
das
test
inc
mov
jne
cmp
inc
mov
fmuls
into
and
mov
sub
ret
mov
adc
mov
data16
incl
adc
hlt
sub
daa
dec
fsubr
jp
mov
pop
mov
jmp
hlt
mov
xor
xor
cmpsb
sub
sti
push
jae
pop
das
cmp
mov
mov
xchg
sahf
leave
cmpl
pop
or
cmp
test
mov
jmp
mov
adc
sti
jmp
jmp
test
cmp
fldcw
sbb
adc
ds
ljmp
cmp
jge
add
mov
dec
push
stos
fmulp
jge
sti
cmpsb
in
mov
mov
xor
adc
ljmp
hlt
subb
leave
ljmp
sar
xlat
stc
cs
mov
outsl
sub
lret
xlat
inc
lods
scas
xchg
mov
mov
iret
rorl
add
jg
out
and
sbb
and
mov
imul
push
loop
push
stos
jo
cwtl
push
test
shl
clts
test
dec
push
inc
mov
dec
out
flds
sbb
mov
lods
call
stc
mov
inc
pop
xor
bound
stos
mov
in
hlt
mov
cmp
fildll
mov
out
push
repnz
loope
je
das
imul
push
push
inc
into
shl
mov
insl
jecxz
stos
mov
mov
add
fwait
push
iret
jno
adc
jg
mov
sub
sbb
mov
mov
daa
xchg
xchg
pop
xchg
sub
dec
jg
mov
mov
sub
or
adc
and
call
jb
outsb
pop
jno
inc
nop
bound
xor
nop
outsb
fs
cmp
xchg
decl
push
insb
les
mov
pushf
es
mov
mov
or
sahf
je
jmp
sbb
cmp
in
cmpsl
js
sub
fistl
in
and
ljmp
mov
jns
mov
test
incl
mov
and
cmc
pop
mov
xchg
xchg
and
cli
call
inc
sub
sub
mov
mov
and
inc
inc
push
dec
mov
hlt
add
gs
clc
popa
jge
in
in
pushf
scas
inc
xor
enter
pushl
cmpxchg
adc
stc
cltd
sbb
dec
pop
jo
or
jmp
add
fstl
sub
ljmp
xor
subb
call
imul
sbb
aam
jl
push
xor
adc
ja
pop
jmp
fwait
lods
outsb
sarl
xor
jecxz
test
aam
mov
or
and
inc
test
xchg
gs
out
jne
test
mov
xchg
mov
loope
jle
xor
ret
call
add
mov
je
dec
mov
xchg
in
lods
mov
push
cmp
or
push
jb
xor
pushl
sbb
dec
lcall
xor
dec
das
and
xchg
lret
lret
and
mov
pushl
mov
jp
aas
aaa
mov
mov
pop
push
adc
das
pop
mov
inc
nop
in
lods
jbe
mov
mov
decl
clc
xor
push
xor
cmp
cmpsl
psubsb
pop
adc
dec
fs
insl
decl
fisttpl
jl
inc
mov
jno
jp
jmp
sbb
inc
jne
inc
mov
jbe
xchg
lcall
addr16
cmp
incl
mov
cmp
push
pop
xchg
sbb
inc
adc
incl
rorb
jecxz
mov
das
push
aaa
in
xchg
inc
jle
insb
mov
call
shll
inc
and
push
adc
les
movsb
call
lcall
xchg
testb
pop
cmpsb
sub
mov
add
scas
out
scas
mov
pop
nop
ret
xchg
push
pop
aas
fwait
inc
data16
incl
lahf
sar
imul
gs
jns
dec
push
inc
pop
das
jmp
call
pushl
paddsb
sub
in
stos
pop
loop
in
push
nop
mov
adc
mov
pushl
mov
xor
leave
xchg
xchg
fs
xor
mov
dec
fidivrl
lods
pop
inc
jbe
pusha
lret
xchg
scas
sub
addr16
orb
inc
fdivrl
lcall
les
or
in
xchg
xchg
jae
fsubrl
pop
jb
or
int
ss
mov
decl
or
fmulp
test
pop
dec
add
pop
insb
imul
ret
jecxz
incl
scas
inc
adc
jo
out
sub
mov
push
pushl
sub
cmc
and
sbbl
nop
add
mov
incl
xchg
inc
push
enter
pop
mov
lods
scas
je
out
jbe
and
test
xlat
decl
test
fs
xchg
pop
push
xor
inc
fcomip
in
ss
adc
sbb
divb
jp
sub
push
inc
mov
cmp
stos
mov
mov
pop
inc
jp
adc
cmp
cmp
out
dec
loope
jmp
dec
or
adc
mov
ja
push
xor
pop
cli
mov
pop
pop
xchg
daa
cmp
dec
xchg
push
clc
gs
pop
daa
rorb
and
push
addb
inc
test
xor
mov
out
cmpsl
inc
push
lret
out
insb
mov
mov
aaa
mov
popf
inc
divl
fisubl
out
pusha
sub
and
push
je
movl
mov
nop
mov
test
pop
and
incl
sub
int
popf
pop
pushf
push
pop
mov
bound
jbe
stc
and
lcall
cld
jbe
leave
dec
dec
cmp
test
and
data16
ret
decl
xchg
adc
push
fimuls
mov
inc
xchg
enter
aam
push
cmc
mov
decl
movsb
pop
dec
loope
cltd
push
lret
enter
int
test
fwait
rcll
adc
sub
push
lods
xchg
xorb
call
jge
movsl
pop
out
outsl
jg
xchg
pop
les
push
cltd
lcall
pop
push
jmp
cwtl
cli
lret
adc
cmp
inc
pop
jbe
stc
cmc
mov
std
lcall
enter
jns
push
mov
loop
cmp
fadds
call
sub
sbb
pop
add
jge
and
pop
imul
cld
add
repnz
lcall
mov
mov
inc
mov
jecxz
lods
les
mov
pop
addl
jmp
popf
in
fs
jo
lea
filds
iret
ljmp
jp
ljmp
push
mov
aaa
mov
and
in
aam
call
push
adc
xchg
cld
or
idivb
xor
cmp
inc
mov
in
cwtl
out
hlt
mov
movsb
out
cmpsb
shl
push
cmp
push
inc
out
pop
mov
enter
cmp
adc
divl
ret
xlat
xor
dec
adc
scas
cmp
out
in
adc
enter
add
pop
jb
add
inc
adc
cmpsl
cmp
pushf
xor
repz
mov
push
es
pop
jbe
ds
decl
sub
push
pushf
lock
xchg
xchg
rcrl
in
lea
in
sub
incl
rol
aaa
negb
cltd
gs
ja
mov
in
xchg
mov
dec
push
dec
jg
popa
imul
int
lds
repnz
bound
aas
in
rclb
adc
fildll
sti
and
mov
xlat
scas
pop
sti
loop
mov
aad
jnp
test
sti
sub
sub
lcall
idiv
call
ja
lret
lods
lods
repz
popf
dec
sub
inc
loop
mov
pop
and
jmp
in
mov
jl
shll
mov
icebp
adc
pop
loopne
jb
mov
lret
and
jo
hlt
mov
xchg
dec
jg
dec
and
in
lock
dec
imul
dec
xorl
xor
mov
lock
pop
sarb
scas
jne
inc
arpl
daa
aam
test
ljmp
adc
lea
or
mov
or
test
cld
mov
cld
sub
sub
pop
cs
mov
xchg
icebp
add
les
call
sub
notb
daa
lock
sbb
xchg
in
pop
jecxz
xchg
pop
or
call
cmc
mov
orb
or
mov
push
jle
sbb
cmp
xchg
jmp
mov
clc
sar
mov
xchg
sub
xchg
data16
mov
mov
ja
ss
lds
jg
inc
mov
cmpsb
and
jmp
bound
dec
aas
pop
fiaddl
pop
cmp
or
fdivrl
add
pop
push
jbe
andb
lcall
in
sbb
cmp
ds
jl
mov
aas
mov
jbe
fcomip
ja
pop
fistps
lret
int
lcall
xchg
sbb
cmp
pushl
xor
jbe
hlt
andb
sahf
xchg
cwtl
outsb
add
add
rorl
mov
jmp
and
flds
loop
subb
push
xchg
and
push
mov
test
pop
and
ljmp
sbb
xlat
or
jl
or
test
inc
aas
repz
scas
lret
clc
dec
jb
sub
scas
sub
ja
dec
cmp
ja
sbb
inc
repnz
dec
push
popa
pop
mov
aas
xchg
das
inc
inc
mull
mov
inc
cmp
scas
repz
aad
jge
sub
lcall
push
cmp
push
cmp
mov
add
mov
sbb
aaa
cltd
jo
lods
dec
pop
xor
movsb
cmpsb
jg
mov
gs
setae
fidivs
push
pop
jg
pop
mov
inc
lret
dec
pop
and
push
inc
xchg
jge
add
jge
xchg
test
stc
sub
call
sbb
scas
pushf
stos
pop
lcall
out
nop
clc
or
std
out
data16
and
and
stos
sbb
push
fsubrs
ret
pushl
lahf
rol
int3
movb
add
rorb
in
loopne
xchg
sbb
inc
es
aaa
sbb
loopne
ljmp
icebp
cld
movb
int
mov
ja
cwtl
mov
mov
mov
xchg
push
mov
inc
pushl
imulb
push
dec
cld
leave
sbb
test
andb
popf
and
int
inc
xor
jne
mov
call
sub
sub
pop
mov
jecxz
cmc
adc
pop
lods
xchg
ret
lret
mov
stos
shrl
mov
in
mov
push
iret
mov
fstl
fimuls
adc
mov
jns
mov
sbb
adc
push
mov
inc
add
cs
iret
out
xchg
jmp
inc
idivb
or
jno
ljmp
insb
sub
mov
ja,pt
jp
das
call
ljmp
cmp
or
mov
outsb
push
jp
out
mov
jp
mov
mov
nop
sub
mov
decl
js
adc
mov
xchg
fadd
js
xor
imulb
test
dec
sub
lcall
rorb
mov
xor
sbb
jnp
test
mov
mov
mov
mov
cmpsb
fwait
ljmp
jbe
jno
hlt
pushf
inc
jno
jmp
mov
or
movsl
push
add
pop
pop
mov
or
cmp
pop
cmp
add
cmp
inc
movsb
mov
xor
push
fdivr
fcomip
jnp
add
mov
scas
fsubrs
aaa
mov
xor
test
popf
decb
dec
mov
shlb
outsb
jbe
dec
cmp
gs
or
xchg
inc
add
jmp
lahf
jns
addl
imul
sbb
into
push
pop
gs
sub
leave
push
xchg
mov
xchg
xor
ret
sbb
pop
ljmp
out
int
repz
lret
lret
pop
ljmp
pop
add
ss
icebp
sub
or
and
mov
xchg
mov
lods
sbb
pop
pop
data16
sahf
gs
test
hlt
push
add
ljmp
dec
mov
inc
pushf
iret
and
jge
les
jo
mov
push
and
std
out
dec
xchg
movsb
mov
xchg
fldl2t
push
dec
or
or
loop
inc
std
push
movb
jmp
add
test
jg
les
mov
bound
xchg
dec
sbb
jmp
adc
jmp
adc
mov
dec
xchg
jmp
fs
jmp
incl
cmp
pop
push
loope
sbb
or
mov
ret
mov
push
incl
aas
insl
sbb
push
inc
mov
adc
cltd
movsl
mov
lahf
xchg
sub
scas
call
out
push
popf
mov
aas
jmp
movsb
lods
and
sub
in
out
pop
mov
incl
lret
adc
stc
insl
xor
add
shll
mov
push
test
int
sbb
mov
call
repnz
dec
cmc
shlb
mov
mov
cs
or
push
push
je
cld
push
rorl
push
cmpsb
dec
stos
add
jp
push
mov
mov
sub
xchg
test
sbb
call
adc
shl
je
jnp
mov
pop
aas
imul
xorb
ret
push
push
iret
bound
xlat
iret
stos
js
push
rcll
jge
mov
test
mov
lahf
pop
sub
add
mulb
icebp
push
push
dec
or
or
decl
addr16
jae
ret
xchg
cmpsl
outsb
xchg
aam
push
jl
fmulp
mov
mov
jg
mov
push
mov
jge
xor
and
push
add
cmp
ljmp
daa
jge
test
adc
test
rclb
shlb
cmp
cmpsl
decl
fmuls
jl
cmp
push
add
pop
out
add
add
incl
push
xchg
or
push
das
inc
ror
cmpsl
enter
loop
ja
mov
adc
xchg
lock
cltd
or
imul
cmp
xor
or
cmp
push
bound
test
icebp
fs
js
pop
ficoms
push
xlat
and
pushl
adc
inc
sbb
pusha
xor
std
xchg
mov
inc
inc
dec
push
sub
dec
push
pop
jp
repz
jmp
pop
test
add
shll
jge
xor
mov
adc
pushf
pop
inc
inc
add
cs
mov
fldl
jmp
xor
push
out
shll
shl
mov
mov
loop
into
pop
mov
loop
in
add
pushl
xchg
pop
add
mov
dec
pop
push
lea
nop
sbb
jl
rorl
pop
cli
add
xor
aam
lcall
mov
dec
pop
or
jbe
lods
xchg
xor
test
fmul
ja
mulb
clc
pushl
mov
fsubrs
mov
jns
mov
mov
ljmp
scas
pop
cmp
xchg
or
loope
movsb
jecxz
jge
jecxz
xchg
cs
mov
sub
call
push
outsb
repnz
mov
pop
mov
cmp
mov
xchg
mov
xor
popf
jbe
lcall
arpl
xor
fbld
add
xor
mov
rol
fs
es
jge
pop
fs
ja
loope
push
jle
sbb
mov
pop
push
mov
ja
ret
jns
shll
test
add
pop
push
das
test
mov
xchg
lods
pop
xchg
or
js
xchg
movsl
dec
scas
scas
push
cmp
call
inc
jge
gs
andb
orl
adcb
cmp
inc
xchg
cltd
in
xchg
divb
inc
inc
push
in
cwtl
imul
adc
incl
add
int3
adc
cmp
rclb
hlt
fdivs
jp
mov
cmpb
mov
cltd
pushf
xor
mov
sbb
andb
jecxz
inc
gs
push
in
int3
insb
pop
push
lock
int
push
adc
inc
add
sbb
into
sbb
shrl
in
arpl
idiv
mov
pop
push
gs
add
xchg
mov
mov
int3
call
out
fsubl
push
es
add
jb
es
test
in
outsl
clc
dec
jmp
pop
loop
fsubl
js
or
pop
stos
out
inc
dec
out
lds
loop
arpl
xchg
popf
pop
dec
sarl
sub
xor
jmp
mov
ds
testl
sti
ret
and
enter
push
ljmp
push
out
es
mov
push
movsl
les
and
mov
mov
sbb
lea
sbb
adc
fcoml
sub
jmp
es
lcall
or
lret
pushf
push
sub
inc
jae
cld
pop
add
ss
incl
decl
push
sub
xchg
mov
mov
cmp
out
call
mov
lods
fstpl
daa
cwtl
jge
insb
inc
jl
fbld
cmp
push
xor
sar
jmp
jno
jnp
mov
cmp
jecxz
mov
push
loopne
cmp
push
xor
inc
pusha
adc
jmp
in
dec
fsubr
jmp
pop
mov
outsb
in
pop
adc
xchg
mov
ljmp
ss
mov
pop
gs
xor
xchg
lock
cli
mov
in
mov
std
incl
ja
pop
sbb
xor
xor
aam
dec
icebp
push
inc
addl
cli
lcall
movb
stos
xchg
shl
insb
and
into
ja
cmpl
ljmp
or
sti
arpl
testb
sub
dec
outsl
cmp
outsb
leave
clc
push
cs
push
sbb
je
lcall
popa
and
mov
or
push
cmpsb
mov
lock
ljmp
lcall
push
push
movsb
pop
lret
adc
push
out
mov
push
push
lcall
sbb
ljmp
lods
iret
fidivrl
mov
add
cmpsl
inc
stos
push
es
data16
xchg
in
xchg
andb
call
sbb
dec
xor
insl
in
xchg
in
jmp
dec
cli
dec
addr16
dec
xchg
xor
add
adc
decl
jo
mov
aaa
inc
sar
dec
call
lcall
pop
lods
pusha
push
inc
outsb
mov
lcall
psubd
ja
adc
push
pop
and
mov
fstp
mov
jle
or
decl
clc
out
mov
push
add
in
mov
lcall
outsb
cmp
in
stos
jo
lds
add
enter
mov
jae
or
mov
js
xor
fisubl
mov
movsl
and
in
test
bound
lock
adc
dec
mov
in
sub
das
fists
rorl
ljmp
jmp
out
scas
push
out
add
mov
aam
inc
lret
mov
lods
rol
xor
xchg
inc
add
je
fdivs
adc
ret
scas
mov
call
mov
and
decl
je
push
push
loopne
call
clc
xor
cmpl
xchg
mov
dec
mov
push
test
adc
ja
sub
mov
int3
jae
inc
and
gs
leave
lods
cmp
inc
je
addr16
decl
shlb
dec
sarb
pop
out
pop
lcall
xor
sbb
mov
pop
ljmp
mov
mov
out
testl
mov
push
jmp
in
push
add
pop
aaa
dec
decl
inc
cmp
pop
outsb
incl
pop
cmp
es
sti
push
daa
xchg
lea
or
push
dec
movsl
add
push
lcall
jns
xchg
test
inc
rcrl
aad
clc
lds
push
sub
jle
ds
jg
lods
insb
fs
pop
cmpb
sbb
insl
int3
cli
push
shll
jae
inc
sar
pushl
adc
jns
imul
es
push
sbb
sbb
sub
jg
loopne
push
mov
push
scas
adc
rcrb
nop
ret
inc
jb
into
clc
pop
adc
mov
jo
in
stc
aam
and
or
jne
ror
dec
clc
dec
fwait
cli
arpl
jb
ret
jge
cmp
jae
lcall
xchg
out
loopne
cli
decl
sahf
xchg
divb
jmp
leave
aam
hlt
mov
lret
div
divl
pop
mov
clc
lea
gs
inc
sti
cmpsl
rclb
and
sub
lcall
xor
loop
repnz
test
push
pop
sti
cmp
jmp
push
or
les
push
leave
clc
call
into
pop
fsubrl
call
dec
std
dec
mov
nop
dec
pop
hlt
mov
pop
jmp
fldt
fcoms
movsb
adcb
in
in
inc
push
sub
xchg
dec
addb
xchg
cs
sbb
jl
push
xchg
lea
fwait
mov
xchg
push
js
idiv
stc
push
insl
dec
jno
decb
das
sub
mov
add
jnp
jbe
fdivrl
ljmp
mov
addb
loopne
sbb
jl
xchg
jg
sbb
push
stos
or
inc
adc
jmp
xchg
mov
stos
mov
sbb
rol
cmc
lret
cmp
scas
incl
cld
mov
ss
scas
adc
dec
cmp
pusha
jmp
ljmp
das
adc
lahf
fldl
incl
icebp
xchg
loopne
mov
inc
jb
mov
mov
jb
cmp
popf
jmp
idivb
addl
or
push
jle
lods
sub
out
in
jae
mov
jmp
xchg
sahf
cwtl
jae
jno
rcrb
adc
mov
pop
xchg
mov
push
and
adc
repz
movsb
fcomp
and
pop
mov
ret
xchg
xor
fs
push
mov
rorl
jno
dec
jmp
incl
pop
test
mov
pop
popa
std
ds
pushl
mov
jno
test
loopne
dec
sbb
dec
cmp
cmp
jns
adc
adc
inc
or
adc
mov
fbld
mov
fstpt
leave
int3
xor
hlt
mov
in
xchg
in
jns
incl
mov
mov
push
pusha
sbb
in
mov
jns
xchg
test
je,pt
xor
pop
fsubl
jns
mov
xor
mov
repz
les
fisttpl
insb
incl
rorb
cmpb
xchg
push
and
mov
pop
sti
sti
clc
ret
loop
jecxz
pushl
cmpb
es
pop
xor
dec
lods
adcl
jnp
mov
aaa
xlat
xor
cli
fbld
push
mov
fnstenv
jo
int
ret
incl
pop
pop
aam
sbb
xor
cwtl
dec
lea
outsl
in
loop
xor
test
ficompl
jle
mov
jl
sub
hlt
mov
es
jmp
xchg
dec
lret
addr16
pushl
enter
xlat
sbb
bound
adc
xor
pusha
incb
call
or
dec
xchg
out
jo
stos
in
out
mov
lahf
stc
push
dec
jecxz
push
dec
js
adc
adc
sbb
and
shrb
cmp
jg
mov
pop
adc
cmpb
ljmp
imul
add
aam
jb
out
jae
iret
pop
addb
jnp
scas
add
call
cltd
xchg
mov
lods
sbb
sbb
sbb
je
mov
jg
xchg
jmp
out
jo
jmp
jo
sti
add
out
movnti
loopne
mov
decl
sbb
xchg
in
sub
mov
mov
out
cwtl
add
sub
mov
cwtl
frstor
movsb
sti
std
outsl
sub
dec
movsb
lahf
add
fcompl
decl
lcall
push
adc
pop
test
cli
jg
xor
inc
loop
mov
pop
dec
sub
sti
push
xchg
data16
out
push
jp
jno
xor
mov
outsl
sbb
lahf
in
add
out
and
xchg
call
sbb
jg
jns
mov
sub
std
inc
dec
aam
mov
xchg
mov
ret
insb
repnz
ljmp
negb
push
pop
aas
sbb
pop
pop
aas
push
mov
lods
arpl
clc
cmpsl
or
sbb
fistpl
sti
inc
xorl
idivb
jbe
mov
pop
mov
push
into
push
incl
xabort
test
pop
cmp
jb
lret
add
scas
jns
jmp
inc
inc
push
idiv
mov
jmp
adc
subl
add
jno
std
jno
lods
xchg
decl
dec
dec
pop
sbb
mov
mov
repnz
add
pop
cmp
push
lods
jmp
cli
repz
les
cmc
pop
lret
sub
sahf
test
ljmp
or
xchg
orb
cld
cmpl
xor
xor
sub
outsl
xor
loopne
test
insl
and
sbb
jg
pop
pop
out
pop
mov
dec
sub
into
dec
outsl
in
movsl
mov
adc
inc
pop
jns
int
lret
mov
nop
nop
push
jo
push
mov
pop
test
adc
call
addb
and
lea
outsb
mov
sub
mov
jnp
aas
push
loopne
push
test
pushf
fldcw
mov
mov
and
and
add
data16
sar
ds
xor
mov
push
mov
adcl
ss
jmp
jae
add
push
aad
sbb
jecxz
cmp
loop
inc
pop
add
insl
out
divl
pusha
addr16
imul
loop
cmpsl
fcomps
jmp
in
add
lods
decl
divl
cmp
mov
inc
cmc
pop
xlat
mov
cmc
outsl
rcr
je
out
jo
fcoml
stos
cmpsb
shll
or
call
pop
jmp
or
ja
adc
lods
adc
incl
imul
xor
lods
push
sar
jmp
imul
mov
sub
sbb
loop
pop
cmc
leave
push
repnz
mov
imul
cmp
decl
mov
sti
pop
out
je
lds
in
jecxz
test
dec
adc
js
xchg
sub
lcall
repz
in
clc
cmp
sbb
int
mov
inc
xchg
ss
mov
jmp
lcall
dec
inc
cmp
inc
sbbb
cs
pop
and
dec
imul
lcall
inc
imul
lds
pop
es
stos
inc
adc
mov
dec
ljmp
out
call
cvttps2pi
pop
bound
out
mov
sbb
int
addr16
lret
loope
xchg
jl
lcall
cmc
cmpsb
push
jmp
xor
data16
in
mov
jle
call
dec
push
cmp
xchg
lcall
push
mov
inc
sbb
mov
lret
lock
dec
adc
or
leave
fs
xchg
push
mov
in
inc
lcall
jp
cmc
xor
xchg
in
or
jo
jns
std
lock
pop
xchg
lods
adc
pop
pop
ss
add
call
insb
hlt
xchg
es
push
sub
xchg
pushf
sbb
loop
cwtl
lock
jg
rcrl
sahf
xlat
loope
addr16
xor
in
je
mov
mov
ljmp
mov
lcall
and
cmp
dec
das
shlb
ss
lret
push
dec
add
adc
pop
icebp
es
fwait
sub
mov
cmp
into
sub
xlat
xchg
call
cld
push
sub
mov
test
and
mov
sar
mov
cld
jecxz
decl
mov
lods
xor
pushf
pop
xor
mov
outsl
dec
std
sub
mov
aam
or
ds
loop
jmp
xchg
decl
iret
xchg
jne
lret
jl
sbb
notl
shll
jmp
mov
mov
test
jb
push
mov
mov
sub
add
push
cmp
push
pop
adc
or
pushl
test
xchg
scas
and
push
push
inc
cmp
je
clc
jae
jg
lret
jnp
mov
ljmp
xor
insl
xchg
jns
jnp
sub
js
add
ds
mov
lret
fcos
inc
imul
popl
fildll
cmp
cmpsb
inc
sub
outsb
push
jae
mov
mov
cs
adc
es
mov
xchg
mov
insl
imul
sub
pop
add
xrelease
jns
cmp
mull
cwtl
adc
decl
icebp
mov
ljmp
mov
sub
pop
addr16
xor
mov
in
stos
push
jae
andl
pop
inc
stos
jg
xor
xor
test
inc
ljmp
inc
stc
add
inc
pop
cli
adc
inc
push
fwait
cld
add
push
leave
lock
daa
mov
ljmp
jmp
inc
xchg
test
imul
iret
popf
mov
sbbl
pushf
enter
jmp
stos
notl
movb
pushf
gs
mov
cs
dec
sbb
mov
mov
outsl
mov
ljmp
dec
inc
scas
mov
decl
lods
dec
dec
clc
aas
inc
adc
jg
stos
pop
push
ljmp
lcall
cltd
xor
add
add
out
jnp
fs
xchg
ret
pushl
ljmp
adc
cmpsl
xchg
ret
sbbb
fbld
sbb
ret
test
mov
push
shlb
and
dec
mov
sub
pop
jmp
fwait
add
push
fisubrl
xchg
aam
sub
scas
fcmovnb
pushl
push
stos
loope
pop
dec
jnp
test
imul
aaa
add
pop
xor
es
jmpw
push
jmp
ret
lds
jecxz
or
arpl
andps
decl
cwtl
cli
scas
mov
lret
xchg
cmp
sbb
into
in
mov
jp
bound
int3
dec
sub
in
rclb
imul
out
decl
out
dec
add
push
inc
push
mov
idiv
pushl
push
lret
mov
push
int3
cmp
aas
dec
jp
shlb
jmp
ss
dec
sti
cld
pop
fsub
cli
cmc
pop
sbb
mov
mov
insl
cmp
call
lret
test
aas
pop
push
xlat
pop
inc
lret
leave
arpl
ljmp
or
jge
inc
xchg
or
push
cmp
adc
jne
in
je
arpl
pop
adc
adc
sbb
clc
lret
sahf
repz
mov
xor
stc
mov
sbb
adc
fdivs
push
xchg
push
inc
push
loopne
ss
lcall
orb
jae
xchg
xor
fists
mov
mov
adc
test
repnz
push
in
jge
add
xor
dec
fs
cwtl
cli
sbb
dec
lret
pop
jl
lcall
cmpsl
inc
mov
push
pop
adc
lds
adc
add
jg
push
xor
push
xor
xor
mov
int
add
lods
lds
dec
jae,pt
sbb
pushl
xchg
pop
cli
xchg
pusha
xor
sbb
jmp
repz
rclb
imul
fbstp
adc
pop
das
push
dec
jmp
ficompl
ljmp
mov
and
dec
sub
dec
aas
mov
pop
cld
push
jbe
ja
push
sti
ljmp
lcall
icebp
xor
mov
and
dec
inc
test
mov
jmp
int
sbb
je
and
aaa
pop
jle
pop
addr16
dec
rcll
inc
xchg
incl
cmp
or
mov
jnp
les
jge
or
add
pop
cli
cmp
call
sub
push
inc
js
faddl
and
push
adc
mov
fs
pushl
sub
hlt
add
ds
mov
fcompl
int3
mov
mov
and
popw
xor
jmp
lcall
ja
or
sub
push
loop
movsb
js
jae
or
ja
orb
mov
mov
loopne
mov
scas
out
add
xor
adc
aas
fsts
pop
pushf
hlt
adc
loope
aam
xor
arpl
ja
ret
sbb
sbb
push
loop
xchg
fsubl
sbb
cmpb
test
int3
xchg
jge
jbe
test
xchg
loopne
out
jbe
fidivrl
jecxz
fs
lcall
pushl
xor
mov
and
stc
inc
mov
movsb
lret
insb
in
or
insb
es
call
imul
push
mov
pop
loopne
ja
push
and
mov
call
call
stc
js
ret
adc
xchg
mov
in
idiv
jbe
jp
or
dec
aaa
dec
lret
xchg
sbb
pushl
dec
aaa
cwtl
les
cmpsl
aas
jg
jae
insl
lea
enter
push
xchg
pusha
dec
call
cmp
addb
insb
sub
and
fs
sbbl
mov
out
popa
jb
dec
ret
rol
dec
shlb
sbb
clc
int
call
das
or
icebp
ret
int
add
das
incl
xchg
push
scas
cltd
push
adc
push
push
mov
push
decl
inc
cltd
into
lahf
je
loope
in
push
in
cltd
sbbl
imul
lret
jno
shrb
lcall
out
ja
scas
cmp
or
adc
jl
sti
loop
testl
mov
outsl
nop
push
dec
pop
fmuls
pop
shl
xchg
and
pop
mov
jne
and
inc
neg
xchg
ljmp
outsl
xor
mov
sbb
dec
mov
xchg
mov
xchg
adc
decl
lock
into
popf
pop
jl
outsl
sbb
bound
ljmp
mov
lock
lcall
or
ss
pushl
fcmovb
pusha
xor
lea
push
or
dec
stos
dec
into
add
cmp
push
cmovnp
add
popa
sub
clc
loope
jae
ljmp
stos
loop
jbe
pop
rol
jge
int
sbb
in
aas
mov
out
xchg
or
jmp
icebp
test
and
imul
sbb
ret
test
dec
jns
and
add
icebp
xchg
add
xor
or
fucomip
xchg
and
push
rcr
orb
push
mov
mov
ljmp
and
jnp
call
xorl
xor
lcall
std
gs
sbb
dec
push
push
jns
or
or
lcall
pop
sar
mov
fcomp
ss
std
add
test
lock
add
sub
rcrl
or
std
stos
gs
sub
push
icebp
sub
sbb
lcall
cmc
xor
movsb
mov
imul
xchg
cmp
push
int3
je
dec
jo
iret
scas
jnp
ljmp
dec
das
or
mov
fwait
dec
cltd
loop
push
stos
push
push
pop
inc
sbb
enter
xor
clc
call
mov
mov
xchg
mov
inc
xor
jmp
clc
stos
test
decl
add
jle
xchg
and
sbb
push
mov
pushl
xor
dec
rol
or
cmp
idivb
ss
push
add
decl
enter
inc
mov
dec
push
jnp
jmp
test
push
sbb
lds
inc
sub
push
insb
mov
std
fmull
cmpsl
inc
mov
inc
mov
mov
test
jmp
cld
pop
or
fistpll
mov
and
xchg
data16
jmp
mov
bound
aad
fst
nop
out
cli
aam
rcl
jp
pop
add
lcall
pop
outsb
cltd
jnp
and
jg
push
mov
sbb
dec
sbb
or
mov
ds
jp
xor
rcrb
jmp
repnz
push
jne
inc
push
adc
sub
mov
or
xchg
hlt
mov
sahf
test
pop
call
pop
inc
out
stos
push
fistl
inc
jbe
enter
int3
outsl
scas
xor
ja
fdivp
push
sahf
popa
incb
lret
mov
add
outsb
es
mov
fisttpl
mov
mov
push
xor
jmp
xchg
adc
mov
int
mov
add
mov
pushf
ja
or
je
push
outsl
iret
cmc
leave
fucomp
in
jnp
cmp
mov
pushl
inc
cs
rclb
push
out
cmpsb
jbe
repnz
call
test
test
xchg
pop
sub
and
jno
mov
loopne
push
dec
xor
lods
cmp
outsb
lods
out
cmp
aad
fcomps
invlpg
jg
jg
xchg
dec
sbbl
pop
icebp
sub
incl
shlb
cltd
loop
jg
add
pop
xlat
sbb
fstpt
cltd
xor
push
mov
test
jle
push
cld
js
sbb
lcall
out
hlt
fsubl
push
iret
repz
add
lcall
incl
lds
scas
inc
adc
pop
pop
mov
xchg
out
cmp
decl
lock
dec
jmp
loope
and
leave
xorl
sub
incl
incb
cli
dec
or
shl
popf
inc
out
cmp
int3
fimull
jle
push
xchg
mov
ror
mov
in
cli
arpl
mov
out
fisttpl
jae
add
incl
jmp
pop
mov
inc
fcomi
or
fwait
or
sbb
pop
cmpsb
call
scas
decl
notl
xchg
pop
shlb
sbb
mov
mov
inc
outsl
lock
adc
shrb
addr16
stos
int3
mov
test
pop
inc
xlat
enter
sbb
pushl
scas
xchg
cmp
jne
push
popf
call
movsl
out
or
sub
mov
or
add
rcl
sbb
insb
outsb
xchg
shll
adc
lret
push
repnz
mov
nop
pop
or
out
stc
jbe
inc
into
fwait
in
lret
push
fwait
cmp
stos
out
mov
incl
jp
inc
dec
fcompl
repnz
jb
cltd
push
inc
mov
sub
push
cld
mov
mull
mov
aam
push
and
add
push
dec
cwtl
imul
xor
adc
filds
lcall
mov
mov
adcb
inc
cli
cs
outsb
inc
jmp
sti
inc
dec
pushl
jp
mov
adc
ds
mov
adcl
mov
or
arpl
call
jo
jno
sub
stos
inc
dec
incl
fidivs
je
sbb
mov
xchg
push
push
lret
out
lahf
lea
test
fdivrp
pushl
sub
lcall
fsts
pop
daa
cmp
sbb
sub
cli
fcomip
pusha
dec
jecxz
push
add
jge
fs
jle
ret
out
add
ljmp
xchg
test
jl
in
xchg
addr16
outsb
sub
dec
loop
xchg
mov
decl
and
xor
stc
cmp
jl
mov
push
mov
andb
stos
adc
xchg
dec
xor
pop
mov
add
sub
mov
rcr
or
cli
pushl
rcl
das
test
or
das
adc
adc
aad
cmc
enter
adc
sti
dec
push
pop
insb
and
adc
fwait
nop
adc
mov
imul
sub
pop
cmp
push
hlt
call
cld
incl
adc
test
or
mov
nop
insl
mov
adc
jmp
add
xchg
mov
mov
adc
push
or
pop
pop
mov
daa
decl
lods
in
push
xor
mov
jg
mov
nop
outsl
scas
or
mov
adc
sbb
sar
push
int3
inc
cmpsl
call
loopne
jnp
dec
out
mov
testl
lcall
iret
push
fidivrs
mov
jno
cltd
out
or
out
add
cld
insl
push
lcall
inc
mov
loope
dec
cmpsb
and
cli
out
jecxz
ljmp
mov
mov
inc
push
fistpl
lods
push
cmp
mov
data16
or
in
into
scas
sbb
jne
stos
lods
dec
jg
add
cmp
in
mov
insb
mov
pop
repnz
mov
out
pop
sub
cli
xchg
fstl
cmc
sti
scas
mov
mov
loop
popa
sti
pop
cmp
pop
lcall
pop
mov
mov
adc
push
ds
mov
mov
sbb
pushl
xor
imul
mov
push
in
lods
jg
pop
mov
push
cld
ljmp
dec
mov
sbb
xchg
pop
add
sub
lods
xchg
loopne
insb
stc
dec
ret
clc
call
rolb
sub
popa
rcrb
inc
lahf
or
cmp
call
outsb
rclb
call
in
mov
inc
loope
mov
xorb
lret
icebp
push
cld
push
idivl
push
rcr
out
mov
call
insl
mov
call
pushl
sub
in
adc
lods
std
mov
nop
fsubl
push
and
lods
or
mov
xchg
fadds
push
mov
fucomp
jmp
xor
out
daa
push
sbb
call
jns
xchg
inc
or
dec
xchg
aad
xor
jae
sbb
push
sub
in
insb
je
lahf
gs
stos
dec
and
sbb
lahf
aam
ljmp
push
aad
inc
enter
jno
daa
add
iretw
sbb
add
in
jb
loope
push
fstpt
jl
int3
repz
shlb
movsb
pop
jge
test
fwait
call
sub
mov
add
test
cmp
inc
xor
sub
xchg
inc
incl
cld
in
clc
xchg
jmp
pop
sti
or
inc
das
mov
mov
mov
adc
cmpsb
addr16
xchg
insl
push
cltd
int3
or
iret
and
xchg
repnz
lock
scas
or
movsb
stos
push
mov
mov
xor
mov
decl
xor
mov
add
xchg
xchg
mov
dec
mov
sbb
lcall
std
and
push
dec
insl
loopne
adc
lods
jno
pop
pusha
pusha
mov
mov
decl
cmp
dec
mov
or
arpl
imul
adc
lock
cltd
es
jmp
out
rcrb
lahf
cmpsl
adc
push
push
in
push
movsb
arpl
push
xchg
imul
ud0
ljmp
std
xor
popa
lock
mov
and
push
ljmp
jne
ljmp
sbb
adc
inc
mov
fucomip
mov
imul
aam
testl
xlat
cs
add
sbb
mov
ljmp
negl
cwtl
test
or
dec
movsl
add
jns
dec
and
cmp
pop
out
ljmp
adc
and
push
mov
out
aaa
mov
or
and
push
push
ja
ror
movsb
mov
xchg
push
mov
dec
cld
xchg
adc
dec
pop
add
adc
sarl
jns
push
incb
test
inc
rcl
dec
dec
xchg
inc
test
jmp
mov
rcr
leave
dec
outsb
jle
mov
add
or
sbb
push
adc
call
push
aaa
repz
sti
ljmp
lcall
xchg
nop
mov
addr16
xor
mov
aam
mov
cs
ljmp
xor
cli
push
stos
mov
or
mov
add
out
lret
scas
pop
sahf
in
pushl
or
subl
mov
pop
bound
mov
mov
push
cld
fcomip
into
sbb
out
rcr
aaa
fs
inc
sbb
cmp
fcompl
pushl
in
jl
xchg
jnp
stos
or
in
decl
mov
jmp
jle
mov
jge
push
pusha
lods
add
aas
test
and
jg
adc
mov
push
js
mov
clc
push
push
jnp
icebp
fbstp
mov
lock
pop
stos
cmp
addl
adc
dec
sahf
or
lcall
push
repz
jns
fabs
clc
xor
add
xchg
jge
out
xlat
push
push
jg
in
pushl
cmp
addr16
or
dec
and
lahf
sbb
bound
pushl
pop
stos
push
outsl
cwtl
enter
push
inc
sub
inc
pop
in
test
pushf
mov
rcr
out
pusha
jle
and
pushl
mov
jns
mov
mov
adc
cmp
pushl
aas
shrl
mov
xor
sbb
xchg
cwtl
cld
movsl
cmp
sub
inc
in
sbb
push
mov
mull
cli
sbb
mov
jle
pop
and
xlat
sbb
jb
comiss
out
lock
ret
test
leave
fs
push
adc
fmuls
inc
push
stos
dec
testb
fsubr
rclb
dec
jae
cli
repz
fnstenv
frstor
pushf
xor
mov
push
insb
call
test
add
mov
cmc
mov
push
inc
xchg
add
ja
and
jmp
jmp
test
jb
xor
in
aas
sahf
or
lods
fs
and
rcr
out
aam
mov
decl
xchg
insb
testb
pop
or
adc
inc
inc
cs
add
pop
lret
ja
enter
popa
sub
inc
imul
cltd
or
notb
pushl
or
push
cmc
std
jp
jle
fwait
js
data16
test
xor
dec
dec
sbb
pushf
addr16
lcall
fadds
sub
scas
lcall
fwait
repnz
and
sti
rorl
ljmp
test
lds
mov
lea
sarl
xchg
rcrl
push
call
jmp
les
mov
xlat
sbbl
xor
incl
pop
cmp
jmp
aam
pop
sub
inc
movsl
mov
iret
arpl
incl
cld
stos
push
das
inc
repz
jge
jp
and
daa
dec
jmp
jbe
fistpl
pop
sub
rcll
test
adc
int
pop
stos
xchg
jmp
mov
test
cmp
pusha
stos
shrl
add
mov
cmc
xor
pushf
push
loopne
incl
pop
or
or
out
aam
push
outsl
enter
and
incl
call
outsb
sbb
fstpt
sti
loopne
pop
ja
int
out
mov
lea
jbe
pop
xchg
or
ficomps
gs
pushf
and
pushl
pop
insb
push
nop
add
lock
test
dec
pop
loopne
add
repz
notb
fucomi
call
cmp
mov
xor
rorl
js
lds
stos
lahf
fcomip
mov
fistl
cs
iret
mov
xor
clc
ss
push
jg
inc
sbb
mov
sti
pop
cmc
repz
sbb
cmp
int3
rcrb
mov
jge
cli
ljmp
jmp
xchg
xchg
xchg
jo
lret
out
pop
push
out
sti
mov
push
in
test
rclb
xor
int
lcall
xchg
xor
push
dec
add
aaa
xchg
bound
lods
add
ljmp
movsl
or
jb
pop
cmc
pop
call
fsub
mov
jne
fxch
dec
sahf
mov
movsb
xlat
xchg
mov
and
and
subl
call
push
cmp
adc
xor
outsl
insl
mov
mov
pop
cld
cmpb
xchg
jge
ljmp
ss
cmp
jg
push
pop
ret
xchg
xchg
mov
and
imul
fwait
or
or
push
jl
inc
and
in
jo
std
lock
or
mov
dec
js
jg
hlt
stos
rol
cs
pop
out
pop
sbb
es
add
leave
or
out
std
mov
incl
dec
scas
sahf
cltd
pop
loope
psrad
loop
lahf
popa
sti
pop
fistpll
rcrb
bound
or
loope
cmp
lret
jl
push
sarb
hlt
push
std
jmp
jmp
sub
adc
or
mov
repz
jne
mov
cmp
lahf
loopne
sub
ljmp
out
scas
mov
out
and
lods
mov
sub
adc
xchg
jne
add
iret
mov
into
cwtl
adc
jmp
sub
scas
and
xor
sub
ret
inc
mov
sub
add
nop
cmp
mov
dec
in
add
cs
pop
xor
inc
lcall
xor
add
and
arpl
xchg
sar
dec
lret
cmp
fdivrs
lcall
out
and
mov
or
inc
push
xorl
arpl
mov
fistps
clc
popf
lahf
aas
lret
in
push
cmpsb
mov
add
xor
pop
test
cmpl
decb
sbb
addl
xchg
and
stos
inc
clc
xchg
adc
dec
fnsave
stos
std
icebp
out
ret
rolb
arpl
cmpb
sbb
fisubrl
xor
out
stc
fistl
cltd
nop
sahf
add
mov
xor
fucomip
sub
pushl
std
out
mov
mov
cld
hlt
dec
or
sti
rolb
pop
adc
cmp
incl
jbe
adc
mov
add
rclb
in
xchg
repz
jns
ljmp
hlt
xchg
and
in
xchg
repnz
xor
xor
dec
rclb
and
dec
mov
lret
pushl
aad
imul
orb
or
jno
shrb
in
sar
inc
lds
mov
bound
stc
pop
or
or
mov
xor
cwtl
mov
mov
aaa
push
cmp
stos
jae
loop
jo
pop
add
aad
pushf
into
pop
gs
stos
daa
rorb
mov
out
adc
jle
xchg
push
scas
aaa
or
nop
cmp
push
xchg
rolb
cld
jmp
sbb
sbb
dec
das
lcall
xchg
jo
pop
adc
push
adc
ret
inc
mov
inc
inc
sub
add
in
push
test
incl
insb
xor
rorl
in
pushf
cmp
frstor
mov
cltd
clc
mov
jae
dec
cmp
decl
jae
inc
and
mov
loopne
mov
jnp
cs
dec
outsb
push
arpl
sahf
dec
pop
dec
xlat
mov
or
mov
pop
cmp
push
in
cmpsl
sbb
ja
push
mov
mov
jno
sti
mov
mov
lret
mov
lock
add
aas
push
subb
loop
scas
mov
lcall
cli
lods
ds
mov
cltd
xchg
psubsb
sub
imull
cmc
mov
cltd
in
cmpsl
repz
popf
neg
pop
push
lret
jno
sahf
lds
cld
das
adc
dec
sbb
mov
loop
hlt
and
mov
out
jns
xor
lahf
rolb
imull
xchg
dec
int
std
std
ljmp
clc
inc
dec
test
or
xor
ja
push
aam
mov
call
pop
stc
aaa
sub
mov
push
pushl
mov
daa
js
pop
pmullw
cmp
pushl
test
mov
int
pop
cmp
hlt
mov
mov
cmp
xchg
sbb
jmp
mov
es
enter
sub
stc
idivl
pop
lret
ljmp
decb
inc
cli
clc
shrl
or
mov
dec
nop
fdivr
or
dec
ja
hlt
mov
imul
inc
cmpsb
push
icebp
mov
mov
lcall
inc
jmp
addl
sarl
cmp
mov
fldt
or
or
out
int
mov
int
xor
adc
cwtl
loopne
es
cmp
ds
xor
addr16
mov
adc
xor
popf
ror
xchg
xor
pop
lcall
loop
adc
and
jo
loopne
inc
cld
xchg
out
les
cmp
stos
punpcklbw
call
sti
insl
insl
dec
out
mov
inc
mov
push
sbb
outsb
xlat
cmp
cmpsb
ljmp
shrb
and
mov
mov
decl
inc
dec
cmp
call
mov
cmp
and
mov
ja
sti
fisubs
ljmp
fucomp
int
and
dec
mov
fbstp
xor
loopne
cmp
mov
stos
sbb
dec
dec
insl
lret
es
nop
ret
out
daa
loop
pop
xor
call
dec
cld
xchg
popa
out
add
cmpb
mov
cmp
sub
mov
incl
leave
mov
into
in
pop
addr16
bound
xor
je
lods
mov
adc
lahf
and
pop
cmp
cld
jmp
popf
xchg
jo
or
xor
mov
out
mov
dec
cmp
inc
jmp
dec
enter
mov
xchg
loope
shr
inc
add
adc
popa
dec
push
cmpb
aaa
insl
cwtl
cmp
sub
orb
mov
sub
rorw
enter
ljmp
pushf
pop
pop
xchg
iret
push
pop
adc
ret
adc
ljmp
decl
cmc
jns
pushf
xabort
lcall
dec
sbb
jne
jge
sub
sub
je
pushl
adc
add
mov
shlb
lds
fdivrl
decl
push
jl
sub
xor
je
mov
outsl
mov
outsw
dec
push
lcall
jle
xchg
sub
enter
test
test
jbe
pop
inc
jno
and
inc
decl
mov
xorb
add
popa
push
imul
push
or
cmp
dec
outsl
mov
cmpsb
stos
cs
xor
xchg
sbb
adc
mov
push
xchg
aam
ds
insb
add
jle
ss
lods
fld
or
xor
mov
xor
fmull
pop
sub
fiaddl
xchg
pop
mov
adc
xchg
scas
into
sarb
xchg
add
xchg
jmp
xchg
inc
mov
mov
and
aam
push
cmc
or
int
adc
lds
mov
pushl
inc
mov
push
adc
divb
xchg
insb
jmp
loop
or
jne
xor
out
sbb
mov
xchg
and
lcall
mov
and
cs
xchg
or
xor
mov
ret
test
pop
pop
xor
jns
icebp
shrl
dec
xchg
outsb
pop
clc
mov
mov
mov
and
cmpsl
aad
sub
jmp
push
mov
fstps
cwtl
and
jno
arpl
enter
adc
and
stos
imul
pop
cmp
sar
mov
jnp
sub
or
mov
das
jnp
inc
cli
je
dec
mov
sar
hlt
stos
adc
cmpsl
push
test
adc
jnp
mov
pop
and
push
clc
test
nop
lret
jmp
sbb
inc
sti
xchg
pop
jne
lds
movsl
scas
add
stos
xchg
loopne
das
clc
call
jg
sub
sbb
enter
mov
sub
ljmp
icebp
int
pop
pop
mov
movsl
mov
lods
pop
lcall
gs
lahf
push
in
fisttpll
cmp
push
clc
or
push
daa
jb
addr16
cmp
mov
lcall
mov
icebp
sub
rolb
rorb
pop
dec
jmp
fbld
repnz
xlat
das
shl
sti
data16
xor
sub
push
bound
cmpxchg
aad
fwait
pushl
es
ds
adc
mov
and
lock
pop
dec
cmpb
xlat
mov
add
test
mov
rcrb
decl
xchg
jmp
bound
push
dec
enter
pop
fdivr
add
cmp
sbb
xchg
ja
push
andl
jno
call
mov
add
push
shlb
jmp
lret
subb
xchg
sub
mov
adc
in
js
out
mov
in
out
mov
pop
sub
xchg
jle
or
ficompl
lea
fprem
push
out
jns
ss
pop
jp
aam
add
test
cmpsb
or
jmp
pop
and
dec
dec
inc
jne
xlat
mov
mov
mov
xchg
call
cmp
push
ss
jbe
inc
rorb
and
mov
std
incl
negb
js
add
pop
rolb
and
jg
or
stos
out
insl
stos
repnz
xchg
iret
ss
cs
xchg
call
sbb
or
jnp
xchg
sub
bound
jmp
and
xor
sub
lcall
outsb
ret
mov
jecxz
inc
and
fdivl
pushf
out
cli
aaa
cld
lds
or
xor
jg
daa
mov
ljmp
ljmp
adc
mov
sub
cmpsl
mov
dec
lahf
scas
pushl
pushl
testb
popa
mov
dec
hlt
xor
in
xchg
loope
add
imull
sub
mov
mov
sarb
or
sbb
pop
insl
push
push
add
sar
call
ret
push
and
mov
pop
bound
dec
cmc
add
pop
bound
mov
jno
xor
decl
rorb
adc
test
push
sti
inc
adc
jg
fsts
sbb
cmp
lahf
and
inc
rolb
mov
jg
dec
jl
movsb
fcomps
aas
out
fsubrl
or
aas
add
xor
fxch
lahf
icebp
lcall
inc
lea
mov
or
mov
scas
and
pusha
adc
cmp
incl
bound
push
push
inc
or
lock
lcall
sahf
inc
jl
call
adc
addr16
lea
dec
or
dec
xchg
fists
mov
jno
popa
jg
jl
or
fadd
je
jmp
fcomip
lcall
arpl
cmp
int3
push
mov
hlt
stc
cmp
cmpsl
imul
call
orb
cli
sbb
pop
loopne
or
push
pop
fnstenv
mov
ss
mov
iret
jp
ret
shrl
fwait
out
loop
insl
jb
arpl
jl
push
jg
aaa
clc
or
push
xor
jno
add
sub
or
call
jnp
int3
jns
shrl
les
sbb
cmp
pusha
mov
or
xor
jmp
cs
cmpsb
imul
mov
push
push
add
repz
mov
jmp
jnp
xor
pop
icebp
mov
rolb
mov
and
test
ss
and
add
not
fwait
xchg
call
sub
gs
aam
orb
sbb
inc
and
pop
aad
decl
mov
pop
push
mov
ja
xor
mov
clc
jp
inc
mov
dec
dec
jg
add
push
out
clc
dec
aaa
xchg
or
in
loopne
jl
push
lods
in
mov
cli
cmp
jg
fbstp
aas
inc
in
mov
scas
xchg
sbb
jns
mov
sar
or
out
lods
or
addr16
rcll
or
inc
push
cmp
incb
pop
rol
sbb
iret
int
and
lods
push
push
leave
cmp
inc
ja
mov
movsb
movsl
and
sub
ret
dec
and
fdivs
add
mov
push
adc
mov
aam
sub
jge
push
addb
sub
mov
stos
mov
ljmp
pop
xchg
inc
sarl
jo
das
xor
loope
dec
subb
nop
xor
dec
and
jbe
push
mov
imul
incl
cld
cli
int3
inc
sub
cmp
sub
add
dec
pop
ljmp
clc
pop
mov
movsl
aas
pop
xor
mov
cmp
call
stc
xchg
mov
enter
pop
adc
ret
add
aad
mov
clc
leave
ja
call
in
jmp
lret
xchg
insl
and
js
testb
adc
cmc
mov
cli
decl
dec
aam
cmp
rorb
outsl
sbb
pushf
ds
push
mov
cwtl
push
ljmp
pushl
loop
js
dec
inc
arpl
je
mov
ljmp
dec
ja
pop
sbb
push
mov
cwtl
push
fcompl
aaa
add
sub
movsb
enter
xchg
mov
loopne
lcall
repnz
mov
outsl
int
mov
bound
clc
sub
mov
mov
pop
mov
cld
cmpsb
aad
jnp
in
in
stc
cs
decl
icebp
arpl
and
clc
lret
cmpsb
jg
aas
insl
mov
or
jo
push
cmp
adc
ret
xchg
je
jnp
test
test
andl
adc
aad
add
lcall
sahf
adc
xchg
cmp
mov
out
mov
push
pushl
out
aad
syscall
shl
scas
insl
dec
push
pop
and
jbe
mov
shrb
je
lods
pop
dec
lods
cli
decl
cmp
push
add
testb
sbb
les
jmp
dec
bound
sub
cli
sub
sbb
jg
icebp
imul
bound
leave
ret
mov
xchg
cmp
aas
imul
xor
sbb
and
pushf
cmp
adc
jmp
or
repnz
ja
or
jle
lcall
push
mov
push
dec
jno
rolb
push
xchg
mov
in
test
stos
xor
int
cld
aas
xchg
fdivp
cmpsl
push
insl
mov
cld
lcall
lret
pop
hlt
sub
or
lcall
add
imul
test
jns
jp
cmp
pop
mov
xor
rorb
dec
es
scas
roll
movsl
inc
jno
inc
fmull
int3
mov
add
decl
cli
int
mov
and
cmp
push
xchg
mov
call
xor
xchg
into
mov
lret
lcall
push
mov
mov
ljmp
test
out
jg
out
cs
popa
jmp
and
call
mov
int
mov
push
mov
pushf
leave
lret
into
shlb
mov
mov
lcall
mov
daa
inc
xchg
jno
sbb
jl
fcompl
jnp
pop
xor
cmpsb
mov
pushl
mov
enter
repz
shrb
dec
fdivrp
es
shlb
and
movsb
idivb
shlb
jmp
mov
jge
dec
xchg
cmp
insl
mov
fwait
hlt
mov
pop
sbbb
pop
jg
ret
ss
dec
jecxz
mov
sti
ds
ret
pushf
arpl
mov
xor
in
fsubr
dec
fisttpl
loopne
push
scas
notl
adc
cmpsl
outsl
outsl
mov
xor
pushl
and
and
aaa
mov
cmpsb
sub
mov
pop
xchg
ds
xchg
movsb
fdivs
inc
cltd
lcall
sub
adc
movsl
jae
rol
cmp
pushf
cld
lock
cmp
scas
add
data16
xor
push
mov
pop
and
adc
subl
ljmp
pusha
xorb
cs
dec
cltd
insl
xor
shll
jg
pop
cmpsb
push
xor
cmpsl
xchg
fwait
adc
pop
rclb
lock
mov
fsubl
outsl
fs
and
jmp
test
sub
xor
jle
pop
ja
add
and
push
jb
nop
xor
inc
sub
pop
add
rep
mov
incl
loop
cmc
push
add
jg
mov
xchg
cwtl
movsl
inc
cmp
xor
xchg
les
shl
out
pop
adc
ret
in
outsb
out
mov
fwait
fwait
sbb
lcall
sbb
sub
push
shlb
aas
xlat
into
cmp
xchg
or
pushl
xchg
mov
into
xor
xorb
call
orb
rol
jbe
sub
test
sub
adc
pushl
pop
xchg
jae
pop
or
add
mov
mov
and
jno
sub
jmp
enter
sbb
inc
add
sbb
jecxz
cmp
xchg
repz
std
out
jl
sub
rorb
stos
adc
outsb
sahf
in
mov
mov
dec
insb
mov
out
xor
cmp
cmpsl
adc
call
push
jne
adc
out
cli
lcall
or
jle
imul
jb
jb
mov
test
pop
jno
mov
pushl
mov
push
les
shl
test
jbe
shrd
jp
mov
leave
pop
loopne
jp
mov
mov
mov
hlt
fisttpl
push
mov
mov
rorl
incl
push
or
jb
xchg
sub
xchg
push
jne
xor
xchg
or
mov
jae
sarl
out
inc
imul
ret
cwtl
enter
data16
test
jg
adc
mov
mov
fwait
out
mov
pop
inc
stc
les
outsl
adc
call
ret
daa
xchg
inc
addr16
dec
pushl
sti
jmp
fsubs
push
push
adc
call
adc
aaa
or
fcomi
loope
idivl
loop
rep
cmpsl
or
inc
mov
nop
jb
push
dec
repz
cmp
ljmp
pop
xlat
sub
ja
nop
loop
test
and
call
xchg
pop
jg
movsl
lcall
dec
cs
popf
lock
dec
shll
clc
subl
jp
cmp
push
xchg
mov
in
loopne
xchg
test
faddl
pushf
int3
out
gs
mov
call
test
dec
mov
add
jno
sub
adc
jg
mov
lret
xlat
adc
mov
mov
adc
mov
inc
lcall
sub
mov
call
lret
arpl
call
cld
mov
pop
and
call
inc
cmp
lcall
in
or
dec
push
fs
orl
dec
in
cwtl
mov
jle
or
loopne
inc
aad
lock
mov
test
inc
fdivp
jg
and
cld
je
repnz
mov
shlb
pop
jae
xor
ret
int3
lahf
jg
cmpsb
inc
jecxz
es
call
push
or
adcb
int
lret
mov
cs
cmovae
push
xor
dec
frstor
mov
jmp
mov
rcr
insl
adc
jmp
pop
test
fs
mov
adc
lods
loop
jmp
xchg
push
inc
pusha
jecxz
bound
dec
sbb
push
iret
cmc
sub
movsl
add
add
insl
fiadds
ret
mov
push
outsb
out
dec
or
cmp
push
cmp
pushf
sbb
pop
mov
lret
cwtl
sbb
fs
leave
mov
cmpb
fistpl
sahf
lock
imul
ss
test
sub
aas
sub
shll
call
jnp
repnz
rcll
mov
xchg
mov
mov
addr16
mov
out
sbbb
stc
js
aad
push
mov
hlt
cmp
sbb
fimull
shrl
inc
imul
aas
pop
hlt
icebp
xchg
xchg
sbb
mov
jge
pop
mov
jmp
mov
dec
pop
mov
and
inc
arpl
lahf
add
xor
dec
cwtl
pushf
popf
in
pushl
sti
jno
inc
es
std
pop
shr
mov
and
sarb
arpl
call
jle
jle
and
cmp
push
lcall
lods
cli
negb
sbb
mov
sar
pushl
push
jae
xchg
cmc
lds
cmpb
mov
pop
mov
andb
test
iret
cli
rorl
nop
inc
mov
ffree
js
mov
stc
lret
rcll
xor
test
jg
adc
addr16
mov
popf
or
push
sbb
push
pop
cmpsb
inc
jbe
sbb
sub
aad
mov
insl
das
mov
lea
ljmp
inc
push
insl
inc
mov
adc
mov
sbb
sub
es
cs
push
lcall
sbb
dec
dec
push
sti
fistl
lea
xchg
cwtl
mov
fadd
dec
popf
clc
mov
add
lock
lret
filds
fisubs
js
xlat
cld
jge
cli
jbe
ljmp
pushf
test
inc
cmp
and
popa
mov
jl
std
rcl
stc
xchg
out
adc
add
push
call
loope
inc
pop
sub
incl
mov
stos
xchg
inc
sbb
enter
xor
in
dec
push
sbb
imul
incl
imul
mov
xor
sub
pusha
fs
and
pop
cmp
jl
pushl
out
test
add
imul
negb
xchg
jbe
ja
cmp
pop
dec
mov
dec
clc
repnz
decl
lods
mov
mov
or
mov
jmp
ja
cld
ljmp
push
add
sahf
xchg
call
push
mulb
jns
mov
and
mov
call
insl
je
lret
orb
jge
cmp
cmpl
dec
dec
push
xor
fcomip
mov
lods
test
out
fists
xchg
mov
mov
cli
in
push
loopne
incl
repnz
mov
jmp
jb
incl
aaa
adc
push
add
pop
in
pop
jp
std
pop
rcrb
mov
jmp
imul
mov
pop
in
push
aas
out
mov
fldcw
mov
mov
xlat
ljmp
add
cmp
add
jns
jbe
sub
cmp
push
jg
sub
in
cmc
lock
mov
dec
mov
xchg
stos
cs
aad
stos
mov
mov
dec
stc
pop
outsb
incl
sub
daa
in
ficompl
add
pop
mov
into
sbb
sub
incl
js
inc
and
xchg
lea
xchg
and
test
pop
sub
mov
scas
mov
pop
or
add
into
bound
xchg
dec
ds
mov
jge
dec
fsubs
fs
aas
cld
pushf
in
dec
jg
jl
dec
pop
imul
or
repz
sbb
ret
dec
pop
and
jle
xor
aas
mov
loopne
push
pop
addr16
testl
repz
xor
test
subb
jmp
inc
mull
fmull
insb
repnz
jmp
cmp
das
jb
lret
in
add
movsb
in
mov
fwait
jg
add
jae
sub
int3
inc
gs
or
fcos
fmul
push
cmp
add
ss
inc
xor
push
lods
sub
cmp
jmp
xchg
mov
inc
push
movsb
imul
add
cmp
ljmp
ror
shlb
cmp
pop
scas
and
inc
mov
jmp
ret
ss
and
pop
fistpll
and
std
dec
jns
lret
frstor
test
inc
aaa
imul
xchg
aam
inc
mov
mov
inc
aaa
sub
or
jl
jno
lock
test
xor
enter
fistps
push
jmp
mov
arpl
xchg
jnp
dec
dec
jns
sub
call
sbb
or
pop
nop
cli
lret
push
repnz
mov
push
mov
mov
push
cld
mov
addb
push
pusha
adc
stos
and
jmp
dec
cld
cltd
inc
inc
pop
jg
sub
xor
daa
es
clc
add
out
inc
jb
idivl
repnz
in
or
jae
sub
add
test
pop
mov
mov
insl
sahf
pop
lea
cld
ljmp
dec
pop
arpl
sub
adc
add
subb
stc
mov
insl
mov
ljmp
insb
int
dec
lock
test
push
dec
popf
bound
sarl
mov
pop
cmpsl
sti
in
call
inc
icebp
test
inc
mov
mov
es
or
mov
inc
push
cld
push
rclb
xchg
adc
adcl
icebp
cmp
jge
movsl
xlat
dec
fcomip
pushl
pop
lcall
mov
ficompl
cmp
mov
mov
jmp
xor
mov
lods
sti
sub
sub
call
std
push
out
push
push
sbb
cmp
and
adc
je
call
adc
gs
daa
stc
jns
adc
fsubrs
inc
pop
enter
pop
int3
xchg
in
mov
jg
mov
ljmp
jbe
jbe
mov
xlat
call
sub
ret
lcall
mov
subl
cmp
std
pop
add
lcall
sub
cwtl
clc
pop
outsl
clc
jg
mov
jno
in
cmp
xor
inc
push
mov
scas
cli
push
lret
or
mov
or
push
mov
add
imul
sub
sub
stos
mov
insl
lods
pop
popa
pop
mov
pop
push
decl
out
ds
sbb
xchg
ds
adc
pop
adc
insl
scas
clc
ljmp
dec
scas
dec
arpl
ffreep
nop
insl
sub
roll
outsl
push
dec
std
scas
incl
ficoml
fsts
add
int3
and
inc
ret
in
mov
cmp
decl
aaa
push
jbe
ljmp
shlb
aas
stc
int
sub
ss
loop
cmc
std
enter
aaa
xchg
cmc
fiaddl
loope
aad
push
mov
xchg
loopne
push
scas
and
xor
dec
mov
push
push
ljmp
fdivr
call
shll
dec
dec
std
push
xchg
jns
cmp
mov
lea
cmp
pushl
leave
pop
mov
out
clc
jns
add
loopne
push
movsb
jmp
jae
sarb
cld
pusha
call
cs
mov
jmp
and
jbe
repz
bound
mov
pusha
cmpl
ljmp
or
filds
cmp
xlat
cmc
add
or
sbb
aas
xor
jge
jnp
mov
call
or
push
sbb
lret
dec
xor
jge
sbb
mov
xchg
rcrb
cwtl
jl
hlt
enter
pushl
insb
adc
mov
jo
adc
hlt
scas
addl
outsl
clc
incl
imul
push
stos
pusha
add
mov
xor
cld
dec
mov
ljmp
pop
cwtl
jg
lock
add
mov
sbb
cmp
je
adc
jo
lcall
jmp
cwtl
jno
jmp
jo
inc
push
or
inc
push
sarb
in
mov
data16
test
add
jae
lcall
push
xor
xor
mov
cmp
xchg
mov
mov
jno
sbb
jnp
out
sbb
decl
push
or
fnstcw
push
push
outsb
fst
mov
lahf
jp
lods
jle
pop
push
add
ljmp
cwtl
scas
dec
mov
arpl
fs
push
push
cmp
lahf
push
mov
ffreep
xchg
out
dec
adc
mov
jp
adc
fwait
movsb
xchg
mov
std
ret
sub
mov
mov
scas
in
mov
insl
repz
imull
sub
lcall
pop
or
push
add
js
imul
ret
lret
add
mov
arpl
add
lods
call
pop
add
addb
sbb
mov
jmp
mov
jnp
idiv
call
fwait
sbb
mov
or
mov
filds
shrb
pop
pop
mov
shr
fbstp
rclb
add
inc
arpl
pop
sbbb
pushf
aad
xor
call
xchg
push
inc
sahf
test
mov
jle
xchg
mov
sub
inc
loopne
into
adc
in
pop
sbb
jl
jmp
jno
mov
in
js
cwtl
mov
mov
incl
aam
mov
mov
or
mov
mov
lods
scas
push
sbb
jle
mov
mov
jl
push
clc
mov
aaa
cmpsl
subb
nop
cmpsl
mov
stos
jmp
add
incl
outsl
xor
add
add
push
push
sub
jmp
ljmp
mov
cmpsb
test
or
push
and
repnz
pop
and
addr16
sbb
hlt
stos
mov
cmpsl
in
inc
inc
mov
lret
fbstp
mov
dec
pop
decb
out
in
lods
orb
or
out
shrl
pushl
cld
popl
or
mov
gs
or
or
xchg
divb
dec
push
icebp
divl
aaa
adc
addb
jg
ret
adc
movl
jp
test
push
xor
data16
mov
idiv
jmp
push
popa
pop
cltd
and
pop
pop
pop
rorb
mov
mov
jbe
sub
inc
dec
inc
or
test
cmpsb
sbb
idivb
cmp
icebp
cld
arpl
lret
mov
imul
mov
or
lea
dec
mov
bound
lcall
mov
push
dec
jns
pop
int3
sbb
imul
call
sub
ljmp
mov
movsl
jle
mov
xorb
icebp
xchg
psubsb
call
int3
adc
sbb
inc
pop
movsb
js
cmove
ror
mov
push
fwait
aas
stos
ljmp
inc
jo
pop
fcoms
jmp
rorl
or
mov
inc
xchg
push
std
jmp
sahf
xchg
and
adc
shlb
push
and
inc
call
sbb
pusha
aaa
push
aam
popa
or
aaa
jne
mov
xchg
aad
or
icebp
loope
jle
std
lret
repz
iret
fcmovne
fwait
mov
stos
fcoms
mov
decb
stos
imul
ljmp
xor
add
fisttpl
scas
test
in
mov
movsb
out
aaa
cld
lcall
mov
xchg
addb
mov
rcll
test
cmp
mov
sub
gs
outsl
cmp
pusha
fimull
xor
fisubs
or
inc
ds
jb
mov
insl
and
icebp
decl
cmpsb
arpl
ljmp
push
test
popf
inc
leave
cwtl
test
incl
cmp
lods
int
popf
xchg
data16
mov
popf
and
sub
xchg
imul
pop
jae
cs
call
jo
insl
mov
mov
icebp
xor
or
sub
fldcw
imul
rolb
mov
es
mov
cld
call
imul
sti
mov
out
and
xchg
sbb
xchg
mov
test
dec
mov
sbb
pushl
iret
cltd
and
aas
or
mov
jns
daa
lods
in
mov
push
orl
ss
test
jb
ror
std
lcall
and
xchg
loop
mov
sbb
inc
mov
xor
into
lret
xor
jmp
fldenv
outsl
jnp
cwtl
ja
pop
shrb
add
enter
fisttps
enter
lods
aaa
fwait
in
shlb
sbb
push
or
aaa
jmp
leave
loopne
incl
xchg
pop
adc
fistpl
aam
or
inc
sbb
adc
call
call
push
imul
jbe
decl
push
jae
xchg
jp
leave
mov
imul
pushl
sbb
fnstcw
sbb
mov
stc
dec
fldt
dec
pop
adc
lahf
jg
inc
mov
and
jne
pusha
push
sub
push
mov
pop
into
cmp
push
pop
sub
pop
jg
mov
sbb
pinsrw
je
adc
mov
dec
mov
xchg
decl
clc
clc
pop
sbb
jg
xchg
repnz
jle
enter
jge
add
lret
je
in
push
mov
std
push
test
lahf
es
mov
imul
psrlq
and
out
loope
push
sub
adc
imulb
in
je
fcoml
mov
mov
sbb
ficoml
mov
xchg
outsl
call
sbbb
cmp
and
insl
cmp
aad
xor
mov
jnp
push
adc
add
call
dec
gs
or
sbb
shll
andl
and
xchg
cli
mov
mov
gs
jne
mov
mov
adc
sub
pushl
jp
xorb
mov
icebp
inc
xor
addr16
inc
adc
pushl
mov
lods
inc
fs
push
xchg
xchg
inc
cmp
call
sbb
ljmp
cmp
sbb
pop
js
rcll
push
mov
mov
inc
sahf
mov
push
jae
ljmp
pushf
lods
aam
nop
cld
cmpb
adc
div
inc
pop
pushf
and
es
sbb
and
ljmp
jg
outsl
outsb
xchg
frstor
aas
mov
pop
jmp
mov
cmp
ljmp
fbld
mov
add
sti
lods
xor
xor
jne
cs
insb
inc
loope
scas
call
ds
jne
fists
push
cli
xchg
jg
xchg
mov
xchg
aam
cmp
mov
xor
arpl
jns
mov
pop
mov
dec
pop
cmp
lcall
incb
neg
sub
push
and
adc
pushf
mov
call
leave
int
and
subb
loop
scas
and
pushl
sub
jl
lret
xor
dec
push
xchg
adc
and
pop
mov
imul
mov
bound
ret
dec
push
xchg
jno
and
mov
insb
pop
mov
dec
xor
xchg
roll
and
pop
dec
mov
ljmp
dec
inc
mov
jo
cmpsb
in
pop
mov
sub
ret
mov
call
out
repnz
cmp
sbb
xchg
call
jl
arpl
dec
inc
aaa
mov
call
in
add
scas
stc
lret
xor
cmc
loopne
xchg
add
data16
movsl
movsb
push
pushl
mov
pop
orl
add
or
pop
or
addr16
push
stc
pop
rcll
or
call
xor
jbe
sub
fidivs
call
outsb
jb
sarl
lret
xor
lcall
aam
pushaw
cwtl
push
pop
add
pop
adc
out
jbe
add
scas
rolb
cld
stos
add
call
cli
adc
mov
loop
fbld
and
xchg
mov
mov
cmc
insb
jns
cmp
dec
test
mov
std
and
jne
pop
rolb
push
inc
ret
imul
ljmp
vfrczsd
data16
test
or
and
rcll
int
call
lds
jae
and
les
aaa
cmp
lock
cwtl
js
or
jmp
pushl
in
insl
call
dec
aam
fwait
int
iret
aaa
inc
das
popl
js
aaa
cmp
pushl
inc
push
outsb
insl
outsl
arpl
ret
dec
pop
ss
push
js
outsb
shrb
xchg
push
jbe
lcall
mov
in
shlb
push
jmp
xchg
iret
or
pop
dec
test
decl
stc
jmp
rclb
add
and
push
pusha
push
inc
jbe
inc
push
out
xchg
fldcw
push
fiaddl
outsb
out
cmc
data16
lcall
jne
int3
jo
dec
js
iret
xchg
cmp
pop
push
mov
mov
std
inc
pop
iret
cmc
adc
or
push
ret
add
pop
stos
dec
adc
fdivrl
lcall
or
xlat
or
cmp
sbb
push
popa
or
out
decl
lock
movsb
scas
in
inc
outsb
loope
push
add
arpl
ret
call
cwtl
mov
or
pop
adc
pop
mov
aad
dec
adc
mov
mov
mov
test
loopne
shll
adc
or
jno
leave
fcos
decl
dec
jne
sarl
and
mov
push
xor
lods
popa
inc
sar
jg
mov
ret
call
and
hlt
push
mov
jmp
mov
rorb
jge
lcall
mov
sub
ds
imul
aaa
mov
aas
std
cmpsl
jne
ret
push
mov
out
call
xchg
inc
push
jnp
sarb
lahf
enter
pop
ja
jle
push
ja
jp
loopne
sub
loope
xor
cmp
std
dec
pop
pop
mov
scas
push
pop
mov
das
pop
sbb
das
xor
cmpsb
mov
jmp
mov
lea
sub
push
or
loop
xchg
fadds
push
inc
in
orl
pop
call
pop
mov
mov
push
stos
out
jg
mov
pop
mov
sub
cmp
out
pop
bound
bound
cmpsl
outsb
fs
arpl
ds
out
cli
sub
pop
cmpb
mov
sub
sbb
xchg
scas
or
mov
inc
adc
sti
push
push
fcmovnu
imul
and
jne
sar
lcall
pop
loopne
popf
mov
jmp
or
adc
inc
jae
stc
xchg
jle
icebp
aaa
std
mov
imul
fnstenv
imul
cmp
rorl
add
insl
cmp
add
jp
add
rolb
or
jns
repnz
inc
fucomp
jnp
mov
inc
pusha
ds
into
push
daa
test
test
ljmp
cmp
pushl
jbe
roll
iret
dec
pop
xchg
mov
fisubrs
in
push
inc
cld
and
mull
mov
loope
leave
lock
mov
imul
fcompl
daa
in
mov
mov
outsb
or
cmc
xchg
cld
leave
fucomi
in
fcomps
sub
add
popa
cmc
pop
mov
inc
add
cmp
int3
jl
adc
cwtl
aaa
rcrb
add
cmp
inc
pop
aam
leave
enter
cmpsl
adc
sar
call
adc
dec
js
stc
jae
fnstsw
mov
out
ret
stos
mov
jae,pn
xchg
mov
es
jg
mov
mov
loop
movsb
cmp
fiaddl
ret
mov
jo
cmp
aam
jmp
movsl
pop
jp
lds
push
jp
fcoms
inc
fcmovb
push
jnp
rcrb
pusha
out
mov
xchg
xor
or
mov
ret
xor
jmp
fdivrl
es
insl
scas
inc
outsl
inc
jns
outsl
push
sbbl
test
test
pushl
flds
cwtl
rcrl
jns
xor
mov
jno
inc
fdivr
dec
movsb
xchg
loopne
call
inc
cmp
enter
es
idiv
cmp
je
add
call
adc
mov
loopne
pop
sbb
sub
not
or
dec
dec
loop
decl
jg
sub
mov
pop
push
pop
addr16
mov
pop
icebp
call
stos
fs
xchg
aas
cmp
sarb
ret
xor
call
push
lcall
nop
or
and
pop
pop
fldl
pop
inc
pop
sbb
cmc
fbld
mov
pushf
mov
insl
pop
jle
cs
or
push
or
mov
in
dec
enter
mov
mov
push
push
cmp
fcomip
out
inc
lea
push
mov
cmp
lcall
add
sub
test
jmp
pop
xchg
arpl
mov
int3
xchg
je
lret
push
and
push
ljmp
add
int
push
xor
lods
test
inc
jl
out
imul
push
add
mov
and
idivb
sub
push
out
xchg
es
mov
adc
sahf
xchg
add
mov
sar
cmp
lds
ljmp
sbb
shlb
xchg
xor
xchg
aas
push
dec
mov
repnz
iret
mov
bound
push
repnz
adc
ja
pushf
jmp
xor
js
jg
popf
fdivl
or
dec
lahf
mov
rcr
jno
mov
pop
fs
in
xor
in
fstps
mov
push
and
lcall
movsl
push
xchg
xor
mov
fistps
jo
pop
cs
test
add
pop
mov
mov
lock
call
popa
out
insl
dec
iret
lcallw
cmp
push
loopne
or
fucomip
std
decl
pop
stos
mov
dec
jl
mov
push
or
adc
sub
add
call
push
les
jle
pusha
pop
xor
push
dec
cltd
jnp
xchg
xadd
push
dec
fistl
js
lret
in
jne
push
repnz
xchg
xor
fisttpl
ljmp
add
cmc
sub
mov
dec
dec
push
xor
into
out
icebp
jg
or
ljmp
shrl
jnp
xor
das
and
dec
mov
fcomip
decl
cs
fwait
popf
sub
mov
xchg
sahf
popa
dec
ss
in
cmp
adc
jmp
adc
sub
aad
add
or
xchg
int3
int
adc
sahf
fisubs
sarb
ljmp
loopne
mov
push
rorb
lods
pop
lret
mov
mov
or
adcl
jecxz
fimull
outsb
xor
dec
cmp
xchg
test
ljmp
inc
sahf
leave
fnstsw
mov
jecxz
lods
inc
fwait
xchg
inc
arpl
cmp
and
pop
ljmp
fcmovb
push
mov
andl
stos
adc
add
add
popf
addr16
cmp
decl
push
push
mov
or
inc
shr
xchg
jmp
add
enter
fsubrs
mov
jae
jecxz
adc
pushf
add
insl
pop
pushf
pop
and
dec
roll
dec
mov
add
jb
lods
cmp
jecxz
mov
cmp
mov
mov
jecxz
rol
shlb
mov
dec
sub
not
jg
adc
dec
insl
fs
sbb
inc
xor
pop
lret
jb
add
call
in
xchg
leave
jnp
and
inc
pop
xchg
mulb
inc
cmp
lcall
xchg
jbe
cmpsl
push
mov
shrb
sub
std
out
aas
cmp
insb
xor
jle
lods
leave
stc
cmp
xchg
push
pop
xor
sti
push
pusha
loop
lea
mov
rcrb
cltd
and
sar
inc
int
cmp
jo
add
iret
xor
jnp
lods
test
push
pop
fs
out
cli
mov
in
xor
xchg
imul
notl
jg
movsl
daa
push
xchg
lcall
jmp
stos
and
outsb
and
xchg
or
sbbl
xor
mov
fisttpll
pop
or
testb
cmc
test
cmpsl
pop
sbb
incl
cltd
push
in
xor
cltd
imul
int3
dec
mov
mov
call
inc
movsl
and
xchg
push
push
jmp
stc
mov
adc
jnp
mov
pop
cmpsl
sub
xor
pop
repnz
test
push
loope
cmp
add
cmc
jmp
fwait
mov
jg
int3
movsb
mov
in
cld
mov
insl
in
mov
sub
ljmp
mov
addr16
arpl
aas
cmc
pcmpeqd
inc
icebp
push
add
or
test
sub
push
clc
pop
fimuls
cmp
jae
cmp
xchg
pop
mov
loop
loope
nop
mov
inc
je
jmp
jae
inc
or
test
cmpsl
cmp
dec
fcompl
add
lahf
call
call
push
lret
subl
in
dec
testb
xchg
sub
shlb
push
ljmp
mov
pop
iret
in
xchg
pusha
enter
mov
pop
rol
add
mov
int3
out
pop
stc
push
lret
add
and
ja
call
cli
inc
imul
inc
lods
rsqrtps
sub
cmp
add
daa
shlb
decl
int3
ret
clc
fcom
and
push
pop
pop
adc
clc
mov
test
jnp
rorb
repz
sar
push
and
fdivl
out
imul
mov
nop
sub
std
jmp
xchg
sub
hlt
mov
sub
sti
gs
jmp
cltd
lcall
ljmp
push
mov
popa
cmp
rcll
loop
pop
jle
idivb
incl
jns
add
push
addl
inc
testb
popf
out
cmp
sarl
dec
stc
bswap
out
or
ret
aaa
mov
xchg
fcoml
xchg
jmp
out
xchg
adc
insb
xor
movsb
lods
clc
lret
push
ljmp
jno
imul
mov
mov
fadd
mov
cmp
out
inc
jns
xor
mov
rcll
mov
popf
inc
cmp
mov
js
mov
jle
out
jecxz
gs
sub
imul
fs
jp
js
in
shlb
sub
inc
mov
std
adc
stos
cmp
shlb
pushf
pusha
pushl
insl
inc
jmp
cmc
push
inc
push
js
test
daa
mov
push
pop
or
fidivrl
popf
jno
and
push
mov
movsb
jae
cmp
lahf
jnp
je
es
insb
ja
call
test
jne
mov
mov
dec
sahf
inc
jns
repz
and
adc
push
daa
pop
ud0
dec
or
rcr
xchg
mov
int
sbb
aaa
xchg
pop
fld
xor
jmp
adc
ret
sahf
bound
xor
arpl
lock
scas
mov
cmp
sbb
xor
jg
jp
icebp
cmp
jmp
inc
adc
lret
insl
pop
jbe,pt
sarl
aas
and
jmp
xchg
pusha
push
xor
jnp
pop
sub
out
or
mov
lahf
int3
dec
aam
sub
cmp
pop
push
mov
pushf
mov
pop
insb
mov
dec
mov
arpl
push
sarl
pusha
mov
push
pop
inc
std
cmc
pop
cli
adc
lcall
mov
adcb
lods
mov
enter
pushf
icebp
dec
movsl
pop
cld
mov
into
inc
add
pop
repnz
divl
stos
lock
lcall
pushf
add
lret
jmp
lcall
pop
ss
ljmp
sti
stc
pop
sbb
pop
xchg
push
hlt
push
cmp
shrl
sbb
sub
cwtl
pushf
mov
inc
call
mov
xchg
lret
cmp
xchg
xchg
arpl
cmpsb
mov
sbb
pushf
imul
xchg
sub
fnstsw
cld
je
jne
ret
cmp
mov
push
xchg
ss
xor
add
mov
loope
sbb
add
ljmp
cmp
dec
cmc
xor
cli
dec
out
pusha
xchg
or
push
adc
ljmp
call
dec
dec
mov
add
sbb
sbbl
sub
sbb
push
jns
std
ja
pushl
jbe
cmpsb
fldt
fstl
ljmp
mov
out
mov
test
fstpl
insb
mov
std
test
lods
mov
adc
push
scas
jl
dec
sub
enter
jae
int
mov
or
call
out
ljmp
jmp
inc
repnz
push
leave
pushf
sub
mov
add
push
jae
push
lock
incl
daa
dec
sbb
lods
cwtl
cmp
andl
push
enter
dec
or
pop
outsb
test
daa
lcall
decb
adc
pop
inc
sub
mov
cmp
insl
xor
mov
and
or
cmp
fxch
outsb
imul
outsb
push
inc
cmpb
cmc
mov
add
decl
roll
cmp
cli
jecxz
roll
pop
jbe
add
outsl
adc
jge
mov
sti
fisttpl
test
mov
mov
mov
movsb
cmp
lea
cmp
cmpsb
mov
fcoms
repnz
decl
xor
pop
pop
aaa
mov
neg
aad
push
out
xchg
push
andl
mov
mov
ljmp
cli
add
jge
sub
mov
orb
push
lods
fstpt
data16
decl
push
ljmp
and
shlb
test
cmp
sbb
mov
mov
mov
fbld
jle
repz
mov
call
test
popa
loop
mov
push
cmpsb
xchg
dec
shrl
mov
add
stc
sbb
pushl
orl
mov
aad
aad
aaa
adc
jb
lret
hlt
jne
aas
es
jmp
pop
repnz
inc
dec
sub
ret
stos
xchg
movhlps
inc
pop
adc
sub
pop
pop
sbb
mov
sti
inc
mov
push
mov
fildl
stos
xchg
adcl
divl
call
mov
or
lahf
fs
mov
sub
into
push
call
cmpsl
imul
incl
xor
cli
mov
add
dec
vcvtsd2si
xor
push
sub
fs
fsubrl
std
ficompl
cmc
push
xchg
jge
jmp
sub
sti
xchg
mov
fucomp
aam
sub
jmp
xor
lret
call
lcall
jns
adc
xchg
jecxz
stos
incl
fstpl
out
jle
jb
cmpsl
enter
movsb
fwait
push
lret
incl
ja
aad
mov
jl
xchg
add
fdivs
and
lcall
shlb
inc
loope
push
repz
push
aam
movsb
cmpsb
pop
aaa
jle
push
cmp
jg
or
push
sub
les
and
and
push
mul
pushl
std
sbb
xor
pop
and
sti
ret
mov
decl
js
dec
dec
jp
in
lock
push
adc
and
sar
mov
pop
aas
das
insl
sub
push
push
sbb
jp
xor
fildll
mov
pop
lods
mov
ficomps
lret
insb
lock
adc
pop
cwtl
fcmove
xor
or
adc
sbb
jle
add
lcall
and
out
arpl
add
lea
lea
ja
push
outsb
iret
les
pop
add
ljmp
clc
or
shlb
incl
xchg
out
subb
dec
jne
dec
decl
ljmp
mov
and
int
cmp
dec
pushf
jns
dec
sar
cmp
arpl
nop
divb
pop
pop
xchg
insb
inc
sbb
dec
sub
cmc
decl
nop
cmp
mov
and
pop
push
mov
add
adc
nop
ret
cmp
sbb
cwtl
in
jecxz
xchg
jnp
daa
jg
add
inc
mov
mov
cmp
xchg
inc
aas
or
mov
mov
cmp
mov
cmc
mov
or
mov
jnp
icebp
lret
stc
push
leave
push
pop
and
inc
je
incl
mov
cmp
fisttps
mov
and
mov
dec
xchg
lcall
dec
nop
inc
in
bound
dec
popa
stos
aam
scas
clc
xchg
test
dec
ljmp
jmp
ljmp
sbb
push
xor
push
dec
lahf
rcll
inc
xorl
cltd
out
ret
cmp
cltd
add
sbb
int3
sbb
sbb
into
push
outsb
cmpsb
outsl
mov
filds
repnz
pop
xchg
int3
dec
lods
andl
test
out
cmpb
repz
call
mov
jmp
adcb
in
jg
jecxz
out
int3
loope
mov
mov
jnp
filds
pop
push
push
lock
test
lods
mov
push
cmp
decl
and
scas
dec
jae
daa
arpl
lret
or
mov
stc
xor
jl
mov
pop
fnsave
mov
xchg
jge
leave
popa
jns
enter
fcomps
xor
or
ljmp
daa
mov
adc
repz
mov
nop
out
sub
iret
mov
cmp
sbb
cwtl
xchg
or
cmpsl
add
sub
das
test
insb
mov
dec
icebp
sbbb
test
sbb
and
loopne
cwtl
dec
pop
inc
scas
sbb
add
jg
call
test
jge
fcoml
push
movsl
cli
in
push
jecxz
loop
push
jns
loopne
xchg
lcall
sbb
jbe
enter
into
inc
mov
xchg
jnp
call
cmp
ja
and
sti
fistpll
push
insl
icebp
mov
xor
aaa
insl
or
xchg
mov
or
mov
hlt
push
push
cmp
xor
incl
push
add
fisubrs
ljmp
and
or
scas
jne
cmp
and
xchg
ror
aas
xchg
lcall
aam
adc
and
icebp
xlat
push
hlt
inc
inc
movsb
arpl
pop
pushf
cmp
in
or
cmp
das
out
and
sub
add
pop
push
add
decl
aam
ljmp
sbb
repnz
cmp
in
push
xchg
xchg
aas
mov
push
xor
mov
cmp
mov
add
sti
lds
ror
aas
mov
mov
test
inc
jnp
pop
rcrb
adc
and
or
mov
out
jl
clc
jne
adc
xchg
lcall
mov
fcmovnbe
xor
push
pop
lds
out
orb
mov
ljmp
cmp
lret
les
mov
jmp
sbb
inc
jg
ljmp
mov
inc
inc
imul
rolb
fcoms
popa
or
fildll
scas
pusha
or
fsubrl
incl
cmp
sub
dec
leave
mov
pop
stos
scas
add
sub
and
call
fsubrs
addl
clc
in
lahf
rorb
sbb
lcall
push
dec
sbb
nop
mov
inc
mov
lock
and
clc
jmp
push
push
mov
and
adc
insl
mov
dec
fsubp
inc
and
jo
push
ss
cli
jmp
and
mov
mov
mov
mov
lds
sub
jg
repnz
lcall
pop
sahf
dec
inc
loope,pt
shrl
rorb
or
mov
mov
adc
lcall
sbb
mov
mov
mov
inc
mov
ret
push
enter
rol
decl
cwtl
outsb
jecxz
popa
hlt
dec
in
pushf
mov
popa
mov
or
decl
xor
fucomp
mull
iret
pop
pusha
adc
rcll
adc
inc
push
dec
lcall
data16
and
xchg
pusha
xchg
inc
movups
pop
push
jne
pusha
jnp
add
decl
xorl
aas
cmpsl
adc
xchg
sub
imul
dec
xor
ss
sti
js
xor
in
ljmp
dec
push
stc
mov
and
mov
sub
xor
sahf
sti
xlat
cmp
or
inc
shr
imul
jg
shll
in
push
push
dec
push
stc
loope
inc
pushf
and
inc
mov
mov
or
movsb
inc
call
loopne
mov
ret
rol
jo
ja
fadd
adc
fwait
or
pusha
outsb
fwait
mov
jns
cmp
stos
inc
test
mov
fwait
sbb
sbb
call
jl
cmp
sbb
sub
aas
jns
rolb
sbb
adcb
lcall
adc
rorl
test
pop
popf
out
in
mov
xchg
sub
lods
ret
xor
incl
pop
sbb
icebp
lods
lahf
ss
cld
aad
inc
cmp
mov
xor
in
rcll
adc
and
fisttps
cs
cli
mov
das
add
mov
jmp
pusha
cmpsl
cmp
jns
out
pop
add
dec
sbb
jge
pushl
cmp
xchg
sub
ljmp
iret
cmpsl
out
jnp
mov
movsb
push
movsl
mov
mov
and
addb
xchg
add
lahf
dec
cwtl
cmpsb
repnz
push
adc
dec
ljmp
decl
cli
pop
push
lods
adc
out
jg
negl
push
fcomip
rclb
sbb
in
idiv
push
mov
add
or
jle
pushl
movsl
in
xor
inc
mul
subl
sub
stc
add
lret
fisubl
mov
jmp
inc
fs
mov
push
xchg
dec
cmp
fisubrs
dec
fidivrs
hlt
sbbl
adc
push
testl
dec
js
dec
adc
imul
in
or
add
clc
xchg
fldcw
dec
push
pop
cmp
call
rclb
scas
pop
xor
xchg
mov
ljmp
sbb
jmp
push
ds
inc
mov
dec
adc
sub
and
std
decl
dec
dec
mov
xchg
mov
iret
or
mov
mov
and
inc
inc
test
icebp
je
mov
push
pop
lock
mov
mov
test
ljmp
mov
fsubp
ljmp
and
clc
inc
out
in
cmp
cmp
fcoml
mov
mov
mov
pushl
adc
cmp
xchg
in
jge
lods
and
sub
xor
sahf
decl
sub
adc
sahf
jo
jno
fdivl
loop
mov
pop
std
stc
rclb
ret
repz
gs
mov
outsb
int3
rcr
push
ds
xchg
push
ljmp
cli
jns
dec
adc
test
gs
inc
xchg
xchg
cld
fdivr
loopne
adc
fwait
rcl
inc
dec
sbb
add
add
fcomi
fcoml
mov
add
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
int
adc
adc
adc
jl
or
outsb
xlat
decb
pop
sbb
adc
adc
adc
add
data16
lock
mov
or
rolb
or
in
pop
and
xchg
add
add
adc
cwtl
jl
testb
add
add
mov
cmp
jb
imul
mov
add
add
push
adc
pop
and
xor
mov
pop
xchg
mov
adc
xor
cmpb
cmp
or
mov
push
add
fisttps
aas
mov
and
test
imul
or
adc
aas
xor
and
adc
add
arpl
scas
pushf
into
loopne
adc
push
lods
stos
add
pop
scas
cmp
adc
fdivr
pop
lods
push
adc
pop
popa
jno
and
adc
mov
add
and
push
lock
loope
icebp
dec
inc
jo
mov
mov
rorl
adc
mov
adc
dec
fiaddl
or
js
in
dec
add
cmpsb
mov
fcomip
jg
add
lds
cld
cli
and
mov
inc
jnp
test
clc
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
or
clc
cmpl
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
ja
xor
lcall
mov
push
pop
mov
pop
pop
mov
mov
sub
mov
ret
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
cmc
in
fcomi
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
lcall
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
cmp
rolb
out
or
cld
push
pushl
clc
sti
jg
jno
lock
jg
pusha
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
xlat
cmp
test
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
je
hlt
es
aas
std
cli
push
push
push
idivl
jg
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
incb
aas
sti
punpckhbw
cmpsb
orb
mov
lock
jmp
xchg
pop
clc
pop
fistpll
xor
movsb
add
lea
jg
jmp
lock
std
xorb
jg
aad
adc
ret
das
ljmp
sar
pop
pop
shlb
out
sarb
sbbl
jno
or
jg
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
clc
push
ja
xor
cmp
xchg
mov
in
sub
xor
pop
xchg
ftst
jbe
xchg
and
ljmp
lods
out
jae
shrb
shlb
out
aas
stc
add
out
gs
incl
mov
call
adc
pop
cld
addl
adc
and
repnz
cmp
fmull
enter
jecxz
pop
cld
lahf
iret
scas
sub
in
pop
mov
sub
mov
dec
mov
das
incb
fisubrl
aas
mov
or
cld
inc
or
sti
add
repnz
jg
mov
sub
aad
test
or
movsb
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
aas
js
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
addl
mov
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
lock
testb
pop
rolb
pop
inc
jb
fistpl
adc
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
cld
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
aaa
ret
xchg
inc
lds
push
pop
adc
imul
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
push
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
pushl
es
xchg
fidivrs
clc
mov
scas
push
aas
repz
mov
mov
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
mov
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
cld
paddsw
add
out
icebp
mov
loope
mov
cmpsl
popf
enter
sti
mov
fbstp
and
push
xor
outsl
das
insb
jp
or
out
cmp
das
js
fsubrp
popf
js
data16
decb
adc
mov
mov
mov
and
call
xlat
nop
cltd
add
jo
mov
js
int
add
push
pop
aaa
std
filds
dec
inc
sbb
idiv
jg
xchg
fimull
ret
ror
sbb
jmp
push
pushf
jecxz
jg
mov
sub
mov
pop
clc
loope
adc
and
dec
add
mov
sbb
sub
xchg
fldenv
iret
fdivrl
xchg
lcall
loopne
dec
fimull
sti
push
push
xor
sarl
pop
out
dec
inc
sub
jg
jno
ret
fs
pop
dec
push
inc
arpl
out
inc
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
cli
dec
xchg
imul
fs
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
jns
pop
add
fsts
dec
inc
leave
push
add
lcall
inc
add
mov
push
nop
mov
or
lea
test
and
sub
sub
dec
add
ficompl
sub
jnp
add
incl
out
add
dec
insb
push
js
add
mov
push
jg
add
pop
push
jb
movsb
jg
inc
xor
cmp
push
orb
sub
pop
mov
mov
in
adc
mov
mov
lahf
jno
sahf
imul
lock
sahf
dec
test
dec
xor
decl
push
add
xchg
movsl
jnp
data16
push
daa
add
xchg
dec
and
cmpsl
push
and
cs
imul
push
push
movsb
push
movsb
inc
scas
stos
fstpt
and
and
push
test
and
imul
push
iret
ljmp
mov
scas
pop
dec
lods
push
mov
pop
sbb
int
pop
repz
mov
pusha
sbb
mov
out
jp
les
push
adc
fs
mov
insb
or
lret
fbstp
sti
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
jp
int
pop
stos
pop
stos
mov
lock
ss
lock
push
add
jo
mov
push
shll
add
outsl
push
shll
outsb
pop
shrl
mov
push
ret
in
xorb
and
jge
fisttps
jne
sti
xor
ljmp
movsb
push
fdivs
add
mov
shlb
mov
cmp
arpl
push
push
push
add
jne
int
xor
push
ret
add
fsubp
cmpsl
push
mov
push
pop
dec
add
jbe
push
data16
ficomps
jo
xchg
cs
push
jge
mov
shlb
lret
stos
aas
add
out
mov
push
push
xlat
jne
add
cmpb
aad
push
xlat
ja
js
in
cmpsb
jge
push
jns
push
jp
jp
inc
lods
fsubrs
push
fidivrl
sarl
ja
fldl
les
je
jmp
fstp
mov
ljmp
xchg
in
xchg
sub
fnsave
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
jge
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
fucomi
fimull
push
mov
push
imulb
incl
movl
out
push
hlt
iret
repz
clc
stc
cli
sti
cld
std
xor
inc
jo
add
mov
jae
int3
data16
add
imul
data16
add
pop
add
pop
add
adcb
movsl
inc
push
push
insb
mov
or
push
add
int3
std
mov
or
outsl
or
or
stos
add
stos
stos
cmpsl
inc
in
fidivs
sbb
mov
imul
pop
adc
out
lods
cltd
lods
add
pop
stos
psubusw
lods
pop
mov
lods
mov
scas
insl
lods
pop
pop
adc
and
adc
sbb
add
sbb
scas
scas
scas
add
or
mov
add
mov
pop
in
dec
rcrl
mov
push
add
test
add
and
mov
inc
rcrl
mov
and
and
push
push
and
mov
or
adc
pop
sub
pop
or
sub
push
and
mov
pop
andb
sbb
negb
pop
int
and
aas
cmp
pop
cmp
cmp
add
or
mov
pop
xor
pop
or
int3
in
int3
push
or
add
pop
push
fists
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
jmp
xor
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
data16
ljmp
outsb
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
decl
lcall
mov
mov
inc
xchg
push
cld
repnz
mov
je
push
bound
js
fidivs
adc
xor
jne
je
stos
or
adc
pop
rorl
orb
mov
prefetch
or
pop
pop
scas
pop
mov
inc
aas
outsl
fists
dec
jle
xchg
pop
push
dec
add
in
outsl
jns
mov
cmpsb
push
mov
xor
or
add
push
ja
jb
cs
xor
jle
and
inc
add
add
mov
and
in
and
mov
xchg
jo
or
in
pop
push
inc
mov
cmp
inc
add
push
enter
xchg
jp
inc
push
popf
inc
mov
stc
mov
int3
xchg
jno
lret
push
bound
mov
cmp
mov
mov
inc
push
sahf
mov
outsb
xor
add
outsb
add
xchg
xchg
pop
push
test
insb
ljmp
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
or
push
mov
push
cmp
in
pop
add
fwait
imul
lcall
outsb
mov
out
dec
mov
add
ja
sahf
jbe
fistpl
std
add
popf
imul
stos
push
add
and
std
and
es
js
mov
data16
rcl
mov
insb
pop
outsb
push
outsl
rcrb
repnz
iret
push
ds
mov
add
sbb
jg
fiadds
pop
lods
push
shr
out
data16
xor
mov
adc
mov
add
test
xchg
push
loopne
iret
sahf
mov
fstpl
push
jb
out
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
notb
mov
push
fildl
adc
push
adcl
addb
sbb
test
cs
sbb
test
in
mov
push
xchg
aaa
or
out
xchg
in
xchg
lock
sub
dec
add
sub
imulb
lods
fnsave
xor
cwtl
push
cmc
sahf
xor
fbld
es
pushf
cmp
rorb
mov
aam
jle
mov
std
adcb
jo
test
sahf
xor
jbe
stos
into
shll
lgs
dec
pop
mov
int
mov
mov
sarb
jmp
mov
ret
cmp
add
addr16
and
add
dec
out
je
or
adc
daa
add
push
enter
or
inc
cld
femms
or
or
fdivrp
sbb
es
push
adc
push
add
mov
adc
adc
ds
add
or
jle
mov
adc
sbb
push
and
mov
mov
imulb
mov
add
and
mov
and
cs
mov
imul
aas
and
aas
aad
iret
add
cmp
jae
cmp
aas
aas
cmp
mov
push
enter
loopne
jge
add
jbe
ja
push
stos
cmp
inc
jle
cmp
js
push
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
cmpsb
fcom
push
mov
addr16
mov
popw
jecxz
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
jmp
lods
lcall
sub
sub
add
add
mov
popa
dec
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
fildl
pop
imul
nop
cltd
mov
mov
decl
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
subl
cmpb
jb
ja
jno
outsl
outsb
pushf
sti
jne
mov
loopne
rolb
mov
mov
incl
out
incl
add
push
push
add
cmc
repz
push
xor
mov
sbb
out
mov
add
add
xlat
mov
add
fstpt
push
mov
fnstsw
stos
and
push
add
inc
add
mov
mov
popf
add
ret
push
in
lcall
add
add
push
push
dec
lret
add
into
xchg
add
mov
fwait
fstpt
add
mov
out
es
nop
sub
imul
push
sub
nop
sub
insl
xchg
xor
xchg
outsb
lcall
insl
mov
mov
jbe
negl
fcmove
fst
loope
ss
es
push
lret
loopne
push
std
push
test
adc
fdivrp
test
xchg
add
test
jg
add
xor
xor
inc
add
jg
inc
dec
dec
dec
dec
dec
dec
add
pop
push
stc
aas
add
push
dec
or
adc
cmp
adc
dec
or
in
fstp
add
push
adc
add
or
pop
pop
imul
pop
cmovg
inc
push
dec
sbb
mov
inc
adc
inc
inc
adc
sbb
dec
add
mov
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
fildll
and
adc
sub
xor
xor
sub
sub
push
add
mov
pop
mov
mov
mov
data16
sbb
push
outsb
mov
push
or
adc
outsl
mov
inc
and
mov
xor
outsl
mov
cmpsl
rorl
jbe
inc
and
incl
cld
or
push
inc
xlat
sbb
add
pop
outsb
sub
pop
in
sysret
mov
es
ds
dec
inc
xchg
mov
pushf
cmp
jnp
pop
in
lock
addl
test
mov
adc
ja,pn
aaa
and
shrl
add
mov
sbbl
push
mov
sbb
cli
mov
add
pop
cli
fbld
and
loop
pop
jns
and
jle
cli
or
sbb
mov
mov
sti
jg
das
sti
in
and
mov
jle
cmp
pop
mov
dec
sti
add
mov
jg
xchg
sbb
mov
pop
jo
sbb
sbb
sbbb
cld
jg
rolb
jle
fadds
jg
std
ja
and
add
xor
jg
jg
pop
inc
enter
sbb
nop
xchg
cmpl
mov
jg
xchg
xor
push
and
push
inc
sub
or
decl
or
xor
or
or
mov
mov
jg
shrb
add
bound
mov
or
sbb
pop
pop
and
mov
test
and
sbb
scas
incl
add
incl
in
inc
in
jle
lret
imul
jno
xchg
add
push
scas
jle
mov
inc
cmpl
rorl
xor
addr16
add
add
add
jg
cmp
push
gs
push
adc
mov
jg
push
les
rclb
cwtl
jg
incl
adc
movb
push
lods
jle
or
cmpb
in
sub
stos
pop
stos
pop
mov
ja
pop
pop
add
daa
aas
leave
inc
pop
pop
pop
add
mov
insl
pop
jle
add
or
stos
pop
inc
push
incb
test
mov
jge
sbb
jle
cmp
dec
xchg
push
bound
add
mov
das
push
arpl
pop
dec
xchg
lea
mov
out
mov
inc
push
dec
incl
shlb
pop
call
int
adc
je
pushl
test
inc
lea
mov
push
push
pop
or
fnstenv
add
xor
ja
push
jbe
adc
fwait
adc
push
jnp
push
jp
fnstenv
and
push
js
dec
jbe
pop
xlat
jne
mulb
pop
mov
mov
mov
push
outsb
push
daa
aam
ljmp
call
hlt
mov
dec
ljmp
in
pushf
inc
outsb
ss
cmp
call
jmp
mov
or
xchg
pop
outsb
lahf
mov
push
mov
mov
dec
pop
jbe
sahf
inc
out
inc
jbe
call
scas
cs
aas
popf
inc
push
pushf
cmp
test
pop
cmp
fwait
adc
xchg
xor
sub
mov
out
nop
sub
nop
daa
ss
cs
mov
dec
xor
xchg
incl
bound
jg
callw
pop
fnsave
xor
jmp
je
cmp
sahf
cwtl
sbb
xor
jbe
ss
inc
dec
pop
and
push
add
pop
ja
fidivrl
xchg
movb
sub
pop
ja
push
incb
aaa
mov
add
add
mov
lods
sub
push
loop
andb
dec
test
or
outsl
and
jno
add
add
in
and
les
push
adc
repz
orl
lea
lcall
imul
mov
sbb
test
push
lock
cmp
cmp
aas
or
inc
icebp
imul
mov
mov
or
dec
out
ficoml
jmp
push
and
xchg
push
push
sbb
and
cmp
sub
mov
xchg
negl
jmp
syscall
mov
lds
mov
ss
incb
xchg
mov
lcall
or
mov
sub
daa
cld
pop
das
xorb
jp
inc
test
call
jmp
insb
lahf
or
std
out
push
inc
loopne
jg
lcall
or
sub
sti
sysret
and
ds
imul
push
pushl
jmp
pushl
sub
lcall
decb
adc
or
jmp
lcall
sub
lea
and
or
mov
and
add
mov
mov
or
fwait
and
adc
mov
out
cmovge
push
incb
push
mov
push
adc
add
pop
or
xchg
incl
call
and
inc
xlat
es
decl
sub
pusha
inc
push
lcall
in
in
sti
push
std
decl
mov
out
adc
push
sbb
sub
pop
in
mov
cmpsl
cld
pop
stc
cmpxchg8b
pop
add
call
cmpsb
mov
xchg
jg
cli
xchg
je
adc
pop
mov
cwtl
inc
or
jmp
xor
push
jmp
aas
adc
incl
fcmovbe
mov
pop
inc
xorps
lods
pop
aaa
mov
jnp
cmp
shll
push
inc
and
push
dec
sahf
dec
out
adc
call
adc
out
fldcw
ljmp
lahf
inc
inc
push
inc
fidivl
pop
mov
fcoms
sahf
movsb
dec
push
stos
push
leave
mov
cmpsb
dec
dec
inc
scas
imul
out
add
cmpsb
add
push
and
out
push
sbb
jl
shrb
rcl
outsb
shrb
shlb
jb
push
in
dec
imulb
push
iret
insl
cltd
out
int3
push
pop
daa
outsl
pop
imul
notb
push
movsb
sub
push
ljmp
ljmp
lcall
inc
dec
dec
pop
add
repnz
aam
push
jmp
and
fildl
pushf
cmp
aas
decb
cwtl
xor
lahf
push
inc
push
xchg
insl
mov
xchg
push
push
aaa
push
lcall
jmp
es
xchg
xchg
xchg
notb
sub
xchg
aam
pushl
dec
scas
incl
shrb
data16
ds
ljmp
mov
push
add
fidivl
aad
or
faddl
xchg
fstpt
push
jnp
jp
or
rep
push
jl
or
cmpsb
rclb
adc
int
jle
push
jbe
adc
fidivrl
push
dec
push
dec
repnz
jns
repnz
jae
pop
fidivrl
push
mov
jnp
imul
out
add
in
add
int3
outsb
nop
notl
shll
mov
and
xchg
cmp
mov
pop
or
imul
pop
and
addb
decl
dec
es
addl
orb
pop
popa
dec
sub
inc
and
aam
aaa
hlt
push
sub
iret
out
mov
cli
incl
clc
push
idiv
inc
out
ds
push
jb
sub
jg
mov
icebp
push
push
dec
mov
pop
cld
adc
fucomp
daa
jno
sub
jg
mov
icebp
mov
xorb
fidivs
xchg
ja
loope
xchg
stc
bnd
cld
jp
es
xchg
subl
adc
incb
jge
and
adc
in
jg
dec
in
sarb
push
xchg
pop
ja
dec
iret
lock
mov
icebp
idiv
xor
push
and
lcall
push
faddl
pop
push
inc
inc
stos
nop
ds
int3
decl
cmpb
fidivrl
arpl
clc
and
jbe
mov
push
into
and
push
xchg
and
pop
or
scas
mov
ds
lcall
fists
jle
jns
shl
sub
mov
jmp
xchg
jmp
mov
idivb
mov
push
xchg
mov
loop
adc
pop
clc
pushl
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
aas
test
inc
or
cmp
and
fistl
adc
sbb
add
dec
sbb
mov
add
lret
adc
mov
shll
push
inc
lahf
cmpsb
mov
and
lcall
adc
sub
mov
push
push
inc
test
fldt
sbb
push
cmpsb
cmp
sbb
push
or
and
or
inc
or
push
sub
xchg
adc
push
ljmp
sub
sbb
push
and
adc
clc
cwtl
shr
mov
push
sbb
nop
xchg
or
and
push
adc
jb
gs
sbb
jae
into
movsb
loope
bound
nop
mov
push
dec
mov
or
adc
pop
jae
push
xchg
test
sahf
ljmp
ljmp
ficompl
insb
push
ss
das
nop
test
sbbl
dec
clc
ss
push
pusha
mov
push
imul
push
popa
imul
outsl
jb
dec
cmp
data16
mov
hlt
jb
fisttpll
into
es
loopne
sbb
pusha
xchg
out
or
dec
add
lahf
mov
sbb
shlb
outsl
push
dec
xchg
lea
adc
in
push
jo
aas
outsl
add
add
dec
lock
or
inc
push
ret
loopne
jmp
movsb
mov
ficomps
dec
dec
movsb
push
dec
in
cltd
mov
sahf
lret
gs
or
mov
inc
cmpsl
jmp
cmp
and
sbb
jge
std
outsb
jbe
lods
inc
lock
xor
mov
stos
inc
and
mov
xor
jo
jne
cmp
mov
jne
push
pop
std
jae
cmp
mov
cltd
mov
push
rcrb
push
push
xor
outsl
dec
dec
cmp
ja
popa
test
adc
gs
ficompl
subl
jns
pop
insl
cmp
sub
adc
shll
outsb
nop
fildll
hlt
leave
gs
cmp
cmp
lods
mov
mov
inc
jb
lcall
sahf
cmp
rorl
incl
into
sbb
sbb
out
sti
push
xor
outsl
ljmp
outsb
mov
outsl
cld
in
dec
cmpsl
mov
mov
mov
gs
dec
outsb
aaa
lcall
mov
in
dec
insb
or
inc
imul
das
sbb
push
dec
mov
push
imul
push
add
sbb
push
leave
pop
sbb
push
je
fisttpl
and
inc
ficoml
pop
cld
loope
popa
dec
inc
dec
fistl
inc
cmpxchg
mov
or
adc
or
imul
lea
imul
bound
xorb
adc
sbb
mov
out
js
jbe
ret
fiaddl
pop
push
test
popl
cmp
jge
dec
mov
mov
loop
inc
je
sti
popa
es
push
cmp
inc
inc
push
mov
and
sti
test
or
or
cmp
in
push
xchg
in
insl
sbb
sub
fadds
jnp
lret
jne
sub
xchg
push
mov
lods
outsl
cmp
int
fninit
jno
adc
jns
dec
or
ja
dec
outsl
sub
dec
mov
xor
lret
sub
adcl
cmpsl
and
xorl
add
je
pop
xor
mov
mov
inc
adc
imul
add
and
ja
popf
inc
orb
jno
mov
repz
ja
popf
repz
xor
mov
push
add
stos
in
shll
fsts
sub
orl
adcb
jbe
jbe
push
loopne
jmp
xor
sub
adc
mov
dec
mulb
movsb
sub
je
add
pop
adc
in
jmp
mov
xor
or
nop
int
push
in
clc
inc
jnp
inc
outsb
jno
dec
adc
mov
rcl
arpl
mov
inc
imul
dec
ja
bound
test
mov
sbb
pop
sbbl
or
inc
push
mov
mov
cmp
push
jne
je
roll
scas
gs
fs
pop
imul
add
cmp
iret
mov
gs
jo
xchg
test
xchg
ja
and
fistl
dec
gs
inc
arpl
lods
inc
loope
shrb
cmp
sub
sub
dec
jo
pop
or
sub
xchg
rcll
fnstenv
xchg
jg
and
inc
scas
push
pop
mov
push
or
loop
add
cmpb
jae
xlat
inc
sbb
dec
cmp
and
inc
xchg
mov
inc
sbb
cmp
xchg
repnz
fcompl
or
pop
dec
add
shrl
lret
pop
imul
sub
inc
insb
sub
mov
pop
insb
rcpps
js
adc
push
sub
inc
inc
xlat
adc
add
out
gs
in
inc
imul
xor
subb
push
sbb
pusha
mov
ret
sahf
daa
fwait
jo
rorl
bnd
push
outsl
sub
cmp
push
inc
push
popa
xchg
stos
dec
inc
mov
aad
xchg
mov
rcl
ficompl
dec
jne
jns
mov
sti
js
inc
xor
andl
test
push
pop
and
ja
inc
fbstp
and
inc
dec
push
not
xor
pop
xor
mov
adc
or
sbb
jne
outsb
inc
shrb
push
sub
sbb
sbb
pop
and
and
sbb
fs
mov
aad
add
out
pop
aas
das
out
sub
stos
insb
mov
cmpsl
js
int3
sar
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
cmpsb
imul
imul
imul
add
push
es
cmp
repnz
mov
or
add
xchg
and
xchg
and
test
and
pop
mov
or
xchg
lcall
insl
mov
sbb
sbb
sarl
push
imul
mov
pop
push
add
inc
imul
test
push
fs
in
inc
xor
addl
sbb
pop
cmp
js
mov
out
jo
lcall
lret
cmp
scas
jge
jl
jns
push
mov
mov
and
adc
mov
movsb
pop
inc
cmp
dec
andb
or
sbb
xor
subl
sbb
mov
xor
add
ret
and
ret
dec
inc
mov
or
jle
inc
xchg
inc
xor
mov
dec
pop
lret
inc
lock
sub
mov
dec
test
ror
pop
insb
mov
ja
popw
xlat
adc
or
mov
sbb
mov
ss
arpl
xchg
xor
nop
and
enter
out
pop
les
push
mov
cmpsl
pushf
fstpl
movl
cmp
push
test
xchg
adc
xor
sub
insb
lret
pop
js
mov
outsb
push
rorl
dec
inc
push
movsl
and
sub
inc
popf
adc
push
add
cld
addr16
adc
arpl
ficoml
test
pop
xor
xor
cmp
fidivl
adc
test
cmc
inc
sbb
pop
adc
inc
push
mov
xchg
mov
xor
adc
cmp
cmp
sub
inc
push
out
push
mov
xchg
cmp
daa
outsb
pop
push
jo
shrl
sub
ret
aas
rcrl
sub
sbb
push
pop
dec
pusha
mov
mov
adc
test
add
test
xchg
repz
mov
orb
iret
mov
inc
dec
mov
ds
incl
sub
add
in
mov
xchg
push
or
arpl
dec
cmp
mov
mov
cltd
mov
outsb
inc
test
cmp
xchg
jae
xor
shrb
and
out
addb
push
rolb
pushf
movsb
rcl
push
cmp
add
dec
in
aas
adc
daa
fwait
dec
dec
add
jb
dec
loopne
imul
mov
add
xchg
testb
add
cmpsl
lea
mov
mov
iret
int
inc
cwtl
cmp
mov
inc
adcl
prefetchwt1
or
enter
or
push
push
aaa
scas
pop
adc
and
nop
popl
imul
addr16
mov
outsl
cs
insb
lds
and
add
and
fmull
push
add
pushf
cmp
adc
lret
inc
cs
add
adcb
pop
dec
addb
jb
push
xlat
out
push
repnz
lock
cmpsb
push
fmuls
lock
fnop
dec
inc
jbe
adc
cmpsb
mov
add
add
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
mov
