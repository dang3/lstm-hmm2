divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
enter
push
mov
call
pushl
mov
fwait
cltd
fildl
mov
fbstp
les
mov
andl
mov
push
lcall
mov
hlt
cs
xchg
adc
push
sti
lcall
mov
fcomps
sub
dec
shrb
in
dec
mov
lods
mov
or
jbe
lcall
ror
in
push
jo
sbb
mov
outsb
xchg
incb
call
sbb
add
jnp
dec
add
pop
pop
pop
jle
call
inc
mov
lea
mov
adc
lahf
cld
add
pop
mov
or
mov
mov
cwtl
sbb
add
ja
jns
jb
fmuls
xchg
sub
movhps
inc
add
ja
pop
lcall
sub
repnz
push
lcall
push
or
mov
and
add
push
test
sahf
add
mov
aas
fadd
jae
push
pop
lods
mov
jno
pop
add
mov
or
push
push
sbb
pop
or
sub
add
shl
jg
add
push
push
push
mov
imul
aaa
xchg
xor
fcmovu
cmpsb
jmp
xor
push
mov
cmp
or
sbb
push
clc
jge
insl
cmp
xor
mov
push
xor
mov
pop
ret
push
inc
add
pop
movsb
rol
push
pop
jae
cmp
mov
pop
inc
sub
inc
clc
sub
push
enter
push
inc
ss
sarl
push
sbb
or
fadds
fs
pop
adc
inc
test
jne
xchg
or
out
ja
add
jmp
adc
decl
jg
mov
adc
or
jp
loopne
add
pop
movsl
pop
enter
pop
pop
test
push
and
dec
hlt
sub
push
mov
rcll
incl
sbb
jge
ja
adc
dec
dec
sbb
add
push
loop
push
adc
in
xchg
and
sahf
leave
inc
add
jo
add
push
add
or
ret
icebp
jno
ljmp
clc
fistpll
iret
jle
mov
cmpl
or
loop
out
pop
push
out
jmp
push
cmp
jge
push
in
inc
jle
add
pop
cltd
jge
enter
iret
jl
iret
mov
aam
push
sahf
lock
or
mov
cmp
jl
cmp
jne
scas
filds
inc
mov
adc
push
add
jbe
mov
add
inc
add
inc
add
cld
das
jp
lea
push
add
push
push
lea
fwait
pop
js
adcl
xor
into
mov
aam
cmp
fdivs
cmpsl
jo
fdivrs
cmpsl
jge
xchg
fbld
cld
fsubrs
jb
stos
mov
repz
xor
loop
jge
test
jle
cmp
cs
mov
push
inc
mov
or
jle
icebp
mov
sbb
cmp
push
push
mov
push
xor
dec
pop
mov
and
sub
lea
pop
fmull
inc
sbbl
cmpsl
sbbl
or
add
jbe
arpl
lcall
hlt
cmp
roll
push
and
fdivrs
pusha
cmp
movsl
or
not
sbb
cmp
push
shr
insb
mull
loopne
jle
mov
or
sbb
out
or
mov
cmp
cmp
jae
push
cmp
shlb
push
mov
pop
lret
pop
adc
loopne
addr16
add
jb,pt
pop
sub
sub
xchg
pop
leave
push
std
notb
ret
lea
ljmp
sbb
cmp
rcrl
push
push
push
rcrb
cmp
mov
jmp
xchg
call
insb
or
cmpsb
lods
ret
imul
pop
enter
xor
lods
cmp
jo
inc
sub
incb
clc
test
aad
aaa
add
ret
cmc
pop
pushf
rcrl
or
cmp
sub
mov
xor
jno
cmp
jne
push
push
lock
push
fildl
jl
in
js
push
mov
mov
or
jne
or
orl
adc
cmp
cmpsl
popf
mov
jne
cmp
pop
je
movl
jo
add
and
jg
jnp
mov
addb
jl
add
ja
xchg
lahf
cli
add
xchg
push
pushf
jge
mov
movsb
sbb
cmc
push
mov
jnp
mov
pop
fdivl
lret
idiv
mov
push
mov
test
das
xchg
cwtl
mov
dec
or
jne
jecxz
fwait
jle
or
pop
push
and
add
dec
insb
loopne
lock
movl
or
xchg
or
mov
add
iret
cmpsl
mov
cmp
fisubs
fs
sarb
push
sbb
pop
add
icebp
xlat
pop
rorb
mov
jae
addb
push
lea
lods
enter
or
iret
cmp
push
add
push
lret
loopne
fcmovbe
push
sti
xor
loope
mov
pop
mov
adc
push
loopne
add
mov
add
sbb
push
push
cmp
ret
je
bound
imul
out
or
jne
dec
ficompl
inc
out
insb
arpl
jl
bound
mov
pop
sbbl
cmp
pop
divb
jb
cmp
loopne
jno
ja
push
mov
out
push
cmp
dec
or
pop
rorl
pusha
mov
clc
jle
aas
or
push
adc
jge
cs
pop
in
pop
in
push
add
or
arpl
xchg
out
cmp
leave
addr16
lcall
or
ret
push
xor
or
shrl
cmpb
adc
push
ret
pop
inc
insb
scas
push
in
sub
or
or
iret
test
and
out
stos
mov
sbb
fldcw
adc
bound
push
xchg
add
fstpl
jno
lods
sbb
mov
out
incb
adc
xor
mov
add
aas
lret
mov
sub
call
sub
mov
inc
add
lods
mov
add
pop
mov
insl
or
xor
out
popa
inc
lods
dec
push
data16
int
add
addr16
fadds
outsb
mov
clc
push
push
mov
dec
jge
jbe
and
into
inc
and
mov
xor
sbb
push
js
lret
aad
jecxz,pn
fs
sub
shl
pusha
pusha
add
lahf
push
mov
push
pop
inc
shrl
inc
mov
shrb
outsl
lds
xor
mov
add
add
inc
mov
cmc
int3
cmpsb
clc
negl
adc
adc
pop
test
sub
js
and
adc
pusha
xor
popa
add
xchg
int3
in
dec
xor
inc
jae
fldl
pushl
ss
neg
sbb
inc
inc
adc
andb
mov
cmpb
notb
rorb
mov
fiadds
pop
movsl
lahf
sub
sub
bound
cmp
out
push
scas
or
das
push
and
and
adc
xor
jae
or
pushl
adc
lahf
cmp
jle
mov
movsb
repz
aaa
out
push
sbb
and
js
mov
cmp
sarb
inc
lock
jl
ret
pop
adc
clc
mov
test
fmuls
stos
jnp
jbe
pop
mov
sub
out
mov
inc
mov
dec
push
pop
cmp
mov
movsl
xor
fs
cmp
sbb
xor
cmp
or
mov
insl
xor
or
icebp
into
scas
mov
or
push
inc
or
mov
ja
mov
mov
push
shrb
and
jo
int3
mov
xchg
mov
adc
dec
push
in
adc
je
push
sub
scas
adc
lahf
and
xor
xlat
sti
jne
insl
push
push
or
mov
xor
dec
inc
insl
mov
lea
mov
or
push
add
dec
sbb
sbb
push
js
dec
cmp
movsl
push
xchg
mov
mov
pop
push
sbb
lea
mov
or
punpckhbw
sbb
movsb
not
push
insb
das
movsl
loope
mov
call
xchg
push
shlb
sarb
insb
pop
lea
les
movsl
mov
adc
repz
push
mov
in
ljmp
sub
loopne
adc
call
dec
fsubr
pop
mov
mov
xchg
pop
and
out
cmp
pop
sub
mov
pop
lods
sbb
push
scas
jecxz
imul
addr16
dec
aas
mov
fs
mov
aam
jge
aas
mov
push
push
cld
das
cmp
push
push
and
lock
add
loopne
clc
nop
dec
lock
rclb
fldt
mov
ja
push
aam
jnp
mov
cmp
test
push
pop
pop
adc
add
in
jecxz
cmp
stos
push
ljmp
mov
jmp
xor
push
pop
js
inc
pusha
je
sbb
pop
in
sub
mov
push
xor
add
cwtl
enter
xor
je
loope
lods
stos
mov
test
dec
enter
push
jl
mov
push
sbb
sti
fucomip
push
sub
fistpl
fistpl
jae
ret
je
push
cmp
rorb
and
outsl
fcmovnb
rcl
xor
nop
inc
push
mov
mov
mov
cmpsb
in
or
pusha
dec
mov
imul
lock
xor
addps
jb
in
adc
push
xchg
sbb
and
add
pop
push
mov
scas
sub
ror
cmp
or
enter
mov
in
jo
inc
add
jecxz
lahf
adc
sub
cmp
push
xor
sub
les
inc
mov
hlt
fcoml
cmp
ficomps
out
jge
in
outsb
out
mov
dec
leave
jae
mov
mov
mov
jo
test
and
repnz
test
cwtl
adc
mov
leave
xchg
cmp
int3
jl
sbb
in
pop
out
lret
pop
adc
mov
ret
enter
sbb
mov
cltd
lods
sub
pop
leave
enter
jmp
shlb
or
sbb
sbb
je
sbb
dec
mov
rcrl
lock
mov
jmp
dec
test
pop
push
sbb
adc
pop
mov
ljmp
pop
mov
iret
push
fmuls
mov
add
jge
pusha
adc
or
dec
jle
push
sub
sub
or
fiadds
jp
pusha
and
cmpsl
push
xor
sbb
lds
mov
insl
inc
push
inc
adc
add
mov
push
mov
mov
out
dec
mov
aam
in
js
mov
test
and
bound
sub
es
push
jmp
adc
dec
xchg
xchg
scas
orl
out
push
mov
test
xchg
jne
xor
sbb
test
fimull
pop
jl
scas
je
sub
test
and
pop
adc
sbb
das
aam
xor
and
mov
push
xor
das
mov
lret
push
jle
pop
xchg
dec
xor
jne
mov
fcmovne
push
push
xlat
pop
enter
nop
loopne
dec
ret
insb
rcll
je
imul
test
push
add
out
xchg
adc
xor
int3
mov
call
xchg
mov
xchg
or
sbb
mov
ja
add
jmp
lea
and
or
push
add
btc
fildl
in
or
push
subb
push
and
rorb
inc
adc
mov
imul
jno
push
push
sbbb
mov
sbb
out
into
cmpsl
cmp
adc
pop
leave
or
addb
inc
adc
sub
push
mov
or
enter
subl
push
and
sbb
sbb
lock
inc
pop
add
fistpl
or
pop
in
jns
jno
test
in
pop
push
sbb
pop
clc
popf
push
and
pop
sahf
sbb
loopne
sbb
cmpb
pop
xor
cwtl
push
sahf
les
testb
xchg
pop
nopl
rcrb
pop
not
xchg
ret
push
fs
testl
pop
jle
clc
add
add
rclb
cmp
gs
mov
pop
lock
js
je
mov
insl
mov
pushf
in
hlt
xchg
movsl
and
scas
pop
dec
adc
mov
add
sub
mov
add
mov
inc
and
mov
and
cmp
pop
sub
stos
xorb
lret
add
cmp
fists
fidivrl
pop
hlt
je
push
push
pop
loop
add
orl
bound
mov
lock
mov
mov
cld
lock
sbb
ja
add
adc
imul
jne
lcall
cmp
add
xor
outsb
push
pusha
and
pushf
jl
push
and
mov
add
and
pop
and
testb
mov
cmpb
and
jnp
add
push
xchg
pushf
std
daa
je
ljmp
je
aas
and
push
push
add
daa
fwait
sub
xchg
dec
test
test
test
mov
push
cmp
test
jns
scas
sub
pop
sub
push
ljmp
sub
push
leave
aam
sub
mov
jno
xor
je
inc
lret
ret
test
lret
cmp
or
cmp
pop
mov
fisttpl
stos
add
adc
jb
inc
pop
xor
mov
into
dec
cwtl
push
in
movsl
jp
dec
pusha
insb
adc
push
movsb
mov
ret
and
mov
cmp
mov
mov
imul
sbb
adc
mov
sub
cmp
mov
lret
push
mov
inc
es
add
loopne
jmp
test
adc
pop
push
dec
cmp
lock
inc
dec
push
push
mov
mov
lahf
mov
xor
loopne
insb
cmp
imul
call
int3
push
nop
add
cmp
dec
mov
cs
xchg
xchg
sub
sub
cvttps2pi
mov
push
enter
push
xor
push
ljmp
xchg
in
imul
fstpt
adc
xchg
and
xor
imul
test
gs
rclb
sbb
nop
push
pop
xor
xor
fistl
fisubrs
dec
or
and
push
jae
mulb
add
mov
push
sbbl
pop
in
or
xor
push
add
or
push
dec
cmp
xor
push
and
push
add
and
cmc
sub
or
jae
and
pop
and
sub
pop
xor
xor
aaa
arpl
ret
cmp
add
ret
icebp
xchg
aaa
cmpsb
jns
pop
shll
mov
push
imul
jo
pop
add
xor
fisttps
jl
mov
jecxz
pop
and
pop
pusha
add
icebp
pop
pushl
push
add
push
sub
push
rolb
xor
fsubl
out
sub
ret
push
jo
adcb
push
jo
inc
add
sub
in
jg
out
lea
jge
adc
je
push
push
jl
push
aaa
add
dec
adc
sub
xchg
sub
and
push
sub
mov
pop
pop
mov
adc
arpl
movd
test
sbb
xor
adc
push
stc
pusha
daa
push
loope
nop
nop
add
js
or
mov
add
ret
sbb
lahf
nop
in
adc
lock
lcall
mov
dec
add
dec
add
add
mov
mov
iret
adc
push
ja
mov
popf
push
lods
ss
imul
shl
mov
mov
lock
jns
or
jne
mov
pop
pop
add
jns
or
into
fsubs
sahf
or
mov
jno
pop
add
test
jl
adc
loope
test
fisttpl
inc
out
pushf
push
add
pop
and
data16
sub
shll
jg
fstpt
cmp
pop
out
jne
or
je
sub
cs
push
pop
mov
and
das
mov
sub
js
push
rclb
cwtl
add
dec
jecxz
clc
jns
add
cmpb
mov
cmpb
out
insl
dec
lods
push
jne
or
xchg
cmp
sti
test
add
xor
add
add
adc
not
add
repz
je
aas
add
mov
jl
push
lods
popf
cmpsb
add
cld
sub
loop
out
loopne
roll
push
je
push
mov
je
icebp
fnstenv
or
mov
dec
xor
jb
fnsave
leave
cmp
push
adc
cmpsb
lock
addr16
mov
dec
clc
jg
outsb
fiaddl
or
les
or
icebp
ds
push
cld
inc
int3
add
mov
or
push
adc
push
fsubl
jae
xchg
cmp
loopne
insl
xor
adc
adc
mov
test
push
cmp
xor
jge
pop
mov
sub
jmp
jge
imul
push
mov
mov
int
or
mov
adc
sub
dec
xlat
adcb
add
xor
int3
icebp
or
pusha
or
mov
andb
cmp
adc
out
aas
inc
out
test
repz
je
fistpll
sbb
mov
xor
inc
mov
inc
pop
lock
jle
mov
int
cmp
dec
push
xor
jl
sub
ret
jle
mov
sbb
inc
mov
sbb
mov
sub
inc
sub
mov
mov
sub
add
clc
cs
and
cmp
mov
mov
lcall
stc
mov
sbb
add
push
push
nop
fnsave
add
jmp
add
out
mov
filds
out
roll
add
or
mov
fiadds
xorl
cmp
push
jne
pop
or
inc
add
pop
push
fldt
jecxz
testl
or
subl
xor
jbe
xchg
addr16
mov
push
xlat
xor
fisttpl
sbb
lock
pop
test
dec
jbe
push
or
ljmp
mov
mov
inc
cmp
lock
and
xchg
add
sahf
les
sub
jge
call
push
or
movsl
jnp
or
and
sbb
push
mov
inc
loopne
push
shll
icebp
cli
stos
pop
lcall
call
push
imul
lods
pop
data16
subb
out
and
in
push
sub
pmulhuw
push
push
icebp
jno
adc
ret
mov
imul
nop
pop
add
dec
in
pop
mov
test
mov
or
mov
pop
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
aas
xchg
add
movsl
add
mov
mov
push
lahf
addl
loopne
lea
push
add
in
push
clc
push
push
call
and
sbb
addl
iret
add
ss
lret
sahf
mov
sbb
jmp
call
push
inc
std
or
cwtl
leave
mov
jbe
mov
sbb
or
cwtl
pop
daa
loop
add
xchg
cmpsb
js
sbb
jo
adc
cmp
lds
or
or
and
les
adc
movups
push
mov
xor
and
js
and
add
xor
pop
sbb
pop
mov
add
pop
xchg
mov
mov
add
es
mov
rcrb
sbb
fcoms
cmp
pop
fsub
loopne
sub
rcll
mov
push
jo
shrb
cmp
je
pushl
push
pushf
mov
fsubs
or
adc
mov
push
adc
push
ret
loopne
fists
inc
push
push
pop
add
inc
mov
pop
xchg
xchg
cmp
sbb
popf
cmp
adc
xchg
fistpl
repnz
cmp
gs
pop
sbb
xlat
mov
mov
test
testl
push
mov
addb
in
mov
jmp
inc
mov
outsl
sar
xor
xor
aaa
sarl
push
cmp
jg
mov
mov
jmp
loop
rorb
leave
shll
negb
cmp
cs
pushf
in
jecxz
mov
jnp
mov
cmp
or
xchg
aaa
in
sub
mov
cs
push
jl
mov
push
jne
test
fldpi
cs
and
or
pop
jmp
mov
push
pop
jnp
push
arpl
xor
and
xchg
call
or
mov
sub
aam
sti
jg
dec
in
mov
lea
cmp
jae
mov
incl
scas
lea
xor
pop
add
adc
call
inc
add
loop
ret
in
adc
shlb
pushf
in
sub
adc
cld
push
sahf
imul
add
int3
cs
jo
sarb
fistpll
and
push
push
and
sbb
inc
cmp
cmp
add
in
out
cmpsl
js
lcall
fisttpl
fwait
popa
mov
push
pop
xor
dec
add
lea
and
sti
fidivrl
push
push
push
mov
dec
push
push
xor
dec
cmp
loope
sbb
test
xchg
or
lock
mov
mov
inc
sub
mov
dec
loope
cmp
inc
mov
mov
ljmp
lcall
sbb
leave
js
push
hlt
jg
pop
lret
in
dec
xor
inc
jno
sub
dec
jmp
cmpl
push
inc
inc
and
jae
xor
add
movl
imul
mov
add
mov
lahf
pop
add
add
xchg
jns
loop
inc
mov
hlt
jl
repz
jg
shr
push
or
adcb
cmp
test
or
inc
cmp
mov
filds
shll
jle
mov
push
jbe
add
push
loopne
bound
popa
xor
lds
mov
pop
hlt
lea
xchg
movsl
lods
aaa
rorb
dec
scas
ss
bound
add
xor
mov
push
pop
push
cli
rep
push
mov
add
jbe
cmp
mov
mov
mov
fnstcw
add
or
add
jmp
aam
or
mov
push
add
sarb
andb
adc
cmpsl
mov
adc
or
ljmp
je
push
and
adc
ljmp
rolb
and
add
std
xchg
adc
or
mov
icebp
aaa
pusha
jnp
sub
inc
sahf
inc
shll
or
decl
and
inc
cmp
ud0
movb
test
cmp
or
and
sbb
mov
dec
mov
jg
dec
sbb
sbb
pop
out
les
sbb
sub
setne
or
rcrb
ret
inc
mov
jne
outsb
pop
lds
mov
push
scas
adc
je
sbb
js,pt
jo
jg
mov
mov
jbe
mov
test
popf
pop
or
push
icebp
and
push
lea
clc
cwtl
idiv
ret
mov
rclb
cmp
jne
je,pn
sbb
cmp
jne
int3
add
roll
popf
mov
sbb
sbb
push
mov
addl
aad
out
cmp
clc
out
sbb
pop
hlt
jne
hlt
push
out
add
out
add
je
push
lods
push
push
pop
add
xor
add
in
or
scas
and
and
inc
pop
push
inc
inc
cmp
pop
ds
push
pop
js
mov
sub
adcb
jg
sar
or
std
jo
pop
push
sbbl
lret
ret
pop
cld
xchg
sub
mov
ret
insb
cld
pop
or
cmp
lea
jbe
mov
push
mov
add
test
push
iret
test
or
adc
mov
int3
roll
pop
faddp
add
jno
mov
add
loop
mov
cmp
xorl
movsl
push
fsave
adc
adc
fwait
outsb
call
es
out
jbe
mov
in
push
fs
dec
enter
mov
nop
jl
dec
mov
lea
xor
sub
mov
call
aad
xchg
sti
sahf
int3
sbb
push
imul
pop
or
in
adc
lods
lods
lods
in
mov
mov
push
mov
andb
dec
inc
clc
sub
frstor
add
xor
jae
xchg
dec
sub
sbb
lods
pop
fldt
jne
addb
mov
ror
mov
and
jo
fiaddl
mov
scas
jmp
shll
adc
shll
xchg
add
cltd
ret
sub
jns
test
dec
cmp
xor
push
test
test
cltd
or
nop
inc
enter
nop
cmp
add
pop
nop
cmp
add
add
and
imul
addl
mov
push
pop
inc
mov
cmp
pop
push
push
cmp
aas
jmp
je
xchg
and
push
sub
jmp
cmp
sbb
inc
push
cmp
pusha
rolb
or
inc
jb
aas
in
and
adc
fdivl
mov
imul
adc
and
stos
add
pop
das
xchg
frstor
dec
push
push
push
cmpsb
pop
and
cs
add
sbb
addb
add
out
mov
test
hlt
into
lcall
mov
mov
out
add
enter
push
push
sub
jmp
pushf
sub
in
inc
add
adc
jl
sub
loope
sub
dec
adc
nop
pop
test
stos
lock
nop
or
cmc
gs
jo
xor
mov
mov
pop
inc
adc
and
test
data16
and
adc
dec
data16
add
and
push
xor
dec
pop
lcall
sbb
or
and
sahf
and
ret
not
push
adc
pop
or
sbb
les
mov
iret
mov
inc
or
or
and
test
add
negl
pop
push
push
insl
push
adc
sti
lea
mov
dec
adc
leave
gs
stos
cmp
and
sbb
pop
ret
push
and
pop
inc
sbb
cwtl
sbb
and
insl
add
ret
inc
inc
stos
test
loop
hlt
lea
push
lcall
xchg
push
lock
call
mov
rcrb
ja
push
xchg
stc
movups
lahf
out
outsl
or
je
cmp
popf
cmpl
jne
ret
push
cmp
mov
outsb
mov
cltd
pop
negl
mov
add
mov
add
push
xchg
mov
push
into
pop
mov
xchg
mov
fadds
dec
add
mov
lea
pushf
push
jbe
sahf
pop
mov
data16
cmp
clc
je
pusha
jmp
sub
or
je
mov
je
sub
test
push
push
and
wbinvd
dec
sub
jmp
mov
mov
xor
daa
or
mov
jne
and
popf
pusha
shl
jmp
push
add
push
mov
xor
push
jmp
sub
add
loopne
std
jnp
inc
jp
fcomps
xchg
or
pop
push
mov
fyl2x
xchg
mov
sbb
mov
mov
loopne
and
and
arpl
iret
xchg
insb
push
xor
push
push
daa
mov
or
pop
insb
lea
enter
int3
xor
popl
inc
sbb
scas
sarl
cmp
je
cmp
push
dec
stos
xor
loopne
fs
sbb
leave
adc
cli
sbb
stc
sub
sbb
fstpl
inc
jae
jge
mov
je
xchg
push
push
cmp
movsl
and
jmp
and
jmp
dec
dec
icebp
shlb
sbb
cmp
loope
pop
pop
bound
lea
iret
rorl
pop
sbb
popf
negl
push
std
decl
mulb
mov
add
pushw
and
icebp
inc
sbb
shrl
push
inc
sbb
fstl
lea
jbe
lahf
mov
add
sub
xchg
out
lahf
rorb
fmuls
xchg
push
int
push
es
mov
push
js
out
push
or
xchg
xchg
pop
les
movsb
cld
jge
pop
inc
decl
push
mov
mov
pop
push
lea
sub
push
push
push
add
push
lea
add
gs
cmp
dec
fidivs
add
dec
mov
sbb
fwait
xor
jle
inc
pop
test
repnz
xorl
push
pop
or
sti
pop
repnz
arpl
sbb
call
insb
sbb
and
sub
mov
pop
shrb
scas
sbb
push
aam
or
mov
mov
or
mov
out
add
popfw
popf
push
pop
xchg
in
test
push
stos
pop
popa
enter
popa
mov
cmp
jmp
adc
or
in
cmp
cmpsl
ret
movl
movsl
inc
aaa
jno
jle
ss
jno
jmp
or
pop
sahf
pusha
and
mov
repz
xchg
insb
testl
adc
out
ret
adc
dec
jne
push
add
pusha
mov
dec
or
jae
cwtl
hlt
xorb
push
in
subb
imul
inc
lcall
inc
mov
inc
je
and
icebp
in
xchg
sbb
ret
sub
xor
mov
add
call
push
mov
notb
xor
lods
mov
mov
dec
push
push
push
cmp
mov
pushf
jl
movsl
xlat
xor
pop
and
mov
inc
jl
sbb
add
jg
and
xorl
loopne
jecxz
popa
rclb
pop
mov
popa
aam
push
aam
das
xor
mov
jnp
and
sbb
int3
push
xchg
out
arpl
add
fadd
pop
je
xchg
push
or
add
jle
loopne
add
cli
fucomi
inc
push
rorb
add
cmp
test
fdivr
ret
jmp
sub
or
je
scas
scas
xor
incb
mov
jecxz
int3
cmp
jne
push
sub
xor
stc
adc
pop
fdivrs
addb
dec
iret
je
jbe
sti
pop
lea
push
loopne
add
add
pop
add
mov
mov
sbb
and
mov
pop
pushl
call
push
or
mov
dec
or
sub
xchg
adc
sub
or
sub
clc
lcall
push
mov
fisubrl
dec
lock
div
push
dec
je
lods
lods
pop
push
dec
push
pop
rorl
inc
jge
jge
je
movsb
sub
sub
pop
mov
push
push
pusha
cmp
in
dec
mov
out
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
sbb
xor
int
fcomi
and
rcr
push
xlat
mov
lea
rep
push
in
add
lods
enter
fwait
test
cmp
addb
jo
jmp
out
mov
popa
mov
add
pop
mov
fcomps
pop
insl
xor
movsb
in
sbb
dec
out
insl
shll
cmp
push
push
mov
idivb
push
mov
mov
xor
ret
je
test
sub
mov
neg
sbb
and
push
push
fstpt
sahf
sub
stc
sahf
xchg
fists
pushf
in
push
aaa
test
sub
pusha
sahf
dec
and
jl
dec
mov
inc
mov
mov
and
repnz
punpckhdq
fsubrp
jnp
xor
jne
jmp
pushl
and
inc
les
xchg
inc
les
xor
insl
jo
pop
jns
add
loopne
mov
in
pop
int
rcrb
idivl
test
adc
jg
loop
jle
cmpl
jne
pushl
sbb
out
loopne
and
jmp
subl
jmp
xorl
ret
cmp
mov
scas
push
push
dec
rcr
dec
add
ret
or
add
pop
stos
data16
in
cmp
je
cmp
mov
ja
rcrl
push
pushf
das
pop
push
lcall
ja
or
mov
xchg
adc
push
mov
add
cmp
add
int3
imul
adc
xor
clc
xor
icebp
incl
jne
movb
fs
fucomip
jmp
cmp
jne
jae
fnstcw
test
jecxz
xor
ds
cwtl
cmp
push
mov
ret
dec
aas
mov
lock
pop
lea
xchg
das
lret
mov
sbb
sub
xor
and
xor
rclb
test
and
sub
add
loopne
or
popf
sub
adc
daa
mov
mov
sbb
sub
push
leave
push
mov
hlt
add
push
mov
not
nop
pop
cmp
iret
push
adc
enter
das
dec
lock
push
push
out
lahf
das
mov
add
add
jbe
cli
jle
xor
or
mov
test
or
dec
loopne
mov
cmp
cs
dec
inc
mov
sbb
push
push
jo
push
push
push
lea
add
test
ds
test
push
and
ds
mov
mov
push
lret
jl
iret
cmp
xchg
andb
jbe
xor
ljmp
xor
push
cmpb
sbb
sbb
test
aaa
mov
bound
add
dec
xor
inc
fldl
fmull
xor
dec
jno
sbb
out
push
jo
out
push
push
push
aaa
movsl
roll
mov
sub
mov
jp
dec
pop
push
xchg
cli
inc
fiadds
add
lret
imul
add
insb
andl
inc
negl
popa
in
push
dec
sahf
dec
ds
add
andl
jge
imul
lds
and
push
loope
adc
fmuls
push
jo
mov
dec
dec
xchg
cmp
pop
sub
mov
inc
test
jmp
in
mov
xor
add
in
in
shl
xchg
xlat
push
adc
add
add
cmpb
jecxz
and
xor
aaa
push
pop
cmp
push
adc
pop
push
es
pop
in
jmp
jne
cs
sub
push
push
mov
add
jmp
adc
sbb
and
insb
repz
mov
addb
push
mov
push
cmp
or
push
mov
sub
icebp
push
push
push
test
les
pop
xor
adc
add
adc
pop
ror
fs
popa
add
inc
sub
push
jecxz
daa
test
sbb
or
out
jo
sbb
jo
mov
inc
lea
inc
nop
adc
fsubs
shl
xchg
dec
mov
or
sbb
aas
mov
pop
clc
pop
loope
mov
lea
push
sahf
in
jecxz
decl
orl
imul
jle
cwtl
mov
jge
mov
iret
repnz
mov
idiv
push
mov
push
push
mov
adc
into
idiv
xor
mov
neg
push
pop
test
jg
mov
push
sbb
iret
add
rcrb
pop
jnp
loope
xor
andl
mov
cld
pavgw
or
aam
fstp
adc
lock
fldz
push
cmp
push
fstpl
push
pop
insb
xor
xor
xchg
enter
fsubrs
xor
sbb
inc
sbb
mov
in
push
into
jp
xor
pop
rcrb
mov
js
add
out
sbb
dec
fs
or
ret
mov
mov
cmp
mov
lahf
xor
ljmp
and
aas
out
xor
dec
lea
or
mov
jge
xchg
sub
cmp
or
or
out
jg
jge
jmp
mov
not
hlt
fildl
mov
test
jns
faddl
sbb
ds
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
mov
pop
add
pop
add
pop
pop
cmpsb
inc
les
cmp
add
das
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
pop
push
pop
mov
loopne
jg
pop
movb
push
decb
mov
mov
push
cmpsb
cs
mov
std
push
cmc
mov
cld
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
adc
jne
push
gs
fstpl
bound
imul
jecxz
pop
and
sbb
rclb
dec
mov
add
pop
leave
movsl
adc
pop
test
lds
push
add
pusha
stos
sub
pop
js
nop
sub
test
add
imul
je
add
fs
sbb
repnz
xor
xor
fs
or
iret
addr16
dec
jns
and
ret
sbb
xor
mov
inc
jne
rorb
adc
mov
push
movsb
mov
movb
adc
push
fninit
in
push
fildll
pop
leave
xor
or
sub
mov
lea
hlt
ret
std
or
sbb
inc
mov
push
push
pop
in
lea
adc
cltd
dec
mov
out
jg
xor
orb
push
push
imul
adc
adc
xchg
scas
jle
andl
add
push
xor
adc
popa
fsub
add
scas
jle
sub
add
outsl
and
dec
dec
or
stos
jb
mov
sbb
pop
push
inc
es
dec
jge
dec
mov
clc
push
outsb
adc
fs
pop
call
int3
out
add
xor
pop
pop
xlat
and
inc
ds
and
xchg
ret
pop
test
mov
and
inc
cli
jl
jns
and
cmp
loopne
push
dec
aaa
and
inc
mov
and
mov
mov
sbb
and
test
xchg
push
mov
fs
adcl
rcrl
sbb
push
add
push
mov
cmpb
clc
setb
test
enter
enter
mov
add
xor
sub
andl
push
lea
push
mov
aaa
cmpb
jle
loopne
icebp
sub
or
js
dec
xlat
sbb
in
add
add
jo
jl
dec
mov
sbb
mov
hlt
imul
call
push
sub
je
xlat
mov
imulb
xor
add
shrl
inc
adc
xlat
das
push
or
int
mov
add
sarb
push
cmp
in
lods
or
lods
cmp
outsl
fs
fdivrl
cmp
sbb
clc
jno
lock
cmp
add
movsl
subb
add
rcll
sbb
loopne
stos
add
jne
sub
enter
pop
adc
call
xor
xorb
push
or
mov
pop
jmp
jp
cmp
in
sti
jmp
push
adc
mov
out
dec
mov
mov
ret
push
loopne
xor
fs
pop
in
enter
sub
and
push
test
orb
mov
fisubs
js
mov
inc
dec
jo
mov
pop
add
xchg
mov
imul
xchg
insl
and
add
jmp
fadds
iret
aam
mov
dec
push
inc
add
or
dec
ss
bound
imul
xor
scas
sub
lret
adc
les
jle
push
enter
sbb
dec
rolb
push
clc
pop
add
call
imul
fadds
orl
dec
xor
jo
insb
fmull
adc
mov
fs
xor
xor
push
clc
push
sub
js
mov
mov
mov
pop
push
int3
xor
jmp
les
clc
aam
add
je
add
mov
or
dec
add
jb
add
mov
dec
push
push
sbb
adc
mov
pop
push
cwtl
pop
bound
ret
in
and
pusha
xor
pusha
lea
call
sub
and
mov
and
and
cmp
mov
imul
mov
and
push
adc
add
out
in
imul
push
or
cmp
scas
adc
test
enter
enter
push
jp
adc
out
inc
push
movzwl
jb
daa
jnp
jmp
and
rclb
adc
xchg
jnp
jne
mov
test
jns
insl
or
xor
adc
inc
icebp
push
pushl
adc
cmpsb
mov
pop
xor
and
xor
dec
cmp
mov
sbb
in
jecxz
inc
test
je
xor
icebp
fistpl
mov
test
je
cmp
push
dec
mov
jmp
dec
mov
cmc
jge
jmp
imul
and
mov
mov
jge
add
xlat
add
inc
xor
shlb
xchg
sub
mov
ljmp
jle
fmulp
js
cmp
jge
mov
mov
jl
shlb
jl
movb
pusha
jle
jne
add
pushl
inc
mov
jmp
cld
mov
std
push
pop
pop
dec
call
sbb
and
inc
push
jnp
mov
xchg
sbb
cmp
or
enter
mov
mov
cmp
mov
mov
add
and
cmp
daa
pusha
mov
adc
loope
mov
js
and
or
or
push
and
stos
push
adc
test
xorl
mov
les
orb
or
push
push
pop
cmp
bnd
sub
fdiv
inc
arpl
in
add
pop
fadd
aam
jo
pop
rclb
test
pushf
xchg
pop
int
pop
sub
pop
loope
adc
or
xor
mov
test
icebp
ds
push
and
pop
mov
add
xor
and
xchg
adc
and
call
pop
and
mov
fcmovu
push
iret
ss
cmpsl
push
bound
in
or
jae
movsb
push
mov
cmp
push
or
loopne
popa
push
or
pop
xchg
hlt
jg
add
jo
xor
iret
mov
push
mull
jnp
popa
sahf
outsl
mov
sbbl
pop
sbb
sbb
sbb
pop
adc
ret
pop
les
mov
ret
xor
xor
xchg
xchg
add
imul
sub
mov
pushf
call
sbbl
in
and
jns
xor
jl
mov
dec
imul
mov
or
stos
and
loop
cmp
cmp
jle
cmpsb
enter
or
push
push
insb
xchg
jle
jge
mov
mov
scas
or
adc
sub
xorl
call
add
outsb
add
loopne
mov
jl
rorl
rclb
sarb
outsl
es
or
jg
jbe
movzwl
clc
and
jp
push
push
pop
scas
daa
aam
ds
cmp
orb
xor
inc
add
cmp
push
inc
bound
lcall
addr16
jbe
jbe
pop
test
push
sbb
inc
jne
lods
sbb
jno
iret
mov
adc
movb
mov
add
xor
inc
lcall
adc
cwtl
inc
dec
lods
xor
push
lret
or
dec
add
or
or
enter
and
into
push
repz
push
sahf
mov
mov
mov
rolb
hlt
mull
mov
notl
pop
mov
xor
xor
inc
inc
inc
arpl
push
inc
sar
jae
loopne
jno
loop
sub
dec
cld
add
lret
fildl
je
push
mov
sub
mov
push
cmp
ret
aad
and
lea
andl
add
movl
sub
mov
jno
movl
push
sbb
xchg
dec
ror
imul
add
andl
jecxz
adc
xor
xor
call
cmp
ret
and
dec
push
cmp
cmp
imul
push
mov
int3
test
leave
sbbb
jo
ljmp
mov
adc
out
daa
mov
das
nop
sbb
xchg
sbb
inc
add
add
mov
or
sbb
sbb
pop
or
call
fneni(8087
push
add
test
inc
sub
sti
aad
addl
icebp
ret
and
add
js
call
or
push
ficoml
or
icebp
dec
cmp
js
and
or
sbb
loop
add
push
fs
push
call
dec
add
fldenv
push
adc
fisubs
and
sbb
or
sbb
je
gs
jge
idivb
sbbb
lock
inc
cs
lret
push
insb
int
adc
jg
dec
mov
ljmp
cmp
imul
jnp
and
test
dec
mov
rcll
inc
inc
add
fildl
xlat
rorb
mov
xchg
das
adc
jp
xchg
dec
mov
and
sbb
xchg
jle
push
aas
flds
dec
sbb
fstps
adc
push
xor
adc
outsl
add
xor
xor
adc
inc
or
data16
sbb
movsb
or
pop
out
and
stos
test
add
add
outsl
add
mov
mov
add
out
cli
push
push
mov
fwait
or
sahf
add
pop
xor
push
sbb
sbb
sub
sub
popf
jl
add
mov
lock
mov
cmp
mov
xchg
repnz
mov
lea
xchg
mov
xchg
aaa
repz
xorb
lea
mov
xor
test
xchg
pushf
mov
adc
xor
sub
add
xor
and
sub
add
js
enter
adc
aad
mov
movsb
movsb
imul
add
fsubrs
pop
cli
aad
fwait
cmp
xchg
lods
pop
movmskps
inc
xchg
xor
add
inc
aam
es
dec
push
outsl
cmpl
mov
mov
or
pop
hlt
sub
adc
rorl
sub
mov
xor
shl
leave
add
xchg
call
lods
clc
lock
or
lods
mov
mov
xchg
jg
adc
cmp
push
aam
dec
jnp
mov
sbb
rclb
dec
mov
ja
test
or
sub
xchg
mov
loope
and
stos
aaa
stos
push
sub
sbb
and
mov
rcrb
xor
leave
pop
mov
push
ret
mov
mov
mov
pop
add
jb
lret
mov
jne
xor
jo
inc
lea
adc
subl
adc
dec
je
rcr
xchg
mov
movsb
and
repnz
mov
out
pop
iret
xor
pusha
push
jns
enter
adc
and
cmp
sbb
adc
movsb
inc
jb
test
pop
push
push
scas
imul
mov
js
mov
mov
add
notl
mov
test
mov
xchg
pop
mov
mov
mov
inc
lcall
jge
inc
aaa
test
mov
add
adc
movzwl
sbb
add
xchg
pop
pop
inc
mov
je
pop
jbe,pt
fbstp
adc
push
sub
test
imul
mov
fisubrl
xor
jbe
rorl
add
mov
push
popa
fnstsw
insl
jp
testb
adc
push
cli
mov
inc
xor
test
int
test
fs
data16
push
fsubrs
xchg
fs
lock
adc
mov
lock
imul
divl
ret
subb
mov
aas
mov
cmp
in
sbb
and
add
or
push
add
ret
cmp
push
test
jns
pop
fcmovnbe
mov
jns
notb
jae
jo
mov
sub
push
add
loopne
push
mov
mov
lea
push
mov
sbb
push
in
cmc
lock
and
pop
pushl
or
into
pop
pop
mov
mov
divl
mov
cmc
mov
inc
jl
mov
sub
cli
xor
sub
xchg
mov
shll
ret
mov
and
mov
mov
test
or
cmp
mov
xchg
clc
jecxz
add
mov
add
inc
out
clc
adc
dec
inc
aam
or
dec
inc
jmp
mov
jmp
ss
jo
push
push
repnz
dec
sub
in
add
add
pushl
aas
jnp
sub
push
or
enter
push
mov
mov
xchg
or
sbb
movsl
dec
add
push
scas
in
sbbb
add
push
pop
iret
fstps
test
or
push
test
cltd
movsb
and
imul
fisttps
imul
push
gs
xor
add
jns
sbb
xorl
jns
dec
mov
test
les
fwait
push
faddp
imul
lahf
pop
sub
arpl
adc
repz
gs
or
sub
addl
mov
mov
mov
adc
test
jae
shll
pop
ljmp
shlb
push
sub
jp
mov
lods
inc
mov
gs
pop
adc
lret
mov
mov
pusha
scas
test
sub
pop
loop
in
fimuls
adc
pop
and
andl
in
insb
shll
pop
and
mov
add
test
mov
pop
mov
fadds
shl
lds
cs
and
movl
mov
popa
jne
pop
loope
adc
lahf
das
pop
jge
adc
add
cli
fcoms
mov
clc
dec
loopne
adc
add
pop
xchg
fsts
cmpsb
popa
testl
and
aam
cmp
dec
loopne
stos
insl
je
push
push
test
shr
pop
xchg
pop
push
dec
inc
mov
nop
and
sbb
jp
je
pop
aam
inc
cs
jbe
mov
aad
push
xor
and
sbb
imul
push
sbb
pusha
leave
push
dec
cmc
sbb
sbb
stc
shlb
outsl
jno
lret
enter
rcrb
jno
xlat
pop
ret
jae
mov
loopne
incl
jne
push
pop
cmp
les
or
andb
ss
and
out
mov
outsb
adc
cmp
adc
and
sarl
jns
push
mov
jmp
lea
imul
pushf
stc
and
and
stc
and
pop
adc
test
insl
add
mov
mov
sub
add
xchg
mov
es
cmp
scas
cwtl
pop
sub
add
cmc
fsubrl
mov
daa
int3
sub
ja
or
outsb
mov
pop
filds
push
mov
jge
mov
jae
mov
mov
cmp
adc
inc
fcoms
aas
aam
jo
dec
sub
test
xor
fs
sub
push
add
andl
into
int3
cwtl
scas
outsb
repnz
dec
or
xchg
dec
paddusb
cld
push
add
push
xor
mov
mov
adcb
push
int3
add
pop
sub
or
sub
insl
sub
sbb
cmp
stc
ja
mov
pop
pop
mov
les
mov
call
push
pop
jb
inc
es
pop
loope
cld
mov
inc
mov
sub
mov
cmpsb
push
xchg
push
call
leave
sub
jo
cmp
fnsave
sub
mov
ljmp
leave
mov
test
jle
add
pop
push
data16
add
in
popa
les
and
fcomps
add
and
inc
in
push
sti
rorb
xchg
mov
inc
jno
push
cwtl
or
dec
fs
xor
arpl
fisttps
and
pop
nop
out
mov
fadd
push
pop
pop
rep
movsb
adc
pop
or
sub
loope
pusha
leave
add
repz
mov
mov
test
xor
cli
ja
cmp
xchg
jnp
xor
lret
and
daa
sub
out
mov
cli
inc
aas
repz
fcmovnbe
jmp
cmpl
mov
data16
mov
mov
xchg
enter
ror
orl
push
fildll
adc
pop
divl
mov
xchg
andb
add
xchg
adc
adcl
inc
pop
jno
mov
or
mov
push
add
sub
push
sub
cwtl
inc
cmp
or
cmp
pop
xchg
xor
dec
push
pop
dec
mov
or
add
add
push
mov
scas
push
push
inc
pop
cmp
aad
js
mov
repz
xchg
out
mov
sbbb
cmp
jnp
int3
orl
adc
mov
push
add
cmpsl
pop
les
jo
pop
dec
hlt
sub
push
push
xor
xchg
sub
stos
out
inc
scas
rcr
jno
or
fs
push
jo
mov
mov
and
adc
jmp
xchg
or
push
push
js
sarb
inc
sahf
or
inc
push
push
mov
nop
inc
jb
jae
test
pop
adc
lods
lods
sub
or
sub
cmpsb
adc
pushl
mov
push
ficomps
scas
pop
sbbl
sbb
mov
pop
addb
lea
add
mov
sbb
mov
gs
mov
call
or
cmp
cld
stc
insb
imul
dec
or
inc
mov
call
push
mov
adc
inc
inc
or
xchg
mov
inc
jnp
sbb
adc
jb
into
fdivrs
pop
jmp
lods
test
call
add
push
sti
out
dec
jg
sub
mov
or
outsb
xor
popf
adc
test
loope
jns
inc
cmp
push
jae
adc
jp
mov
lods
cld
pop
push
push
add
mov
lret
push
call
sbb
push
sub
arpl
and
jb
xchg
cmp
and
jmp
add
leave
test
loopne
jo
adc
and
inc
outsl
or
jmp
ret
fcomp
or
xorb
mov
cmpsl
stos
aad
sbb
xchg
aas
scas
push
adc
mov
xchg
loope
clc
je
adc
lea
dec
hlt
loope
pop
mov
mov
push
lock
inc
mov
imul
push
bound
mov
mov
shll
fimull
pop
test
lret
cmp
jl
insb
mov
int3
xor
sarl
pop
sub
cmp
jle
mov
jmp
icebp
jne
push
std
call
push
insl
add
push
push
mov
pop
and
out
mov
dec
out
cli
scas
dec
cmp
dec
cmp
je
sub
loopne
loope
push
loopne
adc
outsb
dec
addr16
lock
fstps
sti
stos
add
and
sbb
dec
jmp
sub
xor
push
adc
in
dec
popa
stc
in
out
jnp
addr16
sub
lea
out
push
dec
or
adc
sbb
xor
out
push
push
or
mov
xor
call
and
out
insl
xor
ja
sbb
cmp
adc
loopne
or
loope
jmp
adc
call
cltd
repnz
add
jp
sub
dec
stos
inc
add
or
add
or
data16
pop
test
mov
jbe
add
cmp
icebp
or
je
mov
mov
lock
ds
jne
xchg
xchg
lock
inc
or
lea
mov
data16
dec
or
mov
sbb
or
shlb
ljmp
cmp
add
xchg
push
aaa
adc
outsb
push
scas
scas
xchg
lret
mov
xor
adc
mov
adcb
or
shlb
push
out
mov
imul
or
xor
sub
popa
fucomp
insl
xchg
jl
jmp
imul
sub
adc
add
dec
mov
fisttpl
push
push
in
inc
mov
mov
pusha
test
xor
cmpsb
pop
add
cmp
cmp
push
or
xor
or
lock
cwtl
int
loopne
mov
ds
add
mov
or
mov
adc
imul
mov
das
test
adc
aam
cltd
lds
lods
push
faddp
jmp
add
inc
sbb
call
cli
jmp
mov
jle
or
sbb
jo
negb
inc
cmp
jae
add
lods
ret
ds
cmp
jmp
jne
inc
push
jp
dec
ret
jl
push
icebp
cmpl
cmp
ja
lea
icebp
mov
cltd
insb
fildl
mov
inc
shl
jmp
push
sub
ljmp
sub
dec
jns
pop
sub
sbb
or
inc
and
dec
or
cmpb
or
add
add
push
push
std
inc
adc
inc
cmp
or
lock
in
mov
push
mov
mov
inc
sbb
dec
and
ss
push
or
push
jecxz
and
test
adc
jge
adc
push
push
or
dec
sub
mov
mov
hlt
jmp
jnp
sar
fwait
or
mov
mov
mov
mov
jmp
or
inc
fnstsw
add
es
sahf
in
leave
jecxz
xchg
dec
movl
xchg
ljmp
adc
lea
push
mov
cmp
je
cs
push
mov
sub
adc
mov
idivl
pop
mov
xchg
push
push
fisttpl
movsb
cmc
xchg
ret
and
sarb
outsb
push
add
inc
shrb
in
push
jl
push
sub
dec
das
dec
test
mov
loope
push
xchg
aam
clc
cwtl
in
js
push
push
mov
es
sub
jecxz
movsl
flds
mov
pop
jbe
test
adc
jae
sbb
inc
add
gs
inc
jp
and
mul
gs
cmp
lahf
xchg
cmpsl
mov
add
push
shr
mov
neg
push
add
add
push
mov
adc
js
or
out
jne
test
push
push
push
je
inc
jmp
leave
loop
sub
sbb
das
push
xchg
stc
subb
mov
mov
dec
sbb
bound
dec
mov
jmp
shlb
jbe
out
push
sbbl
pop
sbb
jo
xchg
mov
xchg
xchg
or
pop
ljmp
jno
cmp
mov
or
andl
in
sub
jnp
jno
xorl
fisttpl
aam
and
cmp
rclb
dec
mov
mov
inc
lock
add
inc
push
add
sbb
ret
movl
jge
inc
add
mov
push
add
lods
or
fisttpl
lds
notb
js
leave
push
mov
cmp
dec
imul
pusha
mov
mov
mov
mov
insb
lock
push
pusha
jb
adc
adc
loopne
jge
js
jl
add
push
roll
jecxz
lds
inc
les
push
add
jnp
sub
pop
jg
rcll
pop
fcompl
xor
pusha
aas
mov
push
or
xchg
cmp
ds
sub
je
jo
nop
inc
push
insb
push
pop
dec
in
dec
lahf
or
pop
or
nop
jmp
dec
mov
push
adc
ret
push
xor
call
mov
cmpsl
xor
or
test
inc
mov
add
cmp
js
mov
mov
test
sub
push
jecxz
cmc
out
je
orl
push
rclb
rcll
bnd
fimull
push
mov
cmp
mov
adc
dec
movq
pop
adc
pop
fwait
fs
and
test
dec
xor
rclb
rorl
sub
add
mov
popf
dec
adc
add
cmp
push
xor
mov
xchg
mulb
andb
push
jb
mov
xor
dec
or
mov
push
sub
je
adc
rsqrtps
cld
lea
loopne
mov
add
push
loopne
cmp
test
mov
out
sub
shl
xor
cwtl
nop
add
mov
or
xchg
and
lds
repnz
dec
adc
js
adc
dec
cmp
or
sub
inc
loope
pop
popa
push
push
mov
jns
nop
es
push
pop
lock
repz
imul
adcb
loopne
add
mov
add
rcrb
loopne
or
out
jno
es
xor
and
sub
dec
sbb
or
push
mov
inc
popa
pop
mov
xor
lds
idivb
add
or
sub
push
mov
shrl
mov
push
daa
leave
lea
push
lods
mov
adc
es
clc
adc
adc
or
push
lea
mov
xor
js
fldcw
shrl
sub
cmp
jp
sbb
andb
sbb
jae
mov
loop
xchg
jae
or
or
data16
jno
in
or
sbb
xor
aaa
push
sahf
js
push
dec
loopne
lcall
mov
or
enter
dec
push
pop
stos
mov
hlt
lea
ret
sbb
push
addb
add
loopne
cltd
sbb
dec
ss
mov
in
mov
loop
mov
lds
clc
xor
cmpl
and
inc
or
stos
in
das
sbbb
or
mov
sub
pop
and
scas
and
lds
add
xor
bt
mov
adc
mov
aas
mov
sub
push
mov
pop
pop
push
lock
jb
xorl
mov
sbb
sbb
in
outsb
sbb
xchg
add
test
ljmp
pop
jg
sti
faddp
nop
mov
mov
rcr
ret
jo
xor
inc
pop
hlt
pushf
lods
xchg
mov
lcall
xchg
pop
aad
in
dec
and
enter
and
in
es
daa
inc
or
cmpsl
and
test
dec
add
ret
cmp
shlb
adc
sub
cmpsb
int
inc
test
fs
jbe
jmp
mov
and
sub
icebp
aas
test
pushl
mov
lock
and
and
sahf
push
xchg
adc
ja
mov
adc
sbb
mov
push
and
push
push
mov
imul
aas
or
scas
mov
or
lock
lea
and
test
dec
sub
cld
fs
add
xchg
insb
in
and
or
lea
arpl
xor
cmc
add
loopne
in
test
ljmp
in
dec
or
outsb
in
test
sbb
mov
pop
pop
les
daa
inc
jecxz
mov
movsb
adc
dec
sar
js
jge
pop
push
loop
in
mov
or
hlt
lea
fnsave
push
js
push
add
sahf
push
out
adc
int3
push
arpl
add
repnz
push
imul
movsw
sbb
movsb
xlat
pushw
mov
and
lea
adc
loop
fnsave
push
jbe
inc
jl
insl
sbb
lea
loope
add
jmp
lahf
jg
out
sub
insb
pop
jge
mov
orb
loope
jl
xchg
cli
pop
add
mov
sub
shrd
shrl
test
mov
or
sub
pop
pop
xor
mov
xchg
dec
mov
and
mov
push
fwait
in
cmp
mov
or
push
and
in
or
lcall
mov
mov
fwait
add
test
adc
and
in
jmp
mov
push
adc
insb
adc
and
xchg
ret
mov
adc
ljmp
xchg
test
or
jae
pop
jnp
movsl
jl
imul
and
inc
mov
aaa
xchg
mov
pop
push
adc
or
adc
sub
mov
out
inc
scas
pandn
in
pcmpeqw
cmp
es
xchg
dec
mov
ss
add
outsl
sbb
aaa
push
daa
inc
mov
ficompl
sbb
mov
xor
arpl
in
mov
mov
je
popf
push
sar
jns
leave
push
xchg
or
dec
rol
adc
pop
testl
dec
loopne
shlb
xor
mov
sbb
pop
mov
repz
ret
iret
and
and
inc
ror
lea
lahf
popa
and
stc
adc
test
popa
jle
fmuls
and
pusha
into
or
and
fimull
cltd
mov
xlat
push
adc
mov
adc
nop
aad
push
adc
mov
test
pop
xchg
enter
pop
pop
js
dec
arpl
or
dec
xchg
xor
adc
test
mov
xor
add
dec
jmp
js
sbb
jge
add
pop
mov
add
scas
pushf
push
dec
or
out
sbbl
fistpll
orl
push
push
bound
or
and
outsb
dec
and
push
push
push
cmpl
mov
jne
scas
or
adc
mov
cmp
nop
daa
pop
adc
push
dec
dec
out
xor
and
test
test
xor
js
jne
or
mov
cmp
push
js
dec
mov
mov
dec
in
loopne
or
mov
andl
push
sub
daa
xor
or
push
add
pusha
or
cmp
fsubrs
mov
cmp
pushf
mov
jle
cmp
jae
cmp
fistl
inc
inc
or
fsubr
aam
out
shlb
clc
mov
and
pop
into
push
jp
stc
mov
jmp
test
lock
ret
dec
sub
push
out
add
pop
mov
hlt
dec
faddl
dec
mov
imul
rclb
mov
insb
push
push
push
jmp
fnstenv
es
or
jmp
cmpsb
dec
mov
leave
roll
pop
clc
cltd
sub
ficomps
adc
in
insl
outsb
jecxz
lcall
adc
aam
mov
adc
sub
movsl
sub
add
cmp
adc
cmp
xchg
or
rclb
nop
add
mov
addb
orb
les
sbb
pop
adc
pusha
iret
enter
sub
jmp
test
or
es
stc
je
enter
les
lods
or
pop
mov
cmp
and
dec
cmp
mov
xchg
es
loopne
lods
cmp
loopne
jmp
add
push
push
cmp
inc
add
push
mov
pusha
shrb
xor
mov
inc
sbb
aad
dec
ret
inc
xchg
sbb
fcompl
andl
pusha
mov
jb
adc
inc
dec
or
mov
stos
pop
fs
pusha
mov
enter
lea
sahf
mov
push
test
aad
leave
pandn
orl
and
sub
push
xchg
lret
in
push
sbb
pop
mov
pop
or
jp
clc
scas
pop
cmp
and
add
pop
cwtl
lea
mov
mov
imul
imul
int3
shr
or
fiadds
mov
xchg
add
clc
inc
inc
shr
inc
imul
mov
add
mov
pop
pop
and
and
push
imul
cwtl
and
pusha
testl
lret
mov
ds
jne
sbb
cmp
adc
mov
insb
test
std
insl
and
or
mov
fsubrl
push
mov
shl
stc
dec
cmp
lods
fwait
push
or
daa
fisttpl
andb
cmp
mov
push
imul
or
shlb
xor
aas
mov
ret
mov
movsb
xor
lods
push
and
js
popa
ret
iret
push
xchg
sub
adc
mov
je
mov
mov
add
aas
dec
pop
dec
int
in
pop
sbb
jo
test
pushf
jmp
add
mov
pop
dec
clc
clc
pop
fcmovbe
scas
sub
popf
jb
pop
push
fdivrl
mov
js
mov
orb
inc
push
movl
cmp
xor
push
and
xor
inc
cmp
mov
mov
ficoml
dec
fwait
jns
and
insl
mov
jns
in
and
dec
pop
adc
add
lods
push
adc
pop
inc
pop
jecxz
out
andl
add
ss
push
jp
rolb
jno
js
cwtl
sbb
mov
jmp
jmp
repz
adc
xor
dec
push
je
dec
jne
jo
lods
xlat
sbb
jo
clc
adc
add
push
sti
lahf
inc
sub
jmp
add
jle
leave
test
pop
lcall
mov
cmp
je
outsl
pop
pop
jecxz
mov
mov
loopne
push
imul
xchg
mov
lock
jnp
arpl
loopne
sbb
inc
mov
xchg
daa
xor
fists
loope
cmp
jne
mov
lea
cli
jecxz
inc
sti
jb
lea
or
mov
dec
int
push
test
sbb
loopne
mov
jge
cmp
mov
push
pushl
in
sub
push
mov
pop
inc
sub
cld
push
sub
aam
bound
add
and
outsl
sub
pushf
fs
push
and
adc
jne
mov
jge
xchg
push
mov
imul
filds
lods
cmp
testb
adc
mov
int3
cmp
mov
je
inc
rorb
push
inc
fstl
aas
aam
or
shrb
add
loopne
sbb
lcall
lock
add
or
or
call
pop
jmp
jno
dec
and
and
lea
push
jae
jno
js
or
jo
jo
push
or
out
lods
mov
push
cmp
add
lods
push
mov
js
dec
cmp
and
adc
bound
cmp
pushf
fildl
adc
adc
aaa
movsb
xchg
sub
jp
mov
gs
mov
mov
push
add
int3
sarb
push
dec
mov
les
sbb
push
jg
dec
jge
inc
adc
add
movl
mov
push
push
and
mov
add
xchg
inc
inc
es
ds
stos
inc
mov
adc
sub
add
push
mov
pop
mov
push
repnz
xor
add
or
popl
jo
adc
ret
sbb
cld
sub
cmp
jge
cltd
lock
or
rcr
xchg
mov
adc
stos
jl
xlat
test
xchg
bound
aaa
inc
pop
out
mov
rcrb
dec
add
mov
andb
or
mov
sbb
jge
mov
movb
mov
sti
lods
jo
clc
imul
and
mov
mov
mov
lea
out
orl
loopne
fcoms
scas
inc
xor
or
in
add
sub
fs
sbb
mov
addb
jae
mov
pop
or
sub
jl
popf
fadds
es
rorb
pop
jmp
outsl
cmpsb
into
test
hlt
cmpsl
jbe
inc
cmp
cmpb
je
push
dec
mov
test
movsl
cmp
xchg
sarb
and
push
dec
push
fcmovb
sub
lods
or
ficoml
es
fdivrl
pop
aam
inc
adc
call
xor
int
sub
mov
jp
popa
aad
mov
push
rcrl
or
mov
push
retw
jmp
icebp
or
or
jle
mov
mov
jae
mov
sub
add
sarb
loope
mov
inc
ficompl
fadds
xchg
pop
das
mov
lcall
dec
popa
xor
inc
dec
adc
movsl
iret
test
jp
push
inc
sbbl
loope
enter
nop
sbb
jmp
mov
sbb
mov
mov
subl
sub
out
addl
adc
test
mov
and
add
sbb
mov
dec
jl
jns
sbb
loopne
mov
jecxz
mov
in
mov
dec
aam
movsl
es
and
dec
inc
or
cld
sbb
sbb
adc
push
test
xor
cmovp
lea
int3
cmp
sbb
push
out
fmull
sbb
adc
pop
shrb
dec
lahf
sbb
adc
sbb
xchg
mov
test
sub
sbb
mov
sarb
cmp
mov
test
pop
lods
bound
lea
int
into
test
fbld
adc
pop
bound
in
inc
loopne
fidivl
cld
scas
push
stos
inc
pop
sarb
pop
pop
lock
dec
cwtl
test
or
push
xor
sub
or
inc
movsl
push
pop
out
arpl
jns
rorb
fsubrs
push
aas
mov
filds
xchg
mov
es
cli
insb
cmp
xchg
inc
xchg
pop
rol
rolb
add
dec
cwtl
add
dec
pop
pop
pop
mov
jp
loopne
push
out
cmp
jge
fstps
movsb
push
cmpsb
inc
sub
mov
fdivl
in
pop
jne
imul
and
or
sbb
add
sbb
and
jl
in
sbb
enter
sub
xchg
sbb
test
dec
cmp
xchg
mov
mov
push
mov
jecxz
sbb
fidivrs
mov
push
pop
sub
and
xor
mov
loopne
cmpl
cwtl
movsb
repnz
pop
mov
js
mov
add
add
or
dec
mov
mov
mov
and
or
xor
imul
push
or
sbb
cmp
dec
pop
add
sti
nop
lret
pop
add
cmpsb
loope
aas
movl
gs
pop
mov
xchg
or
adc
popf
push
cwtl
push
mov
xorl
les
dec
sbb
nop
pop
xchg
mov
adc
or
sbb
and
xchg
imul
jo
cmp
mov
xor
mov
or
in
pusha
push
rolb
xchg
dec
fcmovnbe
jo
pop
sub
xor
mov
lea
or
xor
xchg
mov
idivl
pop
xchg
xchg
cltd
adcl
out
and
iret
sbb
inc
mov
andl
and
push
rcrb
ret
add
lds
rclb
adc
leave
sbb
push
clc
movsb
loopne
imul
jo
imul
fbld
cmp
sbb
xor
xor
xor
and
shl
ret
add
fcomps
sub
daa
add
pushf
inc
aaa
ret
dec
ss
pop
dec
cmp
xchg
dec
les
mov
rcrl
int3
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
xor
sub
dec
inc
dec
cltd
cmp
inc
push
pop
sarl
movsb
inc
cmp
dec
outsl
jne
lea
orb
push
mov
insb
dec
sub
cs
jne
push
and
mov
adc
divl
add
mov
outsb
add
in
dec
mov
adc
cmp
jp
or
push
push
push
std
cltd
es
add
pusha
sub
scas
push
pop
sbb
icebp
jo
mov
mov
push
inc
cltd
pop
jl
lds
sub
sbb
mov
clc
dec
push
fs
pop
pop
mov
stos
lahf
adc
mov
fs
pop
inc
adc
sbb
lahf
cmp
jbe
cs
ficoms
pminsw
pop
lea
test
mov
dec
out
inc
inc
fists
dec
cmp
jne
mov
lahf
loope
scas
sbb
sahf
into
xor
jmp
or
es
pop
mov
push
pop
mov
or
cmp
inc
les
dec
push
lods
dec
int3
cmovs
dec
int3
mulb
or
jo
pop
or
dec
push
pop
mov
stos
adc
push
push
jg
jmp
in
sub
inc
xor
mov
fildll
add
adc
or
xchg
jg
adc
fs
or
cmpsl
lcall
jmp
push
push
push
jb
enter
mov
sbb
xchg
es
sub
or
std
push
mov
adc
lods
mov
aad
stc
fiaddl
out
add
clc
clc
divb
mov
jo
pop
outsl
popa
xchg
pop
adc
mov
xchg
xchg
mov
lods
pop
and
pop
jge
lea
adc
cmp
push
or
cmpsl
ret
and
fcmovnbe
mov
daa
jmp
push
sbbl
mov
stos
push
test
je
mov
imul
sbb
cmp
xor
cmp
roll
movl
sub
enter
push
in
imul
mov
push
push
inc
adc
aad
es
sub
push
test
int3
xor
mov
dec
test
int
inc
and
nop
xlat
int
sub
repnz
sbb
enter
and
lods
sbb
push
xor
sbb
nop
add
orl
leave
and
pushf
jb
xlat
cs
rcrb
xor
inc
pop
push
es
sbb
push
jne
ds
cmp
scas
and
and
in
dec
lds
mov
adc
pop
leave
adc
and
push
push
faddl
inc
daa
shll
pop
and
es
nop
xchg
sbb
xchg
adc
mov
pop
daa
pusha
or
les
or
pop
adc
xchg
sub
xchg
push
xor
sub
and
sub
daa
xchg
xchg
push
xchg
dec
enter
push
cmp
insl
andb
clc
inc
hlt
add
xor
or
pushf
push
add
test
cmc
sbb
int
aam
roll
sbb
je
add
pop
orb
and
or
mov
js
inc
dec
pop
inc
push
pop
loop
enter
or
xor
cmc
mov
mov
sub
popa
pop
adc
xlat
and
in
orb
ret
add
ja
or
pusha
xchg
pop
xchg
pop
add
cmp
mov
shl
movsb
add
call
dec
fsubrl
xchg
sarb
clc
jbe
fnstenv
and
inc
add
inc
je
and
stc
call
push
repz
movsb
inc
or
clc
dec
xor
push
xor
std
in
aad
add
mov
inc
xor
idiv
mov
jae
jle
test
js
xchg
inc
imul
lea
scas
push
fld
jno
xor
loopne
sbb
jl
adc
add
ja
into
mov
andb
popa
cwtl
je
or
es
sub
xchg
dec
add
pop
mov
xchg
pop
mov
test
pop
or
or
or
xor
pop
cmp
fmuls
icebp
pop
sub
fidivrs
enter
mov
inc
add
outsb
mov
jl
push
mov
cmp
mov
cmpsl
ljmp
add
or
adc
add
orb
jno
add
test
fidivrs
sbb
inc
fdivrl
and
sbb
push
lock
sub
imul
rcll
vpgatherqd
pop
push
mov
mov
dec
adc
inc
and
inc
push
or
xor
xor
ffree
sub
es
lock
sbb
popa
mov
mov
adc
mov
mov
push
hlt
jnp
movsb
xor
mov
mov
lds
mov
mov
add
add
lea
dec
or
lods
loope
xchg
xor
ds
push
movsb
xor
cmp
les
inc
xlat
cmpsb
cltd
cmp
pop
cltd
roll
in
and
movsl
jle
mov
cmp
dec
outsb
pop
or
fiadds
or
pop
or
or
mov
inc
sbb
test
and
dec
lock
call
sub
cmpsl
mov
add
cmovns
adc
or
daa
add
and
mull
push
add
jmp
shlb
movsl
popa
push
sbb
jecxz
cmpb
loope
pop
and
jns
cmp
pop
mov
loopne
arpl
int
jecxz
adc
adc
push
jns
sar
adc
add
dec
xlat
cmp
add
jmp
adc
int3
mov
add
fidivrs
sbb
loope
stos
popa
ds
pusha
nop
sub
fsubl
mov
cmp
out
mov
lock
or
lds
or
aad
cmp
rcrl
call
sbb
inc
xor
fcoms
insb
cs
and
inc
addr16
and
xor
adc
rcr
adc
jmp
lea
fstpl
out
inc
movsb
cs
loope
ret
sbb
mov
pop
xchg
adc
adc
arpl
test
and
add
stos
jnp
add
lds
push
push
jb
or
mov
insl
lea
mov
hlt
pop
push
test
inc
mov
pop
xchg
rcll
add
sbb
out
jne
and
pop
sbb
push
sbb
cs
xor
mov
das
pop
lea
pop
push
push
pop
repnz
xor
sbb
push
mov
mov
jno
stos
cmp
push
test
iret
sbb
inc
or
pop
je
stos
incl
xlat
xor
mov
push
fstl
lock
je
xchg
inc
mov
push
inc
adc
adc
add
and
pop
daa
mov
sti
cmpsl
or
scas
or
mov
movsb
push
shld
sbb
jmp
or
push
dec
repz
cwtl
push
and
popa
add
or
dec
dec
xor
ja
and
arpl
cmp
mov
jb
mov
insb
xchg
dec
or
mov
cld
xor
mov
repz
imul
add
arpl
sub
adc
push
arpl
cs
hlt
jge
jns
cmpsl
sbb
mov
sub
mov
add
clc
icebp
cmc
fnstsw
ja
add
jmp
test
add
push
fwait
test
or
sbb
stos
mov
cmp
or
sbb
jge
test
jle
aam
dec
arpl
data16
loop
mov
or
pop
add
fisttpll
test
mov
mov
push
jns
mov
call
loop
cmpb
int
nop
cmp
and
enter
sbb
pusha
or
mov
loope
insl
movq
pop
andl
push
xor
lret
or
mov
sarl
dec
pop
sbb
and
inc
xchg
sub
push
adc
repz
push
dec
and
sub
lahf
add
push
or
inc
pop
scas
jns
flds
mov
inc
lods
sbb
ret
jnp
push
or
imul
push
push
sbb
adc
push
xor
jo
repz
shr
and
test
js
outsb
sbb
lods
in
adc
sbb
ds
jmp
mov
lock
push
je
push
push
cmpsb
cmp
xchg
inc
imul
js
pop
xor
sbb
xchg
add
bound
jne
dec
int3
add
jmp
push
push
adc
adc
in
cltd
jmp
test
jae
fstl
dec
test
add
fadds
jbe
sub
scas
icebp
push
add
mov
add
movsb
out
popa
dec
and
aam
ret
push
inc
movsl
cmpsb
std
push
xchg
mov
jae
add
and
sub
inc
fwait
inc
pop
cwtl
xlat
push
dec
add
push
repz
inc
dec
inc
push
pop
lar
adc
aaa
add
test
add
insb
fstps
roll
and
fstps
mov
je
mov
sbb
mov
or
jnp
push
movl
xchg
or
push
sub
xchg
sbbl
mov
scas
or
and
icebp
sub
pop
lcall
movb
and
sbb
or
popa
xor
test
mov
push
adc
scas
mov
fstpt
pushf
mov
push
mov
push
sub
mov
cmp
aas
push
clc
sub
mov
ret
push
push
push
pop
shlb
insb
insb
mov
adc
push
and
pop
or
push
dec
fisttpll
or
inc
jo
add
nop
push
or
push
dec
add
xchg
inc
add
push
xor
nop
inc
jecxz
pop
pop
sub
jmp
movsb
rolb
push
mov
jl
mov
insb
xor
mov
hlt
mov
test
aam
loopne
fcoml
sbb
out
cmc
or
inc
jl
or
or
mov
mov
sub
mov
jle
add
cmp
addr16
imul
loope
cli
aas
popa
jo
loop
or
das
push
jle
adc
cmpsb
add
movl
push
out
cmp
popf
add
sarl
or
push
or
pop
pop
add
subl
les
xlat
scas
pusha
or
mov
mov
cmpb
sbb
mov
das
aam
out
imul
out
jo
aam
sbb
fisttpl
shrb
jae
imul
or
mov
cmpb
or
xor
add
push
nop
popa
popa
inc
adc
in
dec
sub
mov
rorl
and
leave
adc
pop
je
js
add
seta
shl
and
or
add
test
add
movb
sbb
mov
adc
cld
out
and
les
adc
sbb
add
fldl
test
or
jmp
cmp
jl
adc
lods
push
mov
incl
rorb
add
mov
sbb
sub
loop
add
movsbw
dec
in
bound
sbb
jns
jne
and
or
xchg
or
fwait
dec
inc
push
insb
loop
add
fisttpl
sarl
hlt
scas
insl
hlt
push
inc
movswl
inc
dec
sbb
inc
mov
add
dec
ds
je
push
shlb
js
aaa
ss
push
push
shll
pushf
ret
lea
daa
mov
enter
add
mov
push
xor
arpl
scas
and
and
dec
sub
pop
dec
loopne
sub
ss
sti
hlt
aam
dec
sbb
lea
and
mov
imul
mov
pop
push
sub
sbb
push
sbb
sbb
imul
fwait
sbb
inc
js
out
fwait
push
sbb
rclb
int
xor
inc
lds
cmc
add
pop
sub
cld
pushl
push
push
movsl
loopne
pop
sub
insl
mov
xchg
jbe
xchg
lret
mov
xchg
push
lods
jmp
cmp
cmp
bound
pop
pop
rcr
and
sbb
enter
lods
mov
and
lahf
jb
sbb
cld
adc
fmul
repnz
inc
sub
xchg
and
sbb
iret
adc
add
imul
in
lods
or
or
ja
push
inc
bound
aas
push
sahf
clc
inc
test
das
pop
jle
sbb
and
and
xchg
das
push
push
adc
jg
fidivs
mov
inc
dec
push
call
sarl
daa
lock
imul
out
ret
add
fiaddl
repz
movsb
mov
rolb
pushf
ret
mov
add
pop
popa
sub
xor
dec
call
add
add
ja
fnstenv
adc
movsl
mov
idivb
add
cmp
rorb
inc
dec
push
xor
add
shlb
push
enter
adc
mov
stc
imul
movb
inc
jl
dec
int3
mov
or
std
jnp
pop
movl
cmp
xchg
pop
dec
push
sub
cmp
xchg
push
xor
nop
mov
mov
cs
xchg
mov
test
cmp
push
push
mov
mov
cmpsb
les
mov
adc
pop
cmc
jge
or
jae
or
fimull
shr
in
adc
fimull
sbbb
dec
jne
or
pushl
movl
cld
push
stc
or
inc
lea
dec
add
dec
push
jle
or
les
gs
mov
add
adc
aaa
test
pop
push
mov
aaa
hlt
add
push
jo
pop
sbb
daa
mov
loopne
in
adc
loope
in
adc
add
bound
movsl
add
mov
rorb
xchg
pop
cmp
sbb
aas
movl
push
and
sbb
mov
ljmp
sub
pop
add
or
loop
push
stc
xor
clc
push
add
push
push
push
push
pusha
in
pop
pop
lods
mov
push
mov
in
je
jle
dec
pop
rcrb
pop
roll
xchg
mov
dec
jne
sub
push
pop
or
fmuls
cmp
jne
dec
mov
jle
cmpsl
xor
xchg
fimull
bound
mov
dec
push
and
ret
movsl
test
nop
xor
push
out
push
push
push
mov
inc
mov
mov
rolb
js
pushl
mov
sub
cmp
clc
xchg
loopne
mov
push
insb
pop
cld
jmp
push
sub
xchg
inc
or
cmp
xor
cs
mov
and
push
inc
cwtl
outsl
outsb
cwtl
mov
xchg
adc
mov
lea
add
lea
push
sbb
imul
frstor
mov
mov
jmp
push
push
pushf
cmp
jle
cmp
js
add
cmp
jbe
jp
xchg
xchg
es
in
jbe
push
popf
mov
adc
xchg
cmpb
inc
cmp
cmpl
push
fnsave
adc
dec
push
inc
adc
rol
addr16
std
ss
cmp
xor
xchg
and
mov
mov
shll
imul
inc
inc
xor
iret
mov
cmp
sub
adc
mov
lods
push
xor
cli
add
mov
dec
jne
enter
mov
mov
lds
test
sub
push
dec
jl
and
pop
icebp
pop
outsb
test
push
sarl
push
push
ja
xchg
adc
dec
jbe
pop
shrb
bound
insb
addr16
push
push
in
in
rcrl
cmp
add
sub
jne
lcall
jne
sti
add
jb
or
add
test
mov
hlt
test
push
push
push
loop
mov
adc
pop
xchg
jnp
push
lea
filds
test
inc
pop
add
inc
arpl
lock
cmpsb
fs
mov
mov
push
xlat
adc
js
jg
sub
testb
push
cmp
sub
scas
add
xchg
push
cmpl
mov
or
push
int
or
adc
insl
lods
aaa
loope
dec
add
rorl
or
xlat
inc
cmp
add
inc
clc
outsb
cli
sbb
xor
in
in
into
bound
cmp
loope
les
stos
jmp
and
dec
pop
in
and
mov
scas
fiaddl
sub
nop
xor
cmpl
or
in
hlt
mov
mov
add
lods
test
dec
pop
lock
stos
jmp
cmp
cld
cmpsl
lods
mov
add
cmp
je
mov
int3
pop
push
inc
adc
pop
in
adc
out
sbb
enter
bound
jmp
push
push
cmp
inc
inc
and
mov
push
inc
popf
or
cltd
add
push
or
cmp
push
jbe
cmp
je
test
inc
fdivs
sbb
sub
bound
test
daa
adc
stc
sbb
pop
pusha
icebp
push
add
jnp
add
daa
pop
push
dec
or
aam
leave
dec
sub
cmpsl
add
mov
lods
fs
call
or
xchg
lods
jno
movsl
or
xchg
insl
dec
ds
cmp
or
rcll
into
aas
inc
push
popa
addr16
rcl
shlb
shll
xor
fsubrs
mov
sub
fadds
or
xchg
sub
cwtl
or
loopne
dec
or
mov
xor
push
cltd
jnp
nop
dec
push
pusha
mov
insb
sbb
testl
sti
mov
jne
mov
popl
dec
and
push
out
sarb
mov
jle
add
cli
std
leave
cmpw
sbb
aad
adc
push
push
pushl
push
pop
mov
add
sar
mov
push
je
mov
out
mov
jns
adc
cmpsb
icebp
sbb
pop
jns
sbb
cmp
push
or
inc
sbb
fwait
bound
xchg
xchg
push
sahf
loope
mov
mov
dec
dec
dec
push
add
add
sub
jp
sub
jmp
rcrl
or
mov
sub
hlt
fstpt
pop
add
pop
or
and
jnp
shlb
mov
cvtpi2ps
cmp
add
addb
fcmovb
or
fwait
mov
jecxz
repnz
cmp
xorl
adcl
sub
mov
cltd
nop
pop
push
mov
je
cs
mov
sar
and
and
pop
mov
loope
mov
ret
sti
cmp
jne
jb
fs
push
xchg
add
pop
push
in
jmp
pop
push
pop
push
dec
xor
push
xor
push
push
fdivl
and
jle
leave
test
divps
insl
pop
adc
sbb
mov
push
and
je
lds
mov
roll
pushf
push
psllw
iret
adc
test
enter
add
imul
or
xlat
mov
fwait
inc
jge
enter
movsl
push
mov
scas
aam
sub
aad
addb
stos
stc
gs
fstpl
adc
mov
adc
inc
push
add
pop
or
sub
fwait
insb
xor
nop
pop
pushf
xorb
adc
adc
dec
imul
mov
xchg
gs
fadd
or
leave
rcr
inc
iret
mov
popa
loope
cmpsb
xchg
mov
outsb
in
add
lcall
jo
dec
push
sbb
inc
js
mov
inc
xchg
add
add
shrl
sbb
orl
imul
push
orl
xchg
and
cmpb
push
fcoml
add
cmp
add
cmp
cld
pop
adc
filds
or
sbb
daa
icebp
push
xchg
cmpl
pop
jo
or
adc
push
and
shlb
hlt
adc
leave
fwait
xor
pusha
in
fdivr
push
push
cmc
movsl
mov
sahf
sarl
jl
aad
mov
adc
pop
inc
hlt
mov
fstp
inc
lea
mov
data16
mov
sub
pop
jne
add
test
push
daa
xchg
xchg
dec
mov
faddl
in
subl
push
mov
push
inc
mov
clc
inc
mov
jbe
aas
shr
and
shlb
in
push
test
lcall
sbb
pop
jmp
add
fnstsw
push
fsubl
push
jno
push
sbb
imul
or
xchg
push
jnp
or
push
bound
enter
add
push
jbe
psubw
mov
push
pop
js
icebp
incl
cli
dec
mov
mov
jo
movsl
les
pop
or
in
lahf
xlat
pop
cmp
adc
inc
mov
push
in
shrb
roll
imul
mov
stos
add
xor
add
test
jae
sub
cmp
scas
outsb
sub
shlb
rclb
aaa
jmp
sbb
pop
adc
in
sub
pop
push
xor
testl
jmp
adc
adc
xlat
in
or
add
test
mov
inc
es
push
ljmp
jmp
flds
mov
mov
push
adc
xchg
xor
mov
add
cwtl
nop
xchg
xor
sbb
dec
pop
fs
movsb
xor
cmp
xchg
push
sbb
loop
andl
add
stos
pop
aaa
adc
mov
aam
mov
sbb
push
rol
xor
xchg
mov
dec
clc
inc
push
fwait
dec
pop
aam
sub
mov
mov
test
nop
popa
sbb
fwait
or
inc
jmp
push
dec
fwait
dec
pop
sub
pop
repnz
mov
push
test
jmp
cmp
jne
ss
lds
and
xlat
sbb
sub
cmpsl
in
sbb
cmpsb
xchg
sbbl
addl
sub
repz
js
mov
fwait
int
cs
test
push
xchg
fnstsw
lea
cmp
subb
xor
and
push
loop
jae
mov
jecxz
adc
or
jl
incb
sub
orl
pop
jmp
mov
mov
int3
into
rorb
aas
int3
aas
roll
sub
inc
adc
sub
rclb
push
test
call
push
adc
scas
push
clc
push
add
or
iret
push
stos
lret
push
test
add
add
lea
aam
in
popf
test
inc
xorb
or
or
inc
jp
dec
in
add
jmp
fisubl
mov
shrb
popf
data16
js
push
jmp
rolb
cmpb
adc
add
lret
in
daa
lods
mov
sub
in
test
aaa
adc
xorb
push
jle
and
ret
adc
push
adc
mov
add
pop
add
dec
and
or
mov
pop
pop
cmpsl
gs
and
popf
or
sub
sub
add
int
push
inc
mov
decb
clc
push
xor
pop
sti
cmp
shrl
xchg
mov
stos
sbb
jl
xor
jmp
rclb
aas
mov
shll
or
pop
mov
push
push
push
push
xor
jo
add
sbb
sti
ret
push
adc
loopne
push
lods
popf
iret
adc
ret
cld
mov
inc
and
push
je
cmp
jbe
pop
outsl
jnp
adc
cmp
jmp
push
jg
lods
les
insl
mov
xor
out
pop
mov
sar
adc
mov
mov
pop
and
or
xor
aam
and
out
pusha
xor
outsl
popf
and
pop
xchg
sub
dec
and
mov
jle
push
sub
mov
lret
bound
or
xor
and
jmp
cmp
jne
push
stos
pop
inc
xor
inc
inc
jmp
pminub
scas
jmp
ss
push
or
rclb
mov
sbb
cmp
jne
push
jle
aaa
pop
cmc
std
divb
cmp
push
mov
jne
push
push
and
out
mov
movsb
fmulp
mov
cmpsl
test
int
mul
seto
neg
or
push
aam
rcrb
es
out
sub
adc
int3
cmp
repnz
jge
jbe
or
inc
arpl
lcall
adc
or
or
cmp
mov
lret
je
int3
push
xor
cld
push
push
add
push
pop
shll
lret
and
loop
inc
ret
inc
mov
push
add
adc
and
push
cmp
imul
cld
inc
xchg
xor
jne
add
rclb
test
fwait
mov
inc
sysret
ja
repz
xorb
mov
and
pushf
inc
mov
sub
mov
repz
adc
inc
mov
sbb
add
inc
ror
adc
fs
aad
incl
andl
sbbb
xchg
adc
imul
push
ljmp
mov
or
xchg
or
pop
icebp
push
xchg
mov
sbb
adc
mov
push
push
xchg
cmc
push
shll
adc
andl
rorb
push
repz
add
xchg
jno
addr16
mov
or
xchg
adc
bound
loopne
dec
push
sbb
sbb
stc
xchg
je
adc
aaa
or
cmpsl
and
cmp
out
pop
loopne
andb
rorb
mov
add
adc
addl
into
addb
cmp
jae
out
es
aaa
stos
scas
sub
sub
outsl
fs
add
xor
jne
push
les
lea
pcmpeqb
clc
xor
fimuls
or
xchg
or
inc
add
and
and
fldcw
jae
jb
dec
ret
xchg
push
xor
or
in
dec
lcall
ret
fwait
inc
test
adc
add
xor
cmpb
cltd
pop
dec
jnp
addl
dec
cmp
xor
mov
or
test
or
or
fcoms
cmp
je
or
lcall
scas
and
stos
or
cmp
inc
mov
jp
and
xor
push
jb
mov
push
les
inc
lea
jo
js
push
in
loopne
xor
fwait
pop
addl
xor
ret
pop
pop
or
add
sbb
loop
mov
cmc
or
loope
loop
inc
mov
sbb
in
negb
lock
popf
dec
and
pusha
loopne
mov
and
cmp
addr16
or
adc
nop
and
mov
fstl
cmp
jo
iret
dec
push
loopne
jle
jmp
pop
jge
xor
pusha
and
push
sbb
rcll
shrl
or
inc
scas
or
mov
mov
xor
or
les
sbbl
sbb
sbb
imul
inc
sub
movsb
sbb
lcall
rclb
sub
pop
iret
loop
sbb
sbb
xchg
xchg
lea
in
movsl
pop
cmpsl
adc
add
and
sahf
push
cltd
sub
lret
sbb
dec
xchg
inc
push
lahf
or
jmp
push
popf
nop
scas
dec
inc
sti
cmp
or
sub
andl
lods
fs
fiaddl
push
cmp
and
call
nop
ret
xorl
in
imul
xor
fldl
push
fs
xor
mov
lea
mov
jl
es
push
in
arpl
jae
pop
adcl
sbb
add
xchg
add
out
xchg
sub
popf
cld
icebp
mov
movsl
add
daa
jns
in
push
or
cmp
sub
data16
into
sbb
mov
pop
dec
cs
mov
ret
or
push
pop
mov
test
pop
dec
xchg
jmp
add
mov
mov
andl
shl
or
sub
push
cwtl
mov
gs
xor
sbb
sub
sub
xor
mov
or
and
rorl
inc
fisttps
sub
mov
aad
sbb
negb
adcb
sub
xchg
pusha
outsl
sbb
push
push
xchg
mov
mov
lea
sbb
or
push
movsb
or
and
or
push
es
mov
dec
and
rcrb
and
in
add
push
inc
rorl
mov
mov
test
cmpsb
mov
push
js
xor
and
or
lock
dec
pop
mov
stos
cld
pusha
lcall
data16
push
fs
mov
rorl
nop
int3
xchg
sbb
dec
jmp
push
jmp
aad
mov
fistl
dec
mov
adc
mov
mov
sbb
es
xor
ret
push
push
aam
dec
pop
ficoms
movsl
notb
and
pop
jge
test
bound
cmp
rcrb
pop
stos
push
test
dec
inc
outsl
mov
mov
push
or
jno
cmp
add
cmp
mov
xlat
test
inc
dec
push
and
push
sbb
inc
add
leave
push
cmpsl
or
jmp
and
adc
xor
or
mov
adc
adc
and
roll
sbb
shll
mov
add
push
or
inc
mov
insb
and
push
outsl
filds
mov
xchg
inc
inc
sbb
inc
and
mov
xor
inc
cmpb
aaa
test
dec
mov
inc
fdivrs
daa
jne
jno
push
add
in
shll
adc
sub
xorl
xchg
cltd
scas
or
adc
je
aad
daa
jno
xor
out
dec
xor
sbb
inc
dec
xor
adc
push
dec
mov
or
mov
mov
mov
or
mov
pop
cmpsb
xchg
shlb
pop
and
aaa
out
push
pop
push
jns
push
push
xor
jmp
adc
cmp
pop
mov
es
adc
add
in
cmpsb
daa
and
pop
add
into
icebp
shl
cltd
jle
ds
cmpsl
xor
inc
mov
sar
adc
sub
dec
lret
shll
inc
or
insl
adc
or
jns
push
sub
mov
arpl
les
outsb
inc
clc
aad
or
push
js
jno
mov
movnti
push
mov
mov
sahf
push
pop
ret
push
scas
sub
and
pop
jmp
bound
push
mov
sbb
or
mov
adc
das
movb
dec
and
mov
sbbb
adc
paddq
dec
mov
jae
push
xchg
nop
aaa
lods
test
lock
bound
cs
lods
xor
sbb
inc
lcall
out
mov
mov
sbb
sbbb
out
outsb
xor
insb
das
push
test
push
adc
mov
xchg
add
call
add
fs
adc
ficoms
pop
sub
sub
dec
mov
ds
divl
xor
xchg
icebp
push
xchg
and
sub
shll
aad
mov
pop
pop
aas
inc
pop
jmp
lock
daa
pop
add
xchg
xor
test
sahf
arpl
sub
cmp
aad
jo
jp
gs
inc
nop
sub
pop
es
ds
push
pop
cmp
cmp
aaa
mov
sbb
subl
sub
ljmp
xor
roll
aaa
sbb
lcall
jge
loope
jge
mov
cmpsb
ss
sbb
repz
fildl
ljmp
inc
push
mov
inc
xadd
push
or
jp
and
adc
adc
cmpsl
bound
in
jne
push
pop
cmp
or
andb
and
xchg
push
and
add
adc
adc
rolb
xchg
cmpl
orl
or
push
or
insb
push
push
xchg
lea
xchg
lock
rcll
mov
add
and
adc
or
adc
push
mov
push
outsb
or
fistpll
add
sub
cmpsl
jne
cmp
mov
jmp
push
lds
push
cmpl
add
scas
jp
pop
xor
xchg
outsb
pop
jne
xor
push
jmp
pop
lods
or
and
jno
sbb
xchg
xor
mov
cmp
mov
cmp
in
dec
test
insl
xor
mov
enter
push
xor
iret
sti
add
ret
xchg
add
jo
mov
test
and
sub
loopne
les
xor
shlb
push
cmp
dec
adc
insb
loopne
and
gs
loope
jo
mov
loope
hlt
push
sbb
jge
imul
ror
xchg
or
pop
hlt
mov
jo
dec
cltd
fldt
out
lcall
sub
je
dec
lock
and
js
lock
sbb
adc
loop
jg
lods
ss
popf
ficoml
adc
fistps
mov
movb
jns
add
stos
lods
stos
popa
out
lea
or
in
push
xor
sub
leave
lock
xchg
jle
or
sbb
aaa
sbb
pusha
sbb
or
pop
rolb
or
jg
mov
or
sarl
mov
adc
xchg
add
push
fisttpl
arpl
psllw
bndstx
mov
lods
add
or
mov
inc
orl
popa
and
arpl
sbb
cs
fsubrl
push
mov
jecxz
xlat
jo
xor
or
sub
test
sbb
into
push
or
loope
inc
mov
sub
mov
adc
sbb
adc
movsl
add
adc
andl
or
jle
cs
stc
jne
das
fsubs
leave
push
mov
inc
push
fcompl
ss
push
jg
push
mov
sbbb
pop
dec
loopne
bound
dec
test
rcrl
inc
pop
icebp
jne
mov
int
sub
jo
shlb
cmp
je
pop
xchg
inc
push
pop
inc
ret
loopne
xor
add
add
mov
add
cmp
mov
adc
imul
out
mov
lods
jmp
scas
cmp
sub
or
jle
xor
jnp
add
dec
xchg
add
push
pop
push
push
mov
clc
sbb
xor
cmp
xor
fwait
rorb
inc
add
pop
or
mov
mov
inc
movsl
les
stc
or
mov
nop
shl
push
scas
add
push
lahf
in
mov
jp
sbbb
push
push
pushf
sub
xor
inc
dec
outsl
inc
pop
mov
call
mov
xor
test
arpl
and
or
imul
add
and
cmpsl
scas
mov
cmp
test
inc
xchg
adc
loope
std
adc
push
psubsb
add
adc
xor
mov
sti
mov
leave
loop
fs
or
sub
cld
aas
mov
jb
iret
push
sub
lea
push
imul
or
mov
dec
inc
sub
inc
push
ret
leave
cs
inc
hlt
adc
jo
add
divl
in
and
xchg
push
roll
and
mov
inc
jo
mov
mov
ret
sub
push
movb
mov
adc
outsb
adc
push
lds
nop
cmpsl
pop
fdiv
pusha
adc
subl
mov
and
fwait
lret
xchg
lods
push
fisubs
movsl
push
call
lret
and
jno
cli
xchg
test
or
and
push
adc
push
mov
add
push
imul
add
test
dec
fs
mov
sbb
add
in
pop
dec
loope
mov
push
arpl
fdivrp
sub
arpl
pusha
add
popf
mov
out
sbb
call
and
stos
lret
rcrb
data16
xlat
cmp
fistl
or
clc
mov
cmpsl
mov
adc
pop
imul
xchg
test
pusha
push
enter
sub
xchg
lock
fadds
and
pop
xchg
xchg
movl
add
stos
hlt
pop
inc
movl
or
jle
push
and
add
mov
lcall
add
sub
pop
xor
pusha
loopne
or
inc
pop
mov
add
push
xchg
jp
idivb
testb
cs
jmp
sub
add
lea
or
sbb
cmp
cld
mov
push
arpl
or
sbbb
push
adc
pop
mov
shlb
add
test
sub
lea
dec
call
or
das
dec
xchg
icebp
data16
insb
es
xor
mov
movsl
mov
pusha
stos
cmpsb
mov
adc
cmp
ret
jmp
inc
sbb
or
add
or
mov
mov
jg
sbb
hlt
mov
fstps
sub
cmp
jl
push
cmp
push
cmp
jle
cmp
adc
cld
jp
push
cmp
cmp
add
invd
decl
add
inc
jmp
rclb
movl
cmp
mov
xchg
jne
iret
mov
push
mov
cltd
pop
idiv
pop
push
pop
iret
lock
lea
cmp
fdivl
mov
cmpsb
or
push
lods
adc
mov
push
pop
add
roll
dec
xchg
das
cmpb
in
dec
jl
add
sbb
add
push
add
push
hlt
push
inc
js
sti
outsl
or
mov
xor
dec
mov
or
inc
pop
sbb
adc
rol
inc
xor
pop
imul
dec
movsl
sahf
and
adc
in
and
adc
or
addl
inc
push
fwait
jnp
int
cmp
subb
imul
push
pop
adc
sub
and
cmpsl
add
pusha
ror
dec
es
cmp
clc
or
loope
nop
inc
xchg
dec
fisttpl
pop
pop
pop
in
adc
add
test
insl
jb
sub
or
add
inc
xchg
push
or
add
jl
cmp
es
sub
or
imul
and
pop
insl
xchg
mov
adc
popf
je
fcoml
lock
out
jl
outsl
mov
aaa
mov
movsl
dec
pushf
jno
adc
add
cld
xorb
sub
pop
sbb
xchg
and
in
sbb
dec
xchg
sbb
adc
insb
xchg
out
leave
lods
and
or
mov
or
dec
and
mov
adc
push
leave
adc
popa
mov
sub
mov
push
add
test
sub
jne
pop
sub
sub
jo
shlb
lods
pop
fs
rcrl
cwtl
ret
sbb
sbb
sbb
sbb
bound
add
ror
cmpsb
add
test
inc
rcll
out
inc
fwait
enter
insl
xchg
sbb
stc
add
cmp
and
push
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
decl
lods
shlb
aaa
std
add
mov
add
sbb
push
mov
cmpsl
std
sub
scas
dec
pop
lods
test
leave
and
mov
loopne
cmp
add
add
adc
nop
push
inc
sbb
mov
imul
jb
adc
adc
insb
or
aas
pop
sub
adc
add
inc
add
sub
ret
jns
push
add
loopne,pt
push
cmp
lea
out
cmpsb
add
mov
and
in
mov
lret
mov
or
stos
add
xchg
sbb
add
fwait
and
or
popl
int3
add
and
test
rol
and
sbbb
inc
mov
lds
mov
and
jnp
mov
nop
out
imul
int
out
insl
stc
sbb
sub
add
cmp
jbe
jb
mov
xchg
cltd
or
adc
das
cmp
xor
xchg
out
lock
add
stos
sbb
popa
cmp
lock
add
sbb
add
popa
pop
sub
popa
mov
orl
lcall
or
add
movzwl
aaa
enter
or
stos
inc
xchg
adc
xchg
sbb
push
jb
testb
or
push
pop
and
icebp
lds
xchg
cmp
cwtl
cmp
bound
or
shrb
jbe
cs
mov
or
xchg
add
roll
inc
dec
cli
push
jo
fmuls
jg
popf
inc
and
inc
in
or
sbb
lods
fs
std
sbb
mov
cmpsb
or
jbe
imul
andl
dec
adc
pusha
dec
leave
sbb
les
xchg
and
adc
inc
lods
popa
pop
imul
popa
stos
cmp
jne
fisttpl
mov
adc
lds
scas
lock
add
cwtl
and
mov
sbb
repz
jo
push
add
xlat
js
inc
addb
and
in
fildl
sbb
push
add
xchg
sub
pushf
insb
add
add
xor
mov
adc
add
mov
sti
lock
dec
les
inc
xor
pop
cmp
pop
adc
pop
add
addl
imul
adc
pop
mov
mov
and
add
notl
adc
or
fwait
jno
lea
mov
int3
push
adc
dec
mov
cli
dec
sar
je,pt
cmp
jle
push
es
jecxz
add
adc
int3
jecxz
add
inc
sbb
dec
les
loopne
pop
pushl
jecxz
cmp
and
jle
xchg
ss
bound
pop
js
imul
push
and
popa
ja
xchg
push
mov
xor
push
pop
jnp
in
orb
es
mov
mov
out
mov
in
pop
daa
loop
and
mov
incl
cli
sbb
xchg
fldl
aas
mov
les
nopl
add
cmp
or
jbe
mov
add
sbb
cmp
sbb
fstpl
and
mov
loope
jle
fstpl
into
loop
in
negb
insb
mov
mov
mov
jo
jnp
xchg
lock
sti
add
pushf
and
loope
fsubrp
sub
pushf
insb
mov
xor
cmpsb
cmp
xor
mov
push
movl
lods
outsb
lret
idivb
aaa
inc
push
insb
fwait
and
sahf
nop
mov
adc
test
push
add
in
mov
inc
xor
shll
add
or
pop
cmp
jns
jo
sbb
add
jae
lahf
fidivs
cltd
inc
lock
arpl
cmp
pop
aad
rcr
mov
nop
add
pop
push
cmp
insb
cmp
push
xor
ja
push
push
mov
sbb
loop
inc
shrb
and
insl
pop
push
sarb
ret
sbb
add
add
and
dec
sqrtps
inc
or
fnsave
jnp
fwait
mov
add
mov
and
dec
stos
sbb
clc
xor
lea
cmp
jb
stos
xor
shld
add
ja
jb
ja
lea
push
push
and
push
push
je
rclb
mov
in
add
push
leave
adc
mov
or
scas
push
ds
push
pop
sahf
sbb
or
jmp
sbb
ret
push
xor
push
lcall
ror
mov
inc
sahf
add
mov
push
dec
push
sbb
mov
jl
shlb
push
cli
daa
clc
push
jne
sti
aaa
add
adc
pop
and
fwait
mov
je
xor
je
jle
xor
fbld
pop
dec
inc
cmpw
jne
sarl
repnz
inc
inc
cld
cmp
in
pop
xchg
dec
push
push
jl
mov
pop
roll
add
sti
jg
stc
std
mov
or
aam
adc
pop
sbbl
push
push
push
test
cmpsl
xchg
rcl
push
push
mov
lea
js
add
lods
aaa
mov
push
add
xor
imul
add
aaa
xor
xor
lock
arpl
mov
xchg
push
in
push
scas
inc
arpl
inc
push
add
sar
push
enter
cmp
lods
mov
sub
push
mov
mov
popf
outsl
fwait
ss
inc
test
inc
dec
mov
pop
pop
and
add
insb
jno
inc
call
push
test
fstl
test
sub
rcrl
popf
jns
ret
push
adc
ds
mov
movsl
adc
add
push
add
xlat
test
cmp
mov
pushf
xor
mov
mov
imul
push
pop
mov
das
insb
dec
xor
xlat
cmpl
std
xchg
pop
sub
jg
adc
sbb
es
jb
shlb
mov
subl
adc
xor
enter
cmp
pop
ret
pop
add
je
mov
ja
xchg
and
les
jp
into
push
lahf
imul
cld
popa
jno
sbb
jge
pop
jne
addb
insl
aaa
inc
scas
inc
loop
push
cs
xchg
ss
test
pop
ret
mov
and
and
fldenv
mov
or
enter
sub
push
adc
fsubr
sbb
test
xchg
xchg
adc
and
and
movl
and
ljmp
adcl
popa
jo
outsb
test
adc
pop
mull
push
mov
das
xchg
xchg
inc
fdiv
push
push
and
stc
and
adc
cwtl
mov
add
ficoms
xchg
sbb
pop
pop
shrb
pop
sub
or
jp
jo
lods
bound
test
push
ja
sub
or
je
gs
jg
lret
ret
mov
pop
sbb
lock
cwtl
adc
mov
incl
jo
icebp
and
xor
mov
xorb
jne
push
sub
je
sub
dec
test
lcall
dec
jne
subl
sub
jne
aam
or
and
or
dec
xchg
scas
jl
jmp
push
push
and
in
js
xor
std
pop
adc
ljmp
loope
sub
xor
cmp
pop
mov
dec
jmp
push
mov
test
mov
xchg
mov
jmp
push
push
adc
iret
sbb
adc
xchg
xorb
aam
xor
test
inc
cmpsb
inc
arpl
jbe
push
mov
mov
lods
adc
dec
mov
xchg
push
sbb
jbe
inc
andl
xchg
inc
sbbb
cmp
es
lea
pop
inc
pusha
inc
dec
repz
lock
cmp
clc
push
sub
insl
fmul
xchg
addb
push
sub
daa
cmp
cmp
push
push
dec
mov
or
push
sbb
xchg
or
dec
sbb
sbb
mov
daa
pop
dec
push
jl
popa
testl
in
mov
hlt
sub
adc
push
fildll
dec
imul
sbb
je
rcll
iret
push
ret
popa
out
dec
lahf
add
cmp
push
push
inc
adc
imul
jl
xchg
repz
out
cmp
iret
frstpm(287
icebp
sbb
sahf
daa
xor
inc
dec
pop
jns
out
outsl
jns
out
sahf
out
mov
out
sahf
lret
xlat
loope
testl
xor
pop
and
aas
or
xchg
xor
inc
mov
sub
add
push
mov
loope
lds
add
push
ret
ret
addr16
pop
add
mov
mov
push
mov
cmpsb
adc
aad
dec
in
lea
and
ljmp
ja
adc
pop
aas
insb
sub
ret
or
fwait
jmp
jl
mov
je
or
dec
pushf
pop
lock
adc
xchg
sub
sahf
or
in
inc
push
add
out
fcompl
cmp
cmp
call
push
mov
adc
xor
xor
dec
mov
xchg
mov
lods
pop
faddl
or
repz
xor
push
add
sbb
mov
and
loope
test
xor
cmp
pop
cltd
xor
push
dec
test
mov
sub
mov
jo
es
add
pop
cmpsl
or
les
ja
rorb
cmp
pop
sti
sbb
js
push
xor
cmpb
test
push
mov
add
push
add
imul
xchg
pop
add
jnp
aam
mov
xor
outsl
and
inc
and
dec
enter
popa
sarl
mov
inc
loopne
mov
mov
dec
inc
push
push
test
xor
enter
outsb
sub
jl
nop
test
testl
cltd
shrb
pop
xor
test
adc
rorb
cmp
decl
cmpb
stos
dec
pop
lds
jo
sbb
mov
sbb
adc
test
add
mov
add
test
pop
pop
adc
inc
imul
mov
or
shlb
jae
adc
xorl
jno
xor
jl
cmc
push
arpl
inc
adc
lock
les
iret
loope
jp
out
and
stos
sbb
dec
pop
sarb
or
les
test
jnp
mov
xchg
fwait
je
mov
fidivrs
mov
in
sub
xor
push
xor
std
loop
sbb
pusha
and
add
addr16
and
js
icebp
push
jp
jmp
and
mov
sbb
fimull
inc
push
xor
inc
jmp
push
sub
mov
cmc
sub
shll
jl
cs
and
or
adc
fisubrl
push
insb
hlt
dec
andl
add
repnz
imul
in
xor
jle
dec
sbb
sub
out
ficompl
inc
and
fdivl
xor
sbb
xor
xor
das
insb
jo,pn
xchg
xor
sub
xchg
xor
sub
inc
xchg
sub
int3
add
cmc
jg
mov
outsb
lea
mov
push
jl
sbb
inc
out
add
inc
sbb
mov
cmp
sbb
cmpsl
popf
jmp
add
or
adc
dec
fists
mov
or
or
sarb
jb
orb
and
sub
pop
mov
fwait
pop
jb
sub
xchg
sbb
jae
inc
in
sbb
inc
addr16
xor
and
enter
push
mov
movsb
add
nop
and
stos
pushf
xchg
and
and
outsl
dec
adc
addl
test
inc
pushf
addr16
lcall
icebp
loope
repnz
fsts
and
or
jne
dec
and
incl
pop
adc
popf
cmp
es
fistps
push
mov
inc
adc
jecxz
pop
inc
cmpl
push
sbb
xchg
or
mov
hlt
pop
lock
addl
or
popf
mov
cld
test
cmp
xchg
call
imul
jle
sbb
int3
cmpsl
movsb
loopne
pop
cmp
int3
cmp
xlat
cwtl
dec
sub
or
cmp
push
pop
test
push
scas
mov
out
xor
and
ds
xor
inc
in
aaa
jo
rolb
mov
push
mov
ss
or
dec
pop
es
adc
aaa
cmp
repnz
push
pusha
pop
popl
sbb
and
push
pop
das
push
inc
push
scas
ret
add
add
sub
xchg
and
xor
jle
hlt
push
cmp
sti
jge
inc
pop
xor
outsb
rorb
inc
movsb
jne
outsl
xor
pop
popa
and
nop
push
or
inc
lock
ret
je
or
adc
xor
jmp
push
sub
push
ja
and
pop
sub
mov
popa
ret
and
adc
lea
sbbl
dec
jae
nop
adc
add
lods
dec
lcall
xchg
sub
ret
adcb
push
sahf
xchg
enter
pop
lahf
xor
setb
mov
pop
jp
sub
sbb
and
enter
insb
xchg
push
add
xchg
push
pop
mov
xchg
push
test
pushf
ret
enter
xor
cmpsb
and
add
in
loop
and
in
add
sar
push
loopne
add
incb
scas
call
mov
pop
call
sbb
test
ja
enter
repnz
loop
push
in
jo
xorl
xor
sbb
and
js
xor
xchg
repnz
pop
mov
inc
mov
or
mov
push
sbb
cmp
mov
paddusb
and
pop
rcll
icebp
fs
jno
sbb
dec
adc
stos
jns
add
adc
imul
enter
out
jne
adc
or
add
int3
aam
push
orl
push
in
daa
inc
lea
sbb
inc
add
test
lcall
xor
push
jl
inc
outsb
es
inc
lcall
sub
mov
and
addb
clc
gs
aam
enter
sbb
inc
sbb
dec
xor
xorl
movsb
mov
je
push
adcl
push
or
rcrb
pop
xor
adc
sbb
adc
dec
push
dec
and
adc
jle
std
test
push
adcb
adc
mov
imul
inc
lcall
cltd
nop
pusha
push
pop
add
pop
out
add
leave
add
in
call
pop
or
adcb
inc
cmp
int
popa
cmp
push
je
jle
outsb
add
add
sub
pusha
inc
xchg
jno
add
fnstcw
sbb
or
add
cli
int3
mov
jne
add
mov
test
sarl
lea
add
in
pop
jo
jl
faddl
test
hlt
xorl
dec
cmp
mov
dec
data16
xchg
call
sub
fdivl
pop
or
push
cmc
fsubrs
rclb
xor
icebp
push
clc
dec
and
adc
mov
xchg
cmp
or
cs
lahf
hlt
rclb
jle
lds
shlb
outsb
mov
jmp
add
cmpsb
or
dec
pop
adc
shlb
push
loopne
lcall
xor
xor
or
cmp
dec
int
andb
les
cmp
ret
rcl
jmp
addb
movsl
or
mov
insb
jo
scas
enter
mov
add
sbb
mov
sub
repz
gs
fadds
fsubr
sbb
mov
push
sbb
pop
sbb
mov
add
ret
rol
push
ficoml
int3
sbb
inc
nop
push
or
enter
imul
and
or
and
mov
daa
add
sub
mov
mov
scas
daa
lods
mov
mov
push
mov
dec
mov
in
and
sub
push
pusha
cmp
into
sub
push
xorb
jo
adc
fsubrl
add
in
push
jbe
in
fcmovb
push
rclb
aam
pop
pop
cwtl
sub
shrl
cmpb
mov
xor
sub
daa
dec
loopne
rolb
sub
xor
and
and
and
xor
sbb
les
adc
and
pushf
fstps
lahf
mov
rcrb
je
aad
adc
jne
in
xor
adc
adc
adc
pop
scas
and
bswap
mov
push
popa
sub
jge
inc
pop
loopne
inc
adc
es
or
push
mov
ljmp
addl
jecxz
pop
test
inc
imul
cmp
movl
movl
sbb
add
push
or
pop
icebp
mov
lock
xor
jae
jae
loope
sub
dec
ret
cli
xchg
fisubrl
mov
push
push
cmp
and
cmpsb
pop
sub
mov
rolb
lahf
jp
popf
shl
mov
or
dec
sub
push
dec
mov
dec
push
loop
add
and
xchg
sub
int
sub
xor
cmp
sub
inc
sub
dec
jmp
sub
xor
add
push
nop
in
mov
xor
repnz
and
mov
in
inc
mov
sbb
pusha
dec
add
faddl
push
rolb
inc
mov
sub
cmp
push
pusha
pop
mov
je
push
inc
ret
clc
stos
insb
mov
pop
xadd
mov
mov
insl
jnp
loope
mov
je
jbe
or
push
addl
and
dec
enter
leave
lahf
lea
add
js
hlt
xor
xchg
cli
rcrb
adc
push
adc
xlat
jbe
pop
add
add
cmp
jne
inc
dec
test
jb
jl
or
inc
nop
mov
hlt
subl
or
iret
jne
pop
adc
in
dec
rorb
cmp
jae
inc
popa
jecxz
adc
sti
pop
or
iret
je
mov
dec
sar
xor
jmp
mov
dec
movsl
adc
loopne
push
xchg
cs
mov
test
xor
or
lock
adc
push
adcb
add
movsl
mov
es
mov
xor
xorb
fstpt
dec
or
sub
sbb
cmp
or
push
or
adc
jbe
mov
mov
stos
xchg
pop
mov
and
mov
mov
cmp
dec
movsb
push
sbb
add
pushl
andl
xor
mov
cmp
cmp
dec
dec
add
mov
dec
rcll
je
inc
test
add
je
test
push
in
cmpb
pop
adc
sbb
imul
idiv
ret
inc
push
or
cmp
jl
or
jmp
out
je
cmp
add
and
mov
movb
movsbl
out
and
leave
shr
mov
add
pop
mov
shl
dec
add
jne
pop
or
or
mov
or
dec
cmp
push
xchg
bound
add
or
jo
mov
add
roll
and
cmp
push
sub
loop
sub
fadd
pop
shrb
pop
pushf
cmpsl
push
test
push
mov
mov
add
mov
xor
xor
inc
add
fld
add
es
mov
adc
xchg
lock
push
addb
cmpb
je
dec
iret
mov
and
add
dec
push
mov
loopne
ret
gs
cmp
into
cltd
cmp
xchg
pop
fwait
mov
mov
or
test
daa
mov
imul
and
jge
push
inc
pusha
stc
mov
inc
data16
add
scas
inc
loop
in
sbb
addr16
enter
int
and
cmp
push
and
std
scas
xchg
dec
add
cld
repnz
addl
test
insb
rolb
cmpsl
or
clc
sbb
mov
pop
roll
adc
dec
adc
stos
lret
cmc
sahf
jbe
xchg
push
cmp
inc
pusha
sub
pushf
cmpsl
inc
cltd
iret
shl
push
and
in
push
nop
mov
faddl
jle
or
pop
push
inc
mov
add
inc
pop
inc
mov
or
dec
sub
dec
shll
int3
stos
sub
dec
pop
inc
and
sub
sbb
dec
pushf
sbb
sub
push
fisttpl
in
mov
mov
mov
andl
lock
or
inc
mov
sub
push
scas
sub
lods
pop
shlb
or
jne
mov
xchg
scas
repz
popl
lock
dec
xor
push
repz
add
mov
adc
mov
pop
push
jne
and
cmp
lret
sbb
push
jp
mov
push
lsl
or
lds
dec
mov
test
and
test
or
mov
jbe
in
popa
ret
sbb
dec
incl
aam
push
in
or
mov
sbb
insb
add
adc
rep
adc
inc
arpl
jmp
out
into
orl
addb
imul
sbb
dec
pop
testl
xorb
mov
or
lret
outsb
sub
shlb
xchg
push
scas
or
ret
adc
xchg
lea
sub
daa
test
jnp
lods
aam
lea
jo
in
mov
int3
xor
sbb
adc
test
pusha
lcall
and
xchg
jmp
nop
add
add
sbb
dec
jo
and
push
je
sbb
pop
cmp
push
push
push
ss
mov
and
jecxz
or
pusha
push
and
xchg
or
cmp
add
or
and
das
sbb
mov
mov
pop
andl
dec
hlt
and
mov
sub
call
int
sub
adc
adc
and
adc
cmp
adc
lahf
cmp
shll
les
iret
jge
inc
or
sub
and
in
sbb
inc
xchg
sub
push
and
xor
add
add
dec
xor
add
pop
call
sbb
jmp
mov
push
in
dec
scas
sbb
jg
js
xchg
adc
test
shr
mov
pop
dec
dec
out
dec
hlt
lock
adc
shr
mov
loopne
xchg
xor
jne
je
inc
nop
cmp
jl
shufps
push
out
or
hlt
add
add
fsubrl
mov
or
or
mov
pop
xor
cmp
mov
fs
popa
sub
cmp
insb
push
enter
push
or
popf
pop
mov
in
jo
xchg
ret
lea
insl
and
cmp
inc
jne
sub
inc
imul
pop
pop
sarb
xchg
sahf
xchg
add
cmp
mov
mov
jmp
icebp
or
les
addr16
mov
push
mov
push
dec
xor
or
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
fisttpll
sbb
je
jge
lea
push
jbe
jns
mov
pop
lea
and
sbb
movsb
sahf
faddl
in
imul
sti
jne
es
loopne
push
ret
xchg
inc
xorb
pop
mov
mov
sbb
mov
or
lcall
dec
mov
or
shll
sub
xor
push
inc
pop
sub
push
mov
sub
clc
jle
sbb
sbb
mov
dec
mov
pop
push
pop
mov
sbb
in
add
and
pop
mov
mov
jo
jle
cmp
dec
mov
divl
jo
cmp
popa
and
mov
pushl
push
flds
mov
mov
inc
push
adc
icebp
adc
add
sub
pop
add
pop
inc
inc
sbb
inc
bound
mov
inc
dec
add
pop
inc
movsb
lds
pop
ret
ret
mov
out
xchg
pop
xchg
push
push
push
xchg
stos
adc
sbb
add
push
fstl
aas
inc
sbb
mov
sti
cmpsl
inc
data16
cmp
adc
jne
cmp
out
out
daa
bnd
adc
hlt
jne
or
jne
or
push
mov
pop
jl
push
cmp
js
imul
aad
dec
add
icebp
push
lea
push
rclb
movl
int
sbb
push
sbb
pop
inc
or
fstl
mov
and
mov
pop
mov
sub
pop
hlt
lea
sub
push
and
lcall
mov
inc
dec
movsb
mov
jb
enter
pop
xchg
ja
sbb
adc
xor
cs
or
inc
mov
and
mov
or
les
int3
pusha
lea
rcr
dec
jae
xlat
cmp
jmp
and
xlat
fisubl
adc
cmp
repz
adc
neg
ret
mov
movsb
inc
lea
gs
xor
adc
mov
xchg
mov
or
jmp
dec
cmp
or
mov
adc
es
xchg
xchg
inc
loopne
dec
loopne
jecxz
clc
mov
or
add
xchg
imul
pop
insb
fstpl
and
orl
imul
or
xchg
test
pop
mov
add
cmp
fs
mov
jne
into
xor
xor
fs
je
push
fistps
pop
add
sti
push
xor
push
call
add
inc
cmp
pop
daa
out
or
inc
mov
push
pop
data16
aaa
mov
mov
jbe
call
jmp
rorb
int3
or
inc
fmull
into
inc
subl
pop
cmpsl
and
test
jl
mov
pop
add
sti
adc
rcrb
and
push
enter
add
adc
test
jmp
and
push
or
jle
pop
sbb
inc
out
xor
xchg
push
mov
xchg
inc
dec
rcr
push
push
loop
call
int
and
pushl
fs
jge
jnp
push
ret
roll
xor
pusha
cmp
icebp
xchg
xor
inc
arpl
lds
shlb
sbbl
loopne
pop
sbb
push
or
pop
inc
bound
xorl
js
xchg
xchg
dec
sbb
in
mov
loope
cmpl
pop
pop
pusha
sbb
hlt
sbbb
mov
fwait
jg
orb
enter
mov
sbb
add
cmpb
and
jne
add
sub
mov
and
lcall
bts
xor
xchg
sbb
and
xor
inc
adc
sti
sub
sub
inc
mov
inc
adc
jns
sbb
sub
nop
cltd
xlat
leave
pop
xor
push
sbb
push
cltd
dec
sbb
nop
mov
adc
push
in
xchg
xchg
push
add
sbb
adc
dec
and
inc
or
mov
dec
adc
inc
cmp
sbb
popa
and
or
xor
sbb
shlb
xor
jmp
dec
sbbb
xchg
rolb
roll
mov
xor
fidivrl
and
lea
mov
push
nop
mov
mov
add
shll
inc
add
sub
lods
dec
jle
pop
or
out
lea
jno
mov
xchg
stc
xor
andb
adc
mov
hlt
mov
jb
push
lods
pop
in
shll
and
js
mov
scas
and
je
push
test
outsb
xchg
pop
lea
mov
jae
push
push
fadd
loopne
insb
cmp
faddl
sete
sbb
push
mov
es
jae
ss
jne
pop
jne
movsb
xor
cmpsw
push
and
rolb
add
add
push
or
add
fwait
or
imul
scas
fldcw
ss
insl
push
addb
or
xchg
xchg
pop
nop
jae
call
je
cmpsl
cmp
adc
add
or
fadds
pop
mov
inc
inc
dec
out
bound
popf
inc
in
test
jne
loop
pusha
xor
mov
lea
jge
jecxz
adc
in
ja
rolb
add
fmull
movsl
sub
xor
pop
or
hlt
or
and
je
pop
or
idivl
and
dec
or
leave
sub
out
ficoml
adc
mov
loopne
mov
ja
xchg
fistl
pop
and
push
sbb
pusha
ja
inc
repnz
sbb
jno
xchg
leave
or
loope
and
scas
mov
mov
sub
and
syscall
loop
xor
xchg
adc
mov
lock
cltd
push
or
ds
ljmp
test
jne
mov
outsb
mov
push
ljmp
and
nop
sub
cmp
pop
repnz
mov
inc
xor
shlb
push
xor
movzbl
sahf
jne
lock
dec
call
in
lds
cmp
ret
daa
shlb
fdiv
pop
sub
push
test
mov
mov
xor
hlt
inc
sarb
clc
lcall
js
cld
sbb
push
adc
test
adc
stos
cmp
and
frstor
stos
jae
les
cmp
mov
fisttpll
rolb
push
add
add
out
inc
jecxz
and
loope
mov
push
in
adc
lds
cmpsb
mov
sbb
mov
push
cltd
pop
jmp
out
je
sbb
jp
call
adc
fisubrl
and
inc
inc
add
inc
jo
rcr
lret
sbb
adc
lret
fwait
xor
test
push
testl
mov
push
fisttps
movb
je
jmp
mov
pop
jne
sbb
sub
adc
mov
add
or
mov
out
scas
push
insb
push
adcb
xchg
add
adcl
or
or
mov
mov
cmp
mov
outsl
hlt
popa
and
insb
sub
lods
mov
mov
add
inc
in
mov
mov
xchg
lods
mov
cmp
xor
movsl
call
push
aas
push
and
add
stos
sub
or
mov
adc
idivb
mov
shr
pop
lock
ret
test
aam
test
lret
mov
jo
scas
js
push
popa
jo
and
mov
fisubl
push
je
movsl
ja
or
or
xor
aas
std
leave
cmp
je
or
icebp
xchg
and
xor
add
sbb
sete
sahf
sub
outsb
iret
insl
es
ds
mov
hlt
jae
movsbl
push
mov
add
sbb
mov
add
sbb
fiadds
ds
jmp
enter
ret
adc
lea
and
dec
inc
fiaddl
dec
jmp
shl
or
rcl
fadds
stc
add
mov
hlt
incl
loop
add
sar
add
popf
push
bound
jle
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
push
clc
loopne
or
jne
fs
xchg
outsb
sbbb
sbb
imul
or
pop
mov
fcmovb
mov
fwait
push
mov
jbe
insl
cld
xlat
cltd
jo
shld
lea
pop
xchg
rolb
roll
or
ss
subl
insb
cmp
jl
sub
jle
insb
aas
mov
enter
cmpsl
jp
std
sbb
cli
test
mov
mov
add
fildl
mov
repnz
sbb
out
xchg
lock
ror
repz
xor
add
clc
and
ret
or
fstl
call
insb
mov
xchg
enter
pop
cmpsb
das
xchg
xchg
dec
push
cmp
cwtl
push
and
insl
scas
xor
ficompl
push
dec
pop
cmpsl
push
mov
movsb
and
add
add
xor
mov
aam
or
movsb
in
inc
pop
sbb
mov
xchg
or
mov
repnz
mov
ret
in
jge
dec
or
add
nop
or
pop
insl
je
add
leave
loopne
sbb
jecxz
mov
push
jmp
aas
loopne
mov
push
inc
push
nop
or
mov
sbb
out
fcomps
jmp
xor
mov
dec
pop
add
jnp
clc
push
push
in
in
cmp
add
push
push
enter
jmp
push
and
dec
inc
add
shlb
xorl
flds
jbe
jmp
lea
insb
mov
xor
into
dec
inc
pop
pop
mov
dec
jns
lret
sbb
xchg
int3
mov
and
mov
fsubrl
xorb
sub
and
sbb
mov
in
mov
mov
in
sub
lret
shl
jae
push
iret
mov
jp
push
mov
fmuls
xchg
cmp
out
cmpb
scas
std
rcr
sarb
pop
fbstp
or
fildl
mov
add
push
cmp
xchg
test
pop
mov
push
push
xchg
sbb
sub
mov
pop
test
jne
das
push
rorb
outsl
or
xchg
out
push
xchg
or
xor
mov
call
dec
jp
mov
cmp
aam
imul
inc
mov
mov
adc
loope
adc
fidivl
mov
inc
fiaddl
or
pop
jb
shrl
dec
arpl
cmpb
pop
fisubl
push
push
push
pop
aam
xlat
scas
dec
jae
mov
fidivl
mov
push
lret
jne
pop
cld
mov
or
aaa
mov
adc
ds
pop
pop
xlat
push
push
or
dec
push
cmp
pop
jae
jns
mov
cmp
cmp
pop
sub
mov
lock
test
add
sti
jg
cmpxchg
cmp
daa
jo
mov
mov
repz
je
jl
fldcw
push
hlt
andb
cltd
fmuls
ret
push
adc
mov
js
or
sbb
ficoml
and
or
inc
add
mov
cmp
push
sti
popa
xor
adc
nop
lea
aam
xchg
fs
pop
add
mov
sahf
rclb
fadds
dec
aam
push
and
sub
mov
lods
sub
mov
push
cwtl
loopne
xor
cmp
sub
shl
ret
inc
push
sbb
sbb
movsbl
shl
or
add
sub
mov
add
mov
inc
dec
sub
pop
cli
mov
test
sbb
lret
movb
adc
xchg
push
push
or
cmpl
rolb
add
shlb
loope
cmp
or
mov
push
pop
ljmp
test
push
and
movsl
dec
push
roll
push
sahf
inc
push
xchg
call
movhps
xor
mov
aas
cld
les
or
xor
lods
sbb
xor
loop
xor
xchg
xor
fldenv
popa
xor
roll
call
pop
add
push
push
cld
or
stos
xor
inc
inc
mov
mov
pop
pop
lahf
out
xchg
and
cmp
pop
lea
pushl
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
imul
clc
addr16
mov
pop
lock
inc
cmp
loopne
cmc
hlt
mov
adcb
pop
sub
add
clc
add
mov
shl
jg
add
movzbl
mov
inc
mov
mov
cmp
jl
iret
push
or
inc
mov
mov
push
adc
clc
jle
sub
push
icebp
or
orb
imul
fisttps
mov
pop
or
mov
fisubl
add
and
icebp
mov
cld
push
leave
push
xor
mov
inc
ds
dec
pop
adc
pop
mov
test
fwait
jb
xor
aaa
and
add
mov
test
mov
pop
add
arpl
imul
adc
enter
in
dec
in
or
in
mov
xor
mov
popa
mov
sub
div
pop
bound
mov
jge
es
loopne
inc
push
enter
das
and
fbstp
adc
and
ret
push
into
ret
pop
mov
push
or
das
sub
les
inc
add
xor
mov
inc
xor
addr16
inc
xor
and
adc
add
mov
fsubrp
mov
orl
fadds
addb
mov
lret
push
xchg
xchg
repz
jmp
dec
je
in
sub
and
mov
mov
push
jns
add
mov
orl
ja
inc
imul
sar
shlb
lea
cmp
jbe
cmp
jbe
mov
mov
clc
mov
loop
jle
roll
into
xchg
mov
in
mov
mov
xor
pop
dec
push
cs
pop
and
sub
mov
inc
dec
xor
rolb
or
shrl
icebp
cmp
push
mov
notl
fcoms
push
push
call
push
push
push
cmp
mov
jmp
push
mov
mov
push
mov
sbb
test
pop
ret
and
sub
mov
sbb
cltd
jbe
mov
test
mov
mov
das
mov
or
mov
jg
movl
sti
lea
adc
add
xchg
push
insl
dec
jmp
or
add
pushf
adc
push
repnz
xchg
add
data16
push
test
cmpsb
mov
mov
add
shll
mov
into
shrb
cmp
jnp
in
jne
xor
test
adc
mov
inc
mov
out
or
adc
push
add
ljmp
and
pop
cmp
pop
jle
xchg
or
add
ficoml
push
lcall
mov
inc
adc
adc
ret
mov
loope
or
loop
add
daa
push
sbb
push
and
and
mov
push
and
xchg
cmpl
pop
and
scas
shll
pop
shrl
test
jmp
push
pop
or
mov
inc
xchg
cld
pop
add
xchg
loope
jbe
pop
xor
xlat
jge
mov
add
in
cmp
jmp
mov
push
add
fstl
nop
mov
fisttpll
sarl
mov
sbb
scas
sbb
rcll
and
insb
xor
mov
sti
dec
push
jg
call
cmpl
lock
push
loopne
mov
call
add
add
fbld
insb
aas
push
aam
fldenv
xchg
sarb
add
stos
out
add
stc
shr
dec
add
adc
mov
sbb
fdivl
test
cmp
test
es
xor
les
dec
mov
jge
aaa
inc
rorb
loope
cltd
push
lret
dec
jp
mov
into
push
cmc
dec
roll
pop
out
lock
mov
test
add
push
push
dec
ss
ret
mov
fidivrl
aaa
aas
push
out
adc
nop
sarb
cmp
sbb
adc
icebp
movsb
lahf
add
fsub
sbb
jmp
sub
out
leave
mov
outsl
test
insb
or
sub
add
loop
scas
and
scas
push
pop
sub
sbb
push
pop
je
bound
popa
repnz
ljmp
flds
adc
xor
nop
xor
push
mov
stos
dec
xchg
and
cmpsb
push
aas
sub
inc
into
nop
push
or
xor
lcall
jns
cmp
out
pop
inc
mov
sbb
and
pop
cwtl
clc
mov
popl
or
incl
mov
movsl
mov
sahf
or
daa
inc
jmp
lcall
les
and
add
jmp
push
sub
push
adc
or
mov
loopne
hlt
lahf
gs
pop
push
push
push
cmp
test
cmpb
pop
leave
pop
jne
pop
xor
mov
lahf
imul
and
fwait
mov
pushl
xchg
sbb
xor
cmpxchg
dec
shlb
cmp
jbe
inc
hlt
or
out
jg
jmp
push
pop
push
sbb
out
cwtl
rolb
mov
pop
add
sub
loop
lret
out
xor
ds
cmpsl
or
push
xor
sub
jmp
or
daa
sbb
pop
clc
jne
mov
push
cmp
adc
push
rcr
gs
dec
dec
mov
pop
mov
leave
sub
adc
out
or
imul
call
fisttpl
jmp
push
scas
pop
sbb
fcomps
adc
mulb
jbe
push
call
cmp
sbb
pop
and
cmp
sub
fisttpll
nop
jg
push
mov
lods
xchg
adc
inc
stos
and
dec
das
mov
cmp
jae
inc
jmp
add
es
mov
dec
ret
pop
jmp
dec
xchg
cwtl
sbb
push
xchg
mov
push
pop
dec
out
les
sarl
xor
xor
and
push
pop
xor
pushf
and
cmp
sub
dec
push
cli
mov
xor
and
adc
pop
notb
test
push
xor
stc
and
inc
add
add
lock
sbb
cmp
sub
and
cmp
mov
xor
xchg
repnz
test
push
jae
shlb
cmp
fildll
mov
sub
cwtl
jo
enter
dec
add
sub
fwait
test
and
push
aam
dec
mov
nop
xor
dec
or
sbb
fiadds
inc
lcall
push
sbb
scas
and
mov
sub
push
out
or
dec
clc
in
sub
push
cs
or
adc
push
js
pop
sbb
mov
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
stos
xchg
and
sbb
stos
and
lcall
movsb
xor
inc
inc
push
add
sbb
repnz
push
sub
add
cmp
inc
adc
out
push
mov
push
mov
outsb
shlb
or
movsl
push
xchg
fidivrs
push
xchg
testl
pop
dec
mov
push
mov
cmpsb
inc
rorl
add
add
lds
loopne
adc
arpl
add
inc
jo
jnp
mov
xchg
nop
adc
sub
adc
repnz
inc
mov
adc
test
sub
movl
outsl
rcrb
pop
sbb
jmp
fisubs
sbb
push
jb
iret
jb
cmc
and
push
outsl
and
dec
jnp
push
adc
aam
leave
xchg
pop
pop
out
inc
rcr
xchg
in
ret
and
fadds
sbb
scas
mov
add
jp
mov
ja
sbb
cwtl
inc
loope
rcrb
test
jge
stos
push
shrb
inc
gs
lahf
inc
aam
adc
pop
inc
lods
or
push
cwtl
test
add
mov
ja
push
sbb
jns
cmp
sbb
add
int3
add
outsl
and
test
ja
push
stc
pushl
daa
xor
inc
mov
and
push
jecxz
lods
popa
outsb
or
adc
aas
cltd
fcoml
loopne
mov
jmp
imul
call
push
xchg
xor
dec
cmp
insb
adc
adc
mov
cwtl
stos
add
scas
movsl
les
scas
subb
lea
cmpsl
fs
into
dec
sub
loope
add
sbb
sub
push
sub
xor
adc
movsl
sbb
mov
cmp
shl
xor
rcl
sub
push
fbstp
jb
cmp
inc
mov
dec
sahf
jbe
inc
inc
aaa
popa
xor
ret
and
mov
in
push
mov
add
push
sbb
ficompl
cmp
mov
push
push
pop
push
inc
popa
cmp
inc
in
and
shl
pushf
pop
xchg
leave
les
je
push
out
mov
and
xorl
mov
mov
mov
icebp
xor
das
je
or
mov
cmp
addr16
cmp
cmp
je
cmp
jne
mov
sbb
add
negl
lea
idivb
pop
dec
xor
mov
cmpsb
mov
sub
inc
adc
je
testl
lods
fs
add
dec
mov
or
loope
mov
jg
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
pop
mov
dec
insb
push
or
pop
jno
and
adc
or
ret
mov
xchg
lods
or
cmpsb
repnz
je
aam
mov
mov
jo
aaa
push
adc
into
inc
addb
loop
loop
test
mov
sub
fmuls
icebp
dec
cld
inc
xchg
cmp
add
lock
cmp
outsb
hlt
cmpb
fs
test
leave
pop
cli
mov
push
jne
sub
and
clc
jb
add
insl
sbb
js
sub
xor
out
xchg
es
push
mov
pop
mov
shl
push
inc
hlt
mov
cmp
movsl
fstpl
push
lds
mov
xlat
fidivrl
in
in
out
mov
pop
add
cs
add
pop
ljmp
inc
shlb
pop
shl
add
jmp
pushf
aas
inc
dec
iret
lock
sti
and
cmpsb
and
or
adc
fs
jne
xor
dec
adc
dec
lock
mov
dec
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
inc
mov
test
jne
lret
sub
push
aaa
insb
xorb
or
add
inc
mov
fistl
mov
and
cmp
jae
cmp
nop
xor
and
es
jae
jge
sub
sub
and
pop
or
jl
or
adc
test
pusha
cwtl
inc
test
btl
loopne
pop
jbe
hlt
pop
arpl
adc
adc
je
test
jne
insl
inc
lock
leave
add
mov
push
add
mov
movb
inc
lcall
push
pop
into
and
push
add
xchg
ret
mov
push
mov
inc
and
das
dec
add
ja
jbe
inc
gs
adc
add
mov
daa
sbb
inc
packuswb
cmp
jbe
clc
push
push
xchg
pop
xor
pop
je
sbb
clc
inc
mov
jo
xchg
mov
push
push
jns
add
push
push
test
mov
ret
xor
add
xor
test
loope
inc
add
inc
sahf
test
pop
sub
test
add
xor
mov
jg,pn
mov
lret
rclb
in
pop
lods
stos
icebp
cmp
push
cltd
xor
push
shlb
int3
test
push
xor
or
pop
lock
int
jp
ret
adcb
push
mov
jno
cmp
es
or
movsl
and
movsb
mov
popf
lcall
add
mov
out
pop
js
sub
test
add
sub
jne
fisubl
jle
sub
or
push
andl
jg
mov
xlat
pop
cltd
insl
sbb
sbb
jp
inc
mov
or
pop
add
jecxz
push
mov
mov
sbb
pop
and
push
pop
push
movl
push
adc
dec
or
adc
and
rolb
lahf
jbe
add
mov
xor
incb
je
sub
lods
xchg
fmul
add
pop
lods
insl
xchg
add
pop
push
and
adc
fcomps
mov
push
dec
scas
xor
mov
int
push
push
aas
outsb
cmpl
clc
add
or
sbbb
push
pushl
sub
mov
imull
outsb
fsubr
jae
pop
push
lock
mov
in
xchg
mov
cmp
mov
data16
pop
psubd
lea
or
data16
jb
pop
sub
xor
pop
fbstp
mov
inc
adc
pop
xor
and
cmp
sub
jge
jle
outsl
das
push
gs
add
inc
ret
inc
inc
fwait
cmp
pop
add
pop
pop
nop
push
loope
add
cmp
cmpsl
popf
mov
inc
cmpsl
or
mov
push
cs
insl
push
lods
movsl
xchg
stos
pop
adc
adc
add
xchg
sbb
cmp
pop
je
test
dec
push
inc
or
xor
push
fs
and
inc
shll
adc
dec
loopne
sub
ss
push
shlb
call
cmp
mov
mov
mov
sbb
mov
std
rolb
add
pusha
loopne
cmp
add
push
sbb
pusha
movsl
loopne
inc
push
in
mov
lods
loop
or
add
sahf
mov
mov
push
aaa
les
lds
aas
cwtl
pusha
add
push
add
add
pop
adc
sub
les
jns
inc
push
xor
adc
sub
inc
mov
adc
lock
pop
sub
ret
or
sti
pusha
jb
push
mov
jmp
mov
test
jbe
push
adcl
ja
inc
popl
mov
loopne
dec
mov
cmp
and
push
xor
mov
inc
push
ljmp
clc
mov
add
mov
ret
cmp
push
lock
sti
xor
inc
inc
push
push
popf
test
in
cmpsl
inc
pop
xchg
addl
je
and
aam
pop
dec
xlat
jle
ret
movsl
ja
lea
or
sub
inc
loope
fnsave
push
sub
pusha
insb
dec
cmpsb
popa
pop
or
xchg
nop
add
dec
pop
xchg
fs
dec
stos
xor
push
or
and
bound
sahf
pop
popa
call
faddp
push
push
jbe
xor
or
je
xchg
fmul
shlb
popa
mov
ja
push
xchg
push
mov
ficomps
mov
stos
add
mov
jo
mov
sbb
xlat
jne
or
pop
cwtl
cmpl
dec
push
je
xor
imul
lret
add
dec
mov
ds
aad
sbb
adc
add
test
inc
add
js
inc
pop
loopne
out
into
cmpl
mov
jae
testl
testl
sub
jb
xor
arpl
xchg
fucomp
push
fucom
push
clc
bound
and
push
cmp
jo
xor
mov
mov
ss
or
xchg
or
jne
push
push
cmp
pusha
shl
mov
jp
mov
pop
aaa
nop
mov
mov
push
adcl
std
test
dec
cmp
in
mov
mov
push
mov
scas
and
jo
dec
inc
ficomps
mov
cmc
xchg
jne
mov
pusha
cmp
mov
cmpsl
lods
cwtl
jl
loope
mov
loopne
fmuls
mov
dec
outsb
out
push
aas
je
cmp
push
pop
jne
fcmovnb
push
sbb
aam
cmpsl
jne
push
pop
inc
cmp
jne
pop
mov
sbb
jecxz
test
and
in
in
xor
mov
xchg
cmp
fbstp
jmp
sbb
sub
xor
call
mov
mov
or
inc
hlt
xchg
imul
cmp
pop
lea
cmp
jo
fldl
add
je
in
lock
in
sub
mov
push
imul
mov
cmp
fcomi
jmp
pusha
mov
jae
scas
daa
test
add
and
xor
add
test
aas
inc
repz
sub
decb
adc
cmpl
andb
push
xchg
cmp
bound
lret
in
fmull
pop
lods
pop
cs
fs
push
cmp
push
mov
scas
or
add
andb
ret
push
adc
ret
push
push
ret
orl
push
mov
ret
rclb
push
mov
lcall
push
adc
push
movsl
adc
popa
fistpll
add
inc
arpl
add
pop
ja
xor
xchg
sub
inc
bound
push
jno
pop
push
push
sahf
xchg
lret
in
mov
mov
cs
pop
pusha
pusha
or
pop
or
cmp
xor
push
push
sub
push
add
sub
movsl
lods
xor
add
lcall
cmp
shl
and
adc
mov
mov
and
push
xor
clc
outsl
aas
jmp
push
rcll
mov
mov
lret
mov
sbb
lret
push
test
push
dec
mov
xor
push
or
inc
adc
mov
int3
adc
jne
pop
pusha
sbb
bound
adc
mov
cld
scas
stos
add
cs
add
daa
mov
or
leave
sbb
xor
mov
scas
sbb
ljmp
jl
xor
or
inc
inc
imul
jp
push
pop
jmp
shr
je
pop
enter
aam
je
into
or
sbb
jmp
mov
xor
or
mov
or
push
cmp
fwait
sbb
fstpt
sahf
xchg
or
andl
data16
gs
push
xor
sti
es
sti
cmpl
pop
xor
sub
push
mov
mov
jb
or
nop
and
jb
mov
mov
sbb
daa
lods
test
sti
je
or
cld
outsl
add
push
mov
je
mov
cmp
jne
sbb
add
adc
in
mov
pop
dec
sbb
incl
fstps
adc
adc
xchg
inc
orb
addb
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
push
pusha
das
inc
mov
les
sbb
pop
add
outsb
or
cmp
clc
std
push
arpl
sti
je
inc
fcmove
sbb
jbe
push
adc
adc
pop
je
aam
jae
arpl
out
sbb
and
add
in
sbbb
hlt
in
jno
jle
xor
shlb
or
or
adc
push
imul
mov
int
mov
test
jl
push
sbb
ret
add
es
lcall
cmp
sub
or
inc
js
bound
andl
xlat
lcall
add
xor
inc
or
push
adc
mov
mov
sub
mov
sbb
cmp
lahf
pop
ja
xor
mov
xor
aaa
fstpt
cli
jp
hlt
cmpsb
mov
mov
add
pusha
je
divb
push
lea
push
mov
xor
add
mov
adc
jmp
jmp
mov
and
leave
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
pop
je
mov
loopne
add
into
insb
sti
cmpsl
lock
loop
inc
inc
mov
ljmp
aam
pop
mov
add
jb
les
jg
jb
les
mov
cmc
and
mov
add
adc
sub
ret
and
mov
push
subb
aas
xchg
jg
fdiv
push
popa
jo
add
test
mov
mov
mov
orl
int
and
mov
pop
push
xchg
adc
mov
push
shr
fcmovbe
adc
test
gs
or
das
je
popa
or
push
cmp
pop
and
mov
fmuls
push
push
inc
pusha
scas
xchg
push
addb
mov
cmp
xor
inc
mov
lock
and
mov
mov
fsubl
xor
xchg
and
sub
or
sbb
cld
mov
xchg
mov
cmp
in
push
adc
pop
sbb
mov
sbb
push
sub
nop
ja
pop
pop
push
test
pusha
es
sbbb
adc
bound
js
adc
inc
adc
cli
mov
clc
jmp
sub
push
stc
push
adc
push
xor
test
mov
aad
push
lcall
cwtl
cmp
out
adc
and
xchg
mov
sbb
je
push
jmp
mov
in
clc
in
mov
cmpb
push
ja
mov
dec
cmp
aad
add
dec
dec
and
je
jne
jns
mov
xor
call
jb
add
inc
rorb
lahf
adc
lds
in
rclb
mov
add
cmp
xor
jp
repz
adc
ds
idiv
push
enter
push
iret
in
fmuls
fcompl
mov
xor
pusha
out
loopne
movsb
lods
js
nop
imul
addl
insb
and
sar
and
mov
icebp
sahf
push
sub
shr
push
push
push
mov
xlat
mov
mov
mov
test
and
mov
and
mov
test
das
dec
sbb
cmp
jl
jmp
pop
add
mov
inc
mov
cmp
and
clc
sbb
add
and
add
aas
test
xchg
adc
mov
mov
jle
jg
movl
sbb
in
stos
sarl
mov
pop
xchg
push
xor
sti
and
lea
mov
mov
add
adc
sbb
and
jo
sbb
pop
rep
clc
int3
rcl
mov
fadds
cmp
jmp
add
je
dec
clc
inc
push
xor
mov
jns
and
inc
mov
clc
lret
push
push
xor
in
or
add
mov
jmp
push
inc
add
inc
mov
xchg
and
out
movsb
orb
or
pop
int3
or
push
in
add
aas
ret
or
loope
sub
dec
je
sbb
mov
sbb
push
sbb
sbb
mov
sub
cmp
in
test
or
xor
pop
xor
cmp
and
xor
outsb
sbb
jle
push
dec
push
and
inc
js
adc
add
pop
jl
xlat
mov
or
jae
enter
sbb
popa
pop
leave
sub
jmp
mov
cmp
fld
jecxz
jl
push
push
fs
test
push
sub
ret
idivb
or
jnp
jmp
push
ds
xlat
mov
cmp
repnz
mov
add
xor
push
cwtl
adc
jge
sub
dec
sub
inc
pop
rorl
nop
push
add
add
mov
loopne
dec
add
rorl
add
pop
xchg
ret
jmp
pop
sti
pop
ret
pushl
push
iret
xchg
pop
ja
xchg
adc
iret
add
jo
push
add
xor
pop
in
jge
cmp
mov
int3
dec
les
daa
push
lcall
je
or
inc
inc
lock
pop
pushf
add
iret
mov
mov
stos
mov
xor
sbb
xor
ret
jp
dec
loopne
adc
loopne
ret
or
sbb
and
cmp
cmp
sub
cwtl
adc
sub
add
andb
xchg
inc
cmp
mov
push
outsb
jns
in
xor
scas
sub
or
int3
out
fdivrs
or
mov
pop
push
inc
cld
dec
lahf
xchg
dec
mov
or
push
add
push
push
cmpsl
mov
stos
aam
push
pushf
ret
jecxz
cmpsb
add
jp
loopne
cmpsb
or
loop
pop
pop
push
adc
add
mov
pop
stos
jb
loopne
enter
mov
add
subb
mov
xlat
data16
sub
ret
mov
in
push
mov
sub
push
outsl
adcb
iret
or
add
inc
xor
pop
mov
fnsave
cmp
mov
mull
adc
pop
mov
xor
or
incl
mov
jnp
aaa
jbe
xchg
pop
mov
mov
push
pop
sbb
lea
aam
stos
sub
rcrb
jmp
adc
dec
adc
loop
loopne
cmp
dec
lock
sub
sub
jne
rcrb
movl
add
pop
mov
dec
jnp
dec
xor
push
adc
es
cmpsb
imul
popa
cld
xor
jae
or
inc
mov
daa
add
cmpsb
pop
or
cmp
xor
dec
repz
add
push
inc
add
fcmovne
add
arpl
dec
sub
mov
lea
jecxz
ret
and
jb
test
lret
pop
icebp
and
dec
pop
jmp
enter
and
xchg
dec
mov
arpl
lds
or
jecxz
xchg
mov
in
pop
insb
pusha
xchg
xor
push
clc
test
pop
inc
sbb
enter
jge
xor
outsl
ss
add
inc
repnz
faddl
aaa
lods
mov
inc
ret
lea
repnz
mov
mov
ret
mov
and
jg
jg
fnstcw
add
data16
mov
movl
mov
inc
mov
mov
pop
movl
rorl
dec
mov
inc
dec
fists
addr16
add
xor
sbb
or
xchg
sbb
adc
rclb
mov
adc
bound
scas
inc
sub
xor
cmpsl
outsl
or
push
cs
shll
xor
push
push
inc
mov
add
dec
dec
xchg
jno
imul
inc
mov
adc
and
and
into
dec
movsb
addb
dec
dec
xchg
xor
xchg
enter
lret
ljmp
sbb
sub
jns
lret
adc
sbb
adc
pusha
sbb
add
inc
pusha
mov
mov
inc
or
and
cmp
inc
xorl
aaa
sarl
jge
push
sub
mov
aam
mov
and
push
push
xlat
add
adc
aaa
les
movsb
add
jae
aaa
sahf
hlt
jnp
push
push
adc
mov
insb
andl
push
ss
movsb
adc
jbe
jecxz
in
jl
push
leave
popa
mov
sbb
mov
xorl
push
jnp
mov
pop
or
jmp
push
push
ret
adc
arpl
js
mov
pop
mov
push
xchg
pop
and
sbb
rolb
push
js
loopne
fdivl
test
adc
clc
data16
xor
add
lahf
cmpl
pop
adc
or
push
or
lods
inc
pop
or
mov
adc
movsb
jnp
pushf
lret
jnp
add
sbb
cmp
dec
idivb
sti
insb
pop
hlt
mov
and
pusha
jmp
ss
pop
xchg
insl
movsb
inc
pushf
test
mov
bound
testb
ljmp
lds
xor
inc
push
into
push
xchg
push
xchg
sub
cmp
add
enter
inc
sub
mov
cltd
jmp
sbb
dec
test
mov
mov
pop
push
das
add
sub
jnp
jle
mov
insb
or
pop
jmp
adc
push
lods
jo
lahf
inc
pusha
jne
test
inc
mov
add
bound
test
out
jl
adc
jo
sbb
xchg
rclb
and
cmp
call
adc
fildll
fcoms
data16
push
cld
imul
pop
cmp
jbe
adc
jb
dec
and
data16
pop
jl
loop
add
dec
cmp
pop
imul
xchg
add
sub
adc
mov
jnp
push
ljmp
pop
jbe,pn
fsubrl
push
in
jne
ret
mov
adc
loopne
seto
jp
xchg
mov
shll
push
lea
mov
mov
movsl
and
sbb
pop
mov
enter
aam
fildll
mov
adc
cmp
push
inc
dec
pop
push
fsubr
adc
fnsave
jo
adc
add
and
adc
add
mov
outsb
mov
test
bound
or
das
inc
inc
sbb
cltd
or
inc
pop
or
mov
adc
lock
push
inc
verr
mov
hlt
mov
and
push
cmp
and
pop
sbb
pushf
movsb
fildll
cmp
jmp
mov
aaa
adc
pop
or
push
push
mov
add
jecxz
cmpsb
ss
jb
sub
js
push
mov
sbb
lods
pop
pop
sbb
pop
jge
jo
popf
ret
mov
cltd
cltd
push
or
loope
aad
push
sub
add
pop
in
imul
or
jns
mulb
xor
push
fadd
hlt
pop
adc
ljmp
jle
movsb
pushf
mov
jo
fs
test
fcomip
mov
push
sbb
or
push
sbb
sub
sbb
fisttps
shlb
pop
mov
xchg
jne
add
rorl
jmp
cmp
test
inc
pop
dec
pop
push
or
mov
or
sbb
inc
mov
add
push
mov
inc
aas
shrb
pop
rorl
sub
add
stos
outsb
cmp
rcrb
jbe
sub
add
mov
das
movsb
push
pop
xor
lds
xchg
push
fsubs
mov
ljmp
adc
cmp
jb
sub
dec
loop
push
xchg
inc
js
aam
inc
push
sar
or
je
pop
mov
xchg
push
or
cwtl
mov
push
lret
xor
es
or
pop
cmp
cmpsb
les
push
mov
mov
push
pop
mov
jne
sub
mov
sub
add
out
xor
dec
jbe
adc
add
inc
ja
shlb
push
mov
arpl
test
popf
xchg
mov
xor
jmp
loop
pop
inc
dec
mov
imul
jne
ret
mov
enter
and
mov
sub
inc
adc
je
push
adc
push
pusha
xchg
dec
stos
gs
adc
push
loope
imul
and
mov
push
enter
or
and
inc
dec
inc
shrb
xor
push
mov
fsub
add
jge,pt
dec
enter
xchg
sahf
xor
or
push
pop
add
lret
lods
cld
fldenv
add
ss
ds
or
add
sbb
inc
ja
adc
jp
cmp
mov
faddl
lock
es
mov
rorb
push
mov
outsb
add
and
dec
aam
je
in
mov
out
loope
push
sub
out
pop
nop
jge
inc
mov
add
sbb
and
xor
arpl
push
insb
in
add
imul
dec
pop
adc
adc
nop
dec
adc
jae
adc
mov
adc
fs
dec
sub
adc
sbbl
adc
adc
xor
and
adc
jno
or
and
inc
add
push
xorb
rorl
sub
mov
hlt
divps
push
mov
cmpw
je
out
and
fmuls
int
data16
cmpsl
mov
dec
cmpsl
or
xor
mov
lods
add
enter
ret
dec
adc
repnz
test
push
lret
les
inc
ss
cmp
call
mov
mov
and
sub
jmp
cmp
sub
sarb
ja
bound
loopne
adc
inc
adc
out
or
push
shlb
xlat
xorb
adc
mov
add
dec
stc
stos
pop
hlt
mov
arpl
sub
repnz
jl
jg
add
sbb
mov
xchg
lret
mov
insl
adcb
add
xor
sub
add
in
imul
sub
popf
cmp
push
add
pop
mov
fidivrs
into
xor
and
mov
loope
sub
dec
pushf
inc
add
and
add
rcll
push
pusha
mov
push
fdivrs
fisttpll
addr16
stos
popf
mov
bnd
sti
sahf
xchg
cmpl
sbb
push
out
mov
xchg
les
or
imul
js
adc
sub
inc
pop
dec
xchg
loopne
ret
orl
adc
mov
nop
in
pop
lods
cmp
pop
inc
dec
pop
in
push
push
jg
pop
test
push
mov
fnsave
testb
mov
loop
cmp
test
cwtl
adc
std
mov
test
lock
add
sbb
insb
pop
add
pop
mov
adcb
sub
inc
test
clc
mov
nop
add
adc
out
push
inc
push
imull
mov
pop
mov
cmp
popl
xor
cmp
into
jne
sub
add
ja
aad
arpl
dec
cld
xchg
fnstsw
sub
rorb
or
cmp
ss
pop
inc
and
pop
test
adc
repnz
and
cs
push
or
push
sub
sub
aaa
mov
imul
test
push
lock
adc
pop
and
dec
add
xor
and
push
rorb
mov
pop
add
push
loope
sti
or
insb
cmp
inc
fld
ret
adc
xor
aad
fldcw
push
cvtps2pd
jmp
sti
mov
and
xorl
and
sub
or
movsb
adc
out
sbb
pop
and
clc
movsb
inc
mov
addr16
aad
lcall
jns
out
ljmp
sti
xor
sti
dec
out
push
and
mov
outsl
test
sbb
imul
cli
cmp
shlb
push
push
sub
rorb
or
adc
dec
add
lret
jno
add
arpl
int
stos
xor
jmp
lcall
adc
jge
test
or
cmp
mov
push
add
inc
or
pop
dec
js
jmp
int
jne
ret
mov
popa
lea
in
ljmp
mov
test
add
lea
mov
inc
fwait
into
sub
subl
xchg
repz
add
cmp
inc
decb
scas
mov
add
or
call
jp
shlb
stos
movsb
push
mov
sbb
adc
cwtl
pusha
mov
push
jo
addr16
ret
dec
insb
syscall
adc
lret
pop
rorl
mov
cmp
or
icebp
and
movsl
ljmp
xor
loop
jp
xor
adc
inc
xchg
ljmp
xchg
fimuls
mov
mov
cltd
ud0
ret
inc
pop
scas
sarl
jmp
dec
fcmovnb
adc
test
push
shrl
fs
push
mov
push
jl
das
inc
xor
and
jmp
and
pop
imul
xchg
pop
push
rorl
xor
or
in
cmpsb
std
mov
add
lds
stos
sub
adc
inc
bound
add
mov
pop
mov
dec
or
jge
inc
lea
jmp
aam
push
orl
movsl
jecxz
xor
shrb
subb
out
jmp
add
insl
mov
adc
lods
add
lds
fimuls
insb
fwait
push
inc
mov
pop
add
test
insb
or
daa
adc
loope
jge
cli
cltd
push
mov
mov
roll
daa
stos
mov
addl
je
sahf
stos
lea
and
adc
pop
lret
jecxz
mov
jns
push
inc
push
imul
pushf
adc
cmp
nop
out
cmp
push
or
mov
add
push
and
add
push
pop
enter
pop
lcall
imul
clc
in
push
aas
jl
adc
or
add
stos
jp
adcb
adc
fstpt
aas
loope
lock
dec
movsb
pop
aaa
aaa
pop
fnstcw
adc
dec
test
sbb
add
pop
add
push
jecxz
inc
cmp
cmpsb
inc
test
and
rorl
cmp
or
or
add
repnz
add
lahf
push
push
sbb
mov
popa
inc
icebp
shlb
in
mov
adc
out
and
adc
mov
and
fldt
test
xorl
cld
and
dec
out
adc
push
call
cwtl
inc
std
int3
push
cmpsl
fs
jmp
fs
mulb
xchg
mov
and
lret
or
mov
or
adcl
sub
dec
je
dec
movsb
enter
or
loop
mov
in
lea
rorb
test
jle
add
daa
mov
test
cltd
mov
jg
jmp
jae
lea
jmp
cmpl
sub
shll
aam
sbb
push
mov
cmp
test
add
jle
and
mov
jb
shrb
inc
clc
sbb
inc
fcmovb
adc
mov
pop
push
orb
xor
mov
sbb
lahf
xchg
shlb
xchg
loop
inc
cli
mov
fsts
icebp
sub
mov
sub
and
fs
ficompl
mov
fs
call
cwtl
pop
popa
hlt
mov
or
push
pop
xchg
dec
xchg
sub
fmuls
xor
icebp
lods
rorl
pop
xor
popf
sbb
sub
jns
or
dec
adc
cmp
icebp
pusha
inc
sbb
lods
or
nop
popa
pop
add
test
cmpsb
xchg
dec
push
mov
jbe
lea
pop
test
mov
test
mov
dec
dec
sub
test
jl
sub
iret
xor
and
movsb
add
push
cmp
jmp
mov
arpl
and
inc
sti
movl
push
je
mov
push
dec
jg
inc
xor
adc
add
jmp
xlat
mov
or
in
js
add
stc
mov
inc
outsb
or
sbb
xorl
push
ret
pop
in
roll
es
push
push
adc
sub
stos
sub
cmp
sub
cmp
fcoms
push
rorl
add
push
mov
lea
xor
and
imul
and
lds
jge
nop
add
adc
and
nop
pop
mov
add
and
or
xchg
jecxz
mov
popf
xchg
add
jb
lret
push
pushf
pop
ljmp
test
jbe
push
pop
mov
sub
iret
adc
sub
jecxz
sub
test
jmp
idivl
les
and
mov
xchg
push
inc
push
pop
xor
testb
dec
in
nop
rclb
lahf
xchg
and
clc
push
cmp
add
adc
jnp
gs
cmp
jne
pop
inc
push
push
cmp
data16
pop
and
int3
pop
or
cmp
and
or
je
test
dec
in
cltd
jbe
clc
jne
mov
push
test
cmp
dec
or
sub
scas
sub
stos
sub
cld
cmp
stos
or
pop
dec
or
ss
xor
repnz
xchg
sbb
hlt
hlt
jns
adc
popa
jb
lds
inc
scas
sbb
lods
test
mov
mov
push
cmp
call
add
sbb
mov
hlt
jne
push
js
cs
xor
adc
loopne
fnstcw
sbb
jne
mov
fsubs
jo
repz
lret
xor
stos
dec
or
add
in
out
or
inc
or
mov
pusha
and
dec
rsqrtps
dec
sub
mov
cmpsl
xorl
jnp
out
mov
pop
cs
dec
pop
pop
pusha
push
lock
mov
movsl
cld
mov
hlt
neg
sbb
and
repnz
push
inc
jo
movzwl
push
adc
xchg
les
cld
inc
mov
jnp
lret
xchg
and
je
pop
aam
adc
jmp
and
pop
rcrl
inc
mov
and
mov
mov
insl
imul
je
or
adc
decl
in
inc
cmpl
jne
cmp
jbe
or
jne
push
add
dec
int3
cmp
das
movsb
pop
pop
jo
adc
outsb
mov
addb
jae
popa
jbe
jmp
push
insb
andb
mov
xor
cmp
orl
adc
sbb
cmp
ds
jb
enter
adc
test
cmpsl
lods
nop
aad
mov
cmc
dec
fsubs
sub
jl
cmp
cmp
sbb
sub
sbb
xchg
in
jp
iret
sbb
add
nop
xchg
jbe
push
adcb
sub
lds
cs
movsl
mov
sub
or
mov
cmpsb
and
or
mov
sub
ret
stc
mov
sub
adc
push
aad
xchg
loop
mov
fnsave
pusha
call
cmp
push
cmp
out
loopne
out
sbb
inc
in
cmp
pop
push
adc
adc
xor
xor
faddl
inc
andl
add
xor
or
fadds
and
scas
call
and
sbb
sbb
sbb
jae
andl
leave
ret
or
sbb
ret
orb
icebp
addb
shrb
jl
out
dec
lret
daa
cmp
xchg
add
or
cmp
popfw
adc
sbb
dec
jle
out
js
xor
inc
jg
xor
or
sub
mov
mov
jmp
jbe
rcrb
mov
push
imul
out
addr16
xor
test
sbb
sar
movsb
bound
fnsave
pusha
sub
mov
sub
push
jp
push
lret
jae
xchg
bound
jae
dec
stos
and
and
jmp
xor
jge
xor
adc
dec
xlat
pop
xor
xor
inc
cmp
jae
cmp
je
mov
idivb
cmp
add
cltd
push
pusha
test
jo
or
add
sbb
imul
push
cmpb
adc
cmpsb
add
testb
add
mov
xor
or
add
pop
or
movsb
orl
or
mov
dec
sbb
mov
cmp
out
cli
pushf
mov
mov
sti
push
xor
pop
xor
sbb
mov
xlat
sbb
mov
mov
outsb
xor
sub
add
dec
jae
cmp
mov
pusha
sub
add
mov
and
clc
inc
mov
sbb
jp
push
jo
inc
and
push
rol
pop
inc
add
in
push
js
adc
je
jmp
push
dec
add
jmp
mov
or
xchg
cmp
lods
pop
or
adc
sbb
sub
jle
mov
bound
sti
adc
repz
jge
cmp
xchg
xchg
arpl
call
imul
test
in
add
scas
xor
and
repnz
ret
add
shll
dec
dec
pop
xlat
xchg
orl
je
call
pop
jl
das
sbb
push
and
mov
mov
and
push
push
xor
xchg
mov
shll
xor
xchg
xchg
inc
sub
loop
sbb
and
pop
push
dec
xchg
push
leave
rcll
adc
inc
mov
xchg
insl
je
mov
jns
je
mov
and
in
adc
out
les
cmp
aam
cmp
fcomps
add
mov
rcr
and
pushf
pusha
mov
mov
mov
xadd
xchg
enter
roll
inc
add
lock
fisttps
add
jmp
lea
ja
ret
or
or
jle
cmp
push
inc
stc
in
test
pushl
push
lret
mov
dec
out
in
add
in
rcrb
into
sub
sub
roll
fistps
inc
or
movd
lods
adc
sub
adc
sti
jb
in
into
sbb
mov
mov
sub
ret
dec
cwtl
or
in
mov
ds
lea
fistps
or
lods
jle
xor
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
out
test
xchg
jge
or
xorl
das
sarb
push
jae
lea
ja
cmpb
jne
push
out
gs
fidivl
loopne
or
jge
stc
mov
je
inc
call
or
pop
stc
push
xchg
cmp
xchg
cmc
fidivrs
mov
lea
out
sti
push
sbb
push
dec
or
out
clc
inc
mov
je
lahf
sub
lock
lea
cmp
dec
shl
dec
aam
xor
jae
leave
jmp
je
mov
push
inc
sub
dec
and
out
xorb
lods
adcl
add
xchg
lret
push
adc
add
mov
mov
dec
xchg
xchg
add
insb
pop
cmpsb
dec
jno
dec
pop
push
sbb
adc
lods
and
mov
inc
cmp
je
mov
stos
add
rorl
adc
inc
mov
sub
mov
mov
cmp
inc
inc
lahf
orb
sub
inc
push
lods
mov
xor
jne
xor
pop
push
lea
cmp
xchg
aaa
lcall
or
iret
ja
and
jb
pop
adc
cmp
aaa
fisttps
popf
jmp
or
fsub
add
dec
or
adc
push
mov
add
xor
push
es
add
testb
inc
outsb
mov
pop
aam
pop
mov
push
add
push
ljmp
push
lea
aam
xor
push
and
jle
dec
stc
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
add
push
inc
add
add
jns
adc
pop
sbb
pop
lea
data16
add
ds
cmp
orl
cli
xor
arpl
jbe
inc
std
rolb
rcrb
or
or
and
cmp
imul
or
mov
daa
bnd
mov
dec
adc
mov
add
jb
push
jae
lea
push
add
les
and
push
add
push
aas
lahf
pop
sbb
cli
dec
les
adc
ret
sub
adc
lcall
fdiv
loopne
inc
andl
jge
insb
les
inc
dec
fcompl
cmpb
xor
fnstenv
inc
jmp
push
cmp
push
xor
clc
inc
inc
mov
mov
lea
sbb
int3
xchg
mov
pop
movb
add
sbb
jb
sub
movsb
repnz
push
sub
jmp
push
sti
dec
sbb
scas
mov
out
insb
negb
call
mov
cmc
dec
in
xor
lea
dec
shrb
jae
xchg
adc
push
push
xchg
popf
scas
fs
lea
add
js
push
or
out
test
clc
repz
cmp
xor
sub
cmpsb
test
push
es
arpl
sbb
jno
push
cmp
push
jnp
iret
pop
pop
xchg
or
out
jmp
push
inc
add
jbe
divb
inc
cmp
and
dec
jae
decb
fwait
enter
jne
lret
xor
add
imul
cmp
cmp
xor
add
aaa
pop
sub
and
lret
jbe
cs
cmp
add
aam
sahf
or
js
and
shrl
pop
mov
cmp
sub
push
inc
or
pop
jp
add
es
adc
sub
pop
mov
andl
ss
aaa
and
add
iret
jne
jno
aas
loopne
ficoml
pop
inc
mov
aas
mov
add
jne
adc
sub
or
jne
imul
imul
test
xor
adc
rcrl
mov
push
jo
add
addb
sub
add
ret
dec
mov
push
inc
xor
jns
loope
or
sbb
and
xorl
add
das
std
iret
add
pop
add
push
cmp
mov
xchg
jmp
jle
adc
jg
xchg
pop
jbe
inc
pusha
sub
add
arpl
add
cmp
js
xchg
lock
fadds
pop
in
adc
pop
imul
sub
ljmp
std
inc
add
cmp
pusha
jl
inc
mov
adc
shlb
cmp
arpl
pop
ret
sar
push
cmpl
pushl
shll
scas
push
jecxz
inc
adcl
adcl
sbb
and
mov
push
and
sub
jl
inc
imul
pop
adc
adc
xchg
jg
jno
lea
jo
unpcklps
xchg
hlt
mov
cmp
data16
inc
or
insb
push
mov
fndisi(8087
xor
pop
jns
pop
pusha
popa
ds
pop
daa
xchg
mov
mov
mov
rol
std
sarb
mov
and
adc
es
rorb
movl
or
or
push
mov
cmp
push
test
pop
mov
pop
mov
xor
sub
add
data16
loopne
mov
pop
push
sub
mov
mov
das
mov
scas
mov
lahf
leave
ret
pop
test
lods
lahf
push
dec
ja
push
jae
out
test
or
call
dec
jge
add
sbb
sbb
test
xor
sbb
fisubl
jle
jne
jne
fucomi
pop
mov
cmpsb
out
mov
in
pop
les
push
sub
xchg
rcrb
lock
das
sbb
mov
push
mov
add
xchg
xor
add
pop
xorb
aas
mov
pop
cmp
call
ja
jg
or
add
and
testb
bound
and
add
add
testl
inc
fdivr
std
xchg
leave
mov
mov
pop
adc
cmpl
lods
add
dec
pop
stos
rcl
and
push
push
jp
adc
lcall
adc
clc
sub
dec
push
inc
subl
sbb
aam
mov
jb
xor
iret
popf
push
jecxz
shlb
leave
push
cwtl
sub
scas
cmc
dec
xor
xor
xor
mov
fs
imul
dec
jae
adc
nop
cmp
js
cmp
xor
pushf
xchg
adc
mov
cmp
jmp
mov
mov
mov
aam
loopne
or
pushf
xor
nop
and
pop
fwait
ret
and
out
ljmp
out
fiadds
dec
movsb
aam
cmp
jo
inc
pop
mov
xchg
movzwl
test
je
test
xchg
or
mov
xchg
push
or
sub
pop
push
mov
call
int3
dec
sbb
js
adc
or
inc
dec
xchg
inc
icebp
rcll
das
jmp
cmp
or
and
cmpsl
push
clc
push
push
pushf
jb
adc
sbb
fwait
mov
push
call
loop
sbb
mov
fimuls
adc
mov
xor
adc
jmp
pop
and
dec
fbld
push
jecxz
sbb
add
xor
and
aas
mov
js
fistpl
jb
and
mov
push
xchg
add
xchg
dec
xchg
sbb
rorb
in
pusha
pop
add
pop
je
cs
inc
or
stos
mov
and
or
mov
cld
mov
in
les
mov
dec
and
popa
arpl
in
sbb
xchg
bound
pop
add
mov
fs
scas
or
sub
xchg
mov
in
cmpsb
push
pop
or
ljmp
or
mov
dec
and
add
cltd
xor
adc
dec
filds
inc
out
xchg
ret
push
pop
xor
jecxz
jmp
sbb
repz
cld
push
push
into
imulb
adc
cld
js
and
mov
add
sti
lret
leave
dec
clc
xor
mov
hlt
push
popa
pop
pop
xchg
mulb
sbb
mov
loopne
jne
mov
mov
or
and
sbb
inc
push
clc
popa
aam
pop
fmul
jle
mov
push
push
push
inc
adc
mov
cmpsb
cmpsb
addl
andb
add
mov
ret
sbb
add
test
es
adc
mov
insl
pop
sti
xor
add
add
jl
subl
add
cmp
mov
pop
gs
push
lea
outsl
push
into
dec
mov
dec
and
jge
add
push
jg
mov
dec
sub
and
inc
xor
jne
xor
or
ljmp
lock
sub
push
cli
dec
sub
jg
add
inc
or
mov
into
lods
or
push
cwtl
lock
ja
out
and
sbbb
cmc
sahf
sbb
je
push
jns
int
xor
push
dec
popf
popf
mov
push
cmp
cmpb
lock
inc
clc
adc
push
cmc
mov
insb
pop
push
dec
mov
pop
push
cmp
inc
subb
data16
nop
hlt
mov
jnp
push
into
out
push
loope
shrl
dec
xor
inc
lock
sarb
clc
ret
dec
test
push
add
lret
push
sub
outsl
push
xor
push
mov
dec
inc
sti
and
add
dec
not
jl
mov
mov
negb
rorb
rorb
pusha
jb
inc
xorb
cmpsb
lahf
mov
jmp
mov
adc
lret
iret
push
push
ljmp
push
imul
inc
add
push
dec
popa
jmp
subb
adc
repnz
test
out
rorl
dec
in
xorl
cmp
jo
mov
test
jnp
sub
mov
movsl
mov
ret
xchg
insl
cmc
mov
and
sbb
push
or
jle
add
aam
inc
loopne
sub
xor
jmp
popa
jo
dec
leave
adc
ret
sbb
sub
ret
sbb
sub
in
add
push
sub
inc
sbb
loopne
rcl
mov
xchg
jge
mov
imul
cwtl
nop
aaa
lods
mov
mov
push
inc
pop
or
orb
mov
push
xor
mov
ss
cmp
mov
pushl
sub
ds
mov
or
xchg
inc
inc
pop
push
dec
scas
rol
or
push
cmp
andl
xchg
inc
in
sbb
jnp
mov
mov
aaa
lods
pop
loope
pop
inc
adc
xchg
lcall
pusha
push
sbb
push
push
cmpb
add
cmp
aas
cmp
fnstcw
scas
pop
sti
popa
push
lods
pop
loop
adc
arpl
mov
pop
rorb
popf
les
out
or
movb
lods
addr16
rcll
or
inc
out
mov
hlt
or
fildl
sbb
divb
imul
jno
add
std
sarb
data16
rcr
pop
xor
jne
or
jne
mov
push
mov
xor
mov
mov
ljmp
ror
insb
popf
xor
push
pop
lahf
ja
lock
cmp
out
sbb
xchg
add
mov
lret
fsubrs
sbb
imul
daa
insl
repnz
cld
dec
jnp
add
push
popa
inc
add
mov
dec
add
pop
ficompl
xchg
rorb
push
loope
fistpll
push
push
xchg
push
inc
sar
inc
mov
jge
push
adc
pop
or
xor
sarb
sub
mov
out
outsb
mov
push
push
cmp
fisubrl
sub
pop
test
mov
sbb
push
xor
outsl
jp
or
jbe
mov
push
sbb
sbb
scas
lcall
inc
adc
mov
out
pusha
das
aam
pop
mov
jg
and
loope
or
xchg
xor
sbbl
jnp
insb
in
rcll
adc
push
jmp
and
pop
clc
mov
adc
fisubl
jl
cmp
or
imul
pop
sub
and
repz
jo
adc
or
cld
xchg
jle
sar
xor
dec
dec
adcb
andl
mov
xchg
in
sarb
sbb
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
bound
fs
subb
and
inc
mov
adc
adc
jle
pusha
cwtl
lock
cmp
je
xor
in
push
or
cmp
loop
fadds
mov
xor
fsubs
xor
shlb
sbb
push
sarb
mov
inc
push
cmp
push
mov
or
push
cmp
fdivrl
sarb
mov
mov
ret
fnstcw
push
push
jae
pop
imul
sbb
inc
aas
inc
ja
push
cmc
push
lret
cmp
xor
and
sbb
jns
dec
dec
rorl
stos
or
vpsubb
and
cmp
jne
and
or
sub
inc
loopne
pop
or
outsl
mov
orb
mov
in
push
test
xchg
add
int3
add
dec
cs
or
lods
rcll
sbb
rolb
rorl
sbbl
pop
sbb
mov
in
imul
arpl
add
loop
add
sub
js
cwtl
in
mov
aam
sbb
push
jb
sub
lods
mov
sub
xchg
jle
add
adc
and
cmpsb
sbb
cmpsb
imul
push
pusha
fs
cmpsb
imul
add
lds
fsubr
mov
cmpb
xchg
or
andl
test
pop
subl
popf
cmp
jmp
mov
lcall
jl
xorb
xchg
imul
mov
add
loopne
nop
in
mov
ja
jle
movb
sbb
or
pushl
dec
or
orb
inc
jl
js
orb
jo
or
orb
pusha
xchg
or
adcb
sub
jp
add
outsl
or
xor
inc
mov
pshufw
sbb
dec
add
push
pop
mov
sbb
adc
cmp
inc
and
mov
inc
jl
cmp
and
lods
xor
pop
adc
dec
or
sbb
mov
mov
mov
sarb
inc
cli
lea
insb
and
jbe
push
xchg
xchg
push
add
inc
sbb
dec
data16
test
lock
mov
ret
jb
adc
les
loopne
push
push
mov
mov
cs
jl
add
testl
repz
push
add
fwait
push
push
test
dec
and
inc
sub
sbb
and
test
and
and
add
cmp
push
or
fwait
out
shlb
xor
xor
fucomi
mov
sbb
mov
bound
jne
mov
and
daa
jo
jnp
inc
dec
adc
imul
inc
pop
dec
test
aas
jmp
and
xchg
add
adc
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
lds
inc
xchg
sub
mov
add
mov
stc
push
jne
mov
xchg
mov
pop
cvtpi2ps
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
mov
cmc
add
xchg
cli
sahf
loopne
movsb
into
js
push
and
daa
xchg
lock
or
mov
xchg
sbb
ficompl
sbb
into
cmp
clc
lods
ds
add
add
les
push
popf
lock
jbe
push
mov
push
mov
jo
cli
out
fidivrs
pusha
push
adc
mov
hlt
dec
fnstenv
imul
pop
addb
mov
cmp
cli
mov
push
adc
push
adc
xchg
sbbl
fsubl
inc
add
sbb
pop
xor
popa
aaa
inc
leave
xlat
sbb
and
adc
fmul
call
xlat
sbb
push
sbbb
inc
push
mov
adc
mov
dec
jb
dec
aaa
loopne
sbb
lea
add
stos
bound
loopne
jo
pushl
and
mov
adc
xor
int3
lock
hlt
mov
and
inc
lock
cmpl
add
sti
mov
pcmpgtw
jae
orl
ror
and
icebp
or
out
movsb
xor
shll
pop
pop
lds
lcall
or
pushf
cmp
loope
mov
cli
je
popf
add
loop
enter
jo
xor
jle
push
cmp
lea
push
icebp
push
insb
sbb
sti
push
sub
inc
and
jmp
push
jne
sbb
roll
or
push
insb
pop
or
jnp
and
cld
nop
in
cwtl
mov
mov
push
cmpsb
cmpsl
clc
dec
jmp
adc
push
push
pop
in
adc
cmp
and
adc
sbb
jnp
movswl
in
push
mov
mov
ret
jecxz
nop
pop
lods
sarb
loopne
sub
xor
cmp
xor
cmp
inc
add
mov
and
pop
loopne
in
xchg
mov
test
xor
xchg
dec
scas
xor
fs
xor
sbbl
test
pop
mov
sbb
jbe
jge
dec
fldt
call
push
adcb
in
xchg
test
fimull
sahf
push
sbb
jns
mov
insb
pop
push
add
jne
roll
movsb
testb
mov
mov
call
mov
imul
push
aas
jne
outsb
mov
pop
out
xchg
mov
mov
pop
pop
cmp
pop
xchg
mov
cwtl
fidivrs
shlb
sub
fimuls
mov
je
sbb
jle
cmp
repz
push
and
dec
push
lea
mov
cwtl
push
out
add
add
lea
or
jno
dec
push
or
push
lret
add
sbb
xchg
dec
cmp
lock
fcoms
jo
mov
loopne
jno
inc
popa
mov
push
push
add
push
iret
sbb
fs
addr16
and
add
sub
nop
mov
mov
insb
mov
imul
jo
fdiv
loope
enter
mov
aam
hlt
add
or
sbb
inc
adc
mov
xor
add
repz
pusha
mov
mov
cmp
lcall
lods
aas
or
ljmp
cltd
std
push
ret
jge
int3
mov
stos
imull
jb
ds
andl
lretw
jbe
push
movsb
mov
mov
rep
push
jmp
push
nop
addl
and
pop
cmp
dec
pusha
xor
or
adc
dec
movl
mov
sahf
out
sarb
out
xor
shrb
and
adc
mov
daa
and
mov
and
insb
push
cli
sub
loope
cmp
lcall
cltd
or
js
push
push
push
push
ja
pop
mov
cmp
adc
fiadds
mov
mov
adc
js
cmpl
insl
lret
push
fsubs
pop
xchg
aad
push
ficoms
push
dec
mov
push
ret
sub
pop
testl
or
mov
lret
rcrb
adc
in
inc
out
add
xor
xor
dec
loopne
sbb
xor
mov
movsl
add
jbe
sub
jl
mov
sbb
mov
sbb
and
clc
ret
subb
push
adc
sbb
mov
pop
add
push
xor
and
xor
add
out
or
jmp
xor
adc
out
sbb
push
cmp
and
mov
stos
sbb
cmp
repnz
push
int
fs
sub
pop
test
jne
mov
sub
mov
and
subl
divl
sub
lcall
scas
iret
test
adc
orl
cmp
jne
mov
xchg
jp
test
push
aam
cmp
mov
shlb
jge
mov
and
jmp
or
inc
push
or
mov
and
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
je
movb
shll
shlb
lret
push
out
jo
or
cmp
push
outsb
dec
rolb
out
push
sub
add
jp
push
je
sar
add
or
cmp
push
and
mov
or
xor
adc
add
xor
and
pop
pop
cmp
shrb
jge
cmp
push
imul
or
test
push
pop
dec
xor
call
or
add
add
jo
add
push
push
xor
cs
pop
ret
mov
jbe
aad
xchg
push
xor
pusha
in
test
push
or
or
mov
push
jbe
pop
lcall
sub
pushf
adc
int3
add
push
rclb
inc
sbb
mov
pop
jmp
add
sbb
or
jnp
xor
cwtl
xchg
add
repz
push
cwtl
ss
inc
xor
cmp
lcall
inc
push
sbb
jg
add
push
or
cmp
mov
mov
dec
adc
js
mov
les
cmpsb
cmp
push
inc
xor
shll
add
data16
and
test
cmp
ss
and
inc
push
dec
pop
jo
cmp
test
add
addb
inc
in
and
mull
sbb
pop
push
je,pn
mov
cmc
js
aas
pop
dec
sbb
and
pushl
mov
rcr
mov
pop
add
push
subb
jge
fmull
notl
out
push
inc
xor
jne
and
test
lea
or
pop
pop
mov
inc
negb
fwait
scas
sub
mov
jl
andl
mov
xchg
mov
enter
pop
jg
add
imul
cltd
les
xchg
add
jae
leave
and
sahf
aam
or
in
mov
repnz
jo
push
sub
lea
or
jo
and
ret
cmpsl
shr
push
fcoml
jbe
inc
mov
lods
sub
hlt
mov
adc
inc
mov
cmp
sbb
idivl
cmp
inc
push
ss
push
add
jno
xchg
pop
dec
jl
and
jl
sub
xor
out
sub
sub
ja
shll
pop
jmp
pop
fiadds
adc
mov
push
pop
bound
xor
sub
push
adc
add
sub
cld
or
add
aad
sub
nop
or
jae
pop
add
test
mov
fistl
je
and
inc
sub
bound
cmp
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
neg
dec
clc
or
cmp
jl
loope
xor
xlat
lds
lret
or
idivb
hlt
dec
add
add
push
loopne
jbe
fisttps
aam
out
fiadds
push
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
pop
pop
mov
leave
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
imul
popa
fs
in
movsl
xor
jo
push
push
pop
and
js
jnp
or
xlat
inc
and
or
decb
cs
push
test
js
xchg
dec
cs
or
or
mov
pop
or
ds
mov
stos
and
test
mov
xor
mov
mov
mov
lock
mov
clc
std
xor
neg
adc
push
ret
popf
outsb
fstpt
inc
or
mov
pop
insl
mov
xlat
dec
fwait
lea
push
push
aas
push
ficoms
cwtl
imul
cltd
idivl
pop
push
push
push
push
orb
mov
mov
and
out
push
in
add
and
popf
add
push
ret
mov
js
leave
mov
mov
or
push
pusha
mov
add
addr16
adc
push
out
xor
and
dec
inc
adc
sub
xor
and
xor
mov
rorb
sbb
imul
or
adc
shlb
add
or
jmp
inc
adc
popa
dec
daa
js
push
adc
insb
data16
cmp
insl
and
adc
add
andl
ret
or
xor
mov
nop
cmp
adc
mov
int
fucomp
push
imul
add
sbb
sub
pop
orl
xor
fcoml
cli
xchg
or
push
jo
call
push
inc
mov
jp
xchg
sbb
push
or
jae
test
testb
pop
cwtl
xchg
lods
fcomp
mov
shl
orl
dec
in
sub
cwtl
arpl
cmp
data16
notl
mov
imul
dec
insb
add
push
hlt
shr
ret
add
cmp
cmpsl
shlb
mov
imul
add
dec
pop
arpl
inc
in
mov
push
loopne
jne
loope
cli
mov
xchg
cmp
loope
add
sarb
push
ficoml
ds
adcb
push
movsb
mov
add
mov
rcl
adc
push
and
sbb
loope
cmp
mov
imul
int3
and
cmp
push
cld
rol
push
movsb
push
add
dec
pop
movsl
jge
jg,pt
xchg
call
call
cmpl
out
push
loopne
es
xchg
adc
cmp
sbb
fiadds
jo
sbb
or
pusha
insb
std
jg
insb
mov
mov
sbb
repz
div
jno
aad
es
stc
pop
insl
out
in
fiadds
fsubs
into
xchg
ss
sbb
ja
add
inc
mov
arpl
sub
push
pop
adc
inc
mov
add
cmp
sub
in
dec
sbb
pop
xchg
lret
push
jnp
jno
int
dec
add
xor
insl
dec
lods
push
insl
mov
mov
jne
das
push
or
bsf
push
sbb
test
jb
arpl
pop
mov
push
sub
add
mov
adc
mov
adc
cld
loopne
adc
or
lds
mov
test
insb
insb
inc
xchg
or
dec
mov
adc
popl
push
pop
xor
push
add
pushl
dec
adc
pop
inc
test
mov
inc
xor
sbbb
xor
je
dec
cmp
cmpsl
and
sbb
add
mov
jnp
inc
or
mov
push
mov
lret
lcall
push
jne
or
jle
movsb
push
pop
mov
fs
lea
push
inc
mov
add
adc
movb
or
jns
jbe
lds
leave
add
cmpsl
loopne
sub
fs
mov
loope
sub
mov
add
jo
mov
jb
sbb
sub
fisubrs
adc
cmp
jmp
dec
sbb
and
loopne
or
or
or
and
mov
jno
imul
shlb
or
add
mulb
nop
mov
fwait
push
add
sbb
xchg
lea
cmpsl
in
xchg
sub
add
and
aad
in
lea
sub
or
jp
sbb
jo
adc
push
test
ret
lock
and
lcall
fs
cwtl
push
dec
xor
mov
shl
arpl
add
and
incl
inc
dec
pop
inc
hlt
aas
pusha
push
cmp
push
pop
xchg
mov
ja
mov
cwtl
lods
fiaddl
fs
and
push
pop
or
mov
sub
push
lock
repnz
pop
testl
movsb
je
jg
jns
push
push
es
fsubrp
inc
and
add
mov
fldl
dec
or
adc
jmp
lods
pop
dec
pop
leave
pop
xchg
or
adc
fcoml
dec
pop
aaa
sbb
mov
sub
add
and
ds
dec
or
insl
push
add
into
xor
inc
cwtl
add
jl
push
pushf
mov
mov
jl
popa
jbe
jmp
sub
cwtl
iret
xchg
lock
pop
loopne
add
testb
jle
xor
dec
or
ret
jo
dec
add
dec
lcall
and
andb
insl
jne
test
adc
imul
adc
add
push
jae
push
push
mov
push
and
jae
movsb
es
js
movl
gs
push
push
jl
fwait
dec
lock
dec
pop
ss
push
xor
mov
add
xchg
push
pop
jecxz
cmc
mov
cmp
mov
call
cld
jo
in
cmp
shrb
andl
push
loopne
mov
and
jo
xchg
lret
mov
dec
sub
and
pop
loope
dec
sub
jnp
shll
clc
ds
subl
dec
push
mov
cmp
shlb
add
add
lret
mov
xchg
mov
and
aad
lds
psrlw
pop
fiaddl
imul
mov
mov
push
mov
push
and
lock
mov
xchg
push
adc
ficompl
in
daa
loopne
loop
push
adcb
sbb
cmp
test
push
push
cmp
js
inc
fcomps
xchg
adc
cmp
cmp
xchg
mov
or
test
addl
call
or
inc
shl
jg
fisttps
ret
mov
je
adc
mov
dec
imul
mov
push
push
adc
push
notl
add
push
cmpsb
jne
ret
mov
nop
dec
sbb
sti
dec
ja
je
or
je
or
sub
cmpl
scas
or
stos
jns
aad
imulb
mov
or
add
cli
js
jne
sahf
and
adc
jecxz
and
jmp
cmp
adc
bound
or
cmp
inc
add
mov
sub
push
mov
add
pop
and
inc
pusha
dec
out
push
ds
or
mov
clc
cmp
adc
push
jecxz
xchg
xchg
jae
or
rorl
mov
adc
inc
sahf
jl
or
stos
cmpsb
or
add
inc
rol
clc
cmp
adc
jg
mov
push
push
sbb
adc
leave
pusha
daa
in
test
jbe
insb
test
loopne
mov
and
push
aad
xor
test
mov
ljmp
pop
inc
ret
call
dec
inc
dec
je
sub
push
lds
or
mulb
add
cld
inc
lods
and
sbb
scas
in
push
fs
ljmp
clc
enter
or
ret
push
adc
dec
pop
and
sahf
insb
sub
ds
in
insl
inc
xchg
test
cmp
pop
rorb
xor
scas
movsl
pop
xor
and
push
sub
and
and
xchg
cmp
dec
lea
sub
jne
push
or
gs
sarl
mov
ss
inc
lds
mov
xchg
adc
sub
fsubl
xor
rcrb
out
je
push
loope
inc
and
movsl
xlat
adc
lret
add
or
inc
dec
jg
push
add
pop
rolb
fs
push
pop
push
mov
test
push
add
icebp
jb
cli
jge
push
or
dec
mov
arpl
pop
push
imul
xor
mov
adc
les
xchg
add
and
inc
xchg
cmpl
aas
js
pop
inc
or
nop
add
add
add
add
xchg
pop
shlb
pop
inc
add
in
lcall
mov
in
ror
pop
mov
mov
jecxz
sub
inc
or
inc
gs
lods
mov
cmp
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
fisttps
inc
or
negb
or
sbb
cmpsl
fs
jns
ret
aas
add
loop
mov
cmp
test
loop
jp
and
sbb
in
xchg
push
xchg
dec
adc
ret
in
inc
sbb
mov
ret
add
lods
or
sbb
sbb
fidivrl
push
inc
mov
bound
adc
mov
out
adc
jmp
cmp
mov
or
ret
lahf
adcb
fidivl
xor
jmp
push
movsb
xor
ss
ret
dec
jl
mov
mov
xor
js
inc
sub
sarb
inc
loope
mov
loopne
and
jb
data16
dec
mov
xor
inc
or
call
outsb
sbbb
fcoml
and
jmp
or
idivb
addb
adc
stos
inc
pop
out
loopne
pusha
mov
arpl
push
jb
jns
dec
or
jb
sub
in
dec
je
daa
sbb
lea
pop
mov
or
ret
jle
pop
movsb
inc
repz
sub
mov
sub
ret
data16
add
pop
popf
sbb
sbb
push
push
mov
push
and
adc
add
sub
nop
sub
inc
push
or
mov
sbb
inc
pop
test
ret
mov
xlat
mov
bound
cmp
jae
xchg
mov
ds
popa
pop
es
inc
fsts
ret
je
in
sub
shll
mov
cwtl
push
mov
hlt
adc
jle
int
push
fcompl
inc
leave
je
rcl
sub
lret
fcom
popa
faddl
sahf
cwtl
in
add
mov
or
add
xor
sub
xor
xor
adc
pop
aaa
or
shl
in
mov
mov
clc
cwtl
incb
stos
jnp
sbb
lret
or
xchg
movsb
pop
jo
imul
or
cmp
sbb
add
mov
fimuls
fs
fcoml
mov
add
out
sbb
test
and
mov
mov
pop
rorl
jl
push
push
or
push
and
arpl
and
add
movsb
inc
subb
pop
fldl
int3
out
add
push
mov
sub
ljmp
popa
ficoml
adc
pop
pusha
daa
inc
jne
cmpsl
add
xchg
sub
pop
adc
shlb
push
pop
loope
fs
push
sub
cmp
sub
into
clc
mov
and
xor
sbb
fisubs
xchg
or
sub
into
add
das
adc
cmp
cmpsl
xor
pop
inc
add
or
pop
jne
stos
imul
test
lods
pop
mov
leave
mov
lea
mov
sbb
test
in
or
cs
cmp
push
js
cmp
in
je
jmp
adc
fwait
xchg
push
cs
jge
sar
sub
or
jl
leave
inc
inc
loope
sbb
xchg
loopne
out
ret
out
push
sbb
popa
pusha
out
push
jmp
std
and
cmpsb
sub
iret
inc
lods
jmp
sbb
mov
xorl
out
sub
pushf
imul
cmp
sbb
inc
push
jg
xchg
add
leave
stos
andb
jl
jb
add
shll
in
xor
ss
inc
adc
push
cmp
push
js
sti
popa
and
divb
pop
push
ret
inc
sub
into
jle
loope
add
jb
adc
mov
adc
dec
xlat
mov
sti
mov
sbb
adc
xchg
mov
fiadds
inc
repz
add
pop
xchg
push
clc
xchg
xor
mov
xor
add
xor
fs
mov
outsl
jne
in
push
test
lods
xchg
out
call
or
mov
xchg
push
sbb
mov
arpl
or
clts
xor
xchg
mov
sub
lea
mov
pop
mov
int
in
jne
leave
outsb
addr16
cmp
adc
mov
repz
lock
addr16
test
jecxz
dec
cmpsl
arpl
jmp
pop
or
fcomp
add
and
cmp
sbb
jge
in
add
jle
cmp
lock
add
outsb
dec
out
test
test
and
or
les
pop
sub
repnz
sbb
daa
subb
mov
push
mov
adc
je
cmp
cli
loopne
je
loopne
push
mov
popf
cmp
push
dec
and
loopne
inc
mov
inc
loopne
add
or
and
pop
mov
imul
std
push
inc
dec
dec
mov
sub
je
stos
je
cmp
mov
add
sahf
or
inc
jno
sarb
ss
sbb
fisubs
cld
imul
inc
push
aaa
arpl
in
jmp
adc
les
or
out
add
add
inc
cmp
loop
lea
push
cmp
cmc
push
enter
sub
roll
jle
sub
pop
data16
rcrb
mov
adc
jmp
push
xor
ds
inc
mov
inc
or
jo
pop
ror
cli
jnp
out
cmp
outsb
jnp
js
add
pop
enter
xchg
inc
outsb
pop
adc
stos
cltd
push
jb
orl
ret
and
xor
sub
adc
ss
lret
adc
or
sub
or
je
dec
rolb
push
imul
push
jne
jge
xor
enter
sti
imul
enter
mov
and
sub
or
and
xlat
sub
sbbb
sub
jmp
xchg
xor
xchg
call
andb
nop
push
adc
insb
data16
push
imul
rorb
jae
xor
insb
cmp
adc
xor
ror
insb
or
cmp
push
insb
or
mov
sbb
int
push
xchg
pop
ja
pop
gs
xor
and
jmp
push
mov
push
xor
insl
dec
jmp
add
add
int
dec
xchg
mov
nop
insl
push
shrl
xor
dec
bnd
addl
notl
sahf
out
insb
cmpsl
in
es
push
subl
incl
call
les
fcoml
dec
add
push
adc
or
cmp
adc
aaa
inc
mov
cmp
push
lret
pop
aaa
and
mov
jecxz
pop
mov
push
jg
pop
mov
sub
inc
sub
andb
pop
and
xor
add
fsubl
data16
adc
mov
sbb
bound
xor
or
fadds
insl
or
pop
sahf
clc
ss
iret
int3
mov
pop
push
scas
dec
in
lock
inc
and
ret
inc
cmp
shrb
fsubrl
jo
xchg
pop
adc
das
iret
js
mov
je
cltd
fdivl
nop
in
iret
in
sbb
ret
push
mov
cld
xor
inc
push
xchg
call
mov
fwait
or
dec
pop
in
push
inc
mov
subl
sbb
mov
sbb
mov
sub
sbb
leave
imul
out
pop
mov
loopne
loopne
add
rol
xor
inc
sub
rcrl
push
mov
fidivs
stos
mov
incl
jne
lock
iret
cmc
add
pop
pop
mov
icebp
xchg
outsb
sbb
push
sbb
popf
add
sub
or
insl
push
roll
popf
bound
or
inc
push
inc
push
int3
or
inc
sbb
lmsw
sbb
sub
fs
mov
sti
xorb
adc
mov
adc
dec
in
pop
lds
daa
dec
hlt
add
sbb
pop
adc
clc
add
ds
call
outsb
fisubl
repz
mov
add
repz
and
loopne
xlat
insl
js
cmpsl
dec
mov
sbb
push
lret
call
loopne
adcb
mov
clc
incl
leave
repz
xor
add
shlb
cmp
arpl
mov
jb
xorb
sbb
sbb
mov
push
repnz
test
adc
aaa
add
dec
or
das
mov
rcl
stc
add
test
sbb
add
pop
jl
jne
push
sub
jo
pop
xchg
addl
fadd
add
push
inc
dec
add
add
push
adc
mov
into
rcr
jl
pop
sub
jbe
dec
and
push
pop
enter
cwtl
or
jmp
adc
sbb
jae
fsubr
or
les
mov
xchg
mov
fsubrs
sub
mov
ror
palignr
dec
enter
xchg
cmp
xor
mov
jo
push
dec
push
insl
fchs
push
cltd
jns
lret
push
add
clc
xor
adc
jge
adc
jo
inc
decl
and
jl
in
inc
and
inc
cmpsl
std
push
shl
bswap
push
addl
movntps
frstor
imul
lret
cmp
xchg
and
mov
outsl
pop
or
sti
popa
mov
mov
pop
push
sub
pop
xor
jp
rcrl
pop
push
in
cmp
or
push
xor
pop
push
or
mov
mov
je
jns
ljmp
jbe
shll
inc
jle
inc
push
leave
push
xor
inc
pop
xor
movsl
cmp
imul
sub
jno
adc
movb
test
inc
lock
dec
adc
add
dec
mov
sar
mull
mov
or
sbb
mov
push
or
cwtl
push
shr
push
push
addr16
jne
mov
adcl
cmp
jbe
mov
out
push
cmp
push
cmp
push
pop
pop
dec
lea
add
aas
xor
test
mov
nop
or
xchg
or
aam
ljmp
or
stos
inc
shll
enter
aad
repnz
adc
pop
adc
and
inc
repz
int3
andb
sti
xor
imul
inc
mov
mov
das
push
adc
push
mov
cld
lret
or
and
adcl
sbb
inc
pop
xchg
jnp
sbb
add
sub
mov
mov
fsubr
inc
and
inc
sbb
mov
xchg
jb
adc
mov
ret
inc
cmp
mov
rcrl
sbb
inc
lss
inc
shlb
pop
add
jmp
inc
adc
jnp
arpl
pop
adc
inc
push
push
xor
mov
cld
je
je
mov
call
pop
icebp
or
nop
jecxz
notb
cmpsl
mov
aam
data16
and
je
nop
repnz
insb
xchg
loopne
sub
or
outsb
jmp
ja
clc
hlt
sub
push
and
add
inc
sbb
push
mov
iret
cmp
test
mov
or
rolb
int3
mov
sbb
adc
nop
nop
dec
push
and
pusha
cmpsb
pusha
mov
adc
add
mov
sbbb
andl
cmp
push
imul
mov
rcrb
dec
imul
push
and
and
loopne
mov
xchg
and
lods
fcoms
mov
leave
fwait
mov
or
adc
out
adc
mov
add
or
mov
xsha1
cmpsb
or
cmp
movsl
sahf
inc
call
rol
gs
fisubrs
arpl
stos
adc
mov
rolb
test
andb
out
pop
mov
je
sub
ret
pop
mov
andl
mov
mov
or
mov
scas
out
ficoms
lret
push
pop
or
movsb
rcl
pop
push
fcoml
in
call
xchg
shll
enter
daa
inc
nop
pusha
pop
jmp
or
fs
rolb
xor
add
adc
cmp
mov
or
dec
stos
xchg
imul
clc
add
sub
sbb
stos
loope
andb
mov
mov
sbb
aaa
xor
adc
xchg
sbb
inc
sbbb
sbb
sub
dec
les
pusha
add
jae
mov
mov
movsl
mov
mov
pushl
rclb
repz
or
icebp
xorb
inc
pop
movsb
das
push
hlt
pop
xor
mov
imul
or
or
sub
sub
je
and
push
or
daa
std
cmp
mov
xor
push
push
es
or
dec
push
push
fisttpll
andl
add
fildl
pop
xchg
adc
rol
adc
and
add
roll
sub
fcmove
push
xchg
inc
adc
clc
and
mov
jecxz
enter
roll
xchg
in
xor
ja
pop
push
clc
rcll
mov
testb
sbbl
sti
loop
pop
cld
sub
pop
jnp
insb
inc
addr16
repz
and
xor
sub
lea
xorl
pop
inc
inc
cmp
adc
shlb
ret
lods
in
or
jle
cmp
cmpsb
cmp
stos
pop
lods
add
rcll
leave
nop
sbb
cmp
js
xor
or
adc
lsl
inc
xor
xchg
and
pop
cltd
inc
sbb
sub
add
mov
jge
push
inc
push
sti
jl
fstps
mov
test
outsl
dec
sbb
ss
outsl
mov
or
loopne
arpl
je
jae
mov
cmp
out
push
xor
fistps
ficomps
shr
not
mov
call
cmp
mov
in
movsl
xor
in
xor
push
lds
xor
addl
inc
int
dec
shlb
int3
push
dec
pop
push
loopne
outsl
jge
and
jo
lods
jl
stc
or
xor
jno
sub
lret
iret
mov
or
mov
pushf
dec
in
xor
sbb
and
jecxz
mov
fisubrl
pop
inc
loopne
add
jg
or
inc
add
xchg
push
cmp
dec
xchg
inc
jae
add
js
xchg
add
decl
push
xorb
jno
jne
in
xorl
push
scas
mov
push
xor
mov
mov
sbb
ja
ss
les
mov
xlat
xchg
movl
inc
cwtl
pop
or
cwtl
lcall
inc
push
pop
fwait
roll
addr16
jmp
inc
jb
sub
leave
or
ss
mov
sbb
test
xchg
push
add
test
add
sub
hlt
shlb
inc
imul
dec
arpl
sbb
mov
xchg
js
dec
pusha
jecxz
sub
and
iret
stos
lods
jg
lcall
mov
dec
jb
mov
xchg
push
add
inc
ljmp
mov
dec
lahf
or
mov
or
bound
push
je
lret
jbe
fisttpll
shlb
xor
je
pop
cmp
inc
xchg
sub
cmp
dec
adc
outsb
popa
adc
cltd
mov
inc
aam
lea
sti
rep
repz
icebp
fiadds
cs
sbb
jmp
sub
jae
xchg
shlb
add
enter
inc
sbb
aad
aaa
scas
andl
sub
jne
xchg
out
xchg
icebp
push
push
inc
push
push
fdivr
popf
push
and
push
mov
xorl
dec
adc
xchg
mov
inc
pusha
sub
mov
rcrl
lea
sbb
xor
roll
jnp
push
inc
addb
popl
jle
insl
lret
sbb
fcmovne
sbb
sub
push
outsb
sub
and
out
xor
hlt
xchg
mov
or
arpl
mov
in
movsb
inc
scas
push
iret
test
mov
inc
inc
or
das
pop
jae
out
jnp
pop
adc
push
push
xor
adc
add
xchg
in
out
lret
add
and
adcl
add
push
push
lret
int
add
lock
push
xor
or
push
mov
lret
cmpsb
and
cmp
mov
mov
mov
cmp
int
push
push
push
dec
xchg
push
mov
shlb
cmp
mov
adc
cmp
cmp
gs
add
lock
shll
cmp
dec
sbb
sbb
fstps
lock
sarb
dec
jne
outsb
loopne
mov
or
lods
dec
mov
mov
add
push
loope
sbb
les
jno
insl
repnz
sahf
add
push
or
or
mov
shll
arpl
dec
rclb
dec
jge
add
sbb
lea
rorl
pushf
add
mov
inc
clc
adc
dec
adc
add
cmp
into
and
push
add
cmp
mov
add
adc
adc
cld
cmpsb
nop
push
pop
xlat
sbb
xchg
push
mov
or
xor
xchg
xlat
unpckhps
js
rcr
and
aam
or
cmp
fstl
inc
cmp
rclb
inc
insb
fcompl
add
je
sbb
push
push
or
adc
xor
sub
sar
insb
mov
or
add
rcrb
sbb
lock
sub
dec
jb
mov
inc
xor
sub
jecxz
xor
xchg
hlt
in
jbe
lea
jb
cmp
pop
mov
or
sbb
jnp
fisubrs
arpl
inc
or
ret
sub
add
xchg
mov
cmpl
mov
es
imul
dec
je
cmp
or
dec
add
lock
popl
shl
pop
and
pop
add
stos
adc
fistps
or
xorb
xchg
xchg
notb
outsb
aam
lds
std
imul
or
shlb
test
xor
mov
mov
or
adc
pop
sbb
scas
imul
xchg
push
test
inc
inc
pop
shrl
sbb
push
pop
xchg
mov
sub
enter
add
xchg
xchg
add
cmp
sbb
jge
pop
or
inc
jmp
dec
imull
mov
orl
jne
mov
dec
test
fsubrs
incb
mov
adc
jp
cmp
inc
mov
add
jb
jae
rorb
push
ja
push
push
push
jmp
cmpb
nop
pop
jae
or
add
pop
out
mov
jo
ret
and
xchg
stos
icebp
js
mov
push
orl
add
sbb
inc
sub
jb
and
sbb
popa
mov
dec
pop
xchg
mov
out
pop
mov
out
sub
rep
inc
je
push
inc
mov
mov
push
pop
dec
xorb
lods
in
xchg
stos
popl
sbb
xor
xchg
lea
mov
jg
and
fsin
bound
fs
push
enter
sbbb
add
push
mov
inc
push
dec
mov
cmp
push
cmp
add
and
ja
adc
sub
sbb
insl
jb
adc
or
mov
test
lahf
and
outsb
fistpl
sbb
fwait
lods
dec
mov
scas
jae
jmp
mov
sbb
cmp
xchg
lret
add
je
sti
js
and
inc
outsb
xlat
cmp
aas
or
dec
push
dec
push
pop
xchg
push
mov
sahf
jb
jne
mov
fstpl
xor
dec
je
and
je
pop
mov
dec
pop
or
mov
bound
pusha
test
call
jne
je
and
pop
add
pop
adc
push
xor
add
push
icebp
push
dec
pop
and
inc
jae
rcr
ja
push
and
imul
nop
add
adc
xor
in
add
and
enter
jo
in
add
or
sub
daa
mov
add
nop
sub
sub
mov
in
cs
int3
jae
call
adc
cmp
pop
nop
sub
cld
cmp
inc
push
push
xor
shlb
sbb
xchg
negb
or
xor
mov
mov
sub
shl
sub
dec
fmulp
stc
fs
or
ret
or
pusha
adc
pop
add
or
mov
jnp
adc
sbb
loope
arpl
daa
mov
sbb
sbb
mov
adcl
dec
mov
pop
mov
xchg
fbld
lock
mov
shrl
mov
fnsave
mov
gs
pop
ja
mov
push
mov
jo
dec
mov
xchg
jp
fisubl
sub
xlat
push
daa
rclb
call
jle
mov
pop
mov
mov
xchg
jge
mov
lcall
fimuls
es
sub
sarb
out
shr
aam
cmp
pushf
sub
xor
fmuls
dec
fbstp
pop
scas
xor
fdecstp
xchg
push
mov
popfw
ret
mov
inc
aas
sbb
push
jp
mov
orb
sarb
xor
andl
pop
aas
sbb
inc
adc
dec
sub
push
mov
pop
dec
sub
add
xchg
ds
dec
fwait
pop
int
cmp
in
mov
lock
sbb
sbb
adc
sbb
subb
jne
lock
sub
icebp
stos
jg
sahf
mov
loopne
and
mov
and
pop
and
mov
shl
add
int
test
mov
ds
ja
push
push
mov
add
or
xor
pop
adc
mov
push
inc
icebp
mov
cmp
or
pop
adc
loope
add
push
add
enter
aas
and
mov
or
jbe
mov
jno
cmp
lcall
lods
push
daa
js
inc
add
push
pop
xor
cmp
pop
pop
jb
ja
cltd
push
adc
push
add
mov
mov
int
xchg
xchg
inc
pop
clc
outsb
loopne
adc
sbb
stos
lods
xor
or
sub
adc
fdivl
or
or
leave
lea
push
xlat
fisttpl
test
add
outsb
scas
je
in
jae
cmp
push
add
bound
imul
inc
inc
and
insl
push
mov
mov
push
clc
lock
dec
sbb
fdivl
addb
and
xor
add
ret
sbb
mov
or
add
aam
mov
jne
gs
into
aam
jns
iret
add
or
aam
mov
out
jge
xchg
xchg
push
cli
gs
sbb
arpl
push
or
faddl
sub
popf
inc
or
fadd
ret
xchg
pop
aam
inc
cmp
aad
pop
stos
call
jae
sbb
push
jmp
and
sub
or
jmp
adc
cmp
jge
dec
push
imul
xor
inc
dec
test
mov
ret
xchg
lods
push
cli
sub
push
dec
dec
push
fsubs
and
jl
xlat
jmp
push
and
outsl
lock
jnp
test
shrb
sbb
fcomps
loop
add
jb
incl
or
iret
push
cmp
jl
mov
xor
pop
hlt
adc
js
mov
test
jbe
jmp
adc
push
pop
incl
sbb
push
mov
jmp
adc
mov
imul
out
push
or
and
pop
sub
sbb
or
daa
aam
outsb
xchg
sbb
mov
mov
pop
mov
jb
dec
pop
fmuls
add
xchg
and
movlhps
sbbb
push
rolb
add
inc
adc
loopne
shlb
or
jo
in
jle
pop
int
inc
xchg
fmull
jnp
inc
add
xchg
pop
push
in
mov
cli
push
call
lea
push
call
sbb
mov
mov
jo
shl
or
sbb
divl
add
jb
push
outsb
inc
and
mov
or
aas
push
es
push
mov
or
or
rclb
mov
iret
rorl
in
add
rorb
fwait
out
nop
jmp
push
loopne
in
cmp
cmpb
xor
aad
mov
gs
pop
cwtl
popf
dec
xchg
ds
std
add
ret
std
xorl
or
lock
and
ret
push
nop
pop
sbb
xor
or
xor
js
ror
daa
loopne
sub
and
and
je
scas
fs
pop
dec
movsb
push
or
icebp
mov
fwait
shlb
pop
dec
movsl
fsubs
imul
cmpsb
fisubs
dec
push
lods
cmpsl
lea
xchg
stc
adc
ret
mov
sbb
sbb
or
imul
lods
mov
push
lcall
jo
dec
push
mov
or
adc
test
and
popa
cmovp
pop
xor
xchg
sbbl
adc
mov
mov
inc
es
addb
mov
aaa
loope
sub
negl
sbbl
sbb
pusha
loope
dec
enter
arpl
rorb
lock
xor
dec
push
sbb
out
adc
cwtl
fs
ret
gs
addr16
push
icebp
push
pusha
mov
sub
xchg
xorb
js
mov
shl
push
or
test
push
push
inc
rcl
jmp
xor
fs
dec
icebp
mov
scas
dec
adc
pop
outsl
fs
add
sub
stc
push
pusha
test
add
pusha
loop
sbb
in
jne
pop
lods
jo
das
and
xor
xchg
adc
dec
and
mov
sub
add
push
sub
sbb
mov
xor
adc
push
pop
lahf
cmp
adc
adc
jecxz
xchg
sbb
xchg
lds
push
push
cmpsb
pop
jo
push
mov
cmp
sbb
and
inc
rcrb
sub
push
push
lahf
push
add
mov
xchg
mov
inc
inc
push
mov
inc
mov
jnp
cmp
push
mov
inc
mov
adc
mov
mov
xor
insb
xor
adc
fmuls
scas
cmp
add
movb
cwtl
xchg
nop
push
js
pop
insl
mov
adc
fcoms
sbb
adc
adc
push
add
push
push
aam
test
aam
mov
and
dec
add
jb
or
clc
xchg
test
sbb
xor
or
fmul
cmp
xchg
sub
shrb
test
clc
rclb
push
push
inc
ret
mov
mov
mov
fwait
mov
and
mov
lock
arpl
xor
lcall
add
testb
inc
call
add
shlb
mov
repnz
and
pop
call
push
aad
jb
mov
mov
add
fadds
push
mov
ret
jnp
pop
pop
ss
mov
xchg
mov
add
sbb
and
mov
pop
loope
in
mov
adc
test
adc
std
mov
pop
xor
xchg
mov
sub
or
sbb
lea
out
mov
sbbb
js
push
testb
or
pop
mov
lea
fprem
add
cmp
inc
dec
mov
or
xor
in
adc
xchg
call
mov
pop
jle
and
aaa
sahf
jecxz
inc
or
in
loop
sub
push
add
movsb
clc
xorl
stos
xchg
mov
test
pop
fildl
and
insb
rolb
in
enter
mov
pusha
pop
hlt
lret
or
subl
add
mov
add
dec
enter
sarb
rolb
jo
or
add
inc
movsl
fnstcw
or
jp
clc
and
shrd
stc
bound
or
jmp
add
notb
mov
adc
cli
adc
test
or
sbb
jnp
arpl
nop
xchg
cwtl
pushf
add
or
pop
ljmp
mov
sub
mov
jp
jbe
cmp
jb
inc
mov
out
add
and
test
mov
inc
dec
test
in
push
mov
cltd
in
push
nop
into
loopne
rcrb
jp
xchg
pop
cmpb
cmp
mov
out
xchg
decb
jmp
cmp
cmp
movsb
sub
pop
pop
into
popf
mov
movsb
lea
data16
add
inc
cmp
call
xchg
mov
outsb
jge
xlat
xchg
mov
pop
aaa
inc
lock
adc
out
or
mov
push
jno
pop
mov
ret
mov
or
push
lret
xchg
sbb
lea
outsl
push
lock
dec
xor
adc
jmp
add
push
jno
xlat
in
push
jmp
pop
addr16
gs
push
push
scas
add
push
or
enter
sti
push
fists
jne
ret
repnz
sub
popa
xor
rorb
pop
fs
mov
xchg
mov
sub
mov
or
in
adc
sub
loope
inc
pop
xchg
push
jne
inc
add
mov
fistpll
mov
mov
jp
lods
or
push
test
adc
xor
push
or
lahf
mov
data16
popa
por
int
mov
mov
add
mov
jo
ret
push
push
push
mov
fildl
out
xlat
nop
push
std
call
adc
sbb
orl
push
je
rcll
aaa
xchg
int
adc
loopne
push
or
fldcw
cmp
loop
inc
sub
rcrb
sub
pop
andl
mov
mov
push
jo
cli
in
inc
sbb
ljmp
cmc
jnp
push
adc
xlat
jmp
std
xor
push
stos
es
add
ret
sub
sar
push
and
in
xlat
scas
jnp
jb
jns
daa
lods
or
mov
ljmp
test
sub
push
mov
inc
cmp
loop
xchg
rolb
mov
mulb
icebp
incl
push
sub
dec
sub
push
jl
dec
test
adc
and
or
or
scas
pop
pop
or
xchg
push
movsb
xor
movsl
mov
adc
add
or
dec
add
mov
cmp
xor
test
push
add
fsts
pop
push
mov
dec
cmp
xor
imul
push
mov
sbb
ret
out
and
in
das
lret
push
dec
pop
shlb
movsb
aas
rcll
add
jo
or
adc
mov
mov
pop
mov
fdivl
lea
clc
ss
xchg
cmp
inc
add
xor
mov
xchg
and
js
pop
sub
xchg
mov
out
inc
push
subl
pop
fnsave
add
loopne
test
sbb
xchg
bound
adc
std
pop
or
inc
test
call
decb
imul
inc
enter
into
xchg
mov
and
inc
out
fs
jmp
outsb
lock
es
loopne
loopne
adc
nop
pop
rol
pop
outsl
jno
mov
aam
mov
gs
push
cmp
imul
and
push
ret
cmp
inc
hlt
cmpsb
js
les
cmp
mov
sbb
mov
cld
nop
fsub
cmp
insb
jns
and
insl
std
inc
cmp
je
mov
adc
je
data16
movsl
das
adc
pushf
popf
and
cmc
jle
mov
mov
shl
cmp
jg
outsb
adc
inc
cmp
jnp
insl
mov
or
inc
sub
jge
dec
jns
mov
push
mov
jl
or
jp
outsb
and
and
pop
jne
jge
mov
iret
xor
pusha
sbb
fildl
jb
jmp
notb
jge
cmpsb
dec
cmp
xchg
dec
mov
mov
shlb
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
add
push
lock
out
iret
add
ret
test
or
stc
push
or
or
pop
xchg
push
je
js
mov
or
gs
mov
mov
cmp
push
xchg
push
push
pop
hlt
sub
andl
movsb
push
mov
call
insl
pop
in
mov
cmp
adc
push
fstpl
add
roll
adc
push
mov
pop
sahf
mov
sbb
inc
dec
add
mov
add
xchg
add
aam
sub
js
cmpsl
repnz
sub
cmpb
or
jbe
push
mov
out
shl
xlat
add
es
xchg
filds
mov
movsb
in
jns
negb
test
push
and
outsl
hlt
pop
push
fcomp
sbb
push
pop
sub
movsb
jl
push
push
sbb
testl
xchg
popa
aaa
and
adc
inc
pop
enter
jo
out
sahf
or
popa
jno
fwait
add
pop
xchg
pop
push
cmpsl
cmp
add
lods
dec
pop
adc
add
movsl
fmull
push
push
dec
cmp
loopne
xor
add
add
xchg
dec
mov
das
xor
jo
jl
adcb
rclb
rcrb
icebp
xchg
jnp
cmp
scas
or
cwtl
sub
pop
imul
test
in
pop
fldln2
popa
jle
inc
inc
lcall
and
pop
add
lds
ljmp
test
adc
and
fcmovbe
loope
test
inc
nop
push
subb
dec
test
fwait
adc
push
sbb
stos
push
nop
xlat
inc
add
sbb
cmp
xchg
dec
sub
mov
and
les
dec
dec
and
arpl
sbbl
mov
mov
add
sbb
mov
rcrb
add
push
cmpsl
fistl
aas
mov
test
or
adc
push
add
ret
jne
mov
sub
hlt
push
into
sub
adc
mov
fisubl
ss
inc
es
cmpsl
je
cld
add
ljmp
sbb
push
inc
cmp
incl
fdivs
sub
test
gs
pop
cmp
inc
sti
fnsave
sub
push
adc
mov
cmp
popf
sub
mov
add
sbb
mov
inc
ss
sbb
jecxz
jno
jno
push
jp
jo
xor
es
push
xlat
data16
je
pop
imul
push
fsub
movsl
sub
jle
xor
jae
cmp
mov
call
and
inc
cmp
test
je
mov
testl
xor
and
mov
push
movsl
jbe
loop
or
mov
xor
loop
fwait
aaa
sub
xchg
xor
shr
xchg
test
push
xlat
push
fbld
or
jb
mov
jbe
subb
add
add
testl
cmp
call
add
aaa
jmp
add
stos
rcrb
pop
dec
fistl
and
dec
mov
lock
inc
jbe
jl
sbb
mov
mov
inc
in
push
pop
cmp
icebp
push
xor
inc
mov
jbe
or
je
mov
or
test
add
add
inc
shlb
push
jne
add
iret
and
ret
imul
push
movsl
adc
mov
shlb
das
ja
add
jno
mov
daa
add
dec
xchg
mov
jno
inc
jl
fdivrp
incb
scas
push
and
push
pop
sbb
stos
xorb
movsl
sbb
lods
mov
sub
jo
push
mov
cmp
jo
rcrl
or
mov
aaa
adc
push
jb
push
push
add
pop
int3
jo
dec
xchg
les
popf
popa
cwtl
jg
xor
or
in
mov
sbb
test
cmpsb
fisubs
stos
xchg
lea
je
in
jmp
mov
outsb
fadds
lock
in
and
popa
fidivl
xchg
es
jns
mov
mov
mov
repnz
adc
mov
add
mov
lea
mov
pop
movsb
add
jno
call
ja
cmp
mov
add
aam
bound
add
mov
push
data16
add
dec
adc
in
xor
outsl
ret
hlt
add
stc
ds
dec
push
xchg
inc
push
or
mov
shlb
xlat
sub
popf
push
mov
inc
dec
loopne
in
adc
fstpl
nop
or
xor
or
sahf
ja
insl
add
sti
nop
add
push
leave
add
or
sahf
bound
sarb
xrelease
orl
mov
pop
in
xorb
stos
test
mov
or
mov
sbb
sub
push
femms
lcall
negb
into
sarl
sbb
lahf
or
mov
jp
jmp
in
and
aam
fistl
mov
or
cld
sub
cmp
adcl
frstor
fxch
or
fcompl
fcomip
push
pop
out
aam
movsb
cmc
adc
adc
cmp
inc
roll
push
sub
xlat
mov
mov
or
push
cmpb
rol
aas
adc
cmp
les
dec
jge
sbb
sbb
lret
xor
cmp
dec
aam
mov
adc
or
fdivrs
es
fistl
movsb
sbbl
sbb
or
rolb
pop
adc
add
adc
xor
loopne
xchg
andb
jns
addb
and
lcall
inc
sub
xor
xchg
jge
dec
push
push
xor
xor
or
ret
rcr
inc
es
push
pop
mov
pop
enter
pop
insb
cltd
sbb
sbbb
movsl
and
mov
sahf
pop
adc
xchg
push
loop
lods
mov
lds
jecxz
cmc
js
pop
ret
or
xor
test
ds
mov
push
fiadds
pop
push
cmp
dec
test
cmp
pop
mov
jl
ret
cmp
inc
test
push
mov
jbe
push
xchg
add
or
add
aaa
lods
test
mov
popa
imul
mov
mov
fisubrl
dec
nop
mov
jbe
or
clc
lods
adc
in
in
mov
mov
mov
in
int3
mov
cmpsl
adc
shld
shll
dec
push
lea
test
pop
add
sbb
jl
sub
mov
pusha
pop
mov
aas
lret
mov
xchg
jge
add
stos
mov
jge
ljmp
push
adc
mov
xchg
or
cmc
test
xchg
pop
mov
adc
jne
je
js
push
add
dec
pushf
xchg
dec
test
xchg
dec
enter
xchg
jl
jl
push
rclb
cs
popf
add
sub
adc
mov
add
mov
pusha
pop
movsl
int3
les
add
mov
cltd
call
jmp
add
push
loopne
pushf
xor
imul
or
in
push
fwait
inc
cmp
inc
frstor
jg
dec
ret
jp
jge
inc
cli
fnstenvs
gs
pop
std
movsb
mov
pop
mov
and
push
cmc
lods
mov
aam
jmp
push
and
xor
or
movsl
enter
inc
sub
add
pop
jmp
xor
pop
push
sbbb
xor
ljmp
dec
mov
mov
cmpsl
adc
aaa
cmp
dec
sbbl
mov
nop
mov
pop
inc
sub
or
sbb
xchg
mov
pop
lahf
mov
add
icebp
jo
rclb
out
test
push
pusha
and
mov
push
push
and
jle
and
mov
and
sarl
sbb
add
add
mov
cs
adc
sbb
loope
hlt
pop
enter
stos
push
cmp
push
fwait
ret
js
test
adc
test
mov
jne
mov
gs
in
sbbl
pop
push
push
adc
pop
add
jmp
shrl
dec
adc
xor
pop
and
inc
mov
pop
mov
into
rclb
inc
pop
iretw
les
mov
or
adc
dec
sub
jge
adc
xor
sbb
call
subb
add
cmpl
dec
xor
leave
jne
add
push
insb
cmp
inc
stos
ds
push
scas
lock
dec
in
fdivr
inc
dec
inc
and
les
jmp
shl
or
sbb
in
push
adc
daa
add
jecxz
xor
xchg
push
push
les
add
out
inc
stc
inc
out
repz
sbb
or
cli
cmc
dec
jb
inc
sbb
incl
mov
jmp
fldl
jne
lcall
mov
inc
sahf
enter
push
mov
rorl
loopne
into
outsl
push
jno
mov
cmovae
dec
andb
pop
push
repz
fstl
pop
push
lock
or
loopne
lods
in
ljmp
in
fldl
pop
fsubr
pop
faddp
andl
sbb
push
or
xchg
xchg
faddl
ja
add
pop
cmpsb
inc
inc
sbb
rcll
mov
or
pusha
cltd
nop
mov
mov
xor
jo
test
sbb
pop
cltd
cmp
icebp
dec
cmp
inc
adc
inc
lret
cmp
mov
lods
inc
add
push
js
xor
test
iret
sub
shll
or
or
lea
ds
and
jb
lret
push
push
sbb
push
sbb
push
mov
ljmp
inc
fcmovnbe
pop
and
fstl
mov
dec
mov
int3
dec
add
cld
sarb
outsb
push
mov
dec
test
sub
out
fidivl
pop
in
sub
mov
add
add
dec
add
mov
into
enter
loope
jmp
mov
cmp
jge
adc
push
dec
ja
cmp
jecxz
shlb
xchg
fcomps
test
gs
add
sbb
xchg
mov
inc
imul
dec
inc
dec
push
cwtl
lock
dec
test
les
ljmp
or
push
fld
in
aas
cmp
dec
adc
shrl
into
inc
add
addr16
cmpsb
ljmp
fists
or
jns
mov
mov
daa
call
jp
mov
add
add
or
mov
mov
in
es
sub
lods
push
imul
adc
test
mov
inc
xor
imul
dec
xor
adc
or
adc
push
or
dec
add
mov
and
or
adc
test
pushl
xchg
xchg
mov
addr16
push
sbb
jecxz
cmp
pop
or
mov
pushf
rolb
add
mov
inc
sub
and
and
dec
gs
mov
jno
cmc
sbb
ret
adc
test
movsl
dec
mov
cltd
push
sahf
cmp
adc
popa
test
xor
adc
out
pop
sarl
push
pop
push
jne
cmpxchg
rcr
rolb
push
mov
mov
cmpsb
add
sbb
test
inc
sub
ret
dec
lock
insb
add
sub
scas
inc
mov
mov
inc
lret
aam
pop
ret
sub
xchg
sbb
and
dec
leave
shrl
imul
cmp
outsb
adcb
rcll
gs
dec
orl
dec
sub
sub
roll
add
ds
std
xor
sbb
out
mov
rclb
imul
xchg
shl
push
push
cwtl
adc
push
hlt
ret
inc
xchg
mov
nop
das
sahf
and
daa
and
sub
hlt
xor
jnp
sbb
idivl
popa
cmpsl
lret
adc
xor
push
xchg
xchg
lock
pop
xchg
push
andl
push
inc
ret
mov
and
push
sub
shl
jne
mov
loop
lret
add
and
and
adc
lret
cmp
jmp
cmp
mov
xor
repnz
and
inc
sbb
pop
loope
add
mov
adc
in
inc
outsb
sub
mov
pop
xor
lret
dec
mov
imul
xchg
pop
pop
inc
in
adc
dec
in
cmp
push
push
mov
cmp
jb
negl
mov
add
repz
mov
mov
retw
mov
or
mov
mov
push
rcll
fldl
add
push
pop
dec
ss
loopne
setl
xor
push
xor
out
mov
sbb
and
sbb
adc
test
scas
adc
and
or
push
icebp
inc
rolb
cld
mov
pop
pop
ljmp
in
xor
mov
pop
imul
push
loopne
cwtl
add
add
xchg
data16
dec
sbb
lcall
inc
push
dec
je
hlt
addr16
js
fiaddl
or
sub
pop
or
or
adc
aam
pop
sub
or
or
lret
mov
insl
sub
push
insl
loopne
push
mov
test
mov
scas
or
mov
add
sarb
and
out
add
and
mov
push
xchg
test
jmp
cmpl
xchg
popf
mov
mov
sahf
nop
sbb
pop
int3
fbstp
xor
sub
adc
pop
xor
sub
mov
push
imul
dec
cmp
faddl
and
negl
jmp
xor
adc
cmp
fdivl
push
push
mov
add
das
sub
dec
cmp
es
hlt
mov
adc
add
add
in
mov
inc
sub
cmp
inc
add
mov
dec
loopne
push
xor
or
xor
push
lcall
add
cs
iret
dec
push
adc
andb
or
cmp
push
push
rclb
mov
mov
dec
dec
mov
es
ss
imul
lea
xor
xorl
or
push
xchg
es
arpl
js
je
into
lock
jo
insb
ss
mov
ret
loopne
add
inc
arpl
dec
loopne
adc
inc
mov
mov
andl
in
push
xchg
add
mov
mov
lock
mov
lock
stc
daa
rolb
sub
lock
and
sti
jno
loop
mov
ja
aam
movsl
xor
sub
in
push
jb
sti
pop
fadds
aam
imul
mov
inc
push
dec
mov
push
add
or
das
lods
insb
adc
lods
mov
lock
add
clc
in
mov
fsubl
pop
or
cs
fmuls
xchg
xchg
call
ret
loopne
faddl
insb
push
test
loopne
pop
icebp
jne
lcall
adcl
pop
cmp
jmp
enter
pop
and
pop
repnz
or
mov
add
repnz
push
add
std
add
xchg
xor
lahf
incb
bnd
jb
cltd
rolb
sbb
outsl
cmp
jb
dec
clc
pop
clc
jl
test
dec
sbb
sbb
adc
mov
loopne
in
xor
jbe
dec
aam
loopne
daa
pop
push
push
inc
dec
fwait
enter
sbb
add
xor
push
les
repnz
inc
push
add
orl
dec
xor
sbb
xchg
dec
xchg
pop
add
dec
mov
ds
aaa
sarb
add
push
int
movsb
mov
and
xor
repz
inc
pop
aad
insb
xor
data16
pop
aam
and
push
stos
push
cmc
in
sub
or
bound
pop
divb
push
adc
push
subb
add
and
pop
push
insl
jp
negl
or
cmp
rol
cmp
fimuls
lahf
jp
adc
push
or
sub
sbb
add
push
hlt
jge
bound
and
data16
aaa
lret
sbb
das
movsb
adc
lahf
pop
loopne
inc
adc
xchg
jo
fiaddl
pop
pusha
add
sbb
shlb
or
out
jmp
shrl
and
faddl
add
cmp
jecxz
or
les
xchg
mov
xlat
push
loop
ret
cmp
jae
test
mov
xchg
mov
and
mov
inc
repz
xchg
or
mov
add
xor
cmpsb
push
sbb
sub
pop
push
in
fld
pop
arpl
je
aad
leave
push
arpl
into
sub
and
xchg
in
sarb
add
push
pop
cli
ret
lret
adc
inc
and
pop
mov
test
xor
xchg
mov
iret
jns
jp
imul
mov
push
cmpsl
cs
js
or
jo
jbe
loopne
xor
outsl
push
dec
je
sub
and
or
inc
mov
push
mov
xor
mov
xchg
sub
hlt
adc
fcoms
push
and
lret
fisttpl
jmp
and
cmp
lods
outsl
inc
test
push
icebp
sbb
int
and
push
sub
push
dec
jb
lods
dec
push
cmpsb
dec
bound
or
or
inc
test
lret
mov
stos
adc
orl
test
mov
enter
sbb
rorb
push
pop
mov
pop
inc
jmp
push
cmp
inc
inc
cmp
pop
mov
aam
mov
dec
loop
xchg
xor
mov
mov
add
inc
in
add
sbb
jge
loop
data16
pop
push
out
jnp
jmp
lock
and
pop
push
scas
dec
lea
scas
pop
cmp
add
sti
das
test
xor
add
aam
xor
xor
mov
mov
jl
push
inc
imul
push
mov
mov
sub
sarl
push
outsl
std
mov
dec
adc
jbe
inc
add
or
xchg
pop
mov
or
enter
fistps
mov
out
mov
fnstcw
dec
orl
test
mov
jnp
mov
mov
sbb
sbb
lret
mov
pushf
loop
and
arpl
enter
jno
aas
orb
sbb
adc
sbb
cmp
jge
add
push
roll
sub
call
push
test
push
jg
in
out
add
cli
std
sub
test
or
cmp
in
cmp
addr16
jo
sbb
leave
repz
xchg
pop
and
sub
jb
add
or
xchg
and
pop
mov
enter
shrl
cmp
pop
sbb
mov
in
sub
addr16
leave
cs
pop
xchg
pop
push
bound
pop
roll
or
adc
test
xchg
add
loope
xor
in
inc
jle
xchg
or
incb
incl
in
incl
push
inc
pop
sbb
ss
adc
push
and
push
and
sbb
repz
push
inc
int
push
cmp
add
jmp
pop
or
sbb
push
insl
mov
mov
mov
mov
xor
adc
adc
push
and
dec
test
jb
imul
pop
rorb
cmp
int
cmp
bound
mov
lods
outsb
pop
jns
or
sub
fcmove
pop
xor
jo
push
mov
jg
jne
incl
cmp
jl
xor
lret
into
lret
pop
sub
fsubs
push
pop
jns
dec
mov
sub
dec
push
cmpb
es
insb
into
jl
shrl
pop
jle
mov
enter
xor
in
test
arpl
mov
xor
pop
je
push
mov
cmp
adc
add
cmp
or
push
xor
xor
and
ret
pop
mov
inc
and
das
shl
pop
jne
jns
pop
sbb
imul
jmp
push
sbb
les
je
sub
dec
int
lock
ss
xor
lock
jne
jl
test
stos
les
dec
mov
mov
jge
lret
xor
sub
lea
shrl
fs
loope
sub
cmpsb
mov
movsl
xchg
sahf
jecxz
fs
fcompl
cmpsl
xor
push
ret
push
mov
sub
sbb
dec
jl
sbb
popa
xor
or
stc
in
pop
push
in
mov
or
sbb
insl
sar
sub
js
add
ss
fildl
add
push
add
lahf
test
mov
dec
add
lods
fiaddl
incl
mov
or
pop
or
mov
pop
or
aaa
push
mov
push
lods
add
dec
mov
xor
loopne
adcl
cmp
dec
add
pop
and
or
pop
add
mov
das
jle,pn
nop
add
add
lock
repnz
cmpsb
adcb
xor
push
inc
fwait
shr
mov
adc
lds
jmp
push
inc
pop
jecxz
cmp
dec
outsb
dec
mull
xchg
mov
cmpl
rorb
inc
mov
arpl
cmp
pop
xor
insl
popa
dec
sbb
pop
out
xlat
out
jno
pop
jge
cmp
jecxz
test
add
mov
push
jg
cmp
ret
cmp
xor
fcmovb
cmpsb
cmpsb
or
inc
xor
push
pop
ret
cmp
sbb
std
push
adc
adc
jne
jnp
mov
jmp
sti
enter
addr16
insb
stos
movsl
fidivrl
mov
lods
jbe
adc
movsl
cmp
and
loope
bound
test
call
in
adc
rolb
xorl
sbb
int
sbb
adc
xor
testb
adc
sub
lret
lods
popf
xchg
push
add
sbb
mov
jmp
xchg
fiadds
cmp
jne
push
jmp
cmp
xchg
movsl
es
mov
inc
bound
mov
inc
or
inc
es
adc
movsl
cmp
dec
addb
dec
jle
xor
xor
and
movsb
and
and
xchg
add
add
stos
mov
movsb
bound
movsl
mov
lods
dec
test
outsl
clc
fsts
mov
les
jno
mov
xchg
add
int
dec
pop
add
lods
or
dec
push
pop
xor
cld
dec
cmp
rclb
push
jbe
fiaddl
mov
mov
nop
xchg
mov
add
or
xchg
stos
mov
jne
add
jne
rorb
loop
pop
push
movsb
xchg
in
aad
or
adc
xor
pop
mov
adc
jp
scas
inc
test
or
outsb
rcl
inc
int
inc
adc
out
or
dec
push
cltd
iret
or
popw
mov
mov
adc
sarb
adc
sahf
test
stos
mov
pop
inc
xor
inc
sub
push
or
add
xor
movl
and
jp
add
add
or
lea
enter
ja
jp
orb
push
imul
test
jae
fldl
fabs
mov
push
inc
or
inc
mov
mov
adc
cmp
adc
inc
sub
addb
cld
add
dec
int3
mov
out
rorb
jge
xor
cltd
lea
mov
es
rorl
pop
pop
stos
push
out
addr16
mov
mov
inc
lods
xor
jp
in
adc
ret
adc
fnsave
mov
mov
inc
sub
jmp
jmp
ret
adc
mov
push
imul
sbb
sbb
arpl
mov
insb
cmp
adc
inc
and
dec
xor
mov
fistpl
mov
xchg
mov
cmpsl
mov
add
add
mov
outsl
cmp
add
push
or
clc
popa
xor
mull
mov
dec
mov
les
xor
lds
jb
lcall
jns
and
adc
addl
fisubs
xor
popf
shrb
adc
add
jno
cmp
ja
pop
add
jl
add
ds
negl
lods
in
popa
push
es
ret
cmpl
lahf
sub
test
sub
xlat
and
cmp
pop
or
aas
cmpsb
adc
mov
andl
in
lret
out
lods
jmp
inc
lahf
mov
push
stos
xchg
repz
inc
mov
jg
adc
dec
hlt
jl
push
push
push
dec
dec
mov
add
adc
popa
out
push
push
rcrb
popa
pop
cmp
or
es
hlt
stos
cli
lock
xorb
jmp
push
and
outsl
test
add
insl
pop
bound
cmp
mov
jae
inc
arpl
mov
sbb
jge
and
jmp
and
xor
aam
inc
insl
into
js
adc
ds
or
or
cld
and
mov
imul
xchg
aam
fldcw
mov
sub
sbb
inc
test
xchg
push
xchg
jo
mov
xchg
lock
scas
sti
add
mov
sub
int3
aam
dec
sub
or
mov
add
nop
rcrb
mov
incb
stos
mov
jne
cmp
inc
rolb
cli
lret
cld
cld
push
lods
mov
push
pop
fsubrs
lds
movsb
adc
pop
pop
test
sub
inc
xor
loopne
xor
push
movsl
add
popa
and
xor
add
sub
js
jg
sbb
sub
lock
sbb
xchg
pop
sbbl
sbb
push
cmp
or
fs
aaa
jmp
nop
add
sub
sub
add
push
push
add
push
std
dec
pop
das
dec
rcll
adc
ret
cmp
call
push
iret
push
push
add
mov
inc
inc
test
insl
mov
ror
popa
pop
inc
add
test
xorb
cli
dec
loopne
js
jg
int3
adc
cmpsb
add
cmpsl
lock
hlt
shl
repz
xor
sbb
or
movsl
xor
test
add
aaa
add
push
ret
jae
inc
add
fldcw
fsubl
imul
sbb
fists
sti
lcall
enter
push
and
dec
or
and
rol
pop
rcll
add
dec
in
mov
inc
push
jle
push
add
add
pop
or
and
mov
mov
insb
jl
popa
xor
inc
xchg
out
jecxz
nop
stos
test
dec
jecxz
popa
mov
sbb
lea
jmp
in
dec
mov
fcoml
repz
test
and
and
add
add
push
push
arpl
and
nop
pop
push
adc
jl
xor
fsubs
mov
xchg
icebp
cltd
fists
lcall
ret
je
cmpsb
pusha
pop
add
push
push
sub
sbb
inc
xor
aas
pusha
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
pop
inc
adc
jl
adc
scas
or
test
out
int3
xor
sub
cmpb
je
fidivrs
rcr
push
and
push
dec
push
cli
add
stos
adc
jns
pushf
or
sbb
or
std
sub
js
bound
cmp
loopne
arpl
stos
adc
stos
pop
push
fcoml
mov
jl,pt
loopne
push
xchg
push
add
add
sbb
nop
test
adc
loopne
int3
mov
inc
or
push
cmp
imul
adc
sub
push
sbb
cld
cmp
inc
sbb
mov
sbb
xor
dec
leave
add
adc
inc
leave
adc
and
fndisi(8087
in
sbbl
addb
add
dec
xchg
add
mov
mov
xor
sbb
add
lcall
test
sub
ret
adc
fildl
addb
push
pop
daa
mov
in
adc
or
cmp
in
push
stos
iret
dec
lock
and
push
fcomi
sbb
jmp
push
add
add
lods
adc
shlb
lods
imul
cmp
jb
in
dec
lock
jo
movsb
sub
add
stos
inc
or
ret
cmp
push
jmp
in
push
lea
in
andl
leave
push
in
or
inc
and
jle
pop
and
xlat
js
inc
pop
mov
and
dec
dec
lods
and
fcomps
jne
cli
faddl
faddp
jl
fsubrs
test
pop
or
add
cmpsl
inc
or
sbb
neg
cmc
push
ret
xchg
sbb
push
lods
pop
scas
xchg
hlt
ja
int
mov
mov
shrl
push
jle
imul
repz
lds
adc
ret
out
xchg
out
sbb
insl
mov
jecxz
lret
lret
stos
and
cmp
xchg
lods
imul
mov
jbe
dec
movl
movsb
test
adc
ret
cld
xchg
adc
or
or
jecxz
add
or
cmp
push
outsl
cmp
rorb
cli
jo
out
int3
in
mov
mov
jne
ret
fstpl
fs
sarb
sub
pop
or
scas
pop
and
inc
aam
or
test
push
push
xor
gs
in
or
and
or
adc
push
mov
pop
push
rorl
fwait
mov
das
pop
insl
in
xchg
jo
push
adc
test
jl
test
add
pushf
inc
jmp
sub
mov
ja
fcoml
and
outsl
sub
jmp
stos
mov
fdivr
mov
add
mov
xchg
or
rcrl
mov
cmp
xor
nop
add
shrb
outsl
mov
sahf
xchg
add
and
cmp
int3
movsb
cmp
stos
xorl
sbb
and
jge
clc
rolb
jns
inc
lods
lods
pop
inc
test
cli
mov
rcrb
lea
call
mov
aas
dec
sub
mov
in
lcall
stos
mov
and
push
fwait
mov
enter
push
cmp
rcll
push
and
shl
xchg
mov
add
mov
je
cs
mov
mov
mov
lcall
in
movzwl
xchg
mov
es
jmp
push
test
add
cwtl
jl
cmp
sti
jecxz
xchg
fimuls
pop
mov
sbb
lea
lds
popl
push
cmp
enter
iret
in
sub
iret
mov
mov
test
aam
dec
mov
sbb
adc
jbe
js
add
sbb
dec
sbb
insb
dec
orl
sub
movb
push
popf
hlt
or
xor
or
push
add
and
pop
xor
ror
mov
leave
int3
inc
cmp
adc
mov
cld
mov
pop
movsb
or
popa
and
add
pop
mov
nop
iret
mov
aam
out
push
xchg
sbb
sbb
movsb
cltd
push
std
aaa
rol
sarb
adc
ljmp
sti
outsb
adc
push
mov
adc
jmp
cmpb
push
mov
jg
push
inc
mov
loopne
push
mov
mov
sarb
lret
movsbl
cmp
jne
sub
rclb
adc
jbe
push
paddb
ja
push
mov
cs
dec
call
dec
ljmp
xor
movnti
roll
aam
push
sahf
xchg
xor
roll
jl
and
and
mov
cli
sub
pop
dec
orb
mov
mov
xchg
xchg
pop
cmp
js
cmp
jl
adc
mov
ret
pop
adc
mov
scas
movsb
pop
pop
and
mov
jbe
loopne
xchg
mov
push
nop
push
mov
add
sbb
adc
lret
mov
pop
push
hlt
add
mov
mov
sarb
imul
xchg
or
fldenv
fidivl
push
std
add
jecxz
push
leave
leave
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
pop
hlt
inc
jno
xor
ret
loopne
movsl
sbb
pushf
insl
popa
xorl
mul
mov
shl
leave
sarl
out
fabs
jmp
jns
add
push
push
adc
sbb
and
sub
ss
sahf
out
inc
inc
dec
dec
sahf
out
sahf
push
pop
pop
arpl
jns
out
jb
jl
xchg
fwait
rcrl
add
add
push
pop
or
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
and
add
dec
add
mov
imul
mov
adc
sbbb
ss
mov
loop
rorb
add
adc
xchg
cmp
mov
pushf
les
jae
pop
lsl
push
pop
hlt
jo
jo
dec
test
add
mov
les
sbb
push
jnp
sbb
fwait
andb
ljmp
loopne
jb
inc
lea
out
cmp
dec
sbb
nop
adc
adc
movsb
mov
mov
xor
into
add
lock
cmp
pushf
std
mov
jb
fdivrl
imul
mov
fcoms
and
xchg
rorl
cmpl
aam
mov
fucomi
rolb
loop
xchg
xor
hlt
add
es
lahf
pop
jo
adc
lea
dec
es
fcompl
mov
and
cmp
test
pop
jae
sub
mov
xchg
adc
sbb
ljmp
or
inc
sub
jge
sbb
pop
testl
outsb
sbb
push
jo
shll
js
mov
leave
add
cmp
xchg
rorb
lods
jle
add
sbb
sub
sbb
fcom
adc
ret
mov
arpl
out
sbb
mov
sbb
jae
add
add
push
xor
fcoms
fbstp
cmpsb
pushf
add
imul
jge
clc
insl
or
sarb
cmp
ret
dec
sub
lea
mov
jae
rorb
ljmp
or
adc
pop
js,pn
ret
movl
rol
dec
pop
dec
add
cmp
jbe
fdivrl
mov
jp
sub
hlt
lods
xchg
sub
or
or
es
scas
sbb
and
fsubl
mov
mov
daa
lea
imul
cmp
ja
push
stos
rolb
out
dec
mov
stos
ret
xchg
or
lea
sbb
lock
sbb
inc
or
lret
adc
or
sub
mov
mov
or
incb
cmp
pop
add
and
cmpsl
add
scas
call
es
push
fadds
pop
mov
push
and
test
pop
inc
mov
cwtl
and
inc
dec
mov
pushf
mov
xchg
repz
and
fisubrl
je
dec
out
decb
add
add
and
xchg
and
adc
cmp
nop
lret
adc
adc
push
add
mov
xor
rcr
daa
mov
sbb
add
loopne
add
sbb
xor
fs
mov
out
push
sbb
dec
xchg
xor
fcoms
or
mov
rorb
sbb
and
pop
cltd
imul
mov
pop
in
mov
add
mov
movl
adc
and
xchg
jnp
adc
sub
xchg
pop
or
ljmp
add
mov
sbb
pusha
push
loop
adc
jl,pn
inc
jp
rclb
fcoms
aad
mov
cmpsl
jle
add
sar
jbe
cli
es
lea
cmp
or
xor
and
or
js
lcall
or
jbe
cmp
in
movsl
fs
aad
or
test
inc
mov
or
outsb
fucomp
outsl
or
icebp
jl
dec
scas
sahf
cmp
push
js
mov
jmp
and
test
pusha
and
push
imul
xchg
popa
add
jae
movzbl
push
push
fneni(8087
push
add
or
scas
js
orb
pop
pop
rcrl
jl
or
pop
jno
roll
mov
lock
mov
ret
mov
mov
movl
arpl
xor
sbb
sub
test
mov
lahf
pop
dec
clc
mov
push
aam
or
nop
jbe
cwtl
mov
push
roll
dec
fwait
and
mov
jo
dec
inc
in
lcallw
in
add
xchg
nop
imul
pusha
mov
and
add
pop
fwait
pusha
loope
daa
js
jne
lods
arpl
sbb
cmc
jmp
lods
fistl
sbb
cld
dec
dec
push
mov
adc
xor
orl
dec
in
sub
fadds
add
add
sbb
or
mov
les
and
sarl
and
jne
push
inc
adc
sbb
push
sarl
add
pusha
cltd
or
cmp
push
and
mov
mov
movsb
orl
shrb
inc
adc
adc
sub
add
in
mov
testb
and
roll
in
out
push
sbb
roll
xchg
out
or
int3
and
cmp
subb
je
dec
stc
add
push
push
rolb
inc
ja
inc
mov
mov
ljmp
push
jmp
icebp
adc
dec
clc
xor
dec
or
dec
pop
pop
mov
sub
dec
insl
push
loop
lea
mov
clc
je
jmp
push
bound
adc
mov
sbb
xchg
fucomi
sbb
and
or
push
inc
scas
insb
push
mov
test
or
enter
ret
lods
sbb
in
ss
popa
dec
roll
jmp
push
add
sbb
sub
sub
or
sbb
jg
pop
inc
push
push
cld
adc
fcmovne
jb
lock
mov
test
add
cmp
inc
shll
pushf
repz
addr16
mov
jo
je
ss
iret
test
outsl
pop
inc
adc
pop
sbb
inc
xchg
icebp
out
xchg
push
sbb
shll
and
adc
adc
or
cmp
out
hlt
dec
jnp
mov
ret
dec
ret
lock
lock
ficoms
in
pop
jns
inc
daa
dec
push
nop
pop
int
lcall
or
or
movsl
inc
lods
and
dec
jne
or
hlt
or
lock
dec
lods
nop
cmpl
adc
or
mov
popa
cmpsb
mov
mov
push
cld
push
jo
cmp
push
dec
imul
pop
mov
push
inc
pusha
or
scas
or
pop
or
loope
mov
or
xor
or
sbb
sub
lea
imul
cmp
or
jmp
inc
pop
inc
inc
aad
sbb
xor
in
adc
dec
popa
dec
ds
push
or
mov
push
adc
and
pop
sbb
mov
add
sub
jno
add
xchg
pushf
adc
sti
mov
stc
sbb
pop
lahf
aam
adc
xor
sub
fwait
jae
and
push
jmp
dec
and
ret
cld
cmpl
push
adc
les
cmp
fwait
pop
or
mov
pop
mov
or
lea
lods
push
mov
adc
js
loope
and
cmpsb
jmp
lods
je
inc
jo
call
hlt
add
mov
rolb
movsl
cmpb
je
lea
dec
dec
shll
xchg
hlt
xor
cltd
push
jbe
push
pushf
fdivs
inc
push
jg
and
push
notl
adc
sub
adc
ljmp
and
in
add
xor
sub
subb
jle
sbb
jo
fnstsw
negl
lods
add
scas
dec
sbb
call
xor
pop
mov
sbb
repz
pop
pop
jnp
sub
or
xchg
cs
push
ds
cmp
mov
dec
xorl
loope
sbb
adc
loopne
inc
dec
inc
push
ds
nop
cmp
ds
js
pop
pop
and
in
xchg
inc
pusha
dec
adcl
cmp
ds
lds
mov
xor
lock
cmovle
cmpsb
xchg
mov
push
sbb
cmpl
push
sub
sbb
sbb
and
mov
insb
jle
pop
mov
imul
xor
out
xchg
bound
push
cltd
pop
sbb
and
mov
in
sub
xchg
xor
test
je
inc
adc
sbbl
aad
jnp
mov
leave
push
out
push
test
add
cmp
out
sub
in
nop
mov
xor
xor
shlw
ljmp
jb
adc
xchg
test
pop
and
addr16
dec
mov
aam
sub
xor
or
testl
xchg
mov
adc
jl
or
sub
insb
iret
inc
and
add
hlt
sub
sbb
mov
sbb
out
fnsave
sbb
andl
and
int3
sbb
loopne
push
pop
mov
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
int3
add
bound
int
and
adc
mov
cltd
mov
movsl
je
mov
adc
fs
jl
and
lea
sbb
mov
lods
dec
jecxz
mov
jle
lea
push
les
adc
pop
adc
insl
push
jo
adcb
mov
xor
fildl
daa
imul
jo
cmp
mov
dec
je
ret
push
aas
cmp
out
cs
dec
dec
sbb
int
cmp
jne
and
shl
js
mov
les
push
adc
sbb
xor
sar
shlb
push
push
fsubl
inc
inc
mov
fsubrl
xor
adc
loope
fs
dec
outsl
fimull
ss
ds
mov
add
sti
cmp
stos
mov
mov
dec
add
cmp
outsl
xor
pop
add
jmp
fstp
push
popa
pop
push
test
aaa
bound
pop
push
cmp
inc
test
mov
fidivs
mov
or
push
stc
adc
sbb
rcl
pop
cmp
fldt
dec
inc
arpl
xor
push
insl
enter
xchg
xor
xchg
xchg
inc
sub
movsl
adcb
adc
and
and
add
movzbl
sbb
xorb
je
jge,pt
shll
mov
bnd
aad
pop
push
cmp
pusha
cmp
xchg
cmc
inc
jle
dec
jne
or
mov
lea
cwtl
push
aad
bound
std
mov
mov
lea
daa
mov
je
cmp
xchg
shrl
push
cmp
push
sbb
inc
inc
leave
ljmp
add
cmp
push
add
jns
ss
lods
es
mov
sub
mov
mov
clc
clc
cld
cmp
jne
jae
movl
sub
push
add
add
lcall
push
and
ja
popa
fnsave
add
dec
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
mov
or
mov
sub
loope
xor
xlat
sub
adc
dec
or
js
movsbl
decb
push
mov
sub
add
adc
je
dec
je
push
add
out
loop
and
icebp
mov
dec
mov
add
dec
movsl
out
lret
sub
scas
add
push
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
fdivrl
xor
add
cmpsb
jnp
or
clc
xor
inc
xor
inc
jmp
sbb
bound
insb
ret
cltd
idiv
inc
inc
imul
pusha
clc
jb
in
cld
mov
call
jp
jmp
js
popa
mov
add
or
cmp
pop
push
lock
cmp
or
data16
and
adc
push
push
lock
push
pop
imul
push
sub
bound
test
jmp
daa
pop
cwtl
ret
cwtl
xor
jmp
push
dec
mov
xchg
int3
xor
repnz
outsl
add
cld
insl
addr16
jae
clc
sbb
jmp
jp
xchg
jl
outsl
push
ds
jne
decb
outsl
clc
in
nop
jne
cmp
je
cmp
pop
cmp
je
stos
inc
loop
cmp
jne
inc
jne
mov
sub
push
or
xlat
out
push
ret
fistpll
stos
jb
mov
nop
cmp
adc
or
in
cmp
jne
pop
dec
add
loop
or
pop
xchg
cmp
jne
mov
inc
cmp
cmc
mov
mov
cmp
add
cmp
push
pusha
mov
xor
sub
jmp
push
jg
jbe
jl
or
jg
mov
jmp
and
fdivrl
push
jmp
inc
jl
inc
jg
flds
iret
add
shl
mov
sub
xor
fdivrs
mov
add
les
call
outsl
adc
test
or
and
inc
ds
xlat
es
test
inc
fdivr
leave
mov
sbb
test
xor
jecxz
sbb
sbb
sub
or
mov
inc
cmp
pusha
mov
jg
ret
push
mov
imul
sub
xor
jo
mov
roll
stos
xor
daa
lcall
adc
orb
sub
xor
mov
add
mov
mov
enter
push
and
xor
xor
fsubs
inc
sub
sub
cmp
or
ljmp
adc
cmp
aaa
rolb
out
jmp
xor
inc
in
push
icebp
sub
inc
adc
ds
mov
mov
outsb
int3
dec
fisubrl
ret
cmp
cmp
dec
addb
xor
and
fidivrl
daa
cmp
je
cmp
je
add
popl
adc
inc
sti
add
movb
fnsave
mov
push
clc
inc
xchg
aad
inc
push
pop
dec
push
ss
stos
out
add
jne
mov
mov
cld
cmp
sub
inc
cmpsb
or
mov
jmp
adc
je
sub
dec
add
or
in
sbb
pop
pop
mov
adc
and
mov
sub
add
mov
sbb
icebp
or
push
iret
push
push
push
lcall
clc
andl
mov
add
mov
mov
pop
xor
mov
and
jbe
or
jbe
adcl
mov
sub
jge
jne
subl
jne
and
push
sbb
mov
push
add
repz
push
dec
mov
cmp
push
mov
push
das
int3
les
add
xchg
inc
add
or
sub
add
or
movsb
loop
insb
xchg
pop
inc
pop
test
dec
popf
or
pop
jne
jle
push
hlt
add
adc
fwait
jecxz
test
jmp
inc
rolb
push
aaa
sbb
mov
add
add
or
pop
sbb
and
mov
mov
sub
subb
xchg
orb
sbb
gs
jmp
add
subb
pop
aam
jbe
pop
inc
popf
sbb
int3
sub
aas
mov
movb
cmp
mov
xor
leave
mov
icebp
orl
push
cmp
jecxz
pop
pop
rorl
push
icebp
sbb
sbb
add
cmp
and
xchg
lcall
push
ret
cmp
inc
xchg
xchg
and
xor
sub
cmp
push
mov
jecxz
sbb
inc
or
pusha
lds
mov
and
sub
pop
mov
fsub
shl
aaa
outsl
enter
cs
or
mov
add
jl
jbe
pop
dec
es
mov
mov
jmp
cld
aas
inc
test
cmpb
jne
pop
dec
mov
imul
dec
pushf
in
push
fdivl
xor
flds
mov
clc
sub
mov
jo
mov
dec
jnp
jo
add
lods
aam
or
xlat
je
aad
dec
int
mov
or
dec
mov
into
xlat
mov
xchg
or
in
mov
lea
push
adc
fmul
sub
fbld
jmp
sub
sahf
mov
loope
je
repnz
and
adc
jp
mov
mov
rorl
lret
rorl
sbb
imul
add
add
pop
jnp
dec
or
lods
nop
movsl
sub
scas
popf
shlb
rclb
or
nop
xor
ret
or
sbb
or
rorl
adc
or
cmp
scas
inc
insb
je,pt
inc
add
mov
pop
xchg
lea
mov
data16
jl
out
pop
jnp
arpl
cmp
dec
dec
mov
out
bound
lock
fildll
or
imul
xlat
push
mov
arpl
inc
stos
push
and
adc
sbbb
sbb
inc
outsl
cmp
roll
jl
or
ffreep
pop
pop
jnp
push
pop
xchg
call
in
rclb
sbb
push
pusha
and
and
push
xchg
sub
call
inc
adcl
mov
push
addr16
sbb
xor
and
pusha
jmp
sub
xor
mov
add
mov
add
ljmp
jbe
inc
pop
jmp
mov
and
leave
add
lret
movsl
loope
adc
jp
push
fistl
or
inc
test
xor
lea
mov
add
or
filds
inc
cmp
jb
push
jmp
push
pop
adc
sub
fsubrs
or
mov
ret
xlat
aam
push
sbb
test
sbb
sahf
popa
or
or
test
pop
cmp
divl
add
movl
inc
xchg
xchg
mov
inc
ljmp
mov
mov
cwtl
les
push
or
push
cwtl
mov
pop
cmp
dec
cmp
push
cmp
dec
cwtl
push
cmp
cmovge
aas
cmpb
add
adc
lahf
or
pop
push
jge
xor
xor
inc
xchg
cmp
or
push
les
cmp
adc
loop
inc
push
add
and
inc
les
nop
rcl
dec
cmp
mov
jb
push
add
dec
mov
das
xchg
or
and
orl
ret
flds
insl
xlat
add
das
jbe
add
je
cmp
inc
inc
mov
add
cmp
ja
daa
jne
xor
jge
out
and
sbb
gs
dec
add
add
xchg
cmc
lock
jmp
xor
rorl
in
pop
lods
or
fcmovu
aam
shl
les
mov
jne
jge
sub
std
int3
mov
pop
sbb
or
sbb
inc
mov
jecxz
ds
dec
aaa
pop
ret
or
and
sub
dec
shlb
gs
inc
xchg
pop
in
stos
push
dec
rolb
test
and
push
mov
cmpsb
fisubl
imul
adc
mov
dec
mov
add
xchg
lret
shll
je
jp
xchg
sub
pop
adcl
or
nop
pop
inc
mov
push
mov
mov
and
push
insb
loop
fnsave
js
call
push
das
mov
or
mov
cs
sub
xchg
inc
xor
inc
dec
loopne
pop
shl
add
xchg
mov
sahf
je
gs
mov
sbb
in
movl
add
or
push
in
movsl
inc
xor
bound
xchg
pop
clc
and
pop
and
xor
popa
enter
lock
and
enter
icebp
inc
mov
or
mul
mov
idivb
jnp
je
movsb
mov
add
movsb
mov
inc
subb
mov
cwtl
jp
cwtl
mov
inc
push
push
add
adc
jmp
adc
lcall
push
popf
les
pop
jl
inc
jne
test
out
or
or
push
orl
or
and
add
add
mov
lsl
inc
xchg
pop
mov
adc
sub
fs
xchg
pop
or
xchg
xchg
inc
or
scas
xchg
mov
rclb
xor
ljmp
subl
sub
adc
push
scas
loopne
jle
aam
loopne
in
xor
add
and
push
outsb
add
xlat
add
fst
cmpsl
pop
mov
push
mov
in
add
cwtl
push
in
or
cltd
and
mov
and
fs
mov
ret
sub
sub
imul
arpl
mov
jl
inc
adc
xchg
test
xor
add
dec
inc
inc
lret
lds
or
outsb
rolb
push
lea
xchg
dec
mov
sarl
sub
js
mov
and
xor
and
xor
dec
pop
xchg
xor
jmp
sub
test
pop
sub
and
loope
inc
inc
call
adc
cmp
add
sarb
lcall
adc
sub
imul
sbb
dec
sti
inc
jecxz
push
ret
outsl
and
outsl
or
jno
jbe
inc
mulb
cmpsl
pusha
cmp
add
or
nop
shlb
shrl
and
or
test
filds
dec
arpl
mov
add
stos
jmp
jne
enter
adc
loopne
fwait
mov
pusha
add
lea
inc
pop
lods
shll
adc
or
push
in
xor
je
ret
sbb
and
sbb
mov
das
inc
dec
xchg
jno
xchg
push
stos
adc
adc
adc
dec
nop
clc
das
dec
loopne
cmp
inc
or
pop
add
pop
jo
or
push
sbb
stc
or
or
adc
out
inc
sub
sub
push
rorl
sbb
mov
ja
lahf
imul
lcall
xchg
test
in
inc
sub
jecxz
or
shll
jns
push
mov
mov
cltd
mov
cld
cltd
inc
pop
popf
loope
adc
pop
and
std
mov
ret
mov
sub
ss
out
cmp
rcll
test
pop
add
je
mov
dec
sub
jns
negl
jl
adc
mov
movsl
mov
cmp
sbb
and
jne
scas
loopne
outsl
pop
push
jae
mov
push
dec
pop
pushf
test
test
scas
pop
push
and
lock
xor
lahf
ds
xor
or
jae
movsl
dec
hlt
jmp
lea
push
mov
daa
and
inc
mov
in
scas
dec
adc
mov
sbb
cmpl
push
sbb
sbb
lds
in
pusha
or
xchg
push
xor
lcall
adc
negl
inc
push
in
xor
or
cmp
xor
movzwl
lea
jle
xchg
push
sub
jbe
js
jl
and
lds
xchg
fdivrs
inc
pop
sarb
call
push
lea
sub
leave
push
gs
inc
mov
shll
pop
jmp
xchg
repz
push
adc
mov
pusha
adc
fcomps
pop
data16
cmp
je
in
jae
cmp
pop
mov
sbb
dec
cs
sub
xchg
push
fsts
cs
pop
push
xor
fldt
add
decl
ret
dec
or
shr
rep
adc
data16
push
pop
sub
gs
mov
fs
in
sbb
in
adc
push
insb
fs
cltd
jmp
pop
adc
pop
mov
jbe
stos
pop
jg
sub
mov
adc
push
imul
sbb
jae
fs
inc
addl
mov
outsb
jmp
push
or
cmp
decl
push
mov
je
xor
push
rorl
es
add
sub
andl
jmp
pop
or
loope
add
dec
jmp
std
fsubrp
adc
mov
push
decl
dec
fs
adc
rorb
inc
push
cld
add
js
in
cmpsb
outsb
dec
lock
nop
lock
push
cs
adc
lcall
sub
cmpl
je
faddl
mov
ret
jg
adc
or
or
sbb
inc
ret
push
loop
in
xchg
scas
lret
popa
or
fisttpl
sub
aad
push
sbb
mov
mov
xchg
das
adc
pushf
mov
add
rorb
jle
pop
adc
push
inc
pop
scas
or
cmp
sbb
adc
xor
add
push
shlb
movsb
repnz
inc
nop
fiaddl
pop
loopne
xchg
notl
adc
rcrl
mov
loopne
and
test
mov
cmc
pusha
and
ret
add
ret
or
and
or
sbb
lds
aad
xchg
into
test
pop
cmp
loope
adc
pop
in
mov
sbb
mov
je
call
xor
and
push
or
ja
inc
jmp
dec
scas
push
sbb
sbb
xchg
jp
mov
xchg
dec
aam
clc
push
dec
fisubl
loope
lcall
push
inc
sbb
mov
jo
push
and
mov
push
insb
mov
rcrb
subb
fnsave
sub
sbb
into
ss
jb
in
sbb
push
hlt
cmp
sub
adc
test
add
mov
xchg
out
adc
mov
test
jle
je
sar
xor
cmp
cld
mov
out
mov
sbb
test
push
push
mov
push
dec
seta
push
mov
ds
jg
add
dec
mov
mov
xchg
xchg
push
mov
dec
cmpsl
call
call
popl
sbb
adc
pop
dec
pop
imul
popa
add
adc
inc
xchg
mov
adc
pop
btc
test
daa
sub
aaa
xor
aam
mov
pop
sbb
push
jmp
add
inc
andb
sub
jg
push
je
cmp
jbe
push
add
mov
mov
inc
pop
adc
jmp
das
push
lret
clc
js
movl
js
ret
int
inc
or
push
xor
push
mov
cltd
jg
lock
sbb
cli
pop
inc
icebp
or
inc
inc
rcr
pop
aam
rolb
rcll
pushf
xchg
sbb
cmp
sub
lret
mov
mov
dec
insb
jg
add
pop
or
push
cmp
faddl
hlt
xchg
jo
mov
mov
cmp
inc
fcmove
sub
scas
adcb
sub
inc
jo
ljmp
pop
xor
js
aaa
aam
push
cmp
xor
loop
rclb
cmp
call
adc
sahf
jae
jb
push
pushf
movsl
xchg
aad
or
pushaw
mov
fcmovbe
adc
mov
outsb
lea
insb
dec
shll
add
jne
jmp
xchg
mov
push
mov
stos
add
fdiv
add
pop
push
sub
addr16
mov
adc
cmc
fistpll
dec
pusha
jle
push
xor
pop
div
push
shrb
mov
inc
or
mov
orb
mov
or
push
addl
push
dec
inc
adc
aaa
sbb
addl
adc
add
sub
pop
inc
xorb
dec
add
inc
lods
mov
les
mov
sub
mov
fidivrl
andl
gs
in
jo
into
and
daa
push
test
lret
nop
sahf
xchg
add
or
es
xchg
jo
je
pop
sbb
imul
ret
jo
fidivl
adc
sub
or
fidivl
bound
add
rol
adc
pop
mov
lret
fiaddl
push
xor
inc
lods
xor
fwait
aaa
movsl
out
shrb
pop
divl
int3
dec
sti
jmp
adc
into
pop
jno
lock
mov
or
scas
pop
and
in
pop
pop
add
cmpb
sbbb
psubusw
mov
outsb
add
loopne
clc
jg
fs
test
pusha
jmp
movq
movaps
push
pop
outsb
fcmovne
clc
jae
xor
jle
xor
cli
shrb
std
add
ljmp
data16
push
js
and
lret
or
jg
dec
mov
xchg
adc
jnp
mov
out
mov
mov
adc
push
pop
adc
add
nop
pop
add
fxch
mov
roll
jbe
and
sahf
add
pop
mov
int
cmp
test
sub
ret
adc
xchg
cmpsl
mov
pop
xor
jg
aam
pop
push
jnp
imul
outsb
clc
ja
xor
and
ret
sbb
test
push
fstpl
clts
orb
mov
fwait
xor
mov
inc
aaa
mov
mov
mov
and
or
jns
adc
adc
nop
adc
and
hlt
imul
arpl
jns
sub
jne
negb
movsl
inc
lock
cmp
jne
or
addr16
insb
imulb
loop
adcb
push
push
or
or
movb
ret
and
lcall
jmp
or
pop
leave
leave
sbb
in
adcb
cmp
pop
enter
cmp
or
push
and
mov
pop
daa
inc
adc
mov
movsb
jnp
je
jp
daa
or
jne
sbbl
mull
movl
out
mov
dec
addr16
and
lock
xor
lods
sbb
test
mov
cmp
inc
jnp
jmp
add
pop
or
mov
and
and
hlt
or
push
mov
pop
push
pop
shr
push
hlt
push
xchg
adc
out
mov
scas
data16
or
push
adc
nop
adc
adc
in
mov
cmp
std
xor
inc
lock
and
push
cmp
add
pop
dec
int3
cmpsl
out
pop
test
daa
jge
sbb
std
repz
out
outsl
pop
sbb
rorb
mov
sbb
or
xor
ss
cs
outsb
mov
mov
sub
frstor
add
data16
aas
sbb
or
test
xor
dec
lock
pop
xchg
jge
and
ret
add
add
sub
je
jae
enter
cmp
arpl
cmc
jno
xchg
cmp
jns
sub
adc
adc
cmp
js
pop
shr
arpl
or
mov
icebp
mov
sahf
rcl
add
cmp
push
push
cs
mov
or
pushf
pop
test
sbb
push
imul
scas
and
sbb
rcl
adc
lea
dec
and
mov
dec
pusha
dec
les
es
adc
dec
shlb
enter
mov
jb
push
inc
mov
adc
lods
rolb
hlt
xor
push
mov
ret
add
push
jne
inc
cmpb
out
orb
add
cmp
lods
mov
inc
inc
and
adc
or
or
mov
add
push
lods
ljmp
xor
inc
bound
mov
sub
mov
push
cmp
or
jo
hlt
xchg
mov
cmp
jle
pop
mov
shl
inc
xor
adc
sar
in
lret
leave
es
loope
or
cmp
mov
add
or
jo
je
jge
data16
xor
lret
jne
inc
aaa
push
sub
jg
push
loope
jb
pop
push
sub
inc
dec
scas
pop
adc
pop
adc
cmc
inc
lret
push
test
cmp
add
clc
sub
jbe
push
shlb
or
inc
imul
je
push
dec
insl
or
test
clc
addr16
aas
adc
fidivs
sub
and
fists
mov
add
test
je
or
enter
test
jb
add
jae
sub
test
sbb
addr16
addb
or
aas
sub
push
xor
daa
das
pop
xor
call
jns
rorb
cmp
xor
inc
andb
or
rcrb
jb
cmp
gs
push
or
imul
inc
enter
lock
sub
ds
mov
rcl
and
insb
cmp
movsb
mov
push
cltd
sub
jb
and
or
adc
inc
xchg
inc
sub
mov
push
sbb
lcall
pop
scas
insb
ss
mov
arpl
sbb
push
jbe
lahf
cmpsb
dec
subb
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
into
lea
cmp
aaa
xorl
sub
cmp
jne
lahf
cmpsb
mov
or
add
xchg
jnp
mov
sub
sbb
cltd
xor
in
sub
push
shrb
jne
popf
ds
add
lahf
jbe
push
add
cmp
sub
or
loope
xor
add
cmp
inc
popf
test
loope
dec
pop
add
inc
and
sbb
je
mov
push
mov
je
outsl
pop
ljmp
fadds
add
push
push
jbe
and
dec
add
sbb
jle
push
adc
adc
sbb
and
sarl
sbb
sbb
xor
ss
popf
jmp
mov
xchg
lret
pop
stc
dec
or
mov
or
in
add
out
pop
dec
inc
cmpsb
outsl
add
testb
lret
or
push
sbb
xchg
mov
or
fnsave
scas
or
jmp
or
or
xchg
mov
sub
aam
das
push
mov
loopne
rcrb
outsb
pop
mov
push
mov
inc
xor
mov
xor
cmp
test
shlb
std
pop
xor
out
push
repz
add
jg
lods
loopne
cmp
js
push
add
push
lods
ljmp
aad
sub
jmp
push
sub
inc
xlat
sub
push
or
cmp
outsl
js
or
pop
shrl
xor
fs
or
push
adc
sbb
add
sbb
imul
push
loop
or
push
sti
or
or
or
pusha
ss
sbb
jp
pop
sub
push
sbb
mov
jb
cmp
clc
jbe
add
arpl
sbb
js
pop
es
es
popa
shl
test
hlt
xchg
or
jmp
test
jne
test
mov
and
rolb
pop
pop
mov
lods
lods
cld
jbe
rol
outsl
mov
mov
xchg
je
sub
push
jae
and
pop
cs
in
es
add
test
xor
divl
bound
xchg
cld
pop
icebp
fstl
jb
jecxz
mov
xor
inc
add
cmp
dec
sbb
sbb
mov
inc
ds
adc
dec
add
roll
push
or
shlb
pusha
lods
push
outsb
pop
out
push
roll
add
loopne
adc
add
inc
mov
or
pusha
or
cmp
pop
mov
inc
dec
push
rolb
iret
rep
sbb
test
shl
je
mov
ret
data16
loope
loop
and
sub
into
add
out
or
mov
xor
push
ljmp
sub
shrl
inc
mov
jnp
shlb
frstor
inc
rorb
sbb
mov
or
repnz
and
pushl
sub
add
dec
jne
jmp
test
repnz
mov
mov
jo
es
jne
mov
in
xor
or
cmc
sahf
xchg
xor
push
mov
dec
pop
xor
or
add
daa
sub
adcl
mov
pop
jno
xor
push
shrb
jae
outsb
into
and
js
mov
fisttps
jne
mov
push
cmp
jne
mov
es
jne
jmp
mov
cltd
adc
or
and
jb
mov
dec
or
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
cli
lcall
add
inc
stos
inc
adc
or
sbb
ret
hlt
mov
test
xchg
sub
mov
dec
and
or
sahf
add
pop
inc
or
xor
lea
loopne
adc
adc
push
xor
addl
adc
and
add
xor
and
mov
pop
pop
push
enter
pop
ss
push
mov
dec
lds
push
roll
sarl
rolb
adc
adc
xchg
jg
movsb
rol
or
stos
addb
jne
dec
inc
sub
rclb
jge,pt
jecxz
pop
add
xlat
xchg
push
jae
and
iret
je
mov
or
aaa
pop
xor
cmp
jg
add
mov
inc
cmpsl
nop
ret
test
mov
scas
mov
mov
add
push
jb
ss
add
rorb
push
jae
out
fst
push
outsl
aaa
sub
mov
add
lea
push
and
pusha
inc
or
and
mov
test
jo
mov
jg
mov
sbb
lods
clc
pop
imul
xchg
stos
add
jo
sub
add
pop
xchg
or
mov
in
addl
cmp
xchg
push
mov
xor
adc
push
fidivs
int3
dec
adc
mov
inc
aam
lods
dec
inc
and
dec
aam
mov
add
test
lods
push
les
es
inc
fndisi(8087
loopne
mov
rorb
clc
andb
or
loope
insb
sub
fdivs
cmp
and
dec
fmuls
lock
and
shrb
hlt
sub
ss
or
cmp
sub
cmp
lret
add
sbb
fsub
adc
xorb
lds
mov
pusha
add
sub
dec
ss
int3
cwtl
mov
insb
pop
mov
cmp
lcall
shr
ljmp
leave
mov
inc
je
and
inc
movb
mov
fmuls
std
mov
cli
or
add
jmp
or
mov
inc
inc
push
repz
ss
jmp
pusha
scas
mov
pop
add
mov
inc
cmp
jb
addl
shll
sub
mov
add
inc
loope
movsb
and
outsb
adc
inc
xor
hlt
mov
push
clc
mov
ret
iret
pop
js
insb
dec
push
sub
or
cli
fistl
in
shl
push
adc
jle
xchg
les
divl
lret
add
outsb
jge
in
das
and
xor
jo
and
sbb
test
push
out
test
xchg
stos
jne
sahf
lcall
cli
ss
cli
outsl
es
cmp
je
test
je
std
cmp
jae
and
faddl
aam
xchg
mov
outsb
or
cld
or
movsb
aaa
sbb
mov
adc
or
xchg
lock
das
xchg
inc
lcall
aam
ljmp
jg
cs
add
dec
sahf
add
loopne
cmpl
mov
mov
ja
loopne
cmc
inc
call
add
inc
jns
pop
inc
jmp
cmp
mov
add
add
sub
sarl
pop
shrl
stos
pop
inc
adc
cmp
inc
push
xor
adc
stc
sub
mov
cmp
je
cmp
and
ja
xchg
adc
adc
pop
fsub
lea
mov
js
or
mov
lea
rclb
mov
and
je
add
push
pop
lret
sbb
inc
xor
test
pusha
sbb
inc
stos
jno
jmp
pop
ret
add
les
or
sub
xor
pop
adc
call
jb
rcrb
scas
sbb
and
rclb
push
sbb
push
rclb
add
loopne
std
mov
sbb
adc
sbb
enter
xor
jns
mov
push
daa
test
out
inc
mov
insb
adc
add
aaa
rolb
xor
or
sub
and
xchg
or
mov
mov
cmpsl
mov
or
add
repz
mov
add
jb
add
and
add
cmp
rcrb
sub
sub
dec
call
push
cltd
nop
add
test
inc
xor
addl
push
adc
aaa
and
or
xlat
mov
pusha
cmpsl
dec
jmp
insb
sbb
dec
enter
insb
ljmp
jne
cwtl
sub
lods
outsl
adc
xchg
ds
test
lea
int
jo
rol
lods
adc
jb
lea
jbe
sub
js
pop
dec
test
loopne
and
mov
push
pop
cmp
or
cmp
mov
cmp
mov
mov
inc
scas
pop
ret
es
sbb
mov
mov
jl
or
add
push
or
loopne
add
testl
or
jge
lret
jmp
dec
push
popa
and
and
addb
lcall
stos
in
imul
mov
dec
ja
or
ret
add
pop
popa
pop
ljmp
add
push
shrb
add
jmp
mov
js
jo
or
push
mov
popa
pop
jp
jb
and
inc
clc
pusha
hlt
push
in
inc
xor
inc
cltd
scas
nop
inc
jecxz
inc
sub
pop
test
int3
add
mov
ret
mul
inc
sub
in
sub
mov
mov
push
incl
mov
sub
inc
push
or
out
stos
ret
cmp
daa
frstor
add
rcrb
cmp
adc
jl
pushl
cmpsb
push
add
ljmp
add
mov
xor
outsb
add
dec
jle
inc
mov
sbb
jne
ja
invd
in
xchg
dec
mov
dec
inc
dec
test
and
lods
aas
subb
js
dec
cmc
inc
mov
cld
lahf
add
lret
sbb
out
inc
fstp
xchg
dec
sarb
jmp
pop
push
pop
test
inc
sub
shl
jbe
xorb
jmp
rorb
je
push
insb
push
xchg
cmp
push
rorb
addl
decl
push
dec
dec
cld
cmp
pop
mov
test
cltd
pop
idiv
lea
orl
xor
ja
pop
rorb
dec
movsl
ljmp
adc
rcl
xorb
sub
lods
dec
or
or
ficoml
inc
aad
lods
dec
loopne
dec
push
fiaddl
add
orb
xchg
mov
jo
mov
dec
cmp
int3
fdivrl
ret
inc
or
mov
push
in
sbb
inc
out
fdivp
adc
or
repnz
lahf
ss
add
or
jge
js
notb
push
and
xchg
loopne
and
ret
push
insb
and
adc
sub
in
cmc
fdiv
fcoms
lods
mov
mov
push
in
mov
shll
adc
jge
sub
pop
or
jg
dec
pop
ret
or
push
hlt
rorb
xchg
jo
mov
inc
andl
mov
faddl
idiv
pop
js
adc
outsb
clc
fs
cli
add
sbb
adc
inc
je
sbb
and
push
ficompl
popa
jp
test
adc
jbe
mov
movsl
jmp
dec
je
add
or
pop
mov
sbb
bound
push
xchg
addr16
inc
add
sub
push
lea
push
pop
mov
mov
sbb
push
push
push
fisttps
push
lea
push
test
jbe
adc
outsb
mov
insb
dec
sub
js
jo
inc
xchg
push
fistpl
push
push
addr16
jne
mov
bound
add
dec
leave
add
push
push
inc
jne
adc
pop
ds
dec
push
repnz
mov
je
cmp
iret
mov
in
and
cmovp
sub
jns
daa
pop
je
or
mov
push
mov
jo
sub
add
inc
dec
pop
mov
iret
or
clc
dec
jmp
xchg
jbe
leave
add
inc
imul
add
jmp
rorb
add
dec
clc
sarb
inc
push
out
push
jmp
sub
push
adc
data16
sbb
pop
pop
and
rcl
loopne
fcoml
sub
xchg
test
movb
inc
incb
mov
orb
jmp
cmp
jae
sbb
ljmp
pop
mov
test
or
or
loopne
push
add
cli
mov
mul
mov
add
add
sub
arpl
mov
inc
sbb
xor
pop
mov
adc
loope
mov
test
shrb
xor
xor
jl
je
or
dec
and
push
sar
mov
clc
mov
pop
jle
int
out
dec
mov
xchg
cli
or
lea
inc
xchg
xchg
and
int
jb
dec
dec
add
jo
addr16
xor
xchg
or
int
add
or
lock
lods
push
pushl
adc
push
pop
stos
nop
push
shl
push
and
lcall
sub
and
rclb
xchg
lods
push
push
sti
or
mov
imul
cmp
into
cmp
lret
scas
scas
push
push
add
sbb
push
adc
xchg
imul
imul
lcall
mov
inc
xor
ret
test
jl
inc
inc
cmovbe
mov
and
add
jge
sub
cmp
inc
or
adc
stc
xchg
clc
push
xchg
mov
mov
mov
fs
cmc
mov
fs
dec
push
mov
mov
jge
insl
inc
dec
mov
pop
adc
push
mov
push
testl
cs
xorb
add
cmp
xchg
test
inc
mov
js
out
add
and
testb
pop
inc
mov
or
and
out
inc
mov
inc
rcr
add
clc
sbb
shrb
xor
mov
jb
test
or
jbe
sub
pop
sets
sub
imul
cld
cmp
in
js
in
push
jl
nop
jae
lock
aam
xor
or
dec
adc
dec
mov
add
js
mov
lret
xchg
dec
inc
mov
pop
xorb
mov
subl
pushf
les
xchg
pop
shrl
rcll
push
add
and
or
mov
jb
mov
or
cwtl
push
enter
shll
popa
mov
push
adc
xchg
jp
and
cltd
stc
mov
and
fs
mov
mov
mov
mov
inc
inc
imul
jge
dec
pop
ss
gs
pop
movsb
adc
outsl
lcall
movsb
add
xchg
add
ret
fmul
inc
inc
add
inc
and
jmp
sub
push
xor
les
and
adc
ret
in
dec
pop
dec
xchg
pop
test
jle
shll
loopne
adcb
jl
or
pop
ret
enter
dec
cli
test
and
shrl
test
fisttpl
jmp
adcb
adc
cmp
leave
and
adc
push
in
push
push
push
mov
ljmp
dec
push
fwait
or
mov
cmpb
jmp
sub
dec
call
imul
mov
push
in
xor
jmp
pop
mov
or
and
stos
adc
or
arpl
mov
cmp
xlat
repnz
jle
push
sbb
and
mov
fsubrl
ljmp
add
stos
mov
add
adc
in
adc
je
insl
out
or
pop
jne
mov
les
pop
dec
xchg
in
es
popa
jp
inc
and
das
dec
xchg
add
push
ret
popw
dec
pop
jae
jns
dec
ss
cmpsb
push
xor
aad
dec
mov
pop
sub
scas
add
cmp
push
movsb
push
aad
mov
pop
cltd
rclb
inc
adc
push
inc
or
imul
cmc
xchg
test
jg
inc
jge
roll
cmp
sub
mov
andb
pop
jb
pop
rclb
adc
out
movb
mov
dec
pop
pop
jne
out
mov
add
sahf
loop
lods
or
rep
jmp
shlb
fidivrl
outsb
jb
les
enter
insb
out
xor
cmp
xor
inc
and
lahf
testl
roll
mov
test
add
add
mov
mov
movsb
rclb
dec
add
cmpsb
xchg
out
cmp
add
pop
or
push
cld
div
push
in
cld
lahf
out
push
in
aam
inc
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
xchg
cmp
loop
shll
add
sbb
jmp
cmp
inc
pop
push
add
nop
inc
pop
sti
popa
xor
and
pop
jno
fcomps
lea
jl
cld
pop
and
mov
cld
out
mov
push
adc
insb
xchg
daa
stc
divl
lret
popa
pop
nop
rclb
hlt
push
outsb
xor
sbb
fiaddl
jl
mov
fstl
sahf
inc
xchg
push
ficoms
push
add
imul
out
mov
xor
bound
jo
js
orb
pop
lahf
mov
sbb
out
sahf
out
adc
adc
sahf
out
sahf
or
or
add
mov
int3
or
push
in
adc
aaa
push
add
mov
icebp
xchg
pop
push
adc
push
dec
cmp
sbb
fadds
xor
cmp
imul
scas
aam
inc
je
mov
test
adc
inc
or
jne
pop
movl
aaa
lock
rol
cli
add
scas
fisubrs
pusha
xchg
add
sti
adc
jg
sub
adc
sar
imul
sub
inc
and
cmp
lret
adc
ret
dec
imul
push
xor
test
pop
xchg
push
mov
push
xor
jns
and
popa
movsb
jo
popf
push
out
lock
and
inc
idivb
cmp
lods
push
enter
fstl
shr
imul
rclb
sbb
or
inc
outsb
sbb
shll
out
mov
xchg
xchg
and
jne
cld
test
and
icebp
jnp
pcmpgtb
inc
push
das
push
or
aam
push
add
or
adc
popa
and
xchg
add
or
add
push
inc
or
std
call
aam
out
pop
loop
jae
dec
shlb
sbb
mov
cmpb
lock
call
mov
or
sub
mov
inc
stos
mov
xor
mov
mov
xchg
jmp
mov
leave
adc
inc
xor
std
add
add
push
push
shrl
mov
aam
lods
push
mov
clc
mov
or
rol
pusha
dec
stc
repnz
inc
inc
sub
dec
js
adc
test
adc
fstpt
mov
push
xlat
inc
and
movsb
adc
jle
cli
dec
push
add
rcr
mov
jp
add
add
je
sub
pop
outsb
shr
cld
jmp
sub
rorl
lret
je
rep
adc
ljmp
fstpt
sub
jmp
subb
mull
gs
insb
data16
in
or
fs
out
pop
pushf
popl
psubusb
stc
add
mov
loopne
adc
mov
add
cmpsl
fstp
mov
js
mov
push
pushf
sarb
out
cmp
cmp
adc
fcoml
enter
cwtl
pop
imul
xor
adc
dec
insl
cmp
js
cmpsb
inc
or
sub
xor
js
ror
xlat
mov
pop
ret
push
sub
insb
sub
xchg
inc
sbb
loopne
movsl
xchg
dec
adc
insb
movsl
je
adc
sub
pop
push
xor
test
or
std
fcoml
lret
mov
mov
pop
pop
pop
jle
in
popf
enter
rolb
les
out
imul
fbld
aam
aaa
dec
cld
xor
push
rcrl
pusha
adc
and
pop
rorb
in
xchg
pop
sbb
int3
jno
insl
push
jne
inc
and
cld
mov
or
pop
ss
or
push
add
pushf
dec
clc
push
jmp
test
inc
and
shrb
add
adc
and
dec
add
cmp
and
sub
xchg
jb
test
pop
clc
or
daa
or
dec
or
fwait
imul
pop
xlat
stos
mov
jecxz
ljmp
test
xchg
mov
mov
jne
scas
xor
push
inc
call
inc
jo
call
adc
pop
inc
cmp
mov
sub
fucom
pop
divl
loop
shlb
movsl
push
jo
hlt
inc
add
mov
dec
test
or
arpl
inc
dec
frstor
or
and
jns
cmp
shrl
push
bound
or
add
jg
pop
dec
push
inc
aad
and
orb
popf
push
and
sahf
or
push
int3
into
mov
test
popa
add
dec
jmp
popa
leave
cs
ret
push
push
cmpsb
sbb
dec
dec
outsb
hlt
dec
or
or
xchg
lret
lret
popf
mov
jae
pop
fdivrs
in
aaa
cmp
popf
sub
pop
dec
xor
je
add
insw
movsl
sub
inc
xor
xchg
call
in
or
xchg
loopne
cmp
jo
lods
data16
repz
and
sti
jo
lea
mov
ja
xor
mov
adcb
and
das
sbb
sub
out
test
xor
pop
sar
pop
lods
movsb
mov
xchg
push
xorb
addl
lea
frstor
fdivr
push
out
shll
adc
mov
je
or
je
or
push
sub
inc
xor
dec
dec
scas
mov
pop
or
add
jns
xchg
add
and
cs
jo
push
sti
mov
adc
xchg
jo
cmc
sub
add
adc
push
imul
mov
outsl
mov
lea
ja
movsl
dec
enter
add
mov
pop
sbb
mov
push
or
push
insb
mov
mov
cld
test
push
ds
jle
sub
adc
sbb
pop
scas
fcmovne
in
and
js
add
push
jb
dec
dec
jge
mov
xor
movsl
inc
mov
fs
cmp
mov
imul
mov
pop
adc
add
mov
loopne
push
call
dec
inc
jno
in
add
push
movups
add
or
sahf
cmp
test
data16
inc
je
pop
sti
or
repz
or
add
cmp
dec
mov
mov
dec
mov
adc
adc
popf
fisttpll
push
arpl
negl
xor
add
cmp
jbe
dec
pop
mov
add
jo
or
dec
and
out
shrb
push
or
fmull
push
sub
in
mov
add
lret
sbb
mov
out
or
adcb
sahf
dec
xor
inc
inc
push
insl
cmp
jl
xor
ds
xor
lods
ret
pushf
sub
shl
mov
mov
shrl
cs
mov
adc
or
xchg
mov
int
mov
in
and
mov
sti
adc
aas
lds
fdivrl
inc
mov
aaa
inc
lods
cwtl
ds
xlat
mov
mov
dec
xor
rorb
mov
shl
rol
xor
shl
adc
sbb
xlat
in
push
movsl
sbb
mov
sub
loopne
add
and
rcl
sub
addr16
xchg
jo
fstl
pusha
je
or
sub
cmpsb
filds
fsubrs
je
add
mov
cs
fildll
test
adc
fidivl
lods
fldenv
in
adc
adc
gs
sbb
adc
or
and
shl
dec
push
add
cmc
push
mov
shlb
movsb
addr16
into
cmc
sti
movsb
mov
jmp
cmp
jle
popa
mov
loop
and
pop
or
loope
mov
js
enter
mov
rorb
cmp
fs
jmp
push
insb
push
testb
and
nop
mov
cld
adc
pop
int3
sbb
xchg
mov
in
inc
sbb
cmp
push
fadds
mov
jne
rolb
pop
jne
popf
push
push
push
xor
push
inc
scas
data16
enter
call
sbb
aas
sub
mov
add
stos
mulb
js
push
add
mov
sbb
dec
lret
cld
pusha
cld
or
adc
mov
push
inc
daa
add
jno
sbbl
arpl
xor
add
in
loope
or
push
push
into
mov
dec
or
bound
inc
mov
rcll
dec
sub
mov
es
int
or
in
arpl
cltd
adc
mov
jl
jae
add
add
fwait
push
mov
neg
mov
add
mov
pop
ljmp
or
sbb
hlt
les
mov
mov
or
dec
call
lea
sbb
cwtl
inc
mov
cltd
push
test
add
mov
mov
clc
repnz
sahf
add
out
adc
mov
mov
inc
cmp
ljmp
in
imul
mov
and
xor
aaa
push
mov
or
or
dec
clc
adcb
out
xchg
push
repnz
sar
ret
js
ret
inc
fildll
add
push
sub
add
sub
movsb
inc
push
sub
dec
shlb
mov
mov
or
dec
dec
pop
push
decl
jl
fcoms
mov
in
jle
cmp
xor
dec
sub
or
pop
pusha
rolb
jo
mov
jae
enter
dec
jb
test
cmp
adc
xor
cmpsb
leave
gs
inc
aam
adc
js
cmp
push
cmpsw
sub
jmp
dec
adc
pop
xchg
cmp
jle
sub
pop
jl
ret
jg
jmp
pop
lock
dec
sub
xchg
jmp
pop
int
fnstenv
dec
shll
mov
mov
xchg
or
add
add
adc
out
mov
mov
mov
push
sbb
mov
cmp
xlat
inc
movsb
adc
mov
popf
jne
push
or
pop
mov
testl
xor
aad
inc
fisubrs
sub
js
lcall
xchg
and
push
add
js
sbb
ja
cs
lcall
push
js
js
shll
ja
sub
xor
js
add
js
or
fs
js
shlb
jns
js
push
enter
jns
iret
jnp
mov
or
push
orb
add
jns
jns
lcall
push
push
andb
imul
add
mov
sbb
mov
loopne
insb
xor
adc
push
push
jno
icebp
pop
hlt
mov
sbb
push
pop
adc
mov
ret
adc
pop
jg
add
mov
in
sbb
or
pop
nop
sbb
and
outsl
fists
pop
push
inc
mov
mov
add
rcll
sbb
sbbl
cmp
push
call
pop
and
or
push
or
test
mov
sub
testl
stos
mov
or
add
xchg
aam
and
jo
ficompl
into
js
imul
jl
inc
ficoml
rcll
cmp
fadds
pop
add
pop
cmp
xor
aam
mov
fisubl
sub
mov
dec
pusha
jo
push
lahf
mov
mov
pop
lods
push
pusha
add
aam
je
mov
out
add
dec
dec
pop
add
in
sbb
pushl
insl
and
lahf
xchg
test
jp
add
push
mov
stos
mov
stos
xchg
daa
es
push
adc
mov
daa
adc
jmp
inc
loopne
sub
pushf
mov
mov
fiadds
insb
cltd
jns
adc
and
push
popf
or
and
in
mov
sub
jmp
push
pop
sbb
sub
mov
xchg
mov
inc
clc
inc
pop
outsb
or
fsubr
inc
xchg
push
mov
and
jb
movsl
enter
add
fsubl
cld
add
adc
cmp
push
jbe
add
popa
mov
add
sar
cmp
add
imul
nop
mov
nop
jo
std
sub
sbb
aas
in
lock
ss
insb
xor
adc
push
imull
mov
mov
pop
and
mov
push
mov
sbb
ss
xor
jbe
pop
jo
iret
sbb
enter
sar
popa
pusha
fildll
flds
iret
outsl
sub
aam
sub
push
and
pushl
les
xchg
push
pusha
sub
out
pop
pop
push
add
or
movsb
adcb
int
mov
hlt
inc
into
jl
pop
idivl
inc
mov
jbe
mov
sbb
jb
mov
sub
test
shlb
push
xchg
pop
mov
or
rcrb
cmc
jo
and
xlat
in
pop
arpl
aad
push
adc
sub
rclb
bound
mov
sub
cmp
fsts
fld
mov
js
push
pop
push
add
sahf
pop
push
ret
imul
lret
pop
jl
jmp
jle
xchg
sbb
hlt
or
loope
lds
jg
push
add
fldenv
push
fs
ss
imul
sub
add
xchg
test
mov
adcb
pop
xlat
and
lock
xor
lock
adc
rcrl
cmp
loopne
adc
xor
push
xor
loopne
pop
cld
adc
movb
xor
push
or
inc
sbbb
or
testb
sbb
test
cld
mov
test
mov
sbbb
fwait
enter
dec
xchg
pop
xchg
xchg
push
inc
mov
mov
enter
es
xchg
dec
adc
fisubl
add
adc
and
push
cmp
imul
jmp
test
cmp
xor
int
arpl
push
pop
mov
mov
add
push
cmpl
and
and
push
rorb
cmpsl
xor
pusha
loop
rcl
sub
inc
or
sub
or
lds
js
imul
lods
lret
test
es
adc
cld
xchg
inc
addr16
or
add
jne
cmp
push
push
imul
xchg
cmp
xor
out
jmp
mov
clc
pusha
out
sbb
dec
les
notb
in
dec
jecxz
sbb
inc
and
lcall
cmpl
jne
push
fnstenv
cmp
aam
das
nop
add
les
out
aaa
inc
add
pop
mov
dec
push
clc
hlt
ret
faddl
inc
inc
orl
jae
imul
movsl
or
or
or
les
jbe
enter
mov
mov
or
shlb
push
loopne
mov
ja
test
test
push
inc
jo
mov
lods
subb
test
nop
subb
roll
push
pop
ja
jl
sub
mov
jge
out
and
mov
ret
fldl
push
adc
mov
dec
pop
add
add
pop
adc
mov
pop
adc
sub
and
add
pusha
add
push
inc
cmpsb
pop
scas
and
loopne
lea
pop
hlt
icebp
mov
inc
push
jns
rcr
cmp
and
jne
jbe
add
scas
or
pop
and
mov
adcb
dec
outsb
dec
push
jno
cmp
fldt
cmp
inc
cmp
pushf
pushf
pushf
das
es
pop
pop
or
adcb
in
push
xor
pushf
push
rcrl
movb
lea
jns
int
dec
leave
add
fwait
add
lods
cmp
dec
nop
stos
add
sub
clc
adc
push
jns
push
mov
hlt
testl
add
mov
sub
push
sbb
call
test
add
sbb
test
mov
in
mov
jne
loopne
jb
out
sub
xchg
xchg
xchg
addr16
add
mov
sahf
insl
and
orb
jecxz
call
js
sbb
xchg
xchg
in
cld
cmpsl
add
mov
mov
jp
stc
sub
hlt
mov
or
out
push
add
in
xchg
adc
nop
mov
cmp
xchg
mov
mov
es
js
adc
lcall
insl
pop
xchg
push
es
mov
repnz
fcoml
add
js
call
and
pop
sbbb
lods
pop
add
and
dec
or
leave
fmuls
loopne
xchg
movsb
push
mov
pop
xor
leave
inc
rolb
subb
ljmp
dec
and
in
push
add
in
push
add
nop
and
aam
leave
push
add
sti
imul
nop
dec
xor
in
add
add
test
pop
or
or
shlb
xorl
js
jae
in
adc
shrb
add
jg
push
push
in
roll
repz
test
nop
fwait
shlb
lods
jg
out
sbb
mov
cmp
inc
ljmp
loope
xchg
sub
mov
fmul
pop
push
xchg
fisttps
mov
clc
xchg
outsb
jmp
fs
xchg
inc
mov
add
jne
cmp
rcll
sub
je
jg
adc
mov
iret
adc
jmp
push
das
mov
or
sbb
pop
dec
add
push
cs
dec
inc
add
sahf
pop
in
jg
pop
shr
lds
jle
add
dec
mov
add
add
or
push
fildll
cmp
and
ljmp
mov
fisubl
xchg
popa
xor
xor
rolb
fldt
or
rcrl
xchg
into
pop
push
add
sbb
je
movsl
mov
add
mov
mov
or
je
test
xor
sbb
cmp
add
adc
dec
rcll
imul
xchg
movsb
dec
dec
sbb
cs
and
in
or
dec
lret
add
adc
shll
pop
and
add
div
aas
pop
sub
mov
mov
inc
stc
sahf
push
movsb
in
sbb
jns
adc
dec
push
out
add
push
cli
add
sub
sarb
mov
sub
add
add
test
cli
mov
and
ss
out
and
mov
add
int
faddp
ja
sub
or
or
inc
add
ja
mov
scas
jbe
loopne
ficoms
push
sub
add
push
imul
lods
gs
xor
sub
in
dec
ljmp
inc
int
or
cld
mov
jno
pop
int
out
incl
push
sbb
lods
jmp
and
sarb
sub
mov
push
pop
mov
jo
jmp
lea
lods
lahf
push
xchg
or
std
out
cmp
and
mov
es
ficoml
and
fmul
rorb
divl
lods
dec
adcl
sub
mov
sbb
fs
mov
ja
xchg
popa
pusha
sbb
xlat
sub
cltd
sub
fdivrs
xor
cmc
and
push
add
unpckhps
jno
cmpsl
pop
test
push
cmp
insb
push
pusha
scas
xorl
mov
cmp
ja
mov
xor
jmp
jne
movl
incb
sti
or
in
cmp
std
jne
lods
jmp
sub
pop
adc
cld
cmc
add
or
add
shlb
cwtl
add
popw
jo
repnz
adcb
loop
push
or
xor
andb
xor
push
aas
adc
loopne
push
xor
into
jb
or
rolb
cwtl
cltd
sbb
cmpsb
movsl
push
daa
insl
push
add
push
and
aaa
dec
dec
mov
and
rolb
jnp
inc
sbb
jae
cmp
jbe
cli
inc
shl
jne
js
shll
mov
nop
pop
lods
ror
cmp
lods
imul
loopne
mov
aaa
mov
movsl
jno
sub
sub
push
inc
push
jmp
loopne
subb
inc
cmp
lcall
dec
js
movb
shlb
clc
sti
rolb
add
jb
mov
out
xor
pop
inc
je
push
mov
fcoml
mull
dec
sub
hlt
loopne
dec
out
dec
jne
mov
dec
addl
cmpsl
or
sbb
jle
jnp
or
xor
push
mov
outsl
leave
or
inc
dec
jne
es
pop
sbb
fildll
fisubrl
push
jnp
cmpsl
cmp
into
clc
push
enter
lods
repz
js
xchg
lods
dec
dec
mov
out
xorb
pop
xchg
je
fsubp
je
loop
mov
push
adc
and
out
ljmp
mov
push
and
add
pop
jno
jo
push
ret
or
jne
shl
pop
push
test
push
rolb
push
idivb
xor
xlat
testb
insb
ljmp
add
adc
and
sub
pop
popfw
das
or
xor
lock
fadds
adc
dec
out
out
mov
inc
sbb
inc
jmp
xor
dec
sbb
add
xor
add
sub
sub
ljmp
jo
add
adc
fcompl
xchg
jmp
int3
les
and
sub
mov
add
std
mov
sbb
test
and
xchg
push
pusha
and
lret
jb
inc
pop
xor
push
xchg
add
jge
dec
push
sbb
and
lea
cld
push
aad
or
and
add
cmpl
inc
ret
ret
adc
mov
add
mov
in
push
cmpsl
rolb
pusha
inc
add
daa
adc
add
and
je
cmp
imul
pop
add
mov
pop
adc
test
mov
scas
inc
mov
jmp
lahf
das
adc
in
sbb
les
xchg
xchg
pminsw
and
xor
shrl
sbb
cwtl
daa
sbb
iret
ljmp
dec
xchg
jg
pop
or
fadds
jmp
cld
mov
add
and
pop
mov
jns
popl
test
pop
add
adc
mov
mov
fstpl
xor
test
addr16
add
inc
js
or
nop
js
add
or
sbb
loope
xchg
add
jo
test
jle
sbb
jo
push
inc
push
test
or
rcr
xlat
add
add
leave
mov
pop
pop
mov
test
mov
rclb
pop
ret
or
cmpsb
jge
cmp
js
xchg
add
jbe
sbb
or
inc
mov
or
je
ret
lret
adcb
push
inc
adc
inc
adc
aas
push
scas
ss
dec
pop
cs
imul
inc
movl
or
insl
add
sti
jo
pop
in
insb
lods
addr16
or
add
jg
pop
lods
add
mov
cmpsb
loope
sub
push
jo
inc
cmp
bound
mov
mov
push
imul
dec
adc
pop
faddp
in
and
inc
mov
mov
ss
xor
popf
fisubl
cmp
ds
and
pop
push
insb
push
mov
cmp
or
sbb
not
fcompl
jo
mov
pop
enter
xor
or
repnz
jno
or
and
push
in
add
xor
inc
push
in
inc
inc
arpl
pmulhuw
cmp
orl
sbb
mov
jecxz
push
adc
jae
aas
jge
jbe
and
pop
cmp
fists
xchg
dec
outsl
or
orl
jg
jge
jno
mov
adcl
mov
fwait
or
mov
dec
push
fstl
gs
jo
movsb
out
in
jb
pushf
cmp
cmp
or
mov
xor
es
adc
xor
mov
sbb
add
sbb
push
fwait
cmpsb
jp
and
and
xor
push
sub
or
mov
xor
pop
xor
das
mov
arpl
pushf
inc
push
xlat
cmp
nop
stos
lahf
xor
xchg
sbb
add
sub
fidivrs
xchg
inc
xor
add
lods
jne
fisttps
shrb
rol
mov
jae
por
dec
test
aam
jmp
lds
jle
out
cli
dec
and
rcll
in
shlb
sbb
mov
cld
frstor
lsl
sbb
or
and
jl
push
mov
clc
dec
mov
xor
jle
testb
sbb
je
mov
outsb
push
xchg
adc
and
inc
sub
push
or
shll
enter
or
leave
adc
dec
popf
icebp
add
add
ljmp
pop
mov
mov
mov
cmpsb
mov
jge
data16
cltd
ret
push
add
sub
and
pop
test
pop
fdiv
lret
lods
add
arpl
or
test
cmc
add
xor
lock
sbb
lods
pusha
sub
test
test
cmpsb
xchg
push
push
call
lock
xlat
sub
push
dec
fiadds
or
jle
xchg
popf
add
arpl
jno
xchg
add
mov
fstpt
popa
lcall
shll
in
xchg
pop
into
das
add
pop
inc
fstpl
push
dec
add
and
sbb
dec
orb
adc
mov
push
inc
in
lock
push
push
sbb
xchg
inc
xchg
inc
pushaw
and
push
std
mov
fld1
js
sbb
loopne
cmc
or
stc
cmpsb
les
mov
add
fwait
xchg
jmp
incl
in
mov
orb
jns,pn
les
dec
adc
mov
lock
clc
fstl
mov
jno
push
hlt
xchg
jne
lea
stos
and
push
xor
nop
and
jnp
dec
sub
xor
repz
cmpsl
stc
mov
imul
push
lcall
pop
mov
insl
imul
fdiv
xchg
mov
sub
mov
mov
mov
fs
cmove
into
jne
inc
idivb
dec
rolb
sbb
sbb
inc
mov
ffree
mov
jmp
inc
faddl
ret
mov
sub
and
or
inc
push
cmc
cld
repnz
dec
inc
mov
jmp
in
inc
jp
xchg
and
ret
and
push
push
test
xorl
mov
test
aad
insb
frstor
or
fsubs
aas
xor
jle
int3
inc
es
cmpl
push
adc
or
xchg
lret
in
int3
call
adc
enter
std
pop
rorb
lods
std
lahf
into
xor
cmp
fistps
in
jg
shrb
imul
mov
sar
sub
add
sbb
push
mov
dec
ret
push
aad
inc
jno
idivb
sti
mov
pop
xor
imul
jecxz
lcall
push
cmp
cmp
xchg
pop
inc
scas
mov
mov
lret
or
in
pop
mov
into
fcoml
ret
popa
mov
xor
test
xor
pop
or
add
pop
cmp
subl
add
mov
cli
mov
mov
pop
mov
mov
add
xor
push
mov
cltd
call
pop
pop
xchg
shlb
mov
or
inc
adc
dec
rorl
sbbl
jne
inc
sub
pop
aad
pop
das
push
mov
and
ss
andb
xchg
sarb
xchg
movl
in
cmp
inc
xor
xchg
inc
es
imul
imul
lcall
pop
sub
mov
pop
sub
and
test
xchg
movsb
jp
pop
push
jl
lea
mov
inc
scas
add
jmp
mov
fs
adc
loope
lea
pop
rol
cmp
jle
push
or
mov
sbbb
addr16
mov
cmc
push
inc
lea
sbb
in
pushf
adc
movsl
push
pop
inc
xchg
dec
push
adc
mov
imull
movsb
mov
add
push
cmp
sbb
lcall
xorl
lock
mov
lcall
or
adc
add
lods
xchg
rolb
sahf
daa
jg
imul
cwtl
add
xor
mov
sbb
scas
cmp
cmp
push
xor
les
inc
testb
inc
stc
rcrl
enter
mov
sub
je
add
or
mov
or
or
and
imull
push
xchg
and
dec
add
loop
adc
cmc
push
cmc
xchg
addr16
call
fsubr
or
xchg
mov
lcall
std
and
mov
dec
std
xor
pop
or
dec
cmp
mov
sub
std
adc
insl
xor
jb
lds
mov
imul
mov
mov
mov
sbb
scas
jne
subb
lods
mov
cmp
es
test
jno
cmp
xchg
shlb
insl
pop
inc
or
loop
fldenv
je
pop
mov
or
jl
fcomip
dec
mov
mov
mov
add
sarb
adc
xchg
lea
push
and
adc
pushf
sub
mov
or
push
cmpsl
and
out
push
ret
loopne
ja
mov
jecxz
cld
scas
test
jecxz
inc
daa
add
push
jo
inc
or
push
adc
nop
aad
sbb
sub
pop
lcall
push
ret
sbb
dec
inc
inc
inc
stos
test
insl
dec
sarl
dec
ja
adc
mov
push
inc
jmp
dec
daa
dec
cmc
in
punpckhwd
sub
dec
call
dec
and
fistpl
dec
inc
repz
aad
sub
sbb
sub
xor
aad
outsb
sub
dec
data16
inc
call
shrb
xchg
xor
adc
test
pop
dec
add
in
cmc
rorl
dec
dec
push
dec
jno
test
or
jmp
pushw
jge
test
sbb
jmp
test
sbb
in
pop
or
jg
int3
cmp
out
or
jmp
push
clc
cmp
jmp
test
xchg
inc
addr16
sbb
aaa
fisttps
or
rcl
xchg
rol
cmp
xchg
fildll
in
adc
jne
jmp
fwait
cld
xor
inc
and
pop
fstpt
sbb
mov
adc
lock
push
push
mov
mov
int3
nop
dec
pop
pop
xchg
xor
jmp
loope
push
dec
cmpsb
xlat
and
fadd
jmp
mov
xchg
mov
inc
mov
or
add
adc
add
dec
loope
test
test
daa
pop
mov
mov
mov
cmp
decl
ds
mov
or
movsb
lret
pop
std
and
iret
cmpsl
inc
add
movsl
repz
cmpsl
push
pop
cmpsb
test
stc
cmp
test
inc
pop
jns
test
xor
push
test
adc
add
andb
push
ret
xor
add
push
lret
call
xchg
andl
dec
scas
mov
aam
inc
mov
imul
pop
mov
sbb
xor
jle
cltd
lods
lds
or
sbb
out
jb
pop
lds
or
out
inc
imul
xchg
int3
mov
scas
ret
nop
lock
xor
adc
mov
pushf
pop
pop
jno
push
lea
push
pop
add
push
in
xor
or
add
adc
or
push
pusha
in
scas
stos
sbb
out
arpl
outsb
scas
mov
jb
insl
push
out
mov
aam
test
out
jb
or
xlat
adc
and
ss
out
inc
xchg
push
mov
xchg
xchg
xchg
xchg
in
aad
push
xor
icebp
sub
mov
lea
push
movsb
jb
jns
ljmp
cltd
pop
xchg
push
ud0
sbb
pop
dec
inc
cmpsl
inc
movsl
dec
icebp
popa
pop
xchg
movsl
nop
fisttpl
das
stos
repz
xchg
xchg
es
movsb
or
leave
sub
sbb
stos
sbb
jbe
push
cmc
dec
movsl
test
jmp
fdivs
xor
xchg
cmc
test
nop/reserved
in
repnz
mov
data16
dec
inc
sahf
add
mov
mov
test
add
pop
leave
inc
and
and
jb
pop
ret
xchg
xchg
and
inc
dec
dec
and
mov
or
xor
arpl
ds
ljmp
out
xor
nop
dec
aam
push
out
xchg
pop
and
test
jb
leave
inc
lods
lods
lods
jbe
movb
js
rorb
rorb
lea
mov
add
mov
notl
popa
jl
cmpsl
lahf
stos
icebp
and
sub
add
js
orl
pop
xorb
sub
clc
xor
xchg
mov
pop
je
repz
adc
stos
ja
cmp
xchg
sbb
adc
lret
dec
or
test
les
dec
inc
or
pop
pop
std
adc
sub
lods
ret
movb
iret
scas
aaa
push
xor
jl
lods
sub
inc
or
sbb
mov
ds
push
jmp
dec
stos
mov
mov
cwtl
add
push
mov
icebp
mov
push
mov
and
dec
or
mov
pop
mov
push
sahf
push
movsl
daa
pop
and
pop
fdiv
add
rorb
or
and
inc
shlb
pop
mov
lock
shl
mov
cmp
sbb
jne
add
or
mov
out
add
fadd
push
xor
push
push
test
fstpt
sti
jb
test
mov
add
or
je
mov
int
lret
sub
ret
adc
std
cld
rcrb
inc
jg
enter
adc
cmp
pop
outsl
mov
dec
add
xor
int
aas
mov
pop
or
test
add
nop
mov
and
jle
std
ffree
popa
add
sub
mov
sbb
adc
fucomip
stos
bound
cmp
test
lods
xchg
lret
and
lds
xchg
or
mov
test
inc
dec
jmp
adc
movb
inc
clc
xor
or
jo
push
lret
push
dec
pop
or
cmp
push
pop
fcomps
mov
pop
enter
pop
mov
jmp
in
or
add
sti
cmp
mov
push
dec
or
sarl
sbb
jg
jmp
add
inc
or
outsl
xor
xchg
stos
add
cmp
lods
shrb
insl
lcall
mov
adc
data16
push
scas
aaa
dec
add
movlps
cmpl
jg
andl
sbb
and
lret
pop
cmp
movsb
mov
mov
inc
sub
jb
cmpsl
testl
mov
pop
ret
cmp
lock
nop
mov
out
add
adc
jae
xor
mov
or
mov
pusha
or
cli
add
movlps
aam
mov
smsw
pop
pusha
mov
push
mov
mov
call
cmp
outsb
sbb
in
or
stc
mov
fs
enter
cmpl
lret
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
rcl
xor
mov
xchg
shrb
adc
jmp
rcll
pop
adc
inc
or
mov
clc
lcall
pop
mov
ja
sub
imul
pop
sbb
and
lods
rolb
mov
or
rol
loop
push
mov
add
rcrb
sbb
pusha
call
cmp
mov
fs
sub
out
xchg
inc
push
pop
fmuls
sbb
adc
inc
sahf
pusha
fstps
aas
gs
jmp
outsl
mov
jbe
add
hlt
dec
pop
pusha
mov
fs
mov
jle
test
test
subb
and
cmp
in
pop
pop
ljmp
dec
adc
add
inc
cvtps2pd
add
pop
shr
mov
add
xor
xchg
pusha
pop
adc
push
push
push
mov
xchg
add
shl
dec
gs
loope
cmp
enter
or
jne
dec
inc
insl
popa
inc
mov
decb
push
call
out
mov
add
or
or
aas
movsl
adc
int
loopne
jmp
push
inc
cs
je
and
cmp
lods
or
js
and
loopne
in
cmp
push
lock
pop
fwait
roll
jle
in
cltd
and
push
popf
addl
sbb
insb
popa
push
and
mov
in
jne
andl
mov
cld
jo
adc
pop
and
adc
movsl
push
shlb
fistpl
push
cmp
add
sbb
stos
fst
adc
scas
decb
lea
push
rclb
outsl
cmpb
or
add
add
fidivs
push
aas
js
aas
lea
add
add
or
mov
dec
daa
jnp
mov
sahf
push
xchg
test
pop
adc
pop
loopne
xor
outsb
dec
stos
inc
jecxz
xchg
sub
outsl
ret
jecxz
lret
push
je
std
pop
add
clc
push
sub
lea
psubsb
or
stos
jo
pop
push
xor
xchg
jmp
or
add
sbb
mov
push
push
pop
push
int
sarl
lea
sub
daa
dec
or
dec
ja
decb
lock
mov
adc
movb
enter
xor
dec
inc
inc
clc
or
movb
push
pop
inc
call
movsl
adc
sbb
add
ret
mov
sub
sarl
jge
mov
loopne
sti
push
push
addl
pop
idivb
daa
faddl
add
and
xor
aas
cmp
or
rorb
callw
and
into
sub
shll
xorb
mov
test
mov
out
jno
jmp
pop
or
dec
or
or
ret
incl
cmp
pop
ret
add
mov
jns
insb
inc
dec
inc
mov
orb
mov
rorb
adc
sbb
inc
jo
sbb
dec
outsb
dec
push
mov
mov
jg
sti
mov
push
testl
sub
or
mov
mov
jmp
lea
pop
pusha
sub
xchg
cmc
push
jl
imul
ds
fistpl
rclb
xor
mov
mov
mov
add
jmp
ljmp
or
je
push
mov
movl
push
ljmp
adc
out
dec
or
and
xor
pushf
mov
jne
push
fstl
dec
movsl
sbb
dec
movsb
movsb
add
ret
or
fisubl
mov
out
ljmp
lcall
mov
mov
push
xor
and
hlt
and
xor
inc
adc
jns
cmpsl
sub
lock
cltd
fistl
ficomps
and
test
dec
mov
test
mov
or
jo
subl
push
lret
xchg
movsb
adc
fiadds
mov
jae
mov
add
mov
push
and
sti
je
push
sbb
xchg
sub
push
lock
dec
jb
jb
mov
int
dec
jbe
pop
cltd
fs
dec
mov
and
out
add
sbb
pusha
rorb
jbe
popf
shll
arpl
pop
inc
xchg
xchg
das
push
mov
jb
pop
sbb
fildll
aas
addl
ret
icebp
frstor
and
fldt
loopne
in
xchg
pop
daa
jg
xor
out
loope
adc
jmp
mov
inc
cmp
xor
mov
or
and
and
jbe
inc
adc
cs
sub
sub
xor
cs
int3
adc
clc
push
cmp
inc
pop
sahf
lret
inc
dec
mov
adc
clc
mov
imul
loop
rcrb
sbb
movsb
pop
sub
adc
in
std
ja
pop
orb
mov
fisubrs
inc
add
movb
fiaddl
leave
push
clc
stc
add
popf
jo,pt
mov
lea
and
rcl
pop
in
inc
or
out
hlt
div
or
cld
mov
and
push
add
inc
adc
jbe
sarl
and
mov
test
cmp
adc
adc
push
daa
out
cmpl
aas
sbb
pop
inc
or
jne
fwait
xchg
dec
jnp
inc
mov
leave
add
sub
pop
adc
jne
popa
sbb
cmp
jle
lret
sbb
dec
inc
pusha
xchg
mov
sub
imul
popa
mov
push
sbb
pop
and
or
jbe
mov
sub
sub
sbb
aad
and
scas
add
push
and
inc
aad
in
cli
sti
sti
mov
adc
pop
and
hlt
jmp
adc
jno
inc
xor
lods
push
hlt
in
out
jecxz
outsb
dec
fcmovnbe
loopne
xor
push
es
mov
cmp
ret
inc
xchg
adcb
fs
mov
nop
mov
push
or
outsl
mov
jp
jle
jns
dec
ja
rolb
push
lds
push
add
les
adc
dec
divb
clc
lock
mov
and
and
or
mov
pusha
jmp
and
lock
cmp
pop
outsb
adc
inc
in
pop
lea
movsl
mov
adc
daa
add
jnp
cltd
int
push
hlt
mov
adc
cmpl
and
jb
mov
pop
xchg
test
or
add
ret
sub
mov
push
push
or
lock
adc
ficoml
or
mov
adc
push
lock
mull
ja
cs
lsl
jmp
push
pop
push
push
addr16
ja
shr
rcr
shr
rcr
or
mov
repz
dec
test
adc
mov
imul
jb
cmp
or
cmp
or
xor
and
iret
xor
push
adc
or
ficoml
lret
mov
push
ror
pop
xor
inc
sbb
clc
dec
xchg
xchg
adc
inc
imul
push
mov
inc
sbb
and
pop
not
lea
lahf
inc
cmpsb
popa
scas
xor
sub
addb
mov
adc
sahf
shr
sub
out
or
xchg
or
cmp
add
inc
cmpsb
dec
mov
out
lods
fsubrp
mov
jb
or
xchg
aam
sbb
and
movsl
dec
jl
mov
mov
in
cmp
sub
int
inc
xlat
push
les
jp
inc
pop
xlat
mov
push
cvtdq2ps
push
jo
and
push
add
stos
and
sarb
into
cld
and
or
jmp
push
push
cwtl
nop
rcll
adc
lods
lods
sbb
or
adc
leave
jmp
dec
and
and
cmp
cmpb
imul
mov
adc
popa
xchg
xchg
lret
jo
loope
jmp
jb
mov
out
int
sub
inc
push
jb
das
or
pop
pop
inc
jne
in
lock
movsl
mov
arpl
pop
inc
cmp
sbb
rcl
xor
cwtl
or
mov
xchg
xor
pop
call
push
lock
inc
incb
push
pop
dec
pop
dec
fwait
inc
sbb
sbb
stos
pop
into
add
sbb
pop
adc
or
sbbb
das
xchg
out
mov
cmpb
cmpb
sub
add
enter
insl
fcompl
pop
loopne
popa
icebp
mov
xchg
add
in
rcrl
mov
frstor
fcoml
mov
aas
and
add
out
lods
xchg
sbb
mov
cmp
sub
push
push
and
les
xchg
xor
ja
mov
bound
sub
arpl
xchg
jg
mov
dec
addr16
jmp
fistl
sbb
cmp
xor
sub
and
mov
test
sbb
inc
adc
inc
xor
add
add
or
xchg
test
imul
cld
cmp
sub
rclb
add
sub
cli
sbb
or
mov
outsl
fsubr
push
fildl
push
ss
shrl
xchg
sti
pop
push
push
sub
jmp
mov
shlb
mov
inc
stos
mov
jmp
adc
outsl
push
push
stc
mov
xchg
mov
or
or
sub
imul
orb
loopne
aam
jmp
add
push
or
rolb
fidivl
stc
mov
mov
movb
sub
ds
xor
push
or
adc
lea
sbb
call
cmp
jg
inc
jmp
clc
fsubs
pop
hlt
lds
xor
gs
add
push
push
movsb
fisttpl
je
jge
aas
sbb
mov
adc
cmp
into
in
test
xor
and
je
dec
insb
dec
mov
mov
ret
inc
lock
adc
xor
les
sub
push
adc
jne
push
adc
and
ja
pop
incl
mov
stos
add
ljmp
jg
ljmp
mov
test
push
push
dec
adc
push
and
ds
xor
iret
out
stc
jg
outsl
inc
or
jbe
jle
out
mov
jg
jg
jg
jo
mov
and
adc
mov
pop
dec
in
rclb
adc
sti
outsl
rorb
inc
out
js
sbb
mov
shll
jbe
or
pop
xor
dec
rclb
or
inc
inc
push
negl
ret
psubq
test
lret
ret
mov
or
pusha
das
shr
dec
movsl
and
pop
pop
int
inc
adc
shl
mov
into
test
pop
in
test
fsubrs
jns
push
cltd
mov
dec
push
and
cwtl
mov
aaa
xor
push
scas
loope
in
sub
imull
std
dec
mov
ljmp
push
pushf
mov
ret
add
movsl
idiv
imul
out
sbb
testb
or
ljmp
js
jnp
pop
add
push
jp
cmc
lret
push
xorb
adc
xlat
pop
dec
adc
mov
mov
dec
and
into
push
dec
negb
rcll
jb
and
or
int3
outsb
pop
xor
rorb
jge
adc
push
or
seto
pop
dec
orl
push
shlb
pop
loopne
icebp
outsl
pop
cmp
or
sub
lcall
jl
pop
subb
loopne
addr16
lea
add
mov
mov
rclb
adc
push
add
cs
push
push
add
pop
jne
mov
or
xor
mov
inc
sti
sub
xchg
cli
adc
lea
lea
or
lods
movsl
stos
add
int3
push
adc
bound
push
pusha
or
mov
and
mov
sub
sub
aam
lock
add
mov
cmp
fisubs
add
enter
sbb
push
test
loope
loopne
xorl
mov
mov
nop
pop
dec
and
pushl
add
pusha
or
jno
push
sbb
movl
ljmp
test
sub
ljmp
push
inc
cmp
cld
das
sbb
ds
pop
push
push
push
cmp
cmpsb
cmp
dec
ror
adc
cmpsb
add
or
xchg
xchg
clc
dec
out
fisubrs
jl
add
es
adc
leave
shrb
into
push
sbb
aad
andb
imul
test
sub
loope
and
inc
xorb
adc
rclb
pop
out
loopne
ljmp
inc
lods
dec
add
add
inc
mov
pop
mov
fstl
add
fcmovbe
scas
je
ds
mov
sbb
es
pop
pop
mov
pop
mov
pop
push
xchg
or
in
je
sub
push
loopne
jb
add
aaa
push
mov
and
outsb
test
and
mov
jmp
mov
lret
lcall
daa
or
sbb
jl
arpl
or
ret
loopne
mov
das
xor
shll
inc
adc
xorl
fcomps
fadds
cmp
sub
dec
outsl
into
mov
dec
pop
lods
push
dec
loopne
mov
cmp
lea
inc
inc
call
adc
or
pop
je
jo
out
push
ljmp
popf
xchg
cmpsl
testb
testb
insb
mov
cmp
xor
push
and
inc
push
call
sbb
fadd
les
sysexit
filds
ljmp
inc
jmp
dec
cli
and
aas
popf
pushl
leave
pop
ret
cmp
pop
cmp
pop
cmp
add
pop
or
add
mov
sub
inc
adc
or
jno
jo
cmp
dec
or
mov
cwtl
or
nop
pusha
lcall
push
sbb
rol
cmp
call
and
or
or
push
mov
cs
inc
pop
addb
ja
loop
bound
outsb
dec
iret
and
es
lcall
add
mov
cmp
clc
add
jnp
ja
je
in
or
sub
aas
mov
mov
movsb
cmp
out
mov
adc
jmp
mov
stos
popf
mov
inc
add
scas
pop
push
jl
filds
aaa
mov
mov
fs
push
sarl
and
or
cmp
xchg
sub
incl
add
push
adc
out
int
inc
and
jo
adc
sbb
mov
push
scas
mov
sub
ds
adc
clc
pop
jge
out
jge
rcrl
mov
nop
out
mov
fldl
jne
dec
dec
jae
imul
sbb
or
push
jmp
add
fs
push
icebp
dec
rclb
bound
jns
js
lahf
and
cmp
dec
or
orl
push
lret
out
dec
and
push
and
stc
sub
mov
mov
movsl
jbe
sub
mov
mov
stos
loopne
add
loop
je
mov
push
jge
loop
es
inc
nop
mov
mov
push
shrb
cmp
rcrb
xchg
in
testl
and
lret
jmp
lcall
or
iret
mov
icebp
orl
and
add
jg
cmpsb
lock
cmp
or
scas
sbb
jecxz
push
push
inc
jmp
int3
dec
xchg
icebp
and
sbb
mov
mov
dec
popa
sub
js
hlt
aaa
jne
test
add
mov
pushf
push
stos
sub
jp
cs
jge
add
inc
int
adc
sub
ds
xlat
test
cmp
sarl
adc
or
add
jp
cmp
add
out
in
negb
mov
xor
jne
test
pavgb
adc
cli
xor
test
fsubrp
cmp
jg
sarl
add
mov
mov
sbbl
sbb
mov
add
adc
movsl
add
mov
into
divb
sub
aaa
hlt
bound
into
mov
xlat
std
shll
roll
or
imul
rcl
jae
and
pop
mov
xlat
rcrl
iret
push
or
mov
or
inc
enter
cmpsl
and
aas
xchg
jp
inc
testl
imul
jae
test
loope
into
test
mov
inc
jne
inc
or
cmp
adc
add
xlat
xor
xchg
pop
dec
xchg
nop
sbb
je
ljmp
lret
add
fwait
insl
pop
and
add
test
mov
jo
in
push
clc
and
scas
ret
xor
fldt
cmc
cmp
jb
jp
pop
sbbb
shlb
pop
addl
adc
js
subl
pop
push
call
mov
jnp
sbb
sti
jg
add
mov
xor
or
sub
sub
sub
aam
mov
pop
mov
add
or
shr
aas
or
push
jae
sbb
clc
pop
mov
out
jg
or
adc
inc
mov
jle
into
testb
pusha
aad
je
cmpsb
imul
add
fadd
loopne
shr
or
mov
sahf
adc
xor
jne
outsb
mov
adc
outsb
sahf
mov
int
adc
loop
cmp
enter
xchg
sub
loope
lock
rcr
fiaddl
mov
testl
jmp
out
jmp
or
subl
fldenv
and
mov
mov
mov
loope
jl
rcrb
jmp
in
mov
shr
or
daa
mov
pop
dec
push
dec
into
jmp
lods
pop
xchg
movb
or
jno
les
or
sbb
pop
jae
xorb
lret
das
xorl
sub
xchg
pop
test
sbb
mov
movups
and
jo
mov
inc
mov
inc
in
xchg
add
sub
mov
adc
jns
faddl
push
push
mov
sahf
out
push
fs
inc
sbb
push
xor
adc
rcll
movsl
lock
add
testb
mov
testb
push
xor
icebp
push
je
addr16
bound
xor
sbb
cmp
push
inc
inc
out
add
inc
sub
pop
mov
pop
and
test
rorl
push
cmp
pop
mov
sahf
mov
push
jo
jne
lea
int3
xchg
out
mov
inc
push
punpcklwd
inc
jo
data16
sbb
adcb
in
movsb
les
xlat
repz
ret
mov
push
mov
xor
push
les
mov
mov
es
jno
mov
rorb
mov
rclb
movsl
jg
jmp
mov
fwait
sbb
cmpb
mov
cmp
idivl
push
adcl
pop
call
push
rorl
jg
loop
pusha
sub
loop
je
adcl
sub
and
out
dec
aas
jg
inc
inc
inc
jo
mov
shrb
aaa
mov
mov
or
xor
mov
insb
insl
aad
push
xor
xchg
add
sub
sbb
loopne
mov
or
fistpl
inc
inc
cli
pop
pop
ret
stos
in
in
addb
mov
bound
add
lcall
add
in
pop
sub
andl
les
cmp
subb
lock
lods
rcrb
push
rclb
outsl
cmp
and
cld
push
or
sub
push
jl
mov
mov
cmpsb
mov
jmp
lea
mov
mov
and
nop
cli
movsb
ret
inc
cmp
sbb
and
sub
mov
cs
setne
mov
adc
fstps
cmp
cwtl
sbb
aam
jp
into
xchg
push
loopne
sbb
cmp
mov
rorl
pop
mov
ret
mov
fs
jno
add
in
repz
xor
div
test
fdivr
enter
cmp
or
adc
push
lea
xchg
pop
inc
add
leave
sar
add
cmpsb
mov
add
pop
mov
or
dec
adc
fsubs
gs
or
cmp
ljmp
push
popl
add
ret
loopne
sbb
sub
dec
jo
ljmp
inc
pushl
mov
js
ljmp
cmp
push
cmp
mov
push
js
push
adcb
and
pushw
push
sub
xchg
enter
ficomps
mov
add
and
cmp
js
mov
andl
or
push
xor
push
hlt
mov
andl
dec
or
jmp
and
ja
stos
add
mov
xor
push
insl
xchg
cmp
fsubs
adc
inc
push
push
loope
scas
shll
push
ds
call
pop
es
lock
bound
inc
pop
les
dec
push
fcoml
inc
add
jnp
sti
inc
cmp
dec
cmp
push
imul
add
mov
push
dec
or
rcrl
add
fidivl
mov
push
lahf
inc
and
call
push
dec
mov
cmpsb
int
push
test
imul
mov
jno
add
cmp
mov
and
sarb
clc
add
imul
cmp
rcrl
pusha
inc
sbb
mov
jnp
sub
push
jmp
push
loop
add
push
xchg
mov
mov
jl
pusha
dec
iret
test
xor
adc
add
sbb
pop
sbb
cli
cmp
xchg
fisttps
cmp
in
mov
mov
jl
push
mov
inc
mov
sbb
sub
mov
xor
pop
pop
ss
shll
adc
xchg
lret
out
adc
xor
jae
mov
ffreep
mov
cli
or
shufps
push
fildl
mov
push
addl
and
sub
xchg
ds
inc
icebp
and
fisubrl
mov
daa
ret
sub
clc
and
les
push
xor
jne
push
xchg
mov
movsl
pop
jbe
loopne
and
jns
pop
aad
rclb
push
add
jg
or
add
cmp
mov
add
test
sub
sbb
and
or
and
add
mov
movsl
adc
push
lea
test
inc
scas
add
inc
jo
shlb
and
push
push
cld
push
jmp
inc
xor
dec
push
es
rorl
inc
push
push
fisubrs
stos
mov
outsb
aaa
mov
xor
faddl
mov
jg
jmp
inc
xchg
pop
mov
adc
sbb
mov
push
adc
shrb
popf
sub
lcall
jne
adc
sub
jne
push
fidivrs
jno
xchg
cwtl
mov
je
xor
testb
or
and
cmp
jmp
and
iret
add
inc
mov
stos
lock
pop
test
gs
mov
add
cmp
or
rorb
dec
or
fistl
sbb
int3
ret
shlb
adc
mov
lds
nop
adc
mov
and
adc
fisubrs
or
push
inc
add
or
add
push
mov
fs
ljmp
enter
and
pushf
push
dec
mov
fcompl
mov
int3
ret
mov
and
cmp
adc
jns
push
push
and
sub
inc
xchg
subb
sbbl
loop
adc
xor
pop
xor
push
adc
cmp
mov
cmp
movsb
jbe
int
add
push
jmp
test
push
adc
je
inc
cmp
shrb
jmp
addl
js
pop
sbb
jmp
js
add
xlat
xor
loopne
cmp
pushl
std
std
mov
jb
dec
sub
jp
enter
movl
jns
or
adc
xchg
mov
lret
cmp
test
xor
mov
jno
loope
mov
test
rcrb
add
dec
ret
pop
pop
mov
inc
jmp
xor
xor
jge
mov
or
jl
rcr
add
lods
push
js
mov
push
movsl
jg
inc
pushf
pop
pop
cwtl
adc
gs
cmp
xchg
pop
add
sbb
inc
push
push
xchg
data16
or
lods
mov
icebp
add
adc
mov
mov
mov
add
dec
cld
add
mov
nop
stos
ret
scas
pop
ret
pop
shlb
idivb
dec
les
lea
cwtl
fadds
sbbl
orl
jl
sbb
fimuls
out
cs
ret
push
sbb
mov
daa
loope
jo
add
outsb
ret
mov
cmp
push
pop
cwtl
cmpsb
cltd
mov
add
out
notl
inc
int
xor
pop
inc
scas
add
shlb
xor
sbb
mov
xor
mov
pop
scas
add
adc
insl
push
std
push
xor
mov
jne
mov
or
push
sbb
sub
cmp
pop
push
pcmpeqw
shll
push
cmp
sub
cld
test
mov
jmp
loop
insl
pusha
push
push
adc
mov
fcomps
cmp
rcr
jp
adc
shrb
frstor
js
pop
mov
icebp
imul
push
or
pop
xchg
push
icebp
imul
add
stos
jb
imul
dec
or
outsb
inc
or
pop
mov
inc
or
lock
cmp
jg
cmpb
pop
icebp
popf
daa
shrb
int3
push
or
jne
push
es
mov
clc
push
jp
xlat
loopne
xor
sbb
push
jle
or
jl
rorl
cmp
test
mov
xchg
in
jb
pcmpeqb
testl
jmp
mov
fnstsw
or
push
mov
mov
loope
aaa
push
jno
xchg
adc
push
jo
loopne
testb
lods
pusha
icebp
sub
add
fwait
xor
inc
mov
insb
add
mov
dec
pusha
pop
inc
pusha
cs
aaa
in
jne
sbb
inc
mov
rcrl
shrl
sbb
or
push
inc
adc
fsubr
fnstsw
push
icebp
in
xchg
loope
sbb
fs
cmp
pop
jmp
cwtl
andb
cmp
add
sub
push
daa
push
adc
shl
and
jbe
or
incl
sbb
mov
xchg
inc
cmp
roll
stos
out
xor
sub
daa
scas
dec
sbb
ret
in
cmp
orl
push
adc
adc
mov
jno
add
data16
cmp
or
xchg
stc
jb
or
test
push
flds
or
sub
call
in
push
adc
xchg
mov
cmp
or
or
cmpb
shll
adc
pop
or
jo
test
sbb
xor
push
add
inc
and
add
push
dec
mov
lods
pop
dec
sub
add
out
adc
ss
es
jmp
dec
into
lock
cmovno
decl
adc
inc
push
shrb
imul
das
popa
loopne
jg
xor
mov
xor
jmp
push
cmp
insb
pop
mov
cwtl
mov
jo
fsubrs
mov
sarl
or
ja
movsl
imul
inc
cmp
outsb
je
inc
lcall
mov
sbb
addr16
imul
clc
and
cld
cmpsb
notb
add
or
push
mov
es
adc
jb
jge
outsb
in
ja
cwtl
xor
in
sub
fdivl
push
xor
fisubs
mov
and
test
fst
or
lds
mov
cmpsl
push
add
subl
out
rol
or
xlat
or
ret
je
stos
pop
xor
add
mov
adc
je
stos
or
push
cmpsl
outsl
jecxz
mov
test
in
in
sbb
and
add
adc
int
jg
jg
cmp
call
lods
push
or
cmp
mov
jo
rcll
fiadds
nop
sahf
mov
pop
sbb
test
inc
leave
je
inc
dec
mov
test
movsl
sub
cmp
push
jb
xor
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
push
sarb
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
xchg
dec
es
rol
dec
xor
fs
sarb
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
and
or
es
ficoml
adc
fs
dec
and
fs
dec
es
xor
dec
es
cmp
gs
inc
es
inc
dec
dec
mov
dec
xor
pop
push
dec
xor
pop
pusha
sbb
xchg
jne
pushl
add
jl
nop
inc
fiaddl
je
js
or
mov
xor
jl
push
roll
or
nop
inc
ficoml
and
movsb
cltd
sbb
lcall
cltd
nop
xchg
cmp
or
lods
inc
mov
movsb
cltd
inc
mov
mov
dec
mov
push
enter
pop
notl
mov
push
pop
rorl
dec
xchg
or
sbb
hlt
pusha
rorl
sarb
js
cmp
or
mov
or
cmp
mov
or
in
rorb
loope
xchg
cmp
add
test
xor
rolb
and
lret
mov
adc
and
mov
shll
dec
xor
adc
or
add
and
shr
add
and
pop
shr
and
add
and
and
mov
cmc
js
lock
or
jae
or
jo
nop
mov
sub
add
shll
cmpsl
insl
or
or
sub
daa
adc
clc
mov
xchg
clc
incb
sbb
testl
and
mov
and
jae
cmp
aaa
jecxz
sbb
add
or
jmp
andl
and
mov
and
jge
aaa
jge
je
andl
xchg
fbstp
outsl
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
orl
inc
jecxz
and
fstp
ds
test
fiadds
cmp
xchg
cmpsl
xor
adc
clc
sarl
inc
or
jns
je
adc
sti
add
jg
sahf
testl
fisttps
xor
scas
ret
mov
mov
les
iret
or
sub
cmp
lret
adc
cwtl
or
fucomp
pop
testl
push
and
leave
lds
push
ficomps
jb
sbb
jmp
push
and
or
aad
adc
mov
flds
fstps
jmp
fisttpll
add
adc
fcmovnbe
or
hlt
adc
pusha
jnp
test
psubusw
cld
xchg
js
mov
mov
add
sti
icebp
mov
cmp
add
iret
add
push
inc
xchg
xchg
loope
hlt
pop
dec
push
aaa
dec
cmp
out
sbb
lea
aaa
mulb
sub
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
rorb
fldcw
inc
test
into
adc
call
imulb
int3
or
mov
jnp
and
or
aaa
loop
ja
mov
test
jmp
hlt
xchg
call
repz
dec
push
push
js
add
in
inc
rcll
or
enter
add
adc
mov
mov
dec
cld
cli
shrl
or
orl
sbbb
loopne
stos
cmp
pop
or
push
rolb
adc
sbbl
lcall
cmpsb
mov
inc
xor
or
xor
add
push
add
or
shll
sbb
xor
les
pop
pop
sbb
js
xchg
repnz
mov
push
jl
arpl
dec
mov
add
or
call
or
xchg
mov
push
rolb
insl
pop
lods
call
dec
shr
sbb
sbb
roll
js
addl
pushf
sub
xchg
shll
iret
add
insb
addl
and
pop
fdiv
add
fsubrp
fwait
jno
and
inc
and
mov
inc
outsl
loopne
add
adcb
into
stc
sub
sub
or
cmp
test
inc
hlt
cmp
xor
pop
shlb
in
inc
add
add
add
hlt
les
aas
add
push
clc
pushl
xchg
adc
icebp
clc
mov
jbe
add
das
ss
sub
ja
inc
mov
pop
mov
or
xor
mov
adc
jl
push
ret
test
add
andl
jo
sbbl
mov
xlat
into
movsl
pushf
add
loope
mov
sub
xchg
sbb
xor
call
or
mov
push
sub
jge
lock
or
sbb
call
shr
jmp
push
mov
pop
into
fsubs
into
pop
or
rcrb
sbb
test
les
push
enter
push
outsl
dec
out
fld
fucomp
pop
f2xm1
lret
sbb
out
mov
jnp
lods
push
xor
test
andps
lcall
das
outsl
test
mov
sbb
or
shll
push
or
icebp
cmpsb
imul
dec
lcall
stos
cmc
add
push
iret
jle
or
push
and
and
fisubl
sub
cmp
cmpsl
mov
push
push
adc
enter
xor
pop
cs
fstsw
movswl
ficoml
push
lret
sbb
loop
inc
flds
and
xor
not
dec
xor
fcoml
or
insl
or
push
mov
sbb
xchg
jbe
fldt
fwait
cs
das
test
fsubs
outsb
fwait
and
sub
sbb
cs
add
jl
or
sbb
push
movsb
fldpi
xor
xor
rcrl
cmp
in
scas
push
lret
dec
sbb
xorb
scas
orb
sub
fdivl
mov
adc
adc
out
andl
lock
mov
out
jmp
and
jns
sbb
sub
mov
mov
sbb
inc
inc
adc
adc
and
adcb
mov
mov
pop
add
ss
push
sub
test
lea
test
iret
lret
push
ja
outsl
and
inc
test
lds
push
fwait
pushf
add
int
sarl
mov
inc
push
inc
add
adc
pusha
rorl
lea
jne
adc
push
int
mov
pushf
push
bound
push
into
fbld
jbe
or
inc
mov
push
mov
js
rcl
pop
pushf
xor
xchg
or
or
loope
mov
or
inc
add
loope
rcrl
cmp
and
pop
dec
or
or
mov
pushf
imul
dec
push
or
hlt
inc
loop
dec
add
aas
pop
inc
test
daa
push
and
sti
add
daa
mul
pop
faddl
mov
add
add
sub
lock
xchg
test
scas
stos
jp
pop
pop
outsb
push
lret
dec
loopne
in
rol
and
dec
ss
inc
test
cld
pop
add
add
ljmp
popa
scas
scas
inc
jns
dec
or
inc
lea
inc
insb
mov
pop
xor
lret
push
xor
rolb
ljmp
adc
call
loop
rolb
cmpl
pusha
push
movsb
pop
repz
fwait
sti
std
add
and
mov
out
mov
fsub
iret
loopne
adc
iret
mov
xor
cmp
loopne
cmp
push
inc
fmull
jb
cmp
xor
adc
pop
sub
adc
adc
inc
loopne
cwtl
mov
dec
mov
pusha
adc
stos
jns
add
sarb
and
push
and
cmp
enter
testb
jge
je
inc
mov
loope
scas
push
idivl
pop
or
push
hlt
inc
std
fimuls
add
aam
xor
lock
cmp
mov
ss
movsl
das
pop
incl
mov
shl
sub
jp
lea
sub
not
loopne
pop
popf
test
mov
and
pop
outsl
push
loopne
out
push
or
and
aam
out
add
add
and
push
push
jl
inc
inc
fsubrl
shl
pusha
pop
sub
jmp
push
xchg
ds
mov
or
add
lcall
dec
lea
in
inc
push
push
rcrb
sbb
faddl
sbb
inc
cli
out
test
orl
dec
out
sbbl
loopne
rcrl
pop
xor
mov
lds
cmp
dec
jp
push
push
jb
push
repnz
popl
aam
mov
dec
jns
mov
aam
mov
cmc
rcll
hlt
push
aas
mov
mov
lea
cmp
sub
and
dec
movsb
xor
cmp
pop
ljmp
or
inc
ss
shll
inc
mov
cmp
dec
add
jne
daa
andl
inc
push
into
out
rcll
lea
fidivrl
mov
out
and
and
jge
imul
xchg
adc
xchg
dec
gs
pop
lods
shl
test
cmpsl
loope
arpl
or
fidivl
add
add
or
inc
cwtl
adc
push
int3
scas
pop
push
push
sub
jmp
jne
pusha
adc
and
adc
add
test
xor
push
mov
push
cmp
add
daa
adc
adc
sbbb
jmp
inc
mov
mov
xor
mov
jecxz
leave
add
push
or
or
scas
and
ja
ret
dec
jb
rcrb
cmp
js
add
fs
fdivs
mov
aad
ja
pop
push
inc
mov
mov
rorl
mov
add
repz
or
out
fadds
jo
pop
imulb
adc
inc
cs
or
sti
mov
or
or
out
mov
dec
cmpb
jmp
clc
xor
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
loopne
push
notb
pop
and
fcompl
fistpll
inc
and
adc
inc
outsb
cmp
sub
ret
sbb
or
test
mov
mov
jmp
xor
sbb
inc
cmp
xor
repnz
in
adc
fnsave
inc
push
add
adc
imul
sarb
cltd
inc
inc
lret
add
xchg
icebp
mov
fadds
mov
shrb
xlat
dec
pop
movsl
outsl
dec
ja
jbe
or
jle
jns
inc
arpl
lret
mov
mov
sbb
rorb
add
dec
hlt
sbb
lock
les
sub
mov
adc
adc
jle
call
mov
movsl
iret
and
jae
out
jle
mov
and
cmp
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
shll
sub
add
test
adc
push
fwait
ljmp
inc
sub
inc
fidivs
dec
dec
dec
jns
neg
movb
and
ja
fs
cltd
push
test
movsl
rcrb
pop
xchg
int3
add
add
add
sbb
jne
push
mov
push
push
sbb
scas
adc
mov
lea
sbb
sbb
mov
xor
ret
mov
pop
sbb
orl
iret
ret
jmp
add
push
xchg
xchg
sub
adc
mov
xchg
push
addb
xor
icebp
mov
mov
aam
mov
ret
aam
addr16
jo
jae
push
jmp
addb
jno
sbb
jl
pop
add
out
push
push
fadd
pop
sbb
or
punpcklwd
sub
xor
push
jno
into
jge
adc
jb
cld
in
and
jecxz
xchg
or
mov
jp
sbb
testb
dec
cmp
push
inc
pop
xchg
sahf
adc
xchg
ficoms
cld
push
and
sarb
cs
push
push
ret
ret
imul
pop
loope
pop
dec
nop
fmull
lods
mov
dec
add
mov
or
dec
xor
sub
sbb
cmp
xchg
test
enter
js
subb
adc
lahf
cmp
push
js
jmp
loope
sub
leave
and
add
insb
movb
ror
push
xchg
das
and
mov
nop
inc
popf
sub
fnstsw
fistpl
fstpt
mov
lock
ret
adc
mov
jne
bound
xor
xor
ljmp
inc
xor
cmp
arpl
jmp
inc
xor
mov
sub
xlat
nop
jb
add
shll
mov
fisubs
lea
xor
jg
hlt
cmpsb
lret
nop
or
adc
je
mov
push
clc
lods
into
sub
inc
mov
bound
sbb
ss
adc
das
cmc
movsl
fs
cld
add
hlt
shrd
dec
data16
mov
add
dec
cmp
in
imull
sbb
clc
push
jb
pop
cwtl
xor
cmc
insl
sbb
data16
inc
and
xor
out
arpl
pop
xchg
cld
sub
stos
dec
cmp
loopne
sar
mov
adc
xor
pop
mov
icebp
sbb
sbb
je
daa
mov
test
sub
movq
js
xchg
fdivl
xor
scas
repz
sbb
or
shl
fimull
pop
cmp
sarl
push
lods
push
mov
shll
addr16
add
mov
push
lock
or
add
mov
dec
dec
inc
dec
pop
dec
sahf
sub
jb
or
sbb
cmp
rol
push
shrl
jnp
in
icebp
push
orl
jo
add
mov
and
sub
es
mov
mov
mov
aas
mov
movl
add
jle
add
inc
add
push
sbb
push
call
jmp
lock
sahf
fwait
ss
in
adc
neg
call
rclb
or
ret
aaa
push
xor
pop
push
lods
push
js
inc
mov
push
mov
push
pop
add
add
movsl
mov
fdivs
sub
add
and
jbe
add
lret
add
rorl
mov
push
sbb
ljmp
and
js
pop
mov
sbbb
jne
pop
das
inc
es
cmp
nop
push
out
sub
ds
xchg
adc
shlb
sub
stc
popa
or
xor
enter
sub
mov
push
stos
adc
dec
out
lea
jl
loopne
jge
inc
or
add
pop
scas
addb
push
add
in
adc
xorb
ds
fnstcw
clc
gs
or
pop
push
jl
mov
lods
out
add
je
pusha
mov
sbb
push
pop
jmp
xor
and
or
jmp
pop
dec
adc
bound
jbe
inc
sbb
mov
or
adc
xchg
and
mov
shlb
mov
rolb
xor
sub
ret
sbb
xor
mov
es
adc
sbb
insb
xorl
mov
and
das
test
adc
adc
mov
push
clc
cmovb
sub
jp
sarl
pop
inc
jmp
adcb
sub
and
fstpl
xchg
inc
test
ja
jle
jp
push
mov
xchg
cmp
mov
adc
je
cmp
icebp
add
push
pushf
fwait
invd
cmp
and
push
sub
or
loopne
popa
fdivrl
lea
jo
ret
add
loope
adc
popa
add
push
js
fcmovnbe
stc
or
nop
shll
cmpsb
pop
mov
cwtl
pop
jg
and
jg
fldt
sbb
sub
and
jo
push
test
dec
and
mov
ret
push
adc
xchg
aam
pop
jne
movsb
jle
add
mov
andb
out
cwtl
or
cmp
or
or
mov
or
mov
jp
movsb
push
pop
inc
mov
sbb
adc
and
mov
mov
and
mov
add
popa
lock
das
or
or
push
sbb
cmp
mov
or
decb
fisttpll
imul
pop
pop
pop
pop
pop
test
pop
lret
test
out
dec
movsb
imul
repnz
cmp
or
jb
movsb
fwait
and
pop
jb
push
jge
inc
ss
aaa
mov
repnz
sub
je
dec
je
dec
inc
out
pop
push
push
jmp
or
jmp
notl
orl
sub
jmp
mov
decl
test
sbb
ret
add
add
or
data16
shr
js
int3
or
jo
rcrb
scas
leave
addl
xchg
leave
sbb
lock
push
push
sbb
je
adc
cmpsl
dec
and
aas
adc
dec
outsl
xor
inc
mov
or
mov
incl
sbb
mov
jbe
or
call
nop
rcll
imul
inc
xchg
fiaddl
movsl
int
push
into
sub
xor
inc
pusha
sub
pop
mov
add
xor
nop
or
sbb
mov
pop
and
mov
or
pop
dec
sbb
imul
xor
inc
xchg
sahf
add
and
dec
mov
rcll
xchg
or
or
push
addr16
xor
fwait
aam
leave
add
shr
add
or
aaa
pop
xchg
jle
shr
or
mov
clc
imulb
dec
call
and
add
mov
dec
inc
xchg
xor
or
add
cmp
or
mov
hlt
jp
imul
xchg
cmp
dec
inc
shrb
outsb
jbe
add
jl
in
sbb
cmp
shlb
or
dec
pop
or
shl
pusha
inc
sti
and
push
add
fidivrs
aaa
adc
jno
xor
bound
xor
jns
xor
mov
sbb
mov
dec
add
push
stc
rolb
dec
test
fnsave
or
decl
out
mov
xor
cltd
cli
and
xchg
and
rclb
sahf
sbb
cli
fimuls
sbb
or
adc
sub
pop
adcb
fmuls
add
cli
jne
mov
xchg
cmpsl
push
or
sub
test
add
mov
push
or
mov
shll
dec
push
or
mov
scas
jbe
test
insb
dec
rolb
test
cmp
adc
call
je
adc
mov
dec
shl
dec
enter
sbb
ret
vpsrad
cmp
sbb
rorb
repnz
or
pop
or
enter
lret
xorl
cmp
sub
int3
test
movb
add
enter
adc
inc
dec
sub
sbb
inc
fnstsw
add
sbb
or
inc
enter
and
ret
andl
xchg
mov
adc
fistpl
jge
addl
sbb
sub
mov
cs
mov
int3
pop
fstpl
or
jmp
mov
sub
fsubs
pop
and
sub
adc
sbb
xor
or
sbb
fistps
inc
xorb
mov
repnz
bound
cmp
js
add
add
pop
je
data16
add
outsb
mov
sub
jno
push
or
shl
sbb
add
xchg
fdiv
add
test
mov
xor
hlt
insb
sti
or
sub
push
add
jno
push
adc
ds
sti
pusha
iret
add
sub
call
mov
ljmp
dec
dec
cmp
push
test
enter
cmp
call
add
push
cli
in
mov
cmp
jle
and
xor
adc
rorb
shlb
pop
sbb
es
mov
pop
rcrl
xchg
cmp
dec
divb
cmp
cmpb
je
pop
andb
xor
inc
push
pusha
push
insl
aam
push
fstl
stos
jmp
adc
push
pop
syscall
push
inc
push
int3
jmp
notl
aaa
push
imul
int
dec
orb
mov
jbe
and
inc
andb
pop
cmp
jnp
dec
ljmp
jg
cli
jne
cmp
jne
cmpsl
cmp
jmp
dec
add
adcb
testb
adc
rorb
push
cltd
or
adc
pusha
dec
xor
clc
out
roll
leave
add
in
js
je
mov
iret
push
and
rcll
or
gs
cmp
scas
repz
xor
pop
adc
inc
ret
shlb
mov
shlb
clc
jle
movsw
xor
dec
or
pusha
push
pop
out
dec
adc
aad
add
sub
ret
sbb
jp
mov
dec
add
pop
fnstenv
add
push
ds
scas
icebp
dec
add
jge
inc
inc
push
neg
lahf
ja
lock
sbb
sub
inc
or
jns
sbb
xor
jo
xchg
sbb
enter
fcoms
add
and
fsts
fcomi
sbb
adc
push
and
sbb
and
mov
subb
dec
jns
fwait
mov
mov
dec
jne
pop
pop
pop
aam
jbe
push
int3
cmp
or
jae
add
rcl
ljmp
shr
and
daa
in
sub
adc
cmp
arpl
push
idiv
and
maskmovq
cld
lock
add
mov
lods
pop
add
jae
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
dec
ss
cli
xor
push
cmc
xor
pop
sbb
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
inc
xchg
mov
dec
mov
jns
leave
and
cld
dec
add
rep
add
andl
adc
xor
sti
je
js
in
sbb
dec
sbb
les
mov
jo
jmp
adc
movl
add
push
jnp
cs
ljmp
cld
inc
test
test
nop
aaa
dec
sub
rorb
cmpsb
stc
xor
mov
ficoml
inc
jns
cmp
mov
aam
jne
pop
ljmp
lock
add
push
inc
cmp
mov
ret
and
push
inc
mov
sbb
xchg
pop
addl
dec
xlat
aas
xor
add
mov
mov
push
es
mov
cwtl
inc
jecxz
je
adc
jl
lahf
idiv
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
or
cli
fiaddl
pop
xor
mov
sbb
fadds
and
imul
test
test
aas
sti
pop
leave
insl
scas
pop
push
movb
jmp
or
jge
les
adc
sbb
iret
cmp
pop
js
push
pop
dec
add
mov
dec
dec
call
movw
jb
call
sub
mov
pop
xchg
adc
pop
push
daa
jno
mov
jb
jne
sbb
mov
shlb
loope
xchg
fdivr
inc
jne
adc
or
sub
into
add
out
andb
sbb
add
int3
mov
into
push
cmp
jmp
add
cmp
jo
addr16
mov
lret
cld
push
imul
clc
add
call
xchg
jne
incl
rorb
or
lcall
movswl
pop
sbb
fildl
out
sbb
in
mov
cmp
adc
addl
test
add
push
cmp
add
and
cwtl
mov
pusha
loopne
jbe
push
jb
in
or
jl
dec
or
add
int
dec
jle
repnz
xor
sub
mov
outsl
or
test
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
inc
jle
mov
mov
inc
sbb
ret
mov
loopne
and
or
jns
ds
testl
iret
push
push
fsubrl
adc
xlat
or
inc
fnstenv
loopne
lea
rolb
xorb
inc
mov
imul
push
lea
mov
xchg
push
push
pop
mov
xchg
dec
push
jo
inc
movsl
and
or
ret
movsb
sub
sbb
mov
pusha
data16
lcall
in
and
arpl
cmpsb
imul
repz
cmpsl
mov
cmp
sbb
mov
shll
cmp
jmp
mov
add
shr
or
and
negl
cld
rorb
sbb
push
lret
mov
inc
jmp
inc
add
pusha
and
mov
mov
int3
shrl
loope
shr
or
mov
cli
jmp
xor
cli
psrld
xor
lock
cmp
jge
and
in
push
repnz
add
dec
gs
inc
cli
div
cmc
mov
add
push
test
fadds
loopne
add
test
sbb
adc
and
fisubl
pop
fisubrl
and
mov
pusha
xlat
cmp
xor
and
and
add
dec
div
xor
cmpsb
mov
dec
rolb
add
xor
mov
sbb
sbb
cmpsb
sub
or
pushw
sbb
loop
pop
cmp
outsl
mov
test
pop
push
jbe
sbb
in
aam
daa
adc
sub
push
or
repnz
daa
xor
jne
fdivrs
aam
dec
add
dec
popa
mov
inc
sub
sbb
add
push
mov
add
adc
add
or
fmull
rcll
mov
sbb
mov
sub
fnstcw
cmpsl
add
insl
test
inc
scas
xor
mov
or
seta
add
and
adc
adc
adc
jg
or
inc
inc
mov
adc
lock
and
or
jge
add
and
add
movsb
jo
js
cmp
jne
jne
add
in
roll
loopne
sbb
lret
stos
mov
or
xor
push
dec
sub
mov
inc
add
negb
inc
add
inc
mov
aas
ss
cmp
jle
push
pop
outsb
call
xchg
sub
xchg
sbb
pop
adc
rorb
shrl
cli
pop
xchg
pop
adc
mov
xchg
fcoms
xor
fiadds
fsubrp
jle
inc
imul
jmp
xlat
pop
je
loopne
call
mov
or
pop
add
and
mov
add
cmp
in
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
mov
or
push
stc
xchg
sub
clc
lock
fidivs
add
enter
sahf
mov
ss
shlb
add
sub
test
mov
es
sub
add
add
into
or
mov
inc
ljmp
add
or
jmp
dec
aad
test
sub
cmp
jge
sub
cmpb
mov
or
movb
dec
cmp
add
outsb
inc
mov
dec
add
add
fadds
daa
cmc
mov
hlt
ret
cmpsl
mov
in
jp
jne
dec
mov
jb
add
inc
int
cmp
add
cs
in
jbe
cmpsb
loop
mov
loop
add
push
pop
mov
or
ret
adc
or
sub
test
and
adc
mov
lcall
adc
lret
mull
or
or
js
push
mov
movsb
hlt
mov
rclb
or
add
repz
add
push
bound
pop
jne
or
push
pop
pop
int
ja
je,pt
push
ret
sbb
jae
sbb
mov
imul
push
ret
or
xchg
and
dec
movsl
adc
or
jae
fcmovnb
xchg
mov
mov
shll
cmp
xor
into
test
and
cmp
and
pop
pop
inc
mov
cmpps
pavgb
xchg
or
push
dec
imul
push
jle
inc
in
or
add
or
or
imul
shll
add
incb
mov
mov
das
push
or
adc
xlat
push
pop
sub
push
add
xchg
adc
jne
int3
loope
cmp
ret
test
mov
sbb
add
shlb
ret
or
stos
shr
push
scas
popa
fcoms
js
and
push
movsb
dec
or
or
xchg
or
or
push
mov
orl
lods
loopne
and
sub
fadds
rcr
mov
add
mov
movsl
addb
lock
fcompl
cltd
into
or
add
cltd
xchg
data16
or
adc
shl
lret
push
into
mov
mov
ja
sub
and
sbb
inc
jg
push
cmp
jns
into
into
mov
or
inc
pop
sub
push
pop
sbb
pop
mov
aam
sub
shlb
or
sbb
stos
sub
imul
push
fs
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
pop
adc
stos
jbe
arpl
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
rorl
jno
loope
mov
les
aas
mov
mov
adc
or
jo
lahf
and
or
push
mov
sub
flds
lock
mov
push
shrl
loope
fcom
fsub
jl
add
int3
push
test
dec
add
je
movsl
xorl
cmp
jo
sub
js
loopne
jle
sbb
or
jno
dec
adc
loope
or
and
jbe
sub
loope
cmp
mov
fmuls
or
scas
hlt
mov
cmp
jb
cmp
jbe
dec
cmpl
in
mov
pushf
xchg
mov
or
fisubrl
pusha
test
ljmp
aas
inc
mov
or
pop
ja
iret
and
ret
stc
imul
repz
pop
adc
mov
popa
sbb
andb
aam
scas
mov
add
adc
push
and
loopne
cmp
xor
xor
lds
push
push
mov
aaa
sbb
test
add
rclb
js
in
inc
add
adc
push
ss
shlb
sub
subb
xor
push
shll
sbb
popf
mov
ljmp
push
xchg
pop
or
push
mov
cmp
cmp
push
aas
jl
ja
mov
sub
cmpsl
scas
aaa
sbb
popa
mov
push
push
push
popf
sub
or
cmp
enter
adc
popa
sar
ror
push
xchg
pop
jmp
mov
push
xor
mov
mov
inc
aas
fs
je
inc
jp
push
bound
push
mov
sub
pop
xchg
push
jl
mov
adc
adc
add
jno
lods
aam
and
shl
push
pop
mov
hlt
call
push
outsb
mov
inc
xlat
ss
ret
push
push
addb
mov
sub
aad
inc
insb
cmp
or
into
pop
in
sbbb
mov
pop
lahf
mov
mov
and
pop
gs
sbb
test
clc
lret
lret
xchg
push
cli
inc
mov
mov
jne
jg
xor
ret
sti
add
fcoml
push
pop
pop
mov
push
mov
sub
or
enter
mov
jbe
ljmp
dec
mov
gs
xchg
jae
mov
faddp
adc
loopne
jnp
loopne
jmp
dec
fs
and
mov
mov
cmp
subl
lods
shr
or
js
test
daa
enter
or
mov
push
cs
out
dec
sbb
mov
insl
push
xor
pushf
iret
fdivrl
xchg
mov
push
shll
push
cmp
inc
clc
sub
add
cmp
and
dec
andb
and
out
mov
add
decl
fnstsw
push
jg
scas
sbb
addl
xor
stos
les
aas
pop
cmp
push
clc
xorl
stos
sub
inc
push
push
rcrl
inc
pop
imul
sub
shlb
pop
int3
or
pop
fs
pusha
inc
nop
sbb
and
inc
jle
inc
push
xlat
cmp
cli
push
and
lea
lret
cmc
shlb
fidivs
sbb
adc
adc
pop
les
sub
cmp
hlt
adcl
pop
dec
cli
xorb
jmp
sub
dec
add
mov
or
dec
xchg
or
nop
out
rcll
push
outsb
cmp
fstps
test
jl
push
mov
jge
push
jo
ss
clc
outsb
or
enter
cmp
pop
movsl
dec
in
inc
sub
popa
enter
add
inc
in
jmp
das
sub
xor
sbb
cmpsl
add
add
sub
in
mov
rorl
clc
xor
sbb
pop
pop
adc
or
and
pop
and
lock
lods
pop
push
dec
jnp
rol
shl
inc
mov
mov
ret
loop
inc
andb
or
cmpsb
sahf
xor
cld
xorl
mov
jno
pop
inc
xchg
loopne
cltd
in
sahf
adc
push
mov
jo
dec
push
add
jb
pushf
ret
sub
add
icebp
push
add
push
push
push
sub
or
stos
iret
int
jmp
rcl
dec
sbb
mov
adcb
push
loopne
dec
ja
in
pop
pop
xchg
loopne
fdivrs
sub
pusha
sbb
push
adc
mov
clc
pop
or
dec
fdivrl
flds
les
cmp
mov
data16
jmp
loop
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
adc
push
scas
cmp
int
mov
fwait
mov
sbb
push
repnz
cmpsb
gs
sbb
sbb
rorl
popf
and
sub
mov
clc
pop
push
or
sahf
mov
push
mov
shrb
out
dec
incl
push
loopne
or
push
add
mov
fists
sub
test
mov
or
inc
or
imul
ud2
sar
push
pop
xor
jo
jmp
push
lret
xlat
rolb
sbb
adc
xor
jp
fiaddl
and
or
aaa
in
daa
loope
dec
insl
xchg
int3
fsubrs
sbb
cld
arpl
imul
sub
imull
int
les
mov
jmp
adc
dec
shll
enter
nop
dec
inc
imul
add
mov
sub
cmp
movsb
mov
and
cld
mov
mov
sbb
cmp
ja
fistpl
jge
add
push
jle
dec
fst
cwtl
and
mov
outsl
inc
aad
xor
or
cmpb
dec
mov
jg
adc
lock
adc
push
les
xchg
icebp
mov
mov
xchg
rcll
cmp
js
rcrb
mov
popa
in
call
aam
into
lock
ljmp
in
jae
ds
ret
dec
mov
pop
add
pop
aaa
push
push
cmp
ret
sub
inc
scas
call
add
sub
dec
stos
lods
scas
pop
jb
lea
and
leave
jp
dec
or
push
movl
testb
ss
mov
sbb
in
pop
mov
fistl
out
lcall
sub
loopne
pop
cmp
clc
ret
aaa
test
nop
cltd
sbb
xor
cwtl
bnd
or
decl
insb
das
pop
sarb
inc
mov
jg
jae
pop
andb
imul
cmp
bound
cmp
push
mov
cmp
ja
ds
inc
shlb
push
cmp
jl
or
adc
adc
pushl
mull
int
shr
sarb
cli
sbb
cmc
and
add
cltd
testl
xor
rcrl
js
in
ret
add
fstl
adc
and
or
xor
jne
inc
sbb
inc
push
pop
inc
fimull
or
mov
fwait
inc
arpl
inc
push
inc
popl
mov
jl
sbb
add
or
test
leave
sbb
pop
or
and
add
mov
outsb
sub
loope
lock
push
add
add
stc
jg
aas
scas
adcb
add
add
add
sbb
mov
xchg
mov
jle
fidivs
xor
push
push
add
clc
mov
cmp
xor
xor
pop
jg
dec
add
stos
cli
mov
fs
pop
jl
testb
dec
je
addr16
mov
adc
dec
inc
xchg
stc
iret
or
adcb
ljmp
fldenv
push
push
dec
cld
or
lea
push
les
cmp
or
mov
scas
mov
sbb
jae
loope
fdivs
jecxz
lret
push
outsl
inc
fs
lock
sub
aaa
and
inc
jmpw
and
outsl
andb
cmp
fisubs
in
movl
pop
adc
cmp
jae
sub
mov
sbb
dec
sbb
jg
push
shr
dec
rorb
fnstcw
pop
xor
cmp
insb
mov
stc
xchg
cmpsb
jmp
pop
pop
push
xor
lock
outsb
fadds
jae
push
or
shl
movsl
push
inc
cmpl
sub
cmp
iret
push
pop
push
adc
mov
out
rcrb
sbb
lods
push
inc
inc
dec
add
xor
cmp
pop
movsb
imul
in
sti
test
or
adc
dec
dec
es
xor
andb
xor
cli
es
mov
push
lea
ja
cmp
jbe
dec
sar
repnz
mov
add
add
adc
ss
cmpb
test
je
popf
and
loopne
mov
shl
and
inc
dec
mov
lea
rol
jo
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
jmp
movsl
das
add
pop
add
inc
fiadds
sbb
sbb
push
dec
mov
lea
add
jo
ret
xor
inc
std
repnz
lret
cli
add
push
or
and
adc
pop
pop
cmp
cmp
leave
inc
sbb
addr16
outsl
dec
je
dec
jne
push
add
and
arpl
fcoms
adcb
or
sbb
cmp
inc
xor
je
ds
cmpsl
adc
fdivl
or
push
sub
rorl
or
icebp
xor
xlat
enter
fdivrs
inc
cs
arpl
mov
sarl
or
adc
mov
xchg
jns
mov
or
shl
pop
jle
addb
mov
mov
lock
and
insl
inc
stos
inc
add
in
xchg
lods
add
adc
inc
hlt
push
cli
push
jb
cmp
xlat
sbb
push
mov
imul
cmpsl
ds
mov
hlt
cmp
jl
addb
sarl
fldt
jp
cwtl
sub
add
and
add
xchg
and
pop
test
add
fcmovb
mov
lret
mov
stos
andb
orb
mov
push
push
mov
inc
adc
jle
inc
push
add
out
and
stos
mov
ret
ljmp
sub
jmp
inc
scas
xor
mov
insl
cltd
das
or
add
adc
add
mov
ror
test
dec
pop
pop
jecxz
rorl
stc
push
insb
sbb
mov
es
add
add
and
or
movsb
jne
jae
push
mov
jnp
and
mov
mov
pop
cs
lods
sets
jle
movsl
jbe
xchg
test
jbe,pn
mov
arpl
ret
adc
jecxz
pop
orb
jno
adc
or
push
mov
rorb
xchg
js
mov
add
je
loope
push
and
nop
or
sub
dec
pusha
test
rcrb
pop
fmuls
add
push
lock
mov
or
xchg
dec
hlt
adc
pop
cld
add
jle
out
nop
lea
add
shrl
in
mov
and
je
lock
fstp
jge
ljmp
add
ret
add
dec
jg
adc
orl
jg
jmp
adc
mov
sbb
pop
shll
and
and
sbb
call
pop
sbb
cmp
or
jb
or
cmpsl
push
sbb
mov
pop
scas
gs
inc
pop
aaa
pop
pushf
and
cmp
and
jae
das
adc
pop
scas
or
add
add
pop
jp
sbb
bound
adc
ss
cmpsl
adc
inc
stos
add
es
lret
inc
and
and
jo
sti
inc
insb
and
aam
push
mov
cmp
mov
jns
cmpl
xchg
cs
mov
push
mov
xlat
je
cmp
jg
adc
shll
testb
xchg
sbb
aaa
testb
cmp
push
ret
jge
fmuls
sub
ss
sub
jnp
cwtl
and
jb
je
cmp
std
inc
add
jb
cmp
jbe
lret
js
jo
push
push
or
lock
xor
jnp
adc
jmp
das
ljmp
inc
cmc
cmp
xchg
jo
mov
test
inc
or
push
mov
and
dec
mov
mov
hlt
shlb
pop
cltd
js
fisubl
pop
jmp
enter
lcall
cmpb
push
iret
pop
in
xor
xchg
mov
mov
xchg
push
inc
sub
push
insl
mov
ret
or
and
xor
inc
in
repnz
push
mov
inc
or
mov
mov
sbb
ja
movsl
popa
add
sbb
adc
dec
lahf
sub
add
add
stc
add
inc
mov
mov
add
nop
add
add
lret
dec
push
mov
pusha
push
daa
flds
pop
enter
rcrb
xchg
nop
xor
adc
sbb
jp
cmpsl
aas
mov
adcb
xlat
ficoml
inc
rclb
sub
and
aaa
adc
add
incl
rcrl
lock
fxch
mov
inc
inc
fbstp
insb
pop
rol
mov
rcl
cmp
clc
jbe
fsubrp
pushf
jns
fstps
icebp
popa
insb
insb
loop
aas
rolb
insb
pop
fs
lcall
ror
fcomp
cwtl
adc
ret
out
inc
lods
mov
sbb
adc
push
or
and
nop
mov
or
or
jg
xor
or
in
cmp
mov
cmp
enter
push
jmp
jno
push
ret
jg
or
mov
or
pmaddwd
ljmp
sbb
ret
inc
xchg
inc
cwtl
sub
jmp
cmp
in
adc
int
mov
or
int
jbe
sbb
sub
pop
in
or
sbb
aaa
in
add
cmp
popf
pushf
mov
call
or
in
inc
jb
inc
cs
fmuls
es
pop
cld
xor
sahf
add
jmp
dec
cs
cld
test
cmp
inc
or
add
xor
ret
pop
xor
and
xchg
mov
je
jo
sbb
pop
push
jae
mov
jg
shlb
inc
cld
inc
adc
inc
push
sbb
inc
dec
pop
cltd
add
inc
lahf
fsub
jae
andl
imul
loopne
fcomps
cmp
mov
xor
pop
ljmp
adc
subb
xchg
js
fstps
or
stos
xchg
cmpsb
int3
lods
xchg
dec
xor
lret
mov
adc
and
in
inc
mov
in
inc
adc
dec
pop
mov
dec
pop
xchg
fisubl
adc
sbbb
or
fidivl
xor
pop
in
add
fcomps
mov
xchg
push
ret
mov
inc
sub
inc
cmp
lea
mov
xchg
pop
test
popf
mov
jns
jl
push
js
imul
arpl
rolb
int3
daa
enter
sbbl
xor
fsubr
xlat
mov
sbb
aam
insb
fsubl
dec
fisttpl
test
xchg
aaa
loopne
insl
rcrb
mov
pop
in
unpcklps
test
sbb
popa
pop
aas
sbb
add
in
xchg
ds
jno
pusha
fs
dec
es
es
je
jl
insb
dec
pusha
add
cmp
call
xchg
outsl
lea
xchg
mov
jge
or
adc
fs
in
mov
sbb
cmp
sbb
mov
pop
sbb
sti
xchg
sbb
gs
popa
call
sbb
imul
dec
adc
and
in
das
sbb
rorl
xchg
outsl
das
inc
jne
dec
and
aaa
addl
inc
mov
sbb
pop
push
push
les
shrl
mov
daa
loop
bnd
enter
jl
add
dec
inc
cmp
mov
push
jnp
roll
push
xor
sub
cmp
inc
adc
ds
or
push
jnp
add
les
push
adc
push
mov
aam
flds
enter
inc
adc
add
aas
mov
inc
dec
fwait
jmp
cmp
ret
push
je
lock
adc
sbb
fiaddl
mov
sub
outsl
adc
or
dec
or
pop
loopne
dec
push
rcl
gs
sbbb
popa
imul
outsl
in
dec
or
pop
pmulhuw
sbb
outsb
push
insl
adc
sbb
dec
dec
nop
popa
inc
push
mov
sbb
add
dec
fs
fdivl
loopne
pop
cmc
jne
jge
test
rcr
clc
cltd
es
imul
in
xchg
xor
out
sub
xchg
and
fildll
leave
or
or
nop
inc
enter
in
in
pushf
sbb
leave
dec
popa
addr16
add
aam
and
xor
enter
adc
push
jb
loop
popa
or
out
lock
jo
inc
jecxz
add
pop
add
shll
push
pop
and
sti
dec
jl
dec
pop
out
add
ret
imul
nop
cmpsl
push
call
jl
repz
cmc
mov
add
mov
and
jmp
mov
fdivrl
push
and
mov
adc
jecxz
mov
dec
dec
pusha
lds
movsb
nop
mov
mov
jg
and
mov
dec
addr16
xchg
adc
fidivrl
xchg
pop
ficoml
xorb
mov
lods
jmp
sbb
iret
and
add
sbb
sub
adc
in
sbb
pop
stos
arpl
push
and
in
inc
add
lcall
pusha
js
ljmp
pusha
jae
ljmp
fbstp
pop
xchg
scas
stos
jne
adc
inc
addl
shr
jne
mov
stos
mov
ret
loopne,pn
js
in
dec
mov
test
shl
loope
in
xor
jns
or
jo
bswap
mov
adc
push
out
inc
outsl
push
loopne
mov
cmp
mov
in
in
sti
sub
in
or
add
fsub
push
xchg
inc
mov
add
in
xor
subl
xlat
xor
and
clc
popf
mov
in
nop
sbb
pushf
xchg
decb
dec
in
xchg
aas
ljmp
cltd
add
or
or
or
or
add
xchg
stc
loopne
jb
sti
sbb
add
and
shlb
pop
inc
dec
xor
loope
out
cmpsl
fcoms
and
popf
loop
pop
imul
or
sbb
or
lock
mov
cmpsb
push
loopne
jb
xor
std
pop
sbb
sti
xor
stc
insl
cli
es
aam
inc
lock
push
mov
or
and
enter
or
or
dec
push
jb
lock
mov
push
enter
xor
jbe
in
punpckhwd
cmp
test
cmpb
rorl
xor
push
icebp
mov
or
and
or
movsb
scas
mov
and
mov
mov
sub
aas
mov
pop
fwait
pushf
fisubl
repnz
pop
rcll
lahf
loopne
pop
lcall
test
mov
das
pushf
repnz
push
adc
fcom
xor
sbb
in
sbb
rcrb
jns
repz
and
inc
xor
loop
mov
push
nop
sbb
mov
fmuls
repz
loop
test
lock
orb
iret
sbb
ss
outsb
mov
and
rcr
test
dec
adc
push
or
imul
enter
mov
repnz
fucomi
setg
inc
nop
push
loope
lods
aam
loopne
sbb
inc
mov
dec
enter
add
xor
cmp
in
add
prefetch
push
das
rcrb
xchg
test
aam
mov
pushf
cmc
leave
dec
sbb
loopne
psubsb
clc
cmc
add
leave
push
jno
insb
adc
sub
and
subb
push
pop
pop
push
sub
mov
shrb
loope
imul
pop
pop
sbb
scas
hlt
notb
testl
add
test
mov
lods
dec
cs
cmp
movsb
stc
mov
xor
int
cltd
fs
inc
enter
xor
hlt
and
add
jno
or
or
inc
mov
cmp
or
sbb
in
inc
ss
scas
in
pop
pusha
fldt
adc
stc
pop
mov
jmp
jb
mov
fdivs
jge
push
jno
cmp
sbb
mov
add
loopne
add
popl
cli
xor
lods
leave
and
test
pop
cli
push
lds
inc
icebp
pop
adc
xor
add
daa
lock
inc
sti
push
push
jecxz
test
nop
imul
or
sbb
or
sti
cwtl
nop
xchg
adcb
lods
test
insl
stos
cmp
imul
daa
or
and
fimull
andb
mov
movsl
test
sti
pop
inc
in
inc
nop
mov
mov
sub
xchg
out
scas
pop
jo
add
add
in
jg
std
and
sub
jo
int3
pop
pop
inc
outsb
pinsrw
ss
push
nop
in
or
mulb
mov
maxps
iret
enter
or
mov
sbb
pop
sub
mov
mov
sbb
adc
fisttps
inc
les
mov
in
and
and
movsb
test
xor
push
sbb
jno
xlat
push
fs
inc
jge
pop
xlat
pusha
xchg
cmp
fwait
inc
pop
neg
pop
push
movsb
pusha
test
fs
inc
loopne
cmp
xchg
aam
inc
sub
flds
scas
incl
invd
cmp
adcb
jns
js
or
lea
pop
adcl
xlat
jno
or
nop
gs
or
adc
fidivl
mov
gs
adc
fdivrs
ljmp
daa
inc
or
mov
enter
add
jb
and
negb
in
fs
xor
shl
cmp
mov
enter
xchg
nop
pushf
jb
jns
mov
lret
or
les
idivb
sbbb
jl
xor
dec
xor
int
sbb
cmp
sub
inc
aam
push
lret
mov
push
insl
cmp
ja
push
sbb
dec
mov
fsubs
adc
subb
sbb
add
add
loope
mov
and
inc
or
lahf
cmp
in
and
add
aam
jbe
and
imul
nop
int3
adc
lret
inc
pop
and
inc
outsl
fwait
mov
and
and
sbb
and
mov
mov
pop
xor
fdivs
sbb
pop
std
sbb
shrb
inc
sbb
or
movsb
push
in
jne
imul
xchg
adc
mov
dec
in
hlt
fdivr
testl
sub
inc
rep
rorl
adc
movsb
sbb
pop
ds
pop
cmp
jl
fildl
int
xchg
or
adc
push
or
fildl
xorb
cli
notb
sub
inc
sub
cmp
inc
dec
cmp
iret
mov
or
in
inc
and
sub
adc
fcmovnu
xor
dec
int
movsl
xchg
test
mov
cmp
or
pusha
xchg
xor
imul
jne
stc
lock
loopne
jl
gs
popf
call
push
sub
in
dec
shll
ja
pop
xor
roll
dec
rolb
mov
rolb
push
pusha
std
ret
aad
and
jb
add
or
push
lahf
test
pop
xor
sub
aam
and
jecxz
or
ret
cmc
int
sbb
or
mov
fdivs
cwtl
shll
jne
xchg
push
sub
pop
mov
in
imul
nop
sbb
je
xchg
xor
jl
rorl
dec
sti
insb
jl
sbb
or
int3
sub
int3
adc
xchg
rolb
testb
enter
xchg
push
push
aam
xchg
dec
add
call
fwait
pop
lods
or
sbb
inc
pop
aad
in
sbb
sub
setl
rdpmc
ffree
jno
sarb
mov
rorb
arpl
add
pop
call
insl
aam
leave
adc
ret
enter
in
dec
xchg
lret
inc
adc
push
pop
shlb
adc
push
rcl
push
rcll
sub
pusha
gs
rolb
push
addl
cltd
pop
lret
mov
cmp
aam
imul
mov
inc
mov
sbb
scas
mov
in
or
mov
nop
sub
or
xor
les
xor
rcrb
aam
loop
call
rorl
sti
adc
psubusb
nop
sbb
adc
lea
mov
or
or
aam
cmp
test
outsl
cs
push
leave
or
test
push
or
lds
and
sti
cmp
insl
rorl
dec
in
addb
test
aam
sub
test
lds
push
dec
sbb
dec
mov
mov
adc
int
insb
adc
push
leave
mov
dec
cs
test
cmpsl
push
xor
sub
fs
add
mov
sub
bound
sbb
shl
inc
mov
int3
mov
fildl
mov
lods
mov
test
sarb
js
mov
push
or
ret
mov
xor
test
sub
pusha
mov
scas
leave
pushf
adc
cwtl
clc
test
sbb
adc
popf
movsb
mov
mov
mov
and
mov
xchg
mov
add
test
mov
movsl
adc
inc
pop
in
test
lret
cmp
das
push
dec
mov
xchg
cmpsb
or
mov
mov
adc
add
jl
insl
xchg
dec
es
xchg
subb
loop
xor
pop
mov
je
mov
sbb
ss
adc
das
jns
push
sbbl
inc
xchg
insb
add
popf
jno
gs
movsb
sub
or
repz
and
ret
xor
std
mov
fdivr
jns
add
in
mov
pcmpgtw
sbb
xchg
dec
insl
adcl
pop
out
or
sbb
mov
add
nop
outsb
dec
push
xor
std
xchg
testb
adc
lcall
fdivrs
sbbl
inc
shlb
fldl
mov
pop
rclb
pop
fs
cmp
test
sub
mov
and
addl
jbe
imul
xor
mov
adc
test
hlt
sbb
dec
inc
mov
movl
pusha
push
rcr
sbb
je
sbb
jno
xor
fsubs
lock
push
adc
movsl
or
push
cwtl
xor
test
adcb
rorl
mov
sbb
pop
mov
push
jns
mov
mov
cwtl
test
xchg
mov
clc
dec
arpl
loopne
mov
mov
add
in
orb
sub
and
idivl
pusha
inc
movsb
lods
mov
ret
lea
dec
cmp
fs
pop
mov
insl
iret
cltd
jbe
or
push
pusha
adc
es
es
cmp
sbb
cltd
and
cwtl
fs
inc
sub
inc
xchg
push
nop
xor
fmuls
stc
and
push
inc
cmp
clc
fldcw
mov
dec
and
push
sbb
aaa
xor
shrl
enter
mov
leave
movsb
fsubl
orb
dec
jo
popa
adc
and
fnstsw
loopne
sub
sbb
scas
test
mov
in
sub
mov
or
xor
jb
mov
add
add
mov
imul
mov
mov
hlt
push
shlb
fwait
and
jmp
inc
pop
leave
loope
pop
and
enter
in
dec
leave
fsubr
test
movsb
movaps
or
fcoml
add
inc
int3
sbb
xchg
or
stc
pop
int3
rclb
adc
dec
fcomps
js
mov
es
loopne
test
and
cltd
jbe
jo
pop
pop
adc
and
fs
inc
ljmp
cmpsb
rorb
bswap
lds
movsb
test
mov
and
sub
push
adc
push
or
jne
sub
fadd
or
inc
scas
mov
jl
xchg
nop
add
jo
insb
and
add
out
inc
pop
mov
adc
pop
sub
mov
test
insb
rep
ja
push
dec
repz
loopne
inc
sbbb
outsl
loopne
pop
test
sub
pop
sub
pop
mov
pop
leave
ss
sub
cwtl
mov
aad
mov
push
jmp
jecxz
cwtl
popa
pop
movsb
fwait
les
pop
shrb
lock
inc
sub
repnz
aad
add
aam
sti
dec
shll
and
dec
fisttps
fadds
or
daa
xor
push
sbb
mov
push
or
daa
push
sub
mov
or
sbbl
dec
notl
nop
ror
adc
dec
repz
sbb
and
add
movsl
popa
xor
cmp
inc
fs
ret
inc
test
fisubrl
mov
pop
test
mov
inc
mov
in
dec
cmpsb
mov
jns
sub
cwtl
adc
gs
mov
add
sbb
sub
ljmp
jo
inc
pop
xor
in
and
xchg
adcb
or
dec
sbb
cld
push
xchg
lea
and
add
add
or
fldt
add
imul
scas
add
or
inc
sub
out
sbb
pusha
or
sbb
lret
out
lock
fadds
lahf
enter
jbe
jnp
inc
aam
lods
dec
pop
pop
pop
or
xchg
or
leave
add
aam
loopne
addr16
fcmovu
out
fildll
adc
bound
addps
xlat
pop
adc
lds
mov
or
pushf
cmp
test
das
inc
xor
dec
andb
cmp
xor
cwtl
ss
pop
xchg
mov
inc
lods
sbb
ss
mov
mov
mov
pop
push
xorl
ret
lods
push
dec
aam
mov
stc
mov
mov
or
insl
sbb
leave
xorb
push
cmp
movsb
lods
test
adc
sbb
int3
mov
pushf
sub
inc
js
push
test
xorb
insl
fs
mov
ud1
mov
cmp
pop
daa
daa
daa
mov
bswap
les
lods
movsb
pushf
xchg
mov
test
adc
and
negl
dec
pushf
fmull
dec
push
sub
leave
and
cmp
xor
cmpsl
in
pop
sub
mov
fisttps
test
sbb
add
xchg
mov
adc
and
rclb
push
insl
pop
push
mov
sub
rcl
mov
jecxz
test
and
lods
neg
cmp
imul
enter
xchg
mov
loope
outsb
cmp
or
popf
pop
mov
lcall
xor
add
jge
movb
inc
leave
lea
loope
sub
add
jne
pop
dec
sbb
dec
mov
es
cmp
mov
pop
inc
aam
bound
xchg
xchg
stos
mov
test
xchg
xchg
xchg
xchg
rclb
xchg
mov
les
leave
and
enter
push
mov
push
add
mov
mov
inc
mov
test
pusha
pop
cmp
and
mov
pop
mov
mov
sbb
or
jmp
cmp
ss
shlb
stos
pusha
cmp
adc
mov
movsb
lea
xlat
sbb
pop
cld
dec
fwait
fs
pop
adc
or
dec
rcrb
mov
sub
inc
push
cltd
flds
movsb
loopne
jne
and
sub
in
and
add
jns
cltd
push
inc
add
bound
pop
xchg
and
orb
enter
dec
push
call
mov
pop
xchg
xor
sbb
test
or
ja
or
in
invd
xor
shll
test
outsl
loopne
mov
enter
cltd
jns
adc
pop
adc
push
xchg
xchg
and
mov
lock
insl
pop
leave
aaa
loop
stos
mov
inc
and
gs
inc
mov
adc
sub
pop
adc
adcl
xchg
sbb
xor
pushf
mov
mov
adc
add
xchg
or
or
pusha
xchg
dec
stc
les
imul
mov
nop
arpl
cmp
push
cmp
roll
rclb
dec
xor
xchg
sarb
mov
xchg
xor
aas
mov
cltd
in
int3
pushf
pusha
xor
adcl
subl
jecxz
ja
aas
xchg
movsb
cs
rcrb
fwait
movsb
nop
dec
fimull
mov
push
rcll
add
lock
inc
jo
repnz
repz
nop
imul
adc
rorl
mov
xchg
inc
sub
cwtl
nop
add
sbb
and
sbb
popf
or
add
lods
aas
or
push
or
rorb
jo
jo
sbb
xor
mov
adcb
ja
flds
add
or
test
xor
lock
loop
leave
in
hlt
dec
pop
shll
pop
sub
imul
push
mov
push
and
adc
in
hlt
cltd
inc
cmp
or
in
jg
insl
aaa
in
xlat
push
mov
sti
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
or
lds
clc
icebp
mov
inc
and
xor
xor
adc
push
xchg
arpl
mov
add
sub
push
adc
sbb
xchg
pop
test
in
pusha
test
sub
inc
add
inc
int3
cmpsb
call
out
push
aas
in
pop
hlt
popf
das
aas
dec
xchg
mov
inc
mov
faddl
mov
add
loopne
idivl
inc
int3
dec
add
or
pop
add
add
subb
sub
jae
out
add
mov
sub
sti
movsb
push
add
push
or
dec
jae
add
cmp
xor
inc
cltd
scas
shll
push
adc
or
or
mov
sbb
sbb
adc
mov
pusha
popf
adc
pusha
enter
hlt
mov
dec
jne
test
jno
mov
add
cmp
or
pop
sar
jns
ljmp
cmp
aam
in
fnstenv
outsb
lcall
jmp
mov
lods
cmpl
mov
enter
mov
mov
jo
mov
fs
dec
add
bound
mov
adc
inc
xchg
and
aam
movsb
or
inc
arpl
push
pop
cmc
fldcw
aam
add
fsubrl
sub
xchg
pop
dec
adc
mov
lret
inc
xor
add
fstpt
rcrb
sub
jno
push
jb
jo
inc
xor
enter
or
cmp
sub
insb
aas
ret
xor
std
addl
fadds
sbb
and
ffree
das
jb
movsb
mov
jecxz
pop
pusha
pop
cmc
push
insl
mov
call
js
push
xor
xorb
lods
ja
in
bound
adc
movsl
cli
adc
dec
mov
adc
iret
xchg
scas
and
xor
and
lods
popa
or
iret
cmp
je
cmp
arpl
add
mov
ret
inc
add
mov
add
or
popa
cmp
adc
push
xchg
shl
lahf
in
dec
pusha
cmp
es
or
dec
repnz
sbb
out
xchg
mov
add
sbb
sub
adc
mov
mov
push
mov
movsl
loopne
mov
dec
pop
mov
adcb
loopne
mov
addb
mov
dec
or
int
stc
xchg
sbb
fisubl
jl
jmp
imul
jl
add
inc
mov
dec
aam
inc
mov
mov
push
pushf
adc
scas
jne
add
sbb
xor
ret
inc
add
push
ret
add
imul
sub
test
stos
movsl
push
xor
inc
cmc
xor
int3
test
mov
mov
nop
imul
push
mov
dec
add
or
js
sbb
push
loop
push
pop
mov
xor
stos
inc
out
jae
add
mov
or
rcl
ret
push
std
and
lods
push
rclb
mov
repnz
adc
push
std
mov
les
cli
push
test
cltd
mov
ds
jp
mov
int3
and
and
dec
in
inc
cs
repnz
and
xlat
inc
dec
xlat
fmul
and
mov
fcoml
jb
jb
loopne
xchg
mov
adcl
push
std
or
and
add
fdivr
adc
add
mov
or
adc
xchg
jl
fisubrl
sub
pop
sub
adc
sub
sbb
adc
mov
and
dec
loopne
cmp
movsb
adc
enter
outsl
cwtl
pop
mov
test
push
jbe
xchg
fs
push
and
lds
add
dec
mov
mov
mov
nop
add
enter
fsubs
cs
lret
mov
in
inc
sbb
push
in
out
xchg
loopne
jmp
xchg
ret
mov
pop
clc
and
pop
push
or
out
outsl
push
push
mov
push
stos
pop
push
outsb
pop
adc
pop
mov
xchg
filds
fsubs
repz
dec
push
ja
out
ds
cltd
mov
aad
sbb
aas
pusha
jbe
lods
cmpsb
mov
add
add
xchg
cmc
test
xchg
push
sti
mov
aad
stc
mov
push
int3
push
inc
mov
push
sar
decl
jnp
mov
add
adc
mov
rcll
xchg
adc
int
outsl
fs
push
or
cmp
rclb
cmpl
test
pop
sti
call
in
pop
adc
test
and
icebp
push
push
and
jl
negl
loop
inc
and
and
idivb
sti
inc
js
clc
popl
push
in
xchg
add
lmsw
pop
sub
stos
xor
and
push
bound
and
insb
outsl
arpl
imul
outsl
fwait
dec
test
sub
popa
arpl
jne
jb
outsb
je
mov
add
das
add
push
insl
adc
idiv
scas
and
rolb
inc
outsl
jb
js
je
jb
repz
outsl
mull
jae
or
outsl
add
add
add
jbe
outsb
filds
push
jne
les
inc
and
and
int3
aas
mov
push
add
sbb
fadds
aaa
or
jg
dec
add
inc
xor
inc
push
add
loop
testb
add
pop
dec
push
and
push
insl
femms
fidivrs
xchg
je
je
and
jae
dec
mov
dec
adc
insl
clc
fidivrs
clc
push
push
or
negl
cmp
lret
sbb
cmp
or
jbe
aas
js
cmpsl
mov
jp
outsl
or
fbstp
mov
gs
ja
fcmove
bound
and
outsl
jmp
xchg
je
aaa
jo
mov
xlat
mov
insl
sub
push
imul
scas
cmp
jne
jno
out
sub
data16
pop
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
inc
shl
loope
sub
arpl
dec
push
push
in
cmp
push
cmpl
or
daa
dec
jbe
fisubs
inc
inc
fbstp
outsb
bound
loope
aaa
adc
sbb
jo
sub
outsl
lds
mov
xor
insl
mov
xchg
fistpll
filds
push
das
jb
jecxz
gs
fidivrl
xor
mov
xor
cmp
pusha
daa
outsl
subl
cmp
clc
aam
or
outsl
xchg
lahf
pop
pop
push
jno
jg
dec
enter
iret
fbstp
or
push
dec
fbstp
rcll
xchg
mov
xchg
xorl
jae
mov
inc
pop
jbe
xor
mov
bnd
das
popa
vpand
sbb
push
adc
cmp
insb
push
cmc
aam
jo
lahf
outsl
aas
pop
mov
pop
or
arpl
sbb
in
mov
xlat
add
leave
rorl
mov
stos
fs
imul
xor
pop
rcl
orb
fbld
movd
xor
subl
pushf
mov
pop
xchg
pop
cmp
stos
pop
cmpsb
mov
lret
je
scas
cmp
lock
inc
popa
mov
mov
subb
pop
pop
jecxz
or
sbb
push
push
sub
sub
ret
shlb
dec
addr16
mov
sbb
add
push
iret
repz
or
mov
inc
inc
orb
sub
das
in
iret
jae
imul
sbb
in
sbb
clc
jmp
jne
repz
sbb
push
das
ljmp
xor
lahf
jmp
iret
push
lcall
and
iret
iret
push
cld
fsubrs
hlt
mov
aaa
add
data16
jp
sbb
out
add
sub
push
push
mov
dec
jb
fcmovne
add
clc
mov
pop
mov
lock
imul
fidivrs
pop
mov
shll
jnp
push
mulb
dec
add
sbb
mov
add
sbb
and
jns
add
aad
frstpm(287
das
das
and
test
jbe
sti
ret
dec
inc
and
push
jbe
push
decb
jmp
ljmp
idivl
mov
ret
xlat
aas
dec
inc
xor
daa
mov
jne
ds
daa
outsl
mov
pusha
insl
dec
and
insb
rorl
das
pop
pop
imull
mov
out
iret
jns
out
add
and
arpl
pop
sahf
scas
jne
jp
jae
push
and
sub
pop
dec
insl
in
cmpsb
pop
fbld
ds
negl
fcmovnb
mov
iret
mov
and
jg
cmp
cmp
cld
mov
sub
fs
dec
and
fisubrl
pop
jns
add
das
das
jns
push
dec
push
inc
std
loop
inc
arpl
bound
dec
outsl
jbe
dec
arpl
add
je
adc
jo
sub
addr16
mov
jne
xchg
outsb
xchg
inc
jo
imul
jb
jg
bound
pushf
jae
into
inc
popa
outsb
adc
jae
cmp
xchg
popl
ja
ja
pushf
addr16
popa
je
jb
xor
mov
push
push
gs
sbb
mov
sahf
adc
outsb
and
jbe
out
pop
dec
inc
aas
add
pop
icebp
lcall
mov
ja
fildll
push
push
call
push
popa
insb
jne
inc
inc
jecxz
test
push
aas
lds
daa
sub
ljmp
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
push
push
dec
dec
dec
push
push
sub
fisttps
pop
pop
adc
ret
jmp
bound
gs
imul
jo
add
mov
ja
jns
jnp
jge
jg
adc
decl
inc
cmp
add
mov
mov
push
sar
lret
jno
icebp
idiv
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
or
std
cwtl
hlt
iret
mov
add
jo
xor
popa
js
addl
popa
aad
dec
pop
sbb
out
jo
dec
mov
ret
sub
mov
int3
adc
adc
add
pop
movsl
jge
add
add
add
and
push
pop
push
xchg
ret
add
xor
pop
int
lahf
sbb
or
pusha
adc
js
into
fidivrl
or
cmp
add
sbb
outsl
out
fistpll
addl
ret
fwait
mov
add
orb
neg
push
cmpb
push
and
sub
jb
xor
lcall
into
jo
add
mov
mov
mov
cld
push
and
outsb
and
push
or
inc
lret
shlb
jno
mov
jb
add
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
in
mov
or
inc
dec
cmpsl
ror
scas
mov
jge
popf
hlt
add
lods
stos
aad
mov
enter
cmc
jp
pop
add
sbb
subl
cmp
ja
mov
cmp
rdtsc
ss
js
dec
dec
inc
movl
out
shrl
fs
je
cs
adc
dec
dec
bound
je
outsb
data16
in
js
xor
ss
out
je
xor
divb
adc
jo
pop
lea
mov
pop
mov
outsl
js
push
xchg
mov
and
cs
and
insl
jo
jo
and
mov
sub
shlb
aaa
insb
les
dec
inc
sti
add
and
add
pop
imul
ds
cmp
dec
inc
jb
jns
cmp
daa
pop
and
ss
jns
mov
insb
and
in
test
je
and
inc
sbb
cmp
outsb
jle
jbe
mov
fdivl
or
jb
and
fidivrl
pusha
inc
jbe
push
fiaddl
fmuls
imulb
xor
or
and
sub
arpl
clc
mov
lcall
cmp
push
and
mov
xchg
inc
pop
dec
adc
pusha
adc
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
or
push
cmp
call
push
hlt
clc
addr16
cmpl
ja
mov
data16
push
mov
insl
mov
push
push
push
dec
testl
imul
repnz
push
lods
mov
mov
fisttps
shlb
dec
jge
or
sbb
imul
push
imul
stos
rorb
pusha
jg
ret
push
inc
outsl
jae
inc
push
xor
das
gs
sbb
lods
fadds
mov
push
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
mov
rcrl
pop
cmp
cmp
ds
mov
das
push
sub
pushf
lock
jle
shr
cltd
es
add
jnp
cltd
iret
add
sub
pop
or
sbb
test
fisubrs
das
push
jb
push
mov
and
push
mov
push
xchg
pusha
mov
jne
stos
addr16
push
jbe
mov
loopne
sbb
jo
ss
gs
push
push
pushf
imul
and
cmp
push
sahf
fsubl
int3
inc
pop
sub
popa
sub
push
jl
out
out
out
mov
add
sub
sarl
add
std
lock
cmp
fs
repz
rclb
mov
repz
mov
test
cwtl
xchg
jns
repz
mov
mov
jl
jns
repz
rorb
aam
insb
push
push
fs
pop
pop
into
push
push
cmp
repz
dec
inc
inc
cmp
cmp
repz
sub
dec
repz
push
or
call
iret
repz
mov
sub
out
add
sti
les
pusha
push
dec
inc
xor
sarl
or
cli
in
shlb
mov
or
stc
jl
out
int3
test
push
xor
repz
jnp
jg
push
add
lock
jle
mov
add
inc
es
sub
in
sub
enter
inc
addl
add
ljmp
xchg
dec
leave
stos
push
add
cmp
add
add
xor
push
mov
adc
or
fcomps
inc
in
pop
ret
insl
sbb
das
jle
inc
add
addb
xchg
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
dec
into
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
insb
dec
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
xchg
inc
adc
or
adc
mov
decl
mov
popa
stos
rclb
ljmp
outsb
gs
popa
data16
pop
aas
out
pop
inc
shlb
xor
data16
push
insl
test
mov
aaa
dec
cmp
icebp
push
arpl
inc
push
sbb
aas
sbb
jmp
xor
mov
or
mul
aam
push
setl
sub
add
scas
add
inc
adc
push
xchg
ja
xor
and
inc
dec
cmovns
add
pop
mov
imull
adc
loopne
clc
inc
call
rclb
mov
dec
sti
fildll
out
xor
jnp
inc
loop
mov
ds
enter
pop
adc
clc
lret
sbb
jb
imul
call
adc
dec
scas
jp
jno
pop
enter
sbb
xchg
fisubrs
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
loope
out
fcoml
mov
or
insb
mov
out
leave
ljmp
mov
dec
test
shrl
lcall
mov
adc
xchg
dec
add
scas
lods
dec
lock
mov
iret
adc
push
pop
pop
repnz
dec
enter
and
es
sahf
sbb
add
scas
mov
pop
xchg
dec
enter
ss
lahf
dec
inc
shlb
or
inc
sub
xor
andl
mov
and
fisttps
xchg
ret
jns
daa
dec
xchg
aaa
lock
and
testb
out
in
xorl
cmp
push
jae
test
and
sub
xchg
data16
scas
adcl
ret
popa
xlat
mov
pop
pop
bound
dec
or
jne
fs
xorl
sti
or
pop
fbstp
daa
mov
sbb
sbb
lock
lea
jmp
call
insb
inc
lahf
je
or
pop
fistps
add
loopne
jmp
xchg
lret
xchg
inc
jnp
arpl
divb
jb
add
pop
fs
add
pop
mov
push
push
outsl
xor
lahf
test
mov
xlat
insl
jle
in
loope
mov
ficoml
mov
mov
test
and
add
xor
adc
jbe
out
loop
cmp
pusha
and
mov
sti
xchg
insb
daa
jnp
mov
popa
cwtl
lods
mov
ret
mov
jmp
jae
adc
jo
aas
jns
outsb
xlat
ficoms
shrl
jg
jg
adc
rorl
cmp
pop
adc
jecxz
add
sbb
arpl
ret
mov
call
mov
iret
push
push
insl
inc
sti
lock
je
cmp
adc
cmp
push
mov
push
jecxz
or
adc
js
pop
inc
xchg
insl
repz
dec
gs
jbe
and
aas
stos
mov
clc
ret
gs
dec
pop
ret
and
jp
add
addr16
jo
pop
adc
insb
repnz
jecxz
jg
ja
pop
popa
orl
mov
addr16
out
pop
test
je
push
mov
mov
int
aas
arpl
daa
fdivs
sti
pop
arpl
das
push
jae
pop
push
push
ret
xor
ret
lods
cmp
and
sbb
es
add
dec
sbb
jae
pop
pusha
aad
mov
loopne
xor
push
sub
jnp
adc
and
push
add
add
lahf
inc
aas
xchg
push
mov
xchg
je
jb
push
inc
scas
and
mov
push
mov
push
pop
call
inc
sbb
adc
shll
jno
out
sub
jne
cmp
dec
inc
dec
mov
negl
sar
push
adc
aaa
outsl
inc
orl
xor
arpl
sub
push
dec
pop
lock
sub
adc
sbb
xor
push
jecxz
xor
jecxz
push
xor
stos
imul
idivl
push
mov
inc
loope
clc
mov
push
js
pop
push
and
dec
push
loop
jne
movl
jb
cmp
sub
ja
mov
outsb
add
add
out
pop
push
lret
fcoml
xor
fmuls
insb
dec
pop
ret
cmp
push
dec
inc
inc
jno
sbbb
mov
cmpsl
scas
push
jne
push
inc
sub
outsl
or
pop
icebp
out
mov
pop
pop
arpl
mov
pop
fidivrl
ret
ja
es
imul
shrl
mov
mov
out
jo
clc
mov
sub
cmpsl
push
aad
cmpsb
mov
inc
dec
add
outsl
mov
fwait
mov
jbe
jnp
ss
mov
adc
aas
dec
sbb
sub
xchg
cli
iret
pop
dec
ud2
addr16
bound
jecxz
imul
in
js
pop
scas
inc
bound
cmpsl
add
shrl
cmpsl
xchg
inc
arpl
div
loopne
aas
pop
outsl
push
inc
adc
mov
testl
add
mov
negb
inc
inc
jl
jl
adc
pop
mov
pop
jl
push
not
pop
imul
ja
mov
and
addr16
bound
sub
push
das
push
cmp
test
mov
fs
mov
out
xor
cmp
jns
sbb
mov
ret
mov
push
mov
jl
pop
ja
sbb
cmc
cmp
iret
out
es
sbb
ficomps
inc
mov
shrl
push
imul
outsb
mov
cmp
pop
popa
pop
arpl
jp
jl
subl
jbe
mov
jl
into
add
mov
jo
bound
jns
jg
pusha
lea
push
sti
jl
sbb
sarl
sbb
iret
mov
sahf
jl,pt
imul
push
xchg
insb
cmp
lea
cmpl
sbb
bndstx
jl
xor
inc
and
addr16
outsl
fiadds
fs
and
inc
xlat
adc
or
push
sahf
rol
addb
cmp
arpl
in
les
daa
fcomip
orl
jns
daa
jae
mov
inc
pop
out
aas
dec
loop
cmp
das
stos
pop
mov
pop
fwait
xchg
fistps
cs
pop
pop
xlat
aad
push
cmpsl
xor
bound
sbb
divl
push
push
insb
arpl
dec
mov
aas
popa
jbe
add
aaa
imul
xlat
lock
das
imul
adc
jg
push
add
xor
inc
add
dec
push
loope
fldcw
pop
dec
sbb
dec
and
push
push
mov
lcall
adc
sbb
jbe
inc
pop
enter
dec
data16
ds
sti
push
fsubl
mov
jmp
push
push
in
dec
mov
ds
push
mov
and
push
in
jnp
insb
and
xlat
push
push
push
push
ret
scas
cmp
push
xor
cs
cmpsl
stc
mov
push
pushf
sub
out
sahf
hlt
roll
aas
pop
int
out
test
into
lds
mov
negl
push
filds
jecxz
xor
iret
repz
lock
push
and
push
arpl
jnp
ret
addl
push
test
jns
out
cmpsl
lcall
dec
inc
mov
push
push
mov
aaa
dec
and
push
orl
jmp
push
jo
jns
jno
or
xchg
sbb
ret
mov
cmpsb
dec
mov
arpl
insb
pop
les
stos
aas
mov
popa
lret
icebp
xchg
xchg
outsb
arpl
std
loopne
nop
push
gs
insl
pusha
push
popa
jne
or
dec
mov
push
dec
bound
xor
pop
sub
and
imul
jb
push
push
jb
je
lahf
out
ficoms
lock
iret
repz
js
ret
aam
ds
repz
cmp
jns
out
xchg
pusha
pusha
sahf
dec
mov
mov
pop
inc
pop
pop
dec
cld
or
jb
jno
je
cmp
aaa
mov
push
jo
jb
add
jae
cmp
into
fidivl
ss
sbb
and
jnp
inc
and
jae
imul
and
outsl
adc
mov
rclb
daa
sub
das
cmp
sbb
in
imul
pop
cmp
sbb
ja
imul
cmp
nop
and
add
or
aas
xor
push
dec
rcrl
or
inc
or
push
inc
push
daa
inc
adc
ja
push
lahf
jp
adc
js
test
arpl
mov
arpl
pop
packuswb
inc
adc
adc
pop
repnz
jae
and
mov
pop
dec
ja
roll
inc
push
adc
pop
out
orb
pop
mov
add
hlt
mov
and
out
inc
iret
into
outsb
mov
jecxz
and
or
pop
pop
and
imul
clc
mov
and
fs
bound
xchg
popa
and
sbb
fwait
into
mov
jae
jge
dec
scas
jg
sub
or
or
xchg
xchg
or
xchg
sbb
and
and
dec
fldt
test
addb
aam
mov
jne
and
mov
mov
push
pushf
push
pop
sbb
jo
outsl
jg
push
dec
inc
clc
or
pop
pop
dec
dec
mov
mov
mov
cmp
inc
inc
pop
cmpsl
push
pop
inc
addr16
in
movsl
push
movsb
jnp
mov
push
adc
lds
mov
add
jg
xchg
sbb
mov
and
xor
cmp
push
fadds
xchg
push
mov
sub
cmp
xchg
imul
mov
jae
ja
fmuls
aad
mov
add
lock
cs
bound
test
xor
aas
hlt
or
pop
cs
jb
fs
add
xor
nop
xchg
test
push
mov
shl
mov
sub
xor
push
cli
arpl
je
fisubs
fadds
adcb
push
outsl
data16
arpl
shrb
test
lcall
fidivs
push
mov
dec
xchg
out
or
fwait
imul
add
pop
sti
pop
add
add
sahf
jg
hlt
fsubrp
scas
cmp
inc
aas
mov
inc
mov
push
mov
aas
push
sbb
add
add
sbb
sub
cmpsl
outsb
pop
jg
fs
lods
subl
jb
mov
jns
sub
js
pop
fwait
push
je
aam
pop
idivl
push
mov
sbb
mov
imul
scas
ja
inc
stos
adc
pop
dec
fstl
iret
push
jmp
imul
ja
adc
and
dec
out
push
lret
mov
iret
push
or
sbb
lods
xor
xlat
mov
pop
aaa
pop
and
cmpsl
push
cs
sbb
mov
add
cmpsb
mov
sti
ret
fisttps
lahf
fisttps
out
fldt
imul
xlat
inc
push
imul
aas
imul
das
sbb
adcl
aaa
sahf
out
rolb
das
add
mov
das
dec
imul
mov
movsl
and
xor
mov
sub
xchg
mov
or
dec
mov
lret
jae
shrb
xchg
outsl
dec
add
mov
add
push
test
fwait
pusha
popa
inc
cmp
imul
inc
xchg
jo
shll
xor
and
push
xchg
xor
sbb
push
cmpsl
shrl
fs
test
mov
pop
or
shrl
add
call
out
insb
je
inc
loopne
daa
push
lods
shll
jne
dec
mov
mov
fbstp
cmp
pop
loopne
sbb
xchg
insb
nop
pusha
scas
mov
sbb
scas
pop
mov
xchg
iret
or
jo
or
aas
push
loop
mov
xchg
gs
pop
rclb
sbb
mov
sbb
dec
add
adc
call
fs
or
arpl
movsb
sbb
imul
ss
push
movsb
or
jno
cmpsl
jle
out
popa
adc
push
add
clc
pop
inc
imul
push
popa
arpl
fs
pop
rclb
cwtl
jne
push
imul
nop
or
and
pop
aaa
xor
outsb
dec
scas
xor
bound
and
add
js
mov
xchg
jmp
scas
shl
ljmp
lods
bound
shrl
pop
movsl
shll
mov
imulb
dec
test
cmp
lahf
push
mov
adc
popa
xchg
mov
cmp
lret
push
mov
stos
inc
enter
mov
adc
add
vmovsd
dec
mov
push
sub
cs
imul
xchg
add
dec
adc
push
stos
xor
nop
outsb
pusha
insl
push
push
jmp
aaa
sti
fsubs
sub
mov
mov
ja
adc
imul
in
xor
push
enter
dec
popl
cmp
push
sub
mov
packuswb
or
lcall
pop
push
adc
fwait
dec
jl
push
push
mov
pop
pshufw
loopne
jg
fisttps
mov
pop
testb
insb
fcmovnu
dec
push
add
mov
mov
push
sub
push
jl
add
xchg
jo
fs
cs
and
dec
jge
jge
iret
outsl
iret
jp
cmpsl
testl
fwait
arpl
xchg
mov
repz
mov
sub
and
call
fistpll
insb
shrb
dec
mov
inc
and
mov
pop
iret
mov
out
xabort
loopne
jl
and
stc
sarl
cld
jnp
mov
push
idiv
aam
push
repz
and
pop
add
sahf
out
push
jp
or
movsl
push
aaa
lahf
out
or
or
or
lods
imul
fists
addl
and
bound
xor
imul
lods
loop
pop
xor
or
movsl
mov
inc
mov
mov
out
lahf
xor
and
or
xchg
mov
cwtl
popaw
divl
push
scas
out
lret
push
jae
jae
imul
lods
adc
cmp
lahf
pop
mov
mov
aas
adc
shlb
pop
mov
out
adc
sub
pushf
push
mov
sub
arpl
cmp
mov
ljmp
shll
push
add
dec
push
or
xlat
xchg
xor
insb
add
mov
mov
sub
xchg
sbb
stos
and
add
scas
pop
stos
inc
dec
test
cmp
addl
xchg
cmpsl
xlat
aas
lds
adc
xor
push
imul
aaa
outsl
push
mov
add
mov
fwait
push
mov
cwtl
fldt
pop
arpl
xor
sarb
jge
jae
rcr
sub
jae
popa
xchg
jne
xor
fs
jmp
loop
inc
outsb
sbb
pop
jb
xchg
iret
pop
mov
outsl
insl
aas
sub
stos
and
adc
cmp
jo
mov
mov
mov
sub
lods
xor
jl
push
push
jb
std
inc
push
int
push
jae
push
add
adc
stos
inc
stos
in
cltd
lods
pop
dec
and
stos
insb
in
jb
sbb
test
js
push
xor
cmpsb
xchg
push
leave
xor
cmpsl
mov
sub
and
inc
sub
mov
dec
cld
movsb
test
xchg
pop
and
in
mov
fs
mov
mov
push
cmpsb
xchg
mov
repnz
mov
push
and
lahf
stos
in
cltd
xorb
and
nop
cmp
sub
call
xchg
stos
inc
in
pushf
push
jb
dec
cwtl
inc
scas
xchg
test
dec
xor
test
push
leave
push
pop
or
cltd
dec
pop
mov
stos
in
sarl
push
movsb
mov
sbbb
dec
mov
push
inc
inc
push
adc
divl
loop
scas
dec
or
es
mov
push
addr16
mov
inc
dec
push
lods
mov
fildl
xor
mov
cmp
inc
pop
scas
mov
pusha
iret
dec
out
pop
sbb
das
inc
mov
xchg
xor
mov
pop
dec
inc
ret
adc
mov
aaa
mov
fwait
add
test
push
inc
aas
sub
inc
repz
dec
inc
dec
inc
insb
mov
in
add
mul
push
insl
sbb
inc
shll
movsl
and
inc
sub
fstpt
insl
mov
xlat
loopne
or
push
cmpsl
or
cmpsl
das
inc
or
cltd
outsl
adcb
sbb
int
es
scas
addr16
lds
testl
lea
jg
hlt
push
adc
cmpsl
lahf
cld
push
push
orl
shrb
or
mov
subl
adc
test
popf
shlb
push
nop
pusha
stos
popa
ljmp
xchg
sbb
out
aaa
filds
jp
xchg
aaa
outsl
add
xchg
mov
add
das
push
cmpsb
lea
inc
outsl
jecxz
dec
insb
loope
sti
lahf
aas
xchg
sbb
daa
xchg
gs
sbb
pop
cmp
add
jbe
ret
dec
mov
ljmp
shlb
xchg
sbb
push
scas
pop
mov
iret
inc
sbb
dec
push
sbb
or
jo
ret
push
clc
jno
or
out
outsl
jbe
xchg
cmpsb
mov
xor
dec
ficomps
sub
add
mov
pop
add
mov
add
adc
repz
xlat
popa
xor
xor
add
jnp
mov
sub
adc
push
addr16
or
lods
inc
in
or
sub
push
movsl
add
rorl
add
fstpt
and
subb
inc
popl
aam
inc
dec
xor
imul
emms
ret
cmp
jne
addr16
in
ficomps
adc
insl
je
xor
je
cmp
imul
pushf
jb
or
push
xchg
les
fnstcw
add
push
mov
pop
jmp
jmp
jae
fistl
sarb
addr16
les
in
ss
int3
faddp
add
jae
js
imul
cmp
and
icebp
xor
jbe
adc
fwait
jmp
pop
ret
repz
mov
shlb
push
andb
mov
and
icebp
pusha
lods
adc
push
push
sahf
out
sahf
inc
push
sub
repz
es
stos
add
stc
cmp
stc
outsb
jnp
mov
test
dec
push
ficompl
cmpl
cs
shrb
push
mov
and
jg
mov
jb
adc
push
inc
xchg
add
imul
dec
adc
in
pop
fwait
sbb
sbb
test
cmpsl
mov
cmp
inc
stos
test
inc
out
shrb
xor
pop
mov
lods
cwtl
outsl
cmp
jno
je
xor
xor
xor
fnsave
push
testb
sbb
or
add
mov
lock
adc
xor
inc
pusha
xchg
les
and
and
mov
ffree
inc
ss
pop
stos
outsl
pop
push
scas
and
stos
dec
shlb
repz
xchg
rorb
or
pop
cmp
test
dec
ss
mov
jmp
mov
daa
ret
pop
or
loopne
pop
stos
out
lea
movsb
out
rcrl
adc
or
scas
push
adc
pop
lea
xchg
jge
add
push
outsl
jp
aas
pop
shll
dec
cmpsb
xchg
pop
push
pop
inc
out
push
push
bound
push
push
push
fimull
xchg
push
cmp
cmpsb
xor
push
push
aaa
out
imul
push
sarl
insl
xchg
dec
jp
jbe
mov
cmp
inc
pop
ret
jns
test
stos
push
je
xor
mov
pop
imul
pop
lret
jnp
pop
dec
shlb
mov
inc
or
sar
out
or
xor
mov
cmp
xchg
mov
into
dec
or
inc
push
imul
sbbl
mov
sbb
adc
sarl
xor
xor
xchg
outsb
jb
loop
push
push
mov
ja
mov
jo
outsb
sbbl
retw
sbb
lret
cmpb
shlb
sub
arpl
fs
lock
iret
cmp
testb
sti
fidivrl
push
mov
cs
ja
into
inc
add
imul
neg
cmp
pop
pop
mov
push
es
ss
outsb
div
mov
xor
dec
jb
das
imul
inc
pop
dec
es
das
add
sti
push
fisubs
data16
inc
pop
push
pxor
out
xor
dec
cs
sahf
push
cmovg
outsl
push
push
sti
js
insl
sub
push
fidivrl
mov
inc
ja,pn
xor
push
repz
jp
ds
mov
ret
dec
jg
dec
loope
js
das
xor
das
lods
sarl
dec
xor
js
push
into
xor
orl
outsl
imul
adc
and
daa
xor
popa
lahf
out
sbb
rol
jb
dec
lods
lret
loopne
push
test
ja
sub
outsl
jecxz
sahf
xchg
mov
inc
pop
sub
inc
pop
jnp
shll
inc
test
shrl
xor
negl
add
mov
mov
sbb
fildl
and
add
adc
cwtl
pop
xor
adc
inc
cmp
lret
stos
adc
cmp
sarl
movsb
dec
pop
popw
lret
in
add
es
cmpsl
fs
ret
addr16
test
adc
mov
scas
cmpsl
arpl
lods
mov
sub
inc
stos
scas
mov
loopne
jae
mov
push
jae
lahf
xchg
mov
jle
push
mov
sub
mov
inc
or
xchg
mov
jmp
mov
sub
add
loopne
bswap
imul
mov
mov
cmp
inc
sbb
rcl
stos
fmuls
mov
add
bound
mov
push
fwait
and
adc
inc
es
das
mov
fs
outsl
or
inc
pop
hlt
clc
aas
aas
add
dec
jecxz
pop
mov
pop
sbb
mov
inc
ret
mov
pop
xor
iret
ja
xlat
lcall
mov
sbb
mov
lods
jo
aaa
sbb
js
sub
and
add
or
fs
out
mov
sbbb
mov
sbb
add
pop
xor
notl
lods
pop
pop
jmp
idivl
sub
iret
imul
xor
fcompl
push
adc
cmp
add
fwait
xor
out
add
outsb
fnsave
pushf
pop
mov
sbbb
cli
cmpsb
std
cmp
jo
arpl
xor
add
xorl
xor
xor
push
movsb
cs
or
inc
adc
das
pop
xor
xchg
rcrl
das
mov
lea
lods
rclb
add
jnp
lahf
xor
push
arpl
scas
add
add
cmp
das
push
sub
mov
jg
push
sub
aas
call
jg
ret
inc
sub
sahf
xor
daa
mov
inc
ret
orb
xorl
push
addr16
pop
les
pop
rcll
sbb
adc
aad
mov
fcmovb
das
movsb
mov
fwait
inc
and
iret
inc
shl
js
das
popa
fldt
and
imul
arpl
mov
adc
lahf
push
or
xchg
pop
faddl
lea
and
and
adc
stos
lods
inc
out
pop
dec
adc
mov
ret
cmp
jmp
mov
out
adc
es
insb
shll
mov
outsb
sbb
dec
push
dec
arpl
xor
cmp
jbe
jb
cmp
out
outsl
iret
push
das
mov
xor
rcrb
fbstp
fs
sub
push
fs
test
filds
mov
dec
xchg
lahf
sub
cmc
xorb
dec
rcl
pop
xlat
jle
scas
testl
sti
mov
mov
jmp
pop
ja
mov
push
sbb
inc
fisttps
mov
addr16
in
xchg
imul
add
imul
out
shrb
jbe
xchg
mov
fidivrl
push
xchg
cmovb
add
aad
adc
push
sbb
iret
add
pop
iret
repz
addl
roll
dec
repz
add
or
xchg
add
pop
add
add
ss
int
pop
or
adc
sbb
and
inc
iret
xor
inc
mov
out
fidivrs
mov
mov
mov
push
mov
push
popa
xchg
add
shrb
ret
sub
int
xor
shrb
xchg
pop
adc
mov
xor
pop
add
insb
ss
insl
xchg
rclb
lret
str
flds
cwtl
or
and
das
inc
dec
ss
mov
push
mov
pushf
mov
push
aas
pop
push
outsl
les
add
inc
sar
dec
nop
and
mov
mov
mov
sbb
ljmp
mov
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jle
jo
fsubs
sbb
decl
cmp
dec
pop
dec
xchg
jbe
mov
push
pop
adc
adc
pop
push
and
cmpsl
daa
scas
sahf
ss
sti
das
in
jge
pop
and
push
movsb
addb
sbbb
mov
inc
or
and
mov
mov
xchg
push
mov
cmp
cmp
push
dec
test
cmp
pop
sub
xchg
pop
jb
xor
pushf
cmp
iret
and
adc
add
movsb
jns
cmp
inc
in
out
xchg
dec
aam
dec
or
sahf
mov
outsl
rolb
rcl
xor
or
mov
add
add
aaa
pushf
movb
mov
dec
cmpsl
cmc
inc
lea
push
ds
imul
sub
pop
sbb
pusha
jnp
cmp
xchg
cmp
fimull
sub
adc
add
pop
cmp
xlat
adc
inc
mov
cmpsb
mov
mov
pusha
and
cmp
jnp
imul
inc
pop
aaa
pop
cltd
lods
pop
dec
pop
dec
imul
jmp
daa
bound
je
push
cwtl
sbb
bound
imul
push
add
cmpsl
adc
rolb
popl
shlb
push
jg
lods
rclb
repz
pusha
xchg
mov
ret
sub
lea
lahf
pop
dec
imul
inc
andl
pop
dec
push
push
loopne
or
scas
imull
push
sbb
lahf
mov
or
dec
xor
outsb
jg
xor
push
or
inc
dec
sbb
xlat
aaa
mov
mov
inc
pop
shll
movsl
jg
movl
push
or
xlat
cmpsb
push
jbe
pop
xor
push
xor
xlat
out
sub
setg
scas
pop
rcrb
sbb
dec
sbb
je
fmuls
push
test
push
push
inc
fstl
aaa
push
push
inc
cmp
add
rolb
jbe
ret
mov
imull
ss
lahf
mov
cmp
es
inc
arpl
and
add
cs
jae
push
test
test
enter
in
cmpl
mov
cs
xchg
pop
int3
pop
inc
fsubrp
repz
push
es
pop
mov
insb
addr16
mov
xchg
inc
and
cmpsb
xchg
fdivp
mov
jo
pop
cmp
inc
testb
int
fwait
pop
inc
sarl
js
push
inc
insb
add
mov
jne
aaa
mov
jo
outsl
subb
jb
outsb
mov
mov
push
dec
add
inc
pop
inc
cmovge
fistl
jl
and
aaa
das
jno
aaa
leave
pop
mov
es
cmpsl
imul
mov
repnz
imul
dec
pusha
push
daa
outsl
fs
cmpsb
mov
sbb
push
icebp
stc
mov
mov
push
mov
insb
das
repz
cmpsl
stos
into
jb
mov
iret
loopne
xor
cmpsb
push
push
push
jge
sub
pop
test
inc
push
inc
push
xchg
or
jns
fwait
daa
fs
into
mov
and
aaa
sahf
negl
mov
push
inc
push
push
push
xchg
popf
mov
leave
repz
lods
into
jbe
pop
filds
sahf
testl
pop
je
jl
in
inc
push
lock
mov
mov
popf
es
push
testb
out
les
mov
cmp
aaa
dec
dec
divl
xlat
cmp
sahf
out
push
xor
jle
cs
ss
inc
sub
push
mov
push
xchg
push
adc
ss
sbb
jns
ja
or
adc
cmp
xorl
das
in
mov
jl
roll
pusha
push
adc
ds
mov
inc
into
idivb
push
push
add
iret
fwait
jmp
cmp
fcomps
repz
cs
shlb
jb
cmp
loope
cmp
jns
movsb
jmp
iret
sarl
nop
ret
out
sahf
cmpsl
inc
imul
iret
sarl
in
sub
sbb
repz
mov
or
mov
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
int
xor
adc
mov
jb
mov
add
jmp
add
idivb
jmp
mov
and
pop
sbb
enter
cmp
adc
or
adc
stc
pusha
or
add
push
pop
enter
imul
aas
mull
daa
subl
out
mov
fbld
pop
lds
inc
rolb
ja
emms
imul
popa
nop
out
push
js
xor
pushf
popf
sub
gs
cmp
popa
popf
xor
pop
xlat
xchg
sbb
sarb
mov
push
test
imul
mov
pop
sub
mov
dec
js
addr16
dec
cli
inc
outsl
and
jb
popa
je
jb
inc
and
cmpsb
dec
loop
movsb
pop
jl
outsl
pop
inc
mov
push
jbe
outsl
iret
pop
push
ficoml
imul
xor
daa
jb
movsb
outsb
add
push
and
dec
lea
inc
mov
sub
rol
jle
pop
sub
sbbl
lahf
push
out
inc
sub
cs
shrb
xchg
or
scas
jle
jp
rcl
jo
push
jo
inc
adc
xor
jl
mov
mov
pusha
jno
outsb
insl
xchg
cmp
pop
stos
stos
in
dec
pop
mov
push
sbb
inc
fs
faddp
dec
ret
mov
xchg
xor
sub
adc
lahf
fs
repz
push
push
arpl
mov
repz
and
add
cmp
sysexit
bound
sub
push
ret
jp
outsl
push
sbb
test
jbe
jo
xor
ja
test
lea
push
outsl
imul
jnp
arpl
xchg
subb
ds
xlat
cmpsb
jecxz
dec
iret
aaa
push
test
dec
inc
outsb
or
rcrb
add
mov
pusha
add
test
dec
mov
push
xchg
adc
aas
xor
mov
js
inc
aas
push
mov
push
adc
inc
push
insb
gs
xchg
loopne
rorb
sub
inc
dec
jg
push
loope
sub
push
dec
arpl
xor
push
pop
addr16
sub
cmp
xchg
inc
test
iret
fs
push
sub
xor
das
out
lods
and
push
cmp
and
imul
inc
loopne
jne
out
push
mov
andl
jbe
sbb
inc
aas
push
add
sbb
dec
push
mov
scas
outsl
test
imul
loope
fdivrs
imul
pop
das
testl
lahf
scas
popa
rclb
pop
mov
xchg
das
cwtl
adc
pop
sbb
mov
je
daa
mov
pusha
insl
mov
mov
xchg
sub
xor
dec
push
sbb
ret
inc
ret
pop
shlb
mov
addl
arpl
lret
cmc
add
arpl
mov
add
cwtl
add
push
scas
fdivs
add
scas
pop
dec
repnz
jg
rol
loope
push
xor
sbb
ss
test
mov
sub
adc
push
sahf
notl
mov
push
aad
imulb
dec
jae
cmp
daa
inc
cmp
rclb
mov
mov
pop
push
inc
bound
ja
push
inc
inc
movups
aaa
mov
dec
or
mov
mov
mov
filds
pop
inc
pop
fistl
add
inc
loope
sbb
xor
je
cmp
add
cmpsl
push
push
fcmovu
push
out
ret
pop
out
adc
lret
add
loop
lods
addl
dec
inc
dec
jecxz
pop
jns
cmp
jno
jg
rolb
and
xlat
cmpsb
repnz
xchg
jno
ljmp
adc
and
aas
int
xor
popa
insl
jo
aaa
shr
jbe
insb
je
add
addr16
loope
mov
sbb
pop
jno
outsl
xor
push
xor
xor
divl
mov
add
incl
xrelease
je
jne
or
mov
mov
pop
inc
call
out
pop
mov
fdivrs
xchg
and
insl
mov
filds
pop
rolb
or
loop
inc
punpckhwd
arpl
dec
outsb
push
inc
add
popa
int
pop
mov
sub
xor
ret
ret
popw
and
lock
maskmovq
imull
pop
mov
adc
pop
lock
push
cmp
dec
jmp
mov
mov
push
enter
jmp
loop
and
into
dec
dec
stos
mov
push
mov
pop
xor
adc
pop
xor
and
ss
pop
inc
mov
add
adc
aam
aam
mov
push
jb
iret
pop
js
add
rcl
scas
adcl
lret
inc
andb
popf
insl
pop
sarl
or
aaa
inc
insb
movsl
ljmp
push
or
daa
xchg
in
or
jb
sbb
push
mov
push
arpl
add
scas
mov
movsl
pop
pop
aas
inc
push
dec
inc
dec
push
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
andl
js
jecxz
pop
clc
pop
ja
in
or
xor
das
ds
das
sbb
out
into
add
add
pop
daa
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
imul
fwait
les
aas
pop
pop
or
pop
gs
imul
push
push
mov
inc
popw
push
sbb
ja
push
dec
aaa
push
add
pop
dec
and
out
incb
xorl
adc
and
and
pusha
mov
mov
sbb
xor
lahf
jmp
flds
xor
fisttps
add
inc
mov
aaa
or
push
inc
imul
scas
lock
push
daa
sub
lahf
sti
push
xchg
push
pop
push
xchg
mov
mov
movl
jl
stc
cld
mov
or
icebp
mov
or
cmpsl
push
sub
lds
daa
call
jl
and
push
inc
or
in
mov
dec
cld
lds
push
shrb
jp
or
dec
mov
pop
push
mov
push
imul
inc
outsl
arpl
popa
or
in
popf
das
je
and
and
arpl
push
es
insb
lods
jge
mov
xchg
and
je
mov
popa
stos
add
cs
cmpb
sub
push
nop
js
push
aas
aaa
mov
inc
dec
inc
cs
data16
push
push
aas
in
mov
pusha
insl
outsl
fs
gs
jo
jns
jbe,pn
iret
inc
mov
cmpsl
add
stc
pop
outsl
insl
jne
imul
push
data16
add
or
addr16
mov
ret
das
cmp
and
mov
sbb
pop
gs
inc
insb
adc
dec
or
jbe
cmp
inc
popa
imul
arpl
xor
outsl
jo
ret
xor
gs
pop
mov
fiaddl
or
inc
xadd
pop
push
in
sbb
inc
cmovo
fdivr
lcall
aas
nop
jo
mov
insl
pop
pop
pavgb
loope
test
sti
inc
dec
and
xor
mov
dec
ret
outsb
cmp
add
outsb
in
out
das
sbb
or
inc
pop
cmp
sbb
and
ds
jnp
ffree
mov
fidivrs
ficoml
fs
jo
mov
add
pop
add
test
mov
lods
add
das
repnz
clc
add
mov
outsl
inc
push
fwait
insb
ficoms
daa
imul
loope
push
pop
push
xchg
xchg
push
nop
push
mov
push
or
push
je
int3
scas
sahf
mov
mov
add
mov
idivb
mov
push
xchg
in
mov
jbe
cmp
movaps
jb
or
add
and
js
or
ss
outsl
lahf
ror
int
loop
cmpsb
pop
adc
clc
imulb
add
or
inc
inc
jae
push
cmp
xchg
clc
cmp
jns
in
xchg
push
pusha
cmp
mov
inc
outsl
xchg
push
and
enter
fsubl
xchg
cmp
in
clc
xchg
xchg
test
sub
cmp
xorb
enter
sbbb
push
aam
hlt
lcall
xchg
aas
add
mov
or
and
bound
jl
xchg
insl
iret
jnp
pusha
push
jo
sar
out
scas
dec
add
mov
xchg
lods
pop
add
add
fsubrl
adc
xchg
inc
adc
and
bound
iret
test
pop
mov
mov
insb
je
loopne
addr16
xor
movsb
daa
divl
adc
notl
jnp
ss
in
hlt
add
and
fsub
inc
pop
inc
xchg
push
push
pop
pop
mov
pop
daa
pop
addr16
in
nop
out
mov
in
addr16
mov
and
push
in
xchg
pop
roll
les
inc
ds
sub
xor
les
lods
sub
adc
jns
inc
ss
je
mov
sbbb
cmp
pushf
ljmp
scas
add
fs
jae
out
in
hlt
cld
mov
mul
inc
cmc
sub
pop
cmp
dec
push
jl
sbb
insl
cmpsl
mov
aas
ja
nop
out
lahf
sarb
cs
sarb
or
int3
fsub
add
outsl
inc
ss
and
sbb
sub
cmp
aad
mov
lahf
dec
lahf
ja
test
lahf
push
insb
jl
enter
push
insb
cmp
repnz
jl
int3
fsubl
pop
enter
sti
es
test
fwait
sbb
sub
lahf
pop
pop
and
test
dec
sahf
shll
xchg
adcb
stc
cmpsb
mov
enter
mov
inc
es
aam
movsl
cld
nop
int
mov
pushf
mov
push
sub
aam
push
jns
imul
test
push
and
enter
in
pop
enter
sbb
or
mov
add
shrb
jg
pop
enter
push
fs
inc
es
test
push
jae
int
adc
iret
int3
or
pop
xor
adc
or
out
push
lods
cmpsl
cmp
cs
cld
push
iret
test
push
stos
jl
or
dec
nop
and
daa
addr16
les
dec
add
or
add
adc
cs
cltd
mov
test
push
fs
ja
adc
and
test
movsb
mov
jb
outsb
dec
lahf
xchg
inc
nop
iret
test
hlt
add
cs
cltd
inc
in
aad
push
jl
mov
mov
push
push
jg
test
cmpsl
cwtl
mov
cmpsb
mov
fldl
in
pop
mov
shlb
inc
ss
add
push
pop
int
cmpsb
mov
pop
enter
xor
test
xor
leave
jae
pop
fsubs
outsb
dec
mov
dec
add
lahf
or
add
lds
cmp
dec
mov
stc
push
jg
sarb
jl
mov
jns
pop
jl
shrb
push
jl
loopne
mov
jb
cmpsl
rorb
mov
xor
dec
mov
insl
shll
in
daa
mov
dec
iret
test
lahf
js
enter
and
call
xorl
in
movsb
sub
cmp
ja
pop
adc
out
sub
adc
mov
lcall
cmp
rorl
and
adc
and
ds
ja
nop
pusha
movsl
in
js
jo
test
aam
nop
sahf
pop
imul
inc
mov
inc
les
pop
pop
ja
loopne
cmpsb
push
mov
and
sub
mov
fstpl
addr16
fisttpll
lahf
pop
xor
out
js
inc
mov
and
push
inc
test
or
pusha
cld
or
lahf
or
cld
mov
dec
cmpsl
pop
push
jo
shlb
jg
shrb
mov
rcl
mov
iret
addl
sbb
sub
iret
pop
pop
adc
iret
aad
push
mov
outsb
adc
lahf
jl
or
xchg
test
movsb
mov
push
das
push
inc
and
add
jg
sub
or
inc
test
ja
lods
cmp
dec
push
pop
push
lods
inc
lods
in
stc
push
jg
fmull
addr16
lahf
faddl
stc
pusha
insl
ja
add
fcompl
inc
call
outsl
push
pop
insb
inc
mov
cmpsl
xor
and
xor
int3
push
addl
pop
repnz
push
cmpb
enter
jl
test
test
dec
in
fwait
nop
stos
xor
inc
stos
lahf
test
outsl
insl
xorl
out
adcb
ja
or
movsb
sahf
rcl
adc
push
jae
lahf
ja
in
dec
dec
repz
lods
push
xor
xor
dec
push
jmp
sahf
fs
daa
addr16
mov
stos
in
outsl
aas
mov
decl
sahf
or
pop
and
lods
loopne
mov
lcall
mov
mov
das
enter
and
mov
call
daa
iret
nop
clc
call
pop
aas
mov
shrl
lods
addr16
hlt
test
jns
enter
cltd
scas
fildl
jl
push
inc
scas
popl
fadds
ljmp
mov
je
push
mov
push
sbb
jae
int
daa
sub
mov
in
or
xchg
fadds
hlt
or
fcmovb
incl
scas
mov
or
pop
inc
lcall
cmp
push
push
mov
call
pop
enter
jmp
push
jl
int3
ja
js
outsb
mov
outsl
pop
lcall
pop
mov
adc
sbbl
sbb
xlat
data16
scas
push
es
lds
orb
addr16
aas
pop
out
cs
pop
xor
in
dec
daa
call
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
xchg
testl
mov
repz
mov
jl
pusha
sbb
mov
jl
shlb
jo
lcall
or
mov
stos
cmp
jns
cwtl
push
inc
sub
mov
mov
cwtl
inc
ds
mov
movb
andb
insb
push
xor
adc
and
cmp
add
xchg
dec
hlt
mov
inc
bound
les
dec
dec
lcall
add
dec
repz
mov
add
jo
iret
mov
mov
out
mov
fs
call
leave
mov
out
les
add
jg
sbbl
dec
xchg
mov
ja
add
xchg
or
xchg
dec
adc
outsl
and
jns
pushf
inc
push
lock
sub
mov
mov
or
xor
outsl
add
inc
jns
daa
push
insb
inc
pusha
mov
dec
sahf
or
outsl
sub
mov
add
cmp
cmp
inc
mov
pushf
cmp
xchg
fs
scas
add
sub
add
sub
fildll
test
xor
popf
cmpsb
aaa
inc
xchg
or
mov
call
push
push
xor
scas
add
outsl
out
xchg
or
dec
xor
enter
fbstp
pusha
mov
sub
addr16
mov
add
ret
push
fildll
mov
xor
into
dec
in
dec
in
xchg
test
push
scas
push
cmp
dec
pop
xor
enter
xchg
popa
sub
and
fadd
mov
js
mov
add
xchg
and
mov
and
mov
nop
pop
jb
sbb
sub
push
xor
add
jbe
ret
fbld
outsl
and
js,pn
in
jmp
shrb
push
enter
pop
scas
xchg
hlt
mov
shl
sbb
pop
dec
out
add
rclb
inc
getsec
mov
es
outsl
mov
inc
push
xor
int3
daa
addr16
and
jns
es
adc
push
mov
jl
xor
push
mov
push
enter
nop
js
xor
push
nop
push
call
andb
push
xchg
mov
pop
sbb
mov
ss
shlb
xchg
xchg
divl
lahf
mov
inc
dec
and
stos
fstl
outsl
jg
xor
xchg
daa
movsb
outsl
mov
push
fs
scas
push
aam
push
mov
ja
jbe
mov
enter
stos
dec
xchg
mov
test
mov
in
mov
pop
insl
or
or
imul
test
add
ss
fst
or
dec
lock
je
movsb
mov
pushf
hlt
mov
or
mov
push
inc
outsl
and
mov
add
pop
push
push
mov
scas
rcr
loopne
negl
pop
pop
in
aaa
mov
xor
ja
stos
sbb
add
mov
cmpsl
mov
push
xor
dec
mov
enter
mov
sarb
in
pusha
mov
adc
iret
aam
movsb
jg
shlb
ss
jb
push
jg
addr16
or
mov
cs
xchg
pushf
add
sub
jnp
adc
call
push
mov
arpl
rol
das
outsl
add
stos
push
imul
aaa
pop
mov
pop
roll
shll
enter
cwtl
push
jl
aaa
add
and
idivb
add
ret
iret
cld
out
xlat
jo
push
xor
sahf
iret
aad
sub
daa
mov
xchg
pop
leave
in
mov
daa
or
xor
leave
add
or
sahf
testb
push
les
xor
cmp
sarl
test
cmp
adc
lcall
je
scas
lahf
or
ret
mov
cs
xchg
addr16
ret
xor
and
inc
push
ret
imul
pop
or
fbstp
loopne
cmpsb
nop
fwait
xchg
add
in
leave
adc
dec
add
adc
scas
push
lcall
test
mov
movsl
les
scas
add
and
pushf
outsl
out
adcb
adc
sub
lahf
jo
add
mov
roll
jb
or
out
xchg
fsubr
out
daa
or
js
pop
add
cmpsl
mov
mov
push
lods
daa
aas
sbb
sbb
outsl
xor
push
fists
sahf
add
clc
es
addr16
and
mov
dec
divl
or
xor
push
inc
add
jo
inc
call
jb
mov
je
mov
cmp
dec
in
fadds
fs
ss
add
adc
nop
repnz
inc
enter
push
pusha
lods
mov
push
ja
enter
or
push
lods
push
hlt
das
mov
mov
inc
call
in
fsubrs
addr16
andb
sub
adc
jp
dec
push
jge
iret
repz
add
inc
pop
xchg
ret
stc
cmp
sub
jb
cmp
out
shl
and
imul
mov
out
sahf
out
lea
cmp
sbb
stos
sar
cs
out
lcall
arpl
mov
push
idivl
out
gs
je
and
cmp
out
push
xchg
mov
addr16
test
iret
repz
add
inc
repz
out
mov
cmp
imul
pop
ja
mov
iret
repz
test
cmpsl
stc
and
sbb
jns
iret
repz
sarl
mov
jmp
outsl
dec
mov
fcomps
jo
push
jo
lcall
outsl
lods
repz
out
inc
jb
jge
sarl
and
je
out
ds
mov
xor
aam
repz
or
push
jge
out
out
sbb
mov
sub
iret
repz
mov
inc
jns
jp
out
xor
loope
jnp
jo
int
jns
out
jl
gs
iret
repz
out
jge
stc
cmp
repz
stos
xlat
adc
jns
cmpsl
pop
xchg
ljmp
add
popa
out
ds
test
mov
repz
mov
stc
pop
out
ss
test
xchg
sarl
out
cmp
out
ds
mov
xorb
xor
push
leave
xor
push
cmpsb
icebp
and
addr16
mov
push
lea
out
ds
mov
adc
repz
and
mov
push
xchg
inc
out
xchg
xor
out
cmp
iret
sti
ds
jns
jmp
repz
pop
xchg
test
sti
cs
int
jns
pop
mov
int
stc
cmp
push
cltd
jle
lcall
mov
int
stc
cmp
and
sahf
cmpsl
stc
cmp
or
iret
sarl
push
test
stc
inc
mov
aaa
jns
iret
repz
mov
fstl
movsl
inc
jle
sahf
out
out
push
cmpsb
ds
in
cmpsl
xchg
ds
sarl
outsb
stos
out
test
push
push
stos
out
sub
sahf
mov
or
fmull
out
ds
pop
popf
fsts
xor
roll
mov
movsl
ds
sarl
inc
jbe
or
int3
mov
mov
shrl
mov
dec
mov
out
push
ret
push
js
dec
mov
fldcw
mov
xor
push
rorl
fiaddl
fsubrl
pusha
decb
nopl
mov
fiadds
aas
aam
icebp
enter
sub
in
sub
xor
xchg
cmp
mov
push
or
rorl
aaa
sbb
cltd
nop
int
insl
aas
cmpl
or
push
sub
fs
dec
or
popf
jl
pop
xor
fdivrs
cmpl
mov
adc
sarl
cltd
fmuls
xor
leave
or
arpl
dec
sub
jb
popf
ret
dec
jbe
orb
rcrl
inc
sarl
das
mov
cmpsb
jecxz
call
out
fldln2
das
or
xchg
pushf
in
jecxz
sub
imulb
cmp
jns
loopne
adc
aas
in
inc
jg
and
mov
enter
cmp
cmc
jne
lods
inc
inc
daa
pmullw
imul
sahf
pop
and
push
cmp
xor
dec
cmpsb
lods
cmpl
adc
adc
into
inc
inc
xor
xchg
repnz
push
cld
push
lahf
xchg
pushf
or
lahf
mov
cmp
or
adc
in
add
mov
pop
ficoms
loop
cmp
jno
pop
ja
jnp
aas
loopne
sub
shrl
in
mov
outsb
push
pop
loopne
imul
aaa
add
shll
mov
les
xor
or
repnz
inc
enter
xchg
out
loope
push
dec
ss
inc
scas
cld
adcb
push
xchg
es
in
cmpsl
cmp
cmp
sub
popf
out
push
daa
dec
scas
jbe
mov
push
dec
mov
stc
mov
sbb
addr16
ja
pop
mov
cmp
fisttpll
cmp
leave
dec
mov
aad
add
push
daa
push
mov
xchg
mov
shll
lea
xchg
daa
popf
push
pop
rcrl
mov
push
jmp
and
in
scas
jecxz
sub
sbb
inc
jb
pop
je
cmp
xchg
mov
mov
xchg
mov
xchg
sbb
movsb
pop
lods
pop
and
pop
jb
or
inc
pushf
popa
ja
push
mov
inc
dec
mov
enter
pop
add
pusha
mov
adc
mov
divl
xchg
daa
mov
scas
bound
in
and
scas
push
sbb
inc
lock
fadds
and
daa
push
pop
rorb
pop
add
cmpsb
xchg
outsl
mov
int
mov
inc
repnz
add
movsw
xchg
daa
or
out
in
push
jbe
push
flds
leave
push
mov
pusha
inc
fmulp
subl
inc
xor
xor
out
push
pop
dec
push
out
push
add
mov
cmpsl
push
lock
mov
mov
push
lds
sbbb
jmp
rep
addr16
in
sbb
fsubrs
pusha
mov
ljmp
outsl
callw
or
mov
mov
cmpsl
pop
cmp
dec
jmp
xchg
pushf
push
fisttpl
pusha
and
jg
and
jp
jmp
repz
pop
insl
xchg
arpl
xchg
arpl
arpl
arpl
arpl
mov
and
dec
arpl
daa
daa
daa
mov
cmpsl
jns
mov
cltd
nop
mov
pinsrw
cmpl
daa
pop
jb
leave
add
fs
sahf
aaa
and
add
jns
aaa
inc
push
add
sahf
out
mov
or
jns
out
test
xchg
or
stc
dec
shlb
fnsave
in
fs
rorb
frstor
call
repz
add
and
out
push
or
pop
faddp
inc
leave
lret
dec
fisubrs
xchg
dec
cmpsb
in
adc
les
jne
leave
and
sbb
mov
das
stos
gs
ret
enter
fisubl
mov
jb
gs
or
dec
and
sbb
or
data16
and
out
push
data16
jno
stos
mov
xchg
outsb
xchg
push
ret
in
adc
sub
sbb
roll
jmp
pop
shlb
sbb
jb
shlb
ljmpw
loop
mov
adc
js
les
pop
addr16
paddsb
add
pusha
inc
filds
pop
sahf
cmp
pop
lock
pushf
inc
push
cmp
fstpl
fcoms
addr16
inc
jae
aaa
addr16
roll
cmpsl
cwtl
lret
daa
in
mov
clc
repnz
mov
push
xor
inc
cmpsb
mov
fwait
xchg
add
inc
jge
scas
or
scas
lods
loop
pusha
stos
dec
ret
pop
push
xor
jecxz
dec
fnstsw
scas
cmp
repnz
nop
xchg
mov
push
mov
jo
xlat
cwtl
jecxz
xor
add
movsb
into
enter
mov
inc
shll
pop
rclb
leave
leave
in
dec
imul
add
in
cmpsl
dec
jb
push
fildl
in
shrl
push
daa
cmpb
jb
mov
leave
jae
leave
xlat
loop
pop
mov
lock
adc
daa
xor
es
cmp
and
in
push
xor
xor
ja
xlat
xchg
and
jns
in
in
in
mov
jne
jns
in
out
scas
sbb
jns
xchg
pushf
mov
pusha
push
out
loope
sbb
movzwl
push
mov
mov
test
ficompl
pop
ja
out
hlt
cmp
mov
imul
fwait
popf
dec
dec
sbb
dec
imul
addr16
sbbl
jb
and
push
data16
movsl
cmpxchg
jp
adc
cmpsl
fcoml
add
dec
dec
leave
mov
adc
add
call
out
fmuls
inc
jl
adc
xchg
test
dec
mov
push
addr16
push
add
cmp
jno
out
push
add
xchg
xchg
mov
orl
fadd
fildl
fiaddl
add
cli
mulb
aaa
ss
mov
movsb
push
push
xor
imul
iret
xchg
xchg
pushf
pop
add
dec
es
aad
movntq
into
out
xlat
stc
pop
stc
cmpsl
push
xchg
imul
decl
outsb
bound
mov
inc
sahf
in
push
ss
xchg
rcrb
jmp
cmc
push
dec
repnz
dec
mov
inc
xchg
mov
inc
aaa
mov
in
rclb
add
jb
mov
in
nop
imul
pop
mov
dec
add
scas
mov
push
mov
sarb
popf
outsb
mov
es
rorl
jno
inc
in
dec
in
popf
out
push
xorps
pop
packuswb
push
fisttps
mov
add
mov
popf
inc
xchg
test
ja
cmpsb
inc
push
add
pop
xchg
xchg
jb
daa
aas
push
ja
out
cs
adcb
and
cwtl
out
dec
cmpsb
mulb
jge
loopne
or
cwtl
dec
inc
or
mov
loope
jg
inc
lret
shl
in
fnsave
push
add
icebp
iret
lods
jnp
add
invd
and
xchg
movzbl
jae
pusha
out
inc
pop
xchg
jae
inc
in
jl
das
or
inc
inc
add
add
ja
aam
push
sbb
jg
mov
jle
daa
mov
pop
xor
scas
mov
push
scas
scas
jae
mov
jae
pop
rcr
xchg
adc
push
cmp
pop
insb
fcoml
cmp
sbb
scas
inc
push
ljmp
sbb
test
mov
jne
pushf
xor
or
daa
icebp
popf
pushf
je
filds
xor
pop
js
fisttpll
mov
fcmovnbe
pmuludq
mov
mov
jne
inc
leave
arpl
iret
jmp
push
addr16
push
add
fcmovne
rep
das
jp
add
adc
orl
sub
mov
lret
lahf
addr16
outsl
and
fsubl
out
addr16
shlb
pop
and
xchg
sub
addr16
imul
repz
inc
jb
inc
jb
into
inc
jb
cwtl
or
jbe
adc
pmaxub
add
and
xchg
lods
add
push
rorb
add
pop
push
pop
imul
insl
ja
hlt
iret
in
xchg
xchg
out
cmp
mov
adc
lock
cltd
loopne
rcl
or
add
mov
cmp
lods
cmc
push
imul
sarl
in
jg
inc
ja
mov
scas
ja
push
add
out
iret
cmpsl
push
jns
xchg
jl
insb
cmc
cld
adc
sbb
add
xor
pop
shr
mov
pop
out
jns
jbe
orl
mov
jae
or
jbe
iret
leave
rep
das
in
or
cli
push
xchg
testl
adc
sbb
and
sahf
adc
jp
and
out
fwait
dec
pop
ja
add
cs
in
mov
mov
push
daa
test
mov
iret
add
add
pop
xchg
negl
pop
jnp
jnp
push
sub
test
mov
push
jb
mov
push
in
mov
xchg
jnp
jnp
inc
fldl
xchg
sbb
xorb
xchg
jnp
push
invd
negl
decb
fwait
pop
rolb
clc
push
test
and
call
fcmovnu
scas
jg
in
clc
mov
bound
stc
push
daa
inc
loope
pop
adc
jl
dec
jl
dec
mov
jl
loopw
insb
xchg
aaa
xchg
int
rsm
xlat
mov
mov
and
fists
mov
scas
add
cmp
push
cli
xor
dec
ja
mov
push
add
cs
in
sahf
add
add
cmp
or
andb
mov
cmp
mov
icebp
stc
xchg
popa
mov
iret
fwait
in
outsb
in
jle
push
scas
xor
aas
push
cmp
roll
dec
jle
jle
jle
dec
lds
jno
dec
push
dec
push
lcall
jmp
iret
jle
add
jb
mov
jle
or
test
dec
sub
push
xchg
test
ja
add
inc
push
xchg
add
xchg
dec
outsb
pop
scas
ja
mov
call
std
iret
ss
adc
adc
icebp
sbb
inc
outsb
aaa
inc
call
pop
pop
cmp
push
cmp
out
add
jns
xchg
out
mov
out
mov
jns
xchg
out
mov
sahf
out
rclb
fcoms
loopne
jns
aaa
unpckhps
call
mov
out
mov
sbb
andl
das
cmp
jmp
and
pushf
push
lahf
fcoms
enter
decl
adcb
cmp
dec
lds
andb
xchg
pop
leave
jae
pop
add
pop
leave
and
pop
and
test
addl
jl
and
mov
mov
mov
pop
push
out
outsl
pop
in
inc
push
js
addb
add
out
pushf
stos
mov
js
inc
xchg
pop
jo
xchg
pop
jg
out
jg
jb
fucomp
push
psadbw
push
test
mov
push
or
mov
push
das
es
aam
dec
fimuls
dec
add
packsswb
das
aas
cltd
fadds
pop
push
push
loop
pop
pop
or
out
in
mov
pusha
adc
adc
ja
dec
mov
cmp
nop
es
sbb
movl
rcrl
adc
pop
sub
fistps
je
jg
jns
or
xchg
out
pushf
cmp
pop
mov
or
stc
pushf
push
dec
add
add
int
pop
mov
in
jbe
pmaxsw
mov
inc
xchg
pop
ja
testl
in
inc
decl
add
test
repz
sub
iret
aaa
test
push
inc
rcrb
pushl
add
jb
pop
js
inc
add
orb
pop
out
mov
xlat
pop
ja
fmuls
iret
call
jnp
out
push
or
xchg
pop
push
or
sbb
outsl
in
xchg
rolb
test
push
xchg
arpl
xchg
and
xchg
mov
fsubr
pushf
pushf
in
idiv
add
push
or
inc
aaa
add
daa
dec
in
outsb
insb
das
out
and
add
sbbb
xorl
add
or
sahf
leave
enter
add
scas
cmp
mov
mov
pop
lods
pop
jb
lahf
ret
lcall
sahf
add
in
incl
mov
mov
pop
testl
mov
leave
leave
leave
sub
sbb
pop
and
in
or
mov
push
adc
mov
jg
leave
jae
and
mov
outsb
pop
mov
mov
dec
ds
xchg
sar
add
cmp
cmp
sub
dec
mull
mov
outsb
frstor
push
outsl
push
jb
add
leave
ror
push
push
enter
and
mov
xchg
xchg
fninit
jmp
paddd
shrb
verw
mov
cld
clts
mov
push
or
mov
or
out
into
pop
dec
decl
stos
sub
xchg
inc
decl
add
or
dec
ret
fidivs
inc
push
dec
xchg
or
push
or
sbb
inc
push
test
mov
mov
loope
add
aaa
sti
vmwrite
js
mov
or
loopne
in
and
sub
mov
clc
dec
mov
in
ret
inc
out
mov
pop
sbbl
mov
and
mov
aas
sahf
cmpsl
push
mov
into
mov
xchg
and
pop
ja
mov
and
leave
sbb
sbb
aas
out
je
in
dec
das
push
jg
cmpl
add
shlb
mov
mov
aam
pop
jo
std
fucomip
repz
xchg
or
loop
dec
mov
fldl
pushf
iret
pop
lea
das
xchg
fdivrl
pushf
out
add
aas
mov
pop
pop
jb
sbb
jo
int3
xchg
dec
repnz
fmull
cmp
leave
leave
repz
push
pushf
dec
and
push
and
movsl
lea
popf
mov
xor
push
xchg
cli
jo
shrl
lsl
pop
and
das
mov
mov
dec
xchg
adc
outsb
fisttpll
jle
add
or
daa
cmpsl
xchg
mov
out
daa
fisttpll
add
cs
sahf
enter
push
or
iret
shrl
hlt
das
femms
decl
iret
add
or
pop
xor
out
nop
bnd
sub
add
daa
iret
jae
push
lahf
sub
das
js
mov
les
int3
jns
mov
xchg
cmc
xchg
add
and
xchg
ja
add
jns
inc
push
add
push
repz
packuswb
pop
jno
jecxz
iret
or
aas
pop
adc
rcll
sub
sahf
mov
call
sbbb
xchg
aas
clc
xchg
pop
mov
inc
xchg
cwtl
xchg
xchg
mov
push
imul
movd
xchg
push
xchg
jg
leave
rep
push
pop
inc
repnz
or
popf
mov
leave
xchg
test
int
mov
push
mulps
iret
mov
jno
mov
loopne
dec
jns
or
mov
inc
repnz
pushf
sbb
iret
xchg
fnsave
push
fistps
fistps
push
sub
out
aas
push
iret
out
mov
inc
pop
xor
or
xchg
out
add
sub
add
jne
leave
leave
pop
gs
xchg
mov
adc
js
adc
xchg
repz
and
loop
jecxz
xchg
pop
repz
or
mov
leave
pusha
push
xchg
pop
sbb
xchg
xchg
es
cs
xlat
ss
pushf
pop
mov
call
mov
xchg
call
cmp
shld
pop
pop
lods
mov
xchg
jb
cmp
out
mov
xchg
test
jg
jns
lret
sbb
add
cmp
cmovb
push
or
xchg
jmp
xchg
xor
fnsave
addr16
adc
mov
xchg
mov
mov
imul
jecxz
jmp
xchg
adc
inc
xchg
xchg
jb
push
dec
addr16
daa
pop
leave
jae
push
je
xchg
imul
pandn
cmpsl
xchg
call
imul
lret
ficompl
scas
std
daa
jmp
cwtl
push
lcall
xchg
daa
cmp
stos
push
sahf
and
pop
or
add
outsl
cwtl
push
pop
lods
fldt
addr16
pushf
ja
mov
fildl
mov
xchg
cmp
loop
ljmp
cld
add
push
cltd
xchg
dec
ss
addr16
int
cmp
pcmpeqd
aad
jb
fs
lcall
out
in
push
aas
cmpsb
mov
cmp
repz
add
add
daa
iret
jae
add
or
sbb
call
fldl
sbb
add
mov
push
ja
sbb
dec
adc
jg
scas
ja
jb
repnz
mov
jae
or
lcall
add
sahf
xchg
and
adc
repnz
push
fwait
pop
push
adc
fldcw
sbbb
mov
dec
and
fcmovnb
ja
mov
call
out
add
sbb
pushf
cmp
mov
sbb
cmp
outsb
pushf
out
inc
sbb
outsb
jb
emms
mov
popf
test
add
pop
jns
out
mov
jns
xchg
out
rcr
psraw
or
cli
adc
lea
adc
ds
xchg
xchg
xchg
lahf
lahf
inc
popf
push
popf
pusha
popf
outsb
mov
jns
popf
push
add
and
cltd
popf
sbb
mov
in
iret
jno
in
in
cli
syscall
sahf
adc
aas
stc
testb
ja
mov
mov
cmp
pop
daa
push
fidivrs
add
dec
sahf
fwait
cmp
mov
je
mov
out
mov
test
iret
mov
pop
or
sbb
fs
lcall
mov
pminsw
pop
or
add
pop
adc
lahf
mov
lahf
cmp
cmp
dec
pop
cmp
adc
js
push
add
out
jb
add
jns
pop
pop
out
add
in
shr
fisubs
out
pop
mov
out
pop
push
lahf
int
loopne
push
mov
call
push
push
xor
aaa
je
aaa
push
add
pushf
push
loop
cmp
mov
pop
pop
push
pop
mov
orb
nop
jp
fildll
daa
hlt
pop
ficoms
mov
jns
in
lahf
mov
jmp
not
mov
out
xchg
jb
stos
and
adc
cmp
rdpmc
ds
pushf
out
dec
daa
push
push
mov
mov
or
iret
repz
push
or
repz
mov
repz
cmpss
adc
repz
fcoms
jecxz
out
adc
out
cmp
adc
repz
jnp
push
sbb
and
iret
xor
cmp
sbb
in
in
push
adc
in
adc
adc
in
in
push
or
sub
xor
push
cmpsl
inc
js
add
xchg
jle
enter
push
and
and
inc
daa
xor
fnsave
in
mov
mov
mov
shll
in
pusha
add
daa
out
jp
subb
push
pop
leave
enter
pop
xchg
pushf
in
cld
mov
xchg
pop
xor
daa
mov
dec
js
push
imul
mov
jnp
andl
jns
mov
xchg
pushf
pop
mov
adc
movsb
jmp
push
cmp
jg
movsb
inc
rsm
mov
les
movsb
pop
fnsave
cmp
movsb
push
movsb
pop
cmp
outsb
pop
add
outsl
cmp
ja
jg
and
lret
outsb
incb
cmp
dec
ja
in
repnz
bound
or
insb
inc
das
movsl
ja
inc
sub
movsl
pop
xor
jb
pop
out
and
mov
pop
jbe
add
xor
xchg
icebp
cltd
movsl
iret
movsl
movsl
dec
fldt
das
es
dec
outsb
push
fcompl
jecxz
repz
add
add
push
pop
rorb
push
push
adc
dec
sahf
out
push
or
sub
repz
repz
or
or
mov
into
mov
fwait
adc
push
les
and
jbe
cmpsb
pop
xchg
jmp
cmpsl
andb
stos
xchg
inc
test
je
iret
loope
push
inc
dec
add
mov
or
cwtl
daa
adc
lods
mov
lea
aas
push
into
leave
repz
add
sti
outsb
repz
pop
push
fisttps
in
jae
or
pop
cmpsl
or
push
lods
xchg
shlb
dec
pop
ret
mov
sub
je
xor
mov
popf
pushf
mov
cmpps
pop
fsubrl
mov
or
les
std
cmpsl
mov
test
adc
ja
jbe
jb
test
push
divps
xchg
add
xchg
xchg
mov
daa
pop
add
lds
pop
das
fcmovbe
iret
or
mov
and
sub
mov
adc
test
pop
mov
cs
jl
fidivs
aam
xchg
cmp
stos
adc
add
sbb
sub
pop
mov
incb
leave
add
mov
incl
sub
inc
je
cmpsl
pop
or
sub
rcrb
sbb
outsb
pop
es
adc
cltd
add
stos
ljmp
lods
leave
in
and
sarl
addr16
pop
sbb
xchg
call
mov
sbb
mov
jg
lahf
push
pushf
and
iret
push
decl
cmp
out
aaa
pop
clts
sbbb
movsb
leave
leave
repz
lods
or
mov
shrb
inc
rorb
stos
mov
lods
sub
fs
lods
pop
inc
xchg
or
arpl
lods
je
xchg
pop
nopl
jns
je
pop
jg
syscall
cs
lods
daa
dec
mov
pop
invd
movsl
mov
fsub
jns
or
pop
fmull
sarl
xadd
leave
imul
lods
fldl
lcall
popa
lret
mov
sub
push
cs
dec
jg
lods
dec
push
sub
push
mov
dec
push
out
cmp
dec
jb
pop
cmp
jb
cmp
das
pop
daa
xor
wbinvd
daa
inc
inc
push
js
adc
push
ja
rorl
mov
add
xchg
mov
sahf
fcmovne
repnz
cmpsl
push
in
or
pop
cmp
mov
je
xlat
outsb
daa
jl
xchg
ja
test
mov
mov
in
jl
mov
cmp
inc
scas
dec
scas
xor
out
test
imul
ja
ja
jnp
push
add
pop
xchg
push
add
daa
daa
mov
pop
add
add
repz
or
or
fwait
cmp
adc
and
sahf
ret
adc
lret
scas
adc
xor
idiv
scas
adc
push
add
xor
mov
cmp
out
inc
lcall
add
iret
jae
je
push
pop
bound
push
push
cmp
jb
jle
mov
shlb
xchg
push
xor
xor
pop
rorb
in
sbb
pop
rcrb
fdivrs
loopne
xor
xor
push
ljmp
fwait
loop
iret
push
dec
call
clc
pop
int3
or
outsb
femms
and
or
jns
notl
push
adc
sbb
xchg
pushf
je
and
adc
pop
dec
dec
dec
outsb
pop
pusha
push
in
sbb
je
out
nop
pop
cwtl
mov
sahf
ja
mov
mov
dec
rcrb
enter
cmp
repz
fsubrs
loopne
repz
sub
sub
sub
cmp
xchg
dec
das
or
adc
sbb
add
addb
out
pop
push
mov
inc
pop
push
add
inc
xchg
jecxz,pn
xor
into
adc
es
mov
leave
xchg
and
outsb
mov
addr16
xchg
subl
mov
mov
jb
mov
pxor
add
enter
xchg
mov
and
dec
aaa
jns
cs
add
inc
jns
lods
cmp
push
outsb
mov
out
pop
data16
outsb
dec
jbe
iret
repz
jle
mov
scas
repz
repz
mov
iret
adc
adc
adc
iret
repz
adc
cmpsl
jns
push
pop
or
sahf
out
pop
sbb
sbb
sbb
sbb
out
push
pop
pop
and
jns
out
outsl
and
sahf
out
sahf
xchg
and
out
cmpsl
daa
mov
mov
sub
sub
sub
outsb
mov
fucom
aas
out
pop
idivl
fwait
popf
popf
mov
adc
and
iret
and
cmp
repz
dec
push
push
sbb
pop
sbb
sbb
and
sbb
sahf
js
out
sahf
pop
push
push
mov
sahf
adc
cmp
cs
mov
xchg
iret
inc
cmp
hlt
outsl
ljmp
mov
adc
out
push
add
add
sahf
out
pop
inc
or
xchg
mov
or
jbe
sahf
out
or
or
sahf
out
setle
test
out
sahf
adc
jns
out
adc
adc
sahf
out
pop
icebp
sbb
jns
enter
or
out
sahf
out
sub
jns
inc
pop
dec
and
popa
das
imul
scas
cmp
divb
iret
xchg
mov
mov
cmp
repz
mov
mov
jns
enter
fdivs
push
adc
adc
lock
xor
mov
mov
mov
mov
cmpsl
push
or
sahf
out
sahf
or
or
or
jns
out
pop
inc
push
dec
add
dec
sahf
out
cmp
fcmovne
imul
mov
sbb
push
jo
mov
imul
mov
roll
jmp
jns
sub
or
loopne
adc
cmp
cmp
mov
inc
push
add
fmulp
repz
push
add
cmp
mov
xchg
in
in
pushf
movsb
lods
mov
jns
out
adc
leave
leave
leave
in
fisttpll
in
cmc
in
in
std
add
iret
leave
in
sbb
cmp
iret
leave
repz
push
dec
and
mov
jl
push
ret
das
push
aaa
repz
fsubrl
xchg
pop
pushf
movsb
add
lods
mov
mov
mov
popf
cmp
in
out
push
out
divb
push
adc
mov
leave
cmpb
cmp
sahf
ja
test
push
add
jb
dec
imul
mov
pop
xchg
mov
iret
or
ret
mov
into
in
rdpmc
bnd
out
cli
syscall
mov
ficoms
push
sbb
xor
jns
sahf
push
cmp
sbb
dec
sahf
out
sbb
sbb
sahf
out
jle
push
xchg
lahf
sahf
out
jns
stos
mov
rcrb
loope
dec
inc
sahf
pushf
testl
lret
and
or
cmpsb
push
pop
dec
push
add
xor
mov
js
add
cmpb
jle
pop
pop
mov
cmp
leave
mov
push
or
int3
cmp
cmp
aam
in
enter
hlt
adc
add
out
jns
or
push
adc
pop
sahf
out
xchg
and
sbb
sub
xor
iret
rorl
sbb
sbb
lahf
xchg
mov
daa
daa
daa
fstpl
orl
mov
aas
xchg
xchg
cmp
mov
push
repnz
cmp
inc
in
cld
pop
mov
xchg
negl
add
pop
sub
iret
repz
push
push
or
push
iret
repz
ja
test
or
cmpsl
jg
iret
mov
mov
adc
daa
iret
repz
jmp
testb
cmp
mov
femms
jecxz
lock
jb
lds
dec
std
rorb
pop
push
daa
scas
fwait
mov
and
xor
mov
mov
pop
inc
sarl
lahf
pop
sarl
nop
es
sub
out
jnp
sub
sub
sub
sahf
out
out
push
sub
das
jle
sahf
out
xor
repz
stos
xor
sahf
out
faddp
sahf
ss
fdivrs
jmp
rclb
push
cmp
sahf
aaa
xchg
push
cmp
cmp
leave
repz
aas
ret
jns
out
fmuls
jecxz
out
inc
repnz
out
inc
push
ret
sahf
aaa
cmp
ret
ret
push
adc
seto
jp
push
dec
ret
call
aas
mov
inc
inc
test
into
repz
rcrb
fstpl
add
rorl
add
ret
sahf
pop
fldcw
stos
ret
ret
cmp
in
pop
into
or
call
icebp
decb
ret
out
ficomps
push
and
xor
cmp
cmp
repz
bound
adc
adc
pushf
orl
outsb
mov
imul
mov
in
in
loope
in
push
and
cmp
les
or
and
xchg
js
in
xor
les
and
mov
dec
inc
xchg
ja
jns
leave
sahf
test
jb
cmp
add
add
pushf
js
les
pop
testb
cmp
xlat
mov
push
fdivp
cmp
or
dec
cmp
push
adc
jns
aaa
jns
unpckhps
jno
in
sahf
out
pop
xchg
xchg
leave
repz
popf
sbb
jns
mov
pop
dec
repz
sbb
and
ljmp
and
out
sahf
ja
cs
and
sub
fisttpll
sub
inc
addps
sub
adc
fbstp
inc
loope
mov
inc
stos
pop
sahf
addr16
push
fisttps
add
jne
out
add
add
fmulp
repz
push
push
lock
aas
cmp
test
lahf
adc
in
sub
out
mov
push
outsl
mov
rcr
cmp
insl
mov
mov
mov
popf
cmp
rorl
pop
xchg
or
out
or
cmp
int
pop
lahf
out
out
addr16
lock
sti
adc
enter
and
adc
adc
cmp
cmp
inc
sbb
iret
repz
sbb
xchg
js
dec
pop
enter
enter
and
pop
lahf
lods
cmp
xorb
and
int
in
and
daa
sub
cmp
testb
inc
ss
or
dec
sub
inc
add
es
leave
dec
push
or
pop
push
pop
pmaxub
leave
jns
out
push
add
add
cmp
pusha
or
repz
repz
xchg
xchg
iret
repz
or
or
mov
outsl
lret
leave
js
xchg
xchg
leave
leave
leave
paddsb
mov
sbb
outsl
iret
repz
sbb
sbb
adc
push
punpcklbw
dec
rorb
sbb
fwait
lret
outsb
mov
lret
imul
lret
je
out
pop
fmull
or
lock
sub
cs
lret
inc
into
aas
add
or
pop
lret
aas
and
iret
mov
xor
push
adc
dec
sahf
out
adc
loopne
sahf
out
sbb
jo
in
xchg
and
iret
repz
xchg
push
push
fwait
pop
mov
cmp
and
lret
and
push
repnz
fmul
out
fwait
jecxz
ss
std
int3
mov
cmp
add
out
xchg
inc
push
ss
push
or
dec
sahf
or
or
sahf
ja
fmull
dec
push
jae
adc
in
in
adc
out
pushf
je
femms
sbb
rcrb
fistpl
call
in
sbb
adc
fs
and
sub
cmp
repz
push
and
and
and
push
es
insb
emms
int
insb
pop
add
and
shrl
jb
xchg
dec
xchg
dec
push
mov
cmp
add
int
int
int
inc
mov
into
das
sub
mov
adc
scas
in
cmpsl
mov
xchg
and
dec
into
push
into
push
xchg
outsb
dec
test
add
dec
sbbb
or
cmp
syscall
or
cmp
scas
or
bswap
out
icebp
cld
adc
pop
iret
repz
in
adc
pop
sbb
repz
adcb
sbb
mov
sbb
cmp
ret
fcomps
out
lea
and
ds
and
dec
jae
cmp
push
and
push
repz
es
subb
jae
jmp
das
sub
popf
cmp
xchg
sub
dec
aaa
jns
mov
ret
out
in
fidivs
cs
fsub
push
xor
sbb
das
xor
iret
jnp
iret
push
or
push
jp
or
aas
sub
mov
scas
jne
inc
dec
dec
sub
xchg
into
iret
shll
iret
jae
movq
jp
fcmovne
rep
das
xchg
push
push
popf
stos
das
jae
cmp
mov
rorb
fisubrs
iret
or
out
das
stc
shr
in
mov
push
sbb
popf
cmp
cmp
push
in
in
sahf
pop
pop
sbb
setle
mov
cmp
mov
cmp
stc
cmp
pop
shrl
fstpt
jns
daa
iret
and
sub
jns
out
sub
popa
out
mov
das
fldt
iret
cmp
out
icebp
cld
push
xor
out
in
xchg
aam
push
xor
sbb
jbe
jns
ja
outsl
mov
cltd
out
in
in
scas
mov
mov
mov
inc
push
dec
insb
pop
add
stos
aam
add
rep
xchg
mov
jle
mov
add
push
cwtl
movsb
rcl
mov
sahf
or
push
rorb
js
fsubl
xchg
in
xchg
sbb
fadds
pop
je
or
cmovo
in
mov
cmovg
adc
mov
das
das
andb
push
adc
add
adc
shlb
add
dec
sub
fadd
nop
out
aas
inc
push
mov
insb
add
xchg
inc
cmp
xchg
dec
and
pusha
out
outsb
dec
aaa
fdivs
sbb
ja
iret
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
ja
fcmovne
in
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
rcrb
mov
add
pop
adc
add
push
nop
add
xchg
add
inc
adc
call
les
mov
stos
arpl
sbb
in
mov
or
andb
jb,pt
cmpsb
fisttps
mov
cld
inc
jle
xchg
shll
pop
rorb
inc
mov
inc
or
lcall
in
sbb
in
call
out
ja
mov
ficompl
push
pop
fisubrl
xor
mov
xchg
rcr
fsubp
stc
jb
jle
adc
add
jo
cmp
rep
push
repz
dec
inc
xor
and
iret
repz
adc
or
jns
iret
repz
cld
repz
hlt
idivb
out
call
pop
sahf
out
outsl
les
mov
xchg
jns
out
mov
out
or
out
sahf
out
inc
cmp
sub
sahf
cmpsl
stc
xchg
sbb
cld
repnz
fadd
jns
out
mov
cwtl
nop
mov
jnp
out
js
push
iret
repz
dec
inc
xor
out
leave
repz
icebp
mov
fsubrl
movsb
nop
cli
fidivrs
adc
jl
push
push
inc
icebp
lods
or
rorl
mov
push
dec
pusha
pop
add
shlb
mov
mov
push
fadds
sub
nop
js
mov
outsb
jnp
add
add
inc
mov
testb
aad
push
mov
push
xor
icebp
push
xorb
call
push
daa
push
push
push
inc
jg
jp
je
adc
add
inc
rolb
add
xor
jg
es
mov
adc
mov
sbb
add
loope
pop
add
test
mov
xor
ss
outsl
popl
inc
insl
add
xchg
xor
adc
cs
xchg
enter
mov
test
in
pop
pop
ds
out
rorb
add
out
xchg
es
mov
notb
push
sbb
insl
fs
cmc
push
sbb
add
or
jns
inc
pop
push
push
cmp
mov
into
clc
cmc
lock
paddq
repz
notl
xor
mov
adc
mov
mov
repz
mov
adc
jns
sbb
mov
adc
or
iret
repz
pop
pop
push
and
and
cmp
repz
in
and
xor
lsl
dec
cmp
shr
pop
fldl
movups
xor
dec
sbb
xchg
cld
or
loopne
xchg
incl
fcompl
sbb
xorl
fistl
cmp
pop
js
out
cmp
repz
xor
dec
out
sarl
insl
add
push
pop
ja
loopne
sahf
xchg
mov
bnd
das
add
dec
insb
dec
enter
aas
pop
mov
daa
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
decl
or
lcall
mov
aaa
popa
sar
mov
decl
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
xor
int
add
out
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
lods
dec
aas
xchg
les
jne
int
mov
addr16
inc
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
pop
adc
and
xchg
insb
xlat
cmp
mov
jg
sub
jecxz
cmpsb
xor
inc
inc
pop
mov
jne
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
dec
cld
enter
fmuls
sahf
mov
or
and
inc
mov
adc
ds
mov
inc
inc
je
inc
inc
push
dec
push
and
inc
push
pop
and
dec
dec
inc
push
dec
inc
aaa
adc
aas
jg
lcall
cmp
pushl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
mov
sub
pop
insb
mov
outsl
mov
add
insb
imul
inc
push
sbb
iret
xor
pop
imul
inc
jbe
je
dec
push
orb
mov
sahf
jo
jb
push
inc
insl
adc
fadds
test
adc
outsl
inc
gs
gs
sbb
add
inc
arpl
add
sub
mov
bound
outsl
push
dec
pop
mov
or
xchg
xchg
add
xorb
dec
cmp
xchg
add
add
or
mov
aas
or
and
dec
xor
xor
daa
dec
jae
mov
inc
jne
push
and
inc
inc
inc
jg
lds
loopne
lahf
push
lods
pop
addl
push
push
cmp
mov
push
mov
je
dec
add
les
push
and
ficoml
in
inc
clc
adc
rcl
sbb
out
dec
push
dec
dec
mov
das
or
dec
bound
jbe
xchg
lcall
cmpsb
je
mov
ss
int
cmpsb
dec
les
jo
iret
and
jmp
outsb
arpl
outsl
pop
mov
add
pop
xlat
xor
add
push
adc
and
lret
push
pop
mov
cmp
mov
push
pop
mov
add
push
js
push
mov
sub
mov
imul
add
sbb
and
pop
push
push
imul
jo
pop
outsl
push
jb
pop
sub
lds
and
das
rolb
push
xlat
push
push
in
and
jp
lock
push
stos
adc
gs
mov
inc
pusha
push
repnz
mov
push
movsl
pop
mov
inc
arpl
push
push
inc
jno
stos
cmpsl
pusha
out
sub
sbb
mov
lds
xchg
insb
and
pop
xchg
add
add
outsb
data16
or
cltd
insb
and
outsl
ja
andb
insb
and
xchg
das
ja
andb
arpl
jne
ret
pop
les
adc
push
adcl
orl
fldcw
dec
std
cmpsl
push
add
push
dec
sub
aam
push
inc
inc
dec
movsb
mov
lods
or
inc
and
mov
xor
mov
or
sub
cmp
lahf
movsb
and
mov
push
push
pushf
and
cmpsl
sub
test
dec
xchg
dec
and
jmp
dec
stos
fsubl
jbe
mov
push
cmpsl
test
lea
mov
mov
jbe
xchg
insl
imul
or
push
jne
les
outsl
add
add
mov
pop
in
inc
cmpsb
dec
outsl
addr16
sbb
cmpsb
iret
mov
push
inc
iret
pop
les
test
sbb
sbb
xlat
icebp
push
inc
out
jg
mov
out
outsb
push
mov
and
sahf
out
inc
xor
add
repz
call
or
adc
outsb
repnz
mov
jae
into
jae
in
push
aas
adc
lahf
xchg
xor
ja
jmp
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
stc
std
in
leave
mov
add
insb
push
arpl
psubd
or
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
mov
pushf
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
pushl
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
outsl
incl
add
inc
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
ljmp
and
mov
add
inc
aad
scas
ja
popf
adc
call
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
jg
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
mov
es
lds
or
sub
mov
cmpsl
call
ret
shlb
mov
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
pushl
std
test
jb
push
mov
dec
mov
loop
sub
or
mov
call
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
sbbl
mov
ja
mov
out
cli
jo
paddw
das
test
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
incl
dec
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
dec
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
call
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
cs
fisttps
xchg
shlb
mov
mov
mov
ds
outsl
inc
jne
sti
dec
popl
ja
imul
lods
adc
push
imul
inc
jbe
push
sub
sar
outsb
arpl
arpl
ja
or
inc
insl
jns
sub
pop
inc
jne
outsl
insl
addr16
inc
fwait
sbb
xlat
mull
pop
inc
push
push
push
pop
push
sbb
mov
js
inc
insl
bound
inc
or
cmp
cmp
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
and
pop
xor
popa
add
jbe
pop
sbb
jnp
mov
push
dec
inc
xchg
test
add
ror
inc
ljmp
jne
dec
jno
sub
rcr
inc
inc
rorl
ss
jbe
cmp
or
inc
aam
test
aas
popf
push
fstps
jle
inc
jo
nop
fadds
sub
sub
xchg
inc
sbb
aaa
inc
pusha
push
xor
inc
fstl
push
sarb
dec
insb
and
adc
aaa
je
aaa
sub
movq
inc
push
mov
add
lret
jg
mov
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
movl
sbb
inc
pop
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
fistl
push
popa
mov
dec
jge
iretw
mov
xor
or
mov
xor
addr16
clc
pop
pusha
repz
xchg
into
pop
jo
or
ds
inc
cmp
test
adc
cltd
dec
jl
cmp
push
mov
or
pop
sbb
adc
mov
xor
jo
and
mov
jmp
pop
addr16
push
scas
xlat
mov
adc
movb
and
cmp
inc
jb
addr16
loope
dec
icebp
dec
popa
jo
or
xchg
mov
outsl
test
dec
sub
push
jno
mov
add
mov
in
pop
xchg
add
sub
test
pop
cmp
jecxz
add
adc
push
add
cmp
mov
or
push
stos
shlb
jns
aad
inc
xor
inc
and
mov
popa
jb
stos
cmp
adc
mov
verr
daa
sub
inc
push
bound
cmp
xor
mov
and
shll
xor
adc
xchg
add
or
inc
or
add
sub
adc
push
and
pop
push
pop
aaa
icebp
mov
mov
orb
imul
push
ret
pop
and
mov
xor
pop
aad
test
push
push
and
jg
aaa
xor
aaa
mov
jbe
and
push
loop
je
pop
cs
push
outsb
inc
aaa
jno
cwtl
jb
adc
daa
aas
pop
inc
and
push
add
push
test
subb
push
add
pop
es
inc
sub
lcall
add
aam
pop
jg
mov
das
shlb
xor
out
imul
mov
decl
scas
insb
and
pop
mov
cmp
pop
push
rcll
inc
mov
add
or
inc
stc
aam
fxch
inc
sbb
shll
add
cmpsl
push
movsb
pushl
ret
inc
lcall
mov
jmp
mov
bound
adc
test
icebp
xor
jp
jb
push
mov
jnp
push
pop
bnd
das
lahf
mov
incl
pop
dec
test
inc
loope
aas
imul
imul
call
mov
sbb
pusha
cwtl
mov
roll
mov
movsb
lret
mov
jg
decl
xchg
and
cld
push
mov
sbbb
out
cmp
lods
je
cmp
pushl
add
dec
cmp
cli
daa
xchg
push
jns
push
pusha
in
jo
cmc
rorl
or
sub
stc
cmp
test
stos
les
ljmp
pop
mov
dec
inc
mov
cli
add
mov
dec
enter
imul
ljmp
cmc
iret
nop
mov
jmp
mov
mov
mov
mov
jl
dec
sbb
loop
mov
adc
pusha
jmp
cld
rol
hlt
add
imul
cmp
push
in
lret
lods
cmc
fidivl
jno
mov
and
jmp
add
mov
mov
mov
push
jg
pop
test
xchg
sarb
stos
sub
vpsllq
hlt
cmp
das
mov
jmp
and
sbbl
sbb
lods
movsl
push
ret
bound
or
cmp
and
and
test
inc
sub
pop
loope
scas
dec
add
cmp
aam
xchg
cmp
rorl
div
dec
imul
push
cwtl
clc
pop
icebp
movsl
outsb
subl
cmpsb
incl
cmpb
or
sub
cmp
xchg
pop
mov
jl
popa
sub
ljmp
lea
clc
cmp
mov
inc
mov
xor
adc
decl
movsl
nop
int
mov
inc
xor
aas
dec
hlt
sub
incb
dec
cmp
inc
ljmp
mov
mov
nop
mov
cmp
dec
pushl
shl
int
add
outsl
mov
xor
fsubs
repnz
pop
push
push
lcall
daa
incl
leave
lods
dec
insb
cmp
and
daa
repz
xchg
mov
cmp
jmp
xlat
add
mov
mov
xchg
data16
sub
aam
out
lcall
jo
jbe
dec
jnp
xchg
pop
dec
push
jns
jno
dec
pop
stos
or
cmp
jl
scas
push
xchg
cmp
jecxz
stos
push
lahf
fldcw
pop
lret
adc
js
daa
fisubs
pushl
lahf
es
sbb
loope
jne
js
cs
mov
xchg
mov
pop
jns
fiadds
pop
out
insb
adc
jns
pop
mov
adc
jp
idivl
sbb
sbbb
xchg
mov
decl
loopne
fidivrl
mov
mov
pop
fwait
in
repnz
push
ds
cmpsl
icebp
in
dec
call
pushf
jno
shll
scas
test
jg
cltd
sub
jg
ljmp
mov
decl
cmp
ficompl
fwait
mov
movsb
fists
push
dec
sub
out
fdivr
ljmp
or
pop
mov
push
insl
push
mov
jne
mov
cmp
jmp
and
cmp
sbb
pusha
rcrl
xchg
into
shl
or
loopne
aas
pop
in
push
and
insb
repnz
pop
xchg
xchg
sbbl
std
xchg
sub
rolb
dec
lods
call
lock
cmp
iret
xor
adc
daa
cmp
scas
push
mov
loopne
lcall
or
gs
mov
mov
mov
imul
out
rcrb
push
or
jno
pop
mov
jmp
lods
lds
decl
push
fwait
mov
insl
lea
mov
gs
inc
inc
incl
mov
insl
leave
iret
xor
and
xchg
sbb
sti
lock
out
jae
and
lcall
jo
jnp
jne
nop
frstor
cli
and
fadds
ret
sbb
inc
fidivl
jmp
rcrb
lods
into
pop
xchg
repnz
or
stos
mov
mov
popl
insl
cli
push
insl
mov
fistpl
pop
adc
mov
les
aaa
inc
lcall
mov
lock
sbb
repz
adc
leave
mov
hlt
adc
mov
pop
mov
mov
cmc
jmp
jle
add
dec
cli
into
sarl
lds
sbb
dec
repz
mov
lcall
xchg
xchg
sub
jns
imul
or
aad
rclb
scas
sbb
std
clc
clc
out
aas
rcl
and
adcb
mov
pop
pop
push
push
adc
mov
pop
mov
adc
insb
mov
fidivl
and
lods
pop
push
fisttpll
cmc
clc
test
push
push
xchg
sbb
add
iret
sbb
repz
insb
out
pop
sub
mov
dec
mov
js
notl
jae
inc
cmp
int3
popa
outsl
adc
add
lds
out
stc
popf
mov
popa
push
sub
int
push
mov
mov
out
out
test
int3
inc
sarl
lea
pushl
add
addr16
hlt
mov
aas
mov
aas
sub
push
cltd
in
sti
and
sbb
ljmp
addr16
adc
adc
call
jg
aaa
out
imul
enter
inc
mov
xchg
add
movsb
jo
lret
cmp
push
lcall
inc
sahf
mov
pop
pop
mov
fs
lods
lods
xchg
xor
add
lahf
mulb
cli
lock
adc
dec
pop
es
jns
adc
movl
out
inc
jmp
iret
or
repz
imul
lds
or
xor
aaa
jl
xor
sbbb
add
push
jno
inc
in
cmp
add
xchg
adc
cmpsl
and
xor
mov
xchg
sar
inc
data16
stc
xor
dec
jbe
mov
loopne
pop
xor
cmpsl
jp
mov
push
add
or
add
lock
cmpl
mulb
add
ljmp
bound
mov
scas
mov
pop
mov
shrb
outsl
pop
and
adc
ljmp
sbb
mov
push
dec
rclb
sbb
test
test
call
sub
xlat
jmp
cmp
pushf
jae
pop
jo
out
into
pop
loopne
rcrl
add
call
xchg
std
dec
pop
mov
je
lcall
pop
ret
add
inc
cmpb
adc
fcomp
repnz
std
test
popf
icebp
inc
dec
leave
mov
fstpl
sub
mov
jge
aam
cltd
clc
popa
stos
scas
jns
push
push
or
imul
in
jne
jno
lds
or
jmp
lods
cmpsl
add
test
rol
xchg
push
adc
pushf
pop
or
leave
pop
outsl
lcall
sub
pop
out
lods
ja
dec
es
xchg
adc
repz
pop
push
jnp
pop
push
ret
dec
mov
or
mov
add
xchg
inc
pop
jmp
and
decl
dec
aas
and
sub
mov
jne
and
cmc
cmpsb
mov
ror
divl
call
aaa
sub
cltd
sarb
sarl
loope
and
ljmp
fldcw
mov
mov
push
sub
jns
push
out
cmp
mov
pop
in
pushl
jmp
xchg
enter
ja
dec
mov
sub
popa
xchg
cmp
call
jmp
mov
sub
out
rcr
stc
lcall
cli
popa
mov
pushl
jmp
dec
jg
ss
or
mov
inc
push
cmpl
jg
pushf
cmp
daa
jae
nop
aaa
and
or
pop
je
sub
bound
rcll
das
fwait
dec
fists
mov
lahf
pop
es
adc
mov
jmp
int
fdivr
in
fldcw
adc
clc
gs
jo
shr
icebp
aad
or
push
pop
sbb
out
fiaddl
ss
lcall
sti
mov
cmc
mov
pop
dec
incl
mov
pop
iret
out
xor
mov
sub
daa
push
lock
fdivs
insb
decl
call
push
inc
lahf
jecxz
stc
mov
mov
fbstp
cld
push
nop
xor
jmp
jle
outsl
mov
mov
sahf
std
mov
cmp
cmp
decl
dec
cmpsl
stc
es
fucom
notl
iret
ja
sub
pop
addr16
call
ljmp
push
sub
mov
mov
sti
cld
cli
nop
jno
push
rcrb
test
call
dec
repnz
int
cmp
inc
sbb
mov
inc
inc
lods
jp
addl
ljmp
into
loop
xchg
push
sub
pushf
or
andl
and
movsl
das
sar
xor
nop
and
icebp
ffree
mov
pop
mov
xchg
lcall
xchg
rclb
aam
fs
cmp
cmp
sbb
insb
int
subl
mov
dec
xor
inc
mov
and
out
cmpsb
xor
andb
jp
sbb
sub
ja
ret
mov
sbb
rorb
fucomi
xor
lcall
test
cs
fs
mov
lret
jecxz
call
mov
or
out
inc
andb
fxch
push
in
aaa
sub
ss
jmp
xchg
fiaddl
dec
add
out
outsb
xchg
ficompl
out
mov
loop
cmpsl
mov
loop
sub
lahf
xlat
adc
push
jo
xor
and
lods
sub
ljmp
les
jecxz
xchg
or
clc
mov
insb
loope
mov
adc
dec
xor
out
inc
fsubrs
inc
addl
hlt
jmp
fwait
cmp
add
and
dec
pop
or
nop
aas
jne
mov
lcall
hlt
test
jnp
fnstenv
jp
jp
cmp
push
adc
dec
ret
arpl
mov
fimull
dec
lods
inc
xchg
cmpsl
xor
cmp
sub
leave
lahf
cmp
pushf
aas
sub
insl
sub
mov
xor
roll
dec
outsb
push
xchg
mov
inc
out
sub
cli
filds
movsl
and
inc
clc
in
es
movsl
orl
inc
stos
mov
fists
enter
subb
sub
in
ret
fists
jns
fstpl
repz
pop
and
lcall
pushf
xchg
int3
lods
cmp
and
test
call
into
scas
out
adc
pop
push
mov
rcrl
das
leave
add
jbe
mov
incl
xchg
loopne
clc
std
dec
cli
pop
and
or
mov
sub
mov
les
int
dec
xchg
pop
mov
cmp
ds
enter
lahf
mov
in
xchg
jl
cmc
pop
les
mov
mov
push
mov
push
cmp
jne
fwait
xchg
leave
mov
popa
fmuls
test
incl
loopne
pop
sbb
push
mov
pop
dec
push
fidivrl
xor
add
cmp
mov
pop
cmp
fcomip
lret
jmp
fstps
enter
decl
ret
daa
ret
lret
pop
add
sbb
insl
pop
call
xor
loop
jg
decl
push
pop
faddl
jnp
push
cmp
cmpsl
push
dec
movsl
sti
fdivr
jmp
add
aam
gs
mov
fstpl
mov
sub
sbb
xchg
mov
divl
push
es
cmp
sbb
inc
jns
aam
jecxz
pop
andl
frstor
or
test
push
ljmp
outsb
mov
push
sub
stc
stc
repnz
cld
sbb
sbb
mov
xor
call
push
dec
pushf
xor
adc
push
adc
repz
test
stos
dec
cmpb
popf
or
out
sub
adc
test
aad
dec
sbb
mov
xor
push
dec
in
lods
cld
mov
mov
mov
std
dec
adc
mov
pop
dec
adcl
cmp
hlt
push
jmp
dec
jge
out
fisubs
mov
rcrb
clc
add
test
add
mov
decl
adc
pushf
mov
loopne
cmp
je
sti
cmp
and
sar
pushl
jbe
xor
iret
in
cmpsl
cltd
insb
sbb
imul
pop
ljmp
or
ds
dec
rcll
push
stc
xor
mov
mov
leave
cmp
outsb
inc
cwtl
jle
sti
pop
xor
dec
arpl
mov
jnp
insl
iret
cs
cmpsl
divb
cmp
outsl
sub
repz
lods
rclb
pop
adc
mov
or
decl
push
in
je
cmp
cs
stos
dec
cmp
inc
movsl
ret
insl
pusha
lds
xor
push
popa
mov
pop
pop
dec
divb
sub
fildl
pop
clc
pop
into
loope
push
cmp
dec
loope
out
lcall
lock
mov
insl
cmp
rclb
sub
add
cmp
push
test
sbb
jmp
in
loopne
aam
cmc
sub
adc
int
test
jp
je
outsl
in
mov
out
cld
lds
push
out
mov
scas
loope
in
ja
dec
xor
rclb
xchg
and
push
xchg
iret
xchg
popf
fnsave
sbb
push
insb
push
lahf
mov
fsts
and
insb
and
mov
int3
pusha
sbb
lret
int
sub
push
call
push
xor
xchg
mov
cmp
and
subb
fwait
mov
fnstenv
inc
imul
gs
int
mov
pop
outsb
cmp
fisubrl
int
jg
dec
mov
data16
dec
ja
or
sub
inc
fmul
test
cmp
jg
xchg
dec
in
and
inc
inc
std
mov
mov
xchg
dec
cmpsb
lcall
pop
notl
push
or
push
xchg
mov
sbb
jle
decl
fwait
push
mov
sbb
pop
sub
xor
jle
testl
lcall
es
push
int
pop
xor
mov
push
push
cmp
jbe
and
aam
mov
test
icebp
fcoml
incl
pop
rclb
cmp
ds
pop
mov
mov
lcall
pop
adc
push
adc
pop
mov
jae
cmp
subl
mov
jne
nop
in
cmc
test
adc
in
xor
xor
incl
subl
mov
mov
push
mov
push
es
push
cltd
fwait
adc
cmp
in
xchg
data16
jmp
hlt
icebp
ficoml
leave
fcmovbe
ss
scas
cmc
mov
idiv
inc
pop
fisubl
pop
add
mov
loop
jnp
andb
cmp
fwait
push
add
fistl
pushl
sbb
xchg
lret
lock
adc
mov
sbb
cmpsl
out
popf
cmc
pop
cltd
pop
sbb
and
std
incl
daa
jle
pop
jge
mov
sub
in
sub
call
xor
fstpt
pusha
aad
addr16
scas
das
inc
dec
jecxz
push
pop
iret
and
icebp
mov
mov
or
sub
aaa
cmp
adc
nop
and
test
jmp
xlat
cs
arpl
add
lret
icebp
pushf
pop
adc
loope
ss
bound
aad
jg
aam
lret
out
movsb
xor
inc
mov
push
scas
lods
out
inc
ds
incl
push
or
mov
std
add
or
mov
mov
ljmp
xchg
jge
insl
fcmove
cmp
lock
lcall
xlat
inc
out
dec
jg
cld
ljmp
mov
xchg
mov
data16
xor
add
sub
jg
lock
andb
call
unpckhps
jge
call
xchg
push
pop
inc
xor
shl
dec
fdivrl
in
pusha
push
ljmp
cmp
and
fwait
call
add
jle
or
mov
xor
jmp
mov
jns
mov
adc
add
mov
mov
out
lock
aam
jp
addr16
push
movsl
mov
jo
xor
cmpsl
ret
lret
jle
add
ret
xchg
push
data16
cmp
sub
inc
mov
xor
repz
inc
adc
notb
lret
rorb
dec
ljmp
test
aam
pop
inc
in
jge
mov
push
outsb
jo
dec
dec
mov
sahf
xor
decl
jno
sub
push
adc
pop
jnp
mov
shll
push
movsb
imulb
xor
mov
mov
das
icebp
icebp
jnp
xchg
pop
push
add
mov
xchg
cmpsb
fwait
es
add
fcoml
sbb
movsl
jl
fs
mov
add
pop
jp
lcall
dec
aad
xchg
cwtl
mov
xchg
fwait
imul
aam
in
sbbb
jmp
out
pop
xor
lcall
hlt
out
hlt
mov
mov
scas
pop
cmc
or
xchg
out
clc
in
ss
dec
dec
or
call
ss
ljmp
pop
loope
out
lcall
mov
aam
andb
mov
cmpb
call
sti
les
pop
add
int
je
in
add
jb
or
jo
jae
decl
cmp
stos
push
xchg
cmp
mov
aaa
adc
and
cmpsl
daa
mov
insl
jg
jg
adc
addr16
dec
popf
call
scas
out
sti
iret
sub
lcall
insl
jecxz
pop
lret
dec
sub
sbb
lds
dec
lahf
enter
aam
add
decl
ds
and
cltd
sbb
and
pop
cld
push
sarb
fistps
add
clc
jecxz
dec
sub
out
aaa
daa
or
imulb
idivl
or
incl
pop
js
or
js
xor
xor
movsl
sbb
test
lock
lcall
jne
mov
ljmp
repnz
jmp
xor
inc
mov
in
lcall
fisttps
sub
push
ret
aam
mov
inc
cmpsl
lods
fs
ljmp
or
push
int
push
rclb
mov
aas
ret
movsl
add
add
ljmp
js
in
addb
in
or
sub
sbb
mov
add
push
dec
fsubs
pop
out
push
or
dec
sub
sbbb
inc
ret
icebp
sahf
in
xchg
cmp
out
add
fdiv
test
cs
call
out
decl
fxch
xchg
push
movsl
outsl
jmp
adc
mov
jno
mov
mov
incl
dec
inc
popa
jle
and
lcall
lret
or
loop
mov
shll
sbb
mov
and
xor
dec
aad
jne
cld
aad
inc
lret
xchg
sub
mov
pushf
adc
imul
aas
fsubrs
clc
incl
out
mov
add
jp
or
jp
insb
hlt
sub
out
clc
pushl
insl
enter
int
adc
jne
inc
cld
push
fbld
out
cli
pop
hlt
dec
lock
sbb
mov
shl
int3
cli
mov
call
xchg
popa
lods
jbe
fcoms
pop
sbb
insb
inc
sbb
xor
mov
mov
dec
lcall
mov
inc
mov
cmp
xchg
pop
fstpl
in
ret
loopne
in
inc
shl
xor
dec
call
pop
mov
jae
push
jmp
pop
popa
jecxz
mov
jge
out
jo,pt
adc
push
bnd
insl
xchg
mov
sbb
jmp
mov
jmp
cltd
stos
lret
out
adc
pusha
inc
cmp
add
adc
cmp
mov
lcall
lret
mov
or
cld
lahf
mov
pushf
mov
jmp
imul
mov
pop
mov
fs
negl
mov
lret
test
icebp
pushl
outsl
insb
xor
push
and
and
mov
mov
decl
in
repz
xchg
or
dec
fwait
push
xlat
ret
test
pop
cmc
inc
mov
or
in
aaa
subb
sbb
add
mov
out
cld
decl
pop
outsl
ret
aad
inc
scas
test
popf
mov
cltd
sub
jmp
rorb
xchg
setbe
dec
idiv
mov
fstps
push
cltd
jle
mov
ja
lcall
hlt
push
xchg
sbb
push
inc
dec
outsl
je
or
add
xor
cmp
frstor
out
jbe
cmpl
ljmp
out
outsb
sub
in
test
rep
or
push
jne
rol
lods
sti
xchg
push
clc
cli
xor
or
xchg
bound
je
incl
insl
and
jnp
imul
push
mov
mov
xor
and
lock
push
push
jl
arpl
call
mov
or
rcl
sarl
push
push
xchg
fadd
push
push
pop
push
xor
sub
std
or
ror
fisttps
repnz
xchg
insb
and
inc
addb
lods
psubq
shr
out
js
fisttps
leave
jle
ds
or
pop
push
mov
rcrb
out
shlb
int3
dec
jbe
adc
lock
and
aaa
dec
jmp
pop
rorb
push
mov
mov
insl
xchg
lea
cmpsb
mov
mov
push
jb
aaa
lret
and
js
adc
push
aas
rcrl
jmp
push
dec
rol
cmp
test
jmp
je
in
sub
loopne
dec
jmp
add
call
mov
sub
imul
xor
leave
mov
or
mov
decb
mov
sbb
inc
lds
pop
in
jg
ljmp
inc
adc
cmp
mov
cs
xchg
scas
inc
or
mov
aad
mov
dec
pop
mov
cli
lcall
vpsubw
mov
jb
sub
xchg
imul
inc
mov
adc
call
lret
ret
xchg
sub
lcall
jbe
lods
pop
jmp
mov
in
ljmp
scas
mov
sarl
add
push
in
bound
call
mov
cmp
lods
xor
fisttpll
inc
lret
xor
sahf
push
jg
jge
repz
sub
incl
pop
movsb
fs
push
and
sbb
testl
out
lods
sbb
mov
jl
in
or
cmp
lahf
lret
out
test
imul
lahf
inc
pop
mov
gs
pushl
mov
adc
pop
and
je
imul
int3
subb
std
dec
pop
out
pop
rorl
lcall
rcll
sahf
std
icebp
inc
test
imul
lcall
sub
lcall
scas
bound
orl
jle
pusha
subb
dec
jmp
push
jecxz
push
add
inc
xchg
jne
or
jp
popf
cmpl
in
sahf
loopne
xchg
cmp
js
mov
fildl
loope
movsb
xlat
push
jg
js
or
pop
fs
jne
adc
adc
dec
test
fucomp
xchg
jg
dec
lods
sbb
mov
sub
jmp
push
lods
outsb
dec
push
lea
test
sub
call
mov
imul
lock
fs
iret
fistps
hlt
add
decl
push
loopne
push
ret
in
push
out
in
insb
xor
dec
xchg
mov
sar
decl
stos
cwtl
into
fimull
mov
fcmovnbe
push
add
push
adc
ljmp
sub
data16
mov
lcall
popf
leave
jmp
das
call
stc
stos
outsl
cmpsb
rcll
movsb
es
push
push
push
fimuls
sbb
xor
rep
push
add
fcomip
std
mov
or
cld
adc
in
jmp
push
xchg
lahf
mov
sub
pushl
dec
or
test
sbb
int
sbb
add
sbbw
ljmp
adc
movsl
push
inc
inc
roll
loope
xchg
pop
cmovp
fldl
mov
and
add
mov
data16
adc
in
adc
push
cwtl
push
mov
incl
pop
jns
mov
jl
mov
pop
lods
adc
dec
push
sti
inc
stc
mov
out
ljmp
frstor
sub
cmc
test
dec
sarb
lds
push
xor
faddp
iret
pusha
push
push
cltd
pop
negl
arpl
loope
jmp
pop
movsb
shlb
out
addr16
sbb
aad
insb
dec
xor
subl
mov
push
mov
push
subb
mov
inc
jnp
mov
icebp
mov
jb
jg
cmp
jbe
lods
fists
stos
popa
mov
int
mov
ljmp
call
pop
sbb
push
popa
xlat
outsb
out
lea
sub
sub
mul
test
fdivrs
push
pop
sbb
pop
add
and
popa
push
xchg
aaa
aam
test
mov
ljmp
and
jge
aaa
les
jbe
mov
push
xchg
mov
ficompl
jp
and
clc
xchg
push
cltd
dec
in
cmc
xchg
sbb
incl
lods
leave
test
sbb
mov
dec
jae
xchg
dec
insb
movsl
punpckldq
decl
mov
scas
std
mov
sti
cmp
jmp
shll
xchg
out
cmp
std
incl
jo
aaa
inc
dec
dec
jnp
sbb
push
mov
adc
jmp
cmp
pop
loope
data16
jbe
pop
xor
mov
add
fsubl
dec
aas
push
insl
repz
inc
push
lret
das
xor
mov
lock
decl
adc
cmp
das
add
iret
clc
cli
lods
ds
outsb
movsl
enter
xor
sbb
arpl
fxch
adc
stos
pop
fidivrs
mov
xor
mov
adc
imul
ljmp
cmp
outsl
adc
mov
add
and
mov
pop
xor
incl
arpl
xchg
add
xlat
cmp
stc
or
or
inc
sbb
repz
ljmp
sbb
cltd
cmp
push
test
jle
pop
jo
cmp
sbb
jl
jbe
mov
ljmp
sbb
sub
or
inc
mov
push
sub
call
adc
or
sub
jge
aas
lret
jle
pop
in
stos
add
dec
mov
js
xor
out
adc
mov
pop
mov
mov
ficoms
ja
jmp
js
adc
fucomi
jecxz
rorb
jne
loope
outsl
cltd
adc
push
out
movsb
leave
pop
mov
or
or
pushf
add
mov
xor
call
out
adc
pushf
xchg
lret
jp
cwtl
imul
mov
shlb
pop
les
add
imul
stc
xchg
movsb
jle
pop
ljmp
sbbb
cmpsb
pop
test
iret
mov
jl
jno
jg
mov
leave
push
sbb
xor
jl
and
fists
shrb
scas
adc
jmp
loope
pop
hlt
call
pop
iret
adc
dec
mov
xchg
imul
call
iret
pop
out
int
inc
stos
daa
dec
ja
inc
push
imul
pop
sbb
mov
loope
jmp
mov
push
xchg
lret
sbb
inc
and
pop
xor
lea
mov
incl
test
pop
cld
and
ret
mov
daa
pop
bound
mov
sub
jle
pushl
mov
mov
call
pop
and
sbb
outsl
mov
call
loopne
add
pop
pusha
sbb
add
lods
jp
and
lahf
inc
loopne
lcall
pop
or
mov
hlt
jmp
xor
cmp
ljmp
js
and
ljmp
lahf
sbb
mov
push
stos
roll
xor
inc
lcall
inc
nop
std
pop
cmp
mov
push
jl
loopne
lahf
repnz
pop
addr16
jg
xchg
outsb
iret
jp
dec
xchg
rcr
inc
aad
push
sbb
mov
jge
jne
mov
das
mull
xor
repz
jmp
mov
xchg
xor
bound
mov
lods
pop
jecxz
jle
xchg
inc
push
mov
mov
into
mov
incl
dec
pop
popf
and
clc
dec
daa
daa
or
pop
jle
and
push
xchg
test
fcmovne
sti
icebp
inc
cmp
jmp
loopne
ret
pop
in
sbb
ja
psubq
rorl
dec
icebp
call
jne
stc
and
lea
cmp
ficomps
sub
xchg
shrl
dec
jp
adc
add
in
push
mov
jp
jp
sub
push
dec
mov
pop
scas
or
fsubl
cmp
xor
adc
dec
pushl
scas
mov
push
aaa
cmp
xlat
test
mov
cmpsb
jecxz
cld
dec
lcall
movsl
or
pop
pop
xchg
pop
push
cvtps2pi
mov
in
xor
in
xchg
add
push
and
imul
andb
mov
vpunpckhwd
popf
cmp
rcl
push
repnz
pop
inc
and
mov
call
jae
imul
fstpl
push
lret
cmp
xchg
cmp
jp
dec
xlat
call
and
mov
push
fistl
adc
int3
out
or
enter
dec
cmp
cli
lcall
mov
jo
js
inc
cltd
xor
mov
mov
das
jne
ljmp
lcall
or
adc
pop
ret
push
lock
rcrl
stos
cwtl
add
movb
mov
divb
xor
test
fstpl
cmp
rcr
sbb
ljmp
scas
and
cmp
inc
mov
rcrl
xlat
js
sbb
lcall
stos
mov
daa
test
loop
sub
or
mov
xor
or
shlb
lock
inc
and
es
mov
in
movsl
clc
xchg
out
xchg
add
arpl
mov
pushl
in
or
add
push
addb
iret
lods
push
cmp
mov
pop
lcall
sub
lahf
push
mov
lahf
jnp
sbb
fiadds
mov
incl
jns
insl
scas
inc
repnz
add
sbb
sub
jge
mov
data16
push
notb
cmp
sub
sbb
outsb
rolb
test
jg
outsl
loop
jecxz
sahf
mov
add
stos
pop
daa
neg
insl
pop
ss
dec
arpl
sbb
call
filds
push
and
stos
loope
lods
lret
cmpsl
fstps
adc
out
imul
jecxz
push
lcall
incb
xchg
push
movsl
sbb
jge
dec
test
xor
loope
iret
xchg
fwait
insb
mulb
rcrb
adc
dec
inc
out
mov
jo
sub
scas
add
jecxz
mov
cmpsb
pop
data16
push
jns
mov
fnstsw
ret
pop
je
lret
icebp
pop
add
repnz
movsb
in
and
adc
adc
push
jle
sarb
stc
add
pop
sub
ljmp
jb
adc
adc
loopne
pop
pop
xchg
mov
cld
adc
les
mov
inc
mov
int
jbe
sbbb
adc
arpl
test
or
fcomip
lcall
fmulp
sub
icebp
jo
or
lods
movsb
popf
lock
test
in
jp
sub
jl
pushl
push
pop
in
jns
cmp
fsts
incl
mov
pusha
cld
mov
bound
push
jns
out
xchg
ljmp
add
ds
call
in
mov
xchg
cmpsb
cmp
adc
sti
cmpsl
add
pusha
aaa
xchg
pop
push
inc
aaa
movsb
leave
push
mov
xlat
enter
ja
mov
cmp
dec
jae
bound
incl
sbb
xlat
or
add
add
in
loopne
xorb
push
jno
je
ljmp
adc
popf
enter
imul
inc
out
push
cmp
fisubrl
cmpsl
sahf
push
xchg
jg
dec
push
shll
mov
pop
ret
mov
aas
aaa
mov
xor
sbb
movsb
pusha
cmpsl
push
push
jl
les
daa
inc
push
testb
mov
repz
movsb
incl
dec
dec
sbb
pop
sub
add
or
dec
xchg
add
insl
js
and
mov
xchg
pusha
mov
push
mov
aaa
jns
jle
and
sti
das
sub
gs
cli
fwait
decl
push
repz
xor
icebp
jle
cmp
popa
je
shlb
xchg
sbb
dec
and
dec
mov
loope
dec
in
push
roll
fisubrs
fisubrs
and
popf
add
xor
repnz
mov
mov
sbb
leave
mov
incl
pop
mov
dec
adc
gs
mov
and
sbb
sub
xor
mov
dec
jg
ds
jbe
push
mov
xchg
fldl
out
cmp
decl
sahf
push
imul
mov
ja
call
mov
jmp
cmp
addr16
jle
inc
fwait
jmp
add
ds
push
loop
jmp
call
jmp
or
pop
adc
lcall
mov
fstpt
cmp
mov
lock
hlt
and
ja
cmp
popf
cmp
imul
bound
xlat
dec
mov
addl
incl
pop
les
pop
mov
inc
enter
fwait
test
push
mov
xlat
adc
add
push
add
xacquire
cmp
cmpsb
adc
mov
test
jmp
ljmp
xlat
cwtl
shl
jo
out
mov
pop
stc
sti
push
in
roll
add
ljmp
pop
xchg
cmp
and
xchg
iret
test
bnd
push
inc
mov
les
test
xor
cmp
cld
decl
lock
jb
sub
mov
dec
sub
cwtl
hlt
into
xor
push
jno
jg
mov
sub
decl
and
subb
mov
jo
shll
cmpsb
mov
jns
jo
mulb
push
in
rclb
scas
lods
sbb
insb
cmp
cmp
adc
shll
insb
into
pop
sbb
and
push
bound
fwait
mov
in
adc
mov
call
rorl
incl
scas
xchg
dec
cmp
mov
dec
mov
mov
add
inc
testl
sti
mov
jg
pop
movsl
mov
mov
jle
int
call
out
adc
incl
rolb
ljmp
das
stc
adc
adcl
xchg
sbb
call
loopne
push
sbb
pushf
loopne
pop
call
mov
mov
js
push
incl
or
lds
test
cmp
dec
jl
xchg
ljmp
adc
insl
dec
cmp
lret
dec
inc
pusha
cmp
ds
imul
in
insl
cmp
loop
push
inc
pop
imul
dec
dec
insl
pop
out
and
jno
out
movsl
xchg
ja
inc
call
push
mov
roll
out
jmp
pushl
jmp
sbb
hlt
push
movl
jb
sbb
pushl
cmp
ret
jl
sar
xorl
pop
sub
mov
push
icebp
cmc
lcall
and
call
mov
mov
rorl
cli
test
inc
fldcw
push
in
add
hlt
incl
or
adc
mov
xchg
shlb
mov
lcall
lcall
add
imul
push
addr16
popf
popa
imul
outsb
ljmp
push
dec
addr16
pop
or
mov
loopne
lock
imul
dec
mov
mov
or
ljmp
or
push
or
sbb
and
pop
xchg
jecxz
sti
cmc
decl
pop
and
adc
fimuls
xchg
or
ret
sub
test
call
les
mov
adc
cmp
not
jge
fldt
xchg
xchg
es
jno
inc
out
pop
mov
inc
pop
cli
incl
and
repz
jne
movsb
mov
push
ljmp
arpl
mov
dec
clc
in
inc
andb
negl
push
inc
mov
cli
loope
cltd
mov
pop
mov
std
jb
dec
cwtl
sarb
ljmp
xchg
mov
into
jp
jl
mov
cmc
and
mov
incl
jge
jp
mov
jmp
jl
sub
mov
sarb
xor
cmp
jmp
imul
lods
pushf
cmp
lods
pop
mov
cmp
mov
subl
ljmp
test
ret
iret
cmp
push
scas
cmp
fwait
dec
push
popf
push
jae
andl
clc
pop
out
xchg
cmp
xchg
push
lret
xchg
mov
xor
jp
push
imul
dec
lock
cmp
nop
sub
out
imul
aaa
inc
stos
dec
and
pop
mov
incl
std
rorb
mov
adc
popa
fmuls
pop
fldenv
dec
cmp
xor
dec
pop
addr16
jp
mov
ljmp
aad
es
clc
incl
push
mov
cmp
loop
push
xadd
xor
or
add
push
call
cli
sbb
pop
pusha
mov
pop
inc
sahf
push
loope,pt
ret
repz
jbe
pop
mov
or
fdivrp
jmp
int3
or
and
faddl
dec
inc
rcrb
jbe
and
inc
sub
ljmp
mov
xchg
mov
pop
xchg
test
push
bound
std
mov
hlt
add
sahf
jne
push
lea
dec
and
fs
fsubrl
push
je
lods
xlat
sub
dec
cmpsl
inc
cmp
jae
jb
pop
rorl
and
decl
rolb
sub
jo
xor
sbb
notb
mov
add
test
jmp
and
in
outsb
sbb
mov
cmp
ljmp
mov
adc
adc
add
adc
mov
push
dec
jnp
movsb
pushl
mov
ds
mov
and
fwait
in
cmp
pop
dec
jl
data16
jb
idiv
ljmp
push
mov
add
lods
shl
and
decl
adc
push
fisttpll
decl
pop
sub
out
mov
xchg
jae
inc
pushf
outsl
je
test
add
jns
stos
pop
loopne
pusha
push
movsl
dec
bound
mov
and
je
sti
sub
push
in
or
ljmp
int
jnp
push
mov
add
push
out
lcall
enter
daa
xchg
imul
xchg
sarb
pop
push
out
pop
jecxz
scas
call
ret
or
cmp
decb
rolb
cmpsb
and
mov
inc
call
jno
mov
inc
scas
push
inc
dec
adc
scas
cs
imul
repnz
lea
rcll
movsb
lock
push
push
add
lahf
push
rcrb
pop
outsl
xchg
fld
xor
add
jne
add
sub
int3
cmp
decl
ss
cld
sahf
dec
dec
out
jo
inc
or
movsb
cs
pop
fidivl
ljmp
fisubrs
dec
in
cltd
cwtl
pop
loopne
jl
rclb
aad
jo
icebp
data16
enter
inc
mov
imul
sbb
loop
sub
mov
mov
ljmp
clc
jmp
xor
add
cmp
mov
movl
adc
push
cmp
fcomp
mov
xchg
inc
aas
cltd
ljmp
popa
fcomi
es
inc
fs
out
push
xchg
adc
idivb
lea
or
jnp
ljmp
push
lret
int
push
inc
int
dec
adc
scas
roll
inc
clc
loopne
addr16
mov
ljmp
push
add
xchg
test
imul
dec
sbb
jle
inc
and
ljmp
insb
test
xchg
test
call
xchg
pop
mov
cltd
xchg
inc
xor
pop
mov
jns
popa
cmp
jmp
and
dec
dec
xor
inc
jns
jge
cmp
aaa
test
adcb
jg
loope
cmpxchg
xor
mov
das
inc
adcl
inc
xchg
dec
call
dec
push
ficoml
sub
mov
ljmp
cmpsl
in
and
pop
das
sbb
mov
lcall
ljmp
shll
sub
ss
js
mov
inc
adc
fsubr
push
incl
xor
lcall
xchg
cmp
inc
push
jo
jo
and
pop
icebp
incl
or
push
pop
imul
push
mov
pop
and
ljmp
adc
mov
bts
mov
sub
lahf
xor
inc
mov
sub
stos
outsb
fcomip
les
mov
rcrb
pop
cmp
cli
cmp
stc
fldt
jae
sbb
dec
enter
out
add
adc
cld
adc
fisubl
out
dec
aad
std
scas
cli
lcall
in
jle
mov
jg
int
stos
and
sbb
or
jecxz
scas
test
test
movsb
insl
mov
xchg
lcall
cmp
sbb
and
test
xchg
adc
cld
loopne
and
lcall
mov
ss
movsb
jns
adc
mov
xor
xor
inc
fsubrs
lods
jp
inc
insb
in
mov
fnstenv
lcall
add
inc
jecxz
rcrb
in
pushl
cli
lods
dec
les
add
mov
in
ljmp
shl
sti
outsb
jae
stos
jmp
scas
outsl
inc
clc
filds
idivl
imul
cmp
pushl
jbe
enter
mov
mov
pop
loopne
add
jp
mov
decl
pusha
mov
dec
pop
xchg
cli
add
sbb
dec
xchg
fidivl
add
dec
enter
ljmp
cmc
mov
inc
mov
adc
xor
fwait
mov
jne
cs
mov
xlat
ja
ljmp
pop
push
cwtl
mov
cwtl
outsl
sbb
adc
insl
cmc
xchg
aas
jbe
ds
fistpll
ljmp
lods
pusha
mov
decb
hlt
mov
pop
cmpsb
fwait
jl
push
adc
iret
js
push
xor
jno
fmul
sbb
hlt
pusha
pop
leave
fsubrp
rol
out
add
rcll
jmp
sub
pop
inc
mov
adc
mov
popa
stos
fidivrs
ljmp
mov
jmp
loopne
insb
call
fs
mov
stos
dec
test
pusha
dec
subb
inc
sti
in
push
incl
mov
test
dec
mov
mov
sbb
lret
push
sar
ljmp
popa
int3
data16
mov
jl
test
pop
pop
adc
out
int
and
and
mov
aas
ss
push
jg
test
ljmp
xchg
xor
jb
xchg
sahf
and
lods
repz
cs
push
pop
lcall
xor
popa
sub
aad
xchg
jp
fsubr
cmp
sub
adc
mov
mov
add
fidivrl
mov
js
cmpsb
cmp
pushf
add
ss
inc
mov
jp
xor
scas
dec
call
push
pop
outsl
mulb
stos
ds
out
in
in
jmp
jmp
psadbw
aam
leave
sbb
ds
adc
mov
xchg
and
incl
sub
sbb
pop
adc
repnz
sbbb
scas
or
data16
fcompl
push
call
push
and
push
inc
int3
gs
cli
push
inc
cmp
pushf
add
sbb
decl
gs
out
mov
int3
scas
jae
cli
scas
sub
jb
std
out
xchg
fldl
fimuls
adc
sbb
xor
scas
and
popf
mov
ljmp
rcrl
ja
mov
fcomps
cmp
dec
divl
imul
sub
adc
push
fwait
int3
loope
xor
movsl
inc
test
push
add
mov
sbb
pop
xor
lcall
rorl
xlat
lret
aaa
subl
jp
jge
pusha
out
cmc
insl
add
jmp
arpl
mov
sahf
sub
leave
or
inc
out
xlat
sbb
jbe
xor
adc
fidivl
mov
cld
call
dec
in
inc
cmpsb
adc
push
jp
sbb
push
mov
mov
mov
out
ljmp
cmp
xchg
fcompl
inc
icebp
es
inc
inc
test
pusha
jo
xor
jp
add
dec
outsb
and
fstpl
lcall
dec
cs
loop
add
or
es
xchg
pop
mov
xor
mov
add
xor
jle
fistl
hlt
and
mov
xchg
repz
test
mov
mov
mov
xchg
mov
jae
aam
daa
mov
pop
cmp
call
std
pusha
sbb
std
xchg
pop
adc
adc
cld
repz
call
dec
test
data16
mov
mov
pop
lock
xchg
lret
popa
jmp
and
lods
ss
int
in
jo
fmulp
sbb
je
rep
enter
xor
mov
inc
cltd
mov
movsl
aaa
mov
movsb
mov
inc
adc
xor
stc
and
mov
iret
sbb
dec
sbbl
call
lods
dec
dec
sbb
mov
rcrb
aaa
adc
inc
rclb
sti
ljmp
inc
rolb
push
cwtl
jns
push
mov
fisubrl
test
aaa
dec
xchg
add
jmp
dec
in
push
andl
lods
sbb
pop
ficompl
pop
out
daa
out
cmp
cld
dec
subb
cwtl
int3
sarb
push
int3
into
mov
adc
decl
int
into
xor
adc
cmp
aaa
outsl
sub
iret
in
icebp
fcmove
dec
pushl
shlb
mov
lahf
shll
fidivl
adc
outsb
xchg
adc
or
jmp
mov
aad
sar
dec
popf
call
test
rcl
sbb
pushl
notb
xor
sub
mov
xchg
adc
inc
mov
sti
push
test
ljmp
add
or
inc
mov
jnp
xor
jmp
jb
dec
fldl
hlt
sbb
xchg
subl
xor
jg
lret
in
or
jl
xchg
cld
mov
aaa
icebp
jmp
test
decl
mov
mov
pop
mov
adcb
sub
cmc
das
ja
js
imul
sbb
jmp
adc
fdivl
imul
leave
push
mov
push
mov
jmp
and
cli
daa
mov
dec
imul
in
into
mov
mov
sub
mov
sahf
in
enter
dec
jnp
push
stc
lret
dec
inc
adcb
dec
popa
insl
jae
call
je
gs
pop
dec
and
xor
popa
clc
cmp
adc
cmp
cmp
or
jg
add
jmp
lcall
cmc
mov
andb
mov
aaa
jp
ss
fwait
int
inc
sub
rclb
cmp
jae
push
out
adcb
adc
addb
incl
shrb
out
fxch
xor
mulb
dec
jae
ret
cld
xor
jg
test
xor
in
xchg
int3
xchg
popf
and
cld
pop
cmp
or
incl
adc
imul
xchg
or
pop
pop
xor
sub
aas
add
push
nop
lcall
sbb
xchg
stc
push
xchg
mov
push
scas
sub
call
enter
shl
ljmp
imul
syscall
mov
mov
mov
or
pop
push
pop
mov
xchg
fldt
adc
push
jno
dec
xor
inc
cmc
cwtl
and
pop
jns
rcrl
stos
mov
std
insb
and
mov
dec
push
lock
in
outsb
stos
sbb
cmp
ljmp
ret
fcmovb
push
and
mov
lahf
hlt
add
int3
mov
jns
in
cwtl
call
mov
mov
loop
lret
fsubs
dec
add
xchg
out
fs
out
incl
mov
dec
jno
mov
dec
leave
pusha
xor
mov
inc
popf
shlb
mov
lcall
sarl
scas
loop
add
or
dec
arpl
fs
cmp
ljmp
xor
jae
dec
push
cmpsb
push
dec
jnp
jmp
xchg
sub
popa
ljmp
push
leave
jl
adc
cmpsl
dec
pop
dec
popf
mov
lods
push
addr16
pushl
dec
push
test
std
aaa
les
xor
mov
test
loope
in
mov
add
jne
inc
test
ja
rol
sbb
sbb
cmp
sub
add
pop
push
and
pop
sbb
std
ljmp
out
scas
sbb
std
stos
mov
gs
dec
cmp
call
mov
or
adc
xlat
stos
pop
out
jne
jno
pusha
orl
cld
pushl
cmc
bound
test
push
iret
mov
pop
les
ljmp
sbb
add
or
adc
mov
dec
ja
adc
or
imul
lcall
xor
pop
jmp
imul
out
lock
ss
push
test
push
pushl
lret
jg
or
bound
fbstp
fdivrs
ret
jmp
ljmp
jmp
mov
sub
aam
mov
je
jbe
mov
incl
ficoms
mov
xchg
xchg
dec
rorl
mov
push
adc
call
jne
dec
hlt
and
shrl
insb
lcall
lret
cmp
mov
dec
fbld
out
dec
lahf
xchg
pushl
in
fs
sub
lock
lods
cli
mov
imul
pushl
sbb
sbbb
mov
cld
ljmp
dec
sahf
mov
pop
jne
xchg
call
mov
add
pop
pop
mov
mov
test
adc
lret
ficomps
decl
pop
xchg
and
test
jnp
aas
inc
jge
or
xchg
into
mov
lcall
jg
pushl
jp
ja
lret
loop
pop
add
ja
and
es
js
mov
out
loope
out
insb
jg
fcomip
sbb
fcmove
cld
sarb
inc
scas
adc
sbb
je
popf
adc
jg
ljmp
pop
pop
or
add
mov
cs
sbb
ljmp
fsubs
shlb
push
cmc
lock
jmp
test
push
push
loopne
ljmp
enter
sbb
loop
push
mov
xchg
dec
addl
in
pushl
bound
stc
inc
inc
sqrtps
mov
vpavgw
outsl
mov
fistpl
cmpsb
cmc
test
icebp
and
sub
push
xor
jmp
out
push
div
fucomi
cwtl
jne
stos
cli
xchg
repz
fs
cs
jae
pop
lock
stc
popf
icebp
int3
fwait
mov
adc
lods
mov
mov
dec
dec
sub
xchg
lods
push
je
call
lea
cmpl
pop
push
je
popf
dec
int
and
jp
xlat
out
xlat
iret
mov
add
cmp
test
xchg
adc
mov
sub
sub
incl
inc
aaa
aad
out
and
ljmp
jno
and
sub
filds
push
sbb
push
movsl
pop
sti
xor
or
and
inc
outsl
dec
shlb
cmp
rcrb
jne
pop
notl
les
call
cli
ljmp
je
mov
in
lods
pop
mul
jge
mov
or
adcl
dec
cmpsl
out
popa
and
iret
sahf
xor
cwtl
xchg
lahf
clc
mov
in
push
and
inc
popa
repz
neg
ljmp
sbb
loopne
cmp
bound
sub
inc
sub
jmp
daa
loopne
push
dec
cmc
decl
push
xchg
ret
cmp
pop
dec
sub
jmp
nop
mov
ret
popf
repnz
xlat
fcomip
lcall
pop
pop
nop
and
xor
pop
cs
lret
jne
ljmp
sahf
mov
shlb
hlt
test
mov
push
ljmp
scas
jns
inc
rcll
int3
mov
xor
pop
jbe
mov
orb
jg
mov
mov
hlt
roll
les
xor
sbb
mov
lahf
mov
jnp
ljmp
pop
inc
test
pop
cld
in
mov
mov
insl
mov
and
popf
sarb
cmp
xchg
push
xor
or
lret
in
mov
decb
adc
lea
ja
cmp
xchg
stos
js
xor
je
jno
inc
or
cmp
punpcklwd
addr16
loope
mov
pushl
cld
test
adc
inc
shll
sub
dec
xchg
lcall
mov
mov
adc
cmp
jle
sbb
sbbl
scas
lcall
ss
popa
lds
je
repnz
daa
cli
pop
mov
cmp
fmuls
int3
push
divb
lcall
test
insl
mov
and
ror
mov
out
incb
ret
pusha
outsl
clc
cmp
or
mov
das
out
mov
push
xchg
mov
mov
idivb
xchg
xchg
aad
mov
mov
stos
sbb
push
sar
data16
jecxz
pop
movsb
lahf
std
jae
aad
clc
ss
sub
loop
decl
add
arpl
stc
loop
flds
or
mov
test
mov
pop
decl
xlat
out
gs
jno
mov
insl
rolb
call
jge
shl
or
ja
adc
adc
fstpt
xor
push
shlb
fs
shlb
mov
subl
mov
add
or
pop
sub
jl
push
adc
push
int3
dec
sub
push
sbb
das
mov
jo
enter
iret
andl
scas
aad
addb
in
lret
jno
addb
incb
dec
mov
mov
imull
or
mov
arpl
into
xor
dec
dec
add
xchg
jnp
jae
jmp
push
mov
push
add
jecxz
xor
xchg
jb
aaa
sbb
mov
test
inc
fcmovnu
cmp
decl
and
dec
adc
sbb
xchg
testb
subb
mov
xlat
pushl
jno
sub
push
out
outsl
cs
jae
es
mov
xchg
mov
ljmp
into
loop
jns
push
das
jb
dec
filds
jb
lcall
leave
in
cld
out
cs
popf
mov
out
cld
cmp
xchg
add
jg
dec
pop
dec
pop
fnstsw
mov
sbb
jns
dec
out
movsl
ss
mov
leave
push
cltd
mov
mov
adc
push
xchg
mov
jmp
xor
test
xor
dec
mov
icebp
movsl
movsl
cmpsb
in
xor
mov
sar
jg
mov
sbb
push
ret
popa
sub
call
std
jbe
lret
into
decl
lock
jl
mov
out
push
mov
push
mov
mov
movsl
int3
jo
lcall
pop
mov
pop
movsl
jo
sbb
sbb
fs
sub
lock
out
cmp
imul
and
jmp
inc
cmp
cmpsl
jne
push
in
dec
sbb
mov
mov
cmpsl
lcall
lcall
pop
or
cmp
dec
push
jae
sub
cmpsb
insb
dec
jns
push
cli
mov
ljmp
adc
sbb
inc
rclb
das
mov
mov
inc
rol
dec
fcomp
mulb
push
pop
mov
ret
push
lcall
popa
add
sti
inc
jmp
and
sub
lock
bound
jnp
xchg
push
ljmp
sar
pop
mov
test
mov
sar
jmp
mov
arpl
lcall
sahf
imul
popf
inc
test
dec
test
ds
push
adc
cs
cltd
cmp
incl
sbb
repnz
inc
std
cld
mov
arpl
ret
push
xchg
xchg
std
dec
sbb
leave
shll
scas
mov
mov
imul
jp
dec
outsl
loope
test
jb
push
jle
mov
jmp
int3
jle
loop
mov
cmp
test
jmp
jmp
addr16
or
mov
in
pop
fs
in
fs
fiaddl
out
xchg
pop
fistl
jle
stos
rcr
mov
push
dec
jmp
lods
adc
call
fcmove
push
pop
inc
subl
xchg
or
imul
call
cs
pop
fs
sub
pop
xchg
lods
jmp
scas
add
push
mov
aad
xlat
push
jno
lock
decl
mov
cmp
addr16
imul
incl
inc
sbb
jecxz
xchg
hlt
dec
inc
xor
fisubrs
cmpb
mov
xchg
adc
xchg
lcall
loopne
and
jg
push
dec
or
cwtl
mov
lahf
xchg
adc
sub
sarb
mov
leave
jno
mov
ret
call
dec
mov
xor
dec
mov
pop
loopne
or
aas
lods
out
push
lock
cli
ljmp
add
xchg
push
mov
stos
xor
popf
mov
ljmp
jle
sbb
jg
pop
inc
mov
outsl
sbb
mov
push
jg
sub
sub
adc
xor
aad
dec
xchg
cmpsl
cmp
sbb
xchg
ljmp
mov
rcr
jl
add
dec
jmp
mov
gs
addr16
decl
add
out
loope
jg
testl
mov
ret
insl
sub
push
fisubrl
add
mov
pop
and
ret
in
out
pop
movsl
xor
xor
mov
jl
outsl
sbb
mul
stos
sub
loop
jmp
je
adc
inc
dec
mov
cmp
jecxz
ljmp
sbb
push
jg
popa
fs
lsl
mov
mov
test
pop
lock
in
sbb
daa
pop
andl
mov
fisubs
sub
pop
clc
divl
pushl
or
mov
push
push
dec
xchg
pop
dec
add
cwtl
or
fisubs
std
jmp
dec
pop
push
pop
testb
pop
insl
xchg
xchg
pop
or
data16
pop
or
sub
jle
js
mov
and
lret
inc
xor
add
mov
js
enter
pop
jecxz
sbb
pop
addr16
cmp
adc
ljmp
or
mov
repnz
mov
js
cld
test
push
push
mov
dec
cld
call
xchg
int3
pop
pushf
mov
mov
and
leave
nop
jg
and
mov
lcall
std
sub
addb
fbld
std
repz
mov
push
test
mov
ss
or
mov
incl
mov
or
test
xchg
fstps
add
sarb
mov
popa
clc
pushf
cwtl
lods
jl
mov
or
les
cmp
and
decl
jnp
repnz
push
pop
cld
loop
aaa
das
inc
dec
test
jecxz
and
mov
mov
enter
mov
int3
jg
or
aas
xchg
push
adc
cmp
inc
push
call
jmp
dec
inc
scas
cld
lock
jge
jo
mov
dec
sbb
test
incl
mov
or
jg
fstpl
cli
jns
sub
addl
daa
or
push
std
jmp
mov
flds
data16
outsb
pop
pop
fwait
mov
inc
fs
jnp
cmc
cmp
xchg
xlat
sbb
jl
decb
mov
xlat
addr16
xlat
sbb
ljmp
mov
jne
fldl
pop
adcl
jbe
notl
push
mov
jge
pop
cmp
test
fmul
frstor
inc
sub
cmp
arpl
push
mov
lcall
aas
jle
ret
xor
shll
jmp
and
xor
decl
mov
xchg
mov
add
jb,pn
sbb
test
sarb
rcll
dec
or
lcall
adc
inc
les
mov
fmuls
movsb
or
sahf
push
mov
cmp
sub
xchg
pop
fmull
sarb
incb
jbe
sahf
sbbl
rolb
lea
mov
inc
adc
jmp
jae
sub
xchg
test
nop
inc
sub
call
fmuls
cmpsb
in
incl
xchg
sbb
outsl
insb
jl
mov
ss
adc
xorl
push
ljmp
pushl
movups
dec
sbb
inc
xor
outsl
jns
stc
iret
out
aam
pop
ds
loop
add
adc
cmp
or
sub
out
call
iret
fwait
dec
aaa
roll
push
cmp
pop
mov
cmp
push
idiv
call
sub
xorl
stos
jbe
arpl
dec
xor
mov
shll
adc
aad
inc
jmp
loopne
or
ss
xchg
inc
outsl
cmp
bsf
mov
sub
pusha
jmp
xor
sub
jl
push
jno
popf
aas
cmpsl
jecxz
mov
push
mov
pop
pop
daa
fsts
sbb
insl
mov
cli
cwtl
or
sub
scas
mov
jno
sahf
roll
mov
mov
nop
fsub
shl
mov
cmpsl
rolb
and
pusha
icebp
cld
ljmp
arpl
mov
pop
mov
test
push
push
inc
fidivs
jae
pop
stc
sbb
cmp
xchg
pop
sti
ret
push
rcrb
mov
xor
or
mov
and
xor
call
fs
ffree
stc
nop
inc
es
pushf
pop
mov
and
push
int3
fisttpll
pop
into
call
jg
pop
push
mov
add
sub
arpl
incb
jne
jbe
mov
adc
cld
ljmp
sbb
aam
sub
add
pop
mov
test
scas
cmpsl
pop
outsb
jg
sub
fwait
and
cmp
int3
pop
aas
js
adc
jo
mov
incl
cltd
stc
sbb
cmpsl
repnz
fmull
cli
stos
mov
mov
ss
fdivr
pushl
cmp
mov
mov
dec
rcll
mov
mov
mov
jne
pop
daa
xchg
push
scas
insb
iret
pop
fldl
xor
jne
movsl
jg
mov
inc
xchg
push
pushl
shlb
inc
sbb
mov
and
popf
xchg
push
lock
stc
pop
jo
mov
push
xor
inc
es
enter
or
lcall
push
gs
sbb
cmp
jmp
insl
fists
lret
mov
loope
sbb
mov
sahf
xor
pop
mov
inc
lods
jp
ss
adc
decl
nop
jmp
bound
roll
inc
xchg
push
or
sahf
xor
pop
mov
push
push
cmp
pushf
outsb
push
fsubrl
fsubrl
popf
daa
iret
dec
sahf
out
pop
xor
sbb
add
jg
call
out
lods
sbb
shrl
sahf
insl
mov
pop
dec
sbb
jbe
cltd
cmp
ljmp
mov
popa
push
jno
add
xor
aas
inc
popf
push
test
fpatan
add
xchg
cmp
dec
xor
mov
dec
or
push
xor
lock
or
pop
aad
les
icebp
or
call
jb
cmc
mov
sub
aaa
cwtl
hlt
and
push
daa
push
jmp
outsl
and
sbb
leave
test
and
mov
inc
call
orl
lods
jbe
mov
stc
loope
hlt
mov
ljmp
imul
sbbl
gs
in
adc
lcall
ret
sub
lcall
jo
dec
in
ljmp
lret
loope
jo
xchg
rcl
addr16
sub
mov
sbb
sahf
inc
filds
ljmp
cli
mov
sub
inc
in
cmpsb
xchg
movsl
aas
push
dec
xchg
push
mov
lcall
call
mov
cmp
and
and
ljmp
pushl
fs
scas
add
and
dec
test
or
pop
outsl
pop
or
dec
adc
and
sbb
call
jg
mov
mov
mov
xchg
mov
mov
icebp
incl
sbb
xchg
sar
add
outsb
shll
jmp
add
adc
aam
pop
scas
pop
xchg
add
fsubr
popf
cmpsl
jmp
ret
adc
pop
test
decl
aam
or
loop
mov
jne
or
xor
gs
mov
mov
mov
and
ficoml
out
sbb
bound
pop
push
lcall
jmp
add
and
jb
lods
test
mov
daa
mov
or
sub
pushl
mov
lock
mov
xlat
dec
lea
xor
mov
add
jg
mov
xchg
sbb
add
fyl2xp1
cmp
in
add
in
and
lcall
lock
cli
es
mov
ret
leave
and
sbb
ljmp
nop
and
sub
out
rclb
aad
mov
loopne
rorl
movsb
xor
lcall
add
jns
mov
dec
fmuls
cld
call
push
dec
es
pop
cli
imul
lahf
mov
aam
rcl
adc
xor
movsl
adc
push
insb
dec
ljmp
mov
push
cmp
xor
fcomi
loop
out
cmp
xchg
fisttps
fdivrl
fnstcw
mov
jl
test
push
mov
outsl
ret
daa
addr16
pop
add
xchg
jg
shlb
pop
mov
mov
mov
shr
cli
scas
call
aas
dec
jge
hlt
inc
add
push
lretw
sbbb
ljmp
mov
int
ss
lea
mov
xor
mov
pop
mov
out
ljmp
movsl
pop
data16
mov
mov
shr
push
xchg
cmp
pop
nop
push
lcall
scas
rorb
pushl
ret
rcrb
setnp
xchg
pop
jecxz
xor
mov
mov
dec
popa
enter
pushl
xor
cs
lods
mov
outsb
test
cmpsl
arpl
lcall
add
lea
fs
loope
mov
add
mov
dec
in
lcall
push
insl
pushf
jnp
adc
pop
fisubl
aad
xchg
cmpsb
cmp
jp
adc
mov
cld
int3
cmp
das
popa
mov
cmp
push
jg
call
mov
mov
or
pop
subb
std
inc
pop
mov
les
into
data16
out
test
sbb
lds
or
test
outsl
push
sub
fmull
repnz
int
xor
mov
pop
cmp
std
cmp
inc
push
sub
mov
int
xor
rcl
sub
jg
into
or
stos
and
mov
adc
mov
mov
xlat
push
pop
cwtl
dec
outsb
lcall
xor
push
pop
dec
jg
lds
incl
inc
aaa
int
push
sbb
scas
fsts
in
and
icebp
dec
rcrl
add
xchg
fnstsw
lcall
daa
sbbl
cmpsl
lret
jae
movsb
or
sbb
and
pop
lahf
iret
push
aam
xor
cs
lods
mov
dec
cwtl
pushf
push
mov
inc
test
testl
out
call
incl
push
sbb
push
mov
cmp
mov
or
sbb
movsl
mov
push
mov
mov
sti
mov
mov
jbe
or
jl
loop
shrl
test
sub
and
leave
mov
xor
mov
decl
mulps
rol
adc
jg
sbb
push
cmpsb
mul
mov
sub
out
cmp
push
scas
cmp
sub
je
mov
cli
fdivrs
xchg
movsb
sahf
pop
and
ljmp
xor
in
push
mov
outsl
rcr
mov
shll
ret
neg
jl
ljmp
faddp
push
loop
sbb
repz
sub
mov
mov
call
mov
xor
pop
mov
fsubl
nop
imul
push
std
pusha
add
jb
stos
outsl
jae
adc
jge
call
dec
inc
setge
mov
or
in
icebp
sbb
mov
jmp
mov
repnz
ret
mov
jmp
push
xchg
jns
scas
mov
mov
mov
ficoms
loopne
ret
jmp
sahf
loop
call
aas
mov
inc
or
xor
int3
jp
lret
adc
pop
push
stos
mov
jg
movsb
jno
and
sub
mov
xchg
mov
cld
pop
into
dec
jle
push
test
call
loopne
enter
cld
fnstcw
mov
cmp
sub
sti
and
jb
fidivrl
xor
push
hlt
out
sub
push
mov
push
daa
outsl
lcall
xchg
imul
popa
daa
cltd
aas
xchg
push
repnz
inc
push
into
mov
and
aaa
lcall
cmc
pusha
aaa
push
or
mov
imul
out
es
and
mov
jo
inc
or
cmp
xchg
stos
xor
lahf
push
xchg
cmp
aad
movsl
inc
or
inc
je
js
push
pushf
pusha
or
sbb
mov
dec
or
or
in
aas
push
ret
mov
mov
jnp
repz
scas
xchg
andl
sub
pop
stos
adc
adc
lcall
subb
sbb
pop
loop
mov
mov
pusha
pop
adc
mov
bound
and
xchg
xchg
xor
fwait
or
out
and
divb
add
adc
ljmp
mov
repz
mov
jns
and
ja
xchg
pop
hlt
imul
xor
mov
sahf
jmp
es
push
push
mov
sti
pop
ljmp
enter
push
push
or
je
xchg
lock
in
pushf
popf
xor
idivl
frstor
inc
pop
pop
ficoml
xchg
ljmp
adc
dec
inc
insb
pop
mov
es
cs
cli
push
insl
or
lcall
mov
int
loop
and
sub
lods
mov
push
ljmp
cmpsb
mov
or
mov
mov
and
call
dec
sbbb
das
sub
call
xchg
cli
scas
push
add
or
inc
lret
jbe
popa
or
ja
xor
pushl
std
das
pop
outsl
and
into
jl
adc
daa
sub
add
aaa
mov
or
clc
or
mov
in
addb
xchg
xor
inc
popf
pop
mov
decl
or
mov
bound
outsl
ss
push
mov
imul
popf
mov
popa
into
movsl
enter
jmp
leave
lret
jl
clc
ficomps
mov
add
loopne
sub
iret
sub
std
sub
lcall
pop
xor
iret
fstpl
fnstcw
outsl
out
and
clc
dec
imul
mov
aaa
dec
idivb
decl
push
lods
mov
mov
adc
inc
jg
lock
pop
jecxz
cmp
or
fcomip
divl
and
xchg
test
iret
xchg
test
add
sub
outsb
dec
fcomip
pushl
mov
sbb
inc
loop
leave
push
push
push
cmc
jbe
sub
pushl
mov
adc
sahf
cltd
or
outsb
sbbb
adc
ds
or
cltd
cld
push
cmp
movsb
or
pop
or
gs
lcall
lret
scas
sbb
pushf
hlt
lret
fs
std
lods
push
or
hlt
push
and
sbb
lcall
cli
push
xchg
jecxz
mov
xor
sbb
xorl
call
mov
dec
arpl
xchg
push
xor
jp
lcall
adc
mov
lcall
inc
mov
and
loope
inc
cmp
or
jns
cmp
rolb
incl
mov
or
addb
fwait
aas
push
pop
push
fisttpl
dec
in
and
lcall
shlb
imul
xchg
mov
cmp
xor
lock
mov
call
gs
and
adc
loope
mov
sbb
mov
cmp
xor
inc
jge
idivl
mov
std
adc
mov
scas
cli
aaa
inc
xchg
lcall
inc
sti
decl
sub
test
inc
jbe
and
jo
pop
cli
push
jecxz
out
clc
sub
fwait
dec
bound
pop
xor
outsl
mov
jg
lods
mov
inc
pop
push
xor
jns
out
call
push
lods
inc
jecxz
shlb
popa
push
pmulhw
xchg
add
push
loop
jmp
es
push
cmpsl
movntq
inc
mov
movsb
ror
in
xlat
popa
rorl
jno
stc
pop
fucom
popa
sbb
add
sbb
das
push
add
es
push
dec
pop
in
dec
add
and
decl
out
sahf
out
in
jp
mov
ljmp
cli
lock
bound
loop
ja
mov
out
lret
lcall
add
mov
jmp
jg
out
loope
dec
xor
mov
and
ja
lret
push
ret
mov
mov
mov
fwait
jnp
ret
push
add
cmpsb
movsl
aaa
jne
inc
or
push
lods
mov
mov
test
jmp
out
sub
push
out
arpl
mov
add
cmp
scas
or
addl
cmp
sub
sub
fwait
gs
in
cld
mov
pop
aam
dec
jmp
push
lods
outsl
sbb
dec
adc
pop
adc
cmp
insl
mov
call
inc
clc
scas
inc
sbb
pusha
outsl
dec
mov
rol
stos
mov
mov
cmp
mov
hlt
add
enter
jecxz
sub
pusha
mov
test
jb
pop
fs
test
fcomip
and
loop
call
out
xor
cmp
shrb
mov
nop
jg
scas
sbb
mov
loope
dec
pop
jae
decl
lcall
shlb
mov
add
lds
xchg
push
pop
idivl
jecxz
pop
mov
adc
testb
sub
hlt
sbb
mov
pusha
and
jg
sbb
lds
test
jmp
push
in
xchg
leave
add
push
add
loop
into
loopne
movsb
fs
lods
aaa
lds
push
mov
gs
jnp
or
dec
sub
scas
and
inc
cwtl
pop
je
into
xlat
xchg
add
test
test
adc
or
decl
test
mov
mov
jnp
pop
add
xor
popa
mov
sub
pop
mov
movsl
repnz
nop
pop
and
cmp
jle
sbb
xchg
or
jp
les
sub
jl
sti
cmc
iret
mov
mov
or
incl
lret
fsubs
mov
xchg
xor
push
jmp
lcall
repz
mov
sbb
adc
ljmp
inc
das
call
sbbb
std
int
mov
mov
or
xchg
mov
clc
call
mov
mov
mov
cmp
popa
repz
jns
ror
xor
imul
push
push
sub
out
adc
ljmp
ja
pop
fldt
inc
rep
or
cmp
push
adc
inc
lahf
pop
sbb
mov
sti
or
out
mov
lret
mov
jmp
into
fs
pushl
aaa
pop
mov
dec
mov
pop
jp
push
adc
adc
and
shll
mov
xor
call
out
cli
push
push
fs
cmpsb
and
xlat
or
xor
or
xchg
bound
loop
call
pushf
xchg
divb
fstps
sub
cmp
cmp
cmc
or
outsb
int3
lret
mov
mov
mov
rolb
push
push
gs
adc
xorl
xorl
push
ljmp
sub
jne
jne
cmpsb
pop
std
incl
fildl
push
jecxz
out
mov
call
std
aam
lcall
daa
xchg
mov
les
fmul
out
mov
mov
iret
rolb
aam
decl
stos
push
enter
sahf
mov
pushf
cmp
mov
sbbb
xchg
es
pop
icebp
ljmp
xchg
cmpsb
es
dec
shll
mov
push
adc
lea
and
ljmp
add
dec
xchg
and
stos
std
mov
fadd
and
xor
ljmp
xchg
xchg
sub
imul
out
enter
out
call
mov
dec
ret
mov
es
das
mov
into
push
push
out
stos
shll
xchg
mov
out
jo
push
stos
imul
mov
inc
or
shll
cltd
js
cltd
ljmp
adc
out
dec
pop
repnz
pop
or
push
sbb
fbstp
ret
mov
or
outsl
movsl
mov
testl
fadds
and
ljmp
inc
xor
and
imul
sti
ljmp
ljmp
jmp
jnp
mov
inc
mov
loope
sbb
mov
std
adc
mov
call
fbstp
outsl
inc
in
shl
push
aam
inc
mov
dec
jno
mov
incl
addr16
movsb
js
sbb
sub
dec
decl
xchg
out
ja
push
inc
and
mov
fwait
dec
aas
mov
js
ljmp
mov
or
jle
ret
add
icebp
push
ljmp
xlat
jge
cmpsb
repz
in
rclb
mov
dec
lds
push
push
fs
pop
cwtl
sar
mov
xor
lods
push
or
notl
cmp
ljmp
inc
movsl
mov
push
xor
mov
enter
adc
jne
push
outsb
ss
sar
jmp
in
jae
in
lcall
xchg
push
lea
pop
nop
or
call
incl
or
ret
sbbl
add
cwtl
pop
pop
hlt
decl
jp
pop
inc
mov
mov
jmp
mov
push
mov
mov
out
jmp
push
test
sbb
cltd
ficoms
fists
notl
pop
dec
in
clc
lock
cli
ds
adc
cmc
sbb
pushl
rorb
scas
sahf
out
dec
hlt
cmpsb
jb
inc
xor
mov
test
pop
and
add
lcall
lret
loop
sti
jp
pop
jb
adc
aad
cs
stos
xchg
push
sbb
lcall
cld
dec
xchg
or
outsl
ficompl
inc
dec
mov
mov
call
pop
lcall
xor
or
rcrb
pop
push
xchg
lcall
das
xchg
xor
adc
sub
adc
jo
xchg
adc
mov
push
pop
mov
fisubl
je
push
andb
add
cmp
hlt
call
cli
lds
push
sahf
fldcw
jmp
jo
lahf
cmpsb
pop
scas
or
fidivrs
loope
xchg
and
or
mov
imul
fwait
add
mov
push
pop
bound
and
pushl
push
dec
cmp
or
shl
jmp
ret
ror
or
jmp
incl
xchg
jecxz
pop
divl
in
inc
xchg
sub
pop
fdivrs
sbb
pop
cld
pushl
jp
dec
and
pop
adc
int
stc
jo
call
hlt
mov
pushl
jle
cltd
lret
lods
loope
nop
addr16
cmp
xchg
lret
xor
mov
aaa
inc
nop
test
in
in
rcrb
stc
sub
cwtl
test
dec
jb
jmp
mov
mov
cmp
pop
push
xchg
lock
push
xchg
nop
pop
add
ja
enter
imul
cli
call
test
ds
mov
sub
pop
lea
pop
dec
mov
push
pop
sbb
inc
or
pop
iret
and
leave
dec
jge
scas
add
pushl
add
imul
lret
scas
stc
mov
fisttps
sbb
stos
mov
cld
movsb
sub
push
mov
inc
int
jb
insl
not
shlb
adc
push
or
push
std
jg
or
in
fistl
jno
jmp
pusha
idiv
adcb
mov
jmp
pop
inc
movsb
repnz
xchg
sbb
push
push
arpl
pop
fdivl
push
mov
sub
cmc
sbbb
adc
dec
cmp
iret
outsb
lcall
xchg
sub
adc
pushl
repnz
push
or
and
nop
jecxz
pop
push
pop
add
or
pop
cmp
decl
mov
inc
sub
cmove
xchg
xor
shll
in
movsb
cmp
shlb
sbb
jmp
dec
in
push
idivl
push
in
sbb
and
incl
jbe
lret
arpl
mov
adc
fidivs
test
push
or
lcall
mov
fisubs
outsb
jb
out
fisttpl
out
lret
stos
add
fstp
cmc
ljmp
jl
pop
movsb
adcb
lock
mulb
hlt
cld
mov
or
mov
and
jnp
pop
clc
stos
and
test
das
fbstp
sbb
sarl
xchg
mov
mov
ljmp
aam
adc
jecxz
out
test
cmpsb
imul
push
and
cmc
out
cli
decl
call
cmp
subl
outsl
xchg
movsl
in
pop
add
lds
icebp
pushl
idivb
mov
jle
pushl
outsl
jo
sub
xchg
repnz
mov
cmpsl
sbbb
mov
or
lcall
loope
iret
xor
mov
fnstcw
out
push
jmp
inc
push
mov
ljmp
fldt
dec
das
insl
stc
out
sbb
xor
mov
out
ljmp
mov
and
mov
mov
cmpsb
cld
stos
ret
aaa
sbb
add
enter
pop
jae
jns
fbstp
test
add
out
leave
mov
daa
adc
jbe
mov
flds
lcall
push
ljmp
jmp
dec
sbb
sbb
mov
loope
xor
mov
sub
mov
xchg
and
xor
ljmp
fstpt
incb
stc
push
in
adc
cmp
and
addr16
sar
ljmp
add
ja
inc
push
pop
jl
in
imul
sbb
mov
jg
dec
aad
mov
inc
or
fadds
mov
lahf
sbb
xor
js
pushf
ljmp
sub
pop
xor
mov
mov
mov
addr16
jbe
js
pop
mov
cli
xor
xchg
ret
xor
lret
lret
jns
into
std
test
sub
add
fs
lcall
cmc
out
jns
jb
or
mov
lock
fs
orb
pop
dec
add
pop
loop
xlat
test
add
mov
int3
xor
pop
hlt
push
xor
mov
aaa
sub
daa
int
fisubs
mov
test
imul
and
clc
enter
vmulss
jl
jle
mov
sbbl
inc
mov
shl
lcall
stos
mov
jae
mov
in
jno
xchg
mov
enter
lcall
pushl
or
sbb
sti
cli
adc
adc
call
idivl
insb
sub
pop
sub
iret
jle
and
les
pushf
sub
lcall
xor
sbb
pop
nop
aad
xchg
movsb
pop
jo
ficoms
repz
and
cli
jg
movb
sbb
mov
push
push
inc
sbb
dec
pushl
das
outsb
stc
pop
add
mov
test
sub
jp
dec
stos
out
incl
jo
movsl
es
in
push
xchg
jb
mov
jmp
cmp
cwtl
cmpb
aas
or
pop
xlat
outsl
inc
arpl
lcall
dec
add
xor
in
jle
js
push
cmp
lahf
cmpsb
push
call
sbbl
add
push
iret
xor
xor
cmp
int
jge
xchg
call
test
in
aas
cwtl
xor
rcrl
mov
in
pop
aaa
mov
sub
mov
ds
xor
xor
jg
dec
mov
jmp
pop
mov
call
lcall
addr16
inc
jae
jmp
stos
and
cmpsb
lock
pop
jecxz
stc
sbb
mov
add
dec
mov
sub
hlt
lcall
out
pop
loopne
jg
leave
adc
and
inc
orl
jbe
call
pushf
ljmp
fimull
or
rcr
cmp
lcall
inc
push
mov
mov
ficomps
or
xor
xor
adc
das
sar
test
pop
mov
xor
popf
insb
jne
sbb
lods
mov
cmp
jnp
pushl
mov
jnp
in
ljmp
repnz
mov
sub
mov
sub
xchg
mov
push
add
cmp
ds
mov
test
sbb
fsubrs
pop
cmp
cmpl
ljmp
lret
aaa
insb
insl
cmp
popl
jecxz
mov
or
cmp
cmp
jbe
push
pop
and
sbb
out
add
sub
inc
decl
clc
cli
daa
imul
inc
xchg
enter
push
jecxz
popf
dec
push
push
push
out
add
popf
xlat
xchg
stos
je
jb
add
jecxz
cmp
test
iret
shlb
lods
pusha
push
repnz
jo
mov
popf
xchg
sar
decl
and
or
mov
sbb
ss
test
into
data16
ffree
add
xchg
pop
ljmp
pop
stc
push
fsubrl
stos
jo
xor
mov
xchg
aad
bound
jb
lcall
daa
test
stc
cmp
push
push
adc
cmpsb
xchg
hlt
push
push
icebp
pushf
pop
mov
xchg
arpl
or
mov
inc
inc
mov
test
xor
inc
jl
popf
pop
nop
cwtl
decl
add
in
ljmp
lods
call
mov
cwtl
dec
call
dec
dec
push
ds
sub
pop
mov
and
cmp
pop
and
mov
xchg
je
add
sub
fmuls
pop
fwait
cmp
jg
idiv
lcall
dec
dec
push
les
adc
push
aaa
mov
pop
pop
pop
inc
iret
js
ret
sub
popa
jo
sbb
das
cli
push
imul
outsb
sarl
outsl
xlat
mov
mov
movsb
cli
sahf
add
jmp
push
mov
pop
jge
test
add
push
push
jl
shll
dec
lcall
mov
mov
sbb
or
es
fadds
xor
pop
xchg
leave
movsb
call
sbb
lret
mov
inc
daa
pop
pop
and
lahf
bound
pop
cld
mov
gs
or
add
jg
cld
and
mov
push
call
test
jno
lods
mov
stos
call
mov
mov
mov
scas
pop
jb
xor
stos
mov
push
add
cmpsl
int
mov
ss
sbb
add
sub
popf
pusha
jo
jge
dec
je
cmp
addl
and
push
xor
pop
fstpt
movsb
fbld
movsl
add
dec
push
pop
sti
push
jmp
lcall
decl
lcall
mov
maxps
stos
pop
cld
mov
pushl
aas
imul
mov
mov
ficomps
fwait
and
out
enter
mov
push
pmaxsw
je
fdivl
js
fmul
dec
xor
fwait
jmp
outsl
dec
in
outsb
mov
ss
sub
or
in
ret
add
sar
mov
daa
fsubrp
loope
xor
mov
sbb
push
bound
stos
gs
jle
call
xchg
xchg
dec
into
and
cmpsb
mov
pop
cmpsb
outsb
lods
add
in
fnsave
xor
movups
in
incl
les
mov
push
enter
xchg
orl
pop
ljmp
mov
jl
xor
sbb
xchg
cmpsb
dec
add
incb
orb
ss
jge
cmp
dec
mov
into
pop
out
xchg
mov
std
pop
cs
loop
aas
movsb
sbbl
cli
pop
fisttps
data16
imul
lods
mov
add
aam
mov
lcall
push
cmpsl
cmpsb
and
in
jl
mov
jno
fisttps
jmp
popf
pop
bound
sub
or
andl
inc
and
and
cmpsb
mov
xchg
mov
loope
or
sbb
lcall
repnz
and
mov
jo
fdivrs
incl
mov
incb
and
and
shr
add
xor
out
lea
push
mov
xor
mov
sbb
xor
jg
jl
mov
mov
out
out
cmp
mov
jl
in
push
push
push
jge
pop
cmc
lods
je
repnz
push
jmp
imul
loop
cwtl
add
mov
inc
cld
push
decl
adc
pop
mov
aaa
push
test
cltd
sub
fisubrs
ljmp
call
sbb
adc
inc
repz
daa
ror
adc
xor
mov
repnz
pop
sub
cld
sahf
sahf
push
xor
fidivrl
les
mov
daa
sbb
mov
add
push
dec
or
xlat
cltd
jne
lods
mov
lret
ss
stos
push
mov
sub
js
test
fldenv
mov
aas
inc
stos
push
fiaddl
mov
mov
ror
enter
mov
pop
scas
jo
flds
xchg
loopne
mov
mov
call
int3
push
stos
or
sub
push
fcoms
xchg
add
mov
fcoml
xchg
xchg
sub
popf
fbstp
decl
mov
sbb
cltd
lahf
push
dec
shl
lahf
nop
push
lods
inc
out
adc
pop
add
cli
movsl
mov
mov
data16
mov
pop
cwtl
dec
lock
ljmp
ss
mov
and
data16
sahf
movsb
sbb
dec
xor
sahf
cmp
addl
sbb
push
xchg
std
xchg
frstor
js
lds
pop
mov
pop
bswap
rcl
and
fnstenv
jg
dec
clc
inc
jl
scas
jo
inc
sbb
loope
leave
mov
das
ss
xchg
fdivrp
cmp
mov
xchg
xchg
xchg
mov
push
inc
push
enter
lret
ja
loope
call
mov
push
ljmp
aad
push
adc
lock
mov
cld
push
sbb
lock
lcall
sahf
out
cmpsb
cmpsb
fs
ret
ret
pusha
xor
mov
fmull
pop
push
lock
out
cmp
subb
aaa
adc
sub
in
xlat
out
call
sub
sub
mov
aas
arpl
sbb
inc
mov
sub
dec
mov
loop
orl
dec
xor
jmp
push
or
rorl
nop
lds
ret
aas
in
xchg
cli
call
xchg
mov
ficompl
lods
fistpll
add
pushl
loope
adc
dec
je
and
into
xor
cmp
inc
inc
nop
out
sahf
sbb
dec
mov
cs
lock
out
cltd
cmpsl
mov
iret
mov
ret
jg
dec
shrb
rcrl
jo
dec
cli
test
xchg
or
mov
inc
lcall
int3
dec
ja
mov
jl
int
xchg
lods
adc
jge
incl
inc
xorb
int
mov
loopne
icebp
fbld
stos
es
out
clc
incl
pop
pop
fdivrl
orl
dec
sbb
cmpsb
decl
jb
lahf
shrb
outsl
xor
test
mov
arpl
dec
mov
mov
imul
cmpsl
insl
clc
hlt
je
mov
shlb
mov
jne
pushf
lcall
jnp,pt
fnstenv
or
jb
imul
divl
sbb
mov
mov
test
inc
sbb
fistpll
pop
inc
mov
push
dec
sub
xor
pop
mov
mov
loope
jl
cmc
lcall
fdivrs
adc
adc
dec
adc
stos
fisubrl
sub
jg
fistpll
cmc
or
test
jecxz
push
dec
xchg
jg
fwait
mov
fistpll
mov
pushl
or
dec
cli
jmp
xorl
push
clc
aas
call
dec
push
dec
xor
inc
fadds
movsb
pop
rorl
add
push
xor
ljmp
jbe
movsl
mov
xchg
xlat
pusha
insl
lahf
cmpsb
imul
lcall
ljmp
fdivl
mov
std
insb
cmp
js
add
out
call
add
imul
repnz
jo
dec
mov
add
add
ret
and
jmp
adc
pop
lds
popa
in
add
push
jmp
std
push
loop
jae
and
xor
fisttps
out
add
mov
xor
and
xchg
inc
pop
lods
xor
cmp
mov
sti
sarb
aas
imul
lds
ljmp
mov
mov
xlat
into
int
mov
push
push
fimull
adc
adc
addr16
sbb
mov
adc
leave
mov
rclb
fsub
out
xchg
scas
std
js
mov
jg
lret
xor
aaa
arpl
jg
ljmp
rorl
stos
scas
inc
test
out
daa
pop
ret
mov
push
sbb
adc
mov
xchg
les
lahf
js
and
fcomip
decl
xchg
outsb
sbb
xor
test
adc
orb
sar
mov
or
in
push
mov
or
bound
jle
inc
sbb
add
in
jmp
es
cmpsb
dec
cmc
xchg
inc
popf
hlt
mov
jno
loop
int
pop
out
fs
int
aaa
lahf
decl
jge
ja
sbb
cmp
mov
push
sbb
cmp
pushf
dec
push
pop
inc
inc
ljmp
mov
nop
stc
dec
insl
dec
ljmp
mov
aad
jecxz
jae
cmp
fsubr
add
decl
movsb
xor
fiadds
pop
popa
ret
enter
sub
adc
call
mov
clc
sbb
je
icebp
and
das
dec
add
mull
mov
dec
jo
aas
xorb
js
mov
pop
sbb
and
call
rolb
add
insb
or
push
xchg
je
push
dec
jl
test
inc
into
xor
jb
add
mov
dec
jnp
or
inc
clc
xor
test
mov
clc
cs
sbb
mov
mov
cs
jo
int3
popa
hlt
movsb
out
fisubl
push
aaa
xchg
adc
out
les
fcomip
mov
fcmovnb
add
jb
movsl
cwtl
loopne
lods
outsl
xor
sbb
pushl
mov
ljmp
sbb
cmp
xchg
aas
mov
in
xchg
cmp
mov
pop
psrld
and
movsb
loope
push
aas
cltd
push
std
inc
lcall
mov
dec
popa
lds
popf
lcall
out
lahf
outsl
add
shr
dec
sbb
clc
les
aaa
jecxz
lods
and
jmp
pushl
std
xchg
inc
jnp
sarb
inc
dec
mov
mov
cmp
loopne
jcxz
call
adc
into
les
cli
adc
mov
push
scas
add
popa
mov
dec
jge
inc
call
xchg
or
mov
scas
add
fidivl
ret
or
adc
sub
in
mov
les
sub
call
inc
xchg
inc
stos
call
stos
shrl
dec
and
mov
in
mov
pushl
inc
aas
insl
and
loop
andb
cmp
mov
and
fwait
xor
pop
mov
das
lds
cwtl
sti
cmp
call
inc
sub
sub
and
mov
out
mov
ja
decl
in
push
mov
mov
fcomp
dec
scas
xlat
push
or
jmp
mov
clc
xchg
mov
and
add
jl,pn
call
push
push
dec
pop
sub
stos
mov
popf
sub
add
cmp
inc
out
js
add
movsb
mov
in
les
jmp
lea
enter
jns
int
mov
dec
fcoml
xchg
ficompl
pop
ja
jg
lock
push
jmp
jno
shrb
jne
sbb
js
xlat
hlt
jmp
pushf
or
dec
gs
or
sbb
jno
mov
ljmp
fistps
adc
mov
push
outsb
inc
jbe
fwait
addb
outsl
lea
mov
stc
cmp
ljmp
loopne
cwtl
sbb
mov
test
outsl
icebp
cmp
jg
or
push
xchg
and
ljmp
add
fs
test
mov
clc
in
push
repnz
sti
pushf
lret
push
and
inc
lahf
adc
test
decb
jmp
repz
test
outsl
push
mov
ljmp
sbb
test
add
sbb
out
sti
popf
into
and
outsb
add
test
xor
test
xor
xchg
ljmp
dec
xor
je
xlat
cmc
mov
cmp
pop
call
add
dec
push
nop
aad
lcall
pushl
adc
orl
cmp
shrb
incl
jnp
pop
xchg
fdivs
dec
ljmp
or
lret
inc
or
call
mov
lret
pop
xchg
pop
pop
xor
mov
push
ds
jns
xchg
xchg
jle
jo
push
imul
loop
mov
mov
lahf
sub
daa
adc
jl
jl
clc
mov
fcomps
pop
movsl
xchg
jmp
mov
or
js
xor
fstps
pop
cld
ret
push
fnstcw
call
inc
rcrl
jbe
decl
push
xlat
lock
push
aas
addl
in
or
out
cltd
movsl
xor
int3
stos
push
or
push
stc
in
and
in
push
add
scas
aad
leave
leave
inc
or
push
cmp
aam
pop
data16
sti
push
mov
inc
imull
adc
mov
dec
mov
jg
sub
jne
mov
add
inc
aad
lods
jg
xchg
or
jl,pt
cmp
aas
in
and
mov
call
mov
wrmsr
mov
jb
add
and
shrb
bound
mov
adc
cli
xchg
test
jg
aaa
mov
jmp
in
jmp
ja
xchg
push
fcoms
dec
popf
xchg
push
mov
push
lret
and
arpl
sar
lods
stos
outsl
mov
add
cmp
and
ljmp
mov
inc
cmp
ficoml
push
sub
xchg
push
xchg
test
inc
pop
jo
mov
and
pop
sub
jmp
clc
jp
pop
cmp
sbb
and
into
jl
stc
cmpl
lcall
and
mov
outsb
mov
push
add
xlat
mov
pop
xor
or
inc
sbb
incl
loop
mov
push
xchg
andb
aaa
fcomip
out
rep
out
and
mov
scas
cli
jmp
cmpsb
pop
cs
jp
jbe
mov
inc
les
mov
cmp
jg
mov
hlt
mov
sub
lcall
sar
jmp
lret
clc
clc
loop
or
loopne
shrl
mov
arpl
loope
pop
jo
jecxz
fdecstp
incl
xor
mov
dec
sub
jg
pop
inc
sbb
pop
stos
out
mov
lods
add
popa
sbb
pop
pop
mov
icebp
mov
cmp
aam
int3
lock
sahf
inc
cltd
cmpl
and
add
jge
cmpsl
or
inc
sbb
test
sbb
xchg
bound
test
into
push
pushf
mov
inc
call
in
jge
fsubr
insb
cli
cli
pop
iret
ds
fs
in
add
mov
ljmp
inc
out
fs
shrb
and
sub
stos
adc
mov
call
fst
cmp
pop
cs
add
mov
aam
mov
push
stos
inc
dec
xchg
lahf
inc
shrb
cli
into
in
lcall
jle
sarl
es
lods
dec
aad
xor
test
dec
ljmp
jmp
mov
fists
mov
and
lods
mov
or
fistps
mov
pop
daa
lcall
repz
mov
clc
pop
jns
cmove
movsl
lods
pop
ret
dec
scas
loope
push
cmp
mov
clc
stos
mov
dec
rcr
sahf
inc
adc
rcrb
mov
shll
push
xchg
jo
pop
or
in
test
test
lret
hlt
pushl
and
sbbb
push
pop
push
mov
pusha
jge
sub
inc
dec
adc
pop
notl
pop
or
xor
ret
daa
cmc
testl
mov
cmp
int
int
int
mov
idivl
fisubrl
pop
ljmp
mov
xor
push
xchg
sbb
cmp
ss
push
mov
loopne
add
xchg
cwtl
pop
mov
push
jg
pushf
xor
or
pop
xchg
je
daa
mov
push
stos
into
inc
out
sbb
pop
lea
aad
mov
aas
addr16
pop
repz
add
insb
xchg
cwtl
stos
sub
bound
inc
mov
mov
mov
mov
jge
out
sub
xchg
cwtl
icebp
faddl
andb
or
cmpsl
js
xchg
movsb
and
dec
jb
data16
cmp
sti
out
clc
lcall
loop
push
or
in
adc
jbe
out
dec
push
stc
cld
jg
lcall
mov
out
loopne
mov
daa
sbb
pushl
movsb
bound
nop
and
mov
sarl
imul
mov
scas
sti
push
mov
push
cld
xor
jb
xor
inc
xor
std
dec
arpl
jg
xchg
scas
fadd
push
cmp
push
cmpsb
ss
roll
sti
negb
pushf
nop
pushf
scas
inc
fstp
jmp
in
jmp
ljmp
fwait
pop
pop
sarb
dec
repz
js
xchg
scas
sub
in
cld
mov
sbb
jmp
pop
orb
ljmp
sbb
sbb
or
cmpsb
mov
xchg
sbb
mov
jp
or
sub
inc
je
call
jmp
jnp
out
adc
pushfw
stc
pop
xchg
push
push
and
icebp
int3
and
pushl
cmp
adc
pop
popa
mov
into
mov
inc
les
inc
sarl
shrb
jnp
pushl
add
cmpsl
jne
and
push
lcall
xor
rcrl
sbb
fwait
pop
sub
out
dec
dec
aad
sub
mov
adc
dec
decl
jle
mov
fucomi
or
in
shlb
xor
jb
inc
mov
cmp
aas
js
rcl
jecxz
push
inc
test
fs
incb
or
add
xchg
cmp
ljmp
inc
mov
mov
andl
sub
fiaddl
cmp
pushl
pop
add
adcl
mov
push
in
rcrl
repnz
fidivrl
je
cltd
pop
xchg
fmull
jne
lret
xchg
js
pop
stos
call
movsb
dec
aam
aad
jge
cmp
divl
mov
aad
shr
and
inc
in
pop
icebp
incl
xchg
out
lods
rcll
clc
hlt
outsl
jae
and
jmp
or
aad
pop
in
adc
sarl
shlb
and
inc
adc
sub
dec
mov
cmp
mov
daa
sbb
cltd
and
mov
push
add
sbb
cmc
call
cs
add
jb
inc
icebp
sbb
rol
fists
sub
pop
mov
push
mov
stos
js
ss
xor
cltd
lcall
insb
mov
sbb
sti
lahf
and
sub
test
clc
lods
outsl
jnp
mov
sub
add
outsl
push
cmpsb
fcomps
les
mov
cs
dec
or
ror
jne
xchg
mov
fisubl
decl
xchg
out
sub
push
or
scas
test
aam
xor
aad
pop
addr16
fistl
pop
pop
push
push
mov
imul
lcall
gs
add
xor
xor
ds
decl
jle
sti
sbbl
movsl
jmp
gs
push
lds
mov
pop
cld
test
jnp
out
pop
lock
scas
inc
and
inc
fsubrl
cld
gs
rcr
cmp
mov
in
imul
and
mov
addr16
dec
push
add
pop
shrl
sar
call
xor
decb
inc
cmp
ss
pushl
stos
mov
mov
xor
jns
jmp
adcb
and
mov
decb
xchg
dec
addr16
in
sub
mov
xor
mov
test
adc
mov
incl
mov
adc
cmp
aam
mov
inc
pop
mov
jp
mov
mov
ljmp
in
lock
mov
adc
sbb
mov
pushl
xchg
xlat
pop
xchg
std
jae
add
mov
inc
mov
xchg
addr16
ljmp
pushl
and
inc
mulb
push
popa
iret
sub
adc
bound
jg
cli
pushl
push
es
imulb
ret
sbb
rorl
nop
ja
js
cmp
inc
sbb
inc
cmc
inc
es
pushl
xor
movsl
push
adc
and
or
in
cs
clc
pop
mov
scas
data16
pop
cmp
imul
pop
adc
subl
push
dec
gs
fcomip
mov
mov
daa
adc
mov
arpl
fbstp
movsl
and
cmp
inc
adc
mov
jge
pushf
pop
xor
test
addl
call
dec
push
adc
sbb
xchg
cmpl
ret
in
cwtl
push
addr16
mov
sub
call
mov
mov
das
and
ret
in
add
test
mov
js
and
test
lock
insl
fdivrl
data16
in
ljmp
adc
sbb
ud0
notb
pop
int
mov
pop
add
js
test
imul
cmp
outsb
pop
les
test
cs
dec
sar
inc
dec
pusha
push
dec
dec
push
insb
dec
pop
fwait
loope
lods
mov
cmpsb
fistpll
push
fcompl
jnp
mov
movsl
sahf
sbb
xchg
adc
cmpsl
das
inc
xor
pop
push
mov
leave
jns
cmc
mov
ret
popl
pop
pop
xchg
sub
dec
fistl
inc
and
xchg
hlt
repnz
pushl
roll
jno
cmpb
in
push
arpl
xchg
xor
call
mov
xchg
inc
xor
mov
lret
fistpl
jl
call
sub
mov
lods
cwtl
cmp
inc
xchg
mov
xchg
inc
xor
pop
mov
mov
call
push
jnp
sbb
cmpsl
hlt
fistpll
lock
push
add
mov
sti
jge
adc
cltd
ljmp
jns
orl
leave
jp
jl
adc
jle
mov
or
aad
mov
inc
scas
cmpb
or
mov
push
stos
arpl
call
movsl
cmpsb
loop
pop
sti
inc
sub
cmp
or
iret
xor
add
test
dec
adc
jmp
add
cmc
sub
not
es
test
mov
in
push
ss
dec
pop
ficomps
xlat
sbb
cmp
out
and
shlb
xchg
and
nop
push
dec
adc
sub
jmp
in
mov
mov
push
repz
scas
setns
repz
mov
into
xchg
clc
xor
insl
cli
mov
push
icebp
lds
int
xor
mov
ret
js
idiv
jg
and
pop
mov
cltd
stos
lods
jns
repz
ret
lock
addl
dec
daa
pop
xor
roll
cmp
mov
adc
cmp
pop
fnstsw
xor
sbb
jbe
es
fwait
or
loop
cmp
mov
adc
lcall
add
jo
pop
out
rcrb
shl
in
pop
mov
pushf
jle
mov
lcall
in
jnp
leave
sahf
jmp
push
jp
xchg
dec
jge
nop
mov
lds
fs
xor
bt
icebp
call
loopne
sbb
jbe
aas
sub
lret
dec
jbe
push
sarb
mov
jp
cmp
inc
loope
or
lret
xor
fisubs
push
insl
fnstcw
aad
leave
xor
call
rclb
fsubrl
sahf
push
xchg
mov
push
cs
mov
in
syscall
decl
leave
loopne
ljmp
inc
fnsave
test
loope
iret
sub
sbb
pop
inc
in
xor
std
dec
testb
loop
jmp
je
pop
or
incl
add
ror
dec
icebp
cmp
mov
cli
pop
sbb
cmpsb
jp
sbb
push
popa
shr
and
call
inc
jmp
pop
pop
popf
lret
add
push
jmp
call
mov
xor
sub
push
imul
sti
lahf
mov
aad
stc
jnp
shlb
add
ss
ds
mov
or
scas
in
mov
ljmp
call
sti
push
cs
cmpb
mov
mov
pushf
xor
popa
movsl
xchg
mov
lcall
inc
mov
jmp
push
inc
loopne
pop
fstl
in
push
mov
lock
pushl
sarl
fwait
push
cmp
out
cmp
scas
fstpt
xchg
sbb
rclb
or
fs
dec
or
push
insb
inc
mov
fmuls
cwtl
inc
stos
in
push
arpl
pop
xchg
adc
jne,pt
xor
pushl
jg
add
mov
inc
push
xchg
cwtl
aas
or
jl
jmp
dec
or
cwtl
mov
cltd
cmp
adc
call
stos
pop
xchg
call
cli
mov
inc
jp
jecxz
fiaddl
pop
cmp
mov
std
sti
mov
add
add
jbe
hlt
popf
insl
jnp
inc
cmp
scas
adc
pushl
sahf
sbb
daa
call
icebp
sub
sbb
js
jnp
jg
in
insl
jno
sar
jmp
in
cmpsl
inc
lret
fimuls
repnz
js
mov
lret
mov
mov
pusha
pushl
mov
jbe
mov
sti
mov
lods
cmp
xchg
add
ljmp
rcrl
adc
movsb
cwtl
dec
pop
subl
repnz
in
icebp
pushl
xor
dec
inc
cmpsl
pop
sub
mov
adcl
sub
movsl
js
lock
fildll
mov
mov
paddb
jo
add
rcrl
das
add
dec
lods
mov
xchg
jno
and
sub
mov
pop
or
add
mov
fstpt
pop
sub
pop
cmc
mov
jmp
iret
movb
pushf
loope
adc
cmp
leave
jge
addr16
pushl
stos
fucomi
inc
sub
into
mov
out
mov
cwtl
data16
rcrl
ljmp
ljmp
xlat
jno
fsubrl
dec
movsl
cmp
or
fdivl
call
xchg
cmp
or
mov
mov
jmp
adc
leave
add
pop
cld
call
or
pop
xchg
inc
rclb
into
addb
inc
sbb
adc
int3
icebp
ja
psrad
lahf
or
sub
xchg
pop
jnp
add
pushl
mov
jg
pop
ja
data16
aaa
stc
pop
xchg
cmp
int
ljmp
push
call
aam
mov
dec
mov
push
sbb
and
push
push
fistpl
loope
cltd
xchg
out
mov
jmp
or
ljmp
adc
mov
lock
scas
add
cli
xchg
cmpsb
cmp
mov
in
xchg
in
inc
dec
fdivr
pop
pop
pop
pop
dec
filds
mov
scas
xor
add
xor
xorb
xchg
and
cmp
jle
push
call
fdivs
leave
andb
pop
cmc
cmpsl
jg
or
sbb
mov
pushl
xor
scas
das
pop
stos
mov
fisubrl
sbb
nop
lret
jno
xchg
xlat
mov
decl
mov
jmp
add
pop
stos
mov
sar
lcall
push
enter
or
dec
nop
and
mov
xchg
jl
add
add
ljmp
rcll
lahf
enter
push
stos
push
inc
xchg
pop
imul
incl
loope
xor
cmp
pop
dec
imul
loope
add
loopne
std
inc
clc
incl
sub
xor
lret
loopne
fcoms
repz
cmp
mov
jg
idiv
ljmp
and
ret
outsb
jae
stos
xchg
data16
push
mov
dec
fs
clc
incl
fxtract
push
mov
je
jecxz
jge
repnz
cmpsl
mov
push
aad
incl
inc
js
jne
mov
dec
push
jge
test
pop
inc
lods
das
cld
pop
mov
adc
mov
pop
ss
add
pop
jo
hlt
mov
dec
cli
dec
call
mov
xor
pop
jbe
aad
xchg
insl
inc
jmp
ret
out
push
scas
mov
push
dec
loope
cld
fwait
movsb
xor
lcall
rcll
data16
arpl
sahf
adcl
or
adc
lock
mov
stos
fucom
sbb
hlt
out
stos
push
add
mov
decl
leave
mov
sub
inc
dec
inc
cmpsl
cmp
fidivrs
stos
into
call
lock
inc
pop
adc
les
dec
test
out
leave
inc
sub
cltd
inc
adc
lcall
mov
lcall
outsb
mov
aas
xchg
xor
arpl
pop
std
call
test
jb
xor
push
call
nop
das
outsl
push
lock
pusha
push
cmp
mov
inc
mov
mov
popf
ret
rorb
adc
imul
mov
pushf
das
mov
mov
push
faddp
cmp
lcall
cld
js
xorl
xor
popa
mov
xchg
push
dec
outsl
xor
inc
sbb
nop
subb
xchg
int
decl
sub
das
pop
jbe
cmp
es
decb
xor
call
mov
outsl
in
mov
sbb
and
cmp
mov
mov
push
cmpsb
ljmp
cmp
outsl
or
int
inc
mov
or
pop
or
xor
call
jmp
mov
rcrb
mov
mov
mov
mov
push
xlat
cmp
pop
xor
mov
pushl
or
mov
cmp
mov
push
mov
xor
push
hlt
lret
lcall
push
pop
or
ds
xchg
std
mov
pop
ret
push
or
jnp
popf
lret
scas
cltd
inc
xor
dec
in
sub
loopne
push
xlat
sub
jge
mov
dec
cmp
stos
mov
push
es
pop
loopne
lcall
shll
testb
notl
rcr
jno
call
testb
pop
push
xor
sbb
mov
int
shrl
rcll
gs
and
inc
sbb
mov
test
jmp
jbe
cs
in
pushf
lcall
push
add
jmp
or
and
cs
jmp
sbb
scas
shll
loop
xchg
test
lea
adc
loope
loop
adc
dec
mov
or
mov
dec
insb
push
dec
aad
loopne
clc
lret
std
mov
addl
or
jmp
pusha
test
jle
idiv
jp
add
push
lods
dec
inc
scas
sub
jbe
cmpsl
or
push
jg
ror
cwtl
xor
mov
cmp
pop
cmp
push
or
ss
push
stos
dec
test
incl
arpl
push
pop
popa
pop
in
mov
jbe
mov
sub
test
imulb
sar
outsl
xor
jae
bound
mov
xchg
dec
inc
js
jg
pop
loopne
rclb
cltd
in
jmp
xchg
dec
mov
mov
pop
pusha
inc
xchg
sbbl
decl
inc
mov
test
mov
add
push
pushf
ds
out
mov
jmp
pop
icebp
cmpsb
leave
fidivl
xor
push
notb
and
inc
stc
jo
scas
cli
jg
test
push
fs
orl
cs
fistps
leave
push
pop
push
pop
sar
call
das
dec
adc
pop
adc
jp
mov
iret
jmp
imul
jg
pop
xchg
pop
ljmp
icebp
das
es
pop
imul
jmp
xchg
inc
gs
ljmp
iret
push
adc
pop
ficoml
lds
dec
dec
stos
das
cmp
jae
xchg
cli
lcall
push
fcomi
aaa
push
popf
push
adc
shl
xor
sub
std
pusha
sub
loopne
fmull
xchg
mov
jg
adcb
into
ss
or
cwtl
bound
inc
sahf
xchg
negl
call
cltd
mov
ret
mov
jmp
dec
adc
push
pushf
sub
negl
and
incl
pop
cmovle
mov
sbb
imul
adc
in
and
jbe
stos
ret
inc
dec
xchg
sbb
pushf
aam
cmp
pop
xor
jb
call
in
fs
jle
cmp
test
arpl
mov
int3
outsl
jb
dec
inc
jmp
sbb
jnp
loop
cmp
ljmp
aas
lret
sub
mov
adc
sub
add
dec
xor
lcall
les
fwait
pop
lret
daa
mov
mov
fs
ror
mov
xchg
and
jmp
pop
xlat
cmpsb
movsb
mov
shll
inc
mov
insl
movsb
addr16
pop
insb
jae
ljmp
fsub
ret
push
cmp
insl
repnz
loope
inc
decl
add
stos
aas
shlb
leave
popa
push
sahf
or
and
pop
push
sub
in
mov
lcall
mov
and
loope
dec
jmp
add
inc
loopne
fucom
jecxz
ljmp
mov
sub
push
inc
adc
aad
and
xor
dec
push
or
test
mov
xchg
cld
mov
xchg
ljmp
cmp
cmp
mov
sub
addr16
mov
or
pusha
lahf
scas
jecxz
jmp
xchg
hlt
test
xor
pop
dec
cwtl
ss
mov
push
movsl
inc
loop,pn
pushl
mov
in
movsl
lahf
push
fdivl
ljmp
push
stos
ja
jo
or
sub
and
inc
mov
std
jecxz
jmp
out
sti
daa
jg
sub
nop
xor
cmp
mov
out
ja
push
fs
loope
stos
out
clc
mov
test
insb
movsl
cld
mov
ret
xor
ljmp
incl
or
mov
mov
jnp
xchg
jae
iret
jecxz
lds
lock
daa
aam
movsl
insl
pop
mov
jmp
imul
lahf
ss
add
lods
inc
ds
js
xor
mov
and
mov
rol
push
out
jmp
add
cld
jp
out
into
pop
pop
inc
push
mov
leave
in
mov
clc
decl
lds
rcr
push
xor
xor
mov
inc
cmpsb
mov
incl
test
stos
push
jmp
idivl
ds
xchg
in
stc
mov
mov
fisubl
xor
add
push
or
push
mov
in
jb
outsb
repnz
je
js
outsb
and
mov
sub
jmp
push
mov
or
call
and
fisubl
seto
push
and
xchg
sar
pop
push
out
shrb
int
dec
adc
stos
dec
and
sub
push
sub
repz
leave
aad
data16
sbb
xchg
or
xor
addl
shlb
and
mov
sahf
and
scas
insl
or
decl
adcl
dec
pop
adc
push
or
hlt
fbstp
cmp
xchg
push
inc
push
cmp
decl
adc
xor
jae
dec
inc
pop
bound
stos
negl
sub
nop
dec
mov
push
imul
shrb
pop
into
dec
stos
scas
je
xchg
pop
rorl
xchg
sub
jnp
je
dec
mov
stc
aam
xchg
mov
xlat
jne
int
or
push
insb
xor
mov
push
pop
jecxz
jmp
mov
and
fmuls
or
dec
rcr
sbb
inc
stos
mov
addl
stos
sub
insl
mov
jl
sbb
lods
jle
xorb
cld
mov
dec
mov
or
ds
fdivs
or
adc
lock
xor
and
jmp
dec
pop
movl
pop
push
mov
lcall
call
inc
outsl
dec
repnz
push
cmp
add
cmpsb
sub
ror
pop
sub
jge
ljmp
scas
dec
and
dec
push
cmc
ja
jmp
leave
adc
mov
mov
cmp
inc
std
dec
mov
aad
pusha
lods
xor
inc
mov
fbstp
adc
fisubrl
repnz
arpl
cwtl
dec
lahf
cmp
icebp
pop
outsl
subl
fldl
jp
decl
mov
pop
int
inc
aam
xor
fisttpll
dec
and
inc
hlt
pop
addl
out
and
clc
inc
add
pop
repnz
dec
sbb
stc
into
bound
lcall
lock
cltd
mov
dec
mov
loop
fdivrl
cs
popa
call
push
fldl2t
sbb
orb
dec
and
test
cmp
xor
sub
pushl
fwait
add
enter
fdivrl
adc
dec
inc
jnp
aad
call
repnz
cltd
arpl
es
fcoms
ja
mov
jb
lcall
lock
lock
push
rcrb
and
jg
xor
fs
xor
les
xchg
mov
add
jmp
mov
fcomps
add
mov
sub
inc
mov
xorb
decl
out
outsb
add
inc
aaa
or
mov
lret
int3
aas
jo
pop
bound
decl
fcmovb
fucomip
mov
adc
xor
frstor
dec
js
jge
out
jmp
jg
lcall
add
sub
movsb
mov
or
ljmp
add
shll
sub
fcompl
jg
inc
cmpl
push
or
push
aas
pop
or
jg
xorb
dec
dec
pop
imul
mov
xorb
out
push
call
jns
sub
imul
inc
mov
aad
inc
dec
les
out
pop
adc
pop
mov
popf
in
xchg
pushl
jo
adcb
add
js
fnstcw
call
fwait
inc
fisubrs
mov
push
sti
test
mov
mov
lods
iret
mov
fdivp
fnstcw
fnsave
lods
mov
mov
std
fwait
jae
stc
pop
cmpsb
rcll
std
add
pop
jae
or
jmp
fldenv
add
paddusw
mov
scas
cmp
loop
inc
cmc
aam
lcall
pop
leave
jo
push
test
or
pushl
test
mov
loopne
jmp
lods
sub
lcall
push
add
add
fsubrl
cmp
in
xchg
push
pop
jno
push
int3
xchg
fists
mov
ss
inc
jge
xchg
or
pop
aam
jno
movsl
mov
push
popa
push
push
xor
jmp
xor
or
jecxz
xchg
push
lods
ds
test
data16
stos
ret
decl
sub
ljmp
es
int
push
enter
arpl
icebp
call
and
ds
aas
aaa
lods
jmp
fnsave
add
cmpsb
mov
cmp
jmp
add
incl
push
adcl
loop
pop
outsl
mov
or
js
sub
cli
inc
lock
xchg
cmp
pop
fldcw
mov
cmp
jmp
cld
cmp
popf
roll
cmpsl
lock
dec
stos
rolb
cmpb
subl
mov
jnp
imulb
xor
push
inc
addb
mov
repnz
dec
xor
sub
pushl
sbb
jnp
lea
xor
jb
push
icebp
jmp
xchg
lret
mov
sub
jo
into
shlb
mov
dec
or
jmp
lds
dec
mov
mov
sub
jb
aad
incl
fdivrs
pop
in
and
inc
call
fdivrs
ds
jmp
les
addr16
mov
inc
stos
xlat
fcomi
insl
push
aaa
test
fdivs
add
pushl
insl
cmpsl
adc
fists
jb
sub
jae
ljmp
and
pushl
movl
dec
loope
cmpsl
mov
mov
lcall
mov
adc
and
mov
jg
js
clc
pop
mov
push
or
xchg
push
outsl
test
gs
pushl
sub
cmp
push
imul
adc
loop
ret
les
adc
jg
in
bnd
movsb
rolb
or
sbb
iret
xchg
clc
ljmp
ror
jmp
cmpsl
push
js
add
inc
xchg
sub
pop
sbb
lret
inc
hlt
fs
es
pushl
adc
mov
cmpsb
add
xlat
mov
fidivrl
and
call
fdiv
or
push
jnp
ret
mov
pop
cwtl
sahf
movsl
inc
sbb
aad
hlt
cmp
pop
pop
xor
mov
ljmp
mov
cs
jge
repnz
test
jecxz
repz
inc
jle
xchg
mov
sbb
lret
sti
inc
pop
push
insb
addr16
scas
or
cs
pop
ljmp
or
mov
pushf
xor
rcrl
je
push
or
ret
mov
jmp
int
xor
sbb
imul
fwait
mov
pop
mov
iret
loope
popf
icebp
mov
inc
inc
inc
fcomip
add
icebp
cwtl
or
test
and
pop
adc
mov
test
xor
fs
enter
fbld
mov
dec
push
lds
inc
add
decl
lock
push
ret
push
cmp
fmul
lods
push
outsl
rol
add
push
pushl
lods
pop
xchg
lret
and
and
mov
decl
aam
push
pop
add
cmovnp
mov
scas
fucomi
mov
shll
ljmp
ret
jmp
scas
fnstenv
in
clc
loop
inc
andl
jmp
pop
or
jg
lcall
mov
push
xchg
mov
and
jg
inc
mov
pop
imul
mov
scas
push
inc
sbb
enter
cwtl
xor
lods
rcrl
sbb
jmp
adc
jns
inc
arpl
jae
cmp
call
fs
incl
or
xchg
mov
arpl
out
dec
nop
andb
into
dec
std
aas
std
pop
incl
jl
dec
xchg
xchg
push
add
and
jle
jbe
mov
jg
mov
clc
push
cmp
in
and
xchg
leave
xchg
in
popa
gs
std
in
incl
mov
jae
adc
adc
test
out
pop
scas
sub
addl
mov
pushf
lds
rcrb
add
mov
push
fisubrl
pop
lea
rcll
dec
lcall
test
inc
imul
mov
adc
aas
adcl
decl
adc
popf
orl
sub
sti
xlat
lods
es
mov
sub
incl
mov
or
movsl
inc
jnp
mov
rcll
or
lods
shr
test
daa
cmp
cli
das
clc
call
or
std
push
jns
mov
enter
push
lahf
loopne
jne
outsb
dec
cmp
pop
xchg
jmp
cld
sbb
aaa
ds
and
sbb
mov
dec
rcll
mov
mov
std
add
lds
fisubrs
dec
repz
and
xchg
ror
jle
mov
sub
pop
std
jge
cltd
push
dec
inc
add
enter
imul
xchg
xor
xlat
adc
call
push
xchg
jecxz
lea
add
out
or
ror
sub
or
adc
xchg
and
jmp
mov
lret
push
and
daa
loop
ss
sti
or
push
push
or
pop
pusha
cmpsb
xchg
lret
movsb
inc
inc
loopne
sbb
inc
sub
cmc
pushl
inc
inc
loope
mov
lea
mov
push
jnp
ljmp
push
movsl
int
into
push
add
aas
sub
sub
push
dec
fdivr
incl
mov
push
xchg
das
and
pop
adc
rcll
scas
dec
bound
ljmp
pop
dec
lcall
and
daa
cwtl
ret
dec
mov
addb
jmp
or
xor
popf
xlat
sub
push
sbb
pop
shlb
pushf
xchg
jmp
in
mov
call
fisttpll
dec
adc
or
mov
mov
test
pop
mov
jno
mov
scas
scas
daa
mov
mov
or
lahf
fs
xor
roll
movsb
mov
movsb
daa
push
mov
int
push
inc
outsb
test
incl
sub
ret
call
mov
cltd
push
cmpsb
push
clc
push
adc
or
inc
mov
push
mov
fcmovnbe
daa
cmp
lret
mov
ljmp
in
call
sub
or
xor
or
lret
jmp
sub
out
daa
subl
mov
test
xchg
mov
test
out
cltd
fadd
roll
sbb
cld
mov
popf
mov
pushl
sbb
or
or
jno
mov
subl
das
inc
add
or
cld
pop
stos
xchg
insb
adc
cmp
cmp
xchg
scas
aam
mov
rcrb
add
push
rcrl
jbe
pop
push
dec
sub
or
psubusb
fisubl
jg
sbb
cmpsl
jl
mov
sub
int
jmp
sti
and
mov
add
inc
lret
push
lret
inc
test
cli
clc
jbe
test
jp
test
jne
outsl
ja
insb
cmp
pop
movsl
sbb
inc
fsubrl
mov
setge
not
add
dec
repz
fsubp
or
pushf
jno
outsl
test
stos
dec
lahf
jbe
mov
jg
or
pushl
outsl
int3
sbbb
rclb
inc
xor
cltd
lock
pop
es
sbb
dec
sbb
sar
cld
or
lock
jnp
mov
outsb
arpl
mov
arpl
mov
adc
insb
call
enter
out
aaa
sbb
in
test
and
pop
pop
test
js
mov
mov
lret
jg
cmc
ljmp
outsb
pop
imulb
fwait
sbb
sub
push
mov
adc
cmp
dec
iret
lcall
fidivl
ja
bswap
pop
aam
push
test
dec
je
pop
xchg
jbe
and
xor
in
ljmp
lea
popa
and
into
adc
jbe
aad
sub
repnz
dec
mov
ljmp
les
cmp
mov
test
inc
and
ret
push
push
push
dec
jle
ret
loope
dec
sarb
and
adc
mov
rcl
test
pop
push
sub
xchg
or
sahf
ljmp
dec
and
ja
sbb
cltd
test
dec
push
outsb
sbb
test
ljmp
xor
push
adc
mov
repnz
push
ret
popf
dec
popl
push
sub
inc
inc
jp
xor
push
push
in
cmp
fldcw
or
hlt
jmp
push
ret
inc
jo
sti
mov
imul
or
pop
sbb
dec
adc
jae
pop
scas
out
push
out
push
lret
movsb
int
mov
dec
adc
inc
movsl
lock
mov
xor
ret
mov
jmp
lahf
repz
call
xchg
and
rep
and
mov
sub
jmp
pop
fildll
or
sti
aas
sbb
sub
mov
in
jns
mov
mov
dec
or
pop
divb
sbb
decl
int3
imul
pop
or
rclb
insb
in
pop
and
out
xor
pop
mov
xchg
jo
xchg
call
jne
ret
cwtl
loop
xchg
pop
mov
sub
mov
add
cld
lcall
mov
push
leave
imul
jmpw
test
mov
jmp
subl
mov
push
mov
test
cmc
xchg
mov
cmpsl
aaa
test
decl
jb
scas
es
rorb
push
popf
aam
shlb
cld
aam
or
gs
aaa
loopne
lock
pushf
bound
clc
mov
mov
push
mov
mov
mov
pop
dec
pop
call
adc
jl
sbb
in
out
pop
jg
dec
jnp
push
ja
adcb
mov
pushf
adc
std
or
sub
push
rep
jg
push
sbb
ljmp
mov
icebp
loopne
sarb
mov
call
bound
or
sbb
mov
push
fisttpll
sub
sbb
add
test
notb
push
lds
add
rcl
lods
push
insl
inc
pop
jge
mov
int3
test
mov
xor
ja
jns
adc
setnp
nop
fsubs
or
push
lcall
incl
sub
popf
ret
js
sbb
dec
loope
leave
jnp
inc
lock
loopne
jl
push
add
dec
inc
mov
pop
shr
mov
ffreep
mov
dec
rcrb
ljmp
les
sbb
hlt
push
sbb
mov
jg
incl
push
cwtl
jno
mov
scas
xor
adc
mov
inc
push
call
call
mov
mov
jo
dec
sbb
or
iret
cmp
cmc
xor
jmp
lahf
rcl
mov
add
xchg
orb
cmp
cld
lcall
xchg
mov
in
xor
push
adc
and
jo
pop
and
mov
int
lods
and
pushl
and
lahf
xchg
loop
mov
loope
xor
cmp
pop
or
or
jl
sarl
push
cld
pushl
aad
insb
mov
push
loopne
add
call
mov
push
f2xm1
and
pop
or
nop
fcmovnbe
sti
inc
test
movsl
sti
lcall
jge,pn
ljmp
and
pop
mov
fwait
sbb
pop
xor
decl
push
fucomi
cmp
stos
repnz
xor
in
adc
xchg
cwtl
xorl
out
clc
jmp
in
add
add
push
mov
dec
mov
or
les
sub
pop
decl
fsubl
pusha
inc
sbb
dec
rolb
outsb
dec
inc
sbb
arpl
dec
fmul
or
push
xchg
dec
mov
fdivl
popf
jne
fmull
out
and
cmp
push
fcompl
decl
cmp
cltd
mov
shlb
jle
inc
cmpsl
mov
ud0
or
mov
inc
inc
je
mov
cli
push
outsl
sub
popa
out
sbb
mov
cmc
sbbb
jle
hlt
addb
incl
repnz
jge
dec
and
mov
inc
icebp
cmpsb
shr
push
jg
shl
jle
push
aas
sub
add
ror
adc
inc
cltd
jge
mov
incl
jb
cmpsb
in
addr16
mov
lods
adc
mov
fwait
ret
fmull
push
adc
xchg
xchg
outsl
imulb
inc
mov
lods
xchg
int3
in
aas
test
mov
inc
mov
mov
pop
mov
dec
std
cld
arpl
into
icebp
pop
dec
fadds
or
jmp
mov
cmc
loope
aas
enter
and
inc
jecxz
mov
push
inc
fdivs
mov
ds
ror
ret
pushf
pop
add
test
out
adc
jg
icebp
lds
mov
cmp
ljmp
outsl
mov
cmp
and
xor
jno
scas
pop
push
cld
mov
push
mov
ss
mov
lahf
loopne,pn
cmp
sar
lret
cli
pop
aas
pop
sahf
xor
sbbl
dec
ljmp
adc
mov
loop
jb
dec
fisubrs
sbb
lds
daa
pop
mov
insl
arpl
in
shll
pusha
inc
ljmp
push
adc
jg
add
push
push
pop
dec
and
ljmp
add
and
popa
arpl
lret
arpl
in
es
sti
mov
jb
pushl
cld
dec
dec
jmp
xchg
cmpsb
mov
push
dec
inc
and
insl
stc
insb
ljmp
adc
sbb
xchg
and
cld
loopne
cmpw
rorl
mov
test
std
push
push
mov
jnp
push
fisubs
and
mov
icebp
mov
call
aaa
lods
dec
outsl
subb
mov
adc
jmp
add
cmp
xor
int
xchg
push
jnp
or
pop
sbb
cmpsl
stos
rorb
test
lea
incl
or
push
ja
pop
imul
add
mov
ret
clc
push
dec
jg
or
push
je
adc
pop
push
and
and
arpl
jecxz
call
mov
cmp
jecxz
xchg
int3
arpl
ret
or
sahf
addb
decl
popa
inc
pop
aas
and
mov
call
mov
gs
add
ficomps
call
cmp
std
dec
scas
loope
data16
std
adc
imulb
pop
dec
inc
mov
mov
in
rclb
cmp
jae
sarb
fwait
scas
int
and
dec
inc
ret
popa
sbb
xchg
add
ljmp
cli
mov
call
cmp
outsl
clc
scas
dec
dec
pop
xchg
shl
push
lods
jmp
xchg
push
fistps
repnz
or
decl
pop
movsb
repz
sub
in
test
xor
sub
sbb
fdivrl
mov
scas
clc
call
movsb
lcall
xchg
mov
mov
xchg
aam
push
repnz
gs
sti
icebp
xor
test
fwait
jno
popa
lcall
mov
test
xor
roll
mov
dec
std
cmp
jbe
xchg
sub
jno
dec
mov
bound
subb
push
std
mov
in
inc
adc
shll
inc
shlb
dec
or
xor
pushl
std
mov
or
outsl
outsb
out
hlt
or
gs
fsubr
and
lahf
cmp
popf
dec
xchg
push
lcall
push
cmc
sub
push
mov
insb
outsl
mov
dec
fs
aaa
decl
iret
mov
and
pop
xor
and
jns
imul
sub
out
mov
pushl
pop
and
mov
stos
cmp
sub
jmp
int3
orb
sbb
jp
fcomip
xchg
xchg
lods
mov
into
jp
mov
inc
scas
popa
gs
lahf
add
pushl
call
sbb
push
fidivl
dec
rolb
packssdw
adc
adc
call
lea
dec
mov
xlat
loop
mov
test
int3
sbb
xorl
clc
in
enter
in
xchg
and
jno,pn
pop
inc
push
dec
or
test
ljmp
or
insl
pop
or
ror
imul
pushf
dec
outsb
pop
sarl
or
pop
mov
sub
shll
jbe
sbb
aam
rcr
xchg
sbb
jmp
ljmp
jb
cmp
ljmp
js
hlt
jle
and
pop
add
jp
xor
push
outsl
fisubrs
fsubrs
mov
and
lcall
iret
mov
mov
sbb
jbe
ss
inc
test
xor
xor
cmc
push
shll
aaa
test
popf
pop
ds
push
pop
add
or
pushl
mov
aaa
add
arpl
shll
lods
and
mov
mov
cmpsl
sub
divb
xor
icebp
cmp
jle
mov
out
add
push
jl
push
repnz
lcall
test
ljmp
jg
out
pop
mov
stc
and
insb
jb
cli
lcall
cltd
fcmovnu
repnz
stc
enter
adc
jmp
mov
mov
out
xor
or
ret
out
lret
dec
inc
push
xchg
sbb
test
sbb
icebp
jg
push
mov
outsl
sarl
lcall
inc
or
fildll
mov
inc
or
xchg
pop
mov
clc
les
push
mov
lcall
lcall
shr
ret
jns
jp
xor
mov
cli
dec
aaa
sti
cmpsl
mov
jmp
pop
lds
arpl
into
push
aas
pmaxsw
std
sbb
sarb
xor
jmp
push
push
lods
shrl
hlt
jbe
nop
fs
mov
repz
lcall
mov
sti
mov
test
idivl
jmp
dec
inc
cmc
lcall
and
jg
xchg
jp
mov
mov
test
mov
lcall
lcall
loope
mov
lret
mov
xorb
push
add
call
push
mov
fistps
inc
sbb
mov
push
pop
jno
pusha
dec
cwtl
loop
xchg
jmp
nop
mov
orb
lcall
add
test
mov
mov
loopne
incl
sbb
cmp
push
mov
dec
lds
mov
push
mov
aaa
adc
sub
sbb
loope
popf
lcall
repz
xchg
jle
call
cmp
cmc
mov
inc
call
hlt
or
sub
sub
jmp
push
xchg
xchg
ja
data16
mov
popa
fiaddl
scas
xor
jne
adc
scas
xchg
mov
mov
cli
int
push
lods
frstor
hlt
stos
cmp
test
sub
decl
or
mov
fsin
pop
sbbb
xchg
divl
jbe
sbb
inc
test
cli
mov
ja,pt
imul
or
sbbb
inc
lds
out
in
mov
push
mov
xchg
cmp
xor
movsl
out
lret
repz
jo
in
push
test
xchg
add
test
mov
fmull
mov
nop
lods
out
incl
inc
daa
pop
mov
jo
cmp
into
dec
fsubl
sbb
pop
sbb
jmp
jne
pop
cmp
mov
jne
imul
jmp
jo
stos
lods
xchg
push
popf
inc
push
mov
sub
out
fstpl
aam
mov
xchg
leave
pop
and
pushl
jmp
cld
sub
andb
cli
addr16
loope
mov
jmp
xor
pop
sarb
jg
mov
mov
enter
insb
enter
sbb
xchg
sbb
in
xor
mov
mov
dec
mov
push
xchg
sbb
or
arpl
dec
scas
outsl
jb
jl
ljmp
sub
mov
ds
sti
xor
nop
leave
and
jne
xchg
addr16
maxps
sti
je
add
adc
rcll
pushl
je
mov
test
push
ret
sbb
sbb
jg
mov
out
fimull
jp
jo
pushl
mov
dec
ljmp
inc
push
clc
cmc
outsb
rcr
xchg
popf
pop
pop
call
decl
int
or
pop
cwtl
xchg
mov
and
imul
adc
int3
dec
pop
imul
xchg
subb
push
stos
mov
dec
pop
and
xchg
repnz
out
movl
mov
xor
decl
jns
inc
lahf
ja
dec
xor
dec
mov
mov
jp
testb
incl
push
jnp
dec
lcall
add
lret
jecxz
mov
mov
seto
sub
push
in
add
daa
inc
sti
add
sub
cmpb
shl
inc
push
cld
int
push
xor
jg
jmp
jge
push
cwtl
enter
or
jmp
stc
popf
int3
push
call
call
movsb
imul
cmc
adc
jbe
xor
fwait
adc
incl
and
lods
pop
xor
leave
push
stos
mov
mulps
repnz
lock
mov
test
mov
and
jno
stc
mov
je
lahf
cmp
cli
ljmp
outsb
sar
jmp
dec
es
inc
jnp
and
ljmp
fisubrl
lods
or
lods
lret
mov
inc
sub
mov
lcall
bound
mov
fbstp
insl
popa
jp
bound
cmc
push
sub
dec
mov
add
loop
cmp
sbb
jge
sub
test
dec
cmp
int
cmp
sub
xchg
dec
xchg
xchg
cmpsl
cmp
aaa
mov
int3
imul
mov
mov
jg
add
mov
js
mov
inc
jecxz
add
es
int
jg
sarl
pushf
fcoms
imul
divl
push
push
pop
fimull
cmp
rcr
mov
cli
lcall
es
jge
inc
std
mov
cld
inc
inc
jmp
adc
cs
cs
add
lcall
adc
cld
dec
fwait
call
ret
cmc
scas
popf
repz
stos
or
sub
pop
cltd
push
mov
pop
mov
test
jmp
insl
add
mov
mov
mov
dec
dec
xchg
repz
popa
sbb
and
or
jbe
rorb
pop
call
les
push
push
mov
je
lcall
pushf
sbb
pop
lock
mull
and
es
outsl
scas
cmp
cld
jl
sub
or
ljmp
pusha
or
cli
pop
mov
dec
xor
lahf
and
lret
sbb
and
test
cmp
daa
pusha
mov
test
sbb
jg
mov
in
cld
lea
int3
or
cmpsb
into
push
mov
sahf
sbb
jmp
push
into
sub
jle
pop
and
mov
jne
movsb
sahf
cmp
lcall
cmp
and
jg
dec
dec
xchg
xor
pop
jo
js
adc
out
incl
push
loopne
clc
into
mov
jnp
setne
sub
int3
ljmp
loope
aas
cmp
sbb
int3
sbb
xor
clc
mov
lcall
mov
scas
out
nop
cmp
mov
adc
mov
jg
gs
jmp
jae
pushf
stos
xchg
divb
out
xor
jno
bound
inc
fwait
in
movaps
jne
mov
shl
pop
cmp
push
xor
mov
inc
ja
bound
icebp
hlt
and
mov
sbb
scas
scas
mov
and
add
pushl
xchg
imul
push
cmpsl
jnp
stos
push
insl
mov
ds
dec
lcall
push
movsl
ljmp
xor
adc
mov
sub
and
cmp
aad
inc
jmp
xchg
mov
push
es
shrd
and
cwtl
outsb
dec
aaa
mov
sub
ret
subb
mov
inc
cmovns
dec
jmp
cli
retw
clc
inc
mov
stos
testl
popf
inc
sar
push
mov
call
outsb
pop
jmp
jmp
lret
xor
sbb
lock
fwait
add
decl
rclb
jb
push
jb
push
cs
fdivrl
xchg
ljmp
in
mov
mov
cwtl
repnz
adc
rorb
pushl
loopne
inc
int
jae
adc
in
inc
repnz
das
arpl
push
cs
ljmp
cmp
cmp
adc
jle
mov
xor
pop
subb
adc
insb
std
push
jp
jmp
fisttpll
jmp
ret
shr
jmp
test
pop
xchg
rol
icebp
xchg
push
fs
inc
inc
inc
cmp
lods
add
jp
mov
mov
movsb
push
stc
popa
fsts
decl
jecxz
or
mov
nop
sbb
std
inc
cltd
jb
adc
pop
int
sbb
scas
clc
mov
xor
mov
fnstcw
out
dec
mov
dec
fcmove
push
stc
out
dec
jg
incl
pop
jl
adc
pop
outsb
push
lods
aad
pop
xor
test
mov
decl
adc
setns
and
push
fstps
sub
or
jo
pop
pushl
sti
imul
jmp
and
sahf
icebp
dec
outsb
mov
stos
inc
dec
cmp
pushl
mov
nop
xchg
inc
mov
cmpsl
sahf
bound
dec
xchg
fistps
insl
fcmovb
cmp
incl
test
push
add
mov
outsl
call
and
and
jmp
dec
repnz
jg
xor
stos
outsb
cltd
loopne
add
dec
jae
ret
movl
jmp
lret
mov
shrl
pop
lcall
mov
inc
and
cltd
or
ror
mov
add
repnz
xchg
and
test
pop
icebp
lcall
cwtl
push
mov
add
mov
lods
and
inc
cs
jbe
jle
mov
lret
mulb
inc
push
jl
ljmp
inc
add
jl
or
jle
dec
movsl
movb
scas
mov
mov
pop
in
mov
dec
or
call
push
fsubs
pop
add
jmp
cmpl
lahf
loopne
sub
lcall
mov
js
cmc
mov
sub
adc
lahf
mov
popa
std
jg
int3
mov
sti
adc
xchg
inc
or
jg
mov
cmp
iret
pushl
sti
cmp
push
jg
addr16
enter
push
in
adc
mulb
mov
leavew
nop
xchg
pushl
sbb
sub
outsb
nop
inc
stc
inc
outsl
sub
dec
loope
loop
push
test
mov
call
stc
xor
jbe
push
insl
fists
movsl
in
fnstcw
int
fwait
inc
push
dec
insl
mov
cmp
and
push
imul
adc
inc
or
ret
push
in
mov
pushl
je
xchg
test
popf
sub
cmp
xchg
cmpsb
mov
outsl
add
pop
decl
or
rolb
push
xchg
inc
cmp
notl
xchg
loopne
xor
xchg
xor
in
sbb
pop
adc
decl
push
ret
xlat
jae
jecxz
fwait
add
mov
adc
mov
ljmp
mov
or
shrb
out
das
sub
adc
xor
call
mov
sti
pop
scas
pop
mov
mov
ljmp
sbb
dec
jle
lcall
bound
inc
mov
test
xchg
subps
mov
mov
push
pop
xchg
pop
out
push
insb
rolb
mov
hlt
fwait
jge
ret
divl
sub
dec
mov
or
das
clc
loop
jge
push
hlt
in
aam
push
xor
cli
in
out
sbb
jbe
es
fistl
loopne
out
push
sahf
add
in
jbe
sub
pop
movsl
push
hlt
jnp
pop
in
mov
xlat
mov
aaa
jno
fbld
push
call
push
outsl
out
daa
jae
and
lcall
or
out
test
adc
or
stos
inc
mov
imul
repz
jecxz
outsb
lahf
shlb
push
sarb
push
lahf
jae
aam
dec
imul
sub
xchg
ss
incl
mov
loopne
or
mull
xacquire
inc
out
push
setnp
repz
lds
cmp
loopne
and
dec
rcll
jne
push
ljmp
in
push
sbb
dec
scas
and
lods
push
sub
mov
mov
adc
incl
pop
adc
mov
sbb
movsl
push
jmp
ljmp
dec
out
or
adc
dec
lock
xchg
add
cmpsl
shrb
cmp
inc
incl
mov
movsb
sub
and
mov
adc
decl
xchg
sbb
xchg
adc
call
mov
inc
mov
xchg
push
shll
and
push
loopne
out
jp
pop
pop
lock
repz
fimull
cmp
test
jge
mov
stos
jnp
ljmp
mov
icebp
adc
ret
lret
mov
xchg
jge
movsb
decl
lock
hlt
sbb
repnz
jns
mov
jo
test
push
icebp
or
jbe
mov
jb
inc
push
xor
mov
push
incl
popf
scas
pop
fdiv
into
and
testl
cmp
test
xchg
pushl
cltd
mov
enter
xchg
sbb
imul
xor
outsb
xchg
xchg
call
jl
lock
pop
mov
loop
adc
stos
inc
push
nop
jns
mov
call
je
test
pop
cmpsb
push
aaa
mov
aam
mov
das
stos
fldl
jno,pn
and
cli
jnp
fstpl
leave
clc
dec
and
ds
nop
mov
out
sbb
ljmp
filds
inc
dec
mov
or
ljmp
lds
aas
jge
jg
test
lds
inc
push
jns
ja
dec
insl
xchg
decl
push
push
test
ja
adc
add
push
and
sbb
call
or
mov
sbb
retw
mov
fcos
call
jle
sbb
dec
hlt
arpl
sbb
movsl
dec
adc
call
ss
outsb
pop
lcall
push
movsb
mov
xor
dec
mov
std
xchg
test
lcall
fisubrs
or
mov
jge
push
ds
adc
stos
ljmp
decl
jmp
ljmp
mov
insb
adc
lods
mov
iret
pusha
incl
pushw
in
lds
pop
fnstcw
data16
or
adc
xor
adcl
ljmp
jmp
mov
scas
push
fwait
adc
shl
fistl
lods
std
add
aam
stos
ljmp
bound
shll
mov
fnstcw
pop
and
xor
sbb
and
dec
lock
mov
sbb
push
jg
ljmp
xchg
out
cmc
lcall
nop
enter
jg
mov
fdivr
push
add
adc
push
add
iret
mov
pusha
lods
cli
call
aam
adc
cmc
cmp
call
es
sbb
dec
int
mov
in
pushf
js
repz
aaa
lret
jns
mov
jmp
mov
mov
sub
fnstcw
call
clc
incl
mov
in
pop
xchg
cmp
mov
jg
incb
hlt
bound
xor
imul
pop
je
mov
loopne
in
jg
jmp
push
setno
push
xor
push
jns
pop
enter
cli
decl
cmpsb
loopne
mov
or
add
in
mov
aaa
add
rcrb
cmc
decl
shll
addr16
sbb
add
lods
movsl
inc
aas
push
lcall
pop
jmp
mov
cli
dec
aad
jmp
inc
inc
mov
and
mov
stos
jge
add
out
icebp
test
add
pop
and
ret
pop
pop
sbb
incl
popa
push
lds
xchg
jg
xchg
cmp
jae
or
movsl
inc
lret
imulb
es
out
jmp
mov
mov
lahf
dec
add
jp
or
adc
sbb
gs
loopne
pushl
inc
xlat
ret
icebp
out
dec
push
sub
xchg
cmp
lods
sbb
cwtl
pop
aad
call
cwtl
push
loop
movsl
loopne
pop
mov
dec
jnp
das
xchg
cs
add
daa
push
ds
jmp
mov
mov
data16
jge
movsb
lds
movsb
popf
dec
cwtl
jbe
dec
jmp
ja,pn
mov
incl
inc
adc
xor
mov
call
mov
rcll
test
adcl
dec
mov
test
push
push
data16
call
mov
and
push
pop
loopne
add
shll
pop
sub
cmp
es
insl
dec
lcall
pop
bound
xor
sbb
cmpsb
push
pushf
fcomi
mov
call
mov
and
sbb
mov
jb
imul
lods
call
movsb
cwtl
inc
jge
loope
jmp
mov
cmpsl
insb
insb
dec
inc
dec
inc
cmp
lret
pop
xchg
call
cmp
add
lret
rorb
jbe
icebp
stc
sbb
sahf
push
dec
adc
mov
fucomip
aaa
jo
mov
push
pop
sub
bound
sbbb
cmp
push
rorb
decl
xchg
mov
out
test
insb
sbb
lret
sbb
decl
cltd
lret
mov
test
dec
or
rolb
pop
sbb
aaa
loopne
mov
jae
mov
jecxz
clc
jmp
test
and
data16
jl
add
pushl
sub
pop
es
fnstenv
fildll
jbe
pushl
sbb
jle
scas
mov
or
rolb
pop
push
cmp
arpl
push
fcomip
cmp
in
jae
mov
sub
cmp
inc
cmp
popf
jmp
dec
dec
sbb
cmp
lea
pop
xchg
cmp
call
loop
jmp
sub
or
dec
std
cmp
push
movb
ljmp
jno
lds
mov
adc
inc
fistpll
cli
pop
add
jg
push
push
mov
push
inc
jbe
fcmovne
aad
into
mov
loop
or
clc
pushl
xchg
sarb
imull
jnp
andl
mov
das
out
incl
pop
fdivrs
or
shlb
test
mov
push
out
mov
aaa
xchg
and
push
cmpsl
leave
add
jno
lods
lret
xor
mov
incl
movsb
in
dec
push
sbb
testl
adc
fcmovnbe
mov
leave
jne
andl
sahf
pushf
ss
mov
repz
sub
nop
jecxz
mull
aam
lcall
incb
add
mov
pop
add
xchg
test
mov
mov
mov
sahf
lods
and
sub
int3
ljmp
pop
inc
mov
incl
jmp
mov
js
sbb
insl
xor
call
pushf
jns
out
fildll
in
sub
jecxz
ret
add
leave
rcll
mov
mov
add
int
lcall
pop
pop
imulb
mov
out
call
loopne
test
and
cli
mov
repnz
cmpl
loope
dec
int3
in
ja
fidivrl
mov
gs
loopne
push
je
scas
bnd
adc
incl
loope
jns
cmp
pop
outsb
out
out
pop
jbe
hlt
add
xor
lea
loopne
sar
mov
jae
mov
mov
jbe
lret
pusha
cmc
decl
andb
mov
inc
or
int3
in
sub
outsb
or
incl
out
imul
xlat
in
add
jmp
xor
aaa
dec
mov
lret
idivb
ljmp
jbe
or
pop
subb
mov
cmc
xchg
ljmp
push
int
or
rcrl
fsubl
hlt
xchg
xor
or
pop
xor
lcall
mov
cmpb
repnz
in
and
ss
sti
lret
incl
inc
mov
aas
fwait
cmp
pop
and
sbb
and
fmull
mov
sti
pushf
and
ljmp
cmc
je
jmp
js
sbb
movsb
or
sahf
sbb
mov
mov
push
sub
push
push
add
mov
mov
push
out
ret
add
incl
inc
xor
fnstsw
mov
pop
dec
push
cld
imul
xchg
lock
outsl
mov
mov
cltd
pop
sbb
sbb
lahf
pop
pop
dec
sbb
ror
fistps
mov
mull
cmp
fstp
out
jg
lret
push
js
popa
icebp
fs
leave
or
sbbb
dec
mov
fbld
push
movsl
idivb
sub
outsl
cli
ljmp
mov
je
cwtl
xchg
push
jp
nop
or
xchg
call
in
push
xchg
pop
cltd
ret
mov
xor
popa
push
repz
jp
sub
and
dec
mov
ds
jmp
or
iret
mov
movsl
inc
fwait
stos
imul
std
jg
xor
shlb
xchg
mov
repnz
mov
sbb
lock
ljmp
sahf
jmp
loope
icebp
hlt
push
mov
lods
movsb
push
and
shlb
mov
mov
in
shrb
push
std
pushl
or
or
add
rorb
pop
lret
aam
and
jg
pop
mov
pop
xchg
cmp
adc
or
pop
out
call
mov
pop
push
aam
pop
mov
xchg
daa
lods
repnz
sbb
imul
call
add
cmp
add
ljmp
std
sbb
int
xchg
dec
mov
arpl
test
out
iret
and
data16
fwait
and
mov
das
cmp
scas
ljmp
sub
imull
data16
movsl
lret
jae
push
sub
leave
mov
or
clc
xchg
pop
int
hlt
mov
es
jae
and
push
or
stc
mov
or
mov
loopne
jnp
loope
cmp
lret
push
inc
sbb
popa
xor
mov
dec
sbb
pushl
test
in
enter
dec
shr
imul
into
js
out
add
jmp
mov
xchg
cwtl
sbb
or
repnz
mov
cwtl
das
jb
sbb
in
imul
pop
lods
xchg
fiadds
and
inc
jmp
inc
sahf
cld
fdivrs
push
lds
fs
aaa
inc
lods
xor
and
cmp
jmp
out
int3
adc
call
lods
mov
mov
and
outsb
lret
adc
mov
push
movnti
decl
inc
jl
mov
stos
es
mov
dec
cld
jle
xchg
lret
pop
sbb
in
lcall
mov
xchg
jae
xor
pop
fucomip
inc
cmp
pop
mov
loopne
mov
in
sub
sbb
scas
into
jae
cmp
data16
mov
insb
sahf
jecxz
loopne
outsb
cmpsb
fistl
jmp
pop
sub
jmp
xchg
jmp
stos
push
int3
gs
sub
xor
sub
push
mov
je
in
fimuls
jp
pop
test
pop
out
add
pop
push
jecxz
push
or
mov
decl
int3
jo
pop
out
and
xchg
add
sbb
fdivrl
mov
mov
add
mov
fisubrs
jo
cmp
fdivs
jg
jg
adc
jg
ljmp
xchg
sbb
fnsave
jl
mov
repz
and
pushl
sub
add
mov
lock
lret
or
popa
jmp
push
repnz
cs
cli
jmp
dec
fnstsw
loope
push
mov
lcall
out
rcrl
inc
mov
and
fs
in
mov
inc
or
push
loopne
into
js
cmp
test
inc
cli
dec
push
fsqrt
aaa
rorl
mov
and
stos
lods
sub
mov
sub
rclb
std
pop
out
pop
cmpl
jge
cli
mov
mov
xchg
fmulp
dec
mov
fsubs
push
ljmp
xchg
dec
or
mov
push
pop
jp
jne
mov
lret
jge
inc
or
test
cld
lcall
cmp
rcrl
rcrb
mov
and
ds
sbb
scas
lea
dec
dec
pop
je
outsb
inc
out
or
xchg
in
mov
test
jge
call
lret
shlb
int
pop
or
pop
xlat
test
cmp
xor
mov
ljmp
dec
mov
or
das
notb
loopne
clc
mov
lea
xchg
inc
sbb
push
clc
sub
dec
and
mul
mov
xor
fmull
je
iret
sbb
aad
sbb
scas
decl
scas
xor
dec
xchg
cltd
je
push
cmp
popf
fisubrs
incl
or
push
xor
jne
hlt
or
dec
inc
dec
in
sub
mov
jmp
mov
in
into
repnz
in
aam
dec
mov
sub
out
jne
popf
test
xchg
sub
decl
adc
dec
iret
cwtl
call
adc
loope
imul
push
xor
lcall
jp
test
pop
sbb
icebp
repz
popa
fldl
call
out
mov
jle
mov
es
push
jmp
add
shlb
out
push
call
and
fcompl
lods
loopne
incl
popa
shrb
inc
cli
push
mov
in
dec
fists
dec
push
jp
sti
fcomip
lods
add
pop
nop
xlat
pop
mov
and
jecxz
inc
notb
data16
fdivrp
mov
inc
imul
lret
movsl
idivb
scas
dec
pusha
push
cli
dec
ljmp
jne
jp
mov
and
inc
bound
mov
mov
mov
sbb
cld
mov
cmp
fnstenv
mov
cwtl
push
popf
or
mov
decl
push
push
dec
pop
fdivs
lcall
sub
inc
adc
jnp
gs
mov
and
leave
aas
jge
pop
jecxz
cli
aad
popf
add
inc
rcrb
lea
dec
insl
mov
es
dec
xlat
xor
mov
pushl
aas
or
mov
sbb
rol
mov
call
dec
jno
leave
inc
gs
cmp
pop
fisttpl
cmp
adc
pushf
ret
in
sub
xlat
lret
sub
or
call
adc
dec
push
out
adc
test
mov
mov
pop
dec
ficompl
pop
mov
call
or
jb
stc
mov
fdiv
call
sbb
imul
das
adc
andb
xor
mov
adc
mov
call
add
pop
sub
add
mov
scas
and
insl
scas
xchg
sbb
pushl
in
dec
fisttps
imul
cmp
xchg
addr16
fisubs
aad
aaa
xlat
mov
add
out
push
jg
push
js
and
das
jle
ret
dec
stos
push
fidivrl
pop
jmp
jge
push
insl
jle
lods
mov
push
in
in
dec
repnz
push
jg
or
jmp
sti
mov
nop
xlat
pop
mov
xor
xchg
fnstsw
xor
ss
repz
inc
scas
cmpsb
lock
jle
in
mov
int
ret
push
mov
clc
xchg
mov
inc
push
loopne
loope
inc
pop
call
cmp
jmp
adcl
icebp
je
ret
inc
xchg
test
mov
mov
fcomip
jmp
scas
gs
rcll
dec
and
sbb
pop
pop
gs
loopne
cmpsl
and
std
xor
cli
mov
outsl
and
inc
loopne
mulb
mov
jo
sbb
scas
push
mov
jmp
mov
dec
dec
mov
les
lods
push
cmpsl
imul
aam
sti
ja
push
lock
shr
pusha
ja
mov
mov
jmp
fcomip
incl
out
scas
jg
jecxz
test
xor
ljmp
lret
dec
cmc
call
adc
mov
mov
das
cmp
jbe
adc
jmp
dec
and
ljmp
ljmp
aam
js
push
dec
adc
cmpb
sub
jg
adc
out
jp
subb
gs
mov
call
rcr
popf
xlat
roll
add
xchg
adc
mov
mov
mov
jnp
xorl
mov
mov
mov
cli
shrb
cmp
clc
mov
or
pushl
mov
xchg
jle
fimull
stc
or
adc
dec
xor
gs
mov
scas
clc
add
std
sbb
add
les
out
pop
repnz
clc
aam
mov
inc
ja
push
mov
push
inc
sub
enter
pop
xor
xchg
jl
and
ret
push
stc
iret
mov
pop
fiaddl
pushf
mov
push
jg
call
loop
mov
xor
dec
adc
pop
sub
cmp
sub
pushl
jmp
mov
push
push
mov
mov
pop
int3
add
addl
popf
mov
shll
lcall
sub
pop
es
jle
cmpsb
sti
test
mov
push
push
addr16
dec
sbb
jmp
xchg
and
roll
xor
xor
pop
cmp
push
add
pop
icebp
call
mov
mov
out
mov
sti
fimuls
int3
push
incl
shlb
push
xchg
inc
inc
add
ficomps
adc
roll
fs
stos
cmp
pop
or
decl
les
push
loop
mov
sahf
arpl
pop
loopne
iret
shll
lcallw
xchg
bound
addr16
jg
ljmp
and
dec
gs
call
sti
mov
mov
mov
inc
or
rcll
xchg
push
mov
inc
xchg
js
scas
jae
pop
mov
fs
push
sub
pop
outsl
mov
inc
jg
pushl
out
addr16
es
fdivs
ret
imul
mov
mov
mov
loope
adc
jmp
lcall
popl
sub
push
je
arpl
pop
xchg
sti
pop
cwtl
pushl
cmp
sub
lcall
cld
pop
push
mov
decl
iret
shr
incl
adc
and
loop
mov
filds
xor
jo
fs
sbb
pop
jg
add
fcomps
cli
add
lret
mov
incl
jecxz
sbb
xchg
mov
in
cwtl
cmpsl
fdivrs
mov
sti
sti
rclb
pop
in
adc
cmp
pop
std
cmp
mov
adc
mov
ja
stc
jp
cli
ljmp
repz
icebp
xchg
cld
cmc
jns
cmp
push
rcll
pop
rcll
xlat
pop
mov
loopne
ss
mov
outsl
mov
frstor
fmul
mov
mov
xchg
add
ret
jle
dec
lcall
mov
xor
add
in
mov
ret
push
sbb
roll
call
mov
decl
mov
ret
leave
xchg
test
dec
notb
xor
adc
push
out
call
enter
pop
cld
in
call
aad
xchg
fdivs
int3
xchg
clc
jmp
cld
fnstcw
pushl
std
jo
xchg
lock
test
push
push
pop
sbb
mov
cmp
lret
imulb
pop
test
loopne
stc
mov
test
xchg
cs
cmpsb
mov
pusha
ss
lds
call
out
add
dec
je
pushf
stos
pop
out
or
xor
sub
insl
mov
inc
dec
cld
pushl
xchg
sbb
aam
hlt
mov
repz
xor
aam
int3
sbb
mov
or
jg
dec
push
and
notl
jbe
mov
call
imul
push
mov
push
aam
pop
xor
or
or
xchg
mov
iret
or
xchg
inc
jecxz
add
test
cmpsl
adc
add
jmp
ljmp
pop
adc
call
push
outsb
aaa
daa
icebp
mov
incl
push
ja
fmull
mov
ja
data16
sub
mov
fisubrs
push
or
xorb
jmp
xchg
mov
mov
fldenv
imul
sbb
sub
movsl
outsb
jae
sub
fnstsw
call
push
pop
push
fmulp
dec
movntps
pop
xchg
mov
je
fsubl
push
mul
cmp
dec
rsm
mov
pushl
stc
aad
pop
fimuls
leave
scas
sub
adc
sbb
cli
cwtl
push
mov
or
out
mov
jb
cld
or
jne
pop
inc
aad
cmp
adc
out
dec
mov
hlt
adc
sbbl
mov
ds
jns
add
incl
popf
shrl
imul
mov
ret
mov
add
sub
fadds
clc
sub
hlt
cld
test
jmp
pushf
movsl
fsqrt
or
in
add
ljmp
mov
fbld
repz
ffreep
add
inc
sub
mov
adc
ret
ljmp
pop
mov
mov
xchg
mov
cmp
test
outsl
push
call
pop
repz
fldcw
sub
pusha
loope
push
popa
ds
and
mov
not
push
jg
mov
dec
xor
out
jnp
imul
xchg
push
arpl
outsl
or
icebp
les
lcall
xor
je
stos
mov
xchg
sbb
fmull
inc
rcll
lea
add
jmp
cmp
je
mov
add
jmp
and
aas
xlat
nop
cmp
stos
mov
mov
xchg
insl
dec
mov
aad
mov
call
and
aam
sbbb
xchg
jae
adc
push
inc
dec
adc
adc
or
call
rcll
pop
mov
cmc
imul
inc
fwait
int
in
js
in
insb
mov
fcomip
pushl
pop
cmc
jg
push
leave
inc
push
jp
mov
sahf
pop
mov
push
fcom
loope
add
jb
inc
mov
int3
or
sbb
mul
jecxz
mov
mov
testl
or
mov
mov
cmovg
sar
jns
push
scas
mov
out
lret
ret
push
or
pop
decl
push
jecxz
cmp
ss
jg
xor
ja
and
incl
mov
inc
xlat
fwait
das
xor
cli
adcl
or
in
and
gs
call
loop
cmp
pop
cs
sub
inc
hlt
or
fs
xchg
mov
jnp
call
inc
in
adc
xchg
into
je
lods
fs
mov
cwtl
rol
mov
orl
push
add
outsl
jg
and
fistps
out
cmpsb
add
or
enter
repz
xor
push
mov
pushl
xor
push
adcl
js
mov
mov
insl
push
mov
loop
rorb
es
inc
fsts
int3
iret
add
mov
js
xchg
jg
pusha
or
in
sbb
cmp
xor
nop
int
hlt
and
outsl
cli
incl
hlt
arpl
arpl
fwait
mov
cmc
fildll
loopne
test
pop
mov
lock
jmp
mov
loope
push
cmc
jge
mov
xchg
clc
sub
test
cwtl
mov
aam
stos
mov
shlb
pop
pop
pushf
lods
sub
in
mov
fidivrs
xor
insl
outsb
mov
mov
sub
out
sbb
lods
jo
ret
xlat
aas
mov
movsl
cmp
pop
xchg
mov
in
inc
mov
cmp
sbb
mov
inc
or
call
jbe
lock
or
mov
push
lcall
pop
sbb
call
and
jg
cmp
fidivs
pushf
pop
push
inc
cli
inc
jo
divl
push
sbb
insb
fists
push
icebp
ficoms
jmp
push
xor
push
jecxz
and
mov
es
incl
fxch
lcall
pop
mov
stos
ja
mov
sti
incl
xor
in
mov
lcall
imul
pop
mov
call
std
inc
or
mov
popf
in
test
or
push
gs
mov
sub
fwait
cmc
ds
test
in
loope
cmpsb
lods
or
fstl
lods
out
and
lret
ljmp
shl
call
imulb
mov
jnp
inc
jo
lods
sub
jl
mov
call
stc
adc
sbb
inc
mov
pop
jns
jl
or
push
mov
lret
leave
jns,pt
jo
xchg
decl
test
lock
adc
jecxz
jbe
arpl
mov
mov
mov
int
hlt
in
add
insb
rolb
jnp
push
jns
jmp
or
pop
and
sbb
jp
rcl
rcrl
jns
arpl
xchg
or
jmp
test
push
inc
sub
and
js
sub
push
mov
aaa
mov
dec
push
ds
out
js
cmp
xor
lcall
dec
jmp
imul
mov
lcall
lea
sahf
lahf
push
sbbl
mov
decl
cmp
xchg
mov
aad
push
popf
and
stc
arpl
decl
or
xchg
outsl
push
std
push
loopne
mov
pop
mov
dec
xor
mov
pop
decl
add
jbe
arpl
and
call
sub
push
ljmp
pusha
pop
jb
xor
dec
inc
popf
push
dec
pop
enter
insb
fidivrs
xchg
sahf
pop
inc
nop
call
or
shlb
add
cmp
inc
das
clc
mov
cmp
imul
jle
push
mov
or
mov
pushl
jg
ss
xchg
rcrl
movsl
fcomps
cmp
shll
std
out
les
or
cli
push
jbe
sbb
enter
jne
add
arpl
mov
pushl
mov
inc
adc
jge
lahf
daa
jne
push
and
mov
movsb
mov
add
mov
mov
mov
outsb
mov
lcall
mov
inc
pushf
into
gs
cmp
repz
outsb
leave
or
andb
lcall
les
add
inc
ja
out
subl
movsl
ljmp
adc
push
inc
jno
push
fdivs
imul
xchg
cmp
incl
or
push
test
imul
push
cltd
rcr
aaa
outsb
dec
inc
mov
mov
outsl
leave
fistl
and
fdivp
ficompl
mov
pop
adc
ljmp
test
push
sbb
pop
sahf
in
lock
sub
fidivrs
insb
sub
loop
push
fisttpl
fcoms
mov
push
test
lcall
arpl
in
mov
insb
pop
ffreep
lods
insb
push
mov
call
xchg
jno
push
xor
lcall
fiadds
rcrb
loop
inc
and
mov
repz
call
rorb
push
mov
fisubrl
out
xorl
mov
mov
mov
nop
in
popf
cltd
inc
cmpb
sub
xor
sub
push
push
ljmp
fadds
xor
in
les
mov
test
ljmp
stos
and
es
std
sbb
out
push
aad
pop
push
cmc
xorb
popf
mov
sbb
enter
fs
mov
xchg
lods
push
xor
fldl
ljmp
cmp
or
in
cmpsb
popf
jmp
rol
std
out
push
jg
sahf
test
lods
xor
int
xchg
mov
imul
lods
mov
pop
jle
add
pop
std
pushl
jo
and
loop
test
nop
xor
add
test
xor
and
xchg
cmp
adc
lcall
ljmp
pushl
pop
pusha
sub
xor
push
es
sti
cmc
or
push
in
mov
mov
call
pop
sbb
stc
les
mov
dec
mov
rol
or
clc
push
pop
inc
outsl
into
dec
data16
push
jne
sbbb
mov
dec
call
jmp
cwtl
xor
mov
out
mov
mov
sub
call
mov
add
out
cs
dec
sub
mov
aam
ds
cs
lcall
lcall
and
xchg
aad
and
adc
or
sbb
xchg
and
xor
fcomip
ljmp
mov
negl
mov
arpl
popf
dec
cmp
das
clc
jnp
popa
mov
aam
inc
ret
test
fadds
sbb
imul
lcall
mov
fnstcw
enter
popf
add
or
aaa
call
movsb
xor
adc
dec
out
push
cli
xor
push
icebp
sbb
movsl
roll
mov
add
incl
js
dec
shll
sub
in
fcoms
int3
adc
cmp
jmp
fmul
jae
cwtl
sub
int
popa
pop
xor
pushf
lods
filds
cmp
popf
clc
sub
pop
push
lcall
mov
push
add
ss
insl
push
push
mov
cmp
push
adc
popa
jmp
sub
mov
inc
negb
cmpsb
sub
inc
cs
sar
incl
arpl
and
loop
pusha
mov
jns
sbb
jno
mov
mov
cmp
inc
inc
cs
outsl
dec
std
fimuls
movsb
pop
xor
fisubrl
inc
or
xchg
outsb
push
push
xor
pushl
pusha
loop
arpl
stos
bound
or
add
ja
addr16
jne
test
or
lock
jl
sbb
es
dec
add
sar
call
cmc
clc
xchg
ret
int
repnz
pop
fisttps
scas
and
mov
xchg
mov
xor
ljmp
cmpsl
insl
pop
lcall
xchg
popf
js
cmp
inc
mov
adc
xchg
jbe
gs
lcall
push
rol
inc
mov
jmp
jne
xchg
xor
ja
push
mov
inc
fwait
cld
pop
or
jecxz
test
and
xchg
fisttps
inc
repnz
sbb
lret
repnz
lcall
test
jge
js
jp
orb
and
loop
lahf
inc
lcall
mov
fisttpl
jns
mov
sub
jecxz
adc
loope
cmp
incl
outsl
inc
pandn
fbstp
fstl
xor
cmp
lret
shrb
sbb
push
fwait
mov
inc
scas
pushf
xchg
push
xchg
insl
or
pop
ljmp
addr16
mov
dec
bound
jae
lods
sahf
mov
mov
fcomip
mov
call
mov
repz
gs
stc
mov
jb
inc
mov
scas
add
pop
cwtl
xor
ljmp
test
xor
shll
cmc
insb
out
mov
pop
sub
in
fcmovnbe
fidivrs
push
incl
dec
fwait
int
push
push
mov
cmp
lret
xlat
sbb
fadds
dec
shl
sbb
or
xor
jmp
fwait
mov
dec
icebp
jecxz
stos
xchg
mov
lods
push
call
insb
insb
sahf
subl
mov
roll
ror
shl
xchg
imul
outsl
frstor
je
cli
std
mov
jg
ret
push
xlat
fs
roll
adc
cwtl
push
push
addr16
dec
cmc
adc
sar
inc
stos
dec
test
dec
xchg
outsb
and
inc
fcomip
popa
pop
jmp
fdivrl
rclb
sti
ljmp
jmp
fnsave
mov
mov
push
jbe
mov
xor
mov
mov
sbb
repnz
clc
jns
sub
fisubrs
popa
cli
insb
jae
idiv
incl
orb
mov
test
jne
mov
sub
lcall
ret
or
and
pop
sbb
sahf
cmpsb
xor
cmp
xor
adc
incl
out
mov
add
aaa
rorl
lods
inc
fdivr
lcall
cmc
aam
adc
push
ja
or
xor
sbb
mov
push
add
jmp
test
cmp
inc
cmp
arpl
push
mov
mov
xchg
adc
cmpsb
jbe
call
aad
insl
xor
and
int3
jnp,pn
jne
pop
aam
iret
push
jmp
aas
gs
arpl
daa
xor
mov
nop
addr16
les
pop
add
mov
inc
ljmp
inc
out
jmp
scas
pop
pop
popf
mov
pop
enter
lcall
testb
and
push
mov
call
xchg
dec
ljmp
in
dec
movsb
lahf
mov
sar
jmp
popa
cmp
lcall
jmp
andl
decl
xor
std
dec
xchg
dec
fistpll
in
std
push
imul
sub
jns
xor
sbb
decl
push
mov
push
cmp
divl
push
pop
fcmovb
jl
adc
push
jbe
jle
ret
lcall
mov
dec
add
and
cmpsl
sub
incl
jp
pop
dec
push
jnp
jg
stos
int3
jmp
clc
mov
xchg
jle
pop
and
xchg
fadds
sub
mov
mov
add
fdivrl
sbb
stos
jmp
aad
sbb
scas
mov
xchg
leave
scas
mov
call
clc
scas
cltd
mov
jno
pusha
jns
movsl
popa
jl
pop
sbb
and
push
xor
lcall
xchg
mov
faddl
repnz
dec
stos
lea
out
in
and
inc
add
add
and
jg
and
jb
ror
push
xlat
add
mov
insb
in
call
sub
inc
mov
xchg
test
pop
test
adc
and
push
mov
push
daa
push
push
stc
sbb
mov
lea
xor
sti
scas
mov
aaa
jg
les
adc
daa
adcb
jle
scas
test
movsl
push
aaa
ljmp
test
and
jo
mov
movsb
scas
xchg
sub
rolb
push
out
push
and
lods
mov
ret
decl
out
and
or
repz
notw
out
pushl
cmp
lcall
and
inc
mov
jmp
daa
cmp
jle
int3
sbb
addr16
xchg
call
adc
pop
jg
add
mov
mov
lret
jmp
pop
call
pushf
add
andl
pop
in
in
pop
and
lret
jns
add
mov
cmp
daa
and
sbb
fisubl
scas
scas
dec
xchg
fwait
test
mov
jmp
jl
fsubs
mov
push
cmp
mov
and
fimuls
andb
jnp
mov
push
loopne
add
push
adc
arpl
cmpsb
adc
xchg
mov
push
mov
mov
mov
stc
xchg
ss
aam
cmp
cwtl
mov
ljmp
fisubl
decb
push
sub
xchg
pop
lret
jecxz
scas
inc
sub
pushl
cli
rorb
popa
negl
adc
iret
cmpsl
sbb
lcall
mov
jmp
insl
mov
xor
and
xor
jp
dec
dec
aaa
or
mov
gs
lock
shrb
mov
sti
sub
decl
pop
cmpsb
std
cvttps2pi
jb
repz
dec
popf
jbe
lret
adc
sbb
sahf
push
daa
jecxz
jecxz
ds
jge
jecxz
pushf
imul
adc
sbb
cwtl
pop
jno
xchg
aam
mov
lcall
inc
jmp
fcomip
sti
out
mov
sbb
mov
lcall
push
jg
dec
push
popl
adc
lock
adc
dec
aas
lock
call
daa
ret
idiv
ss
jmp
jmp
test
shll
push
jae
call
decl
dec
pop
sbb
inc
mov
push
fidivl
daa
hlt
push
mov
cmp
lea
out
cmp
addr16
lods
imul
ss
add
cmc
loope
lock
ret
sbb
roll
fs
jmp
lock
out
int
jge
into
lds
push
rorb
loop
pushl
lret
mov
xor
adc
lods
ljmp
loopne
lock
in
push
out
push
in
sub
shll
mov
dec
iret
test
and
push
loop
mov
aad
cwtl
xabort
sbb
adc
adc
icebp
cs
push
das
leave
jno
xor
shlb
jmp
dec
cmpsl
or
push
pop
mov
sub
clc
fdivl
fistpl
mov
add
dec
js
adc
clc
xchg
sarb
adc
xchg
mov
jge
mov
ret
cli
fcomip
lahf
cwtl
xlat
dec
push
sbb
jecxz
xchg
in
dec
fisubl
sub
lds
jmp
out
mov
add
decl
cmp
mov
mov
cmp
ljmp
cmc
popa
xchg
push
data16
adc
cmpsl
dec
pop
jp
inc
fcoms
decl
lods
imul
jo
cmp
add
lret
jne
je
movsl
fs
sub
ljmp
sub
das
jnp
xor
mov
mov
out
fcomps
cmp
xchg
pushl
loopne
sbb
and
jle
mov
xlat
cmp
lret
cmpsl
fwait
mov
cmp
cmp
pop
bound
jge
mov
repnz
inc
jecxz
xchg
insl
sahf
test
pop
hlt
ljmp
push
pop
lret
jnp
roll
xchg
adc
decl
mulb
in
push
push
pushf
xchg
into
loopne
mov
mov
aam
decl
pop
jge
mov
pushf
idivb
and
or
orl
sti
orl
aas
sbb
aaa
hlt
add
inc
fwait
sub
outsb
add
loope
and
in
imul
and
jo
call
push
mov
sub
call
loop
jg
jns
fs
dec
ds
fmull
andl
out
loopne
or
insl
pop
push
add
cmp
cmp
inc
jg
cmc
jmp
sbb
rorb
mov
cmp
jp
jb
mov
ljmp
std
cmp
lret
adc
xor
rcrb
lods
into
cmpxchg
lcall
pop
pop
pushf
mov
lahf
aas
lahf
inc
bound
pushf
stos
dec
sub
pop
pop
adc
lcall
adc
je
ljmp
and
lahf
js
ss
xchg
outsl
and
lea
cmp
outsl
outsb
mov
jmp
cli
stos
hlt
popa
cmp
incl
test
mov
mov
mov
test
jle
incl
adcl
enter
paddusw
and
or
lods
xor
cld
fildll
lcall
pop
test
push
sbb
jp
sbb
or
jne,pt
adc
jge
mov
stc
sub
mov
ljmp
inc
js
popa
jge
icebp
pusha
sbb
subb
ljmp
popa
out
cmpsl
aam
inc
fidivrl
cmp
jb
test
lret
call
sar
xorb
ret
push
xor
jmp
lock
sub
sbb
fdiv
ljmp
mov
inc
dec
mulb
adc
pop
cld
pop
leave
push
and
pushl
std
dec
cmp
cltd
inc
outsb
sub
arpl
mov
lea
mov
incl
xor
mov
popa
pusha
xchg
dec
or
not
sub
pavgw
js
mov
mov
pop
dec
lret
pop
dec
ds
and
incl
mov
cmpsb
pushf
mov
outsb
mov
lods
dec
push
sarb
and
sub
pop
push
mov
xor
xchg
mov
sbb
jg
ds
scas
enter
jg
xchg
pop
or
ljmp
push
mov
and
or
pop
jno
adcb
imul
cmpsb
dec
xor
sub
or
stc
insb
std
pop
xor
out
mov
fbstp
mov
arpl
sbb
xor
lahf
mov
push
xlat
shrl
mov
iret
lds
fisttpl
decb
lcall
int
js
in
or
insl
les
leave
sbb
call
mov
mov
je
int3
sbb
aaa
sbb
sbb
lcall
jbe
cld
mov
mov
push
test
pop
push
pop
sbb
in
fidivl
dec
sbb
or
fidivrl
fisttpl
xchg
xchg
rcl
addb
cmp
call
or
mov
sub
or
jge
lret
outsb
pop
or
add
or
mov
test
sub
lcall
addr16
pop
leave
pop
loope
adc
mov
pop
xor
dec
push
stc
xchg
pushf
mov
sub
bnd
fbstp
inc
dec
inc
lcall
jmp
nop
fdivrs
xchg
jb
dec
lods
xchg
push
jb
and
mov
call
movsb
lods
xor
pop
iret
pop
dec
pusha
inc
test
in
int
insb
ja
call
and
mov
rcll
leave
jmp
enter
add
inc
incl
inc
or
leave
add
loop
adc
xor
push
ficomps
push
pop
lcall
sub
push
fdivr
loopne
adc
dec
inc
mov
das
add
pusha
add
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
test
or
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
pop
lock
or
xchg
add
add
adc
jl
ret
incb
add
xchg
and
push
xor
mov
add
add
push
adc
pop
and
xor
xchg
mov
rcll
bound
js
mov
mov
lcall
xlat
les
or
or
shll
dec
test
xor
es
inc
cwtl
pusha
and
mov
roll
arpl
adc
testl
es
scas
cmp
enter
adc
push
adc
pop
popa
jno
and
inc
mov
or
adcb
loope
icebp
mov
and
mov
xorb
scas
fiaddl
add
push
orb
dec
pop
les
lock
or
add
lret
clc
adc
sbb
cli
mov
test
scas
fnstsw
ficompl
cmpsl
xor
mov
test
pop
mov
jecxz
cli
fistpll
sub
pop
mov
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
fisttps
mov
fstl
inc
lock
or
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
mov
push
pop
mov
ljmp
mov
popl
movb
push
sti
ret
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
sti
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
mov
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
cli
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
adc
push
sahf
pop
clc
sti
jg
lock
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
add
clc
xchg
jmp
sbb
add
fidivl
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
ljmp
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
adc
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sub
scas
popa
in
pop
or
mov
call
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
xor
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
adc
stos
pop
es
sub
loop
pop
outsb
jbe
xchg
adc
lods
andb
shrb
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
jno
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
dec
mov
in
stc
clc
ja
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
loopne
loop
lahf
mov
or
out
lcall
mov
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
loopne
jnp
test
aas
repz
sbb
lock
in
jmp
or
mov
clc
push
std
mov
rcl
icebp
or
mov
pushl
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
paddsw
add
out
icebp
mov
loope
inc
mov
negb
cmpsl
popf
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
push
rolb
lcall
xor
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
pop
sbb
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
call
mov
ds
inc
mov
in
sbb
xchg
imul
call
mov
jmp
std
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
popf
pop
add
fsts
dec
or
add
sti
pop
inc
push
cltd
mov
or
nop
imul
iret
and
inc
and
mov
sub
mov
test
pop
out
movsb
mov
add
mov
add
incl
dec
fidivs
or
dec
insb
ja
jo
mov
jg
add
mov
add
pop
popa
push
jb
jg
inc
add
xor
dec
orb
test
lahf
pop
push
adc
inc
mov
sub
adc
and
scas
push
mov
xchg
ucomiss
add
nopl
scas
dec
pop
sahf
dec
test
pusha
or
xchg
decl
add
xchg
movsl
push
daa
add
data16
add
es
push
scas
fildll
push
movsb
inc
scas
push
and
stos
push
and
idiv
jbe
push
test
and
imul
push
inc
aas
ljmp
scas
pop
dec
lods
push
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
mov
adc
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fnstenv
fdivs
pop
or
imul
aaa
movsl
or
mov
add
outsl
fcmovnbe
jo
mov
push
shll
add
outsl
push
shll
fidivrl
mov
push
ret
mov
fidivl
and
jge
fisttps
add
decl
ljmp
movsb
push
add
mov
sbbl
fcomi
shlb
mov
push
push
fcmovnbe
mov
push
add
jne
push
aam
push
ret
lahf
jbe
mov
mov
push
cmpsl
mov
add
ja
sarl
add
pop
aaa
add
idivb
cs
push
shlb
lret
out
into
divb
ja
push
push
xlat
or
mov
jbe
fdivs
push
aad
testb
or
push
jns
push
mov
mov
jp
jp
inc
push
fidivrl
sarl
pop
mov
int3
ja
fldl
ret
mov
push
inc
jmp
ljmp
xchg
xlat
ss
in
xchg
sub
xchg
xor
xchg
push
outsb
inc
shll
xchg
pop
xor
jnp
push
lcall
push
cmp
mul
mov
pushf
cmp
popf
xchg
popf
aas
push
imul
fistpl
lahf
mov
mov
mov
imulb
movl
repz
jmp
lock
hlt
clc
stc
cli
push
cmp
sti
cld
std
incb
jecxz
arpl
fwait
int
or
add
jo
imul
xor
add
pop
add
pop
inc
shrb
add
push
mov
add
cmp
xor
ja
push
add
or
add
add
fldcw
or
or
test
test
nop
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
rcrw
adc
mov
pop
stos
femms
lods
lods
pop
stos
insl
addr16
sbb
scas
add
scas
insl
and
imulb
scas
lods
push
and
adc
sbb
int
nop
aaa
sbb
sbb
out
in
scas
mov
and
or
or
mov
xchg
or
lock
in
mov
mov
and
and
mov
and
inc
jo
sub
pop
sub
mov
gs
and
mov
cmpsb
cld
pop
daa
mov
sbbl
mov
add
aas
cmp
dec
pop
cmp
sub
jbe
pop
aaa
cmpsb
add
mov
pop
mov
mov
xor
pop
or
or
add
divl
pop
insl
pop
pop
xor
mov
pop
das
push
cs
fwait
idiv
add
xor
das
pop
push
push
xor
adc
pop
push
ljmp
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jg
jno
outsl
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
mov
outsl
decl
mov
inc
xchg
push
dec
ja
jns
dec
jnp
movsb
repnz
bound
js
imul
clc
jne
je
and
and
add
inc
insb
jo
js
add
pusha
outsb
pop
pop
scas
aas
inc
movsb
adc
idiv
jge
jb
mulps
add
push
mov
loopne
and
cmpsb
push
mov
imulb
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
add
in
notl
pop
jbe
dec
sbb
and
mov
ds
pop
xchg
jo
push
inc
mov
cmp
mov
in
das
clc
insb
inc
add
jae
xchg
jp
inc
push
popf
sti
cltd
lcall
add
xchg
jno
lret
push
bound
mov
mov
inc
push
sahf
insl
sti
mov
insb
add
outsb
add
xchg
xchg
pop
push
test
divb
push
dec
push
movsb
jae
add
jb
xchg
mov
push
mov
push
sarb
decl
add
lcall
outsb
mov
repz
dec
mov
add
ja
sahf
jbe
fistpl
add
fstps
outsb
ds
push
add
and
jle
mov
js
mov
data16
imul
insb
pop
outsb
push
outsl
rolb
push
ds
jno
add
jge
push
test
fisttpll
lock
or
mulb
add
xchg
adc
mov
mov
out
arpl
push
insl
dec
cli
sahf
mov
jb
out
mov
jg
jle
or
jecxz
or
pop
sti
popf
jp
aad
push
divb
fildl
adc
imull
int
adcl
mov
shll
push
test
test
sbb
test
fldcw
in
mov
push
xchg
nop
and
out
xchg
cmpb
lock
sub
sub
outsb
fiaddl
imulb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
outsl
cmpsb
pop
cmp
jle
and
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
lcall
into
fstl
xchg
mov
lgs
int
mov
mov
sarb
popf
iret
sarl
ret
sahf
and
or
into
add
addr16
xchg
jne
pushf
dec
out
je
add
daa
cltd
sub
mov
and
femms
or
or
jg
lcall
or
es
push
adc
push
add
fstpt
adc
adc
ds
add
test
mov
xor
ds
mov
mov
mov
mov
sti
aad
testb
mov
add
and
or
ds
mov
mov
stc
lods
aas
and
push
out
aas
xor
or
mov
aas
cmp
pop
sahf
sub
cmp
and
mov
sbb
inc
jbe
cmp
push
cmp
inc
jle
cmp
mov
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
push
in
imul
xor
pop
mov
mov
sti
jg
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
mov
ds
xor
sub
sub
sub
sub
fisttpl
ss
and
inc
pushl
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
ljmp
pop
imul
nop
cltd
mov
mov
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
adc
test
jb
jae
jo
outsb
pushf
sti
cmp
add
out
jmp
push
rolb
pop
shlb
mov
incl
out
incl
jl
push
add
cmc
repz
lcall
mov
add
jg
push
aas
add
xchg
pop
cmp
test
add
mov
add
mov
outsl
fisttpl
push
fnstsw
repnz
push
call
lcall
mov
popf
add
ret
out
sub
outsl
push
in
lcall
or
mov
shll
push
push
dec
lret
js
push
std
jg
xchg
add
mov
mov
test
scas
xchg
js
sti
jmp
mov
out
es
nop
sub
sub
insl
nop
sub
xchg
xor
xchg
xor
xchg
imull
outsb
lcall
leave
jbe
negl
in
fidivrl
shlb
iret
push
lret
loopne
inc
clc
cltd
xlat
push
std
into
sbb
mov
xchg
int3
data16
add
test
jg
jle
jge
adc
adc
add
nop
or
push
dec
dec
dec
decb
dec
add
pop
add
push
dec
or
adc
cmp
mov
mov
or
add
push
adc
enter
add
or
pop
pop
cmovg
in
lcall
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
ljmp
cmp
cmp
cmp
daa
and
sbb
pushl
xor
and
add
dec
ss
xor
sub
sub
push
add
stos
inc
lods
mov
addb
mov
pop
mov
mov
add
mov
add
fldenv
outsb
mov
push
outsl
add
or
sub
pop
sbb
or
enter
orb
jbe
lods
dec
xor
incl
sub
mov
jg
xlat
sbb
call
jnp
roll
sysret
inc
xor
or
cmpsb
jg
ds
xchg
cmpsb
pop
stc
sysret
push
and
iret
in
lock
pusha
shl
push
push
add
ja,pn
lock
sbb
aaa
outsl
sub
or
pop
shrl
sahf
jg
add
test
xchg
inc
mov
mov
lods
out
cli
mov
cli
fists
cmp
pop
add
add
pop
jg
pop
adc
add
or
test
xchg
jg
orb
pop
add
mov
das
sti
mov
cmp
inc
cwtl
insl
rcll
sti
jg
ret
jo
jg
bound
mov
xchg
sbb
pop
ja
dec
test
idivb
adcb
cld
jg
and
add
jle
cmpsb
add
std
ja
jg
adc
mov
jg
inc
push
or
jg
or
mov
les
decb
push
andl
or
ljmp
pusha
mov
addr16
adc
dec
xor
push
push
incb
xor
data16
xor
and
fsts
add
inc
add
shl
sbb
jbe
mov
push
pop
add
sbb
and
add
mov
sbb
mov
or
sbb
fisttpll
jmp
lods
jle
and
adc
mov
push
xchg
or
add
mov
xor
pop
or
jg
pop
push
add
jg
jg
xor
scas
addl
push
jg
inc
add
or
rorb
bound
push
and
orl
pop
mov
inc
dec
jg
jle
add
fdivrp
sub
ljmp
stos
fcmovnu
cmp
pop
pop
pop
add
daa
aas
mov
pop
add
mov
jle
add
fs
bts
mov
mov
ds
jmp
decl
dec
xchg
push
bound
add
repz
mov
das
insl
fcmovnu
sahf
pop
daa
push
arpl
es
pop
mov
push
mov
fcmovbe
out
mov
decl
dec
mov
pop
call
ljmp
pop
loop
dec
jle,pt
jle
inc
test
mov
push
sti
scas
test
into
push
fnstenv
add
cltd
fdivrp
mov
push
jbe
mov
push
push
jp
insb
fwait
adc
push
js
dec
jbe
pop
jmp
adc
add
mov
mov
rcrb
outsb
test
ljmp
adc
jle
dec
pushl
outsb
ss
lcall
call
ror
ja
xchg
mov
test
xchg
fisubrl
push
push
mov
sahf
inc
out
and
and
xchg
cs
aas
popf
inc
push
pushf
cmp
inc
outsb
pop
cmp
dec
or
xchg
xor
sub
mov
out
nop
sub
nop
daa
ss
cs
fucom
sub
aaa
xor
call
incl
xor
incl
jg
xor
dec
dec
pop
fnsave
xor
call
cmp
pushf
sahf
int3
or
lcall
mov
push
add
leave
test
or
sahf
sbb
dec
push
xchg
movb
adc
push
pop
ja
mov
jg
divb
mov
add
add
fsubs
push
adc
rclb
or
mov
outsl
dec
add
repnz
adc
bound
push
in
pop
mov
negl
orl
lea
dec
sbb
push
xchg
inc
and
sub
push
lock
cmp
cmp
pop
test
inc
adc
add
mov
add
decl
out
in
or
pop
idiv
mov
or
jnp
adc
push
sbb
adc
inc
dec
test
test
sub
add
into
movl
mov
sub
sbb
bound
add
pop
sti
sub
lcall
or
mov
popa
sti
dec
shrb
xchg
daa
cld
pop
fildl
cld
call
push
inc
data16
pop
daa
std
out
adc
ja
mov
or
sbb
sti
je
xor
xchg
sbb
sbbb
lods
das
inc
test
call
decl
sub
inc
sub
lcall
and
decb
cmpsb
jmp
mov
ljmp
xor
cmpsb
test
daa
outsb
decb
mov
sbb
inc
clts
add
mov
mov
lfs
fmul
jle
adc
mov
sti
out
punpckhdq
pop
sub
push
add
dec
incl
pop
xchg
lods
iret
sub
xor
incl
call
adc
sub
xorl
add
mov
daa
outsl
mov
push
std
call
call
decl
stos
inc
popa
push
call
push
add
shll
fsubl
add
incl
cwtl
cmp
jg
movsb
fwait
test
cli
idiv
loop
add
sbb
sub
ljmp
decl
stc
sbb
fcmovbe
insl
fnstenv
jmp
aaa
mov
sbb
mov
mov
or
cmp
roll
dec
jp
nop
jbe
ret
incl
dec
mov
ljmp
lahf
inc
inc
cmpsb
pop
cmp
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
out
fwait
int
push
popf
inc
cmpsb
dec
dec
inc
jnp
push
dec
cs
dec
mov
pusha
xchg
cmp
and
out
enter
push
shrb
rcl
outsb
shrb
int
fst
es
push
jb
and
xchg
imulb
push
iret
insl
je
cmpsb
xchg
pop
daa
outsl
pop
imul
dec
cmpsb
push
push
lcall
inc
lcall
dec
dec
dec
pop
add
movsb
es
cmpsb
adc
mov
popf
cmp
aas
decb
lcall
push
inc
push
xchg
mov
xchg
fs
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
cmp
xchg
xchg
notb
sub
pushl
xchg
scas
incl
mov
data16
ds
jg
add
push
aad
or
faddl
inc
fstpt
push
jnp
jp
outsb
lcall
or
jl
sbb
movq
es
jbe
int
jle
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
jns
push
mov
jnp
jge
hlt
test
imul
jl
cli
int3
outsb
nop
negl
adc
mov
mov
mov
nop
xlat
lods
cmp
iret
mov
int
push
addb
jnp
lahf
dec
es
fadds
inc
and
pop
addb
push
in
sysret
stc
outsb
call
inc
and
push
sub
iret
out
mov
cli
jns
outsb
test
jbe
clc
push
idiv
fidivrs
or
inc
sub
jg
mov
icebp
sub
outsb
orl
ret
sub
fstpt
mov
icebp
mov
lods
and
jg
je
daa
xchg
pop
and
jg
mov
ja
in
sub
loope
xchg
cld
jp
es
jo
repnz
xchg
aaa
adc
filds
cmpb
jmp
mov
mov
in
shrb
sub
sahf
loope
orl
mov
icebp
or
push
lcall
jmp
fsub
pop
push
push
and
inc
push
int3
decl
test
mov
fidivrl
arpl
clc
ret
lods
inc
ljmp
push
ficompl
push
pop
or
movsb
push
test
mov
dec
lcall
push
jns
std
das
clc
or
push
mov
jmp
xchg
jmp
mov
push
xchg
outsl
in
ja
mov
loop
adc
xchg
out
sbb
dec
push
lock
mov
lret
jg
out
mov
or
push
mov
ljmp
iret
jle
lahf
stc
inc
or
ret
inc
and
scas
push
jg
dec
pop
or
cmp
push
add
add
add
js
inc
jl
addb
lock
mov
clc
push
dec
aad
lret
adc
dec
jnp
lcall
lods
rclb
sub
adc
inc
test
pop
push
sarb
mov
add
push
sbb
push
or
es
jae
and
add
insl
push
sbb
outsb
or
mov
inc
andb
add
inc
add
and
cli
inc
push
sub
xor
xchg
movsb
add
push
sbb
or
add
adc
jb
pop
fwait
ret
jae
xor
fsubrs
in
mov
mov
or
jnp
xorb
and
xchg
or
popf
dec
ljmp
int
insb
push
ss
das
loope
dec
popa
sbbl
mov
jns
outsl
push
data16
mov
popa
jb
push
imul
push
fsubrs
push
popa
imul
cmpsb
mov
sbb
lcall
mov
mov
loopne
andl
outsl
fnstcw
push
insb
sbb
pop
scas
or
fdivl
push
shlb
fists
add
shlb
xchg
lea
push
jo
andl
cltd
cmp
ret
cmc
add
push
repz
nop
mov
and
dec
dec
movsb
push
dec
xor
test
sahf
ret
sbb
out
lret
gs
inc
cmpsl
jmp
aaa
or
mov
jne
addr16
mov
or
adc
jp
xor
ss
pop
sub
clc
jo
loopne
mov
xor
push
mov
jae
cmp
sbb
push
rcrb
popa
negl
inc
push
push
ja
outsl
cltd
adc
mov
je
insl
lds
clc
pop
pop
notb
push
jns
pop
fstpt
inc
jae
adc
call
push
outsb
nop
loopne
mov
leave
gs
adc
cmp
lods
insb
mov
push
mov
xor
inc
hlt
ret
mov
dec
into
xchg
dec
nop
mov
xchg
push
sub
xor
push
outsb
fs
cld
in
insl
movsb
push
pop
imul
pop
jo
outsb
aaa
mov
mov
loope
push
imul
das
sbb
icebp
call
outsl
pop
push
ficompl
inc
xchg
fdivs
mov
pop
sbb
fstpl
fisttpl
and
inc
push
jg
pop
ficoml
popa
dec
inc
dec
fcmovne
sub
jnp
inc
test
or
arpl
fimull
jne
xorb
hlt
mov
into
push
sbb
out
ret
jecxz
add
inc
test
mov
lods
jecxz
daa
jge
aas
mov
inc
je
sti
popa
mov
jo
push
xor
enter
push
sti
test
lock
stos
lcall
push
xchg
in
ret
mov
insl
sbb
sbb
push
fiaddl
jne
add
mov
lahf
push
mov
xor
idivb
pop
sub
sbb
fs
xor
jns
nop
adc
pop
and
mov
dec
and
push
adc
or
or
pop
adcl
pop
mov
addl
sbb
add
mov
subb
dec
adc
imul
je
and
cmp
adc
je
mov
sbb
inc
push
mov
gs
ja
lea
inc
push
fisubrl
sti
movsb
xchg
xor
fsts
and
adc
aad
jge
mov
jbe
mov
popf
mov
jbe
inc
and
sub
arpl
and
sub
je
inc
sbb
xchg
add
in
jmp
mov
add
xor
int
rcrb
outsb
jno
jb
cmp
pop
roll
jbe
adc
imul
push
inc
imul
outsb
jne
bound
test
sbb
test
pop
inc
sbbl
inc
xchg
inc
push
sub
imul
push
das
jns
cmp
push
jne
inc
scas
cltd
jb
sub
shll
mov
jl
cmp
inc
jne
sbb
add
gs
mov
xchg
ja
test
push
and
jns
inc
arpl
js
jo
lods
test
dec
pop
cmp
andl
xchg
mov
fadd
pop
sub
or
dec
out
nop
test
pop
ss
jg
pop
cmp
jns
push
inc
scas
mov
mov
push
pop
imul
loopne
loop
cmp
mov
dec
xlat
inc
ror
add
sbb
and
negl
inc
imul
sbb
cmp
mov
fstps
or
pop
xchg
call
lret
pop
cmp
jo
inc
sub
inc
insb
sub
rcpps
js
adc
jb
inc
inc
inc
shll
xlat
lret
out
and
in
inc
imul
fucomi
insl
leave
xor
ja
mov
cmpsl
scas
xor
sbb
bnd
push
outsl
mov
shll
sub
push
popa
xchg
scas
xor
hlt
and
outsl
xchg
hlt
mov
xchg
mov
dec
jne
aaa
xor
push
jns
push
sti
js
inc
mov
push
and
xchg
dec
data16
or
mov
or
xor
int3
fincstp
xorb
dec
push
push
pop
xor
adc
adc
jle
push
nop
fnsave
sbb
push
sub
inc
mov
pop
sbb
inc
xchg
and
dec
and
push
cltd
add
das
out
sub
lods
xor
sub
imul
lcall
dec
xor
imul
lcall
or
movsb
dec
mov
lcall
or
shll
or
mov
pop
into
cmpsl
mov
cmp
repnz
pop
add
inc
add
mov
xchg
and
or
sbb
and
mov
or
xchg
outsb
pop
or
insl
mov
sub
dec
sbb
adc
imul
dec
out
test
pop
push
mov
inc
insb
scas
push
in
add
add
xor
xchg
enter
sbb
and
cmp
icebp
mov
mov
out
out
lods
or
inc
sbb
movsb
cmp
jo
and
adc
jne
mov
mov
lcall
jne
xorb
dec
andb
enter
in
sbb
push
xchg
push
aas
ss
data16
pushf
xor
int3
test
js
push
xchg
xchg
lods
ret
push
sbb
jbe
jle
sub
push
push
inc
outsl
inc
inc
xor
cmp
pop
lret
inc
lock
jns
mov
mov
or
insb
mov
or
popw
xlat
adc
or
mov
sbb
mov
gs
arpl
xchg
xor
inc
jbe
enter
insb
mov
sbb
sbb
adc
mov
mov
jbe
adc
addr16
arpl
adc
sub
iret
mov
insb
test
mov
xchg
mov
dec
insl
dec
inc
push
adc
sbb
adc
push
jo
test
dec
cld
addr16
jo
adc
inc
lods
sub
jne
pop
xor
push
jg
add
push
mov
mov
sbb
push
mov
fs
mov
sbb
adc
add
inc
xchg
and
cmp
push
out
mov
push
xchg
cmp
daa
outsb
pop
push
jo
mov
push
ret
aas
std
imul
push
jne
loope
xchg
xor
push
stos
xchg
lods
mov
xchg
jbe
aam
ret
inc
sbb
jbe
mov
lds
mov
jns
mov
movsl
pop
inc
push
push
inc
xchg
incl
sub
and
dec
jmp
xlat
push
or
fisubs
in
arpl
add
sbb
outsb
inc
test
or
cmpsl
dec
dec
ja
imul
shll
add
aaa
ret
pop
sub
push
dec
push
shlb
inc
rcl
and
movsl
dec
jmp
clc
sub
gs
aas
or
dec
add
dec
mov
dec
fnsave
or
enter
neg
push
cmpsb
add
stos
aas
push
adc
or
cltd
sub
scas
sbb
insl
or
lldt
decb
jae
pop
cmp
adcl
prefetch
call
mov
insl
mov
push
loopne
jmp
fadds
imul
add
cmpsb
cs
cld
movl
xlat
add
and
jb
or
push
add
nop
out
in
dec
in
cmp
out
inc
cs
add
jo
cmp
pop
push
dec
rcrb
jb
pop
bound
push
sbb
stos
jbe
mov
inc
pop
dec
ret
xchg
sbb
cmpsb
rorl
add
and
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
