divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
pop
add
enter
add
mov
punpckhwd
add
add
bound
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
imul
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
xchg
and
sub
jbe
sbb
pop
dec
push
cmp
push
lock
in
lock
cs
loop
inc
mov
and
mov
shll
into
mov
jno
inc
lret
push
push
cwtl
in
add
in
inc
push
fldenv
or
jmp
mov
push
add
aaa
sti
fnsave
adc
push
lods
push
clc
pop
inc
add
fdiv
add
sbb
or
ret
add
cmp
add
pop
mov
push
in
sahf
or
or
push
cmp
rcl
fcmovb
rolb
cmp
sbb
sbb
xor
add
sub
dec
in
inc
les
lcall
stc
sub
in
daa
dec
in
push
call
loope
pop
sub
sahf
or
adc
call
jmp
and
push
push
fisttps
add
in
inc
inc
mov
xchg
pusha
xor
pop
sbb
mov
repz
add
push
or
cmp
inc
cmpsb
push
mov
jae
jno
out
loopne
js
fs
sahf
cmp
fsubs
pop
inc
mov
or
pop
mov
aaa
jb
mov
mov
into
adc
rolb
mov
push
inc
cmp
jae
xchg
sarb
pop
stc
out
mov
add
mov
sbb
add
outsl
mov
sub
push
mov
push
cmp
xor
lock
ret
push
adc
add
sbb
iret
push
pop
cmp
push
add
xchg
push
sub
pop
mov
and
mov
jge
arpl
dec
lock
add
call
out
addl
jb
xor
rcr
setge
sub
fbstp
popf
push
and
or
lahf
xor
dec
lock
sbb
jo
jnp
vmovmskps
pop
add
push
or
loopne
rcl
adc
mov
sahf
and
loope
es
xchg
xor
lahf
out
pusha
or
push
or
cmp
and
or
and
or
repz
push
xor
aas
bound
add
lods
punpckhdq
mov
lock
mov
int3
push
clc
cltd
mov
add
stos
inc
jmp
push
sbb
sbb
cmp
cmp
sbb
into
ret
push
stmxcsr
sub
cld
push
add
loop
stc
mov
ss
and
sbb
adc
es
addl
sub
push
add
adc
xor
sub
adc
cs
inc
shr
and
pmulhw
sbb
je
jmp
adc
dec
test
into
pop
and
cmp
and
adc
and
adc
je
ss
repz
pop
aad
movhps
push
xlat
mulb
ret
out
push
cmp
pop
sbb
sarl
or
jne
or
cmp
shlb
pop
adc
jmp
std
cmp
imul
jmp
aad
enter
scas
les
xor
mov
in
pop
pop
test
pushf
xchg
mov
mov
mov
sbb
out
lahf
lds
push
loope
pop
push
cld
lock
jle
jo
std
xchg
loopne
test
push
push
pop
push
push
mov
cmpsb
call
cmp
fiaddl
aaa
fwait
jns
jl
or
notl
mov
std
lock
sub
push
xchg
idivl
xor
cmp
sub
imul
xchg
mov
shrb
test
mov
movsl
cltd
mov
test
jl
or
ds
lret
inc
mov
adc
pusha
rclb
fs
mov
cmp
jl
stos
mov
jae
adc
mov
int3
cmp
je
adc
mov
lea
mov
mov
aaa
je
scas
std
push
enter
cmp
cli
mov
jmp
pop
jno
or
inc
insb
sub
add
mov
add
dec
mov
adcb
dec
hlt
cmp
imul
pop
or
inc
cwtl
sbb
jae
or
jge
mov
xchg
and
cmp
cs
pusha
ror
pop
stos
xchg
stos
xor
pop
mov
mov
fiaddl
xor
ret
sbb
gs
push
cmpsl
bound
xor
data16
leave
ret
push
mov
xchg
fcomps
jbe
fisubrl
dec
insl
icebp
sbb
cli
inc
push
ljmp
mov
cmp
cmp
inc
and
cmp
jne
pop
mov
loopne
xchg
sub
fs
mov
cmp
je
sub
dec
pushl
pop
in
adc
fmull
rclb
adc
dec
mov
xchg
dec
pop
fnstenv
shlb
mov
inc
lcall
or
push
push
mov
cmp
pop
push
sub
pop
jo
add
sub
sub
call
mov
test
lahf
out
ljmp
inc
cmp
jl
jmp
pop
and
mov
cmp
push
push
pop
fdivrl
jmp
sub
add
add
pop
test
mov
ret
mov
out
push
ret
icebp
mov
push
test
rolb
sbb
pop
mov
or
sbb
mov
mov
cmp
loope
adc
stos
push
fiadds
jns
jo
addl
or
jmp
sub
dec
ss
loope
inc
push
push
mov
xor
pop
mov
or
lret
cmp
pusha
adc
fists
and
sbbb
test
push
data16
loopne
sub
shr
addr16
mov
dec
mov
fsubp
dec
outsl
scas
stc
test
jne
pop
ja
fcompl
adc
or
pop
dec
inc
jg
imul
add
pop
or
jne
js
sub
pop
cmp
mov
jge
subl
adc
xchg
cwtl
cmp
je
jno
mov
add
sub
sbb
dec
rcll
push
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
addr16
adc
inc
leave
ret
mov
pop
dec
icebp
cmp
cmp
push
add
cs
fsubrs
or
sbb
push
clc
std
or
sbb
cwtl
call
pop
adcb
mov
rorb
pop
mov
jmp
xchg
in
sbb
add
push
repnz
icebp
cmpb
repz
push
ja
lea
decb
pushl
xor
sub
cmp
push
xchg
pop
pushaw
lock
fsubl
pop
pop
arpl
adc
pop
xor
orl
fcoml
test
je
add
shlb
mov
iret
test
insl
pop
push
push
movsb
mov
xor
pop
jle
je
ljmp
imul
push
and
sbb
push
popl
adc
pop
and
pop
xchg
mov
inc
mov
loopne
je
hlt
adc
or
shll
mov
icebp
mov
imul
add
ret
add
aas
ficomps
sub
push
mov
cmp
lds
aaa
fs
cmp
je
jnp
push
roll
cmp
jne
push
push
imul
jo
ret
jl
pop
jmp
rcrl
sbb
fmuls
pop
cmp
arpl
xor
mov
inc
sub
inc
or
sbb
enter
add
adc
ds
jl
push
inc
clc
jg
inc
fimuls
movb
or
in
int3
mov
jae
lds
lods
add
lods
push
stc
cmp
adc
cmp
add
mov
ret
outsl
or
sti
rcrb
mov
cmp
jb
das
inc
pop
xchg
sub
xchg
and
sbb
fiadds
outsl
and
or
jne
test
pop
mov
in
dec
push
push
call
push
mov
ret
adc
xor
int
add
pop
pop
fsubl
jne
mov
cli
pushf
mov
sbb
out
pop
push
fdivrp
mov
mov
push
ret
push
mov
mov
push
push
out
lods
clc
mov
aad
pop
mov
inc
or
push
or
jae
cmpsl
ds
loop
add
clc
mov
mov
addb
icebp
cli
loop
lahf
cmp
xor
cmpl
jle
push
cmc
negb
outsb
cmp
jmp
mov
mov
ret
mov
aam
ret
shlb
push
out
cmp
pop
pop
jecxz
inc
cmp
push
sub
call
cmp
mov
in
stos
mov
jbe
inc
add
mov
push
adc
adc
adc
pop
push
lcall
jl
xchg
ljmp
out
fimuls
jge
bound
hlt
mov
xor
ret
adc
lock
fs
outsl
lock
cmp
ret
push
lds
orl
mov
dec
cmp
sarb
xlat
xlat
sahf
and
mov
les
xor
int
and
or
jb
shll
lea
daa
or
push
shrl
add
or
push
and
push
je
fistpl
jmp
pusha
out
iret
clc
and
out
call
mov
mov
adc
mov
pop
pop
jmp
mov
shlb
fs
mov
adc
dec
dec
or
ficoms
sbb
loope
mov
pop
sbb
pop
stc
testb
je
or
std
jno
shll
rorb
std
ljmp
inc
mov
enter
add
mov
or
mov
inc
or
fidivl
nop
cmp
cmc
push
pop
rolb
scas
mov
inc
and
lcall
or
sbb
test
mov
or
shrl
ret
push
push
rcrb
mov
mov
lods
fcmovnbe
fidivl
sbb
and
fucomip
repnz
sbb
sbb
sbb
scas
lock
add
push
stc
lods
popa
cmp
pusha
push
sub
into
adc
pop
lock
xchg
cmp
ss
out
lods
mov
adc
dec
xor
add
adc
scas
fsubrl
pop
mull
dec
or
mov
test
cmp
ja
testl
stc
movups
and
test
add
inc
pop
sbb
push
cmp
mov
lcall
push
cltd
pop
testl
mov
inc
cmp
push
jle
push
jb
jmp
push
test
mov
dec
sbb
adc
and
mov
mov
sub
cwtl
push
jbe
call
jmp
enter
and
cmpsb
mov
and
jmp
sub
dec
je
push
xchg
in
std
adc
in
jge
adc
sub
ss
mov
jo
pushf
jmp
or
cltd
ret
int
addr16
jbe
jp
jecxz
pop
jne
jp
lea
jmp
add
add
ss
or
call
xchg
push
add
mov
scas
adc
or
or
clc
adc
push
mov
xchg
xchg
mov
loope
fimuls
loope
xchg
and
push
sbb
jg
or
push
sub
stos
in
pushl
js
inc
push
in
in
mov
adc
divb
mov
adc
jmp
es
push
cmp
je
cmp
and
jmp
inc
sbb
leave
adc
adc
mov
add
fstpl
imul
shlb
scas
push
and
push
jmp
jno
pushf
and
jmp
data16
sbb
mov
mov
repnz
and
iret
repz
das
inc
pop
push
repz
loop
mov
push
fs
push
cld
sbb
cld
cmpsb
cld
jo
jnp
mov
fstl
push
outsl
dec
adc
and
pop
mov
hlt
clc
movb
add
or
mov
scas
add
loop
das
dec
push
roll
and
and
push
pop
push
lea
push
sbbl
mov
push
lea
js
lret
dec
cmp
mov
cmp
inc
les
pop
or
ds
add
scas
dec
inc
popf
jge
mov
dec
adc
movl
push
or
mov
push
sbb
lea
cmpsl
insl
mov
cmpsb
jo
and
mov
jo
call
add
add
clc
push
ja
ja
mov
cmpsl
jmp
jo
pushf
lret
xchg
push
test
mov
sbb
jns
inc
and
push
fnstenv
push
inc
jmp
mov
sub
mov
and
push
add
mov
imul
imul
pop
inc
xchg
in
adc
inc
mov
add
aas
adc
and
mov
loop
adc
dec
dec
rclb
mov
add
shlb
xor
mov
add
xor
mov
imul
ja
loop
shl
pop
push
inc
cmp
xchg
xchg
in
jnp
push
push
push
xor
mov
aas
iret
cmp
stc
push
push
push
xchg
push
loop
add
lods
push
sub
sahf
dec
pop
jmp
clc
add
push
jmp
outsb
mov
lea
je
in
mov
test
mov
lea
jle
gs
and
cmpl
add
mov
sbb
clc
pop
sbb
lds
cli
hlt
dec
pusha
imul
xchg
push
ljmp
adc
clc
push
in
decl
popf
xor
mov
pushl
mov
adc
in
in
mov
dec
adc
mov
dec
lea
or
jmp
pop
cmp
je
dec
call
pop
sub
cltd
sub
sar
add
bound
in
in
aaa
daa
dec
dec
in
cmp
push
mov
add
fwait
cmpsb
fnstenv
adc
dec
cmp
daa
jns
rcrb
out
mov
push
add
inc
leave
mov
pushf
or
adc
mov
repz
mov
stos
add
sbb
pop
pushf
jmp
or
push
jle
mov
push
mov
mov
inc
js
dec
mov
mov
neg
sbb
and
and
cmp
add
out
pop
andl
inc
mov
inc
xchg
xchg
jbe
add
mov
lcall
or
jno
lahf
push
insb
mov
sbb
push
mov
clc
push
lea
cmpsb
inc
mov
sbb
and
test
aas
mov
sbb
adc
call
dec
push
call
out
mov
push
in
test
and
mov
push
sbb
pop
loope
mov
je
push
mov
inc
lock
test
imul
or
push
repnz
shll
push
popa
hlt
add
jo
mov
daa
ds
sub
mov
jge
add
jge
or
jne
adc
dec
je
mov
cmp
xchg
sbb
cwtl
pop
push
add
mov
jg
jmp
mov
jge
pop
push
andl
push
pop
ror
rorb
int3
mov
es
mov
mov
popa
pop
lds
outsb
aas
js
push
push
fnstenv
lods
dec
sub
outsb
lret
in
cmp
hlt
movb
add
lock
push
es
fldz
bound
inc
enter
ret
scas
insb
movb
mov
aas
mov
icebp
or
push
add
out
cmp
xchg
pop
dec
pop
adc
into
addl
or
test
jne
pop
flds
loopne
mov
and
popf
push
xlat
cltd
xor
dec
xor
pusha
into
xor
inc
xchg
jle
xlat
into
or
dec
push
lea
cmp
pop
std
add
insl
jbe
adc
cmp
mov
push
data16
mov
cmp
or
sub
fldln2
je
push
and
push
sub
cmp
loopne
or
nop
or
movl
call
jb
jl
addl
cwtl
push
cmp
pop
into
push
stos
jo
mov
push
adc
cmp
or
dec
lock
sbb
outsl
scas
into
lods
sub
shll
iret
enter
addb
xor
inc
pop
and
pop
push
xchg
aam
cmpb
das
int
adc
test
in
add
xor
imul
test
inc
pusha
fmull
push
iret
shl
in
aam
add
and
add
outsb
pop
push
cmp
pop
rcrl
leave
and
popf
lock
faddl
es
pop
or
fcoms
sbb
cwtl
rcrl
sbb
ds
rorb
hlt
add
or
push
icebp
sbb
or
jne
pushf
and
fidivs
sarl
or
arpl
dec
push
add
mov
ds
addl
fstl
pop
sub
mov
adc
jle
mov
xchg
pop
dec
jle
xchg
addr16
or
add
xor
out
rorl
js
ret
cmp
in
push
mov
daa
push
mov
inc
dec
add
cltd
inc
or
or
xchg
imul
addb
adc
pop
mov
xchg
or
insl
cmpb
cmp
cli
cmp
cmp
pop
rcll
popf
inc
or
xchg
xchg
push
clc
mov
cs
sub
push
push
add
ss
pop
adcl
repz
dec
call
es
push
orb
test
shlb
test
mov
adc
insb
push
inc
push
in
imul
jl
xor
call
push
inc
fisttpll
and
sbb
cmp
inc
ret
xchg
xchg
stc
or
cmp
dec
fsub
in
mov
cmp
inc
insb
andb
imul
inc
push
xchg
jp
cwtl
mov
mov
out
add
dec
mov
aas
mov
cltd
mov
add
sar
push
push
js
or
adc
or
sbb
adc
scas
out
in
lock
adc
in
add
mov
idiv
push
pop
push
mov
dec
jmp
xor
idiv
jle
mov
jg
mov
fwait
aaa
jp
mov
add
jne
nop
mov
cmp
push
jbe
adc
dec
xor
fstl
insb
adc
int
jp
jne
sti
jge
test
adcl
mov
adc
sub
out
call
push
ljmp
movsb
sti
sub
xchg
mov
je
test
pop
lea
cltd
idivl
jg
add
cli
xor
fisttpl
pusha
jl
xlat
jge
jg
fs
or
xchg
sti
xchg
scas
arpl
mov
test
or
jbe
lahf
jl
fldt
sub
sbb
add
bnd
cltd
push
fstpt
add
pop
inc
pop
xchg
imul
sub
cmp
or
jmp
jge
jmp
mov
lods
sub
inc
hlt
pusha
or
ds
not
add
or
sub
xor
mov
fdivrp
mov
dec
sub
mov
shr
pop
sbb
pop
add
fiadds
or
xchg
pop
jl
jmp
rolb
xor
push
mov
and
loope
or
clc
fidivl
jmp
outsb
mov
jmp
gs
jmp
mov
or
jl
dec
lcall
icebp
xor
nop
push
mov
aad
xor
aaa
fmull
test
push
lea
push
stos
mov
jmp
cld
push
or
and
sbb
mov
rcrb
lahf
je
je
push
mov
lret
je
or
pop
xchg
mov
xchg
jns
push
jmp
sbb
jle
xor
push
cmc
add
sti
or
cld
nop
adc
pushf
pop
addr16
aam
subb
add
arpl
clc
test
call
push
std
pushf
sbbb
cltd
xor
mov
xchg
aas
xchg
dec
push
xchg
pop
das
jne
mov
xchg
jo
push
rcll
add
cs
loopne
jmp
add
push
leave
xchg
pop
je
or
inc
pop
push
out
and
cld
jo
popf
push
lea
push
mov
push
mov
pop
push
dec
repnz
mov
push
sahf
and
les
pop
push
mov
sti
scas
push
subl
dec
push
dec
add
push
add
jne
or
or
cmpsb
xchg
or
aas
xchg
sahf
mov
pop
adc
add
sbb
ret
push
jg
movsl
pusha
or
jp
push
add
std
adc
xchg
sbb
jnp
push
pushf
adcb
or
dec
mov
insb
adc
fs
int3
and
and
push
pop
add
mov
xchg
mov
clc
loope
icebp
ret
mov
mov
add
xchg
cmp
or
popa
dec
cs
xor
leave
xchg
sbb
mov
leave
ja
inc
and
and
or
lahf
rolb
adc
fidivrl
xor
loope
dec
xchg
mov
pop
cmp
adc
movsl
mov
add
push
leave
clc
lods
clc
add
clc
setb
test
jne
mov
sarb
dec
sub
sar
hlt
data16
dec
dec
adc
pop
add
fwait
add
ds
adc
mov
shll
push
pop
mov
pop
jmp
mov
mov
nop
lock
push
hlt
mov
lcall
shrb
inc
sbb
cmpsl
cmp
and
cmp
push
sbb
dec
out
hlt
lcall
imull
call
or
push
shlb
pop
or
adc
mov
test
mov
std
fdivrs
jae
shr
lods
adc
cs
add
cmp
adc
push
pop
aad
test
int3
xor
clc
or
and
fmull
push
je
and
je
in
sbb
jnp
push
mov
or
pusha
inc
aam
fisttps
pop
rorl
or
inc
jg
rolb
shlb
xor
or
movl
add
adc
movl
cmp
popa
into
mov
inc
mov
loopne
mov
sbb
xor
jl
insl
ja
outsl
xchg
mov
test
and
add
pop
lods
out
add
rolb
pop
pop
enter
mov
add
pop
and
or
in
sbbb
xchg
ret
test
je
inc
lock
clc
push
mov
adc
jne
push
lea
loop
pop
sbb
jo
testb
jmp
call
sbb
or
push
sahf
mov
mov
fcompl
cmpsb
and
sahf
mov
jg
inc
adc
add
xchg
test
lcall
and
lahf
divps
sub
jb
or
cmp
or
add
loopne
es
push
add
in
sbb
inc
or
mov
daa
repnz
add
or
nop
xchg
jl
sub
add
nop
mov
jb
lock
dec
or
sub
mov
inc
insl
lcall
lcall
xor
decl
inc
repz
call
mov
push
pop
fisubrl
rcll
cmp
shrl
shl
adc
or
xchg
movb
fcomp
call
push
inc
fmuls
push
pop
or
xor
xor
xor
stos
inc
rep
lea
or
filds
scas
xchg
add
or
and
jne
adc
mov
and
sbb
bound
mov
cmp
sub
es
or
push
fstpt
or
dec
add
adc
or
and
xchg
push
xchg
adc
add
lea
push
test
pop
mov
mov
ss
mov
pusha
scas
add
pusha
jmp
aaa
ss
frstor
cs
popf
inc
push
jge
jno
mov
mov
call
outsb
out
nop
add
jne
dec
pop
in
add
sbb
stc
sub
push
sub
add
shrb
pop
test
pop
lea
adc
aam
call
xchg
xchg
pop
inc
push
xchg
es
jp
mov
leave
jg
imul
push
mov
sbb
sbb
add
or
push
and
shl
daa
add
jmp
jo
pushl
shl
fdivl
mov
loopne
sbb
inc
adc
mov
ds
adc
jge
jl
bound
shlb
fsubrp
adc
or
adc
push
in
mov
or
dec
and
mov
fld
hlt
outsl
test
sbb
arpl
cmp
mov
scas
push
scas
adc
fdivrl
push
loopne
mov
outsb
or
pop
addr16
dec
minps
push
repnz
je
addb
push
fadds
adc
pop
enter
mov
xor
in
mov
mov
jno
push
movl
inc
mov
add
add
mov
inc
push
into
iret
push
scas
adc
add
ret
js
insb
in
call
neg
sbb
bnd
dec
lahf
sbb
xor
inc
and
popf
fidivs
pop
addb
jno
or
enter
insb
sub
cmp
jo
aam
push
lods
lahf
nop
xchg
pop
inc
rolb
nop
scas
pop
mov
adc
pop
push
mov
cmp
inc
sub
rorb
mov
mov
push
mov
pop
movnti
add
dec
push
lahf
jne
cli
adc
or
fmuls
pushf
ja
or
jecxz
sub
fsubr
push
sub
add
jmp
cmp
jmp
loope
rorb
adc
in
push
in
sub
adc
sbb
or
popa
jo
rcrl
loope
decl
ror
movsb
inc
adc
cmp
repnz
jne
loopne
test
pushf
xor
inc
or
imul
sbb
cmp
lcall
or
rorb
mov
inc
mov
push
lret
cmp
test
iret
lcall
sbb
mov
pop
cmpb
push
mov
push
fldenv
rclb
cwtl
sub
adc
lcall
cmp
jne
out
dec
xor
pop
mov
inc
jecxz
mov
mov
adc
cwtl
lea
sub
movsb
sbb
push
mov
sbb
pusha
push
inc
shll
aaa
adc
dec
outsl
rorl
lods
and
add
sbb
mov
mov
and
xor
shll
pop
rcrb
or
ja
aaa
and
pop
adc
sbb
sub
and
mov
add
sti
pop
movsb
cmp
cmp
in
cmpsb
imull
adc
add
repz
or
and
lods
fcoml
add
inc
jle
nopl
sldt
sub
cmpsb
hlt
xchg
sbb
sub
iret
or
cmc
adc
sub
rclb
sub
xlat
jb
cmp
sub
xchg
mov
rclb
sar
dec
adc
mov
xor
or
dec
ds
out
push
push
cld
inc
mov
inc
add
js
scas
jno
add
aad
push
xor
adc
add
or
fdivs
pop
push
or
jbe
bound
rcl
push
pop
cmp
or
stc
icebp
stc
addl
add
cld
pop
pop
push
cli
je
mov
jmp
xor
mov
int
xor
popf
lock
adc
or
dec
add
gs
dec
mov
imul
insb
push
mov
in
sub
fnsetpm(287
dec
dec
mov
loope
js
inc
outsl
adc
js
jo
fimuls
test
faddl
xor
xor
ret
pop
lcall
iret
cltd
popa
punpckhwd
pop
jl
insl
or
movb
add
mov
gs
push
xlat
jl
ret
jo
mov
or
mov
and
idivb
jo
jle
call
pop
mov
cwtl
cmp
je
inc
jmp
mov
lret
add
inc
ret
lcall
inc
mov
int
cmp
add
mov
ret
in
pop
cmp
and
mov
push
xlat
jne
orl
and
popa
sbb
mov
test
outsl
testb
lcall
gs
and
xor
inc
dec
call
bound
insl
in
test
movsl
sub
inc
or
jno
and
inc
dec
or
or
dec
jae
mov
pop
dec
movl
add
bnd
or
add
repnz
scas
or
add
test
shrl
lret
or
or
out
sbb
insl
enter
xchg
arpl
testl
in
jl
dec
mov
hlt
ja
pop
ret
xchg
pop
rorl
negl
or
call
and
or
sbb
nop
cmpsl
jb
call
xchg
or
inc
inc
push
xchg
data16
and
stos
sbb
push
inc
add
rclb
add
and
int
pop
inc
adc
js
sub
cmpl
mov
xchg
xor
push
xor
jno
outsb
mov
bnd
imul
loop
repz
pop
or
adc
rcrb
adc
ss
jg
iret
dec
mov
icebp
adc
cmp
jae
adc
adc
push
ss
and
test
stc
je
adc
lock
out
repz
nop
cs
inc
add
inc
enter
add
stc
icebp
xchg
std
add
call
cmp
mov
sbb
pop
push
xchg
lret
cmp
jp
lahf
imull
mov
pop
push
icebp
adc
sbb
add
push
out
test
inc
push
fsubl
gs
push
push
std
in
gs
daa
sbb
enter
gs
and
pop
adc
mov
stos
sbb
fsubrl
sbb
add
or
cmp
pop
jno
jns,pn
adc
cmpsl
sbb
je
jmp
out
push
jae
sbb
push
inc
insl
mov
cmp
imulb
ficomps
andl
icebp
mov
and
mov
xor
filds
jae
movups
pop
and
int
xchg
icebp
adc
ljmp
outsb
fwait
dec
mov
lcall
lea
pop
add
cmpl
pusha
lds
or
mov
xchg
sub
movsb
repnz
sbb
popf
push
cld
xchg
ret
std
jge
jbe
pop
jg
stc
jne
push
cmp
pusha
xor
sbb
sbb
mov
and
and
fimull
mov
and
xchg
dec
jle
sbb
or
cmp
jne
push
pop
ret
adc
pop
nop
test
jge
mov
fstps
sub
xor
aas
jbe
adc
jl
movl
push
mov
push
push
orb
push
roll
jge
or
je
mov
jno
cwtl
add
cmc
push
push
jl
sub
jne
mov
jne
les
xor
sbb
imul
xor
mov
imul
xchg
int3
xor
mov
sub
imul
push
daa
cmc
shlb
push
push
jae
xor
ret
dec
xchg
push
ffreep
xor
rcll
cmp
jns
loopne
sbb
sub
inc
test
jo
mov
mov
cmp
inc
push
testb
sti
xor
sbb
jl
sub
mov
fs
add
aas
cmp
dec
jns
into
mov
test
pop
out
add
inc
sub
and
pop
cmpsb
cmp
push
xor
loope
push
cmpsl
or
popf
or
aam
add
push
aad
imul
push
sahf
dec
xchg
xor
in
test
mov
push
fs
movsb
xor
stc
or
pop
jmp
pop
push
and
aam
pushf
xor
ljmp
roll
mov
and
in
or
movl
ret
fisttpl
lock
test
xchg
lea
imull
push
call
cwtl
mov
mov
push
pop
popf
add
push
sub
or
sub
push
jmp
dec
ljmp
and
mov
popf
xor
in
or
loopne
inc
adc
and
xor
push
in
sbb
xor
xor
cmp
xor
cmpsl
pop
adc
inc
lods
cmp
adc
mov
roll
aam
in
push
aaa
jo
mov
les
mov
fimull
dec
inc
aaa
out
sub
xchg
sbb
fs
dec
ljmp
mov
clc
xchg
mul
cmp
setne
inc
loopne
or
sti
cmp
jne
sti
aas
push
push
push
aam
jmp
jmp
mov
cmp
jne
push
push
push
loopne
xor
sbb
jno
jno
call
mov
inc
pop
outsb
push
outsb
pop
rclb
sbb
ret
lods
push
push
cmc
lods
mov
adc
test
mov
scas
xor
or
inc
nop
push
and
cmp
lret
sub
dec
imul
add
dec
mov
add
sete
out
jg
jne
push
pop
daa
pop
out
adc
or
sbb
jmp
mov
mov
push
push
std
cmp
test
push
mov
xchg
int3
or
add
or
sub
mov
jno
add
and
cli
mov
mov
add
mov
dec
or
mov
push
push
je
movsl
xchg
xor
or
mov
add
and
ret
dec
cmp
in
push
add
cs
ror
pusha
arpl
cs
add
pop
or
ret
lret
sbb
and
push
and
scas
inc
lods
sub
add
lcall
add
mov
xchg
dec
loope
mov
adc
sub
jne
sbb
push
orb
jmp
jnp
inc
fwait
test
xchg
cmp
jmp
in
sub
in
ja
aad
insb
repnz
scas
daa
xchg
add
jo
imul
push
adc
out
scas
inc
cli
pop
mov
mov
and
sub
inc
xlat
lods
mov
out
push
mov
mov
mov
das
inc
jle
xor
add
add
push
push
data16
std
adc
mov
lahf
mov
mov
pop
mov
or
cld
stos
mov
test
adc
push
sub
inc
adc
rorl
movsl
shl
push
pop
jo
add
push
cmp
leave
jb
mov
push
mov
nop
sub
cld
cli
insl
fmul
std
test
cli
into
xchg
arpl
test
ret
loopne
mov
sub
loope
cwtl
add
sbb
mov
push
pop
lods
ja
xchg
ficoml
shlb
push
repz
add
lock
push
push
xor
or
repz
xor
mov
stos
or
ds
out
xchg
orb
inc
pop
cwtl
or
dec
test
xchg
out
jg
cmp
jbe
stos
push
lock
call
add
push
pop
icebp
loop
inc
add
push
inc
add
adc
xlat
imul
mov
test
cmp
icebp
cmpsb
pop
sbb
in
add
xchg
jmp
sub
sbb
stos
rcrb
outsl
fistps
daa
xchg
int3
sub
pop
imul
mov
cmpsl
pop
add
dec
sub
mov
lds
push
and
mov
xchg
adc
mov
mov
lret
into
lock
addr16
adc
shll
sbb
or
lcall
add
cmp
jae
push
sub
sbb
mov
cwtl
shl
and
daa
sub
shll
mov
add
inc
inc
cmp
cmp
dec
hlt
jge
jg
ljmp
add
mov
outsb
nop
pop
sbb
test
rorb
mov
jmp
stos
addr16
xor
ljmp
pusha
pop
test
jmp
dec
inc
jecxz
and
push
cmp
jg
and
shl
push
xor
add
push
jmp
loop
sub
fildl
mov
hlt
mov
inc
cld
cltd
and
push
jbe
leavew
arpl
shrl
cmp
xchg
or
enter
add
pop
or
mov
nop
mov
inc
into
sub
cmp
add
or
fdivs
es
xorb
les
jns
push
sbb
cmp
inc
jae
mov
cmp
push
adc
mov
shlb
cwtl
mov
jne
jle
sbb
enter
and
adc
xlat
sbb
push
cmpsb
cmp
add
xchg
jge
or
roll
push
cli
cmp
mov
mov
mov
xor
inc
mov
fsubrs
and
dec
fdivr
cmp
dec
or
call
push
sti
lret
jne
mov
push
inc
loopne
fnstcw
push
in
sub
xchg
and
rcll
mulb
mov
sbb
add
push
pop
xor
jge
mov
sbb
or
mov
push
lds
cli
or
lret
aad
andl
or
insl
cmc
or
add
movsb
jb
lea
jno
jecxz
ljmp
jo
arpl
cmpsb
mov
or
cmpsb
movl
in
mov
push
es
push
sbb
jne
leave
pcmpeqw
stos
cmp
mov
arpl
add
mov
mov
and
lods
cli
stos
sbbb
pop
jo
push
rol
popa
pop
jb
int3
outsb
or
sub
push
dec
sub
mov
jge
mov
pop
adc
inc
push
dec
fsubl
es
adc
xchg
dec
test
cltd
jecxz
xor
cli
adc
adc
sbb
test
test
cmp
je
inc
cmp
mov
sbb
cli
pop
jg
test
ret
pop
push
movsb
rolb
stos
test
fs
push
jmp
mov
call
sbb
push
insl
xor
popf
mov
cmp
mov
add
cmp
cmp
test
imul
add
cld
xchg
stc
sub
adc
jbe
sbb
mov
adc
hlt
inc
je
push
in
xchg
rorl
sbb
adc
xor
movlps
pop
adc
adc
jne
mov
mov
adc
lret
push
sti
sbb
push
jmp
in
adc
mov
push
dec
mov
rcrl
pop
adc
xchg
mov
mov
xchg
shlb
adc
movsl
popf
pop
lock
mov
add
push
dec
jbe
add
pop
test
push
cmp
sub
sbb
cmp
sub
cmp
lret
inc
cmpsb
mov
mov
sub
ret
adc
mov
pop
ljmp
sbbb
push
mov
lock
inc
and
or
jmp
sbb
push
int
call
out
ret
dec
add
mov
add
inc
push
loop
out
stc
mov
icebp
dec
lcall
in
jne
sbb
gs
pop
mov
or
sbb
jmp
adc
adc
push
add
out
mov
xor
jl
mov
jo
setle
pop
sub
push
pop
mov
ror
xor
inc
lods
stos
lods
or
in
mov
loope
stos
lds
pop
cmc
movl
jl
pusha
sbb
jne
lea
movsb
push
movsb
fldcw
dec
or
dec
add
sbb
jne
push
dec
sub
aam
mov
and
add
xor
mov
push
push
and
jmp
sbb
push
je
pop
scas
dec
mov
pop
ja
sub
daa
xor
cmp
ss
push
add
jecxz
add
pop
adc
xchg
fldl
fildl
mov
or
pop
sbb
orb
sbb
pop
fnstcw
test
add
stos
cltd
shll
pop
jle
xlat
cld
add
outsl
ds
call
js
shlb
add
push
xor
xor
jne
xchg
aam
pop
mov
add
arpl
jae
sbb
lods
arpl
lock
icebp
jae
pop
jmp
push
lock
pop
outsl
cmpsl
mov
and
pushf
cmp
pop
mov
push
dec
inc
or
adc
xchg
mov
fchs
inc
mov
push
mov
and
push
ja
push
negl
push
je
inc
mov
xor
xor
aad
pushf
xchg
or
jmp
jp
lea
add
stos
sbb
xlat
test
xchg
aas
insb
cmc
add
xor
fsubrs
andl
push
ljmp
in
push
add
jne
popa
shl
in
dec
and
adc
pop
lret
loopne
pushf
loopne
shlb
mov
push
mov
sbb
nop
mov
in
sarl
fcompp
insb
push
lods
stos
or
rorb
and
add
and
out
pop
dec
stc
add
test
je
pushf
mov
rclb
push
xchg
adc
hlt
or
in
jae
add
add
pop
leave
pop
jmp
loopne
jno
pop
sar
or
add
orl
pop
fs
je
push
mov
pop
in
inc
push
jae
sahf
adc
xor
addr16
push
push
xor
sbb
push
lock
adc
enter
jge
dec
hlt
daa
xchg
and
imul
mov
dec
out
jb
lods
cmp
inc
out
add
or
inc
pop
push
lea
cmp
sub
cmp
push
xor
sti
jmp
mov
sub
jne
xor
push
push
or
sub
inc
push
je
push
lock
pop
inc
ficoms
addl
lea
or
push
mov
add
push
xchg
subb
lea
push
lock
lret
lcall
cmp
sub
mov
imul
jo
fimuls
loopne
jg
adc
inc
in
add
call
loop
xor
hlt
shr
jge
push
outsb
rolb
push
sub
sub
add
imul
add
push
xlat
mov
outsb
or
inc
ret
outsl
out
mov
add
add
or
push
rcrl
cmp
lods
cmpsb
xchg
inc
jo
enter
loopne
cmpb
dec
rolb
inc
xor
pop
pop
push
xor
daa
pusha
dec
mov
mov
push
mov
sub
add
lock
sub
xchg
add
test
test
pop
sbb
cwtl
rcll
dec
pusha
lret
xlat
lods
cmpsb
push
movsb
xchg
cmp
xor
push
add
into
xchg
add
push
mov
push
call
ret
aam
add
arpl
sti
sbb
mov
cmp
je
sbb
or
pusha
movzwl
clc
cmp
pop
jp
push
into
pop
and
hlt
pop
xchg
test
mov
jbe
adc
sbb
sub
je
mov
or
lods
push
repnz
in
dec
call
push
in
and
ficoms
add
shrb
mov
in
mov
sarl
inc
inc
or
mov
mov
and
cmp
shll
push
cld
push
sbb
imulw
cmp
cmp
sub
push
sbb
adc
cli
sbbb
idivb
xor
sub
rcrb
es
mov
data16
popf
xchg
imul
adc
mov
lods
repnz
cmp
and
inc
dec
int3
mov
sahf
shlb
push
clc
add
hlt
push
in
sbb
jbe
lea
es
mov
neg
push
add
push
loop
mov
or
push
loope
in
jl
test
je
sbb
mov
lods
mull
test
ja
pop
sub
push
push
xor
cmp
add
insb
and
je
fcmovbe
push
push
xchg
aad
lods
add
add
fiadds
inc
inc
inc
ss
mov
sbb
roll
cmp
je
push
push
aas
sub
push
xchg
test
std
push
and
fnsave
lods
pop
push
inc
shrl
mov
pop
sub
mov
or
lahf
imul
add
imul
cli
add
inc
subl
xor
shll
scas
in
xchg
lods
lcall
push
add
xorb
imul
dec
mov
push
xchg
push
lods
cmp
shlb
out
arpl
add
cmp
or
and
sub
popa
sbb
inc
adc
adcl
adc
add
jb
pop
cmp
jne
cmp
test
jmp
jns
cmpsl
lea
cmp
or
int3
js
lea
sbbl
jg
cmp
je
cmp
je
cmp
jne
add
cmpsb
orb
imul
push
adc
or
aaa
lds
outsl
outsb
pop
mov
orb
ret
adc
mov
pop
pushf
pop
movsl
je
push
jo
push
push
popl
mov
into
mov
add
xor
add
std
jno
cmp
jne
xchg
cmp
repnz
push
adc
mov
push
dec
jne
mov
or
add
jecxz
sub
cld
adc
cmpsl
subb
sub
sub
aaa
repnz
cld
add
dec
ficompl
pop
pop
aam
leave
ret
rorb
push
fs
cmp
cmc
outsl
sub
xor
cmp
ja
dec
sahf
jbe
movb
aaa
add
in
popa
push
ret
mov
call
add
outsb
cmp
mov
sbb
cwtl
cmpsl
std
insb
or
push
inc
adc
addl
cmpsl
std
mov
add
ret
fstpt
ss
cmpl
in
xor
cld
mov
mov
cmp
add
mov
cmp
gs
je
call
jne,pn
mov
sbb
add
push
dec
inc
cmp
lock
mov
pop
dec
xor
push
inc
pop
lds
sub
inc
adc
lcall
adc
sbb
cli
cmp
jbe
jnp
fldl
mov
cmp
fs
fdivrs
dec
inc
jmp
inc
and
or
jne
outsb
xor
pop
mov
cmp
jmp
mov
inc
or
inc
add
push
clc
lahf
cmpb
loope
cmp
cmp
je
mov
lea
or
daa
mov
das
daa
mov
insb
inc
cmpl
pop
sahf
jne
cmp
notb
imul
push
pop
adc
mov
clc
je
sub
add
les
xchg
in
ja
shrb
enter
gs
cmp
sbb
cmp
push
cmp
lock
mov
pop
lahf
push
dec
outsl
lret
sub
popa
loop
jne
sahf
gs
mov
add
fs
inc
insl
rorb
mov
pushw
mov
add
and
jb
cmp
imul
add
jmp
cwtl
aas
jmp
iret
int
mov
inc
orl
push
fsubrs
adc
jns
test
jne
xor
imul
sub
lods
rclb
dec
or
add
pop
jae
mov
sti
cmp
dec
cwtl
xor
cld
jbe
xchg
fsubs
lea
cld
daa
add
inc
fidivl
inc
mov
outsb
xor
push
cmc
shl
jnp
add
cmp
jg
or
jge
out
testb
sub
jle
mov
jle
sub
and
pop
cmp
jl
pop
jle
pusha
mov
pop
imul
or
sar
jp
jb
jbe
mov
test
iret
out
add
fwait
and
or
je,pn
test
jne
loopne
iret
lds
and
xchg
jae
adc
sub
dec
cli
inc
jg
jae
movb
inc
mov
push
sub
push
sbb
push
add
sarb
xchg
inc
sub
mov
ficomps
inc
and
je
adc
fsubrs
inc
outsl
push
mov
push
mov
mov
jp
inc
es
and
add
stos
test
dec
fwait
jp
insb
add
push
jmp
xor
test
lea
and
icebp
sti
mov
mov
and
sbb
push
adc
scas
dec
mov
mov
pusha
shlb
inc
cmpb
mov
in
adc
pusha
sub
xchg
adc
push
mov
fldt
sub
mov
xor
fsub
cmpsb
roll
and
lea
sub
orl
pop
add
pop
jb
mov
pop
fiaddl
cmp
mov
push
push
mov
loopne
xchg
out
lret
inc
das
mov
or
xchg
lods
cmp
int3
cmp
pop
lock
insl
inc
mov
incl
frstor
mov
cmp
push
cmpsb
fldt
lahf
push
inc
and
jae
js
xchg
xor
getsec
and
cmp
je
test
adc
xchg
popa
icebp
das
jbe
fsts
sti
mov
add
jp
or
pop
add
xor
add
xchg
in
and
mov
add
xor
stos
movb
add
xor
pop
mov
push
push
adc
inc
or
add
inc
inc
ja
into
dec
sub
es
jl
add
push
add
cmp
add
add
sbb
push
mov
pop
roll
or
push
cmp
push
cmp
lock
shll
ret
popa
hlt
sub
pop
pop
add
inc
xchg
pop
adc
scas
xchg
aam
pusha
and
sarl
mov
xor
loop
cmp
sub
sub
sti
pusha
jb
xor
mov
icebp
jo
push
or
dec
enter
adc
mov
xchg
push
inc
push
cltd
jmp
pushl
pushf
outsb
shrb
cltd
add
dec
mov
loopne
cli
add
push
aaa
and
xor
cmp
mov
sbb
jb
mov
mov
lahf
jne
push
jb
cwtl
addl
xchg
xchg
loope
sbb
jbe
xor
or
jne
xchg
or
popa
iret
push
leave
mov
cmp
or
inc
xchg
lds
xor
and
mov
stos
test
and
bound
add
add
jle
setne
inc
daa
mov
rorb
aam
mov
sub
xor
loope
aam
xchg
in
mov
xor
loop
sbb
or
pop
xorl
shlb
cmp
pop
out
and
jne
filds
cwtl
inc
adc
cmpsb
jne
cmp
je
lods
cmp
jnp
push
movl
add
bound
pop
clc
nop
enter
sti
dec
adc
add
cmp
cmpl
add
push
cmpsb
mov
shll
or
xchg
sbb
jmp
cmp
lds
jmp
cmp
inc
mov
adc
mov
inc
inc
inc
xchg
in
loope
jge
pop
and
mov
sbb
pusha
jo
sbb
mov
push
lcall
iret
adc
insb
in
lock
aam
fsubr
cmp
in
test
mov
in
rorb
push
je
push
and
mov
in
push
call
xor
jbe
arpl
sbb
incb
lock
aaa
jae
jmp
pop
inc
cmp
je
lea
cmpb
mov
fbld
adc
je
or
jne
push
loopne
inc
faddl
jmp
cmp
mov
mov
inc
incl
fnstcw
mov
outsl
andl
insb
test
jb
mov
xchg
sub
in
jb
jge
cmp
dec
lret
xor
jo
and
or
ja
jae
fidivrl
andb
test
add
mov
sahf
ret
jns
sbb
lahf
jbe
das
ret
loop
nop
jmp
inc
push
sbb
jge
in
adc
pop
sbb
dec
push
loope
ret
fnsave
pop
loopne
xchg
insb
cmp
orl
adc
add
int
mov
push
cmp
movsl
jne
loop
push
inc
iret
test
rclb
dec
mov
xchg
mov
xor
test
mov
cmp
rorb
or
mov
lret
and
mov
fsts
incb
lret
push
push
push
sbb
push
xor
xchg
lock
push
push
jo
sub
push
das
mov
rclb
adc
dec
rclb
pop
ja
jmp
inc
cmp
jbe
repnz
add
ja
and
fmull
fadds
mov
sub
pop
cs
sub
xor
xchg
lret
in
cmp
cmp
mov
adc
adc
mov
push
cmc
jnp
dec
lea
outsb
push
nop
push
in
inc
and
add
in
add
dec
and
shl
outsl
scas
add
inc
mov
add
push
xchg
std
aam
sbb
or
mov
push
inc
js
sbb
xchg
loop
pop
ret
in
push
mov
push
push
push
gs
sub
or
lcall
popf
xchg
sahf
insl
imul
pusha
mov
ffree
insb
imul
ljmp
or
sub
adc
xor
in
dec
loopne
aaa
outsl
sbb
add
pop
inc
dec
movl
mov
sbb
sub
push
push
loopne
mov
add
or
inc
int
jl
cmp
movb
hlt
mov
cmp
faddp
fs
mov
sbb
or
add
rcrb
lcall
rcll
dec
xor
jmp
pushl
ds
push
loopne
in
sub
cld
aam
xor
shrb
test
repnz
cli
int
fadds
add
add
push
lcall
hlt
cmp
jp
or
and
push
cmpl
push
loopne
adc
inc
jl
adc
fucomi
ud0
add
mov
decb
mov
lea
mov
push
add
je
pusha
lods
ret
addr16
pop
jmp
fnstsw
orb
add
je
in
inc
insl
cmp
divb
or
pusha
enter
daa
push
xchg
rclb
fidivl
fsub
in
in
add
cmp
jo
push
lret
push
cli
mov
out
sbb
sbb
into
sbb
xchg
mov
hlt
cmp
dec
xor
jle
push
mov
lret
push
cmp
adc
pop
sbb
data16
sub
clc
idiv
push
adc
xor
adcl
shlb
jns
add
enter
xchg
divb
or
bound
pop
push
sbb
call
inc
pop
add
cmp
fcompl
or
ret
movsl
mov
dec
cwtl
lea
in
pushf
and
or
add
addr16
sub
imul
rcr
nop
addr16
or
loopne
cwtl
or
jl
xchg
pop
xorl
imul
xchg
or
or
cltd
inc
push
sahf
out
cmp
pop
or
cmp
lock
scas
dec
cld
mov
sbb
adc
sub
stos
push
jbe
jno
sub
pop
or
sbb
jae
pusha
sbb
sbb
inc
rcrb
jmp
call
pop
mov
mov
or
xor
push
or
inc
out
dec
mov
add
push
adc
dec
aad
lods
mov
add
push
xor
cmp
dec
lahf
or
or
aaa
add
sahf
cli
ja
inc
clc
inc
mov
sti
sub
add
mov
sbb
xor
loopne
sti
and
pop
pusha
mov
dec
in
enter
and
aas
push
push
mov
and
mov
adc
jbe
adc
jmp
rorl
pop
rclb
or
xor
cmpsl
push
in
dec
rclb
xchg
or
rcr
aam
or
popf
push
mov
add
and
scas
imul
pop
stos
inc
add
pop
shrb
inc
sbb
sbb
cmp
pop
or
lahf
add
inc
or
xchg
andl
dec
sbb
jecxz
ror
ja
cmp
jecxz
add
bound
sub
lock
jecxz
into
mov
lea
xchg
lock
out
nop
adc
aad
fcomps
test
jl
mov
mov
test
add
rorb
mov
ret
push
xor
cli
xchg
xor
andl
push
jg
jae
mov
mov
xor
adc
in
mov
mov
sub
push
stos
xor
sbb
and
cmpsb
or
cmp
xchg
dec
gs
rolb
lret
scas
flds
imul
pop
lock
gs
arpl
push
inc
adc
adc
jne
xor
popf
pop
mov
jecxz
pop
scas
movsl
jo
xor
cmp
sbb
jb
mov
mov
aad
call
cmp
lock
push
and
jbe
jge
icebp
out
pop
dec
inc
push
insl
inc
daa
jp
cmp
inc
push
or
sahf
rorb
xchg
outsl
inc
push
xor
jecxz
aaa
adcb
xchg
fildl
pop
xor
inc
xchg
and
push
imul
mov
pop
mov
or
mov
call
lret
mov
pop
inc
shll
pop
in
fistps
or
pop
cmp
push
or
and
mov
mov
std
jecxz
sbb
inc
inc
in
repz
jge
in
cwtl
push
push
movsl
adc
subb
dec
pop
push
jl
jno
addr16
ds
adc
test
or
lods
inc
jp
test
push
or
insb
adc
jge
pop
out
push
and
xchg
les
or
mov
or
pop
test
pop
jnp
test
jg
pushf
jmp
xchg
dec
cmp
fsubl
loope
mov
push
xchg
sub
push
test
add
clc
xor
repz
cmc
push
nop
sub
or
sbb
dec
jne
nop
lret
push
into
cld
bound
cmpsl
icebp
lods
out
lea
pop
push
inc
loope
xor
lea
das
mov
adc
mov
pop
cmp
mov
pushl
cli
mov
pop
insb
stos
jp
push
cmp
inc
pop
adc
nop
jge
stos
xchg
shlb
mov
daa
xor
movsb
pop
outsl
adc
std
dec
ret
mov
pop
mov
insl
sub
je
mov
in
jecxz
out
mov
pop
jmp
add
jo,pn
adc
movsl
adc
addb
xlat
ds
add
nop
push
in
sub
push
push
andl
call
in
dec
shll
adc
mov
inc
sub
pop
dec
or
mov
adc
outsl
loope
sbb
leave
inc
cmpsb
sbb
push
jge
rcrb
mov
pop
loope
push
xor
test
and
adc
sbb
or
xchg
out
mov
pop
or
lods
sahf
ffreep
mov
enter
add
sub
insl
sub
sub
sbb
cmpsl
fcomps
cli
sub
in
xchg
movsb
sbb
rcll
sub
inc
rol
or
les
xchg
adc
sbb
xchg
adc
inc
add
mov
xchg
mov
pop
sbbb
sahf
psrad
shufps
dec
push
jns
in
sbb
stos
sub
mov
push
fwait
sbb
inc
fst
and
pop
js
into
icebp
movsb
sbbb
xchg
shll
testb
jns,pn
pop
pop
mov
xlat
mov
inc
lds
jne
push
pop
rolb
enter
pmulhuw
pop
lods
out
sbb
adc
xor
and
loope
leave
dec
push
into
push
sahf
mov
dec
pop
call
in
cmp
mov
cmpb
rorb
or
cltd
out
ficompl
and
xor
push
pushf
adc
dec
and
jo
mov
xor
push
in
orb
arpl
shlb
or
pop
and
rolb
pop
and
test
dec
adc
daa
jne
sbb
pushf
stos
enter
in
mov
psubd
inc
popf
xchg
sub
mov
or
es
call
test
out
adc
cmp
pop
daa
jne
sbb
sub
adc
int
inc
notb
jmp
or
cmp
sub
or
push
ret
adc
sub
sub
pop
ret
ret
and
mov
sbb
jle
movsb
scas
call
adc
and
xor
push
jno
adcl
xchg
push
cmpl
sub
jecxz
add
sbb
lock
adc
add
cmp
mov
iret
xor
inc
ret
testb
xchg
add
sub
sbb
test
dec
popf
lods
outsb
sarl
mov
pop
xchg
insl
nop
cmpsl
cmpsl
push
add
js
xor
lods
lock
shlb
imul
test
ss
xor
sbb
sbb
test
sub
push
scas
or
mov
dec
push
sub
enter
mov
fadds
mov
xor
add
stos
arpl
push
loope
inc
ljmp
cmp
push
ficomps
es
mov
daa
add
sbb
popf
pusha
mov
xchg
out
imul
adcb
and
xor
push
adc
add
aad
cmp
dec
inc
xor
arpl
bound
push
or
pop
jp
shrl
aaa
arpl
leave
ret
sbb
enter
push
mov
xor
or
das
jle
sub
push
push
je
push
push
or
fmuls
daa
push
sub
push
xchg
or
adc
movsb
add
hlt
jne
lea
add
or
and
cld
mov
jl
or
pusha
lods
sbbl
and
xor
dec
mov
mov
mov
xchg
pushf
jl
pop
cmp
repnz
fidivl
sub
mov
adcb
shlb
cmp
aad
dec
add
mov
inc
and
add
xchg
xor
das
or
jl
cltd
add
jbe
cmpsb
in
jge
fwait
inc
in
and
call
mov
call
es
pop
in
cmpsb
adc
pop
push
das
nop
lcall
cmc
dec
jne
pop
jmp
pop
or
imul
inc
stos
jbe
rclb
test
xlat
mov
mov
rorb
lret
xchg
aam
push
lods
sbb
xlat
int3
push
shll
dec
or
push
pop
cs
mov
or
xor
fdivl
shrl
pushf
inc
mov
fchs
mov
fcompl
mov
movhps
jno
xadd
jmp
sub
inc
push
inc
pop
mov
or
loopne
pop
dec
je
adc
pop
or
sub
sbb
gs
adc
or
jne
push
je
push
rcr
add
or
and
sbb
xchg
push
repz
out
dec
or
adc
sbb
mov
xchg
cmp
clc
inc
nop
or
inc
hlt
cmp
loopne
aaa
addl
jmp
add
lret
dec
inc
iret
mov
add
imul
into
stos
jmp
and
mov
push
pop
inc
in
pop
jo
mov
in
repnz
add
dec
popa
sbb
lock
je
push
add
or
add
xchg
sub
pop
jnp
sub
fiadds
icebp
cmp
fldl
addr16
pop
inc
repz
clc
pop
stos
sub
ds
je
push
orl
adc
call
xchg
in
in
rorb
push
xor
mov
xchg
xchg
sub
push
cmp
sub
dec
inc
in
sti
js
jmp
sub
mov
or
fadd
inc
das
cmp
xchg
insb
and
sbb
adc
or
fs
fdivs
popa
movsl
std
loop
inc
push
jle
fistps
movsl
cmp
sub
push
inc
adc
sub
push
cmp
and
push
push
add
loope
push
add
jmp
cs
adc
insl
or
jg
inc
insb
out
add
ret
mov
fidivs
addb
push
call
add
sbbb
push
jbe
pusha
add
push
adc
and
into
pushf
pop
loop
es
push
adc
movsl
cmpsb
pop
add
iret
ret
cmpl
add
or
xchg
xor
dec
jnp
or
and
stos
jae
inc
fs
fsubrp
xchg
pushf
lahf
jb
dec
nop
mov
xchg
sbb
push
pop
mov
insl
push
push
mov
xchg
jo
add
or
lock
jns
add
xchg
inc
in
in
mov
fbld
xchg
cltd
enter
mov
or
sbb
jmp
cli
xchg
icebp
pusha
adc
push
mov
je
out
ret
or
rclb
std
es
sub
sub
jge
aas
cltd
out
jle
mov
je
xor
mov
mov
loope
pop
pushf
fisubs
xor
jle
pop
xor
jmp
xor
pop
dec
or
shrb
jp
push
jmp
push
and
sub
mov
or
push
sbb
fsubrs
lock
movsb
call
sbb
ja
js
icebp
sub
lea
push
lea
daa
subl
mov
mov
lods
mov
or
pop
xor
xor
xchg
cmp
fldenv
adc
loope
pop
ret
arpl
xchg
ror
sarb
mov
fimull
or
pop
cmp
dec
pop
ret
or
add
movsb
sub
jmp
movl
cmp
push
mov
dec
pop
mov
adc
add
sbb
addr16
cmp
inc
in
mov
jmp
jge
cmp
jne
push
sarb
pop
int
push
gs
or
sub
sbb
or
sarl
cmpb
adc
cmp
jle
orb
inc
enter
pop
and
cmp
je
xor
inc
cmp
or
xchg
push
push
push
and
jmp
mov
jmp
pop
repnz
push
test
jge
and
scas
mov
cli
push
repz
jmp
mov
mov
mov
repnz
cmpl
pop
adc
insb
sub
push
or
jo
mov
je
cs
mov
jbe
or
in
imul
pop
lret
mov
sti
jp
add
mov
outsb
mov
test
adc
fwait
pop
xchg
incl
mov
add
enter
iret
jbe
mov
sbb
mov
cs
add
push
lahf
mov
popf
insl
mov
enter
push
nop
jne
add
std
add
fisttpl
dec
or
or
hlt
cmp
sbb
and
pop
mov
aas
inc
sub
popf
out
lahf
mov
movsb
sarb
lea
push
gs
lea
dec
jecxz
in
cmpsb
mov
push
pop
call
and
nopl
dec
push
xor
clc
jle
mov
es
mov
popa
dec
mov
push
pop
mov
pop
movsl
dec
sub
ss
push
dec
or
bound
mov
addb
pop
push
xlat
test
xlat
xor
mov
insl
add
stc
fdivrs
cmp
jnp
add
cmc
xchg
mov
mov
loop
inc
clc
sub
push
sbb
and
sbb
test
and
std
jb
sar
and
leave
test
jb
ret
cwtl
sbb
and
push
cmp
xor
or
dec
xor
jl
or
cmp
mov
ss
ljmp
sub
in
mov
sbb
add
divl
pushl
lea
push
outsl
shl
jg
flds
sub
push
daa
fstps
and
dec
sbb
sbb
and
mov
mov
out
imul
ret
lcall
fimuls
cmp
mov
mov
dec
sti
mov
add
or
lret
mov
sub
inc
jno
inc
mov
fwait
pop
and
or
ret
cmpsb
jne
or
ret
or
pop
mov
cmc
xchg
cld
push
adc
inc
lea
loop
jle
lea
cld
ficoml
cld
mov
out
inc
dec
lea
inc
lahf
rorb
xor
roll
add
shrb
jnp
or
or
test
test
mov
pop
fdivrl
mov
loope
test
or
jl
inc
ss
push
inc
sub
aam
cld
cmp
add
adc
inc
out
cwtl
cmp
arpl
sbb
stc
ss
popa
pusha
mov
sbb
pop
and
pop
add
or
test
mov
movsb
outsl
dec
arpl
mov
jo
es
loope
add
and
adc
xor
jne
pop
shl
mov
sbb
pop
cmp
xorl
js
jb
adc
pop
imul
pop
shlb
pop
mov
inc
movsb
xor
mov
jo
dec
and
cltd
fwait
and
or
mov
shrb
subl
xor
sbb
shlb
xchg
or
cmp
add
fsubrs
jbe
push
das
inc
cmpb
pop
mov
add
adc
xor
int3
rolb
add
dec
mov
adc
ret
insl
shrb
jmp
or
test
mov
inc
sahf
mov
orl
test
subb
jge
add
add
jp
jmp
mov
ret
lods
std
jecxz
aas
cmpsl
mov
xchg
jg
cmp
cli
or
and
cmp
add
xor
sbb
dec
les
pop
in
sub
fmull
push
je
or
mov
sahf
add
add
mov
mov
mov
testl
cmpb
shlb
out
sub
into
xchg
into
in
jmp
pop
lock
popf
ret
adc
in
lcall
jl
loop
mov
fistpll
dec
lahf
movsl
mov
dec
pop
or
pop
pop
dec
loope
pop
push
int3
dec
testl
mov
je
test
xor
movzwl
stos
lock
pop
and
stos
cmpsb
mov
mov
test
test
movsb
aad
ficoms
push
sub
push
or
add
dec
push
lock
notl
push
call
aas
fwait
mov
mov
sub
call
pushf
add
push
repz
jmp
clc
out
pop
jo
mov
pop
push
mov
push
xchg
insl
mov
sbb
jle
add
rclb
sbb
pop
inc
add
pop
sbb
push
push
or
and
or
mov
fldcw
xchg
rcrb
xchg
testb
pop
pop
push
push
sub
rolb
les
incl
mov
cmp
je
cmp
jbe
adc
push
sbb
cmp
inc
mov
aam
jnp
pop
cltd
addb
cbtw
imul
dec
ljmp
ret
cmp
jae
cmpl
or
lock
pop
fbstp
nop
inc
sub
imul
mov
cmpsb
cmp
sub
cld
js
jb
pop
cmpsb
push
scas
arpl
and
rclb
push
bound
and
push
mov
mov
fwait
xchg
or
pop
pop
xor
push
fcmovnbe
xlat
loopne
repz
subb
jle
or
mov
loopne
mov
cmp
cwtl
lock
aam
adc
mov
sbb
pop
inc
sub
mov
inc
mov
push
scas
in
movd
sbb
or
in
inc
or
lea
dec
push
enter
lea
sbb
aaa
jnp
mov
pop
std
mov
int3
aad
sbb
pop
or
mov
or
pop
mov
notl
add
lods
sti
test
clc
mov
push
xor
imul
sbb
jmp
aaa
clc
xor
imul
leave
lods
sbb
pop
add
dec
je
sahf
and
or
nop
adc
pop
sbb
inc
add
in
movsb
jp
loop
out
mov
inc
xchg
test
push
dec
xlat
push
mov
cld
push
call
mov
scas
sahf
jmp
push
aam
xchg
xor
pop
adc
aas
dec
fsubs
and
aad
arpl
push
rol
xchg
in
cmp
fiadds
mov
filds
xor
mov
pop
jecxz
lea
sbb
test
pop
test
shl
xchg
cwtl
dec
test
sbb
and
fsubs
mov
cmpsb
push
mov
mov
inc
or
push
data16
ja
pop
and
xor
call
mov
inc
push
xlat
jmp
mov
sub
pop
cmp
cmp
mov
rorb
into
push
and
fbstp
das
mov
testb
dec
sub
cmp
mov
lcall
mull
add
push
in
cmp
or
jne
mov
cmp
pop
sbb
xchg
imul
push
adc
dec
inc
mov
jae
push
sbb
and
inc
dec
pop
cmc
sti
ss
imul
push
add
inc
sub
loop
rcl
inc
stos
mov
xor
bound
dec
shlb
inc
push
jl
cmp
je
mov
sbb
mov
mov
cmpsl
xor
dec
cmp
jne
pusha
pop
or
or
stos
sub
js
fs
jmp
jl
jmp
ret
test
mov
movsb
addl
nop
ljmp
neg
mov
xor
clc
add
in
hlt
sbb
imul
andl
je
dec
mov
pop
or
inc
jmp
mov
scas
sub
data16
orl
or
subb
sub
daa
and
adc
data16
decl
adc
or
inc
inc
cmp
jbe
xor
lret
fsubl
inc
or
xchg
or
mov
push
ljmp
sub
lcall
sbb
or
outsl
add
xchg
sbbl
push
in
xchg
lods
dec
add
add
in
mov
add
pushf
pop
pop
call
dec
inc
add
ljmp
mov
push
cli
sbbl
dec
and
mov
add
push
xor
cmpb
shl
push
and
sub
ja
loop
das
mov
mov
xchg
push
lahf
pop
add
pushf
pop
xor
in
cli
es
add
cmp
adc
add
into
cwtl
mov
sbb
movsl
les
or
xor
pop
add
cmp
in
sbb
bnd
insl
orl
fcompl
xor
mov
cmp
xchg
jge
subl
dec
cmp
push
xchg
fimull
push
pop
inc
hlt
test
int
dec
pop
mov
sbb
loope
test
ja
xchg
rcrb
push
mov
movl
stc
push
je
sbb
psubb
xchg
loopne
mov
adc
jmp
xor
sbb
loopne
jae
push
xchg
je
jbe
fsubrl
scas
mov
addl
xchg
enter
pop
ja
push
or
jo
mov
fstpl
jnp
ret
push
fwait
fwait
or
pushf
push
cmp
loopne
inc
fs
scas
sbb
in
lea
movl
cld
out
sub
mov
addb
cmp
sbb
inc
add
shl
add
adc
dec
cmp
cmpb
and
add
jb
pop
or
push
push
call
nop
sbb
xor
movsb
dec
xor
aad
adc
sbb
add
repnz
ret
imul
iret
test
andl
adc
rorb
data16
lea
lea
bound
pop
sbb
lret
mov
mov
add
ret
jo
movsl
push
dec
pop
cmpl
insb
cmp
es
lock
lahf
xor
mov
add
or
mov
dec
or
jnp
cmp
dec
cmp
lcall
fcmovb
jmp
cmp
jbe
int3
dec
dec
jnp
movsl
inc
jns
dec
dec
clc
jne
mov
insl
fldcw
push
test
cmp
dec
or
sub
lea
rclb
push
pop
cmp
stos
sbb
lods
add
or
hlt
xchg
sbb
mov
xchg
or
hlt
hlt
jns
mov
xor
inc
pop
jo
or
or
pop
pop
mov
add
cmp
call
ret
mov
lret
cs
or
fxtract
jne
push
js
lret
adc
cld
loopne
push
push
lock
jne
mov
or
repz
mov
in
add
or
xchg
add
lock
loope
xchg
sub
clc
pushl
cmp
fs
in
add
cwtd
pop
iret
mov
daa
jl
into
orl
movsl
popf
out
xor
aas
fisttpll
in
rol
xchg
pop
add
cmp
push
mov
inc
in
cmpb
iret
cmp
stos
mov
push
or
adc
mov
and
lea
sub
lods
and
sub
mov
inc
js
nop
adc
insb
sbb
inc
inc
adc
ja
pop
or
call
push
push
adc
loopne
in
test
cli
fwait
inc
lea
arpl
test
jno
cmc
pusha
xor
and
add
jle
pusha
mov
sub
testl
cmp
fst
cmc
jne
adc
jbe
push
mov
cmp
adc
iret
loope
jbe
adc
or
clc
jae
lret
dec
aas
mov
jbe
imul
inc
jne
sub
mov
das
push
jmp
ljmp
in
push
push
jns
pop
jbe
xor
and
cs
jnp
sbb
es
in
add
push
cmpsl
lahf
push
mov
sub
bound
fs
or
add
loope
sub
mov
aad
movzbl
rorb
lds
filds
push
xor
dec
push
aam
cmp
add
mov
lahf
test
mov
cmp
mov
mov
push
pop
push
adc
and
push
movsb
adc
add
mul
seto
inc
pushf
aam
pop
adc
enter
addr16
sub
fcompl
push
or
jae
rol
or
mov
push
xorl
in
fidivrs
loop
xor
inc
dec
mov
push
incl
call
add
mov
mov
mov
cli
in
call
seta
in
push
mov
and
sbb
std
inc
pop
push
mov
clc
and
xor
mov
cmpsl
sub
inc
push
dec
xchg
hlt
cmc
addr16
mov
mov
sbbb
push
inc
bound
in
clc
test
sarl
sbb
lods
mov
je
test
adc
mov
push
addb
jl
jmp
loope
in
nop
fcoml
jg
xor
iret
mov
sti
or
mov
das
ss
push
sub
nop
pop
mov
mov
clc
cli
mov
or
push
gs
xor
add
and
arpl
pop
into
jmp
mov
push
lret
cmpl
fiadds
sub
sub
jne
jbe
jnp
inc
cmp
jae
cmp
dec
dec
cmp
cmp
xor
add
cmp
pusha
push
push
daa
orb
mov
in
data16
lret
sbb
dec
pop
or
jb
les
lahf
addl
add
push
push
sbb
js
loopne
add
fidivs
cmp
sbb
addr16
lock
ljmp
pop
push
push
cmpsb
inc
or
cli
inc
je,pn
sub
inc
xchg
sbb
aaa
push
inc
mov
cmp
push
cmc
sti
in
adc
ja
sahf
addl
out
test
rcrb
and
add
add
cmpb
mov
js
clc
out
add
int3
or
imul
in
sbb
out
adc
cmpsl
ret
jmp
out
xchg
mov
je
pusha
rclb
push
pop
add
add
cmpsl
cmpsb
loopne
lcall
mov
sbb
sbb
ljmp
add
movsb
lds
fwait
pop
adc
jbe
jmp
inc
js
xor
cmp
jmp
or
xor
jae
cmp
adc
jne
pop
mov
lods
in
in
jl
cmp
jmp
sbb
out
mov
jnp
or
cmp
adc
clc
pop
cli
pop
cmp
mov
sbb
imul
call
push
out
add
jge
jmp
push
mov
fdivr
jno
repnz
mov
mov
add
sub
mov
or
repz
sub
sbb
or
into
cmp
or
or
mov
push
xor
push
or
adc
sbb
negl
fisttpl
les
imul
movl
andl
loopne
or
fimull
xlat
mov
pcmpeqw
fdivl
gs
in
pushl
lret
in
xchg
and
ds
not
cltd
out
add
xor
jo
jo
pop
sbb
test
pop
push
and
shl
adc
mov
sub
sarl
sbb
push
int3
fbld
test
adc
xor
xlat
dec
neg
test
popf
xor
push
lcall
mov
rorb
jge
or
or
mov
cmp
jb
sbb
fimull
xchg
mov
roll
int
mov
push
dec
add
rorb
in
das
mov
jbe
in
adc
mov
shrl
add
add
movsl
or
xor
imulb
mov
fistps
or
je
dec
adc
push
roll
lea
jns
jle
lea
das
push
ret
cmp
test
add
icebp
mov
mov
or
sub
inc
cmpsb
jb
pop
fisubs
push
sub
lcall
lock
xchg
rclb
addr16
pop
sahf
jmp
mov
dec
push
lahf
int3
cmp
jae
sub
loopne
jg
mov
adc
or
int3
adc
ljmp
dec
mov
cmc
adc
xchg
push
xchg
shlb
fstpt
cmc
push
inc
mov
enter
icebp
push
and
out
dec
dec
incb
mov
test
data16
pop
shll
mov
or
sti
vpsubsw
or
jae
sbb
sbb
out
icebp
inc
push
add
xchg
jle
sub
mov
dec
sub
add
pushf
mov
add
add
rorb
xchg
cld
jb,pn
cmp
adc
cld
pop
fbld
scas
sub
mov
fildl
mov
adc
pop
add
in
push
mov
add
xor
and
imul
stos
stos
rorb
mov
lds
rolb
roll
sub
pop
icebp
xlat
inc
mov
insl
push
lahf
sbb
inc
push
xlat
inc
cmpl
and
adc
rcrb
xor
das
lea
data16
pop
addb
push
mov
add
int3
jmp
xor
mov
dec
rorb
test
adcb
ret
add
js
push
pop
add
and
pushl
jmp
jo
arpl
pop
lods
ss
mov
push
mov
adc
push
cld
mov
hlt
lock
roll
xor
idivb
push
push
out
push
push
mov
aas
bnd
mov
dec
fucomip
mov
adc
cmpb
ret
push
jae
lea
insl
or
cmp
aad
xchg
je
jne
pop
icebp
mov
ja
and
mov
pop
ret
dec
mov
or
or
adc
mov
inc
inc
imul
and
mov
push
shlb
cmp
push
jne
cmp
jae
inc
jmp
push
or
mov
movsl
decb
lea
xchg
sub
movb
add
add
mov
sub
mov
ja
inc
sahf
dec
outsb
push
add
add
out
mov
mov
ss
sub
pop
jb
add
push
mov
test
sub
mov
mov
test
mov
fwait
pop
cmp
mov
adc
pop
mov
stos
jmp
xchg
xchg
lds
ret
push
push
test
sbb
push
mov
mov
ja
pop
lods
call
pop
pop
cs
xor
inc
or
add
or
adc
sbb
and
add
xor
insl
jae
fwait
stos
aad
dec
jb
or
or
sub
push
push
mov
jb
jbe
pushl
push
insl
xor
je
mov
or
jb
adc
jg
cmp
ja
cmpb
push
push
or
or
xor
inc
add
jo
push
cmp
cmp
dec
sub
lret
pop
inc
mov
inc
sbb
ds
fadds
roll
cli
mov
add
sub
xlat
cmp
ds
pusha
stos
ss
jbe
out
aam
add
and
aaa
ret
adc
mov
fcmovnu
insl
cli
adc
shlb
lea
cli
ja
cmpb
subl
ret
push
xor
inc
pop
or
das
cmp
dec
cmp
xlat
iret
push
xor
test
or
or
cmc
and
dec
pop
push
xchg
push
addr16
add
or
cmpsb
imul
xor
imul
nop
test
mov
bound
pop
in
push
push
fisttps
nop
sysexit
cmp
jne
dec
push
sub
sbb
loopne
jns
cmp
pop
repz
add
xchg
adcl
aad
loopne
xchg
add
fs
sbb
adc
addr16
mov
adc
nop
pop
fbld
sbb
add
cli
popa
mov
cld
push
mov
mov
cmp
int3
push
dec
cmp
xor
add
cmp
adc
test
push
pop
mov
xor
xchg
jnp
push
sub
inc
add
cs
dec
add
jbe
fadds
mov
pop
jp
dec
or
iret
dec
jge
cmc
inc
lock
int3
add
dec
pop
or
lock
sarl
inc
push
pop
jo
lahf
cmp
out
test
adc
insb
jle
movsb
adc
loopne
mov
pop
xor
sub
jl
adcb
outsb
rorl
mov
jge,pn
xor
outsl
or
mov
push
cmpb
jne
inc
xlat
push
mov
adc
push
jmp
and
sbb
mov
sahf
xchg
lock
and
adcb
aam
mov
adc
push
push
sbb
cltd
add
push
adc
bnd
jle
arpl
jp
add
sbb
rcrb
push
dec
mov
mov
cli
and
clc
pop
sbb
addl
lods
gs
shl
xchg
addr16
add
nop
inc
ret
inc
addl
dec
dec
xchg
cmp
bound
pushf
fimull
cld
es
mov
mov
and
js
mov
clc
mov
or
and
ret
into
call
pop
cmc
cld
adc
pop
adc
inc
adc
in
sbb
add
pop
addr16
sbb
push
xchg
sub
fs
aaa
iret
dec
aaa
test
repnz
ds
aas
mov
lret
push
lods
movsb
sarb
push
icebp
insl
loop
jle
pop
xchg
add
xchg
jge
sbb
inc
add
add
call
imul
sub
and
push
ja
les
mov
lcall
iret
xlat
mov
pushf
mov
push
sbb
xchg
sbb
push
push
cmp
lods
lods
sbb
in
cmc
push
jo
mov
add
pop
rcrb
fdivrs
mov
pop
pop
dec
fcoms
pop
mov
inc
aam
jge
icebp
xchg
mov
bound
add
push
push
dec
push
add
sub
fsubr
pop
xor
dec
add
push
jmp
mov
rorb
arpl
add
sbb
dec
jns
inc
sbb
ja
aaa
push
jp
sbb
adc
ret
lds
adc
pop
pop
push
mov
and
mov
sti
sbb
sbb
ljmp
lcall
xor
xchg
or
adc
or
xchg
sub
sub
pop
fsubl
fsubs
jbe
xchg
push
clc
cmpl
mov
mov
push
call
fisttpl
les
in
sbb
mov
push
mov
jp
add
mov
loopne
mov
pusha
mov
es
inc
hlt
imul
int3
xor
jns
add
stos
pusha
mov
or
add
imul
sbb
xchg
and
mov
fs
or
movsb
fstl
fisttps
or
xor
movsb
mov
inc
outsb
roll
data16
rorl
aam
mov
cmpsb
fwait
bnd
cmpl
or
call
push
int3
mov
inc
adc
nop
aad
ljmp
and
sbb
sbb
cmp
add
jne
pop
and
adc
pop
adc
cmpsb
xor
xchg
xchg
xor
inc
lock
std
fnstcw
movsb
pop
add
mov
xchg
mov
or
add
lods
add
or
inc
jns
clc
lea
xchg
lock
sbb
out
push
stos
adc
sub
mov
rolb
sub
mov
sbb
jmp
and
mov
ret
sbb
mov
cmpsl
add
mov
pop
mov
or
jmp
testb
mov
mov
neg
jge
push
std
daa
hlt
mov
aad
and
shrb
test
xor
xor
pop
jb
inc
rclb
and
loope
idivl
push
mov
jmp
push
dec
gs
xchg
push
add
fmuls
mov
add
mov
js
cs
or
push
and
or
sbb
xchg
dec
lods
in
cltd
dec
rcrl
fisubl
xchg
push
inc
mov
aas
in
js
imul
xor
fldl
hlt
sub
clc
and
lea
ds
sub
xchg
cmp
imull
or
sbbb
inc
push
popa
adc
inc
lock
movsl
adc
adc
ja
sbb
imul
lar
test
cmp
push
and
mov
into
outsb
clc
js
add
jae
je
sbb
add
push
push
ret
mov
frstpm(287
add
add
ret
or
cld
icebp
sub
fldcw
pop
ret
push
aas
push
fwait
sub
push
cld
add
mov
inc
test
inc
pop
cwtl
dec
push
jno
inc
dec
adc
mov
inc
cmc
movsb
pop
jle
and
call
out
mov
push
pop
add
jecxz
or
imul
lock
sub
loopew
adc
aaa
fs
test
add
mov
xor
push
adc
loop
push
sbb
pop
call
cmp
jl
dec
cmc
push
inc
xor
arpl
bound
inc
lods
rol
es
adc
mov
test
xor
and
mov
add
ljmp
xlat
jne
outsl
mov
pop
mov
fildl
push
xchg
adc
jle
test
cmp
add
add
jge
in
pop
rorb
inc
inc
push
xchg
pop
adc
xor
sub
jp
mov
cmpsb
in
fisttpl
inc
sub
cmp
mov
push
sbb
loopne
or
xchg
add
xchg
push
icebp
mov
call
sub
stos
mov
add
enter
or
int
push
testb
sarl
fs
xchg
or
in
dec
pushf
fcmovb
jne
xor
fsubrp
mov
dec
pop
out
lret
xchg
jno
push
testl
mov
addr16
je
dec
aam
lds
xchg
mov
add
and
add
mov
xlat
add
sub
inc
sbb
lea
add
faddl
push
xchg
ja
mov
fsubp
sbb
outsl
xchg
dec
lret
stc
in
mov
lock
enter
sub
sub
mov
cmpb
jae
mov
je
nop
and
imul
push
and
in
imull
pusha
push
cs
in
insl
loopne
sbb
ret
jl
call
comiss
mov
arpl
adc
rcll
aam
sub
sub
sbb
in
mov
pop
stos
cmp
push
mov
or
mov
loop
sbb
or
enter
pop
add
cmp
jb
mov
jle
cli
rcrb
and
gs
rol
or
add
ja
test
in
rclb
lahf
je
int
add
add
rolb
jp
pop
cld
cmp
add
ret
pop
mov
mov
or
outsl
xor
idivb
je,pn
sahf
aas
sbb
push
pop
int
aaa
jmp
inc
add
add
inc
mov
cs
mov
add
pop
ret
shll
mov
mov
jmp
jg
push
dec
push
push
xchg
aam
test
pop
lret
mov
out
cmpsl
adc
mov
mov
test
nop
les
clc
jg
in
sub
fidivrs
dec
sbb
or
mov
cmpb
xchg
rorl
arpl
add
lahf
jno
jae
cmpsl
loop
push
repz
ja
das
xor
jo
jmp
or
mov
jbe
pusha
push
push
out
push
cmp
push
test
shrl
add
aaa
or
out
lods
mov
and
or
movsl
loopne
loopne
je
adc
outsb
pop
mov
push
push
adc
sub
jb
jp
or
faddl
push
jbe
mov
mov
push
jb
xlat
add
out
sub
test
or
adc
sbbb
mov
adcb
subl
pop
fisttps
stos
push
sbb
or
out
add
dec
sub
mov
push
pop
jb
jl
jo
push
sti
mov
imul
jmp
ja
mov
fmulp
cld
add
popa
mov
jbe
fbstp
mov
xchg
aam
xchg
mov
inc
ja
mov
movb
cs
outsb
mov
xchg
pushf
and
cwtl
iret
mov
popf
fcoml
or
push
leave
ret
xchg
loopne
jecxz
aas
roll
pushf
dec
clc
iret
jns
js
jno
and
in
inc
xor
adc
clc
inc
scas
mov
inc
in
out
or
mov
pop
dec
push
loopne
push
hlt
icebp
and
push
push
repnz
xor
sub
mov
push
sub
dec
jno
test
fisubrl
mov
ds
jb
and
insl
insb
mov
jecxz
and
fsubrl
mov
sbb
movsb
and
subl
xor
fstps
imul
test
sub
dec
imul
bound
push
or
aad
daa
xchg
xchg
lret
adc
sbb
add
test
lret
movsb
or
cmp
daa
xchg
xchg
or
inc
or
pushf
push
dec
inc
or
push
cmp
adc
das
jp
insb
push
pop
imulb
rcrb
mov
push
mov
es
or
lret
repnz
mov
int3
rcr
std
add
mov
dec
push
mov
fsubrs
dec
aam
sti
xchg
fsubp
push
movl
add
pop
mov
dec
jecxz
dec
imul
push
add
daa
scas
jo
cmp
push
test
lret
adc
clc
add
mov
jbe
fdivl
popf
mov
sbb
nop
add
int3
enter
and
mov
adc
and
adc
in
out
and
mov
jg
and
inc
and
cmp
xor
sbb
enter
adc
enter
or
ret
or
clc
add
in
add
and
cld
incb
pop
je
xor
sub
outsl
mov
mov
mov
in
push
add
add
add
fs
sub
out
lea
and
scas
add
add
xchg
add
and
sbb
add
sub
add
clc
shrb
out
pop
jmp
aam
add
and
inc
push
add
sqrtps
or
call
cmp
xor
ja
fcoms
jno
xlat
jbe
jp
xor
sbb
push
sbb
cmp
ja
notl
test
pushl
xor
or
jecxz
cs
dec
les
push
subb
stos
inc
jne
push
mov
ljmp
call
loopne
inc
or
jmp
xchg
dec
jae
lea
insl
adc
sub
jo
nop
mov
add
sub
mov
mov
daa
inc
inc
mov
inc
int
mov
push
xor
lret
add
push
or
test
hlt
push
inc
test
mov
inc
push
lock
mov
or
or
lret
cmp
fiadds
mov
mov
pop
pusha
shll
add
push
rcr
jp
hlt
lods
mov
push
mov
popf
push
rcrl
pop
mov
pop
shrb
push
mov
add
mov
orl
test
icebp
dec
out
or
daa
mov
push
mov
push
fadds
ficompl
mov
cld
push
divb
cmp
inc
add
add
or
loopne
or
cltd
push
jo
mov
notb
sbb
xchg
fwait
pop
inc
lock
adc
push
lods
pop
pop
rcrb
pop
enter
out
xchg
fwait
stos
lods
icebp
cld
inc
fcoml
jno
test
icebp
add
sub
inc
mov
jo
sbb
mov
or
jbe
in
inc
cmp
cmp
stc
xor
xchg
push
jnp
push
push
adc
dec
js
push
enter
push
das
push
movsb
xchg
sub
cmp
or
test
movsb
jae
out
jnp
je
lret
lret
xor
adc
push
cltd
scas
inc
fnstenv
dec
clc
out
xlat
sub
sti
idivb
das
add
lods
mov
jbe
mov
jmp
mov
cmp
jne
pop
jmp
orl
mov
bound
test
ljmp
cmpb
loope
testb
xor
loopne
cld
je
jne
cmp
jae
add
add
jmp
mov
int
push
xor
add
jbe
fwait
cmpsl
or
sbb
pop
add
ss
mov
out
sub
js
mov
dec
sbb
fidivrs
out
mov
sub
pop
add
lea
dec
push
insb
mov
jl
sbb
jmp
scas
add
xchg
xlat
mov
mov
or
lods
push
pop
mov
add
enter
or
mov
fs
inc
dec
fwait
popf
dec
mov
incb
fstl
sbb
mov
call
xor
pop
jmp
add
pusha
lods
faddl
pop
xor
inc
addr16
xchg
and
inc
inc
in
test
sub
mov
add
pop
shrb
lahf
js
add
clc
jne
jl
adc
ja
clc
and
into
repz
add
push
js
sub
out
adc
gs
ret
adcb
xor
out
outsl
mov
cmp
jmp
xchg
xor
orl
mov
imul
cmpsl
out
sahf
or
xchg
or
lret
sub
xor
xchg
pushf
jne
ja
jae
sarl
daa
and
js
push
in
pop
jp
addl
inc
outsl
xchg
push
mov
xchg
push
stc
push
popa
cmp
mov
xor
xchg
js
and
sbb
mov
push
mov
xor
mov
xchg
jb
add
pop
and
add
push
imul
cwtl
cmp
mov
test
mov
mov
pop
add
xchg
adc
dec
add
add
jne
xor
xor
inc
and
test
cmc
sarl
cmp
inc
add
adc
add
jl
sub
int3
or
pushl
pop
call
xor
and
or
pop
or
adc
das
mov
adc
and
lret
lock
inc
sbb
inc
repz
add
mov
std
inc
test
push
mov
mov
push
sahf
add
stc
vpcomub
pusha
push
push
not
xor
push
cmovae
pop
mov
sahf
test
push
xchg
add
pusha
add
cwtl
sbb
cmpsb
cltd
ret
fdivs
ds
or
xchg
pop
adcb
xor
and
push
dec
push
push
mov
pop
orl
out
insb
enter
cmp
js
fadd
in
push
push
jp
mov
nop
stos
mov
out
push
jae
addl
cmc
mov
shll
sbb
mov
cmp
test
jg
lret
add
add
add
scas
test
in
movsb
jmp
sub
add
mov
ss
jp
and
lods
cmpl
addl
mov
sbb
dec
adc
push
and
inc
sub
clc
nop
movl
jnp
stos
add
inc
lds
mov
or
decb
mov
iret
lahf
aam
stc
out
or
rorl
inc
sbb
loope
cwtl
stos
xor
xor
push
test
sbb
mov
inc
test
xor
out
rdpmc
lret
mov
or
inc
mov
flds
or
inc
xor
aaa
mov
xchg
xor
mov
jge
das
push
or
sub
int
cmp
rcrl
jno
jno
les
dec
test
lods
clc
pop
push
push
bound
pop
hlt
std
jnp
out
sbb
mov
test
and
mov
call
xor
pop
mov
movsb
or
lds
dec
roll
fldcw
xor
xchg
sub
enter
push
sub
add
movsl
xchg
outsl
push
lret
cld
test
subb
iret
pop
sub
push
out
shl
jnp
call
imul
in
adc
int
inc
push
dec
push
addl
dec
bound
adc
add
sub
shrb
push
or
sbb
fcmove
and
pop
xchg
addr16
jo
loopne
xor
xchg
leave
in
call
sti
movzbl
jmp
or
mov
mov
cld
icebp
sub
out
fs
cmp
pop
sub
or
sub
inc
mov
nop
addr16
pop
daa
and
outsb
inc
fwait
jne
hlt
jno
add
xchg
pop
aaa
movsl
outsb
dec
jmp
test
mov
add
jno
xorb
call
mov
xor
mov
mov
incl
and
xchg
dec
cmpsb
leave
les
or
sub
inc
js
push
sub
cmp
jns
fsubs
push
jl
push
movsl
in
fcmovnb
lea
sub
in
sbb
push
adc
and
dec
nop
mull
and
mov
sub
js
mov
adc
jmp
dec
ljmp
je
cmp
jle
push
ret
add
das
fsubrs
mov
outsb
stos
adc
push
jo
rolb
pop
inc
cmp
jno
jl
mov
xlat
add
mov
xchg
mov
ret
mov
lret
iret
or
push
push
xchg
out
insl
int3
jns
movswl
imul
je
jae
cwtl
ja
icebp
in
ss
and
xchg
push
imul
adc
inc
shl
movsb
mov
aas
loope
sahf
shlb
add
pop
sbb
or
fisubrl
xor
mov
adc
mov
addb
adc
or
adcl
mov
add
incl
mov
sbb
dec
push
je
inc
sbb
loope
jne
aad
push
xor
jae
xor
adc
adc
and
inc
lahf
adc
push
dec
nop
mov
das
stc
lock
dec
push
roll
adc
out
shlb
pop
add
push
jmp
cmp
add
add
cwtl
fdivl
lea
dec
dec
lcall
sbb
jecxz
dec
dec
mov
roll
mov
mov
jbe
lahf
aaa
mov
mov
or
lahf
pop
add
cmp
push
daa
fdivs
adc
mov
inc
mov
xor
push
mov
stos
xorb
mov
dec
sub
cmpsb
aam
jp
mov
jbe
xor
sbb
or
push
xor
cli
sub
xor
and
clc
sub
cmp
jb
inc
lcall
stos
ljmp
add
mov
lcall
cmp
ret
mov
nop
and
mov
jo
out
mov
mov
das
test
pop
sub
sub
and
sub
ret
dec
or
add
push
mov
into
pop
into
ret
inc
stc
add
cmp
or
add
sub
adc
sbb
sub
sti
je
mov
sbb
or
adc
xchg
iret
mov
push
dec
inc
pop
and
ljmp
dec
or
cmp
cld
iret
cmp
jns
add
je
push
add
and
nop
inc
in
sti
dec
sub
cmpsb
imul
imul
ja
dec
pusha
push
gs
enter
sbb
je
adc
lods
jno
jl
cmp
test
fstl
mov
push
fs
and
dec
mov
sub
sub
int
or
movb
mov
mov
xchg
push
inc
imul
dec
mov
push
sub
mov
jmp
cmp
jae
fidivs
mov
pop
push
add
repz
or
call
andl
dec
jns
rorl
cmpsb
bound
into
sbb
cmpb
je
fs
xchg
cltd
push
sub
test
adc
jbe
es
mov
sbb
enter
pop
and
adc
or
movups
jne
add
js
ds
inc
popf
xchg
dec
sbb
push
inc
sbb
push
and
bound
repz
xor
sbb
fidivs
ret
mov
arpl
or
outsb
sbb
lahf
scas
mov
jae
jne
jno
push
gs
inc
dec
loope
movsb
dec
jmp
add
insb
mov
cmp
es
inc
lahf
jbe
fimull
rolb
loop
jge
dec
sbb
fcmovb
and
idivb
fcoml
fwait
jo
jg
push
lea
int3
sub
push
shrb
hlt
push
mov
lods
rorb
int3
idivl
hlt
bound
test
mov
xchg
mov
jnp
inc
xor
adc
aad
and
divb
shlb
test
jle,pt
pop
xchg
push
add
rol
inc
aas
xchg
pop
or
inc
cmp
mov
mov
mov
or
outsb
in
adc
add
xor
and
push
inc
add
pop
stc
cmc
cmpb
fsubrl
dec
sbb
or
inc
jmp
push
cwtl
pop
add
shlb
adc
mov
int3
stos
inc
sbb
jle
js
jne
mov
scas
cmpsb
add
jge
cmp
xchg
mov
push
jle
repz
sbb
push
add
mov
call
xor
subb
insb
je
jae
lea
xor
cwtl
pop
jl
loopne
jbe
xor
sbb
dec
pop
pop
push
jbe
cld
xchg
enter
mov
sti
rorb
mov
or
dec
xchg
rclb
mov
shrl
loopne
lds
jle
push
push
imul
dec
mov
mov
adc
adc
jne
cmpl
bound
cs
mov
inc
outsb
add
push
lods
mov
lret
and
daa
inc
add
mov
and
and
lahf
adc
ja
and
sti
gs
sbb
or
cmpsb
loop
mov
adc
in
incl
pop
jno
stc
aaa
pop
add
aaa
adc
add
cmp
push
inc
movsb
push
push
sbb
lea
rorb
movsb
lods
add
pop
sbb
movsb
test
in
adc
xchg
in
in
sbb
icebp
ret
xchg
lods
test
adc
add
mov
test
add
sbbl
test
inc
inc
add
xor
cmp
movsb
mov
push
mov
push
and
inc
jbe
fmuls
orb
enter
push
cs
add
bound
sahf
call
sbb
jno
loope
add
jne
add
out
jo
pop
dec
push
push
or
push
lahf
xor
cmp
mov
nop
mov
sbb
xor
or
repz
enter
mov
sbb
and
lret
push
push
iret
and
fs
sbb
mov
cmp
sarb
in
inc
mov
adc
mov
mov
xchg
mov
in
mov
inc
das
sub
cmp
icebp
dec
fdivs
jne
add
sbb
dec
mov
sbb
inc
test
imul
cltd
mov
jl
push
das
sbb
stc
jnp
sbb
dec
add
fildl
push
sbb
cmp
ss
mov
add
add
in
pop
sub
lea
aaa
sub
pop
test
movsb
flds
jle
sbb
ja
xor
adc
pop
xor
shll
les
lods
mov
push
enter
leave
and
sbb
fcmovnb
call
imul
sub
sbb
push
insb
test
add
or
daa
das
sub
dec
test
mov
add
jg
sbb
add
and
jns
sbb
add
inc
dec
rorl
sub
jb
add
or
push
ja
inc
mov
imul
mov
or
mov
add
insl
rolb
add
add
ss
leave
roll
or
adc
js
push
add
nop
lcall
lock
pop
sub
lea
sahf
xchg
cli
scas
dec
mov
daa
sub
sbb
jg
movl
pop
pop
cmp
mov
lock
fidivrs
jbe
or
addb
push
and
inc
inc
jne
jp
xchg
dec
repnz
lock
or
and
in
mov
sbb
test
add
fmuls
add
lret
xor
push
cmp
adc
mov
cmp
add
or
push
daa
pop
leave
mov
sbb
sub
js
repnz
sbb
xor
sahf
mov
es
sbb
js
add
xchg
dec
mov
xchg
andb
sbb
or
popa
sbb
sbb
mov
repnz
sbb
sbb
aad
in
and
cmp
push
cltd
mov
cmp
stos
pusha
dec
cmp
pop
mov
rcrb
xchg
pushf
cmp
mov
and
sub
add
xlat
and
pop
fsubl
xchg
sbb
icebp
mov
inc
push
and
call
mov
popf
mov
fwait
sbb
mov
sbb
cmc
add
imul
rorb
repnz
and
pop
dec
sbb
push
rcl
mov
pop
ljmp
jp
sbb
ljmp
ja
dec
jl
dec
dec
lods
or
cs
jge
push
js
jno
das
jmp
in
jne
fmuls
test
lds
loope
cmp
add
fwait
xchg
inc
popf
or
add
push
sbb
pop
sub
push
adc
push
je
dec
and
xor
xchg
cmp
jbe
ficomps
add
push
arpl
movsb
xlat
sub
mov
repz
cmp
mov
and
hlt
add
dec
cmp
bound
adc
ja
insb
ds
jmp
and
xor
movsl
mov
aam
pop
js
lret
stos
push
and
sbb
orb
push
sub
clc
sbb
inc
ss
sbb
dec
fisttps
adc
enter
adc
fimuls
es
and
fst
fwait
dec
or
iret
test
divb
or
jo
lods
mov
adc
call
aaa
mov
dec
push
lods
adc
popf
pop
or
test
or
and
cmp
lret
and
push
sahf
mov
cmp
in
push
stos
xchg
rclb
sub
pushf
adc
int3
cltd
sahf
and
insl
loopne
call
inc
shlb
movsb
fwait
lcall
gs
out
adc
iret
dec
mov
push
cwtl
insl
adcl
push
mov
mov
sbb
popa
insl
mov
wbinvd
out
sbb
xchg
inc
shll
inc
js
sbb
out
mov
or
loope
xchg
inc
sbb
jnp
inc
pushl
or
lods
mov
jbe
pop
cwtl
adc
subb
jnp
enter
lahf
adc
subb
sbb
cmc
pop
sub
into
dec
ret
fs
sub
pop
rol
and
fnstenv
mov
fs
sbb
dec
test
pusha
pop
fisubl
js
sbb
es
push
lods
loop
imul
pop
cmp
lods
sub
inc
or
cltd
inc
and
sub
sbb
jns
sub
sub
add
roll
xchg
lods
mov
loop
cli
test
daa
and
mov
sbb
push
pusha
xor
xor
or
ret
outsl
pop
jmp
loopne
movsl
es
out
push
xchg
xor
inc
push
mov
and
adc
jge
mov
in
pop
mov
and
jo
scas
sbb
dec
repz
mov
or
pop
sub
or
xlat
push
dec
pop
aaa
stc
es
fs
inc
and
aam
jb
iret
push
aas
or
jnp
cmp
push
daa
das
xor
les
loopne
ret
stos
arpl
sbb
rcll
pushf
mov
sub
xchg
rorl
lds
add
pop
enter
sub
or
mov
push
sbb
and
lret
or
mov
shlb
dec
lea
push
or
add
xlat
fnstenv
lds
loopne
mov
shll
sbb
sbb
mov
icebp
and
loopne
sub
sub
push
leave
adc
mov
das
arpl
adc
mov
cmp
loopne
mov
clc
mov
int
je
test
adc
mov
cmp
pop
dec
xor
adc
sbb
push
sub
lea
test
jl
push
lret
lods
sub
jbe
pusha
sub
push
add
cwtl
sub
mov
les
xor
mov
in
push
mov
xor
xchg
push
or
xor
setg
and
leave
sbb
sbb
sbb
mov
xlat
sbb
test
xchg
sbb
sbb
mov
rclb
dec
test
xor
jns
pop
shlb
adc
push
dec
jmp
enter
aaa
inc
daa
or
jne
pop
sbb
mov
lahf
push
outsl
inc
mov
cmp
xor
xchg
subb
mov
mov
mov
or
pop
push
jne
lahf
lods
sbbl
sbb
stos
shll
nop
and
and
mov
mov
leave
push
iret
das
daa
test
xor
push
xor
cmpxchg
je
pop
and
inc
movl
or
fs
filds
add
jg
jae
xor
ss
sahf
pop
cwtl
add
xchg
mov
pop
sub
icebp
xor
psubusb
mov
xchg
and
cmc
fwait
inc
push
fldenv
mov
lahf
inc
dec
mov
push
or
push
xchg
sbb
lock
mov
jns
adc
mov
push
pop
stc
sub
shll
xchg
rclb
aas
inc
popf
xor
aaa
or
jge
xor
adc
push
cmp
sub
xor
int
aad
popa
sbb
sub
test
leave
shll
jne
inc
cmpsb
jno
xor
mov
rcll
sub
and
push
dec
popa
cmpl
cmp
mov
sbbl
test
jae
xchg
push
xor
xchg
xchg
cmp
movb
mov
push
sbbl
xor
add
movsb
test
data16
add
or
sahf
aam
add
mov
add
mov
ret
in
ds
lods
and
adc
xchg
push
or
mov
pushl
add
popa
dec
aaa
mov
xor
call
dec
mov
sub
outsb
push
push
jp
roll
xchg
push
xor
test
jne
and
inc
addb
add
cmp
pop
and
push
add
push
pushl
aaa
pushl
test
in
sub
push
notl
mov
leave
jmp
int3
sbb
roll
lods
addr16
aam
and
push
sbb
and
rcrb
mov
enter
adc
adc
mov
cmpsl
mov
sub
aaa
and
ljmp
dec
push
decl
pop
adc
daa
add
add
or
rorb
pop
sub
or
dec
sbb
or
repnz
or
dec
or
add
add
dec
push
jmp
push
int
pushl
xor
push
ljmp
mov
mov
push
rorb
faddl
jmp
or
adc
dec
fidivl
adc
stos
jmp
and
add
dec
notl
ret
xor
int
jp
adc
or
sbb
rorb
xchg
push
push
cmpsb
inc
xor
pop
call
sbb
push
ficoml
push
call
push
das
js
push
dec
cmp
sub
lcall
call
in
repnz
adc
mov
sbb
pop
xor
jb
add
sbb
sbbb
push
xor
test
je
jb
repz
add
lds
cmp
mov
jo
pop
mov
pop
jecxz
aam
rcrb
mov
xorb
rcrb
fcoms
int3
rclb
fs
mov
inc
sbb
or
scas
and
push
cmp
rcll
jge
xchg
sub
movsb
les
pusha
popf
sub
push
push
in
rorb
ret
add
fidivl
pop
movsl
ja
xor
jno
and
mov
lahf
add
gs
sbb
std
mov
mov
inc
xor
outsl
mov
push
pop
pop
jecxz
insb
in
adc
pop
aad
xor
xor
or
inc
and
aaa
xor
inc
xor
shll
cmp
jae
sbb
rolb
xor
xor
xchg
jbe
mov
pop
sub
fs
xchg
les
mov
loop
std
cmp
xchg
sub
pop
pop
call
push
xchg
add
mov
pop
imul
mov
cmp
movsl
lret
mov
sbb
add
inc
lcall
sbb
or
std
xor
les
push
jbe
je
jmp
sbb
inc
push
in
sarb
xor
je
or
cmp
sub
push
dec
and
pop
cmp
divl
and
loopne
xchg
cmp
lea
dec
sbb
push
in
sbb
inc
daa
in
fwait
imul
rcrb
cmpsl
sbb
pop
and
movsb
xor
adc
sub
movsb
mov
dec
push
sbb
jnp
pop
sbbl
imul
inc
xor
shll
sub
sub
imul
jbe
push
xor
lods
xor
pop
sahf
cld
sbb
inc
pop
xor
mov
inc
sub
sbb
mov
aam
mov
jne
shrb
inc
xor
adc
or
xor
aaa
sub
fimuls
and
xor
mov
cmp
add
pop
xor
sarb
andl
lods
and
mov
mov
adc
xor
sub
or
subl
cs
adc
dec
pop
or
frstor
inc
xor
ss
lcall
test
xor
outsl
sahf
dec
pop
mov
roll
aad
test
loop
or
jp
jp
sbb
addr16
ljmp
into
dec
xchg
ds
sbb
shll
mov
or
fwait
inc
rcrl
jnp
inc
es
sub
push
or
mov
push
rol
or
js
adc
jg
and
inc
xor
adc
adc
push
out
loope
pop
movsl
bswap
jecxz
iret
cmp
aaa
jns
fisubrl
xor
and
pop
cmp
push
push
in
dec
fmull
or
fs
leave
test
adc
push
xchg
push
mov
or
shrl
outsb
rorl
xorl
xorl
jb
loopne
stos
cld
rorl
movsb
shrb
enter
mov
popa
lods
and
sbb
jno
xchg
stos
dec
std
icebp
pop
lea
stc
aad
jg
xor
sbb
in
test
push
test
bound
stos
xor
int3
sbb
sahf
jp
into
xor
dec
shrb
cld
push
movsb
leave
sbbl
fmul
push
adc
dec
lea
test
popaw
mov
shrl
js
sbb
fcmovu
ss
cmp
jae
fiaddl
mov
xchg
xchg
lea
cmpb
outsl
or
cmpsb
das
mov
idivb
jae
mov
lcall
pop
pop
dec
je
cmpsb
sbb
lods
inc
adc
dec
rdpmc
cmp
push
push
loope
imul
xor
lea
inc
and
ret
in
adc
cmc
push
aas
cmpl
ljmp
fucomip
cmp
dec
mov
or
add
and
test
push
sbb
daa
mov
cmp
adc
add
mov
jmp
or
lods
sbb
dec
pusha
xchg
xchg
xor
hlt
jle
pop
pop
xchg
mov
dec
mov
cmpb
pop
dec
bnd
cmp
push
lea
push
push
pop
and
xchg
out
xchg
xchg
mov
and
call
add
inc
je
or
cmp
pop
pop
pop
mov
cmpsl
sbb
and
in
and
jo
shll
dec
add
pusha
mov
test
cmp
mov
push
mov
je
inc
or
sub
dec
mov
and
rclb
test
mov
dec
pop
mov
mov
cmp
aad
or
mov
jns
lock
iret
xor
aas
xor
rcrl
call
push
movsl
pop
add
or
lea
jo
push
xorl
push
inc
cmpsl
push
test
jge
push
sub
push
sub
ja
add
daa
or
push
je
and
push
lret
xor
pop
in
jae
mov
filds
aad
push
adc
pop
inc
shrb
mov
fs
mov
ljmp
push
xchg
push
mov
lock
mov
and
movl
add
sub
mov
shlb
sub
xor
push
sbb
jg
sbb
pushf
dec
inc
cmc
mov
dec
movb
push
push
in
push
sbb
dec
insb
loope
lds
fwait
sub
insb
jo
pop
addr16
sbb
fstps
mov
inc
add
push
mov
or
add
sub
lock
or
or
inc
enter
xlat
movsl
mov
mov
push
sbb
fs
xchg
xor
mov
push
out
fstl
and
xlat
fiadds
inc
cmp
mov
and
jno
jns
mov
xor
mov
outsb
cs
movl
cmovo
sahf
xlat
mov
xor
insb
sub
push
sbb
sub
sti
jo
sahf
fildl
and
lods
test
push
mov
inc
dec
cmp
fs
and
lea
or
mov
and
add
and
daa
mov
sbb
xor
xor
cwtl
pop
out
fisubl
xchg
sbb
or
xchg
movsb
and
pushf
push
inc
and
fsubr
imul
xchg
inc
arpl
mov
inc
leave
mov
jb
cmpsb
bound
push
outsl
cmpsl
xchg
mov
xor
or
repnz
fisttpll
fwait
pop
or
mov
movsb
pop
mov
xor
add
rcl
hlt
push
inc
push
adcb
adc
popl
js
mov
or
push
jno
roll
popl
pushf
lods
lds
push
mov
enter
sbb
add
add
add
dec
or
leave
adc
add
sub
loopne
jle
test
fisttps
xor
inc
lods
adc
mov
aad
bound
lds
adc
sub
push
test
dec
data16
xor
pushf
pop
cld
pop
inc
mov
push
pop
push
ds
mov
scas
add
pushf
popa
dec
cld
adc
jne
or
ljmp
push
cmp
je
cmp
je
xor
jns
cmp
je
cmp
je
push
inc
cmp
add
imul
jns
inc
hlt
jne
push
fidivrs
pop
inc
imul
pop
popf
sub
xchg
lret
mov
shll
aaa
pop
mov
scas
sbb
sbb
xchg
cmp
add
and
add
mov
add
std
adc
cmp
bound
test
add
cmp
loopne
push
int3
lret
dec
pusha
nop
adc
out
adc
mov
rcl
pop
push
or
pop
add
xchg
hlt
lea
add
rcr
xchg
rorb
push
loopne
sbb
and
loopne
imul
ret
jp
nop
add
inc
add
push
subl
sub
mov
jmp
fcoml
nop
shl
xor
scas
in
push
dec
adc
sbb
mov
cwtl
mov
inc
hlt
mov
or
sbb
cld
push
pcmpgtb
mov
push
sarb
add
adc
icebp
xor
push
ljmp
inc
sbb
nop
inc
ds
and
fucom
in
ret
and
jns
push
ret
dec
fcmovnu
int
movsl
dec
orb
ficomps
test
add
push
jmp
adc
test
jns
bound
and
pminsw
mull
jne
add
sub
psubusw
xchg
movsb
add
data16
in
mov
pop
cltd
imul
cmpsb
cmp
leave
jle
sub
inc
sbb
dec
inc
fsubrl
sub
scas
nop
fdiv
sub
mov
hlt
push
outsb
inc
mov
mov
cmp
push
mov
or
ss
sbb
add
insb
lods
push
cmp
push
jne
sahf
hlt
cld
nop
adc
mov
sti
jmp
pop
dec
jg
movb
inc
xchg
popf
adc
adc
mov
push
add
dec
aaa
xchg
push
sbb
ja
jb,pt
push
sub
testb
push
mov
sub
sub
mov
inc
xchg
enter
jp
cli
adc
xor
lret
decl
je
push
movsb
flds
adc
subb
xchg
push
mov
sub
aaa
push
or
jle
add
sbb
loope
mov
pop
mov
adc
jbe
inc
js
mov
xor
ret
dec
cmpsb
ljmp
jp
icebp
pusha
push
andl
cmp
xor
test
adc
sub
jbe
xor
mov
and
ss
dec
dec
pop
adc
pop
inc
and
inc
push
inc
mov
and
cmp
dec
add
xorb
pop
imul
pop
jg
sub
inc
sub
popf
or
push
mov
ljmp
cmp
or
xchg
dec
shlb
faddl
loopne
or
sbb
aad
inc
sub
dec
in
add
pusha
loopne
and
pop
out
in
adc
cld
lea
movsl
or
dec
roll
movsl
out
inc
adc
xor
push
cmp
mov
inc
pusha
xchg
dec
push
push
pop
pop
and
mov
pop
fwait
sbb
mov
sub
sub
inc
add
push
mov
pushf
sbb
sar
aad
and
icebp
jo
and
sbb
sbb
inc
jbe
mov
cmp
pop
fstl
cmpb
test
std
rcl
mov
cmp
jne
in
inc
dec
cld
pop
add
sbb
pushf
pop
cmp
push
sarl
sub
adc
mov
repz
and
ret
inc
inc
lcall
cld
add
mov
sbb
mov
pop
inc
stos
sub
in
mov
jle
test
cli
or
pushl
aam
or
pop
lea
adc
inc
mov
lea
sbb
daa
or
adc
push
pop
pushl
add
adc
push
adc
inc
sbb
test
lds
ret
push
movb
xchg
mov
sbbl
mov
test
add
push
icebp
add
xor
jecxz
and
aad
adc
jno
xchg
ret
and
push
fstps
xchg
outsl
adc
shll
or
cmp
jne
adcb
push
inc
jne
pop
push
shrl
or
jnp
lret
fidivrl
je
pushf
jecxz
dec
jmp
popl
push
sub
jecxz
push
lahf
inc
push
andb
dec
loopne
cmp
mov
or
sahf
jns
xchg
mov
mov
lea
xchg
jo
push
pop
sbb
pusha
dec
cmp
loope
push
out
mov
mov
pop
aam
cmp
mov
dec
cmp
xlat
or
adc
dec
in
stos
mov
push
adc
xor
dec
push
fwait
jp
push
mov
push
or
std
les
dec
mov
cmpsb
jl
jbe
adc
mov
fidivl
inc
mov
add
dec
rclb
cmp
xchg
add
mov
mov
and
pop
mov
popf
in
and
pusha
jl
push
sbb
push
arpl
and
sub
dec
mov
jns
hlt
mov
fidivrl
cmp
xor
push
jmp
push
push
dec
mov
add
cmp
sub
mov
push
pop
leave
and
and
add
popa
mov
cmp
cmp
sbbb
in
mov
dec
rcrl
fmuls
jmp
add
dec
mov
aam
mov
dec
dec
fadds
sub
ret
add
data16
cmpb
lea
xchg
push
push
lahf
sub
dec
inc
xor
gs
push
ss
inc
jb
or
sub
jo
cld
aas
adc
dec
test
add
lods
inc
mov
pop
stos
shlb
arpl
push
jnp
das
mov
int
add
call
add
push
data16
pop
mov
call
out
push
mov
test
push
xchg
mov
enter
pushf
andb
mov
imulb
mov
xchg
pop
push
adcb
push
pop
lock
dec
push
push
insb
pop
sub
or
mov
and
xchg
xor
movsb
call
or
shlb
adc
add
loopne
nop
cmpsl
mov
sbb
add
or
push
lahf
fsubl
roll
test
push
inc
push
cmp
bound
cmp
mov
fmull
push
push
or
cmp
pushf
adc
and
aam
xor
xor
test
mov
les
pop
jo
dec
or
xchg
hlt
cmpsb
loope
lods
mov
fldl
jle
sub
inc
push
or
cmp
loope
inc
pushf
test
into
out
cmp
jl
sub
or
pop
pop
mov
jns
and
dec
xor
push
pop
bound
xor
rclb
or
ret
ret
and
imul
fiaddl
loopne
in
add
les
or
adc
add
mov
mov
loopne
rclb
push
cmp
lea
sub
push
mov
pop
push
xchg
js
xor
in
jmp
push
sbb
lock
adc
mov
push
jl
lods
jae
loopne
push
push
and
mov
pop
jo
sbb
in
pusha
rcl
push
and
mov
test
rcll
add
dec
test
and
inc
lods
add
out
mov
push
inc
xchg
push
mov
std
ror
inc
or
icebp
ja
cmp
cwtl
xor
add
das
lock
jmp
and
pop
movsb
xorb
add
inc
xchg
mov
mov
and
test
pop
and
je
push
mov
pop
push
mov
xor
int3
sbb
mov
dec
add
jg
jecxz
cmp
dec
jmp
push
pop
jmp
and
cmp
adc
dec
pop
je
inc
scas
adc
push
mov
or
pop
sub
adc
pop
pop
ja
mov
push
decl
loopne
mov
dec
adc
pop
jb
push
add
cs
sub
add
sbb
pop
loope
pop
fmuls
pop
lods
scas
sub
cmp
jne
cmpsb
push
pop
mov
mov
insl
pop
cs
add
enter
insb
dec
mov
aaa
popf
int3
sub
xor
push
and
lret
enter
test
pop
and
loop
hlt
cmpsl
adc
sbb
mov
adc
das
adc
in
push
cmpsl
push
rolb
aam
cmp
rorl
dec
and
sbb
mov
pop
ja
pop
or
andl
push
sbb
paddq
push
jbe
lea
cmp
sbbb
adc
imul
call
mov
cld
sub
xchg
and
jmp
enter
or
and
nop
inc
sub
stos
clc
cld
fidivs
xor
and
sub
call
lcall
mov
add
test
or
shlb
and
xchg
mov
push
mov
jp
mov
mov
push
cmp
fs
jge
dec
dec
xchg
insb
add
loopne
mov
pop
and
adc
inc
adc
pop
pop
cmp
inc
fisubrs
adc
mov
test
jns
adc
popf
gs
cmp
add
in
jge
divl
lea
dec
icebp
mov
dec
cmp
outsb
fwait
inc
push
sbb
dec
enter
and
scas
push
sub
dec
pop
inc
sub
hlt
into
aaa
pop
add
repnz
stos
rclb
xor
or
cmp
sub
dec
adc
xor
and
inc
lret
fs
pop
mov
lea
test
dec
pop
and
adc
add
aad
pop
push
xchg
cmp
dec
pop
and
inc
push
xchg
and
and
or
adc
or
push
loopne
aam
cmp
clc
fistl
xor
push
movb
jp
mov
push
pop
roll
adc
fmull
lret
das
add
aam
and
sub
push
cmpl
xchg
movsb
icebp
xchg
aad
in
pusha
mov
lea
lods
clc
xchg
mov
and
jb
inc
mov
adc
fs
cmp
xchg
lods
shl
adc
xchg
dec
xchg
sub
rorb
mov
aam
jae
jg
cmp
mov
je
jne
and
dec
mov
or
mov
push
xchg
push
adc
pop
jmp
push
cmp
pop
sbb
sub
xchg
mov
dec
sbb
std
mov
jle
lea
cmpb
fidivrl
xor
outsl
jecxz
call
mov
jecxz
xor
movb
push
and
jmp
sti
pop
jl
pop
je
lods
adc
xor
clc
stc
dec
add
inc
or
jo
inc
fdivl
mov
ficoml
cmp
add
add
jmp
test
cmp
mov
test
mov
loopne
stos
lea
insb
pop
out
dec
loope
jae
sub
add
or
or
pop
call
loopne
stos
or
js
enter
cmp
jne
icebp
add
xchg
cmpsb
test
hlt
add
and
enter
push
and
or
jmp
dec
adc
xchg
mov
popf
jb
popf
sbb
xchg
sub
nop
ds
mov
ds
add
fldt
push
xor
and
cwtl
cmp
pushf
test
jne
js
je
mov
test
les
or
pop
pop
xor
push
aaa
invd
dec
cmp
xor
push
rorl
or
and
rolb
je
nop
xor
and
jmp
stos
jne
push
cmp
jne
xor
inc
lret
out
orl
xor
fdivs
or
mov
cmp
sbb
mov
or
imul
inc
mov
push
pop
movsb
gs
add
mov
or
xchg
mov
sbb
dec
sbb
lret
mov
push
inc
cwtl
sbb
or
fiaddl
cld
push
fisttpll
jg
sbb
push
and
pusha
aam
lea
jo
sbb
sub
mov
shl
lea
jmp
push
sub
push
into
inc
je
mov
jns
mov
lods
testb
inc
add
rcrb
popa
imul
leave
pop
inc
cli
int
addr16
dec
repnz
xchg
pcmpgtd
es
lcall
or
xor
clc
cmp
jbe
sub
push
mov
or
inc
ljmp
adc
and
fsubs
fisubrl
and
pop
adc
push
in
mov
mov
mov
pop
insb
fildl
fadds
xor
jle
inc
adc
jo
rcr
mov
adc
mov
jp
sbb
sbb
clc
adc
js
push
loop
stos
cmp
sub
add
mov
call
fnsave
cmp
roll
push
add
test
fdivs
or
jne
dec
dec
pusha
fmuls
push
jb
adc
mov
jl
cmp
sub
xchg
test
push
push
aam
jecxz
outsl
fdivr
dec
call
xor
jg
jg
mov
jmp
mov
add
cmp
gs
mov
test
push
lea
pop
push
xor
sub
or
and
and
or
gs
mov
push
adc
add
or
xor
adc
lcall
and
pop
push
ds
xor
sub
or
pop
or
int3
not
mov
xchg
xchg
adc
cli
adc
cltd
mov
adc
xor
in
jl
adc
insl
mov
into
dec
push
dec
cmp
lret
sahf
addps
dec
dec
xor
push
cmp
loop
dec
sti
add
aaa
xchg
sbb
scas
jmp
cmc
jne
cmp
push
or
stos
pusha
sti
js
push
sub
mov
xchg
pushf
or
fimuls
mov
pusha
and
sub
push
add
enter
push
and
pop
cld
outsl
mov
shlb
ss
test
je
test
cmp
push
mov
lret
or
enter
pushf
mov
out
pop
push
mov
push
mov
sub
or
dec
adc
lcall
or
js
inc
jecxz
lock
popa
pop
les
mov
jne
mov
and
rcrb
inc
sbb
jo
dec
mov
or
mov
lret
ja
popa
mov
push
repz
scas
and
sub
adc
je
jl
jl
push
or
dec
cmpsb
push
mov
icebp
sub
jns
cs
sub
push
bound
sbb
pushf
jmp
pop
and
inc
leave
in
push
jecxz
sbb
push
popf
dec
sub
data16
popa
call
mov
jb
dec
das
add
mov
pop
shll
add
xchg
inc
pop
sbb
mov
scas
imul
fimuls
popf
in
pusha
pop
push
dec
pop
cmp
je
jmp
inc
inc
std
xlat
sub
popa
mov
and
xor
sub
sarb
in
adc
jo
mov
rolb
pop
inc
inc
fmuls
out
imul
test
jbe
push
mov
add
xchg
xorb
loope
mov
inc
xlat
xchg
enter
decb
lret
or
popf
dec
pop
and
xor
and
and
add
add
add
jg
and
icebp
in
sub
rolb
sbb
mov
or
pop
das
push
in
data16
pop
in
jle
inc
out
pushf
pop
in
xchg
mov
push
dec
es
lock
clc
sbb
adc
inc
jae
jo
aas
mov
pop
pop
push
ds
mov
lock
adc
ret
addr16
push
pop
inc
cmp
cmp
cmp
leave
push
push
icebp
jge
stos
push
loopne
pop
addr16
push
mov
mov
jo
fildll
sbb
adc
jg
add
lock
subl
loopne
ljmp
and
push
lret
or
and
shrl
dec
push
cwtl
call
xor
call
in
add
imul
hlt
and
push
mov
vmulps
cli
adc
les
out
nop
loop
dec
inc
das
in
inc
pop
andl
loope
mov
sbb
xchg
jg
cwtl
or
sub
push
sub
push
cmpsl
std
pop
ret
dec
add
inc
or
mov
cwtl
xchg
xchg
rol
jns
pushf
aaa
fs
jl
cwtl
adc
insl
mov
std
mov
pop
mov
sbbb
pop
neg
pop
xor
add
sahf
outsl
inc
xchg
mov
pop
add
push
les
push
ja
push
adc
jbe
pop
ret
inc
andb
out
mov
int3
fst
or
lock
loop
push
rorl
ret
shl
dec
shr
dec
sti
mov
cmp
push
push
fldenv
lods
fdivs
popa
das
push
not
je
aam
jne
bound
cld
jle
and
imull
jl
mov
xor
mov
adc
dec
or
or
ljmp
cmp
sbb
xchg
xchg
out
push
idivb
mov
loopne
rcll
mov
test
pop
cmc
or
adc
jmp
xchg
sbb
jne
stos
movsl
pop
push
aad
dec
adc
push
xor
jo
xor
adc
loopne
ja
adc
cmp
fcompl
loop
xor
push
mov
or
or
push
imul
push
pop
int3
test
sbb
adc
push
outsl
inc
mov
je
dec
dec
add
or
dec
inc
data16
mov
pusha
pusha
sbb
and
add
fsubrl
dec
or
insb
popa
je
adc
pop
and
nop
mov
push
dec
scas
faddl
sub
adc
adc
movsb
pop
push
push
add
sub
subb
inc
push
xor
push
mov
xchg
xchg
and
xor
mov
inc
add
xchg
mov
dec
mov
push
sbb
push
and
cmpb
push
pop
scas
jbe
mov
sbb
add
adc
dec
addl
adc
aam
xchg
ret
push
push
lea
aaa
dec
je
ds
pop
inc
adc
sbbb
mov
fimull
int
push
push
xchg
xchg
adc
repnz
mov
mov
ds
nop
loopne
data16
jnp
jne
or
inc
lret
mov
sbb
mov
mov
jbe
test
cmp
push
jl
adc
jae
dec
mov
mov
and
loope
push
mov
imul
xcrypt-cbc
cmpsl
xchg
inc
lahf
dec
adc
clc
inc
push
mov
push
jge
sbbb
sub
sarl
mov
hlt
ja
sub
sbb
jae
dec
xchg
sti
adc
and
pusha
cmp
cmp
mov
mov
xchg
add
jmp
mov
ret
mov
adc
shr
mov
and
fidivs
jecxz
lock
jmp
test
pop
out
mov
sbb
pushf
cmp
xchg
add
lods
clc
inc
test
jecxz
aam
stos
push
in
int3
pushw
mov
mov
dec
test
jmp
in
jle
sub
pop
add
insb
lock
mov
lock
push
ret
test
xchg
jns
roll
cli
mov
pop
mov
and
pushf
jmp
adc
sub
sbb
push
pusha
rolb
adcb
loop
arpl
fsubrp
iret
movsb
push
cmp
sbb
jbe
xchg
sbb
insl
xor
add
sahf
xor
jmp
loop
xlat
mov
lock
mov
jmp
push
lahf
popf
sbbl
or
gs
inc
jbe
jle
ficoml
je
aam
pop
rcl
lahf
and
add
lods
mov
adc
push
add
aas
rcll
enter
inc
or
jae
in
or
add
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
push
enter
sub
sbb
cmp
mov
andl
test
outsl
xchg
jnp
xchg
mov
cmp
add
sahf
and
aad
cmp
je
mov
jg
jne
push
or
jne
xor
movsl
cmp
push
dec
xchg
sbb
sbb
add
fadd
add
negb
sub
push
iret
outsl
jns
xor
mov
mov
push
xor
jb
pop
xor
xchg
sub
je
jle
sbb
into
lock
sbb
xchg
cli
pop
and
sbb
gs
mov
push
add
popf
pop
xor
xor
mov
dec
sbb
jnp
push
mov
call
psubb
inc
push
rcr
xor
pop
add
aaa
loopne
cwtl
or
dec
loopne
adc
mov
dec
mov
out
mov
inc
loopne
pop
outsb
fsubl
iret
sbb
and
xchg
mov
jne
mov
or
cli
mov
and
add
fsts
ss
jo
xorl
imul
or
sub
mov
push
or
data16
jbe
adc
inc
and
cmpsb
xor
push
pusha
cmpsb
imul
test
or
stc
stc
mov
andl
sahf
sti
or
mov
inc
cmp
sub
test
inc
pop
rol
fidivrl
scas
sub
cmpsb
mov
pop
add
subb
divl
loopne
cmc
xchg
add
cwtl
sbb
sbb
or
xor
add
fcoms
jl
js
sbb
push
fs
lcall
jbe
daa
add
push
pop
ret
pushl
sub
xor
nop
mov
shlb
adcb
clc
and
push
clc
adc
and
cmp
jne
mov
push
xor
mov
shrl
dec
pcmpeqw
int
xchg
es
adc
sbb
xor
data16
mov
pop
bound
pop
mov
flds
add
fbld
std
jo
jmp
cmp
sbb
adcb
sbb
xchg
lret
or
adc
add
cli
push
ja
mov
js
add
rcrl
inc
shll
mov
sub
push
shr
mov
and
push
pop
xor
lea
add
pop
ret
jne
out
add
test
in
jbe
sahf
mov
push
pushl
mov
inc
loopne
shrl
ljmp
cmp
out
pop
add
repz
xchg
push
push
jnp
jne
lea
add
xlat
popa
jne
adc
cmp
inc
fmulp
notb
mov
out
test
fildl
in
scas
add
cmp
mov
adc
adc
adc
pop
mov
cmp
in
subl
repnz
out
sti
cltd
in
add
iret
cmp
pushf
orb
pop
cmp
clc
push
mov
inc
gs
fcmovnbe
xchg
out
fnop
lods
je
dec
add
mov
xlat
adc
ret
mov
stc
lock
push
stc
pop
sub
icebp
jne
xor
stc
mov
xorl
fwait
neg
push
xchg
inc
lahf
sub
sbbl
sub
sub
mov
push
pop
test
insl
fdivrs
testb
or
adc
shrb
mov
xor
push
test
sub
loopne
mov
or
jg
loop
jmp
cmp
mov
cbtw
dec
xchg
pop
adc
or
jp
movsb
push
inc
or
push
dec
or
inc
or
inc
loop
inc
bound
inc
push
dec
dec
es
add
jl
shlb
or
fdivl
xchg
test
pop
xor
sub
inc
inc
pushf
jle
jecxz
add
sahf
popa
sar
enter
mov
xchg
add
push
test
mov
fsts
xchg
sub
js
xchg
je
pusha
push
mov
nopl
mov
scas
int
fdivrs
scas
jo
cmpsl
ret
push
and
sbb
rorb
enter
aam
dec
add
inc
fidivrs
sbb
notl
add
and
sbb
pop
and
or
cwtl
cmp
mov
enter
insb
and
orl
adc
movsb
add
push
fldenvs
insb
mov
xchg
fs
repnz
je
cmp
je
testb
jne
cwtl
roll
loop
push
cmp
xchg
mov
adc
xchg
push
push
lock
push
sub
adc
push
mov
pop
lea
mov
mov
adc
add
pop
lcall
dec
lock
or
xchg
or
lock
xchg
xchg
cld
lock
cmpsl
fldl
jecxz
addb
push
cmp
popf
mov
pusha
in
adc
sbb
jns
push
dec
ss
dec
sbb
int
mov
decl
sbb
test
into
add
push
mov
lock
mov
add
and
cs
inc
adcl
xchg
lock
leave
lock
cs
push
clc
shrb
sbb
and
xor
pop
or
add
sbb
and
orl
clc
add
or
inc
mov
jbe
dec
jbe
push
add
adc
cltd
fimull
push
mov
mov
jns
sbb
or
jge
jne
mov
xchg
or
mov
mov
mov
mov
or
popa
push
insb
std
push
ret
addr16
push
aas
jne
out
fsubrs
pop
push
xor
xchg
fsubs
pop
pop
icebp
pop
cltd
jb
xchg
stos
or
pushf
cwtl
fidivrs
pusha
inc
lods
sub
push
test
sub
lock
lock
fwait
sbb
and
push
add
pusha
xchg
push
sbb
cwtl
dec
push
lea
mov
jo
and
sahf
mov
clc
mov
dec
push
or
int
adc
dec
lods
add
adc
pushf
fwait
mov
pop
mov
xchg
or
popl
fbstp
mov
jno
out
test
inc
cmpl
mov
shlb
mov
inc
aam
mov
pop
and
pop
arpl
dec
mov
mov
jbe
sbb
mov
push
orl
ja
fmul
inc
les
lods
out
std
mov
mov
popa
push
pop
cmp
fimull
jp
push
mov
jo
cmp
cmp
cwtl
sbb
pop
loopne
or
mov
addl
push
sbb
sbb
fistpl
ret
adc
test
xor
js
pusha
mov
js
xor
adcl
pop
ret
xor
add
inc
ljmp
push
mov
adc
add
pop
mov
pusha
pop
xor
lods
push
or
jo
test
pop
fistl
popa
ret
loope
into
jecxz
and
data16
loopne
cmp
ds
pop
test
add
lret
or
stos
lock
verr
mov
pop
imul
aam
inc
adc
fildl
jecxz
loope
xchg
xchg
aam
jp
sbb
test
cmp
mov
jmp
sahf
scas
add
clc
jge
mov
jmp
das
jecxz
push
lock
fwait
popa
push
pop
shlb
sub
mov
add
mov
fs
pop
xchg
xor
pop
mov
adc
mov
xchg
sub
mov
shll
je
mov
push
cmpb
jge
pop
adc
addb
push
out
jo
push
cli
fwait
pop
pop
or
mov
aaa
and
xchg
popa
cwtl
bound
shrb
and
orl
movb
lods
add
mov
mov
jne
aaa
rolb
and
loope
and
aas
mov
movzwl
adc
xor
mov
daa
jae
xchg
out
mov
push
sahf
push
push
je
or
das
mov
mov
cmp
push
andl
push
jmp
movsb
mov
cli
add
adc
push
add
push
xor
add
push
sbb
jb
pushl
inc
cs
xlat
inc
dec
or
jp
jae
inc
mov
sub
adc
ret
repz
sub
xchg
sbb
icebp
xchg
add
or
test
and
das
push
into
imul
std
and
cmp
cli
push
sbb
jb
ficoml
imul
push
push
push
jecxz
cwtl
add
cli
sbb
xor
add
sbb
sub
lock
xchg
lock
sub
inc
cmp
imul
out
dec
rcll
xor
aam
decl
adc
xor
pop
cmp
rdmsr
sarb
stc
dec
stos
pop
mov
inc
mov
outsl
imul
shr
and
xchg
shll
or
adc
pop
inc
shrb
pop
loope
jmp
or
add
mov
pop
test
pop
sbb
icebp
xor
dec
dec
out
push
or
jo
push
sub
and
dec
xchg
arpl
inc
fimuls
xchg
adc
lock
xchg
lret
sbb
mov
int
push
and
xor
ficomps
sub
in
inc
ret
movswl
pushf
ss
in
neg
sbb
push
cmp
ret
xchg
or
xor
xchg
or
pop
and
jb
loope
mov
mov
or
add
xor
jp
mov
push
xor
lock
mov
imul
xor
inc
xor
inc
lcall
insb
xor
sahf
pop
inc
xchg
dec
inc
xor
lock
andl
jne
xor
lock
jo
add
sub
pop
pusha
jmp
xor
lods
sbb
mov
loop
mov
std
inc
lea
and
sub
ss
push
inc
add
fdivl
fwait
or
push
mov
out
ret
pop
pop
pop
pop
xchg
inc
idivb
add
adc
add
outsl
xor
fistpll
gs
adc
pop
mov
jl
and
pop
jo
cltd
add
test
sbb
or
push
cmpsb
int
or
cmp
sub
jle
dec
xor
pop
sahf
push
xchg
dec
lea
int3
outsb
mov
rcll
pop
rcll
push
xor
xor
adc
xor
jl
movb
pop
mov
js
adc
inc
mov
adc
push
test
xchg
repnz
cmp
das
rcll
push
mov
sbb
sbb
push
xor
or
mov
add
popf
mov
in
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
inc
push
add
fsubs
add
jmp
out
jmp
pop
cwtl
hlt
push
fbstp
mul
push
nop
or
je
bound
leave
lcall
and
push
pop
xlat
fcmovne
decl
mov
cmp
cmp
cmp
mov
xor
add
sbb
fidivs
testb
or
mov
add
loop
jl
mov
mov
dec
jl
loope
xor
xchg
cmp
or
inc
xor
xor
mov
cmpl
std
ss
mov
arpl
adc
dec
xor
cmp
lret
mov
repnz
mov
stos
pusha
xor
sbb
out
dec
movswl
add
and
cmp
add
xor
popf
shll
and
outsl
lods
add
dec
sbb
aas
push
fnsave
addr16
cmpsl
dec
pop
or
pop
fldl
rol
fisttps
lahf
add
lods
cmp
jne
jp
cmp
pop
mov
dec
and
outsb
and
imul
cmp
das
loop
hlt
push
xchg
cmp
and
ret
and
or
xor
mov
nop
jmp
lea
fmul
lods
fdivs
fsubrs
ret
shlb
pushf
data16
out
insl
xchg
inc
xlat
adc
aad
add
sahf
movsb
test
cmpb
fcoms
adc
mov
mov
aad
jb
pop
sbb
testl
mov
loopne
andb
ja
pop
or
movsl
ret
jmp
repnz
popf
xchg
imul
loopne
sbb
push
push
lea
mov
jp
mov
orb
testl
cwtl
inc
push
nop
xchg
aam
clc
loop
ficoml
insl
je
mov
xchg
xor
dec
dec
mov
les
in
pop
add
or
test
test
inc
sti
xor
addr16
xor
push
mov
jecxz
movsl
fcomps
inc
cwtl
gs
test
out
and
push
and
xchg
adc
jl
add
xor
gs
dec
jnp
je
push
out
inc
movsb
adc
xor
add
or
adc
mov
lods
les
aas
mov
ss
lret
xor
jmp
js
add
clc
push
push
dec
fdivrp
jle
lods
and
add
or
xchg
sahf
mov
aam
pusha
test
jbe
mov
xchg
push
adc
lock
push
loop
jo
pushf
ljmp
inc
je
es
adc
cmpsb
push
and
pop
clc
xor
cmp
push
sub
sbb
fldl
mov
sti
movsl
mov
or
jae
pop
loop
pushf
push
int3
add
dec
mov
sub
pop
imul
cli
dec
jne
jbe
and
cmp
mov
adc
jmp
jb
rcrl
dec
insb
add
lea
enter
xor
add
pop
push
adc
cmp
movsl
jge
mov
or
jge
adc
pop
dec
push
int
notl
dec
out
adc
jne
and
pushf
mov
jp
xchg
or
jno
and
and
and
xchg
push
test
mov
movsb
inc
inc
push
add
add
sbb
push
inc
movsl
cmpsl
cmp
or
lods
jbe
loop
lcall
jno
and
mov
push
inc
cld
cmp
push
jle
sar
inc
in
jge
movl
and
add
test
mov
adc
cmp
shlb
dec
sahf
loope
xchg
popf
sbb
stos
pusha
insb
std
mov
jg
stos
sbb
mov
aam
adc
mov
push
jbe
out
sbb
xor
sbb
push
and
scas
rcrl
out
push
push
shl
clc
and
dec
mov
je
push
lock
jle
cmpsl
jl
pop
adc
inc
hlt
push
dec
cmp
mov
fwait
jge
bnd
mov
jecxz
rclb
jecxz
push
mul
je
lcall
mov
dec
sub
outsb
cmp
xchg
xor
dec
push
rolb
sbb
add
xor
subb
and
mov
add
loope
adc
pop
cld
jecxz
adc
push
sbb
mov
dec
nop
out
movsl
addl
or
sub
push
xchg
mov
and
cmp
xor
pushl
mov
inc
adc
movb
cmp
xchg
mov
add
pop
cmp
pop
dec
add
mov
daa
ss
mov
push
xchg
punpcklbw
js
sub
mov
push
js
sbb
push
sbb
sbb
push
lea
loopne
shll
mov
xchg
inc
aaa
jbe
pop
nop
pusha
or
icebp
es
dec
sub
inc
jbe
rorl
jmp
add
add
xchg
or
jg
xchg
mov
jo
dec
in
rcrl
xchg
pop
aas
pop
or
in
scas
repz
addr16
cmp
mov
popf
aaa
dec
cmp
scas
add
adc
cmp
mov
push
rorl
icebp
adc
dec
sbbl
dec
push
inc
shrb
mov
popa
mov
mov
inc
mov
aam
and
lcall
inc
mov
jmp
int3
or
loopne
stos
cmp
data16
shr
jmp
ret
push
push
adc
adcb
pusha
and
pop
adc
subl
fs
mov
push
or
test
sub
lcall
mov
mov
setb
lea
dec
sarl
insb
mov
out
pop
push
pop
repnz
xchg
les
push
lock
in
loopne
pop
testl
or
aas
cmp
adc
es
fsubs
enter
mov
inc
or
dec
jge
sbb
or
mov
lret
dec
jnp
xchg
or
mov
pop
aaa
sbb
push
cmc
jle
jmp
or
dec
sbb
pusha
and
lret
inc
or
in
push
pushf
popf
jae
imul
je
sti
les
lock
popa
sbb
mov
testl
test
nop
jle
xor
fnstcw
push
ds
test
dec
jae
loope
lret
adc
mov
add
cmp
add
loope
dec
insb
dec
imul
jo
mov
push
mov
or
jae
push
push
rcrl
xor
aam
sbb
sbbl
sub
xor
push
in
lcall
inc
xor
fmul
xor
mov
ss
pop
loopne
xchg
adc
rcll
mov
in
dec
aam
shll
or
popa
or
imul
stos
sub
aaa
shl
mov
and
out
push
jae
and
push
push
and
mov
fildl
xorl
sub
inc
and
mov
pop
dec
pop
lods
push
jg
lods
xlat
sti
ds
cmc
add
movsb
lret
mov
push
fisubl
shrb
jns
les
aaa
adc
mov
and
lds
sti
sub
xor
aaa
mov
xchg
cmp
pop
adc
imul
cmp
fcmovnb
rcr
enter
in
mov
mov
or
dec
repz
push
xor
xchg
mov
pop
inc
push
push
leave
ss
aaa
pop
dec
rolb
push
push
xchg
mov
jge
in
cmp
mov
inc
add
loopne
xor
ret
imulb
cmp
sbb
ficompl
and
push
and
cltd
jno
fisttps
xchg
pop
andl
and
gs
cmp
out
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
and
lock
push
push
or
ds
dec
cmp
xchg
movsb
js
jne
jo
orl
ss
sub
sti
push
lcall
adc
adc
shlb
push
cmp
pop
fldt
sbb
add
mov
mov
jbe
call
xchg
xchg
hlt
push
loopne
mov
cld
inc
stos
or
and
mov
cmp
adc
je
add
mov
sahf
add
mov
sti
or
adc
and
xchg
jl
test
add
cli
and
adc
movsb
sub
movl
fistpll
mov
adc
adc
adc
and
cmpb
je
sub
add
lods
xchg
movsb
add
push
adc
scas
test
inc
nop
adc
add
in
sub
mov
or
push
add
xchg
jne
sub
incl
lret
inc
loop
lret
aas
inc
and
or
dec
push
xchg
push
jnp
mov
adc
mov
add
dec
sbb
add
int3
sub
push
cmc
test
cmp
or
ret
or
inc
xor
xor
jecxz
gs
roll
jns
mov
sbb
jbe
movsl
xor
adc
fdivrl
notl
popa
add
or
fdiv
jg
push
mov
push
and
cmp
loopne
inc
push
push
push
mov
add
in
push
add
call
mov
sbb
xor
loopne
test
lods
inc
cmp
fdivr
pushf
cmp
repnz
xor
push
push
or
inc
arpl
jbe
rcll
repnz
inc
add
cmp
add
cmp
jecxz
jne
pop
in
imul
fcompl
and
scas
cmp
nop
and
add
mov
fwait
out
les
adc
mov
sub
or
iret
mov
lret
adc
xchg
cltd
add
and
ret
xorb
push
in
mov
xchg
stos
pop
fdivrs
repz
iret
movsl
cltd
sbb
clc
xor
xor
push
push
push
or
xor
shr
loopne
loopne
ljmp
jle
jge
jne
es
ror
or
dec
arpl
cmc
sbb
inc
cmpsb
aam
aam
pop
xor
mov
and
push
movsl
or
inc
in
cmp
cmpb
dec
fiadds
adcl
inc
push
ret
shlb
fs
je
and
imul
ffree
or
es
xor
ret
lods
or
jno
xchg
dec
mov
add
push
adc
inc
jmp
xchg
mov
sbb
movsl
lock
mov
pop
ja
cmpb
dec
fisubl
mov
sbb
sbb
xchg
dec
jno
in
add
notl
or
mov
adc
dec
jo
inc
cmc
mov
ret
jb
jae
xor
or
jmp
and
or
or
mov
movsb
mov
sar
push
push
mov
dec
inc
hlt
enter
jb
push
popa
dec
mov
mov
sub
mov
out
push
mov
les
out
mov
add
push
xor
inc
enter
jnp
in
mov
inc
push
jne
add
adc
pop
push
or
addr16
or
ds
leave
mov
sub
test
popa
add
cs
loop
mov
mov
jo
or
aam
push
and
xchg
subb
mov
je
and
jmp
inc
mov
icebp
popa
push
cmc
inc
ret
add
aas
das
mov
adc
or
orb
imul
sbb
dec
and
and
sbb
adc
sbb
rol
ljmp
push
out
xorb
xchg
lret
xchg
mov
loope
add
pop
lods
andb
add
or
push
dec
jae
xor
xor
xor
cld
dec
in
jnp
cli
add
adc
test
dec
pop
incl
cs
cmp
lcall
fs
xor
inc
rolb
pop
test
mov
and
push
mov
sbb
mov
and
dec
add
xchg
std
movsl
movsl
pop
loopne
pop
ficomps
in
iret
and
dec
or
sbb
cmp
and
ficomps
testb
mov
push
add
cmp
nopl
dec
xor
rolb
add
insl
cmpb
add
in
fmuls
adc
fdivrl
inc
cmp
in
push
jb
pop
xor
push
push
lret
test
dec
or
pop
mov
dec
push
cmp
adc
hlt
or
or
jmp
xchg
and
andb
xchg
das
and
pop
add
mov
inc
ret
or
fmull
and
inc
imul
cmp
sub
xorb
or
pop
jg
test
movsbl
sub
pusha
dec
jmp
lods
push
out
cmpl
bound
push
sbb
inc
and
lock
xchg
cltd
lock
adc
or
movsl
lods
movsb
dec
sbb
inc
flds
pop
aam
fdivrl
movsl
mov
or
subl
xor
lods
das
sbb
call
je
or
aam
insb
cwtl
mov
je
out
dec
pop
xor
and
add
pop
js
outsb
sarb
sbb
xchg
out
ja
hlt
and
push
inc
inc
data16
push
fisubl
mov
and
adc
rol
cwtl
and
lods
adc
xchg
ficoms
adc
cmp
sbb
pop
mov
pop
dec
jae
mov
xor
or
imul
add
mov
add
ss
mov
hlt
jge
mov
jle
push
dec
xor
jg
and
mov
inc
jne
ds
cwtl
dec
push
jp
inc
lret
sbbb
pop
inc
mov
sbb
pop
cld
fmull
imul
push
adc
jp
mov
and
mov
add
andl
movsl
add
movsl
add
pop
cwtl
imul
out
mov
or
sbb
and
sub
and
sahf
andb
out
pop
ficoms
repnz
xor
rorl
xor
aaa
stos
sbb
and
shrb
xchg
je
and
into
hlt
je
jo
xchg
and
mov
add
bound
xchg
push
adcb
data16
xlat
jnp
add
jnp
hlt
data16
fs
je
cmp
je
inc
adc
push
adc
in
xor
imul
movlps
add
fnsave
ds
add
sti
and
add
or
inc
dec
dec
dec
clc
out
mulb
add
pop
je
or
push
cmp
movsl
inc
dec
jle
lock
cmpl
adc
xchg
scas
xchg
push
mov
lret
inc
and
jge
in
pop
pop
punpckhbw
repnz
das
add
imul
rorl
in
mov
inc
push
sub
cmp
enter
rolb
inc
inc
sbb
cmp
and
jecxz
rcrl
jp
insb
std
fiadds
add
dec
push
add
sbb
int
adc
and
cltd
lock
out
or
adc
lea
push
dec
mov
or
in
out
push
nop
add
and
mov
jo
cltd
nop
pop
mov
cmp
subl
push
addr16
push
add
sub
and
dec
cld
movsbl
mov
gs
sbb
movsb
inc
out
dec
or
stc
sub
push
or
add
nop
cld
adc
sbb
sbb
xchg
push
or
mov
or
add
cld
lods
mov
adc
gs
and
and
addr16
or
mov
inc
push
and
ds
pop
mov
xor
sub
dec
cld
lea
ja
jmp
mov
mov
xor
leave
lahf
sub
xchg
lock
jb
or
xor
into
sbb
cmp
lods
mov
es
mov
xchg
cmp
mov
inc
mov
mov
mov
lds
cmp
rcrb
nop
and
or
aas
sub
sub
insl
ja
adc
dec
add
dec
xchg
push
pushf
xchg
xchg
inc
faddl
mov
fs
dec
dec
xchg
sbb
iret
lret
push
adc
pop
xor
in
repnz
mov
xor
add
dec
push
mov
mov
mov
pop
and
jns
cwtl
ret
dec
repz
or
out
jns
dec
in
mov
les
cs
xchg
ret
add
or
adc
jne
push
cltd
addb
add
dec
data16
cmpsb
add
add
sahf
int
pop
adc
int3
or
xor
fcomps
movsb
add
mov
or
fdivr
and
push
call
adc
pop
out
push
adc
or
or
std
outsb
push
mov
dec
jl
fidivrl
jmp
mov
shlb
cmp
rolb
lods
adc
push
adc
int3
ss
add
jb
rorb
inc
push
add
xor
cmp
jl
scas
adc
mov
lret
and
add
dec
inc
or
inc
or
add
enter
push
mov
loopne
add
inc
pop
les
jl
cmp
pop
and
dec
mov
push
add
inc
out
pop
cmp
jne
jg
dec
shrw
jne
dec
push
lret
rcl
xlat
add
push
ret
incb
inc
jmp
push
cmp
cmpsb
xchg
lea
sbb
pop
push
popf
xor
add
in
mov
jl
sub
icebp
or
cmpsl
mov
movsb
or
jb
enter
sahf
or
jge
mov
jge
movsb
sahf
adc
outsl
add
xor
sbbb
jmp
xor
aam
adc
in
jne
das
jp
adc
loopne
pop
jle
add
fldt
insb
add
test
movsb
stos
dec
or
sbb
push
add
push
mov
js
dec
mov
xor
roll
bound
inc
jb
push
fsubl
mov
insb
lock
pushl
fs
push
insl
mov
popf
fnstenv
dec
popl
xchg
add
pop
xor
xor
mov
push
jg
lds
repz
iret
push
dec
push
insb
call
and
mov
imul
imulb
loope
fdiv
cmp
jns
mov
jge
push
dec
or
movsb
sub
or
test
ret
ds
test
mov
cmp
jbe
roll
scas
cltd
xor
leave
push
xor
xor
aaa
lret
push
or
xor
insl
xorb
xchg
jo
or
cmp
lock
or
mov
add
inc
dec
pop
insb
dec
xorl
push
mov
dec
dec
orl
mov
and
cli
inc
push
xchg
cmpsb
push
dec
stc
add
test
lds
push
hlt
out
subl
add
mov
cmp
out
or
lock
push
and
lea
xor
xor
inc
adc
jbe
xlat
sub
test
xchg
sahf
add
lea
in
push
add
jnp
scas
and
out
push
mov
scas
sbb
jb
pop
lods
inc
scas
cmp
or
or
mov
sbb
dec
dec
xor
add
call
lea
adc
mov
inc
pop
enter
nop
dec
aaa
cmp
add
ja
push
xchg
add
faddl
cmovo
std
insb
mov
push
push
mov
cmpsb
jmp
mov
adc
xorps
push
sbb
dec
lret
idivl
adc
mov
jle
or
push
aas
xchg
push
inc
adc
sbb
rorb
or
xlat
jp
test
subb
inc
mov
xchg
gs
sti
mov
mov
jne
andl
out
es
jne
dec
mov
fdivrs
ret
fiadds
iret
or
sbb
inc
xor
mov
xor
sub
movsl
or
or
add
pop
add
cmp
inc
push
jne
jo
mov
lea
mov
mov
inc
add
or
and
imul
adc
push
adc
andw
sbb
add
outsb
loop
mov
das
lods
add
sbb
ds
mov
enter
or
inc
adc
loop
adc
jp
sysret
pop
lods
sbb
gs
imul
rcrb
pop
and
rclb
push
xchg
int3
sbb
xchg
sarb
dec
add
leave
mov
popa
pop
push
fistpll
scas
add
addr16
aaa
sub
hlt
fcoml
hlt
fs
and
iret
or
and
adc
pop
test
in
cld
sub
dec
add
lea
add
cmpsl
or
js
push
mov
dec
inc
sbb
or
mov
push
adc
xchg
pop
adc
xchg
inc
es
push
lea
push
push
mov
sub
gs
add
jbe
pop
mov
pusha
pop
or
jg
dec
es
adc
mov
push
push
sbb
daa
adc
add
daa
jns
popa
packsswb
pusha
dec
adc
and
or
and
mov
std
arpl
mov
cwtl
jo
lret
clc
add
pop
out
xor
lret
in
loope
xchg
cmp
xchg
lds
and
and
or
dec
rcl
sbb
setle
sbb
sbbl
clc
lock
pop
push
push
and
je
cmp
sub
stos
xchg
push
push
clc
clc
fwait
or
or
push
jle
xlat
popf
clc
sarl
bound
dec
pushl
jmp
lock
call
sbb
add
loopne
mov
call
inc
and
cwtl
dec
jbe
sub
lea
testb
jbe
pop
inc
inc
cmp
jb
repnz
nop
fwait
or
inc
into
push
aaa
mov
mov
nop
lea
fmulp
adc
jmp
add
cwtl
pushf
inc
mov
add
jp
movsl
sbbb
daa
push
dec
mov
ficoml
cld
mov
push
xor
incb
into
hlt
push
je
fisubl
jne
loope
cmp
mov
js
mov
stos
xchg
rcrl
leave
cmp
add
jb
xor
lea
loopne
sub
ret
inc
push
pop
mov
insb
aaa
mov
jl
test
dec
add
cmp
jb
adc
cli
clts
mov
sub
mov
test
ds
mov
mov
dec
add
jmp
push
sbb
xchg
dec
push
aas
popf
inc
or
sbb
out
add
lret
popa
jbe
push
shll
push
mov
pop
xor
sbb
rclb
mov
cli
insb
stc
repnz
xor
jns
jns
xor
cmp
inc
lret
jl
dec
hlt
dec
inc
sub
lods
add
and
imul
sub
pusha
lock
inc
add
push
movsl
add
fildl
lock
movsl
sub
and
push
loope
mov
shrb
add
shll
sar
or
movsb
and
xor
push
lods
fiadds
add
ljmp
mov
jge
adc
fadds
mov
jnp
sbb
inc
sub
lret
cmp
fdivp
pop
or
sbb
andl
mov
inc
add
xchg
mov
mov
scas
inc
push
add
dec
mov
jle
jae
and
fidivrs
lods
and
add
lahf
mov
movb
pusha
enter
mov
or
lret
jg
mov
stos
dec
pop
or
test
or
mov
dec
popa
loope
loopne
cmp
add
scas
je
ret
insl
js
int3
je
pushf
ja
or
add
cmp
xchg
adc
nop
popa
fnstcw
sbb
add
xor
mov
dec
cmp
cmp
or
rclb
xchg
dec
xor
int
sub
push
mov
fbstp
adc
lret
sub
cmp
nop
pop
lea
sti
repz
inc
xor
or
add
or
sbb
cmp
jae
push
or
outsl
sti
shlb
add
orb
arpl
mov
adc
out
and
dec
imul
mov
inc
push
push
or
cmpsb
xlat
push
and
push
mov
lahf
test
dec
adc
push
push
sub
insb
je
inc
sub
xor
push
popa
push
adc
pop
mov
xor
xor
xor
inc
inc
mov
xchg
testb
sbb
dec
xor
jbe
ljmp
mov
inc
test
cmp
add
dec
les
lods
sub
rolb
push
xor
rorb
je
fldenv
push
scas
fs
add
adc
pushf
lock
hlt
add
mov
adc
pop
ret
mov
or
hlt
hlt
inc
add
push
in
pop
adc
xchg
or
sarl
loopne
faddl
cld
sub
mov
sub
add
sub
xor
xlat
repnz
pop
dec
sub
xor
mov
sub
clc
add
test
jne
into
bt
lret
loop
mov
add
xchg
jnp
pop
adc
push
push
inc
and
sti
stos
mov
or
push
decb
sbb
push
cwtl
add
sub
mov
push
push
mov
mov
or
and
cvtdq2ps
fdivrl
and
movsb
mov
incl
sub
xor
jno
shrb
cli
cwtl
push
in
cs
xlat
mov
adc
arpl
lods
repz
and
add
or
lock
inc
pop
inc
xor
xor
js
dec
push
mov
add
xor
cmp
andb
mov
lods
add
and
add
imulb
insb
addb
inc
sbb
or
pop
mov
jo
cmp
or
xor
mov
test
mov
jge
je
mov
in
pop
andb
testl
dec
dec
pop
cltd
in
sub
or
jo
inc
adc
sub
shrb
icebp
jl
ret
inc
sub
push
push
and
ret
adcl
sub
push
loopne
sub
xor
aad
scas
mov
and
adc
iret
mov
pop
mov
jle
fidivs
test
sbb
adc
or
dec
sbb
adc
add
sub
shrb
es
cmpsb
xchg
or
mov
adc
mov
sbb
or
xor
pusha
push
or
pushf
stos
sbb
clc
xlat
popa
insb
loope
idivb
insl
insl
push
adc
ss
lea
pop
cmp
clc
inc
mov
add
adc
inc
sub
aas
cmp
adc
dec
or
mov
je
sbb
das
mov
shrb
faddp
pop
ljmp
rol
add
clc
jbe
or
add
mov
sbb
lret
dec
aam
js
inc
leave
pusha
in
inc
ret
das
mov
add
jecxz
xchg
sbb
add
inc
xchg
push
dec
mov
in
mov
add
js
hlt
mov
push
dec
cmp
adc
dec
stos
or
inc
mov
jo
fiadds
add
lock
mov
push
mov
adc
mov
fdivp
sub
add
pop
adcb
sbb
in
shlb
sub
in
loope
xlat
daa
cmp
in
stos
or
xlat
mov
and
lea
lea
daa
enter
push
jno
aad
pop
testb
divl
mov
aad
adc
ds
call
xor
sub
lar
sbb
mov
popa
pop
mov
xchg
shrb
add
mov
sbb
cmp
sbb
cmp
pop
repz
xor
nop
rclb
pop
cmpsb
in
or
push
ret
fisubrl
ss
arpl
dec
add
lahf
ljmp
cwtl
outsb
sar
pop
jbe
mov
jp
cmp
add
push
cmp
jb
rcrl
mov
pop
or
loopne
test
push
clc
jae
adc
adc
inc
sub
and
mov
push
add
pop
adc
add
inc
inc
out
nop
je
mov
cmp
pushf
xchg
cmp
das
sbb
idivl
mov
out
mov
sub
mov
cmpsb
cltd
lods
add
adc
inc
and
lcall
jmp
dec
xchg
xlat
sub
xchg
add
add
or
or
daa
mov
inc
aam
dec
scas
xchg
sbb
subl
movsl
sti
sub
mov
daa
or
jmp
sub
and
movsb
mov
or
insl
cmp
push
and
daa
or
or
arpl
add
sbb
dec
or
adc
outsb
sub
or
fldt
shll
inc
dec
or
mov
jmp
cmp
aad
lods
sbb
and
add
mov
sti
jecxz
jb
das
addb
or
or
jne
sbb
vmread
xor
add
xchg
out
test
test
pop
or
cmpsb
dec
cmp
lcall
add
outsl
lods
fs
mov
push
push
aas
mov
jb
push
sub
stos
push
or
and
and
outsl
mov
inc
aas
and
and
enter
pop
enter
je
and
enter
enter
mov
les
enter
in
daa
nop
add
and
sub
nop
add
dec
sub
in
add
xchg
or
pop
das
jmp
push
in
mov
inc
push
add
and
add
add
aas
xor
or
xor
mov
mov
xchg
cmp
adc
les
fucomip
loope
push
mov
mov
or
pusha
pop
int
lret
push
aam
add
in
sbb
or
fistps
or
add
sbb
push
adc
je
adc
lret
push
dec
jmp
add
or
adc
push
icebp
movl
pop
or
gs
xor
or
iret
jg
and
pop
adc
lea
add
aas
test
adc
mov
mov
pop
pop
lcall
inc
mov
ja
push
jmp
xchg
sub
add
test
inc
ret
scas
or
add
cmp
movsb
mov
pop
sbb
push
sbb
pop
popa
rol
lret
jb
mov
cmpb
stc
jns
or
add
mov
in
and
and
data16
mov
cmp
adc
sbbb
mov
mov
pushw
mov
rcr
js
ds
dec
jnp
cmp
add
shlb
in
stos
fcoms
cmp
icebp
push
and
add
lock
xor
mov
xchg
or
cmpsl
nop
lock
pop
lahf
jp
lods
or
jne
adc
loopne
push
cltd
jae
pusha
push
aam
es
movsb
xchg
icebp
or
add
imul
cmp
xor
leave
xor
in
mov
adc
mov
xor
pusha
sub
and
adc
enter
loopne
pusha
gs
ja
jne
and
push
je
daa
add
pop
push
add
aaa
orb
mov
ret
add
xor
dec
dec
je
sbb
sbb
loope
les
pop
pop
sub
les
xor
and
pop
prefetch
mov
jg
rclb
roll
push
pop
xor
inc
mov
fmuls
adc
jmp
cmp
mov
inc
sbb
je
out
adc
lock
adc
mov
inc
mov
add
cmp
adc
aad
jecxz
jl
cmp
jg
pop
not
xor
jle
ficoms
or
xor
loop
jno
mov
das
or
or
cmp
xchg
xorb
sbb
call
cmpl
mov
int3
mov
push
inc
pop
push
fiaddl
dec
add
xor
inc
pop
int
and
mov
mov
sbb
or
ds
sub
push
and
movsb
xchg
arpl
stc
xchg
dec
mov
or
rclb
pop
push
push
xchg
nop
and
sbb
or
pop
push
stc
test
fsubrl
or
int3
or
pop
or
mov
add
clc
jmp
push
dec
dec
sti
aad
and
cmp
call
les
cmpsb
or
push
jbe
addb
push
jmp
sar
cmp
gs
hlt
adc
xor
pop
or
push
mov
stc
xor
pop
stos
testb
loope
lock
mov
call
push
mov
add
jae
imul
xor
in
movl
push
jge
adc
ds
and
imul
ret
pop
sbb
mov
add
push
mov
test
nop
loopne
add
std
jg
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
nop
push
or
ds
mov
orb
xchg
inc
cmpsb
cmp
test
jge
mov
pop
and
cmp
jl
push
repnz
cmp
je
cmp
je
jne
or
nop
dec
and
or
add
mov
dec
shlb
cs
inc
adc
sbb
pop
adc
loop
testl
dec
ficompl
adc
lods
mov
pop
inc
orl
cmp
jl
cs
jl
cld
add
jl
in
inc
or
jbe
push
cmpb
cmp
mov
pushl
shrb
adc
dec
call
adc
add
ja
push
and
shlb
mov
xorb
pop
cwtl
mov
and
cs
mov
fmul
ret
aaa
xchg
loopne
pop
sub
xchg
or
rol
cmp
mov
fsts
in
or
loopne
dec
js
test
sub
movsb
popf
int3
in
clc
popa
sub
hlt
pop
mov
sub
dec
add
push
pop
lret
pop
mov
push
or
aaa
push
iret
and
sbb
pusha
fstp
loope
jmp
xor
call
ret
pop
sbb
dec
push
mov
scas
xchg
lcall
aad
sbb
outsb
sbb
cmp
inc
lods
mov
pop
aam
adc
push
in
popa
int
pusha
jo
xchg
cmc
pop
inc
negl
push
adc
push
push
push
pop
stos
inc
pop
shll
and
dec
sbb
sbb
add
lahf
mov
add
pop
adc
add
repz
fs
addr16
sbb
push
js
and
cmp
cmpsl
dec
es
mov
shr
or
lea
sub
xor
dec
adc
lahf
push
outsb
pop
das
js
push
add
push
test
inc
insb
adc
push
rolb
es
push
fldcw
or
and
rorb
add
mov
xchg
out
fldlg2
and
repz
sbb
test
inc
push
jno
push
insl
shrl
ret
cmp
and
addl
xor
sbb
jne
cmp
ficoml
ret
sbbb
inc
dec
cmpsl
pop
fs
jle
and
addl
fs
jno
inc
push
outsl
jecxz
fwait
shlb
sbb
loope
jne
rol
mov
push
bound
xor
jecxz
mov
sbb
pop
dec
and
repnz
add
jbe
jmp
outsl
nopl
pop
jmp
inc
and
xor
lret
test
or
jo
arpl
addl
xor
pop
idiv
mov
loope
sbb
push
inc
jl
fucomi
xor
clc
clc
mov
arpl
xor
sub
push
xchg
mov
or
ror
cmp
es
mov
addl
aaa
incb
sub
and
push
push
push
aaa
fldt
cmpsl
movsb
decb
dec
daa
push
sbb
insl
mov
icebp
lahf
jne
shrb
adc
adc
xchg
sahf
xorl
sbb
xchg
fmuls
pop
fsubrl
mov
aam
loopne
pop
pop
xor
or
mov
inc
insb
outsb
pop
clc
and
daa
je
cmp
sbb
jg
pop
push
pop
adc
and
cs
testb
and
and
inc
adc
and
nop
lock
xor
daa
add
jle
je
pop
clc
mov
dec
add
and
mov
cmp
jl
xchg
shll
insb
mov
jne
push
int
insl
inc
repnz
jmp
and
fiaddl
icebp
rol
je
and
and
sub
addr16
fcoms
xor
mov
add
jnp
add
test
jns
es
rorl
push
divl
xor
pop
sbb
mov
and
fs
xor
jnp
xchg
addb
mov
roll
dec
adc
es
add
mov
mov
pushf
test
nop
add
int
cmpl
add
ja
lret
add
add
xchg
add
xchg
cmp
fsubrl
xor
inc
test
clts
mov
js
rcl
cmp
roll
cs
dec
sub
push
xchg
sbb
pop
and
push
add
add
fsubrs
rorl
push
mov
sarb
push
hlt
jg
mov
cmp
das
and
cmp
pusha
pop
scas
sub
push
push
js
adc
orps
or
or
loope
or
mov
iret
daa
pop
stos
or
sub
lea
add
lret
pop
ret
into
adcb
mov
jno
loopne
icebp
jne
push
push
or
push
test
or
pop
lcall
adc
shrl
or
neg
outsb
add
push
adc
call
mov
xchg
add
orb
add
dec
rcl
les
or
push
in
or
add
pop
push
inc
or
repz
inc
gs
lret
pop
add
ja
mov
in
adc
or
inc
mov
scas
or
and
stos
and
cwtl
pusha
or
push
mov
insl
mov
pop
mov
mov
rclb
adc
inc
add
push
imull
and
xor
mov
shr
or
dec
mov
and
lea
addb
cs
int
and
inc
js
push
loope
sub
das
push
out
add
in
adc
fst
das
or
or
and
sbb
push
pop
fdivrl
and
aaa
dec
cmp
pushl
jae
mov
and
call
push
inc
sbb
jp
out
xchg
div
je
pushf
sbb
jbe
sub
jl
lock
pop
es
inc
inc
inc
mov
dec
xchg
dec
in
pop
sbb
xchg
mov
movl
divl
add
shll
sbb
test
and
inc
mov
cmp
xor
push
fdivrs
sub
pop
je
fldl
aaa
sahf
fs
notb
sbb
dec
in
out
insl
or
cmp
adc
jne
jns
sahf
lahf
push
divb
or
jne
or
out
cli
jne
or
mov
fldz
lret
dec
inc
pop
inc
addr16
movsl
rclb
or
cmp
dec
mov
mov
ret
and
push
cmc
ret
inc
fimuls
loope
cmc
sub
mov
ss
arpl
test
lea
fstl
jecxz
subl
lods
fsubs
into
pop
into
or
decl
push
xlat
popa
add
cmp
in
sbb
inc
cmp
add
sub
pop
sti
sub
fisttpl
mov
push
pushf
add
inc
rcrl
or
jb
pushf
xchg
inc
xor
fst
icebp
mov
xor
push
sub
cmc
pop
mov
loop
testl
sti
movsl
pmaxub
mov
lcall
fwait
sbb
xchg
dec
sub
cltd
mov
imul
or
jmp
aaa
pop
fmull
or
adcb
jbe
mov
xchg
hlt
xor
add
xchg
dec
add
add
movsl
and
mov
ret
inc
jge
imul
push
cmp
pop
movsb
mov
xor
or
scas
cmp
stos
add
push
push
jae
mov
push
popa
mov
cmpsl
sub
pop
cmp
add
pop
adc
push
pop
fmul
and
add
in
xor
xor
push
add
imul
aad
add
mov
nop
cmp
xor
or
xor
pop
cmp
in
ja
les
ret
addr16
pusha
add
int3
xor
ds
dec
adc
add
in
mov
cmp
add
push
or
fs
inc
data16
add
or
cmp
add
enter
xor
xor
xor
enter
stos
fldl
shrb
fmull
int3
mov
or
lcall
inc
es
or
cltd
sub
or
dec
enter
sbb
push
lret
fucom
imul
and
call
xchg
mov
add
dec
inc
pop
cwtl
ss
test
mov
mov
xor
mov
xchg
cmpb
xchg
xor
and
add
cwtl
xorb
push
je
inc
push
cmpsb
jmp
ss
adc
cmc
push
loope
xchg
xchg
or
xchg
test
or
insl
sub
out
dec
addl
push
mov
clc
stc
and
ret
cli
or
inc
mov
push
int
sub
mov
lods
lcall
sub
push
sbb
add
push
cmpsb
jmp
sarl
push
jge
repnz
or
cld
add
add
cmp
test
je
push
shlb
loopne
ss
pand
xchg
dec
cmp
jl
enter
orl
inc
sbb
add
fsubrl
inc
shr
or
inc
push
pushf
pop
add
add
add
sub
xadd
aad
jmp
movsl
cli
adc
pop
pop
std
pop
pusha
mov
lret
push
mov
push
inc
cs
add
inc
sub
push
and
clc
inc
in
add
inc
adcb
push
mov
fildl
lds
cmp
roll
stos
xchg
out
fmull
sub
xor
fsubs
push
lods
adc
mov
dec
lret
sub
je
xor
add
dec
and
adc
insl
jmp
mov
arpl
fistpl
and
mov
rcl
adc
mov
sti
cmpsl
jne
xor
mov
and
mov
mov
rcrl
ss
mov
or
cs
mov
and
cmp
push
pop
sub
mov
adc
or
cmp
mov
nop
in
or
xor
add
add
in
stos
xchg
clc
stos
xchg
dec
lods
push
push
cmp
inc
sub
in
cld
push
in
sbb
sub
xor
add
or
xor
jmp
cs
and
inc
add
iret
andl
and
add
mov
insl
jns
pop
mov
sub
fmuls
mov
cltd
or
xor
xchg
insb
xor
inc
call
stos
sbb
add
ret
sbb
adc
sub
or
ss
mov
orl
orl
xchg
ljmp
push
pop
xchg
stc
jl
dec
aaa
outsb
aam
lea
movsb
push
sar
sbb
add
in
pop
xor
cmpsb
aad
aaa
xchg
jo
outsb
dec
clc
pop
les
les
inc
dec
inc
or
mov
fnstenv
mov
pusha
or
imul
fcoms
mov
adc
je
sbb
xlat
out
sbb
xor
andb
mov
pop
and
pop
jp
das
push
lock
xchg
jge
mov
pop
les
shll
jmp
mov
jns
push
fsubl
push
test
cmpl
sbb
inc
pusha
les
lods
or
stos
mov
mov
sub
stos
and
and
pop
add
add
xchg
arpl
pusha
test
andb
or
push
les
out
or
adc
add
mov
or
mov
movsl
sub
xlat
movsl
push
mov
cmpsb
push
or
pushf
mov
mov
cmp
popa
aaa
push
xor
xchg
cmp
cmp
popa
addb
add
jnp
sub
lcall
mov
sbb
fucom
scas
inc
adc
or
xchg
push
cmp
inc
ljmp
xchg
dec
sub
push
orl
pop
and
imul
cmp
sub
mov
mov
mov
pmaddwd
adc
sbb
shll
cmp
shll
cs
repz
lods
iret
push
xchg
xchg
add
push
inc
xchg
and
in
sub
push
imul
int
imul
shlb
idivl
inc
bound
add
je
movsb
add
inc
push
or
cmpsl
and
xchg
cmp
loop
mov
daa
or
jecxz
xor
sub
add
push
clc
test
mov
lods
sar
lock
jge
jne
pusha
out
add
pushl
cmpsl
xchg
addr16
out
and
adc
inc
sub
stos
push
or
add
icebp
and
inc
call
push
mov
rcpps
das
mov
mov
mov
sub
dec
mov
xor
imul
dec
add
push
add
sub
dec
dec
jp
and
jne
fstpl
ljmp
or
and
es
movb
pop
push
push
neg
xor
sub
lea
fcompl
xorb
sbb
mov
in
or
addl
ljmp
jo
add
cmc
mov
dec
pop
push
icebp
adc
mov
push
push
adc
stos
push
movsl
lds
or
sub
mov
cmc
cmpsb
cmp
lds
mov
and
out
xor
jge
lods
push
das
ja
sub
jb
in
jne
adc
push
inc
stos
xor
push
mov
test
xchg
sbbb
iret
xor
sbb
cli
cmp
popf
arpl
adc
and
loopne
test
les
into
mov
add
imul
inc
ret
xor
popa
add
mov
inc
pop
scas
stos
adc
pop
mov
popa
mov
xchg
jo
lahf
inc
negl
jns
pop
and
push
and
test
mov
in
jg
push
dec
sahf
scas
mov
adc
fistps
push
popa
jmp
sub
ljmp
inc
jne
pop
mov
push
cs
xor
sbb
dec
or
cmp
pop
or
hlt
clc
or
pushl
mov
cmp
aaa
adc
stc
popa
mov
pop
popf
arpl
mov
xchg
dec
or
add
add
lea
call
fstpt
dec
jp
xchg
cmp
jne
lret
push
test
sti
push
or
push
or
inc
mov
add
les
mov
scas
inc
mov
dec
nop
pop
imul
push
xchg
push
pushf
frstor
xor
pusha
cmp
cmp
dec
mov
inc
or
xchg
push
pop
enter
add
jge
sub
xchg
inc
jne
jp
movsb
or
or
mov
push
adc
xchg
push
xor
lock
leave
adc
and
inc
inc
push
push
adc
mov
out
sub
xor
add
push
je
xor
pusha
xchg
sbb
inc
and
fsubrs
sbb
and
mov
cmc
sbb
push
enter
dec
loopne
out
add
push
pusha
add
or
shr
testb
inc
dec
xchg
adc
cmp
dec
call
and
ret
and
arpl
sbbl
insl
jmp
xor
sub
and
and
lcall
adc
or
xor
inc
push
and
in
test
inc
sbb
insb
push
sub
inc
push
mov
sub
or
daa
cmp
add
xchg
adc
outsl
inc
out
and
cltd
pop
scas
sbb
cli
or
sub
mov
pop
sti
gs
push
push
je
fxch
shlb
insb
imul
or
cmp
sbb
xor
and
mov
ja
inc
fidivl
adc
cmc
xchg
or
pop
mov
mov
insb
mov
xchg
pop
pusha
ja
cld
jne
fdivrp
into
mov
and
scas
adc
cmp
popf
inc
and
push
xor
loopne
rolb
fwait
xchg
and
jecxz
je
ljmp
ja
jnp
pop
addl
jno
add
xchg
xorb
pop
mov
mov
or
adc
sahf
dec
dec
iret
cmp
mov
dec
adc
arpl
imul
sub
xchg
sbb
dec
lock
jle
and
ficoml
in
test
dec
js
je
pop
push
mov
and
pop
std
jmp
add
jmp
and
mull
push
sbb
push
mov
popa
in
or
enter
inc
push
adc
lret
stc
and
add
adc
inc
rolb
cs
imul
sub
lods
inc
pop
dec
inc
stos
inc
fsubl
add
xchg
scas
adc
adc
inc
stc
xchg
add
dec
inc
sub
popa
imull
dec
mov
hlt
in
add
push
sub
mov
js
mov
inc
and
mov
mov
xor
or
ja
push
aaa
sub
in
cld
std
adc
xchg
stc
or
or
sbb
pop
bound
enter
adc
in
pop
push
jo
xor
rclb
push
sbb
cmpsb
push
xchg
adc
repz
mov
pop
add
or
xor
jo
in
jne
aas
and
and
mov
div
inc
mov
das
ljmp
test
mov
mov
mov
jmp
jp
mov
enter
adc
sbb
inc
push
lcall
xor
pop
repnz
inc
js
inc
xor
cli
or
xor
push
jbe
add
cmp
popf
sarb
fadds
jmp
shll
testl
imulb
nop
push
dec
lret
les
cwtl
test
in
jp
das
push
and
das
aaa
inc
cmp
je
push
adc
mov
inc
jns
lret
jno
push
sbb
lret
mov
andb
mov
add
ret
mov
fildl
inc
or
cltd
mov
jbe
xorl
pop
subb
jbe
inc
cmp
pusha
cmp
ja
mov
movb
xchg
fdivrp
push
cltd
sbb
xor
repz
jbe
adc
and
or
test
add
rolb
ret
pop
lds
add
add
lahf
test
inc
push
cmp
je
cmp
add
inc
mov
mov
push
and
shl
incb
fwait
dec
mov
loop
push
je
and
and
shrb
inc
cmp
xor
pop
sub
cmp
les
dec
cmp
test
jle
add
pop
test
jnp
fsubrs
cmpl
xlat
stos
adc
push
inc
adc
xor
adc
or
xor
stos
sti
mov
push
sub
push
lcall
sub
fnstsw
mov
or
sbb
add
in
das
and
fnstsw
test
je
and
or
jp
xor
rcll
or
loopne
not
fldl
fwait
xchg
or
mov
shrl
addb
fstpl
sub
insl
clc
push
lods
jnp
into
fs
fldz
out
mov
jnp
xchg
sbb
pop
pop
pop
rcr
jmp
push
pop
or
mov
or
clc
or
popl
int
mov
add
and
add
fsts
and
add
pop
bound
int3
inc
shll
je
add
and
fwait
je
fimuls
push
or
push
jg
pop
scas
je
mov
sub
sbb
jmp
push
sbb
push
pop
rolb
or
push
or
mov
pop
push
jmp
push
cmc
xchg
cli
sbb
push
sub
sbb
mov
repz
adc
xchg
add
push
jg
repnz
mov
sbb
ja
fistl
and
je
or
jns
xor
subb
jle
loopne
sbb
or
mov
pop
adc
aam
pop
inc
add
or
pop
stc
jbe
xor
test
push
mov
sbb
and
cmp
inc
sahf
adc
and
adc
mov
jns
enter
mov
pop
ret
in
mov
lahf
push
fcoms
mov
sub
inc
xor
outsl
addr16
js
lods
sub
mov
jns
test
sub
repnz
push
lods
add
add
inc
jbe
pop
and
sbb
mov
fs
les
xlat
or
sbb
fnstcw
cmpsb
pop
mov
sbb
pop
mov
sbb
and
in
cs
xor
mov
jne
test
add
fs
or
stc
pop
sbb
mov
test
and
cwtl
sbb
stos
adc
pop
mov
push
mov
and
out
and
pop
and
ss
in
inc
sahf
or
adc
adc
fstpl
mov
sbb
inc
jbe
dec
aas
stc
aaa
pop
sti
or
mov
test
mov
xor
add
mov
pop
mov
add
pop
lds
inc
nop
dec
sbb
out
sahf
out
xchg
movsb
mov
int
jns
rcr
in
cld
or
repz
popa
jo
mov
cmp
repz
scas
mov
ds
jmp
pop
sahf
out
sahf
cs
jns
out
mov
sarb
and
jle
rcl
inc
pusha
mov
xchg
add
shlb
fldt
lock
lods
adc
cmp
or
test
cmp
xor
adc
xchg
add
sbb
cli
mov
pop
ds
adc
jmp
cmp
fisubl
fldenv
dec
loope
pop
inc
nop
pop
gs
rolb
stos
lds
ljmp
xlat
xor
pop
dec
mov
xor
xor
add
jp
adc
leave
cmp
movsb
popf
xchg
js
and
loopne
out
mov
adc
aaa
int
pop
cltd
inc
fcoml
sbb
push
xor
dec
mov
add
sbb
pop
adc
inc
shrb
fs
mov
dec
sahf
xchg
in
adc
int
sbb
cmp
fisubrs
mov
adcb
sub
imul
shrl
aam
pop
leave
inc
push
jmp
add
cmp
or
dec
adc
fnstcw
out
add
add
popf
daa
mov
jmp
push
xor
idivb
enter
je
adc
add
inc
jnp
popf
inc
in
sub
mov
add
ss
adcl
sbb
loopne
pop
nop
orl
call
pop
movsl
and
sbbl
sub
or
lea
addl
cmpl
push
movsl
push
jp
loope
mov
aaa
je
push
lods
fs
int3
or
mov
mov
pop
or
movsl
lock
mov
mov
mov
jne
xlat
and
inc
lods
sbb
cltd
add
rcrl
or
sub
cld
mov
out
and
aaa
rorb
or
inc
pop
jb
sub
sahf
iret
add
and
or
adc
inc
push
rclb
jl
xor
adc
loopne
pop
or
add
push
lahf
mov
scas
pop
sub
push
mov
mov
xchg
stos
stc
mov
xor
leave
or
or
call
sub
xchg
cmp
mov
cmp
ret
leave
adc
popa
out
inc
mov
add
jecxz
dec
mov
add
movsl
or
pop
fcoml
cmpsl
adc
scas
mov
les
adc
sbb
mov
nop
xor
sahf
or
mov
cmp
xchg
leave
lock
movsb
mov
push
adc
ret
scas
dec
mov
mov
repnz
add
and
rorb
xchg
fdivl
sub
sbb
adc
cmpsl
jo
icebp
adc
cmpsb
ret
sbb
in
add
wrmsr
and
sub
pop
push
inc
pushf
adc
jo
push
test
adc
inc
or
addb
sub
or
xchg
xlat
jno
data16
or
or
jl
or
push
enter
add
push
mov
push
ret
lods
xlat
adc
lods
or
dec
or
orl
sbb
stos
mov
loopne
dec
jne
ja
and
jl
and
bt
push
sbb
adc
lcall
dec
pop
push
inc
leave
ror
add
cltd
dec
pop
enter
iret
add
test
add
sbb
scas
xchg
mov
addr16
pop
pop
andb
std
imul
inc
mov
mov
movsl
push
mov
scas
inc
xlat
xor
dec
cmpsb
or
add
stos
and
jle
ret
add
or
in
jno
jge
cs
add
cmp
sbb
mov
inc
jo
add
or
sbbb
lret
cmp
xchg
or
daa
push
pop
sbbb
and
mov
nop
cmp
inc
lea
mov
push
pop
add
or
aaa
push
daa
mov
stos
xchg
sub
xchg
mov
imul
add
fs
xchg
add
adc
xchg
cld
orb
or
rol
aad
push
push
inc
lods
sub
adc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
dec
mov
jno
cmovp
xchg
or
push
and
lods
add
aaa
fsubrs
in
scas
inc
mov
sbb
add
sbb
xor
ret
das
add
nop
add
inc
push
add
and
iret
aaa
lock
arpl
xchg
mov
push
push
jnp
push
flds
mov
pop
mov
jmp
dec
lods
jg
nop
push
add
jbe
push
push
pusha
inc
pop
cmpsl
jnp
push
repz
and
or
mov
rcll
pushf
add
aaa
push
add
stc
scas
or
dec
mov
cmpb
adc
add
je
cmpsl
adc
sub
in
cmp
and
out
or
enter
dec
fwait
test
inc
mov
push
dec
add
rorb
pop
pop
adc
cmp
mov
popa
or
test
sbb
xor
jge
dec
je
data16
dec
mov
push
fldcw
mov
cmpsb
jo
daa
sub
pop
or
mov
add
add
add
ret
rcl
into
add
popf
fwait
jl
cmp
adc
rolb
cwtl
call
or
add
add
push
inc
fadd
fmull
dec
cmp
scas
fildl
sbb
pop
sbb
mov
or
and
jp
add
and
sahf
dec
jo
pop
scas
xor
dec
push
push
jmp
adc
push
push
mov
lea
das
lret
jmp
jns
stos
ss
pop
mov
adc
imul
sub
ret
cmc
pop
and
call
or
lock
add
push
cmpxchg
jge
popf
inc
push
push
test
adc
mov
and
movsl
movsb
xchg
add
push
mov
loopne
add
push
mov
pop
test
sub
dec
xor
cmp
xor
xor
sub
cltd
mov
mov
sub
loopne
add
jmp
loopne
dec
or
enter
and
out
loopne
inc
mov
or
add
or
nop
jne
xor
movsb
iret
jae
inc
pop
shrb
lock
cmc
push
add
iret
adc
sub
xchg
addr16
aad
dec
popa
sbb
pop
push
rcrb
jl
pop
mov
push
test
popf
cmpsb
loopne
adc
pop
lret
or
or
lahf
mov
sub
mov
mov
push
imul
sub
cmp
mov
in
idiv
or
shr
and
cli
inc
jl
or
sbb
popa
jp
jg
push
lcall
shll
pop
mov
push
add
inc
jmp
mov
add
mov
push
pop
cltd
idiv
in
sbb
add
mov
out
ljmp
jno
lods
jne
in
aas
test
mov
popa
mov
decb
mov
mov
mull
and
add
cld
or
xor
inc
testb
or
xor
push
or
push
cmp
in
in
hlt
cltd
nop
cmpsl
rolb
pop
xor
lret
cmp
in
cmp
mov
dec
fadd
jnp
mov
push
sbb
hlt
fdivr
push
call
or
push
test
push
xor
cmp
imul
divl
xor
in
bnd
push
les
push
pop
push
sbbb
push
or
cmp
inc
mov
andb
pop
cmp
aad
rcrb
js
jne
cli
fs
stc
mov
mov
into
xchg
sbbb
mov
cmp
rcrb
jl
out
stos
mov
jb
imul
and
mov
out
aaa
fcoms
adc
lock
pushf
adc
or
dec
das
loopne
and
clc
ret
in
push
cmp
addr16
in
mov
mov
push
and
mov
dec
sahf
or
push
push
inc
mov
dec
pop
sarl
imul
pop
jne
jge
js
jl
adcb
inc
pop
cmp
addr16
push
jle
push
divb
cltd
les
pop
cmp
fidivs
insb
mov
sbb
jae
mov
out
out
pop
sbb
es
fsubr
nop
push
mov
push
fcomps
imul
and
imul
push
push
and
mov
rcr
mov
and
push
and
inc
loopne
inc
nop
inc
push
add
and
subl
push
gs
cs
es
xchg
dec
dec
daa
dec
seto
addb
xchg
xor
sub
orb
jge
add
inc
xor
nop
dec
push
fs
mov
cmp
add
push
fiaddl
sbbb
sbb
enter
jo
roll
xchg
dec
es
movsb
pushf
xchg
orl
movsb
es
je
mov
fucomp
mov
enter
call
int3
sub
adc
addl
popl
sbb
in
sub
mov
imul
mov
xchg
cmp
gs
mov
push
dec
add
les
lea
add
and
sub
into
orl
pop
xchg
add
loopne
dec
jle
sbb
cmp
adc
sbb
pop
nop
movsb
fcompl
mov
incl
fmull
fildl
adc
adc
inc
or
rol
inc
mov
rolb
test
mov
cmp
ds
mov
pusha
add
popa
adc
lods
ds
cmp
add
or
and
cmp
pop
imul
aaa
aad
call
das
and
in
push
rol
or
or
jo
in
or
or
mov
or
lret
or
add
shll
jg
insl
jmp
jle
xor
xor
or
rorb
mov
cs
es
mov
hlt
stos
adc
jb
popf
adc
lods
rolb
or
jp
or
and
push
and
test
fmuls
or
cmp
insl
mov
aaa
js
jo
mov
adc
adc
out
dec
and
push
mulb
push
add
rcrb
mov
neg
sub
xorb
ss
pop
dec
mov
bound
fldenv
popa
jecxz
rolb
fwait
enter
enter
mov
and
sbb
add
pop
xor
xor
addb
arpl
jmp
mov
inc
pop
scas
inc
jge
test
push
push
test
and
mov
sar
push
jmp
push
mov
arpl
cwtl
pop
inc
jmp
test
fldt
adc
mov
ljmp
mov
cmp
mov
call
fldenv
or
into
xchg
loopne
and
add
push
imul
dec
or
out
sub
ds
adc
imul
mov
pop
repnz
cmpsb
sbb
ss
mov
jp
sub
lea
sbb
adc
jg
sub
cmp
ja
bound
mov
add
fwait
mov
out
mov
xchg
adc
push
push
shrl
sbbb
js
add
xchg
mov
hlt
in
jl
lods
push
adc
aam
xchg
xchg
mov
add
iret
scas
ret
loopne
dec
pop
int3
jne
add
push
imulb
dec
pop
pusha
push
invd
call
filds
jo
and
sub
ljmp
aam
insb
ret
mov
xor
mov
or
hlt
cmp
or
ret
and
mov
mov
rorl
jnp
lds
addl
xorb
out
add
movzwl
pop
push
jne
cmp
in
je
push
loopne
push
sbb
test
adc
or
mov
jmp
aad
es
add
hlt
jno
xchg
repnz
and
adc
mov
add
shlb
loope
inc
xchg
test
jo
or
mov
inc
fdivrl
int3
and
jo
jecxz
sub
jns
popa
push
cmp
or
xchg
mov
pop
dec
xor
push
aam
fmull
pop
mov
xchg
adc
mov
insl
fwait
xchg
inc
xchg
mov
push
faddl
ret
insb
add
call
dec
xor
or
fdivl
push
and
popa
leave
int3
adc
add
pop
pop
loope
pop
pop
test
mov
cmpxchg
sbb
into
leave
cs
adc
sbb
out
xor
lods
sbb
fwait
or
or
ds
loopne
and
lds
mov
add
xchg
xor
fisttps
adc
jns,pn
call
pop
stc
push
in
ja
push
adcl
shrb
stos
add
adc
out
rcll
sub
ret
stc
sbb
das
push
sbb
fsubrs
in
adc
cmpsl
push
jb
clc
inc
aaa
mov
xor
mov
fsubrs
adc
and
sub
sti
in
add
in
adc
add
mov
add
sub
push
sub
cltd
loope
add
movsl
pop
mov
dec
add
lahf
xchg
mov
cmc
stos
pop
stos
push
and
insb
pop
inc
cltd
jne
ja
insl
daa
dec
or
lods
fiadds
int
test
test
adc
lods
jp
rorl
cmp
in
xchg
sub
xlat
push
cmp
scas
pop
mov
inc
cmp
xor
ljmp
in
es
dec
stc
jns
sbb
adc
cmp
shrd
push
xchg
je
push
add
adc
push
mov
test
clc
mov
dec
scas
and
add
add
or
xor
xor
mov
lcall
dec
lcall
dec
jecxz
push
into
mull
lcall
dec
in
mov
add
dec
insb
add
jl
cmp
jne
les
dec
je
xor
xlat
pop
mov
add
xor
push
or
insl
enter
jb
xchg
adc
repnz
mov
inc
inc
mov
sub
and
repz
jae
adc
arpl
pop
test
popa
inc
add
in
jno
jo
fdivs
add
jo
mov
test
pushf
xor
test
jae
in
sub
stos
sbb
mov
and
daa
mov
mov
jnp
sub
je
aad
mov
outsb
inc
pop
push
ss
fs
scas
lods
call
jmp
ret
call
and
push
inc
movsb
sbbl
add
pop
test
add
inc
loop
out
sti
leave
ret
or
jg
fdivl
or
xchg
xchg
sbb
or
lret
rcl
dec
lea
inc
cmpsb
out
scas
movsb
dec
pop
cmp
shrb
cmp
adc
aam
sbb
adcl
or
sub
push
pop
or
add
insl
fsubs
nop
mov
cmove
adc
sub
xor
mov
pop
div
out
push
lds
xchg
pop
xadd
or
ret
mov
sbb
cmpsl
xchg
adc
lea
adc
add
iret
or
and
or
cmpsb
mov
and
popf
xchg
add
and
push
xchg
fisubl
dec
dec
add
mov
dec
repnz
inc
or
cltd
dec
xor
test
pop
pop
cli
ja
mov
jge
adc
sub
cmpsb
inc
lcall
or
outsb
push
or
test
pop
arpl
mov
or
loop
cmp
mov
mov
mov
xchg
cmpsl
test
pop
add
dec
or
sbb
push
pop
cmp
xchg
cmp
int
ficoml
add
push
in
pop
aam
jp
xor
cmpsb
sbb
or
mov
pop
inc
sub
in
sbb
jp
push
push
inc
mov
daa
push
stos
adc
mov
stos
pusha
popa
mov
sub
divl
movb
dec
ret
dec
adc
outsl
add
loop
push
in
jo
xorb
pop
inc
rcrl
inc
adc
imul
add
mov
fnstsw
mov
push
add
push
cltd
jb
jp
dec
cmp
adc
sbb
fwait
inc
loop
icebp
sti
add
mov
mov
cmp
push
lock
jmp
sarb
cmp
add
add
push
push
adc
dec
xor
mov
in
dec
pop
push
pop
pop
testb
or
ret
jb
stos
sub
mov
jne
testb
jae
mov
xchg
mov
std
or
rcrl
push
push
mov
jmp
mov
iret
lods
std
dec
adc
mov
sbb
push
and
std
xor
inc
mov
push
pop
out
cwtl
loope
scas
arpl
cmp
popa
insb
lds
js
hlt
xchg
xor
std
sub
sub
add
int
push
mov
pop
push
aad
sub
pop
dec
call
daa
mov
aad
push
lock
push
ror
xor
sub
ret
aaa
dec
mov
rcrb
cmpsb
loopne,pn
sub
loopne
mov
sub
push
shl
mov
push
inc
jmp
sub
nop
and
pop
rclb
cld
sbb
cmc
loope
or
push
sbb
sbb
jo
pop
push
dec
add
xor
xor
int
sub
rolb
push
test
mov
mov
rolb
push
sub
inc
cmp
insb
mov
rorb
cmpsl
in
test
mov
inc
dec
adc
stos
cmp
and
push
mov
jecxz
or
xor
xchg
inc
testl
add
push
push
rclb
xor
inc
or
scas
std
mov
pop
or
add
push
sbb
xchg
mov
into
and
or
int
ds
and
jnp
cmp
inc
inc
and
dec
add
orb
pop
ficompl
jg
les
lods
je
pop
or
movsb
pop
fstpl
test
or
stc
fidivl
inc
out
adc
rcl
and
or
push
sub
sbb
mov
addl
xlat
rolb
pop
das
add
add
inc
fimull
inc
add
push
cmp
movsb
adc
inc
jns
mov
rol
push
xchg
ss
adc
cmp
imul
pusha
pop
add
fisubrs
xchg
orl
push
inc
popa
lods
ficoml
jp
mov
out
rol
mov
arpl
pop
xchg
xor
popa
fidivs
imul
jecxz
leave
dec
cmp
mov
dec
dec
pop
psubsb
and
add
fildll
cmc
mov
les
stos
and
xor
push
jno
mov
fwait
addb
push
sbb
inc
mov
fnsave
insl
lret
mov
inc
mov
in
and
into
enter
sub
or
add
mov
add
or
xchg
inc
push
and
sub
stc
leave
pop
popa
pop
fucompp
je
jg
mov
xchg
stos
pop
shl
pusha
movsl
nop
pop
mov
push
pusha
cmp
mov
pushf
pop
mov
add
adc
sub
in
and
icebp
cmp
ret
pop
sarl
push
loop
in
sub
push
jno
xor
dec
mov
movsl
cmp
jmp
test
or
cmp
and
adc
ret
aad
cmp
or
repnz
push
pop
lock
xor
sbb
pop
aaa
dec
ja
or
jae
add
and
mov
jbe
clc
movsb
cmp
ficoml
add
push
pop
stc
orb
popl
shll
movsb
roll
cmp
sub
andb
mov
ja
shrl
in
add
cmpsl
addb
push
push
xlat
rclb
js
cmp
mov
cmp
mov
cmp
dec
js
fistpl
and
in
xchg
clc
xor
mov
xor
lods
out
or
mov
sub
pop
out
xchg
push
pop
loopne
adc
dec
je
push
jo
sbb
push
inc
inc
cs
xchg
cmc
fsubr
pusha
rcll
push
lock
mov
add
or
adc
and
add
test
js
xor
adc
inc
or
adcb
jno
leave
repz
and
or
sub
fs
mov
sar
mov
pop
push
in
and
loope
movaps
insl
pop
rolb
inc
mov
rcrb
jo
and
dec
scas
push
and
and
ror
adc
pop
sub
xor
std
and
or
addl
lea
pop
stos
sbb
pop
and
data16
inc
and
imul
test
imul
add
or
es
push
stos
adc
mov
inc
dec
popa
orb
adc
in
aad
sbb
sbb
sub
inc
sbb
fcoms
push
mov
jb
sbb
add
push
xor
add
jnp
jne
push
sbb
les
xchg
sub
push
adc
dec
je
push
xchg
imul
inc
adc
stc
and
sbb
push
push
or
add
xor
lret
jl
inc
mov
add
loopne
add
sub
das
mov
mov
mov
outsl
pop
mov
pop
add
xchg
dec
xchg
lods
dec
push
xchg
and
jo
mov
loope
imul
lret
push
repnz
mov
rcl
push
loopne
jnp
mov
loop
inc
je
add
sub
add
adc
andl
lods
sbb
xchg
lds
ja
adc
aam
lcall
mov
sub
add
and
mov
lock
or
clc
push
in
add
add
sbb
or
cmp
fldl
test
pop
lea
xor
adc
fsubrl
cmpsb
test
lods
adc
fs
inc
pop
ret
pop
push
scas
dec
adc
mov
mov
mov
jne
mov
adc
out
das
pushf
and
or
fldcw
sbb
and
or
dec
mov
sarb
cmp
shrb
sbb
jnp
xchg
adc
pop
ss
add
clc
pop
orl
and
insb
addr16
and
mov
dec
shrb
pop
sarl
adc
mov
push
push
inc
daa
add
xor
sbb
mov
mov
add
and
mov
repnz
cmp
pop
dec
cmp
nop
ret
push
insl
andb
rol
push
or
repnz
lret
rolb
and
scas
sbb
hlt
or
jbe,pt
mov
fcmovnbe
dec
mov
rcrb
out
pop
je
clc
aaa
or
js
pusha
jp
ja
pop
roll
or
cmpsb
in
add
xchg
inc
jmp
mov
dec
inc
push
sub
adc
popf
mov
push
xchg
and
mov
sub
pxor
or
ja
xchg
sbb
pop
js
test
mov
enter
xabort
jns
dec
lea
jbe
in
leave
int3
loope
stos
fstps
push
cmp
mov
test
xchg
pop
cmp
jno
xchg
mov
cli
in
inc
cmp
das
icebp
jb
jmp
pop
xor
sti
dec
fdivs
push
xor
ret
dec
mov
inc
push
xchg
adc
shr
cmpb
push
push
negl
inc
out
arpl
adc
bswap
push
pop
or
xor
pop
inc
not
push
dec
outsl
mov
pop
sub
xor
and
test
mov
dec
inc
cmpsl
pop
lea
add
jl
sub
test
adcl
add
mov
js
test
pop
fisubl
pusha
add
or
or
or
inc
xchg
shrl
and
add
loop
dec
fmuls
mov
xor
mov
jno
cmp
pop
pushf
adc
xchg
sbb
xorl
lea
cs
mov
inc
arpl
cmp
add
inc
adcl
mov
push
inc
insb
or
sbb
sub
pusha
sbb
adc
les
xchg
pop
scas
movsb
jge
jg
or
xor
filds
mov
cmp
pop
fdivrs
dec
or
iret
adc
inc
rcll
aam
and
ss
into
popa
sub
fdivr
and
push
push
shrb
mov
cmpsl
cltd
sar
add
stos
mov
loopne
xchg
ss
cmpsb
mov
std
dec
or
movsb
adc
mov
mov
xchg
fistl
cwtl
loopne
push
mov
das
adc
out
push
lret
push
add
pop
rclb
sub
mov
loop
fstpl
test
jb
inc
lea
sti
cmp
or
jp
addr16
xor
loopne
bound
into
push
sbb
sbb
dec
add
push
pop
mov
orb
pop
push
mov
jo
mov
scas
cmpl
pushl
cmpsb
popa
sti
adc
popa
fwait
adc
adc
out
lea
and
xor
ss
imul
lea
pop
push
inc
sub
add
sbbl
and
and
pop
inc
add
sahf
mov
les
aam
or
cmovle
loope
incl
add
pop
dec
inc
nop
fsubrl
fwait
or
and
insl
dec
faddl
mov
or
and
in
aam
mov
mov
in
fsub
sub
popa
jp
dec
adc
inc
pop
jb
outsb
imul
sbb
in
fisttps
mov
lods
loop
pop
mov
or
sub
ret
add
daa
loopne
xchg
jo
addr16
adc
xlat
jne
mov
and
cmp
call
pop
cmp
jb
or
ljmp
dec
mov
push
lret
sarb
jge
lcall
insb
es
jb
cmp
push
dec
or
xor
rorl
rclb
inc
adc
cmpsb
push
arpl
cmp
inc
push
adc
mov
popf
mov
push
mov
pop
mov
test
sbb
push
add
sbb
push
adc
das
pop
push
jp
sahf
xor
mov
xor
mov
xchg
inc
adc
jmp
mov
inc
dec
pusha
lods
rcrb
xchg
hlt
mov
loopw
aaa
push
sbb
dec
lods
or
sub
push
push
lret
in
out
push
push
inc
or
or
jbe
popf
or
adc
das
add
or
popf
popa
movsb
mov
or
xchg
sub
rorl
aam
and
mov
cld
or
mov
and
jo
cmp
push
rorb
sub
and
xor
loope
subl
mov
add
ficoms
mov
xchg
sarl
fcompl
jns
add
sbb
mov
mov
hlt
jmp
mov
sbb
sbb
fdivrl
loop
and
or
xchg
dec
movsl
out
in
in
jmp
pop
mov
mov
out
push
fcmove
daa
pop
xlat
faddl
dec
fs
ja
mov
outsl
fldenv
nop
es
xchg
sub
sbb
imul
pushf
popa
or
pop
cld
push
lds
push
shlb
cmc
dec
pop
loop
add
xchg
cmpsb
jl
rorb
mov
lret
push
push
popa
add
dec
out
add
pop
lcall
jne
cmp
jbe
inc
orl
jo
pop
pop
ss
pop
sbb
pop
adc
jae
add
xor
mov
jbe
jle
add
sbb
dec
std
dec
push
mov
mov
mov
mov
push
addb
mov
icebp
popa
mov
inc
es
sbb
dec
xchg
add
pop
das
mov
add
push
mov
or
push
cmp
jbe
hlt
adcl
loopne
test
in
dec
bound
or
mov
scas
and
cmp
cmp
jns
daa
push
int3
add
sub
pusha
cmp
add
dec
inc
mov
or
pop
sub
add
mov
or
or
and
cmp
pop
pusha
test
adc
clc
inc
xor
mov
divb
fs
inc
mov
xchg
or
cmpsb
imul
adc
adc
mov
push
jecxz
in
int3
inc
push
adc
fs
les
adc
invd
sbb
or
cmp
adc
mov
push
shlb
or
repnz
aas
or
push
and
adc
lar
out
fnstcw
int3
out
enter
fadd
mov
sahf
jcxz
test
bound
adc
int
shlb
subl
sbb
lret
push
fwait
xor
push
cmp
jbe
add
add
or
ret
push
in
cwtl
and
clc
push
out
test
adc
xchg
mov
jmp
xchg
stos
pop
push
lea
adcl
add
inc
and
push
or
imul
aam
incl
jo
xor
add
leave
aaa
fisubs
mov
push
pop
fs
sbb
adc
mov
imul
sub
mov
xchg
or
xor
push
pushf
in
sbb
iret
subb
popf
out
test
test
inc
mov
aaa
addl
push
ret
jnp
mov
push
add
cmp
push
test
test
test
mov
roll
mov
hlt
jne
cmp
jge
mull
cmpsl
cmp
insb
sub
xorb
ja
in
rolb
push
sbb
lret
jns
movsb
sbb
sbb
idivl
push
adc
andb
xchg
lods
jmp
or
call
pop
mov
jo
call
mov
cmp
mov
es
popf
gs
push
inc
aas
mov
cld
add
fsubr
dec
mov
mov
stos
add
scas
dec
mov
add
jg
daa
lock
xorb
and
sarb
aad
out
adc
call
cld
rorb
shr
sbb
adc
adc
inc
mov
leave
pop
pop
sbb
lcall
inc
dec
incl
repz
pop
neg
pop
sbb
mov
rclb
shrl
popa
cmovo
test
jecxz
enter
mov
mov
push
xor
inc
pop
lods
xchg
mov
xor
ljmp
xlat
and
and
test
mov
shrb
cltd
or
jg
and
fisttpll
jmp
mov
fisttps
adc
xor
fstl
movsl
and
jne
in
inc
sahf
inc
jecxz
aas
xchg
xchg
sub
xchg
dec
ret
andl
sbb
fcoms
jb
lods
jno
mov
jbe
clc
outsl
cmpl
xor
jp
mov
es
push
push
sbb
adcl
cmp
jg
mov
add
inc
pusha
lret
es
nop
test
ljmp
fsts
sub
jmp
in
xor
and
mov
mov
jns
fadds
push
sub
rolb
pop
cmp
or
mov
push
push
call
mov
out
xor
arpl
xchg
ret
and
sub
hlt
push
lcall
cmp
mov
inc
or
or
js
sahf
dec
mov
push
adc
push
push
push
call
cmp
inc
push
add
mov
rcrl
scas
mov
xor
and
pop
lods
jmp
mov
icebp
es
jae
sub
push
sbb
jmp
add
add
xor
ret
cmpsl
lods
mov
inc
out
dec
mov
inc
or
jg
sub
push
negb
stc
or
dec
mov
out
les
mov
movsl
adc
mov
mov
les
xor
or
adcl
mov
xor
inc
fmuls
dec
xchg
xor
lods
aaa
popf
mov
fisttps
sub
adc
sbbl
pop
lock
sahf
sub
test
sbb
cwtl
cmpsb
mov
out
dec
mov
aas
add
sbb
inc
pop
mov
nop
mov
push
mov
push
mov
ror
roll
incb
and
adc
mov
add
mov
xor
mov
push
push
vmread
xchg
enter
xchg
sub
push
mov
or
insl
shl
shl
mov
pop
shl
aad
fmul
pop
push
xchg
faddp
dec
fsubrl
xor
cli
mov
add
movzwl
inc
mov
inc
and
jl
rol
xchg
cmp
xorl
mov
or
pop
and
push
leave
push
movsb
push
mov
cmp
ret
pop
dec
pusha
rclb
dec
and
lds
add
mov
push
push
imulb
cmp
mov
adc
adc
in
add
add
pop
das
or
bound
inc
cmp
or
sbb
movb
or
push
push
addr16
cmp
mov
neg
mov
mov
mov
jl
adc
sbb
push
gs
add
cmp
mov
cld
mov
lods
dec
and
add
add
mov
pop
mov
sti
rep
movsw
push
dec
cli
add
cld
movsb
mov
push
shl
or
mov
shr
mov
rcll
inc
mov
adc
movb
add
push
lea
mov
jg
push
ret
mov
mov
cmp
lret
add
pop
movsbl
xor
ljmp
push
and
jb
jns
ja
and
push
cld
je
sub
int3
cmp
popf
xchg
adc
lcall
pop
mulb
mov
jbe
cmp
pusha
mov
sbb
lret
mov
inc
add
mov
or
push
arpl
or
notb
jmp
cmp
and
or
ficoml
sbb
ljmp
lahf
xor
sbb
push
mov
aad
cmc
cmp
out
adc
subb
push
push
lock
xor
inc
lock
aaa
faddl
mov
sahf
dec
ja
loop
mov
or
add
jbe
or
jnp
sahf
sbbl
dec
push
add
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
outsb
outsb
outsb
outsb
and
or
jmp
and
fistpll
inc
test
testl
in
inc
xchg
sahf
cmpsl
cmp
lea
sahf
out
mov
out
sahf
rcl
fsub
out
jl
out
lock
cli
incl
repz
rorl
push
adc
sbb
and
sub
cmp
iret
repz
inc
dec
dec
aas
sti
out
or
add
and
or
or
push
movups
adc
adc
push
cmpsl
push
sti
call
sbb
sbb
sbb
push
pop
and
and
aas
or
cld
repz
lret
mov
push
jle
sahf
dec
xchg
push
add
xchg
or
fadd
ret
jno
xor
cmp
jle
mov
mov
jmp
sbb
pop
lea
push
xlat
add
push
pop
jae
outsb
cmp
jnp
imul
xor
add
jmp
dec
or
xchg
sbb
enter
sub
sub
mov
mov
cmp
jbe
add
xor
adc
movsb
adc
xchg
repnz
inc
sub
fwait
nop
cmc
out
mov
inc
push
push
xchg
mov
pop
gs
and
scas
push
loope
insl
gs
inc
mov
inc
xor
push
test
add
add
jb
dec
je
lcall
dec
dec
aam
pusha
push
stos
scas
lret
jnp
insb
push
fsubrl
aas
es
add
lock
aam
clc
in
jns
push
inc
enter
in
and
lods
mov
push
dec
je
push
flds
push
add
push
fildll
push
or
ljmp
mov
ja
sbb
add
add
add
or
and
mov
ss
ret
xor
push
pop
add
sbb
inc
dec
xchg
adc
adc
mov
inc
popa
mov
sbb
jmp
popa
add
adc
push
imul
sub
dec
cmp
or
or
xor
and
pop
push
cmp
fnstsw
call
pop
test
imul
mov
add
test
push
jne
xor
hlt
mov
or
outsl
std
mov
add
push
fisttpl
in
stc
pushf
mov
test
jle
add
and
fidivs
jno
aas
shll
and
gs
movw
mov
sbb
pop
or
popf
test
dec
rcrl
lahf
sbb
adc
rorb
and
xor
xchg
je
loope
and
sahf
rcrl
movsb
xor
lahf
cld
push
clc
lock
mov
dec
je
xchg
clc
je
mov
sbb
push
xor
adc
pop
or
adc
sarl
pop
sub
sub
mov
fcmovb
sar
xchg
aam
xchg
adc
cmp
pop
add
or
push
sbb
pop
test
cwtl
enter
mov
mov
jle
xor
in
cmp
xchg
dec
imul
sub
dec
push
push
pop
pop
push
adc
push
xchg
mov
mov
loope
push
xchg
and
sarl
xor
or
inc
call
cs
shrl
mov
push
push
push
mov
lds
pop
adc
add
push
movsb
cmp
pop
dec
and
je
xchg
xor
test
and
xchg
xor
loop
pop
and
jp
pop
or
or
sub
mov
sub
jne
push
mov
popa
pop
sahf
nop
add
push
mov
pusha
clc
add
rolb
decl
jb
std
adc
sub
and
push
adc
add
and
push
push
xchg
enter
xchg
dec
fisttps
out
add
scas
lds
inc
rclb
sbb
or
push
stos
push
shrl
jp
push
out
lods
roll
xchg
fisubs
out
mov
lret
xor
sbb
mov
push
dec
push
pushl
das
cs
sbb
mov
add
push
icebp
lahf
ret
and
je
cmp
clc
rolb
sbb
adc
push
fidivl
popa
push
daa
push
mov
bound
mov
pop
pop
add
and
popf
xor
add
call
das
nop
sub
rcll
data16
mov
jae
adcb
or
mov
sub
or
fsubl
leave
repz
ljmp
or
push
cmp
movl
xchg
shl
shlb
adc
adc
pop
scas
cmp
rorb
sbb
inc
lock
cmp
pop
sub
outsl
loopne
enter
mov
push
fistl
jnp
mov
or
add
bound
cmp
jp
add
xor
daa
adc
inc
add
nop
popf
adc
add
add
ja,pt
add
dec
cmc
dec
sahf
or
or
nop
push
outsl
jmp
jmp
mov
fcmovnb
pop
mov
sub
jne
mov
mov
or
es
jl
inc
jle
nop
data16
scas
aaa
mov
or
mov
ss
dec
pop
inc
stos
push
pop
in
int3
dec
xor
lcall
jb
pop
adc
push
orb
ds
inc
add
sahf
adc
inc
repnz
push
mov
pop
inc
pop
inc
pusha
inc
mov
fs
push
outsb
xchg
lret
je
pop
cmp
jl
lock
add
ja
jl
push
cmp
pop
xor
pushf
pusha
rorb
dec
mov
lods
push
es
mov
sar
add
cmpsl
push
ljmp
cmp
incb
pop
enter
inc
ljmp
cwtl
add
lea
add
mov
jo
jmp
ret
dec
lret
pop
jp
xchg
je
or
jns
jl
and
xchg
jge
add
jl
sub
cmp
fwait
lea
push
mov
outsb
dec
push
or
jecxz
lea
or
sbbl
imul
js
dec
fdivrp
jmp
sub
and
movsb
jne
pusha
add
pusha
loope
aaa
pop
jl
jmp
out
push
js
popa
or
sbb
loope
jne
dec
mov
cmp
je
lret
inc
pusha
and
and
dec
push
bnd
jmp
rcrl
mov
or
jmp
pushw
and
and
pop
das
sub
xor
das
js
mov
adc
les
sbb
push
fwait
insb
sub
adc
aas
sub
or
or
addr16
call
cmpsb
adc
pop
add
pop
js
add
ljmp
hlt
cmp
jl
stos
sub
jle
ret
push
inc
inc
cmpsb
movsl
add
loopne
push
inc
pop
inc
pop
sub
lea
dec
and
xor
hlt
mov
cs
xchg
pop
add
add
ds
mul
pop
adc
pop
pop
mov
jne
add
pop
dec
or
add
pop
pop
cmp
sbb
cmpsb
push
jbe
rorl
ds
bound
sarb
cmp
movsb
jo
jne
scas
cs
mov
lcall
sub
int
mov
pop
jge
lock
inc
and
pop
dec
fcomp
cwtl
lahf
or
mov
dec
inc
sbb
inc
lret
cmp
push
cmp
and
sti
adc
dec
or
and
jmp
arpl
mov
sbb
ss
xor
and
jbe
xchg
notl
cmp
mov
sub
jns
loope
shlb
movsl
sub
loopne
sahf
test
repnz
cmp
cmp
push
jg
es
gs
or
cmpsl
cmp
je
xor
jne
push
sbb
xchg
clc
jmp
nop
loopne
insb
bound
pop
xchg
mov
add
xchg
sub
mov
jle
popf
lods
inc
xchg
inc
cmpsb
mov
adc
mov
mov
loopne
aaa
mov
xor
push
rcll
push
pop
call
jno
push
loop
or
jne
shlb
addl
popa
repz
push
or
jmp
lret
rcrb
sbb
xor
inc
fbstp
xlat
and
add
jmp
inc
xor
test
add
js
mov
push
rorl
dec
pop
fdivl
nop
mov
leave
arpl
test
push
mov
and
mov
and
cmp
popa
loop
in
xchg
mov
xchg
jne
int3
loope
scas
cltd
or
test
push
sbb
sub
adc
adc
mov
push
push
mov
clc
mov
xor
repnz
xchg
scas
xchg
push
xchg
xchg
int3
jo
fsubr
mov
fnsave
dec
lea
pushl
dec
imul
es
xchg
outsl
pop
and
sbb
push
lcall
add
push
dec
sub
adc
and
jb
jle
mov
ret
mov
decl
mov
sub
mov
xor
pop
fisttps
imul
xor
in
add
push
add
ds
cmp
loopne
lds
ja
xchg
lahf
jmp
mov
arpl
daa
push
loopne
and
popa
inc
call
cmp
push
popa
pop
fwait
jmp
jbe
add
mov
sti
daa
sub
add
jne
mov
into
popf
clc
aam
jl
jbe
inc
test
and
cmp
hlt
or
add
sub
and
stc
pusha
aam
ds
pop
push
push
popf
or
subb
popa
add
pop
xor
push
jecxz
orb
shr
xor
pop
xchg
dec
ss
push
jg
lcall
sub
rcl
xor
jo
lea
scas
or
nop
pop
leave
or
enter
mov
mov
stos
xor
rorb
stos
xchg
jecxz
outsl
dec
shrb
dec
cmp
push
jle
lock
aam
lods
call
sahf
add
inc
mov
inc
call
dec
test
repz
add
and
add
add
push
mov
fdivs
inc
loopne
and
leave
fidivrl
mov
pop
adc
nop
addr16
in
xor
push
fstps
inc
jb
xor
add
mov
push
pop
loopne
lahf
pop
leave
mov
ss
or
xor
xchg
cmp
cwtl
pop
add
nop
lea
fwait
in
sub
add
add
aaa
push
cmp
mov
int3
pop
gs
mov
dec
lock
sahf
fstl
fwait
add
jl
cmp
push
sbb
ret
lret
sbb
nop
inc
sahf
das
aas
and
sub
push
imul
cwtl
cmp
es
pop
add
cmp
or
inc
faddl
add
mov
fstl
fldz
fcomp
fnstsw
icebp
bound
or
jmp
sbb
and
add
clc
aam
pop
cmp
sbb
xor
push
cmp
inc
push
cltd
nop
lret
lret
mov
pop
hlt
xlat
hlt
dec
jmp
jl
cmp
xor
push
lea
add
outsb
repz
jmp
loop
shrb
jne
and
dec
leave
push
adc
add
inc
fdiv
mov
push
icebp
das
mov
aaa
xor
incb
mov
fmul
pop
movl
cmp
mov
lock
dec
clc
jnp
rcr
sbb
cmp
mov
lea
dec
mov
lea
mov
sarb
and
add
shll
mov
xor
jne
pop
lea
imul
mov
and
inc
mov
add
adc
adc
pop
ja
push
dec
pop
jmp
ret
and
movsl
idivl
mov
mov
jbe
mov
out
mov
mov
push
enter
out
cli
mov
push
int3
loopne
shr
dec
imul
pop
cmp
cmpsl
subl
pusha
pop
std
ljmp
mov
jle
push
jbe
enter
andl
jbe
leave
pop
iret
sub
shrl
pop
pop
add
icebp
dec
in
pop
dec
push
shlb
xlat
jne
rcrl
mov
dec
or
enter
cmp
push
aam
inc
repz
add
insl
push
mov
push
and
jne
xchg
imull
dec
mov
cmp
dec
addr16
pop
mov
fs
inc
shrb
fdivrl
dec
cmpl
jno
jno
inc
cmp
cmpl
and
test
add
and
push
jecxz
lock
mov
popf
mov
and
pop
dec
loop
push
rcr
sub
sti
or
cmpsb
push
add
cwtl
add
mov
jo
add
aaa
add
imul
push
jmp
inc
xlat
or
pop
inc
stc
cmpsl
repnz
lret
cmp
jb
push
pop
sub
inc
or
dec
pop
jb
in
xchg
insb
adc
or
jl
cs
cwtl
orl
add
sbb
lea
orb
xchg
inc
loope
vmovq
imul
je
lret
push
xor
jecxz
pusha
jecxz
pop
testl
imul
sbb
test
imul
mov
inc
lock
xchg
jae
sbb
jp
push
shrb
ja
call
sub
xor
xor
add
roll
sbb
addr16
dec
pop
push
lcall
mov
js
add
test
js
inc
pop
data16
push
ds
pop
movlps
cmp
push
xchg
mov
cwtl
out
aam
adc
adc
dec
loopne
ret
test
dec
jo
rcrl
aas
push
rcrb
movsb
add
fimuls
or
ds
mov
pop
daa
cmp
xchg
je
aam
sti
sub
sbb
pop
sbb
pop
xor
fs
jmp
imul
call
push
int3
aas
mov
push
enter
sub
pop
mov
mov
imul
mov
rolb
dec
mov
imul
je
vmovsldup
fmuls
xor
dec
xorb
movsl
pop
sub
xchg
adc
mov
mov
and
cmp
jbe
pop
movsb
pop
cwtl
sarb
jb
fldenv
jae
scas
mov
mov
jbe
sahf
push
mov
xor
and
cmc
push
push
mov
and
mov
add
cmpsb
lcall
iret
jnp
cs
jne
pop
push
xchg
cmp
push
push
dec
mov
push
mov
mov
adc
inc
pop
popf
clc
inc
cmpsl
loop
ficomps
scas
add
or
mov
inc
and
xchg
inc
clc
xchg
inc
mov
and
lods
addr16
and
push
aas
adc
mov
test
enter
jle
loop
adc
out
add
adc
call
jmp
or
shlb
adc
inc
mov
imul
fidivl
push
dec
adc
rcll
mov
push
dec
or
sbb
dec
movlhps
jbe
stos
jbe
and
out
push
dec
push
mov
mov
in
ljmp
mov
lods
add
fldenv
call
add
daa
int
inc
cmpsb
dec
jns
add
push
cmp
sub
add
push
push
xchg
stos
jae
mov
test
mov
xchg
or
and
dec
movsb
ret
or
pop
fisttpl
movsb
xchg
push
inc
sbb
imul
pop
shlb
sbb
js
or
push
and
mov
push
call
inc
mov
pop
rol
adc
psubusb
xchg
rolb
or
xor
lea
add
cmp
pop
xchg
adc
scas
dec
aad
or
mov
roll
mov
enter
push
or
push
mov
loope
jns
inc
inc
nop
xchg
faddl
mov
in
pop
and
pop
inc
sub
dec
inc
or
dec
or
dec
mov
pop
shlb
pop
call
add
pop
fs
addl
push
jp,pt
adc
in
and
fsts
mov
add
inc
push
mov
mov
inc
jbe
add
push
sbb
out
mov
mov
pop
orb
lret
psrad
fcompl
cmp
xor
pop
push
add
inc
mov
lock
jge
push
imul
dec
adc
add
loopne
jp
in
into
fstpl
mov
xchg
mov
xlat
shll
outsl
add
lret
clc
enter
je
push
and
movsb
addl
repnz
pop
push
adc
mov
mov
les
xorb
jge
ljmp
mov
push
xor
mov
xchg
cmpsl
rorl
lock
loopne
and
sbb
pushf
sbb
or
aaa
bound
mov
nop
iret
sbb
pop
push
mov
or
sbb
push
adc
jnp
mov
lods
inc
add
push
cwtl
xor
test
aam
push
jno
mov
shrl
xchg
or
or
orb
pop
jmp
fadds
lret
sbb
mov
mov
add
arpl
mov
mov
js
xchg
sbbb
enter
jle
cmp
fsubrl
in
cli
push
add
push
dec
jge
xchg
test
sbb
sub
add
movl
mov
xlat
mov
or
jg
add
fidivl
jae
nop
mov
addb
pop
jmp
jae
pushf
inc
xchg
or
adc
push
incl
or
in
push
in
xlat
js
add
je
std
sub
add
push
lea
fnsave
push
ds
jge
mov
jle
xor
fldt
cmp
push
adc
ret
xchg
mov
negb
push
push
popf
or
pop
inc
mov
fsubrs
dec
enter
push
jns
lcall
pop
inc
mov
outsb
loopne
movb
add
icebp
push
cmc
cmp
sbb
add
sbb
jp
out
jmp
js
das
dec
cmp
xchg
sub
sub
adc
je
inc
lock
lcall
or
out
mov
fbld
or
push
adc
add
lret
or
xchg
add
fdivrl
inc
or
imul
cmp
leave
add
mov
or
dec
add
sub
pusha
xchg
push
mov
or
lods
inc
add
and
pop
or
add
mov
sbb
xchg
push
mov
sbb
sbb
xor
cmp
inc
mov
cmpsl
jmp
test
outsl
or
adc
push
pop
out
fmull
xor
nop
and
nop
pusha
pop
jo
add
rcll
lea
jmp
imul
sub
shrb
xor
cmp
dec
push
icebp
inc
int3
pushf
xor
enter
outsb
pop
xchg
mov
fmuls
dec
adc
fcompl
xchg
pop
test
inc
mov
mov
insb
xor
movsb
xor
cmp
cmpsl
xor
insb
adc
mov
js
mov
add
dec
or
push
fimuls
push
test
mov
jbe
fdivl
fnstcw
aad
pop
mov
test
subb
pop
xor
push
in
jo
idivb
mov
mov
mov
mov
rclb
xor
mov
add
mov
lods
lahf
or
add
sub
sti
or
cmp
add
pop
inc
and
push
xchg
mov
push
push
sbb
scas
mov
cmp
inc
repz
jge
out
push
dec
shll
insl
inc
imul
shlb
mov
jne
inc
adc
cmpsl
mov
mov
mov
repz
addr16
sbb
aam
outsb
or
out
test
xorb
sub
pop
xchg
or
jno
mov
cmp
jae
lcall
loopne
fs
push
push
push
aad
je
or
lock
xchg
xor
adc
daa
dec
adc
pop
sbb
outsl
adc
and
addl
jo
lret
ret
mov
inc
push
mov
add
or
cmp
fcompl
call
in
mov
sub
ss
and
test
sub
enter
or
les
shll
dec
and
sahf
hlt
xchg
add
cli
push
ret
mov
mov
je
push
mov
movzbl
subb
out
sbb
or
sbb
mov
incb
scas
ljmp
ret
pop
mov
or
test
or
dec
pop
jno
stos
xor
mov
dec
push
push
mov
xor
and
jnp
inc
or
ja
outsl
loop
out
or
icebp
sub
sub
and
xor
sub
pop
and
cmp
and
pop
xor
pop
addr16
adcb
push
add
mov
enter
out
add
dec
or
jl
dec
inc
pushf
xchg
jl
push
shlb
addr16
xlat
hlt
or
sbb
mov
pop
gs
hlt
dec
lods
shlb
cmp
sbb
xor
or
or
xchg
lods
add
nop
sub
jne
mov
lea
mov
cmpsb
or
inc
fstpt
mov
lea
enter
ret
push
cmpsl
fiaddl
andb
adc
and
imul
mov
out
pop
scas
movsb
or
pop
mov
mov
and
ja
fwait
sti
inc
gs
hlt
mov
lea
push
jecxz
pop
js
jno
xchg
pop
sub
mov
jle
gs
loop
push
int
adc
gs
scas
pop
inc
sub
sub
xor
push
mov
inc
pushf
nop
push
adc
or
mov
jl
rcrb
or
clc
stc
mov
arpl
pop
jge
mov
mov
add
divl
lea
stos
mov
pop
and
jns
sbb
add
out
mov
mov
and
cmp
loopne
dec
fistpl
ret
add
cmpl
lea
incl
pop
mov
in
cld
pop
push
push
out
fldl
mov
es
dec
stos
loope
hlt
xchg
aas
push
pop
sbb
push
enter
insb
out
jb
insl
int3
loop
lock
test
cwtl
std
fimuls
xchg
mov
cmp
mov
xchg
and
inc
fwait
rcrl
cmp
mov
scas
fidivs
push
push
push
flds
cwtl
cmp
jbe
mov
push
rcrl
jne
enter
cmpsb
xchg
clc
rcrb
mov
and
xlat
pop
mov
xchg
movsb
sbb
push
cld
jp
jmp
sbbb
inc
cmp
bswap
add
mov
imul
stos
fs
rolb
roll
loop
cld
jns
dec
or
push
add
mov
push
lea
lods
and
xor
je
xorb
xchg
and
imul
jnp
mov
int3
dec
push
mov
lea
and
mov
pop
push
push
and
out
loop
out
pushl
pop
inc
pop
cmp
rorb
xchg
pop
add
pop
sbb
lods
mov
ret
sbb
adc
test
nopl
scas
xor
pop
sbb
add
pop
adc
pop
or
fsubs
push
sbb
test
mov
sub
jnp
inc
jle
jae
dec
and
mov
enter
jbe
test
pop
add
mov
jb
cmp
insb
push
xchg
inc
es
sub
dec
cwtl
sbb
xchg
fbld
jno
into
lret
xor
or
inc
xchg
add
sub
mov
push
adc
lea
fadds
mov
xor
pop
lock
and
sbb
xchg
xor
sub
xor
outsl
inc
pushf
adc
jns
sahf
out
ret
sbb
cmp
push
push
jp
or
sbb
lret
movsb
push
mov
std
sub
sub
inc
xchg
fisttpll
push
or
in
add
and
push
shl
cmpsb
cmpsb
push
fdiv
xchg
add
xor
jg
mov
mov
jo
dec
xor
push
popa
aam
xor
das
or
sbb
add
dec
ret
xor
sbb
pop
add
jne
cli
shl
fwait
shr
add
dec
mov
adc
mov
or
insb
pop
sahf
loopne
dec
inc
push
xor
add
loopne
sub
dec
xor
rclb
xchg
adc
or
add
xchg
cmp
cmp
int3
mov
pusha
notl
pop
mov
mov
das
inc
mov
xchg
pop
repnz
lds
sbb
test
or
ja
mov
mov
push
inc
orb
cmp
add
call
sbb
jp
lret
sub
jg
ret
push
add
push
xchg
jg
dec
dec
movsb
pop
jb
push
mov
xor
lods
xchg
pusha
mov
test
leave
or
adc
push
cmp
xchg
xchg
or
ja
or
add
test
data16
rcrl
mov
or
aaa
jbe
push
lock
sbb
xor
pop
mov
mov
mov
push
sbb
adc
clc
mov
xorl
dec
sbb
aas
or
xor
cmpb
xorb
and
pop
push
pusha
inc
movb
les
ss
mov
dec
add
rcr
mov
fbld
pop
les
mov
std
sbb
or
je
mov
jge
iret
data16
rcrb
aad
ret
jg
mov
insl
xor
push
or
push
mov
inc
fildl
xchg
lea
mov
mov
sbb
jne
test
pushf
jge
test
std
cs
jg
jg
push
add
mov
adc
adc
mov
ret
cmp
push
sti
imul
bound
shll
xchg
xchg
lret
inc
jmp
inc
fs
sub
mov
test
pop
inc
cmp
xchg
inc
icebp
add
sbb
inc
shl
adc
or
push
jmp
test
jecxz
sub
cmp
movsb
addr16
sub
xor
fisubl
les
stos
arpl
add
lea
xor
iret
jno
jp
add
mov
adc
inc
sbb
scas
mov
or
dec
add
leave
mov
es
pusha
and
pop
ret
cwtl
cmpsl
aam
pop
in
mov
repnz
sbb
push
shl
fistl
enter
xchg
dec
mov
fcoms
mov
fwait
aam
and
push
adc
inc
in
sbbb
xchg
and
movsb
imul
jne
out
dec
adc
xchg
cwtl
jp
in
push
ret
xor
mov
cs
pop
fs
add
fmull
and
stc
rol
add
sbb
enter
mov
and
adc
mov
or
or
mov
jo
je
add
push
sub
mov
dec
clc
or
je
pusha
add
inc
je
insl
push
add
outsl
jle
popa
arpl
sub
repz
enter
and
dec
rolb
dec
fisttpl
dec
loop
cltd
push
dec
dec
les
enter
jle
xor
sub
leave
mov
jbe
push
push
leave
push
sub
loop
xorb
pop
or
les
call
addl
jge
dec
and
imul
and
cmp
cmc
lock
xchg
pop
cltd
cmpsl
xor
clc
lahf
je
push
subb
mov
inc
mov
ljmp
inc
xor
test
in
cmp
gs
pop
cmp
xchg
ret
or
inc
ds
xor
shrb
loop
sub
insb
icebp
push
mov
imul
mov
xlat
xor
dec
rolb
cmp
popa
fmull
addr16
xor
dec
sub
outsl
lods
inc
stc
push
in
insb
arpl
test
jl
mulb
push
sub
push
addr16
jne
jbe
inc
cmpsl
cltd
push
sahf
push
insb
inc
jle
xor
les
imul
sti
lea
in
xchg
in
mov
or
arpl
jge
aas
mov
xchg
rorl
ret
rcr
mov
jmp
subb
adc
cmp
or
rorb
inc
cmp
call
out
or
cmp
test
xor
loope
mov
pushf
push
xor
sahf
loopne
xlat
loop
test
pushf
mov
loopne
pop
cmp
mov
shr
cmp
jbe
add
shl
outsb
fadds
mov
or
out
and
sar
add
inc
push
ja
inc
push
shlb
aaa
and
nop
cmp
sbb
inc
pop
sbb
jb
xor
adc
inc
mov
mov
add
adc
clc
scas
addb
test
cmpsb
or
adc
cwtl
pop
adc
movsb
data16
and
test
and
push
jo
pop
dec
hlt
pop
cmp
mov
out
mov
xlat
mov
sbb
xor
add
jb
push
and
add
add
out
xor
sbbl
addb
xchg
cmp
sbb
dec
aaa
adc
lahf
and
or
loope
and
out
sub
sarl
pop
je
push
maskmovq
mull
lock
jnp
mov
pop
pop
addr16
out
int
mov
inc
test
lcall
or
dec
fadd
mov
scas
sub
arpl
and
lods
daa
jp
inc
and
jg
test
test
dec
cmp
xor
cmp
push
lds
jl
fldenv
cltd
mull
push
push
insb
sarb
andb
adc
das
add
adc
mov
add
ja
mov
and
ficomps
sahf
xchg
pop
movaps
pop
pop
add
jmp
loopne
inc
mov
jle
test
or
add
push
or
and
jns
das
push
push
jmp
ds
jl
add
cmp
sub
jns
and
testl
fsubrl
dec
mov
and
push
pop
xchg
inc
rol
outsb
dec
xchg
push
andb
lret
or
adc
mov
or
ret
lods
inc
pop
jo
add
mov
cmp
inc
add
push
jno
push
xor
mov
sbb
push
in
stc
pop
push
mov
push
scas
repnz
jmp
push
and
aaa
or
or
sbb
loope
adc
sub
orl
in
mov
pop
out
add
test
sub
out
push
jle
rol
fcomps
sub
jl
mov
sbb
inc
ret
je
dec
cwtl
sub
push
in
outsl
les
cmp
ficoms
pop
fsubrs
icebp
jb
or
mov
sub
or
clc
and
xor
dec
push
mov
bound
jecxz
xlat
sub
and
sub
loop
pusha
js
inc
std
pop
stos
pop
sub
cmp
push
push
enter
cmp
mov
sbb
stc
add
ret
pop
lods
mov
test
mov
jmp
mov
and
and
cwtl
cmc
test
sbb
mov
fwait
inc
push
ret
hlt
int3
iret
sbb
mov
jo
lds
daa
cmp
sti
std
mov
xor
mov
inc
mov
mov
sbb
daa
pop
add
xchg
push
cwtl
sub
push
dec
bound
popf
mov
stc
push
or
or
movsb
test
xchg
and
sbb
lea
enter
push
push
mov
sub
mov
daa
out
aaa
mov
mov
roll
fdivs
pop
lods
loope
adc
enter
xor
mov
or
rolb
loope
mov
push
sahf
repnz
xchg
dec
mov
mov
inc
mov
jmp
jbe
push
mov
xchg
and
xchg
movsb
push
call
rcl
lods
cmpsb
or
rcll
add
fnstenv
pop
ficoms
dec
enter
mov
adc
lods
pop
adc
dec
mov
and
movsb
mov
mov
xchg
push
ret
cmpb
sbb
sub
xor
inc
xor
add
daa
movsl
inc
push
push
ja
add
cmp
xchg
push
jnp
jmp
scas
sti
mov
addr16
jge
mov
ss
mov
imul
es
test
jmp
or
mov
push
fwait
mov
and
jb
hlt
push
sub
xchg
cli
out
mov
sbb
mov
cmp
mov
dec
in
dec
mov
xchg
fwait
and
xchg
sarb
fst
sahf
jmp
mov
sahf
movsl
push
inc
mov
jle
or
dec
punpcklwd
jmp
imul
sbb
loop
mov
pop
push
popf
xor
adc
xchg
scas
and
add
fisttpll
ret
pushl
push
pop
mov
adc
or
cmp
pop
push
xlat
popl
jmp
mov
rolb
mov
adc
stos
sub
add
stos
movsl
test
mov
sub
pop
dec
adc
sbb
mov
and
adc
add
dec
push
pusha
xchg
adc
cwtl
pusha
xchg
popf
cmp
je
jp
pop
adc
rorl
push
mov
xchg
cmp
je
jbe
inc
mov
xor
hlt
notl
dec
je
or
and
movsl
push
popa
cmp
gs
rcrl
sbb
fsubr
jb
pusha
daa
cmp
adc
add
xor
mov
mov
nop
push
in
jecxz
lahf
push
icebp
fst
dec
lods
dec
stc
lret
rclb
int
aaa
mov
bound
dec
mov
mov
nop
fsubl
ficompl
push
fstpl
clc
or
enter
mov
or
xorl
inc
inc
lock
or
or
and
xchg
aad
xchg
xor
dec
jle
cmp
or
loopne
add
call
js,pn
pop
daa
jnp
mov
das
mov
xchg
mov
nop
inc
dec
fs
cmp
inc
push
enter
xor
dec
jnp
push
adc
mov
inc
mov
in
pop
and
sbb
std
add
xchg
fimull
loopne
pop
mov
xchg
hlt
lea
int3
movsb
or
fwait
dec
cmp
adcl
hlt
rorb
push
push
sub
push
or
push
xlat
daa
int3
sub
inc
add
and
push
push
add
push
js
pop
mov
mov
xor
lahf
push
mov
jnp
push
or
xchg
cmp
lahf
loope
adcb
cmp
mov
mov
rcll
fsubrl
subb
arpl
adc
sti
jecxz
xchg
inc
out
cmc
sbb
or
lea
xchg
out
adc
ja
std
in
dec
xchg
nop
fsubl
xor
ror
jmp
movl
xchg
pop
mov
addr16
cmp
dec
loopne
decl
inc
adc
lret
mov
push
push
sbb
adcl
mov
pop
je
pop
xchg
adc
pop
adc
or
mov
push
or
adc
movsl
push
dec
test
aam
jp
or
lds
test
and
adc
mov
mov
test
mov
or
js
xchg
mov
sbb
cmp
jl
popa
fsubl
and
push
xchg
sub
js
pop
les
push
mov
add
je
sub
add
sbb
subb
mov
test
rolb
imul
cs
jmp
xor
pusha
mov
sub
inc
cld
inc
bound
sub
mov
cmpsl
push
pop
mov
js
add
adc
jns
cld
pop
inc
insb
xchg
push
add
in
and
or
movb
adc
and
jne
mov
lods
dec
sub
loopne
push
leave
jg
ds
xchg
sub
in
lock
sbb
mov
cmp
add
dec
xchg
addr16
fstl
mov
cs
push
inc
add
pop
or
jmp
inc
xorb
push
xchg
dec
cmp
rolb
adc
pop
mov
xor
repz
lret
mov
loope
fwait
fs
mov
addr16
in
pop
xchg
pop
push
outsl
repnz
push
jbe
jbe
push
push
sub
push
lods
sub
pushw
push
cmpsb
jbe
out
sarb
imul
add
mov
adc
aam
push
sbb
push
insb
sarl
dec
mov
mov
or
dec
push
or
inc
cwtl
inc
mov
in
jl
mov
neg
push
in
adcl
xchg
adc
test
mov
adc
xor
xchg
push
sti
jp
and
je
push
sbb
shrb
mov
or
adc
adc
cltd
ffree
adc
jmp
adc
bound
daa
pop
movsl
jo
and
inc
push
inc
es
mov
xchg
add
subb
add
mov
pop
cmp
iret
cmp
rcll
in
add
and
adc
xor
push
stc
pusha
or
int3
test
or
pushf
mov
mov
sbb
test
lret
add
cmp
les
mov
xor
push
cmp
add
push
or
push
sub
dec
xchg
sub
adc
fmul
add
pop
push
out
int3
call
aaa
icebp
lret
cmpsb
in
or
psllw
loop
sbb
test
xchg
adc
xchg
and
pusha
outsl
subb
xor
hlt
xor
enter
xor
xchg
add
mov
popf
mov
test
rorl
sbb
adc
iret
and
out
adc
movsl
or
aam
xchg
and
mov
or
xor
cmpsl
lahf
pusha
inc
insl
add
dec
mov
loopne
ret
or
inc
loopne
loopne
inc
adc
sbb
in
push
je
mov
mov
inc
int
in
pop
mov
popf
mov
mov
and
lds
push
lea
ret
repnz
rolb
dec
cmc
aad
ss
ret
imul
int
imul
imul
add
dec
mov
sbb
xor
enter
pusha
dec
sti
mov
sub
aam
shll
xchg
adc
lock
cmp
scas
fdiv
cmp
jo
add
or
lock
sub
fsubrs
mov
push
add
sbb
adc
or
test
xchg
movsb
jle
or
jge
push
push
in
decl
out
or
mov
dec
pusha
mov
rol
mov
ror
xor
shr
xor
decl
jnp
xor
shr
xor
add
add
add
mov
shrb
mov
iret
or
jae
or
and
fisttpl
add
add
aam
sub
stos
subb
sbb
scas
push
jg
mov
ror
mov
fisubrs
jge
xor
test
fsubs
fiaddl
xor
xor
xchg
data16
repnz
sub
xchg
dec
movsl
mov
or
add
ret
rcl
add
add
stos
addb
add
call
shr
rcl
pop
shll
call
dec
xor
mov
cli
mov
rol
cmpsb
imul
add
push
xor
push
cs
fcomp
loopne
imul
xchg
add
cmp
and
lahf
push
cmp
bound
push
js
xor
bound
pop
mov
pop
imul
aaa
mov
xor
mov
xor
loopne
shlb
fs
xchg
lret
loopne
cmpsb
cltd
and
xor
dec
lcall
in
xor
or
int3
test
ret
inc
into
add
in
sarl
jnp
push
xor
and
and
out
iret
or
push
into
add
and
fadds
inc
adc
add
pop
adc
push
pusha
fildl
jo
ret
push
jo
ficoms
add
mov
inc
daa
lcall
js
adc
adc
push
loop
mov
testb
cltd
xor
fadds
pop
jbe
dec
subl
fisubl
pop
fdivrs
jp
push
and
add
gs
dec
xorb
and
inc
call
pop
cmpl
inc
mov
test
or
adc
adcb
aam
aaa
cmp
cmpsb
imul
xchg
inc
mov
add
mov
shr
rolb
inc
aaa
sub
or
jge
xor
mov
dec
inc
shll
loopne
and
in
inc
or
jo
add
push
movsb
add
and
sahf
dec
adc
dec
xor
and
push
dec
xor
and
add
push
xor
pop
dec
sbb
sub
cmp
dec
push
push
push
pop
or
sub
fs
pop
movsl
cmp
stos
mov
push
add
dec
in
push
xadd
or
or
xor
push
pop
xorb
pop
xor
dec
inc
pusha
pop
test
in
xchg
and
mov
or
and
sbb
adc
movsb
sahf
fs
subl
shlb
pop
sub
push
dec
dec
dec
icebp
stc
jp
inc
inc
stc
stc
mov
adc
mov
xchg
inc
dec
mov
dec
idivb
shll
loopne
int
mov
loopne
or
and
add
and
ds
jno
pop
add
mov
push
dec
sbb
push
pop
add
sub
mov
movb
inc
scas
add
cmpsb
pop
push
lea
pop
les
sub
add
sub
mov
fdivrs
testb
enter
add
sarb
and
or
mov
jo
mov
adc
cltd
in
outsb
shr
cmpsb
push
inc
jae
mov
sub
icebp
xor
xorb
aas
lea
jmp
lea
inc
sti
mov
push
sub
pop
add
ffree
mov
or
mov
dec
jne
pop
sub
lahf
fmuls
loope
lock
out
std
sbb
jl
sub
mov
cmp
jbe
or
add
cmp
fs
adc
div
fwait
add
jae
push
pop
fadds
fildll
and
lods
mov
sti
stos
shrl
push
pop
loopne
mov
fidivrs
xchg
or
xchg
ljmp
mov
jecxz
cld
mov
dec
xchg
adc
push
mov
push
push
and
aam
push
dec
or
sbb
push
fwait
jbe
imul
dec
dec
lea
add
test
or
rolb
jge
sahf
mov
pop
add
repnz
rclb
adcl
movsl
mov
cltd
xchg
dec
or
les
mov
fsubs
sbb
int
hlt
cmp
push
xchg
dec
xchg
and
mov
add
inc
stos
adc
add
jns
stos
or
pusha
and
stos
add
xor
jl
xchg
push
mov
jae
clc
loope
lock
push
inc
ret
mov
adc
dec
add
dec
and
dec
xor
mov
dec
sbb
cwtl
loope
or
and
inc
pop
sbb
or
and
add
inc
or
fistl
pop
or
pusha
ljmp
mov
sub
xor
inc
inc
jl
sbbb
ds
mov
movsb
pop
ret
dec
and
mov
or
out
and
sub
mov
and
add
lds
push
jge
subl
sbb
inc
or
adc
jno
sub
pusha
jnp
inc
std
push
mov
add
adc
push
xor
pop
cmpsb
mov
dec
inc
cmp
sub
sbb
loopne
cmp
rsm
add
add
push
add
sti
adc
and
add
mov
sbb
and
sub
loopne
add
add
jae,pt
dec
jle
es
int
add
adc
pop
push
clc
cs
loop
enter
insb
pusha
pop
adc
push
push
mov
in
mov
or
jo
cmpl
hlt
push
mov
scas
and
xor
outsl
or
repnz
mov
and
imul
gs
xor
dec
lds
jno
pop
inc
sub
fcmovnu
add
icebp
jns
cmp
lods
or
test
and
out
inc
popa
push
inc
xor
bound
dec
rcrb
cmpsl
sahf
push
and
jle
jnp
add
push
out
add
loopne
xor
jae
push
jb
add
icebp
inc
test
hlt
cli
or
mov
and
in
adc
adc
call
push
xchg
test
jmp
lcall
rorb
inc
mov
pop
mov
test
or
insb
loopne
or
loopne
inc
and
pop
inc
mov
test
cmp
or
jge
mov
addl
and
fnsave
adc
mov
lock
and
add
add
jnp
out
fsubrs
pop
add
sub
mov
add
mov
imul
mov
cmp
push
mov
xor
push
lods
addl
xchg
push
jl
sahf
into
negl
xchg
add
mov
ret
aam
es
adc
push
sub
sti
mov
scas
add
cmp
xor
push
mov
bound
pop
adc
xorl
push
notb
push
sbb
iret
das
and
lds
mov
push
scas
insb
xor
dec
out
jge
xchg
jbe
xorl
scas
mov
out
dec
repnz
xor
in
mov
or
jne
rolb
xchg
popa
sub
filds
aaa
push
push
leave
mov
or
mov
adc
aas
or
js
mov
add
sbb
cmp
mov
pop
or
push
pop
or
xor
or
lsl
adc
wrmsr
test
mov
sbbb
mov
dec
hlt
mov
popf
nop
es
adc
ret
mov
xchg
adc
std
fistl
jo
andb
or
fsts
cli
insl
test
jbe
push
push
scas
mov
les
das
and
jae
push
mov
popa
ljmp
and
and
scas
add
je
or
stos
sbb
arpl
pop
mov
fldenv
xor
icebp
stos
sbb
mov
lahf
in
pop
mov
push
packssdw
xchg
movsb
lock
sbb
pop
fisttpl
cmpl
idivb
cli
xorl
or
or
ds
and
sbb
push
inc
mov
and
or
cmpl
mov
ret
mov
mov
push
subl
xchg
dec
or
jbe
gs
and
jne
sbb
mov
xor
pop
adcb
test
adc
and
adcl
mov
cmp
mov
mov
sarb
shrb
scas
sub
cmp
cli
adc
add
roll
int
add
mov
movsb
push
dec
sbb
sub
push
call
ljmp
xor
sub
adc
hlt
mov
pop
mov
shll
adc
dec
bound
xchg
dec
push
mov
cmp
push
scas
or
jmp
pop
pushl
pushf
sub
pop
dec
sysexit
sub
pusha
data16
add
sub
pop
xchg
xchg
add
shll
sub
clc
push
xor
and
dec
pusha
jbe
sub
ret
mov
add
adc
pop
pop
cli
add
dec
and
shll
ds
add
push
mov
and
jge
sbb
jbe
xor
dec
or
sub
pop
cmp
xchg
or
mov
outsl
je
sub
cmp
mov
sub
sbb
mov
push
mov
push
dec
sub
dec
and
lea
mov
add
ja
scas
bound
dec
pop
or
inc
and
push
dec
inc
outsl
pop
orl
inc
aaa
inc
pop
pop
aas
sub
bound
stc
ja
incl
sahf
ja
ss
cmp
jb
mov
movlhps
adcb
mov
xchg
jp
inc
or
mov
in
pop
and
jno
pop
push
jmp
pop
cmp
cmp
sahf
data16
mov
xchg
cmp
adc
addl
jge
ret
lahf
mov
push
mov
cltd
shr
xchg
add
push
mov
dec
xor
pop
ret
jmp
insl
xchg
or
pop
jp
mov
mov
push
or
add
mov
enter
or
sbb
cld
mov
shrb
stc
and
adc
pop
mov
mov
inc
cmp
out
out
adc
cmp
mov
movb
out
lock
fnstsw
mov
mov
adc
jg
in
add
inc
dec
mov
jne
sub
sub
scas
fmuls
sub
mov
lcall
adc
mov
dec
pop
xor
repz
xor
push
dec
add
add
jo
pop
subl
hlt
pop
cmpsb
mov
cmp
je
aad
inc
mov
or
pop
push
sti
fdivr
xchg
xor
inc
cmp
jl
adc
or
dec
mov
or
test
ret
push
xor
fsubl
ja
sbbl
ss
push
push
adc
xor
sbb
jle
mov
push
xor
xor
pop
ret
push
das
push
cld
push
mov
or
push
push
or
jl
xchg
ss
add
lds
jns
xor
inc
mov
adc
xor
jo
xor
sbb
pop
xlat
and
inc
mov
jnp
fsubs
cmp
das
xor
pushl
inc
cmp
push
lea
stos
sub
mov
xor
das
push
push
xchg
pop
pop
in
inc
test
in
and
pop
mov
xor
mov
int
hlt
dec
add
or
adc
sub
loope
and
add
mov
inc
or
enter
shl
add
loope
shl
mov
and
xor
mov
mov
or
addb
mov
xlat
cmp
jne
jge
adc
and
sub
push
fidivrs
pop
add
inc
and
pop
adc
ret
push
mov
sub
test
aam
fs
sub
mov
pop
or
push
inc
loopne
fs
dec
ret
sub
push
or
inc
add
or
fs
lock
and
sar
mov
inc
pop
or
inc
push
add
aas
orl
enter
movsl
dec
lret
fists
mov
mov
mov
adc
mov
mov
inc
rcrl
add
rolb
sarb
or
adc
jle
push
ret
inc
inc
push
jns
shrl
ljmp
mov
xor
es
cmp
leave
pop
and
and
aam
sbb
mov
adc
mov
mov
mov
or
movsb
mov
push
sbb
dec
insl
push
xor
or
daa
decb
jns
jae
rcrb
insl
adc
sbb
aas
and
or
sbb
dec
in
mov
ficoms
gs
fstpl
or
mov
inc
mov
mov
rcll
push
inc
xchg
lock
lahf
xor
or
scas
xchg
add
xor
push
adc
adc
data16
xor
inc
loop
nop
aaa
inc
adc
adc
dec
push
or
mov
ss
punpckhbw
cmp
jg
jl
push
lea
or
std
add
push
push
js
xlat
mov
jmp
xor
xor
int
test
cmp
push
outsl
pop
cmpl
jns
xchg
and
lods
aam
or
out
dec
sbb
pop
dec
push
adc
add
cmp
push
sbb
divb
loop
pop
mov
orb
add
sub
ror
add
push
pop
insl
cmpsl
fimuls
jmp
sbb
fcmovbe
pop
adc
fs
repnz
add
add
lcall
loop
testb
push
cmpl
mov
loop
inc
jo
dec
faddp
xchg
xor
popa
sub
sub
in
mov
adc
adc
sbb
mov
push
mov
shlb
mull
flds
push
scas
sbb
pop
ret
pop
pusha
fdivs
pop
jmp
push
pop
rorb
lea
cltd
and
cmp
pop
pop
in
add
ret
orb
movsb
and
bound
and
cmpsb
inc
push
or
imul
dec
push
adc
dec
pusha
or
and
push
cmp
rclb
inc
sahf
inc
ficomps
or
in
outsb
in
or
push
mov
inc
jmp
dec
sbb
int
and
jmp
dec
mov
stos
mov
movsl
lcall
aaa
popl
inc
or
sbb
add
push
and
rolb
mov
cmpsl
mov
mov
gs
adc
dec
add
inc
je
addl
out
adc
xchg
add
pop
call
xor
js
sbb
cwtl
add
fistpl
sbb
sbb
mov
dec
or
mov
adc
inc
xor
mov
inc
sbb
or
rcrl
clc
andl
xchg
imul
lcall
sub
mov
pop
hlt
dec
jns
inc
loopne
and
xor
pop
icebp
cmpl
aaa
js
inc
fiadds
sti
pop
push
cmp
outsb
add
outsl
jl
cmp
mov
pop
push
pop
xor
adc
dec
jmp
or
cwtl
push
lea
rclb
add
mov
add
mov
adc
in
dec
pop
test
mov
cmp
adc
sbb
sbb
mov
pop
pop
push
ss
add
add
dec
cmp
and
and
and
pusha
test
aas
jo
out
cmp
jle
cmp
call
cmp
add
fisubs
inc
cmp
in
or
ret
dec
sub
xor
jne
push
inc
sub
rorb
push
mov
mov
pop
push
cmpsl
add
mov
jmp
ret
xchg
jne
repz
imul
pop
cwtl
pop
ret
arpl
shl
dec
adc
insb
mov
or
mov
jne
repnz
insb
inc
or
or
fmuls
jne
jbe
jnp
cmp
push
cmp
outsb
inc
nop
sub
inc
jo
jne
gs
jmp
into
or
pop
xlat
insl
addl
out
xor
ror
insb
fwait
add
add
insb
out
shl
sbb
pop
dec
add
insb
jl
loopne
or
call
xor
sbb
movl
mov
outsl
adcl
push
sbbl
mov
sarl
sbb
push
sti
pop
adc
testb
je
cmp
mov
push
add
push
add
push
fcmove
bound
cmp
xchg
jmp
sub
negb
push
cmp
jne
push
adc
add
inc
jge
inc
mov
jne
pop
sub
sbbl
pushf
push
shll
sub
or
pop
les
mov
dec
sbb
xor
jo
test
sub
loopne
adc
jae
dec
and
cmp
loopne
jmp
out
jge
enter
dec
ret
adcl
push
fcmovbe
jne
jg
add
and
adc
dec
xchg
dec
hlt
adc
mov
cmc
or
fisubrs
or
jo
mov
push
movsb
and
push
pop
test
cmp
test
ret
inc
hlt
push
push
mov
push
test
sbb
or
inc
mov
push
mov
cmpb
or
test
inc
xor
int
push
jmp
dec
push
push
sbb
mov
push
sub
pop
push
adc
jbe
iret
pop
mov
sbb
add
int
push
lock
divl
testb
or
mov
or
sbb
roll
pop
jb
lahf
add
cmp
leave
jmp
lea
jmp
loopne
call
sbb
dec
adc
cld
xchg
and
cmp
jne
data16
popa
push
add
cmp
pop
or
jno
or
jmp
sbb
dec
xor
lret
sub
xor
jmp
push
dec
pop
pop
xor
shrb
push
push
adcl
clc
bound
push
jb
pusha
or
jne
cmp
jne
das
call
xchg
ret
pop
mov
mulb
std
or
push
sbb
nop
or
add
lahf
aaa
les
jae
jmp
or
jl
jne
push
dec
dec
sbb
pop
add
add
imul
xchg
test
sbb
mov
aad
add
push
mov
xchg
loopne
xchg
or
and
ret
or
mov
lahf
mov
das
mov
dec
mov
push
jmp
and
inc
sub
lret
icebp
push
mov
or
mov
mov
pop
fs
add
and
xlat
pop
cmp
subl
shlb
je
pop
mov
or
in
adc
cmp
sahf
jmp
jno
cmpsb
rorb
jle
arpl
jne
int3
add
jg
cmpsb
je
mov
add
repnz
in
loopne
and
add
and
add
jle
rolb
add
push
sbb
jb
test
mov
sbb
add
lcall
int
add
inc
pusha
lret
jb
and
inc
adc
std
cld
adc
and
push
jnp
sti
cmp
push
or
lods
call
repz
add
cmp
xchg
sbbb
icebp
or
or
scas
bound
add
lret
adc
or
push
xor
adc
sbb
ds
or
or
mov
out
or
pusha
dec
adc
mov
add
clc
sub
cmp
jmp
mov
pop
notl
loopne
cmp
insl
loopne
not
add
ljmp
sbb
int3
gs
and
add
rolb
sbb
dec
add
test
fisttpl
sub
int
xchg
aad
xchg
popf
xchg
test
xchg
jns
pop
subl
and
sahf
jecxz
pusha
inc
and
scas
aam
icebp
cmpsb
adc
out
adc
and
repz
mov
adc
xlat
jne
cmc
imul
ja
or
push
sbb
imul
loopne
add
push
ret
mov
subb
push
rolb
in
or
in
dec
mov
jmp
push
popa
ds
xchg
mov
into
xchg
aas
pop
cmp
pop
xchg
sub
test
xchg
or
cs
dec
dec
pop
leave
sub
inc
add
cltd
push
pop
xlat
loopne
cltd
pop
fimull
xchg
shr
or
adc
xor
inc
mov
adc
mov
push
inc
test
out
popa
clc
decb
and
mov
notl
push
aaa
adc
inc
cmp
mov
xor
xor
adc
push
and
stos
pop
arpl
addb
fisubrs
fisttps
out
add
ja
fcmovnu
dec
sub
addr16
push
ds
jae
addb
rorl
insb
sub
cmp
ss
cmc
int3
sti
scas
icebp
pop
xlat
loopne
repnz
sub
xor
sti
loopne
pop
push
es
mov
out
inc
sbb
fistps
adc
sarb
add
cmpsb
movnti
push
xchg
movsl
inc
mov
sbb
dec
pop
sbbl
ja
add
pop
pop
ret
push
or
andb
dec
popa
jns
loopne
vunpcklps
adc
add
push
xor
adc
aaa
arpl
mov
sbb
inc
or
loop
push
out
jb
cs
loop
mov
jmp
lods
adc
scas
pop
mov
inc
lea
sub
inc
adc
cltd
cmpsl
cmpsb
jecxz
into
jbe
rolb
or
mov
push
and
lock
mov
push
pop
or
jl
test
xchg
icebp
movsb
jbe
adc
shrb
jl
adc
pop
inc
inc
inc
call
cmp
cmp
lahf
int
or
shll
and
test
lcall
xchg
xor
cmc
mov
je
mov
je
out
jge
scas
addb
jle
popf
xchg
daa
cmp
adc
das
aas
jbe
bound
push
push
mov
xchg
add
cli
cmp
je
inc
mov
fisubrs
sahf
and
cmpsl
or
push
mov
dec
bound
popa
orl
test
adc
cmp
sbb
mov
movsl
or
jg
pop
xchg
inc
or
pop
je
jmp
mov
push
dec
sub
icebp
and
jns
es
mov
inc
sbb
loopne
lret
add
cmp
cli
jg
inc
subb
xor
imul
push
xor
push
loop
xor
imul
inc
cmp
mov
dec
push
adc
mov
je
sbb
push
mov
dec
inc
incb
pop
and
adc
adc
scas
mov
pop
xor
jae
sub
or
iret
arpl
clc
mov
push
lock
and
test
das
in
inc
lret
outsb
loop
inc
orb
or
push
cmpsl
cltd
mov
mov
adc
inc
insb
sub
ss
jb
loop
dec
aad
pop
in
pushf
push
js
loopne
add
push
dec
or
push
loope
mov
add
shrb
dec
cltd
adc
sbb
and
xor
mov
les
loope
push
xchg
sub
and
push
sub
sbb
mov
fwait
sub
mov
jno
insb
mov
popa
cmpsl
cmp
pop
ja
dec
je
xchg
or
mov
add
out
jne
jno
rorl
push
daa
pop
sbb
aas
rcrl
xchg
jnp
lret
inc
mov
and
shlb
les
movl
ret
sbb
cmpsl
add
mov
or
das
inc
xchg
jle
rcrb
mov
loopne
js
xor
dec
insl
adc
clc
add
shrb
lahf
movb
arpl
mov
aad
shll
jle
add
and
sub
scas
ja
imul
and
or
fnstenv
and
mov
and
clc
jg
fs
test
ficomps
cld
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
push
lahf
jo
lret
je
mov
mov
jge
repz
or
jg
cld
in
sub
adc
jnp
mov
push
sbb
adc
ret
js
xlat
fisttps
push
add
adc
add
fisubrs
ret
mov
fisubl
pusha
addsd
fdivrp
fst
int
add
sbb
sbb
inc
pop
fildl
dec
push
sbb
daa
setge
push
imul
dec
mov
es
mov
or
xor
pop
cmp
incl
xchg
adc
pop
nop
dec
fmuls
call
lret
xor
outsb
rcrl
ret
mov
mov
jge
sub
nop
push
jge
pop
sbb
push
sahf
fldl
inc
mov
es
cli
dec
cmp
js
jb
loope
inc
sub
ss
xchg
scas
xor
testb
fld
je
sub
add
pop
adcl
mov
mov
or
data16
adc
mov
dec
ljmp
fxch
or
push
jno
daa
pop
adc
add
sub
outsb
or
movsl
push
lods
in
or
jb
fstpt
cmp
add
push
insl
inc
jo
mov
add
cmp
addl
add
jb
repz
insb
imul
push
pop
and
cmovs
mov
push
pop
into
cmpsl
test
jg
enter
or
rep
jmp
or
cmp
or
cltd
fildl
add
xor
movsb
jl
push
sahf
push
sub
sbb
shr
cmpsb
push
and
pop
push
lcall
mov
mov
jge
jb
movsb
mov
movl
fiadds
mov
sahf
testl
pop
push
iret
repz
lahf
dec
mov
mov
call
repz
lock
hlt
xchg
cmp
repz
clc
cld
mov
inc
mov
inc
push
lock
fldenv
jno
sahf
xlat
jmp
and
pop
mov
push
push
nop
inc
pop
sti
and
and
adc
je
into
jl
cld
or
in
cmp
xor
dec
in
enter
loopne
daa
stc
jnp
gs
pop
nop
inc
push
push
into
nop
fiaddl
jl
mov
mov
mov
add
aaa
adc
mov
dec
addr16
add
mov
add
push
sahf
mov
cmp
pusha
in
in
push
hlt
cld
add
sahf
pop
lahf
cmpsl
or
daa
xor
sbb
jns
out
sbb
adc
adc
jns
out
or
or
aaa
inc
inc
sahf
add
inc
inc
or
push
pop
insb
xor
push
add
xor
pop
punpckldq
call
cmp
fs
pop
mov
and
dec
or
jg
mov
and
daa
mov
mov
fildll
pop
sti
imull
bound
outsb
std
or
mov
test
je
xor
add
jo
popf
pop
lods
pop
test
cmp
mov
inc
inc
jle
mov
jmp
pop
shlb
mov
sarb
icebp
fisttpl
jne
mov
js
push
ja
loop
sbb
jo
int
sbb
nop
pop
and
mov
cmp
arpl
sub
cmp
je
cmpsl
xor
adc
daa
adc
push
jge
call
shl
jne
popf
shrb
pusha
and
lock
adc
sub
loop
mov
fcomi
rcrb
arpl
inc
js
in
outsl
jne
xchg
inc
dec
call
cwtl
cs
or
push
push
pop
add
push
xchg
inc
mov
stos
pusha
mov
push
lcall
call
mov
or
adc
jne
add
and
cmp
or
mov
sbb
popa
add
adc
adc
rorl
add
xchg
nop
in
das
and
loop,pt
add
std
sub
pop
inc
inc
cmp
cmp
sarl
or
push
adc
and
sbb
out
mov
cmp
lret
das
adcl
pop
or
pop
add
add
xchg
subb
jne
sub
mov
add
lcall
aaa
add
inc
and
lcall
hlt
cmp
sarb
andl
rclb
call
mov
add
cmp
ret
jne
rcrl
mov
or
dec
leave
sbb
or
or
inc
sbb
cmp
mov
mov
adc
ret
cmp
pop
mov
data16
lret
jne
sbb
cmp
jg
jmp
add
or
arpl
pop
ds
aad
push
lods
jo
add
lods
movl
cmp
rorb
cmp
and
xchg
repnz
lea
adc
pop
jo
jge
je
add
fisttpll
mov
orl
or
adc
pop
dec
hlt
daa
mov
add
in
hlt
aad
pushf
dec
push
and
hlt
jne
andl
sub
pop
inc
movb
add
cmpsb
jmp
shrl
and
in
insb
ja
and
sub
inc
inc
cmp
cli
sbb
jmp
xchg
cmp
ja
loop
ljmp
push
sub
fwait
popa
maskmovq
mov
fdivs
cli
or
add
jmp
or
mov
inc
ds
jbe
test
push
cld
jb
insl
ret
push
and
jmp
hlt
outsl
lcall
pop
mov
dec
dec
mov
inc
cmp
jb
lret
ret
pop
out
push
gs
mov
or
or
add
int
mov
or
sbb
cmp
mov
pop
arpl
mov
cwtl
in
fs
lcall
sub
jb
lea
pushf
and
mov
or
test
je
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
call
and
repz
or
sahf
jge
ret
adc
push
dec
jmp
sahf
lahf
out
adc
jmp
std
std
jmp
cld
js
out
cld
ret
pmaxub
dec
push
adc
scas
jb
jge
cmp
add
sub
jmp
rclb
inc
pop
adc
jb
imul
push
popf
sarl
or
testb
adcb
test
adc
jo
js
je
adc
jne
rcrb
push
add
and
std
or
or
push
xor
adcb
add
and
add
adc
cmp
cmp
les
popl
enter
test
stos
add
adc
adc
and
call
adc
or
jg
add
mov
mov
dec
cs
add
sahf
jno
f2xm1
les
popa
sub
and
sub
jmp
jae
mov
pop
cmc
imulb
pop
jle
push
push
pop
div
add
les
jb
inc
cmp
mov
lds
and
js
push
jne
or
lods
arpl
js
pop
sub
pop
adc
push
ss
push
mov
add
es
jo
sub
imulw
cmp
or
daa
xchg
sbb
call
or
jne
push
jno
mov
xlat
nop
xlat
loope
inc
mov
insb
or
mov
add
aam
adc
out
cwtl
cmpsl
jo
lods
cmc
or
add
push
sub
inc
sub
add
and
xor
jp
mov
or
jl
or
lods
push
mov
lea
jle
cmpl
jecxz
out
cmpsl
int3
je
roll
xchg
xor
add
dec
addb
pop
inc
jmp
sbb
and
sti
sub
jmp
adc
jne
js
loopne
sub
hlt
dec
push
orb
sbb
jns
cmp
and
cmp
inc
pop
fcoml
fmull
mov
aaa
mov
pop
or
fbstp
mov
insb
adc
pop
jne
dec
add
sbb
add
lds
lock
or
test
dec
clc
or
mov
jmp
cmpb
fidivs
lret
sub
cmp
ja,pn
xor
pop
mov
dec
adc
sbb
loope
sbb
sub
sbb
and
and
adcb
cltd
push
je
lock
lods
es
dec
pop
cld
sbb
add
inc
cmc
mov
nop
test
jne
test
jne
push
lock
addb
jnp
push
adc
inc
mulb
cmp
mov
fisubl
mov
pop
add
into
out
pusha
popa
mov
das
in
les
mov
jge
sbb
mov
and
pop
pop
aaa
jle
or
xchg
cmp
jecxz
dec
loop
add
cs
cmpsl
add
mov
dec
movsb
rolb
sub
pushf
inc
enter
or
and
es
jg
lea
stos
mov
shr
shrb
sub
mov
pop
sub
push
stos
pop
xchg
jbe
mov
mov
push
xor
rclb
and
stos
loop
jne
divb
das
xchg
and
inc
inc
push
sbb
xchg
adc
sbb
sbb
shlb
push
mov
inc
inc
data16
lea
sar
dec
jo
xor
and
shll
xor
cmp
mov
or
xor
sub
dec
jle
inc
mov
mov
xor
rorb
sub
sbb
or
sub
xor
dec
push
aas
push
or
movl
push
push
gs
aad
roll
jno
lock
leave
jl
sbb
dec
out
push
xor
xor
add
stos
xchg
hlt
and
adc
in
decb
in
les
adc
bound
add
pusha
sbbl
dec
ret
pop
push
adc
frstor
push
dec
dec
or
shlb
sub
mov
and
clc
jae
fwait
or
enter
add
call
mov
gs
inc
sti
sbb
leave
adc
fidivs
sub
lods
add
push
cmp
in
xchg
stos
jne
mov
int
hlt
je
fdivr
xchg
int3
stc
sub
in
push
adc
aam
cmp
mov
add
mov
or
mov
movsb
jne
je
mov
imul
es
pop
sub
dec
xor
push
mov
or
lock
jne
push
out
cmp
or
movsl
shlb
pop
jmp
pop
test
rolb
sahf
adc
xchg
push
inc
jo
inc
push
add
dec
stc
pusha
push
incb
add
push
lret
dec
or
leave
test
loopne
jae
xor
cmp
adc
xchg
push
outsb
flds
push
das
xchg
addl
and
mov
adc
icebp
add
mov
mov
out
or
call
xor
or
xchg
pusha
dec
mov
mov
loop
dec
push
std
sbb
movb
sub
fnsave
std
add
popa
popa
loop
xchg
push
clc
push
push
push
jae
cmp
fistl
pop
jl
test
lret
je
push
stc
xlat
rorl
les
pop
adc
sbb
adc
loopne
shlb
or
sbb
or
push
hlt
sub
sub
adc
pop
popf
mov
dec
or
xor
dec
roll
shrb
les
jle
push
fstpt
mov
aaa
push
pop
ret
repz
int3
push
pop
push
push
adc
ds
outsl
loopne
mov
mov
cmp
lock
add
clts
and
and
cmpsb
sti
xor
repnz
rorl
in
xor
repnz
and
mov
jl
scas
out
mov
or
and
rcrb
mov
cmp
nop
jno
jmp
jmp
xor
jo
xchg
and
push
pop
inc
pop
je
push
inc
pop
push
shlb
adc
add
sub
ljmp
jno
rorb
mov
mov
mov
pusha
cmp
jne
dec
pop
cld
fmuls
inc
xchg
xor
faddl
mov
and
out
add
mov
push
xor
cmc
in
std
sbb
ss
jp
and
xlat
test
sub
aas
push
add
push
cmpsb
fdivrl
xchg
cltd
jb
fcomp
ret
lock
aam
pop
push
cwtl
test
xor
push
adc
mov
movsl
mov
testb
xlat
movsl
rolb
jecxz
imul
jmp
push
pop
sbb
sub
jbe
or
jnp
and
mov
add
int3
mov
cmpsb
jg
out
and
cltd
rorb
add
aas
repz
cmp
jne
or
dec
loopne
xchg
mov
adc
iret
or
cmp
inc
mov
adc
ret
jne
aaa
adc
nop
sbb
rcl
lods
shrl
xchg
mov
dec
mov
push
cmp
pop
movsb
mov
mov
jo
in
mov
mov
lods
xchg
sbb
mov
pop
push
jle
inc
cwtl
or
movaps
pop
sti
mov
and
add
cmp
jnp
push
rolb
daa
mov
pop
lods
mov
sbb
mov
adc
sbb
out
call
or
and
in
add
lds
pop
jg
xchg
sarb
xchg
ret
jp
and
fstps
pop
in
xor
ss
mov
mov
mov
outsl
lock
mov
push
or
jb,pn
and
fmuls
out
mov
pushf
testb
test
pop
add
data16
enter
popf
cmpb
clc
andb
scas
cmp
in
xorl
pusha
inc
adc
or
sub
mov
sbb
adc
lret
pushf
bound
gs
inc
ret
loope
jmp
or
outsb
into
cmpsb
push
and
inc
aas
mov
xchg
sbb
mov
testb
xchg
dec
or
cwtl
dec
std
mov
push
push
pop
jle
testl
jl
mov
add
sub
je
fiaddl
ret
lea
repz
imul
jo
pop
add
xchg
add
sbb
add
or
jns
add
adc
jecxz
dec
add
cmp
je
lcall
flds
add
add
push
push
xchg
lret
pusha
pop
push
pop
jb
add
pop
lcall
iret
enter
sub
add
mov
or
push
push
and
or
loop
or
and
rorb
lcall
pop
or
cmp
push
push
ja
int
or
push
rsqrtps
adc
add
pop
adc
fwait
sub
cmp
adc
inc
or
out
add
adc
add
imul
add
inc
push
nop
ja
lcall
repnz
adc
and
enter
pop
xchg
out
test
sbb
sbb
add
sbb
sbb
repnz
push
and
add
sbb
ror
sbb
sbb
xchg
inc
mov
jb
sbb
and
out
inc
sahf
sbb
push
push
nop
push
inc
push
pop
pop
adc
incl
jne
add
add
sub
cmp
sti
test
dec
fisubs
cmp
add
daa
push
fcmovu
and
dec
bound
out
std
out
repz
call
push
in
jno
repnz
sub
jnp
out
rol
lea
aad
cmp
cmp
enter
out
cmp
add
sbb
call
call
adc
dec
dec
cwtl
jmp
sahf
xchg
sub
or
sbb
sbb
out
pop
insb
nop
cmpsb
in
in
in
cltd
mov
in
inc
in
sahf
inc
push
nop
addr16
out
jge
jae
inc
push
sbb
pop
lock
lock
pslld
in
repnz
std
repz
push
and
std
hlt
hlt
enter
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xchg
idivl
sub
clc
clc
aaa
jb
push
clc
cltd
adc
inc
jns
seto
lock
cli
cli
in
in
iret
sti
sbb
xchg
fwait
lret
cld
cld
cld
je
fildl
mov
sub
xor
mov
xor
sbb
insl
or
jns
adc
cmp
faddp
or
dec
or
dec
lahf
int3
cmpsb
rorl
adc
shrl
pop
mov
inc
es
cs
push
jecxz
std
sti
in
enter
in
icebp
jo
mov
push
push
jns
daa
xchg
sti
out
out
in
or
in
repnz
dec
sti
sub
out
inc
mov
pop
jmp
pop
insb
nop
jmp
cltd
in
das
xchg
inc
pop
add
and
sbb
inc
lcall
push
jno
lock
cli
xchg
xchg
mov
stc
rolb
sub
repz
or
push
sar
push
pop
dec
xchg
xor
inc
pop
stc
div
not
enter
fwait
xor
add
mov
adc
stc
out
clc
cmpsb
jb
popa
cmp
pop
insb
nop
sti
sti
cltd
mov
jns
cld
orl
jmp
and
inc
xlat
dec
sub
push
xor
loop
repnz
in
repnz
imull
mov
mov
out
orb
bound
mov
pop
inc
idivl
inc
mov
and
sbb
dec
push
ljmp
shl
pop
mov
mov
mov
int
insb
out
out
jno
pop
lret
and
and
add
sbb
repnz
mov
pop
dec
pop
and
xchg
cmc
jae
xor
inc
pop
pop
dec
cmc
div
into
add
mov
repnz
push
mov
clc
adc
add
hlt
stc
popa
cmp
mov
lret
and
jno
hlt
pop
and
hlt
push
hlt
or
pushw
dec
scas
mov
hlt
idivl
jo
or
push
sti
lahf
or
adc
ds
fsubrs
xor
loope
jmp
adc
gs
scas
xrelease
mov
cmpsb
jb
repz
repz
add
pop
leave
and
push
sbb
jmp
outsb
cmc
mov
xchg
pusha
leave
mov
sub
mov
leave
and
and
add
mov
movsl
mov
icebp
icebp
js
in
rorb
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
ja
push
dec
inc
fiadds
sub
out
adc
rol
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
and
push
insl
add
cmp
inc
in
adc
dec
add
sahf
and
insl
mov
pop
inc
lret
mov
ljmp
fcmovnu
pop
push
call
push
dec
pop
mov
insb
jp,pt
ficoms
push
leave
pop
out
sahf
data16
dec
cmp
ss
int
push
lahf
push
stos
pop
int3
pop
xor
jl
out
sbb
mov
sahf
data16
pop
scas
pop
push
repnz
incb
push
or
mov
add
jl
mov
push
in
clc
loope
mov
pop
aam
lock
cs
pop
push
cld
pushf
jge
push
push
sbb
fstpt
push
lahf
xor
adc
mov
movsl
pop
loop
cmp
mov
sahf
lea
or
movsb
hlt
fdivs
fbstp
cmp
cmp
mov
ja
and
add
insb
mov
or
sub
cmp
adc
sbb
add
add
adc
int3
mov
and
dec
sub
push
sub
cli
adc
dec
sahf
jge
jp
popa
add
adc
mov
add
movl
push
add
dec
rolb
js
cltd
sahf
test
lcall
mov
mov
and
ret
and
adc
cmp
inc
jb
pop
and
and
dec
inc
xchg
pop
inc
inc
inc
inc
loopne
movsl
xor
cmp
mov
jmp
jb
lret
jp
fsts
push
imul
sub
adc
shlb
iret
mov
std
xor
in
cmp
dec
andl
sub
sub
pop
or
and
dec
add
je
pop
rcrl
sub
in
add
sbb
pop
cmp
jno
jnp
enter
add
xor
orps
sbb
push
pushf
pop
adc
dec
dec
shl
push
cmp
pop
loop
shrb
jo
sbb
xor
adc
sbb
fimull
jmp
add
repz
sub
xor
in
cmc
rcrb
or
adc
scas
data16
adc
or
insb
push
stc
aad
iret
dec
xor
lock
ss
mov
mov
inc
inc
cmp
push
jnp
mov
push
jmp
sbb
pop
imul
outsb
out
jns
mov
dec
mov
jg
ret
bound
push
mov
pop
pop
mov
inc
cwtl
ja
stos
les
mov
test
or
mov
mov
fisttps
push
cmp
sbb
dec
pop
jmp
inc
popa
cltd
nop
lods
push
js
dec
add
sti
test
sahf
fwait
add
jmp
stos
add
testb
sub
xor
push
sahf
xor
and
mov
xchg
add
mov
mov
and
hlt
mov
push
xchg
ret
leave
adc
xchg
xchg
ljmp
addb
iret
sbb
jbe
inc
enter
test
and
sbb
push
adc
mov
push
jl
cmp
decl
jne,pn
loop
addl
cmp
clc
inc
pop
xor
aaa
jbe
push
cltd
pop
idiv
mov
push
pusha
or
add
dec
mov
out
pop
mov
shlb
dec
mov
mov
xor
adc
les
cmp
jae
dec
addb
jae
pop
jbe
inc
jl
js
adc
dec
call
pop
mov
pop
sub
adc
dec
outsb
xchg
jo
jb
pop
mov
push
jg
fldcw
adc
cmp
test
or
xchg
push
mov
dec
je
push
push
jne
sub
aas
push
fidivrs
roll
pop
clc
mov
xor
adc
or
sarb
push
mov
inc
pop
mov
cmp
nop
out
das
sbb
and
cld
and
sbb
adc
cltd
repnz
mov
xor
add
sbbb
popa
call
and
xchg
imul
dec
mov
pop
sbb
shrb
adc
jbe
inc
jmp
cmp
inc
enter
ja
insl
scas
mov
or
aas
jge
xchg
and
or
push
cltd
pop
idiv
orb
xor
xchg
inc
out
sub
mov
add
jmp
or
sbb
mov
xor
lds
lret
shrl
push
test
insl
cs
in
mov
sbb
pop
lds
or
rorl
je
insb
sbb
dec
sub
sbb
sbb
sbb
cmp
dec
mov
adc
sbb
or
or
and
or
xlat
jns
jg
pop
adc
pop
sbb
sti
cmp
pop
sub
loopne
orb
scas
hlt
inc
xor
js
mov
in
movsb
loop
pushf
push
mov
sub
int3
xchg
push
cmp
out
icebp
mov
jg
insl
cmp
clc
jno
jl
fs
insl
test
xchg
jno
mov
ja
sub
dec
jo
xchg
inc
in
pop
je
dec
inc
add
dec
jne
push
fsubr
dec
mov
test
lretw
test
adc
insb
lahf
pop
movsl
call
or
sbb
xchg
push
or
enter
subl
jns
xor
or
stc
pop
push
mov
jle
adc
lcall
push
push
pushf
add
push
xorb
jp
and
adc
or
push
push
mov
pop
out
je
mov
subl
mov
cli
pop
mov
and
jge
add
push
push
lock
hlt
mov
adc
movsl
or
cmp
inc
iret
repz
push
out
call
pusha
push
mov
jp
out
cmpsl
pushl
jbe
dec
ljmp
jb
xchg
rorb
add
xchg
cmp
push
or
xchg
js
pop
cltd
sbb
mov
loop
push
cld
push
add
loopne
adc
mov
mov
sti
fs
add
push
inc
jg
dec
cld
adc
cmp
pop
mov
dec
stos
xor
mov
je
inc
inc
cmp
dec
jmp
add
movsbl
cmp
cli
orb
mov
sbb
adc
add
and
pop
ret
fidivrl
dec
je
popa
jno
inc
lahf
xor
insl
mov
sbb
mov
mov
cmp
mov
incl
fdivr
hlt
les
mov
push
mov
push
inc
sbb
cmp
inc
pop
int3
lret
negl
fwait
cmpsb
pop
sbb
lods
mov
pusha
shlb
xor
loopne
in
cmpsb
add
dec
push
push
je
dec
es
test
push
xchg
int3
push
nop
hlt
mov
addr16
test
lock
lret
test
inc
lahf
jbe
cmp
mov
dec
rorl
or
mov
fsubrp
adc
pop
jo
or
lock
mov
pop
inc
ror
dec
int
shll
sub
push
cs
and
repnz
lods
sbb
dec
movsb
jb
add
hlt
lret
dec
insb
lret
mov
or
fcoml
add
dec
js
xchg
rcrl
add
shr
mov
popa
jmp
jne
jmp
dec
or
repnz
push
jmp
das
jne
inc
ds
jmp
dec
sbb
jno
call
addr16
out
pop
mov
pop
mov
cs
and
xchg
ret
push
stos
sbb
ret
nop
push
xchg
in
dec
sbb
bound
loope
lcall
in
out
and
int
sbb
movb
ret
hlt
xor
movsb
ret
push
push
daa
jne
jl
cmp
je
push
ljmp
mov
call
inc
sbb
mov
push
int3
pop
and
adc
lret
rcrl
inc
push
jmp
cmp
jg
dec
and
or
inc
inc
int3
mov
lcall
negl
lods
ja
or
sbb
cltd
pop
jmp
sbb
add
push
out
lods
mov
xor
clc
and
out
jne
shr
es
inc
add
shl
aas
pop
and
jno
sub
add
jns
in
push
pop
inc
mov
nop
pop
jb
mov
jmp
jne
add
and
pop
push
scas
sbb
repnz
pop
push
jmp
pop
fidivrl
xor
adc
test
bnd
xchg
lock
adc
jmp
push
rep
movsl
pop
add
inc
adc
pop
fdiv
mov
mov
adc
hlt
add
rclb
loopne
dec
loope
andnps
jecxz
punpckhdq
outsb
mov
add
or
scas
insl
push
arpl
jmp
push
data16
xchg
push
jno
nop
rcrb
fs
and
mov
adc
add
sub
push
std
andb
add
xchg
mov
add
mov
cld
adc
loop
or
rorl
mov
into
ds
rorb
loopne
sbb
or
into
popa
stc
push
push
mov
es
adc
cmp
inc
push
push
mov
ret
dec
shrb
and
add
fmull
jbe
and
xor
xor
push
popf
lods
rcrl
or
movb
and
jne
push
inc
jge
aam
mov
pop
mov
rol
jae
popf
sahf
enter
adcb
int
gs
push
adcb
dec
pusha
inc
or
push
adc
xor
xchg
pushf
enter
idivb
mov
add
mov
mov
mov
add
dec
lcall
std
data16
mov
jno
sub
cmpsb
add
inc
or
or
shl
gs
add
jne
stc
push
mov
push
add
push
jl
gs
sbb
cld
arpl
imul
sub
test
xor
sysexit
shll
and
mov
cmp
je
rclb
cmp
add
dec
jge
cmp
sbb
call
std
xor
jge
fiaddl
xor
dec
loopne
sbb
ja
jbe
sbb
outsl
adc
cmp
js
mov
fistl
push
sbb
xchg
inc
sbb
adc
scas
cmp
jle
imul
inc
mov
dec
push
jg
adc
into
pop
sbb
mov
lcall
xchg
cmp
test
push
pop
add
jmp
in
pop
xor
ror
roll
sub
call
inc
fcmovbe
lock
fadds
xor
nop
pusha
dec
daa
xor
addr16
addb
jbe
push
sbb
push
jge
cli
lods
adc
jge
rorl
aaa
or
incl
icebp
or
jbe
fs
push
mov
mov
sub
cmpsb
pop
dec
lret
test
inc
mov
ret
dec
push
push
sub
inc
les
cmp
ds
les
mov
mov
jecxz
pop
dec
dec
iret
insb
push
lea
loopne
js
fucomip
out
into
mov
push
rclb
call
and
lock
add
cltd
jg
adcb
push
xor
inc
sub
test
pop
jnp
pop
aaa
pop
mov
je
add
iret
xor
stos
xor
or
pop
jo
pop
sbbb
mov
sbb
mov
ret
repz
sti
sbbb
xor
dec
xchg
xchg
cmp
push
scas
popa
loop
cwtl
xlat
mov
ljmp
inc
jg
pop
fdivrs
and
xor
xchg
add
push
cmp
or
sbb
in
jo
leave
sub
add
or
pop
jne
push
or
and
repz
or
adc
fcompl
push
call
popa
sbb
pop
or
daa
lcall
xor
adc
pop
test
or
lock
roll
mov
cmp
scas
andl
lret
pusha
jl
loop
fsubrl
pop
sub
outsb
mov
or
xor
and
mov
push
or
add
lahf
xchg
sbb
dec
push
push
inc
out
lods
cmp
add
inc
scas
mov
in
pop
test
push
movl
cmp
xor
mov
dec
lcall
fs
loope
aaa
cli
adc
loope
push
adcl
jno
or
adc
add
jo
push
push
call
sbb
dec
inc
pop
cld
pop
xchg
icebp
pusha
sub
es
stc
and
outsl
or
add
xchg
ja
or
push
or
mov
ret
xor
push
ja
lea
ja
pop
push
cs
rcrl
loopne
or
shl
or
sub
add
mov
pushf
pop
sub
mov
cmp
mov
inc
dec
jne
lea
out
mov
cmc
rclb
add
jb
call
test
mov
mov
test
dec
enter
out
push
movb
pusha
sbb
adc
outsb
ja
and
xchg
or
fidivl
push
inc
popf
xor
push
into
fnstsw
cld
ficoml
push
push
xor
mov
sub
push
cmp
mov
inc
cld
xchg
and
inc
jo
push
int
jb
cmp
push
orb
mov
je
js
movsl
and
sbb
and
add
mov
xchg
lcall
test
pop
mov
cmp
add
lea
sub
ja
lret
add
jmp
test
push
fiaddl
ljmp
add
das
push
pop
sbb
pop
and
or
or
or
jo
jg
or
ja
jo
lea
pushf
jp
andb
push
push
lea
jno
adc
andb
ficompl
sbb
mov
clc
xchg
adc
cmp
add
dec
mov
pop
insb
push
hlt
push
add
mov
outsb
fucomip
mov
sub
mov
adc
sub
fwait
or
cli
mov
cmpsb
push
sub
outsl
call
inc
in
xor
mov
inc
std
jne
fsubr
fldt
cmpsl
test
cmp
les
jne
iret
shlb
or
xchg
inc
loopne
inc
adcl
mov
add
fwait
push
arpl
lods
rcrl
jno
mov
mov
xor
nop
xchg
repz
push
lock
xor
or
add
in
in
push
jmp
xor
push
add
dec
ficoml
fdivl
dec
loope
pop
push
mov
rolb
pop
jne
mov
inc
jae
cmp
jbe
dec
mov
mov
test
dec
lea
push
cmp
leave
add
mov
inc
jo
lea
scas
cmpb
leave
xor
mov
aaa
aad
adc
jmp
loopne
sub
sti
sti
inc
and
jmp
loopne
andb
cmp
loope
inc
inc
ljmp
add
lock
add
jge
add
jb
mov
cmp
fidivrl
movl
std
daa
movsb
push
out
inc
adc
mov
inc
data16
xor
inc
dec
jne
mov
inc
mov
outsl
xchg
jl
sahf
gs
sbb
jle
mov
adc
mov
or
inc
or
inc
dec
jne
add
test
fiadds
adc
add
gs
popa
pop
mov
cmp
cmc
not
mov
inc
mov
or
ss
loopne
adc
vmovshdup
mov
xchg
or
mov
mov
scas
pusha
pop
push
push
dec
inc
mov
sbb
add
fmuls
outsl
fs
test
faddl
mov
in
test
cmpsb
push
lret
and
inc
push
pop
mov
xchg
sub
xlat
cli
jo
insb
shrl
stos
dec
ljmp
push
or
std
and
fs
push
or
ret
add
test
sti
frstor
lret
pop
sub
jmp
xor
add
mov
mov
add
out
add
ret
ss
push
pop
sbb
arpl
xchg
push
pop
ja
jno
es
jb
jmp
xchg
mov
out
nop
push
inc
and
ret
sbb
int
pop
lret
mov
and
dec
pop
movl
add
dec
rol
js
mov
in
or
push
movsb
adc
mov
adcb
mov
nop
pop
ds
sub
lret
xor
lahf
jno
sub
rcrl
sbb
sub
cltd
xchg
int3
mov
imul
shr
scas
popa
lods
mov
push
int3
push
cwtl
mov
jne
or
adc
lea
sahf
jg
push
or
push
cmpl
or
or
cmp
lds
fcmovnbe
inc
add
push
pushl
sub
dec
or
sbb
xor
push
stos
scas
mov
and
rcrb
mov
or
pop
sub
aaa
ret
inc
inc
jp
jnp
or
jo
jns
jo
adc
or
sbb
out
xorl
adc
clc
xorb
or
sbb
mov
push
push
je
push
mov
dec
or
push
shrl
dec
push
mov
or
pop
jbe
or
dec
sub
sub
jle
loope
or
sbb
jo
loope
and
add
jne
mov
jbe
jmp
push
sub
jno
and
scas
jbe
pop
mov
sbb
xchg
mov
push
push
pop
loopne
cmp
rcl
sbb
mov
fsubr
daa
mov
jns
movsb
jg
sbb
sbb
xorb
ljmp
rclb
mov
jb
cs
outsl
dec
xchg
call
mov
and
pop
popl
loope
sub
push
push
push
mov
fucomp
xor
mov
test
addl
xchg
mov
es
pop
adcb
jl
push
inc
pop
cmp
inc
jbe
loopne
test
cwtl
and
inc
cmp
pop
jmp
sti
lret
insb
push
cld
pop
inc
inc
fcoms
cmovae
xor
rolb
push
jne
movsb
xchg
adc
loope
js
imul
cmpsb
insb
in
scas
and
bound
imul
push
cmp
cmp
outsl
xorb
adc
inc
fildl
pop
ret
push
xorl
ret
dec
push
ljmp
inc
fwait
cmp
movsb
pushf
jne
pop
sub
pop
jns
adc
sbb
orl
cmp
add
xor
shlb
stc
je
or
es
adc
movsb
xchg
orb
mov
dec
adc
clc
cmp
sub
add
nop
add
lds
cmp
xchg
jne
ret
daa
jle
xor
clc
pop
sbb
jmp
sub
jp
jg
ficoms
push
mov
fsts
je
jle
or
nop
filds
sub
cmp
insl
jg
jge
shll
and
pushf
rol
lds
outsl
mov
xchg
jle
mov
pop
pushf
cmpl
into
dec
dec
adcl
pushf
cmpsb
and
daa
test
shr
mov
xchg
ja
mov
out
sbbl
mov
mov
mov
xchg
pushf
cwtl
mov
inc
loopne
aaa
inc
mov
xchg
sbb
gs
xchg
mov
xor
mov
dec
and
das
ret
inc
sbb
mov
movsb
jp
inc
sub
andl
aam
lea
and
mov
nop
jno
test
xchg
xor
sub
loopne
fsubrl
popf
aam
sarb
data16
popf
enter
mov
mov
cmc
ss
adc
frstor
hlt
aaa
dec
cld
adc
push
xchg
sub
aam
push
nop
inc
cmp
push
stos
add
jp
loope
mov
and
test
push
daa
das
pop
jno
scas
xor
loopne
jne
pop
adc
sarb
adc
inc
mov
add
lds
jle
bts
jmp
cld
pushf
xor
add
or
mov
adc
js
lahf
xchg
adc
mov
mov
hlt
lock
js
or
pop
mov
in
out
mov
pop
in
xchg
or
jns
out
push
sarb
adc
cwtl
mov
fsts
jmp
aaa
pushf
lahf
and
and
shl
lret
pop
nop
xchg
push
mov
jb
inc
lahf
adcb
nop
mov
or
jns
out
push
inc
dec
push
pop
fs
adc
ja
lahf
loopne
fimuls
nop
or
xor
shll
add
cmpsb
xchg
test
cmp
cs
push
push
call
xchg
jo
cmp
pusha
jmp
sub
pushf
subb
add
xor
jle
adc
and
cli
dec
movb
jne
xchg
mov
rorl
jge
inc
mov
push
or
jmp
movsb
stos
test
sti
add
pop
add
aam
adc
push
push
cmp
add
add
and
jp
lods
scas
and
jno
mov
xchg
outsb
aas
dec
fists
hlt
imul
ds
hlt
call
sub
je
mov
daa
and
pop
pop
and
cmc
popa
cmp
or
inc
or
je
xchg
test
jnp
xorl
add
cmp
daa
int
jl
or
movsl
or
dec
dec
push
push
jge
fcoms
pusha
jmp
xorl
inc
sub
jnp
sbb
jne
or
pop
xchg
pusha
jmp
adc
and
mov
add
add
jbe
push
imul
xor
lock
and
dec
cmp
or
ret
and
add
add
and
mov
cwtl
outsl
push
sahf
xchg
inc
xor
aam
inc
sbb
add
sub
testl
test
xor
sub
je
adc
in
movl
mov
mov
les
xor
sbb
hlt
jecxz
mov
rcrb
loopne
pop
or
es
sbb
and
inc
adc
jmp
inc
and
daa
or
les
sbb
inc
stc
or
inc
sbb
imul
insl
adc
sbb
jl
ds
add
adc
es
xchg
mov
inc
xchg
mov
or
inc
arpl
cmp
orb
ficompl
pop
xchg
push
or
or
xchg
jmp
inc
loopne
and
int3
movb
sub
es
add
inc
xchg
shlb
pop
push
or
add
shrb
pop
push
inc
mov
mov
add
lcall
addb
push
dec
or
fisubs
negb
jecxz
and
push
js
je
test
and
roll
inc
cltd
adc
cmpsb
out
pop
out
jbe
push
inc
enter
daa
xchg
add
or
in
ret
xor
inc
jle
clc
cmp
cmp
pop
test
or
cmp
dec
ds
mov
nop
clc
dec
xchg
xor
jle
push
push
jne
xchg
jo
mov
dec
ljmp
jns
insl
adc
push
sub
pop
add
stos
inc
insb
cli
add
add
add
add
mov
and
sub
sbb
ret
xlat
cmp
xor
inc
xchg
sbb
pusha
xor
fs
jp
mov
add
testb
inc
jecxz
mov
sbb
add
add
jmp
push
xchg
cpuid
incl
mov
lcall
ret
cmpl
ds
mov
pop
out
jg
rolb
mov
mov
loope
sahf
lret
mov
pop
push
jbe
sti
rorb
popf
in
mov
mov
push
jbe
popf
fdivrs
xor
test
jecxz
push
add
pop
ja
mov
xchg
adc
sbb
xchg
in
leave
mov
mov
test
in
or
jle
cmp
add
and
dec
aas
movsl
mov
and
mov
outsb
and
lea
rcrb
jl
cmp
rcr
test
mov
cvtps2pd
test
sbb
push
sar
pop
mov
push
es
push
inc
sti
mov
dec
outsb
lea
cs
lret
movsl
aam
clc
fsubrs
mov
sub
dec
or
sub
int
ss
sub
je
sbb
pop
addr16
scas
pushf
pop
or
add
pop
cs
add
out
loope
int
nop
cli
xchg
sub
adc
pop
movsb
or
fdivs
aas
mov
add
sub
push
imul
adc
lret
or
ja
movsl
xor
rcrl
mov
mov
hlt
and
dec
jns
or
movsl
hlt
nop
je
or
xor
insb
je
lock
mov
data16
insb
pop
icebp
cmpsb
jo
pusha
sub
and
in
in
ss
or
xor
mov
cmp
and
xor
movsl
jbe
int3
push
incb
fs
or
fwait
adc
pop
outsl
cmc
xchg
data16
sbb
js
test
xlat
je
mov
and
cmc
and
jmp
lret
pop
in
fisubl
rorb
push
neg
icebp
xor
cmp
adc
ficoml
cltd
or
add
mov
ret
add
adc
rcll
je
mov
jl
into
scas
dec
nop
and
jae
dec
testl
jbe
imul
filds
add
dec
and
in
or
fmuls
mov
addr16
xor
in
sub
insl
push
sahf
or
in
jno
inc
inc
loop
stos
into
push
insl
cmp
sbb
movd
int3
negl
sub
push
dec
dec
lret
or
out
adc
adc
pushf
jbe
std
je
mov
push
mov
add
mov
aas
push
and
outsb
dec
sti
add
jno
mov
mul
jge
lcall
sub
enter
mov
mov
cmpsb
and
cmp
xor
js
jecxz
mov
lea
out
pop
cmp
js
clc
push
sbb
ret
cli
test
gs
sub
loop
aad
sub
add
addr16
mov
pop
sbb
cmp
je
test
or
sbb
push
stos
pusha
outsb
ljmp
jae
rorl
fistps
xor
adcb
mov
pusha
pop
add
orb
adc
dec
push
jb
xchg
jb
lds
test
pop
jo
sub
fsubrs
aam
add
ret
jge
jp
jne
mov
jne
mov
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
data16
push
mov
xor
int
pop
xor
sbb
mov
mov
call
cld
adc
sti
cmc
scas
jnp
fidivrl
sub
fwait
adcb
or
ret
and
in
out
stc
lcall
mov
cwtl
inc
call
in
sub
nop
cmpb
jne
jne
stos
mov
push
push
push
movsb
ret
hlt
outsb
mov
nop
cmp
out
addr16
or
mov
out
fdivrs
mov
adc
push
pop
data16
or
hlt
sub
in
push
lret
roll
adc
inc
gs
popf
stos
fbstp
inc
push
data16
fidivrl
or
xchg
cltd
jmp
aaa
int3
je
cltd
xchg
lock
or
sbb
adcb
push
shlb
inc
xor
pop
fsub
nop
pop
fimull
mov
or
sbb
dec
jg
cmp
lret
pop
mov
or
jne
mov
testl
sbb
push
push
inc
movsb
jle
add
push
js
test
cmp
call
lods
sub
xchg
clc
sahf
add
mov
dec
jmp
add
xchg
sub
inc
cmp
bts
je
inc
or
adc
cmpb
jne
mov
movb
inc
jmp
movmskps
push
cmc
push
mov
loope
or
insb
sbb
cmp
inc
inc
inc
int3
jle
fdiv
sub
push
int
lret
test
sub
push
jmp
sub
icebp
int
push
sub
push
test
sahf
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
mov
int
dec
fdivrl
lea
int
add
or
add
mov
push
mov
xor
push
mov
or
nop
mov
jg
aaa
cmp
mov
push
rcll
nop
popa
jle
sbb
mov
push
mov
xchg
lock
cmpsb
mov
xchg
pushf
loopne
push
and
add
inc
mov
cmp
adc
adc
mov
or
in
ret
sub
movsb
cmp
mov
movb
push
js
sub
mov
ret
add
dec
repz
fdivrs
push
or
push
pop
dec
imul
or
loopne
js
adc
adc
adc
adc
or
xchg
jp
idivb
insb
or
add
push
lea
dec
or
mov
or
cli
fmulp
roll
movsl
test
xor
jbe
push
lcall
mov
push
add
push
mov
mov
add
push
push
mov
mov
cmp
fcoml
xlat
sbb
pop
popf
or
add
cwtl
ret
out
ud2
out
xchg
lds
push
es
ret
cwtl
andl
pop
les
sub
loope
jge
add
cmp
arpl
jmp
push
xchg
adc
jne
jecxz
push
push
and
xor
imul
adc
imul
sbb
push
mov
jb
movsb
lea
add
notl
pop
adc
ss
cld
out
lds
or
or
adc
enter
and
dec
clc
sub
mov
fdivl
rclb
or
faddl
loopne
xchg
sub
cld
shr
mov
imul
mov
add
push
or
popa
jecxz
xchg
outsb
dec
xor
mov
cli
mov
inc
add
ret
loop
pop
add
je
cli
add
cmp
jbe
push
pop
mov
loopne
sub
dec
or
subb
jae
daa
lods
decl
dec
add
shll
pop
mov
lods
adc
mov
lea
xor
pop
cmp
pop
add
push
or
out
add
dec
rcrb
add
icebp
cltd
push
or
mov
dec
pusha
jmp
clc
and
div
jnp
add
jne
and
sti
add
push
cmc
push
loop
pop
cmp
jecxz
pop
stos
mov
jl
and
js
lcall
out
sub
cmp
or
and
aaa
pop
or
xor
sbb
push
mov
push
jle
shll
xchg
push
pop
dec
add
mov
movaps
add
nop
fs
push
or
nop
addr16
int3
inc
cmpsb
sarb
adc
loope
ret
pusha
mov
mov
inc
mov
mov
sub
ds
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
or
ret
inc
xor
xor
jb
or
inc
enter
and
test
cwtl
and
adc
fdivr
and
lsl
scas
jp
push
inc
sti
divb
or
sbb
inc
cmp
sub
dec
inc
adc
jne
or
xor
and
pushl
push
push
js
xchg
push
mov
inc
orl
fsubr
in
mov
adc
adc
jge
inc
negl
loope
sub
cmp
sar
insl
or
mov
or
in
das
mov
pushf
pop
mov
mov
adc
jne
data16
outsl
push
push
mov
mov
addl
inc
mov
les
dec
sbb
mov
test
stos
cmp
data16
pop
or
mov
pushf
and
xor
add
fwait
orl
inc
imul
addb
pop
mov
lea
xorl
rolb
push
fucomip
stc
mov
imul
inc
and
rol
clc
pop
fiaddl
adc
dec
jne
or
ror
lret
loopne
in
sbb
popa
cltd
out
lea
mov
insl
jl
sub
shr
adcl
clc
dec
clc
jp
sbb
ret
mov
or
adc
jne
fst
mov
push
add
sub
sbb
iret
dec
jne
je
clc
add
pushf
add
cmp
push
call
out
icebp
cmpsl
mov
sahf
pop
mov
inc
mov
push
shlb
dec
dec
inc
jne
or
add
pop
jge
and
not
and
into
xchg
mov
adc
ror
xor
sbb
sub
or
mov
push
out
xchg
mov
dec
cld
or
icebp
jl
mov
and
pushf
jle
cmpb
fnstcw
repz
sarb
xchg
stc
add
scas
add
mov
int3
push
pop
xor
clc
addb
pop
inc
add
sbb
clc
rolb
push
cs
es
add
cmp
nop
dec
or
int
add
push
jns
push
nop
jge
sub
add
ljmp
adc
pushf
sar
dec
mov
ljmp
hlt
add
pop
into
lea
int3
mov
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
sahf
and
int
inc
mov
sub
jl
xchg
mov
int
or
das
outsb
in
cmp
inc
dec
insb
pop
xor
push
sar
add
jp
movsb
pop
pop
ret
inc
xchg
movsl
pop
pop
cmp
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
pusha
pop
xor
adc
dec
out
dec
cmp
icebp
mov
xchg
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
ja
or
mov
ret
jp
ret
pop
and
inc
cmp
pop
inc
add
push
push
push
jge
and
out
cmp
push
jo
lcall
inc
lods
stos
dec
or
out
fldcw
push
nop
cmp
and
and
js
decb
xlat
aam
adc
add
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
xor
mov
mov
and
addl
lcall
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
inc
ret
or
fwait
jno
mov
inc
or
jp
rcrl
jle
mov
and
jne
mov
push
pop
sbb
inc
test
inc
push
pushf
mov
mov
out
icebp
sbb
pop
lock
add
dec
add
xchg
sbb
or
ror
push
xchg
cmp
push
cmpl
and
mov
decb
jp
add
xor
repnz
jmp
xchg
cmp
jp
mov
dec
pusha
dec
bound
dec
push
and
push
clc
into
xor
cs
sub
jp
fidivrs
mov
inc
mov
or
mov
or
je
mov
or
jge
push
or
dec
cld
or
pop
adc
inc
or
or
mov
push
aas
inc
imul
or
sub
adc
cmpl
mov
push
iret
scas
and
lods
test
lea
and
daa
mov
sbb
jge
add
sbb
xlat
mov
inc
add
xchg
icebp
loopne
repnz
cmp
and
out
add
pop
jb
or
xorl
das
add
add
or
xor
push
mov
add
aas
mov
fs
cmp
mov
mov
es
or
inc
out
adc
in
add
es
pop
jg
and
test
movb
pop
repz
shlb
cmp
push
adc
push
jnp
int
cld
in
addl
jbe
sbb
push
mov
xor
or
insb
or
and
addb
and
or
int
fcoms
loope
nop
adc
xchg
mov
adc
jbe
dec
lahf
fistps
xchg
inc
add
mov
cmp
add
sti
pop
mov
mov
sti
lods
fnsave
push
adc
loope
adcb
jl
or
push
push
rcll
pop
mov
jne
mov
std
pop
sbb
mov
iret
sbbl
adc
mov
push
or
pop
mulb
mov
cmpsl
pop
sti
jne
loopne
sub
mov
sub
lahf
dec
dec
jl
insb
int3
push
mov
imul
inc
je
hlt
inc
fcmovbe
jge
push
int
sbb
pusha
sbbl
popa
loop
add
pop
add
pop
dec
adc
xchg
or
xchg
stos
mov
nop
jg
or
cwtl
sbbl
jnp
jle
pop
sub
mov
xchg
push
push
js,pt
popf
call
jp
test
popa
push
sbbl
jmp
shlb
das
sbb
fldenv
adc
jge
jmp
movzwl
add
aad
in
int3
mov
lods
in
je
scas
pop
add
cmp
mov
pop
jns
rorl
sbbb
cmc
imul
test
mov
mov
push
aam
or
repnz
pop
ja
movsb
sarb
out
mov
aas
iret
into
dec
xor
sbb
xlat
add
jl
inc
xchg
fisubl
lret
pop
add
lcall
mov
loopne
mov
sub
rcrl
into
ror
jge
fs
ljmp
mov
and
pop
xor
mov
rorb
push
inc
jmp
fistpll
insb
jne
xor
push
stos
or
mov
and
mov
adc
pop
inc
cmp
xor
cmp
leave
inc
or
push
xchg
lret
jmp
int3
les
xorb
std
push
push
imul
movsb
jns
xor
ret
in
shll
lea
lcall
adc
add
sbb
cmpsb
repnz
push
lock
dec
sbb
inc
cmpsb
cwtl
add
dec
gs
push
and
lods
push
and
dec
xchg
lret
lods
dec
lods
dec
neg
cmp
daa
daa
lret
and
adc
scas
dec
outsl
mov
call
sbb
mov
sbb
and
int
add
mov
mov
stos
push
stc
xchg
lret
add
shrb
xchg
movsb
shr
and
jns
mov
test
push
hlt
xchg
lahf
push
xor
shlb
sbb
xor
xor
call
add
lods
mov
ret
add
or
les
cltd
in
rorb
xchg
in
and
xor
lahf
les
les
test
xchg
or
popa
mov
sbb
cld
enter
cld
mov
mov
sysret
movsb
cmc
or
int
sub
int
adc
fidivs
jns
in
aaa
mov
adc
mov
mov
cmp
sub
jbe
push
pop
lea
inc
sub
or
cltd
js
lock
lret
arpl
add
scas
pop
clc
xchg
ret
push
or
sub
push
mov
inc
or
fwait
leave
and
xchg
rcll
xor
dec
xchg
mov
sub
std
or
sbb
add
and
dec
cmpsl
or
mov
push
xlat
xor
adc
loopne
mov
or
lea
mov
outsb
sub
jnp
dec
bound
pusha
adc
push
popa
inc
mov
fstpt
mov
xor
test
xchg
add
jge
push
or
and
jl
lcall
arpl
pop
les
jne
jecxz
es
mov
stc
add
aaa
inc
cld
push
cs
mov
aaa
nop
add
cmp
jmpw
inc
adc
pop
dec
call
int3
ja
push
aaa
mull
or
imul
or
int3
push
lret
cmp
sub
rolb
imul
cli
sti
cmpsl
mov
mov
adc
dec
test
in
insl
std
lret
adc
cmpsb
xor
jg
imul
mov
push
pop
sub
sbb
dec
mov
insl
ljmp
dec
add
push
or
xorl
add
lcall
fldl
rorl
push
or
and
out
push
mov
add
das
and
jns
insl
leave
pop
jmp
jo
push
insl
neg
rorl
in
mov
xchg
dec
xchg
sub
das
sub
xchg
lods
imul
dec
dec
je
add
and
sbb
sub
and
lea
jbe
mov
cmp
pop
cmp
pop
or
sub
jl
ret
add
fwait
add
les
inc
test
cmp
adc
xchg
adc
lock
repnz
push
in
xchg
xlat
pop
loopne
adc
faddl
push
fcoms
fsubrl
fstl
push
and
push
xlat
sbbb
das
and
inc
lock
push
jp
cmp
iret
repz
cmpsl
xor
repz
and
add
xor
sbb
jge
adc
sbb
and
call
mov
mov
xor
jmp
fdivs
ds
xchg
adc
lea
loope
call
inc
clc
add
test
mov
pusha
enter
xchg
jmp
inc
add
inc
fdivrs
push
add
push
jmp
jmp
mov
clc
push
fmull
lcall
add
inc
jp
cmp
test
jne
mov
push
adcl
push
sbb
cmp
xor
or
movsl
sub
mov
or
pop
rolb
rcll
jne
fisubrs
and
lods
xchg
mov
repz
add
lret
inc
jno
in
mov
shlb
mov
int3
push
pop
cs
call
cmp
mov
mov
lods
std
xchg
mov
xchg
shl
inc
into
jne
xchg
sbb
movsb
sbb
inc
jecxz
out
clc
fs
jno
sub
add
incb
xchg
out
mov
lret
and
jne
dec
sbb
scas
mov
loopne
sar
lea
notb
push
inc
loope
and
adc
daa
add
adc
mov
xchg
adc
rolb
cs
stos
adc
std
bound
fdivrs
or
ret
clc
pop
ja
movsbl
mov
xchg
lret
xchg
std
lods
cmc
shlb
adc
add
ret
mov
enter
xor
dec
xor
xor
or
add
push
push
xor
add
mov
cld
cmp
fdivl
insl
pop
push
stc
or
jecxz
pop
push
in
or
mov
cs
jb
call
jge
mov
data16
in
dec
je
or
inc
loop
cli
fbld
cwtl
arpl
pusha
lds
jne
inc
sub
pop
aaa
sub
pop
and
ss
outsl
xchg
lea
inc
jne
repnz
inc
xor
in
in
xchg
testb
push
cmp
push
int
dec
movsl
test
js
movnti
pop
lods
cmp
xchg
ret
xor
jbe
push
leave
jae
mov
repz
lea
mov
jg
lcall
mov
out
xor
call
xchg
jns
jmp
push
add
jo
js
mov
mov
icebp
xchg
hlt
adcb
sti
push
inc
cmp
lea
stc
popf
in
mov
jmp
fwait
dec
mov
cwtl
add
cmpb
sbbb
cmp
jg
mov
addr16
mov
xchg
push
sub
adc
enter
ret
cmp
jns
daa
mov
scas
jbe
out
add
push
jmp
insl
xchg
inc
cld
and
repnz
sub
xchg
sub
enter
mov
mov
loopne
push
push
cmp
or
dec
pop
cli
cmp
into
je
divl
add
mov
inc
mov
jns
cmp
std
mov
in
jecxz
xor
mov
sbb
shll
pop
lock
aaa
addr16
lret
das
lock
fdivr
fdivl
xor
xchg
lret
lds
out
pusha
jmp
ret
test
push
add
rcl
mov
je
pusha
gs
mov
mov
std
call
sarl
mov
rol
dec
mov
jbe
gs
push
mov
fdivrs
bound
xor
daa
les
push
xor
std
neg
ret
pop
lds
sub
and
push
lds
lea
mov
mov
cmpb
lea
cmpl
push
push
mov
pop
mov
mov
lret
sbb
cli
imul
shrl
add
cmp
aad
adc
test
int
bnd
pop
push
rol
sbb
add
xor
cmpsb
inc
pop
ja
sub
mov
mov
dec
ss
cmp
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
aaa
imul
test
mov
std
inc
sbb
mov
cmp
adc
aad
push
popa
mov
mov
or
mov
test
out
hlt
sub
test
sub
je
xchg
mov
add
mov
lcall
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
scas
adc
mov
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
enter
lret
sub
movsl
lock
sub
js
inc
aad
xor
je
lods
bound
in
je
mov
movsb
adc
divl
loopne
lds
inc
lret
jne
cmp
cmp
cwtl
cmovge
lahf
lds
cmp
mov
fdivr
jl
add
das
push
dec
pop
push
xchg
jno
push
je
dec
cmp
adc
sbbb
adc
sahf
nop
enter
das
sbb
mov
xchg
and
push
test
mov
stc
cmp
roll
xor
xor
test
inc
jns
or
and
adc
sarb
fidivs
and
fsubr
mov
ret
push
xor
pop
and
popl
xor
loope
and
pop
in
and
add
cmp
lea
mov
insb
loopne
cmpsl
xor
inc
in
push
or
lcall
adc
sub
cmp
ja
add
lods
repnz
leave
and
add
or
lock
arpl
pop
pop
or
fisttpll
xchg
cmc
ds
or
jo
lock
mov
dec
fisttpl
push
or
fdivrs
xor
add
nop
adc
clc
pop
test
int3
test
scas
movsl
call
daa
adc
mov
dec
push
push
or
and
int3
test
xlat
adc
and
xchg
inc
fisttpll
mov
mov
mov
lods
pop
xchg
repnz
or
cmpsb
outsb
in
xchg
cltd
inc
mov
xchg
test
xchg
xchg
xchg
dec
pop
xchg
test
adc
jns
xchg
pushf
inc
enter
push
jb
mov
lret
call
mov
dec
dec
jb
and
cmp
daa
loopne
xor
lret
mov
and
daa
xchg
cmc
loope
xor
pop
cmp
fwait
mov
or
xchg
xchg
lea
xor
gs
mov
leave
jmp
pop
pop
push
enter
and
or
lret
rorb
mov
inc
push
nop
xchg
pushf
and
adc
xchg
outsb
lods
xchg
loopne
dec
mov
push
or
fs
mov
inc
imul
dec
pop
inc
aaa
into
inc
or
gs
dec
es
pushf
movsb
xchg
nop
add
aas
dec
or
leave
adc
scas
nop
or
dec
adc
pop
add
xor
xchg
nop
nop
nop
leave
adc
push
pushf
lods
cwtl
adc
lods
lods
or
inc
mov
test
dec
push
addr16
je
movsb
data16
jmp
sti
xchg
outsb
dec
mov
roll
out
cmp
cmp
dec
enter
ss
je
sub
xchg
shr
push
orb
mov
xor
jg
adc
sub
inc
push
pusha
mov
lea
xchg
adcb
in
inc
or
lods
and
mov
or
sarb
jg
cmp
test
sbb
shrb
lret
cmp
and
inc
add
test
mov
jge
dec
rep
ss
notl
pop
mov
sub
add
addr16
push
add
scas
dec
rcrl
dec
inc
xchg
xchg
or
add
add
repz
adc
inc
xor
fwait
int
outsl
push
push
dec
sub
jl
adc
push
and
icebp
dec
push
out
std
push
pop
outsl
inc
or
jbe
sub
sbb
ja
jo
inc
imul
or
loopne
or
cmp
ss
add
lret
loopne
clc
or
adc
pusha
into
and
faddl
call
sub
sbbb
into
and
sub
aaa
cld
fidivl
shrl
shll
rcr
aam
fsts
clc
in
lock
rep
les
push
jge
jne
sbb
adc
cmp
push
or
push
inc
cmp
mov
xchg
gs
jmp
pop
jae
mov
pop
add
in
cld
vcvtps2pd
jne
xchg
insl
in
mov
loopne
push
addl
int3
and
pop
push
or
mov
pop
icebp
daa
add
icebp
sub
jne
mov
fsubl
jecxz
xor
lea
pop
sub
cld
cmp
sbb
shll
mov
xchg
push
mov
and
push
add
cmp
sub
xchg
dec
repz
adc
test
add
iretw
into
ds
push
pop
cmp
or
mov
cld
push
leave
lahf
cld
push
mov
jg
test
jno
test
je
imul
mov
cmp
je
pop
pop
mov
aaa
mov
sbb
or
inc
pusha
or
xchg
mov
addr16
jle
popa
add
sub
mov
sbb
cmpsl
cmpsb
and
stos
bound
nop
lock
fcoms
jae
orb
fidivrl
scas
add
hlt
mov
or
mov
das
cmp
xchg
xchg
sbb
mov
dec
jl
mov
mov
and
inc
push
movsl
lods
cmp
jmp
add
adc
sbb
and
fabs
loope
add
fwait
mov
sub
jp
and
dec
loope
sbb
out
ret
or
push
stc
in
push
add
je
hlt
daa
clc
inc
push
inc
push
cwtl
push
sbb
jae
testl
es
ss
or
adc
inc
jno
les
or
jne
jo
cs
dec
lods
mov
mov
cmpsb
pop
push
enter
fiadds
or
pop
xchg
out
or
push
shl
adc
fs
popf
jns
fldcw
push
inc
shl
cmp
fcmovnbe
ljmp
div
pop
dec
adc
inc
mov
jb
cmp
or
cmp
or
xor
aas
iret
dec
lret
and
adc
or
fimull
mov
lret
add
in
add
stos
xor
jbe
lock
psllw
pop
jmp
stc
push
adc
mov
movb
jle
mov
inc
stc
mov
cmpsl
mov
push
jno
dec
adc
gs
lds
adc
push
and
cmpsl
sahf
push
mov
push
lea
xor
testb
add
sbb
or
clc
out
sub
adc
add
sbb
mov
mov
xor
jge
jae
sub
dec
bound
adc
std
popf
jne
mov
or
xchg
arpl
adc
adc
add
xor
jecxz
mov
dec
rorl
cmova
dec
sbb
sbb
gs
cli
mov
inc
cmp
scas
mov
jle
jne
lea
jb
mov
outsl
xorl
aas
push
in
lods
push
mov
jae
push
sub
test
into
push
inc
outsb
ret
cmc
jne
dec
sti
jnp
addl
push
incb
and
adc
adc
dec
or
pusha
fcomps
or
add
dec
adc
sbb
prefetchwt1
mov
inc
mov
fs
push
adc
sahf
jl
shll
inc
mov
xor
adc
cld
sbb
subb
mov
ss
sub
pop
push
sbbb
lock
mov
sbb
push
stc
mov
or
jo
repz
xor
push
sub
pop
mov
lret
push
add
iret
add
add
xchg
data16
add
pop
sbb
adc
jo
jmp
stos
add
push
push
add
ret
lea
imul
mov
aas
mov
cli
cmp
or
xchg
sbb
inc
lock
mov
sbb
sbb
pusha
clc
xor
xchg
adc
int3
inc
cmp
sbb
stos
add
test
or
mov
mov
loopne
mov
sub
loopne
dec
jle
pop
and
gs
add
xchg
mov
add
les
mov
inc
shrb
ret
shlb
or
add
push
addb
shlb
popa
call
or
cld
iret
jle
sub
lea
fdivs
adc
or
lret
inc
jecxz
add
stc
xor
pop
sarl
jo
and
sub
and
in
add
les
inc
mov
ss
out
cmp
je
ss
roll
shlb
pusha
aas
aam
xchg
pop
addr16
outsb
or
and
sub
cld
pop
test
and
and
scas
or
pop
out
add
std
push
sub
jp
fidivs
fs
dec
int
dec
mov
ljmp
add
setl
push
jmp
repnz
add
lret
xor
hlt
xchg
fidivl
jge
mov
sub
fsubrs
pop
inc
mov
fmull
outsl
mov
cmp
roll
enter
daa
dec
sbb
lods
insl
pop
xor
adc
mov
pop
bound
inc
xorb
push
push
dec
pop
cmpb
sbb
pop
es
dec
or
or
hlt
cs
jb
inc
sub
or
ds
icebp
pushf
lahf
push
push
mov
sbb
cmp
imul
inc
mov
push
jle
push
cs
daa
push
xor
enter
or
pop
dec
add
mov
xor
dec
push
and
ds
test
rol
mov
jbe
cmpl
mov
mov
test
mov
push
sub
add
imul
or
dec
push
or
loopne
xor
test
stos
add
mov
mov
fcoml
sub
and
cmp
cmpb
sbb
in
movsl
xlat
add
nop
test
repz
lock
faddl
pop
and
leave
and
outsb
mov
or
or
cmp
pop
inc
add
and
loop
push
outsl
add
jle
cmp
repz
nop
pop
adcl
cmp
test
cmp
sahf
lret
xchg
cmp
mov
fs
add
dec
inc
lock
leave
push
sbb
dec
bound
insl
mov
mov
rorb
push
push
xor
adc
sub
movsb
push
cmp
shl
loope
imul
and
push
je
sub
pop
xor
xchg
in
cmp
xor
into
orl
push
jmp
iret
test
sti
or
lock
jns
je
push
or
fstps
nop
pop
jne
nop
mov
lock
jmp
xor
mov
mov
adc
or
fcomps
or
lock
outsb
sub
sbb
dec
ja
sti
jmp
mov
mov
imul
or
push
aaa
addl
sarl
idivl
push
add
ret
push
in
addb
mov
inc
adc
sbb
or
je
add
std
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
ja
add
cmp
jge
mov
mov
pop
mov
mov
fucomi
push
xchg
fisubrs
pop
and
fs
push
dec
jmp
test
popa
push
insb
rorb
pop
in
cmp
aaa
xor
adcb
mov
imul
sbb
add
sub
lret
adc
das
orb
sub
data16
mov
repz
dec
mov
or
sbb
jecxz
jmp
push
mov
cmp
bound
in
cmp
and
cmp
jbe
aad
aam
and
rol
mov
cmp
iret
aaa
dec
jb
divb
xchg
xchg
xchg
ja
mov
add
xchg
movsl
test
or
adc
jns
or
mov
rcll
push
push
push
test
mov
jmp
test
mov
loopne
cmp
jbe
add
sbb
out
into
jge
push
jmp
movsl
sahf
mov
mov
lret
adcl
ja
lret
mov
or
xor
push
inc
and
mov
popa
sub
repz
imul
in
daa
adc
sub
mov
gs
divb
add
jp
and
sbbb
xor
out
mov
movl
repnz
push
add
adc
fsubrs
mov
jo
xchg
cld
mov
inc
and
or
cli
jmp
incl
dec
or
xchg
pop
mov
push
fs
mov
adc
sub
mov
or
inc
mov
daa
and
lret
sbbb
test
mov
add
inc
dec
xor
jge
xor
loop
ja
cmp
outsl
loop
scas
ss
jmp
xor
add
inc
adc
add
sbb
inc
inc
pop
je
ficompl
sahf
jb
je
dec
test
fwait
and
add
jl
or
std
inc
cltd
shr
outsb
adc
add
add
pop
cld
pop
push
pusha
ret
inc
or
test
fsts
clc
cmp
cmp
leave
inc
adc
addb
fstpl
xor
inc
jmp
lcall
add
adc
mov
ljmp
cwtl
mov
mov
test
cmp
xchg
inc
push
insb
xor
lea
mov
mov
dec
or
inc
sub
sbb
sbb
mov
cmp
add
loopne
inc
stos
sbb
hlt
aas
jae
mov
jbe
dec
shl
push
pop
pop
mov
push
ss
insl
lds
dec
stos
pusha
xchg
jge
les
dec
mov
or
push
add
mov
movsl
cmp
pop
pop
loope
mov
mov
inc
adc
and
out
dec
cmp
and
push
and
pop
push
jne
in
fdivl
cmp
pop
dec
inc
inc
or
jne
repnz
cmp
push
sar
add
nop
dec
xchg
mov
shrl
movsl
test
cmp
mov
jb
cld
cwtl
ljmp
inc
pop
mov
jmp
sbb
dec
test
add
inc
es
jp
sbb
or
sbb
sti
or
xor
sbb
int
cmp
or
push
ss
sub
mov
mov
xchg
pop
adc
sbb
and
dec
icebp
and
add
inc
fsubrs
dec
lea
fbstp
add
or
or
or
push
xor
or
cmp
sbb
fsubr
inc
mov
in
js
jo
gs
dec
xchg
enter
pop
mov
inc
mov
or
pop
loop
fs
hlt
stos
out
mov
add
pop
sbb
push
movsb
loopne
aas
xor
sbb
and
repnz
dec
andb
add
shll
into
fnsave
inc
cmp
add
fld
adc
xchg
jle
add
push
push
mov
and
inc
dec
bound
das
dec
push
dec
push
mov
add
xor
inc
sar
and
shl
add
flds
out
inc
add
rcr
in
and
jns
fildll
or
inc
adcl
pop
pop
jo
push
sub
xor
mov
gs
addb
push
or
cmc
pop
shlb
ret
shl
lea
mov
inc
mov
in
push
aaa
xor
mov
mov
jne
negb
adc
sub
push
cmp
and
or
int3
mov
decl
cmpsl
pop
loope
pop
notb
imul
fsts
sub
lock
mov
inc
dec
out
mov
arpl
sahf
or
lods
push
icebp
shlb
xlat
cs
ss
pop
dec
jns
jle
xor
push
xchg
movsb
loope
lock
movsb
cmp
mov
std
cmp
mov
or
insb
daa
cli
loopne
or
xor
not
push
rol
xor
enter
xchg
ret
enter
add
adc
jb
das
outsb
xchg
pop
xchg
dec
add
ret
sub
rcrl
mov
pusha
mov
dec
dec
add
mov
push
gs
das
in
mov
shll
xor
jle
mov
cmp
mov
insb
bound
jae
clc
cmp
push
in
mov
mov
mov
sar
das
add
add
jmp
pushl
movsb
sbb
push
push
mov
lcall
add
ds
xchg
lea
mov
add
mov
push
enter
inc
inc
adc
jl
mov
test
xor
pop
in
dec
mov
lds
daa
rorl
jae
mov
repz
test
call
mov
or
mov
loop
dec
jecxz
adc
push
aaa
jp
iret
push
jne
add
xchg
mov
jno
imul
or
dec
cmp
jb
nop
mov
lods
jmp
dec
cs
xor
sub
mov
enterw
add
push
sub
and
pop
sbb
lahf
ljmp
lods
movsl
insl
test
xor
call
add
enter
inc
adc
out
mov
insl
lock
cwtl
push
mov
cmp
jo
push
jle
ds
and
cwtl
cmp
add
cmp
add
and
mov
mov
and
dec
mov
push
pop
cmp
mov
aas
add
mov
inc
dec
jmp
add
test
and
in
jp
fimull
ret
ret
adc
sub
sbb
repnz
pushf
sbb
je
xor
add
sub
lahf
xor
mov
sub
adc
fsubr
push
and
xchg
and
push
outsl
push
test
xlat
jge
std
xor
cmp
jne
sub
adc
sbb
add
fcomps
repnz
jae
adc
nop
outsb
popf
mov
sarb
jmp
ss
cmpsb
push
fcomps
rcrl
sub
xor
aas
pop
push
push
push
jge
aaa
or
mov
enter
sub
ret
jl
adc
mov
push
push
imul
mov
dec
mov
cmp
jg
inc
jmp
sub
hlt
pop
jbe
jp
mov
imul
or
jge
aas
sbb
or
push
ret
push
cmp
rcr
fsubs
popa
add
adc
xor
jle
inc
push
mov
pop
mov
push
adcb
sbb
mov
cmp
jle
jne
push
ja
cld
and
shr
mov
adc
inc
push
pop
and
or
xor
jmp
movl
lea
movl
arpl
and
dec
sub
sub
mov
add
pusha
pop
add
and
push
add
pop
or
mov
popf
adc
sbb
in
sub
pusha
imul
dec
inc
loopne
pop
aaa
mov
stc
sub
mov
and
and
nop
sti
sbb
xchg
pop
cmp
push
fs
adc
xchg
mov
add
jb
shl
rorl
mov
inc
mov
and
push
sub
xor
mov
xchg
stos
and
enter
xor
fs
add
mov
scas
push
pushl
cli
lods
xchg
fwait
js
xor
xchg
sarb
and
push
hlt
out
jmp
adc
lods
jmp
sahf
cmpsb
or
mov
sub
mov
das
adc
and
pop
test
imul
jmp
xor
or
mov
dec
andl
add
ret
add
jl
mov
and
or
push
xor
test
imul
sub
and
cmp
nop
lret
xor
adc
add
loope
lock
push
jl
push
rclb
add
mov
or
add
add
sub
dec
insb
mov
jg
aas
add
mov
outsb
cwtl
daa
sbb
pushf
sbb
or
cmp
cmp
add
jecxz
adc
and
push
push
adc
xor
dec
inc
out
aas
dec
sahf
adc
sahf
push
out
pop
jg
int3
dec
xchg
jne
push
pop
jl
push
or
mov
sub
outsb
cwtl
push
call
rcrl
lods
or
jo
cmp
fneni(8087
sbb
xor
and
lock
or
push
xor
mov
and
sbb
dec
dec
loope
sahf
addr16
lea
sbb
sbb
fdivs
aaa
inc
inc
aam
pusha
xor
clc
lahf
sbb
or
push
in
or
outsl
mov
enter
jmp
pop
cmpsb
sbb
add
cmpl
and
mov
ja
inc
or
sbb
je
fidivrl
pusha
xor
cmp
shlb
cmpsl
je
add
mov
adc
push
cwtl
cmc
bnd
lock
out
pop
rcrl
insl
pop
mov
into
cmp
rcl
cmpl
out
cmpl
inc
push
mov
movsl
and
jge
push
mov
push
ret
or
lods
add
lock
rol
add
jp
or
testl
pop
cmp
adc
or
addb
aas
push
dec
cmp
mov
mov
or
cld
sbb
inc
movsl
inc
loop
cmp
and
push
sbb
movsb
cmc
repnz
xlat
cmp
shll
loope
xor
sbb
into
push
repz
dec
outsl
mov
xchg
je
fstps
xchg
imul
adc
jg
add
adc
or
filds
push
jmp
cmp
or
and
fidivl
je
mov
and
push
mov
cmp
icebp
and
sbb
shl
add
add
sbb
nop
dec
popa
sub
add
xchg
pop
mov
pop
adc
in
jae
sub
fld
adcl
jmp
hlt
add
xorb
sbb
adc
divb
test
pop
mov
sbb
push
add
add
push
push
sub
adc
pushf
sbb
fdivrl
sbb
xchg
jb
aaa
icebp
cmp
mov
icebp
enter
adc
cli
inc
cs
sbb
mov
dec
sub
popf
pusha
dec
xor
jns
pop
inc
mov
add
fimull
and
sbb
lea
sbb
pop
cmc
and
pop
dec
adc
ret
ss
mov
xor
pop
sbb
sub
and
push
jb
movsw
ret
mov
inc
cmp
jae
push
cmp
jl
loopne
dec
sub
jg
js
adc
or
ss
add
lea
jns
jle
pop
lock
jne
clc
mov
inc
ja
mov
popa
cld
into
push
ljmp
mov
cmpsl
mov
repnz
inc
add
cmp
in
sbb
dec
dec
xor
or
xor
push
insl
mov
icebp
cmp
scas
mov
push
std
mov
jae
add
push
mov
mov
dec
incl
sbb
adc
mov
sub
lods
mov
shll
pop
cmpsb
cli
xchg
xlat
imull
xor
jne
jmp
fcmovnb
out
scas
in
rcll
mov
mov
adc
dec
out
mov
lock
jo
dec
dec
xchg
pop
jle
adc
inc
jecxz
mov
lock
or
je
sub
inc
mov
clc
subl
push
ss
out
push
inc
push
or
mov
push
jle
loope
test
push
add
mov
sbb
dec
inc
push
insl
mov
adcl
sbb
stos
rorl
aam
jo
jl
hlt
mov
and
outsb
out
insb
aam
and
and
inc
add
pusha
jbe
add
stos
lock
sbb
decl
icebp
fistl
cmp
fstl
orl
fcompl
mov
hlt
pop
sarb
ret
loopne
shl
out
or
shlb
sbb
pop
nop
shll
inc
or
jo
scas
pop
and
mov
pushf
and
inc
popa
aam
xchg
or
faddp
pop
or
sub
add
push
ljmp
and
sub
stos
ds
adc
scas
shll
lock
push
xchg
push
jnp
es
lret
ljmp
mov
ljmp
xor
lret
aad
out
or
mov
mov
mov
cld
incl
je
cmp
adc
cmp
jb
testb
and
inc
or
les
outsb
add
rcll
mov
dec
jmp
inc
movb
cmp
cmpsb
xor
cmp
jb
cmp
push
push
push
jo
sub
push
or
push
sub
in
push
inc
push
jnp
add
jmp
das
jecxz
and
negb
xorl
or
add
push
push
out
jge
scas
mov
mov
cld
jle
in
outsb
pop
adc
pop
mov
pop
es
jmp
mov
or
cld
cmp
push
inc
pop
pop
cltd
test
inc
sbb
and
push
push
stos
popa
test
push
mov
xchg
mov
bound
mov
orl
or
fsubrs
outsb
je
xchg
cli
adc
sub
lea
lea
or
loop
mov
int3
cmp
in
jbe
mov
sbb
jmp
fs
insb
dec
sub
enter
pop
push
cld
and
mov
mov
cmc
dec
jbe
icebp
cwtl
mov
dec
arpl
adc
mov
pop
cli
clc
inc
std
adc
pop
mov
dec
arpl
jecxz
sub
sbb
push
rolb
mov
hlt
aaa
sbbb
rcrl
dec
inc
sbb
jbe
cmp
pop
inc
cmp
xor
out
jle,pn
xor
push
push
push
mov
push
flds
cmp
in
sub
sub
addl
adc
in
jbe
ss
in
in
sub
xor
int
loope
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
enter
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
ss
je
popa
dec
mov
add
inc
or
lock
inc
or
rcr
lds
clc
adc
fwait
or
cld
adc
or
sbb
or
nop
add
or
mov
or
insb
scas
nop
pop
and
jo
add
pop
dec
xchg
test
cmp
sbb
mov
inc
dec
jne
adc
or
cmp
lds
xchg
mov
mov
fnstcw
inc
push
xor
adc
adc
icebp
sub
or
imul
mov
dec
cmp
push
mov
add
xchg
inc
add
dec
int3
test
xchg
rorl
pop
repnz
lret
add
push
aas
or
or
fiaddl
jne
pop
sahf
mov
and
inc
or
call
fcmovu
pop
pop
cmp
outsl
adc
jle
cmp
inc
push
and
push
push
je
add
scas
icebp
xor
add
inc
ficomps
push
or
cmp
fmuls
in
test
push
adc
dec
pop
int3
xor
sbb
lcall
pusha
lcall
sbb
cmp
je
push
fs
or
jmp
sub
and
xlat
test
addl
add
pop
adc
in
mov
adc
lahf
repz
add
jb
dec
add
int3
and
push
add
push
add
arpl
push
push
cltd
outsl
mov
fwait
nop
xor
cmp
xor
mov
pop
push
cmc
push
adc
cmp
inc
inc
xor
addl
fmull
jmp
jbe
cmp
adc
dec
loop
adc
adc
and
xor
loopne
and
in
int
add
mov
rolb
lcall
push
popf
cmp
rclb
loopne
sbb
or
or
adcl
cld
inc
loop
mov
adc
and
pop
sti
in
and
cmp
addb
and
popa
mov
xor
icebp
add
mov
psubb
loope
add
pop
mov
pop
push
xor
dec
inc
add
xchg
sbb
dec
test
sti
inc
dec
mov
or
jmp
fwait
mov
sub
cmpsb
cmp
mov
inc
daa
loopne
jns
inc
jle
sub
repnz
pop
add
xor
ss
rcl
stc
or
sub
mov
or
jecxz
clc
push
adc
test
xchg
jo
add
add
cmp
and
out
lock
imul
sar
mov
or
xchg
mov
jp
mov
push
and
iret
inc
xor
shlb
adc
add
xor
shlb
xchg
loope
inc
insb
push
dec
mov
bound
cs
inc
pushl
dec
ja
out
mov
jns
push
sub
dec
dec
dec
push
add
cmp
xchg
cvtdq2ps
jae
and
outsb
xchg
sbb
and
inc
inc
mov
mov
or
or
fcmovb
mov
sub
or
cmp
adc
push
hlt
mov
cmp
add
and
jo
stos
pop
add
cmp
add
ss
push
mov
mov
ds
push
mov
xchg
adc
cmpsl
cmpsb
movl
pushf
pop
ss
dec
inc
lea
rorl
xchg
push
es
orl
lea
mov
jnp
iret
les
sbb
xchg
data16
shlb
dec
fisttpl
dec
sub
sub
sarl
cmp
test
mov
xor
add
int
push
test
cmp
add
add
rcrl
mov
cltd
cmp
sbb
pusha
ss
jne
movd
cmp
shll
add
inc
int
je
outsl
push
push
jmp
inc
movsl
mov
dec
pusha
push
lock
fmul
aad
add
pop
cmp
push
mov
sub
rol
fisttps
cmp
sub
lahf
jne
adc
push
sysenter
sbb
push
je
and
xchg
sbbb
call
neg
popa
mov
and
jbe
ret
jmp
xchg
mov
andl
mov
aaa
int3
push
cmp
scas
jnp
cmp
mov
inc
cmp
cmpsb
icebp
jbe
aas
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
ja
adc
add
sbb
daa
jmp
sbb
mov
dec
decl
xor
in
repnz
sahf
sbb
cmp
cmp
int3
adc
inc
inc
lods
push
adcl
mov
inc
inc
sbb
jns
dec
fisttpl
sub
add
add
nop
lret
inc
aas
push
stos
loopne
mov
pop
xchg
push
int
stc
pop
xchg
cmp
add
pop
mov
xchg
push
xchg
sub
repnz
or
sbb
push
in
in
lods
adc
scas
sub
fwait
dec
pusha
sub
mov
std
or
lods
xor
pop
rcll
sub
test
faddl
je
add
jmp
or
das
shl
and
inc
cli
mov
pop
or
lea
xorb
lret
adc
dec
sub
mov
ljmp
inc
cmp
jne
divl
fidivrs
cmp
cmp
mov
mov
fbstp
popf
lea
mov
jg
movsl
loopne
das
or
or
cmp
pop
and
test
mov
sbb
orb
setb
xlat
test
xor
add
sub
mov
dec
pop
and
xchg
jno
mov
cmp
push
test
clc
mov
scas
inc
clc
or
mov
xor
aaa
arpl
sub
xor
dec
adc
xor
out
jmp
popa
and
cmp
imul
sbb
ljmp
test
mov
adc
inc
add
inc
sub
outsl
repz
push
pop
adc
add
jge
mov
xor
dec
movsl
fdivrl
sbb
cwtl
mov
push
mov
test
mov
repnz
and
pop
rolb
push
pop
mov
push
mov
out
mov
ficoml
cli
sbb
inc
jnp
mov
mov
xor
orl
addr16
jo
aam
cmp
cli
inc
xchg
cmpb
push
inc
push
xor
dec
cmp
mov
mull
cmp
into
sub
fstl
inc
orb
dec
or
dec
push
ja
push
pop
notl
sbb
fldenv
mov
orl
gs
adc
imul
mov
andl
xchg
fnstcw
ja
dec
cmp
mov
jge
addr16
pop
test
mov
inc
add
adc
sub
imul
push
jne
lret
mov
mov
push
mov
pop
adcb
xor
lods
pop
lods
les
jecxz
pop
mov
cmp
mov
xchg
or
cs
push
xor
pop
and
add
sub
lcall
lock
push
push
ret
js
cmp
stos
mov
dec
cmp
insl
sub
sub
push
and
inc
inc
jmp
cmp
shlb
test
mov
js
add
js
pop
sbb
push
add
into
movb
push
popa
add
pushf
dec
and
dec
test
mov
clc
add
inc
lret
adc
and
inc
xchg
adc
and
sub
push
lret
jmp
or
test
data16
dec
ret
add
push
dec
test
mov
or
xor
jecxz
mov
mov
loop
jle
pusha
insb
or
jl
xor
mov
xchg
ret
adc
dec
cwtl
jmp
pushf
pop
pop
movsl
cmp
and
pop
add
adc
sbbb
push
gs
xchg
pop
add
fwait
jnp
cmp
rcrl
cmp
inc
mov
loope
push
cmp
loope
in
sub
shrl
loope
or
inc
mov
sub
mov
stc
add
and
sub
cmp
adc
arpl
in
mov
mov
das
mov
dec
pop
mov
push
sbb
mov
das
push
aam
inc
movsb
mov
testl
ret
aad
inc
sbb
clc
mov
mov
sbb
lea
icebp
mov
xor
and
mul
sbb
dec
jbe
sub
cmp
mov
popl
mov
cmp
into
or
dec
jnp
repnz
das
adc
xlat
or
inc
lret
shll
into
jl
push
jle
and
mov
out
jmp
or
or
add
movsl
and
pop
dec
cmp
mov
inc
adc
loopne
or
and
les
sbb
insl
jmp
pop
in
add
inc
and
jmp
xchg
add
inc
adc
outsl
and
jne
and
icebp
insl
dec
or
push
dec
or
ror
inc
out
gs
xor
xchg
mov
call
pop
xlat
dec
add
sbb
add
and
adc
inc
push
repz
add
mov
xor
and
je
push
popf
ds
cmp
or
mov
mov
testl
jecxz
dec
repnz
rclb
add
loopne
adc
push
int
rorb
fstpt
mov
mov
test
push
mov
pop
add
lock
sahf
dec
cmp
mov
mov
test
and
add
sbb
repnz
mov
adc
nop
and
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
sbb
test
mov
add
add
jns
xchg
test
add
and
xlat
out
push
sbb
mov
fld
shll
or
mov
mov
jmp
pop
jbe
sti
mov
add
std
or
jmp
inc
and
mov
add
jl
and
jecxz
aaa
xor
pushf
jge
add
or
imul
jmp
loopne
xor
je
ljmp
jge
je
sbb
loope
flds
and
mov
pusha
mov
pusha
loope
pop
sub
mov
push
mov
pop
push
jns
adc
fnstsw
cmp
pop
cmp
sbb
je
push
addr16
inc
testb
push
es
adc
test
add
add
test
fisttps
incb
das
call
or
sub
inc
jmp
sbb
mov
imulb
pop
testl
insl
jmp
adc
jb
jnp
lods
xor
push
and
inc
add
adc
add
inc
flds
fmuls
and
or
pop
xor
sbb
repz
sub
sbb
and
cwtl
cmp
inc
fistl
pop
sub
xchg
inc
jl
ficomps
popa
adcb
ret
mov
mov
sti
lret
mov
mov
inc
aam
xchg
jmp
sbb
push
aaa
sbb
mov
and
xchg
fcompl
sbb
in
push
inc
add
les
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
int3
in
mov
div
add
xor
sbb
pop
cmc
jnp
jp
clc
jecxz
je
mov
fstpl
mov
cli
imul
or
or
sbb
inc
xchg
inc
add
sub
repnz
dec
push
jb
enter
add
pop
xor
out
dec
test
not
insl
in
sbb
jg
adc
orl
push
inc
lock
jle
adc
fnstcw
push
sahf
jmp
pop
movsb
addb
add
xchg
and
sbb
or
and
inc
lods
dec
adc
add
cmp
movsb
mov
outsl
jle
push
add
addr16
jb
add
and
push
lock
test
xchg
pop
push
push
adc
or
out
loopw
push
test
xchg
or
and
mov
add
mov
add
stos
icebp
es
mov
je
inc
loop
or
out
sbb
or
adc
jg
fisubrl
mov
and
and
pop
jp
cwtl
subb
pop
sbb
mov
dec
sbb
xlat
add
mov
cmp
ffreep
mov
gs
mov
or
mov
cmp
or
or
adc
push
mov
cmp
rclb
rorb
lret
jnp
outsb
scas
adc
mov
mov
out
xchg
es
loop
mov
add
add
mov
inc
sbb
or
pop
mov
sub
add
sub
or
add
or
popa
sbb
xor
dec
jb
fnstsw
adc
jns
mov
xor
data16
pop
std
mov
mov
sbb
pop
cld
push
popa
mov
data16
and
sub
cs
mov
cmpps
sahf
stos
add
movsl
push
lcall
jg
or
popf
mov
in
gs
xchg
cmpsl
pushf
call
add
ljmp
and
push
dec
adc
cmp
add
into
aaa
jnp
fsubrs
mov
das
pop
mov
cwtl
sbb
push
push
xor
test
cmpsl
push
dec
in
dec
pop
or
mov
sub
icebp
sbb
das
mov
or
or
stos
fidivs
or
push
out
mov
adc
jne
mov
mov
cld
push
add
sbb
sub
call
ljmp
lock
jb
aad
push
fstpl
sbb
adc
mov
imul
loop
inc
flds
or
push
and
dec
sbb
mov
or
cld
mov
adc
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
inc
dec
out
jo
push
cli
mov
je
mov
loopne
test
cli
call
push
mov
xchg
and
and
xchg
jo
test
and
clc
inc
outsl
ljmp
adc
add
push
mov
cmp
jle
add
sbb
or
std
sbb
fidivrs
push
popa
inc
shlb
les
movsb
negb
xchg
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
ja
mov
lahf
stc
mov
jnp
add
and
xorb
es
enter
imul
out
add
jo
dec
fwait
nop
push
add
gs
stos
mov
xchg
mov
fwait
xor
or
mov
xchg
ror
lods
inc
inc
fwait
cmovno
imull
fildl
sarb
adc
enter
lret
push
push
jno
mul
push
or
push
lods
add
add
add
pop
xor
pop
push
aam
inc
inc
adc
adcb
lcall
cmpl
inc
inc
clc
inc
adc
mov
pop
adc
push
xchg
or
mov
mov
loopne
and
dec
push
dec
push
cli
add
jecxz
rcr
add
aas
sub
push
xchg
inc
in
andb
sti
sub
aas
jb
mov
mov
pop
test
jne
or
mov
mov
mov
adcl
pop
pop
and
lock
bound
aam
xor
std
lea
push
loop
add
xor
pop
jo
xchg
pop
dec
jns
dec
xchg
loopne
lea
dec
fidivl
inc
shl
pusha
cmp
or
mov
aam
loop
rolb
adcl
push
hlt
add
repz
push
cltd
insb
pop
and
mov
inc
and
into
loopne
insb
sub
dec
jbe
dec
mov
add
jmp
or
jb
cmp
mov
pusha
sub
adc
mov
incb
jae
shl
daa
dec
mov
adc
jns
sbb
cwtl
sub
movsb
pop
jp
test
and
or
ss
ficoms
inc
mov
clc
jo
insl
sti
cmp
dec
dec
stos
inc
and
sahf
adc
or
xor
dec
xor
cmp
rorl
call
mov
clc
out
and
push
add
not
in
popf
je
or
pop
ds
les
jbe
jne
shl
inc
cmp
jl
test
mov
pop
fabs
xchg
sub
sarb
je
mov
xchg
lcall
lds
mov
dec
add
mov
hlt
test
leave
adc
data16
sub
sub
movsb
lea
dec
add
cli
cmpps
cmp
cmpsl
fs
push
pop
xor
pop
adc
mov
jns
inc
lock
dec
and
add
xor
jecxz
jmp
inc
mov
xor
sbb
push
imul
inc
jo
push
inc
mov
adc
lock
or
jl
pop
or
gs
mov
push
into
out
mov
jl
mov
out
add
add
and
jle
sbb
lds
jge
inc
add
mov
shl
out
rolb
hlt
push
lock
add
add
mov
sbb
hlt
push
in
loop
dec
mov
jne
bound
pop
pop
cmpl
sub
adc
and
or
adc
sub
mov
adc
push
add
adc
sub
or
sahf
pop
add
adc
add
mov
push
nop
adc
jl
lcall
lahf
and
in
xor
push
adc
cmpsb
imul
test
mov
pushf
mov
sbb
jne
imul
adc
jo
mov
mov
sub
or
cmp
lock
jne
inc
jmp
mov
sub
or
xchg
add
mov
mov
int3
mov
sub
inc
rcrl
stc
or
push
dec
jmp
fs
in
push
nop
push
mov
ss
add
call
nop
pop
dec
mov
add
into
jmp
add
adc
jmp
andl
jmp
cmpsl
mov
lods
jbe
mov
add
call
cli
bound
cmp
jle
adc
sub
pop
imul
sub
sbb
pop
out
test
mov
jne
jbe
push
lods
jo
dec
and
sub
shll
sub
mov
dec
add
mov
jae
cmpsl
movsb
cmp
mov
ret
dec
inc
fisttpl
fwait
sbb
push
pop
jge
pop
mov
mov
pop
and
movsb
jne
dec
dec
jae
and
sbb
jmp
mov
out
add
mov
call
aaa
mov
lods
out
push
sub
mov
or
orl
cmp
push
and
inc
mov
xor
mov
jo
test
mov
and
call
mov
shrl
add
xor
fldenv
pop
cmp
cmp
testl
cmove
fdivp
pop
push
les
push
addl
jmp
cld
mov
jge
push
sbb
and
sub
das
rolb
or
push
popa
mov
jecxz
add
pushf
jmp
push
cwtl
pop
scas
mov
icebp
xor
push
mov
dec
adc
or
hlt
cmpsb
cmpsb
fimuls
std
popl
pushf
xor
add
fadds
fwait
cmpsb
mov
push
sbb
fcompl
cmp
aad
mov
sbb
pusha
lods
fdivrs
ret
jge
jle
fsubr
in
mov
xor
jne
adc
fidivl
out
les
subb
jge
mov
mov
mov
adcl
cmpsl
popf
add
mov
inc
mov
jb
mov
dec
mov
mov
scas
dec
or
inc
pop
sub
xchg
mov
push
xor
and
and
and
jne
and
shlb
andl
adc
lret
lahf
sbb
ja
push
push
sub
ja
mov
pop
mov
out
push
mov
movb
testl
jne
enter
les
mov
cmovbe
jne
inc
or
fwait
add
sarb
xor
hlt
int3
adc
shufps
test
rcrl
or
push
in
imul
mov
movsb
push
adc
lock
lahf
into
push
mov
dec
ja
lods
add
and
push
rorl
subl
lcall
inc
xor
stc
jg
add
push
or
aaa
lret
or
sbb
dec
add
inc
nop
shll
hlt
insb
and
or
shr
add
rcll
xorb
into
and
pop
or
adc
inc
mov
les
jno
push
add
notb
mov
mov
test
ss
fcom
insl
dec
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
push
aam
daa
fwait
aam
shrl
das
int3
and
mov
mov
push
ja
aam
loope
or
sar
mov
insl
xchg
push
add
fisubl
in
cmp
pop
es
add
in
fiadds
push
call
test
mov
pop
jle
jb
push
daa
fmull
jo
dec
ja
orb
sbb
or
add
sbb
mov
lds
push
push
into
jmp
scas
push
xchg
shlb
sbb
jae
jno
jnp
rclb
movsb
int3
pop
test
inc
add
push
int3
xchg
jne
push
lret
das
jo
ficomps
xchg
add
negb
xchg
daa
sbb
movups
testb
mov
inc
mov
lock
inc
hlt
xchg
xchg
add
and
stos
push
add
jns
cmpsl
xor
les
cmp
or
int
lods
mov
mov
addr16
adc
jmp
inc
add
test
pop
jmp
icebp
cmp
add
pop
cli
adc
push
mov
xor
fcoms
mov
adc
mov
pop
cmp
inc
pop
in
push
in
stos
or
test
push
xchg
xlat
sahf
mov
xchg
adc
inc
cs
or
packssdw
ss
cmp
je
or
out
mov
incl
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
add
out
add
pusha
arpl
test
mov
inc
jp
ret
lret
jae
fcmovb
pop
xchg
outsb
fisttps
les
xor
call
pop
adc
or
lahf
mov
std
cmc
dec
add
pop
push
and
jnp
cs
dec
rolb
notl
pop
jno
leave
imul
mov
and
sbb
or
testb
sub
add
inc
jnp
mov
and
jbe
xlat
mov
shlb
jbe
or
add
cmpsb
xchg
xchg
leave
ret
mov
push
push
pop
je
psubb
cmpsl
lahf
push
cmpl
out
clc
add
mov
fbld
loop
aas
sub
movb
lea
shll
add
push
ficoml
scas
and
mov
es
sbb
jp
sahf
pop
add
add
jmp
mov
add
add
movsb
or
dec
pop
xor
pop
js
mov
or
ret
or
dec
inc
out
adc
jns
les
sub
pop
xchg
push
ficomps
cld
xor
push
or
pushf
push
or
sub
add
dec
scas
add
jne
scas
mov
shrd
push
movsl
xor
push
pop
dec
mov
inc
jle
xor
add
inc
cmp
inc
test
aam
sbb
sbb
push
add
addb
jmp
ja
push
ret
jbe
lcall
enter
push
pop
mov
aam
sub
adc
inc
jb
rcrb
mov
or
cmp
xor
enter
dec
xchg
adc
push
push
sbb
inc
xchg
and
nop
ss
gs
inc
enter
add
jge
cmp
repz
sarl
push
add
and
ljmp
dec
cwtl
inc
sbb
dec
push
mov
adc
and
jecxz
imul
pop
xchg
mov
jmp
jo
ret
out
adc
xchg
add
cli
fsubr
inc
and
lea
pop
adc
inc
add
mov
cmpl
addl
and
pusha
push
clc
mov
or
sar
out
pop
ss
pop
test
cltd
cmp
push
add
enter
inc
mov
or
lds
das
testb
lock
inc
enter
mov
sub
loopne
js
dec
jecxz
push
push
mov
cmc
jg
dec
dec
inc
xor
leave
and
add
mov
and
adc
sti
or
je
cmp
pop
or
insl
dec
fwait
mov
jg
add
sub
loopne
lock
ret
daa
xor
or
and
shll
cmp
sahf
jnp
add
decb
insb
ficoms
scas
test
movb
cmp
ss
sbb
sub
and
or
mov
adc
xor
inc
and
sub
dec
xchg
fnstcw
push
sub
adc
insb
dec
adc
dec
push
movswl
loopne
je
and
and
data16
mov
pop
shlb
cmp
add
mov
add
add
mov
shrd
push
jle
cmp
ss
imul
clc
mov
xlat
data16
or
cmp
xchg
stc
inc
ds
leave
add
jmp
xchg
clc
sub
mov
adc
add
push
insb
incb
push
push
and
pop
inc
rolb
js
sbb
adc
mov
out
and
pop
and
sub
or
mov
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
dec
jmp
shll
add
dec
jl
xor
cmp
not
mov
hlt
jmp
cmpl
jb
not
xchg
xchg
mov
dec
inc
dec
inc
repnz
mov
or
or
add
daa
pusha
pop
xchg
push
jne
push
add
adc
jae
stc
ficoml
add
sub
mov
mov
cmp
ljmp
mov
dec
les
loop
and
pop
psubsb
jb
add
mov
mull
sub
insb
mov
cwtl
or
mov
mov
push
lock
adc
xchg
je
inc
and
sarb
mov
jne
and
or
jl
loop
ror
popa
push
mov
pop
push
movsb
add
xor
sbbb
mov
and
adc
xor
cmp
pusha
xor
push
sub
sub
je
push
cs
dec
inc
shl
jne
cmp
icebp
or
cmp
inc
loopne
lcall
xchg
sbb
inc
rorb
add
mov
and
icebp
adc
push
insl
push
jmp
insl
add
cld
aaa
hlt
or
cld
jl
jle
mov
mov
pop
inc
or
mov
inc
pusha
rol
push
shr
loop
mov
mov
sbb
jns
ds
jle
gs
clc
mov
je
data16
mov
cmp
inc
popa
je
mov
ss
je
dec
out
xor
mov
jmp
dec
inc
push
adc
sarl
loopne
push
or
loopne
hlt
adc
cmp
or
mov
xor
ds
mov
sti
mov
fldl
fdivl
fmull
insl
push
pop
clc
and
or
mov
push
lods
mov
inc
dec
bound
mov
adc
movl
xchg
pinsrw
adc
xor
dec
inc
ss
mov
dec
inc
sbbb
push
inc
ja
or
clc
jmp
repz
aaa
jbe
mov
cmpb
jne
jp
sbb
and
aad
or
dec
in
rcll
sub
add
hlt
sbb
inc
dec
das
stos
xchg
movsl
hlt
push
jp
cmp
fmull
dec
mov
dec
jo
pop
call
lahf
dec
imul
lahf
movsl
mov
xor
push
sub
and
hlt
popf
xchg
pop
rcrb
or
and
xchg
or
add
pop
sbb
bound
sub
mov
aaa
sub
push
les
push
mov
jbe
sub
je
test
jl
sahf
movsl
xchg
cs
inc
mov
pop
add
adc
jmp
insl
out
lds
mov
fld
lret
jns
pop
lret
test
push
or
push
data16
xchg
push
pop
dec
push
mov
xor
jno
pop
add
adc
push
jp
pop
lea
push
cli
shlb
and
or
dec
mov
aad
hlt
inc
pushf
xor
add
fadd
nop
mov
mov
add
mov
jge
pusha
jg
push
adc
into
dec
mov
inc
cmp
add
xor
jl
or
int
movsl
inc
pusha
mov
fnstcw
xor
cmp
mov
mov
inc
icebp
mov
gs
in
nop
add
inc
and
mov
lret
xchg
movsl
pop
xor
or
push
outsl
pushw
jmp
or
jmp
testb
je
push
ljmp
adc
roll
cltd
add
negl
lret
aad
int
jae
push
xor
and
sbb
test
adc
add
out
xchg
popf
mov
lret
rclw
es
andb
mov
outsl
push
sbb
adc
mov
das
inc
jne
jp
lea
mov
fnstcw
add
add
into
push
jne
sub
add
sbb
push
shrl
dec
fs
sbb
lods
add
mov
jecxz
push
push
pop
sbb
adc
addr16
push
test
mov
pusha
js
cwtl
cld
hlt
call
push
xor
add
or
pop
les
movb
or
sbbb
xor
cmp
fadds
ret
imul
loopne
cmp
jge
notl
cmp
cmp
push
sbb
push
ret
lcall
iret
sbb
das
add
jle
or
dec
fiadds
arpl
and
xor
cmp
sbb
inc
jmp
arpl
dec
lods
bound
xor
and
adc
in
es
stc
inc
inc
test
data16
sub
sub
aam
sbb
push
xchg
es
outsl
jle
lcall
popa
insb
inc
pop
mov
jmp
test
clc
push
dec
mov
xor
lcall
jne
lea
pop
jmp
adc
not
cmp
inc
in
adc
and
push
sub
xchg
inc
add
push
clc
ja
dec
jmp
jge
dec
push
loope
mov
enter
adc
adc
push
dec
jle
mov
popa
adc
lods
cld
sub
leave
clc
push
xchg
mov
dec
movsb
cmp
pop
jbe
and
jmp
cmpsb
mov
adc
mov
sbb
sysexit
outsl
ret
int3
jp
ljmp
inc
jmp
test
adc
leave
jae
add
bound
fimuls
nop
adc
sub
adc
movsl
sbb
sbb
test
loope
pop
fmull
movsb
lea
and
adc
pop
push
and
pop
mov
mov
xchg
add
lret
and
setno
pop
mov
inc
mov
orl
mov
out
pop
dec
push
subb
sbb
sbb
cmpsb
ja
sti
and
sbb
or
cs
adc
test
adc
xchg
cmp
jge
adc
or
sbb
rcl
inc
pop
push
push
jbe
rolb
xchg
mov
xchg
adcl
mov
mov
cmp
lea
or
dec
add
lahf
es
add
or
fistpll
in
shr
shr
mov
loopne
or
mov
add
add
or
bound
scas
push
andl
xor
mov
cmp
add
fildl
pop
shrb
sub
bound
mov
adc
shlb
fnstcw
inc
xchg
mov
xchg
sub
lret
add
or
into
dec
testl
cli
mov
add
stos
or
mov
inc
add
push
xor
mov
and
stos
dec
mov
dec
fmuls
fmul
cmp
adc
out
incb
or
arpl
outsb
and
pusha
inc
pop
mov
call
adc
outsl
shl
pop
notb
or
shl
andl
adc
aad
leavew
jp
test
dec
sbb
clc
stos
sbb
cs
sub
or
test
or
adc
push
mov
push
or
add
cmpsl
xchg
fcompl
adc
or
icebp
sub
mov
cmp
xor
xchg
jne
sbb
push
add
jg
pop
call
cmpsl
push
fldl
jb
cld
sub
jne
add
call
scas
push
ljmp
adc
dec
and
xchg
cli
xchg
dec
cmp
add
and
sub
dec
movsl
cmp
jp
frstor
push
jle
push
addl
push
fwait
sub
cmp
orb
jle
ret
rolb
pop
cmp
cmp
leave
inc
outsb
sub
dec
cmp
lock
jl
cmpb
jl
xor
cmpb
sub
je
insb
xor
stos
mov
scas
push
or
xor
xlat
push
roll
scas
cwtl
stos
push
adc
call
push
push
mov
push
push
and
pop
nop
iret
ds
inc
pop
lea
adc
fprem1
and
lret
jne
aam
pop
or
cmp
sub
sub
pop
test
inc
adc
dec
dec
clc
mov
shr
dec
dec
add
jnp
mov
and
enter
pushf
rolb
out
or
test
adc
lret
aad
out
push
fcmovu
add
shrl
repnz
add
je
shlb
sub
or
push
xor
add
mov
or
xchg
dec
xorb
sub
lret
push
in
jne
clc
cmpsb
pop
movsw
xor
or
inc
xor
sbb
movsl
xchg
adc
dec
es
push
jmp
inc
or
mov
inc
test
ret
enter
adc
inc
inc
div
fdiv
fiaddl
cltd
in
ficomps
sbb
inc
sbb
dec
or
sbb
inc
or
mov
push
inc
and
fsts
adc
inc
push
test
sbb
loope
enter
inc
or
dec
jns
fwait
dec
jne
add
popa
daa
pop
pop
pop
adc
pop
mov
xchg
out
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
js
pop
or
outsb
ljmp
and
cld
je
rolb
sub
jb
or
add
ljmp
xchg
pusha
push
xchg
mov
ja
pop
pop
add
mov
adc
rsqrtps
es
sbb
xor
xchg
dec
rorb
gs
int
or
into
jbe
and
mov
jns
aas
mov
dec
adc
pop
daa
movsl
push
bound
mov
add
movsb
sub
push
mov
pop
iret
das
popa
cld
pusha
loop
xchg
sbb
mov
and
push
es
mov
adc
inc
insl
test
adc
add
rcl
ret
mov
or
cmc
lods
insl
xchg
cs
int3
test
cld
and
test
mov
dec
pushl
dec
fidivs
lock
cmp
jg
in
jge
lds
xor
adc
leave
jne
hlt
fdivs
adc
testb
pop
fsubl
fists
or
je
jg
test
mov
mov
mov
sbb
jg
out
es
mov
je
mov
and
push
cmp
ja
add
cmp
adc
in
das
push
inc
cmp
jne
shll
leave
adc
ds
adc
xor
idivl
pop
sbb
sbb
dec
add
push
ljmp
adc
inc
ja
push
add
rclb
mov
mov
mov
pop
inc
or
add
sbb
mov
ret
jmp
neg
je
iret
push
sbb
push
addr16
mov
subl
add
pop
add
or
sub
and
shll
imul
mull
xor
std
add
or
mov
and
aad
dec
aaa
pop
add
inc
js
jg
movsl
add
pop
sbb
mov
jno
cmp
popf
push
lcall
test
lret
sub
xor
inc
addr16
xchg
sub
orl
test
xor
or
in
or
add
push
cltd
push
add
push
fcmovb
adc
inc
sbb
inc
add
movb
pusha
sub
lret
in
rorb
jle
dec
mov
push
sarl
repz
rcl
aad
insb
ds
repz
fcomp
fstpt
lahf
or
mov
xor
add
push
or
xor
into
or
or
xchg
sub
adc
enter
add
mov
sub
insb
mov
dec
push
add
push
inc
push
add
fistpl
aas
jne
mov
push
add
inc
divb
in
mov
call
pop
idivl
faddl
cmp
das
or
idiv
sbb
push
push
mov
bound
ret
pop
adc
push
test
sbb
pop
insb
mov
imul
or
pusha
fbstp
lea
imul
lea
sar
inc
test
js
js
mov
push
les
or
fisttpl
mov
mov
out
loop
shll
mov
pushf
sub
cmp
adc
sub
outsl
push
adc
mov
invd
cmpsl
mov
pop
pop
inc
pushf
or
add
jb
inc
dec
adc
dec
stos
lcall
movb
xor
xchg
add
imul
and
lea
pop
sbb
subl
mov
ja
xor
sti
mov
mov
push
push
pop
mov
add
pmulhuw
ljmp
loopne
inc
or
and
or
outsl
pushl
push
sub
pop
repz
test
rolb
push
mov
lods
out
push
sbb
lea
dec
xchg
pop
sbbl
or
cwtl
add
test
dec
push
rcrb
add
movsb
sub
cmp
push
mov
sub
movsb
sub
div
push
addl
mov
jge
jl
mov
inc
mov
rol
call
outsb
mov
cmp
ret
outsl
jne
pop
mov
enter
add
xchg
loopne
cmp
sub
hlt
rorb
push
push
push
lret
pop
or
mov
mov
je
sub
inc
lods
ss
shrl
cmpl
bound
ficoms
jmp
dec
addr16
lret
inc
lods
lock
push
mov
testb
nop
idiv
cli
inc
cli
notb
mov
push
lcall
movsb
add
ljmp
adc
push
jnp
insl
gs
sbb
adc
cmp
lret
test
rolb
dec
push
clc
dec
xchg
xchg
or
mov
leave
cmp
mov
rol
jecxz
clc
mov
shll
idivb
sbb
sbb
lock
mov
add
not
fidivl
or
pushw
sub
sbb
clc
out
jge
bound
push
xchg
mulb
adc
dec
out
mov
rcrl
xor
mov
jge
into
or
jne
andb
ss
inc
arpl
fldl
aam
adc
dec
cwtl
mov
jle
mov
adc
or
call
out
xor
push
cmp
cld
lea
fisubl
mov
bound
pop
insl
mov
mov
lods
rolb
cmp
daa
loop
add
scas
xor
sbb
movb
and
sbb
sbb
orl
push
in
sub
or
jge
or
cwtl
mov
lock
jmp
add
nop
lret
jne
sbb
in
jp
cmp
inc
mov
into
mov
adc
je
cwtl
cmp
sub
push
and
mov
inc
add
inc
mov
mov
xor
push
add
push
nop
cmp
cmp
jge
push
adc
adc
add
dec
cmpsl
sub
dec
pop
roll
add
or
sub
push
shll
add
fiadds
sti
pop
jle
inc
imul
jmp
mov
call
loopne
daa
mov
lea
push
and
jnp
test
dec
jcxz
in
out
mov
into
pusha
push
sti
and
xchg
test
repnz
mov
add
dec
push
lret
xor
out
xchg
sbb
mov
add
jne
cmp
stos
jbe
insb
imul
mov
add
enter
in
mov
push
shlb
add
testl
add
pop
cmp
shll
into
or
mov
cli
pusha
test
inc
xchg
inc
in
imul
dec
mov
dec
cmp
shrl
jmp
cmpb
or
add
dec
cmp
jae
mov
add
pop
dec
lret
sub
orb
pop
add
or
and
js
hlt
xchg
jp
jne
dec
mov
jb
int
sbb
pushfw
adc
mov
dec
and
add
push
add
dec
jbe
ret
adc
in
mov
enter
or
sub
dec
push
adc
and
ret
lcall
add
push
mov
ret
and
mov
adc
fisttps
jmp
jmp
xchg
push
or
dec
out
add
or
xchg
stos
pop
pop
scas
add
adc
mov
add
pop
pop
mov
lods
xor
les
adc
or
jae
in
pusha
test
lret
cmp
cmp
xor
into
cmp
mov
call
add
rcrl
dec
mov
das
cmpb
prefetchw
mov
adc
sbb
imul
adc
lret
rclb
or
add
add
fsubl
lret
lock
jl
or
mov
push
je
dec
pop
or
adc
xlat
dec
pop
lahf
xor
add
xchg
mov
xor
mov
clc
enter
inc
jge
sub
ret
addb
jle
cmp
xor
and
mov
cld
jnp
es
xorb
or
inc
testl
add
add
into
xchg
rorb
sub
fs
xchg
rclb
mov
movsb
cmp
test
adc
lcall
add
pop
xchg
jle
sahf
pop
cmp
sub
xor
daa
daa
iret
addl
into
into
into
inc
push
cmp
and
mov
sub
push
pop
nop
pop
dec
sbb
cld
pop
rolb
and
or
es
in
lods
pop
add
sbbl
pop
lcall
add
leave
lahf
pop
test
out
adc
add
or
jns
add
add
and
or
je
inc
lods
movsb
and
fcom
xor
sbb
sub
xchg
or
mov
lret
sbb
daa
lret
xor
loopne
pusha
push
xchg
push
or
adc
push
jbe
inc
andl
pushf
add
mov
ret
pop
fmul
cmp
mov
mov
xor
push
dec
jo
or
cmp
mov
cmp
int
rol
ficomps
adc
sbb
repnz
xor
js
or
and
sbb
iret
cli
adc
jge
addr16
ljmp
ljmp
xor
icebp
push
icebp
push
mov
push
mov
inc
push
cwtl
dec
sbb
rorb
loop
xlat
mov
loop
nop
cwtl
orb
pop
sbb
jmp
adc
call
sub
loopne
insl
or
out
je
pusha
mov
rorb
icebp
sub
jbe
inc
inc
int3
call
xchg
and
sbb
jo
lds
out
sub
fwait
testl
jbe
ret
jmp
or
mov
dec
sbb
add
jg
lock
fbstp
mov
cmp
add
repz
adc
push
sbb
jb
shlb
sub
mov
fsubrl
lock
push
sbb
fs
test
sbb
fldl
cmpb
pushl
inc
repnz
test
je
test
push
xor
mov
out
je
and
fldenv
call
loopne
xchg
inc
cwtl
pop
mov
or
shlb
jge
sbb
int3
adcb
test
xor
push
and
shlb
adc
imul
push
hlt
imul
sahf
fstps
sbb
sahf
cs
xchg
clc
incl
and
inc
sbbb
or
and
pusha
push
pop
or
pop
push
imul
mov
xchg
adc
push
adc
xchg
stos
addl
cmp
add
sub
xchg
arpl
test
push
orb
mov
push
adc
popa
add
call
sub
mov
jae
addb
lds
jmp
push
push
xlat
xchg
dec
adc
jb
push
push
ss
mov
outsl
mov
add
popa
sar
sub
adc
jmp
xor
test
inc
hlt
or
push
subb
jne
push
inc
add
add
lods
mov
pop
ret
and
pushf
dec
jmp
xchg
addr16
mov
out
and
fisubrl
mov
adc
adc
mov
fmul
ret
pusha
outsb
in
outsb
or
push
sbb
or
into
xor
xchg
rolb
xor
add
pop
add
orl
add
or
push
in
std
or
jns
cmp
dec
sbb
dec
rorl
push
and
add
arpl
fimuls
or
cwtl
xchg
or
call
or
sub
cmp
inc
or
pop
jl
mov
sbbb
lea
push
enter
adc
adcl
js
gs
dec
pop
insw
lock
dec
mov
loopne
in
jae
fsubs
test
mov
push
jmp
dec
loop
dec
nop
movsl
scas
xchg
fisttps
jae
ss
shlb
or
js
mov
mov
or
mov
jo
imul
inc
js
sbb
sub
mov
or
pop
push
das
std
and
or
mov
sub
add
insl
loop
les
nop
mov
jb
loope
lcall
ret
xor
fwait
push
and
push
adc
sti
lock
out
inc
hlt
xor
test
shrb
or
push
adc
push
mov
xchg
pop
imulb
lods
fldl
sbb
inc
inc
or
xor
push
push
mov
nop
addr16
sbb
pop
pop
cs
xchg
cwtl
or
aad
jbe
aas
loope
and
add
hlt
xor
xlat
add
rorl
pop
push
lock
pop
xlat
pop
inc
pop
subb
addr16
jne
dec
push
daa
data16
and
jne
test
adc
addr16
add
daa
sbb
outsl
es
data16
cmc
sub
in
dec
shlb
ss
lea
inc
emms
or
adc
loop
xor
push
dec
add
and
push
push
or
loope
and
bound
pop
dec
sub
mov
cvttsd2si
test
aaa
xchg
mov
fbstp
popa
sbb
rcr
add
mov
xchg
fildll
add
xchg
idivb
adc
jmp
fstps
icebp
lahf
add
adc
rolb
andb
adc
sub
das
fmuls
adc
test
rcr
pop
cmpsb
pop
sbb
imul
in
mov
mov
push
sarb
or
dec
lret
mov
iret
mov
lahf
jo
fs
sub
lret
or
incb
orb
ret
faddl
jb
mov
mov
enter
in
fistpl
lahf
dec
loopne
mov
data16
mov
xchg
hlt
in
aad
or
outsl
sub
jo
pop
mov
imul
fmuls
nop
mov
fsubl
xchg
xchg
testb
lock
pushf
sbb
jp
lock
enter
pop
adc
fsts
js
mov
call
pop
xorb
or
or
ret
xor
mov
mov
fdivrs
add
adc
and
xor
lock
insb
xchg
jl
sbb
jne
cmp
es
inc
inc
adc
push
mov
jnp
inc
in
push
cld
lds
mov
cwtl
pop
and
dec
jle
adc
cmpsb
sti
push
cmp
fcomp
aam
jl
dec
test
ret
push
dec
mov
sbb
fwait
and
sub
sub
cmp
or
sub
sbb
inc
jg
cmp
or
pop
hlt
leave
mov
jmp
xchg
adc
xchg
and
les
in
stc
test
in
push
aad
sarb
in
mov
or
in
movups
cmpsb
in
cmove
mov
inc
mov
and
imul
xorb
fwait
or
leave
call
cmpsb
or
pop
push
adc
cmpb
orl
jne
nop
and
mov
mov
xchg
pop
ds
int3
clc
jo
mov
push
enter
sbb
and
sbb
imul
jmp
dec
enter
or
aaa
in
ret
test
inc
cmpl
push
mov
loopne
cmp
xchg
mov
xor
or
leave
test
add
sbb
cmpl
test
dec
leave
xor
sub
mov
add
dec
xor
adc
cltd
fs
sub
dec
es
cmp
dec
es
inc
inc
dec
mov
cltd
fs
shl
loope
add
and
add
add
push
loopne
rol
sbb
leave
add
nop
int3
rcr
add
cmpsl
xchg
ss
sbb
inc
in
mov
pop
lea
adc
in
and
ljmp
sbb
ja
mov
adcl
or
and
mov
andb
andl
xor
sbb
out
xchg
inc
sub
enter
shll
or
ja
or
jmp
pop
rolb
mov
mov
repnz
cmp
mov
aam
jae
gs
fs
mov
aad
or
cmp
sub
jae
mov
dec
enter
mov
in
shll
dec
cmp
in
mov
iret
adc
inc
sub
dec
pop
les
mov
in
inc
insl
and
test
xor
mov
xchg
fsubrs
cmp
jg
gs
outsb
xchg
or
loopne
in
aam
sub
and
and
sbb
or
sahf
dec
adc
mov
xchg
cli
mov
fs
call
or
fcom
cmp
push
adc
pop
xchg
pop
fisubl
popf
out
out
sub
movsb
cmp
aam
adc
jo
rolb
out
mov
mov
add
clc
test
cmp
jecxz
in
rorb
fcomp
aam
jno
or
cld
mov
lea
mov
sbb
sub
cmp
cmp
cmp
cmp
enter
cmp
rcl
pop
jnp
add
dec
mov
and
movsb
cmp
sbb
fwait
rorl
xchg
out
add
ret
sbb
cwtl
pop
mov
push
adc
arpl
in
mov
stos
pop
enter
mov
fmul
sbb
mov
popa
ja
call
xor
fcmovb
pop
das
or
jecxz
mov
xchg
outsl
lock
xchg
or
add
gs
xchg
stos
inc
rorb
pop
testb
cmp
int3
mov
das
unpcklps
inc
adc
mov
cli
aas
outsl
outsl
fdivrs
dec
sbb
jp
or
fimuls
or
mov
mov
sub
mov
loopne
aas
in
or
push
cmc
nop
xchg
std
movsl
and
inc
mov
or
inc
lds
dec
aad
fsubrl
inc
fcmovu
ret
jns
cmp
sbb
mov
jo
or
xchg
add
sbb
sbb
xor
es
push
pop
pusha
cltd
fs
cltd
xor
shll
mov
sbb
addb
cmp
js
xchg
mov
shll
dec
aam
aam
bswap
inc
mov
adcb
clc
test
dec
js
push
adc
add
push
pusha
sub
push
int3
fchs
xchg
adc
cmp
add
pop
inc
mov
ljmp
dec
xchg
sub
dec
movsb
add
push
and
adc
call
lock
pop
cwtl
ss
cwtl
stos
add
sbb
outsl
in
pop
les
fmull
cwtl
cmp
xchg
cmpsb
adc
sbb
or
inc
rclb
adc
cltd
popa
jb
sbb
enter
or
or
sbb
or
or
test
add
in
aaa
call
or
loope
lcall
mov
inc
or
jmp
rclb
push
repnz
add
xlat
andb
divl
movsl
sbb
xor
inc
ret
test
cmpsb
loop
add
jmp
dec
mov
imul
popf
in
dec
sarb
fwait
lcall
push
pop
xor
mov
repnz
incb
fcoml
cwtl
movsb
repnz
inc
out
mov
test
pushf
std
inc
addl
das
add
pop
jno
sbb
aam
sub
lret
push
or
fadds
cmp
out
paddusb
test
or
sahf
jno
addl
ljmp
sahf
inc
cmpsl
xchg
mov
or
add
and
push
andl
adc
jb
int3
enter
jb
jb
mov
jb
xchg
cwtl
mov
lds
dec
outsl
adc
pop
shrb
sbb
cmc
test
mov
sub
push
or
mov
mov
das
xchg
subb
or
xor
add
fcmovu
insl
push
mov
sbb
test
fs
out
movsb
xchg
nop
push
push
lds
mov
jnp
leave
in
sbb
inc
and
inc
test
shlb
sub
popa
or
fdivrl
pop
cmp
push
repnz
xchg
mov
test
call
adc
jne
addr16
pop
cmp
xchg
test
lahf
js
pushf
enter
jmp
fisubl
inc
add
mov
pusha
andb
lods
rolb
mov
sub
dec
and
aas
adc
je
fstpl
jbe
nop
in
pop
sbb
fucomi
sbb
adc
mov
nop
in
mov
xchg
push
popa
mov
pop
and
mov
fwait
lods
rorb
aas
cvtdq2ps
popa
add
rorb
push
ret
jmp
ror
fdivl
andb
popa
sti
mov
int
rcrl
or
inc
in
mov
dec
or
test
xchg
push
xchg
in
xchg
inc
mulb
or
and
rcrb
inc
sub
pop
push
rclb
test
enter
pop
xchg
aam
fsubrl
or
mov
add
cmpsl
std
rcrb
aam
in
jmp
push
pop
movsb
fsubl
cwtl
hlt
adc
jne
dec
jmp
push
adc
fdivs
push
or
and
popl
leave
adc
mov
push
repz
ss
push
cwtl
adc
shl
mov
stos
or
or
loope
adc
cmp
out
xchg
stos
adc
mov
mov
test
stos
jne
cmp
xchg
and
ljmp
mov
cmp
test
add
movsb
lods
mov
xor
cmp
movsb
shrl
jecxz
out
add
adc
lret
xor
mov
add
movsb
and
in
lock
dec
jae
stos
pop
leave
aam
mov
cmp
fmull
test
push
and
jmp
rol
test
fwait
loopne
mov
imul
loopne
mov
dec
fcompl
rcrb
imul
cmp
mov
add
hlt
scas
aam
add
push
mov
cmp
inc
inc
cwtl
jo
sub
std
es
js
inc
or
inc
gs
xor
pop
insb
xchg
dec
es
ss
cwtl
mov
test
xchg
movsb
test
loope
cld
repnz
xchg
or
call
in
fistpll
push
or
in
nop
mov
adc
or
adc
mov
mov
jge
mov
call
pop
mov
inc
cmp
nop
and
xchg
lea
push
pop
lds
imul
add
cmp
mov
pop
mov
sbb
jns
mov
dec
sub
roll
mov
lock
mov
adc
pop
cltd
or
jno
cmp
add
xchg
sbb
xor
shrb
push
mov
aad
ss
push
cmp
adc
or
mov
dec
int3
mov
fcoms
mov
aaa
rcrb
inc
mov
dec
mov
sbb
ret
je
push
pop
xchg
popa
inc
mov
push
loope
pusha
mov
rclb
fs
push
xor
out
adc
sub
and
adc
xchg
pop
enter
test
mov
dec
mov
sbb
sub
adc
inc
jb
mov
ret
cmpl
mov
mov
in
loopne
test
pop
test
movsb
nop
mov
addb
inc
or
xchg
inc
mov
xchg
xor
paddusw
fdivl
sbb
repz
and
cmp
pusha
test
lock
cmp
fistpl
femms
push
mov
dec
test
push
or
lods
mov
call
enter
mov
and
fwait
loope
bound
jae
mov
mov
rorb
in
lea
dec
lods
or
mov
or
push
sbb
nop
mov
adc
mov
push
sbb
fdivrl
in
cmpsb
rolb
mov
in
les
inc
and
cmc
in
and
mov
and
and
pop
pop
inc
call
in
push
mov
std
lcall
sti
lock
out
dec
or
sub
pushf
cmp
adc
insl
or
sbb
sbb
filds
xchg
jae
mov
xchg
cvtps2pd
cmp
cmp
push
jns
dec
add
adc
lret
add
add
push
push
in
sti
cmp
adc
mov
push
sbb
mov
out
xor
sbb
sbb
sub
sbb
mov
cs
mov
lds
jmp
cmp
lods
fsubr
or
out
out
and
mov
shlb
in
push
andb
pop
xchg
dec
cmp
push
sbb
in
enter
pop
or
shll
mov
sub
sub
inc
pop
mov
mov
test
lock
clc
int
inc
xor
rorb
inc
rorl
cmpl
push
add
push
mov
and
mov
je
test
dec
push
xchg
jne
jmp
fwait
stos
jo
mov
js
fsubrl
mov
add
outsb
xchg
nop
and
fs
pusha
mov
cmp
dec
test
sub
test
enter
decb
mov
mov
imul
ja
les
push
adc
test
int3
inc
or
adc
addr16
mov
dec
xchg
call
call
push
push
popf
sub
adc
lahf
push
sbb
mov
into
or
incb
sbb
cmpb
pushl
mov
inc
cmp
andb
cmp
add
add
call
push
subb
mov
rol
jmp
fadds
std
and
jb
add
or
xchg
adc
ret
xor
fists
inc
inc
push
stc
jae
mov
or
pop
adc
test
mov
add
and
add
sbb
or
aam
add
daa
movsb
sbb
jmp
pusha
xchg
push
push
out
shlb
cmp
xchg
inc
pop
or
dec
push
mov
dec
leave
adc
pop
enter
cmp
xchg
scas
dec
mov
invd
xlat
add
push
arpl
adc
mov
std
xor
push
aam
add
testl
int3
fnstsw
cltd
push
leave
and
mov
les
push
add
icebp
loop
push
inc
mov
jmp
pxor
adc
push
xor
ficoml
sbb
insl
mov
mov
push
push
or
lea
int3
insl
insl
sub
pop
mov
xchg
lods
aam
lea
int
arpl
dec
mov
sbbb
pop
adc
push
jb
adc
inc
fsub
adc
push
shll
into
stos
imul
call
call
in
iret
sti
js
cmpsb
ss
push
lods
push
call
jno
adc
pop
fadd
dec
or
les
adcb
mov
lret
mov
js
mov
aam
in
in
rcll
fs
dec
and
inc
xchg
dec
fwait
enter
xlat
pop
insl
orb
fistl
pop
insl
push
sbb
add
clc
scas
xchg
imul
insl
loopne
call
add
cs
shlb
mov
xchg
dec
insb
sbb
aad
icebp
xor
leave
and
pop
enter
nop
es
fadd
ret
pusha
test
mov
insl
int3
scas
cmp
inc
cmp
in
int
inc
sub
push
loope
push
or
adcb
mov
mov
dec
jb
pushf
adc
xchg
xchg
js
fs
fs
dec
jo
mov
shll
je
nop
push
subb
and
pop
lods
adc
jo
rol
enter
pop
enter
mov
or
add
push
xor
cld
stc
arpl
push
cmp
shll
icebp
push
movsb
mov
cmp
je
pusha
inc
add
sbbl
cmp
pusha
pop
in
sbbb
inc
mov
mov
pop
pop
adc
rorb
movsb
fsubrs
aas
pop
insl
ficoml
add
test
dec
pop
lea
push
sub
xlat
sub
sti
inc
subl
fldt
mov
xor
repnz
test
xlat
mov
and
push
lock
jb
dec
cmp
sbb
add
jbe
out
xchg
movsl
mov
int3
adc
pop
leave
mov
int3
add
es
xor
mov
nop
mov
push
dec
fstps
sbb
cmp
loop
jb
rcr
fwait
pusha
mov
mov
mov
dec
movsl
je
mov
fiaddl
inc
ficoml
xlat
out
outsl
pop
dec
lods
dec
cmpl
ret
in
jo
cltd
mov
mov
mov
add
nop
mov
sub
sub
test
push
xchg
test
lret
and
jg
lock
rcl
outsb
xchg
lock
mov
push
push
cmp
mov
add
hlt
mov
lds
xchg
sub
sub
cwtl
adc
les
orl
nop
mov
nop
pop
jmp
sbb
push
in
lea
hlt
cltd
loopne
adc
aaa
fs
mov
aam
fstpl
sub
addr16
int3
push
or
mov
das
mov
cmp
in
call
cmpl
mov
ret
test
into
imul
push
stc
push
jmp
push
mov
movsb
push
or
adc
dec
or
fistl
das
push
dec
push
ret
rorl
test
ficoms
fmull
dec
rcrb
mov
insb
xchg
dec
cmpsb
adc
add
pusha
pop
mov
pop
cltd
subb
loopne
loopne
dec
pop
pusha
add
subb
cltd
mov
add
fs
inc
insl
sub
sbbl
orb
inc
and
imul
js
enter
inc
faddl
clc
adc
adc
mov
rol
mov
out
and
xor
jb
adc
inc
repnz
jbe
pop
outsb
cli
push
insb
nop
cmp
push
ficoms
cmpb
rorl
cmp
fisubrs
or
mov
aam
out
and
jg
and
add
out
rcl
sub
xchg
and
add
mov
ret
adc
add
lret
pop
test
xchg
mov
xchg
jl
subb
fsubrl
mov
test
mov
mov
pop
and
ret
movsl
pop
or
mov
adc
inc
cmpl
and
sub
pop
lret
sarb
pop
rcr
xchg
and
fs
sub
pop
mov
fs
mov
push
insb
dec
ja
int
stc
cmp
loopne
out
adc
add
sahf
fadd
or
cmp
out
in
lods
fdivrs
repz
add
fstps
adc
es
inc
push
jo
sub
and
push
inc
negl
cltd
and
out
inc
push
pop
push
test
inc
adc
jg
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
add
pop
enter
add
and
outsl
jnp
or
adc
out
leave
ljmp
cmpb
iret
sub
push
inc
cmp
iret
repz
sub
sbb
jmp
addl
dec
dec
dec
dec
dec
dec
push
xor
sub
jg
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
inc
pushl
xor
sub
mov
das
mov
gs
xchg
adc
stc
incl
or
outsl
cmp
adc
out
imul
push
and
test
cld
push
sti
decl
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
xchg
jb
gs
xor
cs
adc
popa
and
popa
xchg
divb
outsb
push
nop
push
xor
pop
lock
push
jnp
popa
rdpmc
add
pushl
sub
aaa
imul
incl
jb
js
je
jb
gs
cmp
or
jbe
mov
add
add
add
je
push
orb
push
je
mov
popa
jb
mov
mov
dec
xor
xor
sub
cmp
mov
and
jns
add
das
das
sub
mov
adc
push
dec
push
inc
inc
gs
insl
bound
daa
dec
outsl
jbe
dec
arpl
mov
jo
sub
addr16
dec
jne
xchg
divl
fmuls
mov
inc
jo
imul
jb
push
inc
insb
cmp
fdivrl
cmpsl
xchg
out
jnp
popl
ja
addr16
scas
xor
jne
xor
imul
scas
clc
notb
ficomps
push
jne
dec
js
push
jne
pushf
jae
flds
inc
test
int
ds
popa
das
jo
or
pushf
loop
vlddqu
sub
orb
mov
mov
sbb
push
pop
and
push
jns
inc
add
imul
daa
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
push
pop
cmp
pop
pop
xchg
pusha
mov
dec
push
cmp
jge
jg
cmp
inc
pusha
pop
dec
dec
test
cs
and
push
or
or
adc
pop
sti
mov
inc
insb
jae
xlat
je
and
push
fs
mov
inc
loopne
leave
inc
inc
mov
bound
imul
and
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
push
jo
imul
call
pop
mov
je,pn
jo
pop
pop
push
and
push
addl
fs
pop
push
pusha
scas
mov
push
insb
xorb
fidivl
and
daa
mov
jbe
cmp
dec
insl
and
insl
push
or
fistpll
inc
cs
xor
ficoms
sub
mov
mov
loopne
inc
lcallw
out
test
add
xchg
mov
push
ja
and
or
imul
adc
jp
push
pop
es
jge
and
push
mov
je
cmp
push
and
push
ds
daa
rolb
fidivrl
mov
push
mov
jo
push
daa
sub
push
addb
das
arpl
cmp
pusha
add
push
arpl
mov
mov
fiadds
inc
repnz
lret
imul
xor
or
push
rolb
lcall
ret
pusha
popa
pop
xor
sub
push
push
fbstp
xor
fcompl
push
js
or
xor
shll
dec
add
xchg
hlt
pop
dec
add
add
dec
pop
adc
ja
outsl
outsl
ss
jl
jae
fs
jo
cli
jbe
add
inc
inc
mov
mov
cmp
gs
jo
lds
pop
cwtl
sub
xlat
outsl
push
jmp
out
push
cmp
outsb
bound
cmp
jnp
enter
ljmp
imul
sub
popa
pop
or
aad
inc
jno
pusha
mov
rclb
leave
nop
mov
mov
inc
insl
imul
xor
cmp
xorl
add
sub
and
pop
or
inc
mov
jne
push
mov
jae
xor
fmull
jo
sub
test
test
jb
push
sub
lret
add
pop
dec
jmp
mov
push
and
cmp
loop
mov
cwtl
ja
ds
inc
inc
and
inc
test
jg
pushl
fwait
int3
pop
loopne
add
ret
push
rol
das
in
stc
test
icebp
pusha
inc
mov
clc
ret
movsl
add
pusha
scas
push
loope
je
sub
jae
push
or
imul
jnp
cmpsb
gs
popa
dec
add
cld
outsb
mov
popa
js
jae
or
addr16
dec
pop
add
mov
sub
sub
xor
xor
lods
sarb
add
add
add
add
scas
clc
jg
and
push
pop
pop
or
aaa
ds
push
pop
hlt
and
sti
lcall
add
js
or
sub
out
into
int3
pop
add
sbb
addb
addb
addb
add
and
adcb
pop
daa
push
cmpb
jnp
enter
lret
jb
int3
push
add
mov
jbe
movsb
clc
mov
xlat
push
stos
int3
js
mov
xor
int3
rorb
sahf
dec
dec
sahf
sbb
in
dec
dec
mov
mov
loop
lock
es
inc
pop
push
inc
or
mov
pop
adc
loope
add
dec
cmp
test
cs
cmp
test
pop
data16
les
dec
adcb
sub
insb
ficomps
pop
jo
lods
mov
adc
push
and
sub
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
xor
push
test
push
add
dec
mov
movsb
fsubs
adc
sbb
or
rclb
outsl
ja
lea
std
iret
inc
cs
jae
jb
bound
dec
in
clc
dec
inc
stos
inc
ss
popa
mov
mov
pop
and
mov
lods
mov
into
lea
dec
mov
outsl
js
push
push
inc
push
fsubs
dec
and
insb
gs
into
fsubr
mov
dec
mov
daa
add
push
ljmp
out
pop
add
inc
mov
imul
mov
dec
inc
jb
jns
daa
pop
mov
mov
push
jns
mov
xchg
mov
frstor
cmp
add
adc
outsb
pushw
mov
test
rorb
imul
push
jno
mov
jns
inc
sbb
insl
flds
dec
clc
popl
aas
xchg
es
cmp
push
mov
mov
push
inc
mov
dec
lahf
lock
mov
cwtl
xchg
jbe
push
push
jae
cmp
push
adc
scas
cmp
call
out
jae
addr16
subl
gs
and
xchg
xchg
inc
push
push
push
push
dec
negl
add
jne
repnz
mov
xchg
inc
mov
fildll
sbb
jg
lock
imul
call
inc
test
jg
xchg
ret
jae
inc
in
lods
push
imul
and
push
mov
mov
sub
mov
addr16
das
je
jp
scas
mov
daa
xchg
dec
jnp
pop
mov
popw
pop
cmp
mov
cmp
push
das
push
sub
sub
inc
jl
push
jle
sub
imul
addr16
sub
xchg
shll
pop
push
cmp
test
and
cmp
cmp
rorl
dec
pop
pop
push
scas
push
cmp
push
jb
outsb
fst
cltd
imul
push
lret
js
xchg
push
lods
sbb
test
push
enter
jo
sub
sbb
sub
cld
repz
sub
push
call
repz
mov
add
imul
aam
cwtl
nop
dec
jns
divl
mov
jl
test
orb
ds
repz
jo
pusha
or
jge
out
imul
das
and
cmpsl
push
push
aam
cs
les
jl
idivl
dec
dec
push
inc
inc
lods
inc
iret
push
movsb
cmp
cmp
xor
iret
repz
and
sbb
xlat
ds
repz
add
decl
jns
in
shrb
dec
sub
or
incb
sahf
out
sahf
test
pusha
inc
xor
cmp
out
sub
hlt
std
in
loopne
cmp
repz
lcall
mov
xor
cmpsl
pop
push
sub
or
sarl
shlb
jns
push
xor
data16
add
pop
loope
insb
cmpsl
pop
push
jae
movsl
fdiv
insb
fs
sbb
je
into
xor
xor
imul
sub
add
or
adc
push
insb
cmp
inc
inc
dec
jae
sub
mov
sbb
lcall
push
inc
dec
xor
inc
dec
dec
dec
push
push
sbb
sti
sbb
xor
push
dec
inc
dec
add
dec
dec
inc
add
pushl
das
adc
sub
adc
stc
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
notrack
xchg
popa
pop
push
pop
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
decl
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
pop
hlt
stc
aas
pop
leave
loop
mov
xchg
dec
mov
lods
inc
clc
mov
push
xor
fsin
out
mov
pop
and
es
add
sub
flds
sbb
add
push
dec
push
push
adc
or
outsb
jbe
and
subb
push
jo
inc
or
or
outsb
push
adc
push
jnp
out
xchg
inc
dec
push
dec
push
cs
pop
stc
ljmp
push
into
mov
inc
pop
inc
sbb
aas
cmp
sbb
pop
adc
push
cmp
inc
aas
adc
inc
pop
pop
push
pop
sub
and
pop
xor
pop
fcmovu
and
add
sbb
inc
dec
pop
inc
sti
imulb
sub
jbe
pop
and
es
inc
xor
add
aas
inc
cmp
sbb
inc
pop
push
es
sub
out
in
testl
push
push
push
xor
cmp
and
dec
dec
adc
fucomip
insl
add
and
lods
xor
ret
and
std
outsl
mov
and
xor
cld
xor
sub
mov
fists
mov
pop
pop
xor
out
or
sub
incl
xlat
push
ds
sbb
push
inc
or
xor
or
pop
push
xor
or
or
jge
inc
inc
add
mov
sub
pop
pop
or
lret
pop
aad
es
adc
push
push
shl
xor
pop
es
fiaddl
xor
inc
cmp
sub
inc
lock
cmp
adc
aas
add
push
ficomps
sbb
sbb
add
imul
aas
or
pop
adc
cmp
ds
and
and
add
mov
xor
sbb
pop
and
inc
and
add
adc
imul
stos
adc
lcall
add
gs
mov
jg
out
ds
push
sub
push
push
sbb
ds
pop
dec
and
push
sbb
imul
push
or
negb
cld
ret
fbld
add
sbb
mov
or
jnp
inc
pop
adc
dec
cmp
dec
cwtl
in
push
cmp
daa
ss
jne
xor
out
jg
sub
lea
repz
xchg
push
lahf
daa
mov
pop
xchg
jne
ljmp
imul
sub
loop
lock
es
ds
pop
or
sbb
in
sahf
es
mov
stos
and
xor
pop
push
push
mov
or
cmp
outsl
insl
lods
pop
and
outsb
adc
pop
xor
push
cwtl
data16
cmpsl
add
mov
pop
mov
push
xor
outsb
in
sub
push
or
sarl
cmp
roll
movaps
cmp
ja
sahf
mov
imul
push
jno
ds
jns
lods
fisubs
imulb
lahf
out
les
sub
arpl
pop
sub
inc
mov
aaa
sbb
les
push
pop
pop
inc
cmc
test
push
lahf
cs
push
sbb
sub
inc
sbb
or
mov
cmp
sbb
jae
clc
ds
or
and
inc
sbb
add
nop
pop
or
fistpl
xlat
icebp
push
add
and
pop
xor
fistpl
add
inc
jmp
loop
push
push
and
inc
pop
dec
ss
pop
jb
cmp
in
adc
push
insb
push
push
rol
sub
and
push
xor
pop
push
iret
lods
sub
cmp
inc
imull
sub
add
sbb
pop
or
pop
cs
inc
sarl
movhps
and
sbb
mov
push
xor
cmp
adc
nop
test
ja
sub
out
xor
mov
sub
xor
pop
sbb
fs
dec
or
jecxz
pop
add
or
or
fs
cmp
outsb
test
shll
add
cmp
daa
adc
ret
and
ret
popa
test
dec
or
add
sub
ds
push
cmp
adc
ss
inc
add
sbb
gs
push
cmp
test
pop
in
cs
add
mov
cmp
sbb
adc
push
sbb
pop
or
and
and
addl
xlat
outsb
fistpll
sub
inc
lods
sbb
fwait
inc
mov
pop
imul
or
and
xchg
testl
call
inc
das
and
pop
sti
cltd
imul
add
pop
idivl
sub
imul
and
pusha
pop
mov
jnp
dec
push
icebp
in
xor
pop
mov
push
jp
in
into
aaa
daa
push
sbb
adc
loopne
jle
inc
cmp
sub
into
sbb
xlat
cmp
sbb
dec
ret
xchg
mov
sub
and
add
pop
pop
xlat
negb
divl
xor
loop
shll
aad
js
aas
mov
cmp
test
aas
add
xchg
fwait
out
and
jle
sub
sub
cmp
dec
pop
or
pop
ss
inc
hlt
sahf
push
in
push
es
push
gs
sub
loopne
or
lcall
shl
test
jbe
xor
adc
ds
mov
and
dec
cmp
inc
daa
pusha
addr16
dec
adc
sbb
sbb
add
push
pop
test
push
pop
or
insl
xor
or
sub
sbb
ja
dec
shl
inc
xor
pop
lods
inc
daa
inc
sbb
js
pop
xchg
imul
test
das
adcl
out
lcall
jg
or
inc
and
push
sbb
pop
js
test
push
add
or
out
mov
cmp
or
pop
dec
xor
sbb
sahf
imul
ds
stos
add
js
sub
push
adc
mov
add
xchg
int3
jg
out
jae
insl
popa
imul
cmp
push
pop
outsl
jo
or
sbb
push
ja
mov
xchg
adc
popf
icebp
push
scas
cs
add
es
jns
add
insl
xlat
scas
lahf
pop
xor
add
ret
jecxz
out
cmp
and
add
mov
and
jl
add
fs
je
dec
rcrb
mov
dec
or
punpcklwd
mov
xor
push
push
mov
xchg
lahf
and
mov
cmp
mov
xlat
mov
sub
or
repz
xor
dec
in
or
ja
sti
mov
xor
or
rol
iret
mov
pop
dec
xlat
sub
pop
jl
sub
loope,pt
push
pop
xchg
push
cli
pusha
add
mov
mov
cmp
or
dec
add
sub
popa
ret
push
or
push
fisubs
xor
movsb
add
push
lea
cmpb
pop
call
and
cmp
ret
dec
aas
add
lods
jmp
add
sbb
sbb
dec
mov
insb
and
call
gs
dec
jne
push
jo
cli
jg
mov
ret
and
push
push
das
xor
xor
loop
cs
jle
pop
sbb
sub
jge
js
lods
popl
inc
fiadds
fsubs
mov
dec
fidivs
and
das
cmp
xor
je
inc
xchg
insl
jae,pt
push
cltd
xchg
test
imul
cltd
lea
test
jb
outsl
imul
popf
cmp
jge
xor
insl
ds
daa
pop
sub
jo
xchg
dec
xchg
nop
xor
loope
je
dec
xor
xor
pop
pop
pop
cmp
cmpsl
jmp
ds
or
push
or
sbb
sub
adc
das
dec
cmp
out
js
pop
inc
dec
sbb
xor
push
dec
and
dec
pop
pop
call
or
mov
inc
pop
sub
aam
cs
adc
adc
add
mulb
xchg
jle
sub
xor
es
or
adc
faddl
mov
clc
repnz
xor
inc
xchg
or
popa
xor
jle
mov
xor
and
mov
lcall
in
inc
es
mov
push
insb
add
into
add
adc
mov
or
aas
xchg
sbb
cltd
jno
pop
or
or
mov
lcall
std
or
inc
and
or
adc
add
xchg
mov
and
inc
pop
das
pop
pop
lcall
push
mov
daa
pop
pop
fwait
arpl
sti
insl
sub
sbb
sbb
add
push
data16
pop
and
cs
xchg
add
in
pop
sub
inc
add
rorl
xor
push
and
pop
ljmp
sahf
push
loopne
cmpsl
repnz
rcrb
mov
sub
mov
pop
sub
mov
sbb
int
repz
push
jg
faddl
xchg
cmpsl
fldcw
ljmp
add
fsts
loop
sahf
out
mov
mov
push
xchg
inc
push
das
pop
clc
ljmp
push
in
push
jo
lock
cmpsl
data16
inc
mov
dec
test
and
and
push
or
mov
pusha
nop
aaa
dec
shlb
mov
outsl
ljmp
push
rolb
leave
aam
and
xor
inc
pop
mov
das
pop
push
xor
pop
push
pop
push
dec
or
pop
pop
sub
sub
dec
cmpl
mov
dec
aam
sub
mov
inc
push
es
or
lret
or
cmp
lds
pop
cmpsl
bound
js
adc
shrb
cmp
jns
xor
divb
pop
dec
ret
xor
daa
mov
add
dec
pop
xor
dec
popa
xchg
xor
pop
sbb
imul
and
int3
shrl
and
pop
pop
inc
mov
cld
xlat
inc
inc
movaps
inc
cmp
inc
sbbl
and
pop
jns
push
mov
adc
and
mov
lcall
inc
pop
inc
dec
orb
pop
cmp
das
out
or
mov
push
int3
inc
xchg
pop
enter
sub
or
add
fcoml
cmp
ds
add
aas
sbb
inc
jmp
xor
add
pop
or
fstpt
or
pop
or
push
add
xor
or
pop
cs
cs
dec
xor
add
xor
cs
loopne
sub
pop
cs
inc
sub
or
and
sub
loope
or
loopne
mov
xlat
jl
sub
outsb
movsb
clc
push
pop
cmp
pop
rcrl
sti
adc
xor
pop
add
and
repz
add
adc
mov
dec
jg
or
jae
cmp
jbe
hlt
lods
pop
dec
add
mov
sbb
aas
sbb
adc
hlt
inc
mov
push
out
and
adc
dec
pop
adc
aad
loopne
fcmovbe
cmp
int
adc
pop
adc
in
or
dec
cmp
xchg
ds
lock
pop
flds
add
adc
mov
cs
dec
call
dec
cltd
pop
adc
and
enter
xor
pusha
or
dec
in
xor
cmp
das
movsl
mov
xchg
mov
sub
cmp
xor
movl
daa
sbbb
dec
cmp
pop
mov
cmp
and
mov
adc
jno
fsubl
lods
or
out
and
push
dec
cmp
xor
push
jo
cs
icebp
js
sbb
in
pop
in
fnsave
out
cltd
mov
sub
adc
stos
cmc
mov
xor
lods
mov
xor
stos
sub
mov
movsl
pop
aaa
sbb
loope
adc
insl
sbb
ja
push
ja
int3
and
inc
imul
inc
insb
cmp
sbb
xor
stos
or
dec
sub
scas
xor
insl
inc
pop
popa
movsl
push
icebp
test
pop
xorl
std
adc
jb
xor
dec
xchg
cmp
inc
repz
xchg
repz
push
pop
xor
push
cmp
ficompl
push
inc
pop
push
xor
dec
cmpsl
or
mov
in
aas
dec
and
adc
adc
fidivrl
cmpsl
push
inc
xchg
shlb
or
or
hlt
ja
sbb
pop
cs
mov
xor
pop
and
xor
sub
daa
push
pop
sbb
pop
dec
mov
cwtl
arpl
dec
push
or
inc
imul
cmp
cmp
xchg
and
xchg
inc
or
ds
subl
adc
push
pop
shll
push
inc
cmpsl
adc
mov
add
jbe
and
rclb
sub
ja
fistps
inc
fisubrs
je
cld
mov
insb
gs
ja
fs
imul
and
pop
push
cmpb
test
jb
push
fidivl
push
fsin
push
movsb
jecxz
jmp
inc
add
and
push
sbb
roll
cmpsb
push
ljmp
pop
cmp
repz
mov
loopne
addr16
push
les
pop
aaa
sbb
imul
addr16
jmp
pop
add
xor
dec
push
dec
dec
gs
sbb
ss
aaa
rolb
aam
adc
inc
negl
push
and
mov
add
adc
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jg
xor
mov
dec
fsubs
sbb
jg
pop
test
xor
dec
xchg
pop
shl
dec
push
pop
in
bound
adc
adc
scas
test
xor
aaa
push
push
pop
lods
test
and
test
addl
inc
jb
pusha
sbb
mov
outsl
push
dec
leave
dec
sti
insl
imul
test
in
jbe
pop
sub
xchg
xchg
sub
xor
in
jns
and
adc
daa
int
out
cmp
and
cmp
pushf
cmp
aam
dec
ds
lock
mov
mov
cmpsb
stc
pop
movzbl
xor
add
or
loope
dec
pop
aam
dec
mov
pop
sbb
clc
fistps
leave
jnp
cmp
xor
sub
clc
outsl
add
sub
xor
inc
pop
xor
outsb
adc
popa
add
jne
jle
pop
inc
cmp
insb
push
outsb
add
loopne
addb
js
pop
jg
or
shrb
jb
out
icebp
dec
jp
sbb
push
jb
jo
mov
bound
je
bound
mov
sahf
test
xlat
imul
rolb
arpl
jo
pop
and
mov
inc
sub
test
incb
jmp
test
mov
das
add
out
add
push
cmp
scas
out
sbb
subl
xorl
aaa
shrb
loopne
sahf
iret
stos
daa
shl
push
in
push
sbb
daa
inc
sbb
sarb
inc
outsb
dec
dec
sbb
or
pop
xchg
insb
or
sti
add
or
ret
adc
test
mov
push
cmp
xor
jns
and
sbb
and
cs
push
scas
mov
add
mov
test
inc
and
in
das
aam
jmp
adc
xor
add
outsl
dec
and
je
cwtl
add
push
push
mov
flds
or
mov
call
xchg
mov
imul
aam
sbb
outsb
and
mov
popl
push
adc
ds
repz
sub
cltd
dec
in
jns
pop
fs
push
int3
pop
xor
inc
jns
mov
pop
insb
data16
pop
push
adc
ss
mov
jbe
jo
stc
mov
cs
mov
push
ds
cmovs
insb
or
cmc
sbb
pop
xchg
popa
scas
mov
andb
cmpsl
cli
pop
mov
inc
sub
dec
sahf
les
je
dec
mov
rclb
or
mov
jns
fwait
in
enter
jns
leave
daa
push
mov
iret
jnp
mov
popf
push
jge
jmp
sub
dec
lock
test
int
out
jns
mov
aam
ret
inc
ds
xchg
add
fcomps
dec
push
push
cwtl
cltd
aaa
jnp
out
mov
push
in
stc
cmp
fnstcw
daa
iret
dec
insl
jne
xchg
pop
push
sbb
fldpi
loope
ds
cwtl
aad
cltd
pop
sbb
cmpsl
jne
js
je
lret
pop
mov
ffreep
cltd
xlat
jns
repz
cld
out
out
out
dec
repz
lcall
ret
rcr
mov
test
xchg
cmp
rcl
cmpsl
push
sahf
mov
fbld
es
loopne
pop
jecxz
setp
imul
mov
sti
aaa
mov
push
sub
sahf
out
shl
mov
fs
jl
mov
pusha
repz
out
adc
lods
aam
ret
idivl
out
lea
jns
out
push
pop
js
mov
repz
xchg
repz
cmpsl
filds
xchg
adc
iret
repz
push
popf
mov
stc
js
imul
add
or
aad
pop
lahf
or
decl
adc
cs
adc
and
std
stc
add
adc
adc
push
mov
xor
adc
pop
jnp
add
mov
test
jg
loopne
mov
je
push
mov
imul
hlt
pop
sbb
enter
adc
repnz
xchg
inc
repnz
iret
pusha
or
stc
bound
adc
add
stos
and
adc
outsl
pop
inc
ss
push
jae
popa
adc
insl
mov
ljmp
inc
sbb
idivb
push
or
aaa
push
adc
push
pop
cmp
jae
rcr
and
xlat
push
idivl
sub
add
rcll
insl
mov
dec
je,pn
push
ljmp
orl
xorps
lret
aad
cmpsb
push
insb
pop
push
dec
pop
je
pop
imul
push
fbstp
rcr
or
das
push
ret
sarl
outsb
jbe
loop
xor
ret
popa
mov
jae
inc
ss
dec
mov
ja
xchg
push
cwtl
lock
and
out
push
add
repz
leave
pop
push
fimuls
push
ds
and
adc
adc
popa
insl
jo
es
insb
je
push
push
stc
sti
leave
addr16
jo
jae
es
outsl
and
cmpb
sub
ret
ja
push
cmpsb
mov
or
decl
xor
xor
xor
xor
xor
push
cmp
int
frstor
cmp
push
xor
xor
cmp
push
add
or
pop
sbb
xlat
test
push
or
add
sbb
dec
dec
or
cmpsl
add
mov
add
add
push
aas
scas
and
sbb
push
sub
mov
andb
sbb
pop
adc
jbe
add
jb
std
jbe
cmp
inc
sbb
aam
test
aas
pop
in
pop
add
aam
jno
bound
sbb
push
push
sbb
sbb
es
xor
jge
cltd
or
dec
outsl
mov
pop
dec
cmp
xor
push
es
inc
in
add
pop
loop
js
fldt
int
call
pop
test
cmpsl
daa
sbb
inc
pop
lock
inc
or
jg
sarb
inc
sbb
pop
inc
movl
dec
and
popa
jbe
mov
pop
or
pop
loopne
sbb
jecxz
cs
lea
mov
and
jne
pop
stos
das
and
sub
sub
cmp
or
sub
push
mov
add
pusha
mov
or
xor
insb
stos
popa
dec
cwtl
sbb
xchg
sbb
sub
pop
lds
pop
jmp
and
mov
jno
mov
push
mov
cmp
sbb
and
iret
xchg
xor
sbb
mov
lahf
xchg
xor
sbb
lods
daa
sbb
insl
and
mov
stos
pop
jno
shlb
pop
sbb
push
pop
daa
lods
daa
jge
adc
push
das
divl
push
sub
push
iret
roll
mov
sysexit
pop
movsb
mov
or
cmp
mov
imul
popa
daa
pop
sub
add
push
das
dec
fisubl
adc
sbb
push
test
adc
repnz
adc
les
ja
mov
or
adc
inc
das
mov
outsl
pop
pop
mov
pop
cltd
daa
sbb
xchg
outsb
ficoml
orb
fmulp
pop
addr16
stos
adc
jg
jno
sbbb
sbb
mov
adc
pop
imul
frstor
and
mov
pop
imul
insl
shll
data16
inc
dec
jl
jl
xor
inc
and
xor
inc
pusha
inc
js
jl
or
je
jl
das
and
adc
imul
mov
sub
fbld
and
jo
pop
ja
es
dec
js
adc
pop
ja
mov
outsb
cmpsl
call
clc
popa
nop
ja
and
addr16
cmp
stc
pop
pop
aam
orb
shrb
cmp
testl
jb
sbb
and
dec
jo
pop
cmp
das
out
test
mov
sbb
xor
sub
addr16
cmp
push
add
pop
lret
ret
es
sub
sbb
pop
loope
add
push
jecxz
loopne
mov
js
mov
sbb
sub
in
inc
fcoms
mov
or
and
in
cmc
sbb
and
insb
and
dec
xchg
push
dec
or
add
rclb
outsb
iret
add
adc
cmp
mov
negl
inc
test
pop
xchg
enter
ljmp
sbbb
pop
mov
push
sub
inc
es
call
and
push
or
adc
lea
or
mov
xor
or
aas
jl
cs
pop
and
insl
xor
xor
inc
or
or
ret
test
inc
dec
and
stos
aas
dec
jp
inc
push
outsb
popa
mov
or
dec
add
mov
push
ds
es
mov
push
das
clc
xor
es
cmp
cmpsl
aad
inc
lcall
pop
xor
pop
dec
sbb
cltd
xchg
fs
pop
loop
andl
and
sbb
push
test
lret
add
mov
xchg
sub
dec
clc
outsb
andb
into
outsb
imul
inc
sbb
xor
push
cwtl
or
fsubrs
sub
lods
xchg
xor
lcall
and
or
hlt
pushf
add
add
jae
push
inc
push
adc
ja
xchg
and
ljmp
dec
sbb
js
xor
dec
dec
test
jp
movl
sub
push
sub
cmp
aam
outsl
sti
inc
pop
popf
es
out
out
dec
pop
or
mov
ljmp
jo
nop
jecxz
pop
dec
add
lret
pop
sbb
inc
mov
lods
ret
xor
in
or
push
psllq
pop
sbb
and
addr16
add
dec
fwait
dec
repz
or
xchg
fldcw
add
pop
or
int
mov
add
das
adc
sbb
and
fldcw
sub
xor
inc
mov
mov
out
adc
mov
mov
popa
xchg
fwait
int
mov
add
test
sub
add
or
pop
adc
insb
ss
int
add
add
int
mov
dec
str
test
fwait
add
inc
stc
das
incl
mov
add
jae
negb
sub
cs
and
fisubrs
push
test
or
sub
sbb
inc
pop
dec
mov
movsb
pop
jns
jns
je
jo
sub
sub
xor
xor
add
js
out
pop
and
repnz
mov
and
adc
push
in
or
add
xor
cmp
push
ja
fistpll
pop
ds
sbb
cmp
inc
aas
sbb
cmp
aas
xor
inc
push
cmp
pop
push
and
sub
cmp
das
pop
cs
xor
inc
sub
inc
xor
mov
jg
sub
sub
inc
and
pop
pop
or
cmp
or
ja
aad
xor
add
push
and
and
add
lret
out
xor
adc
sub
sti
cs
inc
aaa
sub
or
xor
dec
xor
cld
jmp
mov
pop
sub
and
and
inc
cld
jg
ds
cmp
pop
pop
cmp
add
call
push
or
add
sub
xor
xor
add
push
adc
dec
or
add
cmp
xor
insb
subb
jbe
or
push
xor
or
sti
cli
pop
mov
push
and
and
push
push
dec
rcl
mov
xchg
xor
outsl
or
mov
sbb
mov
les
pop
pop
mov
out
and
or
les
push
pop
and
adc
jl
icebp
dec
xchg
push
push
dec
mov
and
xor
js
test
xchg
sub
cmp
mov
xor
inc
fildll
mov
dec
cmp
mov
es
loope
pop
pop
cwtl
add
cmp
push
inc
es
dec
push
dec
dec
add
lea
lock
jg
loop
push
sub
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
call
pop
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
jae
gs
leave
ret
sub
xchg
mov
data16
mov
inc
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
lcall
xor
sbb
dec
stos
fmuls
lret
rep
cs
fbld
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
bound
decl
js
push
push
xor
or
sub
dec
inc
xor
jne
incl
sub
jo
popa
push
or
and
dec
cmp
inc
xor
jnp
dec
xor
ljmp
addr16
je
cmp
data16
and
cmp
jge
pop
dec
ds
sub
mov
sub
outsb
pop
sub
cmp
ds
adc
and
inc
xchg
cli
add
push
aas
push
and
xor
fists
adc
push
xor
jle
or
addr16
pop
int
jnp
cmp
pop
daa
inc
xchg
push
sbb
and
push
cmp
adc
sarb
and
push
and
lret
out
mov
push
inc
add
xor
xor
jmp
sarb
xor
xor
ja
inc
inc
xor
and
aaa
inc
push
inc
mov
push
inc
ss
cmovb
mov
ss
cmpsl
ss
mov
push
and
enter
or
js
push
inc
or
aam
or
or
adc
ret
ret
xchg
add
pop
add
lock
inc
sbb
mov
das
sbb
push
push
jnp
xorl
test
arpl
punpckhbw
xchg
rcrl
sbb
mov
out
cmp
loop
mov
shlb
pop
or
dec
pop
andb
fxch
xor
mov
cmpsb
rclb
nopl
cmp
pop
sub
pusha
add
loopne
aad
pop
jmp
or
pop
jp
mov
enter
cmpsl
pop
mov
fmull
sub
pop
xor
rcrb
dec
sbb
pop
mov
aam
bound
stos
fcom
rcrb
int3
mov
inc
sub
andb
inc
sbb
add
sbb
sbb
add
push
inc
movsb
cvtdq2ps
xor
loop
lret
rcrl
and
jp
js
sbb
mov
inc
shlb
pop
mov
in
adc
fildl
push
sbb
xchg
adc
mov
sbb
inc
sbb
js
push
mov
push
mov
adc
shll
icebp
adc
and
xchg
popa
mov
add
sub
int3
mov
adc
test
lds
or
and
and
pop
stos
xchg
in
in
inc
imull
je
xor
inc
mov
xor
jae
popa
insl
gs
cmp
addr16
cmp
mov
add
push
xchg
sub
sbb
pushl
insl
loop
add
and
lret
testb
mov
insb
dec
push
popa
je
xor
add
push
popf
insl
mov
inc
or
adc
divb
inc
add
pop
or
push
add
pop
lahf
adc
insl
insl
dec
ss
pop
inc
or
rorb
cmp
add
aas
pop
push
les
xor
xchg
pop
adc
int3
int
pop
add
and
scas
dec
mov
aas
jmp
aas
add
push
jae
ret
fiaddl
iret
imul
and
ret
movsb
and
pop
xor
push
xchg
mov
adc
adc
ds
lret
fsubs
xor
pop
or
sbb
loopne
call
mov
leave
das
mov
and
mov
push
pop
nop
pop
sbb
add
test
xor
dec
ljmp
ja
jb
pop
repz
add
clc
lgs
inc
jne
push
hlt
push
xor
dec
movsb
subl
jno
das
imull
push
or
ret
jl
or
adc
fiaddl
test
aad
pop
pop
push
int3
fcmovnb
pop
adc
or
or
jbe
test
call
enter
aas
mov
sbb
hlt
lahf
fs
jo
sub
jb
fisttps
cli
loope
adc
stos
push
outsl
imul
push
pop
iret
sub
fsubs
mov
adc
add
sbb
cmp
push
aas
mov
inc
cmp
dec
sbb
das
scas
sbb
mov
stos
inc
arpl
inc
pop
pop
inc
mov
sbb
aas
ds
in
push
aaa
data16
add
inc
arpl
inc
mov
push
mov
dec
or
cs
lods
add
push
sub
test
ror
add
rolb
and
xchg
sahf
cmpsl
pop
pop
add
pop
aas
sbb
movsb
out
out
mov
xchg
jle
subl
push
adc
mov
outsl
xchg
outsl
mov
pop
pop
pop
push
pop
push
aad
js
into
inc
jle
in
imul
jnp
and
dec
pop
repz
jge
xlat
cs
lods
inc
dec
cmp
or
xchg
add
xor
scas
aad
maxps
or
sbb
push
dec
sbb
pop
fwait
enter
scas
outsb
add
pop
cmp
icebp
sub
inc
dec
and
pop
mov
xchg
sub
pop
add
cmp
dec
call
adc
add
or
fidivl
jne
or
lods
xor
pandn
sub
jb
into
add
sbb
es
addr16
popa
mov
jne
imul
outsl
and
add
inc
push
rcrl
cmp
imul
and
cmp
add
push
inc
mov
jmp
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
js
xlat
jb
arpl
gs
inc
lcall
pop
or
dec
push
dec
jb
addb
xor
adc
ret
xchg
jo
in
sbb
rorb
aam
sub
rclb
out
mov
pop
xor
add
clc
shr
pop
loopne
lahf
sbb
push
lds
jo
xorl
add
push
adc
xorl
or
adc
push
xor
add
aam
sbb
lock
jmp
cmp
dec
int3
adc
dec
aam
and
sub
sbb
bound
add
shlb
pusha
cmpsb
pop
pop
xchg
nop
or
push
adc
sbb
mov
add
daa
adc
dec
in
or
aas
mov
dec
sbb
cmp
call
pusha
icebp
fcomps
pop
inc
mov
add
pop
adc
pusha
and
inc
stos
pop
sub
or
sbb
outsl
sbb
fstps
aam
mov
inc
loopne
sbb
adc
mov
xor
and
push
ficoml
pop
xlat
outsl
in
mov
xor
push
insb
mov
inc
imul
push
mov
sub
adc
xlat
mov
lea
dec
fnstsw
in
les
orb
xchg
dec
inc
xadd
sbb
inc
dec
mov
cwtl
sar
inc
dec
lock
jge
jge
adc
cmpb
aas
mov
jo
push
pop
pop
testb
sahf
add
add
jbe
bound
test
movsb
push
inc
sbb
mov
push
push
push
mov
in
push
into
incl
and
sahf
movsb
in
daa
push
stos
or
push
and
add
outsl
ror
push
aaa
ficoml
add
aaa
and
adcb
insl
adc
inc
daa
outsl
pop
add
insl
mov
pop
add
jg
xor
sbb
inc
push
daa
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
fisttpl
jecxz
xchg
pop
adc
push
push
rcrb
repz
mov
and
xor
ja
push
pop
mov
cwtl
jl
imul
pop
adc
pop
pop
in
dec
fadd
insb
push
push
pop
sahf
pop
iret
repz
jnp
ds
push
shrb
out
ds
pop
movb
test
pop
push
jl
cmpsl
mov
js
pop
push
jo
repnz
lcall
push
adc
rclb
and
dec
inc
jbe
mov
and
push
shrb
sbb
insb
pop
or
cmp
xchg
xor
sub
add
popa
ret
xchg
call
idivl
push
push
cwtl
out
push
mov
add
cmp
in
pusha
sarl
insb
or
xchg
mov
xor
mov
in
push
inc
clc
sbb
add
xor
mov
popa
sub
add
enter
inc
adc
inc
and
cwtl
movsb
in
stos
mov
in
test
scas
xor
cmp
ss
mov
xchg
cmp
adc
dec
ret
push
lock
xor
pop
scas
add
pusha
outsl
or
insb
out
popl
scas
fs
xor
enter
pop
mov
fmull
sahf
roll
push
lods
fsubrs
pop
insb
outsl
out
xchg
sub
mov
xor
sahf
or
xchg
xor
roll
fildll
xor
les
outsl
sub
out
push
lcall
iret
jae
int
sbb
nop
xor
loop
and
push
lock
shl
push
je
dec
fs
mov
add
mov
jg
add
push
ja
sbb
sub
enter
sub
mov
inc
push
push
pusha
pop
fildll
or
leave
add
and
mov
and
push
cwtl
inc
xchg
jmp
mov
mov
jbe
lock
scas
or
sbb
xchg
popa
mov
add
fdivl
pusha
cmpsl
pusha
cmpsl
add
jo
add
xlat
cmpsl
and
aaa
je
pop
push
aaa
addr16
fdiv
inc
in
mov
outsl
in
or
in
push
hlt
daa
in
leave
mov
add
inc
lods
dec
pop
sti
or
mov
pop
push
fs
push
fimuls
data16
lock
jg
push
mov
push
mov
or
idivb
pop
sub
xor
pop
add
sub
sbb
sbb
enter
sbb
divl
sbb
dec
popa
pop
popa
outsl
mov
aaa
push
push
outsl
jg
in
add
xchg
pop
test
daa
in
jnp
or
or
push
mov
in
ljmp
loopne
bound
mov
push
xchg
js
jo
push
rcrl
invd
bound
scas
bound
inc
sbbb
xlat
or
or
dec
test
mov
mov
xlat
or
lcall
push
xchg
sbb
or
pushf
fs
arpl
dec
adc
xor
pop
inc
arpl
or
aaa
and
loopne
aas
lock
and
and
arpl
push
sbbb
cmp
pop
or
aaa
mov
stos
or
ja
push
xor
add
or
sbb
add
and
xor
pusha
mov
or
jg
scas
in
pusha
add
pop
gs
add
mov
xchg
js
mov
cs
inc
add
sub
add
mov
notl
jb
jmp
xor
ja
ret
mov
das
outsl
add
ss
xchg
or
fs
cmp
cmpsb
andb
data16
loope
rclb
data16
add
xor
pop
jnp
in
sub
clc
cmpsl
add
and
xlat
shlb
leave
add
pusha
daa
push
out
mov
leave
aad
or
add
adcl
out
pop
sahf
cmpsl
jge
cmp
push
in
imul
iret
sarl
mov
inc
xchg
aam
cmpsl
sub
mov
inc
cmp
push
dec
or
and
jae
pop
enter
mov
sbb
add
dec
pop
or
fists
cld
or
xchg
or
add
xchg
dec
adc
cmp
lock
js
lahf
mov
imul
rorl
outsl
adc
jbe
pop
leave
add
sbb
inc
xchg
add
and
addr16
push
sbb
ret
out
jb
test
adc
adc
push
or
outsb
fcomps
and
addr16
pop
leave
jae
add
mov
int
sbb
push
imul
ffreep
iret
pusha
push
cmp
imul
aas
or
inc
nop
imul
fimull
rolb
lods
pop
mov
outsl
lods
and
xchg
insb
pop
mov
push
sbb
xlat
data16
add
out
iret
les
pop
push
jae
cmpb
sbb
addr16
pop
frndint
insl
add
add
jbe
jns
pop
mov
or
fmull
push
jns
mov
dec
repz
sbb
imul
jmp
sahf
out
jle
into
jmp
add
pop
stos
loope
fucom
jns
jge
jns
adc
lahf
out
mov
es
jle
stc
cmp
mov
sub
out
sahf
push
js
loopne
orl
mov
dec
mov
mov
push
out
cmp
push
movsb
divl
test
out
sahf
bound
fidivrs
out
test
push
ja
lahf
out
test
repz
mov
sahf
out
stc
cmp
repz
mov
jl
cmpsl
push
xor
imul
lea
cmpsl
stc
xor
ljmp
iret
repz
or
sbb
xchg
andb
cmpsl
stc
cmp
and
rorb
out
cmp
int
xchg
push
mov
jns
jns
push
xchg
cmpsb
push
frstor
xchg
out
repz
push
jg
stc
and
sahf
out
mov
out
sub
cmp
cmp
dec
out
jl
xchg
iret
inc
popf
insb
and
jle
stc
sbb
dec
mov
dec
mov
movsl
sahf
cmpsl
stc
cmp
sbb
aas
nop
stos
lcall
out
movsb
fistpll
iret
sarl
jo
out
sub
jge
imulb
stc
pop
test
test
jp
add
push
push
cwtl
add
push
inc
insb
xlat
cli
sahf
out
jl
lods
mov
lods
mov
ds
sarl
jb
loope
scas
xor
out
nop
mov
dec
mov
jl
iret
repz
in
dec
mov
or
rcll
xor
outsb
push
push
mov
ja
mov
mov
out
mov
jne
fwait
dec
repz
jb
sahf
out
mov
sar
cmp
repz
inc
jp
sub
repz
cmpsl
arpl
idivl
out
lds
stos
push
rcr
out
push
insb
jecxz
inc
int
js
imul
into
mov
int
xlat
rclb
sbb
scas
xchg
aam
andl
ss
add
inc
jns
and
fdivrs
dec
jno
pop
add
push
outsb
pop
leave
jae
jl
mov
dec
test
int
in
jns
aad
fldl
fdivrl
in
enter
adc
dec
ja
or
pop
paddq
test
inc
aas
add
dec
enter
std
and
pop
fidivl
pop
push
pushl
and
and
into
mov
push
mov
push
fs
jl
xchg
ja
pop
mov
inc
inc
pop
enter
push
dec
jo
mov
sub
dec
push
lock
dec
inc
add
out
fs
bound
loopne
scas
jg
xorb
aas
pusha
mov
and
jbe
outsl
fmuls
mov
jno
cs
dec
mov
fs
mov
mov
in
inc
shl
mov
mov
inc
sarb
dec
mov
test
mov
nop
pop
xor
shrb
adc
cmpsb
out
ss
adc
out
testb
or
cld
iret
adc
inc
stos
ljmp
ja
cmc
mov
pop
push
inc
pop
push
scas
push
cmp
push
cmp
cmp
inc
dec
push
xor
jne
daa
pop
mov
cmp
inc
in
push
dec
les
add
cs
push
aad
aaa
repz
lahf
or
sahf
xchg
xchg
sbb
ja
or
or
setp
adc
sarb
outsl
add
pop
jae
fldenv
and
sub
push
adc
je
incl
cmpsl
mov
pop
cmp
pusha
pop
popa
aas
les
inc
xchg
ja
adc
nop
dec
fadds
jnp
cwtl
pop
pushf
sbb
dec
pop
inc
out
loopne
cs
push
mov
mov
outsl
bound
mov
in
add
and
xchg
adc
dec
jns
cmp
jns
pop
adc
addl
push
jnp
jnp
mov
xchg
jp
sbb
loope
jns
mov
xchg
daa
int3
push
add
mov
mulb
jp
neg
leave
and
fiaddl
jnp
and
pop
jbe
out
cmp
repnz
push
mov
jnp
inc
sahf
dec
hlt
adc
jbe
push
leave
sub
testb
cltd
jnp
push
inc
outsl
popf
jo
xor
addb
cwtl
jnp
mov
jnp
jnp
fistl
call
inc
or
sahf
add
or
and
in
gs
jl
jl
inc
repnz
enter
inc
test
enter
mov
mov
cmp
or
adc
jl
inc
jl
out
sbb
jl
push
add
jns
out
jno
jl
xchg
jns
out
xchg
or
sub
dec
inc
push
enter
je
int3
jge
jge
jns
in
jge
adc
sbbl
jle
jle
es
cld
add
movl
ss
sub
mov
push
jge
pop
jge
jge
xchg
out
outsb
xchg
xchg
repz
dec
dec
pushf
movsb
lods
cmpsb
add
pushf
cmp
mov
mov
in
and
in
cmc
es
in
add
inc
mov
inc
jle
xchg
xchg
and
push
pop
popf
mov
mov
outsb
mov
in
mov
xchg
setnp
and
fdivl
push
pop
pop
and
add
mov
cmp
mov
femms
jg
push
jg
jg
xchg
pop
leave
xor
add
xchg
push
jb
fs
or
adc
xlat
test
add
in
in
inc
and
iret
insl
jl
add
ret
and
les
leave
xlat
lock
negl
sbbb
adcb
adc
iret
push
xchg
pop
adc
adcb
jae
inc
pop
add
imul
inc
push
leave
adc
xchg
andb
inc
and
or
daa
xor
mov
cmpsl
xchg
xchg
sbb
rolb
xchg
and
add
adc
lds
andl
jb
lcall
mov
pop
popa
shrb
pop
pop
pop
outsb
mov
test
pop
mov
mov
sbbl
testb
cmp
jmp
orb
or
pop
iret
repz
or
cmp
repz
inc
adc
repz
repz
adc
je
repz
adc
sahf
orb
sbb
sub
and
lods
nop
addb
in
cmp
in
je
push
clc
add
iret
add
fsubrl
and
fildl
iret
add
xchg
adc
aaa
cmp
or
xlat
xlat
mov
aad
ss
xchg
and
xchg
xchg
xchg
iret
xchg
inc
inc
test
dec
test
fildl
xchg
test
daa
jp
cmp
das
mov
outsb
and
push
mov
lret
inc
and
jae
inc
add
lods
mov
xchg
add
loop
or
fcompl
cmp
inc
es
out
test
aaa
adc
sbb
sub
sbb
push
lds
add
decl
xchg
pop
add
pop
test
mov
fiaddl
inc
xchg
mov
xchg
lods
insb
shlb
leave
mov
cwtl
adc
inc
push
xchg
xchg
push
das
mov
mov
shl
add
mov
test
mov
pop
out
mov
xchg
enter
inc
punpckhbw
rclb
jo
xor
adc
addr16
outsl
addr16
mov
iret
popf
js
pushf
xchg
adc
xchg
xchg
lods
mov
mov
in
inc
jb
xchg
push
mov
loop
xor
cmp
das
das
das
push
mov
mov
ficompl
mov
fisttpll
leave
xchg
shrl
cs
hlt
adc
pop
xor
aam
shlb
add
push
pushf
out
push
and
daa
push
mov
pushf
xchg
add
adc
inc
outsb
scas
test
mov
jge
sub
mov
lea
mov
das
test
mov
mov
das
das
das
enter
fmuls
das
call
mov
mov
das
das
das
or
and
sub
in
in
push
or
in
or
or
in
in
push
add
in
add
add
xchg
adc
cmpsl
and
mov
cmp
enter
mov
xchg
and
into
aam
jb
pop
add
mov
insl
mov
and
daa
dec
add
inc
scas
jne
jno
jns
jo
pop
in
outsl
push
pushf
xlat
movsb
mov
ss
mov
push
repnz
jns
fmull
push
in
dec
push
loope
in
decl
test
cltd
push
xchg
push
das
dec
jb
fisttpll
aaa
mov
jbe
mov
push
cmp
lock
test
adc
sbb
jmp
bswap
sarb
dec
or
clc
or
or
lea
das
call
add
lock
or
pop
arpl
pop
push
aas
xchg
add
jl
repnz
pop
mov
xchg
inc
pop
or
aaa
imul
adc
cs
mov
in
xchg
add
lea
lea
lds
cmp
lea
cld
xchg
xor
cmp
jbe
pop
lahf
cs
add
scas
mov
pop
mov
repnz
xchg
loop
add
mov
or
enter
mov
mov
cmp
inc
mov
in
in
je
jl
scas
cmp
dec
dec
or
lahf
cmpsl
mov
dec
dec
dec
mov
push
iret
repz
push
jmp
repz
loopne
decl
push
or
cmp
and
or
mov
sbb
js
test
in
ss
mov
mov
jns
fcmovnbe
pop
flds
loope
xorb
lgdtl
addr16
enter
cmpsl
movsl
xlat
aam
adc
je
les
daa
in
ds
pop
pop
aas
nop
inc
nop
daa
movl
xchg
iret
add
xchg
sahf
xchg
mov
dec
xchg
ja
add
nop
call
push
ret
mov
pop
test
jg
pushf
xchg
add
mov
xchg
add
adc
and
loop
xchg
xchg
xchg
nop
ljmp
flds
cmp
enter
xchg
push
pop
aas
out
pushf
jmp
xchg
jo
pop
mov
or
leave
adc
mov
repnz
inc
notb
incb
xchg
push
xchg
xchg
enter
xor
out
aaa
ja
mov
dec
test
add
adc
leave
leave
stos
mov
xchg
pop
int3
jb
enter
xchg
loop
in
xchg
inc
mov
clc
xchg
add
mov
or
cltd
jb
enter
decl
push
xchg
pusha
xchg
inc
mov
imul
xchg
pop
daa
daa
and
push
repnz
cmp
or
leave
leave
leave
leave
icebp
cld
sbb
jb
pop
xchg
adc
fs
mov
xchg
ds
out
inc
sahf
xchg
push
add
and
add
iret
add
mov
mov
jae
pextrw
ja
add
inc
imul
dec
rorl
push
test
lock
xchg
mov
lods
in
mov
inc
movb
inc
mov
sub
adc
daa
cmp
inc
inc
pop
pop
cs
cmp
jo
jge
test
push
add
enter
xchg
movsl
xchg
lods
das
dec
aaa
jns
mov
or
js
cmp
int
xchg
movlps
cmpxchg
xchg
daa
sbb
leave
enter
xchg
dec
mov
ja
add
cmp
mov
jb
shrl
clc
ja
xchg
icebp
add
leave
lret
andl
cwtl
sbb
mov
push
xor
into
sub
push
fistpl
push
js
sbbb
fisttps
mov
in
dec
dec
mov
add
dec
dec
sahf
out
add
fninit
jns
sbb
cwtl
dec
repz
sti
cwtl
jbe
jns
add
sbb
dec
dec
outsb
fisttpll
or
or
or
dec
dec
pop
push
add
dec
add
sbb
out
sahf
out
sub
xor
out
sahf
cmp
daa
dec
aaa
jns
mov
arpl
repz
imul
jnp
inc
jle
es
sbbl
cmp
test
loopw
ljmp
iret
or
add
adc
pop
lar
and
mov
dec
in
repnz
push
outsb
pcmpgtd
xchg
iret
in
pop
cmpsl
push
and
xchg
leave
leave
add
cltd
lcall
leave
test
lcall
js
in
in
in
in
neg
add
or
fisubs
cs
fwait
out
sub
iret
or
push
pop
dec
fsubrp
shrb
fwait
iret
jne
add
jbe
ror
jge
lea
cmpsl
je
mov
inc
or
or
jmp
pop
xchg
ret
test
mov
enter
mov
ss
jmp
repz
sti
pop
add
or
addr16
cs
out
ss
inc
cmp
rclb
movsb
aad
pop
xor
add
and
mov
in
mov
mov
add
mov
mov
les
sbb
mov
jb
ljmp
push
jg
cvtpi2ps
cmp
xchg
cmp
popa
push
add
out
lcall
stos
mov
mov
dec
lret
or
iret
repz
pop
ljmp
cmp
push
add
iret
repz
or
adc
sahf
scas
nop
push
leave
addr16
movsb
cmp
popf
push
sahf
out
add
cmp
outsb
add
ja
push
xchg
pop
call
out
mov
test
daa
clc
push
mov
scas
fbstp
xchg
out
push
scas
into
sahf
adcb
dec
pop
mov
push
adc
xchg
dec
cs
mov
inc
das
addr16
outsl
jb
mov
jge
pop
setae
fmulp
pop
pop
outsl
pop
test
aam
mov
test
inc
add
out
mov
or
adc
pushf
or
pushf
jo
out
ja
ja
pop
push
lahf
negl
lcall
jae
sub
lar
into
repz
invd
pop
or
and
or
inc
mov
ds
arpl
out
add
pop
addl
iret
repz
mov
pop
stos
pop
mov
sahf
out
pop
mov
lret
and
cmp
mov
mov
test
jns
daa
cwtl
mov
push
add
sahf
out
add
add
inc
mov
dec
mov
jo
pushf
jp
push
decl
adc
test
outsl
mov
daa
dec
push
lea
mov
nop
push
sub
loopne
test
push
out
lock
xchg
xchg
repz
push
mov
int
movl
enter
pop
test
inc
insb
stos
inc
xchg
stos
cmp
cmp
mov
pop
xchg
or
mov
mov
ss
stos
icebp
testb
push
add
stos
inc
stos
cmp
cltd
inc
into
fstps
loop
in
dec
out
mov
pop
pop
add
sbb
jns
out
or
or
jns
out
inc
or
or
pop
push
push
mov
mov
dec
inc
cmp
mov
mov
pusha
xchg
xor
or
movsb
sbb
pop
mov
xor
pop
cmp
xor
call
or
sbb
das
jae
out
in
xchg
lahf
in
fisttpl
pop
push
pop
scas
movsb
jae
cmp
movsb
mov
dec
gs
or
lods
sbb
roll
add
inc
mov
movsl
sbb
push
pop
mov
jbe
adc
or
inc
outsl
inc
mov
outsb
xchg
inc
sarb
addps
mov
pop
pusha
punpckhbw
jl
test
mov
and
out
mov
dec
movsl
movsl
fwait
pop
push
aas
xchg
xchg
cld
jne
pop
mov
pushf
fsubl
cmpsl
into
xchg
out
pushf
fidivs
fldcw
or
adc
add
pushf
pushf
pop
and
pop
gs
cmpsl
fwait
lsl
cmpsl
push
mov
cwtl
push
repnz
test
das
sbb
fidivs
push
add
and
adc
inc
cmpsl
ds
add
shlb
xchg
xor
cmpsl
out
andb
cmpsl
xchg
cmpsl
mov
leave
inc
repnz
dec
and
add
incl
test
mov
sbb
movq
test
pop
mov
push
mov
fdivrl
inc
daa
dec
cmpsl
push
mov
mov
mov
xchg
xchg
xchg
jge
lea
jns
pop
movsl
add
pusha
rorb
add
mov
jns
daa
daa
call
divb
repnz
test
ja
in
and
mov
lcall
popf
xchg
xchg
popf
daa
cmpsl
pop
seta
fcmovnb
xchg
cmpsl
mov
cmp
mov
addr16
add
jnp
pop
stos
ljmp
stos
xor
lahf
add
push
jg
pop
push
ja
stos
mov
outsb
and
ja
cwtl
je
ja
push
nop
lsl
scas
fimull
lock
mov
insl
daa
mov
mov
pop
sahf
out
lidtl
add
fisttpl
je
out
jecxz
jmp
pop
mov
stos
sti
stos
js
mov
punpckhbw
inc
pushl
fs
stos
pop
add
pop
or
pop
mov
pop
xchg
sbb
scas
fs
daa
mov
leave
test
mov
xchg
cmpsb
stos
out
in
mov
lahf
push
add
cmpsl
fwait
cmp
sysret
mov
stos
stos
lock
lcall
mov
fisubs
xchg
unpckhps
dec
and
cwtl
mov
cmp
cmp
add
out
mov
dec
mov
sahf
xchg
stos
or
fsubp
in
cmp
pmaxsw
idiv
sahf
negl
push
lods
pop
push
iret
es
pop
cs
jns
ss
in
je
pop
lods
lahf
push
lods
frstpm(287
in
push
lods
lods
inc
lods
dec
pop
out
jns
push
adc
adc
jns
xchg
outsb
jbe
jle
seto
mov
jb
dec
dec
and
inc
mov
mov
add
popf
or
aam
push
fs
ja
adc
out
outsl
scas
fistps
outsl
sarb
xor
pop
mov
jns
scas
push
das
cvtps2pd
mov
bound
lahf
push
pop
jnp
jle
pop
popa
add
popa
inc
mov
xchg
iret
sarb
fwait
daa
mov
mov
testl
adc
scas
jnp
leave
enter
enter
push
in
into
inc
cld
scas
jg
je
insl
xchg
scas
push
ja
push
fnsave
adc
inc
jns
out
pop
pusha
add
add
aaa
sidtl
js
and
add
nop
dec
ds
pop
stos
pop
add
outsb
cmp
cltd
out
pop
push
and
das
ficoms
mov
and
mov
inc
mov
xchg
xchg
xor
mov
outsb
mov
ja
jl
pop
xchg
iret
add
pop
jo
xor
enter
push
dec
aam
fcompl
cmpsl
xchg
push
mov
or
cmp
and
movhps
add
iret
repz
daa
add
add
fwait
cmp
add
push
inc
mov
pslld
sahf
pop
push
mov
jp
sbb
repnz
repz
cmp
mov
or
iret
leave
mov
or
fstps
mov
pop
pmaddwd
mov
add
dec
xchg
sub
enter
mov
mov
emms
repnz
push
push
jno
push
bnd
dec
sahf
or
cs
dec
dec
add
dec
dec
dec
mov
sahf
pushf
pushf
pushf
fdivp
incl
mov
dec
dec
inc
and
push
imul
dec
test
dec
loope
sbb
repz
sub
iret
repz
fmull
pop
jns
sbbl
mov
in
aad
mov
and
leave
les
loope
jb
or
leave
mov
sub
leave
leave
inc
pop
arpl
and
loop
mov
xchg
and
into
mov
dec
dec
dec
cs
fsubrp
mov
dec
dec
cli
or
sbb
cmp
cmp
es
add
shll
mov
leave
in
mov
shlb
enter
fsub
repz
repz
push
call
sbb
clc
or
out
push
or
or
add
fwait
out
push
outsb
sub
push
das
adc
jnp
enter
push
mov
pop
mov
pop
xchg
out
sahf
arpl
add
jb
ds
repnz
mov
mov
repnz
out
mov
repnz
push
mov
push
mov
xor
repnz
aas
mov
repz
repnz
mov
pop
iret
repz
jne
andb
and
repz
and
iret
repz
iret
repz
shrl
or
sub
cvttps2pi
and
sahf
out
cs
idivl
stc
sahf
dec
sbb
das
sub
pop
xor
xchg
and
incl
dec
mov
popf
test
xchg
fnsave
imul
daa
daa
add
fisubrs
daa
les
ja
cmp
frstpm(287
paddsw
pushf
in
cmp
mov
fsubs
mov
mov
insl
add
cltd
dec
ds
nop
fwait
push
cmp
daa
iret
add
daa
iret
xrelease
repz
push
fsubrl
aas
dec
or
sub
leave
repz
aaa
adc
adc
repz
cmp
arpl
repz
cmp
jns
test
leave
lcall
iret
leave
mov
sbb
leave
repz
fsub
and
fnstcw
sahf
std
mov
add
repnz
mov
push
out
mov
mov
mov
cmp
cmp
pushf
mov
mov
repz
pushf
push
pop
punpckldq
xchg
out
cmp
jb
adc
daa
daa
mov
jp
pusha
andb
mov
outsb
xchg
mov
sub
outsb
jbe
iret
leave
repz
repz
ret
sub
mov
push
xlat
rclb
fwait
das
mov
cmp
ss
mov
add
cmp
repz
xchg
popl
xchg
cmp
repz
lahf
or
out
mov
or
femms
in
sahf
out
bswap
adc
out
cmp
fisttps
adc
out
push
adc
cmp
xchg
div
dec
call
test
push
fsts
rcrb
cmovns
sub
cmp
and
sbb
leave
outsb
mov
ror
es
ja
incl
out
rol
repnz
aas
rorb
jae
dec
xlat
xchg
daa
popf
out
mov
lods
lgs
xchg
in
loopne
call
lock
clc
mov
addl
lret
shll
cmp
xchg
daa
daa
pop
leave
test
outsb
leave
leave
insl
add
jbe
jle
repnz
cmp
mov
xchg
or
jb
roll
ror
mov
jae
xor
in
sahf
fsts
ret
jo
lea
aaa
jbe
pop
cmp
xchg
in
jb
lret
mov
xchg
outsl
popf
shld
add
mov
cmpsb
ret
repz
push
int
and
push
cmp
and
mov
ret
adc
sbb
and
jg
cmpsl
jbe
xor
inc
ret
dec
push
pop
xchg
xchg
out
clc
jle
leave
repz
fcoml
dec
es
iret
add
in
in
jns
rcr
loope
mov
add
popf
stos
cmp
add
mov
jg
iret
mov
les
cmp
add
cmp
dec
add
daa
iret
pop
fs
out
ljmp
leave
rorl
clc
xchg
negl
cmpsl
pop
scas
divl
fidivl
ljmp
rorb
das
sbb
xor
add
mov
jo
add
pushf
cmp
add
sahf
fcmovne
fwait
mov
cmp
mov
fisubrs
mov
out
lds
and
or
and
mov
nop
cltd
mov
xor
imul
mov
push
xchg
xchg
inc
repnz
add
mov
iret
push
add
repz
syscall
loope
mov
in
test
mov
and
cs
cmp
lret
inc
jp
inc
pop
dec
outsl
pop
lret
lret
lret
lret
gs
jo
jnp
xchg
lret
lret
lret
lret
xchg
pushf
cmpsl
mov
lret
lret
lret
lret
mov
faddp
jmp
hlt
lcall
nopl
cmp
cmp
sbb
cmp
cmp
sbb
push
adc
adc
ds
adc
mov
ss
jns
out
xor
sahf
out
sahf
xor
insl
xor
jns
xorl
cmp
repz
movsb
cmp
cmp
cmp
rcrb
ds
ja
jns
out
icebp
push
inc
cld
sahf
out
dec
cmovae
leave
inc
adc
sbb
sahf
out
dec
ds
dec
dec
leave
leave
in
in
pop
pop
push
fwait
cmp
leave
orb
xchg
cmpsl
push
mov
mov
ret
fmul
xlat
pop
pop
daa
jp
adc
push
lret
xchg
and
lret
and
cmp
aaa
lret
dec
lret
in
xchg
lret
outsb
lret
xor
filds
hlt
repnz
lret
fistpll
enter
lret
out
adc
repnz
std
pop
decb
lret
cmp
jnp
adc
sbb
push
sbb
repz
repz
aas
sbb
dec
push
push
pop
pusha
and
jbe
and
jns
and
mov
lods
das
mov
cmp
jae
sub
sub
enter
out
psubd
fiadds
in
int3
sbb
es
pop
mov
xor
pop
cmp
iret
jae
cmp
cmp
iret
repz
mov
repz
aas
lahf
stos
lgs
das
push
inc
in
jae
loope
inc
fdivp
int3
add
addr16
enter
and
dec
mov
push
pop
punpcklbw
fbstp
xchg
cmp
int
int
fistpll
mov
jae
stos
stos
add
add
mov
inc
add
out
jmp
push
daa
sub
in
sarl
or
cmp
sbb
adc
sbb
add
add
sahf
outsb
repnz
push
xor
add
dec
inc
dec
push
into
pop
shll
jg
into
push
and
jl
pop
mov
leave
leave
add
fiadds
lods
mov
pop
fcoml
xchg
push
xlat
xlat
mov
dec
dec
outsb
pop
out
out
idiv
in
add
iret
pop
pop
fcomp
movsl
les
pop
inc
cld
outsb
repnz
dec
push
mov
iret
sahf
out
lea
insb
pop
ja
jns
out
orb
or
mov
sub
ficoml
in
repz
cmpsb
sti
cs
and
push
sbb
sahf
out
sahf
sbb
sbb
rorb
sbb
push
out
cmp
pop
and
push
and
mov
jg
setne
leave
repz
daa
mov
das
int3
sarb
test
fmuls
fiaddl
add
add
dec
sahf
out
add
ds
add
inc
dec
sar
fcmove
leave
leave
leave
push
xorl
mov
aaa
jns
out
push
iret
pop
fimull
repnz
dec
add
shr
repnz
roll
rclb
push
push
in
adc
scas
sbb
daa
shl
jns
in
sarb
repz
xchg
push
pop
pop
imul
iret
sbb
push
mov
leave
repz
push
xchg
movq
mov
stos
mov
and
cmp
jae
int3
pop
and
sahf
out
in
push
sub
sub
add
add
and
push
push
dec
sarl
dec
inc
add
sub
jmp
inc
addr16
pop
add
dec
shl
inc
pop
pop
push
shll
cs
cmp
xchg
js
jle
cmp
or
lahf
push
jg
sarl
shl
sar
shl
cltd
mov
pop
push
pop
xchg
out
sahf
sub
xor
aas
pop
mov
je
pop
pop
dec
aam
push
jns
xchg
xchg
aam
aam
aam
push
adc
sahf
out
adc
in
mov
push
push
outsb
iret
push
mov
es
out
out
aam
testl
mov
and
dec
sahf
aaa
jb
aad
push
add
jns
leave
rorl
add
dec
push
push
push
pushf
je
out
pop
or
jae
repnz
or
cmp
mov
dec
sahf
adc
mov
rcrb
andb
sbb
loopne
scas
call
mov
adc
mov
pop
push
pop
sub
enter
aaa
popl
dec
iret
repz
pop
push
push
arpl
outsb
or
repz
cmp
test
jb
jns
lcall
jb
jb
rcr
out
and
jp
std
or
sahf
out
mov
cs
sbb
fucomi
in
sbb
dec
dec
bswap
jae
mov
pusha
and
outsb
repnz
jbe
and
cmp
repnz
es
cmp
mov
popf
cmp
leave
ret
into
sub
in
jns
out
sub
mov
setle
xchg
fucomi
push
pop
adc
sbb
inc
js
jns
push
aaa
pop
push
lds
incl
or
lret
repz
nop
stos
add
mov
daa
xchg
test
mov
push
mov
mov
cmp
and
push
rclb
iret
aas
inc
push
add
push
inc
inc
aas
movsb
dec
and
add
xchg
mov
aaa
mov
aaa
cmp
push
sahf
out
repnz
sbb
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
adc
fucom
push
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
insl
push
in
in
sahf
and
jb
pop
leave
in
jbe
andb
cmpb
daa
iret
jae
test
xchg
sub
daa
movsb
fbld
daa
mov
aas
xlat
sbb
data16
jo
xor
push
sahf
out
sahf
xor
and
sbb
cld
call
iret
repz
aam
int3
fdivp
cmp
enter
mov
out
mov
movsb
cwtl
nop
repz
in
addb
jo
iret
repz
pop
push
inc
inc
cmp
dec
loope
cmp
adc
add
push
inc
inc
ds
test
mov
inc
add
in
cmp
add
add
inc
popa
sbb
dec
sbb
mov
std
mov
sbb
xchg
in
sub
adc
cmp
ss
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
jmp
in
inc
mov
mov
in
jle
and
call
mov
dec
mov
fidivrl
xor
fcomp
loopne
mov
xor
divb
mov
lahf
sbb
mov
or
add
popf
imulb
push
in
or
and
jp
adc
inc
aaa
push
jle
pmovmskb
add
mov
lcall
or
mov
rcrl
out
and
icebp
mov
out
cmp
repnz
out
xchg
out
push
adc
iret
repz
in
sbb
jns
out
sbb
dec
repz
push
sub
enter
lcall
jmp
clc
ljmp
jns
jp
push
out
or
cmp
push
mov
add
cmp
pop
mov
jl,pn
dec
icebp
xchg
push
add
popa
add
pop
aam
inc
pop
dec
pop
or
js
scas
and
fldl
inc
xchg
push
cwtl
push
jae
xorb
sahf
call
push
push
mov
fst
inc
dec
inc
adc
push
push
fdivrl
xor
daa
test
xor
out
aaa
jno
negb
pop
repnz
arpl
aas
inc
sub
inc
add
arpl
out
or
fwait
mov
adc
xor
add
repz
sbb
sbb
cmp
mov
aas
lock
and
jns
push
and
dec
sbb
cld
lock
add
cmp
adc
fsubl
das
out
jns
out
or
or
adc
out
sbb
in
enter
repz
rcrb
push
mov
cmp
repz
and
repz
and
mov
fadds
orb
test
out
xor
dec
push
jmp
mov
es
outsl
in
jg
cmp
xorl
jg
cmp
iret
repz
pop
js
mov
repz
imul
insl
add
push
add
pop
ja
out
sbb
das
push
dec
push
inc
ljmp
pop
pop
das
dec
inc
pop
enter
enter
inc
pushf
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
addr16
lcall
push
pusha
les
add
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
sbb
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
incl
loop
mov
jp
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fmuls
das
pop
and
repnz
pop
inc
inc
je
inc
inc
push
dec
sub
jnp
cmpsl
add
cmp
popa
push
out
mov
les
hlt
push
xor
fisttps
add
xchg
fs
xor
push
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
ljmp
xchg
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
mov
fcomip
leave
mov
jecxz
fdivs
jne
filds
or
enter
lods
xor
es
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
mov
mov
jl
das
adc
cmp
jmp
nop
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
adc
add
leave
pop
js
stc
lcall
in
test
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
jmp
sbb
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
shll
jmp
outsb
xor
mov
sarb
incl
in
add
pop
dec
or
cmp
add
daa
adc
or
and
ljmp
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
orl
mov
in
mov
mov
add
inc
call
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
decl
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fcomip
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
fbstp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
lcall
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
add
es
lds
or
add
mov
cmpsl
call
cmp
ret
sbbb
pop
mov
fs
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
scas
and
inc
imul
scas
fcompl
fldenv
filds
push
dec
adc
lds
cld
fidivrs
mov
jmp
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
test
inc
add
push
sub
mov
or
sbb
add
sub
inc
pop
dec
sahf
imul
or
push
sti
add
cmp
repz
fcomp
cmp
repz
fstp
loop
iret
and
call
repz
cmp
hlt
cmc
div
clc
stc
jmp
sti
cld
pop
aas
sarb
adc
aas
adc
or
je
dec
and
and
cmp
les
dec
bound
jbe
inc
mov
bound
inc
push
sti
int
dec
popa
je
push
fadds
in
fistpll
and
cmp
sub
pop
inc
jno
xor
pop
inc
cmp
sti
jg
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
data16
les
push
dec
inc
jo
adc
testb
or
adc
jb
dec
xchg
or
add
scas
fs
gs
je
lods
test
jbe
or
inc
aas
sbb
xor
loope
xor
je
inc
inc
dec
dec
js
push
add
addl
sbb
xor
insb
inc
lds
push
dec
or
cmp
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
push
aas
lods
fadds
add
sbb
fcoms
cltd
and
jae
insb
xchg
daa
pop
add
and
sbb
mov
inc
inc
mov
inc
pop
jnp
mov
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
or
mov
mov
pop
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
not
or
jo
popf
pop
inc
cmp
aam
inc
adc
add
lret
cld
push
add
or
pop
outsl
xor
leave
xor
lcall
test
mov
or
rclb
inc
xorb
vmread
frstor
rcll
dec
popa
jo
cmp
mov
outsl
adc
mov
fdivs
adc
push
lds
xor
pusha
xor
nop
test
pop
cmp
arpl
cmp
mov
jo
push
dec
adc
push
xchg
sbb
outsl
insb
jns
das
aad
or
inc
jb
push
mov
mov
cmpsl
mov
arpl
inc
mov
test
test
push
bound
ja
inc
jbe
push
shll
mov
dec
ja
dec
xor
pop
das
adc
int3
lcall
push
add
add
xorb
jmp
cld
xchg
adc
lods
xor
pop
inc
dec
test
xor
sar
adc
aas
adc
aas
adcb
outsb
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
xchg
cmp
pop
push
jnp
cltd
pusha
in
insl
mov
add
aaa
inc
jne
push
rcll
adc
push
xorb
mov
mov
push
sub
andb
push
add
and
push
insb
cs
add
dec
mov
in
js
decl
jecxz
or
cmpsb
push
sub
dec
xor
mov
mov
xchg
or
lods
inc
js
mov
stc
pop
sub
call
out
dec
movsl
xchg
int3
xchg
pusha
test
fidivs
sub
mov
inc
inc
in
xchg
daa
incl
fs
fcoml
cli
dec
jecxz
and
test
xor
push
enter
inc
adc
sub
lods
stos
lock
testl
pop
push
js
jg
call
das
cmc
cmp
scas
aas
int
cltd
rolb
dec
hlt
shrl
mov
shrl
cmpsb
jmp
daa
mov
lock
sbb
ds
leave
repz
cmp
stos
push
xor
jmp
or
scas
ss
mov
decb
push
xchg
add
gs
adc
pop
incl
mov
mov
loope
xchg
xchg
lret
adc
loop
add
lods
dec
push
je
sbb
sbb
sarb
sub
push
xchg
insb
std
out
adc
inc
push
lods
sbb
xor
inc
js
popa
or
cmp
sbb
dec
call
ja
add
lock
or
in
mov
fidivrs
incl
dec
push
ja
inc
into
je
dec
push
add
stc
push
test
or
cwtl
sub
decl
dec
xor
movsb
mov
push
ja
fidivrs
mov
cld
push
imul
pop
lock
jo
roll
popf
mov
jo
mov
mov
pushl
xor
jmp
es
out
inc
sub
pop
pushf
xchg
insl
mov
decl
jbe
ss
xchg
shlb
jle
lock
test
cmp
mov
push
pop
xchg
adc
lds
shlb
insl
pop
push
jle
jo
cmp
sub
inc
lcall
loop
add
jg
out
or
test
outsl
fidivrl
incl
pop
aas
fdivs
sub
arpl
push
jno
daa
mov
mov
test
jmp
ljmp
out
loop
ss
andb
stos
icebp
sbb
ljmp
push
xchg
loopne
add
mov
nop
or
push
adc
jg
sub
push
inc
jge
cmp
xor
xor
jmp
mov
idiv
push
in
mov
sub
in
push
jae
jg
stos
xor
bound
cmpsl
roll
insb
add
aad
cmp
ljmp
push
pushf
sbb
lcall
clc
js
mov
sbb
mov
ret
outsb
outsl
ljmp
push
pop
mov
aam
lcall
shll
pop
aas
inc
loop
rcll
scas
and
sbb
jne
mov
roll
mov
and
hlt
push
and
dec
fisubs
ljmp
fcoms
imul
ss
xchg
jne
imul
mov
dec
mov
je
mov
add
dec
dec
imul
stos
aad
push
sbb
call
mov
into
mov
xor
xchg
sbb
push
popf
xchg
pushf
jp
sbb
enter
jno
ljmp
sub
pushf
sub
xor
add
ss
jb
jb,pt
call
add
icebp
sbb
outsb
dec
ret
arpl
popa
mov
dec
je
push
mov
dec
push
xor
adc
out
lods
loop
pushf
mov
lret
xchg
outsb
push
hlt
ds
addr16
jg
push
sbb
jmp
daa
outsl
sarl
cmc
push
pop
inc
rcrb
jl
bound
jg
push
jle
fcompl
loope
or
sbb
aas
inc
inc
pushf
frstor
repz
sub
test
xchg
mov
add
mov
and
sarl
aaa
std
arpl
fs
call
push
pusha
hlt
int
jb
popf
lods
add
jmp
mov
mov
call
mov
jno
mov
and
ror
push
adc
sub
std
xchg
cs
mov
push
pop
jmp
test
fadds
sub
jnp
mov
std
pop
add
cmc
decl
adc
scas
sub
pushf
cmpsl
adc
fnstcw
stos
xorl
ja
outsb
or
mov
pop
cmpl
mov
xchg
cmp
outsb
inc
lock
out
outsb
add
dec
push
mov
or
push
jg
dec
push
inc
mov
incl
sbb
pop
sub
jmp
pop
jge
test
add
ljmp
enter
mov
pushf
cmpsl
jge
test
jmp
insb
cmp
pop
cmp
testb
adc
movsb
sarl
rcr
lods
sbb
popf
add
xlat
sti
and
lret
pop
int
push
mov
lcall
jo
cmp
sbb
dec
lret
mov
femms
inc
cmpsb
mov
incl
mov
cli
inc
inc
fisttpll
mov
bound
pop
add
or
jg
fstl
fwait
je
in
aaa
inc
inc
jl
popf
scas
add
scas
dec
adc
inc
fiaddl
leave
mov
add
imull
sub
pop
cld
ljmp
mov
fdivrs
mov
cmpsb
inc
push
stos
push
sar
jmp
int
js
jg
adc
mov
pop
lods
inc
adc
jns
out
fldt
sti
fs
jg
xchg
test
repnz
dec
stos
fbld
shll
rol
movsb
dec
xchg
mov
ljmp
out
sbb
mov
add
shl
lock
pop
sub
addr16
adc
push
cld
call
pop
in
push
rolb
insl
fimull
jg
testb
and
mov
pop
clc
clc
pop
inc
roll
xchg
push
pusha
xlat
mov
jno
pushl
std
push
dec
inc
in
sti
sbb
pop
cmpsl
mov
arpl
sub
cmp
daa
jmp
ljmp
inc
shl
rorb
xchg
mov
clc
dec
in
push
es
cltd
decl
call
lock
iret
and
xor
mov
popf
xor
sbb
cmc
adc
add
aaa
mov
xchg
decl
xchg
mov
lret
cmp
sub
xlat
cmp
gs
out
and
repnz
mov
aad
into
cmp
nop
jle
lods
fs
xchg
bound
movsl
mov
jp
adc
notl
mov
lret
inc
fistps
mov
lcall
shr
movsl
mov
or
or
xchg
jecxz
repz
and
push
cmp
pop
hlt
pusha
ret
mov
adc
push
adc
lahf
and
pushl
stc
xchg
inc
and
inc
stos
xchg
dec
jle
rclb
dec
jb
pop
nop
jbe
cmp
push
dec
lret
ja
incl
rcrb
mov
lods
sbb
mov
fsubl
inc
ljmp
movsb
dec
pop
scas
lret
mov
daa
in
jmp
or
xor
mov
int3
data16
sahf
lcall
repz
lret
aam
out
mov
jns
jl
lods
sub
pop
in
scas
mov
ss
mov
call
xchg
inc
push
ljmp
cmpsb
mov
or
pop
lret
aaa
jg
push
call
addl
sub
mov
mov
sbb
push
sub
xchg
fdivrs
mov
xchg
movsb
pop
outsb
imul
fstp
orl
push
lcall
call
dec
push
mov
inc
mov
xor
pop
cmc
jle
jae
pop
dec
out
cs
sbb
dec
outsb
arpl
daa
stos
test
fs
push
jle
and
stos
sbb
decl
out
and
jns
mov
or
push
xchg
jecxz
movsb
pusha
sub
lcall
sbb
push
lods
cmc
mov
xor
push
jo
mov
push
decl
mov
sbb
add
popf
data16
push
jmp
sbb
sbb
sbb
ljmp
loop
aaa
gs
sti
jae
xchg
shlb
test
mov
int
repz
jmp
pop
cmc
push
decl
ret
in
ss
mov
and
adc
pop
incl
cld
decl
out
subl
insb
and
mov
push
ss
stc
mov
out
dec
out
add
out
cli
not
jp
mov
xchg
cmp
cmpsb
jge
cli
mov
decl
jle
jae
dec
jae
xchg
popf
pop
call
cmp
inc
adc
fistpl
mov
mov
daa
mov
cmp
jno
adc
fxch
dec
sbb
loope
add
int3
xchg
js
icebp
xlat
push
jg
adcl
lcall
pushf
inc
push
sbb
jle
jne
ja
aas
enter
mov
test
push
pushl
adc
mov
ficomps
jmp
inc
into
test
into
adc
bound
mov
fistps
test
jmp
add
mov
or
push
stos
neg
pop
xchg
shlb
mov
cmp
dec
call
iret
sbb
pop
xchg
adcl
incl
cld
call
jnp
xchg
and
add
stos
cmc
mov
lock
pushl
or
cmp
cmpl
pop
mov
adc
jg
inc
subb
ret
clc
test
idiv
imul
outsb
hlt
xchg
and
jne
int
jae
inc
ror
mov
cmp
pop
aad
sbbb
cmp
test
xor
jle
sbb
sbb
shrb
stos
jg
call
in
xor
mov
std
inc
rorb
sub
loopne
xchg
or
mov
or
xlat
into
nop
lods
jne
jl
shrl
push
test
mov
data16
jns
je
push
inc
movsl
mov
pusha
pop
add
cli
adcl
cmpsl
xchg
mov
out
push
in
mov
loope
xor
enter
aaa
mov
repnz
adc
pop
popa
mov
mov
enter
pop
ljmp
adc
add
or
test
pop
cmp
inc
cs
mov
mov
mov
scas
mov
cmpsl
inc
into
push
dec
xor
ret
js
pop
cmp
pop
xchg
xchg
enter
pop
lods
inc
add
xchg
adc
push
mov
adc
movl
data16
inc
xchg
jmp
xchg
bound
jge
fisttpll
out
js
push
xlat
mov
leave
out
lods
xchg
xchg
mul
mov
popl
decl
dec
cmpsb
das
pop
cwtl
push
fnstcw
sub
mov
push
bound
adc
pop
inc
ljmp
incl
inc
lahf
std
loopne
shll
loopne
stos
sarb
icebp
jno
inc
push
push
repnz
xor
imul
cmp
adc
push
cmp
cmp
push
icebp
fstpt
sar
popa
in
rorl
push
mov
sub
loopne
out
rorl
incb
pop
sbb
or
ret
popf
std
jecxz
enter
jp
das
jo
add
cld
mov
inc
repz
jbe
pushf
pop
insb
popa
icebp
cmp
es
fucomip
mov
std
out
sti
mov
sbb
xor
pop
mov
pop
adc
pushf
in
push
insl
out
cmpl
test
loope
sbb
dec
sub
push
xor
add
push
les
decl
lret
mov
pop
sbb
cld
iret
push
xchg
decl
jmp
sub
mov
test
imul
pop
xchg
mov
mov
or
clc
in
mov
std
jae
jmp
cmp
push
and
mov
and
call
or
mov
xchg
mov
push
inc
lock
inc
mov
cmc
or
mov
fcomps
leave
add
jns
scas
mov
das
jecxz
out
fcom
jl
fisubrs
pop
jle
xor
rcrb
dec
cmp
jbe
cld
incl
call
xor
cmovg
mov
push
enter
adc
fs
cwtl
scas
test
lcall
sbb
insb
mov
pop
push
xchg
test
inc
pop
aad
xchg
lcall
lret
pushf
mov
fstpl
add
imul
aas
jae
or
nop
fistps
rcr
push
loop
decl
jae
sbb
repnz
lret
pop
int
aad
jp
lock
pushl
push
pop
xor
pusha
mov
sbb
mov
inc
fbld
add
lcall
cwtl
jns
mov
scas
ficoml
pop
inc
push
fisttpl
dec
jne
nop
imul
adc
and
fiaddl
cmp
push
cld
mov
test
in
popa
mov
in
inc
mov
mov
mov
jne
notb
push
rcrb
jmp
repz
out
jnp
sub
jecxz
xchg
movsb
bound
insl
fnstcw
leave
xchg
ja
addb
std
jmp
pop
mov
mov
and
mov
cmp
sub
xchg
decl
loope
insb
mov
ljmp
cwtl
orl
inc
jb
jbe
ss
or
pop
je
addr16
inc
mov
pushl
shlb
subl
jo
add
xchg
jp
test
clc
mov
mov
ret
push
sti
fsts
daa
mov
adc
dec
inc
mov
sbb
dec
sbb
mov
sbb
fldcw
mov
add
jmp
ljmp
dec
mov
jle
bound
clc
fnstcw
imul
mov
mov
cwtl
adc
dec
sbb
ljmp
pop
push
rorb
negb
mov
and
inc
fdivrl
mov
aaa
std
jmp
xor
inc
xchg
out
call
inc
pop
stos
jne
push
scas
cli
ljmp
pop
ret
lds
adc
or
mov
mov
shll
dec
sub
mov
ret
jmp
mov
rcr
ss
ljmp
mov
xchg
lds
pop
cmpsl
sbb
sbb
mov
sub
mov
std
call
mov
push
std
cmc
lea
add
mov
fs
arpl
pusha
xchg
movsb
imul
incl
int
insl
lds
add
out
xorl
jae
out
mov
idiv
xor
incl
test
fsubs
outsb
int3
enter
lock
aad
xor
stc
cmp
in
xlat
aaa
cld
jmp
ficoml
dec
xchg
xor
stos
loope
call
ja
jge
and
jnp
call
jl
add
arpl
loop
les
mov
pushf
fnstcw
mov
dec
mov
call
pop
cli
cmpsb
adc
push
jnp
test
sub
cmp
jb
push
out
cli
push
inc
aaa
imulb
mov
mov
jge
insl
adc
xchg
cmp
pop
mov
lcall
sbbb
mov
mov
inc
cmpsl
pop
inc
test
add
sbb
push
xchg
lret
jbe
pop
and
jg
jbe
in
xchg
js
popl
add
fdivrs
fldl2e
lock
lret
pushl
jmp
leave
jo
mov
add
push
adc
fnstsw
inc
add
jmp
sub
shlb
xchg
shl
add
push
out
xor
push
in
dec
mov
dec
lcall
sub
inc
inc
mov
stos
std
call
cmp
jo
fildll
pop
ds
lcall
sub
sub
dec
push
jmp
maskmovq
idivl
push
lahf
pop
rorb
ljmp
mov
push
hlt
mov
ud0
xchg
dec
cmpsl
mov
xchg
insl
outsb
sub
or
lea
iret
inc
imul
mov
ljmp
mulb
decl
outsb
xchg
mov
xchg
mov
in
add
flds
pusha
push
push
add
pushl
insl
inc
sbb
add
mov
jno
mov
mov
gs
imul
jmp
mov
loope
add
cmpsl
or
bound
sar
jmp
roll
int
shrb
js
push
lods
out
sbb
call
hlt
lret
push
push
mov
xor
inc
lock
cmp
loop
fbld
cmp
lcall
mov
xor
cmp
shl
jge
incl
xchg
cltd
repnz
sub
mov
push
inc
inc
sub
inc
push
sar
jg
adc
xchg
add
dec
xor
popf
mov
inc
movsb
and
inc
mov
cmc
mov
jl
dec
sti
jle
lods
jge
movsl
call
cmc
fwait
mov
mov
jns
pushl
ljmp
pop
and
dec
push
mov
inc
or
addr16
and
inc
push
sbb
jmp
cmpsl
sbb
mov
out
and
push
xchg
cmp
push
sar
jmp
push
jae
imul
cmp
daa
push
shlb
mov
xor
lods
dec
loope
fs
into
jbe
popa
mov
clc
inc
inc
es
jmp
out
and
xor
jne
xor
rcr
sub
mov
lcall
or
cltd
imul
imulb
jecxz
jmp
jl,pt
mov
pop
outsb
pushf
jnp
cli
xor
sahf
mov
pop
or
rcl
or
out
push
stos
lahf
lret
jl
fistpll
shll
dec
in
sub
mov
lock
call
cmpb
mov
lret
xchg
cli
and
push
fmuls
andb
cmp
mov
sbb
mov
jmp
in
cmp
mov
enter
cmp
fs
mov
and
out
fsubl
aam
fcomip
dec
mov
test
sub
mov
int3
mov
pusha
sub
and
das
call
adc
inc
mov
ljmp
and
js
mov
pop
mov
in
adc
addr16
dec
and
mov
arpl
mov
ja
sar
add
add
jl
cmpsb
incl
sti
divl
push
jg
mov
les
xor
dec
je
and
lcall
jae
mov
and
jg
xchg
aaa
mov
std
aaa
cmp
pop
xchg
hlt
pushl
mov
sub
mov
mov
adc
and
fsubrs
mov
rcll
cld
jbe
mov
or
out
add
dec
std
inc
cwtl
jbe
hlt
js
or
cmpsb
xchg
push
pop
je
jg
jmp
add
shl
sbb
xchg
int3
mov
lcall
or
add
xor
and
call
pushf
stc
pop
rolb
and
xor
sbb
pop
incl
pop
mov
cmp
in
ficompl
insl
push
xor
pusha
outsl
sub
in
jmp
xor
cmp
in
imul
rcrl
ret
pop
arpl
fsubrl
repz
jns
outsb
jae
adc
lods
ljmp
jne
lods
loop
data16
mov
subl
inc
mov
cmpl
sbb
inc
cmp
popa
pop
outsb
outsb
pop
out
or
rolb
sbb
xchg
outsb
push
push
jmp
xor
fs
inc
push
shrl
pop
je
icebp
push
mov
xchg
jge
movsl
pop
js
test
hlt
push
enter
mov
jo
xchg
rcl
fwait
sbb
mov
repz
jmp
mov
jg
sbb
adc
xchg
mov
cltd
in
cmp
scas
dec
clc
jmp
fldcw
call
xchg
xor
push
and
imul
xor
mov
mov
xchg
loope
stos
repz
loopne
cmp
mov
jg
jmp
sahf
in
enter
push
xchg
gs
mov
incl
cld
imul
mov
add
sub
incl
sbb
inc
sub
ljmp
out
test
xlat
loopne
popf
mov
jg
lcall
in
inc
dec
iretw
cmpsb
mov
cmp
or
test
pop
decl
add
push
nop
mov
adc
dec
test
pushf
int3
push
cs
fistpl
call
inc
lea
lds
add
cvtps2pd
pop
test
call
adc
mov
and
std
mov
cmp
adc
pop
test
lods
or
cmpsb
movsb
mov
jg
jne
out
jbe
mov
jl
sbb
sub
ljmp
nop
lock
pop
jle
sub
bound
cld
insb
aam
cwtl
repnz
stos
xor
cmp
push
push
pop
mov
pop
mov
test
push
nop
sahf
mov
incl
gs
push
pop
mov
imul
add
push
sub
cmp
test
decl
imul
pop
out
xchg
popf
ret
fsubrs
or
mov
scas
call
popa
and
mov
jnp
faddl
cmpsl
xor
cli
cld
xor
decl
cmp
push
ret
and
out
pop
ja
fstps
xchg
out
or
dec
stos
cmc
adc
icebp
rcrl
ltr
sub
sub
enter
or
lcall
imul
inc
mov
mov
mov
outsb
cmp
js
jecxz
jge
dec
mov
aad
ja
xchg
mov
or
pop
scas
fsubrs
mov
call
aam
jo
jmp
cli
inc
jmp
mov
mov
ljmp
test
out
pop
loope
jmp
dec
xchg
mov
ljmp
cld
test
inc
adc
aaa
sbb
mov
aad
arpl
divl
jns
lcall
push
sbb
add
cltd
aas
xchg
jbe
sbb
outsb
pop
lcall
dec
lods
mov
aas
in
sbb
jo
out
sub
add
adc
mov
mov
mov
cltd
fisubs
add
popa
sti
jno
clc
mov
dec
push
ja
pop
push
notl
mov
pop
movsl
nop
dec
cmp
pop
push
ds
incl
cli
mov
sbb
xchg
mov
and
popf
ljmp
pop
sbb
add
jmp
push
xchg
pop
insb
sti
insl
or
cwtl
jg
pusha
addr16
push
test
xchg
fcomps
sub
cmp
dec
xor
mov
std
decl
bnd
xchg
xor
ss
dec
fisubl
mov
lods
sti
sbb
mov
rol
ljmp
pushf
mov
and
or
inc
jae
dec
mov
jo
insl
pop
das
dec
cmp
xchg
adc
test
in
hlt
push
mov
mov
int
add
mov
mov
mov
inc
into
jb
xchg
cltd
push
fisubrs
push
add
and
jb
ss
inc
sti
sbb
scas
call
dec
sar
sub
incl
mov
push
test
push
test
fisubrs
pushl
scas
mov
sub
or
adc
sbb
mov
pop
lock
jmp
cmc
lcall
pop
xlat
xlat
mov
call
ret
in
cmp
mov
mov
sub
or
ljmp
popf
fwait
xchg
mov
pop
int
loop
cli
xor
pop
cli
mov
lcall
cwtl
sbb
or
call
sub
sbb
shlb
xorl
push
into
fimuls
mov
add
mov
jmp
adc
adc
xchg
sar
cmp
es
push
int3
mov
lcall
inc
addl
and
jl
mov
jne
stos
sahf
les
incl
adc
adc
fisttps
stos
cwtl
mov
mov
outsl
sub
jge
and
in
jo
pop
push
arpl
jmp
jnp
mov
test
cmp
ja
inc
lods
fistl
cwtl
es
insl
dec
mov
in
mov
xor
xchg
stos
lret
orl
ss
ljmp
rorb
cltd
push
push
xorl
loope
mov
gs
mov
loopne
ss
pop
sub
inc
mov
cmc
dec
je
jns
decl
sti
mov
test
addr16
adc
fiaddl
sbb
jmp
adc
das
jb
imul
jns
jmp
das
sub
jmp
and
loope
push
lcall
icebp
call
jmp
pop
adc
or
pop
xchg
sbb
push
mov
ljmp
push
push
pusha
adc
dec
insl
bound
push
int
rcr
fisttpll
ret
add
xchg
or
ret
cmp
push
or
fcomip
jg
lcall
jnp
or
jbe
sahf
imul
push
mov
jmp
test
inc
outsb
mov
mov
xlat
pushl
adc
lds
push
mov
mov
repz
cmp
push
repnz
testb
movsb
push
inc
roll
jns
sbb
add
test
pushl
fsub
das
xchg
ljmp
arpl
and
xchg
add
std
or
mov
ljmp
div
dec
repnz
jg
lret
clc
xchg
mov
cmp
xlat
incl
sub
decl
pusha
stc
into
dec
movsb
gs
lock
pop
and
xchg
js
mov
jmp
shlb
xchg
inc
and
enter
cs
pop
ja
popa
push
jecxz
fsts
insl
rclb
dec
inc
test
hlt
push
shlb
pop
sbb
dec
jmp
xor
in
or
call
ja
fisubrl
aad
xor
lods
std
add
lahf
in
fistps
std
mov
xor
sub
jl
jg
xlat
mov
test
dec
or
dec
or
cmp
data16
jnp
adcl
ljmp
jp
pop
adc
cmp
mov
lahf
pop
adc
loop
decl
in
push
cmp
dec
in
xor
gs
sbb
cmc
or
sub
popa
push
clc
call
cli
popf
popa
xchg
push
jnp
mov
je
adc
pushl
dec
xchg
pop
bound
mov
xchg
mov
xchg
sahf
mov
mov
decl
jb
in
inc
inc
xchg
sub
pop
mov
imul
fwait
mov
push
shlb
lret
call
aas
and
outsl
shl
pushl
cmp
mov
hlt
pop
push
int3
cmp
mov
pop
ja
test
and
incl
dec
ret
sbb
inc
mov
ret
lods
iret
adc
sbb
sarb
xchg
ljmp
out
mov
or
scas
das
pushf
cmp
cmp
je
ror
sbb
jnp
out
incl
popa
imul
dec
push
outsb
adc
arpl
in
cmp
xchg
push
popf
pop
xor
jle
arpl
jmp
mov
sar
lcall
cld
cmp
mov
cmp
mov
insl
les
lret
xor
jae
inc
fisubl
in
jg
stos
and
addb
xor
mov
out
jecxz
xor
xorb
push
push
xor
mov
cmp
movsb
fwait
jbe
je
lcall
pop
int3
jg
lcall
sbb
sbb
ds
xchg
xchg
adc
xor
aaa
pop
ret
adc
loopne
mov
pop
mov
push
pop
xchg
xchg
push
push
fildl
add
hlt
mov
mov
mov
mov
mov
mov
inc
pop
cmovle
xchg
insl
push
mov
shl
push
imul
fdiv
arpl
out
repnz
inc
dec
push
insb
mov
jle
jmp
mov
and
inc
lock
pop
insb
imul
xchg
hlt
add
xor
jmp
mov
out
xchg
sti
stc
jns
jp
mov
enter
push
cbtw
mov
jg
cmp
add
jmp
lods
xchg
and
insb
loope
add
arpl
sti
mov
xchg
push
fadds
lds
mov
inc
jmp
jae
fcompl
add
adc
sbb
fwait
or
std
decl
add
arpl
jnp
push
stc
or
pusha
dec
int3
andb
rorb
jae
pop
cmc
pushl
push
shlb
andl
gs
jmp
xchg
std
insb
lcall
xor
mov
xchg
lods
jae
xor
int3
loope
push
jne
inc
lds
xchg
call
pop
cmp
or
frstor
ret
fwait
push
push
add
js
call
mov
les
lahf
shl
cmpb
xor
mov
sbb
mov
mov
inc
push
sub
pusha
dec
jo
js
add
cli
mov
sarl
add
call
jp
jne
xchg
add
sbb
lods
sub
inc
pusha
cmp
add
popa
movsb
or
mov
ljmp
or
push
orb
rcll
std
call
scas
fs
mov
pop
adc
inc
repz
call
loopne
pop
aas
enter
test
cmp
and
xor
cmpsl
ret
enter
mov
and
out
cmpsl
sub
push
push
loopne
orb
and
jecxz
stc
dec
sbb
das
add
mov
jle
ret
aas
xor
bound
push
push
scas
pop
mov
pop
mov
adc
dec
scas
test
push
pop
lahf
shl
ljmp
divb
adc
xchg
repz
rol
cmpsb
xor
pusha
rcll
push
ret
movsb
stos
sub
inc
and
push
inc
jg
ljmp
xchg
push
pop
js
mov
adc
fcoms
cld
aaa
or
cmp
xchg
sbbl
lret
dec
popa
cmp
xor
or
push
mov
or
sub
loope
sbb
mov
decl
lods
fimuls
pop
mov
minps
jmp
pop
in
pop
jae,pt
and
jl
fisubrl
loopne
icebp
mov
loope
xchg
adc
repnz
popa
shlb
incl
sub
ret
sub
js
bound
cmp
or
xchg
mov
addr16
incl
push
jmp
mov
stc
xchg
movb
push
sbb
inc
push
f2xm1
pop
pusha
enter
shr
fiadds
test
sbb
sbb
ds
or
call
push
call
incb
gs
shlb
xchg
out
inc
pop
aad
mov
push
xchg
sbb
in
jae
sub
jne
add
das
mov
cld
sar
nop
shlb
pushl
inc
xor
ret
lods
les
add
stos
repnz
push
push
aaa
or
xchg
fistl
call
dec
xchg
add
out
lds
aad
lret
lods
inc
in
push
sbb
lcall
call
ds
pop
mov
pop
fcompl
jle
je
bound
mov
mov
mov
shrb
pop
shl
mov
insb
btc
jb
repnz
call
sub
jno
and
cmp
xchg
insl
xchg
or
lea
incl
adcl
or
cmp
insb
sti
ficoml
cmpl
add
mov
jns
dec
cwtl
aam
jbe
aam
jns
pushf
sbb
outsl
mov
pavgb
push
loope
scas
and
sbb
jo
in
sbb
inc
cld
mov
or
push
pop
push
cmpl
cmpsl
fninit
or
stos
mov
mov
call
mov
imul
mov
add
or
xchg
pop
addr16
mov
inc
or
call
icebp
sahf
cmp
adc
sub
xor
inc
punpckldq
imul
andl
xor
mov
lea
lods
push
or
mov
adc
mov
lock
mov
lock
xchg
add
xor
mov
inc
jnp
jb
inc
lcall
out
das
sub
dec
sbb
dec
andb
xchg
dec
lods
cld
clc
push
jl
enter
sti
jae
loope
scas
push
cltd
ret
dec
sarl
jecxz
aad
cmpsl
jecxz
xchg
fnstenv
lcall
call
test
pop
inc
shlb
fs
imulb
jns
data16
jne
decl
js
scas
scas
jne
enter
fs
std
insl
inc
ret
adc
outsb
repz
mov
and
out
mov
mov
xor
cmp
sub
mov
and
std
stc
push
outsb
cld
jg
decl
push
pop
ja
push
aam
pop
adcl
movsl
push
dec
add
pop
ret
sbb
mov
decl
mov
cmpsb
test
rorl
xlat
xchg
push
cltd
subl
or
inc
fists
add
nop
gs
cmp
sub
nop
mov
and
cmc
pop
push
pusha
pop
std
int
mov
or
pop
push
cld
insl
stc
cmpsb
adc
push
insb
int
ds
call
cld
and
leave
sub
or
mov
sbb
dec
iret
imul
bound
fisttps
ljmp
or
sub
test
pop
hlt
decl
dec
sub
subb
lret
dec
cmp
lahf
inc
cmp
movsb
cmp
mov
jne
mov
cmp
test
cli
cli
and
in
or
mov
xlat
in
adc
mov
into
bound
rolb
mov
imul
into
mov
fists
test
shlb
xor
pop
add
xor
pop
or
add
ljmp
adc
xlat
out
mov
push
mov
js
daa
inc
mov
shll
pop
lcall
outsb
inc
pop
pop
mov
pop
and
push
and
adc
adc
push
jbe
fidivrs
sub
sahf
jb
call
loopne
je
push
fimull
mov
mov
mov
mov
inc
jns
fdivr
sub
movsl
sti
out
xchg
adc
push
dec
inc
pop
jmp
xchg
adc
mov
adc
sbb
pushl
jecxz
pop
lret
mov
sarb
shll
call
push
adc
cmp
mov
jle
je
push
adc
clc
dec
lcall
repnz
cmp
hlt
mov
jp
sub
xchg
mov
sbb
or
call
fldt
dec
fbld
inc
mov
adc
rcrb
lods
cmp
or
into
add
imul
pop
ljmp
gs
hlt
incl
mov
mov
and
aaa
pop
roll
fs
mov
decl
adc
jl
das
mov
out
outsb
movsl
out
enter
das
cmp
cmp
pushl
or
add
push
sbb
loope
add
imulb
xor
sbb
pushl
add
cmp
jge
ret
xchg
sahf
cmp
lahf
sub
jg
jle
in
out
mov
sub
aad
decb
push
jb
sti
push
jg
mov
aas
mov
mov
and
sub
mov
jge
xor
cmp
and
clc
push
js
mov
mov
call
inc
loope
adc
and
icebp
ja
movl
hlt
decl
outsb
jp
cwtl
test
sub
mov
mov
mov
push
adc
jmp
fsubr
lcall
mov
or
add
adc
xchg
xlat
jle
out
cmp
inc
and
jbe
das
cmp
xchg
dec
mov
inc
in
pop
and
sub
sti
jl
sbb
std
and
repz
int3
cmp
test
mov
push
pop
and
or
int3
rcrl
mov
inc
aam
jle
enter
mov
cli
jg
push
mov
fildl
popf
test
adc
aam
andl
ljmp
stos
mov
mov
inc
and
hlt
fcmovnu
xor
mov
mov
and
call
mov
call
nop
cld
xlat
mov
sbb
test
scas
push
dec
nop
inc
and
cltd
push
test
leave
jo
mov
call
insl
and
js
out
mov
es
inc
imull
jno
test
stos
fcomip
ljmp
sbb
shrb
lods
push
and
out
leave
inc
pop
stos
adc
aas
imul
mov
mov
push
pop
and
jg
in
jg
sub
aad
xchg
movsb
out
xorb
cs
inc
jle
mov
incl
mov
jmp
shll
sbb
push
rcrb
adc
mov
hlt
incl
and
fcmovnu
sub
or
sbb
filds
cli
dec
lret
in
fldln2
lret
fistl
sbb
icebp
mov
aad
mov
or
sti
cmpsl
insb
push
cmpsb
mov
sub
xor
and
cmp
sub
xor
hlt
ljmp
xor
adc
aaa
inc
mov
std
push
adc
inc
mov
or
or
dec
clc
rcll
call
int3
rolb
jmp
jnp
add
cmp
scas
xchg
movsl
xchg
pop
push
gs
bound
jle
cmp
add
call
rclb
pop
xchg
ficomps
sbb
mov
ficoms
inc
push
incl
mov
mov
jbe
or
xchg
int3
mov
pop
xlat
xor
mov
add
pop
hlt
aaa
std
call
jb
and
je
dec
imul
cmp
or
lcall
aad
push
sbb
dec
push
pop
mov
scas
and
lcall
xor
xchg
scas
mov
scas
jns
jo
sub
and
add
ret
call
and
sub
arpl
test
je
icebp
mov
les
cs
pushl
andl
or
cmp
orb
xor
mov
jo
jnp
inc
fwait
sub
push
pop
test
nop
sbb
cmpsl
inc
xchg
cli
aas
outsl
mov
mov
mov
xlat
adc
daa
fs
xchg
xor
shrl
xlat
mov
outsb
fbld
aas
pop
mov
inc
pop
sub
stc
stc
sub
adc
push
fimull
mov
cmp
adc
int3
inc
fwait
and
jl
xchg
out
aam
mov
leave
cmpsl
mov
inc
jecxz
stc
in
imul
fdivrl
lret
push
stos
add
aaa
pop
in
fbld
mov
addr16
push
xchg
sti
rorb
or
inc
sbb
sub
dec
fiadds
jl
xor
mov
and
orb
mov
clc
bound
lahf
clc
xchg
push
xchg
insb
icebp
cmpsb
sub
xor
enter
pusha
aas
mov
lcall
sarb
sar
gs
ss
jecxz
and
sub
fwait
sub
fistps
adc
repz
hlt
or
in
mov
xchg
mov
pusha
jmp
cmp
lcall
mov
push
setb
inc
add
jb
inc
lods
nop
ja
jl
jg
in
test
movsl
je
xchg
dec
mov
inc
lahf
out
add
inc
idivl
shlb
stos
jg
jp
aaa
inc
adc
or
stos
adc
mov
mov
push
jmp
lock
cmp
lcall
mov
and
cmovo
mov
xchg
movsb
out
gs
xchg
hlt
dec
pop
out
cli
in
aaa
mov
sbb
pop
cmp
aad
out
add
dec
lods
or
mov
sar
lcall
pop
push
xchg
sbb
in
xchg
dec
fsubs
xchg
in
outsb
mov
fists
push
mov
mov
nop
mov
pop
jb
inc
jmp
jp
out
and
pop
fwait
sti
ficomps
mov
xchg
sbb
cmp
mov
cmc
insb
adc
jb
xor
fcomi
js
pop
cmc
jae
lods
mov
lock
lcall
cmp
jns
std
and
xor
push
jnp
ljmp
repnz
pusha
mov
filds
repnz
jmp
mov
movsl
lret
idivb
inc
int3
ss
dec
add
inc
notl
fidivl
cmp
mov
rorb
xor
cwtl
addr16
cwtl
sbb
jge
mov
xchg
mov
push
jmp
adc
mov
or
pusha
mov
pushl
sarb
ja
out
fs
shlb
sub
inc
cmp
add
jnp
add
loop
jne
lret
ficoms
push
out
mov
xor
mov
lcall
fdivr
fdivrs
sbb
inc
pop
cmp
into
jl
mov
enter
cmp
cmp
fcomip
cli
mov
stos
mov
mov
xor
dec
movups
pushl
popa
in
sbb
loope
lods
and
pop
leave
loope
in
and
pop
mov
mov
cmp
pop
pop
daa
dec
cmp
push
jae
pop
cmp
jle
fildll
in
adc
and
mov
pop
loop
shlb
and
ds
decl
int
bound
rol
dec
aam
dec
add
call
std
mov
pop
test
icebp
ljmp
xchg
mov
mov
and
pop
cs
mov
jg
cmp
and
mov
pop
mov
int
push
inc
mov
lcall
pop
jp
cmp
js
or
xchg
mov
inc
xchg
sbb
rorb
lret
mov
pop
add
ret
cmc
lods
jl
pushl
push
fldl
mov
mov
push
jne
mov
out
test
jge
hlt
jmp
aas
and
dec
dec
test
lcall
jle
test
out
in
sar
cltd
in
outsl
sbb
icebp
xor
sbb
cmpsl
push
lahf
push
nop
pushl
cld
cmp
out
daa
stc
adcb
clc
adc
in
sub
dec
sbb
inc
and
call
scas
ret
adc
mov
int3
test
and
mov
mov
fildll
pop
or
jns
pop
mov
cld
insl
push
sbb
mov
push
xor
xchg
cmpb
iret
int
push
inc
into
jmp
lahf
jp
sub
pop
adc
push
push
loopne
xchg
push
add
cmp
div
ror
cmp
sub
rorb
stos
ja
jle
les
divb
icebp
decl
dec
push
cli
cmp
aad
pushf
aaa
into
ss
lcall
add
xor
mov
pushf
or
jo
lcall
fnstsw
dec
mov
pop
xor
fisttps
xchg
cltd
xchg
fs
pop
dec
push
xor
ljmp
xchg
sbb
inc
dec
jae
jo
test
pop
pop
pop
or
pop
ss
mov
pop
jmp
push
outsb
fisubl
sbb
fnsave
leave
or
imul
jo
movsb
dec
les
loopne
cli
lock
mov
imul
scas
dec
push
fistpl
mov
inc
pop
mov
push
mov
adc
out
pop
mov
cld
andb
sbb
jmp
loope
test
push
daa
hlt
in
jne
xlat
fsts
aaa
shrl
sarb
cmp
sti
dec
mov
sbb
push
pop
or
xor
xlat
repz
lds
test
dec
lret
clc
push
insl
rcrl
xchg
ljmp
mov
ficomps
or
sub
imul
popf
inc
mov
data16
aaa
or
fst
dec
mov
jmp
shr
daa
pop
xchg
leave
int
xor
mov
add
ds
mov
scas
pushl
mov
dec
dec
lcall
xchg
mov
inc
das
fstl
jg
out
and
or
or
jno
mov
pushf
scas
movsb
mov
pop
mov
out
jns
push
mov
repnz
xchg
in
dec
sbbb
or
or
cmc
test
mov
sub
decl
cwtl
pop
lods
inc
sbb
cmpsl
jecxz
mov
dec
or
pop
or
xchg
lret
hlt
or
lahf
cmp
pop
jmp
sbb
push
scas
sarl
xor
mov
je
adc
and
loopne
pushl
std
xchg
or
jo
ret
pop
mov
push
mov
scas
int3
jb
pop
call
mov
xchg
stos
js
inc
loope
ds
out
loopne
mov
add
fwait
movsb
dec
iret
push
outsl
das
push
sbb
jmp
int
pop
rolb
xchg
xchg
insb
les
idiv
lcall
fstl
xor
lahf
sbb
lea
push
mov
lcall
cltd
fmull
adc
pushl
mov
hlt
loop
mov
or
cmp
mov
push
dec
ud0
cmp
aad
popf
ja
mov
dec
sub
lds
add
sub
sti
rorb
sahf
incl
sbb
das
pop
dec
xor
mov
fidivl
jo
push
cmp
inc
je
incl
test
sbb
mov
push
imul
jle
xchg
incl
jmp
fisttps
rcl
pop
xchg
icebp
ret
push
xchg
jl
scas
xor
jp
pushl
out
mov
pop
xor
inc
add
daa
push
jle
in
push
dec
movsb
in
dec
scas
orb
pop
push
enter
incl
adc
pusha
imul
in
das
or
arpl
jmp
xor
jbe
inc
shll
and
ror
sub
popf
stos
mov
push
pushl
pop
popf
stos
loop
xchg
loope
cltd
add
ds
jg
cmp
bnd
mov
lods
pop
ja
outsl
add
mov
call
lcall
dec
mov
push
cmp
pop
adc
sahf
roll
sub
imul
aad
cltd
push
decl
inc
psubb
mov
push
xchg
and
movsl
add
inc
push
ljmp
xor
jle
cli
lcall
shrl
cld
cmp
mov
mov
mov
aam
and
loope
fsubp
test
and
xor
pushl
lcall
xor
jae
ja
inc
and
pop
mov
iret
js
lcall
and
pushf
je
sbb
imul
adc
jg
push
cmpsb
movsl
dec
std
inc
cmp
dec
ss
xchg
movsl
ljmp
jg
xchg
in
push
cmp
mov
mov
or
pop
jle
pop
push
sub
push
dec
decl
sub
scas
imul
imul
flds
jmp
lods
jnp
je
call
ficomps
inc
mov
leave
pop
cmp
mov
inc
pop
mov
mov
insl
mov
rol
ja
sub
add
cmp
mov
and
dec
xor
sub
leave
repz
jnp
add
les
cwtl
popa
aad
stos
dec
sub
sub
cs
outsb
mov
enter
or
out
in
orl
mov
xchg
add
outsb
das
ljmp
jmp
push
push
subl
and
sbb
push
push
mov
imul
outsl
cli
subl
xchg
or
and
repz
sbb
jmp
lock
or
xchg
out
pop
and
mov
pushf
test
xchg
incl
leave
mov
pusha
les
inc
loope
push
push
popa
roll
jge
pop
inc
fstl
jmp
and
rorb
js
rcl
ret
ss
ljmp
or
mov
dec
push
or
or
mov
data16
ret
sbb
decl
cld
mov
sbb
dec
mulb
adc
add
add
call
test
mov
lcall
cmpsb
aas
into
add
movsbl
adc
iret
repz
scas
jp
in
dec
test
aad
stos
test
std
out
dec
sub
mov
lds
icebp
jmp
or
mov
sub
lret
in
fadds
incl
incb
adc
xor
leave
or
in
mov
nop
dec
call
xchg
mov
jns
test
mov
and
xchg
int3
mov
popa
xchg
aaa
sarb
jmp
dec
mov
cmp
add
mov
popf
imul
pop
outsb
xchg
jb
aad
ljmp
xchg
pop
loope
ss
sub
fwait
rcll
adc
aam
and
jg
mov
cs
insl
lods
and
test
cmpb
jecxz
cmp
adc
mov
jno
ljmp
mov
stc
loope
frstor
ljmp
out
mov
insl
imul
inc
push
test
roll
pop
mov
incl
dec
lret
arpl
mov
dec
mov
out
icebp
fnstenv
xor
cltd
sub
aaa
xchg
mov
sub
ffreep
adc
mov
mov
push
push
fdivl
pop
pop
nop
mov
inc
mov
cmp
adc
out
lods
jbe
sbb
adc
pop
and
aam
imul
decl
sbbb
push
inc
pushf
push
sbb
ud1
stos
imul
stos
out
lret
cltd
clc
lcall
mov
test
mov
or
jge
adc
shrb
push
cwtl
xchg
pusha
adc
push
xor
xchg
cli
inc
out
daa
fistpll
pop
xor
stc
and
scas
and
jnp
scas
cmc
nop
lods
jle
sbb
push
std
call
push
in
int
or
repz
xor
rcrb
bound
and
cmp
add
push
adc
push
xchg
push
pop
mov
pop
pop
inc
repz
into
outsb
leave
js
fisttps
rclb
xchg
xor
loopne
loopne
xchg
jmp
and
ljmp
cmp
testb
pop
test
add
xchg
add
decl
lret
xchg
nop
cli
jg
mov
js
stos
outsb
subb
pop
mov
outsl
incl
mov
jmp
into
mov
push
sti
sub
pushf
ja
push
pop
decl
xor
adc
mov
das
dec
mov
pop
lods
shlb
push
cld
decl
les
ror
sub
jne
pop
enter
lret
and
add
push
pop
icebp
jns
lcall
or
dec
fwait
push
data16
push
or
dec
in
inc
sub
dec
push
mov
mov
lea
pop
addr16
lahf
mov
dec
push
jge
jnp
repnz
pop
pop
lock
decl
insb
push
out
push
js
mov
or
sub
enter
test
adc
lcall
mov
mov
mov
inc
jne
popa
outsb
int
pop
scas
test
call
jnp
mov
mov
aaa
adc
push
test
adc
mov
cwtl
push
rcrl
xchg
sub
pop
idivb
decl
shrl
pop
xchg
xchg
mov
add
cli
xor
mov
dec
std
jno
pop
sbb
std
pushl
repnz
push
push
cmpsl
push
sub
cmp
pop
sbb
sbb
andb
sub
es
imul
pushl
in
clc
std
pop
lea
xor
test
lea
out
out
or
decl
shl
iret
push
imul
dec
dec
ficomps
push
mov
jmp
int
push
dec
sub
and
cmp
test
call
pop
add
int
pop
mov
xor
cmpsb
ret
insl
jmp
lock
inc
popf
jno
adc
mov
shll
adc
inc
jne
mov
cmpsb
call
in
dec
add
jg
test
push
mov
shl
mov
out
mov
pushl
test
or
out
or
xchg
inc
jle
sar
test
xor
add
popl
sub
push
ljmp
sbbb
cmp
stos
stos
data16
inc
mov
ljmp
add
mov
jmp
shll
inc
pushf
mov
fimuls
push
sar
decl
adc
popa
mov
loopne
mov
jae
pushl
sbb
inc
sahf
or
lea
push
test
pop
jg
std
cmp
pop
rorb
adc
cmp
and
sbb
push
call
sub
mov
or
ret
push
sub
mov
push
pop
sub
call
mov
cmpsl
sbb
test
into
pop
mov
sbb
sar
ljmp
jae
lock
jbe
fcomi
rolb
cmp
inc
or
mov
loop
outsb
jmp
pop
adc
pop
pop
mov
and
inc
pop
mov
outsl
clc
dec
gs
cmpsl
stos
fs
imul
sahf
int
notl
cmp
cmpsl
loopne
call
mov
mov
mov
pop
jg
sub
mov
push
push
leave
pop
cmp
xchg
test
in
ds
sbb
jmp
repnz
mov
push
cli
inc
insb
in
jns
pusha
test
jecxz
dec
cwtl
push
dec
icebp
lret
inc
ljmp
ja
ret
sub
aad
inc
xor
jns
lret
push
sub
adc
jmp
add
test
push
sub
xchg
pop
cmp
cmp
push
dec
adc
es
aam
scas
jmp
aaa
cld
flds
mov
xchg
mov
rcrl
sahf
inc
js
pop
push
or
inc
pushl
push
fidivrs
push
rcll
lret
mov
sbb
xor
daa
outsb
test
xor
pop
popf
xchg
jnp
enter
insl
clc
hlt
aaa
mov
or
frstor
aad
ds
jb
test
incl
cld
push
jg
mov
sarl
cmpsl
je
out
stos
ss
sub
jge
mov
jg
call
sbb
push
lock
pop
cmp
xchg
push
mov
fnstsw
push
jmp
pop
pop
xorl
push
cmc
jle
sub
cmp
jl
inc
inc
mov
lcall
lret
loop
inc
arpl
cmp
mov
std
scas
mov
push
insb
stos
mov
clc
movsb
jg
and
fcompl
jp
push
fwait
jne
daa
or
roll
cmc
cmpsl
jmp
sti
call
pushl
clc
stos
leave
dec
ja
cld
mov
inc
xlat
adcb
leave
or
fmul
das
shr
push
sub
ljmp
cmp
jae
lods
pop
pop
adc
adc
icebp
or
and
xchg
pop
std
sbb
call
jbe
xchg
das
add
cmp
sub
jns
aad
sbb
insb
out
popa
sub
mov
push
sub
pop
and
inc
cltd
mov
jmp
call
stc
fs
or
hlt
push
push
dec
mov
testb
repz
out
and
dec
jecxz
dec
mov
push
jmp
jne
or
cli
push
sbbb
jg
mov
adc
adc
int
mov
into
pop
cmpsl
mov
push
sbbl
mov
decl
test
sahf
fldl
mov
mov
sarb
dec
adc
ret
jp
inc
cld
xchg
push
ret
in
stos
insb
cmp
and
std
pushl
fdivrs
mov
stc
out
in
cs
mov
insb
lahf
mov
outsl
popf
mov
filds
xor
jns
mov
and
call
imul
sbb
cwtl
cli
mov
scas
test
gs
jb
mov
dec
loopne
jne
inc
decl
sbbb
lock
mov
sub
inc
js
pop
imull
lcall
out
or
adc
popf
and
xchg
ljmp
pop
int
sub
sbb
call
dec
in
or
mov
imul
and
orl
out
cmp
jp
inc
arpl
ss
repz
jl
pushf
jmp
inc
lea
fstl
mov
mov
inc
push
jno
rcr
sub
inc
xchg
hlt
xor
mov
pushl
ret
pop
cmp
mov
mov
fdivs
jo
call
and
lods
das
jecxz
add
insl
sbb
pop
test
in
inc
or
fisubs
inc
enter
cmp
xor
mov
repnz
das
scas
adc
popa
lcall
les
rol
or
stos
filds
orb
dec
xchg
jne
mov
imul
cld
inc
mov
fisttps
cmp
sub
jno
or
cmp
cmp
int3
inc
rorl
mov
sti
testb
cmpsl
fs
divb
cli
push
and
ljmp
mov
inc
push
add
ror
push
jae
xor
sbb
mov
das
xor
mov
mov
int3
and
mov
and
repnz
sbb
pushl
push
mov
js
push
cmp
pop
roll
or
fdivs
sub
add
jmp
arpl
or
loope
fistl
push
divb
loope
out
popf
inc
dec
clc
jo,pn
pop
in
ds
jecxz
push
cwtl
mov
sbb
shl
add
mov
addr16
das
clc
scas
cli
or
outsl
mov
aad
nop
nop
cmp
xorl
pusha
or
push
xor
inc
push
jle
arpl
jge
shll
fs
insl
cmc
in
mov
out
clc
inc
fmul
mov
subl
sbb
int3
aam
dec
jg
or
push
and
jl
sbb
adc
xor
pop
cld
scas
outsl
and
xor
mov
jns
add
mov
pop
icebp
mov
push
das
dec
dec
xlat
jns
call
cmpsb
bound
sbbl
pushl
jae
loope
stos
in
jnp
das
leave
xchg
or
push
imul
xor
adc
xchg
or
mov
call
loopne
mov
pop
mov
pop
loope
sbb
jp
sahf
mov
add
std
lcall
cmp
jno
pop
xchg
xchg
pop
movhps
sub
xor
movsl
fs
push
out
mov
nop
aam
inc
pop
insl
lock
fcomip
dec
aam
mov
xlat
in
test
or
and
push
in
insl
cmpsb
test
stos
ljmp
insb
mov
adc
pop
and
jle
push
sti
adc
pusha
stos
cmc
xor
xchg
mov
fdivr
aaa
std
call
lock
movsl
inc
icebp
lods
stos
pop
push
xor
mov
pop
jecxz
pop
jae
lcall
rorl
inc
cmc
push
sbb
cwtl
ret
add
mov
xchg
lret
lcall
xor
ja
push
or
les
lahf
inc
rorb
fdiv
sbbb
call
loop
lds
mov
pushl
mov
dec
scas
jmp
cmc
xor
add
call
lcall
mov
mov
rcll
leave
sti
mov
and
mov
and
std
decl
fimull
stc
inc
clc
movsl
gs
icebp
dec
lret
insb
rorb
xchg
loop
cwtl
insl
or
call
xor
aam
std
ret
sub
lock
adc
inc
int
add
jmp
loopne
push
cwtl
dec
popf
mov
stc
mov
iret
enter
sub
jmp
lahf
les
emms
pop
and
jmp
xor
pop
cmpsl
mov
push
in
nop
sub
movsb
test
ljmp
test
lret
push
push
fsubl
movsl
aaa
push
push
xlat
stos
and
test
sarl
enter
pop
call
jmp
or
stos
hlt
out
stos
ja
je
mov
xchg
pop
xor
divl
imul
rorb
pop
pop
cld
and
lods
inc
and
mov
scas
in
push
mov
add
js
push
imul
fucomip
pop
fdiv
jae
sbb
adc
mov
or
dec
push
push
push
jmp
fs
cmp
sbb
stos
sub
les
sbb
sar
arpl
lahf
inc
xor
adc
mov
sbb
test
mov
xlat
insl
push
mov
push
sub
cs
fcomip
push
or
outsb
mov
scas
cld
test
lahf
hlt
or
cmp
xor
mov
pushf
sbb
xchg
js
mov
xchg
fcomip
mov
push
xor
imul
or
jmp
xorb
fcmovbe
out
lods
fcoms
adc
mov
jmp
inc
popa
lods
addr16
imul
cld
mov
mov
push
repnz
mov
jl
sub
mov
adc
insl
push
and
pop
pop
in
ljmp
push
outsl
sahf
mov
call
pop
bound
add
ja
inc
popf
sub
dec
imul
fcomip
jmp
sarb
daa
fidivrs
pop
sbb
lret
aam
lret
fiadds
jmp
das
in
es
cli
sbb
dec
stos
dec
scas
push
sub
lahf
repnz
xchg
movsb
scas
mov
call
sbb
adc
icebp
xchg
mov
jmp
sub
and
movsl
addl
fnstcw
lock
in
bound
scas
pushf
fisubs
loop
stos
pushl
xchg
push
adc
stos
inc
outsl
lods
push
add
jmp
incl
subb
in
xchg
jl
inc
fstl
aad
xor
mov
push
adc
lcall
icebp
pop
nop
mov
out
push
or
loop
jge
xchg
shlb
inc
popf
aad
shll
out
add
pop
mov
outsb
das
bound
out
lcall
lock
mov
addr16
cld
xlat
xlat
repz
pop
xchg
sub
repnz
add
or
cmpsl
mov
adc
pushl
in
dec
adc
cld
ret
pop
inc
mov
es
mov
mov
jl
jb
cmpsb
scas
sbb
ffree
data16
subb
scas
daa
scas
cmp
add
mov
dec
dec
subb
xchg
sahf
adc
jne
adc
rol
fcmovnu
scas
sbb
dec
push
mov
mov
pushl
aaa
sub
or
test
xchg
dec
xor
or
and
lcall
mov
sbb
push
jbe
sbb
adc
sub
jo
incl
in
sub
gs
xor
mov
jp
xor
lock
xchg
jecxz
sahf
mov
je
rcrb
repz
push
int
cli
pushl
addl
jno
pop
push
push
fsts
jmp
or
adc
sbb
das
fcmovu
ljmp
rclb
pop
and
paddq
push
xor
ljmp
push
fldcw
insb
fisttps
fucom
sahf
jo
inc
jle
ret
pop
popa
dec
add
mov
jbe
decl
rcll
shll
or
pop
loope
push
push
and
scas
fnstenv
mov
out
lods
jle
lcall
stos
jl
sub
test
add
pushf
mov
adc
pusha
vsubsd
add
enter
fadd
lcall
sub
adcl
popa
sub
pop
in
mov
jg
fs
adc
pop
cmpsb
cmp
mov
dec
add
cmpsl
adc
movsb
dec
xchg
sbb
fs
jmp
fidivs
lret
mov
lret
lret
scas
adc
jle
dec
xor
test
pop
cld
les
xor
fsubr
iret
push
scas
sbb
or
xchg
add
or
mov
add
out
loope
adc
pop
repz
lods
bound
mov
mov
cmp
out
dec
stos
sub
cmpsl
dec
lret
pushl
xchg
add
sbb
insb
movsl
mov
jmp
push
mov
rcll
add
jne
ljmp
xchg
and
ret
and
inc
es
lahf
in
mov
jmp
cld
jg
push
pop
sub
and
dec
movl
out
xchg
inc
movq
lcall
mov
scas
jnp
push
mov
push
adc
adc
aaa
incl
mov
push
shr
cltd
in
mov
bound
scas
dec
les
in
dec
adc
mov
lcall
mov
imul
xor
aaa
jl
in
pop
push
out
fistl
clc
jo
aam
ficompl
xchg
lcall
push
sub
push
cld
jg
dec
push
pop
mov
ficoms
sub
data16
xor
adc
popa
mov
sub
jb
and
mov
ljmp
call
iret
xlat
test
pop
shrb
and
and
dec
or
fcomip
mov
push
into
ljmp
or
cmp
mov
decl
fwait
pop
lock
imul
movsb
adc
adc
shl
xchg
and
mov
jl
jg
add
lea
dec
cmp
fcmovnbe
dec
add
add
sbb
jmp
loopne
loope
push
mov
dec
mov
add
push
aaa
adc
incl
adc
xchg
je
pop
mov
fcomp
jecxz
or
mov
outsl
sub
pushl
cltd
inc
adc
stc
jae
fdivrl
subb
test
mov
sbb
mov
ja
cs
and
sub
lcall
ficoml
test
sbb
push
popf
lcall
test
fstpt
lcall
hlt
mov
push
xchg
inc
xor
decb
fstps
mov
imul
test
ljmp
jg
pop
xchg
and
je
scas
mov
test
data16
ljmp
jb
dec
xlat
xchg
dec
xor
mov
mov
cmpsl
and
and
das
dec
jl
es
lods
cmp
lret
popa
xor
mov
call
and
add
mov
decl
xchg
faddl
cltd
pop
push
and
mov
mov
pop
mov
pop
ss
mov
incl
insb
cmp
outsl
out
inc
fs
push
iret
pop
cwtl
fsubrs
sbb
cmp
das
lcall
roll
call
cltd
jge
cmpb
mov
lret
movsb
inc
leave
test
xchg
jle
pop
loop
inc
ficompl
repnz
lcall
xor
fnstsw
and
ss
aas
or
mov
adc
ljmp
insl
inc
jne
out
xchg
xor
add
sbb
movsl
iret
aad
mov
push
cld
decl
mov
sbb
cmp
sbbb
or
adc
push
lahf
xor
test
xchg
pop
jb
jmp
add
pop
call
dec
notb
les
dec
pop
popl
sti
xchg
jnp
adcl
push
stos
xlat
je
rorb
in
mov
jp
divl
lock
jmp
sar
push
out
movsb
inc
adc
sub
jl
ret
sub
pop
cwtl
jp
cmp
decl
dec
xchg
jg
xor
and
or
mov
sub
and
jg
sub
and
std
jno
xor
scas
lcall
hlt
jmp
std
fcoml
test
dec
add
and
sbb
repnz
xchg
mov
mov
xchg
push
hlt
and
and
or
nop
sub
sti
call
add
mov
xchg
loop
sbb
adc
call
aad
nop
jo
dec
cmovl
lock
sbb
add
xchg
dec
lods
sarl
out
jae
call
push
dec
sbb
pop
fmull
xor
jae
repnz
aas
mov
mov
incl
ds
inc
xchg
test
repz
mov
jg
inc
xchg
pop
cmp
sub
and
addr16
adc
cmc
les
ljmp
repnz
xchg
call
shlb
std
scas
scas
cmpsl
popf
sub
out
out
lea
mov
decl
xchg
xchg
mov
pop
inc
lret
js
push
out
sub
xchg
mov
sarb
call
decl
iret
outsb
into
shll
cli
lods
addr16
or
scas
or
xchg
into
mov
jnp
mov
enter
push
rorb
add
icebp
jbe
adc
int3
test
movsb
pushl
mov
dec
scas
xor
lcall
xchg
sarb
or
jge
dec
xor
cli
pushl
cmp
and
dec
pop
sbb
stos
stos
xor
aas
pop
insb
out
out
sbb
sbb
out
xchg
add
lock
mov
dec
xchg
mov
push
stc
lock
incl
push
or
mov
or
shlb
sub
leave
mov
ss
ljmp
cli
ljmp
adc
addr16
stos
pop
pop
in
decl
or
js
movsl
mov
aam
cmc
jmp
sbb
push
pushf
lods
icebp
incl
xor
cmp
test
scas
shll
pop
mov
in
lret
dec
out
pop
xchg
mov
lods
mov
mov
popa
lock
imul
or
pop
int3
je
fcompl
ljmp
cmp
into
add
mov
adc
inc
outsl
and
dec
in
shlb
add
into
push
cs
adc
cmc
inc
xor
sub
mov
enterw
lcall
xchg
adc
decl
movsb
and
fsubrs
mov
dec
addr16
mov
mov
outsb
ljmp
sbbl
insb
xchg
in
push
loop
stc
das
int
int3
loope
inc
add
out
sti
int
inc
test
and
lcall
push
cmp
inc
scas
xor
inc
fnsave
pop
pop
cld
decl
cmp
push
aad
scas
mov
and
add
cmp
in
jbe
incl
cmp
mov
push
add
js
add
rolb
outsb
cmp
mov
sbb
es
mov
lea
in
mov
mov
movsb
pop
std
out
call
xor
mov
pop
inc
in
xchg
mov
sub
fdivr
jmp
inc
lret
inc
addr16
repnz
or
insl
add
xor
enter
jns
dec
jle
mov
push
flds
xchg
mov
decl
add
cmp
into
out
jb
or
pop
jnp
fsts
loop
jb
inc
call
dec
xchg
sub
adc
mov
pop
jp
cli
mov
lock
lret
cltd
mov
decl
sbb
cmp
sub
xor
jb
mov
test
sbb
fdivrl
push
xchg
ret
inc
jns
and
rorb
dec
or
or
cld
int
repnz
jp
xor
fdivrl
mov
xchg
cli
fsub
or
mov
adc
push
ret
insb
js
ljmp
lock
lahf
push
enter
and
cmp
ret
pop
das
loopne
les
adc
sahf
sub
lcall
mov
ljmp
dec
mov
mov
ror
mov
add
mov
decl
fstpt
and
and
mov
andl
jecxz
mov
cmp
cli
jnp
test
add
jno
andb
push
cmp
incl
push
push
mov
mov
andb
nop
jmp
xor
fnstcw
mov
fstps
lcall
je
push
xchg
negb
in
test
xchg
stc
movsb
and
dec
sbb
sti
mov
jp
clc
fnsave
lcall
out
gs
pop
movsb
fdiv
rclb
popw
jg
cmpsb
stc
sbb
mov
push
xor
enter
in
xchg
gs
enter
pop
mov
pushf
sub
adc
divl
dec
adc
fnstcw
insl
in
fucomip
dec
lods
push
fdivrs
mov
pop
pusha
lock
lcall
jmp
lds
pop
push
ds
mov
stos
rcll
mov
jecxz
pop
mov
insl
fstp
inc
xchg
decl
or
ret
popl
js
fstps
xchg
sti
add
xchg
cmpsb
xor
mov
lcall
mov
repz
fstpl
fs
lock
aaa
sub
gs
lcall
jecxz
test
je
sub
ret
out
out
shll
push
xchg
add
cltd
xchg
lahf
lods
mov
jg
jnp
dec
cmp
mov
xor
icebp
and
pop
xor
xchg
xor
out
jmp
pop
sarl
mov
cld
pop
mov
sub
inc
jne
ja
mov
incl
bound
mov
out
xchg
mov
ret
push
in
push
push
dec
jno
ficoms
xchg
sahf
jmp
nop
inc
mov
xor
test
scas
dec
out
jge
cmp
sbb
call
cmpsb
stos
pushf
mov
fists
les
cmc
adc
imulb
and
les
mov
push
lcall
dec
push
repnz
cmp
std
xchg
dec
and
lcall
sbb
insl
xchg
scas
dec
fcos
mov
jge
das
jnp
bound
cli
daa
nop
mov
cmp
cmc
cli
clc
mov
jle
xor
pop
popa
out
cltd
clc
in
push
add
xor
push
mov
testl
jmp
cmp
cmp
or
das
cmp
fstpl
in
daa
jbe
das
mov
rorl
dec
xor
ret
shll
pop
cmc
lcall
ret
add
lret
cmp
jo
push
ret
in
sub
push
popa
or
pop
lods
push
mov
bound
nop
mov
test
lock
push
inc
mov
xlat
aad
mov
mov
mov
pushl
lahf
idivb
lods
out
loope
inc
in
inc
fst
inc
inc
arpl
push
idivl
incl
or
dec
jge
pop
iretw
jge
imul
fnstcw
jg
mov
inc
stos
sub
xor
push
push
and
into
fimull
and
dec
add
sbb
mov
jbe
push
add
adc
jg
push
fcmovnu
cmp
xor
mov
das
in
popa
xor
sti
pushf
repnz
mov
mov
js
xor
ss
lods
or
mov
xchg
jp
lds
addl
add
or
int
nop
push
add
stos
dec
in
push
sub
ljmp
mov
push
stos
and
lcall
mov
imul
clc
incl
jle
scas
and
sub
pop
mov
add
dec
mov
add
dec
imul
ljmp
xchg
stos
aam
xor
sar
pop
sbb
mov
test
jmp
dec
mov
cltd
fsubrs
cwtl
out
pop
cmp
stos
faddp
dec
add
sub
mov
add
ljmp
insl
scas
sti
jp
dec
pop
jo,pt
scas
repz
cmp
jp
sbb
sub
lcall
xchg
cwtl
data16
cmp
gs
hlt
sbb
lret
incl
mov
xchg
mov
pop
and
mov
lahf
push
mov
sub
push
and
aad
cwtl
dec
outsl
adc
pop
cmc
jmp
repnz
cmpsl
leave
cltd
or
into
push
xchg
dec
rcl
sbb
mov
lcall
outsl
clc
pop
scas
jne
stos
cltd
or
mov
mov
dec
retw
fidivrl
sub
or
mov
push
fmull
aaa
sbb
xor
sub
scas
cltd
call
lret
decl
aam
xchg
inc
fwait
popf
jnp
xor
cmpsl
xchg
movsl
xor
dec
bound
pusha
mov
ds
jg
inc
cld
cltd
mov
cmp
sbbb
ja
in
in
sub
ret
xchg
js
pusha
das
mov
dec
rcrb
push
jb
leave
fdivl
aaa
cld
push
ljmp
pop
movsb
outsb
sub
ja
test
call
dec
pop
mov
rcll
cmp
jmp
in
in
lods
xchg
and
aaa
jp
mov
rclb
in
mov
stc
decl
fmuls
push
rcr
shll
sbb
enter
int
std
outsl
fdivr
loopne
adc
inc
dec
cld
push
pusha
add
sahf
mov
mov
add
add
outsl
incl
or
pop
pop
push
or
or
or
or
or
dec
add
insl
adc
adc
push
adc
dec
add
mov
movsb
adc
adc
adc
add
data16
mov
or
rolb
sti
dec
inc
add
add
sahf
fiadds
ss
les
add
sbb
subl
add
lcall
add
add
push
adc
pop
and
xor
add
jmp
inc
mov
adc
xor
cmpb
shlb
mov
das
in
xor
rcrl
and
cmp
adc
sbb
jnp
and
adc
inc
mov
add
xchg
addl
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jl
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
lcall
and
and
mov
mov
adcb
mov
fiaddl
or
and
or
out
test
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
inc
aas
imul
fdivrl
add
mov
mov
loopne
mov
fnstcw
adc
rcll
dec
mov
sbbl
cmp
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jg
xchg
jl
add
sub
incl
adc
sbb
cli
and
mov
fiaddl
jg
cmpsb
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
fisttps
aas
mov
push
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
ljmp
fs
fs
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cli
cmp
fisubrl
in
mov
orb
int3
lcall
fs
ljmp
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
ljmp
adc
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
ljmp
mov
call
sarl
xor
hlt
and
xchg
jmp
call
in
inc
sbb
add
pop
jb
xchg
pushl
in
push
mov
sub
pop
mov
jl
rorl
adc
imul
stos
hlt
push
add
stc
loope
mov
mov
sar
andl
aas
icebp
testb
mov
aas
stos
pop
xor
jns
mov
in
repnz
jno
pop
sub
pop
jne
jg
scas
cld
or
push
inc
sbb
paddb
inc
mov
lcall
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
cmp
mov
pushf
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
fists
fnstsw
push
push
idivl
cmp
sub
inc
ljmp
pop
jg
je,pn
sub
jg
imul
mov
mov
inc
es
jmp
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
adcb
mov
cmp
cmpsb
in
fistl
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
pushl
add
lea
jg
gs
std
xorb
jg
jg
addr16
adc
ret
das
pop
pop
pop
shlb
pop
cmc
decl
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
pushl
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
std
jmp
sbb
push
shrl
mov
push
mov
adc
and
sbb
xchg
mov
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
jmp
mov
enter
add
cld
call
js
cmp
scas
ljmp
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
cld
add
enter
xchg
pop
or
decl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
and
push
push
jo
pusha
imul
add
mov
cmp
in
jmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
mov
add
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
loopne
idiv
adc
and
lahf
fmull
jmp
xor
enter
jecxz
scas
sub
in
pop
mov
sub
testb
incb
fisubrl
aas
mov
or
jle
in
push
inc
or
pop
jg
add
sti
mov
jg
mov
aad
test
mov
mov
in
in
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
mov
lods
loopne
sar
sub
cmp
mov
imul
dec
out
out
push
push
in
aas
mov
fsubrl
inc
fildl
sbbb
ret
push
clc
xchg
pushf
mov
repnz
pushl
push
and
mov
adc
inc
aas
push
rcrl
addr16
call
rolb
pop
inc
jb
fistpl
adc
call
jno
pushl
mov
inc
sti
arpl
daa
std
or
sbb
cld
ffreep
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fmuls
fistps
lds
fidivrl
jg
stos
decl
dec
mov
sub
jge
xor
lahf
les
sbb
mov
push
cld
addl
sbb
mov
pop
or
lahf
outsl
int3
push
sbb
pop
mov
arpl
out
out
outsl
xchg
lcall
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
decl
aad
loop
lahf
mov
or
out
lcall
cwtl
cmp
shl
cld
mov
adc
stos
pop
jg
pop
mov
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
jmp
lea
jp
jnp
jecxz
adc
inc
lds
push
lcall
and
imul
or
inc
pop
xor
rorb
and
add
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
das
cld
push
movsb
insb
or
and
xchg
fidivrs
scas
push
test
aas
repz
outsl
lock
or
push
paddsw
pop
stc
out
mov
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
scas
and
push
shll
xchg
fldenv
iret
fdivrl
xchg
lcall
inc
push
rolb
mov
pop
cmpsl
xchg
addb
into
sarl
push
icebp
fildll
out
jg
jno
ret
cmp
arpl
out
call
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
scas
loop
in
sbb
xchg
imul
jmp
outsl
jmp
std
loopne
add
mov
daa
jmp
faddl
mov
push
adc
outsl
dec
push
pop
add
pop
stc
push
dec
out
fstpt
mov
enter
cmpsl
mov
out
decl
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
xor
int3
fildll
fsubrl
dec
add
xchg
cmp
or
add
stos
inc
aas
sti
push
sti
pop
inc
dec
push
mov
and
cmp
int3
sbbb
pop
iret
and
icebp
mov
xor
jl
orb
nop
jg
add
rclb
push
outsl
and
dec
and
scas
pop
push
and
push
push
insb
push
inc
or
mov
push
xor
lret
mov
add
push
xchg
pop
mov
adc
je
aaa
pop
jle
movsl
and
jne
jo
imul
jbe
push
insb
or
ds
popf
pusha
popa
addl
adc
andb
dec
inc
add
test
inc
xor
cld
cwtl
loope
jb
cltd
add
insb
push
dec
add
pusha
and
or
add
jge
dec
fs
and
sub
add
data16
pop
push
dec
jo
daa
sbb
scas
movsl
mov
dec
gs
adc
push
outsl
outsl
insb
push
sarl
jae
outsl
je
and
mov
lret
dec
sbb
pusha
movsl
sub
aaa
pop
sub
dec
dec
jne
js
or
arpl
ret
sbb
pop
inc
aaa
push
popa
adc
mov
add
inc
jns
push
out
or
jnp
push
jecxz
mov
inc
sub
dec
ljmp
dec
add
sbb
mov
insl
insl
fnsave
orb
xor
xchg
loopne
xchg
jo
or
mov
cmpsb
test
adc
ss
xor
and
dec
outsb
imul
inc
pop
add
sbb
int
sub
sub
aaa
and
mov
push
outsb
addl
imul
mov
jae
loope
popa
push
cli
arpl
mov
inc
and
fimuls
fadd
inc
bound
jo
clc
sub
pop
ds
insb
jne
add
mov
data16
dec
push
jle
ret
add
push
mov
jl
inc
sbb
jo
inc
push
fcmovnb
mov
fs
inc
jo
pusha
mov
pop
push
mov
sarl
push
cs
in
jne
subl
cs
pop
jb
push
ret
das
push
subl
jns
mov
jo
jbe
inc
jae
adc
add
mov
rcll
push
hlt
fs
ret
inc
jecxz
xor
dec
cmp
pusha
xchg
sbb
mov
pop
inc
subl
cvttps2pi
and
dec
push
pop
mov
cltd
jbe
mov
push
imul
ja
insl
adc
xor
push
adc
jns
imul
push
and
mov
xor
xor
out
loopne
push
insl
pop
fimull
test
sub
pop
and
dec
insl
in
outsl
popw
push
shlb
lret
mov
jge
push
push
inc
xchg
popa
and
cmp
je
das
ljmp
jbe
pushf
inc
or
pop
xchg
call
adc
or
pop
and
shlb
and
jb
cmc
mov
repz
jne
jge
xchg
lods
xor
call
ja
mov
movsl
call
lods
call
mov
neg
adc
cmp
and
inc
sub
fcompl
popa
es
jp
inc
lds
loope
push
jg
cmp
adc
insb
xchg
add
mov
cmp
aam
xor
or
pop
dec
mov
cld
test
mov
dec
push
pusha
mov
sub
pop
imul
push
pop
aad
jns
cmc
ss
inc
inc
mov
or
out
sti
xlat
pop
inc
sbbb
sbb
imul
mov
mov
jno
insl
add
sub
push
mov
cmp
es
mov
xor
inc
lock
pusha
and
add
outsl
push
pop
stos
pushf
xor
adc
lods
cmp
dec
js
mov
lock
jbe
add
test
aaa
cmp
cs
push
test
adc
and
shlb
fcoms
inc
loopne
adc
fbld
jecxz
or
sbb
xor
fdivs
mov
inc
popa
add
test
test
inc
addr16
outsl
jp
or
jg
mov
inc
push
add
inc
adc
xchg
add
imul
scas
pop
mov
outsl
add
and
rcr
add
sahf
xchg
and
shll
loopne
xor
gs
jne
jmp
xchg
sbb
adc
inc
arpl
push
cwtl
adc
sti
mov
mov
pop
adc
and
jg
mov
mov
aaa
mov
ficoml
ret
mov
add
sbb
cmp
and
cmp
mov
scas
add
dec
rol
push
jno
cmp
dec
or
insb
dec
push
push
sahf
xchg
fiadds
xchg
pop
dec
mov
pop
push
je
mov
push
outsl
xor
jb
jecxz
in
loopne
fstpt
mov
lods
jo
inc
inc
push
arpl
and
arpl
ficompl
pop
inc
imul
push
shll
sahf
mov
mov
inc
insb
divl
inc
insb
jle
cmovnp
call
pop
es
mov
imul
iret
aam
push
popa
mov
push
flds
adc
js
inc
into
push
mov
xor
sbb
cmpl
les
ds
movsb
push
sub
xor
push
pop
xor
and
outsl
shlb
mov
jo
imulb
push
push
adc
movsb
loopne
cmp
outsl
int
jnp
cmp
icebp
ja
jnp
or
dec
outsb
dec
adc
push
or
out
ss
sar
pop
add
add
mov
rcrl
sub
cmpsb
xor
or
mov
mov
push
adc
mov
imul
adc
in
push
cmp
lock
or
inc
jb
and
dec
and
and
push
dec
movsb
bound
inc
pusha
addb
out
inc
jb
sub
inc
push
jb
inc
jae
inc
leave
movsb
ss
inc
shll
mov
xchg
imul
bound
sbb
dec
ljmp
rcl
jl
bound
icebp
push
mov
loopne
imul
push
push
and
mov
or
or
push
add
or
adcl
and
push
mov
mov
push
adc
test
or
aad
xchg
arpl
fstpl
or
outsl
or
mov
fistps
lods
push
cmovno
fldenv
mov
mov
inc
and
push
cmp
mov
sbb
jmp
fdivrl
and
inc
rorl
addb
jl
pop
add
mov
xlat
xchg
mov
or
and
dec
popa
push
mov
or
sbb
inc
int3
adc
gs
push
dec
xor
fldt
jg
cwtl
dec
push
test
sbb
or
add
outsb
push
push
add
pop
fcompl
je
jge
xor
lea
in
sub
mov
test
movsb
mov
fidivrs
test
mov
jae
or
sbb
inc
lds
and
dec
inc
and
sbb
adc
pop
nop
in
inc
rcl
or
insl
xor
negl
inc
mov
xlat
push
push
push
daa
ss
xchg
movsl
outsb
out
inc
shll
mov
adc
pop
jbe
pusha
jno
lds
dec
jecxz
add
das
sbb
pop
enter
bound
movsb
pop
pop
and
imulb
cmp
pop
stos
push
xchg
popa
inc
iret
jns
insl
add
cmpsl
dec
push
jno
loopne
cltd
nop
inc
fcoml
call
cmp
icebp
push
pop
and
push
dec
test
dec
push
sub
push
or
cmpsb
dec
add
movsl
inc
cmp
xchg
adc
push
dec
cld
add
setne
add
stos
enter
dec
xor
or
push
push
inc
nop
insl
xor
jbe
repz
sub
pushf
xchg
xchg
dec
jnp
push
shrb
push
imul
les
dec
jae
int3
or
xor
int3
add
xor
loop
data16
pop
jo
add
jmp
jg
xchg
pop
lret
negl
and
adc
jp
pusha
push
loope
popf
in
mov
dec
add
dec
rorl
loopne
mov
or
std
dec
push
dec
add
adc
xor
sbb
ror
add
cmp
jnp
fwait
add
nop
push
adcb
and
and
fdiv
mov
pslld
add
push
mov
xorl
pop
addl
lret
xlat
pop
cmp
and
jb,pn
popa
and
mov
add
push
push
rclb
add
imul
inc
cs
adc
fsubrl
fwait
sub
add
jb
push
sbb
repz
xlat
pusha
dec
mov
push
lahf
xchg
lock
sub
out
shl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
