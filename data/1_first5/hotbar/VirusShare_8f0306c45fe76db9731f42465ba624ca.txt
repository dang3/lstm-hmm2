fcomp
decl
and
add
mov
or
adc
cmp
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
cmp
lea
clc
pmaxub
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
sub
add
movl
outsb
push
mov
orl
jae
xor
jnp
nop
adc
adc
push
lea
push
sbb
repz
jae
sbb
add
pop
xor
or
xchg
dec
cltd
adc
jns
orl
mov
push
xchg
dec
add
push
cld
jg
mov
cmpl
jne
push
or
dec
add
mov
push
cmp
add
inc
sar
pushf
loop
xor
inc
hlt
push
and
mov
gs
jbe
pop
nopl
adc
mov
adc
data16
mov
mov
lea
xor
lret
sbb
jp
or
add
loopne
ret
fists
lret
and
push
mov
loopne
push
or
sbb
and
xchg
cmp
add
inc
push
push
xor
dec
add
ss
push
aaa
jl
notb
ficoms
or
mov
sete
sub
push
push
into
lds
and
nop
or
leave
mov
dec
in
sub
xlat
cmp
outsb
pmaxub
les
add
push
push
aam
addr16
bound
sbb
inc
add
dec
pop
ss
and
push
inc
add
ror
inc
and
add
mov
xor
mov
push
daa
frstor
inc
aam
xor
leave
xchg
jg
push
push
dec
push
mov
lea
cld
js
lret
mov
dec
jl
pop
adc
in
dec
add
sbb
inc
lret
add
and
sbb
test
stos
cmp
and
pop
sub
stc
icebp
cmpsl
jmp
mov
and
mov
dec
pop
xchg
jmp
push
lea
mov
clc
pop
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
stos
out
pop
adc
dec
push
sub
push
insb
insl
push
add
and
jl
fmulp
dec
xchg
adc
pushf
inc
les
add
leave
lcall
pop
add
std
in
test
clc
mov
sub
push
mov
pop
lea
mov
push
pusha
lods
or
rcll
inc
enter
push
and
mov
sub
push
in
push
int
and
push
add
out
imull
push
mov
imul
popf
add
bnd
xchg
out
sbb
add
inc
add
dec
in
dec
inc
push
cmp
bswap
push
add
call
inc
mov
ss
xchg
fstpl
rcrl
je
or
pop
xor
and
add
dec
daa
or
jle
pop
push
movsb
sbb
inc
hlt
nop
test
cld
xchg
hlt
mov
mov
push
lods
push
cmp
push
fld
push
ss
inc
xor
pop
pop
pop
and
xchg
jbe
or
roll
xor
xor
add
setg
imul
ret
in
lea
push
add
lods
cltd
fistps
ds
xor
jge
sbb
scas
push
subb
lock
aas
jg
dec
or
test
push
adc
adc
fsubrl
push
sbb
pop
add
and
mov
adc
stos
in
jb
sub
insb
pop
pop
sbb
jb
push
and
pop
and
lahf
lock
adcb
das
xor
jne
fsubrl
cmp
mov
pusha
push
push
es
daa
mov
add
push
push
push
sub
jle
cmp
mov
push
pusha
sbb
xchg
pop
outsl
sete
test
test
xchg
or
add
or
and
jmp
push
push
enter
xor
adc
adc
push
jne
add
xor
and
push
dec
pop
xchg
lret
inc
test
test
mov
push
mov
jne
mov
push
pop
mov
inc
jne
push
jle
nop
or
jo
push
adc
and
mov
jne
cmpb
or
or
push
leave
inc
enter
push
or
bound
aas
inc
ss
xor
push
and
adc
dec
add
vsqrtps
fs
shlb
push
add
push
or
xor
xlat
scas
sub
dec
add
ret
dec
lea
mov
rorb
dec
push
cmp
cmpsl
lds
inc
inc
sbb
add
or
adc
jmp
jmp
push
inc
cmp
pshufw
sub
xor
mov
push
pslld
push
mov
sbb
xor
add
int3
sti
mov
dec
cmpsl
movsl
sbb
sbb
cmp
pop
mov
add
sbb
push
lods
mov
push
push
add
fdivrp
adc
pusha
in
xor
mov
test
dec
fwait
dec
pop
mov
add
push
mov
sti
pop
das
xor
aas
or
mov
inc
add
xchg
mov
and
push
lahf
into
mov
mov
rolb
in
push
mov
cmp
mov
adc
jno
xor
xor
mov
cld
inc
imul
fs
or
lock
jo
push
call
xor
data16
push
js
sbb
out
jg
out
cmpl
je
cmp
xchg
push
mov
pop
aam
mov
fcoml
push
push
jmp
cmp
cld
mov
aam
cmp
movsl
cs
add
mov
xchg
mov
sub
jge
adc
xchg
sbb
mov
sbb
int3
daa
add
adc
popf
cmpsl
jle
or
cltd
das
out
addl
mov
add
adc
cmp
and
ret
outsl
jmp
inc
mov
xchg
xor
in
push
mov
adc
sub
ret
aaa
push
add
sbbl
lea
pop
pop
icebp
jns
sahf
je
jmp
or
les
dec
test
lret
push
lcall
xchg
jne
push
movsb
adc
xchg
lods
mov
subl
dec
test
jg
or
cmc
lea
and
pop
jl
je
pop
and
addl
mov
or
pop
incb
mov
sub
sub
cmp
mov
in
jge
push
fbld
cmpb
sub
in
lds
sbb
sub
or
or
inc
add
inc
sub
cmp
cmp
jne
mov
dec
xchg
xor
aam
popa
mov
or
pop
push
leave
scas
xlat
jmp
inc
cmp
je
sub
cmp
je
or
pop
jmp
sbb
or
adc
and
adc
mov
push
fadds
xchg
adc
gs
mov
sbbb
add
loopne
xchg
cwtl
push
cs
sbb
push
into
push
mov
ljmp
or
push
or
aas
rcr
call
xor
adc
call
inc
cmp
jl
add
jg
test
mov
push
push
js
and
sbb
jne
cmp
mov
test
xor
test
push
divl
adc
adc
or
push
movsb
add
push
adcl
xor
sbb
ret
jne
movzwl
in
or
mov
sub
into
push
sbb
outsl
imul
adc
jp
add
jne
cmp
sti
stc
sub
push
push
inc
sbb
mov
aam
ljmp
jg
inc
pop
jo
pop
sahf
orb
icebp
cmp
lods
test
ds
mov
insb
cmpb
shll
out
pop
dec
es
rolb
lea
pop
jb
iret
cmp
jg
inc
in
adc
add
testb
push
repnz
lods
ret
jecxz
mov
pop
ret
mov
test
adc
push
jbe
ret
jg
es
rcrl
sbb
mov
add
or
movsl
outsl
or
fistps
test
insl
pop
or
xchg
cmp
in
aaa
adc
lea
stos
xor
ficoms
rcrb
fisttps
add
push
orb
mov
or
mov
sub
test
jge
push
in
loope
loop
stc
in
push
test
pop
nop
lahf
fdivs
jle
mov
mov
cmp
pop
testb
clc
mov
lea
push
jo
pop
fmuls
sarb
movl
lods
ljmp
add
jmp
insb
fcoml
add
push
outsl
or
mov
cwtl
jl
inc
jo
stos
jle
loope
test
add
add
or
or
and
or
push
fldcw
clc
mov
je
cmpl
insb
jge
mov
clc
add
movl
testb
or
cmc
mov
fldenv
adc
xchg
cmp
push
mov
rclb
les
cmp
pop
pop
push
ds
jne
xchg
repz
add
push
cld
add
inc
clc
or
lret
rep
pop
or
cld
cmp
ja
push
clc
lea
push
push
push
xor
or
jb
add
repz
adc
rcl
adc
adc
add
mov
add
push
or
inc
xchg
pop
enter
push
cmp
repnz
xchg
loop
push
push
push
or
pusha
fcoms
push
push
mov
outsl
add
add
lods
lcall
add
xlat
or
pop
push
js
dec
and
mov
adc
xor
sub
pop
mov
mov
shl
xchg
mov
fmuls
add
mov
or
out
mov
call
pop
fldl2e
dec
dec
push
pop
dec
cmp
aas
cs
fs
cmp
je
cmpl
aad
jp
pop
or
mov
push
jne
push
mov
mov
enter
test
push
in
cmpb
lds
and
lret
std
push
hlt
push
push
jge
or
mov
cmp
or
or
or
push
fidivrl
rcll
loop
jne
ret
js
push
mov
sahf
pop
lcall
cmpsl
dec
sbb
or
pop
imul
adc
sub
dec
xchg
in
dec
test
and
and
xchg
inc
xor
mov
mov
test
sub
cmp
clc
shlb
push
scas
loope
mov
push
loope
push
jo
movsb
and
jnp
jmp
pop
push
push
sub
cwtl
sbb
and
bound
push
pop
mov
mov
jb
pop
mov
mov
and
adc
or
lods
xchg
mov
lock
je
push
xchg
clc
xchg
sarl
jge
je
or
inc
add
adc
or
add
push
or
add
adc
sub
add
pop
pop
fisubl
jg
loopne
cmp
push
loop
pop
jle
mov
mov
shrl
push
push
mov
cmp
cmp
cmp
pop
add
shlb
ret
mov
cmp
int3
movsl
jg
add
sub
cmp
scas
das
xor
cltd
xchg
cmp
mov
enter
cld
std
sub
push
rorl
or
add
inc
adc
ret
push
jae
cli
sbb
mov
cmp
jge
push
jle
mov
mov
cwtl
sahf
fiaddl
pop
xor
push
mov
push
hlt
and
ds
cli
lret
xor
scas
push
add
pop
sar
rorl
ret
ud0
add
rorl
mov
inc
fsubl
mov
ret
jb
xor
lock
mov
sbb
push
add
inc
sub
xor
fisubl
subl
sbb
dec
pushl
push
adc
je
cmp
mov
into
test
or
cmc
rclb
or
fidivl
adc
jo
outsb
push
mov
addps
mov
lahf
pop
insb
push
push
xlat
jg
adc
xor
mov
pop
pop
jg
fiadds
adc
push
mov
xlat
and
or
sbb
push
cmp
mov
jecxz
adc
add
test
adc
adc
dec
gs
mov
in
or
or
push
sbb
cmp
mov
jl
push
add
negb
je
mov
shrb
cltd
int3
mov
pop
repz
pop
or
movsb
push
push
test
adc
pop
xor
fwait
mov
add
mov
or
add
add
iret
or
xor
inc
jge
cmp
add
rclb
dec
pop
outsb
or
sbb
push
loopne
dec
xor
push
lea
add
ret
jle
pop
ror
cmpsl
roll
mov
dec
cltd
sbb
mov
cs
inc
add
or
mov
cwtl
dec
sbb
add
cmp
aas
inc
jp
data16
push
pop
das
jnp
outsl
movsb
and
push
mov
pusha
xchg
jg
addb
shrb
pop
repnz
sbb
inc
shll
filds
push
clc
test
jns
subb
into
xchg
sbb
pop
test
loop
shr
pop
imul
adc
ret
mov
hlt
push
aas
mov
aam
cmp
stos
scas
ja
cmc
pushw
inc
clc
and
je
or
into
or
jne
aam
push
push
inc
test
fisubrl
cs
adc
int3
rorl
sbb
pop
mov
jl
push
sub
sub
jle
aas
fists
add
test
cmpl
and
jle
pushl
scas
dec
or
jmp
ret
pop
add
jnp
add
mov
sarb
sarl
jle
repz
fidivrs
jbe
mov
push
bound
cmpb
cmc
je
or
mov
je
ja
je
push
sub
iret
sbb
xchg
jne
cmp
cwtl
jecxz
xchg
iret
lock
xchg
lods
mov
mov
movb
jno
add
out
into
ret
inc
or
inc
push
and
repz
adc
pop
push
jl
jle
sar
add
repnz
dec
je
dec
in
aas
sbb
and
pop
cmp
dec
mov
orb
hlt
sbb
fistps
add
inc
xchg
cld
insb
or
enter
pop
cld
fstps
leave
and
mov
lods
jo
mov
push
iret
mov
or
jp
mov
in
cltd
popf
sahf
mov
and
popw
mov
sbb
adc
in
push
or
cmpb
jnp
sarl
xor
cmpb
sbb
sbb
std
cmpl
adc
out
movl
sahf
or
mov
stc
in
push
xor
sub
addr16
xor
xor
je
xor
push
dec
sbb
in
jmp
stc
cmp
rcrl
xchg
mov
sahf
cmpsl
pop
dec
push
ret
mov
sub
cld
popf
pop
aaa
scas
inc
sub
sbb
pop
and
push
xor
loopne
movsb
fstl
loope
out
push
aaa
lods
push
adc
and
sahf
in
sahf
in
or
sub
xchg
hlt
clc
adc
add
pop
faddp
sbb
dec
ljmp
mov
insl
xchg
aad
inc
lret
push
aad
outsb
dec
dec
mov
pop
push
lea
push
push
call
shll
lea
psrlw
rolb
xor
cmp
aam
les
push
pop
sahf
pop
dec
or
std
enter
or
sbb
push
inc
or
sub
bound
xor
stos
jge
mov
add
fiaddl
mov
xchg
mov
sti
dec
jg
add
sbbb
jle
lock
push
stos
sti
cmpsl
insl
push
jle
ficompl
add
pushf
fldenv
jp
mov
dec
arpl
or
aas
xor
aas
ljmp
popa
pop
or
ret
jle
or
inc
and
mov
mulb
mov
add
rolb
dec
pushl
xchg
mov
call
sbb
xchg
in
mov
jno
mov
js
cmp
sbb
out
xchg
sbbl
leave
push
mov
mov
popl
or
mov
cs
push
setne
push
inc
es
insb
dec
and
jecxz
xchg
push
mov
lcall
inc
ljmp
rcpps
add
test
inc
jo
lea
ret
je
lea
add
iret
or
inc
xchg
pushf
loope
pushf
push
imul
mov
fwait
add
add
mov
es
sbb
xchg
dec
lret
mov
xor
push
ds
adc
in
loope
adc
adc
aad
scas
mov
jecxz
push
push
add
xchg
insb
adc
fwait
mov
lods
pop
ss
adc
push
mov
mov
mov
push
dec
dec
mov
push
push
xor
hlt
inc
dec
jl
cld
jns
test
out
je
out
sub
adc
jmp
sub
cltd
sub
sar
add
lea
mov
jbe
mov
mov
add
sahf
inc
add
mov
push
inc
ror
cmp
lahf
pop
dec
pop
ret
dec
or
xor
push
inc
jbe
xlat
mov
movsb
fadd
push
jns
sti
mov
adc
xor
stc
sahf
out
cmp
inc
or
icebp
sarb
js
jl
sub
push
push
popf
xor
out
adc
addl
pusha
mov
jmp
out
cld
call
mov
cs
pusha
adc
sbb
or
jg
mov
imul
addb
adc
cwtl
cwtl
mov
adcb
push
push
pop
shrl
cwtl
sub
test
add
cmp
incl
movzbl
cli
jns
mov
lock
adc
sbb
xchg
cmp
call
push
cwtl
push
pushf
pusha
lock
mov
and
sub
call
or
out
add
add
jmp
mov
cmp
push
push
push
and
push
add
mov
pop
xor
aas
cs
jo
lret
push
mov
xor
xor
sbb
cmp
mov
fmull
insb
push
pop
xlat
loop
pop
or
in
jnp
push
mov
je
cmp
pusha
jne
add
and
lahf
sbb
jae
jle
mov
aad
sbb
jmp
pop
outsb
sbb
sahf
in
movl
push
pop
cmpsl
or
push
adc
rcrb
pop
mov
mov
mov
mov
mov
jb
inc
je
pusha
dec
xchg
xchg
push
adc
mov
pop
iret
shlb
flds
mov
ficoms
icebp
pop
inc
mov
nop
sub
aas
mov
lods
jno
adc
mov
or
sub
add
adc
sub
and
mov
inc
mov
enter
add
mov
sub
lea
lock
mov
push
pop
icebp
or
pop
push
pop
push
fstpl
shufps
or
imul
push
jnp
cmp
rorl
sub
sbb
loopne
add
mov
test
jns
lods
and
or
sub
sub
mov
imul
test
mov
or
push
dec
sbb
dec
dec
sbb
mov
inc
inc
push
push
sub
fmul
mov
dec
inc
inc
lahf
loopne
faddl
rclb
push
pusha
sarb
or
testb
mov
jge
push
push
nop
cmp
sub
push
push
lea
aam
fcoms
fsubrl
jp
movsl
fisubrs
sbb
mov
push
jl
mov
push
cmp
or
js
jmp
setp
addl
cwtl
push
sub
or
push
je
xor
jb
add
inc
cmp
andb
xor
mov
dec
add
insb
stos
popa
lcall
push
push
out
sub
call
mov
js
sahf
in
pushf
push
push
push
enter
and
jo
push
call
xor
scas
push
je
push
mov
bound
adc
addr16
roll
add
nop
sub
inc
shrb
popa
cmpsb
mov
inc
pusha
fmull
push
mov
cmp
push
mov
cltd
or
es
push
adc
jns
mov
adc
imul
add
sbb
sbb
les
cmpl
dec
ds
push
and
dec
and
xor
push
lds
pop
push
push
mov
jl
ja
push
cmp
bound
mov
decl
mov
dec
inc
push
add
push
mov
jno
ljmp
add
or
daa
cmpsb
push
and
clc
shl
dec
jp
loop
lock
dec
sahf
imul
in
or
es
adc
rcll
arpl
cmc
aam
xchg
push
add
sbb
adc
and
add
and
add
pushf
data16
and
ja
push
push
mov
call
add
push
xchg
push
push
arpl
arpl
pop
shll
cmp
cld
cld
add
repz
add
je
mov
cli
shll
jge
xchg
lock
push
loopne
and
clc
sub
push
push
jo
rcrl
fs
dec
or
jmp
push
mov
dec
lea
mov
dec
push
mov
add
fdivl
sbb
cmp
adc
push
inc
mov
fmull
sbb
outsb
test
push
push
push
lods
mov
push
rclb
shr
adc
mov
push
les
data16
popf
fisttps
sub
sbb
ret
cmpb
pop
push
jl
subl
sub
pop
dec
popa
or
sub
and
pop
out
movsl
pop
mov
add
adcl
mov
adc
mov
push
xor
xor
add
adc
cmp
dec
int3
add
cltd
and
mov
push
ret
sar
ljmp
xor
pop
adc
jl
movsb
xor
test
call
push
jge
mov
dec
bound
imul
sar
mov
shr
add
mov
imul
push
sub
push
push
lahf
cmp
movsl
pusha
mov
in
jle
outsl
jo
enter
xchg
mov
jbe
cmc
sub
mov
out
push
into
pop
stc
add
cmp
mov
std
adc
push
enter
lea
lock
mov
cmp
je
cmpl
clc
inc
inc
pop
cmp
cmp
jne
push
stc
push
sti
adc
push
or
ret
ficomps
inc
arpl
adc
pop
es
mov
sti
lea
or
push
stos
cmp
outsl
sbb
xor
rcrl
sub
addb
ret
inc
cs
sti
dec
push
dec
add
dec
mov
test
cmp
push
cmpsl
sbb
push
inc
add
sub
roll
inc
jnp
or
out
retw
jnp
pop
pusha
push
ljmp
jge
fisubrl
int3
sbb
fisubrs
push
adc
fstpt
cltd
idivl
je
add
aaa
jnp
add
ds
sub
ja
mov
sbb
loope
add
mov
or
add
adc
jle
cmp
add
and
xchg
bnd
pop
jmp
mov
ljmp
mov
imul
jno
jae
dec
sub
jge
jmp
shll
lea
mov
lock
sbb
push
faddl
sbb
fdivl
sub
xor
mov
fdivrp
pushf
mov
xor
sbb
shrl
lahf
mov
mov
mov
jns
inc
xchg
dec
push
fcoms
jmp
sbb
andb
rorb
je
sbb
out
fidivl
mov
sbb
lods
add
jbe
sbb
pop
repnz
cwtl
sub
in
push
pop
movb
sbb
mov
leave
jge
or
mov
mov
push
test
jo
xor
push
add
and
cmp
mov
or
mov
call
and
rcll
mov
je
and
inc
mov
xchg
xchg
in
xchg
shlb
inc
loopne
or
insl
pop
xchg
xor
loope
ja
cmp
mov
adc
popa
movsl
jno
or
loop
lods
xor
lods
add
cs
inc
incl
lea
nop
bound
idiv
dec
or
sub
sub
lea
or
inc
fistpl
push
pop
lods
mov
sti
sub
mov
push
sbb
and
jmp
xorb
or
add
pop
or
or
jne
and
inc
mov
stc
sub
xchg
mov
into
lock
add
scas
pop
clc
popa
icebp
xchg
sbb
or
or
dec
cmp
add
dec
pop
or
les
push
pop
sub
mov
push
xlat
leave
mov
push
jo
ss
and
test
push
cmp
push
add
push
pusha
sub
mov
jae
fwait
sub
jb
push
adc
jge
jle
cltd
sub
lea
add
adcl
mov
test
push
nop
adc
adc
push
dec
and
jl
push
or
sbb
jb
sarl
inc
enter
inc
sbb
cld
push
push
cmp
out
jl
and
leave
adc
sbb
push
cmp
bound
jo
rorb
push
dec
mov
sbb
mov
or
adc
cltd
inc
push
pop
test
and
js
cmp
sti
or
mov
pop
ret
lahf
or
adc
dec
scas
or
xor
or
sub
mov
les
sub
clc
setb
lods
push
pop
mov
enter
setae
lcall
repz
mov
js
lret
cmp
data16
jle
dec
or
je
or
push
xorl
push
add
js
push
movsl
inc
push
xchg
pusha
nop
sub
push
aad
push
dec
mov
es
pop
pop
adc
mov
xadd
int3
pop
jecxz
xor
xchg
push
push
dec
xor
push
pop
cmp
inc
or
mov
push
fmuls
jo
mov
push
fucom
push
add
rcr
test
ss
jb
or
push
inc
push
push
icebp
add
xchg
push
add
cld
in
mov
add
sar
xor
add
pop
mov
mov
push
push
aaa
add
mov
cmp
ja
movzbl
dec
mov
pop
mov
mov
push
decl
out
scas
inc
mov
dec
xchg
push
mov
fiaddl
add
add
add
push
mov
scas
inc
cmpsb
or
adc
push
adc
repnz
pusha
mov
in
inc
movsl
js
add
or
sbb
push
clc
push
inc
xor
popl
jmp
fbstp
lret
dec
pusha
bound
sbb
and
sub
int3
je
inc
xor
aas
inc
xor
jmp
pop
xchg
sbb
cmpsl
and
jo
add
fsubl
add
push
pop
jns
jae
xchg
xorl
jb
ss
jne
nop
or
push
mov
sbb
je
xchg
shlb
ljmp
add
jbe
imul
scas
xchg
sahf
add
push
add
xor
rcrl
jbe
xchg
jne
jbe
sbb
or
xchg
lods
test
inc
ds
or
or
pop
inc
mov
mov
in
lcall
and
stc
sub
jo
or
sub
test
in
jmp
push
mov
rcll
add
rcrl
movsb
mov
pop
or
enter
insl
aam
in
stos
dec
add
add
push
movsb
inc
js
inc
movsb
sbb
pop
lret
loop
ret
aaa
shlb
dec
sub
lods
jl
ror
sub
nop
pop
pop
and
leave
es
rcl
jnp
jmp
mov
je
xlat
mov
enter
jbe
jne
push
push
push
jnp
aaa
pmaxub
or
pop
mov
movsb
and
lds
fadds
mov
outsb
pop
inc
cmpsb
std
out
ret
sti
hlt
and
lahf
out
jl
cmp
adc
xchg
dec
sbb
push
andl
scas
test
add
dec
mov
push
push
dec
stos
rcrl
cmpsb
lods
shll
push
aad
xchg
pushf
add
jp
dec
aaa
jg
mov
and
push
js
imul
add
pop
sbb
sbb
inc
ljmp
add
ja
inc
mov
daa
adcb
test
insl
aam
adc
lret
push
push
das
sub
sbb
add
add
mov
push
or
mov
sub
jns
fld
pop
adc
mov
inc
daa
cmp
je
push
add
add
add
lds
scas
mov
leave
fldenv
inc
enter
sbb
jb
adc
cltd
mov
test
push
fisttpl
add
mov
mov
fisttpl
adc
add
pop
xor
cmp
and
mov
push
add
jne
adc
mov
sub
loope
sbb
pushf
adc
fs
pop
mov
push
push
pop
and
xchg
and
mov
inc
and
ficompl
jo
push
adc
add
adc
mov
ret
roll
cmp
je
pushf
lods
or
jo
js
cmpsb
ret
mov
shll
rorb
je
pusha
out
mov
mov
inc
lcall
pop
movl
jne
rorl
js
in
sbb
cmp
push
mov
or
pop
das
clc
mov
add
push
mov
pop
sub
xchg
jl
insl
add
mov
out
pushf
sbb
cmc
or
push
and
sbb
out
xchg
fisubl
or
mov
and
sub
out
sub
cmc
loopne
outsb
mov
push
dec
xor
xchg
mov
and
repz
aad
dec
adc
xchg
mov
fidivl
sub
mov
imul
jmp
in
cltd
shl
xor
xchg
dec
mov
inc
insb
pop
inc
mov
dec
sbb
insl
std
or
and
pop
inc
add
popw
cmpsl
mov
xchg
sbb
enter
inc
cmp
sub
pop
push
test
subl
and
sbb
add
mov
jae
xor
mov
mov
push
lcall
int
outsl
call
fmuls
sbb
test
xchg
mov
ja
and
jecxz
sub
add
inc
push
pop
outsl
adc
repz
and
imull
into
push
push
stos
adc
sar
cmp
push
int3
mov
rcrl
push
les
arpl
dec
adc
mov
scas
das
push
test
dec
das
hlt
cli
into
movl
jge
sbbb
jne
jge
lods
insb
mov
lret
xchg
xor
loope
xchg
pop
jbe
in
push
into
sub
mov
popa
add
les
mov
mov
or
sub
shl
pop
pop
fldenv
push
mov
sub
in
sbb
and
adc
mov
pop
add
bound
xchg
inc
or
loope
shll
mov
mov
push
popa
mov
pop
push
aas
leave
and
popf
mov
stc
push
test
mov
or
test
or
stos
iret
adc
dec
sbb
cmp
inc
xor
outsl
xchg
pop
fs
add
or
std
mov
lahf
push
fmull
mov
sbb
push
mov
sbb
inc
sub
push
sbb
sbb
loop
dec
inc
imulb
adc
clc
or
je
push
imul
xor
popa
mov
repz
mov
xor
or
add
and
aad
sti
sbb
mov
xor
or
es
lret
scas
mov
cmp
cmpsl
push
pop
sbb
push
pop
dec
push
or
cmc
enter
jbe
pop
dec
mov
cmp
clc
xor
mov
add
push
or
and
cmp
mov
jecxz
outsb
xlat
pop
add
cli
test
sub
ret
jne
adc
and
fmul
add
test
cmc
data16
add
xor
stc
bound
mov
mov
sahf
mov
xchg
and
lds
fs
push
fistl
cmp
jb
and
pop
nop
sub
daa
je
jge,pt
adc
xchg
jb
rolb
imul
add
push
jb
jge
pop
mov
jne
loope
mov
push
shlb
cmp
mov
or
sub
push
lods
movsb
xor
cltd
xchg
add
pop
and
xor
fiadds
fbstp
mov
xchg
test
push
test
sub
stc
shl
add
rorb
call
fsubs
mov
mov
outsl
and
or
adcb
daa
in
dec
lahf
push
push
pop
rolb
leave
adc
cwtl
mov
sbb
in
push
adc
pop
pop
aas
inc
or
or
add
jne
and
sbbb
jnp
or
rolb
mov
mov
jb
lods
xchg
cmp
mov
or
aas
or
fwait
push
mov
add
ss
lcall
xchg
pushf
std
add
xor
and
or
and
adc
lahf
or
push
and
cmp
mov
and
ficompl
aas
mov
adc
sub
add
inc
sub
repnz
pop
add
push
xchg
push
sub
push
jb
ss
add
mov
rep
roll
xor
push
popf
jns
inc
cs
cmp
push
cmp
cmp
les
adc
mov
push
repnz
subb
test
dec
shr
add
xor
cld
fidivl
pop
add
shr
fldt
test
sahf
mov
inc
test
add
jmp
mov
xor
sbb
mov
cmp
cmp
test
inc
xchg
iret
inc
cmp
push
mov
stos
dec
cmp
mov
cmp
imul
test
mov
adc
pop
insl
sub
mov
leave
into
in
and
xchg
lods
xor
pushf
or
insl
stos
xchg
push
lods
dec
jge
push
or
or
dec
cli
add
jne
movl
jb
dec
and
dec
and
stos
cmp
push
enter
sub
hlt
mov
inc
cmpsl
dec
arpl
cmp
push
inc
cmpsl
xor
stos
mov
add
stc
int3
pop
or
or
pop
add
cmpsl
mov
les
mov
popa
jo
sub
sub
xor
sbb
movsb
call
insb
push
sti
sbbb
jg
inc
movb
cmp
inc
in
rol
mov
add
sti
out
adc
mov
int3
mov
movsb
aad
testl
lahf
sbb
and
and
push
movsb
loop
and
add
add
fwait
or
insb
mov
mov
push
xor
push
xor
sub
mov
cmp
xchg
les
lods
pop
or
cmp
enter
xchg
aam
xchg
jmp
mov
xor
jmp
mov
por
push
mov
lods
movsb
jecxz
push
rolb
movsb
rorl
push
add
cmp
push
mov
mov
fsubrl
mov
fs
scas
sbb
jmp
sbb
mov
ficompl
ljmp
or
into
mov
int
push
fcoml
xchg
aad
test
mov
xor
out
xor
daa
sbb
mov
fwait
into
cmp
or
pop
call
mov
sbb
ja
and
cmp
push
pop
addl
inc
sub
mov
orl
loopne
cmp
lea
enter
pop
fildl
sub
pop
cmp
xor
push
imul
iret
test
or
push
test
dec
loope
push
shrb
mov
int3
pusha
ds
shlb
mov
push
or
push
inc
xor
fs
pop
jo
add
mov
mov
inc
push
shll
push
dec
mov
dec
push
into
ja
mov
push
lret
enter
ficompl
jne
push
ret
lds
xlat
add
inc
push
call
adc
add
dec
cltd
mov
ds
xchg
and
or
int3
test
sub
pop
cmp
add
mov
push
cmpsl
je
sar
inc
jbe
inc
rorb
xor
pusha
pusha
adc
add
or
xor
add
pop
orl
or
repnz
adc
sub
nop
push
adc
adc
in
jg
or
xchg
mov
jb
mov
cmp
sbb
adc
pop
das
pop
xor
and
xlat
adc
adc
ds
adcl
xor
and
sub
sbb
jb
test
push
pop
and
in
push
adc
sub
adcl
add
xchg
jo
add
ret
xchg
adc
pop
inc
inc
enter
cmp
adc
inc
jns
add
and
pushf
ss
sbb
mov
inc
js
js
adc
rcrl
loope
addl
cmp
and
dec
sub
push
pop
repnz
cwtl
push
and
add
inc
testl
xor
sbb
jbe
xor
adc
pop
xor
addb
add
jl
pop
pop
jl
std
cltd
nop
dec
mov
js
sub
sbb
rclb
jl
add
sti
icebp
adc
push
push
fbld
addr16
or
inc
sbb
inc
rorl
and
inc
and
in
xor
movsb
mov
sahf
fsubr
mov
lret
rcrb
les
fmulp
inc
out
push
int3
cs
mov
dec
loopne
dec
js,pn
cmp
in
or
jno
sbb
push
sbb
in
mov
cmpl
pop
jl
insb
and
leave
jmp
ja
or
nop
xchg
cmp
cwtl
adc
jno
ds
jbe
adc
out
cmp
rolb
aad
sub
lea
fistpl
sub
push
ret
xchg
or
adc
push
cmpsb
imul
shll
dec
js
idivl
test
and
jo
daa
lea
sub
jecxz
aad
pop
or
mov
int3
aam
push
fdivl
pushf
sub
mov
sub
jl
or
je
and
mov
pop
addb
sbb
adc
mov
and
or
lock
jl
outsl
xchg
inc
push
and
in
and
or
xor
pop
dec
enter
pop
mov
xor
dec
and
or
adc
out
sbb
jbe
pop
pop
add
int
popa
or
mov
add
popa
fdivrs
xor
lea
shrl
insb
push
test
arpl
dec
xor
push
fsts
xchg
xor
push
adc
jns
es
pusha
and
or
pop
mov
mov
je
je
push
pop
adc
mov
frstor
outsl
add
jo
movsl
and
jnp
jne
out
adc
cmp
in
mov
jb
add
dec
in
aaa
stos
and
clc
and
or
jge
xchg
icebp
lea
fsubrs
decl
add
push
repnz
or
mov
pop
jle
jg
fistl
sub
or
shl
into
or
xor
pop
icebp
shrb
jl
add
or
int
mov
xor
push
xchg
mov
add
rorb
jne
jns
popf
add
jmp
pop
push
fs
enter
dec
scas
add
addl
lea
pop
sub
mov
or
and
test
sub
mov
inc
fstpl
hlt
mov
jno
adc
loop
or
inc
out
adc
add
int3
lcall
push
lea
addb
mov
dec
jge
cltd
jl
or
mov
cmp
test
in
mov
and
push
sbb
jno
or
test
test
or
test
mov
inc
sbb
xor
popa
add
xor
insl
adc
cltd
call
jecxz
dec
sahf
fldcw
dec
add
and
andb
shlb
dec
mov
inc
xchg
hlt
test
add
insl
and
cmc
scas
nop
push
mov
cld
ret
xor
dec
ss
cmp
pop
icebp
pusha
jbe
dec
add
inc
popa
in
add
mov
clc
dec
and
jnp
adc
fisttps
and
xor
clc
incl
dec
jae
scas
jno
or
mov
inc
in
add
xchg
mov
mov
cld
mov
sbb
add
sbb
call
push
push
mov
pusha
iret
mov
insl
jo,pt
aam
push
xchg
test
jbe
xlat
jecxz,pn
orb
pop
imul
cmp
jle
add
rcrb
clc
xor
mov
sbb
push
add
mov
add
pop
sub
and
xchg
mov
repnz
xchg
hlt
jg
xor
push
aad
sbb
jae
pop
add
or
outsb
xor
in
pop
push
mov
adc
lock
cmp
movsl
sub
push
loopne
sbb
adc
inc
push
inc
push
xchg
fldenv
pusha
ja
roll
rcll
jp
jle
aas
add
xor
js
mov
lock
orl
ja
sub
mov
sahf
ljmp
fimuls
shl
pop
jo
adc
add
pop
xor
add
lea
sarl
not
mov
sub
and
cmp
jp
aaa
inc
jg
add
jmp
pop
mov
push
or
mov
pop
or
ljmp
mov
mov
or
push
stc
test
add
or
cmp
sub
xchg
sbb
pop
int
test
rorl
test
aam
adc
push
or
push
imul
mov
imul
sbb
out
enter
sub
mov
loopne
es
icebp
xlat
adc
sub
pop
add
dec
outsl
pushf
and
xor
test
jmp
adc
fmuls
adc
mov
cmp
inc
call
sbb
push
insl
cmp
je
mov
stos
mov
hlt
add
ret
je
adc
inc
ss
into
pop
mov
pop
push
aas
push
push
mov
add
jmp
push
cmp
test
loopne
push
push
test
inc
push
push
jmp
mov
pop
ds
pop
jmp
add
mov
jno
push
out
jbe
adc
push
push
push
jno
sub
and
inc
dec
sub
and
jns
mov
inc
stos
xor
xchg
nop
add
mov
je
cmpps
mov
xchg
inc
add
loope
mov
jns
js
sete
aam
push
push
fadds
add
in
sbb
enter
adc
add
add
mov
push
ss
mov
mov
jo
sub
add
and
aad
inc
or
mov
lods
dec
fcompl
clc
dec
push
cmp
add
roll
mov
subl
into
les
jg
add
xor
jo
lods
dec
stos
in
movsl
dec
test
or
mov
dec
sbb
pop
aas
xor
dec
dec
mov
jl
add
dec
sti
mov
xchg
xor
dec
push
mov
scas
push
leave
pop
ret
or
or
adc
or
push
arpl
jno
ret
inc
add
lahf
ret
pop
push
test
mov
xchg
dec
lcall
inc
or
jnp
into
fdivs
inc
pop
mov
or
mov
mov
pop
pop
lea
setge
cmp
pop
xor
arpl
sub
dec
adc
sbb
mov
lock
jle
jl
sub
dec
dec
xor
dec
sub
in
cmp
xor
sbb
xchg
push
pushf
pop
leave
and
mov
jo
or
mov
ret
leave
sub
lahf
and
or
pusha
sbb
cmp
jg
and
test
jbe
adc
enter
xor
cmp
adc
scas
cmp
adc
inc
adc
mov
push
movsb
mov
and
add
pop
push
jle,pt
stos
inc
out
dec
sbb
or
shlb
or
mov
and
mov
cmpb
jmp
cmp
and
push
push
or
hlt
and
add
call
enter
adc
jo
mov
xchg
sbb
cs
or
cwtl
mov
push
sbb
pop
and
shlb
inc
scas
shlb
adc
lock
cmp
push
mov
stc
fiaddl
push
icebp
sbb
add
fsubrl
and
sbb
pop
push
push
jg
push
cmp
xchg
inc
lock
inc
scas
adc
pop
repnz
inc
sahf
ret
test
adc
pop
push
sbb
jno
and
cmp
stc
or
pop
inc
outsl
or
bound
les
add
mov
and
inc
mull
nop
pop
lds
xchg
push
mov
mov
cmpsb
ret
mov
push
fsubrl
or
mov
inc
sbb
mov
lods
fnstsw
xor
cmp
mov
mov
sbb
pusha
out
fldt
sbb
mov
dec
stc
mov
shrl
pop
shrl
adc
adc
ds
and
pop
int
push
mov
dec
loope
xchg
mov
test
je,pn
push
mov
xor
add
pop
xor
mov
ret
jns
dec
stos
ds
or
int
dec
and
dec
fiaddl
mov
push
jg
mov
jmp
hlt
cmp
jne
call
push
inc
les
pop
mov
xchg
sbb
sub
je
dec
xchg
loop
ror
cmpsl
cmpsl
adc
aaa
int3
loope
jns
inc
fnstenv
testl
sti
push
mov
cmpb
adc
call
sbb
cwtl
sbb
adc
xor
dec
lea
adc
add
sub
or
lea
in
clc
pop
adc
push
push
push
imul
or
pushf
inc
ljmp
insb
push
push
inc
sub
cmc
cltd
add
out
nop
xor
push
jne
mov
xchg
add
sub
xor
mov
sbb
sbb
fneni(8087
and
bsr
dec
mov
or
arpl
insb
mov
add
xchg
lcall
jb
movsl
and
xchg
lret
mov
lcall
push
and
xor
adc
bound
out
cld
pop
mov
cmpsb
aaa
xor
je
cmpb
mov
jg
cwtl
lea
add
cmp
or
push
mov
fldt
sub
or
sub
mov
xor
lret
ret
jnp
add
cmp
push
cmp
shrb
mov
cmp
jge
arpl
jp
add
dec
and
inc
ficoml
push
movl
aaa
pop
dec
es
mov
mov
pop
push
es
sbbb
xor
loopne
popa
adc
sahf
jl
mov
push
jg
push
add
push
test
adc
repz
push
ret
enter
mov
orl
dec
adc
dec
add
mov
adc
repnz
aad
test
sbb
mov
pop
push
mov
hlt
sub
push
test
sbb
pushf
or
push
pop
ret
lds
jg
jne
inc
sbb
sub
dec
daa
lods
loope
lods
jle
and
repnz
dec
subl
push
adc
push
push
or
dec
dec
scas
ret
jg
ja
cmp
dec
cs
mov
or
mov
add
mov
ds
mov
push
mov
adc
flds
cmc
ds
push
addr16
lahf
push
fadds
inc
jle
push
dec
fisttps
pop
mov
ret
aas
cmp
xor
add
adc
inc
js
adcl
or
or
test
inc
loopne
push
mov
nop
jl
clc
xchg
scas
in
sbb
pushf
xchg
or
popa
pop
repnz
cmpsb
push
dec
adc
imulb
push
adc
and
or
cmp
and
and
adc
push
sbb
cld
call
ficoms
aam
dec
adc
cld
add
pop
inc
jl
mov
and
adc
cmp
jle
das
or
lock
xchg
add
imulb
lock
loop
int3
adc
pop
js
mov
decb
insl
insl
push
inc
add
or
and
add
push
into
sub
sarb
lea
cmpsl
push
lea
rolb
add
cltd
or
add
and
push
push
mov
push
push
rcrl
outsl
js
jp
outsb
shrb
and
jno
test
rcll
je
repnz
sarl
in
mov
pop
hlt
xchg
inc
add
add
sbb
mov
pop
pop
adc
mov
test
add
ret
pop
xor
or
test
addb
outsb
aas
mov
mov
push
inc
or
in
add
adc
add
and
inc
jae
cs
jg
cmp
fisubrs
adcb
adc
rolb
in
cs
push
scas
loop
in
call
stos
inc
inc
aaa
or
movsb
pop
pop
pop
push
outsl
add
pop
sbb
or
mov
add
mov
sub
je
and
and
xor
insb
inc
mov
sbb
test
int3
or
aas
iret
cmp
jns
add
stos
push
and
xor
xchg
lods
jno
bnd
arpl
or
pop
mov
mov
xor
push
cmp
shlb
jo
mov
add
aam
xor
and
mov
sub
or
ret
xchg
shll
sub
daa
mov
movsl
cmpsl
lret
pop
cmp
push
sub
mov
iret
xor
push
pop
mov
mov
imul
icebp
setge
add
sbb
push
jecxz
sbb
push
sbb
shll
stos
add
scas
xchg
pop
in
mov
xor
sub
or
imul
adc
add
jmp
xchg
mov
add
pop
jmp
ss
ds
in
xchg
scas
cmp
adc
cmp
mov
push
shll
push
push
xchg
rolb
lods
stos
mov
mov
push
push
inc
push
cli
pop
sub
sub
xadd
dec
mov
mov
add
push
dec
data16
cmc
adc
or
xchg
push
add
call
or
jne
and
or
or
xor
pusha
ret
or
jae
cmp
adc
push
jb
subl
xor
ficomps
and
dec
pushf
fmul
sub
or
push
xchg
push
xchg
xchg
xchg
sbb
mov
addr16
pusha
or
push
ds
xchg
stos
dec
add
dec
out
aam
or
inc
pop
add
gs
xchg
and
notb
sarb
je
jge
loopne
dec
dec
popa
es
jno
scas
jmp
mov
xchg
into
add
sbb
movsb
pop
jo
dec
cmp
add
xor
add
inc
cmp
daa
jge
push
push
ds
xlat
jmp
fldenv
pusha
and
pusha
add
adc
xor
cwtl
sbb
pop
int3
dec
mov
pop
xchg
shll
add
out
sub
scas
adc
dec
pop
jo,pn
cld
cmp
pop
fcomps
mov
lds
inc
test
js
cmc
mov
dec
add
pop
add
adc
jbe
inc
pop
pop
nop
lods
sbb
dec
and
movsb
pusha
sar
lret
mov
jecxz
adcl
aaa
sahf
sub
inc
aad
pop
xchg
cli
and
mov
in
jle
jp
xor
test
adc
int3
push
cltd
int
ljmp
add
dec
xchg
mov
pop
adc
in
sub
arpl
mov
jle
pop
jne
ret
nop
faddl
cwtl
fstps
or
add
xchg
in
and
ds
ss
xchg
mov
sarl
iret
daa
leave
subl
or
ds
and
mov
push
push
adc
das
aas
push
mov
or
add
ret
pop
aaa
incl
mov
add
jle
add
add
adc
jae
mov
sbb
jb
adc
and
rorl
mov
adcl
adc
add
cmp
inc
incl
imul
loopne
into
pop
add
roll
stos
jg
sbb
leave
inc
bound
dec
ss
popa
fs
dec
dec
jnp
sub
sbb
push
and
inc
imul
add
mov
push
sub
je
stc
lock
cltd
dec
sub
and
xorb
nop
mov
push
push
pop
mov
add
xchg
sub
xchg
mov
jecxz
xchg
test
fistps
mov
push
adc
add
push
in
aam
lret
sub
push
add
pop
das
daa
add
in
orl
xchg
sar
nop
test
cmp
sysret
pop
dec
mov
xchg
dec
pop
push
sbbb
mov
int
pusha
lds
jle
xor
gs
add
imul
test
lcall
inc
add
mov
pop
stos
pushf
cs
inc
or
sub
mov
xor
xchg
lock
lea
imul
lcall
inc
cmp
mov
outsb
push
sub
sti
out
dec
add
push
or
mov
mov
sar
test
inc
jbe
mov
push
aad
insl
mov
repnz
sti
fisubs
jbe
push
sti
and
scas
add
jl
lods
rcr
mov
mov
js
loopne
jmp
stc
adc
test
push
inc
or
rol
pusha
out
mov
dec
and
ret
mov
rorl
lret
movsl
fwait
ret
ret
int
or
nop
pop
mov
sbb
push
dec
push
xchg
or
nop
cmpsl
dec
inc
push
push
push
test
sub
mov
test
push
adc
jb
push
pop
inc
jmp
mov
sbb
bound
inc
push
jb
or
repnz
add
add
xchg
rorb
push
pop
xor
aas
adc
add
fnstsw
ret
sub
or
add
sub
pop
mov
ljmp
or
sub
cmp
test
je
lea
xor
inc
test
fldz
or
call
push
add
xor
pop
cmp
jb
pop
pop
add
je
js
nop
je
push
imul
lea
push
push
inc
sub
jne
push
rorl
add
mov
fiaddl
mov
jl
mov
mov
cmpsl
xchg
orb
std
imul
add
in
mov
jle
cmpb
jno
mov
sub
or
jge
lret
fisttpl
xor
dec
add
xchg
xor
fucomip
scas
cmp
loopne
aam
sahf
fists
and
or
fbld
sub
sub
lea
add
sarb
pop
push
push
push
push
xor
decb
push
push
push
push
test
outsb
test
adc
lcall
xchg
push
add
add
push
movb
mov
rol
xor
mov
pop
ljmp
and
andb
add
sub
or
js,pn
jg
ja
sbb
mov
stos
pop
add
cmp
adc
enter
pop
jns
and
xchg
cs
sbbl
add
sar
fisubs
enter
push
dec
push
mov
scas
dec
jno
mov
xor
jmp
sbb
jmp
loopne
mov
andb
push
push
or
xor
mov
lea
jmp
mov
jnp
dec
sub
test
int
mov
or
jge
pop
pusha
sarl
and
adc
clc
pop
jecxz
mov
sub
outsb
jb
xchg
push
je
jo
mov
ljmp
outsb
or
adc
stos
sbb
lock
push
mov
xor
or
pop
lret
repz
pop
push
push
sbb
testl
add
sbb
cmp
jg
ret
add
cmp
js
jo
push
call
xchg
or
sub
adc
shll
and
lock
mov
shll
lock
push
and
pop
imul
lock
es
push
and
mov
test
adc
add
inc
in
mov
xorl
mov
cmpsl
lds
inc
out
jne
fiadds
jge
inc
jl
addl
out
dec
pop
das
pop
add
movsl
add
fprem
sbb
sub
and
filds
std
scas
pop
mov
mov
cmp
je
push
jle
dec
pop
or
push
inc
sbb
sahf
push
xor
sbb
mov
adc
clc
cmp
xlat
push
not
push
adc
lock
rolb
jo
or
rcrl
sub
test
push
sbb
pop
test
bound
ja
add
inc
cld
xor
idivb
dec
repnz
cld
add
sbb
add
mov
sub
pop
lods
out
movb
out
inc
dec
jmp
xor
test
cmp
int3
xor
rolb
xor
cmp
and
mov
and
xor
adc
rclb
mull
ja
adcb
mov
call
ret
push
pop
pop
loop
jbe
cli
fsub
lock
push
or
mov
lock
push
aas
mov
rclb
aam
push
dec
rol
ret
pop
push
ret
loop
pop
ss
add
pop
cmp
pop
lret
or
pop
ret
lds
cmp
sbb
mov
stos
fdivs
add
or
adc
test
sbb
nop
jp
loopne
xchg
arpl
imul
lds
aas
inc
inc
bound
gs
add
rolb
in
fdivrp
sarb
adc
clc
ret
inc
dec
push
push
mov
mov
js
nop
dec
lock
xchg
cld
adc
pop
sub
lods
lods
inc
sbb
xor
push
data16
sti
push
je
push
test
push
je
sbb
push
jnp
cmp
jae
mov
bound
je,pn
push
ds
ljmp
movl
inc
mov
dec
xorl
or
mov
add
adc
pop
and
inc
and
or
sahf
push
pushf
fdivrl
xor
xor
push
sub
and
mov
add
sbb
scas
pop
jo
jge
ret
jge
movb
imul
pop
or
cld
sub
daa
push
or
dec
popa
adc
cmp
lea
jne
push
push
inc
sub
cmpb
mov
jl
cmpsb
mov
mov
cmp
adc
push
insb
xchg
dec
js
push
mov
xchg
push
insl
mov
test
cli
lcall
or
dec
jle
rorl
push
pusha
cmp
out
movl
adc
pop
push
pop
arpl
pop
ja
mov
je
stc
add
pop
add
inc
out
dec
and
push
mov
mov
xorl
or
cwtl
sub
sbb
xchg
loopne
pop
ja
lcall
adc
inc
test
stc
and
jnp
loope
or
add
push
mov
out
faddl
sbb
add
add
xchg
or
mov
aas
add
adc
or
ja
and
mov
or
pushf
xchg
xchg
push
mov
cmp
jnp
mov
fcomp
ljmp
mov
fisttpll
rep
inc
mov
mulb
mov
enter
sbb
adc
xor
cltd
js
inc
dec
inc
das
je
or
sbb
nopl
or
jne
mov
inc
and
mov
pop
lea
dec
cs
es
mov
sahf
inc
sbb
cmp
je
mov
push
test
jmp
inc
ljmp
test
and
mov
jmp
jbe
lea
lea
mov
sti
ja
pop
sub
inc
jmp
inc
and
mov
fimull
mov
pop
fucomp
lock
pop
sbb
cvttps2pi
cmp
mov
dec
lcall
idiv
xor
out
mov
mov
mov
or
and
and
loopne
test
pop
rorb
fdivrs
fstp
sub
cmp
fimuls
jns
jns
mov
dec
adc
sub
jnp
mov
adcb
inc
cld
std
cmp
ja
inc
push
cmp
loope
mov
add
push
aam
cld
push
push
mov
cmp
sub
or
adc
push
pop
fs
add
and
test
test
adc
insb
outsb
cli
inc
cmp
jb
cmp
ja
data16
out
ljmp
shlb
xor
sub
cmp
ja
and
ljmp
mov
jmp
cmp
xor
add
popf
lods
fxch
cmp
test
outsl
aaa
mov
mov
mov
add
mov
fwait
mov
notl
mov
cmpb
fsubr
push
cwtl
aas
xor
and
or
and
leave
add
mov
xchg
add
stos
jne
ret
push
outsl
xchg
aam
sarl
inc
imul
xor
mov
jmp
push
pusha
aas
pop
loope
add
jbe
jo
jne
adc
dec
test
push
lock
dec
call
mov
inc
add
and
xor
jne
inc
jmp
xchg
lret
cmp
mov
adc
add
out
mov
and
test
adc
je
test
jne
cmpb
sub
jb
inc
lds
xor
dec
cmp
and
repnz
adc
movb
inc
push
push
fcoml
adc
push
or
push
push
lret
roll
push
inc
add
scas
mov
pop
mov
inc
and
or
outsb
and
inc
aas
es
and
mov
lods
fisttps
mov
adc
push
jae
mov
inc
pop
jbe
push
pop
ret
outsl
ja
ret
pop
je
insl
fnsave
sbb
dec
ljmp
les
cmc
cmp
jecxz
jl
iret
adc
mov
lret
sbbb
ret
ret
es
mov
rolb
sbb
pop
std
imul
sahf
add
cmpb
adc
bound
xchg
lahf
test
adc
sub
ljmp
out
or
outsl
pop
add
repz
cmpl
mov
je
scas
aam
push
das
mov
or
imul
sbb
or
push
xor
neg
push
mov
lods
cmpb
and
mov
pop
cmp
lods
mov
jbe
fs
dec
out
add
jg
pop
or
fcoms
dec
shrl
sub
xchg
out
lea
test
and
sbb
call
sub
add
push
xchg
xchg
add
lea
adcl
fdivr
sub
adc
je
cmp
je
xchg
jae
jecxz
add
fldt
dec
es
ss
mov
or
imul
and
jb
pop
jmp
cwtl
cmp
dec
mov
daa
lods
aas
fimuls
or
pop
xchg
mov
add
je
rcrl
xchg
mov
sbb
xchg
add
out
or
sbb
cmp
paddsw
clc
cmp
mov
ja
dec
cmp
jbe
push
mov
dec
test
or
mov
or
pop
jb
test
cmp
mov
fidivl
rcll
scas
jo
stc
add
out
inc
or
adc
pushf
dec
sahf
daa
xor
test
in
mov
inc
call
xor
xor
mov
or
lcall
xor
inc
cmp
jb
mov
push
cmpsl
and
or
add
pop
clc
scas
stos
sti
lcall
lea
mov
mov
shrl
mov
mov
xor
adc
cltd
push
out
cmp
push
push
lahf
mov
ss
mov
add
pop
fldl
xor
mov
jb
mov
inc
mov
inc
int
lea
or
sbb
fcoms
dec
mov
lods
jg
push
adc
push
stc
xchg
test
enter
sarb
mov
cmp
hlt
add
push
lea
cmpsl
mov
lea
rcrb
nop
stos
popf
aad
incl
xor
adc
xchg
inc
pop
test
add
push
mov
xchg
fstl
lea
mov
inc
repnz
or
out
lods
in
mov
adc
lahf
and
push
pop
pop
sub
nop
sbb
test
add
popfw
add
sti
xchg
mov
test
cld
divl
adc
mov
sbb
leave
mov
repz
and
aam
pop
cwtl
cwtl
cli
add
sbb
in
inc
xchg
push
lahf
xchg
inc
dec
cld
sub
shr
adc
cwtl
jno
cld
out
mov
mov
xor
mov
mov
pop
movsl
nop
movsl
pop
pop
cmp
jge
jae
test
js
repz
and
rol
inc
in
fucomip
rol
pop
jp
cmpsb
mov
add
mov
ss
adc
cmp
jne
pop
stos
mov
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
push
inc
mov
add
mov
insl
add
or
addb
jmp
push
rolb
jae
shlb
lahf
lock
je
ficoml
cmp
inc
mov
xchg
fdivs
inc
jne
pop
movb
inc
bound
cmp
cmp
mov
rcrl
xlat
push
or
jbe
orb
andl
pop
cmpsb
inc
xor
out
outsl
cmpsl
fnstenv
ljmp
dec
movsl
mov
sub
mov
je
inc
or
repz
jne
stos
and
and
sub
sbb
das
clc
jmp
mov
push
xchg
push
sub
mov
inc
shll
jmp
lock
cmp
je
cmpb
cmp
jne
movb
sbb
ret
jl
outsl
gs
cmp
addl
rolb
inc
mov
arpl
inc
sahf
mov
adc
jne
les
cmp
ret
xchg
xor
int3
scas
call
cmpsb
and
xchg
mov
out
push
out
mov
fistl
cmp
or
mov
test
cs
inc
inc
mov
int
aam
pop
cmp
cmp
shl
fadds
mov
inc
push
xchg
jmp
inc
jo
cmp
inc
cmpsl
sarb
sbb
cli
and
cld
ljmp
inc
and
jb
push
push
sbb
insb
xchg
enter
je
and
stos
fmull
add
pop
jne
rcrl
mov
push
rorb
push
not
adc
sub
adc
cmp
mov
popa
movsl
pop
lods
mov
subb
mov
push
sub
xor
jns
iret
in
inc
mov
mov
mov
movsl
or
adc
cs
jne
or
and
cs
jnp
inc
push
cmp
sbb
dec
cmp
call
lea
in
xchg
popa
dec
cmp
pushf
push
out
nop
mov
or
or
addb
mov
inc
stc
push
stos
pop
xchg
sub
mov
lret
lds
inc
xor
in
mov
sub
jb
dec
call
lcall
mov
test
jmp
push
sub
add
sub
test
fsubl
iret
lods
sarb
push
jge
xor
pop
push
jp
test
aam
mov
mov
ret
cmp
or
pop
inc
mov
push
inc
loop
popf
lret
jg
push
push
ds
divb
or
bnd
push
or
sub
push
and
add
aaa
lahf
xor
mov
pop
add
stos
cltd
and
or
push
nop
or
sub
jmp
push
push
sub
push
rolb
sub
xchg
loope
add
cmp
or
inc
movsb
shlb
sbb
mov
adc
nop
je
push
add
fcoml
lock
add
je
push
push
or
mov
lods
push
mov
stos
cmp
pop
add
xlat
xor
sbb
dec
jae
or
pop
push
pop
aam
pop
mov
int3
mov
jle
mov
push
xchg
xchg
inc
inc
or
dec
xor
xor
push
ds
repz
pop
sbb
mov
stos
insb
xlat
xchg
or
dec
ljmp
or
mov
cmpb
daa
hlt
inc
add
nop
in
xor
add
je
push
pop
pushf
or
xor
add
mov
data16
sub
jnp
fs
pushf
add
pushf
push
xor
icebp
and
sbb
mov
lds
imul
ja
es
fistpll
or
cvttps2pi
push
aas
mov
mov
test
rclb
pop
and
call
cmp
testb
cmp
cld
les
adc
push
sub
insl
loop
jne
inc
jne
ret
clc
jno
sub
pusha
shl
or
fldt
inc
cltd
repnz
sub
mov
loope
rcrb
adc
dec
sub
sub
or
pop
jg
jo
cmp
cmp
aas
and
outsb
sub
sub
or
dec
or
push
pop
dec
pusha
lock
out
adc
xchg
xchg
loopne
in
inc
pop
push
popw
stos
fidivrs
adc
and
insb
ret
xchg
or
xor
hlt
adc
xchg
sarl
in
stos
sbb
sub
gs
push
fidivl
jo
add
and
adc
faddl
adc
out
or
jne
roll
push
or
or
add
xor
mov
ror
pop
add
add
xchg
sub
mov
int3
inc
mov
push
ret
pusha
xorb
test
jno
cmp
jl
into
pusha
and
adc
or
pop
and
imul
popa
cmc
mov
push
push
or
dec
or
cmp
xlat
push
inc
push
push
adc
mov
inc
adc
call
jnp
mov
and
fwait
mov
cmp
ret
xor
popa
xor
add
ja
pop
adc
leave
mov
bound
push
sub
scas
movl
fwait
mov
adc
add
sub
dec
sbb
fdivs
cmp
and
push
xchg
orl
jmp
pushf
and
push
xor
adc
lcall
sbb
or
scas
and
jg
pushf
push
add
fnstcw
test
adc
adc
cmp
adcb
lret
ljmp
and
adc
jo,pn
inc
mov
faddl
stc
mov
sbb
or
or
dec
cli
mov
shl
data16
and
xor
or
rcrb
out
sbb
dec
jns
push
icebp
xor
xor
sbb
pop
sub
adc
mov
jmp
cmp
or
jecxz
add
mov
inc
inc
jnp
or
pop
fadd
sbb
push
dec
cmp
les
inc
mov
add
lea
jnp
lds
mov
pop
pop
jg
inc
js
mov
sbb
hlt
sub
jecxz
cmp
in
jmp
lods
and
test
push
jae
pusha
nop
add
and
mov
jl
inc
push
and
test
sbb
call
mov
pop
or
mov
mov
cmp
mov
add
sarl
enter
push
jno
and
and
cmpsb
es
sub
mov
add
xchg
imul
and
mov
mov
push
sub
xor
mov
push
inc
in
or
sbb
mov
xlat
push
mov
adc
aam
lods
xor
add
pop
mov
push
add
rolb
sbb
popf
mov
jecxz
movsl
lea
aaa
loopne
mov
or
insb
sti
insb
mov
pop
cs
add
cld
mov
aad
cmpsl
add
gs
incl
jb
das
xchg
add
push
es
fildl
cmp
sub
xor
push
aam
sti
js
or
mov
xor
cmc
icebp
dec
lret
nop
shlb
mov
loopne
add
je
sahf
xor
inc
lds
or
sub
or
lods
es
pop
jp
adc
mov
xchg
push
adc
cmpsl
dec
xchg
pop
push
xchg
aas
imul
dec
adc
in
pop
scas
mov
pushf
mov
mov
dec
loop
test
and
adc
lea
push
push
sbb
clc
mov
sbb
mov
inc
testb
cmp
insl
dec
push
xor
test
push
repnz
add
inc
repnz
inc
lahf
add
and
cmpb
ret
mov
loopne
pushl
in
sbb
sub
and
add
or
pop
adc
pop
adc
dec
add
jl
add
fnstenv
ljmp
cmp
out
mov
pop
cmp
adc
mov
faddl
movsl
or
mov
or
aam
xor
mov
or
in
lods
inc
mov
and
add
xlat
push
mov
mov
pop
sete
repnz
mov
loopne
rorl
int
loope
mov
xor
in
sarl
sbb
push
fldl
push
sub
imul
push
dec
cltd
roll
call
push
pop
jl
inc
xchg
adc
adc
or
pop
push
jb
sub
xchg
subb
fs
imul
xchg
push
xor
jl
cwtl
push
fwait
in
inc
fdivl
mov
icebp
pop
mov
pop
mov
mov
hlt
cmpl
roll
or
mov
int3
lea
mov
and
test
pop
jne
cltd
adc
or
jnp
xor
adc
sahf
gs
inc
xor
xor
mov
inc
pushf
subl
push
enter
call
into
push
lods
jecxz
or
push
dec
adc
lea
xchg
gs
xchg
adc
push
cltd
nopl
arpl
and
sub
or
rcrb
adc
sbb
mov
lea
out
and
repz
aad
lahf
or
clc
add
dec
xchg
lea
or
xor
cmpl
adc
add
push
ret
add
mov
jb
xchg
notb
mov
push
mov
adc
fldcw
adc
sbbl
cmpsl
and
add
jns
out
xor
sbb
mov
addr16
mov
inc
xor
mov
or
lcall
cmp
ss
cmp
sub
or
push
push
adc
scas
sub
outsb
mov
sbb
sbb
pop
xchg
adc
xor
jb
pusha
push
xchg
and
ret
test
or
lret
pop
test
add
push
out
jnp
adc
cmpl
pop
push
pop
xor
xor
jmp
or
or
loopne
cmp
xor
sbb
pushf
fwait
in
pop
sahf
adc
mov
jne
add
sbb
xor
or
rclb
mov
cmp
push
mov
mov
test
clc
aam
inc
mov
push
cmp
inc
push
and
loopne
sbb
push
jmp
jo
xor
pop
lods
in
lahf
xlat
xchg
inc
repz
in
lods
xor
cmp
pop
fists
sbb
sete
fnstsw
insb
ljmp
or
and
and
adc
hlt
jns
cmp
adcl
hlt
out
cli
xchg
sbb
sbb
aaa
and
dec
and
dec
and
xor
lods
aam
pusha
rcrl
outsb
mov
sbb
sub
sub
add
push
sub
push
adc
sub
xchg
inc
subl
lea
and
push
xor
sbb
sub
stc
out
sub
jle
mov
and
dec
push
push
mov
imul
daa
in
je
fwait
xchg
mov
sub
sub
stos
adc
pop
pop
cmp
and
sbb
adc
push
mov
cs
adc
dec
mov
push
push
or
xchg
test
lock
add
stc
sar
push
add
in
xor
and
mov
aaa
add
dec
add
ja
sub
mov
sbb
xor
push
mov
mov
and
sub
add
add
leave
jae
sbb
xor
dec
add
xor
std
adc
sub
add
test
jmp
pop
dec
sbb
hlt
fucomi
mov
add
xor
xor
rol
and
pop
es
push
and
sbb
or
je
fdivl
cmp
insl
pop
push
jl
inc
dec
mov
mul
push
sbb
push
add
dec
dec
xor
pop
xor
or
xor
and
mov
cmp
popa
add
cmpsb
sub
add
aaa
fidivs
sbb
sbb
incl
adc
imul
inc
fs
push
inc
adc
add
and
daa
inc
adc
sbb
jns
inc
mov
pop
cs
mov
xor
lea
roll
mov
les
or
dec
or
jle
xorb
out
cmpl
and
cmp
inc
cmpsb
out
in
push
jmp
push
and
int
mov
sbb
or
sub
fs
sub
test
xor
push
pop
pop
xor
pushf
hlt
cmp
cwtl
adc
inc
mov
sub
popf
mov
and
fldenv
shlb
add
sahf
test
ret
sub
adc
imul
es
and
int
jnp
pop
aas
dec
xchg
js
mov
mov
idivl
inc
xor
or
addb
rcrb
inc
push
jmp
pop
xchg
mov
loop
xchg
notb
hlt
add
idiv
ret
adc
mov
in
push
pop
push
aad
push
pop
push
pusha
leave
and
pop
nop
sub
sub
xchg
addl
inc
int
sbb
xor
cwtl
lret
and
sub
add
add
ret
nop
les
cmp
mov
rcrb
outsl
and
imul
or
mov
inc
lret
cmp
push
lods
pop
ljmp
mov
aad
and
pop
inc
arpl
subb
dec
mov
adc
stc
inc
or
pop
movsl
fisubrs
push
pop
xlat
mov
xchg
xchg
inc
stc
add
shrl
add
push
inc
or
mov
push
push
sbb
adc
pop
outsb
dec
inc
pop
repnz
nop
lock
arpl
mov
add
and
je
mov
dec
push
or
push
or
cmp
clc
add
imul
push
mov
sub
js
fmull
lea
add
mov
sbb
stos
adc
or
sbb
test
jle
imul
push
push
stc
stos
xchg
or
mov
xchg
dec
jne
fs
dec
or
bound
gs
pop
or
mov
inc
inc
or
mov
je
stos
cmp
mov
ss
inc
inc
and
mov
mov
or
dec
or
frstor
addb
pop
add
inc
bound
punpcklwd
das
adc
and
js
pusha
cmp
dec
jl
xor
add
lea
and
dec
add
or
sbb
xor
repnz
add
orl
iret
add
xor
jo
cmp
pop
shlb
dec
pop
mov
scas
lods
push
jns
push
pushf
xor
mov
inc
xor
cmp
data16
add
or
add
pop
lahf
call
xchg
dec
je
add
pop
or
dec
add
sub
mov
add
fldcw
mov
shr
push
pop
push
cltd
pop
xor
stos
pop
je
mov
add
mov
inc
or
inc
ss
cs
add
cmc
aaa
mov
pop
lds
outsl
pop
je
sbb
xor
daa
or
xor
test
xor
or
jns
icebp
and
cmpsb
nop
pop
sub
and
leave
xchg
push
or
cmp
and
or
mov
sbb
pop
mov
or
loopne
aaa
mov
add
cs
ret
lock
inc
pusha
jl
ja
lock
arpl
add
in
mov
rcl
leave
clc
lret
adc
cmp
jmp
or
pusha
loopne
out
sbb
insl
jmp
gs
dec
rcll
mov
adc
and
and
add
or
scas
fwait
loopne
mov
adc
rcl
xchg
adc
pop
cld
cmpl
inc
out
int3
das
lcall
dec
mov
testl
das
lea
mov
shlb
call
xchg
push
xlat
ret
pop
mov
in
loope
jge
orl
cmp
or
push
call
pop
inc
and
sbb
in
adc
out
adc
or
or
pop
andps
addl
nop
fnsave
mov
aam
dec
bound
icebp
dec
mov
inc
xor
pop
push
jmp
jecxz
fdivp
mov
sub
in
sbb
popa
das
mov
push
je
mov
mov
sbb
out
xor
sub
or
sub
add
in
adcl
dec
mov
add
xchg
push
add
push
push
mov
and
add
out
add
dec
adc
sub
dec
cmp
inc
pop
mov
add
sub
xchg
into
gs
pop
and
outsl
and
leave
adc
pop
pop
and
push
subl
push
push
cmp
mov
movsb
dec
rolb
call
push
add
inc
cmp
cmp
dec
or
lar
aas
xchg
pop
adc
inc
outsb
and
pop
mov
divl
pop
mov
addl
insl
jnp
insl
sub
movnti
inc
cvttps2pi
into
into
mov
and
adc
cmp
pop
inc
adc
xchg
and
dec
dec
or
hlt
into
test
push
push
gs
ds
xor
lea
push
adc
mov
jl
fsub
cmpsl
fdivrs
sub
adc
mov
imul
test
shr
adc
dec
lods
lods
jnp
push
push
xor
mov
xor
xor
or
pusha
xor
loop
lds
add
insb
loopne
ss
lret
outsb
add
movb
bound
jmp
mov
mov
cmpl
sbb
push
addr16
xchg
cmpb
in
ret
pop
sbb
xchg
add
add
mov
rclb
dec
cmp
ret
stos
xlat
fbstp
xchg
add
out
pminsw
shufps
push
int3
jo
lds
or
jae
fimuls
adc
pop
add
cmp
ret
or
xchg
xchg
sub
dec
and
dec
push
or
lock
or
mov
rorb
ljmp
mov
adc
push
mov
and
or
cld
xchg
sub
mov
push
add
orb
mov
push
fcoml
cmp
mov
add
jmp
daa
add
sub
add
clc
popf
sbb
mov
lahf
xchg
jecxz
sub
lea
je
adc
pop
jne
je
mov
movl
inc
sub
mov
addb
cmpb
adc
xor
cwtl
mov
add
ret
aas
or
dec
adc
outsl
dec
mov
je
add
cmp
add
pop
push
sub
shlb
adc
enter
jo
fcomip
mov
rolb
xor
pushl
xor
pusha
mov
push
adcl
in
mov
pop
movsl
xor
dec
clc
mov
movsl
repz
adc
push
and
fwait
sub
xchg
pop
daa
adc
xor
fisubrs
imul
mov
xor
orl
push
lods
pop
ret
aaa
loope
cmp
clc
mov
cmp
sar
shll
jbe
and
sbb
xchg
cmp
mov
push
sub
inc
mov
inc
mov
cmp
lret
ss
ret
addb
xor
xchg
lret
pop
or
cmp
pusha
das
sub
xchg
fimuls
jg
push
pop
enter
pop
mov
sbb
enter
xor
inc
xchg
out
or
push
les
out
xchg
jo
inc
dec
sbb
xchg
cli
lods
lea
push
adc
xchg
icebp
shrl
cmp
sub
mov
stos
dec
push
jle
mov
pop
sbbl
mov
push
neg
xor
add
es
cmpsl
and
call
sbb
loopne
ds
mov
lcall
and
aad
aas
or
sub
or
xlat
push
cmp
inc
jl
mov
fs
xor
in
es
fadds
push
adc
adc
je
ljmp
add
les
lock
mov
mov
out
lcall
insb
add
adc
push
inc
push
loop
xor
pop
popa
jmp
popa
xchg
inc
lret
incl
hlt
or
and
add
sbb
cmp
mov
mov
cmp
jne
push
mov
inc
sbb
sbbb
stos
pop
and
fsts
mov
sbb
or
jge
push
cltd
adc
xchg
mov
adcl
xchg
jecxz
cmp
pop
es
push
add
cmp
sar
sub
orb
xor
jae
mov
fildll
loopne
and
inc
movsl
push
movsl
fwait
push
lret
pop
jmp
add
fsubrl
inc
add
lock
push
insb
or
leave
add
lret
inc
popl
or
xchg
lock
jmp
dec
add
decl
mov
dec
adc
fsubrl
aad
and
push
or
aas
ret
lods
flds
cmpsl
cmp
or
cmp
fistl
mov
in
push
cmp
ja
pop
add
inc
or
sub
and
and
sub
add
sbb
out
into
jmp
mov
mov
jge
mov
loopne
lahf
aas
or
rol
lock
mov
lods
xor
sub
test
aam
cltd
test
lds
lods
push
mov
mov
pop
jmp
or
sub
fcompl
or
cmpsl
mov
sbb
adc
cs
jl
xchg
add
xor
mov
popf
mov
mov
push
push
cmp
adc
mov
or
add
push
ss
mov
sbb
dec
movsl
and
jnp
inc
mov
add
pusha
gs
adc
xor
adc
dec
nop
xorl
jnp
popa
mov
shlb
sub
lea
add
je
lock
mov
adc
and
sti
les
flds
fmull
test
shrb
xchg
cmp
mov
mov
pusha
test
scas
push
and
sarl
cmp
mov
sub
or
sub
out
fimuls
and
icebp
mov
cli
test
dec
push
std
add
inc
push
add
push
aam
adc
dec
shlb
mov
lea
shlb
xor
pop
movsb
and
push
bound
in
fldcw
jle
add
mov
dec
push
add
jp
inc
jbe
fdivrp
dec
in
mov
add
lret
mov
ljmp
mov
add
xor
sti
rcrb
mov
bound
in
addr16
js
sub
cmpl
add
cmp
xchg
dec
insl
inc
hlt
cmpsb
imul
xor
sbb
adc
ss
jo
fwait
mov
fsubrp
pusha
and
or
or
pop
or
or
mov
imul
mov
xchg
dec
jae
jne
mov
aas
movsb
jle
push
push
cmpl
push
mov
je
xor
push
cmp
jge
push
pusha
jo
cmp
mov
push
xchg
mov
jmpw
dec
fidivrs
pop
clc
jg
mov
lea
aaa
lea
add
sarb
inc
adc
push
add
adc
xchg
ffree
cmpb
inc
cmp
push
jb
cwtl
inc
mov
mov
popf
xor
adc
aad
add
add
fmuls
fdivrs
mov
xchg
fistpl
cmp
dec
and
ret
jmp
iret
loope
rcll
mov
data16
xchg
lcall
xchg
and
add
or
dec
xor
lea
int
jo
add
nop
xchg
popa
aad
add
nop
or
or
or
push
xchg
push
cli
loope
lock
adc
sub
rolb
loopne
mov
movsl
sub
dec
adcl
adc
lea
aas
andl
shufps
cmpl
or
mov
inc
rolb
jne
sub
or
jo
push
mov
sbb
jo
scas
out
out
push
decl
adc
in
xor
add
inc
xor
lds
add
jo
add
imul
or
fcmovnb
sbb
aaa
adc
xor
cmp
stos
jle
jo
pop
cmp
testl
dec
data16
cmp
insl
jo,pt
xor
out
ja
insb
wbinvd
mov
pop
pop
sub
jmp
inc
aas
stos
sbb
test
cmp
jo
shll
mov
jge
cmpl
cmp
rcr
jp
rclb
sbb
sti
call
cmp
ja
jne
cmp
fstps
ret
dec
push
test
pop
movzwl
xchg
adc
aad
mov
add
add
pushf
adc
sbb
cmp
ss
push
in
inc
adc
dec
fimull
inc
xchg
inc
mov
bound
jbe
mov
cmpsb
adc
movsl
out
shll
sbb
push
inc
outsl
dec
mov
ret
pop
xlat
nop
cmp
cli
mov
and
mov
and
lods
xor
int3
lock
xor
mov
push
jb,pt
mov
js
or
and
ds
push
rclb
int3
adc
inc
add
les
clc
sub
pop
mov
clc
inc
lea
lea
push
push
xchg
push
sbb
sbb
sbb
push
inc
call
sub
aad
push
lahf
incl
rclb
adc
jl
xchg
cmp
jbe
pusha
cmp
aam
rorb
or
cmp
jb
pop
lcall
mov
add
mov
and
data16
in
adc
clc
jb
bswap
sbb
imul
cmp
jecxz
mov
mov
inc
cli
pop
dec
and
dec
rcll
adc
andb
sub
clc
pop
clc
andb
jge
je
xchg
sub
das
mov
loope
aam
push
rolb
nop
out
adc
movl
mov
pushf
add
lcall
adc
faddl
in
bound
or
add
loopne
xchg
mov
sar
out
push
inc
cld
mov
lea
add
xchg
adc
push
out
xchg
add
jmp
pop
add
jne
inc
push
mov
out
push
sub
push
gs
pop
or
insl
cmp
nop
pop
add
sub
jno
outsb
sub
dec
test
push
rol
or
cmpsb
adc
jle
ret
lcall
dec
or
pop
or
cmp
int
mov
insb
repz
mov
lcall
enter
xchg
inc
add
test
je
pop
sbb
jmp
dec
dec
mov
jg
mov
adc
test
cmp
cld
jmp
sub
inc
xchg
jl
adc
mov
je
hlt
sub
out
mov
or
shlb
movsl
pushf
aaa
add
mov
and
sub
cmp
sub
sbb
add
push
mov
rorl
sub
dec
or
inc
dec
adc
and
in
notb
xchg
lock
push
outsb
inc
or
push
add
pop
push
aam
daa
je
adc
inc
mov
mov
sbb
mov
add
push
mov
test
fdivs
in
push
out
into
adc
dec
sbb
loop
add
adc
mov
inc
add
lods
lea
push
test
adc
pop
loop
fwait
cmpsb
inc
push
push
imul
lea
pop
cmpsl
fwait
push
add
cmp
fxch
add
ret
xor
mov
xor
or
movsb
adc
stos
sub
insb
push
fcoms
movsl
test
mov
or
in
je
xor
and
in
dec
roll
or
sub
jmp
pop
mov
in
sub
gs
popa
in
lods
addb
aam
in
push
jno
in
mov
mov
pop
add
shll
jge
mov
in
lods
ds
lea
neg
pop
divb
jge
mov
jmp
cmp
jnp
ret
lea
scas
xor
add
push
jl
push
loop
sub
push
test
lods
sub
loopne
or
lds
dec
jp
add
subb
xchg
inc
jmp
jp
push
fimuls
lods
cmpb
ret
fldl
xor
aam
jecxz
push
sub
int
fwait
sub
aad
pop
and
push
adc
push
sbb
out
mov
push
inc
clc
push
and
mov
outsb
popl
mov
sub
mov
fs
rorb
cmp
jns
add
sub
mov
outsb
out
jge
sub
sub
mov
mov
xchg
dec
adc
fnstsw
mov
pop
or
jle
and
insb
inc
mov
cmp
ds
jmp
adc
mov
rol
and
loop
add
inc
add
mov
sub
xor
cmc
push
push
dec
add
push
call
and
mov
fnstcw
dec
sub
sub
lods
fstps
fildll
mov
mov
js
sbb
ret
adc
ss
adc
loopne
cmp
fiadds
xchg
je
pop
add
add
das
rcrb
inc
sbb
pop
cmp
mov
inc
pop
sub
cmp
jae
mov
dec
mov
nop
sub
sbb
shll
aad
add
ret
pop
ret
sarb
mov
push
cmpb
jno
shl
jbe
pop
and
add
sbb
xor
xor
movsb
mov
add
xchg
mov
xor
fsubrs
pop
push
or
pop
add
int3
cmp
hlt
push
push
push
fildl
sti
je
adc
fcompl
inc
loopne
or
push
or
jge
mov
jo
lds
inc
stos
into
mov
xchg
mov
pusha
cmp
cmp
sbb
push
mov
ret
jns
mov
addb
nop
js
aaa
mov
and
and
add
incb
pop
inc
cmp
or
ss
and
mov
lcall
popa
cmp
adc
or
and
hlt
incl
add
sti
jmp
inc
scas
movsl
sub
inc
or
mov
sub
jp
insb
cld
stos
jne
push
jo
movsl
sbb
fiadds
push
imull
sbb
out
sub
mov
mov
sub
sbb
es
iret
rcl
cmpsl
lcall
xchg
lahf
push
adc
or
pop
cs
xchg
and
enter
pop
stos
inc
xchg
push
mov
repz
rolb
jo
jg
xchg
out
sub
push
cmpl
or
pop
inc
lds
mov
into
movsl
inc
push
fdivs
push
xor
ss
sbb
or
pop
xor
xor
and
dec
adcl
repz
jg
xchg
dec
push
push
mov
mov
mov
fiaddl
es
mov
test
xchg
popa
and
data16
aas
test
xchg
mov
call
inc
nop
mov
ds
inc
test
add
jno
xchg
mov
jns
push
and
push
cmp
test
mov
mov
lea
cmp
je
test
imul
mov
mov
xchg
sub
enter
outsl
into
pop
in
inc
hlt
push
push
rcrl
fwait
push
jbe
adc
xor
dec
dec
jo
shrb
add
add
inc
hlt
ficoml
adc
icebp
test
xorl
jns
sub
in
or
dec
mov
mov
fiaddl
cmp
or
nop
push
sub
xchg
outsl
mov
sub
dec
pop
cld
repnz
adc
and
and
mov
scas
pop
dec
std
sbb
lret
xchg
push
ret
inc
inc
or
test
leave
push
enter
mov
outsb
addb
cmpb
inc
xor
push
pop
arpl
dec
push
dec
jns
es
into
push
jne
push
lea
test
xor
jmp
inc
ret
jge
mov
push
and
jo
fiaddl
dec
dec
adc
mov
add
mov
mov
mov
cmp
or
mov
js
loope
push
das
push
es
scas
add
adc
and
cmp
cwtl
inc
ljmp
leave
inc
imul
stos
pop
push
lods
imul
sahf
testb
adc
adcl
cmp
pop
repnz
push
mov
mov
inc
repz
scas
mov
mov
sub
sbb
lods
ss
loopne
in
inc
je
scas
jns
in
mov
pop
or
pushf
push
cli
inc
push
cmc
xchg
push
loopne
aad
cmp
jne
jbe
push
hlt
mov
and
pop
mov
dec
cmp
je
inc
add
jne
js
push
les
arpl
dec
aam
pop
adc
xor
xchg
data16
sbb
push
and
fstps
pop
daa
xchg
and
sub
loope
dec
dec
jle
dec
xchg
pop
and
xor
lds
dec
add
jbe,pn
imul
inc
addr16
xor
js
sub
cmp
jae
dec
sbb
add
std
pop
inc
jle
loope
sub
adc
scas
cmp
adc
call
in
jb
adc
cmp
xchg
push
cli
push
rorl
push
sub
or
or
hlt
loop
mov
or
aas
and
mov
outsb
adc
jp
fisubl
and
push
and
adc
cli
testl
rcrl
out
cli
enter
pop
push
push
out
jle
adc
jne
push
mov
fldcw
je
data16
and
inc
mov
test
ja
push
std
mov
adc
lea
sub
xor
in
adc
cmp
inc
pushf
lret
inc
cmp
push
test
pop
outsl
add
stos
je
dec
jg
in
push
shll
andl
or
inc
pop
pop
sbb
mov
mov
cmp
scas
and
adc
or
adc
js
nop
or
ja
pop
addb
or
ret
lea
jle
sub
das
loope
push
and
fbstp
mov
sub
fadds
jo
es
mov
orb
in
test
or
or
clc
pop
cld
push
mov
mov
adc
adc
dec
cmp
adc
add
xchg
or
push
mov
pop
sub
pop
gs
scas
push
loopne
mov
pop
mov
loopne
dec
in
imul
mov
or
es
loopne
das
push
loope
add
test
mov
out
add
lea
mov
push
push
adc
repnz
or
and
sub
xor
insb
sub
pop
push
and
jg
stos
and
cmpl
into
jge
repnz
jne
lret
ret
mov
mov
mov
sub
ret
jecxz
dec
pop
call
and
jae
lock
aam
add
lahf
data16
sub
or
push
pop
jbe
or
and
mov
setne
push
mov
or
push
or
jne
push
push
mov
jecxz
insl
movsl
inc
jmp
or
inc
add
add
mov
mov
cmpl
xor
mov
sub
ret
inc
sbb
nop
sbb
insl
insb
mov
nop
rcrl
push
pop
add
fucomi
adc
loope
or
jne
adc
push
and
fisttps
pop
mov
add
loopne
add
push
mov
dec
aad
sahf
xor
orb
or
enter
cwtl
or
movsb
sbb
or
bound
cmp
mov
add
out
xchg
shrb
jp
lea
bound
jb
rcrb
dec
rclb
jae
adc
js
jg
jb
mov
pop
fwait
dec
sub
fstps
flds
flds
cmp
cwtl
or
test
ficoml
fmulp
stos
leave
filds
ret
push
sbb
sub
fmuls
addr16
ficoml
dec
inc
sbb
add
adc
pop
and
mov
lahf
cmp
icebp
test
inc
clc
mov
iret
shlb
inc
or
adc
fcomps
fnstsw
xor
push
inc
push
cmpsb
lret
xor
xchg
xchg
into
xchg
inc
sub
je
jge
push
and
push
mov
and
rcrb
cmp
stc
jbe
dec
jmp
mov
sub
xor
cwtl
mov
pop
ret
pop
sahf
cltd
jo
pusha
push
and
je
call
add
add
sbb
xor
and
shlb
add
cmpsb
xchg
add
inc
pop
xchg
mov
push
insb
arpl
push
lea
lahf
and
std
sbb
pop
call
or
mov
into
mov
push
fisttpl
repz
sbb
or
sub
push
mov
shrb
xor
or
mov
bnd
mov
fmuls
inc
adc
test
add
outsl
jl
jmp
incb
lea
movsl
pop
jnp
imulb
fmuls
pop
xchg
jmp
dec
lock
mov
jb
mov
sub
mov
insl
inc
mov
mov
jmp
ret
jae
lea
cmp
ja
lahf
dec
ret
pop
or
inc
es
jle
cmp
add
and
call
mov
add
pusha
or
cli
lock
xchg
xchg
or
and
sahf
mov
xor
addr16
fists
in
push
mov
add
or
push
adc
inc
adc
sbb
popa
inc
js
sub
bound
rorl
aas
or
inc
adc
sbb
shll
and
imul
popa
les
test
pop
into
sub
sub
das
mov
push
call
add
movzbl
mov
lahf
add
inc
cmp
jae
inc
push
push
sub
dec
je
mov
xor
inc
mov
cwtl
xadd
inc
aad
roll
sbb
push
cwtl
jmp
repnz
vmptrld
cmpb
add
sbb
inc
enter
addl
pop
das
cltd
jmp
xchg
jmp
test
mov
add
pusha
daa
rcrl
inc
inc
movsb
push
into
shll
fnstenv
add
mov
popl
jecxz
sbb
mov
pop
mov
pop
add
aas
imul
lea
in
test
dec
rcrb
js
inc
test
or
fsubs
outsb
adc
loopne
lock
mov
sbb
xchg
leave
mov
call
iret
out
cmpsl
add
xlat
jmp
add
lea
push
fstl
add
mov
sbb
iret
subl
cmp
testl
loopne
jae
xchg
in
xchg
test
out
and
push
add
ret
ffree
test
dec
add
orb
lea
call
jl
sub
or
and
aad
mov
cmp
adc
js
pop
mov
fcoml
js
mov
inc
cmp
push
pop
pop
bndldx
adc
and
mov
pusha
mov
rolb
xorb
inc
cmp
adc
sarb
push
push
push
call
fsubrs
clc
andb
pop
sarb
cmp
or
packsswb
sub
orb
blcs
loope
out
inc
loopne
pusha
addl
out
jnp
or
or
push
mov
xchg
les
xchg
fcom
popa
mov
jle
pop
in
adcl
fistpll
sarl
or
bound
pop
jg
enter
mov
sub
sub
ffreep
pusha
inc
enter
add
add
andl
inc
iret
mov
pop
or
fcomi
loopne
xor
test
nop
call
rorl
mov
testb
rorb
test
test
jns
das
movsl
sbb
push
push
jne
cmpsb
and
inc
mov
xchg
push
ret
rolb
rcll
mov
adc
repz
or
mov
mov
pop
adc
xchg
mov
adc
lock
in
push
xor
xchg
xor
fidivrs
lea
xor
pusha
pop
adc
insb
jb
add
xor
movsb
shrb
lcall
pusha
mov
push
add
insl
jmp
mov
cmp
loope
scas
mov
mov
pop
cwtl
ss
mov
sbb
sub
mov
pusha
jbe
inc
mov
cmpl
lods
push
push
ja
je
idivl
ljmp
or
sbbl
adc
fsubrs
cmp
jp
les
andb
pop
cmc
mov
mov
and
mov
or
xor
test
add
out
jb
xchg
lock
popa
inc
lds
add
sub
push
fidivl
mov
inc
lods
or
xchg
mov
jne
sbb
add
add
test
insb
fld
jg
mov
jp
and
int3
inc
test
aam
cltd
jmp
inc
inc
adc
arpl
sub
ss
and
lcall
or
add
dec
ljmp
push
add
push
adc
xor
pop
insb
jne
in
les
jmp
addr16
jno
or
push
add
or
cmp
xchg
shrb
or
jmp
sti
jl
xor
mov
pop
add
xor
lock
fnstenv
jb
add
mov
int3
fldenv
adc
pop
cld
dec
call
mov
movsb
cmp
add
test
dec
sub
call
cmp
jae
mov
push
rorb
push
push
ret
jmp
icebp
inc
enter
ljmp
dec
rcr
inc
inc
jmp
or
and
clc
jae
lea
insl
clc
jmp
cmpb
jne
cmpb
jne
lds
sti
shl
or
mov
les
sti
fildll
neg
sbb
and
add
sbb
jl
stc
lods
out
pushf
sbb
or
cmp
cmp
or
or
and
mov
arpl
es
sbb
repnz
test
loopne
push
jl
xchg
imul
mov
stc
es
push
ret
pop
addl
das
pop
and
push
popl
nop
gs
cmpsb
pop
rcl
jmp
mov
pop
inc
jmp
xor
jbe
push
push
addr16
mov
pushf
mov
add
push
ljmp
or
leave
mov
mov
xchg
xchg
push
dec
enter
ret
cmp
sub
aas
push
xchg
setnp
and
push
sbb
rolb
pop
inc
push
loop
lahf
fcoms
and
sbb
test
shll
pop
add
adc
adc
sub
pusha
dec
repnz
daa
into
cmpw
pop
or
lea
cmp
ds
into
jmp
and
jno
das
mov
into
fcoms
jnp
fstpt
add
jno
xlat
or
and
and
xor
mov
xor
es
inc
mov
fistps
or
shr
imul
cmp
sahf
lock
mov
jae
mov
test
je
pop
movsb
xchg
call
fdivrl
test
jmp
jae
jo
sub
mov
mov
dec
rclb
call
jle
adc
lea
ret
xchg
ret
mov
jns
lahf
hlt
testb
xchg
jl
in
or
adc
adc
inc
mov
jg
out
jo
add
fcmovne
cwtl
lock
je
jnp
test
stos
add
hlt
push
js
cmp
clc
cmp
imul
push
and
xor
sbb
add
cmc
add
xor
mov
mov
xchg
pop
push
lea
dec
dec
push
insl
add
push
lea
jo
sub
xchg
int
mov
adc
push
decb
pop
cmp
inc
lea
lock
inc
push
loop
popf
pusha
adc
mov
push
mov
jge
mov
fcomp
mov
push
push
push
push
orl
add
cmpsl
mov
imull
insb
add
sbb
or
jecxz
lods
jmp
loope
addb
xchg
pop
test
mov
testb
pop
push
inc
jge
mov
lahf
cmc
and
jb
mov
testb
or
adc
jo
or
ret
pop
shrl
pop
sub
sarl
jno
lret
inc
sbb
cmpsl
mov
push
sbb
jg
fdivrs
sub
cs
popa
or
fildll
mov
lods
push
pop
pop
jno
imul
or
push
push
or
sbb
and
test
outsl
imul
inc
dec
xor
cpuid
cld
adc
sbb
out
inc
push
xchg
add
or
test
add
xchg
je
push
push
xchg
xor
or
imul
loope
adc
sbb
jae
inc
shl
pop
xor
add
cmp
jecxz
fstpl
or
or
jne
inc
jne
ljmp
lahf
adc
shlb
cmp
in
scas
cld
xchg
jbe
push
enter
push
add
mov
mov
inc
xor
push
dec
or
add
ljmp
jnp
adc
lcall
sbb
enter
mov
mov
pop
add
enter
push
push
movsb
push
mov
fsubr
mov
push
aas
inc
and
or
push
sbb
adc
or
mov
and
imul
push
sbbl
cmpb
in
icebp
mov
cmpsl
add
jb
push
dec
push
pop
sub
push
enter
xchg
aas
push
pop
mov
push
cmp
pop
rolb
jns
push
int
hlt
and
and
add
mov
inc
jno
mov
loopne
adc
mov
and
cmpsl
dec
imul
mov
cmp
dec
add
dec
test
test
mov
dec
add
inc
pop
test
pop
fadds
sarb
and
icebp
arpl
ss
dec
rcr
mov
mov
insb
jg
mov
inc
shlb
jbe
mov
rclb
push
jg
xchg
je
mov
cwtl
insb
or
jg
sbb
fildl
mov
shll
pop
cmp
sbb
or
or
inc
cmp
test
mov
lock
movsb
dec
gs
inc
cmp
jb
sub
testl
stos
inc
inc
sub
cs
loop
test
mov
mov
hlt
js
ficoms
mov
std
mov
jmp
shlb
inc
dec
adc
xlat
lds
int
rclb
adc
or
push
outsb
xchg
or
push
add
cmp
xchg
mov
cwtl
sbb
add
movsb
repnz
cmp
jbe
xor
out
test
mov
inc
sbb
addr16
outsb
or
jb
push
xorl
js
call
xlat
xor
and
jae
xchg
cmp
push
xchg
mov
dec
or
sub
adc
xchg
adc
mov
mov
inc
dec
cltd
cltd
mov
out
ss
adc
cltd
xor
xor
cmpl
add
mov
jl
daa
cmpsl
inc
pop
mov
sbb
movsb
enter
js
movl
aaa
add
shrl
adc
push
add
mov
sub
js
aas
add
add
jns
mov
sub
cld
add
rorb
movsb
or
and
sarl
mov
adc
ljmp
jge
xchg
push
rcl
push
or
adc
bound
push
rcrl
jmp
sbb
and
inc
iret
cmpsl
xchg
rclb
add
mov
mov
push
pop
push
hlt
adcb
jb
fdiv
fisttps
jg
cmpb
jne
inc
inc
xor
dec
or
or
push
mov
int3
adc
sbb
push
sbb
and
jle
pop
in
xchg
xchg
and
nop
or
pushf
sbb
xor
mov
sub
shlb
and
daa
xchg
add
adc
jmp
cltd
loope
jo
xor
inc
xchg
cmp
xor
push
fdiv
xor
jbe
fisubl
cmp
mov
sbb
into
xor
add
xchg
and
mov
xchg
div
add
movb
mov
sahf
inc
or
sub
and
inc
mov
xchg
inc
add
inc
or
insl
cmp
jp
pop
popf
xor
and
inc
sub
cmp
rcrb
test
jle
mov
lea
notl
andl
or
pop
jmp
push
jg
xor
mov
in
test
lods
loope
and
adc
test
rclb
adc
mov
orl
and
and
shlb
fdivl
fnstenv
xor
xor
xor
push
scas
add
fs
or
sub
and
lret
push
daa
loopne
xorl
jl
addb
loopne
lods
pop
push
push
arpl
fs
dec
inc
mov
pop
stc
inc
push
push
movl
cmp
shrb
adc
xchg
lret
mov
mov
add
xchg
and
and
inc
mov
test
imul
sub
jns,pn
add
and
filds
mov
and
sub
popa
push
push
cmpsb
or
mov
xor
mov
push
cmpsl
xor
push
test
adc
jg
and
mov
rorb
inc
icebp
fdivp
test
dec
jb
or
mov
test
orb
imul
dec
jno
push
inc
iret
cmp
jne
cmpl
pop
add
shlb
loopne
or
mov
jmp
push
or
adc
mov
inc
mov
push
idivb
inc
lock
movsb
je
pop
les
in
sbb
inc
cmp
xor
pop
add
rorl
mov
pop
add
test
add
loopne
sbb
cmp
inc
insb
inc
adc
add
cld
adc
and
or
lret
mov
stc
push
adc
and
daa
xchg
out
and
arpl
add
sbb
lea
xchg
sbb
hlt
loopne
sbb
xchg
ja
pop
cmp
push
inc
mov
ja
dec
mov
xor
pop
es
in
xor
xor
ljmp
push
mov
and
call
sahf
out
pop
orl
push
or
mov
xlat
inc
loop
scas
jne
fdivp
jnp
pop
movsl
fs
sub
out
or
sub
mov
adc
pusha
cmpsl
push
xor
mov
sti
push
test
daa
movsb
mov
mov
pop
pop
lods
data16
arpl
mov
push
out
adc
andb
mov
inc
popa
shrl
int
lds
add
sub
lock
push
mov
cmp
push
jo
and
jb
adc
sbb
adcb
nop
inc
sbb
in
nop
mov
cltd
sub
xchg
inc
repnz
push
dec
inc
sbb
mov
rolb
dec
sbb
and
or
and
inc
pusha
or
add
jl
fs
movsb
leave
xor
dec
and
addl
xchg
mov
sbb
or
je
jno
add
nop
pop
sbbl
arpl
aam
xchg
xchg
jbe
pop
mov
add
inc
sbb
sbb
or
test
aad
inc
in
aaa
mov
xchg
adc
cmp
sbb
test
dec
push
je
add
mov
xchg
shll
adcl
sbb
scas
adc
sbb
pop
adc
push
rcr
inc
push
adc
jns
dec
add
lods
rolb
mov
in
inc
rcll
dec
add
jns
cmc
sub
stos
movsb
push
inc
push
xchg
pop
js
cld
ja
add
xchg
mov
cmp
add
adc
push
cmp
fwait
mov
ret
pop
xchg
xchg
mov
lds
je
add
push
imul
xlat
inc
dec
pushfw
es
and
enter
and
and
dec
adc
add
adc
mov
cmpsb
mov
icebp
and
adc
fwait
inc
push
js
pop
mov
or
imul
mov
push
mov
add
or
mov
pop
pop
sub
add
or
mov
orl
push
push
push
sbb
add
mov
push
sbb
or
sbb
push
repnz
adc
mov
sbb
ret
dec
push
stc
add
insb
inc
dec
sub
or
or
enter
xchg
or
mov
mov
ja
fadds
ret
and
adc
cmp
push
mov
push
pusha
mov
and
mov
jmp
jmp
or
call
jp
or
loop
loopne
adc
mov
jnp
fimuls
mov
cmpb
cli
mov
outsl
sbb
jg
fmuls
call
je
push
mov
cmp
sbb
insl
jge
mov
jge
fwait
adcl
popf
add
sub
dec
test
mov
sub
mov
ljmp
aad
scas
shr
xchg
xchg
push
adc
pop
int
mov
inc
lahf
out
lea
mov
xor
xchg
and
enter
or
lret
dec
mov
push
ds
in
loopne
xor
xchg
hlt
jae
push
or
jb
sarb
jl
fcom
movsb
nop
xlat
rcrb
push
imul
push
cs
rorb
cmp
popa
or
sub
adc
xor
dec
enter
orl
push
xchg
cmp
mov
inc
enter
mov
inc
popf
flds
arpl
push
call
xor
adc
inc
subb
mov
push
dec
and
push
add
cmp
mov
dec
stos
jo
jnp
scas
cmpsl
mov
dec
xor
xor
xchg
add
or
cmc
ret
sbb
and
pop
or
fcoml
or
mov
mov
adc
mov
imul
pop
mov
gs
cmp
les
push
repnz
and
inc
and
xchg
sarb
dec
cwtl
adc
jb
and
sbb
pop
adc
cmp
test
je
inc
lds
push
push
test
cmp
add
xchg
jp
mov
xchg
add
fistpll
or
jb
jne
cmp
aaa
outsb
mov
push
pop
add
push
incl
mov
or
shlb
cli
add
mov
push
push
aaa
pushf
stc
mov
pusha
xchg
sbb
dec
std
xlat
add
popf
dec
ss
mov
lcall
icebp
pop
xchg
xor
mov
adc
mov
std
xor
add
mov
pop
jle
xchg
pushf
enter
dec
cmp
inc
dec
xor
jo
cmp
mov
cmp
push
notb
add
dec
addl
mov
mov
push
mov
fstps
mov
xchg
and
js
testl
inc
hlt
lea
and
stos
mov
or
cmpsl
nop
mov
out
xor
mov
lods
bndldx
rcrb
adc
into
cs
inc
pop
ljmp
pop
rol
push
das
and
cmp
lcall
add
in
int
cmp
int3
add
push
sbb
mov
je
jne
mov
in
loope
je
sub
mov
xchg
or
mov
mov
jl
add
fsts
xor
add
and
push
es
jns
add
jmp
pop
test
push
call
and
sbb
and
adc
or
repz
aam
dec
bound
fstps
in
mov
push
and
test
pop
inc
clc
ficomps
or
xchg
pop
sbbb
jo
and
lock
push
xor
jne
push
sbb
gs
jo
aam
adc
add
sti
or
mov
lods
fcoms
test
cmp
push
mov
arpl
adc
les
jge
js
jae
scas
das
mov
subb
cwtl
sbb
mov
movsl
outsb
inc
stos
popa
mov
cmp
ror
imul
in
add
notl
mov
fcoml
in
or
dec
jbe
into
and
mov
es
adc
call
push
mov
lret
adc
adc
mov
data16
mov
jl
adc
xchg
add
cli
or
dec
adc
sbb
subb
pusha
ucomiss
pop
or
movsl
fucomp
add
adc
dec
loope
mov
movb
xor
or
sbb
nop
call
stos
leave
adc
lea
xor
or
push
int
test
cmp
cmp
xchg
dec
sbb
cmp
es
xor
xor
push
cmpsl
or
sbb
fxch
mov
test
js
dec
dec
adc
mov
sbb
nop
sbb
and
test
add
incb
jno
shlb
rcr
xchg
pop
stc
jb
sbb
add
cmp
jae
movsb
lea
add
inc
add
loopne
adc
cmp
add
or
push
push
push
out
je
shrl
xorb
dec
aad
sbb
leave
push
shlb
pop
pop
or
aas
add
in
cmp
je
adc
add
das
sbb
sbb
mov
xor
jg
jmp
cmp
jl
pop
ds
jle
sbbb
mov
clc
push
xor
shrb
pop
dec
insb
inc
insb
ret
jle
fsub
xor
or
sub
ret
cmp
testl
and
out
or
cmp
mov
mov
leave
enter
xorb
adc
add
pop
push
pop
lea
mov
mov
mov
pop
push
test
mov
and
faddp
mov
in
roll
add
in
sbb
sub
inc
paddsw
mov
or
pop
push
int
add
jo
inc
add
push
push
mov
mov
js,pt
pushf
cmp
inc
ljmp
push
nop
int
jle
nop
pop
adc
es
out
push
dec
mov
sub
add
sti
inc
push
rolb
mov
sbb
orl
insl
sub
lret
sti
test
shrl
stos
clc
cmp
dec
or
cmp
adc
jo
mov
inc
dec
pop
mov
or
pusha
rolb
or
dec
or
loopne
add
arpl
add
inc
adc
data16
mov
stos
sbb
xor
repnz
andps
push
and
add
adc
adc
cmp
andb
jecxz
cmp
add
test
daa
in
lcall
sub
cmc
add
push
sub
je
or
xlat
jbe
dec
xor
sti
xor
mov
outsl
sub
push
je
push
push
pop
loop
bound
loope
jmp
jmp
mov
fimull
andb
cmpsl
test
lock
dec
mul
pusha
sbb
jge
sub
sahf
int
xchg
mov
inc
hlt
adc
mov
shrb
fisttpll
out
sub
sub
outsb
lods
bound
xchg
cmp
movsl
arpl
inc
sbb
lock
sbb
movsb
sbb
add
cwtl
push
pop
adc
mov
push
cmc
xor
jle
mov
push
lret
jmp
jp
sub
add
cmp
mov
cmp
pop
mov
in
add
push
cmp
inc
push
mov
and
sbb
fs
mov
lods
add
mov
add
or
call
inc
pop
mov
jnp
imul
repnz
mov
rolb
xor
and
adc
outsb
pushl
or
bound
add
or
xchg
xor
bound
pop
lcall
xchg
aaa
dec
fcompl
ss
jmp
inc
aaa
sbb
fcmovb
dec
fisubs
cmp
movsb
sbb
leave
fwait
add
cmp
cmp
add
pusha
aam
popl
add
push
and
adc
xor
mov
adc
add
pop
daa
xchg
stos
fbld
push
xchg
pusha
sbbb
push
push
adc
pop
les
test
inc
xchg
xor
add
inc
adc
push
push
nop
lret
sbb
and
test
pop
sub
add
add
or
sbb
or
or
nop
lret
or
movsb
xor
or
xchg
add
adcl
mov
adc
jl
mov
or
and
mov
cmp
mov
jbe
sbb
sbb
int3
sarb
and
cwtl
pop
add
pop
xor
pop
push
or
rcr
imul
inc
pop
xchg
cmc
mov
add
pop
mov
add
stos
mov
fidivs
adc
inc
and
xchg
push
sbb
fsubs
or
lea
pop
sub
dec
pop
sbb
push
movsl
int
sbb
push
rcrb
rcl
pop
and
enter
push
adc
movsb
or
sub
mov
xor
sbb
adc
ja
sysexit
xchg
mov
fs
dec
mov
inc
movsb
sbb
or
or
dec
lcall
mov
lcall
and
movsb
sbb
and
add
dec
lcall
mov
lock
sub
addb
stos
mov
xor
sti
pop
rcl
leave
dec
dec
cld
add
add
add
in
inc
add
adc
and
or
mov
mov
lcall
cs
test
xor
cmp
pop
scas
mov
pop
fucomi
inc
sbb
pop
clc
invd
jne
orl
les
frndint
stos
push
push
jmp
mov
and
add
push
jbe
lea
rclb
sbb
sbb
xor
sbb
push
cmp
push
gs
pop
cld
int3
dec
inc
and
inc
rorl
xorb
dec
call
mov
pop
xor
loopne
add
and
cmp
leave
and
enter
mov
xor
sub
adc
push
push
imul
or
xchg
add
sub
xor
jge
pop
xor
dec
inc
push
test
cmp
dec
pop
mov
add
mov
sbb
push
aam
sub
cmpl
push
push
cmp
out
or
sbb
in
dec
call
std
jge
add
rorb
xchg
daa
jmp
lds
iret
jae
pop
or
mov
lret
ficomps
test
or
cld
push
in
sbb
popf
cmpsl
iret
add
mov
lock
and
stc
add
push
pop
cmp
mov
int
xor
and
push
scas
scas
add
mov
andl
sbb
push
ret
inc
rcll
xchg
add
dec
adc
leave
or
pop
or
enter
or
xchg
cmpl
jmp
push
or
sbb
mov
pusha
clc
add
push
les
shlb
lods
orl
icebp
cmp
pop
jle
jl
je
cmpsl
lock
adc
hlt
or
push
pop
push
pop
dec
add
and
adc
sub
cmc
clc
add
adc
and
pop
mov
xor
out
pusha
sti
dec
or
push
nop
jl
push
imul
or
add
dec
xchg
push
inc
stc
mov
aad
je
mov
cmp
xchg
ljmp
or
mov
adc
and
dec
insb
jecxz
int
or
imul
xchg
ret
adc
jg
xchg
jne
pop
inc
lds
stos
xchg
xchg
jge
or
add
jno
xchg
ss
and
xor
dec
dec
test
dec
js
cmp
pop
add
adc
sahf
pop
or
adc
jne
jns
mov
cmp
xlat
lods
call
aam
push
loopne
push
decl
loopne
push
push
mov
cmp
scas
dec
in
push
cmpsb
lahf
dec
pop
adc
inc
in
js
loope
int3
xchg
ds
es
dec
xchg
mov
je
push
jle
jne
add
and
lea
jmp
mov
js
pop
and
data16
add
pop
call
nop
fmul
add
xor
xchg
adc
sahf
push
mov
cs
ret
shr
insb
mov
mov
adcl
jle
push
lea
or
divb
out
decb
jg
cmpb
sbb
jo
jo
jl
xchg
fimull
xor
inc
stos
mov
jne
lea
or
lea
clc
adc
mov
lea
movsl
inc
ss
orl
pop
xchg
sub
mov
adc
fcomip
adcl
dec
cmpsl
sub
jl
fsubs
jge
jae
clc
daa
rclb
add
jmp
mov
xchg
and
dec
cmpsl
jo
mov
adc
lret
cmpl
adc
cmp
sub
sub
push
xchg
imul
std
push
cmp
in
or
push
xchg
inc
iret
gs
cmp
and
jno
dec
add
add
mov
cmp
fs
jb
and
pushf
jo
and
pop
dec
and
push
andb
and
cmpl
cmp
clc
fs
jo
daa
insb
push
test
mov
fiadds
sub
or
xor
sub
push
adc
jb
add
mov
xchg
cmp
dec
pop
sub
mov
dec
sbb
sub
roll
daa
xchg
dec
inc
and
and
inc
fisttps
jecxz
push
cvttps2pi
cmp
inc
adc
dec
adc
insl
loopne
adc
sub
movsb
adc
sbb
dec
rorl
push
fs
cmp
pop
iret
jp
test
dec
inc
pop
jle,pt
mov
add
jge
mov
mov
ja
inc
enter
ficoms
int3
cmpsb
xchg
jl
mov
cltd
dec
add
inc
cmp
or
jo
lds
scas
sbb
pop
xor
je
loop
dec
insb
push
cld
jo
cltd
dec
pop
rcrb
add
inc
sub
leave
inc
repnz
add
mov
pop
fs
push
xorl
or
dec
ja
push
push
loope
dec
js
cli
mov
popa
xchg
xchg
test
cmpsl
sub
and
cmp
push
jno
insb
mov
jp
cmp
jb
pop
pop
mov
jle
dec
int
and
adc
push
xor
call
push
sub
cli
xchg
ljmp
cli
dec
imul
popf
and
push
xchg
push
sub
pop
clc
push
sbb
nop
xchg
fcmovnb
push
push
lock
dec
xor
in
or
sbb
add
jns
rol
sti
sahf
or
pop
sbb
sbb
push
mov
pop
jns
push
push
jle
addl
inc
fs
lret
sbbl
adc
sbb
xchg
add
sbb
jns
sbb
inc
push
add
add
leave
and
xor
fiaddl
aas
push
test
cmp
cmp
data16
mov
or
mov
sub
lret
jmpw
jp
test
push
jnp
aaa
xor
pop
lea
mov
mov
jo,pt
iret
adc
xchg
cmp
dec
lahf
xor
push
add
dec
mov
or
dec
jmp
test
fdivrl
es
dec
inc
gs
mov
outsl
mov
sbb
sub
test
add
mov
mov
je
or
xchg
push
imul
repz
cmp
mov
mov
fisttpl
cs
stos
dec
adcb
adc
mov
pop
or
xor
xor
ljmp
adc
lods
outsl
push
mov
dec
cmp
cmpsl
push
clc
jl
mov
mov
xchg
adc
pop
xchg
push
xchg
sub
dec
jne
mov
test
in
outsl
in
jns
popa
adc
pop
stos
in
popa
add
adc
sub
push
or
pop
rcrb
sbb
fwait
clc
daa
xor
and
add
push
push
push
mov
mov
mov
sub
aaa
jno
andl
add
fists
sarl
leave
add
js
out
mov
xor
int3
add
stos
lret
jmp
dec
mov
adc
xor
nop
jo
or
addr16
jno
adc
push
and
cltd
cmp
adc
nop
sti
outsl
sbb
js
je
or
or
or
adc
jns
inc
mov
jns
jmp
ret
in
add
adc
xor
imul
outsl
and
xor
mov
addb
test
pop
lods
neg
lcall
mov
roll
loope
mov
sbb
adc
fisttpl
imul
lret
enter
lcall
xor
adc
sbb
pop
add
cmpb
je
mov
or
xchg
shrl
sub
das
push
pop
daa
add
or
cmp
xor
add
add
dec
jae
nop
add
or
icebp
shlb
aam
les
ljmp
or
jae
adc
push
inc
inc
push
push
pop
adcl
mov
add
or
sti
push
mov
push
push
and
xchg
orl
xor
mov
fldenv
andl
or
lock
imul
jp
outsb
andl
push
sbb
das
mov
icebp
sbb
cmp
outsl
pop
dec
aas
ret
adc
mov
js
rcll
jns
test
daa
xchg
and
or
fimull
and
xchg
xchg
adc
mov
push
xchg
lahf
insb
sbb
and
lock
dec
cli
scas
out
or
jmp
adc
xchg
or
sbb
sub
ljmp
adc
mov
xlat
or
add
call
pusha
imul
jecxz
and
inc
and
sahf
cmp
add
or
push
sahf
mov
xor
icebp
and
aam
push
mov
add
sbb
sub
rorb
pop
inc
insl
or
sub
cwtl
data16
mov
inc
cmp
cld
mov
adc
dec
push
imul
sbb
push
into
fldl
or
loop
cmp
adc
push
mov
enter
and
dec
xchg
sub
dec
mov
jae
inc
je
outsb
orl
push
push
inc
dec
xor
adc
call
adcb
mov
decl
cmpsl
pop
add
pushf
cmp
lret
bswap
mov
in
lret
xorl
add
stos
add
adc
pusha
push
test
or
adc
adc
adc
pusha
jb
lods
repnz
push
adc
add
push
nop
cmp
fs
data16
dec
cs
push
je
and
test
mov
loope
sahf
out
lock
push
inc
jg
pop
loop
cs
andl
adc
cmp
add
inc
adc
and
invlpg
add
mov
nop
out
outsl
nop
pop
nop
mov
imul
cltd
fs
adc
add
adc
and
inc
push
dec
insb
sbb
jae
jnp
shlb
xor
jg
adc
xchg
xor
popf
xchg
pop
push
movsb
je
jo
inc
cmpsl
pop
fstpt
add
cli
pop
adc
pop
nop
sbb
mov
xor
adc
aas
dec
jp
push
mulb
xchg
mov
subb
leave
adc
cmpsb
outsb
adc
or
or
xor
insl
jns
xchg
inc
scas
add
js
es
and
fistpll
add
jg
je
jo
enter
or
inc
xor
cvttps2pi
movsb
sub
je
mov
test
adc
enter
jp
adc
mov
cmpl
out
adc
wrmsr
add
dec
hlt
pop
nop
jl
xchg
xlat
xlat
sub
push
push
xchg
dec
mov
inc
repnz
adc
je
sub
pop
aaa
and
mov
enter
test
sub
cmp
sbb
push
lock
into
mov
lea
adc
mov
push
add
je
pop
or
adc
push
imul
jb
mov
cmp
les
add
movsb
push
sub
pop
negb
adc
mov
dec
out
nop
jecxz
adc
add
xchg
icebp
xor
cmpsl
mov
adc
mov
mov
pop
cmp
mov
sbb
add
jge
mov
aad
and
in
mov
dec
rcrl
test
add
inc
mov
jle
pop
sbb
or
jo
xor
mov
insb
add
ret
das
cmp
jnp
lret
icebp
inc
ret
add
mov
mov
xchg
js
jo
pop
inc
push
pop
push
adc
hlt
dec
loopne
rorb
fists
push
int
and
test
imul
mov
mov
add
or
orl
push
imul
ja
inc
jb
ret
sbb
cld
imulb
je
mull
fisttpll
popa
add
or
ja
sbb
xchg
or
mov
shll
inc
lock
cwtl
dec
pop
mov
xor
test
adc
inc
push
sbb
cltd
or
fisttpl
push
inc
or
push
aam
repz
pop
jno
add
pop
mov
add
jno
dec
push
decb
test
xor
push
nop
pop
lahf
xor
mov
xor
iret
arpl
dec
add
inc
int
aad
and
xor
dec
push
sarb
leave
dec
jg
mov
mov
clc
das
inc
nop
push
push
xchg
push
or
mov
fldt
mov
movsl
dec
or
inc
mov
add
or
push
push
inc
inc
cltd
sbb
jne
add
adc
dec
pop
aaa
lods
fimull
add
cmp
test
mov
sbb
jecxz
mov
dec
sub
loopew
repz
and
dec
push
pop
mov
add
lock
push
leave
xor
cmc
or
pusha
cmp
cmp
mov
sub
je
js
mov
mov
or
inc
dec
arpl
inc
cmp
cs
or
pop
nop
pop
inc
test
cmp
iret
adcl
cmp
xor
jbe
stc
mov
push
lret
add
mov
push
or
sbb
push
push
loope
fs
xor
loop
inc
loope
or
addr16
mov
insl
xchg
loope
sbb
add
popl
sub
push
or
push
or
xor
incl
add
leave
xchg
push
xor
add
inc
cmp
add
scas
je
mov
push
push
hlt
out
push
mov
sub
movsb
dec
shll
and
dec
pop
mov
insb
idivl
cmp
or
add
dec
mov
mov
daa
sub
imul
sub
or
pop
push
filds
in
clc
dec
xor
add
and
add
testl
mov
fimuls
mov
mov
sbb
fisubl
pusha
xor
add
adc
movsl
imul
es
negl
lods
sbb
loopne
ret
mov
imul
cmp
jae
sub
loopne
scas
nop
fstpl
data16
mov
inc
cmp
movsl
jne
ret
clc
push
jb
push
and
mov
push
cmp
xchg
dec
dec
mov
dec
dec
popf
test
insb
push
and
ja
scas
mov
push
lods
mov
mov
add
sbb
xor
add
inc
add
mov
inc
add
xchg
imul
pop
mov
orb
in
adc
fimuls
push
push
xor
push
add
movsl
push
xchg
lods
outsb
movsb
hlt
mov
xchg
sbb
adc
in
dec
dec
or
xor
adc
gs
dec
add
pop
push
inc
pushf
adc
incl
pop
cmp
jne
cmp
cltd
roll
adc
inc
xor
mov
push
sbb
pop
or
sbbb
xchg
cmp
outsl
adc
test
setnp
xchg
sbb
pop
js
incl
sarl
push
scas
jle
add
pusha
stos
mov
inc
pushf
setge
cmpsb
aas
xchg
orl
mov
insl
shrb
pop
adc
adc
jmp
cmp
stc
inc
adc
jnp
lods
mov
cmp
push
push
or
lret
push
inc
sbb
push
adc
add
xor
and
call
mov
or
roll
jb
xor
jmp
mov
push
xchg
mov
add
movl
cmpsl
jae
xor
pushf
inc
mov
add
lea
adc
loopne
inc
sbb
movsb
shll
orb
push
push
mov
adcl
test
faddl
jge
jl
xchg
pop
shlb
pop
sbb
push
jle
sarl
rol
push
push
out
cmpsb
push
or
mov
pop
xor
push
mov
adc
arpl
mov
mov
mov
and
xchg
push
les
jnp
add
push
jb
push
jle
lret
xor
aas
les
clc
mov
mov
inc
mov
fbld
jl
divl
xchg
push
je
xchg
sub
jmp
popl
sub
outsb
aam
cmp
rolb
sbb
aaa
or
movsb
sar
out
add
fisttpl
push
cmp
jae
jp
adc
jl
aaa
lea
or
inc
icebp
or
push
sbb
add
mov
xor
into
or
iret
ds
push
or
xor
mov
dec
mov
dec
cmp
lahf
add
dec
cmp
imul
mov
add
data16
adc
aad
and
jns
jecxz
add
push
sbb
fsubs
movl
mov
add
mov
and
fs
test
adc
inc
pusha
mov
inc
inc
push
fisubrl
fcmovnb
pop
fldt
lods
mov
add
in
inc
cmc
push
loop
push
cltd
cltd
cmp
and
ja
sbb
mov
jecxz
pushl
in
adc
push
cli
sub
dec
outsb
jle
daa
add
jb
sbb
pop
inc
imul
xchg
push
jmp
test
fcoml
push
out
push
sub
aaa
inc
popa
sub
mov
cmp
je
sahf
popa
mov
cmpsl
in
ljmp
iret
cmc
mov
sub
jo
sub
cltd
stos
mov
fbld
sbb
notl
subb
test
ret
inc
dec
fcompl
loope
rorl
xchg
adc
mov
push
pop
ljmp
cmp
jle
push
pop
sub
cmc
add
sbb
in
repnz
mov
push
inc
mov
sub
push
ljmp
or
jp
dec
inc
lock
pushl
out
add
mov
inc
es
stos
add
xchg
sbb
js
mov
imul
cmp
add
pop
and
jae
push
mov
mov
andl
mov
jp
enter
pop
xchg
cmp
cmp
or
pop
in
or
and
add
inc
dec
sub
cmpsb
flds
or
test
jle
jno
add
pop
daa
outsb
sub
jns
fwait
cmpsb
xor
dec
mov
push
into
inc
dec
imul
pusha
sub
push
push
cmp
pop
jo
mov
je
js
jl
or
push
pop
andb
arpl
xchg
je
and
andb
mov
adc
push
and
push
pop
xchg
mov
das
loopne
sahf
dec
or
nop
lods
inc
add
gs
or
add
fldenv
push
inc
pop
push
pop
inc
dec
push
lods
or
add
sub
or
clc
sub
xchg
scas
mov
xchg
or
or
jl
push
test
mov
xor
lods
inc
loopne
inc
or
dec
xor
sarb
pusha
ret
push
dec
ficoml
inc
pop
add
or
sbb
pop
sbb
inc
rolb
andl
ss
dec
adc
outsl
xor
push
mov
inc
cmpsl
push
dec
or
sub
sub
mov
ret
inc
imul
pop
ja
pop
push
outsl
nop
sub
jne
movsb
dec
pop
incl
xchg
mov
es
cmp
sub
add
pop
pusha
sbb
and
xor
jne
cmp
pop
push
movsl
xchg
cltd
seto
push
pusha
popf
sbb
xor
and
fsubl
add
add
call
adc
mov
or
and
mov
nop
push
jae
xchg
cmpsb
sahf
cltd
fwait
sub
jno
and
mov
mov
sub
pop
cmp
lods
adc
cltd
jl
dec
test
out
in
pushf
add
jae
xlat
dec
sub
adc
lea
and
inc
add
lods
xchg
jge
mov
push
in
lods
or
inc
mov
xchg
xchg
push
lret
sub
adc
in
les
int
test
aad
mov
push
mov
nop
dec
sbb
imul
and
xchg
jae
xchg
push
sbb
scas
rcl
cmp
mov
mov
mov
jle
push
cmp
adc
enter
movsl
or
or
cmp
fs
insb
lahf
push
and
lea
stos
mov
pusha
cmp
add
inc
sub
sbb
stos
lds
cmpsl
push
movntq
out
adc
adc
add
mov
imul
mov
movsl
cmp
inc
in
in
stos
adc
lea
xchg
or
fimuls
jnp
dec
repz
dec
add
dec
push
lcall
inc
test
adc
jecxz
sbb
add
fistl
inc
add
mov
adcl
aam
lcall
push
pop
bound
in
xchg
add
clc
adc
xchg
xchg
mov
mov
xor
nop
mov
mov
pop
sub
adc
add
clc
test
add
sub
pop
cmc
push
adcl
and
orb
mov
push
mov
insb
or
cmp
mov
pop
shlb
in
add
repnz
sbb
je
clc
add
xchg
xchg
mov
insb
xor
sub
je
push
jne
lea
sub
rcrb
imul
or
jo
xor
push
inc
fs
je
jg
cmpsb
jne
es
add
jbe
push
mov
insb
lock
mov
adc
call
dec
cmp
pop
push
subl
pop
mov
inc
push
mov
add
inc
ret
aaa
test
inc
std
jle
sbb
bound
xchg
out
adc
sbb
outsb
out
adc
sbb
int
sub
add
mov
pushf
and
rcll
cmpl
dec
sub
xor
movl
jl
xchg
pop
dec
sbb
add
addl
loop
in
loop
sbbl
jnp
xor
repz
dec
fs
sar
dec
cwtl
push
adc
lock
push
repnz
decl
inc
push
push
sub
mov
cmp
inc
in
out
pop
jle
lea
inc
rcrl
inc
cmp
push
aaa
jp
adc
or
xor
xchg
adc
and
mov
mov
mov
push
roll
insb
mov
jno
cmp
lret
and
xchg
imul
sarl
add
inc
sahf
push
mov
dec
add
cs
push
cmp
mov
and
outsb
push
inc
xor
sbb
movsb
imul
inc
orl
cs
je
sub
xor
sub
or
inc
or
int
cmp
shrl
adc
or
sub
push
rolb
shrl
hlt
push
sbb
adc
adc
insb
add
andl
inc
das
sbb
mov
xchg
xchg
imul
push
jo
lock
ljmp
pop
lock
inc
xor
add
cwtl
xor
cmp
xor
xor
orl
dec
sbbl
pop
je
dec
add
fs
pop
or
fs
sub
push
lea
push
xor
leave
test
adc
push
popf
sbb
push
pop
push
push
xchg
scas
mov
test
sub
or
push
and
pop
and
xchg
pop
lahf
or
and
and
dec
nop
xchg
pop
mov
pop
sub
es
test
xchg
inc
mov
xchg
scas
xchg
push
and
lods
iret
xor
pop
movl
adcl
sbb
and
or
test
aas
dec
or
inc
inc
add
dec
sbb
pop
mov
jle
add
rcr
test
adc
loope
dec
cmp
jb
stos
xorb
mov
and
sbb
push
inc
dec
xchg
in
pop
pop
insl
iret
push
sub
cmp
push
jge
cmpl
movsb
mov
lea
adcl
inc
and
andl
dec
xor
cmp
shlb
add
push
push
shl
adc
jmp
sbb
dec
add
adc
insb
pusha
inc
add
shl
outsb
cli
dec
push
int
dec
dec
add
fadd
sub
fldcw
test
jno
adc
mov
pop
adcb
jns
loope
jne
lahf
push
push
pop
cmp
sub
enter
push
sub
jo
or
push
sub
aas
or
jb
xor
sub
es
or
lods
imul
mov
push
sti
rcll
pop
and
push
push
test
aam
dec
add
mov
negb
inc
leave
nop
add
add
inc
or
mov
fisubrs
stc
inc
lahf
inc
mov
cmp
das
jo
xor
mov
insb
aaa
jl
or
shl
mov
fistpll
xchg
or
xor
das
mov
add
and
inc
push
and
jno
subl
pop
fcom
mov
inc
iret
sti
mov
add
inc
sahf
cmp
mov
in
xor
push
or
sub
negb
lods
loope
insl
sub
inc
jmp
mov
add
and
jl
fdivl
insb
bound
hlt
mov
hlt
sbb
test
push
enter
stc
sbb
add
push
lea
push
push
adc
mov
xchg
lahf
sub
xchg
dec
xor
jnp
xchg
int3
enter
and
imul
insl
cmp
add
xchg
push
mov
adc
push
xlat
imul
shrl
inc
mov
dec
add
push
mov
add
push
aam
and
es
ret
or
pop
sub
rcll
cmpsb
fwait
sbb
inc
add
xchg
pop
and
iret
insl
or
and
rclb
and
inc
sahf
or
and
dec
xchg
dec
add
push
pop
call
sub
add
mov
nop
mov
sbb
pusha
xchg
arpl
push
xchg
lea
cmp
seta
add
and
je
add
sahf
in
clc
sub
outsb
sbb
sub
call
in
mov
lret
sub
shl
mov
pop
dec
pop
arpl
dec
adc
int3
dec
mov
pop
adc
adc
sub
scas
push
adc
jns
jb
mov
andb
dec
add
and
pop
push
mov
or
mov
cmp
adc
jp
push
in
pop
cmp
or
add
push
cltd
inc
es
or
fs
inc
pop
push
cmp
mov
sbb
fcoml
lea
sub
inc
out
subb
hlt
jne
rcrb
push
daa
cmpsl
and
sbb
adc
sbbb
xor
adc
aaa
cmp
sbb
adc
sbb
push
pushf
mov
in
fwait
sbb
add
push
jg
adc
stc
mov
inc
xor
xchg
adc
push
xor
das
add
inc
jecxz
jo
inc
dec
icebp
add
mov
cmc
xchg
xchg
inc
rcrl
cmp
shrb
sbb
push
lock
mov
inc
and
cs
bound
or
test
dec
jl
dec
lea
xchg
sbb
sbb
enter
jle
push
sub
jb
mov
inc
insb
cs
in
adc
or
adc
cli
jns
push
enter
je
int
mov
daa
test
es
stos
in
and
dec
cmp
pop
and
dec
popa
add
jo
pop
rolb
or
lods
push
aaa
test
pop
add
mov
mov
clc
jbe
add
pop
push
cmp
fwait
adcl
aam
loope
inc
push
sti
add
cmp
bound
lea
popf
push
aas
cmp
call
cmp
add
mov
sbb
push
push
push
cmp
push
pop
inc
push
add
pop
sub
push
lea
cmp
ret
jo
pop
shrb
jne
mov
dec
test
mov
mov
rol
fs
pop
add
sbb
test
or
subb
push
pop
push
add
push
cli
pop
sbbb
sbb
dec
push
adc
sub
add
dec
jl
je
jne
and
imul
aaa
dec
ss
popa
pop
ror
xchg
and
nop
mov
sub
jmp
sbb
adc
push
xchg
add
inc
add
sahf
xchg
je
aam
adcb
dec
mov
fdivr
xchg
add
addl
or
push
add
ret
aad
bound
test
call
sbb
call
adc
cmp
pop
push
sub
jae
jbe
daa
mov
pop
enter
jo
push
mov
and
mov
fadds
cmp
cmp
jmp
js
push
test
jecxz
dec
adc
rclb
or
mov
cmpps
loopne
or
and
mov
or
push
push
cmpsb
loop
adc
push
push
mov
nop
bound
sub
push
add
push
movsl
xor
push
and
pushf
imul
in
jne
xor
push
push
add
or
jmp
push
stos
in
dec
or
adc
enter
ret
or
adc
mov
xor
jl
addb
adc
rcll
dec
or
sbb
test
xchg
dec
adc
mov
pop
push
out
in
dec
or
dec
xchg
and
aaa
mov
jne
mov
cmpb
xchg
lea
jo
xchg
fbld
push
rorb
mov
shll
lock
jb
sbb
push
sbb
jne
sbb
cmp
sbbl
and
mov
rcrb
push
sub
and
xchg
rcrb
cmpb
push
and
and
mov
cmp
es
enter
fsubrl
enter
add
test
repnz
cmpb
mov
cwtl
lods
inc
mov
xchg
or
subl
or
sbb
pop
mov
xchg
pop
shlb
jae
pop
mov
dec
arpl
loop
jbe
movsb
cwtl
pushf
xor
lcall
xchg
add
call
sub
orl
and
ret
loopne
mov
cwtl
sbb
jge
cs
cmpsb
mov
ret
lock
sbb
or
jl
sbb
jo
jb
jne
add
pop
pop
dec
pop
push
add
adc
mov
dec
jb
jmp
nop
stos
movsb
rcrb
mov
push
mov
arpl
stc
rcl
cmp
sub
aaa
push
mov
cmp
push
mov
add
or
adc
loope
sbb
jae
jl
in
xor
or
jmp
cmp
hlt
in
cmp
inc
cld
inc
in
fisubrs
sbb
bound
aam
cmp
or
inc
xchg
sahf
rcrb
lret
pop
sbb
adc
dec
sarl
mov
lods
xor
inc
bound
jecxz
jmp
mov
out
adc
and
ret
inc
clc
imulb
push
lea
rorb
movl
rclb
iret
add
fadds
dec
cmpb
movsb
add
xor
aas
lods
jae
xchg
ds
dec
cmp
dec
cmp
cltd
dec
mov
repnz
cmp
cwtl
add
xchg
dec
dec
mov
jmp
jge
add
es
inc
lea
popf
push
inc
adc
sbb
mov
stos
into
loop
xchg
inc
xor
lret
mov
rorb
xor
outsl
add
mov
jo
dec
push
jg
mov
push
sbb
pop
or
sub
vmwrite
pop
inc
xor
pop
mov
fs
gs
jecxz
xchg
jnp
movb
shll
mov
insb
imull
pop
adc
add
imul
xchg
xor
sbb
pusha
sub
or
in
rcrb
test
cmpb
push
push
clc
and
cs
jmp
sbb
push
cmp
mov
adc
dec
or
sub
add
or
movsb
xchg
bound
push
or
push
in
mov
xchg
sahf
pop
add
xor
aam
test
clc
mov
or
rorl
push
push
and
ficoml
pusha
inc
sar
mov
cmpsl
int3
xor
mov
xchg
js
fcoml
push
push
test
xor
cmp
stos
imul
loopne
adcb
xor
fcmovb
mov
and
fidivl
push
pop
xor
cwtl
push
or
fadd
dec
in
xchg
push
outsl
dec
cmpb
mov
cmp
shld
mov
sub
push
xor
push
bound
push
or
repnz
test
sub
xor
add
fmuls
leave
add
and
adc
pushf
and
dec
inc
pop
adc
dec
sbb
call
pop
xor
add
sbb
repz
sbb
add
aad
or
movsb
xchg
xor
inc
aaa
xchg
mov
xchg
sarl
push
cmp
cmpsb
push
dec
dec
loop
and
push
mov
cmp
adc
fadds
loopne
ret
mov
stc
and
je
sub
push
enter
dec
sub
dec
xor
and
sub
sbb
mov
mov
int
push
adc
and
mov
ret
inc
xchg
adc
dec
sub
sub
add
or
ret
sub
push
push
mov
sub
pop
subb
or
test
inc
jo
dec
lea
cmp
aas
adc
pop
push
add
out
es
fisubl
nop
dec
mov
push
outsb
or
inc
scas
add
adc
sbb
dec
xchg
push
push
dec
push
mov
adc
mov
sbb
pusha
adc
push
xor
xor
mov
adc
in
clc
popl
sub
and
mov
movlps
nop
xor
inc
add
imul
ret
xchg
push
push
test
adc
popf
jle
leave
add
cwtl
cmp
stos
add
mov
or
lret
add
inc
dec
es
jo
sbb
pop
xor
inc
ja
lea
sub
push
adc
push
sbb
mov
lea
call
mov
int3
test
and
enter
dec
insb
push
das
js
sub
jecxz
adc
aad
pop
dec
out
fsubs
or
or
jae
and
add
movsb
push
cmp
mov
add
cmpsb
cmp
nop
data16
adc
stos
xchg
sub
int3
jbe
es
pop
orb
sahf
stos
push
xor
cmp
push
or
imul
aam
or
xchg
dec
lcall
add
adc
ja
pop
sarb
pusha
mov
sbb
daa
sub
push
xchg
mov
and
inc
push
and
push
lods
or
pop
jp
sbb
adcb
cmp
test
push
jae
out
xor
cli
push
mov
cmpsb
sbb
mov
hlt
dec
fs
pop
cmp
lret
mulb
push
pop
inc
ret
jnp
jne
mov
sub
push
incl
cmpsb
jmp
loopne
xchg
pop
ljmp
pop
lea
push
bound
or
push
repnz
sahf
fnstsw
add
addb
jecxz
xor
dec
mov
and
push
jno
push
jmp
push
adc
add
adc
imul
push
mov
and
or
repz
mov
or
and
add
nop
or
xor
jl
push
push
inc
rorb
lock
xchg
adc
lea
dec
js
or
push
sub
sbb
add
sub
dec
and
mov
and
mov
push
and
jb
push
mov
stos
add
popa
imul
mov
xchg
push
mov
popf
sbb
push
stos
add
dec
pop
and
pop
pop
push
mov
add
push
push
and
adc
and
and
cmp
xor
pusha
dec
sahf
sbb
add
test
mov
sbb
and
dec
mov
fdivrs
pop
mov
and
mov
push
sbb
aam
loop
push
mov
or
movsb
cmp
add
popf
add
add
mov
push
divl
pop
inc
mov
jmp
or
xor
sub
cld
dec
jge
xor
cmpsb
and
negl
xor
pusha
pop
xor
sub
xor
lret
fimull
xchg
pop
cwtl
call
sbb
lret
or
ret
in
or
push
mov
pop
or
fistpl
xchg
sub
sbb
mov
push
or
xchg
xor
jne
and
jae
pop
or
or
add
mov
add
and
js
or
nop
test
jg
ret
or
adc
sub
bound
add
or
and
or
inc
sub
adc
push
test
rclb
pop
pusha
imul
add
sbb
inc
sub
ja
lds
inc
add
aad
adc
and
or
adc
lods
sbb
push
sbb
and
inc
in
inc
pop
adc
pop
and
or
mov
push
imul
mov
jg
stos
jle
cmp
jae
mov
cmpsb
rol
add
lea
and
std
jl
aad
pop
das
mulb
test
xchg
sti
std
push
xor
xchg
add
jb
std
add
cli
test
jle
and
ss
mov
push
fwait
jbe
add
dec
cltd
add
stc
dec
push
das
test
mov
add
inc
cld
xchg
test
pushl
repz
mov
pusha
out
sbb
int3
or
adc
mov
push
lret
mov
lahf
pushf
xorb
test
xor
adc
incb
dec
cmp
or
adc
inc
add
add
fisubl
pop
push
in
cwtl
rolb
pusha
adc
jo
movsl
cmpsb
xor
mov
fwait
inc
pop
add
cmpsb
mov
movaps
addr16
xchg
lods
sub
or
pushf
bound
push
inc
js
cmp
sbb
push
xchg
or
int3
cmp
test
iret
cmp
jmp
push
push
or
pop
rolb
inc
xor
pop
mov
cmp
bound
pop
sub
pop
add
pop
and
inc
xor
mov
cs
mov
lods
mov
push
cs
sti
cmp
push
insb
push
faddp
inc
insb
mov
push
or
pop
pop
cmp
imul
dec
cmp
xor
adc
jo
adc
jbe
insl
mov
cmp
cmp
or
insl
lods
in
insl
es
xchg
rolb
jo
inc
or
scas
jmp
cs
xchg
adc
mov
xchg
mov
test
xchg
adcb
incb
mov
inc
ret
push
or
and
cmp
xchg
mov
int3
dec
dec
int
roll
add
test
jg
mov
and
adc
mov
and
fcompl
faddl
jecxz
adc
movsl
xchg
adc
test
icebp
mov
aas
mov
pop
scas
nop
testb
popa
mov
movl
ret
push
xchg
mov
adc
jae
popf
xchg
jne
fnstsw
or
fdivs
inc
cmp
leave
or
sub
sbb
xor
and
add
pop
pop
xor
add
fdiv
jle
jae
clc
out
adcl
dec
adc
mov
xchg
adc
cwtl
dec
or
popf
scas
cmpsb
int3
data16
push
pop
loopne
fstp
pushf
mov
movb
inc
scas
stos
in
cmp
jne
and
cmp
loopne
aam
jns
addb
jecxz
lea
int3
push
bound
sub
and
rclb
xchg
push
pop
lock
sbb
testb
pop
push
pop
mov
es
mov
push
lock
sbb
out
push
adc
lret
and
or
or
je
push
pop
imul
lahf
pop
dec
lock
adc
fwait
lret
mov
mov
jmp
lock
js
push
add
fdivrs
mov
in
dec
inc
hlt
shrl
sub
mov
ret
xchg
mov
or
pop
push
adc
mov
xchg
cmpb
ret
sub
movsl
mov
add
icebp
or
stos
cmp
jecxz
sub
call
imul
cmp
popa
jbe
cwtl
stc
sbb
pushf
xor
jle
adc
fwait
jmp
sarb
cmp
pop
enter
clc
lret
cmpsl
sub
loop
into
lods
sub
cs
push
push
movsb
mov
add
cmpsb
dec
addl
xchg
lock
mov
push
data16
sbb
fsts
pop
das
das
imul
inc
mov
nop
add
add
xor
or
pusha
sub
mov
ret
in
test
cld
mov
js
aad
test
xor
sti
jne
and
je
xchg
mov
js
in
sub
subb
pop
pushl
jnp,pt
icebp
mov
addl
sbb
push
or
xchg
outsl
mov
mov
inc
fldenv
push
xor
xchg
cltd
ss
dec
jb
test
xorl
dec
dec
mov
push
cmpsl
sbb
sbb
xchg
jbe
push
dec
les
mov
mov
fwait
sbb
cld
pslld
in
pop
cld
or
add
loopne
loopne
loopne
or
movsb
loopne
xchg
movsb
or
cmp
and
data16
rcll
xchg
ret
xor
inc
adc
lcall
lods
or
mov
pop
pop
add
shll
push
push
dec
push
cmp
mov
enter
mov
mov
ja
mov
in
add
icebp
mov
mov
nop
sub
arpl
bound
and
add
push
jno
push
aad
mov
xchg
push
push
add
pop
push
fstp
popa
and
pop
jmp
or
push
fdivrl
sbb
inc
adcb
es
mov
jo
popa
mov
mov
rcll
sub
and
repz
adc
dec
fisubl
dec
enter
mov
inc
lret
xchg
xor
dec
adc
adc
adc
rclb
dec
xor
test
mov
pushf
icebp
sub
testb
inc
jb
mov
cs
ss
or
lods
arpl
and
push
cmpsb
push
sub
outsl
sub
rclb
and
dec
push
mov
dec
sub
rcrl
adc
stos
xchg
add
mov
js
xchg
and
add
jns
mov
adc
dec
jge
mov
call
out
mov
mov
pop
dec
lret
sbb
cld
sbb
jge
and
inc
add
ljmp
and
popa
push
sub
nop
push
shr
call
mov
les
rorb
aad
shll
or
mov
pop
add
es
xchg
mov
pop
js
sbb
adc
jbe
sbb
mov
cmpsb
jnp
mov
outsb
inc
jnp
push
pop
mov
mov
rcrl
mov
mov
iret
push
jb
dec
adc
or
dec
xchg
inc
push
call
sbb
push
push
outsb
pusha
sbb
mov
or
cmp
je
dec
stos
and
enter
sub
push
adc
leave
test
scas
sbb
pop
cmp
xor
mov
cmpsl
test
mov
push
push
shlb
movl
cmpsb
pop
sub
or
mov
add
cmp
out
or
push
cmp
xorb
nop
inc
insl
stos
xor
or
rorl
ret
sub
inc
sub
mov
lret
mov
mov
xor
push
fs
push
movl
add
addb
clc
pop
lea
xor
xor
sbb
push
inc
add
rcrl
subb
and
xor
xchg
push
add
push
sub
lea
dec
pop
or
pop
sarl
xlat
push
je
je
mov
jl
xchg
daa
add
push
sub
cmp
sbb
addl
sub
je
add
add
sub
or
loopne
mov
dec
sub
push
pop
or
arpl
sbb
pop
mov
popa
cmp
es
add
jg
rclb
test
sub
adc
jo
scas
xchg
sti
xchg
sub
ret
sbb
sar
popf
jbe
pop
rcr
push
add
push
outsb
insb
test
sub
leave
pop
fistpll
lds
shlb
jl
pop
mov
cmp
mov
cmpb
adcb
lock
pop
in
xor
cmp
jne
mov
mov
sbb
adc
add
loop
lret
xchg
push
inc
pusha
push
cs
fistl
adc
sbb
mov
call
jno
fwait
lahf
push
pop
inc
add
daa
mov
out
xchg
subb
popa
add
mov
adc
adc
lea
lods
jecxz
jmp
lock
sbb
ret
ss
std
xor
push
and
pop
cs
enter
addr16
sarl
inc
test
push
jo
js
inc
in
in
jmp
mov
xor
cmp
push
mov
push
mov
add
sbb
call
cmp
int3
cmp
dec
sub
mov
stos
pop
cmp
mov
pushf
pop
adc
mov
rorl
adc
or
out
xchg
scas
xchg
ss
cmp
or
pop
bound
push
xor
stos
cli
or
mov
int
lock
ret
and
sbb
lea
push
or
fdivrs
sbb
daa
ss
icebp
push
push
push
insl
jns
loope
cld
jne
mov
push
push
inc
add
mov
sbb
inc
adc
mov
or
or
mov
add
lock
pushf
xchg
fiadds
shr
shlb
and
push
xchg
call
adc
cmp
inc
add
pop
mov
repnz
shrb
adc
jl
xor
jmp
sahf
incb
inc
rorl
inc
dec
add
inc
movzbl
mov
xchg
mov
int
adc
addb
dec
cmp
adc
xor
sub
sbb
add
lahf
stos
and
xchg
push
cmp
jns
int
pop
addr16
stos
add
mov
inc
faddl
push
jb
cmp
cmp
and
addb
push
insb
loop
jp
testl
jle
clc
jo
and
jnp
sbb
frstor
rcl
ret
adc
jecxz
or
mov
pop
sub
and
mov
stos
call
popf
call
loope
aam
call
cmp
adc
sbb
adc
push
push
xor
add
and
dec
mov
xor
xor
pop
mov
inc
or
or
repz
jg
inc
add
and
xor
pop
sub
das
js
or
pop
sub
out
test
mov
clc
add
pop
or
dec
popf
add
sub
repz
ret
dec
dec
outsl
add
or
dec
jp
push
cld
push
jb
jo
jle
sti
gs
pop
xchg
mov
test
add
hlt
jnp
mull
sbb
cwtl
mov
cmp
repnz
sub
gs
or
sbb
stos
jo
pusha
orl
push
and
and
bound
imul
div
jle
sub
add
dec
mov
or
dec
or
cli
pushf
cmp
clc
xchg
test
jle
pushf
lock
push
ds
dec
add
orb
fsubs
inc
in
xchg
pop
and
jp
cmp
loope
jle
mov
jmp
add
push
sub
mov
shlb
jecxz
pushf
and
add
or
adc
bound
push
dec
xchg
xchg
push
dec
xor
mov
popa
or
jmp
mov
xor
lods
xchg
dec
pushf
inc
push
or
xchg
test
xorl
jo
mov
mov
jl
pop
push
inc
pop
daa
push
xchg
aad
push
ss
xor
daa
inc
bound
jle
inc
dec
loopne
jle
sbb
out
and
add
dec
pop
test
adc
sbb
add
sbb
fadds
jne
cmp
daa
xor
stos
es
xor
sbb
or
cmp
ret
add
pop
xchg
push
jo
push
or
or
add
fcoml
mov
jno
inc
pop
add
inc
add
xor
icebp
adc
jnp
and
bound
push
xchg
add
or
add
inc
or
pop
or
test
cmp
pop
xor
test
lds
cwtl
dec
push
fistpl
icebp
pusha
mov
andb
ja
in
mov
dec
rorb
in
imul
ret
into
mov
pop
mov
inc
add
and
sbb
imul
out
and
mov
sub
lahf
add
mov
pop
add
scas
mov
lods
pop
sbb
mov
dec
xor
cmp
sub
xor
or
imul
mov
jne
cmp
jb
fistpll
sub
jmp
push
dec
movzwl
dec
pop
cmpl
push
mov
pushf
ret
lret
xor
test
mov
jmp
push
push
push
or
adc
in
test
adc
xor
mov
mov
adc
pop
mov
add
add
inc
in
add
dec
adc
repnz
push
push
shll
inc
cmp
lahf
jmp
push
inc
xchg
cmp
add
push
in
fldl
and
dec
insl
iret
test
mov
jecxz
inc
xchg
xchg
sub
popf
test
enter
mov
mov
push
xchg
sbb
inc
xchg
or
and
jg
stos
mov
enter
add
and
xor
fimull
pop
aas
gs
nop
xchg
loope
push
push
nop
push
pop
cmp
sub
nop
jo
xchg
movsb
mov
orb
pop
add
mov
add
mov
mov
cmc
sti
cmp
add
test
push
lock
aam
add
lds
inc
je
dec
xor
fisubrs
mov
and
pshufw
push
cmc
xor
fldt
push
in
dec
cmp
cmp
mov
or
rorb
int3
and
test
pop
pop
cs
push
ss
sub
and
dec
jae
inc
inc
adc
inc
mov
xor
ret
cmp
scas
mov
arpl
sahf
ss
mov
test
insl
mov
scas
mov
andb
xor
sarb
cmp
test
sbb
inc
mov
repnz
cmp
xor
dec
outsb
pop
adc
or
dec
test
loope
jne
mov
and
mov
or
jno
push
clc
shlb
or
jecxz
popf
pop
aas
add
and
in
lahf
mov
sub
adcb
add
enter
and
insb
add
bound
roll
push
int
push
dec
pop
cmpl
dec
je
mov
mov
adc
cltd
and
cmpb
aaa
mov
stos
jle
add
push
add
dec
dec
data16
call
ret
jg
ret
jne
add
push
mov
cmp
lcall
or
aad
inc
jo
xor
mov
inc
jecxz
fnstcw
out
add
pop
xor
and
adc
add
sbb
cmpl
jecxz
out
sub
dec
mov
and
test
lock
lea
push
rorb
adc
repz
cmpb
jne
fwait
insb
or
xor
mov
xorb
xor
sbb
xor
in
xchg
push
mov
sbb
push
mov
sbb
fiadds
pusha
cmp
adc
cmp
daa
add
movsl
pop
xchg
add
mov
mov
pop
popf
movsb
xchg
xchg
mov
pop
add
out
add
inc
pop
cmp
adc
aam
xor
xchg
push
test
or
xchg
sbb
mov
decl
add
xchg
test
inc
cmpsl
bound
dec
inc
dec
sbb
mov
push
in
scas
lds
cmpsb
adc
jns
xor
mov
dec
jecxz
inc
leave
or
dec
aas
and
push
adc
or
adc
dec
cmpsb
cmc
add
jmp
adc
scas
cmpsl
fsts
or
xchg
jmp
push
dec
xor
push
ret
push
sub
sub
pop
mov
cld
inc
nop
stos
mov
xchg
adc
fcoms
enter
sub
inc
sub
pop
cmp
or
lahf
orb
push
cmpsb
clc
sub
lahf
dec
sub
jne
test
es
mov
add
mov
nop
adc
repz
and
pop
pop
mov
fsubrs
shrb
fmuls
ja
push
imul
jmp
mov
sub
jo
cmp
mov
mov
mov
cmp
cmp
in
xchg
addb
js
aaa
adc
sub
push
add
pop
add
pop
and
push
daa
pop
rorb
dec
add
lcall
push
jl
outsb
mov
dec
js
arpl
push
lcall
add
sub
jo
popa
jmp
mov
cmpsb
pop
xchg
dec
add
cltd
pop
js
inc
gs
mov
adc
and
xchg
dec
scas
in
push
pop
mov
mov
in
push
sbb
push
or
and
push
push
push
test
bound
ret
and
xor
js
xchg
mov
adcl
xor
dec
shll
popa
bound
aaa
icebp
push
add
add
or
sub
and
or
leave
cwtl
test
test
sub
xchg
sbb
xor
lret
sub
sub
nop
cmp
cmp
movsb
mov
inc
inc
sahf
or
dec
stos
or
je
inc
dec
dec
sub
pop
stos
inc
add
pop
paddw
inc
cmp
cmp
and
lret
inc
cmp
repnz
xchg
push
cmovp
dec
inc
push
mov
mov
repnz
cmp
sbb
mov
fwait
add
sub
add
or
and
test
adc
daa
add
cmpsl
repnz
and
andb
mov
mov
lock
aaa
dec
mov
dec
inc
cli
out
testl
pop
jle
inc
sahf
fs
pop
or
shr
in
xor
cld
rcrl
sub
adc
popf
outsl
add
mov
mov
enter
popa
sbb
iret
cmpb
push
xor
sbb
pop
dec
dec
or
inc
aas
out
faddl
lcall
xor
sbb
xorl
int3
xor
or
lahf
ficomps
icebp
addr16
xchg
addl
or
pop
push
adc
inc
add
paddsw
push
pop
movsl
enter
cmp
sbb
or
inc
je
push
stos
outsb
push
jle
mov
add
cli
lret
adc
sub
dec
or
cmpxchg
ficompl
outsl
or
or
jb
sbb
ss
in
movsb
and
cwtl
pop
shrb
dec
sub
test
dec
lock
daa
jne
loopne
jno
testl
sbb
orb
aaa
inc
jbe
add
enter
pusha
inc
and
nop
push
dec
xor
jmp
loop
xor
xor
inc
cmp
subl
add
nop
sub
leave
adc
sbb
xchg
cmp
mov
and
adc
or
add
or
hlt
das
cmpb
je
scas
popa
add
and
sub
dec
push
jg
xor
add
add
por
cmp
repz
sbb
adc
call
clc
mov
mov
mov
inc
or
push
pop
out
pushf
sbb
jle
mov
add
jne
lret
mov
pcmpgtb
mov
xchg
pop
jns
call
add
outsl
xorb
cmpl
and
popa
jmp
sub
aaa
sub
outsb
push
fisttps
cmc
jl
lea
jmp
push
aad
adc
lcall
mov
jmp
clc
xorb
sub
xchg
dec
push
mov
mov
add
lcall
fwait
mov
in
push
stos
add
daa
and
repz
fcomps
aam
push
jo
or
pop
repnz
pop
clc
adc
push
ds
dec
or
add
pusha
and
mov
cwtl
or
mov
jb
fisttpl
push
sahf
or
add
dec
jle
pop
ret
addl
push
and
xchg
fnsave
cwtl
jo
ret
div
sub
or
adc
out
adc
pop
mov
dec
dec
push
ret
adc
and
sub
ret
fldcw
push
pushf
popa
or
into
data16
leave
dec
fmull
cmp
or
mov
pop
enter
mov
mov
enter
inc
jg
pusha
adc
xchg
adc
jg
mov
xorb
rcll
mov
adcb
loope
out
fucomip
jmp
mov
sahf
cwtl
jne
sarl
push
add
pop
sbb
aad
pop
mov
jle
test
lahf
dec
enter
pop
push
inc
mov
mov
xchg
stos
sub
pop
lods
imul
dec
or
outsl
rcll
mov
mov
add
pop
test
and
psubusw
or
pushf
mov
pop
push
pop
xor
push
dec
add
dec
dec
pop
out
mov
sub
mov
cli
adcb
or
popf
mov
mov
rorl
push
push
ficoml
test
or
sub
and
sahf
or
mov
push
cmp
adc
loop
mov
jl
cmp
mov
dec
mov
add
nop
jbe
jp
inc
jecxz
dec
pop
push
fcompl
cmp
divl
sbb
mov
jmp
rorl
ret
call
push
cltd
pop
jl
outsb
cmp
inc
or
sub
gs
inc
add
or
xor
ja
or
int3
into
pop
xor
and
orl
pop
cmp
jne
add
js
pop
sar
sub
and
adc
pop
or
sbb
shll
roll
insb
xorb
lret
add
push
call
fsub
xor
mov
mov
ret
xlat
dec
es
testb
mov
les
cmp
jb
xchg
xchg
push
jmp
xchg
adc
mov
xor
cld
add
lea
inc
loop
cmp
ret
sbb
xchg
imul
cld
xor
into
dec
jnp
or
inc
ret
test
push
pop
int3
fildll
inc
mov
aaa
xchg
and
scas
das
push
inc
fcomps
cmp
fisubrl
dec
mov
stos
push
sub
imul
fsub
jl
inc
mov
fmuls
pop
lock
cld
mov
cmp
je
outsb
push
sbb
inc
mov
sub
xor
clc
xchg
jbe
jg
adc
mov
push
das
add
mov
mov
jmp
xor
std
adc
mov
push
push
popa
dec
inc
fadds
pop
cld
cwtl
jg
imul
cli
xor
pop
jp
rcrl
sub
and
or
inc
jne
data16
shll
add
mov
xor
jo
sub
gs
adc
xor
ljmp
cld
fisttps
loop
inc
cmpl
cmp
adc
xchg
sbb
stos
mov
loopne
adc
test
je
test
pop
xor
lea
fimuls
or
pop
push
mov
and
push
call
jecxz
pop
jmp
orl
ljmp
js
inc
pusha
dec
scas
imul
movsl
mov
adc
push
lock
add
add
mov
push
rolb
mov
jle
or
xor
call
and
test
push
add
clc
add
jmp
push
lea
push
push
mulb
mov
mov
ds
fists
cld
push
in
or
adc
adc
adc
int3
imul
or
adc
push
xlat
fisubl
leave
stos
leave
inc
jb
jmp
sbb
or
xchg
sub
and
lock
pop
sub
pop
jmp
outsb
sahf
lock
xchg
inc
dec
cmc
jo
mov
add
loopne
inc
scas
cmpsb
mov
and
push
xchg
popf
sti
mov
mov
in
pusha
aaa
mov
adc
jmp
push
scas
rcrl
xlat
sub
popa
outsb
and
mov
push
push
add
jle
rol
inc
idivl
pop
sub
pop
mov
subb
mov
mulb
popa
inc
flds
dec
and
adcb
loope
push
xor
push
scas
inc
mov
dec
sub
push
adc
orb
nop
or
call
out
jmp
test
cld
jo
inc
sbb
pop
shlb
bound
adc
mov
inc
and
and
mov
dec
xor
mov
loopne
lret
add
mov
das
add
inc
push
imul
add
out
or
xadd
pop
popf
jne
into
lock
xor
shl
ds
cmp
xor
add
lcall
js
push
f2xm1
cld
orb
test
cmp
lret
or
stc
rclb
mov
out
mov
outsl
ljmp
int3
stos
sub
aam
cmp
mov
sbb
mov
jbe
inc
mov
cmp
lahf
dec
lock
subl
je
mov
mov
lock
jb
cmp
roll
inc
fnstsw
loopne
mov
sub
jne
xor
sbb
adc
add
sbb
loopne
inc
mov
addb
push
arpl
sbb
xchg
pop
and
and
clc
and
loop
inc
inc
adc
pop
cmp
adc
mov
or
dec
jmp
sub
push
fidivrl
push
sahf
add
add
inc
or
mov
cwtl
pushf
or
pushf
ja
movsb
sub
jae
aad
mov
or
xchg
shlb
sub
sub
pop
pop
cmp
scas
ss
pop
push
add
push
cmp
dec
call
adc
daa
adc
pusha
push
out
rclb
inc
rcll
ja
push
adc
jle
sbbl
mov
sub
aad
in
mov
mov
or
push
roll
mov
lcall
pop
ret
dec
shr
push
cmpsl
jge
sarb
inc
mov
into
xlat
sbb
das
push
lret
or
bound
mov
notl
add
imul
dec
mov
xchg
mov
or
xchg
pop
dec
daa
jo
xlat
ret
pop
jge
sub
idivb
add
mov
into
clc
pushf
sub
push
test
pop
jge
push
loop
xor
mov
cmp
cs
push
inc
dec
daa
add
std
or
mov
sub
ljmp
loopne
cmp
or
mul
rcl
mov
mov
nop
setb
jb
rcll
mov
add
push
sub
push
fisubrl
je
pop
scas
xchg
sub
xchg
push
jns
xor
loopne
jmp
adc
or
push
sub
dec
and
mov
adc
call
inc
mov
mov
inc
add
shrl
mov
pushf
mov
lock
add
lea
loopne
mov
int
push
xor
fs
nop
dec
les
jl
mov
cmc
inc
in
mov
pushl
outsl
sahf
ret
dec
js
mov
test
imul
push
push
sbb
lods
rcrb
cmp
mov
jbe
mov
push
jns
addl
sub
in
popa
stos
fisttpll
or
sbb
lea
sbb
pop
inc
aaa
dec
popl
mov
test
lret
mov
lret
add
add
cmp
rcrb
sub
stos
imul
or
mov
sub
data16
xchg
and
inc
inc
add
mov
sub
pop
cmp
fcompl
mov
pop
call
inc
sub
jmp
mov
loopne
mulb
or
cli
cmp
cmc
adc
loop
or
dec
xor
cmpsl
jno
xor
pmovmskb
fwait
mov
inc
lahf
push
jb
ret
arpl
inc
xchg
icebp
ret
jl
pop
lock
or
or
daa
pop
xchg
push
sbb
adc
cmp
in
pop
cmp
rclb
mov
mov
jmp
xchg
cmc
sbbb
mov
push
dec
and
fcoml
hlt
rorl
mov
push
cmp
pop
sub
mov
inc
jl
pop
push
push
and
cmp
in
in
ljmp
add
adc
pop
xor
mov
in
mov
lds
pop
stos
int3
inc
add
pop
sar
cmpsb
cmc
pop
push
ljmp
fwait
pusha
or
and
andl
jb
mov
mov
in
clc
mov
cmp
jg
push
divl
pop
ja
test
in
jo
adc
aaa
and
ret
addb
out
inc
push
cmp
mov
subb
cmp
fadd
bound
jno
pusha
push
enter
cmp
xor
insl
jne
cs
add
push
jl
sahf
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
dec
add
sub
sub
sbb
sbb
cmp
ret
dec
mov
call
inc
jg
push
fildll
cmp
je
mov
cmp
mov
and
push
push
fidivs
mov
mov
cmp
push
push
push
mov
jne
sub
and
pop
out
rorl
movb
mov
sbb
push
mov
xchg
mov
or
jnp
out
inc
push
push
cmp
jmp
push
inc
lea
loope
xchg
rorb
int
call
fcoms
adc
push
cmp
cld
pop
xor
clc
shlb
lock
sub
cmp
sbb
xor
cmp
push
sbb
faddl
xchg
ret
sbb
adc
stc
adc
cmp
jne
decb
fwait
clc
les
mov
testl
orb
cli
iret
add
cmp
rolb
popa
test
hlt
jmp
mov
lret
ror
adc
push
nop
dec
add
sub
sbb
or
sub
imul
dec
insb
rcrl
cs
add
lods
test
ljmp
cmpsb
imul
sbb
push
lcall
insb
jo
dec
arpl
js
fsub
out
rorb
fsubr
mov
idiv
dec
inc
movsb
sti
or
push
mov
inc
data16
xchg
mov
mov
lcall
scas
sub
push
stc
lods
cmpsb
cmp
movb
add
xchg
int
adc
and
add
fcoms
or
xchg
pushl
jbe
pop
sbb
sbb
fs
push
js
jo
push
fs
insb
push
fs
push
lcall
notb
adc
pop
adc
test
clc
adc
cmp
jne
xor
enter
and
neg
push
push
cmp
cmp
jne
mov
xor
in
add
bound
sysenter
jle
shlb
testl
or
jno
test
mov
inc
mov
adc
fistps
je
lret
sbb
loopne
das
fs
jne
sbb
mov
or
or
pop
xchg
add
push
ja
cld
js
and
clc
dec
in
add
inc
shll
mov
jnp
add
leave
lea
sahf
or
or
push
mov
pop
ss
mov
xor
cmp
test
in
mov
cli
pusha
fimull
pop
adc
inc
mov
inc
shl
jg
or
shr
and
test
cmp
out
pop
add
out
sbb
jmp
pop
js
push
testl
orl
testb
dec
or
adc
push
sub
lret
or
sbb
adc
ret
xor
sbb
jo
lahf
fnstsw
cld
mov
adc
jge
xchg
xchg
adc
mov
mov
incb
leave
dec
ja
repnz
out
add
inc
cmp
xor
orl
pop
pop
in
clc
pop
lea
out
cltd
imul
fsincos
dec
sub
add
mov
xlat
sub
mov
stc
mov
ss
dec
lock
stc
je
icebp
jne
ds
rcll
xorl
mov
movsl
dec
fwait
add
sub
call
pop
dec
sub
pop
pop
movsb
ja
cli
pop
inc
push
imul
in
imul
push
mov
scas
or
adc
rclb
nop
iret
push
test
mov
or
inc
inc
mov
mov
pop
cmp
mov
movsl
cmp
and
mov
xchg
ljmp
in
dec
scas
or
jmp
cwtl
or
negl
sahf
outsl
ss
movsl
xchg
insb
inc
mov
das
pop
add
lock
fcomip
or
and
and
inc
aas
jne
xchg
es
add
jl
shrb
pop
or
popf
sti
xchg
cmp
adc
pop
push
push
cmpl
add
or
adc
add
add
std
add
or
mov
xchg
call
and
into
and
xor
xor
or
sub
lock
int
jecxz
shrb
lock
adc
out
scas
rorb
dec
xor
adc
cwtl
dec
lock
loopne
jnp
stc
notl
ret
into
xchg
and
sbb
cmp
jecxz
nop
gs
sub
cwtl
sub
mov
xor
insb
insb
adc
and
push
jecxz
inc
push
aaa
clc
shr
sub
in
xchg
ret
adc
jecxz
ja
pop
imull
lret
pop
push
mov
je
cmp
pop
outsb
divb
mov
loop
addl
and
xchg
sbb
push
add
lock
push
lock
mov
inc
pop
xchg
jmp
lea
pop
fsubl
jo
dec
leave
add
xor
or
andps
jne
and
mov
adc
daa
and
enter
push
shl
hlt
and
and
inc
mov
adc
jo
pop
daa
adc
sbb
or
dec
ss
mov
jo
mov
mov
sbb
add
add
push
mov
add
mov
pop
test
pop
cs
push
pop
mov
mov
push
leave
inc
push
cmp
dec
cmpsb
je
ljmp
push
jl
testb
sbb
inc
sub
add
add
and
mov
dec
xlat
test
test
ljmp
pop
adc
push
or
scas
aam
add
leave
ret
insb
and
adc
and
pop
into
insb
clc
push
int
jno
push
jge
jne
enter
imul
mov
cs
and
lods
xchg
out
push
fsubrs
sti
aas
jne
outsb
or
insb
xchg
pop
icebp
pop
out
call
xchg
push
addr16
fildl
pushf
cwtl
fidivrs
addb
inc
movsb
or
sub
or
jnp
pusha
loopne
je
sbb
or
push
lock
and
dec
push
lea
push
sbbb
xchg
aam
sbb
push
fsub
sbb
lret
push
or
lods
or
sbb
lods
add
adc
xchg
jbe
pushf
test
xchg
movl
pop
add
clc
pop
xor
pop
sbb
lock
mov
push
inc
mov
shrb
mov
in
jge
push
pop
arpl
and
sbb
xor
add
lods
cwtl
pop
scas
add
ja
rolb
movsb
addps
or
andb
adcl
pop
inc
add
loop
cmp
jbe
pop
or
and
std
cmp
je
aaa
jle
xchg
add
testb
mov
mov
mov
sbb
jg
adc
sbb
push
adcb
imul
pushf
ret
pop
addb
xor
call
ljmp
mov
adc
or
and
pop
dec
or
pop
xor
push
or
jo
test
pop
fistl
popa
ret
loope
into
jecxz
and
data16
loopne
cmp
ds
pop
mov
xchg
popa
xor
lret
xchg
out
mov
out
pop
add
imul
nop
cmp
cmp
adc
push
jecxz
loope
ds
adc
add
ret
or
jmp
xor
aam
mov
push
enter
test
adc
scas
jbe
popa
mov
and
loopne
fisttpll
adc
pop
mov
cmovle
pop
in
mov
cld
mov
xchg
out
cmp
xor
mov
movsl
add
idivb
je
pop
es
mov
or
loopne
mov
jle
cmp
es
pop
push
js
out
jo
push
cli
or
mov
mov
jno
aaa
sbb
pop
jp
das
xor
jl
lock
test
insl
iret
out
inc
jb
mov
cmp
popa
and
dec
fcoml
pushf
adc
mov
ret
lods
pop
aas
jno
add
sti
push
aas
sbb
adc
movsb
jmp
popf
daa
jae
mov
addr16
push
out
push
je
or
cs
push
pushw
jnp
cmp
jmp
lea
push
push
sbb
and
xchg
and
out
pop
movl
aaa
lock
into
mov
pop
sub
dec
push
pop
jb
scas
mov
xor
or
mov
movsl
test
push
push
fstpt
js
icebp
adc
sub
imul
stos
sbb
adc
jl
or
sbb
pop
lods
sbb
addr16
add
ret
sti
and
and
xor
cmp
or
jno
xchg
ret
add
jmp
xchg
xor
xor
test
xor
add
lock
cmp
xor
inc
xlat
and
jo
push
pop
sub
jp
inc
test
pop
mov
and
enter
dec
insb
test
add
cs
aaa
add
xor
pop
mov
fstpt
cmc
jo
jmp
mov
push
addl
add
mov
pop
stos
xlat
shlb
push
jo
jmp
test
pop
push
ljmp
bound
sbb
or
adc
push
mov
push
and
xchg
mov
mov
pushf
adc
nop
mov
push
push
andl
cld
std
push
and
fbld
mov
mov
sub
sub
lods
test
adc
adcb
nop
cld
cmp
ret
ljmp
adc
rclb
sbb
pop
or
or
pop
sub
insb
js
xchg
loopne
push
xor
lea
outsb
or
dec
data16
or
and
movsl
test
cld
inc
cwtl
test
orl
or
pop
inc
xchg
dec
outsl
hlt
andl
or
or
lret
inc
icebp
lods
test
aas
sbb
inc
jmp
pushl
xchg
mov
mov
test
lea
sub
mov
call
jmp
sbb
mov
or
xor
ret
mov
pop
sub
xor
xchg
sub
mov
mov
jl
andl
adc
mov
adc
push
test
cld
and
mov
je
jge
add
or
imul
jecxz
fisttps
jl
dec
xor
pop
sahf
xchg
xor
outsb
mov
orl
xor
xor
adc
mov
ljmp
inc
jno
push
test
lahf
in
xchg
inc
mov
aad
xor
push
adc
mov
push
mov
mov
dec
cmp
or
shufps
popf
lcall
pop
sbb
loopne
je
in
xlat
shr
pop
movl
dec
insb
dec
jno
jecxz
dec
adc
pop
repnz
inc
push
inc
adc
inc
add
add
push
and
fdivs
pop
inc
pop
pusha
cmp
push
jmp
addl
pop
pop
xchg
pop
dec
push
fnsave
mul
or
pop
fs
es
xor
push
popa
sarb
push
sub
aas
sbb
sub
test
orb
jle
or
sbb
testb
mov
inc
or
add
xchg
jno
or
loop
and
or
or
cmp
jl
loope
xor
xchg
push
sbb
add
xor
xchg
int3
and
dec
pop
add
das
gs
push
mov
into
mov
adc
in
or
repnz
lahf
sbb
cmpsl
inc
add
dec
add
mov
movswl
add
fisubrl
push
lea
xor
inc
add
shll
add
rolb
add
aaa
push
sbb
popa
call
ret
mov
test
sub
movsb
je
insb
scas
stos
mov
xchg
push
cmp
fbstp
jo
movsl
mov
xor
cmp
dec
mov
xlat
xor
sbb
mov
call
out
push
push
movhps
mov
xorl
push
xor
cmp
data16
push
nop
test
test
dec
inc
mov
jmp
xchg
dec
xchg
pop
mov
add
pushw
pushf
data16
mov
adc
aad
imul
movsb
test
rcl
mov
fdiv
fmuls
mov
adcl
andl
pop
outsb
ja
mov
mov
fwait
xor
ss
pop
pop
push
push
pop
and
cmpsb
jl
pushf
mov
jne
pop
test
idiv
sub
sbb
mov
cwtl
rclb
pop
mov
adc
fcoms
pop
xchg
js
xor
jp
sbb
push
cmp
add
jb
or
push
pushf
mov
dec
testl
push
enter
xchg
cwtl
xor
cmp
add
repnz
push
aaa
push
addl
pop
enter
add
inc
cmp
je
push
dec
pop
add
adc
gs
lock
adc
mov
xchg
andl
mov
pushl
test
sub
pusha
rorb
outsl
inc
add
rorb
shrb
jae
into
add
xchg
movsb
das
inc
add
clc
pop
cs
inc
mov
lock
xchg
sub
cltd
adc
lods
jo
je
hlt
iret
into
sub
add
loopne
and
push
mov
ja
rorb
sbb
cmp
or
sbb
pop
inc
jbe
inc
adc
sub
dec
ret
mov
pop
push
mov
add
loope
jle
push
or
jae
sbb
add
adc
insb
or
icebp
int
xor
mov
data16
idivl
dec
push
push
jmp
outsb
stos
pushf
dec
insb
add
lods
test
jo
cmp
pop
push
pop
xor
ds
or
adc
or
rclb
add
fildl
clc
dec
xor
jne
roll
negl
mov
xor
dec
pop
scas
in
inc
and
andb
jle
repnz
mov
mov
push
pusha
fs
jo
add
sbb
sbb
bound
pop
and
aas
cmpsl
pop
call
jbe
xlat
and
inc
mov
jns
ret
inc
cli
push
cld
mov
adc
clc
dec
in
jge
inc
aas
jge
movl
shr
inc
add
sbb
test
dec
out
dec
clc
mov
mov
pop
loop
xor
sbb
or
pusha
insb
std
rcrl
mov
fcom
into
mov
adc
in
or
or
mov
lcall
lock
jo
mov
add
cmpsl
jb
clc
cmc
xchg
xor
loop
out
movsb
push
add
pop
adc
es
ja
sub
mov
sub
jne
add
jns
pop
xchg
pop
jnp
clc
and
sbb
aaa
testl
xchg
repnz
insl
adc
pop
lret
push
jg
or
sbb
and
xor
sbb
shrb
into
cmp
inc
ret
jo
hlt
fisubl
out
adc
jns
or
adc
push
mov
out
movsl
addl
ret
movsl
insb
sbb
loope
jge
ljmp
pushl
in
mov
inc
add
lahf
notb
inc
andb
int3
andb
xor
or
adc
leave
pop
add
daa
add
xor
sbb
add
sub
mov
inc
push
add
push
push
sub
push
pop
mov
or
gs
in
push
cmp
inc
aaa
jbe
push
rol
inc
dec
sub
lahf
ficomps
sub
add
mov
iret
and
inc
jg
add
cmp
cltd
push
jo
xchg
mov
xor
add
push
scas
or
mov
hlt
inc
push
jbe
call
out
roll
movsb
or
pop
push
filds
lret
inc
jno
shrl
mov
lret
adc
xchg
mov
jae
inc
jecxz
lds
pushw
mov
mov
ret
mov
sbb
inc
je
or
stos
jle
jne
into
dec
jg
fucomip
js
or
movsl
inc
bound
push
mov
dec
int3
shrb
xorl
push
cmc
push
rclb
push
push
push
out
movsb
push
call
and
pop
mov
pop
nop
push
and
fs
xor
inc
movsb
int
or
pop
clc
dec
xor
jbe
inc
pusha
clc
daa
mov
decb
mov
pop
mov
xchg
repnz
jnp
pop
movsb
sub
jne
ds
adc
mov
pusha
in
loopne
ljmp
add
lret
mov
push
push
sbb
push
adc
cmp
addr16
test
adc
dec
or
in
jge
cmp
push
adc
or
pop
or
addr16
jo
sbb
xor
fistpll
sbb
ds
or
jo
or
xchg
or
int3
and
shlb
mov
lret
add
les
xchg
adc
sahf
mov
jl
xor
add
shl
inc
mov
testl
loopne
or
cltd
or
or
sbbl
or
push
adc
mov
cmpsb
add
jne
stc
mov
fsubrs
jo
mov
sbb
cs
push
mov
in
mov
mov
mov
and
and
les
mov
sti
jl
movl
flds
aas
add
es
dec
and
dec
push
clc
adc
in
jo
lea
push
pop
add
mov
sbb
jo
mov
ret
bound
push
gs
push
adc
imulb
and
sbb
andl
xor
mov
inc
js
shl
jae
cmpl
mov
push
rolb
jns
jne
cmpb
xor
fwait
mov
pop
lods
push
push
scas
mov
add
push
xchg
add
xor
shrb
aaa
adc
cs
add
sti
sub
add
xlat
loopne
mov
or
xor
cmpsl
sti
in
and
jns
xchg
xchg
lock
push
push
testl
out
cmp
or
push
xor
xchg
in
or
inc
push
push
mov
lcall
dec
xchg
fisttps
adc
cld
push
sbb
xchg
mov
in
dec
pop
fisttpl
adc
dec
add
loopne
xor
ret
testb
sbb
dec
xchg
loopne
jno
jnp
mov
push
and
inc
popf
adc
mov
add
lock
and
out
ret
outsl
add
xchg
mov
add
mov
aas
push
je
or
je
or
sub
sahf
rorb
xchg
adc
adc
sbb
dec
adc
test
push
or
ds
xor
sahf
test
sbb
lcall
pop
mov
clc
outsb
or
jmp
cmp
adc
dec
movsl
stc
jbe
adc
inc
push
imul
add
push
push
call
push
adc
movzwl
dec
lods
or
ss
cmp
xor
lfs
jle
mov
ret
and
lods
popl
and
or
xchg
sarb
add
je
and
inc
pop
mov
add
sarl
jmp
daa
cmovge
test
inc
js
test
stos
and
add
add
lea
push
rolb
or
xchg
push
or
and
fwait
imul
dec
je
sub
sub
sub
lock
add
push
adc
in
scas
mov
inc
jbe
popf
cmp
or
push
adc
mov
sti
lds
mov
push
pop
jno
fistl
es
ds
in
out
pop
adcb
dec
pop
and
lea
cmp
and
shrb
nop
sbb
jbe
std
xchg
or
test
inc
fs
sbb
cwtl
pop
add
cld
fimuls
cmp
cmc
movsl
scas
dec
xchg
rcrl
dec
cmp
or
cmp
adc
call
fcoml
shlb
cmpsl
lock
addl
sub
stos
pop
or
inc
subb
mov
or
lds
test
cmpsl
xor
enter
fadds
ss
ret
in
push
push
add
add
mov
stos
xor
sbb
and
js
xchg
pushf
xchg
xchg
cmpsb
add
xchg
faddl
push
push
lds
sbb
in
xchg
shlb
pop
push
and
out
sbb
cltd
mov
imul
mov
shlb
leave
add
cmp
cmpb
lock
repz
push
jns
push
call
push
fdivr
outsl
inc
test
push
sbbl
scas
shll
stc
jno
sbb
mov
xchg
mov
xchg
add
sbb
fcoml
in
pop
rcll
mov
xor
aam
int3
and
xchg
xor
or
rorl
mov
or
aas
test
push
pop
stos
pop
ret
add
loop
pop
dec
out
jmp
sbb
inc
cmp
outsl
test
insb
sub
cmpsl
ljmp
and
daa
push
enter
pusha
pushf
popa
push
xlat
int3
pop
out
cmp
or
add
jmp
xor
xchg
mov
in
or
adc
inc
or
sbb
test
sbb
inc
roll
push
outsb
hlt
inc
mov
push
mov
movsl
rclb
dec
mov
adc
aam
out
inc
dec
loop
pop
mov
mov
jne
sbb
or
daa
mov
push
xor
inc
enter
adcb
push
jne
jle
mov
nop
mov
lahf
dec
jnp
mov
in
sbb
in
cmp
int3
shlb
data16
lds
pop
bound
mov
rcl
fcoms
push
mov
sub
and
mov
orb
sub
je
and
cmp
sbbl
shlb
inc
orl
xor
pop
fmull
xchg
mov
or
or
mov
outsl
fidivs
pop
adc
lea
mov
jnp
addr16
cmp
lret
sbb
clc
dec
push
lea
pop
push
or
xchg
push
push
xchg
mov
add
imul
movsb
loope
add
nop
movsb
test
test
add
jg
cmp
mov
call
popa
cmp
push
in
add
insb
pop
adc
add
gs
pop
incl
mov
cld
sub
or
rcll
inc
inc
inc
or
adc
cwtl
ret
aam
dec
inc
movl
leave
es
cmp
pop
jp
or
orl
insb
pop
xor
dec
mov
call
lea
rorb
outsl
or
out
and
jecxz
push
loopne
push
sahf
pop
dec
lock
pop
mov
ja
add
dec
and
add
mov
xor
mov
xchg
or
incb
push
push
add
pop
cwtl
adc
pop
dec
inc
or
sbb
loopne
int
push
jg
xor
jl
mov
inc
imull
call
call
push
push
adc
add
jns,pn
jae
add
jns
add
or
hlt
dec
or
or
adc
rolb
adcl
mov
sti
jp
test
inc
mov
or
ljmp
in
or
out
insb
gs
push
inc
mov
mov
cs
sbbl
cli
int
ja
sbb
xchg
punpckhdq
rcrb
push
xchg
imul
cmpsb
imul
or
mov
add
jl
sbb
call
and
and
mov
push
inc
adc
mov
rolb
dec
dec
pop
test
inc
mov
and
and
mov
push
sbb
js
sbb
subb
or
adc
js
hlt
rolb
cmp
mov
mov
imul
les
mov
cwtl
sbb
xchg
inc
fadds
xchg
and
push
adc
andb
test
lock
jle
jb
lods
pop
fs
mov
cmpsb
jne
and
ss
push
mov
sti
scas
fmull
dec
adc
pop
sbb
sbb
push
jle
jbe
bound
push
inc
xor
je
sub
loopne
pop
loop
push
pop
add
lods
dec
push
scas
je
pushf
adc
pop
xor
sbb
inc
les
clc
call
out
jecxz
jl
cmp
fiadds
mov
in
rorl
fucomi
aaa
stos
and
test
es
aaa
test
jne
mov
es
pop
inc
stos
lods
shlb
pop
jmp
push
ficoml
add
call
jne
sub
xchg
repz
adcb
int3
and
call
lods
loopne
orb
xchg
or
sub
push
fmull
cli
ljmp
pop
xchg
fnsave
ss
and
add
hlt
add
xchg
mov
mov
add
pop
je
or
push
cmp
or
xchg
mov
pop
push
out
cs
mov
notl
test
cld
out
bound
xchg
jge
jmp
add
lcall
push
mov
cld
andb
insb
decl
fs
inc
sub
cltd
in
mov
cli
fiadds
dec
adc
ss
adc
or
mov
shlb
pop
dec
lock
imul
push
adc
and
hlt
mov
stc
push
pop
fisubs
fnstsw
cld
push
xor
adc
repz
shr
push
jmp
inc
outsb
pop
adc
scas
addb
mov
popa
arpl
test
popa
movsl
les
push
sub
mov
adc
rcrb
sbb
cwtl
leave
lock
dec
or
je
mull
push
dec
out
add
push
push
jmp
mov
sbb
mull
lock
jb
adc
and
sbb
sbb
cmp
push
cs
add
and
xchg
or
orb
pop
and
mov
ds
or
pop
push
push
mov
add
sub
add
lea
or
xchg
add
pusha
inc
inc
popf
xor
sub
sbb
xchg
pop
xor
inc
jo
push
push
sub
in
sahf
xchg
or
in
stos
xor
push
sub
xchg
in
xor
repnz
jns
push
mov
sub
push
xchg
cmp
inc
ret
movsb
push
jns
cmp
or
mov
mov
sub
or
xchg
iret
lret
sub
cmpl
in
or
stc
dec
jns
add
mov
mov
inc
repnz
xor
push
push
pop
dec
jmp
push
enter
les
add
xchg
mov
push
mov
push
push
jecxz
in
in
fs
dec
cmpsl
xchg
xchg
push
fsubl
out
pushf
outsb
test
add
sarb
pop
or
ret
dec
fwait
inc
mov
call
ljmp
adc
loop
mov
add
movsb
or
add
or
or
mov
and
jmp
pushl
inc
cwtl
or
push
dec
xor
enter
xor
sub
mov
dec
outsl
or
jl
add
cld
movsb
pop
or
sbb
adc
mov
jle
movsl
sub
js
or
adc
adc
cwtl
adc
decb
pop
jge
sbb
xchg
xlat
negb
jge
loopne
dec
fmuls
popa
jno
jecxz
jae
or
sub
mov
scas
adc
jbe
das
mov
popf
loopne
je
or
or
mov
sbb
dec
out
out
loopne
nop
aas
pop
lcall
dec
shrb
xchg
dec
scas
in
call
lret
and
cmp
pop
pop
adc
idivb
push
scas
add
push
out
cmp
fsubs
mov
mov
pop
stos
add
leave
xchg
stos
arpl
pop
adc
js
loop
fldcw
test
std
repz
out
dec
ds
pop
fdivr
lock
lock
aaa
sub
jne
pop
add
bound
cmp
add
ret
push
jno
lock
pop
or
pop
testl
add
lcall
xchg
dec
mov
fbstp
or
jne
fisttpl
cld
pop
test
inc
dec
or
pop
shlb
roll
adc
add
in
cltd
and
lods
setnp
xchg
push
adc
xchg
pop
pminsw
pop
or
jg
push
mov
xor
std
pop
push
push
add
mov
mov
clc
orl
and
in
or
out
mov
or
rorb
xchg
arpl
aad
jecxz
imul
mov
cld
cmp
or
or
cld
fucomp
inc
adc
stos
and
daa
stos
xor
mov
mov
mov
pop
sbb
push
add
sbb
idiv
jae
mov
push
insl
or
push
jl
cmp
jae
clc
adc
mov
and
out
cmp
jne
add
push
xchg
loop
aad
xor
pop
adc
or
mov
sub
adc
jae
lret
fwait
or
int
dec
jle
daa
ljmp
loope
push
or
and
inc
cmp
pusha
icebp
mov
loopne
jl
repnz
mov
filds
add
call
xchg
pop
push
lods
sbb
ret
ficoms
sbb
sahf
mov
adc
ret
andnps
and
aad
push
js
cwtl
and
xchg
flds
lods
mov
dec
or
push
sbb
xor
shrb
cli
and
pop
push
and
and
or
or
xor
enter
dec
mov
jle
je
cmp
scas
loop
jb
sbb
test
pushf
lahf
in
imul
pop
add
nop
fdivrs
or
inc
sbb
lcall
sub
inc
inc
or
ja
pop
out
fistl
fcoml
call
jne
stos
movsl
sarb
mov
xchg
and
mov
insb
call
imul
sbb
js
popa
incl
jns
add
push
dec
jne
sbb
sub
sbb
mov
rorl
shlb
std
cmp
jbe
mov
push
xor
push
lods
rorl
and
cld
pop
cmp
imul
cmp
cmp
movsl
imul
jmp
jno
sub
jo
aaa
test
push
and
push
and
xchg
cld
jns
test
add
clc
push
pop
and
xor
or
pop
sbb
mov
inc
sbb
fists
dec
stc
add
test
dec
rcrb
std
sti
cld
push
cmp
jo
add
mov
cmp
mov
cli
or
lock
pop
adc
jmp
jge
rclb
mov
leave
add
mov
sub
lock
adcb
jae
mov
in
iret
mov
pop
cmpsb
inc
ret
andb
xchg
sbb
jecxz
pop
or
mov
xor
inc
cmp
or
sbb
je
fdivrl
xor
mov
xlat
add
aaa
sub
cmp
jb
xchg
out
movsb
cmc
cmp
cmp
addl
stos
mov
incl
rdmsr
or
cmp
in
movsb
cmc
push
push
push
sbbl
xor
add
ret
test
xchg
or
and
and
push
les
fs
cmp
inc
shlb
dec
testl
sbb
popf
mov
sbb
int3
adc
dec
jmp
mov
andb
stos
or
inc
or
xchg
xor
mov
cwtl
xor
mov
fcomps
push
dec
dec
test
sbb
mov
push
cs
pop
dec
faddl
iret
or
sub
jl
xchg
mov
pop
mov
in
outsl
lahf
add
push
jb
or
cmp
pop
jge
enter
mov
cmp
jmp
dec
leave
mov
xchg
lahf
movsb
push
inc
std
or
pop
popa
adc
and
sbb
or
add
in
rcr
mov
add
ds
sbb
adc
or
pop
adc
mov
mov
in
xchg
adc
nop
pcmpeqw
inc
adc
outsb
insl
jmp
call
std
mov
ret
gs
lcall
push
push
lods
and
jo
sbb
xchg
or
std
xchg
sub
or
lods
shlb
orl
mov
aaa
mov
mov
cmp
cld
ficomps
imul
and
ret
dec
fsubrl
pop
js
int3
push
lock
add
imul
mov
dec
xchg
mov
iret
or
aam
and
cmpsl
icebp
loope
in
push
sbb
jl
addl
stos
mov
adc
add
mov
adc
push
nop
jbe
into
xor
filds
dec
int3
or
and
ret
mov
push
sbb
stos
or
xor
rol
jge
mov
adc
jge
ret
xor
icebp
pop
inc
pop
jecxz
pop
ret
push
mov
or
and
sub
mov
pop
and
xor
mov
add
in
add
or
mov
xchg
add
mov
in
ret
push
pop
dec
and
clc
sub
mov
mov
push
xor
jg
or
push
adc
andps
and
pop
fnsave
outsb
daa
sub
loop
pop
or
cmp
je
sbbb
and
inc
stos
and
ficoml
test
add
fisubs
mov
ret
cmp
dec
out
mov
aad
or
jl
push
clc
rcll
pusha
xchg
push
std
ljmp
cld
jnp
push
loop
call
clc
push
lods
aam
jl
mov
xchg
fdivl
ljmp
jbe
sub
lea
push
rorl
push
xchg
mov
sbb
pop
sarb
cmp
loop
jg
scas
or
test
insb
aaa
stos
push
mov
xchg
sbb
xlat
jl
insb
or
not
jecxz
pop
sub
and
hlt
dec
mov
inc
mov
push
push
or
sbb
rolb
cli
test
pop
mov
cld
push
xor
pop
imul
ficomps
testb
jge
pop
add
xlat
xor
popf
lods
inc
mov
cmp
or
sbb
sbb
jo
loope
shl
cmpsb
pop
cmp
xor
je
jbe
adc
inc
movsl
cmp
and
pop
into
push
mov
cmp
xor
imul
push
sbb
out
rolb
mov
or
ret
mov
insl
sbb
push
xchg
or
insb
jo
mov
ja
jne
jle
dec
add
jmp
xchg
xor
popf
push
aas
jmp
cmp
mov
and
pop
push
mov
shll
push
xor
les
imul
addr16
ja
adcb
stos
xchg
sub
jle
sub
xor
das
das
das
das
cmp
dec
aam
imul
lret
and
add
adc
push
pop
jb
push
jl
jo
add
sbb
add
rolb
aaa
rol
sti
pop
lods
inc
movsl
sub
push
xor
push
mov
and
add
aam
sbb
push
sub
lods
ficomps
or
mov
scas
ljmp
add
adc
fildl
sbb
loope
pop
inc
xchg
or
scas
sub
icebp
pop
or
fisttpll
jmp
adc
fsubrl
push
aad
inc
nop
xor
pop
jo
pop
or
mov
jp
or
in
inc
sbb
inc
jno
cwtl
mov
push
mov
jl
lea
arpl
mov
adc
test
adc
add
xlat
push
or
ret
pop
cmp
add
lret
cmp
cmp
jae
cmp
adc
adc
lret
adc
cmp
test
jno
dec
sub
dec
pop
adc
or
adc
sub
xchg
xor
mov
jne
lods
daa
pop
cmp
sub
repnz
lods
adc
jge
pop
punpckldq
movsl
bound
in
out
or
adc
jmp
sub
jae
pop
xor
arpl
not
and
inc
pushf
jge
sbb
andl
or
jnp
and
jne
push
push
aas
push
inc
push
push
xchg
and
cmpsb
mov
cmp
repz
dec
adc
fistpl
add
inc
sub
sbb
pop
mov
inc
loopne
inc
dec
xor
add
adcl
dec
xor
jbe
cwtl
mov
pop
mov
daa
inc
clc
movsb
mov
jle
add
cmp
xor
sarb
and
xor
xor
test
hlt
push
rol
jg
loopne
sbb
jp
add
push
sub
hlt
xchg
push
mov
inc
insb
pop
xlat
sub
push
je
pop
hlt
cmp
or
and
mov
adc
mov
or
sarl
jecxz
stos
jmp
and
cld
sub
subb
cli
sub
pop
and
xor
dec
mov
and
ds
call
inc
rcrb
xor
inc
xor
or
push
lret
add
les
pop
adc
push
shlb
adc
xchg
popa
pushf
test
adc
and
push
sbb
cmp
mov
add
pusha
add
push
ffree
fists
orb
adc
ret
mov
pop
cli
popl
bound
adc
mov
cmp
push
jecxz
mov
ss
dec
imul
test
push
push
cmp
daa
inc
xlat
mov
adc
arpl
jmp
sub
movsb
mov
add
mov
or
push
stos
cltd
push
sbb
and
sarb
push
fmuls
dec
jne
cld
loopne
mov
lods
xor
jo
dec
bound
sub
add
bnd
shll
shlb
or
int3
add
inc
dec
scas
and
in
push
pop
mov
and
je
mov
sbb
testl
pop
mov
sbb
mov
sub
stos
dec
jo
add
push
push
icebp
subb
inc
dec
dec
in
xor
sbb
lahf
sbb
fidivl
daa
and
sbb
xor
clc
stos
shrb
jo
dec
mov
mov
aad
pop
pusha
gs
cmp
ror
lcall
pop
mov
xchg
add
outsl
pop
push
sub
inc
ljmp
adc
inc
lods
int3
adc
pop
add
shlb
pop
nop
and
es
jbe
in
mov
test
mov
test
inc
xchg
inc
adc
data16
push
test
add
jl
mov
loope
sbbb
insb
loope
and
fsubrs
adc
rcrl
xor
les
push
pop
cmp
xorl
sarb
mov
add
or
pushl
outsb
cmp
je
es
insb
adc
je
dec
adc
jg
aas
lea
sub
sar
cmp
jbe
or
add
jp
pop
mov
jmp
shll
add
dec
inc
push
pusha
mov
adc
sub
loopne
je
jecxz
faddl
xchg
add
inc
scas
shr
mov
add
mov
xchg
mov
scas
dec
mov
insb
test
arpl
xor
orl
ja
jo
pop
push
lea
mov
fdivp
cmpsl
ss
push
jmp
sbb
dec
or
movsl
cmp
xchg
and
scas
ret
pop
scas
jnp
in
mov
sahf
push
pop
push
and
lea
and
push
call
testb
push
sub
add
negb
inc
push
xchg
sbb
aam
xchg
push
aas
cmpsb
inc
xchg
or
or
mov
ds
insb
xor
arpl
call
pushf
xchg
xchg
daa
add
es
pop
inc
clc
dec
xchg
add
or
enter
xor
popa
mov
push
inc
stos
cli
cmp
dec
ss
arpl
pop
sbb
dec
add
jne
sub
outsb
sar
lea
jp
cmp
ret
sbb
push
push
popf
sub
aas
cmp
jb
pushl
mov
sbb
xchg
pop
or
pop
jmp
xor
jae
inc
adcb
je
and
sar
add
ret
sti
inc
sahf
sub
mov
in
inc
std
daa
lcall
xchg
fisubs
push
sub
xor
add
shll
fistl
sbb
inc
and
lods
dec
icebp
mov
xchg
cmp
adc
fists
mov
ret
mov
or
cmp
cmp
inc
push
enter
lret
mov
push
cs
pop
jg
jbe
ja
dec
pcmpgtb
pop
pop
pop
in
xor
pop
jbe
pop
or
dec
jle
mov
mov
add
pusha
mov
sbb
push
loopne
rorb
insb
jg
or
loop
daa
or
orl
je
jl
adc
sbb
daa
or
xchg
sub
and
into
xchg
daa
sarb
add
mov
mov
mov
dec
adc
insb
or
adc
mov
sub
sub
jl
dec
or
push
mov
ja
sbb
jmp
adc
jbe
and
and
adc
dec
ds
pop
daa
pop
mov
cld
movl
or
or
les
pop
xorl
and
add
cmp
and
xchg
jnp
push
pusha
test
pop
jg
mov
rorb
rclb
and
in
lods
mov
lock
pop
mov
icebp
mov
inc
cld
lcall
fisubl
add
mov
aas
and
nop
add
xor
dec
add
nop
add
fs
add
nop
and
and
movsb
es
in
add
fmul
add
nop
daa
or
sub
add
sub
jb
add
test
cmp
cs
jmp
push
jb
pop
pop
push
rcrb
in
xor
hlt
add
aas
xor
or
xor
mov
mov
test
sbb
lea
leave
iret
cmpl
cmp
sbb
xchg
cld
or
fbld
movl
mov
or
inc
shr
pop
adc
or
add
adcb
sbb
xchg
xor
mov
mov
fcmovb
cld
clc
repnz
or
or
adc
shlb
call
mov
or
mov
pop
adc
movsb
in
add
add
cmp
outsb
pusha
pushf
cli
int3
test
xor
aaa
mov
ja
ja
roll
inc
loop
iret
and
inc
sti
loopne
adc
sysexit
ja
add
and
pop
or
mov
pop
push
test
or
cli
stos
add
iret
dec
rorl
push
pop
rclb
lea
push
cltd
push
and
jnp
cmp
sbb
sbb
dec
adc
or
pop
adc
pusha
cwtl
and
cwtl
add
and
or
push
lgs
insb
mov
pop
into
mov
stos
fstps
pushf
movaps
fs
or
repz
aaa
jle
sti
add
xchg
frstor
fwait
pushf
xorl
jne
push
inc
mov
cwtl
add
es
inc
orl
in
inc
pop
call
push
add
inc
js
push
jb
es
je
push
jp
mov
stos
and
xor
ret
pop
cmp
test
and
sbb
cmp
inc
movsb
loopne
jne
sbb
xchg
and
dec
rorl
inc
xchg
subl
sub
je
les
inc
cs
xorl
dec
xchg
or
mov
push
cmpb
call
jae
outsb
sbb
orl
scas
cmpl
cmp
lds
jmp
cmp
cmp
cs
test
xchg
mov
lock
in
mov
jno
rolb
lock
mov
push
es
dec
cmp
jg
cmp
or
ja
int
and
dec
cs
or
enter
dec
stos
in
cmp
push
int3
dec
addr16
add
cmp
subl
ja
xor
call
and
loopne
rorl
mov
jno
sbb
push
sub
xor
jo
pop
jmp
cmp
popl
inc
decb
inc
push
push
and
or
push
outsl
sub
out
dec
mov
xchg
jne
mov
scas
cmp
dec
cmp
jmp
sbbl
ret
and
add
test
push
pop
or
mov
rolb
pop
and
add
xor
sub
loopne
int3
dec
in
or
int3
clc
rolb
mov
loopne
adc
movsl
lea
or
jmp
lods
jp
mov
sbb
cld
xchg
stc
mov
mov
shr
sub
sub
cltd
pop
in
in
aas
add
in
push
hlt
cld
fists
push
or
xor
dec
adc
xor
mov
loope
lock
shl
pop
rclb
ds
cld
hlt
cmpsl
adc
adc
jb
lock
adc
inc
adc
cmpsb
jae
loopne
daa
push
aaa
and
cmpsb
xchg
xchg
or
jo
loopne
cmpsl
fldenv
push
lock
pusha
dec
pop
imul
shll
xor
cmpsb
add
jle
sbb
repz
adc
jb
push
in
cli
idiv
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
pusha
mov
mov
rolb
cmp
loop
jge
mov
pop
and
cmp
mov
cmp
je
cmp
je
jne
pop
pusha
int
or
xchg
add
into
aas
iret
pop
imul
jae
cs
pop
jg
das
or
sbb
mov
adc
mov
testl
rorb
dec
mov
or
orb
xchg
mov
or
pop
arpl
daa
in
aam
loope
jl
and
incl
cld
or
testb
fcoms
pushl
sub
adc
pop
adc
add
inc
mov
subb
and
loope
loop
ss
xchg
clc
nop
ret
or
inc
aaa
aam
nop
addb
lock
xchg
mov
pop
icebp
into
mov
mov
or
push
push
repz
adc
ret
mov
mov
fistl
or
rorl
add
mov
xchg
adc
lcall
outsl
dec
cmp
fldl
sbb
pop
mov
sbb
and
dec
mov
movsl
insb
mov
fisttpl
daa
add
test
stos
fisttpl
xchg
adcb
adc
sarl
cmp
pusha
movsl
mov
pop
fneni(8087
pop
ds
pusha
sub
sbb
xchg
xor
fsubrs
push
mov
add
mov
xchg
push
mov
mov
je
xchg
sbb
or
shlb
mov
sub
ficoms
pop
pop
sub
or
mov
enter
inc
or
or
test
mov
les
or
lret
js
rol
out
pop
sbb
push
push
pop
pop
pusha
outsl
test
add
sbb
movsl
mov
mov
stc
aad
dec
int3
cmp
adc
sbb
movsb
adc
or
cltd
sub
xlat
add
scas
sbb
sub
ss
je
adc
lods
adc
jne
push
adc
push
xchg
mov
and
push
je
pop
or
cmp
je
scas
loope
add
outsb
imul
aaa
data16
push
in
pop
push
push
je
sub
loopne
add
push
pop
or
loop
shrb
sar
push
xchg
ret
addb
inc
or
cmpsl
pop
pop
jle
and
lret
jno
cmp
loopne
dec
add
rolb
push
jg
mov
mov
mov
or
inc
or
sbb
add
cli
jne
js
pop
jbe
jmp
push
por
pop
enter
and
add
rclb
sar
in
pop
gs
arpl
jo
pop
sub
dec
ds
jbe
fucomi
jae
cmp
aad
pop
not
aam
fsub
push
mov
ss
mov
pop
mov
mov
bound
jnp
xor
dec
or
add
loop
jg
arpl
add
sub
sahf
ljmp
mov
adcl
dec
movups
mov
xchg
jle
mov
fwait
movb
fdivl
iret
mov
addps
pop
ja
in
xor
inc
imul
sbb
imul
sarb
or
mov
test
je
or
je
shlb
fnstsw
adc
jg
add
push
sbb
pop
aam
xor
jle
rolb
out
aas
cli
add
xchg
dec
inc
mov
add
xor
and
xchg
sahf
outsl
in
nop
xorb
pop
dec
add
inc
adc
out
push
jne
or
adc
in
dec
into
sbb
push
or
push
inc
repnz
mov
and
mov
jge
pop
cltd
mov
adc
and
push
fs
loop
mov
inc
into
popl
lahf
adc
cmp
mov
xor
or
mov
arpl
mov
and
repz
cmp
dec
xchg
rolb
imul
and
xchg
jle
data16
or
lea
imul
orl
jmp
pop
data16
jmp
iret
cmp
xchg
adcl
shrb
fdivrs
inc
jo
dec
or
dec
call
mov
adc
std
stos
jbe
lods
cmp
pop
jle
mov
sub
inc
jle
enter
loopne
mov
nop
sub
inc
ds
sbb
sbb
push
lea
push
les
inc
aam
sti
push
pop
movsb
xchg
aas
xchg
inc
hlt
pop
jns
in
or
in
or
out
out
mov
cmp
hlt
jg
mov
sub
adc
sbb
ret
add
or
aas
add
jmp
pop
push
ret
adc
sahf
lock
insb
mov
inc
nop
adc
push
or
mov
push
add
pop
dec
sbb
sub
lea
xor
pop
mov
or
ret
fs
push
ljmp
test
push
or
es
mov
pop
pop
sub
cs
adc
shrl
ds
add
mov
cwtl
stos
stos
push
xchg
ret
sub
bnd
push
js
loopne
js
pop
in
outsl
pop
push
dec
ljmp
or
add
add
sti
dec
jmp
cmc
push
rol
adc
or
test
pop
test
mov
ja
mov
add
add
cld
push
aam
arpl
jae
sub
sub
sub
fadd
jmp
add
sub
pop
push
cmp
rcr
adcl
addb
mov
roll
add
jne
add
sub
jo
lea
negb
push
or
and
movq
loopne
mov
adc
push
sub
imul
sbb
and
xor
or
cmp
test
test
sbb
push
inc
aaa
test
sbb
jle
mov
push
jp
je
pavgw
xchg
and
loopne
test
dec
incl
adc
push
dec
icebp
mov
dec
push
dec
mov
inc
pushf
pop
jle
adc
push
sbb
pusha
popf
lret
test
sti
aam
jne
test
push
xchg
ret
fsubrs
push
push
pop
je
fldl
rcll
fstpl
dec
in
sub
inc
pop
inc
jne
sahf
lahf
out
adc
adc
jne
push
divb
or
stc
jns
clc
jne
or
jne
or
shrl
scas
leave
rolb
out
and
fstpl
andl
aam
lods
add
add
jle
mov
jae
pop
add
fdivs
outsb
loope
cmp
arpl
shlb
jnp
fstl
jecxz
scas
inc
clc
push
fbld
movsl
movsl
lea
movsl
push
jno
jecxz
out
cld
leave
and
mov
into
inc
cmp
sbb
inc
inc
notb
testb
sbb
xchg
pop
lret
cwtl
loopne
ret
sub
mov
pusha
adc
or
fsubrs
mov
cmp
push
fiadds
inc
in
pusha
loop
or
out
fstpt
fmull
movsl
or
xor
lcall
cwtl
xchg
sbb
pop
xchg
ret
and
andl
ret
int
incb
add
push
jmp
dec
jbe
outsb
je
mull
push
and
jb
aaa
xchg
push
lgdtl
fcmovbe
sbb
cmp
and
sbb
jge
and
scas
pop
push
imul
cmp
andb
orl
cmpb
and
pop
aaa
jbe,pn
push
push
hlt
std
inc
cwtl
jmp
sub
push
dec
dec
mov
popa
bswap
lret
push
push
sub
dec
or
and
daa
fdivl
sub
sub
lea
mov
or
pop
shr
inc
addl
insb
jl
push
mov
jo
fmul
push
or
outsb
and
push
das
adc
sub
push
cmp
mov
xor
xchg
xchg
lods
push
mov
pop
pusha
mov
add
leave
sub
xchg
mov
mov
pushf
pushf
jno
add
mov
add
and
imul
push
pop
ds
sub
les
add
nop
outsl
aaa
add
inc
es
rorb
sbb
inc
es
fmuls
sub
dec
jns
mov
inc
jo
and
push
push
insb
fcoms
pop
mov
lcall
mov
add
pusha
imul
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
push
imul
jmp
pop
inc
sub
mov
or
cmpsl
xor
ret
mov
das
popa
test
push
push
jmp
imul
rorb
mov
out
or
pop
ret
cs
pop
mov
ret
ret
pusha
or
cmpb
cmp
jle
stos
xchg
add
or
les
fimull
scas
aad
bound
add
push
adc
jle
mov
subb
cmp
mov
mov
jmp
add
cs
data16
js
sbb
adc
leave
fldt
sbb
cld
cmp
jl
add
iret
clc
aad
cmpsl
pop
inc
sub
fadds
pop
pop
dec
lret
js
push
call
sub
xor
inc
loopne
add
add
jbe
ud2
sarl
xor
push
jns
push
bound
dec
xchg
or
mov
mov
xchg
call
push
call
sub
lock
dec
add
push
les
test
push
cmpsb
dec
jb
adc
push
xor
jno
test
insb
add
lcall
push
cmp
loopne
xchg
mov
or
add
inc
sub
cmpsl
dec
push
aas
push
and
xor
sbb
pop
mov
cwtl
dec
inc
loopne
or
movlps
xor
and
xor
jne
les
push
cmp
mov
sub
arpl
mov
add
scas
cmpb
or
out
inc
add
lahf
call
push
and
add
or
sti
mov
add
sub
mov
jle
dec
push
push
fcomps
call
dec
rorb
adc
pop
mov
and
mov
cmp
push
jmp
jne
cmp
mov
lock
cld
jno
adc
pop
push
clc
lock
and
inc
shrb
enter
inc
lods
or
inc
xor
inc
pusha
jno
sti
daa
dec
jnp
xchg
jae
lea
push
and
iret
jecxz
sbb
mov
sub
loope
gs
dec
pop
xor
ss
sub
sbb
sub
or
inc
lods
bt
rol
push
mov
mov
adc
mov
lea
sub
in
int
add
rorb
call
cld
fadds
pop
lea
insl
iret
pop
call
mov
rorb
test
clc
enter
nop
cmp
xchg
inc
nop
xchg
sbbb
and
pop
pushf
mov
push
loop
orb
popa
jmp
dec
aaa
adc
dec
adc
and
or
loope
or
ljmp
pop
push
jle
lds
or
and
outsb
loope
aam
push
cmpsl
xchg
jle
jne
loopne
add
stc
mov
xor
xchg
imul
ds
int3
push
or
pop
cmpsl
mov
mov
icebp
orl
mov
inc
jae
mov
sbb
lahf
pop
sub
popf
lahf
inc
movsb
push
add
push
xchg
cmp
ficompl
xchg
add
add
adc
xchg
jge
adc
pusha
imul
movsl
cmc
lahf
jae
xor
xchg
lahf
sub
inc
add
popf
push
pop
insb
mov
or
aad
pop
push
mov
andb
lcall
or
stos
pop
push
test
dec
cmpsl
scas
push
into
fcmovnb
leave
mov
mov
cmpl
outsl
jne
out
add
xchg
int
jae
les
cmpb
rcrb
bound
adc
pop
mov
stos
cmp
pusha
add
lods
adc
inc
mov
mov
insl
xchg
loope
dec
mov
sbb
dec
clc
push
out
sbb
pop
sbb
pop
clc
mov
mov
mov
iret
add
aaa
andl
cs
stos
out
xchg
sub
lods
xor
mov
mov
sbb
icebp
adc
add
aam
arpl
push
shrl
sub
neg
bound
dec
dec
addr16
js
sbb
jo
addb
and
mov
xlat
inc
and
pop
mov
cmp
or
movsl
inc
stc
add
divb
cmc
cmp
into
ret
jl
jmp
aaa
jmp
xor
pop
ds
mov
sub
sub
mov
jecxz
mov
ja
popf
mov
mov
adc
aas
push
fistpll
shlb
push
rcrb
lods
jno
aaa
mov
mov
frstor
push
aaa
mov
or
push
mov
lock
testb
aas
cmpsb
arpl
ret
dec
push
push
add
add
jge
mov
adcb
jno
xor
mov
adc
iret
push
inc
fldl
mov
cmp
aam
inc
insb
or
outsb
xor
movb
xor
sbb
fisubs
sub
sbb
les
adc
or
cmpsl
addr16
loope
movsl
lock
ss
dec
out
dec
aam
xor
lds
adc
inc
lds
mov
test
test
xchg
pop
repz
adc
lahf
jecxz
cmp
shrl
jge
mov
jmp
addl
fwait
xchg
jge
hlt
mov
or
test
cs
and
add
mov
mov
jmp
jge
test
daa
push
test
adcb
addr16
ds
add
fsubl
cmp
jne
popf
clc
jno
push
es
fimull
and
push
hlt
inc
call
mov
nop
aas
ret
fcompl
out
jne
inc
inc
leave
pop
or
push
roll
mov
adc
out
pop
cmpsb
push
add
lcall
cmc
movsb
add
jp
fnstenv
dec
js
hlt
jnp
dec
jo
lods
or
iret
mov
add
fdivs
cmp
dec
es
sbb
jbe
cmpsl
pop
jne
loope
scas
lea
stos
inc
inc
fcompl
repz
and
push
push
lods
jae
jmp
push
cmp
jne
add
pop
pop
jl
popf
lock
push
sub
orl
decl
ud0
hlt
mov
jecxz
jo
cmovle
addb
add
push
pop
inc
pop
andl
popa
movsb
scas
add
outsb
push
mov
inc
sub
sub
dec
add
push
adc
outsl
push
movsb
add
test
add
insl
pop
outsb
cmp
mov
or
mov
adc
shl
jns
rolb
pop
sub
push
or
pusha
adc
push
mov
xor
pop
sbb
insl
xorb
dec
mov
andb
enter
or
or
xor
inc
movsb
dec
pop
sbb
mov
sub
push
adc
and
sub
jae
jae
imul
inc
dec
dec
push
es
popf
pop
hlt
mov
and
fisttps
jae
sub
xorb
movsl
das
jmp
xchg
outsl
shrl
jge
adc
mov
nop
and
dec
mov
pop
or
jne
dec
push
rorl
pusha
mov
push
lods
mov
cmp
adc
pop
and
orb
and
mov
sub
ja
pop
shlb
sub
les
in
pop
subl
jl
jne
je
cmpsl
add
nop
arpl
test
leave
ja
push
xor
dec
sub
push
daa
and
pop
rcrb
adc
icebp
inc
pop
subb
jnp
and
jns
sub
fwait
xor
sti
push
sub
fisubrl
into
sub
cmp
and
and
push
sbb
xor
or
bound
pushl
mov
cmp
push
iret
or
inc
minps
rcll
push
push
sbb
insb
pop
mov
test
add
mov
lods
test
sbb
pop
dec
add
xchg
fisubs
rol
lcall
xchg
and
add
or
sbb
out
test
je
adc
pop
push
test
mov
and
add
jle
in
mov
xor
call
add
cmp
das
mov
cs
mov
xchg
jg
les
inc
aas
jbe
xor
pop
nop
and
repnz
mov
cmp
sbb
stos
cmp
das
mov
insb
mov
ja
cmp
loopne
ficompl
add
cmp
xor
cs
mov
mov
and
jne
into
iret
jnp
cs
inc
call
or
add
insl
mov
data16
test
test
aam
je
and
add
ljmp
dec
mov
outsb
in
fisubrl
xor
xchg
jnp
daa
movsl
cs
mov
lahf
adc
pop
push
in
bndstx
jne
push
add
mov
adcb
outsl
fs
jbe
and
mov
sbb
fstps
sbb
pushf
xor
inc
adc
push
and
and
lret
nop
mov
lret
idiv
sbb
sub
cli
mov
inc
pop
sub
cmp
hlt
ss
sbb
inc
ret
and
xor
or
mov
sbb
sbb
add
cmp
cmp
jne
inc
jb
push
cld
ja
icebp
mov
repz
jbe
pop
call
out
mov
test
ds
xchg
loopne
outsb
test
mov
inc
mov
lock
xchg
int
je,pt
popa
xor
es
jbe
push
lcall
mov
mov
stc
mov
jo
dec
inc
jb
faddp
mov
ss
push
and
push
insb
push
jb
icebp
loope
push
push
dec
mov
jle
das
mov
cltd
dec
xchg
shlb
push
fwait
or
xor
jbe,pt
mov
push
cli
dec
adc
pop
shll
das
outsb
arpl
add
or
xor
movb
test
orb
incl
div
inc
cmp
jae
or
mov
shrl
and
lods
test
iret
push
pop
in
ret
sbb
enter
shrb
jge
xor
jns
mov
ret
inc
popa
loop
rcrl
pushf
pop
sbb
cmp
xor
inc
dec
add
jmp
mov
adc
cmpsb
and
call
mov
imulb
nop
dec
inc
xor
push
xor
imul
lods
xor
push
cli
pop
xor
mov
je
ror
dec
cli
add
cmp
pop
cmp
inc
sub
and
stos
dec
mov
mov
inc
mov
and
adcb
fildl
or
ja
inc
fdivs
cmp
mov
or
sub
add
jmp
mov
mov
dec
add
cmp
xchg
adc
jmp
cli
lcall
xchg
data16
fiaddl
sub
push
dec
sbb
add
sub
jmp
imul
movsbl
add
inc
mov
mov
mov
outsl
shlb
push
cmp
je
cmp
or
js
sbb
add
and
pop
and
adc
mov
shll
jmp
or
adc
mov
mov
push
test
adc
adc
mov
mov
push
pop
dec
imul
sbb
mov
jmp
push
or
cmp
jge
push
push
enter
movsl
pop
or
xor
icebp
mov
cmp
cmp
je
dec
lahf
dec
jl
testl
and
push
icebp
lret
xchg
inc
sbb
fsubrl
dec
mov
je
loope
gs
jl
lcall
cmp
fwait
add
and
ja
lcall
dec
shrl
dec
pop
pop
add
push
lods
clc
je
std
inc
dec
jns
ja
adc
dec
popl
jmp
dec
fcoms
xor
pusha
inc
jecxz
cmp
mov
adc
adc
and
incl
mov
ss
or
dec
insb
in
mov
sbb
inc
sbb
jg
mov
pop
inc
push
rep
adc
in
loopne
push
fildl
fnstenv
mov
fsubr
add
dec
or
sbb
adc
mov
bound
icebp
or
popa
push
fstpl
fldl
adc
inc
je
and
push
fcoms
dec
add
adc
shl
shll
adc
dec
mov
movq
imull
pusha
pushf
std
inc
sbb
clc
and
add
fsubrl
push
andb
mov
hlt
mov
adc
add
in
and
pop
fsub
pop
fsubrp
cmp
pop
adc
jge
add
daa
pop
pop
jns
push
xorl
fwait
jg
sahf
add
add
and
xchg
xchg
add
or
xor
js
jae
mov
lahf
cmpsl
ljmp
pop
dec
je
add
jo
sub
adc
pop
jp
xor
jmp
sbb
adc
xor
add
sub
jmp
adc
or
clc
xor
loopne
repz
shlb
jmp
test
int3
mov
mov
mov
push
sub
imul
xchg
cld
into
xor
loopne
das
sub
mov
je
mov
xor
bound
imul
mull
mov
je
and
rorb
sbb
xor
adc
jnp
cld
mov
adc
dec
leave
into
popa
mov
or
cmp
mov
and
push
jns
push
adc
adc
jns
xchg
mov
mov
outsb
xchg
xchg
pop
adc
enter
lret
push
mov
leave
pop
add
adc
leave
xorl
add
subl
or
arpl
dec
roll
xor
mov
ss
pop
push
jecxz
pusha
fmuls
out
pop
test
or
adc
add
and
sub
pusha
rclb
adc
jl
enter
mov
push
push
mov
mov
xchg
and
imul
push
cltd
fs
and
pop
sub
jo
aas
or
sub
xchg
mov
and
negb
xchg
sbb
and
movsb
fwait
fs
fmul
stc
pusha
or
punpckhbw
test
std
cld
cmpl
pop
adc
sub
sbb
sbb
aaa
dec
and
jne
and
outsb
xchg
iret
jmp
pop
mov
add
ror
or
mov
adc
fildl
push
nop
adc
or
push
xor
repz
data16
cltd
repz
rep
mov
jns
out
adc
dec
pop
push
out
sahf
jnp
popf
scas
mov
jns
repnz
adc
repz
repz
pop
imul
pushf
lods
mov
dec
add
icebp
push
dec
cmp
loopne
add
xor
or
and
addr16
rolb
and
push
xorl
sarb
inc
jp
test
das
fcomip
mov
jle
in
test
scas
mov
or
or
es
adc
push
pop
stos
dec
lret
aaa
dec
and
sbb
pusha
add
out
mov
cmpsb
add
add
jo
pop
push
xchg
pop
push
push
data16
add
xor
pop
sbb
mov
rorb
insb
icebp
sub
and
fisttpl
sbb
and
sub
mov
mov
xchg
adc
push
push
testb
push
dec
es
inc
movsb
mov
mov
or
jo
and
sbb
lods
cmp
push
rcll
dec
adc
inc
imul
daa
push
mov
dec
sbb
xchg
or
iret
ror
shl
stos
adc
pop
leave
lret
push
ret
rorb
jne
mov
arpl
push
je
add
or
lods
xor
pop
push
aam
xor
adc
and
add
inc
push
push
scas
ret
push
in
inc
xchg
in
xor
cli
mov
adc
cmpb
hlt
mov
xchg
jle
daa
rolb
jecxz
dec
iret
movsb
das
mov
xor
mov
inc
insl
pop
sub
pop
jo
xor
leave
add
imul
jae
in
sbb
inc
push
popa
add
call
call
in
pop
add
push
push
orl
xchg
shl
or
add
sbb
mov
outsb
cmpsb
hlt
leave
push
fs
cmpsb
add
add
xchg
cld
sub
mov
or
lock
xor
adc
out
inc
cltd
add
nop
mov
pop
mov
rcrb
inc
add
outsl
add
cmpsb
jg
shl
xchg
add
add
add
inc
ds
in
ret
add
cld
or
aaa
std
sub
mov
and
cmp
adc
scas
or
or
inc
sbb
stos
mov
cltd
xor
or
test
sbb
adc
mov
ds
lods
adc
sbb
je
or
cmc
dec
push
push
cmp
push
movsl
jb
fwait
mov
movl
xchg
jl
dec
cmpsb
xor
lret
in
add
xor
add
loope
add
add
nop
sbb
push
sub
mov
into
hlt
and
xchg
out
mov
cmp
inc
lds
testb
outsl
mov
test
in
or
dec
cs
push
push
pop
shrb
aaa
dec
in
packuswb
push
lock
and
dec
stos
and
jge
enter
mov
in
shll
iret
xor
sub
push
jns
push
in
pop
sub
mov
or
and
adc
addr16
test
adc
test
lds
in
roll
pop
stos
or
inc
xlat
push
sub
adc
push
xor
in
loop
loopne
or
outsb
adc
lcall
sub
fiaddl
or
ret
mov
shll
lods
jnp
movsb
loopne
xor
rcll
loope
xchg
jg
cmp
test
and
sbb
dec
mov
cmpl
push
add
and
add
push
mov
in
pop
cmp
or
push
je
inc
jbe
rorb
sbb
scas
push
sbb
cmp
enter
mov
xchg
stos
and
mov
jae
xor
cmc
or
or
roll
dec
enter
add
or
adc
pop
jmp
cmp
sbb
or
in
scas
jg
dec
push
nop
add
cwtl
push
scas
jo
xor
push
add
adc
enter
fwait
rorl
push
xor
xor
mov
test
add
add
jl
push
sbb
push
ret
push
addl
loop
shlb
inc
sahf
and
add
daa
add
add
push
cmp
add
xchg
adcb
sub
cs
aad
and
mov
or
adc
cmpl
inc
or
cmp
roll
or
jecxz
sbb
pop
inc
mov
or
mov
test
stos
aas
mov
xor
popa
andb
adc
xor
loopne
add
add
shlb
push
mov
push
daa
lret
out
xor
add
mov
push
push
dec
and
jl
mov
xchg
cmp
pusha
pop
push
mov
cmp
mov
dec
fiaddl
push
and
nop
mov
sub
push
xchg
bound
mov
inc
pop
sbb
repnz
add
push
jno
push
sub
cmc
cmpb
je
jnp
andb
movsl
in
cmp
and
or
adc
add
clc
add
dec
xchg
shrl
addr16
mov
in
adc
cmp
dec
mov
lret
loope
lods
hlt
adc
iret
inc
add
nop
dec
js
rcl
mov
test
test
add
bound
push
arpl
pop
jno
repnz
lcall
rorl
cmp
scas
imul
popa
mov
sub
test
ss
movsl
cltd
or
loop
loope
mov
pop
inc
sub
jae
fstpl
les
push
pusha
sbb
andl
or
js
insl
pusha
mov
in
or
adc
pop
mov
adc
add
insl
and
adc
push
jl
push
xchg
movsb
ficoms
cmpsb
shrb
pop
ret
loope
mov
sbb
dec
sub
or
fcomi
xchg
or
inc
loope
mov
lea
sbb
jmp
adc
pop
mov
push
pop
inc
ret
add
test
fimull
adc
test
push
in
sub
inc
lahf
xor
in
add
test
lock
mov
inc
rorb
pop
add
mov
mov
shr
cmp
enter
xchg
sbb
jl
stos
rorl
add
nop
push
aad
fiaddl
loopne
mov
jp
mov
jmp
add
fs
cwtl
mov
sub
push
sbb
addl
cmp
stos
cs
jecxz
cmp
push
mov
or
aam
add
inc
mov
push
stos
loop
ret
cmp
sbb
call
lds
lret
pop
call
aam
shll
pop
xchg
mov
sub
xor
push
adc
push
cwtl
jge
push
stc
mov
imul
jle
in
aas
outsb
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
or
xor
fidivrl
adc
jle
xor
jle
cmp
shll
pop
mov
push
add
inc
jmp
movb
mov
inc
call
cltd
pop
idiv
or
mov
shrl
xor
xor
bound
xchg
loop
sbb
push
enter
cmpsl
push
test
or
mov
or
int3
movzwl
lds
shr
add
or
dec
or
dec
dec
in
xor
lock
cmpsl
sarb
xchg
in
xorb
and
pop
pop
fmul
cmp
mov
imul
cmp
daa
cmp
bound
bnd
push
lock
push
cmp
push
adc
loop
lcall
mov
shll
in
outsl
dec
mov
xchg
lret
rolb
pop
lea
bound
adc
or
inc
in
dec
or
add
pusha
push
dec
ja
pop
add
loope
je
movsb
fstl
test
jl
or
or
jne
shrb
and
xor
pop
and
mov
jmp
sub
sub
call
aad
jmp
adc
jmp
dec
jnp
loop
rcll
push
lods
jne
test
pop
shlb
mov
push
cmp
inc
mov
in
push
jle
mov
pop
inc
push
push
pop
xchg
adc
inc
in
pop
push
or
daa
dec
ret
loop
mov
jo
loop
mov
jbe
mov
pop
jns
nop
data16
cmp
enter
loopne
sbb
dec
xor
sub
xchg
xchg
xchg
sbb
push
lret
add
call
xchg
xchg
lret
inc
xor
rol
sahf
js
sbb
mov
or
and
adc
jns
repnz
xor
nop
push
or
repz
mov
cwtl
and
mov
push
sub
aam
mov
inc
pusha
shr
mov
pushf
rorb
adc
lods
dec
inc
cs
pop
lcall
pop
int
mov
je
push
sbb
jecxz
imul
lock
daa
jns
dec
lds
fwait
add
insl
sub
sub
inc
mov
in
push
adc
fisubs
push
leave
and
pusha
cwtl
dec
pushf
dec
jb
nop
pop
mov
xchg
sbbb
js
fs
imul
shld
test
dec
je
inc
cltd
inc
cwtl
xor
mov
int
fcoms
lret
aaa
jns
ja
cwtl
test
push
movsl
fwait
in
sub
lret
sbb
pop
cmpsl
sub
xor
notl
xor
aaa
es
xchg
jp,pn
iret
aaa
cs
jmp
and
pop
add
fadds
bound
xor
push
rclb
daa
bound
fsts
divb
jmp
mov
mov
jecxz
cwtl
jno
pop
movsb
sbb
fmull
xor
scas
fildl
data16
pop
xchg
push
mov
in
fbstp
test
xor
stos
call
sbb
call
jnp
imul
ds
pop
or
test
mov
jl
cmc
push
push
xlat
jb
push
enter
add
push
add
pop
sub
mov
sahf
add
inc
repz
add
movsl
mov
in
xchg
xchg
lret
stos
or
cmp
add
sbb
sub
les
pusha
cmp
sbb
mov
loopne
stc
add
mov
mov
rol
mov
shlb
xlat
aam
cltd
jle
repz
fldcw
xor
mov
adc
lds
and
mov
push
xchg
inc
or
mov
pop
testb
lahf
push
push
sbb
xor
stc
pop
xor
push
or
std
mov
movl
repz
adc
adc
or
pop
lea
sub
xchg
and
aad
ficomps
add
fstl
mov
pop
cmc
ss
lea
fsubrs
sub
lock
cmp
dec
sub
push
xor
inc
push
and
and
inc
int
lret
js
sub
dec
and
sbb
in
mov
pop
jmp
ret
and
nop
mov
das
hlt
dec
xorl
xor
mov
xor
test
inc
jecxz
dec
and
mov
mov
inc
inc
push
pop
pusha
fwait
sbb
cs
out
pop
fisubrs
push
xchg
or
mov
or
pop
dec
fwait
sub
std
sub
mov
dec
mov
jo
in
adc
and
fiaddl
fmull
psrld
sbb
movsl
xchg
sub
or
adc
mov
inc
jb
stos
loope
pop
lcall
jae
add
mov
inc
jg
add
jne
jge
and
or
hlt
and
ja
fcomps
dec
push
or
sub
or
aad
inc
push
push
sbb
ds
sbb
push
push
lds
and
add
sub
cs
outsl
shlb
jp
aam
repnz
scas
cli
inc
jb
push
xchg
int3
cmp
aam
shr
in
xor
push
xor
popf
movsl
add
or
scas
enter
loopne
pop
jns
pop
incl
jl
sub
jmp
sub
or
popa
adc
add
or
xchg
cs
adc
or
jmp
es
or
insb
pop
andb
in
je
pop
or
inc
loopne
mov
cmp
or
sbbb
push
icebp
pop
sbb
add
enter
add
cvtpi2ps
mov
fidivl
cmp
loopne
xor
cmpsb
rcrb
sbb
jl
cli
pop
imul
out
es
add
rolb
xor
push
pushf
sahf
imul
mov
mov
repz
cltd
pop
jmp
inc
iret
push
or
or
lcall
cmc
ret
rcll
jmp
rcrb
mov
shll
or
adc
test
mov
add
adc
push
cwtl
push
fcoms
mov
jmp
cs
aaa
sub
cmp
xchg
push
dec
data16
notb
repnz
and
clc
into
stos
cwtl
cmpsl
add
adc
pushl
mov
loopne
mov
sbb
int3
push
sbb
sbb
or
dec
inc
fwait
push
pop
add
mov
adc
pop
and
or
fcmovne
cmp
add
leave
lods
int
add
and
xor
xchg
and
pop
sub
shll
pop
mov
dec
das
xorb
popa
push
dec
in
shr
cmp
inc
popf
aam
xor
les
mov
inc
cmp
adc
push
out
nop
add
jmp
ds
adc
je
and
lahf
fstpl
push
or
xchg
dec
sub
mov
add
add
xor
ja
xchg
dec
pop
lock
xor
jbe
push
in
shlb
daa
push
jne
ja
add
mov
pop
shlb
pop
pop
in
int
lret
mov
adc
cmp
rcrb
in
cmp
pop
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
xchg
pop
je
pop
or
or
jae
cmp
push
inc
roll
or
jo
cmp
test
mov
xchg
sub
add
pop
xchg
add
cwtl
aam
loopne
dec
std
ret
rolb
loopne
aaa
and
adc
lret
add
ds
and
jbe
cld
aas
je
mov
pop
data16
cmp
lods
ret
xchg
adcb
and
push
mov
imul
xor
cmp
nop
or
pop
in
pusha
dec
ret
gs
sub
cltd
lods
add
and
test
popf
xchg
add
pushf
push
adc
imul
rcl
lcall
cld
add
sub
out
dec
test
and
xchg
jne
fldl
out
xchg
fs
mov
or
fstpl
pushf
add
push
ds
out
call
les
add
addr16
or
pop
subb
int3
sbb
inc
cld
enter
pop
pop
and
mov
imul
rcrl
ss
sbb
push
outsb
mov
outsb
in
out
lock
cltd
or
cwtl
or
test
aaa
push
sub
rolb
fwait
cmp
adc
adc
push
mov
add
or
lds
jnp
or
xchg
sub
pop
adc
sub
mov
in
js
call
mov
cld
cmp
scas
push
cltd
jne
push
xchg
popa
mov
push
add
popf
dec
jno
and
xchg
fcoms
mov
dec
in
test
jbe
insb
lods
and
jp
jmp
and
lret
sbbb
xor
mov
add
mov
mov
lods
in
ret
sub
adc
add
push
inc
push
dec
jae
int3
adc
mov
push
aam
push
mov
cmpb
das
sub
mov
inc
sub
insb
or
loop
daa
push
loope
mov
mov
push
mov
push
dec
mov
xor
mov
sub
dec
int
inc
mov
inc
popa
es
sahf
push
fwait
dec
lods
fsubrl
int3
cmp
xchg
add
cmpsl
sbb
or
aaa
pop
and
addr16
dec
push
mov
js
shlb
add
dec
bound
pusha
xor
sbb
jp
mov
sbb
sbb
ljmp
push
push
mov
addb
mov
add
add
imul
jne
jge
xor
add
push
or
jb
or
mov
pop
outsl
xor
movsb
lock
std
subb
and
xchg
pop
dec
jge
out
adc
orb
incb
push
in
dec
ds
adc
stos
push
dec
dec
ljmp
push
push
pop
jb
xchg
push
inc
jo
jne
cmpsb
fdivrl
inc
cmp
jae
mov
push
pop
mov
testb
sub
push
lea
adc
xor
mov
pop
pushl
lea
in
add
cli
push
fmull
sbbb
mov
pop
pop
push
daa
sub
push
pop
xchg
test
pop
lahf
sbb
dec
or
cmp
or
inc
dec
jae
and
popf
movsl
push
and
dec
push
inc
add
push
mov
dec
pushf
xor
pop
cmp
aad
or
ret
out
lahf
push
sbb
mov
jge
inc
push
outsl
add
pushf
push
add
mov
out
inc
idiv
pop
pop
push
push
xchg
mov
sub
pop
cmpsl
negl
fwait
sbb
xchg
arpl
mov
mov
pop
mov
int
add
inc
rclb
xor
test
xlat
sub
sub
sub
add
hlt
xor
xlat
push
xchg
or
shr
ficompl
sarl
sub
cwtl
and
arpl
dec
jo
dec
out
and
cmp
xchg
in
rclb
or
mov
test
jne
jne
mov
add
dec
add
inc
push
cmp
mov
pop
or
inc
cmp
sub
dec
or
shll
xor
and
shll
dec
aad
fisubl
push
cmpb
sbb
lea
lahf
adc
jne
push
xor
pop
or
jo
mov
pop
cmp
mov
xor
sub
add
arpl
je
nop
sbb
push
mov
in
int
int3
inc
inc
push
cltd
inc
dec
push
pop
add
sub
in
cmpsb
fimull
mov
dec
hlt
imul
imul
addb
inc
add
adc
es
add
pop
cmp
addl
out
xor
push
lock
push
clc
xlat
orl
fs
mov
lcall
ja
adc
movsb
lret
mov
or
cmp
enter
cmpsl
ret
add
add
loop
mov
and
add
imul
add
scas
adc
mov
iret
push
push
pusha
loope
lock
mov
shrb
and
fbstp
mov
or
add
xchg
mov
inc
pop
pop
sbb
addr16
pop
or
inc
mov
adc
dec
vmovss
dec
jge
dec
sub
sbb
xor
push
iret
or
pop
sbb
lea
faddl
or
pop
lret
push
mov
sbb
dec
adc
and
sbb
out
into
and
ja
imul
frstor
cmovs
inc
jmp
mov
mov
pop
push
sbb
pop
aad
cmp
rolb
xor
xchg
andb
sbb
adc
pushf
mov
xor
and
cmp
sbb
mov
testl
adc
cmc
cmp
fisubl
xchg
adc
out
jecxz
adc
or
xchg
add
sub
jo
gs
arpl
divl
jl
dec
sbb
shlb
dec
pop
add
iret
loope
add
and
in
leave
gs
or
sbb
dec
leave
shll
ret
fnstsw
aad
in
jmp
add
loopne
xchg
add
mov
fstps
pop
nop
into
push
fs
adc
add
adc
pushf
cmp
mov
cmp
adc
outsb
xor
inc
pop
mov
shl
dec
inc
sub
cmc
imul
or
or
mov
and
lods
cmp
jb
test
and
and
sub
ja
mov
xchg
test
add
jge
sub
cmp
xorl
xorb
leave
or
rcl
es
push
add
stos
mov
jp
daa
dec
jb
call
or
jo
cmp
pusha
xchg
or
lock
mov
push
sbb
add
xor
movsl
and
sub
lret
les
inc
add
mov
out
sub
shll
or
dec
mov
add
rcll
push
or
jns
dec
es
fptan
aam
or
jmp
lds
dec
lods
cmp
xorl
cs
cmp
stos
push
xchg
test
lret
ret
or
mov
es
xor
fwait
daa
aam
or
push
mov
sbb
cmp
adc
mov
stos
in
ffree
aaa
mov
cmp
nop
arpl
mov
stos
repz
in
ret
add
xchg
je
push
or
sbbl
das
sbb
cmc
sub
mov
add
dec
fisubrs
inc
pop
mov
loopne
stos
add
jnp
pusha
xchg
xchg
lar
sbb
adc
and
test
mov
jge
add
repnz
dec
les
nop
pop
add
and
in
add
add
cmpb
push
pop
mov
sbb
push
xor
hlt
and
lods
push
jp
movsl
and
pxor
rclb
movsl
dec
sbb
jmp
add
and
jmp
xchg
mov
stos
rcl
or
sub
insl
cmp
or
push
xor
dec
aad
sbb
or
push
adc
xor
es
add
push
orl
push
subb
adc
dec
pop
cld
rorb
push
adc
fs
lock
xchg
sub
dec
js
dec
xor
add
hlt
movsl
pushf
push
xchg
xor
add
push
jne
cmp
xor
or
neg
dec
lods
cld
jg
gs
cmpsl
add
xchg
subb
leave
out
mov
mov
or
cld
decl
sub
addb
das
and
fnsave
movsl
ja
mov
or
dec
orb
fs
and
insb
push
test
movsb
sbb
mov
mov
daa
xlat
mov
mov
add
xor
sbb
sub
popa
push
sbb
fstp
divb
jbe
test
inc
cmp
or
fstpl
jmp
mov
mov
push
movsb
rol
out
out
popa
jp
or
jo
dec
push
jge
pop
mov
scas
cli
orl
and
jmp
cmp
or
push
inc
cmp
push
pop
push
vmaxss
xor
push
inc
lock
xchg
ja
or
cld
cmp
je
shufps
adc
mov
addr16
adc
lea
mov
into
mov
adc
pusha
fcoml
clc
dec
pop
psubw
ja
sbbl
sbb
push
lcall
dec
jb
mov
cld
shl
fs
loope
cmp
stos
rep
and
sarb
pop
or
adc
xor
lcall
enter
insl
or
in
cmp
aaa
jl
icebp
jb
jmp
adcb
mov
inc
or
ret
dec
jl
jne
mov
pushf
add
adc
jecxz
loopne
mov
into
add
jb
loopne
push
jns
jo
xor
mov
or
pop
insl
push
add
xor
jmp
pusha
lods
push
dec
add
pop
pop
sbb
pushf
add
cmp
push
cmpsl
mov
add
jo
and
movsb
movsl
push
addb
dec
insl
iret
push
enter
push
das
dec
test
fiaddl
jns
xchg
insb
jae
push
cmp
dec
sub
andl
lods
or
sub
add
add
or
inc
in
repz
fmuls
mov
pusha
xor
dec
addr16
adc
outsb
adc
push
or
jb
cs
and
in
inc
test
mov
inc
sub
lock
push
xchg
jmp
add
pop
xchg
in
jl
cmp
inc
cmp
inc
add
call
cmp
lcall
imul
or
xor
sub
add
dec
xchg
jmp
or
add
scas
add
test
jnp
push
hlt
inc
pop
mov
sbb
mov
or
ss
push
daa
pushf
pop
push
mov
std
or
push
or
xchg
sub
dec
sarb
fstl
xor
test
push
push
mov
lods
push
jns
les
popf
cmp
pop
mov
xchg
xlat
ret
faddl
lea
push
jo
iret
push
mov
mov
sub
sub
add
pop
sarb
mov
sub
jb
inc
lea
test
pop
out
sbb
cmpsb
xor
xchg
stos
test
dec
jae
or
mov
les
popa
and
push
arpl
rclb
pop
xchg
add
mov
scas
cmpl
pushl
inc
sbb
frstor
sbb
xchg
adc
popf
inc
fiaddl
xor
mov
push
inc
cld
dec
push
push
xor
and
dec
lea
add
cmpsl
jl
add
and
fsubs
lea
mov
or
cmp
iret
sbb
lock
add
inc
jmp
pushl
adc
pop
mov
stc
pop
dec
pop
sbb
add
and
xor
inc
lods
push
jle
aam
imul
adc
push
dec
in
or
and
test
xchg
aam
fadds
push
xchg
shrb
clc
movsl
lock
push
adc
mov
dec
adc
je
fwait
rorl
rol
sbb
dec
pushf
adc
push
inc
into
push
insb
xorb
aas
and
inc
push
gs
lds
xchg
out
in
cmp
arpl
fdivr
mov
pop
inc
imul
pushl
or
popf
subl
add
inc
or
inc
scas
lods
mov
add
call
push
or
leave
ljmp
lods
call
inc
mov
sub
or
and
push
insl
dec
adc
and
push
xchg
jp
adc
mov
fdivl
push
xor
cmc
pop
sub
out
movsb
sbb
jo
mov
add
mov
js
push
jp
sbb
sub
mov
push
adc
jmp
aad
adc
sub
add
inc
pushl
ljmp
sub
mov
and
rcll
pushf
push
push
xchg
fdivs
inc
into
or
sbb
jl
cmc
push
push
xchg
dec
in
lret
or
pop
jge
ret
mov
pop
xor
jbe
push
cs
sarb
xchg
sbb
shlb
or
inc
std
data16
es
add
jecxz
jns
push
xorb
xor
mov
add
add
dec
leave
inc
push
je
jnp
enter
adc
xor
adc
push
or
test
mov
inc
and
imul
in
mov
and
and
adc
dec
jmp
lds
jbe
hlt
jmp
mov
dec
imul
inc
sub
xor
cmp
cmp
movzbl
push
or
push
sub
ljmp
mov
out
fwait
mov
lret
fcompl
push
pavgw
lret
fildll
sub
xor
out
pop
add
nop
pop
aaa
cltd
shrb
test
pop
cmc
cwtl
push
shrb
ds
movsb
pop
and
pop
js
test
mov
rclb
cmp
adc
sub
sbb
jge
nop
pop
fwait
sub
cmc
adc
outsl
movl
fadds
pop
rorb
aam
mov
js
inc
in
xchg
pop
mov
jp
loopne
lea
sub
or
sub
xor
or
dec
shrb
pop
ss
or
cmpb
dec
inc
sbb
loop
imul
or
clc
sub
push
and
lds
and
jl
cwtl
adc
arpl
or
xlat
mov
rolb
lret
inc
shlb
and
pop
push
push
or
dec
leave
jo
pop
loopne
cmc
iret
lret
push
clc
repnz
and
pop
imul
or
cmp
inc
add
nop
mov
adc
mov
add
enter
mov
mov
rcr
or
push
in
adc
das
dec
testl
inc
or
mov
mov
cmp
cmpsb
jecxz
cld
rorl
dec
hlt
jne
mov
push
popa
sbb
dec
and
lock
in
jne
xor
pop
loopne
pop
cmp
pop
adc
aaa
push
adc
dec
or
divb
push
mov
sub
sbb
push
sub
inc
xchg
test
rorl
mov
jo
imul
test
loope
test
test
push
xchg
adc
test
mov
movsl
mov
sub
sbb
adc
jno
sub
cwtl
ljmp
in
push
ror
rep
out
imul
lds
fmuls
mov
push
sbb
mov
lret
dec
movb
sub
test
cltd
out
fidivrs
lods
cmpsl
push
adc
cmc
imul
ljmp
or
push
mov
jge
cmpsl
cmp
insl
ret
shlb
addr16
xor
bound
cmpsl
andl
cmp
pop
xorl
je
outsl
or
mov
les
outsl
call
jne
adc
push
andb
jmp
adc
and
pop
mov
and
mov
mov
test
les
pop
ud1
aaa
or
pop
add
movsb
jmp
inc
add
jnp
mov
dec
mov
xor
dec
sti
sbb
push
sbb
addr16
jo
int
test
pop
adc
pop
jbe
mov
bound
push
xchg
push
pop
xchg
add
sbb
jl
add
mov
mov
in
pushf
mov
xor
add
in
scas
add
push
jno
neg
pop
sbb
pop
inc
inc
dec
and
inc
add
pop
sub
push
adc
cld
mov
mov
int3
mov
insb
pop
pushl
mov
mov
rcl
adc
inc
xchg
rcll
dec
sbb
std
ljmp
add
insl
out
sbb
lret
sbb
sbb
xchg
mov
push
sub
loopne
mov
push
push
bound
mov
or
pop
add
xchg
mov
call
aas
add
ljmp
fucomi
shl
adc
pop
mov
fdivrs
mov
jno
xlat
mov
pop
in
stos
movsb
jo
jle
add
push
hlt
xor
and
or
sbb
xchg
pusha
out
jae
add
adc
adc
mov
addr16
outsb
sub
push
jg
fdivrp
adc
pop
clc
jne
loopne
push
lock
cmp
jge
jge
sub
xor
mov
adc
call
clc
cmp
test
inc
pop
or
movsb
andl
ret
mov
jbe
repz
mov
add
jge
sbb
clc
cmpsl
loope
call
in
movsb
and
and
mov
ss
iret
cmp
xor
cmp
xchg
add
mov
scas
sarb
mov
jo
test
xlat
push
mov
jmp
rorl
jmp
rol
sahf
enter
sbb
mov
sbb
fidivrl
int3
add
dec
dec
out
add
shll
or
rorb
and
lods
and
nop
push
cs
add
inc
adc
shl
add
cli
dec
add
insb
popf
inc
call
les
or
loopne
mov
cmp
add
mov
mov
xchg
scas
push
push
sbb
ret
divl
push
addr16
cs
ss
inc
add
sbb
sbb
test
lock
pop
lahf
add
mov
ficoml
gs
mov
fcoml
mov
cmp
ss
aas
push
mov
add
outsl
movsl
sarl
test
xchg
int3
pop
scas
mov
shr
push
push
and
stos
test
loop
mov
in
mov
mov
fiaddl
into
sahf
vmread
push
mov
dec
fsubs
and
pop
jecxz
sbb
cmp
leave
cli
insl
shl
cmp
cmc
mov
sahf
scas
fisttpll
pop
dec
ret
cmpsb
push
jg
cmp
push
movzwl
inc
mov
inc
incb
jl
cmp
jo
popf
fldt
pop
jp
adc
pop
cmp
push
mov
inc
mov
daa
push
xor
push
out
sub
lods
jle
lcall
mov
sahf
daa
rcrb
mov
push
mov
sbb
cmp
adc
adc
in
hlt
cmpsl
repnz
loopne
add
dec
and
adc
cmp
inc
rolb
test
push
loop
hlt
xchg
test
ret
or
cmp
dec
xor
xor
mov
cmp
push
mov
jmp
mov
test
test
xor
repnz
fucomi
cld
mov
cmp
add
aaa
aaa
adc
mov
movsl
data16
gs
jmp
add
cld
movsb
mov
push
outsb
fdivrl
std
mov
adc
ljmp
or
mov
jle
filds
movb
cmpb
dec
or
enter
ja
clc
in
push
mov
or
inc
mov
add
movsbl
xor
cli
lret
mov
ss
push
addl
jb
and
push
cld
je
ret
adc
and
add
sbb
pop
xor
mov
icebp
insb
and
mov
xchg
push
mov
push
push
dec
outsl
fisubrl
addr16
jbe
mov
pushf
jle
or
subl
fistpll
fs
push
add
dec
add
or
cmp
mov
pop
add
lahf
xor
rcr
inc
or
outsb
pop
pop
mov
nop
inc
cmc
ss
rcrl
sbb
cmp
push
add
stos
dec
add
test
arpl
dec
mov
rcr
addb
ss
dec
or
cmpsl
nop
xchg
testb
inc
pop
jo
push
add
add
push
in
xchg
xchg
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
int
int
jmp
and
or
jmp
and
orps
push
mov
mov
mull
div
mov
sbb
jg
popa
imul
jns
mov
cmp
cmpsb
stos
mov
repz
repz
iret
repz
rcr
fucom
out
cltd
into
repz
idiv
outsb
out
sahf
cmpsl
push
add
out
fidivl
push
and
add
mov
pop
or
pushl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
pop
or
ss
test
adc
adc
add
or
cmc
ss
mov
or
mov
mov
or
xor
lock
lds
pop
popf
add
loop
loope
jp
enter
inc
xchg
shlw
inc
mov
or
or
dec
pop
adc
fmull
aad
xor
xchg
scas
popf
scas
lret
pop
mov
scas
or
mov
jp
push
in
dec
imul
xchg
dec
mov
and
adc
movsl
jb
pop
jp
sti
add
and
add
push
enter
orb
daa
mov
and
and
pop
cld
add
inc
stc
sub
push
push
lods
icebp
adc
pop
mov
mov
cmp
sub
out
mov
add
mov
add
jmp
subb
int
mov
mov
popa
or
adc
in
pop
mov
inc
cmp
imul
dec
repnz
mov
insb
add
mov
add
test
out
loopne
fmuls
cwtl
jb
jno
mov
or
imul
mov
call
jp
push
cmp
sub
cmp
or
and
xor
mov
lret
fucomi
xlat
sbbl
add
movsb
push
and
adc
test
push
add
or
sbb
call
mov
sbb
pop
scas
add
fiadds
pop
jne
imul
aas
inc
mov
sub
push
roll
test
loopne
sbb
dec
mov
loop
push
out
xchg
pop
xor
inc
or
sbbb
inc
insb
xor
mov
push
sbb
clc
mov
nop
cld
push
mov
je
test
xor
xchg
inc
out
push
adc
adcb
clc
adc
mov
cmp
push
mov
and
adc
or
mov
push
add
es
pop
push
das
imul
adcb
test
stc
jp
repz
mov
inc
or
int3
lock
push
popl
fs
je
push
mov
cmpb
mov
pop
push
push
fwait
orb
mov
push
inc
int
sub
ja
je
sbb
decb
lods
orl
adc
xlat
mov
cmp
mov
fwait
mov
or
jno
rcll
movsl
movsb
or
in
pop
dec
in
lret
ret
inc
add
cmp
pop
xchg
dec
test
mov
xchg
andb
and
jmp
adc
add
es
jp
cltd
scas
and
inc
add
mov
int
rcrb
enter
xor
sarl
sbb
in
loopne
lods
dec
pop
ror
enter
mov
mov
rclb
jecxz
aad
cld
and
loope
inc
pop
inc
icebp
andl
mov
cmp
jbe
in
add
push
cli
sbb
ds
pusha
popa
jecxz
pop
icebp
jne
inc
insb
xor
orb
mov
or
jne
andb
xchg
into
and
pop
pop
push
repnz
pop
shrl
je
std
imul
add
rolb
outsb
stos
sub
bnd
nop
push
or
adc
add
inc
cmp
xorb
cmpsb
mov
push
nop
cmpsb
pusha
pop
pop
negb
lock
addr16
sbb
loopne
fs
push
cltd
shl
and
aad
add
jns
and
enter
cmpb
sbb
testl
cltd
xor
rcr
mov
xchg
fld
cmpb
mov
ret
shrl
addb
add
mov
or
pop
push
push
push
cwtl
add
outsl
cwtl
subb
sbbb
and
ja
stos
pushl
cmp
movsb
shll
add
ss
test
pop
int3
mov
mov
dec
lahf
pop
jne
or
xchg
dec
es
xor
adc
rcl
mov
add
in
rorb
enter
or
add
cld
sbb
add
fidivs
or
pop
jle
mov
les
imul
nop
jnp
inc
lret
mov
ja
sub
pop
xor
xchg
stos
push
sub
shl
add
test
add
add
in
xchg
xor
add
fcompl
or
test
inc
movsb
push
in
push
add
jmp
iret
pop
jg
dec
test
add
es
add
and
outsb
sbb
daa
in
add
pop
dec
ljmp
leave
popf
test
cmp
and
add
dec
mov
rorb
or
roll
jns
sub
cmp
or
add
pop
xor
push
xchg
in
push
or
call
pop
jbe
je
adc
jmp
lods
xor
cmp
xchg
addl
or
and
daa
add
mov
push
xchg
in
movsb
loopne
sub
call
fcomip
xor
push
mov
jle
jge
arpl
fs
or
cmp
jne
movsl
hlt
mov
cmp
je
mov
inc
sahf
adc
fisubl
cmp
inc
movsb
inc
adc
loope
in
cwtl
or
dec
jns
xor
in
xchg
cli
sbb
push
in
add
pop
je
mov
jge
sbb
lock
push
out
loope
mov
lock
and
mov
sbb
add
pusha
mov
cltd
pusha
loop
push
aaa
jne
dec
push
sahf
inc
and
int
add
in
cmp
rcr
jp
jmp
test
xor
jl
xorl
test
and
add
xchg
cs
pop
jo
imul
mov
push
xor
ret
xor
sbb
cmp
pushf
and
lds
cs
testl
jo
loopne
or
arpl
cmpsb
jmp
pop
sar
subl
sub
mull
hlt
jl
mov
pusha
or
push
orl
cmp
sbb
sub
xor
aaa
mov
out
and
xor
movsb
and
lods
xor
sbb
adc
and
push
or
inc
sub
sbb
mov
sub
add
push
adc
in
ret
mov
repnz
jl
icebp
jnp
shl
inc
add
xor
inc
in
mov
int3
inc
rolb
xchg
push
aam
cld
das
fcomps
xchg
inc
jbe
loopne
cmp
in
frstor
hlt
fnstsw
cmp
cmp
mov
cld
dec
repnz
push
mov
inc
push
rolb
xchg
xchg
outsb
xchg
lret
adc
sbb
xchg
outsb
sbb
and
movsb
fwait
movsb
xor
xor
fcomps
cmpb
ljmp
pop
clts
mov
pop
setge
and
rolb
adc
push
test
negb
ret
insl
and
xchg
ret
push
mov
jbe
or
pusha
nop
or
jl
sub
cltd
add
cmp
test
das
ret
add
js
jecxz
add
lea
or
xorl
xlat
cmc
xor
addb
cltd
jl
repnz
lods
sub
and
push
jne
outsl
and
add
jl
jmp
add
mov
xchg
sbb
les
push
ret
insb
loop
in
cmp
je
push
and
ret
into
jge
and
enter
call
rcrl
inc
mov
or
sbb
sbb
rcll
iret
inc
cmpsl
xor
sub
or
js
loopne
popa
mov
sbb
push
xchg
popf
jmp
fwait
sbb
dec
push
imul
sub
mov
fs
dec
outsl
pusha
test
cmpsb
xor
insb
fdivs
sarb
push
hlt
push
pop
cmp
cli
sbbb
jmp
cmp
jle
or
mov
lock
fstpt
neg
pop
repnz
std
pop
sbb
mov
decb
pop
outsl
call
inc
xor
inc
xchg
mov
pop
in
pop
add
pop
sub
push
xchg
call
aam
rcrb
cmpb
mov
push
cmp
je
cmp
jne
push
inc
pop
inc
adc
and
push
nop
inc
sarb
cld
mov
test
out
shrb
add
push
clc
mov
ljmp
rol
dec
imul
push
and
repz
sub
ret
cmpsl
mov
dec
dec
or
inc
fldt
add
push
sbb
dec
cltd
inc
lock
sbb
dec
call
loop
outsb
out
cmp
or
push
roll
les
xchg
push
add
mov
or
jl
dec
or
popf
push
inc
jns
xchg
jbe
fwait
push
push
push
cmpb
popl
inc
lods
in
jge
ss
dec
pushf
mov
mov
pusha
popf
jb
call
hlt
xchg
push
adc
sahf
shrb
jecxz
and
inc
push
mov
xor
aas
jne
push
add
mov
adc
scas
xor
sbb
mov
lea
add
jb
inc
sbb
ja
pop
cmp
mov
in
xor
add
rclb
mov
sub
rcrl
push
imul
arpl
outsb
jo
xchg
sbb
mov
mov
mov
lea
insb
xchg
or
insl
cwtl
mov
jmp
or
sbb
inc
testb
adc
jne
inc
lds
or
ret
xchg
rorl
popa
jns
or
adc
test
push
mov
xchg
es
push
xor
push
or
and
add
pop
add
psrlw
jp
sbb
xchg
add
outsl
int
icebp
lds
push
mov
push
jne
testl
push
adc
into
add
and
sub
jno
or
xchg
or
adc
xchg
mov
lock
lods
xlat
pushl
add
sbb
add
outsl
add
fucomp
rorl
popa
sub
das
andl
jge
fnstcw
jmp
addr16
and
jle
jne
sbb
shrb
mov
push
in
adc
sbb
push
nop
pop
popa
xor
sbb
mov
pushf
add
dec
add
push
add
cmpl
adc
lods
cmp
rol
inc
leave
mov
add
mov
pop
cmp
loopne
and
pushf
mov
mov
jmp
clc
xchg
xchg
mov
lods
and
push
test
dec
lea
cwtl
ds
mov
pop
aam
jae
insl
adc
inc
cmovl
jle
jne
xchg
into
or
andl
add
or
mov
and
jecxz
neg
xor
xor
pop
loopne
push
ret
popa
sub
pop
sbb
jg
mulb
jne
fadds
push
mov
lcall
pop
adc
rcrl
adc
cmc
fists
mov
sahf
sbb
inc
or
jecxz
mov
icebp
pop
xchg
adc
push
inc
ret
fisttpll
aaa
jle
cmp
pop
roll
adc
fwait
push
inc
fwait
sub
test
adcl
jmp
inc
mov
jbe
ret
lret
cmpb
dec
sbb
and
or
addl
push
inc
jge
ljmp
cmp
jle
mov
sub
hlt
add
jmp
pop
rorl
or
fdivrs
xor
mov
rorb
shr
adc
mov
mov
lea
xchg
shrl
ljmp
loopne
xor
sbb
lock
movsbl
mov
loope
mov
out
inc
lret
or
fs
inc
aam
mov
push
inc
dec
add
or
xorb
xchg
psubusb
add
or
xchg
mov
out
xor
push
sub
inc
push
push
pop
lret
ss
mov
lods
arpl
add
dec
mov
lea
test
mov
in
push
jbe
movsb
aam
push
andb
add
sbb
xchg
jbe
add
loop
lahf
sbb
xchg
xor
cs
ds
push
repnz
mov
fs
sbb
aas
push
mov
add
addb
cmpsl
adc
push
outsb
xchg
imul
mov
lods
or
test
or
push
jg
out
faddl
fstl
fldz
fcomp
fnstsw
mov
push
sbb
test
jmp
or
or
mov
popf
pop
adc
lods
adcl
movsb
je
ds
hlt
xor
xor
shrb
push
inc
push
xchg
xchg
adc
fs
cmp
inc
lock
test
insl
cmp
sbb
fstpl
dec
test
xor
shlb
std
pop
nop
ret
sub
inc
mov
jbe
cwtl
sbb
cmp
fistpl
cmp
add
js
inc
jo
popa
xor
into
lret
rorb
pop
cmp
mov
pop
dec
sub
outsl
and
call
add
cmp
adc
pop
sbb
jbe
push
mov
imul
push
cmpb
push
movsl
in
mov
lea
mov
dec
repz
mov
mov
repz
loop
fimuls
enter
cld
fsubrl
loopne
and
rcl
in
add
ret
push
jae
repnz
mov
push
hlt
pusha
inc
or
ds
stc
cli
adc
nop
or
dec
leave
aaa
nop
sbb
bound
arpl
add
data16
push
rorb
xchg
rclb
into
xchg
jp
jmp
jecxz
rorl
cmp
es
and
xor
jecxz
sbb
or
mov
movsb
mov
mov
push
imul
rcrl
xor
jge
fdivrl
dec
xchg
xchg
and
or
sbb
inc
xchg
cmpl
orl
and
call
inc
in
das
pop
js
sub
lret
push
push
mov
or
pop
sub
add
xchg
sub
mov
add
or
aaa
mov
sbb
ds
push
xchg
pop
mov
in
pop
dec
mov
push
cmp
add
inc
fcompl
dec
mov
jb
push
xchg
orb
pop
jb
repnz
or
sahf
pop
rorb
pop
xchg
pop
xchg
or
inc
lods
adc
mov
addb
fmuls
mov
adc
das
loopne
jp
mov
add
mov
adc
fidivl
sbb
cs
iret
jno
and
icebp
sbb
add
jns
in
jne
je
in
mov
jl
add
out
inc
or
int3
pop
inc
jle
test
dec
fwait
dec
in
addb
and
jmp
dec
pop
cmpsl
push
jnp
xor
shrb
loopne
cli
in
les
jbe
jl
cmp
jge
jno
push
pop
adc
xor
pop
mov
out
cwtl
pop
xchg
adc
sar
lahf
mov
fiaddl
popa
daa
inc
pop
push
es
and
nop
pop
pop
mulps
jmp
pop
adc
adc
mov
dec
loopew
mov
lods
adc
push
add
jmp
cmpsl
cmp
push
sbb
incl
xchg
nop
and
mov
fcoms
and
ljmp
sarb
daa
shl
sub
fimull
loope
mov
sbb
ss
pop
insb
push
jmp
mov
push
adc
cmpsl
lock
fldenv
sub
add
xor
adc
test
cli
dec
movsl
jne
jb
add
aam
pusha
or
fisttps
xchg
orl
cmpb
inc
add
or
push
or
jb
movsl
jg
and
add
mov
inc
sub
dec
pop
out
imul
add
inc
inc
movsl
dec
in
loope
push
test
add
cwtl
adc
cmp
adc
push
push
fwait
push
push
dec
mov
loop
adc
or
push
and
pop
shll
cltd
dec
xchg
jo
jmp
cmpsl
jnp
lret
cld
idivl
adc
inc
sbb
data16
enter
pop
es
cwtl
jo
cmp
or
adc
rcr
cmp
pop
dec
loop
mov
mov
pop
daa
imul
push
call
or
movsb
shlb
sbb
test
jmp
and
push
push
mov
cwtl
outsb
and
xor
xor
in
cmp
mov
test
pusha
pop
push
and
jecxz
cmp
mov
movsb
push
sbb
pop
arpl
movsb
lcall
mov
std
push
call
push
add
scas
fstps
out
dec
lret
push
inc
lock
rcpps
test
es
aad
pop
outsl
mov
jne
out
fiaddl
xor
xor
mov
lock
dec
cmp
dec
xchg
and
ret
add
test
or
mov
setb
push
push
out
xorb
das
xchg
stos
pop
pop
jbe
and
lea
inc
inc
add
sbb
dec
lea
pop
lock
addr16
clc
adc
shlb
loope
lret
dec
xor
ljmp
mov
xchg
mov
mov
pop
dec
xlat
imul
fisttps
pop
or
test
adc
and
enter
sub
adc
cmc
xchg
lret
sub
mov
cltd
sub
das
ds
lock
sbb
xor
jno
rorl
sbb
ss
js
or
cmp
gs
mov
sbb
jno
in
add
or
outsb
cmpsl
sahf
xchg
imul
xor
sbb
inc
aas
push
sti
sbb
or
in
sbb
iret
or
loope
movsb
imul
outsb
aaa
xchg
add
sub
ds
cs
push
lock
jge
fisubl
dec
xor
xor
loopne
jnp
outsl
xlat
sub
leave
mov
je
xchg
mov
pusha
mov
in
mov
popf
mov
add
sub
xchg
in
addr16
sbb
add
sbb
pop
inc
rcpps
add
jl
push
sub
cmpsl
mov
call
pop
push
add
mov
mov
ret
addr16
fwait
clc
mov
push
push
mov
pusha
inc
add
subb
adc
inc
addl
jne
xor
jne
test
fadd
sbb
pusha
aaa
loope
mov
scas
test
add
ljmp
imul
xor
pop
or
mov
and
or
inc
and
inc
ljmp
in
in
or
pusha
rcll
push
push
xor
dec
lods
adc
pop
or
sahf
mov
add
push
jno
push
dec
or
cltd
inc
adc
iret
fadds
outsl
push
test
stos
divb
xchg
ret
push
cmp
leave
fsubs
push
jne
imul
push
scas
push
jp
push
add
pop
rcrb
pop
xor
cmp
bound
mov
adc
test
repnz
pushl
shlb
and
mul
cwtl
pop
loopne
dec
ror
daa
xchg
push
push
enter
lahf
cmpsb
test
push
cmp
jo
repz
sar
jb
pop
sub
addb
pop
xor
sbb
mov
cld
incb
or
mov
or
out
popa
jbe
sbb
ret
mov
add
inc
mov
imul
test
imul
fisttpll
sbb
pop
push
jp
in
xor
pop
inc
mov
and
nop
xchg
add
xor
add
pusha
sub
rorl
or
push
push
es
add
or
test
xchg
mov
fsts
mov
pop
pop
mov
push
mov
test
fiaddl
add
js
mov
shr
or
lret
push
add
pop
addr16
imul
and
or
loop
mov
mov
and
hlt
mov
inc
adc
adc
in
jbe
dec
dec
cmp
jo
lock
daa
mov
inc
imul
or
pop
inc
or
fs
mov
mov
test
lea
xor
or
sbb
mov
adc
ret
inc
or
adc
sbb
or
lea
sbb
sub
and
pop
pusha
push
and
or
inc
sub
push
pop
cmc
xchg
push
sbb
rorb
bound
pop
cmp
push
insl
or
daa
int3
mov
arpl
inc
pop
add
clc
sbbb
js
cld
mov
push
adc
test
mov
sub
out
in
aaa
mov
icebp
jmp
cmp
sub
lock
cmp
adcb
int
mov
imul
mov
gs
mov
pop
rorl
ficomps
out
push
add
pminsw
clc
add
arpl
add
stos
adc
scas
adc
dec
mov
pop
xor
cwtl
out
daa
js
movsb
mov
mov
lret
std
jb
frndint
and
and
int
iret
mov
nop
pop
pop
cwtl
jge
aam
push
stos
adc
mov
push
or
inc
or
movsb
push
dec
sbb
out
sub
insb
jp
cmpsl
out
cmpsl
popa
lcall
inc
popf
sub
mov
or
lea
xorb
xchg
xchg
dec
adc
clc
sti
rorl
int3
cmc
cs
fcoml
push
jne
daa
sub
jno
xchg
fs
push
push
adc
loopne
dec
outsb
or
push
pop
mov
adc
es
push
in
mov
fwait
push
jae
test
jo
mov
clc
mov
movsb
mov
sub
push
xchg
xchg
je
popf
mov
sbbl
je
mov
in
pushf
in
or
sub
ss
mov
jl
mov
sub
adc
mov
leave
cmpl
push
sbb
fldt
and
jp
mov
cmc
loop
cmc
mov
push
je
push
repnz
add
mov
mov
pushl
cmp
pop
inc
fistl
jb
jl
roll
pop
pop
test
mov
subb
sub
add
ds
jns
sub
test
sub
fldt
cmc
sbb
pop
pop
fbstp
xor
or
add
xchg
sub
pop
popa
and
test
dec
mov
cmp
mov
push
fs
xchg
xor
pop
mov
jo
add
jecxz
cmp
pop
movsb
cs
lret
in
dec
or
jne
adc
mov
pop
inc
cmp
sub
sbb
inc
cmp
xor
imul
push
push
fwait
mov
sub
out
hlt
rorb
adc
pop
push
aaa
enter
jne
sti
pop
add
mov
or
je
fdivrs
cmpsb
fisubs
cmpl
mov
xor
sbb
inc
fs
add
xorb
mov
clc
xor
push
lcall
in
jbe
lods
test
mov
lret
test
orb
scas
lods
js
test
mov
adc
push
add
inc
lea
sbbb
xchg
sub
pop
inc
test
push
or
add
xchg
loope
sti
fwait
aad
mov
lock
cmp
sub
xor
inc
push
push
mov
cs
inc
bound
dec
nop
mov
insb
icebp
xor
mov
or
movsb
and
arpl
sbb
imul
add
sti
pop
mov
lea
pushf
mov
imul
adc
mov
lcall
xchg
push
mov
push
xchg
insl
dec
fwait
sti
cmp
xchg
fs
lea
sarl
mov
in
cld
pop
adc
testl
xchg
sub
pop
sbb
xchg
sahf
insb
push
push
xor
into
sbb
and
loop
or
es
jl
adc
or
testb
jl
mov
or
and
push
or
aam
fsubp
add
je
sub
cmpsl
in
sahf
add
in
aam
ss
push
ja
mull
lcall
pop
or
dec
shll
xchg
fs
inc
jo
or
hlt
pop
mov
pop
cld
cld
or
rol
dec
clc
rep
mov
inc
mull
sarb
cmp
jne
adc
mov
clc
fstl
sbb
lret
rol
mov
les
jl
push
popf
ss
stos
xchg
out
filds
cmp
mov
xor
jb
dec
mov
and
lea
xchg
mov
mov
xor
sub
cwtl
mov
nop
out
lahf
sbb
je
inc
pop
cmp
loop
rorb
mov
pusha
loop
sbb
mov
int3
add
or
adc
sub
aaa
es
push
imul
sbb
jmp
sub
mov
test
aaa
mov
pop
pop
movsl
pop
pop
in
mov
nop
pop
pop
mov
jl
push
sti
jo
in
pop
pop
mov
or
jb
push
outsl
sub
jb
xor
test
orb
jns
scas
jno
push
icebp
add
dec
rorl
mov
mov
loopne
pushf
lock
xor
inc
cmp
mov
push
bound
andb
or
inc
fs
or
sub
xchg
movsl
pop
lds
pop
jns
cmpsl
dec
or
and
or
loopne
push
inc
imul
dec
mov
jb
push
xchg
test
arpl
dec
test
inc
mov
adc
out
roll
jo
icebp
pusha
rclb
outsb
pusha
sbb
bound
test
jns
jo
scas
or
repnz
sub
das
push
int3
sub
js
jno
adc
xchg
jnp
cli
or
shrb
jo
mov
ss
dec
add
sti
mov
add
and
leave
gs
xchg
shlb
call
sbb
rolb
add
dec
nop
inc
mov
xchg
mov
or
loope
in
push
hlt
adc
sbbl
and
mov
xchg
jnp
stc
sub
sub
jnp
js,pn
push
jnp
fsubrl
or
mov
cmp
push
pop
cmp
mov
seto
mov
dec
sub
adc
mov
adc
dec
sbb
cmp
pop
testb
sub
jbe
sub
or
pop
mov
pop
sbb
leave
sbb
mov
add
xchg
or
xor
aaa
lock
or
je
push
mov
dec
sete
fisttps
mov
push
xor
or
pop
les
inc
or
jge
imul
jno
and
hlt
pop
out
xor
jne
add
ja
insl
cmp
jle
or
aam
or
call
sub
pop
hlt
add
inc
addr16
das
sub
dec
fcomps
mov
and
test
push
mov
popf
daa
dec
popa
pop
dec
test
sub
cmp
nop
subb
jl
sbb
flds
push
pop
inc
call
ret
jg
mov
push
cmp
aad
mov
or
push
add
and
out
outsb
lods
scas
pop
adc
pop
cmpsl
cmp
push
dec
es
pop
adc
xor
ljmp
push
sbb
jbe
push
jl
sub
pop
sarb
rcrb
push
or
leave
incl
arpl
sub
jne
inc
inc
jmp
pop
cmp
sub
pop
xor
xchg
cmp
mov
sbb
sbb
xor
ja
jmp
test
inc
dec
scas
test
iret
or
sub
jne
mov
aam
dec
sarl
dec
scas
arpl
in
push
sbb
push
dec
enter
decb
xchg
in
dec
add
add
in
add
dec
pop
push
popf
xor
xchg
sbb
pop
jae
clc
rorb
push
mov
push
in
enter
dec
adc
or
shr
shl
jb
push
cmp
xchg
mov
mov
dec
inc
mov
adcb
inc
push
pop
push
inc
mov
inc
mov
adcb
inc
jns
pop
inc
faddl
push
push
roll
cmp
add
push
pop
add
push
mov
xor
dec
jp
les
les
enter
inc
enter
jnp
enter
in
aam
push
push
nop
nop
or
clc
addb
ret
add
mov
sub
mov
mov
clc
inc
and
je
push
mov
or
test
mov
jns
int
sub
jp
nop
arpl
mov
jae
and
xor
xlat
xor
pop
aad
mov
push
cmc
daa
loope
mov
push
pop
outsl
sarl
or
pop
push
sbb
and
rorb
push
or
sub
xchg
int3
jne
mov
aas
mov
sti
loope
inc
test
fs
add
push
xorl
lret
mov
ret
aas
movb
add
inc
cmp
pop
adc
push
inc
loope
add
jne
bound
cltd
aad
add
jo
imul
xchg
jne
jo
and
lds
test
jl
xor
mov
and
bound
stos
addl
mov
pop
mov
pop
cltd
aad
or
mov
xor
xchg
popa
mov
adc
cmc
jmp
xchg
fs
sub
mov
popa
adc
or
cmpsb
or
ja
imul
jle
fdivs
dec
pop
cmp
rolb
lret
insl
jns
daa
add
mov
push
sbb
mov
int3
loope
hlt
testb
mov
or
fiaddl
and
adc
mov
sub
sarb
les
push
and
test
fcmovnbe
mov
push
mov
add
push
cmp
fcomp
test
andl
inc
adc
jmp
xlat
aad
and
shr
push
cltd
lea
add
push
mov
xor
pop
fsts
pop
mov
js
jnp
movsl
cmp
mov
sub
movsb
push
xor
mov
mov
out
or
mov
xchg
shlb
cli
shr
xor
lods
jno
inc
adc
mov
or
not
cld
lea
test
xchg
test
and
mov
pop
shr
cmp
jbe
add
jmp
add
mov
in
jmp
dec
pop
and
sar
add
inc
push
out
adc
test
mov
or
jb
das
and
mov
xor
add
sub
dec
xchg
in
mov
daa
or
test
negb
xchg
fimull
aad
cli
xlat
xchg
mov
push
fsubrl
pop
inc
shlb
mov
adc
int
adc
push
inc
add
les
and
insl
jns
or
rclb
pop
fildll
jne
lock
icebp
push
or
jb
pusha
ds
insb
xchg
or
imull
stos
mov
pop
mov
mov
xchg
adc
add
mov
jle
dec
xchg
lods
adc
ret
add
test
mov
sub
mov
sub
mulb
test
stos
sbb
incb
inc
cmpsl
leave
idivl
addl
loopne
dec
push
mov
push
repnz
icebp
jno
inc
outsb
test
cli
lods
das
and
sub
push
and
xchg
pushf
or
repnz
or
push
mov
mov
inc
cmp
imul
dec
add
xor
or
xor
fsubs
lea
xchg
int3
and
adc
mov
sub
push
xor
mov
push
stos
or
sub
pop
add
fstps
xchg
orb
adc
push
push
add
push
push
sub
push
push
jmp
sbb
test
sahf
add
xor
ss
scas
rcrl
sub
jns
adc
mov
rcr
xchg
cmp
or
cmp
stos
andb
es
mov
jge
adc
std
inc
sub
das
add
push
or
or
cmp
and
push
mov
aam
add
and
adc
shll
jne
enter
sub
repz
enter
xor
mov
jle
xlat
jno
mov
negl
push
xor
jnp
push
push
sub
add
out
and
movhps
testb
inc
inc
fstps
add
xchg
sub
arpl
sbb
dec
sub
jl
jo
into
dec
mov
cmp
xor
push
adc
je
lods
mov
fs
mov
insl
gs
pusha
add
in
adc
dec
or
push
xor
push
xor
or
jno
lea
jmp
pop
js
adc
orl
movsl
add
jmp
and
dec
push
mov
push
fsubs
push
push
clc
aad
aam
inc
cmp
jne
add
lea
mov
sbb
cmp
pop
cmp
adc
rcrl
add
dec
sahf
cs
push
pop
dec
repnz
sbb
and
pop
mov
inc
add
fdivrl
mov
jo
jo
mov
mov
pusha
cwtl
daa
push
sbb
cmp
mov
lahf
dec
add
push
mov
dec
or
and
mov
scas
pop
and
cmp
subb
leave
cmp
mov
stos
ret
jmp
outsb
jno
push
or
mov
or
dec
dec
leave
dec
fwait
mov
sub
sub
jp
fdivrs
dec
cmc
lods
mov
xorl
daa
push
push
push
mov
test
mov
test
mov
lods
loope
and
lods
mov
lods
nop
daa
je
and
popa
sub
cltd
mov
pusha
ret
dec
add
mov
push
xor
mov
sub
mov
mov
daa
mov
lahf
lret
sbb
testb
push
mov
mov
mov
clc
dec
arpl
mov
jbe
bndldx
xchg
or
xchg
push
mov
test
mov
popa
imul
rolb
movsl
pop
dec
and
jbe
sbb
mov
adc
and
lods
and
push
es
mov
imul
setae
cld
push
push
adc
addr16
inc
ds
adc
sub
pop
xchg
inc
cmp
or
lods
cltd
loope
cld
mov
jg
dec
lods
in
sbb
mov
sbb
add
add
fldt
cmpsl
in
lods
and
add
stos
fs
jb
add
test
push
js
inc
sarl
add
jp
shlb
fisubrs
mov
into
sbbb
call
ret
loope
adc
add
add
ret
test
adcb
mov
aaa
lret
push
cmp
jg
sub
outsl
adc
mov
mov
cmp
pop
iret
pop
xlat
mov
mov
jp
and
lret
jmp
inc
rolb
gs
inc
xchg
push
loope
shrb
scas
and
xchg
rclb
and
leave
or
dec
pusha
push
daa
mov
je
call
pop
out
ret
mov
sbb
adc
data16
loopne
inc
rolb
in
push
movsl
mov
xchg
stos
cmp
sbb
adcl
fs
test
cmp
xor
loop
nop
out
or
xorps
cvttps2pi
into
mov
push
decb
pop
sbb
xor
mov
out
mov
cmp
xchg
inc
repnz
packssdw
ret
xchg
sbb
push
mov
stos
incb
js
mov
jmp
mov
dec
je
or
and
pop
cmp
push
data16
in
push
int3
cmp
loop
jb
fdivl
iret
daa
in
outsl
nop
rorb
add
mov
dec
push
imul
mov
clc
add
push
ficompl
stc
adc
fcomp
rorb
jbe
decl
dec
push
push
pop
cs
xchg
lret
jne
push
jg
dec
add
fsubl
fstpl
rcrl
pop
loopne
jns
pop
shl
psubsb
xor
sbb
cmp
add
or
je
adc
xor
rorb
adc
mov
frstor
lock
push
rclb
aam
mov
lret
test
or
addl
pop
mov
push
add
jo
push
in
nop
shll
test
rcl
notl
out
fsubrs
xchg
pop
pop
jmp
lahf
sbb
in
add
sbb
push
dec
xchg
mov
xorl
lahf
nop
push
jmp
add
mov
test
mov
cmp
push
cmpsb
bound
mov
mov
adc
outsl
es
push
add
push
xchg
push
nop
fdivrp
mov
lret
cmp
push
sub
push
add
inc
inc
jmp
stc
adc
and
cmc
and
adc
dec
xchg
ds
and
test
fstl
jl
xor
adc
into
or
or
lods
scas
or
idiv
sub
mov
ret
icebp
out
sbb
outsl
mov
xor
xor
in
mov
mov
movsb
add
pop
jne
lds
cld
pop
dec
jne
cmp
jmp
mov
repnz
enter
js
adc
push
adc
adc
or
jge
mov
test
jl
loop
sbb
push
or
fidivrl
lret
and
pop
pop
jns
sahf
mov
sti
clc
and
push
bound
and
jecxz
mov
rolb
mov
add
dec
adc
pop
jl
sub
gs
jno
add
xchg
inc
pop
movb
cld
mov
mov
dec
push
add
xchg
pop
pop
pusha
push
xor
sahf
popf
cmp
sub
and
rolb
push
inc
jl
sub
rcrb
fidivrl
int3
gs
push
popa
or
aas
sbb
subl
mov
push
add
push
pop
mov
sarl
pop
mov
inc
inc
sub
enter
fsubs
adc
push
icebp
int3
in
xchg
shrb
add
repz
add
cld
and
jae
add
add
add
xor
xchg
out
pop
push
movb
mov
add
adcl
mov
js
into
pop
inc
mov
inc
add
maskmovq
divl
and
push
lock
loopne
push
push
in
inc
xlat
pop
jmp
cli
addr16
outsl
push
push
hlt
gs
out
xchg
inc
into
xor
ja
mov
mov
push
xor
adc
pop
mov
shlb
testl
les
lods
lds
inc
gs
data16
js
ss
sbb
pop
sbb
push
mov
ja
xchg
sbb
mov
rol
push
in
push
pop
push
outsl
sub
inc
push
mov
add
xor
pop
in
je
add
mov
jo
pushl
shlb
in
push
test
jle
lret
mov
test
cmp
adc
fadds
add
ja
xchg
js
inc
mov
add
int
dec
clc
or
xchg
mov
and
mov
nop
js
or
sti
je
push
push
movsb
xor
cwtl
rclb
pop
xchg
bound
push
or
adc
daa
cltd
jmp
push
lret
add
inc
fdivrl
daa
jo
push
nop
adc
or
add
lods
fs
scas
shr
inc
mov
mov
inc
sbbl
iret
cmp
xor
in
add
lods
xchg
add
push
es
pop
stc
pusha
or
or
sub
xchg
xchg
notl
xchg
mov
sti
and
or
ja
cmp
je
bound
js
add
push
in
mov
push
inc
sub
sub
inc
add
or
sbb
xor
pop
pop
cltd
sti
mov
push
push
dec
inc
push
iret
inc
mov
test
push
call
add
mov
sbb
or
adc
test
adc
test
push
ret
adc
mov
add
sbb
add
pop
test
shlb
int
push
lods
mov
jl
cmp
int3
into
jp
sbb
xchg
push
or
fmul
xlat
sub
push
pop
or
fmuls
cmp
pusha
mov
add
mov
cmpsl
jmp
inc
loopne
in
sub
std
xor
xor
subb
cmc
nop
ss
sbb
inc
int
cmpsl
shlb
rclb
movsb
adc
pop
sub
lds
mov
mov
ret
lcall
dec
cmc
ret
data16
cltd
push
in
adc
or
mov
lcall
imul
rcl
cmp
xor
inc
in
lock
sbb
mov
or
or
jo
add
mov
cmp
mov
pop
in
and
in
xorb
mov
add
lock
mov
mov
or
sar
push
ljmp
in
xor
pusha
mov
rol
mov
ror
xor
sar
pop
icebp
out
add
sub
jnp
xor
shr
xor
add
add
add
sub
fnstsw
fs
or
jae
or
sti
icebp
call
and
xor
add
add
aam
sub
jge
add
cmp
cwtl
iret
xlat
lods
loop
ror
cli
fisubrs
jge
xor
aam
cli
and
and
xchg
push
aam
cmpsb
in
test
cmp
mov
repnz
rorb
aaa
push
test
or
push
or
and
not
ret
rcl
add
add
jo
add
add
call
fsubr
rcl
sub
or
call
sub
xchg
xorl
ljmp
int
xchg
shr
add
push
xor
fsub
in
dec
rcrl
xor
in
movsb
jb
xor
in
shrb
cmpsl
sbb
lahf
push
cmp
inc
push
push
punpckldq
push
dec
pusha
inc
push
bound
pop
mov
pop
or
mov
xor
jo
cs
cltd
call
cmpsb
mov
in
xor
call
adc
pushf
cmp
pop
cmp
pop
dec
rcl
aam
sti
mov
pop
or
int3
xor
add
in
push
inc
insl
pop
push
xor
and
and
loopne
in
jl
iret
or
xor
cmp
imul
xor
push
test
inc
mov
insb
fwait
loopne
cmp
jo
ret
push
jo
je
or
ficoms
call
lcall
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
xor
pop
push
mov
inc
dec
rorl
inc
call
and
pusha
lret
test
aam
mov
xchg
cmpsl
adc
and
stos
adcl
nop
pushf
aam
es
lcall
nop
cmpsb
imul
inc
fs
shr
rolb
or
cli
xor
stos
sub
sub
jge
shlb
dec
xorb
dec
shll
dec
loopne
call
push
jne
and
xor
or
int
leave
dec
push
dec
sbb
xor
xor
jo
xor
mov
rolb
cmp
add
add
push
pop
cmp
or
nop
sub
sahf
push
add
or
push
or
pop
and
rorb
fs
pusha
mov
pusha
mov
movsl
mov
sbb
pop
rorb
adc
and
fs
and
adc
andl
adc
inc
inc
sub
icebp
stc
stc
stc
or
pop
dec
mov
xchg
inc
mov
dec
mulb
dec
ret
adc
imul
fidivs
push
sbb
inc
inc
add
lea
stos
xor
pushf
out
pop
add
sub
mov
int3
add
cmp
jb
cld
sbb
cmp
inc
aaa
sub
pop
stos
es
fstpt
lea
pop
xor
mov
inc
mov
sub
shlb
fidivrs
add
add
rorb
or
or
mov
test
jne
imul
mov
mov
mov
jae
mov
sub
push
xor
aad
loopne
lea
jmp
lea
push
sub
xchg
out
mov
add
pop
mov
mov
dec
jne
pop
pushf
loope
inc
or
daa
lock
test
jnp
jl
sub
mov
cmp
jbe
or
pop
jno
ret
adc
cld
lea
sub
jae
push
pop
inc
dec
mov
fadds
rep
or
xor
ljmp
scas
or
jg
in
inc
add
dec
pusha
outsl
pop
loopne
ror
mov
dec
adc
ljmp
add
mov
rorb
pop
or
cli
jo
jp
popf
dec
sbb
dec
sbb
ja
adc
inc
push
adc
test
icebp
or
in
mov
dec
adc
mov
insl
jecxz
or
sbb
pop
dec
mov
fistpl
inc
shlb
pop
pop
pop
xor
scas
adcb
fucomi
adc
push
insl
xor
mov
dec
push
or
fwait
add
pop
mov
andb
gs
add
lods
dec
rcll
xchg
loopne
cwtl
shl
pop
ficompl
in
popf
mul
lock
adc
cmpl
sarb
jmp
add
dec
add
sub
in
dec
insb
fs
fucomip
push
lds
outsb
jl
leave
xchg
imul
dec
dec
adc
mov
push
jbe
or
and
inc
xor
rorb
ljmp
call
sub
adc
dec
inc
and
dec
fnstcw
mov
test
lcall
push
push
and
sub
jp
call
adc
cmpsb
inc
xor
call
mov
push
add
data16
push
jno
adc
nop
lcall
test
cmp
or
loop
aaa
in
xor
inc
cmp
sub
cmp
insb
lret
push
frstpm(287
je
add
adc
xchg
xchg
mov
xchg
dec
cmp
add
jle
nop
outsb
or
inc
dec
in
mov
into
pop
push
xor
fdivs
sub
add
inc
mov
mov
addr16
push
subb
arpl
inc
and
dec
add
aad
sbb
std
and
cmpl
in
mov
cmpsl
test
sub
in
jo
das
xlat
ljmp
xor
push
jns
jge
in
add
jmp
xor
push
repnz
and
mov
ret
subl
lcall
and
enter
jno
sar
mov
rorl
es
mov
xchg
mov
testb
sbb
pop
ljmp
enter
adc
inc
ret
mov
pop
pushf
push
shrb
repnz
mov
mov
lods
adc
pop
mov
jmp
inc
adc
sub
test
cltd
and
call
cmc
pcmpeqd
inc
mov
xchg
inc
mov
mov
and
insb
loopne
cli
inc
rcrb
push
pop
pop
adc
jae
add
call
jmp
mov
test
mov
fstpl
daa
or
push
pushl
addl
mov
mov
dec
cld
mov
mov
sub
mov
cmp
cmpsb
pop
fldenv
adc
xchg
xor
movsb
lds
sbb
leave
push
sub
mov
ffreep
es
mov
sub
lret
push
jnp
adc
sub
adcl
adc
sub
push
pop
cli
pop
cld
push
inc
push
jo
je
cmp
jbe
jns
cmpsb
adc
pop
sub
fs
mov
xor
xchg
adc
pop
outsl
ret
dec
mov
or
cmp
and
push
and
and
cmpl
inc
in
fidivrl
test
repz
iret
push
or
or
mov
jmp
movsb
add
xchg
iret
orl
or
push
movsb
es
cli
push
dec
mov
xor
or
pop
mov
mov
dec
add
push
add
sub
fldenv
push
aaa
fimull
sub
adc
cmp
sbb
add
adc
sub
pop
add
or
sub
or
push
addr16
ret
out
push
loopne
jne
ss
sbb
sub
or
fucomip
mov
out
mov
xchg
out
push
fwait
xchg
push
jbe
pop
test
sbb
rorb
mov
push
xchg
or
cmp
jmp
mov
test
pop
fwait
or
sub
or
lods
scas
lea
inc
imul
je
xor
pushf
push
sub
pop
imul
add
ret
mov
and
xchg
dec
or
subl
or
imulb
ljmp
sbb
call
and
pop
jmp
inc
mov
ja
add
push
mov
xchg
adc
push
dec
pop
call
push
roll
or
cmpsb
xchg
inc
scas
clc
and
push
sbbb
ss
lods
andb
or
sbb
add
dec
adc
fiadds
push
add
push
inc
sar
mov
sarl
mov
ss
in
add
roll
adc
pop
add
das
sahf
push
lds
ja
push
push
mov
ljmp
and
sub
cmp
jbe
shlb
sub
in
divb
xor
sub
dec
sub
or
movsb
jecxz
sub
add
add
lcall
inc
mov
daa
push
lea
push
pushf
xlat
cmp
xor
xchg
inc
adc
inc
cmp
mov
mov
loope
sub
clc
add
or
or
sub
lods
pop
pop
and
xorb
in
adc
stc
hlt
jne
dec
nop
mov
inc
add
je
sbb
fs
inc
add
or
lods
inc
mov
ds
imul
mov
ja
cmp
and
je
inc
pop
or
cmp
orb
inc
lea
jecxz
in
mov
jl
mov
cmp
inc
sbb
sub
push
adc
add
imul
cld
inc
push
mov
enter
push
ret
enter
mov
pop
cmp
inc
and
fwait
jo
sbb
jmp
cmp
ja
or
dec
jae
ss
jb
rclb
rcrl
test
loope
fnstcw
jne
mov
sub
into
mov
inc
mov
dec
inc
hlt
pop
or
jecxz
push
or
inc
movl
mov
sub
jmp
test
dec
cmp
cmp
fisubs
insl
pop
out
les
mov
pusha
jbe
dec
xor
fs
scas
lahf
mov
or
das
mov
dec
adc
ja
inc
dec
xor
xchg
dec
pop
jl
jmp
lods
int3
fidivs
xchg
in
shrb
cmp
add
sub
repnz
jno
jb
adc
dec
ret
shrb
stc
fcmovnb
out
push
push
mov
mov
ficomps
mov
jl
inc
cmp
mov
cmp
xorb
dec
jl
adc
js
sub
mov
jbe
movzbl
pop
cwtl
xor
rorb
dec
mov
jne
pop
and
inc
movsl
insl
xchg
or
pop
out
mov
add
out
xchg
xchg
mov
xchg
xchg
or
movsb
notl
xor
pop
outsb
jl
push
dec
add
add
imul
std
push
mov
sbb
adc
movsb
scas
popa
cmc
and
call
jle
push
adc
pusha
decl
add
and
xor
push
inc
cmp
call
pop
xlat
adc
emms
or
aam
adc
aaa
ret
push
xor
push
inc
add
ljmp
data16
adc
xor
jbe
pusha
test
sbb
jle
xor
shrb
sub
pop
lock
xor
xor
pop
ret
push
das
push
lds
push
push
jl
les
adc
mov
shl
sbb
or
or
das
push
add
rcll
dec
dec
pop
mov
ja
sbb
cmp
pusha
and
js
pop
and
push
fadds
cmp
sbb
push
jmp
lea
stos
test
mov
dec
sbb
push
enter
clc
or
jne
push
enterw
in
inc
cwtl
jmp
xchg
cmp
repnz
xor
mov
faddl
cltd
or
out
add
or
mov
rclb
mov
add
add
sarl
jmp
inc
loopne
add
and
shl
xor
mov
mov
fmull
out
or
mov
popa
adc
sbbb
aas
or
adc
adc
fidivrs
aas
add
xchg
loopne
ja
add
push
pusha
clc
sub
das
add
sub
jo
mov
mov
sbb
or
sub
cmp
mov
jnp
loope
jne
insb
push
lds
cs
jge
sub
mov
ret
lock
lods
call
and
mov
mov
add
xor
adc
push
sbb
and
mov
pop
jmp
mov
lcall
jo
or
bound
lds
mov
pop
lock
push
xor
xor
jle
push
xchg
loope
and
xlat
push
cmpsl
and
mov
mov
xor
es
cmp
call
ljmp
mov
lock
mov
adcl
orb
sti
lods
or
add
scas
jmp
push
pop
fs
and
add
lods
cmp
add
das
ja
imul
and
xchg
push
xor
imul
daa
jecxz
mov
ficoms
icebp
decl
popa
mov
xchg
jo
mov
push
cmc
popa
mov
ret
icebp
pop
jg
mov
sbb
sub
cmp
push
scas
out
or
add
adc
arpl
or
dec
inc
rcll
cwtl
add
xor
roll
jb
push
adc
les
mov
adc
pop
mov
std
push
inc
add
push
mov
ss
jmp
push
js
jbe
mov
jmp
xor
inc
fisubrl
repnz
adc
mov
cmp
mov
pop
cmc
cmp
pop
add
divb
adc
out
push
xor
gs
xchg
cmp
in
dec
push
loopne
mov
pop
push
ret
or
xor
bound
adc
mov
jno
jecxz
or
cmp
pusha
cmp
loopne
pop
push
lods
inc
ljmp
jmp
sbb
sbb
pusha
cmp
jmp
repnz
fldt
loop
mov
testb
pop
loopne
inc
mov
lret
add
inc
popa
sbb
xchg
xor
push
sti
inc
sbb
mov
in
dec
sbb
mov
popa
and
adc
inc
fisubl
pop
ret
mov
or
bound
pusha
rorb
mov
sub
or
sarl
in
sub
addl
sbb
and
lea
inc
xchg
nop
push
jo
mov
mov
jno
ss
xor
stos
in
sub
sbb
pop
adc
sbb
shll
cmp
in
in
push
pop
or
out
inc
push
sbb
idivb
insl
mov
sbb
pop
pushf
jno
push
cmp
xchg
jecxz
dec
mov
stos
and
xor
mov
cmp
inc
adc
cwtl
jmp
sahf
sbb
jns
cmpsl
or
push
cmpsb
mov
mov
push
inc
inc
mov
push
jecxz
pop
adc
push
gs
jmp
mov
ds
adc
mov
mov
cs
xchg
push
and
sub
clc
cli
movsb
out
mov
enter
sub
sti
xlat
sub
mov
or
sbb
mov
pop
push
mov
mov
mov
xor
xchg
hlt
jne
push
sbb
pop
scas
rcll
loopne
je
nop
aaa
popa
xchg
push
ret
imul
push
push
fadd
pop
jp
pop
cld
xor
clc
sub
push
jno
icebp
cmpl
push
imul
add
pop
push
xchg
lods
out
add
in
lea
dec
mov
pop
push
fwait
push
push
inc
sub
aam
sbb
into
sub
push
mov
gs
adc
imul
arpl
mov
push
and
mov
test
loopne
cmp
push
stc
sbb
mov
lods
imul
cmp
mov
and
inc
sbb
and
sub
pop
enter
push
out
push
aas
xor
pusha
andl
out
cmp
jle
loopne
push
and
sbb
outsb
outsl
xor
in
mov
test
cmpsb
pavgb
rcrl
aam
inc
iret
dec
cli
adc
add
shrb
outsb
jb
or
mov
pop
xor
xor
and
or
xchg
jne
repz
add
push
mov
in
push
arpl
jg
jo
insb
mov
or
out
cld
test
sbb
or
jo
mov
or
dec
data16
add
cmp
push
loopne
dec
mov
or
push
sub
shlb
jne
addl
jmp
rolb
cmc
dec
lods
test
les
cli
enter
movsl
mov
pop
mov
jl
xor
lret
call
sub
notb
movl
movsl
outsb
mov
pop
xor
mov
push
in
jo
sub
jp
jmp
jbe
sarl
sbb
and
mov
incl
aaa
sbb
adc
aas
in
push
cmp
jb
jbe
mov
jmp
sub
cmpsl
imul
cltd
rcr
add
mov
sub
ror
pop
pop
rcr
popa
cmp
sbb
imul
loopne
mov
or
jg
negb
subl
add
pop
push
ss
loopne
and
shlb
and
icebp
jmp
fnsave
mov
inc
mov
adcl
lahf
mov
jne
jg
add
add
dec
and
rcrl
movl
ss
insl
andb
fidivl
movsb
subb
pop
jne
or
clc
jg
inc
hlt
nop
ss
sub
mov
aam
or
leave
or
inc
mov
add
mov
pop
dec
jno
xchg
xor
and
fdivs
dec
push
push
sbb
lcall
in
pop
sbbb
push
and
jg
shll
mov
sbb
add
sbb
sar
int3
lock
mov
sbb
rorl
sbb
sbb
inc
imul
roll
add
cmpb
leave
jmp
xor
lock
push
sbb
push
nop
and
int3
dec
adc
mov
bswap
lret
outsb
ss
les
mov
std
insl
adc
sub
cmp
sbb
or
sbb
jmp
push
and
pop
pop
xor
mov
sub
addl
adc
jb
and
pop
inc
add
sub
cmp
ds
movb
inc
push
test
call
hlt
test
mov
and
sbb
mov
adc
addr16
aaa
les
notb
mov
jae
out
out
lods
cmp
loop
jmp
paddd
fnstcw
pop
mov
pop
push
nop
push
or
js
rcrl
sbb
negb
sar
in
sbb
sub
cmp
ja
and
add
sub
or
arpl
or
mov
xorl
inc
push
and
jb
add
push
or
inc
xor
fistps
inc
add
jo
ds
xlat
add
sbbb
pop
cmp
popf
stos
je
mov
sub
add
or
or
pop
jmp
dec
push
sub
mov
or
pushf
mov
das
dec
adc
jae
cmp
movsl
pop
ss
sbb
pop
leave
movsb
and
mov
jnp
pop
push
jb
xchg
lds
mov
cld
sub
and
mov
subl
gs
xor
pushf
sub
flds
inc
test
mov
js
mov
add
adc
in
pop
push
ja
dec
mov
rolb
pop
pop
cmpl
push
ljmp
fadd
call
test
adc
mov
repnz
fidivl
push
jae
add
jle
les
clc
fisttpl
sub
lock
shlb
or
adc
adc
jo
sub
js
scas
jl
adc
mov
pop
rdpmc
inc
inc
xchg
push
inc
out
or
pop
jbe
dec
adc
xchg
pop
leave
push
nop
ss
mov
popa
push
insl
in
cmp
sub
push
fs
push
pop
inc
enter
xor
sbb
jmp
int3
mov
jbe
cmpsb
mov
fbld
and
pop
cmp
xor
rcrb
test
orl
dec
sbb
sbb
sub
pop
ficompl
xchg
add
aaa
push
or
or
pop
mov
adc
lds
add
lock
ss
clc
pop
push
and
mov
mov
adc
cmp
dec
push
and
adc
and
icebp
adc
popa
mov
mov
jb
sbbl
jno
fucomi
add
ja
add
jae
es
orb
adc
orl
stos
cmp
add
nop
cmpsl
inc
sub
xor
sti
pop
out
and
xor
repz
mov
or
or
cltd
stc
xor
shll
cmp
and
or
cmc
dec
xor
xlat
mov
ret
sub
sbb
jo
mov
add
loope
sbb
xor
mov
js
or
dec
jnp
mov
adc
and
and
inc
push
out
jb
aas
add
aas
imul
shl
dec
xchg
push
push
mov
bound
pop
xchg
test
add
shll
dec
pop
push
sti
add
pop
jbe
rolb
sub
and
push
mov
sbb
ds
inc
fs
movsb
jbe
adc
mov
add
sbb
inc
inc
test
pop
push
scas
pop
jb
cmp
pop
daa
test
xorl
and
sub
or
add
pushf
ret
sub
sub
mov
sarl
dec
inc
add
xor
pop
cld
cmp
push
loopne
push
stos
adc
push
mov
add
add
gs
jne
ficoms
jmp
pop
mov
jne
mov
int
fldenv
cmc
and
jmp
data16
push
dec
adc
insb
stos
inc
mov
movsl
or
cmc
test
iret
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
or
push
out
das
jns
cwtl
movsb
loop
lods
inc
sbb
addb
cmp
cli
jg
jmp
jge
adc
and
jl
cli
push
xor
mov
jnp
add
add
mov
es
push
aaa
and
pushf
es
ret
roll
push
mov
dec
inc
mov
pop
and
jno
sbb
and
nop
and
loopne
test
add
cs
and
inc
push
loope
std
dec
or
and
call
inc
test
in
mov
dec
and
jno
dec
cmp
inc
mov
fdivl
bound
loopne
nop
jmp
sub
mov
sbb
jb
cwtl
push
pop
in
adc
pop
lahf
pushf
push
jge
jl
in
jl
repnz
push
push
or
adc
push
or
mov
fldenv
arpl
xchg
add
xchg
xchg
imul
sbb
test
pusha
cmp
dec
cmp
arpl
lsl
push
or
cmp
jne
push
jno
sarb
xor
mov
ja
dec
loopne
inc
sbb
push
insb
dec
insb
test
inc
xor
push
loop
imul
int
mul
ss
shll
or
jle
push
sbbb
pop
dec
mov
push
movl
inc
push
outsb
popf
sub
add
outsb
inc
or
xor
pusha
push
xchg
or
rcrb
xchg
cmp
cmp
repz
xorb
push
lcall
or
and
sti
xor
inc
cmp
in
or
scas
pop
sub
mov
pop
cmp
mov
cvtps2pd
add
and
sub
jg
dec
test
loopne
mov
movq
movaps
xchg
push
clc
jae
xor
jle
xor
cli
movsl
cli
test
movsb
je
mov
imulb
outsb
jl
and
lret
or
jg
cld
in
adc
ret
adc
jnp
mov
popa
sbb
cli
clc
pop
sub
ret
or
mov
imul
xorb
xchg
repnz
roll
add
fistpll
dec
jo
addps
int
add
sbb
nop
adc
dec
sbb
inc
xchg
and
jmp
outsl
sub
nop
jbe
clc
ja
test
add
add
xchg
mov
push
mov
and
pop
incl
xor
pop
out
cld
xchg
or
push
ljmp
mov
jnp
cmp
pop
jp
popa
repnz
loope
or
xchg
dec
daa
mov
loope
ret
gs
push
movsb
and
or
ret
xchg
rolb
and
jbe
xchg
mov
int3
mov
clc
std
rcrb
inc
ds
ret
fisttps
enter
dec
pop
divl
mov
mov
mov
mov
add
leave
movsl
push
dec
je
or
push
inc
test
sub
mov
inc
inc
or
push
sarb
mov
call
movsl
inc
xchg
sbbb
mov
mov
cmp
jne
inc
and
sahf
mov
lods
add
xchg
sub
daa
rorl
daa
xor
cltd
push
arpl
adc
mov
sbb
je,pn
cmpsl
loop
xchg
sbb
ds
call
add
aam
mov
stc
aam
add
stos
popa
loop
dec
xor
shl
mov
hlt
fcomi
adc
pop
das
arpl
imulb
cmpsl
push
xchg
adc
call
mov
pop
mov
gs
vmovups
inc
hlt
inc
cvttps2pi
mov
or
xor
adc
adc
jne
inc
cmp
add
inc
xor
incl
mov
or
popa
cmpsb
pop
dec
int3
push
push
adc
mov
mov
das
cmovns
inc
arpl
or
sysexit
cli
pop
adc
pop
inc
inc
cmp
lock
add
pop
loopne
add
out
add
lea
iret
fwait
dec
sahf
dec
adc
push
add
push
push
lock
lret
aam
jo
mulb
adc
or
mov
rolb
mov
inc
in
push
addl
lods
pusha
mov
cmp
push
sbbl
fdivrs
imul
hlt
cmp
fimull
lods
outsb
pushf
mov
add
enter
sub
sarl
sub
add
ret
in
jge
out
adcl
or
dec
leave
sbb
or
and
insl
or
inc
pop
cmp
mov
mov
je
add
ret
vpmuludq
cmp
aam
lret
jne
sbb
jg
loopne
shl
jmp
jnp
pushf
push
das
sbb
mov
shlb
mov
xchg
sub
sub
add
dec
out
and
seta
xor
add
ljmp
add
je
add
stc
add
loopne
sbb
sbb
or
ret
jbe
cmpsb
hlt
aam
or
lcall
sub
jae
shrl
xchg
mov
inc
xchg
inc
adc
jl
scas
inc
sub
lds
xchg
in
jmp
insb
ja
nop
or
pusha
mov
mov
cmp
sbb
jmp
call
incb
push
into
add
shufps
mov
jns
fmuls
fdivs
add
add
xor
je
ret
jbe
mov
jb
sti
outsl
sbb
mov
sub
add
jmp
mov
dec
mov
mov
dec
mov
mov
inc
lret
mov
jo
or
adc
pop
arpl
mov
jmp
push
aam
push
cmp
sbb
enter
push
cmp
push
imul
xor
or
mov
inc
and
sti
add
jne
jnp
sub
mov
mov
adc
aam
add
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
in
push
lcall
lahf
divl
adc
push
dec
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
cld
loopne
cltd
ret
pmaxub
xchg
ret
adc
in
in
push
dec
or
cmc
push
movb
mov
adc
stc
hlt
or
inc
mov
jle
rep
cs
pop
ret
jb
xchg
enter
je
push
subb
mov
or
sahf
cmp
stos
or
dec
ficomps
xchg
push
cmpsb
aad
push
xchg
adcl
and
andb
add
adc
jb
outsl
pop
or
lea
push
shll
cltd
or
add
popl
push
jo
pop
adc
pop
mov
ljmp
pop
jg
add
mov
mov
addl
pop
lret
cmpb
and
pop
add
lret
push
and
sub
dec
mov
fcoml
les
pop
jle
push
push
pop
div
jb
mov
ja
test
adcl
xor
sahf
loopne
mov
lods
mov
loopne
pop
sub
pop
adc
push
fdiv
sbbb
clc
pop
pop
or
add
sub
sub
enter
call
das
adc
mov
add
sub
adcb
loope
xor
nop
lods
mov
leave
or
clc
outsl
adc
dec
pop
xorl
push
mov
cmc
mov
cmp
xlat
add
xchg
sbb
subl
je
xchg
bound
adc
mov
add
and
and
dec
aaa
es
into
cmpl
dec
cmp
rcl
popf
xor
inc
fstl
jg
push
mov
inc
jmp
cmp
jne
orl
jmp
adc
addb
jne
sub
test
add
test
and
cmp
adc
movsb
push
xor
add
or
stos
mov
pop
and
or
fbstp
jne
pop
jne
dec
add
add
lds
sbb
pop
in
push
xor
or
test
sbb
lret
sub
mov
sti
jmp
test
mov
sub
cmp
ja,pn
xor
add
outsb
sbb
leave
cmp
jae
push
movsb
and
add
ljmp
test
push
je
fadds
loope
sub
pop
cld
imul
add
inc
mov
and
nop
test
jne
test
jne
loopne
mov
xor
or
sub
es
imulb
add
test
push
int
mov
mov
pop
pushf
add
and
stos
into
mov
or
xor
adcl
jmp
inc
xor
mov
xchg
cmp
in
clc
cmp
jmp
mov
movl
sub
popa
push
sub
popf
dec
mov
testb
loopne
stc
insb
jbe
loopne
sbb
rcll
lea
stos
mov
pusha
or
movsb
mov
sbb
rorb
pop
sub
test
jo
mov
lods
jno
jbe
or
add
mov
mov
mov
loop
jne
idivb
jae
addb
jmp
rcrb
mov
or
or
adc
sbb
rcrb
or
jecxz
lea
sub
rcrl
push
in
xor
hlt
mov
inc
add
sbb
sbb
inc
xor
sbb
adc
push
mov
push
mov
add
loope
jmp
push
push
mov
es
rcr
xor
push
repnz
push
mov
xchg
add
mov
enter
lods
cmp
sub
jno
lock
fdivrl
push
dec
push
jo
add
adc
inc
pop
adc
or
jle
or
xor
mov
aam
add
add
adc
lock
or
cmpsl
loope
int3
xchg
and
add
movsl
cli
jae
fwait
mov
addb
dec
adc
add
xchg
fs
sbb
mov
inc
adc
fidivs
sub
pop
push
adc
xchg
in
mov
and
int
jbe
std
pop
shlb
stc
sub
in
push
adc
push
pop
dec
imul
mov
mov
enter
and
push
cwtl
and
gs
and
rclb
mov
dec
push
mov
scas
mov
inc
jns
icebp
out
popa
jne
push
out
cmp
add
insb
sbb
or
xchg
adc
pop
inc
add
data16
or
iret
shl
pop
adc
pop
ret
test
push
push
movsl
cld
or
mov
pop
inc
adc
pop
add
xor
xor
call
popa
cld
xchg
in
pop
adc
mov
push
das
popa
subl
xchg
and
stos
inc
fadds
mov
fildl
hlt
add
daa
call
fadds
mov
push
addb
pop
or
xor
lds
mov
inc
cmc
movb
sub
leave
cmc
pop
ja
sub
std
add
arpl
dec
insb
xor
push
push
pop
or
notb
mov
or
or
ljmp
adc
clc
test
dec
pop
cmpsb
ret
dec
xchg
loope
pop
lahf
push
mov
push
loopne
push
or
in
aad
xchg
cmpsb
mov
popf
adc
sub
decl
ja
fidivrs
repz
pop
pop
jne
mov
push
adc
shrb
push
call
insl
push
data16
jle
js
fstpt
mov
popf
xchg
pop
call
loopne
daa
and
mov
lock
adc
inc
cpuid
pop
add
cmovp
cwtl
jl
movaps
or
in
jl
cmpl
repnz
mov
or
add
pop
pop
or
and
ret
push
or
mov
inc
push
mov
xor
lds
in
ficoms
pop
je
push
or
mov
cmp
daa
push
sar
lods
adc
insb
fnstcw
and
dec
sarb
sbb
mov
mov
pusha
pop
mov
popf
or
jne
dec
pop
fmuls
inc
xchg
jo
fdivrl
loopne
out
add
cmp
jb
xor
in
pop
cmc
in
std
sbb
ss
jp
and
xlat
test
sub
aas
push
add
push
cmpsb
faddl
ret
jmp
push
xor
clc
pop
hlt
mov
push
xor
and
lods
sub
lds
inc
rcll
iret
or
sbb
adc
loope
imul
je
sub
sbb
test
sbb
rorb
pushf
or
int
insb
adc
mov
sub
lds
leave
leave
xchg
push
push
inc
mov
fistpl
sub
pusha
xor
add
and
bound
and
cmpsb
cwtl
add
xchg
out
xor
out
add
dec
jne
mov
push
jne
jbe
inc
jne
mov
sbb
hlt
je
mov
jbe
test
add
adc
aam
push
ja
fucomi
shll
mov
and
in
enter
rcl
test
pop
inc
pop
or
mov
mov
in
dec
shl
or
into
imul
out
push
push
pop
push
inc
or
adc
ss
mov
or
imul
dec
inc
mov
test
or
add
dec
fcompl
jo
ret
push
push
std
lret
gs
push
outsb
add
bound
int
dec
in
add
mov
jmp
inc
inc
pop
jno
push
and
sbb
pop
aad
jmp
push
nop
in
mov
movsb
xor
dec
jg
sub
adc
push
push
pop
jle
mov
xor
fdivr
cmp
je
movzbl
add
sub
xchg
fisubrl
ret
lea
repz
mov
clc
shrb
jo
pop
add
repnz
add
cmpl
adc
adcb
add
xchg
lcall
flds
add
inc
push
mov
pusha
in
pop
push
pop
repnz
lcall
or
iret
enter
or
repnz
or
push
and
enter
loop
and
rclb
or
or
in
push
mov
cmp
xchg
cwtl
push
push
ja
or
sbb
push
rsqrtps
jnp
int
adc
pusha
adc
sub
adc
repnz
adc
adc
add
nop
out
adc
add
nop
ja
adc
lcall
adc
pop
enter
push
push
pop
out
test
xor
in
jns
sbb
lcall
sbb
call
add
sbb
sbb
aaa
xchg
inc
enter
sbb
je
or
sbb
sbb
xlat
dec
jge
sbb
nop
out
push
inc
push
pop
incl
jns
jne
add
add
sub
cmp
jae
xor
movl
xchg
outsl
add
dec
dec
and
add
inc
add
xchg
out
std
in
push
in
jno
repnz
sub
rol
enter
lea
aad
cmp
add
cmp
mov
cmp
fwait
out
push
push
lock
add
mov
aaa
jb
je
call
and
popf
dec
cwtl
jmp
add
mov
ljmp
sbb
out
in
cmp
xorl
cltd
mov
mov
out
xor
cmp
jge
lcall
lock
push
nop
inc
lock
addr16
jns
pslld
seto
out
std
repz
cmpsb
repnz
std
hlt
hlt
roll
fdivs
or
fwait
mov
jnp
inc
jg
idivb
sbb
pop
idivl
dec
push
jns
cmp
clc
clc
mov
cltd
adc
inc
stc
enter
lock
cli
cli
and
and
iret
sti
sbb
fcoml
cld
cld
cld
je
cld
push
push
mov
push
setle
cltd
xchg
testl
adc
push
ficompl
shrl
movb
lahf
in
pop
cmp
or
cmp
or
imul
mov
std
sti
in
in
fisubrl
mov
stc
daa
xchg
sti
orb
out
repnz
outsb
call
mov
inc
sub
sbb
pop
jmp
jmp
inc
pop
xchg
pop
in
add
cli
popf
cli
sbb
js
out
out
jno
sbb
out
cltd
push
lock
cli
push
cli
imul
stc
repz
rolb
cltd
sar
xchg
or
push
stc
stc
xchg
inc
pop
dec
fstpl
testl
negl
fwait
in
xlat
enter
adc
mov
mov
clc
cmp
lret
sti
sti
cltd
add
pop
mov
insl
push
in
or
clc
mov
sbb
out
dec
and
mov
sub
and
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
inc
cli
imul
mov
sub
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
xor
sbb
jmp
hlt
ds
cmp
xchg
movsl
aas
inc
add
les
repz
sub
or
fwait
int
inc
test
dec
or
inc
jns
dec
mov
inc
push
jp
pop
data16
int
xrelease
cmp
inc
xlat
inc
clc
dec
ds
repz
cmp
imul
rol
lods
mov
add
xchg
loope
cmp
and
add
adc
push
inc
in
clc
jle
rolb
test
jp
insb
or
filds
jb
test
mov
jae
or
je
int
imul
push
adc
mov
dec
jecxz
adc
mov
push
imul
mov
sbb
dec
filds
adc
inc
dec
lods
add
and
push
loopne
pop
fstpt
je
push
dec
pop
pop
movsb
test
repnz
data16
mov
or
inc
decl
sub
sbb
fcom
mov
sbb
fmuls
and
add
xor
rep
sub
add
iret
push
sbb
aam
gs
or
add
or
inc
bound
lea
scas
jmp
sbb
add
imul
push
mov
mov
mov
dec
pop
and
push
addb
sbb
aas
add
jo
mov
add
mov
jmp
rorl
mov
push
rep
mov
dec
ljmp
pop
or
je
loope,pn
cmp
xor
jge
jno
dec
and
mov
jmp
inc
and
in
inc
popf
aas
shr
fdivrs
int
loopne
in
dec
movsb
or
rcrb
fdivrp
add
je
xor
inc
clc
sbb
rclb
insl
mull
pop
add
adc
cmp
jb
pop
es
push
adc
shlb
sub
mov
inc
inc
es
push
lock
cmp
enter
fsubr
xor
push
sbb
cs
inc
push
inc
and
gs
test
add
or
cmpsb
das
push
les
test
push
cmp
subb
pop
sbbl
lds
ficompl
add
mov
roll
into
enter
and
mov
add
sbb
fs
cwtl
dec
jmp
and
aaa
sbb
mov
lret
pop
out
jne
sub
push
movsb
adc
cmp
outsl
adc
add
sbb
fimull
callw
inc
cmpsb
add
repz
sub
xor
jmp
mov
scas
xor
xchg
repnz
ja
insb
push
stc
aad
mov
sub
pop
jp
cmp
push
push
jmp
sbb
push
out
pop
dec
outsb
out
jns
mov
dec
mov
adc
adc
mov
lcall
inc
adc
ja
orb
cmpb
xor
jb
add
mov
push
adc
lods
in
popf
mov
pop
popa
pop
ficompl
inc
jmp
in
repnz
daa
bound
xchg
jmp
lret
jns
or
clc
out
or
cmpsl
pusha
add
clc
out
add
aad
jmp
stos
add
testb
push
insb
rcrl
sahf
jns
adc
add
js
add
mov
fimuls
loopne
push
dec
jne
add
cmpsl
push
mov
xor
inc
adc
popa
sub
add
fiadds
add
sbb
insb
insl
pop
incb
or
js
sub
adc
jno
cmc
mov
js
shlb
mov
xchg
push
adc
push
pop
and
ret
xchg
cmovs
mov
lods
lock
call
hlt
or
rep
sub
add
addb
sub
or
mov
enter
push
lea
sbb
frstor
pop
cmp
int
or
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
repz
push
pusha
push
pop
push
dec
inc
cmp
inc
mov
mov
call
out
in
lock
hlt
xchg
je
out
clc
cld
lock
insb
aas
inc
lea
add
fldenv
sbb
out
jmp
and
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
and
fsts
rclb
stc
out
in
xchg
xchg
sub
pop
nop
xor
pop
push
subb
cmp
add
out
add
out
add
ficoms
push
add
imul
pop
add
pop
cmp
ljmp
xor
push
faddl
in
hlt
cmp
mov
pop
pop
aaa
sbb
repz
repz
adc
adc
repz
adc
or
add
xchg
cmp
push
icebp
jns
dec
pop
pop
aaa
push
add
pop
jl
ja
cmp
clc
mov
xchg
jbe
push
mov
idivl
mov
incl
inc
decl
jne,pn
pop
pop
lods
jne
and
cld
cmp
xor
jbe
push
cltd
pop
idiv
sub
pusha
or
mov
add
ja
in
sti
adc
adc
test
cmp
jae
dec
data16
or
pop
jae
pop
jbe
xor
adc
dec
or
loope
ret
add
sub
adc
popa
jecxz
pop
hlt
in
cmp
adcb
mov
jmp
dec
dec
sbb
insl
cwtl
pop
call
or
sbb
sbb
dec
dec
je
push
push
daa
and
leave
push
xchg
mov
xchg
insb
adc
push
mov
pushf
movsw
jns
negl
or
repz
xchg
inc
dec
in
xchg
inc
lcall
xchg
mov
adc
pop
xchg
in
filds
inc
cltd
push
ds
addb
pop
add
mov
test
push
pop
bound
push
adc
fimull
and
mov
stos
inc
add
mov
pushf
xchg
arpl
jmp
cmp
cmp
ja
insl
sbb
fnstsw
or
aas
jge
stos
sub
pop
cltd
pop
idiv
sub
inc
xor
xchg
inc
out
cmp
fs
dec
jb
jmp
or
adc
mov
pop
jle
pop
imul
inc
cmp
fidivrl
shlb
jbe
insl
mov
shll
adc
fisubrs
or
je
insb
sub
and
sbb
xchg
dec
pusha
and
jae
aaa
add
push
adc
shrb
jbe
sbb
pop
incb
inc
jns
adc
mov
dec
incl
pop
pop
pop
jl
dec
sti
cmp
pop
sub
repnz
and
rolb
dec
hlt
add
dec
mov
mov
add
cltd
popf
push
mov
push
ja
or
push
jmp
jge
add
pop
je
sbb
jl
xchg
popl
cltd
insl
mov
jno
mov
mov
push
enter
in
or
jge
je
push
push
inc
jg
jne
mov
lds
fiaddl
rolb
push
enter
lret
bound
lcall
pop
fstl
js
or
jecxz
dec
or
pop
push
movsb
push
or
xor
mov
adcl
inc
pop
cmp
sbb
int
pop
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
in
mov
test
jno
aaa
and
mov
adc
sbb
fsubrs
ret
push
je
lods
mov
mov
push
movsb
xchg
add
sbb
mov
sub
dec
ret
adc
jge
loop
clc
sbb
dec
cmp
push
push
cld
mov
xchg
push
adc
push
idivl
inc
adc
or
adc
jns
out
call
lea
add
sbb
rcrl
inc
sbb
rol
leave
jg
xor
mov
push
pop
mov
push
push
mov
or
mov
dec
subb
sbb
mov
adc
xor
add
push
mov
mov
mov
add
push
dec
or
hlt
inc
jg
sbb
adc
insl
and
mov
call
mov
clc
mov
inc
inc
cmp
je
mov
push
stc
fs
jae
cli
orb
adc
add
sbb
jle
dec
je
inc
mov
popa
daa
ficoms
fidivl
sbb
mov
pushf
pushf
imul
mov
adc
push
incl
clc
push
push
mov
push
inc
sbb
repnz
dec
daa
fwait
cmpsb
test
lret
pop
sbb
lods
mov
xor
mov
or
dec
add
or
xchg
fists
sbb
push
jmp
cmpsl
mov
add
dec
sub
or
outsl
movsl
add
mov
addr16
push
js
ret
pop
test
and
xchg
insb
or
cmp
je
mov
add
add
scas
inc
and
mov
inc
or
add
push
orl
inc
int
movsl
sub
enter
push
roll
mov
in
cs
sbb
dec
mov
jb
jns
sahf
dec
pop
lcall
push
dec
mov
out
adc
xchg
cmp
sbb
ror
add
roll
mov
push
bound
jne
jmp
cmovge
sub
add
add
jmp
das
dec
jmp
or
rorl
mov
mov
sub
mov
and
adc
shl
rclb
loop
loopne
push
pop
insl
pushf
ret
daa
call
call
push
div
gs
repz
lahf
xor
in
or
dec
js
and
fwait
fs
xchg
movsl
push
bound
and
outsb
or
adc
mov
cmp
inc
sbb
dec
pop
and
mov
push
add
xchg
stos
js
divl
mov
sbb
inc
push
jmp
cmp
mov
fs
inc
or
scas
add
inc
inc
dec
sahf
jmp
mov
hlt
mov
jbe
jecxz
jge
mov
ficoms
and
mov
and
pop
add
pop
jmp
rolb
scas
inc
jmp
aas
pop
push
jmp
pop
push
cmp
mov
int3
pop
and
inc
pop
jmp
mov
jns
jmp
push
imul
sbb
add
and
mov
out
push
xor
and
data16
addr16
or
insb
add
adc
jmp
mov
pop
mov
xchg
push
popa
sub
cltd
add
cmp
int3
cmp
clc
jecxz
stc
sbbb
mov
movl
sbb
ds
jmp
pop
arpl
pop
xchg
push
jno
mov
mov
cld
out
xchg
hlt
loop
fs
mov
inc
lds
mov
mov
les
cmp
lret
mov
lahf
adc
mov
cld
adc
sbb
cld
out
push
or
pop
hlt
ljmp
shrl
in
inc
or
xchg
pusha
inc
ljmp
mov
pop
repnz
push
js
adc
inc
cli
stc
cmp
jge
and
sbb
and
aas
add
loop
add
push
push
push
andl
fcompl
mov
nop
sbb
xor
imul
sbb
add
cmpsb
in
and
push
sub
popa
out
ret
into
gs
push
and
insl
clc
stc
xor
push
nop
ds
sahf
enter
lods
gs
sub
or
shlb
cmp
mov
aam
pushf
enter
push
enter
fmuls
daa
jmp
mov
pusha
lcall
rcrb
inc
lcall
adc
inc
and
jl
sub
insb
jmp
push
cmp
ret
lret
mov
adc
cmp
hlt
or
push
add
push
xchg
pop
push
jg
jo
lods
adc
stc
arpl
imul
cmp
lea
loope
fsubrp
les
mov
pop
xor
andb
dec
imul
loopne
add
cmp
out
xchg
fiadds
rclb
add
inc
adc
out
xchg
lret
mov
sbb
lock
ja
jbe
pusha
mov
jmp
insl
js
popa
ret
pop
call
cwtl
bnd
sub
mov
jo
inc
sub
mov
or
repnz
push
outsl
dec
nop
inc
mov
pop
out
jne
pop
dec
sbb
jbe
xchg
push
xchg
cmp
jp
inc
adc
ja
cmp
push
pop
xor
rorb
rcrl
fcoms
shl
hlt
add
inc
sbb
push
gs
out
sub
call
shrb
pusha
sbb
jmp
jne
shll
or
pushl
in
sub
sbb
or
mov
adc
jnp
push
or
and
mov
imul
and
loop
adc
ret
adc
inc
dec
les
push
sbb
mov
sub
cmpsl
insb
push
arpl
mov
inc
add
ret
push
cmp
lock
add
lahf
inc
adc
in
daa
add
push
xor
call
or
jecxz
mov
je
add
iret
xor
push
pop
mov
rorb
mov
jo
inc
mov
test
fs
lock
pop
repz
adc
dec
mov
sbbb
add
dec
xchg
xchg
pop
es
push
cmc
add
cwtl
xlat
add
ljmp
jg
pop
inc
adc
fdivrs
in
xchg
or
inc
and
add
adc
hlt
sti
jo
pop
shrb
jle
std
inc
pop
jne
cmpl
adc
shlb
xor
nop
int3
call
xor
sbb
data16
and
or
mov
pop
test
or
rolb
lock
mov
cmp
loop
mov
lret
test
clc
fdivr
pop
sub
sub
mov
adc
sub
mov
data16
sbb
das
add
adc
popl
dec
push
lods
cmp
add
inc
fisubrl
pop
test
push
movl
cmp
imul
dec
popa
pusha
add
jge
fisubl
adc
loope
or
dec
xchg
mov
es
insb
in
popa
into
sbb
loopne
lock
inc
push
dec
mov
popa
fwait
cmc
pusha
sub
je
pop
or
sbb
ja
adc
or
push
ret
xchg
or
push
cwtl
push
fadds
xchg
add
inc
sbb
bound
mov
lods
shll
clc
shl
or
ret
mov
pusha
insb
and
into
mov
or
dec
jne
lea
subl
dec
add
xchg
sbb
nop
pusha
es
call
pop
in
in
mov
jo
sti
mov
inc
pop
js
mov
imul
mov
and
and
popf
out
xor
mov
and
ja
sub
scas
nop
out
push
int3
xchg
or
cltd
inc
pusha
loop
xchg
testl
cld
ficoml
and
or
push
dec
mov
xor
sub
push
cmp
lock
cld
lcall
add
cmp
out
push
orb
mov
sub
xchg
lret
and
sbb
add
mov
fucomp
mov
mov
mov
adc
test
cmp
jmp
or
push
roll
cmp
push
add
and
jmp
gs
rolb
sub
jns
pusha
stc
jmp
fsubrs
mov
adc
mov
mov
jo
jg
or
ja
orb
add
mov
pop
push
pop
or
cwtl
insl
inc
cli
cmp
push
ss
aas
or
cmp
sub
push
mov
dec
test
fisubrs
mov
rolb
in
push
daa
popa
cwtl
cmp
stos
sub
cmpsl
gs
add
cmp
sub
inc
cmpsb
jge
in
jne
loopne
fldt
jmp
enter
adc
inc
lret
sarb
add
or
sub
xor
mov
test
push
or
cmpl
mov
popa
iret
clc
in
xor
xchg
inc
cmp
adcl
push
jmp
adc
mov
fsub
push
add
in
push
adc
sbb
or
push
dec
les
jo
push
call
pop
sub
xchg
lea
mov
cmc
push
sahf
sub
lds
cmp
leave
inc
xor
dec
jno
hlt
imul
lea
lods
mul
add
pop
cmp
jmp
loopne
adcb
cmp
mov
hlt
ljmp
or
cmpl
add
jb
mov
xor
inc
and
mov
jnp
and
inc
or
adc
mov
inc
mov
mov
inc
dec
jne
mov
inc
pop
cmp
nop
mov
sbb
divb
pop
push
push
mov
inc
dec
jne
cmp
test
or
sbb
hlt
gs
cltd
add
jmp
cmp
ss
nop
cmpsl
jmp
push
jge
dec
loopne
adc
add
mov
xchg
or
mov
mov
sahf
mov
adc
inc
mov
sbb
pop
ror
push
xchg
test
pop
mov
pop
loopne
mov
cmpsb
test
jbe
inc
adc
push
ss
adc
ss
cmp
pop
or
cli
pop
test
push
sub
pop
loope
repnz
and
fs
push
or
mov
test
add
loopne
jbe
out
ja
inc
pop
sub
jmp
xor
stos
add
sti
sbb
mov
xor
add
lret
bound
ret
ss
push
out
arpl
pop
sbb
jno
push
pop
ja
es
nop
ret
xchg
rolb
mov
out
inc
and
ret
aam
sbb
lret
jge
leave
cmpl
or
push
and
pop
movl
mov
add
mov
outsl
cmp
es
pop
sahf
xchg
insb
mov
adc
das
fmull
pop
pushl
inc
pushf
cltd
push
dec
mov
call
not
das
adc
mov
call
inc
xchg
int3
xchg
dec
pushf
subb
and
sbb
jle,pt
aam
pop
cmp
or
hlt
inc
xorl
out
jle
rep
mov
cmpl
test
pop
cmp
cwtl
shlb
inc
add
bound
add
or
sbb
push
xor
pusha
aaa
inc
mov
inc
mov
rorb
sub
fsubrs
jnp
or
cmp
adc
movsl
sub
addb
or
mov
dec
mov
mov
add
mov
xor
out
sub
mov
lcall
ss
pop
in
test
in
sbb
push
pop
jbe
xchg
jb
dec
test
ret
push
or
sbb
jo
arpl
add
loope
adc
and
ds
sub
daa
dec
adc
rcll
mov
jbe
pop
mov
mov
andl
mov
push
cmp
rclb
imul
ret
mov
addl
fnsave
sbb
in
rclb
pop
mov
push
inc
xor
out
push
pop
cmc
and
dec
push
cld
test
outsl
jmp
cs
dec
out
ljmp
or
adc
cmp
movl
rcrb
roll
sub
in
scas
sbbb
or
aas
js
in
fimuls
decb
nop
jb
add
mov
mov
subb
push
rcl
pcmpgtd
cwtl
and
mov
lods
xchg
pop
jmp
sti
lret
insb
push
cld
lret
sbb
push
jo
add
mov
lcall
shrd
xchg
xchg
or
push
arpl
icebp
cmpsb
insb
push
mov
cmp
bound
mov
fnstcw
outsl
add
sbb
pop
flds
mov
rol
dec
push
push
lock
fstps
cmp
dec
sbb
xchg
add
jns
pop
or
dec
add
orl
nop
or
out
xor
not
movsb
sub
push
xor
inc
mov
ds
mov
data16
clc
inc
and
sub
sub
and
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
lcall
push
ud0
test
dec
push
ds
xchg
movsl
add
and
in
stos
mov
je
jle
or
jne
adc
pop
insb
mov
shll
addl
addb
rcrl
outsl
mov
test
mov
cwtl
into
mov
cmpl
popf
mov
push
cli
lods
movsl
imul
mov
daa
test
sti
adc
ja
dec
ja
popf
and
xor
out
mov
xchg
mov
xor
jbe
mov
pop
pushf
cwtl
mov
and
aaa
inc
mov
gs
xchg
mov
sub
inc
add
sbb
outsb
push
je
mov
jmp
pop
inc
sub
stos
push
dec
mov
lea
rorl
sbb
mov
popf
jbe
mov
gs
fcoml
shl
in
addr16
clc
or
icebp
out
in
les
popl
xchg
out
pop
add
shr
cs
test
enter
dec
cld
xor
andl
aam
adc
jno
xchg
mov
lock
add
lea
xchg
push
mov
aam
cmp
sbb
jge
and
jmp
pop
clc
add
add
call
add
fadd
lods
xchg
add
dec
jl
mov
or
jmp
mov
and
dec
es
mov
jae
js
mov
jg
push
dec
and
inc
jg
jle
adc
imul
push
test
pop
and
xor
repz
or
push
adc
dec
jl
iret
add
jle
call
inc
pop
fsts
adc
lahf
xlat
jmp
jg
test
push
rolb
dec
cmp
jg
nop
in
adc
addb
adc
sbb
and
rolb
cmp
or
push
xchg
pushf
movsb
lods
mov
and
movl
call
mov
add
adc
inc
cld
lods
sbbb
cs
mov
icebp
push
push
mov
pop
xor
dec
pusha
jmp
sub
or
add
add
mov
jle
cld
popa
adc
and
jne
cs
pop
adcb
add
mov
pop
fiadds
outsl
sbb
adc
scas
adc
inc
adc
add
and
jl
sub
lds
test
sbb
or
xlat
inc
stos
and
insl
mov
stos
mov
mov
addl
cmpsb
hlt
mov
and
mov
and
fwait
xor
daa
and
xchg
rorb
push
enter
push
jbe
or
inc
or
je
add
dec
dec
adc
xchg
mov
pop
dec
push
nop
jae
jl
or
sbb
push
daa
push
push
add
jmp
andl
add
je
ret
lds
movl
add
jmp
adc
xor
and
push
or
adc
bound
cmp
adc
mov
adc
push
pusha
jecxz
sbb
in
xchg
enter
cmp
add
adc
out
into
loop
js
outsl
push
sahf
loope
xchg
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
inc
or
lock
movl
jns
outsl
push
mov
mul
lret
mov
jecxz
or
jmp
cmpsl
imul
jp
pusha
in
inc
add
inc
mov
ja
and
sub
push
loop
sysret
daa
xchg
adc
cld
adc
jl
and
rcrb
shlb
loopne
mov
adc
adc
push
add
add
mov
mov
add
fnstcw
dec
mov
or
sbb
lea
inc
cmp
push
push
mov
pop
push
pop
jo
test
dec
jbe
js
push
mov
imul
sbb
xor
fimuls
loope
jmp
push
dec
or
dec
sbb
repnz
incl
and
inc
ss
pop
dec
in
hlt
push
xor
pushf
shrb
sbb
cmp
outsb
push
mov
mov
test
or
addb
dec
loopne
or
and
loopne
test
sub
es
push
test
test
xchg
push
insl
jno
xlat
lcall
adc
jbe
push
inc
pop
mov
repnz
jo
test
in
in
or
inc
ja
sub
jno
mov
std
inc
or
inc
pop
divl
in
stos
mov
ds
mov
into
sbb
clc
dec
xchg
xchg
xor
jmp
xchg
fs
ficoml
and
push
js
jns
dec
adc
cld
outsl
adc
sub
pop
inc
cli
add
add
inc
pusha
push
or
or
mov
and
movsb
es
mov
loop
jecxz
hlt
sbb
ret
and
dec
push
add
push
push
mov
loopne
and
push
inc
fsubs
cmp
fdivl
dec
ret
sbb
mov
sti
jl
or
sub
into
in
fadd
fcoms
cmp
pop
mov
cmp
push
push
mov
sti
loop
mov
mov
mov
cmp
leave
test
in
or
addr16
xchg
call
mov
jbe
stos
inc
adc
dec
xchg
rcrb
fildll
jo
imul
pop
ja
ss
jl
dec
icebp
adc
movaps
out
mov
sbb
sar
pop
mov
insb
xchg
mov
inc
pop
mov
push
lea
cli
mov
fcompl
jae
clc
fsubs
lret
scas
push
or
je
or
sub
je
cmp
test
scas
pushf
pop
or
notb
add
cmpl
or
adc
nop
cli
sub
sub
mov
or
aam
mov
mov
mov
stos
and
shr
lea
cltd
pusha
xchg
ja
movsl
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
push
in
je
or
inc
insb
je
inc
and
xor
subb
loope
insb
nop
pusha
sub
mov
sbb
pop
and
pop
fdivrl
pop
or
xor
mov
add
xor
rcrb
pop
add
fnstcw
arpl
or
imul
jae
cmc
jne
js
rorl
adc
mov
xchg
clts
mov
xchg
push
pop
mov
pop
shrl
push
sbb
jle
inc
pop
xchg
jns
je
pop
push
or
and
movsb
jge
ret
mov
lcall
dec
pop
imul
lock
test
je
push
dec
or
jae
dec
testl
jl
aaa
mov
das
mov
adcl
icebp
jge
pop
sbb
dec
and
das
xchg
pop
loopne
xchg
or
sbb
pop
or
es
sbb
mov
add
cmp
jnp
or
inc
inc
push
insl
cmp
ret
subl
xor
addl
sub
dec
ret
insl
xor
movsb
inc
or
push
add
sbb
mov
sarb
add
mov
outsl
testl
test
inc
pushl
addr16
push
insl
dec
loop
dec
add
setp
sub
cmp
mov
inc
xorl
pop
cmpsl
pusha
pop
ret
aam
mov
add
dec
popa
je
inc
cmp
notb
pop
clc
test
sub
push
ss
add
add
or
adc
jmp
scas
push
outsb
je
test
int
sbb
push
enter
cmpsb
popa
aas
add
pop
sbb
xor
sub
pop
movsb
sub
adc
mov
daa
xorb
or
adcb
xor
cmc
push
mov
into
ret
jg
jne
mov
jne
into
cmc
sti
movsb
mov
jmp
cmp
jle
insl
cmpl
incl
faddp
mov
push
int3
push
xor
int
or
data16
mov
out
call
shll
inc
cld
adc
int3
cwtl
cmc
mov
push
add
sub
js
push
test
inc
mov
mov
ret
jecxz
lea
stc
lcall
pop
test
mov
rcl
sub
adcb
pop
cmpb
jne
and
test
jge
push
push
add
add
and
cld
decb
inc
leave
std
inc
daa
add
movsl
rolb
mov
dec
lahf
shl
xor
sbb
push
sub
pop
test
push
lret
shlb
cmp
adc
inc
fbstp
mov
push
pusha
mov
cmpsb
jmp
out
or
je
sub
nop
rorb
je
mov
pop
jl
jae
sbb
rolb
jecxz
cmc
lds
mov
mov
ds
mov
je
test
jmp
clc
or
jne
and
lea
dec
ret
fstps
or
je
decl
mov
cltd
push
mov
mov
cmp
push
nop
xchg
clc
sahf
add
out
adc
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
fcomp
cltd
into
cmp
cld
scas
mov
shlb
xor
setg
or
jmp
dec
data16
or
push
inc
inc
cmp
pop
repz
push
sub
push
ss
gs
mov
jecxz
sbbb
push
jmp
mov
adc
test
cli
and
mov
adc
adc
cltd
sub
sub
pop
shlb
in
mov
xchg
xchg
out
xor
lea
sbbb
or
sub
push
mov
xor
lods
leave
ret
fdivs
jno
rcr
aaa
cmp
or
pushf
push
shll
nop
popa
jle
sbb
mov
push
sub
or
sbb
lea
pusha
sti
cmp
mov
das
or
daa
testl
sbb
adc
aas
icebp
sti
ret
movsl
daa
pop
mov
or
test
mov
sub
movsb
cmp
js,pt
outsl
add
jnp
lock
mov
add
add
mov
test
mov
loope
cmc
repnz
jbe
push
xchg
sarb
test
cmp
shlb
xlat
add
push
shrb
xchg
idivb
pop
sbb
push
incb
push
lea
mov
sbb
int
mov
mov
sbb
lcall
mov
push
push
mov
adcb
je
xchg
test
push
int
adc
js
inc
jl
or
fcoml
rcll
test
jne
push
aas
out
xchg
or
xor
pop
repnz
jne
xor
in
sub
adc
popa
sub
xor
cmp
or
xor
jb
push
adc
dec
jge
mov
daa
lock
mov
pushf
subb
inc
repz
test
lds
mov
movsl
or
lea
add
mov
adc
xchg
inc
leave
or
mov
imul
add
jmp
push
sub
xchg
add
fcompl
and
pop
fdivl
rclb
push
mov
fcoml
xchg
stos
cmp
sub
xchg
sub
cld
shr
mov
imul
jecxz
add
inc
pop
sub
or
lret
out
into
xor
sbb
mov
mov
mov
jb
mov
adc
dec
jne
sar
dec
cmp
jbe
push
pop
in
adc
or
cmp
jne
addb
pushl
mov
shr
lea
not
and
decb
jne
scas
jp
and
adc
mov
mov
push
pop
add
imul
pop
add
add
pop
and
adc
lahf
or
push
sub
jmp
lea
add
mov
shlb
and
sti
add
dec
add
nop
cmp
pop
cmp
std
sti
mov
mov
mov
imul
cmp
je
gs
jo
shlb
cmp
sti
pop
mov
shr
not
and
add
push
je
sub
mov
xor
cmp
das
mov
xor
push
imul
mov
xchg
xor
dec
push
xor
ficomps
mov
int3
inc
or
jnp
push
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
into
or
pxor
cmp
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
lea
add
aad
nop
sbb
repz
and
stos
pusha
push
sbb
std
addr16
es
add
scas
jp
outsl
das
sti
push
push
call
aas
gs
push
or
push
cmp
insb
cld
in
popa
sub
dec
inc
adc
inc
stos
mov
add
and
pushl
addr16
push
push
mov
xor
sub
push
rorl
mov
outsl
insb
push
adcl
out
aaa
ret
mov
add
xchg
insl
or
mov
fdivrs
inc
cmp
pop
adc
imul
adc
dec
or
cwtl
outsl
push
mov
lock
addl
adc
mov
icebp
push
push
jae
int
adc
mov
or
xor
jecxz
jne
jl
adc
push
fucomi
fwait
orl
pusha
mov
lds
and
or
shlb
jle
push
add
inc
ljmp
pop
sub
test
incb
pop
js
fs
int3
add
or
hlt
sub
push
sub
mov
mov
add
or
int
cmpb
mov
lea
stos
jo
cli
ja
sub
shr
jg
test
inc
orl
orl
adc
or
adc
out
mov
inc
cld
lock
call
jle
out
iret
dec
jne
je
clc
add
clc
fs
rcrl
jb
adc
inc
fs
inc
arpl
pop
mov
mov
lock
nop
dec
mov
cld
inc
jne
or
lds
not
and
subb
add
sti
or
jmp
dec
fwait
push
adc
mov
sub
sarb
mov
pop
sub
jb
cld
bound
icebp
scas
inc
jnp
push
mov
and
pushf
jle
clc
cmp
ret
int3
inc
call
add
fsubr
ljmp
stc
int3
push
push
subb
pop
mov
pop
orb
inc
stc
sbb
clc
sti
dec
in
rolb
es
add
cmp
add
or
mov
add
push
jns
add
pop
sub
into
add
inc
fidivrl
adc
pushf
sar
dec
mov
cltd
aaa
cs
fstpl
lea
pop
int
adc
or
mov
dec
shll
pop
pop
push
pop
imul
mov
data16
pop
outsl
jmp
aaa
js
test
push
ja
sub
xor
sbb
xor
out
out
and
mov
sub
sub
orb
jge
mov
pop
dec
inc
dec
insb
pop
xor
push
sar
dec
or
and
mov
pop
cmp
punpcklwd
xor
cmp
fdivrs
mov
fistps
sub
orl
cmp
ja
ja
sbb
ficoms
add
mov
jo
mov
loope
lea
mov
jo
fcompl
mov
lods
push
cmp
in
jb
lods
decb
into
mov
dec
cmp
rdmsr
cmp
xchg
arpl
movsb
or
sbb
mov
jp
insb
test
pop
push
add
loope
add
dec
inc
cmp
push
push
push
jge
mov
shr
adc
mov
mov
fsubrl
dec
or
mov
cs
nop
cmp
and
decb
xlat
jne
add
cwtl
jnp
xor
call
sbb
jg
jne
jmp
jnp
add
mov
out
xor
aaa
arpl
jo
es
mov
mov
and
out
mov
push
sub
pop
lcall
cmp
popf
and
pushl
sbb
inc
dec
sbb
in
cli
and
test
insb
clc
inc
mov
dec
pop
iret
jne
addb
mov
mov
push
xchg
xchg
stos
xlat
cs
jmp
mov
lret
scas
dec
mov
and
jne
mov
loope
aaa
loopne
and
leave
inc
test
inc
push
stos
sbb
or
out
icebp
sbb
jle
add
call
dec
add
xchg
xchg
loopne
cmc
sbb
iret
push
bnd
mov
out
and
mov
sbb
std
push
decb
jne
adc
and
jmp
adc
sub
dec
mov
inc
pusha
dec
bound
dec
push
and
push
clc
into
xor
inc
test
xor
jp
cmpsl
movsl
call
push
fs
pop
xor
dec
adc
push
lret
hlt
popa
ret
out
or
dec
sarl
lock
or
inc
or
dec
or
push
mov
fsts
sub
mov
test
out
push
call
outsb
pop
cmp
xor
pushf
lock
sbb
dec
jne
cmp
pop
mov
push
ds
add
xchg
push
push
sbb
pop
cmp
loopne
or
call
jae
add
pop
ret
or
xor
adc
and
push
adc
aas
mov
cmpsb
incl
inc
add
mov
mov
push
into
mov
test
insb
and
icebp
mov
mov
and
cs
mov
sti
add
loopne
test
add
jbe
sbb
push
mov
xchg
xchg
push
pop
test
repnz
cwtl
push
nop
adc
fs
loope
adc
jbe
or
cmp
cwtl
xchg
inc
push
mov
repz
push
push
aam
lret
adc
add
addb
sti
xor
lahf
pushl
adcl
push
mov
jl
or
out
pop
jne
push
in
adc
test
inc
mov
std
pop
rcrl
leave
mov
mov
sub
cmp
pop
out
inc
movsl
inc
js
push
or
pop
shlb
cwtl
or
inc
mov
jnp
pop
jl
xchg
push
in
call
hlt
and
mov
int3
push
push
loope
jecxz
imul
or
sub
push
sub
shrl
xchg
mov
loopne
test
add
mov
pop
push
pop
mov
adc
ret
xchg
or
pop
sub
out
sarl
lock
aad
je
cmpl
add
xor
xor
shr
mov
sub
jne
mov
cmpl
inc
aas
xor
sbb
ror
sbb
les
push
mov
pop
lret
and
sbb
arpl
lret
lods
aam
aad
xor
mov
inc
mov
nop
xchg
mov
mov
adc
adc
xchg
pop
lock
jge
jmp
jns
imul
lods
mov
into
je
push
and
loopne
mov
jle
cld
rorl
subb
test
scas
mov
xor
sub
pop
lcall
mov
stc
sbb
icebp
xchg
jae
scas
loopne
and
movsb
mov
cmp
add
xor
mov
sbb
in
lods
or
ret
pop
add
lods
sbb
sbb
xchg
arpl
push
push
xor
jns
pusha
lds
rorb
add
leave
sub
nop
fistl
repnz
sbb
fisubrs
hlt
imul
hlt
icebp
push
nop
inc
sahf
push
inc
pushf
fistps
xor
jne
jp
sbb
pop
and
lods
pop
sbb
jg
adc
and
sbb
inc
or
sbb
inc
adc
or
cmc
movsl
xor
and
loope
adc
and
les
std
xchg
push
stos
orl
int
ret
test
shll
enter
cltd
ljmp
inc
call
xor
test
sub
aaa
fnsave
inc
or
call
enter
sub
inc
cs
xor
mov
push
and
pushf
lcall
test
xchg
in
scas
dec
outsl
and
call
push
pusha
inc
enter
mov
adc
repnz
adc
fimuls
cld
fwait
data16
shll
add
rolb
test
and
xchg
lret
mov
shr
pop
and
in
jle
adc
cwtl
mov
hlt
xchg
inc
push
and
in
sbb
add
add
call
call
or
add
add
or
or
out
xor
loop
in
push
add
xchg
sbb
in
sbb
jb
test
test
inc
cmp
icebp
adc
mov
or
enter
cmp
sbb
lcall
aad
sub
or
cli
cmpsb
dec
repz
movsb
push
mov
xor
cli
cmp
and
jo
mov
sub
jbe
push
pushw
mov
pop
lea
cltd
js
mov
arpl
push
or
lret
xchg
and
xchg
pop
xchg
test
jne
mov
fwait
and
xchg
or
adc
pop
cmp
add
or
pusha
push
xor
fwait
and
cmp
xchg
fiadds
adc
sbb
inc
adc
loopne
lods
das
mov
or
fs
out
add
dec
bound
push
adc
cmp
lods
dec
mov
test
mov
push
sar
push
adc
test
aaa
cmp
add
add
push
cmp
and
loope
je
sarb
inc
xor
insb
jo
adc
push
xchg
add
xor
xchg
sarb
mov
hlt
cmp
flds
ret
xchg
ljmp
mov
push
add
add
mov
mov
add
jmp
add
add
xor
loopne
push
or
lret
jg
and
cmp
mov
add
pop
inc
add
jne
call
mov
or
lods
ficomps
cld
push
ds
mov
inc
mov
dec
cmp
add
adc
add
das
inc
xor
xor
pop
movsl
mov
not
and
sub
mov
cmp
sub
pop
lcall
add
cli
push
cmpsb
imul
mov
les
enter
dec
push
adc
xchg
adcl
adc
fcoms
adc
mov
std
inc
lret
je
pop
sbb
jno
lret
jmp
cmpsl
in
pushf
sub
sbb
dec
mov
mulb
and
add
jno
je
push
clc
add
insb
inc
fmuls
fimull
outsl
xor
fstpl
push
fldl
or
fldl
or
xorl
aad
jns
inc
insl
fcmovnu
jns
add
push
leave
fnsave
sti
pop
jmp
jo
push
dec
mov
mov
pop
cmp
das
sti
scas
pop
xor
dec
xchg
dec
je
add
ret
xor
sbb
sti
insl
xchg
push
cltd
fnstenv
lcall
outsb
sti
ljmp
cmp
mov
adc
sub
or
add
and
addr16
add
inc
test
lock
lret
xchg
adc
pop
mov
cld
lock
jno
pop
pop
xchg
idivl
in
pop
push
call
lock
fstl
push
in
sbbb
lock
cmpsl
mov
adc
das
and
inc
lock
pop
dec
mov
push
fs
repz
insl
jbe
or
lcall
cmpl
add
xor
jp
fnstcw
mov
push
sbb
or
popl
push
arpl
fucomi
lock
push
sub
outsl
mov
loop
push
ds
bound
dec
jle
push
jle
sbb
andl
mov
or
push
push
xchg
ss
mov
faddl
cltd
pop
jbe
frstor
popa
push
jmp
test
mov
or
out
aas
ds
inc
jp
cmp
test
jne
push
push
inc
lea
adcl
and
cmp
js
or
sbb
aad
jo
jnp
pop
mov
or
mov
mov
mov
pop
rolb
mov
lods
std
mov
ds
insb
testb
jne
or
ret
mov
andb
cmp
pop
mov
sar
sbb
dec
sub
or
gs
mov
inc
and
jne
dec
sbb
mov
sar
lea
testb
or
addr16
cmp
pop
adc
adc
in
repz
or
mov
rolb
sub
inc
movsb
inc
aas
fdivs
sbbl
add
pop
ja
movsbl
cmpsb
push
xchg
lret
mov
lods
addb
pop
fmuls
nop
leave
pop
cs
out
rorb
shl
enter
loope
cs
iret
mov
dec
push
pop
or
pop
cs
pop
add
andl
and
jo
into
push
iret
mov
cmp
mov
sbb
stc
or
mov
mov
xchg
sub
jbe
lods
es
sub
test
mov
mov
mov
inc
push
dec
mov
pop
cmp
lahf
mov
dec
cmp
inc
sub
mov
test
adc
xchg
mov
add
jne
cmpb
filds
sbb
xor
ror
movsl
pop
inc
imul
int
lcall
js
pushf
cmpsb
shlb
xchg
add
mov
push
xchg
push
leave
jmp
xchg
mov
repz
outsb
lea
mov
cmp
lcall
xchg
out
push
mov
xchg
jmp
vandpd
clc
js
call
dec
xchg
push
adcb
sti
push
inc
cmp
fs
popf
in
fwait
jne
repz
adc
jmp
lods
or
inc
ret
cwtl
add
mov
pop
stos
or
imul
cmp
notl
mov
xchg
movsb
loopne
loope
sub
test
insl
fcmovbe
imul
jns
daa
mov
sahf
subb
mov
je
inc
cld
xchg
repnz
pop
xchg
push
hlt
std
sub
mov
sti
movsb
cmp
jmp
mov
inc
subb
jno
or
mov
pop
jo
lea
imul
je
imull
daa
mov
rcrb
jo
add
xchg
pushf
enter
scas
mov
sub
mov
xchg
xor
repnz
std
aaa
addr16
lods
dec
mov
das
lock
fdivr
pop
sbb
dec
adc
lods
insb
adc
dec
mov
jmp
sarl
aaa
add
insb
adc
shlb
and
scas
jno
jp
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
enter
mov
popa
cmpsl
pop
fdivrs
mulb
push
shrl
mov
inc
mov
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
call
push
mov
gs
aaa
cmp
dec
xor
mov
xchg
jnp
pop
fs
mov
mov
mov
xor
lods
mov
add
cltd
push
mov
test
lods
lds
mov
test
cmp
gs
sbb
adc
sbb
frstors
sub
dec
push
cmp
cmp
push
or
dec
inc
push
call
xor
lock
xor
push
imul
test
dec
repnz
mov
push
push
mov
push
push
popa
add
jecxz
lods
idiv
or
ds
rolw
and
into
hlt
sub
inc
push
pusha
aad
jmp
popa
dec
sarb
cli
jmp
dec
pop
add
pop
das
rcll
sar
jp
dec
gs
xor
push
sub
sbb
sub
or
sbb
ds
and
int3
cmp
out
or
or
jp
test
mov
add
dec
in
test
aas
sub
loope
cmc
jns
lock
adc
mov
enter
mov
bound
mov
add
push
movsb
adc
xchg
mov
hlt
test
sti
sbb
inc
push
inc
lret
jne
cmp
xchg
sbb
cwtl
cmovge
or
jp
jne
fdivr
and
push
dec
pop
jno
sub
jl
je
and
inc
inc
inc
std
std
sub
or
std
loope
push
push
enter
mov
xor
xor
push
dec
lds
rolb
mov
idivl
repz
adc
pop
jns
push
inc
test
push
adc
lods
add
dec
lods
adc
shll
faddl
jo
mov
outsl
adc
dec
or
outsl
mov
gs
data16
xor
mov
iret
outsl
test
and
jne
gs
and
fdivs
stos
sbb
inc
xor
movsb
test
enter
mov
add
cmp
sbb
loopne
iret
gs
addl
adc
sub
cmp
ja
jae
dec
js
or
mov
xchg
push
addb
sub
add
mov
jo
movsl
test
ljmp
mov
scas
ret
nop
lock
sub
add
push
sub
jbe
movsl
pop
add
mov
movsl
xor
je
mov
in
mov
leave
test
add
call
mov
cmpsl
or
bound
inc
enter
adc
sbb
jb
cmpsl
mov
xchg
mov
fs
out
xor
lods
xor
sbb
sub
ljmp
cmp
cltd
movsb
jb
sbbl
xchg
mov
lods
pushf
inc
mov
pop
mov
lods
test
mov
inc
es
cld
add
lcall
negb
scas
jb
test
loope
nop
lret
xor
fwait
jb
xrelease
enter
gs
jmp
add
mov
mov
mov
and
mov
lods
int
fnstsw
jb
pop
repz
mov
pushf
mov
stos
mov
outsl
xor
xchg
or
mov
dec
inc
out
lock
jb
push
movsb
imul
dec
je
mov
in
mov
add
xor
dec
cmpsl
leave
or
adc
pop
repnz
test
and
mov
leave
pushf
pushf
nop
nop
add
and
xchg
pushf
outsb
sbb
cltd
mov
paddsw
mov
add
push
and
stc
dec
mov
add
dec
int
jmp
dec
lds
ret
push
adc
insl
cmp
out
lds
cs
inc
xchg
es
mov
sarb
iret
and
adc
xchg
mov
xor
pop
ret
or
ss
push
mov
inc
enter
xor
or
add
ja
popa
xorb
dec
pop
add
add
mov
xchg
icebp
in
movsl
mov
mov
stos
es
cmp
add
jne
push
or
fiadds
dec
popa
or
jb
and
test
test
cs
lock
in
mov
or
in
xor
sub
push
mov
inc
adc
mov
test
pop
pop
pop
and
mov
insb
mov
bound
ret
cmpsl
mov
sbb
jo
ret
mov
clc
cltd
adc
jle
popa
add
out
sub
cmp
jne
mov
push
in
scas
loop
mov
shll
fucomip
stos
bound
and
and
cmpsl
in
ret
or
les
and
or
aam
out
mov
sub
mov
movl
pop
cmp
xor
adc
inc
lds
gs
cmp
pop
sbb
xor
add
lea
inc
sbb
or
lahf
or
sahf
ret
nop
neg
jae
mov
or
or
leave
jnp
push
je
hlt
daa
clc
inc
push
inc
xchg
xor
scas
sbb
jae
testl
out
jmp
ss
subl
shll
test
test
les
adc
pop
sbb
pop
test
jae
lea
or
xchg
or
shr
js
lock
fs
jns
popf
mov
add
jmp
push
pop
push
push
inc
shl
cmp
fcmovnbe
ljmp
div
pop
dec
adc
inc
mov
jb
cmp
or
cmp
or
xor
aas
iret
pusha
lret
and
adc
or
fiaddl
or
fmul
jno
add
add
sub
movsb
mov
lock
ja
icebp
add
pop
jmp
stc
mov
fprem
mov
movb
jle
mov
inc
stc
mov
jecxz
xchg
xor
adc
fwait
test
dec
inc
pop
adc
ss
push
and
push
jbe
sbb
sahf
andb
jbe
mov
rcrl
or
push
add
lret
dec
mov
xor
add
shlb
pop
xor
lea
sub
pop
leave
pop
mov
or
pop
les
push
arpl
sub
inc
and
adc
pop
int3
jecxz
mov
and
rcll
xchg
cmova
xor
fcomps
dec
loop
cli
xchg
add
shll
jle
jne
lea
test
cmpl
in
pop
mov
pop
mov
into
je
lods
push
sub
test
ret
cmc
sti
pop
adc
jne
xchg
jbe
lea
xchg
and
and
dec
and
dec
adc
mov
add
enter
dec
or
push
pop
arpl
inc
add
mov
adc
out
dec
mov
shll
add
cld
sbb
loope
xor
subb
mov
push
jo
test
push
cmc
inc
lods
push
inc
scas
andl
and
xchg
movl
xchg
out
lods
js
xor
mov
mov
mov
add
add
repnz
imul
cmp
movsb
or
stos
add
push
push
pop
fbld
movsb
inc
jg
fdivl
loope
push
push
lea
xorb
mov
jp
sub
fldl
ret
xor
push
lock
adc
mov
inc
sbb
loopne
fs
mov
test
rolb
inc
cmp
pop
mov
js
pop
cmp
fcoml
pushf
jbe
mov
sub
das
lods
or
repz
shlb
push
leave
gs
and
inc
jle
out
lds
add
dec
shlb
pop
inc
pusha
aaa
push
adc
lds
inc
cli
mov
adc
call
pcmpeqb
iret
sahf
mov
add
cmp
or
xchg
ret
push
ret
shl
push
adc
cs
divl
lret
inc
stc
inc
jl
loope
icebp
incl
sub
pop
ss
mov
xorb
inc
add
pop
pop
jne
ss
dec
int3
inc
cs
test
push
out
cmp
je
ss
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
pusha
pop
ret
ret
orb
and
scas
and
fldt
test
std
sbb
sub
ret
bound
je
loop
pop
mov
mov
dec
mov
sub
pushf
dec
or
adc
push
stc
or
dec
les
movsb
and
testl
and
inc
bound
test
fnstenv
push
mov
cmpl
or
push
rorl
sub
pop
jne
mov
bound
xor
jno
push
mov
sbb
scas
dec
dec
jp
mov
or
pop
mov
inc
sub
or
arpl
popf
lahf
bound
xchg
pop
enter
stc
popa
pusha
sub
lock
ja
push
cs
adc
cmp
pop
mov
sbb
dec
mov
add
or
push
test
test
and
push
pop
mov
add
lret
and
inc
imul
mov
add
cwtl
pop
aaa
lods
jbe
imul
ret
xor
jbe
push
push
out
mov
rclb
push
pop
decl
cmp
and
mov
add
dec
pusha
rcrb
popf
movsl
lahf
add
test
lret
or
stos
loop
mov
imul
jle
lret
ljmp
add
arpl
and
sarl
call
cmp
stos
and
sbbl
pop
pop
sbb
lret
cmp
xchg
gs
sub
adcb
push
cmp
xchg
pop
lea
lock
pusha
jae
sbb
jmp
leave
push
sbb
call
pusha
and
xchg
mov
fwait
dec
lods
je
dec
mov
inc
add
push
xlat
out
push
cmp
loopne
loope
div
imul
and
rol
in
hlt
add
xchg
add
pop
pop
cmp
xor
push
cmpsl
mov
sub
fcoms
stos
dec
mov
or
repnz
mov
or
fldenv
jne
mov
ss
pusha
pushl
mov
pop
add
xabort
fisttpl
mov
xchg
add
push
je
adc
lock
sbb
jmp
mov
ja
push
push
mov
mov
cmp
scas
addr16
xor
fdivrl
ret
sub
and
dec
pop
push
in
js
addb
jae
inc
adc
add
dec
mov
aam
inc
pusha
call
jne
sbb
inc
mov
in
sub
adc
cmp
ret
outsb
and
mov
mov
clc
xor
fistpl
ja
pop
mov
sbb
push
push
dec
jmp
pop
or
inc
jl
jle
enter
add
inc
add
adc
push
pop
inc
roll
outsl
sbb
pop
add
and
inc
jne
add
mov
je
jmp
sub
xchg
shrb
imul
mov
lods
rclb
dec
decl
subb
cmpl
sub
sbb
and
and
lods
fmull
cmp
dec
daa
rcrl
add
in
mov
addr16
pusha
or
mov
ljmp
dec
pop
xor
mov
ja
ret
sub
jo
rcrb
add
imul
inc
in
nop
test
inc
arpl
rcll
data16
xor
push
jbe
test
rcrl
outsl
iret
sub
repz
sbb
jge
push
mov
mov
inc
lock
lret
adcl
popa
ja
mov
orb
je
test
push
xchg
mov
jmp
cs
jno
cmc
jle
mov
adc
call
or
xlat
push
mov
or
dec
add
push
add
insl
pusha
jmp
xor
out
mov
stos
jecxz
push
movl
push
ror
mov
add
adc
fdivs
shrl
and
jmp
call
add
mov
sbb
mov
mov
cmpb
mov
pop
fs
mov
and
mov
dec
std
test
inc
test
jne
xchg
add
inc
push
pusha
cwtl
and
test
jbe
sub
lods
ss
jmp
test
jecxz
rclb
xchg
inc
adc
add
mov
inc
inc
inc
pop
je
pop
es
in
dec
push
jb
je
cs
mov
rcrl
mov
shr
inc
mov
out
in
stc
add
xchg
loopne
or
cmp
jmp
dec
push
inc
cli
cmp
movsb
pop
and
pusha
or
mov
mov
push
ror
inc
add
xor
jae
fimuls
pop
add
mov
xchg
insb
pop
sub
push
iret
cwtl
fcmove
ret
mov
dec
sub
mov
insb
inc
jge
jmp
mov
xchg
add
or
or
test
mov
iret
nop
jecxz
sbb
dec
mov
loopne
dec
outsb
stos
dec
rol
out
sbb
add
push
sub
out
adc
lods
mov
jge
push
push
orl
xor
mov
aam
lock
mov
xchg
repnz
fs
adc
mov
and
mov
or
inc
sub
dec
test
jne
rcr
scas
fwait
insl
mov
pop
dec
inc
inc
or
jne
call
fcmovb
cmp
push
gs
adc
clc
xchg
adc
in
das
mov
jp
arpl
and
jno
or
dec
je
mov
addr16
add
push
hlt
ret
jmp
push
inc
addb
insb
loope
jb
xor
sti
mov
addr16
imulb
out
int
pusha
mov
pop
mov
pop
or
sar
pop
push
adc
xor
fists
jbe
std
sbb
push
push
pop
push
adc
xchg
mov
lock
lea
pop
jmp
add
or
or
insl
fstpt
mov
and
push
and
jo
sbb
xor
inc
mov
add
js
into
mov
push
into
pop
mov
add
pop
fs
add
push
jl
sub
jmp
pop
sbb
cwtl
scas
sbb
dec
loopne
rcrb
jo
add
and
loopne
lock
dec
andb
and
mov
xchg
adc
add
decl
popa
mov
cmp
adc
add
xchg
add
jecxz
movsb
lahf
add
push
push
mov
push
subb
and
clc
add
or
pop
shl
add
mov
cltd
add
or
lahf
fmul
push
adc
adcl
ljmp
cmp
pop
xor
push
orb
lods
adc
push
xchg
orl
push
pop
rol
dec
pop
in
add
jecxz
cmc
push
add
add
outsl
inc
repz
mov
aas
push
aaa
xor
ds
xchg
mov
inc
clc
stos
sbb
sub
mov
push
push
cmp
push
add
mov
add
mov
loope
pusha
or
adc
adc
and
dec
pop
pop
mov
dec
dec
out
mov
dec
vpmacssww
shlb
dec
xchg
aad
xlat
cs
push
xor
mov
in
shrb
pop
xchg
mov
pop
div
scas
mov
test
adc
loopne
or
pop
xorb
push
rorl
enter
add
enter
or
enter
add
cs
mov
movsb
rcrl
add
ret
sub
aad
jmp
xchg
push
sub
lods
add
dec
jmp
pop
sbb
jg
adc
and
inc
push
pusha
inc
ljmp
xchg
inc
mov
dec
adc
or
and
sub
loop
pop
aas
and
cmp
dec
roll
loop
adc
lret
sub
adc
rolb
mov
mov
dec
fdivp
jge
std
ja
cmpsb
hlt
rep
ss
neg
add
lock
or
lock
push
filds
adcb
js
loopne
or
imul
enter
adc
dec
iret
ret
ret
arpl
mov
pushf
fs
rorl
jp
and
popa
push
mov
mov
lock
jae
loope
sub
jns
add
mov
cmpb
cmp
mov
jmp
pushl
xchg
xchg
in
pop
add
scas
push
push
jae
cmp
push
push
lods
lret
cwtl
loope
aas
leave
insl
jge
insb
cmp
fs
lret
repz
push
xor
adc
insb
inc
mov
test
xor
cmp
cmpsl
repnz
jl
lds
andb
ds
ds
repz
pushf
cmp
or
sub
hlt
adc
rcl
adc
loop
or
popl
inc
push
pop
adc
inc
nop
and
lret
out
dec
adc
push
and
jne
stc
jl
xchg
push
pop
outsl
inc
or
jbe
dec
movsl
repnz
jle
pushf
outsl
ja
loope
lcall
pop
dec
shll
or
mov
adc
mov
jecxz
lret
or
loope
ret
popa
jae
test
into
and
call
ljmp
dec
sub
mov
adc
sahf
cmp
shrl
rcll
inc
inc
xor
mov
xor
rep
add
mov
nop
jbe
xor
mov
adc
ss
and
push
or
fistl
cmpsb
jmp
pop
imull
inc
add
or
add
adc
inc
push
sub
dec
jecxz
sbb
push
ljmp
mov
sbb
sbb
xchg
out
mov
sbbb
ficompl
xchg
imul
xor
cmp
sarb
aam
sbb
and
pop
dec
stos
or
jnp
inc
loopne
add
in
add
sti
or
sbbl
ret
push
int3
or
sbb
mov
sarl
or
inc
push
mov
dec
jle
cs
xchg
xor
push
push
and
jne
clc
mov
xchg
cwtl
pop
inc
pop
lods
inc
or
sbb
mov
and
pushl
pop
push
aas
add
jmp
fsubl
iret
pop
and
inc
rclb
push
push
or
fmull
sarb
cmp
test
aam
sarb
dec
mov
mov
sub
sub
mov
outsl
fcomp
and
push
push
sub
incb
int3
gs
xlat
mov
ret
jmp
pop
aas
jmp
les
pop
adc
outsl
jo
sub
adc
inc
add
pop
mov
sbb
mov
outsb
push
fsubl
fcomps
push
inc
mov
mov
test
shll
in
jge
aaa
adc
insl
add
enter
inc
push
push
rorb
clc
push
xor
inc
or
clc
pop
imul
sub
and
aaa
lea
xor
cmp
inc
jmp
sbb
inc
or
pop
dec
jbe
jne
movsl
xchg
lcall
fisubrs
cmc
aas
sbb
adc
push
mov
add
roll
and
nop
sub
pop
pop
adc
movsl
cmp
push
mov
inc
mov
adc
aam
dec
xor
dec
inc
pop
cld
cwtl
mov
cmp
aaa
xor
cld
and
add
sbb
or
test
leave
mov
xchg
or
dec
or
jg
arpl
repz
outsb
sbb
add
and
repz
or
push
nop
or
orl
dec
rcll
push
pushl
cmp
and
push
add
pop
or
or
pop
lods
ljmp
in
sub
call
inc
cmp
pop
sub
sub
jmp
pop
dec
andl
das
xor
mov
sbb
inc
arpl
pop
or
and
es
imul
sarb
jae
jg
sti
push
jno
jne
and
jle
cmp
sub
jl
mov
pop
es
add
mov
fs
dec
cmp
xor
adc
ds
cltd
jmp
xchg
sub
mov
cwtl
imul
dec
loopne
or
mov
loopne
jmp
sahf
sub
add
push
in
ret
mov
cmp
test
stc
xor
pop
add
push
and
and
pop
inc
sbb
sbb
push
cmp
or
ror
pusha
loop
andl
push
inc
sub
and
stos
add
je
xor
aaa
add
sbb
lods
dec
and
sbb
andl
xor
push
add
call
les
or
push
add
add
ret
jg
push
adc
int
add
pop
or
jnp
add
push
inc
mov
pop
jle
jp
inc
movsl
or
add
bound
leave
mov
xor
push
adc
sbb
push
inc
ds
fisttps
rcrb
test
aas
jae
fs
pop
jl
mov
es
push
push
sub
inc
inc
xorl
xor
fnstcw
ja
and
sub
xlat
ret
ljmp
xchg
mov
test
aaa
test
loope
sbb
jle
mov
aaa
mov
in
je
ss
inc
inc
push
adc
rolb
sbb
push
pop
sbb
lret
outsl
mov
insl
subl
push
mov
cmpl
pusha
xchg
lret
cmp
in
add
or
sbb
push
lods
cmpsb
lock
inc
lock
adc
xchg
push
inc
ljmp
sbb
add
push
sub
adc
jecxz
push
sbb
enter
and
rorl
pop
mov
add
add
rolb
outsb
stos
inc
cmpl
inc
push
pop
cmp
movsl
and
mov
push
mov
ret
ud2
inc
mov
loope
jno
cltd
pop
jo
aaa
orb
lcall
or
or
or
rolb
and
mov
mov
push
or
cld
or
inc
cmp
test
ja
xor
dec
js
movsb
cmc
repnz
and
imul
mov
pop
loope
jnp
mov
and
pop
popa
loop
pop
je
mov
cltd
aam
push
sbb
shr
cmpl
leave
push
inc
or
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
pop
imul
inc
add
dec
or
movsl
inc
xor
push
jg
jb
nop
lret
cmp
sub
repnz
xor
adc
popa
cmpsb
out
adc
popa
sub
jecxz
mov
out
add
inc
shlb
jno
push
or
sbb
cmp
inc
xor
adc
sbb
pushf
cmp
lock
jne
push
or
out
and
push
ds
mov
push
or
lcall
adc
fisttpl
mov
dec
sub
or
daa
xchg
jns
lahf
and
sbb
mov
cmpb
lea
mov
sub
je
pop
adcb
cmc
and
and
xchg
push
or
lcall
ja
filds
jb
mov
cmc
lahf
inc
cmp
sub
fbstp
jae
push
cmp
jl
mov
inc
and
loopne
call
shll
lret
add
mov
testb
jne
clc
mov
inc
ja
mov
rcr
ror
test
ljmp
mov
cmpsl
pop
movsb
sub
inc
mov
add
dec
inc
cmpl
stos
cld
in
dec
dec
add
inc
and
enter
fsubrs
ds
mov
aad
mov
daa
pop
push
data16
or
push
mov
cmc
lods
mov
add
dec
push
mov
mov
xor
fs
pop
fildl
jns
jne
ja
mov
in
shll
pop
ss
arpl
movsb
push
out
sbb
orb
loope
in
cmpsl
orb
xchg
bound
mov
or
mov
into
sub
inc
xchg
adc
and
add
jmp
andl
sbb
nop
xchg
add
aaa
add
mov
fs
dec
inc
arpl
mov
push
lock
xchg
inc
xchg
test
push
or
cmpsl
cmp
jl
jbe
test
outsb
xchg
xchg
add
aam
les
je
call
jbe
add
mov
in
fs
popa
mov
dec
jg
adc
orl
call
lret
pop
hlt
sarb
shll
pop
or
sbb
insb
rcl
jmp
inc
dec
scas
or
mov
subl
sbbb
out
push
ja
adcb
pop
or
add
out
cmp
mov
push
ljmp
sub
push
push
dec
lock
and
cmpsb
imul
inc
lret
jp
add
mov
push
mov
jne
jmp
ljmp
add
xor
inc
mov
cwtl
mov
mov
jg
adc
xlat
je
cmp
adc
cmp
jb
testb
sbb
loop
inc
or
add
shrb
add
mov
dec
jmp
inc
movb
cmp
js
cmpl
cmp
jb
cmp
jbe
mov
push
or
adc
sahf
push
in
push
test
icebp
adcb
and
call
and
js
mov
adc
pop
add
ljmp
push
or
mov
les
push
fstpl
pop
jmp
jle
add
xor
and
push
add
pop
mov
mov
push
add
add
pushf
sub
push
sub
or
jae
out
je
and
pop
sub
jo
je
outsl
mov
sti
xchg
cli
adc
lea
mov
pop
mov
or
mov
out
cmp
fldt
push
sbb
jmp
popl
lods
std
and
enter
inc
mov
cs
inc
xlat
aaa
xor
xchg
lea
adc
inc
adc
in
jmp
pop
sarl
inc
mov
xlat
sub
sbb
pushf
and
cli
add
or
loop
mov
xor
and
punpcklbw
rcrl
ljmp
addb
xor
loope
enter
int3
push
sarl
sub
rcl
js
xor
pusha
xor
pop
pusha
in
shl
or
leave
leave
leave
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
or
cmp
inc
and
dec
dec
outsb
daa
inc
cmovs
or
push
pop
add
xchg
pusha
fs
xchg
jo
js
dec
jnp
shlb
dec
xor
xor
xchg
cwtl
pushf
mov
movsb
test
sub
dec
mov
lds
je
or
add
dec
fwait
push
imul
push
stc
ss
mov
fwait
nop
jle,pn
or
call
dec
dec
in
adc
sbb
test
sbb
clc
ss
dec
and
and
sbb
mov
pop
in
sbb
adc
add
mov
mov
cmp
and
inc
dec
jne
push
rorb
and
mov
test
fistl
jmp
cli
cmp
orb
popa
movsl
dec
xchg
les
rolb
jb
sbb
test
push
push
push
scas
cmpsb
cmc
nop
push
mov
cmp
mov
pop
gs
nop
sbb
mov
mov
mov
out
jne
inc
or
and
lret
lods
lret
dec
inc
mov
mov
out
out
push
cmp
sub
sbb
jecxz
lea
je
sbb
mov
sub
addl
xchg
stos
mov
jnp
hlt
inc
nop
sub
add
xor
je
lea
push
jle
pop
push
popf
xchg
mov
in
lcall
push
inc
mov
pop
cmp
xlat
add
add
push
sbb
xor
dec
shlb
jle
je
push
pushf
dec
mov
xlat
shr
sub
and
loopne
test
or
data16
dec
inc
sub
sbbb
in
inc
es
in
add
cmp
in
cltd
sbb
add
leave
and
int3
repz
repz
xor
push
cmc
mov
pop
idivl
enter
repnz
sbb
adc
mov
inc
cmpsb
cs
bound
jb
inc
loopne
ret
jl,pt
inc
xorb
add
jmp
orb
dec
rorl
dec
pop
popa
adc
push
adc
mov
adc
lahf
or
xchg
mov
and
fcoms
std
xchg
enter
ja
mov
ja
bound
push
jo
or
pop
adc
xchg
inc
loope
insb
jl
cmp
and
sbb
fimull
or
movsl
add
lods
lea
and
sbb
stos
jle
mov
and
addl
sub
pop
push
xor
jo
xor
add
cmp
repz
scas
mov
adc
sbb
xor
lret
pop
xchg
gs
daa
mov
or
inc
js
fbstp
jle
aam
sahf
cmp
inc
lahf
add
and
xchg
or
cmp
imul
xchg
cld
push
into
daa
jecxz
rclb
sbb
push
icebp
mov
and
out
mov
fisttps
and
fcmovnbe
sti
mov
or
xor
pusha
call
imull
and
iret
inc
xchg
dec
lea
test
jne
adc
add
mov
inc
sbb
push
inc
insb
fmull
test
add
inc
pushl
mov
je
add
jns
dec
inc
dec
mov
adc
push
xor
sub
xor
jnp
addl
dec
mov
fisubrl
test
loopne
mov
or
push
fstp
stc
or
lods
mov
pop
clc
filds
adc
push
hlt
mov
or
add
sbb
jp
adc
fisttpl
fisttpll
add
cmp
fdivrs
ret
pop
movsl
mov
lret
xchg
jae
lahf
jb
ret
inc
sub
loopne
call
jmp
push
dec
inc
test
dec
lea
push
pop
fcoml
inc
loop
add
cmp
fmull
sub
cmp
fsubs
push
inc
mov
mov
dec
sub
adc
xor
sarl
cmp
test
cmpl
mov
int
push
test
cmp
add
add
rcrl
mov
cltd
cmp
sbbb
cmp
test
popa
xchg
mov
aam
shl
rolb
add
inc
popf
ficomps
int
push
jmp
inc
movsl
loop
or
mov
scas
pusha
push
je
xor
sub
add
jae
lcall
mov
fisttps
cmp
test
aam
adc
push
jns
sysenter
sbb
dec
add
xchg
sbbb
cwtl
movups
icebp
cmp
jmp
xchg
lods
fucomp
mov
andl
fidivrs
xchg
push
cmp
mov
divps
mov
inc
cmp
cmpsb
aas
movb
inc
ret
popf
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
mov
inc
add
push
cmp
jmp
or
pushl
lock
stos
in
nop
lret
cmpb
inc
cmp
mov
inc
cmp
jae
inc
inc
lods
push
orl
shll
movsl
std
pop
mov
inc
inc
sbb
or
sahf
add
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
adc
cmp
add
test
mov
je
push
xchg
jmp
imul
sub
cmp
std
jno
adcb
sbb
fstpl
mov
test
add
push
jo
lret
jmp
or
ret
stos
adc
mov
jmp
sbb
sbb
inc
pushl
lods
adc
cltd
sub
mov
fdivrs
jne
ljmp
mov
inc
jne
fsts
adc
xor
jnp
mov
pop
cmp
mov
inc
add
adcl
sbb
ret
xchg
and
sbb
icebp
pop
or
xor
loope
aas
and
add
int3
test
fdivs
sbb
cmp
mov
je
aaa
inc
adc
xor
add
sub
and
mov
mov
mov
lret
mov
jmp
mov
sbb
fmull
pop
adc
inc
dec
int3
jmp
test
xchg
sbb
addl
sub
cmpsb
mov
mov
inc
add
inc
jo
movsb
mov
and
push
push
pop
addr16
in
stos
add
jge
mov
xor
push
cmc
or
push
out
testb
push
mov
cmpsb
adc
scas
out
fidivrl
or
shll
ret
insb
add
mov
pop
and
out
xor
ret
rcll
push
mov
or
inc
js
rcll
sahf
sbb
add
aam
xchg
cmpb
aaa
xor
xor
sbb
ret
xor
push
and
or
arpl
sub
pop
hlt
mov
dec
or
fwait
inc
popa
orl
lods
pop
xchg
adc
push
cs
mov
dec
pop
inc
xorl
arpl
sbb
pop
cmp
lods
jg
fadds
pop
mov
xchg
int3
jl
orb
in
hlt
adc
in
pusha
sti
stos
jge
addr16
pop
fs
push
or
mov
mov
sub
pusha
adc
test
sbb
mov
adcb
pop
mov
cld
pop
xchg
xor
inc
and
jg
test
fwait
xchg
popa
push
rcrb
add
pop
clc
je
xor
imul
add
pop
test
lock
xor
dec
jl
fimull
pushf
cmp
or
inc
mov
jmp
push
and
ds
push
push
lods
je
inc
cmp
shlb
mov
inc
add
js
pop
sbb
mov
xor
add
or
shll
mov
enter
icebp
pop
clc
add
adc
mov
and
mov
push
mov
cltd
repnz
dec
outsb
test
stos
rcrl
call
testb
lock
sub
icebp
xor
adc
push
jecxz
push
mov
sbb
jle
mov
pop
aam
sahf
dec
pop
jp
ret
push
pavgb
pop
mov
jb
cmp
cli
sbbb
xor
sbb
xchg
lcall
sbb
sub
leave
cmp
rol
push
mov
or
fistpl
cmp
mov
sub
and
test
pop
dec
test
jl
adc
mov
push
sti
mov
xchg
xchg
pop
sub
and
adc
dec
jbe
int3
pop
push
subb
lea
sub
es
push
dec
pop
scas
xchg
dec
fsubl
mov
das
push
loopne
push
dec
mov
sbb
xor
sbb
inc
xchg
aam
stos
sub
js
roll
sbb
fbstp
in
sub
les
testb
adc
in
dec
push
bnd
mov
ret
push
mov
int3
cld
test
mov
cmpsl
mov
inc
das
xchg
movsb
aaa
xchg
leave
inc
sub
into
jl
shlb
sbb
adc
sub
dec
pushf
jmp
or
pop
xorl
pop
icebp
add
inc
je
cmp
sub
jae
lcall
aam
adc
data16
rolb
rorb
jmp
sub
xor
inc
mov
push
add
pop
or
jne
and
cmp
andl
push
dec
or
ror
rorb
adc
leave
push
insb
sub
arpl
movsb
add
int
adc
add
adc
les
rolb
inc
push
dec
hlt
xor
pop
cld
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
or
call
sub
and
data16
pop
mul
ret
mov
push
mov
add
push
inc
cmp
mov
jo
js
dec
divb
sbb
or
iret
inc
dec
push
xor
dec
fiadds
and
and
in
rolb
dec
xchg
add
addr16
lret
xor
mov
adc
outsb
inc
pushf
nop
pushf
and
shll
dec
and
adc
or
fcompl
in
shr
add
jmp
jo
xchg
add
or
push
add
add
push
in
push
or
add
cwtl
xor
inc
mov
xor
je
outsb
add
sbb
or
push
les
subl
inc
jmp
push
xchg
mov
clc
testb
adc
std
or
jmp
inc
and
mov
and
sbb
popf
and
jecxz
jge
xor
add
or
inc
hlt
jnp
xor
and
cltd
or
or
add
sbb
sbb
loope
fnstcw
mov
adc
pusha
mov
pusha
loope
pop
sub
pusha
pop
dec
jle
and
ficoml
fstp
ds
roll
inc
pusha
fldl
cmp
push
or
pushf
dec
cmp
push
lea
ficompl
xchg
or
test
es
adc
sti
add
add
ja
add
test
fisttps
loope
loop
push
xor
sbb
je
add
dec
jne
orl
lret
pop
mov
ret
scas
add
pop
testl
cmpsb
insl
sbb
je
jb
dec
mov
sub
and
inc
add
adc
in
cmpsb
inc
flds
fnstenv
or
mov
popa
sbb
jo
lea
movsl
shr
ret
inc
aas
les
cmp
push
pop
inc
pop
sub
cmpsb
mov
adcb
or
mov
lock
cmp
hlt
data16
fs
aaa
cs
lods
sbb
xchg
mov
push
ret
mov
jl
add
in
dec
jmp
sub
sub
jmp
sub
push
push
or
psubusw
xor
add
adc
hlt
add
pop
test
mov
loop
mov
mov
in
adc
pop
clc
loop
mov
jge
ffree
repz
sub
ljmp
dec
inc
aad
sarl
add
js
bnd
mov
inc
pop
stos
repnz
fs
dec
into
pop
sarl
ss
insl
in
sbb
jp
dec
in
inc
adc
lock
adc
mov
push
push
sahf
jmp
and
pop
movsb
or
push
add
in
aam
repnz
sbb
xchg
and
mov
mov
out
pop
or
add
sbb
push
push
add
lret
int
es
sbb
movsl
xchg
or
test
js
xor
jmp
or
pop
pop
sbb
out
mov
fs
mov
mov
mov
movzbl
fwait
test
mov
sbb
lods
test
cmp
je
aam
jl
adcb
out
mov
sub
adc
scas
add
fistps
hlt
fs
adc
or
cld
subb
and
add
push
nop
add
loopne
xor
mov
sub
pop
push
pop
idiv
sub
fsubrp
fwait
jno
add
dec
inc
and
flds
inc
or
inc
and
adc
xor
or
or
ss
in
sub
scas
adc
mov
jg
push
mov
lock
inc
pop
fcmovne
mov
cmp
add
or
testb
jae
lea
push
or
mov
mov
and
sub
js
and
data16
xor
mov
mov
mov
adc
inc
lock
jmp
add
push
add
mov
jae
mov
push
js
inc
mov
jne
mov
mov
pop
cld
adc
push
pop
data16
mov
add
push
pop
mov
rcrl
mov
cmpl
xchg
flds
and
sbb
clc
mov
ja
or
mov
push
rcrl
rcrl
adc
jno
xor
push
pop
fadds
into
mov
mov
sbb
pop
cwtl
or
fs
ljmp
dec
stos
lcall
mov
push
adc
sbb
inc
sti
mov
gs
or
stos
mov
add
or
push
out
mov
and
jne
pop
jmp
sahf
jge
mov
cld
push
scas
cmp
mov
and
fsubrs
pop
out
shrl
shr
loop
pop
sub
or
xchg
dec
aad
push
ffree
roll
jp
adc
pop
testb
add
dec
mov
pusha
cs
mov
xchg
sbb
push
mov
das
adc
loopne
sub
fwait
sahf
in
cs
adc
sbb
or
and
jle
pushf
loopne
fdivp
jb
mov
inc
inc
adc
js
add
call
inc
je
sbb
and
ldmxcsr
mov
and
es
mov
push
mov
jp
imul
repz
mov
bsr
adc
mov
adc
cmc
jbe
dec
jmp
adc
xchg
mov
or
data16
push
adc
movsb
lds
xchg
pusha
xchg
and
scas
dec
sub
pop
arpl
xor
sub
mov
cltd
jns
ja
mov
jl
sarb
jnp
add
push
rol
test
cs
push
and
adc
imul
scas
inc
loopne
adc
test
lea
lock
stc
xor
ja
scas
psubq
xchg
aad
test
pop
mov
jle
and
enter
or
add
loope
or
in
adc
push
cmpsb
rcrb
mov
jne
gs
add
rorb
data16
inc
inc
adc
dec
inc
inc
xrelease
cmp
ret
stos
rol
xchg
sub
scas
stos
dec
or
xchg
push
mov
nop
xor
or
jle
shrb
sub
mov
sub
push
push
pop
sti
add
push
daa
mov
lcall
add
and
mov
stos
stos
pop
shr
sub
xor
jge
sbbb
aam
or
lock
pop
mov
decb
pop
add
sub
arpl
loop
loopne
fwait
dec
xor
push
test
lret
loopne
test
testb
mov
inc
aam
loop
rolb
xchg
out
jmp
adcl
repz
fwait
sti
fisttpll
and
mov
out
mov
ds
sub
test
xchg
js
jbe
dec
mov
add
nop
or
cmp
or
jb
cmp
sbb
xlat
insb
sub
adc
xlat
xchg
push
cli
repnz
movb
cmovs
rorb
test
sbb
movsb
pop
and
jp
add
fadds
pop
xor
inc
mov
shlb
or
dec
aaa
or
jo
inc
adc
in
lar
pusha
dec
or
push
aam
sbb
js
movsl
cmp
mov
rdmsr
ss
movsl
xor
stos
sub
shrd
sub
sub
not
les
sub
add
and
pop
ds
adc
loop
or
out
in
adc
test
mov
jl
adc
xor
pop
xchg
outsb
sub
sarb
je
mov
fldt
jmp
adc
push
and
in
add
cltd
sbb
and
adc
gs
data16
or
mov
push
sub
cmp
adc
fs
icebp
sub
lcall
push
cld
dec
or
jns
inc
lock
orl
adc
adc
out
mov
cmp
mov
loope
addl
add
rcll
pop
xorl
xchg
cs
fimuls
jl
jl
mov
out
and
push
and
nop
subb
cld
and
xor
sbb
jge
pusha
and
adc
pop
inc
inc
and
scas
shl
loop
pop
push
cmp
add
or
cmp
mov
dec
mov
outsl
ljmp
jne
inc
in
xor
sbb
xchg
jne
jns
bndstx
and
leave
xchg
stos
cld
add
sbb
inc
repnz
or
je
sbb
clc
add
clc
adcb
mov
pusha
xchg
push
jmp
jl
cmp
add
mov
scas
dec
push
xor
push
adc
imul
mov
or
aad
mov
dec
cmp
jne
sbb
jo
mov
fwait
push
lods
mov
js
or
mov
or
jmp
xor
or
xchg
add
test
incl
or
push
dec
jmp
fs
fisttpll
push
mov
fld
fwait
rolb
call
add
or
mov
movsb
mov
pop
push
and
enter
xor
shr
adc
jmp
adc
push
lock
mov
add
pusha
sub
addb
inc
mov
scas
mov
or
inc
jle
cmp
push
xor
popl
push
jmp
dec
push
mov
xor
rcrl
add
loopne
mov
cmp
fs
inc
movsb
add
lcall
sbb
mov
ret
xchg
xchg
push
sbb
mov
pop
cmp
in
pop
testl
es
sti
lods
xchg
stos
dec
jae
imul
sbb
nop
or
jge
jmp
and
imul
outsb
mov
dec
pusha
and
sub
pop
pop
sahf
sbb
push
sub
sahf
add
shlb
in
orl
andl
test
ret
sub
ds
sub
cmp
mov
xchg
std
xorb
je
scas
call
pushl
mov
jge
dec
adc
mov
fsin
pop
mov
insl
pop
cmp
adc
add
inc
testl
mov
jmp
fimuls
adc
hlt
ret
push
adc
inc
xchg
in
cli
and
sub
lock
out
daa
test
or
jecxz
add
pushf
jmp
push
mov
test
pop
mov
sub
mov
dec
sbb
dec
hlt
xchg
jne
arpl
pushf
xor
xor
roll
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
ret
ret
ja
jnp
jge
jle
lock
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
pop
push
inc
add
sbbl
xchg
test
or
mov
dec
mov
add
sbbb
or
pop
les
fs
jmp
jle
mov
push
xor
and
and
xorl
into
nop
fs
out
add
mov
fisttpll
mov
ja
sub
or
mov
xchg
movb
testl
jne
enter
les
outsb
fldl
cmovbe
jne
inc
or
aad
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
or
test
rcrl
or
ret
sbb
add
je
lea
or
ret
add
sub
shlb
lock
ja
mov
test
cld
js
subl
lcall
inc
pushf
sub
xchg
lods
shr
jg
add
ja
stos
aaa
pusha
test
js
mov
add
cs
aam
gs
mov
rcr
add
or
shr
loop
rcll
rcrl
mov
jg
nop
loop
jmp
dec
sub
stos
lret
mov
notb
dec
inc
outsl
ret
mov
std
jg
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
push
ret
or
shrl
xor
mov
enter
sub
and
dec
mov
mov
cmp
add
mov
push
sar
pop
loopne
orb
fiadds
push
imulb
lcall
mov
fidivrl
jb
dec
push
pushf
in
mov
mov
clc
rolb
insl
xor
lock
cmp
or
sub
outsl
popf
push
lret
into
jmp
scas
jnp
ret
or
sbb
push
add
int3
call
test
int3
add
lcall
lret
sub
jmp
sub
add
negb
mov
movups
int3
sub
and
ret
fisubs
or
call
xchg
mov
shrb
add
sahf
out
push
sub
add
js
repz
out
pop
or
into
sub
lahf
addb
addr16
lds
jmp
inc
add
xchg
ret
pop
jne
cmp
pop
lods
pop
xor
inc
inc
scas
inc
and
push
mov
pusha
and
insb
bound
dec
sub
cmp
in
or
in
or
stos
and
push
xchg
xchg
adc
pop
jnp
insb
inc
cs
or
ss
lods
mov
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
out
call
fcompl
addr16
lret
fcomi
pop
push
or
mov
je
out
clc
cmp
xor
rorb
pop
fidivl
or
jl
jbe
lahf
xor
inc
in
sub
and
aam
xchg
sarl
sbb
hlt
test
adc
ficoml
mov
and
pusha
repnz
xchg
or
or
add
sub
or
addr16
xchg
mov
ljmp
shlb
fdivs
or
add
aam
and
cmp
andb
pop
je
setg
sub
out
clc
add
mov
and
sbb
scas
aas
sub
movb
movsb
pop
add
mov
and
lcall
clc
lds
mov
es
mov
sbb
loop
lock
incl
icebp
pop
inc
pop
lret
jmp
sub
add
adc
mov
mov
imul
imul
dec
add
pop
inc
pop
inc
out
cs
jmp
hlt
dec
jns
les
sub
inc
fs
sub
dec
sub
push
or
add
testb
dec
add
movsl
lds
push
add
mov
or
addr16
bound
aas
mov
xor
add
loop
inc
adc
mov
push
andb
cwtl
jmp
ja
push
ret
jbe
dec
subl
enter
adc
insb
xchg
mov
aam
sub
adc
or
lods
jecxz
fidivrl
xor
push
enter
insb
xchg
add
mov
shlb
cltd
popf
rclb
mov
and
inc
fstpt
mov
jl
and
lahf
insl
push
inc
jle
xorb
daa
adc
add
mov
jge
adc
mov
js
imul
pop
xchg
cs
pop
or
jmp
gs
jg
xor
jge
pop
movsb
inc
or
or
fcoml
pop
mov
add
push
inc
add
adc
fisubrl
jle
push
and
mov
lea
mov
jg
adc
fmuls
js
mov
pop
or
dec
sbb
add
and
enter
sub
cld
push
cmp
or
lds
das
inc
add
loope
enter
inc
enter
mov
fwait
add
loopne
js
dec
jecxz
push
push
adc
jg
dec
dec
inc
xor
leave
and
add
mov
movb
and
or
dec
mov
movsb
fwait
rolb
sbb
std
das
jle
jecxz
mov
jg
ret
daa
xor
or
jne
inc
inc
adc
pop
cmp
sahf
popa
mov
and
mov
or
int
scas
test
dec
and
add
aam
ret
add
rcll
and
or
add
jg
ja
addb
mov
push
sub
adc
dec
or
or
pop
faddl
les
pop
adc
and
add
xchg
ret
mov
add
inc
icebp
ss
shrd
push
jle
cmp
ss
fistpll
sbb
clc
mov
fisubrl
or
cmp
xchg
stc
inc
xor
xor
out
xchg
clc
sub
mov
mov
sub
loopne
js
inc
call
test
clc
dec
push
mov
mov
rorb
push
pop
sub
adc
ja
loope
inc
out
out
push
je
and
add
sbb
js
lods
or
or
sub
in
push
sub
or
loope
gs
fidivrl
rorl
push
jle
xor
inc
shll
mov
cmp
add
incb
add
jbe
shll
adc
jg
lods
jb
fiaddl
dec
inc
dec
sahf
sub
dec
pop
or
or
pop
rcrb
ret
daa
popf
mov
or
mov
mov
push
and
push
sub
mov
sbb
jbe
xor
mov
jne
loop
test
jb
loopne
ja
adc
mov
and
sub
mov
inc
call
inc
push
cmpsl
mov
push
lock
imul
dec
and
mov
or
adc
mov
fwait
pop
mov
push
add
mov
xor
or
ret
add
mov
and
adc
add
sub
adc
mov
xor
mov
je
push
mov
repz
cmp
sub
inc
lret
adcl
adc
inc
inc
push
cmp
sbb
or
enter
jg
adc
push
insl
push
jmp
insl
cmp
inc
xor
xchg
cld
jl
shlb
mov
sbbl
inc
les
sbb
inc
shr
loop
mov
mov
sbb
jns
pop
dec
je
jge,pt
clc
pop
aam
in
gs
or
pop
data16
fwait
aaa
in
add
sub
inc
popa
je
not
inc
ss
je
dec
out
xor
adc
add
shr
dec
enter
shrl
je
adc
pop
bound
cmp
and
push
cmpl
inc
enter
imul
pushw
adc
call
jne
fmull
insl
push
les
fstps
or
xchg
in
xor
movsl
push
xchg
int
movsb
loope
add
sub
js
rol
ret
xor
cmp
add
fcom
sbb
fmull
arpl
js
shll
xor
pop
cmpsl
lock
ds
push
inc
or
je
inc
ja
loopne
adc
sahf
pop
or
xor
push
addb
cmp
ds
add
xchg
aaa
push
ss
bound
movsl
test
movsl
es
cmp
jmp
sbb
and
cmp
mov
pop
cmp
aam
jo
subl
add
xor
jmp
pop
pop
nop
fisttpll
sub
out
add
push
xor
and
sub
fmul
aaa
int3
sub
sarl
mov
addr16
int
insb
inc
or
cmp
je
mov
mov
jl
cs
inc
rol
movsl
mov
adc
jmp
insl
mov
addb
lds
mov
cmpl
lret
or
push
push
pop
sbb
data16
push
mov
xchg
push
jle
pop
sbb
or
xorb
push
jp
pop
pop
in
das
imul
ljmp
lret
imul
movsb
das
add
lret
mov
xchg
jbe
jge
xor
cld
pusha
mov
jle
adc
ret
cmp
inc
cmp
fidivl
jecxz
xor
mov
and
xchg
iret
cmp
inc
mov
mov
pop
mov
nop
add
stos
inc
cmp
xor
sub
adc
dec
jne
push
push
jmp
or
jmp
mul
jmp
je
push
ljmp
xorl
negl
jb
xor
and
push
jae
cmp
aam
lods
jne
test
xor
dec
pushf
adc
push
sahf
cmpb
adc
fimuls
adc
sub
ss
push
sbb
sbb
add
data16
incl
or
icebp
xchg
push
sbb
adc
sbb
mov
mov
or
popa
xor
arpl
adcb
push
jns
ss
movsl
movsl
jbe
in
scas
ret
sub
dec
imulb
pop
dec
and
add
imul
cmp
add
scas
xor
push
sbb
arpl
iret
mov
push
cmp
rcrl
push
or
shrb
or
jo
das
push
hlt
mov
lea
sbb
movsl
shll
adc
push
jecxz
pop
pop
pusha
or
add
ret
sub
or
enter
mov
out
adc
cmp
push
add
popa
cli
jb
orps
inc
arpl
inc
mov
add
loope
jb
adc
sub
push
arpl
dec
les
pushl
cmp
adc
push
inc
jmp
arpl
push
or
pop
or
scas
push
and
adc
in
xor
stc
inc
inc
test
test
sub
xor
push
push
cmp
mov
movd
dec
cmpb
inc
or
sub
js
mov
fstl
rcrb
dec
xor
mov
jmp
adc
cmp
mov
mov
inc
in
adc
repz
mov
repnz
and
inc
mov
push
and
dec
push
roll
jge
movups
adc
rorb
pop
mov
popa
adc
lods
cld
sub
leave
clc
push
xchg
mov
dec
movsb
cmp
pop
jbe
and
jmp
cmpsb
push
and
sbb
adc
mov
sbb
sysexit
outsl
ret
int3
jp
ljmp
inc
jmp
cwtl
loopne
mov
test
cli
leave
jae
add
fimuls
nop
adc
sub
adc
add
cmp
sbb
or
pop
loope
pop
fmull
fs
xor
push
sbb
or
pop
or
mov
addl
lret
stos
fs
mov
adc
jo
mov
pop
mov
cmpb
pop
test
sbb
sbb
cwtl
fimuls
mov
or
jno,pn
inc
inc
mulb
insl
sbb
pop
loop
in
adc
xor
sbb
cmovs
push
negb
or
test
mov
cmp
cmp
adc
pop
out
lret
jg
cmp
lea
or
xor
shr
add
or
adc
push
rcrb
sub
out
push
shr
shr
or
mov
add
add
pop
xor
fimull
xlat
bound
scas
push
bound
mov
in
stos
mov
cmp
sub
mov
fildl
push
add
push
int3
cld
push
sub
xchg
test
js
inc
hlt
and
lret
clc
cmp
lea
mov
shr
adc
cli
mov
adc
jecxz
mov
cs
adc
xor
mov
repnz
push
inc
push
dec
test
daa
in
cmp
adc
out
adc
jbe
lods
mov
add
pop
subl
shr
adc
ficoms
mov
adc
iret
shl
andl
and
jmp
test
loopne
ds
clc
stos
jo
mov
or
test
sub
data16
test
adc
addb
call
sub
push
inc
add
add
ficoml
fadds
xor
icebp
sbb
pop
jnp
adc
and
push
add
ret
lret
pop
call
xor
sub
jne
imul
call
ss
mov
inc
add
dec
xchg
dec
adc
mov
mov
and
and
cli
cmp
rcr
cltd
sarb
fs
xor
mov
shlb
or
test
mov
cmp
inc
fcomp
insl
mov
idivb
xor
jmp
adc
xor
mov
cmp
push
push
push
inc
xchg
adc
push
xlat
push
push
dec
test
shrl
add
dec
inc
push
push
mov
push
push
jne,pn
je
and
pop
roll
fnstcw
and
adc
push
dec
pop
or
inc
aam
shrb
jmp
daa
in
shlb
loopne
cmp
jbe
mov
add
and
shl
or
or
xlat
add
clc
test
jne
flds
lret
push
shll
cmpsb
mov
je
mov
dec
scas
or
ret
dec
jge
jnp
cmp
in
or
sub
mov
rclb
jne
fists
stc
movsw
xor
or
mov
mov
cli
add
jo
ret
les
or
and
add
dec
or
push
pop
mov
ret
incb
adc
fdiv
fiaddl
or
adc
sbb
iret
and
sbb
data16
xorl
sbb
fcoms
je
mov
inc
and
fnstenv
xor
shl
sbb
adc
inc
divb
adc
sbb
inc
js
or
xor
dec
jne
pop
pop
pop
pop
insl
ljmp
cmp
jae
or
jae
lods
rcl
adc
orb
loope
shr
test
movsb
push
ret
adc
xchg
cli
mov
and
cld
je
hlt
xchg
les
adcl
or
push
ljmp
mov
aaa
jle
pop
add
mov
adc
rsqrtps
es
sbb
xor
xchg
rorb
gs
int
or
into
jbe
and
mov
jns
aas
mov
dec
adc
pop
daa
movsl
push
push
ds
add
sub
movsb
aas
push
or
adc
rclb
cld
es
adc
pusha
loop
setle
mov
dec
leave
adc
xor
pop
and
push
inc
jle
xchg
ret
adc
gs
mov
add
aam
or
mov
cmp
cs
int3
push
cld
mov
test
dec
pushl
dec
cmp
test
fidivs
jg
in
xor
inc
inc
jge
in
sub
push
add
xor
imul
sub
jmp
inc
jmp
incl
mov
mov
or
je
sbb
mov
mov
mov
into
es
mov
je
dec
je
movsb
and
push
cmp
ja
sub
lahf
testl
ret
cmp
jne
xchg
jge
shll
leave
adc
mov
arpl
add
cmp
pop
xchg
xchg
or
add
dec
push
cmp
mov
add
call
push
inc
cmp
or
pop
sbb
cmp
push
xor
and
es
test
scas
sbb
mov
jmp
neg
je
push
jecxz
xlat
iret
push
push
pop
cwtl
mov
push
lret
scas
mov
adc
adc
lea
mov
xchg
cmp
jne
dec
test
cs
push
xor
ret
inc
xor
pmaxsw
and
aad
dec
aaa
jne
push
pop
mov
js
sub
data16
scas
jmp
inc
sub
ljmp
sbb
cmp
push
xchg
pop
call
movsb
daa
sub
xor
xor
sbb
dec
push
push
pop
xor
addl
adc
in
inc
add
inc
sbb
cwtl
push
faddl
mov
mov
mov
pop
jle
iret
repz
dec
mov
push
rcl
rcl
cmp
repz
xlat
fcomp
or
fstpt
mov
popa
nop
data16
fcmovu
sti
inc
add
adc
callw
xor
cmp
inc
cwtl
pop
mov
sbb
xor
mov
mov
or
sub
insb
mov
dec
push
add
push
inc
push
add
fisttpl
aas
enter
mov
add
push
bound
je
test
test
jo
jmp
icebp
adc
mov
push
xor
push
ss
push
jns
std
inc
test
adc
add
add
pop
xor
lea
fldcw
adc
adc
or
lea
imul
fsubl
fdivr
lea
sar
inc
js
mov
dec
push
or
cmovs
sub
or
mov
ja
mov
mov
sbb
into
call
push
mov
dec
lock
mov
pop
sar
fisubs
addr16
sbb
pushf
push
jp
mov
add
jb
inc
lcall
dec
xor
popa
cmp
or
movb
mov
shl
mov
stos
and
testl
sti
cmp
and
and
lea
pop
sbb
les
andl
decb
xchg
fnstenv
les
push
inc
pop
mov
adc
pmulhuw
gs
sbb
dec
lods
loopne
inc
or
mov
inc
outsl
movsb
cmp
and
inc
sub
pop
call
test
rolb
in
push
js
mov
push
or
mov
or
or
test
movsb
sub
mov
sub
cmp
pop
shll
push
repz
addl
mov
jge
mov
inc
xor
inc
test
call
outsb
lcall
jle
ret
add
iret
jne
inc
inc
cmpsl
and
enter
sbb
rolb
sar
loopne
sub
incb
ret
pop
or
or
call
clc
je
sub
cmpl
xchg
popa
xor
ss
or
dec
inc
xchg
lret
dec
add
lock
mov
repnz
dec
div
cli
cli
inc
add
repnz
mov
movsb
add
lcall
mov
es
sub
mov
sbb
adc
mov
inc
and
xchg
mov
sarl
fidivl
fnstenv
xchg
push
dec
sarl
mov
lock
ret
lods
mov
dec
sbb
push
not
repnz
pushw
sub
loop
cs
jge
xchg
notb
bound
mov
xor
mov
das
and
mov
or
dec
xor
call
pop
je
or
jne
fdivs
mov
cmp
ss
inc
test
dec
cwtl
mov
inc
ss
mov
repz
sub
jl
mov
push
pop
or
call
adc
lret
push
cmp
cld
lea
fcmovu
cltd
mov
mov
ljmp
lods
mov
inc
inc
and
cmp
sbb
clc
sbb
xchg
add
sbb
testb
imulb
lock
push
sbb
jge
cs
and
lock
adc
cmp
jne
jne
call
fnsetpm(287
loopne
pusha
push
mov
lods
into
mov
adc
out
dec
push
int3
cwtl
sub
insb
sbb
adc
inc
add
inc
inc
insb
jnp
inc
add
add
push
nop
cmp
cmp
dec
stos
int
push
adc
cmp
pusha
hlt
adc
sub
xchg
clc
popa
pop
push
pop
shr
lret
inc
scas
xchg
nop
jb
push
shll
test
jne
sbb
neg
jbe
or
inc
imul
and
insl
call
dec
mov
loopne
fsubs
cmp
outsl
mov
mov
paddusw
outsb
mov
push
adc
push
add
sub
out
pop
xor
and
xchg
mov
ss
dec
repnz
mov
add
sub
lock
push
into
out
enter
add
push
test
movsb
push
js
add
enter
mov
push
shlb
sub
int3
negl
notl
jl
sahf
jne
cmp
cld
adc
add
in
into
or
mov
inc
ljmp
jmp
aas
push
adc
nop
dec
mov
dec
cmp
jge
push
adc
cmp
into
dec
sub
movb
dec
cmp
dec
cmp
add
dec
add
add
fadds
fwait
lcall
mov
jp
jne
dec
mov
and
add
jb
int
pushf
adc
xor
ret
and
add
push
dec
mov
add
jnp
adc
inc
or
push
imul
add
push
mov
adc
vorps
ret
and
test
in
or
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
popf
jmp
add
cmp
inc
xchg
sbb
loopne
imul
xchg
ret
outsb
insl
xchg
dec
lret
xchg
adc
or
jae
orl
pop
mov
out
addb
iret
xor
andb
xchg
into
pusha
inc
dec
xor
jmp
mov
rcrl
push
mov
pop
cmpps
or
mov
push
mov
xor
inc
push
pop
jae
imul
or
add
xchg
add
cmpsl
inc
inc
or
jl
or
mov
rol
push
je
dec
pop
mov
adc
xlat
dec
xchg
jp
pop
lahf
push
add
and
and
cmp
xor
mov
mov
inc
jge
push
movb
mov
pop
cmc
inc
into
add
cmp
and
cld
cld
cltd
pusha
inc
mov
adc
out
sbb
inc
stos
jg
adc
and
xchg
or
cwtl
into
xchg
sub
aam
out
loop
nop
mov
mov
cmp
pop
test
divb
into
or
add
or
sbb
sbb
add
push
loopne
mov
mov
pmaxub
xor
inc
jg
into
mov
enter
inc
stos
and
jg
or
push
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
mov
or
pop
add
mov
je
popa
lock
dec
popf
pop
lcall
add
add
repnz
shl
adc
add
and
enter
add
bound
or
je
test
mov
inc
sub
lcall
sub
jmp
mov
lret
in
lret
push
xor
popa
testb
or
scas
sbb
dec
insl
and
or
or
jo
jae
cs
pushf
pop
fmul
cmp
push
xchg
or
mov
cmp
sub
adc
inc
rol
cmp
loop
mov
sub
add
jle
ja
xlat
sbb
push
sbb
xlat
jle
and
daa
or
data16
sub
mov
jle
adc
jge
addr16
ljmp
ljmp
cmp
jno
sbb
dec
dec
or
push
mov
lea
pushf
dec
sbb
xor
add
cmp
subl
sahf
xchg
pop
cltd
orb
sub
inc
jmp
adc
dec
sub
rclb
add
and
sbb
ds
je
push
enter
cmp
inc
cld
cmp
jbe
inc
inc
int3
call
jle
mov
fs
rolb
imul
mov
jnp
ret
or
xchg
jns
lahf
sub
jmp
jmp
xor
in
add
or
push
sbb
iret
hlt
aam
fistpll
mov
movsl
faddl
adc
psubusw
out
sbb
or
rclb
nop
and
imul
jp
cmp
lods
test
fsts
or
inc
push
pusha
xor
scas
and
mov
xchg
imul
jle
pushl
in
cld
or
test
cmp
push
xor
mov
cli
cmp
mov
push
dec
push
or
jecxz
lret
cwtl
pop
mov
out
out
adc
sbb
jge
sbb
add
mov
dec
shlb
rclb
hlt
fwait
ret
push
hlt
add
int3
dec
cmp
inc
sbb
stos
dec
repnz
call
in
hlt
je
add
in
push
xor
mov
push
imul
push
pop
push
imul
rolb
enter
popa
add
and
or
lods
adcb
push
or
in
push
rcll
in
inc
push
xor
movsb
dec
sbb
add
add
mov
out
addr16
cltd
js
dec
cs
push
mov
lcall
mov
push
xlat
adc
mov
mov
cmpb
inc
sbb
mov
add
test
sbb
sbb
inc
jmp
sbb
iret
dec
inc
add
stos
movsl
push
pushf
inc
push
jne
loopne
or
push
inc
das
lods
push
pop
movsb
outsb
fiaddl
push
xchg
pop
leave
mov
rorb
jo
sub
shrb
push
and
fcomp
inc
add
pop
sub
outsb
adc
mov
str
or
addr16
pop
add
clc
mov
rcr
pavgb
or
mov
je
outsb
jns
cmp
mov
ret
aad
lods
fbld
mov
add
fimuls
cwtl
and
lahf
orb
lock
pop
inc
andl
cld
add
sbb
pop
jl
inc
dec
lea
ss
mov
sbbl
js
push
xorb
cmp
repnz
pop
nop
iret
gs
fisttpl
mov
movsb
lahf
loopne
jmp
dec
loop
and
lea
xchg
rolb
dec
ss
jne
sub
js
jg
pusha
sbb
mov
loopne
adc
cld
sbb
aaa
aad
leave
inc
js
push
faddl
sbb
inc
sar
push
pop
push
das
sbb
insb
jmp
movb
sbb
add
sbb
pop
pusha
shlb
orl
shlb
push
ret
fcom
sub
inc
cmpsb
pop
and
xor
sub
sub
push
add
add
adc
push
mov
xchg
pop
testb
and
sbb
inc
inc
and
or
push
push
mov
js
cld
sbb
xchg
mov
or
xor
and
stos
add
sbb
push
mov
scas
add
xchg
pop
int3
loopne
mov
pop
mov
daa
push
das
test
inc
push
adc
adc
add
xor
data16
add
mov
or
lods
cmp
sub
in
pop
inc
adc
adc
and
push
xchg
lds
ret
mov
and
push
push
mov
push
loop
loope
and
inc
xchg
pop
scas
sub
mov
cvttsd2si
test
aaa
xchg
mov
aas
je
pop
popa
sbb
rcr
add
and
jne
pop
and
push
mov
sbb
cmp
jmp
fstps
nop
xor
sbb
and
jmp
cmp
fdivrs
adc
test
cmpsb
jo
adc
pop
sbb
mov
fnstsw
test
int3
add
dec
or
lea
xor
mov
adc
xor
bound
mov
jmp
jae
push
push
push
inc
inc
cltd
ud2
dec
or
inc
mov
sbb
ret
faddl
leave
add
mov
fs
push
cmp
adc
in
loopne
mov
sub
jg
in
xor
aad
test
inc
in
push
jecxz
jbe
cwtl
jns
ret
pusha
or
mov
push
push
aam
mov
xchg
sub
mov
mov
clc
mov
pushf
push
push
or
xchg
mov
shlb
sub
fs
mov
push
cmp
jnp
lea
insb
rcll
dec
cmpsl
nop
inc
xchg
add
inc
or
pushf
xor
sub
xchg
in
repz
or
aas
lcall
add
and
repnz
pop
pop
cld
mov
int3
add
adc
push
dec
and
aas
insb
in
sub
add
jg
insb
xchg
outsl
sbb
adc
and
add
fildl
push
dec
pop
and
jae
adc
stos
xor
mov
inc
mov
adcb
sbbb
rcll
add
je
jnp
cltd
bound
jg
test
insl
xchg
and
inc
fwait
in
addr16
pushf
mov
cmpb
or
and
subl
adcl
fsubr
lahf
aam
xchg
xchg
and
mov
in
stc
adc
test
xlat
test
subl
pop
fs
dec
xchg
rdtsc
cmp
cmpsl
nop
push
mov
xchg
dec
nop
fmuls
push
cmp
test
xchg
addb
xchg
lock
xor
mov
add
and
push
xlat
lock
pop
hlt
add
jne
stos
and
addl
jecxz
mov
or
inc
ljmp
cmp
sbbl
inc
fwait
pusha
cmp
cmpsl
sub
shl
push
add
test
inc
xor
dec
or
aaa
adc
test
ror
arpl
cmp
pop
rclb
movsl
loope
cmp
fdivl
insl
stos
cmp
test
in
mov
aam
mov
les
es
test
daa
or
lods
into
add
leave
and
push
push
adc
dec
xor
and
sub
xor
xor
and
cmp
xor
and
inc
dec
fs
mov
insb
add
jge
xchg
sbb
inc
add
mov
add
lods
pusha
add
add
nop
enter
xchg
add
aam
sub
cmp
hlt
and
jecxz
clc
jmp
leave
and
lock
scas
push
je
adc
sbb
xor
insl
add
fwait
sub
std
dec
dec
xlat
nop
in
pop
adc
and
sbb
aad
ja
pop
dec
push
insl
inc
mov
push
aad
sbb
ja
je
inc
and
dec
and
dec
mov
in
lock
scas
pop
mov
test
add
stos
icebp
jo
test
loope
or
in
fsub
add
insl
mov
xchg
call
stos
mov
or
addl
out
xor
and
sti
std
clc
jmp
add
sbb
arpl
pop
js
enter
mov
xor
jns
and
int3
add
testb
or
xorb
roll
and
push
shll
push
add
mov
negl
mov
add
mov
in
sbb
les
or
les
and
dec
cs
dec
addl
daa
jns
sub
shlb
push
or
mov
testl
adc
xor
push
adc
add
xchg
pop
test
movq
cwtl
inc
xor
js
lea
enter
jno
popa
shrb
pop
lahf
inc
mov
cltd
nop
outsl
push
in
js
xchg
dec
inc
xchg
mov
adc
xchg
sbb
add
xchg
cli
mov
xor
lods
mov
add
add
xor
push
js
xchg
or
mov
dec
fwait
sub
dec
adc
push
popf
xor
pop
adc
and
mov
out
mov
or
leave
inc
test
mov
loopne
enter
in
fcom
das
je
pushfw
hlt
adc
in
nop
icebp
lods
xor
dec
adc
loopne
jb
jb
test
lods
mov
jb
jb
mov
jb
jb
int3
rcl
inc
xchg
scas
rorl
or
movsb
sbb
xchg
sbb
sti
dec
mov
add
push
or
or
adc
cmpsb
xchg
mov
ja
inc
push
mov
cmp
in
out
call
or
bound
xchg
imul
push
mov
add
jbe
dec
aas
pop
lea
push
cmpsl
or
test
nop
xchg
lock
xchg
cmpsb
sbb
inc
lock
cmp
gs
shrl
inc
adc
xor
out
stos
loope
xor
adc
in
rolb
out
sbb
fmuls
mov
or
xchg
loopne
mov
jge
mov
cmpsb
adc
push
ret
push
cmp
push
in
js
or
sti
pop
enter
enter
je
ss
mov
or
nop
dec
in
add
arpl
mov
fsubr
clc
popf
pusha
les
or
and
push
dec
stos
pop
mov
sbb
or
or
xor
lret
call
aam
dec
cmp
out
fisttps
shrb
adc
xchg
cmpsb
pop
sub
cmpsb
dec
repnz
pusha
shll
mov
stos
jo
adc
and
jne
in
adc
xchg
jg
cwtl
push
or
ss
mov
jbe
sbb
dec
cld
inc
fcoms
mov
mov
cmpsl
mov
xchg
iret
mov
lods
adc
xor
adc
dec
pop
leave
inc
inc
lahf
lock
lds
mov
dec
and
push
pop
loopne
sbbb
pop
aaa
inc
insl
add
jg
inc
or
rorb
or
nop
xor
jg
mov
lea
mov
inc
mov
and
xchg
fsubs
lret
cld
in
jne
add
sahf
hlt
sub
dec
push
mov
sti
aam
pop
cmp
push
fnstsw
dec
pushf
push
lods
fidivl
jbe
test
cmpb
jo
lods
in
scas
adc
jge
popf
lods
jbe
or
dec
pop
mov
dec
pop
mov
xchg
clc
adc
sub
mov
andb
lea
les
pushf
jmp
and
stos
cmp
and
add
subl
jnp
xor
shlb
or
jb
and
and
and
roll
inc
lahf
aaa
push
int
push
sbb
add
cmp
addb
mov
imul
inc
loope
gs
push
xchg
lock
or
call
movsl
sbb
adc
ret
ja
xlat
mov
loopne
mov
sub
sub
xchg
pop
in
sub
dec
inc
lods
mov
movb
fdivl
lods
jl
push
and
jns
pop
xor
es
jne
es
adc
mov
rcrl
mov
int3
sbbl
movsb
xchg
xor
dec
cs
popf
pushf
mov
in
adc
das
cmp
pop
lock
jns
mov
mov
rorl
loop
sub
and
or
aaa
sub
add
in
imul
les
sub
aad
mov
jl
add
int3
jae
nop
arpl
add
sti
movsl
or
and
and
lret
popa
inc
pop
xchg
shr
xchg
inc
mov
push
fwait
adc
rcll
push
enter
dec
mov
pop
pop
std
lock
leave
insl
and
lods
mov
bswap
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
lret
leave
leave
cwtl
mov
sub
movsb
pop
test
dec
xor
mov
in
imul
rorb
cmpsb
pop
pop
xchg
fisubs
mov
xchg
push
subb
in
aam
imul
cmp
mov
mov
cs
mov
cmpb
push
add
fsubl
dec
test
fstps
leave
shlb
xchg
xor
test
dec
add
xchg
add
lds
test
add
dec
aaa
pop
movsl
iret
hlt
adc
push
test
sbbb
je
lret
or
sbb
sub
insl
in
mov
dec
mov
and
in
sbb
add
xor
lahf
aaa
xor
xchg
adc
lret
ss
and
pushf
and
xchg
out
add
aaa
test
fsubrl
push
fsubr
ret
nop
sub
pop
xchg
or
dec
inc
enter
scas
icebp
mov
lea
insl
sub
add
aas
and
repz
fs
pop
orl
lods
movsl
insb
mov
dec
mull
in
or
inc
sbb
push
jo
xchg
outsl
adc
push
cwtl
adc
outsl
outsl
in
test
add
add
test
mov
push
xchg
inc
in
dec
cmp
rorl
and
shll
scas
aad
adc
les
adc
xor
shrl
in
aas
minps
push
rcrb
dec
test
movsl
adc
nop
xchg
enter
sbb
sub
scas
mov
mov
fsub
call
jns
fadds
add
dec
pop
and
inc
or
stos
mov
mov
sub
js
pushf
std
movsb
test
jl
add
cwtl
push
jns
adcb
shll
mov
orb
sbb
rcll
arpl
jns
push
inc
in
test
mov
or
jmp
jns
cmpsb
cmpb
jb
cmp
pop
mov
dec
out
fdivl
imul
test
ficoml
inc
aam
xchg
ja
sub
sti
test
int3
and
pop
rcl
pop
cmp
mov
aad
imul
shrb
pop
mov
fisttpl
jecxz
sbb
bound
dec
rclb
nop
mov
or
test
pop
iret
add
icebp
test
in
mov
inc
dec
add
sub
push
inc
or
fdivs
gs
es
adc
test
ret
pop
pop
xorl
jg
sub
inc
push
loope
mov
push
lea
dec
jmp
jnp
mov
pop
cwtl
or
cwtl
xchg
nop
sub
jns
mov
mov
inc
in
aas
fdivr
dec
and
nop
iret
aam
sar
cmp
push
mov
popa
aad
push
pushf
lahf
dec
ret
push
and
xchg
in
test
into
enter
popa
xor
iret
rclb
jg
in
pop
fwait
in
sbb
xchg
add
mov
lods
test
rorb
inc
push
call
mov
aas
mov
sarl
jl
insb
out
adc
imul
fs
add
inc
shll
push
pushf
inc
ds
out
mov
dec
loopne
rcl
fs
pop
mov
aad
cmc
jae
scas
bound
add
test
xor
in
mov
pop
xor
frndint
jne
push
test
fildl
mov
or
xor
xor
or
and
in
repz
add
insl
psubq
mov
mov
mov
ret
push
mov
cltd
fdiv
fisttps
stos
adc
xor
mov
outsb
and
dec
dec
lea
aam
aas
xchg
inc
xor
rorl
sbb
mov
and
inc
fcoms
add
lods
adc
pop
mov
psubq
sbb
xchg
inc
les
mov
inc
pusha
jg
enter
cltd
in
rcll
lods
fdivrl
inc
les
enter
loope
loopne
xlat
cwtl
mov
adc
mov
cwtl
pop
sbb
jg
add
mov
fs
jno
mov
push
xchg
jbe
mov
mov
aad
aam
int3
mov
xor
mov
das
mov
gs
sbb
and
adc
subl
add
add
int3
inc
pop
xor
jmp
jno
add
mov
xor
faddl
push
mov
mov
rcl
pop
cmp
rcll
lea
bound
adc
dec
jae
push
dec
fstpt
outsl
inc
addl
stos
enter
popa
enter
sbb
add
enter
mov
pop
xchg
les
mov
pushf
cmp
ja
sarb
jne
aad
adc
or
xchg
roll
mov
enter
popa
pop
hlt
inc
aas
int3
sub
inc
das
and
mov
in
mov
in
inc
outsb
popa
push
lods
aad
push
lds
mov
xor
sbbb
roll
jle
mov
dec
or
rorl
std
add
push
jae
stos
adc
pop
movsb
and
hlt
call
inc
dec
test
xchg
sbb
add
mov
pop
dec
dec
mov
fcomps
or
scas
sub
les
inc
jb
in
push
lock
or
aam
fs
pop
pusha
add
sbb
imul
inc
and
test
int
mov
int
or
cmp
add
and
not
rorb
test
out
mov
and
and
pop
add
add
sbb
imul
loop
xor
cmpl
or
add
aam
xchg
or
cmp
xor
or
fisttps
nop
fisttps
notl
adc
out
sub
test
iret
xor
insl
xchg
jo
and
mov
sbb
imul
mov
and
popf
js
aas
pop
leave
adc
jg
leave
aas
les
mov
cmp
cmp
fsubr
enter
pop
out
fsubr
pop
in
dec
pop
out
cld
mov
leave
cld
pop
roll
jecxz
imul
inc
push
or
or
push
inc
dec
inc
pusha
lret
and
adc
loop
in
lret
addb
add
test
in
or
inc
adc
lock
mov
cmp
pop
in
pusha
dec
imul
ja
add
xor
mov
sub
fbld
xlat
dec
jb
fs
andb
pushf
pop
nop
dec
xchg
leave
leave
cwtl
pusha
in
sbb
push
cmpsb
adc
lock
adc
enter
aam
mov
sbb
js
fwait
loopne
loopne
mov
mov
dec
out
arpl
call
mov
jg
or
fsubrl
enter
das
add
add
and
jb
add
xor
xchg
adc
sbb
and
in
add
inc
int
aaa
cmp
fimull
out
xorl
sbb
dec
pop
mov
sub
inc
sub
xor
std
in
sub
repnz
add
pop
xor
mov
cltd
xchg
xchg
cltd
sbb
adc
inc
nop
das
aam
in
andl
faddl
pusha
leave
cmpb
add
add
imul
cmp
dec
mov
xchg
invd
pop
add
add
cs
sahf
sti
or
and
es
or
mov
pop
sub
pop
mov
stos
and
add
push
push
xchg
aam
scas
inc
subl
in
add
aaa
adc
movsl
jb
push
pushf
filds
mov
fadds
cltd
call
cld
adc
lock
orb
sbb
add
push
adc
mov
sub
inc
aad
add
or
sub
xchg
in
sub
rolb
popa
cmp
add
js
mov
rcl
in
pop
cmp
pop
push
sbb
or
dec
cmpl
pop
loopne
aad
stos
or
arpl
inc
push
aam
mov
movsl
das
leave
jp
imul
push
inc
xchg
loope
mov
xchg
rolb
or
test
call
test
push
and
sub
fwait
mov
lods
jmp
push
sbb
lds
xchg
push
leave
aam
jne
cmp
add
test
xor
or
mov
push
mov
xchg
pop
adc
aad
cmp
in
mov
mov
flds
sbb
fidivrl
in
adc
popa
push
inc
mov
gs
xorb
imul
inc
xor
call
popf
dec
sbb
fbld
add
lods
and
mov
push
add
jae
movsl
push
lahf
mov
push
and
fcmovnb
sahf
leave
mov
pushf
adc
xchg
dec
jl
insl
pop
leave
and
dec
insb
hlt
pop
and
dec
xor
push
fadds
xor
dec
inc
jo
imul
cwtl
inc
pusha
inc
push
daa
fdivs
push
nop
rolb
jecxz
add
cmc
les
cmp
nop
loopne
mov
inc
test
addb
xchg
imul
dec
dec
es
fs
aam
xchg
fs
int3
enter
data16
mov
scas
mov
aam
adc
lea
mov
add
push
push
shll
stos
test
dec
adc
jae
cmp
ficomps
test
xorb
scas
mov
xchg
les
mov
xchg
xor
lods
lea
dec
int3
shlb
arpl
add
mov
push
adc
xorb
jecxz
adc
aam
push
mov
jmp
cmpsb
pusha
and
aas
sar
test
aaa
sbb
lahf
das
pop
and
cmp
daa
jae
jo
pop
push
dec
stos
aas
fildl
fsubrs
push
adc
mov
mov
push
aad
loop
mov
sar
adc
je
shl
leave
xor
push
enter
or
mov
adc
addb
cmpsl
cltd
fidivl
lock
add
movsb
or
lock
pop
or
cltd
repz
push
stos
lods
xor
jecxz
mov
arpl
shrb
and
mov
es
ret
or
add
and
mov
add
sbb
adc
aam
xchg
cmp
dec
add
popa
xchg
pushf
shlb
cs
lock
fadds
jge
inc
aam
fdivs
enter
pop
test
ss
add
add
sbb
dec
daa
mov
xchg
jo
enter
fsub
or
shll
jno
pop
add
popf
sub
test
stos
adc
inc
out
push
or
imul
or
lret
jno
stos
popa
adc
and
pushl
mov
out
adc
test
shl
jbe
rcl
aam
aam
xor
inc
fdivrl
add
mov
leave
arpl
stc
fimull
aam
sti
mov
es
or
sbb
nop
inc
jne
cli
mov
scas
xchg
dec
cmp
in
cltd
fs
dec
cmp
pusha
daa
cltd
hlt
add
adc
sbb
sub
je
xchg
cmp
test
cltd
ss
fisubl
inc
cmp
xor
xor
and
adc
inc
mov
xchg
ror
lahf
sbb
call
cli
js
adc
imul
xchg
mov
adc
je
insb
scas
in
add
pusha
sub
adc
test
and
jo
add
orb
popa
mov
cltd
pop
mov
in
icebp
push
pop
adc
pop
sub
dec
shll
orb
jb
stc
cld
addl
jo
pop
insl
add
rcr
sub
add
xor
push
sbb
cmpsb
inc
sahf
push
adc
or
in
xchg
push
adc
jo
notb
and
nop
sub
orl
es
arpl
push
repnz
rorl
or
mov
jp
mov
into
mov
outsl
mov
fsubrs
shl
mov
lock
pop
inc
in
jle
or
movb
jl
in
out
int
testb
loope
testl
xchg
push
adc
mov
lcall
and
mov
xor
nop
mov
mov
jmp
push
or
sub
addl
sbb
sbb
mov
dec
fcoml
adc
jg
xor
xor
roll
mov
push
push
div
loop
dec
sbb
pop
adc
pushf
cmpsl
loop
sbb
clc
ret
lahf
out
clc
push
scas
or
cmp
mov
cltd
shlb
add
push
int
jns
push
push
jp
stos
and
xor
mov
cmp
nop
add
pop
jge
jnp
shl
push
testl
int
cmpsl
aas
jp
inc
add
jae
pop
mov
or
call
jl
inc
xor
push
inc
add
jg
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
add
or
pop
and
aaa
and
inc
xchg
sub
rcll
mov
mov
jns
mov
jns
xchg
jle
test
push
push
out
sahf
out
dec
cmp
sub
test
incl
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ljmp
push
dec
pop
pop
pop
popa
bound
gs
ljmp
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
mov
pop
das
mov
gs
xchg
adc
clc
push
or
jo
decl
cmp
adc
add
dec
repz
push
pop
push
outsl
es
in
fcomip
cmp
add
dec
outsb
je
jb
outsl
arpl
pusha
addr16
fs
out
sbb
push
dec
imul
push
sti
jne
push
gs
xor
cs
fdivr
stc
iret
adc
popa
and
popa
je
outsl
outsb
push
test
cmp
push
sub
sbbb
lock
rdpmc
add
add
push
incl
sub
xor
add
stc
rolb
inc
outsl
jb
js
je
jb
mov
jae
cmp
or
add
add
add
add
gs
push
je
imul
jne
jb
mov
outsb
mov
xor
xor
idiv
mov
cmp
dec
and
negb
pop
jns
add
das
das
adc
push
dec
push
ja
add
push
insl
bound
daa
dec
outsl
jbe
pop
mull
dec
arpl
push
jo
sub
jnp
clc
inc
jne
jne
dec
jne
xchg
mov
stc
push
roll
jb
insb
dec
popa
jb
push
daa
enter
insb
adc
out
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
push
jne
lock
fnsave
xor
jae
fwait
sub
push
scas
clc
sbb
cmp
jle
dec
js
push
jne
xchg
popf
jae
outsl
pop
dec
inc
ds
popa
das
jo
sbb
pop
fistps
push
sbb
mov
inc
xchg
ljmp
imul
xor
add
mov
dec
adc
cli
jg
nop
jecxz
es
sub
sub
sub
cs
cmpsl
test
imul
pop
pop
sub
cmp
jl
jle
add
arpl
test
jno
shlb
add
dec
in
jecxz
sbb
xor
rorl
jae
cs
shll
jne
inc
inc
mov
out
and
and
testb
dec
dec
push
push
sbb
outsb
out
dec
dec
inc
sbb
and
push
insl
xchg
add
xor
sbb
push
jo
xlat
dec
jg
imul
insl
pop
mov
cs
inc
mov
xchg
testb
push
fs
orl
pushf
iret
lcall
xorb
inc
popa
and
int3
mov
mov
sbb
xor
jl
fcmovb
and
insl
push
xchg
xor
aas
xor
addb
dec
rolb
pushf
lcall
jae
add
dec
movsb
dec
mov
and
or
push
rcr
mov
sbb
jp
push
pop
into
hlt
xor
gs
bound
stos
mov
je
and
add
test
push
ds
fwait
leave
sbb
loopne
outsl
add
pusha
mov
outsl
push
or
sub
sub
arpl
pop
and
jb
cmp
arpl
andb
mov
sti
into
fiadds
inc
xchg
insb
imul
out
xor
int3
or
or
push
lcall
mov
addb
jo
cmpsl
jns
push
fistps
push
shlb
popf
xor
or
add
xor
hlt
pop
dec
int3
cltd
and
add
push
fcoms
loopne
repnz
insl
outsl
ss
fs
jo
cli
jbe
sahf
inc
sub
push
add
or
mov
cwtl
shl
ljmp
popa
scas
inc
lock
out
inc
jle
imul
out
push
cmp
cmpsl
mov
jo
bound
jno
fildll
lods
xchg
in
in
ljmp
bound
das
imul
pop
or
pop
out
jno
rclb
leave
xor
rcll
int3
enter
fnstsw
adc
push
cmp
mov
xacquire
cmp
push
or
into
add
lret
cmp
sub
push
jae
xor
scas
into
push
pushw
pusha
jo
call
test
cmp
shrb
cmp
imul
dec
pop
sti
mov
pop
cmp
push
and
fstp
lods
mov
inc
imul
adc
pop
mov
and
dec
cmp
ljmp
mov
pop
loopne
fimull
iret
sub
push
shl
xchg
ljmp
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
aad
popa
mov
aas
into
dec
add
xor
jg
mov
imul
mov
add
xchg
in
cmp
imul
xchg
adc
add
add
adc
add
add
add
add
pushl
push
pop
and
push
pop
pop
or
aaa
jbe
cmp
ds
push
pop
hlt
and
or
pusha
add
cmp
out
imul
add
pop
sub
add
mov
mov
addl
outsl
sahf
mov
test
add
orb
fwait
daa
push
cmpb
push
and
sub
insb
imul
jb
int3
push
jo
add
inc
repz
push
mov
cmp
int3
js
jo
daa
iret
in
int3
rorb
sbb
iret
and
pop
jb
nop
xchg
xchg
repnz
call
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
pminub
out
push
or
mov
imul
fcoml
sbb
add
enter
pop
leave
inc
repnz
add
test
add
addl
add
ret
push
ja
add
push
and
push
and
add
mov
inc
cmpsb
add
ja
stos
pusha
push
mov
dec
adc
aaa
add
pusha
inc
push
test
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
addl
lds
stos
cmp
insb
shll
add
push
pushl
or
fists
outsl
ja
out
mov
inc
cs
jae
jb
bound
mov
stos
inc
lods
xchg
jbe
ss
popa
mov
bnd
mov
lea
dec
mov
inc
in
fldt
bound
inc
push
mov
outsb
insb
shlb
inc
sahf
insb
gs
mov
dec
sub
pop
mov
daa
add
insb
in
divb
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
push
test
les
pop
enter
fsubrs
mov
mov
outsb
rolb
xchg
or
or
cmp
outsb
data16
sbbl
jns
push
or
pop
fisubs
jbe
push
push
or
fs
and
xor
or
mov
clc
popl
cmp
sbbb
gs
xor
or
fisubl
dec
dec
lahf
pop
dec
and
lock
xchg
pop
pop
push
push
jae
sbb
push
cmp
cmp
arpl
or
movsl
jae
addr16
sub
out
push
das
outsb
gs
mov
data16
insb
adc
or
sti
dec
push
push
push
push
dec
testl
pushf
inc
or
mov
cmp
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
jg
jo
pop
shlb
cmp
sub
push
jne
adc
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmpsl
cmp
es
cmp
iret
repz
and
sub
inc
jl
lcall
sub
sub
addr16
mov
dec
sub
sub
push
scas
xchg
loopne
inc
jmp
cmp
and
add
pushf
ficompl
cwtl
jb
jmp
adc
fs
jb
imul
mov
ss
lret
push
sarb
and
xor
jo
sub
mov
jl
lahf
repz
or
mov
repz
in
loopne
enter
jae
cmp
pop
add
sti
push
in
mov
mov
inc
push
iret
repz
xchg
nop
add
repz
jo
or
fisubl
das
push
fs
fidivs
ror
mov
testl
into
out
push
push
and
dec
add
inc
inc
ja
cmp
jns
repnz
data16
adc
out
cmp
incl
shl
jns
out
pushf
jl
cmp
sahf
ja
sbb
incb
mov
sahf
out
inc
inc
cmp
iret
repz
add
std
lock
movsb
ds
repz
push
sub
in
jns
out
rcrb
ret
cmpsl
pop
aam
pop
xor
jno
shlb
jns
cmp
jns
xor
shrl
cbtw
cmpsl
pop
push
loope
cmpsb
bound
fs
sbb
jae
jb
xor
mov
shrd
sub
add
sarb
insb
or
adcb
pop
xchg
mov
sbb
lcall
push
inc
dec
xor
inc
dec
dec
dec
push
push
sbb
sti
sbb
xor
push
dec
inc
dec
add
dec
dec
inc
add
pushl
das
adc
sub
adc
stc
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
and
pushl
pop
arpl
cmp
adc
dec
scas
jp
mov
jno
in
fstl
mov
and
cmp
xchg
cmp
dec
imul
lret
add
inc
mov
fcos
or
push
test
sub
fwait
ss
sbb
jmp
std
sbbl
xor
incb
int3
dec
dec
xor
dec
clc
lcall
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jmp
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
pop
jmp
mov
xchg
push
pop
mov
ds
dec
je
test
clc
push
xor
inc
dec
in
aas
into
mov
pop
pop
repnz
sti
adc
hlt
and
es
mov
add
push
dec
push
pushf
inc
inc
or
outsb
add
jbe
and
sbb
dec
jo
inc
sbb
ficoms
in
daa
inc
push
and
push
xchg
inc
dec
push
dec
push
or
jns
sub
mov
sbb
push
fistpll
je
adc
adc
cmp
push
xor
pop
and
push
and
push
or
and
or
inc
push
mov
push
sub
mov
sti
mov
inc
adc
jno
jb
jbe
pop
dec
ss
push
movd
data16
add
push
sbb
sbb
inc
pop
ja
mov
adc
add
inc
add
push
push
push
inc
pop
or
aas
cs
push
ljmp
sti
adc
sbb
dec
aas
dec
ret
inc
add
std
outsl
fbld
and
dec
dec
xor
and
dec
sub
push
and
cmp
dec
adc
pop
inc
pop
sub
fisttpl
dec
sbb
lock
dec
dec
dec
out
mov
or
dec
push
sub
sub
sbb
sub
scas
jge
inc
inc
add
in
mov
pop
push
or
arpl
push
adc
sub
push
push
es
fisttpl
push
cmp
push
push
pop
negb
js
push
sub
cmp
cs
sub
pop
inc
or
pop
cs
pop
sub
das
sbb
mov
push
pop
push
pop
dec
sub
cmp
and
dec
popa
pop
je
pop
dec
sub
dec
sub
pop
jle,pn
cld
dec
pop
mov
push
push
pop
add
and
test
mov
push
ret
into
push
subl
xlat
subl
arpl
cmp
jecxz
frstor
gs
out
icebp
out
xchg
sbb
aaa
push
xor
push
aaa
or
push
cmp
nopl
ds
testb
adc
or
sub
testb
jg
pop
ja
push
sbb
mov
push
pop
sub
sub
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
iret
repz
pop
adc
xor
addb
mov
cmp
shl
lock
sahf
imulb
adc
inc
push
push
mov
outsl
cmp
mov
jo
nop
push
shr
ds
repz
and
adc
sbb
push
sbb
or
push
add
es
int3
hlt
inc
or
push
push
cmp
outsl
insl
lods
pop
xor
popl
outsb
adc
mov
or
pop
out
mov
add
imul
bound
xor
and
in
or
rclb
and
push
sub
push
nop
push
rclb
push
scas
into
jne
out
jo
lock
outsb
xlat
cmp
pusha
jo
daa
push
push
imulb
out
jns
inc
mov
ds
xor
push
push
xor
mov
movlhps
adc
les
and
stos
lcall
repnz
push
xchg
sub
dec
and
adc
adc
js
add
jl
jle
stos
clc
sbb
or
dec
inc
inc
minps
jge
scas
nop
add
fistpl
scas
jecxz
adc
dec
push
inc
cmpsb
or
add
cmp
adc
inc
jmp
scas
push
and
sbb
xchg
push
or
pushf
jbe
flds
pop
ss
insb
push
inc
orb
and
push
pusha
ss
iret
lods
sub
pop
roll
and
push
or
dec
addb
xor
stos
out
push
imul
sbb
cmp
ja,pn
movsl
and
leave
ja
sub
popa
aam
scas
inc
push
adc
xor
push
ss
sub
sub
arpl
pop
pop
mov
sahf
jge
add
cmp
outsb
loope
subb
dec
pop
sbb
pop
test
jbe
fs
daa
adc
push
lods
xor
scas
out
jl
and
outsb
jae
cmp
push
add
sub
subb
adc
and
dec
incb
das
push
cmp
andl
daa
add
shlb
mov
inc
ds
and
jnp
and
sub
or
adc
cmp
and
ja
rcll
ror
out
inc
adc
push
push
sbb
je
in
inc
dec
scas
and
movsb
clc
sbb
outsl
xor
rcll
mov
pushf
mov
xchg
lcall
or
stc
and
and
pop
div
or
xor
adc
adc
inc
xor
stos
clc
adc
pop
in
sub
shlb
inc
pusha
addr16
aaa
mov
add
mov
outsl
roll
add
ss
push
pop
sahf
push
lret
popa
push
xor
test
ret
in
dec
xor
notl
push
push
or
lods
adc
lods
dec
adc
mov
sub
fidivs
push
xor
xor
stos
adc
dec
test
cmpsl
cmp
pop
movsb
push
or
jbe
or
jle
sbb
ss
sub
sbb
cmp
push
or
jne
push
lahf
and
insb
jne
add
dec
sahf
sub
popf
dec
dec
dec
add
dec
pop
or
pop
ss
in
push
mov
subb
jge
adcb
dec
dec
aad
out
cmpsb
sub
pusha
sub
bound
dec
sbb
or
or
dec
ficompl
fisttpll
sahf
bound
add
ret
stos
sub
mov
adc
lods
add
incb
dec
pop
or
movsl
xor
iret
stc
push
pop
adc
into
mov
sub
mov
addb
sbb
sbb
insb
inc
pop
inc
imul
adc
out
ljmp
mov
das
adc
rdtsc
inc
syscall
sbb
not
orps
das
add
or
sub
add
loopne
cmp
or
cmp
add
mov
xchg
pusha
or
adc
sub
imul
inc
outsb
ret
ja,pt
push
push
push
xchg
stc
scas
sahf
jae
insl
popa
imul
xchg
outsl
push
push
pop
outsl
jo
js
mov
ds
push
ja
or
les
inc
adc
iret
repz
cs
push
lods
jne
out
add
movsb
fisubrs
ja
xchg
pop
cmp
and
sub
das
add
dec
cmpl
pushf
add
sub
mov
xor
or
or
pop
xor
stos
inc
aad
or
aaa
push
cs
in
or
inc
aaa
nop
call
aaa
fcmovu
pop
mov
sub
fistpl
sub
sbb
jns
sub
hlt
pop
pop
pop
dec
xor
fstl
stos
or
sub
add
mov
xchg
sub
add
loopne
sub
push
jge
push
fisttpl
and
pop
mov
add
xor
sub
sub
add
sub
add
adc
les
push
inc
add
inc
clc
cs
testl
mov
sub
sub
sub
sub
aas
and
jl
and
push
sub
pop
push
test
popa
add
js
adc
out
popa
jne
inc
adc
dec
ret
out
call
sti
insb
outsl
jb
bound
bswap
lods
ds
push
push
je
xlat
mov
daa
and
jae
popa
cwtl
push
push
outsb
pop
je
aas
mov
add
outsb
daa
enter
push
das
and
xor
js
es
xchg
adc
dec
outsl
jae
dec
lods
aaa
and
test
jo
or
shlb
and
pop
decl
push
push
das
xor
xor
dec
adc
ror
add
pushf
fiadds
pop
imulb
pop
sbb
sub
pusha
adcb
mull
push
sub
iret
push
les
or
dec
sub
sti
das
cmp
xor
je
dec
jae
push
or
xchg
test
ljmp
or
push
aaa
mov
jb
outsl
imul
aad
mov
lock
pop
outsl
repz
adc
inc
add
daa
jl
punpckldq
inc
add
or
pop
pushf
xor
push
sbb
sbb
xor
jp
xor
push
sbb
adc
sbb
cmp
sbb
inc
fcomip
imul
sahf
pop
dec
sub
pop
mov
cmp
mov
ss
pop
or
sub
mov
mov
lcall
adc
and
or
pop
fcomps
push
mov
pop
xor
test
push
sub
lea
dec
dec
xor
in
or
adc
mov
popa
es
leave
ljmp
popa
sbb
enter
insb
psubd
inc
push
mov
dec
or
adc
dec
sbb
adc
add
adc
adc
aaa
test
lcall
xlat
dec
pop
dec
sub
or
test
aaa
sbb
push
push
push
mov
sub
or
xor
adc
aaa
shrb
push
xor
mov
xchg
dec
daa
dec
aaa
push
inc
push
push
or
cmp
mov
imul
pop
and
aaa
daa
pop
in
insl
inc
icebp
pop
ds
adc
add
pop
xchg
lret
add
push
ss
aaa
add
pop
ja
xor
sbb
test
testb
sbb
add
stc
push
out
dec
inc
sub
push
or
adc
xor
icebp
ljmp
xchg
sti
les
cmp
sti
mov
rolb
adcb
stc
lcall
loopne
xor
or
addr16
pusha
adc
inc
addr16
js,pn
cvttps2pi
inc
nop
jno
imul
lcall
adc
add
or
or
xchg
loop
mov
sub
or
inc
jo
mov
lods
mov
cli
pop
push
adc
xlat
shlb
jnp
xor
call
dec
sub
outsb
xor
xor
daa
xor
aaa
adc
pop
fisubs
cmp
pop
arpl
aam
adcl
and
sub
sbb
test
sub
or
xchg
sbb
lods
xchg
and
sarl
add
sub
cs
pop
cmpsl
clc
xor
not
clc
adc
sub
cmpxchg
jns
pop
mov
test
adc
inc
daa
pop
loopne
sub
adc
push
fsubrp
mov
adc
dec
cmpsb
lods
aad
adc
inc
add
adc
push
inc
fldcw
mov
push
cmp
lods
and
inc
mov
adc
cmp
aas
cmp
push
and
pop
call
pop
das
mov
push
imul
das
pop
xchg
ret
push
adc
pop
add
xchg
push
pop
push
mov
and
aas
gs
push
loopne
jmp
pop
pop
xor
or
dec
xor
dec
call
in
and
add
cld
jne,pt
xor
or
addb
add
xchg
addl
adc
sub
fildll
and
or
dec
adc
add
add
cs
cmp
dec
or
mov
sub
xor
jg
add
xor
sub
sub
add
or
jl
inc
and
adc
push
or
je
dec
loope
sbb
pushf
cmp
fisubl
pushf
fildll
push
imul
add
pop
pop
daa
scas
mov
add
scas
sub
add
lcall
pop
fadds
and
dec
insl
pop
notb
adc
add
sbb
add
adc
sub
in
jnp
push
adc
into
or
out
dec
push
imul
popf
xchg
cltd
or
ret
jo
test
jb
shll
push
shl
sub
outsb
ja
sbb
mov
outsl
jnp
adc
sub
xor
mov
sub
pop
xor
pop
mov
movsl
or
or
and
jno
fs
mov
lods
jno
and
sub
cmp
pop
lea
aas
stos
cmp
jno
mov
push
divb
xchg
inc
push
in
cmpsb
in
andl
add
mov
mov
pop
sub
mov
fcoms
pop
mov
shrl
pusha
and
xor
andl
cmp
inc
js
and
add
xchg
inc
and
add
outsl
aam
push
dec
iret
fisubrl
jae
daa
dec
lods
pop
sbb
mov
sub
ljmp
xor
aaa
dec
cs
lods
les
push
inc
pop
dec
add
jge
jo
jg
data16
push
jb
mov
loopne
cmpsb
push
xor
pop
ret
nop
mov
sub
loop
adc
daa
fwait
push
jo
testl
mov
add
adc
icebp
loopne
push
pusha
push
gs
jnp
rorb
adc
pop
and
or
mov
movsl
ret
jecxz
daa
push
push
int3
into
lods
add
pop
and
pop
fs
sub
xor
and
cmp
inc
pop
xchg
dec
adc
movsb
shrb
sbb
jno
in
testl
adc
sbb
inc
mov
cwtl
scas
push
and
lods
pop
insb
inc
push
notl
fadds
icebp
pop
mov
pop
aaa
mov
xor
js
aaa
xchg
lcall
loopne
and
outsl
jo
insb
test
sahf
ja
fs
gs
push
and
ret
pop
jmp
lods
inc
das
sub
and
cmova
dec
repnz
cmpsb
push
pop
adc
jae
shlb
repz
mov
push
shlb
sub
push
xor
in
mov
inc
lock
push
aaa
push
cmp
cmp
sarb
fstps
aas
inc
push
push
int
mov
addb
push
inc
cs
adc
push
cmpsb
pop
inc
rclb
and
add
jl
push
dec
push
dec
dec
mov
ss
shlb
mov
mov
jmp
call
das
sbb
ljmp
mov
ja
mov
sti
ljmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
mov
fldt
cmp
mov
or
sti
mov
ds
pop
sbb
sbb
mov
dec
fsubs
mov
pop
sbb
mov
pop
dec
sarl
pop
shl
dec
push
add
pop
and
mov
pop
push
xchg
inc
jb
and
xor
imul
lret
pop
pusha
dec
scas
int
jo
pusha
add
pop
push
mov
jb
fsubrs
fadds
imul
dec
inc
xor
cmpb
and
leave
mov
pop
lock
pusha
loopne
dec
sahf
pop
shlb
cmp
inc
mov
xchg
nop
orb
fld
pop
or
scas
cmp
pop
and
ficomps
push
dec
ds
pop
dec
test
push
int3
loop
rclb
mov
fcomip
inc
cmp
cmp
xor
xor
inc
xor
fldt
inc
inc
xor
inc
push
xor
pop
and
popa
add
jne
std
pop
mov
cmp
insb
push
outsb
add
rcl
test
and
testb
jb
out
movsl
pushf
and
dec
jp
xchg
push
or
push
jb
sti
outsl
sub
jo
ja
outsl
jne
cmp
popa
outsb
mov
daa
loope
ficompl
cs
rclb
inc
or
fsubl
daa
sub
cmpsl
aaa
movb
jnp
inc
ja
sbb
das
fisttpl
das
inc
pop
cld
out
mov
es
pop
push
enter
adc
out
js
jnp
ja
aaa
ficoml
add
sbb
iret
rcll
fsubl
or
xchg
dec
xor
dec
xor
lock
sbb
or
push
and
fidivs
xchg
cld
loope
adcb
fisubrl
jbe
and
mov
add
stos
xchg
in
mov
push
aaa
sub
inc
inc
xor
inc
jns
loope
jno
fisubrl
dec
dec
adc
cli
xchg
add
aaa
add
mov
inc
dec
rcll
xlat
adc
in
das
dec
hlt
subl
cwtl
mov
dec
xchg
cmpsl
push
push
add
mov
mov
out
rolb
out
jl
push
sahf
movsb
es
cltd
pop
mov
clc
mov
push
lods
insl
mov
negb
dec
mov
xor
iret
enter
push
sub
xor
lcall
iret
push
hlt
iret
jl
jno
lret
fldt
popw
push
mov
test
mov
xor
sarb
cmp
xor
lret
stc
mov
aas
ja
jns
cs
mov
imul
pop
lock
push
and
inc
pop
pop
xor
pusha
pop
lods
popa
scas
out
cmp
mov
pusha
dec
f2xm1
mov
push
cld
push
mov
xchg
int
sti
fisubs
leave
push
add
outsb
popa
mov
xor
cmp
cs
int
push
adc
pop
std
idivl
repz
dec
movsw
mov
mov
aam
in
outsl
fs
push
and
dec
and
mov
push
mov
aaa
mov
push
enter
lcall
mov
jns
idivb
cmp
pop
pop
push
insb
push
jle
jl
out
mov
adc
insb
das
mov
dec
push
nop
testb
fcmovne
xchg
je
push
idivl
xlat
jl
mov
repz
pop
ret
jb
push
jnp
push
push
sbbl
inc
out
mov
test
es
data16
cmpsl
stc
or
mov
mov
mov
lahf
jnp
dec
repz
xchg
pop
jle
pop
push
iret
repz
outsl
mov
dec
repz
jg
jo
mov
repz
sub
mov
imul
inc
xorb
repz
movsl
repz
out
in
adc
cmp
out
lcall
in
repz
std
sbb
cmp
repz
lret
jle
push
test
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
test
xor
adc
mov
mov
mov
scas
int
mov
leave
loop
and
pop
in
bound
push
pop
mov
xchg
push
ljmp
pop
repnz
jge
data16
pop
sbb
enter
adc
lahf
call
xchg
inc
repnz
iret
pusha
or
pop
or
add
sub
push
xchg
and
xor
or
inc
mov
outsb
push
push
jae
mov
stos
push
popa
aas
inc
push
mov
int
inc
sbb
testl
ja
aaa
mov
pop
loope
stos
cmp
inc
jnp
dec
jae
fisubl
push
fiadds
jae
dec
roll
icebp
cmp
dec
je,pn
push
ljmp
orl
xorps
lret
aad
cmpsb
push
insb
pop
push
dec
pop
je
pop
jmp
jmp
aaa
push
fbstp
rcr
or
das
push
adc
outsb
push
inc
imul
mov
retw
frstor
inc
dec
or
dec
mov
nop
dec
js
ja
lods
push
lret
and
mov
cltd
int
jns
enter
push
jle
loope
ss
ds
scas
push
das
adc
ja
mov
jo
testb
je
push
mov
popa
jo
jae
es
outsl
and
das
into
cmpb
sub
mov
push
cmpsb
mov
mov
out
mov
xor
xor
xor
xor
cmp
cmp
imul
xor
cmp
push
add
pop
add
cmp
or
pushf
sti
mov
or
push
pop
add
add
loopne
or
pop
jo
ljmp
jne
mov
sbb
dec
dec
dec
sub
cmc
or
fisubrs
inc
aaa
adc
fwait
cmpsl
in
dec
pop
push
add
xor
mov
add
daa
dec
xor
and
iret
pop
ljmp
outsb
ja
jmp
mov
push
aas
pop
negb
add
adc
or
dec
push
adc
mov
pop
adc
or
and
mov
or
pop
adc
ret
jbe
xchg
cli
ret
adc
xor
mov
popa
xlat
ret
dec
pop
cmp
jl
daa
aas
pop
fsubs
lock
sbbl
adc
negb
pop
sub
mov
push
jbe
mov
or
fisubrs
add
push
cs
sbb
sahf
subl
cmp
les
jae
xor
pop
lea
les
incb
dec
pop
or
push
test
sub
mov
sti
mov
mov
mov
arpl
mov
and
add
aaa
xor
and
jl
ret
lret
daa
mov
out
add
ss
repz
pop
sub
aaa
fnsave
insl
adc
aaa
rolb
pop
lahf
into
lcall
mov
xchg
inc
fildl
das
stos
push
inc
sbb
xchg
pop
lock
mov
jge
mov
movsl
xchg
aad
mov
das
divl
mov
or
and
int
pop
test
jno
jp
imul
or
mov
xorl
daa
dec
ds
icebp
into
icebp
mov
adc
repnz
cmp
or
add
sbb
or
cmp
jo
adc
das
mov
rcr
push
scas
pop
cltd
daa
lahf
loopne
rcrl
outsb
mov
add
pop
int
add
push
faddp
push
jg
push
push
push
push
ret
ret
pop
pop
adc
rorb
and
pop
insb
pop
mov
loop
iret
xor
mov
fadds
aaa
outsl
lret
inc
test
mov
mov
adc
aas
and
adc
popa
or
jmp
and
or
fsubl
imul
loop
adc
popl
xchg
out
mov
lahf
shr
and
dec
sbbb
js
xchg
fnstenv
mov
sahf
test
clc
pop
xor
inc
sbb
pop
aad
data16
pop
inc
pop
xchg
dec
stc
pop
inc
test
es
mov
push
dec
ret
sbb
mov
sub
cmp
das
loope
roll
sbb
pop
aas
sbb
adc
daa
andb
pushf
packssdw
in
into
adc
sub
jne
dec
fcompl
sbb
jae
fdivr
das
add
push
jp
es
or
inc
addr16
addr16
lock
push
dec
push
adc
dec
sbb
or
push
pop
and
xchg
inc
fcoms
xchg
jbe
inc
sub
cmp
push
sti
adc
je
icebp
das
or
sub
sub
sub
inc
add
add
xchg
or
fbstp
sbb
push
or
push
pop
dec
cs
ret
sub
mov
adc
shlb
or
sbb
dec
dec
adc
dec
dec
sub
and
loopne
loopne
mov
sub
outsl
into
or
data16
add
push
les
add
es
jbe
fiaddl
mov
je
xor
clc
cli
ja
fildl
add
push
adc
push
repnz
or
adc
in
push
outsb
lods
pushf
push
sub
mov
fcoml
fs
orb
or
outsb
adc
mov
pop
adc
mov
push
adc
bound
sbb
xchg
fs
cltd
xchg
add
mov
shlb
sub
mov
adc
fstpt
dec
rclb
or
push
fistpl
and
dec
inc
cmpsb
subb
or
rcrb
gs
ret
or
mov
and
inc
adc
cmpsb
adcb
push
inc
push
sbb
lret
and
push
mov
aam
xor
mov
notl
pop
fdivl
les
hlt
adc
sbb
es
xor
popa
sub
and
icebp
inc
aad
das
cmpsl
inc
mov
aas
inc
ret
insl
pop
comiss
out
mov
adc
imul
nop
adc
inc
stos
push
mov
aaa
popa
popf
test
pop
repz
es
adc
pop
sbb
iret
sub
sahf
out
cmp
roll
add
insb
out
sarl
xchg
or
pop
push
add
jl
mov
es
adc
add
mov
insb
out
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
push
and
daa
add
jae
test
stc
jg
pop
pop
cs
and
ficoms
sub
test
or
loopne
push
sbb
xor
pop
sarl
pop
xlat
ds
jg
cmp
jo
push
jo
je
movsb
nop
jl
jbe
lds
mov
xor
add
adc
add
ljmp
add
adc
adc
sub
add
pop
add
or
push
pop
sbb
xor
loopne
mov
sub
cs
dec
sub
push
dec
or
push
dec
adc
inc
ss
lcall
insb
mov
dec
adc
ss
or
or
cmp
push
inc
and
decl
ss
push
xor
and
sub
pop
pop
dec
sub
adc
adc
xor
inc
dec
cmp
push
xor
incl
pop
mov
dec
out
inc
push
and
sub
dec
idiv
idivb
xor
mov
adc
pop
cmova
inc
cs
daa
xchg
mov
call
addps
dec
push
push
or
or
push
inc
dec
and
xor
cmp
or
add
cli
incl
inc
xor
pop
xor
and
dec
sub
push
loop
inc
lods
daa
sbb
add
pop
fsts
nop
mov
and
add
or
imul
sbbb
push
pop
dec
mov
push
inc
cmpsl
inc
mov
sarb
xor
and
push
push
dec
dec
mov
arpl
push
dec
rolb
jg
pop
bound
dec
mov
mov
add
jns
out
and
xor
test
add
mov
push
pop
loop
inc
movsb
xor
adc
inc
cld
xchg
push
push
dec
insl
push
outsl
inc
xchg
push
enter
scas
mov
pop
add
loope
mov
mov
xor
adc
add
ss
pop
shrb
jo
inc
jb
xchg
cmp
sub
jns
pavgw
push
je
push
inc
push
xor
cli
dec
inc
dec
push
dec
pop
add
outsl
mov
xlat
testb
into
dec
clc
jg
push
ds
pop
sbb
aaa
adc
xor
daa
push
rcrb
int3
xorps
adc
stc
pop
fdivrl
push
sub
xor
fadds
pop
fsubr
fnstenv
pop
daa
sbb
push
and
and
jg
aaa
pop
daa
inc
nopl
push
jne
xor
cs
fisubs
aaa
push
xor
inc
add
xor
xor
mov
add
fnsave
inc
xor
das
sbb
push
or
inc
cs
scas
fldenv
ss
cmovb
pop
ss
add
cmp
cmpsl
ss
incl
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
push
adc
jge
push
je
mov
andb
fwait
push
adc
inc
shrl
xchg
out
popf
rorl
and
sub
mov
stos
test
test
stc
jbe
push
cwtl
insl
xor
mov
pop
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
adc
or
jmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
jmp
test
mov
mov
call
cltd
test
push
push
shll
insb
cmp
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
out
orb
adc
enter
mov
mov
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
pushl
fs
bound
jns
xor
and
cmp
dec
cmp
jo
arpl
sub
and
dec
sub
incl
push
or
dec
pop
addr16
cmp
cmp
dec
push
push
ss
pop
xchg
push
dec
xchg
les
lock
ljmp
inc
push
cmp
insl
jae
xor
push
pop
popa
je
inc
imul
call
mov
stos
add
loope
lock
or
xchg
xor
pop
sub
or
or
dec
bound
rol
rolb
jge
mov
add
bound
push
pop
add
jae
push
jp
fsubrl
testl
add
push
xchg
shll
in
sbb
inc
out
push
andps
cmp
jle
or
andl
add
xchg
lods
mov
xor
push
sub
push
int3
push
cmp
sbb
addb
mov
mov
add
or
push
jg
test
xchg
cmpsl
lahf
mov
or
push
adc
cwtl
sbb
adc
sbb
jp
pop
cmp
or
sbb
mov
fcom
cmp
xchg
les
sahf
and
loop
or
dec
or
add
sub
sbb
push
push
lds
mov
andb
fisubs
pop
mov
inc
jmp
adc
and
push
add
sbb
xchg
xchg
adc
mov
inc
outsl
add
adc
adc
rcrb
imul
imul
vstmxcsr
outsb
aas
jnp
std
or
adc
jo
add
mov
inc
jne
sbb
or
insb
dec
pop
outsl
aas
inc
or
int3
enter
lds
inc
xchg
stos
xor
add
or
dec
or
dec
test
aad
or
pop
pop
add
pushf
popf
fisttpll
rdmsr
imul
jo
enter
jbe
jae
popa
insl
gs
or
in
cmp
add
push
faddl
sar
and
inc
mov
mov
arpl
adc
out
loop
cs
cmp
stos
push
add
fildl
pop
stos
inc
outsl
insb
pop
push
popa
je
pop
add
popf
insl
ja
call
push
fs
sbb
adc
mulb
lar
sbb
rcrl
add
pop
call
cmp
mov
cmp
and
stos
ret
pop
or
in
aas
push
push
les
xor
pushf
push
adc
xor
sub
lea
sbb
lods
sub
add
imul
mov
cmp
mov
cmp
push
xchg
ds
add
hlt
leave
fsubs
cmp
lds
dec
sbb
lret
inc
push
add
pop
mov
mov
sbb
and
and
call
nop
push
ds
inc
aaa
push
add
xchg
fs
push
andl
popa
dec
mov
mov
jb
pop
add
aas
and
mov
jle
xor
dec
and
and
add
xchg
lods
push
pop
jmp
inc
in
ret
jl
sub
adc
fimull
and
sbb
pop
adc
sub
dec
pop
jbe
test
call
enter
aas
mov
cmp
xlat
fs
jo
sbb
scas
or
loope
jo
in
push
outsl
imul
push
xlat
sub
fdivs
lds
fmull
sbb
pushf
sti
sbb
aam
fistpll
add
inc
xorb
movsl
mov
stos
ds
pop
pop
lea
inc
sub
aas
push
adc
dec
inc
dec
pop
pusha
aam
cmp
fs
jmp
sub
pop
push
sub
or
push
iret
test
sub
sub
jno
movsb
push
mov
ljmp
sbb
ljmp
dec
xor
xchg
scas
pop
push
jnp
sbb
roll
cmpsb
sbb
adc
jmp
fists
sarb
inc
dec
fldl
cmp
mov
aam
gs
add
pop
inc
jp
lea
pop
aas
cs
jnp
inc
jmp
pop
pop
or
aaa
pop
pop
push
pop
or
push
mov
dec
mov
pop
dec
pop
movsl
rcr
cmp
repz
sub
cs
dec
push
stos
push
push
push
subl
movsb
xor
pop
xor
xor
pop
mov
pop
inc
add
out
ja
and
pop
mov
out
add
sub
inc
dec
fcoms
and
or
sbb
sub
pop
add
cmp
gs
shlb
aas
sub
imul
test
or
lods
mov
sbbl
push
cmp
pop
dec
sub
lcall
push
popa
dec
outsl
test
and
fmuls
mov
mov
inc
push
inc
out
and
punpckhwd
dec
outsb
push
je
xchg
push
insb
shrb
xchg
push
inc
dec
push
pusha
std
sbb
pop
push
dec
inc
dec
inc
push
pop
mov
sub
gs
mov
daa
inc
dec
fwait
pop
or
push
mov
jb
add
inc
inc
inc
aas
and
test
dec
out
and
lret
jne
add
sbb
or
add
and
lcall
insb
push
and
add
loopne
sub
jno
sbb
jo
neg
ret
in
popf
and
sub
aad
inc
add
aaa
adc
aaa
or
add
aas
xchg
jg
jne
insl
ss
pop
sbb
push
lret
mov
sub
push
insb
dec
adc
push
add
sub
and
push
jb
sub
or
or
inc
and
add
sti
adc
and
adc
xorb
xchg
xor
int3
cltd
cmp
and
xor
push
out
loop
adc
jb
sub
in
test
arpl
push
roll
cld
adc
aam
rorb
stos
sub
fsubrl
pop
add
js
adc
xor
xlat
out
rclb
test
repnz
mov
icebp
lea
sbb
jae
sub
xlat
outsl
pop
xor
inc
add
pop
sbb
divb
xor
inc
push
fs
enter
adc
mov
das
mov
dec
add
dec
adc
inc
xadd
ja
xchg
cmc
cmc
inc
pop
mov
add
push
in
lcall
cmpb
aas
mov
or
rorb
mov
movl
add
adcb
push
inc
pop
cmp
int3
push
aam
aas
add
out
mov
dec
movsb
fidivrs
popa
fiaddl
and
cmp
pop
lods
fldt
inc
add
adc
push
mov
push
mov
jg
daa
in
nop
out
sbb
test
das
cmpl
xor
pop
hlt
cld
jbe
adc
dec
outsl
pop
leave
lods
stc
mov
inc
xchg
pop
leave
xchg
inc
cmp
xchg
pop
leave
xor
sub
leave
xchg
pop
sub
mov
ficoms
push
xchg
out
pop
test
test
fcomps
mov
lahf
pop
clc
fs
gs
je
iret
sarl
mov
inc
and
lahf
cmpsl
stc
dec
pop
sub
hlt
pop
xchg
jns
jmp
test
pop
sahf
pop
pop
ds
lahf
out
out
push
test
clc
pop
sahf
out
xor
shl
enter
icebp
jns
je
push
push
enter
add
inc
inc
adc
sub
or
xor
fcmovne
imul
pop
int
dec
sahf
cld
add
add
mov
and
adc
jnp
jnp
pop
push
push
inc
fbstp
add
push
scas
jbe
pusha
jg
jg
add
jne
mov
sbb
add
scas
mov
outsl
add
enter
inc
lock
add
pop
das
inc
push
dec
pop
pop
leave
mov
dec
outsl
add
fs
or
or
inc
xchg
out
mov
aad
outsl
fbld
push
sub
cmp
ss
icebp
dec
sahf
dec
add
dec
popa
sub
fidivrs
test
pop
scas
fadds
xchg
add
sbb
daa
push
xor
xor
in
jns
pop
lods
xor
adc
out
inc
add
dec
push
adc
pop
mov
add
sub
mov
outsl
out
daa
push
xor
xor
xor
xor
pop
pop
cmpsb
or
fildll
testb
outsl
sub
fs
sbb
call
dec
lcall
cmc
dec
fs
je
or
dec
pop
mov
pusha
fs
jo
fs
mov
add
mov
stos
or
ja
push
xor
add
and
sub
mov
insb
push
js
fbstp
insb
and
and
inc
outsb
push
jo
and
sbb
sub
and
add
pop
or
or
sub
add
xor
out
jecxz
shll
js
add
adc
mov
cmpsl
callw
xor
push
aaa
addr16
insl
sbbl
sub
add
idiv
add
fidivs
fisubs
add
sbb
das
or
insl
bound
data16
mov
xchg
or
in
sub
negb
rclb
cs
movsb
xchg
push
pushaw
xchg
push
xor
xor
sub
pushf
and
ja
popa
testl
sub
pop
insb
jo
push
push
outsl
add
mov
mov
rclb
lods
pop
jle
popa
bound
add
cmpsb
clc
gs
cmp
enter
nop
scas
andb
and
xor
mov
dec
enter
pop
jl
mov
xchg
rcrl
test
scas
add
push
xlat
or
dec
leave
dec
push
xchg
xor
fs
dec
adc
dec
arpl
pop
arpl
testl
and
push
mov
add
shl
adc
cwtl
push
and
aaa
xor
aaa
leave
adc
pop
insb
pusha
pop
aaa
mov
mov
call
inc
dec
shlb
out
scas
in
and
add
and
jg
jbe
scas
in
push
mov
iret
aam
sbb
nop
cmp
addr16
in
nop
or
aam
outsb
rorb
dec
sub
inc
sub
data16
mov
adc
outsl
lods
in
leave
add
xor
cmpsb
cwtl
popw
clc
inc
ds
test
fcoms
sub
add
mov
adc
xchg
inc
sbb
insl
cmpsl
add
xchg
or
sbb
xlat
add
push
sbb
sahf
iret
in
jbe
or
dec
out
int3
lahf
or
pop
leave
xchg
pop
add
in
repz
or
pop
push
or
add
iret
sarl
je
push
pop
cmp
push
jns
pop
xchg
or
push
in
push
cltd
jmp
xchg
xor
or
insb
dec
enter
push
and
or
xchg
es
mull
add
in
leave
adc
call
or
mov
push
mov
int3
loopne
jbe
fsubrl
lods
in
stos
nop
add
dec
cmp
out
push
addr16
push
mov
out
or
and
or
mov
add
xor
push
and
dec
and
outsb
lock
xor
fwait
or
sbb
jl
push
xlat
mov
xor
sub
push
sub
push
push
insb
xchg
enter
mov
add
ss
test
das
mov
imul
in
aaa
pop
lods
pop
mov
outsl
movsb
pop
add
nop
iret
and
push
roll
data16
pop
das
es
lds
cwtl
or
addr16
aas
pop
out
int
pop
lock
gs
pushw
loopne
mov
fdivrl
stc
ds
mov
cmp
rcll
mov
out
insb
dec
outsl
xchg
mov
sarl
out
insl
ss
jl
iret
repz
shl
adc
cmp
out
mov
add
push
int
repz
movsb
lret
out
repz
cmp
ret
jecxz
out
sbb
pop
jg
sarl
out
jae
push
lods
je
ds
repz
or
push
push
fwait
iret
or
repz
out
inc
insb
fwait
clc
cmp
out
lcall
jns
out
cmp
fmull
inc
xorl
idivl
jp
jns
iret
rep
in
jnp
xor
lahf
out
int
jl
repz
iret
out
or
out
jle
stc
cmp
bound
dec
repz
mov
cmp
int
imul
sub
ds
test
test
cmp
rorl
movsl
shl
iret
repz
adc
xchg
fucom
jns
clc
mov
push
shl
imul
inc
mov
std
out
cmp
and
mov
jns
jae
loop
lea
out
ds
pop
int
repz
movsb
adc
out
cmp
divb
int
repz
xor
imul
cmp
xor
repz
out
sub
push
push
mov
jno
int
lcall
cmpsl
dec
jno
daa
pushf
push
pop
popf
sahf
out
xor
ljmp
out
stos
jecxz
lahf
or
jns
cwtl
add
out
loopne
mov
movsb
cmp
out
inc
mov
iret
mov
and
lahf
out
ds
cmpsl
nop
mov
xor
ja
push
ret
adc
lcall
inc
stos
cmpsl
stc
cmp
frndint
sub
push
lods
ds
fcoms
scas
incb
cmc
repz
mov
push
xlat
inc
mov
xor
dec
idivb
cwtl
repz
out
mov
mov
jns
mov
out
lcall
jmp
shrb
rcll
jl
xchg
aam
ret
xor
out
lcall
addr16
repz
jmp
add
jnp
lret
push
xor
push
jecxz
int
rep
int
into
add
jbe,pn
negb
outsb
add
ja
into
xchg
out
aaa
push
pop
pusha
add
in
enter
call
jnp
and
push
add
scas
mov
mov
jb
ficompl
loop
ljmp
sbb
imul
jmp
pop
paddq
mov
cmove
jmp
rorb
int3
add
fisubs
decl
dec
and
xchg
adc
adc
sbb
or
inc
stc
and
mov
mov
push
in
push
pop
pop
insl
in
or
sub
shlb
rolb
jb
pop
enter
imul
mov
ss
pop
cmpsl
loopne
sarl
xlat
dec
das
lds
out
xor
rorl
jb
outsb
jbe
mov
inc
jns
dec
mov
mov
xchg
inc
in
es
fistpll
mull
inc
mov
dec
mov
arpl
popf
or
scas
flds
sar
xchg
dec
insb
cmp
ss
fnstsw
mov
sbb
aas
mov
inc
sub
sub
iret
pmaxsw
mov
addr16
jno
pop
aad
pop
dec
icebp
cs
push
inc
pushl
insl
inc
mov
aaa
pop
cmpsl
mov
inc
int3
push
daa
fdivrl
add
mov
repz
jg
jecxz
out
dec
push
cmc
inc
add
cmc
in
and
ds
or
in
inc
dec
lahf
mov
ja
sbb
adc
mov
inc
mov
cmp
xlat
push
adc
outsl
into
push
ss
je
incl
inc
je
pop
add
pop
daa
xchg
inc
in
iret
and
es
push
and
mov
mov
out
js
fdivrl
sbb
sub
jns
cltd
or
inc
inc
xor
mov
dec
das
outsl
and
mov
dec
je
rclb
in
jns
jns
in
sub
cmp
pop
lods
in
aas
in
mov
aas
push
out
jb
inc
repnz
xor
mov
push
jg
mov
ret
imul
pushf
pusha
push
xchg
jp
addr16
jle
loopne
pop
insb
inc
or
jb
inc
repnz
xor
dec
pop
jb
cmp
sbb
pop
leave
jae
addr16
add
cmp
leave
and
dec
xchg
enter
adc
fstl
mov
sbb
leave
sub
jl
jl
jl
and
test
sbbl
sarb
aaa
adc
outsl
xchg
pop
sbb
int3
gs
add
or
dec
and
sbb
mov
push
sbb
out
add
add
xor
inc
out
dec
push
leave
add
inc
lock
test
inc
xchg
xor
jb
dec
jle
jle
xor
mov
nop
mov
jns
leave
xchg
clc
call
jne
sub
outsb
inc
outsb
sahf
out
and
push
add
jns
out
add
pop
ja
out
or
repnz
or
inc
cmp
xchg
inc
les
jg
jg
dec
sahf
or
and
or
sub
in
mov
loope
cmc
mov
ss
mov
cwtl
push
sbb
lds
outsl
push
outsl
mov
mov
les
xchg
popf
cmpsb
add
daa
iret
rep
add
push
or
fsubp
cmp
cmp
idiv
pop
inc
mov
xor
enter
jo
jo
jo
out
cltd
mov
scas
jbe
jl
test
mov
ret
mov
incb
in
and
in
lock
sbb
jno
sub
xchg
mov
gs
push
testl
xor
mov
inc
aaa
mov
and
fiadds
mov
jb
mov
xchg
pop
call
sbb
mov
iret
adc
aas
dec
dec
leave
or
add
rcll
jo
dec
jb
fwait
dec
dec
test
je
aam
jbe
adc
dec
repnz
sahf
stos
mov
sbb
cmp
push
daa
sub
sahf
mov
iret
jb
xlat
jb
xchg
pushf
in
jb
test
xchg
int3
mov
adc
sbb
and
xchg
test
lods
in
jl
popl
xchg
test
cmpb
jns
jns
xorl
cltd
jae
jae
jns
jns
jae
jae
jae
push
sahf
out
sahf
or
or
or
xor
out
or
or
cmp
repz
sbb
cmp
adc
adc
adc
repz
pop
adc
iret
repz
sbbl
leave
addr16
sbb
xchg
je
xchg
mov
xchg
lock
jne
loopne
xor
xchg
in
jne
jp
es
jb
iret
xchg
jne
aaa
adc
dec
cs
mov
mov
mov
fstl
scas
cwtl
orl
leave
and
mov
and
fs
pushf
push
nop
jbe
addr16
push
jbe
shlb
dec
outsl
and
das
loopne
mov
iret
insl
lock
test
ja
mov
push
pusha
and
push
inc
pop
cmp
inc
outsl
shlb
lahf
pop
out
loopne
push
sbb
daa
push
das
xor
ja
leave
and
out
daa
pop
rcr
push
add
aam
mov
pop
aas
mov
adc
add
jmp
lock
xor
and
leave
add
mov
xchg
mov
rol
and
leave
mov
sbb
inc
push
jo
jns
mov
xchg
pop
mov
pushf
mov
pop
and
cli
mov
cld
mov
pushf
in
jb
lea
jp
lea
jmp
push
leave
jae
adcb
mov
jp
inc
jb
fcmove
call
mov
push
jnp
mov
add
mov
and
add
adc
ja
mov
xchg
jns
xchg
scas
shl
sub
jmp
jnp
cwtl
dec
push
sub
lret
lret
std
jnp
jl
jl
jl
mov
jl
jl
mov
adcb
dec
stos
jl
push
add
add
mov
or
nop
sbb
daa
in
adc
inc
dec
jb
nop
mov
loope
das
and
pop
sub
outsl
xchg
outsb
nop
cmp
nop
outsl
dec
pop
pop
ds
push
jge
pop
jge
jge
jge
pop
pop
pop
ja
jg
xchg
jge
pop
pop
pop
xchg
jge
jge
jge
jge
pop
pop
pop
mov
mov
jge
mov
pop
xlat
jge
pop
bswap
leave
leave
leave
push
or
leave
leave
or
or
leave
leave
leave
leave
push
add
leave
leave
add
add
daa
xchg
dec
and
xchg
add
or
xchg
jle
daa
jle
repnz
lcall
jb
inc
dec
push
jge
jbe
roll
mov
xchg
out
lock
sbb
add
addr16
xchg
mov
rcrl
jg
pusha
xchg
xchg
xor
jg
insl
in
pop
jg
jg
aas
jae
sahf
ja
mov
mov
or
or
inc
cmp
mov
loope
jb
fiadds
cmpb
fwait
pop
or
daa
adc
stos
hlt
and
call
push
sbbb
jmp
jno
vmwrite
pop
cmp
orl
or
mov
cltd
push
cmovle
add
shlb
or
adc
mov
cmp
jle
xchg
inc
pop
or
cmp
das
adc
daa
mov
das
fsub
in
xlat
fildl
orl
push
push
sbb
or
test
orl
jno
adcl
out
test
fs
daa
daa
daa
adc
cmp
pop
roll
fabs
das
jns
sahf
ja
pop
icebp
or
and
jb
enter
pop
andb
daa
cmp
outsb
addb
and
sahf
dec
xchg
sarb
cmp
jmp
hlt
incl
out
or
adc
sub
or
dec
repnz
or
test
jb
push
nop
sbbl
mov
cmpl
movzwl
dec
cwtl
cmp
and
add
pop
jb
xchg
inc
dec
loopne
iret
mov
test
dec
jp
add
test
leave
pop
cmp
iret
jae
push
fabs
or
in
bnd
test
stc
dec
prefetch
cltd
xor
movsb
push
jo
cltd
add
add
mov
repnz
dec
inc
adc
out
cmovb
cld
cltd
and
leave
dec
enter
insb
scas
add
add
mov
pop
push
add
xchg
push
jns
push
adc
mov
repnz
fwait
add
adc
sarb
push
fsubrl
scas
pop
pop
jmp
in
jns
sub
loope
inc
fwait
xlat
nop
fwait
dec
jb
dec
lahf
adc
fwait
enter
mov
ja
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
repnz
leave
and
jmp
xchg
xchg
andb
xchg
xchg
lock
pop
mov
mov
iret
add
roll
mov
cs
addr16
mov
jo
sahf
divl
js
xchg
mov
and
add
mov
stos
hlt
in
mov
addr16
jb
inc
add
inc
js
shll
cmp
pop
lret
lret
lret
lret
inc
mov
pop
mov
lret
lret
lret
lret
jae
jle
mov
pop
mov
testl
pushf
pushf
pushf
fdivr
rcr
out
repnz
pop
adc
sbb
mov
mov
push
repnz
fsubs
mov
jb
mov
orb
inc
cwtl
mov
cld
mov
lahf
in
fisttpll
in
out
addr16
rorl
mov
mov
xchg
pop
xor
xor
in
fnstsw
ja
pusha
imul
xchg
mov
out
pushf
xchg
pushf
sbb
incl
mov
mov
pop
mov
pop
mov
das
das
mov
pop
xor
jb
mov
das
pop
mov
inc
lds
mov
mov
js
leave
mov
lods
or
add
sbb
jns
jno
aaa
fdivrs
out
in
dec
push
push
add
push
in
ja
mov
sahf
ja
mov
sbb
imul
ret
iret
mov
push
or
dec
sahf
out
ud2
loop
ljmp
decl
js
es
jns
mov
jb
xor
ja
popa
imul
xchg
addr16
cs
out
mov
dec
rolb
fistpl
or
mov
addr16
sub
inc
mov
hlt
leave
out
xchg
jns
add
pop
leave
and
cmp
add
call
iret
add
lock
push
xchg
pushf
lret
enter
movsb
aas
sub
out
fidivrs
push
add
dec
add
mov
ficoms
pop
nop
arpl
repnz
nop
jnp
adcl
nop
xchg
nop
fwait
pop
ud2
pushf
pushf
pushf
fcompl
or
or
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
mov
repz
mov
mov
repz
push
lret
pop
rorl
sahf
outsb
mov
jecxz
jp
out
and
and
mov
add
daa
cmp
xchg
aas
xchg
jl
cmp
fstpl
outsl
insl
xchg
imul
xchg
pop
dec
pop
imul
xchg
repz
into
xchg
add
out
fisubs
ds
and
and
xchg
cmp
cmp
into
dec
pop
imul
pop
iret
sbb
icebp
or
pusha
xchg
push
iret
repz
js
orb
pfadd
cmp
test
xchg
jecxz
pop
adc
rclb
leave
xor
add
test
hlt
push
outsl
xchg
add
sbb
test
push
daa
aam
inc
fdivrl
outsl
pop
in
mov
mov
cmpsb
stc
cmc
cmp
scas
push
add
xchg
ficoms
or
test
mov
das
or
out
sahf
out
add
in
or
shl
jbe
cmpsl
rorb
js
cmp
rclb
daa
aaa
jg
mov
dec
dec
mov
test
ja
movsl
xchg
das
mov
mov
inc
xchg
rcll
shl
out
push
repnz
std
xchg
xchg
dec
adc
xchg
adc
mov
lahf
inc
xchg
inc
push
add
cmp
jns
das
pop
add
lea
iret
add
jbe
xchg
cmp
iret
pop
xchg
enter
jb
mov
out
ljmp
mov
pop
add
or
and
outsb
sub
and
notb
or
arpl
inc
loope
dec
aam
or
dec
dec
ja
scas
fildll
jmp
lods
xchg
daa
mov
xchg
testb
cltd
sbb
and
in
mov
mov
push
insl
jo
push
mov
repnz
leave
leave
leave
test
mov
pop
adc
jb
mov
xchg
cmp
jmp
xchg
lods
mov
pop
pop
mov
js
cwtl
test
pushf
pushf
pusha
push
mov
jo
cmpsl
push
add
daa
daa
fstpl
mov
push
add
fstps
loope
jmp
mov
wbinvd
out
sahf
xchg
adc
or
or
cmp
xchg
sub
pop
cmp
jae
cmp
or
js
cmp
adc
popa
imul
mov
movsl
cltd
lods
lgs
test
repz
add
xchg
push
fxch
push
incb
xor
push
fildl
cmc
scas
std
push
pop
add
push
jno
lcall
xor
jns
mov
push
sahf
out
sahf
mov
xchg
or
jns
or
dec
sub
or
xchg
out
sti
addr16
push
fwait
sahf
pop
ja
es
daa
cs
ss
push
aaa
jns
push
jg
fwait
aad
mov
clc
mov
fwait
pushl
push
xor
daa
iret
jae
add
and
iret
lahf
fidivrl
lahf
in
psubq
pop
cs
pop
lahf
pushf
out
push
or
sarb
jo
inc
add
jl
cmp
and
mov
pushf
push
pushf
sbb
addl
push
xor
es
add
lar
inc
mov
pop
ja
jg
xchg
leave
cmp
pushf
push
xchg
inc
lret
pushf
rcrl
dec
jmp
repz
add
outsb
sysret
add
out
push
adc
or
and
sahf
cmp
sub
inc
popf
cltd
jecxz
mov
popf
adc
inc
repnz
mov
popf
xchg
sahf
out
ficoms
cmpsl
add
xchg
out
scas
add
out
pushf
dec
and
loop
dec
ss
jb
incb
adc
sahf
push
sub
xorl
sub
adc
mov
ja
mov
out
mov
stc
fs
pop
arpl
pop
jo
addr16
leave
inc
cmp
repnz
adc
mov
ud2
adc
testl
lahf
push
lahf
pop
lahf
mov
lret
lret
pusha
lahf
push
andb
insl
pop
sgdtl
pop
pop
pop
pop
jle
lahf
nop
lahf
cwtl
lahf
mov
pop
test
mov
mov
sahf
xchg
or
enter
repz
rclb
fcomps
loopne
xchg
out
cmp
lock
sbb
test
int
loopne
push
xchg
daa
mov
cmp
mov
push
daa
cld
arpl
mov
or
push
pusha
loop
sub
inc
mov
fsubs
xchg
mov
out
adc
mov
and
pop
or
mov
nop
mov
cmp
pop
lock
mov
enter
mov
adc
pop
sbb
jno
mov
pusha
mov
mov
mov
stos
shrb
test
pop
outsl
loopne
shll
pop
mov
jg
psubusb
push
leave
cld
inc
sub
xor
dec
cmp
pop
mov
mov
mov
sub
push
dec
push
mov
mov
mov
lcall
ja
popf
mov
push
pop
loop
fucom
jns
ljmp
cpuid
lahf
lret
jns
in
mov
dec
sahf
out
add
sbb
and
push
xor
inc
mov
and
fdivrs
addr16
push
pop
push
out
mov
jge
bswap
int3
mov
mov
or
ret
mov
pop
rorb
mov
pop
pop
pop
in
mov
or
lcall
xchg
pop
leave
out
adc
mov
xchg
xchg
xchg
movsb
aaa
movsb
aas
movsb
xchg
dec
dec
bound
movsb
mov
jns
pop
jp
subb
jae
out
pop
mov
or
xchg
lcall
insb
inc
pop
add
stos
add
push
adc
int
daa
js
or
mov
lahf
vpmullw
fnstsw
repz
in
in
push
cmc
or
movsb
fwait
lar
dec
and
lret
std
movsb
or
mov
mov
in
sbb
nop
xlat
outsb
mov
jbe
jle
xchg
iret
mov
mov
or
xchg
imul
mov
add
lds
pop
push
mov
mov
mov
xchg
xchg
cmpsb
cmpsb
cmpsb
xchg
dec
cs
sbb
pop
cmpsl
dec
cmp
mov
notl
push
add
out
or
pushf
and
push
push
cmp
cmp
lsl
mov
mov
cmpsl
pop
cmpsl
iret
inc
and
repnz
and
js
mov
int3
mov
mov
adc
lcall
adc
inc
rcrb
add
mov
test
push
jg
sbb
add
pop
insb
shlb
pop
pushf
sar
xchg
xchg
xchg
xchg
test
test
int
nopl
xchg
cmpsl
pop
js
test
mov
iret
mov
mov
outsb
out
push
rorl
stc
add
mov
pop
and
leave
mov
in
mov
push
inc
test
inc
jb
test
sub
xchg
xchg
mov
outsb
mov
rorb
push
add
jle
xchg
test
jmp
repz
outsl
xchg
test
pop
or
loopne
stos
cmpsl
push
mov
inc
push
cmovs
add
setb
stos
mov
ret
rsm
cmp
mov
stos
bswap
loope
enter
jmp
stc
stos
iret
sbb
jb
stos
or
repnz
pushf
cmp
add
jb
xor
stos
repz
movsldup
mov
jb
leave
pop
fs
movzbl
notb
mov
repnz
test
leave
add
add
sub
inc
and
xchg
les
lods
lds
inc
lcall
add
scas
jns
out
das
jnp
add
je
out
xchg
syscall
add
dec
cwtl
pop
lods
dec
mov
dec
dec
das
sarb
cmp
fadds
loopne
lock
insl
andb
add
add
out
ficoms
push
or
or
sub
or
lods
pslld
jle
lods
dec
lods
xchg
mov
aaa
lods
xor
mov
mov
icebp
in
mov
shrb
rclb
cmp
ret
pushl
scas
xchg
push
adc
scas
cmp
in
push
push
add
cmpsb
mov
iret
repz
or
cmp
fimull
or
enter
dec
adc
stos
adc
jae
sbb
sub
in
es
iret
push
imul
jb
mov
jle
jb
aam
adc
xor
pop
jl
cmp
cmp
xchg
test
or
adc
xor
pop
mov
push
and
push
and
mov
mov
mov
repnz
mov
inc
cmp
jl
add
test
mov
sub
ss
das
dec
xchg
add
aam
xchg
out
jb
popf
mov
stos
mov
pop
fcmovne
xchg
mov
mov
push
sahf
pushf
dec
mov
repnz
add
pop
adc
es
mov
mov
pop
test
jb
inc
pop
mov
mov
js
jb
xchg
jns
push
scas
cmpsb
mov
mov
mov
pop
sbb
mov
das
into
mov
dec
xorb
out
out
mov
push
shll
in
test
push
add
in
sahf
out
add
add
fmull
mov
pop
mov
mov
jo
js
xorb
xchg
mov
mov
mov
mov
mov
mov
iret
mov
push
pop
loope
jb
shl
in
sbb
divl
aaa
or
sbb
adc
iret
repz
pop
xor
cmp
cmp
repz
dec
and
repz
push
and
and
repz
daa
jl
xchg
xchg
sub
cmpsl
sub
stos
cs
mov
fwait
dec
and
nop
lret
fcomps
nop
push
pop
rorl
out
add
push
das
sbb
mov
mov
int
fmulp
xchg
push
sub
add
jns
add
loopne
popf
pushf
add
fisubs
adc
and
int
cs
xor
or
lahf
das
enter
dec
rcr
loopne
stc
dec
dec
inc
sahf
adc
dec
dec
dec
jbe
xchg
mov
jns
dec
mov
repz
sahf
adc
fisttpll
in
jl
fucomi
pmaddwd
fsubl
bndstx
pop
jns
out
das
jge
test
cmp
outsb
repnz
and
sahf
ja
psllw
fisubrs
out
repz
inc
fimuls
pop
mov
pushf
cmp
leave
inc
arpl
imul
leave
repz
iret
mov
push
xor
repnz
pxor
cmp
mov
cmpb
mov
mov
xchg
out
imul
test
mov
rorl
xlat
rcll
add
jmp
xor
pushf
pushf
pop
mov
push
imul
shll
repz
add
leave
repz
add
out
clc
add
out
or
or
das
leave
repz
fcompl
cmp
push
repz
cmp
pop
adc
adc
cmp
leave
jg
push
xchg
mov
sbb
iret
leave
repz
int3
sbb
pushf
loop
in
clc
and
mov
ret
lret
lret
pop
mov
cmp
xor
jo
push
add
xchg
jl
shlb
mov
jp
xchg
mov
pop
movsb
push
mov
test
xchg
out
clc
nop
cmp
mov
adc
add
or
mov
push
sub
out
cmp
xor
cmp
adc
mov
adc
out
sahf
add
push
aaa
sbb
jo
rorb
jb
mov
sbb
jns
cld
test
xchg
mov
fwait
iret
divps
pop
btr
xchg
xchg
mov
xchg
out
xlat
notb
mov
cmp
mov
movhps
jb
jns
mov
xchg
adc
out
pop
add
dec
outsb
daa
test
mov
xchg
pop
mov
mov
mov
daa
daa
out
push
notl
test
rorb
mov
cvtpi2ps
ja
or
iret
jae
cltd
dec
push
xchg
gs
cmp
add
mov
in
nop
sets
jb
lret
rorl
out
fistpl
jecxz
jmp
shl
in
push
sti
add
call
inc
mov
shll
fcmovne
xchg
and
roll
cmpsl
pushf
dec
and
push
cmp
jno
in
popf
pushf
orl
mov
mov
cmp
out
fsubrl
pop
xchg
out
ja
daa
cmp
and
pop
ret
pop
pop
add
pop
daa
ret
ret
xor
push
jg
push
iret
add
fbstp
jp
in
jbe
filds
pop
lcall
mov
in
in
aad
pushf
dec
ds
xchg
add
xchg
and
adc
sbb
and
leave
inc
xor
sub
pop
dec
xchg
cmp
fistl
pop
ja
movsb
pop
jo
jb
xchg
mov
cmpsl
push
mov
ror
inc
leave
rcr
pop
js
rcrl
fidivl
add
mov
cmpsb
or
fidivl
les
aas
iret
jae
cmp
inc
dec
add
daa
pop
pushl
in
and
cwtl
or
addr16
cmp
adc
enter
int3
mov
add
inc
out
sub
jns
daa
pop
pusha
imul
sahf
outsb
jnp
cmpl
xchg
pop
jp
outsb
mov
xchg
xchg
xchg
xchg
into
vpextrw
outsl
xchg
xchg
cli
pop
add
stc
outsl
adc
sbb
es
xor
jns
jns
cmp
inc
push
pop
jns
jns
push
mov
jbe
jns
xchg
lahf
stos
mov
outsb
daa
daa
fisttpll
sbb
dec
dec
dec
dec
sbb
pop
push
jns
dec
dec
adc
jns
out
lret
sub
mov
xor
pushf
sub
jae
jmp
mov
lar
repz
cmp
cmp
repz
cs
iret
repz
aas
dec
inc
pop
iret
repz
inc
gs
jo
jnp
sahf
out
inc
fiadds
iret
leave
repz
inc
rcr
dec
jmp
cmovnp
hlt
dec
cmp
xor
enter
and
cmp
repz
push
inc
in
in
dec
pop
push
bound
dec
sahf
out
pop
orl
leave
leave
leave
leave
mov
fstpt
popa
enter
imul
cmp
mov
leave
push
add
add
das
jb
xchg
push
push
cmp
and
pushf
inc
addr16
push
cmp
rep
ds
or
jns
leave
repz
loopne
cmp
cmp
adc
push
adc
push
adc
out
mov
pop
nop
sbb
cmp
test
sbb
call
dec
clc
leave
cmpsl
stos
mov
pop
fmulp
lret
aaa
cmp
out
lret
dec
sahf
out
dec
dec
add
add
dec
pusha
lret
lret
movaps
jg
push
sbb
loopne
push
daa
lods
dec
dec
xchg
mov
shl
js
enter
jb
je
pop
clts
loopne
iret
cmp
jns
lret
sub
outsb
or
adcb
inc
fisttps
lret
lock
xchg
aas
movups
sbb
call
aaa
lahf
lret
scas
pop
lret
inc
out
pop
pusha
lret
lahf
lret
lret
repnz
andb
subb
push
lret
or
xchg
mov
daa
mov
jb
lret
rcr
mov
cs
out
cld
jg
insl
in
or
adc
pop
pop
push
mov
lock
xor
dec
outsb
xchg
xchg
xchg
int3
push
int3
popa
int3
insb
emms
pushf
pushf
pushf
fcompl
orb
pushf
scas
adc
xchg
iret
cs
jb
daa
lock
mov
fucom
mov
sbb
sbb
sbb
pushf
cmp
push
daa
xor
cmp
leave
cmp
pop
out
jbe
imul
jae
popf
xchg
das
mov
loop
mov
add
int
mov
into
or
adc
inc
mov
pop
sub
lret
mov
jecxz
into
enter
push
into
pop
into
into
into
mov
enter
into
pop
ds
cmp
syscall
or
enter
into
scas
fcmove
in
lret
pop
mov
mov
into
iret
repz
push
adc
adc
cmp
xor
sahf
out
sbb
imul
je
pop
jg
cmp
aaa
mov
and
mov
push
outsl
xchg
pop
iret
shll
int3
iret
add
out
sub
loop
ljmp
add
aam
jo
mull
inc
lss
mov
pushf
loop
repnz
jg
sarb
mov
add
out
bnd
jge
mov
out
or
mov
stos
shlb
mov
outsl
test
rclb
add
rol
push
out
jns
add
add
jns
pop
inc
or
pop
out
rorb
pop
arpl
sahf
outsb
push
jbe
jle
sbb
movl
mov
sarl
push
repnz
sbb
push
rcl
shrb
sahf
out
xchg
shlb
cs
add
dec
dec
sarb
cvtdq2ps
out
addb
shr
jbe
dec
pxor
pusha
mov
pavgw
xor
stc
rcl
mov
xchg
rcrl
push
or
leave
or
xor
inc
iret
repz
push
push
pop
pop
addr16
in
daa
jb
sbb
aas
iret
repz
xchg
sbb
sbb
pushf
cmp
lds
shlb
fcmovne
repz
and
hlt
bsf
inc
sar
das
or
adc
fdivp
and
cs
sbb
cmc
inc
aam
dec
aam
aam
xchg
insb
pop
cs
aam
in
xor
lahf
aam
cmpxchg
and
aam
rcl
mov
aam
aam
aam
jbe
xor
or
out
adc
pop
pop
mov
sub
sahf
out
cmp
adc
xchg
out
ja
orb
jns
dec
aad
sbb
scas
dec
in
mov
cmp
jae
pop
iret
and
js
sahf
outsb
mov
sti
and
inc
mov
sbb
daa
cmp
leave
repz
cmp
out
push
cs
sub
cmp
jg
push
xor
stos
movzbl
mov
jns
shll
xlat
psrad
cltd
lods
call
jmp
gs
test
sbb
inc
add
aam
xchg
bound
push
or
sbb
aam
out
push
inc
push
sub
lea
mov
inc
scas
pop
inc
add
dec
aaa
pop
pop
sub
cmp
in
in
push
push
add
sbb
repz
or
leave
leave
repz
or
aaa
xchg
or
adc
leave
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
jns
xchg
addl
fisttpl
mov
mov
into
aas
xlat
sbb
inc
xor
sbb
dec
jmp
cmp
inc
cmp
xor
sub
iret
repz
sbb
clc
call
in
call
jns
out
aam
int3
enter
sahf
rcrb
test
jns
ja
cwtl
nop
push
mov
out
pusha
push
push
dec
adc
jns
inc
sub
or
test
sub
pusha
adc
inc
push
mov
mov
mov
test
jb
add
mov
cmpsb
push
inc
int3
fscale
inc
xchg
push
sbb
adc
mov
fsts
cld
shl
or
enter
cmpsb
fisttps
mov
cld
mov
jle
test
shll
cltd
sbb
mov
in
ja
inc
mov
iret
mov
in
call
fildll
jle
adc
push
ficompl
mov
inc
mov
xchg
xor
fcomp
loopne
jb
jle
testb
adc
popf
inc
and
mov
add
sbb
and
inc
xor
fdivrp
mov
cli
inc
daa
pop
jle
cvttps2pi
pop
xlat
incl
xchg
mov
fsubrs
pop
das
arpl
add
cmpsb
add
mov
iret
mov
out
push
or
sahf
cmpsl
stc
cmp
aam
adc
adcb
sbb
cmp
out
hlt
in
sbb
test
push
cmp
pop
pop
push
sbb
test
inc
jns
imull
or
js
ljmp
out
jp
push
cmp
jns
inc
lcall
les
jl,pn
lcall
xor
aam
inc
pop
test
js
or
or
adc
ds
push
and
cwtl
sahf
push
xorb
xchg
adc
icebp
addr16
push
push
es
push
pop
inc
jg
subl
xchg
stos
xor
aas
pop
pop
xlat
xchg
mov
pop
xor
fisubrs
push
fistl
cmp
jg
out
cmp
and
push
inc
sub
fcoml
roll
add
rolb
shlb
add
ds
icebp
dec
push
sbb
add
imul
imul
add
and
add
xor
push
sub
or
ds
call
in
mov
and
lock
pop
or
cld
adc
hlt
sbb
cmp
jns
adc
rcrb
enter
iret
push
rclb
and
mov
lods
and
movsb
es
jb
pushf
jl
clc
mov
popa
adc
lods
cmpsb
outsb
daa
xor
cmpsb
xchg
outsl
and
inc
cmp
scas
dec
adc
div
mov
cmp
pop
js
repz
xchg
mov
repz
test
insl
add
dec
shll
mov
repz
shl
dec
das
push
dec
insb
shlb
add
in
cmp
enter
ds
ds
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
incl
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmpb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
pushl
pop
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
cli
push
pusha
les
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
mov
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
ljmp
and
mov
mov
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
decl
xchg
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
push
xchg
clc
add
cmpsb
fmuls
pop
pop
in
stos
pop
inc
inc
je
inc
inc
push
dec
movsl
jb
cmp
jnp
cmpsl
pushl
pop
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
dec
push
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
incl
mov
add
insb
push
arpl
psubd
or
outsb
cmp
call
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
cwtl
mov
leave
mov
jecxz
fdivs
jne
filds
or
shrl
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
stos
sbb
inc
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
xor
xchg
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cli
cmp
mov
inc
movsl
fisttps
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
pushl
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
pushl
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
sar
pushl
jns
imul
andl
shrb
rclb
or
add
sar
or
das
es
lds
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
scas
bound
test
jg
ljmp
or
inc
sbb
mov
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
cld
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
push
push
pop
dec
xor
daa
iret
mov
pop
cmp
sub
pop
js
adc
add
inc
jns
out
push
xlat
fcomp
fcmovu
out
sahf
out
fstp
loop
jns
out
in
call
sahf
out
in
in
repz
sahf
out
sahf
cmc
div
clc
stc
cli
ret
jns
cld
daa
adc
aas
inc
adc
adc
push
mov
push
movl
fs
dec
bound
add
sbb
inc
insl
bound
inc
pop
stos
std
pushw
popa
je
push
aam
das
xchg
cltd
out
and
inc
dec
notb
enter
and
aas
pop
inc
cmp
idiv
incl
xor
aaa
cmp
popa
arpl
cmp
arpl
or
aam
fildll
xor
bound
not
sahf
inc
popa
push
inc
jbe
pop
insb
imul
data16
gs
add
divb
push
dec
inc
jl
fs
dec
hlt
fs
repz
popa
or
add
inc
gs
je
fs
or
jbe
or
dec
in
inc
aas
subb
fsts
jle
gs
aad
xchg
inc
push
adc
sub
add
aaa
inc
mov
push
pushf
add
xchg
insb
popa
jns
pop
sarb
cmp
stc
popa
xchg
adc
aaa
je
aaa
pop
push
movq
inc
push
and
or
add
jae
addps
cmp
das
push
dec
mov
pop
inc
aas
and
inc
inc
mov
inc
pop
jnp
cmp
outsb
je
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
push
lret
and
dec
jne
mov
jge
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
or
mov
jo
insl
pusha
inc
mov
mov
inc
adc
add
dec
dec
int3
push
or
jo
gs
outsl
orb
and
mov
push
xor
lahf
and
fwait
mov
mov
imul
adc
lahf
xchg
add
js
out
jb
rcll
xor
jo
or
lahf
dec
push
sbb
outsl
outsl
test
mov
stos
sbb
mov
mov
in
cmp
push
loop
xor
inc
cmp
arpl
add
mov
cmp
mov
mov
xchg
push
loopne
push
outsl
insb
jns
mov
lock
inc
jb
push
mov
gs
inc
outsl
arpl
adc
mov
push
push
bound
ja
inc
push
shll
addr16
pop
dec
pop
jg
push
dec
add
mov
jecxz
lock
lcall
inc
add
add
add
ss
push
xchg
jg
cmp
adc
push
lods
inc
add
movsb
dec
pop
mov
outsb
dec
sar
or
adc
sbb
mov
outsb
rclb
mov
inc
dec
pop
bound
cmp
push
or
pop
jnp
cltd
xor
insb
insl
in
add
push
aaa
inc
jne
push
dec
adc
push
test
mov
mov
daa
sub
or
sub
cwtl
adc
add
lods
mov
lock
sub
sbb
fdivr
loopne
inc
dec
add
shlb
add
fstpt
dec
add
add
in
mov
add
pop
push
or
or
or
or
or
adc
mov
mov
adc
push
adc
push
add
pop
dec
mov
adc
adc
adc
add
data16
or
or
rolb
fwait
std
out
jo
add
and
add
sahf
add
les
out
add
add
movsl
outsb
jno
mov
rclb
jb
imul
lcall
ds
xor
adc
pop
and
xor
inc
sbb
in
pushl
lock
bound
js
lock
mov
mov
shrb
mov
add
adc
pusha
arpl
inc
and
and
add
inc
add
add
sbb
pusha
xor
jae
jo
adc
add
pop
scas
cmp
adc
jl
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
lcall
and
and
mov
mov
adcb
mov
fiaddl
or
and
stos
js
out
mov
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
inc
aas
imul
fdivrl
add
mov
mov
loopne
mov
fnstcw
adc
rcll
dec
mov
push
push
pop
cmpb
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jg
xchg
jl
add
sub
incl
adc
sbb
cli
and
mov
fiaddl
jg
sbb
jge
ficompl
cmpsl
xor
mov
test
mov
sahf
aad
std
movsl
jecxz
pop
mov
push
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
outsl
stos
pusha
push
mov
sahf
pop
clc
sti
in
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
xchg
outsl
mov
mov
jb
mov
mov
mov
sub
lock
pop
mov
jl
rorl
adc
mov
push
jg
hlt
push
add
stc
loope
mov
sar
andl
push
in
idivb
icebp
testb
mov
pushl
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
mov
mov
dec
adc
push
lock
lods
jp
div
decl
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jmp
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
cmpsl
aaa
or
icebp
aas
std
cli
push
push
push
idiv
sub
inc
scas
inc
mov
jg
je,pn
sub
decl
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
cmp
ljmp
incb
aas
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
not
mov
xchg
pop
clc
pop
hlt
sub
movsb
add
xlat
call
lea
jg
gs
std
xorb
jg
aad
adc
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
ljmp
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
incl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
loopne
ficoms
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildl
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
ljmp
icebp
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
fldcw
test
xchg
and
jae
sar
ljmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
iret
adc
pop
cld
addl
adc
and
fildl
push
enter
jecxz
scas
sub
pop
cld
lahf
cs
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
out
pop
sti
pop
jg
add
jg
mov
aad
test
fcmovnu
adc
mov
mov
iret
push
fistpll
stos
icebp
pop
incb
jno
adc
jg
jg
jl
jecxz
sbb
sarl
adc
loopne
in
pusha
repnz
sar
adc
lahf
xor
mov
push
cmp
dec
push
in
aas
mov
sahf
cmpl
imul
push
and
jg
or
push
clc
xchg
pop
cld
jg
pushf
mov
repnz
and
mov
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
and
daa
out
lcall
icebp
push
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
mov
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
hlt
je
ret
jl
icebp
fs
pop
add
jne
or
cmc
mov
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
loope
in
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
data16
jp
dec
push
xlat
mov
push
test
fbstp
loopne
sub
xchg
fldenv
iret
fdivrl
xchg
lcall
loopne
dec
fimull
sti
push
push
xor
sarl
pop
out
dec
inc
sub
jg
jno
ret
fs
pop
dec
push
inc
arpl
out
iret
lcall
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
flds
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
xchg
pop
add
push
adc
xchg
cmc
out
daa
icebp
push
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
and
sbb
aas
inc
xchg
add
push
bound
sti
pop
inc
dec
push
mov
push
lods
inc
mov
mov
iret
lcall
and
add
jbe
adc
lea
mov
outsb
mov
sub
jmp
and
cli
sbb
add
xchg
jg
mov
xchg
lret
pop
icebp
jmp
movsl
jne
mov
sbb
sbb
push
mov
fstpl
je
lcall
xchg
push
ficompl
mov
mov
cmp
adc
pop
clc
fisubs
adc
inc
mov
clc
out
clc
call
xor
ja
push
mov
mov
mov
cwtl
popa
add
repnz
jmp
in
fidivl
ljmp
dec
les
jne
pop
xchg
pop
dec
maskmovq
negl
xchg
cmp
add
mov
jmp
insl
cmc
ja
mov
pushf
outsb
repz
clc
xor
nop
push
pop
stc
dec
ja
sarl
arpl
orl
mov
stos
repz
pop
pop
ret
pop
xchg
fildll
push
scas
mov
mov
repnz
jmp
sbbl
sub
or
xor
stc
arpl
sbb
ljmp
sar
pushf
sub
xor
clc
push
and
inc
mov
adc
mov
jnp
pop
out
inc
xlat
inc
xchg
in
aam
into
inc
out
or
cltd
push
sbbb
ror
mov
jns
ljmp
fildll
icebp
jae
sarl
pusha
jecxz
das
lret
mov
pop
imul
decl
imull
jmp
shr
jns
call
mov
enter
inc
ja
xchg
int
xchg
or
lcall
stc
push
in
sub
pop
mov
jecxz
or
popf
movsb
popa
sarb
sub
pop
test
inc
xor
decl
das
jbe
popf
daa
inc
jg
pop
call
mov
pop
sahf
call
lock
addr16
sar
push
sbb
sbb
mov
jg
pop
daa
adc
or
dec
mov
call
sbb
inc
mov
pop
sbb
dec
cld
loopne
mov
mov
cmp
stos
ljmp
jmp
pop
scas
test
mov
les
push
cmpsb
xchg
or
push
xor
pushl
jbe
sub
or
fucomip
xchg
loop
fwait
mov
mov
inc
mov
add
pushl
dec
in
test
xchg
and
xor
mov
js
sub
add
mov
inc
jae
arpl
in
xlat
insb
stos
scas
adc
inc
data16
mov
adc
movsb
int
fdivl
shll
ljmp
xchg
dec
xchg
push
movsb
subl
lcall
jmp
pop
shrl
shlb
ds
call
repz
pop
push
clc
mov
loop
divl
stc
cmovp
mov
in
or
idiv
jmp
fs
push
js
out
push
ficoms
sub
pop
push
sub
leave
and
cmp
std
incl
ljmp
jb
sub
adcb
xchg
pop
mov
add
in
inc
xor
cmc
or
flds
inc
push
pop
lods
addb
insl
lret
bound
lods
outsl
aad
lods
push
cmp
adc
inc
or
in
nop
ljmp
mov
fnsave
mov
lcall
mov
sbb
nop
clc
ret
jae
out
inc
add
sbb
in
lods
mov
or
fisttpll
lock
dec
add
movsl
xor
and
sahf
mov
jecxz
shll
push
push
lcall
push
push
sbb
les
mov
dec
jno
loopne
fisubrs
leave
mov
or
push
cmp
xor
repnz
ss
cmc
or
push
cs
cwtl
jg
outsl
clc
sbb
shl
or
iret
push
outsl
imul
jmp
xchg
loopne
add
dec
pop
or
pop
mov
scas
dec
movsl
sbb
aad
push
push
in
inc
pop
or
sub
inc
arpl
jle
mov
shl
mov
fcoms
lods
shlb
lcall
mov
mov
out
mov
lret
loopne
out
clc
mov
fldcw
mov
fisubs
lahf
or
repnz
jmp
pop
mov
add
iret
adcl
lcall
add
and
je
cmp
push
cld
pop
and
cltd
mov
scas
inc
push
shrd
js
dec
mov
sti
lcall
jns
repnz
xchg
add
mov
scas
loopne
push
mov
mov
shlb
incl
or
push
jo
or
push
ja
andb
add
inc
outsb
notb
dec
fnstenv
ds
jg
cli
mov
cld
test
sub
inc
xor
pop
adc
dec
push
push
push
dec
cmpsb
jg
scas
xchg
xor
or
jmp
loop
cmp
mov
fbld
popf
mov
xor
imul
jp
decl
aam
jg
pop
and
icebp
mov
mov
sub
aas
mov
pop
aam
lods
in
aad
or
jmp
cmp
inc
fildl
jg
ret
jmp
cmp
add
and
sbb
dec
inc
or
xor
insl
ja
sbb
sbb
xor
aad
adc
ret
out
clc
call
push
pop
mov
cmp
loopne
aam
dec
mov
int3
movsb
pop
sbb
pushf
push
inc
fcos
mov
outsl
mov
movsb
cli
xorb
mov
mov
sbb
jmp
sti
cmc
hlt
arpl
inc
out
xchg
repnz
mov
rcrl
push
fsubrs
mov
gs
outsl
push
mov
dec
decl
repnz
fiaddl
ret
xor
or
push
jnp
pushl
fdivl
pop
stc
sbb
mov
xchg
mov
dec
xchg
in
mov
and
dec
sbb
insb
and
jb
lods
aad
stc
mov
cli
addb
in
sub
sbb
dec
pop
jmp
es
mov
push
mov
stos
mov
mov
cli
scas
daa
sub
jg
add
iret
jg
test
dec
pop
adc
cmp
sbb
decl
mov
ret
out
inc
mov
shl
shrb
mov
mov
pushl
inc
sub
cld
xor
jl
inc
add
sbb
fwait
dec
adc
insb
or
insl
shl
sahf
cmc
js
decb
mov
ljmp
and
stos
jmp
cs
mov
sub
cmp
out
adc
imul
or
sahf
loop
pop
adc
filds
in
aad
jno
mov
fmuls
cld
push
sahf
jg
sub
rcll
ret
cmp
or
popf
divl
pushf
mov
mov
and
pop
xchg
cmp
cltd
mov
cmp
andps
cwtl
nop
adc
lea
dec
test
repnz
lods
or
les
mov
mov
lcall
int3
add
mov
sub
pop
testl
inc
sub
into
test
incl
bnd
mov
fs
pop
push
fmulp
or
mov
inc
mul
mov
aam
ret
lds
sti
pushl
std
shrl
push
ffreep
push
pop
mov
pop
sub
sbb
mov
xchg
push
add
in
jl
ljmp
inc
mov
inc
sbb
stos
push
pop
cmpsl
mov
xchg
or
outsl
insb
xchg
insl
jbe
lret
movsb
adc
and
decl
add
dec
push
out
ret
sarb
mull
mov
incl
cwtl
mov
lcall
xor
scas
lock
xor
cmp
xor
pop
std
std
imul
int
stos
dec
ljmp
aas
into
sub
or
pushl
loop
lods
faddl
imul
adc
push
push
shll
jae
stos
sub
mov
adc
push
inc
cli
jg
jmp
leave
xchg
pop
dec
push
rclb
jbe
loop
jne
sar
incl
push
icebp
xor
out
mov
add
push
pop
dec
and
sbb
lcall
dec
jns
rclb
in
cmpsl
cld
cmp
jecxz
xor
pop
gs
dec
hlt
aad
pushl
pushl
int
jmp
icebp
js
and
das
jns
cmp
mov
idiv
lock
sub
xchg
lds
or
dec
movsb
push
ret
jbe
iret
and
decl
aad
imull
ljmp
xor
push
and
or
push
xchg
insb
mov
inc
and
pop
stc
cmpsb
loop
mov
movsb
icebp
sub
jbe
jle
ds
pop
mov
jp
and
decl
mov
fidivs
and
push
movsl
mov
je
pop
nop
je
xchg
dec
sti
sbb
jbe
adc
sbb
xorb
or
lods
mov
call
outsl
add
dec
adcb
push
push
aas
subb
insl
jg
inc
sti
stos
cmp
xor
enter
pop
inc
outsl
cwtl
jae
clc
mov
mov
cwtl
cmpsl
sbb
sahf
pushl
outsl
adc
mov
lret
pop
adc
int3
sub
std
sub
xchg
sub
inc
test
repz
fucom
nop
mov
gs
jg
sbb
into
rolb
pushl
pop
xchg
add
jg
cltd
mov
cld
lods
les
push
pop
cmc
dec
insb
ja
rcrl
jnp
fbld
jl
lock
sub
sub
mov
jns
xor
or
mov
cmpsb
test
scas
mov
int
mov
or
lds
jp
dec
sbb
sbb
cmp
push
push
daa
decl
xchg
sbb
fnsave
pop
je
mov
adc
and
mov
or
mov
cld
cli
xor
xlat
jbe
inc
cmp
jmp
cld
fcmovu
fstps
gs
popa
imul
mov
and
jp
xchg
jmp
enter
cli
adc
sub
cltd
call
mov
outsl
jecxz
jcxz
loop
mov
imul
loopne
sahf
out
add
cld
lcall
cmp
aam
inc
in
fiadds
jg
sbbl
jmp
insb
outsb
inc
push
out
loopne
lods
jl
lret
iret
outsl
xchg
ljmp
dec
out
lahf
or
das
clc
pushl
aad
cmp
mov
xchg
lret
sbbl
cmp
pop
faddp
decl
sub
aas
xor
pop
loop
sub
ret
push
pusha
xor
jb
jg
jne
inc
jp
xlat
je
lea
or
cmp
pop
mull
repnz
cld
shll
fidivrs
pusha
popf
lret
cmp
mov
mov
push
mov
incl
sub
push
in
loopne
in
popa
xor
ss
push
cmpsb
std
jne
aas
push
jl
jg
jmp
ret
call
push
movsb
xchg
sbb
jle
pop
into
aad
cmpsl
mov
and
loope
add
lcall
sahf
testb
clc
and
and
sub
sub
loop
mov
fnstenv
mov
inc
cmp
xchg
fisttps
sub
xchg
ss
mov
insl
fldt
xlat
mov
jg
xor
pop
stc
or
incl
pushl
add
outsl
loopne
xor
sub
pushf
lods
sbb
mull
mov
sbb
xor
fistps
push
jbe
scas
and
fdivs
sbb
out
xchg
imul
ja
and
xor
mov
mov
mov
cwtl
jmp
jae
das
cli
jmp
xchg
fsubl
push
pusha
test
inc
les
pushl
cmp
aaa
add
es
test
iret
and
popf
std
push
inc
xchg
cmp
decl
jecxz
pop
mov
xor
xor
popa
cmpl
lcall
mov
mov
xorb
hlt
int
stos
add
insl
xchg
pop
push
sbb
mov
cmp
or
mov
js
mov
push
push
and
jge
mov
dec
movb
nop
xor
xor
push
or
out
cmpsl
dec
fdivp
in
es
xchg
incl
cs
testl
es
repz
mov
adc
pop
sub
ljmp
rcll
mov
push
pop
mov
filds
in
and
out
mov
adc
or
mov
pop
fwait
call
push
popf
inc
add
ljmp
sub
out
and
xor
jbe
ja
mov
loopne
xor
inc
lcall
inc
inc
test
mov
and
movsb
mov
call
rolb
push
rorb
mov
decl
push
adcl
aaa
sub
hlt
loope
push
push
pop
mov
mov
push
leave
icebp
pop
xchg
pop
cld
pushl
xor
inc
push
and
aam
popf
pop
fcomip
decl
addr16
and
lds
cmp
out
imul
incl
cmp
cs
sarl
pop
dec
mov
out
xchg
cmpb
xchg
sahf
decl
jle
shrb
pop
mov
pop
sarl
jl
add
sub
jmp
gs
call
xchg
pop
jnp
mov
push
inc
outsl
mov
jl
jl
cmpsl
and
ljmp
xchg
pop
jle
xchg
mov
sbb
xchg
pop
shlb
mov
mov
mov
ret
rcll
mov
das
pusha
jno
jg
cmc
ja
notl
pop
and
shll
pop
push
jns
call
xor
jbe
push
fcompl
jecxz
ss
xchg
mov
cmp
xor
sar
lcall
sbb
xchg
dec
xchg
pop
mov
addr16
daa
in
fcoms
addr16
cli
pop
or
jp
fcomip
call
mov
jnp
pop
into
dec
into
inc
rcll
cs
adc
jle
add
mov
les
movsl
call
aas
shlb
push
or
jns
jmp
jmp
shll
iret
bound
add
andb
in
lret
xchg
enter
lods
hlt
pushl
ljmp
shlb
adc
jne
test
lods
inc
dec
out
adc
cmp
jg
insl
int3
test
pop
idivb
popf
jae
mov
das
or
daa
je
jmp
out
adc
cld
lock
xchg
ss
roll
push
cmp
outsl
incl
lret
add
cmp
inc
xchg
pop
loope
pop
in
adc
cwtl
dec
dec
lcall
scas
fldl
outsb
stc
push
adc
jecxz
rorb
call
pop
stc
and
lods
popf
fdivl
mov
mov
punpckhwd
incl
cmc
in
sbb
and
pop
mov
sub
pusha
movsl
cltd
pop
popa
mov
inc
cli
ljmp
push
loop
sub
mov
jle
xor
xchg
cmpsl
mov
das
clc
ljmp
ss
xchg
mov
xchg
sbb
call
into
sbb
ljmp
test
push
addb
xchg
lea
out
fcoms
stos
mov
push
mov
daa
stc
jo
int3
push
nop
xor
inc
mov
movb
loopne
std
pop
jmp
xor
cld
int3
rcl
dec
stos
adcb
pop
push
out
cmp
dec
push
inc
ljmp
in
pop
fstpt
outsb
shrl
icebp
add
xor
icebp
lods
jl
mov
ljmp
ljmp
push
and
call
cmc
lods
xchg
rcrb
mov
sti
mov
and
jp
rcl
dec
movaps
hlt
decl
loope
and
stos
cs
js
pcmpeqd
leave
in
cmp
clc
xor
mov
mov
notb
clc
xor
mov
out
fwait
add
idivl
jae
gs
mov
fstpt
jmp
pop
sub
pop
xchg
lock
inc
sti
loopne
jo
fs
adc
adc
lcall
xchg
pop
shll
fistpl
dec
fcomps
mov
mov
sbb
call
clc
mov
push
add
push
insb
into
shll
mov
jns
or
pop
hlt
cwtl
stos
lcall
xor
mov
icebp
andb
idivb
repnz
loop
dec
xchg
outsb
sbb
or
cmpb
mov
adc
inc
test
shrl
push
pop
movsb
pop
std
fcomip
insl
adc
push
fs
add
add
ljmp
aas
add
dec
gs
nop
mov
add
pushf
test
mov
test
pushl
mov
jnp
adc
mov
lods
cmp
and
pop
test
jne
pop
lock
pusha
test
pop
push
cmp
jnp
cmp
pushf
inc
mov
sub
daa
rorb
add
repnz
call
lods
and
mov
add
mov
and
or
jb
and
ja
bound
xor
jge
sahf
mov
add
int
nop
adc
xchg
mov
es
ljmp
push
add
ror
insl
sub
clc
cs
dec
cmp
pushf
fcmovb
in
inc
pop
int
xchg
vmwrite
imul
xor
cmpsb
dec
mov
test
in
sti
loop
jl
dec
ljmp
mov
ljmp
mov
mov
aad
cmc
jg
pusha
aas
pop
add
and
xor
jne
repz
jmp
sbbb
mov
lock
outsl
iret
fdivl
pusha
mov
mov
lcall
cmp
sub
xchg
xchg
mov
sub
mov
ljmp
cli
rclb
rorl
xchg
lods
repz
mov
xchg
cmp
lods
pop
inc
push
mov
lcall
jne
into
sbb
jb
pop
mov
sbb
aad
imul
jg
mov
push
scas
jb
fadds
les
enter
mov
mov
jecxz
outsb
call
fidivs
sub
xchg
aas
push
ljmp
adc
fwait
aaa
xchg
ljmp
loopne
enter
sub
stos
xchg
ret
maskmovq
idivl
rclb
or
dec
js
inc
stc
sar
jmp
xor
sbb
push
xchg
push
stc
insl
test
or
ret
jmp
dec
or
call
in
mov
mov
sub
daa
cmpsl
sbbl
mov
inc
bound
inc
push
cmp
mov
adc
mov
bound
or
adc
cmp
lahf
cmp
mov
cltd
sub
lea
mov
xor
dec
cmp
arpl
decl
cmp
or
std
mov
xchg
lcall
outsl
loope
jbe
pminub
jge
shlb
fisubl
xchg
andl
sbbb
jecxz
dec
xchg
fsubrl
pop
rorb
aaa
mov
add
data16
sbb
out
lea
mov
and
push
cltd
dec
fwait
xchg
cld
inc
inc
jae
sar
lcall
and
out
pop
shl
mov
lahf
jg
out
rcrl
jb
pushl
push
cwtl
lret
mov
int
mov
mov
hlt
push
or
mov
dec
mov
hlt
mov
pop
sahf
xchg
push
loope
sar
mov
fldenv
jno
movsl
and
push
push
scas
mov
jbe
fnstsw
ds
add
cmpb
jmp
xchg
sbb
mov
mov
pop
fsubrl
jb
jnp
loopne
cmp
stos
xor
mov
xchg
ljmp
xlat
repz
fldenv
mov
push
fmul
pop
push
lock
pushl
mov
jmp
out
negb
or
push
xor
out
aaa
mov
sbb
jp
das
mov
or
fnsave
push
mov
cmp
shll
rol
pushl
push
clc
stos
in
js
aas
loopne
adc
call
scas
dec
test
xlat
push
xchg
dec
fists
mov
cmp
js
mov
jp
jmp
imul
xchg
mov
test
adc
cmp
push
cmp
jo
addr16
mov
scas
fmull
and
xchg
mov
les
faddp
and
aaa
lahf
push
inc
shll
sub
xchg
pop
jl
and
or
pop
pop
mov
mov
outsl
cmpsb
mov
mov
pop
test
mov
fs
sbb
xchg
decl
inc
scas
mov
add
popa
and
sub
or
in
in
adcl
test
jb
inc
shlb
xor
mov
jg
cmp
nop
xchg
add
cmpsl
fcomps
adc
pop
rclb
adc
inc
mov
sbb
pushf
jne
jmp
movsb
jecxz
pop
enter
mov
sar
xchg
int
cld
cmpsl
insb
cmp
jg
stos
ja
das
jo
jg
pop
in
add
ljmp
mov
jae
aad
sub
mov
movsl
in
mov
mov
cs
mov
push
lods
xor
fsubrs
sub
jnp
pop
push
jle
lea
lcall
lret
or
mov
clc
enter
mov
call
xor
mov
xchg
loopne
aaa
sbb
addr16
out
call
inc
sub
xchg
xor
idivb
mov
ja
cmovns
in
lcall
or
lock
xchg
insl
add
mov
adc
cmp
pushl
pop
push
xchg
push
mov
data16
adc
push
addb
xlat
cmp
jle
fcomip
decl
jl
jmp
js
cmpl
dec
mov
pop
loopne
jle
incl
out
mov
shll
imul
jge
cmpsb
fldl
int
lret
xor
jle
mov
sbb
enter
andb
dec
sbb
mov
mov
mov
data16
cli
js
push
lcall
incl
sarl
lea
js
scas
sbb
push
cmpsl
sbb
pop
mov
call
xor
lea
push
addr16
sbb
and
pop
mov
decl
xor
pop
inc
les
lock
cmp
jns
sbb
sti
xchg
stos
das
jg
lcall
cmpsl
rcr
or
inc
xor
mov
js
adc
test
ja
gs
mov
push
cld
decl
pop
cmp
xor
ret
test
xchg
push
add
cmp
repz
cld
ss
test
incl
shll
outsl
mov
lcall
in
or
je
mov
push
ljmp
lret
shlb
mov
pop
sbb
out
lock
dec
fwait
mov
mov
lcall
mulb
adc
clc
jnp
xor
cmc
adc
inc
pushf
and
incl
sbb
in
mov
les
adc
sahf
movsb
mov
test
jmp
test
sbb
cmc
iret
ret
pop
ja
movsl
cld
cmp
pusha
lret
add
dec
xchg
or
mov
mov
cltd
xchg
lret
addr16
test
sar
sbb
andl
mov
es
fnstsw
jno
repz
fucomip
insb
dec
jl
sbb
xchg
out
iret
adc
jge
nop
out
cmp
ret
mov
mov
pop
xchg
pop
rcrl
xchg
inc
call
or
outsb
mov
int3
and
mov
ret
fistpl
inc
int
inc
sarb
sub
fisttpll
mov
outsl
add
add
jge
out
pushl
add
shrb
in
repnz
pop
daa
dec
fisttps
push
mov
dec
inc
loopne
or
decl
test
jecxz
inc
mov
cltd
sub
lahf
mov
ds
es
gs
and
ljmp
add
lret
insl
gs
cmp
das
outsl
mov
outsb
jae
fwait
ror
out
mov
repnz
mov
clc
dec
mov
loop
imul
mov
sub
nop
rcrl
out
xchg
mov
mov
lock
jl
mov
pop
out
mov
pushl
test
sbb
lcall
mov
ds
cmp
decl
jg
mov
mov
xchg
shrb
popa
outsb
xchg
into
jb
lods
fscale
incl
xor
incb
push
fstl
dec
push
lock
outsl
xchg
inc
jmp
ja
lods
add
pop
pop
jge
mov
les
lahf
dec
and
push
arpl
or
outsl
jp
push
mov
xor
orl
pop
in
xor
fisubrl
cltd
dec
push
iret
sub
mov
mov
sahf
xchg
mov
and
adc
fldl
popa
imul
aas
inc
cmp
jae
int3
xchg
jo
or
cs
movsb
ljmp
or
test
iret
jb
pop
xchg
ja
mov
pop
sbbl
lods
xchg
aad
cmp
adc
test
incl
mov
test
lds
inc
ret
mov
xchg
lods
addr16
add
incl
dec
sbb
popl
pop
movsl
push
add
sbb
and
jg
call
subl
lcall
pop
in
movsb
pop
in
fsubs
mov
ljmp
stos
xor
insb
sub
mov
mov
call
js
sbb
cmc
outsl
mov
xchg
rorl
loop
and
inc
nop
arpl
inc
cs
pop
inc
mov
lret
pop
inc
adc
mov
lcall
cmc
cltd
and
ja
cli
scas
mov
jle
cmp
inc
insl
push
es
jl
int
inc
aaa
pop
push
test
movb
mov
pop
xlat
jl
cmc
lods
inc
add
sub
sbb
call
pop
sub
sti
addr16
cli
pop
push
mov
cmp
ja
sub
jmp
mov
gs
movsl
add
sti
loopne
ja
mov
mov
icebp
ljmp
and
mov
cmpsb
mov
outsl
lahf
fildll
pop
ret
imul
xor
cmpsb
pusha
in
mov
std
cld
stc
sub
xchg
ss
push
aaa
sub
enter
xchg
mov
addr16
insb
call
cmp
and
stc
push
lret
cld
int
xor
or
sbb
pushf
leave
data16
hlt
out
outsl
outsl
loop
xchg
add
addr16
das
bound
mov
call
sbb
mov
loop
mov
cmp
mov
mov
mov
jg
pop
xchg
jmp
shl
push
inc
sub
lods
and
fcoml
or
lock
lahf
mov
nop
fisubs
sub
pop
mov
lcall
inc
jecxz
cmp
in
or
mov
dec
mov
fiadds
sub
outsb
xchg
xchg
loope
pushf
inc
dec
fdivr
jmp
add
xor
lahf
mov
push
daa
cld
lret
test
daa
repnz
pop
div
dec
jae
int
clc
ljmp
dec
mov
sub
mov
lret
les
mov
jno
stos
jbe
adc
jg
pop
aad
push
and
iret
sarl
xchg
push
jmp
and
pop
fstpt
call
jne
add
cmpsl
xchg
cld
or
adc
xchg
in
adc
pop
sahf
idivl
mov
incl
xor
ja
mov
xor
adc
xor
and
xor
sbb
jmp
or
lcall
cwtl
mov
or
cmp
movsl
rcll
add
jmp
cmc
dec
insl
lahf
pop
jo
lock
inc
scas
divb
in
cmpb
fdivr
cli
subl
aam
pushl
sub
jo
mov
sbb
mov
dec
dec
scas
or
es
test
mov
jle
lcall
dec
push
dec
cmp
mov
movsl
int
ja
incl
mov
or
add
add
and
dec
mov
cli
movsl
jl
mov
jg
jle
and
or
lret
iret
xchg
pushf
sti
jmp
cli
in
cmp
in
pop
repz
pop
mov
nop
incl
imul
jno
mov
sbb
jp,pn
hlt
sbb
shrl
stos
icebp
or
nop
ljmp
aaa
mov
aas
and
jb
bound
incl
std
loopne
dec
xlat
mov
call
popf
lods
sub
jne
jl
push
ljmp
loopne
pop
push
lods
pop
test
cmp
in
xchg
notb
jecxz
xor
pop
in
pop
jns
mov
jle
std
cmpsb
inc
cmpsl
and
sbb
andb
movsb
xchg
mov
add
and
inc
jns
push
jp
subb
or
fisubl
inc
cmc
push
push
cmp
mov
xchg
push
lcall
into
or
aam
aaa
pop
pop
cmpsb
dec
mov
xorb
insl
cmc
daa
out
sbb
das
cli
xchg
aam
test
jo
pop
and
std
pop
push
mov
mov
inc
into
test
xchg
sub
fnsave
scas
gs
test
aad
and
pop
cmp
ret
aaa
std
call
ja
inc
pop
mov
sbb
pop
or
loopne
or
les
jle
ud0
ljmp
sbb
sbb
cltd
cmpb
cs
fcmovu
lock
sub
push
mov
mov
lds
mov
popf
mov
push
les
xor
inc
testl
push
cmp
gs
loopne
mov
push
add
insb
je
sbb
xchg
movb
sbb
adc
xchg
jb
sbb
test
mov
mov
das
cmp
loopne
aas
insb
inc
inc
cld
jne
test
pusha
inc
fwait
sub
aam
outsl
int
xchg
loopne
add
rol
mov
sbb
cld
cmp
incl
mov
ret
and
lret
xchg
rolb
push
adc
dec
aam
cmpsb
cmp
divps
jg
inc
loope
jae
mov
shlb
pop
fwait
cmp
mov
sub
jmp
scas
sub
xor
cs
ljmp
jl
das
pop
ret
sub
incl
bound
jmp
mov
dec
sbb
hlt
and
cmp
mov
aaa
inc
sub
ficompl
adc
call
mov
mov
pop
fnstenv
pop
testb
ja
imul
cld
mov
push
iret
or
ret
imul
xchg
dec
mov
lret
fnstcw
cmp
inc
outsl
mov
nop
ret
mov
cltd
pop
pop
loopne
out
pushl
dec
sbb
pop
dec
or
mov
push
adc
mov
adc
inc
mov
mov
or
lret
repnz
loop
shll
cli
rcrb
mov
mov
ficoms
ss
vpshufhw
jecxz
lcall
int
mov
add
clc
mov
pop
ljmp
lret
add
jbe
iret
dec
test
frstor
xor
sbb
fcmovnbe
mov
call
adc
mov
fidivs
jne
mov
pushf
loope
ret
push
push
mov
fisttps
mov
jmp
insl
jg
dec
stos
cmp
movsl
mov
sub
cmp
sarb
int
xchg
or
push
dec
repnz
shll
jmp
dec
fucomp
pop
xchg
lods
push
stos
cmp
mov
fucomi
jmp
dec
xchg
inc
sbb
lahf
mov
lcall
sbb
sbb
lds
inc
lods
inc
dec
adc
push
and
or
mov
add
xor
mov
je
icebp
pop
lret
ljmp
mov
int3
mov
out
push
add
fsts
psubsb
ud0
insl
repz
push
mov
outsl
mov
in
rorl
sbb
cmp
xor
xchg
leave
jnp
sub
pop
clc
push
jmp
pop
std
call
mov
pop
scas
cld
clc
les
int
sub
fmuls
pushl
mov
push
or
popa
in
jnp
clc
stc
inc
mov
mov
push
hlt
add
sti
orl
ljmp
jnp
pusha
repz
jmp
push
and
fcomps
ds
stos
dec
xchg
jmp
ljmp
xchg
pop
int3
jae
adc
push
pop
cwtl
fidivs
neg
movsb
push
adc
insl
mov
mov
push
adc
jmp
dec
cld
mov
repnz
in
gs
lock
pop
sub
packssdw
or
push
addb
pop
add
pop
jno
xchg
xor
sbb
pushl
lea
std
lcall
jae
lods
and
pop
mov
mov
jmp
lock
mov
fld
mov
jno
inc
addr16
lods
mov
dec
push
testb
dec
jecxz
ss
pop
or
xor
push
mov
xor
call
nop
bound
je
cld
jl
outsb
mov
inc
ror
mov
cs
add
add
loope
pop
pushl
sbb
mov
jecxz
lods
orb
stos
adc
inc
stos
or
mov
call
push
adcb
cmpsl
inc
jae
pop
mov
push
dec
sar
incl
fdivp
loope
jp
dec
pop
leave
repz
aad
add
xchg
add
nop
mov
cmc
outsl
clc
jmp
adc
adcl
mov
jnp
into
mov
out
xchg
popf
bound
lcall
ret
xor
mov
adc
dec
cmp
out
sbb
sub
push
repnz
call
mov
dec
sub
sub
cmp
push
sbb
out
loop
ds
pushl
sub
push
sbb
push
mov
repz
sub
gs
stos
jp
lcall
sbb
add
imulb
or
push
and
in
enter
lcall
mov
cmc
pop
xor
movsl
mov
add
mov
cmp
push
or
aad
sub
pushl
cmpsl
call
push
jl
in
out
xchg
iret
cmp
and
clc
adc
mov
push
loop
ds
bound
repz
lret
nop
sti
popf
pop
out
inc
ss
xchg
jp
fwait
jmp
mov
ror
hlt
push
push
sbb
add
or
fwait
mov
ret
outsb
sub
incl
and
add
incl
pop
js
inc
stos
jp
into
xlat
cmp
sub
adc
adc
mov
ret
mov
lret
lahf
fimull
shlb
pop
inc
movsb
ret
call
dec
add
add
pop
lret
and
xchg
cmp
inc
ljmp
in
adcl
mov
leave
mov
lret
xor
xor
cltd
aam
jnp
mov
xor
cld
jnp
daa
bound
cmpsb
fnstcw
fmul
loop
push
mov
lods
xor
out
es
lods
mov
mov
jae
push
daa
adc
xchg
push
xchg
ret
push
push
dec
lods
xchg
aaa
ss
inc
pop
andl
pop
jecxz
jp
mov
out
push
pop
cmp
mov
cmp
out
daa
fstpl
mov
outsl
lea
stos
xor
cmpsb
out
mov
jnp
bound
push
stc
ret
or
sub
jg
mov
in
fwait
andl
pop
incl
adc
mov
add
jns
insb
lret
jge
xchg
mov
decl
insl
dec
inc
add
lret
je
insb
push
hlt
pusha
sub
jbe
and
pop
sar
imul
repz
sub
fdivr
mov
dec
cld
inc
push
dec
jns
mov
data16
xchg
cmp
inc
in
or
jge
imul
insl
fdivl
rcr
jns
lods
test
jmp
mov
mov
push
and
inc
xchg
xchg
sbb
cmc
xor
gs
ljmp
cld
mov
addr16
movsb
cs
dec
movl
mov
mov
xor
in
call
xor
sbb
cmp
outsb
shrl
pop
mov
and
xchg
ljmp
mov
fisttpl
jle
push
pop
rcrb
rorl
repnz
dec
xchg
mov
push
ljmp
pop
mov
mov
xor
into
lods
mov
cwtl
mov
les
mov
mov
pop
aaa
lcall
lret
hlt
insb
push
jmp
stos
out
fisubrl
in
cmp
sahf
sbb
sahf
stos
mov
lcall
inc
ret
fcomip
in
sbb
imul
mov
fucomip
xor
inc
xorl
out
and
adc
repz
mov
adc
cmp
rolb
cmp
push
add
push
stos
loope
pop
mov
adc
jl
dec
fucomi
and
mov
fildll
jno
jmp
mov
stos
inc
dec
rolb
pop
std
jmp
jecxz
in
xchg
call
outsl
add
and
mov
rcll
fnsave
push
repz
pop
cmp
jle
jle
lods
mov
into
sahf
sbbb
xchg
xor
sti
arpl
in
test
jge
repnz
jo
lcall
dec
bound
aas
mov
stos
stc
xchg
loope
je
sbb
dec
rcrb
fadds
and
pop
dec
inc
pop
sbb
cmp
mov
stos
addb
xchg
mov
pop
add
call
or
into
and
jo
stos
dec
sub
xchg
sbb
jp
aas
mov
pop
incl
xorb
xor
sbb
mov
lock
sbb
xchg
cmp
nop
pop
jbe
loope
mov
push
sbb
xchg
loop
out
xchg
aad
cltd
test
cld
pop
mov
cmp
or
pop
lcall
rcll
in
loop
bound
mov
pop
mov
fimuls
movl
aas
imul
and
scas
pop
mov
popa
lcall
mov
cmp
lds
xchg
push
and
jmp
jb
idiv
es
les
jns
jbe
arpl
insb
xchg
fidivrl
std
xchg
push
or
jg
jmp
adcl
cmp
imul
cmp
movsl
add
dec
pop
pop
scas
pop
mov
das
cli
frstor
cmp
addr16
loope
cli
or
or
jnp
cltd
test
mov
lcall
pop
sub
data16
cmp
or
shlb
pop
jmp
mov
inc
andl
cmpsl
lret
leave
inc
mov
in
ja
pushl
pop
cltd
push
in
push
push
adc
xchg
jo
or
shll
xchg
push
mov
push
stos
sub
adc
lcall
xchg
mov
and
pushl
inc
mov
out
jno
xchg
mov
insb
dec
adc
sub
ret
xchg
push
pushf
aaa
imul
sarb
jl
shl
push
fidivl
pop
inc
cld
push
mov
popf
jg
lods
push
mov
lahf
jl
rorl
ljmp
ret
xor
fwait
jge
mov
clc
mov
dec
cld
addr16
push
int3
mov
mov
xor
lret
sbb
rcrl
out
sub
add
add
add
aaa
mov
stos
shrl
sbb
leave
xlat
inc
xchg
add
ljmp
int
rcr
dec
imul
call
fld
sarb
inc
mov
repz
pop
mov
jne
add
jle
fstpl
mov
ss
sbb
pop
and
aam
push
std
adc
add
std
sub
xor
mov
repz
jno
stc
add
mov
mov
cmp
jmp
ljmp
inc
mov
xchg
lock
mov
inc
pop
cmp
jmp
lcall
mov
hlt
jp
jo
aad
lods
xlat
pop
je
test
mov
iret
mov
lcall
lcall
cwtl
xor
push
jo
xchg
pop
stos
dec
test
xor
mov
xchg
scas
mov
sub
jl
out
pusha
mov
pop
push
out
inc
inc
ljmp
mov
xchg
cmp
wrmsr
test
sub
mov
iret
sarl
pushl
adc
shrl
sbb
fsubr
sbb
dec
arpl
ds
adc
mov
aad
xchg
es
inc
cld
mov
decl
out
xor
push
bound
out
lret
mov
in
push
inc
cmpsl
ja
add
inc
sar
fwait
mov
pop
sub
sub
add
pushl
je
das
and
mov
jg
fsts
add
adc
jns
or
lea
es
test
sbb
pop
hlt
add
addb
fs
adc
ljmp
out
mov
xchg
add
into
or
mov
mov
decl
jg
cmc
incl
mov
loopne
mov
repnz
test
pop
call
iret
das
xchg
jecxz
jge
dec
jmp
out
add
xor
sbb
mov
push
hlt
call
sub
mov
pop
and
inc
dec
std
mov
lcall
lods
pop
dec
out
fdiv
xchg
dec
lahf
inc
or
add
and
ljmp
mov
pusha
mov
rolb
or
and
inc
push
push
cmp
push
mov
ljmp
mov
xor
nop
call
cli
and
adc
inc
lods
pushl
daa
adc
mov
nop
pop
scas
sbb
add
test
sub
das
xchg
int3
enter
sbb
xchg
notl
decl
mov
cmpsl
sub
inc
mov
add
pop
adc
ds
sbb
mov
pushl
and
jg
test
iret
add
mov
sarl
add
cmp
jg
out
jmp
in
cwtl
arpl
lret
stc
pop
xchg
daa
movsl
adc
call
loope
cmp
push
and
pop
inc
test
rorb
sti
rcr
gs
cwtl
push
sti
adc
jmp
lock
push
push
xor
sbb
xchg
popf
mov
or
mov
outsb
test
dec
or
adc
jnp
lahf
jle
mov
push
clc
incl
out
mov
outsb
sbb
push
jae
gs
mov
das
add
fcomip
out
mov
pop
ret
test
xchg
shll
in
push
or
decl
movsb
mov
mov
cs
movaps
nop
outsb
inc
pop
and
push
ja
call
icebp
sbb
dec
xor
push
inc
dec
sub
fstpt
pusha
xor
data16
dec
or
mov
ret
dec
or
incl
xor
sbb
jmp
popa
incl
jmp
pop
data16
bound
xor
stos
out
adc
jl
pop
scas
leave
je
inc
sti
pushl
addl
popf
mov
mov
imul
frstor
repnz
xchg
pop
loopne
call
cltd
adc
sub
adc
cmc
inc
clc
push
jo
xor
jmp
dec
jge
and
jl
push
insl
ret
dec
je
pop
push
fistpl
scas
add
or
mov
pusha
push
sti
mov
jle
or
xor
mov
jno
mov
ljmp
cs
jne
mov
popa
cld
or
cmpsb
pop
jnp
xchg
mov
ljmp
test
iret
daa
cmp
mov
cmp
and
addr16
xorl
js
jnp
xchg
push
cli
fucomp
ljmp
add
mov
imul
inc
mov
jecxz
imul
xchg
and
lea
lcall
fwait
add
dec
add
add
inc
ljmp
lret
decl
idiv
cmp
sti
mov
inc
cmp
cmpsl
add
ror
call
sub
sub
dec
add
mov
fsubrs
loop
lods
jmp
loop
and
decl
sbb
pop
int
lock
mov
or
push
xchg
lret
push
icebp
jmp
inc
je
mov
bound
jnp
push
xor
pop
lcall
clc
jnp
imul
stos
or
negb
xchg
adc
es
decl
xchg
push
push
pop
jnp
xchg
cli
test
jmp
mov
das
sub
pop
cmpsb
stos
jnp
xor
shrb
cmc
push
out
in
ret
cmp
enter
ret
push
adc
int3
fs
test
int
jmp
dec
add
dec
mov
jmp
mov
and
int3
add
and
sbb
ljmp
leave
mov
push
iret
sahf
ret
cmpsl
int3
and
mov
jle
lock
push
sar
cmp
pop
inc
cmp
push
loope
mov
jecxz
xor
sar
call
mov
icebp
enter
push
fld
push
lods
inc
insb
and
jg
repnz
test
inc
or
pop
lret
adc
pop
pop
rol
pop
sub
mov
cmp
push
pop
std
sahf
loope
popa
mov
je
xchg
sahf
and
scas
pop
push
add
scas
adc
lds
mov
test
mov
and
fwait
xchg
pop
adc
mov
mov
imul
mov
dec
push
outsb
xchg
test
enter
cmp
cltd
and
inc
sbb
scas
cli
pushl
and
mov
mov
aaa
bound
mov
nop
push
nop
adcb
or
ljmp
dec
mov
arpl
mov
pop
addl
xchg
pushf
inc
xchg
lcall
mov
add
in
aam
or
vmovd
or
jo
push
loop
or
call
dec
arpl
pop
int
out
lcall
jnp
lcall
fwait
pop
ret
mov
inc
leave
jp
sub
xor
jns
and
jg
sti
or
or
inc
pop
clc
and
shr
add
mov
stc
js
mov
call
cmp
cmp
xor
inc
out
mov
add
popf
pop
decl
add
dec
inc
movsl
das
mov
shrl
fadds
push
test
pop
out
fwait
rcrl
jmp
inc
sbb
lcall
adc
or
pop
out
inc
adc
mov
ja
inc
or
mov
in
add
xor
aas
and
mov
test
cmpsl
frstor
mov
les
stc
cwtl
pop
inc
adc
es
jno
xchg
dec
test
dec
aam
jbe
pop
cs
ljmp
sub
push
sbb
mull
jnp
mov
dec
fdivs
cld
push
fadd
loop
or
mov
sub
lcall
leavew
mov
incl
test
test
sbb
jbe
jb
jnp
leave
stc
fwait
or
test
lret
ljmp
movsb
jns
insl
add
pushf
enter
rcrb
in
fcomip
xor
insl
mov
call
pop
pop
lret
inc
bnd
jmp
push
jne
mov
pop
int
mov
pop
popa
gs
enter
cmc
mov
mov
and
mov
sub
adc
ss
inc
push
adc
jmp
rcll
ret
and
xor
sub
adc
lret
outsb
pop
lods
clc
call
outsb
icebp
imul
jp
dec
pop
bound
xlat
andb
pushl
stos
mov
test
cmpsl
and
and
data16
and
fbstp
popf
adc
sbb
mov
push
lock
xlat
jo
aaa
mov
popf
call
pop
or
cmp
cmp
std
dec
cmpsb
fs
mov
lret
and
xchg
mov
fisubrl
inc
jns
mov
roll
test
mov
ret
push
mov
pop
enter
jg
or
xchg
mov
sbb
add
fistl
cltd
push
mov
incl
mov
sar
sbb
mov
push
shll
mov
lcall
ja
inc
sti
lods
sbb
push
shl
jle
mov
mov
jbe
loope
mov
imul
data16
mov
cli
mov
sbb
inc
mov
inc
mov
or
cmpsl
dec
push
mov
jge
sbb
cld
fmull
adc
fcomi
pop
xor
inc
fs
inc
inc
jmp
adc
mov
test
inc
inc
loop
sbb
sub
adc
decl
lds
es
inc
add
jne
or
outsl
popf
in
pushl
push
jae
xchg
lcall
test
mov
clc
push
sbb
aas
lcall
mov
cmpsb
or
nop
iret
cli
push
std
lea
sti
js
scas
lods
adc
add
decl
mov
jne
lahf
mov
and
add
decl
adc
sti
mov
fisttpl
adc
inc
pop
and
stc
daa
clc
or
sar
pushf
and
jae
mov
loope
jne
cmpsb
pop
ret
push
cmp
decl
sbb
xorb
add
adc
and
jno
dec
inc
shll
incl
sti
pop
jmp
shrb
insb
add
enter
repz
mov
call
pop
mov
insl
mov
sahf
mov
je
nop
cmp
dec
ja
cmpsl
mov
jmp
cmp
sub
pop
inc
fwait
push
clc
pushl
data16
pop
repnz
mov
fsubl
jno
fstpl
test
popa
xchg
mov
push
pusha
movsb
or
imul
mov
lods
push
dec
cmp
dec
ss
jae
adc
repnz
push
add
daa
xor
mov
addb
movsl
ss
in
lock
call
cmp
shr
cmp
data16
inc
pop
push
inc
sbb
pop
xor
je
inc
mov
jg
decl
fdivl
add
pop
push
jg
xchg
arpl
push
decl
jnp
push
push
test
jle
mov
stos
mov
cmpsb
rolb
jmp
xchg
jne
lods
jnp
cmp
inc
jne
jle
stos
mov
mov
repz
inc
jecxz
dec
std
push
xchg
test
and
fwait
push
push
cs
test
xchg
aaa
loope
daa
dec
dec
xor
mov
lcall
std
inc
or
leave
cli
mov
xor
jmp
add
inc
push
cld
pushl
or
inc
imul
mov
cwtl
into
xchg
data16
and
loopne
xlat
jmp
jg
push
es
pop
aaa
or
rcl
stc
jmp
jmp
sub
lods
push
jl,pt
lods
mov
ds
repz
jbe
jg
or
push
push
jbe
fcomps
insl
mov
push
mov
dec
mov
dec
xchg
mov
ljmp
shr
addr16
pusha
push
push
adc
mov
std
add
sub
enter
out
fcompl
test
ljmp
xor
lcall
pop
cmp
jae
push
insl
jmp
xor
jb
nop
outsl
or
ljmp
sub
xor
fcoms
out
mov
in
pushf
sub
jl
ljmp
imul
push
cmpsl
add
fists
daa
push
js
ret
pop
and
inc
lcall
pop
xorb
push
scas
inc
cmpsb
cli
mov
sub
test
in
add
mov
jp
adc
dec
leave
data16
cmp
or
xchg
arpl
fs
ljmp
push
insb
mov
cmpl
out
cli
mov
inc
and
mov
insb
dec
pop
pushl
adcb
jp
mov
dec
push
adc
or
stos
bound
insb
incl
xchg
lods
sbb
pop
pop
test
repnz
ds
push
and
ret
call
cvtpi2ps
movsb
dec
rorl
xchg
and
mov
sbb
lcall
nop
es
sub
xchg
cmp
mov
cmp
lods
mov
lods
call
fs
lcall
sub
lret
movsb
int
lods
cwtl
xlat
cld
subl
inc
push
sub
mov
jmp
test
rclb
add
popf
icebp
xchg
mov
mov
mov
lcall
mov
fs
mov
dec
test
rcr
sbb
std
decl
popa
sub
lods
add
adc
mov
push
dec
imulb
addr16
jg
mov
cmpsb
sarb
inc
cs
iret
sbb
mov
pop
sahf
mov
loop
or
call
sbb
jle
es
iret
rolb
push
lahf
mov
jmp
enter
pop
lret
pop
ffree
in
mov
fucomp
mov
sub
sub
sahf
sub
rorb
hlt
sahf
jp
add
imul
addl
into
jg
dec
xchg
pop
and
pop
jns
in
add
pop
or
xor
cmp
sti
pushl
mov
jne
scas
add
push
negl
push
sarl
arpl
aam
adc
jmp
aam
cltd
es
jnp
xor
xor
stos
addr16
mov
push
sbb
xchg
mov
add
lcall
dec
or
jno
mov
mov
pop
icebp
mov
das
addr16
push
mov
int
mov
ljmp
dec
pop
xor
push
hlt
mov
xchg
push
int3
jbe
sbb
in
push
sarb
jbe
sarb
ja
sbb
sub
jmp
lods
adc
dec
ss
xchg
and
sar
scas
or
mov
incl
jl
int
hlt
into
push
and
xorb
incl
mov
adc
iret
arpl
fmul
adc
mov
push
and
jmp
sbb
jp
mov
data16
aad
pop
jg
fmul
sar
out
adc
adc
xor
push
sbbl
shll
and
cs
add
pushl
inc
mov
jp
rorb
and
in
fcompl
xchg
xor
aad
xor
incl
push
fidivrl
mov
aad
add
sub
pushl
mov
xor
sub
push
sbb
push
int3
sub
inc
pop
dec
out
dec
pop
mov
add
icebp
fisubs
cs
add
mov
loop
repnz
incl
loopne
sti
loopne
xchg
clc
int3
fadd
cmc
out
jg
jns
stc
dec
cmc
jle
std
fsub
push
hlt
adc
std
icebp
in
in
fdivr
sbb
add
adc
and
add
lret
xchg
xor
cmp
sti
mov
xor
and
jg
mov
mov
mov
cmpb
call
xor
test
outsb
adcb
inc
push
ljmp
rorb
xor
cli
pop
daa
push
jns
cmp
inc
mov
das
clc
jmp
repz
pop
fwait
jmp
sub
push
mov
dec
cli
daa
xorb
clc
pop
hlt
incl
dec
out
cmc
orl
jae
dec
fs
inc
stos
cli
or
mov
xchg
nop
mov
cmpsb
or
lods
inc
in
lcall
add
push
xor
int3
mov
push
fstps
fcomps
or
jmp
mov
stos
or
incl
cmp
mov
iret
sub
dec
adc
xchg
int3
and
int3
mov
mov
incl
pushf
movsb
sti
sbb
cmp
aaa
scas
movsb
or
mov
inc
xchg
repnz
clc
adc
fcompl
jge
enter
jmp
jp
rolb
decl
mov
dec
scas
mov
xchg
mov
cld
xchg
les
inc
push
add
mov
aaa
cmp
jmp
lahf
mov
test
je
cmpsb
imulb
mov
jmp
test
xchg
into
aam
jb
adc
or
nop
inc
xor
dec
jl
or
mov
pop
enter
mov
sbb
cmp
mov
out
test
insl
stc
and
pop
shrb
stc
fwait
mov
out
inc
fs
pop
cmc
jl
lcall
jge
adc
pop
cmc
mov
cld
pop
test
xchg
sbbb
pop
hlt
mov
pop
outsb
pop
add
pop
xchg
push
and
cmp
lock
pop
push
sub
or
adc
pusha
mov
jmp
sbb
in
aaa
mov
push
lcall
jg
stos
xchg
push
lods
add
xor
push
std
ljmp
and
aas
mov
fsubrl
call
mov
clc
xchg
push
ss
or
enter
xchg
xchg
adc
mov
and
icebp
incl
cld
add
cmp
xchg
dec
outsb
ficoms
add
inc
scas
jb
sbb
rcr
adc
mov
je
jmp
cli
cmp
icebp
mov
push
es
cli
pop
dec
pop
test
incl
dec
orl
cmp
into
jmp
enter
add
jno
aaa
and
cmp
jecxz
pop
hlt
sub
cmp
mov
xchg
jle
xor
lds
xchg
scas
bound
dec
jns
add
or
cld
js
outsl
dec
xor
dec
out
mov
add
jg
out
mov
aam
loope
mov
cs
in
mov
pop
adc
pop
pop
sarb
ds
incl
push
shrl
push
aaa
cmpsl
addl
xchg
movsl
adcb
test
jg
dec
mov
sub
std
daa
stos
test
lods
and
out
cli
in
movb
pop
into
mov
mov
enter
xchg
loop
call
lods
or
call
ja
das
xchg
int
aaa
pushf
jnp
lahf
inc
adc
ds
lcall
out
lods
sub
hlt
ret
repnz
mov
mov
sub
popf
lret
fdivrl
out
je
call
mov
cwtl
fwait
js
and
push
xchg
shr
dec
loope
setl
ljmp
sub
pop
movsl
xchg
data16
popl
imul
clc
jmp
add
push
lahf
mov
sub
xchg
loope
fwait
cmp
sti
cwtl
or
pop
ret
lcall
dec
into
pop
leave
aaa
mov
out
aam
mov
dec
inc
pushl
sti
lea
push
gs
mov
ret
call
xchg
clc
nop
addb
call
cld
add
sbb
pop
in
inc
ja
add
dec
xor
mov
fwait
sti
fs
mov
mov
jae
jle
ljmp
xor
xchg
mov
xor
pop
aaa
cld
pushl
out
pop
add
lret
xchg
repz
pop
mov
sbbl
decl
testl
rep
pop
add
mov
in
lods
inc
outsl
incl
int3
cmp
les
aam
push
jmp
int
pop
fdivp
mov
out
cmp
pop
inc
mov
popa
ljmp
sbb
dec
sub
daa
push
jp
shl
sbb
test
bound
dec
addb
pushl
sbb
push
push
mov
sbb
inc
mov
mov
icebp
mov
push
outsb
sub
xchg
pop
dec
in
push
adc
mov
push
jecxz
ljmp
pushf
lock
inc
movsb
ja
push
push
imul
aad
cmp
pop
push
jp
jg
or
add
sub
subb
aam
inc
incl
dec
add
dec
mov
lcall
dec
ljmp
push
pushf
out
inc
cs
fsubl
sbb
push
add
fsub
or
jmp
jae
jl
dec
fxam
jbe
jl
nop
filds
mov
xor
fiadds
aaa
in
sar
sub
test
ljmp
ds
fcos
mov
nop
xor
xorl
push
inc
cmp
push
sbb
fxtract
xlat
jle
jmp
xor
in
shlb
push
mov
mov
fdivrs
ljmp
and
lret
pop
lods
push
cmpsl
mov
push
mov
int
push
out
and
decl
sbb
inc
mul
popa
mov
ds
incl
xchg
mov
mov
mov
jns
lret
pop
test
sbb
mov
dec
jp
mov
and
add
pushf
pop
scas
mov
and
push
push
sbb
repz
sti
sub
inc
pusha
addr16
jge
fimuls
and
enter
pop
sub
std
sbb
inc
pop
ficoms
iret
jecxz
arpl
mov
andl
stc
push
xlat
push
mov
dec
jle
and
sahf
ja
shlb
icebp
das
pop
jp
call
or
mov
out
xrelease
out
mov
cmpl
sbb
adc
mov
lods
sarb
jo
jl
cli
xchg
insb
xor
and
pop
jle
sub
sbb
ret
loope
mov
sub
jg
rcrb
cmc
push
push
fwait
imul
inc
xor
insl
fidivl
jmp
mov
mov
gs
mov
mov
std
inc
repnz
jns
jns
push
and
lcall
or
ja,pt
xchg
ja
mov
testb
testb
aad
jl
fnstcw
aam
push
popl
jge
gs
jo
lea
pop
or
mov
jmp
test
sbb
das
jecxz
fcompl
or
rorl
addr16
or
sub
incl
mov
and
sbb
mov
std
addr16
outsl
imul
cmpsb
cs
outsl
test
xchg
xchg
ss
incl
out
repz
pop
cmpsb
sti
mov
cmpsl
outsl
adc
pop
fwait
xor
add
scas
mov
inc
mov
inc
pop
int3
outsl
sub
test
cmp
sbb
mov
push
push
aas
cmp
incb
adc
or
sarb
adc
es
jns
cmpsl
test
enter
fwait
and
lds
notb
les
xor
inc
jae
les
xor
clc
lcall
jp
inc
mov
dec
das
shl
fs
cli
lcall
and
add
jbe
jae
clc
aas
std
into
mov
psrld
pop
in
pop
xchg
fs
sbb
hlt
add
in
fbstp
lret
or
pushl
sub
push
dec
dec
scas
add
push
jae
or
notb
push
sub
add
test
xor
lcall
nop
sar
mov
shr
sbb
or
add
scas
pushl
call
dec
in
in
pop
sbb
pop
ja
jecxz
call
jns
andb
test
test
clc
jmp
add
shlb
pop
sub
mov
sub
fstl
dec
xlat
jl
out
aad
testb
sbb
xor
psrlw
in
nop
pop
mov
dec
incl
mov
jnp
movsl
add
int
pop
std
scas
sahf
mov
cmc
in
arpl
das
roll
cltd
iret
jb
decl
hlt
aad
mov
and
xor
and
dec
cwtl
cli
icebp
add
mov
push
sar
iret
outsb
adc
call
cmp
incl
ljmp
shlb
push
ss
jne
cmpsb
mov
xchg
xor
clc
push
sahf
sarb
pop
into
addb
pop
shl
cld
sbb
mov
inc
adc
jmp
sbb
std
jns
sbbl
lcall
sub
sbb
xchg
cmp
arpl
repz
hlt
jmp
dec
pusha
adc
xor
incl
inc
popa
xlat
popf
pop
cmc
inc
xchg
sub
inc
outsl
jecxz
ret
ss
fistpl
movsb
and
mov
pop
loope
rcll
dec
ljmp
icebp
pop
sub
call
scas
pop
xchg
pusha
fs
cmpsb
jl
adc
aaa
cmp
push
push
and
sub
es
ljmp
inc
iret
xor
aam
jp
fcoml
sub
call
fdivr
lcall
mov
fwait
repz
movsb
mov
mov
pop
rolb
adc
jl
fsubrp
jle
out
adc
outsb
out
pop
pop
dec
xchg
mov
pop
mov
je
test
jmp
adc
jb
mov
and
adc
movsb
hlt
push
cmp
and
lock
mov
pushl
push
jp
xor
xlat
mov
out
shl
add
jg
jmp
test
les
test
mov
dec
lcall
xchg
pushl
jp
xor
stos
and
lahf
sbb
int3
dec
pop
pop
lret
push
mov
sbb
inc
mov
ljmp
lret
popa
inc
sbb
movsl
add
jo
inc
out
sbb
repnz
jae
bound
dec
mov
in
ljmp
arpl
outsl
sbb
push
and
xor
xchg
jno
loopne
cli
inc
rcr
decl
shlb
test
aad
jns
and
and
jge
push
imul
mov
lcall
xchg
ja
inc
sub
jnp
xlat
aad
or
xchg
setl
test
stos
sub
lcall
hlt
inc
inc
inc
jnp
and
and
fcomps
push
popf
lods
arpl
xchg
imul
inc
mov
or
inc
pop
and
inc
dec
sbb
outsb
pop
iret
xor
ljmp
mov
push
jle
push
dec
cli
mov
push
xchg
cmc
mov
enter
ljmp
push
push
fidivrl
arpl
mov
fistpll
fs
sbb
mov
stc
loopne
movsb
xor
mov
xchg
add
es
cmp
pushf
subb
mov
popa
push
add
fcmove
inc
ss
pop
test
out
movsl
aas
aas
jmp
mov
lds
mull
clc
mov
xchg
call
mov
jp
loop
cmp
pop
out
sub
inc
fdivs
call
fwait
lret
das
ljmp
cli
js
xor
roll
mov
mov
mov
pushl
add
sub
aaa
frndint
lahf
xor
mov
icebp
addb
sbb
sub
fiadds
push
or
lahf
add
cld
mov
cwtl
xor
sub
insw
sbbb
add
mov
xchg
notb
gs
or
addl
fcomip
scas
in
sar
es
pop
push
jmp
cli
mov
icebp
cmp
call
icebp
inc
xor
fiaddl
sbb
pushf
push
movhlps
lds
dec
les
call
mov
ret
pushf
cmp
out
xchg
push
cmp
pop
push
in
sub
lcall
jns
cmp
or
inc
mov
mov
inc
mov
shrb
push
aad
imul
pop
cwtl
sar
inc
xchg
push
inc
push
mov
mov
pop
jg
in
jb
mov
fcoms
add
pushl
add
test
push
call
push
push
popf
les
inc
and
ljmp
jnp
mov
jmp
call
cmc
or
pop
stos
rorl
dec
pop
addb
insl
mov
das
sar
outsl
cmp
insb
rorl
outsb
ret
js
aam
imul
incl
lods
out
into
outsl
mov
jmp
mov
and
in
and
dec
push
ret
daa
or
lret
mov
icebp
aad
mov
int
mov
cld
jne
dec
sbb
aad
add
incl
lahf
insl
repnz
pop
in
out
hlt
dec
mov
cmp
std
out
sbb
lods
nop
loop
and
into
hlt
repnz
call
inc
test
negb
sti
jl
stc
xor
repz
dec
movsb
cmpsl
inc
movsb
jmp
lcall
cli
dec
mov
xchg
imul
nop
rorl
xchg
push
rcl
inc
cli
mov
push
mov
sub
ljmp
push
push
add
gs
scas
enter
stos
icebp
mov
fisttps
mov
xchg
pop
or
dec
mov
pop
and
in
andl
iret
jl
test
xor
into
pop
ljmp
xor
cmp
cmp
cld
mov
scas
test
loope
sti
fimuls
les
mov
sub
mov
test
ljmp
and
pop
fistpl
out
test
lea
mov
inc
loopne
cmp
add
fdivr
lcall
adc
lock
mov
insl
rolb
loopne
mov
pop
scas
out
pop
jo
divb
fdivrs
xchg
pusha
mov
jnp
lock
fnsave
jge
jnp
cwtl
add
imul
incl
adc
inc
int
cmp
ljmp
out
or
jl
mov
in
xor
out
mov
sbb
test
jg
dec
std
jg
inc
sbb
jecxz
pop
adc
in
dec
addr16
cltd
inc
lods
and
dec
stos
pushl
insb
push
sarl
inc
adc
gs
lcall
insb
pop
jp
ljmp
push
push
aad
mov
in
shr
lahf
cmpsl
je
mov
pop
push
clc
incl
pusha
mov
inc
xchg
pop
sub
sub
push
push
mov
mov
jg
mov
sbbb
cwtl
sbb
shlb
pop
mov
or
dec
pop
cmp
aad
mov
sti
mov
pushl
std
ljmp
mov
dec
jg
aad
imul
out
shlb
push
xlat
fs
or
fwait
test
call
lea
jo
xor
cmc
or
pop
mov
cwtl
mov
ja
movsb
std
pushl
test
add
lock
shl
js
out
lret
fs
jg
inc
popa
fwait
ds
mov
jno
mov
sub
bound
shll
rcrb
add
lcall
repz
mov
sbb
mov
dec
cmpsl
out
mov
decl
cli
pop
xchg
add
cmp
sbb
dec
push
jmp
jge,pt
in
pop
mov
inc
xor
into
and
mov
jo
dec
test
arpl
lcall
popf
add
or
pop
movsb
pop
fistpl
sub
xchg
jnp
fs
dec
nop
mov
dec
js
and
jmp
dec
int3
ss
mov
pushf
mov
outsb
sub
mov
stos
sub
jmp
dec
cmp
ljmp
cltd
cmpsl
ljmp
sub
adc
flds
sbb
cmc
out
xor
shlb
fs
xchg
out
sub
cld
cmp
fistl
xlat
into
jb
xor
loopne
aaa
std
cli
fdivrs
push
outsl
jge
jbe
mov
inc
pmaxub
mov
outsl
adc
fldcw
cltd
xchg
pop
in
mov
add
pushl
fwait
lock
xor
in
xchg
xor
out
push
sub
pop
pop
sub
jno
sub
fnsave
add
inc
sarl
or
outsl
or
add
loopne
push
sub
decl
fldt
add
loopne
jae
push
pop
ljmp
sar
lcall
fisttps
mov
pushl
push
test
jo
or
pushl
and
cs
aam
fldenv
fucomi
pop
stos
adc
mov
pop
jge
pop
decl
jge
in
pushf
int
cmp
or
push
cmp
dec
sbb
push
lods
pushf
mov
ljmp
push
aaa
inc
sbbb
shl
negl
dec
pop
mov
pop
imul
adc
roll
aaa
stc
mov
inc
or
pushf
jecxz
mov
mov
pop
mov
ljmp
loop
repz
mov
popf
or
rorl
mov
int3
mov
sbb
mov
pop
popf
gs
sahf
xor
mov
ret
lcall
movsl
cmp
jl
cvtdq2ps
rcrb
cmp
pushf
and
lcall
lea
push
iret
xor
mov
mov
xchg
jl
movsb
push
lret
das
jns
decl
dec
stc
xor
xchg
daa
out
cmp
jno
mov
repz
lahf
cs
sbb
push
ljmp
scas
xor
mov
inc
and
jbe
fisttps
lods
or
ljmp
std
or
adc
imul
sub
xorl
xor
nop
decb
inc
sbb
fs
lds
xor
in
mov
jg
mov
mull
cmp
cmp
cli
cld
cmp
xchg
inc
inc
test
push
mov
xor
or
jp
xchg
mov
xchg
dec
xor
and
mov
xlat
sbbl
enter
mov
sar
jmp
dec
adc
aam
jmp
flds
adc
dec
test
jg
ljmp
mov
sbb
cs
sbb
mov
lods
or
cmpsb
sti
pushf
xchg
jae
jb
xchg
loop
xorb
lea
xchg
cld
imul
mov
xchg
scas
cmp
scas
mov
rcll
and
cmpsl
xchg
fidivl
call
xor
mov
rorl
dec
pop
sub
mov
int
addr16
mov
dec
jns
adc
jno
mov
leave
int3
das
mov
movsl
sub
sbb
loope
into
cmp
aam
adc
jbe
cmp
sub
cmp
loopne
xor
sbb
adc
lcall
xchg
and
repz
in
cmp
cmp
adc
jge
inc
pop
les
xchg
ret
sub
je
push
mov
pop
sub
scas
jmp
push
sub
jno
jg
lcall
in
lods
and
enter
loop
sbb
sub
xor
dec
xchg
or
jae
jp
loop
out
adc
inc
jne
pop
inc
inc
xchg
sbbl
das
scas
push
pop
and
out
xchg
repnz
lcall
push
sbb
outsl
out
pop
sub
or
scas
pop
leave
popa
pop
fidivs
fs
xor
lods
sar
cmp
cmpl
sbb
mov
aad
sub
idivb
pop
jecxz
in
jle
popf
ds
js
fisubrs
lods
and
jmp
idiv
fwait
xor
shll
lea
dec
push
loope
cmc
ja
pushf
adc
sbb
std
call
cmp
jg
pop
out
pusha
adc
decl
clc
test
mov
aas
jmp
xor
ret
fimuls
clc
fdivrs
pop
lcall
jbe
cmp
aam
pop
jl
adc
xchg
inc
cld
incl
push
jb
cmc
adcb
bound
sarb
sbb
scas
clc
incl
push
xchg
fiaddl
mov
xor
fdivp
cmp
adc
cmp
pushl
shrb
movsl
xor
lret
sub
flds
mov
jns
scas
decl
xchg
xorb
pop
clc
jle
adc
jb
xorb
xchg
adc
movsb
fs
push
push
leave
jmp
add
lock
or
incb
push
cld
outsb
bound
test
pop
test
fistps
outsl
inc
repnz
sar
mov
jmp
pusha
sbb
jno
pushf
jp
jmp
jmp
jae
test
fsincos
pop
jbe
movl
loop
lret
mov
lcall
aaa
jmp
ss
repnz
push
aaa
test
fidivrl
add
mov
or
stc
in
or
shlb
dec
dec
loope
stc
jne
xchg
sub
jmp
xor
incl
daa
and
cs
lcall
mov
clc
insl
add
xchg
iret
enter
fsubrl
fistl
dec
jge
and
in
addr16
das
mov
cwtl
sbb
inc
jle
and
fidivs
call
inc
push
xor
push
pop
jbe
clc
in
adc
sub
jg
or
lahf
imulb
mov
mov
pop
cmp
xor
fdivl
scas
cmp
out
xchg
movsb
leave
jl
bound
shr
cltd
add
aam
decl
push
xchg
stos
jecxz
mov
inc
inc
dec
das
ss
xchg
sub
pop
xchg
jecxz
jp
adc
dec
mov
jae
cmp
sbb
adc
aad
in
repnz
push
daa
lods
in
ficoml
imul
leave
sbb
in
xor
add
xchg
sbb
movsl
into
pushf
aas
lods
test
decl
jmp
into
xchg
dec
lea
cmp
aad
or
xor
push
mov
jns
dec
cmpsb
mov
call
les
outsb
adc
arpl
xlat
adc
rol
mov
mov
or
dec
dec
repz
aam
mov
cmpl
jle
hlt
pop
aad
cmpb
leave
mov
jg
cmp
ja
cmp
dec
inc
and
pop
inc
mov
test
jg
adc
push
mov
dec
or
pop
lock
lcall
fadd
loope
cwtl
subl
xor
push
test
mov
decl
bound
add
lea
dec
mov
xor
xor
ljmp
and
das
js
jns
popl
cmp
adc
jno
movsb
and
fbstp
jecxz
ja
pop
icebp
add
add
insb
daa
daa
xor
jne
sub
in
xchg
and
decl
pop
in
mov
mov
inc
pop
outsb
sbb
jle
iret
push
pop
out
clc
push
xor
orb
adc
and
loope
out
out
cli
call
dec
insl
or
clc
inc
or
loopne
pop
insb
lea
ljmp
loopne
fists
lcall
mov
lea
dec
inc
movsb
cmp
jmp
xchg
mov
pop
stos
or
cmp
sub
pusha
clc
cwtl
inc
loope
in
adc
jbe
popf
sbb
sti
icebp
pop
pop
enter
fcom
xchg
roll
fsubrl
dec
mov
insb
aas
sub
cs
xor
arpl
add
inc
mov
mov
jmp
jle
inc
dec
add
aaa
repnz
mov
sahf
inc
add
push
imul
lcall
lahf
ds
mov
jbe
fmuls
inc
loope
icebp
int3
xchg
lret
mov
in
xchg
int
shrb
push
lcall
call
aas
rcrl
mov
int3
ret
cltd
dec
xor
or
call
pop
subl
add
xchg
lods
mov
mov
dec
mov
pop
imul
cld
call
imul
in
adc
lcall
sub
or
ljmp
mov
cs
inc
mov
cmp
or
lea
stos
jae
call
cmp
cs
xchg
xchg
xor
addr16
outsb
cmpsl
cmp
mov
adc
pop
popa
adc
xchg
jge
cwtl
pop
cld
jmp
add
jl
lcall
sub
pushf
fucom
sub
call
push
pop
cltd
inc
sub
xchg
push
and
cld
in
jne
sbb
jge
lcall
mov
repnz
out
mov
iret
mov
movsl
ss
loope
ljmp
mov
test
adc
adc
add
jle
jle
mov
push
pushl
jecxz
into
pushw
add
xchg
jne
adcl
xor
aad
and
dec
orb
mov
jmp
and
ret
movsb
clc
cld
enter
inc
les
sub
push
xlat
push
rolb
jg
jecxz
push
mov
and
mov
jae
mov
xor
test
imull
inc
rol
sbb
xorb
rcl
int3
xor
jb
jg
out
icebp
cli
adc
pop
lcall
call
loopne
out
in
movsb
mov
out
inc
es
xor
sarl
cmp
jmp
test
mov
push
jg
stos
push
cmp
xchg
xchg
pusha
inc
mov
cld
ljmp
scas
lahf
gs
aas
cmp
dec
popf
xlat
xchg
sti
xor
xor
cmc
cmp
cmp
jge
mov
outsl
mov
cmpsb
mov
imul
jg
ds
or
clc
lcall
test
jg
jp
scas
fcoms
inc
fincstp
lds
xlat
inc
fcmovne
or
lahf
dec
mov
lahf
xchg
popf
pop
pop
clc
jg
in
cmp
mov
or
int
scas
sub
int
cmpsb
or
dec
inc
lcall
adc
les
sarl
mov
inc
enter
lods
lods
mov
inc
bound
bound
cmp
inc
ds
pop
iret
in
xlat
or
pop
test
xchg
sti
cltd
mov
push
push
mov
lods
fnsave
pop
fldt
mov
mov
aaa
jmp
aad
jp
ljmp
dec
aam
inc
mov
or
sarb
subl
fwait
sub
out
iret
cmp
jnp
push
mov
mov
ljmp
out
mov
mov
fsts
fwait
rcrb
xchg
test
jp
mov
call
mov
sbb
or
xor
aaa
xchg
sub
xchg
pushl
add
int3
xor
daa
out
loop
mov
inc
mov
xchg
mov
lcall
aam
out
dec
dec
adc
cmp
and
addr16
loopne
mov
sbb
pop
xor
xor
lcall
or
shl
loop
sbb
xchg
dec
xchg
mov
mov
xchg
xlat
or
lock
mov
daa
test
out
movsb
sub
bnd
rol
and
fdivrl
test
jae
xchg
xchg
push
adc
in
inc
pushf
adc
push
lods
je
pushl
cmpb
sbb
mov
jge
loopne
pop
mov
leave
addr16
jno
cmpsb
inc
push
dec
arpl
dec
ljmp
cmpb
and
test
fwait
cwtl
jmp
jae
mov
push
mov
xor
enter
inc
je
es
jl
pop
push
mov
faddl
mov
faddl
out
lahf
or
iret
sbbb
popf
cltd
cltd
add
and
inc
or
popf
jle
pop
cmpb
jbe
jb
rorb
ret
in
lcall
fcmovnu
mov
jbe
dec
sbb
mov
adc
push
push
or
pushl
js
inc
shll
dec
inc
mov
adc
test
fmuls
push
popa
xchg
add
and
fldl
inc
inc
into
add
sub
push
lea
stos
imul
fldt
jg
mov
sbb
popa
and
inc
sub
incl
jnp
inc
loop
repz
fnsave
cmp
push
pop
fiaddl
inc
xchg
jmp
cmp
subb
lds
scas
shll
cmpl
mov
clc
aaa
add
push
mov
push
pop
adc
pop
cwtl
movsb
sub
incl
xchg
push
push
ret
inc
movsb
lahf
jb
inc
fstl
mov
test
incl
ljmp
loope
inc
dec
jmp
dec
jecxz
outsb
xor
mov
add
ja
mov
xchg
mov
mov
lret
stc
pop
mov
sbb
dec
and
decl
call
mov
dec
fadds
xchg
call
xor
enter
addb
call
out
push
cs
add
pop
movsb
xchg
jo
or
mov
push
cld
or
jl
xchg
inc
les
incl
add
push
shll
jb
xor
sbb
jecxz
in
and
jg
sbb
arpl
adc
scas
ljmp
cwtl
or
xor
or
call
ret
fnstenv
sarl
iret
xor
xor
call
cmp
sub
or
inc
pusha
adc
mov
sub
jae
aad
and
decl
cmpsl
pop
lret
jecxz
jo
ret
insb
call
pushl
fwait
ljmp
rcll
xchg
mov
incl
inc
push
push
push
xor
imul
jp
dec
sbb
push
sbb
inc
bound
and
mov
ds
sbbl
pushl
mov
in
lret
cmp
and
and
and
fsubs
dec
mov
lods
cli
fistl
lods
xchg
add
inc
cs
not
xor
cmpsb
xchg
fcoml
dec
add
xchg
pop
pop
pushl
addl
mov
std
dec
fstps
xor
pop
jbe
icebp
jg
jb
shlb
push
jmp
in
fildl
sbb
ljmp
jnp
jmp
movsl
mov
loopne
add
fsubrl
push
incl
jne
mov
and
mov
aam
loopne
out
lcall
pushl
mov
call
roll
xchg
pop
fistps
push
inc
fwait
add
stc
loopne
xchg
test
call
cld
movsl
cmpsb
pop
lcall
inc
xor
outsl
icebp
push
inc
xchg
adc
jnp
or
mov
mov
mov
in
cmp
call
jmp
inc
and
sub
cmc
out
jecxz
rclb
repz
dec
and
ljmp
scas
xor
fidivrs
mov
and
fnsave
cwtl
jecxz
out
xor
inc
adc
jp
jb
lahf
cltd
scas
fidivs
loop
jmp
dec
sub
nop
std
mov
mov
push
out
fmuls
loope
pop
mov
xor
sti
hlt
xlat
xor
mov
incl
push
mov
and
push
xchg
mov
cltd
pop
xchg
push
ret
std
lock
clc
fcomip
jg
fsubs
mov
mov
adc
ljmp
adc
xchg
jmp
jle
fs
sbb
lods
dec
rcll
ljmp
cmp
jb
ljmp
stos
xlat
inc
mov
es
iret
jbe
lea
cli
nop
or
jmp
test
fsubl
and
jg
ds
mov
push
pop
int
add
xchg
or
pushl
pusha
mov
jbe
insb
mov
push
push
inc
inc
add
mov
xchg
mov
cli
fs
ljmp
inc
sbb
sbb
daa
and
lcall
pmaddwd
xor
jno
push
mov
push
jne
sbb
inc
hlt
pusha
enter
and
incl
xor
pop
imul
mov
ret
jmp
or
test
fnstenv
adc
jmp
jno
mov
add
and
lret
sub
adc
stos
and
mov
pop
inc
mov
cmp
or
scas
mov
push
js
movsl
xor
or
lcall
mov
mov
cmp
xor
push
hlt
mov
orl
xchg
xchg
call
mov
into
sub
cmp
aas
add
inc
ret
scas
scas
cld
in
cmp
xchg
dec
push
daa
ljmp
loop
pop
stc
inc
and
pop
cs
xlat
and
mov
cld
in
mov
sub
ljmp
pushf
xchg
push
mov
jbe
cmpsl
movsb
adc
test
call
push
cld
mov
sarb
push
ljmp
xchg
jecxz
int3
sbb
decl
jmp
testl
cli
cmp
lcall
mov
jge
cli
int
subb
mov
push
push
push
xor
mulb
adc
add
rcl
inc
pusha
jg
jg
insb
stc
shll
sub
and
rolb
fwait
scas
pop
addr16
incl
popa
or
mov
rorb
sbb
gs
mov
je
sub
repnz
movsl
inc
fsts
nop
pushl
mov
pop
jp
cmc
cmp
je
mov
xchg
jo
xor
int3
adc
lcall
fstl
test
roll
mov
sbbl
lcall
or
int
outsl
lcall
call
or
add
inc
clc
aad
push
lcall
decl
xchg
ret
inc
mov
push
sub
imul
sbb
adc
inc
rclb
das
shrb
xchg
or
fldl
icebp
adc
dec
aaa
xchg
adc
mov
mov
pop
mov
out
ljmp
nop
add
lock
jno
dec
negl
pop
test
or
jmp
shrl
pop
cmp
lret
popf
mov
popa
add
ret
inc
mov
sbb
fcmovb
mov
jmp
dec
or
mov
andb
dec
cmp
and
decl
xchg
cmpsb
pop
sub
insl
int
movsb
ja
adc
jo
mov
in
jg
jl
sub
xlat
clc
aaa
int
loope
push
sub
mov
mov
icebp
lods
xor
dec
xchg
inc
mov
ret
cld
mov
mov
loopne
scas
mov
jg
jge
pushf
aad
mov
cltd
rcrb
test
int3
outsl
push
stos
mov
sbb
or
fldenv
lahf
call
mov
dec
inc
incl
xchg
lea
xchg
mov
iret
or
jns
shll
pop
inc
mov
jnp
sti
jmp
ds
and
data16
mov
push
ret
in
mov
shl
adc
jg
cltd
out
xchg
mov
sub
jecxz
and
out
mov
push
in
inc
test
scas
mov
cltd
push
sbb
sbb
movsl
jl
scas
loop
push
std
decl
rolb
xor
cmpsl
jecxz
lea
scas
decl
test
xchg
or
and
cs
mov
incl
js
repnz
xchg
add
aas
jnp
sti
aad
add
cmp
aad
lock
outsb
icebp
shlb
aaa
cltd
testb
int3
xchg
mov
push
cltd
xor
jmp
ljmp
push
scas
mov
orb
bound
lods
lahf
mov
popa
mov
lcall
xchg
jge
je
adc
cwtl
pop
or
mov
in
arpl
leave
pop
mov
cmc
and
adc
lcall
add
jbe
mov
add
inc
dec
mov
mov
lcall
xchg
xchg
cltd
sub
inc
repz
inc
addb
ljmp
or
sub
sub
push
push
and
and
fiaddl
loopne
adc
cmp
insb
jns
movsl
pop
jnp
testb
scas
mov
lock
xchg
inc
xor
pop
sbb
out
test
call
outsl
xchg
mov
out
dec
test
mov
out
sti
sub
pop
jge
sbb
cwtl
and
and
ljmp
xchg
mov
cmp
xchg
sbb
enter
push
loopne
push
inc
decl
ret
sbb
mov
mov
mov
mov
sub
and
call
pushl
sti
xchg
jno
cltd
rcrl
in
inc
loope
fidivrs
adc
jmp
jp
fsubs
cs
dec
add
in
mov
hlt
repnz
mull
incl
popf
xor
imulb
push
sbb
jne
cmp
es
push
mov
mov
add
mov
push
fstl
das
cmp
mov
popf
fnstsw
popf
lahf
cmp
insl
ss
sub
xchg
mov
mov
insb
popa
pop
or
cmp
mov
in
add
popf
fsts
jle
sahf
push
inc
cmp
je
push
int3
sub
mov
ljmp
test
jmp
mov
mov
jo
into
mov
mov
cli
cs
out
jns
xchg
or
add
jmp
xor
xor
rcrl
xlat
or
cmp
rclb
lcall
bound
dec
xlat
addb
adc
jae
ds
mov
in
outsl
pusha
test
cmp
ljmp
ret
lcall
and
ficoms
mov
mov
orl
or
test
dec
loope
decl
sbb
jno
add
pop
sub
pushl
mov
or
ret
mov
sbb
mov
mov
mov
pushf
mov
add
test
jle
ret
movsl
insl
mov
das
ss
jg
sbb
xchg
mov
scas
mov
mov
movsw
jle
test
pop
xchg
fbld
jp
imul
add
fildl
fsub
fidivs
lcall
adc
pop
lock
pop
decl
cwtl
push
les
mov
sub
xlat
popf
scas
aaa
mov
nop
in
mov
push
jo
inc
cwtl
sbb
rcrl
fcomip
notb
xchg
ja
adc
cmp
out
mov
pop
cwtl
xchg
inc
sbb
stc
push
aam
mov
dec
shrb
mov
jmp
jbe
aaa
push
shll
stos
loopne
xchg
or
mov
mov
adcl
incl
add
shll
gs
shrb
push
jnp
cli
pushl
mov
jl
dec
jae
push
inc
jp
dec
add
cmp
xchg
cmp
or
jmp
mov
mov
xor
hlt
cs
ds
lret
ljmp
pop
shll
insb
jb
mov
pop
inc
jo
mov
hlt
fsubrs
call
jle
stc
aaa
lock
cs
nop
insl
sub
inc
mov
cmp
aas
sub
push
jmp
iret
out
cmpsl
popf
pop
cmp
insb
adc
push
repz
aam
push
popa
push
or
incl
into
loopne
push
xchg
xchg
and
loopne
mov
lds
fcoml
and
ljmp
sub
push
lret
mov
decl
sub
test
lods
push
jp
ljmp
stos
testl
pop
jne
nop
inc
adc
pop
xor
in
icebp
lahf
jnp
call
stc
mov
rol
inc
loopne
fcmove
jge
hlt
mov
and
push
lret
incl
and
push
rorb
rol
add
hlt
push
dec
cmp
lcall
mov
cwtl
test
push
cmp
insb
xor
pushl
pop
dec
mov
mov
ret
pop
cmpsb
dec
pushf
stc
pushl
aaa
mov
int
out
lods
xlat
out
sbb
les
stos
mov
testb
pop
icebp
sub
call
dec
mov
test
cmp
data16
dec
mov
inc
push
jl
popa
mov
pop
ljmp
call
cld
out
aam
sub
jl
movsl
push
lock
or
lods
aas
fwait
mov
stos
mov
jg
jmp
cmpsl
cmp
daa
loop
sub
out
int
sub
add
push
fcomip
decl
sbb
add
fwait
stos
cs
bound
ds
and
out
mov
cmp
mov
or
pop
dec
insb
incb
mov
or
cmp
imul
and
push
xchg
stos
jle
fldenv
aad
gs
xchg
dec
fadd
dec
inc
ja
test
mov
push
mov
imul
push
out
xor
in
std
adc
mov
jle
jbe
frstor
sbb
lcall
push
lods
clc
push
sub
into
pop
cs
push
sar
push
push
mov
fiadds
andb
dec
outsb
lock
lods
aad
lds
xor
dec
or
pop
inc
mov
mov
xchg
xchg
pop
mov
in
rcrb
out
cli
call
out
add
jne
js
xlat
and
xchg
mov
fcompl
ljmp
push
cmp
xor
sbb
lcall
daa
enter
jns
icebp
divl
scas
pushl
or
and
out
cld
or
cmpsl
xchg
sahf
jbe,pt
jae
pop
dec
mov
mov
cmc
in
inc
idivl
xlat
push
pop
lret
sarb
push
data16
pusha
icebp
mov
mov
hlt
lcall
or
add
lret
ja
outsb
nop
movb
insl
push
pop
repnz
out
ljmp
gs
pop
jl
mov
jo
dec
cmc
das
sbb
ss
lds
je
adc
testl
outsb
ljmp
pop
and
cmp
dec
mov
lcall
cmc
shll
jge
cmp
inc
outsl
je
enter
scas
fstps
lods
push
stc
idiv
pushl
stos
push
inc
insl
jp
mov
iret
inc
or
rcll
xchg
push
xchg
adc
sahf
cmc
ret
decl
cltd
fwait
jle
lods
out
inc
fmuls
push
pop
lods
xlat
data16
mov
jo
or
incl
add
mov
enter
test
imul
pop
pop
or
push
insb
cwtl
jns
xchg
jecxz
int
gs
jmp
imul
mov
movsb
call
mov
sbbl
cli
inc
xlat
or
jg
lcall
hlt
aad
jle
push
cld
jbe
sbb
popf
or
mov
mov
incb
sbb
jnp
nop
jg
stos
iret
adc
lahf
push
fidivl
lret
roll
pop
mov
in
xorl
std
and
stos
adc
xchg
fisubrl
insb
sbb
add
in
scas
sbb
test
negb
inc
inc
mov
test
mov
jmp
mov
jns
pop
jecxz
dec
mov
lret
popf
je
aaa
xchg
jmp
hlt
nop
daa
mov
ljmp
or
repnz
mov
adc
add
int3
xchg
mov
xlat
jle
jae
mov
xchg
cmc
pop
dec
icebp
push
adc
sbb
popa
sub
mov
push
mov
enter
movsb
xchg
xor
lcall
div
mov
shl
test
hlt
repnz
inc
mov
inc
fidivrl
call
dec
loop
ficompl
aas
mov
xchg
je
mov
pop
loope
and
notl
lock
fisttpl
push
and
xorb
jecxz
cmp
or
cmp
push
pop
ret
inc
add
clc
xchg
pop
dec
and
cmpsb
in
test
cmp
movsl
fcmovnbe
out
fsts
xchg
jno
int3
int
std
cmp
shl
cli
mov
decl
sbb
js
add
adc
sub
test
mov
sub
pop
fisttpll
jne
lcall
in
fidivs
xor
or
bound
enter
mov
hlt
decl
ljmp
xor
mov
cmp
adc
mov
rcl
mov
call
movsb
nop
cmp
jle
xor
inc
adc
mov
mov
repnz
icebp
or
sub
clc
loopne
or
sub
roll
aaa
mov
jl
movsl
dec
loop
repz
sub
arpl
mov
mov
fiadds
incl
lret
pop
cld
xor
sub
dec
mov
jecxz
addl
jmp
cmp
push
adc
jecxz
call
ret
enter
fdivrs
call
ret
iret
lret
pop
mov
subl
cmp
xchg
jmp
mov
lret
addr16
pushl
and
pop
aam
push
pop
mov
and
fistps
push
std
add
dec
pushl
and
cmp
dec
cwtl
sahf
stos
fs
mov
mov
rorb
xchg
bound
outsl
fdivrs
push
jg
cwtl
mov
gs
jne
jbe
rcl
adc
incl
aad
mov
xor
xchg
fbstp
inc
incb
js
out
icebp
mov
xchg
xchg
mov
sbb
in
xchg
fdivs
jg
lcall
push
and
ret
sbb
lret
inc
ret
mov
incl
or
std
pop
pop
push
insb
lcall
je
dec
pop
sarb
sub
and
into
test
fsub
sbb
add
jmp
arpl
jo
into
std
xchg
jmp
scas
jbe
lods
xchg
gs
sarl
std
push
xchg
lock
mov
xchg
jmp
pop
imul
aas
mov
jecxz
jg
loop
xchg
xor
ficoms
cmp
or
mov
pop
ljmp
fildl
mov
adc
lods
pop
mov
fdivr
mov
rclb
push
int
mov
in
std
insb
notb
mov
orl
dec
cmpsb
jns
mov
sbb
icebp
and
or
stos
and
or
ljmp
and
das
mov
jmp
cmp
xchg
lcall
ret
nop
sbbb
inc
orb
iret
pushf
pop
push
pop
shrb
mov
call
inc
sbbb
orl
cltd
lcall
push
pop
jae
jp
dec
rorl
ljmp
dec
push
je
mov
out
mov
jo
cmpsb
movsb
rolb
jg
stos
add
icebp
add
cmpsb
cwtl
lcall
imul
mov
inc
push
hlt
jmp
jmp
stc
pop
fadds
and
jg
pop
cmp
sarb
push
cmp
fldcw
gs
xor
roll
sub
lea
imul
icebp
frstor
push
sub
insl
jmp
dec
in
and
out
out
xchg
inc
outsb
jle
inc
sub
testb
movsl
inc
and
mov
mov
lea
jbe
cmp
ljmp
lahf
loop
push
adc
sub
scas
in
mov
inc
jmp
jns
jg
mov
fsubs
cmp
sbb
mov
decl
add
cs
xchg
rcrb
imul
and
jne
sti
std
push
and
sbb
mov
inc
xchg
mov
jecxz
bound
divl
sub
mov
xchg
jg
cmp
or
imul
jge
dec
fcompl
push
add
cmpsl
xchg
ss
fst
call
xchg
dec
mov
xor
es
pushl
mov
lret
mov
movsl
sahf
sahf
xchg
outsl
cld
idiv
insl
or
sarb
and
adc
push
incb
xor
pop
pop
sahf
cwtl
iret
les
add
adc
push
mov
inc
jmp
jb
and
lret
shlb
or
adcb
xchg
pop
fmull
or
and
jbe
sbb
cmc
inc
sahf
dec
leave
jne
adc
rcrl
mov
mov
test
push
lret
lea
or
insl
hlt
popa
pop
push
push
leave
outsb
xchg
movsl
nop
and
cmp
ljmp
mov
orb
scas
push
pop
test
adc
stos
mov
add
jecxz
and
clc
inc
imul
push
fisubrl
stos
and
inc
mov
mov
pop
ds
jmp
pop
iret
mov
mov
bound
jb
lds
add
je
stc
outsl
out
jbe
jecxz
sbb
or
in
jns
cmc
loopne
inc
std
iret
addr16
loop
cmp
sar
sbb
cld
data16
inc
imul
and
bound
mov
decl
push
rcrb
pop
adc
cs
pop
fidivs
xchg
es
ljmp
sar
gs
jbe
out
dec
cmpsl
imul
into
dec
shrl
call
pop
push
roll
mov
or
adc
and
sti
fidivrs
jmp
dec
mov
jae
inc
negl
rolb
inc
inc
mov
pop
push
ljmp
pop
pop
rorb
push
pop
loop
pop
aas
aam
aaa
inc
mov
sub
iret
jg
lcall
insl
fwait
and
adc
das
mov
cmp
xor
inc
daa
mov
lcall
stos
fwait
jbe
adc
sub
sahf
int3
mov
cmp
rcll
inc
stc
cmp
test
out
jmp
push
rcll
imul
or
lods
or
repnz
mov
or
mov
mov
aaa
mov
repz
outsl
jg
dec
xchg
jp
mov
push
dec
mov
dec
movsl
dec
andb
pusha
sub
incl
rcrb
mov
sub
test
test
test
cmp
outsb
push
adcl
lcall
out
sbb
lea
or
lcall
push
test
xor
pop
pop
mov
and
mov
push
hlt
incb
test
daa
mov
mov
add
cli
rol
sbb
cmpl
sub
jb
and
imul
inc
pop
data16
fwait
adc
es
mov
lcall
stos
dec
repnz
sbb
xchg
xchg
std
cwtl
push
mov
in
lds
pop
mov
pop
adc
cmp
mov
and
pop
pop
popf
inc
adc
movb
sub
nop
mov
pushl
mov
pop
outsb
je
lock
sahf
adc
lock
dec
in
sbb
xchg
sub
pop
dec
lcall
rclb
dec
xor
fidivs
and
std
into
aam
hlt
dec
jg
ljmp
inc
xchg
cmp
jl
or
ret
sbb
lods
or
incl
insl
xor
inc
mov
jl
mov
pop
push
dec
sbb
cmp
mov
add
jmp
adc
or
sub
pop
mov
lea
lret
push
xchg
dec
add
ljmp
jecxz
aaa
mov
imulb
stos
and
push
fwait
mov
cs
sbb
out
cli
xchg
das
add
insb
xlat
sbb
mov
out
adc
loope
inc
lahf
imul
lcall
add
pop
sarl
subl
sbb
xchg
lea
mov
pusha
and
add
aaa
orb
add
xchg
mov
push
les
cs
and
dec
jmp
or
ljmp
les
popl
push
xor
mov
lret
addb
cmovb
or
cmp
add
and
pop
jle
es
jo
imul
or
cmpl
enter
imul
inc
inc
add
fld
xchg
pop
add
test
inc
xlat
sub
data16
scas
dec
sub
mov
push
dec
jo
daa
sbb
pop
cmp
std
push
dec
gs
sti
aas
add
push
addr16
push
jo
push
insl
sti
adc
lcall
shld
push
or
cmp
cmp
mov
xchg
pusha
jnp
jecxz
dec
jne
js
arpl
inc
cmp
sbb
pop
inc
sbb
push
add
push
popa
and
mov
fsubrp
push
sbb
jns
push
imul
push
inc
nop
sbb
or
push
es
ljmp
dec
jecxz
sbb
xor
insl
xchg
adc
call
add
jo
or
sub
lmsw
inc
leave
sbbl
sub
clc
or
mov
cmp
insb
int
imul
cwtl
sub
inc
or
mov
sub
pop
out
push
outsb
flds
sub
insl
call
mov
push
orl
inc
inc
or
insb
or
cs
bound
mov
insl
xchg
push
pop
ds
and
insb
jne
addl
xchg
fistl
mulb
loop
lock
push
inc
sbb
jo
inc
jbe
test
push
fildl
push
pop
add
pop
push
mov
mov
ja
andl
subl
and
int3
pop
jb
sbb
and
push
jns
cmpl
inc
jae
adc
sbb
push
push
hlt
or
fwait
sbb
jecxz
mov
dec
cmp
lods
push
or
pop
mov
xor
insb
rcll
push
jo
mov
pop
or
addr16
push
pop
cmp
mov
sbb
sub
dec
pop
dec
adc
popa
and
stos
jle
xor
arpl
fistpll
cmp
test
or
dec
or
loopne
push
rclb
inc
idivb
jne
imul
outsl
popw
push
rolb
lret
mov
mov
inc
xchg
popa
and
shll
js
mov
dec
jae
pushf
inc
or
insb
jnp
aas
pop
dec
inc
dec
or
inc
pusha
inc
in
mov
mov
mov
or
fs
push
in
jecxz
xchg
lods
xor
jl
stos
je
ja
mov
inc
inc
jg
pop
push
inc
inc
dec
movsb
sbb
mov
xchg
pusha
and
and
or
fidivs
popa
es
jp
sub
and
push
push
jg
mov
sbb
push
jae
sbbl
cmp
aam
pop
sbb
orb
adc
test
mov
dec
mov
add
push
or
jmp
pop
fisttpl
imul
stos
aad
jns
or
xchg
inc
je
push
inc
inc
dec
dec
mov
out
sti
sub
push
inc
sbb
ret
enter
sub
jno
or
sbb
sub
in
ret
loope
push
es
mov
leave
push
subb
pop
and
pop
in
push
stos
loope
add
dec
cltd
mov
cmp
setae
jbe
add
out
ret
pop
aaa
cmp
adc
inc
pusha
mov
lock
push
stc
pushf
push
jne
inc
pusha
adc
adc
sub
fbld
sub
dec
xor
popa
xlat
xchg
jg
inc
add
sub
cmp
sbb
xchg
dec
fiaddl
outsl
pushf
push
int
jmp
add
inc
scas
push
repnz
outsb
push
outsl
add
adc
fadds
and
sbb
cmp
jno
incb
inc
sub
sarb
dec
gs
jne
xchg
jmp
xchg
pop
xor
adc
xchg
arpl
std
pusha
adc
cs
pop
sub
cs
adc
jge
mov
inc
mov
sbb
inc
sbb
pop
jmp
adc
sbb
sbb
mov
sbbl
pop
mov
jnp
popa
sbb
roll
xchg
push
shlb
xchg
xorb
subb
jne
mov
dec
xchg
je
js
out
loopne
jae
outsl
jbe
dec
push
popa
mov
nop
mov
inc
and
das
sbb
cmp
push
arpl
pop
sbb
sbb
mov
mov
icebp
icebp
mov
pop
mov
js
insb
aad
fistpl
out
jge
pop
inc
subb
nop
lcall
lahf
cmpsb
xor
aad
xchg
adc
jne
insl
sub
dec
push
adc
js
inc
mov
push
and
adc
mov
int3
inc
xchg
out
push
mov
call
out
filds
xor
push
pop
push
not
xor
and
addr16
mov
adc
pop
or
push
push
adc
adc
mov
idivb
jns
je
insl
dec
outsb
dec
js
loopne
push
scas
mov
cmp
jnp
sar
pop
lods
imul
mov
xchg
imul
add
or
imul
push
xchg
mov
inc
push
add
add
loopne
sbb
dec
shl
das
push
js
adc
or
pop
adc
xor
and
pop
popa
or
dec
movsb
bound
or
push
inc
inc
out
inc
push
incl
add
push
jb
inc
jae
mov
mov
or
shll
pop
and
iret
fcmovnbe
mov
jo
sbb
scas
push
test
mov
and
xchg
test
lea
push
push
bound
icebp
and
loopne
addb
icebp
imul
add
cmpsl
repnz
pop
lea
push
lret
sbbb
add
lds
adcl
mov
cmp
das
inc
cmp
fwait
sbbl
psadbw
pop
push
inc
fildll
xchg
push
rol
pop
es
inc
mov
imul
or
sub
push
sub
mov
push
inc
jb
divb
addr16
and
jo
jmp
gs
cmp
push
pusha
xchg
dec
xor
jge
add
popa
aad
enter
call
andb
mov
or
in
and
pushf
insb
adc
sub
pop
xor
jg
xchg
ja
push
inc
inc
cmp
push
sbb
cmp
sahf
out
push
push
adc
lret
add
sub
int3
ret
lcall
adc
mov
pop
pextrw
dec
insl
fs
push
pmovmskb
fcoms
jg
xor
xchg
or
xchg
inc
and
loopne
std
cmp
sbb
dec
inc
cpuid
nop
negl
cmp
lea
aam
lds
mov
outsb
shll
mov
add
sub
dec
icebp
ljmp
push
popf
adc
pop
outsb
cmp
movw
xchg
mov
inc
lods
add
repz
mov
fcomps
or
pop
mov
lods
bts
js
shl
mov
jp
push
fs
cmp
js
cs
sbbl
pop
dec
aaa
addr16
adcb
pop
dec
add
add
arpl
adc
js
and
push
jns
adcb
fsubs
ljmp
push
inc
out
adc
add
sub
jp
xchg
std
pop
xchg
dec
push
push
push
imul
jae
mov
push
loop
iret
push
push
jl
pop
lcall
jo
push
jmp
jae
negl
js
xchg
pop
fwait
sbb
xchg
pop
adc
loope
cltd
inc
adcb
cmp
dec
lods
and
jno
mov
movsl
cwtl
ror
add
add
jp
mov
adc
sahf
cmpsb
sbb
add
and
jbe
jb
cmp
ljmp
cld
dec
ret
mov
jmp
add
mov
and
jo
add
test
cwtl
bound
lods
pop
dec
push
js
push
and
push
lahf
mov
jb,pn
popa
mov
daa
add
sub
shlb
out
inc
cs
loopne
roll
ficompl
dec
rcrb
jb
push
xlat
jo
stos
and
lahf
and
fdiv
jg
xchg
jo
ret
xchg
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
