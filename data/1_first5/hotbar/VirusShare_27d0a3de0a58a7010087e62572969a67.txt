divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
test
adc
push
adc
jecxz
add
pop
nop
adc
nop
ret
mov
std
clc
or
pop
mov
int
mov
add
and
add
add
shrb
clc
mov
jb
inc
jmp
inc
dec
push
and
cmp
jg
cs
cmpsb
dec
shrd
popa
incl
lea
jl
sub
in
bswap
mov
out
ud0
addr16
aas
jmp
repnz
in
push
pusha
ljmp
lret
loopne
imul
imul
add
mov
mov
pushf
dec
cs
mov
daa
fnop
push
loopne
add
or
or
push
daa
lcall
adc
adc
add
and
add
jnp
imul
adc
mov
xor
xor
movb
inc
xor
fistl
subb
or
loop
or
and
cwtl
inc
mov
pop
add
cs
lock
add
les
lods
add
or
and
jb
push
movsl
leave
xor
inc
fs
filds
inc
cs
mov
jbe
in
dec
or
rclb
mov
push
xlat
out
pushf
fisubrl
icebp
add
out
cltd
test
push
dec
sbbb
add
add
xlat
jecxz
sbb
sti
incb
adc
inc
push
rol
movb
dec
xor
or
sub
lea
push
add
cmpsb
or
and
adc
lods
insb
sbb
loop
jne
sahf
enter
add
sub
daa
sub
ss
imul
jbe
andl
push
xchg
fbld
ror
dec
fucomi
push
xor
gs
push
sti
pop
pop
faddp
ja
jne
jmp
mov
rcrb
xor
pushf
xor
in
inc
xchg
into
int3
loope
pop
sub
push
icebp
sbb
fstl
insl
adc
cmpsl
fnsave
dec
push
ja
inc
add
xor
and
movsb
or
mov
pop
xchg
clc
add
cmp
cmp
hlt
in
adc
add
stos
mov
push
mov
sbb
push
movzbl
sarl
and
nop
fadds
mov
insb
daa
ret
mov
movsl
mov
mov
cmp
jbe
mov
add
pop
and
push
sub
pop
fdivl
inc
nop
inc
cmp
jp
roll
or
lahf
or
adcb
loopne
cmp
mov
mov
adc
cltd
loopne
call
sbbb
push
add
outsb
xchg
test
sub
clc
pushf
and
push
sub
clc
aad
or
repz
mov
xor
push
inc
imul
add
adc
push
es
lods
mov
mov
pop
sub
arpl
sbb
aam
subb
nop
popa
inc
or
and
add
push
rcl
mov
adc
mov
and
out
dec
adc
loopne
shrb
mov
movsl
es
xor
jl
hlt
cld
add
lahf
inc
mov
imul
add
mov
or
enter
xchg
mov
push
stc
dec
jnp
or
mov
leave
push
sbb
fwait
les
mov
cmp
pop
add
ficomps
or
push
add
rcll
xchg
ret
push
outsl
push
sahf
push
inc
fiaddl
jp
dec
pop
push
ret
shlb
or
enter
sbb
pop
cltd
test
inc
mov
and
sub
and
sbb
push
sub
adc
or
lret
addb
mov
aam
je
inc
test
movb
xchg
sbb
add
push
mov
cmp
mov
sub
add
mov
mov
mov
or
iret
mov
andb
mov
mov
test
mov
mov
in
add
and
loopne
xor
pusha
shrb
mov
xor
mov
xlat
hlt
sahf
adcl
jne
inc
repnz
mulb
lcall
lcall
and
dec
xor
in
push
int3
out
or
movsb
sbb
mov
xchg
popf
xlat
jno
outsb
fcoml
and
jnp
mov
push
enter
pop
fiaddl
dec
divl
push
inc
push
push
insb
fcoml
xor
jo
sub
fildl
adc
lahf
push
mov
movsl
xchg
mov
push
mov
mov
xchg
xor
dec
pop
cmp
cmp
ss
or
mov
sbb
inc
rol
lcall
or
stc
jp
je
cltd
mov
push
aam
xor
push
fst
jne
ret
xlat
pop
jp
push
xor
aad
or
inc
or
adc
rclb
lahf
mov
sbb
test
ja
rclb
add
mov
and
call
xor
push
jnp
int
pop
inc
push
xor
addr16
xor
jle
gs
call
sub
cmc
mov
mov
dec
add
in
add
adc
pop
xchg
movsl
dec
insb
and
test
fsubrl
jecxz
scas
lcall
rcll
xor
sub
adc
test
and
or
mov
sub
cmp
test
or
call
test
dec
xchg
lea
xor
mov
or
pop
or
scas
in
nop
mov
add
dec
jecxz
sbb
jmp
test
sarb
inc
lock
add
mov
pop
xchg
aad
add
dec
adc
pusha
orb
shrb
mov
add
lods
or
ja
pop
mov
or
loopne
xchg
xchg
sti
push
sbb
dec
call
out
pop
into
pop
in
dec
push
inc
adc
or
mov
loopne
push
rcl
or
sub
in
and
fs
sbb
sbb
dec
shrl
cs
push
or
in
shl
or
adc
xchg
jp
cmpsb
xlat
push
inc
push
xor
jle
popa
adc
clc
sbb
cwtl
jb
shl
or
mov
add
ret
sub
or
jno
push
xchg
mov
push
std
push
pop
or
mov
pusha
pop
dec
add
addb
dec
sub
loop
je
cmp
call
ret
aas
cmpsl
call
or
shll
pop
lds
and
push
pop
lahf
sbb
stos
push
mov
movsl
gs
push
es
mov
fisubl
ljmp
bound
push
adcl
dec
pop
jg
push
hlt
push
mov
sub
out
and
pop
loop
jo
nop
adc
xor
popa
mov
lahf
ss
lret
lret
mov
push
and
and
out
dec
subb
test
and
jne
ds
sbb
push
cmp
aaa
sbb
sbb
mov
dec
xchg
xlat
fdivr
lea
jp
jb
rclb
xchg
mov
mov
push
push
dec
fdiv
lcall
fcmovb
sbb
pop
pusha
push
sub
dec
push
int3
call
xor
jns
cmp
xor
cmp
lods
xchg
rcll
aaa
subb
andb
adcl
stc
add
and
and
jo
sub
dec
fcompl
jb
call
sahf
les
aas
lds
xchg
inc
je
cmp
cmp
xchg
test
in
xchg
sbb
push
lea
adc
mov
pop
ficoml
push
cmp
sub
jp
lds
dec
pop
shlb
and
mov
mov
push
add
fisubs
rolb
fildl
or
cmp
faddl
ljmp
divb
insb
hlt
ret
xlat
call
lock
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
mov
xor
sbb
mov
jecxz
inc
pop
in
pop
mov
push
movsl
in
dec
ds
fstps
call
or
mov
int3
fldl
fucomp
or
mov
adc
lret
stos
mov
and
cmp
loope
push
adc
pop
mov
pop
leave
mov
mov
dec
repnz
enter
das
mov
mov
rep
inc
pop
jo
xor
div
movsb
push
and
or
js
arpl
je
ss
rcll
jp
fstl
adc
or
mov
es
add
gs
fbstp
add
cmpsl
js
pop
in
int3
mov
pop
jns
adc
inc
push
hlt
ret
sbb
xor
or
dec
jmp
inc
xor
push
xchg
roll
ljmp
outsl
push
jb
je
ljmp
ljmp
sbb
je
popa
andl
pop
xchg
fiaddl
das
push
sbb
in
pop
loopne
adc
mov
mov
popa
add
pop
insb
or
xchg
inc
leave
mov
cmp
repnz
in
push
adc
aad
imul
in
data16
sbb
ljmp
lcall
add
xor
lret
push
fs
mov
pop
fnsave
sbb
and
aas
js
mov
repz
mov
xor
sub
adc
lods
mov
in
or
add
push
in
movsl
and
and
scas
dec
adc
scas
add
xchg
push
fsubs
sbb
or
jae
and
cmp
sub
pop
jmp
jecxz
roll
pop
dec
pushl
jo
test
xlat
and
dec
in
in
dec
repz
push
push
add
and
and
or
jmp
jo
enter
ficomps
jle
dec
sub
push
stc
testl
xchg
loope
jo
shll
push
or
nop
dec
in
inc
sub
sti
mov
ss
in
enter
mov
pop
jno
cmp
mov
mov
cmp
adc
and
ret
leave
sub
mov
xor
in
inc
jl
xchg
lods
inc
shll
in
mov
loopne
jmp
mov
add
adc
mov
lock
inc
sub
mov
sbb
mov
in
mov
mov
je
in
in
in
enter
mov
adc
jbe
ret
mov
lcall
mov
inc
enter
adc
out
xor
ret
es
inc
fildl
cmpsl
adc
mov
fists
pop
test
sbb
jne
mov
out
inc
sbb
jne
out
inc
xor
cmp
mov
movb
push
jbe
rol
inc
xor
or
mov
dec
mov
fmul
adc
xchg
popa
xchg
cmpsb
adc
jmp
or
pop
je
data16
fcomp
inc
test
inc
popf
sbb
enter
dec
jge
cwtl
adc
cmp
mov
mov
xchg
movswl
jb
mov
fcompl
adc
daa
mov
lods
lods
dec
xlat
push
push
arpl
jecxz
repz
pop
cmp
mov
push
cs
dec
lea
jb
add
add
cwtl
add
xchg
xchg
js
in
dec
adc
or
add
or
and
cmp
lds
push
add
jne
jl
xor
fsubrl
call
add
lods
adc
movl
sub
jmp
in
test
adc
sahf
in
jne
jmp
add
xchg
sbb
lods
popa
jecxz
scas
jns
dec
or
adc
pushf
sbb
fisubrs
ss
xor
cmp
outsb
push
add
add
out
enter
addb
aaa
dec
mov
and
cld
mov
icebp
inc
xchg
xorl
pushf
hlt
inc
addr16
into
mov
mov
sbbb
mov
sub
ja
sbb
in
inc
xchg
pop
add
pop
popa
inc
dec
pop
and
je
dec
fstpl
or
je
mov
das
xor
leave
ret
cmp
adc
sub
call
adc
or
incb
jmp
sbb
sbb
xor
bound
jmp
mov
xchg
call
xor
movsb
lods
jle
sbb
int3
mov
xor
lcall
jp
ja
popf
rorl
adc
add
add
or
push
mov
push
mov
add
mov
test
lea
xor
lods
mov
push
inc
jne
xor
push
or
push
movsl
mov
outsb
orb
sahf
sbb
mov
mov
add
mov
mov
loopne
cmp
push
loopne
jmp
push
pop
ja
push
mov
mov
jge
xchg
push
inc
rolb
jbe
add
test
imul
xor
dec
inc
inc
xor
push
std
dec
fcmovnbe
or
or
shr
incl
in
out
je
bound
jnp
jo
mov
mov
std
std
and
enter
add
lea
fwait
inc
jecxz
pushf
cli
adc
inc
shrb
inc
rorl
jnp
call
sub
in
lea
loopne
or
push
push
movsb
xor
inc
adc
adc
xchg
xchg
cmovs
pop
push
dec
lret
fmull
pop
mov
lock
adc
push
ds
xor
test
xlat
outsl
mov
jne
jl
add
jne
dec
testl
sub
add
cmp
mov
and
je
jbe
and
push
mov
push
enter
cmp
jmp
mov
test
cmp
sub
add
pop
add
push
add
fmulp
mov
add
add
orb
jmp
les
xor
inc
jge
lods
mov
sbb
add
int3
add
push
push
lods
or
sbb
test
lea
stos
inc
push
push
add
or
in
idivl
cmp
pop
pop
cmp
shll
rclb
sbb
mov
xor
mov
mov
rcrl
int
lods
sarl
call
push
ret
mov
xlat
xchg
in
jbe
ret
vpmovzxbd
push
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
imul
or
jle
or
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
mov
jl
jb
cmp
xchg
ret
sarb
jmp
add
pop
sub
push
cmpsl
pusha
lods
sbb
rorb
rorb
test
dec
nop
xorb
mov
rolw
push
sbb
lock
dec
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
rcr
movsb
cmp
or
andb
push
or
or
mov
add
xor
adc
push
or
mov
push
fdivl
mov
adcl
or
add
addb
ficoms
push
add
call
out
dec
in
pop
aaa
pop
loope
xchg
mov
or
sbb
push
in
call
mov
clc
mov
cmp
ss
mov
test
jo
cmp
mov
adc
dec
mov
adc
mov
mov
adc
push
mov
lea
pop
jbe
mov
xchg
stos
mov
aaa
push
fucomip
cmp
je
inc
mov
mov
push
jbe
movsb
xchg
jne
cld
mov
subb
clc
push
and
shrl
std
pop
jbe
lea
or
adc
jo
inc
push
in
cmpsb
xor
xchg
out
inc
or
pushf
cli
adc
sbb
xlat
add
pushf
loop
outsb
es
test
inc
jmp
or
cld
imul
sbb
fwait
add
xchg
test
dec
mov
arpl
ret
mov
lock
jo
andl
paddb
jnp
pusha
enter
jmp
push
mov
inc
mov
call
js
push
sbb
inc
js
cltd
adc
pop
mov
xchg
sbb
push
lds
lods
aad
cmpsb
jno
fwait
inc
adc
push
loopne
adc
add
and
lods
stos
loopne
sti
push
xchg
and
adc
test
push
testl
pop
adc
movsl
push
lea
stc
shll
and
sub
lds
mov
fs
and
lock
inc
pop
xorb
mov
xchg
aam
xor
sub
push
mov
cmpsb
aam
fwait
push
shrl
cmp
cld
icebp
jecxz
cwtl
popa
fsubrl
call
push
rcll
xor
and
mov
ret
add
ret
scas
ja
scas
mov
lds
push
push
inc
adc
sbb
xor
add
mov
lcallw
in
adc
cmp
rcl
push
enter
or
sarl
lods
test
mov
adcl
mov
jmp
sub
lock
and
xchg
mov
leave
jmp
in
mov
addps
add
idivl
push
lock
dec
push
hlt
fnstenv
mov
adc
jne
clc
and
cmp
scas
adc
push
sbb
push
or
je
mov
sbb
std
mov
and
test
mov
pop
adc
sub
xchg
ss
sbb
dec
push
push
test
and
add
out
call
or
and
and
call
imul
push
push
imul
or
sbb
fdivs
addr16
sbb
mov
sbb
sbb
sbb
jno
jne
into
cmp
dec
or
jecxz
sub
push
cmp
jne
push
scas
mov
push
pop
and
and
je
int3
cmp
xchg
dec
decb
es
jns
outsl
xorl
ret
adcl
adcl
jae
jecxz
pop
adc
sarl
jo
mov
call
rorb
dec
and
ljmp
pop
cld
push
fmull
jne
setb
push
sar
inc
mov
jmp
pop
sbb
and
andb
inc
jmp
scas
fiadds
xchg
push
dec
jl
js
negb
icebp
and
dec
nop
push
xabort
scas
dec
xor
fxtract
jmp
clc
xchg
add
pop
xorb
movsb
inc
pop
ret
mov
cmp
popa
and
xchg
add
xchg
movsl
mov
or
xchg
xchg
fimuls
xor
mov
out
xchg
jne
add
neg
mov
repnz
in
movsb
jmp
pop
sub
lret
sbb
push
popf
cmp
dec
or
dec
xor
jge
call
call
cmp
add
icebp
movsl
adc
cmpl
mov
and
pop
mov
push
stc
sub
push
xchg
arpl
mov
mov
sbb
xor
insb
sbb
je
repnz
or
mov
cmp
in
mov
pushf
or
cmp
test
fnstenv
addr16
out
inc
and
adc
inc
mov
mov
inc
mov
or
add
add
lock
push
dec
lea
or
pop
mov
orb
xor
mov
icebp
lcall
push
inc
xorb
xchg
nop
decl
or
mov
cmp
fadds
dec
jne
movzbl
push
add
xor
mov
mov
sub
test
shlb
or
add
nop
sbb
sub
es
lods
jmp
std
and
lods
and
adc
cli
sub
outsb
push
test
xor
or
and
pop
push
je
ja
xorb
inc
dec
and
xor
inc
pop
rorb
imul
aas
or
shlb
lea
icebp
out
add
imul
push
test
xchg
aam
call
gs
loop
and
adc
xor
inc
cwtl
push
call
dec
fstl
call
sbb
add
sbb
aam
jmp
test
dec
nop
je
dec
dec
lds
dec
mov
stos
inc
je
dec
mov
push
mov
daa
dec
mov
push
lds
dec
movsb
sti
or
mov
jnp
lds
enter
rorb
es
lds
push
add
aas
mov
das
or
shl
xor
add
adc
pop
inc
shrl
add
sub
add
add
cwtl
add
ret
out
add
mov
push
push
and
add
pop
sbb
hlt
mov
xor
shr
xor
push
addb
rcrl
imul
je
loopne
add
add
sub
call
addl
jecxz
shll
pop
add
xchg
shll
dec
dec
addl
rorl
daa
and
mov
push
lahf
inc
cmp
rclb
cmp
push
mov
movsb
inc
pop
popa
pop
pop
inc
xchg
pusha
inc
nop
dec
xor
sub
icebp
sbb
andb
or
push
sahf
and
jp
jle
into
ds
mov
callw
pop
call
xor
jmp
cmp
fwait
out
pop
movsl
dec
aam
inc
adc
cmp
es
dec
pop
js
roll
pop
int3
pop
fs
mov
sbb
jmp
andl
pop
leave
rcrl
cmp
mov
movzbl
mov
sti
bound
psubsb
add
call
jno
scas
pop
jmp
into
arpl
cld
and
data16
xchg
pushl
cmp
jmp
push
shrb
sbb
or
xlat
xchg
adc
xchg
mov
xor
jae
jle
loopne
pop
push
into
cmp
insl
push
xor
fimull
jmp
sub
hlt
add
lahf
inc
jmp
movhps
and
jo
sbb
push
test
mov
arpl
xchg
sbb
out
jne
stos
repnz
subl
leave
test
sahf
xchg
lock
dec
mov
and
or
pop
out
cmp
xlat
arpl
call
dec
jmp
shlb
sub
cmp
and
xchg
push
push
es
fnsave
dec
lods
cmpsb
add
movsl
push
and
cld
aad
es
into
in
testl
lcall
sbb
jae
push
es
mov
pop
adc
movb
loop
or
dec
push
cwtl
clc
mov
and
or
in
pusha
sub
loope
pop
xor
cmp
xchg
sbb
adc
js
sbb
and
int3
xor
jbe
push
inc
nop
xor
imull
push
jae
sub
enter
sub
pusha
xchg
adc
mov
adc
cmp
jp
sub
push
xchg
mov
push
outsl
pop
aaa
pop
lea
incl
adc
lods
movsl
adc
rolb
mov
inc
orb
cmp
inc
inc
push
push
in
push
add
sarb
add
inc
loope
rolb
dec
call
dec
mov
aaa
and
les
pop
in
orl
add
inc
xor
sub
dec
inc
sub
dec
inc
ss
or
cmp
or
lret
iret
adc
call
jl
jmp
add
rorb
or
push
inc
dec
mov
stos
cwtl
out
inc
cs
pusha
je
sti
ficoms
je
mov
int3
xchg
mov
out
mov
xor
cmp
jnp
xor
sub
sbb
inc
cmp
or
out
clc
xor
sbb
jmp
out
je
out
cli
sbb
outsb
out
adc
ja
and
inc
daa
pop
nop
add
and
rcl
jns
dec
out
sbb
xchg
push
push
out
jnp
inc
mov
or
push
mov
cmp
repz
enter
add
out
sahf
test
cld
or
push
adc
and
int3
xchg
mov
add
dec
pusha
adc
fs
xor
lahf
movsb
add
and
outsl
mov
jge
sub
loop
or
xchg
xchg
xchg
lahf
insb
and
push
add
and
xor
xor
xor
mov
xchg
mov
add
sub
cs
add
lahf
ret
ficoml
test
insl
mov
add
pop
add
xor
add
add
dec
imul
adc
sbb
add
jno
je
inc
scas
in
xchg
add
mov
repnz
test
push
push
enter
gs
pop
ja
cs
inc
or
or
or
or
push
repnz
pop
cld
add
or
adc
or
pmaxub
or
or
or
pusha
in
xchg
or
inc
scas
je
push
mov
rdmsr
aad
dec
jae
adc
pop
adc
or
adc
xchg
out
adc
adc
adc
jns
adc
xchg
adc
sbb
adc
scas
in
inc
pop
pop
cs
add
sbb
sbb
push
push
repnz
sbb
mov
pop
leave
sbb
sbb
and
and
sbb
sbb
fstl
add
je
push
sbb
mov
xor
leave
repz
leave
sbb
nop
out
inc
negb
pop
jne
dec
add
incl
ret
sub
cmp
mov
in
mov
iret
cmp
xchg
add
addr16
jmp
cwtl
outsl
mov
out
xchg
push
in
push
in
imul
rcl
ficoms
sub
adc
in
in
sahf
addr16
mov
sahf
addr16
aas
mov
in
call
adcb
inc
les
and
jmp
pop
leave
ljmp
mov
nop
cmpsb
or
in
in
xchg
aad
inc
scas
in
in
cmp
mov
adcl
or
pop
cs
out
je
lock
xchg
dec
icebp
cmp
or
repnz
adc
repz
pushf
lcall
or
out
push
std
cmc
cmc
cmp
cmpsl
div
mov
cmp
negl
gs
push
xor
clc
clc
clc
or
aas
stc
stc
and
add
dec
in
repnz
fdivrp
cld
cld
negl
fmul
je
cld
push
push
nop
shlb
mov
xchg
mov
cld
pop
mov
sub
ja
shr
sbb
sub
jb
rolb
or
xor
std
adc
xorl
pop
jmp
adc
jecxz
pop
pop
add
cmp
stos
pop
inc
scas
push
cmpl
push
imul
out
out
aad
aad
scas
call
in
sti
adc
lcall
jmp
jb
inc
jmp
daa
in
repnz
cltd
or
jmp
pop
or
push
sbb
setb
push
cltd
cmp
andb
xorl
xchg
sbb
push
cli
stc
or
imul
div
divl
xchg
xchg
clc
cltd
ret
xchg
pop
leave
jb
push
stc
sbb
xor
sti
sti
leave
sbb
cld
cmp
push
mov
mov
scas
and
mov
inc
imul
jmp
and
movsb
loop
shll
setb
push
loope
clc
and
and
pop
insl
nop
cmpsb
out
out
fdiv
dec
pop
push
pop
out
mov
cmp
testl
ljmp
jmp
testl
cmpsb
jb
imul
out
xchg
or
loope
xchg
pop
leave
scas
notb
lret
add
repnz
xor
inc
repz
repnz
testb
movsl
test
cmc
div
stos
mov
xchg
mov
mov
mov
adc
cmp
dec
in
cmc
cli
cli
xchg
pop
push
lret
or
cmc
loope
andb
or
xlat
inc
cmp
scas
push
lock
push
jo
push
inc
test
lahf
insl
lret
clc
sti
mov
loope
loope
jp
das
mov
hlt
adc
push
cmp
mov
mov
in
pop
pop
jo
daa
repz
repz
or
xchg
repz
push
mov
add
push
je
cs
or
in
sbb
in
repnz
push
je
cmpsl
repnz
test
cmp
icebp
icebp
scas
enter
xchg
pop
adc
repnz
repnz
in
ret
sbb
leave
or
mov
add
or
jne
rcrb
mov
dec
icebp
xor
or
out
lock
in
pop
pop
mov
test
lret
sar
or
jmp
cmp
push
sub
push
or
inc
insb
loope
push
das
aaa
inc
cmp
cmp
add
mov
adc
mov
sbb
add
pop
pop
jnp
jne
stc
xor
addr16
dec
add
movsb
xchg
dec
add
ss
je
dec
shl
jmp
popf
xchg
dec
int3
and
push
nop
push
jns
adc
out
jl
aaa
or
push
add
int
push
imul
cli
push
jns
int
jecxz
repz
mov
insb
lahf
out
sbb
push
push
aad
in
sahf
out
scas
xchg
gs
dec
outsb
or
in
movsb
repz
mov
movsl
add
and
mov
lret
dec
and
lea
inc
cmp
and
rol
and
lret
inc
and
push
jo
lods
fnstsw
xchg
or
xchg
lods
adc
xchg
mov
sbb
jg
fists
test
mov
push
push
or
mov
xchg
push
ficoms
inc
inc
sub
cmp
dec
xor
stos
aaa
sub
sub
inc
jecxz
mov
mov
daa
push
lock
sbb
and
push
sbb
add
imul
xor
pop
jmp
adc
pop
add
je
xchg
push
push
push
stc
and
es
and
mov
movsb
jno
pop
insl
adc
arpl
adc
jno
insb
mov
adc
jno
sub
popa
movsl
jo
cmp
popf
adc
sub
mov
xor
stos
adc
sub
ret
and
adc
jmp
aas
cmp
jmp
sub
jmp
push
sbb
inc
sub
inc
sub
lea
shr
inc
add
push
lret
aam
loop
dec
and
push
and
cmp
outsb
xchg
pop
xchg
pop
jo
movsb
xor
sub
js
inc
and
andl
and
or
xor
inc
adc
adc
inc
dec
dec
loope
mov
mov
mov
sbb
and
inc
mov
adc
adc
add
inc
das
and
mov
mov
or
inc
xorb
inc
xor
pop
rolb
rolb
and
gs
push
out
cwtl
gs
inc
or
outsl
add
xor
ds
fwait
push
inc
push
xor
add
or
movsl
xchg
cltd
xchg
incb
call
sbb
add
dec
mov
mov
xor
xchg
jg
xorb
loop
pop
and
mov
shrl
movsb
xlat
lahf
sub
sti
and
sbb
and
jno
lahf
stc
push
sub
xor
push
mov
adc
stos
lahf
sahf
mov
frstor
and
mov
sbb
jns
or
movsb
sti
and
xchg
push
lahf
mov
in
adc
es
shr
enter
jmp
nop
outsb
lcall
fwait
dec
lahf
adc
cli
in
outsb
adc
jmp
rep
cwtl
xchg
inc
ret
outsb
cmpsb
mov
fnsave
and
push
sbb
dec
inc
out
or
es
cmp
out
or
lahf
nop
out
inc
scas
aam
or
test
cmp
mov
and
nop
mov
imul
inc
leave
dec
xchg
and
leave
leave
sub
sbb
ja
xor
push
out
dec
nop
xchg
pop
lahf
in
sbb
dec
nop
dec
lahf
outsb
or
mov
orb
mov
nop
lahf
xor
test
and
push
pop
push
inc
push
cltd
pusha
lahf
adc
and
bound
pop
and
aaa
rcrl
jmp
pop
test
pushf
inc
shll
ds
push
sbb
push
inc
inc
xor
push
and
cmp
cmc
add
push
jmp
sbb
jo
xor
inc
enter
inc
inc
add
and
or
enter
arpl
push
gs
dec
sahf
push
stc
aaa
sahf
mov
mov
sbb
cmpsb
mov
adc
dec
lahf
add
mov
push
nop
popa
dec
les
pop
inc
lret
jmp
push
mov
mov
xor
inc
mov
inc
pop
cwtl
in
pop
sub
push
sbb
xchg
xor
movsl
jge
pop
popf
push
push
cmp
push
mov
inc
cmp
add
jno
lods
mov
sbb
mov
sbb
add
arpl
dec
mov
inc
scas
xchg
add
in
and
push
ficompl
inc
repnz
dec
fcmovnb
or
sub
sbb
subl
mov
clc
mov
xor
pop
test
das
xor
pop
call
cmc
push
xchg
and
add
test
jecxz
mov
sub
sub
or
push
inc
fdivr
hlt
jle
push
pop
mov
xor
movsb
les
mov
std
insw
fmuls
and
push
xor
add
xor
lds
dec
nop
lods
jo
movsb
roll
xchg
pusha
adc
nop
dec
loop
loopne
test
in
add
mov
mov
dec
sub
jmp
mov
repz
shlb
sbb
nop
jb
pusha
adc
push
loop
xor
cmp
aam
loopne
movsb
xor
clc
sti
shr
data16
data16
loope
fwait
add
mov
es
test
mov
add
push
bound
pusha
push
out
cmp
cmp
sbb
mov
xchg
int
dec
je
sub
lods
jne
sarb
ljmp
ret
nop
out
add
cmp
orl
adc
les
aaa
cmp
cmp
xor
xchg
flds
into
dec
cmp
or
push
daa
dec
jo
rorb
sub
es
jb
mov
mov
loop
mov
push
push
rcrb
mov
ss
and
push
mov
lods
mov
sub
or
mov
loop
mov
cmp
mov
push
cltd
xchg
stos
sub
int3
xchg
sbb
pop
xor
nop
sbb
push
mov
push
call
push
loopne
or
xor
rolb
add
jb
mov
aad
sbb
dec
dec
repz
clc
xor
cmp
nop
adc
mov
shrl
sbb
lahf
call
je
sub
inc
sub
data16
cmp
gs
or
sbb
mov
xor
pop
insb
in
rcr
les
aaa
shrl
je
ljmp
mov
sarb
sub
int
je
lods
sub
nop
dec
int3
xor
cmp
pop
sbb
sub
push
data16
mov
mov
ror
rol
push
xchg
fs
cmp
sbb
leave
loopne
imulb
sub
push
data16
sub
adc
or
xor
xor
sub
nop
sub
ss
inc
ja
xor
adc
aam
sub
aas
cmp
adc
sbb
outsl
sarl
sub
ret
cmpsb
mov
inc
xor
xor
nop
pop
stos
sub
jo
iret
xor
imul
dec
sbb
fadds
cltd
imul
dec
sub
or
sub
push
lret
insl
jo
sub
or
out
mov
or
sbbb
sub
xor
out
imul
in
scas
fwait
jno
sbb
xchg
xchg
shll
cmp
push
ds
data16
pop
sub
pop
das
daa
rcl
cltd
xchg
xchg
sub
stos
adc
sub
pusha
and
sub
sbb
push
pop
add
or
sbb
sub
inc
loopne
pop
sub
sub
aam
loopne
cltd
sub
adc
add
into
mov
mov
sub
inc
outsb
pop
movsl
sub
sbb
xchg
cld
data16
sbb
jmp
and
imul
sub
pop
sub
cmp
aam
or
mov
add
sub
int
imul
fnsave
pop
sbb
xor
xor
sbb
sub
cmp
jae
jns
sbbl
dec
inc
dec
mov
add
adc
add
insb
or
jnp
xchg
or
int
jl
cmp
dec
push
in
add
cmp
sub
fucom
inc
out
test
mov
sbb
xor
or
lods
fimuls
add
mov
cmp
push
nop
jb
ss
sbb
shrl
pop
push
inc
aaa
shrl
pop
imul
hlt
mov
cltd
sub
sub
mov
cld
add
sub
outsb
sbb
mov
je
and
or
add
cmp
jmp
add
cmp
in
imul
xor
mov
arpl
imul
jp
out
dec
push
call
push
imul
je
hlt
mov
lods
add
int
test
sub
js
xor
inc
outsl
push
adc
mov
data16
sub
xorl
mov
imul
inc
lcall
xor
inc
inc
inc
xchg
inc
inc
inc
inc
inc
push
pop
dec
je
inc
inc
dec
pop
cmp
nop
repnz
mov
call
adc
push
popa
jo
inc
xor
jp
sarb
cmp
and
jno
pop
ss
push
ds
ja
or
jge
aaa
imul
xor
insb
les
inc
xchg
xor
daa
icebp
rcrl
repnz
pop
imul
popa
push
pushf
xchg
mov
movsb
and
xlat
or
inc
out
push
mov
adc
add
outsb
bsf
push
in
mov
push
cmp
adc
jbe
lods
imul
ljmp
sbb
add
or
subb
test
sub
ja
mov
or
push
dec
add
inc
sbb
fs
dec
inc
pop
and
scas
add
xchg
push
mov
add
sbbb
xchg
jb
jnp
add
test
xlat
jae
mov
or
xor
sbb
add
sub
or
sub
ds
and
add
or
fldcw
lcall
pop
stc
xor
or
jns
sbb
push
sub
rorb
or
cld
cmp
add
js
jmp
push
mov
shlb
cmp
dec
cmpsl
popf
push
sbb
push
dec
insb
cmp
mov
aaa
mov
xchg
jp
lcall
add
jmp
push
cwtl
stos
mov
cmp
inc
dec
push
xchg
push
leave
ret
dec
sbb
out
nop
xchg
xchg
or
call
pop
mov
inc
pop
cmp
in
jl
sub
or
leave
test
push
cwtl
add
mov
jmp
dec
pop
test
insl
adc
cmp
scas
lcall
xchg
adcb
add
and
fwait
shrl
lock
pop
jl
inc
hlt
out
or
rcl
insl
inc
enter
or
inc
add
daa
sub
add
adc
xor
cli
testb
pop
sbb
xor
popa
dec
or
sub
insl
dec
inc
push
inc
fsubr
and
call
rclb
inc
and
cli
sarb
jbe
fimuls
call
jmp
and
sbb
stc
insb
inc
mov
rcrb
inc
push
cwtl
or
push
shll
mov
pop
cwtl
inc
push
inc
xchg
ret
divb
xchg
fwait
mov
mov
imul
or
mov
jp
roll
or
inc
or
test
and
movsb
in
mov
je
ljmp
fldl
or
xchg
xor
loopne
dec
add
inc
loopne
mov
nop
inc
jmp
xlat
faddl
outsb
inc
pop
mov
leave
out
icebp
clc
cs
call
movsb
cmp
into
mov
sbb
jo
add
rorl
sub
inc
pavgb
inc
mov
xchg
and
add
enter
clts
mov
inc
pusha
mov
enter
mov
jb
sub
fnsave
mov
or
call
adc
mov
sub
aaa
mov
dec
adc
mov
xor
and
sub
fs
xchg
and
jmp
and
push
adc
mov
and
mov
xchg
test
mov
and
xor
mov
rcrl
das
push
test
mov
pop
mov
ljmp
insl
jecxz
and
sub
adc
pop
rcr
inc
add
push
loop
dec
inc
push
add
fwait
stc
dec
daa
movsb
add
incl
inc
mov
je
add
fs
dec
xchg
insl
sbb
rolb
cmp
add
adc
pop
ljmp
test
mov
mov
push
jmp
pusha
cmpl
es
sbbb
mov
pop
push
jns
imul
cmp
xor
add
roll
rep
push
ffree
lahf
out
call
adc
sbb
sub
adc
push
adc
out
pop
or
push
mov
aam
dec
mov
cmp
dec
add
repnz
cli
imul
inc
and
cmp
pop
aaa
push
inc
add
add
xchg
xor
push
inc
call
call
add
push
push
ss
jmp
add
fsubl
add
test
outsb
sub
or
push
movb
add
movsb
lret
mov
cltd
jmp
cmp
push
inc
jmp
dec
jmp
xor
js
test
push
inc
inc
xchg
sub
adc
test
loopne
scas
inc
jmp
inc
inc
inc
pop
je
pop
es
or
imulb
cmp
sbb
adc
jmp
fisttps
add
mov
divps
xchg
xorb
add
lock
je
cmp
loopne
jle
and
cmp
leave
or
mov
mov
in
push
xor
inc
jmp
push
je
pop
add
sub
and
adc
push
popf
pop
pop
push
xor
cmp
cwtl
hlt
push
xchg
xchg
nopl
add
in
adc
pop
std
enter
sbb
rolb
push
dec
adc
roll
sbb
lock
rorl
ja
insb
call
push
es
cmp
pop
or
ss
jb
cmp
mov
mov
sub
jmp
push
push
or
inc
jecxz
pusha
push
cltd
shl
nop
test
and
das
adc
add
ja
cmp
stos
add
push
xor
adc
adc
testb
sub
push
sar
inc
push
adc
push
sarl
sub
jo
xor
lret
sub
hlt
dec
sub
roll
adc
push
pop
push
out
cmp
pop
cmp
cwtl
imul
add
sbb
nop
je
sbb
outsb
sub
ret
mov
imul
inc
and
adc
filds
cmc
add
adc
xchg
xor
mov
ret
roll
sahf
in
pop
xchg
adc
adc
mov
xor
push
das
jp
lock
rcll
dec
lock
or
das
loope
es
lret
sub
movsb
xchg
xchg
add
cltd
add
xchg
xor
sub
push
lret
movsb
or
cmp
scas
cmp
jle
mov
add
aas
pop
push
nop
mov
xchg
fldl
inc
insl
rorb
fadds
mov
imul
call
orl
push
push
xlat
cmc
or
inc
mov
adc
and
inc
jp
or
mov
inc
push
sbb
dec
dec
or
inc
nop
xchg
dec
inc
sbb
or
or
les
xchg
dec
and
daa
add
push
xchg
xchg
push
lea
nop
xchg
lret
in
mov
add
sbb
push
jl
xchg
sub
pop
add
pop
nop
xchg
xchg
jmp
cmpsb
pop
inc
xor
mov
add
mov
pop
add
cmpsb
in
dec
lea
mov
inc
inc
xchg
push
int3
jae
and
mov
inc
data16
push
loopne
lods
es
sarl
mov
fwait
and
sub
sbb
dec
aas
adc
movsb
mov
pop
rorl
cmp
jmp
pop
imul
ja
or
push
jg
addr16
sub
inc
cli
pop
push
lcall
ljmp
jne
js
shlb
mov
xchg
movsb
rcl
add
imul
add
aad
inc
add
stos
pop
or
cmpl
sti
pop
rcl
cmp
imul
sub
add
inc
sbb
add
push
push
jb
stos
mov
movsl
rcrl
repz
rorb
add
rolb
mov
mov
movsb
fsubp
xchg
adc
mov
mov
jmp
or
shl
cmpb
out
cmp
push
push
mov
test
push
add
or
or
xor
inc
loopne
sbb
shll
das
add
push
andb
mov
xor
clc
loopne
and
push
jmp
fidivs
hlt
add
mov
adc
rclb
inc
subb
or
xor
add
xchg
cmpsb
cmp
roll
enter
mov
mov
into
adc
xorb
andb
sub
test
pushf
clc
and
movsl
push
add
xchg
xor
add
mov
nop
out
mov
xchg
lea
shlb
sbb
sbb
pop
sub
dec
add
lods
sbb
fstpt
sbb
sbb
loope
pop
sbb
sbb
xchg
das
lock
nop
rcll
aaa
sbb
jb
in
jo
sbb
xchg
push
xchg
addr16
ret
sbb
leave
inc
inc
inc
pop
xor
mov
in
sbb
inc
in
sbb
xor
lock
mov
in
fwait
pop
xchg
add
je
adc
inc
loopne
in
movsb
sbb
rcl
and
and
push
jne
or
xchg
add
push
and
loopne
push
into
and
and
jo
test
add
xchg
divl
sub
cmp
sar
movsb
push
daa
add
cmp
outsl
and
sbb
jb
jl
inc
sbb
test
fcmovne
call
add
stos
or
add
aam
dec
call
sbbl
cmp
xor
scas
mov
test
mov
or
jne
cmp
or
hlt
call
rorl
test
ja
lds
and
call
out
mov
cs
adc
inc
mov
hlt
xchg
lock
jo
lds
call
pop
and
aam
les
call
out
pop
fadds
mov
cltd
js
insl
mov
mov
xlat
inc
rolb
je
push
mov
xor
outsl
mov
test
cwtl
daa
or
mov
mov
mov
test
adc
cwtl
nop
or
jo
addr16
mov
push
cs
add
addr16
cmp
inc
popa
inc
addr16
enter
push
call
sbb
mov
shll
adc
inc
sub
pop
or
inc
pusha
lds
cmp
imul
inc
mulb
push
nop
xchg
cmpsl
dec
xchg
xchg
in
push
sub
loope
push
mov
inc
push
mov
dec
mov
mov
test
inc
push
jb
mov
out
lods
push
dec
inc
sub
daa
jl
ss
pop
sbb
or
icebp
xlat
imul
and
mov
pop
pop
ljmp
pop
lret
inc
pop
dec
sbbl
add
adc
addr16
mov
dec
decb
pop
jb
outsb
cmp
mov
outsb
pop
jp
dec
and
cwtl
inc
or
mov
aam
xor
call
std
mov
dec
hlt
push
mov
int3
test
adc
movsb
xor
mov
out
inc
push
and
add
push
xchg
nop
pop
jns
sub
jb
jns
data16
or
loope
mov
pop
stos
cmp
add
inc
adc
and
lahf
pushf
cs
jns
sub
and
lret
sub
jb
xchg
js
loop
mov
dec
push
call
inc
inc
jns
loope
mov
rclb
inc
inc
outsl
push
cmp
int
lods
adc
xor
xorl
xchg
ja
and
lds
xor
jns
enter
mov
je
jns
call
ret
lods
int
shlb
and
int
mov
dec
enter
sbb
ret
mov
int3
mov
int
sbb
daa
mov
mov
inc
jbe
fadds
test
call
stos
dec
call
inc
inc
jbe
hlt
enter
jns
jp
cs
dec
jns
inc
add
sub
sbb
jns
xchg
shlb
xor
or
sub
jnp
adc
mov
jmp
push
and
sarb
and
or
test
add
lcall
sbb
inc
jns
xchg
lods
or
adc
and
push
xor
xchg
and
add
and
je
jns
adc
push
adc
or
adc
ffreep
mov
adc
rorb
jns
sbb
repnz
sbb
cmp
inc
jns
xchg
sbb
add
add
push
popf
sbb
xchg
test
ja
push
push
cmp
or
sub
dec
sub
roll
push
adc
test
xor
push
pop
outsb
out
in
push
and
iret
lds
mov
into
add
ficomps
jecxz
mov
nop
adc
in
and
mov
sbb
push
push
jns
sbb
sub
inc
push
int
call
cmpsl
dec
lret
adc
jns
ret
mov
push
leave
pop
xor
sbb
stos
inc
insl
pop
mov
or
sub
mov
scas
inc
dec
and
add
pop
sbb
out
sub
pop
test
xor
pop
cmp
mov
cmp
push
jo
pop
pop
and
cmp
jp
sub
adcb
xchg
and
sti
dec
pop
clc
cmp
leave
shl
mov
call
cmp
test
sub
pop
mov
pop
gs
call
loope
cmp
or
mov
pop
and
pop
pop
inc
or
dec
pop
cmp
or
ret
enter
adc
inc
jae
adc
mov
mov
mov
dec
cs
aas
dec
pop
aaa
and
push
jns
xchg
test
call
dec
mov
pop
dec
xchg
out
mov
pop
jb
and
xchg
test
das
and
sbb
pop
cmp
adc
and
mov
or
sti
mov
nop
sti
cmc
jns
push
xchg
das
inc
or
push
mov
jle
call
shlb
and
das
and
das
fs
jo
pop
inc
mov
or
and
cmp
inc
xchg
and
fildl
xchg
and
aad
rcll
mov
and
inc
and
lret
insb
cmp
stos
movsl
dec
pop
adc
and
pop
adc
jae
and
pop
push
add
leave
movsb
push
jle,pn
mov
nop
or
push
mov
xchg
or
pop
ss
adc
dec
inc
pop
push
mov
adc
pop
inc
lea
pop
sbb
inc
xlat
enter
adc
ret
pop
jmp
fldenv
xchg
mov
or
and
or
aam
push
and
adc
xchg
notl
or
adc
loope
add
mov
xchg
imul
pop
in
mov
and
sub
mov
mov
lock
xor
dec
enter
adc
arpl
stos
xor
ret
push
cwtl
nop
jnp
push
mov
sub
adc
js
cmp
call
pop
add
ret
enter
push
and
dec
xchg
test
les
dec
push
add
jl
bound
call
in
outsl
mov
push
mov
dec
test
push
dec
sub
or
push
push
mov
popa
push
pop
adc
sbb
test
push
call
int3
je
fnstenv
push
popa
inc
push
mov
xor
or
xchg
stos
sub
sub
push
mov
sub
and
call
xor
dec
push
das
mov
dec
aam
or
inc
or
aas
sub
sbb
aaa
unpcklps
das
shlb
bswap
lahf
ljmp
adc
and
adc
call
xor
clc
lret
xor
lock
xchg
das
pop
sbb
call
call
test
int
inc
call
jl
dec
call
movsb
lods
movsbl
push
call
pop
call
lret
xchg
das
pop
fs
insb
call
in
call
js
pop
jl
push
out
mov
std
inc
sbb
test
xor
nop
sbb
cwtl
add
mov
movsb
in
dec
dec
in
xchg
lret
adc
enter
sub
ror
movsl
mov
adc
sub
push
in
call
pop
sub
cmp
sub
es
sbb
jns
pop
cld
adc
add
add
leave
or
leave
gs
xor
adc
in
lret
sbb
sbb
push
mov
and
cs
dec
in
xchg
sub
xor
push
mov
cmp
dec
push
push
mov
inc
dec
cmp
out
rorb
adc
pop
sub
pop
or
movsl
add
jo
add
or
or
or
cs
int
in
adc
insb
and
or
xor
daa
mov
cwtl
sahf
jg
and
cld
pushf
and
mov
and
cmp
cmp
mov
xchg
data16
js
data16
sbb
inc
sbb
xchg
xchg
xorb
test
sbb
imul
out
movsb
mov
cmp
call
movsb
sbb
imul
dec
cli
mov
and
mov
dec
aaa
add
arpl
push
test
sub
mov
add
adc
das
add
shlb
xchg
je
xor
mov
inc
inc
dec
mov
mov
adc
mov
push
stos
fs
add
dec
or
mov
or
mov
mov
dec
stos
and
shlb
jae
or
ljmp
pop
inc
test
rorb
jo
dec
sub
aaa
mov
aaa
dec
fcoms
inc
aaa
lea
push
adc
inc
add
xchg
cs
pop
adc
inc
aam
xchg
or
movsb
fnsave
mov
and
jne
jae
sbb
xchg
das
inc
push
shrl
popf
add
inc
shlb
sub
fsubrp
addb
pop
adc
es
ret
push
mov
mov
sbb
andb
sbb
cs
jo
mov
test
sub
add
inc
scas
roll
sbb
pop
add
pop
mov
aad
mov
and
outsb
sar
mov
mov
jb
stos
adc
pop
push
or
pushf
or
or
sbb
aad
or
adcb
xor
or
es
mov
or
scas
add
or
add
mov
jmp
pop
adc
or
sbb
fs
jmp
jmp
push
and
nop
fs
xchg
xchg
mov
dec
push
cmc
or
xchg
adc
jne
je
xchg
pop
sbb
shll
lods
dec
mov
lret
push
fld1
inc
cmp
and
sbb
rorl
jg
pop
sbb
sbb
xor
sbb
mov
jecxz
scas
ljmp
xchg
inc
cltd
mov
xchg
mov
add
adc
inc
gs
cmpsb
adc
dec
adc
adc
fwait
and
push
sub
mov
add
adc
pop
ljmp
cltd
rorb
dec
cmpsb
hlt
insl
rorl
add
push
adc
gs
lahf
mov
loopne
lods
cmp
cltd
divl
xor
adc
sub
je
gs
adc
push
cmpsb
adc
pop
gs
je
adc
dec
jmp
xchg
or
jo
add
repnz
push
sub
mov
inc
xchg
adc
xor
js
mov
xor
shlb
mov
sub
cmp
in
pop
hlt
or
adc
mulb
shlb
adc
fs
dec
lcall
mov
cmp
stos
rorl
adc
and
and
mov
mov
pushf
orb
adc
mov
jmp
adc
cmp
cmp
inc
sbb
inc
cmp
or
and
cmp
adc
rcrb
cmp
and
mov
push
cmp
pop
es
xchg
leave
jecxz
sub
lods
inc
clc
dec
inc
je
testb
fs
stos
sub
int
nop
orl
push
inc
mov
or
nop
inc
or
les
ret
fwait
add
inc
dec
sahf
adc
push
push
je
or
or
inc
push
mov
inc
cwtl
jmp
adc
add
sub
andl
xor
push
cs
add
adcl
subl
push
sub
pop
pusha
sub
nop
test
push
lods
loopne
mov
xor
pop
scas
add
mov
das
xor
orl
add
repz
loope
add
out
and
add
dec
sbb
pop
int
andb
mov
sub
gs
mov
fs
cmp
add
jnp
dec
push
mov
lea
lcall
stos
xor
sarb
aam
add
pushf
mov
out
pushf
push
hlt
adc
dec
rorb
pop
pusha
jne
or
lret
pushf
dec
aaa
nop
cmpsb
sub
je
aaa
jl
arpl
pop
fildl
sbb
shl
mov
movsl
loopne
fs
xorl
mov
sbb
aaa
mov
enter
aaa
imul
pusha
jne
aaa
dec
fst
imul
cmpsl
add
pushf
push
aaa
aam
inc
addl
push
ret
ret
aaa
imul
arpl
sbb
aaa
mov
sub
shlb
mov
sbb
sbb
cld
jb
push
shr
cmp
dec
push
dec
dec
add
adc
iret
mov
inc
call
mov
es
dec
inc
and
out
add
mov
hlt
sbb
into
addl
add
call
addr16
and
rcrb
fisttpll
lods
call
loope
dec
addr16
jbe
faddl
or
cmp
lds
and
jp
outsb
inc
cmp
cwtl
filds
fwait
rorl
dec
movups
nop
add
lea
addr16
addr16
shl
dec
xor
add
dec
das
xor
push
test
enter
xorb
addr16
sub
and
push
mov
addb
push
orl
pop
sahf
cmp
pop
sbb
sbb
sub
jo
pop
dec
push
pop
mov
fcompl
xchg
adc
xchg
dec
or
rolb
sbb
dec
mov
nop
inc
or
adc
sub
pop
shll
mov
out
loopne
dec
sbb
imul
xchg
sbb
cli
push
pop
adc
test
in
push
xchg
sub
adc
mov
dec
imulb
call
rorb
jns
adc
push
jp
js
mov
dec
jge
pop
cld
sahf
jg
push
mov
call
outsl
nop
dec
mov
mov
movsb
xchg
shr
mov
jmp
sub
inc
dec
or
xor
scas
pop
pop
inc
push
mov
nop
dec
cmp
and
or
cmp
lods
mov
lock
daa
mov
or
fwait
push
lret
nop
mov
aad
in
repz
repz
xor
repz
xchg
lahf
gs
mov
xchg
cmp
xor
and
inc
or
imul
push
add
inc
adc
lock
xchg
jmp
hlt
jecxz
or
popf
jg
jb
jno
mov
sbb
subb
or
inc
dec
push
aad
popf
popa
push
popf
pop
mov
mov
or
fs
divb
call
out
movl
or
test
pop
pop
pop
xchg
sub
pop
cltd
rcrb
inc
push
fs
cmpsl
xchg
and
dec
insb
movsl
hlt
cld
sbb
jb
aam
xchg
add
cmp
adc
add
xchg
push
pusha
pop
loope
sbb
add
or
add
dec
push
sub
jb
push
push
jne
sub
add
sti
fwait
repz
adc
push
add
sub
jo
xor
outsb
fdiv
stos
xlat
fwait
push
jnp
sub
sbb
sub
dec
mov
inc
dec
lea
call
icebp
add
fwait
insl
push
or
adc
push
cmpl
mov
mov
and
loope
shl
jge
or
divb
jnp
lcall
adc
rolb
pop
push
push
stos
xchg
inc
or
or
pop
push
or
pop
or
ret
sub
or
sub
xchg
call
rep
ret
push
or
mov
jns,pn
leave
mov
int
mov
test
jecxz
inc
cmpsb
dec
mov
sbb
cltd
inc
push
inc
sub
inc
xchg
sub
out
cmp
inc
push
jo
mov
adc
inc
nop
xchg
pop
aad
out
and
lcall
call
push
sbb
or
dec
pusha
or
push
iret
pop
out
jle
cmp
add
and
or
repz
out
sbb
ret
mov
repz
bound
sub
lcall
call
out
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
fcomip
cmp
push
nop
movsb
push
push
xchg
out
sahf
out
fs
inc
ss
out
cmpb
push
push
jl
out
sbb
repnz
repz
into
mov
ret
push
pop
into
sbb
incb
add
es
xor
out
loop
sbb
cmp
mov
sahf
out
lcall
cmp
out
call
sub
cmp
repz
pop
data16
iret
repz
nop
sahf
lods
mov
fdivp
fdivp
cmp
decb
ss
inc
pusha
inc
sbb
push
shr
jb
int3
ds
outsb
jle
sahf
mov
daa
rol
loop
idivb
imulb
push
cmp
aaa
je
repz
out
push
push
cmp
adc
mov
mov
push
jbe
add
lods
cmp
push
cwtl
cmpsl
insl
mov
pusha
insl
push
out
iret
dec
test
fidivs
sarl
jbe
les
test
mov
pop
js
or
pop
push
sbb
jo
lret
xor
pop
sub
inc
sub
lea
pop
or
inc
mov
dec
push
je
jmp
mov
dec
outsl
push
push
ja
test
inc
mov
and
push
jno
xlat
js
sub
xor
push
rcll
jo
xorb
ss
xor
add
mov
add
push
rol
jecxz
bound
out
xor
rep
mov
jl
push
das
scas
and
outsb
mov
das
dec
inc
sub
push
imul
mov
xchg
mov
outsl
inc
or
or
or
fadds
pcmpeqd
jno
bound
and
imul
xchg
inc
and
sub
shrl
stos
mov
and
inc
dec
adc
daa
add
sbb
fistpll
fsubrl
cmp
mov
jg
adc
sarl
ret
je
stos
jecxz
mov
decl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
sbb
or
push
jo
les
insb
subl
cmc
es
pop
xor
xor
jae
mov
dec
imul
dec
loope
pop
dec
jae
inc
jne
outsb
je
mov
pop
inc
js
pushl
ss
inc
xor
sub
sub
sub
cmp
add
xor
xor
jge
pushl
xor
cmp
inc
stos
xor
ss
xor
cmp
fadd
xchg
jnp
xor
xor
aaa
clc
inc
inc
xor
mov
aam
das
add
dec
lret
nopl
faddl
mov
dec
orb
cmp
xor
push
xor
incl
fildl
or
push
and
inc
aaa
adc
xor
inc
pop
dec
and
add
jl
push
arpl
xor
outsl
clc
push
sahf
inc
push
inc
push
dec
and
cmp
ss
add
sbb
and
dec
xchg
test
mov
dec
loopne
fs
in
ss
mov
gs
pop
inc
pop
lock
dec
hlt
imul
imul
push
jl
mov
jle
out
inc
out
adc
push
sub
out
cmp
shrl
adc
inc
mov
in
cs
sahf
add
movd
fsubr
cmpsb
push
hlt
and
mov
iret
jo
insb
adc
scas
adc
insb
ljmp
imul
fs
int3
lret
je
push
push
jns
mov
inc
cmp
add
in
adc
cmp
sbb
xchg
sub
mov
stos
add
mov
jo
xchg
sarb
je
std
inc
arpl
aaa
clc
push
insb
insb
mov
xchg
and
outsb
ret
xor
test
mov
xor
testb
dec
sbb
inc
xor
or
pop
punpckhbw
stos
sarb
pop
imul
add
jo
adc
jp
insb
mov
repz
jb
mov
jae
test
jnp
inc
push
imul
imul
cmp
imul
dec
fs
imul
push
insb
push
popa
fs
jo
dec
fwait
mov
add
add
push
cwtl
jnp
inc
aaa
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
shlb
outsb
outsl
push
popa
imul
inc
outsb
popa
decb
dec
add
sbb
fmull
pop
add
mov
mov
pusha
test
test
inc
test
and
lock
rolb
sub
and
sub
adc
cmpb
pop
mov
aaa
and
xchg
bound
sti
pushf
add
sbb
push
jg
push
add
andb
mov
lea
rclb
push
pop
adc
mov
push
fadds
adc
andb
or
add
or
das
push
adc
jns
out
xchg
adc
push
sbb
sbb
cmp
repz
sbb
std
lahf
out
cmpsl
sbb
push
das
push
pop
nop
cld
sarb
and
cli
js
xlat
jl
push
jns
stc
jp
push
cld
ret
cmp
repz
mov
cmpsl
push
mov
fldcw
out
stos
or
ds
arpl
sbb
mov
xor
movq
push
cmp
or
cmp
xchg
or
lahf
pop
test
add
adc
push
cld
or
repz
in
int3
fdivrs
iret
repz
out
xor
mov
jns
out
mov
jns
insb
push
pop
repz
repz
push
dec
dec
inc
sahf
out
iret
inc
cmp
xor
sub
sahf
out
sub
sbb
out
sahf
out
adc
add
repz
add
or
hlt
call
cmp
enter
stc
cmp
repz
xor
lock
out
sahf
cmpsl
int3
mov
insb
inc
int
jns
sub
adc
cld
push
fdivrs
repz
les
repz
sub
aam
mov
xchg
jo
sbb
add
cmp
int
call
cwtl
jl
push
cwtl
mov
inc
lret
sbb
imul
cmpl
cmp
repz
ja
les
cmp
inc
xor
dec
adc
neg
imul
arpl
inc
inc
add
adc
adc
mov
push
fnsave
icebp
push
test
outsb
mov
mov
adc
xor
scas
sbb
add
call
arpl
mov
mov
pop
inc
jl
inc
aas
push
inc
pop
xor
sbb
lds
push
ja
loop
sbb
fsubrl
fwait
aaa
inc
pop
cltd
dec
mov
or
les
bound
adc
pop
jbe
and
pushl
adc
stos
xchg
icebp
or
mov
pushf
add
sub
rolb
ret
jns
imul
mov
push
pop
push
inc
push
xor
xchg
lret
inc
mov
jnp
out
cmp
inc
cmp
mov
add
pop
jne
pop
stc
sbb
sbb
pop
mov
and
jg
push
je
imul
and
push
or
pop
outsl
mov
jo
push
or
sub
cwtl
icebp
cmp
mov
cmp
into
mov
push
push
xchg
sub
inc
iret
pop
leave
jmp
outsl
jl
add
cmpsl
ja
lahf
add
add
jg
das
loopne
xchg
fucom
mov
loopne
popa
fsubs
mov
addb
test
xchg
inc
sub
aas
repnz
es
das
fcoms
mov
and
ss
inc
es
sete
int3
inc
rorl
jbe
into
xor
add
xlat
es
jns
pop
rcr
in
adc
or
push
lcall
pushf
setl
lret
outsl
mov
mov
or
push
cmp
popf
jl
in
push
daa
sub
xor
sbb
nop
adc
nop
mov
mov
aaa
mov
xchg
mov
aas
shll
loopne
jg
enter
pop
cmp
dec
dec
and
iret
fcmovnbe
arpl
popf
mov
aas
jbe
in
insl
mov
dec
jp
insb
adc
xlat
outsb
movsl
xor
loopne
dec
mov
movsb
dec
adc
mov
sub
lock
enter
scas
ja
dec
mov
rcrb
les
inc
insl
push
dec
pop
or
daa
lods
add
bound
es
dec
imul
sub
pop
ltr
sub
lcall
scas
pop
push
and
and
inc
push
dec
dec
cld
mov
push
add
push
outsl
ja
xor
in
cli
jle
jb
push
xchg
jno
sub
add
fidivrs
daa
movsb
and
and
add
inc
sbb
repnz
outsb
inc
repnz
lods
mov
ljmp
xor
mov
or
inc
repz
jbe
add
xchg
rcll
mov
adc
jnp
in
inc
add
insl
jo
dec
pop
adc
push
add
negl
dec
add
xchg
add
push
addr16
mov
push
popa
jae
push
jo
mov
jae
push
adc
movsb
mov
or
push
push
orb
mov
inc
mov
lret
out
adc
rorl
sub
push
inc
sbb
addb
adc
add
and
add
xchg
or
dec
sub
push
mov
pop
or
push
neg
scas
sarb
push
jo
jb
jns
dec
sti
xor
mov
sbb
roll
pop
inc
xchg
push
push
lods
cmpsl
xor
push
sbb
mov
imulb
push
push
fcmovb
pop
aaa
adc
mov
inc
and
pusha
inc
inc
xlat
lods
inc
and
fidivrl
and
inc
imul
jge
xchg
xchg
mulb
mov
add
pop
add
cmp
or
push
dec
inc
add
out
mov
mov
and
gs
mov
add
jmp
rolb
into
test
push
es
pop
mov
scas
xchg
and
popa
push
dec
inc
mov
push
nop
pop
adc
sub
fs
data16
and
test
gs
dec
icebp
int3
inc
js
push
inc
cs
gs
push
adc
jle
icebp
dec
or
and
push
call
pop
adc
imul
add
sub
inc
dec
fsubrs
mov
aas
das
jecxz
call
mov
mov
scas
inc
add
shlb
stc
add
adcb
push
adcb
and
subl
xor
dec
dec
pop
add
mov
jecxz
jns
xchg
fs
lcall
insl
inc
xchg
shll
push
outsl
mov
xchg
pusha
mov
roll
push
frstor
sub
add
sbb
inc
mov
pop
xchg
aaa
lock
mov
fyl2x
rcr
add
mov
jo
lret
jb
mov
jo
sub
adcb
arpl
inc
jmp
enter
mov
push
aaa
dec
mov
dec
pop
or
aas
inc
cmc
or
or
sbb
lret
mov
movsb
cmp
stos
enter
mov
cmp
add
inc
cmp
inc
mov
stos
iret
add
inc
jecxz
and
add
add
imul
xchg
push
loopne
cs
sub
movsl
mov
adc
arpl
sbbl
enter
add
scas
divb
into
pop
roll
in
xchg
add
push
xor
sbb
arpl
xor
adc
jo
arpl
fcmove
pop
movsl
cmp
add
lret
xchg
into
mov
in
inc
cmpsl
add
cmp
push
push
mov
imul
xor
ret
push
and
jns
add
jns
cld
inc
jae
cmc
and
adc
add
je
xchg
add
xor
and
test
xor
pusha
lods
lds
mov
or
cmp
out
into
insb
sbb
add
sub
inc
xor
loope
or
dec
sbb
and
mov
rclb
fiadds
pop
lahf
sbb
std
loopne
or
fwait
xchg
and
pop
pop
nop
ja
cwtl
aam
push
jecxz
imul
mov
and
and
mov
add
pop
pop
dec
mov
push
sbbb
push
out
adc
sbbb
mov
and
add
xchg
mov
std
jns
sbb
nop
imull
test
rolb
and
mov
inc
xlat
pop
add
jbe
inc
dec
add
sahf
popf
lcall
xor
sti
stos
rclb
insb
or
popa
dec
dec
ss
pusha
sbb
xchg
pop
test
loopne
into
imul
push
jo
or
add
adc
push
leave
mov
or
test
add
inc
or
daa
iret
jmp
scas
sbb
lcall
clc
out
lock
out
call
out
sahf
out
mov
lods
test
iret
repz
cwtl
xchg
nop
repnz
repz
sahf
ja
push
pop
push
inc
cmp
out
sahf
xor
sbb
cld
in
or
sahf
out
out
call
ror
sarb
jns
test
mov
sahf
out
push
cmp
sub
out
sahf
and
adc
add
in
cmp
repz
in
in
int3
jnp
iret
repz
xchg
push
mov
fdivp
cmp
js
push
inc
sub
and
into
out
sbb
loopne
push
inc
test
and
and
pop
push
scas
andb
shrb
divl
mov
out
negb
jo
pmuludq
fsub
push
pop
not
lock
push
daa
add
adc
mov
aaa
xor
popf
and
imul
lret
or
rolb
inc
and
divb
aad
sbb
push
dec
mov
fs
inc
dec
pop
mov
or
add
pop
xchg
mull
mov
jne
pop
push
ret
aaa
pushl
sub
sub
jne
adcl
pop
sbb
andb
repnz
xor
dec
push
pop
jo
add
in
cmp
add
pop
push
and
outsb
mov
outsb
sub
cmp
lret
sub
xchg
sub
rorb
clc
jbe,pn
and
xlat
adc
mov
lahf
xor
xor
ds
je
pop
pusha
inc
sub
xor
jae
sbb
rep
pop
cmp
mov
sbb
cmp
dec
inc
loopne
add
insb
and
add
or
adc
jne
js
subb
mov
popa
insb
cmpb
rclb
stc
das
sti
fmuls
jmp
divb
lahf
ds
inc
add
inc
pop
pop
adc
adc
add
inc
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
jmp
jp
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
xor
xchg
shll
inc
ss
ss
es
dec
aaa
dec
ljmp
lea
pushf
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xchg
ret
add
push
lock
idivl
or
ljmp
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
clc
add
or
adc
xor
xor
xor
xor
mov
xor
jg
pushl
xor
xor
xor
out
xor
xor
xor
xor
jg
lock
xor
fidivl
scas
xor
shlb
jecxz
push
es
xor
divl
jno
cltd
ss
fnstenv
loop
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
jg
gs
cmp
outsb
cmp
cmp
cmp
cmp
or
lcall
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
jg
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cli
pushf
cmp
adc
das
jo,pt
incl
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
incl
add
movsb
pop
xor
xorb
xor
lcall
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
ret
lcall
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
jmp
jg
xor
pop
xor
jo
xchg
xor
xor
ljmp
cmp
xor
xor
xor
xor
xor
push
aaa
ljmp
mov
aaa
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
mov
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
lcall
dec
push
or
cmp
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
ret
clc
mov
xor
pop
xor
lcall
clc
xor
xor
lahf
inc
xorb
xor
xor
out
in
xor
aaa
ljmp
sahf
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
icebp
jg
in
cmp
cmp
std
cmp
cmp
mov
sbb
cmp
cmp
ds
jle,pt
shl
fidivrl
jmp
xor
xor
lcall
cmp
ss
ss
xchg
cmp
cmp
mov
fcomip
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
dec
aas
push
cmpsb
sar
jg
outsl
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
sti
inc
xchg
push
movsb
xor
add
jmp
aas
clc
or
mov
scas
xor
xor
xor
loop
xor
ljmp
xor
cmp
xor
mov
xor
xor
scas
std
xor
jmp
decl
ss
ss
add
or
aaa
and
incl
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
dec
aaa
repz
xor
cmp
xchg
outsl
cmp
xor
lods
jecxz
jmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
aas
cld
jg
cmp
popa
cmp
cmpb
cmp
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
push
es
adc
sub
xor
cmp
cmp
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
fcomip
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
loope
inc
cmp
pop
cmp
mov
cltd
cmp
jp
ljmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
int
push
aas
stos
aas
mov
mov
rclb
jmp
insl
stos
lcall
xchg
les
fidivl
in
or
adc
and
jg
sub
cmp
jb
mov
xor
xor
xor
xor
xor
cld
mov
mov
jl
cmpsl
xor
xor
scas
pop
filds
xor
xor
xor
cmpsb
pushl
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
mov
cmp
scas
hlt
or
cmp
fdivrl
aaa
cmp
mov
xchg
cmpsl
loope
data16
dec
sub
cmp
cmp
cmp
jg
aas
sbb
xor
or
xor
cmp
lcall
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
aas
cld
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
sarb
ja,pt
lahf
xor
xchg
aas
lock
xchg
cs
mov
insl
xor
mov
push
xor
xor
xor
xor
jl
out
rcrb
fiadds
aaa
ret
aaa
jmp
hlt
filds
sbb
cmp
pop
cmp
jge
mov
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
mov
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
outsl
js
ljmp
xor
call
cmp
dec
ss
outsb
notb
ss
in
and
sbb
xchg
cmp
cmp
mov
jl
andl
lock
test
imul
cmp
test
mov
ret
sar
or
cmp
dec
cmp
cmp
jae
aam
adc
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
das
cli
or
cmp
orb
pop
and
push
aad
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
test
loope
rol
loopne
push
xchg
xor
xor
pop
xor
xor
cmp
or
pushl
xor
xor
xor
xor
xor
mov
xor
push
aas
cld
lcall
divl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
incl
cli
aaa
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
pop
adc
jbe
cmpl
cmp
cmp
ss
cld
call
cmp
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
shl
lds
push
sub
jne
adc
xor
lcall
xor
jg
xchg
xor
xor
xor
adc
sub
xor
xor
ljmp
push
scas
loopne
adc
adc
sbb
sbb
sub
sub
nop
sub
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
cld
jg
loope
into
cmp
inc
xor
xor
mov
jl
mov
ret
negb
mov
mov
mov
xor
xor
fldl
hlt
test
lods
xor
xor
xor
cmp
sub
ljmp
loopne
cmp
push
sarb
inc
cmp
cmp
cmp
pop
mov
cmp
and
call
cmp
cmp
or
mov
jo
stos
push
rcr
cmp
mov
cmp
push
pop
loopne
cmp
mov
cmp
inc
lock
dec
push
push
add
or
adc
sbb
mov
cmp
sub
sub
xor
aas
clc
cmp
inc
cmp
cmp
pop
cmp
jg
jmp
cmp
cmp
cmp
dec
mov
xchg
cwtl
mov
adc
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
je
mov
shrb
aas
fdivrs
loopne
clc
jbe
aas
std
adcb
pop
bound
out
sub
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
enter
cmp
jo
adc
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
shrl
or
ss
sahf
int3
shlb
aam
fdivr
decl
fdivl
loopne
in
call
ss
ss
add
add
or
or
adc
std
das
shlb
ret
aaa
and
and
sub
sub
xor
cmp
incl
aaa
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
das
ret
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
inc
mov
aaa
movsb
aaa
test
mov
mov
mov
aaa
shlb
aaa
enter
shlb
aam
fdivs
fcompl
in
and
adc
out
aaa
hlt
xor
aaa
or
xchg
mov
adc
adc
sbb
cmp
into
ret
fdivrl
call
adc
sbb
cmp
cmp
jg
push
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
add
mov
cmp
movsb
cmp
mov
mov
mov
cmp
mov
movsl
mov
mov
adc
add
movsb
adc
push
push
movsl
movsb
fs
lret
lods
pop
push
repz
fbstp
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
stos
stc
idiv
std
mov
push
lret
aaa
ljmp
gs
push
aaa
mov
faddl
out
adc
fsubrl
push
lcall
test
inc
add
insb
and
add
cmp
jp
push
add
out
sub
xchg
pop
inc
or
lcall
sbb
push
adcb
imull
dec
push
push
out
insb
and
dec
mov
in
or
push
cmp
out
rolb
out
orl
cmp
pop
cltd
push
rcrb
cmpsb
dec
out
adc
or
orb
and
mov
push
sbb
sbb
xor
aas
mov
add
inc
or
fadd
fs
gs
cmpsb
pusha
mov
gs
lea
add
jo
movsl
mov
dec
xchg
rclb
lahf
mov
push
sbb
call
mov
xchg
sbb
div
lret
push
cmp
sub
je
jae
mov
ret
bound
call
cld
add
jl
or
incl
mov
hlt
dec
clc
outsl
test
add
sub
aam
shll
fiadds
adc
xchg
mov
adc
fcmovne
pop
and
fs
jbe
call
dec
rolb
int3
rol
in
es
jno
in
pop
dec
sarl
fs
mov
fstpt
cmp
xchg
or
add
jp
mov
ja
insl
push
mov
or
add
loop
inc
cli
push
mov
xlat
pop
add
cmp
in
or
add
or
xor
sbb
rol
scas
inc
nop
pop
ljmp
pop
pop
sbb
inc
adc
add
pop
std
sahf
cmpsl
test
lret
repz
pop
xor
inc
mov
mov
mov
call
and
inc
ret
testb
push
inc
std
adc
shr
ja
inc
pop
jmp
push
cmp
call
or
cmpsb
int3
fildl
xchg
call
jp
inc
sub
add
and
xchg
inc
mov
ss
popf
adc
rcr
push
add
dec
add
and
lods
xor
pop
add
push
pop
mov
mov
dec
inc
loop
xor
test
lea
leave
xor
cmp
jbe
dec
cmp
in
or
xchg
and
push
cmp
adc
outsl
push
jo
sbb
aas
lea
xchg
int
test
je
clc
mov
mov
cmp
jno
mov
or
leave
push
sbb
test
pop
adc
ret
fnstenv
add
inc
addb
adc
add
adc
insb
xor
dec
fs
js
add
pop
add
mov
and
or
add
mov
dec
mov
pop
ja
jecxz
pushl
popa
add
fwait
dec
test
push
xor
stos
or
popa
aam
push
pop
xor
adc
adc
cmp
and
dec
cmp
jne
adc
add
push
test
mov
mov
sub
mov
push
mov
sbb
mov
and
mov
sbb
or
push
mov
js
mov
dec
mov
ror
inc
jo
mov
xor
jmp
dec
sarb
sub
cmp
mov
cmp
or
mov
inc
pop
and
xchg
xchg
pop
and
add
cmp
dec
jno
cmp
xchg
adc
inc
adc
xchg
xor
adc
cmp
adc
inc
arpl
pmaxsw
or
cltd
je
jge
ret
ss
push
mov
xchg
jmp
lahf
jno
sahf
mov
addl
inc
in
xorl
cltd
or
pop
mov
in
mov
mov
mov
test
mov
lea
aaa
mov
xchg
push
lods
sbb
mov
je
add
popf
xchg
aam
lods
add
pop
pop
push
or
stos
add
jbe
stos
aas
inc
leave
sbb
jnp
ficoms
xchg
addl
call
or
sarb
or
mov
cmp
jl
and
jno
leave
push
adc
jne
mov
push
xchg
push
sbb
inc
dec
sub
and
adc
jbe
xchg
pop
cli
sbb
and
and
lods
jnp
pop
push
std
pop
xor
jl
cmp
mov
adc
mov
rcll
dec
ret
call
movsb
mov
pop
sahf
fists
jne
push
mov
and
or
cmp
pop
cmovns
dec
jge
push
cmp
popa
or
push
push
cwtl
cs
push
test
pop
inc
jmp
test
sbb
call
push
lods
jmp
lret
fsubrl
inc
push
jbe
mov
test
add
ds
mov
push
add
mov
and
xorl
jbe
add
add
sub
gs
fwait
stc
dec
adc
aaa
sbb
adc
insl
xchg
jbe
bound
gs
inc
push
adc
loope
and
loop
mov
dec
adc
sub
gs
dec
fstpt
mov
or
rcrb
xor
lret
lret
scas
ficoml
or
sbb
or
and
dec
stc
mov
cmp
add
inc
sub
rcr
dec
push
out
sahf
aad
fisttpl
push
pop
add
in
sbb
xor
xor
call
mov
dec
fistl
insb
addb
dec
out
sbbb
and
gs
insb
push
inc
into
push
stc
mov
cmp
dec
call
call
pop
adc
dec
mov
pop
or
mov
rcr
lret
inc
pop
fstpt
mov
jae
add
jae
xlat
pop
add
adc
jbe
jg
and
cmp
mov
jnp
and
es
add
mov
add
stos
xchg
addr16
out
fldl
jg
xchg
push
insb
cmp
repz
pop
push
dec
inc
add
sub
addr16
xlat
loopne
sbb
jmp
push
xchg
xchg
testb
cmp
lret
and
or
push
jg
xor
mov
nop
inc
push
fs
mov
jmp
sbb
or
addr16
pop
mov
xchg
addr16
push
call
push
lock
cmp
or
xor
adc
addr16
int
add
or
sub
lret
cmp
addr16
pop
mov
xlat
mov
cltd
jle
pop
test
in
stc
xor
andb
cltd
push
inc
push
pop
fs
and
daa
and
mov
add
or
inc
fs
ds
xchg
push
stc
adc
mov
jnp
mov
aad
out
mov
repz
inc
shl
stos
xor
loop
jnp
cmpsl
ret
lret
or
cmpsl
mov
decl
or
and
es
add
cs
daa
daa
daa
daa
cmpsb
imul
or
or
shlb
daa
sub
sub
mov
sub
sub
or
add
sub
xor
jae
sub
sub
inc
xorb
cmpsb
imul
test
mov
or
xor
jo
sub
sbb
dec
inc
pusha
push
and
adc
ret
sub
sub
mov
cmp
js
lods
subl
insb
into
inc
inc
sbb
cmp
movsb
imulb
push
jp
gs
push
or
clc
fs
dec
sbb
or
xchg
sbb
addr16
nop
inc
inc
adc
psubsb
cwtl
addr16
inc
mov
push
dec
xchg
sbb
lods
sarb
and
mov
or
adc
push
adc
pop
adc
push
sub
in
pop
es
jle
loop
sub
movhpd
addr16
adc
add
push
cmpb
iret
add
shll
adc
or
sub
adc
jmp
cmp
xchg
test
xor
inc
sub
or
or
inc
inc
out
cmp
cmp
push
nop
inc
add
out
cs
addr16
adc
nop
int
and
mov
push
shlb
and
mov
jp
repnz
mov
scas
xchg
js
pop
pop
mov
mov
cld
add
sub
sbb
add
mov
dec
fsubrs
cltd
cwtl
in
loop
pop
push
call
inc
loop
lret
rol
movl
fs
jmp
jno
dec
outsl
fiaddl
roll
mov
xor
mov
or
adc
xor
out
push
cltd
pop
sbbb
sbb
mov
cltd
xchg
sbb
fisttpl
pusha
sub
sbb
and
adc
dec
bound
mov
cltd
adcb
pop
ljmp
mov
ret
mov
and
add
push
cmc
mov
inc
repnz
push
imul
shlb
test
test
orl
dec
movsl
inc
adc
movsl
inc
popf
adc
dec
ja
push
jne
adc
inc
mov
test
jge
jo
out
and
sub
mov
xchg
mov
add
movsl
and
xchg
aam
mov
pop
inc
sbb
mov
rol
enter
roll
pop
cmp
mov
adc
movsl
inc
mov
or
xchg
push
jne
sbb
mov
jo
sub
push
adc
mov
mov
jbe
push
gs
adc
in
ficoms
mov
adc
add
mov
pop
enter
add
inc
adc
leave
inc
dec
mov
test
test
pop
add
or
lret
bound
adc
pop
or
sub
sub
cwtl
fs
mov
sub
push
pop
aam
adcb
mov
movsl
inc
or
aam
add
push
adc
push
xchg
mov
inc
mov
push
xchg
and
or
cmp
pop
popf
and
je
push
inc
pop
adc
icebp
mov
pop
rol
and
ja
dec
cmp
or
fcoms
or
xor
mov
daa
in
xor
sub
nop
call
xchg
push
nop
push
mov
enter
dec
pop
pop
mov
add
lods
outsb
mov
and
nop
pop
mov
nop
cwtl
add
les
or
pop
mov
push
pop
push
popa
mov
adc
xor
ret
pop
movsb
loope
into
xchg
pop
push
ds
mov
sub
jnp
nop
pop
loope
sub
not
mov
push
inc
cmp
hlt
jmp
xor
push
add
cltd
sbb
xor
xor
xor
xor
pop
inc
cmp
xor
dec
dec
inc
pop
cmp
dec
and
pop
rcl
and
mov
mov
pop
push
call
inc
pop
jg
push
or
fdivrs
jmp
adc
fdivs
lds
pop
stos
filds
loop
pop
jno
bound
dec
or
call
or
flds
cltd
adc
sbb
sbbb
je
mov
movsl
leave
and
addb
and
sub
nop
pushf
add
dec
pushf
cmpsl
or
sbb
jbe
dec
jno
cmp
aad
mov
andl
aas
lock
jl
in
nop
cltd
xor
pop
fstpt
xor
sbb
pop
push
mov
sbb
sbbl
call
xchg
gs
enter
push
adc
xor
lcall
mov
pop
fstl
dec
fnsave
fwait
jb
cmp
push
int3
fdivr
test
js
mov
arpl
sbbb
dec
pop
or
pop
jns
insb
lret
inc
fsubrl
fdivl
pop
lods
lret
xor
dec
fucomp
adc
adc
xor
inc
call
mov
adc
push
mov
and
mov
lock
out
mov
lret
mov
test
and
int3
ret
sbb
inc
xor
sbb
and
adc
jno
bound
sbb
pusha
loopne
and
fs
or
inc
inc
sub
clc
pushf
dec
test
jbe
mov
sbb
das
nop
loopne
adc
sbb
enter
loopne
in
mov
rclb
adc
in
xor
rclb
pop
mov
daa
sub
push
inc
test
jmp
data16
xchg
or
imul
fwait
roll
add
sbb
cltd
inc
adc
and
cmp
and
lea
mov
adc
and
dec
repnz
mov
xor
subl
mov
pop
aas
cltd
add
inc
and
push
stc
cltd
jo
dec
movb
push
leave
push
inc
jmp
ret
lea
repnz
push
inc
cltd
adc
popf
fisttpll
and
test
xchg
add
mov
daa
mov
test
sbb
mov
inc
sahf
mov
mov
push
sub
and
aad
pop
xchg
jle
repnz
inc
sbb
gs
mov
pop
stc
sub
fsubrl
push
inc
ds
adc
jo
inc
cmpsl
add
dec
inc
add
sub
and
mov
mov
outsl
push
cwtl
loopne
sub
inc
and
outsl
adc
call
out
sbb
xor
pop
and
arpl
cmpsl
mov
jmp
jnp
mov
in
cmc
stos
fcomi
jp
in
mov
adc
push
pop
fsubrp
jnp
ret
mov
je
rclb
dec
jge
push
imul
je
and
addb
mov
add
and
arpl
rorl
inc
inc
icebp
inc
stos
dec
sbb
push
cmp
adc
and
pop
jmp
pop
jl
mov
cmpsl
or
mov
mov
cmpl
pushf
jo
dec
sbb
adc
or
lret
out
xchg
push
and
or
arpl
in
loop
jmp
nop
out
loopne
pop
movsb
jne
xchg
pop
inc
push
add
lods
adc
subb
sti
xchg
sbb
movsl
sub
test
and
push
push
fwait
xchg
jecxz
xchg
lds
inc
xchg
push
mov
adc
jno
push
xor
xchg
into
fiaddl
cs
mov
adc
hlt
xchg
pushf
mov
pop
imul
loope
insl
ret
mov
test
add
xchg
xor
xchg
push
fwait
xor
sub
sahf
xchg
mov
inc
adc
xchg
push
add
in
aam
fnstcw
xchg
daa
xchg
aam
fnstcw
push
jb
scas
shrl
dec
pop
test
fsubrs
xor
xchg
inc
mov
or
mov
pusha
dec
xchg
xchg
fcoms
es
push
pop
add
mov
sub
mov
je
and
pop
jb
xchg
dec
seta
enter
push
xchg
jg
add
outsb
je
xchg
push
outsl
bound
and
rcrb
xor
sub
jo
add
lcall
ljmp
sbb
es
aaa
xor
fs
mov
push
shlb
xchg
ljmp
jmp
call
xchg
mov
dec
xchg
out
data16
and
mov
call
and
mov
dec
and
movsb
icebp
jnp
in
test
adc
mov
divl
fmull
mov
cmpsl
pusha
add
cmpsl
lret
int
adc
xchg
jmp
ds
test
and
addr16
call
pop
lea
lret
inc
push
int3
leave
call
negb
inc
int
mov
inc
int
incb
push
in
mov
cmp
pop
insb
push
fstps
xor
pushf
sbb
inc
ss
lret
imul
imul
cmp
inc
fstpl
pop
dec
pop
inc
aas
mov
push
push
inc
int
add
sbb
test
fistl
dec
sahf
in
xlat
push
and
cs
sbb
xchg
push
test
add
adc
xor
adc
popa
or
add
call
push
push
aaa
fildl
cs
and
xbegin
outsb
fnsetpm(287
or
or
cmp
loop
fucomi
nop
push
enter
push
push
push
test
lods
es
ret
pop
and
cmp
loop
lods
mov
and
push
or
fldt
fistpl
cltd
push
inc
loopne
xchg
mov
fistl
jb
test
mov
fstpt
mov
mov
rcr
sub
add
xor
loopne
aaa
out
lock
pop
jns
adc
jno
rcrl
fildl
fldt
call
mov
or
dec
push
outsl
inc
dec
sub
and
xchg
xor
push
daa
pop
sbb
jecxz
fimuls
add
cmpsl
inc
push
mov
jo
mov
daa
mov
cmpsb
popa
adc
fbstp
or
mov
push
call
mov
lock
call
loope
xor
int3
jns
mov
sub
dec
pop
in
add
mov
sbb
add
cld
mov
in
in
in
fdivrl
les
mov
mov
mov
mov
mov
mov
popa
mov
pop
mov
inc
mov
cmp
enter
sbb
in
pop
cmp
mov
jb
sbbl
lret
mov
inc
push
mov
stos
mov
and
xchg
mov
push
jb
xchg
jo
gs
enter
inc
mov
in
cs
push
jb
mov
and
cmp
idivl
xchg
sbb
mov
enter
mov
cmpsl
mov
pop
cmp
mov
jo
gs
inc
push
dec
mov
sbb
and
cs
push
jb
xchg
or
cmp
inc
jmp
mov
inc
and
mov
rorb
xor
jp
mov
test
xchg
and
insl
in
adc
adc
adc
mov
in
xor
sbb
cli
mov
and
call
mov
enter
cmp
inc
inc
pushf
xor
daa
mov
sahf
adc
dec
cli
dec
jl
dec
sub
rorb
add
cwtl
dec
arpl
lea
lock
rsm
inc
mov
xor
aam
push
addb
inc
in
xor
push
pop
push
inc
add
test
stos
add
add
add
inc
shlb
inc
inc
xor
sub
xchg
pushf
xchg
inc
jb
dec
repnz
jmp
inc
cmp
stos
js
ret
fsubrs
sub
les
cmova
pop
mov
leave
sub
testl
pop
icebp
pusha
arpl
push
mov
fstl
inc
sub
sbb
pusha
inc
jg
inc
push
sub
inc
test
lea
adc
aam
push
pop
imul
push
mov
adc
bndstx
or
inc
pusha
xchg
and
cmp
sub
dec
fldl
mov
repnz
inc
lret
sbb
sub
jo
psrlw
mov
bswap
mov
gs
and
aam
dec
jbe
mov
movaps
dec
sub
rorl
jl
dec
push
mov
pop
xor
mov
inc
pop
xor
movaps
popa
xchg
movsl
jnp
maxps
ds
pop
mov
bndldx
xchg
bndldx
scas
adc
sub
add
psllq
inc
pop
mov
sub
xor
dec
int3
bndldx
xor
mov
xchg
push
dec
mov
pop
aam
je
fdivrl
gs
sahf
and
add
jmp
shrb
and
inc
pop
jle
push
lret
or
lea
sub
or
iret
scas
pop
movsl
pop
sub
inc
fdivl
sub
sbb
cmp
push
lret
movsb
lcall
or
dec
pop
jb
aam
dec
pop
mov
pop
xor
or
dec
or
mov
mov
test
adc
imul
gs
add
sub
dec
into
mov
je
or
int
or
scas
push
add
push
mov
mov
push
sub
loopne
dec
dec
testl
pop
inc
sub
fmull
inc
sub
in
js
add
cld
fsubr
fcoml
ret
xchg
cmp
dec
pop
jb
push
call
mov
or
dec
sbb
out
push
sbb
jno
add
push
or
and
jnp
sub
mov
or
movsl
or
push
lret
xchg
push
adc
push
lret
popa
lods
or
loop
out
adc
test
push
inc
sub
mov
bound
lret
dec
sbb
sbb
or
call
sbb
or
sub
push
or
dec
mov
dec
add
sub
sbb
aad
fstpt
or
or
or
or
fwait
and
lret
xor
push
dec
pop
or
insl
stos
dec
pop
pop
data16
mov
xchg
and
into
jnp
test
js
je
nop
imul
sbb
rcrb
jns
mov
xor
xchg
mov
and
dec
or
add
shr
mov
scas
xor
push
sbb
sub
cmpsb
inc
test
inc
pop
jp
stos
jg
mov
xchg
rcrb
sbb
xor
cmc
xor
pop
cmp
or
sbb
add
push
push
fs
dec
or
mov
mov
gs
or
or
or
fstl
xchg
or
xorl
sub
mov
mov
mov
gs
and
sub
imul
inc
or
push
or
pushf
or
fadd
adc
or
ret
jb
or
sbb
sub
mov
xor
push
lret
or
sarb
call
into
cmp
mov
cmp
sahf
int3
cmpsl
push
movsl
or
mov
sbb
inc
sbb
inc
scas
push
xchg
or
adc
into
dec
sarb
jne
stos
pop
add
sub
fisubrs
gs
dec
push
or
shrb
movsb
js
add
or
popf
cmpsb
mov
xor
dec
push
movsl
sub
scas
or
cs
or
sbb
push
lret
or
jmp
mov
push
loopne
lahf
loope
les
dec
dec
pop
subb
rcll
cmp
mov
or
mov
or
sbb
jg
or
sub
movsl
or
mov
add
pop
xchg
pop
xlat
inc
jo
mov
in
inc
call
push
xchg
inc
jb
int
int
sbb
mov
mov
xchg
out
xor
pop
xor
adc
inc
mov
das
push
inc
call
das
nop
inc
enter
pop
mov
das
rcr
adc
jmp
fstps
rcrl
ds
cmpsl
push
mov
and
xchg
pop
insl
jl
mov
xor
gs
mov
push
and
jo
es
cltd
fs
adc
or
push
mov
cmpsb
cli
sahf
arpl
movsl
cmpsb
js
mov
test
test
stc
mov
loopne
push
testb
push
sahf
out
sahf
sub
mov
jns
add
sbb
ss
repz
push
pop
outsb
or
cmp
xchg
test
enter
cmp
jl
or
push
ds
pop
iret
repz
jb
mov
cmp
clc
push
stos
adc
jns
out
cmp
jbe
jns
out
test
into
call
add
push
sbb
xor
fnstsw
out
pop
insb
addb
mov
ret
push
cmpsb
add
push
adc
xchg
mov
rolb
lea
ret
cmp
pop
jl
neg
sbb
push
push
mov
iret
shl
mov
add
push
enter
clc
mov
mov
sbb
or
add
mov
sbb
mov
mov
repz
or
add
test
jmp
jnp
adc
adc
push
adc
xchg
cmpsl
stc
cmp
sbb
sbb
xchg
lcall
sbb
mov
fists
pop
sahf
mov
and
iret
repz
and
js
jns
sahf
cmpsl
stc
cmp
cld
cmp
nop
jns
out
xchg
mov
aas
or
pop
pop
and
cmp
mov
outsl
add
and
test
pop
dec
xchg
out
sahf
addr16
push
cmp
adc
sarl
add
xchg
in
loopne
cmp
repz
ror
enter
iret
repz
iret
movsb
mov
cmp
repz
mov
repz
jo
push
fs
pop
pop
push
push
cmp
repz
dec
inc
inc
cmp
cmp
repz
sub
cmpsl
stc
cmp
adc
add
nop
fcompl
test
push
repz
call
repz
repz
push
dec
inc
xor
imul
mov
rcrb
mov
or
lea
iret
repz
test
push
xor
jns
mov
add
lock
mov
adc
add
mov
or
pop
push
inc
xchg
dec
push
xchg
or
push
and
mov
daa
stos
mov
aaa
xor
push
push
add
rcrb
jbe
and
xor
pushw
mov
es
outsl
push
pop
jbe
movsb
add
inc
and
xchg
sahf
mov
sbb
daa
ret
insl
dec
sbb
push
and
aas
lods
sub
mov
push
daa
xor
out
xlat
push
mov
shll
inc
add
fcmovu
inc
xor
frndint
fidivrs
pop
cmpb
inc
xor
int
pop
shll
jbe
pop
xor
in
add
stos
cmpsl
mov
daa
fimull
in
xchg
aas
andb
shrl
or
pop
sarl
xchg
xchg
push
jno
sbb
fisttps
and
aas
inc
out
mov
imul
inc
ret
jle
pop
xor
aas
sti
enter
push
int3
push
push
lcall
jne
jno
fsubl
mov
incb
popa
daa
movsb
fisttps
mov
outsb
fimuls
ret
imul
mov
mov
loopne
repnz
mov
js
dec
lods
aaa
cmp
sub
ret
insb
pop
xor
mov
add
cmp
pop
stos
outsb
cs
outsb
lahf
mov
fldt
inc
outsl
ds
outsl
gs
jns
movsl
add
movsl
pop
mov
or
je
rorb
xchg
fsubl
jl
cmp
cld
subb
sbb
inc
fsubl
inc
iret
pop
outsl
jne
daa
stc
mov
arpl
add
fisubrl
sbb
outsl
and
mov
mov
jb
add
les
pop
adc
andl
movsb
jae
test
outsl
and
sub
test
xor
gs
mov
sbb
push
pusha
xchg
pushl
outsb
inc
scas
fwait
dec
add
sub
add
inc
ret
mov
push
pop
sub
xor
adc
push
arpl
jecxz
ja
aam
adcl
add
rorl
mov
push
daa
xlat
daa
lea
xor
add
lahf
inc
fdivl
push
xchg
fdivl
pop
adc
andl
lea
dec
arpl
inc
pop
add
lea
rorl
dec
and
arpl
sti
lahf
arpl
inc
arpl
rcrb
addr16
push
xor
dec
imul
rorb
popl
rolb
push
lods
inc
mov
xor
pop
jno
xchg
mov
loop
ja
add
push
xor
pop
int3
xor
cltd
pop
adc
mov
outsl
sbb
xchg
repz
adc
pushf
cwtl
xchg
nop
iret
repz
mov
sahf
out
push
pop
dec
inc
inc
cmp
jns
out
xor
sub
sahf
out
sahf
and
sbb
adc
sbb
jl
xchg
hlt
xchg
in
push
in
fdivrl
out
ror
mov
sahf
out
pushf
mov
scas
dec
outsl
je
insb
push
fs
out
out
jns
dec
mov
push
and
fdivrp
sahf
adc
in
xchg
push
enter
sahf
out
mov
mov
sahf
nop
mov
popf
cmp
repz
inc
cmp
repz
out
adc
lock
loopne
iret
repz
mov
pop
adc
and
and
dec
inc
test
int
shll
inc
xor
popf
sahf
neg
mov
aad
arpl
and
push
add
arpl
jbe
jecxz
push
pop
cs
cmpsb
pop
mov
clc
mov
add
neg
add
pop
enter
das
lock
outsb
stos
lcall
xchg
cs
test
or
fstpt
fildll
and
adc
addl
mov
mov
rolb
shr
add
xor
sti
push
dec
xor
shlb
fwait
clc
fidivl
fbstp
lret
add
cmp
fwait
xor
adc
pop
ss
nop
ss
mov
int
ljmp
in
fisttps
sbb
cmp
cmp
aas
cmp
fstpt
push
cmp
mov
stos
fwait
clc
das
xchg
mov
lret
cmp
cmp
cmp
aaa
fwait
dec
test
inc
or
jnp
cmpl
adc
xor
cmp
cmp
fucomip
mov
mov
ds
ds
faddl
and
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
mov
data16
jbe
jnp
cmpl
movsb
aas
adcl
mov
sarl
div
dec
add
push
xor
jl
xchg
cmpsb
mov
xor
adc
sub
xor
add
xor
xor
mov
mov
xor
xor
into
das
xor
xorb
cmp
xchg
mov
cmp
xor
inc
sarb
push
inc
fmuls
xor
xor
lcall
mov
pushf
xor
xor
xor
xor
xor
xor
and
ds
xchg
ss
mov
nop
icebp
lods
ss
pushl
sbb
xchg
mov
pop
or
loop
cmp
cmp
add
pop
sarl
sarb
mov
fmuls
cmp
xor
sbb
and
xor
cmp
cmp
cmp
add
and
pop
cmp
outsl
cmp
cs
and
loopne
jno
cmp
cli
outsb
cmp
xchg
lock
idivb
cmp
cmp
dec
push
pop
sar
outsb
ja
jle
test
push
mov
iret
sbb
pop
cmp
cld
cmp
push
ds
ds
xchg
decl
cwtl
xchg
xor
xor
xor
xor
xor
sar
sub
xor
xor
jmp
sbb
xor
xor
xor
xor
inc
lds
xor
xor
call
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
mov
ss
aaa
or
push
or
jg
push
xor
aaa
stos
adcb
mov
adc
push
cmp
push
movsbl
mov
sbb
pop
cmpsb
test
mov
dec
xor
cmp
incb
cmp
cmp
cmp
cmp
cmp
cmp
xor
push
xor
cmp
cmp
pop
push
mov
sub
jno
jns
jle
xchg
mov
xchg
mov
lahf
cmp
cmp
inc
adc
cmpb
xchg
cmp
mov
mov
cmp
cmp
cmp
push
push
fs
xchg
xor
push
cltd
xor
insl
xorb
pop
shrl
cld
inc
xor
dec
aas
outsb
inc
cmpl
aas
ret
aas
iret
lea
xor
roll
sbb
inc
jbe
ljmp
jp
xor
xor
xor
xor
xor
ret
clc
jmp
xor
jo
in
pop
xor
xor
mov
ja
or
cmp
insb
and
xor
leave
hlt
xor
or
adc
push
ss
icebp
push
jg
ss
arpl
stos
add
ss
ss
adc
aaa
jne
jle
mov
jl
cmp
cmp
mov
out
or
sbb
cmp
cmp
cmp
adc
lcall
aaa
or
cmp
cmp
mov
mov
outsb
ret
push
icebp
cmp
cmp
scas
in
inc
sbb
out
ds
or
cmp
inc
mov
mov
and
xor
xor
ja
mov
ss
xor
xor
xor
xor
xor
movsb
xor
jg
mov
xor
xor
xor
xor
xor
xor
sbb
pushl
xlat
xor
ja
mov
pushf
ss
mov
inc
adc
into
and
or
push
cmpsb
xor
and
jb
loop
cmp
pop
cmp
lcall
rol
cmp
jmp
std
cmp
inc
outsb
sbb
ds
imul
mov
lret
aas
lods
pop
int
xor
cmp
mov
xor
or
out
sub
clc
call
cmp
dec
cmp
pop
cmp
jg
jge
outsl
cmp
xor
xor
xor
push
xor
xor
xchg
mulb
cmp
or
pop
dec
es
xor
test
lcall
aaa
jnp
lds
pusha
out
xor
xor
and
cmpsb
das
mov
jno
test
xorb
test
and
je
call
sbb
bound
lods
push
mov
dec
int3
inc
fdivl
call
cld
cmp
rolb
xchg
bound
lds
andb
or
jecxz
xor
out
or
sub
push
cmpsb
test
mov
mov
xor
mov
xor
mov
xor
adc
adc
sbb
sbb
inc
subb
and
sub
dec
xchg
inc
xor
push
xchg
icebp
pop
fldl
pusha
xor
xor
sbb
jl
pop
xor
incl
nop
xor
add
cmp
xchg
mov
mov
les
sub
fdivs
fadds
jo
je
js
nop
xlat
mov
add
jle
cmp
push
ret
jp
cmp
push
xor
outsb
jo
divb
cmp
bound
sarb
loopne
loopne
cmp
mov
mov
fsubr
roll
daa
cwtl
out
mov
loopne
or
adc
sbb
sub
or
insb
xor
xor
xor
xor
xor
ss
hlt
dec
adc
xor
push
xor
xchg
icebp
shll
mov
sbb
push
ret
arpl
xor
jmp
incl
xor
xor
xor
xor
xor
sub
enter
xor
loop
adc
cmp
push
sbb
xor
aam
xor
xor
cs
hlt
inc
xor
xor
push
xor
pop
xor
mov
decl
jo
je
js
jl
andb
incl
mov
xor
xor
xor
xor
into
rclb
shll
int3
fimull
push
ret
cmpsb
mov
add
cmp
outsb
sbb
pop
push
cmp
leave
call
inc
add
add
mov
fadds
in
call
and
jmp
push
lds
and
sub
lock
mov
iret
popa
jp
ljmp
aad
sahf
xor
dec
lcall
sub
mov
enter
imul
fcompl
sub
sar
cmp
mov
sbb
fisubl
leave
and
out
xchg
and
daa
rcl
push
xchg
movsl
inc
or
pushl
jl
loop
dec
divl
jne
or
jbe
push
sarl
push
pop
movsl
test
fstl
xor
xchg
dec
mov
popf
das
dec
xor
imul
push
mov
lcall
filds
out
and
add
jnp
stc
pushf
fistl
mov
inc
repnz
decl
dec
pop
les
sub
mov
xchg
mov
stc
pop
jb
xor
ljmp
adc
popf
sub
push
lds
out
add
fwait
mov
cmpsb
jmp
adc
lcall
ret
add
mov
pushf
dec
fdivl
pop
pop
les
fbld
leave
dec
jl
ficoml
sahf
in
ljmp
mov
xchg
imul
es
aas
dec
fs
inc
mov
xchg
unpckhps
subps
lcall
sub
nop
mov
sbb
in
sbb
sbb
pusha
xor
cmp
mov
ds
outsl
or
test
dec
jno
inc
loope
mov
push
call
pop
insl
mov
dec
mov
pop
imul
push
iret
movsb
adc
in
cmc
mov
ret
pop
lock
inc
adc
sub
mov
pop
xor
dec
xor
sahf
xor
lcall
fidivs
mov
fsubrs
shll
mov
mov
jmp
ss
lret
xchg
test
inc
incl
int3
insl
cltd
stc
in
inc
dec
jle
aas
cmp
pop
jae
test
shl
jnp
cwtl
jp
jne
xor
mov
and
cmp
mov
push
push
mov
out
clc
pop
mov
lret
mov
and
ss
int
stc
cli
mov
insl
cmp
lcall
cmpsb
xor
mov
inc
jae
jno
pop
lea
jbe
test
in
fstl
pusha
fidivrl
aad
decl
sbb
out
mov
cmp
pusha
xor
fimull
and
lock
sub
add
dec
arpl
movsl
or
jecxz
stc
loop
fisttps
lods
jmp
decl
loopne
xorps
cld
cltd
xchg
jns
and
push
push
push
mov
orb
xchg
cmp
bound
jno
sbb
push
cmp
out
mov
in
xchg
and
push
leave
lret
enter
xor
cmc
xor
adc
js
adc
lods
das
push
add
and
cmp
jp
shlb
jge
and
jmp
call
or
lods
dec
cmp
test
adc
hlt
xchg
mov
or
lock
add
ret
cltd
fwait
xor
mov
pop
pop
jae
and
fistpll
pop
loopne
mov
stos
xor
ljmp
mov
inc
jl
mov
cs
pop
cltd
xchg
test
insl
cmp
enter
ss
mov
decl
xor
sbb
cld
push
fcmovbe
mov
mov
xchg
adc
pop
fildl
lea
incl
sub
lret
mov
mov
into
pop
pushf
scas
cmc
fnstsw
out
adc
sbb
inc
aad
adcl
outsb
inc
push
sub
and
aaa
pop
xchg
int
loope
dec
sub
loope
repz
add
cwtl
cmpb
jmp
and
dec
lret
push
mov
imul
popf
mov
into
cmp
call
jo
iret
adc
inc
mov
inc
cmpsl
xlat
dec
and
jmp
jmp
jnp
jg
movl
das
cmpsb
push
adc
sbb
or
mov
mov
and
gs
decl
mov
mov
adc
out
push
inc
fstl
pushf
jg
xor
sbb
inc
mov
fidivl
cmp
mov
mov
inc
or
aad
out
mov
push
adc
add
jmp
enter
push
lea
sub
jle
jge
test
sti
lods
cmp
xchg
fimull
push
das
dec
mov
pop
and
scas
clc
lret
and
or
fcmovb
mov
fdecstp
pop
std
aaa
mov
inc
jb
dec
inc
imul
pop
lea
popf
incl
fstpl
push
jmp
in
xchg
scas
push
mov
sarl
dec
cmpsl
repz
incl
pop
rorb
adc
jl
dec
push
adc
outsl
inc
jo
ljmp
push
sub
adc
and
and
jge
fldl
xor
fdivrs
adc
loop
jbe
ljmp
stc
fsubrl
lcall
popa
sub
aad
sahf
sahf
jmp
inc
cs
lcall
movsl
jecxz
lret
jl
mov
and
adc
cmp
mov
xchg
mov
cs
xchg
jmp
xorb
xchg
fldcw
push
aaa
int
pop
popf
fmuls
dec
call
ret
std
xor
and
lods
sub
les
cwtl
rcr
mov
ljmp
movsl
sbb
mov
jno
add
mov
push
xchg
add
incl
js
rcrb
mov
jp
mov
int3
sub
xor
xchg
std
mov
cmp
pushl
jno
mov
add
mov
mov
add
mov
cld
xchg
mov
lds
out
lahf
push
xchg
xchg
sbb
lcall
pushl
mov
cmp
push
sub
repnz
mov
or
fcomip
ljmp
pusha
xchg
icebp
sbb
and
test
out
divb
mov
repz
decl
cmpsl
inc
add
jne
test
xor
ret
daa
cmove
sar
ljmp
pushf
out
fnstcw
mov
sbb
and
ljmp
mov
pushf
lcall
sub
sti
cmp
mov
mov
jmp
dec
pop
xor
aas
ljmp
gs
push
in
sub
jb
rol
push
cmp
shrl
pop
cmpsb
cmc
pushw
lcall
xlat
daa
xchg
jbe
aas
lds
imul
mov
bound
fadd
mov
mov
inc
sbb
xchg
out
fidivrl
pop
xor
int3
mov
call
std
dec
movsl
add
inc
pop
jmp
jl
jnp
popa
jp
rorb
mov
jmp
test
dec
cmp
andl
shr
fcomip
movsb
data16
pop
add
and
stos
mov
ja
cmp
mov
ret
pop
clc
orl
add
xor
scas
in
jb
jl
inc
ds
arpl
incl
jl
or
test
add
push
cmc
ss
dec
pushf
das
cmp
and
jne
sbb
sbb
xchg
sub
adc
out
xchg
cmp
pop
loop
xchg
xchg
push
lods
loop
loop
fildll
incl
dec
xchg
jle
mov
pushl
fmulp
addr16
je
inc
cmpsl
mov
aaa
push
xchg
mov
pop
pusha
pushl
lcall
outsb
outsl
mov
xchg
movsb
add
dec
into
cwtl
lret
shll
adc
loope
incl
add
cmp
in
jno
or
pop
dec
lret
ljmp
dec
flds
ret
xor
cmc
call
jo
out
pushl
test
jmp
lds
xchg
cmpsb
push
jl
int
jle
decl
xchg
inc
mov
jecxz
fmul
and
dec
clc
insl
decl
aas
and
cmc
roll
les
les
sbb
jmp
jp
adc
data16
push
adc
roll
bound
inc
dec
add
mov
pop
or
pop
outsl
hlt
outsl
mov
and
sbb
popa
push
pop
xorb
repnz
in
add
jne
or
mov
cmc
inc
mov
jo
fcomip
push
push
push
xchg
call
andl
xchg
rcrb
inc
stos
push
shlb
lahf
outsb
mov
out
stos
adc
js
jb
icebp
fsubl
mov
jmp
jns
xchg
push
pop
mov
mov
cmp
loope
mov
jp
dec
mov
sar
pushl
sbb
int3
andb
rcrb
xchg
mov
mov
pusha
adc
sbb
cmp
cmp
cmc
fisttpl
add
test
incl
xor
nop
inc
out
and
popa
lret
mov
xor
dec
gs
incl
add
push
nop
adc
sub
outsb
cmp
or
sahf
or
decl
adc
rolb
and
pop
lock
pop
cld
lcall
cmc
dec
test
mov
dec
sahf
pop
or
add
ja
pop
hlt
lret
ret
pop
repz
scas
ret
cmp
call
lods
fwait
sbb
insb
add
mov
adc
jns
incl
fbstp
int3
push
and
adc
mov
fs
add
sahf
enter
dec
incl
jle
clc
mov
inc
inc
xor
jns
ret
mov
call
ret
mov
sub
dec
arpl
push
xor
lcall
imulb
cmpl
jecxz
addl
ss
popf
mov
std
rorl
movl
ffree
push
sbb
decl
stos
lods
ret
adc
add
js
pop
pop
jae
xor
push
dec
inc
popf
int3
insl
adc
jno
repnz
mov
in
pushl
add
mov
mov
pop
ja
call
popa
jbe
lods
dec
push
mov
test
mov
adcl
std
ljmp
decl
pop
pop
dec
mov
jbe
test
bnd
test
fsubrl
jmp
sbb
jg
arpl
arpl
repnz
lea
mov
lods
cltd
mov
decl
ret
sbb
movsl
and
and
decl
pop
jb
mov
mov
aas
lret
jge
outsl
into
orl
sbb
incl
xchg
ss
fists
jne
adc
mov
loopne
pop
mov
cmp
pop
sbb
in
out
add
incl
testb
mov
xchg
daa
push
pop
js
jg
inc
outsl
and
pop
jp
fscale
or
add
add
icebp
shrb
sarl
incl
add
mov
push
lea
mov
jmp
jmp
pop
pop
sarb
sbb
out
push
jge
inc
aas
jmp
dec
push
ds
imul
jmp
outsl
push
add
xor
aad
cltd
mov
dec
sub
mov
test
jo
xchg
test
loop
pop
mov
sbb
cs
imul
mov
leave
pop
dec
xchg
cmp
movsl
int3
mov
sub
xlat
arpl
cmovp
jecxz
incl
ret
fsubl
loopne
cmp
ja
jnp
mov
inc
inc
adc
mov
fwait
dec
in
pop
sub
mov
movsl
outsb
lods
leave
aas
jno
loope
push
mov
pop
movsl
call
push
mov
loopne
sbb
in
stos
lcall
aaa
int3
xchg
jbe
xor
mov
fsubs
decl
dec
outsb
jg
sahf
mov
sahf
push
xchg
imul
out
and
adc
ja
fmulp
leave
pushl
movsl
mov
fwait
jp
bound
inc
mov
jp
jecxz
mov
xor
push
outsb
inc
ljmp
cmp
fidivl
xlat
or
call
data16
pop
cmp
lock
or
jo
pop
std
pushl
pop
and
pop
or
je
imul
fbstp
and
sbb
inc
dec
fidivs
decb
push
loop
add
dec
ret
mov
lret
lods
hlt
das
ljmp
incl
fildll
decb
jbe
mull
imul
dec
std
cmp
je
add
sub
dec
loop
fdivr
lds
xor
call
xor
sub
inc
xor
test
sahf
cltd
mov
cmp
lea
jo
loop
mov
ror
jns
add
ficomps
pop
or
ljmp
cmpsb
es
decl
scas
xchg
add
out
cmpb
mov
cli
mov
imul
insb
ss
ljmp
and
dec
jl
fidivl
rcrl
mov
xor
pushf
loope
mov
mov
pop
imul
incl
jo
sbb
in
lods
mov
std
jns
and
xor
sbb
ljmp
popa
pop
adc
ljmp
jnp
aam
jp
xchg
sbb
xchg
ss
incl
sub
jno
hlt
pop
ja
xor
xchg
popf
jne
xlat
fsubl
jmp
test
xor
pusha
or
scas
test
push
fsubrl
and
call
cmp
cmpb
lock
int
stc
mov
mov
imul
and
incl
and
or
and
in
and
push
jo
fsubrs
roll
ljmp
loopne
jnp
sub
test
movb
cmp
xor
add
popa
mov
xor
movsb
dec
out
gs
in
inc
xchg
test
clc
ja
mov
rcrb
jb
push
jg
mov
cmpsb
xlat
mov
xchg
stos
inc
lods
in
lock
jmp
push
outsb
dec
sub
push
dec
dec
sbb
jge
mov
dec
dec
xchg
sub
lock
stos
inc
lret
decl
aad
out
cmc
adc
push
sub
cmp
out
pop
adc
adc
or
and
ficoms
subb
std
push
cmp
sub
adc
js
jnp
pusha
fs
jmp
outsw
cmp
inc
push
cmp
sub
dec
cmc
mov
jns
cltd
cmp
ds
fwait
js
decl
mov
movsl
fdivrl
dec
fistpll
and
sub
adc
jnp
push
popa
loop
les
fldl
xor
aas
call
mov
xchg
fiadds
xchg
or
or
jl
push
jmp
ds
fcompl
push
fstpl
xchg
inc
and
push
inc
mov
mov
xchg
lock
pop
loop
sahf
ret
push
cmp
fs
ljmp
dec
call
iret
fs
dec
lods
icebp
jge
or
add
cmp
mov
das
roll
and
in
pushl
push
jmp
cmp
or
nop
mov
xor
jnp
mov
jnp
lcall
jle
je
cmpsb
mov
xor
out
dec
mov
xor
jne
sub
hlt
mov
fildl
mov
or
pop
and
push
inc
call
incl
or
test
inc
ljmp
adc
call
add
fsub
adc
adc
iret
in
cmp
mov
xchg
test
in
jns
dec
push
out
test
dec
in
adc
frstor
popa
jmp
lcall
test
loop
dec
mov
dec
call
inc
ljmp
stc
sub
rorl
mov
icebp
xchg
repnz
push
stos
outsl
xchg
push
push
call
cwtl
scas
aam
add
xchg
es
adc
cmpsl
pushf
pop
mov
inc
mov
jmp
xchg
cld
aad
lods
orb
pusha
dec
jg
push
insl
dec
or
sub
out
call
add
add
mov
dec
pop
jb
xchg
inc
in
mov
test
mov
in
mov
xchg
lcall
sub
dec
cltd
and
loop
sahf
cmp
insl
repz
idivb
pop
inc
add
add
cltd
add
adc
jg
leave
inc
hlt
es
dec
sbb
inc
and
pusha
out
dec
daa
das
mov
add
jle
mov
shll
inc
jnp
mov
cwtl
daa
jecxz
test
in
lds
pushl
cmpsb
pusha
cli
iret
lods
stc
mov
aas
pusha
jge
dec
adcb
push
lcall
pushl
xor
jge
aas
mov
or
ret
daa
outsb
mov
mov
incl
xchg
pop
sbb
mov
call
pop
lahf
mov
sub
mov
lahf
in
jle
push
and
lcall
pop
aad
rcr
cmp
mov
repnz
or
mov
incl
insl
insl
adc
dec
push
decl
cmc
push
sub
sarl
or
pushf
frstor
nop
xor
pop
cld
mov
jp
push
ljmp
mov
adc
add
jge
lea
cs
mov
jno
lcall
or
mov
loopne
sbb
out
cmp
push
xor
adc
or
outsb
xor
cld
ljmp
fucomip
cmpsl
cmp
adc
loope
pop
jno
cmp
pop
lock
jne
lods
mov
xor
arpl
idiv
fistps
lret
out
sbb
mov
mov
xor
push
sar
jmp
cwtl
mov
dec
into
cmp
dec
pop
pushf
or
push
lret
dec
sahf
adc
inc
lcall
call
leave
addr16
lcall
jae
jne
jb
mov
lods
adc
push
mov
lcall
and
jg
nop
or
lock
jns
aaa
push
jle
xor
dec
repz
ljmp
fndisi(8087
pop
sbb
mov
lcall
mov
mov
popa
and
mov
and
pop
pushf
addr16
lret
mov
inc
movsl
js
aam
aas
sarl
sub
incl
mov
push
data16
cmpsb
outsl
xor
lret
xor
ja
and
in
jl
mov
jns
xchg
add
rcr
cmp
scas
mov
cmp
out
inc
les
test
ret
iret
aaa
shrl
sbb
cmc
aam
call
cwtl
mov
push
out
and
jecxz
sarl
int
and
fsts
fwait
cli
test
call
jge
mov
mov
adc
std
mov
push
aas
jecxz
add
scas
jnp
xor
and
mov
push
es
fisubs
pop
jmp
mov
mov
lcall
in
mov
push
or
test
lcall
in
pop
mov
mov
add
in
loop
xchg
or
add
jnp
shlb
cld
rcrl
add
divb
cwtl
ljmp
aas
cmp
repz
and
jge
pop
decb
sbb
out
icebp
jo
xlat
ljmp
inc
jmp
pop
loop
int
jp
lods
fsqrt
mov
push
jl
inc
or
xchg
movsb
lcall
fistl
sahf
ljmp
pushf
lcall
lods
or
jle
xor
cmp
imull
jp
pushf
ljmp
pop
rep
orb
cwtl
leave
into
icebp
nop
push
push
in
cmp
cld
pop
loopne
sub
mov
stc
sbb
xchg
mov
push
mov
push
mov
mov
cltd
lcall
enter
das
pushf
popa
xchg
mov
in
fcos
decl
addl
cmp
loopne
inc
out
mov
sbb
cmp
jg
ljmp
mov
ljmp
and
push
dec
js
cmpsl
xchg
pop
hlt
call
push
scas
adc
cmp
jle
fstpl
stos
sub
mov
xor
xchg
cmpl
mov
out
dec
adc
push
pop
inc
xor
lcall
std
enter
daa
ret
xchg
in
bound
jmp
ja
pusha
mov
cmp
jg
icebp
xchg
lods
push
loop
mov
popa
in
in
cmpsb
orl
out
js
fadds
pusha
or
jg
incl
or
inc
pop
mov
push
pop
xchg
jl
ss
dec
scas
jle
mov
jmp
xchg
aad
mov
mov
and
lret
push
push
add
inc
fldt
leave
pusha
sub
lcall
jo
lret
or
scas
jb
dec
adc
push
xor
mov
jp
sub
decl
sarl
test
mov
mov
in
add
add
jmp
or
inc
fsubl
and
add
or
movsb
test
aam
fbld
mov
adc
pushf
pop
adc
cmc
add
push
sbb
xlat
or
xchg
lahf
mov
clc
push
pop
fsubs
lahf
fs
dec
xchg
jae
sub
mov
mov
call
cld
jmp
aam
sub
mov
xchg
xchg
xchg
xchg
jne
inc
sbb
add
jbe
daa
clc
jg
dec
ret
and
pop
inc
mov
pop
ljmp
push
adc
dec
scas
push
jbe
mov
out
and
mov
pop
jne
mov
movsb
push
sub
les
std
pop
push
jae
xor
int3
mov
cmp
lret
and
or
mov
movsb
clc
aad
pop
lods
rorl
loope
ret
lret
mov
in
into
hlt
xchg
decl
push
push
pop
stos
push
sbb
lret
sahf
dec
dec
jecxz
repnz
xchg
repz
dec
incl
lcall
sub
mov
jo
add
ficoms
ljmp
pusha
mov
sub
test
push
in
lods
xor
cmp
lock
mov
mov
bound
jns
mov
ljmp
xchg
mov
call
push
scas
addl
bound
mov
sarl
icebp
mov
xchg
fmuls
mov
cmp
cld
in
in
fs
jge
pop
in
aad
mov
mov
lea
out
sti
daa
cmp
sbb
jle
inc
out
add
fmul
sti
test
xor
fildll
pop
add
or
movsl
insl
ljmp
sbb
pop
jno
push
inc
hlt
fidivl
fildll
lods
or
dec
dec
mov
jl
faddl
cmp
and
ljmp
push
sbb
cmp
shrb
and
push
dec
fimuls
xor
inc
clc
sar
incl
jecxz
or
mov
mov
jb
adc
mov
mov
daa
clc
mov
add
call
aam
xor
mov
es
int
mov
subb
dec
cld
inc
jg
or
cld
mov
andb
add
add
xchg
icebp
mov
loopne
cmp
clc
cmp
inc
mov
pusha
inc
lods
or
daa
push
lds
pushf
fisttps
cmp
jmp
cmp
mov
test
aad
iret
inc
fdiv
es
xor
cmpsb
int
xchg
cmpsl
cmpsb
stos
xor
loop
push
sbb
cmpxchg
shll
cwtl
and
sahf
mov
mov
leave
jg
ljmp
push
rcrl
cmc
sub
mov
inc
std
jge
fs
inc
sar
cmp
jns
cld
jmp
xor
jnp
and
sahf
xchg
aaa
push
clc
and
inc
jb
ljmp
mov
sbbb
scas
fs
lahf
inc
sbbl
sbb
out
mov
ljmp
cli
call
and
mov
into
xchg
cmc
pop
adc
lea
jo
mov
inc
mov
ret
pushl
subl
outsl
xor
cld
in
lods
mov
int3
out
mov
mov
inc
imul
mov
ss
mov
fldt
add
les
incl
cld
and
pop
addr16
sub
xchg
mov
scas
clc
ffreep
outsb
outsb
push
cmp
jbe
cmovne
xor
sbb
sbb
aaa
sti
mov
cmp
aad
jno
sub
pop
sbb
adc
jmp
inc
shlb
jo
lods
pop
aam
fcomi
lahf
jno
stos
fidivl
jecxz
cmp
jp
imul
pop
icebp
or
shrl
mov
mov
dec
rorl
sarb
adc
arpl
aaa
pop
jge
lcall
mov
pop
adc
jp
lahf
repz
and
pop
pusha
cmp
or
lcall
jecxz
mov
inc
sbb
loope
enter
mov
std
push
push
cli
pop
lea
sti
test
sbb
inc
jg
call
jo
cmpsl
or
daa
mov
adc
inc
int3
outsl
nop
jl
push
fsubrp
inc
sbb
sbb
jmp
fcoms
fiaddl
pop
or
int3
inc
cwtl
call
mov
adc
adc
jle
lock
loope
aam
popf
jo
jge
ljmp
xchg
and
notl
adc
push
fstpl
in
lcall
imull
incl
int3
jmp
sbb
push
mov
sub
dec
mov
in
lods
push
mov
fidivs
pop
and
pop
nop
mov
leave
mov
cwtl
jnp
test
les
sahf
mov
mov
cltd
mov
fists
jge
sub
mov
cltd
cmp
push
xor
stos
fsubrl
jg
shrl
out
imul
jmp
or
imul
xor
loop
aaa
jmp
insb
cmp
xchg
push
jnp
pop
ljmp
sti
xchg
jg
push
ja
dec
leave
push
and
dec
mov
xchg
fisttps
dec
in
iret
int
sbb
cmp
mov
clc
incl
add
mov
xor
ljmp
gs
inc
xor
rclb
push
aam
nop
jmp
adc
call
pop
mov
cmp
push
inc
xchg
cld
bnd
sar
jae
out
jp
sub
testl
ror
and
mov
ja
fisubrs
call
pusha
dec
pusha
rcl
ss
xor
sub
inc
sbb
pop
cltd
xadd
imul
cmp
or
sbb
inc
xchg
cmc
psubw
inc
mov
sti
cmp
mov
cmp
mov
mov
dec
mov
jmp
pop
in
pop
pop
jae
fdivp
iret
push
lret
push
inc
mov
outsl
jl
in
or
sbb
mov
mov
dec
out
jns
movsb
push
xchg
lret
jl
push
ss
testb
ljmp
inc
daa
dec
inc
imull
inc
mov
xchg
add
repnz
inc
mov
out
ljmp
outsb
inc
clc
xchg
jb
insl
fisttpl
xchg
push
jbe
andl
ljmp
rcl
jp
je
mov
fidivrs
xchg
scas
mov
inc
and
jmp
mov
sahf
fistps
xchg
pop
shl
push
xchg
lds
imul
adc
pop
mov
movsl
or
xor
cmpsl
pop
jle
push
int3
sbb
push
lahf
out
cmpsb
mov
fimull
adc
call
pop
xchg
jno
dec
call
or
ja
pop
cs
cmp
inc
inc
clc
cmp
lods
dec
addr16
cwtl
popf
sub
fsubp
mov
bound
loope
andb
lods
xor
adc
popa
daa
pop
xchg
loope
out
cmp
popf
mov
ljmp
shl
arpl
dec
jle
xchg
cwtl
mull
mov
movsl
push
jnp
and
inc
lcall
mov
push
push
jmp
ja
adc
int
jle
mov
adc
ljmp
clc
pop
mov
push
lock
fdivrl
jp
or
dec
stos
add
xor
mov
fcmovu
xchg
lock
aad
lcall
mov
dec
mov
dec
jle
rcrb
push
lds
xchg
aam
sti
std
sbb
test
out
inc
cmp
fbstp
in
flds
repnz
lods
aam
mov
decl
and
insb
fstps
mov
and
test
add
cs
nop
nop
inc
cli
mov
test
push
mov
sti
scas
int
into
add
call
decl
and
mov
ret
or
xlat
fisttpll
add
ljmp
je
adc
repz
cmc
push
pop
arpl
shlb
xor
fdivs
rcrl
mov
jp
repnz
insb
mov
outsb
and
and
cmc
addb
movsb
mov
in
bound
push
int3
pop
fsubr
sahf
pop
or
mov
mov
out
pop
pop
mov
leave
mov
dec
mov
cmp
pop
fildl
adc
jg
ljmp
cmpsb
dec
icebp
dec
mov
popf
xchg
dec
pop
cmp
xchg
adc
leave
push
flds
fcomip
or
jl
ljmp
je
mov
cmp
push
cmpsl
mov
push
or
call
jge
sbb
sbb
jl
ja
movsb
mov
loopne
mov
inc
xor
out
mov
sub
jnp
imull
sbb
xor
cmp
cmc
xchg
js
cltd
pop
dec
adc
cltd
pushl
test
add
clc
gs
xchg
xor
in
push
arpl
push
inc
pop
les
sar
ljmp
stos
test
aaa
dec
sbb
pop
scas
fisubs
pushf
test
std
out
test
decl
dec
movsl
add
outsl
arpl
cmp
push
jecxz
and
incl
sbb
sub
adc
xor
pushf
jo
push
pop
iret
imul
push
sahf
push
and
pop
adc
ret
push
rcrb
std
out
and
stos
push
or
outsb
mov
xchg
cmp
imul
cs
lock
jns
add
cli
pop
pop
push
add
fnstenv
stos
inc
mov
adcl
sub
stc
push
fbld
outsb
fistpll
inc
mov
pushl
or
das
sub
mov
push
xor
push
mov
push
push
roll
cwtl
mov
out
call
ljmp
bound
xor
mov
jmp
jb
cmp
pusha
icebp
push
movsb
lcall
adc
call
rorl
stos
call
hlt
mov
ffree
sub
jle
pop
jg
call
dec
jl
cmp
mov
xor
mov
inc
mov
hlt
mov
add
js
inc
testb
repz
lcall
push
pop
cmp
aad
inc
in
bound
xchg
stos
in
push
imul
push
sub
loop
cwtl
out
int
xchg
nop
hlt
clc
jp
mov
call
add
lock
out
xchg
xor
jbe
gs
add
cli
jnp
sbb
add
in
bound
jae
incl
jb
mov
jns
popf
inc
pop
test
clc
pop
sub
call
and
stos
cli
js
mov
incl
jl
push
outsb
nop
test
cmpsl
lock
imul
test
push
mov
inc
adcb
jb
pop
mov
pusha
sbb
int3
decl
scas
push
jg
push
jb
incl
push
out
shl
add
add
std
lret
cmpsb
sub
das
jne
sub
sti
dec
test
add
sub
lret
mov
addr16
ja
fbstp
xchg
ja
iret
aam
lcall
pushl
cmp
imul
push
mov
dec
shl
repz
faddl
in
lods
mov
cmp
push
sbb
mov
in
cmp
les
lock
nop
mov
lcall
add
and
adc
jmp
and
push
aaa
mul
and
cmp
jg
gs
mov
mov
sub
rcll
cmp
and
in
add
jmp
or
xchg
xchg
pop
and
js
stos
add
hlt
inc
inc
xor
das
mov
stos
pop
cmp
fucomi
sub
mov
inc
decl
lret
cltd
loopne
fiadds
jae
cmp
mov
push
push
fsubrl
loop
call
and
es
push
shlb
stos
cltd
aaa
and
push
pop
add
mov
clc
pop
lock
push
iret
xchg
out
push
lea
out
jns
mov
jecxz
jmp
sarb
mov
pop
pop
adc
test
jno
int3
dec
imul
mov
sbb
es
xchg
out
inc
mov
mov
pop
stos
loop
mov
mov
stos
pop
incl
stos
pop
cs
data16
imul
cmp
or
decl
mov
mov
mov
mov
out
cld
popa
fcmovnu
adc
sub
mov
lcall
push
cmpsb
push
inc
mov
xchg
sbb
xor
ljmp
insl
popa
clc
jmp
int
repz
xor
fistpll
hlt
mov
std
xor
fildll
scas
or
enter
or
cmp
int
daa
push
scas
push
sub
add
xchg
add
incl
cmp
adc
mov
pop
inc
unpckhps
sbb
xor
loopne
cld
jg
pop
xchg
adc
inc
push
lods
inc
push
popf
pop
div
rolb
sub
add
xor
gs
ljmp
sub
std
mov
ret
fstps
mov
mov
aaa
decl
inc
cmp
push
pusha
fisubrl
cmc
jbe
push
inc
scas
scas
fst
adc
ljmp
cs
and
mov
cwtl
scas
pusha
and
pop
dec
pop
fcmovu
aam
lods
wbinvd
movsl
xlat
ficoml
outsb
sti
inc
incl
or
bound
jno
sahf
cmpsb
cs
test
xlat
in
nop
aaa
movsl
imul
in
cmp
pop
and
cmpsb
aas
and
xchg
adc
negb
jnp
ret
xor
push
adc
cmc
xor
jmp
jge
sarl
enter
jmp
rclb
loopne
xchg
ljmp
call
test
rclb
sti
or
or
mov
inc
jmp
jmp
dec
mov
mov
lret
xchg
fisubrl
cmp
or
incl
fisubl
popf
out
dec
pop
mov
stos
addl
es
or
incl
ficomps
jno
sub
popa
roll
rclb
stos
out
in
ljmp
int3
data16
mov
addr16
cwtl
jne
xor
xor
add
jb
and
mov
mov
mov
imul
das
in
gs
std
pop
ds
xor
fwait
call
cwtl
stos
data16
in
jmp
imul
into
nop
outsb
mov
call
clc
jne
lret
sbb
mov
push
mov
loop
jle
into
sub
dec
jne
movsb
pop
js
imul
sar
push
jno
adcb
adc
repz
scas
js
packssdw
repz
pushl
enter
xor
sub
jecxz
or
imul
in
mov
loop
adc
fildl
jns
xchg
jb
das
xchg
test
sbb
cwtl
mov
aad
subl
and
pop
cmp
out
ret
xor
test
inc
loope
call
sarl
scas
clc
lcall
decl
sar
add
fmull
pop
cwtl
ja
sub
add
jmp
movsb
ss
fnsave
dec
xor
movb
jl
add
ja
nop
and
cmp
inc
inc
jmp
icebp
in
loop
sti
xor
stos
adc
mov
sub
popf
je
lods
push
or
decl
lds
rorb
lahf
cmc
mov
adc
outsl
andl
std
fsubs
sbb
mov
lahf
fbstp
sti
loopne
scas
ss
sti
jmp
shlb
push
push
jg
aad
sub
mov
cmp
mov
xor
sbb
dec
adc
scas
jl
dec
inc
inc
mov
pop
push
jns
sbb
mov
test
call
mov
mov
out
xor
decb
cmp
mull
xor
scas
incl
xchg
es
negl
pop
and
cmpl
pop
lock
jl
xor
pop
xor
xchg
int
lock
push
arpl
decl
inc
pop
cmp
lods
jl
and
clts
stos
and
imul
call
clc
cmp
xor
clc
sub
fidivl
aad
sbb
add
sbb
lcall
push
repz
mov
jae
fdivrl
jg
mov
push
jl
int3
ret
call
mov
cmp
repnz
es
dec
incl
push
dec
out
stos
push
daa
or
clc
call
push
fbstp
jle
cltd
sub
test
push
sub
fcomip
lcall
lods
lods
sbb
pushf
mov
addb
jae
adc
in
ja
insb
inc
incl
mov
fimuls
ret
mov
and
adc
mov
incl
push
xlat
pop
mov
cltd
in
adc
data16
subb
sub
adc
pushl
pop
pop
push
dec
leave
jl
loope
call
test
call
daa
dec
hlt
sarl
push
lea
mov
roll
movsl
pushl
gs
cs
mov
pop
mov
push
xor
imul
out
outsb
jecxz
ljmp
push
in
xchg
mov
lret
dec
fwait
mov
jle
pop
xchg
pop
xor
push
std
incl
jbe
cmp
sti
out
repnz
sub
loope
mov
push
mov
pushl
fsubrs
sti
mov
sahf
pop
cltd
pop
mov
mov
xchg
xchg
lods
mov
pushf
call
adc
jo
adc
gs
adc
in
cmpsl
fld
xor
lret
push
xchg
and
decl
enter
lock
jp
lea
pop
sarb
pushl
inc
cmp
je
mov
iret
xchg
push
pop
add
call
push
cmp
jb
negb
push
outsb
out
loopne
xor
xchg
incl
jecxz
jmp
das
xchg
out
dec
ja
inc
cmp
add
fildll
sahf
in
sbbb
std
pop
sbb
data16
aam
adcb
orb
xchg
pusha
cmp
jno
out
cli
jmp
dec
lods
mov
into
mov
mov
cmc
es
jge
jbe
pusha
mov
jb
decl
enter
jns
lds
test
mov
insw
hlt
sub
rcr
jnp
loopne
push
xlat
incl
out
sbb
je
cltd
dec
in
sbb
inc
add
push
xor
sub
incl
dec
das
ljmp
jb
das
push
frstor
mov
imul
orb
decl
mov
fldcw
imul
push
dec
xorl
dec
cmp
add
decl
icebp
xchg
xchg
push
mov
popa
cmp
inc
jmp
dec
xor
out
push
aas
orl
pushl
pusha
aad
mov
pop
mov
and
sub
or
lcall
jg
and
jne
sti
dec
dec
dec
adc
fbld
mov
idivb
incl
mov
push
stos
icebp
dec
ja
mov
ret
push
mov
mov
call
rorb
das
jle
mov
push
push
xchg
stos
xchg
and
dec
pusha
jle
neg
cmp
xlat
jmp
xchg
xor
cmp
pop
and
inc
push
push
pop
icebp
mov
inc
lcall
rcrl
outsb
test
cmpsl
mov
xlat
jge
adc
push
and
ds
outsl
mov
jle
aas
jnp
push
xor
xchg
fwait
and
jg
xchg
dec
jnp
inc
mov
xlat
cmp
mov
insb
decl
insl
xchg
dec
arpl
sub
shll
loopne
cmp
jmp
incl
jb
leave
xchg
nop
and
int
mov
mov
decl
fmull
push
sub
jge
inc
lahf
cmp
out
cmp
ljmp
jmp
dec
sbb
movsb
cmp
leave
xor
mov
adcb
add
inc
ljmp
cli
decl
cli
lds
mov
into
pop
stc
push
pop
cmp
pushf
and
imul
fdivrl
lds
mov
loope
mov
cmp
mov
fisubl
inc
sar
jbe
lret
or
or
cs
jl
push
pushl
repz
sbb
int3
cli
jp
and
pop
call
pushl
mov
stos
in
or
sahf
and
jne
mov
mov
sub
decl
repz
ds
dec
int
and
pop
rorb
mov
sub
decl
arpl
call
jne
xor
sarl
dec
outsl
out
cli
xchg
and
popa
in
mov
xor
int3
xchg
out
cmc
adc
jmp
jmp
stc
jne
shrb
nop
in
cltd
jmp
dec
cli
lahf
jnp
ss
jg
push
sbb
stos
jns
cli
jbe
shl
dec
sahf
push
inc
push
call
jo
pushl
loopne
fcompl
push
int
call
fcom
jo
adc
es
decl
xchg
hlt
shrb
cltd
stos
jnp
in
sub
mov
mov
hlt
lcall
xchg
fidivrs
stos
in
lret
addr16
mov
mov
cmp
sub
call
push
mov
test
xor
lcall
sub
mov
pushl
jns
fs
loopne
insl
mov
cs
je
notb
mov
mov
pop
inc
ljmp
sbb
negb
sbb
lock
mov
push
imul
lcall
xchg
xor
subb
mov
cltd
xor
push
mov
push
ja
or
xchg
incl
inc
es
sbb
test
lahf
andb
push
jle
ljmp
stos
daa
push
test
fstpl
jbe
loop
xchg
pusha
sbb
test
sub
jecxz
inc
int
scas
enter
inc
and
cmpsl
jo
pop
jbe
in
push
push
out
cmp
mov
outsb
loope
sar
mov
mov
loopne
add
or
push
and
push
pop
std
ljmp
dec
movsb
bts
inc
fcoms
fs
fistl
push
shr
ds
ds
call
lea
mov
sub
out
shlb
fmull
test
push
lock
es
pushl
popf
test
adc
dec
jno
push
mov
jg
pop
dec
addr16
call
test
fwait
and
xor
mov
sahf
and
into
fcomip
incl
or
xor
mov
xor
jae
iret
sbb
mov
mov
mov
adc
cmp
scas
mov
mov
addr16
push
test
js
aaa
repz
inc
xchg
icebp
aad
or
imul
mov
add
nop
test
jmp
imul
jl
pop
je
jecxz
xor
aad
dec
fiadds
and
xchg
in
fisubrl
incl
and
notl
in
mov
dec
mov
cwtl
outsb
jl
mov
decl
jo
gs
push
iret
cmp
ljmp
pop
fwait
aam
pop
pushl
pop
gs
jp
mov
scas
out
stos
arpl
mov
xchg
pop
in
repnz
int3
xor
call
aas
inc
test
fistl
push
out
in
dec
inc
push
mov
mov
mov
pop
aad
jg
ljmp
mov
pop
pop
push
and
and
cmp
xchg
mov
mov
mov
lock
decl
or
ds
mov
ret
pop
add
fwait
hlt
lea
ljmp
mov
and
xchg
jle
rcl
jecxz
jmp
jp
ljmp
or
fisubrl
inc
lea
mov
cs
pop
pop
iret
cld
sbb
mov
jmp
jmp
dec
or
arpl
fisubs
push
xchg
inc
adc
int
bound
inc
ret
cmp
sbb
js
or
pop
addr16
lods
pop
icebp
sbb
frstor
cmp
fsub
mov
pop
out
in
data16
or
pop
in
pusha
in
add
dec
add
push
hlt
mov
xchg
fucom
fwait
cld
mov
call
out
jnp
mov
andb
imul
call
lock
loope
loope
int
pushf
mov
adc
es
repnz
je
sti
xchg
add
pop
push
call
outsb
lds
cwtl
scas
outsb
clc
mov
shlb
dec
insl
and
sub
filds
mov
xchg
popf
insb
mov
nop
xchg
mov
call
std
lock
sbb
and
cmpsb
jno
lods
mov
or
jo
xor
push
mov
push
aam
repz
mov
xor
lret
mov
sbb
jo
incl
es
bound
adc
clc
lea
sahf
jle
cmp
fmuls
and
ljmp
push
push
rcrb
adc
xor
arpl
arpl
cltd
insb
repz
call
lcall
dec
outsb
xchg
lods
es
mov
sbb
jle
and
jae
outsb
jge
jno
lcall
inc
cmp
fdivrs
loopne
sbb
or
icebp
movsb
das
jb
jp
mul
jg
adc
jne
mov
ljmp
in
test
rcrl
imul
rolb
out
pop
xor
mov
pop
jp
ljmp
xchg
fidivs
push
insb
cmpsb
xor
push
xchg
mov
dec
push
lea
pop
push
insl
call
push
loope
pop
adc
sbb
mov
lods
adc
cld
push
xchg
jl
idivl
inc
in
push
xchg
xor
mov
mov
or
dec
or
jbe
add
jb
nop
push
sbbb
sub
adc
decl
aaa
aad
and
jecxz
adc
mov
out
and
jno
das
xchg
add
call
fwait
mov
imul
add
mov
sbb
test
out
aad
ds
incl
lahf
or
or
sarl
sbb
movb
sbb
addr16
pop
jo
call
push
jo
mov
mov
push
pop
arpl
aas
dec
sub
in
adcl
pop
test
call
sarl
mov
xchg
movsb
incl
mov
js
test
xor
jb
pushf
mov
pcmpgtd
dec
add
cmp
fstp
jno
bt
fidivs
out
ljmp
cli
incl
into
xchg
push
pop
cwtl
sbb
in
divb
lds
mov
mov
pop
out
push
xor
mov
and
lds
pop
fcos
in
imul
dec
cli
add
test
jbe
pop
cs
dec
fs
jecxz
lods
pusha
pop
lcall
sub
add
and
fldt
stos
std
scas
adc
imulb
sbb
fmuls
enter
les
xor
pushf
cli
lret
call
filds
jl
ja
clc
mov
adc
cmp
cmp
mov
cmpsb
push
sbb
fnsave
push
scas
scas
decb
lret
nop
cmc
lcall
jge
lock
dec
mov
mov
adc
push
inc
mov
pop
jo
pop
aam
ja
mov
ret
adc
sub
xchg
xchg
mov
jmp
jns
mov
fcomip
aam
ds
fs
das
xor
dec
and
mov
out
mov
sub
lcall
call
push
mov
lret
dec
jnp
xchg
pop
jecxz
lds
out
ljmp
test
dec
jmp
outsl
dec
xchg
jbe
fwait
mov
and
push
mov
cltd
xchg
arpl
cmpsl
call
jnp
inc
xchg
rcr
imul
jne
addr16
add
push
cmpsl
test
in
pop
add
decl
lret
dec
jg
imul
push
test
jg
mov
ret
mov
mov
in
les
dec
mov
stos
mov
test
jae
aad
fcomip
in
mov
sub
in
mov
pop
jnp
sbb
in
cwtl
lds
xchg
scas
sarb
sub
pop
xor
fsts
jo
ret
mov
fwait
mov
js
das
xor
jmp
mov
push
jo
cmpb
sub
das
ficoml
cmp
clc
shl
adc
inc
data16
jmp
cs
push
mov
scas
cmpsb
push
push
arpl
outsl
insb
mov
std
arpl
data16
adc
push
loope
ds
lahf
or
push
fs
je
fisubrs
pop
mov
or
jo
out
cltd
xor
pop
call
xor
xor
lock
xchg
fildll
sbb
decl
xchg
dec
push
rcl
adcb
and
jno
mov
imul
sbb
fsubl
add
shrl
call
mov
insb
dec
sbb
push
cmp
icebp
or
iret
ljmp
cli
or
lcall
outsl
cli
decl
ljmp
lcall
sub
push
insb
js
jg
jp
scas
push
mov
jmp
sub
aas
inc
add
scas
imul
stc
dec
jmp
insl
jg
loop
ja
aaa
das
shll
cmc
xor
push
icebp
subl
cmp
xchg
incl
iret
mov
xor
add
pusha
rcrl
icebp
inc
pushl
jnp
dec
gs
jns
dec
pop
jns
cmp
push
inc
aad
mov
call
inc
jnp
or
mov
dec
xlat
ds
mov
sbb
mov
pop
out
cwtl
gs
sahf
je
movsb
sahf
lcall
pop
and
dec
or
or
cli
pop
cld
jmp
dec
imul
and
adc
sbb
and
jle
cmp
mov
pop
subb
inc
out
inc
mov
jb
mov
fs
or
insl
mov
mov
rcrl
cltd
rorl
pusha
jo
inc
mov
outsl
into
and
loope,pn
call
mov
and
cwtl
arpl
clc
sbbb
hlt
xor
lock
out
push
incl
sahf
lock
push
gs
xor
rol
xor
adc
mov
jmp
push
jmp
test
mov
lahf
int
lcall
nop
icebp
push
fldl
cmp
push
cmp
into
push
jmp
into
es
jecxz
movsb
mov
xor
imul
jns
rolb
xchg
sar
pushl
insl
das
loop
push
push
gs
mov
xor
mov
sbb
cmp
lea
push
rcrl
sub
lcall
and
loop
scas
xor
sahf
test
sbb
popf
jno
mov
dec
pushl
std
pushl
pop
fcmovu
inc
pop
aam
stos
sub
jo
mov
js
and
push
pop
sub
pop
test
ljmp
sub
mov
or
push
jge
cmp
xchg
mov
test
into
add
popa
jne
pop
pop
aad
into
and
pop
inc
mov
xchg
jg
inc
sbb
cmp
add
out
aad
mov
ret
inc
sbb
cmp
in
sub
or
ljmp
dec
stos
adc
cmp
scas
mov
pop
ret
xor
pop
and
mov
mov
jae
dec
inc
mov
loop
ljmp
adc
lds
push
pop
or
dec
inc
insb
xor
insl
mov
ds
popl
adc
add
nop
leave
jnp
in
call
outsl
neg
cmpsl
xchg
xor
fcmove
jb
xchg
aam
or
mov
es
jmp
adc
ficoms
jmp
sbb
jge
jl
cli
push
inc
mov
rol
xchg
add
sub
lcall
mov
das
push
jb
lahf
push
add
pop
inc
insl
sbb
fcomip
push
pop
insl
in
cmp
rcll
imul
jge
stos
push
sahf
mov
dec
decl
xor
jns
xchg
rorl
fstp
pop
jnp
fisubrl
push
std
xor
mov
ljmp
jecxz
inc
pushf
repz
inc
adc
out
lcall
add
mov
mov
inc
sbb
xchg
sbb
mov
add
fptan
dec
xlat
inc
call
dec
out
push
es
xchg
lock
fwait
call
mov
fnstsw
fadd
call
fcompl
jmp
sub
ljmp
orb
add
or
xor
xorl
or
decl
or
xchg
sub
into
adc
push
pop
dec
push
lods
sub
gs
fstpl
jmp
test
push
cmp
push
cmp
xchg
stc
push
mov
and
xchg
pop
and
sti
adc
xor
jne
or
lcall
les
push
rclb
rcrl
sub
jge
decl
nop
loop
sbb
xor
mov
jns
xchg
dec
mov
pushl
mov
xorl
xor
cmp
ss
fstl
fcomip
int
test
mov
mov
faddl
xchg
out
pushf
and
std
jg
add
sahf
cmpsb
push
mov
add
daa
inc
mov
ds
lds
mov
sub
and
scas
out
js
sbb
push
in
call
call
xchg
cmpsl
daa
jbe
nop
popa
jb
ss
mov
arpl
mov
cmc
fwait
add
loop
dec
mov
std
fs
negl
jl
icebp
fs
stos
or
daa
dec
inc
imul
xchg
dec
ret
out
movsl
imul
dec
mov
pop
leave
fimull
lock
scas
jmp
fiadds
jne
sbb
sbb
jns
cltd
je
xchg
ficoms
ljmp
mov
mov
push
pusha
push
jo
pop
aad
cs
jecxz
lods
xor
cmp
pop
call
cld
cmp
jne
mov
movsb
and
sti
inc
ljmp
call
in
xor
sbb
xor
lcall
inc
sub
test
ud0
jmp
out
mov
adc
bound
ss
cwtl
jmp
fldl
sbb
icebp
rcrb
loope
shll
dec
and
jnp
and
dec
mov
out
sub
dec
pop
jnp
inc
inc
orb
sub
fwait
lds
mov
sub
and
mov
fwait
or
addb
xchg
push
test
loopne
hlt
clc
bound
ret
mov
out
imul
push
subl
out
xchg
cld
cld
cwtl
ret
mov
call
xor
das
fiadds
cwtl
in
mov
test
ds
dec
sub
lea
mov
xor
jne
mov
push
fcompl
in
mov
pop
insb
call
mov
dec
shl
sbb
mov
lret
or
adc
mov
lret
dec
ljmp
cli
inc
sbb
stc
xor
adc
pop
in
insb
js
out
cmp
jmp
push
aas
xor
call
xchg
xchg
ss
loop
pop
dec
add
add
jnp
imul
mov
decl
jge
sarl
push
add
jp
mov
je
div
xchg
lods
dec
sar
call
mov
push
notb
rorb
daa
into
jg
push
inc
mov
call
xor
movsb
sbb
mov
and
push
push
loopne
pushl
mov
mov
in
ja
jno
xlat
pop
mov
sbb
js
sarl
pop
mov
mov
xchg
clc
mov
xor
repz
lret
sub
call
incl
jmp
mov
aad
pop
add
inc
sbb
insb
das
mov
xor
ljmp
sbb
add
outsb
repnz
cmp
mov
shl
and
arpl
jmp
jo
mov
out
xchg
lret
movsb
cmp
jecxz
sub
es
jg
incl
scas
pop
outsl
cld
stos
pop
int3
pop
inc
aam
pusha
push
je
cs
fcomps
dec
outsb
ret
sbb
aas
rclb
dec
sbb
xchg
xor
push
hlt
push
insl
sbb
popf
dec
fwait
push
and
jmp
in
loopne
imul
adc
js
sub
mov
pusha
add
push
insl
push
mov
incl
scas
lods
orb
pop
adcl
addr16
inc
in
push
add
fistpl
cld
xchg
dec
cld
pusha
fisttps
movsb
cmpsb
cs
push
aad
setle
aas
ss
test
incl
out
arpl
inc
inc
iret
xor
ljmp
pop
imul
push
in
ret
loop
and
lcall
sarl
or
xchg
fsub
cmc
test
cmp
fldcw
inc
cmp
mov
fists
push
shlb
dec
test
imul
xchg
or
or
js
lret
push
mov
jmp
pushf
xor
or
loope,pn
mov
inc
std
ffree
lcall
push
test
jo
push
cmp
fxch
imul
clc
lock
dec
dec
mov
xchg
dec
pop
add
imul
push
xchg
rclb
icebp
lods
cmp
mov
jmp
scas
cmp
adc
xchg
sub
lcall
jg
pop
dec
xchg
frndint
shlb
cmp
cmp
jmp
inc
fdivrs
push
repz
icebp
jle
into
cli
jmp
fdivs
add
iret
test
inc
icebp
out
dec
xor
jg
iret
pop
out
aad
lock
cwtl
sbb
and
or
mov
fabs
jge
incl
sbb
mov
fistl
push
shll
xor
push
sub
mov
je
push
fsubs
arpl
out
cmp
mov
incl
pop
testl
add
mov
dec
sbb
aas
and
incl
and
sbb
nop
je
or
int
jb,pn
fists
push
jg
xor
sti
ja
ljmp
in
push
xchg
pop
stos
dec
cmpl
shl
jb
movsl
nop
pop
add
stos
push
pop
cmp
fs
push
cmpb
sbb
decl
divl
sti
jns
nop
hlt
inc
jge
hlt
xchg
xchg
xchg
stos
cld
xorl
sbb
push
mov
test
out
std
cs
xlat
xchg
xor
cld
mov
pop
sbb
iret
pop
push
ret
ja
icebp
push
enter
push
jg
popa
std
iret
ret
popl
dec
push
incl
xlat
gs
std
cld
lcall
sti
stos
lds
lock
adc
popf
incl
roll
cmp
sub
jnp
mov
dec
je
xchg
xor
lcall
xor
bound
inc
dec
xor
rolb
into
popf
test
push
pushl
loope
mov
insl
xorb
rorb
or
inc
jle
jg
mov
mov
jle
imul
dec
faddl
push
jmp
aad
or
out
and
xchg
test
jo
cltd
xchg
insl
add
xchg
inc
lcall
jb
xor
cmc
sahf
sbb
inc
pop
das
sbb
stos
dec
jb
sti
inc
in
sbb
clc
push
pusha
add
nop
mov
and
adc
xor
sbb
loopne
xchg
cmp
test
push
int
jmp
jmp
sbb
cwtl
xchg
cwtl
lock
and
pushl
pop
add
cmc
cmp
and
cmp
or
cltd
lcall
dec
adc
fucomip
fdivp
pop
push
pcmpgtd
scas
stos
bound
jl
xchg
add
stos
adc
mov
mov
in
jno
adc
leave
orl
pop
stc
fcompl
inc
fs
jmp
and
push
dec
xor
xchg
xchg
mov
mov
xor
pop
stos
xchg
cmp
mov
lods
dec
mov
lods
test
or
dec
sarl
push
out
fcom
pop
xor
mov
pop
sti
imul
test
mov
adc
xor
in
sbb
lcall
mov
lret
add
jl
push
adc
jnp
xor
xchg
bound
decl
das
mov
leave
jmp
pop
add
push
mov
cmp
mov
decl
jp
fdivrl
aam
fstpt
sti
pop
shlb
or
or
and
call
pop
out
adc
dec
cmpl
ss
stos
outsl
ljmp
jp
call
xchg
xor
xchg
adc
imul
push
es
xchg
fwait
call
pop
mov
pushf
adc
xchg
push
mov
aaa
xchg
popf
push
pop
mov
push
adc
inc
ds
mov
push
cmp
hlt
inc
and
loopne
cmp
in
sahf
in
adc
sbb
pop
outsl
dec
pop
cwtl
fs
test
sub
mov
jg
decl
cmpsl
loopne
mov
mov
lcall
mov
dec
xlat
adc
aad
lcall
xlat
in
in
icebp
inc
jno
lock
push
dec
addr16
repnz
ss
inc
ljmp
dec
push
push
mov
loope
decb
shr
fstpt
dec
jns
dec
mov
mov
popf
jmp
mov
push
pop
adc
sub
dec
mov
xchg
xchg
jmp
xor
test
jns
insb
jmp
lds
test
in
stc
mov
sub
pop
decl
outsl
movsb
jns
xchg
lret
fistps
push
cmpsl
jp
enter
xor
cmp
rorb
pushl
jp
sbbb
outsb
out
lods
mull
sahf
out
dec
add
mov
sti
ret
loope
ljmp
cli
lock
add
aaa
xchg
xor
cld
xor
bound
iret
ljmp
and
or
sub
shrl
pop
sub
cmp
out
inc
cmpb
mov
inc
mov
fadds
shrb
idiv
cmp
xor
repnz
scas
pop
and
mov
jmp
jne
add
mov
push
bound
jbe
repz
insl
dec
push
jmp
fnstcw
ljmp
push
shrb
mov
sbb
adc
and
sub
mov
hlt
push
mov
push
sbb
jae
outsl
adc
aas
out
mov
in
cmpsl
insl
mov
shrb
lods
ret
sub
mov
mov
adc
cmpsb
mov
sbb
or
incl
cmpsl
push
in
nop
mov
add
ret
push
jmp
inc
movsl
or
cli
push
sarl
xchg
mov
pop
push
mov
scas
ja
outsl
scas
jl
enter
test
fistpll
daa
les
rcrl
pop
push
cmp
test
mov
outsb
push
adc
flds
ja
push
jnp
arpl
pop
cs
sub
mov
sbb
incl
or
dec
adc
lods
and
jecxz
add
pushf
test
mov
adc
call
sbb
jge
pop
lock
lret
lcall
inc
or
add
sub
and
push
mov
call
pop
in
aad
or
xchg
pop
push
xor
fdivs
mov
mov
lds
in
mov
hlt
adc
mov
pop
lcall
sub
lods
add
xor
jmp
dec
sub
lcall
and
les
push
mov
stc
incl
movntq
mov
in
lods
aam
ret
arpl
sbb
insb
mov
aaa
int
jmp
inc
gs
jge
notb
fists
jp
ret
int
and
das
add
scas
push
dec
adc
xor
pop
cmp
jmp
das
mov
xchg
frstor
xchg
jle
lods
lcall
inc
jg
call
fildl
aam
out
bound
cld
out
and
roll
std
adc
cmp
ljmp
cmpsb
dec
hlt
xlat
jl
pop
pop
js
mov
int3
fildll
sbb
xor
pop
insb
lret
ljmp
adc
sbb
xor
scas
mov
xchg
mov
lods
loop
cmpsl
xor
jb
inc
lcall
daa
pop
jne
pusha
jbe
add
inc
mov
ljmp
adc
lods
dec
xchg
int
rorb
leave
into
mov
sub
add
mov
jp
sub
add
ja
decl
mov
push
inc
es
ret
loopne
lcall
adc
fdivp
pop
push
test
cmp
in
jbe
lock
xchg
dec
jg
out
decl
mov
lods
mov
sbb
inc
add
shl
xchg
js
fisubrs
aam
lcall
xor
jg
and
repz
cli
mov
call
xor
jae
inc
testl
outsl
dec
shlb
mov
call
pop
out
add
add
mov
outsl
xor
xchg
je
mov
lock
call
data16
decl
mulb
lock
aaa
and
aad
cwtl
movsl
stos
movsb
sub
cld
cmp
or
shl
shl
jb
insl
cmp
mov
aad
mov
lcall
in
xchg
jns
out
stc
and
sub
inc
mov
cld
mov
les
rcr
push
pop
xor
call
cs
ds
arpl
fdivrs
dec
xchg
xor
adc
stos
jmp
icebp
or
ss
push
cwtl
mov
jns
movsb
jb
pop
mov
pop
lret
cmpsb
leave
xorb
test
adc
sub
outsb
imul
add
add
mov
ljmp
int3
pop
or
lods
data16
or
in
subl
ja
mov
addl
add
rcl
pop
sub
loope
aaa
js
leave
enter
in
les
dec
popa
and
pop
jno
pop
mov
std
mov
xchg
sahf
or
and
push
jp
test
into
jo
xchg
adc
daa
movsl
mov
xchg
add
mov
mov
mov
add
pop
cmc
lcall
nop
fisubl
mov
mov
stos
inc
in
cmp
pop
fsubs
add
hlt
ljmp
pop
cld
scas
or
jb
pushf
fcomp
and
lods
imul
push
xor
lret
or
mov
push
loopne
xchg
add
mov
fistpll
mov
fcomp
clc
jmp
in
je
mov
cmpsl
testl
test
gs
lret
jmp
dec
loopne
mov
mov
xor
fdivrl
pop
fnstsw
lahf
sahf
sub
inc
jmp
fbstp
mov
out
cltd
jne
mov
fs
cmc
sbb
in
adc
lcall
mov
mov
test
sbb
call
mov
js
fwait
mov
inc
jle
enter
negb
loop
mov
cmp
dec
push
pushl
or
cmp
in
rclb
mov
cmp
rcl
mov
mov
cmp
decl
ret
sbb
mov
or
es
out
mov
sbb
shlb
lcall
ret
testl
pushf
insl
cmp
shrl
pop
movb
or
lcall
xchg
add
xchg
orl
psadbw
add
sbb
cs
pushl
mov
lahf
xor
pushf
rclb
cmp
int
pop
dec
jbe
dec
imul
clc
jmp
fcmove
call
mov
call
ss
shll
std
pop
icebp
sub
jge
movsb
sub
pop
pusha
call
addr16
jg
push
ds
inc
iret
inc
in
popa
fwait
aaa
xchg
or
add
cmc
lcall
cwtl
loope
add
jmp
mov
jle
xlat
popa
pushf
inc
sbb
lcall
push
sbb
mov
out
sbb
add
push
pop
roll
pop
mov
ljmp
pop
xchg
jne
mov
fwait
sub
xor
cs
bts
dec
aas
stos
bound
incl
jmp
daa
int
fcompl
fsubs
popf
fs
adc
aas
lcall
das
and
cli
jg
mov
je
test
push
call
pop
stc
cmpsb
sti
xchg
ss
mov
clc
ljmp
pop
pushf
div
roll
lret
test
adc
cmp
lahf
cld
call
push
out
test
lods
shll
and
inc
data16
jmp
sbb
cli
call
push
pusha
out
ja
xchg
mov
sbb
aaa
test
lahf
in
jmp
jle
cmc
pop
cli
cmp
sub
or
pop
inc
movsb
sbb
inc
mov
in
lcall
mov
pop
lods
dec
fstpt
add
test
xor
insb
dec
stos
jge
jge
inc
sahf
xchg
icebp
sbb
pushl
dec
enter
ljmp
pop
dec
stos
maskmovq
testl
xchg
fisttps
add
jmp
inc
sub
std
cmp
adc
insl
pop
ret
out
adc
shr
hlt
xchg
stos
lret
pop
lret
adc
call
lea
add
mov
ljmp
xchg
jae
shll
xchg
or
push
call
stos
dec
add
cmp
push
sbb
movsl
push
lret
lods
ss
lret
incl
stos
stc
mov
lea
scas
pop
stos
cmp
outsb
and
ss
repz
in
in
mov
scas
in
cmp
rclb
lods
insb
inc
xchg
fsubrs
lds
icebp
incl
movsb
outsb
xchg
add
pop
pushf
pop
sub
xor
pop
sahf
adc
and
imul
inc
push
push
sbb
test
lock
movsb
jo
mov
decl
push
into
push
and
mov
inc
mov
clc
icebp
fldenv
inc
iret
nop
dec
sti
aad
jnp
and
xor
and
mov
xchg
mov
rol
xor
rclb
pop
inc
mov
push
aad
xchg
nop
dec
mov
mov
cmp
mov
xchg
movsb
xchg
int3
push
mov
decl
ja
inc
inc
sub
daa
adc
int3
sub
or
inc
ljmp
clc
stos
and
mov
push
lcall
out
lret
repz
mov
mov
xchg
lods
mov
mov
fstl
pop
mov
mov
mov
rorb
dec
cld
stos
xlat
fdivl
test
rorb
int3
loop
fdivrl
and
sub
xor
inc
test
xchg
imul
inc
mov
lret
hlt
or
jle
js
sti
shrl
and
mov
pushl
gs
pop
mov
jge
push
jle
mov
mov
mov
in
pusha
xchg
leave
js
inc
mov
mov
xor
inc
jns
repnz
cmpsl
popf
jne
sahf
cs
sbb
adc
shll
aaa
std
and
out
mov
mov
pop
jp
push
jg
or
sbb
into
pusha
popf
cld
in
imul
xchg
and
and
decl
lock
cmp
sbb
jge
std
sbb
adc
ret
fmuls
sahf
call
sub
sub
ljmp
sbb
xor
and
rcll
push
push
jle
cltd
out
sar
mov
ds
pop
pusha
pushf
arpl
jmp
sti
mov
mov
jo
rclb
or
fstpl
jmp
lock
movsb
js
cltd
loope
sbb
cltd
xor
push
pop
call
loopne
cli
sub
jne
dec
repz
lds
addr16
and
cmp
or
and
lods
sahf
ret
mov
repz
inc
sub
add
fstps
inc
outsb
mov
jmp
sub
and
xchg
std
enter
and
cmp
into
call
cld
mov
les
xor
xor
mov
add
loope
dec
mov
in
aas
js
push
mov
mov
or
hlt
mov
rcr
call
jo
cmc
ss
xor
cmp
cwtl
pop
pop
fists
cld
and
insb
mov
movsb
mov
test
mov
popa
sub
inc
adc
xlat
popf
scas
test
cmp
data16
pushl
mov
sub
arpl
xchg
jecxz
imul
dec
addl
xchg
in
fildll
dec
add
stos
out
cmpsb
in
imul
cmp
xchg
aas
lock
or
xor
ud1
es
push
sbb
hlt
adc
call
popl
mov
popa
ja
xor
ret
in
lret
jg
call
push
enter
sbb
shll
jg
add
mov
insl
add
cmpsb
cmp
decl
mov
pop
mov
cwtl
lahf
shrb
push
mov
mov
add
cmpsb
pop
in
movsb
push
lahf
fsubrl
subl
cmp
out
hlt
sub
sbb
sbb
outsl
add
arpl
sub
push
mov
js
addr16
lcall
add
test
pop
inc
stc
rcrl
jle
data16
push
and
cmp
ljmp
xor
pop
lods
cmp
adc
notl
ja
scas
fs
scas
jg
jmp
mov
stc
das
push
test
mov
sub
push
mov
pop
push
dec
notl
mov
push
push
jecxz
cli
and
leave
push
pushf
adc
ljmp
call
test
arpl
dec
lret
das
int
and
test
or
into
pop
addr16
cld
cmpsb
sar
clc
pop
psrad
sbb
mov
jne
adc
stos
mov
mov
sahf
fists
into
clc
int3
les
inc
xlat
mov
xchg
gs
decl
les
xor
into
xor
fisttps
cmp
fwait
andb
push
sar
jmp
mov
xor
xchg
dec
mov
jg
mov
aam
xlat
jno
cmp
decl
divb
test
xchg
cmpsl
xchg
int3
pop
fs
jo
xchg
std
mov
decl
xor
pop
mov
mov
ds
or
fcomip
jmp
fbstp
scas
jnp
enter
xor
adc
add
data16
call
push
sahf
mov
mov
jmp
jns
lock
mov
pop
cmp
cmc
add
sub
call
cmp
mov
lods
fisubrs
adc
mov
ds
xchg
aam
popa
fdivr
push
insl
mov
lcall
in
enter
pop
mov
loop
les
popf
xchg
ss
xor
je
jmp
or
clc
cld
loope
mov
pop
mov
jnp
cwtl
sub
lret
cmp
fisubrs
add
jns
push
mov
out
cli
stos
xchg
or
ret
mov
jg
and
je
in
sarl
ljmp
incl
inc
imul
pop
inc
mov
fidivs
loopne
daa
xlat
mov
lods
jne
incl
mov
in
std
test
and
scas
enter
jge
int3
inc
jbe
scas
sbb
mov
jl
addr16
mov
decl
popa
push
int
mov
add
mov
out
dec
xchg
pop
ds
push
les
mov
xchg
inc
fsubrl
cli
mov
mov
adc
loopne
insl
mov
dec
dec
xor
call
sbb
sbb
ficompl
sub
sub
std
ljmp
dec
cli
jmp
lcall
mov
jle
mov
or
addr16
cli
incl
subb
scas
subl
scas
jg
mov
xlat
add
cld
lcall
sbb
test
add
jg
pop
and
add
out
lock
fstpt
mov
fdivl
call
adc
xlat
and
dec
in
cmp
and
adc
cld
jg
idivb
cli
testb
push
add
sarb
fmull
mov
ljmp
pop
pushf
and
push
aaa
andl
fstps
mov
or
decl
cmpsb
loop
mov
xor
mov
pushf
arpl
hlt
cmpsl
adc
mov
mov
push
mov
pop
nop
fidivrl
cmp
inc
mov
or
call
mov
ret
flds
jbe
aaa
cld
decl
mov
cld
mov
enter
jns
dec
jnp
ds
mov
mov
push
into
jmp
pop
pop
outsb
dec
push
xchg
fimull
mov
pop
lea
fstps
push
or
call
sub
aad
ja
fldl2t
adcb
xchg
shll
jmp
jo
bound
mov
mov
jle
lds
push
insl
test
push
push
es
pushf
cmpsl
outsb
cmpsl
ljmp
push
cld
in
movsl
gs
mov
push
repnz
mov
in
mov
jne
insb
add
stos
mov
or
iret
and
popa
popf
dec
and
jg
mov
fsubl
xor
rcrl
ret
lret
mov
mov
fbstp
inc
lret
mov
imul
xchg
adc
leave
xchg
lret
call
std
call
scas
shr
push
mov
xchg
cmpsl
test
adcb
outsl
pop
ret
leave
dec
sbb
inc
and
stos
lods
push
iret
mov
sub
mov
arpl
stos
ljmp
fadds
adc
jp
fisubs
cmp
ret
icebp
jbe
cmp
lock
decl
xor
pop
enter
dec
ret
cmp
outsb
subb
dec
pop
call
fsubs
testb
sbb
push
inc
pop
popf
sbb
lahf
or
mov
aaa
cld
xorb
lds
cs
out
popf
or
adc
idiv
lcall
push
daa
inc
out
and
mov
push
jle
mov
fistps
call
mov
test
mov
push
push
inc
test
pop
jno
pop
loopne
xorl
pop
or
inc
and
mov
std
mov
daa
mov
jmp
jg
repz
test
stos
xchg
mov
pushl
adcb
insl
pop
add
cltd
filds
cld
xor
dec
lcall
pop
rclb
loope
or
aam
mov
cmc
je
outsb
or
sub
dec
sti
jmp
push
inc
fs
stos
jg
adc
test
push
aas
sub
fldcw
mov
adc
lds
pushl
cld
iret
outsb
idiv
rclb
cmp
add
mov
ds
iret
dec
shrl
call
push
frstor
bound
cmp
popf
popa
inc
mov
mov
aad
incl
call
xor
xchg
push
cmp
adc
adc
sub
mov
jns
dec
dec
jp
fcmovbe
xchg
pushf
inc
into
xchg
cs
pop
aad
or
pop
mov
pop
lret
mov
lcall
xlat
pop
je
sbb
xchg
jbe
mov
pushl
sub
addl
jge
pushl
insl
in
mov
in
call
ror
testl
out
sub
push
xor
push
dec
jae
ljmp
xchg
inc
push
fistpll
cmp
pop
or
inc
sbb
lea
mov
add
fwait
std
incl
mov
mov
inc
pop
mov
cmp
cli
cli
std
aad
rorb
aad
pushl
rclb
cwtl
imul
sub
pop
cli
jb
gs
nop
out
std
xor
or
call
jnp
dec
repz
or
ss
xor
jp
cmp
push
xor
fdivl
leave
sub
call
pop
add
cwtl
js
aas
je
and
leave
lods
adc
imul
pushl
insb
shlb
mov
scas
cmp
sub
cwtl
pop
andb
aaa
ljmp
pop
jae
shlb
cmpsb
sbb
sbbb
pop
pop
mov
lds
fucomi
pushf
lret
data16
pushl
mov
inc
bound
add
mov
cmp
pop
in
fildll
inc
mov
ljmp
dec
mov
hlt
loop
mov
lcall
mov
pop
add
ss
cltd
adc
pushf
or
jle
pop
and
adc
test
movl
flds
in
mov
sbb
cmp
stos
clc
push
sbb
cmc
push
inc
pusha
aam
inc
fst
insl
or
cmp
rclb
adc
insb
pop
sub
pop
fwait
arpl
lea
repnz
push
popa
inc
lahf
pop
cs
data16
push
push
push
xchg
mov
sub
push
js
inc
jl
std
insl
hlt
cmp
sub
shrl
jmp
pop
ja
pop
test
ja
fisubrl
aaa
mov
sub
jo
shlb
lea
jbe
es
std
decl
jp
dec
push
and
dec
and
mov
mov
pop
out
nop
and
inc
add
jg
push
and
cwtl
es
sbb
movsb
jg
idivl
and
cmpsb
pop
sub
stos
xchg
std
push
cmp
jp
push
sub
enter
or
mov
in
shrl
cltd
mov
or
popf
jmp
jl
mov
pop
xor
adc
lret
xor
les
pusha
mov
dec
sub
sbb
dec
bound
adc
mov
daa
xor
mov
jns
cmp
movsl
popf
aad
hlt
xchg
cmpsl
pusha
ljmp
les
ss
fwait
mov
std
lret
mov
inc
fdivp
adc
xchg
dec
xor
mov
push
push
inc
loop
mov
call
or
or
test
popf
pop
in
jecxz
movsl
mov
push
fiadds
test
ds
mov
pop
das
or
or
das
sar
ret
xchg
push
jl
pop
js
enter
outsl
ljmp
cmp
hlt
inc
push
scas
sub
push
out
mov
mov
rol
sbb
std
pusha
lret
call
pop
mov
mov
cwtl
cs
das
loop
rcrl
dec
insb
data16
jae
inc
out
int
mov
jmp
test
mov
fsubs
gs
jg
pop
es
cmp
ljmp
mov
inc
arpl
idivb
ret
push
sbb
ret
or
pavgb
call
cs
mov
jmp
mov
rclb
popf
loope
inc
push
add
mov
jle
adc
out
mov
inc
stos
xor
lods
and
popa
adcl
incl
mov
jno
out
aaa
or
icebp
inc
mov
testb
test
cmp
stc
or
inc
incl
nop
sub
sub
ss
scas
mov
cld
mov
ret
cmp
fistl
push
int3
loope
push
lret
push
add
cs
xchg
outsb
mov
ljmp
sub
vmwrite
shr
dec
jnp
mov
push
test
sbbb
ljmp
add
pop
and
hlt
pop
inc
fcoms
cmp
xchg
sahf
xor
out
mov
test
fnstcw
in
aad
inc
adc
ja
pop
fwait
add
mov
out
cmpsb
in
jmp
das
repz
stos
pop
xor
xchg
sbb
jmp
pop
add
aas
pop
jle
test
cmpsl
jns
mov
loope
sub
push
and
inc
divb
out
add
fmuls
ja
inc
or
push
fs
int3
mov
repnz
lcall
inc
pusha
imul
inc
cwtl
imul
outsb
arpl
call
sbb
enter
inc
mov
inc
sbb
inc
subb
lea
stos
or
dec
add
jl
les
and
cmp
xchg
loope
jecxz
ljmp
nop
xchg
fs
inc
scas
push
dec
daa
cmpl
adc
inc
jl
xor
lock
pushl
hlt
mov
std
rcll
and
pop
add
lods
lods
jns
or
sti
mov
xor
cmpsb
shlb
push
mov
fbstp
mov
mov
push
pop
mov
hlt
push
icebp
fnstsw
arpl
mov
mov
aas
jmp
call
lret
push
iret
jns
outsb
test
ljmp
ljmp
push
pop
lock
mov
aam
rcrb
mov
pop
inc
mov
in
sub
or
jmp
lret
and
pop
sbb
mov
inc
out
sbb
int3
jmp
lret
not
cltd
xchg
mov
nop
punpckhbw
dec
int3
pop
fbstp
insl
rclb
cwtl
stos
imul
cli
incl
imul
loope
xchg
add
jle
and
loope
push
inc
pop
insl
shl
or
lock
push
popf
or
in
push
test
cmp
call
and
xchg
push
pop
cmp
enter
sbb
mov
jle
mov
outsl
push
out
cld
pushf
test
and
pop
and
pushf
mov
lock
mov
ljmp
fstpt
pop
push
push
fmuls
icebp
pop
test
jecxz
gs
mov
mov
pushl
arpl
ja
out
lea
lahf
aad
or
in
scas
sar
cmp
fdivrp
in
insb
xchg
test
sbb
scas
movsl
xchg
jbe
aaa
out
push
lret
jb
test
lcall
andl
fidivrl
push
out
pop
arpl
mov
imull
or
mov
mov
jae
je
stos
xchg
lock
and
shlb
dec
mov
ljmp
shl
hlt
xchg
push
xchg
mov
fwait
jb
pop
adc
mov
cli
jo
mov
push
push
test
ljmp
pop
test
jnp
insb
add
outsb
in
push
shlb
fcmovnu
enter
call
cli
mov
vpmadcswd
into
jge
scas
fisubrs
call
dec
pop
push
mov
insb
mov
xchg
cmpsl
pop
pop
mov
mov
cmpb
insl
mov
call
rcrl
add
fistpl
ja
mov
call
loopne
in
mov
mov
pop
mov
insb
ret
out
loop
push
push
xchg
pushl
cld
dec
daa
fwait
mov
inc
fisttps
pusha
jmp
movsb
in
pop
inc
pop
test
sbb
test
xor
test
or
decl
mov
jge
dec
or
cli
fdivrl
js
stos
xchg
xchg
sbb
ljmp
cmpsb
fwait
sub
shlb
ljmp
lahf
cmp
jge
clc
fsubrl
mov
scas
cmp
test
cs
lods
jp
popa
adc
nop
or
push
lret
sahf
jg
incl
jns
sbb
test
mov
dec
dec
mov
cld
mov
or
fwait
bound
inc
or
jmp
adc
mov
jg
push
mov
cmp
jp
push
mov
popa
sti
cmp
pop
iret
dec
call
fwait
cs
enter
pop
shlb
cmp
xor
ret
lods
stos
outsl
movsb
mov
test
fisubrs
push
iret
cwtl
decl
jmp
daa
dec
sbb
cmc
sbb
mov
ljmp
decl
jo
sbb
out
or
pop
and
out
cld
ret
out
dec
xchg
mov
mov
rorb
je
loop
test
push
xchg
sbb
outsl
inc
stos
ret
sub
incl
in
inc
lcall
ljmp
sbbl
or
add
call
clc
lods
cmp
inc
mov
mov
test
cmpl
stos
int3
xor
cmp
into
mov
incl
outsb
dec
and
sub
sub
pop
push
es
adc
mov
aas
lret
fcos
or
call
out
xor
dec
jp
lock
sarb
scas
jp
jmp
jae
int3
cmpsl
movsl
das
movsb
lret
icebp
ret
mov
and
dec
cmp
jp
mov
out
adc
sub
pop
lret
loopne
push
jns
or
repz
mov
mov
ret
inc
or
pop
and
js
fnstenv
cmp
sar
stos
pop
testl
mov
pop
int3
pusha
cmpl
incl
dec
cmp
and
xchg
dec
lock
stos
scas
or
stos
xchg
ss
mov
decl
mov
inc
dec
pop
fsubrs
cmpsb
bound
jecxz
data16
add
push
decl
lock
psubusb
push
in
push
filds
ljmp
pop
jae
jl
out
cli
adc
and
mov
xor
jo
ljmp
mov
pop
push
test
pop
mov
dec
and
and
lcall
pop
loopne
push
popa
or
in
xor
lcall
push
xchg
popf
inc
inc
fs
jg
jmp
out
repz
lds
xchg
xor
nop
std
and
adc
mov
push
inc
dec
std
push
dec
cmc
repz
outsl
dec
mov
sti
push
cmpl
enter
dec
mov
adc
xchg
adc
decl
out
mov
mov
cmp
sti
addl
aad
xor
jecxz
pop
pushl
std
or
loopne
and
lret
test
fcompl
xor
ljmp
sarb
sbb
mov
cmp
test
dec
push
insb
cmp
outsl
cli
stos
push
lods
movsl
shl
or
inc
or
into
movsl
mov
imul
call
mov
sub
inc
dec
jle
pop
cwtl
std
fisttpll
sahf
jno
cmp
call
in
pusha
movsb
push
jg
cmpsb
adc
push
and
sub
lea
scas
loopne
pop
cmp
ds
call
nop
in
in
add
jbe
xchg
pushf
aad
shrl
in
cmc
rcrb
jp
test
cmp
inc
sub
jmp
or
inc
mov
inc
ror
incl
es
mov
pop
xchg
leave
js
movsl
mov
cmpsb
cmp
jmp
xor
das
xchg
into
xchg
fstps
cmp
rolb
int3
xchg
xchg
ljmp
push
das
test
jo
fdivl
or
sahf
popa
sbb
mov
testb
in
fcoml
fs
add
das
sbb
movsl
cmp
sahf
jb
test
out
js
shr
test
mov
jl,pn
cltd
mov
mov
and
jmp
insb
cmp
and
js
add
adc
adc
mov
fildll
jge
fimuls
inc
mov
into
push
inc
lods
mov
insl
inc
xchg
in
xchg
cmpl
decl
or
add
and
ljmp
call
mov
and
mov
mulb
fstps
insb
test
and
mov
shl
repz
jne
sahf
int3
jle
enter
mov
cmp
hlt
test
aad
or
cli
adc
add
enter
stos
leave
push
pop
adc
dec
scas
and
hlt
mov
mov
clc
inc
shll
gs
jae
jno
mov
testb
or
mov
shr
push
or
cli
mov
xchg
xchg
dec
add
and
pop
adcl
lcall
insb
aam
repz
ret
xor
cltd
loope
push
sub
add
mov
movsb
push
scas
clc
decl
lds
pop
sbb
lock
cmpsl
pop
insl
xor
decl
push
fdivrl
mov
dec
dec
andb
dec
stos
int
jo
out
enter
call
add
or
xor
fistpll
lahf
shrb
shll
ljmp
push
ret
call
or
jg
adc
inc
andb
arpl
sbb
mov
pushf
out
sub
jnp
rol
xchg
push
sbb
loope
pop
or
stos
incl
rorb
lds
add
jmp
pop
lret
cltd
lea
enter
add
int3
mov
push
push
repz
repnz
loope
fists
and
out
push
push
cltd
insl
sub
ss
mov
dec
inc
cli
jl
in
xchg
pop
gs
mov
cmp
sti
in
ljmp
xorl
decl
cmp
cli
bound
sub
sbb
gs
mov
pushf
adc
jp
pop
cmc
daa
push
add
jmp
fidivrl
sti
cmc
data16
incl
pusha
adc
cs
and
and
push
mov
out
jo
inc
stc
in
movsb
mov
leave
loope
inc
ljmp
out
divb
daa
test
int3
push
xor
sbb
loope
adc
call
mov
hlt
sub
pop
hlt
call
iret
insl
test
imul
push
rcrb
cmp
ljmp
test
insb
sbb
icebp
add
push
push
xor
jmp
jecxz
inc
cmp
xchg
push
test
adc
cmc
pushf
js
stos
stos
mov
stc
mov
decl
cmpsb
ljmp
aad
and
xchg
scas
ljmp
inc
xlat
scas
hlt
jne
lods
imul
inc
adc
ret
xchg
jno
push
or
pop
pusha
add
pop
ljmp
fnsave
ret
cmp
movsb
insb
mov
bound
cmp
aad
imul
inc
cmp
out
dec
out
cmp
in
daa
inc
sub
push
mov
and
mov
lea
negb
incl
out
add
fwait
cld
and
pop
rorb
mov
dec
jp
ljmp
inc
pusha
mov
jg
in
mov
push
cmpsb
mov
dec
lcall
lock
lret
out
cmpsl
fcmovnb
sbb
mov
add
fistpll
mov
add
sub
ret
and
es
decl
dec
cs
mov
cmp
cmc
gs
sahf
insb
pop
push
mov
not
out
rcr
mov
test
imulb
aaa
inc
dec
sub
es
adc
stos
mov
imulb
push
jmp
in
sbbl
cmp
jne
scas
fisttps
add
sbb
mov
push
pop
insb
fnstcw
iret
jg
hlt
mov
and
mov
xchg
dec
popf
mov
push
mov
call
cwtl
repz
es
cs
and
and
movsb
call
cld
jmp
push
sbb
jmp
mov
sub
mov
jmp
add
sarb
mov
iret
inc
add
cmp
aaa
data16
rclb
decl
adc
sbb
jb
data16
mov
test
les
cmp
lods
xchg
fistpl
adcb
mov
xchg
or
mov
aas
adc
out
pop
xor
es
call
into
mov
mov
orl
cli
pop
fldcw
cmp
inc
decl
cmp
adc
hlt
add
stc
jl
stos
or
jno
decl
dec
ret
mov
and
jecxz
mov
mov
mov
ljmp
mov
notb
in
popf
and
push
movsb
shlb
incl
test
cltd
mov
ret
pop
adc
adc
mov
decl
sub
pop
ss
xor
out
loop
cmp
jg
push
ds
insl
mov
das
jns
jge
ret
or
rcrb
lcall
lock
loopne
stos
push
in
ss
or
xchg
shrb
sbb
test
cld
xchg
cmp
jmp
es
ja
clc
imul
movl
adc
mov
js
imul
ljmp
int3
and
sub
jno
rcr
inc
mov
mov
jmp
arpl
sub
decl
dec
mov
aaa
enter
repnz
push
cltd
sbb
sbb
std
or
ja
fcomip
push
or
adc
xlat
and
clc
test
jae
imul
call
std
jb
insl
push
mov
fsubrs
decl
lcall
iret
loopne
test
mov
and
lret
mov
imul
and
push
mov
rorb
ljmp
incl
dec
roll
jmp
pushf
add
fs
cmp
sub
bound
mov
incl
pop
jecxz
xchg
pop
cli
cmp
addb
mov
mov
in
stos
pusha
ljmp
jo
sub
mov
insb
je
call
mov
inc
int3
js
xorl
mov
pop
inc
or
enter
ljmp
cmpsb
push
pop
clc
popf
adc
aaa
aam
insb
js
cltd
mov
test
jg
pop
jge
cli
repz
ror
and
lret
sarb
in
jb
push
pop
hlt
jp
stc
orl
mov
stos
jle
dec
sbb
aaa
jne
shr
lcall
adc
bound
arpl
pop
insb
jecxz
in
lcall
decb
dec
aas
mov
mov
les
sbb
movsl
pop
push
lcall
xchg
int3
dec
das
sahf
mov
jmp
jg
enter
adc
ljmp
idivb
dec
mov
jg
test
mov
shlb
push
push
out
inc
inc
sbb
out
xchg
pushf
mov
lods
and
jb
call
dec
and
xor
cli
arpl
fsubrs
mov
and
mov
mov
idivb
xchg
std
lcall
mov
sub
ss
movsl
testb
sub
out
ljmp
lahf
push
mov
mov
in
bound
mov
add
jno
dec
mov
stc
dec
stc
jp
lds
call
push
sbb
jmp
sub
mov
into
jb
add
jmp
pusha
jl
push
pop
js
jne
lods
pushf
test
stc
scas
pop
jbe
push
xchg
add
scas
jg
jmp
insb
shll
ret
dec
push
and
mov
mov
pushl
movsl
arpl
lods
das
sub
cmp
ficompl
orb
xchg
sub
ficompl
pop
iret
mov
mov
mov
gs
out
inc
xor
test
adc
lcall
jae
dec
fsubrl
dec
mov
mov
out
xchg
icebp
lcall
nop
inc
jmp
add
test
adc
add
jge
insb
rolb
mov
adc
jg
cmp
fstpt
in
xchg
in
xor
adc
iret
push
mov
decl
and
notl
adc
cwtl
fnstcw
pusha
or
dec
inc
loope
xor
adc
dec
mov
decl
jb
add
mov
mov
lcall
das
xor
decl
popa
repz
cld
xchg
loopne
pop
pop
add
sbb
mov
push
push
scas
mov
int
add
call
repz
jmp
and
mov
in
jmp
cmpsl
sbb
mov
enter
imul
lods
ljmp
rorb
jne
inc
pushf
fwait
or
sub
jnp
jl
jmp
sub
mov
dec
pushf
int3
dec
pusha
es
arpl
ljmp
decl
fisubrl
push
cltd
repnz
pop
imul
mov
xor
pusha
lcall
and
push
dec
push
loop
ds
dec
inc
pop
cmp
scas
jae
fadds
mov
pushl
push
nop
shl
push
fsubrs
xor
pushl
mov
out
mov
lcall
out
cld
or
mov
xchg
hlt
sub
adc
mov
scas
out
data16
and
xchg
push
mov
inc
leave
jae
cltd
adc
popf
mov
pop
inc
pop
mov
lods
push
movsb
cld
incl
sub
sbb
inc
and
and
repz
repnz
scas
pop
push
mov
xchg
ljmp
ja
push
inc
fs
pop
pop
popf
addr16
ja
decl
clc
jb
scas
inc
clc
xchg
shr
inc
sti
cmp
or
and
fwait
cwtl
cmc
mov
addr16
mov
adc
outsl
push
add
clc
xchg
sub
mov
mov
xor
mov
je
jnp
xor
or
pushl
mov
dec
insb
add
push
fs
inc
jmp
pop
sbb
mov
imul
faddl
out
lods
repnz
sar
pushf
insl
aaa
shlb
clc
cltd
test
insb
jp
enter
call
int
fnstcw
fistpl
jbe
jo
lods
cmp
adc
xor
aaa
xchg
les
jg
cli
lock
mov
mov
loope
or
es
shlb
cld
testl
and
jecxz
and
int3
inc
mov
jg
call
frstor
hlt
cmp
cmp
data16
jge
rcr
mov
les
pop
aad
or
jge
push
mov
cmp
jmp
mov
mov
mov
stos
leave
movsb
dec
sbb
lcall
mov
in
out
mov
jmp
dec
arpl
iret
mul
dec
push
mov
or
jge
pop
and
out
jle
push
mov
clc
ljmp
push
ljmp
push
fsubs
mov
mov
scas
or
pop
or
int3
shufps
aam
mov
jmp
sub
orl
pushf
sahf
mov
fucompp
ficomps
push
hlt
fldcw
in
int
fsubs
clc
xchg
push
lcall
out
ljmp
lcall
inc
ljmp
call
mov
sbbl
jmp
cmp
cmp
insb
jmp
in
in
icebp
int3
fcomps
scas
jp
incl
jb
pop
lcall
sub
cwtl
ficoms
loope
pop
adc
mov
push
popa
mov
call
popa
add
jo
shrb
insb
lea
and
mov
jg
jmp
mov
sbb
addr16
nop
outsl
repnz
jmp
in
sub
mov
nop
or
call
orb
addr16
push
add
jg
es
cmp
cmp
stc
arpl
ret
cld
mov
lods
out
cmp
or
into
jmp
dec
in
add
jmp
rcll
jg
sti
ljmp
add
aas
inc
sbb
lea
fsubs
fs
js
incl
ficompl
clc
fwait
sbb
mov
push
push
push
arpl
jg
lahf
inc
out
push
aaa
scas
clc
jmp
jbe
inc
fsubrs
pop
sbb
and
push
pop
jbe
mov
outsl
mov
and
in
pop
pop
sti
xor
dec
mov
add
push
dec
sahf
and
pushl
gs
mov
mov
out
mov
stc
jnp
into
push
insb
cmpsl
push
push
je
decl
pop
inc
scas
aad
xchg
dec
in
cmp
add
mov
xlat
adc
aas
sbb
add
cmp
cwtl
in
test
stos
int3
push
and
sar
adc
out
jp
call
subb
cmp
jge
fadd
push
sysenter
neg
psubw
mov
pushl
andl
outsl
inc
adcb
nop
xchg
xor
test
fcomip
call
or
or
push
insl
mov
or
stos
push
jmp
pop
xchg
loop
roll
pop
idivb
test
aam
mov
out
into
push
adc
inc
push
inc
dec
and
push
bound
call
test
dec
dec
iret
addr16
lods
mov
loopne
mov
push
dec
ror
mov
shr
mov
sti
push
push
cmp
idiv
jb
sub
test
ret
lahf
xchg
xchg
adc
and
cmp
pop
xor
lcall
mov
add
mov
cmp
inc
mov
cli
in
jp
push
cmp
jge
sahf
xor
xchg
push
ss
mov
jo
test
jae
pop
and
lcall
nop
stos
xor
jmp
adc
lcall
mov
mov
mov
ret
inc
push
ja
inc
lret
push
sbb
xor
mov
clc
mov
jecxz
push
add
arpl
scas
in
jl
in
in
cmp
mov
aam
adc
jo
lock
popf
mov
fdiv
fsubl
mov
incl
or
in
test
test
repnz
cmp
mov
add
add
jge
lret
lret
jg
adc
jns
or
jno
xor
jmp
dec
scas
mov
ljmp
and
push
mov
sub
pop
inc
jno
cmp
mov
pop
jbe
mov
cwtl
and
movb
push
insb
pop
cmc
pop
dec
or
pushl
not
mov
sbb
daa
cmc
ret
xor
into
cmc
mov
decl
aas
aam
dec
icebp
movd
ret
test
fdivrs
clc
lods
jecxz
cwtl
ljmp
in
lret
cmp
fisubl
adc
mov
frstor
cli
dec
cmc
into
mov
jmp
adc
loop
dec
mov
sbb
cmp
ljmp
jo
or
push
shlb
insb
ljmp
incl
cmp
jb
adc
lret
nop
push
es
imul
gs
mov
inc
xchg
retw
sbb
and
ja
andb
ljmp
or
out
sub
or
imull
clc
sbb
inc
ss
aas
lcall
pop
pusha
xorb
cmp
mov
pop
fiadds
mov
sbb
mov
cmpsb
fcmovnu
pushf
sbb
lods
cs
dec
cmpsl
das
xchg
mov
cld
and
pushf
mov
mov
pop
addr16
sub
add
xor
sbb
ja
jmp
push
test
and
mov
adc
cmc
cmpsl
inc
mov
mov
lcall
es
insl
decl
fs
fld
icebp
push
mov
jns
cmp
shll
mov
jmp
lock
enter
xchg
cld
in
push
mov
js
add
dec
movsb
xor
lea
idiv
lcall
mov
mov
in
lret
es
push
out
mov
aaa
mov
push
and
cli
inc
push
ja
hlt
ja
xchg
pop
jne
stc
cmp
notl
daa
push
mov
dec
and
dec
ljmp
or
pop
cmp
pop
std
sti
psrad
outsl
push
test
fldl
xor
cld
mov
aaa
lret
mov
aad
repnz
ss
out
jg
pushl
in
clc
cwtl
mov
lds
jo
xlat
dec
sbb
add
add
scas
shrb
jno
inc
mov
arpl
ja
bound
lret
stos
gs
ret
adc
lcall
sub
dec
adc
mov
je
push
insb
dec
or
je
mov
xor
push
je
add
pop
daa
out
mov
mov
fcmovbe
xchg
push
js
xor
loop
sub
pop
loop
js
insb
pop
scas
lret
cmpb
insb
leave
in
inc
pop
mov
ljmp
push
dec
jl
xor
mov
inc
or
pushl
aas
adc
lds
lcall
fildll
dec
ljmp
xor
pop
and
jmp
sub
fdivrl
cli
in
std
pop
cmp
decl
data16
add
iret
pop
mov
or
jb
or
fnstenv
ror
pop
fwait
sub
incl
or
sti
push
jmp
sub
sub
jo
in
cmp
out
xor
sbb
insb
and
adcb
sbb
sbb
pop
repz
jae
push
cld
incl
pop
or
cmp
inc
out
ds
decl
jbe
mov
imul
fnstsw
jg
fnstsw
xchg
bound
jecxz
addb
and
xor
xchg
or
daa
js
jb
or
call
enter
cli
push
jmp
js
mov
xor
xchg
jo
dec
fisubl
ljmp
enter
call
in
push
mov
adc
fildll
out
mov
int
je
dec
adc
decl
call
lock
mov
aas
pushf
lcall
popf
outsb
xor
jle
dec
xor
fwait
mov
adc
push
out
aaa
popa
mov
jecxz
rcll
out
push
fstpl
dec
int3
aas
out
jmp
repz
ds
cli
lahf
jns
pop
add
sahf
add
pushl
cltd
cmpsb
movsl
add
jmp
xor
imul
add
xchg
gs
call
lcall
fnstenv
dec
into
out
xor
fsubrp
xchg
and
push
sbb
rcll
incl
adc
pop
or
pushf
dec
sub
in
std
mov
mov
pop
mov
outsb
pushf
xchg
mov
inc
fisubrs
sbb
call
dec
les
mov
sub
adc
xor
jmp
icebp
test
sub
call
mov
and
jl
mov
fst
mov
pop
mov
test
dec
fimuls
cld
sub
pop
mov
sarb
mov
shr
aam
pop
test
push
aaa
cld
jmp
lret
jne
sbb
ret
enter
addr16
pop
mov
mov
stos
push
add
add
cli
jg
cmp
lcall
out
out
jnp
push
fcmovb
shlb
data16
lcall
cs
mov
mov
test
sbb
pushf
cmp
pop
cld
incl
nop
and
bound
cmpsb
in
cli
or
ds
add
incl
pusha
adc
cli
adc
xor
insl
sbb
push
mov
pushl
ret
cs
gs
shlb
dec
lret
jae
clc
mov
fbstp
xorl
fxch
sub
cwtl
scas
test
push
add
mov
cmpsl
dec
cmpsl
mov
xchg
sbb
pop
iret
mov
scas
push
xchg
js
sbb
lret
hlt
jmp
ficoml
incl
sbb
ljmp
push
andl
lahf
ud0
dec
test
add
inc
push
pop
push
sub
jno
call
scas
push
lds
xor
ljmp
cmp
and
xor
pop
xlat
jae
addl
xor
inc
mov
stc
pop
in
jb
test
and
xchg
rcrb
jb
sarl
adc
icebp
pop
pop
dec
imul
push
xor
mov
loope
das
outsl
popf
fwait
mov
call
sub
decl
push
arpl
fistps
dec
xchg
add
mov
pop
push
xor
pop
pop
cmp
fdivl
jmp
mov
andl
push
push
mull
dec
scas
sub
incl
adc
rorb
add
and
jns
mov
fs
xor
jne
dec
jge
ret
lods
add
jne
dec
repnz
cltd
int
cmp
call
cli
test
into
arpl
push
dec
test
sub
scas
cmp
mov
out
in
lods
sub
clc
mov
add
pushl
jle
push
dec
test
push
test
inc
imull
mov
bound
psllq
addr16
stos
shll
enter
lods
mov
xchg
xor
cwtl
cmp
and
lods
pop
mov
out
cmp
adc
mov
rcr
loop
adc
jecxz
aaa
cmp
push
rol
outsl
aam
testb
lcall
das
cmpb
cmp
cmp
rep
push
clc
add
hlt
lahf
stos
incl
or
lods
movsb
jb
cli
mov
rorb
call
mov
loopne
xchg
fcomps
imul
leave
push
mov
push
or
decl
incl
inc
in
push
cmpl
push
test
push
inc
sbb
mov
aas
incl
daa
test
jne
aaa
sub
adc
in
cmp
pop
cmpsb
jo
dec
inc
mov
insl
xchg
hlt
jmp
addl
mov
aas
pushf
pop
cs
xor
mov
and
and
push
add
cld
ret
push
pop
rcrb
test
add
xor
fwait
call
cli
in
push
mov
aad
push
rorb
aad
cmpsb
sbb
out
add
call
fmuls
int
xchg
sbb
ja
out
divb
fcoms
jae
pushf
sbb
xor
dec
call
push
push
mov
in
adc
or
dec
add
mov
enter
arpl
mov
sar
jmp
push
daa
mov
lods
inc
pop
xchg
das
in
pop
cltd
mov
fimull
or
push
xchg
std
mov
incl
inc
mov
push
gs
cmp
mov
xchg
pushf
call
cs
stos
incl
cld
fdivrl
mov
cmp
xchg
jge
inc
pop
shll
call
fwait
adc
jge
jge
outsl
cld
shll
mov
mov
dec
mov
adc
dec
sub
mov
or
fs
mov
jle
adc
dec
rcll
and
ljmp
jnp
repz
dec
fdivr
je
les
clc
push
dec
pop
bound
xchg
lcall
lds
jo
sub
pop
add
add
lahf
out
pop
jl
fnstsw
inc
decl
sub
sbb
or
int3
cli
and
leave
ret
aam
fcomip
sbb
push
jle
push
or
mov
sbb
lods
out
xchg
push
push
add
mov
decl
adc
and
dec
cmp
mov
or
mov
mov
lock
jmp
add
in
and
inc
mov
lret
popf
and
sub
sub
lcall
ss
bound
jne
xchg
ljmp
stos
inc
dec
lret
out
cmp
mov
xor
mov
xor
and
scas
mov
ljmp
stc
and
mov
lret
jns
xchg
scas
incb
cltd
es
adc
dec
mov
jns
ss
movsb
jne
subl
call
mov
fisttps
cmp
pushf
lret
dec
neg
xor
in
dec
mov
int3
aad
pop
sbb
pop
mov
dec
cmp
cltd
sub
or
popa
sahf
nop
lods
push
shll
or
add
push
cmp
cmpl
xchg
adc
cmpsl
push
imul
xor
incl
test
bound
lods
mov
stos
mov
fisttpl
jno
data16
sahf
enter
pushl
add
inc
in
push
cmpsl
fadd
pop
lods
pop
pop
and
test
inc
cmp
fsubrl
repz
imul
cmp
lds
xor
lea
aaa
cld
js
enter
js
sub
sub
cmp
gs
cmpsb
jne
call
test
arpl
jg
data16
cmp
xchg
lods
aam
jo
cwtl
sti
push
cwtl
daa
mov
incl
jnp
dec
mov
insl
push
cmc
push
push
popf
push
mov
jb
mov
jmp
dec
lret
fs
push
ret
cmp
out
pop
inc
cltd
adc
sahf
fsubrl
insb
jae
pop
cmp
loop
push
ret
in
xor
cmp
jecxz
dec
mov
arpl
in
movl
mov
cmp
loope
iret
fsts
mov
addl
iret
repz
negl
pop
xor
inc
cmp
pop
push
xor
xchg
enter
les
cmp
push
hlt
xorl
mov
popa
incl
jo
movsb
imul
sbb
xlat
push
jmp
scas
jb
aad
jns
pop
repz
ljmp
arpl
addr16
cmpsb
lret
test
push
aaa
cmp
jge
fs
xchg
int3
mov
incl
and
jae
push
dec
int3
xor
fistps
sub
rcr
or
dec
jmp
clc
cmc
cld
push
lret
jle
es
or
cmpsl
mov
in
and
lcall
mov
pop
les
int3
jbe
xor
ljmp
xchg
cwtl
sbb
mov
filds
and
jno
lcall
and
out
daa
aaa
mov
outsl
lret
out
pop
push
push
cmpsl
mov
dec
or
pop
icebp
jmp
shl
les
mov
sub
pop
or
fs
clc
jmp
decb
dec
je
sbb
ret
mov
push
push
jecxz
mov
dec
cmp
pushf
mov
sahf
sub
test
std
out
xor
pop
add
dec
push
add
xchg
xor
incl
jae
insl
iret
loopne
cmp
cmp
shll
or
or
icebp
jmp
sub
inc
xor
push
fisubs
repz
call
push
jno
and
in
jno
jle
mov
out
sub
jns
inc
jmp
scas
add
pop
mov
movsl
subl
inc
fadds
adc
jno
imul
call
aas
adc
mov
pop
imul
mov
arpl
arpl
stos
lcall
ja
fs
dec
decl
lock
cmp
add
jbe
ret
or
jno
mov
ficoms
dec
mov
cli
ret
add
xchg
mov
sbb
mov
pushl
or
and
cmpl
repz
das
repnz
lret
dec
nop
imul
xchg
jmp
cld
push
mov
sub
xor
xor
js
mov
inc
dec
dec
sub
xchg
dec
and
adc
roll
enter
test
and
jmp
sub
sub
sbb
data16
pop
les
sub
ja
mov
std
jg
push
insl
cs
or
mov
rorl
in
xchg
add
lcall
jmp
sarb
jecxz
inc
popa
ja
jecxz
pop
xchg
and
mov
leave
xor
cmp
clc
lcall
imul
int
inc
insl
cli
hlt
icebp
xlat
cmp
aaa
fs
pushl
outsb
or
rcl
dec
xor
xor
and
insb
leave
xchg
xchg
adc
incl
imul
test
fdivr
fidivs
loop
fiaddl
sub
jno
daa
adc
aaa
lcall
cli
incl
pop
add
popf
repnz
xchg
jns
pop
out
mov
push
jle
lcall
ljmp
or
scas
js
loope
cmp
xor
test
fwait
scas
inc
in
pusha
call
shlb
push
nop
mov
mov
pop
push
cmp
inc
push
xchg
jg
out
add
jle
cmc
mov
ja
int
mov
pop
ss
add
pusha
mov
test
add
and
into
incl
pop
adc
pushf
mov
inc
dec
xchg
movsb
or
insl
pop
in
push
ss
incl
lcall
dec
mov
jle
mov
insl
inc
sbb
pop
sbb
pushl
aam
stos
dec
push
inc
cs
fcompl
mov
mov
int3
jg
decl
je
push
adc
adc
mov
xor
jp
mov
call
nop
push
pop
pusha
xchg
pop
mov
inc
popa
into
repz
sbbb
add
in
xor
and
xchg
and
clc
push
mov
sub
or
incl
pusha
xchg
popl
jns
std
xchg
cmc
mov
ljmp
jp
and
fsubr
jecxz
sbb
sbb
jge
jle
std
jmp
push
sub
xlat
fildll
sub
push
and
sbb
pushl
fs
or
mov
xchg
cltd
test
inc
rclb
cmp
dec
shrl
mov
call
js
push
fnstsw
add
sbb
jbe
repnz
ljmp
cld
jno
adc
lret
leave
int
inc
cmovl
xchg
xchg
ljmp
fimuls
out
aas
clc
pusha
ja
xor
push
push
mov
std
stc
xchg
add
decl
mov
mov
xchg
push
xchg
jmp
lcall
jb
in
mov
adc
out
fnstsw
jl
out
dec
out
ret
ja
test
pop
jne
mulb
ror
shrl
outsb
inc
les
lcall
sbb
mov
mov
decl
insb
sbb
jmp
ss
dec
and
mov
dec
or
mov
or
mov
lcall
push
out
and
ss
ljmp
cmp
ja
xlat
outsb
jae
jne
das
decl
xor
fisttpl
cmp
cmpsl
jmp
push
bound
movsl
cmp
test
lds
test
ret
dec
lcall
je
mov
mov
fdivr
jg
add
leave
or
ljmp
cmpsl
lret
fidivs
sub
xchg
ret
ljmp
jb
stos
imull
dec
and
sub
orb
mov
mov
adc
scas
add
ljmp
xor
hlt
or
xadd
pop
rcrb
sbb
in
mov
cmc
lret
icebp
xchg
subb
shlb
sbb
mov
cmp
divb
mov
loop
and
mov
std
mov
pushl
cmp
ds
jbe
out
iret
mov
adc
out
and
call
add
out
in
lret
mov
dec
ja
lods
or
dec
data16
std
dec
ficomps
rol
lea
xor
out
sub
and
mov
bound
jg
test
xchg
mov
sbb
das
jmp
test
mov
xchg
push
jns
and
cld
add
jl
arpl
imul
call
into
mov
sbb
std
jnp
jl
jg
mov
sbb
fidivrs
push
push
cld
or
ljmp
loop
insb
inc
add
inc
or
divb
fidivrs
call
lods
pminub
iret
movsb
in
mov
dec
xchg
aad
mov
lods
sbb
mov
pushl
inc
xchg
dec
idiv
dec
out
shlb
push
jge
lret
mov
rclb
cmp
mov
jl
or
mov
jo
mov
loop
into
call
pushf
in
fs
daa
enter
jmp
clc
lods
aaa
pop
jns
in
sbb
mov
leave
movl
clc
xlat
cs
jbe
lret
fisttps
inc
test
sbb
aam
inc
inc
aad
mov
push
mov
sbb
push
or
out
test
jnp
mov
fidivrl
pop
inc
fs
push
sbb
sbb
mov
push
add
enter
das
sar
ficoms
adc
and
loopne
adc
std
jb
int3
rcll
incl
in
fnstenv
jbe
je
xor
int
xor
and
dec
ljmp
mov
cld
and
ficomps
mov
stc
push
stos
add
push
xor
push
fs
or
adc
sbb
mov
mov
mov
imul
jae
push
ljmp
ljmp
cmp
xor
cmp
pop
loop
dec
adc
push
jmp
inc
mov
jp
jle
repnz
mov
fs
adc
das
loopne
jg
rolb
imul
push
stc
aaa
xor
aaa
test
fstpt
decl
lea
sub
cli
adc
jl
and
ljmp
ret
andw
orb
push
icebp
enter
xchg
daa
push
push
or
inc
into
push
jne
incl
add
mov
leave
pop
push
shlb
movsb
ljmp
cmp
jmp
sub
cmp
sub
inc
fcoms
mov
out
pop
mov
cli
sub
push
arpl
mov
sahf
push
incl
shr
push
adc
jnp
and
inc
addr16
insl
inc
pushf
xor
lahf
push
dec
dec
decl
imul
xchg
dec
ds
pushf
iret
shrb
ficomps
sub
andl
or
mov
mov
xchg
sbb
mov
mov
jbe
sub
sub
add
cmp
call
xchg
mov
aam
xchg
nop
xor
push
add
inc
sar
mov
jb
icebp
pop
cltd
stos
shll
out
sbb
rcll
call
sub
aas
xor
aam
les
sub
out
xchg
stos
pop
arpl
call
stos
sbb
push
mov
ja
cmp
mov
mov
insl
mov
cmp
repnz
mov
ljmp
out
xor
cs
loop
popa
mov
and
ret
imul
xchg
mov
cmp
stos
call
jmp
bound
pop
mov
sub
push
adc
dec
cmc
addr16
xor
ljmp
ret
fstps
notl
xchg
rcrb
ret
xor
mov
mov
mov
push
insb
fwait
mov
fdivp
je
jg
fistpl
xor
push
inc
pop
or
sbb
out
mov
popf
add
decl
loop
nop
lock
jnp
sbbb
cmp
pushf
mov
pop
xchg
scas
xor
jmp
test
push
xor
lea
decl
mov
scas
or
nop
push
inc
hlt
mov
pop
mov
ja
add
or
call
mov
xor
cltd
add
fs
js
sbb
fmuls
movsb
push
push
sub
repz
cmpl
das
movsb
xchg
bnd
mov
mov
mov
inc
outsb
loope
fcomip
decl
std
mov
in
stc
xor
aam
scas
pusha
cmp
cli
int3
cltd
xchg
into
call
pop
jns
cld
addr16
rol
dec
inc
rol
out
push
sub
sbb
adc
aad
pushl
push
lahf
push
sbb
mov
xor
mov
xor
roll
ret
cmp
add
pushl
pop
dec
mov
push
cli
les
popf
ljmp
decb
fs
js
pusha
sti
push
imul
push
and
adc
lcall
or
fs
mov
pop
inc
insl
and
jnp
add
jmp
aaa
cld
jmp
inc
xchg
push
push
and
jge
shrb
mov
test
lcall
jmp
xchg
mov
jnp
scas
call
jne
push
leave
pop
fbld
hlt
adc
pushl
xchg
sbb
add
test
jnp
loope
pushf
inc
add
icebp
xchg
insl
inc
xor
ljmp
test
idiv
push
cmp
sbb
dec
into
sub
out
jno
xchg
push
mov
push
or
out
cmp
lock
fucomip
stc
call
pop
mov
jmp
decl
sahf
inc
data16
mov
mov
push
sbb
filds
ret
call
mov
movsl
xor
cmc
fisubrs
mov
or
inc
fldl
in
mov
push
dec
inc
js
iret
jno
dec
insb
out
sbb
ficoml
aas
adc
xchg
stc
sbb
add
mov
and
outsb
mov
dec
test
bound
test
xchg
cwtl
insb
jecxz
mov
cmp
rorl
daa
movsb
inc
ret
int3
lcall
faddl
sub
aas
bound
sar
sub
cld
inc
dec
adc
test
cmp
xchg
sar
mov
xchg
xchg
xchg
imul
cmc
rorb
dec
ror
mov
fbstp
movsl
sti
out
jecxz
ret
dec
adc
mov
mov
cmpsb
push
test
mov
or
jg
fistpll
lcall
add
call
xor
lods
sti
and
push
push
das
cld
pop
push
pusha
xchg
mov
call
mov
push
and
push
outsl
xchg
inc
sub
scas
clc
lcall
push
call
es
cld
dec
xor
push
in
push
mov
fldl
ja
ret
add
cmp
push
adc
jmp
mov
cwtl
xor
fcoms
aas
pushl
inc
fcmovnbe
mov
sbb
aad
push
imul
popl
cmpsb
xchg
and
test
sub
cwtl
jp
test
in
xchg
fisubrs
ret
ljmp
mov
cld
push
out
inc
inc
bound
leave
in
lahf
lea
sbb
cmp
or
mov
mov
push
jbe
cmp
xchg
outsl
movsb
jno
mov
pop
outsl
sbb
fcomip
sbb
xchg
cld
xchg
pop
fcoml
aaa
jae
pop
pusha
stos
lahf
adc
inc
popf
cwtl
jmp
cmpsl
mov
jge
outsb
add
mov
out
int3
ja
in
pusha
lret
xchg
add
mov
sub
xchg
pop
mov
adc
fiadds
pop
repz
ljmp
stos
fstpt
fs
mov
mov
aam
jo
cld
mov
jge
in
or
test
mov
test
jns
fcompl
and
into
out
xchg
test
iret
lret
decl
imul
sub
sbbb
iret
pushl
jo
add
mov
mov
or
sti
or
jne
sub
fwait
adc
lcall
repnz
in
aas
movsb
add
xchg
mov
fbstp
push
subl
cmp
add
daa
lods
mov
lds
xor
mov
and
xchg
fstpl
in
mov
mov
cmp
sub
aad
test
push
cwtl
fwait
out
mov
pop
or
call
push
lods
popa
aam
je
es
test
xor
fidivrs
icebp
pushl
dec
push
fildl
mov
loopne
lods
fwait
addr16
mov
addl
pop
fwait
cmp
je
dec
mov
pop
inc
ret
jmp
adc
and
dec
sub
xchg
aam
add
push
jg
pop
add
fst
mov
in
mov
popf
ja
incl
sbb
cmpsl
sbb
rcll
jl
or
add
incl
and
adc
in
insl
outsl
insb
pop
cld
cwtl
test
lock
xor
into
mov
fs
incl
sbb
sbb
rclb
or
test
pop
int
pushl
mov
lds
xchg
mov
bound
pop
js
mov
icebp
xor
out
push
cltd
dec
cld
lcall
cmpsl
cmpsl
int
mov
ficoml
test
and
mov
inc
adc
pop
push
or
mov
push
jl
lahf
add
cltd
xchg
and
pushl
and
jo
cmc
adc
mov
dec
and
nop
add
movsl
pop
incl
stc
ret
mov
mov
mov
push
lret
adc
adc
movsb
sbb
es
dec
mov
rcl
cmc
mov
mov
mov
cmp
into
es
lcall
push
shl
inc
xchg
shl
rcrb
imul
nop
lods
and
nop
push
iret
lds
add
out
clc
lcall
cwtl
in
jbe
xchg
fldt
stos
jb
fs
notb
ljmp
add
addl
sbb
dec
aad
adc
scas
push
je
xor
lods
aaa
sbb
clc
jmp
xchg
ret
jnp
cmpsl
adc
repnz
push
adc
fiaddl
ljmp
and
push
inc
in
gs
popw
sbb
push
mov
loope
pushl
aaa
jge
push
add
std
push
pop
or
rcrb
shlb
jle
test
pop
push
jg
mul
and
pop
and
xchg
dec
or
mull
push
pop
stos
cld
outsl
lcall
insb
or
sti
inc
in
daa
cmp
scas
push
daa
sbb
or
jmp
ljmp
cmp
dec
pop
pop
lea
mov
cmp
notl
fcomip
decl
adc
jae
imul
cmp
mov
xor
das
clc
jg
leave
mov
sbb
xor
jle
and
outsl
out
jno
loope
fbld
clc
cld
add
stos
pushf
mov
data16
outsl
mov
ss
mov
lods
and
dec
jno
out
mov
std
test
mov
rclb
mov
sub
pop
pop
lds
cld
inc
les
sbb
dec
sub
push
aaa
cld
ficoml
aaa
rcrl
fwait
subl
xchg
jbe
negl
loopne
fisttpll
in
cmpsb
pop
xchg
push
jl
push
sub
pushl
scas
cmp
shrl
jns
pop
push
inc
adc
ljmp
bound
es
std
mov
xor
lds
call
lret
inc
inc
out
lret
scas
cmpsb
cmp
cmp
mov
sub
sarb
jl
and
out
mov
loope
mov
nop
mov
or
jmp
mov
jbe
scas
jb
or
mov
jg
sbb
mov
ljmp
int3
xchg
insl
sub
adc
adc
test
mov
js
push
adcb
dec
out
inc
shll
test
lds
imul
jmp
cmpsl
nop
divb
cmp
ficoml
sub
mov
lock
test
hlt
xor
lcall
pop
sub
or
fdivrl
sbb
fimull
orb
in
adc
mov
jmp
pop
aam
in
iret
lods
sbb
mov
shl
shl
pop
mov
cli
adc
push
lret
or
and
incl
and
add
mov
sub
lret
pusha
push
jl
xchg
ljmp
lcall
ja
mov
xchg
dec
pop
test
out
push
std
cwtl
adc
hlt
jns
stos
lds
jp
popf
out
and
loop
mov
xchg
xchg
inc
cmp
jae
lds
dec
lock
jg
aaa
mov
mov
mov
hlt
lock
jb
mov
dec
cmp
cli
and
adc
in
push
jp
or
mov
cmpsb
and
inc
arpl
mov
inc
outsl
xchg
lods
inc
ror
out
adc
imul
jg
xchg
rcrl
mov
jl
pushf
lret
fdiv
push
aam
jle
jg
shlb
jp
mov
mov
adc
jo
cld
xor
jmp
jmp
add
vshufpd
js
cmpsl
mov
sub
jl
mov
call
or
mov
fcmovu
mov
adc
cmp
and
repz
cmc
push
incl
movsl
mov
insl
daa
xor
pop
das
jle
cmp
cmp
mov
sahf
push
mov
cli
mov
inc
fs
and
loopne
or
jmp
idiv
insl
mov
rcrl
call
xlat
inc
in
sub
cmp
jae
sub
adc
jbe
push
mov
xor
lock
call
jmp
jne
out
mov
in
imul
ljmp
pushl
xchg
aam
dec
xchg
in
xchg
jbe
cmp
incl
adc
js
insl
xor
sub
cmpsb
inc
std
dec
leave
cmc
outsb
fldl
and
stos
pop
jnp
adc
sarl
xchg
cmp
lret
mov
lret
andb
mov
xor
sub
dec
jbe
pop
iret
fldl
aad
jg
mov
mov
lds
lock
subl
bound
hlt
stos
sub
ljmp
fidivrl
mov
inc
test
fstpl
inc
push
push
loop
jno
lcall
add
mov
lods
loopne
es
dec
and
cs
test
mov
idiv
jg
incl
in
outsl
aas
stos
aaa
insl
xchg
fmuls
adc
mov
ljmp
ficompl
jl
push
push
sti
rep
jmp
decl
pushf
fwait
outsb
mov
aad
cmpl
pop
push
sahf
sbb
cmpsb
mov
or
adc
sbb
ljmpw
iret
incl
es
push
nop
pushf
jle
movsb
cmp
insl
rcrb
pushl
mov
arpl
sbb
or
lcall
nop
dec
aaa
jmp
inc
stos
aaa
out
loopne
add
orl
inc
std
hlt
mov
mov
popf
int
sbb
and
js
int
inc
test
mov
and
jmp
repnz
add
in
mov
fs
cmp
dec
stos
clc
std
mov
jl
mov
sbbb
xor
lcall
add
cmc
xchg
xor
xchg
pop
out
out
test
mov
or
es
xor
decl
in
jnp
cmpsb
test
dec
pop
fmull
push
add
add
cmp
aad
stc
insl
dec
into
add
fldt
fnsave
inc
cltd
mov
and
fwait
aad
xchg
mov
ret
hlt
mov
adcb
sar
cmp
jl
lods
sbb
push
test
sub
pop
fneni(8087
repnz
out
adc
mov
scas
and
lods
cltd
add
or
pushl
push
test
xchg
les
gs
enter
cmp
push
or
jg
jb
into
divl
fnstcw
data16
leave
insl
fiaddl
xchg
fadds
cli
xchg
jp
pushl
mov
cmp
loope
addb
inc
sbbb
in
jns
mov
add
flds
dec
mov
icebp
dec
scas
mov
mov
jmp
and
jb
sti
push
adc
jge
aaa
sahf
aam
out
xor
fmul
int3
add
out
in
lcall
fisttpl
pop
nop
pop
sbb
out
push
insl
pop
loope
and
jmp
push
repz
jbe
or
imul
mov
sti
sbb
ljmp
xor
pop
lds
outsb
bound
popf
adc
dec
add
add
mov
data16
icebp
ljmp
fmuls
call
call
and
pshufw
popf
fistps
pop
insl
cld
cwtl
adc
cmpsl
ret
jnp
addr16
call
rorb
and
push
xor
cli
push
push
repnz
push
xchg
sbb
push
incl
pop
sbb
rclb
not
test
ja
into
xchg
mov
ss
sub
dec
dec
mov
incl
fdivrl
lods
sti
js
mov
sub
stos
fdivrl
pop
sbb
pop
ljmp
xchg
inc
shlb
mov
mov
stc
mov
add
mov
push
jecxz
pop
jp
outsl
into
fstps
mov
pop
decl
mov
fs
adc
es
insl
js
ficompl
mov
movsb
adc
fstpl
inc
pop
cmp
adc
ds
lods
push
lods
test
rcrl
jbe
mov
dec
sub
decl
push
out
sbb
pop
test
or
push
add
jg
and
cmp
push
aad
aas
inc
iret
test
pushl
push
xlat
push
clc
mov
lock
imul
pop
xchg
lods
sbb
ljmp
jmp
mov
enter
xlat
orb
mov
xor
and
jae
call
cld
mov
xchg
pop
cmp
stos
stc
inc
inc
movsl
xchg
lret
mov
pop
sbb
imul
pop
in
or
ret
mov
jbe
loopne
xchg
jo
popa
repz
stc
into
adc
call
pusha
xor
mov
in
mov
and
and
lods
mulw
adc
mov
call
outsb
stos
cmp
and
mov
sub
subl
dec
sbb
jg
jmp
jle
lea
out
sub
aaa
pop
lret
clc
xor
mov
fxtract
filds
xchg
pop
popf
mov
icebp
fidivl
frstor
jmp
loopne
xlat
out
inc
imulb
decb
pushl
pop
jno
jne
loopne
sbb
inc
xor
inc
repz
fucomip
cwtl
dec
cmp
cmpsl
xor
jecxz
mov
popa
hlt
cmp
sbb
loope
js
mov
mov
jl
lcall
mov
jb
cmpsl
test
mov
popf
sub
or
decl
push
cwtl
and
push
and
lock
or
xchg
lock
ficoml
call
dec
test
fisubl
incb
outsl
jae
add
push
sti
stos
frstor
imul
shrb
mov
sti
jnp
into
or
jp
mov
cli
jg
test
cmpsb
das
mov
jmp
pushl
ret
ret
push
movsl
sbb
pop
faddl
popf
push
mov
dec
and
test
cmc
lahf
mov
aaa
or
arpl
std
mov
and
fdivrl
data16
push
inc
addl
call
imul
stos
or
adc
push
imul
out
xor
jbe
pop
mov
mov
inc
lahf
push
ds
adc
pushl
cwtl
bound
mov
pop
and
fisubs
or
inc
xchg
xchg
aad
ljmp
pop
mov
imul
mov
lods
xchg
in
mov
arpl
pop
jg
and
mov
xor
sbb
add
add
jmp
rorb
outsb
fcomip
in
rorb
pop
adc
jno
push
sbb
add
mov
aas
cs
lcall
dec
adc
inc
xchg
cmp
xchg
and
iret
inc
pop
and
or
jle
popa
ja
sub
mov
jbe
sub
cmp
decl
xchg
mov
popf
loopne
sub
inc
xchg
adc
and
nop
test
es
decl
pushf
and
int
pop
hlt
push
xchg
aad
xor
mov
sarl
incl
fisttpl
inc
pop
jo
sub
loopne
and
mov
call
mov
xchg
mov
fisubs
push
mov
cli
dec
daa
lahf
out
cmp
push
ds
inc
jno
incl
fs
pushf
mov
cmp
mov
paddb
xor
and
mov
and
pop
js
xor
push
cltd
adc
fwait
pushl
mov
dec
icebp
mov
sbb
mov
cli
xchg
lcall
insl
jecxz
push
mov
or
lock
push
push
push
sbb
loopne
icebp
shll
orl
xlat
aas
ljmp
mov
and
pop
fcoml
xchg
and
das
xor
push
daa
in
movsl
std
or
fwait
insl
clc
dec
js
cmp
ret
int3
call
jl
hlt
mov
jp
pop
nop
imul
add
push
enter
xor
rorl
jp
ljmp
lea
fsubl
xor
ffreep
sub
ja
ret
or
push
xchg
pushw
mov
sar
jmp
mov
loop
adc
push
push
xlat
xchg
cmp
lret
push
push
mov
rolb
ret
or
mov
and
mov
into
mov
std
sbb
mov
pop
cmp
lds
or
test
pop
int3
in
shrb
mov
movsb
aas
loope
sbb
inc
xlat
pusha
lcall
inc
in
testb
push
sbb
sub
jns
test
loope
lret
ffree
jge
rol
xor
cmc
fldcw
imul
mov
test
popf
jns
hlt
xchg
test
mov
mov
jnp
sahf
sti
enter
push
shl
ljmp
mov
sbb
xchg
jne
mov
lcall
mov
lcall
mov
mov
sbb
les
jecxz
fidivl
incl
jecxz
sub
test
lds
jecxz
add
in
push
push
mov
jns
xor
into
int
nop
lods
sbb
inc
mov
adc
cwtl
aaa
dec
or
jg
das
es
push
adc
stc
hlt
sub
mov
mov
push
xorl
lcall
lds
sbb
pop
jne
jno
push
fs
inc
pop
orb
push
jmp
lret
scas
push
nop
aaa
mov
push
popf
dec
leavew
inc
fidivrl
add
pop
sbb
pushl
popaw
inc
sub
or
mov
arpl
mov
mov
mov
ja
adc
xchg
inc
push
scas
int3
roll
dec
repz
xchg
or
ljmp
mov
dec
mov
cmp
xchg
fcoms
xor
dec
xlat
mov
daa
iret
pusha
mov
mov
pop
mov
mov
pop
inc
ljmp
ret
lahf
sub
and
mov
les
pushl
mov
push
dec
mov
push
jge
loop
popf
shll
cli
push
loop
mov
das
insl
lcall
int3
pop
mov
subl
pop
xchg
xchg
lods
cmp
call
cwtl
dec
les
and
jg
xchg
cmp
xchg
cmp
pop
xchg
in
push
and
sub
ljmp
sbb
cmp
lds
mov
or
insl
push
jg
mov
mov
divb
xchg
lret
mov
sub
push
fstl
or
xchg
lock
jge
cmp
pop
mov
xchg
loop
jmp
mov
adc
and
or
fld
ret
pop
pop
sbb
rcl
xchg
stos
cmc
mov
add
mov
inc
lds
lcall
push
sbb
ljmp
leave
int3
cltd
mov
mov
and
pop
xor
lcall
movl
mov
jno
sub
shll
cmp
push
xlat
mov
lcall
das
add
stos
bound
jns
cmp
pop
pop
js
ljmp
pop
shlb
sahf
div
sti
rolb
add
ljmp
jecxz
cmp
divl
mov
test
push
push
push
pop
and
mov
cltd
sar
out
idivl
cmp
ficoms
mov
test
aas
ret
into
or
push
dec
inc
cli
fs
and
loop
pop
std
call
loopne
and
push
pop
movsb
arpl
lods
iret
add
xchg
jge
call
mov
mov
aaa
ljmp
jb
adc
lods
scas
push
push
clc
cmpb
and
mov
mov
sahf
mov
adc
xchg
out
sti
dec
adc
mov
lahf
js
inc
mov
int
inc
and
pushf
jle
jns
jmp
inc
inc
outsl
pop
lret
fwait
popa
sub
pop
push
into
inc
sbb
or
mov
jmp
cmpsb
push
loop
mov
mov
xor
jnp
mov
incl
push
daa
jae
mov
cmc
sbb
xor
push
pop
xchg
pop
cmp
icebp
fwait
mov
lods
andb
ss
push
bound
bnd
arpl
jne
ljmp
ss
jge
mov
jo
out
jp
mov
and
sbb
jle
pushl
pop
xor
mov
inc
jno
mov
test
xchg
push
mov
jmp
and
xchg
push
mov
outsl
jnp
sbb
pop
jmp
push
or
jg
inc
xor
push
popa
mov
lods
or
jno
in
repnz
stos
mov
call
cmp
das
in
cmp
in
test
mov
cli
pop
pushf
push
fs
or
jmp
ja
xor
dec
mov
xor
ror
fidivrs
and
inc
jle
mov
mov
sub
call
adc
sub
push
lea
cmp
adc
and
incl
xor
pop
ret
pop
popf
sub
fiadds
xor
fisttpl
cmp
inc
movsb
sar
decl
or
inc
mov
sub
movsb
inc
lahf
sub
cs
les
divb
push
dec
mov
jg
imul
and
loope
in
loopne
decl
stos
inc
lds
loopne
xor
xor
notb
sahf
mov
pushl
mov
lret
lock
xchg
xchg
ds
dec
imul
cltd
cmp
adc
movsl
lret
pushl
jne
incl
mov
inc
shll
push
dec
sub
mov
add
clc
les
jbe
call
loopne
xor
pusha
push
lahf
inc
dec
adc
mov
out
cmpsb
loop
mov
decl
jmp
jae,pt
push
cmc
js
fs
shrb
out
xchg
mov
cli
cmpsb
repz
pop
imul
sbb
cmpl
test
movsb
sub
jno
imulb
sub
stc
push
xor
ss
cmp
ret
pop
sbb
dec
jmp
dec
cli
pop
jae
adc
push
das
xlat
jge
dec
out
dec
pop
jae
int
mov
inc
add
add
mov
mov
fs
mov
sbb
ret
ret
ja
ss
ja
jmp
js
jl
pop
ljmp
js
fisttpll
fwait
lahf
sbb
or
aam
jge
jp
and
pop
jo
mov
call
add
jo
test
mov
cltd
jecxz
out
mov
push
cmp
mov
push
mov
mov
cmp
mov
sub
incl
inc
lret
mov
cmpsl
cmpsb
popa
mov
jmp
jb
pop
xchg
mov
loope
push
js
scas
pop
add
sbb
jns
ljmp
and
jecxz
xor
insl
jo
ja
ss
jae
adc
popa
inc
jmp
ljmp
mov
insb
das
push
out
push
outsl
sub
mov
lret
sbb
call
pushf
xchg
in
fsubrs
or
inc
shll
sub
ret
xchg
jns
cmp
scas
mov
pushl
mov
jge
inc
pop
dec
jmp
out
cmpsl
sbb
mov
sbb
int
es
idiv
pop
icebp
jl
std
mov
pop
sbb
enter
xchg
mov
sbb
inc
ss
popf
xchg
hlt
aad
cmp
adc
mov
cmp
sti
incl
mov
mov
push
push
dec
nop
xor
mov
movsb
mov
jb
and
call
xchg
pop
mov
cli
push
out
movsb
enter
mov
cmp
mov
xor
inc
call
call
nop
enter
cmpsb
loope
shrl
push
push
loop
cli
xchg
in
test
decl
cmp
stos
xchg
cmpsb
xor
pushf
sub
stos
loope
jno
les
scas
cmpsb
leave
adc
mov
nop
pusha
push
and
stos
jg
icebp
lret
xor
sbb
ljmp
in
int
adc
cmp
lret
lcall
adc
cli
call
xchg
outsb
cwtl
cmpsb
push
xchg
pop
fildll
mov
mov
xchg
in
in
cmpsb
jne
cmpsb
sub
call
pop
jp
cli
or
and
or
jmp
adc
and
sbbb
jge
or
jns
mov
cmp
cwtl
stc
or
sbb
and
mov
int3
insb
lahf
jle
adc
das
pop
sub
pop
lock
pop
add
rcr
sub
sti
fwait
imul
and
cli
mov
repnz
addl
or
ljmp
xor
dec
push
push
sub
pushf
faddp
sbb
ljmp
inc
pusha
mov
rol
fiaddl
inc
popf
or
jp
sbb
repnz
push
inc
and
call
les
sub
adc
and
imul
xchg
adc
lcall
sub
dec
add
xchg
in
xor
aad
outsb
jmp
pop
int3
js
pushl
cltd
inc
ds
shlb
test
pop
xchg
stos
rcr
jp
bound
loopne
jl
or
mov
cmp
adcl
lret
fcmovne
xor
incl
in
xor
dec
fstl
test
loope
dec
ljmp
out
fildll
loop
adc
rorl
mov
mov
ljmp
mov
mov
add
aam
mov
jp
insl
bound
cld
jg
stos
insb
mov
iret
add
in
ljmp
rcll
scas
cmc
and
fidivrs
xor
adc
addr16
popf
fcomps
fwait
stos
loope
pop
pushl
jns
fsubrs
rcll
inc
pop
push
movsb
mov
sbb
les
mov
xchg
arpl
ljmp
mov
add
cmpsb
outsl
insl
andb
out
int3
adc
jecxz
mov
test
push
arpl
es
in
addl
or
or
push
or
aaa
pop
and
out
mov
add
xor
xchg
cmc
inc
fiaddl
xchg
push
lods
xchg
cli
fldcw
mov
jg
fisttpll
sbb
lods
int
pop
push
lret
xchg
pop
clc
mov
ljmp
stos
jno
das
push
xor
sub
repz
cs
mov
cmpb
das
shll
xorb
push
push
sbb
andb
sti
sbb
mov
fimuls
fiadds
ljmp
aaa
flds
cmp
imul
call
incl
dec
test
lods
cmp
arpl
je
push
cs
dec
clc
mov
cmc
test
sub
dec
push
enter
xor
xchg
rcll
test
inc
sbb
sbb
nop
les
xor
movsb
dec
lcall
enter
lcall
fstps
ficompl
cltd
lea
mov
adc
test
jns
cmpsb
mov
popf
cmp
into
out
inc
scas
and
fnstcw
mov
jge
sarl
pop
mov
mov
mov
adc
subb
outsb
cmc
into
sbb
mov
cltd
adc
pop
ljmp
icebp
fdivrp
icebp
outsb
adc
ror
cmp
loope
dec
mov
pop
or
rorb
sbb
lahf
push
add
pop
mulb
pop
mov
sbb
cmp
jmp
xor
pop
sub
pop
lea
cmp
or
mov
jmp
in
pop
fisttpl
ret
adc
xlat
fistl
mov
jge
sub
mov
in
in
adc
pop
fcompl
out
xchg
pusha
mov
sub
lods
and
mov
jmp
fdivs
lcall
sbb
fnstsw
movsl
call
out
xchg
sub
pop
dec
mov
call
int
and
jle
sub
dec
scas
aaa
imulb
jl,pt
test
bound
or
sub
jne
lcall
adc
push
stc
mov
jmp
loope
inc
adcl
xchg
loop
mov
mov
inc
pop
push
lods
push
or
jg
ljmp
fucomi
and
leave
cmc
pop
cmp
leave
jmp
cs
lcall
cmpsl
pop
stc
mov
dec
mov
iret
pushf
in
sbb
jbe
pop
sbb
sbb
das
sub
call
data16
stos
ljmp
fisubrl
dec
pop
xorps
decl
shrb
pop
cld
dec
in
xchg
mov
mov
repz
mov
ds
std
inc
mov
repz
cld
fsubrl
push
bound
mov
fcmovnbe
arpl
inc
mov
cmpsl
adc
shll
aaa
out
adcb
leave
and
sti
imul
dec
xlat
cmp
ljmp
repz
xchg
add
subl
stos
test
mov
or
incl
ljmp
sub
repz
jle
push
and
stc
fs
mov
mov
daa
inc
notb
lods
lods
fidivrs
inc
mov
test
and
decl
jge
dec
xlat
in
fimull
addl
repz
mov
jmp
dec
add
jecxz
mov
imul
stos
inc
dec
xor
jns
int
repnz
std
shll
fisubrl
je
cli
in
mov
mov
pop
fadd
cmp
fld
sbb
stos
ljmp
push
popa
cmp
cmp
pusha
mov
push
push
or
daa
push
popa
adc
call
sub
mov
jno
add
lcall
add
outsl
adc
inc
imul
add
inc
scas
push
ljmp
mov
sub
xor
in
mov
call
xchg
movsl
sbb
pop
jnp
cld
sub
in
sbb
popf
push
and
xchg
mov
arpl
fprem1
out
lret
sub
jl
sbb
repz
jb
call
cld
dec
loopne
sarb
xchg
scas
sets
mov
pop
adc
call
flds
pop
inc
hlt
call
shrl
cmpb
mov
lcall
xor
outsb
push
mov
mov
adc
and
call
es
xor
lcall
orl
pop
movsb
enter
add
mov
pushl
notl
inc
mov
mov
clc
out
shrb
jno
push
ljmp
or
sbb
xor
rcll
xorl
pop
sub
and
inc
dec
mov
clc
sub
dec
add
adc
inc
test
jmp
dec
or
and
dec
sbb
in
out
leave
mov
shll
fistpll
and
jno
incl
mov
push
ret
stos
sbb
lds
aas
pop
cld
ljmp
fnstenv
imul
push
push
loope
push
add
adc
aaa
inc
mov
mov
fdivrs
dec
js
cmc
paddd
incl
ljmp
sarb
xchg
outsl
xchg
fcomps
mov
mov
repz
fmuls
sti
enter
ficomps
loopne
arpl
xchg
xor
add
sti
jmp
xchg
dec
int3
mov
loope
pop
outsb
in
lret
adc
adc
pusha
and
xor
xor
fs
mov
mov
add
inc
jle
incl
rorl
lcall
test
addr16
movsb
test
andb
add
jmp
in
cmp
xorl
sti
call
jbe
xchg
mov
mov
sbbb
dec
jns
push
adc
jg
jg
imul
pusha
xor
aaa
pop
mov
cmp
xchg
add
pop
xchg
cmpsb
lods
push
sub
leave
pushl
jno
pop
and
mov
cmp
mov
or
clc
aas
mov
pop
pop
jg
cmp
xchg
nop
push
movsb
into
pop
push
insb
xchg
imul
mov
cmp
out
sub
adc
push
and
leave
shrb
jnp
jns
adc
incl
ljmp
push
or
xor
rolb
fs
dec
repz
push
add
outsl
adc
ljmp
cmc
mov
stc
inc
sahf
add
incl
cmp
aaa
test
icebp
je
call
fwait
adc
lcall
jg
mov
xchg
mov
or
cs
in
and
pushl
cmc
push
mov
inc
add
fidivs
inc
rol
cmp
pop
mov
jge
push
fs
test
lcall
mov
fsubl
stos
sbb
adc
pop
test
adc
cwtl
out
jmp
lds
imul
mov
mov
cmp
cmp
xchg
push
pop
push
push
jmp
sub
flds
inc
ror
add
adc
pop
imul
cwtl
enter
imul
dec
lods
rcll
movsl
jg
jb
into
mov
xchg
pop
xlat
roll
ficoms
jmp
out
pop
lret
pop
pop
or
out
ljmp
dec
push
aad
ljmp
pop
cmpsb
pcmpgtd
jmp
pop
mov
xchg
insb
call
lods
shrb
incl
sub
xor
jl
into
in
mov
inc
dec
ss
fsubrs
mov
hlt
decl
and
outsb
or
sub
sub
add
add
decl
lock
add
aam
sbb
cld
xchg
or
mov
pop
pop
xchg
cmpsl
sar
hlt
jmp
out
xchg
dec
jle
loop
jle
or
mov
aaa
cld
call
inc
fcoml
icebp
or
inc
push
aas
enter
ds
hlt
cs
mov
jne
cmp
in
in
add
int
cmp
aas
cmpsb
mov
pushl
sbb
lret
inc
jl
xor
xchg
mov
sub
xor
jmp
xchg
cmp
pushl
pop
insb
fwait
jns
movsb
sub
mov
push
orb
call
push
dec
sbb
cld
stc
scas
jge
clc
ss
inc
cld
inc
inc
and
add
jmp
lock
stc
scas
jnp
rclb
push
xlat
popa
cmpsl
xchg
repnz
aam
push
dec
ja
movl
or
xor
push
cmp
out
or
dec
lahf
fwait
imul
movsb
dec
repnz
mov
ror
pop
shl
mov
stos
imul
test
loop
ljmp
lods
cli
or
add
xor
pop
cmp
lret
mov
jmp
push
lcall
in
leave
push
aad
nop
xor
lret
jmp
shlb
sti
test
mov
rcrb
pop
ret
xor
cmp
fwait
cwtl
mov
fcomip
pop
ds
pop
pop
ljmp
cs
mov
mov
jg
push
or
aad
lahf
sub
inc
push
cs
pushl
jb
and
sub
inc
cmc
add
jle
hlt
das
mov
xchg
mov
stc
mov
push
push
mov
mov
sub
xchg
pop
hlt
jl
ficompl
and
ljmp
jg
adc
or
sahf
sbb
push
mov
mov
mov
xchg
pop
dec
in
or
xchg
decl
sub
mov
mov
sbb
and
or
adc
insb
mov
lods
decl
pop
jbe
lcall
stos
out
push
ret
pop
pop
inc
adc
jl
sbb
jl
jnp
xor
aam
fldcw
pop
sub
dec
xchg
loop
dec
dec
in
cmc
jl
sub
pushl
sti
xchg
cwtl
cmpsl
aad
stos
rcrl
sub
sbb
fwait
jae
adc
lcall
sbb
fwait
jmp
ret
xchg
jae
fisubl
out
pop
push
inc
lock
outsl
mov
mov
mov
add
std
stos
shl
ss
jp
mov
enter
call
sti
outsl
push
lahf
dec
cmp
lods
mov
inc
decl
add
cmp
movl
imul
idiv
push
lcall
add
sub
pmullw
repz
int
iret
lcall
lock
loopew
pop
inc
wbinvd
mov
mov
rep
add
roll
xchg
fsubrs
push
out
or
test
dec
mov
scas
clc
decl
sub
sbb
fsubl
mov
lock
leave
les
push
xchg
call
or
ds
hlt
cmp
call
popf
shl
sarl
decl
or
xlat
xchg
jmp
push
push
aaa
ret
data16
xchg
in
jb
bound
std
jmp
inc
push
cmp
aaa
repz
inc
mov
mov
or
int3
loopne
aaa
clc
stc
pop
ficomps
call
js
movsb
dec
icebp
fistl
pop
pop
sbb
mov
in
out
inc
adc
jno
xchg
decl
mov
cmp
es
inc
and
scas
pop
negl
fwait
pop
pop
loop
add
js
mul
push
lret
mov
pusha
fs
sub
jmp
cmc
ja
cwtl
sbb
in
adc
fbstp
pop
outsl
cmpsl
dec
jp
pop
ret
jg
lcall
mov
push
insl
mov
push
or
inc
pusha
aam
sub
call
sbb
je
sahf
mov
pusha
push
dec
ret
int
lret
aas
pushf
call
mov
ljmp
out
sti
xchg
dec
pop
addr16
call
lods
xor
jg
and
mov
pusha
stc
or
aaa
push
mov
dec
adc
jmp
inc
imul
in
xchg
into
sub
lret
add
xorl
test
out
lcall
loop
add
aas
addb
mov
cld
call
add
add
test
ror
xchg
cmp
mov
jnp
pop
incl
push
mov
sbb
rcll
sbb
xor
jecxz
xlat
lahf
or
out
test
incl
add
cmc
insl
cmpl
jmp
movsl
xchg
mov
push
pop
cmp
xchg
cmpsb
and
mov
jbe
enter
sub
cmp
div
decl
decl
scas
cs
push
cmc
cmp
fwait
jp
incl
push
sbb
mov
insl
xor
lea
dec
shll
sbb
push
leave
sub
sbb
mov
add
repnz
mov
fs
fdivrp
jle
xor
not
or
lea
mov
xorl
cmpl
lods
jo
pushl
inc
ss
xor
xlat
fwait
jbe
hlt
xor
popf
mov
js
aam
jl
shll
loopne
pushl
dec
cld
insl
ret
xchg
mov
daa
int3
pop
testb
call
and
add
adc
rcrb
ljmp
into
pop
cmp
push
imul
popa
cmp
mov
lcall
sti
iret
cmp
stc
add
fcoms
cs
inc
lods
push
lcall
dec
add
in
sbb
sbb
fistpll
sti
jle
xchg
mov
sub
aam
lea
lds
fimull
sub
mov
jmp
sub
mov
inc
lahf
xchg
imul
jb
mov
add
sar
cld
push
imul
das
pop
xchg
iret
cmp
mov
es
movsl
jo
dec
fnstenv
push
mov
xor
std
xchg
rcll
dec
sahf
xlat
xchg
mov
mov
lods
jecxz
int
mov
mov
sbb
data16
lcall
mov
insl
fucomi
pop
gs
xlat
rcll
mov
test
jmp
fstl
mov
or
addl
adc
pusha
mov
push
aad
stos
xor
pushl
or
and
cmp
adc
sbb
mov
xor
jae
shrb
aam
pop
lock
std
push
push
int3
push
lods
out
inc
mov
mov
jle
incl
imul
jbe
xchg
nop
out
testl
in
inc
push
lods
inc
scas
cmp
sbb
pop
je
lea
mov
sbb
cmp
int3
nop
mov
negl
fwait
xchg
fs
mov
jb
lds
dec
test
scas
inc
repnz
and
pusha
pop
mov
inc
in
mov
inc
sbb
fstpl
mov
icebp
mov
sar
pop
dec
cmp
mov
mov
or
sub
out
aam
jno
xor
sub
lea
outsl
scas
lcall
mov
inc
xchg
push
mov
lcall
call
jns
jg
or
lret
popf
bound
push
cmp
movsl
daa
imul
jmp
decl
jmp
xchg
jae
dec
leave
test
repnz
lret
add
loope
jo
add
mov
shlb
pushf
mov
sbb
fcmovne
or
out
or
icebp
and
cltd
cli
add
mov
cli
pop
icebp
and
test
fucomi
cli
decl
xor
rol
ja
les
fisubrs
add
xchg
les
or
lcall
mov
jbe
mov
xorb
push
pop
rclb
lret
or
jno
add
pusha
dec
jmp
and
pushl
movsl
leave
xlat
jb
add
loope
push
sub
jle
inc
cmp
xchg
ret
inc
jecxz
adc
test
lods
or
out
inc
lret
bound
bound
pop
pop
in
lods
xor
and
icebp
ljmp
pop
xchg
mov
test
xor
out
nop
inc
jns
inc
loopne
addr16
fwait
push
arpl
pop
test
and
mov
movsl
inc
repz
mov
add
mov
inc
dec
mov
insl
or
fsubrs
jecxz
out
xor
je
scas
loopne
jo
mov
loope
xorl
mov
sbb
or
add
pop
pop
sahf
xor
cld
test
mov
imul
cli
call
xchg
mov
cmpl
mov
repnz
call
ljmp
mov
aad
test
daa
xor
ror
xchg
pop
imul
push
stc
cmp
hlt
jmp
lret
aaa
pop
push
push
sub
xchg
adc
mov
push
lock
clc
add
jbe
xchg
aam
inc
lcall
add
push
imul
in
in
pop
int
adc
pushf
dec
mov
call
int
fdiv
sti
fwait
push
cwtl
sub
add
fidivrs
cmp
popa
rorb
jmp
rcrb
mov
cltd
mov
ja
sbb
aaa
pop
into
fdivl
bound
imul
ja
insb
dec
xor
loopne
iret
push
inc
shrb
addb
lcall
sub
pushf
and
adc
jb
mov
ficompl
jns
sub
aaa
fdivrs
scas
cwtl
cmp
into
mov
mov
std
stos
and
aad
scas
cmp
fwait
pop
std
mov
mov
loopne
out
les
pushw
sbb
push
icebp
pusha
jb
or
popa
out
push
sbb
jg
dec
js
xchg
insb
fadd
out
dec
sub
and
fistpl
fs
cmp
jg
adc
in
clc
dec
jecxz
adc
gs
mov
aas
sbb
cmpsb
addr16
in
lcall
adc
cmp
pop
pusha
adc
xchg
push
mov
int
cltd
loopne
xchg
shlb
incl
fs
movsl
jle
mov
jmp
loopne
psubusb
stos
push
push
cmpb
sub
jg
mov
in
lods
dec
imul
mov
sub
adc
leave
aaa
xchg
cs
cmpps
ljmp
dec
lret
mov
inc
mov
xor
imul
cwtl
dec
gs
sbb
daa
lret
aas
xchg
sub
mov
ljmp
aad
push
xor
or
notb
enter
movsl
jae
lcall
test
mov
push
scas
adc
pop
movsl
lcall
push
cld
decl
push
pushf
in
insb
mov
shl
adc
lock
out
ljmp
mov
xchg
push
cmc
xor
mov
gs
ret
add
shlb
lods
lea
loope
sub
mov
and
arpl
incl
xchg
sbb
or
mov
jnp
push
inc
cmpsb
aaa
pop
sahf
scas
or
fimull
xchg
insb
xchg
jmp
adc
jg
jo
in
test
adc
pop
jg
loop
mov
gs
incl
cmp
pop
scas
push
loopne
adc
push
mov
std
punpcklwd
out
out
add
pop
adc
cld
call
cmp
lods
mov
push
cmp
push
add
and
mov
dec
repnz
jle
mov
insl
jp
jnp
mov
out
pushf
icebp
and
out
push
sarb
pop
in
push
cwtl
jne
into
cld
and
xchg
cltd
xlat
outsl
cltd
or
add
mov
call
sahf
sub
mov
add
ret
inc
xchg
dec
test
nop
das
mov
jns
mov
jmp
test
test
test
movsl
jg
es
repz
data16
add
popf
mov
decl
sbb
push
outsl
mov
outsl
sahf
das
ja
in
imul
sbb
sub
ljmp
shlb
or
sbb
leave
pop
push
sti
lea
sbb
push
idivl
jmp
adc
stc
movsl
push
sbb
lret
mov
mov
fcomip
pop
idivb
pop
es
jo
mov
or
sarb
dec
xor
pushl
popf
xbegin
push
rcl
sbb
push
jae
je
addr16
push
out
dec
and
mov
fldenv
sbb
pop
out
aad
les
rcll
cld
int3
ss
cmp
vsqrtpd
xchg
pop
pushl
push
sbb
sarl
xlat
inc
adc
pop
repz
push
ret
sub
push
mov
pop
mov
mov
pusha
ret
and
xor
je
addr16
sbb
xchg
es
pushl
ret
and
jae
insl
xchg
push
lret
adc
ds
adc
or
in
mov
in
cmpsb
pop
iret
je
cmp
in
lods
dec
and
cmpsb
pop
sbb
xchg
mov
jp
pushl
adc
xchg
jno
test
sub
cmp
testb
xlat
sub
cmp
add
add
xchg
fcoms
mov
adc
lcall
jbe
ret
stc
scas
into
mov
sub
sub
int
lret
mov
mov
mov
xor
or
outsb
mov
mov
jmp
mov
sbb
repnz
sbb
gs
xlat
cmp
daa
das
sub
adc
xor
dec
incl
addb
call
push
aam
jbe
loop
scas
push
mov
stos
sub
out
mov
jge
incl
sub
push
js
mov
icebp
ficompl
mov
or
sbb
sarl
jmp
outsb
addb
mov
iret
sub
mov
pushf
aas
pushf
jbe
daa
aas
push
push
icebp
jecxz
lcall
test
mov
hlt
stc
fcoml
into
iret
lods
pop
pop
jmp
push
add
lcall
xchg
push
dec
add
idiv
stos
lret
or
mov
test
shlb
mov
push
sbb
lcall
pushl
sarb
sub
cmpsl
or
in
popf
mov
fwait
jns
mov
addr16
fs
mov
imul
stos
in
stos
xor
mov
mov
mov
mov
incl
jo
lahf
mov
dec
shll
shrb
push
add
mov
mov
pushl
out
inc
adcb
adc
cmp
imul
xchg
push
mov
arpl
jg
ljmp
dec
mov
fidivs
ror
jecxz
out
movsb
pop
add
in
push
ljmp
and
cltd
mov
mov
pop
rorl
cmpl
popf
push
lods
mull
call
addr16
jmp
xchg
loopne
mov
ret
and
dec
xor
inc
call
les
xor
xchg
xor
pushf
rcll
sti
fisttpl
xor
push
decl
jnp
cmp
dec
in
rolb
inc
jbe
adc
dec
ljmp
clc
dec
cmp
sbb
mov
push
adc
mov
adc
inc
loop
pushf
insb
sbb
add
xchg
shll
sub
mov
fistps
dec
dec
push
dec
ss
cmp
dec
bound
test
dec
mov
push
mov
mov
dec
xchg
mov
addr16
rorl
iret
dec
aas
lods
flds
ljmp
xchg
sbb
cwtl
dec
out
loop
ret
push
rorb
dec
and
sub
cmpsb
cwtl
mov
push
int3
sub
and
daa
and
repnz
hlt
xor
sub
in
sbb
sub
fisubl
sub
test
push
mov
push
cmp
sbb
mov
stos
lret
shrb
jp
jl
js
add
adc
loope
mov
out
clc
ljmp
jg
fildl
cmpb
orb
ljmp
inc
xor
mov
mov
lret
sar
add
dec
stos
xchg
add
push
lds
int3
out
mov
pop
sbb
jle
jmp
loope
add
and
sbb
movsb
inc
sbb
jg
bound
icebp
scas
es
lcall
xchg
in
mov
int3
mov
decl
adc
popa
daa
les
in
jno
test
jg
dec
lods
mov
sub
inc
stos
test
pushl
lods
add
push
leave
lret
xor
jnp
mov
inc
addl
pop
out
inc
xor
repz
inc
push
cmp
cli
lahf
test
test
push
cmpsb
xor
lcall
pop
lahf
testl
stos
loope
out
clc
sbb
orb
xor
mov
insl
push
add
cmp
mov
imul
data16
orl
fstpt
ret
xchg
add
jmp
fdivrs
cmp
add
loop
repnz
xchg
cwtl
mov
sbb
sub
mov
sub
aaa
sbb
jmp
mov
dec
inc
mov
fidivrl
or
cmp
test
cmp
mov
in
ret
jns
xor
inc
rcl
bnd
inc
insb
clc
push
add
mov
mov
xlat
and
pop
push
mov
stos
lods
push
aas
adc
xchg
add
mov
jmp
out
mov
shl
ljmp
fists
and
jne
dec
jmp
test
lods
cltd
pop
mov
mov
push
js
daa
lods
shr
sub
adc
incl
adc
or
fisubs
pop
mov
adc
or
mov
call
lcall
push
xchg
shrl
pop
dec
sbb
jb
cmpsb
jmp
out
or
inc
jnp
jmp
insl
movsl
xchg
daa
andb
test
adc
das
push
mov
jmp
shlb
add
loopne
cltd
imul
ds
jg
outsb
jmp
adc
fisttpll
add
add
sbb
cmp
mov
mov
xchg
test
jg
fs
pop
in
rorb
jns
dec
call
cmp
push
arpl
jbe
inc
lahf
or
sbb
cmp
and
scas
popa
mov
xor
incl
push
popf
pusha
dec
outsb
and
les
fwait
clc
mov
outsb
popf
mov
and
inc
mov
outsl
jecxz
rcrb
ret
inc
mov
lds
faddl
push
sbb
test
push
loop
int3
mov
pop
sbb
jecxz
adc
int
jmp
mov
fdivrp
incl
mov
mov
xor
sbb
mov
adc
fwait
jb
mov
mov
mov
pushf
add
rcll
inc
jno
mov
fstpl
jnp
std
push
lahf
lea
flds
hlt
sub
outsl
dec
fildll
shlb
jo
inc
add
ljmp
xchg
stc
into
dec
jno
pop
aam
pop
push
mov
sub
loope
push
imul
out
add
cmp
push
mov
cmc
mov
popf
dec
lcall
outsl
fists
pop
dec
daa
sbb
mov
mov
ret
and
loopne
sbb
call
xor
scas
push
and
push
enter
iret
xchg
xlat
loopne
test
mov
daa
push
xchg
out
clc
incl
adc
cmp
jle
inc
sub
pop
test
jae
loope
mov
mov
cmpsb
aam
cmp
in
cmp
and
jnp
js
pop
aam
lcall
inc
add
push
mov
in
and
mov
imul
loopne
into
push
lcall
mov
mov
std
pop
loopne
pop
ds
sub
sarl
push
call
scas
jmp
ret
inc
inc
insb
sbb
xlat
cmp
ret
lcall
add
andb
loop
clc
mov
pop
and
movsl
jno
adc
dec
sarl
subb
pop
jo
sbbl
push
pop
pop
pushf
ficoms
xchg
xor
fbld
into
pop
daa
cmp
mov
fimull
in
sbb
mov
and
add
int
test
xchg
jns
push
jno
add
lcall
fwait
push
pusha
andb
jbe
push
inc
xor
lea
sbb
lock
incl
and
cs
std
cld
scas
call
hlt
or
or
ret
and
ja
fwait
arpl
dec
loopne
dec
mov
inc
push
aad
and
stos
insl
mov
jno
mov
lock
leave
pop
jge
jle
incl
cltd
out
mov
in
push
adc
pop
loopne
inc
arpl
repz
es
sub
pop
fcmove
clc
lcall
and
aas
xor
add
sub
scas
scas
mov
fstpt
insb
xchg
out
sub
push
adc
push
or
dec
movsl
add
mov
pop
jge
mov
jl
pushl
movsb
movsb
bound
subl
into
push
lock
mov
sbb
inc
jl
add
lcall
sbb
mov
jmp
sub
sbbl
sbb
jmp
fs
stos
cmp
push
cmp
xchg
adcb
xchg
sahf
inc
and
jmp
int3
and
pop
mov
iret
xchg
inc
clc
jne
or
xchg
xchg
movsw
cwtl
add
lret
mov
xchg
lahf
cs
cwtl
jle
add
xor
movsb
sbb
pushl
stos
push
testb
nop
xor
pop
sub
lods
pop
sub
std
fildll
lods
push
pop
jbe
and
pop
sub
aas
scas
add
das
fsubrl
mov
incl
loop
clc
inc
loopne
in
xchg
leave
cmp
addb
add
lea
mov
ljmp
lret
cmp
dec
add
mov
clc
cmp
mov
stos
pop
add
dec
fwait
add
outsl
jle
out
jle
xchg
cmp
push
adc
filds
ljmp
mov
pop
into
call
loopne
push
inc
mov
pop
mov
ret
call
or
decl
lcall
xor
sbb
inc
popa
mov
fdivr
out
cli
pushl
shrb
insb
mov
fcmove
sbb
mov
jne
sti
in
or
cmpsb
fldenv
push
adcl
mov
mov
dec
push
or
adc
ljmp
nop
add
stos
jb
mov
or
lret
pusha
popf
test
call
jo
mov
popf
fistpll
cld
mov
ficomps
jns
jmp
stc
in
fsubs
push
lahf
pop
aad
gs
mov
inc
xor
cs
xchg
decl
ja
je
imul
cmpsb
lret
add
das
cwtl
lahf
and
pop
dec
inc
cmp
mov
decl
rorl
jno
dec
mov
cmp
dec
mov
les
test
ljmp
sbb
and
push
pop
cmp
shl
in
cmp
xor
jns
sar
or
fistpll
or
int3
ficoml
jmp
bound
enter
mov
push
pop
hlt
dec
pop
xor
mov
out
push
mov
pop
sub
inc
xor
pop
mov
inc
adc
incl
in
insl
fstpl
cmp
mov
fldenv
arpl
sahf
push
ljmp
push
mull
out
cltd
sbbl
fisubrs
xor
mov
lock
test
mov
mov
xchg
xchg
adc
test
cld
sbbb
loope
lods
jnp
das
jg
add
mov
adc
mov
or
fnsave
lods
xchg
shlb
ja,pn
mov
pop
lods
call
jp
push
push
xorl
mov
cltd
in
mov
mov
test
cs
jns
or
push
push
or
dec
xchg
fs
fnstcw
sahf
pop
add
xchg
lock
inc
dec
insl
sbb
ja
les
ret
loop
mov
dec
loopne
incl
lds
sahf
jmp
xchg
call
loop
out
mov
lcall
dec
cwtl
xchg
aaa
sub
aam
adc
and
aam
int
out
and
sbb
mov
call
lods
fstpl
xchg
push
xchg
add
cmc
lret
pop
cmpsb
add
scas
sub
mov
scas
clc
pushl
add
popa
outsl
add
lcall
jo
pop
lock
shr
sbb
shrb
sub
fmul
xchg
lods
xor
mov
ljmp
arpl
movsl
pop
call
dec
fldl2e
das
and
push
jo
lods
js
fiaddl
jno
dec
inc
fs
jo
jmp
lock
pop
scas
add
filds
out
imul
lahf
jp
push
dec
pop
inc
cmpsb
push
sub
lods
into
insl
add
push
ds
and
jnp
add
pushf
mov
repz
jecxz
into
shll
jb
adcl
jg
or
jmp
pop
dec
fsts
pop
add
lea
sbb
jno
fdivrl
pop
push
pushl
adc
inc
push
mov
adc
in
inc
and
mov
cwtl
cmp
jmp
adc
mov
out
cltd
adc
outsl
hlt
incl
jecxz
jmp
outsb
adc
adcb
lds
stos
add
jmp
test
pushl
stos
lret
cmpsb
jl
xchg
lea
add
mov
fldt
mov
pop
addr16
lcall
lahf
imul
arpl
ret
mov
xchg
xor
dec
test
xor
push
cltd
cmp
xchg
cmc
ja
xor
dec
cmp
mov
jl
mov
jmp
mov
xchg
mov
jnp
mov
hlt
scas
cli
jnp
xchg
dec
push
add
sub
dec
jp
cmp
push
mov
mov
je
in
or
pop
movsb
dec
loope
or
in
aad
mov
rcrl
mov
dec
mov
xor
mov
mov
jp
lcall
xorb
inc
or
mov
xchg
or
ljmp
xchg
cmpsb
dec
imul
dec
push
or
adc
ljmp
pop
jae
jg
test
fsub
cmp
xchg
ret
jle
sbb
test
ljmp
dec
int
and
test
ret
loope
cmp
jmp
sbb
mov
sbb
dec
sbb
lcall
and
div
nop
jge
mov
mov
dec
test
incl
push
aas
pop
lods
fbstp
dec
dec
cld
jecxz
mov
xchg
push
mov
mov
incl
pop
jmp
js
cmc
xchg
push
dec
push
imul
popf
xor
sub
fsub
mov
sti
mov
pushl
cmp
mov
aaa
inc
xchg
cmpsb
pop
inc
or
imul
outsb
popa
mov
cli
aad
sub
sar
xchg
xchg
mov
jb
mov
adc
push
jge
call
decl
inc
sarb
test
jo
inc
mov
call
hlt
fstl
int
sub
dec
push
jl
mov
sar
mov
cli
or
and
jbe
add
loope
xchg
add
lock
movsb
cmp
inc
jl
push
jmp
lock
lcall
scas
add
ljmp
movsw
ret
mov
cmpsl
mov
dec
push
decl
mov
jp
icebp
and
test
hlt
std
jecxz
std
decl
xchg
xchg
pop
hlt
dec
add
mov
mov
mov
mov
loope
cmp
add
scas
pop
daa
cmp
ds
or
jmp
arpl
xchg
test
mov
loop
ljmp
pop
int3
test
mov
mov
outsl
test
mov
cmp
hlt
movq
jmp
in
test
nop
in
dec
lock
leave
leave
adc
mov
ucomiss
leave
subb
ljmp
ror
inc
dec
mov
mov
fcompl
and
dec
mov
jmp
stos
cwtl
into
pop
cmp
repnz
xchg
cmpsb
jecxz
loopne
add
inc
ljmp
decl
pusha
xor
pop
jl
jmp
add
ja
fucomi
stc
fbld
mov
mov
xor
xor
jmp
jmp
inc
out
insl
cmc
cmp
jle
repnz
xchg
mov
mov
sbb
add
pop
inc
cmp
lods
rorb
clc
jo
in
cli
fxtract
pop
jg
push
jbe
mov
sti
es
or
lock
inc
mov
in
jns
lcall
xchg
dec
sbb
aas
in
imul
jmp
pop
pop
or
lock
test
jne
and
adc
pop
lcall
mov
std
insb
sub
aaa
stc
in
inc
lea
push
and
incl
or
sti
lea
enter
push
dec
inc
fisubrl
or
sbb
mov
push
mov
xchg
xchg
dec
addr16
adc
cmp
dec
xchg
outsl
inc
call
push
sub
loope
filds
pop
fs
cmp
mov
cld
jo
lahf
jle
testb
std
push
pop
or
adc
insb
sub
mov
hlt
mov
std
test
out
iret
int
push
cld
dec
jg
xlat
imul
adc
rolb
jno
pop
clc
sub
cmp
lcall
xrelease
insb
movsbl
dec
jo
mov
xor
dec
mov
into
cmp
lock
mov
stos
js
push
lea
stos
stos
dec
fwait
bound
jp
cmp
fwait
das
sti
and
les
push
mov
pop
fsubrl
jb
push
cli
fisttpll
andb
pop
xchg
nop
mov
mov
fcomps
ficomps
data16
adc
shll
mov
mov
push
out
pop
aaa
dec
cmp
loope
repz
mov
sub
fiaddl
into
sbb
andb
cmpsl
call
in
clc
test
cld
test
xchg
inc
js
xchg
andl
xor
rol
mov
call
and
sub
dec
test
sub
dec
icebp
enter
xchg
and
cs
loope
test
clc
adc
inc
push
std
mov
ret
adc
push
mov
dec
int3
or
sub
jecxz
das
jmp
daa
les
mov
orb
push
scas
data16
into
cmp
incl
jnp
inc
fcomps
js
mov
mov
aas
clc
cmc
dec
hlt
adc
int3
pusha
jg
xchg
xchg
mov
aas
icebp
fisttps
outsl
sbb
pop
scas
xor
in
mov
cmp
or
in
push
mov
call
and
fiadds
inc
fwait
out
xchg
call
mov
or
in
es
jae
push
js
inc
stos
jg
inc
mov
dec
push
aam
jg
mov
jmp
jg
mov
call
cmp
push
sub
cmpsb
xchg
mov
stc
xchg
inc
popa
inc
aaa
mov
xor
mov
out
push
popa
das
pop
add
cmp
test
sub
sbb
lcall
pop
sbb
dec
fiadds
loope
jo,pn
fdiv
sub
cmp
fs
incl
and
inc
xchg
in
insl
inc
mov
in
popa
loope
sub
xchg
adc
subl
sbb
ds
pop
and
sbbb
and
pusha
scas
inc
pop
insl
test
sbb
call
jno
nop
outsl
xchg
xlat
enter
sbb
clc
outsb
sub
mov
cmp
incl
mov
mov
sbb
push
rolb
adc
jbe
push
pop
jle
sarb
call
imul
movsb
je
movsl
nop
sub
pop
mov
popf
scas
hlt
jmp
jns
mov
push
call
xor
daa
aad
std
sbb
cwtl
add
mov
lahf
in
imul
xchg
jnp
add
dec
lahf
fisttpl
sbb
adc
xor
inc
mov
scas
ja
or
in
jp
mov
cs
outsb
or
andb
test
push
sub
fisttpll
mov
clc
jae
cmp
and
fdivrl
add
ljmp
push
lret
js
inc
lock
adc
push
and
cs
inc
jae
lds
pusha
insl
add
incl
decl
dec
lea
pop
call
dec
test
mov
cmpsb
outsl
sahf
imul
jl
push
jge
xchg
push
mov
stos
decl
mov
jns
xor
jnp
dec
je
lods
movsb
mov
mov
cmp
jmp
das
mov
outsl
inc
orb
das
xchg
lret
imul
xor
pop
ljmp
jp
ss
mov
push
icebp
ljmp
sub
mov
jae
cli
push
imul
jmp
orl
jne
stos
push
pop
dec
lea
jb
fsubr
mov
test
idivl
jg
test
cmp
cmp
out
repz
ljmp
clc
sbb
fidivs
jmp
pusha
es
sub
out
ljmp
mov
stos
xchg
inc
xchg
lods
xor
mov
scas
fbld
sbb
fidivrl
push
jns
lcall
lcall
xor
fcomp
xchg
xchg
cmpsl
idiv
cmp
negl
in
sar
negb
nop
in
dec
hlt
lods
jae
out
sbb
push
jmp
cmc
or
lret
ja
jg
mov
jmp
outsl
lcall
in
mov
push
jge
ss
add
ljmp
movsb
clc
subb
cmpsb
sti
jbe
mov
hlt
mov
stc
dec
mov
out
xchg
sub
sbbb
out
scas
shrl
sbb
cld
aam
dec
subb
cmp
cmp
push
adc
fwait
iret
pop
mov
test
mov
xchg
mov
sahf
mov
loop
add
push
fidivs
adc
call
ja
or
fstpl
lret
arpl
int3
add
pushl
or
popa
data16
aaa
clc
xchg
gs
in
js
sarl
call
push
jecxz
out
push
shl
xchg
inc
inc
add
and
out
adc
ja
arpl
call
mov
dec
mov
pop
inc
adc
loopne
jnp
aad
outsb
adc
in
mov
xorl
adc
sarl
sbb
jmp
cmpsl
inc
pop
push
ja
ljmp
arpl
dec
xor
repz
xchg
dec
pop
jns
jmp
push
inc
test
ret
add
add
stc
mov
push
shlb
and
scas
out
adc
xchg
mov
mov
aaa
std
lcall
fnstenv
std
sbb
mov
outsl
pop
repz
mov
sbb
push
adc
into
sti
xchg
clc
xchg
aas
aaa
leave
movb
subps
and
mov
testl
ljmp
cmpsb
fcmovnbe
push
push
xchg
lea
dec
cmp
inc
mov
ficoml
push
std
call
inc
dec
jno
pop
mov
mov
pop
xor
xchg
aaa
outsb
ds
jmp
jle
mull
roll
dec
xor
int3
push
es
iret
push
and
imul
cli
pushl
mov
call
xchg
pop
inc
insl
jns
addl
and
ljmp
lret
add
or
pop
sub
xor
or
add
lcall
ret
dec
push
insb
lret
ds
pop
sarl
add
or
inc
and
jmp
cmp
push
add
dec
push
mov
test
adc
or
cmp
sub
sbb
lods
dec
call
push
mov
sub
cmpsl
test
sub
push
inc
out
loope
dec
cmc
push
loopne
xchg
add
mov
xor
sti
sbb
jmp
and
and
shrb
shlb
lods
sbbl
ljmp
sub
add
adc
add
in
in
loope
jl
sti
jns
jno
jmp
mov
into
adc
push
insl
ret
push
jp
push
dec
mov
dec
xchg
das
push
cmp
fiadds
ljmp
mov
xchg
popf
jno
sub
cmp
mov
imul
shrb
mov
incl
icebp
popl
push
xchg
sub
test
dec
mov
test
jmp
or
ss
mov
cmpsb
fnstcw
cmpsb
mov
out
xchg
stos
sbb
ret
mov
test
jne
stos
xchg
decl
fsts
popf
les
pop
jg
popa
adc
push
fsubrl
test
mov
mov
cmpb
mov
cli
inc
pop
pop
jo
and
mov
ds
xchg
add
mov
add
clc
clc
mov
jae
sub
and
or
sti
iret
jno
inc
aad
adc
sar
in
pop
scas
loope
mov
mov
or
decl
daa
mov
jp
into
fidivrl
and
pop
jg
mov
decl
mov
dec
adc
or
loop
movsb
sbb
sbb
leave
imul
sbb
cmp
mov
push
into
xchg
in
add
rcrl
leave
adc
fildll
jg
inc
cmc
and
rolb
adc
mov
inc
daa
pop
flds
test
int
mov
into
and
cmpsl
adc
pop
jg
mov
das
cmp
sti
outsl
not
scas
stos
or
sub
xchg
rolb
add
call
sarl
data16
adc
loop
or
movsl
fbld
cli
lcall
nop
ja
aam
jmp
fbstp
xchg
or
mov
fidivs
or
jns
rcrb
sub
pop
sub
mov
aam
cmpl
subl
andl
mov
cmp
test
lcall
f2xm1
je
cmpsb
dec
cmp
hlt
and
sub
jecxz
fsubrp
inc
jecxz
mov
jbe
fnsave
call
aam
xchg
out
mov
lss
loop
and
cmp
jbe
jnp
lea
imul
aam
cmpl
sbb
or
hlt
xor
shl
inc
mov
pop
push
mov
sar
mov
into
jnp
int
stos
leave
sbb
cmp
lahf
mov
nop
pop
arpl
lcall
mov
mov
pop
or
jp
sub
jg
push
fdivr
jg
call
push
gs
xchg
fbld
lods
cmpsb
adc
ja
in
test
dec
inc
out
sbb
ds
loop
sub
adc
loope
clc
jge
ja
js
outsl
ficoms
sar
fcmovne
std
mov
aam
or
pop
lods
xchg
dec
outsb
or
push
cmp
lcall
scas
enter
in
mov
pop
pop
push
push
xor
iret
ficoms
aas
mov
lods
les
and
sbb
push
int3
mov
mov
mov
lods
xor
lret
cmp
mov
push
out
mov
scas
std
decl
out
push
jo
mov
cmp
out
sbb
frstors
adc
sahf
jg
pushl
cmc
mov
mov
leave
cmp
in
cmpsl
rclb
incl
sbb
je
mov
sub
push
stos
scas
icebp
adc
lcall
inc
cmp
ja
mov
or
ja
mov
push
insb
cwtl
dec
mov
ljmp
or
dec
sub
jne
xor
popa
movsl
call
mov
repnz
mov
fstps
dec
mov
stc
fmul
cs
jl
cmpsl
ss
rorl
xchg
lods
mov
aad
dec
jmp
aaa
hlt
outsb
mov
gs
out
adcl
sub
add
lock
jmp
xor
cmc
out
push
loopne
fwait
in
out
das
in
pop
shll
dec
in
scas
xorl
jg
cmc
ljmp
sbb
push
cmp
push
rcr
rcrb
daa
fadds
out
clc
stc
es
and
insb
fdivrl
gs
ljmp
stos
xchg
inc
cmpsb
js
stos
jmp
in
lods
add
xor
xchg
and
test
pusha
mov
xchg
mov
inc
nop
jg
arpl
aad
sbb
in
xor
jp
call
push
cwtl
call
mov
mov
jg
repz
shlb
jno
xorl
sub
fidivl
mov
push
pop
sbb
xchg
popf
fcmove
add
jmp
adc
mov
into
cmpsb
and
lcall
xor
outsb
mov
enter
aas
mov
mov
push
push
ja
jmp
fldl
pop
imul
push
inc
pop
pop
jle
mov
push
or
out
jg
inc
repnz
mov
push
pop
push
pop
fldt
outsb
and
sbb
pushl
shlb
dec
clc
ffreep
je
or
sbb
mov
adc
pop
scas
es
lock
jg
incl
out
movsl
fst
xor
dec
jg
xor
add
and
incl
jg
ret
test
mov
orl
ds
bound
call
or
pop
mov
sub
sub
dec
mulb
sahf
add
pusha
mov
pop
or
mov
jmp
and
dec
ds
add
push
jbe
xchg
ljmp
pop
insb
adc
and
inc
push
cmp
lock
insb
push
mov
rcrl
dec
inc
push
test
xor
xor
push
insl
sub
lcall
lock
arpl
cmp
sbb
popf
cmp
movsb
push
cmpsl
xchg
ljmp
or
fistl
outsb
push
pop
test
sub
fstpl
leave
mov
adc
bound
lahf
pushf
clc
out
cld
ljmp
cmpsl
divl
xchg
test
clc
mov
popa
mov
shr
mov
gs
adc
lret
pushl
pop
xor
mov
movsb
dec
into
mov
push
add
mov
ljmp
cmp
adc
sbb
mov
add
cmp
mov
hlt
push
inc
int3
mov
pushl
pop
shl
shrb
xor
and
push
adc
out
pushf
inc
mov
jno
sub
pushl
mov
out
cltd
xor
xlat
lcall
stos
pushf
sbb
jb
out
adc
cltd
cmc
mov
sub
pop
testb
adc
jg
cmp
sbb
push
push
or
call
mov
aaa
xchg
imul
test
int3
mov
adc
ret
cld
mov
fsts
adc
decl
mov
pop
testl
sarl
popa
das
nop
and
jnp
loop
xchg
cmp
dec
xor
mov
pop
xchg
push
int3
mov
idivb
jge
or
or
decl
sbb
fsubrs
mov
call
mov
movsl
adc
mov
cmp
sbb
cld
ja
andb
add
fidivrs
jg
ror
cmp
sarl
lcall
pop
cld
jnp
movsb
and
jle
mov
leave
or
in
cs
add
adc
insb
add
jle,pt
or
mov
or
dec
and
scas
jbe
and
notrack
cmpb
fs
mov
ljmp
sub
arpl
mov
and
add
into
popa
mov
sub
or
js
xchg
arpl
decl
dec
push
fidivrs
add
rol
xchg
out
fcos
add
subl
or
pop
cmp
mov
test
sbb
pop
mov
imul
adc
pop
fs
lds
and
inc
mov
and
int3
imul
hlt
daa
jmp
cmpsl
push
pop
enter
and
fdivrp
es
outsb
lret
jl
out
fldl
sbb
rorb
lea
xchg
add
sahf
sti
sbb
inc
jmp
mov
add
jg
addr16
lock
lods
into
mov
movsl
jo
rcrb
add
cs
ja
cmp
lahf
xor
mov
gs
dec
rolb
pop
push
jae
sbb
cli
lcall
xor
xor
adc
or
insb
push
push
out
aad
arpl
sbb
dec
rcrb
out
push
sub
pop
dec
or
out
inc
fists
fwait
repnz
mov
pushl
rorb
jb
sub
int
dec
jmp
push
mov
add
cmpsb
pop
jle
sbb
inc
lret
aam
out
movsl
and
dec
inc
jb
dec
lcall
push
xlat
pop
sti
mov
les
loop
pop
mov
insb
mov
clc
pushl
mov
imull
jecxz,pt
repnz
mov
clc
call
adc
sbb
mov
sub
xchg
cmp
sti
push
sar
dec
cmp
std
jne
mov
imul
mov
test
xchg
sub
les
push
ret
sbb
ljmp
mov
mov
imul
out
push
lcall
mov
jmp
dec
jnp
add
cmpsb
add
popa
xor
pop
jae
rcr
out
jmp
adc
aad
jg
mov
ret
loopne
lcall
ja
outsl
add
call
mov
pop
mov
and
ret
cmp
mov
or
add
call
jmp
outsb
or
aad
rolb
adc
inc
test
dec
mov
or
leave
cmp
cmp
fucom
scas
icebp
cmp
arpl
adc
cmp
fdivrp
or
incl
fbld
jg
pop
xlat
cwtl
mov
fldt
cld
dec
testb
sarl
popa
insb
mov
mov
mov
stos
decl
std
fimull
dec
inc
dec
fwait
aaa
inc
or
mov
pop
mov
aas
imul
adc
pushl
push
js
sub
ret
sub
test
inc
rolb
mov
and
pushl
sbb
flds
ljmp
pop
je
fchs
add
dec
xchg
popf
mov
xchg
mov
sahf
pusha
cs
and
dec
insb
pushl
fcoms
sub
and
cwtl
sbb
jne
aas
je
leave
xchg
cmp
add
shlb
dec
mov
cmpsl
in
mov
pop
push
mov
call
jmp
jecxz
and
push
das
xor
cmp
or
jo
dec
repz
roll
js
add
cmp
or
pop
jno
call
adc
xchg
sub
sbb
dec
and
decl
roll
addr16
sub
not
outsb
xor
in
sbb
stc
call
add
insl
add
adc
pop
fcomip
fistpl
sbb
cwtl
sub
jmp
jb
stos
pusha
sbb
ret
aaa
mov
cmc
aaa
js
jle
ljmp
cltd
mov
sub
mov
mov
shl
shl
lcall
rolb
jge,pt
xchg
in
pop
fiadds
cmpsl
fildll
adc
ret
popa
adc
mov
scas
adc
shlb
cmp
call
push
mov
es
adc
pop
mov
sbb
mov
fisttps
cmc
adc
mov
and
sub
inc
mov
std
out
das
cmp
mov
xor
or
jp
push
arpl
insl
mov
and
sbb
mov
jmp
mov
test
mov
inc
pop
inc
adc
lds
mov
fcmovu
insl
adc
fdiv
ljmp
imul
pop
addr16
stos
ljmp
decl
dec
pop
jae
xor
insb
fsubrl
mov
mov
ljmp
nop
xor
sbb
pop
lcall
lret
xchg
mov
cmpsb
add
loopne
mov
or
stc
sarl
dec
gs
pop
movsb
loopne
hlt
popf
lret
popa
dec
out
add
fdivrp
pop
mov
xchg
les
mov
ljmp
lcall
cld
loopne
sbb
and
jge
fisubrl
sbb
mov
icebp
xchg
mov
and
paddq
shlb
ret
cmpl
cli
decl
inc
iret
lahf
push
andb
lock
lds
mov
push
ja
btr
sahf
out
xor
out
insl
clc
jmp
sbb
rcrl
jge
pop
pop
int
stc
test
jmp
pop
xor
push
and
lret
pop
pop
bound
push
push
das
incl
cld
mov
cmp
incb
pop
push
fcmovnbe
sub
lock
decl
int3
sti
mov
sbb
jns
mov
imul
jg
lret
inc
mov
push
jo
gs
int
pop
stos
ljmp
cmc
mov
cmpsb
mov
mov
xor
sti
mov
push
mov
lock
or
ror
stos
leave
cmp
test
in
jg
lcall
inc
xor
popa
sbb
and
dec
lock
pushl
imul
pop
fs
mov
popf
in
or
jl
and
xor
lcall
insl
xor
jle
jb
pop
add
inc
pusha
adc
hlt
sub
and
test
call
mov
mov
mov
dec
mov
icebp
call
mov
lcall
mov
sub
cmpsl
and
push
idivl
mov
lock
jmp
je
hlt
sbb
out
cmp
arpl
clc
mulb
es
push
das
adc
pop
xchg
sub
scas
add
or
cmc
push
sbb
addr16
sbb
call
xor
mov
call
je
dec
push
out
movsl
insl
fisubs
repz
loope
test
cmp
decl
push
push
dec
or
add
out
sub
test
sub
inc
test
cmc
pop
sub
shrb
cmp
out
aaa
ss
push
sahf
jecxz
sub
mov
call
push
ljmp
jne
jnp
sub
xchg
mov
cmp
xchg
mov
mov
in
test
dec
sub
loope
cmp
fs
int
fisubl
sbb
add
jne
addb
outsl
mov
inc
call
lret
lret
dec
int3
ret
ss
sbb
fisubs
xchg
frstor
inc
aaa
cmpb
insl
addr16
jg
iret
xor
repnz
add
mov
ljmp
lcall
loopne
xlat
enter
popa
into
popa
imul
loopne
cmp
aaa
cmpl
cld
jg
inc
pop
xchg
xchg
fucom
inc
cmp
jge
mov
cli
or
call
cltd
and
inc
enter
dec
in
dec
adc
lods
xchg
idivl
jecxz
cmpl
or
addr16
sbb
pop
imul
aad
daa
mov
pop
or
xchg
push
fcmovne
decl
decl
mov
and
mov
in
mov
ljmp
gs
into
dec
mov
cmp
lcall
in
jl
jecxz
ja
lcall
jle
sub
js
lods
rolb
jp
hlt
hlt
jg
sub
test
shrb
xor
mov
jg
std
incl
mov
xor
shll
jns
out
add
fiadds
incl
in
lahf
cmp
rcl
jne
adc
xor
int
and
adc
scas
aad
or
je
js
cmp
call
pusha
sub
repnz
mov
mov
fwait
sub
inc
movsb
push
dec
je
scas
jno
fwait
leave
jmp
add
in
lea
out
arpl
mov
adc
jp
subb
lods
pushl
xchg
push
pop
jecxz
orb
sub
ljmp
xor
decl
ljmp
and
cmc
push
fadds
push
jae
in
fmuls
push
icebp
incl
out
call
push
shrb
and
xchg
pop
out
cmp
addr16
lcall
adc
jmp
rcl
bound
or
add
jle
or
call
xor
clc
jmp
jg
mov
out
mov
mov
dec
jae
sub
pushl
bound
dec
pop
clc
push
jo
add
jnp
xchg
mov
dec
xchg
jmp
shl
cwtl
shrb
and
pop
loopne
clc
mov
add
aaa
jge
mov
inc
jg
xor
or
movsb
mov
ja
sub
add
je
mov
lods
lret
inc
or
sarl
sub
outsl
mov
subb
cmp
pop
loopne
ds
mov
add
adc
add
in
jmp
pop
inc
lahf
cmp
imul
out
sub
or
fsubl
pusha
lock
movsb
cmpsb
sbb
dec
sbb
push
xchg
mov
ljmp
sbb
pop
movsb
in
push
cli
insb
inc
inc
inc
cltd
into
mov
jnp
jecxz
data16
bound
call
push
shl
cmpsb
push
pushf
add
repnz
scas
jmp
cli
xor
mov
add
push
push
aaa
test
cmpsb
dec
dec
in
add
ja
xchg
pop
push
bound
adc
cld
lret
dec
xor
jp
incb
adc
enter
mov
lcall
inc
or
sti
mov
clc
cmp
mov
cmp
and
inc
push
je
mov
jmp
and
adc
dec
mov
xchg
pop
ret
jmp
std
inc
inc
dec
dec
sub
xor
aas
pop
push
inc
cltd
repnz
imul
cs
mov
loopne
mov
mov
stos
or
ss
jbe
lret
inc
lds
rcrb
ljmp
mov
add
test
pop
add
sub
es
insb
call
call
cmp
cli
rolb
adc
push
aaa
push
push
push
mov
inc
push
push
pop
iret
xchg
and
decl
xor
roll
sarb
xchg
mov
sub
xchg
mov
iret
mov
dec
mov
push
push
das
or
dec
inc
aas
cmp
xor
and
push
xor
jno
pusha
fcmovu
lahf
cs
jecxz
sbb
and
jno
push
mov
ss
fbld
jbe
lahf
sbb
or
mov
lods
pop
lcall
adc
cmp
pop
insb
dec
cmpsl
cmpsb
mov
idiv
outsb
addr16
loop
mov
incb
jb
mov
sbb
and
pop
call
test
call
jno
push
fnstcw
sbb
pusha
mov
pushl
xor
mov
mov
popl
cmp
mov
jbe
fmuls
idivb
ljmp
nop
mov
mov
out
xor
js
testl
mov
stc
pop
test
xchg
pop
cli
cld
ret
pop
insl
and
hlt
in
adc
test
or
push
or
aad
in
push
aaa
ja
insl
xlat
mov
stos
dec
xchg
inc
sbb
lcall
test
jns
pop
cmp
xchg
adc
cmp
push
jmp
adc
jmp
fdivrl
dec
and
pushf
jbe
lahf
push
jmp
jae
or
mov
xchg
jecxz
xlat
outsb
sub
loope
into
pop
lea
out
mov
incl
leave
xorb
mov
and
mov
fcoml
rorb
add
and
ss
ljmp
bound
xor
push
insl
mov
and
dec
scas
stc
jmp
call
fmull
repz
aad
mov
sub
adc
inc
inc
xor
outsl
xor
fistl
or
add
incl
dec
mov
int
mov
sub
dec
mov
fwait
dec
rcl
and
fisubrs
pusha
fists
scas
pop
push
mov
lcall
cwtl
hlt
xchg
mulb
mov
or
subl
xor
sub
xchg
repnz
jle
sub
ljmp
ja
dec
shlb
fistps
jp
pushl
int
sbbl
mov
iret
lock
sub
ljmp
pop
mov
pop
or
imul
push
mulb
xchg
bnd
inc
adc
pushl
mov
out
jge
push
cmp
add
mov
les
pop
loopne
mov
cmp
test
sub
cli
xchg
outsl
jo
rcrb
ror
test
repz
mov
mov
sbb
int3
mov
pushl
push
mov
or
fucomp
jae
jne
stc
and
jne
lcall
inc
push
inc
scas
xchg
cwtl
outsl
mov
dec
xor
sahf
lds
pop
cmc
dec
data16
daa
xchg
pushl
sbb
xchg
negl
jecxz
inc
cld
sbb
and
lcall
add
lcall
add
movsl
stc
orl
sbb
shlb
cli
cmp
cld
xchg
push
incl
sti
push
or
cmp
lods
xor
cwtl
mov
lcall
call
filds
xor
xor
popf
pop
dec
xchg
sahf
jmp
sub
push
mov
mov
mov
sti
mov
pop
out
or
xor
sahf
xchg
subl
mov
shrl
mov
jmp
popa
xor
and
or
dec
lcall
gs
mov
loope
outsl
push
inc
cli
mov
rorl
stc
lcall
sbb
in
jo
mov
test
push
and
int
push
push
mov
pushl
xchg
xchg
pop
pusha
push
in
push
call
mov
decl
roll
mov
ss
insb
ljmp
test
jb
test
pushl
stos
xor
cmp
fsubrs
mov
mov
sub
out
or
gs
jnp
push
mov
call
adc
imul
push
dec
mov
bound
fsubrl
sbb
ljmp
and
adc
fs
add
mov
roll
movsb
movsb
sbb
test
pop
daa
cmp
cltd
mov
shrl
adc
cs
sbb
sahf
sahf
mov
jmp
adc
inc
gs
fistpl
ret
push
mov
jmp
out
adc
push
lods
repnz
out
sbb
imul
ret
dec
jge
sbb
push
scas
out
lret
xchg
mov
inc
mov
fisubrl
jno
dec
gs
cld
into
or
clc
push
push
jmp
ljmp
pop
pop
cmp
jg
adc
jo
push
pop
xor
mov
rclb
into
out
pushl
adc
sbb
cmp
vmovups
and
pushl
shlb
inc
xor
andnps
sub
wbinvd
daa
sbb
in
stos
ret
or
sub
xchg
push
ljmp
sar
jl
mov
inc
mov
mov
fdiv
call
or
jle
lcall
sbb
popa
mov
sub
or
ljmp
hlt
scas
cmp
dec
mov
or
pop
stos
pop
decb
pop
pusha
and
out
cli
incl
jne
cmpl
sti
lahf
jp
fimull
xchg
and
scas
add
call
xorps
inc
push
aas
mov
push
mov
mov
mov
push
divb
mov
movsb
pop
sub
pushl
insl
sbb
loop
fstpt
sbb
outsl
filds
lock
mov
lock
pushl
sarb
inc
mov
add
fidivrs
loopne
sbb
test
pop
sbb
jl
mov
or
pop
mov
or
mov
fisttpl
call
incl
push
fwait
push
mov
and
jns
ret
mov
xchg
and
lock
stc
out
clc
in
fisubl
loop
out
pop
inc
add
jl
fcomp
cmpsl
xor
lcall
inc
loop
imul
add
out
ds
jg
xor
call
jg
jnp,pn
cmc
pop
jmp
mov
xor
mov
or
mov
clc
leave
int3
push
jmp
add
adc
push
mov
pop
enter
fidivrl
mov
mov
xor
aad
stos
shl
mov
je
pop
cld
notb
popa
divl
sub
xchg
sbb
mov
sub
lock
mov
and
push
lock
fs
sbb
push
xchg
sbb
div
out
lcall
scas
jno
movzwl
out
popf
dec
cwtl
cmp
inc
push
mov
and
js
ret
ljmp
cli
cmp
pop
push
adc
lret
cmpsb
dec
lods
clc
ljmp
sub
inc
jmp
sahf
jle
sub
ret
mov
jo
dec
imul
aam
mov
xchg
test
pop
aas
fmuls
and
add
mov
sahf
jnp
push
pop
iret
mov
pop
add
dec
pop
or
add
or
sbb
mov
jmp
loopne
inc
mov
adc
int3
daa
dec
jp
inc
push
repnz
pop
add
add
fdivl
in
cld
jae
ljmp
rclb
adc
shl
les
leave
jns
aaa
std
ljmp
sbb
lds
jg
mov
xchg
xor
ljmp
sub
push
xchg
outsb
sti
mov
pusha
mov
jp
jbe
call
sub
aad
or
lahf
in
aam
repz
mov
pop
mov
js
fstps
call
ja
inc
movsl
push
pop
daa
stos
in
mov
rol
fwait
into
rcrl
stos
sbb
lock
mov
call
cmc
aam
cmpsl
mov
cs
mov
cmp
fiaddl
xchg
xchg
enter
jnp
sahf
jne
testl
incl
das
imul
in
mov
mov
arpl
and
decl
mov
lock
out
mov
subb
ljmp
inc
mov
jge
jg
inc
sbbb
pop
fs
or
dec
fucom
xchg
jecxz
sti
push
pusha
xor
fsubp
popf
mov
negb
lret
roll
iret
out
hlt
sbb
lret
out
incl
clc
xchg
dec
mov
cmp
in
outsl
aas
mov
fs
pop
cmp
jl
adc
jnp
push
test
out
mov
or
pusha
or
add
sti
xchg
les
imul
ljmp
cmp
aam
test
xor
sub
mov
jg
mov
decl
sbb
add
shlb
or
push
decl
pop
sub
mov
and
inc
icebp
jmp
insl
cwtl
push
add
cmp
std
jae
xor
pop
mov
sub
call
std
call
xor
and
ljmp
sub
xor
out
ficomps
add
incl
in
mov
ja
lcall
fdivrs
fildl
jmp
xchg
in
xchg
xchg
jmp
mov
sbb
push
xchg
xlat
loope
je
mov
mov
mov
test
orb
repnz
pop
sahf
incl
adc
shll
mov
lret
inc
aad
or
mov
arpl
ret
aad
jns
xchg
push
sub
mov
push
pop
and
push
mov
sub
and
int3
and
js
into
sbb
imul
call
repnz
dec
dec
add
xchg
sahf
pop
idiv
adc
mov
sahf
sbb
call
mov
pop
and
dec
ficompl
cmp
lret
push
incl
hlt
pop
cld
iret
jae
cmpsb
hlt
pop
popf
ror
dec
jbe
imul
es
dec
sbb
adcb
fbld
cmc
out
xchg
inc
add
pop
add
xor
mov
inc
pop
mov
push
cs
arpl
loop
mov
insb
scas
jb
sbb
popa
popf
dec
cmp
call
xor
pop
loope
loop
add
hlt
rorb
mov
mov
fs
ret
jp
fildl
arpl
inc
imul
mov
call
pop
sbb
testl
cli
subb
add
mov
movsb
flds
dec
mov
xor
leave
lcall
scas
add
push
and
sub
adc
loop
add
cwtl
jb
loop
push
ljmp
nop
out
lret
popf
jg
je
cmp
lret
jo
movb
lods
fdivs
mov
mov
dec
or
adc
lods
push
nop
mov
pop
fwait
cltd
and
inc
mov
aaa
cld
lcall
adcl
jp
outsb
mov
jle
dec
push
mov
jmp
sbb
fildll
sbb
or
or
xor
loope
cmc
cmp
or
push
arpl
add
push
add
mov
push
cmp
jmp
adcl
inc
popf
seta
push
cmc
hlt
nop
sbb
sbbl
add
lcall
dec
out
xchg
cmp
xchg
pop
out
push
ds
inc
push
mov
popf
incl
pop
mov
fidivrl
shlb
mov
cld
add
sar
jns
movsb
mov
das
xchg
xchg
xchg
jne
dec
lds
pop
loope
loopne
mov
mov
mov
add
add
jl
push
push
mov
or
cmp
and
outsb
dec
dec
es
push
fmuls
mov
es
mov
repnz
les
scas
cltd
mov
rorb
popf
ljmp
aas
test
push
outsl
rclb
push
mov
and
ljmp
mov
sbb
or
outsb
sub
xchg
pop
fdivrs
mov
fstps
mov
out
add
xor
xchg
aam
push
clc
ljmp
mov
pop
test
test
mov
rcll
ljmp
push
movsb
cmp
xchg
in
shlb
ret
decl
shl
movb
cmpsb
xchg
cmp
stos
inc
adc
push
fucomi
push
fimull
lcall
and
add
jle
xchg
mov
scas
insl
stos
popa
into
out
jg
or
bound
imul
testl
cmp
jne
jmp
enter
sub
std
pushf
pop
cwtl
push
fwait
jne
dec
jmp
lret
faddl
ss
call
movl
push
mov
xchg
push
mov
loop,pt
mov
push
iret
daa
pop
lea
in
in
sbb
fs
inc
mov
incl
and
push
test
sub
jle
cmpsb
ja
fsubs
adc
mov
mov
mov
incl
and
testl
or
adc
add
dec
ljmp
mov
rcll
sub
jle
std
ljmp
dec
xor
aad
xor
lahf
jmp
jnp
int
mov
das
nop
xchg
mov
cmp
push
or
pop
ffreep
add
jecxz
into
movsb
test
jg
sti
mov
lcall
shrb
mov
adc
loope
ljmp
sub
pushl
cmp
lea
or
test
ljmp
rorl
ret
jb
lock
xchg
pop
sub
ljmp
movsl
imul
mov
cli
in
mov
lock
into
decl
add
push
cmp
or
push
push
sarb
or
mov
lcall
push
xor
call
jmp
call
test
add
xchg
bound
jl
decl
test
rcll
pop
push
pushf
je
sbb
scas
sahf
sbb
nop
in
lret
cmpsl
jb
cmp
sbb
push
sub
sub
insb
pop
test
iret
in
sbb
out
lret
jecxz
jp
idiv
popf
xor
cs
inc
push
les
aaa
inc
popf
jp
jp
fs
lret
jle
add
and
fsubs
cld
aaa
fs
and
cmp
cmc
sub
adc
rol
pop
fisubs
filds
sbb
cld
fwait
leave
fidivs
mov
ja
and
xchg
test
lea
lcall
jecxz
imul
popa
cmp
cli
jg
mov
sub
xor
imul
arpl
mov
decl
mov
testb
pop
mov
imul
mov
orl
iret
sahf
cmp
pop
lock
cwtl
xor
lods
test
and
cld
sbb
jo
loop
leave
cmpsl
repnz
adc
ficoml
out
jg
cltd
mov
lods
subb
mov
add
mov
push
mov
cmp
nop
add
popf
add
jle
dec
mov
rcrb
jo
fwait
je
adc
mov
mov
sar
mov
pop
jae
push
jg
sbb
test
sqrtps
popf
ret
add
aam
inc
push
push
push
add
in
std
jg
jnp
cld
sbb
jmp
sbb
xor
xor
mov
call
nop
push
add
jge
push
cmp
lcall
ljmp
mov
ja
mov
mov
push
xlat
pop
les
rcrb
mov
mov
sub
incl
mov
neg
jns
xor
out
js
xor
inc
test
jno
dec
popa
push
mov
int3
cs
add
les
cmp
out
popl
add
sahf
std
aas
test
mov
sub
or
lcall
xchg
dec
mov
stc
int3
jmp
or
fildll
loop
sbb
shll
aam
decl
or
pop
pusha
adc
fsubs
jp
push
loopne
je
inc
out
mov
sbb
jb
push
cmc
dec
sbb
arpl
fadd
sbb
cmp
mov
inc
fcmovnb
cmp
pop
loopne
jp
cmpsl
mov
divl
mov
push
jmp
add
push
add
jnp
push
sbb
add
sub
sub
adc
test
incl
dec
sub
lds
scas
mov
dec
jp
fs
sbb
jecxz
push
cwtl
cmp
dec
mov
jb
ds
mov
pop
sub
pop
push
insb
fistl
cmp
sbb
push
xor
jmp
outsb
mov
testl
mov
js
repnz
mov
push
inc
in
mov
xchg
jl
jb
dec
push
jp
pop
mov
stos
ljmp
adc
movsl
mov
cmpsb
stc
fbld
stc
pop
sbb
ljmp
hlt
stos
jnp
bound
cmpb
cmp
adcl
push
sysenter
mov
aam
jg
jecxz
sti
or
inc
mov
lock
jo
bound
mov
dec
mov
or
jmp
mov
jbe
fcomp
or
lds
mov
push
adc
aas
pop
push
cmp
push
imul
pushl
xchg
xor
mov
xchg
loope
cltd
loop
ljmp
xchg
lcall
cmp
add
enter
orb
jg
pushl
mov
mov
pop
xor
fwait
pop
xor
xchg
clc
pop
incl
pop
dec
and
test
in
into
fildl
incl
shlb
les
js
push
sarl
adcb
pop
mov
dec
xor
jae
xchg
and
in
or
call
imul
leave
ret
hlt
outsb
aaa
and
jmp
push
movsb
je
mov
jmp
into
clc
test
repz
rcl
out
xchg
stos
out
test
jecxz
dec
stos
xor
ljmp
inc
int
sub
dec
jp
std
dec
cmp
lahf
test
call
mov
out
jge
das
inc
pop
mov
sub
lods
jns
cmp
mov
lods
mov
in
jmp
imul
jp
rorl
lcall
push
int3
in
jg
xchg
push
andl
cmp
adc
add
ret
out
aas
and
loope
outsl
cltd
and
jae
call
mov
jle
sti
dec
and
leave
das
sbbb
mov
adc
scas
mov
mov
and
cs
fcmovbe
js
lods
jg
pop
pop
test
push
dec
arpl
cli
and
shl
mov
pop
in
aaa
inc
add
scas
clc
lahf
sub
or
stc
std
stos
push
dec
jnp
jmp
dec
out
jmp
pop
insl
inc
mov
sbb
int3
push
mov
inc
and
decl
sub
imul
sbb
fildl
and
decl
faddp
adc
movsb
or
push
mov
out
and
push
cld
js
inc
je
push
push
nop
jle
enter
ljmp
repz
fcomip
dec
rcrb
xchg
lock
call
lret
hlt
pop
dec
dec
rcrl
mov
decl
xor
addr16
dec
es
loop
jmp
add
jbe
push
stos
aad
push
cli
sti
cmpsl
cmp
and
pop
xchg
push
and
xor
test
std
jbe
lahf
push
ljmp
mov
incl
aaa
aad
pop
push
add
add
pop
imul
ret
int3
sahf
mov
pop
pop
pop
ss
fwait
lea
leave
jecxz
sbb
inc
mov
or
push
push
push
dec
jecxz
mov
xor
jbe
jg
lret
or
ljmp
stos
ja
pusha
test
add
decl
jno
jo
fbld
dec
dec
cmpsb
ljmp
sahf
out
sbb
cwtl
lcall
inc
and
adc
insl
into
xor
les
test
hlt
pop
je
add
js
lahf
rcrl
movsb
pushl
std
incl
dec
mov
test
xchg
sbb
lds
test
sub
ja
cmp
mov
ljmp
push
adc
jg
popl
jns
call
mov
stos
push
out
add
and
ret
and
sbb
ljmp
lock
mov
daa
add
mov
nop
adc
sub
mov
decl
pop
sbb
test
push
fnsetpm(287
fsts
jmp
arpl
out
or
or
inc
push
fcoml
mov
xchg
push
sbb
sbb
adc
and
addb
loopne
pop
mov
push
fistps
mov
call
js
into
rolb
adc
jl
and
in
sub
jl
jmp
xchg
pop
push
fdivrp
ljmp
movl
adc
sub
xchg
movsl
ficompl
ds
enter
cltd
ds
aas
movsl
sahf
fs
aam
mov
mov
cs
mov
pop
inc
ret
sub
mov
popa
sbb
pop
popf
and
jge
adc
rol
pop
repz
mov
repz
clc
pushl
popa
mov
adc
call
inc
daa
imulb
fucom
push
pusha
popf
xor
cmp
je
and
add
and
inc
mov
lcall
adc
mov
into
paddq
xchg
mov
pop
popf
pop
sbb
call
xchg
insb
sub
xchg
add
movsl
dec
insl
adc
lcall
ljmp
or
mov
in
push
or
inc
add
insb
push
add
addr16
pop
incl
mov
std
icebp
mov
sbb
inc
ja
add
in
ret
cs
push
mov
or
scas
adc
ljmp
cmp
push
push
lods
fwait
leave
jae
icebp
cli
mov
xchg
int
aaa
and
jne
mov
inc
cld
call
imul
out
push
dec
or
scas
aad
std
mov
jno
jge
sbb
clc
push
shrb
pop
adc
rcrl
jg
pop
and
mov
jg
or
pop
jnp
mov
iret
jge
push
mov
mov
sbb
mov
js
fmuls
and
fildll
dec
or
inc
or
add
loop
sub
sbb
pop
lahf
mov
ljmp
call
adc
xor
mull
xchg
mov
sbb
jg
scas
clc
call
in
shll
call
rcl
lcall
cmp
insl
and
or
and
dec
jecxz
nop
pop
and
mov
call
fldl
stos
mov
fstpl
inc
aaa
lahf
sbb
pop
int
ljmp
adc
dec
adc
sbbl
push
shll
incl
fidivrs
sbb
std
or
lret
cld
or
in
lods
cmp
decl
sub
jmp
or
sub
mulb
aas
sti
mov
clc
aam
xchg
popa
std
in
inc
test
sbb
add
pop
lret
or
in
out
add
out
aam
decl
and
and
lock
sub
mov
xchg
sbbl
cmp
cmp
jne
jne
mov
lret
dec
mov
je
add
xor
lock
or
mov
aam
push
dec
mov
pop
or
scas
mov
sub
fsubs
dec
jae
ljmp
in
ja
fs
les
jne
xor
jmp
stos
ret
je
push
push
aam
outsl
jmp
xor
jno
xor
xchg
cmp
in
or
pop
cmp
jmp
sbb
outsl
pop
or
dec
and
sbb
and
subb
or
sbb
scas
and
dec
inc
inc
mov
inc
call
test
je
ljmp
xchg
push
cld
mov
add
xor
xchg
xor
mov
ficompl
push
mov
fwait
out
cltd
push
call
out
icebp
xor
xchg
mov
add
insl
mov
dec
std
lods
fdivl
push
mov
jmp
incl
inc
lahf
mov
jmp
add
mov
push
lcall
mov
jns
shrl
cmc
je
call
and
xor
inc
pushf
adc
bound
push
lcall
adc
pop
sbb
lcall
lock
test
lods
test
int
std
xor
cmpsb
imul
sub
insb
mov
aad
sub
push
daa
call
out
fidivl
out
adc
stos
dec
pop
movsl
adc
fcmovnb
or
fstps
xor
dec
xchg
clc
lcall
test
and
inc
mov
je
lods
dec
dec
ljmp
adc
outsb
dec
sbb
mov
sub
jp
xchg
ret
int3
outsb
jae
fnstsw
out
mov
pop
hlt
pushl
mov
fs
nop
jno
or
fmul
mov
pushf
jmp
or
jo
jmp
jo
and
or
cmp
test
pushl
cmc
xor
inc
and
insl
mov
dec
push
mov
lock
call
std
mov
out
fimuls
inc
les
mov
test
pop
imul
mov
sahf
push
ficomps
push
std
call
imul
xor
mov
jo
adc
xchg
jge
xchg
ss
mov
sub
push
ret
add
mov
lahf
mov
sar
pushl
xor
aam
xor
mov
fstl
inc
movsl
incl
jg
mov
loopne
mov
lods
mov
loope
xchg
outsb
pop
pushl
icebp
sbb
cmp
jmp
xchg
and
lock
xchg
out
fwait
pop
arpl
xchg
sbb
fildll
cs
push
mov
add
inc
jl
or
cmc
jmp
hlt
push
dec
sahf
jp
xlat
dec
ljmp
mov
test
mov
scas
mov
lcall
std
push
pop
imul
mov
or
movswl
popf
cmp
mov
sbb
mov
dec
add
movsb
pushf
loope
enter
cmp
inc
movsl
adc
jg
add
jmp
repz
outsl
popf
mov
or
push
mov
xlat
stos
pushl
shll
jbe
mov
sbb
into
mov
fsubrp
mov
xchg
scas
inc
jo
decl
and
into
sub
aam
jg
push
stos
testb
in
mov
lret
adc
add
push
fisttpll
insb
ja
jl
or
and
inc
stos
lret
dec
fstpt
xchg
pop
adc
inc
and
rclb
cli
sahf
addl
push
xor
sub
mov
inc
insl
sbb
mov
pusha
out
outsb
les
xchg
inc
fstl
shll
loopne
std
adc
lock
lcall
test
adc
cmp
addl
jl
mov
lods
movb
imul
das
inc
xchg
or
lret
push
loopne
jge
and
out
inc
xchg
pop
jle
push
or
popf
setnp
push
fcmovnbe
jns
mov
mov
push
sar
xchg
pop
outsb
xchg
jmp
jg
pop
dec
hlt
jns
add
mov
iret
dec
jecxz
shll
jmp
scas
lea
cmp
fimuls
lds
add
mov
ljmp
mov
adc
xchg
dec
xchg
ret
lods
inc
or
add
xchg
lock
xor
std
pop
aam
arpl
stc
out
rorb
pop
rorb
dec
cld
cld
sbb
mov
gs
or
mov
sbb
pop
loopne
mov
and
aaa
fstpt
sub
imul
loopne
aaa
jmp
lds
cmp
mov
cmc
nop
push
test
idivl
inc
or
mov
dec
cmp
jmp
jmp
add
mov
cmp
and
xlat
cmpsl
adc
mov
xchg
fildll
xchg
mov
mov
addr16
xchg
or
out
mov
jns
loope
add
arpl
in
mov
cmc
inc
incl
repz
and
pop
fs
in
enter
incl
sbb
pop
fstpt
sbb
mov
cwtl
sbb
xchg
iret
jecxz
stc
loope
cld
call
jmp
push
push
jg
daa
push
jo
scas
push
fwait
addb
cmp
mov
pop
rolb
test
mov
add
lcall
sub
jl
out
scas
movsl
jecxz
and
popa
or
mov
stc
movsb
mov
jnp
loop
add
jns
xchg
xchg
push
rcll
sbb
in
popf
inc
sub
lar
push
inc
sbb
cmpsl
lret
es
ljmp
in
sahf
clc
mov
sbb
std
xlat
add
arpl
fiadds
mov
insl
lahf
pop
dec
lret
xor
jp
pop
ljmp
xchg
ret
dec
sarl
mov
or
incl
hlt
jg
push
or
dec
std
test
pop
stc
fisttpl
pop
jmp
sbb
add
ffree
mov
insl
xchg
mov
decb
cltd
cmp
decl
insl
pop
push
cmpsl
bound
jne
lcall
ja
cmp
mov
out
jnp
pushf
or
xor
into
inc
adc
int
cmp
in
lods
cltd
ret
cwtl
test
aas
add
jg
fildll
cli
lcall
das
and
sarb
or
loope
mov
movsl
jg
decl
pop
cmp
inc
add
aaa
jl
movsl
mov
popa
loope
test
and
ljmp
dec
sub
scas
and
bound
mov
xchg
jae
mov
incl
cmp
aad
jo
int
subl
fcoms
in
fnstsw
ljmp
push
std
mov
fwait
test
dec
mov
jg
fsubr
ret
cld
imull
stos
jmp
add
dec
mov
xchg
lods
pop
pop
fistpl
push
xchg
adc
jge
pop
insl
ds
sbb
test
mov
sbb
inc
adc
cwtl
popf
mov
jg
test
fwait
or
dec
mov
pop
and
setge
dec
in
cmp
jg
pushl
cmp
mov
mov
jae
xchg
test
mov
pushw
cwtl
test
lods
in
incl
sbb
mov
mov
sub
push
jae
or
fcompl
popa
out
mov
les
popa
test
fwait
insb
jmp
inc
add
scas
xchg
out
jmp
push
pop
popf
int3
cmpsb
popf
ja
ds
pop
push
xchg
and
and
out
gs
pushl
cld
out
add
insl
cld
pop
sub
add
ljmp
ja
lods
sahf
fsubrs
mov
xchg
stc
popf
cmpsl
push
cmp
xchg
lea
xor
mov
mov
push
outsb
adc
pusha
pop
mov
mov
xlat
xor
insb
mull
sbb
in
test
pushl
sub
add
pop
adc
push
xchg
jne
jns
mov
aam
mov
mov
sbb
ja
cli
in
cld
sub
push
orb
push
lcall
jl
xchg
ds
fidivrs
sub
mov
cmp
pop
add
add
popf
fmull
repz
js
sub
cmp
mov
dec
mov
shll
jne
jecxz
push
js
dec
adc
push
cld
bound
ret
pop
out
movsb
pop
jae
subb
inc
in
mov
loop
sar
ljmp
cmc
adc
jle
rol
mov
ret
filds
shlb
jmp
js
testl
mov
mov
mov
inc
or
jmp
dec
popa
movsb
ja
test
arpl
fwait
mov
loopne
jmp
add
dec
mov
decl
gs
sub
mov
and
popl
jp
push
cs
lcall
repz
and
dec
cmpl
jmp
rcr
int
adc
pop
or
mov
mov
lods
mov
jp
push
test
inc
inc
shlb
pushl
jae
jl
push
mov
fs
xor
in
push
pop
mov
ret
decl
test
rep
mov
addr16
inc
jae
pop
adc
mov
inc
jne
decl
in
push
push
ljmp
adc
sbb
out
xchg
test
jl
ds
dec
sbb
pushl
loopne
inc
jb
popa
hlt
pop
lock
or
test
jnp
roll
mov
incl
std
stc
push
sub
mov
cmpsl
sub
hlt
aaa
fwait
mov
adc
incl
pop
sbb
aam
dec
popf
cmp
fidivl
out
xchg
inc
fnstcw
mov
sbb
sar
lcall
xor
fimuls
shll
je
ds
mov
cmpsb
call
les
push
test
jnp
fbld
push
lods
sbb
insl
adc
incl
out
pop
shll
ffree
sbb
xchg
sbb
and
aas
out
pop
repz
movsb
sti
in
test
incl
mov
out
push
leave
ret
popf
and
xchg
and
pop
add
mov
jp
call
sbb
or
hlt
pop
adc
push
shrl
lahf
or
ret
ljmp
out
jbe
mov
and
adc
sti
fdivr
call
or
push
cli
test
aam
add
leave
fldcw
nop
cmpsl
cltd
test
ljmp
push
fucom
xor
or
fisubrs
iret
pushl
movsb
cmp
xlat
push
xor
fidivs
decb
rcl
aad
mov
loopne
imul
or
sbb
xor
loopne
jp
lcall
dec
and
fsubp
adc
inc
addl
pop
hlt
cmp
jge
loopne
adc
jg
test
loopne
fs
xchg
iret
and
push
jns
mov
dec
mov
cmp
push
or
push
dec
and
inc
jmp
enter
je
es
sub
pusha
in
xor
jno
or
sbb
sbb
inc
xorl
adc
nop
push
xor
sub
xor
cwtl
je
loopne
cltd
daa
pop
arpl
cld
call
jo
outsl
jmp
aad
cld
cmp
ljmp
data16
mov
add
decl
mov
imul
arpl
repnz
jg
dec
jl
js
pop
push
push
and
divl
add
repnz
dec
add
decl
lcall
sbb
mov
sub
adc
cmc
ja
aas
ljmp
adc
stos
sbb
adc
jmp
xchg
ficompl
adc
frstor
lret
push
add
inc
imul
mov
fists
cs
mov
cmpsl
xchg
in
xor
es
clc
push
mov
test
jmp
jae
adc
inc
or
mov
lock
mov
je
cmp
les
lods
outsl
inc
lcall
mov
and
cmp
and
movsl
add
jecxz
fdivl
lret
push
decl
xlat
and
pop
cld
jne
sbb
mov
repnz
pop
add
cmp
adc
cmp
stc
pop
dec
stos
mov
in
out
jmp
mov
repz
xor
cmp
adcb
pop
stos
stos
jg
sbb
mov
in
je
icebp
or
jne
cmp
pop
cli
ret
and
negl
es
decl
pushw
jnp
jb
mov
adc
xchg
adc
imul
outsb
sub
xor
cld
int
ljmp
or
mov
pop
mov
lcall
or
jge
dec
in
mov
cmpsl
inc
std
and
fwait
cmpsl
add
loope
sub
mov
es
in
inc
inc
sahf
sahf
daa
arpl
movsb
push
cwtl
sub
jmp
adc
mov
dec
imul
andl
lods
ss
cmpb
cmp
gs
mov
push
outsl
xchg
pop
pop
dec
fsts
js
leave
push
or
fstp
xorl
mov
lcall
sahf
nop
stc
pop
mov
sub
mov
mov
sahf
or
aad
or
adc
ret
scas
lret
push
xor
cmp
lcall
add
cli
jge
adc
loope
popa
mov
add
das
adc
imul
ljmp
dec
mov
lea
mov
cld
ficompl
arpl
xor
lret
andl
icebp
and
ljmp
xchg
dec
pop
xor
in
cmp
mov
sbb
jg
testl
hlt
faddl
cmp
inc
outsb
scas
sar
scas
call
shrb
xchg
adc
aas
movsl
jecxz
fsincos
adc
mov
push
jle
movsb
clc
or
mov
js
popf
dec
lods
fwait
lret
jmp
sbb
ljmp
sbb
jge
imul
pushf
adc
push
lods
dec
push
into
cmc
pop
fs
das
sub
idiv
call
mov
jle
imul
sbbl
insl
pop
es
push
sbb
mov
pop
lock
pushl
jb
dec
or
pop
movsl
lods
mov
mov
xor
jns
repz
cld
jmp
sub
movsb
jmp
sbb
jae
and
or
out
add
dec
fmuls
aaa
cwtl
enter
insl
js
adc
pop
mov
sub
mov
movsb
into
jmp
shrl
jae
mov
xchg
sbb
insb
push
pusha
xchg
hlt
incl
sbb
andl
or
loopne
pushf
or
push
sub
mov
out
aaa
incl
xchg
imul
pop
mov
leave
add
jns
jg
mov
pop
das
pop
jle
into
jecxz
xchg
ljmp
fisttps
jp
int3
mov
mov
out
xorl
push
inc
pop
xor
neg
pushl
adc
aas
mov
imul
outsl
cld
pop
xorb
stc
je
mov
xchg
mov
clc
pop
pop
dec
jg
call
shr
xchg
inc
outsl
pop
and
int3
inc
adc
inc
ds
iret
pushl
push
test
into
dec
loopne
sbb
pop
fidivs
cmp
jb
dec
cmc
jo
imul
ljmp
add
or
out
dec
clc
cltd
inc
cwtl
sub
or
mov
pop
ret
fsub
in
fucomp
cmc
xor
fwait
lahf
pop
movsl
sbb
add
adc
and
movsb
xor
decl
std
mov
fucomip
push
fnstcw
cmp
pusha
movb
mulb
fmul
fs
pop
sbb
idivb
pop
std
mov
fnstenv
mov
pop
jle
test
incl
sti
inc
push
mov
xor
or
dec
mov
pop
or
add
inc
jne
ss
stc
dec
in
rcrl
shlb
add
pop
mov
and
jo
clc
mov
push
jge
rclb
movb
and
adc
test
mov
jmp
clc
sbb
ljmp
scas
push
popa
fwait
test
pop
xor
push
call
or
lods
int3
cmp
xchg
out
cmc
test
pop
inc
sub
loope
mov
jmp
nop
movsb
lods
jo
push
add
sarb
cmpsb
pop
aaa
lds
xor
fcomip
or
push
cmp
pop
cmp
push
data16
sbb
test
jmp
addr16
shlb
pop
jmp
in
sbb
out
xor
mov
es
sarb
mov
pushl
xor
cltd
mov
filds
jmp
out
test
jle
push
ljmp
popa
push
ficomps
xor
imull
pop
ljmp
cltd
movsl
and
jmp
or
mov
lret
mov
mov
das
std
inc
leave
inc
nop
into
icebp
xor
sbb
ljmp
mov
jp
outsl
pop
rcr
in
popl
sti
or
loop
inc
mov
lcall
lcall
stc
sbb
mov
push
fidivrl
sbb
inc
add
in
mov
and
pop
clc
repz
sub
test
xchg
ret
mov
sub
and
or
aaa
ds
jg
add
mov
xchg
mov
call
dec
xchg
add
xchg
cmpb
pusha
korw
scas
push
outsb
lret
xor
stos
call
cli
imul
sbb
test
cmc
jno
fldt
jb
out
in
xor
mov
jmp
and
mov
lret
lahf
addb
jg
aaa
sahf
add
popa
mov
xchg
iret
call
cltd
dec
mov
cmp
add
and
or
lret
sbb
push
subl
call
fnsave
in
into
sbbb
mov
lods
repnz
pop
test
jle
pop
hlt
jmp
inc
ds
pop
xchg
je
lea
in
jl
jnp
xor
fldenv
pop
repz
fistps
or
fcompl
call
push
shll
leave
push
hlt
fstl
shl
dec
pop
or
ljmp
sarl
push
inc
test
lret
jecxz
stos
inc
inc
in
cmp
mov
adc
mov
sbb
add
xorb
mov
loop
jmp
lret
ljmp
dec
mov
repz
shlb
pop
or
inc
pop
mov
mov
imul
pop
out
dec
call
call
pusha
sbb
jno
pop
cmp
mov
lahf
mov
cli
fbld
data16
adc
lcall
rcrl
mov
or
sub
jae
int3
dec
xor
cmpsb
jnp
push
or
imul
jmp
gs
push
pop
cmp
cmp
ret
xchg
in
cs
das
add
iret
outsb
add
jo
mov
lcall
mov
shlb
dec
loopne
add
testl
out
mov
fcompl
je
dec
dec
and
pushl
dec
iret
loope
dec
xchg
and
repz
sbb
or
adc
dec
aad
xlat
push
cmc
lock
ljmp
sar
les
or
ljmp
popa
pop
xchg
leave
loopne
cmp
lret
fcoms
decb
das
push
push
in
jns
xchg
fsubp
pop
arpl
or
mov
xor
adc
mov
inc
push
hlt
pop
dec
int3
jnp
outsb
dec
jo
repz
outsl
rcr
dec
cmp
dec
ss
mov
scas
xchg
jmp
insl
scas
xor
pushl
push
aam
mov
pop
mulw
xchg
mov
jb
mov
scas
cli
cmp
xor
hlt
in
jns
sarb
in
push
xchg
pop
out
test
ljmp
mulb
call
ja
aad
mov
sti
iret
and
rclb
mov
repnz
adc
in
xchg
pop
mov
ret
mov
cmp
dec
lods
das
lcall
add
jge
jae
xor
lods
push
arpl
dec
jae
or
dec
ficoml
nopl
dec
adc
add
mov
gs
aam
jle
and
sbb
mov
nop
mov
lea
cld
mov
fsubrs
bound
sahf
and
aam
inc
int3
jge
imul
mov
cmpsl
cld
mov
sarb
cmp
mov
mov
cmc
outsb
rcl
push
dec
dec
cmp
dec
sbb
cmp
cmp
push
push
push
xchg
push
pop
arpl
and
decl
pusha
add
dec
jnp
daa
mov
and
andl
pop
jo
xchg
xor
mov
rcll
mov
icebp
lds
gs
xor
andl
ljmp
mov
adc
cmpsl
pusha
fwait
test
mov
lock
in
leave
adc
or
aaa
sub
pushl
lds
outsb
fsub
call
cmp
cmpsl
sub
repz
outsb
notb
fwait
call
insl
mov
movsl
imul
imul
inc
in
xchg
dec
mov
pop
cld
jg
loopne
push
decb
mov
les
call
jp
outsl
add
sahf
lock
fists
or
lcall
pushl
mov
sti
jns
test
push
incb
mov
mov
dec
cli
cltd
mov
pop
cld
and
bound
mov
jg
in
mov
cmp
es
mov
incl
pop
mov
and
cmpb
je
and
subb
call
in
push
fnop
push
nop
lret
in
sub
cmc
pop
pushf
call
mov
fimull
push
jb
gs
mov
popl
insb
lods
pop
shll
jbe
jg
push
aas
mov
call
xchg
push
mov
and
adc
mov
cs
push
dec
aad
mov
or
push
std
ljmp
stos
int3
out
xor
in
cs
pop
lret
xor
push
inc
imul
jg
sub
js
jbe
fmulp
jns
sbb
lea
mov
fsubrl
ffreep
add
mov
scas
arpl
and
sti
mov
inc
cmp
mov
xlat
sub
out
mov
ljmp
cli
mov
or
jmp
mov
pop
int
imul
roll
sbbb
incl
and
outsb
cltd
call
cmp
cmp
scas
cmpsb
push
loopne
add
insb
out
cli
add
bound
add
mov
mov
sub
decl
scas
mov
pop
cmp
lock
jno
es
pop
pop
mov
mov
push
daa
mov
push
decl
or
adc
or
cltd
and
sti
jl
inc
push
lcall
lods
jae
fnstcw
ljmp
dec
push
insl
out
or
loop
pop
mov
movsb
aad
mov
cwtl
push
pop
loop
cmpsb
jne
pop
mov
pop
mov
daa
cli
fwait
iret
test
ljmp
call
aam
xor
dec
cmp
cmpsl
fxtract
outsl
jae
outsl
loop
push
sti
mov
scas
sbb
push
in
mov
data16
daa
or
add
add
les
lcall
and
lods
push
mov
xchg
push
push
ja
stos
push
or
mov
loop
push
or
lock
sar
jmp
inc
xor
data16
ret
inc
lock
stos
cli
pushl
test
rcll
xchg
xchg
mov
iret
jbe
prefetcht0
leave
jg
imul
scas
jl
xorb
xor
call
sbb
neg
push
xor
mov
sahf
shll
add
iret
loope
push
loope
in
data16
pushl
mov
pop
push
mov
decl
xor
ja
sub
stos
xchg
mov
jge
dec
jmp
push
lret
imul
movb
inc
data16
in
cmp
inc
inc
loop,pt
shl
mov
pushf
std
stos
xchg
jno
inc
xchg
dec
push
scas
jg
pushl
xor
faddl
fsts
inc
fs
sub
sbb
jmp
cltd
mov
loop
outsl
rcrb
sub
xchg
decl
sbb
ds
inc
lods
movsb
inc
mov
je
jl
and
pop
dec
mov
rolb
fadds
jmp
mul
push
addr16
jbe
xchg
adcl
ja
lret
dec
bound
pushl
cmp
cmc
cli
das
shll
xor
push
xchg
jns
adc
and
mov
sbb
cmpsb
shlb
cmpsl
in
push
and
cmp
loope
lods
add
pop
imul
xlat
mov
sti
jb
js
jge
mov
loope
sahf
adc
aad
rolb
sbb
lea
ljmp
and
add
dec
cs
fs
nop
dec
shr
stos
inc
inc
fsub
xchg
std
divb
pop
out
push
pop
decl
mov
pop
sub
jecxz
int3
enter
mov
fadds
es
mov
jb
sbbl
shl
stos
stos
push
cmp
ret
dec
aad
pop
lea
daa
dec
push
sbb
es
fdivrs
pop
mov
inc
dec
test
loopne
lcall
inc
mov
pop
jmp
dec
xchg
pushf
and
lret
imul
jmp
repz
add
outsl
cmpsl
test
mov
or
jmp
jnp
cmpsb
decl
push
pop
sarl
in
repz
sub
push
stc
mov
int
xchg
mov
call
fwait
adc
adc
fmuls
adc
xchg
and
and
xchg
sub
aas
adc
jnp
push
mov
mov
incl
dec
add
mov
test
rcr
adc
ret
cld
dec
decl
movsb
hlt
pusha
mov
aaa
and
les
out
gs
inc
inc
sar
decl
test
xchg
xor
inc
shrb
loopne
push
or
fcoms
jecxz
xor
adc
imul
jmp
cmp
mov
or
push
mov
mov
incl
dec
sub
inc
sbb
jno
ljmp
sti
inc
adc
jmp
out
mov
aaa
jecxz
jle
dec
js
icebp
or
repz
lret
stos
and
jg
gs
jmp
xor
ror
pop
aas
pop
test
ss
shlb
je
fmulp
jnp
dec
dec
out
add
jne
popa
xchg
lods
dec
or
into
push
pusha
movl
jecxz
lcall
popa
testb
dec
sahf
xchg
mov
inc
subl
jl
mov
lods
iret
or
aaa
dec
fs
jo
es
jno
imul
call
shlb
aam
int3
or
add
ljmp
mov
ljmp
loope
ret
cmpsb
adc
add
orl
pop
inc
or
out
mov
mov
sarb
lds
scas
mov
xlat
call
shrl
adc
mov
cmp
add
fisubrs
xchg
xlat
pop
into
sarl
or
dec
iret
test
lcall
add
mov
inc
sbbb
and
and
mov
iret
pop
loope
call
push
or
cmp
mov
pop
or
mov
std
adc
add
bound
je
xchg
xchg
lock
jmp
imulb
ds
sub
and
cli
cmp
cmp
xchg
hlt
inc
add
xor
int3
xor
leave
ret
repz
decb
call
xor
jne
cmp
out
push
pop
jmp
loopne
aam
sub
push
pop
dec
das
lods
or
xchg
out
push
cmp
mov
jae
clc
sbb
pusha
or
ljmp
push
mov
fs
inc
mov
sbb
je
sub
push
aam
xor
cltd
test
add
cmp
xlat
neg
negb
sub
cmp
lcall
in
sbb
pop
sub
jne
and
movsb
mov
into
call
testl
lcall
jecxz
cmp
sub
arpl
add
bound
enter
pop
fdiv
cli
mov
insb
imul
lcall
mov
aaa
lock
dec
imul
push
lcall
cmp
pop
test
fnstsw
adc
inc
or
nop
inc
fstpt
lret
and
lcall
jg
adc
cmpsb
pushl
pushf
add
jmp
mov
jne
popa
sahf
adc
mov
mov
aas
push
arpl
xchg
lret
inc
popa
fsubr
push
cmpsl
loopne
sbb
sub
jae
and
and
mov
sub
mov
lret
adc
sub
pop
mov
outsl
out
inc
mov
call
pusha
cmp
in
mov
sub
mov
pusha
and
in
ljmp
or
mov
rcrl
les
scas
roll
insb
cmp
decl
cmp
jo
add
bound
leave
cmp
pop
fldenv
cmpsl
rcl
dec
pop
int3
pushl
decb
lss
stos
mov
dec
out
fsubl
mov
ljmp
adc
mov
inc
lods
fimull
in
cld
jg
or
stc
jbe
jmp
bound
call
sub
out
fcoms
ret
and
aam
in
scas
push
stos
pop
xchg
lcall
mov
enter
in
mov
or
loop
ds
sub
ja
mov
cmp
subb
incl
roll
subl
jno,pn
sub
test
sub
incl
pop
mov
jnp
test
lcall
cld
mov
or
lods
stos
adc
frstor
sbb
and
push
add
adc
inc
fnsetpm(287
daa
or
or
pushf
shll
jg
cwtl
mov
faddl
sbb
or
mov
pop
cmpb
pop
sbb
inc
ret
dec
or
dec
lea
push
mov
frstor
and
xchg
xchg
cmpsb
xchg
pop
jne
jge
nopl
ficomps
adc
xor
lea
xchg
mov
adc
daa
rolb
cmpsl
nop
push
jmp
inc
mov
clc
mov
dec
xchg
dec
test
push
xchg
mov
xchg
jmp
out
aaa
es
jg
cmp
jmp
scas
clc
push
shrb
or
sar
jmp
xchg
and
cmpsb
sbb
arpl
shll
clc
mov
or
mov
jmp
imul
inc
or
mov
or
ljmp
fdivp
add
adc
jecxz
test
and
jo
lahf
sbb
jns
sbb
daa
mov
in
xor
sub
gs
in
xlat
cmp
and
ds
and
xor
cs
ljmp
jge
xor
mov
cli
xorl
into
fiaddl
lds
pop
imul
pushl
cmpl
mov
xor
or
add
call
dec
push
pop
inc
xchg
stos
sbb
testb
inc
push
xchg
xlat
mov
mov
nop
pop
shrl
mov
daa
and
rolb
ja
jecxz
fs
std
fcomip
loopne
ret
imul
lcall
stos
adc
call
adc
pop
and
or
push
dec
outsl
fsubl
xchg
dec
shll
sbb
call
test
divb
mov
inc
gs
std
and
outsl
ja
inc
das
movsb
lods
test
movsb
xchg
scas
dec
mov
jnp
and
dec
inc
xchg
in
mov
and
mov
xor
add
cli
jno
and
or
scas
xor
adc
sarl
fstl
jae
call
jmp
stc
leave
out
mov
xchg
cmp
sub
lcall
xchg
hlt
vxorps
jl
lret
or
std
out
jle
jmp
rclb
lea
sub
into
int3
insl
or
shlb
push
add
pop
pop
sbb
add
pop
cli
scas
push
pop
call
inc
int
pop
adc
mov
cmc
sbb
dec
jmp
daa
adc
pop
decb
in
cs
push
jmp
int
xchg
inc
xchg
movsl
arpl
sub
stos
popa
mov
cmpsb
das
addl
inc
std
lcall
shlb
imul
fdivrs
js
arpl
in
ljmp
lods
push
cmpsl
or
rclb
aas
lock
movl
inc
mov
fisubl
addr16
cmp
into
inc
imul
dec
cs
xor
lcall
pushf
decb
or
mov
call
insl
shrl
lea
pop
nop
add
subl
fnsave
mov
cmpsl
scas
push
push
and
mov
inc
ja
jecxz
and
push
hlt
adc
rcrb
and
hlt
mov
gs
xor
jg
mov
in
adc
sbb
push
inc
je
mov
es
push
stc
jmp
push
push
paddusw
fimuls
push
sbb
add
jae
lods
fisttpl
in
dec
push
pop
mov
sbb
out
pop
shl
stos
mov
push
lahf
stos
or
dec
add
frstor
pop
cld
incl
ret
stos
out
ja
mov
dec
adc
pop
test
gs
mov
lcall
adc
cmp
adc
mov
or
andl
sbb
testb
mov
adc
jmp
pop
into
mov
lret
and
leave
mov
cld
sbb
ljmp
push
mov
push
pop
and
cmp
and
dec
xchg
xchg
sbb
into
ds
ds
xchg
add
add
ror
mov
cmp
mov
stos
sbb
adcl
lcall
int3
jg
insl
push
push
mov
pushl
sbb
xchg
loope
adcl
fwait
cmpsb
xchg
cmpsl
fistl
pop
insb
ljmp
mov
aad
stos
jge
mov
pop
cmp
adc
xor
cltd
lret
test
cmpsb
mov
or
add
je
daa
add
fcos
out
clc
jnp
cmpsl
les
add
sub
rorl
sub
int3
shlb
incl
pop
jo
inc
dec
dec
or
shlb
cmp
add
std
test
sbb
pop
dec
jno
xchg
fcompl
adcl
dec
xor
ja
pop
jne
or
ljmp
cmpsl
jns
std
bound
loopne
out
or
outsb
dec
stos
into
loopne
dec
push
mov
inc
lods
pop
pushf
xchg
jl
mov
ret
bound
pop
out
ja
rorb
or
std
or
pushl
mov
push
aad
sub
or
mov
cmpsb
hlt
sbb
pusha
jno
jp
jns
or
incl
scas
lret
sub
sbb
imul
fstps
pusha
stc
cs
xchg
mov
push
sub
incl
sub
out
and
lret
call
ljmp
mov
aam
and
lock
sub
jg
mov
mov
sub
push
xchg
cmc
out
dec
inc
cli
mov
incl
xchg
rcll
xchg
lock
cwtl
or
nop
test
daa
sbbb
mov
or
mov
adc
or
xchg
push
ljmp
and
mov
add
imul
lods
mov
xchg
cmpsb
inc
mov
cmp
and
leave
mov
inc
mov
out
pushl
jb
out
ret
sbb
test
xchg
popa
in
fists
sub
dec
xchg
into
xor
stos
xchg
jg
xchg
sbb
cmpsl
adc
pcmpgtw
cmp
cli
ror
and
jecxz
ljmp
cli
push
cmp
xor
sbb
in
dec
jp
add
xor
adc
fmulp
test
decl
into
es
sti
fucomi
push
sub
lea
adc
decl
fstps
mov
jnp
cld
push
out
cmp
inc
xchg
dec
mov
fs
xor
mov
loop
cs
decl
mov
inc
pop
es
add
andb
aas
jp
andb
pop
out
sub
pushf
add
add
in
xlat
in
push
insb
push
leave
decl
and
cmp
incl
rorl
xchg
jp
ljmp
pop
lret
leave
imull
and
test
jmp
jge
bswap
jne
stos
imul
lods
pop
out
sbb
mov
int3
inc
mov
jbe
sahf
pop
xor
pushl
stc
btcl
imulb
lods
imul
ja
dec
cmp
jp
mov
imull
jbe
fs
test
sbb
jecxz
adc
call
xor
add
adc
adc
loope
or
mov
in
xchg
mov
mov
loop
arpl
cmpsb
jp
push
shrl
add
fcmovb
out
test
mov
inc
mov
dec
jl
nop
and
in
sub
sahf
inc
data16
jne
icebp
push
mov
decl
out
aas
xor
cmp
jb
dec
hlt
mov
mov
scas
xchg
ljmp
ror
jb
pop
push
push
push
push
fcoml
mov
test
popl
cmp
cmp
jg
jmp
xchg
bound
ret
add
movsl
xchg
inc
push
or
or
cmp
fwait
lcall
pop
add
push
shll
mov
push
mov
sub
cmp
orb
mov
stc
jo
jecxz
inc
xchg
and
lcall
push
mov
roll
movsb
int
cs
push
jne
ss
fcoml
fcmovnu
lcall
testb
arpl
sub
cmp
test
add
inc
decl
push
adc
sti
ret
cwtl
jo
lds
xchg
scas
sbb
sub
pop
out
inc
add
cld
gs
jmp
lret
hlt
aas
stos
mov
sar
jmp
sahf
cmp
notl
mov
insb
dec
data16
sub
andl
or
jecxz
mov
sbb
pop
enter
mov
clc
pop
popa
aas
mov
fidivl
decl
inc
notl
cs
pop
sti
cld
sub
push
mov
adc
xchg
sub
ljmp
add
xchg
pop
ss
fbld
or
push
or
shr
pushl
mov
fdivr
ljmp
mov
xchg
aad
call
mov
jnp
insb
sbb
adc
push
jbe
aam
dec
loop
testl
or
or
push
stos
fisttpl
sbb
loopne
iret
xor
in
mov
adc
fisubl
cmp
fadd
adc
lds
or
in
repnz
xlat
cwtl
hlt
mov
mov
andl
jbe
cmp
nop
addl
incl
sar
fidivl
ret
shll
jmp
ss
std
call
xchg
or
cmp
lcall
fwait
lahf
divb
cmpsl
sbb
lcall
and
fst
ret
popf
je
cmpsl
xorl
jg
push
pop
mul
aas
add
orb
push
rclb
das
enter
lret
out
cmpsl
mov
scas
pop
mov
scas
int3
mov
mov
addb
jbe
loopne
je
decl
add
rolb
lock
test
dec
xchg
mov
mov
test
les
push
pop
int3
and
adc
jo
adc
decl
xlat
push
bound
or
push
adc
sbb
aas
dec
popa
dec
mov
outsl
inc
push
push
sub
cmp
mov
sub
push
dec
pop
sti
cmp
and
fmulp
and
pop
incl
mov
sub
popf
fldcw
jg
inc
in
add
dec
mov
dec
dec
sbbb
mov
sahf
ret
test
xchg
mov
ljmp
outsb
push
or
sbb
fdivr
ror
xchg
push
xor
push
mov
lods
xchg
daa
incl
pop
mov
addl
cmp
adc
pop
out
leave
pop
jne
aam
jmp
jmp
jne
ss
testw
hlt
and
aaa
fsts
pushl
and
lahf
push
jmp
lods
mov
es
hlt
loop
pop
hlt
movsl
std
stc
in
pop
xor
mov
addr16
stos
adc
pushf
mov
inc
repnz
stos
test
icebp
jnp
sbb
xchg
in
mov
jne
sub
sbb
jp
adc
xlat
push
pushl
mov
push
sbb
mov
iret
stos
in
mov
out
ret
xorb
ljmp
loopne
fdivrs
add
adc
cmp
adc
mov
push
daa
rcrl
test
inc
pop
mov
and
lock
or
pop
repnz
stc
addr16
cmpsl
mov
xchg
jmp
rcl
pop
lret
dec
or
mov
mov
mov
fdivl
decl
cli
dec
stos
rcl
orl
xor
mov
sub
and
mov
int
pop
xchg
xor
movsb
lahf
mov
push
xor
mov
jmp
icebp
into
arpl
lcall
outsb
sub
jl
out
add
jnp
inc
icebp
fstl
je
add
cmp
cmp
cmp
std
sbb
xchg
jbe
loopne
pop
ds
jl
lock
lock
push
push
test
dec
mov
ljmp
or
fidivrl
nop
push
ds
jno
xchg
lcall
adc
gs
leave
out
clc
js
cmpl
inc
lock
lahf
sbb
jmp
fiaddl
pop
incb
in
adc
aad
lds
lock
jp
dec
fs
and
jne
jmp
arpl
int
rorb
mov
dec
out
test
call
enter
rorb
aas
or
cmp
sub
xchg
rorb
xlat
insl
jmp
ljmp
test
sbb
adc
xorb
fmul
call
and
in
decl
push
pop
mov
adc
adc
aad
jbe
jp
push
push
xor
add
std
mov
mov
imul
cmp
dec
pop
pop
and
jmp
test
fcomps
inc
cs
adc
dec
push
aad
mov
lcall
test
mov
jo
adc
jl
xor
mov
incl
lahf
lret
in
inc
push
jno
ror
out
iret
or
sbb
std
aas
add
xchg
stos
pop
sub
mov
sub
loope
scas
mov
or
jne
push
dec
push
cmp
fisttpll
mov
jg
lea
inc
aaa
and
push
add
xchg
nop
inc
ljmp
out
notb
sbb
mov
mov
ljmp
std
sti
pop
inc
incb
scas
nop
sub
subb
jl
push
sbb
xor
jnp
hlt
pushl
jl
inc
mov
loope
data16
testb
enter
popf
call
lcall
dec
lcall
add
mov
xchg
sub
adc
push
pop
gs
pop
pop
nop
daa
incl
push
or
aam
scas
jo
les
loop
rolb
sub
mov
xchg
and
jmp
dec
sar
jmp
jp
mov
xchg
mov
adc
lds
enter
jecxz
jae
xchg
fildll
loope
stos
dec
pop
das
pop
inc
dec
aam
sbb
and
inc
mov
push
in
call
mov
pop
pushf
adc
or
mov
jle
mov
cmp
mov
xlat
movsl
nop
pop
pop
bound
mov
mov
aas
daa
jb
and
jns
push
jmp
repnz
fdivrl
nop
fistl
aaa
fidivs
insb
jg
incl
push
push
ja
imul
pop
push
dec
xchg
mov
ror
push
ljmp
xchg
xor
pop
mov
xor
stos
add
xchg
fdiv
sub
lcall
mov
sarl
mov
add
lret
test
jb
iret
cmp
cmc
push
movsl
aad
inc
loopne
shrb
stos
cmc
shrb
ljmp
lret
sub
sbb
push
push
repnz
test
push
subb
mov
sbbb
ret
sub
push
inc
pop
mov
xor
scas
and
inc
scas
pop
pop
int3
cmp
decl
aam
jl
xchg
mov
rol
mov
or
arpl
outsl
xor
mov
push
and
xchg
hlt
js
sbb
jb
jmp
gs
sahf
adc
add
dec
fdivs
xchg
fidivl
scas
mov
push
and
mov
cmp
xor
iret
test
lcall
or
mov
jmp
sub
mov
pop
and
fistpll
jb
out
aas
ret
xor
test
and
call
xchg
add
adc
jmp
jmp
in
fwait
enter
sub
outsb
cmc
vmovapd
mov
xchg
incb
push
mov
mov
imul
pop
fsts
fistpl
mov
mov
sub
ljmp
push
aad
mov
or
test
lock
pushf
cwtl
xor
jno
xor
pushl
pop
jnp
aas
addb
sub
lea
mov
inc
mov
jmp
movsb
dec
dec
pop
xchg
jg
out
clc
xchg
jmp
clc
jl
or
ret
xor
sbb
imul
mov
push
jmp
popf
xchg
dec
outsl
mov
out
xchg
lret
std
mov
add
add
and
out
fdivl
jl
fwait
ljmp
orb
jp
insl
lcall
push
jns
lea
add
push
mov
lret
cmc
jnp
inc
insb
pop
loopne
ljmp
inc
rcrl
cltd
and
mov
jmp
cmp
pusha
dec
sarl
mov
sarl
add
xchg
jl
dec
or
and
out
neg
xchg
sti
pusha
xor
inc
mov
dec
add
sub
mov
mov
aad
fbld
idiv
lcall
in
test
mov
nop
jo
pop
lea
add
sahf
mov
call
xorl
in
pop
mov
pop
xchg
movsb
pop
inc
mov
test
les
mov
decl
sbb
inc
mov
ds
fcomip
ffreep
dec
inc
xor
sub
lahf
cld
ret
or
adc
add
adc
rcl
incl
nopl
iret
pop
xchg
xchg
das
inc
sti
pop
imul
cmp
inc
loope
jno
jb
fidivrl
out
dec
testl
sti
lods
xchg
push
std
or
mov
mov
fldl
sahf
mov
jmp
fidivs
lret
fidivl
pop
pop
sub
xchg
test
sub
mov
jmp
je
scas
jmp
cs
mov
jle
pop
or
jmp
push
nop
dec
push
sub
sar
loope
lcall
xor
ja
xor
aam
or
cli
dec
inc
or
cmpsl
mov
jmp
mov
jb
mov
and
ret
fs
shlb
shr
push
mov
dec
and
ret
pop
lahf
movsl
jnp
sbb
test
ret
mov
dec
mov
loopne
cwtl
xor
inc
and
negl
push
cld
sbb
popf
leave
stc
cli
lods
enter
xor
fs
xor
xchg
mov
ljmp
test
mov
rcl
mov
sti
mov
call
or
addr16
idiv
mov
fdivl
mov
push
cli
xor
sbb
pushl
mov
fstps
xchg
mov
fimull
call
pusha
sbb
lcall
dec
cltd
push
mov
sarb
sbb
push
jl
incl
inc
inc
push
jg
incl
lods
inc
pop
fdivs
sarb
shll
daa
icebp
movsl
jbe
les
xchg
jp
insl
loope
inc
mov
outsl
mov
rclb
sub
dec
leave
jo
std
lock
lcall
pop
cmpsl
stos
inc
adcb
sti
adc
jnp
hlt
dec
lcall
mov
in
jl
pop
cmpl
stc
andb
xchg
sbb
ja
adc
pushl
std
sbb
dec
outsb
sbbl
imul
cmpsl
add
jmp
or
ljmp
push
in
int
stc
push
lret
das
out
addb
adc
add
movsl
mov
ljmp
jb
or
mov
xor
or
mov
lret
mov
iret
cmp
inc
cmp
jmp
ficomps
push
dec
ja
jne
pop
cmp
jl
jbe
popf
int3
in
lahf
ljmp
fiadds
mov
mov
sahf
fadd
lock
sbb
popa
xchg
repz
jg
cltd
dec
sti
notb
mov
stos
dec
push
repz
movups
test
test
ret
clc
pushl
je
mov
add
mov
or
xchg
inc
fadd
cli
pushl
or
insb
adc
aam
cmpsb
scas
arpl
jle
jae
fwait
jl
lahf
icebp
nop
xchg
mov
das
push
xchg
sbb
pushf
push
fs
inc
pop
push
push
add
dec
dec
in
test
ljmp
icebp
inc
jo
mov
call
test
fdiv
shlb
mov
decl
sbb
mov
and
sub
lods
xlat
loopne
cmp
jmp
inc
into
or
cltd
xchg
push
incl
pop
int
xchg
pop
stos
pushf
cs
mov
adc
jno
add
jns
sbb
les
decl
adc
in
inc
aam
ficoms
imul
and
add
jle
shrb
or
rol
stos
adc
shrl
adc
mov
mov
cli
push
xchg
int3
xchg
fs
jg
lret
mov
imul
lcall
push
adc
mov
popa
inc
mov
jp
jmp
fidivl
ret
add
popa
decl
sbbb
in
cs
add
and
xchg
sub
push
cmp
cmp
incl
lcall
cmp
stos
push
pop
xor
mov
cwtl
jmp
cwtl
rclb
ja
test
out
xor
fildl
cwtl
mov
into
inc
sub
jo
lods
addr16
sub
out
fsts
xchg
push
push
inc
mov
xor
addr16
inc
movsb
dec
xchg
or
jl
in
adc
daa
in
into
je
cmc
or
ljmp
xor
test
cs
cmp
sub
mov
cld
ss
outsl
adc
jg
xchg
jo
add
push
add
push
sub
ljmp
dec
and
dec
fidivrs
add
dec
stc
enter
lods
and
fistpll
jg
ljmp
ds
cmp
sub
mov
idiv
in
call
testb
push
inc
std
movsl
fldcw
mov
repz
shll
mov
out
dec
pushl
sbb
cmpsl
ss
pop
std
push
stos
ret
add
cmpsb
mov
dec
mov
decl
sub
cmp
sbb
jb
pusha
xor
xlat
enter
jns
insl
call
out
xchg
jmp
jge
or
cli
imull
test
lds
and
ljmp
lret
xchg
mov
ss
add
mov
cmpsb
hlt
push
push
sbb
pusha
xchg
popf
std
jmp
sbbb
aaa
sub
arpl
mov
and
decl
pusha
push
call
push
fldcw
push
es
sbb
push
testl
dec
pop
mov
jae
cmpl
jae
cmp
lods
push
rolb
inc
push
loope
call
pop
pop
std
cmpsb
mov
lcall
jbe
out
shll
icebp
jmp
pop
cli
shl
scas
decl
pop
and
xor
jno
std
sbb
cmp
incl
pop
jp
dec
pop
dec
push
shrb
mov
dec
xchg
cmpl
xchg
dec
in
xor
scas
cltd
je
push
sbb
push
lods
sbb
mov
ds
cli
dec
sahf
ja
xor
lods
add
decl
jns
addb
cwtl
mov
shl
sahf
push
lea
mov
adc
jg
mov
ds
or
mov
ja
shlb
lock
lock
push
xchg
lret
push
jg
scas
punpckhdq
xor
adc
sbb
jns
imul
shrl
ljmp
adc
jbe
and
adc
das
outsb
jb
jg
inc
mov
push
and
clc
incl
mov
jle
imul
xchg
mov
fwait
mov
mov
xor
mov
xchg
pop
adc
into
hlt
xlat
cltd
mov
lcall
xor
jnp
or
push
jae
pop
int3
lahf
push
out
push
scas
orb
sar
inc
std
push
orl
push
lret
cmp
cmp
call
jo
daa
fstpt
outsb
aas
xchg
or
dec
sarb
pushl
xchg
in
add
imul
jo
xchg
xorb
adc
adc
cmpsb
lods
pop
in
sti
lret
ror
jnp
dec
pusha
xor
inc
mov
cmp
aad
out
in
lret
pop
icebp
jg
and
mov
gs
mov
adc
dec
pop
ljmp
dec
fisubl
in
jo
jbe
jae
mov
sub
test
in
dec
xor
cmp
ljmp
sbb
cwtl
cltd
jge
fprem
fcompl
add
icebp
dec
scas
cli
incl
mov
aam
jmp
lds
xchg
fildll
ja
jmp
mov
imul
lock
aas
pop
or
push
in
inc
sub
sar
jg
lds
pop
pop
mov
mov
push
loopne
popf
pop
xor
sbb
les
push
out
cmpsb
or
outsl
loopne
pop
xchg
insl
fmull
cltd
insl
pusha
fxch
dec
jecxz
scas
cmp
push
fbld
incl
jg
cwtl
nop
add
js
incb
call
loop
mov
scas
mov
sub
add
add
fmull
mov
and
lea
jg
out
sbb
jp
jne
xor
and
jg
mov
xchg
scas
dec
jg
add
pop
test
or
pop
imul
stos
push
test
cmpsl
mov
sub
fs
ljmp
mov
or
hlt
ljmp
jb
pop
aaa
inc
and
xchg
lods
lods
dec
lcall
cmc
insl
sbb
jne
sbb
inc
les
mov
push
sbb
adc
ljmp
lret
inc
mov
add
dec
fdivr
lods
stos
xchg
adc
push
int
ret
cmp
out
sar
lcall
aas
adc
aad
test
sbb
sbb
sub
mov
cmp
out
sbb
clc
push
nop
jnp
xor
sbb
fcomip
outsl
push
icebp
dec
enter
inc
mov
js
push
push
sbb
mov
idivb
lahf
xchg
inc
fnstsw
out
pop
xor
adcb
mov
dec
dec
xor
jg
mov
js
cmc
movsb
add
push
cltd
and
test
mov
out
mov
and
push
test
aam
mov
pushl
js
addl
leave
jb
and
jo
lock
decl
repz
mov
sbb
ret
inc
jl
mov
jmp
das
dec
jle
pop
stos
cmp
sbb
xlat
push
adc
mov
inc
ljmp
incl
dec
jle
hlt
xor
and
mov
out
loope
adc
add
mov
movsb
xor
xchg
cmpsb
xchg
mov
push
xor
pop
mov
add
jle
push
int
sahf
jae
push
mov
cmp
call
mov
int
push
cmp
imul
and
ret
fwait
iret
xchg
cli
adc
pop
pop
mov
and
cli
mov
mov
cwtl
rclb
xchg
in
es
xlat
xchg
or
pushl
fisubrl
mov
shll
icebp
jg
or
mov
mov
call
aaa
jae
lahf
adc
mov
aaa
mov
xor
div
gs
shlb
lods
rcll
sbb
mov
cmp
subl
adc
dec
leave
mov
sub
in
inc
xchg
lcall
test
cmp
mov
ret
push
imul
pop
jb
dec
cld
shrb
lcall
mov
inc
pop
mov
pop
mov
sub
mov
dec
and
and
lods
mov
mov
push
jnp
std
std
pusha
fs
sar
jg
loop
cmp
or
shlb
loopne
fisubrl
stos
popf
insb
xchg
dec
notb
adc
jmp
fcom
mov
mov
push
jns
pushf
rorl
jecxz
lret
in
jg
mov
push
mov
rcll
cmp
jge
sub
repz
or
lcall
call
mov
sarb
cmp
mov
sbb
jg
cmp
xchg
adc
fs
inc
es
nop
mov
and
mov
mov
rclb
add
sub
insl
pmaxsw
incl
mov
push
xor
sbb
inc
icebp
mov
sbb
cmp
ret
sar
lret
mov
or
mov
clc
shlb
call
out
imul
or
test
xor
shl
xor
sbb
pop
shlb
inc
mov
xor
lods
and
mov
mov
jge
dec
inc
mov
fucomi
std
inc
icebp
mov
int3
mov
fldl
mov
sti
mov
out
and
packssdw
outsl
jnp
decl
mov
sub
test
mov
sbb
icebp
or
inc
test
movsb
jmp
lcall
sti
scas
mov
mov
dec
xchg
inc
mov
sbb
mov
orb
movsl
jo
aad
stc
mov
lock
ja
les
inc
jo
bound
xor
decl
lods
push
cmp
lcall
and
call
sarl
or
pop
cs
jg
lcall
stos
test
scas
ja
adc
int3
and
shlb
repz
cmc
jmp
mov
add
and
dec
sub
adc
pop
jb
jg
sub
push
rcll
push
pop
push
add
decl
out
scas
cmpsl
adcl
mov
les
daa
adc
loope
inc
adcl
fcoml
out
and
push
mov
dec
push
lock
in
xchg
ljmp
repz
push
in
or
fisttpll
sub
inc
or
gs
inc
scas
or
decl
push
xor
cs
test
pusha
sahf
add
hlt
pop
cmp
xchg
fcomi
dec
pcmpeqb
das
rcr
lods
int3
jl
aad
cld
lcall
leave
xor
lods
jns
lock
insb
sub
int3
into
outsl
std
incl
nop
rolb
push
repnz
fcmovb
data16
sub
push
pop
call
stos
outsb
mov
mov
fwait
jle
pop
sahf
test
add
decl
in
sbb
mov
rolb
js
mov
jl
orl
repz
push
fcos
call
mov
xchg
sti
sbb
xchg
or
movsl
xchg
xchg
adc
cmp
outsl
lret
lock
faddl
dec
in
mov
les
icebp
pop
cmc
pop
push
stos
push
fstl
call
lret
xor
bound
repz
sarl
imul
pop
mov
lock
or
sbb
mov
xchg
lods
cmpsl
sti
mov
jle
std
sub
jmp
les
mov
push
lds
lods
jle
inc
testb
std
pop
mov
dec
lret
div
hlt
mov
mov
ret
sbb
fcomip
sbb
insl
xchg
xor
sbb
mov
subb
movsl
sbb
jmp
pop
push
std
rcl
jne
popf
cli
je
rcrb
pop
out
aas
push
and
pop
sub
sub
push
scas
lea
sarl
cmc
leave
cwtl
xor
cltd
scas
jo
das
adc
ja
inc
ljmp
adcl
stos
mov
mov
cmpsl
push
ja
sbb
mov
pop
icebp
cmpsl
and
add
xchg
test
movsb
cwtl
fisubs
lock
jg
outsb
jp
test
adcl
push
or
test
mov
push
sub
ds
in
pop
ret
adc
push
cmp
loopne
movsb
sub
push
ljmp
push
into
movsl
iret
test
fisubl
mov
aam
arpl
xor
hlt
popa
xor
cld
movsb
xacquire
inc
inc
mov
pop
js
xchg
into
das
mov
jl
or
sar
lcall
jnp
dec
or
dec
into
xchg
das
out
xchg
mov
test
or
aas
xor
jecxz
inc
xchg
jns
push
fimull
iret
inc
add
xor
cmp
jbe
movntq
ret
js
stc
pop
xor
pop
lods
call
push
movsb
sbb
and
aas
push
push
push
hlt
mov
pop
divb
cmp
call
test
dec
xchg
sti
mov
adc
add
lret
and
cmp
incl
jle
jl
mov
pop
test
test
sbb
mov
incl
dec
cmp
cld
fisttps
ds
or
into
std
jge,pn
cmp
xor
test
inc
adc
ret
ljmp
add
pop
sub
test
movsb
jg
mov
enter
adc
test
pushf
push
jg
aaa
mov
addr16
outsl
out
mov
movsl
stc
sub
cs
in
sub
xchg
sti
pop
shl
pop
jnp
pushl
pop
and
jl
hlt
cmp
sbb
fidivrl
lahf
or
imulb
jo
jmp
push
add
xlat
test
xchg
adcl
mov
adc
dec
cli
cmpb
imul
das
insb
fcoms
ficomps
sbb
idiv
ljmp
pop
mov
xchg
mov
jae
je
mov
mov
loope
mov
dec
mov
cmp
and
divb
xor
jmp
aaa
fcompl
xchg
mov
jbe
nop
mov
andl
jbe
jo
mov
pop
adc
sbb
xchg
adc
xchg
sbb
sub
fs
es
aaa
std
ds
cmp
in
mov
mov
sbb
inc
stos
jb
mov
decl
jp
inc
pop
mov
mov
jl
pop
adcl
aaa
inc
xor
mov
repz
mov
push
loop
shll
fs
jmp
add
cmc
into
ds
mov
test
iret
lcall
je
mov
adc
cmp
sub
movsl
imul
mov
sub
lret
stos
daa
pushl
sti
mov
scas
pop
andb
jle
cmp
push
sbb
pusha
fbld
sahf
incl
in
negb
mov
das
xor
pushf
push
in
and
mov
inc
cmp
scas
mov
mov
fprem
lods
jne
dec
mov
jne
xchg
decl
sbb
mov
mov
or
addb
dec
dec
mov
pushf
insb
punpckhdq
mov
mov
ja
cli
xor
sahf
jmp
arpl
sahf
je
lcall
mov
mov
pop
sub
out
mov
xchg
out
repnz
inc
sbb
data16
push
cld
jns
mov
in
pop
shlb
repz
call
mov
adc
fistl
adc
mov
mov
adc
add
das
rcr
inc
sbb
mov
aaa
fnstenv
imul
popl
jnp
jle
inc
fidivs
repz
pop
cmc
lret
pushl
inc
or
adc
decl
push
pop
jb
push
jae
fldl
movups
jle
je
sysexit
mov
pop
ljmp
shlb
mov
cli
sbb
push
add
shl
and
jbe
gs
mov
ljmp
and
dec
cmp
fmulp
jb
frstor
jl
je
pop
mov
loopne
enter
lcall
call
sub
jb
sti
mov
ret
dec
lret
test
xchg
decl
push
dec
iret
insl
and
imul
or
mov
or
mov
shll
sahf
int
pusha
cmp
cmpl
adc
sub
decl
in
iret
cwtl
push
mov
iret
insb
sahf
dec
notl
dec
mov
jl
push
ljmp
pop
hlt
inc
sahf
pop
push
sub
mov
lret
pusha
jle
cmp
jne
mov
adc
incl
das
pop
test
lds
and
stc
pop
adc
add
mov
mov
into
pop
mov
jno
incl
and
test
call
push
imul
fstps
cmp
jmp
add
xlat
je
fdivs
xchg
bound
inc
fs
xor
mov
push
jbe
xchg
decl
sbb
add
sbb
test
lds
inc
pop
inc
dec
pop
decl
out
inc
lret
sbb
jle
jg
lock
or
pop
jecxz
xchg
mov
dec
add
mov
imul
jns
sahf
ret
inc
sbb
mov
out
outsl
shl
incl
shrb
or
mov
adc
movsb
fnstsw
outsb
or
in
mov
leave
sub
cmovae
xchg
fs
pop
fwait
mov
and
std
jmp
nop
or
das
sar
jmp
arpl
orb
jg
mov
cmpsl
mov
icebp
dec
scas
pop
cld
lcall
push
ljmp
sbb
lds
push
in
cld
xor
mov
cmc
adc
push
and
mov
mov
add
hlt
ljmp
vunpcklps
mov
jnp
sub
push
mov
ljmp
or
lahf
inc
inc
pop
movsl
pop
cltd
aas
sub
fdivrl
out
jmp
jno
add
clc
add
stos
shlb
mov
inc
fildll
inc
jb
dec
subb
decl
jb
addr16
jp
cmp
mov
pop
pop
popf
mov
pop
out
jb
xchg
xchg
data16
push
sti
cmp
jno
addb
inc
push
jg
mov
xor
mov
xor
in
jg
fldl
test
das
clc
pushl
repz
mov
jnp
ss
and
std
jb
mov
jmp
outsl
xor
int3
in
mov
or
rcr
dec
xchg
mov
lcall
push
add
incl
cld
cwtl
mov
or
pop
adc
push
xor
data16
lcall
cmp
sbb
xor
sub
aad
negb
out
lea
leave
les
mov
push
ljmp
jnp
mov
jo
push
mov
and
aam
pop
daa
incl
scas
test
outsl
push
outsl
pushf
in
hlt
sub
mov
rcrb
jne
push
jl
xchg
xchg
lcall
int3
jg
mov
xchg
aam
fs
or
xlat
mov
fcomip
mov
cmpsb
jne
arpl
scas
xor
cmp
pop
pop
dec
je
xchg
adc
jmp
push
pop
mov
shrl
xor
loop
cmc
sub
pusha
call
in
sti
xchg
insb
add
cmp
inc
mov
and
xchg
out
idiv
int
mov
pop
repz
pop
in
repz
mov
cmp
cmp
incl
mov
dec
jl
and
lret
add
lahf
cmp
mov
adc
ret
fnstcw
pusha
inc
je
jle
pop
mov
xchg
sahf
sub
jmp
mov
and
xchg
push
push
push
js
ret
adc
or
xor
ljmp
or
xor
jge
icebp
test
out
push
sahf
xor
sar
xor
pop
mov
push
jb
and
jge
jb
jecxz
test
xor
xchg
sarb
call
jns
push
push
lret
xchg
movhps
rcl
lahf
dec
out
xor
addr16
mov
int3
cmp
lds
mov
push
ret
adc
pop
jno
fldenv
subl
and
lcall
subl
cs
fbld
std
fiadds
lods
pop
jle
dec
cltd
dec
mov
jbe
push
and
push
lds
lahf
fdivs
outsb
xor
das
add
add
sbb
push
adc
ds
scas
cli
and
outsb
call
insb
push
inc
and
and
jno
jmp
adc
push
mov
inc
mov
outsl
cli
call
insl
xor
dec
testl
lahf
lods
movsl
popf
sbb
cmc
ljmp
bound
lret
inc
pop
loopne
cmp
jne
xchg
inc
fwait
mov
pushl
and
int
mov
jl
inc
jg
add
jae
addr16
adc
mov
out
xchg
hlt
cwtl
fnsave
jmp
sbb
dec
and
pusha
mov
mov
stos
adc
popa
push
xchg
sahf
sub
inc
cmpsb
js
cli
in
dec
xor
cltd
push
loopne
idiv
lcall
loopne
sbb
add
xchg
pop
sarb
push
loop
inc
lods
testl
stc
dec
push
mov
shll
xor
loope
cmp
dec
lods
cld
sbb
aam
xchg
pop
lcall
inc
clc
pop
stos
push
ss
loope
aam
mov
test
sbb
push
int
cmp
ljmp
add
mov
dec
sub
inc
mov
xchg
inc
xchg
dec
mov
mov
dec
in
xchg
push
mov
imul
in
lods
pop
call
ljmp
inc
lcall
adc
das
adc
leave
lret
xor
sub
lcall
filds
mov
pop
aaa
lock
jo
and
adc
popf
and
incl
pop
inc
lret
out
jmp
leave
dec
sub
sub
sub
iret
jbe
mov
jo
inc
mov
or
cmpsl
aaa
cmp
sar
fdivl
jno
cmp
cmp
int
or
sub
or
fcomip
push
andl
and
repz
push
cmpsb
push
push
adc
xlat
incl
and
xchg
in
jnp
daa
lock
insb
push
rorb
push
scas
rcrl
mov
pushl
jle
xor
daa
dec
sub
loopne
jo
and
fldl
pop
iret
or
ljmp
aaa
stos
mov
insl
cli
shll
push
sbb
lods
out
fstps
lea
roll
ljmp
mov
call
aam
jp
or
sub
lahf
inc
fcoml
mov
dec
cmp
incb
decl
mov
aas
mov
mov
xor
xchg
add
mov
cmp
incl
leave
or
adc
xchg
lret
push
jb
sub
cld
and
ljmp
sti
lods
cwtl
or
add
inc
cmpsl
or
or
adc
and
fsubl
fists
fldl
ja
insb
pushf
mov
data16
pushl
and
inc
mov
pop
stc
mov
das
cmp
mov
cmc
push
jg
into
fisubrs
decl
imul
adc
pop
out
popf
jmp
mov
adc
push
push
jg
int3
push
ljmp
push
and
scas
push
out
lahf
sub
dec
xor
mov
movsl
test
cltd
push
push
mov
insb
pop
pop
rcl
mov
xchg
out
mov
sbbl
or
cmp
mov
or
lods
daa
movsb
shl
mov
out
mov
inc
mov
repz
lcall
lock
xchg
or
sub
or
mov
dec
out
mov
iret
xchg
push
dec
push
sbbb
das
loope
jno
mov
cmc
sti
nop
sbbl
jp
fdivr
incl
and
pop
inc
popa
pop
sti
enter
dec
sbb
inc
scas
std
mov
mov
cli
clc
lea
mov
les
fdiv
shl
add
dec
add
sbb
pop
add
mov
sub
mov
and
xor
loope
jmp
xchg
dec
les
xlat
adc
xchg
test
push
pop
cltd
shrl
filds
lods
push
outsl
imul
mov
cltd
std
pop
adc
pop
lds
in
outsb
fwait
incb
mov
outsl
jnp
or
pop
pop
push
push
or
pop
pop
cmp
or
pop
inc
push
out
sbb
enter
pushf
pop
call
in
cmp
jmp
out
outsb
jmp
fstpt
ja
inc
add
ds
mov
pop
out
faddl
ret
das
movsl
sbb
dec
out
fcoml
pop
push
decl
and
lahf
mov
cwtl
mov
insb
fnstsw
jb
xchg
mov
mov
and
or
into
add
ficompl
call
or
jg
sti
xor
mov
stos
fisubl
je
sbb
jnp
mov
pop
mov
or
lret
insl
push
xchg
inc
nop
dec
idiv
out
and
maskmovq
shll
sub
push
in
inc
ljmp
xlat
mov
jo
cltd
xchg
lods
jnp
fimuls
sbb
xchg
fbld
push
cltd
cmpsb
mov
lret
test
lock
shrb
jmp
in
nop
cmpsl
insl
inc
mov
aam
xchg
dec
add
in
scas
pop
fildll
movsl
push
aaa
clc
add
ljmp
dec
imull
sbb
cmp
mov
mov
in
and
push
inc
fldl
fdivrl
lret
mov
pop
into
xchg
ljmp
jno
pop
das
and
push
xorb
jl
je
sbb
mov
mov
xchg
cmpsl
xor
sbbl
sbb
push
sub
fdivrl
pop
push
sub
mov
or
imul
mov
mov
leave
push
xchg
xor
in
inc
orl
jb
sti
push
push
loop
test
hlt
decl
ljmp
or
scas
xchg
sub
incl
mov
ljmp
mov
movsl
or
jecxz
test
mov
pop
add
add
push
into
mov
out
call
sub
jb
push
test
decl
out
sbb
ljmp
in
push
pusha
js
mov
jecxz
adc
jl
movsl
push
mov
push
jg
dec
ret
mov
arpl
sub
mov
sbb
int3
xchg
repz
cmp
adc
mov
pop
inc
jg
jno
cmp
cmpsb
stc
les
popf
inc
push
cmp
jmp
jp
jmp
push
sub
adc
outsl
mov
aam
es
add
movsl
lcall
adc
es
lea
les
fldt
sub
fs
sbb
call
dec
iret
sti
bnd
mov
into
push
mov
inc
inc
std
clc
add
test
xchg
push
dec
les
inc
lea
pop
dec
repnz
out
push
push
cmp
cwtl
or
mov
cltd
pop
xor
mov
jb
sahf
pop
iret
aad
inc
mov
incl
mov
pop
mov
test
jmp
xlat
mov
or
test
dec
call
mov
add
shll
cld
sti
jne
pop
cmp
call
lcall
xchg
mov
mov
push
shrb
aaa
shll
adc
cmp
lods
and
jge
mov
and
pop
movsb
sbb
loop
inc
and
pop
sub
enter
incl
push
std
gs
xchg
out
dec
ja
cmp
std
cmpl
loop
dec
mov
aas
xchg
test
notl
js
and
xchg
mov
test
movb
xchg
and
call
push
loop
mov
lret
test
pop
aas
inc
dec
push
addb
pushf
call
jg
sbb
int
jnp
rcrb
push
out
xchg
sub
pushl
lods
xor
shll
in
pop
lods
popa
jge
je
pop
mov
xchg
inc
sbb
mov
stos
cmp
lods
xor
inc
pop
pop
clc
icebp
in
mov
push
mov
std
xor
or
inc
push
scas
mov
mov
pop
xchg
stos
pop
inc
mov
decl
int
sub
inc
and
sub
xchg
dec
push
jnp
jg
test
sahf
sub
stc
push
test
lcall
inc
popa
or
dec
movsl
clc
mov
and
and
andl
cmpsb
lock
adc
xor
cmp
jns
lock
lret
loope
or
add
pop
xchg
in
jl
test
inc
lock
mov
fisttpll
push
sub
xchg
xchg
mov
sub
mull
dec
pop
jecxz
cmp
jg
int
loope
jecxz
mov
jmp
inc
xorb
cltd
dec
mov
xor
sbb
jmp
mov
clc
repnz
fisubs
jnp
xor
mov
ja
mov
cmp
dec
call
jno
mov
sahf
xor
ja
dec
dec
lcall
decl
adc
or
and
inc
sti
mov
lcall
cmp
fisttpll
cmpl
js
pop
lahf
push
cld
jmp
pop
and
rolb
mov
pop
inc
aaa
lods
and
add
sbb
pop
icebp
decl
lcall
inc
stos
dec
ret
jns
or
call
xor
jno
xchg
mov
pop
iret
lret
mov
xor
rcrl
int
test
jg
in
pushl
fs
cmpsl
in
roll
fcomi
xchg
mov
and
lret
jmp
add
pop
push
xchg
lcall
pop
repnz
sbb
fcomip
mov
stos
dec
adcb
add
push
jmp
test
lret
imul
cli
xor
fstpt
mov
adc
push
in
lcall
pushl
push
pop
cwtl
addr16
cmc
in
xor
push
or
outsb
fstpl
push
add
push
decl
add
mov
mov
in
xchg
mov
ljmp
push
pushf
xor
mov
adc
call
aaa
popl
add
push
xchg
bound
fwait
adc
lcall
sbb
adc
xor
add
lcall
mov
mov
jmp
shr
xchg
lret
lods
sti
pusha
rorl
sub
pop
mov
repz
out
inc
jns
leave
int
iret
xor
add
ds
mov
push
rolb
test
cmp
incl
enter
mov
mov
or
dec
xor
jg
lcall
decl
jne
push
pop
and
sbb
ljmp
sbb
lods
test
or
xchg
addr16
push
mov
jp
pop
push
pop
decl
jmp
pop
mov
loope
insb
repnz
shr
lahf
outsb
or
add
mov
mov
or
das
xor
add
ret
ret
les
out
cmp
add
cmp
pusha
push
push
ficompl
xor
in
sbb
fistl
lcall
clc
popf
push
jecxz
adcw
arpl
xor
shrb
pop
mov
mov
test
lret
pusha
aas
dec
mov
std
xor
push
xchg
gs
sahf
mov
call
subl
or
xor
push
fdivr
test
mov
imul
adc
outsl
cli
incl
shl
aas
sub
lock
push
std
jne
and
fcmovu
into
cmpsb
jno
rcrl
mov
xchg
ret
jo
negl
sbbl
test
ljmp
push
jne
filds
xchg
outsb
dec
mov
sub
std
push
push
test
insb
ljmp
pop
aam
fstpl
dec
into
cmp
insb
mov
fldenv
inc
xlat
shlb
fldcw
pushl
iret
test
mov
repz
cwtl
xorl
loop
mov
test
jmp
cld
out
mov
pop
lods
cwtl
fldcw
fcom
dec
jge
mov
inc
xor
lcall
pop
xchg
rcrb
pop
jge
push
push
mov
push
push
jmp
clc
cmp
pushf
call
and
sbb
cmp
mov
cmc
lods
adc
add
push
add
jmp
pop
lret
idivl
aad
ror
dec
daa
pop
aas
mov
test
mov
pop
xchg
call
sarb
cmp
or
imul
jns
scas
jg
call
push
call
jle
lcall
add
add
xchg
fistl
jnp
xor
push
push
cmp
pop
mov
inc
fisttpll
pop
sub
adc
mov
sub
lcall
lock
mov
cld
mov
dec
add
sub
mov
jnp
aaa
pop
sahf
out
stos
repz
mov
push
pop
filds
xlat
mov
inc
test
pop
jle
fs
mov
sbbb
jmp
addr16
ljmp
mov
into
je
xorl
js
arpl
push
add
inc
stos
inc
push
mov
xchg
fidivrs
xchg
or
outsb
dec
push
leave
fidivs
cwtl
jbe
lret
ret
lock
xchg
add
ss
nop
fs
pushl
xor
push
xor
sbb
and
jecxz
sbb
into
lods
roll
fldl
out
mov
mov
push
inc
jge
adc
jmp
arpl
mov
sbb
shl
dec
hlt
cmp
and
push
pop
std
rcrb
xchg
pushl
push
add
jo
mov
mov
mov
cmpsb
mov
call
fwait
dec
dec
or
insl
cld
adc
push
pusha
cmp
call
insb
cwtl
sti
out
add
jl
push
dec
cmpsl
cld
or
and
ja
subb
sbb
lcall
pushl
outsl
enter
rorl
cmp
inc
mov
inc
add
mov
jmp
rorl
mov
mov
in
jo
ss
ja
or
mov
inc
loope
and
ljmp
les
cltd
mov
cmp
dec
cmp
jno
mov
cmc
clc
pushl
dec
fimull
dec
sbb
cmc
mov
icebp
cli
call
mov
ficoms
sub
jbe
cmp
adc
xor
lcall
bound
imul
js
jge
je
incl
es
push
push
loope
jbe
inc
aam
cmp
xor
mov
jmp
pop
push
outsb
mov
ljmp
sbb
cmp
inc
push
hlt
push
cmp
inc
negb
out
inc
fisttpll
ljmp
mov
dec
orb
sbb
sahf
stc
enter
or
shl
in
test
dec
fisttpl
lock
adc
xchg
cwtl
cmpsb
test
sti
cld
push
lret
sbb
lods
pushl
cld
call
pop
and
pop
mov
mov
pop
jne
mov
rcrl
cld
icebp
sub
mov
movsl
cmp
ret
test
xchg
cmpb
or
pop
add
adc
xor
mov
jmp
lahf
notb
test
leave
sbb
popf
mov
xor
jmp
into
fiaddl
aaa
ljmp
xor
roll
xchg
xor
push
add
xchg
cmpl
jo
cwtl
sbb
in
leave
push
jmp
incl
roll
push
or
testb
pop
mov
jae
and
insl
push
call
fmull
pusha
xchg
push
sbb
sub
or
inc
shll
dec
add
lahf
dec
jmp
xor
mov
dec
pop
iret
imul
nop
or
aas
and
dec
idiv
jnp
mov
lds
xchg
xor
or
cld
jae
xor
aam
fdivr
ljmp
jmp
pop
and
test
pop
mov
xlat
inc
inc
jb
mov
add
adc
pop
push
xor
cmp
cmp
std
fsubrs
out
jnp
fs
fstl
dec
into
lods
dec
mov
jmp
mov
test
or
or
scas
add
inc
lds
idiv
incl
sub
inc
shll
es
mov
mov
sub
xorb
ljmp
xchg
sbb
and
mov
pop
scas
mov
mov
mov
decl
in
jmp
adc
inc
push
aam
xor
lret
xor
fsubl
inc
push
jp
lret
mov
cli
pushl
xor
out
stc
mov
xlat
xor
and
inc
sub
aam
jecxz
jo
sbb
sub
bound
sub
into
adc
dec
mov
inc
fsubr
aad
xchg
jg
clc
add
sub
mov
push
push
dec
add
push
xor
mov
cmc
ljmp
cmp
pushf
mov
bound
sub
out
push
cmpsb
or
inc
inc
jg
sbb
xchg
xor
jne
rclb
lds
add
fcomip
ljmp
cmp
cmc
xchg
dec
ja
mov
jnp
or
incl
andb
pop
xchg
in
sbb
jge
out
mov
xchg
pop
add
in
inc
or
iret
in
jno
enter
cmp
test
sbb
pop
dec
and
lcall
mov
icebp
icebp
nop
movsl
fcmovb
ja
sub
adc
fnstenv
movsb
loop
mov
mov
es
decl
out
jae
daa
mov
adc
mov
dec
in
inc
adc
or
or
popa
and
jns
inc
hlt
lods
sbb
call
ficoml
mov
mov
lcall
insb
mov
mov
aaa
cwtl
mov
jmp
cmp
cmp
repnz
pop
scas
mov
fdivs
inc
jb
fisttpl
movsl
sar
sbb
push
mov
mov
or
xchg
pop
add
int3
xchg
call
pop
push
sub
dec
push
ror
adc
cmovno
and
mov
xchg
pop
sub
clc
ljmp
push
xchg
cmp
ficompl
adc
add
push
fdivs
lret
test
cmp
repz
scas
outsb
ljmp
mov
pop
out
call
mov
mov
cli
popa
cmp
jbe
pushl
sti
jb
sti
xchg
iret
push
loopne
shlb
cs
ret
mov
stos
jp
pop
cmc
ljmp
scas
or
xor
js
mov
sub
jl
mov
orl
incl
cmpsl
loopne
sub
adc
ljmp
and
pop
fwait
mov
ficomps
cmpsb
test
sub
out
push
mov
in
mov
leave
pushl
xor
mov
aaa
sbb
fimuls
inc
mov
jmp
lcall
adc
jne
mov
js
or
sarb
mov
jmp
shrb
or
or
jp
repnz
push
pop
das
jne
cli
scas
xchg
xchg
idivb
and
scas
xor
pop
sbb
or
fnstsw
rcl
push
xor
dec
outsb
jle
cmpsb
mov
mov
adc
outsl
mov
sbb
mov
sbb
inc
scas
inc
push
push
dec
stos
in
mov
mov
and
fbstp
cmp
pop
into
lcall
rolb
out
movsb
jnp
cmp
mov
add
jl
xchg
call
loopne
lds
jmp
in
subl
and
mov
sub
pop
inc
lret
pop
das
xor
xchg
jnp
pop
ficoml
mov
sbb
sar
lcall
pop
sbb
clc
imul
and
loope
sar
dec
outsl
out
mov
ja
decl
xchg
mov
adc
push
ret
mov
jo
bound
inc
add
ljmp
jp
enter
int3
lcall
push
ret
jp
adc
out
in
jg
inc
out
xchg
ror
jne
nop
iret
lret
in
outsb
enter
in
jnp
mov
lods
incl
push
xchg
dec
xchg
add
mov
jg
cmp
lea
xchg
mov
xchg
mov
int3
mov
add
repz
inc
jbe
inc
push
mov
jp
push
push
loope
ficompl
scas
je
in
sbb
inc
je
cli
das
shll
xor
idiv
mov
pop
inc
inc
sub
sbb
movsb
jge
rcr
mov
dec
call
mov
sbb
in
sti
stc
loopne
lcall
xor
fcmovnu
lods
sti
cwtl
frstor
mov
lahf
mov
enter
insl
jle
push
imul
mov
ret
in
lds
mov
add
mov
push
pushl
mov
repnz
cmp
lcall
les
xchg
dec
ljmp
call
loope
jge
push
push
or
rcr
jg
fwait
out
cmp
sbb
jl
sahf
mov
pop
mov
mov
test
scas
adc
push
rcll
fldl
std
addr16
jmp
push
out
fs
decl
ret
mov
xchg
out
mov
jnp
addr16
imul
js
incl
push
xchg
insb
inc
push
inc
mov
test
mov
xor
jg
or
popf
das
rclb
orb
push
lcall
mov
push
add
lock
mov
add
xchg
ficoms
lods
and
and
icebp
jne
shll
pop
cmc
xor
cmpsb
mov
clc
inc
ret
mov
loop
sbb
outsl
inc
pop
xlat
xor
or
decl
jecxz
mov
pushf
fdivp
mov
lea
xchg
loop
testl
jae
push
add
call
xchg
pusha
pop
mov
sub
insl
cmpb
clc
sub
aaa
lods
shrl
dec
mov
mov
and
mov
adc
mov
fs
adc
inc
aas
pop
mov
mov
in
ja
sub
or
mov
cs
scas
cmp
movsl
sbb
cld
lcall
sbb
inc
dec
push
mov
mov
rclb
mov
lea
jecxz
incl
jnp
adcb
rcl
and
push
into
fistl
push
int
out
inc
jae
dec
sub
dec
pop
lahf
xchg
xchg
stos
fs
lcall
aas
in
sub
bound
movsb
mov
fildll
mov
iret
inc
add
cmp
in
popf
mov
rorl
lret
jmp
ljmp
jmp
das
fldl
sub
sbb
mov
mov
xchg
mov
jg
icebp
pop
mov
xchg
dec
adc
sub
inc
or
jmp
fs
int3
pop
imul
xor
xchg
pushf
das
fstpt
icebp
add
incl
mov
mov
jae
pop
push
aas
push
fistpll
in
xchg
movsb
xor
out
sbb
push
pop
mov
or
loope
mov
mov
push
sbbb
pop
test
jns
mov
repnz
sub
lock
pop
testl
xchg
add
lcall
cltd
and
lahf
mov
jl
inc
testb
iret
mov
call
jae
push
mov
inc
jo
inc
imul
rolb
sbb
out
and
call
mov
push
xor
dec
xlat
cmpsb
stos
mov
or
pop
in
sbb
decl
pusha
inc
loop
outsl
xchg
das
in
andl
aas
mov
lcall
out
push
sub
bound
in
mov
jne
mov
mov
ret
jg
lcall
add
pushf
pop
dec
call
adc
out
ljmp
jge
mov
sbb
iret
mov
outsl
cmp
ljmp
xor
mov
cli
pop
push
imul
adc
pop
aad
mov
fsubs
and
roll
mov
push
sub
xchg
fsts
insb
push
sub
push
xchg
stos
ss
repnz
inc
sbb
mov
inc
inc
jmp
pusha
mov
mov
mov
jp
dec
cwtl
int3
fmuls
aas
fbld
loopne
adc
mov
lcall
ds
ljmp
adc
insl
adc
sbb
jg
fimuls
jmp
ficompl
test
xor
bound
sar
push
pop
dec
mov
mov
jns
sahf
pop
fsubl
les
and
lods
lock
pop
pop
adc
pop
mov
stc
lret
dec
popf
add
shrl
adc
incl
fidivrl
adc
mov
sub
mov
sub
inc
xchg
inc
adc
inc
notb
mov
call
rcrb
cli
pusha
adc
scas
test
fcomip
insl
mov
mov
xor
inc
adc
xor
fildll
inc
jnp
mov
and
nop
sarl
pop
test
das
clc
mov
leave
nop
cmpb
adc
shrl
outsl
scas
cmc
lcall
xor
adc
pop
mov
push
and
cld
mov
icebp
adc
sti
gs
std
ljmp
xor
loopne
cmpsb
jbe
jbe
test
fs
pop
mov
pushl
mov
outsb
cmpsl
inc
push
fwait
xor
push
cmp
sahf
nop
cmp
jge
call
push
sub
add
repz
push
or
cmp
movsb
fadd
data16
cli
jg
js
sbbb
int3
pop
aaa
leave
stos
imul
mov
cmc
sarb
mov
inc
ud2
testl
jnp
cmp
lcall
and
test
subl
shlb
xor
inc
fcmove
in
pushl
lret
add
ficomps
std
mov
dec
lods
xchg
sub
idiv
sbb
inc
xchg
sbb
inc
repnz
mov
mov
ror
push
iret
dec
xchg
and
jg
push
fwait
xchg
aam
jge
pusha
xchg
in
shlb
adc
and
sub
dec
inc
loopne
inc
mov
popa
push
jne
cmp
mov
shr
cld
ljmp
lret
xlat
adc
repnz
daa
cltd
xor
and
push
xchg
jo
inc
xchg
cwtl
xchg
add
pushl
mov
mov
lock
sarb
inc
fcos
decl
pop
jecxz
or
or
fwait
addl
lcall
xor
mov
push
mov
lcall
and
and
out
cli
jmp
jge
dec
xchg
dec
mov
filds
enter
sar
loopne
out
xchg
xchg
rolb
out
ret
lea
outsl
cmp
out
cs
inc
fidivrs
mov
leave
sub
xchg
loope,pn
push
jp
mov
fsubrs
xchg
incl
shll
and
pop
mov
arpl
and
fucomi
adc
sbb
push
xor
mov
mov
lcall
sahf
loop
pop
int3
dec
daa
out
es
loop
fildll
mov
std
lcall
xor
xor
mov
sahf
sub
mov
lock
xchg
test
js
mov
mov
pop
sbb
fwait
pop
adc
nop
arpl
inc
add
cmp
inc
sarb
ljmp
push
aad
push
int
dec
scas
popa
and
lcall
lret
mov
or
jmp
add
fwait
cli
les
lods
mov
aam
jmp
pushf
mov
pushf
loop
cwtl
dec
leave
es
loope
test
dec
call
sub
add
or
jg
rcr
push
hlt
jmp
inc
hlt
arpl
js
clc
ret
repz
mov
int
sahf
push
mov
decl
popa
push
dec
insb
repz
inc
aaa
in
push
sahf
mov
cld
push
push
loope
leave
pop
sahf
imul
jp
add
das
sub
pop
loopne
or
test
or
subb
inc
test
js
incl
std
jo
test
push
sbb
fstp
push
xor
and
sub
ret
and
jno
jmp
lock
pop
xor
mov
xor
addl
pop
fildl
call
dec
imul
scas
test
jmp
adc
and
sub
addr16
dec
pushl
iret
mov
pop
aad
jae
xchg
out
out
cwtl
pop
data16
icebp
add
push
xlat
mov
in
inc
adc
xchg
jg
jg
jae
lds
or
push
jns
je
jo
popaw
jg
inc
push
cmpsb
lock
xchg
sbb
inc
lcall
repz
jae
sbb
pusha
jg
iret
icebp
inc
dec
dec
shrb
pushl
xchg
xchg
push
or
mov
add
pop
nop
fwait
jg
xor
hlt
fcomip
pop
je
nop
sbb
out
pop
aas
pop
hlt
jb
cmp
movsb
xchg
filds
mov
push
or
inc
cmp
fldt
jge
mov
loope
incl
lods
clc
mov
les
test
mov
add
pop
jp
xor
mov
xchg
ljmp
jne
ret
aaa
xchg
add
rolb
movsb
mov
inc
pop
dec
push
outsl
fisttpl
push
mov
decl
add
rclb
addb
sbb
mov
loope
repnz
push
mov
xchg
or
jmp
mov
push
jg
xchg
lods
pop
enter
out
fnsave
lcall
pushl
cmpsb
inc
inc
jecxz
push
and
enter
or
fsubl
or
js
mov
lret
jns
cmp
repnz
jo
xchg
inc
popf
pop
dec
xchg
ljmp
daa
test
dec
in
ds
ret
cwtl
pop
cs
sub
stos
adc
aas
in
out
fbld
xor
jge
and
mov
decb
clc
test
sub
ljmp
adc
ljmp
push
hlt
mov
cmpsl
sbb
and
or
cmp
mov
xor
jbe
dec
int3
cmpb
mov
xor
stos
mov
pushl
pop
popl
lcall
jg
mov
movsb
fidivrs
lcall
push
cmc
repz
rcr
inc
xchg
ja
mov
xchg
mov
and
cmpsb
mov
dec
sbb
ret
mov
sbb
lcall
aam
cmp
push
push
sahf
xor
inc
pushl
ret
mov
in
out
pop
or
addr16
inc
mov
lret
hlt
sbb
popa
jb
mov
xchg
sbb
ljmp
iret
fsubrl
jno
pop
or
jae
sbb
outsl
inc
mov
aaa
std
inc
jmp
adc
jb
aas
push
mov
sbb
das
loope
lcall
or
pop
fwait
in
adc
mov
call
mov
fsub
xor
mov
jbe
xchg
and
pop
or
jnp
cmp
add
call
push
insb
xor
xchg
cmpb
dec
mov
movsl
int
jbe
mov
sbb
mov
jo
or
outsb
pop
jbe
movsb
pushf
test
mov
mov
ret
rcrl
mov
outsl
adc
mov
lcall
pop
movsl
mov
rcll
adcb
mov
adc
js
pop
hlt
lcall
xor
sub
xor
xor
into
sub
test
mov
push
fcomip
ljmp
mov
ljmp
xlat
rcrb
jno
jp
jbe
mov
loopne
fmul
ret
std
lods
cltd
adc
insb
data16
cli
outsl
add
bound
outsl
bound
mov
jo
and
mov
jg
push
mov
and
mov
fwait
mov
call
push
push
jae
lods
mov
mov
or
incb
mov
pushl
aas
lcall
loop
shll
mov
fs
dec
sub
stos
push
shll
cwtl
nop
call
xchg
or
xchg
cmpsl
loope
jnp
fcoml
add
inc
in
xor
stos
xchg
into
out
jp
cld
and
cmp
jns
push
mov
popf
clc
iret
adc
sbb
int
adc
ljmp
cli
ljmp
insl
ret
jmp
xlat
sub
rcl
mov
bound
jg
jg
pushl
stc
fcmovb
fs
xor
xor
mov
out
das
sbb
sbb
sarl
scas
bound
lock
dec
pop
pop
cmp
dec
adc
xchg
fmuls
cmpsb
call
jne
outsl
cmp
pushf
shll
filds
inc
xor
mov
xor
movsl
shll
mov
cmp
push
xor
sub
push
cmp
xor
or
xor
push
sub
fsts
inc
in
mov
push
push
mov
aas
leave
push
xchg
js
sbb
cld
int3
mov
pop
out
mov
popa
jae
jmp
jge
pushl
dec
pusha
cld
sbb
jnp
xlat
adc
mov
fiadds
cmc
pop
xor
jg
cmp
push
sbb
xor
xchg
test
test
mov
rep
arpl
in
jg
cmp
neg
xchg
pop
cmc
out
repz
cld
clc
push
jno
jg
out
loop
aad
ljmp
push
stc
or
jecxz
leave
out
cli
adc
mov
movsl
cmp
popf
sub
mov
decl
jl
mov
lock
enter
xchg
out
or
mov
pop
out
mov
cmpsb
ds
push
mov
sti
fcompl
je,pn
jno
test
cmp
push
cltd
mov
sub
fucomip
scas
or
insb
mov
dec
or
and
cmp
jmp
add
fistps
adc
int
pop
je
in
enter
mov
pop
incl
ficompl
mov
popf
pushl
lea
sahf
jecxz
xchg
cltd
lds
and
xorb
aam
xchg
test
lea
in
jge
push
jne
out
cld
loopne
xchg
aam
das
lret
pop
ljmp
pusha
jns
and
hlt
pushl
add
xor
push
sbb
in
or
dec
lret
adcb
cwtl
mov
outsb
cmc
scas
inc
les
xor
inc
shrl
sub
or
in
pop
sbb
jb
or
push
test
jnp
xchg
incl
xchg
stos
sub
pop
xchg
insl
sahf
and
pop
mov
rclb
pop
add
adc
sahf
sbb
incl
ljmp
lods
lcall
sub
call
inc
jno
mov
into
out
adc
cld
mov
xor
arpl
lcall
add
shll
jbe
push
mov
push
inc
mov
popa
jg
fcompl
cmp
out
data16
iret
sbb
inc
call
test
xchg
stos
insl
sub
add
mov
mov
sub
imul
in
lcall
adc
sti
ljmp
dec
scas
sub
fmuls
inc
push
sarb
aad
xchg
cwtl
xchg
mov
outsl
pop
or
adc
mov
mov
pushf
shrl
shlb
mov
or
pop
pop
or
loopne
pop
cltd
fadds
cmpsl
pop
popa
mov
pop
mov
test
or
and
cwtl
jge
outsl
xlat
mov
fcomip
xor
adc
push
add
cmp
jg
pop
dec
les
xor
mov
stos
aaa
adc
lcall
pop
jb
cwtl
push
mov
pushf
pusha
xor
fstpt
sbb
fidivs
inc
lods
xchg
inc
repnz
xor
clc
inc
xchg
sbbl
inc
out
outsb
mov
mov
mov
inc
cmp
inc
call
push
enter
ret
stos
mov
pop
pusha
xchg
lods
cmp
push
lods
push
xlat
inc
fcomip
ljmp
roll
andl
std
adc
fwait
sbb
cmp
dec
xor
cld
fbld
lea
adc
fwait
sbb
add
in
fstl
adc
mov
ss
pushl
pop
sbb
rcrl
lods
sbb
add
cmp
fucomi
jbe
mov
and
addl
lods
pop
fsubl
pop
xchg
pop
xchg
frstpm(287
dec
pop
ljmp
jnp
cmp
mov
adc
dec
mov
gs
shlb
lcall
inc
xchg
int
ds
mov
lcall
pop
cmp
out
cmpl
sti
or
inc
movb
mov
out
mov
ljmp
cli
sti
or
and
fs
fcomp
orb
cli
jae
add
dec
push
push
stos
cmp
mov
pop
lret
mov
dec
clc
mov
cmp
std
mov
jg
and
mov
dec
mov
decl
xor
mov
and
jmp
jae
xchg
cmp
push
and
sbb
pop
iret
mov
ljmp
stc
mov
adc
adc
div
rcll
pop
adc
adc
cli
mov
cmc
or
incl
jecxz
movsb
repnz
lret
fidivrl
std
testl
es
or
ficomps
clc
call
bound
es
es
in
jb
push
fwait
mov
sbb
fistpll
shrb
push
arpl
cli
jge
rcll
jno
sahf
gs
and
std
push
mov
pop
xchg
jnp
push
iret
fwait
cli
addr16
xor
pushf
xchg
and
jae
fstpl
mov
out
mov
test
aad
pop
push
les
imul
xchg
xor
popf
sbb
scas
mov
pop
or
mov
sbb
cwtl
adc
cmp
ljmp
push
enter
int3
sub
test
lcall
idivb
push
xor
add
jg
xor
xchg
arpl
clc
ret
sarl
out
in
pop
and
in
fisubrs
xchg
ljmp
pop
call
mov
jle
addr16
addl
and
cmp
mov
mov
or
daa
arpl
das
xor
jp
xchg
mov
jbe
out
sub
insb
decl
dec
fs
pop
push
repnz
stos
jge
inc
lods
mov
inc
rorl
ljmp
add
mov
lods
mov
jle
push
cmc
aam
xchg
in
push
jne
imul
mov
xchg
cmp
outsb
imul
add
sahf
cmc
ficoml
call
out
movsb
jg
aam
dec
jae
ds
popw
inc
sub
decl
push
push
nop
lcall
mov
ret
outsb
lcall
jecxz
je
lcall
ljmp
in
addr16
pop
inc
adc
fstpl
lcall
cmp
xchg
jnp
mov
mov
inc
fstl
cmp
gs
mov
orl
decl
xchg
inc
inc
ljmp
xor
sbbb
pop
xchg
out
xchg
push
fdivrp
cmp
mov
push
sub
icebp
call
or
adc
aaa
cld
pop
cld
out
inc
cli
cmp
cmp
cwtl
mulb
mov
lcall
mov
xlat
in
jbe
lock
or
push
push
or
out
mov
ds
or
lcall
inc
sbb
add
or
lret
mov
aaa
mov
add
insl
pop
fisubl
inc
mov
mov
test
add
pop
hlt
mov
jne
push
stos
pop
fdivr
incl
inc
mov
push
add
xor
fmul
hlt
inc
jne
jns
sbb
outsl
cmp
sub
mov
stos
sbb
mov
cli
push
pop
fisttps
pop
sar
stos
or
pushl
mov
xchg
insl
sub
ss
push
mov
in
divl
outsb
arpl
mov
shlb
inc
inc
dec
cmpsb
fdivl
or
das
sub
push
lret
push
xchg
and
int3
push
dec
daa
lock
fcomip
inc
outsb
and
je
push
sbb
cwtl
das
mov
add
and
sub
ljmp
adc
xor
pop
lods
inc
adc
int3
into
mov
int
mov
jmp
mov
jge
jbe
mov
jecxz
pop
xor
push
inc
dec
mov
testl
dec
pop
dec
xchg
inc
test
nop
dec
pusha
imul
adc
jg
mov
movsl
imul
clc
jmp
xorb
jle
and
and
jae
xor
aad
xchg
stos
ret
sbb
xorl
jmp
pushf
movsl
addl
loop
mov
push
popa
daa
into
pop
popf
repz
decl
add
jl
lret
and
or
fistps
add
aas
divb
pop
push
ja
ret
in
pusha
js
fsts
pushl
jmp
jne
into
adc
lods
cmpsl
cltd
inc
int
dec
popa
jnp
push
shll
mov
loop
sbb
mov
cmpsl
aad
inc
jae
lds
adc
cmp
fcomip
sbb
mov
sahf
jg
mov
cmp
cmp
jo
call
cmp
and
fstps
xor
xor
pop
jae
sub
das
cmp
jne
push
xor
jns
cmp
outsb
mov
pop
cli
pop
lock
cmp
inc
mov
int
cmp
mov
out
into
ret
mov
repz
sub
xchg
fsubs
xor
mov
iret
jp
jb
cs
decl
inc
pop
or
pop
mov
inc
xor
pushf
and
in
sub
incl
sbb
fmulp
pop
push
cmpsl
inc
and
dec
jnp
cs
pop
jns
shr
mov
out
xchg
dec
sbb
dec
dec
dec
imul
dec
cmp
in
and
sub
sqrtps
xor
iret
repz
cmp
jmp
and
cmp
inc
xor
pop
sub
shl
xor
fidivrs
scas
or
test
jmp
xchg
add
notb
xor
adc
cmp
push
test
jns
in
jb
cmp
in
insl
xorb
inc
inc
add
dec
cmp
sub
jge
sarl
in
scas
dec
pusha
mov
pusha
cmp
dec
add
jge
sbb
lods
mov
incl
mov
orb
dec
inc
add
adc
jo
scas
repz
ror
jbe
cmp
ds
out
jns
clc
in
mov
clc
loopne
jne
lret
inc
push
ljmp
sub
mov
adc
sbb
push
and
inc
jecxz
fs
hlt
test
add
push
mov
outsb
mov
loope
add
lock
fsubrl
nop
pop
lcall
jge
cmc
jmp
xchg
mov
cmpsb
dec
out
push
pop
test
cmpsl
mov
xchg
or
stos
adc
dec
movsl
xchg
cli
negl
out
pop
shll
aas
jb
lcall
and
adc
je
push
pushl
in
mov
xchg
cmp
lods
xchg
in
add
lds
rorl
cmp
idiv
inc
iret
mov
push
push
push
aam
fsubs
sub
mov
and
repz
pop
xchg
cmpsl
sub
mov
dec
inc
daa
pushf
push
mov
ret
xor
lods
and
push
cmp
push
sub
push
fsubr
insl
mov
xor
sub
mov
hlt
push
cltd
mov
pop
ss
cmc
pop
ljmp
call
mov
xor
movsl
js
dec
outsl
cmp
pop
mov
in
adc
das
incl
xchg
arpl
cmpsb
in
bound
adc
dec
cld
lods
add
rolb
pop
fstps
stos
or
push
push
out
aad
inc
aad
jge
lcall
sbb
adc
xor
xor
jl
mov
add
and
pushl
sub
into
xor
sub
loop
inc
mov
std
jg
ret
pop
jns
out
pop
jbe
dec
scas
lret
xor
test
ret
fwait
or
ds
push
and
xchg
xchg
ss
adc
fistpl
cmc
aad
pop
jns
sbb
lock
push
clc
outsb
test
mov
test
negl
scas
jg
mov
jbe
lahf
lock
sub
sarb
sub
mov
scas
fstpt
bound
icebp
push
call
inc
movsb
sahf
scas
cmpsb
xchg
cs
xor
mov
xchg
mov
mov
mov
das
lcall
aam
fdivr
setle
sbb
add
js
iret
aad
jmp
decl
mov
mov
cld
outsb
lahf
cmp
xor
mov
cmp
aaa
jmp
push
xlat
jl
add
and
leave
call
fsubrs
test
xor
jmp
xor
xchg
push
idivl
xor
jb
shrl
popa
inc
hlt
dec
cld
fisttps
rclb
scas
add
lret
sbb
aaa
std
test
fsubs
lcall
xchg
sub
xor
inc
sub
loop
cli
sbb
push
fwait
cld
jo
jg
or
jb
ret
aad
xor
push
mov
mov
test
pushl
or
mov
loop
test
test
sarl
fstpt
add
add
and
inc
xchg
and
andb
inc
insb
jmp
pusha
add
fildl
outsl
lcall
add
or
pop
pop
push
std
insl
sti
decl
or
or
or
or
or
adc
adc
push
adc
adc
add
pop
sbb
adc
adc
adc
add
data16
cli
sub
outsb
or
rolb
sub
and
xchg
mov
add
sahf
add
les
dec
imul
add
xor
mov
out
sbb
cmp
add
call
loopne
adc
adc
pop
and
xor
inc
mov
dec
add
lock
bound
js
lcall
xor
dec
sbb
or
push
inc
xlat
push
add
ss
loope
push
add
roll
and
add
or
push
add
inc
test
orb
scas
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
and
lods
or
xor
adc
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
ja
test
dec
mov
jg
in
mov
add
add
lds
cld
cli
and
mov
ffreep
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
retw
clc
jg
pop
mov
stc
or
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
jmp
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
mov
orb
int3
lcall
mov
push
pop
mov
pop
pop
mov
incl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
test
jmp
aam
and
sbb
sarl
mov
and
roll
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
cmc
pushl
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
pop
sar
sbb
sub
lods
leave
mov
jp
push
out
or
addr16
push
sahf
pop
clc
cmp
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
add
incl
jb
mov
or
push
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
pop
sar
stos
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
and
jl
imul
rcr
sahf
sbb
cmpsl
sahf
pop
cli
ljmp
sbb
fadd
or
mov
nop
enter
ljmp
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
pop
cld
pushl
xchg
or
mov
stos
dec
lods
xor
jg,pn
jg
loopne
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
out
nop
lock
outsb
mov
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
pushl
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
sar
ljmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
iret
adc
pop
cld
addl
adc
and
fildl
push
enter
jecxz
scas
sub
pop
cld
lahf
cs
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
out
pop
sti
pop
jg
add
jg
mov
aad
test
fcmovnu
adc
mov
mov
iret
push
scas
adc
jbe
std
stos
icebp
pop
incb
aas
js
dec
jno
adc
push
inc
jecxz
sbb
sarl
jecxz
jo
adc
loopne
and
clc
xorl
mov
imul
dec
iret
rcr
push
in
aas
mov
fsubrl
rolb
and
aas
imul
add
push
sbb
jne
lock
aam
and
mov
adc
inc
aas
push
rcrl
iret
lock
rolb
pop
inc
jb
fistpl
adc
call
jno
ljmp
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
sbb
fistps
lds
fidivrl
jg
stos
pop
pop
call
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cmp
inc
and
mov
in
stc
mov
lahf
mov
pop
cld
outsl
int3
push
sbb
pop
inc
sti
incl
jle
xchg
popa
out
out
outsl
xchg
inc
add
loop
popa
push
test
fcomip
pushl
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
std
rclb
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
in
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
lcall
lds
push
pop
adc
imul
or
ljmp
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
jnp
movsb
fidivrs
clc
insb
test
ss
aas
repz
sbb
lock
pop
clc
lods
add
out
sbb
aaa
clc
push
std
mov
mov
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
mov
loopne
test
out
rolb
pop
or
or
inc
in
cmpsb
rorl
aas
lods
leave
inc
lods
movsb
or
cmp
add
mov
jl
mov
add
call
cmpsl
lret
pop
fwait
mov
cmp
jmp
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
arpl
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
sbb
inc
sti
dec
add
xlat
rcrl
jbe
xchg
fldenv
iret
fdivrl
xchg
lcall
inc
push
rolb
mov
pop
cmpsl
xchg
addb
into
sarl
push
icebp
fildll
out
jg
jno
ret
cmp
arpl
out
lcall
sbb
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
jmp
outsl
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
popf
pop
sub
cmc
iret
add
fsts
dec
mov
add
sti
push
sti
pop
cltd
mov
push
push
push
mov
in
push
nop
mov
test
or
inc
pusha
and
add
and
jae
inc
leave
sub
adc
mulb
lcall
iret
sahf
jae
and
incl
dec
incl
and
adc
fidivl
mov
jbe
sbb
jg
add
pop
xchg
sbb
test
inc
fadds
add
dec
orb
and
lahf
push
test
sub
adc
push
sub
popa
jle
jnp
inc
add
nop
cmp
mov
scas
xchg
cmpsl
adc
in
bound
jnp
xchg
movsl
push
daa
add
flds
mov
add
es
inc
negl
inc
scas
push
push
push
and
stos
push
and
push
test
and
mov
imul
push
inc
pop
pop
add
repz
incl
mov
pop
sbb
add
mov
push
add
push
ds
les
push
adc
out
fs
mov
insb
or
lret
imul
imul
jnp
fbstp
movsb
sub
lret
mov
jbe
aaa
add
jae
mov
lock
pop
stos
pop
stos
mov
and
jb
ss
add
jo
mov
push
shll
sbb
loope
shrb
shll
fidivrl
iret
outsb
or
insl
fcmovnu
mov
push
ja
ret
je
fidivrs
out
jge
neg
add
push
xorb
ljmp
insl
in
in
movsb
push
add
mov
sbbl
push
mov
jns
arpl
push
push
push
add
jne
out
push
aam
ret
gs
inc
push
mov
push
pop
cmp
outsb
jbe
push
mov
pop
add
inc
xchg
cs
lcall
jno
lret
stos
fnsave
sti
aas
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
dec
sti
shlb
or
jns
push
jp
mov
lock
inc
push
fidivrl
sarl
ja
push
lods
pop
push
fldl
ret
jmp
mov
ljmp
xchg
in
xchg
sub
mov
xor
xchg
push
setbe
mov
dec
fisttpl
mov
scas
insl
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
fbstp
mov
mov
imul
pop
add
fadd
hlt
out
repz
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
ss
xchg
xchg
out
out
add
mov
or
outsl
aas
fldt
or
or
test
test
lods
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
int3
pop
pop
adc
lods
add
pop
add
add
pop
mov
insb
pop
mov
add
scas
insl
adc
pop
lods
pop
pop
adc
and
adc
sbb
repnz
sbb
scas
scas
scas
scas
sbb
sbb
mov
and
mov
movsb
imul
mov
add
mov
shlb
and
mov
lock
and
mov
mov
pop
and
movsb
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
insl
push
mov
cmp
pop
aaa
cmpsb
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
addb
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
mov
test
xchg
xchg
sub
movsb
repnz
outsl
add
jle
je
push
bound
js
clc
jnp
adc
xor
jne
je
lods
and
jg
insb
mov
sub
andb
add
pusha
outsb
sbb
sub
scas
aas
outsl
sub
movsb
dec
mov
pop
push
dec
add
push
mov
cmpsb
pop
sti
divb
sub
js
xor
xor
ja
push
ja
jb
push
es
xor
mov
pop
insl
mov
jbe
dec
sbb
jbe
out
outsb
and
mov
xchg
jo
adc
negb
inc
mov
cmp
mov
inc
aaa
or
fbstp
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
mov
xor
add
xchg
jno
lret
push
bound
mov
mov
flds
lahf
inc
inc
push
sahf
mov
insb
insl
fcomi
pushl
add
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
sub
in
push
dec
push
movsb
jae
add
jb
shll
jg
mov
push
rorb
add
lcall
fistpll
into
dec
mov
add
ja
sahf
jbe
sar
mov
sahf
push
add
add
ds
push
pop
movsb
outsl
mov
data16
jp
add
js
mov
xlat
popf
ja
data16
shrl
insb
pop
outsb
push
push
fidivrs
outsl
ror
push
ds
jno
add
mov
loopne
jge
push
jg
fiadds
call
sub
lock
add
icebp
fldt
out
push
es
bound
out
arpl
loopne
iret
sahf
mov
divb
add
jb
out
in
push
jle
mov
orb
push
fnstcw
aad
push
divb
fildl
lahf
cmpsb
sarb
addb
push
sbb
sbbl
test
test
sbb
popf
int
inc
test
in
mov
push
xchg
nop
and
mov
xchg
in
xchg
lock
sub
sub
cmpsb
jge
add
scas
outsb
out
xchg
das
push
xchg
pop
fldt
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
push
cmpsb
pop
cmp
sub
sbbb
push
cmpsb
scas
jo
or
inc
loope
movsb
sahf
ficompl
shrb
into
shll
lgs
int
mov
stc
insb
fiaddl
push
rcr
rcl
mov
push
aad
jle
data16
add
shr
and
push
dec
dec
and
out
je
dec
push
pop
add
xchg
test
enter
push
or
or
or
es
repnz
pop
push
adc
push
add
enter
fcoml
ds
add
ret
mov
xor
ds
inc
mov
mov
mov
std
push
testb
mov
add
and
fsubrs
ds
mov
pop
sar
push
aas
and
xor
xor
or
pop
and
insb
aas
aas
cmp
sub
adc
js
pop
adc
mov
sbb
inc
jbe
popf
mov
sub
inc
or
fidivrl
cmp
dec
mov
scas
ds
jle
aas
jbe
jge
adc
ds
xor
dec
inc
test
mov
scas
add
sub
mov
mov
addr16
mov
mov
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
in
ljmp
mov
sahf
ds
xor
sub
sub
sub
sub
popf
dec
add
add
dec
and
sti
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
xchg
mov
jmp
test
insl
popf
mov
jge
jns
jns
jle
addl
bnd
outsl
outsb
pushf
mov
stos
sti
pop
daa
imul
rolb
pop
in
fwait
and
mov
incl
push
addb
int
jg
push
push
add
cmc
repz
dec
xor
aas
add
xor
mov
xchg
pop
cmp
test
add
mov
add
mov
push
add
ljmp
bound
fnstsw
repnz
inc
add
and
pushf
add
mov
push
in
jge
std
mov
or
arpl
mov
das
fsubrs
push
push
dec
lret
js
into
xchg
add
fistpll
add
mov
mov
test
scas
xchg
js
in
and
out
sub
nop
sub
sub
mov
fnstcw
push
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
lock
dec
dec
push
adc
add
add
rcll
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
aam
stos
lods
mov
addb
mov
pop
mov
flds
mov
mov
add
add
mov
outsl
add
nop
add
into
inc
adc
pop
sbb
outsl
mov
adc
cmpsl
jbe
pusha
pop
or
pop
push
roll
inc
scas
push
clc
sbb
sbb
incl
mov
xor
outsb
sysret
add
es
es
xor
testb
pop
in
scas
and
jns
stc
hlt
adc
push
or
push
push
sub
or
jg
ja
adcb
pop
aaa
outsl
and
pop
sahf
or
pop
lahf
adc
xor
mov
jg
sbb
mov
cli
fisttps
or
jle
mov
addr16
push
inc
pusha
and
jg
adc
sti
jg
mov
sti
mov
rolb
jle
inc
ret
insb
or
adc
stos
addb
mov
xchg
mov
pusha
and
idivb
pop
lods
and
cld
jg
adc
fs
jle
cmpsb
std
sub
orb
std
jg
mov
into
jg
adc
inc
out
jg
inc
mov
jg
mov
pusha
mov
mov
cmpb
adc
lcall
adcl
or
xor
subb
add
nop
sub
sub
xchg
or
sbb
sub
jg,pt
add
xchg
push
jbe
dec
insb
mov
pop
add
jmp
adc
cltd
lea
xchg
insl
push
add
mov
in
jle
lret
imul
add
add
add
and
push
xor
dec
jg
xorl
or
jg
add
shrb
push
push
jg
add
push
and
sub
and
inc
sub
jg
subb
pop
lret
and
add
jle
fistl
pop
fdivrp
cmpsb
ljmp
out
mov
xor
pop
pop
pop
add
mov
insl
arpl
aas
aaa
pop
pop
mov
xchg
addl
nop
imul
push
inc
test
or
test
jle
sbb
mov
test
jle
push
dec
xchg
into
imul
push
mov
outsb
in
push
comiss
daa
push
arpl
mov
addr16
pop
push
mov
arpl
out
cmpsl
test
mov
dec
mov
lcall
sub
jmp
add
cmpsb
push
jle
jle
sbb
out
mov
idiv
fnstenv
add
fs
repz
jne
pop
push
jbe
sub
ss
push
jnp
push
jp
mov
inc
decb
js
dec
jbe
pop
scas
jmp
in
add
mov
mov
inc
ja
push
push
outsb
mov
ljmp
jmp
iret
dec
call
or
cmp
ss
pushl
dec
and
call
mov
mov
jns
fiadds
and
lahf
mov
push
mov
outsl
mov
sahf
inc
out
test
mov
mov
xchg
int
scas
cs
aas
popf
inc
push
pushf
cmp
or
ss
push
xchg
xor
sub
insl
fucomi
nop
sub
nop
daa
ss
cs
jbe
cmpsl
test
outsb
aam
xor
decl
incl
jg
inc
int
aas
pop
fnsave
xor
decl
and
sahf
xor
fs
pop
xchg
add
cmpsl
es
pop
ja
dec
mov
pushw
movb
push
hlt
dec
pop
ja
aam
cld
xor
push
ja
add
pop
push
in
push
les
adc
mov
outsl
push
subb
add
add
pop
add
adc
push
adc
pop
push
orl
lea
aas
outsl
sub
inc
and
cmp
movsb
stc
push
lock
cmp
cmp
jg
jb
icebp
imul
push
inc
out
add
mov
adc
pop
aam
decl
out
mov
mov
mov
sub
out
in
inc
rol
push
push
sbb
xor
jb
mov
adc
xchg
cmp
jmp
sbb
add
mov
mov
add
pop
out
fwait
mov
sbb
add
inc
xchg
daa
cld
pop
insl
pop
les
pop
cld
fsubl
push
add
ds
std
out
mov
inc
xchg
lss
lcall
or
or
mov
cmovb
insb
push
ds
adc
push
incl
incl
loope
das
jmp
sub
incl
adc
sub
and
insb
lcall
adc
pushl
lcall
sub
inc
push
inc
scas
decl
fwait
adc
or
mov
or
jmp
clts
add
inc
test
fidivl
inc
outsb
iret
jle
adc
push
insl
fwait
sbb
out
sysexit
adc
adc
mov
pop
dec
incl
or
sysret
inc
sub
push
iret
xchg
sbb
jae
incl
decl
inc
sbb
fdivrp
addb
mov
aaa
inc
pop
sti
push
std
decl
add
call
incl
pop
sub
pop
xor
mov
lgdtl
jmp
and
jg
rorb
cwtl
cli
idiv
loop
addb
inc
arpl
sub
call
and
xchg
decl
cld
or
andl
inc
pop
fcmovbe
mov
pop
fwait
pop
pop
inc
jne
pop
aaa
mov
or
push
shll
test
roll
dec
mov
ret
incl
jmp
frstor
ljmp
lahf
inc
shrl
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
repz
int
stos
push
popf
inc
cmpsb
dec
dec
inc
mov
push
dec
mov
dec
popf
add
and
repz
shrb
xchg
outsb
shll
push
push
jb
xchg
das
xor
das
push
iret
insl
mov
daa
outsl
pop
imul
xchg
stos
and
push
push
decl
test
lcall
decl
pop
add
push
xchg
aam
repnz
jmp
popfw
cmp
aas
dec
and
mov
cwtl
xor
fstps
aaa
push
lcall
ss
xchg
push
xchg
es
sahf
dec
jb
xchg
xchg
dec
push
xchg
hlt
ja
pushl
dec
scas
incl
mov
push
mov
push
mov
push
add
or
fcmovbe
js
std
faddl
jge
cmp
mov
push
jnp
jp
or
jl
or
xchg
jbe
jns
jl
push
jge
jg
data16
es
jbe
adc
fidivrl
push
dec
push
insl
div
outsl
dec
repnz
repnz
jae
pop
fidivrl
push
mov
jg
push
loope
out
add
in
add
int3
outsb
nop
testl
mov
stc
sbbb
xor
add
aad
and
cmpl
fisubrs
addb
jnp
lahf
dec
es
addl
orb
decl
pop
jg
and
xchg
out
push
sub
iret
mov
jo
mov
cli
pushl
clc
popa
sub
jns
idiv
push
mov
inc
sub
jg
mov
icebp
dec
pop
cld
jle
mov
daa
jno
sub
mov
or
jg
mov
icebp
nop
cld
daa
jg
mov
mov
dec
loope
xchg
mov
jp
es
xchg
jg
dec
shll
cmpb
jmp
mov
and
jg
xchg
loopne
orb
jg
xchg
dec
and
test
icebp
idiv
push
insb
movsb
sub
pop
hlt
sub
push
adc
jle
mov
fidivrl
test
pop
clc
jbe
mov
jmp
pop
push
pop
movsb
push
imul
decl
xchg
cmp
and
mov
push
int
push
jns
int
mov
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
sub
sar
in
lret
jg
out
mov
or
add
cmp
push
add
ja
cmp
or
btl
inc
and
mov
sub
loop
pop
mov
pop
movb
add
sbb
and
sbb
inc
fldt
push
inc
lahf
mov
add
lret
adc
addb
sbb
add
add
xor
into
pop
push
sbb
out
into
add
push
sbb
push
or
in
frstor
or
inc
or
or
sub
or
nop
inc
add
add
nop
test
mov
ds
add
pop
cltd
push
add
pop
adc
add
pop
movsl
icebp
inc
push
gs
jo
dec
mov
fiaddl
inc
adc
dec
add
cbtw
std
and
add
in
xor
sub
jae
push
les
test
xor
pop
divl
mov
es
rolb
insl
lock
lock
inc
jmp
lahf
jo
das
mov
xor
push
popa
imul
and
or
insl
xor
stos
lret
sub
mov
mov
dec
bound
jns
aad
push
or
dec
loop
add
test
xchg
sbb
jmp
xchg
mov
push
push
lods
add
mov
test
dec
loop
movsl
shll
fistl
popf
in
scas
insl
scas
rcll
popa
bound
inc
xchg
xchg
dec
fcomp
jb
cmp
add
add
or
adcb
inc
bound
ffreep
or
add
mov
clc
pop
pop
gs
mov
andb
add
shll
cmpsl
aas
jno
les
fimuls
lcall
lahf
push
inc
rolb
cmc
add
xchg
push
scas
jo
xor
dec
push
outsl
loop
imul
fs
push
pop
xchg
es
sub
or
fwait
ljmp
pop
pop
mov
dec
insb
out
inc
imul
sbbl
inc
cwtl
push
add
js
inc
xor
insb
jne
addr16
dec
add
cwtl
push
add
adc
or
or
popa
rolb
or
add
sbb
sub
adc
push
jb
fistpl
xchg
sub
call
sub
add
rorb
sti
popf
mov
mov
xchg
push
mov
popl
xchg
aad
jmp
dec
aas
cmp
cwtl
mov
add
cmpsb
or
add
negb
cmp
jo
je
push
insl
ret
cwtl
sub
fsts
mov
roll
mov
xor
or
sub
xchg
add
lods
or
adc
aam
lcall
adc
jecxz
adc
ret
add
pop
pop
adcl
push
test
mov
es
arpl
pusha
xchg
cwtl
or
add
jmp
pop
add
jne
adc
jo
jecxz
je
bound
iret
fildl
inc
xor
ret
sbb
cltd
xchg
xchg
mov
adc
push
mov
and
pop
test
iret
add
addr16
icebp
and
and
add
adcb
add
mov
sbb
loopne
xchg
or
push
test
or
dec
fbstp
es
push
jae
xor
and
push
mov
add
scas
mov
sub
nop
mov
adc
inc
xchg
mov
adc
ja
sbb
sub
sbb
pop
inc
and
inc
jg
stos
inc
pop
dec
pop
and
pop
add
pop
lahf
mov
movl
shr
popa
sub
outsl
jae
xchg
add
loop
outsl
mov
ret
jae
mov
add
push
add
leave
fldenv
mov
pop
jo
jl
arpl
mov
das
lods
das
adc
popf
inc
popa
loope
aas
sub
xchg
pop
sub
mov
imul
push
inc
sbb
adc
fwait
xor
sti
sbbl
sub
push
inc
pop
mov
sub
push
pop
imul
xchg
ss
mov
insb
jne
arpl
jae
mov
add
xchg
pusha
xchg
and
adcl
aad
sub
and
sub
nop
and
lods
pop
int
sbb
jne
fs
or
insb
push
popa
cmove
test
push
and
push
jb
test
outsl
dec
inc
inc
xchg
or
cmp
add
inc
imul
idivl
insb
push
sbb
add
insb
sahf
ret
stos
push
test
das
push
or
fisubl
sub
negl
fwait
push
mov
adc
lock
loop
dec
jno
sar
inc
add
xor
out
sub
cltd
push
jg
jns
lock
push
jo
and
cmpsb
into
push
test
les
and
dec
std
addr16
sbb
xor
pop
shrb
and
add
jnp
adc
outsb
add
inc
sbb
not
sub
inc
pop
and
or
lea
je
insl
dec
push
dec
std
lea
mov
pusha
and
add
xor
sub
push
push
js
add
pop
imul
lcall
or
movsb
dec
shll
or
or
adc
rcll
mov
lods
pop
add
movsb
pop
es
add
inc
add
movsb
outsl
xchg
add
insl
add
mov
sbb
rclb
popa
cmp
jo
sbb
test
popa
sub
test
mov
stos
daa
inc
lcall
push
push
cmp
dec
imul
jo
pop
pop
add
jmp
sbb
nop
or
addl
inc
sbb
adc
mov
sub
insl
movl
inc
sbb
add
sub
push
jge
jl
mov
push
mov
adc
shll
andl
lods
dec
mov
add
in
sbb
push
mov
out
sahf
imul
pushf
xor
dec
pusha
es
cmp
imul
dec
sbb
ljmp
push
push
outsl
inc
inc
xor
rol
outsb
mov
lock
sub
imul
push
hlt
mov
pusha
inc
mov
push
lock
fsubl
xlat
adc
or
mov
fdivs
dec
adc
movsb
mov
push
dec
mov
xor
mov
movsb
enter
out
jecxz
xchg
sbb
jno
andl
inc
add
aaa
mov
outsb
jbe
stc
jno
bound
adc
shll
mov
popf
and
mov
outsb
xchg
dec
insl
dec
xorb
push
test
inc
sub
push
and
or
dec
cld
addr16
sbb
push
arpl
or
enter
push
pop
xor
adc
sub
jmp
cmp
inc
adc
sbb
mov
nop
fs
mov
inc
fdivrs
sbb
dec
and
inc
cmp
inc
cmp
mov
fs
out
xchg
jne
pop
push
cmp
sti
xchg
push
fwait
xchg
scas
ret
insl
inc
sub
lods
xchg
sbb
mov
pop
lods
mov
call
lahf
mov
jecxz
fisubrs
mov
and
push
inc
inc
cmp
out
add
sub
lods
pop
push
lret
push
or
xor
cmp
jbe
pop
dec
mov
out
inc
sub
xor
xchg
imul
shll
add
aaa
das
movsb
pop
inc
sub
sub
add
rcl
pop
jp
push
cmp
adc
movsl
dec
sub
and
test
int
add
adc
cmpsb
adc
pop
adc
mov
sub
negl
add
nop
mov
add
test
add
sahf
jo
cmp
imul
dec
dec
sbb
rorb
pop
ds
clc
add
aaa
rcll
adc
add
mov
push
add
enter
cmp
test
pushfw
push
xlat
shrb
and
clc
dec
xchg
loope
add
jp
push
ficompl
dec
inc
add
ss
xchg
jg
movsb
or
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
