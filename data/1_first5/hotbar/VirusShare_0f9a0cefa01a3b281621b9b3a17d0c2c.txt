divb
in
mov
mov
rorb
add
add
fmulp
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
roll
das
and
fcmovnb
les
ljmp
insl
pushl
cltd
push
mov
xor
pop
mov
mov
mov
call
data16
mov
pushl
test
mov
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
dec
pusha
outsl
in
add
push
adc
xchg
testl
sub
dec
shlb
in
or
mov
mov
int
jbe
or
or
pop
cmpsl
push
jl
in
cmpsb
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
stos
movsl
push
sti
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
jo,pt
sbb
push
xchg
mov
inc
cmp
add
cmpb
mov
movsl
mov
xlat
pop
ja
ja
add
and
add
cmp
add
sbb
dec
cmp
je
out
pop
ja
xor
adcl
cmc
jne
imul
jmp
push
sub
xlat
add
sub
insl
sbb
pushl
add
push
push
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmpl
adcl
xorl
adc
jg
mov
adc
addr16
dec
or
ret
shrl
out
stos
loop
push
push
lock
pop
outsl
jmp
das
pop
pop
adcl
incl
push
mov
sar
xor
cmp
ja
adc
fisubrs
lock
sub
add
push
movsb
inc
push
jmp
pop
xchg
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmpl
sub
push
filds
ret
add
jge
in
mov
testb
add
pop
cltd
sub
shrl
fwait
in
enter
mov
mov
push
loope
cwtl
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
rorl
mov
mov
or
adc
lea
adc
fildl
mov
pop
hlt
into
mov
adc
cmpsl
out
and
insl
stc
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
insb
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
insl
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
decl
mov
int
jns
mov
pop
idivl
add
mov
pop
sub
gs
cli
andl
ret
and
add
es
adcb
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
lret
clc
pop
pushf
cmpl
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
ljmp
or
mov
ret
push
push
rcrb
jecxz
clc
mov
jmp
xchg
jmp
inc
or
adc
imul
outsb
insl
out
cmp
jo
inc
sub
shrb
sub
aad
aaa
stos
shl
mov
mov
in
pop
or
cmp
fcos
mov
push
mov
lea
cmp
jne
push
push
adc
xor
push
test
pop
mov
add
pusha
pop
pop
ds
push
rclb
fcmovnbe
mov
daa
in
rcr
jne
cmp
stos
xchg
and
add
sub
xor
frstor
insb
cwtl
dec
in
lret
and
xchg
add
out
add
sbb
fstpt
mov
add
repz
testb
cmp
mov
mov
and
push
push
data16
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
loope
loop
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
or
out
lea
dec
push
xor
mov
xchg
pop
push
jmp
add
shlb
fldcw
add
add
xlat
pop
rclb
mov
push
or
dec
inc
push
dec
ret
aas
cmp
or
lea
push
add
push
mov
push
push
push
iret
mov
fisttpl
pop
dec
dec
push
mov
mov
das
sbb
push
scas
dec
fisubrl
pop
inc
cmp
push
jmp
pop
lcall
inc
cmp
je
mov
sub
outsl
sbb
jne
lea
pop
sbb
arpl
cwtl
sub
mov
adc
xchg
push
mov
xchg
push
jb
mov
out
sarb
repnz
popa
or
and
test
mov
lock
jp
or
movsl
out
icebp
lcall
mov
dec
or
std
cmp
adc
jge
xor
sahf
outsl
mov
xor
sub
jg
inc
xchg
or
lea
lcall
mov
add
add
or
or
mov
push
adc
or
push
pusha
mov
push
mov
mov
push
mov
or
xchg
fsubr
push
or
and
sbb
int3
ret
mov
push
xlat
adc
sbb
push
fstps
cltd
sbb
out
psllw
stc
decb
adc
xor
aad
add
mov
inc
mov
adc
sub
adc
mov
inc
pop
ret
shrl
pop
inc
xlat
xchg
add
mov
or
je
dec
je
push
adc
push
pop
jmp
push
adc
inc
shl
and
mov
xchg
or
xchg
popf
js
pop
adc
and
jo
out
pop
mov
inc
fmul
mov
push
mov
push
sbb
mov
xor
add
and
mov
aam
xchg
jmp
dec
and
pushaw
pushf
pop
cmc
andl
mov
call
xchg
aaa
xor
mov
or
out
test
fadds
test
js
sbb
inc
push
fisttps
insl
xchg
add
mov
lret
ljmp
jecxz
das
cmp
js
sbb
sbb
ficoms
sub
js
and
adc
sbb
or
popa
add
mov
call
fldl
pushl
out
neg
sbb
inc
inc
pop
xlat
andb
enter
add
test
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
fildll
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
adc
int3
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jl
jne
dec
jl
mov
push
pop
inc
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
sub
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
mov
andl
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
cs
jno
and
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
leave
xlat
xchg
fmuls
subl
popa
xor
xchg
xor
data16
push
fdivp
jne
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
loope
jp
pop
loope
add
adc
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
pop
push
scas
and
sbbb
xor
loop
mov
les
repnz
dec
inc
pop
pop
jmp
sub
inc
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
test
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
xchg
in
cmp
pop
push
movb
sbb
jo
xor
or
push
mov
jmp
ljmp
sbb
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
and
pop
push
add
adc
push
cltd
xchg
lret
or
in
add
mov
in
cmpsb
in
mov
mov
jge
pop
fiadds
mov
inc
outsl
mov
in
das
sarb
jae
sub
xor
sub
ds
je
lcall
mov
fcoml
dec
loopne
and
out
jge
out
movsl
jmp
jo
cmp
imul
adc
imul
clc
pop
adc
push
mov
add
jo
adc
jb
movsb
adc
movsb
iret
jno
and
pop
rclb
ss
enter
push
pushf
pushf
xchg
out
lret
clc
mov
mov
in
sbb
jb
and
sbb
int3
sbb
int3
xchg
arpl
and
arpl
ret
sbb
enter
xchg
sub
sbb
ror
mov
sub
ret
sbb
nop
idivb
les
sbb
sbb
negb
mov
movsb
call
pop
pop
pusha
mov
and
fisttpl
pop
mov
xor
fcompl
add
lods
cwtl
arpl
mov
out
pusha
inc
inc
adc
pusha
sbb
ror
enter
sbb
aaa
xchg
add
test
or
dec
jge
or
push
je
sbb
or
mov
and
push
sbb
adc
push
inc
adc
sub
add
adc
loopne
add
test
or
jle
sbb
leave
inc
lahf
add
in
andb
call
and
and
outsb
and
push
movsl
push
adc
cmp
aaa
adc
dec
rclb
out
sub
orl
pop
push
mov
test
xchg
jae
lea
adc
lods
fs
sarl
sbb
xor
sbbl
add
test
xchg
mov
dec
std
and
cmpsb
push
adc
jo
sbb
xchg
and
sbb
adc
sbb
cwtl
sub
push
cmp
dec
subl
cld
add
pop
push
jmp
push
fstpl
sub
mov
lods
pop
rcll
js
or
cmp
mov
loop
xchg
xor
add
enter
movsl
inc
mov
or
sbb
mov
outsb
into
push
sbb
fdivrs
lea
cmp
pushf
or
shll
pmullw
lret
adcl
push
jp
sarl
adc
sbb
adc
inc
adc
leave
or
cwtl
lds
rcl
imul
jne
fidivl
leave
mov
into
adc
mov
xor
inc
adc
pusha
pop
mov
jnp
add
mov
dec
push
dec
mov
pop
add
lret
and
enter
push
inc
xor
sbb
int
jmp
test
mov
neg
pop
inc
jne
push
cmovl
and
bswap
mov
leave
sbb
sbbb
sbb
stos
cmp
cltd
pop
clc
popf
xor
pushf
sbb
cmpb
add
push
shlb
sahf
les
loopne
pushf
pop
nopl
xchg
or
in
loopne
mov
maskmovq
imull
sbb
and
clc
ljmp
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
and
xlat
and
xchg
inc
xchg
and
push
call
daa
add
ret
or
nop
flds
pushf
mov
aas
sahf
sbb
int3
cmp
and
fstpt
sbb
addb
push
in
rclb
push
pop
ljmp
aad
mov
shlb
movsl
pop
or
mov
cmp
cld
dec
test
cmp
adc
pop
lret
add
ljmp
jmp
add
sahf
lock
shrb
mov
mov
sbb
adc
and
adc
and
test
pushf
jl
adc
and
and
xlat
and
add
xorl
push
out
jnp
pop
mov
cmpsl
and
or
sub
negb
aas
incb
inc
scas
xorb
push
push
push
loope
and
test
rol
jns
test
fsubrp
adc
fcomps
aam
stc
scas
sub
pop
repnz
push
sub
push
ljmp
sub
jne
add
push
sub
add
jno
sub
add
inc
lret
ret
inc
stos
push
cmp
call
mov
add
sub
add
pusha
scas
roll
repz
stos
xor
mov
push
in
and
adc
push
fs
lret
mov
imul
dec
pusha
cmp
loopne
repnz
mov
inc
and
movsb
sbb
adc
jl
arpl
inc
ror
push
pusha
xchg
cmp
outsl
xchg
movsl
nop
or
ficoms
je
xor
add
rclb
in
adc
or
mov
das
push
inc
dec
push
push
mov
sti
lahf
adc
mov
pop
test
add
mov
fadds
inc
loopne
sahf
xor
cmp
mov
aaa
pop
bnd
enter
sub
sub
cvttps2pi
push
mov
jo
push
enter
enter
xchg
idivl
das
push
lods
pop
pop
xchg
add
xchg
or
insb
xor
xor
xchg
mov
adc
push
push
cmp
xchg
adc
std
fsubs
imul
mov
cmp
inc
mov
nop
cmp
sub
jae
mulb
add
xchg
and
xor
stc
pop
insb
or
sbb
adc
inc
loopne
sbb
ret
test
repnz
in
cmp
or
pop
cmp
cmp
jne
and
movsb
adc
repnz
and
pusha
pop
xor
xor
aaa
arpl
mov
hlt
add
pop
jns
movsb
jo
dec
pop
mov
popa
adc
add
ds
mov
mov
mov
xchg
add
sahf
xchg
roll
xlat
les
jmp
test
xchg
or
mov
mov
aad
pop
mov
loop
inc
sarl
stc
dec
in
mov
adc
mov
out
lret
adc
mov
pop
xor
ficomps
cmpl
loope
add
push
push
and
scas
xor
mov
or
mov
inc
mov
push
pop
mov
je
adc
sub
sub
ds
jne
push
sub
call
adc
das
mov
jo
lret
jne
inc
in
aaa
cld
and
dec
sub
jmp
cmp
pop
sbb
xor
and
fldenv
add
jge
jmp
mov
inc
lock
lock
mov
rcrb
push
loopne
or
ret
rorl
cwtl
adcb
push
xchg
or
inc
repz
out
jge
orb
xchg
inc
loopne
enter
scas
xchg
add
roll
cmp
mov
test
or
sub
jge
cmp
or
call
loope
add
and
daa
sbb
pusha
nop
andb
mov
mov
and
loopne
sbb
loope
jbe
dec
movsl
push
mov
out
or
sub
mov
add
jecxz
add
icebp
jg
fldt
adc
pop
out
jne
or
je
sub
das
add
ret
adc
inc
jg
and
das
mov
cli
xor
and
das
enter
faddl
sbb
sbb
pop
pop
ret
cmpsl
test
mov
lods
fwait
push
or
out
jne
popf
jp
jnp
add
sbbb
loop
test
jbe
addb
not
mov
mov
lahf
je
cmpsl
jg
lea
sarb
inc
in
inc
jnp
xchg
sbb
fsub
push
out
inc
out
add
sarl
je
push
add
insl
or
or
xlat
div
lds
mov
mov
mov
xor
fnsave
pop
in
inc
push
xor
push
stos
sub
insl
shlb
add
or
enter
or
imul
rorb
shlb
cld
or
arpl
or
ds
in
hlt
push
and
movsb
movzwl
adc
lock
pop
call
ss
jmp
adc
cmpw
je
inc
push
jnp
fnsave
jmp
subb
xchg
lock
int3
cld
mov
xlat
jno
push
test
push
jo
inc
in
das
fs
loopne
in
inc
inc
inc
and
dec
insb
insl
int3
aad
scas
xorl
lock
cmp
lcall
push
mov
xor
inc
mov
sarl
or
scas
sub
and
jl
jae
ret
clc
fs
jle
enter
sbb
cmpsb
sbb
push
add
cld
dec
jecxz
push
mov
xchg
ds
mov
pop
mov
in
paddusb
cmp
ja
mov
mov
push
sbb
sarb
add
adc
sub
ficoml
sub
aaa
jo
mov
stos
insl
sbb
add
xor
jne
push
and
pop
lea
ds
inc
pusha
lock
rclb
pop
add
out
cs
loopne
jne
aaa
or
push
into
add
mov
in
inc
xchg
in
pop
cmpsb
cmpsl
pop
stos
xor
cltd
mov
xor
or
test
or
jno
mov
fisttpl
add
add
popa
mov
test
xorl
dec
lret
ds
fiadds
add
or
inc
cmp
in
std
popa
xor
ret
and
xchg
add
mov
cmp
loop
mov
nop
es
dec
or
movsb
call
cmpl
gs
push
dec
cmp
add
dec
js
xor
cld
loopne
and
fwait
movsb
faddl
add
rorl
push
dec
add
js
loope
jp
fcmovnbe
push
push
test
loop
or
arpl
push
inc
jle
sub
jle
pop
pop
adc
cli
in
imul
mov
cmp
rorb
mov
and
stc
adc
mov
adc
scas
in
mov
xor
in
sbb
imul
sarl
testl
and
pop
sahf
pop
cmp
push
add
ret
jae
call
push
adc
push
mov
rcll
ja
fiaddl
push
fs
adc
test
add
out
decb
rcll
inc
push
mov
or
pop
or
add
mov
xor
subb
xchg
ret
mov
cmp
mull
add
and
add
cmovns
inc
or
loopne
push
mov
sub
inc
daa
push
lock
and
lock
ffreep
push
sub
mov
mov
dec
mov
xor
enter
mov
pop
cmp
adc
aam
fcoms
loopne
pop
pop
fcompl
insl
shlb
xor
cmp
aaa
inc
mov
pushl
call
mov
push
ret
shr
movzbl
push
adc
mov
aaa
mov
ret
push
ret
dec
sti
imul
mov
stos
pop
jae
leave
mov
cmpsl
jle
movb
cmp
arpl
xchg
mov
add
repnz
sbb
icebp
push
gs
add
mov
out
jb
xor
loopne
pop
or
add
push
mov
or
ss
xor
or
jmp
scas
sti
jle
push
dec
enter
add
push
push
mov
cmp
clc
data16
js
jg
mov
mov
jmp
jecxz
and
push
cmp
mov
cs
adc
mov
aas
mov
outsb
jecxz
or
mov
cmpsb
adc
sbb
ds
lea
push
sub
mov
subl
sbb
outsl
sarl
and
push
mov
push
pop
jmp
mov
push
cmp
xchg
stos
test
insb
test
cmp
je
int
jnp
xor
jmp
shrb
cld
jne
movsb
rclb
rcr
cmp
adc
mov
push
sbb
lock
add
sbb
inc
hlt
les
cmp
jae
loopne
or
xor
ja
dec
cmp
je
call
push
mov
xorb
push
sub
fcoms
add
jnp
pop
hlt
add
jl
in
cmp
test
add
push
push
xor
aad
js
mov
roll
jmp
sar
into
add
popa
nop
add
mov
sub
hlt
mov
adc
cli
lea
ljmp
lock
or
iret
mov
scas
incb
xchg
add
mov
leave
pop
in
mov
mov
shll
mov
adc
pusha
cmpsl
mov
dec
lahf
inc
test
jb
outsb
sahf
inc
ret
bound
dec
inc
xchg
je
test
js
sahf
xor
inc
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
movb
sub
sbb
jge
xchg
add
inc
jno
sbb
cmp
push
in
sbb
dec
sbb
fmuls
mov
or
out
jmp
jecxz
fdivp
add
push
jl
cld
cmp
jl
repz
push
in
mov
push
jmp
das
loop
inc
xor
test
pop
clc
inc
or
xor
fwait
mov
cmp
mov
fistl
xchg
bound
push
scas
sub
jge
jnp
rorb
adc
push
pop
mov
push
fisubrl
aaa
mov
ret
rcrl
lcall
aam
cmp
aaa
mov
outsl
cmp
mov
pusha
cmp
xor
dec
jne
fidivrl
mov
pop
pop
mov
pop
cmp
cmp
push
jecxz
or
add
add
or
call
xor
jae
mov
test
add
mov
dec
sbb
testb
fildll
ret
je
push
and
sbbl
ljmp
je
dec
xchg
xlat
lret
jae
push
inc
fisubrl
jb
ret
out
mov
mov
xchg
sub
mov
and
icebp
scas
mov
or
fs
jne
or
je
jbe
movb
xor
nop
or
push
push
and
sbb
mov
icebp
addb
or
add
add
test
and
cmpsb
aad
push
out
shlb
adc
fsts
push
ljmp
fmulp
or
mov
or
mov
jbe
pmullw
xchg
test
mov
or
imul
pop
cmpsl
ljmp
sbb
ds
pop
jo
jg
jo
cmovae
push
loop
enter
stos
inc
or
sub
add
pop
loop
push
push
adc
orb
pushl
loopne
or
jmp
jb
dec
jo
add
xchg
jmp
jno
or
adc
dec
lock
mov
xor
loopne
sub
adc
pop
loope
jo
xlat
or
xchg
pop
dec
loope
subl
je
sbb
cmp
add
xor
incl
push
jmp
mov
add
push
addr16
dec
sbb
clc
dec
cmp
test
sbb
or
nop
push
xchg
push
cmp
push
daa
sub
addl
add
pop
hlt
sub
sar
fbstp
or
adc
lcall
je
jo
mov
jb
movq
pop
mov
enter
jl
add
insb
cld
daa
mov
das
cmp
lea
jbe
mov
and
push
leave
inc
sub
sub
je
loope
add
push
push
mov
cmpsb
hlt
in
addr16
dec
add
xchg
add
push
or
dec
inc
add
arpl
aas
outsl
add
adc
and
mov
and
jb
dec
dec
loope
xchg
mov
lea
sbb
shlb
fsubrs
movb
push
je
sbb
rolb
in
or
xorb
fistpll
jo
stos
mov
or
lods
sarl
shlb
in
lcall
jbe
adc
test
push
iret
add
pop
jb
sub
adc
or
or
add
jb
sbb
mov
in
jb
xor
add
jl
pop
adc
dec
imul
xchg
in
xchg
call
fsubrs
add
xchg
fsubrs
test
jno
add
mov
lret
cmpsl
enter
fsts
stos
add
adc
cltd
add
les
and
nop
ficompl
jge
nop
mov
test
mov
mov
pop
test
inc
mov
xchg
sbb
xchg
fsubrl
mov
push
push
cmp
sub
mov
cltd
jmp
je
adc
enter
test
je
adcl
inc
dec
popf
imul
inc
or
pop
enter
mov
or
pushf
jmp
rcrb
insb
cwtl
sbb
or
pop
je
aas
cs
inc
jne
and
out
mov
cltd
pusha
add
sahf
xchg
mov
push
jns
jg
xor
push
push
out
in
jmp
leave
inc
adc
jne
add
ljmp
test
and
lret
cmp
aam
push
movsb
jbe
pop
inc
lods
stos
lock
es
test
pop
gs
leave
adc
lea
enter
daa
adc
and
push
inc
jge
loop
fmulp
push
lea
mov
lods
test
adc
mov
adc
xor
sub
or
sbb
pop
ret
ret
fdivl
jmp
mov
xlat
sbb
int
sub
arpl
add
nop
jns
sti
pop
dec
in
push
in
adc
pop
adc
fstpt
lds
leave
cmp
mov
mov
push
mov
and
and
stc
mov
and
or
push
sbb
sbb
push
add
sbb
pop
adc
sub
outsl
push
push
je
addr16
push
jge
mov
mov
mov
mov
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
pusha
inc
push
mov
loope
adc
lcall
or
mov
add
cmp
add
push
xchg
shrb
jmp
push
xor
xchg
loope
sti
jbe
mov
in
adc
frstor
pop
mov
add
add
shll
insl
jmp
cmp
sub
sahf
nop
lret
jmp
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
sbb
inc
and
out
dec
mov
mov
jge
mov
data16
pop
push
or
cmp
adc
jecxz
jne
ljmp
add
popa
std
scas
jmp
push
add
push
mov
pop
or
cs
and
add
pusha
inc
add
mov
add
xchg
xchg
xorl
push
mov
mov
sar
iret
pop
loope
cli
mov
mov
pop
in
hlt
and
push
or
lock
mov
xor
push
push
daa
pop
pushl
or
imul
lea
push
and
imul
inc
sbb
push
jmp
ficompl
jg
dec
sbb
jae
mov
jmp
inc
sbb
push
imul
mov
div
andl
and
jmp
mov
sbb
and
jmp
pop
fisubl
and
insb
jmp
xchg
sbb
sub
xlat
pop
iret
repz
dec
push
pusha
jns
sarl
cmp
cmc
lcall
mov
jg
sbb
mov
mov
add
pushw
and
sbbl
sub
aad
fstl
lea
imul
adc
sub
mov
negl
movb
add
jae
push
or
xchg
xchg
pop
adc
aaa
pop
jnp
push
dec
push
mov
pop
push
lea
push
jne
sub
push
push
add
push
lea
push
aam
dec
cmp
and
cmpsb
add
dec
mov
fs
cltd
lahf
xchg
sahf
fiadds
data16
movsl
mov
dec
adc
pop
sub
sbb
push
pop
mov
inc
jp
add
mov
mov
cwtl
mov
push
je
push
addl
xchg
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
pop
add
add
mov
xchg
sub
add
sbb
sbbl
and
subl
jbe
popa
mov
mov
ljmp
das
and
and
pop
andb
pop
mov
and
mov
push
jbe
insb
cmpsl
mov
add
xorb
cmpsl
aas
aad
andl
add
ret
xor
jno
xchg
inc
add
adc
test
push
repz
popf
push
enter
dec
pop
mov
call
in
pop
popa
xchg
push
sar
ret
and
in
dec
and
add
loop
xorb
xor
icebp
push
fdivrl
icebp
lea
testb
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cmpsb
inc
jl
lcall
outsb
fists
mov
ret
cmp
xlat
inc
gs
orb
jl
popa
rclb
pop
mov
popa
aam
push
aam
das
in
push
rcll
insb
sbb
cmpsl
ret
sbb
int3
push
icebp
cltd
rcrb
add
fcoml
sub
dec
fildl
cmp
sbb
loopne,pn
dec
pop
sub
sbb
mov
insl
fdivr
ret
mov
mov
add
jbe
xor
adc
fnstsw
adc
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
shlb
sbb
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
fimuls
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
jne
lahf
dec
inc
xor
jae
jmp
or
push
daa
bound
lock
aas
and
push
or
sub
mov
lock
jecxz
repz
lcall
mov
inc
and
ss
add
and
jl
lock
into
in
and
insl
lcall
push
push
int
negb
imul
mov
mov
pop
mov
fimull
cld
leave
and
push
push
out
cmp
pushf
cld
push
shrb
mov
into
notl
enter
cltd
mov
jl
dec
mov
inc
in
add
mov
inc
and
push
dec
loopne
fbld
push
push
or
aaa
xchg
jp
and
test
inc
push
adc
pop
pop
sbbb
and
push
mov
in
pop
ljmp
idivl
scas
je
cli
fdivrs
cmpl
jne
pushl
sbb
dec
sbb
inc
xor
adc
and
lds
adc
scas
push
push
inc
xor
dec
lahf
dec
lods
sbbb
add
je
push
sbb
je
cmp
dec
into
jbe
mov
push
sahf
cmp
repz
add
dec
add
ret
xchg
inc
add
movsl
nop
xchg
loope
popa
in
nop
pop
jno
push
push
mov
es
xor
sbb
push
jne
movb
jmp
cmp
sub
loop
jne
popf
movsl
fldz
xor
dec
pushf
inc
cwtl
push
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
iret
addb
mov
push
sbb
test
push
jecxz
add
test
sbb
lock
mov
and
test
mov
daa
rcr
mov
mov
into
xlat
ds
push
dec
or
adcb
dec
lods
push
stos
fsubl
stos
pop
push
push
adc
mov
xchg
fcoml
push
nop
pop
cmp
iret
push
adc
enter
ret
cwtl
pop
cltd
shrb
cmp
sti
sub
push
idivl
mov
xor
push
push
fmuls
adc
push
xchg
xor
rolb
cmp
add
daa
sbb
push
test
or
adc
dec
and
stc
mov
pusha
adcl
inc
sbb
mov
push
push
jns
popf
xchg
lret
jl
xchg
andb
das
or
fidivs
xor
popf
adc
and
sub
xor
mov
test
nop
aaa
mov
je
inc
cwtl
imul
outsl
inc
fldl
fmull
lods
jmp
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
jbe
and
fiadds
in
dec
out
andl
xlat
fisubs
add
jno
insb
pop
int
out
negl
popa
in
push
cmp
cmp
push
pop
je
pop
popa
sbb
out
fadd
adc
mov
adc
fmuls
add
add
repz
xor
pop
loopne
sbb
test
fiaddl
call
rol
or
push
mov
xlat
push
adc
adc
mov
add
aas
aas
push
jle
add
and
cmp
cmp
cmp
sub
xor
inc
jle
mov
push
jne
cs
sub
addr16
or
push
mov
adc
sbb
ljmp
repz
lret
mov
jmp
fisubrs
add
addl
push
or
mov
pop
pusha
or
push
cmp
call
jmp
fs
popa
push
sbb
xchg
lret
sub
push
mov
and
sbb
cmp
jo
xor
loopne
shr
sbb
insl
xor
clc
andl
xchg
push
or
popf
movb
lea
clc
sub
cmp
xor
cltd
mov
inc
inc
and
lea
push
or
dec
adc
sbb
loope
push
or
add
mov
jge
mov
daa
and
idiv
push
mov
mov
mov
jno
aam
ret
xor
idiv
cs
std
divl
adc
add
jg
mov
adc
insb
jge
add
mull
mov
mov
jg
in
dec
mulb
jge
sbbl
and
pop
lock
mov
dec
cmp
or
xor
lahf
mov
jle
pop
pusha
push
pop
insb
pop
add
xor
sti
sub
clc
movsb
mov
and
lea
cltd
idivl
dec
push
into
jp
xor
test
dec
test
sti
xlat
pop
loopne
ds
jg
fs
xchg
scas
jnp
or
xchg
arpl
mov
test
aad
mov
lahf
xor
sub
sbb
push
inc
lahf
aas
dec
lea
pusha
jl
fbld
pop
xchg
sub
cmp
or
jmp
xlat
nop
or
out
insb
mov
cld
fucomp
fildl
mov
test
jns
faddl
xor
lock
enter
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
add
or
inc
add
or
jle
or
mov
stos
test
cmp
and
add
mov
lods
dec
lret
shlb
cld
inc
hlt
jo
push
jg
clc
lea
xchg
arpl
pop
push
sbb
sbb
bound
je
or
dec
inc
dec
jne
inc
jmp
stos
sahf
stos
mov
dec
mov
shll
into
pop
leave
ret
daa
adc
pushf
les
cmp
roll
nop
sub
data16
imul
in
add
loopne
insb
lea
inc
into
mov
xor
fs
loope
sub
loope
pop
iret
xchg
pop
ret
addr16
fimuls
jne
xor
mov
clc
or
push
sti
mov
outsl
jl
mov
adc
cs
sbb
push
leave
adc
pop
rorb
into
xor
shrb
sbb
fdivrl
or
sbb
inc
mov
push
dec
pop
pop
in
lea
loopne
mov
mov
or
nop
mov
lea
push
push
out
jle
inc
cmp
js
pop
loop
inc
repz
inc
rcr
aad
sub
fs
andl
add
xor
subl
dec
shrl
pop
jne
sub
les
leave
mov
sub
leave
insl
xor
scas
sbb
jb
xor
sbb
dec
ljmp
adc
inc
pop
push
shlb
int3
dec
mov
pop
in
out
pop
and
or
popf
dec
sbb
loopne
mov
scas
jl
mov
pop
or
nop
cli
and
lock
sub
fbstp
mov
pop
mov
orb
and
das
scas
xchg
dec
xor
dec
cmp
cwtd
sub
icebp
inc
push
cld
rorb
inc
sub
das
sarb
clc
setb
test
rorb
add
cmp
stos
je
xor
dec
adc
rol
aam
sub
pop
or
aaa
sub
jno
push
mov
je
push
fldl2t
cmp
sbb
pop
negl
or
sbb
je
es
dec
mov
and
mov
sub
adc
fsubl
in
sub
cmp
cmp
jmp
scas
sbb
shrl
not
push
inc
and
das
push
loopne
nop
push
mov
int
adc
push
mov
inc
stc
inc
push
add
dec
xor
jo
dec
lea
jo
cld
bound
mov
out
imul
jne
adcl
adc
xor
jo
push
sub
int
or
test
mov
bound
adc
jns
jecxz
clc
movl
dec
mov
sbb
dec
and
or
add
pop
pop
adc
add
sub
sbb
add
das
inc
xor
add
inc
inc
sbb
xchg
sti
xchg
pushf
cmp
or
aaa
or
in
lds
mov
mov
std
int3
js
add
fildll
fildll
das
fdivl
push
push
and
int
popf
jnp
add
adc
push
mov
pusha
dec
sub
int
imul
dec
push
shlb
and
add
pop
nop
xchg
cmp
mov
enter
sub
fmuls
hlt
or
dec
sbb
int3
insb
pushl
xchg
lret
mov
or
mov
sub
or
in
clc
aaa
pushl
dec
fcmove
add
imul
add
pop
shlb
lock
jae
popf
sbb
jge
jge
sbb
push
les
push
dec
gs
stos
test
add
xor
popf
jo
mov
mov
in
inc
mov
mov
adc
addr16
push
aam
adc
mov
es
mov
mov
nop
cmp
push
or
xorb
mov
xchg
mov
or
loopne,pt
out
fbstp
fsubrl
pop
push
push
outsl
daa
fcoms
and
jnp
pop
pmuludq
inc
scas
int
adc
or
rcr
scas
pop
push
in
dec
cmpsl
adc
and
imul
mov
jbe
sbb
cmp
mov
mov
add
cmp
jnp
jle
sbb
nop
imul
test
cmp
enter
mov
adc
mov
je
xorb
add
arpl
sbb
xchg
pop
pushl
dec
ret
pop
cmp
lret
jmp
xlat
aad
mov
cmp
mov
xor
xor
sbb
pop
ret
je
and
jae
pushf
sbb
lret
inc
or
loop
dec
mov
jmp
dec
mov
or
sti
mov
js
push
mov
outsb
pushf
jge
add
scas
or
mov
insb
shlb
xchg
sub
mov
jle
fmulp
js
cmp
jge
mov
mov
mov
cmp
addb
or
push
pusha
jle
cmp
fstpt
call
xor
fdivrs
call
fsubr
nop
out
push
sbb
lcall
shl
out
je
pop
movsb
jp
xchg
mov
sbb
inc
lcall
mov
shlb
or
mov
inc
pusha
in
mov
lock
inc
jo
sub
inc
sete
adc
or
sbb
loope
and
addb
adcl
push
xchg
push
or
sti
cli
popf
mov
mov
fdecstp
sub
adc
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
add
dec
add
sbb
fcompl
add
int3
pop
loop
cmp
add
push
js
jl
push
pop
jmp
sti
sbb
add
lock
loope
ret
out
xchg
push
or
mov
je
inc
push
push
pop
mov
pusha
or
push
js
and
bound
fstps
push
jge
mov
fcoms
ss
lret
rcrl
std
fdivs
dec
pop
sub
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
int
orl
fmull
jmp
xchg
icebp
xchg
ret
imul
repz
lret
adc
in
call
pusha
sbb
lock
and
mov
pusha
insb
push
xorl
pop
pop
arpl
add
mov
inc
shlb
xchg
adc
add
lock
arpl
cs
popf
add
xchg
jle
or
add
jge
adc
inc
push
inc
or
call
jne
pop
or
mov
scas
je
jb
jbe
mov
aaa
pop
push
xchg
xchg
daa
enter
xor
aaa
dec
enter
sbb
jle
adc
sahf
clc
clc
sub
jge
mov
add
add
xor
hlt
add
adc
push
inc
push
mov
xchg
lea
cmp
inc
outsl
leave
sub
dec
jno
xchg
shrb
pop
ret
push
add
add
mov
in
pop
clc
lock
mov
add
mov
in
jmp
shr
mov
hlt
mov
out
or
mov
xchg
sub
add
into
push
push
add
push
outsl
or
and
or
dec
jp
add
rol
add
sub
movsb
sbb
mov
lock
xor
inc
inc
in
jb
out
test
js
das
sub
jg
lahf
aad
rorb
fdivl
sbb
pop
sbb
dec
mov
aaa
cli
popa
rcr
ljmp
insl
in
mov
mov
or
mov
mov
in
sbb
pop
sub
push
mov
cli
addps
adc
push
xor
xor
fbld
pop
jg
jbe
je
xor
sbb
aas
dec
lods
sbb
rsm
push
lea
andl
push
test
in
pop
sub
or
push
or
jbe
pop
push
mov
cmpsb
nop
sbb
xchg
fwait
sbb
cld
pop
mov
or
mov
mov
xchg
xchg
xorl
add
fsubrs
insl
inc
push
push
fisttps
sbb
cltd
in
sbb
psubsw
es
repnz
int
and
and
mov
nop
xchg
inc
callw
mull
test
fcom
jbe
cs
push
add
xor
jl
fstps
inc
push
idiv
cld
mov
jne
xchg
xor
push
sub
outsb
in
cld
xchg
or
and
inc
mov
lds
les
xchg
push
mov
loopne
cmp
ss
in
pusha
ret
pop
jle
ja
andl
mov
or
daa
mov
xchg
pop
sub
add
std
add
xchg
pop
pop
push
push
ds
addr16
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
pop
lret
mov
jns
cltd
jb
rolb
push
mov
pop
aam
cmp
mov
rcll
xchg
xchg
xor
les
or
and
add
fs
push
loopne
push
sahf
int3
jmp
mov
add
test
push
fs
inc
add
add
mov
push
orl
test
js
jge
push
ljmp
sbb
mov
add
push
aam
clc
xchg
addb
iret
pusha
pusha
cmpsl
fs
cmp
pop
icebp
and
inc
pop
mov
and
xchg
adc
sbb
jnp
aaa
adc
mov
pop
lods
aas
xor
jns
bound
jg
call
fs
push
adc
adc
inc
lea
xchg
xor
mov
push
aad
jne
lret
mov
xlat
jl,pn
jmp
sarb
lock
push
jle
cmp
add
xor
mov
add
inc
and
add
push
aam
inc
mov
adcl
add
adc
ss
add
mov
sbb
inc
rorl
lds
mov
dec
dec
test
fldenv
cmp
sbb
movl
popa
fiaddl
ja
lea
cmpsl
cmp
dec
jge
int
inc
adc
dec
stc
xchg
pop
mov
sbb
ret
lea
and
nop
add
or
or
movsl
fsub
stos
add
lea
int
cmp
xchg
cmp
flds
dec
sbb
fstps
push
ret
sbb
push
jae
sbb
mov
sbb
inc
or
int
imul
sbb
and
and
sub
add
push
mov
shll
mov
inc
sbbb
loope
lock
or
test
test
test
inc
mov
adc
adc
xchg
add
iret
lea
pop
xor
and
loopne
jmp
dec
adc
mov
pushf
sahf
or
rorl
lcall
mov
dec
roll
data16
lret
setp
sub
cmp
push
sbb
add
add
or
shll
dec
rcll
inc
push
faddl
inc
inc
pop
nop
or
xchg
nop
or
adc
mov
rolb
push
push
sbb
lods
and
inc
xor
popa
fists
or
adc
and
xor
sub
push
jns
push
stos
pop
imulb
mov
mov
fidivl
sti
jmp
mov
push
push
shll
push
cmp
popf
push
dec
and
cwtl
and
or
add
ljmp
loopne
sbb
adc
push
mov
mov
cmc
dec
cmc
out
mov
jg
into
dec
stos
or
cmpsb
rcrb
clc
xor
call
mov
jge
sti
pop
or
mov
fdivrs
pop
call
pop
mov
xchg
stos
mov
icebp
xchg
adcl
cmp
sub
pop
loopne
sub
mov
pop
or
mov
rclb
in
lea
jb
psubsb
nop
loope
mov
push
mov
inc
or
in
adcb
jl
pop
push
mov
xchg
pop
pop
add
mov
mov
popf
outsl
xor
mov
pop
add
pushf
rcll
rol
loop
cmc
adc
jne
call
push
mov
or
push
cltd
sub
pop
pop
add
sbb
sub
mov
ss
dec
or
xor
nop
dec
cs
or
sub
cltd
add
sbb
adc
sub
call
outsb
daa
mov
aaa
loopne
cli
push
push
mov
out
loopne
mov
cmpl
add
xchg
in
bound
in
jmp
mov
inc
mov
pop
pop
mov
dec
lret
mov
clc
shrl
mov
int3
lods
xor
adc
xlat
adc
mov
fistl
mov
test
sbb
sbb
lods
shlb
dec
adc
inc
or
push
mov
push
stos
sahf
fsts
mov
mov
loopne
mov
fiadds
jne
add
dec
jae
push
arpl
pop
mov
faddp
xchg
fs
lock
pop
dec
inc
mov
cmp
add
add
mov
orb
fbstp
add
adcb
xor
test
adc
xchg
loopne
mov
cli
sbb
mov
and
push
in
jl
mov
jae
adc
xor
pushf
mov
lea
inc
push
fisubs
test
mov
aam
push
insb
in
ljmp
mov
lahf
mov
pop
mov
mov
out
add
lea
lea
into
inc
pop
pop
xor
fdivr
imul
shrl
xchg
and
push
addr16
cmp
or
inc
ret
mov
bound
inc
dec
cmp
push
aam
in
in
pop
lea
lea
adcl
inc
push
clc
jecxz
inc
inc
add
inc
out
pop
das
ss
cmpsl
add
push
daa
cltd
sbb
shll
pop
lea
ss
adc
test
repnz
mov
ja
cmp
mov
sbb
xor
arpl
mov
mov
into
ror
out
lret
test
outsl
mov
es
or
xchg
je
mov
scas
cmp
rolb
xchg
inc
into
or
jns
or
add
mov
mov
arpl
fistpll
xor
gs
pop
imul
mov
test
add
push
pop
mov
xchg
jno
jns
adc
add
xor
test
xchg
pushf
lea
mov
xchg
daa
jo
push
dec
or
mov
dec
enter
fists
imul
sbb
dec
shrb
add
push
push
pop
ds
add
push
jne
inc
ja
test
inc
mov
xor
jecxz
mov
fldt
test
push
pop
sub
lock
sub
jo
adc
add
ret
and
cmp
adc
push
sbb
push
and
cltd
push
rcrl
sldt
bound
cwtl
sbb
mov
push
loopne
loopne
or
loopne
and
ljmp
hlt
and
dec
popa
pop
loope
pop
hlt
or
sbb
mov
jge
xor
js
adc
xchg
fcomps
mov
in
adc
divl
or
leave
cmp
cmp
dec
faddl
push
or
mov
sbb
ret
cmpsl
pop
push
cmp
push
push
fmuls
adc
jmp
push
add
mov
mov
xlat
sbb
jnp
test
sbb
cmp
stc
enter
shll
imul
rorb
jno
clc
call
jmp
mov
jne
push
pop
cmp
je
stos
jbe
adc
or
jle
jecxz
or
ss
inc
or
cwtl
cltd
dec
popf
andl
cwtl
movsb
or
jns
push
pushf
mov
add
push
fs
aam
je
inc
lea
inc
and
orl
cmp
mov
mov
xor
dec
push
cmp
sbb
and
scas
les
rclb
inc
jne
inc
sub
fsubr
push
pop
enter
or
movsl
or
mov
and
mov
mov
sbb
jge
mov
call
push
fcoms
sub
jle
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
or
ds
into
int3
arpl
rorb
push
sbb
inc
sqrtps
xchg
lds
jge
sub
mov
adc
cmp
or
rolb
xchg
push
rol
lret
sbb
lcall
adc
loopne
pop
popf
call
add
icebp
js
loop
mov
mov
lcall
add
and
push
sbb
pop
adc
xor
add
pop
xchg
sub
add
mov
and
jo
stos
add
mov
aas
mov
xor
and
rorb
lods
loopne
sbb
mov
or
je
dec
pop
adc
outsb
mov
push
mov
and
addl
ret
mov
pop
and
fcomps
xor
aam
decb
push
cmp
addb
stos
clc
mov
push
cwtl
lock
cs
xchg
xchg
lcall
shrd
leave
mov
out
mov
enter
inc
movsb
dec
pop
or
push
xor
movsl
insb
clc
mov
push
add
cmp
test
popa
test
add
enter
mov
jnp
clc
cli
aam
or
and
jae
fistpl
out
xor
pop
cmpl
fcomps
int3
mov
cmp
pop
push
test
fsubrl
or
inc
ficoml
jp
out
cld
push
repz
cld
je
xchg
xchg
mov
daa
push
pushw
gs
das
add
arpl
push
mov
and
test
or
or
je
sub
imulb
insl
pusha
cmpb
pop
push
mov
mov
sbb
sbb
jb
dec
nop
pushf
cmp
push
push
mov
or
pushf
push
sub
cmp
pop
mov
sub
push
sbb
js
mov
lahf
inc
add
clc
cs
lret
ds
adc
push
scas
outsl
mov
add
lret
dec
hlt
sub
push
arpl
xchg
or
xorb
mov
and
or
fadds
mov
xor
push
cmp
popa
push
mov
mov
fadds
cwtl
test
inc
pop
push
xchg
iret
clc
cli
xchg
inc
pusha
cmp
ja
add
adc
adc
add
add
add
xor
js
dec
scas
push
mov
pop
clc
adc
add
or
xor
insl
xor
or
push
cmp
xchg
outsb
or
mov
and
mov
pop
cmc
cmp
or
dec
inc
adc
mov
sbbb
push
int3
sub
cmp
push
inc
inc
ret
mov
cmp
loope
and
adc
push
jne
sbb
call
movsb
out
mov
add
add
inc
lock
movsl
sbb
add
push
mov
jbe
hlt
mov
loope
movsb
sbb
inc
add
pop
inc
mulb
push
xchg
add
aaa
loopne
pop
ret
jb
mov
add
push
aam
pop
sub
add
pop
add
orl
je
cmpb
addr16
jmp
jnp
and
xorps
fprem
loop
mov
dec
loope
clc
je
jp
mov
sub
ds
push
loopne
stc
xchg
lock
sti
lea
push
lea
push
inc
push
push
add
xor
unpcklps
insb
xor
sbb
fisubrs
mov
cmp
jl
cmp
dec
hlt
int3
xor
sarl
ret
hlt
icebp
sub
push
jle
stos
sbb
mov
lock
jne
dec
outsl
sbb
push
sar
loop
add
add
mov
stos
push
das
out
cld
sub
out
test
out
or
cmp
je
jmp
dec
cmp
lcall
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
out
cmpsl
popa
addl
sub
adc
xchg
psrlq
jg
inc
stc
in
sub
lea
out
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
or
and
push
bound
punpckhbw
sub
mov
jge
daa
rolb
sub
movsl
mov
push
sub
clc
arpl
add
or
ds
cmp
test
jne
call
cmpsl
xchg
out
lock
push
jle
inc
add
lods
orb
arpl
sbb
mov
jl
loope
adc
out
divl
add
cmp
add
or
ret
or
adc
loop
neg
cwtl
jle
pop
xchg
loopne
test
xchg
xor
or
dec
or
sub
xchg
addl
jb
mov
add
jmp
cmp
xorb
push
mov
pop
mov
or
add
adc
mov
xchg
adc
push
push
mov
ficoms
mov
rcrl
aas
inc
clc
sub
iret
insb
je
cmp
test
pusha
fidivrl
inc
jo
jmp
imul
adc
add
dec
decb
data16
icebp
adc
fisttpll
add
fcoms
cmp
mov
roll
push
or
inc
js
sbb
lock
mov
clc
cmp
jne
ds
jecxz
loope
je
push
in
rolb
mov
hlt
adc
dec
popa
sidtl
aam
jmp
stos
jle
std
faddp
jmp
jl
ret
sbb
shlb
jmp
cmp
and
inc
or
jno
cmp
push
inc
cmp
jae
or
or
push
insb
mov
xor
inc
out
pop
pop
adc
into
ret
cmpl
cmp
ja
lea
inc
cli
in
loop
pop
aaa
cltd
cmp
dec
mov
incb
rorb
mov
sub
ljmp
or
jbe
sub
ret
lods
cmp
inc
data16
leave
jecxz
dec
or
or
call
jae
dec
add
scas
jl
xchg
mov
inc
add
mov
jl
sti
or
mov
push
mov
mov
inc
sbb
dec
and
aam
aad
cwtl
fiadds
add
inc
loopne
sbb
ret
cli
mov
or
out
or
dec
sub
js
and
mov
repnz
jbe
addl
addr16
or
inc
lds
mov
jb
dec
adc
loop
pusha
sahf
xchg
jnp
popl
push
mov
mov
call
lea
push
mov
clc
push
lock
cmp
je
push
pop
and
call
adc
pop
das
xor
je
insl
adc
imul
mov
sbb
sti
or
add
cmp
dec
rcll
mov
adc
xchg
lcall
out
sarb
push
sub
jnp
lret
dec
adc
push
test
cs
movsb
pop
ret
xchg
ljmp
xor
xor
add
testb
in
cmp
aam
add
in
cmp
lahf
xchg
cmpsl
adcb
mov
push
in
or
pop
add
out
cli
jp
cmp
add
or
out
jne
test
mov
add
push
push
je
lods
adc
inc
jmp
pop
mov
int
in
pop
mov
aad
add
mov
or
scas
push
arpl
cs
sbb
mov
dec
or
add
inc
jno
mov
js
scas
jno
insb
das
xor
push
or
push
into
movsl
bnd
outsb
xchg
in
xchg
lcall
pop
fcoml
jecxz
je
dec
inc
outsl
sti
adc
or
jns
jbe
loope
roll
jnp
jno
enter
sub
mov
jne
xor
cmpsb
mov
or
dec
pusha
test
mov
jl
mov
fildl
lock
or
int
cmp
add
mov
adc
cmp
cmpsb
pop
inc
adc
neg
out
imul
es
fidivl
ja
sub
sbb
mov
jmp
rcrl
inc
push
movsl
sbb
je
xchg
push
and
add
test
xorl
inc
nop
ja
sbb
lds
add
adc
fadds
loop
push
add
pop
mov
pop
andl
push
dec
push
push
push
xor
pop
data16
sbb
inc
push
pusha
lcall
pop
pop
push
or
cs
sub
push
je
jo
nop
inc
push
insb
push
sub
dec
lahf
cmp
sub
jb
sub
add
cwtl
or
mov
push
jns
ret
insb
or
lods
cld
adc
mov
pop
or
or
outsl
test
mov
shrl
js
lods
aam
sbb
or
inc
std
sub
je
orl
push
pop
test
dec
add
sbb
movsl
fisttps
sbb
sbb
jmp
loopne
pop
pusha
arpl
pop
out
fadd
fdivs
jno
xor
sub
inc
or
push
add
bound
sub
repnz
popf
dec
insl
and
dec
cmp
add
jmp
mov
andb
imull
xchg
popf
pop
and
mov
or
mov
mov
sbb
int3
cmc
adc
iret
orl
mov
lods
leave
and
push
push
sbb
scas
xchg
sbb
push
and
pop
mov
sbbb
xchg
lds
mulb
testl
pop
fiaddl
adc
cmp
or
pop
inc
jbe
sbb
mov
lods
js
ret
pop
repz
sbb
or
jae
rclb
mov
mov
xchg
leave
pop
xchg
js
orb
push
fcompl
sbb
and
lret
and
push
shrb
pop
insb
xor
inc
mov
mov
movsl
ds
mov
shll
shrl
leave
cmp
xor
lea
jae
insb
aad
adc
enter
clc
adc
enter
hlt
mov
push
dec
xor
inc
inc
pop
or
sub
enter
cmp
sbb
movsl
aaa
cmp
leave
pop
sbb
hlt
dec
rcll
jae
mov
inc
pusha
andl
je
inc
or
sbb
mov
jmp
shll
cmp
jge
gs
out
or
push
push
int3
mov
cltd
mov
cs
pop
lods
out
popf
add
lea
push
cs
add
cltd
and
inc
sbb
jo
xor
stos
add
and
xor
and
mov
enter
dec
and
inc
or
push
insl
jg
mov
mov
popa
nop
and
add
mov
sub
add
mov
js
sbb
ret
out
cld
out
push
push
pop
lcall
sbb
fldl
cmp
or
lahf
and
push
nop
nop
sbb
sbb
or
sbb
addr16
or
sbb
fdivr
faddp
fldt
enter
mov
pop
add
sbb
stos
fisttpl
xchg
ret
inc
inc
sbb
add
sub
add
add
pop
sub
and
adc
add
xchg
iret
sub
xor
daa
std
lods
cmpsl
sbb
sbb
and
and
and
iret
test
fistl
ret
dec
adc
repnz
mov
inc
cli
xchg
push
adc
mov
mov
incl
cld
and
das
pushl
mov
hlt
inc
cmp
repz
jg
dec
mov
add
dec
fstpl
inc
push
xchg
adc
sbb
jne
pop
pushf
ret
jb
dec
mov
in
sub
ret
inc
call
or
push
rclb
xchg
push
inc
pop
or
outsl
and
mov
add
xchg
sub
addr16
push
cmp
lahf
xor
or
popa
cmp
adc
test
push
or
dec
dec
in
push
dec
pop
adcl
inc
cmp
sarl
pop
mov
jo
add
icebp
divb
dec
sar
js
adc
xchg
mov
je
cli
cmpsl
jns
test
hlt
lea
push
addl
add
insl
idivb
mov
pop
mov
jne
adc
pop
aas
aam
adcl
shll
inc
jo
fcomps
pushl
lret
xchg
sbb
or
xor
mov
nop
enter
hlt
sbb
add
lods
faddl
push
mov
stos
scas
xchg
popa
jmp
xor
push
outsb
inc
sub
jle
pop
sbb
mov
pusha
jo
inc
insb
shl
or
pop
mov
fstpl
sub
jne
loope
push
movb
call
mov
inc
pop
mov
mov
jns
inc
inc
cmp
push
test
idivb
popa
mov
fs
jne
mov
rcrl
lock
add
sbb
shl
xchg
sbb
sub
add
sbb
mov
cmp
xchg
mov
inc
or
loope
notl
sbb
int3
push
ret
insl
adc
push
stos
push
jne
jmp
push
cmp
and
jne
xorl
ljmp
int
jle
push
add
push
imul
and
loop
mov
rclb
cmp
inc
mov
pop
lods
ljmp
in
cs
imul
sub
mov
pop
test
aam
inc
lret
in
mov
inc
cwtl
cmp
cltd
outsb
mov
xchg
or
cmp
mov
cmpsb
roll
mov
enter
or
out
inc
push
aas
sub
nop
adc
and
nop
iret
shll
mov
cwtl
inc
push
daa
or
sti
hlt
xchg
rorl
or
fwait
push
sbb
adc
fisttpll
xchg
fldt
mov
and
push
mov
in
push
adc
adcb
xchg
and
sub
or
pop
cmp
loopne
mov
loope
stc
xchg
inc
push
mov
or
push
shlb
xor
dec
stos
insl
and
enter
mov
xchg
pop
rolb
jmp
mov
sti
push
dec
inc
pop
rcr
add
xchg
enter
sub
sbb
test
xor
xchg
xor
xlat
adc
test
xor
movsl
mov
pop
jmp
xchg
lock
cmpb
add
sub
fbstp
out
jnp
orl
push
push
pop
addl
insb
and
xchg
lock
lods
jb
inc
mov
dec
and
inc
pop
cmp
push
pop
cmp
jne
outsb
mov
jge
or
cmp
pop
cmp
push
pop
adc
or
pop
and
inc
out
xor
mov
sbb
test
aad
ret
jne
push
imul
int3
clc
mov
add
mov
cmp
jb
fimuls
mov
andl
push
sbb
pop
push
lods
loop
xchg
push
test
loop
sub
out
push
cmp
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
cmp
and
inc
inc
or
fsubr
aam
out
shrb
and
xor
pop
push
pop
stos
hlt
outsb
pop
enter
std
hlt
dec
xchg
inc
popa
and
orps
add
test
mov
inc
fsubrl
or
dec
aas
jg
imul
rclb
dec
insb
push
push
push
mov
mov
into
enter
sbb
lods
pcmpgtb
fists
test
dec
xchg
adc
push
das
or
leave
push
mov
hlt
xor
push
inc
lcall
movsl
adc
add
jge
aam
dec
xor
cwtl
pop
jae
add
pop
push
adc
outsb
mov
ret
adc
jg
mov
incl
outsb
pop
test
or
or
mov
or
or
cld
ljmp
cmp
push
mov
enter
adc
inc
push
enter
mov
push
enter
dec
pop
imul
enter
dec
or
enter
sub
adc
nop
addr16
call
in
mov
cmp
mov
imul
popl
mov
jae
add
movsl
arpl
push
mov
es
pop
inc
out
sbb
in
sbb
inc
jb
ret
adc
sbb
sbb
push
add
sub
push
jno
jb
cwtl
inc
xor
mov
mov
stos
cmp
dec
pusha
push
mov
clc
mov
lea
mov
jge
shrb
lret
mov
leave
pxor
in
dec
add
inc
add
and
sub
xor
and
fsubl
lcall
pop
add
mov
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
bound
imul
or
adc
inc
fimuls
mov
lods
add
cld
inc
and
push
repnz
loopne
mov
dec
icebp
mov
out
pop
pop
mov
mov
add
push
repz
push
cmp
pusha
pop
ret
add
out
sbb
xor
sbb
mov
mov
subb
pusha
daa
mov
sub
pop
mov
std
jns
cmpsl
mov
paddusb
popf
mov
add
test
or
call
pop
aad
daa
inc
dec
add
xchg
mov
or
add
imul
ret
mov
lods
faddl
cs
inc
lock
popa
add
outsl
add
out
aas
jg
outsb
mov
xchg
cmpsl
loope
shlb
cmp
push
loopne
mov
sti
ja
jo
pushf
mov
rolb
dec
lock
mov
cmp
push
icebp
sbb
sub
mov
sbb
movl
inc
cmp
adc
nop
fimull
aad
sub
daa
push
add
add
fwait
imul
and
add
in
xor
lea
mov
movsl
cmpsb
sbb
mov
or
ja
jmp
aad
out
pop
test
aaa
sarl
xor
inc
adc
shl
test
lcall
push
je
dec
jne
pusha
pop
push
inc
cmp
inc
insb
out
mov
xchg
shr
and
jmp
movsl
sub
lahf
push
pop
lods
cmpsl
pop
sbb
mov
aam
nop
lahf
test
cmc
pop
inc
sub
je
dec
nop
lea
mov
dec
cmp
mov
xchg
les
test
jge
sti
andl
mov
xor
inc
rcr
push
pushf
test
xchg
cltd
sbb
mov
mov
lea
cmp
jb
adc
or
or
dec
outsb
mov
sub
jge
cmp
add
ja
xchg
ss
pop
sbb
je
mov
xchg
cmc
push
loopne
push
pop
and
mov
aam
cmpps
out
and
sbb
push
jge
fstpl
push
sbb
pop
repnz
clc
mov
addr16
push
inc
xchg
or
movsb
mov
lahf
push
push
sbb
les
cwtl
inc
pushf
repnz
test
stos
lods
pop
or
jb
pop
jo
frstor
cmp
testb
sbb
psubsw
cld
xor
ds
je
push
lock
add
mov
inc
lods
mov
pop
pop
cmpsl
xchg
cmp
es
lock
or
xorl
cld
stos
scas
inc
lea
push
lods
or
push
enter
jo
popa
lea
push
cltd
xchg
mov
push
iret
add
orb
add
jnp
push
push
lods
adc
and
push
cmp
jno
add
jmp
cmp
je
rol
stos
aaa
js
roll
andl
or
ret
int3
loopne
pop
xchg
roll
mov
push
pop
mov
xchg
adc
mov
jmp
add
lcall
cmp
fisubl
fs
inc
aaa
int3
arpl
pop
fsubs
les
incl
adc
mov
mov
mov
hlt
push
mov
xor
mov
inc
loope
rorl
faddl
push
inc
mov
mov
adc
js
and
add
or
and
aaa
movsb
dec
and
dec
push
lret
imul
mov
jp
mov
ret
aaa
imul
pop
add
adc
sub
mov
pop
jge
dec
add
mov
popa
movsb
sub
add
inc
adc
push
and
sub
clc
inc
lea
lret
ja
mov
adc
pop
or
push
ljmp
pop
lods
in
test
dec
jmp
out
mov
or
mov
adc
push
jle
jno
and
jg
ja
jge
test
movsl
mov
jno
pop
pop
cmc
adc
fdivrs
test
mov
xchg
movl
xor
xor
add
popa
or
xor
test
fmuls
out
mov
mov
jp
inc
test
test
dec
jo
enter
jle
cli
and
mov
mov
mov
add
jbe
lea
out
or
mov
daa
clc
ss
fcomps
xchg
mov
or
test
or
sub
fs
mov
shrl
push
pop
jae
stc
imul
mov
mov
cmp
and
insl
add
cmpsl
xchg
push
call
rcr
dec
aad
popf
mov
inc
cmp
addb
ss
jnp
add
mov
ss
es
leave
mov
xchg
cmp
push
sub
in
imul
mov
les
xor
in
jg
adc
jns
enter
or
dec
push
movsb
mov
pop
mov
pop
or
mov
lods
mov
je
icebp
or
xor
mov
adc
or
pop
and
mov
jae
sub
cmpsl
lret
cmp
cmp
rorl
jecxz
and
subl
mov
fisttps
jae
sbb
testl
inc
dec
cmp
jmp
test
mov
das
jae
push
sbb
fistpl
pushf
in
push
mov
js
and
push
sub
subl
push
faddl
xchg
test
test
sbb
sub
adc
sbb
push
sbb
lea
inc
dec
mov
push
jns
mov
push
jns
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
pop
pushw
sbb
sbb
pop
mov
test
in
cmp
lea
adcb
pop
xor
or
sub
lea
sti
pop
jb
cli
sbb
inc
sbb
in
pushl
cld
pop
adc
sub
rclb
lods
sub
sub
pusha
push
outsl
ja
pop
mov
xlat
dec
pop
mov
cmp
mov
mov
cmp
cmp
sbb
mov
mov
add
out
in
test
dec
daa
lock
fucom
subb
in
push
mov
lret
dec
pop
push
pop
rclb
cmp
stos
repnz
or
aas
dec
cwtl
fcoml
add
push
xlat
inc
sub
inc
sbb
jns
mov
push
aas
lret
adc
or
stos
fs
aam
cli
insb
dec
cmp
ds
add
xorb
pusha
add
dec
jge
call
mov
add
fstps
je
and
jge
fwait
lret
xchg
cmp
mov
sbb
stc
add
xchg
sub
dec
and
sbb
nop
mov
add
pop
and
jl
in
stc
mov
cmp
inc
sub
imul
pop
sub
add
inc
pop
fsts
lock
jecxz
inc
fidivrs
dec
out
lock
and
push
adc
je
adc
mov
cmpl
and
pop
push
and
add
add
add
adc
pop
or
mov
and
pop
inc
and
or
in
in
enter
push
adc
enter
testl
add
sti
xchg
pop
add
cld
xor
test
pusha
das
outsl
inc
pop
mov
xchg
inc
jo
clc
inc
push
adc
jo
lds
sbb
out
sub
mov
andl
loope
dec
sbb
inc
dec
mov
fsubl
subb
sub
lcall
or
dec
fnstsw
or
lods
stos
xor
push
fcmove
mov
or
cltd
cld
pusha
movsb
shr
mov
xchg
mov
loope
pop
sub
xor
jne
movsb
daa
inc
lea
or
aaa
sub
inc
insl
mov
cld
fstps
or
push
cmp
lock
std
jmp
inc
mov
add
xchg
xchg
pop
je
pop
mov
out
enter
xchg
or
out
rorb
xchg
das
adc
xor
adc
xor
je
mov
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
and
cmp
mov
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
and
cmp
dec
xchg
sub
setle
or
pop
fistpll
or
and
jne
lea
orb
out
add
push
shrl
or
in
inc
inc
divl
je
xchg
jno
cmpsb
icebp
adc
mov
mov
and
adcl
adc
imul
push
aaa
outsl
loop
adc
repz
adc
stc
adc
sub
add
lods
mov
stc
lea
cmpsb
push
cmp
add
push
lret
push
idivl
mov
xor
cmp
cli
pop
inc
cmp
loopne
cmp
cmp
adc
xchg
fdivl
icebp
sbb
pop
loope
cli
xchg
and
jbe
cmp
popf
dec
divl
mov
pushl
mov
push
pusha
xor
mov
nop
addl
fldcw
or
mov
inc
fldl
pop
pop
fists
inc
pop
mov
call
aam
out
sbb
ret
xchg
cmpl
xor
jns
push
push
loop
lea
sub
mov
pop
sbb
cs
mov
call
xlat
test
hlt
icebp
fnstcw
pop
mov
call
popa
cltd
push
xchg
or
daa
jne
xchg
psubusw
add
sub
lock
pop
xlat
idivb
cmpsb
pop
or
frstor
shl
xchg
cld
dec
push
ljmp
push
cmpsb
jbe
das
adc
or
je
and
testl
shll
daa
aad
mov
inc
inc
cmp
or
add
aaa
sbb
mov
leave
mov
enter
int3
mov
jae
imull
cwtl
int3
jo
dec
mov
pop
loopne
shl
sub
pop
sbb
dec
sub
push
fs
mov
lret
xchg
xlat
ja
cwtl
cmp
sub
dec
ljmp
ss
adc
add
xchg
adc
aam
mov
add
pop
mov
testl
xor
pop
push
or
or
cmpsl
ss
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
dec
icebp
cs
and
lret
mov
and
push
xor
ret
mov
lcall
sarl
push
loop
cmp
push
pop
mov
sbb
xchg
inc
loope
push
test
push
mov
mov
and
shlb
xor
jecxz
adc
jg
or
mov
test
addr16
lea
mov
pop
jb
int
fisttps
in
int
pop
sbb
push
sbb
or
repnz
and
call
pop
inc
and
push
xor
and
mov
ss
iret
push
and
sbb
and
mov
push
jne
and
inc
cmp
jecxz
rorb
js
sub
dec
rcll
test
movsl
xchg
sub
daa
stc
popa
pop
enter
and
sub
and
test
insb
pop
rcll
in
cmp
and
mov
sub
js
lods
xor
ss
insb
xchg
aaa
arpl
psubw
pop
mov
push
push
dec
mov
imul
test
and
pop
das
nop
mov
inc
in
push
jae
clc
adc
or
dec
xchg
sarb
xor
cs
mov
imul
xor
push
ja
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fsubrl
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
push
xchg
sub
xchg
inc
movsl
push
push
pop
cmp
or
sbb
jo
pop
in
hlt
in
inc
sbb
test
cmp
movsb
mov
in
cli
push
pop
or
repz
fimull
and
dec
and
xchg
out
cmp
in
xchg
adc
pop
lock
adc
add
adc
and
pop
and
or
or
sub
pop
jbe
scas
loopne
add
push
into
or
mov
jl
mov
add
loopne
fisubrl
fsts
pop
adc
mov
fsubrs
rolb
cmp
shrl
add
and
fdivs
sbb
ja
hlt
dec
sub
stos
aaa
xor
movsl
lock
outsl
xchg
inc
aas
pop
push
pop
push
or
pop
push
push
dec
es
pop
adc
push
xchg
rorb
xor
dec
les
aam
int
sbb
push
push
push
icebp
or
push
add
js
and
mov
lock
in
fistps
test
mov
loopne
pop
push
inc
fisttps
sub
fnsave
xlat
adc
hlt
mov
mov
push
mov
sbb
jecxz
dec
int3
push
inc
xchg
int3
mov
vpdpwssd
daa
cltd
push
loop
mov
add
ja
dec
xchg
addb
std
je
rolb
sub
cs
jecxz
popa
call
xor
ds
jae
lods
push
cmp
mov
in
fwait
pop
into
inc
aad
push
pop
cmpsb
dec
push
fsubl
enter
test
mov
call
ror
shr
and
enter
cmpsb
xchg
rorb
loopne
xor
out
imul
sbb
lods
cmp
sarl
add
jb
pop
mov
cmpl
cld
cmp
and
js
inc
cs
clc
addr16
push
pushl
and
icebp
add
fdivs
push
subb
inc
fwait
mov
inc
push
xor
push
inc
rolb
repnz
or
add
ret
mov
es
es
jg
push
enter
test
cmpl
rcll
jne
push
loopne
sarb
mov
ja
jge
mov
mov
jnp
sub
imul
rclb
mov
add
adc
lods
and
push
mov
push
push
andl
pop
add
movl
ds
pop
mov
inc
je
movsl
adc
mov
fildl
push
add
mov
dec
lea
fnstsw
repnz
mov
adc
adc
dec
aad
and
adc
sbb
sarb
mov
pop
fldcw
xor
or
nop
fdivs
add
jae
unpcklps
cs
jne
cmp
adc
push
cmp
loopne
icebp
xor
mov
inc
pop
or
mov
and
outsb
clc
add
xchg
and
iret
push
pushf
or
in
testb
and
mov
cmc
and
inc
inc
in
stc
and
dec
out
jo
jl
addl
xor
pop
fisttpl
dec
adc
add
insb
aaa
xor
adc
mov
mov
adc
orl
jmp
sub
pop
popl
cmp
fs
ret
inc
sbb
xor
push
test
push
jno
xor
movsb
sbb
inc
stos
mov
pop
nop
inc
out
inc
enter
cmp
xchg
out
mov
and
mov
test
sbb
insb
mov
aam
pop
xor
femms
imul
xchg
dec
nop
pop
out
push
mov
pop
call
sub
ja
and
mov
pop
push
test
add
addr16
mov
out
insl
pushf
mov
add
movsl
mov
sub
mov
or
pop
push
mov
mov
in
inc
pop
loop
or
loop
enter
sub
cmp
jge
mov
ret
pop
pop
rcrb
and
loopne
ret
cmp
ja
loop
repz
sub
enter
cmp
pusha
loop
loopne
fnstenv
popf
add
pop
mov
lret
adc
add
sbb
lock
push
andb
mov
xor
dec
jno
dec
call
stc
in
add
sub
addr16
enter
inc
push
inc
dec
int3
cmp
sub
push
cwtl
js
insl
pushf
sub
stos
xor
xor
iret
xbegin
pusha
adc
pop
mov
xchg
lret
stc
add
adc
add
adc
add
lea
fisttps
js
aam
pop
shll
insb
hlt
movsl
push
push
movl
jp
pop
add
push
add
lret
outsl
or
add
pop
lret
leave
leave
or
pop
or
and
or
sbb
rorl
inc
lret
sti
sub
lods
and
push
jmp
sub
and
jecxz
dec
cmp
adc
xor
push
inc
mov
je
fcoms
add
rorb
or
add
dec
andl
dec
imul
or
cmp
sar
dec
iret
inc
movsl
dec
mov
pusha
paddusb
out
adc
cmp
pop
add
popf
icebp
adc
cmp
fcmovb
cld
add
rol
or
dec
aaa
adc
cmp
movsbl
jbe
adc
loope
cltd
jne
add
addl
xor
enterw
sub
leave
and
mov
mov
mov
mov
leave
fdivrs
mov
xor
mov
lret
add
orl
mov
aam
in
adc
jmp
lea
loope
dec
pop
popa
inc
ja
sub
sub
leave
adc
adc
inc
in
rolb
adc
test
mov
sbb
sbb
adc
and
rorb
xchg
jo
pusha
movsl
or
mov
add
mov
fs
popf
das
mov
gs
mov
mov
fisubs
cmp
and
pop
cmp
jb
and
neg
in
lea
pop
push
push
xor
dec
test
bound
daa
push
test
sarl
pop
lret
ret
je
or
push
sbb
js
or
cwtl
iret
add
push
leave
push
fdivr
pop
rcrb
inc
jg
inc
inc
mov
mov
xchg
xchg
dec
cmp
mov
add
scas
sub
or
sub
hlt
or
pop
mov
es
dec
or
xor
xor
adc
fcoms
cmp
imul
add
leave
inc
sub
and
icebp
push
or
fcomi
add
xor
dec
fsubrs
loopne
dec
jmp
inc
dec
bound
sbb
sub
mov
hlt
imul
push
ds
test
frstor
push
add
add
dec
mov
adc
orl
push
jmp
and
dec
sbb
outsl
bound
iret
movb
pop
jl
or
cld
movsl
hlt
or
inc
cmp
push
jecxz
lahf
and
push
dec
fsubrs
das
fists
roll
inc
js
fcmovu
cmp
adc
sbb
dec
mov
fstps
adc
mov
cs
or
mov
adc
out
loop
test
sub
fs
ja
add
lock
push
adc
in
cli
pop
je
cmp
add
repnz
dec
push
sub
movsb
mov
push
adc
fwait
pop
mov
dec
je
lea
sub
aaa
jge
adc
and
add
jb
sub
fmuls
sbb
aad
stos
imul
insl
dec
mov
push
mov
add
cmp
mov
dec
inc
icebp
push
add
or
or
dec
add
mov
bound
push
add
xchg
andl
xchg
jno
fisubl
push
fisubrl
orl
lret
and
ss
or
int
sarb
mov
jl
pushf
adc
jnp
inc
jl
adc
sbbl
out
and
subl
mov
cmp
subl
add
xchg
push
push
sbb
xorl
subb
mov
push
sbb
bound
sbb
jmp
jne
mov
push
and
push
pushf
pusha
xchg
sbb
push
shl
movl
scas
aad
cmp
xchg
push
mov
xlat
mov
imul
jo
das
or
jo
ja
add
sbb
sbb
xchg
pushf
inc
add
outsl
clc
orl
aad
mov
add
dec
lcall
inc
cltd
inc
lcall
into
or
cwtl
xchg
push
pop
adc
add
push
aas
clc
pop
aad
xor
mov
mov
mov
mov
mov
and
add
sub
add
push
pop
xchg
mov
inc
add
gs
mov
mov
rorb
mov
lea
mov
ja
dec
add
add
adc
mov
insb
mov
rolb
lret
imul
inc
xchg
push
lods
or
loopne
xor
and
cld
adc
add
and
dec
in
jo
add
sub
or
or
xchg
sub
lea
test
daa
push
mov
sub
xchg
incl
push
push
lods
xchg
mov
leave
jno
sarb
mov
mov
idivb
xchg
mov
jg
jb
cmp
sub
dec
and
pop
adc
and
or
xchg
pusha
lods
sarl
fwait
dec
dec
popf
loope
mov
hlt
dec
test
push
dec
sbb
adc
mov
pushf
js
sbb
dec
push
call
or
mov
dec
fnsave
inc
jo
sbb
in
add
out
push
xchg
sub
push
sbb
js
push
mull
leave
movsl
add
mov
add
dec
cmp
js
mov
fadd
push
adc
and
add
jmp
arpl
jle
popa
add
movsbw
inc
jg
mov
jne
xchg
fucomi
and
or
or
fwait
dec
jge
xor
inc
jb
add
cmp
jle
and
std
cmp
push
push
idivb
mov
hlt
push
inc
mov
sbb
inc
mov
addl
shl
js
je
lret
push
sub
adc
and
ret
inc
ds
sti
cmp
xor
dec
mov
nop
test
std
test
aas
lea
int
add
fwait
push
xor
xchg
dec
dec
lods
repnz
jo
push
xor
mov
or
xchg
add
cmp
lcall
pop
lcall
cmp
dec
fdivs
xchg
mov
imul
fmull
pop
pop
repz
sbb
dec
and
lock
shll
inc
xor
jo
or
jmp
inc
mov
fucom
rolb
pop
dec
cmp
faddl
out
sub
cltd
sub
pop
add
sarl
leave
add
pop
je
add
in
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
mov
mov
rorb
shrl
mov
pop
call
dec
cmp
mov
sbb
and
ret
push
dec
or
add
popa
xlat
push
and
mov
cmp
hlt
push
in
cmp
adc
mov
mov
xlat
mov
jno
xchg
das
push
adc
lcall
push
repnz
inc
test
notl
xor
shll
pushf
test
icebp
mov
inc
test
clc
xchg
xor
icebp
push
inc
push
mov
lods
adcl
xor
call
cmc
mov
stos
mov
leave
daa
or
or
adc
andb
les
and
push
mov
add
outsb
mov
mov
add
xlat
or
in
push
ret
add
mov
loope
test
jne
arpl
mov
cmp
dec
arpl
pop
repnz
pushf
in
loop
xchg
nop
sarb
in
lret
jb
push
add
or
adc
push
mov
movl
sbb
gs
pop
dec
js
cltd
mov
dec
adc
mov
mov
adc
push
mov
andb
leave
dec
adcb
adc
popl
rclb
mov
pop
das
mov
inc
cmp
adc
mov
dec
test
jae
and
pop
adcl
test
cmp
xor
dec
xor
push
adc
mov
movl
add
or
jnp
jno
inc
dec
inc
pop
inc
pop
add
insb
mov
shlb
push
int3
shr
xor
leave
addr16
negb
add
mov
dec
push
pop
jo
es
ret
mov
das
sarl
sbb
sbb
sub
ss
jge
add
movsl
jo
in
in
adc
xor
loopne
movsb
pop
popa
add
add
sarl
or
add
mov
ss
aas
call
adc
push
and
inc
inc
mov
jp
hlt
jb
sub
lods
fwait
inc
sub
aam
clc
sub
lcall
sbb
push
push
push
push
test
aam
cwtl
jl
xor
mov
das
xor
jne
stos
icebp
xlat
scas
adc
mov
push
cmp
movsb
inc
sub
in
movsl
test
push
cmp
jne
mov
and
mov
rolb
push
mov
ds
rorb
sub
sbb
pop
and
xchg
add
dec
rcll
popa
repnz
xchg
nop
mov
sub
adc
jbe
xor
cs
pop
xchg
and
inc
add
jnp
cld
jmp
push
sub
inc
or
xchg
js
cmp
mov
adc
jge
lahf
pushf
jmp
push
inc
cwtl
lcall
in
sbb
hlt
adc
jns
faddl
test
loope
mov
sahf
cld
mov
imul
lods
std
pop
xchg
adcb
stc
or
cmp
js
add
push
in
jne
xor
xchg
xchg
sbb
jb
mov
popf
enter
adc
rolb
sbb
jnp
adc
pop
les
mov
adc
cs
ja
and
cmp
or
jg
push
stos
push
pop
pushl
sbbl
pop
inc
jecxz
xchg
or
adc
xchg
adc
add
les
cwtl
lods
mov
rol
add
cmp
popf
adc
js
sub
outsl
xchg
idivl
inc
movsl
enter
mov
dec
push
cltd
or
xchg
iret
sub
loop
test
push
push
xlat
xchg
inc
sbb
pop
cmp
or
jns
mov
addr16
xchg
incb
and
pop
cmp
in
push
cmp
fwait
cmp
ss
xchg
jne
pop
cmpl
ja
ret
xchg
inc
and
dec
push
push
push
and
pop
push
mov
mov
sbb
add
out
rcll
sbb
and
add
add
jne
mov
push
hlt
jg
icebp
add
adc
orl
push
jbe
xor
mov
cltd
or
ja
jne
mov
jb
mov
stos
insb
jl
jnp
or
add
or
ja
loopne
shlb
add
sti
outsl
dec
add
negb
rolb
dec
outsl
cmp
mov
in
sti
xor
or
stos
jmp
clc
jmp
and
dec
stos
je
shrl
jge
mov
int3
mov
aas
xor
push
mov
sub
push
rcrb
push
push
cmp
add
dec
inc
aam
imul
push
add
pop
dec
pop
cs
cmp
add
xchg
clc
dec
fcomi
jmp
sbb
or
pop
int3
je
pop
adc
pop
ss
int3
pop
push
sub
adc
and
loopne
jmp
nop
push
fisttps
je
push
mov
arpl
clc
xchg
add
mov
sub
or
dec
push
inc
and
mov
sbb
aas
cmp
pop
jp
cmp
sbbl
outsb
push
fwait
out
and
inc
mov
sub
cmp
adc
loope
andl
fcoms
bound
aas
mov
loopne
and
in
mov
push
inc
nop
lret
mov
scas
adcb
outsl
and
sbb
das
int
mov
cmp
dec
add
cltd
sub
por
jl
mov
test
repnz
and
push
addr16
cltd
shrb
popf
jno
push
sarl
cmpsl
cmp
or
clc
pusha
fchs
jmp
test
pop
lods
pusha
bound
push
loopne
or
pop
mov
sarl
jae
sub
mov
int
mov
sbb
fs
jecxz
fs
and
ret
adc
es
out
mov
mov
dec
sbbb
adc
add
idivl
add
cmpw
sbb
cmpb
pop
mov
push
push
add
ljmp
in
pop
push
pop
mov
add
sar
push
dec
mov
je
jl
sub
add
or
adc
adc
jns
inc
pop
adc
or
inc
push
xor
and
mov
mov
inc
add
shlb
pusha
jne
push
dec
push
loopne
pusha
xor
jl
sub
jmp
jg
andb
push
lcall
dec
movzwl
cmpl
outsl
out
pop
add
pop
or
jns
inc
jae
inc
or
dec
sti
rclb
sbb
cmp
inc
nop
lret
add
ret
xchg
fcmove
mov
mov
xor
jb
jo
xor
push
fs
inc
in
ret
pop
push
ret
jl
push
pop
fsubs
inc
aam
add
pop
sub
mov
adc
fs
pop
bound
hlt
jne
jb
cmpsl
ret
sbb
dec
push
cmp
in
jmp
add
pop
push
pop
push
dec
push
inc
push
xor
jo
inc
lret
addl
lock
nop
xchg
inc
adc
int3
loopne
imul
insl
sub
push
sbb
mov
push
and
je
cmp
rclb
imul
icebp
adc
sub
sbb
push
sub
sbb
pop
cs
rol
lods
inc
fisttpll
push
xor
lods
shll
push
jns
adc
jne
dec
inc
mov
or
sub
sbb
push
inc
outsl
loope
lods
call
adc
ficomps
lock
test
inc
or
shlb
pop
xor
test
cmp
les
mov
sbb
dec
cmpsl
mov
iret
mov
xchg
aam
cmpsb
repnz
add
lret
les
sub
bound
sub
nop
xchg
sbb
add
add
cmp
ret
shll
or
mov
mov
cmp
inc
out
cltd
js
stc
pop
dec
push
jns
push
cmp
sub
push
test
or
and
shlb
add
cld
pop
or
test
pop
dec
daa
pushf
push
cmpl
loopne
add
pop
je
or
pop
mov
mov
mov
push
jge
leave
add
movsb
out
aad
in
das
test
jb
xchg
stos
and
cmp
xchg
xor
jl
subl
sbb
and
loopne
cmp
and
dec
mov
imul
movsb
push
sub
xchg
add
or
xchg
push
and
push
adc
jge
scas
push
shll
sub
rclb
push
pop
mov
pop
in
push
fisttpll
sbb
jmp
incl
ja
les
icebp
jmp
aaa
sbb
hlt
movsl
loopne
jecxz
stos
sbb
in
in
roll
xchg
xor
rcll
dec
stos
mov
stc
in
sub
add
dec
mov
push
incl
popa
inc
jmp
cli
dec
cmp
lret
push
outsl
and
orl
adc
lahf
in
dec
cs
and
adc
sbb
shl
mov
clc
mov
add
mov
inc
cmp
pop
cmc
dec
xchg
dec
mov
add
mov
enter
jno
jae
sub
loop
xchg
sub
rclb
push
js
jb
icebp
and
jp
lea
jmp
push
push
das
or
pop
push
pop
pop
jb
loope
mov
adc
pop
mov
inc
dec
andb
ret
ret
jb
mov
in
and
mov
push
dec
cvtpi2ps
inc
sub
inc
inc
pop
adcl
jbe
pusha
add
lea
xor
add
outsl
jnp
mov
jmp
cs
add
addr16
daa
add
dec
sbb
adc
sub
xchg
mov
and
sbb
lods
push
mov
repz
cwtl
cmp
pop
ret
test
push
mov
dec
aas
mov
test
push
dec
sub
push
or
push
adc
rcrb
inc
sahf
sbb
inc
outsl
shlb
fs
add
out
popf
add
mov
dec
and
cmpb
dec
addb
jne
mov
adc
and
jne
push
call
sbb
imul
mov
sbb
mov
subb
inc
sub
xchg
fdivs
inc
xor
fwait
jmp
mov
test
ret
push
dec
push
mov
arpl
call
jp
movsb
adc
xor
and
xor
aaa
divb
subl
scas
add
pop
jge
jge
sbb
adc
add
xchg
dec
int3
clc
xchg
rclb
add
xor
sub
inc
ret
addr16
sbb
dec
mov
or
sbb
rep
cmc
lahf
adc
jge
pop
movsl
cmpsb
add
daa
inc
mov
xchg
cli
in
repz
mov
xchg
in
movsl
mov
push
hlt
mov
add
dec
push
or
inc
clc
jno
dec
shr
inc
aam
rorl
mov
pop
movsl
movsb
ret
push
adc
movsb
push
push
jb
rolb
cwtl
call
adc
hlt
ret
shll
inc
lret
add
enter
outsb
xchg
fists
sbb
addl
push
aaa
adc
add
test
mov
vpaddd
mov
test
inc
cmp
aaa
lea
mov
mov
fwait
les
fsts
jge
push
push
out
adc
jne
cmp
pop
jae
push
adc
jns
push
fdivl
dec
xor
outsb
clc
push
xor
pop
sbb
adc
or
hlt
xor
sbb
xor
jmp
rclb
pop
testb
mov
pop
lods
push
xor
or
push
sub
icebp
cmpsb
pop
repz
mov
adc
je
lods
xchg
push
int3
adcl
pop
add
or
mov
jle
cmp
jbe
adc
cmp
jmp
push
jg
lods
xorl
out
pop
lret
js
loop
int3
mov
aam
push
xor
pop
and
js
mov
push
adc
outsl
xlat
rcrb
inc
push
sub
dec
and
fisttpl
idivl
gs
jp
mov
pop
or
xor
and
jmp
cmp
jne
xor
enter
scas
adc
mov
clc
ret
daa
add
mov
push
jne
push
jb
or
dec
jp
cmp
or
pushf
jne
insb
cmc
xor
push
push
and
out
js
mov
mul
seto
neg
or
push
mov
adc
mov
ror
cmp
popa
mov
in
stos
aas
jbe
in
lcall
jb
push
sbb
or
xor
xchg
das
push
jbe
mov
lret
je
mov
add
es
out
pop
nop
push
push
lret
xor
and
mov
xor
repz
or
dec
xchg
movsl
xor
or
adc
jne
cmpsl
out
repnz
cmpsl
in
decb
adc
insl
mov
enter
xchg
shrb
pop
mov
in
pop
and
sbb
sbb
icebp
add
popl
hlt
cmp
adc
xor
movsl
or
pop
mov
dec
movsl
adc
pusha
xchg
pop
insl
jecxz
fcompl
xchg
aas
xor
nop
incl
mov
cwtl
dec
sub
sbb
push
adc
xchg
push
cwtl
sbb
adc
loop
push
push
and
cmp
pop
int3
cmp
into
and
cmp
xchg
or
xchg
and
push
or
les
push
push
jb
and
stos
and
push
sub
dec
cwtl
cmc
inc
cmp
mov
test
gs
aaa
push
es
ljmp
loope
dec
pop
sbb
and
mov
fstps
pop
mov
dec
les
inc
jecxz
mov
push
leave
sub
fistpl
imul
mov
inc
xor
add
add
iret
and
dec
add
fdivl
push
pop
xchg
sti
xchg
or
pop
and
int
add
lea
jae
in
pop
sub
shll
and
and
push
stos
mov
or
lock
push
push
adc
add
xor
cmpb
cltd
pop
enter
jnp
mov
mov
dec
cmp
sub
or
mov
fld
sub
out
mov
roll
mov
push
jg
hlt
clc
adcl
js
pop
or
test
insb
mov
jno
and
xchg
push
adc
lea
add
in
test
jecxz
and
add
mov
and
sub
sbb
imul
add
sub
mulb
sub
inc
clc
lds
imul
adc
add
or
cmp
mov
push
xchg
add
lods
nop
and
dec
or
adc
dec
cs
jno
push
std
sbb
jae
pop
pop
jb
or
adc
sbb
call
xorl
aad
sarl
inc
shlb
mov
lock
les
push
pop
pop
xchg
add
sbb
in
movsl
xchg
or
imull
push
adc
test
cmp
test
or
add
invd
fst
xchg
sub
jge
mov
mov
out
xchg
scas
fld
cmp
insb
pop
cmpsl
jnp
mov
mov
lock
xor
lahf
or
add
arpl
push
dec
jmp
xchg
scas
add
stos
scas
popa
xchg
fwait
loope
lret
and
fwait
mov
loop
or
ja
inc
push
frstor
imul
cmp
fs
add
loope
fstpl
daa
lahf
add
xor
lods
or
je
cmpsb
scas
sbb
pushf
push
es
movsb
dec
jns
push
dec
jae
pop
aad
sbb
pop
sub
mov
cld
icebp
mov
pop
dec
sub
stos
in
sbb
xchg
enter
scas
call
mov
push
push
add
adc
mov
imul
and
data16
xor
xchg
dec
loop
jns
or
jbe
inc
pop
leave
pop
cwtl
or
movsl
jecxz
jmp
adc
pop
mov
flds
mov
or
and
add
aas
or
and
shll
mov
bound
lock
test
pusha
cmp
and
insl
out
sbb
xchg
or
shl
push
sub
xchg
fisubs
cmp
push
xchg
jo
mov
lea
jae
daa
adc
pop
push
xchg
bound
sub
sbb
adc
adc
pop
add
add
add
jo
lahf
or
pop
inc
mov
jmp
fwait
add
inc
call
bnd
pop
push
pop
ret
or
jne,pn
add
lock
xchg
int3
add
push
xor
xor
sub
inc
lods
lds
push
xor
push
lods
sti
test
sbb
and
xlat
pop
pop
dec
out
pusha
and
adc
mov
mov
or
test
or
xor
sbb
rcrb
mov
push
pop
jmp
getsec
dec
imul
add
insb
test
dec
inc
and
cmp
jnp
inc
mov
test
push
int
inc
lods
pop
fsubl
add
sbb
push
and
xor
leave
push
add
hlt
lods
sub
sbb
inc
dec
ficoml
add
xchg
sub
cli
inc
pop
lcall
loope
jg
and
add
movzwl
add
sub
pusha
pop
imul
mov
add
pop
inc
sbb
test
int
inc
or
xor
add
push
nop
dec
xchg
push
xchg
xchg
mov
mov
push
sub
daa
jne
inc
cmp
sub
pop
iret
dec
arpl
insb
push
jnp
lock
je
or
mov
cltd
push
sbb
int3
jno
sbb
xor
jb
sbb
add
and
dec
xor
cmpsl
rcl
mov
jg
or
xor
imul
inc
in
or
mov
les
cmp
or
and
insb
out
repnz
xor
loopne
or
jmp
push
cmpb
mov
and
xchg
out
adc
cli
add
jl
adc
in
mov
inc
adc
into
adcl
outsl
ds
pop
cmp
pop
mov
nop
push
and
daa
vprotb
dec
jl
or
insl
sub
mov
adc
push
pusha
sub
push
lcall
scas
fisubrl
push
mov
aaa
and
pop
pop
jmp
fadds
mov
adc
sbb
ret
pop
and
pop
jp
pop
mov
sub
sub
xlat
or
xor
adc
les
rcll
pop
jge
es
xor
pop
xor
mov
dec
mov
push
xchg
dec
enter
push
lds
sbb
inc
lcall
mov
jmp
add
jg
adc
sbb
fistl
add
fcompl
push
pusha
cwtl
sbb
adcl
jno
mov
or
add
adc
jbe
je
adc
scas
mov
sub
mov
enter
jbe
xor
cmp
icebp
push
popa
iret
push
jl
mov
sbb
and
push
mov
mov
fisubs
test
movsb
push
jno
filds
repnz
nop
xchg
cmp
lods
loop
fbstp
sbb
jp
cli
add
popa
inc
es
pop
jb
pop
and
jb
push
ss
mov
aaa
or
outsl
add
jae
sub
and
dec
adc
adc
test
loopne
pop
lods
xorb
pop
mov
pop
imul
inc
jge
loopne
push
pop
mov
dec
sbb
jmp
int
and
ja
cmp
inc
push
lcall
roll
insl
adc
and
adc
movsl
and
pop
and
test
push
or
add
and
enter
jo
inc
out
repz
jno
lds
incl
or
fisubs
pop
mov
test
and
push
or
push
test
add
cmpsl
aaa
movsb
fisttps
daa
and
cld
cs
das
rcll
mov
jge
jb
push
dec
lds
jno
std
add
push
mov
dec
fists
aaa
push
jge
jne
mov
lods
cwtl
insl
fisttps
mov
push
inc
scas
int
and
sbb
sbb
add
fs
jp
cmp
push
and
pop
cmc
mov
jne
jmp
scas
imul
repnz
cmc
add
xchg
and
or
pop
cmpb
adc
dec
dec
inc
pop
mov
das
and
mov
push
insb
push
mov
les
mov
popa
pop
xchg
add
test
mov
sub
fisttpl
sub
test
sbb
bound
daa
add
dec
adc
push
flds
scas
dec
loope
sbb
pop
cwtl
push
rolb
test
lods
mov
mov
bound
pop
mov
icebp
pop
cltd
pop
or
adc
inc
sbb
pop
pop
in
jne
cmpsl
rcl
lahf
fnstcw
outsb
cld
mov
pop
testl
sbb
adc
dec
addl
in
push
inc
add
push
adc
aam
sbb
mov
jns
add
or
dec
add
mov
adc
adc
les
xchg
and
sbb
aaa
sbb
pusha
sbb
and
ja
arpl
ss
xchg
mov
iret
ja
or
push
movsl
lcall
sub
adcl
jo
or
outsb
fisttpll
jmp
and
dec
xor
sub
jmp
jbe
aam
push
dec
rcll
mov
push
push
adc
ficomps
rcr
or
bound
sub
pusha
push
mov
test
fwait
inc
and
cld
mov
mov
ret
sub
inc
sbb
into
push
clc
dec
adc
inc
pop
sub
cmp
es
outsl
inc
push
xchg
insb
adc
pop
sbb
xchg
cmpsb
and
pop
sub
add
sub
pop
add
push
jle
sbb
loop
jne
das
fcomps
insl
mov
adc
cmp
push
jg
push
les
dec
mov
pop
pop
test
inc
icebp
pusha
sbb
pop
push
ss
push
push
cs
fcmove
push
inc
pop
add
push
je
and
push
inc
ret
pop
jle
xor
bound
mov
add
ret
nop
sahf
mov
xor
or
test
faddl
mov
lods
fidivl
mov
sub
sub
or
mov
push
mov
pop
repz
push
jge
lock
push
aas
pop
lods
mov
imul
mov
push
sub
sub
fnstcw
dec
iret
jo
pop
inc
sbbb
dec
sbb
add
sub
xchg
dec
addr16
les
push
xchg
jecxz
lret
mov
nop
shl
push
movsl
addr16
jo
bound
stos
je
push
popf
testl
jmp
test
or
in
mov
hlt
or
movsl
setp
aas
or
adc
addr16
call
ret
add
orb
and
lahf
iret
or
xchg
adc
xchg
sbb
cs
or
push
daa
sub
js
stos
mov
das
inc
xor
push
ret
pop
pop
xor
cld
aas
jb
iret
push
sub
lea
push
adc
mov
push
inc
jnp
pop
fsubrs
and
lds
ret
jo
leave
cs
hlt
les
sti
pop
ret
xor
xor
push
gs
adc
adc
dec
sub
push
roll
xchg
mov
ret
mov
inc
dec
mov
xor
pop
fcoml
cmp
push
inc
pop
or
outsl
movsb
mov
rcrl
fwait
lods
push
add
int3
nop
push
mov
cwtl
dec
sub
nop
call
inc
xorl
les
adc
std
rcll
imul
ss
add
inc
pop
push
imul
cld
push
test
fisttpll
add
adcb
orb
mov
nop
xor
loopne
pop
and
xor
xchg
pop
arpl
lods
stos
in
add
js
dec
loop
jg
xor
inc
adc
inc
adc
in
sub
loop
push
pop
in
adc
sub
jne
pop
pop
bound
push
sbb
clc
push
pop
sbb
add
pop
dec
mov
push
test
mov
popf
movsb
cld
bound
jle
and
mov
pop
sub
inc
cs
inc
push
sub
pop
xchg
adc
bound
inc
movl
fimull
adc
fldz
and
fwait
pop
roll
and
cmp
and
sub
pop
xor
cmp
xor
fildl
cmp
jmp
das
sarb
mov
testb
inc
cmpsb
add
andl
aam
les
inc
cmp
adc
push
push
push
orb
push
fcmovb
lcall
ret
shlb
pop
fmuls
mov
js
in
add
sub
sbb
fsubs
mov
jnp
or
xor
adc
je
push
xchg
pop
fwait
pop
jne
or
or
mov
sbb
and
or
or
jg
jle
push
popa
mov
nop
cld
jbe
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
mov
jle
cmp
cmp
cmp
mov
mov
cld
inc
add
push
add
inc
jmp
outsb
push
movw
or
or
mov
xchg
lahf
clc
iret
mov
dec
fwait
inc
or
fs
pop
idiv
imul
call
pop
xor
xor
xor
mov
adc
mov
jns
lret
xor
inc
lock
das
addb
add
cmp
push
cld
outsb
push
push
mov
xor
sbb
ret
dec
mov
dec
and
dec
fists
sub
fwait
sub
jnp
add
dec
movsl
or
adc
and
adc
xchg
pushf
push
add
orb
mov
inc
sub
and
adc
cmp
ret
push
sbb
dec
outsb
mov
andl
in
pop
add
and
sub
pop
add
leave
orb
cmp
and
pop
adc
cmp
jo
mov
mov
add
xor
shlb
mov
inc
sahf
xchg
aam
in
add
loopne
and
lea
mov
rclb
stos
nop
lods
xchg
add
add
enter
mov
pop
mov
adc
add
addr16
adcb
mov
xchg
add
push
and
data16
push
sbb
xchg
adc
shr
adc
or
inc
sbb
in
mov
sbb
repz
stos
jo
sbb
add
nop
or
mov
jmp
js
or
stos
xorb
and
sbb
addr16
fildl
sbbb
inc
popa
shrl
inc
or
mov
mov
sbb
or
lods
xor
shll
sbb
daa
xlat
dec
and
sub
popa
mov
ficoml
enter
sbb
imul
sbb
stc
add
and
pop
pushf
adc
imul
cmp
sub
or
add
adcl
ljmp
xor
adc
and
adc
push
cmp
in
push
sbbb
std
cmp
dec
sub
fld
sub
push
leave
and
movsb
push
add
add
orb
mov
popf
adc
add
adc
or
cwtl
dec
adc
pop
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
lea
add
in
dec
insb
pop
mov
and
or
add
pop
push
in
lret
mov
jo
adc
loope
mov
pop
fwait
add
mov
mov
xor
mov
xchg
shll
adc
push
mov
and
jo
pusha
mov
out
adc
inc
add
push
icebp
or
enter
add
add
sub
aaa
rolb
inc
sbb
rorb
out
xor
mov
adc
fs
aad
test
and
jecxz
outsb
adc
add
cmpsl
in
cmpsb
hlt
add
cmpsb
mov
add
test
or
add
shrb
aaa
lock
or
and
scas
or
push
fistl
sub
fs
or
xchg
and
and
jb
xchg
jbe
pminsw
jne
xor
icebp
sbb
mov
mov
mov
inc
sbb
sbb
ret
out
cli
push
addr16
rolb
inc
and
outsb
cwtl
test
inc
jbe
and
and
jbe
and
mov
lods
jbe
add
in
shrb
into
mov
adc
stos
xor
sbb
lock
clc
lret
sbb
push
pop
les
or
or
insb
pop
sbb
push
popa
xchg
jne
sbb
push
insl
xor
mov
rol
popa
xchg
add
lcall
fstps
or
pop
push
add
xlat
cmp
dec
lock
fildl
fildl
dec
push
xor
fs
dec
inc
sbb
mov
pusha
mov
mov
pusha
ja
and
cmp
add
and
xlat
add
pushf
adc
iret
jae
pop
pop
xor
dec
pop
mov
cmp
jg
adc
pop
lods
add
or
or
push
imul
mov
or
mov
xchg
add
jmp
scas
subb
push
pop
jno
mov
pop
or
out
lea
and
push
je,pt
cmp
jle
cli
dec
shlb
ffreep
jecxz
add
adc
xor
inc
add
inc
dec
jl
push
pop
loop
xchg
pushl
xchg
cmp
push
inc
dec
cmpsl
jle
or
xchg
inc
or
xchg
inc
inc
push
adc
fisubl
sbb
push
xor
in
xorb
or
out
repnz
and
or
add
ja
mov
sub
jo
xchg
outsb
nop
sub
xchg
push
call
xchg
add
inc
push
sbb
loopne
les
nop
in
loope
add
pop
push
hlt
ds
push
push
fldl
push
sbb
inc
mov
sbb
and
xor
fstpl
pop
jbe
insl
movsl
test
or
addr16
jnp
xchg
add
and
loope
fsubrp
pop
pop
cmpl
into
in
sub
pop
sbb
repnz
sbb
fs
in
mov
rolb
or
clc
pop
cmp
dec
loop
lods
movl
rcrb
in
mov
mov
dec
mov
inc
jmp
sbb
shlb
scas
sub
or
ficoml
adc
cmpsl
ffreep
jbe
shll
fld
adc
dec
leave
mov
jge
sahf
adc
je
push
cmpb
into
test
push
or
dec
add
call
or
cmp
mov
jbe
cmp
xor
inc
iret
lods
adc
sub
jnp
ja
cmp
es
push
mov
push
insb
insb
adc
and
inc
pop
mov
movl
shlb
sbb
lahf
xchg
sahf
sub
push
ret
xchg
push
xor
jnp
popf
or
mov
mov
lcall
enter
push
inc
cli
mov
mov
lock
sbb
leave
shld
add
add
dec
ja
jb
ja
lea
push
push
icebp
push
cs
je
xor
or
or
bts
or
push
mov
push
add
push
clc
in
rcrl
or
or
cli
mov
push
lods
arpl
test
add
pop
pop
cmp
xchg
mov
adc
and
mov
test
js
insb
mov
pushf
pop
arpl
ja
xorb
ret
loop
mov
lea
push
adc
sub
imul
nop
jle
jle
inc
cmpw
imull
jne
pop
adc
inc
inc
cld
fidivl
mov
push
daa
jmp
push
push
jl
outsl
mov
jns
aas
push
xor
mov
sti
jg
stc
std
mov
or
push
mov
out
push
or
push
push
add
loopne
and
add
xor
or
xchg
or
pop
sub
add
or
add
rolb
adc
in
jno
and
and
sbb
lods
or
in
jle
add
lods
out
xor
inc
cmp
push
les
jne
loope
pop
jnp
dec
add
xor
xor
je
ss
repnz
ret
nop
iret
in
lds
xchg
inc
daa
jns
cwtl
lods
xchg
push
or
shrl
lock
sbb
cmp
in
or
xchg
rcr
dec
ljmp
loopne
rcl
jae
fcmovnbe
cmp
std
xlat
test
inc
mov
xor
mov
xor
outsl
or
dec
aaa
xchg
push
adc
or
aad
addl
orl
pop
xchg
or
test
out
jno
or
pop
je
lret
xchg
and
stos
cmp
add
flds
loopne
adc
loope
lods
nop
dec
shlb
push
test
mov
and
imul
fstpl
cmp
pop
ret
xchg
or
adc
xchg
outsl
data16
or
movsb
dec
ljmp
inc
popf
mov
fisubs
or
pusha
dec
aaa
fwait
and
inc
repnz
mov
int
mov
pop
xchg
push
leave
add
and
ja
push
or
pop
les
or
or
push
adc
popa
and
ljmp
shll
pop
lahf
repnz
cmpsl
add
ss
add
enter
adc
add
add
cwtl
add
fs
decl
aas
cs
push
cwtl
or
push
sbb
xchg
dec
cmp
sbb
movsl
push
adc
sbb
mov
mov
dec
xchg
cltd
loopne
les
add
dec
pop
icebp
push
movsb
cmp
inc
inc
out
test
xchg
jl
stos
pop
popa
inc
ljmp
mov
fldenv
push
jno
shlb
jmp
mov
es
popf
insb
xor
jge
ljmp
jne
shlb
mov
faddl
fs
add
call
or
int3
and
je
add
sbb
cli
cmpsb
sbb
dec
jne
xchg
mov
push
jl
push
or
push
sbb
mov
jg
out
push
lods
out
sub
jns
scas
fdivr
les
or
push
cli
lret
test
add
push
es
shrb
add
ds
test
fs
mov
hlt
push
iret
push
jb
jo
inc
push
jb
mov
cmp
nop
sub
mov
repnz
inc
loopne
jl
rcrb
push
pop
push
pop
cmp
xor
push
push
inc
push
mov
and
and
les
jnp
loopne
jle
adc
and
and
nop
inc
push
jns
jg
push
inc
push
cmp
je
enter
icebp
push
push
iret
imul
xlat
mov
dec
bound
arpl
iret
repz
orl
mov
lcall
and
aaa
inc
dec
push
pop
jns
out
imul
sahf
out
movsl
scas
mov
sahf
int
loope
cmc
call
xchg
jl
or
aaa
call
cltd
push
in
pusha
rcl
loopne
mov
mov
mov
addr16
divl
dec
stos
popf
nop
adc
adc
test
nop
je
mov
add
lea
cmpsb
mull
rol
jno
arpl
cmp
cmp
movsb
movsl
addb
xchg
test
mov
add
fisttpl
shl
push
in
inc
mov
push
xchg
aam
mov
xor
leave
std
add
out
fcompl
mov
push
test
add
fmull
jmp
mov
pop
faddl
or
fisttps
xchg
imul
push
or
arpl
adc
filds
dec
test
dec
adc
adc
aas
addb
sbb
jl
and
les
inc
ja
clc
jnp
xor
push
cmpb
jge
cmp
dec
and
dec
jmp
out
add
shlb
sub
mov
jne
inc
cmpsl
jg
lcall
rorb
inc
add
shl
sub
or
hlt
ja
mov
dec
shlb
mov
lahf
xor
adc
pop
or
xchg
lret
popa
dec
dec
jmp
test
sub
adc
shrb
pop
xchg
cs
bound
and
lcall
sub
or
mov
mov
or
aaa
ss
adc
sub
fiaddl
add
adc
mov
cltd
sbb
and
test
pop
push
adc
lods
dec
pop
fisttpll
sub
inc
push
or
movsb
popa
or
add
popf
shrb
xchg
mov
cmc
push
inc
pop
adcb
out
and
les
pop
inc
rol
fwait
sbb
call
pop
rolb
cmp
add
lea
insl
pop
shlb
add
mov
bound
and
and
dec
and
mov
adc
adc
mov
mov
jl
icebp
push
test
jmp
aad
jnp
dec
imul
test
sub
aaa
ss
lods
xor
fwait
cmpsb
sub
mov
mov
nop
imulb
push
and
cmp
jne
imulb
nop
push
cs
push
pop
xchg
or
adc
adc
jp
sub
enter
adc
xor
push
cltd
xchg
mov
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
push
pop
popf
mov
std
int3
jl
mov
hlt
stos
mov
test
into
xchg
add
orl
cmp
cmp
orb
movsb
inc
mov
mov
sbb
outsl
mov
pop
dec
mov
pop
mov
mov
inc
or
push
pop
ret
in
xchg
and
test
jae
add
xor
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
xchg
mov
and
sub
sbbl
and
es
test
test
nop
jge
or
mov
xchg
inc
andl
pop
fbstp
shl
dec
xchg
push
mov
sbb
push
cs
push
ficomps
cmp
into
pushf
xchg
or
pop
jle
movsb
loop
xchg
cld
addl
mov
inc
adc
aaa
rorl
imul
aaa
fmul
adc
xchg
pop
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
and
cmpsl
push
aas
and
ds
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
in
push
inc
or
pop
sbb
ret
inc
mov
in
pop
rclb
incl
cmp
pop
lea
adc
add
jno
pusha
and
lahf
xor
loopne
arpl
adc
xorl
adc
mov
pop
fstpt
jmp
push
sub
ljmp
stos
mov
bound
lea
popf
pop
dec
pop
movsb
mov
add
lea
add
and
pop
dec
cmp
cmp
add
cwtl
xorl
push
sbb
push
mov
sbb
fidivrs
sub
sbb
and
pop
rcrb
lret
enter
add
test
jne
or
push
push
mov
sar
les
mov
imul
add
pop
fmull
pop
sbb
mov
sbb
mov
xchg
fiaddl
mov
mov
or
hlt
and
les
xchg
syscall
push
push
fwait
cmp
movsl
fwait
daa
mov
dec
push
and
or
mov
push
in
sbb
insl
sub
rorb
pop
ficoml
and
mov
cmp
sbb
in
push
pop
cmp
mov
sahf
jmp
shlb
xor
fmulp
or
lea
out
cmpsl
pop
nop
push
call
out
pushf
rclb
nop
out
out
movsb
adc
adc
xor
and
lahf
push
xchg
jns
add
es
push
jo
cltd
adc
inc
inc
outsb
pop
inc
push
aam
loopne
inc
pop
aad
rclb
imul
fcomps
and
ds
cmc
int
not
dec
enter
fsubrs
sbb
adc
enter
or
push
sub
or
fwait
or
lahf
mov
andb
mov
clc
test
and
adc
inc
dec
mov
push
movsb
shrl
sub
add
test
add
push
add
js
adc
pop
rcrb
xchg
inc
stos
int3
cwtl
and
leave
je
cmp
and
sbb
pop
jb
mov
test
imul
lcall
cltd
nop
fs
pop
popa
xchg
mov
pop
adc
mov
and
xor
int3
ja
cwtl
rorl
ljmp
mov
cmp
hlt
je
xor
and
cltd
inc
xor
cs
xor
push
sbb
subb
add
orl
cmpsl
cltd
pushf
inc
push
in
dec
or
loopne
push
jo
and
dec
cmp
jbe
nop
sub
lret
in
roll
cmp
pop
sub
jp
or
mov
jnp
xor
sbbb
test
lods
add
pop
mov
or
jne
mov
scas
add
jbe
add
dec
aad
xchg
loope
in
aam
push
insl
loope
push
or
sbb
adc
cs
or
adcl
mov
das
mov
push
mov
mov
jge
dec
xor
js
or
dec
fsubr
psllw
jnp
lods
xor
pop
push
mov
or
fsubl
adc
lods
test
push
xor
shlb
adc
ret
sbb
mov
nop
sub
mov
xor
inc
loope
js
mov
cmp
fs
adc
mov
out
dec
xlat
shrl
inc
pop
and
lods
imul
inc
rcll
dec
inc
jmp
ret
rcrl
aam
sbb
mov
outsb
pop
sbb
jbe
sub
xor
insl
inc
sbb
pusha
mov
cmc
ss
pushl
repnz
mov
pop
dec
push
inc
adc
cmpsl
xor
mov
aam
test
pop
dec
sub
pop
and
fwait
and
mov
sbb
and
insl
mov
sbb
das
and
and
test
push
jl
and
stos
sub
push
pop
es
neg
lea
popa
leave
fs
sub
mov
subb
push
or
lods
loopne
test
pop
insb
sub
cmp
sub
sub
pop
jnp
pop
loopne,pn
movsb
push
lret
lea
mov
test
daa
dec
dec
addb
pop
popa
adc
je
dec
lock
mov
mov
clc
pop
inc
push
cs
push
rcl
xor
out
push
loop
dec
popf
das
out
or
shl
inc
cs
dec
fwait
nop
movsb
sub
xor
rcrb
int
lods
sub
rorb
daa
xor
int
test
push
and
and
int
xor
and
dec
xor
test
mov
pop
cwtl
push
nop
dec
dec
xor
sbb
xchg
add
movsb
cltd
nop
sbb
mov
imul
adcb
adc
adc
fdiv
fsubl
mov
or
enter
orl
pop
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
lahf
add
jno
stos
stos
andb
xor
das
test
testb
aam
ja
fldcw
clc
pop
push
xchg
push
cs
sub
lret
incl
je
dec
cmp
inc
or
cmp
add
add
push
and
dec
test
je
push
jp
or
clc
cmp
mov
test
int
lea
frstor
stos
std
scas
insb
ret
repnz
push
cmp
insb
mov
push
and
pop
cmp
sub
aad
push
popf
ljmp
dec
adc
jp
pop
or
int
jbe
scas
fnsave
lods
imul
add
rorl
jle
sarb
pop
cmp
jbe
mov
mov
push
jmp
nop
movsl
aam
jmp
std
filds
jmp
dec
mov
aad
loope
push
pop
pop
addr16
cmp
mov
cmp
je
inc
xor
outsl
lock
repnz
add
jle
jg
out
dec
push
sbb
mov
cmp
inc
je
push
push
rcll
sbb
loope
push
nop
xchg
xchg
nop
jbe
xorb
inc
jb,pt
mov
jle
adcb
mov
and
addl
jb
adc
mov
divb
leave
sub
aam
pop
cmp
fcomip
pop
fs
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
cmpb
int3
ret
jl
dec
sub
ds
xor
inc
mov
jp
push
push
cmpb
and
pusha
jnp
clc
repz
jae
inc
adc
cmp
bound
and
je
mov
add
add
jb
cmp
pop
pop
js
scas
adc
inc
lods
mov
sub
inc
fnstsw
xchg
sub
popa
adc
and
xchg
add
roll
sbb
fcmovu
loope
xchg
jne
or
xlat
aad
dec
or
js
or
ds
imul
mov
push
out
outsl
imul
jmp
rorl
mov
jbe
lock
in
in
ds
adc
xchg
lret
mov
mov
and
push
sbb
add
pushl
inc
jae
xchg
pop
outsl
jl
push
push
sbb
cmpsb
sub
dec
sub
cmp
addr16
inc
test
sahf
scas
test
sbb
pop
or
jmp
mov
imul
push
int
pushl
ds
jl
or
sar
dec
je
cmp
or
and
mov
movb
movsbl
shr
jg
dec
bound
add
pop
dec
add
nop
inc
mov
leave
jne
pop
xchg
mov
xchg
bound
jo
pop
mov
push
xchg
adc
adc
cmp
loop
xor
mov
push
mov
cmp
orl
push
andl
push
sbb
or
add
rcll
push
rorb
add
sbb
in
add
dec
mov
sti
add
enter
pop
cmc
dec
sub
sti
ret
loopne
jae
lock
and
inc
mov
xchg
jg
cmp
je
dec
and
add
and
jmp
in
push
add
insb
xchg
addr16
xor
adcl
adc
in
inc
or
or
pop
sub
adc
icebp
pop
cmp
pop
pusha
push
insl
gs
push
imul
cmp
mov
push
or
cmp
dec
and
outsl
loop
pop
add
mov
pop
add
and
sbb
jp
pusha
adc
in
xor
mov
sub
mov
push
pminsw
mov
xlat
xlat
test
dec
sbb
ficomps
testb
fstpt
inc
push
aaa
sub
mov
or
pushf
xchg
adc
ret
cltd
int3
push
inc
pop
dec
add
add
popa
xchg
add
xchg
mov
mov
nop
sbb
dec
jmp
mov
xchg
jns
es
xchg
ret
pop
pop
mov
sub
mov
cmp
xchg
or
pusha
cmp
sbb
dec
into
inc
mov
push
lock
loopne
jmp
shlb
in
and
orl
or
dec
daa
subl
xor
rorb
push
adc
mov
push
cmp
je
sub
push
std
adc
mov
loope
out
push
xchg
xchg
inc
cmp
popa
mov
push
call
or
push
fadds
or
inc
leave
pop
in
mov
cwtl
sub
adc
popa
jmp
testb
inc
loopne
ror
sbb
out
rol
pop
adc
add
loopne
shrl
xchg
add
xor
sub
dec
sub
add
sbb
xchg
and
mov
pop
mov
cmp
sbb
cmp
outsl
xchg
ret
sub
dec
js
push
add
mov
push
push
testb
sbb
lcall
or
in
fsts
xor
jg
lock
sub
flds
mov
aad
mov
add
arpl
push
sub
sbb
repz
sbb
inc
xor
push
mov
pushf
sbb
mov
pop
dec
cmp
aaa
sub
add
pusha
xor
inc
add
cmp
insl
cmp
std
cmp
mov
leave
xchg
mov
sarb
mov
cmp
lock
sub
inc
or
fistps
mov
mov
insb
sbbl
jle
imulb
dec
sbb
lods
rcll
mov
jl
or
pop
rolb
test
pop
fdivs
das
cltd
pusha
gs
xor
sub
fcmovb
adc
repz
or
pop
inc
movsl
sbb
push
inc
sbb
sarl
jno
inc
loopne
test
stos
add
or
divb
movsl
jnp
xchg
add
inc
call
xchg
add
jp
rcl
aad
lods
aam
lea
or
xchg
xchg
xlat
xor
int3
cwtl
cmpxchg
dec
mov
dec
jb
mov
mov
push
inc
lahf
sub
imul
cmpb
mov
mov
scas
cmp
sbb
sbb
cmp
cwtl
loope
or
xor
or
xor
push
jmp
add
out
push
dec
rol
test
outsb
add
cmc
mov
cmp
cmpsl
je
stos
mov
cli
leave
mov
mov
push
dec
adcb
pop
cmp
rcll
sub
popa
and
xor
dec
sarl
cmp
inc
push
cmp
les
mov
mov
je
mov
pop
scas
dec
sbb
jmp
dec
enter
les
inc
int
sbb
and
in
add
add
rcll
sub
nop
sbb
push
jle
dec
dec
and
test
or
mov
test
adc
push
dec
adc
push
inc
arpl
jge
mov
xor
jne
je
inc
or
sarb
test
js
adc
jne
add
sub
adcl
sbb
iret
test
adc
mov
inc
cwtl
addb
adc
ret
mov
push
xlat
je
pop
sub
ficoms
cmpsb
movsb
jb
push
enter
outsl
inc
mov
xor
xor
inc
add
xchg
cmp
cmpsl
sbb
std
fsubl
adc
lea
mov
dec
mov
je
lods
inc
jne
imul
cmp
rcr
add
mov
and
out
pop
shl
sub
ret
xor
or
ja
addb
call
ds
mov
jnp
ds
sbb
and
or
scas
push
rcrl
mov
push
xor
inc
fbstp
mov
das
je
jge
sub
mov
lea
fdivrs
jns
jnp
das
adc
es
rcrb
jle
stos
cs
in
cmp
test
jne
push
jo
movsl
es
or
mov
movsl
jno
test
or
dec
mov
cmp
sbb
mov
dec
enter
add
dec
push
and
fistl
nop
xchg
cmpsb
and
cmpl
sub
fcmovnbe
sub
push
sbbb
sbb
mov
xor
scas
sbb
ss
fmuls
out
mov
add
insb
lods
lret
xor
loop
decl
cli
test
push
lret
jp
or
cmp
dec
mov
rclb
add
mov
jbe
mov
add
mov
mov
aaa
mov
add
push
ljmp
insb
pusha
cld
sub
jle
inc
sbb
ficompl
inc
add
mov
rolb
push
mov
pop
pusha
push
js
lds
mov
cmp
enter
movsb
movsl
outsb
jbe
fldl
adc
jle
roll
in
data16
cmp
cmp
inc
add
out
jne
daa
bnd
adc
iret
iret
or
jne
or
jne
or
and
clc
push
mov
mov
dec
push
adc
pop
mov
test
and
jg
pop
push
lea
movl
dec
fwait
inc
dec
mov
test
aaa
mov
push
jl
mov
lea
fstpl
lea
cmp
ja
xor
lcall
and
movsb
in
inc
mov
ss
popa
mov
sbb
xchg
in
fstl
fisttps
fsubl
xchg
int
xchg
mov
es
push
into
or
cmc
int3
rcll
inc
xor
and
add
faddl
cmp
adc
in
jno
add
add
sub
fstl
mov
idivl
jmp
fcom
loopne
shlb
adc
popa
int
jb
adc
mov
xor
repnz
mov
inc
movb
mov
ss
popa
dec
ret
cmp
imul
or
add
or
xchg
sbb
cmpsl
push
xchg
insl
mov
dec
js
and
jmp
jmp
orl
sahf
ret
pusha
pusha
cmp
test
enter
mov
fs
or
pushf
push
jne
sahf
sub
xor
and
fs
pushl
pop
add
icebp
inc
dec
jg
mov
fisubrs
xchg
inc
and
pop
push
mov
inc
push
jg
push
adc
es
mov
out
push
clc
clc
or
add
rcrb
mov
rorb
int3
mov
ror
inc
subl
cltd
xor
xchg
movsb
xor
mov
in
add
add
and
dec
and
cmp
jns
ret
inc
roll
fs
sub
adcl
divl
sub
outsb
dec
and
rcrb
in
insl
fmuls
and
cmp
mov
or
lret
rcrl
jb
xchg
leave
mov
jbe
mov
push
adc
jnp
push
aad
nop
xchg
add
push
lds
mov
negl
xchg
mov
into
pop
clc
and
in
and
mov
add
cmp
dec
or
ret
fisttpll
repnz
mov
mov
add
out
mov
sahf
push
or
dec
das
daa
sbb
add
divb
int3
imul
push
dec
fnstsw
xchg
push
test
xchg
pop
adc
adc
je
and
cmp
fs
adc
js
mov
lds
xchg
xchg
inc
adc
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
xor
push
sbb
or
out
sub
or
mov
push
jne
sti
mov
inc
leave
push
inc
arpl
push
and
lea
or
inc
and
inc
mov
xchg
xor
mov
cmp
ds
nop
mov
jae
leave
test
add
je
and
pop
loope
test
mov
push
outsl
sub
or
mov
insb
and
imul
add
lods
sbb
sbb
out
dec
add
ret
ret
mov
aam
mov
push
adc
pop
jo
adc
or
or
push
add
mov
xor
and
js
jg
push
test
push
xchg
sahf
inc
sbb
adc
rcl
xchg
inc
sbb
fcompl
test
mov
adc
dec
mov
xchg
lock
jmp
pusha
adc
jge
sahf
in
test
leave
mov
add
push
hlt
sub
push
sub
sbb
fmull
cmp
mov
add
add
js
negb
sbb
inc
pop
test
les
add
and
pusha
pop
jl
and
stos
jne
jno
in
movsl
adc
leave
call
adc
and
ljmp
inc
lahf
cmpl
cld
shl
add
xor
lea
jge
jecxz
push
je
mov
add
dec
pop
inc
inc
push
mov
fldenv
sbb
mov
inc
je
leave
mov
and
mov
push
cwtl
shll
aam
nop
sar
fisubl
add
dec
cmc
stc
push
shlb
xchg
xorl
fisttps
pop
ja
xorl
test
or
or
mov
shlb
push
inc
addb
testl
je
inc
les
outsb
fcoml
addr16
loopne
mov
cmp
lret
mov
decl
insb
es
jne
mov
jmp
sub
and
xor
xor
mov
gs
adc
pusha
jne
push
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
sub
insl
test
or
aam
sub
sbb
or
loopne
lret
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
imul
and
or
clc
jle
add
xlat
rorb
mov
cmp
and
lea
test
pop
ret
shrb
scas
push
inc
pop
or
jecxz
add
loope
sub
mov
pop
and
inc
xchg
test
rcrl
xchg
pop
jmp
out
push
cwtl
jp
ds
xor
adc
fcmovu
add
add
inc
and
dec
cmpb
fdivrl
xchg
fcom
es
cwtl
shlb
and
add
sbb
adc
lahf
or
fcom
repz
push
fisttps
ficompl
outsl
movsb
mov
jp
aas
sub
leave
cmp
jecxz
inc
inc
ljmp
jge
mov
sub
adc
aam
push
push
pop
add
mov
push
xor
sbb
lods
bound
push
mov
fnsave
jp
mov
imul
hlt
pop
es
adc
mov
cs
adc
movsl
add
xchg
js
dec
sub
sub
mov
sub
leave
subb
push
or
or
or
inc
hlt
aas
mul
fldl
xchg
add
and
ljmp
jl
lret
addr16
and
test
jl
ret
adc
movsl
ja
pop
xchg
or
mov
incb
xor
cmp
je
or
inc
xchg
in
jb
rolb
sbb
ret
mov
movb
iret
call
ret
xor
hlt
jae
movsbl
outsb
clc
or
sbb
inc
mov
std
dec
sarl
rorb
add
sbb
sbb
bswap
push
das
jmp
call
inc
incl
ret
jmp
shll
jmp
push
or
add
inc
cmp
jl
cmpl
inc
call
inc
cltd
and
add
sar
add
test
clc
mov
pop
xor
ss
cmp
jecxz
lahf
lods
add
add
or
enter
adc
or
jne
add
or
pop
sahf
lret
test
push
rcl
les
push
add
sbb
push
pop
mov
cmpb
sub
jbe
in
hlt
pop
jo
shld
lea
jne
push
pop
inc
adc
roll
sub
cwtl
idivb
mov
push
cmp
jl
sub
outsb
pop
pop
jle
insb
aas
mov
je
rorb
pushf
push
lds
xchg
cli
js
push
mov
add
fildl
aas
arpl
ret
pop
cmp
pop
aam
repnz
imul
lahf
rolb
lahf
push
ret
or
fsts
adc
rclb
dec
leave
xchg
icebp
pop
inc
test
add
cs
adc
xor
stos
shll
pop
ficompl
ss
mov
pop
cmpsl
push
xor
in
push
xor
mov
adc
xor
pop
in
dec
leave
sbb
pop
push
cmp
ret
mov
sub
and
and
add
sbb
add
mov
cld
ret
jnp
sbb
jecxz
add
adc
pop
push
jmp
test
push
pushf
sub
mov
pop
in
push
insl
jp
enter
mov
pop
outsb
dec
fidivrs
dec
pop
add
push
jmp
push
add
dec
dec
in
push
push
cwtl
sbb
xor
add
movsb
sbb
add
addb
ret
xchg
mov
cs
mov
dec
js
inc
lds
stos
cli
cmp
movl
int3
pop
out
outsl
mov
ss
jns
lret
add
add
add
aas
in
push
arpl
and
stc
dec
xor
sub
and
mov
lea
movsb
pop
in
xor
scas
or
lret
roll
fistps
je
push
pushl
adc
fsubr
rclb
insb
jecxz
aas
leave
pop
dec
out
int
fbstp
popf
fcomi
and
dec
mov
sbb
xorb
push
cmp
mov
dec
push
dec
cmpb
les
test
dec
or
js
push
call
rcl
jbe
fisttpll
inc
ret
add
mov
cmp
jecxz
je
pop
jp
mov
add
dec
and
dec
int3
add
aad
mov
das
push
daa
mov
add
mov
fisubl
inc
mov
mov
inc
test
dec
repz
roll
je
dec
insb
adc
pop
jb
mov
cmp
mov
fisubl
inc
push
push
pop
aam
scas
dec
jae
inc
mov
mov
xorb
push
sbb
mov
fs
push
jmp
mov
daa
adc
add
pop
outsb
push
xlat
push
and
dec
lahf
push
cmp
pop
shlb
pop
mov
jae
aad
loope
cmp
xchg
lret
dec
int3
int3
add
mov
pop
mov
cltd
ljmp
sti
lcall
daa
jo
jg
sub
fldenv
mov
add
je
dec
fsubr
add
lods
cmpsl
call
jl
js
out
das
addb
mov
or
es
cmp
test
jo
and
in
pop
rcll
nop
add
insl
mov
push
xchg
divl
push
inc
xor
aam
add
lods
jle
rclb
loopne
or
add
cli
mov
test
sbb
bound
fistpll
clc
jl
cwtl
loopne
fdivrl
mov
jge
sub
ror
add
sbb
je
cmp
daa
movsbl
jo
mov
call
fdivrl
mov
add
mov
adc
insb
lock
out
test
sbb
lret
movb
bound
push
cmpsl
add
enter
add
add
and
dec
cmp
mov
mov
jp
popf
and
cmp
sbb
and
mov
jmp
add
sub
sub
cmc
dec
mov
fstps
outsb
xor
add
mov
loope
inc
aas
cld
les
cld
push
inc
lahf
push
xchg
xor
iret
inc
cmp
cmp
or
xchg
adc
adc
inc
and
rcrb
inc
int
aad
in
adc
pusha
xor
inc
movl
mov
lcall
push
and
pop
adc
jg
into
je
bound
jnp
cltd
pushl
test
mov
mov
clc
pop
cmpb
mov
sub
and
ret
push
sub
jno
incb
cmp
add
push
mov
dec
lods
dec
mov
mov
xchg
outsl
jmp
sldt
movzbl
mov
inc
mov
mov
cmp
mov
scas
dec
clc
addl
int
mov
add
jle
sub
push
icebp
or
sbb
pop
jae
xchg
add
push
mov
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
push
inc
adc
mov
inc
call
jne
pop
das
or
jecxz
mov
mov
fwait
aam
or
push
les
into
in
pop
mov
mov
inc
data16
insb
into
push
cmp
shlb
add
xor
jb
cwtl
push
mov
test
dec
cs
add
in
dec
push
mov
inc
jecxz
adc
push
les
adc
frstor
push
mov
fcmovb
insl
sahf
mov
cmp
push
enter
std
and
fbstp
scas
mov
es
mov
in
popa
sub
and
inc
xlat
mov
adc
xor
inc
pop
mov
test
lock
mov
movsb
xor
dec
jl
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
rorl
and
int3
fsubs
adc
call
popf
lret
push
out
movsl
ljmp
je
in
loop
rclb
mov
sbb
scas
mov
sbb
or
iret
xor
je
das
test
jb
mov
or
stc
sub
outsl
lock
lret
lea
cmp
jbe
cmp
jbe
mov
sbb
lods
dec
push
and
mov
jle
add
lods
xor
mov
mov
xchg
and
dec
add
roll
lret
add
pop
xchg
push
test
or
lea
jle
lock
icebp
cmp
push
testl
fsts
fwait
jae
call
push
push
push
cmc
dec
push
iret
cmp
in
and
adc
test
and
mov
sbb
test
push
addr16
pop
ret
and
enter
or
mov
fsts
lods
test
mov
mov
sahf
push
fcoms
mov
mov
clc
xchg
je
loopne
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
int
mov
cli
mov
mov
sub
or
loopne
ffree
add
in
mov
andb
shl
mov
mov
and
jae
sbb
push
mov
mov
aas
jb
mov
sub
add
xor
adc
add
and
push
cmp
push
or
adc
inc
xchg
cmpsb
sbb
adc
mov
push
xchg
aam
cmp
add
mov
jp
add
insb
mov
and
aad
and
mov
outsl
cmc
pop
pop
and
jo
fisttps
out
test
jmp
push
stos
rclb
inc
enter
cmp
add
cmp
vmptrst
jle
xor
xchg
mov
adc
or
dec
std
in
sub
lods
add
fstl
nop
mov
mov
popf
mov
add
enter
adc
mov
adc
loopne
mov
outsl
dec
sti
incb
add
lods
xor
mov
sbb
movsb
ret
shrb
stos
jle
add
rolb
inc
fsubrs
add
push
aam
mov
xchg
shlb
adc
out
add
roll
jbe
xchg
adc
xor
iret
sbb
or
out
fmull
pop
fs
jae
mov
je
jmp
movswl
mov
inc
outsl
cmp
add
push
cmp
mov
or
lret
maxps
mov
mov
sbb
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
push
ljmp
cmp
adc
xchg
dec
pop
mov
cmp
daa
add
jbe
pop
imul
jmp
cltd
add
sbb
push
insb
or
sub
add
les
add
jo
fisttpll
or
push
pop
je
lds
ret
repnz
mov
add
lahf
mov
add
popf
lea
cmc
fcmovb
lea
cli
mov
mov
mov
or
push
scas
sub
insl
rorl
xchg
outsb
out
lcall
je
daa
xchg
pop
xchg
or
imull
out
int3
or
add
push
pop
dec
adc
test
gs
lods
pop
mov
inc
loopne
push
push
movsb
je
mov
incb
js
mov
call
mov
and
test
jmp
push
adc
test
or
call
iret
xor
xor
push
push
adc
mov
pop
mov
push
lods
sbb
lahf
imul
dec
jo
scas
lods
push
pushl
rclb
or
inc
pushl
jne
cmp
jbe
add
mov
jmp
push
pop
push
sbb
jmp
fldcw
ja
cmp
adc
lret
ds
lcall
cmp
sub
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
imul
push
pop
mov
leave
sub
push
xchg
cmpsb
out
push
sarl
or
cld
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
in
push
call
cmp
sbb
and
jmp
add
cli
call
mov
inc
rcrb
js
rcrl
xchg
enter
xchg
add
add
jae
push
jp
xor
or
or
ficompl
dec
or
adc
aas
jmp
mov
xchg
adc
mov
es
jo
adc
nop
cmp
repz
cltd
pop
or
in
jmp
push
mov
adc
in
fiaddl
mov
xor
dec
clc
add
inc
xchg
jge
and
and
xor
mov
sbb
shll
dec
bnd
pop
sub
daa
inc
test
xor
shll
testl
jae
adc
iret
add
sbb
in
fildll
push
fiaddl
cmp
into
adc
gs
xor
insl
jns
add
mov
push
and
push
sbb
mov
cmp
aaa
push
push
adc
mov
loope
adc
mov
pop
sbb
xchg
mov
adc
lea
mov
ds
or
ret
adc
pop
and
adcl
subl
push
ffreep
xor
loope
push
jo
movsl
jae
jmp
add
and
stos
and
push
fs
ss
xor
lea
or
mov
sbb
fwait
sbbb
pop
xor
mov
add
add
pushf
mov
or
movsb
fwait
and
dec
jno
push
js
ljmp
test
pop
xchg
jge
cld
mov
push
push
sbb
adc
testl
push
out
lea
mov
or
loopne
pop
mov
or
inc
jo
add
mov
adc
imul
jne
std
adc
fidivl
stos
test
hlt
sub
and
push
mov
dec
jmp
cltd
push
dec
sbb
test
lahf
enter
mov
out
cmp
adc
sbb
jb
mov
test
imul
call
push
xchg
leave
aam
mov
inc
loope
dec
jb
and
ret
in
ret
ficoms
popa
stos
fdivrs
inc
mov
and
mov
sbb
add
ja
pusha
mov
pop
push
cmp
sub
jp
pop
and
cmpl
rcrb
and
inc
das
cs
inc
sub
lock
or
data16
sbb
arpl
aaa
mov
pusha
roll
decl
ret
int3
add
shlb
jb
xchg
mov
or
dec
sub
imul
mov
mov
js
adc
add
mov
pop
ret
fadd
and
fsubr
pop
and
jecxz
sub
xor
mov
jmp
add
push
push
jo
insb
cmp
shlb
jbe
mov
cwtl
pop
dec
mov
orb
in
outsb
mov
lea
iret
movsb
dec
sbb
lock
pop
rclb
and
or
push
push
stos
or
ds
push
xchg
or
xor
into
jmp
lock
ss
push
cmp
jb
cmp
leave
rorl
adc
sahf
cmp
aaa
popa
push
ret
cmpsb
mov
push
dec
je
add
add
add
cs
stos
or
push
inc
or
add
adc
bound
cmp
sar
adc
repnz
jmp
push
mov
jmp
add
mov
mov
mov
icebp
sti
mov
filds
or
mov
cmp
or
out
cmp
je
cmp
jne
mov
sbb
add
negl
lea
sarb
dec
xor
mov
cmpsb
push
jmp
testb
je
testl
jbe
sbb
add
inc
mov
or
stos
xchg
mov
jg
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
xchg
dec
sbb
imul
or
mov
adc
loopne
push
xor
push
mov
hlt
pusha
sub
push
fiaddl
push
sti
cmp
outsb
hlt
cmpb
add
mulb
pop
les
xchg
push
and
insb
lods
mov
ja
js
icebp
and
sub
cmp
xor
mov
push
jp
insb
add
inc
cld
rcrb
dec
nop
popa
mov
in
cmpl
inc
stos
loop
loopne
jne
mov
dec
inc
insl
sbb
vphaddbq
mov
popw
adcb
inc
add
jae
movl
xor
mov
jecxz
add
jmp
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
mov
push
and
pusha
shll
call
mov
mov
mov
cmc
lret
xchg
inc
jg
or
jge
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
xor
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
subb
rorb
and
icebp
push
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
sbb
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
mov
inc
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
popa
or
mov
fiadds
xchg
xchg
out
aam
inc
mov
push
fcom
enter
inc
leave
or
cwtl
test
adc
add
je
hlt
ljmp
jmp
out
test
push
inc
loop
sahf
mov
imul
push
jbe
inc
inc
xchg
mov
jmp
jg
pop
push
shrl
in
cmp
push
and
mov
loop
mov
cmp
cwtl
xor
jecxz
or
add
mov
sbb
loop
test
cmp
mov
mov
out
push
xchg
out
xor
data16
out
ds
pop
addb
mov
jns
pop
lea
out
xchg
sub
rolb
xor
cmp
lds
jmp
andl
adc
imul
aaa
jp
addr16
or
dec
or
adc
cmp
test
insl
iret
ret
xchg
imul
lods
inc
push
mov
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
xchg
add
inc
xchg
adc
jle
push
mov
mov
mov
push
add
mov
pushf
outsb
xchg
mov
mov
push
rcrl
outsb
les
mov
pop
outsb
je
pushl
je
push
mov
push
testl
jae
and
push
cmpl
push
hlt
inc
add
cmp
int
jbe
pop
psubd
lea
inc
pop
data16
pop
imul
out
sbb
xchg
pop
push
inc
fcmovbe
pop
ja
pop
mov
jbe
mov
jge
push
gs
add
inc
inc
fwait
cmp
add
xchg
pop
pop
jle
mov
cmp
stc
cmpsl
popf
push
push
or
xor
int3
cmc
add
movsl
xchg
stos
pop
adc
xor
xchg
sbb
clc
fisubrs
push
test
dec
push
mov
inc
jmp
xor
addb
push
fs
push
into
leave
dec
adc
inc
push
nop
pop
xor
push
dec
mov
add
cmp
pop
mov
cwtl
popa
or
mov
test
clc
mov
das
and
fmull
pusha
mov
stc
push
sbb
push
or
push
inc
push
in
mov
or
push
or
add
sahf
mov
mov
push
aaa
les
icebp
orl
add
push
add
add
pop
add
push
cltd
aaa
inc
dec
cmp
ljmp
test
jp
adc
push
ret
or
sti
pusha
jb
loopne
out
pop
fmull
adc
shll
push
add
daa
sbb
cli
cmc
push
adcl
fcoml
lods
mov
mov
dec
dec
dec
add
push
and
inc
or
in
pop
es
push
ljmp
push
clc
mov
rclb
scas
lock
pop
cmp
cld
jle
push
movb
push
popf
test
cmp
add
dec
and
mov
pop
add
fwait
cmp
insb
fsubs
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
pop
xor
adc
sbb
jl
mov
and
cmp
adc
cmp
mov
mov
fmul
mov
inc
addr16
imul
push
jp
jecxz
mov
movsb
dec
add
mov
mov
dec
xchg
jo
scas
sti
push
add
pop
cwtl
cmpl
dec
push
cmp
imul
push
push
lret
cwtl
adc
dec
gs
call
sar
pop
mov
das
dec
push
sti
sbb
js
js
test
imul
es
andl
push
add
inc
xorl
or
inc
nop
dec
rolb
add
jmp
bound
and
push
cmp
mov
add
push
inc
mov
or
ja
or
xlat
cmpsl
popf
jne
push
pop
lahf
inc
adc
cmp
mov
pop
sahf
sarl
cmp
in
pop
mov
push
xchg
dec
adcl
cmp
adc
xchg
rorl
push
adc
mov
push
ficoml
mov
out
lret
jnp
pop
mov
popa
mov
dec
mov
icebp
nop
mov
fwait
xchg
xchg
cmpsl
mov
lcall
push
aas
je
cmp
push
pop
jne
mov
dec
movsl
aam
cmpsl
jne
push
in
clc
xor
pop
jne
pop
pop
lret
call
test
xorb
insl
in
sbb
shr
xor
loop
jne
pusha
cltd
jecxz
jmp
sbb
sub
mov
xchg
sub
mov
inc
adcb
xlat
or
cmp
pop
lea
fldl
add
je
inc
mov
sub
stos
mov
pusha
pop
je
imul
movsl
mov
jmp
arpl
mov
jae
scas
jg
xchg
dec
in
add
sbb
sbb
roll
xlat
jbe
inc
enter
enter
decb
adc
or
adc
or
pop
push
adc
xchg
pop
fimuls
orl
sbb
pop
cmc
shl
fs
push
add
decb
rcrb
ret
push
bound
adc
rolb
push
mov
mov
cmp
std
mov
pop
loopne
mov
add
repz
movsl
ret
fstpt
add
inc
arpl
mov
mov
push
add
in
or
push
jno
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
mov
rorb
sub
xchg
cmp
add
add
insl
enter
xor
mov
or
popf
mov
lret
dec
cmpsb
jecxz
enter
push
mov
jmp
push
rcll
lcall
mov
sbb
adc
mov
fs
push
pop
sar
push
in
push
or
inc
adc
imul
sub
int3
adc
cmc
test
outsb
in
test
and
cld
scas
stos
insb
or
or
add
daa
mov
cmp
xor
es
jb
js
xor
sbb
mov
pop
es
xor
or
inc
outsb
mov
cli
jp
push
pop
jmp
or
stos
mov
je
scas
xor
into
or
sti
and
add
or
sbb
daa
frstor
or
je
dec
push
gs
insl
test
ret
lock
jbe
cmc
lock
lock
xor
sti
or
enter
sti
movsl
cmp
dec
pop
push
mov
pop
mov
pop
mov
or
mov
xlat
popa
pop
dec
or
inc
ret
popa
cmp
cmp
test
ffree
xor
lret
je
add
xchg
in
and
push
mov
dec
cld
outsl
sub
dec
add
dec
add
fimull
adc
in
in
lret
mov
loopne
jne
or
inc
addb
je
jg
mov
addb
xchg
adc
xchg
test
nop
mov
cmp
mov
sbb
sub
les
inc
pushf
add
pop
sbb
xor
push
sar
cmp
sbb
test
add
ficoml
fisubl
sbb
sbb
pop
je
jnp
sbb
adc
ds
add
push
jae
add
popa
xchg
faddl
dec
rcrl
call
mov
lock
cmp
jne
or
clc
adc
add
inc
pop
pop
into
jbe
jo
movsl
imul
mov
sbb
int
test
test
cmpb
orb
daa
cs
lcall
xor
aas
mov
or
andl
shlb
iret
xlat
or
incl
cmp
inc
test
or
mov
mov
stos
sub
mov
leave
or
mov
jmp
dec
in
subb
or
es
clc
mov
dec
hlt
cmpsb
int
cltd
mov
ja
xor
divb
push
fildl
aam
inc
jle
or
push
inc
add
loopne
add
cmp
mov
push
add
rorb
out
leave
inc
cmp
sar
xchg
rorl
hlt
adc
mov
sbb
cli
hlt
lcall
mov
mov
sub
inc
inc
mov
hlt
cmp
ljmp
push
mov
enter
pop
mov
pop
push
adc
add
icebp
sbb
js
or
mov
push
jecxz,pt
mov
cld
mov
cmp
outsl
mov
and
call
push
es
xlat
subps
sar
push
popa
pop
xor
pop
lea
add
push
orl
int
and
scas
pop
popf
out
push
pop
sub
cmpl
sbbb
adc
push
push
xor
fwait
jbe
adc
test
add
cmc
add
add
inc
into
push
or
scas
jle
out
adc
inc
aam
inc
pusha
scas
xchg
push
add
bound
jns
enter
imul
dec
and
mov
adc
movsl
xchg
loopne
fsubl
addb
sub
sbb
clc
adc
ja
fdivs
test
in
adc
pop
sbb
push
pop
push
test
pusha
es
add
mov
adc
bound
adc
movsl
adc
inc
jp
xor
pop
jmp
sub
push
push
iret
xchg
adc
push
popa
fwait
in
sbb
and
inc
add
dec
push
loope
lock
mov
mov
aam
fidivl
mov
adc
mov
and
add
add
ret
jmp
mov
sub
sbb
sbb
gs
adc
mov
orb
or
bound
mov
sbb
jmp
dec
dec
jne
jns
aam
and
nop
mov
inc
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
stc
imul
adc
xor
inc
test
es
add
fadd
iret
in
fdiv
fildl
and
xor
jnp
sbb
shlb
loopne
loopne
mov
fcmovb
jo
and
and
mov
jmp
roll
xor
xchg
arpl
rcrl
xlat
push
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
pusha
inc
cmp
cmpsb
push
testb
loope
pop
pop
orb
pop
clc
sbb
add
and
movsb
mov
adc
test
xchg
adcl
sti
movl
sbb
sbb
sahf
xchg
rol
mov
xchg
stos
imul
xor
dec
mov
add
xor
out
jge
sbb
and
sub
and
in
dec
fsubr
rep
ret
cmp
xchg
add
jg
fadds
cmp
rclb
pop
add
jmp
add
dec
clc
inc
push
xor
cmc
ds
enter
add
clc
test
cs
push
xor
pcmpeqd
mov
jne
jmp
push
xchg
mov
in
mov
pusha
push
dec
es
dec
and
mov
or
dec
lds
aas
ret
or
pop
rclb
je
sbb
mov
clc
or
sbb
mov
cwtl
hlt
sub
push
cmp
add
sbb
xor
sbb
sbb
int3
gs
lods
add
and
pop
inc
push
cmp
add
test
inc
ljmp
add
daa
mov
xlat
mov
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
xor
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
loopne
clc
lea
cmp
repnz
jo
daa
xchg
aad
mov
xor
popa
and
jge
cwtl
and
jne
push
data16
inc
ret
nop
push
add
push
push
push
mov
add
clc
sbb
mov
xchg
xlat
lds
pop
ret
pushl
push
iret
outsl
pop
ja
xchg
lods
cmpsl
jo
movb
call
jo
push
add
xorl
stos
inc
adc
insb
jne
or
test
loop
loopne
push
fs
imul
movsl
mov
imul
adc
sarl
and
cmp
pop
iret
mov
mov
lods
ljmp
push
popa
je
jno
pop
movsl
mov
js
mov
dec
loopne
xchg
fsubr
mov
xor
cmp
sub
nop
xor
loopne
push
push
adc
sub
xchg
or
clc
call
sub
push
cmp
cmp
loopne
mov
in
xor
scas
sub
ja
lcall
rcll
insb
cmp
push
mov
jno
mov
cld
sbb
mov
sub
jnp
sahf
sub
adc
add
cmpsb
or
or
jmp
jo
lods
aad
scas
add
jb
pop
pop
scas
sub
stos
sub
push
lds
in
add
xchg
xlat
js
rcll
lods
hlt
push
cs
ds
cld
adc
dec
scas
cmp
subl
push
test
nop
sub
iret
or
fs
pop
jne
adc
xor
add
popa
xchg
jmp
dec
sahf
cmp
push
inc
fists
jp
jo
aaa
jbe
push
and
xlat
imul
push
pop
sbb
push
mov
sbb
xchg
sbb
mov
add
inc
sub
testb
adc
ret
xchg
mov
add
xchg
bound
add
push
adc
enter
imul
push
xor
cmp
das
mov
out
popf
enter
and
pop
clc
add
aam
mov
test
inc
sbb
mov
mov
arpl
add
cmp
inc
xor
mov
lcall
lock
movsl
cmp
push
push
xor
cmp
mov
fsubrl
sbb
xor
dec
insb
mov
push
jns
mov
stos
sub
ret
cmp
sbb
arpl
loope
push
lods
or
in
aam
test
cmp
add
push
outsb
or
pop
cmp
cmp
mull
outsl
test
fdivrs
fs
xor
dec
and
shll
stos
adc
inc
sbb
out
mull
push
shl
jge
das
push
add
leave
outsb
imul
pop
pop
leave
mov
aam
dec
cmp
cmc
testb
das
and
fstl
movl
addl
dec
inc
inc
movsl
dec
xchg
imul
out
or
imul
inc
sbb
push
push
xchg
cmp
cmpb
pop
je
pop
inc
movsl
faddp
mov
cwtl
ficoml
add
stc
add
mov
pop
push
inc
mov
jp
ret
mov
pop
mov
or
adc
push
and
rclb
add
outsb
dec
inc
sub
fldt
dec
cli
lcall
xchg
adc
mov
jno
inc
mov
sub
sbb
sbb
mov
dec
xor
or
cmp
stos
inc
or
and
adc
xchg
sbb
mulb
pop
mov
sub
dec
movsb
pop
cli
outsb
aam
mov
and
push
and
inc
inc
dec
jns
or
aas
test
push
push
adc
mov
sbb
mov
je
add
dec
subb
shlb
pop
lret
fstpl
mov
xor
mov
cmp
shl
sbbl
js
push
jge
adc
mov
lods
je
shrl
xchg
pop
mov
int
mov
repz
insb
lods
xchg
hlt
push
lea
mov
loopne
shll
bound
jo
test
adc
add
inc
cmpl
cmp
adc
and
adc
pop
inc
inc
xor
in
inc
push
cmpl
adc
jne
adc
or
ja
and
mov
and
adc
pop
or
ss
inc
pushf
pop
dec
jge
lods
fs
inc
lods
add
out
fsubl
lods
or
inc
shlb
ds
insb
inc
dec
test
vpmacsswd
or
cltd
jmp
sbb
mov
xchg
fsubrl
push
push
aaa
test
push
sub
lods
add
xor
out
pop
push
cli
or
xor
mov
or
pop
jmp
adc
clc
push
fisubl
push
xchg
clc
jne
pop
xchg
mov
lods
scas
jge
into
out
push
aam
push
xchg
mov
jmp
adc
cmp
or
mov
fildll
inc
and
sbb
jns
xchg
adc
and
jmp
andb
pop
icebp
adc
or
cmpsb
dec
cmp
and
clc
sahf
inc
loopne
mov
add
call
push
pop
jbe
movsb
xor
sub
pop
sahf
pop
jbe,pn
fdivl
ret
and
or
mov
dec
pop
pop
mov
xorb
je
xchg
mov
shll
jno
fidivrl
sub
sub
int
cmp
orl
test
mov
mov
jne
cmp
push
adcb
jo
or
xchg
push
ret
push
dec
add
movsb
aam
push
xchg
sbb
xchg
and
or
mov
mov
jp
mov
insb
pop
shlb
mov
add
add
out
es
cmpsl
mov
xchg
call
cmp
and
cld
rolb
cmpl
add
jmp
mov
mov
bound
cwtl
pop
mov
andb
mov
adc
pusha
orl
and
arpl
mov
jo
loope
in
xor
cltd
cltd
push
or
mov
mov
inc
cs
fwait
sub
pop
dec
xchg
or
bound
divb
jo
popf
lds
int3
pushf
mov
sbb
sub
sbb
fs
test
jns
ret
mov
mov
cwtl
sbb
cmp
xor
je
lea
test
push
or
pop
mov
xchg
jne
jo
test
xor
and
and
outsb
scas
add
or
sbb
test
push
jl
insl
stos
rclb
roll
sub
cmp
rcrb
jbe
sub
add
mov
mov
sub
aaa
push
pop
or
add
lds
ljmp
popa
push
inc
push
sarb
and
jb
mov
repnz
push
stos
or
rcrl
dec
sbb
jo
mov
xchg
mov
int3
imul
lods
cmp
push
push
cwtl
add
hlt
insb
jmp
ds
jne
sti
xor
push
cld
add
aam
test
dec
add
mov
ds
aam
lods
pop
xorl
pop
fstpt
mov
or
add
sbb
sbb
sbb
xchg
cmp
leave
mov
loopne
jmp
cmp
daa
or
mov
pop
xchg
add
jne
ret
rcl
mov
or
adc
and
sarl
jns,pn
and
adc
xchg
movsl
arpl
add
je
inc
adc
and
out
adc
adc
adc
inc
in
push
fs
out
mov
mov
mov
enter
push
ds
dec
mov
cs
dec
sub
pop
sbb
xor
dec
clc
sub
pop
sar
aas
mov
mov
adc
pop
pop
enter
adc
mov
adc
gs
dec
adc
adc
adc
adc
mov
sbbb
clc
push
push
in
fcomps
fsubrs
mov
inc
cs
out
add
and
ret
lcall
push
xor
push
cmp
inc
xor
fldt
push
jne
leave
pop
pop
scas
jo
jo
inc
sub
lret
sub
xchg
inc
mov
sbbb
push
xchg
fs
lock
dec
inc
and
das
jmp
cmp
sti
add
bound
dec
cld
cmp
add
xchg
fcoml
dec
cmp
fmuls
movsb
andb
jge
cmpsl
js
in
lea
test
mov
inc
xchg
movsb
stc
mov
jmp
push
das
mov
fists
fistps
adc
push
dec
xchg
xchg
xchg
insl
loopne,pn
mov
inc
push
add
xor
add
loopne
mov
sbb
outsb
lock
jne
mov
sub
sbb
test
xchg
mov
inc
pusha
popf
in
ja
jb
inc
push
cld
jnp
push
test
pushf
ss
and
jmp
mov
imul
push
aam
sahf
mov
push
xchg
push
xor
jne
push
sub
jmp
mov
push
mov
push
add
rorb
iret
nop
mov
mov
test
insb
aam
mov
dec
pop
jg
and
mov
inc
or
xor
cmpsb
push
pushf
int
ja
mov
xor
dec
cmp
mov
js
sbbb
inc
sbb
mov
into
and
adc
adc
aam
inc
rcl
and
push
jnp
fcom
dec
pop
jne
add
cmp
push
mov
mov
stos
mov
mov
adc
push
negl
mov
xlat
mov
cmp
pop
push
xor
cmp
into
scas
test
repnz
add
cmc
aam
sbb
loopne
pop
mov
sbb
push
je
stos
sbb
cmp
mov
push
js
clc
daa
and
es
sbb
push
push
negb
jge
dec
add
test
iret
or
les
push
fldt
and
das
dec
mov
sbb
pushf
adc
sbb
scas
insl
fnsave
jle
mov
test
add
repnz
jp
enter
lods
fstps
shlb
or
out
sbb
repz
adcl
add
arpl
xor
clc
add
lret
add
or
repnz
pop
dec
test
int3
and
out
std
ret
test
test
jge
and
pop
push
scas
add
dec
pop
in
cmp
lods
adcb
sub
repz
add
rorb
sub
push
pop
mov
or
stos
jno
movsl
rol
mov
dec
insb
sub
xor
rorl
lahf
adc
pusha
dec
pop
mulb
cmpsb
sub
ljmp
scas
push
adc
push
dec
inc
std
rorb
push
int
ret
pop
repnz
cmp
add
js
xchg
mov
dec
add
pop
adc
outsb
add
add
mov
push
xchg
repz
add
clc
out
pop
mov
test
je
push
push
mov
sti
gs
cmpl
push
mov
dec
add
or
jb
ljmp
loopne
iret
adc
or
and
outsl
mov
ja
pop
rorl
into
or
sbb
loopne
cld
cs
cmp
push
loope
or
mov
insb
xchg
xor
loop
xor
cli
mov
jmp
push
std
pop
mov
psubw
mov
jns,pn
mov
pop
add
bound
scas
dec
rorl
xlat
mov
out
call
inc
aaa
mov
neg
push
or
inc
push
or
mov
push
bound
dec
vpsrad
xchg
pop
push
shl
dec
mov
ljmp
xor
push
rcll
outsb
pop
pop
repnz
loope
pop
sub
dec
sahf
andb
pop
jno
dec
push
bound
xor
lea
arpl
in
and
cmp
jne
orl
bound
movsl
jecxz
mov
repnz
mov
mov
mov
aad
stos
add
andl
test
clc
lea
xor
pop
daa
adc
adc
mov
pop
clc
jecxz
inc
jo
adc
fisttpll
push
lea
mov
pushf
aam
jmp
fisttps
mov
add
xchg
xor
test
push
add
pop
mov
push
es
es
inc
loopne
mov
inc
test
inc
addr16
mov
push
clc
js
mov
bound
rcll
dec
les
pop
incl
jmp
pop
mov
loope
js
in
sub
or
aad
xchg
imul
mov
adc
sub
jne
sub
add
and
and
xor
cltd
sarb
sbb
push
or
add
add
pop
add
icebp
je
xor
jecxz
push
leave
and
adc
bound
adc
shll
and
xchg
aas
adc
inc
jle
ja
xor
rorl
xchg
inc
inc
add
stos
dec
inc
test
add
dec
inc
test
int
add
sbb
sbb
cltd
inc
add
sbb
adc
adcl
sub
dec
xor
fisttpl
xor
inc
std
jl
jmp
jge
aad
adc
or
or
jne
shlb
sub
push
or
insb
rol
sub
dec
je
dec
add
enter
testb
inc
orl
sarb
cmpsb
inc
rcrb
lds
inc
in
repz
js
jae
lea
jmp
cmpl
pop
sbb
sub
shll
loop
xor
loope
xchg
push
mov
lods
push
mov
rorb
in
sub
sub
in
jbe
nop
lcall
inc
pop
add
or
js
adc
jne
xchg
hlt
mov
sub
or
in
adc
add
jg
push
or
pop
js
hlt
sub
pop
pusha
insb
movsb
mov
push
inc
sbb
xchg
lock
sub
push
arpl
or
add
sarl
add
xor
cltd
sbb
sub
jne
or
or
sub
cmp
add
sbb
pusha
inc
sbb
lods
pop
cld
push
nop
popa
pop
add
lahf
or
repnz
and
lea
cmp
shr
int3
test
je
rolb
cmp
mov
adc
sub
shl
dec
jecxz
stc
mov
add
dec
mov
insl
sbb
adc
nop
cmpl
icebp
add
movsl
push
je
cmp
cwtl
xchg
jl
popa
cmpsl
adc
push
jmp
cmp
xor
sbb
js
iret
xchg
js
xor
bound
push
stc
xchg
mov
inc
outsb
or
mov
xchg
add
ja
xchg
adc
and
add
or
fdiv
dec
xchg
popa
sbbb
mov
pop
dec
jb
insl
jge
mov
add
cmp
je
cmp
or
ljmp
mov
add
nop
popa
and
jmp
cltd
cli
std
lea
cmp
inc
and
cmc
std
cmp
pop
dec
inc
mov
inc
es
nop
add
inc
or
pop
js
adc
push
pop
cmpl
int3
push
or
xor
inc
sub
xchg
push
outsl
test
pushf
pushf
adc
jae
push
rcrb
inc
adc
push
in
outsl
adc
das
jae
sub
jmp
aad
or
loop
dec
into
pop
xorl
xlat
dec
subb
jb
test
or
inc
adc
lahf
lods
ret
cwtl
mov
ret
adc
pop
or
inc
mov
aas
jnp
cmp
adc
orb
jo
mov
or
cmp
fdivl
or
je
test
dec
fnstenv
in
bound
clc
jne
mov
push
test
gs
or
sub
push
push
loopne
pop
cmp
stos
or
add
es
nop
test
dec
xor
sbb
xchg
inc
cs
hlt
jns
icebp
sbb
jb
mov
push
mov
ds
pop
pop
adcl
cmp
call
jo
dec
xchg
inc
sbb
mov
ror
sub
pop
and
js
loopne
fnstenv
mov
or
push
mov
in
mov
fcomps
dec
inc
jecxz
sbb
cmpsl
scas
out
or
ja
push
cmp
add
lcall
iret
movsl
push
add
lea
in
outsl
cltd
pop
cs
test
or
pusha
pop
loope
pop
push
sub
gs
and
dec
push
hlt
neg
sbb
and
bnd
loop
idivb
mov
push
sub
push
adc
test
cwtl
pop
ret
mov
inc
cmpsb
test
add
or
test
adc
cmc
ds
pop
xor
add
in
jge
sbb
and
adc
sbb
ss
ret
push
je
sbb
in
mov
outsl
ljmp
pop
cmp
jbe
or
jne
push
testb
cmpsl
ret
test
insb
adc
jle
lret
pusha
testb
add
ds
data16
push
fcmovnb
gs
xchg
popa
loopne
shr
inc
cmc
jmp
pop
jl
fadds
cmp
loopne
or
iret
or
adc
sbb
sbb
fists
pop
cwtl
sbb
mov
mov
cmp
clc
pop
movsl
mov
push
jmp
sarb
adc
mov
and
mov
test
xchg
js
add
add
testb
xor
mov
stos
shlb
negb
mov
shlb
dec
loopne
insb
gs
and
test
ret
jnp
xor
bound
mov
push
hlt
loop
mov
add
inc
daa
sub
inc
in
sub
add
adc
std
xor
mov
inc
and
cmp
or
pusha
adc
sub
inc
adc
cltd
cmp
add
and
pop
jo
mov
inc
adc
push
movsl
adc
mov
sbb
xorb
sbb
leave
ret
jns
mov
movsl
clc
add
movl
pop
jnp,pt
and
xchg
dec
daa
popf
add
pop
frstor
xchg
add
mov
cmp
lods
fmulp
lods
jae
dec
call
lock
fiadds
pop
xor
or
cmpl
xor
adc
add
loopew
add
mov
test
out
aad
add
fs
aas
pop
movb
push
xor
push
xor
mov
pop
fcompl
and
cltd
mov
xor
add
jne
lock
xlat
mov
add
fs
xchg
jne
shl
adc
ror
xchg
iret
push
arpl
fcomp
out
mov
inc
cmp
jae
cmp
je
mov
out
cmp
cld
cs
adc
add
insb
push
iret
xchg
jo
and
ja
push
xchg
pop
mov
or
insb
pop
push
jp
jb
push
jae
dec
pop
movaps
xor
or
pop
je
inc
push
shlb
add
jbe
cmc
rolb
pusha
ss
cmp
cmp
adc
hlt
rcrl
push
jns
or
sahf
jno
sub
xor
adc
xor
outsb
and
cmp
pop
dec
jbe
movsl
out
add
popf
sub
push
and
push
mov
lods
fucom
add
sar
or
push
lods
mov
or
cli
fdivrs
mov
hlt
and
lea
into
mov
mull
sbb
out
in
dec
js
mov
jmp
push
dec
add
das
dec
mov
and
add
pop
xlat
cltd
aam
adc
sub
sub
mov
test
adc
xor
test
loopne
jge
enter
cmpsl
fucomp
cmp
icebp
sub
lret
packsswb
test
jbe
and
fdivl
or
or
xor
and
jb
xor
repnz
roll
jp
addr16
and
lock
dec
pop
jl
sbb
test
and
mov
fcoml
cmp
xchg
xchg
mov
inc
add
cwtl
adc
cmp
inc
lock
add
and
pop
push
inc
fcoms
leave
rcll
fsin
sbb
adc
mov
xchg
js
jno
insl
je
mov
das
pcmpeqb
inc
std
push
add
cmp
out
idivb
mov
out
js
cmpsl
inc
push
aam
inc
inc
testl
fsubs
mov
sarl
fcoml
subb
jle
jp
shl
daa
mov
loope
xor
sbb
mov
scas
mov
mov
and
push
jge
mov
ljmp
xchg
out
fdivrs
cmp
push
cli
and
push
sub
xor
inc
in
je
add
mov
mov
inc
or
sbb
cmp
fisttps
mov
adc
jnp
mov
sub
pop
cmp
pop
mov
mov
adc
mov
enter
xlat
ret
pop
lea
fbstp
call
add
xor
push
pushf
mov
fistpl
cmp
popf
pushf
ficompl
fdivl
je
xor
sub
cmp
pop
mov
push
aas
and
scas
mov
dec
adc
add
mov
jae
lea
ja
cmpb
jne
mov
jne
fsubr
xor
bound
lea
jo
or
dec
xchg
jae
xchg
lret
ret
daa
daa
add
add
ss
mov
lea
rolb
sub
sub
or
dec
mov
test
xor
adc
xchg
bound
jae
call
jae
leave
jmp
push
inc
subl
test
cli
dec
and
dec
sarl
mov
sbb
push
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xchg
lods
aam
cmpsb
pop
movsb
adc
notb
rclb
cld
cmpsb
or
insb
and
mov
je
lea
adc
push
adc
jo
nop
jmp
negb
vmovaps
divb
adc
das
dec
and
sub
inc
push
push
fs
lods
cmp
ret
xor
cmp
enter
pop
push
lea
cmp
push
pop
movsl
sub
popf
jmp
ja
push
loop
or
mov
fisttps
jmp
clc
or
fsub
add
dec
or
add
xor
push
outsl
or
dec
dec
lahf
aam
inc
outsb
mov
add
pop
pop
mov
mov
mov
ljmp
mov
arpl
pop
iret
dec
xchg
ret
sarl
sbb
test
jne
adc
xchg
or
push
lcall
inc
and
xchg
or
data16
cmpsl
add
rolb
add
add
jns
adc
pop
pop
in
mov
mov
je
dec
add
adc
push
pop
ss
fisttpl
orl
push
repz
scas
jbe
sbb
sub
jmp
icebp
add
cwtl
loopne
sbb
arpl
push
mov
adc
orb
js
aas
pop
cmp
mov
mov
es
mov
or
cmp
push
cmpb
ret
push
jae
lea
push
sub
sbb
pusha
stos
lods
mov
push
aaa
stos
adc
popa
cmp
ja
sbb
jnp
dec
pop
ret
mov
sub
ret
out
and
adc
pop
cmpsl
imul
add
cmpb
xor
fnstenv
inc
jmp
into
rcrb
push
cmp
cmp
sub
cmp
movsb
push
dec
cmp
xor
push
sub
addl
add
jo
and
sahf
popf
ljmp
ret
sub
out
push
dec
outsl
adcb
cmc
xchg
jo
push
out
insb
mulb
call
mov
push
cmc
dec
dec
jmp
leave
in
rorl
add
and
push
xchg
fcmovb
mov
push
subl
sub
out
popa
rorb
jb
add
test
lock
adc
icebp
push
lea
js
ret
push
test
out
mov
or
add
xlat
push
cmpsl
and
out
in
mov
push
aad
xor
or
iret
mov
dec
jp
mov
adc
pop
push
jecxz
cwtl
lcall
sub
int
or
jp
rcrl
je
xor
xor
cmp
add
loop
lds
pop
lea
lret
mov
mov
and
andl
fimull
push
mov
cmp
sub
push
inc
ret
pop
or
add
es
xchg
or
arpl
pop
lods
add
loopne
or
sbb
mov
clc
iret
jne
jno
jp
std
cmc
imul
dec
or
cmp
inc
int3
test
mov
add
cwtl
out
addr16
cmpsb
imul
pop
repnz
push
add
stos
and
xor
loop
ret
inc
movb
bound
push
js
jbe
arpl
out
std
push
mov
add
cmp
inc
add
lea
or
fdivr
adc
lock
rcrb
add
adc
push
cmp
cmp
xchg
jmp
inc
test
xor
sbb
rorb
loopne
pop
sbb
add
mov
or
sub
jge
pop
mov
bound
notb
xor
push
cltd
iret
xchg
dec
inc
add
cmp
pop
xchg
cmp
sti
ss
bound
fdivrp
inc
xor
jbe
cmp
mov
push
ret
sbb
mov
cmpl
pushl
rorl
jno
xchg
mov
pusha
jo
adcl
xchg
or
andb
das
in
and
movsl
pop
adc
add
add
jo
insb
lea
fadd
mov
cmc
cmp
fildll
fmuls
loopne
roll
aas
xchg
shll
cmp
hlt
pop
xchg
and
mov
out
lcall
cmc
adc
sbb
mov
sub
mov
sbbl
daa
test
ljmp
mov
jge
inc
sub
les
cmp
add
sub
push
and
dec
inc
pushf
cli
xor
pop
adc
or
mov
dec
fsqrt
addr16
push
mov
inc
test
add
mov
test
mov
and
ja
mov
xor
xchg
pop
pop
sbb
push
xchg
xchg
xchg
out
xchg
cmp
pop
push
push
pop
mov
mov
mov
mov
ret
pop
mov
lods
xchg
push
dec
jmp
leave
test
jne
inc
loop
ja
push
sub
add
sbb
nop
inc
mov
jnp
pop
rcll
test
pop
cmpsb
nop
clc
sti
mov
scas
jle
jne
push
dec
insb
mov
rorl
or
mov
cltd
mov
sub
lock
pop
js
js
cmp
adc
or
mov
push
fcoml
and
jns
xchg
jmp
jae
lcall
adc
aam
pop
fimuls
cmpl
call
stos
adc
adc
push
add
test
push
mov
push
or
pop
sbb
mov
cmp
jne
mov
inc
test
xor
or
cmp
lahf
inc
xchg
ret
mov
test
daa
cmp
xlat
sbb
or
add
cld
pop
mov
xor
inc
xchg
pop
fnstenv
push
mov
dec
popa
add
or
adc
in
jae
sub
iret
mov
fildl
mov
jo
rcrb
aaa
pushf
inc
adc
pop
pusha
dec
out
fwait
ret
mov
out
into
push
push
mov
push
ja
imul
push
or
pop
out
nop
adc
push
inc
movzwl
js
xabort
inc
je
test
xchg
dec
pop
or
or
jo
leave
cmpsb
pusha
sub
js
test
mov
xchg
xchg
add
cmpl
push
or
pop
sub
push
mov
mov
popa
cmp
mov
incl
push
imul
ds
push
loopne
jecxz
cmc
push
adc
push
inc
rorb
lar
cs
pop
dec
xor
jmp
xor
push
jecxz
mov
sub
jmp
jl
js
fildl
jo
and
sbb
sbb
push
push
jl
or
mov
xor
add
lcall
rcrb
call
pop
sub
fmul
cmpsl
je
or
mov
imul
pop
or
add
jle
mov
and
int
push
pop
dec
pusha
cli
mov
dec
and
sbb
or
cmp
adc
dec
loope
stos
sti
dec
orb
pop
sub
rcrb
test
push
mov
inc
stos
or
mov
sub
push
pop
cmp
jbe
inc
dec
cmpps
add
pop
push
fs
push
das
pushf
sti
mov
or
inc
sbb
xrelease
mov
cld
lods
ret
fnstcw
push
adc
cld
js
sbb
add
insl
cmp
sti
push
fs
cs
clc
xor
daa
enter
mov
clc
xchg
dec
test
aam
xorb
add
clc
shl
push
cmpsb
jbe
jne
mov
sub
pop
fs
enter
push
push
sbb
clc
popa
and
mov
mov
dec
cli
jp
loopne
or
and
cmp
push
mov
add
mov
insl
popf
xor
jp
cmp
mull
inc
adc
rcrb
pop
jecxz
mov
jl
subl
rcrb
cmp
sub
adc
add
scas
mov
ret
sub
int
lgs
ljmp
mov
jg
xchg
roll
sub
push
sbbl
hlt
out
or
dec
add
inc
or
mov
enter
mov
rcll
dec
and
sbbb
loop
inc
arpl
das
push
repnz
insl
clc
scas
cmpsb
mov
mov
cwtl
jno
pop
test
rcrl
dec
push
cmp
mov
xlat
adc
inc
aas
sbbb
mov
int
jp
mov
daa
xor
fstps
in
mov
mov
out
push
loope
pusha
out
add
orl
pop
subb
xor
clc
push
mov
out
jmp
je
xor
and
outsl
push
xor
pop
scas
adc
jne
inc
aas
mov
sub
jl
dec
loope
aaa
mov
leave
bound
pushw
ljmp
hlt
aas
lea
test
mov
or
mov
sub
pavgb
mov
adc
lret
iret
push
pop
sub
add
sub
mov
sbb
cs
inc
add
fmuls
xlat
add
movsb
jno
sbb
nop
into
mov
cld
or
push
push
adc
mov
fmull
mov
mov
inc
ret
cmp
movb
dec
inc
mov
pop
mov
push
or
fimuls
rcll
push
adc
nop
xchg
adc
push
xlat
sub
je
xchg
mov
les
stos
sub
xor
imul
sbb
mov
mov
and
push
sub
and
adc
out
add
rorb
cmp
mov
imul
jo
mov
insb
dec
fdivrp
js
cmc
push
add
bswap
out
cmc
sbb
inc
push
xor
add
sbb
lcall
push
pushl
sub
sahf
mov
sbb
test
loopne
push
dec
sbb
cmp
add
push
cmp
sbb
loopne
xchg
inc
in
mov
sbb
lcall
lods
test
outsb
cs
push
dec
enter
in
xor
xchg
inc
in
push
mov
sbbb
test
je
sbb
pop
loop
or
orps
jb
test
cmp
cmc
rorb
popf
les
mov
jno
ffreep
jns
add
pop
sarl
jne
andb
jp
cmp
shrl
mov
or
and
pop
lcall
or
sub
mov
pop
jp
jne
or
jne
das
dec
and
mov
shlb
cmp
pusha
ds
ljmp
fs
fistps
lahf
cmp
add
mov
add
jo
into
add
clc
stos
jl
js
sbb
imul
jno
repnz
cld
dec
jnp
add
push
popa
inc
add
mov
dec
outsb
imul
or
jle
lods
push
push
xchg
push
add
xchg
push
jnp
hlt
jne
outsb
xor
sarb
sub
mov
adc
mov
push
push
cmp
mov
jge
fiaddl
or
lea
lods
adc
dec
out
jp
or
mov
inc
out
push
sbb
cmp
pop
mov
dec
scas
lcall
inc
ret
add
enter
lock
loopne
jg
and
lahf
movsb
adc
jo
mov
xor
mov
js
rcll
cmp
add
ret
jmp
gs
mov
sub
insl
cmp
push
dec
inc
sbb
inc
out
adc
sub
lret
mov
inc
cmpsb
mov
dec
cmp
xor
dec
aam
push
rolb
dec
addb
clc
and
mov
fs
rolb
push
jne
dec
xchg
mov
push
cli
or
pop
sub
sbb
jns
xor
jne
add
push
fdivs
push
je
xor
outsl
sbb
dec
or
sbb
mov
pop
push
cmp
scas
aaa
loopne
lcall
pusha
push
mov
test
sub
and
mov
cwtl
int3
or
cmp
je
add
push
push
mov
push
or
jo
daa
les
subb
xchg
xchg
cmpsl
cmp
call
mov
xor
xlat
dec
rcrb
cmp
mov
jnp
push
mov
or
cmp
push
push
pop
mov
fdivrl
jl
mov
mov
js
shl
push
int
cmp
ficoms
call
sbb
push
cmc
addr16
call
xor
je
dec
and
sbb
test
dec
outsl
fcoml
push
sbb
sub
fwait
icebp
add
stc
mov
fprem
cmp
jne
decb
or
pop
fdivs
mov
mov
icebp
mov
jge
and
and
dec
pop
ds
sbb
dec
and
cli
xchg
jbe
lock
inc
movl
or
fwait
bound
xlat
movsb
or
mov
add
js
inc
rolb
or
inc
sbb
inc
sub
shrb
sti
loopne
stos
rolb
add
pusha
sarl
jb
mov
mov
insl
pop
adcl
bound
xchg
add
sbb
lcall
add
dec
shll
jo
nop
xor
jl
mov
or
call
push
ficomps
test
xor
int3
xchg
popf
ss
xlat
inc
mov
xor
push
movl
ja
imul
int
adc
and
pop
mov
add
inc
pop
add
les
mov
mov
pop
dec
dec
test
xchg
cmp
fmuls
rorb
sbb
orb
jo
enter
push
orb
jbe
inc
dec
push
out
push
popf
adc
push
fsts
xor
push
sbb
stos
add
sbb
dec
cmp
add
xor
aam
out
xor
push
adc
push
mov
push
jo
scas
lods
adc
cmp
and
pop
adc
enter
leave
add
cmp
mov
imul
lea
push
inc
stos
cli
xchg
adc
lsl
inc
adc
jne
sbb
test
mov
movsl
cmpsb
mov
sbb
rorb
push
ret
pushl
les
xchg
mov
scas
and
jl
mov
sbb
push
test
in
mov
mov
fwait
jl
dec
mov
das
cld
inc
test
jo
ficompl
and
test
and
and
add
dec
and
dec
push
fwait
out
shlb
xor
sub
fucomi
mov
sub
out
roll
pop
jne
orl
dec
adc
sbb
fidivs
imul
sbb
pop
pop
dec
test
cmp
frstor
or
test
sub
xlat
mov
adc
das
call
stos
push
fldl
sar
lds
cmp
das
add
data16
in
xor
enter
movsl
jnp
clc
sub
mov
inc
xchg
les
mov
add
mov
stc
push
jne
mov
lock
ficoml
mov
clc
jo
push
cmp
push
dec
jo
mov
jne
ds
rcll
xorl
imul
dec
fwait
pop
lahf
mov
hlt
cld
pusha
ret
sbb
dec
mov
sbb
sbb
dec
jge
mov
push
divb
or
xchg
sbb
int3
push
dec
dec
mov
sub
push
pop
popa
push
push
inc
cmp
xor
lock
mov
ljmp
cli
out
fidivrs
sbb
or
iret
lods
pop
mov
sbb
sub
gs
xor
dec
lods
pop
jmp
push
adc
push
push
dec
jns
and
test
test
or
mov
aas
sti
push
jo
inc
insl
adc
aad
insb
aam
sub
and
ss
jecxz
test
adc
out
fcmove
adc
mov
repnz
xchg
sbb
in
push
faddl
lds
scas
mov
rorb
adc
lea
addl
fnstcw
pushl
and
jmp
scas
testl
aaa
add
mov
sbb
inc
inc
lock
sarb
and
add
or
nop
test
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
pusha
fs
xchg
insb
insb
push
ja
out
movsb
xor
jmp
lods
and
jnp
cwtl
push
xchg
inc
pushf
cmp
pop
mov
mov
je
popf
add
or
or
sbb
loop
lock
lea
push
mov
push
sub
inc
and
jmp
push
jne
enter
mov
roll
imul
pusha
rcll
outsb
dec
adc
jnp
add
cld
test
lock
jge
cmc
cmp
dec
jmp
rcll
into
stos
ret
adc
adc
sbb
sub
dec
popf
inc
mov
mov
push
mov
lret
add
push
ret
adc
dec
mov
fisubrl
clc
jo
sub
sub
xor
cmp
loopne
dec
aad
mov
sbb
cli
icebp
mov
and
pop
rol
roll
mov
test
push
dec
je
and
dec
pop
shlb
or
inc
clc
adcl
and
jle
test
shll
jp
and
jne
adcb
cmp
xchg
xchg
out
sbb
jns
sbb
stc
push
ret
mov
jo
popa
xchg
add
test
mov
and
cs
loope
xor
mov
jne
outsb
fcompl
fsubrs
outsb
mov
xor
fucomi
or
push
ret
jne
or
fidivrs
clc
outsb
inc
jg
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
into
ss
sbb
xor
or
lock
fs
in
fcoms
inc
and
jecxz
fwait
notl
cmp
mov
lret
movsb
mov
outsb
add
adc
sub
sub
add
pop
arpl
sbb
imul
ficoml
jb
hlt
mov
lock
mov
cwtl
or
sub
cmp
out
pop
add
fs
addb
cltd
fnstenv
and
cmp
push
push
popa
pop
fdivs
xchg
std
push
sbb
rolb
test
into
in
outsl
push
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
cmp
lods
shll
mov
sbb
rolb
lods
xchg
adc
or
addl
mov
and
or
popa
out
pusha
xor
out
jmp
pop
in
adc
dec
push
xchg
push
dec
push
movsb
push
push
push
aaa
pushf
jo
mov
and
adc
add
out
xor
adc
xor
jo
bound
fsubl
nop
push
cli
sub
dec
cmp
mov
jecxz
dec
inc
in
sub
js
cltd
mov
push
push
push
xchg
or
cmp
adc
fiadds
mov
js
lock
cmpl
adc
inc
mov
out
fmuls
aad
push
movsl
pushf
test
rolb
je
push
sub
add
aas
pop
push
cld
xor
mov
mov
loopne
idivb
pop
jae
jp
call
enter
mov
inc
xor
dec
pusha
sbb
pop
mov
movsl
add
dec
les
jl
sbb
and
push
add
sbb
jmp
daa
sub
jo
aad
insl
bound
cmp
jg
dec
or
lods
sbb
out
and
orl
xor
pop
and
mov
mov
cmp
and
sbb
cmp
repnz
hlt
sub
mov
ja
mov
fidivl
and
pop
lcall
ja
movsl
sbb
je
movsl
push
roll
divl
push
pop
ljmp
pop
lahf
push
cmpsl
adc
orl
add
adc
movsb
jo
xor
push
sub
outsl
xor
jbe
sub
lret
in
sub
inc
mov
dec
jmp
or
inc
push
or
cmp
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
adc
imul
gs
adc
push
lock
lret
push
or
jo
mov
mov
sbb
push
sub
jnp
out
add
test
jle
mov
add
jp
push
add
jp
cs
or
pop
lods
popf
fsubrl
pop
cmp
cmp
pop
adc
jns
xor
push
xchg
pop
aaa
rcrb
or
xlat
mov
imul
and
mov
jg
xor
call
or
jbe
jge
push
mov
leave
jo
add
icebp
push
xor
sub
cmpsl
popa
fstl
xchg
push
xor
push
or
mov
inc
fimuls
push
mov
add
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
push
and
xor
push
inc
xor
cwtl
xchg
mov
and
jl
cmp
ja
mov
fwait
xchg
add
xchg
cmpl
adc
js
jecxz
mov
push
push
push
sbb
shll
inc
push
sbb
iret
frstor
nop
sbb
cmpb
lret
cmp
or
mov
or
dec
pop
movsb
adc
jnp
lds
shll
sub
ret
in
jmp
cmp
add
mov
lods
stc
inc
cmc
js
dec
cmp
sbb
mov
sub
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
and
ret
mov
es
test
or
mov
mov
sub
mov
add
loope
sbb
and
and
enter
js
pop
fs
enter
add
mov
pop
mov
fs
imul
data16
jno
pop
jo
push
arpl
cmp
xor
mov
inc
xor
shll
fcoml
adc
scas
add
lret
xchg
repnz
stos
pop
xor
sbb
mull
aaa
rorl
rorb
push
ret
popl
inc
and
addl
mov
je
push
pop
cmp
adc
sub
xor
shll
and
mov
mov
jecxz
adc
pop
bound
in
mov
xor
inc
push
xor
pop
sub
and
es
mov
movsl
add
pop
pop
sub
xor
xor
pop
push
in
pop
lock
pop
sbb
sub
mov
push
je
and
jbe
ret
aas
jle
adc
cs
jne
lock
mov
xor
add
jl
fadd
pop
testb
je
xor
jbe
fdivl
cmp
dec
or
dec
jl
loope
xor
push
test
jne
fistl
js
adcb
pop
sbb
push
fisttps
xchg
push
leave
or
xchg
cmc
xor
or
cmpsl
jnp
sub
add
cmp
inc
mov
aas
mov
testb
xor
xchg
inc
push
xchg
sbb
mov
dec
addr16
sarl
aaa
add
mov
sub
push
or
jge
loopne
push
jecxz
movsl
push
push
lock
arpl
inc
ds
or
and
and
cld
push
push
mov
push
push
push
add
shr
aaa
stc
or
or
xchg
inc
push
lock
sub
xchg
mov
mov
mov
or
sahf
xchg
ret
nop
inc
mov
inc
and
out
or
div
neg
adc
ja
jp
pop
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fiaddl
addr16
pop
push
push
lcall
or
push
inc
pop
cwtl
imul
cltd
idivl
sbb
lret
mov
inc
nop
adc
icebp
cwtl
add
add
sub
sub
mov
or
push
ret
adc
and
push
fwait
mov
jb
pop
add
or
sub
je
mov
xchg
bswap
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
jae
daa
js
cld
sbb
aad
test
push
push
mov
adc
cmp
mov
dec
jp
out
andl
cli
add
outsb
sbb
or
movsl
or
aam
fstpl
or
mov
mov
xor
in
clc
push
jns
or
mov
push
add
adc
lds
arpl
pop
xchg
sub
lods
rcrb
cmpsb
sbb
push
mov
jmp
outsl
push
or
jae
movsb
ret
call
xchg
mov
xchg
lock
orl
cwtl
dec
push
pop
or
or
insb
mull
int
add
dec
dec
mov
lds
inc
clc
add
stos
lcall
cmp
sbb
adc
in
pmulhw
push
cmp
adc
sbb
cmp
push
into
add
inc
cmp
icebp
jle
adc
mov
xor
add
push
jl
into
inc
loope
adc
push
pusha
fs
mov
push
insb
cmc
inc
mov
sbb
ss
cmp
or
addl
lcall
push
int3
and
mov
movb
cmpsl
add
pop
mov
sbb
incb
into
xor
shr
inc
add
push
sti
rolb
dec
and
das
sbb
adc
cmp
out
add
loope
sbb
or
pusha
insb
std
push
or
pop
dec
popa
push
jnp
adc
add
jno
cmpsl
jbe
dec
push
stc
outsl
insl
out
in
cld
mov
jae
movsl
mov
insl
dec
mov
es
sbb
out
fimull
sbb
popa
sbb
push
arpl
push
pop
adc
inc
lock
and
push
xchg
test
adc
and
cwtl
cmp
mov
lret
push
idivl
dec
add
xor
js
pop
js
dec
push
push
mov
xor
mov
and
push
int3
xchg
push
pop
push
sbb
xor
pop
orb
in
xor
bound
or
repz
jae
loopne
adc
nop
lock
or
insb
leave
out
mov
inc
adc
insb
insb
int
push
xorb
cmp
inc
test
jg
pop
imul
fadds
rolb
jmp
jg
inc
xor
bound
mov
test
jle
movsl
xor
je
jo
cmp
add
dec
jne
push
loopne
jno
mov
add
adcb
mov
jl
add
loopne
push
push
jnp
outsl
pop
test
jb
pop
mov
mov
xorb
test
lods
inc
dec
xor
jle
add
inc
xor
adc
cmp
xchg
jmp
imul
shll
fs
mov
repz
or
sbb
jo
in
mov
cmp
dec
xor
xchg
jne
adc
pop
fcmovu
adc
hlt
into
sub
adc
mov
adc
push
lock
dec
lret
test
or
jo
xchg
push
mov
adc
cmpsl
arpl
cmovns
mulb
nop
test
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
push
scas
outsb
xchg
add
sbb
andb
and
inc
xor
ret
pop
cmp
test
in
and
lcall
movsb
loopne
adc
mov
inc
ficomps
flds
cli
xchg
clc
decl
lea
sub
pop
mov
sub
xor
dec
testb
jbe
mov
les
push
xor
test
pop
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
xchg
sbb
sbb
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
xor
xchg
sub
insl
inc
xor
inc
aaa
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
add
dec
roll
je
xchg
and
fcoms
loopne
outsb
jno
cmp
imul
adc
push
push
push
and
inc
js
movl
pop
pop
push
push
push
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
or
lock
cld
jo
ljmp
jl
pop
loopne
mov
cs
cmp
add
mov
sub
in
or
and
sub
mov
xchg
xchg
mov
sbb
push
add
add
fcmovu
push
lret
mov
shl
pop
pop
aad
adc
addl
in
mov
mov
xchg
sub
pop
jno
jle
mov
in
mov
add
es
pusha
cld
in
rorb
dec
inc
mov
fcmove
cmp
subl
insb
int
inc
xchg
sub
xchg
lret
and
mull
lret
pop
sbbl
inc
mov
adc
ret
cmp
inc
shl
mov
adc
adc
cltd
adc
xor
je
or
pop
adc
push
xchg
sbb
push
nop
fs
outsl
notl
andl
sub
cmp
ja
je
or
je
or
mov
sub
jecxz
jbe
sti
das
adc
sti
add
jns
dec
add
or
or
movsb
xchg
or
outsb
pusha
lock
sahf
popa
jnp
add
push
jmp
cmp
mov
pusha
push
adc
adc
push
xor
inc
les
scas
test
pusha
inc
or
sub
add
and
inc
dec
xchg
sub
lcall
cmp
xor
push
add
test
xchg
mov
mov
lret
push
cmpl
push
or
test
loopne
add
inc
es
or
fs
mov
or
push
sub
adc
mov
mov
ret
dec
test
xchg
and
and
gs
sarl
das
add
cs
inc
or
call
mov
pop
inc
clc
jecxz
dec
je
sub
jmp
sub
or
add
cld
inc
outsb
fcomi
adc
mov
sub
jp
test
daa
or
fs
or
push
adc
inc
push
mov
movsb
adc
sbb
outsb
pop
dec
mov
insb
adc
fnstcw
pop
dec
pusha
lret
cmp
divl
std
test
pusha
xchg
cli
jns
rolb
and
push
adc
inc
test
lods
adc
jne
jne
cmp
or
and
push
in
movl
inc
jmp
sbb
sbb
and
dec
cld
add
ret
out
je
push
push
add
icebp
clc
inc
das
sub
adc
push
mov
push
mov
xor
std
call
out
pop
ret
rolb
mov
push
int
jno
clc
pop
pop
je
push
pop
in
xor
jo
push
or
subl
pop
lcall
fcoml
inc
add
cmp
shrl
sub
enter
inc
rcll
dec
push
dec
movsl
pop
lods
pop
cmpl
sbb
mov
jns
nop
add
add
add
add
pop
shlb
pop
push
dec
mov
inc
mov
in
sub
in
jbe
out
xchg
and
in
add
adc
or
jge
mov
icebp
sub
inc
sti
cmp
js
lods
add
outsl
add
fcoml
shll
sub
in
push
in
and
mov
jnp
push
ret
pop
cmc
fsubrs
and
test
or
inc
sub
add
push
dec
mov
mov
lock
fidivrs
xor
icebp
in
pop
aas
pushf
xchg
adc
mov
mov
jo
mov
enter
xchg
push
xchg
dec
adc
inc
sbb
xor
scas
sub
push
lods
or
sbb
and
jne
arpl
stos
std
decl
or
ficoml
push
cmp
and
dec
pop
cld
sub
test
ljmp
movsb
push
jg
sahf
mov
cs
and
pop
xor
sbb
out
mov
cs
xor
push
cmp
faddl
push
daa
and
xlat
dec
mov
inc
shl
test
mov
inc
fcoml
xchg
mov
adc
daa
loop
jp
hlt
or
aam
mov
mov
xchg
clc
pop
stos
inc
pop
mov
pop
das
or
mov
push
jb
dec
leave
xorl
mov
subl
popa
outsb
or
push
je
daa
dec
mov
fwait
push
shll
cltd
or
bound
daa
clc
movl
cmp
or
and
adc
sbb
lahf
sub
arpl
push
sub
outsl
push
adc
rcrb
mov
or
inc
cltd
stos
sbb
jns
or
inc
mov
or
adc
fidivl
push
or
cwtl
push
loop
std
add
shlb
and
xchg
push
fldenv
in
adc
jg
add
shrl
cwtl
push
lds
jp
sahf
mov
inc
sub
push
inc
leave
je
rclb
dec
in
aam
fsubs
ret
sahf
mov
or
jo
cmpsl
push
xchg
push
sub
dec
sahf
imulb
push
lcall
xor
xor
aaa
divps
push
addr16
cmp
inc
mov
xor
inc
js
bound
lods
or
push
inc
dec
loopne
jmp
add
pushf
orb
out
filds
cmp
sbb
addr16
add
mov
or
ret
movsl
add
mov
stos
lds
sbb
inc
adc
mov
fistpll
ret
adc
adc
push
or
cmp
dec
lock
push
sub
adc
and
lock
ds
enter
scas
or
sub
popf
cmpsb
cmp
xor
cmpsl
xchg
adc
jne
add
add
cmp
xchg
mov
pcmpeqb
nop
jge
popf
add
leave
sub
sbbl
inc
pop
pop
mov
inc
sti
adc
mov
cs
push
das
xor
cmp
ret
xor
mov
movsb
or
inc
pushf
mov
sub
prefetchnta
lahf
xor
or
arpl
enter
jne
dec
jmp
or
adc
in
push
adc
iret
cmp
fcoms
xchg
jne
test
movsb
in
or
and
adc
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
push
out
add
in
fiaddl
sbb
push
outsb
sub
mov
cmpl
sub
je
pop
cmp
movsl
stos
imul
cmp
dec
shrl
xor
lcall
sbb
test
dec
pusha
popa
and
divb
or
pop
jno
sub
popf
and
sbb
jle
cmpsb
add
jno
jbe
pop
dec
sbb
push
lcall
sbb
adc
xchg
test
movsb
jo
pop
sbb
test
pop
fsub
adc
add
sahf
sub
dec
out
push
sub
add
imul
push
das
test
adc
mov
mov
mov
mov
sub
mov
dec
ja
cltd
rorb
sbb
pushf
leave
jae
inc
mov
xor
and
loope
mov
pop
rcrl
icebp
in
lods
ret
dec
jbe
cmp
xchg
inc
dec
xchg
repz
lock
sahf
xor
jecxz
jne
sbb
mov
fcomp
add
xchg
idivl
cmp
mov
call
cmp
int3
ss
add
sbb
adc
xorl
les
jle
inc
inc
or
push
add
daa
subb
into
inc
add
loopne
adc
je
cmp
je
loopne
push
mov
ss
mov
inc
cmp
in
dec
mov
faddl
adc
push
sbb
fimull
fdivrp
and
mov
push
sub
dec
push
repnz
pop
je
push
add
lods
mov
jg
dec
rolb
test
lahf
stos
mov
dec
mov
and
cld
jae
cmc
call
mov
adc
jo
add
sub
dec
ja
stos
mov
mov
push
js
dec
loopne
push
cmp
sti
add
xchg
dec
xor
inc
xchg
call
cmpb
mov
and
pcmpgtd
inc
push
add
mov
jno
dec
cmp
inc
ret
jp
cld
inc
adc
xchg
or
push
pop
jg
adc
push
cld
movsb
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
add
mov
sbb
orl
mulb
or
je
adc
or
insb
mov
jl
andl
and
pusha
in
add
fwait
and
in
or
inc
and
sub
int
xlat
sub
sub
sbb
das
lea
or
dec
add
jae
js
scas
nop
or
jge
int
in
adc
insb
and
inc
and
movsb
cmp
aam
add
mov
cmp
pop
xor
cld
inc
sarb
jle
movsl
arpl
cmp
mov
and
dec
fnsave
xor
add
mov
xor
bnd
dec
dec
sarb
mov
add
insl
push
aaa
es
or
push
or
insb
popf
jg
rclb
jns
and
mov
jno
push
adc
cmp
jae
push
mov
cmpl
cmpsb
lahf
andl
dec
sub
jne
push
imul
inc
test
push
call
add
mov
mov
dec
or
sbb
pop
add
mov
repz
pop
lcall
loope
cmp
push
sub
adc
lock
add
xor
rorb
or
fldenv
mov
stos
add
push
movsl
jb
push
or
mov
test
push
pop
fbstp
ret
lock
es
fimull
dec
fsubl
je,pn
jle
popf
add
pushf
lea
addb
dec
je
cltd
cmpl
mov
in
inc
xor
or
in
add
pop
int3
clc
mov
mov
xchg
call
aam
stos
in
and
aas
int
pop
in
push
testb
sbb
call
xchg
out
fs
mov
pop
inc
jnp
add
loopne
loope
jns
add
int3
sbbl
in
xchg
loopne
loop
mov
jb
mov
mov
incl
jne
cmc
add
pop
xor
loope
imul
cli
push
cltd
std
jle
push
gs
in
dec
sbb
popf
add
sub
setb
sbb
add
pop
jg
jne
xor
lahf
push
fs
push
int3
pop
or
adc
in
push
shlb
mov
pop
inc
xlat
sbb
or
add
lretw
loopne
and
dec
and
scas
pop
in
pusha
sub
sbbb
clc
mov
add
lahf
sbb
push
inc
inc
mov
add
mov
mov
jo
sarl
mov
pop
gs
jne
daa
jne
mov
loope
and
jmp
mov
add
push
mov
addl
fmuls
xchg
xchg
sub
add
leave
arpl
push
cmp
pop
mov
jb
lods
jbe
dec
add
faddl
sti
lahf
rorl
jl
lcall
dec
or
or
mov
add
clc
cmp
jne
sbb
mov
aam
add
je
or
shlb
xor
scas
mov
add
leave
pop
lcall
push
xlat
push
push
addl
sub
push
les
jb
orl
fwait
insb
fwait
jns
lahf
ja
dec
lahf
insl
sub
mov
std
inc
cmp
call
cwtl
or
jmp
jae
cmpl
fmul
in
nop
pop
rcrb
adc
sbb
rcrl
sbb
imul
pop
lods
test
in
jo
call
les
jnp
sub
les
jb
push
shrb
sbbl
test
icebp
add
and
outsb
xlat
cs
sub
jge
adc
out
cmpsl
jo
or
xchg
adcl
sbb
and
sub
shll
mov
push
jo
popf
call
loop
adc
in
jnp
pop
and
das
or
mov
add
xchg
mov
mov
popf
mov
rclb
imul
dec
cmpsb
adc
fs
outsb
push
sub
sub
fcmovb
inc
add
dec
lock
xchg
jge
clc
sbb
or
fs
test
popa
das
pop
scas
push
cmp
push
jb
or
mov
cmp
jbe
cmp
inc
push
leave
push
xor
mov
xchg
rcr
enter
fnop
xchg
cmp
jno
je
add
bound
xchg
inc
lock
bound
inc
push
dec
dec
leave
mov
cmpb
jns
xchg
mov
xor
sbb
xchg
lock
popa
scas
xor
popf
add
in
adc
fwait
add
stc
add
test
push
out
subl
add
call
mov
cmp
push
cmp
int
push
ret
push
pop
pop
test
add
sub
and
mov
jne
clc
test
xchg
insb
jecxz
ds
sub
mov
lea
cmpsl
fs
pop
push
dec
nop
pusha
nop
push
push
lret
adc
nop
sbb
test
pop
fildl
fs
repnz
repz
mov
and
lock
push
shlb
xor
std
aaa
mov
ja
push
pop
inc
mov
mov
data16
xor
inc
xor
aaa
out
call
icebp
cmp
fdivs
andl
enter
sbb
adcb
xchg
mov
scas
aad
xchg
mov
push
add
adc
aam
je
inc
adc
sbb
jmp
mov
sbb
int
int
fsubrl
and
cwtl
dec
mov
or
rol
and
jle
jbe
xlat
rorb
fwait
sub
sub
push
push
ret
add
sbb
lds
push
mov
sbb
bswap
mov
rolb
or
rclb
popf
sub
adcb
popa
adc
inc
jecxz
jecxz
jo
daa
xchg
scas
mov
leave
mov
je
es
sarb
lds
adc
add
inc
imul
je
or
cmp
inc
int
pop
jae
or
sub
push
bnd
adc
sub
insb
xor
add
sti
sbb
or
or
rcl
aaa
jbe
aad
fisubrs
addb
arpl
scas
mov
dec
stos
inc
sub
fcomps
adcb
out
xorl
and
or
sub
or
sbbl
das
add
mov
xlat
mov
lahf
adc
and
push
jo
ljmp
arpl
fmull
dec
bound
add
or
pop
das
push
inc
and
push
mov
jl
jl
xor
and
xor
cmp
popf
stos
mov
sbb
adc
add
or
xor
sbb
ret
add
mov
dec
mov
aad
pop
in
gs
cmp
cltd
sbb
sub
sbb
and
and
sbb
add
sbb
mov
loope
arpl
sub
push
ss
adc
and
sub
pusha
jl
ficoms
pop
cmp
hlt
test
pop
xorl
in
call
icebp
push
xchg
add
stos
xchg
shl
je
inc
add
mov
jns
rcll
adc
push
lods
lods
adc
scas
nop
sbb
pusha
mov
daa
adc
add
lods
xchg
es
test
pop
add
pop
push
push
ja
and
adc
xor
adc
mov
sbb
jl
push
call
shll
popfw
cmp
cs
cld
adc
call
clc
pop
pop
mov
aas
push
cwtl
inc
pop
add
in
and
fisttpl
jbe
sub
lea
rcrl
ljmp
cmp
inc
imul
dec
loope
test
dec
cmpsb
add
add
sub
mov
mov
cmp
inc
sbb
cmp
push
js
jne
mov
pop
inc
insb
add
and
add
sub
pop
add
xchg
fidivrs
inc
push
mov
test
inc
sti
jl
test
sahf
fstps
xchg
jg
cmp
addr16
test
jnp
decb
or
push
cltd
pop
mov
jo
or
jg
inc
xor
xchg
dec
add
jmp
sub
push
lods
mov
das
test
jne
adc
push
es
xor
test
icebp
inc
mov
ja
add
pop
aas
sub
jge
loopw
das
sub
hlt
or
dec
xor
xchg
xchg
das
das
xor
cmp
cmpsb
inc
sub
insb
popf
xchg
xchg
inc
dec
fs
mov
imul
add
addb
add
incb
add
jg
or
inc
add
cmp
ja
and
inc
mov
icebp
sub
jg
dec
mov
outsl
and
jno
jne
jmp
cmp
xor
imul
pushf
push
mov
rep
insl
shrb
mov
scas
push
add
cld
push
test
mov
mov
mov
sarl
push
pusha
add
dec
pop
jns
jmp
iret
inc
adc
daa
cmpb
ss
add
sbb
loopne
adc
jmp
andb
adc
push
leave
or
push
push
mov
in
xchg
call
movsb
mov
pushf
xchg
stc
xor
shll
inc
sbb
cmp
and
das
adc
mov
xchg
cmc
jl
cmp
push
mov
push
mov
xchg
mov
mov
jle
add
xor
jle
dec
sub
dec
leave
xchg
and
pop
inc
mov
xor
jge
enter
je
pop
cmp
sub
and
pop
dec
push
cmp
pop
sub
and
mov
inc
sti
rep
inc
inc
xor
outsb
sahf
mov
or
sbb
jmp
sub
jae
test
push
subb
add
push
les
andl
mov
dec
jnp
and
jne
push
push
repnz
and
cmpsb
xlat
mov
and
push
mov
hlt
pop
loopne
adc
imul
inc
sbb
icebp
xchg
out
push
sub
inc
add
adc
pop
adc
xorl
aas
mov
and
popa
mov
rorb
insb
loop
pusha
adc
jno
fistl
jecxz
inc
pop
and
jno
test
sub
xchg
into
add
or
scas
mov
sbb
iret
test
fildll
mov
jmp
lret
pop
int3
jae
sbb
mov
push
push
push
sub
rcrl
adc
sbbb
cmp
and
and
xchg
pop
mov
push
push
cltd
cltd
cmpsb
or
hlt
lock
and
jle
inc
mov
push
dec
xor
or
push
movsb
movsl
push
push
add
addr16
jo
outsb
jle
push
cli
loope
adc
decl
fcomp
ret
cmc
push
push
xchg
adc
inc
test
push
in
sub
xor
xlat
mov
adc
pop
int3
arpl
cmp
loopne
add
xor
or
add
inc
xor
roll
or
and
sarb
dec
jne
adcl
idivb
inc
add
adc
push
loope
sbb
push
dec
mov
test
and
and
and
push
cmp
dec
ss
inc
punpcklwd
or
jns
jb
mov
loopne
insb
sub
sub
into
pusha
fnstcw
fidivs
or
adc
pop
adc
in
inc
sbb
push
push
add
jb
inc
mov
pop
add
add
add
testb
pop
jle
test
adc
add
xor
or
or
xchg
xchg
push
mov
shlb
cmpsl
add
cmp
in
sahf
add
xorl
aas
add
int
and
add
lea
subb
or
dec
mov
hlt
sub
sar
into
mov
or
add
rcrb
mov
sbb
xchg
push
mov
mov
sub
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
or
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
fwait
mov
and
inc
andl
push
mov
inc
or
inc
add
sbb
or
cmp
ss
outsb
cwtl
add
sbb
xchg
and
imul
dec
mov
sub
mov
adc
adc
rcrb
scas
mov
mov
rorb
stc
jne
sub
outsb
sar
inc
aaa
xor
mov
mov
add
cmp
jb
jae
push
ja
xor
lret
cmpb
dec
hlt
jae
or
test
mov
jo
push
ret
xchg
scas
repz
icebp
sub
jl
pop
inc
xor
mov
inc
mov
nop
add
push
inc
cli
sub
mov
xchg
or
sub
dec
jae
adc
cmp
es
and
adc
cmp
shl
cltd
pop
sbb
aaa
fidivrs
pop
and
push
mov
pop
ret
mov
pushfw
cmp
and
jb
adcl
sbb
push
test
xchg
out
cli
cmovge
xchg
jne
fdivs
int3
xchg
pop
fidivl
mov
aas
jo
out
jmp
sbb
shr
andb
nop
repz
or
or
popa
mov
xlat
fdiv
call
out
stos
cmpsl
mov
push
push
mov
sbb
xor
push
cmpsl
push
ds
je
test
bnd
subl
jp
adc
cmp
cmp
je
jl
add
mov
mov
and
inc
push
cmp
or
or
mov
adc
or
in
adc
dec
addr16
arpl
and
scas
stc
sbbl
jmp
sbb
and
popa
or
push
and
je
in
in
or
or
or
ja
push
push
test
pop
mov
mov
clc
xor
dec
pushf
je
pop
mov
adc
or
dec
pop
loope
stos
test
test
call
push
jmp
jmp
dec
mov
adc
adc
jecxz
xor
mov
dec
and
xor
push
and
inc
aas
and
sbb
enter
inc
push
cmp
clc
or
and
mov
xchg
es
inc
push
cmp
dec
cmp
cmp
js
push
cmp
movsb
sub
les
cmp
test
sbb
mov
cmp
pop
faddl
jb
push
xor
fs
in
xor
mov
xor
or
mov
mov
mov
hlt
jmp
pop
call
cmp
xchg
fs
or
in
pusha
sbb
lret
std
repnz
mov
inc
or
sbb
adc
call
sbb
sbb
mov
add
push
mov
pop
mov
xor
xor
adc
fwait
adc
mov
cmp
je
push
fcoms
subl
ja
pusha
cmp
sti
sub
mov
cmp
adcb
lds
xor
dec
dec
roll
or
mov
in
loop
fimuls
rorl
enter
push
int3
mov
shr
aam
mov
mov
push
push
cmpsb
mov
mov
sub
jecxz
cmp
jg
add
mov
std
sbb
mov
sbb
push
fs
jmp
jp
mov
cmp
sub
push
mov
loope
xor
jbe
sbb
dec
int
dec
loopne
addb
add
mov
push
or
xchg
sub
jne
hlt
and
pop
lock
add
mov
mov
pop
jne
xchg
jne
ret
leave
cmp
and
test
imul
adcl
lock
mov
rcr
push
adc
sbb
test
aam
push
xor
adc
adc
loopne
insl
push
aas
inc
push
push
mov
mov
sbb
dec
xchg
pop
or
cld
mov
add
mov
adc
sti
add
aas
or
je
xchg
xchg
bound
popf
in
push
cmp
push
cmp
fstp
ja
add
push
je
sub
mov
xor
adc
pop
jns
add
mov
js
or
adc
inc
mov
test
xchg
xor
icebp
test
or
gs
pop
out
jmp
sbb
mov
nop
jge
subb
push
sub
mov
or
and
adc
pop
subl
jp
test
ficompl
push
inc
hlt
add
lret
mov
and
leave
in
das
add
add
sub
insb
mov
mov
adc
clc
lock
xorb
sbb
test
rcll
rorb
cs
ja
fildl
or
in
and
int
nop
mov
and
pop
add
xor
or
add
mov
add
leave
popa
xor
push
in
jmp
js
movsl
call
mov
jl
push
push
out
loope
jno
lcall
and
call
ret
in
cmp
aam
mov
xchg
adc
js
cs
pop
cmp
sbb
aam
rol
dec
lahf
mov
xor
jmp
nopl
and
pop
jnp
dec
push
call
add
or
daa
xchg
mov
pop
ja
in
cli
aam
add
fmuls
adc
push
fwait
fwait
inc
mov
adc
mov
dec
fistl
test
push
sub
aam
insb
and
dec
push
fbld
add
je
jo
pop
jno
or
jb
movsl
test
or
pusha
jg
js
clc
jl
mov
adc
push
pusha
enter
adc
jbe
jmp
lahf
outsl
addb
rclb
jbe
cmpsb
dec
lds
lcall
inc
add
out
fdivrl
mov
push
pop
test
scas
mov
push
push
test
inc
int3
ja
cmpsl
inc
cmovnp
mov
ret
jae
loopne
ret
or
dec
aam
stc
pusha
xchg
inc
sub
addl
adc
lods
push
dec
jp
xor
in
aas
loopne
scas
or
add
data16
subb
pop
rorb
xor
sub
jne
and
jb
adc
shr
mov
add
xchg
pop
push
push
jmp
js
rorb
push
icebp
dec
jo
jae
mov
mov
movb
and
or
cmp
divl
jg
and
push
jb
push
lea
adc
push
pushf
orb
and
push
clc
call
insb
jecxz
test
or
xchg
loop
loop
movsl
faddl
test
push
and
xchg
cmpl
in
push
push
inc
fsubrs
ret
xor
jmp
das
push
or
pop
adc
sahf
push
shlb
xchg
in
pop
pushl
pop
or
lock
je
leave
fs
test
mov
call
mov
nop
adc
aaa
add
int
xchg
daa
loopne
nop
xor
sub
dec
or
mov
pop
pusha
lods
fs
cli
test
pop
xchg
mov
or
aam
out
or
xchg
push
xor
push
xchg
add
sub
insl
push
push
lea
test
mov
or
test
test
pop
into
push
faddl
into
popl
loope
shrb
adc
aam
push
shlb
sub
pusha
or
mov
xchg
fidivl
test
or
rolb
nop
dec
or
outsl
gs
loope
xor
xchg
pop
aam
sbb
or
pusha
push
xchg
cmp
push
or
out
loope
sub
dec
pusha
mov
push
sbb
jo
mov
pop
popf
sbb
push
pop
xor
divl
js
mov
orl
dec
loopne
fdivr
cmpsl
xor
push
sbb
test
pop
push
mov
push
outsl
mov
adc
dec
jge
stc
push
and
pop
rolb
push
mov
xor
scas
lret
sarl
mov
subb
xchg
call
les
xchg
rcrl
popf
jmp
gs
enter
push
sub
and
lcall
pushf
loop
push
add
xchg
mov
and
adc
loopne
adc
mov
lahf
and
push
add
inc
int3
inc
push
nop
lcall
les
add
adc
scas
lea
and
or
or
add
sbb
sarb
add
jbe
push
adc
and
adc
jo
push
fldenv
cwtl
pop
iret
push
pop
repz
test
push
adc
inc
and
jnp
cs
sbb
adc
push
mov
dec
push
arpl
mov
pop
gs
add
subl
sbb
mov
fwait
sbb
enter
fwait
xchg
sub
xchg
or
rclb
insb
ss
test
push
mov
xlat
inc
inc
dec
push
repz
orb
mov
in
data16
popf
cmp
dec
xor
mov
add
into
aad
ss
push
add
iret
subb
dec
jecxz
fucomip
or
sbb
xlat
in
and
sub
sbbl
mov
fistl
fstpl
mov
stos
iret
add
or
call
popf
sub
adc
popf
adc
and
out
and
xor
test
sbb
incb
pop
xor
xchg
fwait
lods
mov
andl
mov
push
push
sub
mov
data16
movsb
stos
and
gs
xchg
mov
dec
pop
cmp
and
dec
popa
mov
inc
test
aam
and
sub
push
sub
mov
in
dec
dec
cmp
mov
lea
div
enter
adc
pop
and
xor
push
sub
push
cmp
cmp
nop
push
push
xor
mov
hlt
inc
or
or
mov
or
add
mov
add
sbb
shr
sarb
rolb
jo
or
add
inc
movsl
fnstcw
or
jp
clc
adc
sub
lods
push
mov
add
ds
jmp
adc
divb
jne
adc
mov
jne
mov
or
adc
movsl
test
mov
jb
jl
nop
xchg
cwtl
pushf
arpl
or
inc
cmp
push
pusha
cld
mov
inc
pop
push
sub
pop
lods
ja
shrb
scas
mov
fmul
or
add
insl
inc
cwtl
aas
clc
mov
test
lea
mov
jg
jns
adc
pop
sbb
std
mov
mov
fisttpll
mov
adc
in
fidivl
scas
icebp
fidivl
out
lea
or
xor
ret
pop
in
mov
xchg
je
aaa
push
jge
mov
call
js
or
cmp
nop
mov
jge
adc
sbbb
xchg
mov
cmp
imul
scas
outsl
xchg
and
mov
mov
adc
jmp
push
add
mov
push
mov
jmp
xor
rolb
cmp
and
and
xchg
mov
sub
dec
sbb
pushl
ja
sarl
lahf
lods
mov
test
ret
add
outsl
mov
sbb
mov
xchg
adc
and
and
dec
dec
in
cmp
sub
sub
mov
cmp
pop
pop
sbb
mov
out
pop
movsb
xchg
lret
xorl
orb
inc
into
les
jne
pop
or
mov
das
push
pop
jo
ret
leave
adc
inc
daa
pop
jns
outsl
xlat
push
push
repz
mov
in
addl
mov
je
roll
add
loopne
push
movsl
sbb
mov
xchg
adc
movsl
mov
outsb
inc
cwtl
sub
lock
inc
jl
andl
jno
outsb
xchg
mov
sbb
xlat
movsb
add
push
lea
movsb
mov
add
cld
sub
add
roll
push
add
leave
rolb
push
dec
jno
add
push
ret
out
ljmp
ljmp
test
shlb
mov
mov
inc
or
xor
cs
mov
rcrb
mov
orl
xchg
push
out
decl
sbb
cwtl
dec
xor
inc
inc
inc
inc
push
jl
pop
dec
daa
mov
or
dec
cmp
mov
inc
pop
mov
inc
xchg
mov
lock
mov
sbb
data16
idivb
cltd
push
or
in
dec
add
inc
rol
or
pop
cmpb
cltd
or
pop
push
mov
lea
mov
pop
push
shll
inc
popf
pop
cld
or
sti
mov
insl
into
stos
push
pop
cmp
lock
fstpt
push
in
push
gs
hlt
add
nop
loopne
popa
lock
sbb
xor
test
movb
add
sbb
xchg
push
adc
or
out
das
test
pcmpeqw
cmpl
add
mov
out
ja
cli
jbe
push
iret
sti
lea
lahf
lods
inc
add
xor
insl
add
faddl
imul
sub
and
xor
cmp
test
jnp
push
xchg
pop
ret
bound
lock
lret
xlat
pop
pop
sub
lock
repnz
int3
mov
jae
clc
add
fidivrl
inc
inc
jb
fistpl
push
and
mov
in
push
or
mov
in
jl
mov
jge
or
addl
mov
fsubrs
ret
popa
push
push
add
lods
jecxz
popa
in
and
cmp
push
sub
rcrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
pushf
and
push
adc
cltd
pusha
add
dec
clc
pop
lock
rolb
push
mov
and
sbb
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
pop
mov
loop
fcompl
mov
ss
das
push
dec
mov
push
loop
leave
jns
ja
jns
lock
adc
mov
add
push
inc
mov
adc
mov
imul
mov
jecxz
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
popf
lret
jmp
outsb
lock
cmp
inc
inc
dec
sahf
incb
mov
sahf
cmp
mov
lcall
and
icebp
cmpsb
or
dec
mov
or
inc
hlt
loopne
xchg
pop
push
mov
hlt
mov
inc
add
adc
or
push
das
cld
nop
fistl
sarl
cmpsl
jns
or
or
cmp
lods
ret
dec
jp
je
and
adc
std
add
data16
sub
sbb
sub
jle
and
test
and
cmp
jg
outsb
adc
imul
or
outsb
add
fldt
jl
push
jge
push
jle
loopne
out
xchg
push
imul
xchg
cmp
lock
in
xor
andb
jge
lret
imul
xor
push
lock
shr
or
je
push
cmpsb
dec
cmp
xor
lock
sbb
xor
repnz
and
fs
inc
jmp
inc
jo
add
cs
addr16
and
jne
or
inc
cld
lock
sbb
iret
adc
or
insb
or
movsl
push
or
test
push
rolb
iret
pop
xor
or
movb
idiv
lret
jmp
pop
cmpsb
lods
push
mov
inc
dec
pusha
or
push
mov
pop
je
mov
mov
fstsw
sub
mov
dec
seta
jle
mov
mov
js
jle
push
mov
sbb
andl
and
adc
push
mov
scas
add
shr
cmp
jp
add
fdivl
lret
xchg
lret
mov
xchg
les
aam
in
add
test
lock
mov
add
stos
cmp
sbb
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
stos
nop
jns
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
xor
push
test
out
or
and
dec
cmp
loop
push
divl
jo
cltd
rcl
xchg
pop
add
pusha
xchg
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
push
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
les
or
and
pusha
add
imul
jno
scas
mov
je
xlat
clc
xor
mov
add
xorl
add
dec
rolb
pop
add
jo
lahf
xor
js
mov
adc
addb
cmp
mov
movsb
sub
fistpl
fcomps
cmp
mov
test
push
orl
pop
jno
xchg
add
mov
mov
cwtl
pop
cmpl
xor
pop
hlt
push
into
dec
cmc
xchg
or
loope
in
dec
xlat
cwtl
push
push
xchg
and
add
xchg
imul
mov
jne
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
add
enter
sub
rorl
add
jmp
and
inc
cmc
mov
jge
stos
push
add
cmp
push
xor
mov
nop
call
dec
pop
insb
add
cmp
cmp
mov
push
xor
push
call
mov
cmp
imul
imul
in
dec
xchg
xor
repnz
jle
add
adc
cmpsl
mov
call
mov
inc
xor
push
pusha
inc
test
cmp
inc
cmp
loopne
sub
insl
lea
adc
divb
xor
loop
add
shr
add
fcom
loope
add
sbb
adc
not
cmp
cmp
mov
mov
ret
shr
cmp
jbe
add
jmp
add
pop
rcr
inc
dec
gs
and
add
add
dec
inc
loopne
jg
adc
mov
mov
or
mov
call
xchg
dec
adc
test
xchg
push
dec
mov
mov
cltd
or
and
inc
loope
punpckhbw
scas
mov
jo
lods
or
mov
mov
ss
mov
mov
arpl
cmp
dec
mov
das
sarb
inc
adc
fnstcw
rorl
xchg
imul
jbe
mov
and
and
push
pop
sahf
inc
loop
jl
flds
sbb
aad
inc
mov
mov
mov
jl
xchg
push
or
xorl
test
xchg
les
je
cmc
xor
mov
push
or
sbb
mov
sbb
xor
out
push
or
mov
push
jb
push
lea
sbb
lods
and
sub
subl
nop
mov
rcl
sti
push
push
stos
and
xlat
adc
je
leave
call
jmp
mov
ret
pusha
dec
into
add
ret
or
sub
xlat
add
pop
adc
test
jae
push
in
cmc
cmp
mov
push
jb
mov
insb
imul
add
call
adc
adc
sbb
inc
call
sbb
jnp
cmp
sbb
adc
imul
mov
inc
add
dec
enter
push
call
repz
cwtl
or
or
xorb
ljmp
cmp
sub
loopne
in
push
iret
push
test
add
fnsave
push
and
sahf
xstore-rng
cmpsl
add
jmp
insl
add
fmuls
jne
push
add
or
inc
mov
mov
je
int3
movsb
scas
jns
mov
dec
insb
cs
sbb
ss
je
inc
dec
sub
pushf
sub
jno
int3
outsb
es
or
xor
inc
push
sbb
push
or
and
mov
push
xchg
and
in
rorb
add
adc
fwait
js
shlb
push
mov
cmp
xchg
jecxz
repnz
ss
stos
mov
sub
push
mov
xchg
int
jns
jnp
push
pop
fcoms
or
push
loop
xchg
jnp
push
pushf
inc
movsl
das
insb
in
inc
adc
lods
xchg
mov
pushf
pop
les
test
pop
push
add
lods
leave
vpinsrw
aam
rcr
les
xchg
fistpll
ret
stos
dec
xor
sbb
aaa
inc
add
shll
inc
fsubrs
aam
xchg
xor
mov
aaa
pop
shl
in
and
mov
movl
and
add
fs
subl
or
mov
mov
cmp
or
repz
push
push
xor
sub
dec
hlt
xor
add
es
push
pop
cmp
stos
mov
xchg
test
lcall
es
mov
jb
or
test
ret
push
cwtl
push
mov
jb
je
fildl
cld
push
jecxz
sub
xor
mov
or
cltd
lods
lea
ret
pop
pop
adc
inc
xchg
or
sbb
pop
add
push
cmp
cmp
and
push
add
xchg
and
mov
xor
sub
fdivr
into
idivb
push
or
sbb
and
popa
xor
push
mov
in
aad
jmp
push
cmp
xor
xchg
out
test
cltd
push
ret
dec
call
jne
inc
xchg
mov
cwtl
pop
add
add
dec
sbb
jmp
cltd
mov
inc
je
js
add
in
lret
dec
mov
xchg
ja
jp
xor
cmp
mov
cli
sar
dec
pop
gs
pop
mov
in
adc
sub
ja
fcoml
dec
popa
jp
ja
cmpsl
push
mov
aad
int
jo
mov
jns
je
push
movsl
insl
fildl
or
insl
xorl
xor
add
adc
lods
push
nop
in
lods
repnz
jp
sbb
adc
popa
mov
adc
jo
push
adc
xor
pop
sbb
inc
flds
xchg
jb
or
xchg
test
adcl
ja
sbb
lock
in
lea
mov
loopne
orb
js
push
adc
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
roll
cmp
push
cltd
push
cltd
sub
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
push
jmp
ret
fstl
mov
les
addr16
pop
pop
or
ret
xchg
loopne
jo
mov
pop
shrl
mov
mov
fs
jbe
jl
or
test
sahf
xchg
pop
push
and
dec
pop
mov
sub
cmp
adc
lods
cmovae
inc
aaa
call
sbb
dec
sbbl
rolb
push
add
loop
push
mov
mov
add
dec
pop
inc
fmuls
push
aaa
loopne
mov
call
orl
adc
leave
mov
mov
cmpsl
push
clc
mov
ret
cmp
jbe
push
mov
push
push
mov
mov
test
imulb
sbb
jb
stos
pop
lods
ret
mov
xor
pop
pusha
leave
push
push
push
insl
lret
and
sub
xor
ss
and
bound
sub
mov
xorb
inc
cmp
loop
pop
mov
test
xor
or
int3
in
pop
mov
cltd
repnz
and
and
pop
aaa
dec
xor
or
jge
jbe
cmp
int
pop
add
sbb
popf
mov
movsl
add
or
mov
and
and
push
sub
cmp
xor
pusha
pop
mov
add
clc
aam
push
adc
adcb
push
adc
pop
andl
inc
fwait
gs
inc
test
nop
mov
int
sbb
int3
fwait
or
and
push
icebp
scas
add
stc
mov
xchg
jo
or
insb
xlat
add
nop
sub
lods
lods
les
mov
hlt
mov
pop
pop
pop
pop
les
push
shrb
add
adc
aas
adc
push
out
rcl
jne
and
add
mov
xchg
inc
mov
xor
adcb
sub
mov
imul
dec
or
mov
cld
push
push
adcl
sbb
xchg
shl
rclb
int
pushf
xor
push
sbb
inc
or
mov
mov
scas
or
add
xchg
jl
or
test
add
xchg
dec
enter
sub
push
xchg
mov
xor
mov
popa
fucomip
add
add
add
sub
inc
add
roll
fwait
xor
or
add
leave
mov
push
loope
in
push
xor
push
add
or
rcrb
cmp
je
dec
cli
dec
rcrb
in
std
sbbl
jne
push
mov
aad
loopne
or
xchg
jo
xlat
arpl
jmp
push
xor
pusha
or
dec
and
pop
into
sub
add
jo
orb
jmp
xor
push
adc
test
cs
lock
mov
xchg
push
push
sarl
mov
cmp
xor
dec
pusha
xor
jecxz
mov
or
movsb
cmp
add
xor
std
add
lret
xorb
pop
out
ljmp
and
not
or
push
adc
addb
adc
dec
pop
cmp
aaa
xor
and
pop
fmuls
add
mov
push
loope
sub
push
sbb
icebp
out
clc
loopne
push
jecxz
sbb
loope
xor
inc
movsb
scas
imul
mov
test
imul
mov
inc
test
cmc
shrl
jp
sub
outsl
inc
xor
in
inc
xor
sar
xchg
jb
jmp
test
not
push
inc
pop
and
pop
adc
add
add
pop
rcrb
hlt
stc
or
and
and
out
sub
mov
xchg
and
les
popa
jmp
mov
call
cltd
mov
dec
push
adc
arpl
sbb
mov
pop
lds
clc
imul
adc
xorl
mov
add
push
fstl
inc
push
pusha
sub
or
dec
scas
movsb
pop
in
push
cmp
add
adc
jb
inc
mov
push
bound
or
or
ds
je
into
ja
dec
push
sub
add
sbb
pusha
or
stos
pop
or
adc
sti
in
push
add
leave
repz
stos
stos
jno
stos
adc
pusha
add
or
test
cmp
pop
loop
jne
mov
cli
mov
ds
and
adc
adc
jl
inc
or
mov
and
ret
nop
testl
mov
add
call
lods
add
xchg
push
push
inc
test
sbb
dec
cli
repz
inc
sbb
scas
or
sbb
push
cmp
std
sbb
fiaddl
or
jne
mov
jmp
fstpl
arpl
jg
enter
mov
mov
lock
pusha
or
out
movsb
inc
fldl
incb
push
push
movsl
dec
mov
hlt
fstl
lods
dec
add
inc
fcomp
fnstsw
xlat
xchg
mov
mov
clc
pop
fsubr
pop
faddp
andl
sbb
add
loope
pusha
mov
push
mov
cs
pusha
jno
jmp
mov
inc
inc
loopne
lods
mov
push
add
mov
data16
into
icebp
enter
imul
es
push
loopne
adc
mov
out
sbb
fdivrs
sub
mov
clc
xor
cltd
cmp
add
addr16
clc
cmp
mov
scas
push
and
jnp
xor
push
or
mov
or
dec
push
dec
adc
add
inc
jmp
sub
arpl
cmp
pop
outsl
mov
xchg
movsb
movsb
jo
out
insl
cli
adc
cli
mov
mov
inc
aaa
push
sub
mov
int3
dec
sbb
popa
jl
outsb
push
xchg
jp
sub
mov
jne
pop
in
out
test
jg
orb
add
mov
pop
loope
or
push
jmp
mov
cld
xor
dec
hlt
jge
and
shll
add
dec
and
adc
fnsave
pop
cmpsl
enter
jmp
pusha
test
dec
pusha
or
int3
lea
pushf
std
cmp
push
pop
cmc
mov
cwtl
ja
mov
stc
test
adc
jne
push
push
ret
push
adc
ja
xor
inc
pop
mov
rorb
into
inc
add
xchg
fs
push
sbb
push
dec
jns
inc
jno
mov
adc
push
popa
jo
pusha
mov
cmpsb
and
pop
bound
pop
fisubrl
pop
aam
push
mov
bound
inc
addr16
lret
jmp
cmpsl
mov
andb
mov
cmp
dec
cmp
lcall
adc
add
ret
and
and
pop
insb
mov
decl
inc
adc
push
sbb
imul
adc
xchg
xor
cs
mov
mov
insl
loope
stos
loopne
gs
mov
adc
fldl
pop
repnz
das
lock
push
or
sti
jo
add
adc
imul
mov
or
push
adc
in
sbb
or
inc
or
kmovw
add
or
rolb
subb
aaa
mov
xchg
xchg
pop
imul
stos
xor
and
inc
or
or
fcoms
mov
popa
sub
out
push
movsb
jo
lods
shlb
and
cs
cmp
pop
mov
ret
and
inc
insb
add
sub
adc
bound
adc
inc
or
add
fsubl
movsb
scas
mov
lret
ret
aas
ret
jae
fdivrl
mov
xchg
mov
pusha
andl
cmpsb
in
fdivl
mov
ret
inc
inc
mov
push
mov
lock
orb
insl
adc
jg
daa
or
sub
and
add
out
lods
cmpsl
mov
push
add
rorb
pop
dec
mov
scas
inc
xor
push
lret
inc
pusha
mov
popa
mov
push
lea
xchg
pop
pop
adc
hlt
repz
hlt
sub
inc
pop
and
add
jns
lock
mov
dec
inc
mov
repz
gs
push
push
hlt
xor
or
cmc
sbb
or
push
fwait
stos
sbb
sub
rorl
js
and
xorl
aam
mov
mov
rorl
cmp
xor
loopne
jae
addb
and
push
cs
jecxz
mov
movsb
mov
mov
push
lret
cs
mov
nop
sub
imul
andb
or
test
push
add
jmp
jae
mov
popa
ffree
in
fstp
mov
add
mov
arpl
sub
xor
add
xor
and
add
sbb
outsb
push
mov
loope
add
leave
and
cmp
ljmp
lods
mov
sbb
js
mov
sbb
call
or
xor
jge
aad
lea
cmpsl
daa
or
push
test
push
mov
and
sbb
mov
mov
in
notb
xor
cmp
pop
or
subb
pop
pop
lods
xchg
mov
mov
ds
push
pop
lods
xor
loopne
loopne
and
test
sbb
and
inc
xchg
call
popf
sbb
insl
movb
and
jecxz
mov
sarl
mov
lods
push
jp
sub
aaa
sub
push
sub
xor
fnsave
subb
or
ds
test
mov
inc
es
push
and
call
enter
cmp
pop
xlat
jmp
xor
sbb
adc
popa
lea
xchg
sbbl
ret
jb
loop
in
dec
test
loope
stos
or
enter
adc
dec
and
or
inc
pop
or
and
inc
and
or
ljmp
cmp
call
mov
cmp
iret
xchg
insb
sub
adcl
and
inc
push
inc
push
inc
xlat
inc
adc
aam
xor
add
jne
cmpsl
dec
push
push
sub
mov
xchg
or
mov
ds
xchg
inc
cmp
push
jbe
movsl
mov
push
sbb
xchg
aas
xor
jne
dec
sbb
or
lock
test
clc
cmp
pop
cltd
sbb
leave
ret
pop
add
or
andl
cmp
and
jnp
xchg
pop
lock
mov
mov
leave
fimull
lret
mov
rclb
test
rclb
movsb
inc
sub
adc
push
mov
and
mov
rcrb
cmpsl
or
js
aam
in
push
dec
mov
imul
dec
cmp
lods
les
inc
xor
fildl
test
adc
mov
cwtl
fs
loopne
in
in
loop
js
mov
sbb
jbe
pop
jne
int3
mov
sbb
add
add
arpl
inc
lcall
dec
or
and
sub
sti
jb
enter
adc
and
and
rcrb
fistps
add
std
sbb
push
add
jbe
enter
push
stos
lock
and
add
mov
leave
push
pushf
lock
mov
cmp
imul
sbb
out
jns
loopne
rclb
ret
leave
loopne
stc
xor
push
inc
push
fwait
sahf
addr16
es
add
inc
and
les
cmpsl
xor
add
in
testl
add
sbb
cld
or
std
lcall
aam
lock
jl
inc
mov
or
mov
ljmp
jp
aad
stc
inc
pop
push
and
xor
data16
pop
jne
fisttpl
push
stos
push
cmp
cmc
dec
inc
mov
out
sub
adc
fidivrs
out
push
adc
xchg
sub
pusha
mov
pop
movsb
inc
push
insl
movsb
nop
push
cltd
jg
push
add
int
data16
inc
rcrl
popa
mov
inc
fstpl
push
push
add
push
hlt
jge
inc
mov
adc
inc
push
adc
pop
and
cmp
mov
pop
or
shlb
inc
jle
or
or
mov
sub
outsb
inc
xchg
faddl
pushf
xor
mov
in
loopne
cmp
sub
test
test
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
dec
cmp
scas
push
cmp
rol
pusha
or
rcr
and
sbb
int3
sub
dec
daa
inc
sbb
xchg
sbb
sbb
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
ljmp
lahf
cmp
or
push
mov
and
push
loope
ret
sub
roll
push
sbb
pop
sarl
mov
pop
add
jae
popa
xor
and
push
jmp
loopne
cmp
into
add
push
shlb
pop
mov
mov
pop
pop
add
cmp
ret
cltd
outsb
rorb
mov
add
push
fxch
es
stos
imul
push
or
fcoml
mov
inc
or
rcr
and
jmp
adc
mov
inc
sbb
cmp
sbb
andl
and
ret
movsb
fidivs
xchg
cwtl
dec
inc
jnp
xor
pushf
cli
add
in
in
xor
inc
sbb
xchg
jge
loop
fdiv
in
cmp
je
mov
and
and
push
dec
xor
adc
xchg
add
movsb
dec
and
push
inc
add
lret
sub
push
xor
add
mov
add
or
cmp
inc
inc
dec
push
int
pusha
adc
pop
sub
cmp
or
aas
lahf
or
aas
aam
les
cmp
xchg
jl
movlps
sbb
inc
andl
dec
mov
or
loop
inc
pop
pop
lea
sub
jle
mov
xor
or
iret
or
xchg
test
mov
pop
or
pop
adc
mov
sbb
dec
add
ret
sub
add
aas
add
call
push
mov
xchg
add
sub
loop
or
or
icebp
sbbl
push
push
jno
int
xor
pop
and
in
cli
std
jmp
xor
or
cmp
cmp
daa
or
in
pushf
sbb
push
sbb
push
sahf
adc
xchg
or
or
sub
add
or
icebp
and
imul
cmp
and
sbb
and
xchg
jno
adc
xorb
pop
je
xchg
fst
pop
add
test
ffreep
xchg
rorl
aam
js
flds
push
rcrb
pop
mov
shlb
pop
and
mov
scas
cmp
fiaddl
pop
adc
jecxz
xchg
testl
cmc
lret
push
mov
xchg
scas
dec
mov
notb
addr16
nop
push
push
inc
dec
test
outsb
xor
popa
imul
jbe
stos
jno
sbb
mov
iret
pop
ret
in
add
pushf
xor
push
cmp
inc
add
push
add
ds
cltd
mov
push
pop
rolb
inc
push
xchg
push
cltd
int
push
sub
inc
dec
out
jns
je
jl
mov
sub
sbbl
adc
and
add
cmp
jl
xor
lret
into
sbb
mov
fsub
movsb
dec
movsb
loop
push
pop
mov
sub
dec
push
cmpb
ja
repnz
es
jl
sarl
push
pop
enterw
and
sahf
loop
iret
ds
std
fistpll
xor
pop
je
push
mov
mov
adc
rcrl
les
jmp
or
lret
cs
xor
sbb
cltd
inc
incb
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
sub
and
dec
loope
xchg
int
stos
xor
leave
outsl
lock
jne
jl
out
and
icebp
ret
dec
push
jge
lret
xor
xor
inc
sub
pop
loope
sub
add
sub
push
rolb
popa
push
lock
adc
sub
add
andb
fsubs
pop
inc
xor
or
lock
rcl
stc
adc
or
cwtl
js
movsb
sbb
stc
js
add
mov
lods
pop
push
ss
sbb
adc
outsl
push
jno
xor
sub
cld
rcrb
addr16
je
push
orb
inc
test
or
imul
stos
mov
lahf
and
or
inc
movsb
push
add
add
push
jb
das
mov
inc
addr16
add
or
pop
lods
cwtl
mov
rol
xorb
pop
push
cmp
or
mov
mov
and
adc
pop
stc
mov
sub
mov
mov
lea
jp
cmp
lahf
sbb
enter
cmpl
or
iret
push
or
xor
insl
popa
sub
sbb
stos
fwait
push
and
jge
add
pop
dec
inc
adc
rorb
cmp
inc
and
fiadds
jnp
int3
xchg
cmp
xor
push
cmp
insl
aaa
ret
mov
xchg
test
rolb
adc
jne
mov
mov
jmp
test
sbb
adc
mov
scas
and
mov
sar
mov
or
out
mov
adc
adc
pop
and
movsb
jmp
arpl
push
fwait
dec
lock
fdivs
push
pop
fdiv
je
mov
push
cmp
cmp
in
add
jp
mov
sub
cmp
out
leave
jne
push
jne
mov
jmp
cmp
xchg
push
rol
data16
add
movsl
mov
push
arpl
pop
dec
test
adc
xchg
jne
mov
add
and
in
push
imul
cmpsb
add
test
push
mov
lret
xor
mov
xchg
stos
mov
xchg
mov
cmpsb
shrl
ret
xor
cld
and
and
mov
dec
bound
mov
mov
roll
or
nop
add
lods
or
pusha
sub
cmp
sub
rorb
fiaddl
mov
mov
nop
mov
cmp
jge
iret
push
add
add
insl
divb
jne
add
jne
sbb
dec
pop
mov
mov
pop
popa
xor
add
loopne
movsl
call
mov
jp
cmc
xor
or
or
dec
loope
test
outsb
sbb
pop
stos
and
adc
stos
sti
push
dec
xchg
or
mov
or
int
cmpsl
or
addb
adc
pop
adc
sub
xchg
add
fimull
pusha
xchg
mov
popf
sti
sbb
adc
xor
mov
dec
push
rol
leave
and
and
and
pop
insl
mov
icebp
movsb
xor
aas
sub
or
aas
mov
push
mov
add
mov
stos
mov
cmp
repnz
adc
or
pushf
mov
push
sbb
add
add
jle
cmp
pop
iret
jge
cli
adc
test
loope
in
mov
xor
cmp
pushf
mov
mov
loopne
aam
cmp
dec
in
adc
and
mov
fsubs
cmp
push
cmp
js
push
imul
add
dec
xor
jno
mov
lahf
popa
or
popa
jnp
push
or
aaa
or
gs
rorb
icebp
repz
bound
jbe
or
test
sub
addb
sbb
mov
clc
xor
xchg
iret
fldl2t
adc
pop
bound
inc
jle
call
add
lret
and
test
mov
push
push
add
pushf
add
adc
and
or
sbb
fisubs
xor
popf
shrb
inc
ret
cld
pop
or
ja
pop
add
jl
add
ds
add
push
es
ret
cmpl
lahf
sub
xchg
repz
jo
and
or
adc
cmpsb
adc
mov
test
sub
fdivrp
ljmp
mov
push
adc
jmp
xchg
cmp
jl
push
push
push
inc
and
test
lods
pop
test
cmpsl
mov
mov
xorl
ret
xchg
popa
adc
addr16
pop
jmp
sahf
enter
pop
pop
dec
in
lahf
push
shr
jge
inc
bound
hlt
mov
cmpsb
jns
iret
or
shl
mov
mov
jne
sub
fmuls
jnp
addr16
add
add
pop
dec
loop
lret
lock
xchg
add
xor
shl
adcl
inc
dec
add
adc
roll
mov
fstpl
cwtl
sub
mov
in
xor
in
mov
out
push
mov
jl
test
push
test
mov
push
mov
and
add
les
js
and
jge
mov
mov
and
or
add
pop
dec
push
mov
add
xor
icebp
aaa
stc
lret
or
inc
lods
sub
mov
sub
inc
cmp
jne
pop
adc
mov
mov
mov
add
add
insb
nop
arpl
add
mov
ds
popa
repz
cmp
cs
enter
jecxz
lea
jmp
push
std
sbb
shl
ljmp
inc
jp
and
dec
es
jae
das
add
push
push
jo
xchg
pop
push
fadds
popa
and
adc
loopne
mov
fsubs
mov
test
mov
gs
dec
and
or
rclb
push
push
push
outsb
lcall
add
push
push
xor
sbbb
or
jb
and
insl
cmp
mov
adc
sub
andl
dec
push
dec
loope
sub
je
xor
add
and
push
dec
push
cli
cmp
adc
xchg
out
cmp
jne
or
aam
in
sbbl
push
or
cmp
xchg
add
test
sbb
imul
and
add
fsubrs
push
adc
cmc
shrb
cmp
dec
dec
add
inc
or
push
add
je
adc
js
js
ret
mov
xor
inc
push
inc
nop
stos
loope
pop
adc
pop
enter
mov
cmp
jmp
push
and
ljmp
test
add
addb
in
mov
movsb
adc
mov
and
mov
rorl
xchg
mov
add
mov
dec
or
subb
cmpb
pop
pop
cmpsl
and
mov
push
add
push
inc
push
jno
xchg
iret
dec
sbb
pop
inc
inc
sbb
adc
push
mov
call
enter
subb
stos
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
pop
or
mov
pop
adc
push
in
lods
fsubl
adcb
mov
xor
jns
bound
pop
adc
leave
jmp
pop
xchg
jle
mov
aam
dec
lods
and
scas
adc
in
rorb
dec
sbb
test
inc
test
scas
fsubrs
xor
inc
test
xor
mov
sub
ret
mov
dec
in
dec
fcomps
and
cmpb
jo
mov
xchg
fdivrs
jb
mov
pop
mov
push
cmp
imul
add
negb
adc
ret
out
xchg
out
dec
movsl
and
mov
push
pop
dec
jbe
stos
scas
mov
in
in
shrl
rorl
hlt
mov
jbe
push
cmp
adc
sub
rclb
adc
adc
or
or
inc
sbb
or
cmp
xor
cmp
rcrb
or
out
test
xlat
add
adc
adc
fisttpl
xchg
mov
pop
pop
jo
jp
and
test
cld
ja
or
lods
dec
movsb
int3
das
push
push
xor
stos
int3
test
adc
xor
sti
push
pop
push
rorl
and
ret
sub
push
ss
stos
mov
stc
push
test
out
push
hlt
mov
push
adc
mov
out
xor
call
test
sbb
xchg
inc
loop
mov
inc
jo
js
cmp
outsl
shll
add
into
push
mov
test
inc
xchg
popa
cs
js
clc
cs
mov
loopne
adc
stos
adc
push
cmpsb
mov
test
daa
xor
gs
and
mov
mov
in
mov
inc
enter
in
je
daa
fdivs
mov
outsb
arpl
repnz
xor
mov
lds
fwait
push
jmp
std
movsl
movl
mov
in
test
or
pshufw
rorb
xchg
add
adc
rcl
pop
ljmp
and
push
or
push
shl
push
icebp
in
jg
mov
mov
or
mov
stc
xor
pop
adc
cmp
ss
mov
push
ss
sub
dec
repnz
shl
push
out
in
inc
cmp
pop
loopne
lret
fcoml
daa
in
js
sbb
or
add
push
sbb
cmp
scas
push
push
or
mov
out
cmc
sub
push
in
cli
or
testl
add
xchg
add
sbb
rcl
xor
int3
inc
cmp
xchg
cmp
out
inc
mov
cld
mov
out
and
add
addl
in
dec
iret
mov
push
repz
push
pop
xbegin
add
or
scas
or
lods
adc
or
mov
shr
nop
and
or
inc
je
xchg
out
jle
jmp
cmpb
sbb
adcb
nop
jg
push
or
movb
fldenv
shlb
cmpsb
mov
popa
fs
and
pop
and
cmp
jb
jbe
push
paddb
mov
ja
push
mov
push
inc
orl
pop
cmp
pop
add
ds
sbb
pushf
push
hlt
test
pop
movsb
sbb
mov
int3
dec
push
clc
sbb
enter
cli
cmp
or
faddl
push
hlt
inc
add
jle
fdivrs
andl
or
cmp
cmp
xchg
xchg
push
inc
add
or
cmp
cmp
fwait
adc
mov
pop
jmp
cmp
aam
push
mov
popf
jmp
cmp
jmp
add
pop
sti
hlt
push
roll
inc
xor
push
rolb
push
dec
ja
inc
mov
cmp
adc
in
ret
scas
jge
add
repnz
out
in
movsb
push
add
add
in
in
push
pop
or
jae
jae
or
jnp
or
jbe
jmp
or
jae
push
jmp
por
jmp
adc
pop
jae
jae
adc
push
adc
dec
adc
dec
adc
jae
push
jmp
pop
jmp
sbb
xor
jae
jae
jmp
sbb
es
and
jae
push
jmp
pop
jmp
and
or
subb
and
and
test
rcll
inc
packuswb
and
push
sbb
sbb
lock
call
iret
repz
int
fucom
in
cmc
repz
inc
or
repz
sbb
sub
xor
cmp
inc
dec
dec
repz
repz
pop
pop
bound
repz
insb
jno
jnp
test
pop
enter
add
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
lods
inc
in
and
and
push
adc
imul
icebp
add
pop
ja
xor
sub
mov
push
adc
cmp
cmp
jbe
xor
or
std
adc
insl
aam
adcl
out
push
mov
add
mov
ds
push
popa
les
or
or
fstpl
pop
aad
mov
cmp
popa
mov
and
inc
sti
test
cmp
sbb
mov
sub
ds
xor
mov
loopne
jb
sbb
push
jo
popa
cs
add
addl
loope
fdivrl
lods
cmp
xor
and
xchg
test
call
cmp
mov
xor
rolb
pop
nop
iret
add
dec
jecxz
cmpsb
iret
jno
les
mov
mov
or
xchg
dec
loopne
add
sahf
xchg
pop
mov
push
je
dec
rolb
cmp
jae
mov
jmp
repnz
nop
jecxz
pop
and
mov
outsl
sbb
inc
cmc
push
mov
inc
push
pop
mov
add
add
ret
cmc
xor
dec
aaa
push
in
jo
pop
js
add
push
notb
in
push
dec
loop
mov
pusha
sub
call
push
mov
ror
xor
shr
xor
pushf
rorl
out
mov
or
or
icebp
add
add
add
or
mov
loopne
pop
iret
or
std
mov
and
not
and
xor
add
add
mov
aam
sub
jge
fsubr
add
iret
xlat
in
fisttps
rorb
mov
fisubl
xorl
cli
and
and
mov
push
rclb
data16
test
xor
fs
push
imul
sbb
fmull
pop
push
or
and
not
and
add
mov
lods
xor
out
add
cs
fsubr
rcl
push
aam
mov
pusha
mov
jo
rdmsr
push
xor
sub
mov
cli
mov
rol
shll
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
mov
in
aam
sbb
in
lret
in
push
cmp
xchg
push
rclw
xchg
add
les
pop
add
fadd
xor
das
sbb
mov
call
and
loopne
in
sub
sbb
lcall
cmp
popl
imul
lret
mov
xor
add
notb
inc
jge
and
call
sbb
or
xor
int3
pop
inc
and
xor
add
inc
or
enter
aas
shlb
jge
push
ret
push
jo
inc
inc
scas
add
adc
pusha
out
dec
pusha
pushf
sarb
or
mov
cmpsb
filds
inc
jne
loopne
dec
mov
mov
dec
fadds
pop
fs
js
call
push
and
fisubrl
add
push
mov
shll
push
imul
fs
jl
nop
cmpsb
call
pop
jle
rolb
add
sub
fwait
add
cmp
mov
aam
cmp
xor
xor
sub
mov
les
cltd
lods
shl
rolb
dec
cmp
jecxz
jo
ss
push
xor
push
xchg
inc
dec
shll
sub
dec
loopne
add
adc
dec
inc
cmp
dec
push
cltd
and
inc
push
add
rolb
dec
jae
jb
int3
dec
push
and
xor
xchg
pop
es
push
es
or
pop
xor
adc
scas
push
aam
jae
xor
inc
and
add
pop
fadds
sub
add
scas
push
add
sub
rol
and
scas
inc
sbbl
pop
fcompl
pop
and
jb
rorb
loopne
inc
mov
adc
mov
or
lcall
in
in
adc
sub
mov
movsl
imul
enter
stc
mov
or
lods
jo
pop
push
mov
dec
inc
mov
inc
scas
dec
cmpsb
imul
fcoml
fiadds
loopne
call
and
ficomps
and
inc
mov
pop
les
dec
add
pop
sbb
shrl
mov
or
inc
into
add
cmp
dec
std
andl
aaa
sub
xchg
scas
cltd
add
sub
data16
aad
loope
xor
adcb
dec
push
decl
pop
mov
out
in
aaa
xor
or
rol
and
loopne
mov
mov
test
jge
inc
jae
stos
or
sub
mov
sub
popl
lea
jmp
jl
test
clc
mov
push
sub
pop
mov
jecxz
lret
dec
mov
jne
pop
or
sub
add
inc
neg
mov
sub
push
enter
clc
aaa
jbe
or
sbb
xchg
and
in
adc
cmp
inc
add
inc
pusha
jnp
jae
push
pop
rolb
rep
fisttpll
mov
or
mov
push
imull
outsl
pop
fdivp
ror
mov
hlt
push
shr
pop
pusha
or
xchg
fistps
push
mov
lea
and
push
loopne
xchg
movb
inc
adc
dec
js
ret
movl
mov
adc
jbe
fdivrl
pop
dec
lods
add
cvttps2pi
pushf
mov
xchg
mov
or
pop
sbb
add
leave
mov
stc
ja
lea
or
add
lret
inc
stos
mov
fwait
cmp
cmp
xor
adc
dec
sbb
lock
addl
or
adc
rolb
enter
nop
push
sbb
sbb
jbe
push
in
movups
scas
in
imul
and
mov
inc
and
pop
pop
add
mov
fs
mov
mov
inc
push
sub
neg
cmp
dec
inc
pop
stos
xchg
icebp
jno
xor
pop
pop
mov
outsb
je
dec
test
cmp
movl
loope
mov
loop
and
and
pop
movsl
mov
push
add
mov
mov
push
mov
lods
sub
sbb
add
sbb
pop
lock
jne
push
lret
out
or
mov
or
jmp
fdivs
cmp
sbb
sahf
dec
and
adc
dec
cld
and
add
xchg
orl
xchg
pop
ljmp
int3
pop
add
and
daa
dec
fsubrl
mov
or
mov
xchg
rorl
xchg
or
or
dec
inc
pop
pop
push
roll
adc
inc
sbb
fisubrl
jl
add
sub
sbb
test
cmp
mov
pop
insl
das
and
xor
jbe
cli
es
mov
push
cmp
bnd
and
sbbb
xchg
xor
insl
sbb
js
sbb
mov
call
mov
inc
mov
or
sbb
dec
cmp
jl
dec
xchg
fidivl
js
test
jae
ds
imul
and
pushf
dec
daa
lods
test
or
sub
mov
adc
mov
adc
adc
js
sub
adc
mov
sub
add
add
push
inc
in
ss
sbb
mov
adc
addb
cmp
or
or
and
rorl
jne
ret
lods
jne
imul
mov
loopne
sub
push
icebp
fwait
and
loop
test
and
adc
ret
insb
pop
or
add
xchg
and
add
insb
jbe
xchg
jp
and
add
pop
inc
mov
adc
sub
jnp
and
mov
fildl
push
push
sbb
call
mov
ds
test
data16
adc
popf
ss
add
hlt
jmp
sbb
pop
and
and
and
pop
or
xchg
add
add
fmuls
push
inc
inc
roll
imul
out
ffreep
add
nop
shrb
sub
fwait
mov
rolb
cwtl
push
add
and
pop
ss
mov
add
add
adc
xor
pop
cs
lea
push
pop
inc
es
testl
cmp
pop
pop
cmp
pop
push
cwtl
cmp
sub
pop
pop
dec
es
push
pop
ja
push
add
mov
sub
push
jmp
mov
test
pop
and
enter
sub
pop
pop
add
dec
mov
loopne
hlt
js
add
clc
je
cld
or
xor
inc
jl
mov
or
cmp
sbb
adc
push
pop
shrb
sbb
sbb
pop
pop
enter
jno
sub
sbb
pusha
fcoms
dec
testl
push
pusha
cmp
jmp
dec
pop
repnz
outsl
sub
or
aam
jle
inc
push
push
cmp
sar
aam
mov
fisttpl
popa
enter
xor
imul
int
lea
push
sub
lock
inc
call
lret
inc
lea
test
nop
js
repz
stos
xchg
add
and
cmp
push
cmp
lcall
xor
lods
inc
subb
adcl
mov
cli
push
xchg
sub
xor
mov
je
push
push
aam
setns
dec
mov
jnp
inc
daa
shr
mov
push
scas
pop
jmp
dec
or
negl
dec
arpl
daa
mov
test
cmpl
or
stos
test
xor
xchg
sub
rcrb
in
dec
inc
dec
scas
inc
jg
mov
and
and
sbb
sbb
test
cmp
mov
adc
cli
add
mov
or
mov
mov
lock
call
imul
cmp
push
pop
inc
inc
rorl
or
imul
xor
stc
push
or
or
pop
div
add
mov
adc
or
iret
add
and
inc
lret
das
sub
mov
sbb
dec
je
mov
mov
push
lock
xor
dec
cs
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
inc
xchg
rol
dec
or
sub
adc
adc
and
in
inc
jl
pop
push
xchg
dec
clc
jo
sbbb
jmp
hlt
je
xor
icebp
push
mov
data16
push
and
enter
addl
lahf
mov
jbe
push
xor
mov
lcall
push
jp
fisttpl
push
pusha
bound
dec
sub
aam
pop
stos
jmp
push
je
mov
in
add
cmpl
mov
sub
dec
sbb
lods
ja
adc
push
xor
scas
jae
or
xor
ss
cmp
and
jnp
loope
cmp
jo
dec
inc
sub
push
mov
jne
mov
mov
push
lock
inc
xchg
lret
add
xchg
inc
dec
inc
jecxz
or
sbb
ds
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sub
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
ljmp
or
je
sti
xor
and
mov
arpl
imul
and
mov
sbb
xor
test
ss
mov
xchg
cmc
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
cltd
xor
sub
or
xchg
add
sub
cwtl
adc
sub
push
sbb
icebp
fs
iret
inc
and
hlt
cmpsb
sub
or
stos
hlt
xor
xchg
test
mov
push
and
and
mov
cmp
mov
in
fwait
out
jo
xchg
cmp
fistpl
rorb
enter
leave
leave
sbb
arpl
dec
xor
movb
and
mov
push
cltd
or
cmp
dec
mov
out
mov
sbb
js
jle
data16
dec
adc
shrb
mov
popf
push
mov
lea
push
mov
imul
or
movsb
out
enter
adc
jg
xor
cmpl
jne
xchg
mov
mov
push
test
xchg
fistps
lods
arpl
sbb
test
dec
mov
and
shlb
add
jmp
pop
pusha
jmp
cmp
je
cmp
add
xchg
push
insb
sub
lcall
sbb
jge
pop
mov
adc
push
cwtl
fimull
add
lds
movsb
mov
cli
inc
mov
cmp
jle
sub
or
add
inc
mov
xchg
sbb
mov
add
or
pop
sbb
mov
shll
push
nop
jo
jns
pop
pop
cs
scas
sub
mov
pop
fidivrs
adc
xchg
into
stos
stc
or
lods
test
cmp
mov
mov
inc
adc
movsb
pop
arpl
xchg
xchg
push
push
lods
fdiv
xchg
xchg
or
test
push
xchg
and
push
rolb
testb
movzbl
cmp
je
or
dec
or
cmp
repnz
push
lods
lcall
mov
add
cmp
test
add
mov
or
shrb
les
sub
mov
lea
daa
decl
jle
je
cmp
out
sub
push
cmp
jge
mov
in
and
clc
sub
punpckldq
pop
lea
jae
inc
test
in
adc
xor
nop
cmp
and
or
lock
clc
call
xor
cld
mov
mov
add
add
repnz
push
ja
fs
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
sub
add
lds
js
cli
mov
push
mov
cli
es
cmpsb
adc
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
xchg
repnz
movsl
out
pop
cmp
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
pop
dec
push
mov
adc
shrb
mov
jmp
or
inc
inc
xor
mov
fildl
pusha
bound
jmp
sbb
and
ret
cltd
idiv
inc
je
ljmp
cmpb
mov
push
adc
pop
xchg
push
fiadds
aam
je
mov
add
add
sbb
aas
cmp
mov
stc
pop
repz
adc
mov
push
inc
or
lock
cmp
mov
out
sub
sbb
jne
jmp
pop
inc
cmpsb
daa
pop
out
push
cmp
adc
aaa
sarb
ret
mov
cld
mov
pop
outsb
gs
jae
xor
sbb
call
mov
mov
mov
aas
pop
testw
in
fs
adc
cmp
je
xor
jg
cmp
push
cmp
jne
inc
jne
push
inc
adc
flds
pop
pusha
repnz
out
inc
mov
jb
mov
je
ret
lea
mov
cmp
jne
dec
test
xchg
sub
cld
repz
inc
ret
mov
icebp
add
mov
enter
lods
shll
xor
call
xchg
xor
cmp
mov
jmp
mov
popa
push
jmp
inc
jl
negb
mov
jp
add
shl
dec
mov
sub
dec
shrb
mov
mov
and
rol
mov
outsl
adc
test
or
cmp
pop
dec
cld
inc
mov
xchg
hlt
rcll
jle
mov
pop
pop
or
sbb
hlt
push
out
sbb
shlb
scas
and
push
push
add
push
pushl
insl
mov
push
inc
cmp
pusha
mov
std
mov
call
imul
mov
addb
roll
aad
inc
lods
aaa
lcall
xor
dec
sub
pop
loopne
inc
cwtl
inc
xor
gs
jge
inc
imul
xorl
xor
xor
mov
and
cmp
sbb
in
ret
pop
ficoms
or
in
inc
inc
push
out
jmp
xor
inc
jecxz
jb
inc
out
mov
lods
and
sbb
ret
subb
idivb
pop
ucomiss
imul
es
xor
push
cmp
mov
or
xor
in
push
cmp
ret
fnstsw
push
cmpsb
pcmpeqb
clc
dec
or
das
dec
fstpl
add
add
pop
clc
arpl
hlt
pop
test
mov
adc
xchg
cltd
jge
cld
imul
mov
int3
in
imul
adc
cmp
or
adc
or
push
imul
or
inc
shl
or
mov
ret
and
scas
ret
aam
or
in
sbb
das
ljmp
mov
or
add
loop
inc
push
or
hlt
fisubrl
dec
cwtl
test
mov
mov
js
sub
pop
push
inc
enter
or
push
lock
sub
jge
jne
test
test
pop
sub
add
and
jle
sbb
lock
sub
and
mov
movsl
movl
and
dec
inc
loop
loopne
sub
sub
add
into
dec
or
xchg
callw
dec
or
or
or
inc
ljmp
mov
sbbb
fstpl
jmp
jo
add
rolb
mov
push
add
out
les
xor
pop
add
pop
xchg
jmp
shll
pop
adc
sbb
pop
popa
jl
dec
xchg
xor
add
mov
or
mov
ret
pop
int
mov
pop
jne
push
movb
cmp
and
mov
es
dec
dec
inc
pop
loopne
mov
push
cmp
pop
xor
xchg
in
adc
cmp
mov
je
int
push
mov
sti
test
rorb
xor
in
or
dec
pop
stc
cmp
inc
push
lcall
loope,pt
enter
xor
pusha
add
pop
lea
movl
or
xchg
mov
es
mov
dec
inc
pop
sub
hlt
cs
loopne
outsl
movsb
sub
or
fs
pop
movb
jbe
push
es
push
test
add
jmp
xchg
jecxz
aas
inc
jns
cmpb
jne
mov
or
idivl
ret
or
sbb
xor
subl
fs
data16
ret
push
push
aas
add
lods
sub
jmp
rcrl
mov
dec
mov
dec
test
aam
push
xchg
loope
mov
test
ljmp
mov
es
inc
xchg
push
adc
inc
add
adc
inc
lock
and
lret
jno
fstps
sub
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
adc
jmp
lcall
test
jb
mov
lcall
pop
pusha
repnz
adcl
and
pop
fistpll
clc
addl
data16
add
push
adcl
sub
subb
mov
adc
dec
jbe
pop
or
sbb
sub
fisubs
mov
push
clc
push
mov
add
adc
add
jne
sbb
push
addr16
cmp
sahf
popa
lret
push
jo
mov
pop
jl
or
insb
push
jl
sbb
das
mov
jnp
shl
xchg
pop
mov
xor
cmp
adc
dec
sbb
sub
pop
pop
sbb
inc
stos
xchg
loop
inc
loope
xchg
addr16
fistps
fidivl
inc
and
sbb
or
sbb
pop
add
movsb
pop
or
std
jmp
aam
stos
mov
test
fcmovu
lret
xchg
xchg
inc
sahf
mov
lods
std
call
push
jae
lock
cs
xor
lea
sub
inc
jge
lods
jg
inc
cmp
jb
cmp
dec
xor
call
push
push
sti
fnstenv
mov
leave
inc
lea
push
addr16
jecxz
adc
ret
in
push
mov
mov
push
push
hlt
add
movl
cltd
push
rclb
ljmp
mov
xor
dec
jne
add
jecxz
and
test
scas
xor
adc
loope
andb
arpl
inc
icebp
adc
rclb
cld
minps
sarl
cmp
inc
xor
jb
inc
push
scas
push
add
mov
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shl
js
imul
loopne
mov
add
inc
shll
push
jecxz
mov
daa
inc
insb
insb
por
pop
insl
test
data16
and
adc
mov
sub
or
dec
movsl
rorb
lds
in
pop
and
add
add
pop
mov
iret
incb
out
add
xorl
or
movl
mov
mov
inc
fsts
xchg
pop
xchg
sub
cmp
and
sbbb
add
add
push
pop
data16
bound
arpl
or
jno
clc
adc
dec
sbb
data16
adc
out
xlat
xchg
mov
leave
mov
into
je
mov
add
and
std
enter
pop
add
pop
cld
sbb
sbb
lret
mov
test
add
imul
jo
nop
push
sahf
cmp
stos
push
pop
fcoml
in
jmp
imul
pop
inc
mov
out
ret
add
jp
addr16
stos
xchg
cmp
ret
add
dec
mov
imul
cmp
cmc
jno
pop
les
push
add
fists
mov
or
fsubrs
xorl
shl
mov
popa
sbb
dec
inc
sbb
xor
xor
inc
or
lret
ss
cmpsl
leave
push
sub
popa
rclb
fstpt
movsb
imul
xor
pop
daa
stos
jb
xor
jns
in
cmp
rolb
xor
adc
je
pop
xor
xchg
add
sbb
push
jmp
bound
mov
loopne
and
inc
push
mov
jo
rorb
pusha
adc
or
pop
xor
stos
or
insl
fmuls
mov
in
fs
cmp
sahf
je
pushf
aaa
movsb
outsb
push
pushf
sub
fwait
mov
test
cs
addb
push
test
xor
int
cwtl
push
adc
push
cmp
sbb
pusha
test
adc
and
add
adc
sub
or
mov
or
movl
cmovb
mov
push
or
mov
nop
ja
jecxz
in
es
adc
and
fwait
or
xchg
inc
inc
add
cmp
fstl
push
mov
inc
sbb
cmp
inc
add
pop
sti
ret
mov
cmp
mov
add
push
sbb
sub
sarl
stc
push
mov
sbb
pop
or
mov
leave
call
addl
inc
sbb
ret
jbe
pop
js
test
add
mov
or
js
popf
dec
test
mov
or
rorl
out
js
and
jae
adc
cmp
or
mov
jnp
ss
push
xor
cmpsl
imul
fldenv
cwtl
cmp
outsl
xor
jle
adc
add
jg
xor
sarl
lock
and
lock
or
jle
mov
jmp
imul
mov
fildl
mov
inc
inc
sub
mov
cmp
adc
sbb
fcmovnbe
push
and
jo
inc
or
dec
push
pop
imul
and
insl
pop
push
ret
xchg
cmp
outsl
sbb
outsl
pop
cmp
mov
adc
into
mov
jne
pop
test
and
or
dec
imul
and
sub
test
fcmovne
inc
sub
sbb
cmp
inc
icebp
add
mov
inc
mov
pop
jmp
rorb
aad
imul
daa
movsb
add
adc
jecxz
dec
pusha
cs
dec
insl
jecxz
push
int3
les
push
push
addr16
adc
rclb
ret
out
jo
dec
in
or
cli
mov
movl
pop
jo
dec
sti
or
jns
nop
adc
cmp
sub
mov
int
sub
pop
sbb
dec
mov
lods
push
pop
fiadds
pop
repz
or
or
inc
or
push
flds
iret
stos
dec
sub
subl
lock
fcoms
push
ja
test
adc
mov
imul
inc
mov
js
mov
sar
les
mov
in
cmp
push
out
mov
xchg
hlt
je
inc
ja
js
lcall
dec
aad
test
and
lret
xorl
cmpl
loopne
sub
jle
jne
pop
push
push
lods
mov
sub
xchg
sbb
mov
int3
and
push
or
lock
ds
cli
push
sub
sbb
dec
fmuls
push
mov
jl
jmp
lea
aad
and
jle
or
jbe,pt
test
add
cmpl
pop
arpl
sbb
insb
adc
sbb
sub
sub
lahf
mov
jns
dec
xchg
lcall
out
pop
add
dec
outsl
and
cli
cmp
or
loopne
mov
js
add
add
je
inc
sub
mov
sarb
dec
mov
pop
fstl
jmp
loope
aas
inc
push
dec
sub
aas
sbb
or
pop
jmp
sarb
or
push
xchg
sahf
in
or
aam
arpl
adc
pop
add
jno
sub
out
jae
cmp
pop
mov
leave
clc
or
xchg
or
sahf
rol
adc
or
mov
push
hlt
test
jo
arpl
mov
pop
sbb
adc
pop
pop
mov
sarb
adc
popa
std
xor
insl
inc
je
jp
and
mov
push
add
in
mov
ss
dec
xchg
orb
inc
adc
sbb
loop
roll
jmp
or
cmp
movsl
rcrb
or
dec
sbb
in
fisubs
pop
inc
add
fisttps
jmp
into
ja
or
and
pop
mov
push
scas
stos
pop
aaa
jmp
sub
mov
sbb
shlb
pop
dec
sub
insb
les
jge
popf
cmp
ja
scas
shlb
inc
add
cwtl
mov
or
fsubrl
cmp
xchg
divb
pop
es
lods
in
mov
inc
pop
cmp
adc
xchg
xor
pop
mov
add
in
jmp
inc
ja
sub
adc
fwait
lods
sbb
orl
mov
inc
inc
cltd
pushf
adc
inc
jp
pop
js
mov
adc
lock
inc
movsl
jle
pusha
add
fisttps
add
cmpl
je
add
fadd
add
push
mov
loope
xchg
cmpsb
in
sbb
mov
sub
scas
mov
fisttpl
sub
sbbl
sub
mov
insl
pop
leave
sbb
inc
mov
or
cmp
shll
int3
inc
inc
push
outsb
add
and
repz
les
jmp
ja
stos
or
mov
add
xor
pop
lcall
enter
push
push
cs
in
or
mov
add
cmp
mov
call
mov
pop
cmp
cmpb
mov
in
icebp
mov
hlt
rcll
jae
or
insl
push
sub
or
scas
push
test
push
popa
pusha
inc
test
fisubl
imull
inc
in
cmp
popa
inc
inc
insl
or
sbb
xor
push
dec
xor
pop
mov
or
and
mov
test
cmpb
sub
popa
aaa
or
mov
cmp
and
inc
push
or
dec
popa
shll
sub
add
xchg
mov
jb
cmp
mov
adc
mov
clc
je
sar
xor
in
add
stc
in
cmp
and
xchg
push
push
mov
loope
jns
mov
shr
jle
and
pop
cmp
sbb
add
sbb
inc
or
jp
push
pop
mov
adc
ret
push
pop
imul
fwait
pop
jae
adcb
push
and
xchg
or
popa
dec
push
adc
and
add
in
loopne,pt
inc
mov
daa
jne
int
dec
outsl
dec
dec
and
into
sbb
shr
add
xor
cld
pop
cmp
inc
push
je
cmp
jbe
push
pusha
and
and
push
xor
jmp
das
outsl
lea
je
lret
movl
adc
nop
rorl
and
or
or
test
inc
mov
or
nop
and
inc
sub
and
jl
in
and
sub
cltd
push
add
test
xchg
loopne
and
or
push
cmp
mov
hlt
xchg
dec
jo
mov
mov
pop
push
ror
add
aas
loop
mov
mov
testb
scas
dec
js
ljmp
or
mov
lea
cmp
mov
and
std
pop
sbb
mov
mov
and
cs
jb
data16
xchg
cmc
mov
xor
inc
imul
sub
xor
sbb
mov
fwait
rol
or
dec
shll
add
sbb
push
cltd
cli
cli
push
mov
dec
test
cld
cwtl
mov
out
cli
insb
lret
jne
mov
adc
fisttps
cmp
dec
js
scas
cli
outsl
pusha
jle
push
xor
pop
div
hlt
add
lea
xchg
sbb
ljmp
xchg
jmp
lods
mov
dec
push
adc
aam
inc
inc
cli
push
adc
enter
movsl
adc
add
add
xor
push
icebp
nop
mov
adc
sbb
cmp
sti
shlb
cmp
xchg
orl
push
subb
fmull
andl
gs
add
lds
movsl
imul
out
xchg
dec
push
add
or
fiaddl
es
push
insl
ss
movsb
sub
je
mov
cmp
cmp
push
shlb
std
cmpsb
imul
movntps
sub
jne
bound
adc
out
adc
inc
or
in
pop
xchg
lret
adc
hlt
ret
jle
int3
add
nop
sbb
js
add
xchg
add
imul
push
push
mov
push
push
data16
push
pop
cmp
jb
neg
xchg
adc
rorl
jmp
dec
mul
or
rorl
je
push
out
push
rep
mov
dec
ljmp
add
scas
ret
js
hlt
pop
push
adc
inc
cld
add
shrb
movsl
test
clc
into
xchg
gs
mov
test
or
ljmp
xor
adc
lods
sbb
dec
xor
inc
adc
movb
and
pop
adc
mov
scas
je
scas
pop
and
pop
and
sbbb
jge
stos
js
fnstcw
ds
and
clc
jg
fs
sub
add
movd
movaps
add
push
enter
shlb
test
xor
cli
rcl
lret
adc
dec
cmp
and
lret
or
loope
fsts
or
ljmp
insb
std
jnp
mov
and
in
mov
adc
or
add
and
xchg
out
push
cmp
ljmp
fisubl
ret
mov
add
adc
xor
shl
pop
enter
push
adc
sbb
out
jns
sbb
and
push
fdiv
rcrl
aas
cmp
mov
and
orb
decb
aam
xor
xor
pop
add
sub
jle
add
xorl
test
mov
lret
ret
adc
int3
jmp
sbb
out
fdivrl
lret
sub
ret
adc
std
pop
test
xchg
add
arpl
add
and
jne
sub
mov
mov
and
imul
pusha
in
pop
cmp
enter
inc
pop
adc
mov
push
or
mov
jmp
push
es
fwait
add
or
add
and
inc
sub
clc
ja
mov
pushl
jbe
bnd
cmp
mov
pop
inc
cmpb
out
adcb
push
jo
inc
mov
inc
inc
and
jae
addb
or
or
sbb
je
or
cmpsb
ljmp
inc
jno
stos
adc
nop
dec
sbb
or
imul
mov
xchg
cltd
fwait
jp
out
jno
or
js
test
sbb
mov
pop
xor
int3
sbb
jae
add
xchg
outsb
adc
enter
xor
popf
dec
push
pop
sub
shll
mov
je
push
cmpb
jns
add
xor
jl
lea
push
jne
ret
addr16
xchg
fwait
js
cmpsb
lods
sbb
push
sbb
sbb
movb
inc
mov
addr16
xchg
xchg
sbb
xchg
adc
jmp
cmp
scas
das
cmp
imul
add
ja
mov
dec
push
and
adc
lods
mov
pop
cmp
inc
scas
sub
xor
shll
rorb
out
fidivrs
mov
mov
jne
orl
add
xor
xlat
mov
arpl
pop
xor
pop
pop
mov
hlt
push
dec
bound
and
int3
add
aad
int3
testb
adc
inc
inc
cmp
lea
push
pop
arpl
sub
pop
cmp
int3
or
sbb
cld
jecxz
mov
push
lock
cli
lods
and
addl
cmp
jb
or
cmp
dec
dec
movsl
pop
insb
mov
sub
leave
test
adc
sbb
sub
ret
mov
imul
enter
pop
push
ret
add
jle
or
enter
pusha
add
loopne
pop
and
fs
test
add
loopne
sahf
or
inc
sbb
jmp
xor
loop
icebp
movsb
jns
in
push
rcl
add
pop
mov
cs
rorb
inc
mov
push
push
sets
clc
add
xor
inc
inc
push
add
xlat
shl
sub
push
loopne
loopne
and
pop
cld
sbb
jmp
ret
jne
cmpl
cmp
cli
testb
je
inc
mov
cmp
loop
jg
test
es
loope
or
cmp
jne
dec
jmp
sbb
jle
cmp
xor
lret
jne
inc
aaa
push
lds
mov
mov
loope
int
adc
adc
mov
push
push
pop
push
call
dec
push
rolb
inc
and
sbb
stos
inc
xchg
ret
cmp
pop
movsb
roll
cmp
mov
xchg
adc
xchg
movsb
daa
xor
pop
and
pop
decb
pop
pop
jne
fsts
popf
jo
adc
push
cmp
jb
rep
jmp
pop
pop
lock
xor
push
mov
sub
jb
lcall
out
jnp
data16
inc
nop
push
les
push
or
push
movsb
and
add
lcall
add
add
in
mov
inc
cmp
repz
add
into
mov
inc
xor
xchg
mov
iret
jnp
daa
or
push
or
cld
gs
aas
out
imul
inc
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
in
lea
or
clc
sbb
jmp
sbb
out
lock
nop
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
pop
and
std
jnp
stc
or
cld
out
int3
addr16
sarb
xchg
mov
sub
out
cmp
xchg
pop
nop
loopne
adc
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
sahf
out
mov
cwtl
mov
jns
ret
addr16
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
fmull
in
hlt
or
xchg
mov
push
add
add
outsl
pop
movsb
or
ja
push
xorb
xchg
push
jbe
sbb
shrb
jmp
imul
movsb
andl
push
test
dec
loope
fisttps
mov
loope
fnstcw
cmp
jae
sub
hlt
push
nop
push
ljmp
jo
inc
fwait
mov
inc
addps
inc
xor
lcall
shll
sbb
orb
inc
lea
or
push
cmp
and
xchg
push
lea
shll
sbb
pop
popa
sub
int
jne
xchg
and
iret
push
cmp
loopne
inc
test
mov
mov
push
pop
mov
call
sarb
imul
push
sbb
adc
pop
iret
xor
sub
or
push
aaa
movsl
mov
mov
sub
ret
sbb
mov
pop
cltd
pop
pop
jb
and
insl
xchg
cwtl
or
cmp
mov
mov
push
lcall
pop
push
jle
push
adc
repnz
insb
sbb
dec
fistpl
dec
push
aaa
loope
jg
jmp
mov
mov
jle
cmp
sbb
outsl
pushf
mov
cmp
into
lea
cmp
out
ss
pop
or
jmp
sub
cmp
jne
out
ds
jnp
adc
or
add
inc
and
jne
pop
sub
add
aad
jno
fmull
add
loop
xchg
cmp
mov
cmpl
push
and
cmc
mov
sbb
sub
adc
jmp
xchg
mov
jne
pop
clc
adc
pop
and
inc
sti
addb
jp
mov
xchg
addl
shr
mov
sbb
cmpl
sub
mov
ret
adc
imul
stc
jle
mov
pop
scas
pop
and
jb
loop
xlat
xchg
xor
pushf
xchg
out
push
pop
fsubs
add
xor
and
and
and
cld
fldcw
ja
inc
inc
testb
mov
scas
or
push
test
xchg
cmp
push
dec
fdivrl
jne
pop
dec
or
cs
mov
xchg
inc
add
xchg
cwtl
pop
fsubs
mov
mov
rorb
arpl
jmp
and
jle
pop
fdiv
and
lret
push
sbb
pushf
std
mov
mov
add
jg
ret
sbb
add
mov
pop
js
push
ljmp
in
cwtl
sub
scas
or
add
push
push
sub
mov
mov
sub
cmp
stc
xor
or
lds
lods
sti
imul
popf
mov
cs
inc
pop
sbb
sub
pop
fadds
shl
popa
jmp
aam
push
fcoms
pusha
jl
push
sub
ljmp
pop
jbe
lea
adc
sbb
nop
dec
add
jp
adc
loopne
popf
out
leave
push
sbb
xorb
push
stos
add
and
popa
mov
ss
adc
add
jmp
mov
add
jmp
push
add
sbb
scas
push
orl
or
lds
lods
cld
jbe
testb
aam
add
jnp
mov
pushf
pop
popa
mov
movb
inc
js
dec
cmp
es
out
call
dec
cmp
pushf
mov
inc
bound
mov
pushf
add
int
mov
push
add
addr16
je
sub
inc
cwtl
sbb
and
cmc
lock
adc
mov
xor
mov
push
mov
inc
test
jl
pusha
lahf
push
adc
addr16
pop
or
js
hlt
pop
add
daa
or
xchg
roll
push
pop
fwait
push
pop
add
xchg
dec
cld
or
dec
fildl
dec
push
rolb
int
cmp
push
test
shl
ret
mov
rcr
pop
aaa
mov
sbbl
shrb
add
dec
inc
out
repnz
dec
add
jmp
pop
mov
push
and
cltd
lret
lcall
push
push
cltd
push
frstor
push
rolb
sbb
mov
icebp
mov
clc
add
dec
cld
or
test
daa
dec
jne
jmp
adc
pop
pop
pusha
repnz
sbb
mov
jmp
sub
xor
into
ds
sahf
xchg
sub
jo
outsb
adc
jmp
and
xor
es
add
aam
andl
jno
bound
adc
jae
push
outsb
into
add
shlb
sti
scas
xchg
fisubs
dec
mov
push
cmp
rcr
cmp
jne
es
jne
call
aad
adc
or
lods
clc
jb
jmp
push
inc
incl
dec
mov
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
push
sar
nop
adc
adc
inc
inc
inc
out
out
or
jl
mov
jne
pop
repnz
cwtl
mov
call
inc
dec
pusha
sub
out
push
dec
lods
lcall
sub
and
stos
jae
test
daa
push
sbb
subb
jns
or
popa
adc
and
orl
nop
or
pop
decl
dec
xor
xor
or
xchg
dec
xchg
dec
pop
pop
add
pop
or
arpl
or
fs
gs
data16
js
into
mov
sbb
movb
jmp
push
mov
mov
movsl
add
rcll
mov
je
mov
stos
or
jg
add
in
mov
sahf
nop
jne
add
out
mov
cld
pop
loop
push
imul
push
push
push
inc
call
and
ljmp
jecxz
outsb
mov
push
jo
adc
inc
push
scas
les
lea
push
aam
push
push
and
add
sarb
push
outsb
xorb
clc
pop
insb
jo
bound
pop
ljmp
cmp
and
jno
je
aas
mov
sub
xor
mov
ja
popa
adc
dec
mov
or
lcall
es
outsl
call
xorl
fstps
adc
pusha
adc
pop
and
es
adc
push
js
ljmp
or
adc
or
test
sbb
data16
sbb
add
fbld
inc
insb
lcall
fmuls
lock
and
sub
pop
mov
jp,pt
jge
cmpb
sbb
sbb
sub
lock
push
loopne
or
stos
rolb
sub
jl
shlb
ja
and
cmpsb
jne
pop
mov
lock
push
or
incl
stc
and
mov
inc
je
mov
std
mov
decb
mov
sbb
or
add
jmp
pop
xchg
or
mov
inc
inc
push
loope,pn
pusha
repz
sbb
scas
mov
pop
adc
jmp
cmp
mov
inc
cmp
jb
jns
jo
xorl
insb
shrb
aaa
add
fs
adc
add
xor
mov
ret
data16
ret
iret
sbb
sub
or
lods
shl
popf
sbb
or
push
ljmp
add
sbb
jo
and
or
je
add
fwait
jo
das
mov
sahf
je
ret
inc
cld
hlt
ss
add
sub
cmp
je
xor
sahf
out
inc
je
adc
sarb
xchg
pop
addr16
mov
or
add
out
mov
xor
ljmp
div
add
in
insl
lea
mov
adc
or
cmp
test
jl
and
popa
mov
push
mov
mov
or
pop
pop
fs
xor
dec
scas
pop
pop
cmpl
xchg
xor
jg
push
bound
mov
inc
jmp
cmp
fstp
fwait
sbb
jmp
adc
jne
sub
cmc
mov
push
mov
scas
jmp
and
cmp
dec
push
xor
add
or
push
pop
and
adc
adc
pop
aaa
outsb
out
mov
pop
add
jle
lods
adc
mov
mov
mov
and
je
loop
xchg
lretw
sbb
add
je
lea
sbb
es
mov
test
and
dec
loopne
test
test
or
sub
push
jbe
push
add
inc
mov
dec
and
sbb
rclb
push
adc
shl
push
push
mov
cltd
sbb
pop
xor
adc
andl
sbb
enter
xor
dec
in
lock
cmp
add
jbe
add
mov
pop
push
sub
inc
mov
push
sbb
loope
push
pushf
jmp
aaa
jne
mov
ja
inc
cs
or
and
mov
dec
jne
fs
add
adc
pop
pop
pop
add
push
insb
xchg
aas
insb
add
jno
xchg
or
push
pmovmskb
push
push
push
sbbb
add
lods
sub
orl
cmp
je
and
or
sub
mov
lock
or
add
add
sbb
xor
pop
and
loopne
jne
test
or
add
xor
loopne
jno
push
adc
mov
adc
shl
and
lea
push
adc
or
mov
ss
adc
add
cmp
fiaddl
mov
push
jb
clc
mov
es
iret
inc
or
roll
sbb
push
pushf
mov
mov
sbb
sub
jne
or
jno
pusha
insl
add
push
adc
pop
or
scas
jmp
mov
xchg
lret
dec
xchg
sub
pop
es
jl
push
push
lcall
mov
int3
xor
testb
call
out
jmp
mov
pop
mov
push
outsl
mov
mov
shrb
add
jmp
mov
loop
rol
stos
push
flds
sub
or
mov
add
hlt
pop
nop
xchg
or
inc
sbb
leave
inc
sub
add
sub
inc
fdiv
lret
cmp
add
mov
inc
sar
add
rclb
in
xor
mov
and
pop
push
or
loope
sti
or
gs
mov
sbb
rcll
mov
inc
adc
push
into
and
loope
pop
push
jmp
xor
xorb
dec
jle
fisttpl
pop
out
mov
les
ja
xadd
sub
pushl
aad
xorl
adc
das
dec
pop
inc
daa
push
adc
lahf
push
add
sbb
rcl
cmp
or
sub
in
inc
or
cmp
cmpsl
mov
and
cli
rcrl
or
insb
push
data16
pop
addl
sar
cmp
jne
pop
jecxz
add
jbe
cli
imul
idiv
mov
mov
pop
push
push
dec
add
punpcklwd
push
test
adc
rcll
xor
addr16
andb
js
ficoml
xor
orb
dec
fs
jbe
mov
mov
mov
and
mov
fimull
mov
xor
movsb
pop
pop
add
mov
push
in
sbb
inc
adc
in
jns
testl
push
or
xor
clc
cld
push
divb
pop
xor
push
and
xchg
loopne
mov
das
and
xor
add
and
sub
cmp
push
push
inc
sub
mov
sbb
add
jbe
and
lods
add
addl
jge
dec
or
jg
push
dec
pop
inc
jo
fsubs
pop
iret
popa
mov
je
lret
adc
daa
loop
inc
repnz
adc
mov
outsb
clc
fs
sub
jmp
daa
adc
popa
jge
scas
dec
jo
pushf
ss
or
call
and
or
aam
jmp
dec
je
mov
sbb
dec
jne
push
pop
jae
push
or
ja
push
push
sbb
add
js
jbe
jmp
sub
dec
push
cmp
repz
push
mov
push
push
ljmp
lea
push
test
jp
imul
addl
inc
xchg
loopne
lahf
sbbl
addr16
jne
mov
addr16
add
dec
mov
xchg
inc
mov
dec
es
fldcw
repnz
dec
repz
xchg
test
je
and
and
fwait
sbb
lods
dec
xchg
cmovp
sub
or
jg
mov
mov
rorb
cmpsl
sub
add
push
push
and
iret
or
mov
lock
xchg
jbe
leave
add
adc
cmp
add
jmp
rorb
add
dec
loope
std
lret
jno
jae
push
jmp
sub
aas
lcall
jns
test
inc
loopne
fcoml
addl
pop
adc
mov
add
jae
popf
mov
rolb
add
or
aas
cmp
jae
clc
call
sub
adc
jmp
or
sbb
cmp
rclb
out
cmc
jg
cmp
mul
mov
add
add
sub
shlb
pop
sbb
push
movsb
push
loopne
inc
adc
dec
mov
sbb
fst
cmpsb
mov
sbb
test
adc
lds
or
dec
and
xchg
shl
fcompl
clc
mov
pop
jle
call
aaa
push
pusha
ss
cmp
mov
lea
xchg
xchg
pop
sub
js
sbb
pop
inc
push
shlb
add
fadds
push
mov
add
push
lcall
das
sahf
pushl
dec
mov
add
aad
jl
leave
sbb
jbe
lcall
push
push
pop
sub
stos
add
add
add
jmp
cmp
push
dec
out
xchg
push
popa
cmp
sbb
loopne
imul
push
xlat
mov
push
push
add
leave
mov
dec
sbb
push
inc
lods
movsl
jnp
push
or
insl
or
rcr
sub
cmp
push
movsb
icebp
ret
fcmovnbe
jl
inc
movsl
push
push
dec
inc
jle
mov
xchg
pop
and
add
inc
je
fsts
stc
xchg
clc
push
mov
stc
sbb
test
mov
mov
cmc
fsubrs
imul
add
sbb
jge
lret
loopne
inc
sub
pop
adc
sti
sub
dec
dec
or
lret
lds
cs
add
xchg
loopne
lock
fstpt
add
and
imulb
rcrb
loopne
stos
cltd
pop
inc
mov
addl
outsl
sbb
nop
ret
clc
sbb
rcrb
xlat
je
xor
xchg
add
stos
into
add
xor
pop
or
mov
cwtl
push
push
loope
pop
cmp
inc
push
mov
js
in
push
add
dec
loopne
js
aam
rcl
nop
fnstcw
imul
mov
lret
inc
dec
cmpsl
xorb
pushf
insb
fiaddl
stos
stc
rol
ja
test
pushf
out
in
or
fnstsw
in
int3
arpl
lock
sbb
and
xor
jl
xor
lea
in
push
push
aaa
jb
xor
or
cs
mov
cwtl
cwtl
enter
pop
shll
aad
jmp
push
and
jbe
hlt
mov
mov
je
add
adc
sub
or
lret
pop
ljmp
pop
movsb
adc
aam
pop
lret
sbb
mov
xchg
xchg
test
leave
outsl
aad
dec
pop
hlt
andb
cmpb
aad
add
push
std
xchg
lret
jge
call
dec
push
and
pop
jp
ljmp
mov
xchg
test
push
adcb
int3
lcall
dec
xorb
insb
cs
and
xor
dec
cld
jmp
ret
rcrb
and
and
inc
push
outsb
xchg
or
in
daa
mov
ljmp
dec
mov
mov
mov
rorl
push
dec
call
and
inc
pop
and
imul
mov
jmp
pop
rorb
sbb
out
movsl
pop
or
inc
jae
leave
cmp
xlat
repnz
add
xor
and
jp
inc
lock
fsubrl
add
clc
jmp
clc
mov
das
test
dec
in
adc
je
mov
pop
loop
into
mov
fisttpl
and
nop
xchg
pop
repnz
and
push
cmpsl
popa
and
jp
cmp
xchg
jmp
xchg
cmp
xchg
sub
mov
xchg
jl
shrb
aad
mov
popf
and
mov
push
leave
add
and
jl
jnp
pop
enter
sarb
pop
icebp
mov
add
and
ljmp
jno
mov
incl
cmpsl
or
push
mov
cmp
fs
jns
ds
jmp
adc
decl
inc
enter
push
xor
pop
divl
nop
pusha
push
test
lods
incl
cs
lcall
inc
fcoms
mov
repz
push
adc
and
orb
dec
jnp
sub
pop
or
mov
or
dec
jns
ret
imul
mov
adc
outsb
pop
cmp
xor
xor
jnp
mov
push
or
je
mov
subl
testb
jne
xchg
roll
pop
jmp
rorb
cld
rol
cli
add
push
pop
push
add
or
sarb
and
jne
lods
push
test
push
sbb
stc
sbb
xor
adcb
lea
inc
and
cmp
mov
outsb
jne
out
outsb
movsb
test
add
or
mov
repnz
mov
hlt
or
mov
lods
or
icebp
jle
popf
push
xor
cltd
fisttps
adc
jmp
testb
ds
aas
pop
mov
or
mov
dec
jns
sub
adc
or
and
loopnew
adc
lock
mov
mov
inc
xchg
js
jns
icebp
inc
push
dec
cmc
adc
std
sbbb
xchg
cmp
test
sub
push
inc
loopne
xchg
push
std
mov
inc
mov
ret
lcall
fdivr
and
sbb
and
cmpb
lock
inc
xor
and
pop
out
xorb
cmpsl
xor
es
add
pop
xchg
pop
jmp
insl
or
dec
xor
sub
std
add
sbbb
pop
and
add
inc
jo
mov
lods
adc
addr16
clc
mov
int
push
mov
repnz
inc
dec
pop
sbb
test
adc
cwtl
add
and
nop
push
sub
pop
fnstcw
adc
std
pop
pop
xor
mov
jns
jns
sbb
subb
pushf
popl
mov
mov
mov
movl
dec
mov
rorb
imul
adc
pop
mov
or
mov
nop
loope
js
rcrl
push
int3
adc
or
xor
mov
inc
push
mov
dec
nop
push
push
sbb
shl
sub
mov
mov
aam
into
xchg
andl
push
les
mov
mov
pop
push
xor
lods
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
jno
pop
add
hlt
imul
in
testl
adc
and
xchg
xchg
xchg
lock
lea
jne
mov
rorl
jmp
sub
fsub
add
add
mov
test
mov
pushl
sbb
rcrb
or
cltd
orl
sbb
push
mov
add
or
sbb
pop
push
or
dec
or
xchg
xchg
test
xchg
les
les
add
push
fisubrl
clc
jge
out
pop
jae
inc
push
mov
adc
jbe
push
inc
mov
test
lock
pusha
pushf
pusha
lcall
dec
xchg
pop
pop
pop
push
adc
or
lds
ds
mov
dec
pop
sbb
movsb
mov
js
jne
mov
call
pop
pushf
and
jns
cmp
lock
loopne
mov
mov
mov
add
inc
sbbl
lret
and
cmp
jge
and
push
lds
sbb
lret
adc
or
test
push
mov
cmpb
rol
xchg
aad
or
pop
popf
mov
jo
xchg
fdivrs
xlat
sub
mov
popf
jne
ficoml
je
adc
sbb
xchg
in
stos
mov
xchg
jge
shrb
ja
lods
call
iret
cli
gs
pop
imul
mov
mov
cltd
lea
jbe
ja
leave
adc
xorb
ljmp
rcll
sbb
pop
sar
sbb
loopne
fsubl
xchg
push
xchg
mov
inc
xchg
lea
jb
je
mov
mov
and
test
dec
or
je
or
inc
lea
sub
fs
mov
push
pop
add
ret
out
pop
andl
shrb
sbb
push
test
adc
icebp
fdivs
inc
repnz
add
xchg
clc
shll
mov
rorb
int3
adc
ja
movsl
mov
jb
and
mov
hlt
adc
inc
mov
sbb
inc
cmp
push
xchg
or
jnp
or
dec
mov
pusha
sub
xlat
mov
sbb
pop
and
aaa
ss
js
add
movb
inc
xor
pop
sti
movsb
into
movsl
incl
dec
roll
sbb
imul
outsl
and
test
xchg
adc
movsl
inc
aad
lock
rcrb
pop
call
test
lea
fstpl
das
add
mov
xor
or
sbb
jae
mov
je
pop
push
xchg
and
test
add
cwtl
mov
repz
movsb
dec
imul
mov
mov
hlt
sbb
fisttpll
push
arpl
xor
xor
sub
mov
loope
cwtl
mov
push
sbbb
or
dec
and
in
adcl
mov
sub
in
mov
push
add
xchg
testb
jb
push
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
push
xor
cmc
pushf
daa
rcrb
addl
dec
mov
sbb
ss
cmp
mov
sub
mov
loop
add
mov
stc
xchg
test
xchg
rol
arpl
in
maskmovq
jg
jmp
mov
inc
lods
xlat
xor
sete
jo
mov
sbb
mov
jl
stos
mov
je
call
cmp
jmp
sbb
shll
jmp
inc
mov
gs
mov
jmp
push
pusha
je
or
sub
mov
int
sbb
loopne
and
cwtl
lds
and
xchg
aaa
gs
test
add
into
arpl
dec
dec
xchg
mov
gs
add
sbb
or
and
shl
mov
negl
addl
rcl
nop
dec
ficompl
add
mov
xchg
hlt
jmp
lahf
out
pop
mov
imul
sbb
and
pop
push
out
loope
and
and
movsb
out
mov
movsl
jo
pop
lock
inc
cld
adc
mov
mov
js
pop
xor
jno
pop
insb
dec
mov
mov
out
cltd
dec
mov
jne
movsl
push
push
push
in
je
mov
inc
pusha
lds
jb
cmpb
jne
and
nop
ljmp
cmpsb
push
lahf
push
data16
mov
cmp
mov
cli
mov
mov
push
inc
daa
add
jno
sbbb
insb
pop
test
sub
loope
popa
or
inc
scas
push
xor
mov
dec
mov
lock
and
inc
cmp
outsb
dec
mov
cltd
jmp
xchg
sub
cltd
add
dec
sbb
pop
jl
jae
adc
add
sbb
adc
cmp
jnp
or
psrlq
sbb
jge
clc
les
daa
mov
or
sbb
push
imul
lea
es
or
inc
pop
sub
stc
cltd
push
push
push
movzwl
add
clc
aas
ffreep
pusha
mov
cmp
sahf
mov
jmp
jno
out
adc
xchg
sub
inc
cmp
shlb
dec
movb
and
or
in
jmp
push
movsl
sub
mov
es
cld
mov
addb
pop
sub
ret
dec
adc
sar
int
test
inc
add
xchg
pop
in
aas
add
push
add
sub
mov
cld
push
sub
push
cmp
pop
xlat
lret
int3
mov
fisttpll
shrl
mov
mov
jg
test
jne
jmp
and
test
push
and
ret
mov
jg
add
mov
and
icebp
arpl
lods
or
das
adc
lret
mov
push
lds
mov
mov
xchg
and
inc
aam
mov
shl
inc
in
or
adc
movsb
dec
fistl
mov
inc
loope
and
xor
cltd
fst
add
pop
cmp
jmp
adc
popf
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
stc
sub
cld
out
out
mov
movsl
daa
pop
mov
sbb
ret
mov
or
or
pop
jl
xchg
mov
js
inc
mov
fdivrl
pop
jmp
xor
cmp
shrl
movsb
pop
ret
nop
and
aam
cmp
fwait
call
leave
lret
ss
cmp
xchg
mov
mov
push
dec
xor
or
mov
aad
dec
pop
mov
ss
jbe
int3
int3
add
fimuls
pop
ret
adc
mov
pop
lret
or
sub
les
test
mov
or
jo
mov
xor
cmp
les
xor
add
ret
pop
add
in
mov
cmp
push
lock
insb
data16
and
divl
push
or
xchg
push
push
mov
leave
repnz
add
fadds
loop
add
push
inc
test
mov
dec
arpl
into
mov
aam
adc
push
adc
mov
into
loope
add
mov
jb
push
xchg
push
xchg
add
inc
insb
jbe
mov
fldt
mov
and
cli
or
mov
mov
stos
and
xchg
jne
dec
aam
clc
fcoms
push
or
int3
dec
mov
mov
aaa
insl
and
lahf
xchg
jno
mov
test
jp
add
push
mov
stos
mov
stos
fimull
mov
jge
or
in
mov
flds
adc
jmp
inc
loopne
leave
leave
lret
loopne
loopne
pop
adc
cltd
sub
or
movsl
push
ljmp
imul
or
aaa
jo
mov
nop
outsl
repnz
xchg
push
sub
movsb
or
sbb
pop
sbb
mov
mov
sbb
xchg
fs
popa
cmp
and
and
inc
mov
adc
push
inc
push
jb
lds
cld
and
cld
add
cmp
pop
push
mov
int3
adc
nop
lcall
xor
add
cmp
aas
adc
pop
std
pop
and
cmp
out
nop
xorb
daa
cmp
add
mov
ds
push
mov
roll
pop
mov
gs
sub
lret
cmp
loopne
xor
insl
mov
daa
ds
push
outsl
adc
pop
jge
shll
inc
sub
sub
lea
pop
out
enter
sar
ret
add
sub
mov
jle
mov
push
and
adc
movsl
int3
in
ds
push
pusha
sub
subb
pop
push
add
lods
or
lea
adc
call
je
adc
or
mov
adc
test
jb
enter
mov
mov
sub
sti
out
and
subb
std
xor
jo
pusha
xchg
mov
pop
and
cmpsb
cmpb
and
subb
push
xchg
sarb
pop
cmpsl
inc
stos
or
test
fnstcw
pop
out
mov
inc
js
push
dec
rolb
xor
mov
xor
pop
jl
and
cwtl
sti
xchg
and
sub
pop
mov
insb
int3
mov
mov
jo
cmp
test
cmpsl
and
leave
adc
ja
clc
sub
dec
xor
test
mov
gs
mov
lock
lock
and
jns
push
leave
xchg
mov
or
rorl
xchg
pop
mov
in
mov
les
xchg
pop
cld
add
xor
push
sbb
pop
imulb
sbb
loopne
jecxz
jbe
sub
sub
mov
mov
sti
sbbb
cld
dec
xchg
sbb
or
pop
mov
fisubs
mov
call
add
jg
jecxz
jb
faddp
into
inc
and
add
and
in
push
cmp
jle
xor
jo
jmp
cmp
add
push
cmp
out
pop
shlb
push
sbbb
sbb
mov
or
das
and
aad
mov
and
ds
jl
rcrl
mov
push
push
adc
mov
sbb
loop
popf
or
shll
aaa
cmp
dec
adc
lret
test
mov
cmp
repz
je
add
and
loopne
add
test
push
out
inc
pop
xchg
mov
cmp
mov
mov
addb
sub
lock
andl
jle
dec
pop
adc
cmp
mov
mov
or
cmp
call
cmpl
sbb
xor
mov
das
pop
pop
jg
pop
into
or
inc
addb
mov
inc
mov
shlb
lods
push
dec
popf
in
lods
clc
imul
mov
imul
rorl
mov
jno
scas
pop
test
lods
push
cmp
jle
call
jne
les
dec
inc
push
bound
mov
cmpb
xor
rep
jp
inc
ret
push
nop
jnp
xchg
xchg
rcrb
test
mov
fbld
hlt
mov
mov
popf
je
ja
cmpsb
in
mov
add
pop
xlat
pusha
enter
out
cmpsb
mov
xor
and
shll
stos
aad
and
clc
push
mov
fldt
arpl
mov
arpl
cmpsb
rorl
jne
out
cwtd
fsubs
aas
fcom
pop
repz
inc
outsb
jecxz
scas
and
jmp
xchg
mov
loopne
icebp
xchg
push
inc
js
nop
inc
int3
fistpll
insb
jne
pop
ret
mov
adc
and
jg
int
outsb
mov
sbb
mov
xor
jg
movsb
pop
fstpt
jb
cmp
xor
and
dec
dec
lcall
mov
je
mov
sbb
add
or
aad
sbb
je
dec
test
lds
mov
jae
sbb
jns,pn
stos
mov
fmul
sub
inc
mov
bound
mov
cld
or
lret
adc
fistl
pop
inc
mov
ja
mov
push
jb
mov
sbb
imul
lret
push
jns
outsb
sub
mov
pop
sbbl
dec
daa
jns
adc
lods
in
push
sarb
xchg
test
in
ret
inc
sahf
xchg
out
and
shll
je
jno
pop
in
jo
bound
and
jae
add
mov
cmpsl
inc
loopne
mov
cltd
add
mov
lret
mov
inc
clc
mov
movsb
dec
loop
addr16
add
dec
xor
cmc
push
mov
lods
mov
mov
inc
scas
movsb
pop
pop
test
sbb
fs
inc
mov
shll
jb
lds
popf
jecxz
fdivr
inc
popf
push
push
loopne
outsb
lods
fildl
aas
incb
add
push
mov
or
and
jg
fsubr
rcrl
push
into
xor
test
jl
jo
adc
jp
pop
push
pop
push
gs
popf
sub
aas
mov
xchg
outsl
push
inc
pop
aaa
push
divb
mov
dec
sub
jnp
loopne
add
dec
lods
pop
mov
inc
push
push
cmp
scas
cmp
mov
push
add
loop
roll
xchg
jns
fs
mov
and
jns
in
jb
cmpsb
add
inc
cmpsb
inc
es
nop
loope
aaa
mov
or
jns
mov
fcmove
enter
loopne
in
nop
pop
cmpsl
ss
daa
outsl
fnstenv
daa
pop
in
push
sub
or
sbb
loop
cmp
pop
mov
add
mov
lds
stos
add
cmc
fnsave
add
arpl
dec
repz
lods
mov
xor
rol
jle
fcomip
mov
pop
pop
adc
test
sub
jbe
add
cmp
cmc
dec
inc
push
mov
aam
arpl
lret
xor
aam
push
clc
xchg
pop
outsl
and
xchg
cmp
jne
sub
rcll
or
adc
and
lret
inc
pop
pop
xchg
xchg
in
jae
jge
dec
pusha
das
mov
or
outsb
cmp
rorb
pop
fwait
hlt
dec
add
push
xor
mov
xchg
inc
push
or
jmp
shr
lds
adc
fucomi
aaa
push
push
add
add
or
cmp
and
jmp
inc
add
sub
dec
inc
mov
xor
xor
rclb
push
insb
mov
rcll
add
xchg
xlat
push
push
sbb
add
out
scas
mov
add
jnp
hlt
push
lds
movsb
fidivrs
or
pop
or
loopne
adc
jns
popf
sub
adc
or
and
inc
mov
sbb
dec
movsb
add
adc
mov
fcoms
int
jo
lods
adc
shrl
push
push
insl
add
sub
mov
jno
adc
mov
inc
add
sbb
push
add
or
arpl
and
sbb
push
mov
mov
enter
jnp
outsl
xor
add
inc
sbb
hlt
mov
mov
or
sub
testb
sbb
push
sub
mov
or
mov
inc
add
mov
leave
fnstsw
in
jbe
loopne
ficoms
push
jns
jmp
das
cmp
ret
sub
sbb
inc
lcall
add
popa
loop
or
sti
incl
hlt
push
orb
mov
cmpsl
je
push
push
std
insb
fmuls
mov
xlat
mov
mov
jle
test
pop
mov
mov
rorb
sbb
mov
rclb
es
sbb
and
mov
add
adc
cwtl
cmc
xor
das
dec
pusha
ja
mov
push
inc
jo
push
inc
fdivs
jg
and
popa
add
das
imul
mov
imull
movsl
inc
loopne
pusha
xchg
fdivrl
xor
add
sbb
shl
jnp
cmp
hlt
fists
push
aas
dec
out
cmpb
rorl
xor
aad
push
mov
cmp
jne
movl
fst
movsl
add
cmp
std
jne
negb
nop
adc
jmp
sub
imul
pusha
fstl
inc
or
leave
pusha
cmp
stos
inc
pusha
cmp
push
sbb
imull
mov
sbb
push
mov
ss
ljmp
cmp
out
jb
or
push
les
in
cwtl
mov
fwait
pop
test
or
push
and
aaa
es
mov
pop
icebp
stos
push
aas
rolb
jnp
dec
sbb
jae
cmp
jbe
cli
sti
shl
jne
movsb
js
dec
mov
pop
inc
push
leave
pop
push
mov
int
leave
dec
jno
xorb
lea
aam
sbb
mov
sub
pop
sub
cmpb
inc
cmp
lods
or
ljmp
or
jg
sbb
jge
add
jb
mov
aam
inc
inc
add
pop
xchg
xchg
inc
and
lock
pop
orb
and
and
push
dec
jne
mov
orl
add
test
or
jbe
mov
inc
dec
jne
clc
jnp
sbb
scas
stos
mov
jmp
add
addr16
loop
or
jmp
cmp
imul
leave
and
subl
mov
popa
mov
cs
mov
in
xchg
or
cmp
adc
and
jp
cmp
adc
mov
and
dec
rorb
data16
lods
jb
mov
mov
sbb
dec
xor
xchg
jne
add
mov
push
idivb
xor
xlat
testb
insb
ljmp
add
xor
and
dec
mov
bound
popf
das
or
push
outsb
xor
mov
add
out
or
cmp
out
icebp
std
sub
jmp
xor
dec
sbb
mov
mov
xorb
xor
add
loopne
gs
cmp
or
jno
es
lahf
stos
sub
mov
popf
xchg
flds
and
mov
add
pop
sub
cmpl
ljmp
pop
pusha
and
subl
xorb
xor
jp
cld
xchg
xorb
sbb
or
lea
push
push
jg
or
popa
mov
ljmp
push
xchg
jo
ret
adc
sarb
movsl
sub
adc
jo
mov
and
sub
cmp
leave
clc
dec
add
adc
mov
mov
sarb
pop
adc
and
pop
sbb
js
lods
pushl
dec
push
xorb
not
pushf
cltd
out
lahf
das
adc
dec
rolb
sub
xchg
xchg
insl
insl
fsubrs
xor
and
mov
outsb
mov
fnstsw
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jns
inc
cld
es
push
cmp
mov
add
push
mov
frstor
test
xor
and
xchg
lahf
rolb
pop
or
addl
cmp
add
push
jb
add
orb
sub
std
dec
inc
xor
insb
sti
inc
imul
pop
mov
jmp
pop
push
dec
adc
cwtl
leave
es
ret
or
or
add
push
add
fs
sbb
pop
or
inc
mov
movsb
cmp
sbb
push
push
push
pusha
fistpl
xor
or
aas
loopne
push
test
scas
jo
sub
push
pop
fadd
or
mov
or
inc
movl
push
mov
sub
inc
or
and
xor
jg
popa
cmp
sahf
xchg
mov
inc
xor
dec
adc
mov
shlb
push
bound
jo
scas
arpl
in
push
pushf
adc
or
pop
push
inc
faddp
or
loopne
dec
xchg
adc
mov
shrb
push
add
dec
sbb
pop
push
mov
mov
and
adc
mov
loope
out
test
or
xor
shl
pop
iret
nop
lret
pop
iret
in
es
call
arpl
loopne
test
and
enter
sub
xor
sbb
sbbl
loop
pop
cmp
cmp
and
sbb
sub
push
dec
pop
insb
bound
adc
cmpsl
dec
insb
and
pop
cmp
leave
adc
xchg
insb
mov
mov
insl
mov
popf
jge
xor
fnstcw
sub
test
adc
repz
rclb
mov
pop
push
jo
xchg
mov
cltd
leave
test
or
xor
push
adc
mov
test
sti
adc
jno
les
cmp
sbb
jae
rclb
pop
or
addr16
and
jl
xor
cmp
fs
pop
fistpl
outsl
inc
stos
xor
leave
call
mov
rcll
jge
xlat
cmp
xor
push
xor
xchg
sbb
pop
mov
pop
pop
lret
mov
and
lods
adc
rcll
sub
scas
add
and
mov
sub
inc
js
pop
out
inc
pusha
sub
mov
cmp
jle
push
pop
xchg
sbb
jbe
jmp
xchg
mov
sub
lsl
sbb
or
xor
add
jmp
pxor
push
push
add
shl
and
mov
loop
sar
aaa
fists
mov
push
inc
adc
and
ret
movsl
inc
push
pusha
jo
mov
dec
jne
shlb
int
mov
lock
or
or
xchg
les
xor
mov
je
xor
fstpt
xchg
sbb
add
jne
mov
or
dec
sbb
and
inc
cli
pop
pop
ret
je
popf
fnsave
push
mov
bound
add
cli
shr
inc
repz
add
adc
clc
xchg
ja
or
test
lahf
imul
pop
jl
js
notb
xchg
lods
outsb
push
test
adc
loope
ss
adc
jo
ret
push
pop
xor
or
shll
enter
pop
movsb
leave
push
or
mov
mov
hlt
mov
insb
aaa
out
movsb
outsb
ss
xor
adc
nop
icebp
xchg
add
add
or
mov
dec
sbbb
sbb
push
push
pop
push
add
lret
negb
rorl
fsubrl
imul
dec
or
dec
push
das
cmp
dec
cwtl
xchg
add
mov
xchg
pusha
adc
push
call
inc
xlat
cmp
lock
rcl
dec
fiadds
and
sub
xchg
popf
pop
enter
in
imull
bnd
jmp
andb
adc
cmp
test
sub
fildl
mov
das
and
pop
imul
add
mov
add
and
sbb
scas
repnz
test
add
sbb
ja
sbb
push
push
lahf
mov
fbld
stos
pushaw
pop
and
call
loopne
sbb
imul
loopne
cmpsl
xor
pop
sbb
ficoms
mov
xchg
decl
in
jmp
mov
mov
scas
mov
adc
aam
xor
and
js
and
push
mov
clc
bound
mov
adc
lea
xor
and
pop
pusha
int3
dec
xchg
push
iret
repz
lahf
test
mov
repz
sbb
fsubp
sbb
mov
jge
mov
or
insb
andb
mov
sub
and
add
lock
inc
pop
or
push
inc
pop
imul
sub
rcrb
and
inc
and
ret
jge
je
jo
ficoml
cltd
jmp
inc
faddl
mov
adc
popa
add
mov
inc
test
or
outsb
cmp
jmp
xchg
and
ret
and
push
push
test
fs
mov
es
lock
sbbl
adc
daa
or
mov
mov
push
cld
divl
adc
dec
dec
call
pop
push
mov
jl
add
aas
cmp
and
jle
mov
mov
mov
add
les
mov
push
mov
lock
mov
jmp
bound
out
and
cmpsl
add
sbb
mov
inc
cmpl
add
sbb
add
mov
ret
cmpsl
lcall
push
xchg
xchg
mov
dec
mov
outsl
mov
or
mov
and
mov
sub
jns
add
movsb
pop
in
test
lock
mov
jb
std
mov
mov
lods
std
dec
call
push
jne
add
pop
mov
pushf
movsb
or
jmp
add
lret
dec
daa
or
pop
stc
test
add
jne
scas
jno
cmp
jnp
mov
inc
or
lahf
dec
fdivrs
push
jecxz
mov
push
ds
push
ds
push
cmp
inc
xchg
jns
mov
sbb
in
adcl
push
or
cltd
shr
mov
mov
sub
popa
xchg
pop
add
popf
xor
mov
or
pop
add
cmpl
add
pop
fwait
add
add
mov
mov
pop
in
mov
enter
push
mov
dec
call
mov
call
push
fmull
push
push
push
dec
mov
sub
lods
sbb
jne
inc
sub
pop
aad
pop
and
std
pop
mov
cmp
jne
cmpb
ret
add
mov
xor
movsl
ret
je
inc
imul
imul
lcall
pop
pop
sahf
mov
push
mov
and
inc
xchg
shlb
mov
cmp
mov
fsubl
fimull
int3
or
test
xor
repz
pop
xchg
mov
pop
mov
dec
dec
je
push
or
arpl
cmp
cmp
xchg
xor
iret
and
rorb
les
cmp
xchg
cmpsb
or
test
mov
push
adc
loopne
dec
mov
scas
ss
sub
es
lock
mov
outsb
jg
mov
pop
jmp
mov
loope
js
cmpsl
aam
mov
test
jno
pop
aam
xchg
neg
daa
jmp
mov
sub
jns
sbb
leave
and
adc
xor
add
rclb
pop
adc
addb
data16
js
sbb
adc
pop
push
fwait
sub
fwait
cmp
fmul
addb
lret
jl
out
pop
inc
pop
sbb
aas
or
xor
add
out
data16
mov
enter
xorl
sub
imull
lret
mov
hlt
scas
aaa
and
loopne
jno
pop
jmp
daa
xor
scas
loopne
mov
mov
sub
push
adc
mov
cmp
je
mov
aad
subl
popf
mov
and
dec
filds
add
test
cmp
push
mov
popa
dec
int
je
jge
sub
add
subb
imul
lock
lahf
outsb
push
inc
fildl
cmpsb
push
loopne
sbb
dec
lret
in
mulb
rcrl
imul
outsb
dec
sbb
sbbb
pop
pop
or
dec
push
popl
push
xor
jecxz
push
insl
xor
aad
int3
sbb
mov
mov
test
dec
push
test
mov
neg
adc
neg
ret
loop
adc
push
shlb
and
jb
dec
movsl
lea
enter
push
inc
pop
inc
lahf
in
xchg
arpl
lahf
xor
lahf
mov
call
imul
rclb
mov
into
xor
fiadds
or
add
inc
jmp
dec
cs
out
sub
dec
leave
shlb
ss
or
sub
mov
enter
add
movsl
xchg
add
fldl
mov
or
sub
fists
pop
sbb
jmp
dec
adc
inc
sub
les
sub
pop
mov
int3
mov
sbb
sahf
inc
notl
fwait
mov
pop
mov
xchg
or
and
sub
jb
mov
mov
fs
mov
xor
jecxz
les
je
popf
sbb
jno
adc
push
sbbb
sbb
sbb
out
mov
sub
push
nop
pushf
lods
loopne
dec
ficoml
sbb
cmpsb
jmp
sbbl
out
sub
adc
ficompl
push
add
insb
aad
jns
sub
loope
test
adc
insl
test
push
daa
pop
mov
mov
dec
adc
pop
cwtl
ljmp
nop
lcall
add
push
add
cmp
hlt
rolb
sbb
jp
roll
cs
rorl
xor
movsb
daa
inc
enter
mov
and
and
jno
outsb
or
pop
mov
dec
xor
mov
push
mov
mov
inc
gs
lea
pop
or
pop
out
rolb
pop
scas
mov
aas
xchg
pop
ss
sbb
enter
xor
lock
and
lret
stos
pop
ret
jbe
lods
repnz
leave
lock
aas
mov
sub
pop
add
xor
add
fsubr
pop
dec
aas
pusha
repz
outsb
aas
scas
movsl
push
mov
scas
adc
outsb
insb
out
inc
into
adc
jecxz
inc
aad
pop
jo
dec
inc
xlat
test
lret
mov
pop
and
mov
inc
inc
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
call
aaa
inc
xchg
movsb
repnz
push
inc
mov
mov
mov
add
pop
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
inc
sub
mov
mov
add
repnz
dec
es
aas
dec
add
movsb
xlat
add
adc
decb
cld
push
push
aam
int3
sbb
nop
and
cwtl
inc
mov
cwtl
lods
mov
push
enter
rcll
lods
rcrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
aaa
jbe
mov
pop
xor
test
addb
add
in
arpl
dec
adc
aaa
push
mov
repnz
jb
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
aaa
int3
cmpsb
js
or
test
lds
orb
repz
stos
ljmp
hlt
lea
cmp
jp
or
fld
mov
insb
mov
jnp
dec
js
push
inc
ds
sbb
adc
cli
je
negl
sbb
xorb
xchg
and
pop
enter
pusha
xor
fiaddl
add
sbb
or
xor
add
pop
push
lods
push
jle
xorl
int
or
and
sti
jl
xor
or
push
sbb
add
jmp
inc
fwait
stos
mov
jmp
lock
mov
inc
nop
sbb
dec
add
test
negl
sub
inc
movsl
inc
or
inc
pop
or
imulb
or
add
shlb
push
clc
push
adc
lock
mov
xchg
mov
fadds
dec
dec
sbb
mov
mov
sbb
inc
call
inc
or
test
xchg
push
cwtl
popl
add
fldcw
xchg
mov
sub
xchg
loope,pn
shr
je
jg
adc
outsl
push
loope,pn
jge
dec
adc
push
and
jle
out
lcall
inc
or
adc
lahf
push
jbe
jle
cmpsb
addr16
lahf
out
ja
jo
mov
pusha
mov
jge
jne
jo
in
pop
jnp
int3
pop
ffreep
lea
lea
stos
and
rolb
in
rcrl
mov
fdivs
movsb
mov
jp
inc
inc
call
jle
push
negl
ret
mov
lret
ret
in
inc
push
mov
shr
dec
js
ds
mov
or
lods
or
cmp
push
pop
into
sbb
stc
add
fdivrs
mov
cmp
or
mov
push
dec
pusha
add
or
roll
push
mov
push
add
bts
jmp
mov
jl
dec
repz
out
xor
add
xchg
les
mov
inc
adc
cmpsl
adc
inc
loopne
js
adc
jne
inc
adc
and
out
mov
or
cmp
adc
sbb
mov
cld
push
dec
mov
aas
xor
dec
pop
mov
push
cmp
daa
adc
mov
sbb
out
add
xor
and
icebp
rol
repnz
fadds
ljmp
mov
pop
addl
cwtl
and
pusha
mov
adc
jle
dec
mov
loopne
cmp
ljmp
mov
and
test
cmpl
in
mov
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
adc
addr16
add
pusha
subl
outsl
inc
test
cwtl
sbb
dec
in
adc
jns
ja
adc
lret
sub
mov
and
jmp
bound
fstp
inc
or
add
adc
dec
mov
sbb
test
jmp
mov
push
pushf
test
push
adc
loopne
mov
out
movsb
inc
push
cmc
fadds
sbb
fincstp
adc
gs
jmp
outsl
mov
test
push
jbe
add
gs
pop
pusha
jle
test
pop
and
lock
scas
and
xor
pop
add
incl
test
adc
int3
insb
sbb
mov
inc
jne
out
dec
adc
es
lods
int3
stc
inc
push
hlt
adc
xor
popa
mov
mov
stos
add
xor
outsl
mov
push
push
sub
push
notb
or
or
ret
sarl
cld
nop
out
mov
enter
or
jne
dec
rclb
popf
rorb
movsb
loopne
testb
fnsave
dec
add
sub
ficoml
movsl
adc
js
mov
inc
cs
je
cmp
jo
outsb
add
or
js
and
imul
pop
dec
ljmp
add
in
into
shll
add
sbb
inc
test
xchg
or
push
and
pop
pop
mov
and
es
jne
push
sbbl
pop
and
out
test
add
jo
shlb
fcmovnb
es
idivb
cmp
mov
mov
scas
jne
sbbl
push
mov
lret
and
jae
jbe
call
andb
jae
lea
add
add
mov
shrb
push
xor
cmp
sahf
into
daa
orl
mov
dec
pop
mov
shlb
mov
stos
pop
mov
add
dec
add
add
repnz
mov
enter
adc
pop
shrb
cli
push
sub
lea
push
or
push
es
mov
and
push
std
push
push
pop
push
int
sarl
aas
sbb
nop
xchg
jo
daa
test
mov
fnstsw
movl
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
inc
in
add
int
push
das
add
push
xchg
adc
lret
sbb
fidivrs
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
test
adc
lds
adc
or
ljmp
jp
lret
pop
push
or
testb
lock
pcmpgtd
out
test
lock
sar
shl
add
nop
adc
push
rolb
mov
jecxz
cmp
push
in
mov
cmp
inc
inc
jo
sbb
dec
and
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
ds
inc
sub
push
in
or
or
xor
mov
out
cmpb
jmp
xor
adc
popf
or
sub
mov
or
popf
mov
cld
out
add
sahf
ret
adc
out
adc
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
stc
dec
dec
out
imul
push
ljmp
dec
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovbe
data16
inc
sbb
cmp
das
adc
out
repz
mov
sbb
or
test
not
push
lret
mov
push
test
hlt
push
test
jb
jae
xor
pop
ret
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbbb
in
mov
sbb
mov
inc
inc
adc
xchg
iret
cmp
aas
cmp
add
jl
out
insb
aas
pop
inc
dec
cwtl
dec
dec
jns
mov
ljmp
out
sub
pop
dec
js
inc
jb
fnclex
or
mov
lods
dec
pusha
or
or
or
push
mov
mov
inc
and
push
inc
mov
adc
mov
xor
and
sbb
jne
or
repnz
scas
and
add
cmp
pusha
scas
sbb
test
inc
sbb
xorb
jne
sbb
add
stc
dec
mov
push
xor
push
clc
stc
adc
push
scas
aad
inc
lock
push
pop
lea
and
das
call
leave
hlt
mov
add
int3
and
push
fcoms
push
mov
loope
sub
adc
faddp
add
popa
cmp
jle
lret
sbb
and
mov
mov
adc
rorb
icebp
or
push
sbb
cmp
jne
rolb
and
mov
mov
add
xlat
mov
and
jbe
lds
movsl
aad
and
cld
sti
in
adc
call
pop
and
hlt
jmp
int
andl
ja
out
fcmovnbe
loopne
inc
xor
cmp
and
inc
pop
loopne
lgs
test
and
pop
pop
and
ret
rorl
test
add
cs
inc
popa
xchg
jb
jns
dec
ja
ret
sub
movsb
je
movl
test
jmp
mov
stos
add
arpl
imul
clc
lock
shlb
loop
pusha
lods
and
or
push
loope
jbe
xchg
add
orb
adc
pop
lea
pop
ret
mov
adc
add
lahf
push
dec
push
xor
aam
fistps
jb
sub
add
enter
add
jb
mov
pop
xchg
mov
add
ret
sub
pusha
lahf
or
or
shlb
push
or
mov
or
lock
mull
ja
mov
jmp
push
pop
push
push
inc
shr
rcll
addr16
fcmovnbe
ljmp
repz
dec
out
test
test
mul
pop
jb
cmp
sbb
push
jbe
dec
sub
sbb
adc
or
fiaddl
adc
cmp
iret
pop
ret
add
outsl
dec
xor
jno
adc
test
test
rcrb
imul
push
add
inc
sbb
testb
out
std
add
sub
out
xor
xchg
or
mov
test
inc
pusha
mov
pushf
sbb
jo
gs
push
cmp
or
cmpb
stos
scas
daa
enter
inc
adc
lret
sub
testb
inc
jo
inc
cld
inc
and
xlat
mov
mov
add
fsub
in
sbb
pop
xlat
inc
repz
add
sbb
xor
fs
rdmsr
push
push
sbb
test
sbb
dec
orb
jmp
dec
and
in
pop
insl
sbb
movnti
ja
and
add
or
in
das
movb
fists
cwtl
movsb
mov
sbb
adc
cmp
jo
add
cmp
loope
sub
inc
adc
pop
pop
jne
lock
lods
push
push
add
in
xor
jmp
popa
rcl
inc
cmp
mov
or
xchg
shll
nop
xor
pusha
shrb
hlt
fiaddl
push
pop
pop
mov
pop
dec
inc
or
loope
add
xchg
jmp
dec
rorb
or
or
pop
or
xchg
dec
jae
mov
nop
rorl
sub
push
inc
sbb
mov
loopne
pop
outsb
add
adc
push
call
lea
fmuls
and
xor
fsubs
mov
popf
mov
sbbb
mov
insl
add
cwtl
push
addr16
js
or
jne
popa
fcomp
adc
je
mov
rol
jne
add
pop
adcb
inc
adc
addr16
mov
mov
cmp
outsb
add
xor
leave
jge
dec
push
add
jbe
nop
xchg
adcb
mov
or
and
pop
jge
or
loope
mov
cmp
les
push
adc
add
sub
sbb
sbb
xchg
aam
fsubr
push
addb
jge
push
stos
subl
add
push
jne
js
in
aas
jmp
adc
outsl
push
test
fdivs
adc
test
ret
or
push
xchg
xchg
movsl
push
imul
fisubl
out
push
nop
aam
loopne
push
outsl
push
inc
int
cmp
fidivl
fcmovnbe
dec
xor
push
mov
movb
lock
inc
sub
xchg
out
out
sbbb
rorl
jecxz
fisubrs
sahf
dec
std
scas
cld
xor
cmp
inc
jmp
mov
in
testb
jne
imul
add
push
xorb
push
add
enter
mov
in
xor
cmp
jne
sbb
mov
xlat
sub
or
dec
lock
xor
xor
pop
icebp
xor
pop
sbb
cmpsb
pop
je
xor
jne
push
adc
and
or
incl
mov
dec
jo
stos
into
mov
pop
mov
adc
push
outsl
dec
cmp
push
cmp
jge
adc
int3
ja
testb
add
push
and
mov
xor
data16
scas
add
mov
sub
sub
out
sti
pop
stc
xor
pop
inc
rclb
hlt
aaa
or
and
shl
adc
sbb
sbb
pushf
or
insb
iret
dec
ret
popa
stos
jl
js
mov
into
pop
cmpsb
ljmp
xor
mov
xlat
sarl
inc
adc
mov
lock
add
ja
mov
sub
rcll
sbb
pcmpgtw
test
nop
insb
mov
lds
adc
loopne
sbb
sub
xchg
je
cs
orl
mov
arpl
mov
add
cmp
or
sub
data16
push
rclb
mov
stc
loopne
addr16
insl
rorl
sbb
mov
push
mov
jl
test
test
fs
push
add
add
inc
movsl
or
and
or
insl
mov
mov
shlb
xor
cli
adc
ja
inc
add
lea
lea
mov
mov
jnp
out
sahf
mov
loopne
cld
push
sbb
adc
inc
jmp
popl
lock
fiadds
xlat
nop
cmp
inc
mov
js
add
xor
pmuludq
addl
outsb
jl
repnz
adc
inc
mov
insl
div
xchg
dec
and
pushl
add
jno
push
pop
pop
cmp
xchg
loop
mov
cmp
push
xor
or
test
sbb
mov
leave
ds
cmp
decb
push
push
push
popa
inc
push
insb
dec
sbb
insb
enter
dec
or
fsubrs
cmp
js
rol
jl
pop
sbb
xor
pusha
mov
add
lea
hlt
cmp
cmp
pop
jmp
mov
and
lcall
ss
push
pop
dec
stos
inc
cmp
push
cmp
and
adc
pop
xchg
cmp
daa
mov
push
pop
out
aam
call
movl
shrb
rcrl
pop
addl
sub
insb
je
sub
dec
mov
push
mov
push
mov
push
imul
loopne
test
loopne
mov
jmp
sbb
lcall
jo
add
stos
jl
hlt
loopne
mov
or
sar
das
xor
loope
shlb
mov
orl
orb
push
adc
sub
leave
dec
lods
hlt
mov
and
inc
loopne
inc
jge
call
adc
loop
ss
xor
mov
cmpsb
pusha
mov
mov
daa
xchg
inc
mov
inc
sbb
cmp
out
adc
mov
cmpsb
push
adc
cwtl
adc
pop
mov
sub
xor
dec
mov
inc
jmp
rolb
pushl
leave
mov
sub
cwtl
cmpsb
sbbb
cs
pop
adc
cmp
adc
rcrl
jle
mov
inc
mov
push
push
nop
mov
pop
add
dec
mov
cwtl
or
test
mov
add
xchg
cmp
arpl
insb
mov
aas
insb
cwtl
push
lods
mov
cmp
std
andb
xchg
inc
jmp
push
mov
xchg
rclb
mov
ja
aad
roll
iret
and
or
pop
dec
es
add
and
mov
push
cmp
or
hlt
add
mov
dec
sub
or
das
jl
incb
push
mov
movsb
andl
jmp
sbb
push
jo
jb
test
stos
popf
add
sub
ds
and
mov
push
pop
mov
das
aaa
push
lock
cmp
jle
sub
cmp
xor
sbb
adc
incb
jmp
dec
push
in
jbe
cmp
jno
add
cmp
mov
clc
aas
lock
inc
sbb
or
adc
sbb
mov
sub
ret
or
mov
pop
jge
mov
mov
xchg
outsb
divl
nop
add
jne
out
dec
jae
and
sbb
ret
fldenv
fs
mov
imul
aaa
mov
or
lahf
and
cwtl
js
mov
orl
mov
pop
dec
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
popa
or
jbe
sub
mov
lock
mov
data16
add
test
nop
mov
add
clc
cmp
loope
inc
sbb
testl
or
mov
jecxz
fldl
pop
or
push
sbbl
dec
or
cmp
mov
pop
cwtl
inc
repnz
fdiv
lea
mov
xor
cmp
or
jecxz
clc
call
inc
jmp
cmp
out
xor
arpl
scas
dec
mov
dec
push
hlt
dec
adc
mov
jne
push
xchg
sbb
add
adc
rcr
lods
rol
cs
jge
add
xor
aam
mov
sub
cmp
xlat
test
cmp
mov
mov
sarl
add
adc
jge
jle
fsubr
in
mov
xor
jne
and
ficoml
int
mov
add
cmp
call
inc
jge
add
mov
sbbl
sbb
mov
jb
or
bound
jge
movsl
add
push
pop
mov
add
arpl
ror
or
jne
mov
push
shll
roll
or
xor
jmp
nop
inc
clc
xlat
jae
mov
std
mov
sbb
push
or
mov
or
mov
xchg
adc
scas
pop
inc
testl
test
int
push
cs
jmp
fsubrl
or
jne
inc
or
cmp
xchg
pop
adc
cwtl
mov
arpl
and
nop
jb
fwait
add
test
push
pushf
fwait
insl
filds
jo
lea
lcall
add
adc
nop
clc
popa
cld
sub
add
bnd
add
push
mov
shlb
and
incl
cmpl
insl
mov
push
xor
ss
sbb
sti
jg
add
add
rolb
loop
xor
ret
xchg
mov
mov
gs
call
lock
mov
dec
push
aas
or
push
jmp
pop
shll
or
test
das
adc
inc
mov
add
into
negb
xchg
jl
idiv
das
push
shrl
shl
shr
or
mov
sahf
dec
mov
lock
jne
outsb
mov
inc
shll
aam
sub
push
aam
loop
cmp
or
push
add
lock
out
adc
rcr
fiaddl
mov
sbb
nop
ljmp
jmp
out
jmp
or
lods
inc
sub
mov
xorl
sbb
mov
jl
fiadds
int3
jmp
xchg
or
xchg
mov
lea
mov
loop
lret
into
jmp
lods
out
xchg
insl
jl
ror
and
mov
mov
mov
inc
sbb
cmpsl
mov
xorb
lret
das
cmp
xchg
inc
test
sbb
sarb
add
adc
les
lcall
mov
inc
mov
inc
mov
pop
xchg
add
mov
push
inc
add
sarl
js
les
cmp
test
mov
cld
and
call
jle
pusha
push
mov
or
orb
mov
in
adc
sbb
mov
xor
push
sub
push
jle
pusha
stos
add
addr16
int3
sbb
addr16
mov
loopne
daa
pop
cmp
inc
cmpsl
or
push
add
jo
pop
add
xor
xor
mov
pop
in
rorl
mov
jbe
paddd
dec
adc
test
rolb
mov
and
jb
dec
mov
popa
in
ret
rolb
or
rcl
repz
cmpsb
or
push
or
push
outsb
cmp
divb
es
cld
lods
popa
dec
mov
mov
mov
pusha
xchg
incb
pop
pop
lea
or
mov
insb
sbb
xchg
call
jle
popf
call
pop
mov
add
in
mov
inc
mov
mov
xor
mov
psubsb
sbb
mov
jmp
sar
or
inc
push
mov
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
jg
pop
sbb
adc
mov
loope
mov
add
and
push
lock
int
dec
xor
push
adcl
incb
imulb
loopne
sbb
scas
push
xchg
loopne
gs
ljmp
xor
dec
pop
les
add
inc
dec
pop
push
add
in
loopne
bndldx
or
or
jnp
xabort
enter
cmp
xchg
cmp
inc
loope
push
lea
dec
daa
iret
add
leave
sar
mov
add
lea
or
testb
sbbb
and
adc
outsb
insb
xor
mov
xchg
xorps
cltd
idiv
xor
sbb
cltd
lods
add
pop
ret
push
dec
popa
es
loopne
mov
pop
and
push
inc
pushl
notb
dec
mov
js
mov
lahf
pusha
cmp
or
xor
adc
ds
xor
and
ret
push
push
sub
roll
xchg
push
inc
mov
inc
lods
addr16
pop
sar
mov
fsubl
xchg
lock
add
rcll
push
hlt
mov
and
dec
cmc
andl
outsb
jmp
or
shll
test
mov
lret
add
mov
loopne
insl
cmp
fsubs
in
movsb
int3
mov
popa
xchg
xchg
lock
inc
call
jmp
ret
mov
outsb
mov
inc
xlat
test
dec
hlt
rcrl
lea
lods
inc
cmp
fwait
jnp
xor
pusha
add
push
inc
inc
add
sbb
lea
je
xorb
jns
orl
lods
inc
xchg
scas
mov
and
aam
push
dec
mov
incl
cmpsb
int
push
jnp
imul
push
or
pop
daa
cmp
mov
aas
sbb
push
cmp
test
jne
movntps
rol
xchg
lea
sub
imul
push
jmp
cmovb
sub
xor
jae
pusha
dec
iret
test
stos
or
inc
out
push
mov
and
sbb
sbb
push
push
fisttps
cmp
mov
add
mov
mov
inc
mov
sbb
inc
dec
xor
pop
subb
addr16
pop
ss
mov
and
mov
sbb
sbb
pop
ret
xchg
cmp
add
ret
inc
inc
mov
cli
or
xorps
sub
movb
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
fnstenv
push
ds
add
rcl
les
daa
ret
sub
sub
insb
pushl
push
int
shlb
jbe
fs
pop
clc
dec
sbb
jns
adc
fiadds
into
insl
push
jle
jg
sbb
mov
pop
cmp
or
push
sub
sbb
or
and
cmp
popa
add
nop
or
daa
jo
push
andl
adc
cmp
push
or
add
sarb
shlb
push
lock
push
or
push
and
jmp
lods
test
inc
dec
jae
es
es
test
js
sbb
stos
mov
xchg
test
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
xchg
cmp
mov
add
jne
add
movsb
mov
loop
xchg
stos
lock
pop
test
icebp
and
mov
imul
xchg
xchg
push
and
or
xor
scas
js
xor
popaw
inc
ss
xor
xchg
adc
lods
xchg
mov
push
xchg
cmp
inc
and
fisubs
push
push
jns
or
popa
rorl
adc
pop
and
shlb
push
push
xchg
mov
sti
and
pop
cmc
pop
bound
decl
rolb
push
and
cmp
push
mov
or
pop
xchg
xor
xor
inc
adc
orb
loop
mov
enter
jmp
xor
lock
test
cli
inc
cwtl
adc
cmp
movsb
pop
out
add
push
jmp
test
push
pop
imul
jecxz
enter
jl
jmp
and
and
or
in
jmp
scas
popa
push
ja
outsl
sub
push
xchg
je
ljmp
or
inc
jl
ljmp
jb
test
inc
jl
enter
inc
lcall
adc
pop
adc
and
adc
push
inc
gs
test
icebp
mov
sbb
pop
add
dec
lret
inc
test
lret
xor
or
mov
and
add
js
xor
mov
pushf
lods
dec
pop
pop
pop
xchg
jg
les
cmp
and
pop
add
push
jno
dec
sbbb
xchg
data16
lods
inc
dec
dec
mov
or
sbb
inc
adc
add
shll
and
jge
push
stos
dec
jl
jmp
rol
xor
dec
pop
shl
mov
dec
mov
mov
inc
enter
mov
scas
push
xchg
mov
fimuls
jl
sbb
andl
enter
jle
shrb
in
push
mov
arpl
cmpl
lea
rcll
sub
or
mov
pop
cwtl
push
jne
push
pop
xchg
bound
pushl
pop
movl
mov
add
rcl
daa
adc
xchg
mov
mov
insl
push
std
jne
loope
fcmovbe
push
push
jnp
loope
push
pop
jne
pop
push
pcmpeqw
pop
or
inc
imul
jge
push
rolb
xchg
mov
lea
jo
and
ficoms
std
dec
hlt
xor
push
lcall
cwtl
clc
rorl
fistpl
pushf
or
xor
or
push
push
icebp
imul
mov
test
outsb
scas
mov
in
imul
dec
or
lahf
popa
fcoml
cmp
pushl
imul
mov
imul
or
adc
add
and
fistpll
or
jne
jge
lock
pminsw
xor
sarl
mov
mov
dec
imul
mov
jmp
nop
mov
xor
mov
dec
je
jae
out
popf
sti
jmp
mov
push
mov
adc
jo
mov
inc
or
jnp
fmull
sbb
pop
icebp
adc
and
or
cwtl
ret
mov
mov
fsubl
dec
pusha
sbb
mov
inc
pusha
jne,pn
sbb
inc
mov
sub
loopne
adc
mov
sbb
or
mov
adc
lds
lahf
push
icebp
push
insb
call
add
es
cmp
jmp
cwtl
les
pop
adc
inc
lock
sub
add
push
adc
fs
bound
orl
test
jg
mov
inc
jp
inc
arpl
mov
cmpl
and
mov
sbb
mov
add
adc
ja
bound
inc
loop
jno
pop
add
and
sbb
mov
jb
arpl
flds
and
add
int3
lahf
push
push
inc
xorb
out
or
and
or
add
pop
adc
add
andl
daa
push
xor
add
out
and
insb
jo
add
add
cmp
pop
push
pusha
insb
loop
fists
ss
xor
cwtl
cmp
mov
ret
and
jg
mov
add
call
int3
ret
or
xchg
add
fwait
dec
and
or
ds
rcrb
mov
movsb
xor
popf
cmp
mov
and
pop
sub
cmpsl
out
mov
adc
dec
cmp
int3
in
outsb
add
cmp
sub
inc
call
push
inc
cmp
sub
sbb
push
add
cmp
mov
pop
cld
imulb
mov
insb
xor
and
pop
cmp
adc
add
xchg
mov
ja
mov
xor
mov
cmp
lahf
daa
sti
sbb
mov
add
test
jle
or
and
dec
je
jne
sbb
outsl
push
loop
stos
or
out
rorl
pusha
jns
pop
or
je
movl
cld
mov
pop
add
jae
mov
adc
xchg
ljmp
xor
arpl
cltd
pop
push
add
cmp
xchg
into
sbbl
test
in
adc
loop
add
jg
cmp
decl
sub
jg
xor
loope
mov
movsb
jno
cmp
push
in
push
ds
dec
mov
pop
sbb
inc
mov
imul
aam
in
rorl
stos
and
sub
xor
jecxz
xor
mov
mov
rorb
iret
push
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
or
sbb
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
insb
sbb
rolb
pop
movsb
cltd
nop
ss
test
mov
imul
les
fbstp
and
adc
xchg
or
movsb
cltd
nop
adc
nop
adc
lcall
pushf
cltd
nop
inc
and
movsb
movsb
cmp
cmp
mov
imul
mov
inc
dec
int3
push
cmp
dec
enter
pop
movsb
or
mov
aam
or
ret
decl
xchg
and
movsb
icebp
movsb
or
or
pushl
cmp
repz
xor
xchg
dec
xor
push
in
imul
or
aas
andl
pop
js
lock
xchg
je
push
fisubs
shld
lret
and
in
or
add
or
sbb
out
push
adc
fdivp
and
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
jge
imul
ret
js
in
cmpb
test
adc
mov
add
sbb
xor
imulb
sar
shll
and
inc
addl
loop
mov
es
pop
aad
clc
incb
lods
ret
ficoms
sbb
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
xchg
jmp
cld
imul
loope
mov
xor
sub
aaa
jge
and
shl
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xchg
add
movsb
xor
inc
jecxz
dec
sub
adc
fnstsw
pusha
push
sbb
pop
cmp
push
movsl
je
or
mov
inc
shl
inc
testb
xchg
cmpsl
repnz
in
adc
sti
add
movsl
out
cmp
out
test
inc
inc
daa
ret
sub
mov
dec
cs
jo
xchg
push
or
sub
push
and
sbbl
stos
int3
pop
movsl
pop
out
testl
rorb
adc
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
push
xchg
adc
fistpl
mov
loope
push
hlt
adc
fildl
movsl
jbe
inc
push
pop
sub
jl
push
divl
or
add
adc
xor
hlt
sahf
or
or
lock
inc
call
pop
dec
push
aaa
sbb
ret
and
cmp
add
mov
add
jmp
mov
pop
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movsb
jns
add
adc
add
jge
xor
scas
test
cmpsb
sbb
mov
mov
je
xor
mov
add
add
and
sub
mov
fstpl
or
test
mov
jge
ffree
repz
xor
push
mov
add
rcll
xorl
enter
cld
repnz
xchg
mov
cli
shrl
scas
lock
dec
cmp
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
add
pop
cs
icebp
jno
lcall
cmpsb
mov
faddl
ret
push
push
pop
cwtl
add
subb
push
shr
jle
push
add
jns
fistps
shlw
sbb
cmpsb
pop
adc
jg
add
add
and
and
mov
add
shrb
fcompl
ret
popa
inc
add
fs
adc
fadd
sbb
imul
and
sbb
hlt
adcl
and
je
repnz
sub
add
scas
add
and
dec
and
cmpsl
packuswb
out
push
pop
shlb
pop
das
in
push
push
fsubrp
fwait
jno
bound
xlat
in
leave
dec
inc
and
push
fcomps
lock
add
or
push
test
enter
dec
cwtl
pop
add
or
sbb
out
frstor
lret
jo
sub
pop
lods
lea
in
popa
xor
xor
lock
mov
rolb
add
test
sub
pushl
roll
mov
cwtl
mov
int
xor
jbe
push
das
adc
addr16
inc
xchg
test
mov
adc
mov
or
jl
push
jnp
or
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
sarl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
or
lods
mov
leave
test
xchg
orl
adc
cmpsl
mov
and
shll
push
or
mov
and
decb
push
or
cmpl
mov
push
addr16
mov
pop
je
aad
xor
mulb
pop
mov
sbb
mov
push
push
hlt
mov
inc
test
pop
dec
ljmp
adc
fnstsw
lgs
or
mov
loop
scas
sub
mov
fnstenv
add
xor
fdivrl
mov
xchg
push
push
mov
les
sub
lock
fsubs
mov
mov
inc
adc
dec
lock
pop
repnz
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
lahf
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
adc
es
dec
int
jle
jg
daa
inc
jb
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
addr16
sbb
sahf
adc
push
ja
inc
mov
test
pop
sbbb
and
push
push
pushf
add
mov
inc
inc
pop
mov
pop
mov
test
mov
jo
push
xor
imul
lods
push
nop
lret
je
imul
cltd
xor
pop
add
dec
push
sti
jbe
loopne
rorl
mov
dec
test
test
adc
idiv
or
or
dec
rolb
cli
push
or
add
jo
push
mov
pop
std
cmp
dec
les
jl
dec
or
imul
jmp
add
aas
pop
enter
push
flds
ret
lret
loopne
test
jbe
jl
pop
or
pop
mov
aam
lock
stos
mov
mov
pop
push
mov
sub
add
cmp
insl
lods
cmpsb
or
add
sbb
adc
scas
ret
dec
or
inc
lea
sbb
push
mov
lret
movsb
mov
rolb
fbstp
not
test
add
cld
inc
or
repz
aaa
idiv
xchg
push
pop
pop
and
mov
out
mov
xchg
mov
loopne
adc
iret
jbe,pt
dec
sbb
fisubs
cmp
cli
xor
cmp
mov
clc
sbb
out
cmp
test
adcb
int3
mov
inc
jae
pop
shlb
xor
jns
add
or
sarb
inc
clc
sub
mov
mov
pop
mov
or
lock
inc
mov
xchg
mov
or
scas
andl
xor
lods
pop
je
aam
dec
xor
mov
pop
rorl
cmp
or
loopne
mov
shl
sub
xorb
jl
lds
xor
adc
dec
push
ds
push
or
js
aam
out
mov
jl
fwait
push
cwtl
adc
dec
loop
sbb
into
pop
xchg
push
sbb
mov
fs
loop
dec
mov
xor
dec
sub
xchg
push
push
shl
enter
inc
lods
sbb
mov
or
test
jae
add
out
lock
into
loopne
rcrl
dec
xor
push
cli
inc
jge
rcrb
cmp
adc
pop
pop
push
push
jb
push
lcall
add
xor
cmp
and
ret
ss
hlt
push
aas
movb
rorb
lcall
stos
and
or
cmp
xor
add
jo
xorl
sub
arpl
rolb
dec
add
jne
daa
andl
sbb
out
inc
push
jl
mov
iret
and
mov
xor
out
and
mov
sbb
shll
mov
xchg
and
enter
pop
mov
inc
or
loopne
mov
enter
roll
loope
dec
push
lret
jne
and
and
mov
cs
mov
and
push
sub
enter
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
sbbl
test
pop
jne
cmp
mov
pusha
jb
lcall
push
inc
mov
add
fimull
mov
rorl
aam
pop
dec
fidivrl
insb
xchg
out
xchg
add
jo
push
sub
jp
xchg
cmp
sti
mov
cs
or
ss
cmp
je
or
sub
xor
mov
dec
add
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
mov
lea
fistpll
cmp
adc
and
xchg
sub
call
into
sti
xchg
or
add
adc
push
jbe
dec
or
add
xchg
xchg
das
test
adc
pop
fcmovu
jge
add
adc
jno
cs
in
test
jle
out
fwait
imul
subl
and
sub
insl
xchg
cs
jle
test
sub
mov
ret
push
pop
sbb
xor
adc
or
fcoml
cmp
js
add
mov
popf
loopne
fs
inc
cmpl
mov
test
sub
push
dec
add
adc
js
cld
mov
pop
push
mov
cli
sbb
sbb
mov
faddl
lock
xor
pop
fildll
jmp
sub
add
jo
aad
pop
jmp
addb
push
rorb
inc
jg
aam
fidivl
push
neg
movb
mov
add
fs
cltd
push
dec
push
mov
pop
sub
add
add
add
push
mov
enter
shlb
push
daa
test
jbe
jns
pusha
je
push
add
es
mov
push
imul
fldenv
inc
mov
and
jmp
outsl
cmpb
jmp
push
or
sub
fsubrl
adc
movsb
push
push
adc
rorb
sub
loop
insb
sub
lret
mov
add
addr16
gs
push
lock
push
jmp
add
mov
push
out
pop
xor
and
push
fadd
push
fidivs
pusha
xor
add
jl
cmp
jge
js
push
fcoml
and
call
mov
mov
mov
fsubs
imul
add
push
mov
push
sahf
pushf
adc
je
and
cld
push
and
or
jne
xor
stos
lods
xor
incb
dec
mov
fdivl
dec
jecxz
push
cmp
dec
mov
test
cmc
neg
aaa
orl
add
sub
dec
sbb
test
enter
js
or
sbb
fdivrp
ret
add
fcoml
dec
sub
leave
and
andb
insb
movb
iret
and
mov
mov
inc
popf
neg
sbb
mov
inc
into
and
adc
jg
outsl
mov
nop
ret
jb
shll
add
pop
es
pusha
xchg
icebp
add
sub
andb
jmp
inc
xor
mov
jb
add
sbb
aam
ficomps
imul
xor
shlb
ja
mov
push
hlt
nop
or
add
sub
adc
loopne
mov
call
mov
push
pushf
pop
ret
inc
cmp
or
push
inc
xor
cmp
sub
cld
add
lods
clc
dec
or
shrd
sbb
jge
xchg
sbb
jge
inc
xlat
inc
sti
sbb
clc
cwtl
xor
fists
jg
in
inc
and
xor
out
and
or
cltd
cld
sub
jo
lea
pushf
or
rorl
inc
call
insb
xor
imul
jl
ret
lock
or
jo
ljmp
and
fiaddl
sbb
js
jg
jb
out
xchg
xor
jmp
adc
cwtl
shl
fimull
jl
loope
inc
adc
int3
hlt
mov
pop
push
mov
push
lock
or
add
imul
dec
dec
inc
dec
pop
or
sbb
imul
lock
cmp
sarl
inc
and
in
in
ja
enter
adc
ss
adc
or
jbe
iret
and
movsl
mov
jo
sbb
movw
sub
push
push
jle
in
in
jne
rclb
mov
jmp
add
inc
pop
mov
or
and
jns
neg
jmp
sahf
pop
and
or
aaa
push
lods
outsl
lea
pop
pop
xor
add
add
push
xchg
pop
inc
shrl
push
and
mov
or
add
jl
or
add
shll
xor
cs
add
inc
and
xor
xor
adc
pop
push
divb
push
cmp
sarb
nop
cmp
imul
stc
test
xor
enter
push
push
mov
fstps
push
out
pop
cwtl
push
call
outsl
les
adc
sub
pop
inc
test
lock
mov
mov
push
add
adc
popf
jmp
xor
and
add
sbb
clc
gs
jl
mov
pop
data16
cmpsl
fcoml
inc
popa
je
in
pop
sbb
inc
je
dec
aaa
cmpsl
jmp
xor
add
pop
xor
pop
mov
mov
movsb
xor
inc
cmp
mov
or
mov
popa
pop
orl
loopne
mov
add
aam
and
and
arpl
or
push
je
mov
mov
inc
pop
push
ffree
test
and
or
daa
push
or
rcl
ss
cmp
cmp
in
cmp
cmpxchg
jmp
sarl
push
int
inc
fistl
jbe
mov
jne
add
test
jne
cmp
testl
inc
mov
hlt
ja
sub
push
addl
sub
xlat
sub
inc
aam
int
sub
mov
cmc
cmp
mov
fwait
push
dec
mov
push
scas
test
inc
add
inc
sbb
aam
aam
xor
pop
sub
push
and
leave
push
inc
cltd
mov
and
xor
les
adc
sub
push
dec
xchg
xor
cmc
adcl
mov
or
mov
cmp
push
cmp
nop
push
add
mov
aam
and
mov
pop
inc
mov
adc
les
adc
lods
sub
cmpl
inc
clc
test
cmp
or
aam
mov
push
mov
xlat
xlat
aad
mov
push
mov
pop
pop
pop
pop
pop
cld
sarb
and
cmp
jae
xchg
dec
mov
nop
add
sbb
and
in
scas
lcall
lret
je
dec
je
dec
add
sti
push
push
jmp
or
jmp
add
jnp
inc
cmp
or
lcall
adc
rcr
lcall
inc
icebp
pop
ret
roll
cltd
add
add
or
and
je
or
js
rcrb
adc
sbb
das
add
xor
gs
sbb
cmp
adc
aas
cmp
sbb
dec
mov
mov
or
push
sub
lahf
shrb
sbb
or
or
nop
pop
pop
cwtl
or
dec
xchg
lods
lods
jnp
inc
adc
adc
je
fiaddl
sub
nop
into
sub
xor
mov
repz
xchg
scas
jl
jecxz
xchg
jno
or
xchg
push
mov
inc
enter
dec
loope
cltd
popa
or
mov
mov
aas
xchg
add
ret
push
push
call
adc
call
dec
orb
lcall
sbb
bnd
shr
add
or
mov
sub
add
shr
or
mov
les
adc
test
and
add
mov
insl
xor
lock
xchg
mov
mov
add
pop
pop
or
jbe
jle
ja
add
jl
in
sbb
cmp
nop
adc
or
dec
pop
pop
dec
test
je
sti
addl
or
mov
and
inc
sbb
test
bound
xor
lret
xchg
lret
clc
and
xchg
lea
xor
pop
insb
shll
cli
push
push
inc
pop
or
push
xchg
adc
adc
das
or
fcoml
fistps
icebp
xchg
aam
cmpsb
and
xchg
sbb
ret
mov
es
or
lock
icebp
sbb
insl
sub
dec
mov
adc
loope
icebp
insl
flds
imul
mov
sbb
lea
push
roll
incl
cmpsb
or
xchg
or
cmp
mov
shll
fnstenv
pop
data16
popf
push
jbe
les
xchg
dec
dec
mov
pop
xorb
jecxz
push
pop
add
lret
je
repnz
and
xor
sbb
push
inc
call
pop
loope
pop
inc
jb
jecxz
ljmp
repnz
xor
add
ret
enter
cmc
addl
pop
or
sub
testb
dec
jo
mov
and
cltd
sub
sub
or
add
mov
stos
xor
or
insl
test
lods
mov
push
and
or
and
dec
xor
stos
sbb
enter
add
add
rcrl
push
sub
and
inc
sbb
fmul
leave
rclb
add
aad
inc
add
sub
inc
inc
push
xor
push
imul
and
xor
mov
push
test
mov
filds
ret
push
aas
mov
andb
andb
in
adc
cmp
std
sbb
add
pop
je
add
sbb
mov
sub
bound
mov
xor
fsubs
pop
mov
push
mov
sbb
rcll
sub
push
add
fldl
cmp
and
pusha
add
pop
mov
sub
call
in
push
movsb
ss
xor
enter
dec
sub
lea
push
add
or
cmp
and
pusha
push
add
imul
pusha
jbe
mov
cmp
jle
inc
and
std
rclb
pop
scas
and
popf
cmpsb
sbb
mov
dec
insb
xor
outsl
mov
fcoml
mov
jl
xor
fidivl
push
incl
adc
or
sbb
push
cmovnp
dec
jns
jns
jp
push
add
mov
imul
cs
orb
and
mov
cld
cmpsb
push
add
sub
pop
fcomps
and
sbb
jne
cmp
jne
lret
cmp
test
dec
add
lahf
or
loopne
or
or
or
mov
ljmp
out
roll
leave
add
or
je
mov
iret
sbb
cltd
push
adc
cmc
dec
push
xor
jmp
adc
mov
jno
bound
adc
jne
jbe
add
jmp
pop
popa
shlb
and
lret
pop
add
sbb
hlt
and
adc
loopne
pop
mov
addl
adc
rclb
pop
jecxz
add
jge
inc
inc
push
neg
idivl
out
sahf
loopne
sbb
sub
inc
adc
dec
repnz
popa
adc
data16
xorl
push
push
add
xlat
push
inc
and
fnstenv
fcomi
sbb
adc
aad
inc
adc
sbb
mov
add
and
dec
jns
mov
dec
jne
pop
pop
pop
aam
sub
jae
or
jae
or
pop
adc
ret
loope
shr
sbb
dec
fsubrs
adc
push
je
push
push
idiv
and
maskmovq
cld
lock
push
cmp
je
cmpsb
shlb
add
add
mov
sbb
dec
or
into
add
lods
pop
lods
jae
or
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
pop
aad
and
push
adcb
adcb
inc
xchg
outsb
jo
or
adc
sbb
inc
mov
inc
add
test
jo
xchg
gs
mov
or
scas
loopne
xor
ljmp
cld
inc
ss
test
mov
or
pop
or
fstl
out
cld
mov
rcl
and
leave
jne
pop
inc
cmp
jmp
ss
subb
add
push
add
mov
and
mov
ret
cmp
ret
inc
mov
push
lahf
push
mov
adc
xchg
mov
das
rclb
pop
mov
subb
es
mov
je
adc
jns
das
jl
out
push
cmp
ja
add
cmp
adc
cmp
jne
je
inc
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
adc
je
adc
push
fmuls
adc
add
dec
ljmp
rclb
mov
xor
or
test
dec
push
sti
aas
cs
push
movb
call
add
and
sbb
mov
cmp
test
add
mov
cmpsb
and
ret
pusha
movw
xor
jb
add
fstl
xchg
xor
stos
xchg
cmp
pop
mov
cmp
mov
inc
loopne
sbb
test
mov
or
sub
cmp
pop
out
add
add
into
push
sarb
add
sbb
cmp
xorl
ja
dec
js
imul
cli
and
call
inc
imul
inc
dec
lea
sar
dec
popf
lds
xchg
data16
fildl
es
ljmp
imul
sahf
inc
ret
inc
call
js
xorl
push
push
dec
test
pop
and
dec
cwtl
mov
xor
and
mov
and
or
dec
movb
repnz
sbbb
adc
mov
mov
sub
and
and
lea
inc
xor
andl
ss
cmpb
pop
cmp
mov
mov
xlat
loopne
out
and
mov
inc
call
in
ljmp
push
inc
mov
cmp
cld
push
mov
mov
jne
lea
adc
lods
xor
push
sub
sahf
inc
mov
push
lea
xor
nop
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
clc
cmpsl
jne
rorb
cmp
lock
xor
fbld
mov
gs
add
shr
or
and
rorb
sbb
jne
push
push
lret
movl
ret
ds
mov
or
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
jmp
push
jnp
hlt
mov
pop
lock
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
cmp
and
cmp
subl
and
jnp
jnp
xchg
test
sbb
sahf
les
cli
adc
in
xor
lahf
call
ficoml
pushf
inc
sub
jmp
sbb
enter
push
aad
jg
or
pop
lcall
inc
in
int
mov
push
pushw
dec
sbb
out
rclb
inc
repnz
pushw
sbb
imul
out
jge
cmp
push
out
enter
mov
jb
inc
ljmp
in
sub
inc
daa
adc
jne
fcompl
sub
or
push
roll
jne
add
sub
and
dec
jbe
dec
sub
jmp
popa
mov
adc
shlb
dec
push
adc
cmpsb
xor
add
adc
mov
sahf
lret
fcmovu
mov
mov
insl
test
jmp
mov
jp
mov
add
idiv
adc
xchg
adc
pop
div
jg
or
adc
das
test
jge
or
sbb
das
nop
or
jb
or
and
movsb
jmp
add
in
adcb
enter
loopne
sbb
aaa
xchg
rorb
lret
mov
pusha
add
jbe
stos
cwtl
sbb
sub
inc
add
mov
sbb
aas
in
add
inc
mov
dec
xchg
push
pop
outsb
call
xchg
sub
mov
sbb
lret
mov
shl
shrb
cli
pop
inc
mov
and
fs
lds
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
pop
rol
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
fcoms
notl
push
adc
fldenv
ljmp
pop
add
adc
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
xor
inc
and
dec
jg
fistl
inc
sub
jge
sub
cmpb
sub
movb
dec
cmp
or
jle
add
dec
add
add
fadds
mov
call
adc
add
sub
out
jb
int
adc
cmp
in
mov
mov
lret
or
mov
cwtl
push
mov
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
stc
lret
mull
push
or
push
or
push
push
sbb
sarl
sub
or
push
rolb
pop
or
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
add
inc
sub
and
cli
sub
and
pop
pop
add
insb
orb
xor
prefetchw
inc
adc
cmpl
shlb
or
lret
test
add
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
lea
push
in
add
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
pop
sbb
or
or
adc
gs
lock
cmp
pop
test
adc
xor
mov
add
add
mov
mov
mov
push
cmp
sub
and
sbb
inc
jg
daa
daa
iret
lret
into
into
into
mov
or
js
ja
sub
push
pop
nop
pop
js
xor
pop
mov
mov
or
jl
movsl
cmp
pop
stos
push
or
push
jae
or
inc
and
pop
lcall
add
leave
lahf
pop
mov
adc
add
ret
movsl
movsb
in
dec
loop
fwait
stos
pop
test
mov
lods
and
cltd
and
loopne
popf
ret
cwtl
sbb
lcall
sbb
mov
lods
mov
lret
jo
dec
pminsw
stos
cmpl
mov
out
pop
and
roll
add
adc
fstps
adc
xchg
mov
pop
ret
push
jp
or
rolb
clc
xchg
sbb
add
into
lret
mov
inc
xor
in
push
not
pop
and
sub
loopne
rolb
vmwrite
je
sahf
or
jo,pn
add
repz
add
insb
mov
xor
aas
sbb
cmp
or
sub
loope
jle
xchg
into
cmp
je
mov
push
or
or
or
cmp
jbe
sbbl
jmp
push
xor
movsl
pushf
xchg
loopne
lretw
pop
or
fisubrl
cmc
int
ds
rclb
push
inc
lahf
gs
and
lret
rclb
ret
mov
sub
sbb
adcl
adcl
cs
mov
scas
mov
dec
adc
addb
sub
pop
nop
imul
xor
and
test
xor
mov
pop
and
aam
imul
push
imul
imul
mov
mov
pop
adc
mov
xchg
out
xor
shrl
mov
xor
test
inc
ret
cmp
aas
jne
cmp
push
cs
push
cmp
sbb
push
mov
mov
xlat
or
ret
add
cmp
add
inc
popa
add
flds
or
pop
add
dec
cmp
xchg
pop
jmp
mov
push
into
sahf
mov
dec
cmp
mov
inc
ret
bound
loope
lds
stos
sub
and
jl
testl
sub
lahf
pop
mov
push
loope
popa
and
aaa
jne
mov
pop
pop
mov
orl
hlt
call
ja
ss
or
ret
push
push
add
pushf
int
push
pop
xor
mov
insb
cmp
pop
xchg
sub
pop
ds
sub
mov
add
inc
jnp
mov
mov
and
sbb
lds
dec
in
aad
inc
adc
cli
pop
xchg
addl
fldcw
je
mov
jg
xor
and
sti
fildl
push
cmp
push
mov
adc
loopne
pop
stos
mov
stos
call
xor
andb
test
jbe
cmp
js
pop
pop
xchg
pop
fldt
add
pop
nop
add
clc
adc
pop
je
mov
push
jmp
pop
cmpb
cmp
mov
out
pop
xor
jae
gs
push
push
sbb
cmpsl
nop
or
mov
out
movsb
push
pop
pop
dec
sbb
inc
insl
xor
push
test
rorb
imul
and
inc
sarl
movb
daa
arpl
adc
inc
ss
sbb
sub
sub
decl
outsb
cmp
scas
xor
inc
mov
pop
fcoms
mov
adc
push
adc
push
shrl
orb
pop
and
mov
aas
mov
fs
inc
add
and
pop
mov
nopl
cmpsb
add
push
or
cwtl
inc
jecxz
push
fcomps
cmp
push
push
mov
pushf
cmp
add
and
pop
test
pop
xor
push
sub
sbb
in
mov
cs
dec
rcll
push
and
pusha
imul
or
lea
push
ret
xchg
clc
add
xchg
movsl
shlb
enter
movsb
adc
xlat
sub
sbb
mov
cs
jl
nop
xchg
jmp
push
mov
icebp
pop
orb
pop
pop
daa
cltd
mov
push
add
sub
test
pop
adc
dec
push
sar
bound
push
sbb
mov
jne
pop
aas
mov
dec
repnz
pop
sub
adc
push
rcll
stos
inc
add
add
mov
cmpsl
aas
rcrb
mov
inc
fadd
dec
sahf
xor
in
and
shld
sub
inc
xor
mov
pop
hlt
add
es
mov
xchg
movsl
aas
add
stc
gs
mov
pushf
ret
jb
dec
jl
lcall
jl
or
jmp
cmp
push
sbb
cmpsl
pop
ss
add
or
ja
aad
insl
cld
mov
loopne
pop
pop
xchg
and
popa
sub
fsubs
test
sub
jno
xchg
dec
arpl
jno
pop
in
shrb
and
ret
add
xor
cmp
data16
nop
jne
adc
clc
scas
cld
adc
es
or
imul
inc
int
adc
xor
and
mov
pop
mov
xchg
xor
jns
adc
adc
add
xor
and
adc
pop
add
push
lods
and
xchg
mov
call
xor
push
movsl
add
lods
xchg
rolb
xor
clc
pop
ss
loope
inc
popf
sub
int3
shlb
hlt
movsb
incl
add
rol
push
sub
pop
sub
aam
add
mov
mov
shlb
dec
fisttps
xor
std
data16
xor
inc
and
inc
loopne
and
push
lret
mov
lods
jmp
or
ret
imul
inc
pop
mov
popa
test
std
popa
jbe
push
xchg
int3
bound
mov
adc
pop
fidivl
inc
les
in
jnp
mov
jmp
jb
js
daa
mov
inc
nop
dec
inc
imul
add
xchg
push
cs
jge
cmp
add
or
movsl
jge
adc
mov
xor
sbb
pop
or
dec
jbe
arpl
mov
jge
xchg
mov
xlat
cwtl
out
cld
sbb
daa
push
jmp
dec
cmp
xchg
or
repnz
neg
adc
cmp
adc
imull
cmpsb
lock
sub
inc
test
xor
jmp
inc
add
loope
popa
jmp
call
hlt
sub
hlt
fcoms
imul
mov
jl
dec
push
add
jl
repnz
test
cmp
mov
and
pop
add
dec
jb
lea
mov
sahf
orb
mov
rorl
push
mov
sub
push
xchg
mov
pop
repnz
add
or
test
or
pop
xor
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
ret
jns
mov
cltd
sbb
mov
mov
dec
cwtl
mov
rcrl
ret
mov
add
jg
cmpsb
test
jae
or
cltd
pop
lret
inc
cmp
push
sbb
mov
cmp
ja
or
push
add
cmp
rorl
mov
pop
pushl
mov
mov
sarl
sarb
and
jmp
lret
fsub
and
data16
rcrl
or
mov
ret
inc
cmp
std
sti
xor
inc
adc
and
and
inc
aas
inc
or
adc
mov
mov
data16
inc
dec
or
and
fwait
lret
and
or
jl
add
mov
test
cmp
dec
pop
ss
or
sub
mov
loop
jl
sub
or
add
add
add
push
or
mov
cmpb
xchg
jo
xor
and
sub
in
add
push
dec
sbb
and
sbb
jg
inc
fwait
push
push
push
add
mov
bound
or
in
inc
dec
or
pushl
hlt
addl
pop
jl
in
mov
es
stos
push
sub
adc
xchg
orb
popf
js
mov
inc
cwtl
loope
add
jo
adc
jns
in
cwtl
dec
xor
int3
sbb
and
clc
pop
and
add
sub
call
movsl
mov
mov
ret
fxch
in
jmp
aaa
adc
insl
gs
dec
fcoml
push
lods
icebp
andb
cli
fildll
cltd
in
adc
or
sbb
filds
jae
js
pop
adc
cmp
jae
mov
stos
sbb
mov
lret
cmp
jg
sbb
add
popa
sub
out
dec
in
clc
xchg
jg
adc
pop
add
xchg
cmpsl
xor
cmpsl
and
cmp
pop
jle
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
mov
jp
xchg
ret
rorl
jbe
xor
imul
aaa
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
call
jbe
ret
jae
out
repnz
loope
push
mov
or
jo
or
xchg
imul
dec
cmpsb
test
je
fwait
popf
and
add
jg
add
dec
or
daa
fwait
jl
jmp
cmp
mov
xchg
je
mov
or
xchg
sbb
jmp
outsl
sbb
orb
push
dec
cli
sar
testb
cmp
mov
dec
sbb
call
push
xchg
or
repnz
or
shl
push
cmp
or
dec
cmp
jecxz
in
jno
leave
push
dec
je
dec
jne
push
bound
adcb
jmp
push
jmp
xor
and
inc
xor
ds
cmpsl
dec
je,pn
adcl
insl
call
add
dec
insb
or
mov
push
icebp
rcrb
fdivrs
sbb
cli
arpl
or
outsl
mov
clc
loope
daa
cmp
mov
add
sahf
pop
loope
inc
sbb
jne
mov
jecxz
jmp
and
add
push
xchg
lods
ss
or
mov
hlt
push
lock
jb
push
and
cld
push
rcrb
or
jae
popf
add
lods
lahf
xorb
pushf
inc
mov
xor
hlt
imul
cmpb
sub
add
and
frstor
xchg
pop
out
insb
out
into
mov
ficoml
mov
lret
pop
mov
pop
sbb
pop
push
aaa
js
mov
add
dec
or
push
adc
cmp
andb
fnstsw
ret
xlat
add
mov
inc
mov
xor
gs
adc
or
add
xchg
push
sbb
adc
ror
sbb
jecxz
rorl
stc
sbb
std
js
mov
hlt
jne
adc
fildl
or
push
gs
mov
mov
and
ficomps
fs
xchg
pop
icebp
sbb
sbb
clc
jle
test
les
mov
adc
add
scas
pop
sahf
adc
mov
or
sub
loop
sub
or
jne
jg
add
cmp
mov
cltd
gs
xchg
iret
xchg
jmp
or
loopne
into
add
push
inc
lock
mov
adc
push
cld
sub
fldt
lea
add
xor
mov
mov
and
mov
faddl
jbe
mov
cmp
fstl
orl
jg
jmp
adc
es
gs
rorl
ret
or
jl
add
and
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
jne
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
gs
jmp
or
shll
es
lret
inc
and
and
jo
sti
insb
insb
and
aam
push
mov
adc
mov
mov
mov
jns
cmpl
nop
inc
pop
mov
push
mov
xlat
je
cmp
jg
adc
or
inc
and
add
add
testb
lock
outsb
xlat
daa
movsb
mov
push
jmp
sbb
or
cwtl
and
clc
mov
jb
je
cmp
jle
mov
cmc
pop
xor
cmp
jbe
clc
push
push
or
movsb
in
push
adc
ret
push
loope
mov
rcl
jmp
das
xor
jbe
sti
insl
nop
cmp
mov
addl
pop
xor
jbe
outsb
sbb
pop
mov
pop
es
sbb
sahf
test
sub
inc
mov
sbb
pop
adc
mov
pop
sti
jp
fs
orb
in
push
push
popa
stos
dec
lods
inc
sbb
gs
in
fstl
hlt
lods
mov
arpl
aad
inc
mov
sbb
gs
jne
stos
dec
jns
mov
dec
test
add
and
enter
jne
add
inc
and
in
add
fisubrl
jge
mov
mov
fidivrl
push
daa
fldz
mov
xor
repnz
rclb
push
pusha
xchg
test
push
add
sub
xchg
sbb
test
xor
andb
fistps
dec
pop
je
pop
and
fld
inc
xor
mov
test
fistps
xchg
mov
ds
mov
fsubrp
xchg
fstps
adc
les
adc
arpl
add
fucomi
sub
das
fcomp
jbe
bound
lea
push
and
pop
sbb
push
dec
lods
inc
test
xor
xchg
sbb
pusha
adc
xchg
pop
test
or
dec
cmpsl
xchg
lea
mov
mov
in
xchg
rorb
push
adc
or
mov
jg
or
xor
dec
or
rclb
adc
xchg
jno
add
in
mov
jnp
mov
inc
add
test
or
or
or
adc
sub
xor
cmp
int
adc
lea
jo
cmpsl
add
and
add
pushf
cmp
imul
lock
leave
and
in
push
mov
push
mov
xor
mov
inc
cmp
int3
orb
pop
cld
fs
leave
add
test
pop
mov
mov
fmuls
add
enter
add
cltd
ficoml
pop
cmp
nop
mov
clc
les
dec
leave
ficoml
dec
roll
inc
nop
stos
jns
rcl
lds
pop
ret
push
add
inc
push
jb
arpl
in
enter
sbb
pushf
adc
xor
cli
es
or
stos
loopne
shl
ss
jae
sbb
sarl
or
and
xor
movsb
lods
and
dec
mov
xor
repnz
inc
adc
dec
pop
mov
add
rclb
pop
or
mov
sub
popa
or
push
xchg
pop
inc
sbb
stos
arpl
lret
inc
xchg
arpl
inc
sbb
test
mov
setae
mov
mov
xchg
outsb
in
add
cmp
arpl
jl
push
cld
lcall
pop
test
cs
and
jno
in
lock
adc
dec
or
or
add
inc
adc
les
mov
jne
jbe
test
and
rcl
rclb
adc
fwait
lcall
popa
push
ret
jb
cmc
hlt
movsl
orl
adc
sbb
out
push
jno
pusha
fs
dec
xor
push
xor
and
jl
inc
mov
dec
sbb
testl
sub
pop
mov
xlat
and
push
xor
adc
adc
pop
imul
mov
add
mov
or
in
add
in
mov
mov
orl
cmp
popa
xlat
in
sti
aam
andb
in
mov
fidivl
adc
fs
pusha
xlat
jmp
xchg
pop
insl
push
xor
cmp
sub
and
into
movsb
jno
xchg
pop
and
ret
sbb
mov
lahf
addr16
jbe
add
stos
jmp
sub
xchg
pop
shr
pop
insb
sarb
popa
js
lods
add
idivl
pushf
loope
lock
mov
mov
and
adc
lock
jl
out
rcr
aad
inc
enter
out
push
cs
cwtl
fstl
cmpb
cld
shl
xor
adc
inc
dec
and
ret
mov
adc
shll
ret
push
movsb
popf
lock
lds
mov
push
jne
sub
add
movsb
inc
xchg
in
adc
cmpsb
inc
xchg
sbb
loopne
scas
ret
jg
sbb
push
les
sbb
ss
push
inc
repz
orl
or
je
in
mov
addb
sbb
imul
or
nop
loopne
sbb
jb
aas
jo
jbe
fcompl
jne
jecxz
sbb
rolb
xchg
movsl
ss
cltd
imul
sbb
shll
ficoml
lock
push
adc
and
rolb
ss
or
pop
sub
ficoml
jb
push
pop
xor
push
mov
adc
dec
dec
push
and
push
stc
cmp
insb
sub
in
sub
insb
mov
xchg
or
add
and
add
sbbb
pop
xchg
ds
mov
lea
adc
mov
movsb
and
cwtl
mov
insl
push
call
inc
sub
mov
dec
push
jmp
dec
or
insl
dec
cmpsb
add
fdivl
add
adc
xor
fs
out
mov
jp
es
pop
jle
dec
push
ret
push
lods
add
mov
bound
and
testl
imul
push
mov
push
and
push
push
add
pushf
mov
mov
sbb
adc
inc
sbb
std
in
popa
sub
or
and
addr16
cmp
mov
sbb
dec
call
ljmp
insl
and
and
dec
movsl
sbb
sbb
and
subb
and
imul
aam
sub
jg
movsl
sbb
xor
je
xchg
mov
xor
fs
call
or
or
sbb
fdivrl
fwait
cmp
cwtl
and
xlat
adc
aam
adc
sub
inc
jmp
xchg
and
clc
aad
ds
sbb
add
dec
mov
or
mov
pop
push
in
insb
ljmp
or
or
and
jns
paddusb
std
nop
push
add
fcoml
movsb
loopne
sub
cltd
loopne
fdivs
nop
rorl
rclb
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rcrb
test
or
cmp
push
mov
es
dec
daa
add
adc
daa
aas
in
xchg
dec
enter
pop
aaa
cmc
and
xor
cmp
loopne
std
push
in
push
dec
sub
push
les
gs
cmpb
lds
cmp
popf
cmp
jb
and
leave
and
and
lock
nop
ret
inc
clc
sub
xor
xor
and
mov
adc
mov
movsb
xchg
test
call
xchg
sub
orl
mov
pusha
leave
or
mov
or
pop
inc
jae
sub
or
mov
xor
movsl
fisttpll
and
adc
or
mov
mov
lods
sub
mov
push
adc
aam
stc
sbb
sub
xchg
inc
jno
or
cltd
pop
push
add
inc
xor
les
or
fsubrl
int
lret
cwtl
sub
les
sarl
les
pusha
fmuls
or
loope
mov
cmpsb
movl
ret
xchg
mov
cmp
test
add
and
sbb
add
pop
jmp
movl
cltd
inc
dec
push
rcl
insl
loopne
push
add
mov
or
dec
enter
pop
fcmovnb
adc
andl
and
das
or
pop
mov
and
test
test
inc
fs
or
in
clc
sub
jno
insb
adc
shrb
mov
pop
subb
push
insl
insl
push
sub
loope
xchg
mov
shrb
rolb
aas
xchg
hlt
xlat
shll
rcr
sub
ret
cmp
daa
insb
das
and
ljmp
jno
add
das
or
mov
inc
jae
add
stos
je
inc
mov
adc
jo
xor
pop
and
push
inc
lock
xchg
or
cmp
and
jmp
inc
xchg
or
jne
sub
bound
insb
adc
sbb
dec
push
push
xchg
xchg
push
sbb
out
cmp
mov
xor
pop
xor
imul
jne
jge
ret
xchg
mov
punpcklwd
dec
adc
mov
adc
xor
lock
adc
push
shlb
loope
push
test
xchg
add
pushf
bound
adc
xor
cmpsb
sbb
or
or
push
mov
jbe
xchg
sbb
xchg
cmp
mov
pop
sbb
lock
pop
xchg
or
xor
mov
xor
sbb
or
sarl
or
sti
push
mov
pop
cmpsl
mov
lods
lret
movsb
xor
adc
test
push
pushf
stc
jg
jmp
test
or
xchg
xchg
int3
adcl
mov
push
insb
mov
lods
sbb
adc
je
lahf
pop
test
pop
enter
or
cmp
mov
in
mov
int3
lahf
hlt
mov
pinsrw
in
in
sub
arpl
in
int
inc
inc
int3
rorb
pop
pop
and
enter
and
pop
mov
xor
or
inc
or
aam
mov
jno
jg
adc
push
sbbb
roll
adc
mov
add
or
sbb
add
push
mov
inc
jmp
push
jmp
sarb
fdivrs
push
cmp
in
aam
rcr
sti
and
cmp
loopne
int3
ss
push
sub
push
rorl
lock
mov
iret
cmpsb
jl
jne
mov
dec
imul
das
jp
aas
aam
adc
dec
sub
inc
shrb
jecxz
cmpl
testb
in
sub
ds
mov
mov
fwait
mov
xchg
or
leave
and
pushf
mov
test
sub
inc
sub
aaa
pop
inc
adc
fadds
dec
mov
xchg
sub
and
jl
adc
add
push
sbb
cmp
sub
aaa
inc
pop
orl
dec
mov
bound
js
push
and
movsb
fdivr
addb
ret
xor
and
mov
sarb
shl
arpl
imul
call
xchg
mov
fsubrs
xor
pop
push
and
mov
sub
jne
enter
shrb
jmp
ret
leavew
int
aas
sub
dec
xchg
inc
loope
or
cmp
sbb
or
arpl
mov
sub
test
add
jmp
adc
adc
inc
and
arpl
fdiv
lea
mov
bound
mov
sub
insl
loopne
pushf
ljmp
pop
adc
and
pop
and
rorl
mov
push
inc
add
xlat
push
xchg
mov
cmp
push
insl
vmwrite
cli
notb
in
notb
arpl
lahf
or
and
shrb
inc
cwtl
mov
cmp
pop
out
push
dec
in
dec
jns
cmp
bound
pop
mov
add
imul
imul
cmc
xor
mov
jnp
jo
mov
in
jne
or
lods
mov
adc
test
sub
pop
mov
and
in
shrb
jge
inc
push
add
or
add
xchg
or
aad
cmc
rorl
inc
adc
fs
mov
nop
mov
inc
mov
cmc
dec
adc
test
fsubl
fcoml
pop
adcl
ja
adc
lds
jl
popf
push
inc
or
push
add
scas
in
call
pop
nop
test
fstps
xor
adc
adc
addb
push
sbb
orl
inc
sub
add
sub
sub
add
push
lods
shrb
rclb
and
inc
aam
sub
fildl
push
aam
adc
cmp
mov
call
mov
in
sub
mov
dec
or
jno
xor
repz
int
sub
or
in
les
xchg
lock
test
xlat
jb
sbb
add
enter
add
xchg
lret
sbb
mov
lret
rol
mov
pop
add
mov
dec
push
fcoms
pop
int3
gs
inc
pop
dec
not
adc
mov
pushf
adc
pop
dec
fiaddl
aam
movsb
cmp
xchg
xchg
inc
mov
and
nop
add
fldl
shlb
les
lds
rol
dec
dec
call
nop
inc
in
je
insl
adc
pop
sbb
stc
adcl
rorb
sbb
and
pop
rclb
sub
cmp
add
sbb
or
inc
test
cmpsb
dec
popa
aad
adc
dec
das
dec
dec
xchg
or
jne
jne
or
fiaddl
bound
adc
test
je
cmpsl
push
test
dec
sbb
push
fwait
sub
pop
aas
and
jmp
mov
or
or
add
fs
jne
test
subb
gs
lock
subl
push
mov
add
mov
das
jae
in
in
mov
lods
lods
enter
test
sarb
imul
cmp
xchg
dec
lea
mov
inc
lcall
mov
jo
sbb
jns
and
xor
movsb
mov
scas
gs
mov
mov
fidivl
push
fwait
mov
push
movsl
nop
iret
arpl
leave
sub
enter
mov
push
fisttps
or
inc
int3
fisubl
fadd
stos
jne
xchg
xchg
idiv
cmp
jle
xchg
rclb
pusha
jne
sbb
lahf
imul
or
movsb
insl
xor
dec
push
in
push
pop
xchg
xor
xor
pusha
adc
nop
pop
fistl
xchg
adc
sub
cmp
fadds
jle
enter
sbb
mov
and
xor
andb
push
pusha
pop
inc
mov
or
lods
in
adc
sbb
int3
movsl
mov
rcrb
test
or
nop
add
mov
test
mov
add
sub
dec
pop
nop
mov
cmp
jne
jne
adc
shr
aas
dec
leave
and
xor
pop
fiadds
in
push
mov
movsb
inc
cmpl
jge
xchg
stos
test
fsubrl
test
mov
jecxz
adc
adc
aam
orb
fdivr
call
mov
or
push
emms
in
dec
mov
push
cmp
push
nopl
xor
push
fs
test
enter
cli
jo
and
cltd
movsb
adc
push
sbb
push
aaa
xchg
dec
int3
jg
pop
pop
cltd
adc
dec
pop
add
cli
jns
push
xchg
add
call
inc
mov
push
mov
pop
mov
lods
repz
cmp
mov
aam
inc
mov
movsb
mov
lea
push
adc
jns
pop
xchg
fs
loopne
insl
pusha
push
or
pop
orl
cmp
pop
jp
mull
add
notl
push
sbb
mov
pusha
movsb
popf
insb
adc
es
push
insl
cmp
mov
leave
and
dec
dec
push
xor
sbb
dec
xor
sbb
inc
cmp
and
sub
pop
enter
pop
enter
mov
sub
imul
jmp
jne
add
adc
xor
inc
enter
pop
hlt
and
movsb
int3
pop
inc
or
sbb
sub
sti
inc
les
sub
cmp
jl
and
or
pop
add
stos
movsb
pop
stos
rolb
sbb
aam
es
fwait
add
pop
mov
in
and
sub
test
ret
xor
std
in
xor
adc
pop
fwait
movsb
in
pusha
les
jge
loope
fwait
imul
lods
sbbl
pop
or
push
insb
gs
je
and
call
or
dec
inc
jecxz
iret
ret
dec
add
or
xor
xchg
fistps
xchg
pop
mov
sbb
jb
push
and
ret
cmp
shll
add
mov
repz
int3
test
insl
and
inc
dec
int3
int
pop
adc
rcrb
aam
adc
popa
iret
lahf
or
push
push
add
pop
inc
xchg
imul
fs
jo
int3
dec
shlb
stos
int
rorb
bound
add
rorb
scas
inc
mov
inc
insb
jno
inc
in
dec
sub
pop
mov
cwtl
addl
inc
in
and
sbb
sub
jecxz
or
cmp
adc
push
mov
loopne
adc
mov
cwtl
arpl
arpl
mov
movsl
sub
addb
jecxz
pop
xchg
repz
fs
add
sbbb
xchg
cmpsl
mov
gs
lret
aad
xor
xor
stos
or
sbb
cmp
fs
cmpsb
mov
int3
jno
shll
jns
sub
cwtl
popa
inc
in
lods
insl
movsb
pop
inc
mov
push
repnz
adc
repz
push
or
lcall
stos
mov
nop
add
sti
andl
outsl
jne
or
sub
lds
stos
and
imul
and
cmp
bound
shlb
mov
insl
xor
adc
sub
pop
enter
pop
push
push
push
or
pop
mov
pop
popa
cmp
inc
add
ret
addl
cmp
xlat
pop
repnz
je
sub
mov
jns
inc
sub
andb
mov
outsb
imul
lock
ret
inc
imul
mov
or
ja
adc
leave
mov
in
push
xchg
inc
add
fists
stos
xchg
cmp
push
or
pop
sbb
jns
or
inc
push
adc
cmc
sub
ret
push
lea
icebp
add
cwtl
inc
inc
lret
test
lock
ss
mov
mull
dec
dec
adc
aam
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
shlb
push
xor
pushf
dec
pop
jecxz
jns
outsl
int3
add
pusha
sub
jo
bound
ss
gs
add
dec
fcoml
test
jge
cltd
inc
pop
mov
pop
cld
inc
inc
in
adcb
xor
daa
das
rolb
sbb
pop
add
leave
in
dec
adc
cwtl
lret
je
mov
int3
jmp
dec
and
jmp
add
xor
mov
inc
lret
and
add
pop
pop
rorb
sbbl
push
xchg
adcb
nop
sbb
push
test
pop
inc
push
fs
jl
fs
push
test
fs
push
push
lods
insb
inc
push
fs
pushf
dec
pop
nop
andl
shll
movsb
adc
and
insb
lods
xor
and
push
mov
xchg
dec
test
and
dec
xor
xchg
dec
xor
mov
xor
and
mov
xchg
aam
mov
sub
daa
lea
insb
sbb
rol
rcl
fildl
es
fcoms
fs
enter
cmp
mov
push
cltd
movnti
mov
ret
mov
inc
loopne
push
mov
inc
jno
sbb
fs
je
push
cmp
fadds
adc
inc
movsb
lods
mov
nop
inc
push
mov
sbb
aam
aam
cwtl
xchg
and
push
test
adcb
and
mov
dec
and
mov
mov
mov
addb
fs
xchg
fwait
and
jb
in
aam
int3
les
jb
mov
jbe
jb
xchg
mov
test
lds
je
or
cltd
fs
in
push
xchg
mov
mov
lds
xor
mov
add
xchg
cmpsb
push
nop
ds
push
xor
pop
enter
push
and
lea
test
movsl
or
cmp
lahf
mov
push
mov
insl
test
inc
aam
push
and
sub
inc
roll
andb
outsb
sbb
or
xor
and
jo
call
test
lds
mov
pop
mov
mov
pusha
jns
hlt
add
stos
gs
dec
leave
jns
js
lods
sbbb
icebp
es
rclb
mov
or
rcrb
in
pop
enter
pop
pusha
sbb
inc
inc
not
xorb
sbb
and
dec
sbb
loope
dec
xor
test
or
push
push
mov
sbb
and
lret
imul
push
loopne
leave
pop
sub
mov
adcb
shll
sub
sub
adc
adc
adc
mov
pop
dec
cmp
adc
and
xchg
in
mov
jo
cmpb
orl
inc
and
cmpsb
sub
enter
arpl
out
mov
setge
sub
aas
outsl
lds
push
or
adc
adc
rclb
test
xor
ret
rclb
and
sarb
sbb
outsl
int3
nop
mov
es
jge
mov
icebp
adc
push
pop
lock
sbb
lea
mov
das
xchg
sbb
xor
nop
add
enter
mov
and
adc
rclb
rclb
fmul
stc
mov
dec
xor
das
mov
enter
mov
and
jl
imul
enter
fs
xchg
sub
or
xchg
sbb
or
adc
mov
jb
pop
aas
mov
pushf
sbb
orl
mov
pop
mov
jno
or
leave
sbb
addl
and
fwait
movsb
sbb
movsb
adc
mov
mov
inc
jne
in
jg
mov
enter
adcb
mov
imul
sub
mov
repnz
imul
mov
xorb
fs
orl
mov
cmp
adcb
or
test
mov
shll
pop
in
pusha
mov
addr16
or
cmpsl
cmp
cmp
cwtl
repnz
inc
addl
push
jl
insl
push
lret
xor
xor
imul
push
mov
push
and
adc
in
hlt
cltd
inc
add
add
repz
in
jg
insl
sub
xlat
sbb
xor
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
or
lds
adc
inc
push
clc
icebp
addl
sbb
stos
movsb
in
int3
in
fadds
sub
xor
xchg
imul
adc
and
mov
lods
aas
push
sub
scas
mov
pop
lcall
xchg
mov
jle
sub
hlt
push
mov
das
jg
movsb
ja
adc
imul
mov
in
aas
outsb
and
out
and
or
or
or
pop
add
xchg
rorl
sahf
and
inc
sub
adc
and
fmul
cmpsl
adc
test
sbb
jns
pop
test
shlb
mov
adc
shrb
shll
test
xchg
or
mov
xor
xor
sbb
shr
rclb
xchg
mov
rcrb
or
test
push
fdivs
and
imul
mov
call
divl
mul
fistpl
push
mov
mov
push
mov
js
xor
mov
cmp
sub
call
sbb
lods
add
pop
dec
xchg
or
inc
sub
adc
push
into
ret
lea
pop
mov
popa
test
aam
insl
push
or
adc
aam
dec
aad
icebp
pushf
sub
test
xlat
add
in
xor
mov
xor
sbb
sub
js
icebp
sbbb
jecxz
repnz
add
mov
xorb
jge
popa
mov
fdivl
add
xorl
xchg
or
fcoml
xor
xlat
xor
movsl
mov
dec
in
pusha
xchg
insl
mov
call
push
lcall
and
lods
jmp
dec
cli
inc
adc
mov
dec
daa
rclb
pop
adc
sahf
daa
pop
dec
scas
test
cwtl
gs
inc
sahf
cmp
je
cmp
movb
add
ss
inc
add
mov
in
or
sarl
jmp
arpl
xor
xor
dec
xor
jo
cltd
in
xor
iret
xchg
es
and
xor
sub
adc
pop
pop
imul
cli
mov
sub
dec
fwait
sub
dec
jo
push
lods
stc
insl
add
loope
movb
push
sub
int
pop
pop
pop
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
jo
adc
mov
pop
outsb
and
push
fdivs
add
enter
push
ret
dec
test
mov
test
in
pusha
mov
dec
rorb
add
cmc
andb
adc
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
push
inc
xor
mov
dec
pop
mov
and
cmp
arpl
and
ficompl
movsb
add
add
xor
dec
inc
incl
mov
or
push
push
ret
nop
out
pop
push
or
cwtl
cmp
call
adc
mov
mov
mov
push
push
inc
mov
test
insb
jmp
inc
fs
push
or
xor
cmp
sbb
pop
push
cld
and
nop
out
or
fidivs
inc
inc
ds
sahf
lret
jl
cld
dec
mov
or
jge
loopne
cmpl
push
shrb
lds
and
jle
sti
movl
movb
mov
ljmp
dec
repnz
push
aas
fsubrl
pop
lock
dec
pop
jg
push
and
and
cld
cmpsb
mov
icebp
mov
add
or
and
mov
mov
pop
hlt
fisttpll
or
jb
ljmp
adc
and
popa
and
dec
out
cld
mov
mov
fisubl
and
or
mov
sub
shll
sbbl
push
arpl
in
inc
iret
loop
or
fnstcw
mov
mov
jmp
sbb
mov
push
fbld
jo
cmp
pop
and
mov
cmp
jg
les
and
sub
add
xor
adc
stc
fcompl
daa
push
xor
cmp
sarl
mov
repz
push
inc
pop
ja
jmp
repz
into
add
dec
or
push
es
add
sti
inc
add
pop
push
out
es
dec
in
adc
add
inc
orb
jnp
mov
sbb
mov
or
adc
mov
rcll
xchg
adc
or
cmp
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
cmpsl
stc
mov
push
loope
dec
xor
cmpsl
stc
mov
dec
test
and
mov
gs
cmp
add
jge
pop
in
incl
sub
jg
mov
sbb
popa
and
insb
outsl
arpl
imul
cmp
lods
jb
sub
scas
jmp
imul
jb
outsb
je
add
das
add
push
insl
adc
push
scas
lock
inc
outsl
jb
fstpt
je
jb
gs
add
or
outsl
add
jnp
lahf
or
add
add
jne
les
scas
fldl
imul
dec
push
add
mov
jl
add
add
aaa
or
xchg
dec
add
iret
icebp
pop
push
add
cmp
sub
pusha
aas
push
add
pop
dec
add
sub
push
insl
xchg
mul
loopne
je
je
and
jae
dec
fucomi
sti
sbb
dec
adc
insl
push
sub
subl
adc
jae
bound
jns
push
jne
imul
andl
xchg
aas
imul
ds
jp
outsl
or
insl
xchg
imull
dec
fs
fnstsw
cmpsl
lret
aas
and
outsl
jmp
jo
ja
ja
mov
lret
jo
jnp
stos
insl
sub
push
imul
scas
cmp
jne
add
push
data16
xor
sub
idivl
insb
jp
sub
insb
lcall
repz
addl
sbbl
arpl
or
cmpl
daa
dec
jbe
fistpll
fisubs
inc
xor
je
lds
loope
jnp
sbb
jo
arpl
mov
xchg
mov
mov
fbld
sbb
push
das
jb
mov
shll
aas
cs
pusha
xor
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
jno
in
call
aaa
xor
pop
push
jg
dec
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
mov
insl
lret
imul
stos
fs
imul
shll
orb
popa
jnp
xor
jle
pop
cmpsl
outsl
pop
sub
das
xchg
rcll
cmp
pop
add
lds
pop
addr16
cmpsb
mov
mov
cmp
lock
popa
mov
mov
push
jg
scas
popw
inc
stos
pop
jecxz
push
push
ret
or
sbb
cmp
xor
sub
dec
addr16
and
flds
add
repz
push
inc
mov
push
inc
inc
mov
das
repz
sbb
push
sbb
jns
out
sbb
mov
sbb
repz
sbb
das
shrl
int
push
pop
sahf
push
sbb
sbb
out
pop
js
jns
jp
lcall
insl
incl
dec
aaa
add
add
push
jp
ds
xor
push
mov
cmp
setns
jne
cmp
mov
mov
xchg
ja
ds
in
cmp
and
push
sbb
xlat
dec
add
sbb
jnp
negb
sub
add
ja
jbe
and
add
das
or
scas
pop
mov
daa
dec
ljmp
dec
inc
and
or
or
decb
jmp
in
aad
ret
dec
idivl
aas
rcll
xchg
mov
jo
mov
clc
fimull
fucomi
mov
daa
outsl
dec
and
rol
inc
das
fcmovnu
adcb
pop
imul
sbb
outsb
iret
jns
out
out
in
add
and
arpl
pop
pop
jp
cmp
jmp
jae
push
and
mov
dec
jne
dec
fbld
fcmovnu
dec
push
ds
neg
fdivs
mov
iret
mov
jg
outsl
cld
es
cmp
cmp
add
out
stc
sub
dec
and
jns
add
das
cmpsl
jne
das
adc
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
push
xor
daa
and
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
popf
mov
push
push
pop
out
mov
pop
pop
pop
pop
adc
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
and
and
mov
or
pusha
adc
js
or
in
out
lods
cmp
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
mov
push
xchg
call
ja
and
add
xor
adc
loope
add
mov
or
mov
or
leave
jae
add
lea
leave
or
and
out
xchg
dec
pop
mov
mov
sahf
or
imul
cmpsl
sarl
pop
jge
add
lods
mov
enter
add
cmc
jp
push
sbb
cmp
imul
push
inc
sub
test
dec
jmp
dec
inc
adc
movl
shrl
mov
push
jae
adc
bound
je
outsb
data16
push
jbe
mov
out
je
xor
push
pop
pop
divb
xchg
daa
pop
lea
stc
adc
inc
outsl
js
push
xchg
cs
jne
std
and
inc
outsl
insl
jo
jo
and
and
scas
sub
insb
les
dec
imul
or
inc
mov
fistpl
ds
cmp
dec
inc
jb
jns
daa
mov
and
gs
test
insb
and
arpl
mov
in
test
mov
inc
sbb
outsb
jle
jbe
mov
mov
jns
outsb
pop
jb
and
xor
pusha
inc
jbe
push
or
lahf
fs
insl
and
add
push
jp
pusha
xchg
lcall
inc
faddl
and
mov
mov
cmp
push
roll
mov
sub
lock
fcmovnb
pusha
adc
outsb
mov
push
cmp
or
jae
or
xchg
or
cmp
call
mov
adcl
outsb
gs
mov
mov
movb
cmp
mov
push
dec
testl
dec
fcmovb
imul
aam
enter
and
sbb
shlb
jge
insl
pop
or
jle
jb
push
imul
call
loop
or
outsl
or
ret
push
jae
inc
in
push
das
gs
addb
inc
mov
sub
test
mov
pop
push
fldt
outsl
xchg
push
jmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
mov
sub
es
lock
addr16
jle
jle
shr
cltd
sub
add
add
fidivrs
cltd
sub
pop
or
sbb
das
enter
push
jb
aaa
iret
push
mov
cmp
ds
out
push
pop
pop
jne
loopne
mov
fs
jbe
push
lock
sbb
jo
ss
gs
imul
mov
dec
int3
and
cmp
pop
enter
sub
popa
sub
mov
jl
out
sub
pop
cs
repz
inc
add
cmp
and
lahf
out
cmp
or
sub
mov
imul
orl
out
sahf
aam
int3
enter
jns
repnz
mov
lods
test
xor
repz
mov
mov
dec
jns
pause
nop
mov
mov
cmpb
cmp
js
jo
repz
repz
iret
repz
push
push
dec
inc
xor
sahf
out
cmp
or
sub
enter
jns
mov
and
cmp
out
in
les
jo
fs
xor
sahf
out
cmp
or
sub
test
sahf
out
sbbb
in
sub
lock
push
pushf
jo
sub
subb
push
and
adc
sub
jb
add
out
and
push
leave
and
sub
dec
push
jb
or
add
addl
fdivrs
add
push
jne
pop
ja
add
sbb
fcomp
add
inc
cmpsb
sbb
sbb
ja
add
push
xchg
add
and
add
jnp
and
lea
fbld
jle
out
add
addb
xchg
lea
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
call
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
and
mov
and
incl
test
adc
inc
push
lcall
gs
popa
data16
testl
cmpsb
pop
jns
push
test
xor
data16
add
lahf
js
mov
aaa
push
arpl
mov
fs
sbb
cltd
out
je
xor
ljmp
add
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
cmovns
int
adc
inc
das
push
add
imull
adc
jg
ret
popa
into
mov
mov
pushl
inc
jnp
inc
loop
mov
ds
pop
adc
incl
jg
lret
sbb
jb
jge
arpl
cmp
pop
pop
dec
scas
jp
jno
in
fstl
incl
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
out
lahf
or
mov
jns
mov
add
test
shrl
leave
hlt
mov
adc
xchg
dec
add
scas
lods
dec
lock
xor
pop
dec
enter
into
or
icebp
pop
pop
repnz
ljmp
and
es
sbb
adc
jne
cmp
xlat
lods
mov
mov
or
rorb
fildl
sbb
stos
cmc
sub
dec
fdivrs
xchg
and
lahf
setnp
pop
dec
jns
inc
out
xchg
mov
and
pop
ret
test
or
addr16
es
jae
fadds
xchg
data16
or
mov
xchg
mov
and
bound
rcll
aaa
js
test
jne
sti
jo
sbb
jmp
daa
mov
sub
mov
ret
insb
add
je
fcomi
or
sub
xchg
lret
xchg
in
mov
fisttpl
out
cs
inc
jb
add
xlat
sbb
scas
test
dec
mov
inc
pop
xchg
lock
dec
imul
in
add
jae
insl
jle
push
fimuls
cmpsl
or
and
pop
inc
lods
jecxz
ret
lock
repz
pop
jno
aas
out
fbstp
push
fisubs
aaa
push
push
ret
mov
js
sbb
xchg
sub
das
cmpsl
xchg
stos
fdivrs
add
add
jl
sbb
stos
jg
outsb
add
sub
sti
sbb
aaa
or
jns
outsb
jecxz
xor
xlat
jg,pn
jg
xor
cmpsl
xchg
ret
inc
xlat
adc
into
stos
xchg
push
mov
sarl
xchg
jne
aas
push
out
add
filds
add
cmp
pop
pop
jbe
out
dec
mov
adc
adc
popa
shrl
sti
push
hlt
mov
arpl
inc
sti
jo
sti
cmp
adc
cmp
sub
nop
out
rorl
inc
sub
jmp
arpl
dec
dec
rcr
movsb
mov
cmp
gs
dec
jo
jo
jp
xchg
ja
loope
or
pop
jecxz
jnp
jno
imul
push
in
out
xlat
pusha
inc
pop
inc
addr16
out
daa
fildll
je
and
insl
int
pop
pop
aas
arpl
add
pop
arpl
add
pop
mov
jne
xor
and
push
lret
je
faddl
out
push
pop
inc
mov
cmp
jbe
add
outsl
inc
pop
xorb
jnp
add
add
arpl
push
xchg
lret
les
inc
sub
loope
test
ss
out
mov
fbstp
popa
mov
mov
aas
mov
mov
into
mov
push
loope
je
jb
push
add
or
arpl
pop
call
movsl
rolb
or
rolb
adcl
xchg
cld
xor
fisubrs
bound
mov
inc
push
adc
ja
in
dec
aaa
pop
xchg
pop
int
mov
add
jne
lods
aaa
jecxz
outsl
adc
bound
cmp
sub
dec
aas
push
inc
ja
lahf
lock
daa
jne
cs
dec
subl
pop
outsl
dec
shl
popa
bound
pop
adc
mov
jno
jl
push
ret
js
adc
adc
idivl
rcll
mov
roll
inc
outsb
out
jb
or
ret
dec
sub
push
fdivrl
outsb
sub
add
jge
mov
out
pop
push
fiaddl
bound
jae
push
pop
mov
imul
xor
push
bound
or
or
and
arpl
pop
outsl
jmp
inc
cmp
lahf
add
divb
outsl
jge
adc
cmpsl
jb,pn
mov
pushf
ss
mov
ja
add
dec
mov
aas
mov
push
inc
scas
imul
loop
sbb
arpl
dec
insb
lcall
inc
inc
dec
jae
push
out
add
outsl
imul
cmpsb
out
add
xor
aas
dec
sbb
les
lret
out
jmp
out
pop
je
pop
dec
psrad
insb
aas
pop
in
js
sub
addr16
inc
daa
push
outsl
mov
ja
lds
xchg
div
loopne
inc
arpl
pop
pop
push
adc
mov
aas
testl
inc
inc
mov
mov
mov
inc
jl
jl
pop
adc
xchg
pop
aam
aas
imul
les
lret
call
push
bound
fimuls
mov
mov
adc
stos
pop
adc
bnd
jae
jecxz
xchg
jl
push
adc
out
xor
push
jl
sahf
icebp
scas
loopne
jnp
sbb
ja
js
jmp
es
ja
add
mov
mov
mov
fnstsw
cs
sbb
add
arpl
add
xor
jae
jno
loopne
adc
clc
ds
outsl
lret
jl
jo
lea
cmp
jnp
aaa
push
lock
dec
lock
pop
sub
fs
js
lock
mov
imul
push
popa
lea
repnz
bound
lock
adc
es
cmp
addr16
imul
mov
pop
and
mov
incl
sub
outsl
push
push
push
push
in
jle
fstpt
fisttps
lods
aaa
sbb
inc
xor
or
jae
mov
inc
jns
jae
fcom
mov
jae
inc
adc
lds
dec
adc
mov
mov
cli
add
pop
popa
jl
mov
pop
stos
mov
pop
incl
jb
bound
daa
rclb
pusha
aaa
push
mov
roll
dec
inc
add
aas
popa
popl
or
aaa
lock
jnp
outsl
das
mov
loop
addr16
js
insl
mov
fists
dec
push
adc
imul
sub
push
sbb
gs
add
sub
mov
pmuludq
insl
filds
mov
pop
test
fsts
inc
push
rorl
mov
pop
push
mov
out
in
pop
push
push
mov
pop
ds
push
jp
out
dec
mov
lods
push
cmp
out
adc
pop
ja
out
push
pop
push
push
cmpl
repz
pop
cvtps2pd
pop
fnstsw
pop
mov
add
int3
aas
pop
cmp
or
insl
out
pop
push
mov
jns
fwait
movsb
push
mov
mov
leave
jne
idivl
ficoml
out
sahf
out
push
cmp
dec
cmp
jnp
sub
dec
dec
push
outsb
jnp
or
iret
pop
aaa
xor
and
scas
ljmp
jmp
or
outsl
jo
jns
inc
xchg
mov
sbb
sub
movsb
das
cmpsb
push
push
add
frstor
lret
loop
movsl
rolb
adc
aas
pop
popa
push
enter
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
cmpsl
out
jo
or
and
dec
bound
fnsave
pop
sub
and
pop
shrb
je
je
iret
jnp
cmp
pop
push
pop
mov
mov
jne
cmp
repz
mov
cmpsl
stc
xor
dec
loopne
adc
adc
dec
fs
ja
push
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
insb
or
insb
int
js,pn
sub
cmpsl
cmp
jnp
xlat
pop
add
xor
in
repz
sub
mov
outsb
mov
or
or
or
xchg
sub
fsubp
cmp
push
es
aam
pop
iret
pop
scas
xor
ret
fcomps
push
and
jecxz
mov
mov
dec
and
and
fs
fs
bound
jle
sub
out
inc
or
pop
stos
aam
scas
mov
or
aas
sub
sub
dec
mov
inc
syscall
inc
cmpsl
push
scas
jecxz
or
ret
pop
or
inc
imul
movsb
mov
aam
or
inc
daa
daa
dec
fistpll
sti
fildll
stos
push
inc
ja
lods
add
scas
imul
lea
pusha
stos
filds
mov
xchg
mov
xor
xor
fimuls
scas
mov
push
sub
imull
mov
data16
add
outsl
iret
imul
jecxz
cmp
or
and
stos
jno
mov
xor
test
add
and
push
sbb
pop
stos
mov
iret
imul
mov
jae
jnp
mov
arpl
dec
fildl
sbb
out
aaa
pop
bound
jo
xchg
arpl
inc
lahf
inc
cmp
fisttpll
loope
jb
fs
push
jb
mov
and
inc
test
xor
scas
into
sub
jg
sahf
inc
into
inc
add
push
mov
ret
lods
loopne
ror
aaa
push
es
stos
inc
ja
orl
imul
mov
jae
inc
test
repz
and
jb
pop
dec
jae
test
dec
jbe
mov
nopl
pop
mov
and
sti
rolb
incl
das
ret
add
lock
push
cmp
push
roll
inc
push
inc
stos
mov
push
imul
data16
jne
cmpsl
pop
inc
sbb
mov
sub
or
pop
daa
pop
out
stos
int
addr16
mov
adc
jo
fwait
pop
add
or
cmp
jmp
arpl
jmp
jecxz
dec
int3
mov
cmp
dec
inc
jmp
pop
enter
push
or
mov
pop
or
pop
test
sub
cmc
push
or
xchg
cs
roll
cmpsb
addl
lods
inc
xchg
inc
fwait
movsl
dec
arpl
aaa
fcmovnbe
scas
xor
out
sbb
imul
outsb
jae
sbb
insb
push
or
sub
mov
push
or
mov
in
lcall
mov
cmpsb
aas
add
inc
jae
adc
cmp
mov
ret
and
jbe
mov
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
sti
fistl
arpl
push
loope
insl
scas
lcall
xchg
xlat
pop
mov
ds
dec
in
pop
pop
inc
outsb
loope
sub
fs
fiadds
push
xchg
cmpsl
out
or
push
mov
jbe
pop
jo
arpl
pop
add
mov
pop
cmp
mov
mov
pop
xchg
jnp
lods
ljmp
push
cwtl
fcompl
cmp
inc
iret
ss
xor
add
out
addr16
xor
je
sbb
sub
lahf
aas
xor
mov
sub
fistpll
cmp
pop
rcl
daa
dec
pop
lea
xor
cmpsl
mov
jecxz
sub
or
mov
xlat
sbb
imul
or
sbb
out
sbb
sub
add
mov
sbb
out
inc
cmc
sbb
fwait
cs
shrb
push
test
js
fs
cld
mov
xor
arpl
imul
sbb
cmpsl
fwait
lock
insb
add
push
pop
int3
inc
sbb
subl
mov
sub
cmpb
aaa
xor
das
arpl
xlat
mov
outsl
push
inc
inc
fwait
cwtl
test
add
cmp
stos
pop
xlat
ss
add
inc
cmp
xor
or
test
fs
mov
push
or
cmpsb
cmpsb
sub
push
or
rcrl
outsl
stos
adc
push
setg
inc
sub
lods
push
sahf
xor
sbbb
das
adc
insl
lret
cmp
pop
pop
popa
xchg
pop
sbb
or
rolb
adc
push
push
xadd
sti
cmpsl
mov
ss
add
dec
dec
xor
mov
push
cmpleps
adc
push
mov
adc
cmp
xchg
popa
aad
aas
ja
inc
xchg
adc
les
loope
arpl
out
pop
pop
nop
mov
add
mov
addr16
cmp
xchg
ucomiss
add
iret
sub
sbb
popa
adc
wbinvd
mov
femms
push
inc
das
jb
fiaddl
push
push
mov
lock
pop
minps
aas
push
sbbl
or
dec
mov
mov
repz
inc
in
sbb
mov
outsb
lods
scas
iret
outsl
push
loopne
cmp
nop
nop
outsb
dec
outsl
shl
mov
outsl
outsl
iret
jp
or
rol
pop
dec
pop
dec
in
mov
mov
push
xor
xor
lea
scas
xchg
push
push
and
and
mov
out
inc
push
stos
shlb
cvttps2pi
xor
lcall
add
push
out
inc
pop
scas
xor
pushf
or
or
xor
int
pop
adc
jl
out
adc
loop
adc
jo
push
mov
sbb
or
inc
sbb
incl
ret
and
out
push
and
inc
shlb
ja
push
push
bound
out
adc
add
pop
xor
pop
inc
das
cs
imul
mov
aas
lret
lods
pusha
mov
sub
sysret
orb
jo
push
movsl
loopne
inc
out
jae
mov
sub
mov
adc
sbb
xchg
lods
loope
pushf
outsl
add
pop
icebp
xor
das
add
push
bound
dec
jg
push
movsl
mov
arpl
adc
arpl
cmp
loopne
adc
jecxz,pn
sub
and
out
pop
pop
xorb
add
jno
das
dec
jo
jnp
inc
cmp
or
das
jno
sbb
mov
mov
call
lock
sbb
inc
das
and
and
xor
stos
bound
or
addb
push
mov
mov
xlat
and
sub
das
push
mov
pop
int
lods
and
mov
inc
bound
push
and
ficoml
repz
pop
movsl
icebp
aas
mov
jmp
add
push
xor
das
test
jge
pop
fwait
push
data16
cmp
lods
aas
push
and
jne
xor
fs
xor
jmp
outsb
sbb
inc
lahf
mov
inc
scas
add
andb
push
insl
pop
lods
adc
ret
mov
cvtdq2ps
mov
sti
push
push
jno
push
insl
arpl
bound
out
push
sub
mov
mov
in
out
movsl
jo
outsl
sbb
push
aad
lahf
push
addl
jecxz
stos
in
cltd
mov
and
pushf
dec
sub
cld
loope
dec
scas
xchg
stos
pop
add
xor
cmpsb
xchg
push
leave
adc
dec
sbb
fisubs
and
cltd
dec
pop
rcr
adcb
in
mov
pop
and
stos
sub
lock
hlt
fnstcw
cld
fmul
push
xor
and
stos
in
cltd
pusha
adc
leave
rcl
sbb
sub
enter
scas
xchg
stos
and
aam
jb
dec
js
scas
xchg
test
sub
xchg
mov
xchg
push
leave
push
cmp
shrl
mov
mov
sbb
xchg
shr
xlat
orl
cmpsb
and
pop
insb
inc
add
or
jo
loop
pop
rorl
jbe,pn
cmpsb
ret
mov
inc
push
and
add
push
outsb
imul
xchg
subl
add
ss
das
inc
ret
test
addb
int
ficompl
xor
and
fwait
test
add
movsl
nop
cwtl
imul
add
aas
pop
inc
bound
aas
add
mov
push
testl
inc
fwait
push
sub
xor
sub
xchg
or
aas
push
je
fisubrl
xchg
and
sbb
notb
sbb
das
outsl
adc
xchg
xor
add
int3
fs
addr16
push
mov
pusha
xchg
fmuls
inc
addl
scas
cmpsl
lahf
loopne
jmp
sub
adc
inc
add
dec
xor
add
adc
jb
push
mov
inc
loop
sti
mov
test
subb
bound
filds
fisubs
or
movl
das
push
sbbb
ljmp
push
imul
aas
pop
gs
add
inc
add
aas
lods
cmc
add
mov
jmp
sub
lea
out
test
pop
xorb
scas
pop
cltd
mov
imul
fs
mov
sub
inc
les
call
clc
icebp
sub
jbe
jecxz
cmpsb
pop
inc
out
jbe
pop
xor
xchg
push
add
pop
xchg
xlat
pop
add
add
xchg
idivb
and
inc
inc
mov
sbb
sub
xor
jnp
pop
or
pop
fldt
and
cs
xchg
fnsave
jo
jb
inc
es
dec
orb
inc
mov
fstpt
adc
or
addr16
bound
es
or
push
add
insl
je
fnstcw
shrb
fs
sub
dec
mov
sbb
mov
xor
sbbl
es
jae
push
or
dec
cmpsl
dec
mov
jo
sarl
loopne
inc
divl
imul
dec
mov
imul
push
jbe
xor
xor
dec
lock
daa
outsb
xor
jae
cmp
mov
jg
add
adc
sbb
imul
data16
jbe
dec
js
fs
pop
daa
sbb
imul
or
test
jmp
push
ret
ret
sub
adc
and
push
cmpsl
inc
or
add
add
loopne
mov
divl
pop
pop
adc
sbb
and
lods
repz
andl
repz
cli
dec
push
cltd
or
xchg
ss
add
add
stos
or
pop
or
adc
insb
out
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
add
shrb
ret
sub
insb
xor
shrb
xchg
pop
adc
mov
adc
pop
add
data16
push
xchg
rclb
lret
verw
int
mov
shlb
stc
das
mov
rcl
add
outsb
pop
inc
adc
dec
push
cmp
stc
cmp
fisubs
push
js
test
pusha
xlat
insb
lahf
cmpsl
mov
test
push
mov
jl
mov
pop
gs
ficoml
iret
cmpsl
pop
dec
lods
stc
pop
inc
xchg
push
scas
and
rorb
and
clc
shlb
es
sbb
inc
mov
sbb
add
or
imul
scas
negl
add
adc
inc
pusha
xor
cmpsl
mov
jle
sub
out
lods
mov
out
xchg
cmp
xor
xor
pop
je
cs
sarb
aam
xor
mov
inc
cwtl
push
das
or
cltd
ss
cmp
adc
mov
xor
push
push
popa
pusha
inc
aas
pop
mov
loopne
xlat
jns
test
mov
ficoms
cwtl
or
add
pop
inc
dec
daa
mov
xchg
xchg
je
mov
ret
or
aam
cmp
push
adc
rcrb
arpl
jg
mov
sub
dec
rol
hlt
cmpsb
cmp
sbb
or
ja
dec
es
xor
sub
out
ret
fst
push
sahf
push
cs
cmp
push
xor
or
out
es
add
jnp
lods
xchg
push
insl
xchg
out
mov
scas
xor
inc
xchg
cmp
jnp
xor
jae
fs
clc
lock
xchg
push
je
xor
pop
loop
push
cmp
pop
pop
dec
shlb
outsl
mov
testl
inc
jle
jl
add
arpl
imul
fwait
xchg
jbe
call
or
inc
push
adc
mov
jbe
push
dec
mov
bound
lcall
incb
aam
mov
jp
inc
cs
lret
mov
cmp
push
sysret
out
pusha
cmpsb
xchg
ja
retw
jnp
jmp
pop
mov
xor
fidivrs
sub
lret
arpl
sub
sbb
out
cs
mov
lds
iret
cmp
addl
jge
mov
cs
sbb
packssdw
inc
pop
pop
mov
mov
es
ss
outsb
pop
push
push
xor
loope
clc
daa
dec
jb
das
inc
pop
dec
es
mov
mov
fbld
data16
idivl
or
sysexit
mov
xchg
aas
dec
cs
sahf
push
outsl
jge
xchg
push
insl
sub
fidivrs
mov
push
scas
push
insl
mov
inc
lds
mov
mov
push
jp
out
loope
outsl
ds
fiaddl
mov
jg
dec
das
xor
sbb
fidivrs
pop
outsl
pop
outsl
in
fstpl
dec
xor
xor
outsl
cs
cmp
push
dec
mov
jg
add
dec
jnp
xchg
mov
jecxz
jcxz
dec
dec
pop
jae
jne
addb
mov
scas
clc
push
push
imul
mov
adc
dec
iret
sbb
jle
inc
cli
adc
and
adcb
jnp
add
fcomi
test
inc
aas
pop
sub
cmp
xchg
mov
adc
nop
lods
pop
cmpsl
inc
out
and
lods
popa
scas
lods
pop
xor
or
ret
dec
jl
scas
sub
and
mov
xchg
jg
dec
insb
sbbl
aam
mov
repz
sbb
testl
pop
add
lea
popa
add
scas
imul
cmp
sti
mov
inc
mov
mov
push
outsl
dec
fs
sub
ja
pop
or
pop
push
fs
pusha
adc
js
cmp
out
outsb
mov
push
mov
mov
sbb
addr16
pop
sbb
test
cmp
mov
jmp
mov
dec
inc
dec
insb
outsl
popa
fs
outsl
push
imul
and
pop
xor
xor
das
sub
adc
cmpsl
addr16
or
pop
iret
pop
push
and
pop
push
aaa
push
sti
stc
scas
mov
mov
add
loopne
jge
mov
fs
addr16
fdivrs
xor
scas
arpl
ljmp
and
ja
pop
mov
mov
mov
xor
pop
adc
mov
lock
xchg
inc
xchg
adc
jns
push
inc
je
outsl
cs
fldt
ja
xor
imull
jne
lret
ss
inc
mov
ja
xor
xor
push
sub
or
inc
inc
add
pop
mov
pop
repz
mov
jae
cs
xor
stos
lods
push
xor
add
lahf
popf
inc
mov
mov
das
push
and
shrl
add
pop
js
lock
lahf
jmp
xlat
jmp
fildll
fisttpll
push
mov
orl
adc
sbb
sbbl
dec
movsl
inc
loop
iret
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
jnp
cmp
popa
fldt
shlb
repz
mov
and
cmp
xchg
imul
mov
sub
sbb
jnp
dec
aad
rolb
aas
scas
sbbl
dec
inc
daa
jns
or
pusha
mov
or
filds
sub
arpl
ret
outsb
dec
arpl
jae
daa
jbe
sbb
dec
int
lods
inc
outsl
aas
push
insl
push
addr16
das
repz
jne
aaa
insb
aam
or
call
inc
inc
enter
mov
add
sub
sub
push
mov
adc
jle
pop
push
sarb
mov
add
das
mov
ja
mov
inc
aas
lock
xchg
pop
inc
int
addr16
sub
xchg
data16
sbb
push
call
jge
cmp
or
dec
jmp
fimull
mov
das
jl
dec
movsb
pop
es
mov
mov
pop
insb
bound
pop
shlb
mov
mov
in
decl
and
mov
add
adc
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
mov
subb
mov
dec
fsubs
mov
pop
insb
sbb
mov
pop
dec
xchg
mov
inc
stos
jecxz
dec
push
pop
add
pop
jb
mov
push
arpl
dec
pop
and
cmpsl
loopnew
aaa
xchg
mov
mov
in
mull
pop
xchg
mov
mov
inc
inc
test
add
jbe
and
sub
test
xchg
leave
rcl
mov
dec
push
dec
in
jbe
cmp
pop
sbb
xor
xchg
out
sub
fwait
in
jae
scas
pop
pop
inc
fdivl
pop
int3
cmp
iret
leave
xor
cmp
pushf
fwait
pop
mov
jl
or
leave
dec
insb
inc
outsl
adc
xor
lahf
daa
push
push
lea
out
inc
pop
adc
aaa
bound
dec
cmp
leave
or
pop
fwait
loop
sarb
pop
and
push
cmpsb
inc
jnp
cmp
ss
je
mov
sub
adc
sbb
mov
cmp
popf
addb
inc
mov
pop
out
cmpsb
jp
mov
inc
ret
cmp
jo
addr16
adcb
dec
rorb
xor
xlat
push
mov
and
incl
je
bound
imul
aaa
sbb
inc
dec
mov
or
xlat
mov
shlb
push
add
js
lret
mov
push
filds
aas
jae
inc
cmp
dec
xlat
addb
jecxz
mov
pop
mov
notl
adc
fwait
pop
dec
push
test
mov
scas
cmc
fidivs
sub
shr
bswap
sub
push
xor
dec
addr16
lcall
push
mov
xchg
ret
xchg
jmp
call
push
cmp
fst
mov
add
insb
inc
dec
and
or
lahf
test
pop
jb
pop
outsb
arpl
cmpsb
test
repz
pop
jne
sarl
cmp
repz
bound
dec
pop
fbstp
push
and
fbstp
xor
dec
xchg
ljmp
bound
dec
imul
cmpsb
pop
push
insl
cmpsl
movsb
add
cs
jle
cltd
lahf
out
into
pop
adc
mov
pop
push
xchg
push
fwait
push
bound
outsb
popf
jge
dec
daa
xor
mov
mov
mov
push
call
cltd
bnd
cmp
push
mov
dec
sbb
out
xchg
pop
adc
data16
sub
dec
mov
push
sub
jl
repz
push
mov
inc
adc
cmp
add
fadds
test
stos
push
inc
xor
sbbl
andl
push
pop
fidivl
in
dec
hlt
scas
in
cmp
push
test
sbb
in
dec
pop
xchg
jnp
out
ljmp
es
push
inc
ss
in
or
cmp
mov
lahf
neg
repz
aad
cs
mov
lahf
cmpsl
stc
xor
adc
out
inc
adc
fs
pop
stc
xchg
inc
test
mov
push
jecxz
out
mov
inc
dec
and
fisttpl
push
ss
stc
mov
pop
push
xchg
push
mov
fisubs
pop
and
cmp
mov
dec
push
bound
ja
cmpsl
mov
xlat
push
push
cmp
pop
fcomip
fiadds
testb
lahf
xchg
std
jo
jnp
aaa
cltd
pop
push
ffreep
pop
idivl
fwait
xlat
sbb
jns
rcr
cs
mov
xchg
gs
or
inc
jbe
adcl
hlt
outsb
xchg
sahf
imulb
inc
dec
arpl
bound
loopne
inc
loopne
addl
outsl
int3
inc
add
imul
mov
int
dec
push
imul
addb
inc
dec
push
push
pop
dec
out
add
repz
dec
iret
repz
push
dec
es
andb
or
cs
sbbl
push
xchg
jns
mov
repz
shll
push
jo
mov
or
iret
loopne
es
das
call
xor
aad
pop
dec
sbb
scas
sub
or
adc
xor
std
stc
add
adc
adc
push
mov
xor
adc
pop
jnp
add
mov
test
jg
loopne
mov
je
mov
nop
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
outsb
pop
in
or
jo
mov
pop
mov
and
nop
dec
imul
sbb
dec
std
stos
push
cmp
xor
cmp
dec
push
and
iret
lock
adc
ja
outsb
outsb
in
loop
jp
xor
push
js
sub
imul
cmp
xor
pop
xchg
jp
sbb
add
outsl
fstpl
adc
mov
inc
sub
lods
dec
jo
xlat
or
pusha
movsl
test
inc
outsl
sbb
add
inc
jb
popa
je
and
subl
push
outsb
scas
pop
testb
out
pop
lods
mov
outsb
push
ficoml
cs
jmp
es
pop
int
cmpsl
push
lea
and
rcl
shrb
loopne
ja
inc
add
imul
sub
jmp
not
sub
movhps
lahf
cmp
out
dec
jae
push
aaa
push
fisubrs
adc
or
inc
add
pop
outsl
xlat
jno
jne
jo
push
jo
lods
subl
movsl
sbb
inc
add
mov
mov
lret
in
cmp
dec
xchg
push
fcomps
ficompl
cmpsl
mov
popa
ficoms
push
push
outsb
jb
adc
lea
pop
xor
mov
loopne
movsb
cmova
add
xchg
push
xor
mov
jae
or
push
add
add
add
dec
sbb
push
cmp
jae
xor
xchg
int
daa
add
or
es
cmp
xor
daa
and
sub
imul
dec
daa
dec
popa
aam
decl
imul
ret
bound
outsb
push
jnp
xchg
into
shrb
adc
pop
movl
add
inc
aaa
insl
mov
cltd
addr16
or
jcxz
imul
daa
mov
xor
pop
mov
dec
inc
sbb
push
jecxz
aas
add
test
ljmp
adc
inc
aaa
pop
adc
pusha
mov
fsubs
inc
js
jne
mov
arpl
outsl
scas
pop
rclb
inc
mov
aad
pop
mov
mov
pop
addr16
arpl
mov
xor
mov
in
jae
fs
addl
es
inc
bound
push
xchg
mov
sti
adc
ja
jo
pop
pop
mov
dec
int3
add
out
add
and
aas
lret
dec
mov
arpl
or
sub
pop
pop
dec
mov
roll
in
loop
popa
cs
popw
outsl
sbb
insl
aaa
imul
popf
int
add
lods
pop
insb
insl
das
testl
jg
popa
add
cmp
popa
or
pop
sbb
rcl
add
lds
push
cs
fiadds
push
mov
jle
add
ja
xchg
add
into
inc
rclb
push
orb
add
xlat
insb
testl
aas
push
xor
xchg
das
inc
pop
mov
bswap
push
adc
xchg
adc
inc
dec
fcmovbe
push
in
pop
pop
mov
add
mov
mov
xlat
sub
pop
pop
out
pop
daa
xorl
aas
add
sbb
mulps
jge
pop
cmpsb
inc
inc
push
inc
lret
imul
daa
sbb
cmp
dec
lds
adcb
cmp
add
jae
sbb
inc
dec
dec
inc
pop
add
add
bound
push
or
xlat
cltd
sbb
push
pop
or
and
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
testl
pop
pop
inc
pop
push
test
aam
jns
je
push
dec
adc
jecxz
ret
pop
xor
in
das
adc
and
adc
mov
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
gs
pop
faddp
inc
in
cmp
mov
mov
je
xor
imul
dec
orb
sbb
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
shll
jb
add
mov
sub
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
mov
push
aam
jns
jb
add
mov
ds
push
ret
pusha
or
xor
adc
out
inc
adc
fldt
or
aaa
inc
insb
jo
js
jp
pop
daa
adc
cs
sgdtw
mov
ret
jb
out
adcl
imul
add
push
pop
dec
sahf
std
fwait
incl
dec
inc
dec
push
xchg
add
loopne
cmp
add
sbb
fiadds
jg
ret
movl
add
pop
xor
mov
adcl
mov
inc
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
pop
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
filds
cwtl
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
push
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
stos
lods
aas
loope
ret
js
pop
out
inc
daa
mov
xor
das
ds
das
sbb
cmp
daa
daa
daa
idivb
sub
push
pop
inc
inc
inc
push
inc
pop
and
jg
pop
pop
or
aas
js
insb
cwtl
jbe
jbe
sbb
push
and
ss
test
ds
adc
orl
gs
nop
loopne
dec
iret
ds
push
add
pusha
popw
push
sbb
or
mov
ds
sti
es
add
push
sbb
lahf
in
adc
and
data16
push
mov
cwtl
sub
inc
mov
sarb
out
insb
mov
insb
mov
imul
and
insb
mov
shll
or
and
dec
add
rcll
jmp
jb
aas
mov
pushf
das
fcom
inc
cmpsl
push
mov
mov
add
pusha
popa
daa
mov
insb
outsl
daa
or
cmp
jbe
lahf
dec
pop
mov
sbb
push
xchg
out
or
cmpsl
dec
popf
push
mov
mov
xor
vmptrld
push
jl
sbb
push
dec
dec
jb
test
ja
out
push
imul
mov
ret
pop
xchg
and
and
arpl
fadds
dec
push
es
xor
jns
in
xchg
and
push
xchg
movsb
outsl
je
mov
popa
stos
adc
pop
loopne
cs
mov
daa
sub
sub
sub
push
add
icebp
xor
jo
loop
dec
inc
cmpl
sahf
and
push
push
ret
outsb
fwait
add
insl
outsl
fs
gs
in
imull
je
mov
adc
sub
imul
and
xor
fwait
pop
bound
xchg
fiadds
les
pop
lods
add
cmp
and
icebp
inc
je
bound
aaa
inc
cld
add
inc
insb
pop
jbe
ret
aas
sbb
pop
inc
popa
imul
inc
sahf
aaa
arpl
mov
outsl
jo
insb
in
cmp
dec
sub
data16
sub
mov
cmp
inc
or
inc
xadd
sbb
inc
cmovo
fdivr
lcall
aas
nop
jo
bswap
fldt
pop
pavgb
mov
mov
pop
mov
andps
inc
dec
or
ss
cmp
pop
dec
bound
sub
out
add
test
fistpll
mov
shlb
dec
xor
in
mov
inc
push
push
push
insb
das
sarl
outsl
pop
iret
ficompl
jbe
cmpsl
ja
lahf
add
push
daa
enter
inc
fsub
inc
jns
mov
daa
outsl
inc
xchg
mov
mov
leave
daa
xchg
jge
jbe
push
je
push
jo
mov
in
push
imul
iret
and
dec
fsubl
fildll
lea
add
push
sti
mov
leave
mov
outsl
jle
int3
xchg
xchg
mov
cmpxchg
ret
or
lret
lret
mov
adc
pop
jnp
scas
push
push
pop
addr16
mov
ja
ss
stc
lahf
mov
sub
cmpsb
pop
and
fadd
jle
inc
lahf
call
inc
inc
add
push
fmuls
nop
imul
lret
xchg
dec
enter
outsl
xchg
js
sbbl
cmp
jb
movsb
mov
int3
fsubs
rorb
int3
out
insl
xor
aas
out
addr16
pushf
pusha
daa
add
push
int3
aad
in
mov
mov
inc
add
push
xor
lods
ds
pushf
ja
iret
test
hlt
pop
jbe
dec
inc
int
push
in
aaa
xor
mov
int
inc
push
stos
fdiv
mov
aaa
dec
aas
nop
addr16
ja
aam
add
repnz
aas
roll
dec
packssdw
or
movsb
inc
hlt
outsl
or
scas
add
ja
idivb
into
dec
imul
jnp
daa
lock
pop
imul
enter
xchg
push
lock
pop
das
sbb
idivl
int3
data16
in
call
test
and
xor
cmp
push
dec
sahf
or
js
mov
mov
inc
addr16
mov
jnp
repnz
rcrb
xchg
mov
adc
mov
aam
imul
or
adc
aas
out
pop
adc
cld
and
daa
out
dec
enter
push
xchg
xchg
pusha
cld
fcmovb
pop
and
mov
mov
fsubrl
jae
addr16
aam
mov
test
inc
cmc
or
pop
sbb
sub
pop
in
xor
nop
dec
aas
ja
nop
out
lahf
rcrb
inc
cs
rcrb
int
add
lods
mov
int3
dec
lahf
lods
jns
iret
test
or
pop
and
mov
shlb
cltd
nop
iret
test
rcrb
cs
pusha
ja
and
mov
mov
mov
cmp
mov
add
push
dec
jl
loopne
rcrl
mov
cmp
push
pusha
shl
fcoml
mov
sub
jg
or
leave
out
nop
nop
mov
cltd
pusha
outsl
push
cmpsl
nop
fucom
inc
sahf
cmp
hlt
or
scas
inc
cs
mov
enter
aam
push
pop
cmpsb
pop
fiaddl
cltd
nop
fisubs
iret
test
cmpsl
mov
cmp
mov
loopne
and
mov
add
mov
test
xor
xor
fistps
inc
loopne
xor
mov
jg
and
mov
lods
call
push
cmpsl
mov
pop
repnz
pop
cmpsb
mov
test
dec
fwait
nop
iret
js
inc
push
push
cmpsb
xor
mov
xor
js
scas
pop
jnp
dec
mov
sahf
movsb
jb
fistl
test
test
enter
enter
enter
stc
pop
clc
and
xor
inc
xlat
push
enter
ja
pop
sar
lahf
and
je
xchg
enter
dec
lahf
je
pop
repnz
push
aam
and
enter
mov
adc
and
cmp
lods
or
cs
lods
jg
test
js
ss
test
cs
nop
push
cs
loopne
loopne
int
mov
fnstenv
jmp
fldenv
cmpsl
in
rcll
cmpsb
fs
fldenv
cmpsl
in
nop
or
mov
pop
mov
enter
dec
add
test
mov
fwait
nop
ficompl
push
sub
out
imul
movsb
inc
jg
loopne
ds
repnz
insb
sbb
mov
pop
sbb
sub
pop
shlb
or
pusha
xchg
push
cmpsl
mov
aaa
and
push
sub
aas
mov
pusha
push
pop
cmpsl
jg
bnd
iret
nop
pop
daa
addr16
scas
jbe
dec
add
out
test
enter
shlb
in
out
clc
or
jo
bound
ja
out
pop
bound
jmp
rcr
add
dec
inc
loopne
mov
jbe
dec
pushf
fsubl
lods
rcr
mov
add
mov
lock
or
inc
fstl
mov
fs
mov
mov
jg
int3
pop
lods
pop
jnp
daa
movsb
lahf
int3
cmp
pop
adc
inc
lock
hlt
or
push
and
add
lock
in
adc
fimuls
or
inc
ja
inc
or
daa
sar
ficomps
lods
fiadds
dec
pop
call
test
insb
cmpsl
jo
fdivrl
lahf
jo
fdivl
and
cmp
and
les
xchg
cwtl
inc
imul
loopne
or
ja
rolb
aaa
lcall
push
inc
lods
lods
add
call
nop
out
shl
loopne
xorb
inc
out
dec
enter
loopne
push
cwtl
push
call
inc
pusha
jg
enter
nop
enter
subb
adc
mov
push
cmp
sub
mov
lods
jg
in
insb
daa
addr16
and
lahf
in
inc
ja
dec
repz
mov
clc
loopne
outsl
push
clc
pop
insb
inc
jmp
movsl
jbe
inc
and
lahf
dec
jns
imul
in
sahf
or
fs
nop
or
mov
or
rcl
enter
mov
add
inc
testb
and
lahf
mov
ja
in
sbbl
lcall
pusha
mov
out
rorb
sahf
or
mov
rcrl
adc
inc
cmc
mov
inc
in
push
cmp
fidivl
aas
mov
test
in
out
iret
mov
out
cs
mov
rorb
lcall
and
movsb
pop
pop
adc
das
fmuls
nop
out
push
fs
sub
outsl
adc
aad
loopne
mov
addr16
add
cmp
in
jmp
lock
insl
add
daa
fs
jmp
adc
insl
scas
pop
cmp
addr16
insb
daa
out
scas
aas
add
sbbb
bound
enter
in
push
pop
add
int
pop
out
test
and
sbb
push
push
nop
popf
pusha
jp
push
enter
xchg
add
cmp
incl
mov
pop
lods
ja
mov
xchg
in
test
xlat
or
data16
out
dec
dec
call
fdiv
push
pusha
daa
aas
addr16
mov
addr16
pop
in
add
shr
fnstcw
sbb
xchg
jmp
dec
inc
inc
sub
xchg
sub
mov
add
add
adc
out
fidivs
dec
ljmp
icebp
cmp
neg
dec
clc
adc
repz
xor
lock
call
dec
int3
mov
push
js
or
jns
push
out
sahf
push
inc
out
ds
push
js
fucom
jns
or
repz
pusha
test
push
aad
sub
fisubs
mov
js
js
adc
xchg
dec
inc
cld
push
fbld
ss
fistpl
and
nop
add
jmp
add
popa
fdivs
mov
mov
inc
mov
cmp
or
fdivr
inc
mov
add
jmp
adc
jg
add
in
ja
push
xor
add
dec
inc
dec
outsl
shrb
in
sti
inc
sbb
in
jl
inc
shr
loopne
mov
cmovle
in
outsl
add
xchg
or
filds
adc
and
inc
in
dec
mov
das
push
pop
in
fildll
leave
xchg
or
fistpll
mov
cmp
inc
test
cmp
mov
cmp
xchg
pop
scas
or
add
outsl
leave
push
lock
out
int3
xchg
xor
fstp
xor
and
add
call
push
mov
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
sbb
js
dec
sahf
out
aaa
mov
cwtl
add
dec
sahf
out
mov
repz
adc
test
sub
aaa
notl
sub
lahf
mov
mov
or
out
push
xor
ja
add
sub
loopne
mov
repnz
cld
lock
ficomps
icebp
and
add
pop
leave
and
fisubs
add
xlat
mov
fdivrp
and
test
sbb
add
or
out
xor
sbb
roll
xlat
scas
sbb
and
scas
in
xchg
push
add
outsl
xchg
idiv
xchg
or
fisubs
addb
mov
aaa
jmp
call
loopne
pop
jne
out
push
or
imulb
mov
test
in
jg
push
jo
js
dec
dec
pop
loopne
inc
repz
adcl
pop
leave
xor
loopne
add
js
xchg
push
es
cmp
filds
hlt
jbe
fimull
adc
outsl
push
push
outsl
mov
cmp
jg
test
push
pop
pusha
xchg
daa
xchg
mov
push
inc
cmc
scas
ljmp
cwtl
cmc
scas
data16
jbe
testb
xor
push
movsb
or
jmp
cwtl
loope
or
sub
push
sbb
ss
or
xor
scas
add
sbb
stos
outsb
xlat
or
dec
shl
or
testl
in
cmc
pop
add
rorb
cmc
mov
add
and
pop
leave
fwait
push
mov
mov
lock
divb
mov
dec
sub
add
lock
adc
addr16
add
dec
aaa
sub
outsl
addr16
sub
add
cmpsl
adc
in
testl
jecxz
xchg
sbb
pop
les
daa
hlt
shrb
clc
ja
loop
insb
cmp
xor
jg
addr16
or
mov
cs
je
add
sub
mov
clc
push
in
pop
leave
mov
push
mov
das
outsl
add
aaa
pop
in
mov
clc
cmp
pop
dec
pop
cli
aaa
enter
js
pop
stc
aaa
add
and
cs
movsb
push
in
mov
popa
imul
iret
fsubl
andb
add
rol
loopne
insb
cli
scas
in
data16
or
popa
inc
call
int
mov
push
movsb
adc
clc
sti
fsubrl
repz
insb
sbb
outsl
mov
mov
lock
aas
add
decb
cli
cmpsl
bound
aaa
or
or
ss
inc
xchg
sti
push
sti
outsl
add
aaa
imul
movsb
mov
fwait
mov
rolb
add
add
scas
in
js
add
cld
shll
cld
pop
and
mov
add
jl
out
add
sbb
sub
add
adc
inc
or
out
pop
sar
out
les
or
add
ss
mov
addr16
push
mov
aas
addr16
daa
mov
mov
movsb
hlt
fs
in
clc
es
addr16
push
add
mov
dec
divl
or
xor
test
incb
push
incb
imul
movsb
out
pop
add
or
aaa
dec
mov
nop
out
sahf
rcl
lock
mov
filds
inc
lcall
fdivl
test
clc
out
push
mov
das
clc
ja
push
call
inc
decl
shrl
mov
add
dec
adc
shrl
jae
xchg
imul
scas
fdivrl
sarl
cmp
lcall
dec
sarl
stos
xlat
cli
adc
cmp
fs
pop
mov
iret
repz
shl
mov
jbe
or
pop
pop
mov
sahf
out
mov
ds
idivl
jns
inc
nop
dec
push
addb
jns,pt
out
push
dec
jnp
int
repz
repz
aas
mov
fisubs
xchg
mov
sbb
repz
ljmp
out
mov
sahf
out
clc
sbb
cmp
repz
out
ds
shl
xor
jne
iret
repz
int3
sub
fucom
jns
fwait
data16
dec
pushf
push
repz
out
subl
sahf
pop
mov
imul
mov
jns
jg
call
lahf
cmpsl
stc
cmp
adc
dec
fwait
or
cmpsb
movsb
push
inc
insl
test
movsl
ds
repz
mov
sahf
out
inc
insl
nop
int3
out
cmp
repz
test
jl
cmpsl
jb
rorl
xchg
jns
out
stos
das
pop
cwtl
loopne
repz
sbb
lods
out
xor
stc
lods
pushf
in
scas
dec
repz
popa
in
inc
scas
lahf
out
insb
shll
mov
repz
insl
mov
test
add
repz
adc
push
mov
stc
sub
sbb
testb
sbb
out
or
mov
cli
cmpl
cmpsl
stc
cmp
sbb
sahf
out
xor
leave
adc
dec
jb
dec
repz
sbb
push
xchg
fnstcw
stc
xor
pop
lcall
sarl
cwtd
in
aas
ret
sti
xor
cmpsl
jle
xor
outsb
stc
mov
mov
push
hlt
mov
mov
enter
leave
push
stc
xor
out
out
lret
lret
repz
cmpsl
xchg
rolb
sub
cmp
out
int
into
popa
test
out
iret
xor
repz
inc
gs
lret
push
shll
jge
dec
fldt
jbe
push
sarl
lcall
mov
iret
repz
fadds
dec
mov
pop
dec
repz
pop
loop
xlat
dec
jae
cmpsl
stc
cmp
jle
mov
sbb
out
xor
in
xor
insl
stos
cmp
repz
inc
fstpt
negb
fsubrl
ds
repz
inc
fisttps
in
flds
shlb
cld
ss
repz
in
imul
jbe
dec
repz
repz
imul
cld
incb
jp
lahf
add
ds
mov
lahf
int3
cmpsl
xor
movb
mov
pusha
aas
aam
cmp
ret
adc
push
adc
sbb
lods
nop
out
cmp
push
mov
leave
mov
inc
pop
aaa
mov
call
insl
mov
insl
rol
jg
inc
cmp
xchg
adc
inc
sarb
and
test
inc
sti
jae
jge
aas
rcll
jg
movsl
shr
add
sub
aas
andps
inc
in
cmp
pop
arpl
mov
pop
fwait
and
mov
fistpll
adc
dec
xchg
aas
pop
out
push
push
push
outsl
jg
and
mov
sbb
in
push
inc
sti
pop
ss
and
pushf
sub
pushf
divl
aas
test
inc
cmp
dec
aas
pop
jnp
leave
in
xlat
outsb
fldl
inc
insb
mov
jo
daa
pminsw
mov
outsl
addr16
sbb
add
jmp
pop
or
in
pop
cmp
pop
push
je
inc
ffreep
adc
jno
inc
dec
push
iret
shlb
push
pushf
push
enter
lahf
js
sahf
xorl
js
or
les
fiadds
xchg
jns
add
or
or
jno
pop
jns
push
jge
loopne
enter
ds
jl
jne
je
in
aas
scas
orb
les
sbbl
pop
and
xchg
fadds
or
pop
ja
push
lahf
push
dec
movb
scas
add
add
inc
test
xchg
cmp
inc
out
es
pop
inc
or
push
mov
push
lahf
push
xchg
push
push
and
add
dec
sbb
mov
pop
add
push
xlat
push
jns
mov
iret
push
add
cmp
cwtl
mov
and
rcll
shrl
pusha
negl
lea
push
daa
sub
push
xor
stos
js
xchg
decl
push
pop
and
dec
jnp
sahf
or
pop
in
ja
adc
fwait
sub
lret
movsb
push
aas
out
push
daa
jns
pop
rclb
mov
push
leave
xchg
adc
mov
shll
cmp
xorps
inc
repnz
xchg
scas
stos
js
sbb
mov
jb
mov
mov
jg
inc
jo
iret
push
push
out
xchg
mov
add
inc
sbb
andb
push
sub
pop
xchg
rorb
pop
rcr
js
adc
mov
es
sarb
jl
push
jb
add
inc
mov
adc
push
daa
cmp
cmp
jno
dec
mov
xor
pushf
out
mov
lods
push
pop
cmp
repz
add
mov
mov
push
enter
roll
mov
or
sbb
addr16
jbe
xor
push
in
xchg
fildl
mov
daa
daa
pop
add
leave
mov
daa
in
ljmp
call
xor
pop
sub
and
adc
push
out
jae
sbb
pop
mov
add
in
pushf
dec
sub
xlat
popf
daa
pushw
mov
mov
add
xchg
xchg
xchg
xchg
cltd
mov
xchg
sbb
mov
mov
pushf
fsubl
fsubl
dec
sahf
pushf
cld
add
push
daa
push
comiss
mov
inc
lea
pop
popf
xchg
or
mov
lock
add
cwtl
lea
mov
push
add
out
fnstsw
or
jno
out
or
or
xchg
iret
add
or
fstpl
jmp
push
daa
inc
popf
pushf
fsubrl
push
addps
ss
jl
mov
xchg
lods
adc
out
pushf
cmpsl
add
in
add
adc
add
push
ret
je
repnz
es
xchg
subb
adcl
mov
and
fdivs
mov
adc
cmpsl
mov
daa
push
ja
add
ja
push
daa
jo
xlat
pop
push
outsl
lcall
mov
repz
mov
push
pop
aad
loopne
push
repnz
out
cmp
or
cs
call
nop
out
pop
das
enter
dec
and
sbb
stos
ja
push
add
sbb
sub
mov
lahf
cmpsl
popf
stos
sahf
out
pushf
mov
push
add
add
insb
jns
lret
imul
cmc
popl
repnz
xchg
bound
pop
pop
and
or
leave
xor
shlb
sbb
xchg
push
rcrb
xchg
pushf
pop
xor
push
enter
and
daa
cld
mov
mov
and
pusha
xchg
call
push
repnz
je
pop
sbb
test
or
dec
inc
aas
outsl
sub
clc
sbb
sbb
sbb
scas
pusha
add
inc
inc
xchg
pop
xor
mov
negl
push
inc
lea
cmpsl
aam
fbld
cmp
sbb
sbb
pop
enter
stc
pop
out
mov
or
adc
jg
dec
dec
xlat
sbb
xchg
imul
push
pop
xchg
inc
outsl
push
sbb
pop
xchg
xchg
ja
sbb
sbb
pushf
xchg
adcl
dec
ja
adc
daa
xor
insl
mov
pop
rcll
or
cwtl
sbb
jb
xchg
add
cmp
sbb
outsl
add
in
xchg
add
mov
mov
push
and
scas
inc
push
xchg
dec
leave
mov
mov
and
pushf
imul
rclb
push
addr16
addr16
testl
mov
xchg
pop
in
xchg
fneni(8087
out
in
add
xchg
daa
add
sbbb
out
es
xor
cmp
inc
adc
or
iret
enter
lcall
add
xchg
pop
pop
cmp
and
xchg
pop
and
and
jmp
inc
jl
mov
test
das
out
ret
xchg
in
out
xchg
repz
das
cli
xchg
add
leave
repz
sbb
es
xor
xchg
inc
or
mov
xchg
out
xchg
jmp
addr16
and
insl
mov
fs
fnstsw
ja
xchg
or
inc
iret
add
xchg
paddusb
call
addr16
cmp
pop
cvtps2pd
rorl
jmp
cmpsl
xchg
out
xor
pop
in
or
aad
pushf
push
or
enter
in
sub
push
in
into
inc
repnz
je
jl
scas
pop
mov
jmp
mov
rcll
add
mov
and
loopne
es
xchg
mov
pop
fiaddl
cmp
nop
scas
leave
mov
in
les
jne
xchg
or
repnz
xchg
cmp
dec
std
aaa
add
cltd
dec
dec
jnp
lcall
cmp
shld
lfs
cmp
cltd
in
and
in
enter
pop
mov
push
pop
scas
inc
out
push
jns
pop
or
hlt
mov
popf
sbb
fcoms
push
es
inc
dec
and
pushf
and
daa
inc
and
iret
andb
fs
sub
xchg
es
repnz
daa
add
mov
xlat
push
cmp
add
dec
sbb
iret
xlat
cmp
ja
fisttps
add
cmc
mov
add
adc
lahf
sbb
aam
jmp
enter
jg
adc
cwtl
adc
xchg
cmp
xlat
add
sub
dec
sub
enter
imull
aas
popf
enter
popf
popf
popf
popf
xchg
enter
popf
jns
test
cmpsl
aaa
xchg
pushf
mov
cmp
rcl
or
lea
and
push
push
cs
pop
jo
jmp
push
out
sbb
or
push
lahf
stos
addr16
stos
jne
mov
add
in
rorl
divb
mov
lock
and
mov
lahf
ss
das
dec
push
add
push
pop
lahf
or
sub
mov
scas
daa
daa
pop
lods
pushf
add
pop
leave
and
mov
daa
mov
pop
out
mov
cs
mov
push
mov
cs
dec
nop
lcall
add
vmwrite
add
add
and
xchg
aaa
push
pop
ja
ficoml
scas
imul
push
push
xorl
mov
out
les
fsubrl
int3
xchg
add
push
sub
daa
fisttpll
cmp
popf
mov
inc
ja
add
ljmp
orl
xchg
cmpsl
push
insb
add
dec
dec
rcr
loope
xor
icebp
stc
mov
pop
andb
mov
das
push
pop
cmp
dec
sahf
out
inc
push
add
iretw
in
in
push
jno
das
xchg
mov
negb
cmp
iret
or
mov
iret
jae
adc
ljmp
cmc
mov
mov
cmp
movsb
and
xlat
xlat
data16
pop
addr16
movsb
fbld
sbb
mov
nop
sets
add
movsb
daa
dec
das
mov
mov
aas
push
mov
in
pop
hlt
cld
cs
add
or
cmpsl
adc
enter
pop
or
rcr
xchg
decl
pushf
cmpsb
pop
andb
mov
mov
jmp
imul
incl
cmpsb
xor
and
iret
cmpsb
xchg
addb
cmp
lret
inc
push
lea
ljmp
pop
sti
push
ret
xchg
subb
scas
nop
mull
pushl
stos
xlat
push
pop
or
les
xor
mov
push
rol
cmp
sub
xor
add
jb
cmpsl
xchg
cmpsl
sbb
test
fistpll
dec
sahf
ja
dec
push
push
add
enter
fildll
jns
or
or
pushf
fbstp
add
mov
xchg
daa
push
out
pop
test
push
add
cmp
in
pop
pop
cs
add
das
aaa
test
aas
test
jb
pop
add
push
leave
leave
inc
pop
lea
and
xor
test
mov
mov
js
das
incl
femms
add
sbb
test
test
jg
test
mov
jle
mov
mov
pop
mov
dec
dec
cs
iret
daa
fimull
divb
xor
stos
andl
mov
stos
pushl
inc
ja
stos
ja
pop
int
mov
rorb
pushf
loope
enter
xchg
stos
xor
es
ss
incl
stos
push
stos
mov
loop
je
pminub
cmp
mov
int
fsubrs
addr16
xlat
iret
fldt
xchg
iret
lcall
xchg
sbb
lds
xchg
or
aad
fisttpll
add
xchg
in
push
add
cmp
outsl
or
cmp
adc
leave
repz
sub
repz
cmp
inc
adc
adc
adc
adc
repnz
jne
lods
mov
jl
aaa
mov
cmp
lods
aaa
jecxz
out
das
in
repnz
push
dec
cmp
enter
inc
lods
dec
psrld
loop
lods
push
xchg
lods
jmp
dec
dec
xchg
mov
cmp
scas
inc
unpcklps
aaa
leave
leave
add
dec
push
mov
push
scas
mov
int
mov
jg
add
mov
mov
scas
popf
pushf
je
pushf
movsb
lods
dec
or
repnz
mov
mov
repz
fsubrl
int3
push
cmovle
js
aam
add
pop
jns
scas
xchg
mov
aas
in
pop
dec
in
sarb
jp
or
aam
xchg
dec
or
pop
jne
popf
mov
adc
adc
nop
ja
enter
fmuls
and
vmwrite
cmp
cmp
cmp
sbb
pop
sbb
jmp
jge
out
daa
iret
enter
add
mov
pop
cwtl
popf
pushf
pop
enter
jle
or
pop
mov
xchg
incl
repnz
cmp
shr
outsb
add
cmp
scas
add
iret
add
xlat
decl
hlt
cli
inc
incl
push
cmp
jmp
jg
es
xor
push
popf
out
pop
cmpxchg
pusha
push
add
jns
jne
jl
iret
mov
mov
js
out
or
dec
ss
mov
sarb
out
and
sysret
mov
push
add
add
add
add
jns
pop
pop
outsl
or
jns
out
or
pop
mov
or
out
add
add
mov
xchg
das
shlb
jmp
sbb
in
or
in
daa
sbb
enter
push
mov
mov
cmp
daa
and
repnz
jl
ds
and
inc
mov
mov
pop
daa
pop
jmp
lahf
call
add
out
sbb
fsubrl
enter
mov
sahf
pushf
pushf
cwtl
nop
mov
push
inc
aas
shll
sbb
mov
int3
iret
iret
leave
in
jbe
addr16
cmovp
ficoml
jmp
dec
or
es
mov
repnz
mov
js
jmp
inc
lret
mov
in
mov
push
outsl
jmp
stc
sbb
xchg
out
lods
sbb
stos
xchg
xchg
xlat
push
mov
mov
pop
outsl
bound
fsubl
ltr
iret
sbb
ljmp
or
or
cmp
add
push
rol
mov
xorb
imul
inc
inc
hlt
and
pmulhuw
movsl
notb
inc
sbb
scas
popf
loopne
jb
inc
add
pop
or
mov
adc
je
das
mov
mov
pop
idivl
mov
add
mov
js
orb
in
outsb
fucomp
xchg
pop
lcall
stos
iret
or
call
adc
mov
lahf
xchg
xchg
je
mov
add
sub
mov
mov
inc
fwait
js
pop
addr16
cmpsl
push
mov
insb
ja
ja
xchg
xchg
xchg
xchg
fwait
mov
leave
inc
into
pusha
fsubrl
call
xchg
add
es
inc
mov
push
js
cmpsb
aaa
nop
decl
out
and
mov
into
leave
leave
inc
jl
mov
ja
out
das
mov
inc
jns
in
pop
fcos
pop
sub
push
ss
pop
lods
cmp
leave
mov
add
pushf
cmp
test
mov
cmpsl
push
loopne
or
mov
fsub
xchg
add
cltd
dec
jbe
xor
mov
outsb
pop
jg
xor
jg
mov
in
es
xchg
cltd
lsl
test
cmp
jmp
xchg
aad
in
inc
sbb
push
xor
mov
xchg
dec
xchg
imul
orl
pop
cs
or
or
jns
outsb
cmp
das
femms
cmp
lock
out
mov
push
js
push
mov
sahf
add
xor
jns
xchg
xchg
cmp
pop
push
int3
jo
cmp
punpckldq
and
pusha
dec
mov
sahf
packsswb
jns
cmpsb
add
mov
or
adc
add
add
outsb
fnstsw
lahf
cmp
inc
push
pop
mov
or
or
mov
int
ficoml
xlat
addr16
add
outsl
sarb
add
adc
mov
mov
inc
mov
fs
add
out
outsl
jp
xchg
push
pop
lahf
stos
dec
mov
or
xchg
cmp
call
pop
and
mov
ja
movsl
mov
rdpmc
mov
daa
rorb
dec
pmaxsw
mov
xlat
jbe
into
inc
dec
test
push
test
add
aas
and
in
push
iret
shll
pop
in
pmuludq
add
jo
mov
add
cmpsl
or
in
dec
outsl
and
or
das
mov
mov
xchg
mov
mov
push
xlat
push
out
popf
fisttpl
pop
movsl
in
dec
sahf
add
mov
pop
int
or
lock
add
mov
aad
aaa
or
pop
shrb
aam
mov
xchg
xor
ja
out
jbe
xchg
push
outsb
jbe
jle
mov
add
in
in
mov
mov
clc
dec
push
mov
mov
add
push
or
pop
adc
jno
outsb
nopl
sub
jbe
cmp
mov
inc
dec
xor
push
sar
in
sbb
jp
jp
pop
and
add
mov
cmp
mov
and
xchg
mov
sub
add
fiadds
push
mov
fisubl
mov
push
pop
addr16
fcompl
jae
fists
adc
mov
mov
xchg
aas
push
mov
push
add
push
sahf
xchg
out
paddusb
pop
in
push
fidivs
dec
es
mov
push
ret
cmp
insl
or
ja
shld
in
fs
jbe
in
jbe
or
xchg
leave
leave
leave
test
pop
and
push
jbe
push
mulb
popf
lock
pop
and
comiss
in
sub
pop
jnp
dec
ss
push
pop
outsl
les
jo
add
xchg
xchg
add
sbbl
mov
or
cs
idiv
sysret
lds
lea
pop
lds
pop
push
mov
lds
add
push
ja
mov
xchg
fstpt
test
ret
fildl
lds
mov
out
or
or
clc
push
mov
dec
and
iret
add
call
push
add
sbb
insl
divb
jnp
out
xor
cmp
out
inc
aas
daa
iret
jmp
push
negl
or
jl
ds
cmpsb
jle
pshufw
and
fadds
xchg
daa
mov
scas
push
ja
addr16
add
xchg
pop
push
push
push
rdrand
pop
out
jecxz
push
scas
push
add
fst
popf
daa
ljmp
pop
clts
repz
mov
mov
maxps
lds
push
jle
adc
push
mov
cmp
ud0
mov
adc
scas
sbb
jo
inc
fs
mov
outsl
mov
cmovne
mov
dec
push
add
push
fnsave
testl
sahf
xlat
iret
insl
or
enter
jle
or
push
enter
sub
push
inc
inc
inc
sub
enter
scas
adc
or
pop
cmpb
pushf
push
repz
pushf
loopne
imul
jnp
jmp
push
add
in
push
xchg
fwait
mov
push
decl
inc
ret
dec
insb
push
outsl
add
fldt
aas
pop
sbb
dec
ret
xchg
xchg
and
xor
outsl
mov
mov
pushf
je
out
add
cmp
repz
push
scas
mov
cs
or
or
or
or
add
cmp
push
sbb
outsb
xchg
inc
fmulp
rdpmc
das
cs
out
push
xchg
push
mov
pop
lret
movd
insl
fnstsw
jbe
jle
push
scas
lret
mov
or
jno
adc
fcomps
mov
jns
cmpsl
iret
push
add
loopne
or
xlat
ljmp
mov
pop
jl
je
pop
jo
mov
icebp
jns
inc
xor
mov
cmc
add
fcompl
int3
scas
adc
and
push
cmpsl
cmpsb
cmp
filds
out
nop
aaa
dec
call
btr
mov
into
icebp
in
push
fucomip
int3
out
cmc
int3
in
and
int
push
or
out
sahf
out
or
and
int
adc
repz
pop
adc
outsb
adc
iret
repz
adc
cmp
repz
lcall
iret
mov
mov
in
pop
push
adc
in
adc
adc
in
in
push
or
sub
out
push
fs
add
test
adc
loope
test
sub
ds
pop
in
inc
daa
and
mov
into
xor
lahf
cmp
into
enter
inc
into
dec
push
into
pop
roll
pop
daa
repnz
test
outsb
and
pop
mov
pushf
jl
mov
pop
mov
pop
into
xchg
dec
push
and
lcall
dec
adc
ja
cs
xchg
dec
addr16
enter
outsl
push
outsl
ja
add
jb
xchg
iret
xchg
iret
mov
mov
push
in
outsb
push
lcall
mov
ror
cmp
xchg
pop
sub
call
fwait
mov
outsb
mov
pop
int
jg
mov
fisubrl
test
pop
ja
pop
out
fisttpll
es
negb
jmp
add
and
inc
divb
cmp
inc
rcll
add
xlat
pop
fs
insl
js
push
mov
das
mov
out
pop
push
cmpsl
push
push
sahf
mov
sub
and
inc
neg
incb
rorb
xchg
mov
xchg
rclb
nop
fbld
rcrb
outsb
mov
pop
cs
ss
push
or
cmp
dec
push
or
or
pop
push
data16
add
adc
leave
enter
rclb
push
ljmp
pushf
fmull
les
or
clc
cmp
iret
sti
rorb
xorb
push
xor
mov
push
pop
test
shll
rcrl
add
dec
push
out
add
and
sahf
outsb
or
jbe
or
into
mov
xchg
cmpsl
negl
xchg
mov
outsl
test
push
daa
xchg
in
and
ror
in
aam
fsub
mov
in
pmuludq
inc
push
mov
pop
aam
aam
mov
xor
ja
nop
into
in
in
jo
js
xor
xor
xchg
add
cmp
popf
mov
jb
jb
out
lock
cmc
mov
push
in
mov
sub
cmove
jmp
movsl
daa
adc
aad
fmull
pop
addr16
rcl
cwtl
fs
insl
pop
dec
out
out
xchg
jg
sbb
daa
lcall
pop
icebp
aad
xchg
inc
addr16
ds
add
or
ret
jmp
or
xor
data16
es
jb
fwait
sbb
cmovae
mov
js
aaa
mov
or
orb
out
pop
lcall
iretw
push
push
mov
dec
sahf
xchg
pop
add
add
mov
jns
lret
push
xchg
cmp
iret
pminub
fadd
movsl
js
std
add
and
loopne
or
test
mov
incl
das
cmp
add
out
dec
and
cmpsl
jbe
sub
test
or
jg
fsub
push
fwait
cmp
repnz
push
add
push
pushf
fmull
cmp
pushf
pushf
pushf
inc
dec
push
or
leave
leave
leave
pop
fs
jbe
add
or
fcomps
mov
fcmovne
in
and
ja
fcompl
cmpsl
xchg
movzwl
xchg
pusha
push
push
add
push
scas
push
fldt
mov
push
jmp
fldcw
pop
invd
fwait
cmp
in
push
push
or
xor
fildl
aas
pmulhuw
push
enter
fstps
cmp
imul
sahf
pushf
fucom
fstps
jo
mov
test
jecxz
fwait
addr16
in
cmpl
addb
fildl
jp
inc
test
jae
rorl
pop
daa
sbb
or
push
add
push
mov
addb
add
sub
pusha
cwtl
push
mov
insb
xchg
mov
sets
loope
mov
pop
fisubrs
adcl
imul
xchg
dec
jnp
scas
xchg
out
jbe
addr16
add
mov
dec
cs
ja
fcmovnb
adc
and
ljmp
cmp
lahf
adc
aas
sbb
and
repz
add
add
repz
fcompl
push
dec
pushf
pushf
fdivrl
add
cmp
repz
or
or
outsb
repnz
push
repnz
imul
insb
xchg
test
dec
xchg
push
xchg
movsb
fsubrl
mov
add
in
into
insl
pop
movq
mov
fisttpll
push
and
or
adc
or
and
pushf
dec
and
insl
inc
fnsave
dec
fstl
pop
fucomp
arpl
stos
btr
mov
popf
fcmovnb
pop
lret
jg
dec
imul
iret
mov
jnp
repz
testb
jnp
movsb
fwait
cmp
fwait
adc
mov
jecxz
xchg
iret
jae
repz
sbb
fidivrs
leave
sti
nopl
or
pop
sbb
and
push
and
jbe
xor
dec
inc
push
es
repz
fwait
movaps
sub
repz
sub
imul
iret
repz
jnp
subl
lock
mov
add
nop
out
insl
testb
pop
fidivs
ss
dec
push
mov
cmp
xchg
add
push
daa
inc
sahf
mov
cmp
sub
ja
dec
sbb
adc
sbb
jmp
jbe
rcll
iret
in
in
jb
test
pop
and
xchg
xchg
pop
add
out
mov
xlat
loop
out
out
sbb
push
pop
jle
fwait
popf
cmp
loopne
sub
dec
aaa
pslld
jae
or
dec
sahf
ja
push
adc
adc
cmp
in
unpcklps
iret
lds
rclb
fistpl
dec
iret
repz
sbb
sbb
xchg
loope
push
sbb
sbb
cmp
xor
inc
and
cmp
repz
and
push
and
andb
es
daa
mov
jb
loope
loope
loope
loope
xchg
and
loope
loope
loop
cmp
xor
loop
xor
popf
popf
popf
popf
pop
aas
loop
dec
loop
push
loop
pusha
loop
iret
fwait
popf
fildll
pushl
daa
andl
mov
repz
and
cmp
repz
into
pop
fstps
repz
repz
out
sbb
jns
in
sbb
add
push
sbb
jns
out
es
dec
sahf
out
sahf
cmp
inc
dec
push
dec
jns
out
pop
dec
push
ja
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
lcall
mov
aad
xchg
popf
aam
loopne
ss
push
mov
and
xchg
pop
add
aas
in
getsec
mov
femms
popa
pushf
mov
push
out
sahf
addr16
push
pop
orb
sahf
out
sahf
or
leave
and
or
or
iret
repz
jmp
repz
adc
pop
in
iret
repz
adc
adc
cmp
repz
das
sbb
iret
repz
inc
sbb
pop
sbb
iret
repz
sbb
cmp
repz
mov
xchg
and
fcmovne
lahf
test
outsl
loopne
mov
aam
fsubr
out
or
mov
dec
add
outsl
out
sahf
aaa
or
sbb
adc
jp
out
adc
pop
in
ds
or
out
sahf
out
or
mov
das
sahf
jnp
dec
xchg
xchg
out
es
lret
push
push
movsb
cmovo
mov
push
sbb
out
shrb
addr16
wbinvd
popf
cmpsl
pop
ds
add
dec
fidivs
jmp
out
push
pop
push
push
aaa
jns
xlat
wbinvd
push
push
or
setle
jns
or
cs
sahf
out
cmovbe
dec
adc
in
in
pop
pcmpgtd
cmp
mov
mov
sbb
repz
jbe
out
fldl
ja
push
add
push
xor
push
pop
call
rep
push
add
daa
mov
cmp
das
dec
push
pop
cmp
daa
daa
fs
je
jns
iret
repz
mov
in
in
stos
btr
ret
lret
rcr
leave
leave
leave
leave
jecxz
repz
and
fwait
jmp
push
and
sbb
and
inc
jle
and
sub
and
ja
jne
xchg
push
pop
add
add
mov
bound
jb
add
orb
rep
shld
lods
daa
iret
cmp
mov
fcmovne
rep
dec
aam
adc
in
leave
out
xchg
in
hlt
scas
push
sbb
enter
ljmp
outsb
loope
cmp
outsb
inc
ljmp
push
push
push
cmp
jle
mov
xchg
out
jns
int
or
mov
push
lods
movzwl
ret
in
adc
out
psubw
adc
mov
bndldx
and
sbb
sbb
inc
repnz
iret
sbb
sbb
jae
pop
jge
and
iret
jae
xchg
sahf
and
cmp
mov
dec
outsb
daa
loopne
jmp
add
repz
and
and
daa
iret
das
sub
adc
scas
xchg
lock
in
iret
repz
scas
push
add
cmp
add
add
repz
stos
pop
mov
in
sahf
addr16
mov
or
pushf
pushf
cmp
fisttpl
or
jmp
dec
inc
sahf
pushf
sti
add
or
iret
in
in
adc
and
sub
leave
repz
cmp
cmp
inc
es
repz
sbb
mov
pop
push
mov
xchg
iret
and
xchg
xchg
xchg
xchg
mov
ret
xchg
xchg
ret
in
dec
and
in
in
das
cmc
in
xchg
push
add
sbb
mov
movhps
push
add
ds
sahf
pushf
pushf
dec
push
out
outsl
bnd
into
jl
push
or
or
jbe
push
mov
pop
jg
lahf
out
outsb
mov
mov
std
fucomi
enter
or
adc
mov
add
aas
femms
sbb
sbb
cmp
repz
sbb
mov
push
push
pop
pop
mov
fucomi
data16
lahf
jl
mov
xchg
fisubrs
inc
movmskps
decl
sub
push
sub
sub
push
sub
jg
cs
das
popf
xor
repz
xor
sahf
divl
into
leave
xor
fistps
ss
aaa
idivl
data16
lock
cmp
jns
repz
cmp
cmp
cmp
aas
loope
scas
negl
add
inc
or
out
inc
and
iret
mov
push
push
adc
add
aad
repz
jno
or
xchg
xchg
pop
ss
jg
pop
jge
jg
pop
and
add
outsl
mov
outsl
mov
cmp
repz
xchg
inc
iret
leave
in
clc
or
add
mov
nopl
repnz
jns
out
push
push
inc
cmovg
in
sahf
out
adc
je
repz
orl
cmp
leave
mov
ret
setle
in
into
pop
sbb
dec
adc
or
push
push
icebp
in
jbe
cvttps2pi
inc
repz
das
jg
adc
adc
ja
push
mov
ja
cmp
in
enter
jns
cmpsl
add
add
dec
cmp
hlt
hlt
repz
sub
or
sahf
out
fimuls
mulps
movq
adc
jns
aaa
jns
unpckhps
nop
push
in
sahf
out
pop
cmpsb
sbb
mov
sarb
jns
fisttpll
sbb
cmc
repz
out
and
and
adc
dec
pop
fisubs
push
pop
cvtpi2ps
cs
repz
daa
inc
sub
push
lret
rep
daa
popa
emms
push
sub
fnstcw
fbstp
mov
sub
cmc
test
das
push
add
add
add
stc
hlt
cmp
add
push
and
push
div
jg
testb
out
dec
andl
jg
daa
out
mov
addr16
jge
daa
pop
fsubr
mov
xchg
sahf
pop
repz
repz
or
mov
aad
sbb
aad
loopne
idivb
testb
mov
push
adc
sbb
pop
out
sahf
testl
cmp
mov
sbb
push
push
push
sbb
cmp
repz
sbb
repnz
pop
andb
lcall
mov
mov
and
in
xchg
in
jmp
scas
aaa
cvtdq2ps
scas
mov
jg
cmp
sahf
adc
sbb
shrb
out
daa
dec
das
repz
loop
lahf
jb
scas
push
add
repz
mov
xchg
add
out
sahf
fldt
or
or
or
or
jns
or
or
out
adc
nopl
mov
sub
push
adc
jbe
mov
adc
jns
in
jnp
xchg
sbb
xchg
sahf
test
push
sub
out
pop
xor
in
push
add
add
or
jg
push
add
es
mov
pop
xor
or
or
repnz
ljmp
in
jbe
aas
jbe
jle
adc
mov
adc
adc
jbe
pop
mov
mov
out
sbb
sbb
iret
repz
sahf
sbb
out
push
out
pop
bswap
repz
and
and
dec
and
cwtl
xchg
sti
fisubrs
inc
cmp
inc
pop
push
divps
iret
repz
add
ja
cmp
mov
cmc
in
or
iret
shrl
femms
int3
pushf
cmp
repz
adc
clc
outsl
jbe
repz
cld
push
cld
das
sbb
adc
daa
daa
femms
sbb
and
jns
out
das
sbb
iret
cmp
inc
sbb
push
jae
jg
cld
out
iret
repz
dec
and
repz
es
pcmpgtb
rol
lret
cld
pop
sub
xchg
cmc
orb
pop
shr
nop
mov
insb
mov
sbb
push
pop
and
mov
std
inc
xor
dec
std
arpl
jno
outsl
das
jl
pop
movsb
cmpsl
dec
dec
push
mov
lahf
stos
stos
cmpsl
fisttpl
mov
pop
syscall
repz
xchg
lret
pop
loope
in
cmp
es
or
syscall
or
mov
decb
and
jns
out
inc
pop
push
adc
jns
out
data16
jl
in
sahf
out
pop
fistps
ljmp
mov
repz
mov
and
out
cmp
dec
and
push
and
jns
xchg
popf
test
mov
out
sahf
out
leave
daa
aam
cwtl
pushf
je
fisttps
es
cwtl
cmp
adc
jnp
xor
dec
or
xor
push
iret
repz
mov
and
in
in
daa
aaa
push
ss
dec
pslld
iret
outsl
push
sahf
xchg
xchg
pushf
cmp
jbe
push
push
cmp
stc
icebp
aas
push
leave
dec
jmp
scas
mov
outsb
sahf
iret
movnti
jns
in
in
fldt
out
push
icebp
iret
xor
das
or
unpcklps
pop
jbe
cmp
sub
fsubrp
dec
addps
adc
jbe
mov
adc
in
pushf
xcrypt-ctr
cmpsl
push
pop
mov
daa
daa
mov
mov
in
mov
cmp
clc
add
pop
push
sahf
out
outsb
nopl
and
jae
repz
pop
das
and
fisttpl
sub
jns
stos
sub
fidivs
stos
add
das
cs
pushf
cmp
in
push
push
xor
repnz
repz
sahf
xor
in
jbe
mov
insl
mov
add
xchg
dec
ds
xor
pop
add
imul
lret
xchg
idivl
pop
push
rcr
in
out
push
negl
in
psadbw
adc
scas
adc
aam
push
push
iret
ucomiss
dec
dec
es
or
xchg
in
out
or
sbb
or
inc
fsubl
test
mov
mov
daa
inc
mov
push
push
ja
dec
pop
mov
divl
xor
pop
pop
mov
out
subl
stos
sub
inc
and
and
fnstenv
mov
add
push
js,pn
subl
popl
or
cs
aaa
xlat
mov
insl
or
xlat
mov
fisubrl
bswap
repz
add
add
leave
repz
or
or
rclb
inc
mov
adc
daa
popf
fsubr
xorb
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
iret
addl
jb
or
push
pop
andb
and
dec
outsb
aas
addl
mov
in
ror
mov
into
aas
xlat
cltd
pop
shl
sbb
data16
inc
loopne
lock
mov
and
add
bound
dec
add
or
imul
imul
pop
sbb
xchg
jecxz
sbb
add
dec
pusha
sbbb
iret
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
add
jle
jns
xchg
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
faddl
aam
shl
iret
repz
movsb
mov
iret
xorb
repz
out
insb
push
fs
pop
push
dec
mov
into
out
lret
sbb
clc
and
cmp
repz
aam
mov
cmp
mov
js
sahf
out
pop
jo
pusha
push
cmp
mov
sbb
or
and
jge
cmpsl
call
jle
push
push
fistpll
pushf
push
je
pusha
and
icebp
sub
insb
add
add
mov
out
insb
push
js
clc
mulb
insl
popf
incl
dec
hlt
xor
cmp
pop
aas
sbb
es
push
or
xor
pop
or
or
push
dec
lock
xorb
icebp
call
push
mov
push
inc
jg
mov
mov
scas
pop
shll
dec
inc
sgdtl
push
inc
xchg
pop
adc
jg
lcall
inc
xor
sti
add
mov
arpl
mov
mov
testl
das
outsl
sbb
mov
iret
xchg
into
add
pop
cs
mov
push
js
stc
pop
jg
push
in
mov
stc
pop
out
cmp
adc
inc
sub
out
xchg
outsb
sahf
imull
sbb
popf
out
and
and
cmp
jmp
cmp
adc
pop
jl
jnp
push
sbb
hlt
and
adc
push
dec
push
fdivrs
out
adc
aam
rorb
jnp
out
or
adc
jae
nopl
cmp
out
sahf
out
xor
sub
and
jmp
push
and
cmp
repz
and
or
aaa
inc
out
mov
test
insl
cmp
orb
inc
pop
inc
mov
shll
xor
jl
pop
mov
subb
inc
cmp
xor
lea
pushf
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
dec
or
and
adc
lret
mov
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
aaa
inc
shr
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
xor
jg
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
jbe
inc
add
int3
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
adc
xor
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
xor
or
adcb
add
shlb
pusha
mov
xlat
add
inc
je
inc
lar
inc
inc
push
dec
addr16
pop
cli
push
sti
jg
pop
dec
dec
inc
push
dec
inc
aaa
xor
jg
push
lret
mov
mov
call
push
inc
dec
inc
jo
inc
popa
push
or
in
outsb
jbe
imul
inc
sbb
loopne
lds
dec
insb
imul
dec
push
mov
pusha
cmp
outsb
push
loope
andl
inc
dec
push
dec
rcrb
push
jo
jb
inc
add
push
inc
inc
inc
test
out
dec
inc
gs
add
and
gs
mov
fmuls
arpl
mov
adcl
jae
outsl
test
fcomp
push
dec
pop
mov
cmp
xchg
xchg
xchg
add
xorb
xor
lods
cmpsb
das
fmuls
inc
push
das
rolb
das
rclb
xchg
aas
dec
sbb
adc
dec
inc
dec
outsl
daa
sbb
daa
daa
dec
jae
imul
mov
inc
inc
inc
jg
inc
jns
lcall
push
rcl
lods
rol
push
cmp
xchg
jb
jns
inc
or
bound
sub
push
dec
in
inc
or
sbb
out
dec
push
dec
dec
fcomps
xchg
lds
jae
jbe
dec
pop
dec
dec
xor
mov
xor
or
cmpsb
dec
daa
sub
cmp
fisttpl
jbe
hlt
jne
arpl
outsl
or
les
dec
pop
xlat
push
sub
push
adc
add
sbb
inc
xchg
push
jbe
fidivl
imul
pop
pop
mov
mov
or
xorb
push
mov
imull
or
jg
notl
jo
cmp
mov
push
outsl
push
jb
add
adc
mov
das
push
adc
mov
push
xorl
push
dec
adc
push
mov
and
gs
and
repnz
insl
shll
outsl
push
inc
arpl
push
lods
fcmovb
push
push
cmpsl
lea
mov
adc
pop
jg
adc
test
xchg
add
mov
pop
xchg
inc
andb
mov
pusha
and
jno
stos
test
cmpsl
outsl
outsl
mov
mov
ja
fs
pop
ja
mov
or
ja
sbb
mov
arpl
pop
pop
cmp
test
pop
push
stc
clc
rorb
lahf
icebp
cmpsb
roll
scas
std
stos
insb
xor
call
xlat
and
pop
push
test
dec
lahf
add
leave
add
mov
sub
cmp
and
push
lds
add
pop
adc
mov
push
adc
push
cmp
out
xchg
stos
push
test
push
xchg
dec
xchg
daa
push
dec
out
push
outsb
sbb
jnp
xor
aam
mov
add
push
dec
push
pop
push
jne
xchg
das
les
outsl
loopne
addb
call
dec
outsl
addr16
push
or
cmpsb
iret
inc
dec
fistl
pop
mov
inc
and
das
xlat
out
js
mov
test
sahf
out
sahf
push
push
mov
sbb
dec
repz
lock
movsb
cli
ds
repz
les
inc
jns
xor
daa
jl
add
lret
inc
ljmp
add
daa
sti
sub
push
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
cmpsb
test
mov
mov
or
or
out
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
call
or
mov
dec
ficompl
int
mov
mul
decl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
pushl
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
jmp
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
and
mov
or
sbb
xchg
add
mov
subl
adc
in
jp
mov
jne
aam
add
mov
imul
dec
je
push
insb
imul
sub
filds
mov
cvtps2pd
je
jns
arpl
arpl
add
mov
pusha
jnp
insb
jns
inc
jne
outsl
insl
mov
xchg
pop
mov
fildl
xlat
inc
adc
jge
sbb
add
or
jmp
adc
xchg
or
inc
insl
bound
adc
or
inc
inc
inc
xchg
push
dec
orl
shrl
inc
jno
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
mov
mov
sub
xor
xor
xor
mov
push
inc
jbe
pop
sbb
fs
icebp
xor
inc
insb
dec
add
rolb
or
ror
inc
dec
push
push
cmpsb
mov
sub
sub
sub
hlt
mov
test
jbe
arpl
pop
lods
mov
popl
xchg
cmp
jle
jns
push
das
cmp
sub
sbb
push
addl
add
xchg
insb
popa
jns
test
vxorps
adc
or
aaa
je
lock
inc
insb
aaa
aas
inc
push
or
mov
ljmp
jg
and
jae
sub
push
popf
int
jbe
stos
fistps
inc
aas
fldcw
mov
inc
in
int
or
sbb
inc
pop
push
mov
jae
int3
out
std
jo
inc
inc
add
ds
mov
xor
pop
mov
dec
dec
lea
adc
cmpsb
mov
push
cmp
outsb
jne
add
push
dec
jge
in
pop
ja
xor
xor
or
add
addr16
or
into
pop
jo
and
push
cmp
mov
aaa
xor
jmp
cltd
dec
out
imul
add
sub
add
outsl
pop
sbb
mov
aam
dec
xor
fsubrs
dec
jmp
pop
adc
pop
mov
or
sbb
lock
inc
test
test
dec
popa
jo
sub
pusha
lahf
aas
fiaddl
outsl
test
and
sub
xchg
mov
in
pop
dec
push
sbb
mov
mov
arpl
inc
dec
push
cmp
push
jae
mov
jo,pn
push
test
lahf
sbb
push
outsl
insb
jns
push
add
shrl
inc
pusha
push
popa
jb
inc
dec
pop
push
addr16
addb
adc
call
movhps
push
bound
hlt
dec
cmp
mov
pop
adcl
dec
xor
adc
push
popf
xor
adc
xor
push
sub
aaa
inc
pop
addl
pop
cwtl
adcb
shl
jno
xor
testb
or
mov
test
aas
aad
cmc
push
sbb
pop
aaa
aam
in
add
push
aam
push
loop
roll
jnp
aaa
push
outsb
cwtl
add
les
lds
inc
push
daa
aas
pop
inc
and
add
addb
nop
push
addl
add
adc
inc
xorb
dec
pop
nop
mov
inc
repnz
std
clc
or
pop
mov
int
insb
addb
and
add
add
popa
insl
loopne
add
cwtl
outsb
outsl
je
jb
mov
and
and
sbb
mov
or
cmpsb
dec
shrd
popa
incl
lea
cld
sbb
bswap
mov
out
lahf
jg
out
ud0
jmp
repnz
in
push
pusha
ljmp
mov
ss
cli
push
cld
push
imul
lahf
daa
push
inc
es
add
dec
loopne
add
or
or
xlat
sub
aam
cmp
add
pop
jge
int
add
in
mov
imul
adc
sub
xor
xor
push
test
rcrb
push
mov
mov
stos
pop
subb
or
loop
test
push
pusha
push
add
dec
and
loopne
add
cs
xor
and
and
lods
add
push
adc
jb,pn
shlb
mulb
inc
fs
outsl
and
cs
mov
cmp
dec
or
shlb
fstpl
xlat
out
add
ret
sbb
jb
and
repz
test
push
dec
sbbb
add
xlat
xor
nop
icebp
cmp
test
pop
inc
pop
dec
jmp
xchg
fs
add
mov
decb
rorb
leave
popa
jecxz
add
or
and
fisttps
sub
movb
pushf
sub
push
cmpb
mov
add
popa
and
xchg
jns
es
push
cmp
dec
fs
jge
or
jno
int3
fucomi
gs
gs
ret
ljmp
ja
jne
jmp
mov
xor
and
inc
dec
rorl
or
call
fnstcw
test
je
jae
int3
pop
sub
loope
inc
mov
jnp
sbb
inc
jmp
inc
in
add
or
jo
sbb
jb
jo
adcb
addb
pusha
dec
fisttpl
pop
int3
inc
cltd
push
adc
or
pop
xchg
jnp
and
xchg
push
mov
in
fstpt
movzbl
or
rcll
xor
les
dec
xchg
ret
add
cmp
jbe
add
js
mov
mov
push
call
rclb
rcrb
out
movsb
arpl
jo
sbb
lret
les
push
ret
repz
std
addr16
mov
mov
mov
and
sbbb
push
add
dec
aam
push
shlb
dec
mov
xchg
pushf
and
aad
or
aam
es
jne
push
inc
imul
sarb
out
fs
adc
jb
int
gs
icebp
arpl
push
pop
push
sti
subb
mov
dec
and
pop
or
push
sub
insb
push
inc
adc
push
sarb
mov
data16
rol
mov
adc
inc
dec
or
stos
imul
les
add
dec
xchg
imul
or
fnstcw
push
push
push
mov
mov
popa
push
or
mov
mov
pushf
out
leave
push
dec
fcoml
or
pop
add
sub
jmp
dec
jmp
cmc
pop
test
cmpsl
cmpsl
xor
sub
je
sbb
sahf
jp
dec
inc
mov
jo
push
ret
sub
rorb
pop
pop
nop
sbb
sti
sahf
lea
inc
xor
mov
sub
xchg
add
punpckhbw
mov
test
push
mov
imul
je
js
clc
das
inc
test
movb
dec
adc
add
jo
and
xchg
jl
in
aam
lea
into
out
or
lds
pop
daa
loope
imul
adcl
mov
dec
jnp
jno
andb
add
shll
and
add
and
mov
dec
lock
or
mov
loopne,pn
adc
add
and
test
xlat
hlt
or
loope
pop
mov
movsl
mulb
cmpsl
sbb
pushl
flds
and
dec
jge
in
mov
and
push
sub
fs
insb
push
aas
adc
xchg
sbb
fcoml
sub
dec
and
add
inc
ljmp
imul
pop
je
call
and
cmpsl
insl
push
push
insb
fdiv
sub
inc
or
inc
outsb
or
mov
movsl
push
add
push
out
mov
xor
push
sbb
or
cmp
es
sub
lcall
or
out
mov
jp
js
inc
push
stc
fmuls
aas
push
mov
jp
push
or
adc
add
call
sbbl
insl
icebp
fstps
sbb
test
ja
cmp
push
mov
rolb
std
andb
call
sbb
push
jnp
int
cmpl
test
jl
mov
xchg
subl
mov
call
and
inc
mov
add
and
add
in
add
mov
adc
test
popf
shll
add
or
rcrl
das
sbb
mov
rcll
loope
sbb
ja
call
mov
mov
mov
push
jge
loopne
call
call
aam
or
call
insb
in
push
pop
jne
xchg
lea
xor
mov
mov
rclb
or
cld
nop
imul
sbb
fmull
add
push
out
mov
lock
add
pop
pop
movsl
enter
dec
adc
inc
das
xor
shrb
cmp
or
jns
add
ja
pop
mov
xchg
jge
add
insb
xchg
sbb
daa
ja
sbb
push
inc
into
pop
lods
and
in
dec
push
inc
push
testb
or
pushf
stos
imul
push
je
xchg
fs
sbb
sbb
mov
mov
cs
out
fsubr
shl
or
imul
push
xor
rolb
xor
adc
hlt
repz
sbb
xor
or
cmp
inc
sub
or
std
mov
push
jecxz
mov
btc
mov
adc
scas
cmpsb
das
div
inc
inc
addl
es
push
les
xchg
sbb
mov
mov
or
or
mov
and
push
pop
lahf
ss
insb
push
mov
movsl
gs
dec
sub
push
push
or
xchg
push
je
sub
lahf
fs
dec
push
hlt
mov
sub
push
jns
dec
fdivs
movsl
push
adc
pop
loop
jo
or
cmpsb
and
mov
ss
xor
addl
adc
fwait
adc
pusha
ja
inc
push
and
jne
push
sub
cmp
ds
sbb
push
sbb
ret
push
mov
addr16
loop
pop
pop
push
movsl
fdivr
scas
mov
aaa
add
lret
cltd
loope
movsb
dec
fistl
push
dec
fdiv
daa
dec
pushf
mull
sbb
push
sub
loopne
inc
pop
pop
pusha
push
add
push
jno
push
mov
sar
shrb
in
sub
pop
pop
mov
adc
fucomip
jb
add
xchg
test
int3
and
stc
and
add
sbb
mov
adc
cmp
push
jb
call
push
xchg
adc
pop
test
lret
jbe
fsubr
je
cmp
cmp
ret
sub
in
mov
jmp
push
lea
adc
and
pop
cmp
dec
inc
dec
dec
mov
or
ficompl
mov
call
push
mov
daa
rcrb
push
or
xor
in
push
cmp
xchg
add
out
xor
repnz
fld
mov
pop
sahf
call
xor
sub
jae
fdivr
mov
push
dec
inc
rol
ss
ss
xor
mov
es
stos
pop
mov
or
jmp
enter
mov
xchg
aas
xor
cltd
loopne
call
mov
sti
mov
mov
mov
mov
adc
and
dec
jae
les
adc
pop
mov
xlat
inc
adc
pop
xchg
mov
dec
int
xor
lods
add
mov
mov
rep
mov
loopne
dec
shl
push
and
dec
mov
xchg
pop
aad
sahf
mov
shll
jle
rcll
pop
mov
and
adc
jg
dec
inc
cmpsb
adc
add
cmp
jne
xchg
loop
sub
stos
lea
stos
push
inc
or
fnstcw
and
aad
shlb
subl
and
rolb
push
fadds
mov
sbb
push
push
das
xor
push
jb
sub
ljmp
ret
ret
pop
push
pop
pop
stos
add
fdivs
call
cmpl
pop
mov
cld
cltd
sbb
je
mov
pushf
sub
sahf
pop
and
insb
or
push
ror
stos
xlat
xor
sbb
dec
push
mov
sub
jb
adc
xchg
pushf
outsw
push
add
ljmp
int3
into
rcl
fidivl
mov
lret
stos
xchg
and
pop
xchg
sahf
and
scas
sarl
aas
test
jb
js
mov
jnp
ss
adc
mov
mov
adc
movsl
mov
or
insb
or
and
adc
dec
adc
adc
rol
push
push
cs
lock
sbb
push
call
cmp
cmp
jle
pop
xor
mov
dec
adcl
pushl
push
gs
pop
add
loopne
dec
in
push
mov
push
adc
pop
jmp
cmp
dec
sub
push
sub
jg
stc
divl
call
push
or
nop
or
in
bswap
push
add
in
enter
xchg
in
pop
jno
mov
or
test
inc
xchg
pop
adc
imul
push
leave
sub
mov
pushf
popf
dec
and
or
inc
inc
rcr
in
push
cmp
aam
mul
jmp
mov
loopne
lahf
cmp
mov
stos
repnz
or
bound
out
popf
je
inc
mov
mov
mov
cmp
mov
jne
je
in
sbb
lret
xchg
in
in
mov
ss
ret
outsb
repz
mov
jge
fcomps
orl
mov
pop
sub
imul
inc
inc
pop
bound
sbb
test
fbld
cltd
mov
fists
cmc
push
xchg
sub
jne
mov
xor
cmp
lods
push
cmp
movb
std
fidivrs
push
jbe
xor
sbb
push
push
out
pop
cmp
adc
int3
mov
xor
fsubl
je
in
inc
push
mov
test
sbb
push
dec
std
mov
sub
mov
sahf
xchg
cmp
mov
mov
inc
pop
lcall
aad
mov
pop
je
push
push
mov
jecxz
repz
pop
mov
push
cs
pop
jg
lea
jb
jae
mov
xchg
xchg
cmp
lret
adc
adc
and
cmp
add
cmp
inc
and
push
jne
jl
adc
push
jbe
mov
mov
push
outsb
movl
in
adc
mov
sahf
in
inc
add
jne
andb
imul
mov
adc
mov
test
or
icebp
or
gs
ljmp
push
add
add
out
enter
pop
inc
pusha
mov
and
or
icebp
inc
dec
xorl
addr16
clc
es
into
mov
sbbb
ss
inc
and
pop
cmp
int3
pop
popa
inc
dec
pop
and
je
dec
fstpl
or
je
mov
das
xor
leave
ret
cmp
adc
sub
call
adc
sbb
jle
sub
sarb
jmp
sbb
sbb
xor
bound
jmp
mov
xchg
call
xor
mov
jle
sbb
int3
mov
aaa
mov
cld
lcall
jp
pop
loopne
rorl
adc
add
add
or
push
mov
push
mov
add
mov
test
lea
xor
lods
mov
push
leave
jne
xor
push
or
push
movsl
mov
outsb
orb
sahf
sbb
mov
mov
add
loopne
cmp
push
loopne
jmp
push
pop
ja
push
mov
mov
jge
xchg
push
inc
rolb
jbe
add
xchg
imul
xor
dec
inc
inc
xor
push
std
fistl
jbe
add
incl
in
out
je
bound
jnp
jo
mov
mov
std
std
and
leave
push
xor
enter
stos
inc
jecxz
sbb
nop
or
add
inc
rorl
cmp
ret
mov
mov
mov
lcall
or
push
push
movsb
xor
inc
adc
adc
xchg
xchg
cmovs
pop
push
dec
lret
pop
pop
mov
lock
adc
push
ds
xor
cmp
out
and
or
ss
sbb
pop
cmp
in
push
dec
testl
sub
add
cmp
mov
and
sub
dec
testb
mov
imul
push
add
xchg
mov
inc
fcoms
sub
subl
push
pop
mov
jmp
mov
add
adc
sub
pop
mov
jmp
lahf
mov
inc
les
xor
shlb
fstpt
jae
addl
dec
int3
lods
or
xchg
loopne
aam
inc
data16
jae
push
xor
daa
jl
adc
xchg
adc
hlt
pop
mov
cmp
push
adc
inc
jl
mov
dec
mov
jp
push
mov
or
inc
jecxz
push
mov
mov
mov
push
call
pop
cmc
loope
lcall
add
jbe
lea
dec
xlat
mov
decb
sbb
sbb
xchg
sarb
push
mov
shr
or
enter
outsl
jne
filds
or
xor
sbb
fadds
and
xor
add
addb
in
mov
or
or
xor
insl
clc
xor
or
or
mov
sbb
mov
cmp
shrl
push
inc
sub
adc
ret
pop
sub
inc
mov
aam
or
rorb
cmp
fadds
xor
in
test
dec
adc
xor
sbb
js
xchg
and
xorb
or
sbb
jg
in
adc
jne
mov
jmp
or
pop
shll
cwtl
or
push
or
mov
cwtl
push
or
lahf
dec
mov
xor
inc
mov
sub
push
jae
mov
push
adcl
add
pop
or
push
jno
inc
push
add
call
pop
aaa
sarb
xchg
add
ljmp
mov
shll
cmpsl
clc
bswap
mov
cmp
ss
mov
mov
inc
cltd
cmp
cltd
xchg
mov
rcrb
js
mov
mov
pop
fcoms
or
or
orb
mov
cwtl
pop
stos
push
fucomip
add
mov
cmp
jbe
pop
xchg
hlt
inc
movsb
xchg
jne
mov
push
add
adc
shrl
idiv
push
and
std
pop
jbe
nop
or
das
cmc
lock
jo
jnp
sbb
push
in
mov
test
push
mov
out
hlt
pushf
cli
adc
mov
jae
add
add
push
outsb
es
inc
jmp
xor
imul
pop
xor
fwait
add
popa
rol
xchg
test
push
scas
jb
clc
mov
arpl
ret
rorl
xchg
mov
inc
xor
xor
test
paddb
inc
dec
jnp
jbe
fwait
jmp
push
mov
cmp
mov
dec
pop
push
cld
sbb
push
addb
in
mov
into
jno
sbb
or
sbb
push
inc
adc
rclb
add
and
stos
stos
loopne
sti
push
jmp
je
mull
lea
dec
jle
aam
push
addb
shl
push
and
stc
movsbl
pusha
shrb
inc
icebp
lds
lea
mov
lock
xorb
stos
inc
mov
jne
data16
sti
adc
push
mov
sahf
push
push
cmpsb
aam
in
mov
cmp
cwtl
popa
insb
cld
icebp
jecxz
push
call
sbb
and
fadd
push
xor
push
faddl
push
jp
fcoms
add
pop
scas
dec
je
ja
scas
fwait
jae
js
push
push
lret
mov
mov
test
add
or
mov
data16
or
shl
adc
dec
inc
stc
push
enter
or
cmp
sbb
xor
imul
testb
add
lock
xor
add
pop
xchg
mov
mov
das
mov
pop
add
push
lock
push
xor
dec
push
hlt
mov
push
mov
ss
cmpb
clc
and
cmp
push
sbb
push
inc
call
mov
or
mov
jmp
adc
and
push
mov
rcrb
sub
xchg
or
mov
push
push
test
mov
mov
add
mov
and
aaa
mov
iret
call
out
push
pop
jmp
push
imul
pop
addr16
sbb
jmp
sbb
mov
sbb
sbb
jne
jecxz
sbb
into
cmp
jmp
pusha
dec
or
ss
cmp
jne
push
cmp
scas
mov
and
or
je
int3
jecxz
cmp
dec
decb
cmp
es
jmp
cltd
loopne
adcl
or
jecxz
xchg
sarl
icebp
call
mov
lds
cmp
mov
and
jnp
pop
cld
push
bt
or
jmp
cld
inc
cmp
mov
sbb
fdivrp
andb
lcall
sub
push
negb
scas
icebp
and
mov
add
clc
mov
fxtract
jmp
dec
out
xchg
pop
xorb
movsb
inc
or
pop
ret
mov
movsl
mov
popa
mov
movl
icebp
xchg
mov
adc
add
sbb
lret
and
out
xchg
jne
add
push
call
in
and
in
movsb
jmp
js
pop
sub
lods
sbb
test
push
popf
cmp
mov
dec
push
call
cltd
sbbl
cmp
aas
inc
cmp
jbe
icebp
mov
movsl
adc
inc
pop
xor
lret
mov
bound
call
add
xchg
xchg
fcompl
popa
or
push
rorb
add
add
jo
mov
xor
icebp
in
sub
cld
test
jecxz
out
addb
out
and
jmp
push
inc
mov
mov
inc
mov
aad
andl
or
ja
cmp
jg
push
dec
lea
lock
or
call
in
add
xor
inc
ja
adc
and
xor
scas
les
nop
push
decl
or
pusha
add
dec
jne
movzbl
add
je
dec
sarb
les
test
sub
jmp
incl
nop
sbb
xchg
dec
fstl
std
daa
and
jmp
and
adc
cmp
push
cli
sub
sbb
adc
cmp
add
rorb
xor
inc
pop
rorb
inc
push
and
inc
rolb
out
add
imul
aam
and
subb
mov
jns
call
push
or
dec
sbb
call
call
in
push
das
dec
aam
inc
add
nop
je
ja
call
pop
pop
dec
stos
inc
je
sbb
push
das
dec
mov
mov
push
dec
sti
or
dec
mov
andb
dec
mov
ds
sbb
aas
das
and
pop
mov
repnz
fnsave
mov
inc
add
adc
mov
or
mov
mov
sub
bnd
push
out
pop
mov
add
sub
push
and
sbb
test
pop
mov
push
cmp
and
or
xor
enter
push
pushf
mov
jmp
loopne
inc
add
push
lds
add
and
jp
push
and
push
add
add
mov
and
push
dec
popl
pop
in
adc
rorb
jmp
cli
nop
fs
mov
or
dec
pop
pusha
or
movl
pusha
xchg
cli
or
or
xor
out
call
mov
call
xorl
jmp
jmp
mov
dec
aam
inc
out
iret
cmpsb
sti
adc
cmp
call
je
sti
js
call
int3
pop
cmpsl
outsl
sub
xchg
mov
movsb
dec
pop
leave
add
cmp
das
jle
decl
inc
neg
ljmp
pop
psubsb
add
shl
push
call
jmp
repz
cld
leave
mov
je
cmp
jmp
adc
stos
inc
or
sbb
into
ret
xchg
rcrb
or
daa
mov
addr16
fmull
pop
push
into
cmp
push
mov
sub
fimull
jmp
sub
aam
lds
rcrb
add
test
adc
cmp
sub
ljmp
xchg
sbb
jnp
add
repnz
loopne
inc
sbb
or
adc
addr16
test
sub
stos
dec
mov
mov
add
mov
aaa
jecxz
and
inc
fisubrs
sarb
arpl
dec
sti
mov
push
push
es
aaa
int3
adc
movsl
push
and
cld
aad
es
sti
sbb
shll
cmpsb
adc
inc
xchg
sbb
jae
push
es
bound
add
fbld
outsb
iret
dec
push
es
adc
mov
ficomps
cltd
or
fwait
pop
pop
add
xchg
int3
xchg
js
sbb
dec
add
movsb
sbb
inc
push
adc
pause
dec
rorl
dec
sbb
cmp
adc
push
adc
jge
push
xchg
jecxz
and
pop
aaa
push
movsl
and
sub
inc
test
movsl
adc
mov
es
in
and
or
rcr
push
push
cmp
xchg
pop
rorb
loope
xor
push
adc
shr
sbbb
push
les
pop
mov
das
sbb
or
xor
lret
adc
sub
mov
sub
andb
dec
sub
jbe
adc
lret
mov
pusha
inc
lods
lret
outsb
inc
cmp
call
xchg
rolb
sbb
or
or
push
inc
dec
insb
imulb
cs
pusha
popf
idivl
sbb
je
mov
mov
addr16
addr16
insl
inc
dec
inc
xchg
iret
repz
xor
sub
sbb
fistl
or
sbb
jmp
jns
je
xchg
adc
pushf
adc
pop
pushf
mov
pop
nop
add
aad
je
and
dec
faddl
pop
addr16
mov
fisubrs
mov
or
push
mov
repz
mov
or
fistl
xor
or
push
adc
or
int3
les
mov
cmpsl
dec
call
pop
sub
sub
out
dec
shrb
jge
fldenv
dec
or
add
fs
and
out
aam
pushf
push
pop
jmp
cmp
je
in
sub
sbb
repz
lahf
out
xor
ret
lea
adc
insl
jo
push
pop
add
push
repnz
add
add
push
pop
repnz
jmp
mov
lret
add
jno
je
xchg
add
xchg
sub
mov
ror
test
push
push
add
pop
pop
in
lcall
or
inc
scas
sbb
cmp
cld
enter
add
or
pop
pop
add
or
add
or
xchg
or
cmp
mov
in
sahf
xchg
je
push
push
pop
cs
rdmsr
adc
mov
adc
pop
adc
xor
adc
inc
scas
in
int
push
adc
add
pusha
in
ficoms
adc
adc
push
adc
sahf
xchg
sub
pop
mov
sbb
sbb
xchg
sti
mov
cmp
push
fcompl
sbb
enter
sbb
sbb
add
je
push
sbb
repnz
xor
sbb
pop
push
push
inc
incl
in
negb
pop
jne
add
add
sub
fcomps
push
and
cltd
inc
sti
pop
xchg
movl
xchg
mov
and
lods
pop
sbb
cwtl
xchg
push
in
fldt
imul
rcl
xchg
notl
adc
in
in
xchg
out
mov
mov
out
out
andb
in
in
call
adcb
adc
js
pop
leave
jmp
pop
and
jmp
jmp
push
loop
call
in
xchg
push
sbb
in
sahf
xchg
sub
in
mov
out
in
in
xchg
out
or
xorl
je
lock
dec
icebp
cmp
scas
subb
das
jnp
or
inc
repz
std
fidivl
cmpsl
cmpsb
hlt
hlt
imul
in
mov
cmc
cmp
mov
testb
sbb
gs
clc
jb
or
clc
clc
or
xor
stc
and
cmp
push
repnz
add
sti
jb
jns
fdivrp
cld
cld
je
out
std
push
ss
push
push
nop
shlb
mov
xor
dec
sahf
aaa
and
je
insl
fs
xchg
lds
aam
hlt
push
mov
ss
xchg
or
fwait
or
and
jecxz
xchg
sub
push
xor
jmp
push
xchg
push
cmpl
aam
mov
lcall
jns
xor
sti
mov
lds
adc
nop
out
inc
or
lea
xchg
daa
in
cltd
xchg
cmp
pop
or
jmp
or
aad
aad
out
xchg
mov
in
cmp
andb
repz
xchg
sbb
push
cli
stc
jb
imul
stc
imul
mov
repnz
clc
cltd
jb
shll
ss
push
cmp
stc
sti
sti
sti
xchg
push
repnz
scas
or
cmp
jmp
aad
xchg
clc
mov
subb
daa
add
xabort
sbb
jmp
loop
enter
shll
loope
and
inc
clc
and
pusha
dec
add
or
movsb
out
xchg
fdiv
out
xchg
pop
push
loope
negl
and
mov
lcall
jns
xor
pushf
and
pop
testl
xchg
repnz
mul
scas
testb
inc
nop
testb
repnz
pop
push
lea
loope
imulb
mulb
out
div
testb
mov
iret
in
mov
jns
pusha
xor
cmc
orb
push
cli
cli
xchg
in
aad
cmp
loope
cmc
andb
cli
hlt
or
xlat
inc
lock
into
repz
xor
push
mov
cmpsb
ret
imul
xchg
stos
cmp
jp
leave
or
cmp
add
xchg
hlt
mov
hlt
or
sub
in
pop
xchg
pop
pop
lret
repz
repz
or
xchg
repz
xchg
adc
repz
rcll
pop
lcall
pop
xchg
adc
repnz
repnz
rcll
dec
shl
test
cmp
icebp
icebp
das
mov
jb
xchg
pop
adc
repnz
repnz
push
cmp
sbb
inc
jb
sbb
or
mov
lock
cwtl
icebp
xchg
add
daa
test
xor
mov
push
and
icebp
movups
xlat
or
pop
ret
pop
mov
test
lret
repnz
jp
jmp
ficoms
push
sub
ffreep
dec
push
ret
inc
insb
loope
mov
cmp
cmp
scas
in
mov
ret
mov
mov
ret
fld
push
jne
stc
xor
mov
dec
add
movsb
xchg
dec
add
je
sbb
ss
and
dec
xchg
jne
and
mov
add
int3
dec
push
nop
cmpsl
xor
push
adc
aaa
mov
xor
or
push
add
jl
dec
imul
cli
push
jecxz
jns
data16
dec
mov
imul
out
in
push
push
aad
in
xchg
mov
push
dec
outsb
or
mov
mov
jmp
sub
cmp
rcrl
or
mov
mov
jle
sbb
lea
inc
cmp
and
lret
test
jmp
dec
dec
dec
push
shlb
stc
and
adc
in
dec
jmp
arpl
adc
and
jmp
out
adc
rcr
push
and
ficoms
cmp
rcll
or
mov
adc
js
pop
mov
insb
test
cmp
movsl
or
daa
adc
dec
inc
pop
call
or
adc
add
ret
xor
and
add
add
push
push
push
inc
ds
fsubl
call
pop
leave
fwait
adc
mov
mov
pop
insl
adc
push
rol
sbb
adc
ret
inc
adc
insb
arpl
cmpsb
jno
mov
inc
dec
dec
jno
bound
movsl
jo
jmp
lahf
popf
adc
bound
pop
loop
andl
ss
or
adc
xor
add
and
jmp
inc
push
cmp
insl
sub
jmp
push
xchg
push
dec
mov
adc
xorl
inc
arpl
call
xchg
xor
mov
inc
fwait
test
enter
add
pop
xchg
pop
sub
inc
sub
js
data16
shlb
sub
inc
dec
inc
push
xorb
nop
or
mov
xor
dec
aaa
inc
adc
test
leave
pop
inc
dec
pop
xor
or
mov
push
add
lods
dec
nop
xor
and
int3
ret
aad
xor
xor
push
sbb
jns
pop
inc
jl
rcrb
and
je
cmpl
push
dec
inc
push
fidivs
xlat
cmpsb
push
sar
add
or
mov
ret
lds
mov
or
pop
nop
jno
mov
push
jg
sub
xchg
and
jmp
xlat
inc
je
add
sub
sti
iret
jo
xchg
pop
les
add
dec
sbb
push
sbb
mov
or
push
shrl
rolb
and
sahf
dec
sub
mov
pop
mov
sbb
pop
fiadds
movsb
sti
and
or
jmp
lret
cs
sbb
pop
repnz
mov
jmp
push
lcall
adc
cli
and
outsl
mov
and
call
xor
imul
push
sbb
dec
push
rcl
xchg
or
pop
adc
cmpsb
mov
cmp
pushf
pop
and
nop
nop
outsb
stos
dec
pop
imul
inc
jb
shlb
movsb
jb
jb
sbb
movsb
in
and
push
xor
push
out
cmpsb
loopne
movsb
pop
jecxz
mov
in
adc
mov
mov
loopne
pop
mov
adc
sbb
and
in
mov
push
pop
lcall
jo
xchg
pop
pop
pop
jp
rorb
mov
sub
nop
dec
sarl
pushf
inc
inc
jo
xchg
ds
cmp
mov
aam
movsl
cmp
add
push
jmp
les
pop
fs
outsl
adc
rolb
jb
and
adc
loopne
pop
push
andl
dec
cmpl
and
push
loopne
sbb
fcompl
imul
add
mov
out
and
call
aas
test
jmp
inc
nop
mov
push
cmp
mov
inc
mov
or
cwtl
cmp
xchg
test
lea
xor
push
popf
push
push
cmp
mov
imul
rcl
cltd
cs
pop
lods
xor
pusha
xorl
arpl
dec
inc
out
adc
fs
shlb
xor
cs
jl
or
inc
sbb
lcall
inc
insb
and
mov
mov
or
dec
rorb
inc
mov
out
jp
pop
aaa
cmc
pop
or
and
sbb
andb
or
daa
adc
push
push
sub
pop
dec
rorl
sti
mov
jbe
jle
rcl
inc
sub
add
jno
cmp
rcrb
jbe
cmc
cmpsl
or
add
movsb
xchg
or
xor
shr
sub
addr16
lock
movb
aaa
pushf
mov
push
stc
adc
ljmp
loopne
and
daa
sub
mov
push
lock
mov
add
jl
shrb
adc
jb
movsl
cmp
jne
xchg
xorl
push
push
xor
lea
or
mov
fndisi(8087
mov
or
inc
imulb
dec
rcll
add
push
bound
pusha
push
cmp
in
aaa
popa
aas
ss
xchg
mov
jae
movsl
sub
cmp
mov
xchg
and
inc
xchg
or
mov
xor
and
sbb
leave
push
xchg
and
mov
sti
nop
outsb
mov
mov
xor
enter
xor
dec
mov
jmp
and
adcb
nop
xchg
out
and
xor
and
cwtl
cs
imul
and
mov
xchg
je
loop
sbb
dec
xor
inc
lods
mov
xor
loope
xchg
test
nop
sbb
push
dec
inc
xchg
push
push
inc
test
sbbb
aam
test
nop
or
rorb
cmpsl
fnstenv
repz
mov
js
je
loopne
mov
mov
cmpsb
mov
lahf
call
cli
mov
rcll
inc
dec
push
test
aad
sahf
dec
je
sbb
mov
dec
test
insb
es
xchg
in
loope
lcall
aad
mov
test
aas
aam
sbb
sub
test
rcl
nop
test
jae
test
cmp
pop
test
fs
test
mov
cmpsb
cmpsb
and
xor
aad
hlt
jae
popf
stos
imul
push
push
rcll
nop
jns
add
jo
test
xchg
test
stos
test
test
test
test
mov
test
call
sbb
dec
inc
push
iret
test
ljmp
sarl
inc
es
shrl
jo
test
xor
les
stos
test
mov
mov
dec
push
fs
icebp
dec
dec
inc
or
test
xor
cmp
imul
sbb
pop
outsb
push
or
imul
sub
je
test
mov
xor
adc
test
ljmp
jo
add
adc
in
sbb
sub
sub
xor
test
test
fsts
imul
pop
hlt
jp
shrl
ss
jo
lea
js
rcll
test
enter
rcl
loope
mov
add
sub
jo
stos
imul
xor
nop
add
insl
into
push
rcll
insl
cltd
jbe
inc
inc
sbb
shrl
sbb
dec
add
sbb
push
test
fildl
and
xchg
inc
dec
test
scas
lcall
and
shrb
mov
cmpsb
mov
cmpsb
lcall
test
test
cmpsb
and
push
shrl
sbb
xor
test
sub
test
cwtl
push
test
rcr
insb
or
push
ret
jl
cmp
push
jbe
filds
xchg
add
in
mov
push
cmp
in
xor
or
test
add
mov
push
test
rcrb
mov
test
sbb
or
xor
pop
test
movsl
lahf
cs
ss
add
sti
lret
outsb
sbb
cmpsb
mov
imul
jo
add
pop
sbb
sub
cmp
pop
and
pop
push
mov
dec
dec
inc
test
popa
arpl
fsubl
jp
out
xchg
hlt
lock
inc
xlat
sub
les
dec
inc
test
cmpsb
mov
adc
push
sbb
shrb
imul
rcl
or
rcrb
mov
push
mov
mov
rcr
push
dec
test
xor
xor
xchg
xor
cmp
xor
xor
push
cmp
xor
pop
dec
dec
pop
cmp
dec
and
lcall
cltd
call
adc
push
stos
imul
xor
cli
cmp
cmp
rclb
mov
or
jno
ds
aas
xchg
icebp
leave
jmp
xor
mov
les
mov
mov
daa
icebp
mov
repz
mov
in
pop
xchg
sbb
xlat
or
orb
out
push
cwtl
fwait
xchg
test
loopne
aam
dec
pop
ret
sub
jbe
inc
push
mov
inc
push
pushf
loopne
inc
cmp
jbe
nop
push
addr16
mov
roll
test
jl
jge
popf
test
jbe
out
rolb
xorl
mov
sbb
test
add
pop
push
into
sub
inc
jb
enter
pop
adc
push
push
fbstp
mov
hlt
out
push
test
inc
jnp
add
lahf
es
xlat
jae
mov
and
repnz
mov
pusha
leave
adc
addr16
lock
push
mov
mov
dec
leave
jo
lret
push
pushf
or
sbb
lret
cmp
scas
enter
jl
pop
add
lret
and
push
xchg
scas
enter
je
ja
dec
out
mov
pop
pop
sub
shlb
int3
xor
sbb
push
leave
insb
cmp
mov
sbb
fmull
push
stos
xlat
jb
jae
popf
push
rcll
xchg
inc
cmp
add
push
bound
xor
ljmp
dec
mov
shr
aam
rolb
jl
add
sub
aam
in
cli
mov
mov
pop
and
jg
and
mov
inc
push
dec
jo
outsb
xchg
and
ja
and
movsb
adc
mov
mov
subb
subb
shrl
xchg
arpl
dec
hlt
out
or
enter
pushf
dec
adc
push
js
movb
notb
and
mov
inc
lcall
cltd
int
sbb
or
dec
cmp
das
jmp
push
ret
adc
xchg
test
and
jbe
fiadds
dec
push
fisttps
call
sti
dec
jmp
and
inc
mov
addb
push
cwtl
testl
mov
dec
sub
ret
push
inc
xchg
ret
aam
into
add
mov
mov
add
rolb
dec
ja
mov
push
dec
mov
dec
aaa
adc
inc
sub
pusha
inc
add
push
faddl
mov
lahf
xchg
test
push
add
and
movsb
sub
repz
add
inc
loopne
nop
and
je
loopne
andb
push
rcrb
cmp
pop
jbe
pop
inc
xbegin
shll
inc
add
scas
xchg
xchg
pop
add
lahf
pop
dec
push
jne
dec
mov
and
mov
adc
xor
xor
xor
xor
dec
inc
xor
xor
frstor
xor
pop
xor
fnsave
test
loop
dec
inc
out
cltd
xor
aad
lea
adc
nop
fs
mov
push
and
call
cmpsb
and
xor
adc
xor
es
or
push
scas
cmpl
ja
inc
outsb
jae
lea
and
push
cmp
adc
add
cmp
add
fwait
stc
dec
daa
lret
inc
movsb
add
incl
jl
je
and
xor
jp
bound
xchg
pop
xchg
inc
in
sbb
cmp
jl
inc
jmp
ljmp
popf
in
ljmp
xorl
cmpsl
cmp
addl
pop
dec
xchg
jbe
sbb
pop
push
jns
push
cmp
xor
out
mov
inc
sub
repz
in
and
in
clc
pop
and
adc
imul
dec
movb
outsb
adc
jmp
mov
sub
ljmp
inc
or
bnd
inc
pop
adc
repnz
cs
mov
nop
nop
shlb
sbbl
mov
hlt
sbb
push
inc
call
inc
outsl
inc
pop
inc
push
fcomp
mov
add
fldl
inc
rcr
xor
test
je
into
or
jne
push
movb
adc
mov
cmp
add
cmp
inc
jmp
dec
jmp
xor
rorl
fimuls
inc
inc
mov
pushf
call
jmp
inc
inc
inc
pop
je
pop
es
inc
or
insl
add
or
and
push
mov
xchg
jmp
mov
cld
pop
mov
js
ret
je
inc
or
xchg
imul
add
pop
and
cmp
leave
or
andl
mov
xor
inc
jmp
and
into
mov
jmp
sub
pop
pop
pop
cwtl
xchg
xchg
in
jns
hlt
push
sbb
sub
lcall
adc
mov
pop
cld
loop
pusha
popa
push
mov
add
push
in
cld
movsl
insb
pop
sbb
jle
je
ja
or
xlat
push
lea
adc
mov
jp
mov
jb
cmp
repz
enter
fisubrs
jge
push
push
or
ds
mov
repz
xor
aam
adc
push
stc
inc
test
ja
cmp
xor
cld
imulb
push
add
ret
push
sar
inc
imul
jl
call
jo
dec
rcpps
xor
dec
sub
hlt
dec
rolb
pop
jae
and
cmc
inc
adc
sub
or
push
es
cmc
mov
nop
je
dec
imul
sbb
and
out
ret
inc
xchg
out
pop
or
imul
mov
add
fists
mov
in
cmc
add
in
adcl
sbb
add
sahf
in
push
jb
push
pop
ja
mov
scas
lds
lcall
sub
mov
pop
jp
lock
rorl
adc
adc
loope
scas
lret
rclb
stos
add
xchg
arpl
les
icebp
push
cltd
add
xor
mov
mov
cld
and
jns
movsb
or
cmp
iret
xchg
xor
scas
mov
mov
add
pop
inc
pop
test
cs
xchg
ffree
or
int3
out
mov
enter
call
push
push
inc
mov
or
cmc
fists
mov
push
xlat
in
or
xlat
sbb
mov
mov
and
rcl
sbb
sahf
xor
xor
and
nop
mov
inc
sbb
les
sub
xchg
outsl
in
adc
or
push
lret
ja
push
push
fcoml
cmp
shl
jge
xchg
insb
and
or
xlat
jbe
psubw
push
add
pop
add
push
dec
and
jmp
aaa
xchg
ret
add
inc
nop
je
dec
pop
dec
pop
dec
sbb
lea
mov
sub
push
int3
inc
jl
nop
repz
add
loopne
lods
es
sarl
dec
inc
out
mov
aad
inc
aaa
lcall
xorb
out
mov
pop
rcrl
sti
dec
inc
xchg
dec
pop
and
inc
rolb
nop
mov
xlat
jg
cmp
mov
add
sbb
push
cmp
xlat
jg
pop
xorl
cli
pop
pop
repnz
dec
movsl
test
jne
push
imul
add
inc
xchg
mov
enter
add
push
inc
flds
sbb
rcl
pop
push
jge
mov
jle
or
jae
pusha
inc
mov
and
push
outsb
movsb
xchg
call
loope
add
enter
fwait
pop
mov
sub
mov
xorl
push
mov
add
sbb
dec
es
test
or
rolb
stos
movsb
fiadds
sub
sbb
pusha
icebp
pusha
sbb
jns
daa
addb
xor
inc
cs
add
push
rol
or
sbb
stos
cmp
xor
xor
add
dec
inc
mov
jns
cmp
in
pop
bound
jle
jo
xor
and
push
jmp
xor
hlt
add
mov
push
lcall
xor
fsubl
and
xor
movsb
mov
xchg
jb
add
add
or
loopne
inc
mov
mov
push
inc
mov
stos
inc
xor
sbb
push
stos
mov
pushf
in
push
add
clc
add
lcall
mov
ret
xchg
dec
nop
adc
imul
bound
or
sbb
stos
jecxz
nop
pusha
sbb
cmpsb
stos
fildl
rcr
pusha
fsubl
pop
add
lods
pop
stos
mov
jo
mov
nop
sbb
sbb
loopne
leave
xchg
push
mov
xor
test
inc
inc
sbb
pop
push
inc
dec
or
add
pop
sub
movsb
mov
pusha
pop
shlb
vmread
mov
adc
fwait
pop
inc
mov
mov
mov
movsb
jb
in
add
push
xorb
fstl
out
dec
in
jle
add
test
lahf
sbb
jmp
jnp
jbe
loopne
sub
rolb
sbb
test
push
add
add
test
shr
push
lea
add
mov
mov
xor
xor
push
popf
fstpt
push
sbb
dec
mov
xor
es
scas
push
rcl
xor
add
sub
out
and
sub
xchg
dec
adc
sbb
imul
cmp
and
call
add
or
fstps
hlt
xchg
push
mov
call
sbb
daa
pop
sub
out
add
out
roll
cmp
add
std
dec
xlat
inc
rolb
je
jns
iret
rcrb
mov
outsl
mov
test
adc
daa
lea
xchg
add
popa
inc
out
cltd
sbb
add
push
je
cmp
mov
add
out
push
xor
xchg
out
loopne
and
cmp
in
jle
mov
push
call
sbb
mov
insb
inc
add
or
jo
adc
or
mov
mov
daa
mov
inc
and
sub
es
xor
sub
daa
ret
inc
push
dec
dec
or
mov
sub
scas
push
movsl
sub
and
push
xchg
out
pushf
es
mov
mov
stos
mov
out
lods
movsl
mov
adc
sub
mov
dec
adc
or
jno
push
sub
hlt
icebp
and
xchg
call
lcall
adc
pavgb
add
dec
pop
adc
push
movsb
rorl
mov
loopne
add
inc
mov
push
sbb
inc
or
mov
sbb
lea
inc
cli
push
add
mov
add
xchg
and
testb
cmp
ret
inc
inc
stc
mov
adc
stc
mov
pop
stc
pop
or
or
out
movsb
data16
les
inc
int3
stc
dec
rolb
idivb
dec
mov
mov
push
push
or
cs
aad
cmp
push
lret
xchg
icebp
nop
pop
pop
clc
and
call
adc
inc
push
add
mov
adc
mov
out
jmp
stc
movsb
int
lods
fst
inc
inc
stc
or
inc
cmp
or
scas
movsb
adc
ljmp
cmpl
scas
mov
mov
call
xor
mov
mov
nop
cs
jecxz
loope
pop
stc
fxch
mov
mov
xchg
pop
stc
mov
cs
mov
stc
fadds
hlt
cwtl
loop
pushf
pop
and
push
pop
stc
mov
pop
stc
hlt
and
loopne
stc
push
pop
pop
and
jp
cs
pop
and
inc
stc
pop
or
call
test
stc
mov
aam
mov
xchg
mov
sbb
jbe
jmp
adc
sar
adc
or
jl
popl
cs
out
lcall
push
loop
and
and
xchg
stc
xchg
push
or
xor
inc
jo
push
sbb
pop
and
and
adc
rolb
stc
adc
and
mov
fmull
lock
stc
ffreep
mov
adc
cmpsb
mov
mov
sbb
and
or
fldl
adc
inc
mov
popf
sbb
imul
addr16
push
sbb
lcall
sub
out
imul
xor
adc
aam
mov
mov
subl
sbb
stc
iret
lds
xlat
stc
xorb
aad
pushf
sbb
mov
enter
stc
in
push
push
mov
loopne
cs
inc
adc
and
push
lock
daa
dec
lret
sbb
pop
stc
or
aam
mov
mov
and
fisttpl
sub
pop
test
in
mov
sbb
aaa
call
xchg
and
jmp
ja
or
dec
fldt
inc
fstpt
fisttpll
cmp
cmp
cmp
jp
repz
adcb
push
jmp
nop
std
and
adc
jo
leave
fistpl
je
mov
je
pop
xor
sub
pop
pop
xor
arpl
push
pop
xor
loope
or
and
ja
mov
fiaddl
pop
xchg
out
fstpt
ret
or
pop
xor
and
fisttpl
add
les
scas
mov
mov
dec
cs
aas
sbbl
push
push
jns
test
and
fs
pop
jae
pop
enter
mov
sbb
add
cmpsl
or
hlt
add
push
jno
nop
push
test
cmp
shlb
xchg
test
je
sti
mov
insl
sbb
xchg
cmp
pop
scas
inc
pop
jae
nop
scas
call
test
xchg
push
ljmp
dec
fs
test
push
push
bound
cmp
mov
dec
adc
dec
adc
dec
adc
scas
imul
or
and
add
gs
cwtl
insb
dec
pop
add
sbb
jae
fnop
imul
and
rcrb
fwait
sbbb
idivl
orb
fwait
fs
add
xchg
pop
rcrb
leave
fwait
enter
sbb
push
fwait
dec
ss
repnz
jmp
inc
mov
adc
bound
fs
data16
mov
xchg
fnop
adc
push
push
fwait
sub
test
or
jne
nop
and
sbb
mov
xchg
cmp
inc
pop
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsbl
jno
and
decb
or
adc
mov
dec
enter
xlat
inc
arpl
ljmp
ret
test
cwtl
nop
jnp
loopne
mov
je
cmpsb
sarb
js
xlat
pusha
cmp
lods
push
adc
aas
add
pop
mov
and
dec
xchg
les
dec
enter
or
jl
and
mov
in
sbb
je
outsl
nop
xlat
dec
xchg
mov
push
adc
sub
push
mov
inc
xlat
pop
adc
push
xchg
xlat
psubsb
popa
inc
aad
je
fnop
popa
inc
push
jo
cmp
fdivrl
xchg
cmp
stos
sub
xlat
cmp
mov
hlt
push
adc
rorb
call
mov
stos
jge
aam
or
inc
or
pop
sbb
adc
das
lahf
ljmp
call
mov
repnz
call
sub
add
call
pop
scas
xor
lock
call
fwait
mov
and
inc
call
mov
stc
repnz
movsb
lods
andps
movsl
pop
call
xchg
das
pop
mov
call
insb
stc
repnz
call
je
gs
pop
test
call
jge
movsl
shr
inc
sbb
cmp
test
mov
nop
sbb
adc
sub
cli
lret
movsb
dec
dec
in
in
fxch
movsl
repnz
les
lods
int3
mov
pop
shlb
xchg
mov
xchg
lret
fdivl
lret
test
test
in
inc
aam
xchg
lret
lock
es
jns
pop
sub
cld
adc
add
add
leave
or
je
out
or
or
loope
adc
mov
mov
mov
stos
and
dec
in
lahf
sub
xor
jae
xchg
dec
in
push
xor
push
push
inc
gs
dec
out
rorb
cs
adc
and
or
pop
add
add
or
jo
pop
and
enter
jge
and
xor
daa
int
jo
xor
sahf
jl
sub
cmp
push
call
mov
je
data16
js
movsb
sbb
push
adc
inc
lcall
sbb
cmp
dec
push
and
sbb
cli
cmp
xchg
xchg
mov
sbb
imul
pusha
in
lods
mov
cli
mov
xchg
out
mov
push
pusha
and
jmp
and
sbbb
shlb
xchg
je
out
add
xorb
mov
inc
inc
and
adc
aam
fs
pop
mov
outsb
push
dec
xor
in
sub
dec
mov
mov
shlb
cmc
shlb
ja
dec
xor
sbb
test
nop
outsb
dec
popf
outsl
inc
dec
shll
cmc
push
and
sbb
rcr
popf
xor
xor
cli
push
xor
xchg
enter
call
insb
leave
cld
mov
xor
mov
mov
push
ja
jae
sbb
xchg
das
inc
adc
inc
movsb
adcb
popa
fsubrp
addb
pop
adc
jp
ret
push
mov
sub
push
dec
sbb
cmp
nop
sarl
adc
dec
push
xchg
sarb
mov
ss
nop
inc
rclb
sbb
mov
roll
pop
mov
push
push
mov
jb
es
mov
mov
pop
push
or
sub
push
and
rcll
xor
adc
shlb
and
pushf
nop
sti
sbb
push
mov
add
rcll
inc
jmp
into
jp
add
add
fbld
fs
cwtl
push
adcl
or
fs
dec
push
and
data16
stos
cmpsl
xor
push
mov
test
movsl
outsb
mov
and
mov
fld1
inc
cmp
mov
mov
push
das
in
inc
mov
push
sub
pop
sub
cmp
cli
mov
pop
jmp
in
push
pop
adc
cmp
sub
adc
inc
sbb
mov
xchg
pop
pop
cmpsb
mov
xchg
lods
cs
xor
pushf
xchg
pop
cmpsb
in
fwait
and
sub
xchg
das
push
mov
je
cs
gs
test
add
rclb
fists
in
stos
dec
push
ret
inc
jo
gs
inc
xorb
hlt
sub
push
or
inc
ret
gs
mov
add
sub
pop
cmpsb
je
xchg
cmp
hlt
call
xor
fstpl
xchg
xor
gs
ja
xchg
adc
lds
push
cmpsl
xchg
call
shlb
dec
xchg
jns
rcrb
jp
xchg
push
pop
je
xchg
cmp
xchg
jae
andb
mov
addl
xchg
xchg
and
in
pop
lahf
jo
cltd
xchg
and
sub
inc
lods
fwait
shlb
push
xchg
or
test
adc
adc
fisttpll
adc
pop
mov
adc
sti
call
outsb
es
out
mov
je
adc
and
xor
push
dec
and
xor
mov
lods
push
mov
dec
js
jmp
loop
mov
subb
xbegin
testb
imulb
ja
test
gs
call
mov
ret
or
mov
dec
sahf
adc
gs
out
mov
movl
or
or
gs
adc
bound
mov
push
decl
push
and
adc
inc
dec
inc
jecxz
or
dec
dec
inc
ljmp
pop
pusha
xchg
mov
movsb
add
movsb
sbb
aad
xor
push
aad
mov
inc
sub
add
sub
push
or
aad
repz
scas
sbb
aad
out
shlb
and
movsb
shll
dec
mov
push
jno
mov
xchg
mov
adc
out
enter
xchg
negl
arpl
bound
mov
mov
cmp
and
aaa
roll
sarb
dec
les
jmp
popa
mov
mov
add
shlb
mov
add
inc
ret
mov
cmpsb
sub
cwtl
adc
xor
dec
js
cmpsb
popa
pop
or
xchg
pop
add
cmp
or
or
add
mov
pop
sub
mov
jmp
add
add
je
mov
cs
mov
dec
insb
inc
mov
xor
aam
mov
lods
add
les
mov
scas
inc
cmp
ds
or
cmp
xchg
add
cmp
cld
jb
inc
dec
inc
popa
int
out
push
add
test
rcrb
dec
adcb
lods
mov
mov
test
dec
and
pop
pop
dec
fs
and
adc
mov
mov
dec
cmp
mov
ret
add
call
out
bound
fisttpll
mov
inc
out
push
xor
out
pushl
inc
and
mov
xorb
into
jle
minps
loopne
mov
xor
cwtl
and
sub
fwait
add
adc
add
and
jp
out
out
and
inc
nop
fiadds
xor
out
cs
inc
or
adc
xchg
ret
and
sub
adc
pushf
loop
out
jp
push
or
pop
scas
push
addb
mov
fwait
cmp
pop
sahf
cmp
pop
mov
add
pop
dec
push
pop
fwait
rolb
xchg
adc
jmp
dec
dec
sbb
mov
nop
mov
inc
andl
pop
shll
mov
out
push
pop
loopne
fwait
pop
mov
push
pop
mov
daa
sahf
int3
mov
cli
push
pop
adc
pushf
inc
in
mov
cmpsl
inc
adc
mov
mov
or
call
outsb
dec
push
stc
adc
shrb
ljmp
jg
push
mov
pop
cmp
and
push
rclb
jae
test
movsb
xchg
dec
testl
jmp
imul
dec
xor
fst
cmp
push
xor
mov
mov
pop
and
or
faddl
lods
mov
mov
fs
mov
or
fwait
addb
mov
jae
or
mov
xor
xor
jae
inc
xchg
jae
insb
xchg
cmp
jae
add
xchg
out
addr16
subb
test
add
dec
sbb
and
or
mov
imul
popf
jg
cmp
jg
jae
nop
or
scas
or
test
sbb
arpl
sub
sub
mov
je
push
call
aas
cs
fdivrs
dec
cmpsb
mov
scas
pop
lcall
mov
xchg
out
loopne
or
mov
and
push
daa
insb
movsl
hlt
adc
or
cld
sbb
stos
sub
sub
mov
mov
xor
adc
mov
or
ljmp
fldenv
adcb
jae
stos
add
addl
jb
test
shrl
arpl
fwait
repz
cmpb
jno
divb
repnz
xlat
fwait
push
jnp
cltd
imul
adc
out
pop
bound
jb
adc
xchg
fwait
mov
enter
adc
jb
inc
dec
jae
insl
adc
sbb
xor
sti
mov
sbb
pop
cmp
lock
adc
inc
call
sti
mov
in
xchg
adc
push
aam
pusha
xlat
ret
xchg
sub
icebp
in
adc
xchg
stos
pop
or
mov
pop
mov
nop
pop
mov
xchg
sbb
pop
movsb
repz
mov
lret
inc
mov
adc
add
repz
add
and
push
or
mov
int
mov
mov
dec
mov
cmp
cltd
inc
mov
add
push
pop
daa
adc
outsb
nop
add
mov
mov
pop
jmp
dec
pop
jl
and
jmp
es
or
or
or
mov
adc
fwait
dec
sub
out
and
add
iret
repz
or
sbb
ret
cmp
repz
jbe
push
imul
or
sbb
sahf
out
push
mov
pushf
pop
push
lods
idivl
repz
mov
inc
jge
repz
push
nop
movsb
push
out
sahf
cmpsl
push
xchg
jl
push
inc
jns
negl
push
push
sahf
out
sbb
repnz
iret
repz
fmulp
mov
ja
jnp
ret
into
sbb
incb
add
sarl
es
loop
sbb
iret
aam
mov
out
ds
sbb
pushf
scas
xor
out
lret
or
and
cmp
repz
pop
data16
repz
test
jnp
repz
in
decb
ss
or
iret
inc
push
shr
xor
mov
push
sahf
mov
daa
rcr
negl
clc
adc
sub
cmp
aaa
iret
repz
push
push
cmp
adc
repz
push
jbe
int
ljmp
jle
cwtl
cmpsl
insl
xorb
das
out
iret
dec
test
dec
jecxz
repz
jns
jbe
push
scas
test
push
mov
insb
das
out
lods
or
stos
add
cmp
adc
aam
jne
pop
mov
dec
sub
sub
and
or
dec
push
je
sub
fwait
loop
xor
ja
push
lods
add
loop
dec
xlat
lahf
adc
lret
push
fdivrl
xor
xor
inc
scas
xor
pop
ret
add
jae
outsl
ss
xor
xor
ret
addr16
bound
add
mov
xchg
xor
mov
sub
xchg
mov
outsb
aas
das
mov
pop
call
cmp
mov
jae
mov
sbbl
cld
outsl
inc
imul
sub
out
andl
push
pcmpeqd
mov
pusha
cmp
or
sub
add
sub
cmp
ret
cs
ret
stos
outsl
adc
data16
add
sbb
adc
cmp
mov
jg
lock
ret
je
add
cmp
test
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
cwtl
xor
rorb
ja
jb
inc
nop
add
sbb
dec
xor
xor
mov
and
pop
dec
imul
test
jg
dec
jae
inc
jne
outsb
je
ss
jg
arpl
xor
jbe
les
jnp
inc
xor
sub
outsl
ljmp
sub
inc
inc
xor
xor
xor
jge
std
sub
xor
cmp
inc
stos
xor
ss
xor
cmp
in
lahf
sbb
xor
xor
aaa
clc
inc
inc
xor
mov
aam
xor
mov
lret
xadd
add
sub
fnstcw
jo
or
cld
shll
fidivrs
cmp
lcall
insb
pop
push
xor
or
push
and
inc
aaa
xchg
xor
inc
pop
dec
loopne
inc
and
jl
mov
rolb
mov
xor
dec
and
cmp
ss
mov
xor
add
push
lds
dec
outsl
mov
dec
xchg
rcll
loopne
lock
test
in
scas
push
push
fcoms
inc
dec
hlt
imul
insb
push
dec
pop
push
lods
sub
inc
push
inc
out
adc
push
sub
cmp
repz
adc
pop
aaa
mov
inc
mov
lods
sahf
add
fnstcw
and
hlt
test
push
mov
test
insb
adc
push
cmpb
mov
lret
and
outsl
xor
imul
sub
je
push
push
jns
cwtl
mov
and
inc
cmp
add
cmp
sbb
xchg
sub
push
pop
mov
mov
popf
mov
mov
xchg
neg
rolb
fsubp
inc
inc
dec
insb
insb
mov
xchg
and
outsb
adc
ss
ret
lret
rcl
add
jo
fld
dec
inc
xor
or
pop
subl
pusha
mov
inc
cltd
cmpsl
pop
add
and
lods
adc
roll
inc
out
jne
mov
push
and
mov
jnp
inc
ljmp
push
imul
inc
xchg
loopne
jns
popf
fimuls
sub
scas
je
dec
fs
sbb
lods
scas
imul
push
jo
insl
ret
jecxz
adc
sbb
out
movsl
cmpsb
and
dec
movsb
imul
xchg
dec
jmp
outsl
push
out
pop
arpl
inc
cs
push
push
push
add
cmpsb
les
push
add
fildll
push
xchg
dec
fsubl
imul
fsubrs
add
lds
fdivl
rorl
lcall
mov
and
push
push
or
push
and
dec
loopne
repnz
rolb
inc
inc
sbb
and
rol
sub
and
push
adc
pusha
aaa
and
dec
sbb
sbb
sbb
push
mov
addr16
push
or
inc
mov
incl
sbb
sbb
fadds
adc
jns
out
orb
or
add
cmp
das
push
adc
cmp
push
adc
sbb
out
sbb
sbb
iret
cmp
sbb
push
das
push
pop
stc
sahf
imul
cld
and
cli
scas
stc
cmp
js
jns
stc
jp
jno
out
push
cld
fdivr
mov
cmpsl
push
mov
add
mov
out
les
adc
pop
mov
mov
lds
adc
bound
mov
push
inc
adc
ja
jns
ds
cmp
xor
adc
mov
add
adc
sahf
out
ds
cld
or
in
int3
jno
out
les
mov
pushf
push
xchg
call
iret
jnp
push
mov
iret
jo
push
sahf
out
mov
dec
iret
push
sahf
out
inc
cmp
xor
cmp
repz
sub
sbb
cmp
repz
or
out
ds
add
cld
or
hlt
sahf
out
sahf
call
movsb
jns
out
nop
jo
xor
repz
repz
int3
mov
insb
iret
repz
inc
sub
adc
cld
sahf
out
lcall
jl
out
js
sub
aam
repz
sarl
jns
fwait
loope
add
call
cwtl
sbb
adc
jl
inc
dec
dec
xor
insl
adc
xchg
pop
pop
mov
pop
repz
xchg
cmp
inc
xchg
adc
dec
adc
mov
arpl
inc
inc
add
adc
push
inc
dec
cmp
gs
and
test
xor
mov
push
pusha
test
dec
sarl
push
jecxz
gs
adc
dec
les
pop
aas
mov
adc
and
cli
out
clc
xor
mov
orb
dec
les
ja
adc
push
sarb
fsubrs
inc
cmp
outsb
jo
cmp
stos
lods
push
ret
jae
adc
decl
xchg
inc
pusha
adc
add
mov
js
shrb
mov
iret
out
mov
andb
rolb
ret
jns
inc
push
pushl
rorl
add
movl
inc
mov
jnp
out
jnp
je
jae
insb
add
pop
stc
sbb
xor
mov
push
je
imul
inc
pop
push
fidivs
arpl
decl
outsl
mov
jo
push
adc
xor
jp
jo,pn
bound
jecxz
and
jnp
cs
daa
push
push
push
and
fldt
scas
mov
jl
add
pop
ja
lahf
add
add
mov
loopne
xchg
mov
ds
and
mov
add
enter
jbe
sbb
test
das
aas
fcomp
dec
es
cmp
mov
ss
insb
xchg
bound
sete
int3
adcb
test
jg
jbe
popf
popa
out
add
dec
jb
dec
xlat
jns
pop
rcr
in
fisttps
push
lcall
pushf
setl
lret
xchg
mov
test
adc
fisttps
push
popf
jl
in
push
sbb
jo
aas
sbb
dec
call
adc
popa
dec
xor
mov
jns
and
rorl
pushf
jb,pn
aas
mov
dec
push
adc
iret
fcmovnbe
out
cmp
shll
xchg
in
jp
fisttpll
fisubrl
fs
loopne
jecxz
imull
dec
adc
xor
dec
sahf
loopne
daa
lock
jnp
enter
mov
fistpl
mov
push
xor
pop
test
push
sbb
pop
cmp
inc
nop
testb
push
dec
imul
out
dec
mov
add
insb
out
pop
sbb
push
lcall
insb
iret
and
and
inc
push
lcall
dec
jae
outsl
ja
xor
mov
xchg
sub
jecxz
lret
push
sub
add
sbb
or
and
xor
and
add
inc
repnz
sbb
jp
outsb
inc
lods
mov
adc
add
ljmp
mov
pusha
mov
bound
ds
push
jb
mov
adc
inc
add
insl
jo
shrl
dec
pop
outsb
push
add
mov
sbb
jle
xor
mov
jae
inc
outsb
iret
push
push
jae
push
adc
popa
sbb
fwait
ret
or
inc
gs
pop
sbb
adc
pop
fmuls
cmp
push
inc
sbb
add
push
jno
push
add
and
add
es
mov
inc
push
mov
dec
push
push
pop
das
push
mov
adc
cmp
push
jo
jb
jns
mulb
sbb
and
sbb
xor
lods
cmpsl
xchg
mov
xor
push
sbb
divb
sbb
addr16
adc
jge
pop
jnp
jne
insl
inc
pusha
inc
and
test
and
imul
sub
push
jecxz
xor
add
adc
push
inc
add
fbld
jne
fisubs
lods
gs
flds
jmp
add
dec
stos
fcmovnbe
sub
and
push
push
es
pop
sarb
xchg
adc
ret
and
popf
mov
pop
ds
sub
inc
lahf
clc
int3
pop
je
push
dec
xor
dec
add
pop
lret
cltd
mov
inc
cs
out
jecxz
mov
fidivrl
adc
jecxz
and
push
call
aaa
adc
lahf
outsb
adc
ret
or
and
add
mov
inc
jne
aas
das
pop
dec
rolb
outsl
mov
rcrb
pop
sub
mov
lret
stc
add
push
lcall
orb
test
fadds
add
pop
pop
mov
dec
pop
addr16
insl
mov
bound
arpl
lds
mov
lret
mov
and
push
outsl
jle
dec
sbb
xchg
dec
clc
aad
shlb
add
push
inc
add
add
adcb
sbb
lret
mov
lock
jecxz
add
mov
out
pop
loopne
xchg
jb
mov
inc
mul
js
adc
mov
inc
jmp
enter
sub
ja
js
aaa
dec
inc
dec
pop
or
shlb
sbb
inc
cmc
inc
sbb
lods
sbb
inc
xchg
jno
jnp
push
stos
xorb
ja
sbb
mov
add
inc
jp
pop
jnp
in
mov
stos
iret
add
jo
add
adc
xor
rcl
sbbb
mov
movsl
cs
sub
add
aam
clc
dec
pusha
push
jo
mov
add
jno
cmp
dec
xchg
mov
scas
into
or
jmp
in
xchg
add
cmpsl
ljmp
dec
imul
adc
mov
iret
pop
add
pusha
dec
lret
je
xchg
into
out
inc
fwait
sbb
outsl
inc
cmpsl
add
push
jo
jo
mov
imul
pop
sub
push
and
jns
cmp
add
jae
rolb
inc
adc
add
je
ja
jno
sbb
add
xor
das
cmp
shlb
sub
dec
mov
mov
lods
pop
sarb
pop
mov
out
into
insb
sbb
add
lcall
push
dec
dec
xor
sahf
ret
cmp
fbld
lret
fistpll
jae
cmp
pop
ficomps
mov
push
popa
je
mov
and
push
sbb
and
adc
aam
push
jecxz
inc
rcl
insb
xor
and
daa
sub
sbb
inc
and
pop
add
mov
pop
push
insb
push
xchg
push
xchg
push
punpcklbw
sub
sbbb
dec
xchg
js
pop
and
add
scas
les
cmp
mov
add
mov
rcl
add
rorl
in
inc
dec
add
inc
cmp
cmp
xor
sti
fcoml
or
push
ret
int3
lcall
jmp
pop
xlat
or
pop
hlt
mov
pushf
jo
or
inc
adc
and
mov
xchg
inc
add
adc
lock
mov
lcall
jns
xlat
and
or
xor
out
add
out
lock
enter
jns
repz
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
in
sahf
test
push
iret
repz
inc
cmp
and
ds
repz
cld
in
lock
push
loopne
cmp
repz
fcom
enter
repz
test
mov
cmp
repz
xor
and
imul
add
in
hlt
out
sahf
out
in
int3
mov
lods
mov
mov
js
repz
sub
and
dec
rcrb
dec
test
adc
inc
and
add
pop
add
cmp
mov
sahf
dec
lcall
loopne
out
testl
lock
push
and
data16
pusha
insl
aaa
addr16
push
aaa
jns
sub
jbe
adc
addb
adc
std
mov
add
dec
add
bound
mov
and
sbb
or
mov
push
fs
scas
imul
iret
jne
test
sbbl
dec
mov
addb
inc
lods
in
mov
push
pop
jo
jo
insl
pop
add
in
cmp
loope
les
inc
and
xchg
outsb
pop
push
and
lret
sub
adc
xchg
cmp
insl
jbe,pn
and
cltd
sbbb
outsl
xor
xor
ds
je
rorb
or
xchg
outsl
jb
imul
xor
and
gs
pop
mov
xchg
imul
or
inc
js
and
rcr
insb
and
pop
or
or
xorl
xchg
add
jae
popaw
insb
into
mov
jnp
dec
jns
pop
andl
sbb
mov
pop
in
ds
inc
add
inc
pop
pop
adc
in
and
fcmovbe
add
les
xor
sbb
pushl
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
shll
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
lcall
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
jmp
cmpl
aad
fnstsw
cmp
cmp
cmp
cmp
sub
ret
call
aas
push
lock
idivl
or
incl
xor
xor
xor
push
xor
xor
js
popf
xor
xor
lcall
xor
xor
xor
xor
mov
xor
xor
xor
xor
jmp
inc
xor
xor
xor
xor
xor
xor
xor
cld
jmp
fidivl
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
cli
sar
jno
mov
aaa
loopne
add
or
decl
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
lock
cmp
pop
cmp
cmp
cmp
cmp
cmp
push
adc
hlt
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
dec
nop
push
test
jo
test
mov
aas
adc
aas
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
pushl
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
pushl
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
ja
pushl
xchg
xor
xor
xor
cmp
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
lcall
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
clc
dec
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
adc
jbe
pop
cmp
clc
push
or
cmp
pop
xor
push
xor
and
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
jg
xor
lcall
clc
xor
xor
test
sar
xor
xor
out
in
xor
scas
clc
xor
ljmp
lods
cmp
pop
lods
cmp
cmp
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
test
loop
cmp
std
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
cmpsb
pusha
outsb
xor
xor
mov
pushl
sbb
xchg
cmp
cmp
mov
mov
std
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
loop
xchg
mov
adc
dec
aas
push
mov
cmpb
dec
mov
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
jg
pop
fisubrl
xor
loop
xor
xor
pop
jge
pushl
js
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
add
or
aaa
and
pushl
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
decl
cmp
test
popf
cmp
xor
pusha
cmp
mov
clc
pop
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
jg
lcall
cmpb
cmp
push
stos
cmp
cmp
dec
mov
jg
fstpt
loopne
in
jmp
out
cmp
repnz
cld
stos
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
ljmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
sbb
cmp
dec
cmp
addr16
inc
cmp
lea
scas
cmp
jg
cwtl
ds
ds
call
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
daa
sbb
or
push
xor
insl
std
rcll
stos
lcall
fidivl
in
jg
push
xor
xor
xor
xor
ljmp
ret
xor
xor
xor
xor
xor
xor
mov
or
xor
xor
xor
scas
jno
xchg
xor
xor
xor
mov
xor
xor
xor
mov
ret
jge
xor
fwait
sahf
cmpsb
mov
bound
shlb
cmp
sbb
sub
jmp
aaa
cmp
mov
mov
dec
or
dec
cmp
cmp
cmp
cmp
or
add
mov
xor
cmp
bound
data16
push
outsb
jg
cld
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
jg
stc
cmp
cmp
cmp
jle
mov
clc
jg
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
push
and
and
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
jmp
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
fbstp
xchg
cmp
cmp
cmp
mov
and
cmp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
pop
jg
or
mov
fwait
xor
xor
dec
or
jl
pop
push
repnz
aas
xor
incl
lock
pop
xor
fsub
adc
es
dec
ss
or
outsb
notb
ss
in
and
cmp
cmp
aaa
lods
xchg
cmp
mov
or
sbb
cmp
pop
push
pop
loopne
push
imul
cmp
test
mov
ret
cmp
pop
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
sub
std
cmp
cmp
cmp
pop
sarb
inc
cmp
cmp
hlt
adc
cmp
ds
cmpb
cmpsl
ds
ds
subl
aas
sbb
addr16
loope
xchg
ret
cmp
aas
sar
in
xor
pop
xor
xor
cmp
or
xor
xor
xor
xor
cli
call
xor
mov
xor
push
lcall
clc
pushl
aaa
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
cmp
mov
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
js
clc
jmp
cmpb
aas
fdivrl
loop
out
out
pop
rclb
aaa
loope
lahf
sub
jne
adc
xor
jae
cmp
hlt
pushl
jne
jg
xchg
xor
xor
xor
clc
cld
pop
daa
pop
hlt
xor
xor
ljmp
jg
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
jmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
inc
clc
incl
cmp
inc
xor
xor
lcall
decb
call
xor
int3
mov
xor
xor
lcall
and
int3
xor
cmp
sub
sub
xor
fbstp
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
inc
mov
js
jl
cmpb
cmp
pop
adc
push
mov
push
loope
fmulp
cmp
mov
cmp
cmp
stos
stos
scas
ds
cmp
inc
lock
dec
cld
push
jg
ljmp
pop
stos
sbb
and
and
sub
pop
cmp
cmp
xor
cmp
inc
cmp
jg
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
je
pop
incb
cli
jl
cmpb
push
mov
nop
cld
pop
pop
lcall
mov
aas
inc
loope
jmp
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
ja
aam
fdivrs
loopne
clc
jbe
push
filds
xor
xchg
xor
xor
xor
pushl
inc
xor
xor
cwtl
xor
xor
xor
xor
es
push
popa
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jmp
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
ss
pop
cmpb
aaa
or
adc
adc
aaa
sbb
and
and
sub
sub
aas
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
pop
test
call
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
jo
mov
movsb
aaa
test
mov
mov
decl
aaa
les
enter
shlb
aam
fdivs
fcompl
inc
pop
and
in
out
aaa
hlt
xor
sub
cld
aaa
hlt
add
or
adc
adc
sbb
ja
push
out
mov
ret
fdivrl
call
pusha
cmp
mov
cmp
jmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
rclb
push
cmp
test
ljmp
mov
mov
cmp
mov
mov
cmp
shll
movsl
mov
or
sub
jmp
negb
stos
add
repnz
movsb
fs
lret
lret
mov
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
sti
sti
out
aaa
stos
mov
push
lret
aaa
ljmp
gs
mov
aaa
mov
lahf
sub
pusha
out
push
xor
xchg
push
add
or
xor
loope
addb
dec
in
add
jge
mov
mov
push
stos
add
out
mov
sbb
out
sub
test
sub
addb
repnz
push
xchg
sub
sub
or
add
insb
and
leave
repz
cwtl
and
push
shr
push
rcrb
out
adc
jo
push
pop
xorb
pushf
pop
or
mov
daa
sub
lahf
or
mull
fs
daa
xchg
xor
add
jl
fldenv
addb
leave
xchg
jo
shll
and
and
loopne
sbb
dec
insl
mov
dec
aas
outsl
test
sbb
call
mov
xchg
sbb
out
mov
push
sub
je
jae
test
and
jle
cld
add
inc
in
decb
jl
or
incl
jb
hlt
lock
inc
cmpsb
xor
mov
sub
pop
or
dec
xchg
and
xchg
and
mov
inc
or
and
aas
rcrb
es
aaa
pop
cmpsb
cmc
and
sbb
mov
dec
cmc
iret
add
je
mov
rol
inc
mov
add
push
inc
inc
add
test
mov
jecxz
cmpsb
jle
and
or
add
push
or
hlt
or
adc
jne
and
int
dec
push
fwait
es
add
inc
jbe
xor
adc
pop
andl
les
push
add
das
or
sbbb
adc
outsl
cwtl
shr
add
pop
std
push
sub
test
jmp
inc
cmp
add
test
jmp
cmp
jne
negb
test
outsl
inc
add
pop
jmp
push
cmp
call
pusha
dec
cld
cs
mov
inc
xor
call
adc
dec
sub
xchg
or
pop
sub
mov
cmp
fiadds
xchg
insb
int
lds
dec
add
xchg
or
xor
pop
add
or
outsl
and
mov
push
or
and
fstps
clc
dec
inc
loop
sbb
jmp
jbe,pn
ret
movsb
dec
cmp
sbb
and
xchg
rcr
push
push
dec
out
xchg
nop
aas
lea
sbb
popf
insb
push
xchg
pop
clc
fstpl
or
mov
and
leave
add
dec
test
xchg
jo
mov
pop
ret
adc
mov
push
xor
mov
push
pop
push
and
cmpsb
mov
push
and
adc
aaa
sub
insl
dec
cmp
aaa
mov
mov
pusha
imul
push
adc
cld
arpl
js
jecxz
pop
add
adc
push
inc
cwtl
and
xor
add
imul
push
add
addr16
ret
pushl
push
fnstenv
fwait
push
xchg
or
insb
add
xorb
sbb
aad
pop
sub
add
lods
sbb
inc
mov
cmp
call
rolb
sub
pop
add
push
rolb
mov
fldl
push
xorb
pop
aaa
adc
ss
or
pop
and
aaa
inc
or
pop
sbb
xor
dec
pop
pop
pop
lds
or
xlat
addb
dec
jle
ror
inc
jo
push
lods
mov
sbb
sbb
negb
or
fildl
das
or
push
inc
jmp
and
imul
pop
shl
cwtl
mov
add
gs
pop
adc
push
adc
sub
sub
repnz
mov
sub
pop
inc
ss
sbb
or
xor
pmaxsw
or
aam
push
jge
sbb
in
push
inc
push
mov
rolb
lahf
jmp
addl
lods
imul
cmp
sub
test
sbb
dec
imul
imul
fwait
cmp
inc
call
xlat
test
mov
dec
lret
mov
dec
lret
mov
dec
lea
adc
or
ja
xor
shlb
scas
stos
xor
inc
add
popa
sub
and
insl
pop
inc
into
or
call
jmp
inc
cmp
and
icebp
roll
lds
adc
cmc
mov
push
and
dec
push
sbb
inc
add
push
std
cmp
pop
imul
lea
and
frstor
leave
xor
pop
xor
xchg
fs
in
shll
sbb
call
neg
adc
mov
fmuls
and
and
call
lods
inc
sahf
jbe
mov
dec
stc
inc
and
leave
jp
pop
les
cmp
popa
or
mov
cmpsl
mov
pop
inc
mov
and
push
test
sbb
call
dec
lods
jmp
or
cmpsl
fsubrl
xorb
sbb
mov
cltd
mulb
mov
push
add
inc
adc
add
and
mov
or
sub
push
fwait
stc
mov
adc
test
gs
adc
lcall
or
sbb
xor
xlat
loop
adc
sbb
adc
andl
jbe
fstpt
mov
or
lret
xor
pop
jle
ficoml
or
sbb
je
pop
and
adc
or
cmp
add
push
or
inc
fimull
lods
scas
add
mov
shrb
push
sbb
xor
mov
add
sub
push
adc
out
insb
subb
ret
repz
pop
add
push
pop
add
cmp
inc
inc
iret
pop
leave
mov
ja
dec
call
rolb
inc
inc
mov
pop
dec
mov
xchg
nop
shlb
mov
ret
mov
inc
pop
test
jae
xlat
test
sbbl
jg
and
cmp
mov
nop
push
and
es
add
jne
cmp
out
in
popf
xchg
out
out
ss
jg
xchg
jns
out
push
insb
fs
push
dec
rorb
inc
out
push
pop
adc
jmp
movsb
sub
enter
fmull
xorb
fnsave
pop
nop
inc
push
fs
mov
call
dec
rorb
mov
mov
out
iret
cmp
call
push
push
xchg
jns
or
and
add
out
cmp
inc
dec
pop
out
push
push
push
out
pop
out
fidivl
mov
adc
jle
and
je
sub
xchg
cmp
cltd
push
xor
addb
enter
cltd
mov
popa
hlt
sbb
push
addr16
xor
in
test
aaa
loopne
xchg
push
stc
adc
mov
jnp
mov
pop
in
dec
loope
jnp
repz
jo
jb
repz
scas
jnp
cmpsl
ret
mov
inc
shlb
or
cmpsb
nop
sbb
es
xor
daa
es
or
pop
andb
lcall
daa
imul
push
xchg
daa
daa
daa
enter
daa
daa
sub
sub
sub
sub
xchg
mov
sub
sub
sub
add
shrl
sub
add
cmpsb
sub
sub
pushf
mov
cmp
arpl
aad
adc
jo
mov
mov
add
push
adc
mov
test
add
inc
stos
add
mov
insb
lret
js
lods
subl
into
out
adc
sbb
cmp
inc
push
jp
push
lock
jp
stc
push
fisttpl
ret
clc
fs
dec
sbb
adc
and
addr16
nop
sbb
leave
cwtl
addr16
sub
jo
inc
push
mov
jg
fisttps
mov
mov
or
adc
adcb
pop
inc
inc
test
addr16
jge,pn
jo
jle
sub
movhps
addr16
adc
push
rcrb
sub
inc
or
iret
push
nop
xchg
rorl
adc
andb
inc
inc
aaa
adc
and
add
test
popa
stos
das
xor
pop
test
cmp
adc
jle
loopne
or
sbb
addr16
adc
nop
rcrb
jb
add
or
cltd
push
add
add
jmp
add
add
das
push
mov
repnz
mov
mov
xchg
add
sub
sbb
sbb
pop
cltd
inc
mov
xchg
mov
cltd
cwtl
inc
push
and
pop
push
call
outsb
lret
rol
inc
ja
and
mov
dec
adc
dec
outsl
cmpsl
or
push
xor
mov
push
adc
and
cwtl
pop
in
inc
loop
cltd
pop
sbbb
in
sub
xchg
sbb
mov
rolb
pusha
sub
sbb
jb
cwtl
test
mov
jmp
cmp
dec
cltd
adcb
pop
ljmp
mov
xor
cltd
sub
add
mov
fcoms
add
pop
push
lds
xchg
popf
pop
cmp
sub
mov
xchg
addl
adc
xchg
xchg
jmp
outsb
adc
pop
aam
dec
fs
insb
push
xchg
or
pop
lds
xchg
test
and
fcoms
mov
mov
mov
mov
xchg
mov
adc
sahf
sub
push
fistps
insl
pop
cmp
mov
jmp
fsubs
pop
aam
xchg
into
adc
xchg
jnp
push
ja
adcb
ficompl
jo
bound
xchg
fsubs
mov
jbe
push
insb
push
notb
in
ficoms
cmp
push
adc
lret
pop
insb
push
xchg
loopne
inc
sub
pop
inc
enter
add
mov
bound
push
mov
ss
out
mov
mov
cwtl
shrl
ret
nop
pop
test
mov
mov
pop
adcb
pop
adc
pusha
ss
mov
or
xor
inc
das
push
xchg
lds
xchg
or
or
or
and
dec
cmpsl
jnp
pop
adc
icebp
mov
pop
rol
and
je
nop
xchg
movsb
pop
adc
scas
sbbb
rorb
outsb
jmp
xor
sub
nop
and
push
js
imul
nop
pop
mov
push
inc
pop
inc
or
pop
and
add
je
imul
mov
dec
sbb
popa
mov
movsb
pop
and
xor
ret
pop
xchg
pop
dec
sbb
in
ds
or
mov
repz
loopne
xor
shlb
pop
mov
inc
nop
scas
repnz
mov
pop
adc
sub
and
and
xor
cmp
and
and
inc
pop
inc
dec
mov
and
dec
inc
pop
cmp
cmp
das
pop
mov
mov
frstor
pop
push
call
add
xorl
cmp
je
adc
fdivs
jmp
push
inc
mov
pop
sbb
or
call
inc
into
add
xor
nop
dec
xchg
dec
pushf
sbb
sbbb
dec
pop
lret
enter
popf
sbb
push
addb
mov
or
cmp
dec
jmp
test
daa
dec
jno
cmp
push
and
dec
outsb
cmpl
or
add
fistpl
pop
nop
push
pop
call
cmp
pop
push
sbb
mov
popa
or
add
adc
dec
sub
xchg
push
testb
inc
xchg
inc
and
aas
lcall
aam
inc
shll
fstl
fstps
fldl
loop
inc
leave
add
int3
fdivl
dec
sub
call
enter
mov
fstps
or
fwait
lret
int3
nop
inc
int3
cmpsb
pop
inc
adcb
dec
int3
cmpsb
pop
lods
lret
call
aam
pop
sbb
inc
jecxz
addr16
push
test
ret
mov
mov
les
push
mov
or
imul
shlb
mov
scas
mov
and
jp
faddl
lods
cs
pop
sbb
and
fwait
popa
pushf
mov
ds
sbb
loopne
je
or
cmp
fs
or
cmp
inc
cmp
js
fwait
popa
sbb
das
nop
loopne
mov
ret
sbb
leave
inc
pop
mov
rclb
sahf
enter
add
or
rclb
sarb
dec
jbe
shr
in
inc
nop
push
xor
adc
daa
lock
roll
pop
enter
pop
push
cltd
loopne
mov
sbbb
or
pop
arpl
mov
or
cltd
or
push
mov
adc
sub
push
cltd
pop
inc
xor
aas
cltd
pop
sub
xchg
mov
inc
sub
xchg
cld
push
dec
mov
mov
xor
mov
adc
popf
fldl
xor
and
mov
xor
push
enter
dec
inc
dec
inc
cltd
inc
ljmp
mov
repnz
fdivr
loope
fmull
cmp
lahf
mov
mov
pcmpgtw
add
and
arpl
mov
leave
lret
fsubrl
addb
sbb
mov
jo
cmpsl
shrb
and
inc
sub
enter
aam
into
stos
inc
outsl
adc
sbb
push
inc
adc
call
movsl
xor
insb
cs
xor
xor
sbb
adc
sbbl
xor
pop
mov
mov
xchg
bnd
add
ret
call
jmp
sti
mov
xchg
mov
jns
and
je
inc
xchg
xor
dec
inc
or
pop
push
sarb
mov
jl
and
push
cmpsl
test
mov
and
push
mov
sub
movsl
inc
inc
icebp
sub
push
inc
mov
and
cmpb
xchg
loope
inc
jl
jl
xor
inc
adcb
jno
xchg
jb
in
sti
pop
jge
gs
inc
pop
adc
or
sbb
cmpl
xchg
mov
dec
mov
sbb
jecxz
sbb
shrb
jne
xchg
pop
pop
adc
push
inc
pop
sbb
xchg
fists
mov
adc
xchg
or
pop
cltd
inc
mov
cmp
inc
xchg
jecxz
cmpsl
ss
xchg
pop
xchg
inc
xchg
stos
dec
pushf
push
push
fcoms
push
xor
imul
adcl
mov
pop
adc
hlt
xchg
pushf
mov
lods
dec
xchg
fdivl
daa
mov
xchg
or
test
push
adc
insl
ret
pop
insl
ret
xchg
sub
pusha
inc
xchg
sahf
test
dec
adc
nop
daa
fnstcw
inc
bnd
cmp
xchg
push
xchg
scas
shl
sub
leave
insl
roll
sub
push
sbb
cmp
mov
mov
mov
or
xchg
data16
cmp
push
adc
ss
sub
cmp
inc
sbb
xchg
xchg
dec
seta
dec
xchg
dec
mov
mov
shrl
je
xchg
adc
xchg
inc
xor
mov
xor
dec
xchg
int3
daa
xchg
jo
imul
ljmp
pusha
mov
mov
or
dec
aaa
xor
inc
xchg
movsl
fwait
mov
xchg
es
punpcklbw
or
jmp
call
xchg
mov
je
xchg
data16
add
frstor
sub
icebp
fs
lret
pop
sbb
test
movsb
icebp
jnp
in
add
and
or
ja
adc
or
rolb
fcoml
cmpsl
lret
int
sub
xor
or
adc
ja
or
je
int
ds
push
ror
aaa
push
xchg
out
mov
loope
clc
test
scas
inc
int
repnz
leave
call
sub
int
mov
dec
pusha
pop
das
sbb
in
mov
add
pop
insb
push
fstps
mov
pushf
insl
or
push
mov
xor
inc
cmp
mov
lock
addl
sub
inc
fnsave
aas
push
sbb
imul
sbb
lcall
and
aam
sbb
in
popf
imul
xchg
sub
cmp
lret
test
inc
xor
call
mov
call
sbb
test
inc
enter
add
xbegin
mov
add
cli
add
push
or
in
nop
repnz
push
mov
and
fcmovnbe
push
xchg
inc
daa
ret
pop
and
adc
adc
push
and
fistpl
push
xchg
mov
dec
xchg
ret
dec
push
push
inc
fucomi
sub
test
or
push
adcb
fstpt
test
mov
aam
xchg
mov
ja
adc
fdivs
dec
fneni(8087
mov
and
cmp
sub
lret
sbb
fidivrs
mov
call
aaa
push
jns
fcmovnu
jecxz
inc
xchg
pop
and
es
adc
pop
and
adc
sbb
pop
jle
add
outsb
fimuls
add
adc
inc
and
addl
filds
loopne
aaa
or
cmpsb
mov
add
adc
xor
xor
leave
push
push
fs
lock
iret
test
daa
pop
loope
xor
int3
dec
cmp
push
mov
sub
dec
pop
mov
das
das
movntps
adc
or
hlt
mov
in
mov
aam
das
das
das
das
int3
mov
mov
in
in
test
mov
xchg
mov
jns
in
in
jno
imul
push
mov
cmp
xor
enter
or
mov
in
mov
jb
sbbl
sarb
push
stos
mov
mov
mov
push
jb
andl
mov
enter
cmp
in
and
push
jb
mov
and
cmp
in
mov
nop
cmpl
mov
cmpsl
mov
in
pop
cmp
mov
gs
cmp
inc
push
inc
mov
mov
mov
push
jb
cmp
hlt
mov
enter
sarl
inc
mov
popf
add
sahf
or
rclb
xor
test
and
push
adc
xor
xchg
xchg
data16
sbb
or
cs
lcall
in
sbb
call
xchg
xchg
data16
les
cmp
dec
mov
inc
mov
inc
inc
mov
out
movsb
cli
dec
jl
dec
dec
push
dec
popa
leave
push
arpl
add
shl
addb
push
adc
add
inc
dec
test
rolb
cwtl
adc
xor
test
adc
inc
or
add
js
or
test
rolb
cmp
jb
dec
repnz
adc
push
mov
sub
push
icebp
mov
notl
ret
inc
push
mov
imul
test
testl
pop
icebp
pusha
mov
mov
sub
rolb
xor
or
sbbb
mov
xchg
cmpsb
push
not
add
and
mov
mov
mov
cwtl
xchg
xchg
cmp
xchg
sub
ss
je
push
inc
xchg
mov
cmp
dec
and
mov
pop
xor
movsl
gs
hlt
jp
cmpsb
xchg
shrl
mov
lret
push
lret
and
push
xchg
in
adc
mov
xchg
ficomps
sbb
mov
scas
dec
pop
mov
and
xor
xchg
push
ret
fimuls
mov
pop
sarl
mov
inc
sub
or
lret
push
adc
push
xchg
fcoml
add
xchg
mov
scas
repz
push
xchg
push
inc
xor
mov
imul
addr16
xchg
sub
pusha
jmp
sub
or
add
js
sbb
sub
and
call
xchg
and
sbb
int3
dec
in
push
jo
mov
iret
scas
dec
mov
fdivl
and
sbb
jo
xchg
movsl
mov
cmp
jno
iret
decb
in
mov
inc
pushf
mov
int3
fs
pushf
mov
mov
sub
mov
pusha
shrl
sarb
xorb
pop
mov
mov
cmp
mov
int
mov
push
inc
jo
scas
push
dec
sbb
sub
aaa
add
mov
rorl
push
mov
mov
mov
push
fmull
in
mov
fsubr
mov
adc
clc
push
call
mov
dec
lds
push
out
cmp
call
inc
cmpsl
sub
adc
push
xchg
push
and
sub
insl
sbb
pop
sbb
adc
movsl
cmp
mov
out
vpsrad
test
mov
cmpsl
sub
pop
mov
sbb
loopne
mov
and
js
dec
pop
mov
mov
and
sub
push
add
jno
pushf
mov
or
mov
dec
rcpps
mov
rorl
sbb
mov
mov
int3
mov
mov
push
dec
popf
mov
shl
shrl
mov
je
nop
push
cmpsl
sub
imul
sbb
rcrb
or
sub
jb
imul
pop
popf
mov
loopne
mov
xlat
inc
icebp
add
lock
sub
mov
lret
rorl
jne
stos
jg
and
sbb
lock
popa
xor
xchg
pusha
and
xor
je
pushf
mov
push
push
dec
dec
popf
mov
mov
and
mov
mov
sub
or
lds
dec
mov
xchg
and
dec
pop
mov
shrb
push
inc
mov
rcrb
enter
cmpsb
imul
mov
inc
sbb
stos
rcrb
sub
mov
gs
inc
pushf
mov
subl
ret
mov
lock
xor
dec
loopne
movsl
push
add
mov
call
out
loopne
xchg
mov
pop
cmpsl
sub
pop
sahf
dec
cmpsl
dec
pop
mov
cmpsl
sub
test
pop
rolb
push
pop
cmpsl
sub
loop
andb
into
dec
shrb
jne
or
jb
mov
xchg
cwtl
mov
inc
jno
movsb
js
mov
xchg
mov
ret
xchg
movsl
mov
add
mov
scas
mov
in
cs
mov
repnz
or
movsl
sbb
push
sbb
mov
xor
pop
jmp
mov
mov
loopne
add
dec
dec
pop
and
push
mov
out
pop
pushf
mov
mov
leave
and
mov
loopne
jg
gs
and
mov
cmp
popf
mov
xlat
inc
adc
aad
call
xchg
inc
jb
shlb
pop
mov
out
mov
xchg
out
adc
and
adc
mov
jmp
sub
mov
nop
push
das
nop
mov
inc
das
fstl
cli
loop
jmp
fstps
push
mov
push
mov
lods
in
xor
shlb
lahf
ljmp
test
inc
gs
pop
push
and
sbb
fs
sbb
jmp
or
push
outsb
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
js
or
data16
inc
add
cmpsb
push
testb
out
sahf
cmpsl
push
sub
mov
int3
faddl
sbb
cmp
repz
inc
push
pop
outsb
repz
repz
jl
fdiv
outsb
or
push
ds
repz
repz
jb
mov
int3
out
push
stos
sahf
out
sahf
adc
cmp
jns
out
jbe
test
into
sahf
out
out
add
push
sbb
xor
sahf
out
ds
pop
insb
addb
fldl
pop
cmpsb
add
or
ja
cmp
push
mov
mov
push
lea
ret
sub
add
sahf
neg
mov
push
push
mov
dec
sbb
mov
add
int
push
push
clc
mov
mov
sbb
iret
sub
add
mov
sbb
clc
mov
mov
or
add
sahf
jnp
repz
adc
adc
push
adc
cmp
jmp
xchg
sbb
sbb
xchg
jns
cmpsl
sbb
or
mov
test
push
pop
sahf
mov
and
xor
cmpsl
push
and
js
cmpsl
stc
cmp
jns
jp
cmp
hlt
call
xchg
mov
xor
aas
push
pop
inc
pop
adc
sub
int3
xchg
adc
and
outsl
and
test
es
dec
xchg
jns
addr16
push
cmp
sarl
adc
add
xchg
in
iret
repz
loopne
fcom
int3
enter
cmp
sarb
test
mov
cmp
xchg
nop
mov
repz
js
jo
repz
repz
iret
repz
push
push
dec
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
add
nop
out
sahf
cmpsl
fmul
test
push
dec
sub
pop
movsb
cmp
repz
pusha
push
dec
inc
imul
or
mov
out
sahf
out
mov
pusha
cmp
repz
or
int3
test
push
idivl
jg
push
add
lock
fwait
nop
jns
mov
inc
mov
dec
push
mov
inc
xchg
movsb
and
movsl
or
add
push
aaa
xor
push
push
add
xchg
mov
xor
pushw
mov
es
and
shlb
shlb
jbe
rcrb
iret
lahf
fdivrs
xor
jo
mov
out
sbb
daa
add
and
aas
xchg
xchg
add
xchg
pop
jnp
push
daa
lcall
cmp
das
inc
add
outsl
sarb
lods
pop
mov
insb
sahf
int
pop
cmpb
inc
pop
rorb
shll
jbe
add
mov
scas
cmpsb
mov
push
adc
mov
and
and
sub
adc
mov
rorl
sbbb
pop
sbb
cmpsl
fsubrs
sarb
mov
inc
lahf
xor
dec
mov
jg
dec
jle
pop
or
rorl
push
aas
sti
push
jbe
mov
andb
fsubl
adc
push
dec
mov
cmpl
fisttps
nop
add
movnti
aaa
inc
mov
imul
mov
imul
adc
mov
or
clc
xchg
insb
pop
xor
cmp
pop
cmp
popf
stos
outsb
cs
outsb
lahf
inc
outsl
ds
jae
fs
outsl
gs
push
test
scas
idivb
je
rolb
jno
movsl
dec
cmpsl
mov
sub
mov
mov
scas
enter
inc
iret
mov
fwait
inc
pop
outsl
jne
mulb
push
arpl
add
nop
dec
sti
push
outsl
and
jb
lret
pop
ljmp
shlb
and
add
mov
xlat
mov
inc
mov
lea
mov
les
fwait
cmpsl
mov
lea
push
out
xor
sub
call
dec
add
loopne
or
nop
or
push
pop
lcall
test
sbb
sub
cmp
or
mov
xchg
subl
sbb
ljmp
addl
xchg
sbb
adcb
pop
xchg
repz
cmp
mov
imul
shll
mov
or
imul
cmp
cmpsb
mov
sbb
movsb
mov
testl
scas
mov
pop
mov
push
and
xor
pop
push
aaa
fsubl
into
leave
add
push
push
add
push
jno
sbb
mov
sbb
rorl
inc
jns
loope
xchg
movsb
xchg
jle
pushf
out
sahf
out
xchg
nop
mov
je
pop
push
pop
dec
repz
repz
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
xchg
hlt
xchg
cmp
jnp
in
push
in
enter
repz
adc
jl
cmp
push
insb
push
fs
push
dec
fcomip
cmp
mov
push
and
add
in
xchg
repz
cmp
enter
iret
repz
test
cwtl
nop
mov
js
jo
pop
inc
repz
and
adc
out
sahf
out
xchg
loopne
mov
sahf
test
insb
pop
add
and
outsl
or
mov
add
mov
cwtl
inc
xor
mov
mov
adc
mov
cmp
add
adc
mov
bnd
fs
add
push
fisubrs
clc
mov
ds
pop
jg
cld
pop
enter
and
pop
jbe
mov
in
add
lods
xchg
xor
popa
pop
xchg
mov
aas
jecxz
sub
aas
add
fs
cmp
add
add
inc
shlb
pusha
push
fnstenv
sti
adc
mov
xor
xor
jg
mov
dec
cmp
ss
clc
fwait
pusha
cld
ss
nop
ss
sub
ss
push
fwait
dec
sub
xorl
clc
mov
cmp
cmp
aas
cmp
fstpt
push
cmp
xchg
sub
stos
fwait
es
adc
lds
fidivrs
and
fildll
cmp
inc
jnp
cmpl
adc
xor
sbb
cmp
cmp
ds
ds
lcall
jecxz
faddl
ljmp
ds
aas
pop
lds
inc
aas
and
sub
xor
aaa
into
push
sbb
pushl
data16
jbe
jnp
cmpl
movsb
aas
mov
sarl
mul
outsl
jo
testl
xor
add
cmp
mov
xor
pusha
lods
adcb
xor
mov
inc
xor
pop
add
or
jecxz
xor
cmp
inc
xor
xchg
mov
roll
mov
fdivs
mov
orb
sub
xor
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
das
test
mov
ss
add
sbb
xchg
popa
or
mov
testb
sub
das
cmp
add
pop
cmp
ljmp
cld
pop
rorb
cmp
xor
xor
cmp
fwait
ds
cmp
cmp
pop
cmp
jecxz
pusha
push
outsl
cmp
adc
and
cmp
sahf
sbb
outsb
cmp
idivb
mov
cmp
cmp
cmp
call
or
outsb
ja
jle
test
loop
add
push
mov
iret
cmp
cld
cmp
decl
inc
ds
ds
ds
cs
add
nop
push
cwtl
xchg
xor
xor
xor
xor
xor
xor
xor
push
xor
jecxz
sbb
xor
xor
xor
xor
xor
fbld
lds
xor
xor
outsb
xor
loopne
repnz
pushl
inc
ss
ss
bound
xorl
ss
ss
push
sarb
clc
ss
out
nop
icebp
icebp
ss
aaa
or
push
push
xor
pop
add
inc
aaa
stos
mov
xor
dec
adc
push
cmp
add
cmp
sbb
pop
dec
ja
cmpsb
test
mov
leave
mov
push
in
jmp
repz
cmp
mov
cmp
and
es
cmp
cmp
pop
push
cmp
cmp
jle
xchg
mov
xchg
dec
lahf
cmp
mov
jg
push
add
insb
cmp
cmp
cmp
cmp
cmp
cmp
movb
push
push
fs
cltd
pop
ret
xor
insl
pop
rol
xor
aas
outsb
xchg
mov
mov
dec
mov
xor
into
xor
lcall
cld
pushl
lea
xchg
xor
xor
xor
xor
xor
xor
jo
in
pop
ljmp
pushl
mov
xchg
xor
xor
dec
xor
insb
and
xor
xor
das
xchg
adc
push
ss
ss
arpl
stos
or
jmp
xor
das
xor
jne
jle
or
sbb
sub
xor
cmp
sbb
cmp
cmp
cmp
aaa
or
cmp
pop
ret
cmp
cmp
arpl
mov
ret
fnstsw
fildll
in
inc
out
ds
ds
add
pop
lret
mov
dec
insl
adc
fbstp
divb
data16
lahf
mov
xor
xor
xor
xor
xor
mov
out
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
ja
push
or
decl
ss
sbb
lret
or
ljmp
data16
jb
jp
lcall
cmp
push
cmp
mov
jmp
push
jmp
std
cmp
inc
ds
imul
fisttps
adc
lods
push
mov
sbb
mov
mov
xchg
xchg
cld
xor
out
sub
xor
cmp
cmp
dec
cmp
adc
imul
inc
cmp
scas
mov
xor
xor
xor
pop
pop
ret
imulb
or
pop
dec
inc
xor
dec
js
mov
arpl
pop
pusha
hlt
gs
mov
cmpsb
xor
xor
mov
push
je
js
addb
sbb
xor
inc
daa
mov
jl
mov
or
lods
je
call
int3
popf
xor
popa
inc
fdivrl
in
nop
icebp
dec
sbb
cld
cmp
sbb
add
pop
or
andb
xor
test
sbb
jl
xor
test
bound
lds
mov
ja
fsubrp
ja
shlb
xor
or
jo
mov
or
adc
adc
sbb
sbb
and
sub
or
dec
mov
push
xchg
pop
xor
xchg
xor
pusha
xor
xor
cld
pop
or
xor
xor
push
sbb
loopne
repnz
cmp
xchg
add
adc
xchg
je
js
loope
mov
cmp
jbe
xor
jp
cmp
xchg
pusha
xor
ja
cmp
sar
xor
cmp
dec
add
lret
fmull
js
pop
daa
cwtl
out
shl
ljmp
adc
sbb
sub
push
insb
xor
xor
xor
xor
test
enter
xor
shlb
push
xor
fs
xor
xor
xchg
sbb
or
adc
jb
xor
shrl
fcompl
pop
cld
jg
in
call
xor
xor
inc
add
aas
pop
add
push
sbb
xor
add
cmp
inc
xor
xor
xor
push
xor
rol
jp
xor
mov
xor
xor
xor
adc
loopne
xor
mov
scas
pushf
xor
xor
clc
loopne
movsb
xor
xor
xor
xor
xor
into
shlb
int3
push
or
xor
or
mov
xor
cmpsb
mov
arpl
mov
mov
or
or
cmp
ljmp
push
dec
adc
fdivr
add
xor
les
adc
jp
cvtps2pd
fucomi
fbstp
clc
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
sti
aaa
xchg
les
or
pop
sbb
adc
adc
fimull
pop
adc
add
data16
or
pop
lds
inc
add
sub
xchg
mov
adc
jp
dec
add
dec
xor
add
imul
xchg
add
push
adc
inc
sar
push
popa
pop
and
xor
rcll
shl
and
bound
js
xchg
fs
xor
and
bound
adc
cmpsl
xchg
or
es
mov
adc
and
xchg
imul
or
pusha
dec
adcb
xorb
pushf
into
add
adc
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
stc
add
or
xor
adc
mov
and
roll
test
sub
scas
fiaddl
or
js
push
orb
or
das
mov
add
lds
cld
cli
and
mov
inc
jnp
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
mov
out
stc
or
xchg
jg
or
inc
repnz
addr16
out
or
push
push
xchg
add
repnz
inc
lock
pushl
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
pushl
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
jmp
outsb
iret
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
jg
cmp
sub
inc
scas
inc
mov
jg
ljmp
je
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sub
cmp
cmp
js
jmp
clc
pop
hlt
lret
movsb
add
ljmp
rorb
gs
std
xorb
jg
pop
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
jmp
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
call
push
mov
adc
and
sbb
xchg
jo
and
out
test
ljmp
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
jmp
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
cs
mov
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
decl
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
incl
imul
add
mov
cmp
xchg
mov
cwtl
jg
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
xorl
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
clc
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
clc
fists
sbb
lock
in
jmp
out
sbb
aaa
clc
push
hlt
je
ret
jl
icebp
fs
pop
add
jne
or
cmc
mov
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
sbb
loopne
popf
dec
or
sar
sbb
cmp
int
add
xor
push
jno
pop
aaa
std
fisttps
mov
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
out
enter
adc
mov
in
push
jg
sub
mov
pop
clc
loope
loope
mov
lahf
sbb
pop
add
jae
xlat
rorl
je
xchg
fldenv
iret
fcoml
xchg
lcall
decb
cmp
mov
ds
sarl
pop
out
jg
jno
ret
rcll
nop
cmp
call
lock
push
dec
jge
pop
clc
xchg
jmp
aam
sbb
mov
jne
in
sbb
xchg
imul
scas
mov
jmp
std
loopne
add
mov
daa
jmp
faddl
mov
push
adc
outsl
dec
push
pop
add
pop
stc
push
dec
out
fstpt
pop
mov
enter
shrl
inc
dec
cld
add
add
push
sti
pop
inc
enter
add
or
mov
mov
test
and
mov
jo
mov
iret
rclb
mov
fisttpl
out
imul
lret
lea
and
std
xor
loopne
aas
loope
mov
lcall
in
pop
loopne
inc
inc
les
and
dec
iret
xchg
arpl
movsb
mov
jge
push
in
in
cmp
adc
shl
mov
cld
adc
xorl
decl
push
dec
scas
loopne
pop
or
sbb
cli
nop
jecxz
cltd
aas
or
lcall
jmp
pop
sahf
add
testl
loopne
lahf
lret
out
inc
test
pop
ljmp
and
jg
aaa
or
adc
int3
mov
shlb
push
inc
dec
out
cs
pushf
lahf
imul
mov
inc
jge
xchg
mov
das
iret
ss
std
and
sbb
add
mov
or
ljmp
jo
dec
and
aam
push
dec
std
aas
ds
shrb
call
fwait
pop
punpcklwd
lds
int3
sahf
pop
jns
lret
jb
mov
jl
clc
arpl
fadds
xchg
aad
cs
inc
les
xchg
sub
std
sahf
sub
outsl
clc
call
iret
inc
test
inc
int3
call
push
rcll
aad
jmp
mov
lds
bound
out
push
mov
pop
cmp
and
ljmp
ret
pop
add
jb
icebp
mov
cli
mov
inc
in
fs
out
lods
in
push
xor
ret
mov
push
mov
xor
iret
ljmp
shl
test
mov
or
call
jmp
mov
mov
rol
cmp
dec
xor
pop
cmp
jns
sar
stos
sbb
movsb
ss
js
shl
dec
lahf
dec
pushf
bound
xchg
jecxz
xor
decl
loop
subb
dec
sahf
ss
cmp
lcall
lcall
repz
popa
and
inc
jl
rorl
das
daa
addr16
fwait
cmp
icebp
lret
mov
and
jbe
mov
lcall
push
insl
dec
aam
ret
mov
movsb
add
leave
pusha
add
dec
hlt
lock
dec
push
hlt
sub
mov
addr16
adc
cmc
adc
mov
ret
movsl
call
push
jl
lods
push
xchg
hlt
push
stos
dec
jbe
scas
test
jbe
mov
enter
aam
adc
test
jae
mov
jmp
aam
stc
mov
dec
push
cmp
out
adc
das
lods
jae
imul
cmp
imul
or
cmp
dec
pop
movsl
fwait
inc
popf
push
inc
and
arpl
sar
lcall
in
xlat
or
ret
mov
fwait
or
cli
aam
ss
sub
inc
cmp
adc
call
push
xchg
in
data16
xchg
sub
and
xchg
jge
shrb
mov
out
clc
pushl
cmp
sbb
shlb
push
jb
inc
dec
incl
xlat
add
lods
jp
aas
dec
jle
push
shlb
imul
mov
push
pushl
xor
cmp
jl
xchg
or
sbb
mov
dec
and
mov
rorl
or
add
scas
lret
mov
mov
add
fcomip
lock
cs
mul
xchg
xchg
adc
test
cmp
mov
add
mov
ljmp
fmull
sub
outsl
mov
test
int3
enter
hlt
jmp
push
pop
jnp
cwtl
mov
ljmp
xchg
call
add
cli
aas
dec
sub
cmp
movsb
mov
incl
jle
adc
dec
cmp
mov
dec
pop
cmp
cmpsb
fisttps
scas
pavgb
lahf
jmp
les
mov
ss
pop
mov
adc
icebp
sub
inc
xchg
std
call
test
ljmp
fsubr
dec
test
cld
mov
lock
subl
std
mov
fdivrl
mov
xor
cmpsl
insb
mov
pop
int
in
movsb
lcall
push
ljmp
pusha
enter
jle
incl
shlb
xchg
mov
jo
dec
cmpl
imull
out
jae
xchg
and
push
and
xor
icebp
cmpb
bound
fdivs
adc
pop
loop
push
sub
fiadds
test
inc
sahf
xor
arpl
icebp
push
fists
dec
dec
jo
cmpsl
sub
sub
mov
lret
and
lret
xor
aas
xor
in
ljmp
fdiv
nop
jb
mov
mov
stos
fdivrl
sub
sub
call
cmpsl
in
adc
outsb
les
mov
test
inc
adc
sarb
dec
mov
and
gs
jae
ljmp
cld
fidivrl
mov
sub
js
xor
and
cmp
jmp
clc
cwtl
xor
ljmp
dec
push
rcr
ret
push
xchg
shll
and
push
or
push
adc
push
jbe
jbe
jne
or
insb
mov
call
cmpsl
pop
iret
enter
fistl
std
std
adc
and
xchg
js
jg
les
add
mov
add
stos
andb
xchg
iret
out
inc
out
pushf
adc
ljmp
push
fstps
pop
xor
sub
sub
sbb
out
hlt
mov
jmp
int
out
pop
je
cmc
add
popf
inc
outsb
lock
dec
outsl
push
aam
std
outsl
xchg
mov
jle
xor
or
cmp
sub
fcomip
dec
or
xchg
sahf
popf
xchg
ret
popa
xor
xor
ja
jnp
dec
mov
or
jns
aaa
cmp
fcompl
mov
adc
incl
call
push
and
sbb
adc
int
sbb
hlt
cwtl
cmpsb
and
push
push
lcall
repz
lods
adc
hlt
xchg
pop
repnz
push
pop
dec
push
cmpb
cmp
mov
into
aas
ds
ret
sub
addr16
jne
and
movl
testb
pop
push
je
fdivl
ds
test
sbb
mov
cmp
fbstp
jge
jg
pushl
adc
test
outsb
xchg
push
inc
adc
cmp
mov
jp
mov
ror
or
adc
xchg
add
insb
dec
cmpsb
mov
popa
mov
decl
icebp
xor
scas
dec
orl
push
ret
cmp
mov
scas
arpl
dec
lock
call
cmp
add
sbb
jg
lahf
iret
fs
dec
insb
insb
je
mov
ja
cli
fbstp
pop
xchg
ds
add
push
xor
decl
jbe
scas
or
adc
clc
add
out
lcall
test
add
xchg
mov
in
and
mov
and
mov
imul
sub
pushf
xlat
push
cmp
pushl
and
stos
lea
xorb
outsl
lret
incb
stos
push
jne
lcall
insl
sub
int3
mov
mov
mov
mov
jb
ret
pop
cmpl
push
icebp
jmp
sarl
je
sbbb
mov
int
xchg
sub
xor
jbe
sbb
inc
sub
ret
incl
cmp
mov
push
add
xor
sar
xor
or
pusha
bound
cli
mov
mov
bnd
xchg
pop
jno
ljmp
xorb
ljmp
or
test
mov
stos
mov
data16
jmp
jmp
pop
scas
pusha
inc
mov
repnz
pop
and
scas
dec
lahf
ss
jo
add
jmp
aas
lds
xlat
sub
xor
xchg
fisubrs
andl
in
fstps
xor
in
sub
cmpsl
and
idivl
rcll
adc
fsubrl
cs
in
mov
jae
xor
push
jbe
fidivrl
ljmp
push
cld
testb
fcomip
push
push
push
mov
push
jle
std
pop
movsl
arpl
das
mov
popf
sbb
icebp
mov
pushf
std
cs
mov
xchg
fcomp
adcl
mov
inc
jl,pn
add
lahf
mov
inc
ret
xor
add
insl
loope
push
repz
mov
dec
and
add
pop
lahf
jae
mov
ficoms
cs
mov
add
lret
in
es
xor
add
jmp
dec
push
add
rcll
andb
imul
decl
sbb
xchg
mov
icebp
scas
sar
ljmp
outsb
hlt
ds
xor
sub
insl
arpl
pop
sub
fmull
lcall
xor
cmpsb
hlt
mov
jno
sarb
and
popf
gs
lahf
push
ljmp
out
testb
mov
mov
push
cmpb
pop
jp
sbb
sub
sahf
sub
ja
test
jmp
push
int
mov
push
fldt
pop
xchg
icebp
insl
test
popf
ret
pop
sub
push
sub
shll
dec
fwait
mov
mov
stos
sahf
test
mov
xor
call
dec
mov
inc
add
sub
rorb
push
inc
add
inc
dec
and
pushl
add
adc
fwait
mov
mov
imul
jmp
andb
ljmp
popf
inc
test
mov
mov
int
xchg
nop
or
cld
rcrl
and
decl
std
sahf
xchg
shll
dec
daa
shrb
adcl
mov
decl
ss
adc
sbb
popf
mov
sub
icebp
ja
lcall
or
xchg
sbb
sbbl
dec
pop
pushf
dec
enter
xchg
push
dec
and
popa
fadds
out
pop
roll
mov
mov
sub
pushl
sub
adc
fisubrs
sahf
mov
loop
dec
xchg
cmc
icebp
clc
mov
cmp
jnp
and
jmp
mov
rcrb
ffree
xchg
xor
cs
adc
popf
cmp
cltd
inc
pushl
jne
sti
outsb
and
mov
or
or
push
rcll
pushf
out
lods
rorl
push
mov
xchg
pusha
dec
lods
xchg
cmpsb
inc
xlat
repnz
or
and
les
or
inc
std
call
and
xchg
fimull
add
mov
adc
pushf
test
cli
andb
dec
sbb
loope
jnp
sbb
jns
aam
sbb
push
push
test
cmp
jnp
or
mov
lds
adc
pop
fwait
push
ret
mov
push
inc
in
cmpsl
mov
call
loop
mov
pop
mov
rolb
ljmp
fdivs
andb
sbb
jg
mov
cli
rolb
adc
enter
or
imul
adc
sub
sbb
jecxz
pop
mov
pop
lahf
stc
data16
push
in
mov
idiv
dec
into
pop
dec
fwait
mov
mov
decl
pop
loopne
dec
pop
fstps
pop
xchg
jae
mov
push
mov
pop
sbb
dec
decl
icebp
lcall
cmpsb
repz
bound
popf
sub
xchg
stos
lods
lods
jns
incl
clc
mov
sbb
inc
push
mov
inc
xchg
fwait
rorl
scas
mov
loopne
ss
decl
ror
fwait
push
movsb
mov
xor
mov
mov
pop
loopne
sub
lock
mov
scas
or
push
ds
or
addl
incl
sti
or
mov
adc
pop
loopne
mov
icebp
mov
mov
push
stos
aad
push
jo
xchg
mov
js
imul
xchg
fcomp
pop
and
test
jle
sub
decl
sub
mov
aas
out
hlt
mov
in
and
dec
data16
call
cld
jns
movsb
icebp
xchg
add
fadd
push
leave
ret
mov
pop
mov
cmp
jmp
sbb
shlb
push
stos
pusha
out
add
push
xor
or
or
fnstcw
lahf
stos
push
nop
leave
in
mov
in
frstor
mov
push
movsb
ljmp
jno
mov
lret
push
in
imul
lock
mov
add
icebp
adc
add
sub
jge
movsl
adc
push
or
fnstsw
cmp
pushl
inc
mov
or
mov
lods
mov
mov
push
add
mov
fimuls
cmc
pusha
sub
pop
movsb
aam
or
iret
addr16
cmpsb
into
xchg
hlt
ljmp
jae
jg
mov
and
jo
das
push
or
xor
mov
add
inc
adc
and
clc
insl
adc
testl
sbb
dec
in
loope
push
ficomps
mov
xchg
xor
inc
gs
dec
inc
dec
test
sub
jmp
clc
inc
fsubrs
test
jbe
jmp
lcall
dec
or
sbb
xor
lret
leave
in
std
dec
pop
jb
add
xadd
sbb
mov
jno
push
insb
daa
mov
sar
decl
daa
dec
mov
testb
xor
pushl
std
pop
mov
and
and
ret
daa
fisttps
xchg
mov
cmc
cwtl
jnp
xor
in
mov
scas
or
inc
mov
mov
je
pop
fimull
hlt
mov
rclb
sub
imul
out
fwait
jecxz
rcrb
mov
jmp
aaa
push
mov
ficoms
repnz
mov
mov
inc
dec
in
pushf
pop
decb
test
and
out
lea
sti
std
lcall
popa
jne
les
cmpsl
shr
mov
mov
push
notb
cmc
pop
jle
call
ret
push
loope
icebp
jnp
and
jne
cmp
test
jg
lcall
add
int
sbb
insb
jne
insl
sbb
mov
fdivl
cmc
incl
mov
stos
rdmsr
lret
test
dec
stc
arpl
pushf
inc
jnp
incl
pop
rolb
popf
dec
xchg
icebp
push
test
lahf
das
mov
mov
decl
je
mov
outsb
ja
xchg
jne
sub
cmp
mov
mov
pop
mov
xor
call
out
mov
pushf
adc
mov
push
xor
repz
int
dec
ja
ljmp
push
addr16
push
mov
cld
mov
pop
outsb
lods
dec
push
mov
mov
xor
ja
incl
ret
in
push
insl
scas
test
ss
aad
ljmp
push
decl
es
add
mov
add
inc
push
mov
push
inc
mov
mov
mov
add
mov
jne,pt
repz
mov
clc
pop
std
jl
loopne
inc
sbb
insb
scas
and
mov
decl
xchg
stc
mov
shll
cwtl
jb
addr16
jno
inc
in
mov
rcrl
decl
js
dec
xorl
ljmp
dec
push
cmp
push
cwtl
push
test
add
mov
mov
ljmp
dec
lahf
adc
dec
sub
lock
jno
sti
pop
push
mov
nop
push
or
cmp
incl
mov
arpl
hlt
out
es
sbb
std
aam
inc
mov
xchg
test
cmp
fsincos
cmp
adc
dec
dec
sub
cwtl
pop
out
xlat
xchg
sub
push
add
xchg
ljmp
insl
test
adc
cltd
les
xlat
dec
lods
into
into
push
imul
movsb
mov
push
jbe
int
sahf
jb
and
lcall
mov
enter
jecxz
daa
lea
mov
mov
shlb
cmp
sub
lcall
pop
daa
jns
lcall
stos
lret
xchg
arpl
loopne
cmpl
call
xlat
ljmp
pop
ret
adc
cmpsb
and
incl
gs
test
cmpl
ljmp
ljmp
cltd
dec
scas
es
xchg
sbb
xor
pop
stos
xchg
push
mov
mov
fcos
ljmp
jnp
mov
stc
sarl
push
lock
test
cmpsb
push
andb
incl
inc
cmpb
cltd
sub
aad
mov
loop
jno
dec
sbbb
cmpb
cmp
pop
ljmp
aam
adc
jg
fildl
lret
jmp
fisttpl
shl
xchg
rclb
bound
lcall
hlt
out
pop
ljmp
mov
mov
iret
mov
mov
adc
cmp
jae
ret
sub
imul
push
aam
xchg
popa
cli
outsl
fcompl
test
xor
divl
nop
inc
push
mov
lods
not
dec
fisubs
jmp
cs
out
inc
mov
mov
sbb
out
out
mov
lods
decl
les
fiaddl
xchg
pop
lock
scas
pushl
xchg
jmp
jge
movsl
loopne
xchg
sarb
repnz
je
sub
add
adc
mov
mov
std
repz
mov
lea
inc
push
mov
inc
jg
imul
iret
fdivs
or
stos
cmpsl
stos
enter
dec
clc
cs
cmpsl
dec
ja
sub
cmp
dec
jb
sbb
pop
rcrl
cmp
push
decl
out
jle
jmp
sub
imul
dec
outsl
call
mov
inc
int3
cmp
iret
dec
jns
gs
or
stos
jle
les
pushf
dec
dec
cmp
adc
les
mov
fwait
test
arpl
mov
inc
cmp
jbe
call
mov
jbe
into
push
pusha
mov
call
jb
outsl
mov
ljmp
fsubr
and
out
mov
dec
ret
mov
loope
adc
push
mov
pop
int
lcall
mov
into
add
imul
dec
aaa
xchg
xlat
es
mov
push
jl
pushf
loop
jmp
mov
inc
clc
mov
mov
mov
or
push
add
jne
aad
out
mov
cmp
mov
divb
push
dec
shll
test
insb
or
lock
cmp
mov
jno
inc
pusha
movsb
rcrb
push
xor
call
bound
insl
stos
cmpsb
push
out
ds
mov
mov
fxch
cmpsb
stos
ret
xchg
xchg
int3
cltd
hlt
ja
mov
or
lods
add
je
dec
jne
xor
inc
sbb
sub
jmp
push
xchg
xadd
jno
jge
sbb
fnstcw
loope
aad
enter
lcall
add
in
jae
and
out
inc
xchg
xchg
stos
push
outsb
push
icebp
ljmp
ss
jno
data16
add
sub
loop
pop
aas
orl
and
loop
sub
mov
inc
push
daa
mov
movsb
cli
enter
aaa
pushl
cld
push
adc
jbe
dec
dec
aas
imul
push
out
shlb
cmp
jl
popa
stos
lcall
cmp
fimuls
adc
roll
xor
shl
test
sbb
lret
push
inc
mov
shl
adc
cmp
cwtl
orb
pop
cmc
add
mov
decl
add
jns
sarb
icebp
fistpll
push
jle
dec
sub
lcall
mov
ss
sub
int3
push
xor
std
jge
push
push
push
stc
push
jmp
fwait
syscall
mov
xchg
int3
pop
and
das
xor
jg
iret
xchg
mov
insl
ljmp
inc
pop
xchg
ret
decb
dec
xor
mov
std
mov
in
repz
and
jg
comiss
mov
shll
mov
imul
mov
pop
pmulhuw
int3
xlat
push
lahf
movb
cmp
push
aad
lcall
imul
hlt
jne
sbb
xlat
js
orb
aad
mov
xor
inc
mov
inc
das
clc
jg
call
movsl
imul
loope
mov
jns
or
pop
xor
movsl
add
stc
jle
lea
out
shlb
pop
loopne
push
xchg
call
mov
pop
scas
mov
in
xchg
push
inc
fwait
sub
addr16
sbb
push
shrd
in
inc
addb
sub
or
lcall
push
ljmp
loop
lret
test
xor
mov
jp
imul
mov
cli
rcr
pop
int
lea
jmp
pop
xchg
ds
mov
scas
ds
xchg
pop
mov
fidivs
and
sub
xchg
icebp
rcl
jp
or
jb
scas
stc
push
sti
ljmp
xor
or
jb
pop
lock
jg
jg
jecxz
es
mov
xor
cli
xor
mov
lock
jb
and
mov
pextrw
xor
cmp
inc
inc
in
or
std
push
scas
fucom
fs
mov
xor
cmp
push
and
out
jmp
mov
xchg
mov
xchg
pushf
jbe
xchg
xchg
lds
out
mov
xchg
ljmp
pop
inc
dec
sbb
sub
loopne
decl
add
sbb
test
inc
int3
jo
jg
stc
push
ja
or
sbb
xor
mov
xor
sbb
les
pop
fdivrp
fcomip
cmp
fimull
lea
xorb
or
out
aad
incl
xor
lock
aas
sub
adc
push
fwait
jg
push
adc
jg
inc
mov
das
popa
pop
in
sarl
sub
addb
sub
mov
sub
xor
sbb
xchg
dec
jne
inc
lea
les
push
pushf
mov
test
or
mov
lcall
pusha
insb
jno
lahf
dec
xchg
inc
add
add
call
mov
push
add
push
jmp
or
xchg
rol
cs
or
push
and
outsb
es
xchg
xchg
stc
mov
push
bound
sub
sbb
pop
outsb
jns,pn
roll
scas
imul
out
mov
xor
xchg
add
ljmp
and
jo
fcom
stc
add
or
outsb
sbb
je
xchg
mov
cmp
add
icebp
dec
ss
call
call
mov
adc
fsubrp
stc
test
mov
add
call
fisubrl
dec
sbb
test
cmpsb
cmp
mov
test
xchg
leave
lcall
fcomip
xor
call
decl
pop
aaa
jmp
add
jbe
xchg
incl
popf
js
outsb
sbb
mov
jecxz
fidivs
mov
lods
sub
pop
ljmp
cs
sti
loop
mov
mov
inc
mov
incl
mov
mov
ja
ret
sti
scas
es
adc
sbb
jmp
xor
fldl
cmp
dec
push
jge
addl
decl
push
jae
mov
outsb
add
pop
testl
movd
hlt
pop
xor
mov
imul
cli
mov
add
mov
mov
push
mov
xchg
push
mov
dec
fs
sbb
cmp
loop
inc
out
cmp
mov
pop
jnp
xor
in
test
ret
adc
or
das
mov
andb
push
popa
or
dec
repnz
xchg
stc
lcall
inc
mov
les
movsl
mov
xchg
push
cmpsl
cmc
or
add
adc
pushw
sub
aad
cmp
pop
call
xorb
cltd
add
sub
add
cli
push
inc
cmpl
push
or
sahf
xchg
xchg
stos
out
dec
and
adc
jg
in
jbe
mov
mov
push
in
pop
pop
inc
mov
add
outsl
leave
call
sarl
sti
insl
pop
push
xchg
imul
jg
xor
mov
mov
ljmp
adc
rorb
xchg
add
inc
sahf
inc
mov
mov
mov
push
in
mov
std
lods
push
mov
inc
adc
pushl
loope
iret
idivl
jp
stc
cmp
push
or
cmc
pop
mov
call
loop
faddl
xchg
sub
xor
dec
jne
and
xchg
test
test
aas
sbb
je
incl
cwtl
mov
shrl
sub
mov
push
popa
insl
push
insl
incl
scas
shlb
mov
mov
jnp
cmpsb
cmpsb
aas
iret
les
push
cmp
ret
jp
add
stos
incb
sbb
push
jnp
inc
and
and
push
push
int
dec
movsl
decl
std
out
cmp
mov
add
mov
fdivs
imull
jmp
scas
cli
ljmp
pop
cwtl
fiaddl
scas
in
fimuls
or
decl
daa
nop
arpl
xor
mov
paddw
ficoms
inc
pushl
outsb
stos
push
push
insl
adc
call
sti
aam
add
test
add
scas
jl
fmuls
test
and
add
aaa
in
cwtl
xchg
fisubrs
mov
jge
outsb
mov
xchg
fwait
adc
sub
dec
scas
sub
mov
movsb
sub
and
jmp
fnstcw
push
jl
push
jbe
pusha
mov
in
pushf
sbb
push
das
sub
push
incl
ja
xor
add
pop
sub
mov
lcall
or
adc
push
mov
pop
sbb
je
leave
fsubr
imul
xchg
push
jl
hlt
mov
mov
lcall
add
xlat
pop
jg
lcall
mov
push
jo
mov
ffree
rcrl
cmp
mov
pushl
scas
push
repnz
in
jecxz
mov
xchg
dec
stos
nop
cmpsb
cli
fs
js
insb
xchg
in
push
arpl
jnp
es
psubusw
fsubrs
les
jno
in
std
lock
mov
incl
add
sbb
mov
inc
stos
lcall
int
jne
insl
add
sar
incl
mov
or
push
ss
jnp
adc
jecxz
jge
orb
push
jp
faddp
fistpll
enter
jecxz
xchg
scas
loope
dec
cwtl
pop
push
cmpsb
add
jg
push
and
js
adc
lods
jl
mov
loop
in
xlat
push
fxch
negl
popa
jp
test
dec
mov
adc
jl
nop
movsl
xorb
mov
or
sti
sbb
inc
or
incl
clc
fists
inc
aam
loopne
iret
xlat
in
mov
leave
mov
cs
jmp
enter
and
data16
sub
and
rcll
push
mov
rcl
shlb
fcomip
fsubrl
or
push
adc
popf
lods
adc
inc
pop
fiaddl
imul
mov
push
jno,pt
lahf
insb
addr16
add
repz
ljmp
jno
pop
fldcw
rol
cwtl
movsl
pop
mov
incl
scas
ja
mov
push
repz
pop
xorps
sar
jg
scas
lcall
sub
fistpll
cmpsl
xor
outsb
jge
test
cli
test
lcall
cmp
arpl
lret
int3
jge
sub
cmpsb
mov
sbb
test
decl
and
fwait
cmpsl
out
inc
mov
shrb
in
out
int
je
loopne
js
sub
mov
mov
or
jge
mov
mov
dec
cmp
ljmp
divl
fsubrp
gs
xchg
enter
in
or
aad
aaa
hlt
scas
clc
ljmp
rcrb
add
xchg
sbb
jbe
cmpsl
push
jecxz
lods
sbb
scas
push
adc
jge
clc
adc
leave
movsb
rcrb
sti
movsb
cmp
sub
ss
cmpsl
pop
movsl
mov
dec
aam
sub
das
lret
cmp
fwait
sub
subb
loope
les
xchg
mov
push
ja
dec
out
repz
repnz
sub
ss
arpl
mov
push
mov
or
jle
push
pop
push
es
xor
mov
filds
cmp
test
cwtl
and
movsl
pop
addr16
test
or
push
enter
ljmp
jmp
push
xchg
addr16
in
jae
push
in
xchg
mov
push
jecxz
faddp
mov
lcall
cmp
out
inc
ja
out
mov
mov
mov
scas
mov
outsb
fisubrs
sbb
call
sbbl
lret
push
call
push
sbb
je
pop
outsl
inc
mov
lods
in
mov
ljmp
cmp
cmp
vunpcklps
push
and
pavgb
cmpsb
js
lock
dec
mov
push
icebp
bound
jl
flds
fprem
iret
push
mov
xchg
insb
ds
jo
cs
call
call
inc
push
push
into
sbb
gs
mov
mov
into
test
stos
bound
incl
xchg
jp
mov
cmc
fmuls
sbb
loope
inc
sub
idivl
cmp
inc
cli
inc
dec
mov
js
xchg
jmp
cmp
push
jnp
add
push
fcomps
inc
testl
dec
js
hlt
mov
aas
lret
add
mov
in
dec
adc
lcall
xor
jnp
sub
xor
orb
lea
sbb
popa
fistpl
insl
rcl
mull
ljmp
sbb
mov
sbb
xor
mov
out
mov
clc
daa
push
out
fidivrs
lahf
mov
push
mov
sbb
add
pop
lcall
idivl
fs
push
sub
test
aas
out
shl
mov
cmp
inc
jmp
aad
orl
mov
js
sub
push
sbb
incl
incl
and
popa
inc
out
fs
xchg
sub
es
mov
insb
leave
aaa
cld
call
fnstsw
add
jmp
xor
shrl
scas
jo,pn
jl
incl
lods
xor
inc
ror
xor
xor
mov
pushf
dec
lcall
adcb
push
jbe
fwait
cmp
jb
or
lods
mov
mov
divl
add
lret
jg
sub
jbe
les
std
aam
xchg
xlat
cmp
mov
mov
shlb
push
or
jge
mov
ds
mov
sub
mov
rolb
jle
pushl
out
in
mov
add
pop
cli
mov
mov
out
into
pop
faddl
mov
or
ljmp
das
jecxz
jae
sahf
dec
pop
out
loopne
ret
fs
loope
je
push
push
pushf
xchg
or
jmp
add
jge
into
mov
push
int3
or
xchg
mov
jb
jg
subb
jg
cmc
cmpsl
inc
xor
popf
out
nop
leave
pmullw
movsb
add
insb
imul
xor
incl
add
sub
xor
mov
in
mov
xchg
add
decl
and
ds
jp
imul
inc
sarb
fisttps
xchg
adc
sarb
decl
decb
enter
imul
dec
bound
scas
mov
lds
aad
lods
inc
ljmp
cmc
leave
sbb
mov
mul
mov
push
cmp
xor
shlb
mov
lcall
lods
rclb
hlt
adc
adc
mov
cmpsb
les
pop
call
xchg
ffree
ret
stos
add
dec
jmp
and
sar
ljmp
add
pop
mov
push
xchg
sub
dec
add
push
and
call
xor
rclb
mov
popf
int3
adc
sub
and
jmp
bound
mov
and
inc
ss
pop
xchg
ror
subl
sub
mov
ret
or
dec
std
inc
lock
call
fsubp
decl
xor
mov
cmc
mov
test
mov
sub
insl
cli
ja
push
outsl
popf
test
ljmp
adc
mov
enter
push
push
ja
clc
decl
ss
push
lock
xor
pushl
inc
xchg
fstl
cli
lea
jge
in
fwait
sbb
mov
stos
dec
mov
cs
ljmp
iret
out
push
js
loope
bound
scas
sub
call
loop
cmp
pop
or
stc
movsb
cs
call
inc
test
mov
ja
nop
cwtl
out
je
jmp
popa
scas
and
pop
inc
jle
pop
incl
int3
dec
jmp
leave
in
lods
dec
jmp
sbb
pop
adc
ret
fsub
loopne
mov
cmp
add
mov
test
outsb
aaa
and
dec
es
pushl
jecxz
jge
jnp
fisttps
or
test
lods
ja
in
or
inc
inc
pop
push
jg
pushl
xchg
test
cli
ret
loop
sbb
mov
adc
or
add
xor
call
lcall
push
push
push
inc
scas
and
enter
movsb
inc
dec
pop
insb
mov
and
rcrb
xor
decl
add
inc
lcall
shrd
iret
sbb
stos
decl
xchg
lock
enter
repz
cmp
aas
mov
jmp
das
mov
push
cmp
cmp
test
and
jnp
push
int
push
insl
pop
sar
pushl
in
add
pop
mov
sub
mov
fcomip
pushl
xchg
out
fs
enter
push
js
fdivr
cld
add
js
push
sti
mov
fucomp
push
fwait
seto
sahf
js
decl
push
mov
mov
or
pop
int
push
mov
outsb
xorb
jmp
scas
leave
mov
mov
pop
dec
popf
dec
xor
test
sbb
lods
add
pop
xchg
inc
jmp
push
fnstcw
push
mov
faddl
inc
int3
add
decl
add
pop
in
jmp
addr16
jo
mov
cmpsb
ret
adc
ja
lcall
jne
in
xor
out
cmp
mov
test
or
add
push
dec
mov
rcr
mov
cld
imul
loop
vmread
jae
sti
in
insl
mov
je
inc
loop
mov
inc
stos
cmp
pop
xor
out
test
add
push
dec
stos
je
movsb
icebp
inc
insl
out
xchg
jbe
xchg
arpl
sbb
test
jge
mov
imul
stos
data16
in
fildl
pop
movsb
clc
in
mov
pop
sbb
nop
cmpsl
inc
pop
pop
inc
fcmovnb
call
mov
testl
push
movsl
push
xorl
cmpsb
add
aaa
std
jmp
mulb
das
mov
adc
mov
cmp
pop
ja
sbb
jp
push
pushf
imul
mov
leave
enter
and
sbb
ljmp
xor
inc
sbb
ljmp
dec
lea
dec
mov
pop
inc
mulb
cld
lcall
pop
icebp
test
sbb
adcl
sbbl
jg
test
mov
orb
mov
ret
scas
test
lcall
push
add
andl
mov
div
int
xchg
pushl
lcall
ljmp
xchg
xchg
aas
dec
imul
andl
adc
ljmp
fimull
xchg
aad
xlat
pop
jo
setb
sub
mov
jns
jl
jg
xchg
add
xchg
cli
lods
imul
aad
mov
cli
adc
aas
call
decl
and
fwait
mov
insb
fucom
fwait
orb
add
pop
cmpsl
ja
decl
call
rorb
adc
ficoml
mov
andl
mov
and
cmp
mov
inc
negb
test
inc
inc
pushf
mov
decl
fwait
push
mov
dec
scas
rolb
lds
mov
cli
lcall
pop
xor
movsb
pop
push
imul
orl
int
sub
loope
ljmp
push
fidivs
jg
in
xchg
adc
cmp
or
mov
sub
dec
aaa
jmp
das
ljmp
inc
pop
pop
sub
dec
push
dec
shlb
mov
lods
loop
jl
ud0
push
je
mull
aas
or
mov
push
enter
push
arpl
in
loope
sarb
add
decl
lcall
xor
push
ljmp
sub
adc
idiv
lcall
and
aas
mov
and
out
and
xor
fistpl
sub
inc
test
mov
dec
cmp
push
outsl
shl
mov
daa
in
xchg
or
push
mov
sub
outsl
je
test
mov
out
ret
push
ja
jnp
outsl
jg
lcall
add
cltd
incb
cmp
jmp
xchg
lds
add
outsb
jne
ljmp
mov
add
repnz
xchg
jmp
sub
aam
addb
cld
adc
push
adc
pop
hlt
jmp
xchg
and
shll
fbld
out
clc
fcomip
push
jl
jmp
int3
clc
iret
adc
sub
ljmp
ljmp
clc
mov
fisttpl
aad
cmpsb
aam
ret
out
outsb
inc
pop
cmp
cwtl
fcos
jg
jb
xor
dec
fsubrs
fst
enter
mov
xchg
sbb
jmp
pop
adc
mov
add
adc
aad
roll
mov
lcall
ds
les
add
sbb
inc
repz
insl
add
mov
or
inc
mov
cmp
cld
int
out
orl
mov
ret
ret
sbb
xlat
push
decl
inc
iret
jbe
cmpsb
sub
repnz
fists
add
shlb
mov
xchg
test
mov
loope
call
ljmp
and
lret
fcmovbe
push
and
icebp
xor
pop
mov
sahf
cmp
movsb
and
movsl
lea
pop
test
push
shl
pushl
pushl
out
push
fistl
push
and
dec
in
or
imul
sbb
pop
adc
add
adc
std
cli
xchg
mov
sbb
jns
icebp
mov
inc
mov
mov
ret
mov
xor
iret
ljmp
cmc
sbb
or
out
dec
lods
addr16
sub
in
fdivr
faddl
arpl
test
xchg
scas
xchg
movsl
inc
add
mov
jle
mov
dec
stos
xchg
sub
xchg
aas
pop
mov
or
jb
or
cltd
jp
outsl
adc
and
popa
push
loop
scas
cmpsb
repnz
mov
add
out
mov
sbb
or
loopne
cli
adc
sub
cmpsb
cmpsb
and
pop
or
xor
jo
ja
push
pop
adc
jo
nop
and
and
orb
pop
fcomi
push
punpcklwd
inc
test
or
adc
or
negb
sbb
pusha
lahf
lods
in
mov
imul
ljmp
insl
inc
stos
int
xchg
push
cs
jno
movsb
addr16
inc
pushf
mov
sub
push
andl
leave
inc
aaa
repnz
mov
pop
mov
adc
mov
xchg
sbb
lea
jb
push
enter
mov
out
dec
push
dec
repnz
adc
cld
call
sarl
hlt
das
sbb
movsb
test
in
cmp
daa
ds
ljmp
mov
or
fsubrs
sbb
fwait
pop
mov
push
jg
ljmp
pop
add
imul
sub
push
insl
cmp
aad
test
mov
mov
fwait
dec
shll
fisubl
dec
out
loop
stos
push
jecxz
daa
push
lcall
leave
mov
rep
xorb
pushf
inc
adc
pop
jb
dec
adc
loop
fs
sti
push
sar
enter
fdivrs
mov
pop
test
or
out
incl
decl
les
popa
pop
hlt
int3
pop
cmpsb
xchg
jns
repz
cwtl
or
and
nop
mov
loop
dec
sub
in
mov
cs
cmp
lret
xchg
in
std
push
push
inc
daa
mov
mov
dec
scas
dec
das
dec
add
mov
icebp
call
testb
push
ficoms
loop
mov
mov
stc
sbb
mov
mov
cltd
mov
xchg
sahf
and
out
mov
add
dec
inc
adc
pop
jb
push
push
loopne
call
aas
mov
mov
aaa
cmp
divl
jae
sarb
je
add
cmp
mov
arpl
fisttpl
and
in
incl
negl
lcall
mov
stos
ret
data16
flds
jecxz
and
loopne
mov
adc
xchg
je
mov
xor
dec
daa
mov
outsb
fldln2
jo
rcrl
cmp
pop
test
sub
test
icebp
outsl
dec
mov
sub
lods
int3
pop
in
jmp
jbe
mov
jl
xor
outsl
dec
pop
loopne
push
mov
or
mull
adc
adc
xchg
shrb
mov
sub
add
movsl
or
int
push
mov
hlt
incl
js
adc
jo
dec
sbb
dec
push
cmp
jg
dec
mov
xor
cmp
jnp
mov
mov
icebp
jb
sbb
out
add
pop
pop
aas
mov
jns
xchg
addr16
inc
icebp
pop
and
mov
sti
push
es
xor
repz
nop
movsl
dec
mov
jg
call
fwait
aam
jecxz
xor
in
jo
shlb
loope
push
jp
jnp
add
lds
std
inc
mov
pop
sahf
pop
out
insl
xchg
lahf
rcl
inc
jbe
test
jmp
mov
loopne
rcrl
pop
ja
cs
jns
sub
xchg
pusha
arpl
xchg
jo
inc
cmp
pop
out
mov
jp
jg
xchg
mov
push
mov
lcall
jle
or
repz
test
cwtl
out
je
cmp
insb
ret
mov
mov
jae
dec
mov
jne
adc
cltd
jg
andb
out
xchg
xchg
imulb
fsts
int
pop
hlt
and
out
js
ljmp
enter
xchg
aaa
loope
xlat
jbe
sub
in
bound
rclw
movsb
cmp
cmp
xor
repz
jbe
inc
or
sbb
pusha
push
test
out
lcall
cmp
and
movsl
das
jae
push
and
rcrb
movsb
sub
hlt
xchg
pop
inc
sub
fildll
mov
mov
lea
scas
fadds
xchg
dec
jbe
into
sbb
incl
subl
out
jmp
ret
pop
int3
push
clc
test
mov
lea
enter
stc
jl
inc
sub
sbb
adc
lahf
fwait
in
test
dec
jmp
jg
incl
cld
sar
jp
int3
cpuid
inc
cmc
lds
mov
xor
xchg
cmp
cld
call
jb
push
movsl
aas
pop
mov
or
mov
mov
mov
jge
fsubl
xchg
and
hlt
dec
loop
pop
sbb
loop
int
jo
lahf
push
in
ret
and
out
call
add
into
jle
sbb
dec
jmp
insb
dec
mov
or
mov
call
jecxz
mov
fdiv
inc
test
mov
push
sti
mov
mov
xor
and
inc
stc
inc
mov
push
push
push
jp
mov
or
and
sbb
jmp
ret
jge
jbe
out
mov
mov
ds
scas
mov
or
fsubl
test
xchg
and
in
or
cmc
push
and
rcl
xor
cmp
aam
testb
mov
les
lcall
lcall
cmc
adc
jno
out
es
jle
and
sahf
aas
ljmp
les
push
lods
xchg
mov
inc
xor
scas
imul
dec
lods
pop
sarl
incl
movsl
fbstp
sahf
jns
pop
test
ja
into
ljmp
push
xor
jno
push
dec
jbe,pn
push
or
cmc
cmp
pop
inc
mov
push
xor
bound
decl
and
mov
in
hlt
rcrb
or
repz
xor
dec
in
mov
dec
push
push
shr
inc
pop
sbbb
jl
cmpb
pop
fisttpll
daa
xchg
rorb
popa
std
cmp
push
call
xorb
int
jg
sbb
rolb
push
movsl
pop
or
dec
mov
out
mov
decb
push
fucomp
movsb
mov
inc
sbb
lret
imul
in
mov
stos
sahf
add
pop
or
incl
scas
add
xor
cltd
ja
loope
pop
mov
test
incl
jb
sbb
cmpb
int3
in
iret
push
lods
pop
mov
bound
jmp
out
dec
pop
mov
or
xchg
out
mov
divps
cs
pushf
add
lods
jae
jp
mov
xchg
xchg
mov
xor
daa
push
and
push
pop
add
fcomip
pop
hlt
popa
lcall
mov
ret
mov
mov
pop
push
or
int
cmp
lock
popa
in
lods
xchg
xor
ljmp
decl
add
push
popa
sub
mov
dec
leave
push
incl
lcall
xor
lret
jbe
pop
mov
adc
ss
push
add
adc
xlat
push
mov
mov
jmp
cmp
stc
cmp
insl
jp
mov
fistl
call
pop
push
cli
mov
inc
lahf
je
rcr
out
xor
ljmp
sbb
int
xor
adc
push
push
mov
js,pt
mov
and
adc
jge
sbb
cmpsb
int3
test
iret
jmp
pop
sbb
xor
pop
daa
mov
jecxz
sub
adc
test
xchg
lcall
and
js
or
mov
or
sbb
gs
mov
cld
stos
xchg
dec
push
test
add
push
daa
loopne
xchg
lods
scas
out
mov
call
xlat
sub
dec
stc
imul
inc
cmp
scas
out
dec
andb
lcall
push
mov
orb
lods
pop
cmpsb
push
mov
xchg
pop
cwtl
lcall
inc
cli
ljmp
and
ds
fnstcw
fstpt
mov
push
cs
aas
sbb
cmpsl
or
cmc
push
shrl
push
aad
xchg
popf
cmpsb
js
mov
aaa
fdivl
lock
cld
mov
int3
out
ds
fiaddl
xor
incl
rcrl
mov
mov
dec
dec
bound
add
push
insl
xchg
push
jp
sahf
cmp
or
mov
leave
fadds
mov
sub
push
test
rcl
leave
adc
sbb
push
inc
lods
mov
mov
mov
js
cli
jb
pushl
mov
call
sub
mov
enter
das
mov
adc
insb
and
cmp
mov
jge
mov
pop
pop
out
sti
std
cmpsb
adc
pop
fstp
inc
mov
ds
dec
lcall
enter
mov
cmpsl
xor
fstl
loope
fs
mov
cmp
outsb
add
lock
jg
mov
out
insl
lcall
xchg
fsubl
sahf
xchg
inc
enter
xchg
mov
mov
cltd
out
cli
cmp
outsl
adc
pop
cmp
adc
cmp
insb
flds
inc
mov
pop
sahf
ljmp
test
pop
push
push
adc
orb
sahf
es
les
mov
or
test
push
pushl
ja
add
pop
vmovntps
pop
xchg
int3
fisubrs
ret
sti
lods
arpl
fwait
rorb
lods
daa
lcall
sub
add
fldenv
pusha
mov
xor
dec
popf
imul
inc
mov
jmp
addr16
dec
aaa
push
jge
rcr
hlt
lahf
popf
cmp
xor
and
pop
push
stc
in
pop
cld
out
lret
jmp
das
and
push
popf
js
mov
cpuid
mov
decl
jl
sub
sahf
cmp
push
out
mov
or
inc
mov
lcall
and
cld
mov
xchg
test
and
xchg
jg
and
add
fistl
sbb
and
lcall
aaa
mov
scas
hlt
adcl
pop
cmpsb
sbb
sbb
lcall
push
xor
pop
icebp
cmp
pop
and
stos
movsl
xor
mov
push
push
cmp
ljmp
cmp
sub
inc
mov
loope
outsb
and
inc
jmp
adc
pushl
xchg
lcall
std
in
mov
push
iret
addl
dec
dec
add
jge
pusha
jmp
mov
das
jmp
fcompl
inc
push
xchg
or
ljmp
cmp
lods
or
mov
sbb
mov
aad
mov
pop
pop
shlb
mov
shlb
inc
ljmp
mov
mov
imul
push
fidivrl
inc
jb
enter
dec
pop
dec
jg
push
xor
sub
pop
pop
scas
loop
cmp
data16
mov
mov
ljmp
les
pop
nop
sub
outsl
sbb
and
jg
arpl
mov
inc
and
mov
jmp
adc
decl
call
and
jl
mov
dec
lock
cwtl
add
lock
mov
cmpsb
nop
stos
outsl
xchg
cmpsl
dec
xorl
stos
inc
lcall
popf
sub
je
inc
adc
lock
inc
pushf
cltd
push
adc
mov
xor
mov
cmc
push
lcall
cmc
cmp
dec
fmull
xchg
push
push
mov
mov
scas
mov
stos
pushl
outsl
shrb
push
icebp
scas
fdiv
and
fwait
push
xchg
lcall
jp
xor
adc
or
mov
cld
sbb
clc
jae
fcoml
idiv
lcall
outsl
mov
dec
aam
jmp
adc
xor
pop
popf
repnz
adc
lret
cmp
cltd
jge
lahf
mov
das
scas
or
mov
xchg
nop
nop
or
lcall
jge
sub
jl
mov
dec
popf
pop
out
cwtl
jo
jno
insb
rclb
ret
cs
testb
jg
mov
sbb
subb
push
inc
cmp
xlat
cld
ljmp
fcomip
mov
out
push
loop
inc
les
jge
xor
ja
lods
jp
stc
xchg
xor
call
jno
or
mov
scas
rol
loopne
pop
xchg
sub
mov
add
andb
cmp
inc
xor
pop
in
push
push
mov
imul
stos
mov
cmp
fnsave
jnp
or
test
xor
mov
fcoml
jg
push
jo
sub
imul
sbb
roll
ja
incl
jmp
lods
inc
mov
xchg
dec
mov
xchg
rcrb
mov
mov
mov
dec
jle
arpl
aad
roll
mov
push
fdivrp
jne
or
pusha
cmp
cld
ljmp
mov
sbb
out
iret
sbb
bound
pop
dec
test
rolb
jg
add
cwtl
jge
in
stos
push
cld
add
pop
add
dec
fildll
scas
out
pop
xlat
cmp
xor
adcl
adc
jecxz
aas
adc
stos
fcomip
enter
pop
jno
jle
adc
ror
mov
cmovle
out
and
pushl
xchg
movsb
pushf
icebp
dec
faddp
dec
lods
push
xchg
and
mov
xchg
lea
push
jecxz
adc
fst
add
out
int3
enter
dec
sahf
cmpsb
nop
hlt
in
test
es
into
cmp
or
adc
sbb
mov
ffree
cmc
cld
pop
pop
sub
aas
scas
mov
test
adc
fstps
inc
outsl
mov
pop
push
incl
inc
pop
inc
xchg
ret
mov
ror
inc
ss
popa
xchg
arpl
mov
into
mov
gs
mov
ljmp
mov
movsl
sbb
cmp
in
aam
or
pop
cld
pushl
push
sar
rcll
mov
fmulp
cmc
enter
sti
incl
fildll
and
xchg
test
sbb
int
mov
xor
push
mov
cwtl
push
jl
or
mov
mov
cmpsl
pop
mov
mov
mov
popa
imul
ret
mov
std
ds
push
mov
iret
lock
push
std
stos
scas
sub
clc
sub
test
jg
lahf
call
mov
sub
outsb
and
or
imul
hlt
jl
fsubl
inc
inc
pushl
std
dec
xchg
adc
inc
adc
mov
call
aad
out
div
cs
popf
dec
into
jg
adc
sarl
scas
in
xor
cmc
push
cmpsl
push
push
in
cmp
dec
sbb
jmp
scas
jecxz
xor
popl
mov
loope
imul
mov
sub
dec
mov
test
sub
mov
lds
pop
mov
mov
call
mov
xor
jg
rorb
int
mov
adc
fnstenv
clc
mov
adc
push
mov
lret
sbb
push
inc
aas
sbb
mov
mov
call
or
std
push
into
sbb
xchg
jns
out
shrl
jg
aaa
aam
rorb
lcall
mov
jg
jno
movsb
into
lret
test
fs
jno
mov
mov
dec
addr16
loop
sbb
push
mov
push
pop
popa
mov
dec
cmpsl
jecxz
loope
stos
clc
int3
iret
mov
fmuls
insb
dec
cwtl
sahf
mov
mov
mov
jecxz
push
fwait
lcall
mov
dec
pop
mov
jmp
dec
decb
xchg
popf
leave
shlb
outsl
arpl
xchg
xchg
decl
ss
cmp
pop
loopne
add
mov
sub
jecxz
incl
mov
loop
out
cld
and
clc
lods
dec
sahf
inc
add
pop
in
sbb
xlat
leave
mov
cli
jg
mov
fildll
loop
push
xchg
and
scas
cli
jmp
out
xor
mov
adc
dec
lcall
pusha
push
int3
lcall
fisubl
sbb
add
pop
push
sbb
loop
cwtl
inc
xor
ja
cmp
repz
push
xor
mov
ljmp
cmp
ljmp
sar
mov
dec
or
or
jg
in
sbb
js
sub
add
jmp
lods
aam
add
test
xchg
aaa
enter
ficompl
loope
pop
aaa
fistl
mov
mov
mov
adc
std
ja
mov
pushf
pushl
push
push
jmp
shl
ljmp
movsl
dec
add
inc
inc
in
aaa
icebp
mov
call
test
rorb
sub
sub
test
cmp
int3
out
jmp
les
jno
adc
adc
sub
push
or
inc
pusha
mov
and
ljmp
inc
push
and
in
dec
lea
adcl
mov
js
push
mov
movsb
std
cmp
pop
sub
mov
sbb
ficoms
xchg
ficompl
mov
out
cli
mov
push
and
mov
xor
decb
lods
adc
mov
jmp
mov
jp
sub
pusha
dec
outsl
movsb
sahf
mov
lret
cld
lret
sub
xchg
lea
mov
add
mov
ljmp
pop
ss
in
ljmp
movb
mov
sti
or
outsb
pop
sarb
pop
jecxz
in
in
test
call
adcb
push
and
adc
mov
or
fdivrl
aas
and
dec
adc
out
cmc
push
xor
insb
gs
cwtl
scas
hlt
int3
into
pop
decl
nop
cmp
fsts
and
push
xor
pushf
data16
mov
mov
mov
test
xor
cmp
ljmp
mov
gs
lcall
push
jo
ds
add
inc
scas
in
pop
push
out
sbb
fstl
call
aad
popf
movsl
jecxz
int
jo
lahf
call
sbb
outsl
dec
push
sub
rorb
pop
loopne
xorl
fisttps
push
push
je
sbb
push
cwtl
hlt
dec
divb
mov
adcl
repnz
dec
or
inc
int3
xor
outsb
clc
lcall
or
dec
push
cmc
rcl
cmpsl
sub
les
lcall
adc
xchg
stos
test
lock
fisubs
cmp
mov
fwait
add
or
leave
pusha
xor
jno
call
addr16
xlat
popf
bound
popf
add
lods
outsb
push
test
stc
mov
call
inc
clc
jp
fxch
std
jo
call
and
sahf
xchg
enter
fimuls
pushl
lcall
movsl
stos
jl
fistpll
cmc
xchg
mov
sbb
adc
popf
rcl
decl
push
outsl
jnp
pop
fwait
outsl
cltd
outsl
mov
mov
cmp
cs
jg
movsl
inc
int3
ror
mov
mov
pop
int
mov
test
test
call
xlat
ret
jl
in
popa
mov
cmp
cld
stos
dec
insb
loope
add
fldt
jmp
dec
mov
jle
pop
nop
sub
decl
repnz
xlat
jnp
push
popf
aad
push
lcall
insb
cmp
cmpsb
bound
hlt
mov
cmc
test
fistpl
sub
dec
xor
dec
enter
incl
fbld
mov
out
cmp
mov
bound
pop
rcrl
mov
inc
push
inc
loop
and
fmul
push
add
jp
cmc
and
inc
pop
rorb
aaa
add
std
call
call
jmp
add
subl
push
push
das
sar
or
nop
sub
inc
filds
cltd
push
decw
cmp
imul
lods
push
mov
call
ret
mov
ret
loop
or
push
mov
aam
xor
hlt
incl
lods
bnd
insb
nop
jb
xchg
dec
or
fistpll
xchg
or
add
insb
test
jnp
sub
pop
cltd
rolb
mov
dec
or
out
ljmp
in
xor
or
daa
dec
add
jp
push
jno
dec
add
ret
inc
scas
pop
fmul
cmp
mov
fidivrs
xchg
cltd
fdivr
inc
jnp
jp
sbb
pop
dec
fs
addr16
or
jnp
js
daa
mov
orl
loop
cmp
bound
aad
jmp
dec
jl
test
fisubs
mov
int3
jmp
or
push
or
mov
cs
xchg
test
enter
mov
sub
dec
mov
dec
decl
lock
out
push
and
xor
or
push
movsb
rcl
rorb
jmp
enter
mov
cmpb
rclb
add
pop
add
cli
and
cmp
mov
clc
adcl
mov
aas
mov
inc
cld
lahf
les
cmp
dec
into
cltd
mov
incl
adc
xchg
cs
mov
inc
lahf
stos
xor
adc
xchg
cmc
int
divb
lea
or
mov
decl
ljmp
fxch
lret
jb
dec
out
mov
mov
ud0
pop
push
fsts
popa
pop
rorb
mov
lcall
cmp
sahf
dec
cmp
bound
xchg
xor
dec
xchg
dec
cmp
mov
decl
cmp
pop
fdivrl
into
test
dec
mov
imul
add
call
decl
push
lods
rcr
into
imul
mov
or
cmp
cltd
jge
push
push
jne
mov
call
push
popa
pop
pop
loop
jge
in
jecxz
jae
imul
sbb
leave
add
dec
ja
dec
adc
inc
fistl
inc
lock
int3
cld
leave
scas
add
ljmp
fcomip
lods
xchg
or
ret
mov
mov
pop
jl
mov
pop
pushl
mov
imul
pop
sub
popa
shrl
aas
repz
mov
ljmp
clc
ja
push
sbb
xchg
sahf
inc
mov
movsl
test
adc
mov
iret
test
dec
pushf
test
mov
inc
xchg
lock
lcall
dec
pop
hlt
out
cmpsb
or
pop
shll
mov
pop
jmp
ss
fisttpll
rclb
jmp
cmpsb
out
pusha
repz
cwtl
enter
lock
sbb
loop
mov
add
cli
ljmp
repnz
push
mov
pop
sub
jbe
test
mov
push
call
out
xor
add
daa
testb
adc
popf
pushf
sbb
push
xor
pop
int3
and
pushl
mov
jmp
ss
or
jbe
xchg
insb
pop
jno
lret
incl
call
push
lret
inc
insb
dec
xchg
jnp
clc
cmc
fdivrl
and
xchg
imul
mov
adc
jp
aam
jmp
nop
sub
jns
sub
out
cmp
dec
mov
dec
out
loop
fdivrl
fldcw
movsw
cwtl
hlt
incb
test
sbb
or
popa
popa
mov
dec
and
sarb
decl
mov
inc
jecxz
jecxz
pop
dec
push
add
aam
idivl
sub
insl
stc
dec
mov
jge
and
in
pop
test
jge
mov
dec
cld
test
lock
scas
addl
mov
add
fs
aaa
xor
pushl
std
es
add
in
test
push
push
jmp
out
sti
push
fmuls
stc
pop
sar
out
inc
lret
pop
iret
cmp
jle
pop
or
lret
cli
dec
xlat
pop
leave
mov
xor
inc
inc
nop
fs
movsl
lods
jecxz
call
and
std
lock
dec
xchg
xlat
fists
scas
push
mov
lcall
push
jbe
cmc
mov
cli
jge
roll
rolb
lcall
cmp
cmp
xor
adc
xchg
enter
cmp
call
shl
pop
sbb
mov
jae
scas
dec
lods
push
popa
cmpsb
push
adc
scas
dec
repz
mov
xlat
xorb
sbb
dec
jnp
xchg
cmp
add
xor
mov
cs
sbb
or
xchg
inc
inc
nop
and
inc
ljmp
mov
or
push
mov
sti
syscall
les
xor
and
sub
dec
add
std
pushl
repz
adc
in
in
push
scas
cli
xor
pop
sahf
xor
loope
jg
cmp
push
ret
xor
sti
repnz
imul
fcomi
jmp
notl
stos
leave
scas
adc
push
pushf
jmp
clc
jle
cmp
outsb
inc
inc
pushl
call
fdivs
movsl
and
leave
push
clc
pop
push
and
loopne,pt
dec
xor
lcall
pop
stc
fldenv
xor
lods
adc
daa
daa
pop
mov
rclb
xchg
push
push
ljmp
negl
inc
mov
jo
adc
jns
ds
movsl
ret
adc
lcall
add
cltd
jnp
and
outsb
mov
arpl
shl
rcl
incl
dec
out
out
mov
jo
push
jmp
out
sbb
popa
push
sub
add
jp
cmp
ficomps
push
cmp
mov
lret
test
jp
cmp
shlb
cmp
mov
ds
repnz
cs
das
sar
sahf
xchg
mov
dec
inc
add
bound
push
cmp
mov
add
mov
gs
add
cmp
jp
ljmp
adc
mov
sub
and
jge
xor
sarl
cmpsl
add
pop
xchg
imul
pop
xchg
pop
ja
pushl
dec
ds
pop
cwtl
mov
xchg
pop
rcll
hlt
ja
aas
xchg
sbb
decl
xorl
sti
lret
gs
cmp
pop
sbb
pop
in
mov
lds
decl
add
push
sbb
dec
test
fcmovnu
loope
repnz
call
sub
inc
push
inc
add
xor
mov
jmp
clc
jb
and
mov
inc
xchg
ret
push
fcmove
icebp
dec
adc
fsts
mov
pop
xchg
fcomps
scas
or
jge
xchg
pop
sbb
adc
jno
lock
add
bound
leave
mov
xor
outsb
xlat
popa
repz
in
xchg
cli
in
hlt
cmc
jae
inc
pop
gs
in
jg
scas
push
sarb
in
out
fimull
insb
jmp
push
aas
jo
incl
out
gs
mov
mov
cltd
or
stos
insl
sahf
jl
xchg
in
fstpt
jg
in
mov
push
adc
dec
test
push
lahf
decl
mov
pop
mov
shll
adc
shrl
sbb
xchg
outsl
mov
ljmp
ljmp
loope
mov
out
andl
cwtl
jmp
adc
sub
cmpsb
sbb
sbb
imul
fiadds
or
call
xor
addr16
xlat
nop
mov
pop
jp
mov
add
icebp
cwtl
xor
cmp
incl
sbb
fsubrl
and
jmp
ret
jmp
test
xchg
dec
ss
popl
je
into
call
and
lcall
adc
dec
loopne
pop
fbld
lahf
and
sti
ret
roll
addr16
push
leave
jne
cmpsb
decl
cmp
sub
aam
rcrb
dec
icebp
push
inc
push
nop
jecxz
data16
pop
cmc
fsubl
mov
jne
push
cwtl
sbb
xchg
pop
lahf
sub
ljmp
fistl
mov
cmp
out
faddl
dec
imul
adc
fwait
mov
jp
or
decl
xchg
or
mov
mov
sub
icebp
sub
adc
pop
dec
xchg
xor
in
xor
mov
mov
or
call
call
loopne
int
stos
sub
mov
add
rcr
xlat
inc
dec
ljmp
add
xor
pop
pusha
inc
mov
jge
or
icebp
into
hlt
pushl
and
cmc
ficoml
sarb
sbb
pop
dec
jle
add
jns
pop
andl
lcall
je
add
ja
aam
shll
incb
pop
es
mov
out
xor
dec
js
inc
rolb
fsubrp
xor
mov
ljmp
fwait
cmp
aam
xor
push
adc
imul
mov
jge
ud0
cmp
int
lods
hlt
mov
pop
aas
imul
pop
imul
loop
aaa
mov
mov
pop
pop
adc
ljmp
add
lcall
std
lret
rcrl
aad
sub
sub
lret
hlt
jmp
fidivs
cwtl
repz
fs
int3
dec
inc
sahf
ret
pop
xchg
faddl
inc
push
pop
hlt
sub
dec
es
insb
incl
pop
or
jb
xchg
enter
add
fwait
or
fdivs
cld
test
cld
clc
stos
enter
mov
push
pushl
leave
scas
out
test
call
add
pushl
xchg
sub
lret
movsl
nop
mov
es
or
jp
lods
dec
in
gs
enter
and
inc
mov
pop
inc
push
jo
dec
pop
aad
push
sbb
xorl
scas
pop
xor
xor
leave
popa
gs
lds
fisttpl
cmc
add
adcl
add
ss
test
pushf
fs
mov
jle
fcomps
and
add
ret
scas
sbb
dec
push
push
pop
sub
sub
popf
test
mov
or
adc
fcomp
rcrb
push
stc
push
decl
dec
sbb
gs
xor
movsl
leave
shll
roll
inc
xor
xchg
adc
cmp
xchg
jl
pop
dec
pop
pop
or
sahf
mov
xchg
scas
mov
sub
stos
ja
mov
int3
xchg
cld
and
dec
push
sbb
add
push
lcall
les
sbb
jo
ret
test
out
pop
fldenv
mov
sbb
fstl
pop
fildll
dec
pop
lea
and
imul
rclb
mov
cmp
or
scas
jnp
pop
jo
pop
mov
and
sbb
jno
mov
mov
mov
pop
test
push
xchg
xchg
pop
mov
sbb
lcall
lods
lret
imul
inc
adc
sub
fiaddl
mov
cmp
lcall
fs
mov
cltd
lds
pop
or
or
cmp
adc
xchg
mov
pop
std
jmp
out
cmc
fistpll
fcomps
inc
fnstsw
mov
cli
in
mov
insb
adc
dec
push
pop
cltd
push
pop
inc
adc
mov
out
mov
mov
mov
push
or
movsl
es
call
xchg
and
sub
fdivrs
add
or
or
push
mov
movsl
add
lock
and
push
mov
pop
cmpsb
iret
mov
jg
int3
pusha
fnsave
fildl
inc
aad
out
loopne
popa
adc
push
sti
scas
fdivr
jmp
aad
fbstp
cmpl
and
pop
sbb
and
rorb
and
shrl
incl
sub
pushf
sub
push
xor
mov
or
leave
mov
iret
adc
test
jecxz
xchg
mov
inc
hlt
out
in
xor
jle
mov
hlt
inc
push
loop
xchg
inc
pop
xor
stos
pop
mov
scas
pop
mov
outsl
adc
aaa
sarb
test
push
ret
sub
jo
mov
ret
pushl
iret
pop
jb
push
cwtl
bound
or
rorl
orl
sbb
mov
jmp
xchg
cmp
jno
xchg
push
cmp
addr16
jg
inc
cmp
mov
fsubl
push
and
or
repnz
mov
movsl
ljmp
cmpsl
nop
jmp
jg
fwait
aaa
mov
call
arpl
push
xor
inc
dec
in
jbe
lods
adc
or
cld
out
repz
and
cmpl
cld
cmp
in
add
xor
lds
xor
cmp
or
cmp
incl
lods
scas
mov
jecxz
xorb
lea
push
mov
push
dec
lods
pop
lcall
dec
and
hlt
or
in
outsl
mov
adc
repz
cli
decl
xor
inc
insl
push
loope
push
cmp
imul
jecxz
xchg
ljmp
fiaddl
cmpsb
pusha
inc
inc
mov
roll
or
rcr
decl
mov
leave
cltd
test
xor
cli
and
inc
push
mov
inc
decl
jg
mov
mov
imul
add
lahf
fildl
adc
nop
je
dec
jne
jl
ljmp
xor
pushf
inc
mov
dec
nop
pop
adc
incl
mov
lcall
cld
pop
dec
lods
repnz
mov
lret
xorl
pushl
dec
in
pop
sbb
cmp
rorl
sbb
shlb
lcall
dec
jmp
inc
fisubrl
fcmovnu
push
test
out
xor
pop
lock
jmp
lret
pushf
pop
pop
or
shl
sub
hlt
leave
jne
sub
cmp
out
xor
les
je
or
xchg
sbb
add
sbb
adc
decl
xchg
cmp
sub
pusha
jmp
repz
out
push
dec
lea
stos
rolb
sub
decl
jp
adc
sub
js
sahf
cmp
push
popf
loopne
cmc
cld
fsubl
dec
dec
icebp
addr16
adc
push
or
test
fidivs
xchg
or
pop
add
sbb
mov
jo
pushl
fdivrl
imul
std
in
sbb
adc
sbb
ret
jae
dec
call
fistps
fistpl
data16
movsl
jp
dec
push
cmp
bound
mov
rcrl
mov
sbb
xchg
insl
movsb
stos
fdiv
adc
jg
imul
xor
mov
in
add
cli
sbb
out
pop
lods
push
pop
pop
or
mov
cli
call
mov
adc
shr
xor
jb
cmp
in
pop
hlt
ljmp
imul
out
icebp
lds
xchg
adcb
ljmp
push
xchg
daa
incl
mov
push
in
fcmovnu
int
incl
adc
mov
call
inc
test
int
stos
ret
test
or
sub
mov
or
ljmp
jg
nop
mov
push
jne
clc
ss
es
fildll
test
mov
outsb
jl
mov
lcall
call
lret
call
cmp
sbb
aam
pop
mov
cld
cmpsl
mov
fcmovne
mov
rclb
mov
xchg
bound
or
loope
lcall
stos
rorl
add
leave
push
cmp
in
jge
sub
test
ds
push
fbld
dec
mov
pop
or
xchg
lret
cld
test
dec
dec
and
fiaddl
setne
sbb
sub
aaa
lret
dec
add
aaa
mov
insl
js
loopne
lock
incl
and
scas
mov
and
xchg
loope
sub
frstor
test
test
cli
jmp
icebp
dec
cmp
popa
and
loop
mov
cli
dec
in
popf
jo
pop
jns
js
mov
inc
je
cwtl
or
lcall
push
fwait
or
iret
xchg
shrb
xor
push
mov
ret
incl
adc
test
adc
xlat
jmp
das
test
out
lret
dec
stos
lret
das
mov
outsl
clc
decl
inc
adcb
cmp
mov
add
shrl
fwait
outsl
dec
in
cmpl
or
pop
test
pop
xor
mov
lcall
mov
fcoms
mov
push
jmp
cs
lods
lret
sbb
jg
icebp
decl
lock
xchg
outsl
cwtl
ret
pop
mov
mov
add
fldt
imull
in
mov
stos
pop
xor
and
push
mov
sbb
lcall
inc
not
in
adc
pop
cmpb
roll
pop
bound
push
mov
clc
pop
aam
or
cmp
xchg
xlat
aad
adc
movsb
orl
divb
lock
and
ret
orl
lods
sbb
cld
movsl
xor
jl
lcall
incb
ds
adcb
xchg
sbb
es
loope
mov
adc
jne
lret
cli
dec
inc
cmp
lret
lock
loopne
in
push
aam
add
adc
cltd
lcall
push
mov
addl
insl
mov
lock
loop
inc
incl
pusha
sub
pop
lahf
negl
mov
imul
mov
xorb
inc
in
xor
adc
fbld
outsb
sbb
outsb
out
xor
pop
push
jbe
test
push
add
decl
add
jnp
mov
lods
adc
push
dec
sarb
fcmovnb
loope
inc
enter
decl
loop
outsb
shrl
and
rdpmc
scas
sub
fmull
or
push
xor
push
and
cli
in
jl
xor
js
push
cmpl
lea
add
inc
mov
mov
stc
repnz
xor
adc
xchg
in
mov
pop
push
push
call
dec
fcmovnu
imul
arpl
xor
lock
repnz
scas
mov
notb
sub
jmp
mov
je
mov
and
stos
lock
push
push
push
sub
lcall
jno
rcl
stos
testb
or
outsb
cmp
mov
adc
sbb
popf
push
mov
in
orl
ret
ljmp
adc
push
jno
or
lods
stos
lods
ror
xor
aas
cmpb
rcrl
mov
sbb
arpl
and
enter
xchg
hlt
or
pop
add
ficompl
add
dec
mov
add
jmp
sub
xor
rcr
rol
jecxz
sub
lock
aas
lret
cmpsl
push
pop
sti
es
and
mov
push
push
and
lcall
stc
fidivrl
pop
ret
scas
orb
mov
and
stos
jg
jno
test
call
pushl
int3
in
mov
sbb
inc
jg
fwait
arpl
mov
dec
inc
sbb
hlt
insb
mov
inc
or
jb
push
ds
incl
scas
fidivs
mov
sar
lahf
add
push
add
pop
lret
mov
orb
out
mov
bound
sbbb
mov
stos
push
sub
ljmp
daa
pop
inc
mov
and
and
jle
dec
inc
movsb
mov
xor
jmp
jnp
ds
xchg
lret
loopne
mov
pop
jg
fisttpll
into
icebp
dec
aam
mov
negl
stos
outsb
fs
jg
movsl
jmp
pop
out
or
adc
add
mov
ljmp
adc
out
out
lock
and
idiv
xchg
dec
jle
inc
lcall
xor
jp
outsb
jnp
enter
out
sbb
jne
mov
xor
ret
out
loope
jg
jmp
stos
push
jb
xor
pusha
dec
into
insb
pop
jg
das
hlt
cmc
push
outsl
in
nop
fdivrp
jmp
fwait
in
push
xchg
cmp
inc
adc
inc
push
out
lret
cmpsb
mov
lcall
push
sbb
fimuls
ret
or
xorl
in
repz
xor
pushl
hlt
ficomps
pushl
add
sbb
cmpb
xchg
iret
add
xor
inc
mov
imul
and
dec
lock
ljmp
int
pop
cmpsl
es
gs
call
lock
pop
popa
add
lret
es
lock
jne
xchg
scas
mov
lret
sbb
mov
cld
push
sti
popa
loope
sub
ljmp
jg
pop
xchg
call
arpl
and
inc
out
push
xor
jns
sbb
out
sarb
pop
idiv
pushl
imul
lock
push
sub
pop
divb
sbb
decl
add
test
addr16
repnz
lea
cmp
mov
outsl
mov
jmp
lcall
test
testl
ret
pop
jl
adc
adc
call
std
adc
mov
sub
insl
jae
mov
les
mov
xchg
add
jmp
pop
push
xchg
push
mov
addr16
cmpsb
and
inc
pop
fadds
mov
shrb
aam
hlt
stos
cli
push
fisttpl
mov
sar
lcall
scas
pusha
inc
cmp
sbb
int3
xor
dec
xchg
mov
es
sbb
mov
adc
sbb
aam
add
xor
inc
ss
mov
push
dec
int3
mov
cmp
je
push
mov
out
mov
xor
cmpsb
pop
pop
mov
in
daa
lret
ficompl
push
ja
dec
push
lahf
insl
adc
fbstp
inc
mov
pushl
or
ja
out
pop
cmc
divb
mov
imul
mov
xlat
andb
lcall
mov
cmc
ljmp
daa
movsb
mov
ljmp
in
out
std
mov
fwait
ror
dec
test
xor
in
jl
pusha
lods
adc
pusha
push
incl
imul
add
movsb
mov
inc
loope
mov
cltd
stos
das
cli
dec
roll
pushf
xorb
gs
cltd
and
je
jno
pop
xor
stos
ljmp
aas
stc
mov
jnp
xchg
test
and
lcall
faddl
cwtl
xchg
cmpsb
in
ljmp
lock
push
cs
fstps
insb
mov
lret
fbld
fwait
dec
movsb
hlt
cmp
pop
xor
cmp
mov
jno
mov
xchg
mov
loop
sti
or
mov
cli
or
out
jp
mov
inc
or
push
cli
dec
xchg
xor
cmp
aas
inc
sub
nop
dec
mov
dec
mov
push
mov
or
xchg
orb
bound
mov
fdivs
pop
sti
push
mov
ret
mov
mov
cmpsl
mov
mov
in
stc
out
out
push
dec
cmp
incl
stos
es
push
shll
mov
sbb
pushf
xor
cmp
mov
in
inc
cmp
mov
pushl
and
cs
pop
cld
sbbl
in
dec
les
mov
sar
xchg
pop
mov
xor
sbb
mov
and
jg
out
adc
jno
repz
cld
ja
popl
es
out
lock
xor
adc
nop
and
dec
sahf
inc
data16
js
out
std
or
xchg
out
cs
lods
loop
mov
flds
lea
outsl
insl
lea
push
repz
mov
pushl
adc
and
mov
lahf
push
iret
adc
incl
push
adc
je
mov
loopne
or
jns
push
stc
mov
jl
sub
jg
lcall
add
loop
or
mov
popa
cmp
lcall
call
pop
cmp
pop
popf
cmp
sti
push
fnsave
jo
sbb
lahf
lea
in
popa
cltd
push
or
jo
and
rcrl
xchg
cwtl
or
xor
call
mov
xchg
jecxz
jecxz
out
sbb
pop
xor
pop
xchg
mov
push
or
ljmp
stos
mov
mov
icebp
imull
ds
fs
movhps
and
pop
mov
inc
iret
in
cli
jbe
icebp
bound
jmp
in
fldt
fimull
push
fsubrl
mov
repz
adc
mov
inc
lahf
push
mov
mov
adc
loope
movsl
roll
arpl
loop
dec
es
push
or
dec
dec
fmul
lahf
or
fiaddl
notb
jmp
std
sbb
in
fwait
sbb
push
cwtl
mov
clc
dec
jb
jg
lret
or
mov
shlb
nop
out
movsb
pop
dec
aas
xor
and
cmp
jmp
fisubrl
subl
pushf
movsb
pop
lcall
call
outsl
xchg
cli
jg
mov
rcl
jo
inc
mov
out
sub
ljmp
test
test
sbb
xlat
and
mov
addr16
stos
decl
and
das
test
popa
mov
dec
xor
mov
mov
pandn
in
mov
out
adc
nop
fldt
fbstp
in
nop
in
push
inc
mov
ljmp
shrb
and
dec
ret
or
inc
pop
inc
mov
int
mov
jge
mov
out
std
sbb
iret
sbb
sub
adc
hlt
dec
outsl
sub
mov
outsb
push
push
in
pop
icebp
insl
test
jae
imul
cmpsl
out
incl
lret
rcr
mov
nop
push
pop
int3
shll
arpl
lcall
ljmp
cmp
ret
inc
bound
pop
mov
fldenv
jae
and
adc
inc
and
pop
jmp
out
popa
sahf
addr16
psrad
jecxz
jne
mov
xor
cmpsb
aaa
mov
stc
lret
push
pop
decl
fxch
stc
movsb
cmp
stc
jnp
ljmp
adc
jo
insb
lods
and
lcall
inc
int
xchg
cmp
cmpsl
pushf
mov
or
in
sub
push
pop
shll
ljmp
fs
sbb
inc
test
pop
leave
pushl
jge
decl
pop
aam
mov
loope
imul
add
push
pop
add
sbb
mov
and
pop
std
pushl
xor
int3
shl
jle
pop
push
jge
es
int3
or
pushl
daa
sti
add
mov
xchg
add
std
cmp
push
sub
dec
and
iret
push
jmp
aad
sub
push
jo
xchg
mov
pop
stos
gs
pushl
xchg
cwtl
repnz
pop
inc
push
int3
cmpb
jle
fstpl
lock
xchg
xor
cmp
das
clc
cmp
jno
iret
inc
xchg
cmp
push
lret
fisubs
aam
or
mov
pushl
stc
push
jl
outsl
cwtl
sbb
mov
cmpsb
mov
pusha
jg
inc
xchg
xor
fsubrs
xchg
and
cmp
pusha
xchg
jne
mov
hlt
in
lret
fdivl
icebp
and
aad
inc
nop
incl
rcrb
les
mov
and
shll
sbb
and
ds
aaa
xor
push
inc
mov
xchg
mov
dec
lods
stos
ficompl
dec
dec
xor
dec
or
mov
outsb
out
pop
or
je
mov
jmp
pushl
adc
sbbb
jge
lods
stos
xchg
int3
or
mov
mov
neg
sbb
mov
mov
jnp
jb
and
es
sub
aam
mov
dec
cld
lcall
popf
push
movsb
mov
clc
xchg
sub
lods
cmp
jnp
inc
push
sub
adc
push
aam
imul
in
sahf
add
repnz
imul
popfw
push
jns
fwait
call
inc
pop
cmc
sub
test
pop
and
dec
je
push
repz
xchg
sbb
testl
ljmp
add
xchg
or
mov
fidivl
push
adc
ret
jmp
mov
xor
insl
loop
lods
comiss
sub
imul
pop
lock
int3
inc
loopne
xor
jne
add
call
xor
pushf
xchg
cmpsl
mov
movsl
fldl
mov
mov
cmp
out
add
add
push
mov
xor
push
aaa
xchg
aad
sbb
mov
js
test
inc
push
add
and
call
cld
decl
xor
subl
push
sbb
pop
shrl
pushl
inc
adc
pop
pop
xchg
into
adc
test
outsl
mov
lcall
jecxz
mov
ds
inc
daa
pop
jecxz
test
repz
sub
ficoml
mov
inc
ror
out
or
push
int
out
nop
aas
xor
test
dec
sbb
and
ss
and
mov
dec
mov
jns
or
cld
mov
aas
decl
adc
sub
test
cmpsl
mov
mov
jl
in
mov
nop
ret
outsb
xor
fcomp
xor
xlat
sbb
jnp
pop
popf
loop
inc
outsb
scas
or
add
fidivrl
sti
cmpsb
ljmp
rorl
adc
stos
inc
std
and
mov
push
push
dec
dec
xchg
push
adc
decb
push
push
imul
mov
push
sub
jp
cmc
lcall
sarl
imul
fstpl
inc
mov
loope
in
das
call
pop
xor
inc
and
int
out
out
iret
jnp
push
lret
test
or
loop
push
cmp
adc
jbe
frstor
or
sbb
aaa
cld
fcoms
fiadds
jg
jmp
sbb
addr16
jns
sar
push
cld
mov
push
or
sarb
into
mov
lret
dec
pop
push
cmc
aad
xchg
xor
pusha
adc
sbb
jg
sti
push
fldl
push
sbb
int3
xchg
lahf
dec
fwait
scas
dec
jecxz
mov
enter
and
jnp
mov
incl
push
stos
xchg
pop
add
pop
push
mov
inc
sub
lcall
rclb
orl
mov
push
ljmp
ret
mov
xchg
out
sahf
shlb
mov
pushl
cmc
cmp
inc
jmp
dec
into
inc
aas
daa
jp
insl
or
and
dec
sbb
pop
adc
jg
cmc
cmpsb
movsb
or
sbb
inc
clc
jmp
or
cmp
sti
out
jecxz
push
decl
pop
mov
fstpt
aam
xor
xchg
imulb
xchg
mov
mov
in
incl
les
std
jmp
cmpsb
mov
add
out
dec
movsb
jb
es
pushl
pop
jnp
push
mov
sub
sahf
xlat
js
leave
das
lods
in
sbb
decl
inc
and
mov
inc
sub
ret
sub
mov
decl
cmpsl
fimull
ljmp
adc
xlat
xchg
xchg
pusha
dec
call
adcl
cld
out
xor
test
in
test
decl
sbb
dec
jno
jbe
stos
jg
pop
sub
xor
subb
adc
std
ljmp
test
push
xchg
jp
dec
inc
xorb
call
jmp
shll
icebp
shlb
mov
cmp
mov
push
mov
adc
or
push
adc
push
jge
andps
cmc
xchg
xchg
xchg
pusha
or
and
clc
cli
stos
dec
mov
jmp
adc
insl
daa
push
lods
stc
test
fidivrl
xchg
xchg
or
aad
mov
cmp
mov
adc
xchg
cmpsl
or
fsubrs
imul
test
stc
jne
aam
pop
add
incl
cld
out
push
iret
in
xor
bound
clc
mov
push
mov
mov
mov
sbb
jnp
icebp
cmp
es
out
je
aad
inc
and
mov
pop
lcall
dec
jne
lods
jg
jo
dec
std
test
data16
dec
sbb
jbe
dec
mov
cmp
sub
shl
pop
scas
pushf
jnp
imul
inc
dec
sub
ret
dec
aad
add
inc
fs
incl
in
or
push
sub
test
push
sti
push
std
xor
sarl
out
push
fstl
subb
lcall
mov
ret
xor
divb
popl
jecxz
dec
xor
xchg
aad
fisttpll
shrl
movb
push
add
add
mov
loopne
inc
int
mov
mov
or
inc
add
mov
addb
jns
xor
sbb
dec
vmwrite
xchg
mov
inc
out
jge
pop
mov
sar
xor
pop
sub
pop
mov
push
dec
rorb
je
pusha
sbb
or
sub
shlb
xchg
xorb
pop
or
pop
flds
ljmp
bound
xchg
jmp
dec
fwait
std
orb
jns
jno
jae
adc
jnp
pop
cmp
sbb
xchg
call
shll
inc
jno
scas
aas
mov
mov
or
movsl
out
shrl
ds
push
dec
xor
clc
sub
inc
push
stos
lods
sub
pop
jne
out
std
daa
insl
cmp
in
pusha
es
je
push
or
inc
es
cmp
mov
mov
inc
pop
dec
pop
mov
add
aas
mov
xchg
pop
jp
dec
adc
incl
cmp
in
mull
adc
push
jns
pusha
sub
movsl
add
mov
imul
pop
push
clc
xchg
movsl
roll
pop
mov
ljmp
mov
ss
xlat
add
jp
add
into
jb
test
dec
adc
in
mov
xchg
incl
hlt
in
add
lds
adc
mov
jecxz
cmp
mov
xchg
sbb
xchg
jmp
pop
jbe
or
jbe
fisubs
and
pop
out
pushl
imul
andb
pop
xchg
dec
hlt
lods
sbb
push
mov
sbbl
cmp
push
push
dec
iret
test
mov
pop
ljmp
cmp
fldcw
add
lds
aaa
repz
loopne
inc
insl
outsb
xchg
fs
rol
or
lcall
in
push
lods
xorb
into
rcl
xor
xlat
mov
or
xchg
dec
imul
repz
test
mov
in
into
stc
out
ret
sub
dec
ret
push
sbb
call
inc
loopne
data16
es
out
jecxz
xor
push
cwtl
pusha
pop
loop
dec
sbb
xchg
cld
mov
pushl
jae
iret
and
mov
cs
scas
int3
and
cmp
mov
add
sub
ja
lcall
xchg
sub
das
sti
fstp
xchg
insl
cld
pop
mov
add
repz
sbbl
leave
dec
add
add
mov
mov
lahf
mov
cmp
imul
mov
inc
fists
rorb
in
popf
adc
enter
jo
jns
mov
add
imul
lcall
xchg
call
cmpsb
in
xchg
and
mov
push
das
outsb
push
fcomps
jmp
mov
xor
div
roll
mov
sbb
mov
cmp
in
pop
adc
mov
cmp
nop
ds
and
aaa
xor
push
mov
js
sub
inc
or
fnstcw
cmpsb
addr16
adc
jl
ljmp
les
es
fldenv
jmp
pop
mov
cmp
stos
lods
adc
jge
pop
pop
mov
jb
mov
rcrl
clc
jns
aam
aam
mov
adc
jl
cmpsl
shrb
shlb
ss
incl
aaa
add
out
push
lahf
movsl
fdivrs
xchg
shrl
push
xor
out
dec
sub
gs
ljmp
mov
mov
push
push
and
arpl
insb
ret
sbb
call
sub
lea
xor
jmp
cmp
add
or
dec
xchg
mul
lret
pushl
push
cltd
inc
mov
xor
jno
lret
bound
sub
incl
adc
cli
ljmp
dec
aam
and
mov
adc
dec
mov
fstps
and
mov
insl
pminsw
xor
add
ljmp
push
push
in
cmp
int
lret
pop
call
ljmp
lea
mov
out
aad
add
arpl
xchg
dec
inc
xor
popa
and
call
cld
xchg
add
sub
icebp
pop
inc
repnz
xchg
xorl
sarb
scas
mov
fwait
or
or
sti
ljmp
xor
xchg
popa
lds
xchg
movsl
mov
jecxz
adc
ja
decl
mov
out
sbb
or
mov
es
cmpsl
or
adc
fmul
call
scas
dec
out
addr16
mov
call
mov
pop
cld
and
xor
xchg
adc
jg
daa
js
mov
in
cmp
dec
rol
mov
and
ret
out
cmpsl
mov
out
mov
jb
movsl
cmp
decl
push
inc
push
xchg
outsb
pop
mov
rcrl
pop
mov
in
mov
xchg
cld
jg
dec
sbb
movsl
jge
pop
inc
ss
pop
sub
mov
adc
mov
xchg
in
aas
or
and
and
cs
scas
gs
sbb
inc
xchg
mov
dec
loopne
mov
xchg
push
and
mov
xchg
jne
out
popa
adc
enter
test
sub
or
push
addl
inc
sbbb
mov
jmp
cmpsb
mov
xor
inc
jl
loop
or
lcall
push
xlat
aaa
imul
call
ss
push
xor
test
cmpb
xor
std
jl
xor
imul
decl
cmpsl
xchg
xor
push
xchg
loopne
and
mov
push
cs
lock
lcall
pusha
dec
fldcw
daa
dec
stos
adc
stc
add
jl
enter
mov
fs
cmp
xor
or
adc
sub
cmc
cmc
out
pop
mov
lods
sbb
sub
sub
lcall
mov
out
inc
dec
cld
jns
out
orb
test
jmp
jp
pop
aad
add
out
clc
std
dec
scas
dec
scas
jne
xchg
les
jno
mov
aas
adc
fwait
stos
mov
mov
lcall
sbb
call
ss
cmp
lock
jl
push
faddl
fwait
or
inc
mov
stos
inc
subl
cmp
and
pop
jo
sti
mov
inc
ss
repnz
inc
jle
sbb
mov
push
mov
pop
gs
lea
xchg
push
cli
push
push
push
xchg
arpl
scas
mov
bound
push
je
call
mov
shll
clc
pop
js
pop
inc
icebp
mov
sbb
mov
adc
rcrb
lret
inc
pop
jmp
push
outsl
jbe
add
test
add
daa
icebp
dec
scas
mov
out
test
push
stos
stos
mov
lcall
in
notb
call
and
cmp
push
fists
push
insb
adc
ret
ljmp
sbb
sbb
cmp
xor
jg
outsb
std
lahf
std
push
sbb
fmull
cmp
pop
adc
xchg
std
bswap
dec
mov
xlat
decl
negb
out
and
roll
and
hlt
cli
call
jl
loopne
out
cli
mov
ljmp
hlt
or
pop
test
fists
xlat
stos
pop
adc
lds
lock
jge
push
fsubrs
cmp
std
jg
out
dec
pop
fists
push
inc
add
lds
fildl
inc
cmpsb
sarl
cmp
mov
xor
fimuls
push
add
fidivs
cmp
dec
sbb
inc
bound
jo
sbb
jg
sbb
leave
aad
xor
mov
loope
and
fwait
sbb
sbb
aam
add
pop
lret
ljmp
andb
fbld
loopne
mov
mov
push
mov
mov
jp
xlat
or
mov
lea
xchg
movsb
mov
imul
mov
cltd
cmpsb
mov
leave
fdivrl
lret
loopne
test
mov
push
xor
call
push
aam
daa
add
xchg
rcrb
pushf
outsl
push
xor
cs
ret
sbb
add
aad
xor
lahf
dec
lret
repz
outsb
sub
aas
shrb
insb
fcomip
lcall
pop
jb
push
push
dec
jge
incb
mov
dec
cmpsb
sbb
imul
pop
lahf
pop
rsqrtps
or
aaa
in
bound
adcb
push
jae
inc
rclb
cmp
loope
cmpsb
mov
mov
in
vpshlb
lcall
call
scas
xchg
icebp
xchg
test
inc
jl,pn
jo
in
test
mov
sub
and
xchg
cld
idivl
pop
mov
stc
rolb
cld
cmp
sarb
dec
lods
push
orb
imul
jp
and
shrl
sub
cmp
incl
cltd
clc
mov
pop
and
sub
outsb
inc
push
dec
push
inc
jo
and
lret
jg
adc
or
jne
sbb
fdivs
sar
dec
jmp
fwait
jp
testl
push
jo
fstpt
or
or
inc
sub
push
dec
ret
jmp
sahf
out
jnp
dec
or
adc
out
push
mov
in
test
sub
dec
loop
js
xor
call
cmp
lock
xchg
inc
ja
inc
xchg
jg
pop
mov
inc
js
out
push
mov
jg
xchg
push
mov
cmp
cmp
js
dec
add
sub
test
and
sbb
mov
je
mov
aad
xchg
out
pushl
adc
and
lret
mov
and
aaa
lods
shlb
dec
jnp
inc
nop
adc
sbb
dec
insl
lock
sbb
repz
xchg
adc
in
mov
loop
cmp
cmpsl
cs
movl
adc
push
jecxz
shlb
sbb
jns
inc
movsl
dec
cmpsl
idiv
ljmp
dec
mov
and
out
jbe
mov
dec
push
cmp
xor
nop
mov
mov
jg
into
mov
dec
xor
adc
int3
div
test
addr16
sti
push
xchg
cmp
lret
cmp
jb
stc
and
fs
out
test
push
ror
cmp
jmp
xchg
iret
xor
daa
push
aam
dec
in
loope
xchg
fucom
rcll
jbe
inc
stos
pop
enter
adc
hlt
in
sub
jg
push
inc
sub
ljmp
rcr
scas
push
push
add
loop
test
or
xchg
cmp
mov
cltd
xchg
shl
xor
lahf
add
mov
pop
mov
add
call
adc
or
repnz
pushf
pop
out
jns
adcl
stc
sub
int
ljmp
jo
cwtl
jmp
clc
xchg
fwait
xor
cmc
inc
jne
leave
sbb
jmp
jle
in
cmp
sub
cmp
add
pop
outsl
jmp
xchg
push
mov
cwtl
xor
data16
add
and
mov
call
addr16
or
inc
adc
jnp
les
test
mov
mov
adc
addr16
pop
adc
lcall
lcall
sub
sub
and
call
js
sub
fnsave
clc
mov
mov
mov
in
cmp
sbb
imul
fistpll
call
mov
inc
test
dec
in
loop
jno
jmp
sbb
mov
mov
decl
xor
dec
lcall
cmpsb
add
mov
test
and
push
inc
pop
add
sbb
mov
adc
cli
daa
inc
shll
cmp
xchg
pop
stos
mov
jb
incl
cs
mov
pop
iret
cli
cmp
pop
inc
push
outsl
test
mov
roll
inc
in
loop
jg
ret
loope
push
inc
or
dec
lahf
ja
push
or
mov
and
incl
jne
mov
adc
jnp
sbb
mov
lahf
adc
mov
imul
lcall
int3
pcmpgtd
mov
sbb
ss
filds
pusha
insl
and
fsubrl
iret
cmp
mov
lret
loope
loop
pusha
int3
and
xor
xchg
aas
dec
sahf
lahf
lods
outsl
jg
lods
pop
sub
mov
pop
jle
jp
dec
adc
pusha
in
ja
cmp
mov
insb
leave
push
leave
or
add
dec
add
incl
or
insl
adc
mov
mov
andl
rcrb
mov
inc
clc
ljmp
mov
jge
enter
jg
pop
and
mov
xor
scas
mov
data16
aad
push
adc
loop
cld
incl
nop
xchg
mov
loope
xlat
xchg
lahf
insl
ds
icebp
xor
adc
cli
popf
or
xchg
das
xchg
pushl
ds
std
or
iret
push
lods
xchg
or
mov
add
push
std
inc
mov
lcall
add
mov
pop
fiaddl
jmp
mov
aas
test
jecxz
negb
test
or
pop
repz
sub
fistps
xor
sub
mov
cwtl
fcmovne
decl
sbb
lcall
xor
xchg
or
popa
or
or
shrb
mov
int3
dec
clc
xchg
ret
sub
push
xor
ficoml
hlt
pushl
lcall
or
rcll
jb
jg
scas
jo
cmpsb
inc
repz
jge
pop
jnp
and
add
int
in
movsl
addr16
lock
jmp
cli
subl
inc
pusha
adc
add
mov
ss
out
gs
out
decl
inc
fildll
push
ret
out
cld
das
pop
xor
xorl
lret
loope
mov
aaa
jns
lods
sub
xchg
mov
call
loop
push
aas
add
inc
fistpll
mov
fstl
mov
imul
mov
ljmp
add
dec
sub
cmp
xor
pusha
or
cwtl
scas
pop
adc
aam
loopne
mov
ud0
mov
cmp
mov
aam
pop
outsb
jmp
lcall
jmp
mov
add
rorl
mov
mov
test
xor
hlt
push
jb
xchg
jge
fld
call
int3
dec
or
dec
mov
test
mov
sub
sar
je
xchg
test
add
popf
into
sbb
lds
dec
mov
out
push
insl
fstp
aad
mov
lcall
out
addr16
pop
xor
ss
lcall
ja
cmpsl
leave
inc
aam
lcall
repnz
stc
cmp
test
inc
and
repz
cmpsb
adc
push
mov
xchg
jge
clc
decl
fiaddl
or
movaps
test
out
sbb
das
cltd
mov
inc
in
scas
cmpsl
out
sub
xor
xchg
dec
cmp
jge
mov
scas
clc
and
inc
divb
ret
and
int3
movsb
lcall
call
sti
orl
jmp
inc
jb
jecxz
enter
stos
rorb
imul
leave
and
ljmp
xchg
adc
leave
and
outsb
xor
subl
cmpsb
xchg
add
in
and
add
popa
cmp
inc
mov
movsb
push
shrb
clc
je
dec
mov
dec
cmp
cmp
leave
adcl
fdivrp
sahf
inc
xor
mov
jae
mov
scas
mov
lds
xor
xor
jne
rcll
adc
aas
call
ja
jmp
or
xchg
enter
out
fistpl
sbb
in
cmp
push
push
repz
filds
pop
cmpl
dec
loop
or
out
ljmp
pushl
sbb
xchg
adc
in
xchg
scas
cmp
cmpsl
aam
lds
popf
inc
lcall
loopne
popf
decl
popl
push
int
mov
xchg
fwait
xchg
icebp
out
adc
mov
jmp
adc
lcall
imul
push
je
mov
mov
pushl
enter
fcmovnu
out
int
sti
repz
movsb
add
xor
dec
add
xchg
clc
mov
test
cmc
jns
xlat
push
out
mov
out
scas
outsb
outsl
stc
pushf
sub
mov
sbb
out
cmp
mov
fsubrs
ljmp
clc
repz
lahf
and
push
inc
jnp
cs
rcl
mov
call
cmp
mov
pop
lcall
test
mov
pop
or
incl
inc
and
dec
mov
jp
pop
ror
mov
dec
xchg
fildl
pop
jmp
cmp
jbe
mov
cli
rclb
repnz
stos
mov
call
scas
push
sub
mov
pop
or
jle
adc
add
jb
cmp
or
leave
ja
out
jle
lret
insb
pop
xor
fstl
popf
xchg
pop
xchg
insl
mov
xchg
fisttps
mov
jb
xor
add
outsl
fnstsw
shlb
stos
xchg
in
adc
incl
jno
ja
push
push
int3
aaa
js
sub
int
inc
loop
mov
hlt
mov
repz
lcall
cmp
lods
push
lods
jg
jns
push
xor
lea
cmpsb
jp
add
lock
decl
adc
xchg
pop
fidivrl
sub
sbb
sahf
mov
fiaddl
lods
sub
push
adc
pushl
test
xor
ret
mov
clc
insl
setnp
mov
mov
dec
sub
pop
in
xor
or
dec
add
add
stos
test
mov
loopne
stos
sbb
test
inc
add
decl
pusha
shll
mov
sarl
push
popf
cmp
call
data16
pop
lcall
daa
cmpsb
fwait
out
pop
mulb
xchg
xchg
cltd
or
jmp
mov
clc
pop
sahf
mov
xchg
ss
into
jns
loop
decl
add
mov
mov
pusha
call
popf
lcall
push
repz
fimull
cmc
pushl
scas
cmp
lcall
mov
loop
incl
lea
loopne
xchg
mov
lcall
xor
xchg
mov
rcl
cld
mov
mov
inc
fadds
or
push
jg
fnsave
mov
xor
sbb
in
inc
negb
adc
incl
add
pop
dec
inc
test
sbbb
lret
pop
test
sbbb
cwtl
and
in
cltd
mov
jecxz
inc
adc
jae
xchg
pop
or
jns
or
xor
fprem
and
sbb
fs
push
add
incl
pusha
repnz
sbbb
in
add
mov
pop
test
ret
test
leave
lcall
dec
mov
roll
mov
push
adc
je
neg
fidivs
mov
xchg
mov
loopne
cmpb
sar
mov
adc
icebp
hlt
stos
sub
pop
out
mov
mov
jmp
clc
push
mov
mov
xor
sbb
cld
fldt
mov
incl
bound
std
xorl
push
mov
rorb
sub
push
cmpsb
push
movsl
ljmp
push
lcall
xchg
add
test
mov
dec
xlat
out
addr16
mul
js
ljmp
sti
xchg
or
in
mov
jnp
adc
fcompl
or
pop
lock
mov
or
dec
lods
fstpl
pop
xor
call
fcoml
and
sbb
mov
dec
sahf
xchg
shl
mov
loope
inc
mov
pushl
sar
xor
ret
dec
pop
int3
inc
frstor
sub
add
inc
add
jmp
cld
fimuls
sbb
pusha
sbb
ret
in
cltd
ss
mov
in
dec
or
loope
mov
lods
sub
cmpsl
sbb
lahf
and
push
arpl
mov
mov
push
sarb
jns
pushl
jle
pop
dec
pop
jb
pop
fnstcw
loopne
mov
jne
adc
and
ror
mov
lock
dec
mull
add
fisubl
loope
icebp
mov
mov
sub
popf
jbe
stc
adc
fdivrp
cmpsl
jnp
dec
sbb
ds
push
movsb
push
call
sbb
out
xchg
stos
jecxz
jmp
mov
cmp
inc
sbb
jb
fs
mov
call
jl
mov
push
fdiv
shl
jge
pop
mov
mov
addb
adc
test
mov
rcrl
scas
adc
xchg
xchg
dec
adc
ret
sub
out
and
inc
pushl
and
mov
test
outsb
je
ljmp
nop
mov
adc
fsubr
jge
test
xchg
daa
cmc
test
lods
mov
lods
jmp
scas
rcll
sub
mov
xchg
lcall
jp
jg
mov
or
jns
mov
cld
push
sbb
repz
pushl
shlb
jnp
rcll
mov
sbb
lret
and
lsl
pusha
jmp
cs
ror
imul
test
mov
or
push
fwait
xchg
int
sbb
push
dec
inc
int3
and
sarl
repnz
mov
xchg
dec
adc
inc
xchg
mov
es
dec
mov
sbb
sar
pushl
sbb
lret
jno
inc
pop
ss
or
adc
push
imul
cmp
xchg
jle
cltd
cmc
or
insb
push
call
pushf
addr16
push
and
and
jne
incl
sbb
jnp
lock
stc
outsl
aaa
xchg
sahf
pop
sbb
jg
js
inc
cmp
sahf
decl
stos
mov
pop
mov
cmp
rolb
push
loopne
out
sbb
pop
out
decl
je
stos
and
cmpsl
stos
into
mov
fisubs
inc
aad
pop
mov
push
into
cs
jnp
std
jl
leave
jle
cmp
mov
repnz
nop
inc
cmp
in
loopne
xchg
jge
mov
movsb
out
adc
fbstp
hlt
rcll
push
stos
popa
mov
cmpsl
push
call
jbe
mov
repnz
mov
mov
insl
addr16
mov
out
push
sbb
jl
add
jecxz
mov
pushl
mov
xchg
movsl
or
imulb
jmp
xchg
xchg
das
xor
inc
cmp
addb
decl
and
repnz
dec
jge
aam
inc
data16
jne
setp
pop
popf
js
pop
test
lcall
test
iret
shll
in
jns
cmp
fnstsw
mov
sub
ret
nop
lods
int3
fs
pop
popf
decl
hlt
divb
int
mov
add
push
lret
jg
xlat
flds
and
mov
mov
pushf
cmp
xor
xor
pop
mov
cmp
push
ret
inc
inc
add
mov
into
sub
ror
fistps
es
jo
daa
and
xor
nop
test
mov
inc
mov
and
xorb
lods
inc
xchg
scas
inc
cmp
pop
mov
pusha
jmp
aad
movsb
stc
inc
xchg
test
pop
pop
dec
repnz
out
mov
inc
mov
das
add
push
pop
xor
fdivrl
imull
int
pop
sub
mov
sti
arpl
cmc
xchg
in
xchg
daa
popa
mov
inc
mov
std
push
xchg
add
icebp
xor
insl
mov
cmp
insl
std
ds
in
je
into
add
popf
push
decl
add
hlt
add
nopl
mov
cwtl
ret
out
xor
int3
mov
jno
pop
xchg
scas
xorl
fstpt
jmp
lret
pop
pop
scas
mov
push
sub
cmp
das
gs
jnp
stos
arpl
ljmp
inc
sbb
std
fstps
xchg
aam
fs
inc
sbb
and
add
lock
jmp
dec
fisttpll
jg
lods
mov
das
jl
mov
call
xchg
loope
std
xchg
ss
jg
and
inc
js
fmuls
inc
roll
xorl
call
mov
jp
mov
mov
je
dec
cmp
fs
and
pushl
sub
jp
es
inc
fwait
jo
mov
push
stos
lock
loop
and
push
xchg
ljmp
inc
add
and
push
add
rolb
and
mov
rol
sbb
out
std
loopne
mov
notl
jmp
mov
cmp
mov
sbb
or
pusha
cmp
orl
ss
sbb
and
mov
xchg
inc
mov
jecxz
and
mov
mov
sbbb
sub
bound
lock
je
ljmp
push
clc
adc
inc
mov
adc
rorb
fldenv
mov
and
scas
std
push
lret
scas
test
movsb
sub
movsb
int3
sbb
jg
decl
jle
inc
loope
adc
pop
movsb
push
popf
andl
mov
and
pusha
imul
in
aas
negl
mov
dec
loopne
dec
mov
mov
cmp
cmpsb
or
and
call
cmp
jb
xchg
jmp
data16
dec
subb
sbb
mov
and
mov
ljmp
jmp
imul
jl
add
movsb
mov
mov
mov
gs
xchg
xor
inc
jl
adc
push
fcomip
pusha
inc
cmpsb
enter
adc
push
sbb
pushf
mov
fidivrl
movsl
ljmp
clc
jmp
call
call
psubb
daa
shrb
xor
jg
pushl
mov
adc
ret
jg
mov
inc
js
mov
enter
int
movsl
das
outsb
fdiv
xchg
mov
adc
or
ret
lcall
loopne
inc
adc
dec
cmp
mov
cmovne
call
xor
gs
mov
or
push
stos
mov
imul
push
cli
fsts
inc
fadds
int3
or
lret
mov
lock
xor
sub
xor
inc
test
int3
lahf
fs
xor
or
xlat
call
test
scas
push
xchg
pop
fs
incl
xlat
mov
xor
insl
jae
dec
rol
fwait
fmuls
push
out
or
jmp
xor
sbbb
adcl
jp
mov
ljmp
hlt
mov
bound
iret
jge
sub
daa
push
xor
jl
insb
enter
fidivs
test
xchg
push
in
popa
sbb
or
cs
xchg
adc
lret
lcall
popl
sbbl
mov
xchg
idiv
sbb
dec
jns
sbb
xchg
inc
bound
lahf
mov
fsts
cmp
into
clc
popa
sti
shll
mov
int3
stc
call
std
in
fcomps
ja
fwait
lcall
in
rorl
fnsave
pusha
or
dec
sbb
cmp
shll
sbb
mov
aad
fadds
pop
enter
dec
decl
fsubrl
xchg
stos
lret
sub
dec
pusha
je
lret
das
ljmp
negl
int
pop
mov
xchg
icebp
cltd
and
xchg
repnz
xchg
stc
sbb
xchg
popa
mov
dec
cld
xchg
jno
enter
jg
test
lcall
stos
cwtl
cs
mov
out
imulb
push
mov
mov
lds
call
push
xchg
jnp
movsl
add
and
ret
sbb
push
or
jg
andb
mov
shrb
xchg
pop
popa
out
clc
ja
test
lcall
mov
xor
inc
repz
ljmp
pop
lret
jb
aaa
mov
mov
sub
lcall
es
fwait
jmp
add
xor
jle
nop
das
loope
inc
xchg
jmp
sbb
jo
jge,pn
lret
psubw
jno
pop
add
cmpsl
imul
call
mov
cmpb
mov
les
hlt
push
xor
imulb
iret
add
pop
notl
add
push
ficoml
push
cmc
sub
cmpsb
mov
jno
fwait
and
cmp
call
adc
sbb
lods
iret
xor
stos
xchg
push
aas
dec
or
mov
xchg
addl
pushl
sub
sub
dec
mov
jo
push
cmp
fldl
jle
mov
jp
test
hlt
outsl
cli
jns
mov
or
push
cmpsb
out
test
pushf
rcrb
insb
cltd
imul
outsb
adc
test
imul
gs
push
or
push
cltd
xor
lcall
add
mov
int
fdivrs
mov
xchg
dec
subl
in
bound
or
fldt
mov
pop
push
fldl
scas
and
mov
pop
movsb
fwait
and
inc
adc
mov
push
into
movsb
inc
jne
xchg
add
fs
lcall
movb
jge
shld
mov
xor
sub
sub
insl
scas
arpl
mov
mov
jno
jmp
and
mov
and
lahf
mov
cltd
push
xchg
inc
inc
out
dec
cmpsb
pushf
ja
jge
dec
cmpsb
cs
mov
xor
add
push
xor
mov
adc
lret
scas
popf
cmp
dec
push
aas
in
adc
push
in
fcoms
jo
push
push
push
addr16
pop
ja
aam
push
das
lcall
mov
imul
pop
data16
fcomi
cwtl
xchg
dec
adc
cmc
push
ljmp
adc
mov
sub
out
cmc
orb
test
lea
lcall
dec
and
and
jae
xor
insl
fwait
xlat
cmp
ljmp
roll
inc
jp
cmpsb
fimuls
xchg
sbb
jg
lahf
jg
jmp
push
sub
xor
sub
lret
xchg
out
in
mov
jmp
mov
push
push
cmp
jmp
fwait
or
clc
xchg
lret
fsubrl
leave
aam
mov
mov
ljmp
dec
or
inc
lea
test
int
dec
push
cmp
jnp
mov
imul
out
aaa
mov
test
int3
pop
sub
imul
xchg
fcomi
stos
mov
jg
inc
cld
add
pop
and
cmc
sbb
sub
mov
loopne
jmp
sbb
xor
cmp
jnp
and
in
sar
in
mov
ljmp
shll
sbb
pop
dec
inc
push
aas
xor
pusha
sahf
fists
lods
fcomip
call
xchg
pop
and
push
cmp
xor
cmc
int3
movsl
in
cmp
std
decl
sbb
jb
cmpsb
mov
cmp
inc
inc
fcomip
movsb
ret
jbe
jbe
imul
xor
and
rorb
icebp
decl
sub
icebp
mov
insb
jl
outsl
sti
outsl
cmpsb
mov
add
inc
shll
sti
jge
je
lret
cmp
call
scas
jne
mov
fwait
push
ret
pop
xchg
sti
cs
push
xlat
xor
sbb
ljmp
enter
add
rol
das
jb
dec
shl
inc
rcrl
loopne
pop
sub
pop
std
decl
adc
add
mov
fcmovu
test
call
push
loop
not
mov
push
dec
mov
daa
stos
add
mov
fwait
or
lcall
outsb
and
pop
cmp
or
mov
and
fucom
inc
popf
in
test
cmp
jmp
std
and
sbb
repnz
std
mov
ljmp
cwtl
scas
mov
dec
push
or
jno
push
movsb
test
xchg
icebp
xor
std
hlt
mov
mov
pop
loopne
call
lahf
xchg
cmp
call
mov
ss
lea
jb
mov
sub
rep
jae
and
xchg
loopne
call
mov
inc
cld
jl
push
inc
pushf
pop
adc
aas
iret
inc
call
xor
ret
ja
xchg
jp
and
cmp
in
push
and
lcall
loop
push
insb
jmp
push
or
mov
mov
js
add
jge
repnz
pop
gs
fcomip
adc
das
or
int
xlat
dec
lret
jecxz
pop
jl
sbb
fwait
imul
ljmp
or
lea
mov
push
arpl
pop
and
push
inc
ljmp
mov
cli
xchg
adc
cmpsb
ret
push
or
mov
lcall
mov
or
xchg
jo
sub
mov
sub
icebp
inc
jnp
neg
jnp
int
aaa
pushf
repnz
iret
incb
pop
dec
sahf
mov
mov
lods
shlb
sub
adc
int3
loop
mov
ret
xor
call
dec
gs
hlt
push
jae
dec
sbb
ror
test
stos
pushf
sarb
ljmp
repz
cmp
pop
jae
stos
push
mov
idivb
insl
je
pop
pop
xchg
test
pushl
adc
lret
mov
insl
sub
and
jmp
jle
aas
das
clc
sbb
decl
ret
cmp
pop
pop
out
es
add
mov
mov
sbb
icebp
jne
cmc
out
call
and
xchg
stc
mov
push
adc
clc
push
in
sti
inc
mov
test
pop
out
cmp
fmul
cli
mov
add
sub
add
int3
rolb
jmp
pop
movsb
jle
fdivrl
into
lahf
sti
mov
ret
lahf
inc
pop
jg
into
ljmp
jmp
in
jb
movsb
aad
out
rcrb
in
jno
lcall
push
setle
adc
or
dec
lahf
out
sbb
lcall
call
inc
jge
lret
inc
stos
inc
and
loopne
or
xchg
add
xchg
frstor
fidivs
subl
jle
imul
sub
lods
jge
push
out
cmpsb
mov
pushf
les
mov
aad
out
cmp
jl
test
jp
mov
push
push
adc
stc
lock
call
cld
outsl
xorb
dec
fs
jecxz
xor
test
sarl
jg
sub
test
and
and
test
mov
das
cmpsb
js
repz
cs
lcall
loope
xlat
xor
in
test
scas
xchg
add
fs
mov
sbb
dec
dec
xor
push
add
divl
shlb
stos
xchg
sbb
sbb
call
insl
jl
cmp
jne
jle
add
fst
mov
mov
jno
jle
cld
rclb
call
xor
in
jns
pop
jecxz
pop
lods
jne
inc
inc
repnz
push
fbld
cs
cmc
iret
pop
or
xchg
mov
inc
movsl
stc
pop
mov
mov
lods
push
lcall
xor
sbb
jg
imul
mov
lods
dec
sbb
rorl
inc
xchg
outsl
lcall
int3
lods
add
add
arpl
sbb
mov
call
insb
addb
out
mov
jle
out
lahf
test
out
in
es
ficoml
movsl
inc
andb
fsub
jae
fwait
or
jmp
mov
popf
cld
ljmp
cmp
out
imul
fidivrs
aaa
incl
adc
inc
int3
js
fcompl
cmp
pop
std
incl
xlat
xchg
jne
push
jnp
clc
ljmp
decl
inc
jae
sbb
fcmovb
ljmp
sbb
mov
cmpsl
cmp
imul
and
cmp
sub
dec
inc
dec
or
mov
test
daa
inc
xchg
push
add
sbb
in
cmp
imul
and
les
adc
inc
ds
jmp
movsl
mov
jnp
dec
xor
add
incl
rcrl
sub
jae
adc
push
jb
popa
cwtl
sar
jg
jmp
xchg
and
jle
xor
lret
out
mov
in
push
insb
mov
mov
mov
arpl
jle
leave
rdmsr
pop
popf
lds
push
cmp
mov
ds
cmpsb
lret
sti
or
add
andl
imul
inc
dec
mov
das
enter
sub
lcall
push
hlt
dec
jp
inc
sbb
cwtl
sbb
push
shrl
adc
mov
jecxz
mov
insb
xchg
xor
dec
aad
fs
mov
sahf
movsb
fnsetpm(287
aas
add
mov
dec
in
add
jle
sbb
mov
fsubrl
sbb
in
inc
lcall
decl
add
ret
xchg
movsb
movsb
sbbb
push
imul
fsubp
mov
call
lods
js
xchg
call
daa
movsl
mov
and
or
fsub
cs
repnz
pop
cmp
lcall
movsb
in
stos
testl
mov
jns
push
addr16
jmp
xor
mov
or
and
icebp
into
jne
jg
popa
pop
data16
pop
dec
jmp
adc
call
insb
xor
out
jo
pop
cmp
and
iret
cltd
daa
pop
xlat
inc
adc
ficomps
incl
ljmp
push
and
leave
cmpb
or
push
or
dec
mov
cmp
ss
repnz
cmpsl
jne
call
ret
leave
and
sub
inc
dec
push
mov
rcr
adcl
js
out
jne
inc
push
sbb
scas
dec
pavgb
or
ljmp
dec
cli
scas
scas
hlt
sub
cmpl
ja
jb
divb
ds
sbb
mov
inc
inc
or
push
push
cmp
add
sbb
xchg
scas
adc
outsl
popa
or
add
dec
ret
into
dec
and
insl
push
xlat
ret
imul
loopne
mov
cli
push
movsl
sti
outsl
add
repz
push
sbb
repz
adc
lcall
lret
insb
jl
in
scas
in
lcall
arpl
dec
mov
ljmp
mov
ficoms
sbb
sub
dec
xchg
adc
jnp
dec
aas
push
push
inc
pop
fdivrp
ljmp
into
xchg
push
lret
add
sbb
jae
sti
sub
stc
dec
adc
xor
mov
lcall
das
adc
arpl
push
dec
mov
stc
xchg
and
jp
js
add
rolb
inc
xor
sti
ja
lret
jp
dec
sbb
sub
stos
ja
mov
and
stos
pop
iret
mov
popf
inc
addb
sub
jmp
jg
ljmp
jbe
push
pusha
xorl
cmp
ds
xchg
cmp
lcall
test
clc
mov
fwait
inc
mov
and
mov
xchg
imul
aas
fisubrs
push
xor
xchg
xchg
aas
dec
mov
call
jl
mov
outsb
loope
xchg
jecxz
insl
fists
mov
and
pop
fsubs
fs
out
lret
pop
push
sub
xchg
push
add
repnz
cmc
xchg
mov
push
jbe
call
or
loopne
adc
in
adc
xchg
fcomp
mov
clc
in
out
dec
xchg
jns
mov
lcall
dec
pop
lock
mov
inc
test
add
dec
mov
mov
decl
cmp
adc
xchg
outsb
es
data16
ljmp
fadds
mov
lea
or
aas
aas
loope
in
mov
pop
cmp
cli
xchg
jne
or
lcall
mov
mov
test
sbb
or
fmulp
xlat
fs
repz
lcall
loop
dec
xchg
mov
push
adc
adc
pop
divb
in
seto
call
cmp
cmp
mov
dec
ret
or
and
mov
cmpsb
mov
in
mov
call
pop
cltd
lret
jle
inc
gs
jns
adc
or
and
jb
cmp
add
mov
sbb
jb
rcrb
divl
inc
lds
push
xchg
aaa
std
lcall
adc
repz
inc
aad
jnp
aas
push
movsb
jg
sbb
enter
push
mov
fnstsw
xlat
test
imul
mov
xlat
mov
and
jns
lods
dec
add
adc
jbe
test
or
jb
scas
sbb
stc
mov
cmp
rcr
jno
outsb
cmc
fnstenv
repz
in
popa
push
jecxz
dec
stc
pushf
call
mov
out
sbb
cmp
fwait
mov
insl
inc
fisubrl
jge
fwait
push
or
dec
add
mov
repz
fdivrl
mov
jno
jo
or
in
push
xchg
push
in
cli
loope
sbb
stos
inc
push
or
aaa
test
cwtl
xchg
mov
andb
and
sbb
push
xor
mov
lcall
loope
pop
inc
lock
aad
in
call
push
sub
cmpsl
jg
aaa
fmuls
lret
pop
xor
sbb
inc
lock
pop
inc
pop
or
or
stos
add
hlt
iret
xchg
jbe
sub
enter
pop
inc
jge
insb
xor
daa
dec
push
and
dec
lock
ljmp
push
add
insl
pop
subb
xor
pusha
stc
jb
cmp
test
in
lock
das
test
mov
or
rcr
jg
ljmp
aam
fildll
inc
mov
pop
pop
ret
cmp
mov
jmp
jb
inc
xor
bnd
mov
cmp
cmp
bound
push
sbb
push
adcb
mov
aam
jg
pushl
add
pusha
cld
mov
jp
js
mov
mov
or
lret
dec
adc
mov
test
out
xor
mov
xor
sub
test
mov
stos
in
cmp
pop
xchg
pusha
push
mov
out
adc
mov
out
cld
es
ljmp
and
leave
push
pop
add
notl
int
mov
in
rcr
xchg
and
incl
enter
mov
jno
fstl
leave
fstpt
lds
mov
push
incl
pop
pop
mov
add
jl
les
and
jle
cld
pop
sbb
test
out
mov
decl
jmpw
mov
stos
dec
or
mov
mov
lcall
lcall
adc
adc
fcom
pop
sbb
sbb
xlat
or
mov
daa
pop
mov
in
insb
icebp
xor
cli
adc
scas
popa
jne
mov
sbb
push
lret
dec
and
dec
mov
xchg
shrl
mov
and
data16
jmp
nop
cmp
aad
inc
andb
leave
aaa
pop
sub
stc
inc
les
out
decl
int3
mov
outsl
scas
data16
jecxz
stos
imul
inc
mov
ret
dec
jns
aad
into
aad
lret
data16
mov
imul
lcall
aas
fistl
sti
scas
inc
aas
les
and
daa
cmp
and
pop
cmp
pushl
imul
aam
or
cli
sbb
mov
sarl
push
daa
jp
sbb
pushf
push
imul
aad
push
cld
incl
stc
lds
roll
pop
js
xor
fdivp
loope
imul
faddl
pop
enter
mov
ljmp
stos
pop
xchg
test
mov
data16
cli
incl
mov
loop
sbb
out
adc
repz
xorl
ljmp
pop
jns
or
inc
gs
cmp
or
dec
pushl
fisttpll
sbb
movsl
xor
xorb
cli
pop
adc
daa
dec
cli
out
scas
bound
out
in
cmpsb
decl
ret
push
sbb
add
leave
or
mov
into
outsb
cmp
xor
xchg
fwait
mov
out
enter
loop
pushf
jge
cmp
test
dec
or
add
inc
sbb
test
je
cltd
xorb
adc
dec
decl
adc
dec
call
test
sbb
mov
cwtl
js
dec
ret
call
shrl
add
addr16
stos
push
in
out
sbb
aam
loope
repnz
enter
in
rcr
mov
mov
push
fmulp
jle
out
sub
push
xor
nop
cmp
cs
pop
cmp
adc
mov
sbb
fisubrs
insl
sarb
xchg
into
xchg
sbb
inc
lcallw
jmp
push
repz
or
push
add
push
lahf
or
jmp
add
lahf
pop
xchg
mov
fisttpll
idivb
mov
dec
cmp
fisttps
sub
jmp
lcall
ds
or
dec
pop
xchg
stos
ljmp
loop
mov
mov
xor
cld
scas
es
int3
push
jns
fnsave
fsts
xchg
pop
push
adc
shll
sub
mov
int
ret
fistl
and
jecxz
adc
mov
or
or
out
cmp
pop
movsl
cmpsl
movsb
jb,pt
idiv
and
adc
js
fwait
xchg
jle
add
mov
fiaddl
jnp
add
cmpsl
or
incl
add
and
stos
les
mov
lods
push
mov
mov
pushl
test
shlb
inc
pop
ja
test
or
popa
xor
sbb
adc
push
add
clc
insb
fldcw
ficoms
pop
dec
js
lds
std
cli
xor
in
cmpsl
hlt
incl
mov
or
sub
popf
push
jle
decl
sub
popa
lahf
movsb
xor
popa
ret
lcall
incl
mov
cmp
jne
or
xor
repz
push
nop
and
in
imul
adc
aas
rcrb
lcall
test
lods
fdivl
fidivs
fdivp
dec
nop
pop
lods
lahf
xor
test
insl
inc
and
call
gs
das
imul
roll
orb
push
mov
sub
mov
sbb
jmp
and
xor
dec
mov
jbe
pop
jbe
push
notb
mov
xlat
es
and
es
mov
cli
mov
xor
mov
repnz
lcall
icebp
cli
es
mov
in
dec
fwait
sbb
int3
jmp
cmp
testb
or
sbb
mov
and
gs
inc
cmp
push
repnz
inc
sub
jnp
pop
xor
test
push
xchg
cmpsb
mov
out
cli
lcall
cmp
cmp
popl
push
xchg
decl
popa
loop
outsb
cmp
push
rolb
cs
inc
outsb
stos
enter
cmpsl
dec
push
mov
pop
in
movsb
or
mov
mov
fiadds
mov
clc
pop
inc
fiadds
sbb
fwait
mov
sub
fwait
sub
xchg
push
testl
pushl
cld
mov
dec
dec
sub
xor
add
cmc
jecxz
sub
incl
je
xacquire
fsubrl
dec
or
jle
cld
daa
fcmovnu
dec
sti
jmp
lock
data16
out
pop
dec
jge
cs
xor
decl
xor
adc
lcall
pop
clc
jecxz
and
aas
or
mov
jecxz
dec
inc
out
inc
enter
xchg
jo
xchg
lahf
pop
hlt
popa
sub
iret
call
mov
pushl
shrl
dec
bound
imul
jb
std
divl
icebp
pusha
sbb
jmp
push
loope
movsb
in
xchg
sub
pushf
cli
inc
cld
jbe
dec
enter
cltd
fdivrs
jnp
lret
pusha
sti
stos
decl
bound
adc
inc
cmpsb
sub
jae
cld
out
cmp
lcall
and
mov
cld
push
pop
repnz
subl
pop
test
icebp
inc
lret
cmp
das
addb
add
mov
add
imul
lods
and
cmp
nop
insb
push
mov
jmp
ss
xchg
rsm
push
inc
ss
std
push
push
nop
enter
decl
shlb
iret
loop
movb
jae
popa
cld
cmpsl
mov
add
clc
cld
push
in
adc
clc
xchg
inc
sbb
fstl
or
sub
cmp
decl
jle
outsl
clc
adc
in
fs
sub
lcall
incb
call
mov
pop
imul
inc
mov
mov
cmc
jmp
sub
decl
lods
cmpsl
ret
pop
mov
or
cld
fucomi
inc
cmc
lods
fists
into
push
rcrl
dec
adc
jns
mov
or
daa
js
pop
mov
aad
call
ss
int3
scas
dec
pop
dec
cmp
orb
adc
imul
mov
pop
stos
sbb
cmp
inc
mov
scas
add
rorb
push
outsl
sbb
add
or
pop
pop
inc
inc
cmp
scas
sub
add
cli
flds
adc
test
push
ljmp
aaa
dec
xor
mov
sbb
test
loopne
inc
mov
mov
push
fadds
sbb
inc
sti
mov
popf
insl
clc
cmp
or
jb
fistps
or
xor
adc
push
xor
sbb
les
mov
negl
shrl
sub
pushl
cmp
cltd
add
jbe
sbb
repnz
and
or
mov
inc
xchg
fistl
inc
mov
push
testb
cld
dec
ja
hlt
repnz
pop
jge
ljmp
sub
and
mov
cmp
adc
addl
pop
into
insl
or
inc
push
fcomip
ljmp
pop
jmp
cs
std
stos
mov
arpl
daa
fcos
jmp
mov
test
fidivs
insb
push
gs
or
jb
ljmp
cli
das
rcrl
mov
xchg
stc
icebp
sub
subb
adc
imul
clc
call
imul
xchg
xchg
cmp
push
xor
mov
out
stc
xchg
je
pop
out
into
ds
jmp
lock
pushf
scas
idivb
dec
push
jne
adc
lret
addr16
into
push
shll
dec
pop
fstpt
add
xor
jbe
insl
movsb
inc
je
and
mov
ljmp
ficomps
lds
xor
pop
or
test
or
cmp
lock
incl
das
mov
jnp
jb
and
sub
fs
je
and
fnstcw
lods
cmp
shlb
out
aaa
les
out
sbb
mov
dec
mov
inc
ljmp
adc
js
sub
and
insl
std
mov
nop
out
jno
lret
repz
xorb
outsl
xorb
push
or
imul
stc
in
flds
test
pushl
push
mulb
mov
sbb
ljmp
int
jle
and
clc
leave
sbb
fs
mov
pop
mov
mov
dec
mov
xchg
rcr
cmp
mov
mov
lods
inc
push
or
lahf
cmp
call
push
or
jmp
pop
popf
sub
jge
sbb
pop
loopne
sub
sbb
repz
cld
ret
dec
or
lcall
stos
faddl
or
mov
ljmp
cs
mov
repz
insl
hlt
shll
adcl
lahf
leave
je
repnz
repnz
or
ja
fidivrl
jnp
mov
mov
lea
out
rcl
hlt
and
lahf
dec
and
in
cmp
cld
das
hlt
jg
pushl
mov
mov
into
idivl
ror
pusha
out
cmp
ljmp
adc
add
push
push
std
mov
les
sbb
hlt
cmp
jmp
jne
ds
fisubrl
sub
bound
enter
jecxz
cmpsl
adc
mov
adc
sbb
ror
push
decl
lock
cmp
jmp
rcrb
popf
fstps
pushl
pop
fwait
mov
inc
push
mov
xor
jl
fldl
push
pop
xchg
push
hlt
mov
pop
inc
inc
notl
rorb
ljmp
add
lcall
mov
or
ljmp
std
add
aam
mov
and
or
test
test
jg
dec
add
sbb
jmp
mov
inc
push
mov
stos
test
ljmp
add
or
insb
nop
mov
adc
pop
mov
and
or
outsb
push
and
cmp
jmp
test
test
jns
nop
inc
push
adc
sbb
mov
jmp
gs
pushl
repnz
xor
mov
xchg
cmp
call
incl
sbb
fdivr
mov
mov
push
push
js
into
dec
push
push
push
jns
les
popf
mov
xor
inc
in
push
sub
cmp
xchg
mov
in
sub
xchg
cmp
iret
sub
jo
cmc
fdivrs
in
aas
ss
stos
mov
repnz
call
xchg
lods
pop
pop
mov
mov
sbb
aaa
inc
dec
sub
lahf
mov
or
incl
mov
mov
ljmp
scas
xchg
jecxz
arpl
sub
or
dec
or
sar
dec
inc
stc
cmp
push
mov
fisubs
add
mov
push
std
call
lods
lret
retw
add
push
and
stos
or
movsl
ftst
inc
les
in
sti
cmp
out
inc
sbb
cmp
decl
inc
cmp
fdivl
mov
mov
dec
imul
cmpsl
je
decl
in
jbe
xor
cmpsl
sub
pop
mov
in
and
mov
xchg
std
aaa
push
push
xchg
in
pop
jae
pop
and
jmp
and
ss
cli
push
inc
aaa
lods
inc
push
jb
xor
outsb
jg
incl
xchg
insb
xchg
jl
test
iret
loop
nop
das
jge
icebp
pop
pop
pop
sbb
popf
pop
ret
cmp
mov
mov
int
sub
cmp
cmc
pushl
or
pop
aas
dec
pop
inc
lods
mov
xor
aaa
xor
fcomip
out
mov
shrb
inc
enter
cmp
sub
hlt
jbe
push
cmp
lcall
sahf
mov
or
mov
dec
das
aaa
push
xlat
cs
dec
movsb
mov
rcrb
out
fsub
sub
jae
sahf
lahf
ljmp
cmpsb
pop
and
or
mov
decl
rclb
arpl
cs
xchg
addl
insl
out
fdivrp
fcomip
ljmp
imul
cmp
push
mov
jns
incl
push
leave
mov
jbe
pusha
mov
adc
daa
dec
push
andl
aad
cmp
jnp
jmp
es
push
and
push
je
add
mov
fldl
lret
in
dec
ficoml
dec
lret
into
adc
or
mov
inc
cli
aad
test
add
or
cs
fcmovbe
clc
incl
push
cwtl
xchg
xchg
ret
xchg
movsb
test
loop
mov
jns
movsl
pop
xor
push
imul
or
sbb
mov
outsl
mov
loop
ret
sbb
incl
scas
mov
fimuls
jae
jl
inc
popf
test
sbb
push
jl
outsl
cli
dec
fstl
sub
into
arpl
ljmp
sbb
jmp
push
xchg
push
xor
mov
push
dec
out
add
test
mov
xchg
and
mov
inc
leave
ljmp
push
cmp
fcmovne
push
lods
inc
pop
jbe
fsubrs
mov
xchg
jg
scas
dec
lret
shr
jecxz
add
xchg
pushf
and
dec
subl
or
mov
mov
or
xor
pushf
or
mov
dec
test
pop
in
pushl
fst
movsl
fistl
sbb
mov
aam
push
mov
movsb
and
sub
clc
sub
push
sbb
cmc
pop
pop
adc
jmp
cs
fmuls
ljmp
sbb
jl
push
stc
mov
and
push
push
iret
mov
adc
ljmp
sbb
pop
pop
pop
dec
xchg
push
push
into
adc
and
sbb
mov
jmp
xchg
and
push
cmp
cmpb
cmpsb
icebp
xor
dec
cmp
gs
add
jg
add
scas
inc
icebp
mov
gs
mov
sub
fcomip
mov
lret
int3
orl
test
das
nop
pop
push
mov
test
inc
sbb
movsl
add
jne
fsubr
or
dec
lods
je
aas
xchg
clc
decl
mov
mov
jg
inc
xor
add
or
fsubp
xor
ljmp
and
sbb
inc
test
xorl
dec
add
mov
mov
sbb
pop
into
mov
sub
neg
xchg
cmc
call
pop
mov
rolb
dec
sbb
lods
mov
arpl
fsubs
push
lcall
sahf
mov
outsl
and
ret
ss
mov
ror
mov
xor
call
insl
test
inc
scas
cli
idiv
xchg
ds
mov
xlat
jnp
lods
pop
leave
jb
ss
jmp
cvtdq2ps
push
push
push
pusha
sub
xchg
xchg
sbb
cwtl
out
mov
mov
adc
mov
cmpb
add
sarl
ja
call
lret
mov
xchg
add
mov
jbe
fucom
imul
outsb
xor
push
insl
cld
incl
lcall
or
addr16
in
add
jmp
rclb
xchg
pop
lret
adc
mov
and
xor
jb
sbb
mov
fldenv
insb
data16
push
aad
jp
sub
jbe
repz
lcall
ret
xor
mov
icebp
mov
bound
decl
imul
pushf
test
popa
adc
ret
push
push
xchg
ss
and
out
clc
xor
mov
adc
and
mov
or
out
das
pop
inc
sbb
pushl
aas
int3
xchg
repz
jae
mov
test
call
push
daa
pop
push
aad
mov
cmp
mov
xor
xor
or
repz
or
jg
sub
jmp
divb
testb
lahf
mov
cmc
js
add
out
lods
push
pop
cmc
mov
adc
inc
loop
jle
mov
push
repnz
leavew
int
mov
adc
xor
lea
mov
fistpl
sti
call
xchg
movsl
xor
lods
inc
mov
jp
dec
fimull
sbb
sub
call
push
insb
dec
add
sub
and
inc
rcrl
cmp
sub
out
lea
int3
cmp
jmp
sbb
or
dec
xchg
imul
add
mov
mov
sub
jecxz
pushl
adcl
orl
xor
rclb
rcll
aaa
cld
decl
jg
out
lret
inc
mov
int3
subb
sbb
inc
fdiv
fcoml
loopne
jp
dec
dec
pop
push
mov
mov
bnd
cmp
aas
push
fmull
inc
lret
leave
lret
dec
arpl
rcrb
cmpsb
daa
lods
jl
inc
jecxz
icebp
loopne
lcall
adc
sbb
add
sbb
mov
mov
das
mov
rorb
decl
outsl
add
pop
je
inc
ficompl
push
les
call
xchg
orb
out
ret
sbb
data16
fdivs
adc
inc
xor
lcall
add
push
idivb
rcrb
aaa
xchg
in
xchg
incl
xor
or
xlat
pop
cwtl
mov
aam
scas
popf
xchg
hlt
mov
test
and
pushl
inc
or
push
pop
iret
pushf
test
daa
mov
insl
sar
call
xchg
fimuls
fists
pop
push
rorl
xchg
movsb
daa
adc
jnp
aaa
fdiv
js
sub
ficoml
pop
mov
and
rcl
mov
sti
lret
and
pop
pushl
push
xor
push
movsb
ja
shll
pop
jo
push
nop
js
shlb
pop
adc
subl
or
cmc
sub
mov
sbb
outsb
fmuls
sar
mov
ja
cltd
mov
push
sti
repnz
rcrb
aas
fstpl
js
in
mov
jle
sbb
loop
cmp
push
addr16
mov
lret
stos
jmp
inc
lods
and
sub
mov
sbb
add
pop
mov
mov
pushl
in
pop
push
scas
mov
mov
fcoms
stos
cmp
leave
imul
jno
int3
stos
pop
xchg
test
push
mov
repz
and
mov
or
dec
notb
xchg
insb
int
call
add
mov
das
pop
fnstenv
mov
pusha
xor
cwtl
lret
adc
jb
pop
pop
decl
loopne
pop
inc
push
or
dec
xchg
lret
mov
idivl
imul
sbb
jg
inc
cld
cmpsl
cmc
in
out
mov
outsb
push
das
or
hlt
pushl
idiv
gs
mov
repz
fidivl
adc
decl
xor
mov
mov
or
and
fsubs
pop
push
repnz
fstp
aaa
shlb
xlat
les
hlt
in
jno
add
bound
mov
xchg
mov
lock
addr16
imull
jmp
aam
or
push
daa
and
jnp
outsl
hlt
test
into
mov
cltd
sbb
cmpsl
popl
ljmp
push
std
out
cld
lods
rcl
fsubrl
movsl
addr16
mov
mov
shlb
leave
loopne
pop
nop
ds
and
divl
and
jg
loop
push
pop
das
ljmp
test
sahf
mov
cld
push
cmpsb
inc
fisubs
lock
rcrb
and
jmp
or
inc
mov
jbe
scas
sahf
add
inc
adc
fwait
mov
push
std
incl
sub
xor
pusha
add
xor
call
adc
push
mov
jno
sub
jb
dec
pop
outsl
in
inc
xor
sahf
mov
xor
dec
xchg
lods
jb
in
loopne
dec
xchg
ljmp
mov
imul
jnp
push
shl
mov
add
lods
repnz
mov
shrb
jo
ret
icebp
ret
dec
cli
pushf
jns
sbb
in
lcall
jg
cmp
sti
jb
lret
and
cld
in
sbb
sub
fldenv
cld
mov
mov
add
jae
mov
fnstcw
inc
loopne
cmp
push
int3
out
je
jbe
cmp
jp
aam
pop
pop
cli
jns
jmp
xchg
mov
xchg
sbb
jbe
imul
fimull
inc
inc
mov
and
and
jg
jg
out
jmp
mov
orb
jg
add
shr
push
ljmp
pushl
xchg
pop
mov
rol
cli
add
push
fcompl
cmp
cs
pushl
sub
into
fadds
clc
jecxz
mov
ret
mov
or
je
adc
call
and
sub
push
adc
adc
add
xchg
fldl
out
mov
mull
enter
test
adc
xchg
or
cmp
scas
sub
cmp
sub
inc
mov
jbe
cmp
insb
push
shll
mov
mov
imul
xlat
or
incl
fistps
popf
jne
or
scas
mov
inc
in
sub
popf
push
ja
jg
jmp
femms
stos
lds
pushf
call
xor
cmp
je
notb
inc
mov
pushl
cld
out
xor
lods
fwait
xor
inc
insb
orl
adc
ljmp
jmp
push
xchg
sub
mov
sbb
iret
mov
cs
lcall
xchg
xchg
xchg
xor
lods
mov
push
fbld
data16
aam
push
jp
xchg
mov
mov
sbb
ss
inc
hlt
lock
addr16
lcall
outsl
add
ljmp
loop
test
int
cmpsb
lock
jg
jo
jnp
cld
insl
and
or
mov
into
lock
shrl
int
cmp
lret
in
xor
mov
sbb
scas
push
add
icebp
mov
push
inc
push
add
decl
push
std
aas
cmp
cltd
sub
jge
xchg
fs
sar
jg
mov
mov
popa
adc
repnz
repnz
loope
call
xchg
mov
jmp
push
jmp
ret
push
std
dec
or
adc
cli
jp
inc
fbld
in
and
jns
or
mov
fdivl
pop
cli
lret
jl
jg
ss
stos
xchg
cld
push
lock
dec
outsl
pusha
xchg
push
icebp
rcl
jp
push
sub
ret
incl
fs
inc
test
imul
test
mov
jge
ret
call
pop
dec
rorl
out
sub
ljmp
lea
inc
movsl
in
outsl
push
push
mov
aaa
hlt
push
mov
ret
mov
in
sbb
or
ret
addr16
pmaxub
xchg
fisttps
mov
mov
leave
jo
pop
add
ljmp
pop
lods
ss
ss
lds
push
add
movsl
into
cmp
ljmp
mov
pop
test
mov
roll
cld
jno
dec
xchg
pop
jb
xor
call
jno
lahf
sarl
stos
fmuls
jmp
mov
and
cltd
mov
jmp
nop
xor
lret
es
sub
andl
vpcomd
push
dec
test
pop
inc
xor
or
cli
cmp
sbb
xor
ss
mov
aaa
loopne
cltd
jno
idivb
minps
lcall
ret
lahf
cld
lds
mov
mov
push
movl
ss
mov
jo
in
pop
repnz
call
je
jg
test
ret
push
inc
inc
sbb
fcmovnb
insb
es
jmp
cmp
lock
sub
sbb
pop
xor
inc
into
push
mov
lds
sub
pushl
jne
rcll
inc
out
xchg
jns
or
lods
lods
ret
inc
lahf
inc
enter
call
add
sti
jmp
jle
div
jle
sti
xlat
lods
movd
push
jns
sbb
xor
decl
jp,pt
loopne
sub
cmpsb
daa
outsb
jbe
shrb
adc
out
clc
and
fsts
and
dec
and
leave
out
add
sahf
decl
mov
fmull
stc
inc
sarl
out
fildl
dec
inc
decl
les
in
stos
movsl
sub
add
and
fs
mov
lret
pop
add
cmp
mov
loope
iret
test
xchg
js
mov
mov
cmpsb
inc
mov
stc
test
das
push
pushl
aad
and
xor
mov
ljmp
call
es
xlat
nop
ds
mov
sbb
add
outsb
fs
lcall
inc
mov
test
movsl
pop
cmc
mov
sarb
andnps
into
loopne
call
movsb
int3
es
stc
and
out
push
add
push
cmp
adc
cmp
or
dec
dec
imul
sbb
pop
mov
pushl
mov
push
and
pop
out
mov
mov
lret
sub
jmp
mov
cmp
push
jnp
ss
daa
mov
ds
xchg
ds
cmp
dec
sub
ret
pop
cmp
decl
ret
stos
bound
outsl
int3
aaa
lods
push
addr16
xor
xlat
mov
adc
icebp
jbe
mov
pop
adc
jo
mov
xchg
pop
jno
mov
jle
dec
shll
daa
dec
jmp
mov
mov
ret
lret
add
loopne
adc
fwait
pop
das
cmp
push
data16
scas
adc
push
enter
fcompl
data16
inc
scas
xchg
incl
pop
out
into
lods
cltd
or
cltd
mov
mov
unpckhps
pop
cmp
push
adcl
push
test
mov
add
stos
fidivrs
push
scas
sarb
jg
decl
mov
push
popf
mov
lea
mov
jg
fnstenv
insb
arpl
xor
or
outsb
inc
lods
xchg
movb
loope
call
hlt
stos
sbb
test
ror
mov
mov
push
xchg
test
frstor
out
mov
cli
xor
or
adc
dec
insb
lahf
js
mov
orb
inc
stc
insb
xchg
push
dec
rorl
aaa
cmp
inc
adc
lock
out
loop
ficoms
inc
in
cmp
cld
ljmp
jo
cld
or
out
xchg
arpl
and
movsl
fstl
in
ss
nop
scas
cld
jecxz
push
and
dec
std
add
pop
cmp
add
cltd
pop
ljmp
inc
out
jns
es
in
pop
lret
pop
jp
sti
cmp
decl
or
iret
xchg
add
mov
pop
adc
mov
xchg
cltd
inc
pop
and
idiv
jmp
xor
adc
mov
ret
sub
pop
pop
adc
xor
xchg
call
int3
adc
and
and
jbe
fwait
pop
bound
lret
pop
shll
jo
xor
lcall
cltd
inc
shlb
xchg
mov
popa
mov
or
cmp
or
hlt
loopne
xor
ljmp
jp
jle
jae
mov
and
and
cs
std
pop
xor
rolb
ss
xor
xlat
sub
push
movsb
cmc
je
lds
fnstenv
fists
test
push
loope
cmp
in
push
lods
mov
xchg
enter
dec
push
rolb
jmp
sbbb
leave
je
mov
imul
enter
cmc
sub
test
mov
lcall
gs
dec
test
add
je
xor
add
push
and
insl
loope
pop
rcr
sar
mov
xchg
mov
push
lret
mov
fildll
lret
xchg
jle
sub
mov
test
push
push
xchg
or
jge
mov
hlt
aaa
xchg
mov
cmpsb
fwait
popa
test
push
or
ljmp
cmp
push
dec
loop
adc
dec
dec
mov
mov
pop
sbb
mov
xchg
shrl
mov
jl
and
loop
mov
or
inc
fidivl
cmp
lods
sub
and
sbbb
sbb
xchg
pushf
pusha
inc
lret
sub
sub
lret
dec
inc
xor
jmp
xor
jecxz
push
out
xchg
das
or
xchg
repnz
ret
out
mov
inc
mov
add
stc
shl
pushf
int
pop
cmp
sarl
sbb
mov
pushl
cld
mov
adc
cmpsl
test
mov
imull
lcall
cltd
pop
mov
xchg
call
cmp
xchg
adc
jne
mov
mov
je
jmp
add
ret
pop
xchg
cmp
out
arpl
scas
dec
xchg
inc
push
jmp
enter
jge
cmp
mov
mov
dec
ss
adc
outsl
fs
iret
push
adc
and
incl
std
mov
mov
mov
popf
push
imul
jecxz
daa
push
ja
outsb
lock
pop
cmp
fildll
lret
gs
jp
shll
lret
aad
insl
sbb
call
loopne
jne
aam
insl
and
gs
repz
push
push
push
lcall
stos
sub
faddl
xor
nop
adc
mov
adc
cld
ljmp
popf
outsb
cwtl
cmp
pop
lret
lea
inc
jg
repz
lcall
cmpl
dec
add
pop
fadds
xchg
fisttps
hlt
push
in
clc
icebp
hlt
xor
cmp
or
jae
jae
add
cmp
data16
pop
cwtl
out
mov
pop
ret
sahf
ds
jg
lods
jo
dec
stc
lods
aad
or
aas
push
mov
ljmp
xor
and
stos
inc
add
dec
pop
cld
decl
test
iret
or
or
fisubs
hlt
push
inc
push
dec
push
aas
popa
xchg
addr16
lcall
mov
jl
cmp
xchg
mov
bound
das
xor
push
xor
call
add
cmp
aad
je
fidivl
pop
push
xchg
es
decl
or
push
jmp
adc
popa
sti
sbb
inc
jb
sbb
ljmp
add
mov
iret
fidivs
or
clc
sbb
mov
inc
adc
xor
fildl
sti
xchg
dec
in
fbstp
sar
decl
popa
das
fcoml
int3
mov
mov
dec
ds
mov
xor
mov
movlps
clc
movsb
dec
inc
mov
mov
inc
sbb
std
add
mov
das
sbb
pop
add
dec
xor
xlat
incb
fstpt
repnz
mov
cwtl
ja
jns
mov
ficoml
mov
movsl
xchg
xchg
fisubl
call
sub
cmp
push
pop
xchg
cli
sbb
and
dec
bound
push
test
xchg
aas
or
repnz
call
pop
imul
xor
mov
popa
fisttpl
mov
jg
and
aaa
std
jnp
mov
add
std
push
lcall
lcall
call
sbb
dec
fnstcw
mov
mov
mov
ret
icebp
in
mov
stc
jl
ret
inc
lods
dec
xchg
pop
or
mov
xchg
fucomip
cmp
push
mov
xor
jge
inc
lret
jg
ja
aam
dec
lcall
xor
inc
mov
test
sub
inc
mov
mov
outsb
lock
and
stc
jo
mov
lret
daa
pop
fdivrp
decl
xchg
push
into
push
jo
inc
adc
into
rcll
popa
mov
adc
or
ljmp
adc
mov
sbb
xlat
call
jbe
aam
xor
pop
jp
in
mov
inc
sub
in
repnz
or
stos
mov
es
mov
in
icebp
cmp
sub
sarb
jnp
out
out
mov
xor
fcomip
lcall
cmp
lods
xor
cmp
jo
and
mov
jbe
mov
xlat
cmp
lret
cmc
xchg
mov
mov
cmp
ja
shlb
sar
incl
jp
adc
repnz
mov
out
pop
fdivrl
test
es
loopne
repnz
jmp
xor
cmpsl
mov
jmp
push
pop
jp
sbb
scas
pop
dec
out
fs
lds
outsl
fdivr
mov
sub
outsl
outsb
pop
and
loope
out
sub
frndint
cs
outsl
mov
push
decl
add
aas
stos
lcall
adc
loopne
adc
fldenv
imul
pop
enter
in
out
iret
jmp
notl
icebp
out
mov
enter
mov
in
mov
or
xchg
fists
in
ja
jmp
inc
movaps
mov
cmc
inc
sub
scas
xor
sub
inc
pop
sbb
add
cld
testl
in
jecxz
cmovle
inc
cmp
dec
sub
adc
pop
and
push
jle
out
lcall
dec
pop
stos
insb
xchg
inc
jp
lea
xor
dec
gs
xchg
inc
jl
and
add
xchg
dec
push
push
aaa
test
add
xchg
cmp
shlb
ljmp
test
out
xchg
sub
sub
pop
sbb
int
sti
call
loopew
loope
fstpl
mov
jcxz
lea
add
pushf
stos
nop
adc
not
add
inc
inc
scas
hlt
test
xchg
movsb
push
and
in
jmp
into
loope
mov
inc
inc
push
inc
pop
lret
in
xchg
gs
clc
pop
sbb
test
and
lock
ljmp
xor
sub
jmp
lock
jle
jecxz
sbb
push
ret
inc
push
in
lahf
pop
jno
daa
sub
lods
push
ja
idivb
gs
push
popf
xor
mov
push
insb
mov
lcall
jl
nop
mov
sub
ja
ja
and
rcll
push
loopne
adc
cmp
push
shlb
data16
or
jp
inc
jne
pop
inc
pop
inc
sbb
mov
stos
movntps
fisubrs
loop
mov
mov
xchg
jo
xchg
adc
sbb
sbb
std
js
mov
fisttpll
scas
out
jl
enter
out
mov
aad
and
push
xchg
std
pop
les
stos
mov
push
push
stc
lods
mov
mov
loopne
cmc
repnz
jno
lea
mov
push
push
jmp
insl
out
out
cmc
mov
int3
ror
lcall
jb
mov
ljmp
cmp
add
lcall
xchg
aas
cltd
add
je
bnd
jae
iret
jnp
incl
repz
aas
test
lock
movsl
dec
dec
ficoms
in
sbb
push
sbb
hlt
ret
sbb
in
loope
outsl
sub
incl
lods
inc
test
incb
adc
xchg
add
ds
sub
and
push
pushl
lds
push
adc
mov
test
or
mov
insb
sub
jmp
cld
ret
gs
cld
popf
shl
xor
shlb
jnp
mov
fsts
mov
add
les
mov
push
sbb
and
mov
or
mov
pop
or
call
dec
rcrb
fwait
xchg
arpl
mov
decl
xchg
push
leave
and
push
cmp
mov
add
iret
cmpsl
cmp
call
jl
xor
xchg
pop
mov
mov
jge
adc
sub
xor
pop
dec
outsl
mov
and
sahf
cmp
call
xchg
jle,pt
cmc
stos
pop
and
mov
cmpsl
jb
enter
jmp
loop
gs
or
test
stos
and
cmp
stos
mov
pop
test
incl
adc
mov
jp
xchg
stc
orl
push
push
xchg
dec
shll
adc
call
aas
dec
cwtl
pop
sti
out
xor
mov
inc
lcall
mov
jmp
out
sub
ss
repnz
imul
ficomps
sub
xor
mov
mov
push
push
out
jns
insb
xchg
xchg
orl
lahf
add
mov
fs
clc
decl
data16
in
sub
mov
mov
mov
push
sar
call
dec
xchg
dec
mov
ss
jns
addr16
mov
jle
lcall
lods
hlt
adc
fcompl
fadds
lock
push
fcomps
rolb
js
insl
loope
fstpt
incl
dec
or
sbb
sarl
xchg
movsb
mov
popa
mov
or
pop
test
push
dec
jl
insl
dec
adcl
sub
pop
lods
in
scas
pop
shlb
dec
mov
ljmp
pop
push
jmp
iret
mov
repz
xchg
fucom
push
push
loope
push
xchg
into
or
lcall
cmpsl
mov
or
xor
into
cmc
int3
cwtl
fsubs
jge
cltd
lods
lcall
shrb
shll
mov
movsl
sarl
push
push
fbld
loopne
pusha
jecxz
xor
or
jmp
adcb
shrb
lahf
outsw
imul
inc
je
pop
cld
dec
dec
xchg
aad
stc
movsl
ja
cmp
rol
add
stos
fcomip
ljmp
xchg
out
icebp
push
push
mov
pop
cmpsb
arpl
jp
sub
std
pushf
sub
idivb
jae
psubusw
decb
movsl
mov
pop
ret
xchg
dec
stos
jmp
mov
xor
mov
adc
cwtl
push
mov
push
inc
in
lock
or
incb
cli
fcomip
or
lds
xor
push
movsl
push
leave
mov
imulb
inc
cwtl
rcll
sbb
mov
lea
loopne
lret
adc
test
call
xor
add
mov
jg
push
testb
cmpsb
cmpsb
es
fs
jle
pop
or
adc
sbb
movsl
lods
incl
and
or
mov
xchg
push
lret
cmc
jg
xor
lcall
les
outsb
sub
mov
dec
call
jge
jl
ret
pusha
or
jae
sbb
adcl
jmp
push
cmp
inc
mov
in
call
fsubs
push
in
push
out
fidivs
inc
push
cwtl
sbb
jge
jp
ret
fisubl
loope
inc
movsl
adc
jl
mov
mov
shr
sti
pop
sbb
add
lahf
adc
jp
mov
xor
flds
dec
mov
jmp
cld
stc
fcomip
xor
jmp
xlat
push
hlt
push
adc
sahf
ljmp
fmull
rclb
mov
jo
push
out
popf
stc
mov
jo
incl
mov
xchg
xor
xchg
xor
xor
fwait
ja
push
sbb
insb
jg
sbb
test
mov
test
jmp
dec
inc
mov
cmc
or
outsb
mov
lcall
xchg
clc
jno
pop
and
stos
jge
mov
adcb
push
lods
jmp
mov
enter
test
sahf
mov
int
lret
outsl
add
and
std
push
cmp
jecxz
pop
mov
mov
mov
sbb
sarb
jmp
scas
clc
pushl
and
pop
xor
sub
cwtl
push
and
xor
sub
xchg
fwait
jb
jg
call
mov
cltd
add
mov
fmul
xchg
call
xchg
pop
pop
cmp
lcall
lds
sbb
hlt
or
xchg
add
ret
push
dec
ret
out
push
incl
jns
dec
cmp
and
fwait
leave
mov
adc
repnz
call
xor
mov
mov
or
inc
mov
jns
insl
mov
xor
lcall
jns
dec
sbb
outsl
xchg
mov
add
sbb
scas
addl
mov
pushl
dec
aas
jle
jne
movsb
cmpsl
lcall
lcall
xor
xchg
clc
cli
mov
outsl
push
dec
adc
xchg
mov
push
pushl
outsb
cld
out
out
je
push
jae
cmpsb
xchg
negb
je
fistps
cmc
mov
call
and
lcall
sub
mov
adc
add
roll
test
push
mov
push
cli
mov
insb
mov
adc
fcomps
addr16
pop
jo
sub
fbld
push
repz
mov
shll
inc
cmp
mov
adcl
jg
in
insb
movsb
stos
mov
in
jmp
aad
dec
jnp
test
inc
jae
and
hlt
cld
jl
jl
mov
std
test
mov
cwtl
lock
xor
adc
add
outsb
xchg
pushl
pushf
jns
jo
and
subb
push
roll
push
lock
dec
iret
lahf
sub
decl
daa
roll
mov
dec
jbe
sub
in
dec
dec
jno
ljmp
xor
push
sti
add
xchg
nop
cmpb
insl
cmp
mov
jnp
and
inc
jp
in
insb
psubq
loopne
ljmp
mov
xor
dec
cwtl
dec
inc
aas
jmpw
mov
add
std
push
pop
es
mov
mov
mov
add
mov
add
push
jge
filds
dec
insl
leave
jnp
jbe
pop
imul
movsl
mov
incl
xchg
push
cmpsb
push
loope
cld
movsl
and
pop
lods
mov
call
adc
int
sbb
mov
pop
outsb
push
repz
rcl
ljmp
fwait
push
in
out
xor
mov
push
lcall
lds
scas
leave
pusha
pop
jo
std
imul
add
stos
cs
fstpl
cmp
adc
fcomps
add
adc
andb
shl
push
out
in
out
arpl
mov
cmpsb
int3
dec
cmp
add
push
push
mov
loope
mov
xchg
pop
dec
test
inc
xchg
fnstcw
sahf
and
incl
lds
scas
imul
adc
cmpsl
cmp
push
ss
sub
in
test
lea
mov
lods
in
stos
adc
fidivrs
stc
push
mov
sbb
hlt
lods
cmc
repnz
xchg
or
decl
cmp
jp
jle
in
repz
mov
or
cld
shll
push
shl
mov
xchg
gs
jbe
decl
push
stos
popf
lea
stos
jns
pop
das
push
jle
inc
mov
mov
jae
in
dec
or
pusha
data16
or
sbb
repz
lock
outsl
das
or
nop
adc
mov
add
dec
js
xchg
jnp
push
and
xchg
fmuls
pushf
push
mov
andb
call
into
inc
jl
sbb
mov
aas
push
jns
ror
dec
call
nop
test
push
cmp
sbb
pop
jg
push
test
xchg
push
pusha
cwtl
lds
pop
push
push
hlt
icebp
xorl
lahf
mov
js
loope
adc
pop
push
enter
fstpt
adc
ljmp
dec
fwait
cltd
nop
out
addb
or
cmpsl
pop
mul
cmp
hlt
stos
orl
loope
dec
ss
test
mov
jmp
mov
jne
int
imul
int
jp
call
add
and
xchg
xchg
dec
and
mov
std
or
mov
lcall
out
jbe
nop
cli
mov
ret
daa
jle
xchg
push
cltd
pop
scas
and
pushl
loopne
inc
xchg
mov
popa
sti
mov
push
out
sbb
test
pop
sub
jns
cmp
mov
adc
mov
adc
push
cmpsl
pop
jnp
jno
stc
shll
lcall
mov
fistps
js
cmp
ret
imul
mov
pop
pop
sub
mov
cmpsl
in
cmpb
push
sbb
sub
scas
or
aad
jle
mov
lock
xchg
sbb
pushl
lock
pushf
cld
jmp
out
out
cwtl
mov
jp
push
dec
push
adc
push
addr16
add
adc
dec
inc
sbb
add
xchg
inc
ds
push
or
jmp
das
lods
stos
sub
lods
test
pop
fcoms
data16
aam
sub
stos
mov
inc
pop
inc
inc
je
cmp
jo
popa
icebp
jne
jecxz
inc
dec
push
sub
cmp
sti
cmc
jge
popa
incl
adc
insb
icebp
and
aam
push
xor
aas
les
add
decl
insl
testl
pop
imull
xchg
inc
cmpsl
mov
decl
je
push
push
inc
inc
rcrb
jg
ja
fsub
std
stos
jae
repnz
or
repnz
fwait
add
call
pusha
bound
incl
cmp
push
lea
mov
ds
out
push
out
incl
xchg
dec
outsb
out
pusha
shl
lahf
lods
or
popf
scas
out
roll
cld
div
inc
pop
dec
or
idivb
in
and
clc
xor
lahf
lds
or
or
jle
add
cmp
insl
push
test
insl
shlb
repz
out
xlat
fists
adc
add
sub
test
test
in
mov
dec
das
jo
jb
sbb
js
cmp
movsb
pop
jno
frstors
sbb
gs
decl
jo
lods
sub
push
lret
adc
popf
mov
sub
int
call
push
lcall
or
and
lret
icebp
mov
push
pop
and
std
test
jmp
sub
test
mov
jg
mov
pushf
jg
push
and
jmp
inc
xchg
inc
pop
or
pop
lret
sub
aad
push
int3
data16
jbe
bound
lret
cld
inc
xchg
pop
imul
push
iret
loope
and
jns
dec
mov
je
decl
add
fbld
repnz
sub
pop
out
scas
loopne
inc
mov
imul
jg
jp
pushf
int
dec
les
out
push
lret
inc
mov
lods
mov
inc
mov
jbe
test
icebp
sbb
sub
mov
mov
jb
loope
in
adc
mov
pop
lea
add
push
scas
cli
mov
arpl
popf
mov
mov
je,pt
iret
das
pushf
mov
dec
andl
pushf
push
push
mov
mov
das
mov
cmp
hlt
jno
pushf
jge
add
dec
shlb
iret
jge
mov
xchg
iret
stos
gs
jmp
shlb
dec
ja
cmc
or
mov
ljmp
sub
or
sub
loop
mov
inc
ds
ret
inc
ljmp
repz
int3
enter
aas
add
dec
cmpsb
ds
pop
xlat
mov
add
lea
ja
loopne
xor
insl
sbb
incl
cmc
xor
push
adc
mov
push
xor
stos
xor
test
cmp
pusha
jle
inc
push
loop
and
fcoml
out
insb
cld
pop
in
incl
gs
fs
leave
paddb
xor
enter
add
incl
xchg
adc
push
xchg
rcl
ss
xor
jnp
jno
or
xchg
es
pushl
xchg
inc
jp
fstps
push
in
rclb
cmovns
jle
popa
push
cwtl
fnstsw
std
sub
inc
and
inc
outsl
pop
and
imul
subb
sti
and
mov
jo
leave
xchg
jae
ret
in
cmp
not
loope
mov
sub
dec
sub
loop
mov
pushf
cli
loope
pop
imul
decl
xchg
fwait
addr16
outsb
jne
loopne
popa
arpl
fidivl
lcall
cli
cmp
cld
aaa
lcall
cmc
arpl
in
mov
jbe
xlat
dec
and
incl
frstor
and
push
insl
test
fsubs
cmpsl
mov
lcall
jg
adc
int3
daa
fldcw
mov
jne
rcrl
pop
dec
pushl
cmpsl
mov
fs
adc
test
or
sub
mov
fldenv
mov
fiaddl
add
pushl
stos
or
jp
inc
pop
mov
repz
insl
cmp
jbe
lds
pop
cmp
out
call
call
movsl
cmpsl
pop
mov
xchg
pop
xor
jg
xor
loop
pop
mov
add
add
js
fimuls
push
add
push
jo
mov
decl
jecxz
inc
adc
mov
pop
outsl
adc
fs
pop
and
push
xchg
pop
call
aam
add
xor
pop
push
ret
imul
adc
xor
cld
decl
mov
clc
faddp
outsl
test
rcll
adc
pushf
clc
mov
mov
fstpt
sti
xor
adc
fidivrs
fdivl
aam
jp
andl
mov
mov
aad
sub
xor
imul
movsl
call
lcall
mov
sbb
adc
ljmp
arpl
cmpsl
push
popf
les
cld
add
pop
lds
hlt
inc
sub
out
cld
movl
imul
shl
orl
js
sahf
test
mov
and
cmc
fiadds
cmp
xor
out
fimull
mov
mov
adc
xchg
xchg
lcall
jp
inc
mov
or
jo
or
mov
int
xor
xor
dec
cmp
loopne
decl
shl
leave
mov
dec
mov
jbe
pop
dec
push
mov
add
cmp
aam
fisttps
cmp
iret
cmp
jmp
fldenv
out
in
add
test
cltd
pop
sbb
and
loope
ret
rcll
xchg
movsb
xorl
adc
dec
incl
mov
jns
out
repnz
aas
or
and
std
add
pusha
dec
call
and
sub
jl
sub
and
out
push
gs
mov
call
and
add
mov
mov
add
xchg
clc
lcall
xor
loopne
cmp
mov
insl
jne
leave
inc
dec
popa
ljmp
movsb
xchg
dec
lock
js
repz
xor
scas
mov
rsqrtps
outsl
call
faddl
insl
popa
lds
sahf
pop
jno
sub
push
mov
clc
dec
cmp
cld
dec
hlt
outsl
mov
mov
and
mov
xchg
cmpsb
cs
ret
fsubrl
jae
pop
cmp
dec
mov
mov
and
call
repz
cli
popa
lcall
cs
mov
lds
xchg
int
pavgb
in
in
sbb
xchg
aad
ljmp
adc
dec
imul
xchg
movsb
ljmp
adc
adc
cmp
lds
xchg
lahf
xor
das
jno
movsb
mov
scas
imul
mov
mov
xchg
mov
jbe
repz
js
int3
and
incl
xlat
decb
jne
mov
adc
xchg
push
add
mov
jmp
outsb
fcompl
dec
in
movsb
aas
push
rclb
mov
jmp
or
mov
out
or
sub
cmp
movsb
add
inc
loopne
sbb
lds
push
add
decl
stos
fmull
xchg
pop
lret
es
add
outsb
in
pop
pop
aad
cld
clc
mov
dec
icebp
aaa
push
dec
mov
mov
or
mov
inc
or
clc
mov
jmp
sbb
mov
arpl
mov
les
cmp
jmp
incl
arpl
push
movsb
and
sbb
mov
sub
leave
sbb
pop
and
inc
pop
mov
data16
jo
into
mov
mov
xor
adc
inc
jmp
pop
ds
jmp
pop
aas
aad
cmp
xchg
jp
les
mov
cmp
sbb
rolb
ljmp
or
int
adc
outsl
shll
jne
and
sub
sahf
fisubrl
adc
or
fdivrs
inc
push
loope
es
stos
dec
fildl
sahf
or
lcall
imul
sbb
mov
inc
in
pop
mov
or
pushf
push
out
inc
aam
cmp
call
enter
sub
aam
in
lcall
lret
clc
popa
mov
fdivrs
lahf
and
cmpsl
repnz
pop
fildl
int3
ret
cmp
inc
jmp
clc
mov
lahf
jns
aas
push
inc
inc
dec
pop
push
loopne
leave
rolb
popa
outsl
or
int
jne
sub
sar
jmp
lods
push
cmpsl
out
mov
xor
cld
cwtl
or
call
in
scas
ljmp
int3
mov
cwtl
int3
mov
inc
scas
call
decl
dec
pop
cltd
iret
mov
pop
jge
popf
xchg
testl
das
inc
cmp
mov
sbb
in
outsb
shlb
rol
aaa
jno
fbstp
ret
clc
sti
leave
sbb
daa
xor
mov
xor
mov
xchg
mov
push
pop
mov
testl
ljmp
mov
cmc
mov
ds
pop
mov
repz
ret
call
repnz
mov
lret
into
loop
mov
mov
xor
push
std
pushl
mov
daa
jno
xchg
lea
ret
and
xchg
mov
mov
stos
jnp
mov
testl
in
sub
test
xorl
out
dec
fisttpll
es
out
es
xchg
insb
test
and
push
stc
fnstcw
jmp
leave
pop
or
dec
inc
imul
cmpl
dec
jae
lret
or
mov
hlt
lds
and
movsl
imul
mov
mov
je
sti
adcl
popa
pop
cmp
sub
mov
decl
xor
stos
daa
mov
xchg
mov
sbb
int3
sub
cwtl
dec
in
scas
mov
call
and
rolb
xchg
cmc
push
add
clc
dec
test
icebp
rorb
loop
jg
and
xor
mov
test
jo
lahf
sub
jmp
cld
out
sub
xchg
pop
push
test
ljmp
mov
inc
imul
pop
cmc
jne
in
stos
fidivrs
xor
push
sbb
jns
outsl
push
inc
outsl
clc
lcall
popf
pop
sub
lcallw
mov
xchg
int3
popf
ficomps
cld
fsubs
jne
pop
mov
sbbb
es
out
sbbb
movsb
xchg
add
popf
sbb
pushl
ja
push
sbb
call
lret
xor
add
dec
jmp
dec
aad
xchg
mov
sub
mov
test
or
insb
rcll
mov
mov
cmpsl
in
incl
les
jo
xlat
outsb
mov
mov
jne
shr
pop
mov
fwait
mov
loope
rclb
fcomip
enter
fcmovu
pop
pop
adc
dec
inc
faddl
pop
std
cmp
mov
fsubrp
filds
dec
hlt
cli
or
lahf
jo
sbb
inc
mov
or
mov
mov
stc
pop
mov
cld
ljmp
lds
aam
sub
xchg
mov
sahf
inc
mov
into
and
ljmp
rclb
inc
orl
xchg
mov
xor
mov
xchg
and
adc
outsb
imul
add
inc
sbb
mov
push
mov
push
imul
call
sub
jae
xchg
cmp
mov
dec
pop
jge
lods
leave
out
mulb
adc
imul
clc
jnp
ret
mov
mov
rcll
mov
push
xor
jl
jmp
std
pop
push
insl
lret
pushl
push
jae
mov
dec
outsl
hlt
iret
xor
sar
jmp
and
xor
jne
in
shll
dec
pop
stos
inc
push
ljmp
scas
repnz
mov
ds
sbb
push
push
mov
push
test
push
jle
and
int
push
inc
dec
mov
lcall
lds
mov
jne
mov
cwtl
sbb
imul
sub
jbe
incl
jne
arpl
loopne
push
lahf
mov
outsb
int
cltd
outsl
dec
pop
sbb
fcmovne
pop
filds
fdivrl
enter
lret
add
xlat
stc
pushl
std
cld
xor
and
dec
mov
leave
test
fnstcw
sti
test
cmp
pusha
outsb
popa
xchg
dec
mov
adcl
push
lahf
lcall
fwait
repnz
pop
flds
or
inc
adc
out
bound
cwtl
xlat
incl
aad
cmp
xchg
ret
mov
adc
in
out
or
jle
jg
push
inc
sbb
adc
aas
xor
lock
iret
and
pop
ljmp
scas
fidivrl
insl
arpl
sbb
jg
jecxz
and
test
std
call
mov
jns
mov
scas
push
divb
sbbb
call
jge
jecxz,pt
cld
or
mov
add
push
into
inc
ret
loope
fwait
ljmp
push
add
arpl
and
inc
pop
ljmp
jo
sti
push
xor
test
call
jmp
xchg
addr16
push
cmp
pop
sbb
js
inc
cmp
xchg
mov
mov
inc
pusha
pushl
cmpsb
cltd
loop
xlat
call
nop
ljmp
fnsave
add
inc
repnz
lcall
repnz
fcmovnu
pop
sub
cmp
add
and
in
dec
pop
dec
mov
fcomip
insb
xchg
lods
shlb
adc
xor
ss
cmp
cld
dec
inc
adc
pop
insl
pop
dec
movsb
push
fcomps
lock
stos
ljmp
popa
lret
aad
jge
sub
sbb
cmp
sub
call
jle
fstpl
movsb
insb
call
mov
mov
mov
push
loopne
mov
sbb
push
pushl
imul
xchg
lahf
xor
nop
sub
imul
mov
lcall
icebp
ja
std
mov
push
shl
hlt
lahf
mov
push
cli
or
lods
cmp
jp
bound
in
mov
call
add
mov
sbb
in
mov
add
jge
data16
decl
jb
lods
test
fdivrs
lcall
and
ljmp
mov
call
repz
sbb
cmp
cld
mov
pusha
pushf
cmpsb
inc
hlt
mov
popa
dec
out
call
inc
pop
je
pop
cmp
pop
jbe
ficompl
mov
xor
push
or
push
pop
pop
pop
adc
hlt
jp
daa
stos
add
mov
jo
scas
lock
loopne,pt
xchg
push
cld
daa
dec
jp
pop
shrb
js
pop
push
xchg
mov
jmp
loop
adc
test
jp
mov
add
jnp
in
sahf
or
test
pop
pop
aaa
adc
ljmp
loope
repz
or
popf
pop
lock
push
imul
and
data16
std
jmp
insb
or
sbb
repnz
or
fnstsw
jbe
in
sbb
adc
dec
stos
call
sbb
cmpb
outsb
fldt
lods
pop
jo
dec
mov
adc
mov
xor
loope
mov
jno
jl
mov
push
inc
inc
push
pop
mov
ljmp
sbbb
mov
jle
cld
cli
add
fwait
adcl
inc
ljmp
scas
loopne
loop
mov
push
mov
jle
in
lahf
hlt
mov
mov
dec
test
and
lea
add
ljmp
push
sub
ds
mov
iret
movsl
or
mov
pop
enter
jg
jp
movsb
ljmp
jmp
xchg
add
fcompl
rclb
inc
jo
daa
imul
fdivrl
je
fwait
jg
jne
cli
fs
insb
and
out
fcoms
scas
ret
sub
inc
sub
pushf
fwait
jno
and
fwait
imul
lcall
xorb
xchg
stos
xor
lds
pop
or
sub
jns
stos
mov
mov
push
or
lock
jmp
jo
popa
push
sub
lea
aad
mov
mov
xchg
js
lcall
imul
mov
idivl
fisttps
add
or
add
arpl
out
hlt
dec
mov
andb
push
cld
xchg
xor
pop
cs
mov
add
cmc
jmp
dec
dec
mov
test
adc
loope
pushf
loop
dec
pop
cmp
sub
dec
fcomps
push
jg
decl
les
in
add
dec
or
call
fildl
inc
push
scas
or
shrl
in
mov
mov
fldt
mov
xchg
insb
clc
push
ljmp
imul
push
dec
mov
movsb
scas
xchg
jl
imulb
push
sub
cmp
test
sbb
mov
rol
in
mov
lds
dec
cmp
jmp
leave
mov
add
pop
cmp
pop
mov
adc
test
mov
iret
andl
daa
pop
or
je
jne
mov
sub
ljmp
dec
lods
jp
imul
stos
jae
das
out
sbb
pop
dec
or
roll
scas
jmp
insl
mov
mov
scas
sub
inc
add
mov
inc
jp
or
pushl
fsubrs
ret
scas
divl
sub
sub
in
subb
dec
frstpm(287
incl
lret
cmp
out
jns
cmpsb
sahf
xlat
loope
push
pop
loop
popa
mov
lock
jg
push
ds
sub
add
ret
cmp
mov
or
add
mov
and
mov
or
shlb
pop
pop
js
outsl
out
push
push
mov
mov
cwtl
sub
insl
cmp
fisttpll
ljmp
shll
enter
xor
loopne
inc
std
movsb
in
into
inc
scas
inc
test
mov
cmc
call
pop
clc
jg
test
cmp
insb
xor
adcl
push
test
lcall
insl
shl
in
daa
sbb
mov
and
je
mov
outsl
stos
scas
mov
lcall
sub
jl
add
insl
arpl
adc
std
in
je
negl
movsb
cld
xchg
jno
ljmp
cmp
pop
cltd
icebp
dec
popf
fisubrs
mov
fdivrs
jecxz
cmc
pop
jno
imul
into
push
test
mov
adc
pop
ljmp
lahf
mov
xor
inc
incl
aad
sub
je
loop
lds
stc
fisttpll
orps
pop
xlat
jmp
test
or
and
xor
mov
divb
and
decl
stos
lods
add
iret
push
stos
repz
jl
loope
sbb
adc
sub
icebp
fsubs
incl
popa
mov
jnp
mov
jnp
cli
dec
lahf
sbb
cmp
cmp
add
lock
jg
out
cmp
fwait
xchg
insb
sbb
mov
mov
lds
dec
in
call
sarl
orl
sarb
loopne
add
jmp
call
pop
repz
mov
xchg
dec
fidivrs
test
shlb
das
xor
inc
ja
clc
jmp
fnsave
clc
in
nop
add
je
lcall
fbstp
xchg
sbb
repz
movsl
jno
sbb
dec
rolb
mov
and
mov
adc
test
lcall
daa
inc
mov
push
mov
insl
mov
push
clc
jmp
add
sub
ljmp
sub
sahf
aas
cwtl
mov
mov
xor
adc
adc
les
cli
jp
xorb
stc
fcoms
int
inc
inc
xchg
daa
lahf
xor
ss
cmp
add
jg
push
cwtl
push
and
xchg
push
or
inc
fadds
ljmp
push
subb
cld
arpl
inc
stos
sub
inc
sbb
fisttps
repnz
and
adc
jle
dec
adc
int
xchg
sub
rorb
sbb
lods
clc
sub
xor
rorl
mov
jbe
adc
inc
cmp
ljmp
cmpl
lcall
sub
loopne
mov
mov
and
out
mov
adc
lret
push
add
xor
popf
ret
mov
cmp
xchg
inc
jno
jmp
lret
sbb
fwait
xchg
jns
outsb
inc
cltd
xorl
push
mov
aam
das
mov
push
or
push
xlat
xchg
inc
lahf
notb
mov
fadds
test
fmuls
lret
or
popa
decl
ljmp
adc
jmp
hlt
inc
dec
scas
popf
imul
adc
rorl
push
popf
mov
cmc
adc
aas
out
clc
incl
stc
fisttps
aas
test
pop
dec
aaa
xchg
xor
xchg
mov
sahf
shlb
arpl
fstpt
lcall
mov
jne
gs
pop
leave
push
lods
dec
clc
pusha
sar
call
and
movb
cs
loop
fstps
dec
clc
mov
out
push
les
ret
js
popa
loopne
push
icebp
fisubrs
out
nop
mov
sarl
mov
and
in
adc
mov
enter
push
lock
dec
jo
cwtl
out
aaa
incl
ss
and
lcall
cltd
lret
mov
mov
lods
mov
adc
fcomip
lcall
cmp
jns
push
pop
mov
xchg
dec
popa
clc
fs
lods
lds
in
incl
or
dec
je
cli
stos
scas
dec
loop
pop
mov
rep
test
jg
out
cwtl
lock
mov
or
fdivrl
pushl
mov
dec
pop
xor
aad
cmpsb
mov
std
fwait
test
mov
call
sbb
aaa
dec
lcall
insl
gs
push
hlt
inc
je
push
test
scas
add
outsl
lds
decl
into
out
xor
push
outsb
pop
add
dec
xchg
push
ja
leave
pop
push
or
xor
mov
arpl
mov
nop
sub
adc
shl
addb
pop
fistpl
lret
andb
pushl
enter
scas
out
sbb
xor
lret
out
xchg
push
rclb
fcomip
incl
mov
inc
mov
iret
call
xchg
dec
adc
fcompl
sub
push
fdivl
inc
leave
push
es
inc
movsl
xor
scas
ljmp
inc
call
jecxz
faddl
mov
fisubs
movsb
mov
out
lahf
inc
jo
mov
cld
cli
mov
cs
dec
fimuls
idivl
sbb
dec
mov
incl
push
clc
push
mov
mov
out
pusha
xlat
mov
or
cmp
lcall
bound
sub
jl
xor
repz
gs
sub
je
xchg
lods
mov
cmp
lods
or
adc
sbb
and
fbstp
ljmp
rcrl
add
jbe
sub
and
lcall
fwait
out
cwtl
fwait
mov
insb
lds
mov
mov
push
fs
cmpsb
mov
in
mov
lahf
dec
shll
xlat
xor
test
jae
mov
or
push
je
jg
mov
aad
adc
inc
aad
cmc
cmp
or
jl
jecxz
jmp
jmpw
and
xchg
sbb
xlat
int3
cli
frndint
ss
gs
mov
ret
ljmp
cwtl
jae
outsl
repnz
cmc
mov
cmc
ret
pop
xchg
dec
notl
loopne
nop
fcomip
ljmp
test
inc
jb
jmp
jl
jbe
adc
sub
das
pushl
jnp
xchg
pop
xor
mov
stos
xor
xor
mov
add
or
mov
out
loopne
adc
inc
adc
fcomip
lcall
push
ljmp
mov
mov
idivl
cmp
dec
lahf
mov
hlt
lcall
push
scas
lods
imul
iret
jmp
mov
fbstp
lcall
push
stos
stos
sub
jp
jbe
dec
add
sbb
test
cmp
dec
or
xchg
pop
shrb
xor
xchg
jg
xchg
jno
out
test
mov
inc
incl
rorb
popf
mov
icebp
mov
loop
xchg
in
push
and
popf
inc
jne
ljmp
lret
cld
mov
pop
xchg
adc
cmpsb
add
adc
jnp
sbb
and
iret
xor
lcall
push
jg
in
mov
pop
xchg
adcb
dec
xor
lods
aad
jg
lcall
add
loopne
xchg
imulb
mov
into
add
std
ljmp
push
cld
jmp
xor
inc
filds
ds
jg
fsubrs
jb
lock
sahf
lcall
jno
pop
xor
insb
xor
inc
clc
fsubl
mov
ds
decl
inc
dec
cmp
push
clc
adc
lock
inc
cs
sub
mov
pop
into
dec
cld
jmp
sbb
in
test
add
lock
lods
cli
das
mov
adcb
pop
mov
sbb
xchg
fsubrp
popf
aam
js
out
fwait
mov
movsb
lcall
jo
call
out
dec
cmc
sub
aad
call
fdiv
outsb
dec
add
add
xchg
inc
and
pusha
les
inc
pop
adc
nop
inc
lods
js
xor
mov
movq
cli
xor
xlat
lcall
cmp
adc
xchg
pop
into
push
das
lods
popa
imul
and
fwait
mov
repz
sbb
lcall
xor
hlt
cwtl
popf
gs
fsubl
jnp
xor
add
lock
jmp
pop
mov
shrl
rcrb
inc
pop
cltd
inc
imul
push
lret
adc
sti
sahf
fisttps
lcall
adc
andb
mov
call
inc
mov
fwait
lea
mov
push
push
mov
pop
push
lock
rorb
rcll
fbstp
jbe
into
push
out
inc
push
inc
out
xchg
push
dec
xchg
jnp
mov
adc
mov
mov
std
lods
int
cmp
pop
fs
scas
mov
mov
inc
jae
aam
stos
jg
jmp
xchg
sub
sub
es
iret
mov
pop
test
lds
int3
es
insb
loopne
popl
pop
pusha
cmpsb
jecxz
mov
inc
loop
pop
dec
imul
imul
icebp
add
xchg
xchg
push
jae
decl
and
cmp
pop
xlat
mov
mov
insb
lcall
imul
push
ja
or
dec
mov
call
adc
xor
stos
outsb
rclb
cmc
mov
dec
fdivl
nop
jge
and
outsl
jecxz
incl
js
loop
lret
sbb
add
pop
sbbb
dec
inc
in
add
ret
das
xchg
xchg
jns
scas
sbb
lahf
jns
push
mov
bound
jle
sbb
cmp
mov
negb
xchg
jmp
cmp
mov
ss
sub
ror
sub
loop
outsl
call
dec
jg
in
jle
xchg
mov
or
xchg
lea
push
xchg
mov
cmp
sub
pushl
cltd
lods
out
ljmp
out
je
fwait
insl
dec
sub
pusha
rcrl
mov
add
call
mov
rcrl
repnz
mov
cs
mov
mov
mov
out
ss
cwtl
xchg
decl
ss
ds
gs
es
aam
outsl
jnp,pn
popa
push
pop
push
push
mov
pop
movsl
pop
sbb
or
add
pop
xor
push
sbb
mov
cli
pushl
push
sub
adcl
outsl
sti
and
repnz
aaa
jmp
sbb
mov
mov
sub
shll
orb
fistpll
add
mov
push
jo
fisttpl
adc
pop
sub
pusha
pop
push
push
sti
xor
jmp
mov
jmp
or
mov
je
xlat
test
sbb
insb
push
xchg
repnz
incl
cld
rorl
scas
js
les
push
push
and
pop
hlt
lcall
ret
pushf
dec
jae
push
fcmovnbe
mov
inc
mov
cmp
lea
outsl
jmp
sbb
mov
std
and
insl
cwtl
sbb
jns
lcall
cld
jmp
fs
cmp
push
rcrb
jbe
les
dec
mov
sbb
dec
adc
test
repz
mov
call
dec
mov
mov
loope
movsb
cld
ljmp
or
decl
pop
out
in
cmp
lock
pushf
ss
jbe
pop
out
jl
ljmp
pushf
adc
imulb
adc
daa
pop
mov
scas
jbe,pt
daa
pop
push
popa
cmp
push
rcr
popf
add
adc
movsl
ja
repz
push
out
mov
push
inc
lods
inc
dec
ds
testl
mov
and
dec
lods
sub
jl
add
pop
mov
insl
fdivs
pop
cmp
icebp
mov
pusha
lar
xchg
add
push
jg
inc
mov
mov
daa
xlat
ficoml
enter
loop
fdivr
incl
aaa
push
mov
ja
inc
jb
inc
xor
sbb
mov
xchg
jne
sub
incl
mov
jnp
mov
inc
sbb
call
dec
sbb
repz
mov
jle
mov
stos
sbb
fidivs
sbb
das
xchg
popf
cmp
or
decl
xchg
lcall
or
sub
push
jle
rcll
cs
stos
pop
lock
incl
and
push
bound
adc
rolb
xchg
int
lcall
in
cmc
pusha
das
sub
mov
push
es
addr16
adc
out
call
rol
pop
es
pop
arpl
sbb
test
aad
and
int
xor
int3
loop
fsubs
call
incl
aaa
adc
push
cmp
add
xchg
inc
xchg
mov
incl
mov
cs
pop
call
mov
adc
pop
mov
shl
mov
ljmp
adc
test
push
mov
out
inc
mov
lcall
jae
sub
lahf
sarb
insl
or
adc
js
xor
mov
lcall
out
inc
xchg
and
xchg
dec
mov
sbb
xchg
repnz
cmpsl
adc
push
inc
inc
mov
pusha
xchg
inc
dec
or
sub
lock
push
mov
pop
std
aad
push
ror
leave
sbb
nop
rclb
jae
rclb
ljmp
int3
sub
cs
fistpl
scas
dec
pop
ret
lcall
out
or
cmc
cli
fs
xor
mov
xor
repz
xor
scas
sbb
push
stos
jo
add
pop
cmpsb
xchg
jmp
cmp
cmpb
mov
mov
jg
push
test
and
push
mov
arpl
dec
ljmp
test
mov
xchg
jmp
in
jmp
jbe
push
cli
das
clc
incl
gs
fimuls
pop
stos
andb
and
pop
mov
or
pop
arpl
and
jg
ret
mov
ljmp
mov
fbstp
mov
clc
popl
fstl
xacquire
mov
mov
sbb
ja
jl
mov
or
pop
mov
jae
jp
cmp
lock
arpl
push
ret
xchg
add
movl
ljmp
push
mov
or
cld
mov
lret
inc
mov
lods
int3
mov
and
fisttps
lcall
movl
orb
sbb
imull
test
int3
lret
adc
xlat
dec
aam
mov
push
dec
mov
dec
inc
or
xchg
lahf
ret
or
test
jg
mov
fdivs
pop
lds
out
and
push
rol
xchg
mov
orb
pop
mov
inc
mov
insl
lret
inc
push
mov
loop
xor
test
cmp
in
lahf
clc
jae
push
mov
jb
dec
push
ret
jns
ljmp
mov
push
fldl
ds
sub
and
push
jno
and
pushl
fsub
xchg
repnz
push
pop
in
lock
mov
test
decl
shlb
xchg
mov
jl
cli
jecxz
sbb
xchg
mulb
loop
xchg
mov
add
lcall
pop
jl
or
ljmp
pushf
push
pop
pop
cmp
adc
mov
fcmovbe
subb
jns
lcall
lcall
cmpb
jb
jp
mov
lock
xchg
iret
mov
push
mov
jmp
pop
sbb
leave
xor
daa
xor
mov
popa
add
filds
loope
pop
in
jle
sbb
or
cwtl
jns
in
js
cld
or
sub
js
pop
in
add
lret
xor
mov
push
mov
and
jg
jmp
cwtl
in
adc
push
push
sub
xor
jg,pt
decl
mov
and
mov
and
lahf
push
ret
inc
das
test
test
call
or
rol
fnstcw
or
call
sbb
jbe
gs
adc
int
mov
xchg
test
dec
dec
dec
mov
and
in
fisttpll
xor
cld
jb
xchg
lahf
xor
call
adc
sub
mov
push
mov
cmpl
rcl
and
dec
xlat
push
dec
dec
jmp
lods
add
lods
shlb
or
inc
mov
or
push
pushf
xor
sbb
sbb
mov
cmp
or
jge
jne
dec
mov
stos
xor
inc
test
dec
mov
xor
incl
xchg
call
mov
fcoms
cltd
std
inc
push
mov
decl
rclb
xchg
xchg
jnp
sub
mov
or
leave
push
or
sub
xlat
pop
ja
lcall
outsl
mov
dec
xchg
and
nop
dec
cmp
stos
cmpsl
dec
out
int
ljmp
mov
adc
pushl
inc
int
loopne
adc
dec
and
mov
cmc
leave
mov
inc
lock
push
idivb
cmp
push
mov
cmp
lret
cmp
clc
out
cmp
pop
adc
jecxz
lea
or
cmp
dec
call
sub
jb
or
xor
adc
ja
std
push
fidivl
and
lcall
push
repz
push
fidivrs
loope
das
and
hlt
int3
bound
or
enter
cmp
pop
jg
sub
subl
push
ja
iret
jnp
in
cmc
inc
mov
pop
loopne
mov
push
jp
jb
or
cmpsb
int3
sbb
mov
incl
incl
dec
xor
imul
repz
push
addb
sub
lcall
push
mov
sub
mov
dec
test
mov
repz
stos
jge
imul
ret
mov
fmul
fimull
and
clc
lcall
adc
push
sbb
sub
out
pop
push
in
cmp
push
leave
out
mov
popa
push
negl
pusha
cwtl
push
mov
sbb
jge
nop
test
push
dec
mov
hlt
fadds
jns
iret
decl
loopne
push
lea
sub
sub
je
add
mov
fisttpl
addb
jnp
enter
dec
xchg
jne
das
or
cmc
dec
or
jo
add
or
xor
mov
cld
inc
das
inc
addl
dec
jne
cmp
sbbb
or
mov
inc
imul
cmp
shl
loopne
cltd
rcrl
ljmp
lret
decl
leave
mov
and
adc
mov
add
ret
jl
jmp
out
cld
packssdw
data16
rorl
aam
inc
add
mov
dec
shrl
sar
decl
repz
inc
pop
rcl
cmc
cmp
push
xchg
pusha
insl
outsb
pop
adc
cmp
and
int3
fwait
enter
and
sbb
and
cwtl
jmp
push
ja
fadds
mov
mov
mov
jle
cmpsb
decb
dec
outsb
pop
push
decb
pushl
xchg
add
rol
gs
stos
jg
cmc
lahf
pop
push
jb
push
aam
add
in
jmp
jmp
dec
add
add
cmc
lods
aam
push
jp
nop
push
adc
cmp
push
push
bound
mov
pop
stos
ret
ljmp
mov
sbb
call
mov
gs
push
adc
push
pop
cmpsl
imul
decl
or
and
fistps
mov
addr16
pushf
or
popl
leave
xor
jmp
pop
pop
push
add
stc
cmp
fstl
xchg
mov
push
push
xchg
gs
cltd
mov
call
or
xchg
shlb
dec
scas
push
cmp
loope
xchg
hlt
xchg
adc
je
jmp
jmp
dec
and
ss
add
test
lret
pushf
pop
sub
dec
sahf
sar
jmp
es
mov
lret
outsb
mov
adc
or
test
jmp
std
in
push
pop
jae
dec
mov
xor
push
add
pusha
mov
ljmp
ss
push
pop
and
xor
sbb
mov
cld
lods
clc
jmp
lret
loop
mov
aas
inc
xlat
xchg
cmpsb
shlb
adc
imul
ja
call
mov
in
cmpsb
mov
xor
xlat
xchg
cld
jo
mov
xchg
sub
fucomp
hlt
cmpsb
pusha
mov
clc
mov
pop
cvttps2pi
int3
sub
imul
xchg
fsubl
inc
aad
rcrb
mov
in
std
cmp
jns
lret
mov
sbb
insl
push
and
fistpl
loopne
sub
fmuls
std
aam
and
mov
adc
in
lods
mov
lea
mov
movsb
xor
loop
adc
pop
andb
lods
mov
in
scas
insb
mov
mov
filds
sbb
sahf
pop
shlb
daa
stc
jbe
and
xlat
sbb
pop
call
std
xchg
jne
rorb
rclb
lds
je
or
lcall
cld
lods
pop
add
int3
pop
and
push
aad
shll
decl
scas
inc
xor
jnp
imull
lret
in
subb
cld
and
pop
fnstsw
incl
call
inc
mov
in
add
bound
div
jns
lcall
inc
jp
mov
push
rorb
lahf
adc
mov
cs
fldt
dec
mov
and
pushf
dec
out
mov
ljmp
shr
psubq
int3
negb
ljmp
dec
adc
lret
mov
fidivrl
jl
xor
pop
xor
cmpl
daa
or
lret
imul
sti
fistpll
dec
mov
mov
cmp
push
enter
popa
cmp
aam
repnz
add
xor
lcall
insb
cmc
sbb
pop
sysenter
mov
in
cmp
jno
out
or
pop
dec
or
das
testl
cmc
inc
jns
jmp
gs
adc
add
pop
out
lcall
lcall
mov
enter
je
pop
lods
or
and
adc
ljmp
cli
into
lock
cmp
iret
pushw
sbb
xor
cmp
mov
rcrb
ljmp
and
jle
data16
mov
mov
jb
sti
adc
aas
dec
push
jg
jns
pop
mov
cmpsb
sub
or
loope
and
pushf
jae
popa
push
loopne
cmc
stos
cltd
sub
cmp
stos
sub
mov
fucomi
ljmp
cmc
pop
and
mov
out
mov
lret
jmp
aam
out
mov
and
das
sar
jl
jno
idivb
iret
cmpl
mov
sbb
call
cld
inc
clc
lcall
add
xchg
sbb
jbe
or
jle
std
mov
repz
fnstcw
repnz
pop
lret
mull
lea
inc
and
cmp
pop
sub
aas
mov
pop
sub
add
mov
mov
and
pop
push
cmp
push
xlat
stos
pushf
mov
push
roll
ljmp
neg
subb
stos
xor
ljmp
je
push
cmp
pop
mov
inc
test
inc
mov
lcall
popf
out
jmp
lock
fcoms
divb
adc
and
dec
pop
cmpsl
or
add
xor
mov
mov
jl
jbe
or
roll
stos
xchg
lahf
mov
outsl
cli
mov
popl
xchg
sbb
nop/reserved
mov
fisttpll
and
bound
fcomip
pushl
push
xlat
adc
pop
jmp
rep
movsl
fistpll
jge
lcall
call
lret
aam
add
mov
test
sbb
dec
in
fstpl
sbb
mov
mov
sub
aam
bound
push
sti
dec
mov
jns
lds
cmp
daa
cmp
pushf
popa
inc
adc
mov
mull
iret
fdiv
decl
stc
mov
mov
mov
sub
sar
xlat
mov
cmp
sub
mov
sbb
shr
mov
add
push
jge
in
ja
adc
out
dec
or
cmp
jmp
imul
dec
add
pop
xor
mov
sbb
sbb
or
push
mov
ljmp
jns
xchg
xor
sahf
mov
push
dec
js
mov
sbbb
adc
call
dec
sub
xchg
ljmp
fldenv
jg
mov
push
test
mov
xchg
out
std
and
push
mov
negl
mov
jno
push
jge
dec
sbb
mov
loopne
mov
inc
push
and
dec
incl
outsb
jae
jae
out
lock
loope
adc
lret
push
cli
push
mov
ss
ljmp
sub
adc
andb
clc
cmp
jbe
inc
jmp
push
addb
scas
jmp
push
inc
stos
inc
arpl
push
lcall
push
scas
push
out
cli
call
sub
addr16
mov
fcmovu
in
imul
icebp
dec
shl
jg
fstpl
pushf
stc
jl
inc
inc
lods
filds
mov
jo
cmp
loope
in
imul
inc
or
es
fwait
ljmp
incl
dec
push
pop
or
push
mov
jge
sbb
pushf
or
xor
decl
lahf
popf
push
pop
lret
mov
mov
daa
repz
scas
sub
mov
cmpsl
out
cld
icebp
xchg
pop
ja
pop
je
testl
pushf
test
stc
rorl
call
mov
push
fcompl
inc
inc
je
es
icebp
adc
jl
jmp
mov
xor
insl
cld
call
shl
les
jb
subl
out
lea
insl
push
mov
dec
push
incl
push
and
mov
push
mov
fistpl
xlat
fbld
mov
jb
push
stc
jle
ljmp
adc
outsl
jno
adc
pop
jl
stc
les
std
pushl
movsb
mov
aaa
push
mov
pop
xchg
fldl
ljmp
fs
pop
test
add
adc
mov
ss
adcl
pop
scas
leave
and
sub
dec
mov
arpl
movsl
lds
push
aad
dec
pop
gs
jg
and
cmp
sub
mov
xchg
pushl
bound
xchg
jg
rorb
movsb
mov
arpl
decl
sbb
insb
adc
inc
mov
rorb
push
incl
cwtl
insb
mov
inc
clc
aam
adcl
mov
mov
mov
rclb
int3
inc
mov
mov
repz
mov
jbe
mov
nop
les
insl
dec
sbb
cs
aad
icebp
dec
push
xor
jmp
fcomip
in
pop
lahf
add
dec
addr16
jbe
mov
scas
pop
sub
es
jno
jno
outsl
add
fdivrl
mov
pusha
xor
fcompl
cmpsl
stc
dec
out
cld
jbe
adc
pop
into
loop
cmp
outsl
aad
ljmp
aad
push
hlt
fstpl
mov
mov
enter
pushl
xchg
ds
pop
mov
ss
lcall
lret
insl
xchg
data16
push
mov
sub
stos
inc
jnp
out
stos
mov
out
mov
fstps
jg
ljmp
push
pusha
pop
cmp
and
mov
outsl
test
out
ljmp
pop
dec
jg
jl
cltd
lock
sti
out
sub
dec
sub
or
fwait
push
rol
or
jnp
je
mov
decl
fldlg2
mov
popa
mov
mov
pop
lds
xorb
in
cli
sbb
pop
insl
int
lea
push
inc
inc
sbb
sbb
ljmp
insb
or
and
pop
push
sbb
jp
ret
cltd
fnsave
dec
cmp
push
ss
push
icebp
or
xchg
push
lock
es
sar
ja
outsb
cmp
mov
decl
xor
push
mov
jle
shl
lret
outsb
mov
sub
push
div
xor
mov
leave
pop
mov
insl
out
cmp
insb
outsb
insl
cmp
cmp
movsb
js
jb
int
mov
cmp
pop
push
lcall
pushl
push
push
pusha
inc
mov
pop
lea
jmp
jmp
pusha
fcmovne
inc
cmp
data16
loopne
lcall
sub
sti
cwtl
fs
xchg
dec
pushf
fistpl
or
push
enter
xor
dec
adc
sti
gs
and
dec
cmp
cmpl
push
js
pop
mov
dec
shrb
in
cmp
inc
in
lret
xor
in
lea
sbb
and
jle
lock
decl
jecxz
cli
das
jg
fs
pop
incl
lock
or
subb
aad
or
xchg
pop
ds
mov
dec
data16
lcall
sub
lcall
mov
ljmp
sub
fimuls
and
pop
push
cs
adc
sar
push
call
iret
les
mov
fnstenv
icebp
aaa
cld
push
outsl
pop
sti
cmp
push
out
sahf
pop
mov
js
out
xor
and
xlat
insl
js
mov
pop
mov
call
adc
aas
and
ret
fmulp
cmp
icebp
mov
cmpsl
les
in
push
jle
sbb
fwait
pop
fld1
cmp
mov
decl
pop
cld
call
sub
fwait
or
inc
mov
aas
xchg
mov
inc
and
clc
fcmovb
decl
std
pop
cmc
cltd
aaa
call
fstpl
xchg
ret
mov
mov
das
mov
and
ja
pop
std
mov
idivl
testb
xchg
jmp
inc
ljmp
push
sbb
mov
dec
mov
sar
push
cmp
ljmp
pop
xchg
pop
rcrl
sbbl
and
add
popa
sub
subb
xchg
les
lock
test
dec
ret
inc
in
scas
incl
cmpsl
mov
add
sbbb
pushf
clc
imul
jecxz
mov
jg
ljmp
push
jo
into
fmull
ss
in
iret
fcmovnbe
ffree
aad
and
imul
push
jp
inc
mov
xchg
xor
ljmp
add
in
or
push
and
insl
sahf
inc
cmpsl
decb
or
aaa
add
inc
clc
js
cli
mov
cmp
and
adc
jnp
cli
inc
cmc
and
call
shrb
or
sub
nop
pop
aas
mov
int
dec
cmp
pop
pop
inc
mov
lds
fstpl
movsl
and
jl
xchg
and
clc
push
popa
out
add
jmp
or
push
mov
fisubrl
and
sar
jmp
adc
mov
sbb
jbe
fimull
adc
and
cmp
sbb
loopne
clc
jg
test
sub
cmc
popf
mov
sbb
call
loopne
inc
data16
jb
push
inc
fists
addr16
mov
mov
push
pop
add
lahf
lods
rcl
pop
inc
inc
adc
or
mov
fldl
xor
sub
xchg
lcall
lcall
or
mov
rcll
in
iret
pushf
jo
pop
inc
sti
movsb
cmp
incl
xlat
mov
pop
mov
cmovle
jno
mov
inc
jmp
xor
lock
std
test
mov
jb
lahf
popf
mov
icebp
add
or
cmp
pop
push
repz
pop
movsl
mov
insb
add
xchg
mov
adc
or
jecxz
icebp
mov
sbb
lods
jl
xor
xor
aad
js
pop
rcrl
stos
imul
add
dec
into
push
push
stos
fs
mov
mov
pop
or
add
lods
fsubl
nop
pop
dec
int
aad
mov
lcall
inc
ds
push
bound
lods
mov
out
outsl
xchg
outsl
fisubrl
jg
sbb
popa
imul
sahf
mov
fstpt
push
mov
jl
repz
or
push
pop
aaa
addl
jg
push
andb
pop
inc
pushf
xor
inc
out
lret
jmp
jmp
push
ljmp
fcoms
dec
pop
jne
cmp
adc
add
stos
mov
rcrb
incb
sub
dec
leave
outsb
push
inc
call
dec
dec
xchg
mov
das
sahf
adc
stc
jg
jmp
enter
mov
adc
push
and
sahf
push
mov
jmp
jge
cvtdq2ps
sub
rolb
dec
fists
mov
test
xchg
js
sti
cltd
ss
incl
lret
xchg
cwtd
dec
push
inc
int
cmp
arpl
xor
incl
jp
push
stc
mov
arpl
xor
daa
mov
outsl
out
out
sbb
ljmp
mov
lret
pop
mov
pop
pop
pop
loope
adc
dec
sbb
rcll
dec
jge
rcll
push
add
lcall
and
bound
add
pop
xchg
loopne
cmp
ljmp
addr16
enter
push
cmp
inc
and
inc
iret
mov
dec
dec
sbb
add
adc
outsb
xchg
out
adc
loop
push
mov
int
pop
pushl
js
outsb
add
or
fisttps
mov
in
dec
adc
sbb
cmp
ljmp
icebp
xlat
xor
pop
mov
test
sub
add
or
jl
dec
lret
xor
xor
repz
add
sarl
push
sub
mov
mov
je
jae
pop
mov
pushl
dec
jge
in
orl
mov
push
clc
fsubrl
mov
ja
sbb
jno
incl
fcomi
sbb
fs
jo
outsb
jge,pt
sbb
mov
inc
mov
repz
sar
jmp
add
cs
ds
in
dec
sub
inc
es
hlt
dec
cmp
fidivs
cld
mov
pop
dec
sub
push
mov
pusha
out
cmpsb
adc
jg
xchg
cmp
mov
xchg
dec
add
add
or
jecxz
pop
out
loope
jno
test
push
sarl
fcomip
out
cli
loop
nop
adc
divl
and
mov
mov
dec
sbb
jg
incl
lea
lahf
iret
mov
xchg
mov
push
rcll
stos
lcall
lea
lds
sub
loop
aas
cli
insl
sbb
lcall
mov
dec
ds
add
push
sbb
xor
and
mov
jnp
mov
testl
leave
add
dec
leave
push
sahf
lea
inc
sbb
lcall
std
pop
push
fsub
lods
test
jp
xchg
fstpt
add
pop
into
call
cmp
ds
inc
aam
or
in
movsb
lds
or
cmpsb
pop
dec
rcr
mov
or
pusha
mov
movsb
jecxz
pushf
icebp
scas
push
jno
fsubrp
pop
sbb
movsb
hlt
call
xchg
sarl
mov
inc
movsb
cmp
fwait
sarl
addr16
push
dec
dec
and
scas
popa
inc
pop
dec
push
jne
sahf
mov
and
movsl
sub
sub
ja
lcall
pop
mov
xchg
sbb
push
xor
pop
cwtl
xchg
scas
data16
cmp
inc
into
or
dec
lods
adc
or
mov
push
jno
inc
fnstsw
push
notl
clc
push
pop
loopne
add
jmp
mov
sbb
mov
inc
inc
call
mul
mov
and
adc
jns
pop
int3
mov
jne
aad
xor
cmp
jle
shrl
dec
pusha
add
call
inc
inc
xlat
lret
fisubrl
mov
inc
jg
push
std
pop
jmp
mov
cli
loop
mov
les
sbb
jp
out
jg
int3
cmp
call
daa
mov
stos
jns
outsl
test
mov
push
sub
xor
xchg
dec
pushf
cs
xchg
add
movsl
iret
sbb
test
clc
rcrb
orl
popw
decl
mov
xchg
mov
into
rcll
mov
sbb
mov
in
inc
lcall
loopne
not
stos
push
rclb
test
mov
sti
pop
arpl
icebp
leave
rcrb
jae
jbe
pop
lock
adc
xor
stos
push
mov
add
loopne
mov
add
inc
rcrb
or
push
and
mov
test
pushl
or
cmpsb
sti
sar
jg
sbb
leave
addr16
pop
gs
sbb
decl
adc
xchg
or
xchg
clc
dec
ret
in
cmp
pop
add
mov
jmp
std
popf
adc
inc
fnstenv
push
jnp
inc
cmp
inc
xchg
sub
fisttpll
sbbb
decb
inc
adc
sbb
bound
jge
out
clc
jmp
xor
xor
imul
and
lret
aaa
subl
inc
mov
jge
dec
ret
inc
jne
pop
pop
hlt
stos
mov
inc
mov
addr16
mov
inc
jbe
xor
decl
mov
lret
gs
ds
nop
add
shll
mov
stc
or
fcmovnu
push
xor
ror
push
fwait
aam
test
cmp
mov
incl
mov
cmp
fcmovnbe
jle
shrb
imul
movsl
push
ss
jp
repnz
jmp
rclb
aad
push
pop
mov
lcall
sub
xor
mov
popa
test
xor
inc
movsl
and
repnz
mov
test
jmp
xchg
sub
rcrl
xchg
mov
pop
and
inc
das
int
lcall
adc
or
mov
mov
bound
enter
fsubr
iret
ss
scas
push
pop
and
sub
cmp
pop
ja
cmpsb
dec
push
cld
jg
jmp
popf
rcrb
dec
fcmovnbe
push
cli
cmpsl
mov
in
jns
scas
xchg
lahf
cli
adc
rorb
out
jg
dec
xchg
pop
add
and
lcall
sub
mov
aaa
out
call
mov
mov
mov
xchg
inc
lods
roll
mov
mov
xchg
mov
rolb
je
lock
sbb
loope
fldcw
push
fdivr
incl
mov
into
mov
aad
jl
cmpsl
xlat
mov
lcall
call
pop
loope
popf
cmp
leave
adc
xchg
movsl
jb
dec
mov
jmp
cmp
outsb
mov
lds
out
cmp
jb
add
dec
leave
mov
mov
jb
push
addb
mov
fnstsw
mov
decl
out
aas
call
orb
xlat
test
xor
mov
fcomp
pop
mov
repnz
ljmp
or
js
add
ror
shrb
or
in
jmp
push
jg
ficomps
icebp
cmp
push
push
push
lds
xchg
ret
in
js
popa
fsubs
out
pop
jno
fwait
out
test
jp
mov
gs
xor
ljmp
subb
incl
lcall
into
jecxz
ret
push
or
xchg
and
push
pushl
adc
jo
jbe
mov
sbb
adc
ljmp
xchg
lods
sbb
mov
js
push
imul
imul
add
jmp
std
xchg
add
leave
jns
inc
dec
mov
gs
je
in
mov
lock
jmp
call
adc
in
je
mov
xor
jge
enter
push
outsl
add
add
fisttpl
test
lcall
push
push
out
cmp
and
jnp
jle
inc
xor
cmp
or
sarl
mov
cmp
mov
jg
jbe
fs
popf
outsl
push
cmp
jle
mov
inc
sarb
xor
nop
repz
in
aam
cmp
ljmp
xchg
mov
fs
roll
lahf
bound
enter
mov
mov
lods
adc
aad
mov
repz
or
sub
out
jne,pt
addb
test
jp
out
mov
xchg
aaa
sbb
mov
arpl
inc
decl
lret
inc
mov
hlt
jno
add
and
test
sbb
and
cmp
pop
mov
mov
push
cmp
mov
cmp
popa
cs
pop
xchg
scas
aam
lahf
push
sbb
scas
pushl
cmp
movsb
adc
push
jmp
dec
out
fcomip
pop
mov
or
xchg
push
push
xlat
fs
test
and
adc
das
xor
loopne
or
leave
pop
sbb
sub
xchg
test
jne
sahf
pop
sbb
dec
jno
pop
in
gs
stos
xchg
jns
loop
push
or
cmp
repnz
rclb
inc
adc
pushl
incl
xor
jmp
lret
mov
fimull
insl
adc
jle
mov
xchg
out
shrl
add
das
shrb
stos
adc
inc
sub
jo
ljmp
push
mov
lcall
sub
fisttpll
in
int3
mov
pop
pop
push
les
adc
adc
xchg
or
dec
incl
cmp
mov
lds
or
aaa
sub
and
mov
in
scas
sahf
rol
test
cmp
nop
andb
repz
outsl
adc
shrl
call
das
mov
and
out
int3
imul
mov
cmp
stos
incl
loope
mov
pop
adc
in
jns
enter
ja
mov
pushl
jecxz
adcl
dec
insl
inc
jecxz
out
jb
cmp
or
dec
test
mov
sub
divb
xor
movsb
into
sahf
or
sub
pushl
loop
fisttpll
cmpb
outsl
in
jbe
clc
xlat
ds
lods
in
push
pushl
clc
jmp
bound
repz
shlb
fisubrl
cwtl
push
sub
popf
lock
les
test
popa
testb
jbe
cltd
je
mov
cld
inc
fs
ret
pop
int3
sahf
popf
and
xlat
pop
aam
ror
sti
insl
push
xor
xchg
push
sbb
or
fsqrt
leave
dec
scas
lcall
jno
fcmovu
mov
mov
cli
incl
pop
cmc
push
dec
loopne
mov
push
sub
push
mov
call
mov
or
xchg
push
enter
lock
scas
mov
loopne
test
out
clc
in
stc
and
es
or
loop
fldenv
daa
iret
xchg
ret
scas
fisttps
loop
ds
mov
int
jg
pop
clc
incl
jp
xchg
jmp
leave
movsb
mulb
loope
cltd
adc
or
lock
jne
inc
sub
inc
lret
sub
inc
pop
adc
pop
test
call
mov
sub
out
xchg
jno
mov
out
xchg
sub
cmp
clc
lcall
jp
bound
fsubrs
dec
mov
dec
jecxz
ljmp
rcl
mov
out
pop
or
push
lret
out
fdivrs
mov
ljmp
mov
rorb
push
outsb
push
and
sub
imul
sahf
orl
dec
ljmp
dec
lret
fst
loope
les
sbb
mov
xchg
sbb
movsb
aad
ljmp
push
add
sbb
push
cmpsl
scas
xchg
ljmp
das
add
cmc
sub
daa
aaa
pop
fiadds
cmp
rolb
das
xchg
clc
gs
lea
push
lcall
cld
pop
inc
inc
inc
pop
and
test
push
call
jl
cmp
in
mov
or
fwait
outsb
or
cmpsb
pop
iret
xor
cmpb
pop
mov
add
pop
aam
push
and
out
dec
xlat
push
jl
mov
in
cmpsl
xchg
cld
mov
pop
call
loope
cmpl
pusha
jbe
sbb
xor
decl
and
push
push
sahf
mov
mov
and
xor
das
call
and
movsb
add
sbb
mov
cs
mov
ljmp
shrb
pop
jecxz
stos
rorl
dec
cmc
jno
scas
xchg
xchg
sar
and
push
std
jmp
movsb
aaa
addr16
add
testl
xchg
mov
jg
dec
xor
test
adc
sbb
dec
cmp
ret
test
jmp
es
into
or
cld
fs
mov
mov
out
adc
mov
imul
jp
enter
nop
sbb
push
rorl
pop
iret
test
mov
add
rorl
call
cld
sub
pop
cmpsb
and
rcrb
cmp
inc
mov
cmp
sub
xchg
in
imul
loope
sbb
and
aas
mov
dec
sub
inc
xchg
loope
mov
je
mov
sbb
cmpsl
adc
lcall
push
test
jge
mov
or
and
or
mov
mov
decl
mov
insb
ret
jg
fstps
xlat
pop
dec
cmpl
movsb
cmpsb
out
addr16
fistl
and
mov
jo
push
xorb
mov
fdivr
cmp
loopne
push
out
jmp
push
push
mov
loop
or
lea
xchg
fistpl
lea
and
mov
adc
shll
inc
sub
pop
and
stos
mov
lret
jmp
add
pushl
and
xor
je
sahf
pop
std
mov
ja
lods
mov
mov
adc
fdiv
mov
movsl
sub
sbb
cmp
xchg
insl
push
lret
pop
stos
mov
mov
lahf
fwait
adc
push
mov
add
adc
add
fdivl
jb
test
inc
dec
mov
mov
pop
je
scas
rol
sub
xor
out
notb
jae
pushl
push
push
inc
lret
cld
dec
lret
inc
scas
xlat
adc
inc
or
aam
cmp
enter
lcall
jb
rcll
and
sbb
xlat
pop
mov
add
and
in
rorl
cmpsb
pushl
ds
test
test
dec
int
pop
fldcw
adc
lock
xchg
ret
jo
xor
or
jbe
jl
pop
mov
push
ds
jnp
jp
data16
scas
ss
mov
orb
js
jb
cmpb
dec
inc
xchg
mov
adc
jecxz
jno
push
and
call
sbb
leave
in
in
sub
and
sub
mov
mov
repz
roll
imul
push
icebp
test
push
hlt
mov
xorb
cli
inc
ljmp
or
sarb
jbe
adc
adc
ljmp
jge
movsb
jmp
push
icebp
in
bnd
imulb
xchg
push
imul
mov
iret
xor
cltd
decl
std
push
and
mov
cmpsb
movsb
mov
push
bound
mov
and
sbbl
sbb
mov
cmp
sti
and
cmp
loope
incl
push
add
sub
ret
insl
add
popf
cltd
out
or
dec
sti
adc
sar
jmp
pop
pop
scas
pop
cmpsl
pusha
add
mov
out
enter
daa
jmp
fisttpll
jg
pop
xor
shll
inc
push
scas
push
dec
and
jl
push
mov
xor
pushl
sbb
cmpsb
nop
sbb
fwait
iret
add
inc
mov
sbbl
shrb
jno
inc
and
ss
scas
les
sbb
mov
shl
ss
andl
lcall
addl
jnp
out
sub
push
push
add
test
mov
jno
movsl
and
les
xor
jmp
push
fadds
lea
mov
test
push
inc
sbb
adc
dec
and
call
or
ds
fisubs
int3
push
cmp
xchg
mov
ds
xor
lcall
mov
sub
cs
push
sbb
adc
int
push
mov
in
sub
out
std
lcall
adc
pop
jmp
sbb
xor
lods
gs
adc
aad
push
test
pop
ljmp
adc
lret
mov
cmp
cld
or
mov
incl
jmp
leave
imul
mov
dec
movsl
leave
sbb
test
xchg
call
aad
fimull
ljmp
insb
xchg
xor
xor
jmp
mov
sarb
jns
test
push
mov
jb
jae
stos
cld
sarb
decl
addb
pushf
and
inc
call
lds
daa
mov
imul
cmp
loop
rcrl
div
pop
ficoml
shll
xchg
fildll
ljmp
jmp
pop
add
fnsave
mov
adc
dec
cltd
fldl2t
or
pop
push
cmp
icebp
pushl
sbb
sarl
fs
loop
ljmp
int3
fidivs
dec
xorl
xchg
mov
push
test
test
decl
adc
xchg
push
xchg
testl
xor
push
jo
ret
jecxz
cmpsb
insb
ljmp
cmp
rcll
inc
cwtl
mov
ret
push
ss
inc
bound
fcompl
jmp
push
call
or
and
or
shl
lahf
dec
int3
xor
out
xchg
insl
sub
push
jbe
pop
in
aam
mov
imul
add
cs
std
call
mov
fiadds
fwait
loop
lods
add
inc
adcb
loope
sbb
sbbb
cmp
sar
push
cld
adc
xchg
xchg
dec
test
sahf
add
jno
mov
lcall
ljmp
mov
cmp
in
sti
sbb
rcrb
or
jge
test
lods
test
inc
mov
xchg
setnp
int
aam
in
leave
mov
dec
add
decl
in
adc
cmp
stos
rclb
fistpll
out
xchg
dec
jl
dec
cmc
mov
mov
lcall
lret
inc
jg
dec
aad
xchg
pop
out
lahf
cmp
pop
filds
inc
daa
ljmp
dec
test
bound
mov
or
aas
add
fistl
ja
jg
ja
xor
sbb
cmp
ljmp
scas
pop
and
adc
shr
aas
call
jmp
out
mov
rorb
ds
cltd
jne
ja
jmp
xchg
ljmp
xchg
lret
divl
mov
jmp
or
mov
push
jecxz
popf
cmp
xchg
aas
cmp
loop
decl
into
pop
lock
jns
cmp
sbb
cli
cs
repz
mov
push
push
push
sub
and
inc
lods
in
je
or
and
push
les
fildl
fdivr
stc
adcl
inc
lea
clc
pop
xor
mov
rcll
mov
jmp
lcall
movsb
sub
adc
inc
dec
sbb
pop
sub
mov
in
mov
cmp
gs
call
and
scas
sub
daa
dec
and
or
das
stos
add
pushl
inc
lcall
jb
sbb
xchg
inc
cmc
inc
ret
test
data16
mov
mov
cmp
cmpsl
mov
add
in
pushf
jmp
mov
hlt
popf
fisttps
test
add
jp
mov
bound
clc
addr16
sub
cmp
ljmp
pop
inc
adc
cmp
div
push
call
adc
lcall
or
xor
test
call
cmp
cmp
pop
mov
aas
mov
in
call
push
add
push
sub
and
mov
jge
in
pushl
adc
and
jp
cld
xchg
lret
jge
sub
in
fsubs
push
clc
pop
insl
mov
xchg
pop
pop
decl
repnz
js
sbb
into
int3
push
lods
sbb
fidivrl
mov
jg
fisttpll
adc
les
lahf
fistl
sub
or
fisubrs
push
shlb
call
push
aaa
fsubrs
cmpl
mov
lcall
mov
ffree
int3
scas
icebp
adc
int
mov
in
iret
pop
adc
rol
sbb
test
mov
xchg
xchg
pop
shrb
das
mov
into
push
lock
scas
test
fistps
rcrb
jge
and
daa
out
scas
stos
jb
pop
add
or
inc
daa
sbbl
dec
add
jmp
push
ss
dec
mov
mov
bswap
leave
lods
push
lods
cwtl
cmp
cmp
call
or
mov
or
jmp
in
inc
cld
mov
pop
outsb
xor
stos
loope
push
lcall
pop
inc
sub
push
imul
jle
jnp
push
int
js
insl
cmpsb
inc
testb
pushl
or
pop
loope
cmp
xlat
mov
add
cmp
aad
dec
popa
sbb
jo
mov
jl
ficompl
cmp
jns
fcomip
mov
lock
imul
adc
xor
dec
lcall
shrb
or
loop
mov
mov
inc
pushl
dec
iret
jp
cmpsl
xor
dec
fs
pop
pop
inc
ds
shlb
fisttpl
ljmp
lret
mov
js
pop
pop
xor
dec
sti
inc
stos
fiaddl
jb
les
call
int3
in
sub
jle
mov
ds
xchg
mov
pop
jns
pop
stos
aas
inc
cwtl
cmp
lds
clc
aas
xor
addr16
and
ficompl
xor
and
nop
mov
adc
std
xor
push
sub
and
clc
pushf
lds
aam
lcall
repnz
stos
andl
add
mov
fildll
or
cmp
pushl
out
sub
shll
sbb
adc
xchg
aam
bnd
inc
pop
pop
add
jge
pop
or
push
jmp
mov
jnp
sub
push
icebp
lcall
pushl
arpl
jns
out
cmp
xchg
inc
div
and
dec
push
xchg
push
cmp
mov
in
xchg
fistpl
lea
dec
shl
and
loope
jg
fldl
js
and
out
loopne
aaa
push
push
hlt
sub
outsl
cmp
ljmp
fwait
imul
add
dec
add
or
aas
xchg
jecxz
stos
cwtl
xchg
cli
lcall
push
dec
add
xchg
fldt
mov
inc
pop
decl
jl
and
mov
lods
scas
rcll
fdivr
decl
fdivrl
mov
add
mov
dec
inc
push
mov
testl
adc
jae
test
out
out
xchg
jb
mov
outsb
push
xor
pushf
popf
cld
int3
jbe
arpl
std
jmp
cmp
jno
push
adcb
sub
lods
nop
jbe
mov
adc
mov
xchg
inc
xor
adc
scas
aas
cmp
push
push
rclb
bound
movsl
inc
call
insb
popf
movsb
adc
shr
mov
sbb
es
test
xor
incl
mov
divb
insb
subl
jmp
mov
stos
icebp
sub
test
stos
mov
dec
mov
test
enter
add
enter
int
sbb
push
decl
xlat
jmp
dec
push
cmpsl
mov
lret
jne
in
incl
cmp
mov
inc
mov
sub
cmpsl
pop
lahf
push
mov
jl
aas
clc
adc
ljmp
faddl
and
xor
xchg
push
enter
cmpb
xlat
mov
jg
xchg
mov
cwtl
arpl
clc
pop
stc
fs
sbb
lret
push
and
flds
and
jno
push
sbb
or
ljmp
xlat
pop
push
movsl
inc
repz
daa
lahf
sub
or
call
add
call
mov
ret
cs
mov
lahf
xor
dec
jno
cmp
repz
add
jmp
mov
pop
inc
fcompl
movsl
dec
incb
jle
mov
inc
xchg
cmp
inc
ss
test
lds
inc
icebp
cwtl
pop
sub
sbb
fnstsw
pcmpeqb
xchg
dec
inc
flds
testb
pop
ror
and
xchg
adcl
incb
aas
jmp
dec
adc
inc
idiv
sbb
push
add
jmp
adc
rcr
mov
pushl
rcll
test
cs
pop
inc
pop
inc
popa
shr
repz
sbb
jg
cmp
mov
lret
sub
insb
es
xchg
lock
xor
cmp
xor
sbb
jmp
stos
pop
xchg
mov
mov
idivb
inc
push
lcall
add
sbb
scas
fwait
inc
xchg
mov
call
mov
repnz
aas
cmp
out
xchg
pop
ja
pcmpgtd
inc
pop
lock
lcall
push
stos
shl
negl
call
mov
fwait
lcall
mov
loop
mov
xlat
jb
test
das
rcrb
add
cwtl
xor
and
in
rorl
aas
sbb
add
adc
cmp
scas
xchg
mov
shrl
inc
icebp
jge
sub
aaa
std
mov
adc
mov
xchg
sbb
mov
and
aad
lcall
push
lods
hlt
loope
cmp
mov
fisubl
push
dec
aam
fs
jl
mov
shrb
imul
add
lods
test
cld
mov
cltd
inc
test
dec
jle
sbb
rcrl
ljmp
daa
pushf
or
mov
jl
and
fwait
pop
mov
adc
in
add
decl
dec
imul
sahf
mov
mov
out
push
sbb
or
int3
cli
and
incl
cld
loope
mov
pop
xchg
xchg
pop
int3
gs
cmp
scas
sbb
fcomip
inc
dec
das
into
adc
xchg
inc
jle
jo
int
push
mov
pusha
in
incl
fidivl
jns
inc
xor
cmpb
pop
fwait
stc
xlat
sub
adc
mov
jns
mov
cmp
push
int
call
js
stc
lods
mov
push
not
dec
jbe
push
shlb
fistpll
inc
pushl
pop
mov
fwait
popa
xchg
lods
cs
xor
ljmp
push
xor
xor
pop
into
mov
sub
test
mov
mov
es
scas
in
dec
xchg
push
add
iret
sub
or
mov
push
jl
pushf
test
inc
out
push
je
jmp
fwait
push
iret
and
addr16
lcall
add
jmp
or
cli
movb
push
xor
lcall
mov
call
mov
rcll
cmp
shl
xor
ds
push
inc
shll
adcb
les
inc
std
lcall
xlat
and
push
push
ss
adcb
ljmp
jecxz
cmp
sbb
fiaddl
incl
imul
dec
mov
popf
lds
add
mov
mov
fisttpll
sbb
xchg
dec
clc
jmp
xchg
aam
pop
cs
nop
jecxz
xchg
push
lock
test
sub
aam
mov
movsl
test
std
jmp
fsubrs
insl
scas
jmp
cmp
inc
in
push
xchg
sbb
mov
jg
movsb
adcl
outsb
daa
jle
fwait
loop
jmp
cmpsb
sarl
fmulp
scas
cltd
push
mov
pop
sub
lock
gs
cltd
push
jg
push
dec
jg
mov
mov
dec
in
xlat
test
xor
adc
shrl
incl
stos
testl
inc
mov
adcb
sub
sub
jmp
and
mov
pop
push
sbb
daa
xchg
add
lcall
push
outsb
jo
and
and
test
inc
rcr
add
pop
inc
sbb
mov
decl
jne
dec
adc
adc
cmpsl
daa
and
adc
mov
mov
mov
ss
jmp
fs
mov
cmpsl
mov
outsl
ja
push
out
add
leave
test
subl
and
in
xchg
pushl
push
mov
rorb
dec
cmpsl
jb
jbe,pn
cmp
js
dec
sbb
push
arpl
push
sarl
sub
imul
cmp
or
ljmp
shl
std
mov
lods
xor
cmpl
xor
outsl
arpl
lods
add
pusha
cmp
aam
std
lcall
inc
stos
cld
loope
sub
sub
cld
out
int
dec
lock
jg
test
pop
pop
xchg
jae
xchg
adc
lods
cmp
inc
fnstenv
push
call
icebp
pop
inc
and
cmp
sbb
lret
bound
je
in
decl
xor
adc
push
test
sub
sbb
rorb
or
insb
fcoml
add
adc
cmp
fwait
xchg
pop
int
dec
outsl
shrb
aad
jo
mov
fbstp
or
movsl
jbe
inc
cmp
inc
or
xor
and
dec
std
jg
dec
std
js
pop
dec
shl
pop
xchg
jmp
fidivrs
iret
in
aaa
adcl
pop
icebp
inc
jo
cmpsb
jg
mov
std
mov
in
add
pop
xchg
cld
idivb
sbb
loop
ljmp
ljmp
mov
enter
test
pop
mov
push
incl
stos
mov
hlt
cmpxchg
pushl
orb
imul
mov
rclb
es
cmpsl
dec
lcall
push
jl
lods
add
xor
mov
push
outsl
or
aas
lods
mov
and
call
ljmp
in
jge
sub
movsb
lods
dec
xor
fidivrs
dec
pop
dec
adc
or
inc
mov
fucom
add
fs
mov
add
lods
int
jg
scas
lcall
and
xchg
out
and
int3
ljmp
jg
loop
dec
jg
loopne
mov
fcomp
mov
pop
leave
repz
jecxz
mov
pop
pusha
lret
pop
in
push
push
mov
decl
icebp
sbb
test
fs
mov
inc
or
ja
stos
xchg
push
std
lods
mov
pop
push
shll
xchg
inc
jne
int3
pop
pop
loopne
jmp
xor
aad
sbbb
push
pop
or
xchg
in
xchg
xor
pushl
test
pop
dec
pop
ds
cs
mov
fistl
dec
pushf
hlt
xchg
mov
mov
popf
pushl
mov
mov
popa
pop
in
adc
add
sub
lods
sbbb
jnp
fs
jmp
outsb
in
add
imull
ja
fcmovb
inc
cmpsb
jbe
jge
dec
push
xchg
insb
lret
popf
fldl
jg
sub
call
dec
push
jp
ja
mov
dec
mov
sbb
xor
mov
incl
int
mov
sbbl
js
popf
xorl
xchg
fst
sahf
mov
popf
sub
fsub
pop
sbb
int
popf
mov
loop
push
rorl
jge
ficoms
push
jno
lock
and
fnstcw
testb
or
call
jbe
pop
filds
movsl
fwait
pop
adc
pop
add
xchg
shrb
xchg
loope
add
call
push
enter
fdivr
addl
xor
jbe
lods
popf
loope
jecxz
call
in
movsb
cld
outsb
pop
sti
sarl
inc
cmc
jae
orl
mov
mov
stos
push
les
or
stos
lods
mov
and
push
or
lcall
pop
data16
sbb
xchg
mov
mov
pop
ret
movsl
xorl
inc
sub
sub
dec
lods
test
fcomip
inc
xchg
lods
out
push
imul
xchg
adc
add
call
cmp
cs
lret
fidivl
test
sub
int
out
cmp
pushf
add
mov
xchg
movsb
addl
mov
fisttps
push
mov
cmp
movsl
mov
mov
int3
pushl
xor
sub
rol
dec
dec
sbb
or
or
into
filds
test
cli
out
push
loop
jge
outsl
test
mov
jg
call
mov
jge
sub
out
mov
jmp
std
ds
dec
ret
push
mov
les
cmp
stos
call
dec
jmp
shr
mov
push
mov
xchg
sbb
iret
jbe
push
or
push
push
call
aaa
lods
cltd
iret
out
out
cmc
outsb
push
adc
jae
jb
pop
or
shlb
add
sbb
inc
in
repnz
call
sub
mov
stos
int3
call
mov
or
or
mov
pop
test
pop
add
in
pop
mov
aas
subb
pop
fadds
and
add
and
js
out
pop
in
sti
sub
cmp
push
int
enter
pop
mov
mov
popf
or
push
cld
fistpll
sub
js
or
decl
push
test
decl
inc
mov
adc
test
cltd
sarl
pop
mov
pushl
xchg
jp
mov
push
jmp
test
dec
fdivrp
call
scas
pop
insl
jne
mov
cmp
inc
jno
cmp
xor
fimull
in
jl
inc
mov
sub
dec
inc
push
out
cmp
sbb
xchg
mov
cli
pushl
inc
out
mov
mov
loope
sti
ja
mov
rcrb
lcall
repnz
in
push
sti
lahf
mov
mov
dec
pop
fs
outsl
das
sub
jg
in
in
xchg
or
xor
sbb
and
cmpsl
push
out
lcall
decl
cmp
or
xchg
scas
cli
pop
fldcw
in
cld
jnp
inc
sti
sbb
outsb
mov
jl
pop
mov
test
je
sbb
cmpsl
cmpsl
adc
jns
rcrb
push
pushl
mov
pop
jmp
jecxz
xor
add
dec
sub
mov
pop
mov
je
scas
sti
pop
enter
aad
add
call
bound
fmuls
lcall
cmp
mov
sbb
and
jg
cmp
imul
outsl
pop
sahf
mov
ss
inc
push
push
cwtl
cmc
lcall
ljmp
mov
test
sbb
mov
ljmp
lcall
mov
repz
cli
lods
push
cmpsb
jl
sub
mov
decl
imul
pop
stos
jg
stc
sbb
loop
add
roll
xchg
xlat
pop
dec
imul
cli
mov
stc
adc
lods
pop
jbe
and
add
popa
xchg
das
clc
lcall
mov
enter
mov
aam
mov
pushl
adc
adc
cmp
dec
icebp
sub
dec
jnp
jb
movsl
sti
push
add
push
imul
std
call
inc
cmp
sbb
jge
mov
lcall
mov
nop
lock
dec
les
inc
xorl
aad
and
shrb
lcall
neg
mov
jg
out
add
push
fists
shll
ljmp
orb
mov
call
shr
imul
mov
mov
jg
test
cmpsb
scas
jg
mov
mov
xchg
jmp
sarl
es
cmp
dec
pushf
arpl
pop
enter
test
call
add
push
jl
jb
mov
into
cmpsl
popl
dec
lds
repnz
ret
adc
xor
js
mov
out
fcos
in
rcl
arpl
fcompl
mov
mov
out
cmc
pop
jecxz
call
pushf
xlat
mov
notl
mov
xchg
and
mov
mov
dec
fisubrs
rorl
into
adc
test
iret
xchg
inc
xor
int
imul
pop
jno
js
outsl
sbb
sub
lcall
enter
mov
lods
xchg
iret
dec
pop
sti
mov
lcall
pop
dec
sahf
or
xor
jg
cmp
cld
insl
dec
xchg
ljmp
aam
and
stos
mov
call
push
cs
repz
repz
cmp
xchg
fisubrl
push
pop
inc
sbb
mov
shl
je
push
js
int3
push
mov
sub
cli
lcall
lods
sbb
pop
adc
cs
popa
cltd
lods
jb
or
mov
enter
mov
cmp
push
push
add
jae
scas
jo
cmp
divl
mov
pop
fs
aaa
push
add
xor
enter
inc
les
lds
daa
xchg
aas
enter
test
xorb
mov
lea
xor
dec
mov
aas
push
mov
or
push
cld
sbb
lahf
jbe
jl
jle
scas
repz
adc
mov
test
bswap
and
sub
pop
cmpsl
cmpsb
rcrb
dec
shlb
inc
stc
test
jns
mov
lcall
test
les
dec
ja
lods
adc
sub
mov
orl
mov
dec
xchg
scas
lret
movsb
stc
push
js
loop
mov
dec
cmc
sbb
dec
std
pop
xor
dec
sub
xchg
push
in
sbb
xor
negb
mov
mov
mov
or
testw
in
ret
inc
decl
stos
movsl
pop
lret
adc
pop
mov
push
xchg
mov
into
xchg
ss
push
aas
dec
test
cld
mov
add
adc
push
ror
jae
test
fwait
inc
clc
push
js
sbb
cmp
push
popa
jg
imul
es
sub
push
cmp
jns
inc
lcall
inc
dec
mov
dec
mov
jne
out
push
jl
mov
in
sbb
div
push
xor
xchg
shll
lea
fsubs
jg
hlt
and
repz
and
cltd
scas
fldt
and
push
sub
sbb
scas
mov
and
dec
xchg
push
inc
sub
daa
add
loop
test
lea
pop
movsl
adc
cmpsl
in
inc
sar
incl
sub
loop
xor
sub
arpl
mov
shll
test
outsb
cmp
call
push
and
sbbl
in
bound
push
cmp
or
jmp
lret
pop
jne
movsl
sbb
mov
sbb
call
push
mov
dec
gs
adc
lods
cmp
sub
lods
pop
ret
imul
in
fsubrl
dec
adc
push
lock
das
add
pop
mov
push
out
dec
loopne
push
out
sub
sub
jb
lds
les
jns
scas
mov
cwtl
add
test
xchg
cld
ror
dec
adc
jle
jmp
xor
sahf
cmp
sub
popf
and
mov
fwait
cmp
das
in
xchg
test
test
loopne
cmp
push
mov
aas
cmpl
mul
stc
pop
inc
or
int
jg
inc
daa
dec
xlat
mov
mov
ljmp
and
jecxz
sub
cltd
lds
outsb
xor
sub
test
sub
popa
push
mov
mov
shll
dec
lcall
dec
fldt
sti
sub
adc
jae
pop
aad
in
les
mov
out
fidivrs
lcall
call
mov
or
rorb
xor
cmp
adcl
lret
mov
cld
xor
cmc
pop
cld
lcall
inc
pop
movsb
jo
and
pop
jns
mov
sub
lods
inc
mov
sbb
jno
sbb
xchg
and
dec
mov
decl
sbb
js
push
or
dec
jno
test
jbe
push
sub
push
lods
pop
cltd
mov
pop
dec
adc
fwait
jae
dec
in
adc
sbb
mov
int
jbe
mov
push
cmp
jb
jmpw
mov
in
pop
out
mov
mov
mov
ljmp
xchg
or
dec
inc
pushf
ficoms
adc
rcrb
outsb
mov
outsb
adc
mov
or
in
mov
popf
mov
pop
lcall
rcl
mov
cltd
mov
pop
xor
icebp
sub
lcall
int3
stc
sub
cmp
in
insl
mov
mov
repnz
cmp
call
push
in
aam
cmp
adc
pop
dec
inc
and
or
xor
fisttps
ljmp
xchg
out
popf
or
pop
mov
inc
outsb
arpl
jg
je
testl
cli
or
fwait
sub
mov
outsl
inc
ror
mov
jmp
sahf
inc
clc
mov
addr16
rolb
sub
sbb
xlat
shlb
or
adc
lcall
and
xchg
int
mov
push
mov
aad
outsl
outsl
dec
pop
push
mov
ljmp
push
push
xchg
mov
daa
cmp
stos
aad
js
adc
call
add
movsb
jnp
dec
scas
lods
daa
jle
sub
fsubrl
ret
pushf
jo
or
imul
cltd
inc
mov
fiadds
stc
repz
loope
in
cld
and
and
fisttps
scas
add
inc
or
pop
out
sub
adc
filds
pop
pop
movb
cmp
and
fs
mov
fisubrs
aaa
pop
out
pop
call
int3
mov
test
stos
repnz
mov
push
pop
lcall
cmp
push
fldcw
scas
and
in
jg
inc
fldl
aad
sbb
cs
out
fwait
test
sbb
sub
mov
sub
sub
movsl
xor
sti
jnp
rorl
mov
mov
fsts
jo
jb
pop
xchg
stos
ss
addr16
gs
mov
mov
ljmp
mov
adcl
pop
sub
lcall
sti
mov
fdivr
shll
cmp
cmp
adcb
adc
sbb
out
and
scas
enter
ret
popf
and
mov
call
rcrb
xchg
sbb
and
mov
jmp
lock
jmp
sbb
leave
repz
ja
add
test
imul
pushl
sahf
mov
fwait
jle
aam
jne
xor
aad
dec
xchg
xchg
add
mov
ss
cmp
jle
dec
mulb
testb
popa
mov
xor
fwait
aaa
jg
lret
ljmp
sbbb
push
jge
cltd
sub
cmpsb
mov
and
cmp
add
hlt
ljmp
dec
jnp
add
adc
addr16
dec
subb
cmpsb
jmp
lahf
mov
ljmp
xchg
dec
lods
std
roll
xor
xchg
fmulp
divb
shlb
loopne
jp
ljmp
into
and
lahf
or
push
iret
xor
fidivs
aas
out
movsb
stos
data16
scas
cli
jp
aam
xor
xor
lock
sti
lods
pop
inc
push
fisttps
call
mov
dec
stos
cmp
clc
cltd
mov
jmp
movsb
push
inc
rcrl
fbstp
fistps
fistpll
mov
push
arpl
jb
ret
ljmp
mov
mov
test
mov
jl
mulps
sti
mov
jmp
push
or
xor
jmp
leave
jge
push
push
test
mov
mov
ljmp
xor
adc
mov
sbb
fidivrl
jg
push
xchg
inc
dec
js
popa
push
test
cmp
sbbl
test
sbb
gs
dec
jo
adc
jne
push
cmp
ficompl
cmp
ljmp
loop
adc
in
arpl
daa
add
sbbl
dec
add
sbb
in
add
sub
mov
cmp
cltd
lcall
ja
outsl
clc
jg
add
es
jbe
subps
cmc
addr16
call
sub
bound
push
dec
xchg
cmp
nop
jp
jnp
mov
call
hlt
push
sar
fadds
pop
jo
out
push
adcl
cwtl
xor
stos
xchg
popf
outsb
lcall
adc
xor
push
push
dec
shl
repz
dec
fisubl
clc
pop
cmp
and
push
ja
inc
in
jg
mov
pop
push
inc
in
xor
lock
enter
fsubs
sub
lcall
sub
pop
xor
pop
outsl
call
mov
cmc
cmp
jne
dec
popa
cwtl
mov
fists
jp
sbb
not
jle
adc
aam
push
cltd
filds
xchg
je
loop
incl
push
and
jno
idiv
fistpl
decl
xchg
inc
aam
invlpg
in
xor
dec
inc
call
jl
mov
pushl
arpl
add
pop
push
jnp
mov
enter
xor
push
fdivr
adc
sbb
jb
movsl
out
jnp
mov
fldt
push
cmc
stos
gs
incl
and
andl
xor
push
jno
sub
mov
call
ret
loopne
jle
dec
inc
pop
push
push
mov
mov
jnp
mov
fisubs
popf
pop
mov
pop
push
sbb
ja
stos
xchg
xchg
lds
pop
rorl
decl
cs
test
adc
lods
jno
cmp
pushf
xchg
cmp
enter
sub
incb
mov
add
mov
jbe
mov
loope
sbb
cmpsb
cltd
add
adc
ljmp
cmp
ljmp
mov
xchg
or
ja
nop
dec
or
decl
adc
and
sarl
pop
mov
xor
mov
xchg
out
test
adc
fsubs
xor
rcr
mov
popa
ljmp
xchg
sbb
mov
add
js
or
loope
or
sbb
jmp
ret
inc
popf
mov
fbld
into
outsb
rolb
mov
cmp
xchg
mov
dec
jb
cmc
push
mov
push
jo
repz
fldt
cmp
jmp
pop
shr
ret
sarb
push
in
mov
or
shrl
movl
js
sub
fldenv
fdivl
pop
sti
or
sub
dec
out
pop
and
mov
aaa
xchg
xor
out
adc
les
push
int3
testb
repz
lock
jmp
cmp
jmp
outsl
jae
mov
aam
loop
push
inc
xchg
std
or
arpl
jnp
mov
xor
push
mov
je
lcall
sub
sti
add
out
jmp
decl
inc
or
add
sbb
jb
andl
and
xchg
mov
in
mov
psrlw
repnz
push
and
cli
and
xchg
daa
fdivs
adc
mov
popa
imul
sub
sbb
movsl
push
mov
push
push
decl
push
ds
pop
test
loop
mov
icebp
push
mov
pop
out
cli
incl
jne
imul
lds
pop
int
cmp
fstl
jle
push
or
xchg
cld
lcall
mov
out
cld
roll
jle
dec
clc
inc
push
sub
test
cmpl
jl
shl
out
pop
out
movsb
cld
and
dec
call
ret
jb
jo
sbb
jns
sub
ja
bound
mov
incl
mov
sub
inc
and
or
and
mov
mov
pushf
ret
push
fsub
ret
test
inc
jle
lcall
data16
push
or
pop
mov
bnd
inc
or
outsb
mov
cmp
lcall
push
loop
push
ja
dec
xor
inc
lret
xor
sub
iret
inc
in
cmp
adc
aad
repnz
push
push
xor
mov
and
dec
lcall
lret
xor
cmovbe
pusha
popf
jns
push
jmp
popa
jg
jne
test
jl
mov
mov
stos
test
pushf
mov
xor
push
push
or
decl
outsb
adc
push
out
cmp
aaa
popf
sbb
or
cmp
fbld
insb
mov
sti
inc
and
sub
push
jns
lcall
pop
xor
sub
pop
jecxz
es
scas
pop
or
jg
xlat
push
dec
sbb
push
lret
mov
idiv
add
sub
cmp
in
xor
cmp
fwait
sub
xchg
iret
xchg
loope
call
in
aam
sub
ja
dec
dec
mov
aad
out
sub
rorb
push
scas
inc
je
bound
and
fcomip
cmp
and
or
mov
xchg
imul
incl
pop
testb
sbb
push
lret
in
dec
mov
push
push
add
in
fsubrs
add
sub
ljmp
pop
inc
imul
add
call
lahf
and
xlat
cmpxchg
pop
jle
mov
pop
add
ds
sbb
push
lcall
add
adc
push
lock
pop
jae
xchg
pushf
push
jp
sub
clc
decl
leave
in
ret
inc
repnz
popa
cld
in
test
incl
andl
fistl
int3
rolb
mov
sub
outsl
mov
push
lcall
sbb
orl
mov
imul
xor
scas
add
aas
mov
push
call
adc
ret
cmp
or
outsl
inc
jp
mov
fldt
mov
sub
decl
xchg
mov
into
movsl
loope
pop
push
loop
jno
ret
test
mov
decl
add
push
ja
ss
lcall
xchg
test
jb
or
aad
fcompl
pop
adc
push
aam
insb
mov
xchg
repnz
cmc
outsl
sub
push
inc
mov
pop
or
lcall
loope
cld
inc
dec
push
cmp
inc
nopl
out
mov
jo
jbe
sahf
push
jecxz
test
xchg
lock
jg
lcall
out
inc
push
jbe
or
or
push
push
fnstcw
mov
pop
xor
cs
mov
sub
test
fimull
mov
lcall
add
adc
aad
xchg
shlb
ljmp
jle
or
sbb
decl
fistps
iret
pop
stos
dec
es
mov
jg
jmp
movsb
fcomp
push
add
and
cmp
push
jp
xlat
aad
loope
lds
inc
xor
xchg
push
cltd
in
sbb
mov
popf
or
aaa
sub
xchg
mov
idivb
dec
mov
inc
sbb
xchg
mov
rol
lock
xor
mov
ljmp
cli
pop
fisubl
and
xchg
ja
cli
ljmp
or
jae
loope
cmp
hlt
xchg
and
lods
or
popf
enter
or
sub
cmpsb
ljmp
ds
testb
adc
pop
movb
or
ljmp
daa
pushl
aam
aaa
aaa
mov
xchg
hlt
popf
into
push
aam
xor
mov
enter
lcall
and
lahf
movsl
mov
shrl
xchg
imul
xor
adc
test
sbb
test
xlat
mov
ret
jnp
decl
fs
add
dec
test
aad
repz
daa
int
ja
call
ret
aaa
push
leave
test
hlt
cmp
sbb
inc
ret
mov
jnp
sar
jmp
push
std
sbb
inc
aaa
movsb
in
sbb
rcr
popa
int3
xor
inc
lock
pop
lock
jmp
cwtl
mov
and
fs
movsb
mov
sar
pushl
fwait
jle
add
test
push
mov
cmp
fcomps
out
mov
iret
lds
lcall
imul
pop
mov
ret
sub
lds
xchg
insb
pop
xchg
ljmp
xor
adc
or
push
ljmp
bnd
jle
add
adc
fcomip
call
jg
sbb
and
mov
sbb
xchg
daa
leave
loopne
out
cli
jmp
into
mov
or
cmp
je
sbb
mov
add
cmpsl
data16
push
stc
lcall
call
das
pop
jo
cmp
and
jns
xlat
cmp
add
cmpsl
cmp
inc
inc
cmp
sub
mov
ret
pop
scas
jmp
jne
xchg
adc
pop
lcall
mov
mov
xor
push
out
daa
fimuls
gs
cmp
leave
mov
incl
cwtl
in
out
xor
addb
jnp
or
cmp
pop
icebp
jmp
mov
repnz
push
neg
push
jne
lods
or
jb
and
ljmp
inc
xor
sahf
popf
pop
mov
or
test
out
clc
rcr
xlat
lret
mov
insl
push
xlat
cmp
ficoms
jmp
aad
xlat
std
pushl
jb
test
or
outsb
ljmp
aam
into
jmp
cmp
mov
bound
ret
dec
test
cwtl
inc
shlb
sub
scas
xor
sbb
outsb
mov
dec
cmp
jl
clc
es
and
mov
jmp
xchg
ds
xchg
pop
imul
insl
int
jns
xchg
pop
stc
es
scas
mov
dec
test
adc
push
add
jmp
in
and
leave
sub
dec
xor
imul
aad
or
jg
rcrb
jo
test
imul
and
in
mov
aam
ljmp
push
cmpsl
clc
xchg
mov
pop
cmp
mov
xor
or
idivb
adc
sub
lcall
test
in
out
jns
cmp
aad
pop
ret
std
call
push
or
fadds
in
push
insb
lods
xor
xor
fs
dec
imulb
cmp
mov
fiadds
inc
lock
lock
fisttpl
jg
lock
inc
xor
jmp
lock
es
out
sbb
xor
popa
ret
add
ljmp
popa
xchg
movsb
shlb
lea
add
mov
lahf
xor
sub
mov
push
pop
lahf
aam
dec
cmp
xchg
push
jmp
sbb
inc
add
int3
and
xchg
imul
sub
cmp
inc
aas
popa
movsl
cwtl
mov
sub
in
jl
pop
daa
jnp
stos
lcall
dec
inc
mov
xor
and
mov
mov
fdiv
jns
mov
xor
fcmovne
xor
incl
imul
nop
out
push
or
mov
aaa
sets
emms
dec
dec
xor
cwtl
mov
rcrl
mov
fwait
pusha
int
lret
sub
outsl
ljmp
cli
fbstp
lea
xor
std
sub
cmp
loopne
insl
push
outsl
filds
adc
mov
pop
mov
pcmpgtw
sub
lcall
lahf
add
lcall
cld
hlt
push
mov
stos
mov
or
popl
jmp
outsl
pop
rcll
dec
std
ljmp
sarb
adc
rorb
add
mov
pushl
mov
rcll
pop
aaa
add
jmp
mov
push
popa
jl
mov
push
jge
sbb
loop
fcmovnbe
fstpl
pop
adc
inc
xor
js
ja
mov
fdivrl
push
call
mov
rorb
call
shll
or
jg
mov
add
mov
and
popa
sub
mov
int3
xchg
mov
insl
xchg
cmp
mov
imul
out
pushf
lcall
cmp
xchg
cltd
cmp
decl
sub
xchg
push
adc
movsl
sbb
lea
and
in
das
clc
jmp
lret
inc
popf
dec
xor
jnp
mov
lcall
call
das
shl
mov
jb
jnp
jle
pop
or
mov
pop
fiaddl
cmpsb
loop
jg
jmp
in
mov
fucomp
pop
xchg
popf
out
pushf
mov
mov
jae
push
jg
xchg
mov
in
or
subb
fistl
add
fdivr
jbe
mov
insb
jge
add
cmp
fdivr
andl
call
push
push
faddl
arpl
and
ret
ss
mov
fdivrl
push
xchg
jg
into
inc
sub
rcll
dec
popa
adc
add
dec
xor
jle
lea
mov
adc
mov
xchg
lock
movsl
mov
mov
dec
jmp
pop
sub
pop
or
rorl
ljmp
stos
cmp
cmpsl
sbb
fsubrl
or
jno
out
and
std
enter
jo
scas
cmc
inc
jnp
aaa
or
jns
pop
popf
push
inc
lahf
add
mov
incl
lods
lahf
nop
ss
inc
shrl
push
rcrb
dec
cs
adc
mov
inc
cmp
sub
mov
pop
in
mov
stos
adc
and
pushl
push
mov
mov
rcll
lock
push
retw
out
andl
cli
lcall
gs
adc
jmp
out
dec
rcrb
pop
mov
ljmp
adc
js
clc
sahf
jmp
sub
sub
sbb
gs
jmp
imul
inc
push
and
jge
mov
adc
add
stos
xchg
jbe
stc
cmpsl
leave
xlat
inc
cmpsb
lcall
pop
fisttpll
xor
mov
xorl
out
push
cli
sbb
call
xchg
ss
cmp
and
jb
loopne
fisubl
mov
repnz
pop
in
mov
mov
cld
mov
or
sbb
or
aaa
xchg
xor
mov
out
lods
cmp
jle
and
movsb
ds
popa
cmpsl
or
repnz
inc
aas
iret
xor
dec
dec
add
push
xchg
cmpsb
pop
inc
int3
cmp
fwait
sti
test
xor
flds
pop
lock
test
push
inc
pop
lahf
in
cmp
fs
ss
jg
jmp
or
adcl
push
mov
add
out
enter
decl
sub
add
xchg
in
rolb
insb
adc
loope
xlat
ljmp
xchg
loopne
or
or
and
inc
fidivrs
je
dec
jp
mov
mov
xlat
aaa
test
rclb
add
pop
das
dec
pop
jns
dec
cltd
push
test
adc
imul
ljmp
mov
div
cmpsl
add
and
xlat
push
xor
and
sbb
cmp
push
sbb
stos
adc
adc
or
out
jo
adc
add
mov
mov
les
clc
xor
jno
sub
lcall
movsl
cld
cmp
pop
fwait
sbb
push
outsl
dec
dec
jmp
cmp
decl
test
xchg
imul
in
mov
pop
pop
lock
cmpsb
mov
cli
loopne
mov
outsb
lods
xchg
fdivr
in
test
mov
xchg
mov
out
adc
cmc
fs
call
xor
mov
imul
test
pop
sbb
shll
ret
cmc
lret
sub
cltd
cld
jmp
cmp
subb
or
out
pop
pop
inc
sti
pusha
stos
cltd
push
roll
lahf
mov
mulb
lcall
testb
cmp
mov
adc
test
push
push
iret
hlt
and
jl
inc
iret
jb
call
jbe
sub
jg
int
mov
ud1
mov
mov
inc
fmulp
push
std
cmc
sub
gs
jl
lock
pop
scas
push
and
shlb
ss
xchg
lds
stc
aas
mov
cmp
xor
cmpb
lcall
mov
loope
xchg
push
arpl
inc
mov
faddl
repnz
mov
subl
incl
inc
jae
adc
insb
and
stc
or
add
mov
inc
shrb
dec
addr16
lcall
imul
cld
dec
cli
lock
fcoml
dec
add
stos
mov
xchg
mov
or
pop
xlat
lds
shlb
loop
jecxz
je
daa
jle
sbb
ja
jmp
imul
jecxz
jb
pop
jl
call
xchg
pop
inc
push
or
push
push
aas
stc
jno
jnp
movsl
mov
inc
cltd
pop
cmp
rclb
int
pop
or
pop
in
cmp
lret
pop
xor
pop
int3
sub
push
mov
lret
xchg
cmc
mov
in
into
outsb
lahf
jle
out
daa
xlat
ror
cld
mov
jmp
jp
mov
jge
stc
lcall
cmp
out
mov
sub
or
dec
mov
insl
and
jmp
sbb
loope
cmp
call
outsl
call
or
pushf
mov
imul
mov
outsl
sbb
adc
stos
push
shrl
cwtl
pop
es
push
pusha
rcrb
xor
jge
push
jmp
int
sbbb
dec
pusha
xor
out
xor
js
sub
dec
inc
push
pop
sbb
pop
test
mov
jg
push
scas
fmuls
mov
pop
movsb
pop
jae
xor
jg
call
xchg
adc
mov
mov
out
cmp
pop
sbb
and
stos
sbb
jmp
sbb
xor
push
das
cs
add
out
and
sbb
and
fwait
aaa
inc
sub
sbb
lret
cs
push
test
xchg
rclb
loopne
sub
adc
into
or
pop
les
dec
sub
addl
idivb
aam
mov
pushl
repz
aas
aad
imulb
lret
push
adc
add
mov
sub
incl
lods
addr16
mov
popf
xor
insl
es
push
cmpsb
sub
in
mov
mov
mov
cmpsl
cmc
std
stos
add
pop
jl
xlat
icebp
pop
cltd
repnz
adcb
imul
imul
ljmp
es
inc
mov
mov
push
lea
jns
cmp
incl
mov
push
test
out
lret
std
ror
jb
push
mov
add
test
clc
inc
cltd
adc
into
nop
into
jl
jae
push
sbb
stos
jns
add
inc
add
outsl
xchg
icebp
scas
sbb
lock
cli
cmpsb
loop
jmp
mov
lds
dec
pop
xchg
xchg
into
rol
sbb
into
pop
mov
inc
pop
sbb
mov
fs
mov
out
xor
xlat
xor
out
ds
popa
mov
sar
das
push
std
jmp
dec
je,pt
int3
sub
popf
sbb
mov
mov
cwtl
inc
sbb
pop
mov
xlat
add
out
popa
xor
sub
adc
les
scas
aad
jmp
dec
fbld
jmp
mov
or
fcmovnbe
push
mov
sbb
add
ja
adc
sbb
dec
fiaddl
mov
mov
xchg
sbb
loop
scas
push
imul
cmp
pop
leave
jmp
and
test
mov
aas
push
out
stos
jo
and
push
or
es
mov
cmp
dec
push
rcll
inc
fcomps
rorb
mov
repnz
sub
pushl
mov
idivb
mov
push
je
mov
xlat
lods
outsb
sahf
cs
mov
or
decl
push
xor
xchg
mov
inc
insl
fdivp
adc
ret
mov
or
push
dec
lcall
icebp
pusha
mov
outsb
jo
aaa
mov
ss
mov
ljmp
or
jg
mov
pop
adc
sub
nop
mov
jmp
or
xor
insb
ret
mov
push
adc
enter
xchg
xchg
xor
fwait
in
gs
incl
cld
incl
mov
jbe
jno
push
or
int3
adc
fnsave
cs
pushl
jne
cmp
sahf
xchg
mov
popa
sarw
out
iret
outsl
adc
je
cmpsb
test
mov
sub
repz
inc
adc
lds
xor
ss
cmp
dec
arpl
call
mov
cmc
loop
cmp
cltd
adc
fistpl
sar
lcall
in
ds
rolb
call
inc
mov
arpl
xor
or
xchg
sbb
ja
shlb
fldln2
adc
jmp
clc
pushl
movsl
mov
lock
inc
int3
fstps
mov
ret
ja
sbb
mov
jne
or
inc
lret
cmpsb
pop
repnz
mov
push
testl
scas
decl
lahf
push
pop
sbb
lcall
vandps
jg
dec
shl
or
mov
ds
mov
adc
xor
cltd
adcl
lock
ljmp
jecxz
in
ret
repz
xor
xchg
movsb
into
jbe
lcall
push
mov
cltd
nop
sub
lret
adc
aaa
call
adc
in
int
incl
jnp
es
bnd
xor
insl
or
mov
bound
inc
mov
cmp
cmp
xchg
pop
pop
es
lret
and
ljmp
ficompl
stos
push
scas
imul
cli
dec
fs
sub
xchg
loopne
push
inc
mov
lcall
rcl
fisubl
sub
add
inc
loope
or
push
inc
inc
shlb
cmp
incl
sub
outsb
out
mov
mov
and
xor
cmp
pushl
popa
inc
inc
or
pop
jmp
push
xchg
jbe
repnz
ds
icebp
push
push
sbb
cmp
cmp
adc
shll
mov
mov
cmp
sbb
jmp
stos
push
je
mov
push
shll
cmp
mov
sahf
mov
jbe
mov
out
or
decl
xchg
fidivl
hlt
in
pop
sbb
call
xor
xchg
sub
dec
iret
push
mov
dec
sub
arpl
insb
xchg
push
adc
decl
mov
test
lcall
inc
jg
push
xchg
icebp
clc
decl
ss
dec
sub
pop
shrl
gs
and
mov
cmpsb
incl
dec
mov
cmp
xchg
pop
mov
test
les
stc
jne
ljmp
cmpsb
inc
mov
cld
mov
dec
das
enter
cmpsl
test
addl
push
loope
rolb
sbb
adc
cmc
xchg
xchg
mov
cs
daa
scas
daa
dec
leave
jne
add
add
decl
sbb
mov
push
lods
xchg
insb
mov
push
mov
push
inc
aaa
inc
std
pushl
xor
mov
push
add
jg
fdivrl
dec
daa
mov
mov
aam
xor
sarl
jg
dec
cmp
mov
mov
sub
out
sbb
int
adc
or
push
scas
cmp
mov
lea
hlt
cwtl
mov
xchg
loop
mov
movsl
mul
scas
sbb
lcall
mov
push
test
es
jbe
or
push
call
mov
jmp
sbb
pop
sub
gs
lods
pop
sbb
in
rorb
inc
call
jmp
nop
out
imul
clc
jne
add
pop
jmp
dec
push
adc
fcmove
pop
sub
adc
out
scas
lahf
xor
push
cmpsb
pop
push
scas
adcl
xchg
mov
sub
mov
scas
xlat
jmp
jns
or
scas
jg
inc
ret
cmp
pop
inc
adc
mov
jo
adc
jg
cmp
push
and
xlat
cmp
sub
imul
xor
in
out
scas
inc
addb
jmp
sub
repz
xchg
insb
lcall
sbb
adc
daa
loope
jbe
adc
incl
sbb
sub
mov
cmpsl
cmp
push
push
jmp
mov
sahf
mov
cwtl
mov
pop
xchg
pop
sbb
jl
call
movsb
mov
sahf
dec
nop
sbb
push
push
mov
mov
imul
mov
jg
mov
mov
ret
sub
lret
jg
hlt
cltd
push
sub
mov
inc
ja
fsubl
adc
or
jmp
popf
insb
stc
xor
mov
adcl
pushf
and
das
dec
fldcw
cld
inc
test
cmp
ret
mov
aaa
in
clc
jo
and
xor
jnp
pusha
mov
add
mov
dec
bound
pop
cmp
cmpsb
or
push
sbb
cli
decl
loop
add
jno
mov
aas
mov
scas
incl
mov
jl
mov
gs
jnp
repz
pop
test
cltd
and
pop
andb
xor
les
add
sbb
orl
inc
push
aad
xlat
dec
cmp
in
ds
adc
sub
xchg
repz
test
out
jbe
fdiv
jmp
or
xchg
imul
cs
mov
cmp
inc
mov
jge
out
movsl
lret
pop
das
add
mov
cmp
sbb
mulb
jg
std
aam
movsb
in
ja
inc
dec
aaa
push
popa
incl
push
mov
jecxz
test
test
jne
in
scas
mov
test
dec
jmp
push
push
into
nop
cmpsb
pop
mov
push
icebp
test
cmpl
push
lods
mov
pop
and
pushl
mov
or
out
add
mov
mov
inc
push
ljmp
jno
mov
xor
ss
gs
add
cltd
adc
test
repz
cmpsb
incl
fsubrl
xor
call
fs
jmp
push
in
mov
adc
stc
fidivl
dec
inc
mov
mov
dec
dec
push
ss
popa
xor
loope
out
pop
jg
push
sbb
je
fbld
or
stos
incb
hlt
lods
pop
out
in
repz
rorl
push
lcall
shlb
sub
test
sti
adc
es
pushl
sub
int
dec
or
dec
pop
jl
stc
push
imul
fdivrp
incl
loop
xor
cmpsb
pusha
xchg
inc
cli
in
mov
inc
push
imul
roll
aad
sbb
ljmp
inc
jecxz
pushf
clc
xor
dec
and
dec
dec
dec
stos
addr16
mov
xchg
arpl
lcall
incb
mov
mov
mov
xlat
into
mov
ljmp
lcall
movsl
sub
inc
xchg
push
adc
outsb
cmp
imul
aam
fs
push
decl
lock
cld
mov
add
bound
clc
push
cmpsl
mov
pop
icebp
scas
jg
test
imul
mov
xor
mov
inc
jbe
gs
xor
pop
mov
int3
test
adc
decl
xlat
push
and
pop
hlt
hlt
std
incl
adc
repnz
inc
pop
push
test
sbb
mov
call
pop
mov
es
cli
pushl
repnz
fbstp
das
xor
roll
jecxz
mov
mov
incl
rclb
push
in
fbld
out
adcb
jl
adc
sub
pop
js
mov
scas
pop
fdivrs
lock
jnp
nop
cmp
insl
ljmp
pop
ds
pop
gs
mov
fnstsw
cmpsb
sub
shrb
jno
sbb
int3
add
std
jo
iret
adc
mov
sahf
stos
data16
xchg
sub
out
ret
add
cld
das
sar
xor
dec
lea
mov
dec
sbb
in
test
aaa
fadd
adc
psadbw
inc
jbe
or
adc
pushf
cmp
jmp
dec
push
aaa
sub
or
sbb
cmp
mov
loopne
fists
lods
mov
cmpsl
rol
xor
cli
shrb
dec
pop
jge
mov
and
pop
into
sub
jg
add
dec
popf
sbb
ret
addb
adc
loop
rorl
out
mov
aad
xor
cmp
jp
mov
jl
ret
or
and
ss
loop
cmp
mov
call
fnsave
xchg
dec
ret
imul
fists
cmpsb
out
scas
jmp
ja
insb
arpl
incl
addr16
inc
lret
aas
pop
sbb
test
movb
sub
lock
xlat
sti
mov
jecxz
add
jne
test
js
mov
pop
addr16
leave
jle
cmp
and
pop
lods
adc
mov
mov
out
adc
dec
mov
dec
test
or
push
or
jnp
mov
xor
jle
cmp
mov
cmc
std
aad
stos
stos
adc
mov
jg
xchg
clc
pop
daa
mulb
les
cs
inc
dec
insb
xchg
xchg
pop
push
mov
inc
dec
xchg
and
mov
cmc
fimull
push
rcl
push
arpl
sub
aad
cmc
ss
ss
mov
jecxz
jp
inc
sub
or
fsts
xlat
popa
rcrb
arpl
cmp
push
dec
incl
xchg
xchg
dec
inc
pushf
mov
pop
sbb
xor
das
cli
call
cmpsl
jno
aad
xchg
aam
xor
imul
push
xlat
cmp
data16
lcall
push
clc
stos
push
lea
add
jg
stc
bound
cltd
inc
jl
sbb
sbb
mov
fdivp
fisubl
xorl
jg
cmp
jns
inc
fs
out
cli
mov
cld
pop
sbbl
stos
out
scas
jl
popa
push
es
ljmp
pop
sbb
out
jno
adc
pop
jg
ljmp
mov
inc
xchg
std
mov
jns
push
and
xchg
loope
call
mov
dec
sub
in
xor
sub
pop
iret
mov
jne
idiv
mov
push
add
and
jnp
pop
jnp
pop
dec
dec
xchg
fisubrl
push
mov
decl
call
mov
out
add
enter
cwtl
jl
lods
sbb
push
fcompl
jg
mov
hlt
push
sub
inc
dec
cmp
and
jno
insl
addr16
out
out
jne
sub
stc
xor
jmp
nop
test
ret
pop
xchg
jno
outsb
iret
inc
out
jecxz
mov
clc
dec
push
jp
aam
jmp
cli
sub
inc
popf
jne
iret
pop
sbb
js
decl
mov
xor
addr16
mov
shlb
cmp
jnp
cmpsl
mov
push
je
push
xchg
jbe
loope
ret
jl
pusha
cli
mov
gs
jns
adc
shr
outsl
push
and
mov
call
mov
repz
jp
lahf
add
mov
call
imul
or
clc
call
js
push
xor
pop
adc
ljmp
and
stos
repnz
leave
pushf
lea
sar
pushl
inc
pop
addr16
fstl
pop
lea
push
rcr
loop
ja
enter
movsl
dec
or
pop
sub
repnz
or
cli
fsubp
mov
fldcw
leave
sbb
push
mov
pop
or
lea
stc
fmuls
sti
repnz
imul
cmp
test
jne
lock
xlat
pusha
enter
call
outsl
cmp
arpl
sub
jmp
xchg
dec
xor
sub
lcall
and
or
jle
or
cmpsb
sub
cs
dec
jle
xchg
lock
sar
jo
sbb
icebp
sbb
popf
add
mov
ljmpw
ljmp
lods
sub
add
lea
jecxz
cld
leave
outsb
push
jae
fadds
fcmovbe
js
xchg
mov
mov
in
call
aad
pop
sbb
jle
dec
adc
loope
cmp
sub
stc
pop
rorl
ficoml
mov
rcll
sbb
cmp
sti
mov
fbstp
in
shl
test
add
icebp
and
push
gs
pop
sub
out
inc
into
pop
jno
js
sub
ljmp
cltd
mull
jl
sbb
mov
fmull
pop
push
dec
movsl
call
gs
ljmp
shlb
or
cmp
mov
pop
leave
add
addb
mov
jmp
fs
repz
in
call
pop
out
je
pushf
push
sbb
sub
fxch
data16
mov
or
decl
out
xchg
bound
push
insl
inc
mov
js
mov
push
dec
mov
outsb
out
rorb
in
inc
enter
loopne
sbb
cmp
into
sub
test
or
and
inc
or
jno
call
aam
pop
mov
cmpsb
mov
pop
sbb
mov
sbb
push
idiv
ds
sub
lret
jle
out
cli
cmpsl
xchg
outsb
add
aam
stos
ss
mov
sub
adc
out
mov
out
cwtl
and
lcall
fcmovbe
loop
data16
and
popf
lock
int
jl
sbb
mov
lea
cmpsl
pop
jae
xor
fwait
xchg
push
add
leave
fcomps
js
add
aam
inc
mov
mov
jle
jne
lock
stc
cs
pop
push
xor
dec
xchg
enter
pop
in
mov
daa
inc
lahf
cmp
or
pop
adc
cld
mov
outsb
jmp
adc
lcall
push
test
ss
shl
repnz
dec
aas
adc
clc
incl
push
or
push
aaa
mov
xlat
sub
cmpsl
stos
pop
popa
out
mov
pop
cmc
popf
push
std
inc
xchg
inc
dec
cmp
or
inc
cmp
pop
mov
mov
pusha
mov
mov
or
imul
sti
lahf
mov
ja
xchg
popf
pop
jnp
out
dec
lret
mov
loop
mov
call
negl
xchg
push
xchg
inc
loope
movsl
leave
jge
loop
call
jmp
mov
inc
xlat
dec
inc
mov
xchg
cmova
movsl
sbb
arpl
das
sub
fcmovb
mov
das
popa
add
mov
pop
cmc
jp
push
mov
jge
jl
ljmp
cmp
incl
movsl
cld
inc
jae
pusha
jb
aad
pop
into
dec
and
mov
and
sbb
call
mov
pop
ds
in
jbe
xchg
inc
adc
jns
sub
decl
and
in
stc
jnp
lds
or
repz
cmpsb
and
adc
push
or
jmp
pop
push
xchg
call
pop
sub
stc
loope
std
cmp
push
pop
or
mov
outsb
xor
leave
inc
addr16
mov
mov
sub
jbe
inc
rcll
mov
decl
jns
xorb
dec
aas
push
into
jl
or
decl
imul
decl
jnp
or
adc
clc
incl
or
dec
repnz
inc
or
in
cmp
rclb
out
mov
rorl
push
aam
add
pop
std
jge
xchg
mov
gs
icebp
mov
mov
loope
shr
test
pop
imul
and
xchg
xor
iret
or
das
sarl
fisubrl
incl
mov
das
and
fmulp
sub
shr
addl
lcall
ljmp
mov
enter
push
dec
aaa
sbb
js
in
mov
xor
incl
shlb
aaa
hlt
std
rorb
fstpl
adc
cmp
movsl
mov
fcompl
stos
push
inc
push
add
xchg
and
and
xchg
shr
lcall
fisubrs
xchg
xchg
jl
movsb
and
leave
fistpl
aad
inc
push
mov
dec
dec
mov
test
pop
pop
andb
mov
addr16
and
and
test
sti
dec
mov
das
sbb
adc
mov
push
push
aas
push
jg
lahf
add
ret
jns
lcall
scas
repz
movsl
lret
cmp
lcall
jne
adc
adc
or
xor
cmp
dec
data16
in
call
dec
inc
sub
and
sahf
out
push
movb
insl
int
js
push
insl
mov
popa
addr16
lcall
push
sbb
movsb
ss
sub
pushw
rep
cmp
jmp
inc
jmp
jmp
jmp
scas
mov
cmp
inc
and
cmc
dec
out
push
jno
xchg
filds
mov
aas
push
xor
call
inc
pop
cld
sti
jl
push
mov
or
loope
subl
cmp
add
fildl
xor
lret
mov
pusha
pushl
mov
or
mov
add
mov
push
mov
or
mov
adc
dec
sbb
lret
mov
cmpsl
roll
sbb
decl
testl
jmp
pop
gs
jge
pop
sub
push
stc
xor
fnstcw
jl
mov
aad
add
mov
ljmp
xchg
xor
ljmp
clc
and
push
xchg
adc
xchg
loopne
xlat
cmpsl
push
or
add
mov
and
call
ja
push
movsl
movb
pop
inc
jge
jl
lcall
add
mov
mov
adc
mov
call
and
add
dec
inc
fs
mov
pop
mov
dec
popa
mov
sti
add
push
incl
push
adc
push
sbb
imul
xor
push
pushf
sbb
ljmp
push
push
mov
cmp
rol
push
inc
popf
iret
cmp
sub
shl
call
loopne
inc
pop
and
and
ffreep
fimull
orb
inc
inc
lcall
filds
push
xchg
dec
movb
cltd
push
or
push
dec
fidivl
or
and
pop
mov
sbb
push
cli
mov
inc
jne
fisubl
push
sbb
call
cs
push
adc
gs
mov
test
inc
and
cli
rep
dec
jmp
and
jnp
in
lret
fidivrs
movsl
push
push
les
pushl
loope
fucomi
mov
inc
push
sub
and
push
pop
jbe
add
das
or
idivl
call
sub
jae
clc
cwtl
push
lret
push
mov
sub
aam
loopne
stos
repz
xor
pushl
cld
movsl
mov
jp
sbb
mov
mov
dec
stc
mov
in
ljmp
xorb
aad
movsl
sub
sbbb
push
and
adc
mov
lret
stos
xchg
push
jae
aaa
je
fldcw
jl
lahf
loop
inc
jno
and
push
mov
adc
test
incl
mov
push
jb
stos
out
mov
and
jns
adc
inc
ljmp
mov
adc
jle
jo
mov
negb
pop
mov
sbb
dec
push
inc
xchg
jnp
adc
jmp
stos
cmc
in
sub
cli
mov
lcall
mov
cltd
std
cmp
aaa
mov
fcmovb
in
mov
ljmp
dec
mov
add
adc
nop
std
mov
mov
fwait
call
xorb
hlt
jb
ret
sbb
pop
sub
imul
jmp
in
sti
or
inc
bound
dec
lds
movsl
sbb
mov
xchg
cmc
mov
add
scas
mov
sub
dec
xchg
mov
push
lcall
loopne
mov
push
scas
and
das
push
into
repz
inc
insb
mov
dec
loopne
ds
mov
decl
lods
xchg
clc
sarb
dec
mov
push
aaa
jge
mov
pushl
lcall
cmc
icebp
adc
popf
jle
pop
mov
jg
int3
mov
pop
fdivl
mov
out
pop
fwait
cs
es
add
aaa
sbb
outsb
mull
mov
and
adc
lret
or
cld
xchg
int
call
std
jecxz
mov
sub
shrb
test
les
mov
imul
ret
mov
sar
ljmp
movsb
sub
aas
aam
jbe
pop
cmpsb
dec
cwtl
ret
scas
pop
es
in
lahf
mov
pushl
cmpsb
lahf
cld
inc
and
mov
in
les
mov
test
push
dec
stos
and
jmp
inc
dec
lcall
sbb
add
dec
insl
push
mov
mov
add
decl
push
push
pop
popa
cwtl
pushf
sub
add
cmc
sub
in
int
clc
jmp
mov
rcll
iret
pop
inc
jl
xchg
fs
mov
push
iret
pop
pusha
fwait
inc
loopne
inc
xor
ljmp
jno
imul
lock
popa
mov
dec
ss
lcall
sbb
push
pop
lea
jnp
mov
scas
jo
pop
sub
dec
xorl
cld
repnz
xor
popa
in
cmc
push
add
call
adc
and
decl
push
xchg
shll
roll
jle
notl
ret
in
sub
in
sahf
pop
mov
and
adc
xor
cwtl
rcl
push
in
dec
ret
outsb
cs
call
stos
std
pusha
mov
push
in
pop
xor
cmp
mov
in
add
idivl
lret
pop
je
cli
mov
sbb
pushf
push
in
dec
add
rcr
hlt
inc
imul
lods
sti
xor
sbb
ret
ljmp
maskmovq
idivl
es
insl
mov
cmc
imul
dec
icebp
xchg
jne
lods
mov
ljmp
and
fsubl
pushf
outsb
and
push
xchg
loop
pushf
test
inc
cld
incl
mov
js
mov
bound
dec
lods
fs
push
ljmp
push
loop
lret
rcr
add
fidivl
adc
lods
jnp
adc
repnz
mov
lcall
jbe,pn
push
out
fs
pusha
cmpsb
xor
test
adc
das
cltd
aas
xchg
arpl
out
iret
fldl
ljmp
push
ja
adc
int3
rcr
insl
icebp
sub
enter
jle
pushl
add
inc
add
int3
adc
mov
or
pop
mov
call
jnp
sbb
mov
push
in
xchg
call
cmp
aaa
sub
in
push
or
clc
call
sub
mov
dec
cmpsl
lcall
mov
ret
mov
or
les
jmp
pop
andl
decl
inc
mov
sub
fsubs
jo
les
inc
inc
jecxz
shll
decl
mov
mov
add
out
sub
js
push
lcall
lret
ljmp
mov
fmull
or
jnp
stc
ret
mov
jbe
xor
clc
and
test
and
stc
adcl
clc
mov
mov
jb
cmp
add
sub
pop
insl
and
pop
lock
jecxz
scas
or
mov
stos
clc
cld
mov
repnz
incl
test
xchg
xchg
out
cmp
fsubrl
add
cmp
pop
xchg
add
icebp
add
dec
jmp
stc
dec
cmp
push
adc
jnp
add
sahf
add
and
add
addb
addb
or
add
jae
rcr
incl
or
xchg
ja
pop
fildl
bnd
mov
jg
add
pop
inc
sub
adc
and
pop
notb
pop
dec
orb
and
mov
or
dec
adc
dec
fs
inc
scas
jle
setns
sub
jg
add
dec
mov
loop
pop
imul
xor
fsub
pusha
or
jnp
xchg
out
mov
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
mov
es
push
movsb
push
movsb
inc
scas
push
outsl
out
cli
and
stos
push
and
push
test
and
imul
mov
sbb
pop
add
mov
cld
repz
mov
sbb
inc
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
incl
mov
insb
or
lret
imul
imul
imul
sub
lret
mov
jbe
fldenv
or
push
fdivs
mov
xchg
and
js
insl
sti
jbe
jb
ss
add
jo
mov
push
shll
add
outsl
lods
loopne
insl
push
shll
fidivrl
iret
outsb
or
push
ss
mov
sbb
jns
out
jge
mov
mov
xorb
ljmp
movsb
push
add
mov
jl
stc
mov
shlb
mov
lcall
add
jne
shr
data16
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
mov
push
data16
inc
ds
scas
cmp
push
push
shlb
mov
outsb
outsl
stos
aas
add
ja
fstpl
fldl
push
xlat
jne
add
ja
mov
insl
rcll
aad
push
xlat
ja
js
push
jl
sarl
jns
push
jp
jp
inc
push
fidivrl
push
insb
push
out
sarl
ja
fldl
rorl
jmp
ja
ss
jbe
xchg
sub
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
adc
test
movl
cmpb
lock
hlt
clc
stc
repz
repz
sti
cld
std
dec
or
inc
jo
add
mov
jae
add
int
xor
add
pop
add
insb
ss
pop
add
pop
add
or
add
adc
mov
add
mov
push
mov
add
add
jbe
subb
or
test
testb
stos
cmpsl
or
push
sbb
or
pop
pop
adc
mov
xchg
pop
adc
lods
add
sbb
sbbb
push
lods
lods
pop
insl
cmp
mov
add
scas
insl
add
mov
lods
pop
pop
adc
and
adc
sbb
fstps
sbb
scas
scas
scas
scas
sbb
inc
and
mov
mov
and
and
sbbb
push
xor
pusha
cmp
fiaddl
aaa
and
mov
mov
pop
and
sub
push
and
adcb
sub
pop
sub
mov
ret
sub
or
mov
xor
das
pop
daa
mov
adc
or
es
sarb
adc
cmp
mov
scas
pusha
add
mov
pop
xor
pop
iret
int3
into
int3
or
or
add
pop
xor
mov
pop
das
push
cs
xor
add
xor
ljmp
sti
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
and
call
test
mov
xor
jbe
cmp
jl
jge
jno
cli
cltd
fcmovu
add
pusha
pop
pushw
pushl
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
dec
xchg
popf
pushf
fwait
lcall
mov
mov
sub
cld
repnz
mov
je
push
bound
js
fidivs
adc
xor
jne
je
stos
or
adc
add
les
cwtl
sbb
add
scas
imul
std
jg
adc
jb
mulps
add
mov
std
out
mov
cmpsb
push
mov
xor
xor
inc
mov
push
ja
jb
cs
xor
mov
inc
and
pop
negb
ja
sti
jbe
dec
sbb
and
mov
xchg
mov
mov
pop
jo
push
inc
mov
cmp
mov
inc
sar
xor
enter
xchg
jp
inc
lahf
stc
mov
mov
aaa
add
xchg
jno
lret
push
bound
iret
mov
pop
mov
mov
inc
push
mov
dec
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
ljmp
dec
cmpsb
dec
push
dec
push
movsb
jae
add
jb
or
insb
test
push
mov
push
rorb
jge
ljmp
rcrb
insl
outsb
mov
decb
ja
sahf
jbe
fistpl
imul
std
add
ds
push
add
and
es
js
fwait
std
and
mov
shrl
insb
out
sarl
ror
push
insl
add
jno
add
jge
push
jg
fiadds
fisttpll
lock
mov
in
mov
fbld
stos
bound
out
arpl
push
ficompl
iret
sahf
mov
jb
sbb
in
push
jle
fwait
inc
pop
jecxz
or
push
lcall
divb
fildl
adc
push
subl
sbbl
sbb
sbbl
push
faddl
in
mov
or
pop
nop
and
out
xchg
in
xchg
dec
add
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
fbld
fistpl
es
pop
rorb
ss
cmp
aam
nop
aam
inc
jle
push
cmpsb
scas
jo
cmpsl
and
xor
loopne
sti
insl
shrb
fmul
mov
lgs
int
lahf
dec
pop
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
cmp
cs
dec
imul
dec
add
add
daa
add
push
enter
or
cld
femms
or
or
or
es
fidivrs
adc
push
adc
push
add
add
and
mov
ds
add
mov
adc
outsb
or
ds
icebp
xlat
push
and
sbb
mov
stos
add
and
pop
lods
mov
cs
mov
aas
add
repz
aas
mov
add
xor
or
aas
aas
enter
cmp
cmp
cmp
cmp
mov
ds
jbe
subl
push
incl
jle
cmp
scas
xor
dec
mov
jbe
dec
jle
aas
adc
in
fcomps
decb
test
jns
scas
add
mov
cmpsb
fcom
xor
pop
mov
ds
lods
stos
test
call
jecxz
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
add
mov
ds
xor
sub
sub
sub
sub
add
dec
and
inc
mov
lcall
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
lahf
call
xchg
xchg
xchg
mov
nop
test
insl
popf
mov
std
incl
jl
js
jg
test
jb
jae
jo
outsb
pushf
pusha
rcll
sti
mov
rolb
mov
aaa
inc
add
add
pop
out
or
fwait
jl
push
add
cmc
repz
dec
xor
aas
add
filds
mov
xchg
pop
cmp
test
add
mov
add
mov
push
repz
fisttpl
lahf
add
cmc
repnz
inc
add
movsl
std
in
jg
mov
popf
add
ret
push
in
lcall
sub
out
or
mov
push
push
dec
lret
ljmp
fmul
js
into
xchg
add
mov
mov
fistpll
loopne
test
scas
xchg
js
and
out
insl
xor
ds
sub
mov
fnstcw
push
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
fsubr
dec
dec
push
adc
add
or
pop
pop
mov
add
cmovg
inc
push
dec
sbb
fscale
dec
sti
inc
adc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
jmp
adc
sub
xor
xor
sub
sub
sub
add
mov
insb
fwait
int
pop
mov
mov
mov
mov
pusha
mov
addl
push
ds
add
subl
pop
addb
sbb
pusha
add
push
cmpsl
pop
adcb
jbe
incl
clc
sbb
mov
mov
or
outsb
sqrtps
fadds
mov
es
mov
cmpsb
pop
stc
cmp
testb
in
lock
push
or
or
adc
push
jg
fisubrl
adc
ja
aaa
inc
mov
subb
add
and
pop
lahf
add
jg
pusha
mov
out
cli
mov
add
xchg
cli
fists
or
inc
push
or
inc
lds
pusha
xchg
jg
sti
or
das
sti
mov
cmp
or
sti
jg
add
pop
xchg
adc
push
jg
jg
and
adc
ja
lods
and
idivb
cld
fs
and
add
orb
adc
jg
dec
sub
into
repnz
dec
mov
jg
and
push
adc
and
mov
or
incb
andb
jg
pop
fs
incl
addr16
add
dec
test
pushl
add
incb
jg
sub
xchg
fidivrs
jg
add
xor
lret
jg,pt
fcomps
add
push
jbe
lods
add
pop
pop
mov
jle
cltd
lea
sbb
sbb
xchg
push
call
mov
stc
mov
lret
imul
and
adc
mov
lcall
xor
jg
pop
cmp
addl
shlb
scas
data16
push
push
and
and
cmpsb
rolb
bound
add
push
and
orl
pop
mov
inc
dec
jg
jle
add
fdivrp
sub
ljmp
stos
fcmovnu
cmp
pop
pop
pop
add
daa
aas
mov
pop
add
mov
jle
add
fs
bts
mov
mov
ds
jmp
decl
dec
xchg
push
bound
add
repz
mov
das
insl
fcmovnu
sahf
pop
daa
push
arpl
es
pop
mov
push
mov
fcmovbe
out
mov
decl
dec
mov
pop
lcall
out
mov
ljmp
sub
ds
pop
loop
test
mov
test
mov
stc
mov
fnstenv
add
push
jne
pop
dec
or
out
push
jnp
adc
decb
js
adc
insb
dec
jbe
pop
add
rcrb
mov
ljmp
ds
jp
test
cs
jle
jbe
test
dec
incl
ss
or
push
rcrb
int3
ja
xchg
add
dec
call
enter
fiadds
mov
fldt
push
mov
and
jbe
sahf
inc
out
mov
sbb
cmp
xchg
outsb
fwait
insl
popf
inc
push
pushf
cmp
dec
or
push
xchg
xchg
xor
sub
sub
nop
daa
sub
in
mov
nop
fucom
dec
xor
call
inc
push
mov
xor
jg
pop
fnsave
xor
pushf
push
xor
inc
sbb
push
jbe
sub
pop
cs
add
sbb
adc
ja
dec
cmp
xchg
movb
ja
and
mov
add
adc
add
nop
fsubs
in
addb
cmp
add
dec
movsb
xchg
mov
dec
add
or
adc
pop
mov
orb
negl
sub
in
mov
mov
popf
push
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
sar
pop
test
push
in
add
mov
inc
adc
push
out
pop
xchg
cmp
or
jmp
adc
xchg
jnp
push
sbb
xor
cmp
jle
adc
add
pop
into
jmp
syscall
mov
sub
arpl
adc
stos
pop
xchg
pop
jge
call
add
sbbb
mov
jmp
cmpsl
sbbb
adc
out
movhps
add
push
jbe
sbb
mov
sti
ud0
inc
or
jmp
fcompl
adc
ljmp
or
gs
push
sub
incl
data16
or
sbb
cmpsb
ljmp
push
ljmp
scas
pushl
inc
mov
mov
cmp
push
add
adc
enterw
iret
jle
xor
call
incl
out
ret
stos
ud0
cmpsb
xchg
incb
nop
add
push
dec
decl
add
iret
inc
arpl
incl
mov
arpl
adc
fdivrp
mov
sub
xacquire
mov
sti
push
std
pop
and
call
decl
adc
imul
mov
sub
sgdtl
xlat
jg
or
out
cli
notb
dec
mov
test
imul
inc
push
sbb
jmp
ljmp
xchg
lahf
inc
pop
fcmovbe
pop
pop
into
ficoms
aaa
mov
nop
push
push
shll
mov
mov
roll
or
mov
xchg
push
adc
jmp
ljmp
mov
imull
inc
push
inc
inc
pop
insl
insb
insl
fiaddl
aaa
push
pop
mov
insb
fistps
stos
push
popf
inc
cmpsb
dec
xor
fimuls
inc
cs
dec
es
push
add
and
ds
push
add
push
shrb
rcl
outsb
dec
rorb
es
gs
das
data16
repnz
iret
insl
pop
daa
outsl
push
dec
ja
imul
dec
notb
push
jne
push
push
ljmp
inc
mov
dec
dec
pop
push
fcmovbe
add
repnz
push
insl
fwait
dec
cmpsb
popfw
cmp
aas
jmp
ss
decb
cwtl
xor
cltd
inc
push
xchg
push
push
xchg
hlt
push
lcall
scas
xlat
ss
xchg
es
xchg
xchg
xor
push
sub
jmp
scas
decl
xchg
mov
xor
xchg
fimuls
movsb
jg
add
std
faddl
stos
fstpt
push
jnp
jp
or
shrb
addr16
or
jl
push
jge
sbb
es
jbe
adc
fidivrl
dec
int3
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
clc
outsl
mov
fadds
loope
out
add
in
add
int3
mov
nop
negl
add
sarl
sbbb
mov
sub
push
adc
iret
mov
imul
cmp
jnp
lahf
dec
es
addl
ljmp
imulb
orb
jg
and
xchg
out
aam
aaa
hlt
push
sub
iret
out
mov
cli
incl
clc
push
idiv
inc
out
ds
push
jb
sub
jg
mov
icebp
push
push
dec
mov
pop
cld
adc
fucomp
daa
jno
sub
jg
mov
icebp
mov
xorb
fidivs
xchg
ja
loope
xchg
stc
bnd
cld
jp
es
xchg
subl
adc
incb
jge
and
adc
in
jg
dec
in
sarb
push
xchg
pop
ja
dec
iret
lock
mov
icebp
idiv
xor
push
and
lcall
push
faddl
pop
push
inc
inc
stos
nop
ds
int3
decl
mov
fidivrl
arpl
clc
jbe
mov
decl
pop
push
pop
and
into
and
push
pop
or
inc
push
xchg
scas
mov
fists
dec
into
lcall
push
jns
pop
sub
mov
push
jmp
xchg
jmp
mov
idivb
mov
push
xchg
mov
loop
adc
pop
clc
pushl
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
aas
test
inc
or
cmp
and
mov
insl
lods
imull
adc
push
push
mov
push
pop
mov
cmpsl
dec
loop
add
lret
and
push
adc
push
xor
inc
lahf
fiadds
ds
lret
adc
call
sub
mov
sbb
test
pop
push
sbb
xor
in
ja
sbb
push
or
and
or
inc
or
push
add
stos
push
stos
incl
add
dec
mov
add
or
dec
cs
ss
mov
adc
add
ss
mov
add
add
lods
icebp
inc
push
gs
jo
lret
mov
add
sub
std
and
dec
movsb
xchg
jo
and
sub
shll
out
lcall
add
xchg
sbb
mov
test
sub
lock
adc
sahf
lahf
jo
das
push
fcmovnb
cmp
fidivrl
add
imul
adc
push
insl
jo
les
add
pop
xchg
inc
sbb
mov
adc
ficompl
jns
inc
push
xor
aad
jno
add
mov
push
add
or
mov
cmp
adc
inc
mov
mov
add
mov
test
pop
pop
push
movsl
pop
xlat
push
rcll
xlat
mov
shlb
xor
mov
and
jb
add
add
add
inc
xchg
xor
rolb
filds
xchg
bound
mov
mov
pop
gs
add
mov
add
shll
push
dec
add
shrl
aas
xchg
test
sub
jae
lcall
lahf
push
stos
add
cmc
add
push
xor
shrb
jo
xor
mov
xlat
pusha
dec
push
outsl
loop
and
mov
add
pop
sub
and
je
push
fwait
ljmp
pop
pop
dec
insb
add
pop
out
inc
imul
sbbl
inc
sbb
adc
dec
cmp
and
in
add
pop
push
rolb
adc
add
add
inc
add
inc
or
add
cmp
insl
adc
mov
je
mov
push
sbb
movsl
fcoms
jo
sbb
fiaddl
xchg
inc
pusha
fisubrl
push
popa
and
aad
and
jne
cmp
add
add
inc
add
push
add
les
negb
cmp
jo
je
push
dec
lds
xchg
sbb
lea
rclb
mov
stos
xchg
dec
sub
xchg
add
add
jbe
dec
ljmp
add
add
xchg
push
fwait
popa
sbbl
imul
dec
sub
or
push
push
add
mov
jb
dec
cwtl
xchg
add
rorl
shll
or
jecxz
je
bound
adc
inc
iret
sub
mov
push
xchg
xchg
pop
lds
add
add
out
mov
test
rolb
adc
icebp
add
and
pushf
cmp
inc
and
rclb
pop
sub
sub
inc
mov
inc
je
jae
sub
test
je
add
in
mov
loop
nop
dec
imul
ja
adc
pop
add
mov
cs
stos
and
mov
sub
loop
mov
push
xor
jecxz
jne
inc
mov
cmc
mov
inc
outsl
jae
loop
outsl
jp
andl
popa
clc
mov
mov
cmpsl
adc
add
fldenv
pop
or
and
jno
mov
xlat
das
sub
aam
add
jo
sub
xchg
pop
sub
fcompl
mov
cmp
and
mov
adc
dec
sbb
adcl
inc
subb
data16
push
pop
imul
xchg
insb
jne
sbb
into
arpl
jae
test
lea
nop
pop
rcl
rorl
mov
rolb
push
and
and
testl
rclb
cmp
jne
fs
arpl
inc
or
push
popa
rcpps
mov
xor
jb
inc
adc
xchg
or
fs
push
sbb
in
fidivl
insb
push
sbb
out
add
jae
sahf
daa
mov
push
orl
jo
push
cld
stos
add
jb
neg
orl
jl
pop
js
inc
loop
dec
inc
add
xchg
add
lods
dec
add
sub
addr16
jns
lock
stos
dec
add
jo
and
popaw
push
addr16
les
dec
mov
jb
call
inc
mov
pop
xor
mov
ret
sbb
and
push
outsb
inc
sbb
inc
jnp
push
inc
pop
and
outsl
xchg
pop
inc
je
insl
dec
outsb
dec
and
add
das
pop
addb
sub
xchg
add
pop
add
add
shll
add
sbb
movsb
dec
lcall
or
or
imul
imul
out
shrl
es
pop
add
lods
nop
ret
nop
inc
add
movsb
outsl
xchg
add
and
addb
sbb
mov
jo
inc
fmuls
mov
inc
cwtl
out
test
inc
push
daa
es
nop
es
insl
subb
imul
mov
sbbb
or
inc
jmp
inc
push
test
es
in
mov
addb
sbb
out
ret
mov
xchg
les
inc
push
adc
sbb
add
push
inc
mov
sarb
das
roll
mov
loope
or
pop
push
inc
je
jne
lods
inc
mull
dec
dec
mov
jbe
or
sbb
int3
mov
scas
jge
out
out
and
xor
adc
ret
and
sbb
mov
jle
mov
outsl
inc
inc
xor
mov
dec
pop
lret
inc
lock
sub
repnz
mov
and
mov
popw
stos
adc
xor
adc
or
mov
test
dec
adc
or
call
adc
insb
movaps
js
gs
outsl
and
jno
in
loopne
push
cmpsl
inc
ret
sbb
inc
jle
lods
cmpsl
adc
inc
test
es
inc
subl
cmp
outsb
xchg
dec
insl
dec
inc
push
fisubl
dec
mov
jns
and
xchg
mov
push
push
push
arpl
test
xor
cmp
pop
xor
jmp
arpl
and
mov
mov
push
lds
sbb
mov
nop
fs
mov
loope
jns
sbb
lods
push
mov
mov
arpl
push
jg
aad
sbb
cmp
daa
outsb
pop
movsb
ret
sbb
roll
std
imul
lea
addb
jbe
enter
add
lahf
pop
and
add
push
fistpll
mov
sbb
push
jnp
mov
cmp
jb
gs
xor
sbb
adcl
in
arpl
jo
pop
int3
pop
movsb
sbb
outsb
inc
test
or
cmpsl
dec
dec
ja
imul
shll
add
aaa
ret
pop
sub
sub
jb
and
inc
ss
and
movsl
dec
das
fdivrs
test
les
xchg
faddl
lcall
daa
push
add
adc
adc
sbb
orl
nop
mov
lcall
sahf
fs
loope
mov
inc
dec
dec
mov
addr16
testl
addr16
rcll
add
sahf
push
cld
push
out
mov
or
orb
lcall
out
push
dec
and
pop
fistpl
ficompl
inc
add
pusha
xchg
jg
sbb
test
dec
xchg
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
